push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
and
sti
fnsave
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
sub
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
sub
jne
inc
and
push
pop
push
cmc
int
push
mov
xor
bound
sub
jmp
push
xlat
mov
add
lcall
hlt
add
sbb
lds
fnsave
add
mov
in
dec
test
inc
xchg
jno
das
xchg
ss
movsb
jno
imul
stos
into
pop
mov
sub
inc
dec
sahf
negb
cmc
pop
dec
pop
or
xor
sbb
pusha
fcmovne
push
adc
xor
lods
ljmp
fsubl
fidivs
mov
jge
mov
popf
jno
out
dec
jge
xlat
out
cmp
push
sub
xchg
adc
jbe
gs
inc
jbe
jns
iret
call
jp
mov
insb
xorb
cltd
lret
xor
mov
xor
sbb
je
and
mov
push
push
add
sub
data16
ret
mulb
mov
pop
add
rep
xlat
push
lret
flds
and
les
mov
mov
mov
insl
push
pushf
push
jecxz
fs
dec
xlat
cmpsl
pop
fst
int3
mov
jmp
clc
icebp
mov
icebp
ficompl
lahf
and
jo
jo
out
cmpl
call
add
bound
or
cmp
es
pop
jo
jns
dec
mov
std
in
mov
sub
xlat
fidivs
scas
mov
insl
push
icebp
addb
jg
add
push
cmp
sbb
add
scas
mov
jnp
loop
lods
subl
hlt
fcompl
sbb
push
jge
inc
xlat
fldt
jl
add
jecxz
shrl
mov
out
ljmp
lods
cmp
fwait
xchg
cld
xchg
lock
pushf
loopne
and
inc
mov
sub
cmpl
fcompl
in
mov
rclb
cmp
dec
outsl
pop
fisttpll
jmp
cmp
add
jle
or
adc
mov
add
push
clc
scas
out
add
add
incb
fstps
dec
add
adc
data16
jne
inc
cmp
pop
adc
sahf
ss
xlat
scas
iret
adc
jle
jns
mov
lock
push
inc
dec
movsb
dec
lahf
inc
rcl
ret
imul
inc
sbb
jns
clc
scas
sub
je
fsubs
inc
ja
fs
loope
hlt
cltd
es
xor
fwait
xchg
or
xor
sub
pop
jmp
jmp
enter
mov
imul
testl
gs
std
les
xor
ja
call
out
adc
dec
jg
jge
repz
aad
jo
push
dec
xchg
cld
cmpsl
dec
sahf
sbb
lea
scas
out
scas
jo
imul
test
cld
xor
sub
popa
xchg
std
xchg
ds
adcl
mov
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
roll
jo
jo
jo
add
pop
jp
mov
inc
pusha
cmp
iret
addr16
loope
int3
hlt
icebp
adc
int
push
scas
out
push
sub
js
rolb
xchg
xor
or
xchg
hlt
cld
lahf
mov
mov
jo
sub
test
mov
idivl
cmp
pop
mov
inc
pop
lret
adc
pop
loop
int3
shlb
ret
in
dec
add
imul
xor
inc
add
data16
push
shrb
jbe
lock
lret
inc
out
enter
in
pop
lock
push
sub
fisubs
fsubrp
xor
mov
repnz
cwtl
sub
and
in
les
int
jne
pop
mov
inc
inc
push
test
pop
xor
test
push
jmp
sub
out
sbb
mov
add
and
aam
jg
cmp
fisttpl
stos
push
fsubrp
sahf
repz
div
and
inc
push
push
pop
std
clc
notl
push
mov
int
lds
inc
pop
cli
sbb
dec
repz
pop
andl
sub
loope
and
inc
mov
or
and
mul
or
mov
pop
pcmpgtb
test
int
xor
add
inc
in
and
fcoml
sbb
jno
pusha
bound
out
sbb
xor
mov
mov
push
xchg
or
in
mov
mov
int
cmc
mov
pop
fmul
mov
or
push
mov
gs
loop
xlat
outsl
pop
arpl
insb
jb
sbb
popa
push
sub
and
push
xchg
stos
cwtl
push
push
das
lds
mov
mov
pop
cld
push
or
test
movsl
push
push
pop
jo
mov
xchg
inc
jecxz
into
pushf
dec
push
imul
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
sbb
jo
jo
jo
inc
lahf
adc
mov
xorl
scas
xor
insb
xchg
jmp
outsb
lret
jns
pop
jmp
adc
test
pop
jge
leave
out
mov
hlt
adc
fnstenv
push
call
add
or
push
jne
call
add
ss
mov
xor
scas
das
xchg
leave
mov
jnp
xor
es
pusha
and
inc
jae
bound
mov
add
subb
or
jne
inc
aaa
sub
adc
push
in
arpl
das
les
and
add
insl
fsubrs
xchg
in
call
das
pop
cwtl
jle
xlat
int
loop
test
hlt
pushf
out
ds
ljmp
mov
pop
out
cmp
dec
std
fs
enter
pop
cmc
jle
push
jns
push
jbe
xchg
dec
push
or
mov
mov
outsb
or
xchg
ja
fs
jns
or
fcomp
arpl
fdiv
icebp
xor
test
xchg
mov
cmp
jnp
sti
mov
andl
dec
outsl
bound
aad
push
stos
in
push
xor
adc
pop
push
sbb
aam
xchg
jmp
mov
std
nop
push
sub
pop
adc
insl
fwait
pop
lret
insb
fs
insl
pop
mov
fidivl
loop
adc
add
test
std
dec
loope
dec
mov
and
xchg
ljmp
std
sub
cmp
pushf
mov
je
mov
iret
es
xor
addr16
test
or
push
jmp
xchg
mov
xchg
insl
pop
push
mov
fsubl
cli
test
mov
xor
push
rorl
insl
movsl
sbb
xchg
inc
ficomps
push
test
mov
enter
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
cmpsb
cmpsb
jo
jo
jo
jo
jg
fstps
adc
mov
in
mov
dec
push
cmc
aas
jbe
fstl
push
sub
cmp
lea
xlat
sbb
popf
push
add
jns
jmp
sbb
clc
pop
sub
xchg
in
pop
mov
dec
jne
inc
pusha
xchg
mov
imull
inc
cwtl
mov
inc
mov
add
dec
mov
pop
jb
push
lcall
sti
add
daa
cld
xchg
and
rclb
scas
or
and
jo
cwtl
cmc
int
mov
fcoml
xor
lock
int3
push
mov
push
sbb
jnp
lahf
cli
inc
sarl
jns
xor
push
popf
out
icebp
sti
js
lods
repnz
scas
cld
xchg
aas
mov
push
pushf
es
pop
add
dec
outsb
scas
inc
xchg
in
adc
jnp
out
mov
xchg
inc
outsb
inc
adc
mov
sbb
pop
adc
imul
xchg
cmpsb
outsb
enter
mov
xor
jecxz
mov
jp
dec
mov
push
mov
mov
add
dec
loopne
push
cmp
mov
pop
jno
mov
mov
fbld
jmp
in
aas
loop
std
aad
scas
cld
out
hlt
adc
adc
movsl
mov
call
mov
xchg
mov
dec
mov
mov
or
jns
xor
jb
mov
outsl
ss
aas
notl
xchg
into
daa
mov
xlat
lret
aam
inc
pop
scas
inc
and
inc
xor
lds
jbe
xchg
inc
daa
or
and
and
ret
imull
fstpt
daa
fildl
add
mov
repnz
xor
inc
mov
call
jle
xchg
pop
and
shl
mov
das
push
movsl
movsb
sub
inc
roll
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
loopne
jo
jo
jo
jo
stc
cli
cmc
ror
push
lahf
movsl
push
mov
stos
js
ret
jmp
imul
fists
nop
ljmp
ljmp
push
pop
pop
das
movsb
hlt
add
and
add
mov
sbb
clc
fimuls
jne
cmc
in
sti
cltd
dec
push
cli
out
mov
jne
outsb
notl
jp
xor
es
xorb
outsb
adc
mov
add
and
sub
sbb
les
xor
ss
inc
mov
int
mov
jmp
inc
adc
sbb
adc
inc
shl
insb
inc
subb
pop
xlat
adc
lea
imul
cmpsl
push
xor
popf
je
push
out
adc
inc
inc
xor
js
fsubrl
xor
ja
xlat
movsl
push
jne
sub
xchg
or
jne
into
imul
subb
push
fsubs
test
xor
xchg
xchg
lds
andb
out
enter
adc
sbb
push
adc
sub
cmpsb
add
push
push
push
add
fcmovnbe
jl
pop
push
int
xor
xor
pop
inc
mov
or
jg
sbb
inc
add
call
inc
sarb
jle
jns
pop
fldenv
lret
arpl
jo
mov
mov
icebp
std
or
in
dec
dec
xor
jp
arpl
jno
mov
sub
pop
insb
daa
mov
cs
xchg
jne
ret
cmp
add
xchg
rol
dec
stos
or
adc
repz
outsl
test
mov
add
xor
xor
add
and
jns
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
sbbb
jo
jo
jo
jo
pop
xorl
outsb
sbb
lods
lcall
repnz
inc
fisttpll
sahf
jne
aaa
jge
out
data16
movsb
nop
xor
das
stc
pop
push
out
push
jmp
cs
sarl
cmp
push
pop
mov
shr
pop
pusha
js
das
lock
out
jne
nop
add
cmp
sub
jg
push
clc
add
lods
xchg
xchg
inc
push
cmp
inc
fnsave
mov
mov
sbb
jnp
xchg
enter
incb
ret
xlat
push
repz
pop
fs
ss
add
les
sub
sti
jmp
adc
test
mov
sbb
lds
idivb
subb
inc
shll
subl
sbb
testl
fcoms
push
sub
mov
dec
mov
fnstenv
mov
outsb
inc
out
stos
cmp
lcall
and
loopne
dec
sbb
mov
sbb
mov
loopne
gs
sbb
xchg
cs
cmpl
adc
movsb
mov
lret
js
subl
lret
mov
jmp
or
cmp
dec
fsubrs
adc
icebp
dec
mov
jge
frndint
sarb
cli
mov
push
popf
jecxz
xor
xorb
or
loopne
xor
push
pop
dec
mov
push
andl
aas
pop
fildl
je
xor
lahf
lret
jmp
stos
cld
imul
aam
dec
leave
cld
and
loope
pop
mov
pop
sti
iret
push
add
fistps
jo
mov
xchg
call
and
inc
or
jb
inc
fadd
cltd
pop
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
and
jo
jo
xchg
popf
jae
push
mov
xchg
call
arpl
jo
sbb
xorb
lea
cmc
xchg
add
pop
sub
add
fimull
imul
cmp
lock
dec
sbb
mov
jb
repnz
aaa
cmpl
pop
xchg
incl
rcl
mov
xor
das
inc
pop
popf
or
jmp
aad
nop
dec
push
jmp
xchg
mov
mov
push
sahf
add
int
mov
int
dec
jl
fldenv
data16
and
mov
inc
jb
ljmp
sti
cld
popa
jae
call
xor
inc
lahf
pop
popa
cmp
das
push
inc
dec
fnstenv
leave
ret
pop
pop
mov
add
int
lahf
mov
xchg
test
mov
cmp
ljmp
in
xchg
insl
mov
sbb
lcall
stos
xor
xchg
pop
mov
mov
sub
bswap
popa
inc
icebp
repnz
push
out
pop
xchg
mov
and
into
or
leave
mov
pop
out
popf
jmp
or
cs
sbb
jecxz
jp
in
cmp
call
jno
jg
sub
test
shrl
mov
outsl
iret
mov
rol
aas
movsl
insl
jo
push
stos
dec
dec
in
popa
cmpsb
xor
sub
stos
mov
push
xor
push
sbb
add
adc
test
xchg
gs
cmc
and
movsb
lods
les
jae
mov
adc
or
stos
fdiv
aaa
nop
clc
je
jmp
mov
lods
or
loop
les
shrl
fbld
fwait
mov
add
arpl
mov
rorb
mov
dec
pcmpgtd
mov
add
rorl
xlat
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
fnstenv
jo
jo
jo
adc
dec
iret
mov
pop
lcall
test
and
mov
jge
iret
or
sbb
movsl
mov
push
fnsave
mov
mov
sbb
add
jno
jle
xchg
mov
push
andl
dec
imul
dec
mov
sti
push
push
inc
jg
out
add
into
jle
mov
and
mov
test
add
sti
xor
push
jae
xor
mov
pop
sbb
mov
adc
orl
rcll
xchg
cltd
xchg
push
fistl
ss
movsl
popa
inc
dec
jmp
sub
jbe
leave
aaa
cmp
mov
jle
clc
pop
popa
gs
sbb
adc
test
bound
fcomi
sbb
hlt
jbe
xchg
xor
sub
or
fidivrs
leave
std
lods
sbb
xchg
push
lret
inc
je
mov
scas
jne
and
roll
cmp
in
jle
xor
dec
imul
int
sub
mov
mov
ror
or
in
sbb
lcall
test
or
aaa
movsb
push
mov
adc
inc
jmp
repnz
jb
cmp
cmp
pop
arpl
mov
add
arpl
jnp
add
add
int3
loop
fsub
xor
andl
in
cmpsb
jae
sub
xchg
insb
mov
movsb
in
mov
pop
lret
fwait
adc
xchg
push
daa
enter
clc
push
nop
ljmp
movsb
inc
push
xchg
fdivs
xor
jecxz
aad
nop
jo
shll
push
or
sbb
cli
sahf
fidivl
jbe
dec
test
push
daa
mov
icebp
adc
call
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
out
push
jl
jno
mov
dec
aaa
pop
sbb
aas
nop
into
adc
mov
pop
lods
test
jae
push
addl
jmp
xor
inc
and
mov
hlt
mov
inc
mov
jb
orl
stc
rorl
xor
jbe
in
xlat
push
sub
outsl
sbb
inc
pop
cli
ret
outsb
imul
pop
add
xchg
sbb
push
nop
jb
mov
xchg
and
cmp
mov
inc
loopne
or
lods
dec
pop
pop
jae
out
mov
sarb
adc
scas
nop
push
rcll
inc
cmp
testl
ljmp
dec
sarb
push
ljmp
cmpsb
add
ljmp
xchg
in
cs
pop
nop
lds
push
sub
adc
lods
xchg
mov
mov
loope
adc
sub
outsl
pop
and
xor
and
xchg
leave
mov
cmp
inc
push
loop
push
imul
dec
push
mov
inc
mov
addr16
inc
imul
adc
and
mov
popl
pop
or
loopne
popa
pop
ds
pop
pusha
adc
sbb
inc
popf
xchg
push
outsl
arpl
icebp
mov
stos
xchg
mov
push
out
lcall
ljmp
out
sbb
push
cmp
int
mov
adc
cli
jle
insl
pop
inc
leave
jp
xchg
cwtl
pop
push
loope
xor
repz
mov
pop
cmp
inc
jge
sub
imul
lea
mov
dec
jne
push
add
push
ds
pop
in
test
addr16
xchg
push
ret
cmp
outsb
push
test
sbb
fistl
mov
inc
adc
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
sub
movl
jl
add
adc
lret
or
pop
pushf
aas
repz
lahf
jge
mov
call
in
cmpsb
and
push
loopne
testb
pop
inc
push
leave
in
shrl
or
in
xor
or
adc
sti
or
push
shll
dec
xlat
bnd
fmull
push
jbe
dec
mov
sbb
into
xor
aaa
lret
jb
jl
xorb
mov
and
pushf
mov
sahf
sub
mov
add
out
scas
fwait
push
mov
loopne
rolb
aas
rcrb
test
dec
cwtl
pop
sbb
fwait
and
xchg
inc
adc
out
out
sbb
stos
test
cmp
push
fcmovnu
packuswb
mov
lret
mov
subl
fdivrs
xchg
in
cltd
mov
fs
mov
and
add
mov
sbb
adc
data16
scas
lds
add
ficompl
in
mov
inc
pop
jno
int
das
adc
jg
xor
push
cmpsb
popa
mov
test
popf
mov
inc
sar
mov
roll
fisubs
jge
jmp
xor
fdiv
repz
jecxz
pop
aad
aad
jno
add
cmp
rclb
push
test
loop
cltd
daa
add
scas
push
mov
pushf
cld
loop
aas
dec
or
loopne
pop
mov
ljmp
in
jne
pop
adc
shll
mov
rcrl
movsl
je
into
insl
sbb
stos
std
lds
fmull
push
bound
test
mov
out
clc
scas
adc
jo
aaa
call
mov
jl
jno
xchg
lret
inc
shll
jecxz
bound
mov
decl
push
mov
mull
dec
jb
or
push
scas
jg
and
mov
sbb
es
pop
adc
push
addr16
adc
js
adc
cmpsb
push
jno
push
fildll
outsb
mov
pop
loope
leave
pop
dec
adc
data16
seto
pusha
mov
xlat
xchg
stos
pop
in
jbe
mulb
or
mov
and
jecxz
clc
negb
mov
xchg
bound
stc
rorb
out
mov
fcmovbe
into
mov
insb
enter
es
mov
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
out
aas
cli
mov
jle
jo
cmp
rcll
in
dec
sub
jle
test
add
movsl
je
and
or
daa
push
cmp
or
adc
es
divl
mov
pop
in
or
push
mov
push
mov
xor
sub
fdivrl
jb
sbb
sti
movsb
mov
aaa
adc
xchg
add
and
int3
test
imul
orl
int
add
sub
int3
cmp
pop
mov
or
push
lds
out
mov
push
test
iret
mov
mov
mov
push
or
adc
ret
mov
inc
sti
lods
mov
push
out
out
mov
sub
pop
push
jbe
daa
mov
push
xor
mov
es
mov
in
iret
scas
cmp
pop
lcall
rcll
inc
aad
mov
jge
mov
dec
jle
test
mov
gs
lcall
pop
jge
xchg
fwait
xor
fcmovu
sbbl
cltd
ljmp
mov
mov
testl
outsl
push
out
lea
mov
add
and
mov
sub
pusha
loop
jg
popa
xchg
mov
mov
pop
push
rorb
and
push
push
shlb
daa
mov
jle
xchg
and
out
push
jno
pop
sub
or
out
mov
and
jns
mov
rcrb
and
mov
popa
inc
lods
shll
cmc
imul
nop
jle
mov
mov
cmp
lea
mov
and
add
mov
adc
es
dec
adc
das
repnz
xor
nop
mov
ficompl
mov
jp
std
testb
sbb
push
sbb
mov
sbb
mov
sbb
and
test
mov
mov
leave
call
fcoml
and
xor
neg
sahf
fidivs
gs
and
in
sbb
enter
daa
in
jp
movsl
push
cmc
push
int3
adc
int3
lods
imul
fisubs
stc
jl
jo
add
sub
sbb
outsb
or
aam
sbb
push
fidivrs
mov
xlat
mov
lahf
cmpsb
push
lds
cmp
cmp
sarl
inc
sarb
mov
leave
imul
js
jae
inc
loope
mov
xor
or
frstor
or
mov
mov
xor
add
jmp
fistl
loope
lds
add
ljmp
cld
pop
jo
mov
adc
pop
push
sahf
and
frstor
sub
pusha
cmp
mov
xchg
addr16
icebp
mov
repnz
fsubp
adc
jmp
push
mov
sbb
mov
dec
test
or
stos
pop
add
cmp
add
push
daa
push
inc
or
test
pop
lock
mov
adc
popa
icebp
or
pop
xchg
sahf
cmpsb
pop
pop
jg
popf
xlat
movsb
jmp
xor
movsl
pop
ret
cld
and
pop
mov
mov
imul
xorb
ret
sahf
push
sbb
push
lods
ret
jl
jp
jno
add
jo
inc
and
gs
hlt
xchg
into
negb
adc
cmpsb
outsl
sub
aad
xor
lret
test
pop
add
or
sbb
test
xor
lret
dec
push
pop
add
test
mov
sbb
mov
xchg
mov
inc
sub
bound
movb
inc
and
jecxz
scas
or
xor
test
mov
push
xor
xor
aas
jp
adc
ss
dec
push
cmpsb
arpl
mov
lret
or
and
loopne
inc
sub
xchg
sbb
fcompl
push
popa
xor
mov
dec
adc
dec
cmp
ds
aam
xor
sub
inc
scas
jp
or
cli
call
in
pop
pop
outsb
and
xlat
aas
sarl
je
sub
je
lahf
mov
xor
dec
popf
outsb
push
sub
or
jmp
sub
xchg
add
into
fcmovnu
nop
pop
push
jg
and
aam
out
lds
mov
mov
rolb
clc
js
stos
inc
jae
int
or
add
sub
cltd
adc
popa
add
xlat
adc
fiadds
addl
add
stos
push
addr16
andl
jg
push
in
mov
in
sub
xchg
idivb
cltd
mov
js
mov
lcall
xchg
inc
orb
test
dec
outsb
mov
ss
mov
pop
pop
and
add
clc
shrb
push
cwtl
dec
or
add
mov
addr16
jo
adc
rolb
and
out
mov
ljmp
dec
pushf
and
pop
lcall
jmp
and
and
sub
icebp
loop
mov
dec
incb
cltd
cs
mov
orb
sar
sbb
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
pop
addl
adc
jo
jle
jo
mov
cmp
pop
xor
xchg
push
or
jl
fwait
les
aam
push
xor
jnp
fldt
out
in
pushf
jnp
sarb
pop
call
mov
es
enterw
aaa
pop
sti
cmp
scas
cmp
ret
and
mov
xchg
or
pextrw
add
mul
out
mov
push
cs
ljmp
out
mov
aam
lret
push
add
xchg
pcmpeqb
sbb
fcomp
aaa
rorb
out
xor
and
jne
mov
mov
mov
cmp
xchg
dec
loopne
fmuls
or
mov
lds
cltd
fs
and
mov
stos
push
xor
testb
and
pop
xlat
sbb
stos
cmp
mov
inc
fwait
in
sbb
push
xor
xchg
push
jno
jmp
jno
inc
pop
mov
fdivrs
sti
addb
mov
or
sti
jecxz
or
sub
sbb
mov
addl
je
sti
inc
sub
mov
adc
popf
xchg
subl
pop
lcall
int
clc
out
jge
fbstp
imul
mov
test
bound
adc
jmp
flds
cmc
mov
addr16
sub
xchg
pop
orl
mov
sbb
stos
lea
add
in
mov
sbb
dec
pusha
lds
cmpsl
movsl
lea
xchg
lretw
sub
ds
loop
inc
aas
je
cwtl
mov
lock
dec
sub
loope
out
jg
aad
dec
repnz
add
in
ja
sbb
dec
xor
inc
add
cld
loopne
testb
jo
sbb
jmp
sahf
mov
inc
cmp
sbb
mov
sbb
and
xor
cli
sbb
es
sub
xor
xor
shll
call
mov
jg
mull
dec
outsb
mov
lods
cmp
mov
divb
sbb
xchg
lcall
or
and
xorl
in
inc
mov
js
mov
aam
or
fcompl
test
in
fdivl
fistpl
dec
pop
mov
subl
fcoms
and
insb
das
inc
out
repnz
mov
sub
cvtps2pi
aam
dec
adc
inc
jns
movsb
std
xchg
out
insl
adc
adc
mov
jl
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
sub
jo
cmp
mov
insl
arpl
cwtl
and
jns
adc
inc
inc
jno
pop
cltd
je
aam
push
xchg
dec
cmp
call
psubd
push
xor
out
jo
cmp
js
out
mov
aaa
adc
stos
sub
sahf
cmp
rcr
cmp
push
pop
test
push
or
or
pushf
sub
push
loop
mov
setge
fdivrs
and
inc
xchg
ljmp
movsb
xor
and
jl
into
jne
sarl
push
fcompl
adcb
xor
sti
arpl
inc
decl
xchg
imul
and
inc
das
sub
sti
lods
pop
and
in
jne
shlb
outsl
and
iret
or
xchg
mov
xchg
into
cmp
dec
nop
pop
inc
cmp
jl
loope
and
cmp
or
xor
outsl
lret
add
fidivl
std
push
pop
push
lcall
mov
mov
movsl
fs
jmp
cmpl
sahf
fists
cli
scas
icebp
inc
movsb
and
repz
cltd
xchg
sti
out
loop
mov
psllq
jno
addr16
cmp
add
pop
lds
xor
or
mov
xor
mov
clc
lods
xchg
push
push
or
arpl
xor
movb
or
cwtl
stos
insb
outsb
pop
packssdw
ficoms
jns
insb
jne
adc
jne
cmpsl
clc
add
popa
cmpsl
fimuls
mov
mov
shrw
cmpsb
addr16
fs
inc
and
mov
out
jecxz
mov
cmpsl
pushf
xor
cli
mov
outsb
push
cmp
sub
insb
xchg
xlat
mov
ret
push
mov
inc
aam
mov
cltd
cmp
jae
jnp
test
int3
jge
test
stc
pop
lret
xlat
or
cmpsb
push
cmp
jp
xchg
or
repz
outsb
sarb
dec
sbb
sub
loope
ss
xor
inc
or
dec
add
jge
mov
loop
mov
andb
or
sahf
addb
mov
pop
insl
mov
into
cmp
jnp
outsl
or
je
cmpsb
sti
movsb
mov
mov
jecxz
adc
pop
adc
in
cmp
ds
add
lret
out
push
mov
sbb
fisubl
stos
cmp
jge
xchg
les
xor
cmc
loop
add
pop
loop
sarl
mov
cmc
pop
call
mov
xchg
aaa
mov
mov
xchg
jl
test
out
push
test
das
push
sbbb
mov
dec
ds
adc
inc
pop
mov
test
rol
ret
and
push
fstpt
xchg
adc
add
dec
stc
or
movsb
sbb
xchg
sahf
xchg
iret
sbb
sti
pusha
loopne
stos
stc
inc
rorl
mov
rolb
out
jo
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
fwait
lds
jo
cmp
xor
aaa
sti
mov
add
jne
inc
jnp
rolb
mov
xchg
imul
sub
js
add
clc
adc
in
test
add
jne
lret
testl
inc
mov
lea
xor
fsts
cmp
xlat
xor
imul
out
popl
cld
jno
jns
fstps
and
pop
xchg
jbe
enter
ss
xor
add
int
pushf
xor
jb
cmp
sbb
test
xor
enter
popa
sbb
mov
cmp
pushf
scas
lcall
test
popl
push
pop
jge
inc
xchg
xorl
push
cmp
xchg
mov
add
xchg
mov
lods
movsl
pop
loope
loope
xchg
adcb
insl
push
and
popf
adc
mov
out
push
push
nop
ds
pushf
sub
fs
imul
add
shlb
movsl
rclb
xor
scas
imulb
movsb
and
add
push
mov
dec
mov
push
xor
mov
jno
in
jmp
xlat
gs
aam
mov
les
popf
es
inc
xor
movsl
pop
jb
and
loopne
cmp
jb,pn
dec
cmp
outsb
pushl
clc
sub
mov
push
jg
js
repnz
or
add
insl
stos
add
dec
cmp
mov
fildl
push
pop
mov
jle
pfsubr
or
jmp
addr16
addb
mov
loop
es
push
mov
popl
stos
sub
sub
sahf
fwait
dec
sbb
jne
aam
repnz
test
add
adc
push
negb
pop
mov
add
xor
loop
aaa
add
cmp
negb
loopne
fs
nop
int
cmpsl
dec
movsl
push
arpl
push
mov
xor
cmp
int
repnz
repz
stos
pop
jae
outsb
jb
and
pop
dec
out
mov
sub
jns
pop
push
sti
dec
js
sbb
insl
gs
sbb
push
xchg
push
imul
imul
subb
xchg
bound
outsl
add
ljmp
repnz
jo
inc
mov
sub
mov
rcrb
sbb
mov
dec
push
cmpb
pushf
icebp
mov
sar
ficoms
fdivl
xor
lds
mov
and
movsl
mov
jmp
pop
mov
or
xchg
loop
inc
scas
icebp
outsb
lock
aad
lea
cmpsb
hlt
sti
call
mov
adc
jg
mov
jge
inc
push
adc
dec
test
cld
icebp
push
pop
aam
aaa
addr16
into
xor
arpl
xchg
mov
inc
cmpsl
and
jno
stc
add
mov
jnp
pop
lret
lahf
mov
rcll
pop
xor
lock
daa
iret
jbe
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
sub
sbbb
jo
jge
jo
stos
cmpsb
ret
scas
mov
fnsave
xchg
mov
or
xor
cmc
pop
push
pop
sbb
insl
ftst
pop
repz
loopne
ds
pop
in
inc
out
xchg
rclb
xor
jle
fmull
mov
mov
xorl
xlat
adc
adcb
add
mov
sbb
xor
in
mov
fdivrs
bound
add
push
cmp
nop
pop
arpl
jge
pop
and
jl
cmp
call
adc
cmp
shrl
add
dec
mov
and
in
jge
pop
adc
insb
das
push
shll
gs
xchg
loope
fldcw
push
out
mov
adcb
fsqrt
jns
jg
mov
shll
push
pop
jge
jbe
inc
add
imul
sarb
scas
iret
lret
jbe
dec
xchg
mov
sarb
jns
out
or
lcall
push
xor
aaa
xchg
ljmp
aam
adc
loop
pop
inc
cmp
ss
hlt
fcompl
fs
stc
loope
outsl
fptan
out
mov
lods
cltd
inc
cmp
subb
mov
lods
int
dec
pop
ret
ss
mov
sbb
adc
mov
dec
mov
mov
out
xor
fs
aad
scas
push
lret
xchg
bound
faddp
push
mov
sbb
inc
fstpt
int3
cmpsl
leave
push
jns
sbb
rol
imul
pop
fadds
push
test
mov
xchg
pusha
jg
popa
fidivs
mov
sub
lods
add
gs
addr16
mov
jne
sbb
dec
add
mov
or
push
scas
insb
movsb
dec
push
test
push
or
clc
push
fidivrl
jne
sbb
insl
mov
mov
lds
cmp
sbb
xor
sbb
mov
sbb
in
xchg
cmp
mov
or
es
in
mov
xor
lods
sbb
xor
ja
mov
xchg
sub
sbb
sarl
jnp
notw
hlt
lods
insl
jne
inc
addr16
loop
jbe
dec
xchg
je
daa
mov
mov
xor
jne
outsl
and
mov
adc
jmp
int
test
cltd
ret
mov
mov
lods
pop
push
pop
gs
lds
in
push
or
movsl
repz
hlt
ret
sub
xchg
dec
dec
bnd
mov
int3
push
add
fmul
mov
shl
and
lods
inc
stos
test
sub
push
fisubl
in
fs
pop
cmp
push
or
dec
das
and
jg
shr
mov
enter
test
add
jnp
sub
out
sbb
mov
push
daa
in
cmp
in
out
inc
push
cmp
cmc
aad
aam
inc
add
and
lea
std
adc
repz
nop
fisubs
cltd
addr16
pop
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
xorps
and
dec
sbb
cmp
movsl
xchg
cmpsb
xor
nop
leave
cwtl
cs
pop
cmpl
cwtl
mov
fsts
cmc
mov
outsb
scas
mov
ret
adc
ss
stos
fwait
cltd
mov
call
add
lret
mov
xchg
pop
xchg
cli
mov
jno
xchg
std
pop
in
les
loopne
push
mov
divb
cld
add
jmp
pop
mov
mov
pushf
push
adc
sbb
xor
dec
test
pop
and
push
incb
test
mov
push
pusha
scas
mov
es
mov
in
xor
xchg
ljmp
dec
dec
test
leave
xor
push
cld
pop
ret
cmp
pop
call
mov
push
cmpl
sbb
jmp
test
inc
lret
lcall
out
cmp
xchg
ja
mov
mov
xchg
clc
xchg
dec
pop
leave
adc
pusha
inc
loopne
or
mov
adc
cmp
nop
lods
decb
cld
cltd
push
loop
fistps
aam
jp
adc
xchg
gs
cltd
fsub
xchg
lret
cmp
jno
or
inc
cmp
xchg
jnp
lea
daa
fwait
push
shrl
pop
gs
fdivl
pop
xchg
int3
lods
test
xor
sub
push
sub
fadds
inc
sub
jae
lock
inc
xchg
test
push
push
push
shll
xchg
push
rorb
add
cli
mov
dec
nop
sti
push
mov
and
xchg
ret
movsb
mov
fidivrl
pop
repnz
mov
inc
mov
loope
push
dec
mov
dec
fimull
mov
imul
shll
dec
adc
jecxz
fs
sbb
int
in
sahf
notl
add
addr16
xchg
inc
jge
push
push
mov
sub
mov
repz
aaa
clc
insb
mov
cmp
mov
mov
stc
ret
add
popf
clc
mov
cld
xchg
push
push
jo
pop
loope
jne
and
loop
mov
and
mov
dec
push
xchg
pop
decl
in
ljmp
aam
cs
or
in
subl
jge
xor
in
cmp
push
fisttpl
cwtl
setne
xchg
push
jae
sub
ficoms
xor
js
sarb
mov
aaa
and
xor
movl
push
insb
add
cltd
cmc
inc
jno
add
andl
jge
daa
xchg
xlat
aas
jecxz
sub
push
or
sbb
adc
and
pop
aaa
fistpl
fisubs
repnz
aam
dec
jae
mov
cmpsb
jae
rcl
and
jne
dec
out
cmc
sahf
xor
ret
shlb
data16
mov
cld
fisubl
dec
dec
or
into
mov
jg
and
fcmovu
repnz
add
adc
stc
and
xchg
popa
sub
das
pop
sub
cmp
lea
sub
ret
inc
data16
cmpsl
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
clc
xor
or
jo
cmp
call
sub
psubq
sub
loope
arpl
mov
es
jg
scas
mov
xor
xchg
jmp
adc
es
or
xlat
aad
ret
stos
cmp
loopne
push
mov
pushf
pop
je
cmp
arpl
mov
cmp
out
xchg
jne
imul
xlat
and
and
jge
lods
jae
mov
je
and
xchg
push
push
add
jnp
std
arpl
into
jo
bound
add
sub
push
out
ja
or
int3
dec
movsb
cli
popa
jle
xorl
cltd
cmp
mov
cmp
push
dec
xchg
icebp
jl
mov
push
cmp
dec
stc
or
pop
mov
decb
in
pop
arpl
or
shl
enter
pusha
mov
mov
out
ret
push
rcl
jb
push
dec
mov
xchg
add
into
into
xchg
out
cmp
aam
mov
sbb
out
mov
push
sbb
fadds
xor
lcall
pop
and
iret
dec
xor
fwait
nop
xchg
push
adc
add
ud1
in
rorl
stos
push
pop
add
inc
into
je
test
cwtl
fadd
xchg
sub
cmc
adc
leave
das
fwait
add
lahf
xlat
dec
jb
mov
je
mov
rcll
mov
pop
lea
fcmovbe
inc
sub
shl
add
movsl
in
xor
mov
test
push
mov
out
lock
in
pop
movsb
test
jo
cmpsl
jmp
xchg
hlt
cmpl
cld
sub
xchg
lret
lds
push
nop
dec
iret
ds
cmp
mov
bound
jp
push
arpl
stos
insl
loope
sahf
int
stos
pusha
mov
push
fstps
ds
cmp
jae
sbb
dec
shr
lea
scas
jge
stos
orb
sahf
add
cmp
notb
push
xchg
mov
push
leave
or
lds
imul
scas
sbb
jae
mov
push
imul
xor
inc
sub
sub
cmp
pop
gs
inc
mov
pop
popf
dec
outsl
push
js
inc
aas
cmp
test
sti
sti
dec
pop
xlat
leave
stos
mov
add
mov
jl
dec
inc
mov
mov
aas
push
int
in
arpl
das
xchg
dec
xchg
push
xchg
mov
xlat
in
data16
test
test
or
hlt
das
adc
insl
jl
dec
push
pop
xor
jle
mov
test
ss
pop
mov
jo
cmp
add
movl
popa
ret
popf
and
xchg
inc
inc
mulb
mov
pop
cs
test
xchg
fnstsw
pop
add
mov
testb
and
aam
mov
mov
or
pop
test
mov
insb
stos
bound
roll
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
pop
lcall
cmp
inc
and
in
cs
dec
loop
push
je
lcall
dec
insl
int
xor
pop
xchg
and
pop
xor
jp
ficompl
mov
loopne
popa
add
jbe
xor
sub
jnp
sbb
mov
cwtl
xchg
out
mov
or
sbb
and
lods
mov
fldl
pop
mov
xchg
inc
mov
push
mov
jno
mov
xor
loope
push
cmpsl
lock
mov
stos
fnstenv
lock
test
sub
leave
loopne
flds
add
or
sub
mov
xchg
in
dec
loopne
popf
inc
lcall
inc
push
adc
cmp
pop
xlat
push
jns
xchg
sub
and
and
jae
xor
sbb
or
repz
fs
inc
adc
inc
push
mov
cltd
xor
dec
sub
jns
into
std
ds
test
inc
push
or
lods
fstpt
imul
pop
pop
fwait
daa
xchg
mov
pop
jge
or
pop
jle
push
push
xor
add
cs
xor
mov
mov
inc
xor
aas
xchg
mov
pop
xchg
dec
or
pop
hlt
roll
dec
lret
cmp
and
pop
pushl
cltd
adc
xchg
stc
lret
inc
jbe
sub
sahf
mov
mov
adcl
push
pop
jmp
adc
add
imul
mov
into
pop
pop
imull
mov
mov
enter
pop
nop
in
aaa
pop
lods
add
xor
and
rcr
fnstsw
mov
test
cld
out
dec
or
adc
sbb
sbb
sub
loopne
adc
es
dec
scas
and
dec
inc
push
sahf
mov
jno
adc
data16
mov
add
mov
arpl
pushf
ds
mov
jo,pt
lret
bound
add
add
out
test
add
and
dec
nop
filds
sub
ss
je
aas
mov
push
cmp
scas
daa
loop
sbb
fucomip
and
push
sbb
inc
jnp
test
mov
xchg
aaa
test
pop
imull
xor
ret
mov
dec
mov
cmp
stos
and
cltd
mov
inc
pop
popl
xchg
xor
leave
jl
loopne
sub
sbb
lahf
lock
add
ret
xlat
push
sbb
push
cwtl
movsb
sti
or
daa
mov
inc
dec
cmc
push
mov
sahf
xchg
mov
adc
hlt
imulb
or
sub
xorb
loop
int3
loop
fsubrs
lods
adc
shrb
jmp
pusha
push
mov
add
pop
push
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
add
insb
xchg
jo,pn
cmp
mov
jmp
sbb
and
mull
movsb
adc
cltd
push
xchg
xchg
outsl
into
push
repz
cmpsl
popf
andl
push
loop
ljmp
cmp
andl
rcrl
jnp
sbb
jae
in
scas
mov
iret
adc
jae
mov
sub
and
mov
push
shlb
decl
mov
xlat
pop
push
pusha
ds
mov
sbb
sbb
loope
push
pop
mov
jns
ljmp
movsl
lret
pandn
pusha
xchg
mov
add
mov
cmp
mov
pushf
mov
fistpll
lahf
inc
mov
daa
jge
daa
loop
cmp
imul
pop
inc
jg
int3
testb
push
fstl
test
jb
sbb
out
test
jne
or
movsb
fwait
or
popl
jp
and
es
cmp
mov
cmovbe
sub
lods
jns
and
push
jnp
sbb
movsl
bound
outsl
arpl
sbb
sub
out
push
shr
pop
sub
and
or
out
mov
pop
cmp
sub
mov
setl
call
mov
aam
push
push
test
je
shrl
mov
cmp
mov
inc
rcrb
in
jge
cmp
lods
fcmove
dec
clc
or
pushf
cltd
fcmovbe
push
cmpsb
mov
cmp
iret
popw
add
jae
fstl
mov
sbb
clc
adc
imul
adc
jns
ret
out
pop
je
push
adc
imul
add
push
lods
cmpsb
adc
fsubr
jle
mov
sahf
rorb
inc
fwait
shlb
or
mov
mov
inc
mov
pushf
test
dec
add
sbb
dec
xor
out
enter
inc
xchg
mov
cmp
pop
mov
test
je
inc
cltd
add
in
repnz
adc
adc
and
cwtl
pop
add
sahf
out
or
addr16
cmp
jg
or
or
dec
test
shll
jp
jge
aaa
fwait
js
xorl
fs
out
add
roll
cmc
xchg
dec
fisubs
cmpsl
push
inc
dec
dec
fnsave
push
lods
pop
jle
bound
cltd
dec
lcall
sbb
addr16
fiadds
test
int3
add
cmp
stos
xchg
fstps
push
aaa
adc
insl
xchg
mov
push
push
gs
popf
dec
cmpsb
jae
mov
das
jg
add
mov
mov
cmp
push
cmp
into
je
shr
dec
xchg
cmp
mov
loop
jp
jmp
cmp
pusha
adc
fbld
fiadds
dec
mov
jbe
jp
fwait
push
lods
sti
pop
hlt
subb
shrb
dec
imulb
bound
mov
adc
lods
je
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
rcpps
jo
cmp
push
or
jl
rcl
subb
bound
sub
add
outsl
out
roll
mov
or
fstl
gs
cld
inc
xchg
repz
adc
enter
and
dec
fisubl
or
into
js
add
pop
cs
movsb
sbb
mov
cld
test
xchg
adc
push
xchg
imul
push
mov
push
clc
addr16
addb
inc
jns
sbb
mov
inc
xchg
add
repz
mov
fdivrs
mov
fwait
jg
xchg
pop
aas
fs
call
cltd
and
outsl
fmul
sbb
cmp
out
adc
loop
pop
mov
pushf
mov
pop
fwait
mov
das
add
pop
fsubrl
mov
imul
or
fstps
shlb
push
ss
test
push
iret
sbb
mov
and
sbb
sahf
fiaddl
lock
or
mov
out
stos
and
insb
in
or
shll
dec
out
sub
inc
cmpb
dec
lds
loop
cmp
xor
cmp
mov
loopne
sahf
lea
hlt
icebp
inc
mov
aam
mov
xor
dec
std
call
idivl
lds
jne
xchg
iret
stos
int3
add
les
repz
addr16
lret
std
jmp
arpl
push
into
mov
decb
push
jmp
sub
sahf
std
and
sar
jbe
in
dec
stos
testl
addr16
movb
push
rclb
adc
loop
fistpl
inc
mov
lret
test
xchg
cmp
outsb
and
and
mov
sbb
call
pop
incl
adc
dec
outsb
insl
ss
sbb
adc
popf
jle
movsb
aas
push
pop
mov
imul
in
ds
mov
int3
fsubs
push
icebp
rorl
movl
popa
insl
cs
inc
mov
pop
push
add
mov
pusha
xor
cmp
es
pop
test
movsl
mov
popa
sti
push
mov
xor
lret
test
decb
jle
movsb
push
mov
fistl
sub
stos
and
sub
or
popf
sub
sarl
add
xlat
or
ja
vpcmpeqb
pop
pushl
jne
lods
and
mov
cli
enter
xor
push
add
subl
stos
xorl
mov
insb
arpl
addr16
es
mov
in
sbb
push
or
mov
pop
loop
mov
dec
mov
inc
lahf
lock
test
lods
mov
ret
sahf
fisttpll
jne
shrb
jns
push
ret
and
or
sub
inc
cmp
mov
clts
jmp
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
dec
insl
pusha
add
aaa
jo
stos
jle
jo
test
mov
push
cmp
es
stos
pop
cli
fwait
add
enter
dec
xlat
mov
pop
and
lcall
ljmp
adc
sti
jmp
rcrb
scas
dec
popa
jb
cld
pusha
xchg
inc
fdiv
xor
shll
push
shrb
dec
clc
cmp
add
sti
lahf
repz
pusha
xor
test
cmp
push
fnstenv
jae
cmp
aad
push
ds
call
adc
popf
insb
jmp
dec
pop
xchg
mov
jo
xlat
loope
sbb
test
das
dec
addb
mov
xor
xorl
push
mov
sti
test
sub
sbb
in
das
jnp
mov
lods
dec
xor
and
aad
push
outsb
adc
mov
cli
mov
in
loop
cli
pusha
insl
mov
push
shll
stos
das
test
movsl
leave
xor
aam
dec
jns
fs
push
sbb
adc
into
mov
sub
inc
sub
xchg
cltd
stos
xlat
scas
gs
mov
push
mov
mov
mov
gs
cltd
fstl
dec
pushf
mov
jo
hlt
push
leave
js
enter
xchg
mov
or
adcl
mulb
sbb
out
mov
ret
mov
adcb
mov
lahf
xor
nop
nop
lret
jg
dec
scas
lods
sub
adc
ficompl
inc
dec
add
idivb
jo
out
jae
mov
add
push
mov
cmpsl
push
shll
imul
das
je
stos
sub
les
fsubl
rolb
stc
sbb
out
into
sub
xor
les
pop
mov
push
dec
dec
test
cmp
jae
mov
jb
sbb
jmp
xchg
mov
or
nop
in
in
mov
lea
lcall
leave
movsl
cmp
dec
repz
outsb
jge
add
into
and
push
mov
rcll
pop
xchg
mov
imul
das
pushf
fcmovu
cmp
es
fwait
jecxz
jnp
jne
lcall
movsl
pop
repz
repnz
vunpcklps
mov
icebp
adc
cmpsl
shll
aas
pop
jle
cs
into
xchg
pop
xchg
sbb
xchg
or
jnp
dec
loopne
mov
test
mov
and
cs
fstpt
shl
insb
rcl
leave
push
movzwl
and
mov
jmp
ja
and
dec
xchg
cmp
dec
xor
jo
and
pop
arpl
pushf
xchg
inc
sti
iret
mov
scas
loope
int3
lds
in
sarl
inc
or
outsl
mov
test
out
mov
mov
shl
pop
outsb
jae
mov
mov
les
fs
jp
pop
mov
mov
lock
push
stc
jp
sbb
sbb
push
pop
mov
cmpsb
nop
lea
push
fnstcw
jns
dec
test
mov
or
leave
sub
sbb
or
xor
addl
js
inc
add
dec
dec
or
pusha
aam
jp
push
pop
or
or
mov
mov
cs
cmovle
loopne
repz
cmp
mov
adcb
inc
leave
push
adc
xlat
fmull
int3
cs
mov
cltd
hlt
mov
xorb
call
adc
or
push
gs
pop
lret
or
js
lock
aas
push
stc
out
cmp
mov
fstpt
xchg
jge
mov
mov
push
incl
xlat
xor
xchg
notb
lret
lock
ret
cmpsb
shll
mov
lods
cmp
mov
ja
pop
cmc
aas
sub
push
add
mov
hlt
mov
cltd
jge
adc
cmp
sub
js
les
jne
jmp
and
pop
enter
in
scas
pusha
jp
jp
dec
mov
mov
mov
mov
cmp
fs
lahf
insb
int
dec
mov
cmpsl
stc
push
xor
lahf
jns
and
push
mov
hlt
inc
inc
lcall
push
out
adc
repnz
fs
push
lcall
addr16
mov
and
aas
movsl
inc
adc
xor
sbb
add
mov
xorb
pop
sub
cmp
rclb
push
inc
cmp
out
fstpl
rcrl
inc
notl
imul
xchg
lds
enter
in
pop
js
punpcklwd
ror
cmp
mov
jno
imul
gs
and
mov
jp
call
xchg
jb
push
js
cmp
stc
jbe
mov
dec
inc
mov
fdivrs
enter
mov
imul
in
inc
loop
notb
lahf
mov
pusha
jl
cmp
pusha
mov
add
insb
lahf
sbb
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
xor
jo
jle
jo
and
mov
fisttpl
out
or
pop
fisttpll
adc
and
bound
dec
insb
mov
mov
mov
sbbl
mov
inc
push
xor
jo
aas
cmp
notb
mov
call
cld
cmpb
shrb
js
notl
sbb
in
arpl
adcl
push
sub
test
arpl
lret
xchg
ret
mov
jbe
es
icebp
xchg
jne
lea
mov
outsb
pushf
ja
popa
hlt
cmp
jae
or
sub
cmp
cmc
jmp
mul
ret
cmc
fadds
add
std
nop
push
mov
fimull
inc
dec
outsl
push
mov
push
add
lods
leave
stos
mov
cli
jns
idivb
in
stc
inc
imul
or
inc
outsl
decl
add
sub
push
push
sbb
cmp
sti
cmc
daa
xchg
psubsb
sbb
add
fldl
mov
aas
and
sahf
sub
sub
mov
mov
out
mov
pusha
aad
and
inc
aad
or
insl
xchg
repz
sub
shrl
sub
xor
int3
stc
xor
dec
fsubr
out
sbb
fists
cwtl
je
mov
xchg
push
sub
test
xor
or
push
cld
xlat
lcall
aaa
jnp
andb
fmull
push
jb
andl
xchg
jno
push
insb
in
pop
cmp
outsb
std
outsl
push
lods
enter
mov
pop
xchg
pop
fbld
sub
inc
mov
sub
mov
imul
popf
mov
out
test
out
movsb
ljmp
cmpsl
sbb
dec
sub
mov
pop
jge
or
add
pushf
jmp
fbstp
aaa
inc
iret
pop
adc
scas
out
or
cmp
dec
mov
mov
xor
dec
popa
xchg
mov
mov
and
push
inc
out
dec
inc
push
push
in
ljmp
add
add
das
mov
sbb
push
sub
cmpb
shrb
leave
jle
xor
sub
pop
push
into
popa
cmpsb
jb
repnz
loopne
cmp
pop
sbb
out
and
daa
out
pop
cmp
test
adc
jbe
mov
clc
mov
popf
push
test
test
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
cmp
ds
jo
cmpsl
jg
jo
mov
fidivrs
icebp
clc
rcrb
adc
jle
pushf
lea
push
add
movsb
aam
clc
testb
xchg
sub
mov
and
or
lahf
ret
jb
fimuls
xchg
mov
inc
fists
mov
ret
dec
sub
lret
out
cmc
icebp
fcoms
adc
lock
xchg
mov
pushf
shr
ja
imul
xchg
repz
les
jmp
lea
fists
mov
lds
pusha
cmpl
mov
pop
hlt
sbb
inc
aas
mov
mov
push
or
shll
mov
xor
fcomps
sbb
xchg
dec
shrl
nop
pop
inc
ljmp
outsl
inc
add
mov
es
or
jns
loopne
dec
xor
pop
into
fcmovne
pop
je
in
mov
xchg
fs
sbb
push
data16
test
xchg
repz
sub
iret
imul
jb
add
xchg
and
sub
jo
dec
push
aam
and
clc
test
das
notb
fwait
divb
fwait
clc
mov
das
test
push
push
push
iret
aad
xchg
sahf
pop
cmp
mov
mov
stc
xchg
or
aaa
jp
out
inc
add
or
sbb
inc
out
fidivrs
sbb
sbb
sbb
popf
mov
jge
jmp
or
loopne
xor
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
cmp
jo
cmpsl
jg
jo
push
adc
xchg
add
not
mov
mov
or
cmp
pop
or
loopne
sub
bts
lret
hlt
adc
aaa
xchg
clc
mov
cmp
roll
imul
bound
xor
jmp
dec
mul
or
dec
insl
jmp
xchg
and
pusha
xor
popa
mov
inc
inc
mov
popa
sub
lods
in
mov
sbb
in
ds
push
loop
mov
add
test
repz
loope
fnstsw
pushf
add
mov
jmp
and
and
mov
gs
ficoml
repz
jg
loop
adc
xor
leave
fcompl
inc
xor
push
out
mov
sbb
int3
pop
push
int
adc
xchg
lock
int
push
iret
fwait
xor
push
xchg
mov
inc
cs
adc
enter
fcmovne
mov
std
xlat
ret
and
fwait
call
in
mov
jne
shlb
xchg
mov
ds
pushf
or
scas
cmp
call
out
into
imul
mov
loopne
movsb
dec
mov
jns
arpl
sbb
sahf
jg
add
loop
inc
push
loope
and
iret
push
ret
dec
push
fistl
push
imul
dec
lcall
and
sbb
inc
sbb
mov
inc
add
incb
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
movsb
gs
scas
mov
jo
jg
jo
add
pop
inc
daa
mov
dec
cltd
aam
sarb
push
out
cmovo
mov
push
hlt
xor
and
fwait
sahf
fsubr
in
xor
dec
outsl
push
aas
sbb
mov
testb
testb
rcrl
enter
outsl
pop
jecxz
mov
ret
shlb
cmc
lds
dec
or
stc
lahf
push
mov
dec
call
popa
mov
pop
mov
lds
dec
stos
inc
hlt
pop
mov
fscale
mov
push
or
divb
out
lret
mov
push
leave
gs
lcall
cmp
aas
sub
divl
lahf
pop
push
loopne
lock
sbb
repz
mov
loop
dec
pop
mov
lods
adc
adc
sbb
jnp
bsr
popf
sub
ds
push
pop
gs
enter
lret
xchg
outsl
rcrl
cld
lds
dec
pop
scas
dec
clc
lahf
pop
lahf
mov
test
inc
push
dec
nop
add
enter
stos
jp
jle
xor
popf
push
lret
adc
and
lods
pop
cmp
movsl
fnstcw
pop
sbb
fmul
sbb
cmpsl
mov
lahf
push
loop
xchg
xlat
stos
adc
add
imul
pop
mov
icebp
pop
jg
push
mov
ret
or
pusha
out
ret
pop
pop
lret
mov
shrb
pop
sub
enter
lret
xchg
xchg
es
cmp
subl
adc
imul
test
xchg
xchg
sti
push
mov
int
push
mov
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
lcall
jo
jle
jo
jge
mov
mov
fistl
push
xchg
cli
jecxz
sbbl
mov
sbb
cmp
add
push
sarb
outsb
mov
in
scas
sahf
sub
dec
or
dec
jmp
test
test
jecxz
sarl
inc
inc
lods
and
imul
lods
push
ficomps
cld
insb
cmp
leave
inc
xor
jnp
dec
lock
pop
sub
mov
enter
sahf
shr
jnp
fstl
call
out
xchg
mov
shl
or
fwait
ret
inc
mov
or
rcl
and
add
ret
pusha
dec
pop
pop
sti
or
push
dec
fcmovnb
fwait
movsb
sub
pop
push
adc
sbb
loope
add
jns
mov
dec
and
sbbb
cmp
dec
inc
cmp
stos
cli
fs
dec
int3
pop
popf
imul
pop
lock
and
mov
fisubrs
adc
call
and
dec
dec
pushf
int3
mov
lahf
add
cmpsb
icebp
xor
jno
cwtl
pop
jle
imul
mov
push
mov
das
aas
lock
sbb
test
jo
push
push
dec
cltd
pop
sti
jns
pop
cld
dec
inc
xor
cmp
push
repz
leave
mov
les
or
pop
ss
adc
movl
shlb
sub
xor
xlat
mov
inc
jae
dec
sti
pop
movsb
inc
lret
mov
sti
mov
ficompl
inc
clc
jbe
jl
hlt
ss
and
hlt
cmp
xor
xchg
shrl
dec
negl
cmp
push
je
lret
aaa
arpl
cld
pop
sub
inc
out
and
pusha
xor
jo
testl
fcoml
mov
std
addr16
outsb
jl
or
andl
bound
aas
dec
xchg
stc
mov
inc
sub
xchg
xchg
adc
cld
in
iret
jmp
in
andb
pop
jae
mov
pop
mov
mov
mov
lock
xchg
mov
mov
shr
cmpsl
test
leave
scas
push
shlb
out
pop
fiadds
push
and
insb
out
inc
adc
data16
pop
dec
enter
add
mov
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
lods
lods
lret
or
jle
jo
leave
inc
inc
push
cmpb
inc
lds
icebp
jnp
jne
mov
stos
xor
dec
in
or
int
lret
cmpsb
inc
push
jae
leave
mov
neg
shrb
andl
pop
addr16
scas
movsb
xor
sti
sbb
push
pop
sub
inc
in
insl
pop
in
lds
inc
lahf
das
pop
pop
ja
xchg
mov
repnz
in
add
repz
or
or
mov
xorl
out
pushf
stc
mov
mov
shrl
call
mov
out
inc
jno
jecxz
dec
std
mov
mov
inc
ret
out
orl
dec
ret
cld
in
add
ljmp
and
jo
mov
ja
jmp
jp
push
sbb
mov
mov
testb
std
dec
test
mov
mov
mov
out
push
mov
lret
lahf
fnstcw
xor
xchg
es
sub
fldcw
adc
loopne
out
mov
adc
fcmovb
lret
movsb
xchg
push
mov
leave
hlt
mov
cmc
in
cli
push
push
jns
add
aas
mov
test
add
xchg
xchg
mov
pop
xor
xchg
pusha
enter
xor
lret
inc
nop
push
std
stos
xor
dec
out
push
jo
jp
ja
divl
scas
enter
xchg
cld
outsl
add
cltd
hlt
flds
dec
xchg
jne
call
xor
push
aad
push
fmull
push
fdivrp
push
imul
lods
sbb
in
jnp
imul
repnz
ficomps
pusha
push
ret
add
pop
mov
cli
and
xor
std
jae
je
push
sbb
lcall
jbe
insb
push
mov
and
test
lcall
cmpl
sub
mov
dec
sbb
repz
and
in
loopne
jae
stos
cmc
mov
push
xor
xor
es
fisttpl
sti
xor
pop
bound
hlt
out
stos
xor
sub
into
repz
shll
ret
std
icebp
sbb
int3
pop
cmpsl
adcb
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
fwait
es
lds
and
jo
rcl
loop
jno
lea
xor
decb
adcl
pusha
push
fisubl
xor
sahf
inc
mov
sbb
dec
scas
push
shr
mov
xchg
cltd
adc
mov
icebp
mov
hlt
aad
lret
inc
xor
int
jle
les
vsubpd
scas
cmp
divb
xor
je
movsl
mov
xchg
xchg
add
outsb
hlt
xor
and
xor
xor
jecxz
mov
mov
pop
push
daa
jl
jns
stc
mov
nop
out
and
xor
dec
inc
pop
xor
loope
xchg
mov
and
mov
iret
cmp
in
push
cli
xchg
mov
adc
jbe
or
andb
xchg
add
fsubl
imul
pop
data16
inc
bswap
dec
mov
sbb
ds
leave
xlat
add
lcall
and
sarb
mov
lret
adc
nop
sahf
mov
push
out
ss
movsb
xchg
or
insl
fsubrl
sub
aad
loopne
mov
sub
lret
outsb
pusha
dec
pop
xor
nop
test
push
and
inc
std
or
push
shrd
call
andb
ja
xlat
and
push
sahf
xor
lds
push
lea
or
imul
jp
daa
testl
add
jle
adc
mov
ficomps
push
cmp
cmp
aaa
rorb
xor
adc
into
pop
inc
imul
xchg
push
lcall
mov
mov
mov
mov
shr
cli
add
imul
fsubp
pop
xchg
hlt
ds
outsb
enter
movsl
popf
and
sahf
jp
leave
flds
dec
mov
inc
shrb
shlb
dec
push
add
or
sbb
into
jns
popa
jge
popa
pop
je
inc
fsubl
arpl
mov
std
inc
xchg
sub
fisttps
daa
fsubr
sbb
inc
pop
jge
jecxz
repnz
test
popf
push
add
adc
jl
cmp
out
mov
mov
test
ja
sub
test
sub
in
push
aaa
idiv
jns
pop
xor
jbe
push
cmpsl
in
hlt
loopne
adc
jmp
repz
pop
movsb
and
cmp
movsl
jbe
insl
mov
pushf
push
imul
and
int3
sbb
xor
out
repz
leave
inc
mov
push
cmc
and
cmp
push
psubsb
or
inc
lcall
adc
ljmp
cmp
outsl
aam
pusha
xchg
or
adc
ret
daa
stc
or
xor
xor
rcll
jbe
cwtl
sub
andl
imul
inc
pop
mov
lock
fwait
scas
cwtl
jb
dec
jecxz
xor
and
repz
test
inc
int3
xor
repnz
inc
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
mov
icebp
mov
jo
pop
in
cmp
mov
pop
lods
jecxz
test
or
fldt
jg
inc
arpl
sbb
inc
pop
lods
pop
jo
gs
jmp
loope
pop
les
test
sub
test
xor
fisubrl
adc
in
push
or
fcmovu
enter
adc
insb
push
popf
aaa
loope
cmpl
in
subl
repnz
xchg
lahf
aas
push
push
xchg
cld
pushf
arpl
mov
sbb
subl
scas
add
enter
cmp
pop
cmc
test
adc
or
pop
mov
dec
test
int3
sub
shrb
popa
cltd
ror
add
fisubl
xor
test
pop
cli
repnz
xor
cs
pop
loop
jmp
andb
or
cmpsl
lods
das
mov
roll
mov
xor
xchg
adc
pop
xor
loope
push
xchg
push
in
mov
mov
cmp
mov
jge
pop
sub
sub
xchg
mov
cmc
cmovae
push
or
repnz
pop
push
push
fisubrs
push
loopne
bound
lods
push
jl
inc
xchg
in
cmp
ret
inc
movsb
test
dec
data16
das
test
mov
sbb
pop
xchg
inc
jo
push
test
outsb
out
xor
lret
xor
lea
lcall
fcompl
mov
outsb
test
sbb
loop
inc
dec
inc
cmp
aaa
add
or
rcr
mov
ljmp
hlt
sbb
mov
int
mov
lea
xchg
arpl
push
xor
pusha
pushf
xchg
daa
arpl
lea
jbe
pop
sub
sbb
rolw
mov
xor
sbb
jb
or
sbb
xchg
xor
mov
sbb
add
dec
andl
pushf
aad
sub
sub
aaa
faddl
jns
inc
or
cld
pop
inc
fcomi
sub
and
dec
popa
push
inc
jno
cmovge
cmp
cmp
xchg
or
dec
mov
xadd
test
imul
inc
and
dec
out
jmp
mov
ret
push
aam
inc
js
inc
inc
sbb
xchg
cmp
add
or
mov
adc
sub
adc
dec
or
mov
pop
xor
out
mov
cmp
inc
xchg
dec
mov
lret
xchg
adc
ret
xor
sub
movl
roll
jmp
cltd
cmp
inc
cmp
sub
test
les
in
jb
pushf
xchg
add
cmpsb
mov
stc
mov
dec
loop
push
loop
fadds
push
std
pop
push
jns
push
sub
mov
repz
into
out
push
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
cld
mov
jo
and
jo
rorb
dec
push
je
ret
jg
xor
pop
sarb
lret
popa
imulb
nop
cmp
mov
testl
mov
js
xor
xchg
and
cmpsl
fisttpll
jnp
sub
pusha
adcb
data16
add
cld
mov
fcomps
inc
daa
outsb
xchg
fldenv
or
mov
xor
jae
les
xchg
xchg
adc
cmpb
sbb
cmc
xlat
pop
shrb
add
hlt
cld
pop
push
das
scas
mov
out
xor
or
and
out
js
cmpsb
ret
add
mov
adc
je
mov
dec
push
dec
hlt
mull
push
cmc
pop
jbe
jg
je
mov
aam
cwtl
lret
cmc
les
mov
lahf
or
test
icebp
clc
outsb
inc
pusha
cmp
fsubr
jnp
sub
out
cld
sti
stos
js
cwtl
ret
sbb
dec
lods
mov
arpl
andl
xchg
add
dec
cwtl
mov
add
data16
and
rorb
adc
sub
mov
mov
sub
jecxz
mov
and
scas
push
push
sub
xchg
mov
test
aad
call
mov
jb
sbb
aad
jle
dec
dec
sub
cmp
and
dec
mov
inc
mov
movsl
shlb
sbb
jbe
jb
add
push
dec
loopne
pop
int
add
loop
ret
pop
sbb
gs
adc
jecxz
repnz
je
testl
mov
pop
movsl
inc
scas
shll
fbstp
lock
or
jne
jns
daa
adc
and
dec
gs
add
mov
stos
pusha
jge
shl
mov
push
iret
fadds
cmp
int
dec
cmp
sbb
sub
sub
sbb
jno
js
arpl
fistl
cwtl
adc
xor
xor
cmp
or
adcb
cmpsl
dec
call
pop
loop
pop
mov
pop
xor
test
mov
gs
daa
iret
cs
sub
ljmp
loope
les
mov
jp
mov
cmp
in
iret
fistl
mov
push
mov
xchg
das
orb
add
xor
xor
push
mov
adc
rorl
inc
movsl
in
pop
test
lods
push
xor
imulb
inc
cli
xorb
push
push
movsl
cmpsl
xor
ror
loopne
mov
add
adc
mov
mov
jl
insl
jno
inc
cmpsl
mov
mov
xchg
fildl
pop
mov
int
jmp
call
sbbl
lret
sub
pop
frstpm(287
iret
arpl
repnz
repz
mov
fldcw
xorl
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
ss
lahf
out
int3
jo
and
jo
js
hlt
xor
fdivrs
and
cmp
stos
pop
ja
mov
dec
fnstcw
dec
push
mov
cli
sub
jg
fninit
out
mov
adcb
jmp
push
cmp
imul
jmp
rolb
mov
popa
rorb
sub
icebp
cmp
cmp
pusha
popf
inc
add
leave
loopne
fsubrl
lret
das
jbe
jle
js
push
mov
clc
clc
mov
movsl
jae
xorl
and
mov
or
push
fimull
adc
jmp
faddl
sahf
test
pop
sbb
fistps
jg
stos
mov
nop
out
xor
negb
pop
test
xchg
add
mov
les
mov
or
out
out
sub
enter
add
push
mov
and
pop
dec
repnz
mov
and
sub
mov
repnz
jne
fcmovbe
jmp
cmp
imul
mov
sub
and
aas
cmpsl
xchg
int
pop
cmp
pop
clc
mov
cli
mov
cld
mov
pusha
sahf
in
dec
jno
das
push
std
out
or
cmp
popf
sub
xchg
jg
scas
faddl
aam
xchg
and
ljmp
rcll
lds
mov
or
xor
aam
addr16
das
incl
js
or
cmp
sub
pop
in
cmpsl
push
jp
jnp
out
xor
and
or
mov
jo
push
aad
or
xorb
xor
mov
mov
leave
ljmp
clc
insb
jg
lods
sar
sahf
and
lds
out
jbe
mov
mov
push
hlt
xchg
inc
lret
icebp
push
or
repnz
test
pusha
and
xchg
ficompl
out
inc
in
pop
or
mov
shl
ret
mov
test
xchg
fistpll
lock
push
je,pn
mov
adc
hlt
out
ljmp
or
mov
paddd
add
push
shl
push
xlat
lahf
push
test
jecxz
add
data16
leave
xor
pop
inc
and
sbb
lret
mov
ret
cmp
or
pop
pop
scas
lock
mov
sub
data16
fst
int
out
cld
addr16
int
ss
or
cmp
lock
lret
mov
and
add
jmp
rcll
fidivs
out
adc
shrb
lcall
shlb
iret
lods
in
or
leave
adc
cmpsl
cmp
ds
jno
js
mov
inc
jge
jp
add
cmpl
push
adc
jle
adc
insl
sbb
inc
int
stos
and
repz
jle
std
movsb
jg
sub
cmp
pushf
and
inc
js
in
pop
insb
cmp
and
mov
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
fnstenv
jo
and
jo
in
dec
and
int
gs
out
pop
and
clc
out
int
and
jge
into
push
and
pop
pop
or
add
bound
outsb
mov
lcall
fdivrl
fbstp
rclb
int
push
lock
pop
inc
sub
es
pop
lcall
loope
inc
cmp
add
rcr
sbb
cmc
mov
stc
cmc
stc
mov
mov
popf
ret
subl
imul
outsl
ficompl
mov
cmp
data16
pop
cmp
pop
push
jecxz
mov
or
jne
pop
sub
jl
and
xor
push
hlt
cmpsb
movsb
xlat
pop
rcrb
loope
pop
mov
iret
xor
mov
addb
lea
sub
or
cmp
fadds
mov
rorl
ja
stc
test
adc
pusha
sbb
andl
enter
das
inc
jnp
mov
daa
subl
sub
and
ljmp
inc
imul
add
out
ss
jmp
push
jg
fmul
imul
mull
enter
fs
arpl
adc
sbb
int
xor
mov
jle
and
leave
mov
push
cs
cmp
pop
xor
mov
mov
fxam
test
inc
cmpsl
aad
push
mov
lcall
xchg
lea
testl
stc
inc
outsb
xor
stc
lcall
mov
sub
dec
inc
pop
push
jg
push
loope
out
mov
xchg
pop
and
pop
and
push
and
mov
aad
adc
push
cmp
push
xor
pushl
push
cs
aad
cmp
lret
mov
mov
jne
jae
pop
fldl
loopne
jb
in
aam
aam
popf
push
inc
ja
xor
inc
bound
fldl
cmp
movsb
cli
out
xor
out
addr16
adc
fcoml
sahf
or
jbe
daa
movsb
out
mov
sub
or
mov
ds
jge
test
cld
mov
sub
loop
mov
ljmp
clc
ja
mov
mov
push
ret
popf
cmp
sub
fimull
fadds
test
inc
xchg
push
jle
add
push
mov
push
or
aas
movsl
mov
call
leave
sahf
add
aad
fimull
int3
je
inc
jg
lret
repz
mov
push
mov
out
inc
lret
mov
jmp
push
jae
loope
ficoml
pushf
pushf
mov
outsl
sub
popf
inc
jecxz
push
mov
mov
es
scas
add
inc
and
movsl
ja
adc
xor
jnp
aam
dec
rcr
out
mov
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
aaa
insb
imul
jge
jo
aas
outsl
pop
adcl
lods
dec
lret
pop
adc
xchg
adc
pop
ficoms
mov
dec
add
lahf
lock
pop
inc
jmp
fst
pusha
sub
xor
pop
std
or
sub
xchg
jae
in
cmpsl
adc
int3
call
mov
xor
out
rcrl
pushf
repnz
repnz
leave
lods
xor
vphaddubd
jge
mov
push
or
in
jmp
add
movsb
or
pop
test
push
subl
sbb
xor
sahf
fdivp
cwtl
cmp
mov
push
or
pop
inc
iret
xchg
out
js
sahf
mov
stos
mov
or
push
push
push
adc
cmp
xchg
sti
push
fbstp
js
xor
out
and
cmc
dec
jbe
cmp
xor
leave
push
cmp
jge
out
push
or
stc
xor
aam
shll
pop
stos
aas
mov
es
lcall
sub
pop
mov
or
scas
lods
adc
cltd
lret
add
mov
or
adc
add
mov
fwait
int3
imul
stc
adc
cwtl
sub
repz
adc
repnz
xor
pop
push
mov
push
out
and
call
xchg
mov
jne
fiadds
outsb
jge
adc
jp
pop
sti
in
cmp
xchg
pushf
into
idiv
jp
mov
or
cmc
std
popf
mov
mov
dec
nop
fs
and
sub
push
pusha
int3
adc
mov
jmp
and
pop
jbe
or
insl
test
rcrb
pop
bnd
cmc
scas
and
and
push
jns
pop
sub
pop
int
rorl
xchg
mov
xchg
dec
mov
subl
std
dec
shr
pop
nop
fldl
test
cmp
stos
lods
xlat
aad
pop
xchg
mov
orl
mov
lods
mov
xchg
push
rcr
aaa
repz
xlat
cmp
dec
in
mov
mov
dec
insb
divb
or
hlt
and
cmp
sub
lds
inc
adc
adc
lahf
ljmp
testl
xlat
xor
cmpsb
stc
cmpb
movsl
ret
mov
pushf
sub
dec
sbb
aaa
mov
pusha
roll
mov
lret
hlt
arpl
mov
sbb
mov
lods
loop
imul
insb
out
pusha
pop
aaa
neg
cmp
repz
rdtsc
jne
cwtl
or
push
dec
xchg
popa
lret
or
ds
xor
cltd
call
adc
push
xor
cmp
lcall
fiaddl
sbb
hlt
sub
push
cmp
shrb
pop
inc
jo
push
push
and
mov
ja
out
call
cmpsl
xchg
imul
add
fmuls
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
cs
shlb
and
jo
mov
dec
shlb
push
movsb
jns
popf
andb
mov
cmp
xor
cmpsl
xchg
adc
push
mov
cmp
jl
test
fstl
push
xor
rol
setns
movsl
mov
push
mov
cmpl
xchg
dec
mov
loop
ja
lret
js
stc
movsb
ret
mov
or
std
out
out
insb
pop
jae
jbe
mov
xchg
fisubrl
push
mov
inc
lds
pushf
mov
out
push
xchg
fstps
ret
rorl
insb
mov
xchg
add
and
and
das
int
or
jl
mov
and
call
sub
mov
ss
push
push
jmp
mov
mov
lret
aam
jbe
xchg
xchg
not
scas
xor
std
xlat
outsb
pop
clc
and
out
sbb
sub
arpl
cltd
aam
sbb
push
ret
clc
xor
mov
push
lahf
and
add
dec
jbe
int
clc
insl
inc
psubd
dec
mov
cmp
mov
mov
or
and
fldl
scas
dec
dec
rcll
fsub
rcrb
scas
jne
sub
outsb
lret
fidivs
ret
pop
jnp
lcall
fucomi
xchg
call
enter
pop
jl
pop
shll
add
pop
data16
int3
xchg
cmp
add
sar
lea
inc
inc
dec
push
call
sbb
gs
mov
popf
sub
ljmp
out
ljmp
or
in
lahf
and
lahf
ret
insl
add
jmp
ljmp
or
push
addr16
pop
neg
and
jg
jle
fs
jo
in
push
mov
or
sub
into
pop
pop
addb
shr
stos
mov
cmpsl
inc
enter
mov
jg
outsl
bound
sldt
sbb
sub
push
jle
stos
mov
or
sarb
lret
mov
pushf
mov
dec
jge
sbb
dec
mov
cmp
xchg
js
push
or
xor
sbb
btc
mov
jecxz
or
in
enter
and
dec
nop
lret
and
ljmp
push
insb
mov
adc
sbb
ljmp
test
or
and
leave
and
push
push
push
lds
aad
and
adc
inc
dec
xchg
jno
and
pop
out
and
and
sbb
cmpsl
jns
jb
dec
xor
mov
and
out
push
jb
jg
pop
mov
es
in
mov
and
fwait
mov
jp
into
cmp
mull
repnz
fs
aaa
pop
mov
jg
lret
outsb
and
fwait
ss
jb
data16
mov
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
adc
aad
sti
xchg
sbb
adc
test
test
fwait
inc
leave
adc
mov
mov
mov
inc
dec
cltd
aas
xchg
xchg
aam
jno
in
aam
pushf
fucomi
or
lods
out
loopne
or
pop
sub
and
dec
and
or
sbb
and
cmp
sarb
jae
shlb
lods
loopne,pt
push
scas
mov
aam
movsl
lods
adc
adc
pop
xor
push
xor
add
icebp
in
jle
nop
aaa
stos
xchg
fninit
popf
rep
mov
das
pushf
lods
push
pushfw
ret
push
lock
fucomp
ret
mov
popf
xor
fdivs
stos
shl
inc
jp
jg
mov
cmp
mov
pop
arpl
orb
push
push
lods
test
xor
adc
into
cmp
xor
call
push
mov
test
es
mov
mov
mov
mov
fnstcw
js
inc
add
and
push
addr16
repz
cwtl
fimuls
or
dec
jmp
clc
mov
repz
sti
pop
jle
xor
jecxz
xor
adc
sub
add
or
fistl
repz
cwtl
cmp
inc
bound
iret
cmp
fiaddl
add
jp
outsb
cmp
sub
adc
mov
push
leave
adc
mov
jmp
dec
push
jle
inc
cli
xor
insl
idivl
lods
rol
inc
dec
sub
ss
sbb
or
or
int3
inc
int3
jae
outsb
xor
nop
leave
cmp
mov
adc
fisubl
pop
xor
mov
insb
lret
push
mov
pushf
imul
sub
push
rclb
testl
add
movsl
cmp
mov
push
jae
or
mov
jo
cmp
inc
jecxz
testb
push
dec
insb
cli
jbe
add
inc
mov
mov
or
in
and
dec
movsb
pop
imul
xcrypt-ctr
cmpsl
sahf
inc
mov
das
mov
bound
cmc
push
stos
negb
scas
negl
xorl
xor
lret
jne
jns
sahf
scas
xor
mov
out
call
cmp
dec
push
cmp
sbb
xor
dec
fildll
push
test
push
adc
jns
push
loope
je
jnp
pop
ja
jne
cmp
and
shll
xchg
xor
lock
and
cmpsl
pop
pushf
and
xor
cmpsl
int3
test
call
mov
sub
pusha
and
jbe
lock
cmp
or
icebp
adc
nop
mov
pop
dec
popa
ja
les
or
xchg
xchg
mov
sbb
cmp
sbb
ja
movsb
pop
push
push
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
aad
mov
jge
jo
dec
pop
in
fsubs
add
fisttpll
rcrb
test
cmp
test
push
dec
subb
xor
dec
xor
sbbl
push
dec
popa
mov
out
cld
gs
ror
vcvttss2si
pop
pop
mov
mov
mov
or
inc
das
cmc
mulb
aas
lea
in
call
add
fisttpl
movb
cmp
pop
xchg
pop
ret
imul
insb
xchg
push
fimull
negl
pusha
addb
arpl
add
xor
push
ret
ficomps
mov
push
cmp
test
in
mov
add
bound
sbb
mov
leave
and
ret
bound
mov
and
ds
sbb
dec
mov
fsub
adc
mov
xchg
adc
ljmp
sbb
cs
and
je
mov
into
cmp
cwtl
arpl
mov
add
and
mov
outsl
notl
jl
rorb
pusha
in
data16
test
mov
push
push
loopne
pop
sbb
fcoml
aad
icebp
out
test
mov
xor
adc
icebp
mov
mov
das
out
jnp,pt
dec
repnz
push
xchg
mov
cmc
lds
adc
andb
fldt
pushf
lea
mov
fistpll
pop
jg
cmc
cmc
sbbb
ficoms
dec
sarb
test
das
xchg
mov
hlt
sahf
push
out
or
mov
jge
cmp
mov
icebp
arpl
dec
aam
mov
mov
mov
mov
inc
jge
outsl
gs
icebp
pop
sub
mov
adc
out
push
movsb
cld
clc
subb
scas
mov
nop
fisttpll
inc
adc
push
mov
fistps
dec
insb
mov
fidivs
jns
jmp
xchg
out
ja,pt
fdivp
movsl
shl
rcrl
mov
loopne
je
test
add
pop
rcll
xchg
add
pop
sbb
ret
into
xlat
adc
add
jmp
clc
andb
or
mov
js
notl
in
mov
jae
mov
xacquire
inc
pop
cld
mov
fmull
subb
push
idivb
aas
dec
roll
leave
push
lret
add
push
jbe
icebp
push
sbb
inc
push
mov
es
or
jo
lahf
insl
adc
mov
std
inc
mov
dec
mov
lods
popa
pop
fidivl
dec
in
add
popf
insl
adc
pop
sub
sub
sub
dec
and
push
mov
orb
pop
out
roll
mov
stc
sbb
and
or
pop
xrelease
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
or
xchg
arpl
cltd
leave
push
jle
add
mov
sub
xor
dec
push
lods
frstor
rcrl
fxch
inc
mov
jl
and
push
ss
dec
data16
push
test
dec
lret
mov
in
xchg
das
aad
dec
mov
xchg
fadds
push
aad
and
cmp
inc
cmpsl
push
push
add
das
sbb
xor
stos
aas
scas
insb
mov
js
arpl
push
in
push
sub
xchg
imull
xchg
in
push
call
xor
mov
or
popf
lret
pop
adcb
je
cmp
xchg
jge
adc
push
fsubp
cs
pusha
or
in
xchg
mov
dec
inc
mov
ret
dec
push
push
cmp
imul
test
adc
stos
outsb
imul
dec
imul
cld
stos
insb
mov
test
jge
and
out
arpl
stos
cmp
icebp
xchg
shrb
mov
fiaddl
pop
or
mov
stos
sub
sbb
mov
scas
mov
stos
mov
movntq
and
shr
and
sbb
ljmp
movsb
pop
data16
sbb
adc
mov
enter
inc
xor
mov
scas
adc
add
cmp
xchg
inc
andb
div
sub
add
lret
dec
sub
adc
push
hlt
sub
jbe
jns
sbb
loopne
lds
in
in
aas
add
lret
lods
jmp
push
call
cs
mov
imul
sbb
sub
mov
ret
test
or
dec
mov
push
adc
data16
jne
gs
popf
fs
add
aam
and
call
dec
xchg
test
jo
movsb
das
pop
mov
mov
aad
aas
lods
fsub
pop
insl
cmc
jmp
hlt
sbb
loopne
movsb
rep
das
outsb
jno
xchg
sub
push
test
jmp
xchg
pop
inc
dec
movsb
pop
scas
xchg
fbld
aaa
ja
adc
in
addr16
int3
push
int
sar
hlt
sbb
or
inc
shll
inc
movsl
push
fcomps
xor
push
mov
xor
dec
jp
adc
mov
clc
pop
sbb
mov
sub
repz
sti
jecxz
test
cmp
cs
hlt
xchg
mov
xchg
ja
sub
sbb
popa
or
clc
cli
into
pop
pop
push
inc
jo
imul
inc
repnz
mov
aam
xchg
sbbl
pop
out
cltd
pop
xchg
pop
idivb
test
dec
pop
mov
xor
aas
xor
add
repz
xchg
repz
jnp
out
xchg
xchg
xchg
sub
inc
add
dec
add
add
out
out
xor
call
fs
jo
jge
jo
mov
out
inc
or
mov
push
mov
fidivrl
imul
mov
xchg
insb
pusha
xlat
fiaddl
into
push
cmpsl
scas
mov
jge
sub
outsb
add
lcall
daa
and
stos
jnp
push
and
out
mov
sbb
xchg
fwait
xor
sti
sbb
push
fcoms
sbb
std
xchg
mov
xchg
out
cvtpi2ps
dec
inc
or
pop
cmp
xor
data16
inc
enter
mov
mov
rcl
fstpl
or
imul
cmp
in
lret
xorb
sub
inc
sbbb
addb
mov
jno
jge
sub
test
outsl
and
push
xchg
movsb
add
mov
xchg
pop
mov
aaa
sub
pop
rcll
fisttpl
push
cmp
mov
imul
nop
sub
and
ja
adcw
sbb
std
xor
jne
xchg
mov
test
int
push
nop
or
push
cltd
jae
jae
lcall
jecxz
jg
sahf
inc
hlt
or
sarl
scas
into
inc
dec
or
inc
mov
xchg
test
mov
cmp
fidivrl
xor
cmc
out
push
loope
sbb
mov
sbb
ret
stc
out
mov
inc
jne
jg
lcall
mov
push
or
mov
cs
xor
adcl
lea
jg
xchg
xor
or
je
jle
psadbw
mov
xlat
dec
sti
pop
sahf
lds
cmp
cmp
jae
cld
push
sbb
mov
sbb
into
cld
or
repz
jp
cltd
lds
xchg
lock
rcrl
ret
rorl
inc
cwtl
ds
dec
cld
pop
daa
into
movsl
xor
sti
add
lahf
rorb
jo
rcrb
fwait
jae
scas
xchg
or
sbb
jbe
ja
mov
add
aaa
add
loope
jno
pusha
lea
pop
adc
popf
xchg
xor
ss
bound
xor
pushf
aad
sbb
inc
clc
rorb
mov
cmc
sbb
lods
jecxz
ret
sub
cmp
mull
and
lock
jge
orb
xlat
js
mov
push
mov
jp
das
inc
lock
jg
add
push
lcall
loop
outsb
repnz
push
dec
push
leave
xchg
loop
je
pop
aam
loope
sbb
sub
outsl
es
mov
sahf
xor
inc
testl
hlt
mov
xorl
loopne
push
pop
push
movsb
or
mov
xchg
pop
aam
test
and
xchg
inc
lea
dec
xor
add
push
and
fwait
cmpsb
insb
jno
add
jge
pop
inc
xlat
je
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
mov
mov
jo
jge
jo
out
xchg
aam
mov
cmp
fmulp
adc
mov
sub
fstl
stos
pushf
dec
scas
ficoms
pop
or
fistpl
jmp
push
int3
push
outsl
cmp
jae
jb
mov
neg
scas
insb
cmpsb
mov
sbb
push
call
stos
xlat
jno
fdivs
fnstsw
adc
mov
dec
test
enter
stos
inc
fs
in
pop
int
loope
in
and
icebp
loope
push
sbb
mov
inc
inc
mov
mov
ret
jecxz
xchg
sub
in
jo
push
dec
cmc
or
mov
std
push
dec
mov
and
or
or
lea
mov
rorl
lret
addr16
icebp
xor
insb
fnstenv
mov
stos
ftst
rcll
and
imul
add
inc
out
jle
pop
mov
fs
push
leave
and
ljmp
mov
pop
lret
lds
push
mov
fimuls
xor
popa
dec
sbb
icebp
xor
decl
test
cli
xor
mov
and
clc
push
mov
add
je
adc
dec
gs
dec
sbbl
jae
sub
test
nop
jne
int3
and
outsb
leave
sbb
roll
gs
push
call
inc
or
xchg
stos
iret
mov
lods
jl
mov
roll
jo
dec
cmpsb
inc
and
xor
sti
mov
lret
adc
in
in
aad
push
outsl
jo
jb
int
cmp
scas
mov
shll
outsl
pusha
sub
pop
scas
dec
lods
dec
movsl
mov
pop
jns
dec
xlat
inc
fnstsw
in
add
sbb
imul
mov
out
jae
mov
rcrl
push
push
popf
jb
sahf
or
cli
xchg
adc
leave
dec
pop
mov
and
sahf
pop
cmp
add
push
in
js
cld
sti
mov
sub
mov
and
mov
xchg
sub
lea
cmc
ljmp
addr16
and
push
xor
mov
loop
mov
scas
cltd
add
inc
adc
xor
pop
sub
add
dec
and
clc
rclb
mov
test
adc
cmp
in
movsl
inc
fiaddl
mov
push
cmp
xor
and
jp
and
dec
push
es
add
mov
test
jp
popf
dec
adc
mov
sbb
out
mov
clc
out
out
shl
cs
mov
fs
loope
outsb
das
or
and
inc
stos
cmp
loop
jno
mov
pop
daa
lcallw
std
out
ss
push
push
lret
loopne
in
add
mov
push
int
pushf
jmp
add
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
dec
xlat
out
jo
and
jo
jmp
int3
push
rcr
sarb
bound
inc
mull
lods
icebp
mov
xorl
fldl
ja
mov
inc
jmp
fs
and
scas
jb
jmp
sbb
std
push
pop
inc
das
iret
sub
in
out
fcoms
push
idivl
rcr
jns
pop
adc
lea
lret
mov
gs
sub
dec
aad
inc
jp
cmp
lret
sbbl
mov
sbb
inc
out
fsubrl
jecxz
hlt
mov
inc
outsb
int3
xor
out
pop
adc
icebp
ficompl
mov
mov
push
jbe
sub
imul
adc
jle
push
push
cmpsl
sbbl
push
dec
jle
sbbl
cld
push
sub
or
dec
hlt
ror
imull
out
xor
rcrl
jl
aam
je
fidivs
push
movsb
je
lock
sbb
outsl
insl
lea
sbb
loope
sub
dec
xor
sahf
jp
mov
es
rcl
mov
dec
mov
cpuid
sarb
lcall
mov
pushf
aaa
mov
mov
add
hlt
loop
cmp
sbb
stos
jge
cli
xor
and
sub
xchg
addr16
mov
aas
jecxz
mov
or
mov
int3
inc
mov
fsubs
xchg
outsb
mov
or
mov
sub
sbb
push
pushf
push
or
ds
movsb
dec
cmc
inc
aaa
mov
jg
fs
sub
mov
pop
mov
and
mov
xchg
loopne
sahf
jg
lds
bound
sub
in
cmp
inc
mov
stos
out
push
push
sti
xor
ljmp
adc
pop
addr16
xchg
ret
and
mov
loopne
dec
dec
cmpsb
sbb
jb
test
popfw
xchg
movsb
adc
imul
dec
pop
sbb
pop
adc
push
mov
mov
sub
sub
scas
adc
andb
in
jnp
lods
dec
out
idiv
push
push
mov
sti
mov
adcl
iret
mov
inc
mov
insl
cld
inc
xchg
mov
insl
imul
addb
dec
or
lahf
subb
test
lods
stc
xor
aaa
sahf
cmp
push
push
js
xchg
fwait
inc
adc
or
xor
lods
dec
mov
jmp
add
cmpsl
push
push
cmpsb
mov
idivl
xchg
push
stos
imul
repz
in
mov
push
daa
cmpsb
out
push
xlat
fcompl
cmp
cmp
push
repnz
xchg
add
repnz
dec
mov
adc
inc
test
cmp
lds
rcr
cmpsl
cmp
movsb
sbb
shrl
sahf
push
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
fwait
js
xchg
jo
lahf
jge
jo
sbbb
ds
adc
sbb
mov
pop
xchg
loop
and
dec
mov
ljmp
pusha
or
cwtl
jl
pop
xor
xchg
mov
ret
es
mov
or
and
ja
push
xor
mov
sbb
sbb
stos
fwait
shrl
fwait
shl
iret
sti
xor
push
push
cmp
pop
or
inc
xchg
les
xor
jo
mov
cmpsl
mov
sub
xor
sub
je
cmp
dec
mov
test
bound
xchg
cbtw
sub
daa
ret
fmull
mov
cmp
sub
mov
sarl
pop
sbb
std
inc
add
push
xor
cmp
add
leave
movsl
push
inc
push
pop
mov
hlt
rorb
ja
data16
push
lcall
loopne
xchg
mov
lock
push
orl
popf
sbb
test
push
loope
jae
cmp
sub
pushf
mov
stc
sbb
adc
cltd
mov
outsl
fcomp
fcoms
mov
push
inc
es
sti
mov
add
test
lods
negb
cld
pop
call
push
lds
cmp
mov
xchg
in
lods
or
ds
sti
xor
and
or
int
xchg
jle
comiss
xchg
lods
xchg
out
jge
and
mov
jl
test
movsb
cmp
jge
xchg
out
sub
mov
xchg
addr16
divl
nop
imul
sub
aam
push
mov
outsb
xchg
enter
mov
push
mov
add
adc
mov
lret
repnz
mov
scas
inc
shlb
imul
xlat
mov
pop
pusha
ret
push
jmp
adc
stos
cmp
xchg
cmp
mov
insb
fstl
arpl
repz
push
icebp
sbb
jmp
in
xchg
sbb
les
je
mov
cpuid
loope
movsb
pop
sbb
lods
leave
daa
sbb
daa
shrb
mov
aaa
cmpsb
cmp
ja
lea
lock
xor
jmp
pop
cmpsb
je
cmp
bound
fs
xchg
push
add
adc
inc
jnp
push
test
and
jp
sub
mov
mov
mov
jnp
jno
cmpxchg
int3
aam
into
fcompl
or
dec
adc
ret
call
jmp
mov
gs
imul
inc
pushf
lcall
sub
jbe
cs
jl
mov
ss
push
iret
jmp
negb
stc
xchg
push
xchg
mov
or
mov
lahf
mov
jecxz
loopne
mov
mov
lock
cmp
dec
push
test
pop
cmp
scas
js
adc
enter
sahf
mov
je
sbb
or
jb
add
js
xor
push
or
filds
dec
ljmp
sbb
arpl
and
les
frstor
fidivrl
insl
inc
lds
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
cs
stos
es
jo
jl
mov
xchg
xchg
call
or
bound
xchg
sub
out
in
mov
jbe
rcrb
jns
xchg
pop
mov
dec
insl
pusha
mov
xchg
dec
in
out
jl
jg
sub
subl
mov
sub
mov
push
jl
mov
push
enter
inc
out
int3
ja
pop
test
repnz
push
pop
popf
mov
iret
test
imul
jmp
in
loopne
xchg
xchg
popa
mov
and
adc
test
enter
jnp
jle
roll
push
sbb
rorl
cld
sub
popf
out
clc
xor
adc
sbb
xor
lea
sub
pop
icebp
push
mov
jp
in
mov
daa
test
nop
cmp
cli
aaa
xor
stos
mov
test
mov
in
mov
leave
test
dec
pop
pop
les
push
dec
dec
adc
outsl
sub
test
inc
fsubs
imul
sub
imul
and
mov
stos
xlat
lock
ljmp
cs
dec
pop
pop
js
and
je
imul
mov
std
ret
mov
clc
data16
push
dec
sub
sub
push
rolb
adc
adc
dec
insl
add
and
sbb
ret
xchg
sub
out
loope
mov
jne
test
adc
xchg
fistl
jb
fnstenv
divl
iret
int
jg
jns
xchg
mov
movsl
cmpsb
jmp
dec
pop
jbe
insl
sarl
popf
push
inc
cmp
jmp
add
ret
lods
mov
dec
lret
or
mov
pop
mul
push
ja
fwait
sub
cmpxchg
push
dec
adc
fistpl
push
in
scas
mov
or
hlt
jbe
inc
dec
sbb
sbb
in
sbb
push
and
es
xchg
or
rcll
push
bound
mov
imul
mov
in
xchg
xchg
add
inc
xchg
jecxz
mov
jno
fs
cmp
jmp
nop
testb
xor
daa
mov
in
movsb
push
and
mov
loopew
mov
add
gs
sub
sub
mov
and
or
add
jns
mov
mov
rol
jnp
popf
pusha
fwait
push
xchg
xchg
fbstp
ret
mov
inc
or
or
cmpsb
xchg
inc
movsb
int3
cmp
dec
bound
mov
cmpsb
jmp
add
jmp
or
cs
jb
push
in
or
xchg
mov
sbbb
inc
in
adc
popf
stos
je
popa
mov
stos
call
test
movsl
mov
dec
movsb
pop
ret
jbe
out
mov
dec
pop
xchg
push
into
sub
pop
clc
jmp
jg
ud2
lahf
dec
add
sub
pop
pop
lods
faddp
rcl
mov
mov
inc
adc
push
ljmp
sub
mov
js
jle
loopne
fldenv
xor
aad
mov
icebp
scas
lods
inc
mov
fstl
pushf
clc
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
pop
cmc
dec
cmpsl
inc
cmc
jo
lahf
jge
jo
jl
jle
negb
mov
jle
add
iret
sbb
es
lea
rcl
jno
mov
pop
cli
mov
je
push
clc
in
mov
repnz
push
sub
sub
jp
dec
in
push
mov
xchg
clc
fstpt
ret
push
rclb
gs
out
push
ljmp
mov
sbb
test
adc
loope
orb
imul
pop
in
dec
in
lret
push
popa
xchg
mov
lcall
std
loopne
mov
sahf
cmp
push
adc
mov
enter
mov
mov
inc
adc
clc
inc
jg
jecxz,pt
ret
lock
imulb
cmp
dec
repz
inc
pop
sbb
arpl
jmp
mov
stc
dec
jb
fisubrs
pop
ljmp
das
sbb
sarb
sbb
test
out
insb
fnsave
sbb
out
mov
sahf
std
and
scas
std
insb
mov
pop
loop
in
mov
cltd
add
pop
addr16
xchg
push
fdivr
cmpsb
cmc
mov
mulps
push
scas
sbb
cmp
movaps
scas
cmpsb
push
cmpsl
add
dec
jb
fisubs
jnp
adc
rolb
pop
sbb
imul
mov
xchg
push
and
mov
pop
adc
das
xlat
es
das
pop
xor
outsb
arpl
insl
into
test
mov
xor
jns
inc
mov
bound
adc
inc
jnp
push
int
jb
les
aam
popa
js
cmp
inc
std
test
iret
pop
std
sub
jge
iret
sbb
into
test
dec
cwtl
mov
inc
hlt
xor
add
out
jecxz
ljmp
shrw
mov
mov
stos
fwait
and
stc
mov
adc
int
jl
push
dec
add
dec
mov
sbb
add
sbb
es
out
sub
xchg
or
scas
mov
sub
jl
iret
push
inc
inc
adc
inc
flds
add
aad
sub
inc
adc
stos
or
push
adc
neg
xchg
cmpsl
and
inc
mov
lods
or
rorb
in
add
mov
mov
lahf
mov
mov
inc
or
mov
pop
outsl
xor
out
mov
jae
add
mov
test
loop
xchg
dec
cli
jle
jp
sarb
add
jmp
mov
fs
addr16
xlat
mov
cmpsl
and
sub
into
dec
mov
add
xor
enter
inc
sbbb
scas
div
mov
les
stos
xlat
xchg
mov
or
xchg
les
mov
inc
xor
imul
sub
loope
adc
dec
or
jbe
aas
iret
mov
pop
sub
loop
xchg
inc
or
dec
pop
or
or
in
iret
mov
shlb
sub
cmp
nop
sub
or
or
mov
jl
leave
push
mov
pop
jne
int3
testb
xchg
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
dec
fadd
xchg
icebp
jo
lahf
jge
jo
fsubrs
sbb
in
mov
add
add
and
adc
lret
sub
adc
out
cmp
mov
push
dec
dec
xchg
push
cmpsb
call
ds
dec
cmp
cmpl
or
movsb
popa
icebp
nop
fsub
faddl
in
mov
lods
bound
insl
mov
sbb
pop
dec
inc
inc
aad
mov
jb
mov
int3
sub
add
arpl
mov
jle
std
sub
lahf
mov
je
or
fbld
int
insb
out
dec
jle
in
adc
sbb
or
pop
xlat
pop
jns
fcmovnbe
mov
mov
pop
fs
cmp
push
test
mov
sub
cltd
gs
bound
pusha
sbb
xor
xchg
test
in
jb
fistpl
into
fistps
sbb
call
in
jge
repz
pop
lock
xchg
sahf
cmp
sbbb
in
pusha
jmp
insb
int
popf
imul
cwtl
dec
out
aaa
add
or
fwait
pop
test
les
lea
int3
cwtl
fisubrs
in
in
xchg
pop
jne
fidivrl
outsl
sahf
shlb
mov
add
sar
pop
adcb
int
mov
ret
xor
mov
sub
cwtl
cwtl
jb
mov
ret
adc
and
outsl
add
inc
xor
mov
mov
data16
pop
sub
jb
xor
lret
ja
mov
xchg
testb
jecxz
or
mov
xor
mov
hlt
inc
dec
cmp
jl
pop
test
sub
xchg
pop
mov
inc
cltd
xchg
cmp
lods
add
jg
aad
int
sbb
mov
mov
and
push
cltd
test
xchg
mov
popa
push
aas
sbb
das
lret
mov
sub
push
addb
pop
mov
jmp
in
stos
sub
out
pop
lds
or
mov
sub
inc
sbb
enter
mov
rcll
pop
xlat
inc
mov
push
push
or
test
insl
jne
loope
adc
push
das
or
mov
mov
or
jb
adc
sbb
outsb
adc
jo
in
or
lahf
loope
outsl
mov
xor
dec
and
xchg
es
fisttps
dec
lret
popf
pusha
iret
cmp
mov
jl
out
xor
jns
pop
mov
sbb
in
shl
fstps
xor
xchg
mov
call
xchg
nop
fsubs
aam
add
jmp
xor
lods
fwait
inc
rep
push
cwtl
jle
movsl
xor
and
sti
aaa
gs
adc
notl
subb
xor
inc
testl
ja
or
mov
repnz
imul
ds
mov
push
negl
or
push
pop
add
pushf
jmp
xor
pop
dec
lcall
test
lcall
cmp
add
jb
mov
loope
popa
test
ret
mov
jmp
xor
decb
and
pop
jl
mov
in
mov
push
test
push
mov
sub
rolb
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
push
mov
add
jo
lahf
jge
jo
cli
stos
mov
push
out
adc
pop
xchg
scas
add
or
bound
aas
xchg
jbe
adc
xor
mov
outsb
int3
add
jle
inc
cs
xchg
fldenv
fwait
loop
js
pop
sbb
pop
dec
add
rolb
push
xchg
sahf
inc
mov
sbb
or
addr16
jne
fdivl
repz
ret
sub
add
mov
scas
dec
mov
sbb
fdivrl
jno
test
mov
addr16
dec
sub
pop
cmp
mov
push
pop
cmp
movsb
jb
mov
ret
or
popf
js
fistps
xor
jmp
xchg
stos
aad
faddp
je
dec
mov
jbe
fcomi
xor
cli
xor
imul
cmp
xchg
daa
ja
xor
frndint
std
add
push
lret
push
call
fidivrl
mov
xchg
lods
and
inc
sbb
data16
divl
imull
sbb
movsb
insl
pusha
sbb
push
test
cmpsb
aad
pop
jg
adc
jmp
jb
push
adc
roll
fldcw
cmp
fldt
pop
and
mov
fildll
int
inc
sub
arpl
iret
sbb
or
add
push
inc
shll
mov
cli
push
notl
sbb
into
hlt
int
dec
ret
add
mov
repnz
in
std
hlt
pop
stc
mov
xor
sbb
lcall
jge
push
push
mov
pop
push
stc
pop
daa
aas
stc
cmp
ds
mov
fcomp
jbe
adcb
mov
clc
cmp
inc
inc
xor
xchg
cmpsb
call
gs
mov
xchg
lods
cmp
xor
fisubl
push
pop
sub
sbb
fidivl
and
push
ljmp
inc
inc
pushl
sahf
inc
jbe
les
test
cld
rdtsc
inc
inc
push
xlat
pop
mov
add
mov
fdiv
pushf
insb
or
in
mov
jo
fs
xor
xor
push
clc
jb
in
jb
xlat
stos
jg
push
push
adc
rcl
in
hlt
outsb
rcll
xor
mov
mov
add
cmp
mov
dec
lret
cmpsl
push
insl
inc
push
mov
cld
and
js
jnp
push
out
inc
xlat
das
fistps
scas
inc
inc
repnz
fwait
mov
xor
test
lods
pop
clc
inc
pop
es
and
push
imul
xchg
or
std
insb
ja
lods
loope
mov
dec
popf
xchg
aam
add
imul
addr16
mov
cs
xchg
notl
jge
outsl
aam
dec
pop
add
mov
into
lock
popa
test
aad
adc
mov
dec
dec
mov
cld
testb
in
adc
jbe
repnz
out
iret
dec
mov
subb
testb
fildl
xor
cmp
push
sbb
mov
ja
in
dec
push
andl
or
fldenv
dec
xchg
int
dec
xrelease
aam
mov
jb
mov
mov
pop
stos
add
mov
mov
div
inc
pop
jne
mov
jns
mov
les
lcall
jg
insl
sub
repnz
mov
mov
jne
sub
lret
sub
lahf
jge
jo
arpl
xchg
insl
xor
push
fwait
xor
jl
out
test
test
and
pop
mov
lahf
leave
icebp
stos
xchg
nop
lcall
or
or
fcmovnu
xchg
cmc
mov
mov
lods
ficompl
jge
sbb
movsl
push
cmpsl
mov
jno
pop
or
out
out
lods
flds
xchg
inc
inc
and
push
dec
movsb
test
popf
push
sti
sub
push
xchg
xor
clc
je
cli
add
jge
add
call
xchg
xchg
push
jo
pop
jns
pusha
mov
loop
out
pusha
xor
call
or
sbb
aas
push
mov
push
jp
repz
sbb
scas
mov
mov
leave
inc
sbb
repnz
sub
add
loop
rorb
jge
js
push
push
xor
dec
lahf
and
xor
push
add
mov
mov
adc
imul
js
xor
lret
sbbb
sub
ds
popf
jmp
leave
lods
movsb
inc
icebp
imul
lods
es
enter
xor
adc
lock
lcall
sbb
mov
or
jo
test
cmp
dec
pop
in
or
sub
in
or
out
mov
and
fwait
dec
out
jmp
lret
jg
rcll
and
mov
or
stc
pmaxsw
lret
jmp
orb
out
mov
fmull
inc
mov
cmc
arpl
xchg
adc
enter
or
lahf
add
pop
out
in
lods
bound
xchg
add
mov
popa
cld
or
or
sbb
fcomps
pop
cltd
cs
arpl
aam
lods
sub
pop
lea
mov
jecxz
sti
fidivrs
xor
roll
fs
mov
nop
jne
add
xor
lea
aaa
cmp
shll
out
inc
mov
iret
dec
or
and
lock
sbb
cmp
lcall
movsl
xchg
gs
mov
xor
inc
cmp
mull
gs
xor
dec
dec
int
jb
push
lret
add
lods
jo
cwtl
inc
mov
pop
repz
std
shrb
lcall
xchg
lahf
repz
pop
lods
stos
sub
orl
popl
adc
jg
push
hlt
call
xor
dec
lods
sub
mov
push
sbb
outsl
or
test
inc
fucomp
pop
addr16
js
mov
ja
nop
sbb
jne
pop
gs
scas
sbb
push
pushf
and
push
sbb
ficomps
rep
gs
test
cs
cmp
xchg
push
loope
stc
adc
test
adc
and
or
nop
xor
cmpsl
cmp
xchg
dec
jno
or
and
jg
inc
push
and
sbb
xchg
adc
pop
mov
xor
inc
mov
iret
sub
adc
inc
pop
lds
or
sub
mov
scas
cmp
dec
mov
pop
out
pop
jp
fistpl
rcrl
std
mov
add
push
cmpb
pop
jecxz
ss
mov
jbe
lret
xchg
leave
addr16
adc
popa
mov
jge
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
and
pushf
sub
xchg
lahf
jge
jo
andl
repnz
andb
shlb
test
add
cs
out
pop
hlt
mov
mov
or
cmpsb
lods
test
inc
repz
or
rcrb
xchg
fadds
scas
movsb
lock
or
sbb
mov
mov
loopne
add
and
fxch
arpl
out
jns
cltd
jb
mov
add
mov
enter
jecxz
or
ja
test
sbb
pusha
cmp
adc
je
jmp
xchg
xlat
leave
inc
cmp
popa
add
lods
add
jo
into
movsl
mov
incl
inc
adcb
inc
dec
cmpsb
pop
movsl
mov
pop
xchg
push
add
cmpsl
xchg
mov
shrb
lds
shr
jbe
nop
pop
dec
mov
ficomps
pop
xchg
mov
adc
xchg
cmp
jecxz
push
mulb
dec
jge
gs
bound
and
icebp
xor
sbb
push
push
push
and
loopne
jns
cmp
iret
dec
mov
pop
pop
jnp,pt
sub
push
mov
hlt
fcoml
fs
mov
in
rcl
push
pop
dec
xlat
mov
data16
stos
sub
mov
idivb
test
inc
inc
aad
push
outsl
fstpt
shl
fildl
jnp
jbe
outsl
ljmp
xchg
mov
es
outsl
daa
add
ret
call
push
mov
push
inc
mov
sub
fwait
xor
rcr
les
sub
sub
push
push
dec
dec
mov
fmul
pop
addr16
push
xor
mov
loope
in
cmp
shrb
sbb
inc
rcrl
gs
insb
data16
and
xchg
pop
sbb
mov
xchg
stc
inc
add
in
cwtl
outsl
cvtps2pi
mov
ja
lret
imul
cmc
leave
sub
inc
jp
ret
xchg
lahf
pop
or
and
cmp
lret
imulb
mov
cmp
adc
mov
pusha
test
iret
mov
in
xchg
add
subl
push
and
cmp
xor
push
les
xor
roll
xchg
outsl
mov
enter
test
repz
outsb
or
jecxz
cmp
adcb
jno
mov
popa
stc
jmp
test
pusha
dec
sti
xchg
sub
fcoml
mov
or
in
cltd
ss
scas
push
cltd
lds
pop
loope
adc
pop
pop
je
adc
loope
mov
iret
faddl
pop
dec
test
add
cmp
sahf
cltd
aaa
sahf
les
fisttpll
mov
xchg
and
fldt
mov
mov
xchg
pop
mov
sub
loop
orl
jns
inc
lods
jo
sbb
clc
imul
sbb
mov
pop
dec
mov
pop
leave
icebp
clc
adc
addr16
sbb
shll
arpl
lret
xor
xchg
repnz
out
cwtl
dec
cmpl
popl
stc
out
ret
pop
arpl
cmp
adcb
xchg
les
aad
cmpb
add
rep
jae
jle
ret
mov
push
jns
fisttpl
fsubr
ds
in
lods
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
add
jo
jge
jo
mov
or
cld
scas
jns
pop
push
ret
mov
icebp
imul
test
stos
mov
std
fwait
add
popf
adc
inc
xchg
in
jle
jne
xchg
jno
mov
mov
fstl
cmc
lret
je
repz
mov
xor
lret
das
or
nop
in
dec
cltd
dec
dec
mov
lods
outsb
cmp
in
pusha
cs
adc
push
outsl
lahf
insl
ja
cld
arpl
dec
sub
icebp
shr
stos
rcrl
fidivrl
or
jmp
scas
rorl
xor
mov
in
out
jo
mov
jb
jge
pop
loop,pt
out
data16
pop
test
push
je
pop
nop
xor
cmp
enter
pop
addr16
adc
stos
add
cmpb
mov
pop
and
or
inc
push
jmp
movl
jecxz
pop
and
rorb
inc
dec
jae
xor
sub
vmulss
loop
jp
fisttpll
sub
loop
add
and
mov
inc
insl
aas
fcoms
pop
dec
out
iret
fldenv
mov
ret
fsub
pop
mov
adc
pop
pop
sti
add
mov
lret
sub
sbb
adc
pop
rolb
pop
popa
sti
bound
imul
leave
imulb
mov
fildll
cmpsb
and
adc
pusha
xor
int3
daa
xor
int
cmp
cmp
roll
mov
fwait
jp
mov
pop
and
addr16
ret
cs
jp
int
add
and
rcll
mov
stos
lock
jo
sub
xchg
dec
adcb
das
dec
aam
mov
rolb
mov
out
sahf
mov
lea
and
outsl
mov
lods
pusha
in
mov
xor
fs
aaa
stos
jecxz
ss
cmpl
pop
ret
cmp
pop
daa
stc
xchg
pop
mov
nop
test
xchg
jns
test
add
pop
aam
imul
pop
sub
fisubs
xchg
sub
ja
adc
mov
int3
inc
ljmp
dec
cld
mov
jmp
int
mov
xor
pop
cmpsb
mov
inc
bound
scas
clc
dec
pop
xchg
pop
ret
loop
add
sbb
rclb
lods
iret
and
jns
mov
mov
jp
mov
lcall
adc
pushf
sub
dec
call
mov
mov
mov
lods
inc
std
arpl
mov
lea
aaa
mov
insl
enter
es
loope
sbb
xchg
mov
mov
popa
adc
push
jg
mov
pop
ret
add
in
repnz
in
pop
divl
mov
aad
xor
popf
pusha
or
test
rcrb
mov
mov
cmpsl
pop
xchg
push
int
pop
in
test
pop
cmp
jb
pop
inc
pop
aad
sbb
pushf
xchg
push
mov
xor
std
add
ja
mov
xchg
clc
jns
dec
and
loopne
pop
fcomi
cmp
jl
jo
adc
ja
shlb
iret
pop
lret
adc
jnp
xorl
add
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
mov
int3
jo
lahf
jge
jo
or
mov
lds
int3
ljmp
hlt
adc
notl
imul
enter
push
xor
in
cmp
insl
loopne
pop
and
and
lret
ljmp
jle
jg
sbbb
pop
mov
addr16
jne
fsts
gs
mov
insb
push
cmp
je
xchg
outsb
aaa
mov
adc
xor
sahf
cli
push
cld
xorl
imul
gs
enter
adc
test
pop
inc
pop
xor
sbb
mov
mov
pop
push
pushf
dec
out
lods
aaa
cmp
js
addb
pushf
mov
ss
and
mov
jns
add
andl
rcrl
dec
sub
mov
fwait
push
fmuls
mov
sub
out
repnz
mov
cmpb
or
push
fldcw
sbb
mov
icebp
shll
sbb
jbe
sbb
jns
push
push
mov
or
sub
mov
jmp
dec
loop
fs
xchg
adc
fnsave
adc
je
pusha
or
sub
clc
and
subl
adcb
mov
xchg
imul
stos
jg
sub
dec
dec
add
push
push
dec
mov
decb
xchg
scas
cmp
enter
dec
in
or
dec
and
dec
rcrb
lahf
xor
in
sub
mov
pop
jecxz
fdivs
sbb
pusha
outsl
cmc
mov
enter
add
test
sbb
pop
fldl
das
and
sub
fsubrl
cli
add
xchg
pusha
data16
pushf
xor
xchg
xchg
rcrb
aad
xchg
push
sbb
xchg
addb
lock
cmc
rcrb
test
xchg
aad
xchg
push
popa
mov
and
xchg
xchg
and
cld
push
sbb
scas
ficoml
mov
lds
movl
or
rorb
stos
xchg
dec
and
rcl
in
clc
push
lcall
out
cwtl
mov
jns
xchg
or
pusha
inc
das
lea
pop
lret
mov
fs
sub
inc
dec
jecxz
adc
pop
xchg
jbe
cmc
cli
out
sub
and
inc
scas
sbb
test
pmulhuw
adc
adc
call
or
fidivrl
xchg
pusha
dec
jle
push
jg
and
sub
lds
repnz
les
cmp
fidivrs
rcr
sbb
lock
and
xchg
aaa
cmp
mov
pop
jne
jle
push
je
sbb
in
mov
jecxz
push
in
sbb
es
lret
scas
mov
or
sbb
pop
sub
scas
testb
lcall
divl
mov
cmc
sbb
dec
push
lods
in
jecxz
push
push
out
rcl
sbb
arpl
push
repnz
pop
mov
push
icebp
or
pop
mov
mov
movsb
insl
or
pop
hlt
push
icebp
mov
mov
test
jns
jle
inc
sbbb
jecxz
lds
and
lcall
rcr
dec
movsl
pop
mov
int3
xor
or
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
mov
mov
ljmp
es
cmp
leave
jno
int3
pushf
sub
int
sbb
dec
jmp
aad
jecxz
loopne
dec
xor
mov
push
in
inc
mov
mov
mov
sub
cmp
push
iret
stc
stc
xchg
push
popf
jl
pop
scas
adc
cmpsb
lret
lea
je
push
pop
fimuls
out
inc
outsl
rorl
dec
setne
pop
cmc
sub
mov
and
shrl
imul
outsl
call
ljmp
cli
shll
and
arpl
data16
lahf
loopne
sub
lahf
push
popf
xchg
andb
lds
lea
rorl
dec
push
adcb
fwait
aam
mov
or
sbb
push
insb
lret
adc
repnz
mov
repz
addb
inc
out
comiss
sub
adc
push
inc
sbb
fs
insl
push
mov
sub
int3
loope
movsb
nop
dec
inc
stos
scas
jle
pushf
cltd
iret
mov
sbbb
xor
or
push
mov
outsb
leave
in
aaa
ds
dec
xchg
aad
js
popf
and
int
sub
mov
je
nop
cld
orb
mov
mov
or
cs
cmpsl
stos
add
aaa
insb
pusha
loopne
sub
mov
xor
pop
fisubrs
and
fwait
xchg
aad
push
insl
adc
push
pop
jne
scas
mov
test
push
sbb
xor
and
inc
lds
xor
xlat
pop
ret
lret
or
loopne
pushf
mov
push
enter
sbb
outsb
scas
mov
out
adc
mov
fsts
inc
jl
ds
dec
ficoml
insb
inc
arpl
lods
fiaddl
push
jg
decb
addr16
repz
mov
jo
pop
sbb
dec
in
inc
cli
rorb
push
movl
cmp
out
lods
or
movsb
push
pop
adc
xchg
outsl
jmp
out
sbb
mov
lcall
mov
push
inc
insb
scas
fdiv
fistpll
mov
das
clc
cmp
enter
mov
stc
mov
outsb
or
cmp
jb
cld
scas
lret
das
sbb
jecxz
loope
arpl
repnz
dec
push
xor
xor
int3
or
pop
jno
std
fnstenv
xchg
repnz
mov
test
jge
mov
push
sbb
or
mov
add
into
js
pushl
gs
repnz
sub
imul
sbb
xor
jne
loop
clc
jge
mov
xlat
mov
scas
mov
push
cmp
and
imul
xchg
pusha
js
ret
je
cli
cmp
idiv
lret
fwait
repz
mov
out
ret
je
and
lods
outsb
scas
decb
mov
scas
jmp
sub
mov
pushf
rcll
sbb
and
xchg
cmp
sahf
movsl
flds
in
cmc
std
and
gs
push
ror
mov
into
punpcklwd
loope
insl
arpl
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
ja
jns
dec
mov
lahf
jge
jo
add
aaa
mov
jp
in
push
and
pop
adc
arpl
aad
sbb
repz
mov
xlat
scas
test
and
xchg
xor
fsts
pop
lcall
rol
lret
push
add
sub
mov
mov
mov
sbb
outsb
rolb
xchg
and
sbb
sbb
xor
pop
cld
xchg
jmp
and
mov
fsubl
sub
aam
push
fsubs
int3
inc
mov
popa
cltd
inc
aam
lock
movsb
fs
stos
icebp
mov
mov
inc
fistpll
cmp
xor
cli
push
cmp
pop
nop
pop
fstps
push
insl
push
adc
add
push
mov
pusha
das
mov
mov
cltd
aad
int3
fstps
xchg
sahf
mov
mov
clc
sbb
fisttps
sub
mov
or
in
cmc
xchg
add
xorl
mov
inc
fadds
call
out
in
lods
punpckhwd
out
mov
xchg
jge
inc
sahf
jg
xor
pop
inc
hlt
cmp
lock
lcall
dec
jp
push
or
jecxz
sbb
mov
mov
mov
jl
fldenv
add
aas
sub
jle
mov
fmul
cmp
pop
cld
out
pop
jge
add
dec
into
jecxz
out
dec
in
dec
imul
mov
xor
ficoms
insl
shrl
enter
mov
xchg
sbb
bound
pop
std
les
fnstsw
dec
pop
loope
or
and
jle
andb
push
repnz
push
sub
in
push
push
xchg
mov
push
cs
popa
xor
inc
add
int3
stc
push
cmpsb
add
add
aam
push
dec
les
test
pop
adc
aaa
in
fstpt
loope
sbb
dec
jl
xchg
lods
shl
sbb
stos
loopne
andb
and
and
mov
mov
dec
aam
in
outsl
inc
mov
lods
mov
or
call
pop
sti
mov
mov
sti
stc
push
xor
stos
push
fiaddl
push
jg
sub
stos
mov
jmp
inc
test
std
sub
adc
xchg
add
xchg
push
aaa
mov
out
icebp
cli
jp
push
mov
sarl
loop
mov
repnz
cmpl
dec
sub
mov
adc
int3
aam
xchg
stc
pop
jb
scas
xchg
inc
aam
mov
test
xchg
sbb
xchg
fsubrs
mov
cmp
lods
in
fsubl
popf
mov
sar
lahf
dec
and
jnp
and
loope
clc
ret
and
push
lea
xor
mov
xor
dec
cld
inc
std
into
andps
inc
outsb
lahf
jae
xorl
dec
mov
jns
and
and
dec
les
addr16
repnz
int
mov
fisubl
pop
rcll
inc
loopne
push
sbb
rorb
pop
dec
xchg
sbb
mov
xchg
scas
ljmp
pop
mov
jnp
loope
inc
adc
sbb
adc
sbb
and
mov
mov
repz
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
leave
lret
in
xchg
jo
lahf
jge
jo
jne
pop
mov
add
add
pushf
fucomi
inc
and
inc
cwtl
cmp
sarl
pop
mov
lret
pop
or
out
or
cltd
popf
adc
lahf
pop
cmp
nop
cmc
and
mov
jl
xor
inc
das
cltd
mov
fdivr
dec
mov
mov
out
dec
aad
shr
push
push
movsb
mov
pop
sub
jnp
ficoml
stos
subb
addr16
xor
add
out
xor
pop
sub
lods
test
push
in
ds
mov
or
sbb
adc
hlt
jecxz
jae
lahf
and
ds
inc
fs
jns
js
out
dec
cmpsl
lahf
add
cmpsl
test
loope
push
mov
punpckhbw
xchg
sbb
xlat
mov
dec
test
sahf
xlat
lods
les
push
xchg
mov
xchg
aad
cld
xor
lea
inc
popf
aad
clc
scas
rcrb
and
adc
xor
aaa
mov
test
xor
es
mov
inc
sub
ss
js
adc
sub
imul
jge
out
sti
inc
cs
mov
sub
adcl
cs
in
loopne
push
mov
cmp
pop
aad
xor
mov
and
push
cmc
xor
or
in
mov
clc
lods
outsb
cmpb
cmp
sti
xor
movb
push
jecxz
and
call
dec
sbb
xchg
cld
pop
ja
leave
and
addr16
adc
test
pushf
test
and
fs
sbb
add
mov
sahf
xorl
push
cmp
sahf
cmp
adc
xor
fstps
enter
bound
jge
cmpsb
test
leave
inc
gs
leave
dec
mov
xor
loopne
adc
nopl
gs
mov
or
jle,pn
cmpsb
sbb
hlt
xchg
bound
xchg
clc
jg
lcall
fcmove
div
cmp
lds
dec
test
fisubl
dec
sub
test
inc
push
sub
dec
inc
out
xor
inc
dec
mov
ds
in
pusha
ret
cmp
out
iret
sbb
into
arpl
lds
pusha
adc
and
add
sub
sbb
add
sbb
in
or
sub
or
cltd
repz
push
adc
add
stos
jl
push
lret
subl
push
push
cmp
popa
mov
pusha
je
mov
xchg
xor
dec
into
out
ret
or
ret
cmp
add
dec
inc
jo
pop
rcll
pop
ss
push
xor
lods
inc
jp
mov
je
pushf
imul
sbb
dec
scas
inc
repz
pop
cmp
push
in
lds
lcall
sbb
in
pop
fwait
jno
gs
movl
mov
push
dec
push
jne
and
sub
out
jnp
incl
push
jnp
sub
and
fwait
add
mov
and
push
xchg
sub
jo
out
rcr
dec
fstpt
adc
aas
or
mov
xchg
jb
dec
inc
out
mov
or
fistpl
dec
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
subl
aaa
or
jo
mov
test
push
stos
xchg
mov
adc
lods
dec
cltd
sbb
push
int3
not
test
pushf
pushf
push
push
notb
mov
clc
pusha
xchg
and
add
dec
lret
loopne
jbe
jnp
jg
dec
lret
mov
jmp
sbb
cmp
pop
pop
mov
clc
subb
push
movb
mov
push
inc
and
pop
adc
in
cmp
adc
leave
imul
add
sar
mov
ret
inc
inc
and
xor
jge
loopne
imul
int
ja
add
ss
movsb
in
xlat
dec
lahf
sub
mov
stos
inc
sbb
imul
push
data16
pop
jg
inc
mov
push
push
loope
fcomps
out
pop
or
bswap
test
jl
mov
pop
out
inc
inc
sub
jmp
js
mov
mov
call
xor
jns
mov
aad
rclb
adc
es
sbbb
sub
mov
fmulp
in
fsubr
xchg
push
out
mov
aad
imul
shrb
in
mov
scas
mov
loope
in
cli
push
mov
mov
imul
mov
aaa
pop
lea
into
in
jns
add
jo
cltd
push
insb
int
jbe
ja
test
mov
pop
lea
movl
pop
push
out
mov
fwait
leave
jne
mov
adc
mov
push
jne
lods
mov
popa
mov
cmpb
bound
fwait
mov
mov
aam
mov
mov
xchg
test
gs
cltd
jne
mov
daa
mov
int
adc
sub
popa
or
mov
outsl
adc
pusha
jne
enter
notb
arpl
sub
addr16
and
dec
or
fucomp
test
outsb
pop
into
repz
inc
in
ds
std
jnp
push
sarb
pushf
jb
int3
pop
mov
shlb
ficomps
fisttpll
jno
outsb
sbb
xor
stos
jmp
leave
inc
rorl
dec
out
lahf
lea
mov
inc
mov
test
sbb
mov
cmp
jne
sbb
jg
ret
divl
sbb
xchg
fcomp
dec
or
daa
pop
xchg
sub
inc
mov
andl
xchg
sbb
rcll
call
xchg
add
push
xor
mov
dec
xchg
dec
ret
mov
pop
sub
aaa
std
dec
test
add
fistps
test
sbb
dec
mov
nop
in
fs
or
mov
push
and
push
das
fimuls
data16
inc
cmp
xor
sub
ljmp
imul
mov
cmp
loopne
adc
mov
or
bound
xchg
ret
mov
push
cwtl
jo
xchg
mov
mov
fs
nop
aad
and
out
sbb
mov
jle
lret
repnz
jle
shrl
pop
pop
mov
icebp
hlt
loope
out
cmp
xchg
int
push
inc
push
outsl
andl
mov
jp
sub
mov
cmpb
bound
lods
or
mov
rorb
jo
mov
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
data16
repnz
mov
sub
ficomps
add
outsb
cltd
ds
mov
mov
sar
push
push
inc
jno
xor
pop
dec
pop
push
dec
or
push
pop
xchg
pop
data16
jns
insb
add
jb
or
push
mov
movsl
jp
faddl
mov
xlat
lds
pop
in
xor
arpl
jae
jb
test
mov
mov
inc
ljmp
stc
outsb
xchg
sbb
adc
dec
mov
hlt
jo
mov
push
pop
insb
xchg
pop
or
push
in
in
ret
into
and
inc
push
dec
outsb
add
push
ret
push
jecxz
and
clc
loop
fdivrl
imul
or
in
mov
dec
int3
push
jp
fs
enter
xlat
cld
sahf
sar
sub
iret
jecxz
ja
jl
jle
iret
sarb
mov
sub
cmp
and
xor
repnz
mov
dec
push
test
bound
mov
clc
fwait
loop
daa
cmp
cli
push
push
dec
adc
jnp
pop
out
out
notb
jnp
mov
add
shll
sti
pop
or
popa
rcll
rcl
shl
aam
ja
mov
sbb
leave
mov
shrl
in
ds
ss
and
mov
cltd
aaa
pop
pushf
sbb
fistpl
cli
mov
stc
sti
lds
insb
popa
dec
insb
pop
dec
xor
jmp
movsb
int
mov
test
testl
or
sub
stc
sub
sub
dec
jne
and
scas
add
push
inc
jmp
loope
shrl
sub
pusha
mov
ljmp
shrb
mov
std
sub
or
mov
lods
outsl
inc
xchg
pop
fisttpll
dec
mov
js
cmp
arpl
dec
dec
leave
shr
shll
or
ret
mov
dec
aas
mov
mov
daa
pushf
sub
aas
cltd
aaa
push
dec
xchg
pusha
pop
arpl
or
xchg
sub
pop
mov
int
xor
sbb
imul
pop
pusha
lea
sub
or
in
ja
sub
xor
push
dec
jb
xor
cmpb
inc
mov
hlt
popf
adc
jb
inc
cmpb
jecxz
mov
sub
shl
jae
inc
scas
icebp
or
jmp
in
ds
push
fsubp
fmul
dec
jno
arpl
enter
cmp
jg
jge
inc
lahf
push
mov
mov
pop
cwtl
push
cmp
cwtl
js
js
mov
inc
stc
xchg
mov
pop
in
in
push
mov
mov
push
lds
mov
push
popa
fwait
xchg
insl
add
push
es
in
outsl
es
mov
xchg
mov
movsl
jns
iret
loope
xchg
adc
xor
rorb
sub
xchg
loope
jmp
mov
xchg
es
addr16
lods
inc
pop
aad
leave
adc
mov
mov
adc
mov
shll
sahf
fstps
ficomps
fimull
pop
scas
sbb
mov
pop
mov
mov
xchg
lock
cli
mov
inc
pop
in
clc
pop
or
mov
push
lods
ss
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
push
dec
and
cltd
jo
lahf
jge
jo
mov
nop
aam
sub
mov
les
xchg
ds
repnz
in
sbb
or
in
cli
and
pushf
out
ret
xorl
les
mov
mov
mov
mov
and
or
mov
in
sub
jbe
jp
or
push
mov
sbbb
jo
or
xchg
js
fwait
dec
call
scas
and
pop
fsubrp
sbb
aad
jbe
rcl
sbb
sub
imul
movsb
nop
inc
ljmp
dec
sahf
les
and
xor
pop
in
mov
fcomps
mov
icebp
es
lret
xor
nop
and
dec
adc
in
fwait
cmp
in
dec
sub
mov
mov
test
sti
and
and
sbb
push
jno
jb
rorb
fcomps
and
push
lcall
push
mov
ds
insb
test
push
int3
adc
jbe
fisubrs
xchg
inc
add
xchg
jne
out
jae
xor
stos
mov
mov
inc
js
sbb
les
sub
bound
and
cmp
nop
in
sub
pushf
lret
dec
mov
hlt
inc
pusha
adc
orb
daa
mov
int
dec
insl
jecxz
test
repnz
into
pop
fs
and
mov
lds
push
scas
inc
sub
add
add
dec
pop
pop
pop
and
arpl
mov
int3
imul
sbb
inc
addb
movsb
add
clc
mov
stos
push
subl
push
bound
ds
int
push
inc
dec
outsb
push
add
add
cmp
cmp
pop
mov
cmp
adcb
test
aas
fisttpl
fsubl
add
rorl
pushf
mov
jno
push
stc
ret
push
sahf
fwait
addr16
cmpsb
test
bound
cli
push
stos
adc
or
stc
in
dec
add
adc
cmp
movsl
clc
in
movsl
or
sub
jbe
xchg
adcl
je
aas
out
fmuls
sbb
hlt
call
ficoms
xor
dec
punpcklwd
js
mov
lahf
testl
ficomps
out
lret
out
jmp
out
sub
xor
or
aas
dec
js
or
mov
std
les
mov
pop
pop
jg
jbe
push
pop
lods
mulps
or
pop
cmp
stos
outsl
push
sbb
xchg
add
xlat
mov
pop
dec
dec
sbbl
sub
aas
jecxz
cmp
push
test
dec
pop
push
lods
std
roll
ds
or
push
mov
cmpsl
mov
sub
dec
mov
es
dec
into
mov
add
mov
outsb
in
int3
test
movsb
into
mov
mov
inc
fmuls
insb
mov
inc
xlat
idiv
iret
cmp
dec
jnp
adc
mov
je
and
lods
imul
in
push
xchg
lret
xchg
arpl
repnz
push
ss
aas
jle
xchg
adc
stc
push
jae
fistpll
mov
cmp
in
jb
inc
pop
sub
movb
push
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
pop
in
cmpsb
jo
ret
jg
jo
ss
xchg
out
mov
and
insb
fidivrs
cltd
sbb
ljmp
jmp
mov
fucomip
add
ret
inc
mov
test
pop
or
ljmp
out
fsubl
mov
xchg
or
dec
mov
jle
call
subl
push
push
stos
sub
aaa
leave
pop
fdivrs
daa
xchg
lret
cmp
pop
xchg
out
shlb
stos
jmp
xor
les
fwait
shl
and
cmp
into
mov
sar
test
push
lods
repz
orb
data16
nop
jecxz
adc
sbb
stos
les
xchg
jo
jmp
xchg
xchg
add
xchg
insb
test
sbb
out
jbe
in
push
cmp
fsubrs
shl
lahf
jmp
jg
iret
or
stos
sbb
arpl
push
aam
insl
add
sarb
dec
mov
mov
dec
not
bound
jge
mov
hlt
push
jb
hlt
mov
test
sub
jmp
xchg
adc
or
push
cld
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
pushf
in
in
cmp
jo
pop
pusha
mov
icebp
rcrl
movsb
lock
sti
sbb
mov
in
and
out
gs
xchg
js
std
shl
add
arpl
mov
shr
out
pushf
dec
jbe
and
mov
ljmp
xor
cltd
sub
sbb
push
ss
lea
jge
jge
scas
jns
rclb
fdivrl
aaa
sahf
pushf
xchg
push
test
pop
adc
mov
dec
jp
mov
pop
mov
fcmovnu
out
mov
xchg
jns
jle
call
xor
mov
into
mov
in
xchg
shlb
clc
adc
cmp
inc
xchg
leave
xor
push
imul
and
mov
mov
jo
leave
hlt
mov
jae
ljmp
fisubrl
xchg
sar
inc
xor
push
sub
mov
hlt
js
and
es
mov
xchg
pop
jnp
popf
mov
popf
in
jns
ficompl
test
dec
sahf
xor
jae
adc
cmp
fs
inc
fnstsw
mov
int3
xchg
mov
cmpsb
mov
push
mov
sets
inc
call
and
lea
mov
jmp
rorl
sbb
pop
je
mov
jo
js
mov
sti
test
cmp
jmp
dec
add
movsb
das
cltd
hlt
fadds
ss
mov
aaa
xorl
cmp
jge
push
adc
push
xchg
in
sub
movsb
sbb
iret
or
popa
push
cmp
push
push
mov
sbb
add
movsb
xor
stos
mov
inc
and
inc
cmp
and
dec
sub
xchg
and
pushf
mov
clc
fisubrs
lret
jnp
lahf
fstpt
int3
pop
pop
loop
test
mov
stc
sarb
add
xchg
popf
add
jmp
in
push
mov
in
push
lock
cmp
int
gs
sub
cmp
subb
dec
enter
xchg
bound
push
movsb
add
pushf
cltd
fwait
jecxz
mov
das
in
ljmp
push
in
jno
pusha
aam
aam
jmp
push
jecxz
mov
lods
loope,pt
lock
scas
cmp
cmp
shlb
int3
inc
mov
cmp
rol
sub
and
fnsave
push
jmp
out
movsb
sbbw
in
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
sbb
jo
ret
jg
jo
cli
dec
out
hlt
cmp
sub
mov
mov
adc
test
jle
xchg
je
mov
xor
subb
jp
mov
dec
in
jge
dec
cmp
mov
inc
aam
sahf
adcb
mov
push
ljmp
pop
jl
xchg
arpl
ret
cltd
testl
mov
test
ret
or
sbb
dec
sub
sahf
jo
add
add
add
jo
inc
test
push
mov
xchg
adc
fbstp
and
fucomip
and
in
push
or
scas
scas
mov
and
mov
dec
jb
and
aad
mov
fistpll
lds
fs
das
cmp
add
pop
xchg
adc
xchg
clc
popa
inc
rorl
mov
imul
cmp
inc
rcr
xchg
mov
mov
adc
sbb
sub
push
aaa
adcl
jne
cmp
test
adc
or
mov
aaa
out
xchg
adc
mov
xor
add
add
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
in
clts
mov
ret
jg
jo
xchg
dec
mov
int3
mov
outsb
push
sahf
push
xchg
push
jae
bound
faddp
dec
subb
mov
imul
or
jnp
outsl
in
or
adc
mov
add
je
mov
xor
push
fidivrs
xor
std
shl
sahf
fdivr
arpl
cltd
rorl
stc
scas
jmp
jb
lds
adcl
shll
mov
adc
adc
sbb
xor
push
inc
mov
xchg
arpl
out
jne
cmpsl
test
int
rorl
arpl
xchg
cmpb
lods
xchg
cmpsl
hlt
ds
gs
jecxz
in
repnz
mov
stos
push
lahf
mov
dec
sub
adc
enter
test
flds
movsb
push
fidivrs
in
push
adc
mov
mov
dec
sbb
mov
arpl
out
jmp
mov
add
rcrl
lret
lea
lods
movsl
mov
jns
xor
jecxz
lret
or
sbb
sub
cmp
jno
std
cmp
pusha
jno
add
add
lret
or
add
gs
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
mov
jo
ret
jg
jo
aam
arpl
out
out
pop
xor
push
xor
inc
aam
jg
pop
in
mov
aas
push
pop
cltd
mov
out
mov
jge
bound
push
fidivrs
adc
mov
addl
push
adc
or
and
mov
sbb
out
inc
cltd
mov
push
adc
loop
push
mov
fcomps
stos
sbb
pop
add
jmp
jl
ljmp
movsl
xchg
jae
or
push
std
mov
dec
mov
ljmp
jo
out
adc
ss
mov
push
imul
add
push
jo
shl
pop
mov
push
shll
jne
sbb
ja
jecxz
sbb
jecxz
inc
icebp
sbb
push
daa
push
and
adc
icebp
adc
xchg
daa
test
clc
add
fidivrs
pop
iret
rorb
cli
xor
and
call
xchg
mov
mov
adc
inc
out
outsl
or
mov
ror
ds
and
sub
imul
mov
push
fnstcw
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
mov
jo
ret
jg
jo
hlt
push
aam
pop
xchg
inc
adc
adc
out
js
inc
scas
adc
or
jns
push
test
jl
mov
add
sahf
cltd
in
xchg
jne
xor
in
inc
out
add
inc
repz
xor
push
and
int3
inc
sub
inc
repnz
mul
xor
sub
movsb
jb
jge
cmp
pop
sub
loope
or
mov
add
ret
loopne
movsb
adc
and
add
xor
push
xchg
sbbb
sub
lea
pop
inc
decb
sub
loop
scas
insb
adcb
addb
test
push
sahf
push
xchg
mov
fadd
mov
int
lea
sbb
jmp
mov
in
ja
jb
mov
and
mov
and
xor
stos
sbb
inc
andb
mov
fwait
sub
mov
xchg
sbb
push
dec
mov
sti
insb
inc
rcll
jb
blcic
mov
adc
inc
inc
icebp
loop
mov
jne
and
movsb
ss
add
push
pop
pop
pop
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
mov
mov
lods
jo
ret
jg
jo
and
addl
js
pop
pop
adcl
xchg
push
insb
scas
leave
push
insb
adc
cmpl
sub
jmp
repz
or
dec
cltd
in
in
fwait
dec
test
je
sarb
ret
jns
xchg
repnz
mov
xor
jne
addl
call
subl
rorl
add
jp
call
pop
xor
sub
in
xor
add
mov
scas
add
scas
cwtl
cld
lea
sbb
cli
add
sub
in
sub
dec
fdivrs
rcl
das
popa
and
pop
mov
cli
clc
and
push
push
inc
pop
cwtl
movsb
jp
inc
push
jecxz
popf
mov
cmp
aam
call
shrb
dec
popf
inc
daa
lods
outsl
out
push
push
movsl
je
sub
mov
push
mov
sar
rep
jo
aam
mov
mov
out
or
mov
mov
inc
mov
push
sub
push
je
mov
dec
mov
mov
int
ljmp
mov
sbb
fidivl
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
pop
or
daa
shrb
jo
push
and
aaa
push
inc
rcll
or
je
xor
mov
ljmp
mov
push
lret
push
fisubrl
in
xor
mov
pop
push
xchg
mov
hlt
adc
adc
jp
inc
movsb
into
inc
das
cmpsl
jae
pop
aas
dec
ljmp
push
mov
mov
ret
ljmp
loop
lret
mov
pop
fstps
push
jmp
and
add
jnp
outsl
push
jb
or
mov
cmpsl
mov
add
mov
adc
insb
xor
addb
fisttpll
mov
outsl
icebp
mov
lods
jl
test
sub
sbb
lea
pop
ljmp
mov
or
pop
aaa
and
push
pusha
xchg
mov
mov
cmpsb
push
stos
and
aam
sub
sbbl
jbe
jmp
and
ret
jns
das
pop
lcall
loop
jnp
xchg
pop
mov
fidivs
popf
xchg
test
and
mov
jmp
and
sbb
pop
add
js
adc
ss
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
insb
ja
stos
jo
ret
jg
jo
pop
xor
cld
sub
movsb
shl
and
sub
jnp
mov
daa
adc
add
and
push
sbb
pop
xchg
jno
dec
add
sbb
pop
jbe
sbb
cmpsl
push
jo
xlat
out
mov
xchg
cmp
jge
jae
mov
test
in
xor
mov
das
loope
add
ds
dec
push
out
fstpt
push
pushl
xchg
cld
cwtl
dec
in
push
call
inc
push
sub
xchg
aam
and
mov
xchg
push
mov
cltd
clc
sbb
ret
das
cmp
lret
lahf
mov
push
lahf
dec
je
int
dec
adcb
mov
ss
ds
cli
xlat
pop
mov
lahf
lret
sub
or
fdivrs
push
mov
jle
das
xor
cmp
push
add
mov
dec
cmpsb
jne
push
lret
into
cmp
test
sbb
push
jb
inc
cmc
popf
scas
pop
jmp
mov
pop
fwait
sub
inc
ds
xor
cwtl
xor
mov
lods
or
repz
cmp
sbb
jo
xchg
test
pusha
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rol
add
jo
ret
jg
jo
push
mov
cmp
jbe
xchg
pushf
insb
imul
roll
int3
jb
pextrw
jns
aas
lcall
xchg
cmp
mov
mov
cmpsl
jge
dec
add
xchg
lods
cmp
mov
mov
mov
call
cwtl
pop
push
stos
test
mov
lret
dec
adc
inc
jg
out
arpl
push
cmp
pop
or
mov
xchg
pop
inc
xor
nop
enter
dec
cmpsb
into
int
out
lods
scas
js
repnz
jbe
mov
inc
into
in
sub
and
aaa
testl
and
mov
std
push
lea
xorl
daa
or
xlat
inc
es
or
mov
outsl
in
and
mov
gs
xlat
sbb
test
add
jbe
int3
test
jb
aas
mov
add
inc
push
scas
stc
pop
sub
std
jno
mov
pop
divl
bound
xchg
orb
cmp
jno
sub
mov
pushf
leave
push
xor
and
data16
fistl
push
bound
mov
jmp
inc
gs
icebp
imul
int
enter
jo
ret
jg
jo
inc
insl
test
and
lods
sub
iret
mov
fimuls
pop
push
popa
pop
test
movsb
int
jl
std
ss
test
in
mov
outsl
jo
loopne
pusha
ljmp
mov
loop
jno
data16
inc
pusha
test
lods
mov
fstp
shl
loope
xchg
xchg
jnp
add
fdivrs
cwtl
inc
sbb
dec
pop
push
push
fnstcw
test
call
adc
das
test
mov
test
adc
mov
filds
inc
fwait
mov
cwtl
cmp
inc
fstsw
push
push
stc
ja
pop
mov
std
push
pop
inc
lods
repz
sub
xchg
mov
xor
movhps
mov
push
add
rcll
or
cld
inc
cmp
andb
gs
adc
jbe
push
lret
insl
fsubs
jecxz
cmp
push
lcall
in
xchg
mov
inc
ficomps
push
jmp
cltd
mov
rclb
sbb
lcall
repnz
cmp
inc
nop
dec
inc
pop
xchg
cltd
pop
fs
push
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
mov
mov
jo
jg
jo
pop
iret
test
out
jg
xchg
stos
sbb
mov
add
lods
xor
sub
jnp
movsb
ja
pop
cmp
hlt
mov
lret
xor
adc
xchg
jmp
xchg
and
add
mov
in
xor
flds
pop
xchg
dec
scas
push
pop
aam
stos
cltd
je
xor
dec
mov
xlat
loope
lret
sub
add
daa
lahf
cs
xchg
jecxz
jp
mov
cs
cwtl
adc
repnz
ja
adc
mov
pop
jno
aad
out
xor
adc
dec
pop
push
jns
push
imul
imul
sbb
mov
mov
xchg
pop
sub
fwait
pop
xchg
lret
movsb
inc
test
out
out
mov
addr16
test
stc
stos
jmp
mov
loope
in
es
pop
adc
xor
pushf
jp
xchg
notl
push
in
lahf
lock
notl
popa
jne
out
or
mov
jae
pop
scas
inc
xchg
pop
mov
xor
adc
aad
and
jmp
jle
pop
stc
js
add
fbstp
push
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
testl
push
pop
mov
dec
aad
jl
repnz
repnz
jl
loopne
push
sbb
lods
popf
rolb
jno
and
inc
lret
mov
xchg
or
sbb
lcall
loopne
ss
xchg
xlat
outsb
jmp
cli
push
dec
cmp
hlt
jnp
movsb
cmp
sub
sar
mov
dec
in
adc
ss
cmp
or
lret
mov
and
sbb
mov
mov
mov
cmp
jbe
and
and
je
or
sub
daa
loope
mov
adc
dec
cwtl
mov
sbb
ret
cmpsb
int
sahf
pop
mov
pop
js
mov
test
push
sbb
hlt
stos
jne
inc
mov
cld
bnd
mov
out
jp
or
les
jbe
jmp
lahf
stos
push
jns
xlat
stc
add
outsl
mov
push
add
adc
sbb
fwait
push
mov
add
push
cmpsl
ds
pop
bound
enter
inc
mov
inc
shlb
jle
ret
cmp
sub
mov
cmp
psraw
lock
arpl
andb
push
xor
xchg
gs
push
loope
cmp
mov
je
xor
ret
popf
std
jecxz
lret
xchg
fildll
vpaddsb
inc
imul
pop
into
sbb
jl
and
mov
push
dec
jbe
push
ficomps
push
mov
fsubl
xor
jne
jae
rcll
scas
ret
mov
push
fstl
sahf
and
das
sub
mov
and
scas
pusha
xchg
mov
mov
push
movsb
push
xorb
adc
cmp
imul
aaa
mov
push
jg
push
cmpsb
mov
mov
nop
push
sahf
jno
inc
inc
pusha
mov
or
mov
add
inc
loopne
cmpsb
mov
mov
inc
fdivp
jecxz
nop
sbb
sub
add
cwtl
stc
jmp
mov
jo
sub
lcall
movsl
out
and
xor
jo
mov
add
inc
mov
aam
push
cmovle
bound
xchg
pushf
xor
adc
cmp
mov
sub
jge
addr16
pop
adc
dec
es
inc
call
shll
pop
mov
sub
push
push
int3
nop
mov
pop
or
sbb
xor
lods
mov
imul
or
mov
std
dec
pop
mov
js
mov
lods
out
pusha
ret
xor
xchg
out
leave
out
daa
mov
inc
movl
cmpsb
aam
pushf
mov
sub
add
fisubrl
add
incl
jl
jl
inc
add
int
sbb
pop
ljmp
ds
mov
ja
jnp
inc
lahf
sub
pop
jne
or
aam
add
andl
jne
lahf
addr16
movsl
mov
mov
or
popf
add
xor
xor
pop
jne
sub
pop
fldl2t
push
roll
xor
out
mov
dec
inc
sbb
add
and
fadd
sbb
xlat
out
cmc
lods
sbb
xor
cmp
pop
shll
jne
sbb
or
sarb
adc
mov
js
push
negl
jmp
mov
cli
xor
testb
mov
jns
mov
jo
jge
jo
sub
add
push
or
mov
sahf
xor
andl
cld
mov
decb
adc
adc
dec
notb
lcall
push
mov
enter
push
push
mov
ljmp
rcrb
shll
adc
and
mov
inc
jae
out
add
dec
mov
adc
mov
iret
popf
aam
cwtl
out
in
loop
mov
pop
cmpsb
ss
push
shll
push
test
dec
in
fists
psrlq
inc
mov
sbb
aad
pusha
sbb
mov
gs
fstl
pop
nop
clc
adc
xchg
add
or
call
add
sahf
adc
jns
sub
stc
or
cmp
pop
pop
negl
ss
hlt
fnstcw
pushf
cmp
aas
push
lret
inc
sbb
subl
jne
aad
xchg
roll
jg
mov
test
iret
push
inc
jno
xchg
rclb
movsl
mov
lcall
inc
loop
mov
sbb
mov
and
ja
insb
hlt
lret
sbb
xchg
xor
hlt
das
in
or
mov
inc
adc
sub
pop
aas
test
fmull
sub
add
fwait
mov
mov
movsb
sbb
sldt
mov
pusha
imul
adc
sbb
lcall
push
pop
icebp
out
sbb
out
adc
pop
jo
andl
cwtl
adc
adc
inc
icebp
push
push
push
shll
test
pop
cltd
and
arpl
fcom
ljmp
add
leave
shlb
xor
and
xchg
mov
mov
and
xchg
mov
mov
push
mov
loopne
jbe
mov
iret
fstpt
inc
jnp
fldl
mov
push
mov
popf
enter
inc
lock
test
test
jmp
addr16
xor
jecxz
scas
adc
rcrl
cld
lods
js
push
pop
adc
fadd
dec
xor
push
je
jns
xor
push
dec
enter
lret
mov
ljmp
in
in
add
jp
stos
imul
popa
cmp
cmc
mov
jl
into
mov
insl
sbb
push
cmp
sbb
movsl
mov
out
ret
or
add
cwtl
mov
and
stos
shlb
addr16
aam
mov
mov
pop
movsl
in
fwait
push
push
lret
rcl
pop
xor
push
out
mov
lcall
xorl
rolb
push
mov
decb
les
pop
push
sub
mov
xchg
jg
add
fmul
clc
or
mov
jno
jl
lcall
imul
dec
shlb
cmp
sbb
sub
jge
jmp
cmp
mov
pop
xchg
add
das
setp
push
js
xchg
sub
aaa
xor
testl
aaa
push
adc
fnstsw
jae
lea
and
push
lds
pop
inc
dec
and
daa
clc
mov
mov
adc
es
test
sbb
ja
mov
insl
and
push
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
into
loopne
adc
jge
jo
stos
jbe
sub
mov
out
push
sub
ret
in
ds
repz
es
add
cmp
mov
dec
or
les
mov
mov
rolb
and
data16
jmp
mov
outsl
mov
and
lds
sub
xchg
xchg
lds
fists
mov
jne
mov
orl
sub
lcall
fildl
inc
movaps
mov
cmpsb
enter
mov
ja
sbb
sub
push
dec
sub
orb
stos
cmc
push
inc
out
insb
int
faddl
pushf
pop
hlt
jbe
std
fcomp
les
jb
rcr
hlt
out
sbb
sbb
push
push
xor
mov
std
jno
jg
add
sarb
enter
in
dec
pop
bound
and
cli
push
xorb
xor
js
jp
adc
xchg
adc
das
sbb
mov
fyl2x
and
popf
hlt
mov
jp
out
add
pop
and
jmp
xchg
ljmp
es
adc
test
pop
subb
add
fstl
mov
lret
clc
pushf
jl
adc
in
push
movsb
jne
out
push
mov
cmp
mov
out
cwtl
fs
js
aas
orl
push
sbb
les
daa
inc
cmp
pop
adc
or
int
add
neg
leave
add
mov
mov
cmpsl
aaa
movsb
pusha
inc
mov
pusha
arpl
mov
jmp
jmp
ret
movb
push
test
mov
les
push
iret
adc
sbb
nop
jmp
movsl
inc
jmp
sbb
dec
xchg
movsb
int
sbb
mov
mov
es
cli
fstpt
mov
xchg
mov
int
cmp
adc
inc
and
add
jnp
jg
jle
push
mov
or
icebp
fwait
xchg
mov
outsl
mov
add
stos
adc
xchg
gs
popf
stos
push
aam
mov
adc
mov
into
lock
fimull
pop
roll
sub
lods
mov
inc
adc
popa
lods
pop
add
jno
jmp
cltd
data16
sbb
in
sub
loopne
jp
push
mov
and
adc
cld
or
mov
cmpsl
pop
mov
pop
pop
fiadds
or
ret
mov
jle
ljmp
cmp
xor
cmp
mov
popf
or
cs
cmc
add
jne
ds
push
xchg
fisttpl
adc
cmp
popf
xchg
mov
mov
xor
cltd
fiaddl
movsb
pop
call
mov
pop
aam
or
sbb
adc
dec
out
cmp
outsl
leave
xor
sbb
test
mov
mov
add
out
add
into
pop
pop
nop
fwait
mov
data16
icebp
or
jl
fcmovnb
adc
ljmp
ficoml
das
inc
mov
movsl
jg
pop
lds
sub
adc
imul
mov
scas
xchg
push
popf
outsl
stos
movntps
aam
je
or
stc
sub
scas
popf
add
mov
pop
das
scas
jae
mov
orl
and
xor
arpl
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
out
out
fistl
pop
mov
bnd
mov
cld
jge
mul
or
and
mov
dec
or
movsl
scas
loop
out
add
sbb
cmp
mov
popf
ja
rcrl
ja
cmc
test
sti
fcomps
fwait
pusha
and
sub
mov
and
fisubrl
push
jg
fwait
aad
sbb
mov
push
fmuls
xchg
test
jo
sbb
sbb
fidivl
jno
jmp
nop
pop
xchg
add
aad
mov
insb
jle
out
fldz
jecxz
cmp
xchg
lret
dec
xor
sub
ss
jge
dec
inc
inc
sahf
xor
or
xor
loope
lock
mov
or
enter
std
gs
cmp
inc
xlat
xor
and
into
in
sub
and
jno
xor
jno
jg
add
scas
jnp
push
sysexit
xchg
pop
int3
js
scas
sahf
hlt
xor
inc
inc
xchg
cli
std
outsl
out
push
adc
cltd
rcr
dec
in
arpl
sub
mov
aaa
mov
fildll
stos
push
data16
jg
mov
cld
inc
jne
inc
das
adc
cs
mov
sub
pop
dec
push
fcomps
adc
test
lock
mov
inc
in
test
addb
stos
dec
sub
add
xor
jae
arpl
cli
sbb
xchg
cmp
inc
daa
fisubs
pop
lock
sbbb
or
mov
clc
addr16
add
icebp
pop
push
xchg
cmc
jns
push
jb
out
std
dec
cwtl
icebp
into
pop
inc
cmpl
scas
jecxz
sbb
push
dec
adc
sub
sub
in
push
push
push
pop
cld
outsl
sahf
xchg
inc
iret
add
mov
add
sub
out
push
push
inc
lods
dec
call
pop
jg
and
ret
cltd
je
mov
orl
adc
pop
inc
add
mov
pusha
je
rolb
ror
ret
aaa
shll
push
lret
aaa
std
loop
xchg
es
jp
sbb
sub
dec
fbld
jnp
sbb
lahf
mov
dec
rcl
xor
inc
inc
std
pop
xor
fisubrl
inc
pop
popf
or
int3
jp
aaa
push
rcll
addr16
pop
movsl
mull
cmp
cmp
test
mov
stos
sub
cmp
pop
jne
or
dec
jle
push
jae
andl
shlb
push
cmpsb
loopne
xor
stos
scas
outsl
nop
lea
mov
out
ss
mov
aas
adc
push
mov
mov
fwait
dec
stos
je
pushf
lahf
rorl
hlt
pop
lcall
aam
rorb
dec
pop
mov
popa
add
out
popa
hlt
xor
inc
pop
xor
mov
cmp
jle
rcll
sbb
lret
rorl
jnp
xchg
insl
push
setb
sub
adc
mov
sahf
mov
xchg
jae
popa
addr16
add
in
xlat
jl
idivl
cld
rorb
sbb
cwtl
es
ret
testl
stos
mov
or
mov
and
jne
shll
ret
dec
or
jmp
mov
inc
fsin
repz
push
cs
mov
cli
mov
sbb
mov
add
jmp
outsl
mov
or
imul
daa
mov
jmp
inc
jo
mov
jl
ret
adc
out
lret
pop
sub
adc
push
add
ja
pop
aad
sbb
adc
add
sbb
pop
push
add
push
aam
push
jge
adc
imull
lds
mov
xchg
jmp
mov
xchg
enter
ret
imul
nop
mov
fs
pop
int3
test
fbld
jb
std
xchg
test
mov
mov
aam
orb
out
pop
or
and
jnp
mov
pop
repnz
into
cld
clc
outsb
pop
rcl
imul
xlat
fistpll
sub
adc
dec
inc
repz
mov
push
cmp
sbb
loop
shlb
dec
pusha
lea
je
arpl
out
test
pop
je
in
xlat
adc
cmp
dec
sbb
lret
xor
adc
test
xor
out
mov
push
aas
imul
mov
mov
scas
mov
leave
mov
mov
lea
mov
xor
les
add
mov
cmp
cmp
jle
lahf
testb
xchg
fptan
xchg
ds
std
movsl
nop
stos
cmp
clc
sub
movsb
pop
out
ret
iret
jb
into
jo
mov
add
xor
out
in
fs
dec
xchg
popa
dec
adc
movsl
xor
lods
sahf
pushf
frstor
push
pop
shrb
sbb
add
or
mov
pop
mov
out
dec
mov
jb
add
call
push
fisttpll
imul
aaa
stos
adc
xchg
pop
inc
lds
cli
aad
out
xchg
movsl
adc
mov
jle
add
inc
jle
shll
cltd
call
jnp
sbb
mov
lock
xchg
inc
out
sub
cmp
or
jno
xor
testl
mull
jmp
mov
sahf
xlat
push
and
mov
xlat
mov
sti
ds
sub
cmp
std
cmpsl
mov
xor
add
daa
je
pop
jp
test
decl
subl
dec
jo
push
push
fimuls
sub
addb
jb
sub
aam
push
in
in
imull
push
jne
sti
in
sub
pop
xlat
das
popf
pop
cld
mov
not
loopne
lcall
jno
jge
out
lods
xchg
add
fistl
and
test
fiadds
add
adc
outsl
scas
adc
idivl
aam
lahf
int
mov
pusha
inc
jge
mov
xchg
test
or
sbbl
adc
pop
insb
lret
push
lods
xor
or
mov
ja
jbe
fptan
insb
fnsave
mov
out
mov
cld
mov
mov
pop
and
rol
fs
push
jge
int3
decl
dec
js
push
aaa
orb
and
inc
bnd
loope
or
rorb
add
push
mov
xor
mov
fistpll
stc
icebp
mov
pop
mov
add
int
stos
ficompl
jmp
nop
test
js
leave
int3
in
ja
xchg
lahf
mov
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
fisttpl
inc
jo
pop
jge
jo
jecxz
js
test
add
ret
lret
mov
inc
mov
sub
and
mov
mov
pop
popa
jbe
push
aaa
das
sub
loopne
addr16
pop
fwait
loop
push
hlt
mov
mov
sarb
or
test
mov
sbb
jecxz
jmp
inc
xchg
xor
in
xchg
fsubl
ret
negl
or
out
aas
adc
out
ljmp
mov
add
jae
push
pop
rorb
mov
inc
and
repz
sbb
cmc
sbb
or
push
mov
pop
cld
rorl
jae
pop
inc
ljmp
mov
popf
and
into
rcr
stc
cmp
push
dec
sbb
fisubrl
cmc
xchg
jno
out
rorl
push
cmp
pop
and
cld
enter
push
jl
xor
pusha
ficompl
sahf
dec
xor
pop
scas
in
mov
out
mov
daa
pop
aas
pop
int
mov
sub
mov
aaa
sub
test
mov
sbb
test
add
or
xor
ja
or
mov
movsb
pop
sbb
mov
popa
fs
jo
jnp
stos
jmp
adc
jl
js
in
insl
jg
mov
insl
and
pop
pop
inc
sahf
js
push
and
xchg
jecxz
xchg
jle
nop
pop
sub
movsb
xchg
pop
lea
sahf
shrl
fbstp
pushf
lahf
xor
call
call
stos
cmp
adc
test
push
gs
sub
or
mov
pop
jae
adc
cmpsl
sbb
pop
lea
push
or
pop
scas
shl
add
hlt
fs
jae
in
popf
mov
pop
gs
sbb
add
lret
sbb
mov
add
mov
push
ucomiss
mov
sbb
ljmp
sub
lods
or
xchg
fisubs
or
pop
pop
jg
sub
div
mov
out
adc
rcll
insl
bound
xchg
sbb
adc
ret
dec
sbb
pop
fcompl
sbb
pop
test
loop
mov
and
cmc
xchg
outsb
lods
xchg
shrl
fnstcw
shll
pop
add
push
push
arpl
push
dec
push
xlat
ffreep
push
dec
sbb
rcrl
lahf
push
cmp
ja
push
push
sbb
pop
xchg
xchg
sbb
addr16
movsb
dec
jb
pop
jg
cmp
dec
mov
push
xchg
or
xchg
adc
aam
xlat
push
mov
or
ja
dec
test
sbb
xor
and
add
out
push
movsl
mov
adc
mov
inc
xchg
shl
fbld
fnstsw
pop
mov
gs
push
mov
je
outsl
test
imul
and
mov
sub
ret
sarl
fcmovnu
push
cmpsl
mov
dec
roll
sbb
xorl
repnz
sub
cmpb
dec
xchg
add
sti
lahf
js
jne
mov
xor
cmpsl
daa
cltd
hlt
mov
jne
jns
mov
popa
std
push
shl
inc
jl
push
sbb
push
popf
push
nop
mov
lea
mov
sub
xor
mov
sbb
inc
or
pop
inc
test
scas
mov
js
xor
jo
rorl
gs
in
repz
pop
xor
lcall
adc
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
xor
int
ficomps
aaa
xchg
jae
jo
cld
mov
pop
mov
scas
inc
sub
push
cmc
fidivrs
in
jnp
xor
in
adcl
inc
aam
shlb
mov
push
lock
dec
mov
pop
push
sbb
add
push
out
xchg
test
lahf
arpl
jg
dec
fistpl
movsb
adc
jne
aas
and
xchg
nop
fsubrs
jb
cmp
add
in
mov
pop
mov
cmp
adc
or
xchg
pop
and
dec
stos
mov
sar
jp
nop
sbb
xor
xchg
lds
bound
sti
scas
jge
and
and
les
jg
pop
test
mov
and
pop
aad
lret
mov
std
outsl
sbb
push
jae
lahf
cmpsl
enter
mov
inc
lahf
repz
and
dec
or
mov
jne
dec
in
mov
cmp
int3
sbb
ds
xor
loopne
je
mov
jne
add
repnz
stos
ror
aam
sbb
push
xchg
sub
adc
movl
out
call
sti
and
pop
lret
push
cmp
xchg
mov
leave
push
scas
jl
lods
xor
adc
pop
dec
inc
incl
int
jp
outsl
enter
lret
cmp
add
jp
and
lds
sub
rsm
pop
and
stos
xorb
iret
and
mov
jg
pushf
addl
adc
fistps
fstpl
scas
mov
ljmp
pop
movsb
popf
jg
je
cmpsl
imul
bound
jl
mov
movsl
loope
lahf
xor
jno
xchg
inc
add
cmp
insb
das
ljmp
push
imul
push
xchg
dec
xchg
gs
sti
enter
lods
daa
insb
dec
sar
cs
add
test
mov
das
or
movsb
ljmp
iret
jno
cmp
rorl
aam
mov
fcomp
pop
adc
mov
lock
xor
pop
cmpsl
in
pop
ljmp
or
lods
pop
and
leave
jns
xor
stos
popa
adc
outsl
rcr
out
leave
xchg
lods
pop
xor
clc
fisubrl
jno
jge
xlat
sti
cmp
pop
cmp
lods
rorb
dec
mov
testl
fwait
js
iret
xchg
jae
mov
or
sub
cmp
xchg
adc
or
mov
mov
je
mov
sbb
popa
jno
popf
gs
sbb
in
mov
inc
rcrb
cmpsb
pushf
gs
xor
shrb
mov
leave
shrb
push
xchg
add
or
into
icebp
xlat
jge
cmp
xor
and
pop
loop
das
ja
int3
in
hlt
out
imul
jns
test
cltd
push
ret
lods
pop
mov
adc
xchg
xchg
mov
xchg
adc
pop
jb
mov
call
push
jo
push
icebp
jo
mov
jne
cmp
cmp
in
xchg
fst
jnp
aas
xor
pop
dec
test
mov
adc
jmp
stos
out
mov
loop
pop
test
js
sbb
cmp
adc
add
mov
popa
mov
xchg
fisubrs
inc
cmc
scas
push
es
xchg
add
daa
shll
rclb
ficomps
mov
fwait
sahf
and
sub
sub
daa
mov
push
enter
mov
lds
sub
popl
mov
jno
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
fucomp
pushf
jecxz
dec
jo
pop
jge
jo
rcll
scas
roll
push
push
add
jg
pop
test
stc
or
dec
fisubl
push
or
add
xchg
or
jge
ja
cmp
add
enter
pushf
push
mov
dec
jno
fbstp
push
bound
add
stos
idivl
or
std
pop
mov
loopne
in
mov
sysexit
pusha
cmp
adc
orl
clc
dec
push
rcr
int
mov
pop
lret
sbb
dec
dec
mov
sub
adc
adc
movsb
lret
xor
lods
xchg
out
dec
sti
gs
and
loopne,pn
mov
sbb
popf
pop
xchg
add
inc
ljmp
push
ljmp
sbb
mov
test
stos
add
inc
jp
out
lock
pop
mov
mov
cld
and
cmp
ja
pop
jg
sub
movsl
adc
mov
cmp
inc
pop
test
loop
out
rcll
lds
lods
lds
xchg
xchg
xchg
push
cmp
ficoms
aas
nop
dec
inc
out
cli
cmpsl
mov
inc
loope
cmp
inc
nop
in
or
xor
les
fimuls
mov
cmpsl
mov
iret
xchg
jl
in
int3
in
push
test
push
out
push
std
bnd
dec
jne
flds
cmc
sbb
mov
leave
or
mov
movsb
cmp
mov
cmp
push
jno
xchg
jns
inc
gs
mov
ss
sti
adc
mov
pusha
out
adc
gs
dec
scas
lcall
pop
push
test
ja
addr16
addr16
clc
push
lds
mov
repz
jne
ret
mov
packuswb
lcall
dec
aam
mov
mov
mov
or
mov
push
mov
enter
mov
sub
inc
int3
adc
ljmp
xor
inc
fmulp
jl
icebp
cmp
pop
repz
lcall
jb
cmpsl
iret
daa
fistps
imul
stos
xchg
sub
jnp
add
mov
sub
mov
or
cmovb
stos
and
jl
push
push
push
movsl
outsb
ret
sahf
js
daa
rcl
xorb
push
xchg
ljmp
or
mov
into
out
pop
stos
push
mov
out
addr16
pop
jmp
aad
or
into
data16
rorb
mov
scas
dec
pop
add
mov
push
mov
in
jnp
shl
fdivl
push
sbb
or
xor
sub
cld
mov
xor
enter
lods
cmc
outsb
into
int
inc
ja
sbb
jne
push
and
sbb
add
cmp
mov
cmpsl
or
out
out
test
adc
div
pop
ficoms
adc
cltd
out
push
or
mov
and
pop
or
cmp
test
sahf
lods
outsl
mov
inc
sbb
rcr
imul
dec
idiv
dec
jl
or
insl
inc
jnp
mov
pop
into
dec
and
mov
inc
xchg
das
xchg
jp
out
gs
cmpl
mov
arpl
push
scas
inc
dec
add
clc
sbb
pop
sub
cmpsl
mov
into
sbb
loop
push
xchg
dec
fstpt
jno
ds
ss
in
dec
jbe
ficoms
ret
imul
jno
rcl
pop
gs
test
ficoms
jo
es
mov
mov
std
pushf
cs
loope
sbb
jg
shrl
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
and
pop
jge
jo
fbld
fstpl
scas
mov
cmp
push
clc
ficompl
xor
outsb
jecxz
ljmp
loope
cmp
sbb
sahf
mov
stos
leave
add
popa
aaa
xchg
ret
bswap
aaa
cmp
add
bswap
lret
pop
idiv
iret
lret
incl
inc
mov
inc
not
mov
sbb
lcall
sbb
data16
ret
setb
dec
mov
fistl
les
mov
pop
inc
cmc
repz
mov
push
loopne
pop
addr16
xlat
mov
inc
js
xor
sbb
cmp
inc
adc
std
mov
subb
lea
or
sub
xchg
imul
fsubs
jno
insl
ret
push
scas
mov
mov
imul
adc
std
icebp
sbb
stos
mov
call
mov
dec
clc
outsb
pusha
js
cmpsl
or
pop
shlb
cli
arpl
mov
mov
adcl
icebp
cwtl
dec
or
fldt
test
mov
imul
mov
movsl
nop
sub
xchg
dec
imul
adc
in
out
mov
pop
sti
mov
repz
xchg
pop
jae
scas
jmp
ljmp
pop
jle
push
fcoml
loope
sbb
mov
in
rcrl
pushf
shlb
push
loopne
stc
aad
pop
imul
pop
inc
and
outsb
outsl
lea
pop
pop
aad
ror
scas
xor
cmpsl
sarb
pop
cmp
into
adc
pop
je
push
shll
xor
inc
or
jl
cs
fistl
mov
adc
mov
aam
fimull
adc
faddl
fcmovnbe
daa
scas
mull
cmpsb
dec
jmp
mov
bound
mov
imul
mov
or
pusha
je
ret
xlat
or
jne
sub
daa
fimuls
mov
fwait
cmp
addr16
add
push
fcmovbe
mov
adc
or
push
push
sbb
sbbl
cmc
mov
push
cwtl
ficomps
mov
jne
jne
mov
pop
notb
shlb
dec
int
xchg
mov
mov
push
pop
xchg
xchg
inc
stos
jno
sbb
cwtl
sbb
or
mov
cltd
das
push
fiaddl
jg
fidivl
pusha
cmpsb
adc
inc
gs
inc
mov
or
xchg
push
test
fs
test
aam
sbb
cld
jb
mov
test
jno
into
mov
orb
xchg
adc
ret
cmpsl
xchg
mov
cld
mov
arpl
stc
lock
in
add
jns
push
sahf
mov
aas
mov
pop
aaa
scas
stos
push
leave
ds
push
jns
lcall
mov
roll
nop
sub
mov
pusha
call
out
and
ror
stos
mov
sbb
call
lds
inc
fsubp
js
cmp
and
fiadds
or
adc
pop
pop
add
sub
cltd
aad
out
or
xchg
inc
ret
insb
dec
adc
push
int3
mov
aas
mov
xor
fisttpl
lret
sbb
loopne
or
jno
fs
add
es
test
xorb
mov
mov
popf
cwtl
loop
stos
xor
repnz
lock
mov
push
push
and
and
fstps
pop
xor
negb
add
add
sbb
out
test
jne
adc
push
or
ffreep
cltd
dec
rcrb
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
in
push
jo
pop
jge
jo
cmpsl
or
lods
pop
out
jae
cltd
jecxz
aas
sti
sarb
leave
mov
fwait
adc
aad
sbb
xchg
loop
or
xchg
loopne
ret
fisttps
pop
or
ret
cmpsb
cmp
sbb
mov
and
dec
sti
cld
les
mov
mov
js
sub
dec
lds
adc
in
les
std
mov
jnp
pusha
outsb
jns
sub
push
mov
je
add
jg
mov
mov
repz
sti
das
adc
loope
mov
fs
pop
add
adc
aas
daa
dec
sub
adc
inc
jns
ret
lcall
sub
dec
and
ficoml
sub
imul
mov
test
jb
add
push
push
ror
loop
pop
add
ret
in
dec
ret
movsb
sub
movsb
notb
jns
jg
data16
xor
scas
sbb
daa
roll
psrld
int3
xchg
xchg
xor
in
inc
cld
aam
mov
loop
cltd
in
xor
or
xchg
insb
xlat
pop
sub
push
int
daa
daa
insl
xchg
jl,pt
xchg
xchg
push
xchg
sarb
sbb
dec
cltd
xor
sbb
xor
cs
jl
rcll
popf
mov
shlb
aad
lods
aam
cmpl
mov
ret
test
xchg
arpl
sti
add
inc
in
dec
fmuls
fsubrs
jbe
cmp
out
push
pop
adc
push
mov
cmp
mov
aad
out
mov
pushf
popf
inc
jl
jg
lret
adc
data16
dec
fistl
bound
bound
repnz
ljmp
add
frstor
push
test
in
pop
jl
loop
popf
ljmp
out
insl
cmpl
fcmovnbe
fistl
imul
aas
pop
mov
mov
lcall
int
jge
xchg
ss
iret
outsb
scas
add
and
push
repnz
in
xchg
shrb
xlat
addr16
daa
jp
icebp
inc
pop
fdivs
ror
jo
cmp
mov
sub
adc
cmp
mov
jo
or
sbb
daa
cmpsb
loop
iret
addr16
fcom
test
popa
in
jno
sbb
mov
jb
insl
xor
mov
jne
push
jbe
xlat
cmp
sbb
lret
push
adc
jp
xchg
or
aad
mov
incb
sub
mov
fidivrl
aam
in
out
icebp
addr16
mov
and
inc
iret
inc
daa
lcall
mov
insb
mov
insb
insl
push
scas
jle
sbb
and
sub
push
pop
clc
jg
xchg
mov
sbb
cmp
popa
lods
jge
xchg
into
mov
scas
test
ret
das
xchg
decl
cmp
xchg
cmp
push
pop
and
jle
pop
dec
cmpsl
shlb
repz
je
mov
dec
insl
and
fs
add
mov
mov
int
pop
xor
jmp
sbb
mov
mov
sbb
xor
jl
mov
mov
push
cmc
mov
sti
xor
jle
mov
jg
ss
daa
inc
dec
mov
add
in
test
rorb
adc
add
dec
push
out
repnz
mov
push
rorb
mov
mov
add
and
xchg
inc
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
jne
loop
inc
pop
jo
mov
test
ficoml
ficoms
ds
and
insb
mov
pusha
xchg
in
stos
mov
push
in
add
or
repnz
pop
insb
popa
bound
scas
les
mov
insb
cmpsl
mov
das
jb
adc
cmp
test
fsubrp
stos
xchg
sub
mov
fcoml
push
cmpsl
xor
cmp
in
jnp
in
test
out
insb
pop
jbe
scas
nop
mov
lods
aaa
shrb
jg
or
pop
shl
out
add
dec
xchg
dec
ret
pop
adc
stos
xlat
sbb
out
and
pop
mov
dec
in
mov
xor
xchg
in
dec
mov
sbb
ss
fmull
inc
ss
xchg
idivb
stos
pop
sbb
add
sub
arpl
in
mov
in
lret
mov
pop
add
fcmovnb
call
inc
push
adc
idivb
loope
mov
cld
movsl
lret
cmp
fs
push
pop
out
mov
stos
dec
hlt
dec
loop
pop
xchg
dec
dec
orb
out
inc
push
mov
pushf
lea
add
scas
mov
add
rcll
enter
sub
lods
sbb
fdivs
mov
je
and
sbb
mov
xchg
pop
ret
fstl
aas
jl
xchg
out
pop
in
sbb
scas
rcrb
fbstp
and
call
dec
fidivrs
test
add
testl
sbb
daa
mov
jge
xlat
jg
imul
mov
leave
pushf
xchg
stos
minps
jmp
leave
push
xchg
enter
push
ret
and
into
outsb
idivb
cld
push
ret
dec
xor
mov
ret
adc
pop
icebp
mov
mov
lea
mov
cld
call
out
int3
adc
enter
jo
mov
adc
cmpsl
cmp
or
dec
lea
int
or
cmpsl
cs
fisttpll
dec
inc
xchg
ja
xor
add
xchg
jl
xchg
mov
pop
xchg
ss
fdiv
out
hlt
fimuls
mov
push
aam
out
mov
outsl
xor
push
inc
cld
mov
cmp
jl
pop
push
outsl
imul
mov
mov
push
xchg
movsl
ret
adc
fdivs
rol
mov
data16
test
adc
ror
and
ret
adc
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
mov
subl
sti
mov
je
cmpsb
popa
pop
dec
das
mov
lahf
pusha
ret
cmp
or
shrb
pop
mov
push
adc
repnz
out
pop
lret
movsl
inc
pop
jmp
out
imul
mov
pop
out
dec
in
sub
xorl
cmpsb
mov
std
lret
in
sub
pop
js
out
jns
outsl
jo
sub
mov
xor
lds
aaa
sub
jg
jbe
adc
lcall
lods
and
pop
pop
cmp
jecxz
test
and
ficomps
ljmp
adc
push
mov
and
test
cmp
push
out
movsb
xor
xchg
push
enter
aam
ror
mov
addr16
jnp
inc
inc
sub
aam
bnd
jmp
pop
daa
mov
mov
mov
repnz
je
mov
mov
jo
neg
pop
sub
fs
xchg
std
sub
lcall
pop
ss
into
sub
jns
mov
sarl
mov
orb
lret
pushf
aaa
loopne
cmpsb
sbb
push
xor
clc
out
in
je
cli
mov
pushl
popa
jp
rcrl
loop
cltd
aad
cld
cmpsl
xchg
xor
push
jbe
arpl
divps
add
addr16
imul
or
js
or
loope,pt
pushf
ror
push
pushf
sbb
jne
xchg
lea
mov
pop
jnp
mull
faddl
add
pop
push
sahf
stos
cs
inc
sub
int3
repnz
pop
cmp
lret
lahf
cwtl
jbe
daa
sbb
roll
pop
pop
testb
mov
std
pop
test
movsb
call
or
iret
sub
pushw
dec
adc
push
add
fiaddl
push
insb
lahf
pop
mov
call
stos
mov
repz
std
shlb
push
in
cmp
addr16
jns
fisttpll
ret
scas
divb
inc
pop
add
pop
pushf
add
clc
adc
cmp
push
data16
fmulp
cs
mov
fucom
imul
xor
inc
jo
push
ret
push
mov
inc
sub
aaa
addr16
xchg
aas
dec
lret
cs
sbb
sbb
fs
rorl
outsb
insl
xchg
mov
inc
divb
dec
loope
data16
mov
out
xor
mov
or
bound
mov
adc
and
das
pop
mov
inc
cs
cwtl
movsl
xlat
fists
mov
pop
mov
dec
in
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
aad
enter
mov
outsb
imul
jmp
pop
cmp
push
aam
cmpsb
fldenv
ret
inc
sub
mov
lds
out
adc
sbb
into
je
add
fstl
fistps
sub
popl
add
cltd
pop
dec
js
cmp
xchg
pushf
enter
jb
sbb
mov
jle
pmovmskb
push
out
add
hlt
adc
mull
and
call
test
inc
mov
out
cmp
xchg
jne
jl
adc
jmp
pop
data16
in
jecxz
sbb
cmp
xchg
mov
fnstsw
les
cmc
outsb
cld
mov
je
inc
xchg
sbb
jmp
pop
add
aam
and
mov
mov
addr16
pushf
sahf
push
movsl
pusha
call
les
out
push
cli
into
mov
jl
test
mov
out
out
jbe
dec
fldl
nop
pusha
mov
ja
lds
cmc
pop
inc
sbb
fildl
clc
leave
imul
outsl
cmp
xchg
mov
cwtl
dec
adc
inc
in
jb
pop
insb
imul
push
cmp
xor
gs
imul
fstpl
sub
fadd
clc
mov
xor
mov
cmp
mov
fildl
jns
clc
pop
inc
add
in
sti
inc
popa
aaa
cld
jle
lea
int3
arpl
xchg
movsl
push
gs
xchg
stos
lock
fimull
idiv
cmpsb
iret
jb
and
mov
cld
aas
jae
iret
insb
xor
cmp
fsts
mov
leave
or
in
xchg
lcall
xor
cmp
sub
mov
mov
adc
and
test
std
or
fadds
dec
xchg
call
clc
pop
xlat
mov
mov
imul
cmpsb
cmp
ret
jnp
push
sti
add
push
dec
sub
notl
jns
inc
rorl
lret
aam
in
mov
movsb
inc
add
clc
fcmovbe
sarl
dec
mov
mov
sub
test
mov
in
mov
sahf
popf
arpl
leave
fisubl
cmc
pop
mov
nop
xorb
sbb
in
addb
adc
mov
rcr
pushf
jp
negl
sarb
cltd
xchg
fcoms
mov
es
xchg
out
lds
lods
dec
pop
add
insb
lods
movb
xchg
pusha
js
jne
fimull
cs
lds
xchg
add
ja
scas
cltd
rorb
test
add
add
mov
or
testb
std
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cli
ds
adc
jo
jle
jo
fdivl
shrl
sbb
loope
mov
push
in
orl
lret
mov
out
test
push
cmp
push
push
inc
call
pop
cmp
fistpl
push
or
mov
test
mov
jge
lods
rolb
pop
cmpsl
jb
sbb
lahf
cvtps2pd
js
jo
push
repz
sub
mov
xchg
andb
push
pop
sbb
adc
adc
sub
xorb
inc
inc
mov
in
ljmp
lods
ja
lret
xor
lret
xor
dec
into
inc
sbb
dec
cmp
bnd
pop
mov
cmp
and
jne
jp
jle
sbb
adc
jb
js
or
dec
cwtl
xlat
mov
iret
dec
xchg
imul
mull
mov
xchg
add
stos
pop
xchg
aaa
fsubrp
jl
fisttpl
into
lret
push
aam
aad
cmp
in
sbb
mov
jbe
out
jae
pop
cmp
xor
scas
add
or
mov
cmp
mov
nop
std
xchg
lret
push
add
pop
imul
adc
int3
pop
test
mov
mov
ljmp
xchg
jecxz
shr
rol
or
add
mov
int3
jl
mov
jg
add
sub
cs
je
xlat
xchg
cmpsb
imul
out
movsb
movsb
cmp
mov
shlb
icebp
aaa
sbb
cmp
sbb
xchg
mov
dec
outsl
inc
dec
inc
nop
sbb
adc
xor
out
mov
and
pop
sbb
dec
int3
add
pop
sti
xlat
jne
and
cmp
sbb
fs
push
jecxz
es
gs
push
cmp
push
mov
or
lock
mulb
test
les
inc
fiaddl
inc
shll
pop
repz
and
xchg
sub
add
out
or
lods
xchg
jmp
push
mov
int
push
jecxz
rcl
adc
pop
ja
mov
or
das
mov
push
and
cwtl
sub
out
xchg
lods
and
fidivrl
out
test
mov
push
jnp
lcall
in
jle
icebp
inc
mov
cwtl
or
xor
add
sub
mov
push
fstpl
stos
mov
mov
incb
loope
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
cli
sahf
movsb
std
or
mov
and
pop
test
nop
xchg
loope
and
mov
xchg
outsl
fsubrp
lea
add
mov
xor
mov
sysexit
js
push
add
jno
lea
pop
lds
pop
adc
out
cltd
mov
sbb
or
add
sub
aad
mov
dec
xor
cmp
data16
sbb
testb
fmuls
les
mov
dec
pop
and
popa
in
stos
pop
mov
push
daa
cmp
xorb
mov
and
adc
mov
jle
or
test
lret
cmp
mov
fmull
hlt
test
cld
dec
xor
and
out
nop
incb
push
add
clc
lea
aam
push
push
pop
in
add
adc
cmpsb
cmc
fadds
mov
mov
pop
cmp
mov
cs
xchg
xor
sahf
fst
inc
pusha
aas
add
movsb
js
cmc
loop
or
lods
dec
or
dec
mov
fmul
test
fs
jnp
push
jns
decl
xor
fsubr
add
inc
push
inc
mov
out
aaa
jae
or
outsb
in
popf
cmp
jmp
xchg
dec
sub
test
pop
inc
mov
adc
cmpsb
adc
inc
xor
movsb
xor
mov
hlt
bound
dec
mov
xlat
sbbb
popa
jl
cmpsl
mov
fwait
mov
xchg
lahf
sub
out
xchg
das
test
leave
mov
pop
jnp
inc
sbb
popa
xor
fiaddl
lahf
testb
xchg
jle
out
or
outsb
push
sbb
dec
out
cli
pop
sub
cwtl
sbb
leave
call
jns
xor
xchg
jle
adc
pop
lcall
aas
xchg
xor
lods
icebp
notl
pop
mov
mov
jb
fmul
inc
xchg
int3
mov
sbbl
mov
and
test
mull
push
xor
and
push
pop
or
mov
bound
cmp
dec
sub
mov
clc
push
jmp
push
into
adc
into
enter
xor
fwait
test
pop
sarl
mov
popa
rolb
ret
cmpl
sub
mul
daa
push
insb
je
imul
lsl
adc
push
xor
push
sbb
mov
out
cmpsb
inc
js
ret
add
xchg
cwtl
lds
aam
jne
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
popf
mov
jo
mov
dec
adc
aam
and
ret
sbb
sub
cmpsb
fnstenv
xor
sar
push
xor
sti
cld
nop
jb
sbb
xchg
mov
repz
push
jno
rclb
mov
sbb
mov
call
jp
cld
cmpl
outsb
je
fisttpl
adc
addr16
cltd
aad
mov
data16
xor
and
imul
mov
xor
mov
xlat
mov
pushf
push
jae
dec
pop
mov
jmp
mov
jo
mov
in
or
test
sub
and
cmp
and
add
cs
or
mov
pop
mov
mov
and
sti
int3
popf
outsb
loope
arpl
sbb
sub
cwtl
adc
lea
in
aad
mov
xchg
sbb
cmp
scas
cmp
inc
sbb
ljmp
and
inc
mov
addr16
insl
in
pop
xor
shlb
divl
stc
cmpsl
dec
sub
xchg
loope
aas
gs
cld
jo
test
adc
pop
push
xchg
mov
or
pop
jo
std
cmp
inc
mov
lods
ret
int3
jns
xor
es
rclb
xchg
xchg
cmp
lahf
mov
jns
arpl
sbb
fldenv
jae
dec
mov
sarb
xor
mov
push
decb
or
mov
inc
mov
js
in
loopne
xchg
or
fstpt
js
gs
or
and
test
push
add
jecxz
mov
test
lock
push
cmp
xor
sub
dec
add
stc
int
cltd
mov
lods
lea
in
pop
int
gs
pop
jl
sub
ret
add
loop
mov
xchg
nop
and
inc
fstpl
cmp
fadds
push
fists
xchg
out
sbb
or
dec
inc
pop
test
test
aas
cmp
fisubs
inc
inc
sub
repnz
cmpsb
push
sub
xchg
push
lods
movsl
and
cmp
adc
dec
fmuls
lds
lret
sub
imul
loop
xchg
in
mov
adc
and
and
lock
scas
scas
jbe
mov
dec
aas
lea
xchg
pop
add
cli
dec
adc
mov
xor
mov
push
cmp
iret
sarl
rolb
lret
iret
pushl
inc
aas
adc
jbe
sbb
and
add
loopne
test
pop
add
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
in
in
outsb
jo
mov
or
pop
jns
lret
scas
push
push
pop
mov
inc
in
clc
add
xchg
adc
and
inc
push
sbb
enter
jae
push
mov
es
and
dec
data16
lahf
and
or
fs
mov
or
inc
loop
js
in
stos
dec
sahf
in
sbb
out
jns
ret
leave
inc
loopne
xchg
or
pushf
jno
mov
daa
enter
dec
mov
mov
imul
jo
jp
das
xchg
mov
inc
enter
stc
and
xchg
dec
xchg
or
daa
hlt
add
xorb
jo
in
fcmove
fnstenv
push
jmp
dec
adc
jns
lods
sub
lods
iret
rcrl
sub
test
mov
mov
pop
fcmovnbe
lock
sbb
loop
test
push
fcmovne
jb
jecxz
movsl
sti
xchg
or
adc
or
int
sbb
fldenv
jno
in
add
fstpl
add
mov
ds
mov
pop
mov
addr16
push
ret
ljmp
xor
lcall
test
dec
bnd
dec
loopne
adc
and
sbb
mov
stos
je
xchg
mov
ret
mov
push
cmpsb
inc
pop
mov
data16
adc
inc
int3
xor
pop
mov
loopne
jb
push
insb
hlt
push
push
stos
dec
movsl
jns
lods
and
push
test
and
jne
and
jmp
pop
test
and
cmp
push
mov
hlt
in
push
inc
sub
or
aad
insb
mov
push
mov
mov
imul
mov
fwait
ljmp
mov
and
mov
imul
adc
shlb
adc
jnp
mov
inc
sub
or
xchg
xor
lret
or
cld
rclb
shr
mov
ret
xorl
inc
fstpl
test
cmp
jne
xor
or
adc
enter
popf
into
fiaddl
testb
mov
xchg
jno
es
call
mov
pop
imul
or
ret
cmp
xchg
je
in
and
cmp
leave
push
andl
lods
sarl
sbb
mov
imul
enter
clc
jne
pushl
jmp
and
lods
shrb
in
sbb
imul
jle
jo
xchg
cmpsl
and
pop
das
jge
add
mov
xchg
scas
repz
shrb
adc
idivl
jecxz
inc
pop
ja
popa
mov
ret
adcl
xchg
test
popa
add
ret
cs
insb
xchg
cmp
xor
jle
cwtl
sti
ret
pop
cli
push
jae
mov
add
clc
sub
pushf
insb
cmp
lock
fimuls
leave
xchg
mov
js
aam
loope
pop
psubb
inc
push
bound
enter
jae
in
or
lcall
test
rorb
repz
rclb
jbe
ror
push
repnz
aaa
dec
std
pushf
fdivl
pop
lds
sbb
add
push
push
xchg
bound
sub
mov
in
test
jl
shlb
xor
inc
ja
mov
outsl
xchg
inc
inc
cmpl
mov
push
adc
add
or
inc
test
push
xor
xchg
and
sbb
lcall
int3
add
out
stc
cmp
cmp
sbb
xor
imul
fs
push
cmp
loop
push
mov
push
mov
sti
std
mov
sti
out
aaa
mov
vmovq
inc
inc
roll
xor
fcoml
mov
mov
mov
jl
stc
mov
test
aaa
frstor
mov
mov
sub
std
aas
cmp
jmp
inc
pop
imul
aas
mov
jmp
mov
sub
sar
fists
fistpll
fpatan
rorl
in
sbb
clc
in
sub
sub
bound
and
xor
pop
push
xchg
mov
shlb
add
paddsb
clc
int
cmpsl
push
adc
cs
dec
ss
xor
sub
scas
mov
lods
js
and
sarl
data16
outsb
cmpsb
add
ds
push
cmp
js
in
adc
and
mov
in
test
sbb
pusha
test
cmp
ss
roll
xchg
icebp
xadd
push
xor
cmp
inc
cwtl
ja
mov
pop
orb
xchg
jbe
and
cmp
shll
mov
jle
add
adc
dec
push
inc
mov
mov
mov
mov
or
mov
fiadds
nop
mov
ret
cmc
push
cmp
fmulp
push
mov
cmpsl
movsl
test
outsl
cmp
call
jmp
pop
insl
and
xor
insl
jp
or
adc
push
jle
jo
mov
pavgw
mov
movsb
stos
adc
aaa
pop
inc
pop
adc
pop
cmc
cmp
sub
xchg
pop
push
sarb
ror
scas
nop
addl
insb
mov
and
neg
pop
mov
idivb
orps
repz
add
ja
xchg
mov
aam
adc
cld
xchg
jns
clc
mov
clc
dec
cli
loop
pop
cmpb
push
loop
xlat
rclb
movsl
aam
repz
shll
leave
js
iret
pop
leave
xchg
push
es
xchg
fsts
cli
xchg
ja
mov
mov
add
into
mov
shll
push
mov
faddl
ret
adc
loope
imul
xor
fcmovnu
mov
shrl
lods
xchg
xchg
sub
repz
jl
mov
mov
lock
xor
sbb
xlat
add
sbb
notb
dec
scas
mov
mov
loopne
ret
push
mov
fldenv
xchg
push
adc
xchg
jecxz
mov
jecxz
fsubl
inc
pop
out
repnz
jge
pop
add
lods
je
movsl
xor
xor
mov
sbb
mov
adc
and
cmp
int3
push
add
dec
into
ja
cmp
xchg
inc
aaa
cmpsl
cmp
pop
add
out
ret
pop
add
cmp
pop
out
dec
push
dec
ret
imul
aaa
xchg
inc
jb
xor
rcrb
dec
test
movsb
jl
push
js
xchg
cltd
cmp
loop
push
vpunpckhqdq
stos
or
add
insb
aas
add
test
inc
andb
jg
and
sbb
pop
shlb
fisttpll
mov
mov
fs
xchg
in
pushf
push
cmp
add
loop
jl
daa
mov
mov
loope
stos
mov
lret
fwait
push
sbb
dec
test
xchg
movsb
add
jo
dec
shl
and
or
mov
loop
push
sarb
sub
dec
push
dec
pushw
xor
xstore-rng
cmpsl
ret
inc
stc
aas
pop
push
out
or
xchg
sbb
inc
jmp
sbb
inc
cmp
cld
jns
cld
pop
inc
in
int
inc
sub
sbb
add
cli
dec
imul
pop
push
cmp
jns
cli
lock
imul
popa
sarb
daa
jle
aas
outsl
std
mov
xchg
push
add
and
in
lea
cmp
out
sahf
shl
xor
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
cmc
pop
cmp
inc
jbe
jo
jle
jo
outsb
fadds
sbb
cmp
sbb
loopne
cmp
ret
stos
in
sub
mov
vmovsldup
daa
or
jb
jmp
cmp
loop
jecxz
push
adc
js
jnp
xchg
jecxz
insb
add
jp
imul
sahf
mov
inc
adc
ret
pop
mov
cld
mov
and
lret
mov
jge
add
scas
jg
jae
scas
xchg
dec
dec
pop
stc
test
addl
or
xchg
pop
and
adc
or
mov
mov
out
adc
insb
pop
cli
add
dec
or
cmc
fnstsw
sbb
sbbb
mov
daa
test
lods
sbb
andb
push
test
addr16
sbb
bound
frstor
out
add
jge
call
sub
roll
push
loop
push
and
cmp
daa
xchg
into
or
xor
jge
mov
sbb
iret
xor
fcoml
jb
and
push
in
mov
xchg
mov
push
sbb
icebp
xchg
lret
repnz
mov
jle
incl
dec
andl
cmpsb
or
je
pop
call
aad
xchg
es
sbb
mov
inc
iret
mov
cwtl
aas
adc
pop
fadds
adc
inc
repz
sub
cmc
push
inc
das
cmp
pop
es
jg
aam
cmpsb
fwait
and
sbb
pop
lahf
mov
pushf
cmpsl
fincstp
or
dec
inc
dec
icebp
jge
imull
insb
xchg
stos
nop
push
and
xchg
clc
dec
pusha
jae
mov
mov
lahf
xchg
sbb
or
mov
or
cmp
arpl
xor
push
shrb
mov
pop
cmp
int
ret
imul
lcall
jp
aad
push
cld
pop
push
push
push
pop
rolb
add
pushf
pop
sub
jne
inc
mov
nop
rclb
daa
cmp
das
rclb
lock
dec
ret
pop
das
es
andl
notb
mulb
insb
lds
mov
dec
pop
into
sbb
popl
inc
dec
add
lods
outsb
mov
enter
mov
jle
sti
subl
loopne
mov
sub
sbbb
test
xor
or
cmc
xor
or
pop
jne
inc
loop
mov
scas
fdivs
out
cmp
cmp
push
add
inc
in
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
xchg
stc
or
jle
jo
cld
mov
int
aaa
movb
pop
insb
push
mov
dec
insl
xchg
out
std
jp
and
xchg
push
mov
add
xchg
cmp
lods
addr16
aas
std
ret
pop
call
inc
pusha
jno
test
cmp
pop
hlt
fdivr
push
cmp
inc
and
imul
movsl
fwait
jmp
int3
xor
popf
sub
fdivp
mov
mov
iret
fisubs
mulb
subl
pop
push
mov
cmpsb
push
das
stos
mov
sub
sbb
popa
dec
xor
pop
in
lea
or
cmp
add
jbe
call
cmp
fs
fdivl
std
sbb
bound
xor
or
push
das
adc
test
xchg
inc
cmpb
lret
sub
cltd
std
outsb
repz
push
aad
inc
or
push
or
mov
pop
inc
push
inc
sahf
add
dec
push
movsl
adc
inc
adc
outsl
out
stos
outsb
mov
fistpll
mov
inc
mov
mov
push
add
or
mov
into
jne
outsl
add
pop
cmpsb
stos
jmp
sbb
cmpsl
jmp
cmc
cmpxchg
pop
out
cwtl
cmpsb
fcoml
icebp
xchg
push
popf
and
push
stos
adc
aam
pop
in
outsl
pop
incb
dec
fcmovnbe
cmp
jbe
and
lods
sub
popf
imul
dec
mov
das
and
out
mov
rcrl
lahf
sub
sub
dec
leave
test
popf
outsl
addl
test
test
andl
or
loopne
dec
cld
data16
stos
rorl
jp
out
xchg
enter
cwtl
std
or
mov
cmp
xlat
xchg
pop
jge
mov
test
sbb
pop
pop
popa
adc
repnz
sub
sbb
outsl
rcl
pop
jo
add
xor
inc
sbb
dec
mull
xlat
imul
gs
add
push
incl
loope
test
mov
cmp
insl
sbb
jb
pop
add
or
fsub
sbb
les
pushf
adc
dec
adcb
outsb
cmp
dec
ret
cltd
cmpsb
mov
sub
out
nop
push
add
mov
or
jne
cmpsb
dec
cltd
push
push
push
push
jmp
movsb
aam
arpl
push
sub
adcl
inc
scas
inc
and
ds
mov
or
inc
inc
insl
rorl
std
cs
cmp
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
lahf
in
jo
jo
jle
jo
cltd
ljmp
pop
or
push
add
and
mov
jge
sbb
out
cwtl
adc
repnz
outsb
lahf
xchg
push
adc
mov
or
pusha
divl
xchg
psubd
nop
cs
sti
addl
scas
into
push
test
cmp
mov
ja
gs
outsl
mov
xor
jno
jo
push
pop
dec
cmp
imul
dec
pusha
pushf
mov
push
dec
pop
pop
xor
aam
adc
dec
sbb
fcomps
sub
xchg
xor
lret
mov
jmp
or
push
push
imul
dec
cwtl
sbb
mov
ja
mov
mov
fidivrl
enter
jl
lds
jp
daa
push
stc
aad
xor
psrlq
dec
sub
scas
data16
add
jle
sub
pop
fiaddl
lock
xchg
or
mov
sbb
repz
xor
pushf
repz
push
jno
out
add
mov
repz
mov
mov
mov
inc
aad
es
inc
dec
test
imul
cmp
dec
sub
popa
imul
jmp
aad
fsubrl
int3
mov
push
in
jae
mov
ret
jnp
iret
pushf
mov
int3
adc
xor
pop
sbb
dec
pop
out
call
outsl
jae
mov
sbb
mov
mov
loop
add
xchg
sub
push
mov
lea
mov
xchg
lret
cmp
push
jns
imul
ret
aam
std
call
push
cmpl
cmp
and
iret
jno
test
jnp
lea
mov
out
addl
movsl
inc
push
ja
mov
pop
out
icebp
cmp
inc
xor
mov
sbb
adc
test
xor
push
push
sub
movsl
or
into
pop
add
xchg
xchg
bound
jl
jmp
test
push
mov
shl
test
sub
inc
int
lock
mov
int3
popa
popa
push
lea
xor
cmc
stos
ret
movsl
pop
mov
dec
xor
test
xchg
sbb
inc
test
push
xchg
shlb
sbb
in
jge
sub
call
lcall
fs
mov
xchg
aad
loope
fcomps
aaa
push
cmp
or
fcomps
mov
xor
in
cmp
or
clc
xor
jmp
add
mov
jb
jge
jge
popf
pop
adc
jo
jle
jo
dec
out
or
movsb
dec
xor
or
fs
outsb
enter
imul
das
out
xchg
inc
cmpsb
pause
loopne
mov
mov
sbb
in
fld
sub
lea
push
jge
out
inc
into
out
dec
add
in
push
sbb
ficoms
icebp
dec
mov
cs
cmp
mov
lods
dec
sub
sub
push
cmc
sub
insb
popf
testb
mov
cmpsb
and
or
enter
mov
inc
xor
in
outsl
stc
jg
ss
outsb
xor
jns
add
mov
xchg
pop
inc
add
mov
shrb
sarl
in
inc
xchg
insb
push
xor
dec
jecxz
aas
popf
add
sub
pop
mov
test
cmc
xchg
mov
aam
xchg
fidivl
cmp
xchg
lret
ds
add
pop
dec
enter
into
das
add
sbb
sahf
adc
arpl
in
scas
or
pop
push
std
sti
add
mov
ret
dec
jbe
dec
mov
xor
push
pop
lret
push
das
les
xor
movsb
jmp
imul
push
pop
aad
mov
cmp
mov
fnstsw
xchg
scas
mov
mov
cmpsl
addr16
add
dec
test
jno
iret
fwait
or
lock
jns
icebp
cltd
sub
mov
jmp
or
jp
cmp
lcall
mov
lret
push
dec
fisttpl
imul
shlb
add
dec
mov
push
xchg
push
iret
sbb
jnp
pushf
sbb
cmp
lret
fidivl
lcall
or
movsb
push
and
jbe
in
or
shr
jbe
out
xor
inc
pop
sub
dec
push
movsb
arpl
mov
std
rolb
jbe
addr16
push
mov
icebp
and
lahf
arpl
cmp
enter
sbbb
adc
jg
cmp
out
test
imul
xchg
lcall
pop
inc
inc
add
adcl
in
jo
popf
sbb
add
jo
push
stc
cmp
or
es
cli
adcb
mov
jne
adc
fwait
dec
in
inc
xor
add
adc
xchg
stos
ljmp
xchg
jae
std
cli
hlt
sbb
sbb
or
divb
fimuls
idivb
push
les
mov
fld
es
cmpsb
scas
dec
adc
test
shrb
jmp
scas
pop
daa
pop
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
lea
lds
jg
mov
sub
cmpl
std
mov
mov
imul
add
fmull
jmp
jge
push
xor
int3
loope
cmp
mov
push
rcrl
les
outsb
pushf
jecxz
cmp
sbb
pop
push
mov
xchg
jmp
cld
jp,pt
jl
test
ret
scas
adc
out
mov
std
jg
mov
inc
arpl
push
mov
adc
iret
dec
rorb
add
cli
into
test
pop
fwait
xchg
leave
xchg
lret
push
inc
adc
inc
mov
jnp
cmpl
shl
test
pop
sub
divb
jle
jo
popf
cmp
push
mov
push
fists
add
or
sub
sbb
dec
hlt
xlat
sub
into
enter
or
xor
int
and
push
sub
scas
dec
adc
inc
sub
sub
arpl
imul
fnsave
mulb
xchg
xchg
push
subb
mov
mov
add
cmpsl
scas
xchg
cmpsb
jo
mov
or
xchg
or
and
mov
xchg
jge
jge
xchg
in
mov
fsubs
mov
push
or
add
ss
or
mov
shll
mov
and
adc
jmp
mov
into
mov
inc
xchg
pusha
das
imul
sub
xlat
inc
aas
xchg
dec
or
fisubrs
pop
or
or
fstpt
cmp
dec
pop
sbb
in
jbe
je
stc
mov
test
inc
xchg
cmp
inc
sbb
mull
iret
aam
push
out
mov
dec
xchg
dec
je
ret
jnp
xchg
sbb
lahf
cli
pop
cltd
sub
mov
pop
inc
js
sbb
bound
lcall
stos
ljmp
fsub
test
icebp
call
pop
sub
ret
sbb
out
sub
and
adc
popa
adc
xor
push
rcl
mov
jg
dec
mov
mov
out
cmp
scas
xchg
pop
loop
add
aad
push
int
mov
outsb
rolb
mov
dec
xchg
pop
and
push
je
bound
xor
leave
pusha
fiaddl
clc
jbe
push
push
rcr
mov
cli
mov
mov
loop
shr
inc
mov
rorb
sbb
inc
fadd
lcall
push
pop
pop
mov
jnp
mov
bnd
stc
xor
jl
sar
mov
ret
sbb
iret
sbb
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
gs
shlb
jo
jo
mov
pop
jne
int3
push
lahf
pop
clc
inc
jg
int3
xor
push
loopne
dec
sbb
adc
push
rcrl
jl
mov
push
test
sbb
icebp
loope
fmull
mov
xchg
sbb
lahf
add
add
cli
xlat
inc
mov
ds
jb
pop
mov
ljmp
dec
insb
fmuls
in
aam
inc
mov
sbb
inc
xchg
insb
dec
lahf
out
xchg
in
fs
popa
stos
sbb
movsb
call
addb
aad
add
in
inc
jmp
cmpsb
mov
pop
test
rol
cmpsl
sub
jmp
dec
dec
xor
std
mov
xorl
in
out
xor
dec
test
repnz
dec
pop
aas
gs
pop
mov
clc
ficoml
push
dec
popf
inc
rolb
sub
pushl
lds
lar
cmc
jge
ficomps
out
popl
dec
leave
mov
cmp
ja
adc
popa
aam
and
dec
andb
cli
negl
xchg
fs
fcmovne
mov
aad
test
cmc
xchg
xor
flds
bound
jae
cmpl
mov
inc
jge
xchg
popa
aas
repz
pop
dec
cmp
repz
push
add
in
cltd
inc
popa
pusha
pop
leave
sbb
push
and
adc
mov
mov
push
xchg
stc
ror
push
sti
je
icebp
insl
jno
in
cmp
and
pop
into
ds
mov
cmp
out
cs
out
bnd
mov
mov
icebp
xlat
mov
sub
out
hlt
jns
ret
dec
xor
push
mov
sti
sbb
enter
jnp
test
lret
xchg
mov
push
imul
add
dec
mov
adc
adc
jge
cmc
or
adc
leave
sti
fisttps
mov
shlb
insl
push
xchg
jns
fs
lret
pop
push
sbb
xchg
mov
xchg
shll
push
sub
addb
pop
dec
mov
fsubl
add
call
xchg
jne
lret
inc
orb
or
cli
cltd
jl
aam
adc
mov
lods
sub
mov
sbb
js
loop
xchg
jmp
sarb
cli
nop
mov
inc
xor
fcom
mov
dec
popa
and
mov
pushf
pop
mov
sbb
add
es
push
adc
loopne
ficompl
sub
mov
cmpsl
pushf
rcrl
iret
add
pop
pop
ret
mull
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fsts
add
jo
aaa
dec
pop
jp
inc
out
into
js
mov
pop
cmc
add
adc
loop
mov
xlat
gs
aaa
sahf
fwait
cmpsl
js
xchg
lahf
xchg
pop
mov
scas
mov
sbb
ljmp
jp
dec
fwait
out
xor
add
fisubs
pop
jb
pop
pop
daa
sub
xor
clc
add
xchg
orb
imul
ret
fcomps
push
dec
pop
adc
scas
and
outsl
sub
pop
adc
and
es
mov
add
and
jecxz
pop
xor
lret
out
add
loope
test
lds
mov
aaa
loope
sub
adc
add
sbb
dec
in
fsubl
flds
push
xor
shl
push
mov
sub
or
mov
xchg
xor
inc
orl
push
imul
je
pushf
lcall
js
jae
es
mov
jmp
fstl
cmpb
pop
dec
mov
pop
dec
enter
mov
jne
push
inc
out
xlat
mov
xchg
jecxz
mov
cmp
push
lahf
push
scas
mov
xor
mul
fbstp
inc
lock
and
imul
or
iret
shll
stos
cmp
add
cmp
into
das
imul
adc
jbe
adc
push
lods
notl
lret
icebp
loope
out
and
ds
push
mov
in
cs
aam
push
fs
mov
shl
push
push
aad
iret
lods
ret
pushf
mov
fs
sti
cwtl
cmp
pop
jae
cwtl
out
imul
and
dec
jbe
xor
sbb
cmc
pop
pop
data16
icebp
xor
mov
sub
mov
pushf
out
mov
scas
dec
bound
mov
add
inc
cld
gs
ljmp
push
repz
xchg
xor
mov
inc
test
out
mov
ds
rolb
loope
mov
dec
ja
or
imul
jnp
inc
jno
lret
mov
adc
ss
cmp
adc
das
cmp
mov
outsb
imul
xchg
shl
cmp
leave
stos
out
mov
jo
sub
jle
ds
adc
aad
aas
sub
push
out
and
cmpsb
rcll
mov
sub
loopne
cwtl
rcl
je
fs
push
ffree
mov
xchg
cmp
mov
fcmovnbe
mov
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
sub
push
add
mov
rcl
sub
push
push
sar
fdivr
and
popf
jmp
in
inc
enter
cmc
add
sbb
test
push
mov
cld
and
ret
rcrl
push
cs
adc
and
fcmovu
xor
outsb
xchg
ret
and
fcompl
cmp
sti
or
insb
scas
dec
mov
fidivrs
stc
inc
pop
fistl
add
mov
push
push
push
loop
mov
xor
and
mov
sbb
rol
loopne
int
jne
cmp
or
jp
inc
fcoml
mov
sbb
lret
or
mov
mov
or
xor
mov
cmp
in
dec
push
loope
mov
idivb
cmp
rorb
xchg
add
inc
or
xor
repz
popf
push
jns
mov
das
push
lock
mov
negl
int
cmp
dec
push
int3
dec
repnz
sbb
jne
inc
int3
insb
fldenv
in
mov
pop
xchg
sbb
add
pop
leave
adc
dec
fdivl
in
mov
cmc
lods
push
sbb
rolb
leave
sub
jl
push
or
int3
mov
lcall
loopne
adc
insl
test
sbb
je
aam
jg
xchg
jl
mov
movsl
leave
or
lret
mov
dec
das
cmp
and
xor
popl
sbb
lret
jl
jl
andb
mov
testb
mov
jns
and
mov
sub
inc
rorb
xor
sub
ja
inc
mov
or
into
sbb
jmp
gs
fisttpl
sub
and
mov
and
cmp
enter
xor
stos
addb
imul
les
jmp
testl
testb
jne
sub
loopne
int3
loope
shrb
pushf
mov
push
movhps
sub
pop
ret
jl
cmp
cmpsl
fiaddl
in
loope
imul
inc
xchg
inc
sahf
mov
mov
xor
sbb
test
xor
inc
aas
xchg
aam
cli
int
sbb
dec
inc
dec
jno
push
jl
mov
pop
push
mov
cmpb
mov
pop
mov
and
popa
or
mov
xor
jnp
out
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
mov
jg
mov
push
clc
mov
jecxz
ds
cmp
jecxz
jb
pop
xchg
xor
xor
push
aam
loop
rcrl
cmpsb
stos
cmp
adc
fldl
mov
idiv
popa
int
sahf
js
cltd
out
int
clc
mov
lds
sti
xchg
cltd
mov
add
push
aaa
test
int
fisubs
pop
repz
cmp
xchg
outsb
out
sub
or
mov
adc
stc
loope
jecxz
adc
pop
sub
data16
ds
jnp
inc
popf
lods
data16
lock
out
push
cld
xor
in
push
dec
imul
mov
xor
inc
jae
jb
mov
jl
test
in
push
inc
inc
push
lret
inc
jmp
or
pop
mov
aaa
mov
movb
cld
or
nop
das
shll
lcall
lea
adc
icebp
inc
or
repnz
mov
sub
ss
imul
xchg
fdivrl
pop
dec
out
mov
dec
call
jl
inc
test
in
popa
pushf
jbe
or
sti
int
mov
jae
scas
mov
leave
pop
push
leave
repnz
cmp
pop
adc
scas
das
add
data16
xchg
rorb
jg
jmp
mov
js
addr16
mov
ret
push
dec
or
int
sbb
in
ret
aas
mov
repz
les
xor
inc
mov
movsb
jno
cwtl
dec
cltd
mov
or
cmp
xlat
scas
repz
add
cs
arpl
imulb
rcr
dec
pop
popa
mov
call
jecxz
jmp
cmp
mov
sbb
pop
push
mov
and
insl
or
jb
in
stc
adcl
mov
lds
ss
add
cmpb
jns
jae
or
cmp
sbb
jns
and
pop
and
clc
adc
movsl
cmp
dec
hlt
sbb
in
sbb
pop
mov
mov
scas
into
je
fwait
lcall
mov
add
xor
and
out
mov
push
xchg
or
push
sti
loope
mov
sbb
xlat
add
pusha
pop
aam
test
js
subb
jo
lock
dec
sbb
repz
movsb
push
imulb
fdivl
pop
adc
addr16
div
jg
jp
ret
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
enter
mov
jle
jo
fwait
mov
xchg
icebp
inc
sbb
or
push
xlat
iret
ss
jae
lock
xor
lds
mov
push
movsb
xor
mov
or
sub
mov
jle
js
pop
mov
mull
or
es
xchg
dec
rol
mov
call
jno
dec
outsl
xchg
mov
push
faddl
in
mov
mov
psrlw
mov
mov
lret
xchg
cwtl
and
jnp
pop
cs
add
dec
and
adc
rcrl
repnz
outsl
push
repz
xlat
loop
inc
push
mov
sub
push
jl
and
mov
test
inc
movsl
test
cld
int3
in
bound
rorl
lahf
loop
aam
mov
in
cmp
enter
mov
lods
pop
push
cmp
push
push
jg
mov
adc
repnz
int3
xor
push
jg
mov
push
lods
mov
lret
cmpsb
cli
in
les
push
cs
outsl
cltd
imul
aaa
clc
mov
jb
sub
popf
xchg
sub
mov
mov
jnp
cmp
movsl
jno
lock
xchg
mov
and
jg
push
inc
popa
stos
outsb
adc
jnp
pushf
test
inc
icebp
cmp
inc
xchg
imul
adc
in
pop
pop
dec
push
orl
fidivrl
shr
jp
and
fsubrs
cmpsl
cmp
or
mov
cltd
xlat
cmpsl
cmc
std
arpl
dec
fucomip
push
repz
pop
out
cmpsl
sbb
or
cmp
stos
js
jb
loopne
dec
pop
cwtl
dec
xor
pop
pushf
imul
and
adcl
popa
push
repz
mov
sub
cmp
lret
push
lock
iret
aas
mov
icebp
dec
sbb
jmp
cmp
stc
add
sbb
add
mov
pop
mov
fmull
sbb
movsb
fwait
dec
data16
inc
cs
aad
sbb
sub
stos
lcall
popf
cmp
xor
mov
sti
add
bound
mov
call
and
adc
rol
fsub
pop
sub
inc
push
out
sub
imul
sbb
psubw
jl
mov
jns
int
sbb
mov
cmp
xchg
mov
mov
xor
insb
mov
jo
mov
push
popa
inc
daa
dec
cmp
repz
ficomps
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
cmpsl
mov
pop
orl
jo
jbe
push
jle
sahf
pop
sbb
ja
jo
daa
fidivrl
xchg
xchg
gs
outsb
xchg
pushl
out
je
sbb
mov
mov
pop
push
sbb
xchg
pop
cmpb
xchg
cmp
hlt
ret
aad
jg
nop
out
stos
dec
xchg
pop
cmpsl
cmp
or
jmp
inc
nop
push
aas
xlat
hlt
dec
in
mov
add
dec
loope
cltd
mov
dec
fcmovne
xor
out
test
movsl
shrb
xchg
and
mov
pop
or
cli
std
sub
push
dec
xor
inc
push
mov
mov
pushf
sub
and
popf
and
gs
mov
dec
or
shl
fildll
aas
mov
das
sbb
shll
push
scas
andl
jmp
and
int3
mov
into
sbb
ja
mov
pusha
pop
aad
pop
ret
sub
or
mov
pop
loop
je
and
and
inc
mov
out
lds
xchg
cmp
divb
jae
inc
xor
cwtl
and
xchg
pop
insb
xchg
sbb
loopne
inc
xchg
pop
inc
adc
fcoml
and
jno
hlt
jge
pusha
mov
mov
or
xor
leave
stos
movsl
in
jbe
xchg
lret
les
insb
push
mov
cs
insb
xchg
jge
xchg
mov
js
mov
cmc
xchg
mov
mov
push
jp
xchg
push
mov
xchg
dec
or
jb
aam
inc
ds
mov
je
push
cmpsl
and
xchg
addl
popa
push
jmp
sti
inc
fsubrs
xorb
stos
addr16
cmpsb
int3
enter
movsb
or
or
std
push
push
add
aad
inc
stc
pop
fldlg2
inc
pushf
push
push
arpl
pop
or
jnp
jle
out
sub
outsb
add
ret
xlat
push
push
mov
data16
dec
xchg
or
or
mov
inc
aas
and
mov
dec
dec
and
dec
nop
jle
or
lods
add
xchg
daa
or
cmp
xor
mov
adc
test
sahf
xchg
imul
or
out
loop
cld
sub
lret
mov
cltd
scas
cmpsl
nop
lock
push
nop
rcrl
push
fcomp
rorl
jb
pop
iret
mov
cmp
and
xor
stc
mov
lea
mov
sub
dec
movsb
add
sti
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
jb
test
jle
jo
mov
stc
rcll
mov
js,pt
insb
add
bound
int
xlat
test
jne
inc
sub
xchg
out
push
imul
xorl
sti
dec
dec
xor
xchg
xor
dec
lea
xchg
js
int3
xchg
insl
inc
jne
mov
push
jns
not
dec
jno
sub
test
push
xchg
mov
icebp
clc
adc
loopne
cmp
xchg
push
inc
or
out
in
and
fcoms
test
mov
lret
fsubl
mov
cmpsl
insb
mov
xchg
aaa
popa
in
lret
imul
dec
xor
and
iret
sub
hlt
sub
sub
add
jo
out
fidivs
daa
push
ljmp
out
mov
push
xor
xor
mov
scas
mov
add
mov
push
ja
cmp
or
cli
out
lcall
xchg
fs
imul
dec
mov
mov
into
push
popf
scas
sub
movsb
inc
xchg
sahf
pop
cmp
fwait
xchg
pop
movsl
setl
add
lea
lock
dec
xchg
cs
cmp
jge
sti
xchg
sub
adc
loope
sbb
cmpsl
out
cmp
xchg
sub
sbb
repz
js
or
bound
or
sahf
dec
or
sub
sti
pushf
pop
mov
xor
cs
fisttpl
jae
leave
adc
aaa
inc
addr16
ljmp
pop
mov
data16
inc
lret
out
inc
dec
xchg
test
lods
and
cmc
xchg
push
and
pop
bnd
fsubs
fisubrs
sub
sarb
cwtl
pop
xorb
daa
mov
add
call
scas
shrl
sub
mov
cmp
sub
push
fwait
add
add
ss
sub
mov
or
xorl
shll
pop
mov
xchg
adc
pop
movsb
add
loopne
mov
or
call
jle
jae
ret
mov
cmpsb
xrelease
mov
lods
rcll
dec
adc
mov
push
mov
push
lock
push
pop
or
xor
mov
mov
inc
sbbb
sub
mov
outsl
orl
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
fnstcw
mov
jl
std
insl
mov
stos
xchg
xchg
mov
subb
xor
add
fnstsw
aaa
sub
sbb
pop
and
and
ds
push
mov
cltd
inc
or
xor
or
pop
pop
aaa
push
jge
xor
add
pop
scas
fdivr
mov
arpl
mov
push
sub
mov
adc
lods
fnstcw
inc
imul
jp
jg
aaa
movsb
fdivrl
xchg
xor
movb
int
pop
in
mov
xlat
movsb
dec
add
cs
add
lret
cmpl
scas
repnz
in
fld
push
popa
loope
in
mov
fldl
fldl
push
mov
cld
sub
dec
lods
insb
ds
pop
aam
push
sbb
in
lea
ror
or
dec
and
push
or
daa
inc
jmp
xchg
sub
cld
test
jmp
and
mov
cmp
push
in
add
xchg
aaa
adc
push
inc
sub
inc
jne
inc
add
lahf
orb
cmp
filds
cwtl
xor
shlb
pop
fcmovb
in
push
cltd
rcrl
out
stc
mov
popa
stos
mov
bound
push
rcrl
shl
mov
mov
sbb
idivb
mov
leave
outsb
loop
push
mov
inc
and
out
add
adc
sbb
clc
in
and
dec
lea
xchg
lahf
mov
adc
xlat
loop
xchg
cmp
std
popf
pushf
mov
stos
ret
fists
mov
int3
outsb
imul
dec
in
andb
ss
popa
push
lea
std
mov
mov
xor
outsl
xchg
adc
pop
push
sub
jge
or
insl
sbb
js
xchg
xchg
or
cmpsb
xor
mov
inc
lret
in
into
sahf
sub
inc
inc
sub
iret
aam
gs
outsl
lods
arpl
pop
cmpsb
inc
hlt
leave
inc
ljmp
xchg
fildl
xlat
loop
arpl
andb
popa
loope
cld
std
cmp
inc
dec
sub
dec
pop
bound
sbb
xchg
out
jnp
mov
aaa
loope
dec
pop
sti
push
push
mov
outsl
pop
jecxz
xchg
xchg
pushfw
fwait
je
fidivrl
xchg
es
cmp
rcrl
clc
xor
mov
cld
rcrl
adc
ja
pusha
inc
mov
xor
enter
push
pop
mov
das
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
in
jmp
pop
adc
mov
int
inc
jbe
inc
pusha
sbb
jmp
lock
inc
cmc
lods
dec
inc
inc
push
push
push
daa
and
jl
out
mov
push
test
jl
aaa
xchg
dec
cmpsl
pusha
push
mov
mov
iret
ret
and
andl
mov
out
ret
jno
sbb
cmp
ljmp
xor
or
mov
idiv
lods
cmp
push
adc
loopne
sbb
loop
in
daa
add
pusha
jl
subl
mov
fdivrs
scas
ljmp
stc
subl
leave
push
leave
or
push
leave
sbb
sar
xchg
mov
js
popf
xor
jge
arpl
lds
pop
rolb
jge
hlt
out
xchg
iret
scas
js
and
ja
add
std
mov
lds
aaa
test
and
test
lods
je
je
mov
pop
out
mov
push
jne
lcall
sub
ficomps
push
sub
fwait
dec
idivl
push
inc
inc
xor
fnstenv
sub
int
adc
dec
fsubs
mov
adc
bound
cmpsl
leave
stos
jg
dec
mov
push
sub
movsl
inc
cmc
rcll
jns
mov
adc
mov
pop
fbstp
xchg
push
push
mov
xchg
sbbl
xchg
mov
pop
int
inc
not
imul
sub
addl
sti
xor
xchg
test
mov
mov
bnd
or
push
pushf
xchg
inc
inc
out
jbe
jae
mov
cmp
dec
cmp
pushf
add
divb
lcall
pop
lcall
enter
dec
lods
sahf
dec
xor
pop
es
popa
in
jo
int3
jl
inc
sub
fdivrs
lds
mov
mov
pop
enter
ds
mov
nop
ja
xor
dec
out
xor
push
sahf
mov
mov
fistps
pop
dec
popa
insl
add
sub
fadds
or
call
xchg
jg
xor
mov
sbb
mov
jg
mov
movd
outsb
cwtl
in
push
sub
sbbb
add
lret
xor
imul
cli
lret
es
add
sub
inc
inc
push
xchg
adc
push
rorl
imul
iret
dec
sbb
jl
xchg
cmpsb
adc
out
mov
stos
sbb
jecxz
xor
xchg
jmp
cmc
std
fs
jno
mov
or
int
pop
jg
mov
push
jl
push
arpl
push
sub
jecxz
pushf
arpl
cmc
ja
or
call
add
aad
mov
sbb
mov
in
and
mov
push
inc
rol
lds
add
mov
es
mov
addr16
pop
mov
mov
add
enter
sbb
lahf
jne
or
into
js
or
pop
cwtl
ret
push
repnz
jp
inc
push
jp
jmp
and
fiadds
adc
gs
xchg
mov
cmp
mov
out
jp
cltd
lds
adc
mov
jbe
jno
or
cld
call
jne
cmp
std
dec
fcompl
pop
jge
sub
mov
mov
dec
sub
cmpsb
popf
loope
das
inc
ss
sbb
test
mov
pop
popa
cmp
mov
lahf
mov
stc
pop
sub
push
cmpsb
das
icebp
add
inc
movsb
arpl
fxtract
fwait
and
cld
pop
sahf
mov
mov
shlb
mov
xchg
xchg
xchg
and
sahf
xorb
popf
sub
sbb
shlb
jo
or
in
xchg
pop
and
pop
roll
test
and
jbe
ja
add
mov
mov
or
mov
lea
out
clc
adc
pop
pop
adcb
push
jnp
mov
int
xchg
rcrl
adc
test
pop
jae,pt
mov
leave
xor
mov
ret
mov
or
cmp
js
mov
pop
shlb
bound
lcall
pusha
out
pop
sub
add
inc
sub
mov
into
cmp
push
adc
push
mov
out
sub
inc
add
xchg
push
stos
add
xor
js
movb
inc
push
out
fcmovu
pcmpgtw
dec
rclb
cmpsl
cld
mov
sub
cmp
arpl
insb
sub
pop
dec
outsb
fcoml
cld
cmpsb
jle
xor
or
and
or
and
or
mov
mov
arpl
inc
lds
lds
push
test
int
dec
aam
mov
xor
mov
pop
inc
jbe
imul
pop
pop
loopne
shl
mov
or
push
cmp
das
loop
mov
incb
rcr
cmp
add
jo
insb
icebp
cs
cmp
sub
sti
xchg
jle
popf
cmc
jecxz
mov
mov
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
pushf
js
imul
sbb
jo
jle
jo
or
adcl
dec
ds
punpckhbw
push
lahf
inc
pop
out
cmpl
pop
shlb
fsts
insl
inc
daa
aam
popf
shl
sbb
mov
dec
rcrl
jg
dec
mov
into
int3
loope
adc
movsl
imul
add
xchg
int3
jmp
imul
dec
sub
mov
mov
outsl
movb
mov
jo
rcrb
jae
aaa
jno
iret
jns
sahf
and
mov
cmpsb
loopne
mov
aaa
add
ret
iret
xor
and
mov
adcb
out
dec
mov
rcr
sti
push
cwtl
mov
js
test
pop
sub
mov
movsl
and
inc
aad
ficoml
popf
cmpsb
cmp
dec
loopne
sbb
sub
popf
pop
xchg
popa
push
dec
xor
ficompl
push
pop
mov
rcll
fdivp
aam
mov
cmpb
movsl
jo
inc
aas
jns
push
dec
in
push
dec
int
cmp
cmp
adc
cmp
xchg
xchg
jg
push
cltd
sbb
ljmp
cmp
pop
push
mov
sub
out
mov
add
aad
jl
inc
cmp
sub
inc
mov
in
icebp
stos
jecxz
xor
lods
test
fsts
cld
dec
shrl
dec
out
adcb
and
loope
int
sub
dec
pop
cmp
push
push
gs
daa
dec
lock
mov
out
popf
or
lods
jae
adc
sbb
pop
subl
clc
xor
loopne
xchg
jbe
adc
inc
call
int
andl
mov
dec
push
sub
mov
push
dec
mov
dec
mov
cmp
ror
xchg
xchg
xlat
inc
xchg
pop
cmc
or
mov
ja
or
jo
jne
lods
into
enter
fsubrl
add
sbb
jl
xchg
ja
repnz
adc
mov
adc
in
add
push
out
jecxz
push
adcb
sbb
dec
outsl
ds
aam
pop
out
outsb
mov
cmp
and
cmpsb
rorb
xchg
cmp
mov
adc
add
ja
fchs
lret
jbe
popa
add
jo
cmp
sub
or
add
into
cmc
jmp
dec
xor
movsb
inc
adc
inc
fcom
mov
mov
pop
push
fistpll
ret
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
scas
dec
scas
dec
aaa
sbb
mov
push
pop
adc
int
and
nop
mov
jmp
rclb
or
mov
ss
mov
stos
xor
fld
add
xchg
insb
push
mov
lret
popa
ret
or
shrb
cmp
pop
notl
mov
cwtl
mov
push
loop
sbb
add
rorl
stos
faddl
push
or
cld
push
inc
sti
push
in
repnz
stc
cmpsl
scas
inc
loopne
js
pop
movl
repz
mov
in
xchg
test
sub
sahf
cmp
fxch
ret
cmp
movsb
test
sti
adc
pusha
lret
clc
fldenv
push
ret
leave
sbb
cmp
push
ret
pop
jp
mov
in
cwtl
mov
add
jae
into
push
push
inc
or
sbb
andb
or
mov
loopne
mov
mov
inc
jo
xchg
mov
aas
xchg
cmc
and
mov
shll
xor
mov
or
cmpsl
mov
cld
push
lods
cs
in
xor
in
scas
int
sub
sbb
test
aas
push
mov
lock
repnz
dec
loop
push
cwtl
lret
mov
les
lret
pop
addr16
scas
fldt
pusha
xchg
sub
shrb
ret
mov
push
jns
sarl
mov
adc
mov
lea
pop
jbe
mov
sbb
jg
mov
js
jbe
ss
test
jecxz
xor
pop
adc
insb
pop
mov
push
adc
out
push
cld
mov
mov
push
sub
shll
loope
jnp
cmc
adc
xchg
in
push
leave
adc
cld
aad
inc
addb
sar
lahf
loopne
mov
or
adcl
movsl
lods
aam
sub
cmove
test
sahf
sbb
js
push
arpl
or
jno
insb
dec
add
xlat
lods
daa
dec
out
ret
arpl
stc
push
pop
sub
js
in
add
mov
gs
popa
cwtl
imul
popf
shr
pushl
add
mov
sbb
in
shlb
fdivs
dec
bnd
pop
mov
cwtl
dec
inc
jae
ds
cmp
jle
movsl
add
test
jae
jmp
mov
insl
jns
add
popa
stos
adc
lcall
sub
push
std
xorb
sbb
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
loope
push
cmp
jg
mov
call
in
dec
add
test
sbb
sbb
out
hlt
xor
cld
subl
xor
push
xchg
ss
icebp
pusha
push
repnz
aaa
movsb
or
mov
or
add
cli
xchg
mov
loope
cmp
mov
adc
or
and
cltd
adc
mov
cmp
inc
jns
insl
lret
lock
mov
adc
enter
cmp
arpl
in
sbb
mov
out
dec
test
jecxz
cwtl
rcrb
scas
xchg
shlb
icebp
pop
mov
lods
mov
inc
jo
js,pt
push
movsb
adcl
mov
push
shrb
das
and
add
jg
insb
pop
vmwrite
pop
mov
stos
mov
inc
sbb
iret
jge
test
dec
push
cmp
pop
mov
es
lret
insb
jo
decb
gs
and
mov
sub
sub
cmpb
xchg
pop
and
std
mov
xchg
mov
push
faddl
mov
movsb
xor
data16
xchg
sub
in
push
dec
test
pop
loope
enter
dec
xchg
push
cltd
jno
inc
es
inc
push
imulb
or
mov
sbb
adc
jg
call
test
cmp
rcll
mov
sbb
or
lahf
int
je
xor
call
inc
out
mov
sti
pop
orl
ljmp
fldenv
mov
push
sub
lea
subl
xchg
in
ds
stos
jecxz
mov
cmovns
loope
push
jmp
aaa
out
mov
clc
jbe
pop
lds
cmp
es
sub
jnp
icebp
movsb
shl
or
ss
xor
es
mov
or
hlt
popf
insl
fcomps
push
xchg
push
adc
push
gs
movsl
ret
mov
loopne
cmp
mov
mov
fsubrs
cltd
inc
insb
pop
loope
cld
jno
lahf
push
out
insl
cs
add
lret
in
cmp
xchg
daa
in
adc
lods
mov
mov
aad
pushl
mov
cmp
lods
xchg
mov
rcll
add
lret
ja
adc
movsl
add
jge
icebp
adc
mov
mov
int3
outsb
xchg
stc
jmp
cs
dec
in
cmpsb
outsb
sahf
cmp
cmpsb
daa
mov
pop
mov
das
lcall
popa
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
and
jo
jle
jo
cwtl
sbb
in
xchg
push
sub
out
dec
mov
adc
sbb
jg
pop
cltd
or
call
in
xchg
int3
jno
sbb
mov
sbb
fidivl
out
mov
mov
daa
push
addb
inc
pop
mov
jmp
pop
jl
bnd
push
sbb
imul
dec
mov
mov
repz
jo
pop
jle
out
rcrb
iret
rclb
imul
cmp
aaa
cmp
push
sbb
mov
pop
or
adc
sbb
scas
dec
mov
lcall
adc
mov
or
fldenv
xlat
and
lock
daa
pop
cltd
adc
mov
scas
mov
xchg
sub
mov
aam
pop
push
sub
dec
std
xacquire
jle
mov
jg
jmp
xchg
incl
loopne
adc
pop
cmp
sub
sub
push
stc
ja
sbb
mov
loope
pop
test
or
cmc
jnp
loopne
jecxz
adc
cmp
fldl
or
xor
mov
and
rcr
call
lds
jge
clc
push
cld
dec
lret
pop
push
mov
icebp
shll
test
add
xchg
popa
testb
mov
cmpsl
lods
jo
or
inc
or
sub
jl
jp
push
push
mov
movnti
push
sahf
push
mov
mov
and
mov
sahf
sub
lods
xchg
shll
cmpsl
fdivr
cmp
int
and
pushf
mov
push
xchg
insb
pop
cmc
out
sbb
sbb
cli
push
sahf
cmp
pop
scas
aam
mov
xor
stos
pop
sub
xor
jo
cmpb
push
loopne
inc
xor
scas
clc
data16
addr16
pop
adc
sub
ret
ljmp
out
mov
xchg
mov
sub
sbb
push
cmc
add
rcrl
push
gs
pop
push
repz
mov
mov
pop
jmp
add
xchg
mov
pop
or
and
push
xor
add
arpl
rorb
cmpl
adc
negb
cs
push
ljmp
popa
and
add
stc
jge
adc
fsubrs
ljmp
dec
mov
int3
push
pop
test
into
cld
push
imul
cmp
lcall
adc
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
