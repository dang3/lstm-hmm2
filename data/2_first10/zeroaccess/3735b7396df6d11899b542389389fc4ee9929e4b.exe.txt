push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
and
stos
sbb
sbb
sahf
adc
sbb
inc
sub
mov
mov
clc
out
or
xor
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
lea
gs
es
loope
into
sub
fwait
pop
add
add
adc
jnp
xchg
sbb
sti
jbe
adc
hlt
imul
stos
dec
shll
lcall
sbb
mov
add
mov
inc
sar
gs
push
push
xor
insl
sub
inc
loope
lret
jge
cmp
out
adc
jl
stos
xor
pop
mov
into
sub
adc
lcall
jmp
rorl
ss
jp
jge
cmpsb
pop
pop
addr16
or
addr16
mov
lahf
add
and
jmp
jg
mov
imul
cmp
inc
pop
jp
je
outsb
mov
cmp
jno
aaa
inc
iret
loope
mov
std
imul
push
jle
jecxz
insb
mov
push
rorl
movsb
inc
mov
pop
mov
mov
mov
mov
sbbb
jg
dec
rclb
lods
call
mov
lock
inc
lcall
push
mov
cmp
xor
jae
inc
add
arpl
fsubl
cs
hlt
loopne
movsl
daa
inc
into
jnp
inc
adc
mov
stos
lods
outsb
fdivrl
orb
push
jns
ljmp
pop
fs
jne
dec
adc
sbb
mov
pushf
mov
inc
sub
pop
xlat
insb
pop
xchg
pop
sahf
sbb
pop
sti
mov
adc
dec
xchg
inc
jno
lret
insl
push
lea
pop
fistpl
or
xor
push
xchg
cmpsb
xlat
pop
and
add
pop
cmc
adc
fldl
mov
mov
fldcw
fisubs
les
mov
daa
pop
clc
data16
fs
sbb
stos
mov
mov
push
pop
lds
sbbb
dec
or
gs
jecxz
das
xchg
test
jb
or
pushf
cmpsl
cmp
aad
mov
or
cmp
test
or
or
mov
inc
jb
fcompl
gs
xor
sbb
push
shlb
sbb
mov
mov
xorl
mov
imul
mov
cmp
jae
sbb
ds
mov
mov
mov
or
mov
push
dec
pop
cmp
lods
push
int
test
repnz
pusha
cwtl
cmp
mov
lret
pusha
dec
cmpsl
mov
ficoml
scas
orb
mov
pusha
adc
fcomps
xor
shlb
mov
lock
push
lret
stos
iret
jnp
outsb
sub
ud0
and
and
mov
add
fadds
or
add
adc
scas
lods
ss
movsl
in
in
repnz
stos
jl
loope
testb
xor
imul
gs
or
and
sub
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jl
adc
sbb
movsl
xchg
faddp
mov
sahf
insb
sbb
inc
and
aad
idivl
loopne
aas
mov
lret
push
sbb
or
test
add
rol
addr16
sbb
lret
cmc
jp
insb
mov
push
xlat
fcoms
repnz
xchg
dec
ds
imul
inc
add
jecxz
imul
mov
add
mul
xlat
addr16
push
test
sub
test
adc
mov
xor
js
xorb
xor
inc
icebp
add
xchg
je
js
sbbb
es
dec
dec
pop
clc
mov
adc
inc
repz
jg
jmp
jle
sbb
shll
xchg
dec
fldcw
push
and
jecxz
adc
pusha
xlat
push
add
ret
roll
movsb
popf
mov
inc
add
dec
cmpsb
adcb
call
sbb
dec
and
mov
sbb
in
int3
dec
clc
cmp
pop
or
scas
jb
inc
ret
adc
xchg
inc
ret
aas
add
enter
loop
cltd
mov
les
outsb
mov
adc
fnstenv
cmp
mov
in
mov
popl
push
out
fidivrl
das
adcb
cs
pop
adc
ret
dec
mov
imul
push
sub
xchg
add
push
jp
dec
pop
lahf
and
lret
and
mull
xlat
jno
movsb
pop
out
scas
jg
xor
cli
cli
pop
jo
hlt
out
dec
stos
sbb
sub
ljmp
mov
in
out
mov
inc
add
xorb
add
and
and
loopne
in
inc
stos
pop
push
adc
stos
insl
add
fisubrl
movsb
ljmp
dec
push
sar
push
stos
pop
jnp
cmc
outsb
test
cs
push
push
movsl
cltd
loopne
sahf
or
sub
push
add
call
fwait
sarb
mov
xlat
negl
pop
mov
ljmp
xchg
adc
adc
mov
cltd
popa
repz
repz
pop
pop
dec
outsb
aad
stc
adc
fcoms
ret
jbe
daa
imul
push
in
daa
cmp
lock
cmpsb
sub
cmp
sbb
cld
lods
jl
jns
outsb
pop
testl
loope
cmp
enter
scas
sub
data16
cltd
xchg
jge
je
xor
fdivl
cmp
sub
or
pop
add
xor
pop
mov
ds
es
outsb
mov
jo
push
sbbl
in
pop
fidivl
bnd
xchg
add
icebp
jmp
cld
inc
jo
fcoml
lahf
jae
push
repnz
sti
rcll
fldcw
inc
mov
cmc
divb
inc
out
sbb
sub
lock
leave
push
repz
imulb
lds
fiadds
aaa
xor
leave
cwtl
sbb
inc
dec
pop
popf
lahf
pop
push
aaa
minps
bound
mov
movsb
inc
sbb
adc
jbe
cmp
push
stos
xchg
stc
xor
jnp
mov
je
mov
and
pop
int3
push
imul
adc
mov
adc
or
popa
lahf
and
fisttpll
mov
mov
xchg
sbbl
iret
sarl
push
popa
sub
mov
mov
loope
mov
cmpsl
cltd
and
xor
push
das
stos
or
idiv
cmc
into
fldt
cld
mov
outsb
sub
pusha
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
insl
in
and
adc
sbb
mov
sub
je
sbb
out
repz
xor
nop
pop
imul
pop
ja
adc
std
sub
push
push
lea
xchg
mov
stos
xor
rcll
sbb
mov
in
fwait
sub
leave
fcom
hlt
scas
and
lods
push
mov
sbb
mov
nop
icebp
or
shrl
pop
popf
mov
cltd
mov
cld
jge
or
rorl
xor
ret
xor
in
out
pusha
call
jo
sti
sub
into
rcl
dec
add
jbe
std
call
mov
scas
test
push
pop
mov
and
push
out
cltd
cmp
outsb
cmpsl
or
jno
add
mov
aad
fdivrs
or
push
adc
call
push
mov
add
push
mov
xchg
ret
cmpsl
scas
xchg
sahf
dec
or
pop
sbb
xor
shll
dec
jae
aas
rcrl
out
sar
cmc
cwtl
xchg
jle
aaa
pop
mov
addr16
lahf
adc
sub
adc
lods
jbe
mov
inc
ret
test
mov
stc
sahf
leave
stos
sbb
movsl
push
push
scas
dec
fisttpl
lds
pop
mov
inc
loopne
push
sub
mov
pop
out
mov
aas
nop
cmp
popf
in
enter
dec
mov
std
enter
mov
mov
inc
push
cmc
cmp
lret
push
push
push
jle
inc
adc
lds
sbb
jmp
ret
mov
inc
jb
jg
negl
lahf
stc
sbb
or
in
das
pop
test
pop
test
mulb
push
clc
sub
mov
sub
xor
or
cmp
cmpl
and
leave
cmp
jo
shrb
fildl
adc
arpl
xchg
add
fs
aas
and
jl
lea
mov
fimuls
and
xchg
add
les
ljmp
inc
cmp
sub
add
xor
pop
outsl
imul
cmpl
xor
dec
push
mov
and
arpl
cs
cli
or
xor
jbe
bound
adc
out
jecxz
mov
add
das
cli
push
add
push
mov
adc
mov
sbb
dec
lock
fs
daa
ret
and
push
mov
in
test
pop
pop
leave
lods
sbbl
insl
aam
adc
leave
int
mov
call
mov
pop
add
push
jmp
xchg
xlat
sub
lret
dec
dec
out
stc
pop
div
xor
xor
mov
pop
push
sub
movsl
push
jl
dec
enter
cwtl
sbb
xor
xchg
mov
mov
iret
mov
adc
pop
aas
outsl
inc
test
pop
fisttpl
pop
adc
clc
and
insl
dec
add
or
mov
xchg
sbb
scas
dec
divb
adc
add
jge
fldl
sarb
imul
pushf
cmp
inc
mov
mov
push
stos
jo
subb
or
shl
nop
jnp
mov
pop
ret
call
adc
fisttps
xchg
dec
jnp
inc
pop
push
adc
mov
fildl
and
lds
mov
and
jle
cmpsl
pop
inc
in
dec
fldenv
or
cmp
stos
icebp
push
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
nop
cmp
xchg
mov
jge
lods
jb
xchg
addl
aad
es
iret
dec
loope
in
mov
aaa
sbb
xor
bound
aas
sahf
dec
adc
movsb
mov
pop
xchg
dec
sbb
mov
scas
sbb
jg
cmpsl
push
les
mov
xchg
sbb
push
rcrb
mov
pushf
enter
imul
pop
push
fstl
sub
jg
inc
adc
jae
jge
out
sbb
inc
cmp
stos
daa
cwtl
pop
cli
scas
cs
lret
lock
cmc
out
les
fistps
pop
and
lcall
lahf
insb
push
les
sbb
mov
adc
jmp
imul
fdivs
adc
mov
sbb
inc
fs
leave
jg
arpl
dec
leave
icebp
fisubrs
in
clc
inc
fnstenv
push
ja
cmp
out
fmuls
inc
cmc
fs
inc
out
fwait
push
scas
pop
call
sbb
insb
mov
jle
mov
xor
nop
add
adc
hlt
add
bound
push
xor
inc
out
sub
pop
repz
mov
in
xchg
dec
lods
xor
sub
jne
xchg
cmp
mov
cld
sbb
pop
insb
pop
cltd
xor
lahf
out
inc
scas
push
jg
push
arpl
ror
xlat
jbe
or
push
faddl
or
fwait
test
dec
pop
scas
inc
pop
rorb
filds
js
out
sbb
push
cltd
pusha
jo
xor
in
nop
xor
outsb
push
sub
loope
ja
jne
aas
push
push
js
inc
mov
testl
sbb
rclb
xchg
lret
sub
scas
xchg
adc
aaa
jae
pop
ret
stc
lea
jno
outsl
xlat
xor
push
loop
mov
and
mov
out
mov
cltd
sbbl
jl,pt
pop
and
scas
test
sbb
mul
inc
ss
cwtl
fldenv
lds
subl
xchg
aas
adc
xor
sahf
dec
fmul
insl
call
cmpsb
lea
cli
clc
ds
sbb
xchg
cli
es
sti
insb
jl
sbb
or
cmp
lea
sub
mov
clc
enter
push
ds
repnz
adc
cltd
xchg
out
ret
pop
mov
xor
xchg
addl
xchg
enter
sub
inc
sbb
sub
inc
flds
fwait
adc
mov
cmp
dec
in
jb
pop
stos
mov
lock
in
fadd
and
lock
repz
cltd
int3
pop
mov
push
xor
int3
cmpl
sub
dec
xchg
mov
jae
mov
fildl
push
loopne
enter
dec
cmpsl
int
jbe
daa
pop
cmpsb
mov
cmpsl
stos
in
cmp
scas
adc
fxch
or
stos
or
test
cs
push
push
rorl
jmp
movsb
sbb
icebp
bound
mov
mov
or
and
daa
adc
mov
stc
js
adc
pop
cli
roll
arpl
stos
push
and
cmp
adc
xor
dec
gs
cmp
adc
outsb
repz
shl
add
adc
test
addl
shlb
lods
mov
jno
jmp
test
adc
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
cld
sbb
sahf
adc
sbb
jecxz
xor
in
jg
cltd
popa
xchg
cmpsb
in
loop
sbb
xchg
sbb
aam
inc
mov
int3
leave
xchg
push
jp
hlt
push
lock
jg
popa
and
jb
inc
cmp
xor
ficompl
nop
mov
add
loope
mov
adc
xchg
pop
jp
mov
mov
loopne
cmc
jp
xchg
repnz
dec
sub
mov
mov
aam
iret
sahf
jno
test
repnz
test
aaa
xor
cmp
push
push
xor
notl
mov
or
sbb
ja
leave
sti
and
fcmovnb
xor
push
or
movsb
sbb
pop
movsl
xor
mov
aam
aaa
pop
xchg
shll
aas
cld
mov
mov
loop
test
and
std
movsl
ljmp
call
fcoms
rclb
fcom
mov
cld
lods
mov
sbb
inc
mov
cmp
enter
imul
shll
ss
rolb
xchg
push
lret
mov
pop
rol
aaa
and
mov
test
out
sbb
scas
push
xchg
js
cli
test
dec
mov
ds
mov
hlt
xor
jbe
imul
dec
or
push
xchg
jo
fwait
inc
movsb
sub
scas
loopne
jno
mov
aaa
add
div
inc
add
negb
cmp
out
push
push
cmp
xor
dec
fdivr
jg
mov
sahf
js
sub
ljmp
bound
insb
in
sub
cmp
add
cli
mov
pop
or
rcrb
pop
sbb
lock
nop
rcll
push
xchg
in
movsb
or
js
adc
lea
xor
clc
jecxz
cmp
iret
mov
insb
dec
fsubs
xor
fsubrl
cld
inc
mov
in
mov
pop
push
mov
push
gs
repz
inc
shl
repz
or
inc
popf
xor
call
cmp
mov
mov
aas
push
cmp
movsb
jmp
ss
xchg
add
jo
repz
mov
adc
sub
push
or
in
arpl
sahf
cld
cli
mov
xor
adcb
rcr
jbe
test
imul
stos
xchg
pushf
ja
in
jecxz
ja
movb
lds
shll
outsb
pop
outsb
fiadds
sbb
leave
bound
mov
pusha
lcall
loopne
fisubs
add
mov
inc
or
test
lds
sub
das
test
movsb
clc
dec
mov
sbb
push
mov
and
cmp
inc
loope
cld
clc
in
or
adc
adc
ljmp
sar
inc
or
test
imul
es
and
xchg
sbb
jo
xor
mov
fwait
stos
fistps
popf
mov
xchg
xor
xchg
cmc
mov
cmc
sbb
inc
xchg
jl
mov
adc
jg
jo
push
int
jecxz
mov
popa
xchg
std
sub
ljmp
push
mov
loop
push
call
pop
outsb
mov
rclb
mov
imul
mov
scas
enter
pop
in
imul
imul
sbb
clc
insl
mov
enter
ret
inc
pop
mov
xchg
push
repnz
dec
xchg
inc
mov
mov
pop
mov
pop
mov
push
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jle
hlt
sbb
sahf
adc
sbb
and
stc
xor
sub
add
into
cwtl
or
sub
fildll
sbb
cmpl
xchg
xchg
jle
push
cmp
or
mov
mov
sub
fldt
xchg
jecxz
jb
push
push
daa
loope
repz
xchg
push
inc
call
cld
and
mov
inc
loop
in
negl
dec
xor
pusha
xor
aas
fnstcw
repnz
mov
mov
movsb
nop
adc
sbb
enter
repz
pop
jg
test
mov
or
or
and
sbb
mov
push
jmp
sub
add
jge
daa
sti
and
mov
stc
mov
jecxz
movsl
scas
mov
sarl
lods
inc
loope
aas
ljmp
inc
mov
icebp
inc
inc
add
dec
inc
inc
add
mov
or
rorl
mov
xlat
mov
add
iret
in
fdivrl
adc
lahf
xchg
fadds
aad
xor
mov
out
test
js
sbb
stc
push
pop
movsl
lret
push
or
pop
ret
lock
push
push
xchg
testb
and
jns
andb
add
adc
or
gs
ja
cmp
jge
test
dec
fbstp
pop
repz
add
pop
and
lahf
and
bound
inc
pop
aaa
dec
xchg
mov
xor
cmp
push
dec
xchg
push
push
jnp
insb
fists
xchg
inc
dec
add
jg
in
enter
popf
push
push
movsl
fxch
pop
bound
add
inc
and
icebp
out
jge
cmp
mov
inc
sub
xlat
push
adcb
inc
mov
xor
jbe
or
aam
adc
fwait
mov
xchg
mov
rclb
lret
inc
pop
sbb
dec
shlb
sahf
lods
xchg
fsubrs
and
push
stos
lcall
xor
lock
scas
jnp
sbb
outsb
into
or
xchg
mov
int
and
mov
gs
sub
iret
dec
xorb
xchg
dec
lahf
mov
mov
fs
rcrb
stc
scas
mov
rol
popf
lods
out
shlb
xor
pop
loopne
or
loop
sub
stos
jle
and
mov
rcrl
add
sbb
das
aam
fdiv
xlat
pcmpeqb
ljmp
fs
aam
adc
dec
sbb
adc
mov
and
sub
je
xor
cmpsb
fbld
ret
dec
rorl
scas
arpl
fst
iret
lret
outsb
lods
and
into
mov
jle
dec
push
out
movsb
cmp
loop
and
mov
int
and
mov
sbb
mov
pop
or
push
xor
mov
lcall
sbb
adc
test
inc
adc
push
sarl
mov
or
push
mov
cmpl
jg
sbb
sub
bound
jge
add
data16
sahf
dec
xor
add
iret
mov
nop
imul
add
inc
lret
xchg
pop
xchg
xchg
scas
adc
fcmovb
addr16
lods
sub
dec
dec
and
dec
dec
lea
adc
cmp
push
gs
dec
insb
pusha
repz
fs
cmpsl
scas
pop
mov
ds
adc
lods
movsb
push
push
add
sbbb
lret
inc
and
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
push
sub
sbb
inc
pop
negb
or
sbbb
pop
psraw
dec
or
out
or
test
hlt
addr16
and
lods
jl
cmp
add
add
sub
sub
sbb
pop
repnz
divb
mov
adc
mov
cmp
pop
cmp
jbe
xchg
loop
movsb
adc
enter
std
popa
cs
jbe
sub
adcb
adc
gs
sbb
decl
jb
and
fidivrs
pusha
jns
and
icebp
jecxz
push
add
cld
jp
mov
int
iret
test
dec
add
xchg
aad
lods
sub
push
jo
adc
pop
ret
push
dec
xor
movsl
test
stos
test
enter
mov
stc
fimuls
repnz
mov
insl
filds
add
mov
scas
xchg
cmpb
jg
loopne
negb
pusha
sub
nop
cmc
stos
andb
in
lcall
das
out
stc
nop
xchg
mov
push
scas
mov
pop
push
pushf
dec
push
sbb
or
add
sub
fiadds
push
nop
adc
movb
adc
lods
mov
add
movsl
push
idivb
jge
cwtl
inc
mov
mov
xchg
jle
push
cmp
stos
dec
bound
les
xchg
xor
add
movsb
pop
sub
stos
arpl
mov
mov
inc
lock
xchg
jecxz
or
addr16
outsl
pushf
xor
dec
loopne
es
xor
jp
sbb
iret
mov
or
mov
sbb
or
lahf
adc
sbb
stos
imul
add
add
out
aad
in
movsb
test
repnz
cmp
inc
xor
inc
scas
pop
cmp
mov
prefetch
lret
popf
push
xor
xchg
cmp
pop
xor
fisttps
shlb
xchg
push
fs
xchg
jae
xchg
roll
mov
pop
jns
repnz
jbe
ret
ret
add
jl
daa
rcrl
push
inc
jle
sbb
cs
mov
sahf
std
or
cwtl
jbe
in
dec
or
mov
gs
popf
lret
sbb
ss
and
shlb
aam
lcall
pop
mov
incb
lret
and
jmp
scas
int3
test
int
insb
ror
push
rcr
push
scas
adc
fisubl
test
stc
das
push
mov
sti
pusha
loope
jo
stos
idivl
call
lds
int3
cmc
inc
push
test
or
dec
pop
cmp
xlat
cmpsb
cmpsl
mov
push
add
out
lock
arpl
lock
popa
mov
scas
gs
jns,pn
cli
cs
test
test
xlat
and
in
call
cwtl
cmpsl
mov
adc
sub
hlt
add
xchg
xchg
insb
sbb
lods
fcmovnbe
lock
shrl
popa
lods
jb
cmp
fnstcw
imull
and
cmpsb
stos
imul
inc
cmp
xchg
jecxz
into
xor
push
loopne
dec
cs
sbb
andb
add
xchg
jmp
daa
sub
icebp
adc
add
lret
loopne
push
jae
jecxz
rolb
jle
inc
ror
fstl
jb
orb
rorb
dec
in
cmp
movl
jne
jmp
sbb
fldt
sbb
or
insl
mov
sahf
adc
sbb
mov
cmp
loop
in
shl
lret
cmp
xchg
arpl
mov
data16
pop
in
fbstp
cmp
xor
mov
or
jbe
adc
push
dec
into
fisubs
repz
stos
cwtl
pmaddwd
sbb
movzbl
mov
icebp
inc
out
sbbl
ljmp
mov
mov
adc
sbb
cld
shlb
add
xchg
fnsave
mov
outsl
int3
jb
test
shl
lods
jg
adc
sbb
iret
mov
sbb
aad
test
mov
stc
push
rcrl
inc
and
mov
xchg
aaa
iret
ljmp
push
xchg
scas
pop
pushf
cli
mov
mov
fstpt
pop
jle
je
cmpsb
cld
es
inc
data16
lahf
jbe
inc
mov
cld
mov
jl
push
mov
lret
sub
or
fstl
jns
add
mull
stos
mov
ret
fcoml
or
adc
dec
dec
ds
div
mov
and
cltd
test
in
addr16
popf
mov
leave
test
fcmovb
mov
out
cmpsl
rclb
test
cmp
mov
pop
js
int3
out
ja
sub
mov
sub
gs
mov
insl
cmpsl
adc
rolb
xchg
pop
fwait
pop
fmulp
cmp
mov
out
jae
insl
jns
adc
fsubl
jns
insl
inc
loope
popa
fidivrl
and
popa
decb
sti
popf
jo
cltd
jg
xchg
jp
mov
lock
jl
das
loop
and
and
int
pushf
sbb
jbe
ret
mov
cs
orl
add
or
pushf
xor
or
mov
dec
and
test
cld
cltd
dec
jmpw
and
mov
sbb
xchg
shll
lret
adc
and
push
sahf
push
and
jns
pop
ljmp
mov
ja
outsl
mov
jecxz
jns
dec
test
fwait
lock
jae
push
aas
lods
lahf
cltd
jnp
lret
decb
mov
xor
cmp
cmp
jmp
pushf
fnstsw
aam
dec
mov
popa
pop
popf
incl
outsl
inc
add
xchg
cmpsl
mov
in
loop
and
test
out
pop
mov
sbb
jge
fwait
jb
andb
or
cmc
lods
fsubrs
push
int3
or
repnz
cmpsb
lret
jmp
rorl
movsl
shll
lds
mov
ret
neg
sbb
out
enter
test
sbb
add
sub
xchg
adcl
jle
subl
dec
faddl
mov
hlt
and
jecxz
pop
leave
add
bound
mov
dec
loopne
cmp
in
dec
xor
cli
push
inc
and
mov
in
xor
sub
cmp
or
add
and
mov
xchg
xor
insl
out
sub
sub
cli
xchg
pop
ljmp
inc
sub
or
daa
inc
add
sti
fwait
sub
std
mov
std
ret
stc
ret
stos
jmp
xchg
xchg
push
sbb
add
mov
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
jbe
sub
scas
hlt
outsb
mov
out
inc
add
ljmp
mov
fnstenv
stos
loope
or
cmp
xor
mov
mov
push
push
movsl
loopne
mov
ret
movsl
loopne
bound
sbb
cwtl
lods
push
mov
hlt
ss
inc
push
pushf
jle
push
xchg
mov
mov
cs
sub
mov
cld
pop
sarb
and
mov
mov
incb
aaa
aad
mov
scas
xchg
push
stos
inc
das
cmp
pop
repz
add
orb
and
iret
scas
xor
dec
cli
test
xchg
ja
and
jno
sub
sub
mov
dec
adc
xor
jno
lcall
mov
addr16
adc
xchg
xor
das
fwait
push
daa
sub
pop
lret
stos
das
arpl
push
cmp
sbb
divl
inc
xchg
je
pop
xchg
test
mov
pop
ret
sarl
in
cld
adc
pop
pop
inc
mov
add
dec
fisubrs
xchg
inc
sub
enter
test
cmp
sbb
xchg
xor
bound
sbbb
push
mov
jle
ds
lea
pop
sub
cmp
pop
xor
int
hlt
in
jo
rcrb
or
sub
xchg
mov
dec
std
mov
mov
adc
fdivrp
xchg
ret
xor
stos
out
adc
push
dec
insl
dec
scas
aad
test
push
js
jne
mov
mov
das
in
dec
mov
or
dec
aad
jl
int3
pusha
or
pop
mov
movsl
imul
test
dec
jp
pop
jecxz
xor
das
and
push
jno
aas
movsb
lret
push
ret
mov
mov
outsb
inc
incl
inc
cmpsl
xchg
lods
mov
and
ds
repnz
sahf
sarb
and
nop
ss
xor
test
xor
mov
adc
lds
or
or
scas
adc
aam
mov
mov
inc
ja
mov
sbbb
sarl
dec
in
shr
in
pop
loopne
adc
stos
and
in
mov
adc
test
adc
movsb
in
test
adcb
push
movsb
or
adc
mov
aad
arpl
call
scas
je
leave
add
pop
repnz
sub
mov
dec
roll
jp
cmpsl
pcmpeqb
ret
pop
pop
insl
or
rolb
fwait
push
sahf
call
les
mov
xorb
push
xor
test
sbb
xchg
enter
and
xor
inc
mov
cmc
mov
mov
loop
sub
incb
dec
dec
sub
push
imul
jns
movb
push
sbb
inc
sbb
xchg
lock
mov
or
out
popa
push
xor
in
les
xlat
or
jge
ficoml
or
dec
icebp
jno
std
pop
push
repnz
out
andl
mov
cmpsl
adc
shlb
and
inc
out
lock
pop
jno
aas
sub
dec
lahf
dec
push
cmp
add
rolb
dec
in
ret
adc
mov
adc
in
mov
cmp
ffree
std
add
out
addr16
scas
pop
sub
flds
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
jl
xlat
sbb
sahf
adc
sbb
xchg
testl
mov
xor
and
cli
sbbl
ja
inc
lret
sub
lods
inc
mov
loope
mov
jge
les
add
mov
lods
test
mov
mov
fistps
push
addps
and
outsl
in
imull
jg
xchg
out
xchg
jmp
xchg
pop
jle
adc
arpl
fsubs
fwait
cltd
in
andl
push
ud2
ljmp
pop
inc
sbbb
imul
aaa
xchg
or
fnsave
cmpsb
int3
cmp
shl
jne
bound
sbbb
cli
and
loopne
mov
rorl
dec
ret
dec
out
in
stc
sbb
pop
rcrl
leave
lahf
addl
inc
xchg
sub
add
movsb
inc
into
add
inc
cmpsb
add
lret
sbbl
loope
and
jp
int
cmp
pop
and
movsl
mov
daa
lret
mov
xchg
cmp
outsb
mov
sbb
repnz
xor
mov
lcall
add
jecxz
dec
faddl
rolb
add
and
jl
nop
andl
setl
cmp
jb
jae
fistpl
xchg
fistps
in
popa
je
cmc
divl
ficoml
cmp
jg
stos
sbb
xor
jge
je
mov
cmp
xchg
or
and
testl
xor
inc
jnp
addr16
pop
dec
rclb
rclb
jbe
int
stos
popf
jle
and
pop
fidivs
and
std
adc
pop
jno
inc
mov
mov
divl
sbbb
fldenv
cwtl
and
push
loopne
dec
jae
or
scas
aam
jae
ret
adc
icebp
inc
sbb
mov
xchg
dec
jecxz
pop
fnstsw
mov
jo
sub
insb
push
mov
cli
cwtl
test
movsb
icebp
popf
xor
fiaddl
xchg
push
test
xchg
lret
lcall
pop
cmp
aam
mov
push
not
jb
mov
xchg
inc
cs
aad
cld
inc
repnz
dec
in
mov
jns
or
sti
adc
movsl
movsb
adc
test
cli
jge
shr
divb
mov
bound
out
push
addr16
adc
lea
mov
sub
aas
into
rclb
dec
push
push
fwait
and
add
pop
loope
enter
loope
mov
test
lcall
mov
push
arpl
call
sub
scas
ret
jns
pop
daa
in
ljmp
das
lcall
push
aad
sub
jnp
pcmpgtw
inc
add
out
imul
repnz
cld
xor
mov
stos
ljmp
mov
mov
or
into
pop
xor
lret
movsb
sub
push
mov
scas
in
testl
xchg
test
enter
jno
pop
sub
mov
nop
loop
shl
decb
insb
adc
aas
inc
in
dec
or
in
cmp
and
int3
jmp
sbb
addr16
pop
pop
xchg
movsl
leave
or
aas
sbb
add
push
add
sbb
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
sahf
pop
xchg
sbb
sahf
adc
sbb
xlat
ficomps
addb
mov
test
arpl
cmp
mov
push
jmp
sbb
push
mov
inc
imul
mov
dec
sarb
mov
cmp
addl
add
ret
repnz
and
scas
mov
cli
lods
xor
xchg
sbb
lock
cs
call
adc
push
pop
addb
loopne
pop
inc
int
call
jae
xor
loopne
shll
xor
sbbb
add
pop
nop
cmp
into
pop
imul
out
push
mov
fadds
ret
jmp
js
bound
lods
fisubrs
rcrl
idivb
aad
popf
push
or
bound
mov
call
in
enter
data16
stos
adc
inc
imul
sub
lds
adc
js
inc
sub
push
or
xchg
lahf
iret
jle
fcompl
sahf
sub
bound
aad
dec
or
xchg
sub
cmp
in
sbb
and
fistpll
inc
lahf
insb
xchg
ds
call
in
repnz
ret
fbld
cmc
sarl
imul
lret
mov
sti
stos
xor
xchg
loope
adc
das
push
pusha
push
push
dec
pop
scas
push
xchg
test
std
push
xor
cmp
xchg
xchg
jo
flds
pop
test
in
cld
test
fnstenv
mov
pushf
jne
push
pop
pop
mov
icebp
adc
scas
and
or
jnp
xchg
aam
or
shlb
xchg
insl
and
gs
repz
insl
mov
sbb
mov
pop
mov
repz
sbb
orl
xchg
shlb
nop
ja
repnz
dec
dec
data16
cmc
pop
inc
test
push
fwait
shll
aad
push
mov
mov
out
bound
inc
cmpsb
sbb
fs
out
push
popf
mov
xchg
aam
int3
xor
test
scas
sub
adcb
cltd
repz
arpl
sbb
mov
dec
lret
adcb
inc
xchg
cltd
or
fsubrs
mov
sbb
addr16
jecxz
pushl
xchg
jl
ret
mov
aaa
push
das
cwtl
pusha
adc
jne
ror
jp
jo
int
imul
shll
sub
pop
or
into
out
add
push
xchg
mov
sub
xchg
outsb
mov
xor
sub
out
pusha
addr16
mov
add
sbb
lods
cs
outsb
test
int3
hlt
inc
daa
mov
dec
test
pop
adc
or
jge
popa
pushf
addr16
lds
incl
adc
xchg
lahf
or
ret
rcrl
inc
and
mov
jecxz
ficomps
adc
test
out
aaa
lea
rcll
enter
insb
fildll
xorb
mov
inc
and
scas
push
test
ss
clc
aas
dec
cmp
and
cmc
test
stos
lods
andl
mov
adc
dec
jle
sbb
sub
test
ds
nop
mov
ret
lock
inc
loop
imul
jl
push
popf
popa
je
out
lods
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
test
pop
aad
cmc
test
fildl
cltd
jmp
pop
xchg
mov
xchg
jle
cmp
test
insb
jo
andb
or
xor
out
push
sbb
xchg
sbb
push
insb
test
lret
fsincos
loopne
add
lock
adc
in
sbb
insl
in
mov
insl
fnstsw
js
in
mov
cmpsb
inc
jge
js
mov
imul
jecxz
mov
out
jo
fimuls
inc
xchg
pop
dec
shlb
loope
rolb
mov
adc
shr
sahf
mov
imul
mov
xchg
gs
adc
in
lahf
loope
mov
xchg
and
jo
test
mov
push
jo
mov
xchg
xchg
test
fimull
dec
out
std
jge
mov
jmp
movaps
xor
adc
jo
adc
fildll
dec
cmp
in
mov
clc
pop
int3
out
arpl
scas
mov
mov
jbe
scas
cmp
dec
lds
mov
rclb
imul
pop
push
dec
cmp
fstps
clc
lret
and
add
mov
clc
xchg
call
movsb
lods
mov
lret
cmp
lret
stc
sub
ffreep
ljmp
insl
arpl
leave
jg
xchg
jne
das
jmp
mov
pop
adc
int3
repz
add
xor
push
lret
outsb
dec
jp
std
mov
mov
push
jb
pop
jb
nop
pop
mov
nop
xchg
lods
leave
ffree
sbb
pop
stos
sti
cmp
cmp
adc
ljmp
ret
push
xor
cmpsl
push
pop
nop
push
mov
mov
mov
hlt
push
out
clc
push
mov
scas
sub
insb
ficoml
or
daa
call
pop
mov
outsb
lock
stos
cmp
movsl
cmp
dec
inc
inc
aad
xchg
shlb
sbb
add
lcall
mov
cld
push
movsb
xor
pushl
aaa
repnz
ficoml
sub
shll
test
fwait
mov
paddsb
mov
sbbb
sub
dec
jno
xlat
mov
lds
shr
push
push
les
int3
filds
or
leave
lods
test
fcmovnu
rcr
xor
mov
out
into
mov
iret
test
test
push
cmpl
jo
mov
mov
pop
or
inc
xchg
mov
sub
mov
and
gs
jg
dec
or
jle
fstps
cmp
int3
push
std
in
xor
sub
fidivl
push
clc
ds
mov
insl
adc
int3
pop
mov
das
icebp
pop
popf
insl
mov
lods
aad
add
pop
lret
jle
cmp
push
dec
cmp
jp
or
push
int3
jno
pushf
imul
mov
sahf
inc
add
sbb
mov
xchg
aad
pop
shlb
fld
mulb
dec
cmpxchg
lods
pop
and
sub
mov
cli
lods
xchg
sub
out
add
push
cmpsl
pop
or
jg
jbe
ja
mov
popa
sbb
fs
pop
stos
fsts
push
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
sbb
push
rcrl
sahf
adc
sbb
icebp
xor
dec
in
cmp
push
aad
pop
xchg
pusha
mov
cltd
add
popf
inc
and
les
adc
dec
jle
cwtl
dec
and
mov
shlb
xorb
xchg
or
test
push
cmp
mov
lea
scas
fistpl
ret
mov
jae
imul
and
fcmovu
or
adc
jno
jne,pt
add
cmp
faddp
jno
push
loop
xchg
bound
lret
les
je
sub
pop
cmp
test
xchg
mov
jp
sbb
imul
or
jae
or
xor
mov
xchg
and
fwait
aad
and
mov
xchg
sbb
in
icebp
les
xchg
jmp
ret
loopne
cmp
add
fs
sahf
mov
mov
mov
ljmp
sbb
out
lcall
sub
ljmp
pop
jge
pop
xor
sub
mov
and
inc
mov
jo
xchg
rcrl
mov
std
sti
icebp
fstpt
out
lods
sub
pop
inc
dec
les
das
push
ja
xchg
clc
inc
call
dec
jl
inc
stos
push
lcall
dec
inc
inc
stos
dec
add
test
pusha
icebp
test
aaa
jl
xchg
mov
mov
imul
mov
cs
test
xchg
inc
orl
push
mov
cltd
movsl
sbb
lods
cmp
lea
xor
mulb
push
mov
add
sub
jne
cmp
inc
xor
andl
cs
nop
inc
push
fcomps
adc
getsec
or
sbb
mov
xchg
add
push
push
ja
faddp
iret
lods
enter
adc
mov
mov
mov
insl
icebp
fmulp
jnp
add
mov
push
test
pop
add
dec
fstl
cmp
add
xchg
mov
xor
movsb
rcll
loopne
mov
jg
xchg
js
jmp
push
ja
lods
mov
or
adc
outsb
mov
xchg
sub
push
add
adc
inc
iret
adc
lods
cs
scas
mov
add
inc
mov
enter
in
outsb
outsb
jp
and
inc
push
cwtl
fdivp
inc
jno
je
push
push
mov
scas
or
sbb
xchg
mov
test
fmuls
dec
inc
in
inc
push
outsb
gs
loop
xchg
rolb
lods
rol
or
mov
stos
mov
or
xlat
jo
in
jno
inc
mov
enter
cltd
sbb
popl
sti
sbb
xchg
dec
lea
shll
cltd
sub
lahf
cmp
imulb
sbb
jo
push
mov
scas
mov
jae
mov
aas
rol
mov
or
cmp
subl
mov
xor
aaa
sub
test
mov
scas
jl
add
call
clc
cli
aam
adc
mov
inc
scas
rcrb
mov
lret
sarl
sbb
mov
mov
in
int
sbb
cmp
xchg
lcall
sahf
add
js
jl
aam
push
adc
push
cmp
or
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
xor
sbb
sahf
adc
sbb
pop
sub
pop
sub
lea
mov
test
data16
push
mov
xor
cmp
arpl
mov
in
repz
cmp
xlat
repnz
add
in
test
popa
inc
xor
push
dec
daa
mov
cmp
icebp
div
es
mov
cmp
jne
pop
rcl
inc
fdivl
or
das
jmp
imul
div
push
out
aaa
int3
sbb
aaa
adcl
pop
fmull
xlat
fsubrs
sbb
sub
inc
mov
lahf
mov
mov
fldenv
out
jp
sub
mov
loop
jmp
mov
add
fidivrl
int
inc
sar
push
aas
adc
stos
sti
negb
sbb
sbb
mov
aas
mov
adc
mov
daa
mov
out
out
mov
dec
push
jns
arpl
jo
cmp
jns
fsubs
add
sub
decl
incl
push
cwtl
pop
mov
jmp
push
or
push
insl
push
mov
inc
inc
lods
out
xchg
fisttpll
inc
and
lods
leave
dec
jo
aas
add
or
dec
mov
test
stos
xor
jb
cmp
mov
out
cs
nop
stc
ret
out
fimull
sbb
cmp
and
pop
pop
dec
out
inc
dec
mov
cli
jno
in
or
pop
sbb
aas
mov
adc
add
pop
nop
cmpsl
jbe
dec
pop
fnsave
movsb
test
fstps
clc
test
aad
sbb
mov
mov
mov
mov
out
xchg
mov
mov
ljmp
xor
lea
and
push
push
xchg
test
mov
cmp
in
cmpsl
subb
rolb
aad
pop
pop
mov
inc
ss
add
sbb
stos
out
push
mov
insl
pop
pop
int3
mov
cmc
adc
in
mov
add
fldt
clc
dec
cmc
mov
jp
push
mov
movb
mov
pop
bound
popl
scas
mov
fistpll
out
repz
lds
pushf
ja
jo
jecxz
pop
gs
out
add
dec
into
add
test
popf
lret
lock
scas
dec
mov
dec
add
scas
mov
pop
popf
push
or
mov
lods
orb
sbb
lods
sahf
test
xor
and
loope
dec
sub
sbb
sub
sub
clc
cmpsl
mov
mov
int
sahf
fldl
movsb
jae
addr16
mov
mov
add
loope
icebp
imul
jb
cs
xchg
xlat
mov
lret
push
mov
push
push
icebp
test
dec
mov
pushl
seta
into
nop
jo
hlt
ja
leave
push
mov
ret
jle
jne
ficompl
aad
sub
stc
mov
fs
outsb
push
popa
movsb
inc
mov
lods
jp
push
pop
push
cmp
inc
outsb
sbb
adc
cmp
loope
popf
imull
int
push
mov
jl
mov
je
test
cltd
sti
repnz
cmp
sarl
repnz
pushf
xorl
shlb
xchg
cwtl
int
outsl
push
ficompl
push
loopne
xchg
pop
push
loop
sub
out
add
out
leave
mov
pop
xchg
jg
daa
mov
sub
push
or
push
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
xor
mov
mov
sbb
imul
jns
push
jmp
std
les
ret
ja
sarl
xchg
call
jp
sarl
sub
xor
or
dec
xchg
loop
xor
dec
mov
imul
in
scas
movsb
or
mov
pop
cmc
push
or
jle
or
sub
test
scas
inc
test
out
sbb
inc
clc
fldt
test
pop
movsl
sub
negb
or
leave
imul
sub
mov
cmp
mov
jo
cmpsl
aam
aad
sbbb
mov
mov
fdivl
std
mov
mov
std
rcll
out
mov
test
daa
adc
dec
lcall
inc
mov
movsb
mov
dec
int
push
and
popf
aas
sbb
movsl
or
mov
neg
jnp
pop
ds
mov
gs
aas
out
in
cmp
arpl
push
pop
mov
xor
lea
jp
push
out
jno
jns
xchg
dec
aaa
orb
outsb
mov
loope
xchg
mov
and
leave
inc
enter
pop
pop
inc
mov
jge
cli
and
arpl
dec
cmp
inc
jmp
push
outsl
in
and
idiv
roll
cltd
insl
inc
jnp
data16
inc
pop
hlt
xchg
pop
pusha
mov
pop
xor
gs
inc
test
rorl
mov
lods
mov
cltd
mov
pop
lcall
xor
add
or
lea
mov
daa
sub
dec
imulb
adc
pop
ja
gs
je
sub
xchg
adc
pop
cmp
inc
dec
scas
mov
mov
rcll
mov
add
push
xchg
xchg
add
sbb
pop
adc
ds
cmp
or
cmp
pop
xchg
mov
or
dec
cltd
mov
push
in
fsts
adcl
jecxz
mov
fdivrl
bound
mov
gs
dec
stos
test
mov
pop
add
les
fiadds
insb
sbb
push
xchg
mov
int3
pop
stc
adc
rorl
aad
in
ja
mov
lock
mov
xor
stos
xchg
sbb
mov
lahf
inc
adc
int
pop
rcrl
mov
pop
jecxz
mov
pop
cmp
and
stos
movsl
aaa
loope
dec
popa
lods
pop
or
je
mov
out
sahf
mov
mov
cmp
lahf
hlt
stc
xor
cld
lods
pop
int
cmp
mov
popf
or
sub
jmp
data16
cmp
xor
or
push
mov
xchg
xchg
push
bound
insl
mov
mov
ror
int3
mov
into
pop
rcr
xorl
mov
lahf
and
adc
add
stos
jnp
cmp
jo
inc
inc
roll
sti
add
ljmp
data16
mov
mov
test
jbe
xor
mov
push
leave
sbb
rorb
cmc
ret
dec
iret
mov
xchg
add
stc
cmp
lods
aad
sar
lret
inc
cltd
dec
mov
dec
jnp
rolb
jns
bound
xor
or
jl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
popf
iret
jo
test
sbb
fimuls
xor
jg
inc
sub
into
mov
add
dec
cmpsb
rolb
loope
les
xchg
mov
mov
gs
mov
lods
mov
dec
ret
xorb
enter
outsl
ljmp
mov
dec
sbb
ret
arpl
arpl
jo
sbb
dec
test
decl
sub
xchg
pop
mov
push
daa
ret
xor
xor
xor
daa
mov
inc
shlb
and
daa
mov
fimuls
fwait
imul
sarl
addr16
in
jge
sbb
shll
add
ret
xor
test
xchg
jae
into
hlt
std
or
aas
in
push
xor
mov
mov
pop
lds
das
mov
cmc
push
jne
and
adcl
add
and
mov
int3
add
mov
daa
xchg
repnz
shlb
cs
aad
pop
sub
arpl
sbb
lahf
fwait
insb
aad
lcall
xchg
sbb
push
ja
inc
test
notb
sbbl
pop
xor
dec
pushf
iret
add
jle
pop
into
fyl2xp1
test
jge
pop
je
punpckhbw
std
cmp
push
enter
push
ja
xor
mov
in
fcoml
lods
enter
pop
jne
inc
push
fldenv
jns
call
mov
cmp
mov
xchg
xor
in
sub
push
arpl
jge
ret
ds
imul
out
add
in
add
fwait
jecxz
sarb
xor
iret
lahf
mov
mov
or
nop
out
jae
test
dec
add
mov
stos
fs
lods
and
jle
movsb
loope
xor
cmp
inc
sbb
fcompl
cmc
and
lret
jne
ret
shll
mov
adc
negb
xchg
add
jl
add
dec
repnz
das
dec
mov
sub
out
jecxz
sub
adc
pop
outsl
test
xor
jge
outsl
lahf
sub
dec
orb
sbb
sbb
daa
ret
mov
mov
sub
fdivl
and
dec
push
mov
xchg
inc
fs
mov
adc
mov
add
xor
fcompl
jmp
lret
sbb
sub
add
jl
push
dec
jbe
cmp
mov
mov
decb
or
dec
and
das
inc
leave
jno
outsl
and
insb
fwait
movsb
dec
call
push
je
cmp
outsb
dec
fcomi
push
daa
test
mov
cmp
pop
out
and
pop
lea
es
outsl
xchg
add
xor
adc
subl
pop
shll
jmp
mov
fldt
pop
jno
dec
ret
nop
loop
fs
xlat
jbe
sbb
xchg
stos
and
jbe
adc
sub
loope
js
insl
ja
and
sub
jmp
iret
test
sti
mov
xchg
scas
fisttps
cli
sarb
push
daa
pop
adc
mov
pop
xor
or
push
xchg
inc
imul
jp
rcrb
dec
cmp
xor
iret
jne
rep
sbb
jmp
repnz
ja
xor
sahf
imul
sahf
xor
sbb
andl
inc
int3
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
mov
mov
sbb
inc
and
jecxz
fsubrs
in
push
and
icebp
jmp
xor
ja
jbe
popf
ljmp
pop
jne
push
xchg
pop
mov
and
lret
outsb
adc
mov
mov
mov
in
add
test
lods
inc
mov
pop
xor
sbb
add
sub
xchg
enter
xchg
sub
adcl
sub
sbb
mov
cmpsl
imul
cs
xor
sti
ja
mov
popf
jmp
stos
xorb
dec
mov
call
mov
imul
fldenv
ljmp
es
mov
mulb
data16
mov
cmp
adc
or
cmpsl
adc
ss
sbb
xor
scas
mov
imul
popf
push
bound
add
ret
and
arpl
and
mov
jne
aas
dec
addr16
lods
clc
sub
jne
daa
aad
jbe
in
add
fdivrl
and
data16
xchg
sahf
flds
adc
xor
scas
scas
xchg
jge
push
add
lds
lea
loope
cmpl
pop
dec
lods
loope
aas
int
push
xchg
ds
adc
push
cli
dec
jns
push
dec
mov
mov
xor
mov
ljmp
mov
mov
jl
icebp
mov
push
lea
pop
sbb
mov
cmpsb
imulb
dec
cs
jge
enter
sub
pop
frstor
and
and
loop
mov
add
sub
cltd
in
pop
jecxz
lods
rcrl
sbb
sbb
mov
clc
adc
adc
pop
cld
sarb
mov
xor
int3
cmpsl
push
and
ja
pusha
xchg
inc
inc
mov
sub
outsl
ja
xchg
bound
testl
xor
ljmp
mov
ret
push
mov
and
shll
in
and
add
push
mov
xor
pop
xchg
pop
pop
in
imul
mov
aam
sub
call
std
push
into
je
gs
arpl
cmp
es
push
mov
inc
into
dec
movlps
jp
div
mov
sbb
jle
dec
sbb
cmpsl
out
and
ljmp
push
and
movb
popf
es
jg
pop
sbb
cmp
add
pop
sarb
imulb
shlb
lret
push
sti
jnp
sub
xchg
dec
mov
pop
pusha
adc
dec
and
mov
pop
mov
xor
call
jl
or
pop
cli
mov
fwait
cmp
test
xchg
dec
movsb
je
movsbl
xchg
push
and
sub
shrl
mov
and
pop
je
subb
hlt
addb
sbb
out
xchg
mov
neg
in
loopne
ljmp
jp
inc
imul
mov
xchg
rol
into
js
test
pop
or
mov
xor
jne
cld
clc
pop
cmp
add
arpl
ret
fs
and
in
ds
adc
dec
mov
fsubs
mov
rcl
fcmovbe
inc
add
cmp
cli
addb
jbe
sbb
inc
sbb
jb
adc
push
icebp
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
icebp
call
jl
adc
jo
in
loop
nop
iret
and
in
mov
lcall
mov
pop
mov
bound
jmp
sub
mov
and
outsl
addl
dec
dec
mov
call
adcb
cmpsb
fldcw
or
cwtl
sarb
pop
cmp
pushf
sahf
dec
cmpsl
ss
out
fmulp
std
enter
mov
pop
add
aam
outsl
mov
lock
jb
fisubl
mov
lret
fidivrs
insb
lret
sub
xchg
jp
sbb
jg
cwtl
cmpsl
fs
shll
outsb
loop
int
in
ret
fwait
pop
adc
pop
movsl
sahf
inc
loope
movsb
stc
adc
xchg
cli
adc
xchg
fisttpl
aas
int
adc
or
je
aaa
pop
mov
push
push
dec
and
and
sbb
mov
insl
pop
lds
inc
loop
cmpsl
xlat
fildll
mov
mov
mov
in
out
daa
mov
rcl
pop
add
pop
aam
push
cli
push
cmp
push
inc
imul
adc
or
sub
js
push
or
mov
push
pop
add
add
push
out
test
orl
in
stos
pop
in
push
test
xchg
jl
lea
orb
mov
nop
shll
sub
xor
push
data16
xchg
ud2
mov
xchg
mov
jnp
ljmp
out
divl
jbe
mov
out
testl
es
aam
scas
pop
mov
inc
xlat
jno
enter
sub
sub
mov
insb
and
add
jge
aam
mov
loope
lcall
adc
lock
enter
insb
mov
les
xchg
lods
dec
mov
mov
mov
fistps
pushf
pushf
ds
mov
jl
into
imul
push
pushf
mulb
lock
sbb
cmpsb
add
movsb
loop
std
adcl
push
pop
nop
insb
test
xor
adc
test
es
mov
repz
ljmp
cmp
xchg
into
aam
inc
sub
test
pop
adc
mov
ja
cmpsb
imul
lock
rcll
adc
mov
dec
scas
imul
and
stc
and
sub
pop
cs
outsb
es
arpl
push
cmp
aam
sbb
and
in
iret
add
stc
call
lock
mov
mov
sbb
nop
fbld
add
and
adc
mov
pop
and
fs
stos
jns
mov
daa
cs
mov
xor
add
jbe
mov
insl
dec
lods
push
sbb
int3
jo
mov
mov
lret
mov
jno
cs
sbb
stos
sub
ret
shr
mov
cmp
into
mov
adc
or
sub
cmpsl
mov
bound
nop
cmpsb
popa
stc
mov
jge
pop
data16
fstpt
jge
mov
bound
shll
cld
inc
lods
inc
ja
jb
test
cmp
cmc
aaa
mov
fldcw
cld
nop
inc
cmp
inc
or
sbb
out
je
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
pop
mov
jmp
pop
inc
arpl
inc
in
aaa
xchg
into
mov
mov
outsb
std
or
imul
cmp
adc
xlat
jns
mov
lock
movsl
repz
mov
dec
sub
sbb
mov
clc
mov
ret
shufps
lods
mov
sbb
roll
bound
jmp
inc
dec
sbb
xchg
inc
cmp
cltd
push
lahf
xchg
test
movsl
pop
fsubs
fimull
adc
and
hlt
sub
fwait
adc
mov
pop
ljmp
mov
or
xor
in
cmpsb
adc
sti
popf
divl
divl
mov
ds
mov
arpl
jmp
adc
ljmp
lahf
lds
mov
in
in
jp
lret
lds
push
adc
cmp
push
pop
ljmp
adc
fsubl
pop
cli
sbb
movsl
pop
xorb
mov
in
enter
mov
cmp
jno
movsb
dec
rcrb
inc
out
pop
xlat
or
cwtl
jno
movsb
mov
lea
icebp
add
dec
or
add
loopne
jl
cltd
ret
jno
aaa
and
out
rcrl
cld
leave
arpl
cld
testb
movsl
pop
cmp
jnp
sbb
mov
sahf
sub
ficoms
mov
imul
loop
movsl
dec
mov
cwtl
jl
push
xor
mov
fistpll
pop
jnp
xor
loope
fs
pop
sub
out
cmc
xchg
jo,pn
dec
add
inc
jge
mov
sbb
lret
out
xor
fidivs
adc
test
sbb
cwtl
sti
arpl
cmp
xor
sbb
repnz
jmp
cmpl
and
xchg
xchg
mov
add
out
cltd
inc
lcall
repz
int3
push
aaa
xor
sbb
xchg
stc
mov
lea
or
sub
or
mov
xchg
xchg
cltd
inc
leave
phsubsw
loopne
dec
pop
and
pushf
in
inc
pop
icebp
shll
rcll
xor
mov
nop
jns
pop
and
or
and
lods
cwtl
dec
and
mov
sub
add
inc
insb
mov
into
int
aad
insb
pop
out
xchg
leave
dec
dec
push
icebp
insl
cwtl
push
pop
imul
dec
pop
xchg
sbb
fildll
push
push
testl
xchg
addl
mov
fdivrp
inc
or
push
fsubl
and
loopne
mov
push
xchg
and
xchg
int3
or
push
pop
pop
sti
push
movsl
rcrb
or
stos
xchg
mov
and
mov
mov
adc
out
jae
in
pop
mov
xor
repnz
cmp
jno
mov
pusha
out
lds
jp
mov
dec
push
imul
inc
pop
cmc
add
xor
dec
repnz
cmpsb
out
pop
jns
arpl
inc
pop
xchg
xchg
inc
xchg
sub
xchg
push
xor
dec
enter
pop
cmpl
or
and
dec
out
pusha
add
inc
dec
test
sub
push
repnz
jmp
mov
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
ss
or
sbb
leave
arpl
xchg
adcb
dec
lret
orl
jb
push
out
iret
imul
stos
xchg
hlt
jne
into
pop
int
imull
stc
out
pop
mov
inc
int3
or
push
cmp
fstpt
in
pop
data16
imul
cltd
fmul
outsb
push
cmp
insl
or
int3
mov
insb
push
cmc
imul
in
mov
ja
inc
fs
nop
jg
inc
cmp
movsb
outsl
jl
int3
cmp
int3
mov
out
add
jbe
loope
lcall
jns
jnp
or
test
adc
loop
mov
das
out
leave
loop
dec
jg
push
out
in
jg
and
xlat
outsb
rolb
hlt
pop
inc
add
imul
add
or
sbb
fidivrs
enter
pop
pop
inc
int3
cli
fcmovu
jle
add
mov
fimuls
and
add
lahf
loopne
data16
pop
cmpsb
and
test
push
mov
mov
jbe
sbb
pop
insb
cmp
sbb
addl
shrb
decb
jp
sbb
clc
mov
push
and
mov
cmp
call
or
xor
ret
clc
adc
mov
popf
iret
xchg
mov
in
cmp
add
imull
pop
jmp
repnz
mov
or
xchg
scas
cmc
xchg
mov
add
insl
gs
dec
lods
pusha
add
fcomi
lods
test
pop
gs
xchg
and
xchg
jmp
push
cmpl
psubd
iret
mov
popf
lods
out
cmp
outsb
movsb
iret
add
enter
ret
clc
orb
push
pop
popa
cmp
pop
mov
jb
jbe
xchg
cmp
les
push
shll
or
popf
push
mov
pop
sbb
inc
adc
mov
jmp
arpl
mov
int3
aas
out
nop
hlt
ss
daa
test
and
insl
loopne
jg
jl
or
jnp
sub
loop
lods
movsb
test
fdivrs
outsl
sub
dec
sbb
mov
inc
mov
aas
notb
xchg
lods
jg
inc
push
scas
xchg
add
out
jle
std
pusha
sbb
pop
jno
cmp
ja
and
jne
les
sbb
aad
repz
sbb
inc
mov
inc
xlat
inc
xchg
inc
sbb
ss
clc
or
cmp
js
and
sub
adc
arpl
imul
inc
and
dec
adc
adc
fstl
pop
popf
das
sub
test
xchg
dec
push
in
inc
cltd
mov
bound
out
dec
fdivl
lret
leave
and
cmpsb
fwait
movsl
addr16
xchg
ljmp
dec
add
mov
cs
jo
ret
pushl
mov
adc
inc
mov
pop
xorb
adc
in
and
adc
cmpl
rcl
sub
out
dec
insl
pop
push
jmp
aad
test
jbe
xor
ss
xchg
cmp
push
pop
xchg
cwtl
xlat
cltd
cmp
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
add
stos
nop
test
sbb
and
daa
adc
xchg
push
fisttps
pushf
aaa
loope
ja
rorb
sbb
sub
or
and
dec
in
pop
jae
xchg
addr16
push
fs
pop
sub
in
cmp
das
add
mov
idivl
shrd
iret
leave
or
fimull
cld
mov
ds
sarb
push
pop
jle
sbb
ret
inc
fistpl
mov
loop
mov
shrb
mov
test
jae
xlat
mov
mov
jae
pushf
adc
clc
adc
outsl
pop
cmp
in
or
ds
fisttpl
xchg
pop
lcall
xchg
pop
and
dec
dec
push
xor
setae
test
jle
dec
adc
xor
stos
mov
inc
in
xchg
jg
add
mov
add
in
cmpsb
or
cmp
adc
xor
jg
push
inc
push
sub
mov
es
push
add
pop
mov
lret
clc
clc
mov
sub
inc
aaa
nop
xor
adc
in
imul
ffree
xlat
hlt
sbbb
pop
xchg
sub
lock
repz
ret
jbe
mov
mov
inc
jo
mov
mov
test
stos
pop
cmpsl
scas
mov
std
sub
and
int
push
mov
aaa
out
lret
push
add
mov
jbe
jp
in
test
ja
ret
xchg
jns
int3
inc
xchg
sub
dec
adc
inc
and
lock
mov
jns
jp
bound
mov
imul
cmpsb
sbb
hlt
sbb
aad
ds
test
pop
in
imul
or
xchg
test
jae
mov
rcrl
das
mov
das
pop
mov
idiv
xlat
jb
dec
push
imul
mov
dec
lret
shlb
cmc
sbb
ret
pop
mov
pop
or
ljmp
push
mov
addr16
mov
fs
bound
jge
cmp
inc
cvtpi2ps
xor
mov
xchg
xor
or
cwtl
jbe
fisubl
or
jae
sbb
mov
out
mov
jb
cmpsl
and
jge
lea
mov
inc
out
jp
xchg
cmp
mov
dec
mov
add
lcall
xchg
ljmp
out
stc
xchg
aam
cmpsl
int
push
sarl
pop
mov
push
and
and
add
mov
mov
mov
mov
adc
addr16
call
adc
imul
pop
movsb
mov
xor
lock
and
cmp
mov
mov
xchg
jae
int
dec
or
in
and
xor
jl
in
sub
push
daa
stos
inc
repnz
pop
xchg
push
cmp
ret
mov
sbb
push
push
xchg
mov
shlb
and
add
daa
fdivr
pop
aaa
xlat
push
scas
hlt
jbe
xor
shl
and
pop
push
movsb
cld
arpl
push
cmp
divb
pop
push
pop
aaa
lret
inc
mul
repz
lret
lret
sahf
push
fsubrl
movsl
lods
mov
clc
fstpt
mov
pop
jge
repnz
into
pop
fadds
jae
and
push
lock
fisubrs
insl
pop
aas
inc
daa
fstl
fcoms
mov
dec
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
add
mov
sahf
adc
sbb
scas
dec
mov
pop
add
pop
outsl
and
lds
imul
test
clc
pop
out
dec
in
cmp
shl
jns
adcb
movsb
inc
cmp
cmp
mov
add
xor
adc
and
pushf
pop
cmp
inc
cmp
pop
cltd
jle
mov
sub
add
jne
cmc
cli
mov
ret
push
and
cmc
ret
pop
jns
lahf
lods
test
inc
push
out
adc
push
movsl
dec
cmp
out
jle
add
add
sub
insb
fdivs
mov
lret
mov
mov
push
out
cmp
dec
mov
inc
cmp
xor
mov
inc
jne
clc
lods
or
mov
mov
cmp
adc
test
mov
mov
sbb
dec
dec
inc
into
push
jae
cmp
movb
pop
lock
sahf
jnp
arpl
insl
xor
subb
outsl
and
mov
test
sub
std
ret
cli
mov
loopne
sbb
pop
and
sub
and
fistpl
ljmp
idiv
or
je
lods
clc
and
scas
dec
add
xor
test
jmp
cmp
movsl
cmp
xchg
aas
add
shlb
fisubs
cmpsl
sbb
ret
push
call
ss
sbb
jo
mov
xor
push
push
mov
and
cld
call
push
jmp
xchg
pop
mov
dec
xor
adc
inc
cwtl
push
sar
cmp
ja
ret
fimull
mov
js
shr
call
popf
xor
dec
aaa
or
or
pop
test
mov
cmp
inc
popa
fsts
in
or
inc
fildl
roll
sbbb
mov
idiv
add
aad
cs
ja
mov
lods
aas
stos
add
xchg
push
jl
insl
in
jecxz
adc
mov
xchg
mov
movsl
enterw
or
sbbb
and
repnz
clc
jno
inc
cmp
rorl
mov
push
cltd
push
pusha
in
mov
push
in
or
ret
xchg
addr16
jns
pop
dec
add
les
jae
sbb
pop
xor
sbb
cld
pusha
lahf
cwtl
jl
ljmp
aam
mov
lods
or
push
roll
and
fdivrs
sarb
jo
dec
lret
es
fmulp
push
aam
push
dec
cmp
pop
add
outsb
xchg
repnz
hlt
ss
sbb
repz
icebp
bound
push
cmp
in
mov
push
sub
mov
outsl
push
mov
mov
cmpsb
push
push
nop
stos
fldl2e
out
stos
pop
jp
lahf
rcl
xor
cwtl
adc
leave
jmp
pusha
xor
ret
es
sub
adcb
sub
inc
jle
xor
ss
push
add
ja
sbb
xchg
ret
xor
or
cli
lock
push
rcr
dec
mov
xchg
sub
icebp
adc
testl
daa
test
and
lock
push
jo
dec
test
idivl
pop
mov
fdivl
iret
bound
mov
out
inc
sbb
add
or
mov
fs
mov
outsl
loope
imul
cmc
mov
jmp
repnz
jmp
imul
pushf
pop
jle
xlat
mov
sahf
adc
sbb
inc
cmp
cmpsl
scas
lods
xchg
or
scas
lods
jae
movsl
jb
inc
xor
in
mov
adc
jns
shrb
mov
imul
out
insl
push
xor
in
pop
mov
int3
jb
mov
ficoml
dec
mov
add
push
jl
out
or
jg
mov
pop
call
or
xchg
lret
inc
data16
fildl
mov
add
testb
dec
fsubrl
out
sub
sbb
sahf
pusha
cli
and
cwtl
sub
jns
in
mov
ret
lret
adc
or
fadd
sti
and
ret
inc
stos
shlb
xor
push
inc
jo
shlb
adc
or
call
rorl
jns
sub
sbb
sbb
mov
test
lahf
sub
lods
cmc
test
dec
out
std
xor
cmpsb
repz
add
mov
or
sar
notl
shl
mov
rcrl
sti
mov
test
sub
mov
stc
fcmovbe
sbb
idivl
add
mov
in
adc
dec
sbb
xchg
movsl
push
add
outsb
and
call
imul
mov
lods
cltd
jecxz
push
roll
dec
outsb
inc
aam
das
popa
xchg
lret
xor
sbb
lods
cmp
outsb
lock
scas
jbe
add
lahf
push
add
fnsave
in
out
xchg
std
xor
into
mov
sub
xchg
lock
adc
push
hlt
lods
or
ljmp
adc
inc
xor
les
test
mov
dec
xor
cld
lret
rcll
pushf
adc
cltd
mull
hlt
fdivs
and
mov
xor
jae
mov
js
je
xchg
sub
fildll
push
fdivrs
cwtl
mov
pop
scas
or
mov
cltd
sub
xchg
in
or
fcom
cmpsl
das
adc
wbinvd
ret
mov
jmp
lret
dec
pop
and
dec
imul
pusha
mov
test
movsb
loopne
xchg
lock
out
xor
jae
aad
es
into
add
ret
cltd
mov
cmp
mov
lcall
ja
out
enter
push
sub
in
popf
aas
data16
dec
test
in
lcall
aam
ret
cmp
mov
mov
movsl
test
dec
xor
loopne
push
mov
xchg
jne
dec
sub
je
stos
fs
add
mov
ret
lcall
fnsave
pop
into
or
mov
push
mov
sub
add
xor
cmp
add
ffreep
js
cmp
add
scas
ljmp
adc
push
dec
inc
cltd
sbbl
pop
fisubrs
aam
add
cmp
dec
fcoml
mov
into
adc
pushf
jl
and
jno
cltd
ret
and
lret
xchg
push
sahf
cmp
adc
push
jbe
inc
push
jno
sub
shl
xchg
sbb
mov
dec
or
jnp
imul
leave
pop
mov
mov
ret
push
or
cli
xor
je
lods
enter
push
jno
adc
adc
cmp
or
xchg
sbb
lock
mov
mov
sbb
adc
pop
xlat
pop
and
push
xchg
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
sahf
adc
sbb
pslld
or
leave
ror
bound
out
fmuls
jle
dec
mov
adc
jbe
cli
jecxz
decb
adc
sub
mov
lods
aas
mov
hlt
xchg
stc
push
xlat
add
mov
out
dec
adc
pop
push
imul
hlt
mov
call
sub
imul
push
inc
int
dec
insl
cli
scas
pusha
fcmove
sbb
daa
xchg
in
or
mov
inc
dec
xor
mov
mov
pop
sti
pop
pop
negb
inc
fcmovu
fstpt
push
sub
mov
jne
inc
pop
lea
mov
outsl
adc
popa
loopne
xor
cmc
pop
stc
scas
push
xchg
test
aam
lahf
xor
lea
dec
mov
or
test
stos
iret
pop
sub
sub
pavgb
cmc
ret
or
sahf
add
mov
pushf
sbb
adc
mov
jmp
pop
xchg
cmp
lock
jp
mov
mov
adc
cmpsl
mov
fs
filds
mov
test
aam
lahf
jne
sbb
adc
daa
mov
outsb
jo
fsubr
int
sarl
adc
fisubs
insl
adc
scas
push
cmp
and
test
imul
test
out
mov
xlat
pop
mov
dec
mov
or
jle
jae
xchg
sub
lds
fwait
jo
inc
push
int3
mov
fdivl
and
inc
mov
pop
clc
aas
cwtl
sub
das
xchg
mov
adc
arpl
cltd
fidivl
enter
sti
push
shr
jmp
inc
test
mov
mov
mov
sti
std
stos
nop
in
or
xlat
mov
loopne
and
sahf
xorb
shl
mov
xor
inc
sub
test
enter
xor
sub
out
push
mov
lods
dec
loopne
add
fcomps
out
les
fs
pop
out
cmp
jmp
pop
push
xor
ret
mov
jne
xchg
dec
jnp
clc
inc
outsl
gs
xchg
pop
imul
sbb
imul
and
xchg
or
xor
sub
adc
and
ja
lahf
or
dec
into
mov
mov
push
insl
sbb
femms
dec
add
jg
jbe
xor
adc
roll
das
xor
lds
jne
inc
fcoml
test
sbb
jg
out
push
dec
jecxz
xor
negb
je
in
sahf
fisttpll
jo
mov
jae
inc
or
andl
xor
scas
lcall
ljmp
leave
lret
and
cmp
out
dec
in
cltd
mov
clc
std
movsl
sbb
orl
loope
jo
mov
pop
push
push
negb
jno
sub
xor
je
xor
mov
lds
shrb
fldl
movsb
jnp
lret
test
daa
ss
push
daa
sub
mov
add
pop
mov
cmp
inc
pop
jo
inc
sbb
push
cmp
sbb
daa
mov
adc
std
daa
in
adc
xchg
mov
mov
dec
inc
xchg
fildll
in
arpl
lods
icebp
or
out
cmp
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
clc
push
sbb
sahf
adc
sbb
outsl
sti
notl
push
pop
rclb
imul
popf
cmpb
xor
xchg
mov
add
mov
xchg
lock
jmp
push
in
or
add
stos
mov
jnp
pop
push
cwtl
pop
pop
int3
mov
mov
mov
inc
jne
mov
fistpl
sub
or
test
movsl
rcrb
jle
sarl
in
pop
xchg
mov
sbb
push
mov
adc
xor
or
idivb
fsubr
call
push
ds
popf
mov
mov
mov
out
add
inc
jo
push
mov
mov
push
cmpsl
das
sub
cmp
std
xchg
es
xchg
adc
loope
ljmp
and
dec
clc
xorl
or
gs
sub
and
push
pop
or
xchg
push
inc
pop
push
ret
xchg
jp
mov
or
ret
and
add
pop
cmp
mov
mov
mov
rcr
paddsw
in
js
lea
cmp
sub
or
push
movsl
cli
xchg
outsb
pop
mov
mov
sub
mov
lret
cmp
push
test
pop
leave
cwtl
xor
movsb
sub
sti
loope
ja
xchg
stc
cmc
hlt
xor
sub
mov
std
pop
imul
pop
es
xor
sahf
loop
out
xchg
jns
ds
aaa
hlt
and
ljmp
mov
mov
xlat
js
cs
pop
mov
pop
fisubl
jge
lock
mov
shlb
mov
inc
das
adc
mull
lods
in
shlb
push
cmp
jecxz
cmp
dec
xor
sub
out
dec
iret
push
push
out
lcall
cmpsl
dec
fimull
mov
add
mov
sarl
pop
jno
xchg
mov
inc
fisubrl
daa
cwtl
popf
sbb
lahf
add
add
je
addr16
lock
pop
mov
fimuls
xchg
out
popf
jp
xchg
mov
shrl
in
cmp
inc
outsl
stos
add
lds
pop
movsb
pop
push
loopne
add
mov
incb
add
dec
outsb
cmpsl
mov
shlb
icebp
add
cmpsl
pop
shl
adc
ja
leave
ss
add
aam
repnz
xor
shr
mov
or
in
ret
inc
fsubrs
dec
das
rcll
in
rclb
arpl
add
sbb
cltd
stos
cmp
je
dec
push
adc
insb
lret
jle
hlt
lcall
jl
mov
cltd
jae
popa
xor
mov
iret
outsl
aas
pop
jns
xchg
scas
insb
adc
lret
pop
dec
pop
ja
int3
int
inc
mov
mov
sub
pop
mov
out
repnz
mov
int
outsb
test
sub
pop
cmpsb
mov
sub
data16
pop
adc
lods
pop
dec
lock
xchg
pop
dec
imul
gs
iret
push
mov
repz
push
cli
inc
scas
fidivrs
es
cld
mov
stc
mov
jge
in
ret
sti
sbb
jne
adcl
les
fwait
loope
mov
mov
pop
pop
fwait
cmp
inc
ja
cltd
loopne
cmp
lret
adc
lahf
xrelease
pop
mov
or
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
adc
clc
cmp
dec
pusha
ret
sub
pop
inc
push
pop
pop
mov
fstl
jge
dec
cli
jno,pn
sahf
out
add
test
mov
stos
xor
cs
push
shrl
aad
mov
jecxz
dec
mov
xor
lcall
dec
push
cs
fdivs
sub
aas
sarl
xor
arpl
aaa
out
or
rorl
cmpsb
fistpl
out
mov
push
adc
or
fstpl
dec
push
addb
dec
inc
mov
add
mov
mov
xor
sub
mov
cmp
std
es
addr16
popf
iret
adc
dec
push
out
cmp
sub
mov
inc
jo
rol
out
sbb
aam
inc
push
stc
scas
lods
push
aas
add
sbb
mov
and
popf
and
in
rep
jmp
lret
push
js
add
cs
add
leave
xchg
push
fstpl
out
xchg
jge
adc
shll
or
fsqrt
data16
mov
xor
adc
aam
xchg
lcall
adc
std
stc
addr16
loope
stos
xor
cmpsl
xchg
xchg
xchg
fs
shlb
daa
pop
cmp
mov
xchg
push
out
dec
popf
push
call
pop
loope
mov
mul
call
pop
cmp
or
add
inc
imul
pop
adc
sub
call
sub
loope
mov
or
lock
scas
js
stos
fistpll
sbb
jge
cmpsb
imul
movsl
sbb
sbb
or
rolb
or
mov
cmp
rcr
fwait
push
or
dec
notb
aas
test
in
imul
es
adc
outsl
ss
and
mov
push
out
in
scas
loopne
mov
xchg
jmp
push
movsl
push
insl
and
pop
pop
xchg
subb
bound
cmpsb
adcb
and
stos
adcl
xchg
rclb
xchg
repz
mov
xchg
dec
mov
or
inc
adc
add
adc
popa
sbb
dec
adc
addr16
jns
int
push
xchg
insl
push
int
lds
insl
dec
xchg
xor
out
mov
lods
pusha
out
lret
fs
cmpl
test
dec
add
outsb
mov
int3
or
mov
fidivl
movsb
adc
clc
adc
aas
leave
pop
rol
sar
lods
sbb
mov
cmp
mov
movsl
mov
fwait
inc
jp
pop
out
mov
push
ljmp
xchg
add
jp
nop
mov
lahf
push
data16
int3
pop
mov
insb
cmpsb
adcl
ja
sub
movsb
mov
std
mov
mov
addr16
jl
pop
or
call
mov
or
mov
sar
aaa
mov
orb
or
xchg
xor
sub
outsb
mov
pop
sub
or
ss
aam
int3
push
sbb
inc
push
out
into
cltd
cmp
or
pop
jecxz
inc
imul
xorb
js
add
sub
sbb
inc
pusha
sbb
lret
add
sub
add
flds
add
pop
jno
mov
xchg
test
iret
jo
push
sbb
sahf
adc
sbb
cli
stc
xor
lock
mov
jmp
adc
sahf
cld
movsl
push
sub
adc
xchg
mov
decb
or
push
mov
ss
push
and
jo
out
outsb
clc
shrb
lods
stc
cmp
rolb
mov
pop
lock
inc
jae
mov
mov
dec
hlt
add
inc
sahf
or
and
mov
cmp
in
push
xor
xchg
pop
loope
nop
dec
ja
popl
outsl
lret
or
clc
lahf
jne
cmpsb
jp
pop
fsubrp
xor
sbb
jp
loopne
ret
adc
bswap
cwtl
divl
adc
repnz
jo
sbb
sbb
and
jp
stos
adc
push
in
add
push
std
sub
adc
flds
push
addr16
stos
mov
push
cmp
pushf
fstps
and
lahf
jle
push
test
push
sub
inc
movsl
inc
mov
push
rcrb
call
bound
ss
inc
in
idivb
sbb
test
jmp
lds
popf
jae
mov
dec
rcr
pop
es
xor
ljmp
ljmp
adc
es
or
ss
cmp
mov
mov
lds
jno
pop
cmpsl
icebp
repz
scas
or
inc
push
stos
mov
outsb
test
int3
roll
out
and
popf
mov
inc
fdivl
jmp
rcrb
es
jp
cmp
fs
push
ficoms
inc
inc
mov
mov
sbb
xor
pop
dec
dec
fs
jle
fiaddl
outsl
decl
movsl
es
cmp
mov
fistpl
fptan
mov
popa
sub
stc
inc
mov
inc
stos
or
adc
push
jg
data16
int3
out
adcb
xchg
and
and
sbb
adc
and
xor
ror
cmp
bound
xchg
push
pop
push
call
or
pop
aaa
cld
inc
js
movsb
sbb
mov
dec
ss
inc
adc
mov
aad
cmpsl
mov
push
xor
or
xchg
shrl
lret
sub
sbb
add
mov
xorl
dec
xor
notb
jnp
loop
ds
imul
loope
cli
aam
jge
clc
insl
out
int3
jp
push
dec
int
jns
add
xor
int3
fmuls
sub
aad
rorb
jb
outsb
jb
cmpb
sbb
cs
fidivs
int3
pop
adc
loopne
pusha
das
sub
pop
fisttpll
rcll
mov
push
scas
inc
sub
push
repnz
je
pop
ss
in
pop
daa
outsl
dec
xor
dec
cwtl
fs
in
mov
mov
pmaxub
pop
push
out
sarb
js
lret
hlt
dec
xchg
mov
sahf
repnz
jl
in
push
mov
andb
xchg
fnstcw
jecxz
or
fcmove
in
or
xlat
push
pop
lahf
mov
pop
ds
xchg
out
push
lods
adc
push
js
cmp
xchg
inc
ljmp
enter
ja
pop
xchg
test
mov
cmc
jne,pt
jmp
xor
fadd
dec
xor
cs
out
outsl
fwait
orb
mov
add
add
divl
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
or
stos
mov
push
sbb
sahf
adc
sbb
add
das
pop
fcmovnu
mov
movsl
bound
sub
mov
sub
adc
and
loop
rcrb
mov
xchg
and
movsl
test
std
into
pop
fsubrs
cld
rcl
push
data16
lret
fadds
ljmp
imul
in
negb
sub
jb
mov
sarl
sti
rcll
or
je
and
movsl
add
shr
jmp
leave
bound
test
jb
scas
in
lea
shll
inc
sub
push
pop
or
mov
jmp
insl
cmp
push
rcl
imul
or
leave
movb
cli
dec
cld
sbb
add
arpl
dec
push
sahf
inc
gs
les
rorl
iret
xor
push
lahf
xor
mov
push
out
inc
pop
repz
and
std
loop
out
movsb
xorb
incb
sub
inc
push
aas
dec
orb
cmp
mov
pop
je
aas
push
inc
mov
mov
rorl
inc
pop
out
pop
btc
lock
repnz
inc
sbb
ror
pushf
add
mov
das
insl
les
sbb
push
popa
sub
aam
sti
jno
imul
mov
dec
nop
out
in
pop
sub
out
push
push
es
es
insb
outsl
icebp
jecxz
icebp
loop
mov
adc
aam
push
pop
mov
addb
into
add
xchg
repz
cmp
nop
add
clc
es
mov
xchg
jne
hlt
dec
hlt
iret
dec
fdivrl
and
rcr
mov
sarb
out
jne
jbe
hlt
lods
mov
cmp
mov
lods
jmp
sbb
jp
inc
adc
sahf
call
pop
lret
sub
out
aam
adc
test
dec
push
loop
imul
in
push
pop
lcall
shrb
stc
mov
arpl
icebp
or
mov
jb
loop
les
jnp
add
push
jmp
sub
jnp
fdivp
pop
leave
ret
shll
test
mov
push
fwait
xchg
bound
cmp
xchg
jle
out
xor
pop
std
mov
push
enter
mov
scas
push
fwait
in
in
add
cmpsl
push
mov
push
ljmp
lock
sbb
lods
adcb
jle
xchg
addr16
xor
leave
mov
push
mov
rorl
fimuls
cvtps2pi
dec
sbb
aas
filds
or
cmpsb
orl
mov
mov
xchg
mov
and
enter
mov
icebp
xlat
mov
rorb
sub
mov
sbb
xchg
sbb
out
cmp
imull
arpl
cli
or
mov
jl
xchg
int
int
loope
call
cmpsl
iret
sti
in
xor
movsb
aad
xor
out
in
nop
jae
aas
in
cmp
pop
or
add
sub
movsb
test
push
arpl
jmp
mov
xor
cli
pop
pop
sbb
adc
and
xchg
sbb
xor
jo
mov
sahf
push
clc
shll
test
insb
sub
fwait
push
fcoml
inc
leave
popa
xchg
lea
jb
outsb
cmp
rcl
inc
push
mov
aas
mov
sub
sub
jae
insb
jae
into
fwait
push
xor
shld
xor
mov
jmp
loop
es
mov
jle
dec
sbb
sahf
adc
sbb
mov
adc
mov
cmp
pop
push
xor
movsb
ljmp
loop
add
mov
bound
in
das
hlt
cmpsl
push
out
outsb
ss
or
rcll
fwait
push
pusha
push
sahf
fildll
arpl
fldcw
jae
fnstenv
imul
pop
pop
mov
sbb
or
or
push
scas
inc
xchg
cmpsl
add
pop
popa
mov
xor
adc
loope
inc
shlb
cmpsl
fcmovu
dec
stc
add
pop
mov
mov
adc
lcall
add
hlt
mov
jle
dec
sub
jmp
in
and
dec
or
dec
cmc
mov
inc
xchg
jl
inc
pusha
pop
psrlw
std
jmp
add
inc
popa
lcall
ret
nop
sbb
rcrl
arpl
add
cmp
pop
test
aas
adc
cmpsb
mov
or
mov
cmp
dec
inc
jb
xchg
mov
mov
jp
enter
push
movsb
lret
std
mov
xor
sbb
in
lds
mov
sahf
mov
je
fwait
xchg
push
or
lret
xor
push
popf
jecxz
xor
xchg
jb
xor
std
ja
inc
lods
adc
stc
jg
std
inc
mov
stos
sub
add
js
fsubl
pop
jne
sbb
jne
lcall
bound
xor
fcomip
xchg
test
mov
cmp
mov
xchg
into
and
fmul
mov
out
lret
add
scas
add
pop
and
lahf
push
out
sub
or
jmp
icebp
pop
outsb
adc
dec
xchg
icebp
test
loopne
call
popa
xor
mov
loope
pop
cld
ja
lahf
aaa
mov
push
out
loopne
movsl
aam
jns
sub
aad
dec
mov
pushf
ret
xor
dec
scas
mov
lods
jnp
push
fisubl
adc
cmp
pop
aas
in
icebp
std
ficomps
or
std
movsb
or
xchg
push
jl
mov
and
add
fs
in
cli
cmc
fsubrs
sbb
add
repz
setp
cmpsb
out
sub
pop
pop
loopne
subb
loopne
mov
aam
push
and
cld
fwait
scas
rcll
jnp
cmp
gs
out
push
clc
mov
mov
or
xchg
stos
inc
aaa
pop
pop
push
add
pop
mov
les
or
fwait
add
push
adc
add
cmp
repz
pop
mov
mov
loopne
lds
ret
push
xor
ficomps
adc
pop
adc
mov
mov
rorb
aad
repz
and
jns
ja
mov
jb
cmp
mov
jmp
mov
xor
xor
int3
jge
call
sbb
ss
out
pop
add
leave
subb
and
inc
stc
popf
mov
jbe
enter
ja
in
pop
das
jb
jge
mov
int
add
lods
push
bound
jle
mov
mov
add
xchg
cmp
add
fs
imul
sahf
push
sti
sub
aas
mov
sub
arpl
in
dec
or
bound
mov
push
jmp
mov
js
fs
sub
mov
push
xlat
push
xchg
xor
push
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
movsl
mov
inc
inc
sbb
sahf
adc
sbb
insb
xor
int
mov
dec
addr16
add
lds
pop
jno
jg
xchg
lcall
enter
rolb
push
data16
cld
mov
sbb
movsl
pop
call
mov
add
sub
push
adc
jle
xchg
pop
mov
lret
shr
push
xor
xchg
mov
mov
sub
sub
fs
insb
ret
xor
inc
lret
lret
adc
mov
xchg
das
clc
xchg
pop
and
cmpsl
pop
lock
rcrl
mov
dec
inc
test
push
cmp
stc
sahf
or
std
outsl
or
adc
mov
jae
call
lods
pop
jno
fisttps
mov
repnz
gs
dec
std
movsl
sub
inc
lret
jae
dec
leave
mov
scas
mov
mov
add
xchg
inc
subl
xchg
mov
mov
mov
mov
jg
fs
jno
cmp
pop
neg
out
push
xor
divl
aad
xchg
shlb
test
jne
popf
test
frstor
hlt
clc
inc
loope
repnz
xor
mov
sbb
std
pop
mov
fwait
pop
shrl
push
or
call
lret
mov
scas
push
jge
shrb
lret
divb
ss
fdivrl
pop
cltd
es
mov
xor
pop
pop
mov
lds
jno
ret
xlat
cmp
cmp
js
call
add
daa
jle
loop
fucomp
ja
mov
pusha
insb
cltd
adc
mov
sarb
sub
mov
addr16
out
sahf
cmp
jle
jecxz
filds
and
jae
sub
pop
sub
ss
cmp
sbb
mov
and
popa
scas
int3
pushf
adc
and
cmp
lods
jae
xchg
xor
fbld
enter
sub
sbb
test
push
mov
push
adc
rorl
dec
or
outsb
and
mov
lret
cwtl
outsl
sbb
imul
rorb
fsubrs
and
push
dec
loop
andb
adc
in
mov
lcall
aam
aam
cmpsb
scas
or
test
xchg
das
mov
decb
jno
addb
hlt
sbbl
push
cli
dec
je
cmpsb
sahf
push
ret
xchg
les
add
pop
mov
arpl
fcomps
repz
push
repnz
jbe
stos
loopne
pop
sahf
add
nop
push
sbb
stos
or
ret
icebp
mov
cmpsb
gs
test
ds
sub
enter
jo
push
adc
btc
enter
aad
jmp
inc
pop
xchg
add
movsl
test
outsl
mov
pop
insb
dec
cmp
mov
cmp
add
mov
outsb
mov
mov
mov
and
mov
ffreep
fdivrl
fwait
ds
jns
sti
cmp
pushf
insb
fwait
sar
push
out
orb
lock
sub
ret
mov
push
dec
es
lods
mov
mov
adc
gs
or
ret
push
inc
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jl
cmp
sbb
aaa
lret
pop
sub
cmpsl
fsubl
jecxz
ret
mov
xchg
iret
ret
inc
not
lods
dec
fidivrs
inc
lds
pop
pop
lea
movsb
clc
jmp
ret
mov
xchg
sub
or
and
or
scas
xor
outsl
rorb
mov
fwait
dec
loope
pop
xor
mulb
jp
pop
add
rorb
pop
jno
push
pop
mov
sarl
sub
repz
dec
xchg
adc
adc
fldenv
clc
pmaddwd
outsl
jle
pop
push
imul
sub
xor
inc
sub
push
pop
dec
pop
clc
and
mov
jbe
inc
mov
outsl
inc
push
aaa
sarl
mov
inc
ss
xchg
push
xor
andl
push
push
xor
mov
lcall
xor
sbb
jecxz
mov
mov
int3
add
cltd
aas
add
out
enter
push
sarb
pop
jge
test
dec
mov
cmp
je
sbb
mov
cmc
jmp
xlat
add
add
mov
popf
dec
insl
sbb
jno
push
scas
add
jge
adc
lret
dec
xor
add
scas
jge
scas
aam
xlat
jb
jno
jg
mov
jp
ss
mov
or
xchg
cmp
push
aam
iret
out
mov
push
xor
out
outsl
fdivs
mov
daa
fldln2
push
shll
sbb
outsl
cmp
retw
jne
sub
inc
stc
pop
imul
xor
add
movsl
jb
push
cmpsb
fstpt
and
test
sbb
cli
clc
call
les
outsl
int3
inc
cmp
test
mov
sbb
sub
xor
lock
ror
outsb
xor
enter
and
js
push
or
adc
mov
push
mov
adc
inc
sub
xchg
and
jo
fcmovnbe
cmpsb
loopne
addr16
xlat
mov
data16
mov
xor
enter
pop
jmp
or
fs
cmp
stos
adc
outsl
cmp
leave
cli
sahf
rorl
mov
std
xchg
adc
es
call
test
mov
sub
push
push
test
or
jmp
mov
mov
jg
xchg
fsts
mov
inc
stc
aas
in
insb
dec
jecxz
mov
mov
test
add
mov
rolb
and
lock
add
jo
js
pop
jl
fistpl
je
aad
loop
push
ret
xlat
fadds
and
mov
jmp
mov
out
je
add
sbb
push
movsb
push
decl
decb
out
xor
ss
mov
fidivl
sar
test
sub
scas
cmpb
xchg
mov
jp
sub
imul
sbb
xchg
and
jno
and
cmp
adc
mov
neg
jae
mov
jmp
sub
sbb
push
pop
lahf
lods
mov
mov
mov
lods
or
jmp
or
mov
mov
test
mov
aad
fs
push
ficoms
addr16
push
loopne
and
or
pop
xlat
arpl
adc
jbe
stos
ljmp
pop
mov
dec
push
adc
mov
xor
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
call
xor
sbb
dec
aaa
stc
in
push
aas
mulb
cld
and
mov
mov
add
jmp
cmpsb
je
mov
pop
add
jnp
mov
jno
rol
pop
gs
das
mov
pop
pop
dec
cmp
jne
sbbb
pop
popf
push
test
shll
pop
xor
add
jp
mov
and
in
jl
mov
jmp
lock
lock
ljmp
or
mov
mov
mov
daa
ret
push
repnz
add
lods
xor
mov
scas
test
mov
ljmp
scas
or
in
iret
shlb
lods
pusha
or
mov
stos
jnp
mov
push
mov
insl
pop
mov
mov
pop
jle
or
cmp
adc
xchg
mov
and
shrl
fidivs
movsb
pop
jne
inc
mov
js
pop
imul
push
out
mov
mov
fdivrs
ds
xor
xor
fiadds
inc
jmp
dec
fdivrp
add
dec
cli
shll
and
push
aas
lcall
lahf
mov
adc
das
inc
fsts
xchg
adc
dec
or
or
sbb
das
pop
rcrl
adc
sub
push
and
clc
loop
mov
xchg
fwait
pop
les
int3
cmp
nop
fcoms
inc
xchg
dec
test
mulb
dec
fstps
in
dec
rcll
sbb
push
dec
outsl
and
mov
inc
or
and
nop
xor
daa
int3
xchg
cmp
pop
cmpb
and
jmp
mov
mov
cs
cmpsb
fldcw
ja
xchg
adc
and
xchg
out
mov
jmp
inc
outsb
push
sbb
push
int3
sub
mov
loope
push
push
cmp
jno
nop
sbb
dec
clc
mov
xchg
cmp
lock
xchg
popa
pop
xchg
das
mov
sub
fnstsw
add
jbe
fldcw
jge
mov
ret
jg
test
push
mov
sbb
jae
dec
aaa
push
ret
sub
daa
push
add
xor
cld
adc
stos
lret
lock
add
in
or
popa
and
sahf
pop
outsl
arpl
test
xchg
xor
std
push
cld
in
inc
lcall
ss
fsubl
add
aam
sub
in
test
icebp
sub
pop
pop
jle
adc
adc
sub
dec
adc
out
stc
jo
push
pop
push
ja
es
mov
sub
adc
insb
lock
and
cmp
sarl
insl
or
push
mov
es
daa
sub
imul
jp
dec
fld
pop
fcompl
xor
movsb
push
leave
cs
test
push
addb
in
dec
bound
cwtl
popa
arpl
mov
or
jg
and
dec
mov
es
stos
xchg
or
sbb
sbbl
xchg
out
dec
out
fdiv
xor
sub
jl
pop
xchg
leave
adc
mov
enter
jg
hlt
sbb
xchg
push
data16
test
mov
test
pop
pop
ficomps
push
pop
loopne
jge
dec
cltd
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
cltd
lea
sub
sbb
loopne
sub
call
mov
jp
out
ljmp
xor
add
and
insl
movsl
mov
dec
cltd
js
mov
or
xchg
jl
pop
loop
push
test
fucom
lahf
cwtl
xor
adcl
addl
jl
jg
hlt
test
cltd
hlt
xchg
cmp
into
sub
je
shl
sti
mov
mov
add
dec
push
cmc
inc
out
ljmp
shlb
mov
mov
pop
jp
into
loope
in
scas
fs
orl
xor
adc
icebp
cwtl
aas
insb
dec
sbb
sub
loope
xchg
pop
xchg
pop
enter
mov
jmp
cmp
adc
rolb
jbe
sub
repnz
add
filds
arpl
rcrl
jns
in
popa
mov
je
loopne
adc
xchg
adc
cli
xor
xchg
mov
pop
pop
xchg
xor
xor
jl
fwait
jle
pop
lds
or
cwtl
dec
xchg
add
cmp
orl
xor
mov
inc
sub
xlat
add
sub
xor
aaa
and
jnp
inc
pop
lahf
lret
fcmovnbe
push
sbb
jg
add
in
insl
lret
leave
add
js
pushf
mov
xchg
iret
dec
jo
out
dec
pushf
nop
ds
mov
push
or
xor
add
jo
jbe
loopew
lcall
sub
aas
dec
sub
jo
push
pop
inc
cmpsb
adc
adc
in
adc
repnz
in
lahf
out
lock
jbe
test
daa
int
sarl
xchg
dec
ds
pusha
and
mov
cmc
leave
rcl
add
xor
ret
ja
jbe
stc
adc
xchg
push
push
mov
das
mov
fnstcw
mov
cmp
mov
adc
xor
test
nop
rcrl
das
and
clc
mov
mov
push
ljmp
xchg
mov
xchg
mov
mov
add
lcall
cmc
test
decl
sti
sahf
sbb
cmp
adc
insb
sub
mov
mov
dec
out
movsb
ja
xor
js
nop
sbb
lods
lds
je
in
jbe
cmp
repz
push
jecxz
outsl
and
xchg
push
sub
insb
cmpsb
leave
insl
mov
lret
adcb
jmp
lock
mov
test
and
or
sbb
mov
adc
sub
xor
or
iret
rcrb
adcb
push
mov
dec
sub
sub
xor
jo
xor
xchg
out
xorl
or
hlt
data16
fists
out
xor
mov
push
xchg
sbb
bound
ret
or
and
mov
iret
jecxz
ret
push
adc
aaa
dec
mov
inc
and
add
sub
mov
sub
add
aaa
push
fs
pop
aas
ret
ss
sub
rclb
mov
rcll
mov
gs
cmpsb
jb
mov
iret
cmp
aaa
push
jl
stos
sahf
popf
addb
test
sub
arpl
xchg
mov
mov
imul
cmp
cmp
mov
mov
test
outsb
adc
sbb
adc
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
cmc
daa
stos
pop
and
sbb
sbb
mov
push
and
jo
dec
ljmp
nop
pop
sub
stos
push
mov
je
sub
dec
mov
inc
add
add
in
aaa
mov
jno
lahf
mov
cld
jns
inc
add
xor
jne
test
icebp
scas
mov
push
xor
fiadds
ds
stos
gs
bt
xchg
jmp
js
xorb
pop
lods
add
addr16
sub
jne
mov
in
xchg
fmuls
sub
xor
pop
mov
mov
cmp
inc
pop
addl
je
add
popa
xchg
mov
xchg
test
lds
movsw
js
jbe
jbe
sbb
fstpt
or
mov
xchg
imul
xor
inc
fs
repz
dec
dec
pop
rolb
sbb
and
in
jle
outsb
mov
sbbb
aas
add
cmp
pop
or
stc
out
loope
add
arpl
imul
cltd
das
jae,pn
outsb
test
aad
pop
sub
dec
movq
xor
adc
jns
js
mov
call
jl
ljmp
ljmp
and
cmp
fmul
sbb
test
mov
les
out
xchg
jge
lods
imul
and
call
pushf
ds
stos
adc
movsb
daa
adc
hlt
imull
dec
inc
outsb
in
mov
sbb
fimuls
cmp
jl
pop
test
mov
ss
xlat
adcl
mov
inc
add
xchg
loope
aam
add
push
mov
jns
leave
mov
ja
ja
aas
mov
jmp
mov
adcb
test
and
add
jno
leave
cmp
add
sbb
xchg
xchg
fsubrl
loop
sub
jbe
icebp
stc
pop
adc
sub
jno
or
cmpsb
cld
lahf
mov
cmp
lods
or
inc
push
rclb
push
addb
int3
movsl
bound
popa
aam
pop
fisubs
jl
lcall
aaa
xchg
nop
sbb
add
or
sbb
cld
lret
js
cwtl
js
js
mov
inc
ds
outsb
push
pop
jb
aad
add
shr
cwtl
dec
loop
les
lods
arpl
xlat
xor
and
out
fdivr
or
pusha
mov
dec
pop
test
test
lret
push
inc
jg
cmp
push
jl
fwait
aaa
push
bound
popf
adc
mov
stc
and
mov
out
scas
pop
jae
std
test
and
jg
pop
xor
dec
shlb
sti
pop
push
lds
dec
xchg
or
pop
aaa
or
push
into
ss
shrl
aad
lods
out
out
cld
orb
lahf
mov
sub
mov
test
les
sbbb
mov
push
call
mov
imul
dec
inc
adc
push
mov
mov
adcb
vpaddsb
mov
push
lahf
fs
dec
mov
mov
and
sub
aas
pop
cld
aaa
loope
or
xor
dec
inc
push
lea
sti
push
shl
cmpsl
repnz
dec
push
add
pop
cmpsl
lret
push
call
outsb
call
push
clc
mov
sub
fs
jg
popa
push
jno
fsubs
lret
popa
and
inc
push
fs
adc
ret
jecxz
add
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
addb
sbb
sbb
pop
scas
sub
lahf
pop
sub
xor
imulb
mov
sbb
sub
add
xchg
adc
xchg
loope
enter
ret
sub
jns
adc
push
jb
testb
addr16
fcomps
xor
add
adc
mov
lahf
add
insl
in
loopne
push
cs
ljmp
adc
adc
sbb
mov
ljmp
pop
cmovne
movsl
sub
or
lock
icebp
mov
adc
orb
jno
push
incb
dec
push
scas
xlat
aaa
stc
lret
mov
mov
outsl
ret
and
into
mov
repz
test
xor
popa
jge
jmp
dec
outsl
mov
jl
cmp
in
sub
mov
movb
inc
inc
mov
dec
and
jb
ffree
cmp
adc
jb
sub
add
sbb
cmp
sub
js
push
jecxz
mov
mov
pop
cmpb
push
sbb
insl
mov
ss
pop
jne
mov
jp
dec
or
lahf
in
aad
xor
daa
cmp
xchg
jmp
scas
dec
gs
fiadds
push
mov
enter
imul
addr16
push
mov
test
aaa
movsb
movsl
inc
fmull
jp
mov
adc
sub
dec
in
les
fisubl
xor
add
inc
int3
xor
arpl
je
pop
stc
fwait
lds
addr16
in
inc
pop
in
and
mov
mov
pop
nop
dec
sub
mov
add
loop
and
ds
pop
cmp
push
stos
mov
mov
mov
dec
lods
rcl
sub
push
inc
xchg
and
aad
adc
fwait
mulb
mov
cmp
cwtl
xor
mov
fcomps
inc
xchg
and
mov
jnp
dec
sub
push
push
test
ljmp
inc
push
ret
sub
and
mov
xchg
pop
xor
int
scas
jne
arpl
jns
jb
lahf
pushf
in
or
pop
dec
rol
rolb
cmp
jmp
sub
add
fdivr
mov
push
xchg
out
aas
mov
test
jmp
lret
ret
push
dec
pop
aaa
pop
fwait
mov
pop
lds
fnstcw
or
jb
mov
mov
fisubl
pop
push
out
mov
jge
jnp
mov
jo
ficoml
inc
stos
addl
cmp
das
test
dec
shlw
cmp
pop
jecxz
mov
push
cmp
daa
cmp
mov
insb
push
inc
cltd
ljmp
arpl
jl
or
xchg
jnp
jle
inc
dec
sbb
or
inc
nop
pop
push
jns
sahf
popf
fucomp
ret
cmp
ja
add
ljmp
mov
int3
inc
lret
dec
mov
jo
adc
std
leave
call
cli
leave
daa
jmp
iret
sub
scas
fwait
ret
adc
sub
sbb
stos
or
test
sub
xlat
jnp
int3
xchg
fadds
out
test
sbbb
aam
bound
sub
repz
jecxz
outsl
pop
mov
mull
add
ja
enter
scas
std
push
pop
pop
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
push
mov
sbb
sbb
sub
mov
xchg
outsb
pop
mov
adc
cld
or
xor
popa
xchg
push
adc
xchg
pop
leave
adc
enter
stos
out
in
daa
mov
pop
cmpsb
dec
fs
data16
add
test
out
jmp
inc
add
dec
pop
push
loop
fldl
into
xlat
pop
add
xchg
adc
shll
xlat
faddl
imul
mov
cwtl
mov
pop
mov
test
enter
popf
stc
pop
push
imul
adc
cwtl
shll
pop
out
push
inc
lea
mov
jp,pn
mov
pop
out
hlt
mov
sbb
sbb
push
dec
adc
mov
jge
fwait
push
mov
xchg
pop
ja
xor
xchg
jmp
lea
sti
jo
push
popa
mov
mov
lods
jno
inc
inc
add
out
jecxz
pop
pop
ds
pop
inc
pusha
add
ds
xorb
mov
jle
mov
cmp
nop
imul
icebp
jns
je
mov
mov
xchg
insl
sahf
lcall
loopne
dec
mov
rorb
cmc
inc
gs
sahf
xchg
lret
nop
xor
jb
ficoml
xlat
mov
xchg
in
nop
push
out
dec
sub
cmp
push
cld
pop
int3
pop
dec
lret
mov
test
loope
in
lds
jg
sub
mov
iret
aas
imull
call
test
ret
test
jne
bound
inc
add
fcmove
mov
shll
sub
add
sub
push
inc
pop
push
or
cmp
mov
or
sbb
sbbb
aaa
es
scas
jp
frstor
or
add
fisubs
bound
mov
ficomps
mov
imul
jle
inc
lret
jo
data16
add
je
xor
out
mov
sbb
mov
pop
add
mov
loop
mov
bound
rcr
scas
mov
pop
and
lcall
jmp
and
mov
out
jno
es
div
add
int
popf
ljmp
rclb
ret
sbbl
popf
int
daa
insb
addl
stos
pop
cmp
shlb
mov
sbbb
sahf
aas
sbb
add
or
dec
add
xor
jbe
add
cmp
sbb
addr16
dec
notl
cltd
dec
or
dec
mov
aam
jmp
lods
enter
fs
inc
push
add
xlat
iret
rcl
push
push
ret
negl
je
pop
lahf
pushf
sub
movsl
add
test
sub
shrl
push
fsts
mov
push
js
inc
push
xchg
sbb
jl
int
lods
mov
call
and
sub
jecxz
sub
or
sub
arpl
loopne
push
jl
cmpsb
or
dec
pop
add
inc
outsl
push
xor
into
incb
mov
jo
xor
push
pop
ja
jg
idivl
inc
cs
jb
mov
je
leave
ljmp
add
les
pop
hlt
fimuls
push
aaa
mov
push
es
ds
jp
imul
pop
int
movsl
aas
adc
fistps
add
push
push
lahf
mov
mov
xor
aaa
xor
and
xchg
xor
mov
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
test
or
sbb
jg
mov
mov
mov
arpl
jg
ffreep
decb
stc
test
cmp
pushf
dec
add
adcb
pop
and
aaa
test
sub
mov
or
xchg
xor
xchg
pop
cltd
rolb
aam
jl
sub
leave
pop
mov
sub
adc
adc
mov
jg
mov
mov
mov
addr16
fs
pop
jnp
sub
lds
pop
iret
fstps
stos
add
jns
and
xor
aaa
push
ss
and
sti
inc
pop
test
fs
cmp
jbe
les
test
test
cmp
mov
sub
add
push
fdivrl
pop
nop
pop
xor
nop
in
mov
and
cmc
aas
or
sbb
jmp
hlt
push
or
mov
xchg
add
push
sbb
cld
push
jae
outsb
stos
jecxz
push
or
test
neg
aas
scas
sub
stc
out
iret
xchg
ja
aas
dec
or
rcl
sbb
or
or
push
pop
cmp
aad
lcall
lcall
mov
cmpsl
stos
mov
stos
inc
cmp
mov
inc
gs
adc
cmpsb
add
lret
test
cli
std
out
icebp
movsl
stos
lods
orl
mov
pop
mov
push
mov
inc
cmpsb
jne
jecxz
mov
movsb
push
nop
mov
pop
adc
sub
fs
sub
mov
sahf
aad
pop
jb
or
xor
mov
dec
stos
movsb
dec
bound
wbinvd
ror
ror
jnp
aaa
fs
and
fiadds
add
aaa
push
mov
pop
xchg
mov
pop
in
jecxz
fs
ret
adc
fwait
scas
jo
pushw
inc
imul
push
stos
cmc
insl
inc
leave
arpl
out
cmc
push
xchg
jg
aas
pop
mov
lahf
fcoml
cmpsl
mov
dec
movsb
xchg
stc
addl
push
in
dec
test
mov
cmp
cmp
cmp
adc
sub
pop
cmp
loope
ja
lret
jg
cmp
fsub
popa
pop
movsb
rolb
aas
dec
lock
in
mov
jl
add
lods
decl
icebp
cwtl
and
xchg
out
dec
jl
loop
rclb
js
dec
js
pop
outsb
fs
loopne
push
lret
stos
jns
sbb
f2xm1
cmpsl
dec
cltd
xlat
ja
sub
lock
cmp
jmp
ds
aad
mov
cld
out
dec
fcompl
sbb
lahf
push
lcall
mov
pop
in
push
and
testb
mov
aad
rol
ret
jo
cli
xor
mov
adc
ljmp
mov
sbb
adc
adc
cmp
loopne
xrelease
arpl
push
cwtl
push
mov
push
dec
clc
fbstp
repnz
fildl
fucomp
and
sbb
test
sbb
ss
lret
test
imul
sbb
lods
ret
shll
or
xchg
test
lret
enter
das
dec
nop
jmp
int
frstor
lahf
outsb
enter
mov
mov
sub
mov
jno
inc
pop
mov
lock
sub
insl
or
sbb
scas
pop
jno
fisttpl
mov
cli
iret
iret
cwtl
ja
push
in
jae
iret
dec
adc
and
sbb
adc
fisubs
dec
sbb
cwtl
test
nop
pushf
or
outsl
inc
lods
repz
int
out
cmp
jle
call
dec
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
out
stos
mov
sbb
outsb
adc
sbb
sub
daa
cmp
into
das
xchg
pushf
inc
mov
cmp
sub
mov
mov
sub
pop
add
fsubrp
cmp
sub
idivb
cmp
pop
jae
cmpsb
clc
sbb
and
jmp
sbb
insl
push
stc
out
xchg
pop
xchg
mov
test
inc
pop
es
jl
fdivrs
mov
scas
xor
inc
xchg
dec
sub
mov
mov
jg
jecxz
xlat
cmpsb
jbe
inc
and
mov
xor
std
cli
pusha
bound
push
fcompl
sbb
push
and
faddl
in
rorl
xor
subb
push
outsb
sti
adc
dec
inc
sbb
xlat
call
in
test
pusha
out
mov
dec
stos
xchg
pop
inc
adc
test
mov
xor
or
repz
pop
loopne
fs
pop
cmp
sub
inc
andb
addr16
cs
rcll
cmp
cmp
lahf
out
jl
push
insl
mov
fmul
mov
movsb
out
sbb
jnp
dec
fs
xchg
or
in
xor
fwait
mov
pop
inc
ss
call
adc
jmp
mov
out
pop
jne
adc
push
test
cmp
inc
insl
scas
in
mov
add
nop
outsb
and
fldl2t
dec
cmpsb
fldenv
in
cmp
mov
cmp
out
dec
adc
dec
fwait
jecxz
cmpsl
lahf
daa
xor
mov
xor
dec
mov
sbb
popf
adc
je
jae
shrb
out
es
mov
test
jp
push
sarl
fwait
mov
gs
leave
jmp
bound
out
loopne
xchg
loop
sbb
jge
cmp
repnz
dec
andb
inc
pop
fwait
and
xor
pop
sub
cmp
stc
add
dec
cmp
push
push
lcall
cmpsb
mov
test
mov
sahf
push
mov
loop
xchg
add
or
mov
add
pop
cmp
adc
test
popf
adc
fsts
mov
jnp
cs
out
test
push
mov
and
fcoml
push
lea
sbb
sub
arpl
and
inc
sbb
jmp
out
stos
shlb
cs
cmpl
mov
mov
add
out
imul
mov
cmp
arpl
dec
sbb
xchg
gs
xor
and
jns,pn
jbe
jp
int3
mov
in
push
and
sub
ss
sbb
cmp
out
dec
mov
in
add
adc
outsl
cmp
push
xchg
enter
movsl
xchg
mov
lods
fisttpll
mov
push
int
mov
test
rol
xchg
mov
pop
dec
jmp
rcll
cmpsb
out
xor
aaa
push
dec
jne
sub
mov
jecxz
popa
fstp
pop
in
or
test
mov
jmp
mov
clc
test
push
mov
xchg
int3
pop
add
xchg
in
aaa
or
dec
jb
cmc
cli
push
out
jg
test
fdivr
cmp
iret
jge
pop
sbb
adc
movsb
cmp
dec
push
xor
add
dec
out
imul
jo
les
out
or
sbb
les
mov
outsl
and
adc
rclb
test
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
nop
lret
aad
or
adc
sbb
jno
popa
int
mov
out
dec
jb
arpl
cltd
rcr
or
inc
mov
fstpt
aad
cmpsb
lds
or
cmpsl
mov
into
insl
pop
shl
bound
fs
xor
fistpll
aaa
jmp
mov
jp
pop
sahf
daa
popf
icebp
dec
test
pop
fucomp
mov
arpl
mov
imul
jns
xchg
cmc
jge
pop
rorl
ret
ja
pop
push
mov
pushf
add
or
std
test
xor
aaa
fnstsw
in
rcrl
scas
out
cld
pop
push
insb
and
xor
in
aas
insb
js
jne
and
cmc
adc
mov
or
add
lea
aad
pop
pop
pop
cmp
jecxz
shlb
adc
adc
jmp
or
xchg
lds
push
jmp
jb
loopne
cmp
xchg
cmp
dec
dec
jnp
adc
jns
lret
mov
je
jns
outsl
test
mov
int
out
es
jae
add
sub
cmp
and
cltd
xchg
jo
jmp
ljmp
cmp
stos
mov
dec
sub
rolb
cwtl
jmp
sbb
xor
sarl
pop
xor
cltd
xchg
adc
mov
outsb
cli
enter
mov
push
clc
adc
and
test
add
cmpsb
ds
hlt
mov
and
stos
push
in
arpl
test
ret
jo
stc
jo
fcoms
repnz
dec
test
fwait
or
ja
xchg
das
xchg
es
das
jecxz
test
sahf
push
aaa
xchg
jo
push
and
adc
sub
sub
xor
or
bound
out
imul
mov
push
repnz
adc
lods
mov
push
lock
out
std
mov
lea
lods
int3
dec
sub
lahf
jmp
cmp
lock
fisttpll
cwtl
mov
and
pusha
push
add
addr16
jecxz
and
imul
add
mov
mov
jle
or
inc
shl
and
add
pop
insl
cmc
insl
mov
es
scas
push
cld
es
pop
outsl
arpl
add
pushf
mov
xor
adc
nop
daa
jae
xor
jne
jle
gs
cmpsb
es
sub
xchg
insl
add
push
xor
mov
mov
xor
shlb
es
lods
mov
xor
daa
cld
in
dec
pop
xchg
adc
push
add
mov
dec
pop
dec
push
or
jnp
cmp
ljmp
movsb
mov
xchg
je
std
dec
aam
inc
fwait
ja
jmp
arpl
pop
stos
xchg
and
sub
add
fwait
daa
or
dec
and
in
jne
test
sarl
lcall
or
sbb
fsubr
aam
cmp
mov
stos
and
and
in
cmp
loopne
in
roll
pop
jp
loope
add
loopne
call
and
lds
cld
push
mov
cmp
add
push
pop
movsl
dec
dec
inc
lods
add
cmp
insb
xlat
or
inc
arpl
xchg
aaa
sarl
shll
push
mov
jnp
push
xor
sub
je
pop
xor
jae
test
add
dec
mov
inc
mov
pop
rcr
je
mov
repz
cmp
xor
and
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jo
cmc
sbb
outsb
adc
sbb
inc
movsb
push
cmp
stc
jb
in
in
dec
lods
pop
sarl
jo
mov
dec
fwait
adc
or
or
into
and
imulb
je
push
jecxz
shl
pop
jl
cmp
int
mov
insb
dec
push
jmp
in
inc
ss
clc
mov
xor
push
sub
fisttps
sub
ret
aam
ljmp
mov
filds
xchg
std
mov
sub
xchg
adc
bound
daa
mov
dec
cwtl
into
jmp
and
insb
mov
sbb
inc
cmp
add
outsl
insl
add
xchg
push
addb
nop
out
push
out
popf
sub
mov
int3
push
sub
sbb
xor
xor
add
jp
inc
or
test
or
dec
cmp
lret
pusha
call
js
imul
lea
ss
cmpsl
fdivrp
cmpl
xchg
mov
dec
cmp
in
and
nop
jne
pop
xchg
lea
movsb
mov
lock
push
mov
loope
dec
inc
mov
fimuls
scas
insb
stos
dec
testb
iret
ret
es
jns
mov
shl
mov
push
pop
sbb
dec
in
mov
into
dec
cli
les
ljmp
sbb
in
adc
mov
daa
fdivrp
pop
fmuls
add
fwait
outsb
fidivl
loope
mov
sbb
ret
lods
xor
dec
jge
inc
mov
fadds
addr16
cmpsl
into
fimuls
movsl
cmp
call
mov
pushf
in
add
xlat
xor
cmp
shll
mov
xchg
sub
cmpsl
xchg
lahf
daa
and
mov
mov
ljmp
hlt
loopne
jmp
aam
mov
pop
push
loop
push
leave
cmp
or
add
rolb
lea
pop
adc
test
pop
lods
jb
fisttpl
pop
xchg
pop
in
sarb
dec
mov
mov
lcall
mov
shl
jnp
out
adc
pop
push
mov
cltd
sbbl
imul
jp
jl
outsb
popa
arpl
mov
mov
jmp
inc
sbb
scas
movsl
xor
lock
pop
push
icebp
lret
jmp
mov
mov
repnz
lods
mov
and
imull
mov
xchg
adc
cmpsb
clc
fcmovnbe
xchg
xor
fsin
clts
imul
jecxz
repz
and
movsb
js
pop
push
xchg
test
or
cmp
and
pop
lds
insb
inc
test
cli
dec
enter
sti
add
imul
into
andb
mov
pop
pop
movsb
jmp
sbb
data16
push
mov
out
pop
mov
cmp
pop
dec
sub
push
lret
sbb
jle
lea
or
pop
jb
inc
out
fsubr
sbb
sub
inc
adc
aad
mov
cld
add
xor
iret
mov
xor
cmp
arpl
aaa
xor
xlat
dec
inc
cmp
cld
repz
ljmp
arpl
adc
add
add
sub
jmp
leave
sahf
sbb
ds
or
xchg
cld
popa
mov
es
pushl
jp
sub
sbb
cmc
lea
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
pop
leave
subl
inc
mov
fnsave
lods
cs
gs
jmp
adcb
es
mov
add
push
cmp
jo
xchg
or
inc
fnsave
gs
dec
dec
jmp
xchg
mov
nop
jno
jle
push
xorb
jae
pop
mov
int
mov
js
xor
rclb
popf
in
pop
repz
add
xchg
into
addl
push
ret
popa
int3
nop
jo
push
push
inc
fiaddl
jecxz
lahf
stos
ds
xchg
push
mov
inc
jbe
aam
fs
cld
add
jo
jecxz
sub
inc
xor
inc
push
dec
inc
into
dec
cld
loopne
xor
dec
bound
xor
sub
adc
mov
es
xchg
idiv
repz
loope
push
data16
mov
mov
lret
mov
sbb
fildl
and
lret
or
std
mov
cltd
addb
inc
lret
pop
lret
pop
popa
testl
aaa
mov
addb
addb
dec
mov
dec
and
add
xor
cltd
negl
aam
lock
cs
test
fimull
repnz
add
jmp
adc
sbb
push
sub
pop
mov
mov
lret
mov
inc
std
out
sub
fwait
outsb
push
push
xchg
cvtps2pd
or
inc
int3
mov
loopne
dec
in
call
and
nop
lds
mov
mov
lcall
and
mov
mov
repnz
arpl
add
call
fdivr
sbb
imul
int3
cld
cs
in
xchg
icebp
cmpsb
adc
incb
push
mov
jle
test
cmc
jmp
aas
add
pop
lret
dec
cmp
sbb
or
insl
lock
adcl
dec
sub
pop
outsb
mov
pop
adc
repnz
push
sar
in
push
cmpsb
jge
pop
popf
fwait
add
iret
movsl
adc
mov
dec
lahf
push
dec
icebp
sub
sbb
add
mov
and
inc
in
adc
jo
pushf
je
int3
sbb
push
fs
rclb
mov
sub
jmp
out
cmpsb
lea
cli
bound
int
sbb
xlat
jle
cld
jns
sbbl
imul
sub
xchg
dec
mov
ja
scas
stos
mov
mov
inc
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
xchg
mov
rclb
sbb
pushf
or
lret
push
enter
std
rolb
sti
or
jb
pop
nop
add
sbb
mov
add
cmp
xchg
fsubrs
imul
addr16
jmp
setne
rorl
fs
mov
mov
pop
sbb
xchg
movsl
imul
scas
lahf
pusha
or
sbb
fsubr
or
outsl
sub
pop
rclb
xchg
inc
sbb
stc
pop
push
sar
subb
push
push
xor
insl
push
jl
xchg
repz
mov
scas
adc
nop
pop
pop
fsubrl
jne
inc
cli
push
movsb
dec
pop
pop
out
mov
lcall
sbb
jl
fmull
ds
fsubr
xchg
enter
daa
std
mov
pop
sahf
mov
loope
jno
pop
test
out
ja
xchg
insl
insb
iret
jns
fld
jl
inc
add
lret
or
xor
dec
inc
or
pop
ret
inc
mov
addr16
or
loop
push
lods
mov
push
jmp
pop
push
les
stos
xor
out
loopne
int3
xchg
mov
pushf
sub
aaa
push
add
push
xchg
test
dec
add
ja
fsubrs
jnp
btrl
push
sahf
mov
lret
scas
mov
adc
fstps
loope
leave
xor
jb
mov
lcall
mov
pop
out
xchg
rcr
jle
aaa
pushf
subl
notb
insb
adc
pop
gs
mov
idivl
xchg
mov
inc
jae
jno
adc
xchg
sub
and
jmp
aas
movsb
adc
pop
dec
xlat
lret
pusha
cmpsb
test
scas
fiaddl
scas
ss
cmpsl
scas
mov
adc
add
pop
push
mov
faddl
imul
fisubrs
out
adc
nop
pushf
pop
xor
js
je
dec
xor
push
lods
rolb
ljmp
inc
mov
inc
adcb
or
subb
xchg
loop
mov
pop
and
stc
inc
cmp
dec
xor
lahf
pushw
sub
xorl
mov
mov
jbe
loop
lcall
cmc
pop
dec
push
outsb
inc
pushf
push
out
push
sub
inc
push
or
es
mov
or
cmp
xchg
out
or
adc
xchg
sbb
adc
in
xor
leave
dec
pop
test
sbb
pop
pop
xor
add
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
mov
lret
jo
loop
sbb
adc
sbb
ret
add
adc
xchg
imul
mov
insl
inc
mov
loop
jg
mov
pop
cli
dec
sub
jnp
jecxz
cmp
adc
jmp
xchg
sub
cli
sub
xor
push
stos
sbb
or
jecxz
sub
push
mov
rep
dec
mov
int3
xchg
iret
push
nop
push
test
repz
mov
loopne
jp
sub
or
cmp
lahf
aaa
mov
cmp
inc
mov
sahf
mov
or
sbb
movsb
inc
loopne
xchg
xchg
xchg
lret
sub
cmp
insb
jb
arpl
or
jmp
stos
aas
xchg
fcomps
jo
jns
in
pop
jbe
lods
push
adc
jno
cld
push
inc
das
jmp
subb
lods
repz
xor
mov
push
sub
stos
ret
and
jg
and
sub
mov
inc
int3
daa
in
xor
jnp
and
fdivr
adc
test
fs
inc
bound
ds
hlt
js
mov
mov
xlat
mov
repz
outsl
test
xchg
or
jle
sbb
sbb
ja
or
mov
push
jp
out
xor
int
and
inc
ret
scas
test
repz
insl
movsl
or
push
stos
cmp
fmull
xchg
testl
mov
ljmp
mov
pop
enter
pop
dec
pop
js
cmp
ljmp
ss
pop
jmp
insb
fisttpll
insl
mull
jle
test
adc
jbe
in
xlat
fadds
inc
sub
rclb
push
fwait
xchg
mov
faddl
lret
sub
xor
mov
sub
pop
sahf
mov
ffreep
sti
mov
pop
dec
xor
pop
pop
sub
test
dec
addr16
mov
sub
lret
cld
addb
mov
pop
gs
imul
test
xor
lret
push
cmpsb
mov
xchg
pusha
jp
xchg
inc
stos
sbb
in
xchg
rcrl
xchg
out
xchg
enter
mov
aaa
outsb
ret
push
mov
or
cmp
push
xchg
into
fstps
out
dec
push
mov
fadd
out
enter
sbb
and
or
push
and
mov
inc
aaa
push
jmp
and
jmp
pop
fdivs
sbb
pop
into
sbb
jae
jae
xorl
pop
mov
mov
lea
xchg
xchg
in
test
ds
insb
les
pop
orl
inc
pop
xor
fldenv
jne
std
rorl
addr16
jo
push
xchg
sti
fldenv
lret
mov
xor
jle
in
int
jno
cmc
aam
add
ljmp
mov
out
mov
jae
and
adcb
test
sub
cmp
in
lods
adc
jne
fstps
mov
sub
sub
imul
dec
pop
xchg
and
aad
dec
mov
lahf
xlat
push
mov
add
jge
xor
mov
jmp
out
iret
xchg
inc
scas
mov
jge
push
push
inc
lret
popl
lret
pop
loope
mov
xor
fadds
into
and
inc
cmpsl
cld
dec
adc
pushf
jno
push
pop
aad
fcmovb
icebp
lods
loopne
add
sti
push
das
jg
or
push
imul
jae
dec
nop
imul
mov
out
outsl
ja
mov
enter
sub
inc
mov
adc
mov
lret
xchg
daa
jge
outsl
das
aaa
inc
sahf
or
pop
mov
popa
mov
cmp
jne
add
lret
and
mov
xchg
cltd
mov
flds
js
arpl
lret
cmpsb
out
stos
inc
ljmp
mov
mov
jecxz
loopne
push
das
test
rclb
push
and
xchg
scas
mov
xor
stos
lcall
enter
popfw
or
jle
hlt
notl
push
xchg
sub
movsl
cmp
cmp
add
or
test
dec
lock
add
arpl
test
inc
ss
xor
in
and
cli
jns
sbb
icebp
mov
bound
mov
dec
mov
dec
test
out
mov
mov
add
mov
or
lahf
and
xlat
scas
out
mov
es
mov
lret
ss
call
mov
xchg
scas
xchg
adc
repnz
ret
cld
outsl
push
cmpl
mov
add
clc
mov
inc
imul
lock
and
pop
mov
mov
aam
inc
test
inc
adc
push
xchg
clc
mov
fadds
orb
out
adc
mov
lcall
dec
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
jo
fcomps
sbb
adc
sbb
mov
xchg
test
test
sub
cmp
or
ds
jg
out
xor
daa
xchg
popl
mov
sbb
push
jo
jnp
sub
sub
mov
and
sbb
in
adc
enter
xchg
shlb
jno
and
sub
pop
or
mov
shl
fistps
sub
inc
rorb
cltd
mov
sbb
pop
mov
or
dec
and
pop
pop
jo
xorb
adc
test
dec
movsl
push
sbb
cmp
inc
sub
add
sub
cmpl
out
js
push
cmpsl
mov
sbbl
add
or
scas
test
aam
adc
pop
add
xchg
xor
push
lcall
sahf
cs
out
cld
int3
sub
inc
xchg
xor
pop
into
loopne
mov
sub
push
mov
pop
dec
dec
inc
jae
stos
repz
pop
xor
mov
in
movsb
sar
cmp
sub
cmp
es
sbb
lods
int3
lods
mov
mov
pop
xchg
int
jo
call
mov
sti
pop
mov
sbb
lret
mov
sub
out
mov
ljmp
add
sub
ljmp
mov
iret
incl
xor
mov
nop
out
popf
movsb
mov
push
test
mov
insl
xchg
fists
cmp
out
scas
cmp
fdivl
xor
mov
out
and
jae
loope
out
xchg
cli
popa
cmp
sub
xchg
stc
fcomp
and
test
mov
sarl
popa
pop
fldcw
les
mov
cmp
stos
push
popa
mov
adc
rolb
lret
or
outsl
cltd
inc
test
sub
mov
fistps
shrl
adc
xchg
ret
iret
inc
int
jl
int3
xchg
cmp
and
sbb
pop
mov
mull
ds
sti
clc
lods
jnp
push
rcrb
in
mov
sub
sbb
aam
mov
cmp
jae
lea
jle
lret
push
ret
jns
in
adc
push
pushf
int3
fisttps
out
xor
sub
push
xchg
gs
js
adc
xor
jb
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
sub
push
rcrb
sbb
adc
sbb
mov
push
mov
jnp
enter
xchg
add
or
cmpsb
cltd
cli
stc
ljmp
pop
add
arpl
pop
lcall
cs
mov
xchg
pusha
arpl
cmp
je
jmp
xorps
call
out
iret
loop
out
aaa
mov
outsl
jbe
sbb
add
in
fists
lock
mov
cs
jmp
cli
jmp
pop
movaps
cmp
xor
movsl
adc
mov
push
sar
jecxz
add
aaa
sub
test
pop
arpl
add
dec
imul
out
enter
sbb
pop
or
sbb
pushf
outsl
es
push
or
dec
mov
scas
test
rcll
mov
sub
mov
mov
mov
es
xlat
pop
or
in
cmc
mov
push
add
je
adc
jecxz
adc
cli
ret
aam
xchg
pop
pop
stos
jecxz
push
cwtl
repz
mov
lods
mov
jbe
inc
in
fiadds
fwait
cmp
mov
icebp
ja
out
mov
fnstsw
add
lods
jecxz,pn
ds
pop
dec
jge
add
fs
jmp
and
repnz
xchg
pop
mov
xchg
dec
aas
pushf
enter
pop
fdivrs
fbld
pop
mov
aam
cmp
insl
hlt
dec
clc
ss
leave
add
fsubrl
repz
arpl
xchg
jno
cmp
aaa
fcompl
mov
inc
lea
test
ds
pop
shlb
xlat
push
out
mov
call
inc
sub
movsl
jb
ss
int
push
push
jbe
outsb
mov
movsl
insl
icebp
adc
xor
ja
mov
leave
xor
dec
int
push
adc
or
and
mov
pop
aas
jne
cmp
loope
test
out
imul
mov
and
call
sbb
mov
jp
and
pop
loopne
xchg
adc
ficoml
in
bound
fstpt
imul
int
mov
dec
inc
add
mov
and
stos
cmp
lods
bound
sbb
or
data16
sbb
jnp
dec
clc
xchg
sub
xor
jo
jae
push
cli
scas
mov
leave
xchg
mov
shlb
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
repnz
mov
rclb
sbb
adc
inc
sub
xchg
mov
loopne
and
push
adc
ret
mov
add
push
hlt
lcall
inc
iret
pop
xchg
addl
loope
push
push
scas
xchg
sahf
icebp
mov
and
sbb
sbb
mov
push
inc
jno
negl
mov
leave
mov
push
cmc
rol
out
aas
lea
repnz
mov
stc
jle
mov
or
sub
outsb
cmp
ret
dec
and
add
pop
notl
jae
add
add
mov
lahf
jle
adc
xchg
xchg
inc
daa
addr16
cmp
or
movsl
addb
mov
popa
mov
add
loop
sbb
xchg
jmp
pop
ret
lret
aaa
sub
ljmp
xchg
xlat
sub
pushf
pop
loopne
mov
pop
orl
jne
es
ljmp
xchg
popa
decl
lds
arpl
lcall
fsubrl
call
gs
mov
sub
mov
mov
in
inc
add
mov
out
out
aad
mov
xchg
inc
cmpsb
ret
sub
and
jp
xchg
fwait
inc
fwait
je
sbb
ds
jae
popa
js
xchg
repz
popl
enter
loope
adc
jmp
add
mov
add
pop
dec
imul
push
sahf
fcoms
pushf
dec
jge
and
lcall
imul
and
adc
movsb
rclb
hlt
sbb
xor
mov
push
cmp
sahf
scas
lods
pushf
icebp
fsubs
adc
fcom
adc
xchg
inc
or
out
andl
fimull
lahf
lret
dec
out
sbb
dec
test
and
addb
js
and
and
and
mov
push
dec
sbb
sub
fisubl
pop
dec
sbb
aad
and
incl
jmp
mov
mov
cwtl
out
out
mov
roll
loope
push
and
dec
push
leave
fstl
pushf
cmp
mov
sbb
xlat
sbb
and
pop
fistpll
jecxz
rclb
call
lret
outsb
ror
push
inc
xorl
jge
js
lds
inc
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
pop
loope
into
enter
adc
sbb
push
aaa
pop
into
out
inc
in
fwait
in
push
cmp
xor
cld
lock
pop
stc
xchg
lret
add
invd
sub
in
xchg
push
jae
cs
adc
repnz
cmp
gs
mov
fldl
mov
add
negb
xor
popf
incb
xor
lods
rcl
fstpl
test
push
ljmp
dec
in
lods
adc
loopne
test
popf
out
or
xchg
dec
xor
loopne
sub
xor
sti
imul
push
or
je
loopne
push
fwait
cmp
arpl
push
sbb
fwait
cmp
xchg
cmp
sbb
sarb
xor
sub
sub
inc
mov
cmpsl
or
lock
or
call
rorl
sub
pop
out
out
add
cmp
and
dec
shl
inc
lcall
sub
and
pop
popa
repz
or
loopne
push
in
cmpl
lcall
xlat
inc
outsb
jmp
std
or
int
inc
or
jecxz
pop
loope
inc
dec
xchg
fs
and
fbld
cmpsl
fnsetpm(287
jae
into
mov
or
jne
jecxz
rorb
add
fwait
test
cmc
imul
cmp
stos
sbbb
std
aas
cmc
int
lods
jnp
rorb
hlt
outsb
push
inc
mov
fstps
jge
in
dec
or
cmp
stc
or
lar
sarb
add
ljmp
aad
stos
pop
pop
cmp
adc
imul
fdiv
popf
daa
add
mov
jecxz
mov
inc
iret
mov
cli
sahf
xchg
cmc
das
leave
pushf
aas
lods
cmp
js
xchg
movsb
lock
dec
mov
adc
mov
les
mov
test
adc
gs
cld
mov
cmp
imul
mov
or
cwtl
cli
add
pop
shr
sbb
dec
push
movsl
ficoms
rcl
jo
cmpl
sub
dec
cli
add
jmp
movsl
clc
push
xor
pop
sbb
inc
stc
clc
cli
fidivl
inc
dec
mov
cmp
iret
lret
or
leave
dec
je
sti
mov
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
adc
xor
jg
popa
jmp
inc
jnp,pt
push
pop
or
mov
test
clc
cmp
inc
xor
push
je
hlt
sub
jmp
mov
ljmp
push
dec
lahf
push
rcll
mov
xchg
mov
ljmp
outsl
das
jp
ret
loopne
jp
xor
ud1
test
inc
rorl
cli
xor
into
ret
jb
xor
jne
clc
loopne
jp
push
dec
or
mov
push
adc
mov
fldl
dec
add
dec
mov
sub
cld
push
xor
les
clc
xchg
inc
pop
insb
divl
daa
or
jae
xchg
mov
adc
inc
aad
xchg
sub
fidivrs
into
sbb
xchg
mov
movsb
roll
jae
adcb
fs
mov
adc
incb
imul
cld
mov
xor
cmp
pushf
xor
lds
loop
adc
das
sbb
mov
push
xchg
pushf
mov
push
pop
in
pop
or
pop
mov
fwait
mov
lods
cmpsl
nop
mov
fisubrs
out
and
daa
cmp
out
inc
stos
xchg
es
out
lahf
sbb
cli
jmp
pop
pushf
or
push
loop
mov
xchg
inc
cs
jb
cld
xor
inc
sub
nop
lcall
inc
clc
sbb
sbb
cmp
iret
sbb
inc
out
lea
pop
lret
adc
scas
shl
add
flds
xchg
les
ds
mov
push
arpl
test
mov
or
push
cld
cmpsl
xor
push
inc
mov
scas
leave
ret
mov
xor
in
ficompl
add
test
dec
roll
fldt
lea
in
jo
sahf
loopne
xchg
sahf
xchg
je
mov
in
or
repnz
fucomip
and
add
je
lcall
xchg
cmc
or
dec
inc
loop
mov
lcall
out
xorb
fcom
jne
jae
jb
shll
pop
jb
mov
outsl
jle
push
test
pusha
dec
popf
xor
pop
jge
outsl
mov
lret
popf
pop
cli
jmp
test
cs
and
xlat
mov
enter
pushf
inc
popf
pop
mov
jle
and
call
xchg
imulb
leave
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
pushl
sbb
rclb
sbb
adcl
mov
adc
cmp
lret
add
cli
fidivs
dec
jnp
fs
mov
push
dec
popf
bound
mov
fistps
sbb
lods
aad
xor
dec
scas
into
aam
sbb
call
push
ds
insl
push
sbb
data16
xor
dec
add
mov
aas
pushf
bnd
push
cmc
push
fistpl
test
mov
testl
mov
lods
sarb
inc
sbb
mov
push
in
sub
inc
add
leave
loopne
scas
stos
dec
aam
add
adc
sub
movsb
and
int
xchg
das
add
jne
out
test
enter
sahf
mov
into
call
cld
out
cmp
lods
xor
sbb
scas
outsb
cmpb
cmpsl
imul
pop
scas
xchg
loope
mov
jno
movswl
jge
pop
loopnew
pop
popa
sti
bound
pop
adc
xchg
inc
dec
or
mov
pop
inc
sub
adc
fistl
push
ja
mov
jle
cs
sub
lods
xor
out
fisttps
adc
push
xlat
mulb
xchg
push
push
shl
leave
lcall
data16
and
cmpl
or
cltd
pop
inc
movsl
in
call
sbb
adc
jb
xchg
add
dec
adc
push
aam
inc
sub
shlb
jmp
mov
mov
add
imul
xchg
movsl
imul
sarl
adc
cmp
mov
lahf
and
push
xchg
rcr
test
xor
daa
addr16
or
pop
add
jnp
push
mov
cs
sbb
jne
pushf
arpl
in
lahf
adc
iret
popl
mov
mov
sub
sub
lcall
xchg
xor
push
ds
sub
xchg
xchg
insl
cmpsl
cmpb
inc
in
dec
sub
mov
xor
negb
push
mov
and
inc
fidivrs
imul
data16
mov
insl
sbb
fwait
and
loop
sahf
das
and
sub
pop
dec
mov
mov
inc
cmpsb
icebp
cmp
mov
cli
jmp
in
adc
in
inc
push
xchg
sub
pop
insl
mov
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
sbb
sbb
rclb
sbb
aaa
sbb
xchg
pop
hlt
outsl
mov
lahf
inc
inc
lds
nop
and
stc
test
xor
push
in
cltd
push
les
sub
jnp
xor
xchg
sub
loope
test
adc
shrl
dec
xor
arpl
negl
xchg
add
insl
dec
aaa
sub
mov
ljmp
fucom
insb
fcmovbe
cmp
imul
lds
test
cld
push
shr
dec
daa
into
stc
fildll
lret
addr16
pushf
jl
data16
ret
cmp
idivl
fwait
lcall
ret
jg
je
lcall
cmc
ret
and
fistps
sbb
mov
push
stos
clc
sub
or
idiv
and
lea
dec
and
out
hlt
int3
mov
aad
out
stos
test
rcrl
sub
dec
push
sub
ret
shrb
inc
aas
sub
mov
sbb
push
xchg
mov
xchg
and
das
cmpsl
push
cmp
je
xor
int3
xchg
out
xor
aaa
inc
adc
sbb
fcomps
addr16
push
lahf
movsb
repnz
insl
scas
testb
mov
subb
mov
js
into
lea
cs
lea
pop
iret
test
stc
and
pop
and
xchg
and
sbb
cld
add
lret
orl
insl
addr16
lea
and
cmp
stos
out
nop
xchg
push
gs
das
inc
fildll
adcb
rclb
dec
in
pop
xchg
xor
je
xchg
loop
pop
jle
std
jp
loope
push
jmp
xlat
add
xchg
ljmp
mov
in
test
adc
xor
out
cmp
mov
push
out
das
mov
pop
jg
jl
test
pop
sub
xchg
icebp
dec
pop
mov
leave
mov
add
pop
leave
fst
push
mov
push
loope
lods
popa
bound
addr16
adc
mov
inc
push
mov
sub
aas
daa
dec
leave
pop
pusha
cwtl
fiadds
xchg
xchg
xor
fs
mov
fcoms
rorl
insb
and
jbe
jne
outsl
sbb
inc
pop
mov
iret
jae
xchg
shll
jl
mov
mov
mov
mov
out
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
enter
mov
sbb
adc
sbb
mov
sbb
les
imul
movb
and
or
xor
lods
cmpsl
pop
adc
inc
xchg
fildl
pop
push
cmp
cmpsl
xor
dec
fbld
mov
and
rorl
adc
xchg
xor
pop
or
enter
jl
imul
mov
xor
push
pop
push
push
setno
aad
fimuls
dec
jns
dec
fs
not
pop
movsb
jb
lcall
ret
xchg
inc
adc
cld
aad
ret
xchg
in
popf
mov
mov
lock
test
inc
push
stos
cld
jmp
push
jge
pop
cmc
push
jecxz
cli
cmpsl
in
jo
cmp
in
push
and
mov
xchg
shll
fidivrs
xchg
lea
pushf
rclb
fcmovnbe
xlat
adcl
mov
dec
hlt
xchg
test
mov
loopne
rep
or
add
dec
nop
sarb
pushf
add
and
fidivs
mov
xor
loope
lods
sbb
jnp
ljmp
cmc
fisttps
mov
cli
fs
and
dec
push
inc
push
shufps
in
iret
push
js
inc
jne
lds
ds
xlat
fdivl
imul
sbb
xor
xchg
jp
mov
lcall
daa
jg
sti
adc
sbb
push
fdivrs
popf
sub
fisubrs
jns
lret
dec
push
xor
adc
pop
pop
mov
mov
orb
ds
loop
push
push
jb
loop
cmp
inc
lret
sub
andl
dec
rolb
ss
leave
lea
push
test
xchg
pop
jle
xchg
inc
jecxz
jno
scas
adc
adcb
xor
inc
pop
jae
mov
sub
pop
call
negb
mov
sbbb
mulb
pop
iret
and
pushf
sub
mov
dec
dec
lret
popf
in
jmp
nop
and
lds
sub
call
push
sub
jne
fs
gs
pop
std
sub
mov
or
outsl
int3
jb
fadds
ljmp
sub
cmc
insb
xor
or
aas
pop
gs
addb
lret
je
dec
lds
jno
test
jne
pop
jmp
inc
mov
inc
lcall
mov
sbb
rclb
sbb
xor
fdivrp
jo
inc
stc
push
lods
xor
jecxz
out
aam
mov
sti
xchg
push
sub
or
xchg
mov
xchg
and
push
dec
xchg
sbb
scas
mov
mov
and
inc
jb
mov
add
dec
sahf
xor
stc
je
das
dec
xchg
pop
fcomi
ret
loopne
mov
pop
shrl
inc
adc
pusha
or
nop
adc
ss
mov
bound
mov
jae
scas
xchg
sub
es
mov
sbb
movl
int
pop
mov
insl
jge
jae
arpl
shll
pushf
xlat
and
out
push
push
and
jmp
lds
xor
cmp
jge
aam
stos
xchg
dec
ror
test
aaa
out
movsl
cmpl
adc
push
imull
xchg
movsl
mov
int3
jbe
sbb
repnz
stos
rcl
sti
push
dec
xchg
adc
cmp
mov
ds
push
dec
push
repnz
fidivrl
daa
adc
cld
jno
xorl
mov
and
mov
icebp
imul
add
popa
divl
ret
je
pusha
mov
pop
sbb
mov
aam
sti
imul
mov
cmpsl
xchg
push
imul
xchg
ficompl
fsubrs
dec
lods
sbb
pop
and
add
movl
inc
lods
psrad
sbb
push
rcrb
stc
icebp
push
sbb
fstpt
mov
pushf
test
jnp
push
mov
jge
sbb
out
add
lods
mov
jbe
movsl
shll
in
or
push
cwtl
test
adc
loope
dec
add
rcll
in
mov
in
out
mov
pop
jae
lock
sbb
test
dec
and
cmp
xchg
jecxz
fcoms
decl
push
ret
movsl
adc
mov
jno
adc
loopne
or
inc
inc
mov
fsts
mov
jecxz
mov
mov
dec
dec
insl
push
cli
mov
xchg
xor
adc
xchg
cmp
push
cmp
pop
daa
jbe
repz
mov
icebp
dec
sbb
push
aaa
cmp
stos
pusha
jne
sub
imul
cmp
dec
or
mov
cmpsw
das
inc
lahf
sbb
rclb
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
test
sbb
mov
pop
mov
add
call
fdivs
decl
daa
int
cltd
jno
jne
mov
mov
in
cmc
sub
or
adcl
jg
insb
lahf
fsubrl
mov
jb
stos
les
pop
enter
arpl
push
sub
pop
jmp
inc
cmpsl
add
pop
hlt
xchg
lret
fiadds
and
cld
jge
lret
mov
and
push
pushf
mov
insl
xor
imul
repnz
test
cltd
gs
cs
mov
jle
ljmp
jnp
inc
and
add
mov
xor
push
xchg
push
rcl
mov
into
nop
push
mov
add
es
stos
pop
add
insl
pushf
mov
in
dec
lock
mov
out
fildll
mov
sub
test
inc
not
inc
popa
ret
pop
js
pushf
jl
push
sub
sbb
jle
aas
lcall
mov
adc
pop
rolb
es
adc
outsb
popf
add
jb
movsl
sbb
push
scas
xor
std
mov
jl
inc
or
pushf
xor
jne
and
pop
xchg
xchg
js
addl
dec
xor
jo
fistpl
setne
sbb
pop
test
lods
mulb
lea
mov
adc
cmc
mov
jns
sub
jb
mov
add
shrb
inc
dec
ret
scas
push
sbb
out
pop
repnz
cwtl
xchg
jae
pusha
mov
pop
jb
mov
mulb
test
bound
xchg
out
cmp
and
mov
divb
pop
iret
inc
aas
test
pusha
mov
sbb
jecxz
adc
js
shll
aad
jb
pop
je
jae
inc
cmp
or
clc
repz
jp
push
arpl
idivl
test
clc
jo
lahf
gs
inc
adc
stc
xor
out
ret
or
xchg
sub
xor
inc
adc
subb
rcl
pop
adc
pushf
ficoml
adc
pushf
xor
insl
popf
mov
movsb
daa
dec
pop
out
xor
fbld
mov
sub
enter
testl
movb
mov
push
es
inc
call
cmc
cmp
sbb
adc
adcl
cs
and
or
lahf
jg
insb
jo
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
loopne
pop
sub
ljmp
into
nop
popf
ret
lea
ret
fcompl
sub
jmp
push
or
sarl
jg
mov
js
ljmp
adc
ljmp
mov
stos
mov
dec
jmp
nop
pop
loopne
jbe
pop
jne
addr16
mov
stos
test
dec
in
xchg
pop
xor
xchg
sub
add
out
js
sub
adc
loope
les
and
and
loope
testb
mov
and
fwait
cltd
testb
jg
jg
fistpl
push
in
cli
pop
cmp
out
aad
scas
xchg
rorb
mov
sbb
shlb
jns
jns
pusha
test
and
divb
dec
push
push
cmpsl
mov
push
mov
in
orb
daa
test
jno
inc
and
xor
xor
fiaddl
dec
pusha
ds
mul
out
sbb
mov
fisubs
test
cmp
or
cld
lods
and
in
inc
sbb
sbb
inc
les
sarl
cwtl
or
shlb
mov
pop
and
sub
sar
rorl
xchg
pop
ja
pusha
test
pop
lock
enter
mov
popa
jo
sbb
sub
repz
fcompl
sub
cmp
mov
fs
jl
popa
imul
mov
pop
fwait
sub
mov
mov
dec
sbb
xchg
es
mov
je
add
push
add
xor
aas
das
das
idivl
scas
lods
popf
daa
lods
adcb
int
pop
cli
roll
add
in
push
imul
sarl
sub
dec
sti
or
idivl
les
outsl
aas
lods
push
inc
inc
or
sbb
leave
inc
push
pop
addr16
cmpsb
sbb
sti
inc
movsb
loope
adc
dec
jb
fistpll
xchg
les
xchg
cltd
movsb
jg
gs
popf
idiv
xor
stos
cmp
jbe
push
sbb
ret
std
fcmovne
pop
cli
cmp
les
fldcw
adc
dec
lret
mov
cld
popa
pop
jecxz
xchg
push
xor
lods
ret
mov
aas
mov
repnz
pop
push
loope
loop
xchg
iret
jnp
out
push
inc
push
push
decl
jae
mov
adc
xor
add
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jo
sahf
sbb
mov
cli
das
loop,pn
fmuls
dec
cmp
push
xor
nop
sub
clc
jge
dec
sbb
mov
mov
lret
clc
mov
test
jmp
cmp
mov
jnp
jge
fs
shrb
add
inc
rorb
pop
xchg
add
in
inc
leave
xchg
sub
in
xchg
js
sub
movsl
or
xor
ja
outsl
mov
inc
mov
gs
adcl
add
adc
inc
xchg
push
jns
loope
push
add
or
add
pusha
nop
das
add
es
fisubrs
scas
jmp
xchg
xor
sub
test
rorb
mov
pop
fstl
mov
shll
dec
jg
test
divl
mov
stos
xor
inc
add
xor
push
sub
xchg
enter
xchg
scas
jecxz
mov
adc
sarl
and
out
mov
inc
sub
dec
push
fwait
popa
jl
loopne
aad
push
mov
sahf
pop
pop
popf
mov
movsl
add
lods
pusha
ja
call
fstpl
in
mov
and
dec
add
outsl
fcomp
imul
sti
sbb
mov
movsb
pop
sbb
and
fisttpll
jnp
push
das
xchg
testb
mov
add
mov
loopne
test
xlat
subl
mov
or
cltd
pop
cwtl
sub
xchg
jno
es
mov
dec
bound
adc
insl
xlat
add
leave
mov
cmp
pop
push
outsb
cwtl
outsb
inc
loop
out
and
pop
fcoml
mov
dec
loop
clc
or
enter
cltd
dec
or
test
cmpsl
pop
daa
test
scas
outsb
lock
subb
and
into
xlat
fidivl
inc
dec
inc
das
scas
fldenv
shl
test
jmp
inc
sbb
imul
or
and
mov
inc
sbb
mov
mov
dec
mov
lcall
xor
enter
mov
adc
flds
jmp
ftst
das
push
cltd
inc
test
stc
sahf
push
xchg
fcmovu
movsb
and
je
nop
jnp
or
aam
cmp
ja
cmp
mov
push
xlat
cmp
sti
pop
mov
sbb
xchg
and
inc
outsb
arpl
sub
add
cmpsl
les
fnstsw
call
mov
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
pop
mov
sbb
mov
fidivrs
cmp
mov
dec
xchg
mov
ja
repz
loop
dec
sub
inc
fisttpl
sbb
loop
xlat
mov
pop
outsb
imul
std
bound
in
pop
pushf
cmp
lds
lcall
mov
pop
fldln2
ljmp
mov
xchg
ja
push
leave
cmp
push
rcrb
bound
inc
cwtl
test
mov
je
mov
mov
imul
add
sub
mov
lret
cld
incl
jo
xchg
into
out
adc
jge
adc
dec
inc
shrb
adc
sbbb
and
test
ja
mov
jae
mov
cmpsl
dec
mov
aas
lcall
idivl
in
add
pushf
mov
fnstsw
xor
int3
stc
adc
xor
xlat
iret
adc
inc
pop
lcall
xchg
in
dec
lods
ljmp
dec
lds
in
sbb
bound
js
fnstsw
mov
xchg
mov
fs
aam
dec
imul
jno
outsl
xor
xorb
test
fdivrl
subl
xchg
pop
and
call
inc
aam
cltd
insb
xor
lds
test
xor
jl
cmp
rclb
pop
push
sub
and
lds
sub
out
shlb
mov
mov
lock
sbb
outsl
and
js
xchg
into
repz
mov
iret
sbb
xor
pop
jnp
cmpsb
mov
aaa
xor
jbe
xchg
add
std
xchg
icebp
adc
xchg
push
fidivrs
inc
push
push
fists
inc
call
daa
add
sub
popf
push
mov
ja
notl
test
xor
mov
or
stos
push
xor
or
dec
loop
scas
push
mov
cmp
sbb
xchg
lret
jbe
pop
pop
dec
popf
inc
add
into
jb
es
lods
int3
sti
iret
data16
or
push
into
ret
sub
xlat
adc
fidivrs
int3
test
sub
xlat
incl
add
add
loope
popf
pop
or
idivl
xchg
cmp
dec
xchg
mov
cmp
stc
adc
or
scas
sub
sub
dec
push
dec
xor
add
testb
xor
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
ret
stos
ret
xchg
sbb
mov
xchg
or
adc
sub
push
sarl
pop
or
and
dec
mov
xlat
js
and
xor
push
jp
jge
adc
cmpsl
sbb
mov
fidivl
cmc
lods
fmull
push
ficomps
sub
xor
push
mov
sahf
mov
push
add
push
inc
jbe
push
cld
fmulp
dec
cmp
out
mov
hlt
test
jmp
and
sbb
lcall
test
dec
jmp
push
aam
jp
out
repz
xor
mov
call
lahf
push
jns
rcr
aad
bound
bound
int3
cli
mov
push
sahf
enter
jge
std
das
hlt
adc
enter
cs
adc
xor
mov
mov
cmpsl
shll
cmpsb
out
subl
dec
jae
sub
mov
cmc
mov
jb
out
mov
lods
mov
sub
inc
adc
jne
pop
push
in
inc
test
mov
dec
test
lods
in
fcmovnbe
adc
lods
pop
or
dec
xor
cli
out
jg
hlt
imul
cmp
jbe
pop
xchg
push
sbb
cmp
mov
loopne
std
push
imul
mov
xchg
mov
fldenv
lret
scas
roll
call
and
inc
xchg
and
in
popf
push
arpl
mov
iret
data16
jmp
sbb
fisttps
or
arpl
pusha
inc
clc
pop
mov
outsl
ret
les
pop
cmp
pop
stos
push
int
sahf
add
xchg
push
loope
int
sbb
mov
rol
xchg
out
mull
inc
pop
lock
lds
mov
sub
push
jbe
sub
inc
dec
cmp
mov
push
icebp
xchg
mov
mov
loope
fcoms
mov
inc
fldt
data16
pop
inc
loop,pt
pop
rolb
inc
pop
cs
and
call
cmp
addl
outsl
lcall
das
pop
and
cmp
icebp
aad
pop
iret
int
fdiv
xchg
int
lods
out
mov
sub
pop
xchg
jecxz
std
push
mov
mov
imul
cmp
cltd
add
sub
xchg
js
insb
push
sub
dec
mov
pop
rclb
mov
pop
insb
cmp
enter
stos
add
mov
mov
inc
lock
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
hlt
or
sbb
pushf
mov
mov
pop
xor
and
ds
sub
pop
ss
fwait
out
jl
stos
inc
mov
sbb
call
cwtl
movsl
leave
lahf
jae
dec
es
sar
int
mov
in
lods
sbb
loop
out
xchg
mov
nop
in
sbb
push
shll
test
ljmp
dec
sbb
rorb
or
iret
mov
adc
sub
stos
mov
push
mov
lds
or
in
sbb
xchg
lret
xlat
dec
add
mov
je
jmp
dec
fbld
fs
xchg
out
cmp
dec
cs
and
icebp
push
push
lea
sbb
lods
xchg
ret
pop
lods
scas
mov
sbb
rep
outsl
mov
inc
xorl
fs
xchg
xchg
mov
jle
dec
mov
insb
fsubrs
xchg
insb
mov
jg
mov
cmpsl
cmpsl
sbb
idivb
xchg
lahf
out
xlat
adc
pop
cmp
clc
jo
cmc
mov
jp
out
shll
movsl
notl
repz
add
insl
mov
xorl
std
packsswb
pop
jo
push
push
and
loope
xchg
jo
in
fnstsw
mov
mov
cmc
adc
pop
jge
push
outsb
inc
test
popf
adc
ja
rorb
in
xchg
mov
popa
sti
xor
inc
mov
pop
scas
adc
push
stos
dec
mov
sub
out
xchg
add
nop
out
mov
and
lods
mov
push
lcall
dec
pop
imul
jns
ficoms
adc
leave
sub
sub
mov
test
filds
push
es
mov
add
inc
sbb
shll
add
loop
jle
out
push
mov
out
xor
jle
cld
push
mov
jne
mov
adc
cmc
mov
jecxz
movsb
in
pushf
fildll
testl
stc
std
sub
repz
in
fnstenv
or
cs
xor
push
xor
lods
xor
sbb
lahf
cmpsb
dec
test
loop
cmpsl
sbb
test
outsl
out
sub
mov
loope
dec
inc
aad
loop
stos
fs
mov
adc
push
push
jg
mov
cmp
scas
mov
dec
and
ret
int3
cmp
xchg
sub
clc
out
into
call
lahf
out
int
xchg
shl
ss
sbb
dec
adc
pop
add
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
jge
cs
push
ljmp
arpl
mov
pushf
mov
negl
cltd
jl
inc
pop
add
outsl
and
mov
and
and
jne
movsl
inc
push
out
xor
dec
sub
push
xchg
dec
iret
ds
dec
lret
mov
cmp
cmp
in
push
push
stos
pushl
outsl
fstpl
adc
inc
stos
into
mov
leave
xchg
decb
fcmovnbe
imul
repnz
sub
scas
pop
inc
ret
push
adc
pop
sub
fidivs
cwtl
pop
mov
idiv
pop
pop
sbb
stos
jns
cs
pop
adc
xor
ret
mov
jno
lea
jmp
dec
sub
mov
xor
fadd
cmp
sarl
xchg
movsl
scas
addr16
xchg
and
sub
rcl
daa
in
inc
repnz
xchg
sahf
shlb
mov
pop
pop
cmp
adc
inc
aad
dec
cmp
fsubrp
xchg
ds
push
cwtl
cmpsb
mov
adc
cmp
or
test
lods
je
lret
ficoml
jnp
popf
sbb
pop
in
push
cmp
dec
testb
int3
sbb
popa
sub
mov
sbb
jge
inc
jecxz
stc
sub
push
in
dec
fistps
xchg
lock
push
lods
mov
push
mov
jns
pop
cld
xchg
lds
add
aas
jl
mov
add
fisttps
push
cs
mov
push
fidivl
mov
ret
lds
sbb
loopne
xchg
fidivrs
mov
rol
out
js
out
mov
adc
push
clc
mov
add
mov
mov
inc
xchg
shlb
lcall
cli
inc
sub
lcall
mov
dec
loop
nop
lds
sahf
sbb
mov
inc
stos
test
jg
pop
loope
xchg
pop
movsl
pop
add
mov
leave
pusha
mov
lods
lret
aad
and
inc
lahf
add
in
xor
stc
test
mov
ljmp
adc
cmp
adc
xchg
ja
jle
cld
dec
popf
and
daa
sahf
xor
mov
in
add
sbb
outsl
lea
sbb
popf
je
push
cmpsl
cli
nop
pop
inc
jbe
or
mov
icebp
je
mov
adc
dec
out
mov
cmc
filds
std
pop
inc
fmuls
xchg
out
mov
mov
xor
das
jmp
popf
mov
jge
movl
mov
mov
sub
jmp
test
mov
push
inc
dec
jle
sbbb
lcall
divl
sahf
cwtl
lods
ds
inc
shrl
daa
push
stos
jl
loope,pn
sahf
pop
leave
clc
cld
add
xor
dec
test
jp
pusha
dec
pop
in
xlat
mov
and
xchg
ljmp
jge
bswap
orl
push
aam
ljmp
sbb
and
push
clc
push
cmp
rorl
add
cmc
jge
mov
pushf
pop
dec
or
pusha
fldt
cld
iret
pop
cmp
rorl
popf
add
or
lret
and
xchg
or
lea
fsubl
sub
and
and
lret
jnp
rcll
pop
arpl
mov
xor
jb
xchg
lea
cwtl
and
je
inc
add
fstpl
cwtl
sub
dec
and
xor
movsb
mov
out
mov
push
pop
jne
push
leave
ret
daa
xchg
mov
fidivrs
rcrb
push
jae
and
and
sbb
fildll
or
repz
pop
mov
fisubs
push
adc
push
adc
scas
inc
jbe
push
lahf
push
ss
pop
xchg
roll
mov
xchg
xor
enter
push
loopne
andb
out
add
hlt
movsb
push
adc
sbb
fs
jbe
sbb
pusha
fnsave
nop
aam
pop
xlat
jo
cmp
bound
dec
mov
add
lcall
mov
lret
movb
mov
lea
les
out
mov
ficompl
fcoml
mov
mov
cmp
jle
div
adc
imulb
jnp
sub
outsb
pop
icebp
test
daa
pop
cmp
pop
hlt
dec
sub
lock
mov
rorl
and
inc
xchg
daa
iret
into
inc
ficomps
dec
mov
rolb
incl
jecxz
imul
lcall
jae
mov
cmp
js
mov
fxtract
push
lods
ljmp
xchg
mov
orb
and
enter
lahf
mov
xchg
lret
rol
cmp
sub
and
popl
dec
insl
lret
xor
inc
movsl
push
test
mov
scas
gs
xor
negl
cli
cmc
fwait
rorb
inc
xchg
mov
fstpl
mov
aad
in
aam
adc
lcall
fdivs
xchg
je
jge
cmp
cmc
arpl
fcmovne
or
inc
nop
test
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
cmp
sbb
sbb
xchg
pop
cmp
xchg
fistps
stos
mov
es
mov
and
push
add
aaa
mov
adc
into
aaa
out
mov
cmp
iret
inc
cmp
push
cmp
xor
pop
pop
or
outsl
cmc
ljmp
mov
pop
sub
sub
pop
push
mov
xchg
into
cmpsb
pushf
mov
mov
pop
sbb
aam
insb
je
jbe
pop
sub
adc
mov
inc
sub
cmc
cld
iret
popf
sub
outsb
fdivl
mov
mov
das
mov
stc
add
add
and
pop
mov
add
bnd
out
jmp
out
lea
movsb
std
push
add
fwait
jg
jmp
dec
iret
push
shl
push
pop
pop
lcall
mov
mov
int3
lahf
sbb
xor
dec
cltd
jne
sbb
cmp
xchg
fmull
stc
xor
adc
ja
push
pop
js
test
imul
xor
push
push
push
mov
adc
and
fs
cltd
sar
in
iret
or
inc
insb
mov
fistpll
mov
dec
cmpsl
call
jno
sbb
lret
add
les
aas
xor
mov
xor
xorb
push
sub
xchg
adc
out
lcall
je
stos
cmpsl
ja
enter
adc
ret
fldcw
ljmp
mov
out
imul
sub
cli
int
js
mov
lret
xchg
movsl
xor
jecxz
mov
add
pop
sbb
mov
add
xor
ds
mov
popf
rclb
or
jmp
sahf
inc
call
and
pop
fsubs
pop
sbb
lods
or
xchg
pop
gs
shlb
inc
mov
sbb
pop
and
int3
imul
mov
jecxz
jbe
push
pop
sub
repz
inc
jnp
fstpl
push
in
sbb
ss
cmp
add
mov
inc
subb
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
stos
addr16
jno
sbb
mov
jge
inc
jmp
push
xchg
cwtl
mov
mov
mov
cmp
andb
flds
fwait
xchg
dec
push
add
and
in
mov
mov
lea
daa
scas
insb
aas
adc
adc
aaa
mov
aam
mov
adc
imul
cmpsl
icebp
and
nop
mov
gs
imulb
push
popa
cmp
jmp
mov
inc
adc
cmp
int
xchg
push
addr16
fldt
scas
aaa
xchg
push
das
xchg
jb
xchg
stc
jg
clc
add
insb
mov
test
jo
dec
in
xchg
in
dec
push
rcrl
insb
mov
fs
inc
and
add
flds
sti
push
lea
test
adc
cmp
xchg
cmpsb
mov
sbb
into
mov
shrl
push
adc
pop
cmp
mov
lret
lea
and
test
imull
arpl
lods
cmc
ds
and
xchg
xchg
test
out
ljmp
sub
inc
pushf
inc
xlat
loopne
leave
outsw
xor
icebp
insl
cltd
push
adc
ret
dec
test
and
push
mov
add
clc
iret
cli
mov
les
les
mov
jl
cmp
pop
aam
adc
pusha
add
or
mulb
mov
in
in
out
push
add
jle
or
fisubrl
add
mov
ss
push
outsl
dec
ljmp
aad
sub
or
mov
cwtl
pop
hlt
inc
es
stos
mov
xchg
sub
pop
test
rorl
mov
inc
icebp
mov
or
jmp
ja
dec
icebp
mov
lahf
adc
and
add
or
test
pop
lret
fnsave
add
enter
sarl
xchg
pop
mov
mov
cs
sbb
cmp
iret
loop
pop
leave
int3
push
hlt
inc
mov
pushf
dec
lret
mov
outsb
jg
hlt
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
cli
mov
jno
sbb
mov
xchg
push
stos
pop
clc
add
aas
pop
mov
jmp
adc
ret
insl
xchg
jle
mov
outsb
test
and
cmp
dec
mov
and
mov
imul
inc
cmp
out
cs
dec
or
dec
jl
inc
mov
mov
xlat
mov
sahf
sbb
cmpsl
lods
jle
addr16
cmpsl
imul
mov
xor
add
push
imul
dec
stc
in
dec
cli
loope
lret
jp
stos
das
orl
fisubrs
sub
jp
jae
pop
cwtl
push
pop
out
inc
dec
shlb
sar
adc
or
pop
imul
xor
hlt
push
into
test
jg
inc
andl
fadd
and
xchg
aaa
imul
cmp
das
aaa
fwait
xchg
pusha
push
lahf
das
adc
lods
sub
int
daa
mov
adc
push
test
pop
fs
and
xchg
add
add
cmp
inc
hlt
lcall
fimull
fdivrs
outsb
mov
out
mov
daa
shlb
imul
push
in
lods
cli
testl
divl
sbb
aas
sub
sbb
add
out
out
je
stc
cmp
cmp
mov
or
add
inc
or
sub
or
push
dec
mov
filds
hlt
lcall
mov
cmp
loop
mov
push
fsubr
sub
or
inc
jle
inc
pop
mov
repz
mov
lret
aaa
mov
sub
in
fisttps
bound
fisubl
in
fcoml
pop
ds
cmp
adc
fiadds
mov
jg
loope
add
sbb
mov
sub
scas
fsubrl
pop
push
cmp
jne
or
and
push
mov
or
mov
leave
mov
jns
xor
jae
fdivl
adc
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
outsl
mov
repnz
aad
out
scas
loop
icebp
int3
les
adc
pop
xchg
lret
iret
pop
jp
cmp
mov
inc
lods
or
ret
loop
sbbb
add
mov
cmp
and
ror
das
in
sarb
cmpsl
fisubrs
cmp
in
out
out
adc
lahf
adc
and
sarl
and
pop
je
adc
into
adc
or
pop
jle
gs
ds
shr
fwait
push
or
push
lds
jg
dec
lds
or
xchg
push
aas
inc
sbb
push
mov
cmp
aaa
test
jb
jne
cmc
icebp
shlb
std
testl
nop
cmp
mov
pop
sbb
sbb
out
and
dec
out
hlt
and
sti
mov
cmp
cli
shlb
cwtl
mov
cltd
pop
clc
cmp
decl
lret
add
int
inc
cmp
js
pause
add
lahf
rcr
xor
jns
lret
push
aas
dec
mov
call
roll
ficompl
mov
fnstcw
mov
sbbl
movsl
in
jecxz
pop
ret
scas
cld
aad
jge
cmp
adc
inc
sbb
andl
arpl
mov
das
adc
inc
adc
leave
pop
cmp
sahf
xlat
movb
js
xlat
popf
push
cltd
flds
int
addb
lods
jle
dec
sbb
cmp
dec
scas
leave
sahf
in
push
jp
mov
ss
sahf
rorb
lods
shrb
dec
inc
cmp
cltd
mov
fs
mov
lret
test
cmp
xor
xor
pop
fstps
xlat
and
mov
inc
fcmovbe
shrb
aas
mov
dec
ds
mov
ret
pop
pop
das
in
ret
pop
jle
faddl
push
enter
xchg
xor
adc
fld1
mov
rclb
aas
xlat
mov
call
cmc
sub
outsl
push
xor
sti
and
out
out
enter
stos
cwtl
fcomps
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
cmpl
sbb
sbb
out
leave
fidivs
out
gs
pop
mov
insb
push
and
or
sti
inc
out
out
lret
leave
data16
stc
push
mov
cwtl
pushf
movsl
roll
sub
sbb
jmp
xor
jmp
sub
jno
int
xchg
pop
mov
loop
filds
adc
add
sub
int
cmp
sbb
or
aad
mov
mov
mov
lcall
sub
test
loope
ret
fists
mov
push
lcall
stos
jmp
inc
cmp
cmp
stos
loope
xor
mov
sub
inc
cwtl
int3
in
cmc
mov
lock
out
jns
notl
mov
add
in
and
adc
sbb
sti
daa
mov
inc
cmp
xor
inc
push
ss
jnp
pop
ficoml
or
xor
fildl
aaa
mov
loop
sub
repnz
or
add
pushf
sahf
fnsave
jp
out
sub
jne
cmp
push
sbb
and
icebp
push
pop
arpl
push
das
jecxz
loop
mov
xchg
adc
and
bound
sahf
mov
idivl
pushw
les
and
int
jae
xlat
sub
mov
pop
lcall
int3
mov
adc
ficomps
lods
xlat
push
ret
jmp
movl
je
mov
adc
fdivrs
scas
xchg
loopne
insb
inc
xchg
lcall
loop
jo
rclb
subb
add
dec
out
add
and
push
adc
cmp
movsb
lret
cmp
stc
xor
xchg
xor
and
adc
mov
cltd
jl
adc
incb
mov
pop
out
jle
adc
xor
xchg
int
mov
mov
aaa
loope
enter
aam
pushf
call
jns
mov
lahf
stos
push
jne
frstor
pop
popf
add
inc
cltd
push
pop
adc
mov
fwait
jecxz
loop
jmp
mov
push
mov
leave
push
jl
xlat
sub
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
mov
pop
jo
data16
jno
sbb
dec
icebp
xor
inc
nop
fsubrl
or
imul
dec
lret
pop
cmp
jge
jne
inc
add
scas
push
aam
mov
pop
popf
and
cmp
mov
pusha
dec
cmp
mov
mov
jecxz
in
int3
shlb
cmp
or
movsb
pop
in
mov
das
pop
add
ds
std
fistps
movl
popa
push
pop
cmp
mov
mov
jge
aad
cltd
je
loopne
jbe
pmuludq
sarb
call
bound
enter
jmp
pop
int3
xor
lods
cmpsl
mov
stos
lds
into
mov
xor
add
adc
mov
and
bound
in
ficompl
enter
stos
push
addl
scas
dec
pop
cld
loop
scas
xor
jg
cmp
adc
and
sbb
inc
cmp
mov
or
adc
ljmp
push
mov
notl
cmp
xchg
fadds
shll
mov
out
sahf
mov
popa
push
jo
jle
cmp
outsb
xor
insl
mov
or
gs
fiaddl
pushl
test
lea
add
aaa
test
mov
and
pop
orb
fstpl
mov
jl
adc
xchg
dec
sti
mov
data16
add
scas
or
hlt
rcrb
ss
lea
call
out
jle
pushf
xor
in
mov
jb
loopne
push
sbbl
jl
push
adc
mov
es
fisttps
add
push
push
pop
add
push
push
and
rorb
sbb
add
fiaddl
mov
and
jmp
push
jg
mov
fcmovne
aad
inc
fildll
in
enter
movb
inc
sbb
push
jns,pn
mov
jg
xchg
or
or
adc
mov
ja
pop
es
lods
mov
push
mov
pop
test
xor
in
xchg
daa
and
dec
add
mov
xchg
dec
test
test
fldcw
jnp
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
stos
mov
jl
pusha
sbb
jno
sbb
aaa
adcl
fisttps
xchg
jnp
or
pop
shrb
imul
mov
in
daa
or
jno
test
jbe
xchg
xchg
xchg
lret
mov
test
jl
jle
sbb
jo
sub
stc
push
out
mov
sbb
cmp
push
lret
cmp
adc
mov
dec
mov
bound
adc
sub
das
je
xor
add
test
adc
pop
mov
mov
cmp
push
js
adc
push
into
mov
leave
out
sub
int3
imul
push
insl
out
adc
js
cltd
mov
adc
faddp
pusha
lcall
andnps
mov
inc
in
out
mov
add
enter
lcall
push
lds
popf
sub
movsl
sub
test
xchg
call
cmp
cmp
push
out
addr16
cmp
push
push
xor
xchg
and
sbb
sbb
outsb
lods
or
push
sub
enter
dec
xor
lcall
inc
mov
outsb
or
jg
add
xchg
push
adc
aaa
dec
dec
leave
sbb
xlat
shlb
jnp
leave
daa
notl
dec
xor
in
cmpsb
ret
xchg
xor
insb
xchg
inc
ja
jl
dec
rcrb
outsl
pushf
sub
inc
in
in
push
or
jg
pop
dec
mov
pop
inc
enter
ljmp
sbb
adc
pop
pop
push
pop
mov
das
scas
push
sbb
add
mov
das
inc
sub
scas
adc
lret
test
dec
repnz
xchg
pop
pusha
or
mov
testb
fldpi
clc
xlat
jnp
jo
hlt
sub
dec
and
mov
jne
mov
and
adc
ret
stos
ja
sbb
bnd
pop
aad
pop
fucomi
ret
inc
lahf
int
mov
dec
push
jle
or
pop
push
jno
pop
cmpsb
ss
stc
rol
push
inc
lds
add
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
shr
mov
jno
sbb
xchg
idivb
cmp
push
lds
pop
jnp
add
mov
ret
jo
xor
cli
inc
cwtl
addl
push
dec
pushl
sbb
loopne
sti
cld
or
mov
ds
xchg
cmp
pop
leave
leave
cmp
jg
ja
or
dec
bound
rcll
xor
push
aaa
cmpsl
jo,pt
rcrl
ret
out
mov
mul
xor
mov
ljmp
adc
outsl
leave
mov
inc
cmc
jne
ret
int
sub
das
into
mov
inc
push
ds
mov
mov
rclb
into
test
bound
xor
inc
scas
push
mov
or
jnp
cmp
pushf
push
cmc
sarb
mov
push
jne
cltd
lods
sti
mov
mov
notl
pushf
in
adc
mov
fucomi
mov
add
int
imul
or
pop
sub
aam
pop
std
out
add
xor
cmovae
mov
outsl
dec
push
lret
rcrl
mov
xor
jo
les
daa
sub
mov
mov
ficoms
add
out
pushf
xchg
xchg
ja
or
xor
cmc
mov
fdivrs
xor
push
sub
out
leave
aas
aad
shlb
cld
jo
stc
add
lahf
divl
jbe
dec
dec
cld
aam
imul
pop
out
lea
sbb
pop
loope
push
test
outsb
das
fstpt
mov
mov
icebp
xchg
xchg
fcoml
cmpsb
and
or
pop
icebp
fs
es
gs
daa
xchg
pusha
test
std
outsl
mov
imul
sahf
test
inc
and
and
pop
syscall
or
and
pop
call
and
xor
lods
fs
in
pop
dec
cmp
out
jae
push
push
or
pop
dec
out
ja
push
and
movsl
insb
xchg
xor
lret
loope
scas
cltd
lahf
push
icebp
push
mov
insl
xchg
rep
xchg
and
push
int3
and
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
push
daa
cmp
push
and
or
cltd
je
pop
mov
sbb
popf
pop
mov
push
cmp
out
mov
inc
out
xchg
pop
xchg
dec
scas
icebp
sub
sbbb
mov
pop
test
outsb
dec
cmp
sub
insl
aaa
fcmovne
inc
inc
into
push
cld
imul
dec
xchg
popf
push
sbb
add
mull
sub
in
loopne
xchg
dec
sbb
sar
lahf
xor
mov
mov
scas
sbb
sbb
popf
imul
push
rorl
incl
jp
jg
fcompl
mov
lret
adc
or
sub
ret
sub
push
ror
fwait
lods
mov
in
ds
pop
insl
enter
sti
pop
aam
fwait
icebp
xchg
dec
xchg
cld
xchg
test
js
pop
les
not
fistl
insl
jbe
or
jno
stc
fidivrs
push
ljmp
movsb
call
xor
pop
sar
sub
sarb
jg
iret
fst
clc
dec
or
jo
cmp
stos
cli
sub
ret
out
lret
inc
out
ljmp
addr16
lods
std
cmp
out
das
lock
push
jns
xchg
add
test
insb
shrb
fs
jl
cmp
push
test
push
rorl
loopne
clc
pop
inc
in
adc
fwait
adc
push
fsubl
rcl
push
mov
xchg
cmp
jl
daa
sbb
sete
and
jbe
ss
mov
adc
mov
mov
movsb
push
jnp
scas
and
clc
adcb
jle
xor
imul
push
adc
cs
cmp
dec
adc
cltd
pushf
inc
cs
or
jo,pt
jb
cmp
repz
sbb
lods
pop
test
sbbl
sub
jo
sahf
fcompl
movsl
and
and
xor
sbbb
mov
jnp
push
sbb
jo
test
mov
push
cmp
dec
mov
adc
cs
pop
sub
dec
mov
jge
cmp
imul
xor
mov
xor
push
mov
iret
test
outsb
mov
out
int
aam
add
stos
ja
ljmp
shll
push
jnp
push
mov
lea
sub
lahf
test
clc
fucom
in
jg
sar
mov
jnp
xchg
in
xor
movq
and
jnp
repz
ror
aas
sub
xor
add
or
mov
push
lock
xchg
cwtl
fimuls
or
mov
fs
sbb
adc
push
jo
adc
cmpsb
test
pop
mov
ds
dec
sbb
andb
jae
aas
out
sbb
jno
cmp
xchg
xchg
dec
call
xchg
shr
pushf
pop
stc
pop
mov
push
add
add
xchg
jns
cmovs
mov
inc
sbbl
stos
sbb
push
loopne
mov
incb
iret
cmc
imul
cltd
sbb
loope
imulb
leave
insb
je
push
je
insl
cmp
pop
jb
ret
mov
inc
xchg
mov
inc
xchg
lock
and
hlt
mov
mov
dec
mov
not
mov
leave
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
jl
xchg
in
scas
test
inc
jnp
cli
mov
sbb
fstps
sti
sub
hlt
in
push
mov
mov
jle
cld
mov
or
pop
pop
mov
std
mov
lock
push
cmpsl
lock
insl
lahf
lahf
and
jmp
cmp
push
pop
and
inc
cltd
lret
sbbb
inc
inc
inc
imull
sar
in
pop
and
dec
sbb
push
lds
loope
mov
stos
mov
aas
call
mul
push
adc
inc
jns
dec
int
insl
xchg
cmp
push
lcall
out
pop
popf
push
add
pop
and
cmp
dec
jl
nop
insl
rcl
movsl
mov
or
out
pop
aas
in
inc
sub
lds
out
adc
sbb
xchg
push
cmpsl
in
lret
js
mov
push
cwtl
or
dec
je
test
lods
xor
xchg
sub
sahf
add
add
notl
adc
aad
cmpsb
or
mov
add
out
sub
jl
repz
daa
pop
sbb
movsl
fdivrs
pushf
pop
mov
das
mov
cwtl
sti
loopne
mov
adc
mov
gs
cmp
clc
xchg
mov
xchg
stos
andb
fidivs
lret
enter
mov
aas
sub
ljmp
mov
push
aas
adc
mov
adc
mov
imull
pop
shrl
hlt
idivb
cmpl
stos
jmp
pusha
mov
xchg
dec
fadds
je
jnp
xchg
dec
fistpl
bound
ljmp
jae
xchg
mov
sub
mov
in
inc
fimuls
cmp
test
push
movsl
sbb
out
outsb
mov
in
jle
xchg
push
movsl
inc
icebp
adc
call
mov
enter
xchg
jecxz
aas
sub
adc
push
mov
sar
cmp
inc
aad
push
or
xchg
jmp
aaa
das
jp
int
test
fidivl
dec
popa
arpl
insb
push
call
insl
cs
in
cli
mov
jle
cmc
scas
out
addr16
pop
rol
push
movsl
jle
mov
and
pop
test
out
cmpsl
fwait
xor
loope
cld
iret
out
push
andb
xor
add
and
outsb
rclb
inc
inc
add
pop
cld
movl
orl
mov
sbb
mov
stc
xchg
add
jp
push
sub
fistl
ljmp
dec
push
rcrb
sub
push
sar
xor
fbstp
enter
or
fbstp
or
lods
pop
dec
cmp
movsb
pop
or
pop
cmp
decb
rcrb
or
cmp
lock
push
cltd
and
std
cs
mov
roll
push
inc
inc
stc
mov
dec
xor
pop
pop
mov
stos
in
test
adcb
mov
rolb
mov
adc
dec
mov
rolb
test
push
cmp
push
and
mov
cli
in
sub
mov
repz
inc
xor
insl
xchg
pop
enter
mov
test
popf
jle
lds
lret
mov
inc
mov
push
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
loope
rorl
sbb
fs
imul
xchg
ret
cmp
jae
insb
movsb
inc
mov
sahf
stc
mov
inc
lret
cmc
xor
enter
aad
shlb
or
cmp
lea
data16
imul
xchg
stos
push
les
out
cmpsb
ret
cld
cmpsb
arpl
pusha
jl
cmp
cmpsl
repz
add
cmpsb
in
jne
clc
ds
fisttpl
scas
mov
adc
cmpsl
int3
das
mov
jl
in
inc
inc
sbb
fs
daa
xor
int
scas
lret
hlt
call
push
sub
pop
iret
and
or
mov
jo
sub
shr
mov
mov
sub
pop
std
test
into
scas
xor
jbe
cmpb
and
and
mov
es
je
cmpsb
sarb
movsl
mov
sbb
xor
lret
nop
fisubrl
lret
mov
dec
jg
loope
fcomp
pushf
sub
imul
ljmp
stos
push
mov
mov
scas
inc
sub
cmp
mov
sub
out
fimuls
data16
test
scas
iret
js
xor
fsubp
push
daa
or
scas
xchg
lods
out
outsl
enter
mov
int
and
out
pushf
vmovhps
loopne
xor
inc
xchg
testb
filds
mov
lods
jae
sub
dec
push
data16
adc
arpl
adc
pop
or
cwtl
fimull
sbb
push
xchg
lcall
dec
cld
test
sti
subl
jnp
imul
mov
shll
xlat
sub
mov
leave
fadds
xchg
jmp
int
jge
add
das
xchg
test
xchg
imul
daa
lahf
cmp
dec
mov
mov
aas
lcall
lds
lahf
xchg
xchg
fbstp
inc
pop
xchg
push
pushl
data16
leave
sub
nop
jo
adcb
sbb
sbb
sub
lods
popa
sarl
imul
scas
imul
adc
and
stos
mov
hlt
or
mov
mov
xor
dec
jmp
and
adc
xchg
sbb
sub
das
pop
mov
rorl
jp
stc
add
dec
ret
aaa
xor
xor
lock
pop
in
mov
movsb
mov
mov
inc
xchg
daa
jl
push
pop
push
pop
loop
mov
and
decl
push
ja
mov
in
or
xchg
xchg
push
push
repnz
inc
fisubs
inc
loopne
add
ja
cmc
mov
mov
add
lods
movsl
sub
movsl
cs
addl
mov
push
mov
mov
cmpsb
sub
dec
push
dec
pop
lds
pop
fwait
sub
in
jg
push
cltd
popa
fwait
pop
imull
lea
jp,pn
cs
shll
xchg
sbb
xor
mov
push
and
fsubp
mov
jmp
inc
ljmp
xchg
xchg
ss
test
leave
out
pop
cmp
mov
icebp
pop
pushf
push
mov
or
xlat
cli
mov
cmp
adc
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
gs
stos
adc
sbb
cmp
sbb
cmp
pusha
mov
cmp
push
pop
in
aam
mov
pushf
xor
movsb
xor
divb
mov
or
fdivl
dec
movsl
adc
ja
sub
iret
adc
xor
mov
sub
into
mov
out
mov
adc
pop
sub
popf
xor
adc
sarb
dec
inc
cmp
jnp
jbe
cmc
mov
mov
js
mov
xchg
fsub
or
inc
cmc
push
test
inc
push
popa
sbb
adc
or
imul
fidivrs
jl
scas
sbb
sbb
fsub
inc
sahf
into
lahf
or
sub
xor
ljmp
sbb
stos
imull
mov
jb
ret
mov
adc
fidivs
mov
cmp
enter
adc
scas
ljmp
push
das
cmp
repz
loopne
shll
cwtl
scas
or
push
adc
inc
hlt
inc
movsb
fadds
sub
add
mov
cwtl
cmp
xor
call
cld
pusha
sti
inc
dec
in
push
lret
or
vandpd
mov
daa
adc
in
dec
lods
outsb
pop
fisttpll
inc
sbb
pusha
xchg
int
mov
sub
adc
push
pop
out
gs
cmpsb
sbb
insl
pop
xchg
mov
cmpsb
popw
imul
push
test
repz
mov
mov
shr
push
stos
lds
shl
mov
jno
jmp
inc
jle
das
push
nop
dec
add
inc
int3
jb
fcoml
push
daa
inc
sahf
xchg
js
movsl
mov
ret
aaa
adc
sbb
cmpsb
fmull
cmpsl
inc
cmpsb
inc
sahf
sub
push
push
push
sbbl
xor
jb
ljmp
adc
sbb
jp
pushl
out
mov
dec
or
arpl
fildl
push
xchg
mov
shll
push
inc
clc
js
mov
xchg
push
add
mov
mov
cmp
imul
sbb
shll
daa
loope
xchg
cltd
mov
cmp
pusha
sub
repnz
pop
movsb
cmpsl
mov
jno
pushf
sbb
inc
sbb
sbb
dec
lock
into
lods
ljmp
inc
fnstcw
lds
inc
loop
jbe
lahf
jb
xchg
ret
mov
shrb
in
adc
jno
bnd
pusha
mov
cmp
dec
and
and
pop
dec
movsb
or
xor
arpl
jo
mov
inc
push
xor
outsl
test
dec
btc
insl
push
mov
subb
adc
push
xor
cld
es
mov
lahf
bound
testl
or
stos
jae
jge
add
imul
adc
pop
pop
rol
add
test
and
mov
xor
adcl
sub
pop
flds
or
push
inc
sub
xor
int
sbb
xchg
push
leave
popa
mov
or
jns
sub
movb
clc
inc
pop
hlt
mov
add
shl
pushf
sub
push
subl
pusha
sub
xchg
jl
sahf
rolb
pop
mov
orl
mov
call
mov
cmpsl
mov
test
sbb
pop
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
negl
sbb
data16
sub
lods
adc
test
das
sbb
mov
mov
fldl
or
mov
sub
scas
rcrb
testl
xchg
in
sbb
rorb
xchg
lcall
lcall
sub
int
test
hlt
repnz
pusha
sbb
adc
xchg
cmp
negl
sbb
int3
data16
mov
into
rcrb
pop
cmp
pop
mov
xchg
push
or
and
test
mov
fcoml
jae
mov
insb
jecxz
out
js
xchg
add
roll
lea
fiadds
mov
dec
ja
stos
leave
ret
or
push
jb
lea
add
push
add
inc
adc
xchg
or
sub
and
adcl
inc
cs
sub
cmpsb
inc
mov
adc
stos
je
cmp
icebp
inc
test
in
jno
mov
call
xor
les
xchg
ljmp
hlt
out
xchg
mov
xchg
int
dec
cmpsb
data16
xchg
sbb
imul
subb
xlat
jno
imul
sub
aam
addr16
add
leave
mov
inc
pop
xor
mov
andb
lods
or
mov
cmp
cmc
xchg
or
stos
inc
cli
adc
pop
cmc
ror
icebp
shrb
xchg
pop
das
push
fcoms
mov
insb
icebp
clc
mov
jae
out
pusha
dec
test
shll
mov
push
mov
in
testl
dec
cmp
lods
stc
adc
lods
cmp
fidivrl
jle
xchg
lock
pop
push
insl
jnp
cmp
mov
call
int3
push
push
roll
fcmovu
or
shrl
jge
negl
call
sbb
xchg
xor
aaa
adc
mov
lds
pop
inc
das
mov
sub
inc
inc
arpl
mov
dec
daa
stc
repz
xchg
cmpl
enter
or
pop
jge
aam
mov
sub
ljmp
push
or
cwtl
lret
pop
ret
popa
push
lods
mov
pop
into
in
or
mov
jae
ret
mov
daa
add
cmp
roll
movsb
or
xor
jg
jae
imul
push
rcrb
xchg
cmp
test
add
lea
les
out
xor
test
fcompl
clc
cmpsb
mov
cmp
sub
in
lcall
sbb
test
or
dec
mov
and
add
hlt
xlat
icebp
in
leave
cmc
push
es
or
decl
mov
ss
mov
movsl
xlat
dec
jne
cmp
pop
lcall
push
inc
fisubrl
in
in
dec
adc
add
pushf
mov
test
xchg
push
shl
test
xchg
inc
sub
inc
aaa
out
ja
imul
mov
daa
cmp
mov
je
js
pop
subl
fld
pmulhuw
or
jp
loope
sub
cmp
out
adc
lret
fxch
dec
mov
imul
aas
movsb
jmp
sbb
and
ret
jb
or
push
pop
aad
scas
cmp
ljmp
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
add
sbb
stos
adc
sbb
stos
movsl
das
pushl
ret
dec
mov
sub
pop
sub
push
add
sub
stos
and
inc
xor
loope
or
or
jns
pop
mov
fmull
pop
push
adc
inc
sub
popa
das
lahf
inc
dec
jno
ja
sub
dec
ficomps
mov
xor
adc
push
cmc
mov
dec
sub
xor
or
repz
cmp
mov
into
mov
add
clc
dec
dec
js
insb
fucomi
pop
lahf
xchg
xor
out
dec
push
dec
scas
loope
ret
enter
cli
sbb
jge
jmp
into
sub
jp
les
jae
adc
in
dec
mov
mov
shll
mov
lret
inc
push
xchg
sub
and
or
stos
mov
lret
push
xchg
cmp
lds
add
xchg
loop
mov
aas
xorl
repnz
inc
insl
pop
aam
push
jnp
in
bound
add
sub
ja
js
push
jl
push
cld
lcall
and
or
ds
out
cs
push
ja
and
femms
add
adc
lret
mov
addr16
mov
jnp
add
data16
inc
es
xor
bound
and
test
jg
sub
mov
push
pop
scas
push
lcall
and
lret
loop
je
sub
adc
sbb
repz
jp
add
imul
adcl
loop
out
jnp
aad
adc
mov
mov
nop
sub
jle
add
out
jp
insb
jb
mov
mov
or
or
js
push
cmc
movl
jg
vpshab
out
lahf
mov
mov
loope
sbb
pop
in
mov
sub
mov
repz
jb
andb
daa
and
test
mov
push
jo
or
fwait
mov
fwait
cltd
cli
xor
les
inc
sbb
sbb
push
xor
aad
dec
in
fstpl
int3
sub
out
mov
call
nopl
outsb
jno
mov
clc
pop
jmp
jge
loope
mov
aam
outsb
pop
fists
jae
cmp
jg
jmp
int
push
mov
clc
inc
jmp
pmulhw
aam
fs
repnz
aam
stos
pop
loop
or
xor
mov
push
fstps
mov
or
clc
cltd
std
inc
repz
and
std
fbld
sbb
dec
repz
iret
lret
pop
cmp
push
sbb
movsl
lods
std
mov
into
cld
mov
inc
xchg
arpl
ja
arpl
int3
jb
rorb
das
mov
dec
clc
and
andb
pop
inc
dec
shl
push
test
inc
and
or
mov
jno
mov
xchg
mov
jl
mov
xlat
bound
mov
inc
push
in
repnz
jb
push
xor
imul
lret
xor
mov
ficoms
sbb
adc
add
or
and
push
jle
xlat
inc
repnz
xor
fmuls
test
dec
xchg
addr16
mov
lcall
push
or
and
pop
fucomi
into
aas
xor
jecxz
inc
dec
sub
dec
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
or
sub
sbb
adc
sbb
movsl
int3
ss
add
add
sub
movsb
xchg
dec
rcr
shrb
mov
enter
arpl
cmp
jecxz
xchg
xchg
in
add
xchg
shlb
pop
jp
and
roll
js
xor
leave
xchg
sbb
lods
mov
in
cmp
sahf
ljmp
fsubr
ljmp
shll
sub
xchg
jmp
into
out
out
mov
mov
adc
rorl
mov
std
dec
fiadds
into
les
in
orps
cwtl
pop
cmp
lcall
aam
xorl
sar
inc
fistpl
out
mov
add
pop
push
jmp
lcall
sti
fisttpll
push
out
mull
icebp
andb
jmp
ficomps
adc
sarb
xchg
xor
jmp
xchg
ret
dec
inc
adc
or
cmc
xchg
cwtl
xor
jnp
push
decl
leave
push
cli
inc
fimuls
sarb
sbb
cmp
push
mov
adc
fwait
inc
or
dec
fsubrl
test
adc
std
popf
gs
loop
and
inc
fistps
jns
mov
sbb
loopne
mov
pop
test
adc
cli
jmp
jne
loop
hlt
das
and
push
fistpll
sti
xor
loopne
rorl
mov
xchg
mov
inc
push
sti
repz
pop
push
add
fwait
or
mov
or
push
fxch
incb
movb
bound
out
xor
jmp
fidivrl
popa
daa
mov
insl
es
movsl
mov
dec
push
sbb
xor
and
int
xor
std
push
jns
add
push
cli
daa
cmp
lock
xchg
add
pop
ljmp
jg
cmpb
jne
test
test
cmpsb
mov
and
nop
xchg
orl
adc
mov
sbb
call
adc
jmp
mov
ljmp
inc
xor
scas
insl
jg
fidivl
jg
test
dec
mov
xchg
and
idiv
sbb
xchg
rcrl
mov
int
out
scas
or
inc
daa
xor
fsubrp
xchg
jecxz
int3
inc
fsubrs
out
cmp
ror
in
call
repz
bound
test
daa
fwait
sar
ret
rcl
pusha
sub
fldcw
fidivrs
aam
aam
add
cwtl
and
fs
test
sub
enter
adc
sti
fs
roll
shll
test
mov
dec
sbb
arpl
loope
cmp
sbb
pop
push
lods
mov
mov
pop
js
notl
inc
cmp
lcall
xor
or
jbe
lods
push
xchg
es
mov
loop
mov
stc
call
sbbl
dec
inc
scas
mov
push
pop
xchg
mov
hlt
jmp
and
and
lret
add
sub
push
and
cmp
into
push
std
adc
out
jecxz
or
mov
outsb
rclb
pop
jp
rorb
push
inc
pusha
mov
sub
add
mov
mov
dec
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
out
jo
and
sbb
adc
sbb
icebp
xor
repz
or
add
mov
insb
jno
sbb
stos
popf
ja
and
test
andl
lcall
and
sub
mov
repnz
mov
imul
sbb
out
popf
clc
in
ljmp
ficomps
cmc
insl
xchg
cmpsb
and
xchg
adc
stos
dec
mov
jae
ss
les
xor
arpl
repnz
rorb
in
iret
push
nop
adc
push
les
mov
mov
cltd
adc
mov
pop
cmpsl
mov
sti
xchg
cmp
mov
xor
mov
insb
cmp
cmpsb
dec
add
jnp
dec
lods
ljmp
jl
aam
cld
dec
mov
aad
inc
stos
daa
js
sahf
inc
dec
out
jmp
or
fsubr
mov
ror
or
aam
jns
mov
iret
adc
sbb
dec
sub
mov
mov
pop
and
jl
xor
icebp
push
stos
push
dec
popf
mov
aas
inc
mov
repz
adc
pop
pop
lds
sar
stos
imul
cmpsl
mov
shl
mov
sahf
push
mov
add
sub
sbb
add
pop
mov
addr16
andl
cmpsl
push
xor
loope
or
rolb
leave
pop
push
push
test
testb
cmc
push
out
mov
pusha
and
cmpsl
pushf
cli
cmp
les
pop
pop
cld
out
sub
xlat
fists
int
test
add
stos
xchg
or
inc
add
ljmp
stos
andb
push
call
pushf
mov
outsb
cmp
sbb
inc
aaa
dec
sbb
push
fcompl
xchg
mov
scas
mov
mov
mov
data16
jb
mov
outsb
addr16
mov
xor
hlt
out
jecxz
mov
dec
or
fs
adc
mov
mov
inc
sbb
lods
mov
into
out
aaa
xchg
pop
mov
lods
or
insw
xor
mov
enter
sbb
js
and
popl
cltd
sbb
imul
out
nop
scas
mov
mov
push
cld
sbb
and
lea
sbbb
jo
xchg
xor
aam
mov
and
orl
aas
inc
dec
ficoms
pushf
stos
push
jbe
inc
fsubl
nop
or
jge
rcrb
movsl
imul
rolb
loop
inc
ja
test
mov
inc
sahf
fdivrs
push
inc
jmp
lods
jo
mov
dec
mov
das
pop
lods
hlt
xchg
mov
call
cld
outsl
pushf
dec
dec
dec
dec
hlt
jns
test
loop
xor
lods
xor
les
push
mov
movsl
xlat
sbb
lcall
push
dec
shlb
adcl
mov
pop
pop
and
ficoml
out
ret
mov
push
shl
pop
call
push
dec
and
mov
popa
push
add
inc
or
xchg
jae
push
jo
cs
adc
in
ret
scas
ljmp
imul
or
cltd
xchg
movsl
dec
int
int
add
out
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
xchg
xchg
mov
rclb
sbb
inc
loop
fadds
xor
stos
sbbl
iret
jecxz
mov
dec
mov
jno
xchg
xor
push
shrb
mov
xchg
dec
ret
add
lods
test
adc
std
aas
dec
push
loopne
movsb
movsl
mov
and
movsl
and
or
jo
cmp
push
jno
xlat
idiv
divl
jecxz
push
int3
mov
mov
sbb
ja
insl
jl
fists
shll
sbb
gs
xchg
dec
pop
cmp
fsts
rcr
dec
aaa
mov
or
int3
or
in
fs
pushl
sbb
push
pop
scas
mov
lcall
mov
adc
push
pop
mov
in
cs
sub
pop
push
stos
push
add
or
xchg
or
mov
mov
mov
ss
cmp
pushf
xor
out
mov
loopne
movsl
call
inc
xchg
sub
fsubrl
mov
into
std
sbb
es
xchg
movsb
js
xchg
jg
jl
inc
sub
fdivs
gs
jb
push
push
addb
lods
ss
rcrl
jne
mov
pop
pop
leave
mov
arpl
pop
int
inc
push
pop
xor
mov
stos
int3
dec
shll
add
xor
jb
repz
es
imul
rolb
js
icebp
sbb
xor
add
cltd
mov
cwtl
inc
jbe
sub
push
mov
sub
js
jae
popf
dec
popa
inc
push
pop
dec
inc
or
insb
cli
sbb
notl
jge
jmp
and
out
xchg
xchg
cmpsb
mov
lods
adc
jns
push
fstpl
int3
mov
clc
flds
mov
ds
movsb
lods
imul
sahf
daa
and
add
lea
clc
mov
sbb
pop
sub
sub
dec
fisttps
push
aad
ds
loopne
push
cmc
jecxz
sbb
xor
andb
out
cmp
sti
hlt
pushf
sbb
imul
jno
enter
movb
clc
jno
aaa
pop
adc
into
das
imul
pop
mov
cld
xor
rcl
mov
or
adc
das
imul
pop
xchg
loop
mov
pop
xor
lcall
or
push
pop
add
push
outsl
int3
xchg
xchg
mov
mov
rcrl
popa
jmp
xchg
pop
cmp
mov
jne
jmp
inc
sub
lds
nop
inc
pushf
sahf
xor
je
sahf
das
or
stos
xchg
aad
inc
out
cmp
jmp
arpl
fistpl
sbb
cli
xchg
int3
cmp
xor
sub
pusha
dec
pusha
cs
and
adc
jle
xchg
xchg
push
addl
aaa
pusha
insl
sub
xor
sbb
imul
inc
mov
pop
int3
sub
cmp
dec
in
loopne
pushf
loopne
sub
stc
int
pop
mov
decl
jno
push
js,pt
add
lock
and
loope
rolb
fidivrl
aad
xor
pop
inc
iret
cld
xor
dec
add
repnz
or
and
insl
out
ret
mov
dec
or
enter
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
jae
mov
xchg
adc
sbb
adc
js
inc
dec
stc
je
xor
lcall
adc
mov
aad
les
jne
add
leave
xchg
or
and
pusha
mov
das
push
cmp
fists
gs
inc
rclb
lds
arpl
call
pop
fnstenv
dec
dec
xor
inc
cwtl
rcrl
scas
lcallw
shl
andb
js
lods
add
pushf
sti
loopne
out
pushf
addl
sub
jne
xchg
imul
cmpb
or
inc
xchg
call
sub
cmp
sahf
jbe
cs
ljmp
push
sub
and
mov
mulb
vmread
push
jne
loope
jmp
cmp
ja
ret
pushf
xchg
cltd
int3
inc
jl
mov
mov
inc
pop
cmp
sti
add
adc
push
adc
imul
int3
std
clc
fnstsw
sbb
imul
mov
xchg
push
insb
fs
pop
xlat
mov
rcrb
jmp
mov
div
or
pop
or
vpcomub
nop
subl
xchg
xlat
ja
dec
push
repz
test
es
and
bound
push
dec
inc
add
pop
int3
pushf
add
ret
in
subb
sub
pop
ret
push
bound
frstor
dec
mov
into
out
sbb
rorb
call
fwait
and
hlt
lds
fcmove
aaa
std
sub
sbb
ror
cwtl
movsl
insb
adc
cli
enter
outsl
imul
mov
jmp
into
repnz
jmp
cmp
jmp
lods
sub
push
imul
aas
aam
jmp
aad
mov
loope
sub
mov
int
xchg
mov
outsl
dec
sahf
mov
data16
xor
push
sbb
add
xor
jl
test
popf
xchg
mov
es
pop
jae
xor
add
aaa
xchg
mov
aaa
mov
stos
es
out
notb
add
or
out
arpl
lea
icebp
sub
xor
inc
imul
inc
mov
cmp
push
test
sub
mov
rcll
ja
lea
sbb
js
hlt
cmp
addr16
jnp
lds
outsb
push
add
inc
jae
int3
ds
and
sahf
jecxz
sti
push
mov
mov
stc
fcompl
sub
cmpsl
xchg
or
or
pop
dec
sarb
mov
xchg
sbb
cmp
and
clc
sub
xor
orl
mov
mov
gs
cli
js
leave
lods
push
or
push
add
icebp
das
jne
les
daa
std
adc
cli
or
pop
push
jmp
xlat
mov
ljmp
insb
cmpsl
adc
lret
loope
cltd
adc
mov
js
fistl
inc
mov
cmpsb
les
ja
iret
add
or
lcall
in
push
pop
hlt
xchg
jb
jl
icebp
adc
rcll
iret
sti
sbb
lock
cmpsb
push
mov
in
test
push
jae
lcall
mov
mov
in
mov
push
mov
lock
sub
subl
js
cmp
fwait
imul
loope
sbb
aam
mov
insl
xchg
dec
pop
and
dec
xchg
adc
aas
mov
imul
ffreep
cwtl
jb
add
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
and
mov
push
push
sbb
aas
scas
xor
adcl
pop
jb
cmp
fistl
pop
repz
add
lea
lock
add
pop
fmull
sahf
pop
inc
inc
add
lds
std
fsubr
mov
pop
insl
push
imul
cmpsb
ret
test
push
pop
lods
arpl
xchg
fs
add
dec
pop
int
pushl
ds
jbe
rcl
inc
mov
jbe
mov
jl
ret
cltd
add
js
jl
fisttpll
and
add
or
packuswb
and
lcall
sub
cltd
push
dec
cmpsl
push
xor
fadds
lea
data16
and
push
ss
stos
and
mov
ljmp
xor
jmp
push
mov
xchg
xchg
lock
inc
orl
iret
sub
xchg
adc
inc
xor
testb
jle
mov
cli
arpl
cmpb
push
lods
dec
aad
mov
ljmp
inc
inc
into
xchg
mov
lock
sub
daa
jns
mov
repz
xchg
imul
mov
ficoml
inc
jnp
cld
imul
out
mov
mov
mov
clc
push
fcomps
add
inc
sbb
and
fimull
lock
in
push
xor
cmpsw
lock
mov
adc
pop
aas
mov
rolb
mov
es
fdivl
es
xchg
pop
jns
loop
mov
mov
arpl
adc
lds
cmc
push
push
dec
les
cmp
mov
setle
cmp
add
jbe
inc
punpckhdq
lods
lahf
ljmp
mov
pop
popf
push
mov
movsl
lea
lahf
loope
scas
sbb
dec
aam
iret
test
insb
sub
aaa
insl
or
loop
scas
cmp
ret
sub
icebp
cmp
sub
push
mov
movb
sub
sub
mov
hlt
out
outsb
scas
decl
lock
dec
adc
xchg
mov
lods
lods
jg
adc
popa
cmp
test
mov
or
fldcw
push
and
call
cld
xchg
pop
cli
call
je
popl
imul
lahf
mov
ret
inc
mov
add
jnp
test
xchg
xor
or
fsubs
mov
in
dec
int
and
adc
cmp
xlat
pop
cmp
xchg
popf
jmp
nop
push
sub
or
rcrl
lods
loope
jecxz
add
or
out
sub
lahf
bound
je
mov
fdivrp
dec
lcall
jno
sub
lds
pop
lret
inc
lock
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
pop
inc
push
or
sbb
call
lds
std
fisubrl
lret
lcall
xchg
inc
pop
insb
shlb
mov
xchg
outsl
clc
fisubs
push
imul
neg
mov
icebp
cmp
icebp
cmp
mov
sar
cmp
adc
and
sbb
adc
mov
fsubp
mov
es
jl
hlt
in
xor
pusha
ret
xchg
push
clc
mov
mov
pop
ret
adc
shrl
mov
jb
mov
add
mov
push
lcall
ja
or
lret
xor
lods
icebp
je
add
add
and
jecxz
popa
mov
push
dec
sub
jl
loopne
pop
push
push
leave
mov
jmp
sti
dec
jnp
gs
icebp
in
popf
and
xchg
sub
mov
test
divl
ficoms
add
mov
dec
es
jmp
adcb
rcrb
adc
imul
dec
adc
cli
pop
fs
sti
pop
jnp
roll
aad
in
cld
add
inc
imul
or
gs
sub
push
iret
int3
daa
xchg
out
lock
jbe
mov
lods
jo
fucomp
xor
jle
cmp
in
push
mov
ret
pushf
int
das
aam
fistps
fwait
mov
sub
repz
adc
xchg
fdivr
push
out
js
js
pop
dec
sub
js
stc
cli
imul
das
out
std
stc
adc
jg
stc
xchg
adc
in
and
jmp
xor
js
dec
fldenv
or
sub
mov
sbb
mov
or
movl
aaa
adc
cs
xchg
mov
scas
lea
mov
and
shlb
out
arpl
jae
insl
cmp
dec
fists
xchg
push
cmpsl
push
fisttpl
jmp
lea
loope
dec
pushf
mov
and
scas
jg
scas
daa
dec
inc
sbb
xchg
aam
add
cmp
dec
sbb
push
cmp
sbb
xchg
jecxz
sub
sbb
jge
xchg
mov
mov
addr16
add
xchg
rolb
cmc
ret
pop
inc
jg
xor
sub
out
ret
in
adc
sti
mov
fildll
test
mov
jmp
xchg
lahf
imul
xor
lcall
and
int3
sbb
mov
jne
xor
nop
xchg
push
cmp
or
cld
in
fnstcw
inc
and
icebp
aad
cmp
mov
adc
cmpsl
sbb
cmp
mov
or
aam
dec
cmpsl
les
icebp
cld
mov
mov
dec
fcmovnu
aas
xchg
mov
sahf
ret
and
xchg
bound
aas
or
sub
xor
ror
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
scas
dec
jmp
sbb
or
sbb
jmp
pop
and
adc
inc
xor
cmp
lock
mov
cmpsl
push
shlb
bound
adc
cli
mov
shll
add
xchg
pop
test
jl
and
cmp
mov
out
ja
fnstsw
sub
test
icebp
cmc
mov
adc
inc
sub
push
arpl
pop
in
xchg
std
push
push
push
fwait
inc
addr16
jno
popa
jecxz,pt
icebp
dec
bound
push
sub
in
cmp
push
int
push
gs
xchg
and
sub
or
push
cmpsb
adc
xchg
movl
xor
lods
and
pop
jno
icebp
mov
mov
lds
pop
xor
cmpsb
mov
push
xor
or
and
mov
jge
mov
popf
pop
jecxz
fildl
mov
ret
int3
arpl
popf
test
cmp
dec
pop
test
test
pop
sbb
sbb
push
int3
xlat
je
lret
pop
or
push
fsqrt
mov
shrl
xchg
jbe
cmp
push
pop
push
or
imull
and
imul
cmc
out
jg
leave
sub
xlat
js
jmp
jne
aam
cmp
and
cs
mov
jne
cltd
push
lods
fs
dec
jnp
shlb
sbb
push
mov
sub
pop
lcall
inc
lods
loopne
sub
incb
xor
add
and
mov
call
ds
jbe
or
aam
push
rclb
ljmp
inc
add
mov
arpl
cmp
jg
mov
lcall
push
and
rorb
ret
jecxz
xor
sbb
pusha
adc
test
jmp
mov
and
cltd
mov
jbe
add
push
pop
inc
push
cmpsl
cmpb
leave
inc
xor
xchg
loopne
jle
and
mov
cltd
push
cmp
adc
adc
xor
sub
sti
mov
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
stos
ja
push
sbb
aaa
xchg
inc
cmpsl
mov
ficompl
inc
and
add
mov
mov
scas
mov
pop
insb
popf
mov
add
inc
mov
out
idivb
and
jns
es
push
in
sahf
xor
rorb
sub
in
fcoms
xor
add
mov
jnp
mov
cli
loope
lea
mov
mov
xor
fwait
nop
popa
mov
stc
lcall
xchg
xchg
mul
push
pop
js
mov
cmp
jg
push
std
pop
xor
jns
sti
imul
inc
outsb
jmp
mov
push
or
psubusb
shlb
js
sbb
cmp
xor
in
cmp
clc
popa
enter
and
push
fucomi
ja
cwtl
push
ss
and
cmp
and
sbb
mov
cmpsb
clc
mov
inc
dec
mov
mov
inc
mov
mov
mov
dec
outsl
test
mov
mov
cmp
jg
dec
sub
mov
xor
roll
dec
push
xlat
add
cmp
mov
inc
ja
or
and
movsl
inc
ljmp
push
lret
mov
mov
or
les
test
movb
je,pn
sbb
push
xchg
jb
mov
or
mov
push
scas
cmc
fbld
mov
sbb
xchg
ret
adc
mov
ficoms
fmull
fdivrp
xor
sbb
xchg
push
cmp
dec
jb
sub
jecxz
mov
mov
mov
xchg
cmc
inc
jmp
push
lods
jnp
mov
sub
mov
pop
push
lods
addl
sbb
and
arpl
rcll
xchg
clc
cmpsb
fsub
or
inc
jbe
fmul
cmp
test
jle
adc
cmpsb
mov
cmp
lock
lods
inc
aad
jno
inc
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
lods
mov
stos
pop
mov
xchg
stc
push
fildl
repnz
adc
mov
and
gs
adc
push
aad
dec
rcll
cmp
push
aad
aad
mov
mov
iret
sbb
dec
mov
sti
mov
mov
pop
jnp
std
mov
cwtl
xor
push
jp
cld
mov
ljmp
and
int3
les
sbb
mov
xchg
mov
mov
ja
adc
fldenv
xorl
and
cld
mov
dec
cmc
movsl
scas
xchg
xchg
cmp
sub
movl
xor
inc
mov
ficoms
int3
pop
movsl
and
sbb
sahf
mov
jns
jecxz
cli
cmpsb
jnp
movsb
bound
pop
sbbb
mov
and
lret
mov
cmp
rorl
push
call
sub
out
pop
mov
stos
lds
outsb
add
adc
cmpsl
adc
adc
jnp
mov
sarl
insb
fistpll
fucomi
std
jbe
inc
xchg
xchg
add
daa
push
outsb
mov
sti
sbb
lret
lods
nop
js
sahf
lods
jecxz
hlt
xchg
jl
push
ljmp
dec
xchg
pop
dec
push
and
push
jno
and
cmp
jae
adc
pop
cs
sub
cmpsb
mov
movl
fwait
popa
scas
push
push
and
sub
mov
and
gs
or
xchg
enter
out
icebp
scas
pop
mov
add
add
outsb
adc
shl
xchg
sbb
xchg
outsb
xor
inc
fsubl
sbb
cmp
xchg
dec
aad
sti
push
pop
fldl
aad
xchg
mov
lcall
jae
or
ja
in
imul
sbb
cmpsl
xchg
cmpsl
jg
movsb
ss
inc
inc
mov
paddusb
jns
jnp
push
xchg
push
jbe
cmp
inc
mov
js
loope
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
sbb
mov
hlt
push
sbb
adc
sbb
stos
xor
adc
leave
xor
pushf
scas
notl
outsb
sbb
fimull
jns
loope
mov
test
mov
inc
scas
mov
movsb
out
xchg
add
add
addl
sub
adc
push
daa
jmp
mov
lcall
jl
ja
sbb
xchg
jnp
lcall
add
sub
sbbb
sub
pop
in
mov
mov
ja
jnp
imul
or
jmp
or
jbe
shrl
xchg
adc
jo
hlt
arpl
push
cmp
push
shll
ss
xorl
jns
sbb
push
jne
xor
aam
dec
jae
int
push
inc
rorb
stos
cwtl
addb
cltd
aas
repnz
cmp
xor
in
ljmp
ja
ss
mov
mov
out
push
ret
mov
mov
lret
int3
inc
jle
push
cmp
cltd
das
cwtl
into
stos
mov
lret
addl
stc
fbld
in
push
cmp
mov
call
mov
adc
add
sub
daa
loopne
xor
dec
mov
stos
in
cmp
xor
dec
pop
mov
lods
mov
mov
mov
push
mov
jno
mov
aaa
jae
xor
or
cwtl
fwait
inc
push
fs
push
in
jle
cwtl
insb
cmpsb
push
fwait
and
or
pushw
in
pop
std
sti
sub
jge
loopne
iret
mov
stos
adc
inc
jb
sbb
jbe
adc
dec
and
movsb
fwait
push
nop
mov
dec
fwait
stos
int
bound
bound
mov
stc
jl
aam
xchg
pop
out
out
aad
mov
inc
xchg
movsl
and
dec
pop
or
sub
mov
scas
pop
outsb
mov
add
jb
push
lods
arpl
dec
lds
xor
dec
mov
push
inc
jne
mov
pop
rorl
cli
or
add
rcr
and
out
repz
push
sbb
popl
lea
out
aam
sub
jns
cmp
pusha
out
sub
mov
popf
jge
scas
xchg
sub
imul
xchg
pop
shl
insb
rcrl
ja
iret
sub
mov
mov
pushl
jmp
daa
adc
ss
and
cmp
xlat
rorl
pop
das
or
sub
ror
repz
and
or
cmpsb
leave
aam
xor
lods
inc
push
andb
and
ljmp
xchg
mov
jl
ljmp
jbe
inc
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
sbb
fimull
scas
xchg
aam
push
imul
jbe
popl
xchg
test
push
fsubrl
jb
sbb
imul
jge
in
mov
lahf
sahf
xor
mov
and
inc
or
ss
jle
pop
pop
insl
and
inc
inc
sti
pop
jb
pop
dec
loopne
push
jb
xlat
push
xchg
or
js
lds
dec
jne
add
xchg
push
out
pop
ljmp
add
jo
ljmp
loope
inc
jb
fwait
imull
mov
lods
pop
sahf
add
mov
mov
sbb
out
or
add
add
aad
mov
push
adc
jns
adc
outsb
roll
adc
jns
out
jnp
sti
insl
xor
fmuls
orl
addr16
sbb
push
pop
cmc
xchg
jecxz
pusha
shll
cmpsl
cmp
cltd
je
add
fsubrp
cs
test
rolb
xor
insl
push
sbb
mov
jno
pop
int3
mov
inc
cmpsl
clc
out
push
jnp
sar
push
call
xor
push
xor
movsb
mov
aam
pop
mov
cli
dec
mov
into
sbb
mov
test
test
hlt
insl
jge
and
clc
cmp
pop
jge
loop
xchg
pop
sub
in
movsl
rep
mov
xchg
xchg
aam
call
jmp
scas
jl
pop
ret
mov
repz
les
pop
xor
aas
xlat
lock
mov
mull
sti
mov
mov
test
or
sub
daa
xchg
imul
data16
aam
sarl
scas
sbb
jl
loop
ficoml
cmp
outsl
out
cs
dec
bound
xchg
xor
cwtl
jbe
repnz
xor
pop
lock
adc
sahf
aam
sarl
mov
fwait
add
adc
insl
pop
jnp
cwtl
mov
icebp
js
push
cld
xorb
mov
mov
rcrl
std
push
ret
addr16
imul
fldenv
pusha
xchg
xor
pop
mov
cli
jmp
addr16
xchg
les
movsl
jns
inc
pusha
dec
and
mov
test
icebp
or
xor
out
sub
test
push
sbb
mov
and
jmp
mov
sbb
pop
fsts
int3
stos
or
cwtl
loope
mov
js
dec
sbb
mov
mov
lahf
pop
pop
jmp
jmp
pop
negb
shrb
rcrb
lods
or
test
and
jle
mov
adc
scas
add
lea
cmp
jbe
mov
xlat
test
mov
pop
pop
or
outsb
ret
pop
int
sbb
bt
pushf
jecxz
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
es
push
mov
mov
mov
cmpsb
out
shll
adc
ficoml
cltd
out
insl
lock
filds
xchg
pop
insb
movsl
in
push
scas
sub
mov
or
int
inc
inc
xchg
lea
lahf
sub
jl
and
cmp
arpl
pop
fmulp
jecxz
sti
jb
movsb
into
mov
lahf
jecxz
push
shlb
mov
and
stos
pop
and
or
test
mov
adc
xor
jbe
scas
jl
clc
push
inc
out
jno
outsl
std
in
lret
lret
fildll
push
mov
ret
loopne
xchg
xor
add
sub
ljmp
dec
insl
or
sti
into
cs
push
clc
push
mov
dec
mov
enter
adcl
xor
fs
in
in
divb
mov
arpl
sub
xchg
xchg
and
bound
xchg
lock
in
outsb
loope
cmp
testb
movsb
fdivrl
clc
cltd
int3
and
jmp
xor
pop
xchg
dec
sub
jge
mov
movsb
dec
dec
addr16
fistl
lret
push
jb
aad
imul
push
dec
out
lahf
jmp
mov
mov
xchg
jne
xchg
sahf
inc
sbb
loop
pushf
mov
add
cmp
mov
or
in
vmovupd
fdivrl
xchg
dec
cwtl
sbb
cmp
push
sub
mov
mov
mov
ljmp
cli
sarb
pop
jbe
cs
sub
push
mov
cmp
aad
stos
sub
stos
iret
daa
or
das
mov
outsl
test
mov
push
pop
enter
ss
sahf
push
xchg
outsl
mov
push
stc
out
aas
cld
out
das
xchg
push
into
test
jnp
xchg
mov
mov
adc
es
sbb
pop
orl
loope
insb
cmc
mov
xchg
cltd
mov
pop
ss
dec
dec
push
xchg
xor
mov
into
hlt
xor
and
in
out
fildl
les
insl
mov
lock
in
mulb
push
mov
scas
xlat
dec
mov
movsb
je
pop
in
push
out
and
push
adc
cmp
cmp
loop
insb
outsb
or
mov
fcoms
xor
andl
imul
cmp
mov
or
push
ds
imul
sub
ds
cmp
aam
aaa
push
mov
xchg
insl
xchg
xchg
push
inc
inc
sub
mov
pop
cltd
mov
int
adc
test
stos
rcrl
add
fs
sub
test
mull
aad
xchg
sub
mov
xor
mov
clc
xchg
in
mov
adc
mov
jp
daa
jl
add
lods
rol
pop
pop
adc
mov
pop
lret
jae
je
out
xchg
rolb
lods
fbld
into
inc
loopne
arpl
adc
data16
push
sub
adc
mov
jno
lods
int
xchg
jle
mov
rcrb
adc
mov
dec
and
xchg
pusha
add
inc
pushf
mov
inc
xor
mov
fldl
adc
mov
add
add
xor
add
add
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
pop
xor
mov
jp
pop
cmp
xor
push
or
jae
repnz
push
cmpb
mov
mov
xchg
orl
fdivp
jnp
sbb
mov
shl
mov
aam
mov
mov
stc
xchg
imul
mov
fcmovbe
cltd
sbb
xchg
fistpl
push
sbb
mov
ja
fnstcw
cli
cmc
shrb
ljmp
mov
adc
mov
scas
jae
mov
jno
mov
sbbl
sti
cltd
jo
mov
push
ret
add
ja
fsubrl
push
sub
jnp
jns
inc
xchg
lods
inc
jbe
icebp
mov
mov
std
movsl
arpl
out
xchg
mov
sub
add
repnz
jmp
aaa
cmpsb
jno
or
jp
mov
call
inc
mov
fdivl
lretw
push
int3
int
test
aaa
push
mov
nop
push
xor
nop
pop
cmp
js
mov
jbe
cmp
repnz
push
aad
shlb
adc
dec
cmp
pop
lock
test
out
mov
xchg
mov
into
fs
push
roll
lds
sbb
clc
mov
sbbb
mov
pop
and
or
mov
aas
movsl
je
pop
jns
push
cmp
and
inc
pop
pop
dec
scas
xchg
mov
xor
adc
xchg
push
dec
test
jno
cwtl
mov
adc
std
sbb
cmp
adc
cltd
cmp
pop
repz
fildl
fstl
fcomip
dec
sub
push
mov
mov
out
adc
stos
xor
add
mov
mov
xor
add
rorb
fwait
sbb
inc
inc
movsl
inc
cmpsl
sub
pop
jo
mov
push
pop
outsb
dec
nop
add
lock
addr16
mov
cltd
jp
sbb
cli
fists
push
fists
pusha
fwait
cmp
lahf
js
dec
jmp
pop
mull
in
adcl
push
icebp
push
sbb
cmp
inc
push
test
xchg
jb
pop
fbstp
sti
or
mov
mov
pop
xor
ljmp
int
mov
adc
cs
les
push
xor
mov
nop
gs
bound
lahf
mov
out
xor
jns
out
bound
add
mov
sbb
mov
ret
xchg
notb
dec
pop
or
mov
xchg
stc
xor
imull
inc
inc
lods
jns
ret
int
xchg
pushf
icebp
mov
test
ss
lds
out
je
mov
out
jne
mov
popf
fists
pop
fidivl
mov
enter
jmp
fnstcw
popl
imul
movsl
sub
dec
test
test
mov
mov
test
dec
jmp
and
outsb
add
das
pop
nop
ds
outsb
jbe
leave
adc
jg
popa
add
dec
pop
aam
inc
fwait
jne
dec
inc
push
push
test
mov
mov
data16
push
js
scas
dec
xchg
mov
pop
jmp
lahf
mov
push
and
adc
lds
popf
movsb
in
mov
xor
adc
pop
inc
inc
xchg
fildl
fwait
jae
cmc
sub
test
faddl
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
aaa
lea
fsts
sbb
fldt
jnp
addr16
and
es
add
pop
cltd
adc
decb
nop
sarl
dec
ljmp
pop
adc
push
clc
imul
es
push
movsb
xchg
pop
imul
add
cmp
test
inc
mov
stos
mov
and
rcl
dec
dec
push
mov
stc
sbb
loope
sub
jo
stos
ret
stc
inc
shll
paddw
dec
fisubrs
xchg
push
ficompl
xor
inc
inc
imul
scas
mov
popf
xchg
xor
add
mov
push
mov
int3
sub
out
dec
jp
test
fs
cmpsb
out
sbb
cmp
clc
sbb
test
das
dec
lods
shrb
mov
data16
adc
test
mov
sahf
pop
inc
mov
xor
xchg
lock
or
sub
lock
out
stc
test
xor
adcl
dec
roll
xor
lret
loop
dec
add
call
movsb
dec
jg
jp
scas
sti
dec
inc
test
mov
sbb
mov
inc
daa
repz
pusha
iret
ret
and
in
lods
dec
sub
loop
fwait
ljmp
jne
mov
insb
mov
cs
mov
mov
and
ret
xor
inc
add
into
lea
jl
lock
jge
push
loope
xchg
iret
xchg
lret
sbb
pop
xlat
jae
sahf
ds
popa
mov
pop
cmp
int
mov
xchg
add
bound
ficoms
lods
cmpsl
mov
mov
insl
sub
fs
in
add
xchg
or
stos
push
sub
outsl
aaa
jo
cmp
mov
xchg
pusha
pushf
mov
adc
mov
addr16
cvtps2pd
push
sub
pop
push
fldt
data16
loopne
inc
xlat
ret
pop
mov
lret
flds
mov
jge
mov
and
push
hlt
xchg
mov
push
dec
mov
lods
lods
and
lret
push
mov
xor
addb
iret
and
mov
jb
xor
dec
and
add
mov
popf
adc
push
push
dec
cs
out
adc
daa
loope
add
gs
or
outsl
adc
dec
xor
lcall
leave
pop
mov
icebp
mov
sbb
movsb
add
leave
rcrb
sub
mov
jge
push
popa
cmp
sub
and
lock
mov
mov
push
sub
arpl
sub
sub
push
loope
adc
inc
sub
icebp
lds
mov
les
out
inc
add
out
out
or
in
iret
xchg
std
outsb
xchg
push
test
jle
lock
imul
ficomps
xchg
adc
cmp
pop
add
inc
xchg
dec
mov
lods
or
push
repz
out
adc
repnz
push
fldenv
adc
dec
int
ljmp
mov
mov
xchg
mov
mov
mov
repz
push
xchg
dec
or
mov
rorb
cmpsb
test
sbb
mov
mov
mov
sarb
movsb
mov
xchg
mov
mov
sbb
push
in
mov
inc
rorl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
sbb
add
rcll
sbb
lds
and
leave
mov
xor
mov
xchg
repz
fs
mov
nop
loope
icebp
lock
xchg
iret
sbb
pop
cltd
xchg
testl
or
jno
sbb
or
jnp
mov
iret
and
add
pop
dec
jmp
mov
arpl
jb
aam
dec
decl
rcrb
push
mov
dec
sub
addr16
dec
leave
loop
in
jecxz
mov
ja
adc
push
lds
sbb
mov
bsf
in
push
mov
sti
aas
ret
in
sub
jb
je
jae
and
pop
jns
sub
inc
cld
mov
add
std
movsl
jb
sbbb
into
std
sbb
fisttps
sbb
sbb
xor
push
imul
sti
cwtl
ret
jb
cmp
jbe
add
pop
out
push
jg
aam
mov
pop
dec
jns
lret
push
out
xor
inc
inc
pop
sub
mov
jmp
mov
notb
fadd
push
ret
sbb
into
push
inc
rolb
mov
scas
push
adc
jl
cmp
popl
loop
in
pop
in
fidivl
cmpsl
jecxz
add
mov
mov
cmp
sbb
pop
std
push
inc
iret
adcl
repnz
inc
stc
xchg
adcl
pop
cltd
jl
out
mov
mov
mov
inc
loopne
mov
adc
lock
sbb
cmpsl
push
popa
sub
mov
and
inc
jns
dec
gs
cmc
dec
aaa
mov
imul
sbb
pop
mov
rclb
rorl
shlb
sub
jae
cmc
enter
adc
ss
enter
cs
imul
clc
into
mov
dec
jle
jae
xchg
call
pcmpeqw
jns
sbb
pop
push
jns
rcr
sub
int3
adc
mov
aad
scas
push
or
clc
cmc
pop
pop
mov
or
dec
mov
outsl
pop
jb
jle
mov
ds
xor
lret
clc
call
pop
sahf
inc
jae
xor
mov
dec
add
push
mov
mov
mov
mov
dec
insl
push
cmp
jnp
pop
ss
lods
js
inc
xor
pop
cltd
sub
ljmp
dec
fisubrl
mov
adc
and
add
xchg
fdivl
movsl
and
inc
sbb
inc
loope
adc
xor
out
cmp
daa
ret
jg
push
fsubrl
sub
mov
subl
das
rolb
fnstsw
in
cld
popf
jl
outsb
sbb
mov
clc
enter
mov
push
sub
pushf
popf
push
cli
rclb
imull
jg
mov
leave
cmc
movsl
gs
mov
fimull
jae
rcrl
push
test
cmp
adc
push
rcrb
cli
fs
or
pop
jp
movsb
mov
adc
idivl
inc
mov
call
inc
stos
ret
push
add
mov
dec
mov
inc
dec
ja
ret
loop
pop
cwtl
cmpsb
loopne
ret
movsl
test
in
call
sbb
std
push
fs
cld
xchg
fisubs
xchg
pop
inc
sub
test
mov
cwtl
into
pop
sahf
cltd
pop
out
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
in
mov
lret
push
sbb
in
mov
push
outsb
or
xor
xor
ljmp
test
jmp
js
sub
lods
insb
mov
add
push
imulb
in
in
popf
mov
lods
xor
dec
fwait
enter
cmc
push
outsb
scas
inc
subb
and
pop
out
adc
add
cmp
xchg
jp
cltd
mov
sbb
mov
loop
shufps
sbb
ljmp
inc
idivl
es
out
scas
jp
mov
sub
xchg
push
js
push
xlat
mov
mov
shlb
scas
mov
in
lahf
inc
sub
clc
push
stc
nop
es
add
outsb
les
sub
xchg
mov
mov
movsb
mov
adc
in
push
sbb
push
jno
cmpsl
xlat
addr16
mov
xchg
pusha
addl
mov
arpl
lcall
aas
negb
cmp
rcll
mov
mov
adcl
fcmovnu
pushf
and
mov
stc
sbb
ljmp
adc
dec
adc
scas
scas
out
add
and
mov
dec
jae
jno
sbb
es
lcall
adc
aaa
push
adc
cli
movsb
mov
cli
rorb
jmp
cmp
loop
fcmove
incb
xor
sbb
aaa
push
push
push
cmp
adc
sbb
push
aam
movl
xchg
imul
leave
sbb
lods
aam
pop
fs
mov
into
sub
inc
sbb
int
mov
cmpl
insl
jle
out
inc
in
or
movsb
fistpl
adcb
cmpsl
adc
cs
cmp
test
inc
ss
leave
in
sbb
dec
mov
adc
mov
pop
ret
pusha
ficompl
fidivs
push
or
sarl
roll
aaa
gs
pop
std
and
mov
popf
shlb
aam
lcall
pop
cltd
jb
out
cwtl
gs
sbb
dec
aad
pop
cmp
aaa
or
pop
fdivrl
or
das
mov
lcall
orl
aad
cmp
push
repz
dec
xor
pop
add
pusha
inc
sub
add
cltd
xchg
and
lret
push
xchg
jbe
loope
ja
pop
push
lcall
adc
mov
push
push
fisubrs
in
mov
pop
jno
rorb
jle
aad
add
add
pusha
rcll
sub
nop
stos
cmpsl
loop
sub
into
fs
loope
sbb
and
xor
inc
lcall
xchg
push
push
mov
ds
lcall
icebp
daa
orl
xchg
pop
jns
lock
mov
cmpsl
outsb
mov
adcb
into
mov
std
test
or
sbb
bound
fistpl
jge
int
decl
jmp
inc
cmp
jmp
pushf
das
jbe
repz
ret
fidivrl
inc
dec
call
into
push
insl
sbb
adc
xchg
push
cmpsb
dec
test
mov
mov
fwait
data16
notb
in
clc
je
cmp
bound
jp
add
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
mov
jle
ret
push
sbb
clc
stc
push
sub
or
sub
decl
outsb
clc
shll
hlt
int3
sbb
mov
icebp
inc
aaa
scas
inc
es
and
pop
cld
daa
mov
inc
or
mov
add
mov
xlat
ret
dec
xor
pop
sti
mov
adc
jmp
inc
sub
mov
into
sbb
ss
cmp
mov
jl
decl
pop
mov
mov
inc
cld
xor
or
pusha
mov
push
push
sub
movsl
add
adc
and
ds
rcrl
cmpsb
aaa
testb
insb
jp
add
cmp
push
mov
push
push
cmp
push
mov
fnstsw
xchg
push
jp
mov
cmpl
outsb
mov
jae
add
mov
dec
or
sbb
or
add
dec
xchg
xchg
pop
mov
cwtl
fs
xorb
out
cli
call
cmpsb
jecxz
out
sub
out
outsb
lret
mov
aad
push
fsubl
repnz
jo
nop
cwtl
push
and
arpl
xor
pushf
pop
pop
lahf
inc
in
sarb
xor
cmp
fisttpl
dec
cmpsb
xchg
jb
xor
hlt
jecxz
xchg
xlat
testb
xor
scas
leave
mov
aam
lods
lret
jecxz
xor
xchg
icebp
arpl
jo
pop
frstor
push
lods
sub
pop
and
push
and
int
fld
jecxz
jb
adc
cmp
push
aas
mov
test
enter
stos
das
lcall
pop
jge
push
fxch
fwait
imul
mov
sub
push
xchg
sbb
push
sub
add
lret
push
inc
add
out
stos
arpl
inc
ret
or
shr
into
xlat
scas
fnstcw
jbe
sub
jge
cmpsb
cmp
and
lods
mov
jmp
loopne
mov
cld
or
cmp
pop
cmp
bound
mov
fnsave
xchg
push
fadds
imul
and
sbb
nop
pop
adc
inc
add
push
add
jg
aam
mov
into
jno
push
jb
adc
inc
icebp
pop
xchg
pop
xchg
dec
and
insb
mov
jns
fcmovnu
push
repz
ss
call
adc
dec
enter
adc
lahf
cmp
mov
add
pop
xchg
sub
gs
pop
mov
xlat
pop
jae
jp
fnstcw
ds
pop
jecxz
and
inc
cs
stc
mov
jb
pop
xor
ret
lock
outsb
mov
xchg
out
cltd
jp
aad
mov
dec
push
in
push
push
mov
ret
mov
xorb
lret
xor
hlt
verw
push
scas
push
sub
add
daa
xor
fcomp
sub
packssdw
ljmp
fdivl
dec
movsb
lods
cmp
sbb
js
jp
xor
fadds
push
mov
out
xor
fwait
mov
or
inc
je
mov
fucomi
stc
xchg
jnp
popf
and
and
sub
push
sbb
inc
xchg
rorl
inc
jne
lcall
inc
sbb
les
mov
es
jo
lods
pushf
cmp
or
mov
test
fimull
cmp
jnp
sahf
add
pushf
add
lods
aad
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
or
jecxz
push
sbb
inc
fistpll
xlat
mov
sahf
xchg
movsb
add
test
lods
push
lods
dec
xchg
xor
mov
jo
and
enter
scas
sub
nop
mov
out
xchg
xchg
int
mov
pusha
nop
mov
inc
adc
loope
dec
stos
shlb
pop
xchg
xchg
in
cmp
mov
jb
cmp
cmp
jmp
rcl
lea
xor
add
insl
push
test
pushf
sbb
cmp
movsl
xchg
bound
add
jo
in
addl
call
out
dec
leave
mov
in
dec
sbb
sti
iret
inc
clc
clc
cmp
sbb
push
mov
xor
cmp
stos
inc
nop
push
jnp
icebp
lahf
sbbb
sub
mov
cmp
scas
pop
lret
dec
inc
pop
push
in
xchg
inc
dec
sub
je
mov
cmpsb
ds
xchg
hlt
jge
movsl
cmp
adc
stos
xlat
mov
or
push
fidivrl
xor
mov
sahf
bound
dec
xchg
push
insl
or
jae
cli
inc
les
xchg
push
xor
jb
cmpsl
inc
mov
mov
shr
adcl
rcrb
lcall
in
mov
popa
lahf
xbegin
pop
pop
addr16
out
cwtl
test
inc
mov
pop
movsb
dec
xchg
add
pop
adc
dec
lahf
push
push
aas
pop
testb
mov
mov
fcmove
iret
fwait
imull
mov
mov
jne
ret
cmp
mov
das
cli
daa
in
faddl
nop
jmp
lea
jb
add
in
cli
in
rolb
popf
cmp
xchg
stc
call
insb
arpl
pop
adc
mov
and
orl
in
shrb
push
adc
mov
mov
inc
dec
movsl
sahf
sbb
loope
jb
mov
int
fimuls
sub
xor
dec
movsb
sbb
sarl
dec
fmull
ret
std
adc
xchg
xchg
xchg
out
push
addl
loopne
pop
dec
lea
ret
cmp
mov
mov
aad
mov
aaa
and
icebp
cmpsb
jo
jno
push
pop
sub
out
jns
fdiv
fwait
push
insb
jae
xor
dec
fs
cmp
xchg
sbb
icebp
loop
loope
fnstsw
pushf
add
mov
inc
pusha
or
add
test
jnp
push
popf
bound
pop
cmp
mov
dec
leave
adc
inc
push
mov
shll
lock
mov
sbb
cmp
dec
add
adc
inc
bound
dec
arpl
fcmovne
cmp
pushf
and
loope
mov
or
xchg
adc
jo
mov
loope
call
aad
in
mov
or
test
mov
dec
lds
shll
enter
cmp
mulb
and
inc
outsl
mov
xor
jle
loopne
cld
int3
fmull
pop
mov
dec
mulb
cmp
fisubs
out
sti
and
pop
xchg
jp
out
cmp
mov
jne
push
shrl
cmp
dec
cmp
movsl
push
xchg
jl
jl
add
dec
test
iret
psubusb
push
stc
push
jmp
sbb
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
mov
cld
jne
cmp
dec
scas
push
pop
mov
fdivl
xchg
jle
cmp
test
xor
pop
ds
mov
cwtl
aas
or
in
cli
jmp
pusha
sbb
mov
lock
sbb
insl
mov
xchg
and
int
movsb
or
aam
pop
xor
sbb
cmp
pushf
stos
or
xor
aad
leave
sbb
cmpsl
ss
dec
daa
pop
cmp
int3
cmp
mov
hlt
shlb
push
shl
fs
add
sub
addr16
rorb
sub
or
insb
outsb
popa
ds
add
enter
mov
aad
mov
mov
xchg
pop
xor
stc
xor
add
out
nop
pop
xlat
jno
mov
fstl
pop
push
push
and
jge
mov
jbe
shlb
mov
ret
cmp
cmp
jns
xor
jp
in
cmc
adc
or
pop
mov
jb
and
std
cld
fwait
call
ret
pop
in
popf
jle
pop
ljmp
pop
pop
push
pop
add
pusha
cld
fs
movsb
xchg
cmp
sbb
mov
adc
sahf
rol
hlt
sbbl
outsb
push
lods
and
int
xor
push
das
popa
mov
jle
add
test
dec
ret
mov
dec
andb
add
in
add
inc
pop
or
dec
push
and
sub
pusha
nop
ja
and
mov
add
adc
and
lret
lret
enter
leave
xor
dec
int3
cs
sbb
xchg
push
mov
push
in
lcall
jo
mov
cmp
xor
jecxz
and
push
in
adcl
mulb
clc
rorb
cwtl
xchg
fdivrl
iret
scas
mov
out
adcl
icebp
lea
sub
xor
cmpsb
or
add
gs
mov
push
aaa
not
dec
push
jmp
fxch
sbb
es
addl
cwtl
popa
lds
dec
imul
loope
xchg
nop
mov
movsb
or
fwait
out
aad
aad
out
stc
jp
mov
ficompl
sbb
jne
aam
cmp
sub
stos
sub
rclb
jne
dec
mulb
mov
jae
mov
inc
mov
sbb
rorl
cmp
and
mull
push
es
xchg
xchg
addr16
clc
fmul
sbb
pop
rcr
xchg
cmp
daa
repnz
in
mov
add
pop
fiadds
cmp
inc
jg
ret
iret
cltd
sbb
jg
aam
pop
mov
repnz
fdivrs
mov
and
ret
mov
fstps
scas
or
js
push
pop
shlb
jl
and
push
dec
outsb
rcl
fwait
stos
sub
pop
aas
imul
dec
jl
push
dec
pop
push
mov
test
sub
jmp
pop
mov
pop
and
add
fbstp
push
mov
clc
data16
std
jg
lret
test
inc
fs
pop
pop
dec
lret
jecxz
mov
push
test
les
sahf
sbb
inc
daa
mov
sbb
mov
dec
cs
jl
nop
icebp
lcall
xchg
rol
jnp
aas
xor
loope
les
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
js
or
lods
push
sbb
jmp
mov
pop
xchg
or
cmpl
pop
fwait
test
repnz
icebp
adc
lcall
aas
mov
mov
push
pop
aas
push
cmp
mov
mov
add
xor
jmp
or
fdivrs
movsl
pop
dec
aas
repnz
cld
fnsave
push
fwait
scas
dec
bound
push
and
out
dec
nop
ds
nop
push
sarl
fs
sbb
xchg
fdivr
aaa
loop
ficoms
push
pop
xchg
imul
and
mov
and
repnz
jl
fs
leave
call
pusha
cmp
addb
xor
mov
adc
in
data16
jle
push
pop
outsb
mov
mov
das
and
push
enter
sar
push
xchg
leave
call
mov
sub
or
ljmp
mov
addr16
pop
test
mov
dec
push
loop
cmp
std
loope
sti
aad
xchg
adc
push
mov
dec
pop
jl
loop
daa
iret
sti
push
push
scas
das
mov
aad
add
outsl
out
jbe
mulb
pop
mov
lahf
xor
or
sub
in
mov
and
inc
pop
pop
push
mov
mov
xlat
mov
cmc
mov
ljmp
int3
adc
lock
shlb
rol
add
repz
lcall
fimull
aas
pop
shld
jge
cmc
lods
push
loopne
pop
jne
aaa
pop
pop
dec
push
sub
cmp
inc
jp
cmpsl
out
inc
or
and
push
jb
insl
incl
and
divl
mov
dec
jp
sub
adc
lret
xor
push
popa
fsubrp
lods
and
outsl
mov
mov
dec
dec
mov
mov
sti
out
jns
out
adc
cmc
mov
cmpsl
je
mov
ss
das
push
add
out
scas
daa
adc
and
push
jecxz
dec
adc
mov
leave
push
cmp
ja
sbb
pushf
push
xor
adc
pop
pop
in
sub
mov
es
ror
push
ret
jae
sahf
xchg
fldcw
cwtl
mov
ljmp
xor
mov
jnp
outsl
pop
test
fisubl
out
fstpt
cmp
push
add
test
mov
outsl
cmpsb
dec
inc
movsl
sub
enter
lds
fnstcw
mov
popa
mov
cmp
lahf
add
dec
and
cmp
cmp
dec
pop
fidivrs
push
adc
testl
loope
hlt
add
jg
movsl
add
mov
xlat
xor
ss
ja
or
aas
push
test
sbb
jae
pusha
jb
ret
xor
add
add
xchg
inc
pop
stos
fldl
shl
ljmp
mov
jle
shlb
and
xchg
xchg
cs
popl
lea
dec
jae
cmp
orb
shl
jbe
mov
pop
push
movsb
call
jmp
scas
cld
xchg
int3
dec
sub
data16
lret
enter
or
cmp
popf
pop
test
lcall
flds
mov
movsb
push
outsl
or
cltd
imul
inc
call
ja
or
cmpsb
inc
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
std
int
jo
movsl
push
sbb
cmc
xor
adc
cmp
ret
dec
adc
fcom
xchg
in
pop
xor
cmp
shlb
cmp
test
cltd
pop
lods
cmpsl
dec
sub
mov
sti
jp
or
push
aaa
sbb
mov
dec
sbb
out
lds
cwtl
inc
sbb
lods
push
push
adc
repnz
icebp
or
addl
addb
adc
decl
filds
and
and
jbe
fs
cmpsl
movlps
js
jp
mov
xchg
and
iret
push
xchg
mov
mov
cmpsb
adcl
mov
jmp
lret
push
dec
xchg
stos
lcall
jb
fisttpl
jbe
cmpsb
out
sti
cmp
inc
sbb
out
add
inc
adc
out
frstor
rcrb
mov
testl
out
and
pop
or
mov
push
addl
rcll
or
scas
jl
cmp
je
and
imul
sbb
pop
and
sub
ret
push
lds
mov
sub
push
fldl
cmp
mov
sbb
mov
jns
sub
addb
sti
int3
jle
aaa
xor
or
adc
je
xchg
out
mov
test
aas
pop
out
pop
xchg
mov
in
lds
push
push
and
out
pop
push
and
jmp
ret
xchg
mov
and
xor
adc
push
push
push
add
jns
xchg
xchg
push
jae
test
shll
mov
sub
xchg
sub
sub
pop
mov
and
inc
rol
jne
xchg
and
jb
cmp
or
std
cmc
out
fsubp
icebp
shrb
pop
push
das
mov
cmp
sub
stos
push
subl
mov
mov
sbb
dec
and
idivb
cmc
outsb
adc
cmp
out
pushl
ds
je
out
addb
jbe
mov
mov
inc
adc
call
mov
popf
loope
sbb
dec
adc
addb
cld
cltd
lods
es
lea
cmp
cmp
dec
adc
pop
test
xor
inc
loope
xchg
pop
dec
sbb
in
cmpb
adc
ja
lret
push
mov
sub
sarb
es
in
add
push
notb
jo
adc
sbb
lahf
lea
int3
fimuls
dec
pop
cmc
dec
cmp
decb
test
cld
push
pop
fiadds
xchg
cmp
js
or
cmp
daa
adcl
das
xor
jmp
xchg
inc
xorb
xchg
nop
add
stc
fdivs
dec
mov
cmp
imul
fadds
rolb
ljmp
xchg
ljmp
fwait
scas
inc
in
adc
mov
dec
nop
loope
inc
pop
gs
mov
insb
xchg
mov
es
push
lahf
lret
outsl
sbb
xchg
add
sbb
jp
ljmp
and
cld
ficompl
outsb
out
mov
clc
je
xlat
sbbb
xchg
lods
sbb
mov
lret
mov
or
subb
mov
stc
push
mov
bound
xor
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
addr16
pusha
add
sbb
rorl
jnp
aam
mov
js
je
decl
cmp
jge
push
aad
data16
ffree
fwait
cmp
popa
jle
loope
xor
test
and
insb
mov
fistpll
stc
fucom
lods
xchg
and
and
cmp
addr16
je
push
int3
mov
mov
push
push
mov
mov
sbb
xlat
inc
and
mov
daa
adc
pop
out
and
int
rcll
aam
cmp
jae
pushw
sub
jo
les
sbb
das
stos
pop
test
cltd
test
xchg
rcrb
and
out
xchg
jl
int3
call
test
outsb
or
jl
add
sbb
aam
jo
jge
iret
movsl
cltd
cmpb
popa
rolb
mov
test
cli
and
sub
sub
mov
sub
das
outsl
jno
lahf
ret
jae
rclb
fistpl
jne
popf
fistl
add
mov
xor
sbb
xor
loopne
lods
jmp
fwait
mov
or
cmp
repnz
aas
pop
mov
cmp
jb
repnz
xchg
jecxz
aas
cmp
xor
ret
in
cmp
xlat
mov
mov
pop
mov
push
nop
stc
daa
xor
mov
scas
sub
mov
mov
fdivrl
jo
shll
sub
lcall
sub
mov
daa
sub
jns
sbb
test
mov
add
mov
lock
cld
lcall
inc
pop
sbb
sub
xchg
sbb
push
shrb
ss
inc
cmp
clc
das
mov
and
test
cmp
enter
daa
dec
jne
jge
repz
sbb
sub
push
xchg
in
cmpl
or
sti
loope
rcrb
lods
inc
aam
orl
cmc
fstps
popa
popf
iret
fldt
mov
and
dec
sbb
repz
in
dec
ja
mov
sarl
xchg
popa
scas
mov
mov
stos
or
or
mov
mov
jbe
add
stos
inc
pop
test
inc
imul
in
call
test
mov
leave
sbb
ljmp
inc
je
lods
idivb
data16
and
xchg
mov
cwtl
mov
mov
jno
push
xchg
cmp
push
sti
in
adc
mov
aad
js
xor
mov
jb
pusha
push
pop
xchg
jne
jo
add
insl
cltd
sbb
mov
pop
repz
test
or
jns
or
outsl
out
xchg
lock
jecxz
je
mov
dec
iret
lret
sbb
adc
xchg
xlat
lods
cli
add
mov
pop
jae
pop
xor
inc
popa
aaa
or
sbb
in
mov
call
lret
sbb
and
push
dec
lods
lods
rcrl
je
mov
cmp
out
lods
mov
dec
in
pop
data16
repnz
and
mov
or
mov
jp
jae
mov
pushf
stc
jmp
ss
sub
call
push
push
jge
pusha
xchg
cmp
bound
xchg
xor
dec
adc
sub
xorl
jne
or
pop
inc
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
imul
sbb
repnz
sti
js
mov
inc
adc
push
dec
sbb
sub
int3
push
push
sti
adcl
fcomi
cmpsl
xchg
push
or
movsl
jle
repz
jg
enter
into
pop
xchg
int
xchg
jle
push
xchg
sbb
aas
fwait
pop
out
xchg
ret
add
xchg
push
or
mov
dec
inc
lcall
jbe
mov
xchg
pop
xor
outsl
call
mov
sub
jb
in
mov
subl
scas
push
adc
and
rorb
leave
repz
xorl
sub
jb
dec
in
cmc
lahf
shrb
inc
push
pop
push
jle
push
dec
stc
in
outsb
in
fs
cs
icebp
mov
out
pop
int3
pop
dec
inc
cmpsl
dec
out
lahf
mov
jp
inc
out
test
pop
es
xor
ja
pushf
repnz
add
inc
mov
mov
jno
andb
leave
xchg
pop
cmp
cmp
dec
jbe
xchg
mov
dec
sbb
lret
popf
fisubrs
imul
sbb
divb
jp
inc
mov
cmp
shrl
int3
sbb
icebp
nop
pop
lods
mov
lea
jle
push
insb
rcrl
add
aad
inc
pop
pop
pop
pop
mov
stc
mov
push
cmc
outsl
mov
shll
push
jmp
ret
out
add
sbb
jbe
subl
mov
imul
andl
test
in
lock
repnz
jge
push
push
fucomi
mov
movsb
adc
fcompl
xlat
adc
jmp
sub
iret
negl
out
shl
call
cmp
and
xchg
rcrl
or
and
repz
fldt
addl
or
sbb
lods
cmp
sti
test
lock
or
xor
inc
dec
push
mov
ljmp
cmp
out
xchg
sbb
add
xor
cmp
pop
push
push
inc
jmp
test
adc
mov
sub
popf
cmc
cmp
mov
pushf
xchg
out
mov
divps
dec
lcall
gs
xchg
inc
sub
ret
cmp
push
std
test
push
rcrb
sub
shlb
ret
cmp
add
jecxz
sbb
jbe,pt
cmpsb
mov
mov
sub
inc
test
jl
xchg
fidivrl
push
dec
push
icebp
fisubrs
add
pop
mov
icebp
fs
stos
pop
push
and
gs
pop
imul
xchg
jae
jnp
add
add
loope
adc
mov
jmp
mov
pop
push
fsubs
fistpll
sbb
sbb
divl
int
cld
sbb
sar
pop
aaa
enter
daa
pop
dec
in
lea
inc
inc
or
push
mov
cmp
xchg
push
cli
nop
jmp
int3
outsl
mov
push
or
inc
movsb
mov
mov
sbb
stos
jbe
xor
lods
jns
orb
xchg
xchg
fcomps
stos
add
push
jg
mov
lahf
pusha
outsl
dec
push
inc
data16
lret
and
fs
icebp
sbb
add
xlat
lds
and
jbe
or
push
cmp
sbb
lcall
dec
push
sub
xchg
fmul
in
and
mov
sbb
adc
mov
stos
dec
mov
jmp
dec
popf
pop
arpl
dec
xchg
ret
mov
lret
ret
call
xor
inc
and
mov
jmp
push
or
sbb
jnp
stos
mov
push
sbb
xor
loope
movsb
andb
aad
inc
mov
in
dec
pop
in
ljmp
mov
dec
les
call
push
fcoml
or
inc
and
pop
lds
jecxz
rcrb
scas
adc
push
dec
pusha
bound
aas
and
sbb
sub
pop
mov
push
pop
sub
pop
rorb
out
dec
mov
sahf
aaa
jle
adc
test
roll
add
call
dec
lods
jae
es
bound
cli
loopne
imul
stos
lcall
pop
sbb
xchg
dec
sub
repz
mov
repz
es
lahf
fdivrl
xchg
jle
mov
xor
jle
enter
jmp
test
jg
dec
scas
adc
repnz
addl
ret
and
repnz
pop
adc
xchg
dec
xor
pop
jbe
xor
cmp
out
xor
sub
sbb
sub
cs
pop
fidivl
addr16
in
add
cmp
push
pop
js
sub
int3
aam
push
cld
add
push
mov
insb
xor
cld
mov
pop
adc
pop
push
jnp
je
outsl
mov
xchg
inc
in
push
mov
push
insl
dec
dec
frstor
in
stos
popa
lods
or
jl
mov
repz
adc
or
add
push
fcomi
gs
xor
nop
popf
mov
mov
popf
pusha
out
adc
xor
and
sahf
les
mov
mov
frstpm(287
nop
movsl
and
cmp
jb
xchg
pop
mov
lock
mov
dec
jl
cmp
xchg
aaa
mov
lahf
out
jge
test
mov
ss
loopne
jp
xchg
inc
mov
push
mov
imul
fwait
sbb
lods
js
in
ret
into
and
lock
mov
ret
leave
cmp
lret
cltd
mov
out
pop
dec
stos
cs
lahf
in
test
stos
loop
gs
mov
dec
push
jmp
out
push
adc
sub
arpl
push
mov
push
jecxz
clc
mov
leave
mov
js
xlat
xchg
cmp
imul
pusha
add
mov
or
push
out
popf
mov
insb
gs
stc
inc
lret
or
js
arpl
test
lret
mov
iret
xchg
int3
xchg
jno
adc
sub
lret
pushf
and
mov
pop
jge
inc
add
stos
lcall
fildl
hlt
mov
lahf
pop
cli
push
sub
inc
loope
stc
push
mov
xor
hlt
orb
int3
dec
fisubs
xchg
dec
sti
fsubrs
mov
lret
movsl
shlb
mov
pop
mov
dec
inc
jae
inc
cli
ret
add
leave
push
inc
enter
pop
lods
mov
pop
mov
cmpsl
push
xor
mov
xlat
insl
add
shlb
cmp
jmp
fdivrs
xorb
inc
and
lds
push
inc
popf
sub
jle
outsl
lea
js
pop
inc
scas
or
adc
dec
ds
in
mov
push
pushf
sbb
pop
xchg
inc
enter
cmpsb
xlat
dec
push
data16
lock
sub
ja
jl
fisubrs
cmp
lahf
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
lcall
mov
push
dec
loope
daa
hlt
pop
sub
fwait
inc
adc
lods
bound
mov
andl
outsb
and
mov
cmp
outsb
mov
mov
jmp
rcl
jl
fdiv
pop
mov
test
gs
cmp
xchg
rcll
ret
mov
arpl
fstp
dec
stos
outsb
stc
dec
stos
xchg
cmp
jnp
xchg
cmp
std
leave
popf
fisubl
xor
outsl
xchg
mov
leave
fwait
das
push
push
inc
jp
popa
out
leave
mov
ja
loope
sbb
jb
in
mov
xchg
subb
xchg
maskmovq
hlt
std
xor
stos
xchg
pusha
pop
dec
jecxz
div
les
rolb
rep
push
or
divb
fwait
add
lock
ficomps
mov
sti
jmp
int3
in
or
jge
iret
mov
mov
lahf
outsl
jg
hlt
xchg
mov
repz
jb
sahf
imul
cld
icebp
or
cmpsb
shrl
es
sahf
push
and
xor
push
test
out
fnsave
pop
les
fadds
scas
inc
mulb
mov
dec
shll
sbb
test
cld
lods
rcll
pop
imul
fnstenv
pusha
stos
sbb
xor
jp
scas
cmpsb
or
adc
xor
mov
pop
fmul
dec
inc
data16
sbb
cltd
outsl
or
das
ret
pop
loopne
rolb
js
add
sub
mov
sbb
fcoms
fmulp
popa
mov
test
fmul
in
aaa
inc
cmpsl
xchg
out
lret
pusha
cli
xchg
stos
mov
xor
lods
cmp
mov
xchg
in
pop
filds
push
push
test
in
shll
add
lahf
add
ficoml
adc
push
inc
mov
add
mov
cld
rorb
andl
jae
psrld
cmp
add
add
fwait
pop
inc
je
pop
dec
mov
int
in
push
lods
loopne
imul
call
push
mull
aaa
dec
pusha
mov
lods
lods
mov
mov
cmp
lcall
notl
mov
mov
mov
lods
xchg
xor
xchg
jge
iret
fnstsw
es
xchg
scas
pop
pusha
sbb
subb
das
inc
pop
out
adcb
int3
stos
test
pop
mov
imulb
out
daa
pop
jae
push
mov
cmpsb
in
orb
lret
imul
idivb
sbb
push
dec
gs
cmpl
out
js
mov
loop
sbb
dec
cmp
sbb
stc
sub
aaa
cli
stos
pop
push
sub
add
cmp
cmp
add
stos
mov
or
int
dec
jae
mov
ret
addr16
jge
adc
xor
fisubrs
movsb
jecxz
jl
lahf
pop
test
push
xchg
shrb
inc
jecxz
loope
xor
pop
push
mov
pusha
sub
ret
cmpsb
sbb
sbbb
and
xor
inc
cmova
outsb
popf
arpl
xchg
inc
push
daa
pop
add
push
mov
and
insl
cmpsb
in
inc
xor
test
mov
in
cwtl
loopne
inc
jp
jns
xor
decl
fs
test
pop
dec
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
sub
arpl
adc
sbb
inc
fbld
sub
movsl
sbb
outsb
push
rol
clc
xchg
mov
cmp
and
rolb
dec
pop
andb
ljmp
mov
in
and
adc
cmp
xor
arpl
jne
fists
xor
int3
fistpl
int3
push
sub
or
jb
out
pop
movsb
adc
add
pop
gs
sub
lds
lahf
cld
mov
in
test
stos
lea
mov
mov
pop
repz
mov
push
adc
mov
dec
lret
cwtl
adc
sub
loop
push
dec
mov
jno
ret
xor
ss
mov
push
aas
inc
pushf
inc
ljmp
lret
insb
xor
shrb
xor
lods
push
pop
ds
loop
aam
leave
sub
push
sbb
sti
ret
fwait
pop
lret
scas
pop
adc
dec
std
mov
out
imul
sub
sti
mov
pop
in
push
push
jecxz
push
data16
and
aaa
xchg
lods
sbb
lea
sahf
fdivl
adc
push
jnp
out
rcll
xchg
or
sub
pop
int3
inc
fnsave
push
ret
xor
or
mov
in
adc
push
mov
inc
fcmovu
push
sbb
es
jno
dec
repz
popa
bound
add
xlat
mov
lahf
xchg
sbb
cmp
sbb
adc
push
iret
jae
push
sub
imull
jle
out
mov
int
insb
test
and
in
xchg
mov
lcall
aad
aaa
stc
icebp
cmpsl
cmp
imul
gs
pop
xor
cwtl
out
mov
rcrl
rcll
xchg
mov
pop
add
fdivrl
mov
mov
dec
jge
push
cmp
inc
mov
adc
mov
adc
lret
dec
lret
loope
loop
cltd
andl
push
or
mov
lahf
fwait
imul
test
jno
sti
outsl
pop
or
cmp
xchg
jne
mov
inc
inc
mov
cmpsb
cmp
aas
mov
xor
movsb
fdivs
sub
push
in
fs
mov
loopne
jo
pop
das
mov
jl
dec
arpl
orl
icebp
dec
mov
jp
mov
push
ror
das
cli
fucomip
jmp
pop
in
add
mov
popf
ret
leave
outsl
push
push
es
push
xor
inc
rolb
cmp
ljmp
and
shlb
mov
mov
iret
iret
popf
pop
or
shll
jl
outsb
jl
cmpsb
stc
hlt
inc
pop
xchg
idivl
je
cmp
mov
pop
sub
dec
xor
dec
sub
lcall
xorb
mov
inc
lea
sbb
scas
adc
pop
pusha
les
loop
jb
mov
inc
jnp
adc
pop
sub
pushf
outsb
fsubl
and
adc
inc
into
mov
ret
and
cmp
les
ficompl
cli
push
test
xlat
and
sbb
mov
aam
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
adc
push
sbb
jmp
movsl
mov
cltd
in
adc
xor
jbe
or
test
add
repnz
jg
mul
lods
cli
mov
rcl
loop
mov
into
xchg
lods
ss
jecxz
pop
int
rep
add
sub
scas
adc
fdivl
pop
mov
push
adc
loop
pop
mov
and
or
inc
jg
aam
xor
jecxz
xchg
sub
xor
sbb
aas
inc
jg
mov
xchg
scas
fwait
js
lds
pop
cwtl
dec
dec
sub
int
ficoml
lahf
cmp
out
xlat
faddl
dec
or
dec
dec
cmp
andb
push
xchg
add
pop
aad
out
and
lock
inc
ljmp
out
sub
mov
mov
jp
rsm
jns
test
jae
sub
jg
call
popf
icebp
jmp
adc
push
aas
je
rcll
icebp
cmp
cmpsl
ror
add
out
cmpsl
in
movsl
push
jge
sub
inc
imul
xchg
push
push
loope
cmp
push
mov
fucomip
sub
pop
loope
in
fdivl
jo
adc
pop
jle
sbb
dec
sub
lret
and
es
xchg
inc
out
sbb
iret
les
aam
cld
pushf
cs
fcomip
adc
pushw
inc
mov
adc
btc
into
andb
push
jle
fwait
jg
jbe
popa
ret
dec
xchg
and
pop
or
aas
dec
push
mov
stc
mov
leave
cmp
inc
push
shlb
das
or
dec
dec
fadds
push
mov
out
stos
xchg
pop
or
xor
mov
mov
sbb
stos
jo
xchg
mov
jb
push
fldcw
sbb
ret
call
imul
xor
push
jb
ret
leave
int3
add
lcall
dec
scas
nop
lret
inc
scas
fcomi
add
jge
cmp
xorl
or
or
ficompl
rolb
and
testl
mov
add
insb
dec
sub
popf
and
sub
and
mov
mov
jno
aaa
outsb
cmp
or
inc
enter
dec
add
aad
enter
scas
repnz
jle
adc
xor
mov
orl
mov
dec
dec
imul
mov
adc
lods
imul
fildll
in
ss
mov
inc
mov
jl
sub
inc
rorb
sub
out
jno
mov
and
dec
fnstenv
in
addl
sub
js
xchg
ljmp
xchg
push
dec
jne
test
pusha
push
pop
cmpsl
inc
inc
mov
push
jmp
mov
push
push
daa
out
out
cmp
hlt
dec
test
insl
ds
inc
xchg
cli
jne
fdivrl
sbb
jp
imul
daa
sub
arpl
les
sbb
inc
push
std
mov
mov
xchg
mov
insl
and
aas
js
lret
cmp
and
ds
cld
call
into
sbb
sub
lods
jecxz
mov
shr
inc
ret
lds
shl
push
dec
cmp
negb
mov
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
gs
jo
jae
sbb
xor
push
lret
inc
push
mov
hlt
sub
pop
addr16
sar
mov
push
dec
jecxz
ja
mov
jne
cmp
push
mov
jnp
xor
and
xor
push
push
and
aas
nop
lcall
rcl
into
pop
fstpl
push
shll
ljmp
lods
in
push
fwait
mov
xor
mov
push
xchg
push
loop
mov
cmp
xor
fnstsw
jno
into
and
aas
push
inc
dec
ds
fistpl
cwtl
lds
push
popa
scas
jns
mov
mov
jne
push
mov
std
sub
mov
push
mov
addr16
mov
mov
enter
mov
xchg
pusha
das
and
mov
pusha
pop
mov
jo
xor
cmc
inc
movsb
ss
outsb
sbb
loopne
xchg
sbb
pop
cmc
mov
scas
and
adc
fidivs
cmpl
ss
jns
or
mov
mov
ficompl
in
and
push
adc
push
push
rcrl
xchg
lret
sbb
jecxz
cmp
jne
mov
cmp
call
pop
sub
cmp
lret
or
out
fwait
mov
push
outsb
xchg
out
icebp
in
sbb
fxch
lea
call
inc
xchg
pushf
je
lret
cli
push
pop
scas
out
test
jp
mov
push
push
inc
cmp
jns
pop
adc
fistpl
bound
sbb
fwait
sub
xchg
movsb
xlat
push
sub
dec
test
mov
fs
dec
outsb
inc
int3
sbb
js
in
pop
lods
rcrl
popf
fwait
push
cmp
lahf
rcrl
loopne
in
es
xor
es
lcall
add
push
mov
in
jae
jo
and
sahf
sub
fwait
and
outsb
mov
popf
jb
mov
jae
adc
insb
mov
enter
out
cmp
cmp
inc
int
xchg
mov
scas
loop
inc
repnz
mov
insb
dec
jecxz
or
mov
jmp
pop
cmp
jae
xchg
les
or
scas
fxch
dec
filds
mov
cmp
in
or
scas
movsl
jne
pop
mov
fmuls
cltd
insb
js
rorb
adc
sub
pop
cmpsb
cmpsl
int
jnp
sbb
rcl
adc
addr16
mov
sbb
fcmovu
jge
shlb
sub
pop
cmp
repnz
cld
popa
push
test
mov
in
or
outsl
mov
addl
pop
in
imul
xchg
cmpsl
and
jae
ret
out
xlat
sti
cld
nop
push
dec
pcmpeqw
ss
sub
in
cmp
movlps
xchg
dec
or
mov
inc
repz
pop
pop
andl
push
dec
pop
mov
or
enter
xor
and
js
mov
mov
add
outsb
pop
stc
inc
imul
jb
mov
imul
mov
jl
xchg
cltd
pop
or
xchg
out
jbe
je
popa
or
mov
nop
xchg
push
fnstcw
hlt
jl
mov
and
cmp
pop
lea
das
int3
push
test
adc
stos
in
inc
cli
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
rcl
out
imul
mov
mov
ljmp
jno
jbe
adc
mov
icebp
pop
push
es
ljmp
mov
jae
pop
mov
lahf
adc
xchg
xor
sbb
push
or
rol
stos
nop
xor
jp
jl
fdivl
cwtl
mov
sub
xchg
outsb
adc
or
dec
lds
dec
cwtl
out
cwtl
add
mov
mov
mov
jne
repnz
xlat
hlt
notb
sarb
mov
test
jne
jmp
jp
xor
jo
leave
or
es
aas
mov
data16
leave
mov
stos
arpl
fimuls
xchg
out
pop
fidivrl
cmp
mov
test
mov
scas
in
pop
jnp
adc
shl
sbb
inc
stc
das
jne
ret
sti
jmp
mov
mov
xchg
mov
adc
push
mov
pop
dec
lret
push
push
adc
pop
push
xchg
lds
mov
test
iret
pop
add
scas
outsb
dec
mov
xorl
pop
ja
out
cmp
xchg
mov
jmp
sub
jae
loope
pminub
cmp
add
clc
loopne
arpl
mov
pop
mov
scas
or
xor
mov
rolb
inc
push
adc
lahf
mov
jo
mov
xor
cwtl
inc
ss
shll
push
testl
mov
ds
inc
add
and
out
in
xor
push
xlat
incb
fucomip
mov
cwtl
push
subl
notl
adc
push
add
dec
loopne
mov
inc
xor
inc
jb
fdivrl
fdivrs
sbb
stos
es
jo
scas
insl
imul
adc
sub
cld
stos
clc
rorl
cmp
pop
sbb
jl
jno
fistps
dec
mov
cltd
xchg
xor
ljmp
lahf
outsl
lods
jo
cmp
push
sub
ret
aad
adc
out
adc
lret
clc
xor
inc
negl
xor
mov
mov
outsb
jmp
das
dec
push
pop
xor
mov
and
adc
fs
cmp
sub
ret
mov
cmpsl
loop
in
mov
push
js
push
mov
arpl
inc
fxch
scas
or
add
fwait
add
mov
push
lret
out
mov
fld
xchg
push
test
sbb
std
aas
push
jo
call
test
xor
mov
xchg
adc
gs
addb
loopne
add
jno
and
arpl
in
xor
mov
sbb
loop
es
inc
fildll
adc
push
mov
lret
push
jo
popa
adc
stos
inc
fsubl
out
out
dec
mov
int3
fcompl
insb
cmp
pushf
adc
into
lods
rorb
adc
leave
daa
xchg
sbb
fisttpl
cwtl
dec
xchg
xchg
andl
or
push
add
mov
arpl
movsb
js
mov
movsb
cmpb
imul
popa
stc
inc
jno
add
push
push
nop
repnz
cmp
dec
and
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
add
pusha
sbb
push
icebp
pop
stos
into
mulb
shrb
mov
popa
in
or
insl
mov
popa
enter
inc
mov
adc
adc
insl
pop
inc
add
sahf
sub
adc
push
pop
adc
add
xchg
xchg
mov
push
sbb
sbb
loope
shrb
ss
sub
sti
or
test
jne
add
pop
bound
push
bound
shll
inc
imul
outsl
leave
jmp
pop
dec
mov
shl
cli
dec
into
cmp
leave
mov
repz
dec
out
mov
fs
inc
xchg
pop
ja
sub
dec
iret
roll
dec
mov
mov
outsb
fdivl
das
das
push
out
les
jne
bound
dec
repnz
lret
imul
jns
sub
addb
pop
cmp
stc
or
xchg
fdivp
jecxz
sahf
mov
mov
lods
and
mov
imul
xor
sub
jo
idivb
or
mov
jecxz
addr16
push
push
sbb
mov
cwtl
scas
inc
rolb
shlb
cmpsl
fadds
ja
mov
adc
bnd
cs
out
xor
test
dec
lock
xchg
rorl
rolb
jae
mov
jns
or
add
fwait
stos
push
fwait
cmp
cltd
cwtl
jae
in
repz
xchg
pop
fisttpl
mov
xor
popa
mov
pusha
dec
jbe
in
out
out
ss
stos
je
push
pop
cwtl
pop
mov
cld
ret
iret
adc
stos
jle
das
xchg
xchg
js
xlat
loopne
orb
mov
push
mov
xchg
xor
sahf
mov
repz
jo
mov
shlb
pop
cmp
or
lock
xor
cwtl
mov
pop
cmp
sbb
clc
lret
arpl
xchg
dec
popf
cmp
sti
pop
scas
push
dec
pop
fstp
test
mov
test
punpckhwd
xchg
test
xchg
dec
xchg
jo
bound
mov
in
inc
mov
repz
xor
clc
add
or
sahf
cmp
or
imul
inc
das
movlps
in
adc
in
xor
dec
out
rorb
push
cmp
jo
lret
xchg
sbb
xor
pop
sbb
test
lret
es
mov
shlb
cmpsl
mov
xchg
gs
lock
shrl
lock
cmp
inc
adc
or
dec
or
jl
inc
jge
movsl
mov
jle
lret
mov
mov
jecxz
in
fstl
xchg
fcmovnu
sub
fucomp
shlb
lcall
enter
mov
pop
and
mov
jl
push
loope
or
jb
push
movsl
push
jg
mov
test
xor
pop
cmpsl
cmp
sbb
ja
or
pop
add
cld
sub
shr
testb
sbb
fistpl
out
push
push
inc
add
pop
pop
dec
mov
fmuls
jbe
cmp
es
push
int3
pop
enter
js
push
xchg
repz
jbe
jecxz
rcrl
aam
ficompl
out
stc
arpl
lret
popf
insb
add
test
mov
push
mov
hlt
roll
stc
dec
rclb
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
inc
out
ss
push
sbb
push
sub
lret
xchg
out
loope
repz
xchg
in
and
pop
int3
nop
fmull
ds
ret
lea
test
dec
lods
push
movsb
jo
inc
xlat
outsb
fadd
into
jbe
mov
mov
daa
adc
xor
ja
xor
sbb
movsl
sahf
cmpsb
xor
pop
jb
pop
sbb
cmp
cmp
lahf
dec
daa
jl
and
arpl
cltd
or
clc
sbb
adc
rcll
mov
loope
push
cmp
sub
cltd
push
enter
pop
adc
push
sbbl
xchg
and
imul
adcb
push
jb
or
add
daa
xchg
pop
fwait
dec
out
or
sbb
rolb
sub
mov
xchg
icebp
mov
xchg
mov
inc
mov
sub
and
sbb
inc
or
imul
inc
repz
js
adc
sub
cmp
pop
sti
dec
xchg
cmp
cli
outsb
lret
dec
pop
in
pushl
sti
push
pop
mov
adc
pop
loopne
fdiv
fndisi(8087
out
outsl
inc
xchg
cwtl
and
movsl
fwait
xor
ds
and
fisubl
dec
enter
std
push
pop
pop
stos
in
mov
andl
fistpll
lock
cltd
icebp
bts
out
mov
movsl
ljmp
fidivrl
subb
jmp
retw
mov
push
xchg
or
scas
in
xchg
fiaddl
xor
sbb
jecxz
insb
sbb
mov
lds
sti
push
sbb
add
cltd
es
fisubs
out
ja
sti
loop
inc
andb
lcall
add
leave
jl
outsb
out
sbb
test
lods
mov
sub
mov
push
and
ds
aam
je
mov
inc
cmp
sbb
cs
dec
popf
dec
inc
push
mov
mov
in
aaa
xor
xor
cli
mov
adc
ret
call
pop
mov
or
adc
loope
inc
cld
decl
loope
push
xchg
out
and
rolb
pop
inc
jmp
loopne
xchg
push
add
cmpsb
add
xchg
pushf
test
pop
mov
in
gs
mov
cli
dec
jmp
mov
adc
iret
pop
xchg
jecxz
shlb
scas
mov
loop
push
push
adc
sbb
arpl
jno
jecxz
pop
testb
gs
push
fistpl
pushf
adc
test
sub
faddl
aas
sbb
inc
std
in
rcl
fwait
push
aad
xchg
movsb
popf
cmpsl
popf
in
mov
je
xor
cmp
mov
popa
mull
call
add
dec
pop
push
ret
mov
mov
mov
cmpsl
insb
or
fmulp
lret
je
lcall
and
mov
into
clc
inc
stos
repnz
or
push
push
lcall
add
dec
sub
xchg
xor
add
sbb
mov
push
mov
jge
lea
les
pop
test
dec
ljmp
popf
lods
ljmp
loope
xchg
xchg
cmc
mov
or
pop
pop
sbb
push
lahf
lahf
push
adc
jecxz
jnp
out
ficoms
mov
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
shrb
sbb
push
loope
jae
jnp
pop
add
mov
fcoml
jno
sub
adc
mov
mov
add
cmp
sub
repz
mov
imul
ja
je
fmul
mov
fidivs
cmpsl
or
mov
dec
movsb
sbb
movsl
repz
iret
xchg
stos
mov
loop
sbb
add
and
cld
nop
loope
ljmp
and
xchg
into
mov
enter
ljmp
pop
out
dec
fsubrs
mov
mov
lods
pop
in
and
or
and
movsl
xor
dec
test
inc
mov
outsl
push
xor
xor
aam
pop
lods
fldenv
xchg
and
jl
outsb
jle
or
dec
mov
bound
or
xchg
push
sarb
popa
inc
hlt
ss
orb
mov
arpl
pop
jo
mov
shlb
jno
pop
push
mov
pushf
repz
xor
dec
shlb
mov
mov
stos
pop
in
or
cmp
in
test
xchg
cmp
in
es
shrb
add
push
and
xor
lcall
lahf
cs
jecxz
inc
notb
ds
push
int
scas
push
mov
lods
xchg
cmpsl
xor
and
mov
push
jmp
sbb
cld
shl
adc
xchg
or
sub
in
lret
lret
bound
add
dec
sbb
or
clc
ds
push
movsl
dec
idivb
xor
xchg
cmp
fildll
jnp
mov
inc
int3
shrl
xor
push
lret
repnz
ss
xor
test
xor
shl
mov
inc
and
adc
in
xchg
push
mov
sbb
add
ljmp
dec
lahf
shll
cmpsl
push
aaa
sub
push
dec
test
ret
jne
and
or
jno
dec
push
xchg
sbb
mov
cld
hlt
xchg
lcall
fs
or
xchg
inc
adc
cli
das
adc
sub
pop
sub
fsubs
cmpsl
dec
bound
mov
iret
cmpb
mov
xor
out
push
mov
mov
lret
bound
std
pusha
fldl2t
icebp
or
daa
push
mov
les
sarb
aam
pop
fs
sahf
jb
dec
mov
out
xor
sbb
push
les
das
inc
sbb
testl
popa
int3
pop
xchg
jae
mov
in
mov
faddp
imul
push
imul
into
out
jecxz
out
sbb
push
inc
push
rol
xchg
mov
icebp
push
jl
and
inc
jl
js
add
add
xor
lahf
dec
jl
cld
ficoml
cmp
push
xchg
bound
xchg
mov
lcall
aad
cmp
or
push
cmpl
inc
in
cwtl
xchg
aaa
add
insl
cwtl
vphaddubw
jp
add
flds
addl
fwait
mov
jp
adc
xchg
adc
rorl
dec
add
loopne
addr16
xorb
mov
sahf
ds
push
icebp
aad
xchg
imul
lods
inc
pop
sub
mov
push
mov
dec
shlb
enter
pop
rorl
jl
sbb
ret
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
jo
dec
push
sbb
in
ljmp
pop
mov
mov
sbb
jnp
lea
jmp
mov
mov
fiadds
cmc
subl
pop
ljmp
sbb
dec
nop
jge
dec
nop
and
xor
dec
stos
in
xchg
jo
add
adc
pop
js
sub
and
testl
lods
jb
popf
and
cli
push
push
movsb
and
jbe
cmp
pop
push
cmp
mov
js
repnz
or
xchg
mov
outsb
lods
invd
fistpll
adc
imul
addr16
inc
or
inc
pop
xchg
sub
dec
into
mov
xor
inc
mov
add
inc
insl
jmp
xchg
adc
pop
outsl
pop
pop
mov
push
ljmp
mov
cmp
xchg
int
lret
ja
dec
pop
jbe
std
es
ret
stos
pop
inc
sahf
cld
mov
in
cwtl
jg
fucom
sahf
inc
and
sbb
mov
mov
adc
inc
or
in
mov
clc
int
adc
fsubrp
cmp
fisubrl
lods
adc
int3
dec
scas
scas
outsb
popf
cmp
rcrb
push
fwait
add
mov
mov
in
add
mov
jg
rol
cmc
or
outsl
push
cmovge
loop
cli
movsl
push
scas
pop
outsl
mov
aas
loope
das
sahf
sub
mov
out
mov
cmp
mov
cmpsl
mov
push
cltd
mov
clc
sbb
jno
adc
jnp
nop
nop
mov
cs
mov
sub
lds
mov
mov
aam
cmp
test
inc
mov
xor
xchg
cld
xor
push
imul
adc
or
incb
sbbl
je
add
lock
push
pop
aaa
push
shrl
bound
test
xlat
xor
mov
cmp
out
mov
pop
pandn
sbb
cmp
arpl
imul
cmpb
loope
repnz
mov
pop
je
pop
dec
enter
mov
pushf
cmp
xor
mov
jecxz
inc
push
cmp
mov
sub
sub
shlb
jbe
mov
leave
lcall
push
testl
shrl
repnz
mov
or
or
dec
and
xor
gs
jns
scas
adc
ficompl
mov
xor
lods
and
movsl
sbb
mov
dec
in
sub
xchg
push
ds
push
xor
mov
pop
sub
mov
push
xchg
mov
inc
mov
lret
and
sbb
xor
xor
mov
scas
push
popa
pop
js
test
mov
push
inc
mov
sahf
sub
clc
ja
push
cmc
adc
and
sbb
lahf
pop
jmp
and
push
sub
xor
loop
push
aas
cmpxchg
in
or
aad
lods
and
orb
rorb
xor
mov
lods
jb
repz
or
out
ret
cli
out
stos
xchg
xor
divb
mov
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
stc
mov
and
sbb
jo
cmp
push
imul
scas
in
loopne
loope
out
sub
into
out
adc
int
xchg
test
scas
imul
andl
bound
sub
mov
pushf
xchg
gs
sti
mov
cmpsb
mov
mov
mov
jne
shlb
lods
mov
xchg
push
repnz
loopne
xchg
xchg
mov
pop
es
adc
mov
stc
jno
stos
shl
ret
repz
sbb
mov
rcl
add
push
adc
xchg
mov
dec
out
pop
mov
mov
mul
and
ret
pop
push
cmp
ret
lcall
rcrl
mov
or
enter
push
lret
add
add
inc
push
data16
and
enter
outsl
pop
pop
push
shll
jge
repz
sub
sub
pop
test
insl
xor
cmp
xchg
mov
mov
sub
les
jle
xor
cmp
adc
mov
orb
fs
ljmp
jbe
lods
sbb
imul
lea
shrl
xor
jns
out
sbb
inc
xchg
and
jg
sub
stc
push
stos
scas
inc
shll
lods
dec
mov
sahf
inc
inc
inc
lea
xchg
mov
int
enter
daa
and
in
push
mov
and
test
cmp
mov
sub
cmp
adc
loop
test
jo
pop
enter
mov
jmp
push
cmp
cmp
ds
ss
mov
dec
mov
sarb
xchg
stc
mov
pop
pop
repnz
mov
cmp
or
push
mov
cld
cmc
loop
call
aas
add
stc
mov
adc
xchg
or
cld
xchg
fstpl
adc
jo
adc
in
neg
cmp
jns
jle
push
aaa
outsl
cmpsl
imul
mov
xchg
jle
ds
adc
fs
test
shlb
jp
subl
loop
fs
jbe
sbb
mov
cmp
jo
mov
das
fs
loop
sbb
ljmp
and
loopne
push
jl
in
ss
lcall
mov
push
mov
int
jns
sub
cwtl
aaa
xchg
cmp
cmp
mov
mov
push
pop
and
lock
outsl
mov
push
or
imul
mov
div
xor
xor
mov
and
push
adc
inc
leave
add
scas
je
mov
pop
mov
xchg
cmp
mov
ja
jbe
daa
movsl
lods
push
mov
mov
les
ljmp
cltd
js
ret
push
fbstp
pop
jnp
insb
mov
test
mov
or
xchg
xor
cmpsl
mov
adc
push
xchg
cs
ret
fwait
ret
inc
cmp
mov
fwait
and
jae
bnd
sti
lahf
lea
sub
push
ljmp
enter
daa
out
xchg
mov
fsubp
jecxz
sbb
dec
or
enter
add
fld
mov
lea
clc
sub
lock
dec
imulb
sbb
in
icebp
popl
jg
push
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
sbb
mov
mov
loopne
loope
sub
cmp
dec
out
mov
fs
mov
or
loope
xor
inc
ja
sbb
setge
insb
jg
or
jp
lds
sbb
insb
es
push
sbb
repz
mov
bound
adc
xchg
sub
and
cmc
sbb
mov
mov
icebp
jp
add
mov
pusha
sarb
jmp
mov
xchg
jle
pop
push
lods
hlt
adc
cmp
insb
dec
jg
fcom
testl
jo
shll
xor
test
pop
mov
mov
int
or
or
sbb
setp
sub
stc
jbe
sub
sti
icebp
daa
out
adc
mov
dec
lock
mov
xchg
rcrl
test
or
mov
insb
cltd
xchg
lods
xchg
nop
sub
push
ss
sahf
pop
fucomip
dec
lret
or
sub
mov
fisttps
jecxz
leave
cmp
loopne
dec
dec
push
sbb
mov
and
dec
mov
push
sbb
stos
repnz
mov
in
arpl
fs
mov
out
cld
shll
in
fistpl
jmp
xor
xlat
add
sarb
sti
fcoms
stc
lds
xchg
stos
dec
insl
scas
in
push
mov
xchg
fldl
fs
push
mov
test
int3
enter
fstpl
rorl
das
in
aam
ds
sbb
mov
push
mov
lods
lods
xchg
inc
sub
and
mov
dec
lret
es
dec
and
or
push
jecxz
sti
pop
xchg
std
mov
addr16
push
push
push
test
test
dec
jns
inc
push
nop
inc
dec
enter
nop
lea
test
enter
and
sub
sbb
adc
jp
pop
dec
push
dec
out
adc
or
shll
dec
fcmovbe
icebp
pop
cmp
pop
fisubs
test
imul
pop
push
pop
jo
push
xchg
lcall
data16
lea
stos
push
jbe
sbb
fstpl
stc
setns
cwtl
ljmp
or
pop
xorl
push
xor
cli
aaa
push
mov
negb
pop
cli
xchg
out
out
pop
ljmp
mov
rcr
sub
sarb
mov
fisttpll
xlat
and
sbb
cwtl
out
fdivrl
mov
ja
sahf
push
adc
cmp
or
ss
cltd
pop
sbb
pop
inc
mov
push
pushf
out
imul
cli
sub
test
jo
cwtl
fbld
loop
insb
loop
lret
std
lock
inc
fwait
cmp
push
cmp
xchg
push
mov
sbb
inc
jnp
pop
jge
dec
es
jae
mov
mov
mov
pusha
hlt
xchg
sbb
inc
pop
daa
push
or
push
addb
jp
mov
leave
testl
fwait
dec
mov
sahf
xor
leave
jge
xchg
outsl
add
inc
dec
inc
aam
xor
mov
sti
and
shlb
and
lds
cmp
nop
std
or
roll
mov
push
not
mov
das
test
call
pop
shl
or
jmp
test
nop
lahf
jp
and
xor
test
imul
sbb
cmp
xlat
divb
jo
orl
mov
jno
mov
or
imul
dec
push
fists
std
jmp
data16
jmp
mov
addl
leave
jae
mov
fdivs
cli
outsl
add
sti
xchg
adc
data16
das
lahf
nop
jmp
dec
jae
fsub
inc
sub
push
rclb
xor
or
or
sahf
mov
push
jge
ss
xor
adc
test
mov
mov
lods
insb
fnstcw
push
pusha
xchg
mov
scas
out
jno
jl
nop
jmp
js
and
sbb
inc
lods
add
jo
arpl
sub
jge
or
and
sbb
iret
cmp
es
cmp
jecxz
lret
xchg
jb
inc
and
stos
inc
mov
nop
or
inc
and
lods
inc
fsub
sbb
jle
hlt
push
jb
mov
mov
cld
in
xorb
ja
and
test
xchg
lcall
xchg
dec
jae
out
jge
lret
mov
jbe
sti
daa
xchg
cmp
push
mov
push
fcoms
sarl
fsubrl
sahf
sub
or
sti
pop
xorl
ret
mov
mov
addr16
push
pop
xchg
push
in
xchg
xchg
cli
push
loope
jge
pop
aas
cmp
rolb
jbe,pt
dec
incl
int3
mov
std
xlat
and
cmp
movsb
push
adc
mov
jbe
jns
pushf
push
jo
andl
mov
mov
pushf
insb
and
jbe
mov
push
in
ret
cmc
shlb
aaa
dec
jno
ficoms
cmpsb
push
and
test
dec
mov
adc
mov
notl
leave
xlat
cmp
gs
xchg
shlb
aaa
jns
lods
cmp
jg
jmp
xor
and
xchg
sti
add
xorb
test
fistl
imul
nop
and
sbb
fmull
sahf
xor
scas
push
xor
pop
pop
imul
inc
add
stos
outsl
daa
fiaddl
jb
std
test
inc
fsubrl
mov
mov
jle
js
and
ret
xchg
xchg
dec
jmp
iret
jo
sarb
stc
dec
lahf
jmp
leave
mov
je
add
add
xchg
fcompl
call
jle
fnstsw
test
jb
pop
pop
mov
fwait
clc
das
jecxz
and
nop
xor
pop
pop
cltd
in
mov
push
movl
sti
adc
cmpsl
addr16
push
push
call
and
jg
mov
rcr
mov
aaa
and
lods
and
jns
insl
sbb
mov
testb
lahf
fsub
cmp
jmp
cmp
outsb
clc
adc
xchg
pop
xchg
adc
dec
sar
jo
cltd
add
push
cld
adc
jae
ljmp
fisttpll
mov
mov
xor
xchg
sbbl
adcl
pushf
add
pop
outsl
push
push
jb
xchg
cmp
adc
cli
clc
mov
ret
jle
divb
repz
adc
xor
and
adc
loope
test
pop
stos
loope
fdivl
imul
cmp
int3
and
adc
scas
xchg
fists
fcomps
lods
adc
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
cmp
mov
xchg
ret
xchg
cld
xchg
test
gs
cmp
push
xor
mov
and
ret
pop
inc
int
push
les
lods
push
sbb
test
push
and
stos
loop
mov
inc
fists
push
lods
incb
push
ds
in
or
lcall
xchg
cmp
popa
lock
fists
inc
mov
sbb
add
adc
xchg
sbb
cmp
jb
and
ret
add
dec
cmp
iret
addl
repz
loope
cltd
push
add
dec
jns
fistpl
push
call
mov
pop
fs
rorl
stos
insb
bound
fwait
add
rorl
lods
sarl
cltd
adcb
inc
pop
sbb
and
loope
jg
push
int
pop
fcmovu
int
mov
in
push
lcall
ret
daa
test
and
mov
xchg
push
pop
cmp
std
insl
mov
sub
clc
imul
mov
cli
push
sbb
mov
jle
repz
addr16
lods
mov
pop
or
pop
inc
fcompl
fwait
or
dec
fcoms
dec
lcall
xchg
inc
mov
cltd
pop
popa
nop
jnp
jbe
add
and
fistl
sbb
xchg
incb
jne
mov
pusha
mov
dec
insb
xor
pop
loope
into
push
js
push
jbe
loope
mov
sub
mov
sbb
mov
lea
inc
jbe
roll
cmp
cmp
jmp
pop
cmpsl
cmp
and
cmpsl
push
dec
push
xor
jae
mov
test
cmc
mov
scas
mov
fisubs
adc
cmp
repnz
popf
and
rcll
stos
and
jl
test
dec
pusha
fists
add
jecxz
sbb
fimull
push
rcll
jno
ret
lret
and
mov
xchg
outsb
cmp
add
adc
lods
pop
dec
sbb
mov
cmp
adc
fcomps
mov
nop
stos
fsubrs
xchg
andb
pusha
daa
cmpl
scas
xchg
push
push
mov
inc
push
push
mul
cmc
lock
mov
nop
lret
jb
add
insb
out
xchg
dec
test
cmp
and
lods
dec
mull
sub
fxtract
loope
pop
fistpl
in
xchg
add
sbb
pushf
sarl
pop
xchg
test
lret
cmc
into
jns
and
shlb
add
xchg
loop
inc
mov
mov
aas
pop
call
ret
fidivrs
shrl
fmull
insb
leave
aad
cmpsl
test
xchg
fnsave
shll
jg
popa
cmpsl
add
xchg
fsts
aam
pop
xchg
dec
jg
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
jo
sub
sbb
cltd
in
cmp
cmpsb
dec
je
rol
test
outsb
outsl
clc
inc
je
jg
movsb
movsl
fldenv
aas
out
ret
dec
mov
imul
jg
in
add
gs
add
decl
mov
lahf
sbb
or
add
push
xchg
inc
subl
cltd
push
and
mov
out
mov
push
inc
sbb
pop
xor
repnz
cmp
fsubl
mov
inc
mov
in
sbb
clc
flds
gs
jecxz
mov
sub
mov
xor
scas
ja
sub
dec
pop
add
push
cli
rol
out
mov
leave
loop
pusha
dec
cld
push
mov
stos
xchg
fs
push
xchg
iret
daa
adc
sub
push
sbb
scas
sti
leave
int
jb
stc
cld
cmp
les
or
dec
dec
fdivl
lock
cmp
jns
add
in
ds
mov
xchg
xchg
sti
xchg
push
lcall
test
fildl
or
mov
mov
nop
mov
leave
add
aam
or
bound
mull
in
push
pop
xchg
sbb
adc
shll
jns
pop
xor
pop
cmc
mov
in
scas
ret
push
insl
leave
jno
lea
fwait
pusha
dec
xchg
push
and
in
in
lcall
sbbl
andb
sub
or
cld
outsl
sbb
aad
inc
outsl
in
mov
mov
mov
addr16
aaa
push
cltd
mov
popa
sbb
xchg
dec
inc
sbb
ss
jo
aam
lea
dec
pushf
cmpsl
pushf
jnp
cld
add
and
into
add
scas
xor
add
lds
out
ret
inc
pop
sub
bswap
xchg
xchg
adc
scas
arpl
xchg
and
movsl
add
pop
aaa
jb
dec
mov
mov
lahf
ja
je
cltd
das
xor
push
clc
in
lock
mov
jl
ja
ret
ss
mov
dec
shr
movsl
movsb
pushl
icebp
dec
jp
cli
fadds
cmp
mov
test
in
rcll
jmp
ds
mov
hlt
stc
dec
xchg
mov
leave
jne
mov
pop
scas
mov
mov
mov
sarb
repnz
lds
dec
mov
jmp
adc
clc
mov
mov
jmp
pop
fdivr
dec
and
mov
pop
stos
movsl
pop
dec
dec
or
scas
lret
mov
pushf
subb
dec
mov
xlat
adc
lret
jge
lahf
imul
cltd
or
jnp
addr16
rolb
mov
mov
jnp
adc
dec
and
arpl
xchg
cmp
or
es
mov
xor
push
xchg
ret
xor
imul
add
add
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
outsl
popa
jo
and
sbb
xchg
sbb
xorl
dec
add
pop
sahf
sub
fsub
cmp
mov
mov
inc
mov
js
add
aam
leave
lret
addr16
or
out
jp
cmovo
jg
pusha
mov
add
cmp
sbb
test
mov
pop
out
cli
jle
and
sti
jge
mov
push
sub
ds
lods
adc
loope
dec
xchg
inc
or
xchg
jno
sub
inc
loop
add
sbb
test
lods
mov
mov
xlat
in
mov
jge
cmpsb
mov
jb
xor
add
xchg
lock
or
shr
mov
dec
xor
push
cmp
shll
in
sti
divl
test
pusha
jg
cli
dec
pop
in
cmpsb
nop
cmp
daa
mov
jmp
jmp
jp
enter
fimull
jae
ret
stos
fs
add
inc
lods
mov
push
ljmp
popa
cs
or
pop
jae
xchg
xor
mov
js
data16
fisubrs
repz
test
adc
arpl
int3
sub
push
scas
sub
sbb
lret
stos
sbb
jge
out
mov
and
jo
xchg
lahf
cmp
jno
sahf
push
mov
ret
mov
and
clc
gs
adc
pop
mov
add
push
or
test
call
fs
inc
jae
inc
pusha
push
and
push
test
jno
sub
leave
cmpsb
scas
test
dec
and
xor
psubsb
jb
repnz
push
mov
imull
ds
and
xchg
jg
inc
add
lods
mull
and
or
ljmp
out
cmp
popf
or
mov
addr16
fstl
imul
cwtl
lahf
jno
jge
in
xchg
ss
rorl
sbb
daa
jmp
xchg
stos
add
sarl
enter
cmp
cmp
add
bound
lods
adc
jecxz
rcr
sbb
outsl
push
popa
sbb
call
mov
fldcw
xorl
pop
cs
inc
sub
jmp
push
pop
cmp
and
mov
jo
fnstsw
pop
dec
cmp
decb
movsl
out
xchg
pushf
mov
call
lret
jo
push
iret
and
push
fldt
push
mov
push
lret
cmp
es
add
or
shl
mov
inc
in
sub
adc
lahf
xor
cld
or
cmp
push
addl
pop
jno
jne
inc
xchg
push
lcall
pop
pop
xchg
repz
stos
pop
mov
jnp
mov
inc
sbb
scas
inc
cbtw
xor
mov
inc
in
or
ss
test
or
sbb
ss
push
subb
jne
enter
scas
cwtl
sub
in
incl
add
addb
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
subl
push
sbb
sbb
cwtl
dec
je
fidivrs
mov
xchg
mov
sbb
cmp
lret
jo
movsl
lods
daa
push
inc
lods
popa
adcl
loope
enter
sbb
mov
adc
daa
les
sub
out
movsb
lds
out
inc
dec
jnp
into
jg
pop
test
sub
ss
jg
push
mov
stos
mov
xor
lods
jns
leave
xchg
dec
xor
data16
ficoml
and
xchg
and
aad
mov
out
pop
out
neg
dec
cmp
fdivl
xor
cld
or
cmp
shr
cmp
jl
mov
fwait
mov
in
divb
iret
and
icebp
out
pop
mov
jg
movsb
mov
or
xchg
and
out
stos
mov
shl
or
dec
cmp
xchg
mov
xor
mov
or
mov
rcll
xor
cmpl
adc
imulb
jne
and
in
outsb
jns
fsubrp
loope
fstl
lock
pop
and
xlat
push
daa
cmc
bound
push
inc
pop
jbe
lods
outsb
xchg
int3
scas
add
push
and
in
mov
test
pop
inc
and
loopne
xchg
dec
gs
div
out
fnsave
sub
mov
fsubs
mov
cmp
ds
push
push
mov
gs
shl
dec
mov
fsubrl
jae
scas
popl
stos
cmp
orl
hlt
pop
aaa
subb
push
adc
aam
push
xchg
mov
arpl
sbb
movsb
je
dec
aam
mov
in
enter
rcrb
out
mov
push
jns
enter
shll
mov
sub
sti
scas
mov
es
jl
push
or
push
jecxz
mov
out
add
movsb
pop
mov
aam
pusha
and
mov
popa
xor
inc
push
loop
mov
and
xchg
icebp
mov
int3
lods
xchg
mov
loope
lahf
test
cmp
test
roll
adc
clc
adc
mov
adc
xor
xchg
gs
mov
and
fwait
mov
cmc
outsl
bound
loopne
jne
mov
xchg
mov
push
stc
std
mov
or
pushf
mov
loop
adc
sub
rcrl
pop
add
push
out
movsl
mov
add
clc
add
faddl
inc
ret
pop
inc
jecxz
jg
gs
pop
cmpsb
and
push
cmpsb
and
jbe
mov
pop
pop
js
lea
lock
call
mov
mov
xor
or
int3
dec
mov
xchg
fwait
cs
inc
mov
movsb
std
sbb
add
nop
dec
ficomps
mov
xor
mov
aad
sub
add
pop
and
mov
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
xchg
xor
sbb
repz
and
push
test
pop
and
jg
mov
ret
mov
cmp
aas
iret
adc
xchg
adc
mov
sub
jne
dec
fadds
cmp
std
cmpsb
movb
dec
xchg
mov
mov
shll
fistps
in
or
pop
adc
inc
mov
in
test
test
jae
scas
or
xor
push
xor
xor
incl
sbb
mov
movnti
jp
add
sub
in
pop
xchg
cmp
scas
sbb
pop
pop
inc
sub
sbb
fdivl
or
mov
icebp
call
pop
push
push
jle
das
outsb
mov
xchg
shl
test
mov
fidivrs
ja
and
cmp
cmc
stc
push
cmpsl
adc
cltd
dec
cmpsl
adc
dec
cmpsb
movsl
mov
leave
rclb
xchg
sub
iret
jp
fs
into
jae
dec
neg
sub
std
nop
test
or
push
lret
dec
icebp
pop
sbb
mov
jo
pop
daa
add
andb
fldl
xchg
add
mov
fmul
dec
in
aas
xor
iret
stc
fcompl
mov
aaa
jg
xchg
xchg
mov
cmp
mov
scas
icebp
sub
xor
xor
incb
pop
test
aaa
xchg
das
lds
imul
lahf
xchg
in
out
xchg
xchg
xor
je
jge
dec
das
jle
adc
cmp
and
lock
insl
mov
sub
call
jno
jbe
jg
add
lcall
xchg
iret
daa
jbe
push
sub
dec
in
cmp
add
das
mov
pusha
adc
pop
push
daa
je
xchg
and
mov
je
test
xchg
enter
mov
or
mov
push
inc
xchg
push
push
add
loopne
or
mov
iret
in
stos
call
inc
or
sbb
jecxz
mov
push
pusha
loopne
xchg
pop
mov
hlt
cltd
data16
sbb
push
clc
mov
fstps
sbb
in
stos
aas
hlt
addb
and
mov
xchg
mov
add
mov
dec
pop
push
sbb
and
or
test
mov
pop
call
mov
xor
cmp
outsb
out
mov
pushf
ret
adc
testl
pop
add
push
push
cmpsl
push
loope
cmp
dec
sub
out
je
jnp
pop
nop
inc
inc
loopne
out
xchg
jge
insl
push
cmpb
xchg
loope
mov
mov
popf
mov
mov
repnz
mov
add
cmp
lds
add
mov
sbb
push
fimuls
rolb
mov
pop
jo
test
mov
lock
fidivrl
addr16
out
adc
and
mov
ljmp
imul
addl
scas
rolb
add
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
xchg
mov
sbb
sbb
mov
push
mov
scas
xor
movsb
outsb
lcall
mov
pop
test
xchg
scas
push
sub
popf
insb
fnstenv
lret
in
loop
stos
cld
cltd
pop
or
mov
popa
mov
addr16
jbe
rcrb
xchg
js
test
jbe
imul
stos
faddp
in
in
or
ret
js
outsb
in
je
add
push
add
mov
or
push
xor
fdivs
jbe
movsb
push
push
and
xor
cmp
and
in
pop
std
sbb
movsb
sar
pusha
add
pop
in
xchg
rorl
adc
dec
push
sbb
inc
mov
or
andb
fstpt
mov
fmuls
mov
sbb
cmp
fwait
mov
pop
xchg
fistpll
gs
push
sti
add
cmp
hlt
dec
andb
js
mov
rolb
pop
and
mov
xor
in
jns,pn
push
movsb
arpl
add
pushf
shlb
adc
inc
jno
fdivrl
jno
inc
hlt
pop
rclb
jne
jl
arpl
dec
xchg
mov
test
push
gs
sbb
out
bswap
adc
fs
dec
sub
dec
sahf
push
mov
pop
sahf
inc
outsb
std
cmp
dec
and
sub
cmpsl
push
pop
xchg
std
cld
ss
test
out
push
mov
repz
lahf
dec
sahf
lret
cltd
add
cmc
js
repnz
out
sub
fstpt
jne
jbe
xchg
xor
lret
sbb
add
xlat
call
jl
repnz
dec
lea
xchg
sarb
lock
sub
rcr
xor
dec
sbb
mov
jmp
jecxz
clc
mov
jo
or
aad
aaa
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
or
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
xchg
and
push
daa
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
shlb
add
and
inc
add
add
and
inc
add
es
add
add
inc
add
inc
add
inc
add
push
movsb
scas
or
movsb
shlb
inc
add
inc
add
es
add
inc
add
es
add
inc
add
inc
out
cmp
inc
add
inc
add
and
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
scas
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
mov
inc
add
loop
js
lcall
and
add
mov
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
cmp
dec
add
add
xor
add
add
add
add
add
add
add
adc
add
enter
in
add
testb
add
xchg
add
add
dec
xchg
add
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
test
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
cmp
add
dec
mov
add
add
js
add
mov
add
lods
mov
add
add
fimuls
add
cli
mov
add
mov
add
add
mov
add
add
dec
mov
add
add
push
add
orb
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
mov
add
add
pop
mov
add
add
xchg
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
xchg
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
and
add
lea
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
test
add
test
add
xchg
add
xchg
add
add
dec
xchg
add
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
test
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
mov
add
add
cmp
add
dec
mov
add
add
js
add
mov
add
lods
mov
add
add
fimuls
add
cli
mov
add
mov
add
add
mov
add
add
dec
mov
add
add
push
add
orb
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
mov
add
add
pop
mov
add
add
xchg
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
xchg
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
add
