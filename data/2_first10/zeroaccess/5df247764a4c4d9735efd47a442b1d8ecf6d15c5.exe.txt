push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
add
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
int
cs
test
rcr
cmp
inc
call
in
xchg
das
ret
int3
fnstcw
not
loope
sti
cmp
out
mov
out
orb
cli
jmp
fstpt
fsub
inc
enter
fmull
xchg
shl
cs
clc
lret
cmp
cld
cmpl
out
lret
in
cld
out
and
cmc
into
icebp
cmp
cli
ret
idivb
mul
hlt
cmc
test
in
cli
out
sub
hlt
xlat
fld
test
rcr
ffreep
lock
and
cli
out
in
jmp
rclb
enter
cmp
int
cmp
hlt
out
in
int
xchg
fstl
out
lock
cld
aaa
std
aam
cmp
cld
incb
fcmovu
xchg
xchg
into
aas
ss
xor
shr
out
std
rcr
cld
std
fimull
xchg
loopne
clc
leave
ss
enter
shlb
int3
fdiv
ficoms
fsubrp
add
add
rcr
fcmovnu
mov
mov
jle
or
jle
icebp
repz
out
in
xlat
fcmovnb
test
lock
mov
int3
shr
out
into
xor
stc
rcl
filds
lret
faddp
lret
fucomip
mov
into
xor
xor
aad
sbb
aas
shl
shr
filds
into
loop
out
mul
cmp
ss
cmp
xor
lret
fstp
sti
std
idiv
in
in
loop
out
jecxz
in
hlt
clc
leave
cmp
aaa
clc
cmc
in
clc
fcmovu
repnz
in
xchg
hlt
roll
int
fsubrl
call
mul
fdiv
sti
mov
sti
and
lock
ljmp
cld
cmp
hlt
xlat
aam
int
out
std
shl
fsubr
test
mov
into
leave
out
test
cs
in
shll
rol
ret
faddp
ds
xchg
in
ret
mov
lret
push
out
mov
fdecstp
sti
out
in
icebp
cmp
icebp
cmp
xchg
fdivp
lret
in
out
xchg
out
xor
out
xor
enter
loope
cmp
aad
out
sti
int3
loop
fmulp
xchg
shll
in
in
fdiv
lret
cmp
rolb
in
test
stc
in
mov
into
xchg
xchg
ret
jmp
lock
in
ds
jecxz
ds
loope
sub
ljmp
out
repz
lock
in
call
into
aad
movb
jmp
leave
mov
icebp
xchg
loopne
in
hlt
jmp
fmul
cli
ss
xor
ss
xacquire
mov
fldl
icebp
xor
in
repnz
cli
cmp
shl
cmp
cmp
cld
enter
xchg
lea
enter
in
idiv
cmp
shr
fdivrp
test
aad
fadd
into
lock
jecxz
or
aam
imul
cli
cmp
shl
ds
loopne
rol
ret
ret
out
vpaddsb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
jg,pn
sbb
jle
or
jle
lea
sar
cmc
out
lock
out
cmp
xor
loop
filds
lock
in
in
nop
xchg
xchg
xor
loop
ret
enter
rcr
jecxz
shl
filds
mov
hlt
cmc
jecxz
shl
hlt
xor
xlat
fmulp
shl
into
lret
iret
std
ret
cmpb
in
idiv
rclb
ror
int3
loope
fcmovnbe
jmp
stc
iret
lret
loope
sti
fucomip
addl
hlt
aam
cli
cmp
cmp
neg
sub
push
std
xlat
mov
loope
ljmp
out
in
leave
out
out
into
sbb
neg
xabort
and
fcmove
adcl
jecxz
aad
hlt
int3
iret
xor
ss
aad
loope
vpsraw
mov
nop
lret
nop
orl
cmp
icebp
fcomp
icebp
aas
out
iret
jmp
jecxz
sbb
call
clc
cld
iret
int
xlat
lock
fistpll
sti
out
adc
lret
lock
iret
lret
mov
out
in
fdivl
fidivrl
jmp
int
repz
std
jmp
xchg
repz
clc
jmp
rcr
out
ret
testl
int
repz
aas
ret
lret
xor
cld
icebp
call
sar
iret
rol
sti
sti
ror
out
loopne
xchg
vpsllq
shll
xor
sti
loop
ds
mov
fdivr
neg
jmp
into
jmp
jmp
in
cli
shl
std
cld
and
in
filds
fmul
hlt
enter
lock
cli
jmp
int3
jmp
ss
bnd
jmp
int3
leave
in
repnz
shlb
xor
xchg
stc
add
stc
rorb
in
imul
out
xlat
into
lock
fsts
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fildl
add
jle
add
aad
cmp
in
hlt
ffree
in
jecxz
loop
fucom
loope
repz
in
shl
lret
cmp
fcmovnbe
xlat
cmp
sti
lret
ret
xlat
lock
out
icebp
out
repnz
xor
enter
ror
std
cmc
out
fadd
icebp
repz
std
lret
sti
loopne
shr
nop
iret
icebp
in
lret
cmp
sti
rcr
int3
shl
jmp
in
shr
nop
clc
aaa
rcr
into
cmp
xlat
xlat
fsubrp
out
shl
test
std
leave
clc
leave
fsubr
nop
xchg
out
lock
std
aaa
sti
iret
in
std
cmp
into
into
xchg
add
enter
icebp
mov
shr
xor
out
call
cmp
in
out
lea
out
clc
sub
icebp
sar
cmp
clc
repnz
cmc
aam
repnz
into
vpmaxub
into
mov
icebp
out
hlt
hlt
iret
cmp
repz
cmp
sar
cmp
cli
cld
cmc
xlat
in
xlat
in
jmp
hlt
xorb
ror
into
sti
fsubr
ret
clc
xchg
movl
int
sub
xor
fldl2e
hlt
not
cmp
in
add
cld
xlat
fstp
cld
mov
std
cld
call
iret
loop
out
in
stc
enter
lret
xor
lret
in
out
loop
fsubrp
out
shl
shl
call
out
cmp
in
fldl
stc
fucomip
in
test
mov
shlb
rcr
xor
cmp
lock
xchg
test
jmp
icebp
test
ror
jmp
xor
mul
int
out
test
mov
aad
jecxz
clc
cmp
stc
aad
sar
fistpll
shl
in
xchg
xchg
int
into
int3
mov
ret
lock
aaa
clc
fcomp
cmp
lret
loopne
hlt
and
rcr
jmp
cld
sbb
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
sbb
sbbl
jmp
loopne
xchg
loopne
ret
out
std
inc
out
ljmp
div
leave
test
clc
addl
cmp
into
aad
aaa
test
fmull
xchg
fcmove
mov
in
out
jmp
fldl2e
cmpb
fiaddl
in
in
loope
cli
in
out
out
rorb
ss
clc
std
cmp
fadd
fnsetpm(287
lock
fldz
iret
in
mov
in
test
loope
jecxz
vcvttpd2dq
shl
cli
test
cld
jecxz
icebp
cmc
out
lret
dec
in
loope
icebp
sub
ss
shl
xor
iret
loope
aad
not
mov
jecxz
rcl
loopne
mov
clc
cmp
int
rcl
out
not
iret
jecxz
fdiv
in
fisttpl
testb
int
iret
iret
cmp
cmp
test
and
cmp
cmp
cld
jecxz
jecxz
repnz
out
in
sti
in
std
aam
iret
shl
sbb
mov
loop
stc
sub
test
aad
enter
incb
aad
aam
stc
loopne
test
fildl
xchg
test
jecxz
shl
cmc
out
test
aad
mov
clc
loope
shl
xchg
loop
out
lret
sti
shl
jmp
stc
cld
out
ret
in
test
cld
mov
and
lret
out
cmc
cld
int3
repz
out
in
rcl
cli
ret
sbb
ror
fninit
int3
shll
hlt
rol
lret
idivl
clc
idiv
std
test
jmp
out
rolb
iret
in
lret
rcl
std
cmp
cmp
fdiv
xchg
mov
leave
neg
fsub
in
adc
xchg
clc
jmp
cmc
fmulp
fnstsw
aam
cmp
in
fdivr
lret
sar
int3
in
out
orb
repz
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
adc
or
or
jle
out
sub
out
loop
shl
test
ror
test
adc
xchg
xchg
das
in
not
sti
jmp
repz
cmp
fcompp
xlat
cli
loope
out
sti
lret
stc
iret
les
in
fcomp
out
sti
fucomi
in
ds
xchg
hlt
test
out
flds
jmp
fcomp
les
call
stc
cmp
rcr
out
in
int3
loop
icebp
mov
sar
int3
shr
aaa
out
aaa
repz
sarl
cli
int
fldl
ffreep
in
cmp
shl
out
idiv
sub
lret
cld
sar
cmp
aas
roll
ret
sti
out
into
in
iret
mov
fstl
aaa
cli
cld
leave
ljmp
ret
fxch
addb
xchg
aaa
fcmovne
cmc
enter
fcmovnu
call
mul
loop
sti
mov
out
lock
jecxz
into
out
lret
cs
cli
sar
int
fcomi
push
iret
mov
filds
mov
sarl
in
fucomi
cmp
loope
loop
in
orl
out
addl
xlat
ss
fcmovnbe
in
in
fsin
rcl
fsub
mov
fucomip
out
out
xor
shr
xor
leave
ds
aam
and
cmc
fcmovb
test
hlt
int3
orl
xchg
enter
out
fcomp
std
stc
in
sbb
repz
fcmovnu
fiadds
icebp
loop
lret
xlat
cmp
lret
sti
out
cmc
std
div
loop
call
loope
out
xchg
mov
cmc
lret
leave
stc
aas
ds
stc
cmpl
rolb
in
xlat
xchg
in
ljmp
jmp
repz
cmp
mov
int3
jmp
hlt
rol
xor
cli
fnstsw
ror
leave
cmp
fldlg2
neg
aas
ret
mov
adc
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
jl
adc
or
or
jle
ret
fmulp
incl
mov
fcmovne
ror
out
aam
in
int
cli
test
loop
xchg
leave
loop
in
out
leave
repnz
std
xchg
cmp
shr
xor
fnstsw
icebp
clc
fcmovu
mov
nop
mov
out
xor
out
aad
clc
aam
int
cmp
shlb
fdivrp
fiadds
fucom
or
cld
in
mov
das
cmp
lock
cmp
cmp
icebp
icebp
repz
ret
rcr
sti
test
sub
mov
ror
cmp
sti
cmc
call
fsub
and
mov
test
jmp
vpor
iret
hlt
rcr
iret
fdiv
in
and
mov
mov
nop
test
fbstp
out
leave
aaa
test
out
mov
loope
mov
enter
xchg
hlt
jmp
ss
repnz
ffreep
out
fidivrs
orb
fmull
ljmp
cmp
cmc
lret
loopne
out
xlat
call
std
jmp
xchg
aam
out
iret
not
aam
cmp
aad
ds
int3
leave
sub
ljmp
cmp
mul
out
ror
stc
std
stc
div
jecxz
rorb
adc
ljmp
out
cld
xor
out
in
ljmp
rol
lret
xor
leave
into
xlat
lret
clc
test
cmc
loop
rcl
int3
mov
test
xchg
incl
sub
ss
icebp
out
in
cmc
iret
loopne
icebp
repnz
fmull
enter
out
icebp
in
out
ss
cmc
add
mul
sti
aas
rol
mul
mov
in
fxch
jmp
test
out
xor
xor
aad
sar
lret
cld
ret
std
iret
sub
aam
sub
int3
in
xchg
xlat
in
add
add
add
fcom
fstp
je
xchg
or
loopne
jle
or
jle
jmp
int3
call
cmc
shr
clc
rorl
icebp
test
sub
add
lock
iret
jmp
in
fcmovb
std
mov
in
fcmovu
ljmp
mov
sub
cmp
or
lret
icebp
fdivp
cld
sub
fdivr
mov
iret
addb
xor
out
leave
enter
sarl
cmpb
enter
ljmp
repnz
shl
in
enter
int
in
sarl
rcr
xchg
test
loopne
loop
mov
out
in
shlb
out
enter
loope
rcl
ffree
sbb
cmc
loopne
int3
into
fstp
mov
mov
lock
cmc
in
int3
jmp
aaa
hlt
in
fucomp
repnz
out
xlat
shr
xchg
call
mov
sub
shr
iret
sti
fbstp
in
and
ret
int
lret
mov
jmp
shr
out
in
aam
mov
xlat
loopne
fildl
rcl
in
in
sarl
into
ss
hlt
idivb
test
mov
jecxz
lret
mov
int3
ret
ror
fisttpll
out
call
cmp
ds
std
sti
idiv
loop
addb
aam
in
rcr
ljmp
stc
rcr
in
cli
loop
jecxz
faddl
cs
sub
ljmp
clc
iret
shl
in
int3
sar
call
fisttpl
in
rcr
cmc
aaa
cli
rcr
out
test
faddl
in
out
and
xchg
ljmp
repnz
out
sar
stc
fisttps
out
fsub
lret
loop
aam
call
stc
fcmovne
sarl
repnz
fsub
sar
in
lret
jecxz
ljmp
loopne
imulb
int
in
icebp
aaa
ljmp
xor
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
dec
out
push
jle
or
jle
repz
loop
orb
jmp
repnz
ror
ljmp
push
jecxz
addl
hlt
std
rcll
int
fmul
aad
clc
iret
neg
repz
loopne
clc
loopne
xchg
loope
call
xor
or
cmc
shl
fsincos
test
fsts
aam
xor
int3
int3
lret
call
fnstsw
rol
sti
icebp
icebp
hlt
dec
mov
in
in
ljmp
leave
out
xlat
repnz
fiadds
add
rcr
xchg
sti
jmp
jmp
ror
stc
int3
cmp
aas
rcl
fldl
test
leave
xchg
xchg
pushl
xor
int3
xlat
stc
leave
hlt
repz
jecxz
cld
clc
call
into
fucomp
fisttpll
aaa
cmc
in
test
iret
aam
cmp
test
loopne
addb
test
out
addb
lret
in
repz
fidivrs
shl
aas
incb
mov
int
cmc
repz
shrl
out
xor
out
out
fdiv
loope
repz
out
fucomp
xlat
ljmp
jmp
aam
aas
lret
cmc
cmp
int
fiaddl
in
cld
hlt
fsub
loopne
xor
cmp
in
aad
std
jmp
out
loopne
rol
idiv
repz
test
int
repz
fcmovnbe
ljmp
stc
testb
out
nop
into
test
loop
aad
cmp
rcr
div
ror
cmp
add
test
aam
sti
inc
std
repz
mov
int
jecxz
int
repz
aam
jecxz
adc
sti
xchg
in
icebp
hlt
iret
fucom
sub
std
jmp
ss
stc
or
lock
mul
fcmovu
xlat
enter
filds
mov
mov
mov
jmp
leave
ret
int
int
mov
jnp
iret
cld
adc
or
jle
popl
jmp
in
cmp
std
repnz
fcmovb
shl
loop
aas
testb
nop
in
in
in
sar
xor
leave
icebp
fcmovnu
stc
in
dec
call
sti
fimuls
fimuls
xor
imul
out
iret
ffree
div
test
out
call
xchg
fldl
enter
repz
leave
fstpt
fcmovnu
aam
shl
ret
fdivr
fsub
cmp
fsubp
ret
out
aam
shl
cld
lock
aam
enter
test
int
xchg
xor
in
int3
in
iret
fcmovnbe
fdivr
cmp
addb
iret
in
xchg
in
ret
fxtract
fucomp
out
loopne
loopne
faddp
aas
in
jecxz
enter
xchg
orb
lock
jmp
xor
cmp
imul
loopne
rcr
loope
jmp
decb
sub
xor
lock
into
std
aas
ror
in
mov
out
lret
nop
mov
lock
xlat
lock
int
cli
xlat
repz
xor
jecxz
hlt
loope
in
stc
jmp
stc
xchg
nop
mov
out
out
iret
icebp
clc
icebp
cmp
int3
cld
fdiv
addb
out
fdivr
jmp
int3
into
mov
addb
fdivr
xor
cmp
sti
rcl
in
xchg
out
in
xchg
mov
xor
cmp
iret
ret
hlt
fsubrp
loopne
out
xchg
clc
lret
ficoml
loopne
enter
fsubr
jmp
enter
rol
shl
loop
cli
ret
int
jmp
out
lret
int
aad
jmp
into
cmp
ret
sti
icebp
repnz
out
into
test
int3
lock
xchg
in
out
repz
cmp
mul
and
fcmovne
in
xchg
repz
ret
cmp
jmp
into
shlb
into
jmp
aam
mov
scas
bound
or
jle
cld
cmp
lds
sbb
jmp
sti
jecxz
clc
loope
loop
mov
ret
xor
stc
not
into
lret
rol
ret
hlt
xchg
jmp
lret
div
loopne,pn
sub
xor
icebp
clc
loope
rol
shl
mov
lret
mov
rorl
call
repz
out
cmp
xchg
cld
fucomip
loop
iret
xchg
fdiv
out
clc
xor
fmulp
xor
loope
clc
cld
repz
xlat
xlat
leave
mov
into
sub
rcl
neg
sti
out
loop
cmp
jecxz
add
in
into
ror
ljmp
fmul
enter
out
aas
and
idiv
fsin
orl
cmc
xor
hlt
and
clc
in
call
nop
xchg
call
call
cs
dec
iret
roll
xlat
mov
cld
xor
sub
cmc
icebp
ror
jecxz
aad
icebp
out
xor
cmp
cmp
test
fcom
in
int3
out
fimuls
in
sti
iret
out
cmp
aam
lock
std
jecxz
jmp
ljmp
std
xchg
loope
into
lock
idivl
ljmp
inc
xrelease
ljmp
bnd
vpslld
xor
cmp
fdivrl
fcomip
xlat
ljmp
mov
mov
repz
fidivrl
aam
icebp
mov
fsubr
les
xchg
loope
repz
xor
clc
std
fucom
xlat
out
sti
hlt
xchg
lret
mov
fld
repnz
int
cli
int
stc
div
iret
shl
fcom
jecxz
out
loop
loopne
test
in
in
aad
imull
std
ror
rcr
cld
rorb
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
xor
jle
or
jle
ljmp
int3
cmp
xor
rcl
aad
int
out
clc
loope,pt
xchg
leave
cli
call
lret
fdivs
fidivs
ss
out
lret
in
in
testl
repz
sar
rcr
jmp
xlat
out
mov
leave
out
mov
mov
in
mov
hlt
jecxz
in
xor
leave
std
xlat
in
vpaddd
mov
test
iret
jmp
test
icebp
cmc
cld
jmp
mov
lret
cmp
out
lret
lret
sti
fdivrs
icebp
cmp
shl
ljmp
out
test
mov
loop
ret
in
leave
ljmp
cmp
cmp
sti
fcmovb
mov
mov
jmp
loope
xor
in
out
fsubr
adc
cmp
mov
out
clc
cli
movl
ljmp
ret
and
repnz
vpaddb
test
xchg
fsubp
aam
rol
cmp
ljmp
aam
out
jmp
xlat
in
mov
push
nop
mov
ror
iret
iret
int
ror
ds
rol
cmp
leave
les
in
repnz
in
ret
int
out
cmp
jmp
jecxz
out
lret
ljmp
shl
sub
xor
ror
ss
out
aam
orl
rcl
imulb
jmp
cmp
aaa
ds
rcr
into
ret
std
leave
fsubr
mov
int
incl
cli
hlt
int3
repnz
enter
loope
rol
cli
shl
fcmovnu
enter
fstl
into
out
repz
xor
fdivr
lock
xlat
loopne
cmp
shl
lock
in
in
aaa
lret
fcmovne
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
ss
out
lret
clc
repnz
rcr
inc
lret
mov
out
fmulp
in
mul
xor
rcr
aad
int3
ret
loopne
les
cld
fucomip
mov
jmp
out
aaa
repnz
fxch
jmp
cld
into
sar
fstp
rcr
hlt
movl
loop
xor
hlt
xor
xor
fcmovne
cmp
incb
mov
loopne
out
jmp
lock
out
in
out
sti
lret
enter
cld
cmp
adc
addb
out
test
test
test
out
lret
shl
out
ljmp
repz
jmp
out
sti
xchg
int3
repz
out
loopne
fdiv
clc
out
fdivp
cmp
idiv
stc
in
fisttpl
call
repz
into
aad
hlt
ror
fcmovnu
fidivrs
test
xchg
mov
lret
mov
mov
test
xchg
in
sub
xor
cmp
leave
aaa
xor
shr
xor
aad
ret
std
xchg
and
out
shr
loop
out
das
xor
repz
rcr
fistpll
dec
xlat
out
test
leave
lock
rol
enter
icebp
in
fsincos
out
jecxz
jecxz
out
jmp
sub
fcmovnu
nop
repz
out
int3
aaa
shl
rcl
fstpt
neg
shl
repz
fstp
lds
ljmp
xlat
sub
stc
cli
in
out
cmp
aas
lock
sbb
std
xchg
in
fdivrp
xor
int3
into
aad
std
ss
fcmove
ljmp
xchg
mov
mul
out
mov
ret
ljmp
test
std
jecxz
filds
imul
call
repnz
lret
cmc
cmp
cmp
hlt
hlt
loope
out
sar
vpavgb
mov
sub
sub
repnz
enter
aaa
cmp
in
filds
orb
leave
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
out
xorb
jle
jecxz
test
shr
in
fidivl
call
cld
ds
xchg
mov
in
enter
loop
aad
out
leave
aam
jmp
ror
jecxz
out
repnz
jmp
lret
in
fmul
loopne
mov
jecxz
into
lret
cmc
cmp
into
clc
repnz
aam
test
in
leave
fisttps
int
ljmp
ret
movb
out
jmp
aad
xor
ljmp
clc
ret
cmp
cli
fadd
cli
lret
mov
in
out
mov
shl
repz
imul
xlat
cmp
flds
shl
lret
mov
in
int3
out
xchg
jmp
mov
ljmp
int3
cmp
cmpb
loope
fstp
xor
in
repz
shlb
clc
lret
sar
out
lret
fcomi
iret
ret
aas
test
out
sub
mov
xor
imul
stc
in
jmp
cmp
sbb
ret
xchg
movl
loope
dec
ljmp
jmp
lret
shr
fnstcw
call
fcmove
in
lret
shl
repz
mov
cmc
in
clc
xor
in
stc
out
call
rcr
xchg
xlat
fmul
cmp
test
fmul
ror
mov
aas
in
rol
cld
out
jmp
nop
rcr
out
into
xchg
shr
xor
lret
not
call
shl
clc
loope
ret
clc
sti
ljmp
fldl2e
cmp
stc
xlat
std
sar
fucom
cli
xlat
movb
int
in
in
xchg
aad
int
xlat
ror
hlt
rcl
icebp
lock
ret
stc
jecxz
mov
sti
mov
rcr
cli
in
xchg
icebp
loope
icebp
xor
aad
shl
int
iret
ror
icebp
std
xchg
loopne
div
leave
fmul
xchg
jmp
rcl
stc
lds
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
xchg
jl
sbb
or
jle
xor
xor
in
fsubrp
fcmovnu
test
fldl
out
repz
out
jmp
rolb
aas
jmp
cmp
sti
xchg
ljmp
fst
fidivrl
cmp
ret
fst
fadd
call
incl
lret
xchg
aam
shrb
xor
jmp
loope
in
out
out
and
cli
sub
int
std
shr
icebp
cmp
fld
hlt
fdivr
ds
filds
aam
mov
mov
mov
fdivp
fdivp
in
ror
out
lret
jmp
lock
cld
sarb
fdiv
aad
std
loop
sbb
mov
lret
in
cmp
in
repz
cmp
stc
fucom
cld
fstp
fneni(8087
mov
out
in
mov
sub
ss
fnstsw
loop
ror
lea
fcmovu
ljmp
lock
int
flds
clc
repnz
xchg
lock
lret
call
xor
fsubp
loope
stc
jecxz
cmc
fcmovnbe
std
jmp
jmp
mov
test
aad
xlat
int
shlb
aam
div
xchg
ljmp
xchg
std
out
lret
mul
div
loopne
icebp
faddl
aam
enter
jmp
iret
loope
shr
fcom
ss
cmp
loope
neg
fcmovbe
loope
repnz
xchg
int
loop
in
ljmp
ss
cmp
aam
aam
repz
xchg
rorl
jmp
repz
xor
aaa
sub
aas
aaa
stc
ret
test
aad
cli
ret
stc
in
enter
out
rcl
fcom
int
cmp
call
in
repnz
aas
aam
clc
jmp
in
nop
cmc
in
repnz
xlat
in
stc
sar
cld
in
hlt
cmp
clc
rolb
enter
cld
jmp
int3
enter
lret
int
stos
test
mov
sbb
jle
add
aad
test
clc
call
cmc
int3
mov
out
fsubr
in
cld
aaa
int
idivb
cli
aas
xlat
shl
roll
mov
les
ror
into
sar
fsub
icebp
aaa
fcmovnu
ffree
ljmp
xor
loopne
rclb
int3
div
jmp
iret
stc
sbb
repz
out
int3
orb
int
aaa
int3
repz
leave
stc
idivb
not
test
popl
xchg
subb
das
ret
mov
fcomp
xlat
test
sar
fcmove
out
popl
nop
xchg
repz
out
cmp
xlat
repz
fcmove
test
xchg
jecxz
clc
addb
ror
out
cmc
leave
ror
out
lock
push
cmc
call
cmc
loope
clc
mov
loop
in
lds
in
in
jmp
idiv
and
out
jmp
clc
adc
icebp
jecxz
in
divl
clc
aaa
aam
jmp
shl
fldl
and
hlt
in
ljmp
aaa
cmp
fsubrp
sti
fidivrl
or
in
ljmp
mov
loopne
jmp
xor
ljmp
xor
roll
and
xchg
sar
ror
fndisi(8087
sti
jmp
stc
cmpl
test
shl
mov
lock
call
rcl
repnz
in
fcom
cli
jmp
lret
lock
xchg
adcb
out
lret
sar
rolb
sti
cli
loopne
fmulp
into
in
xchg
iret
repz
shr
xor
jmp
std
cmp
xor
into
sar
movl
test
out
ss
ret
aaa
cld
xor
cmp
rolb
aad
xlat
fmul
roll
xchg
mov
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
shl
iret
cld
sarl
ds
cld
sti
loopne
out
rcr
sbb
mov
ret
fdivr
mov
cli
aaa
iret
icebp
repz
cmp
loope
jmp
sbb
fsin
xchg
cld
out
int3
loope
shll
clc
sarb
std
lock
cmc
hlt
fcmovnbe
hlt
clc
test
addl
cmp
xor
lret
leave
std
xlat
aam
into
cmp
aas
mul
stc
flds
fisttpll
mov
in
clc
sarb
fdivr
adc
ljmp
mov
in
rcl
cli
xor
cmp
lock
fnstsw
iret
test
loope
ret
shr
mov
shl
adc
lret
fmul
iret
sar
cli
inc
and
ret
loopne
sti
test
fsubr
fisttpl
xor
lret
in
iret
aaa
fdivr
ret
fildl
std
and
and
mov
out
iret
ret
ljmp
shr
xor
les
xchg
ljmp
out
repz
xor
hlt
out
out
hlt
out
cmp
test
out
mov
mov
roll
in
xor
fucomi
lock
ljmp
out
mov
fists
rol
xlat
icebp
cmp
into
sarl
in
dec
fst
rcl
out
testb
xchg
iret
icebp
shr
out
xor
fxch
cmp
ljmp
cli
ffree
test
call
out
out
test
in
leave
out
cmp
cmc
hlt
out
testl
mov
cmp
ljmp
fdivs
idiv
cld
xlat
fdivr
fidivrl
rcr
fmulp
mov
jmp
enter
mov
shr
int3
icebp
in
fsubrp
fld1
aaa
in
fdivrl
in
loopne
fdivrl
fcom
std
int3
xchg
mov
mov
aad
repnz
xlat
fiaddl
subb
sub
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
idivb
jle
add
in
fnstcw
std
imul
int3
jmp
sti
xchg
icebp
int
add
div
aad
repnz
fdivrp
add
cmp
xchg
shl
iret
rol
in
idivb
div
jecxz
int
cmp
loop
lret
lea
xor
lret
cli
sarb
xor
aad
or
fsubr
repnz
lock
ret
aas
in
cmpb
std
shr
fcmovnu
fmul
out
in
xchg
mov
imul
cmp
jmp
std
fucom
xor
cli
cli
jmp
xchg
in
shl
and
call
clc
xor
shl
ss
hlt
fdivr
cld
fld
aas
idiv
in
enter
in
loopne
ljmp
fdivs
test
jmp
lock
and
fucomip
loopne
iret
mov
cmp
cmc
into
sti
cmp
adc
out
ret
stc
rcr
fldln2
leave
int3
fmulp
loopne
xchg
jmp
into
jmp
stc
cmp
test
out
jecxz
test
mov
xchg
jmp
test
divb
lret
lret
repnz
cmp
dec
out
std
fcmovne
fsubr
stc
xchg
in
in
in
in
shll
aam
repz
cli
stc
and
faddp
aam
testl
fidivs
xor
xor
ror
jmp
rcr
cli
stc
test
in
and
repnz
sarb
repnz
sti
jmp
lret
repnz
iret
lds
stc
test
sbb
xor
loop
imul
fcom
cmpl
xlat
testl
int3
in
out
cmp
sti
repnz
and
rcr
ret
jmp
nop
out
in
out
aam
xor
aaa
aam
mul
std
cli
in
rolb
stc
fndisi(8087
iret
in
nop
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
jp
jle
or
jle
mov
sub
in
cmc
lret
int3
rol
aad
std
cmp
loope
ljmp
loope
xor
xor
aad
lock
sti
jecxz
ret
filds
loop
shl
aad
das
repnz
cmc
jmp
int3
sti
loopne
test
sar
sti
loop
mov
test
ror
mov
not
lret
out
clc
ss
lret
fcos
xchg
fdivp
cmp
ds
leave
int
incl
repz
divb
hlt
jmp
cmp
cmp
shl
fisttps
mov
into
xchg
aaa
rcl
out
fmul
shl
int
ret
shl
faddp
mov
neg
in
orl
into
out
int
ror
in
ret
jmp
loope
fmul
mov
xchg
into
in
cmp
out
fcomi
int3
int3
cmp
cmp
fdivrp
icebp
loopne
rorb
nop
test
out
mov
stc
aad
ss
aam
rol
loopne,pt
and
mov
jmp
fcomp
xor
cmp
out
xlat
cmc
rcl
aaa
cld
in
out
fsubp
test
mov
fiadds
ljmp
cmc
loopne
rcr
roll
fadd
ljmp
out
jmp
cmp
xor
shl
out
aam
cli
in
jmp
xlat
cld
ficoml
hlt
or
loop
aad
ljmp
out
loopne
ret
loop
lret
in
fdivrp
in
sub
out
in
ror
iret
in
cmpl
aas
fildl
jmp
int3
test
iret
xchg
out
cs
jmp
cmp
call
cli
ret
not
jecxz
leave
fmull
rorl
clc
hlt
sarl
clc
iret
and
rol
xlat
xchg
stc
incb
xchg
cmp
cmc
cmpl
adc
add
add
add
ror
aad
fldt
sbb
or
jle
cli
cmp
ret
sti
or
cld
fdivr
sbb
jmp
ror
sarl
xor
hlt
test
xchg
mov
call
in
repnz
cmp
xor
out
xlat
fdivr
cmc
fldl2t
cmc
iret
addl
fcmovbe
fmulp
std
lret
fptan
test
cmc
rcr
aad
mov
fcmovnbe
int3
out
loop
repz
in
cmp
aaa
out
jmp
fsubp
loopne
xlat
lret
faddl
jmp
lret
jmp
xor
int3
cmp
fdivr
fiadds
in
movb
call
fpatan
enter
sti
and
aad
lret
int3
std
into
in
call
ret
aad
fdivrl
lock
repnz
cmp
test
icebp
aad
int
aaa
clc
cmp
not
lret
sar
frndint
cmp
mul
xchg
loopne
fmul
mov
rol
xor
out
neg
enter
idiv
cmc
ffreep
stc
fadd
out
cli
enter
dec
xchg
aam
rcl
imul
lds
fdivl
into
cmc
addl
stc
fincstp
out
out
lock
jmp
shl
hlt
test
int3
cmp
rolb
repz
rcr
xchg
mov
jecxz
into
lret
iret
clc
cmc
cmp
clc
shl
fincstp
clc
stc
sti
call
shr
loop
jecxz
mul
sti
fcomip
xor
rcl
into
add
loope
leave
cld
cmc
loop
in
sti
out
shl
out
ror
call
cmp
sarb
aad
lock
ret
faddl
leave
lock
ss
shr
aaa
hlt
cmp
into
loope
ret
loope
stc
mov
in
xchg
rol
in
ljmp
jecxz
sti
loope
ljmp
in
mov
jmp
aam
iret
int3
fst
outsl
fmull
cltd
cwtl
bound
daa
jle
or
jle
ljmp
mov
sub
aad
in
sar
stc
incl
icebp
loopne
fst
cld
std
test
rorl
iret
fstpt
jmp
cmp
xlat
cmp
adc
jmp
out
call
xchg
ss
repz
stc
in
cmp
ds
icebp
xchg
jecxz
or
mov
mov
xor
in
repz
cmp
xor
loope
repnz
mov
hlt
iret
xlat
ljmp
ljmp
cld
decl
xchg
filds
int3
cli
std
sarb
cmc
fcom
neg
sti
in
test
mov
int3
mov
and
xchg
shl
xor
hlt
int
rcl
cmp
icebp
fnop
flds
loop
aad
jmp
leave
leave
nop
call
aam
xor
loopne
rcr
repnz
stc
xchg
xlat
faddl
mov
in
ror
in
lock
pushl
out
fucom
sar
sbb
loope
mov
loope
in
test
int
out
shl
in
fcmovne
call
icebp
out
out
fldl
fsubr
mov
ljmp
imul
cmc
iret
cmp
test
aad
fincstp
out
les
lret
in
xchg
loop
repnz
hlt
shr
out
fsubr
sti
cmp
lret
out
fnstcw
out
stc
ljmp
loop
jmp
out
repnz
repz
cmp
in
cmp
fnstcw
vpavgb
icebp
in
xchg
into
ss
in
jmp
aam
fsubp
cli
xlat
std
rol
orl
out
out
xchg
test
fidivrl
clc
cld
icebp
test
repz
lret
out
loop
rol
lret
aaa
mov
out
ds
loopne
fcomi
adc
rcr
cld
test
into
in
out
xchg
xchg
loope
vcmpss
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
push
or
jle
lret
fldlg2
sarl
aas
rcr
lds
jmp
in
cmc
ret
xor
lret
xor
xor
f2xm1
stc
fmull
mov
xchg
in
xchg
ret
fcmove
in
cmp
lock
in
addb
in
orl
iret
icebp
int3
aaa
fucom
xor
mov
fdivrp
sub
lock
or
out
xchg
out
aaa
repnz
ss
sar
cmp
int3
cmp
aad
mov
out
xchg
aaa
out
ljmp
fstp
call
cmc
and
out
fucomip
jmp
xchg
ror
cli
fidivrl
lret
aam
ljmp
cmp
sti
enter
ffree
nop
mov
jmp
fdivs
icebp
cmp
int3
sarb
fimuls
leave
mov
in
imul
out
sar
leave
neg
hlt
rol
not
rcr
rol
neg
fdivr
xchg
xchg
rorb
xor
into
int
shlb
loope
xlat
fadds
mov
or
lock
das
cmp
leave
aaa
stc
stc
cmp
ret
xlat
call
sti
fimuls
jmp
mov
jmp
sarl
shlb
call
fcmovu
xlat
xlat
cmp
xchg
orl
call
repnz
cmp
out
ror
fxch
int
cmp
mov
xchg
in
out
iret
loop
enter
enter
leave
cmp
cli
imul
fadd
loop
fdivr
mov
loope
repnz
lock
xor
iret
enter
aam
loopne
roll
in
mov
out
in
shl
sarl
in
loope
jecxz
adc
fcomi
xchg
fcmove
out
repnz
xchg
xor
lret
sti
cmp
icebp
faddl
xor
or
js
add
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
popa
lea
sub
or
jle
mov
cld
stc
jmp
xchg
in
in
neg
cld
cmp
call
cmpl
clc
neg
add
rorb
int3
xor
xor
repz
loope
clc
lret
loope
ret
fcmovb
mov
loope
int3
out
cld
shl
out
call
ljmp
fcom
cli
cmp
xlat
roll
out
loop
roll
xor
ljmp
rol
repnz
call
cld
out
jmp
xchg
lock
cmp
jmp
sub
sbb
in
mov
int
das
xor
repnz
fdivs
shl
loope
cmp
incb
xchg
and
mov
shr
ljmp
cmp
loop
hlt
fdivr
les
fdiv
loop
out
addb
ret
into
ljmp
inc
jmp
sbb
fdivrp
std
div
fcmovnu
sti
xlat
lea
ror
in
in
repz
divb
icebp
loopne
cmp
loop
xchg
mul
xlat
call
ljmp
repnz
in
jmp
iret
rol
xlat
testl
jecxz
adc
in
jmp
enter
xor
lock
clc
fst
loop
test
in
shl
movb
in
into
shl
in
neg
fst
fcom
aas
test
out
ljmp
test
loopne
shr
stc
in
repnz
cmp
ret
stc
sbb
out
fucom
ror
mov
shr
int
xlat
aad
clc
hlt
test
shl
sbb
loopne
leave
ret
or
int3
orl
testb
sar
sti
cld
clc
cli
lret
fadds
xchg
nop
divb
aam
clc
aam
aaa
cmp
icebp
add
stc
les
xchg
aam
loopne
mov
jmp
enter
ret
xorb
out
sub
jle
ss
aam
loopne
clc
cmp
cmc
cmc
inc
in
fmuls
aam
xchg
loopne
in
ror
inc
loope
ret
loopne
loope
test
clc
stc
fdivr
sti
ret
int
xchg
xor
in
rcr
jmp
std
cmp
mov
out
or
xchg
iret
icebp
out
xor
xlat
sarl
rol
cli
in
loop
testl
jmp
xchg
call
stc
lret
clc
icebp
sti
fiadds
sti
aad
ror
loopne
lret
lock
enter
leave
xor
cmp
fst
icebp
in
jmp
lret
loop
call
leave
fcom
rcl
fstpt
aad
loope
testl
fmul
adc
lret
iret
out
repz
xor
call
in
aas
fmull
shr
mov
sar
cmp
cmc
lds
fcomi
loop
icebp
icebp
std
repz
mov
out
lea
enter
std
in
cmp
lret
cli
faddl
repz
xchg
std
aam
jecxz
out
hlt
xlat
in
in
xor
sbb
xchg
mov
xchg
into
out
mov
roll
xor
xor
xor
loop
idiv
sbb
fsubr
addb
out
int
shl
cmc
out
shr
rcr
cmpb
fcmovu
ret
enter
mov
rcl
in
ret
cli
in
in
lret
aam
cmc
test
aas
shl
test
xchg
loopne
in
iret
loope
out
in
xor
shl
cmc
leave
stc
ljmp
fisttpll
cmp
icebp
int
loopne
loop,pt
loopne
repz
stc
std
lret
lret
std
lea
cmc
leave
les
fdiv
ror
ret
jecxz
mov
xor
jmp
leave
xchg
aaa
cmp
fcmove
das
jle
or
jle
call
movb
nop
cmc
aam
aaa
int3
xor
int
enter
fcmovnu
cmp
test
rolb
xlat
in
cld
out
xor
xlat
out
fcmovu
ss
fdivr
xor
xlat
lock
dec
test
call
das
rcl
shr
cld
rcr
cmp
not
fabs
out
inc
repnz
fisttpl
in
out
xchg
fstpt
rcr
rcr
sti
icebp
fcomip
xlat
aam
jmp
ret
cli
into
stc
enter
rcl
lock
jmp
out
cmc
stc
and
std
xlat
out
aad
cli
aad
jmp
nop
mov
aam
aam
cmp
idivb
clc
repz
cmp
repnz
fld
cld
add
test
jecxz
ror
xor
cmc
xlat
rol
int
fcom
out
cmp
cli
fadd
out
cli
fmuls
std
xchg
hlt
in
iret
out
xor
lret
out
cmp
jmp
fmul
test
mov
test
loope
fstp
stc
int
shr
mov
fnstcw
hlt
sti
cld
jmp
jmp
cmp
orl
xchg
fst
ror
dec
jecxz
ss
fcmovu
divb
lret
lock
imul
out
sub
fcmovnu
in
in
xchg
xchg
loopne
xchg
cmc
not
stc
repnz
int
xor
repz
xlat
sar
loop
out
xlat
enter
mov
mov
xor
in
into
ss
jmp
in
cli
cli
clc
stc
cmp
cmp
mov
in
xchg
int
fprem1
ljmp
cmp
aas
testb
fcmovu
ljmp
ffreep
xor
in
in
sarb
cmp
fcomip
fdiv
ret
ret
into
loop
int
jmp
out
shr
aaa
out
xor
aam
ret
repz
test
mov
in
into
leave
loopne
in
std
mov
fstp
clc
fsubrp
fxch
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
iret
xchg
repnz
ret
cmc
cli
cmp
cmp
rol
mov
jecxz
mov
xchg
leave
in
lret
xchg
test
int3
idivl
test
hlt
fxch
clc
cld
adc
fldl
cmp
cli
sarl
ret
xchg
stc
flds
test
fcmove
int3
xchg
repz
out
das
rcl
cld
cmp
loopne
sbb
lret
nop
iret
test
das
int
out
out
aam
cmp
cld
test
loopne
call
mov
out
int3
in
cmp
out
sti
neg
cmp
sti
test
mov
lock
aaa
call
fcom
icebp
cmp
std
jecxz
rcl
test
aad
les
fiadds
ret
hlt
xor
icebp
enter
out
cmp
in
in
loop
loop
int3
iret
shl
lock
leave
in
hlt
fsubr
ror
sti
sarl
fadd
lock
fimuls
out
xor
lret
lock
lock
int3
cld
jmp
aas
cmp
leave
mov
lea
sar
mov
fdiv
shr
stc
clc
cmp
cli
ret
out
ds
int
xchg
xor
out
imul
shr
lock
lret
out
jmp
repz
lret
loop
into
cli
loope
aam
call
cli
call
icebp
cld
xor
fdivr
fucom
test
sti
shl
xchg
loopne
in
cmp
cmp
xor
div
aam
fcmovnb
fsubr
in
orb
icebp
leave
out
call
cmp
and
repnz
in
lret
repz
int3
shl
out
fcom
in
idiv
cmc
cmp
cmp
ret
in
rol
fmulp
in
mov
mov
hlt
test
cmc
jmp
cli
cmp
add
jmp
ret
enter
int
aas
icebp
jg
sub
jle
or
jle
icebp
iret
cmp
loopne
in
hlt
loop
cld
fimull
rorb
out
lret
leave
inc
roll
aas
jmp
cmc
stc
fimuls
cld
xchg
shl
in
cmp
cmp
fxch
clc
hlt
hlt
fndisi(8087
xlat
repnz
ret
out
test
in
int3
lock
xor
std
ret
xchg
xchg
out
in
fmul
repz
mov
cmc
stc
xor
fucomi
jmp
into
fabs
loop,pt
xor
stc
jmp
xchg
in
mov
in
rcr
xor
std
lock
lret
fcomp
rcl
jmp
mov
mov
shlb
cmp
neg
out
out
aas
repz
test
test
in
lret
jmp
cmc
xchg
faddp
les
cmc
shr
cmp
cmp
stc
ror
not
sbb
stc
test
fmulp
icebp
call
out
mov
lret
clc
cmp
hlt
ss
fisttps
aam
mov
iret
leave
test
fists
jmp
aaa
ror
clc
jmp
f2xm1
les
enter
orl
f2xm1
divl
not
sar
fdivr
fdivrs
testb
fisttpll
lret
shl
out
into
int
lock
sbb
in
add
neg
decb
out
test
cmc
ljmp
repnz
cmpb
or
sar
xchg
in
jmp
hlt
fsub
cmp
xor
int
cld
ss
neg
cmp
clc
cmc
ret
ljmp
sbb
out
stc
int
not
repz
call
std
testl
int
mov
xchg
out
iret
repnz
out
lret
xlat
ret
aad
xlat
out
fdivrp
fchs
in
xchg
ljmp
aaa
cmp
shl
lock
dec
hlt
jecxz
adc
fdivp
idiv
sbb
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
jp
clc
xor
jle
mov
mov
sbb
out
ljmp
repz
cmp
repz
test
mov
in
nop
out
out
shl
div
shll
aad
loopne
roll
mov
out
in
cli
fists
call
in
fucomip
test
testb
int3
out
in
mov
shr
cmp
not
stc
ss
jecxz
cmc
dec
fsubr
jmp
fdivr
mov
mov
int3
call
out
xor
fcmove
stc
ret
faddp
repz
sti
call
out
lret
cld
fiadds
lret
out
div
xor
clc
clc
repz
fsub
lret
out
std
mov
fimull
int3
lret
in
shr
call
cli
test
flds
test
xchg
xor
aaa
int3
repnz
sub
aam
shl
ret
in
out
int3
mov
test
aaa
in
repnz
aaa
hlt
hlt
leave
aaa
loop
int
sti
xchg
fninit
cld
test
xchg
jmp
shr
enter
hlt
shl
cmp
lret
out
cli
lock
ret
cmp
mov
out
out
jmp
into
aam
cmc
std
shl
in
lock
xor
movb
int
in
repnz
in
repz
fcmovne
cs
out
hlt
aaa
inc
test
sti
mov
rcr
aad
in
into
call
orb
not
lret
enter
ret
aas
cmp
repnz
lret
lret
lock
rcl
xor
fcmovnb
cld
cmp
cmpl
add
fisttps
ror
loop
sub
sti
cmp
fnstcw
ds
and
xchg
cld
leave
test
ret
fadd
out
int
shl
sti
aad
out
out
rol
inc
loopne
xchg
int3
nop
fistl
aam
sar
jmp
iret
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
sti
iret
shr
aad
aam
cmc
incl
lret
in
rclb
in
xor
aam
cmp
int3
fcompp
call
loopne
out
filds
rcr
stc
stc
icebp
lock
repnz
fidivrl
shl
ret
test
test
jmp
hlt
call
out
repz
iret
fcmovnu
fsubr
shl
loop
repnz
xchg
lea
int
xor
sti
loope
sub
out
std
xlat
ljmp
out
loopne
std
cmc
out
xor
sti
icebp
cmp
jmp
xor
ds
xlat
xchg
in
lret
xchg
cld
xchg
in
out
jmp
test
hlt
out
shl
repz
repz
clc
jmp
lret
xchg
call
fxtract
shl
sarb
filds
fld
stc
aad
hlt
test
sti
decl
cmp
sti
aas
sbb
les
cmp
in
mov
fimull
call
div
fdivrs
out
int
xor
sti
out
imul
cmp
out
leave
mov
aaa
xor
cli
out
in
std
fdivr
cmp
loopne
in
adc
addl
rcr
or
ljmp
lock
std
ror
ret
sar
dec
fmuls
dec
sub
in
les
out
cmp
fcmovnu
jecxz
hlt
std
rolb
loope
stc
cli
lret
enter
jecxz
out
in
jecxz
int3
stc
imul
cmp
fimuls
fdiv
fmulp
fcmovne
xchg
sar
in
clc
xlat
fnstcw
enter
aad
xlat
out
fiadds
mov
and
jecxz
in
jecxz
loope
xor
ss
jmp
xlat
rcr
rcr
jmp
ret
fmulp
mov
clc
xor
sarl
sarl
loopne
test
rcr
xchg
cld
jmp
fdivrl
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
jmp
cmp
jle
cmp
jle
ret
sti
fsubr
loopne
xchg
dec
lock
neg
cld
fucomi
fdiv
cli
sar
roll
lret
cld
in
xchg
hlt
in
in
lret
leave
rcl
rol
clc
sarl
out
in
and
in
shl
xor
aam
lret
in
fiaddl
mov
mov
iret
mov
mov
ror
repnz
cmc
call
lock
cli
cmp
fcom
std
enter
rorl
int
out
cli
cli
rol
leave
sti
fcomp
shl
rcl
in
out
out
stc
mov
lock
lock
aam
test
into
leave
neg
call
fmulp
ror
cmp
add
sbb
in
xor
fcmovnbe
lret
fcmove
jmp
in
stc
repnz
test
jecxz
jmp
stc
lret
mov
mov
xor
out
xor
fprem1
stc
repz
out
sbb
std
in
out
fldl
adcb
sarl
cmp
lret
std
shl
fiaddl
ljmp
nop
jmp
in
repnz
cmp
bnd
fdiv
repnz
aam
mov
in
dec
ljmp
repnz
in
stc
repz
cmp
into
test
sub
loop
incb
in
call
hlt
jmp
rol
clc
jmp
incb
mov
shl
repz
lock
hlt
fdiv
cmp
roll
in
xlat
fisttpl
out
rol
ror
lret
repnz
stc
imul
loope
repz
jmp
mov
cli
xchg
cld
xchg
enter
into
xor
fsubrp
fnstsw
hlt
in
cmp
call
out
repnz
ljmp
clc
cli
out
cmp
or
std
aas
cmc
fcmovb
loope
out
orb
out
ljmp
rcr
out
loope
repz
shl
repnz
aas
filds
mov
mov
out
out
shr
sarb
call
or
out
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
or
push
cmp
cmp
jle
testb
shr
in
in
lret
into
cmp
int3
xor
cmp
and
fdivr
loop
int3
ret
std
mov
iret
xchg
hlt
call
cmp
into
cmp
int3
dec
out
clc
enter
fxch
fsubr
mov
loopne
xchg
mov
into
fyl2xp1
xlat
std
cmc
lock
and
ret
loop
mov
in
int3
cmc
aas
test
sarl
cmp
loopne
ret
aam
iret
in
icebp
nop
in
lret
adcl
shl
sbb
std
shl
lock
clc
out
repnz
cmc
shr
sub
repnz
fldlg2
fucom
fcmovnb
shl
ret
hlt
lret
sti
test
test
iret
loop
xor
xor
cmp
sti
cmp
aad
out
mov
loopne
mov
addb
repnz
aad
cmp
cmp
loope
test
lock
rcr
in
cld
clc
mov
test
in
shl
iret
icebp
sti
lock
repz
cmp
fcomip
lock
cmp
mov
test
iret
loope
div
neg
ret
cmp
into
aas
rcl
cmpb
testb
iret
out
mov
jmp
aam
rcl
ror
cmp
sti
cli
cmp
aam
hlt
incl
test
fadds
mov
stc
cmp
cmp
lock
neg
vaddsubps
dec
mov
mov
clc
das
jmp
hlt
rcr
repnz
loopne
repnz
sti
xchg
cli
testl
fsub
enter
int3
cmp
loope
neg
add
leave
mov
ret
iret
sti
fmull
sub
icebp
ss
cmp
lock
cmp
std
ret
shl
mov
lret
loope
jecxz
lock
jmp
in
fsubr
rcr
lock
aas
sub
enter
lret
and
out
xor
call
test
loopne
rcr
sti
cmc
std
xor
lock
fucomp
call
jmp
cli
xor
lock
cmp
movl
jne
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
std
rcll
adc
jle
cmp
jle
ret
rcr
jecxz
cli
sti
cli
in
into
fimuls
out
repz
cmp
sti
ror
fxch
out
leave
std
hlt
iret
xor
lock
sarl
cmp
stc
fcmovnbe
in
out
jecxz
mov
fsub
divl
call
cmp
int3
repnz
into
and
clc
out
sbb
ficoms
das
sti
sub
enter
cmc
test
shl
vpsubd
cli
loopne
loop
xchg
cmp
fsubr
cmp
rcr
sti
ret
rcr
xchg
ret
mov
xchg
in
cli
enter
xlat
into
loope
clc
jmp
fsub
out
rorb
mov
jmp
icebp
repz
out
idivb
aas
hlt
shl
cmc
in
mov
addl
int3
out
mul
cmp
cmp
xorb
les
loope
in
fucomi
addb
shl
ljmp
incl
mov
xor
jmp
repnz
ret
cmp
imul
cli
stc
rcl
fdiv
out
jmp
fadd
out
fildl
not
icebp
jecxz
shl
lock
adc
fsubrp
cli
call
loope
fsts
repnz
call
aam
int3
jmp
icebp
fcmovb
xlat
ret
mov
lea
sub
jmp
cmc
imul
xor
out
cld
out
aam
fdivrs
ds
in
test
iret
incb
rcl
std
std
xor
in
iret
in
enter
cli
rolb
lret
int
repz
out
out
cmp
std
loope
cmp
repnz
in
repnz
lret
mov
lret
cmc
int
fdivrs
in
enter
loopne
ret
loopne
std
ret
ffree
loope
test
nop
hlt
ljmp
cld
out
rol
sti
into
repz
cld
ljmp
xchg
out
fyl2xp1
call
ljmp
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
and
xor
sarb
add
test
out
std
mov
jmp
jmp
repnz
int3
hlt
xor
cmp
fsub
aaa
cmp
ds
mov
xchg
loopne
fimull
imul
xor
ror
fmul
stc
hlt
rcr
faddl
idiv
sti
fsubr
fsub
nop
loopne
out
loop
in
fcmovnbe
out
clc
clc
xlat
adc
loopne
fcomp
aas
sti
idiv
idiv
lds
xchg
xchg
lock
in
stc
fcmovb
repz
neg
int3
fdivrp
iret
enter
hlt
jmp
out
jmp
filds
in
jmp
in
std
call
aad
cmc
cli
stc
cmc
std
iret
fucomi
or
fadd
sti
sub
int3
mov
jecxz
ss
fcom
hlt
cmp
aad
idivb
mul
aam
std
in
in
clc
loope
xchg
out
out
shr
repnz
ljmp
cmp
sbb
and
mov
loopne
jmp
in
rcl
xlat
aad
xlat
aam
rcl
into
cli
cmp
fsubr
loop
out
lret
repnz
in
in
icebp
repnz
jmp
stc
clc
shl
aad
std
cmc
stc
in
nop
loopne
loopne
out
shl
icebp
int3
jecxz
sar
jmp
cmc
shr
neg
ffreep
orl
fmulp
int
in
out
out
shl
shll
cmp
out
repz
mul
fadd
jmp
jmp
shl
sub
in
cmp
out
out
ds
cmp
cmp
fdivrp
in
iret
or
xchg
rcl
ret
leave
repz
fsubr
xor
fnstsw
test
adc
std
in
out
sbb
icebp
in
int
lret
fidivl
repnz
loopne
aad
hlt
imul
enter
mov
ljmp
fdiv
vpaddusw
aas
repz
iret
add
rcl
leave
not
xchg
flds
incb
cld
aam
rcr
aam
in
addl
jmp
orl
in
stc
sti
ss
xor
add
mov
jmp
ret
leave
lret
aad
flds
dec
loope
mov
jle
cmp
jle
int
out
repnz
cld
aas
mov
std
icebp
xchg
xlat
in
cmp
idiv
call
fcomp
neg
icebp
cmp
lret
mov
in
ljmp
aaa
jmp
rcr
aam
les
addb
loopne
xor
ss
hlt
int3
int
cmp
shl
sti
aas
fldl
in
sub
out
lret
test
ljmp
in
in
repnz
idiv
fsubr
and
repz
enter
imul
in
stc
cmp
rcr
shl
fcmovnbe
stc
mov
loopne
fdivrp
into
xchg
in
std
aas
hlt
shl
ror
in
cmp
test
xchg
out
xchg
xchg
mov
in
repnz
cs
hlt
ljmp
ss
cmp
fadd
ljmp
xchg
rcl
xchg
xchg
int3
rcl
hlt
stc
clc
out
call
aad
xchg
adc
xlat
into
ljmp
in
ror
ret
test
fdivrp
fdivp
cmp
into
cmp
fcomi
fiaddl
in
xchg
ror
vpaddb
fcmove
fiadds
mov
stc
xlat
int3
mov
mov
out
les
lret
xor
hlt
out
xor
loope
fld
testl
mov
ljmp
aad
repnz
std
stc
sar
cld
ret
lds
out
xlat
iret
mov
out
ror
xchg
in
loop
repz
rcr
rcr
icebp
jecxz
iret
aad
clc
mov
sti
call
cld
ror
xor
les
mul
in
lock
lock
cmc
fdivrl
mov
fimull
shr
fcmovbe
iret
cmp
fchs
fmul
lock
out
in
mov
ret
adc
test
in
ljmp
add
cld
loopne
xchg
xlat
ljmp
mov
icebp
iret
cmp
fdivrs
div
fcomip
loop
repnz
test
iret
xchg
fcmove
mov
aam
cmp
not
hlt
int
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
cmp
fsub
xchg
out
or
cli
xchg
xchg
inc
stc
not
jmp
fdivrl
loope
out
ret
sar
loope
cmp
out
int3
repz
enter
ss
dec
iret
cmp
xchg
jecxz
jecxz
fcmovnu
out
xchg
out
clc
shl
xor
stc
std
cmp
aas
cmp
fsubr
loopne
stc
jecxz
in
or
inc
lret
fdivp
xchg
mov
shr
neg
sti
iret
icebp
lret
fcmovu
in
fadds
leave
test
cld
shr
mov
icebp
xor
aad
aad
clc
incb
roll
fdivr
sti
in
cli
fsubr
aad
out
in
iret
stc
std
std
int3
cmp
cmp
xchg
cld
fucomp
repnz
cld
out
out
in
lret
fucomp
cmp
in
cmp
jecxz
addb
in
test
fdivrp
in
in
in
ret
fadd
jmp
lret
in
fiaddl
out
loop
and
in
out
aad
sar
fmulp
in
xchg
mov
mov
test
aad
int3
sub
shl
fcmovnbe
int
cmp
loop
fadd
fadd
out
aam
lret
loop
iret
in
jmp
test
lret
shlb
in
out
fcmove
rcl
cmp
cmp
lock
test
shl
test
ror
mov
xchg
test
jmp
fdivs
in
sti
cmp
xor
aad
cmp
in
jmp
out
lock
mov
in
aaa
int3
lret
out
fst
cli
shll
test
loop
ret
loop
out
lock
xchg
int3
jmp
hlt
rol
ror
shlb
cli
fdiv
into
filds
out
out
int3
jecxz
jmp
mov
in
lock
repz
testb
ljmp
std
ficoms
repz
ljmp
lock
addl
rcr
rol
jecxz
out
icebp
ror
cmc
jecxz
rolb
and
in
int
xor
ss
fucom
enter
roll
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
inc
jae
sbb
jle
cmp
jle
loop
in
fcmovne
loop
jmp
lret
test
xchg
aam
in
in
rcr
out
stc
cli
ds
sbb
in
faddp
clc
xchg
out
test
aad
xor
idiv
out
aad
sti
fcmovbe
loop
test
out
fucompp
loopne
fdivrl
cld
leave
loope
mov
cmc
rcl
int
cmc
cmp
out
ljmp
addl
in
aaa
xor
clc
xor
cli
lret
hlt
cmp
cmp
ret
hlt
xchg
loop
xchg
shr
in
ss
icebp
ror
shl
fcom
hlt
icebp
out
test
mov
mov
out
out
xlat
out
hlt
stc
cmp
int
cmp
clc
loopne
fxch
ljmp
ret
loope
xor
fcomp
rcr
cmp
aas
enter
out
cld
fldln2
out
out
hlt
jmp
cmp
lret
repz
test
jecxz
out
clc
filds
lret
fiadds
xor
shr
lock
hlt
lret
cld
loop
in
cmp
mov
mov
test
loope
imul
xor
icebp
clc
imul
aaa
cmp
call
imul
idiv
lret
call
cmc
das
loop
call
rcr
and
xlat
sar
xchg
flds
or
mov
lock
in
cmpb
push
loope
lock
repz
xlat
call
cld
faddl
out
int3
std
hlt
int
cld
shl
jecxz
out
fiaddl
fsubr
mov
rorl
xor
imul
cmp
rcr
in
cmp
fsubrp
std
sar
mov
ds
mov
out
cli
ror
out
jmp
xor
fucomp
shl
jmp
stc
cmp
aas
xlat
in
cld
fsubp
loop
addb
xor
testb
jmp
test
addl
idivb
out
out
out
cmp
sti
rol
idiv
fucomi
shl
mov
fimuls
cmp
stc
fcom
cmp
jmp
enter
fcmovnbe
fcomp
insb
jae
ficoms
leave
jle
cmp
jle
int
cmp
in
cld
fld
movb
out
or
lock
leave
out
cld
fdivr
std
std
icebp
cmc
lock
stc
leave
mov
xchg
lret
mov
in
ret
out
cld
cmp
xlat
in
lret
out
in
cmp
inc
int3
in
int3
ljmp
out
xor
out
cmc
leave
call
cmp
rol
repz
idiv
decl
in
call
out
in
cmp
aaa
in
filds
jecxz
xlat
fsub
fcmovu
xchg
fdivrp
clc
icebp
cld
fimuls
iret
int
rcl
cmp
lret
xor
in
test
out
addl
repz
ss
out
into
out
iret
loopne
fprem
repz
mov
cmc
call
stc
fimull
xor
hlt
in
sarb
iret
cmp
xchg
ret
lret
clc
addl
xor
out
into
cmp
cmc
shl
lock
fnstsw
icebp
adc
ljmp
sub
aam
div
aas
in
out
faddl
repz
in
out
int
in
icebp
in
decb
fdivrs
cmp
icebp
stc
ljmp
cld
rcr
ret
loopne
out
jmp
mov
loop
icebp
out
fildl
stc
sar
cmp
fisttpll
orb
shl
xlat
repnz
cmp
cmc
loop
cli
fnstsw
cld
jecxz
xchg
ficoms
jmp
lret
in
leave
out
xor
fadd
shl
jmp
fcmovnu
clc
cld
in
sub
sub
out
xor
in
in
sarb
in
xlat
cmp
cli
and
sub
mov
shl
hlt
in
cmc
sarl
loopne
sub
sar
in
jecxz
out
into
out
ror
enter
hlt
icebp
out
sar
cli
lock
shl
mov
std
enter
out
rcl
ljmp
out
cmp
ss
fnstcw
fiaddl
sti
jmp
and
test
cmp
add
or
push
add
add
lret
ror
lahf
jmp
orl
add
into
int3
sarl
stc
into
icebp
adc
in
les
in
out
cmp
aad
ss
icebp
rcl
cmc
adc
sti
loopne
sbb
mov
into
in
repz
rcl
enter
fcmovu
xor
int
rcl
clc
jmp
mov
sbb
leave
in
in
jecxz
divl
in
in
rcr
out
clc
aad
iret
lock
leave
int
test
xor
sar
in
fadd
iret
loope
loopne
clc
fcmove
lea
adcb
lret
ret
clc
iret
cmp
enter
rcr
out
mov
call
repz
fadd
cmp
cmp
clc
icebp
cmp
in
repnz
out
cli
int3
sbb
fcos
mov
cld
fcomip
repnz
xor
xor
std
shl
aas
cmp
cmp
in
xchg
loop
shr
icebp
int
ss
shlb
fdiv
jmp
cmc
out
neg
int3
ret
lock
ljmp
icebp
dec
hlt
in
xor
call
repnz
cld
cli
std
out
xchg
jecxz
loope
in
lea
in
lret
shll
lret
into
sti
cld
into
fsubp
rcl
xchg
cld
test
xchg
lea
fnstcw
jmp
ds
cmc
iret
iret
ror
cmp
leave
testb
mov
aad
aaa
in
out
repnz
fsub
ljmp
addl
jecxz
in
xchg
stc
sti
lret
out
cmc
cmp
cmp
mul
and
sbb
test
mov
cld
out
repnz
cmp
cmpb
sarb
repnz
ljmp
lret
leave
shr
into
das
loop
int3
xlat
enter
hlt
cmp
loopne
repz
xchg
popl
out
loop
xor
fcmovu
cli
fcmovnu
fcmovbe
icebp
fdivp
rcl
jmp
cli
jecxz
loop
test
lock
loop
shl
xor
fld
leave
int
cld
push
test
loope
in
sbb
fistl
cmc
ret
enter
add
in
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
leave
xor
loope
div
repz
ret
cmc
or
cmc
mov
cmc
fmul
stc
shr
in
in
cld
shl
repz
test
fdivr
stc
in
nop
mov
loope
fdivrs
call
jmp
in
cmp
stc
std
ret
std
loope
fisttpl
aam
enter
aam
xor
in
iret
cmp
cld
xchg
sti
clc
hlt
out
stc
iret
xchg
repnz
ljmp
lret
xlat
icebp
xorb
rcr
cmc
loopne
out
mul
into
jecxz
cld
shl
lret
out
in
lret
clc
clc
in
cmp
lds
in
orb
lret
shl
clc
enter
neg
cmp
ds
clc
out
ljmp
test
cli
icebp
out
shl
fdivrs
cmp
cli
call
cld
lret
flds
xor
xor
in
cmp
out
aas
cli
std
repnz
in
les
lret
std
lock
aad
sub
in
shr
iret
cmp
fdivr
cmp
rol
fst
movl
call
ror
rcl
out
ljmp
shl
mov
neg
call
or
repz
in
xor
fidivrl
lock
cmp
std
lret
xchg
xchg
ret
icebp
jmp
cmc
ds
sarl
cli
enter
loope
fsub
leave
repnz
shll
shlb
fcmovnbe
xor
incb
out
aam
fcmovnb
jmp
leave
loopne
hlt
xchg
cs
in
out
out
loopne
addb
cmp
jecxz
ljmp
xchg
jecxz
ror
into
cmp
ljmp
addl
shl
out
shl
nop
xor
divl
cmc
aas
leave
repz
ret
ret
incl
clc
fmulp
in
out
in
mov
ror
jmp
out
shr
std
fdiv
clc
std
loope
testb
xchg
mov
mov
and
or
jmp
ret
ret
rcl
aad
sbb
cmp
cmp
jle
out
repz
out
sar
cmp
xchg
cld
xchg
xchg
shlb
shr
hlt
call
aas
fld
shr
fstp
fxch
and
incl
enter
cmp
clc
in
in
fmul
incb
cmc
loop
fimull
loop
shl
rol
xor
aad
fcomp
cmp
call
neg
cli
repnz
leave
test
cmp
mov
cmp
xor
jmp
cld
push
repz
cmp
ffreep
jecxz
fnsetpm(287
clc
stc
out
cld
xchg
call
fcom
idivl
cmp
into
aas
in
rcl
jecxz
loope
jmp
in
loope
stc
repnz
vphaddubw
out
leave
repz
cmp
cmpl
sub
mov
xor
cmp
test
xor
fmulp
fcmovu
hlt
std
aad
in
enter
xchg
jmp
shl
cli
stc
int3
ror
aaa
cmp
ljmp
out
out
call
lret
xchg
hlt
shr
jecxz
leave
cmp
lret
fcmovu
cmpb
hlt
ret
mov
dec
mov
popl
hlt
out
cld
cmp
jmp
into
rol
loop
xlat
fsubp
lds
or
xchg
test
das
hlt
lret
leave
int3
out
clc
sar
cmc
aam
into
iret
clc
ds
idiv
fisttpl
mov
repz
xlat
xlat
xor
ds
rcr
repnz
aam
jmp
loop
out
rcl
in
mov
into
repnz
sbb
rorl
out
lret
in
ret
aad
sub
leave
out
aaa
clc
ljmp
mul
jmp
lock
in
jmp
mov
repnz
sti
in
in
repnz
in
mov
jmp
xchg
out
sar
cmp
sar
cmp
shr
and
xchg
in
mov
mov
sub
cli
xor
fdivrp
cmp
call
clc
idiv
cmp
in
addl
ret
push
mov
jmp
lret
aad
int
ss
rcrl
pop
mov
adc
jle
hlt
in
fldl2t
fcmove
std
aam
cmc
fcmovnu
sarb
loopne
addb
sti
out
lock
ljmp
jmp
lret
test
fdivrs
addb
loopne
fucomp
mov
hlt
iret
fdivr
lret
pushl
roll
repz
int3
std
or
fcom
cmp
in
into
int
fcomip
push
aam
fldl
adcb
repnz
clc
lret
cmp
into
xlat
loope
cmp
hlt
fcomp
ret
repnz
mov
in
mov
shl
in
enter
jmp
int3
xlat
aam
xor
xlat
hlt
test
loopne
aad
lret
sbb
into
shl
xlat
stc
cmp
clc
cmp
roll
clc
test
into
loopne
iret
jmp
clc
xlat
aaa
enter
call
lock
div
fnstsw
enter
mov
add
mul
shl
int3
jmp
repz
icebp
div
iret
out
fucom
shl
adc
jecxz
mov
loopne
out
out
ret
lret
imul
cmp
mul
ror
out
iret
addb
loop
int
leave
in
not
clc
ret
repnz
ss
ds
clc
lds
fisttpll
shlb
shl
int
cs
stc
cmp
addb
fnop
in
fdiv
roll
fdiv
cmp
aam
stc
sarl
testb
stc
faddl
xchg
aad
hlt
lret
xor
cmp
lret
lock
loop
stc
repnz
mov
in
lret
out
int3
loop
lock
out
ljmp
lret
inc
cmp
rolb
stc
mov
shl
not
sar
fnstsw
fdivr
in
fiadds
shr
ljmp
repnz
aam
in
sarl
repz
addb
fcmovb
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
xchg
or
stc
mov
xor
into
repnz
cmp
icebp
cmp
faddl
test
into
ljmp
vpor
rol
aas
cmc
in
rcr
fcom
repnz
mov
fldl
int
clc
shl
cld
cs
lock
stc
icebp
iret
idiv
out
fisttps
fsubrp
nop
xchg
fcomip
xchg
jecxz
divb
jmp
out
ss
out
fdivl
cld
loop
in
fucomi
int3
ret
mov
xchg
int3
ror
hlt
cmc
hlt
xor
cld
cmp
xlat
cmp
xor
jmp
in
in
xor
sti
shr
cmp
in
ds
jecxz
hlt
ret
vpminub
add
cmp
in
out
aam
shr
jmp
repz
cmp
fucom
enter
xchg
aam
das
enter
xor
repz
ror
lret
cld
icebp
loopne
test
test
ljmp
out
int3
aam
ljmp
cmp
out
mov
and
xchg
int3
or
icebp
shr
leave
shr
cmp
jmp
in
neg
ret
div
sti
aas
inc
in
mov
fdivrp
test
jmp
nop
sub
loopne
repnz
shl
add
cmp
std
jecxz
sar
test
orb
cld
leave
repnz
cld
icebp
out
test
cmp
cld
out
enter
mov
jmp
rol
fcmovb
int
cmp
shl
ret
sub
ljmp
jmp
jmp
cmp
cli
div
cmp
ror
icebp
std
clc
dec
cld
cld
lret
and
xor
xor
repz
aas
loopne
cld
out
aam
filds
jmp
int3
xor
fcmovnbe
cmp
sti
jecxz
testb
out
enter
int3
xchg
out
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
rclb
and
jle
add
lret
int
ss
idiv
icebp
repnz
ds
sti
xchg
loopne
mov
fcmove
ljmp
clc
xlat
xlat
sti
sar
adc
hlt
std
loope
out
mov
fucomp
in
xchg
jmp
call
xor
fsubr
aam
cld
std
icebp
loopne
test
std
lret
fucomip
lock
in
fisttps
cld
cmp
sti
repnz
adc
aas
cmc
xor
call
mov
in
orl
icebp
fcom
cli
ror
lret
ds
filds
enter
repnz
mov
jmp
fsub
cmp
cli
loopne
icebp
repz
mov
clc
lret
rorb
aam
sti
into
clc
xor
clc
xorb
aas
loop
out
flds
fldl
hlt
enter
in
leave
in
cmp
lret
cli
in
fsub
loop
loope
fdivr
cli
orl
in
xor
sti
cmp
ljmp
call
int
jmp
cs
sub
rcr
stc
ds
std
testl
mov
out
fldl
lock
rcr
stc
iret
lds
mov
mov
mov
std
repz
ss
push
ror
clc
cmp
sar
ret
mov
mov
nop
xchg
lock
xchg
in
rcr
xor
cmp
ss
div
cmp
loope
fcmovnbe
sti
fcmovb
jmp
or
shl
jmp
not
std
cld
fcomi
stc
out
and
fidivrs
out
xchg
jmp
ljmp
jmp
aas
fcmovnbe
flds
in
xchg
loopne
leave
repz
dec
xlat
cmc
icebp
lock
shl
ljmp
jecxz
clc
not
fisttpll
hlt
mov
cmp
call
hlt
iret
idiv
fcom
repnz
sti
loope
in
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
jmp
jle
adc
jle
into
rolb
loope
xlat
iret
xor
das
ror
clc
sti
adc
fcomip
add
jecxz
mov
ljmp
in
neg
leave
call
and
hlt
stc
iret
ret
xor
addl
lret
fdivrp
loopne
loope
roll
repz
loopne
jmp
mov
shrl
aaa
repnz
sti
fcmovu
out
leave
xor
aaa
cld
idiv
call
movb
out
shl
jmp
cmp
sti
fcmove
and
loopne
hlt
rolb
addl
jmp
leave
lret
call
icebp
int
aas
ret
fsub
in
out
repz
xbegin
xchg
jmp
sti
sti
cmp
cmc
ret
fucomip
adc
aad
mov
std
in
shl
repnz
enter
icebp
out
cmp
incb
into
repnz
cmp
jecxz
lret
out
fistl
into
jmp
out
jmp
idivl
cli
shl
mov
test
fmul
mov
xchg
mov
cmp
leave
int
aaa
out
shr
in
cmpl
xbegin
xchg
aam
stc
ret
aam
xor
fucomp
not
out
xor
add
in
mov
ljmp
xlat
cld
out
cmp
xor
test
inc
imul
xchg
cmp
in
shr
in
shl
sti
mul
fdivr
xlat
cmc
idivl
cmc
fcmovb
fdivrp
mov
or
fisttpl
repz
xor
aas
ss
xchg
xlat
out
jmp
sti
mov
xchg
test
aaa
ljmp
leave
repnz
idiv
stc
lret
mov
lret
ljmp
iret
shl
jmp
fucomi
out
mov
jmp
mov
test
faddl
hlt
in
jmp
fmulp
xor
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
xor
addr16
jle
adc
jle
iret
ret
cmp
ljmp
out
xchg
mov
int
sub
aad
repnz
jmp
fadd
ret
loop
out
ret
aam
jecxz
filds
shr
out
jmp
out
xor
xor
sbb
out
or
orl
repz
xlat
clc
sti
into
cmp
aam
imul
loope
shl
aad
loop
fmul
shl
repnz
cmc
shl
aam
test
rcl
in
ret
test
stc
ret
loope
std
mov
mov
out
in
into
xor
rcr
sarl
in
aad
int3
mov
clc
loope
mov
out
in
jmp
fcmovu
jmp
fcomp
fcmovnb
cld
xlat
fsub
mov
sbb
in
out
xor
dec
repz
out
fcomi
call
in
mov
or
leave
repnz
cmp
aad
in
int
in
hlt
adc
in
test
or
xchg
icebp
cmc
in
ljmp
xor
int
sti
test
repnz
repnz
std
xrelease
repnz
ffreep
fdivl
ljmp
in
addl
cld
test
into
out
loopne
int
hlt
out
xor
shr
loope
ret
cmc
cli
cmc
xchg
mov
mov
cmp
shlb
jmp
aam
int
incl
aam
jecxz
mov
leave
std
jmp
mov
aaa
aaa
aaa
not
in
jmp
fucomip
div
div
aad
mov
fcmovu
leave
out
out
add
xor
sub
cmp
sti
fistpll
hlt
fildl
xchg
sbb
xchg
sbb
addl
cmp
fdivrl
ret
fadd
in
mov
std
int3
in
mov
int3
fxch
hlt
xor
out
cmc
xlat
call
ret
ret
ds
hlt
orb
out
in
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
mov
fdivrl
adc
jle
into
xor
rcr
jecxz
cmp
in
addb
div
repnz
enter
nop
loope
lret
loopne
out
loope
cmp
ror
fsubrp
imul
cmp
cmp
enter
jmp
sti
lock
in
orl
lock
loope
aam
aas
clc
test
jmp
out
test
lret
int3
enter
xor
lret
shl
in
cmp
sar
inc
cmp
loope
leave
shr
ret
leave
out
in
sarb
cld
int
icebp
in
repnz
sar
fiadds
testl
xor
shr
cmp
cmpl
xchg
roll
lock
jmp
out
fcmovu
stc
cmp
mov
iret
ljmp
jmp
divb
icebp
cmp
out
cli
into
sti
out
rcr
icebp
shl
ret
fadd
std
test
jecxz
in
imul
ret
repz
div
loopne
std
xlat
repz
adc
in
fdivrp
lock
out
fcoml
xlat
leave
aad
enter
and
rcl
loopne
sti
jmp
cli
icebp
repz
mov
iret
stc
cmc
call
idiv
shl
cld
clc
in
lret
hlt
int
loopne
in
xor
fcompp
in
cmp
in
mov
lret
fisttps
loopne
imulb
enter
std
std
loopne
mov
ljmp
xchg
jmp
jecxz
hlt
cmc
cmp
out
rcr
in
fucomip
out
addb
orl
shl
jmp
sar
fdivrp
loop
roll
call
xchg
or
leave
xlat
hlt
int
idiv
aaa
cmp
rcl
loop
jecxz
mov
sti
into
lds
out
aas
ss
jmp
roll
testl
jmp
add
jb
dec
jmp
aam
fadd
fstp
pusha
shl
push
ja
cmp
add
shr
rol
cld
sti
out
out
loop
ss
cs
cmp
lret
test
sti
ror
cmc
fcom
xchg
loop
icebp
iret
mov
test
fcomip
in
ret
cmc
leave
in
cmp
repz
rorl
sub
xchg
xchg
call
mov
out
ss
cmp
xabort
mov
mov
test
loope
leave
imul
cmc
cmp
fld
add
sti
loopne
jecxz
mov
int
out
hlt
jmp
sar
std
loopne
cmp
ds
leave
fisttps
in
and
hlt
out
enter
cmp
jmp
in
in
mov
fcomp
mov
jmp
aam
in
jecxz
fstpt
iret
icebp
xchg
loope
testl
nop
mov
cs
out
lock
fdiv
ret
cld
repz
repnz
les
ljmp
cmp
out
out
cmp
cld
std
loope
std
and
mov
enter
into
mov
repnz
aad
fdivrp
stc
repnz
hlt
cmp
clc
fcmovb
xlat
fcmovb
sti
clc
or
rcl
loop
xor
enter
rcl
int
hlt
cmp
out
sti
fcomi
mov
mov
ljmp
rcl
xor
aaa
in
fnsave
jmp
ljmp
cmp
cmp
call
jmp
xor
fsubr
cld
fmulp
fidivrl
jecxz
cmp
lds
lock
loop
lret
fcmove
fldlg2
repnz
hlt
adc
ret
aad
loopne
call
into
in
test
aas
xbegin
fcomp
aaa
loope
in
out
xor
lock
fcmovnu
mov
cmp
out
xlat
out
lret
ljmp
cmp
add
clc
xlat
call
in
in
repz
cmc
repz
das
leave
aaa
mov
sbbl
mov
addl
jmp
fcomp
fistps
je
loope
sti
inc
loopne
jle
add
xlat
int3
cli
leave
cmc
lock
cmp
aad
stc
fcmovnb
les
mov
out
shr
fucomi
iret
fsubr
fistpll
cmp
into
xchg
ret
ds
fadds
lret
repnz
xor
xor
in
lock
rcr
cmp
roll
jmp
lret
loope
jmp
in
test
xlat
out
aad
fmull
fisttpl
rorb
ret
std
cmp
hlt
fmulp
out
cmc
sar
out
into
call
mov
jmp
ss
cmp
jmp
in
rol
aam
leave
stc
jmp
leave
nop
testb
out
stc
jmp
clc
lock
mov
clc
std
fdivrp
int
jecxz
jmp
fld
fcmovbe
in
aad
repz
cmp
rolb
aam
jmp
std
leave
sbb
hlt
repnz
int3
enter
adc
icebp
fildl
cmp
jecxz
mov
aam
jmp
xlat
jmp
ret
inc
fcmovnb
aad
fldl
out
lea
ror
cmp
iret
cmp
stc
loope
aam
in
jecxz
hlt
std
fmul
sti
xchg
loope
orb
fdivrl
aad
xor
out
mov
mov
fbstp
into
out
ret
in
shr
repz
loopne
cmp
aam
leave
not
decb
xchg
inc
call
aam
xlat
cmc
cmp
fucomi
repz
xor
xchg
xchg
idivl
out
mov
ss
fstp
lock
mov
ret
loop
out
in
fcmove
int
mov
out
loop
cmp
int3
lret
xlat
cmp
sbb
shl
add
in
sub
loop
int
rolb
fxtract
int3
in
rcr
enter
fdivp
shl
in
leave
sti
lret
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
subl
add
iret
lret
lret
nop
iret
shr
clc
leave
out
enter
rolb
aad
testl
sub
enter
imul
sti
out
int3
cld
stc
cmc
fadds
mov
jmp
out
incb
repnz
jmp
fdivrl
out
xlat
ds
adc
jmp
lea
cs
fcmove
fcmovnu
ss
shr
icebp
fsub
xchg
stc
fdivp
fsubp
std
fnsetpm(287
leave
loopne
iret
xchg
nop
jecxz
aam
cmp
cld
xor
out
int3
jmp
ret
fnstcw
sti
xchg
mov
cld
loope
mov
xchg
mov
shll
cmp
enter
sarl
sub
rcl
enter
cli
fcoml
jmp
idiv
call
fdivr
out
orb
out
nop
rcl
into
out
loope
ret
icebp
rcr
fcomi
aad
dec
ds
aad
xchg
idiv
fucomip
cld
out
adc
add
rol
ljmp
ret
cmp
roll
lret
loop
lock
out
repnz
out
cmp
shlb
stc
mov
aam
cld
fsub
ffree
out
les
int
int
call
cmp
xor
lds
jecxz
or
int
in
int
repnz
rol
out
lock
leave
aam
out
aas
cmp
call
loopne
shl
xchg
xchg
fnstcw
vpand
rolb
repz
leave
mov
jmp
test
test
lret
int3
nop
aad
shl
xor
cmp
out
repnz
stc
ds
mov
test
repnz
fucomi
repnz
icebp
cli
fidivs
out
sar
ret
in
ret
or
jmp
ret
lock
cmp
aaa
out
std
int
or
out
rol
ret
xor
cmp
test
add
adc
jmp
int3
rol
aad
pop
pop
movsb
or
push
bound
jle
adc
jle
cmp
jecxz
fdivp
fdivr
decb
nop
mov
shl
cmp
std
ss
aad
fdiv
addl
in
inc
fsubrp
in
mov
xor
iret
cld
std
cld
lock
into
adc
clc
cmp
xchg
out
in
loop
xor
fstp
stc
rcr
in
in
test
out
test
xchg
fmulp
loope
nop
orb
in
sti
aam
int
fidivrs
in
loopne
test
test
lret
in
sti
xlat
into
cmp
int3
repz
ror
repnz
fidivrl
cmc
cmp
in
test
les
in
iret
loopne
aam
icebp
shll
out
cli
cmp
cld
aaa
fstp
cmp
aad
fsubr
clc
out
jmp
mov
in
repnz
jmp
mul
inc
repnz
addb
loopne
in
cmp
ss
cmp
hlt
rcr
std
cld
out
mov
lret
loop
in
lea
lock
jmp
ss
icebp
cmp
stc
std
filds
inc
jecxz
jecxz
lock
popl
stc
fcmove
hlt
stc
xor
stc
out
aam
out
clc
aad
cld
rcr
std
fucom
mov
out
aad
ret
fcomi
lret
xor
shl
in
jecxz
lret
mov
leave
in
jmp
in
in
aaa
in
ljmp
icebp
out
in
test
sub
xchg
enter
xor
into
lock
iret
in
cmp
fcomi
xlat
xchg
dec
orb
out
call
cmp
fdivl
repz
xchg
in
vpmovmskb
fimuls
lock
lock
lret
leave
int
aaa
ror
filds
fsubp
jmp
out
iret
mov
bnd
out
neg
int
hlt
rcl
cmpb
mov
out
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
mov
jle
add
rolb
icebp
cmp
cmp
xlat
sub
add
rol
aam
loope
test
call
xor
jecxz
in
cmc
sar
loopne
shl
cmp
incb
jmp
mov
xchg
aad
out
stc
lock
xor
repz
call
in
clc
out
shl
mov
repnz
call
iret
ror
in
ret
cld
out
into
mov
cli
icebp
jmp
in
clc
icebp
call
stc
sar
xlat
xor
loopne
fsub
shl
mov
loop
out
xor
sar
out
jmp
iret
fiaddl
cli
fdivp
sti
call
lock
xorb
ret
xor
call
add
fsin
mov
iret
test
hlt
iret
in
xor
stc
int3
out
xor
cmp
cmp
cmp
mov
fisttpl
lret
xchg
cs
ror
cmp
icebp
fsubr
cmp
repnz
or
fldl
lret
out
enter
cld
out
xor
add
std
push
adc
xlat
les
fstp
in
mov
cmc
jmp
xor
aam
iret
inc
rorl
incb
mov
imul
call
fnstsw
jecxz
stc
aam
loope
notb
loop
xchg
lock
stc
enter
cli
loopne
loope
aam
loope
cli
in
mov
ljmp
les
rcl
xor
cmp
sar
cld
xlat
cmp
fcmovb
jmp
xchg
fcomp
iret
into
lret
into
xchg
xchg
out
int3
xlat
int
iret
ror
aad
iret
stc
fdivrs
ds
test
loopne
test
mov
int3
shl
jmp
xlat
std
fdivrl
test
mov
fucomip
in
test
lret
fsubr
rcr
iret
lock
shl
in
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
adc
psubsw
adc
jle
loop,pt
lret
out
ficoml
call
clc
cmp
idiv
cmp
int3
in
test
aas
std
enter
jecxz
iret
jecxz
mov
fcmovbe
shll
das
lock
cmc
stc
cmp
in
clc
jecxz
test
stc
cli
fsubr
stc
call
aam
cli
shr
int
out
cmp
clc
cmc
loopne
sub
jmp
xchg
cmc
das
les
ror
cs
fmulp
fst
clc
cmp
repz
xchg
in
std
neg
ljmp
out
shl
xor
in
idiv
lock
into
xlat
add
xlat
jmp
orl
in
push
sti
sti
cmpl
shl
in
xchg
fmul
mov
repz
in
cmp
xlat
cmp
int
fcomip
loopne
out
ret
leave
sti
out
in
iret
loop
div
out
lret
fdivl
leave
lret
lock
aam
std
loopne
fiaddl
mov
iret
mov
lock
cmp
ror
in
cmp
shr
adc
rcl
ljmp
fiaddl
repnz
icebp
stc
hlt
lock
ds
lret
fdivrs
test
in
rcr
out
cld
out
mov
aam
divl
jecxz
cmc
lret
int
hlt
loope
neg
testb
cld
int
fmul
sti
mov
std
loop
in
not
hlt
out
aam
fcomp
cmp
cli
fiadds
mov
fdivp
xor
loopne
lock
aad
call
neg
inc
div
jecxz
in
clc
orl
test
lret
stc
leave
jecxz
cmc
call
in
aad
xlat
fcmovb
fldl
loopne
lret
xchg
cmc
jmp
sub
lock
xabort
fdivrs
cmp
in
hlt
mov
loop
cmc
aad
shl
rcr
repz
jmp
out
out
mov
xchg
sti
mov
lret
mov
out
xor
mov
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
fdivrs
jle
adc
jle
cmp
iret
xor
ljmp
in
out
repz
test
lock
loop
lock
in
not
iret
cmp
repz
fsub
call
addl
jmp
rcr
rcl
hlt
cmp
jmp
test
cld
call
xchg
xchg
xchg
xor
std
divb
fcmove
out
jecxz
aas
into
lock
flds
mov
in
int3
sub
enter
std
icebp
loopne
ljmp
in
cli
cld
imul
fcmovbe
fcmove
fldl
iret
fucomi
cmp
fcmovnu
xlat
roll
ret
lea
xchg
shl
rol
in
int3
stc
xlat
int3
sub
cli
hlt
stc
sarl
and
in
aas
test
mov
fucomip
icebp
stc
aaa
fmul
std
idivb
clc
sar
rcl
addb
orl
ret
shl
aad
aad
out
out
hlt
shl
iret
std
rcr
mul
fsubr
in
shl
int3
hlt
roll
cld
cmc
sar
out
cmp
jmp
iret
into
ret
fcmove
out
fucomp
int
fcomi
lret
out
fdivp
in
xor
sti
cmp
std
neg
rolb
stc
xor
icebp
int3
out
aam
in
imul
shr
enter
test
cmp
ret
lret
into
shr
inc
mov
int
xor
xor
aad
std
stc
into
fdiv
hlt
sbb
clc
loope
fucom
fucomip
loope
and
out
int3
xor
icebp
sti
leave
fnstcw
lret
out
lret
into
sbb
std
fcmovnb
icebp
xlat
mov
or
mov
or
out
fdivs
repnz
sarl
loope
clc
loope
stc
icebp
stc
in
sbb
xchg
out
jmp
fmul
sti
rcl
clc
neg
loopne
neg
out
jmp
fadd
sti
sti
xchg
xchg
xor
xlat
hlt
xor
cmp
ds
cld
leave
loop
jge
mov
jmp
aam
aad
fstp
movsb
ficomps
inc
xor
add
mov
jecxz
popl
ror
out
shlb
fcomp
ror
in
or
vpsrad
fiadds
mov
lock
ljmp
cmp
repnz
loope
ds
mov
iret
jmp
dec
in
aad
shlb
cmp
out
int3
roll
xchg
in
enter
mov
jmp
cld
jmp
cmpl
out
xlat
clc
fcmovnu
mov
enter
cli
nop
shr
hlt
repz
shr
xor
lock
sti
addl
out
in
int
out
clc
fnop
in
icebp
aad
cmp
lret
div
repz
jmp
ljmp
aam
out
repnz
ret
xor
fpatan
ret
stc
iret
iret
flds
clc
movb
les
shll
jmp
sti
shl
in
cmp
clc
iret
shl
enter
sub
orb
in
int3
cmc
cld
enter
loop
in
out
rol
cmc
repnz
aas
lret
out
mov
jecxz
into
call
xor
loopne
aas
aas
fimull
fisttps
ljmp
aam
into
neg
loopne
in
sti
stc
loop
sub
out
icebp
xchg
shl
out
sti
aaa
in
aam
fnstsw
loop
fcom
incb
iret
in
mov
rcll
ljmp
hlt
xor
rcr
cmp
in
mov
out
out
xlat
jmp
aad
out
cmc
loope
icebp
cmp
stc
aam
incb
test
decl
in
lret
enter
cmc
cmp
ror
add
movb
in
mov
ret
stc
shl
cmc
stc
iret
xlat
icebp
clc
icebp
hlt
addl
loope
mov
enter
cmc
xlat
cmc
aam
repnz
add
add
lret
enter
int
cltd
movsb
imul
mov
out
jle
adc
jle
icebp
icebp
cmp
or
xchg
jecxz
in
shr
iret
int3
fdivp
enter
cli
sarb
fcom
clc
mul
mul
repz
orl
mov
cmp
lret
xor
repz
fdiv
aam
div
rcr
repnz
cmp
jmp
xchg
hlt
xor
dec
lock
rcl
repz
out
shl
adc
lret
jmp
into
lock
stc
xlat
out
lock
fsin
rolb
loope
cli
mov
std
fucomip
std
mov
aam
cli
cld
out
sti
cmpl
xchg
aam
jmp
test
leave
in
jecxz
cmp
fldl2e
leave
repnz
cmp
out
ljmp
into
icebp
loope
orb
fnsave
ror
fadd
sar
rcr
cmc
ret
fldl
jmp
fucomip
ret
rol
cmc
cld
cld
shl
rcl
ffree
rorl
jmp
decb
mul
rcl
jmp
fstpt
ffree
sar
ret
loop
stc
mov
neg
lret
xchg
xchg
cmc
aam
in
call
lret
icebp
cmp
ret
mov
repnz
jmp
lock
fdivs
int3
stc
repz
into
clc
out
mov
sti
repz
faddl
lea
rcr
cmp
sti
icebp
shll
mov
stc
testb
decl
fnsave
leave
xlat
sbb
shl
repnz
call
stc
ljmp
hlt
sub
lock
fdiv
clc
cmp
div
test
xlat
cmp
jmp
call
jecxz
int3
shll
into
fstp
xlat
shl
aad
mov
into
xchg
jmp
fdivs
lret
jmp
in
loop
shr
hlt
add
hlt
ret
out
loopne
iret
inc
jmp
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
loope
in
iret
iret
aaa
cmp
clc
aam
aas
icebp
fndisi(8087
cmp
xlat
addb
jmp
hlt
rcl
ffreep
loope
jmp
repz
rol
sbb
cmc
ljmp
in
mov
cmp
jmp
ljmp
jecxz
repnz
clc
in
enter
repz
fdivrs
call
cmp
out
test
xchg
loopne
in
std
into
roll
repz
repz
shr
iret
icebp
fisttps
ljmp
shr
sar
call
int3
leave
sar
out
rcl
in
cld
mov
int3
xchg
mov
nop
hlt
loope
xor
cmp
fucompp
shr
ds
ret
decb
and
call
shl
xor
cmp
fdivrp
fsubp
fimull
out
test
in
xor
xor
into
shl
adc
mov
mov
test
rcl
lds
leave
call
sti
in
std
leave
mov
test
vpaddd
in
icebp
out
mov
loopne
in
int3
out
jmp
repz
ret
aam
aad
int3
fld
sti
xchg
iret
in
loopne
rcl
xor
ror
fcomi
call
xlat
mov
loope
aad
int
xor
lret
fdivr
ss
rcr
ds
xor
lret
adcl
enter
jmp
fucomi
clc
rolb
testb
nop
jmp
xor
lret
cmp
int3
jmp
loopne
test
sub
fisttps
out
out
mov
xor
test
aam
lret
rcl
stc
ror
aam
stc
idiv
adc
add
sti
rorb
aaa
cmp
repz
xor
cmp
cmp
jne
pop
jmp
int3
into
fmul
fsubrl
in
jecxz
leave
adc
mov
adc
jle
faddl
aad
out
leave
test
iret
aaa
in
in
fidivrl
xor
adc
loope
fsubr
incb
out
ror
or
int
jmp
hlt
cmp
fldl
jecxz
cli
loopne
mov
out
lea
hlt
leave
fcmovbe
shl
shl
fsubp
rol
mov
cld
cld
sar
nop
lret
loop
in
lock
fucomi
stc
cmp
jmp
sti
ffree
aad
loope
xchg
out
jmp
ret
cmc
in
jmp
in
ds
cmc
cmc
call
cld
les
repnz
aam
lock
iret
mov
fnstcw
adc
fstp
in
xlat
out
incl
aam
jmp
xor
jecxz
int
call
loop
vpmulhuw
loopne
test
fisttpl
ljmp
fildl
in
add
clc
fdivr
and
test
les
fldlg2
xor
cmp
rcl
out
hlt
fdivrl
ljmp
out
test
rol
xor
int
cs
cmp
iret
int
stc
into
clc
out
ds
fsub
les
or
jmp
enter
ss
sar
fcmovnu
aam
stc
icebp
rcl
jecxz
ljmp
int
out
xchg
into
int
xor
fcmovnbe
loopne
aam
int
xchg
in
out
loop
loope
jmp
ss
out
loopne
stc
not
in
cmp
mov
test
xchg
xorl
sarl
int3
aaa
leave
out
roll
cmp
xlat
fdivr
mov
int
into
loop
call
sarb
cmp
shl
clc
roll
mov
clc
jmp
leave
in
fcomip
ret
lret
fcmovne
rcl
cmp
xchg
sar
ljmp
nop
loope
test
pop
jmp
ret
ror
aam
mov
loopne
xor
jle
int
jmp
cmp
jmp
jecxz
loop
in
cld
lret
jmp
in
int
mov
in
aam
xor
lock
icebp
cmp
rcr
loope
movl
into
loopne
out
out
fdiv
cmp
std
leave
xlat
cli
and
cmp
cld
lret
int3
xchg
lock
in
cmp
lret
fmulp
sti
cld
sar
test
cli
movl
xor
xor
icebp
icebp
neg
iret
loopne
loop
cmpl
in
clc
call
icebp
repnz
xchg
in
int
fdivrs
hlt
jecxz
cmc
imul
shl
fcomp
out
cmc
fcomip
shr
in
fcmovnu
call
into
shll
divb
rcl
fsubr
rcl
repz
rcr
out
hlt
adc
fstl
call
leave
test
shr
fdivrs
std
clc
repnz
mov
mov
std
jmp
rcll
cmp
stc
repz
jmp
lock
test
lds
loop
out
call
shl
lret
sarl
aam
stc
loopne
adc
sti
fdivr
fsubp
test
loopne
xbegin
fxch
leave
lret
xor
out
stc
repz
in
in
mov
ret
lock
cli
jmp
sarb
int
loope
loopne
in
cld
sti
imul
int
fxch
fcmovnu
xchg
mov
in
in
aaa
fcmovnbe
lock
aas
ret
addb
xchg
jmp
xchg
loope
lret
out
aad
xor
das
call
cmp
rcr
in
rolb
in
xchg
call
loope
leave
out
enter
jmp
aam
aam
in
loop
jmp
xchg
icebp
ffreep
int
xor
in
cmp
in
icebp
not
jmp
aam
and
cld
xchg
fsub
lock
shr
xor
cmp
std
fmulp
ds
cmc
rol
fisttps
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
sar
mov
xchg
hlt
loop
sub
fcom
call
leave
in
shl
out
out
xlat
fsub
std
enter
test
int3
out
aam
ror
xor
sarb
fdivrp
into
loopne
testl
xchg
out
hlt
call
jecxz
xor
cmp
repnz
roll
lret
lret
jecxz
xchg
repz
int
xor
out
lret
in
hlt
stc
ljmp
stc
loope
xchg
jecxz
loope
imull
fsubp
imul
xor
loope
fldl2t
decb
nop
out
repz
cmc
fbstp
shl
xor
call
shl
xlat
out
repz
int3
hlt
hlt
out
out
div
xor
les
jmp
sti
ds
iret
hlt
enter
in
out
ror
test
jmp
repnz
fdiv
cmp
iret
adc
loopne
fsub
popl
into
ljmp
shl
std
cli
iret
xchg
xchg
fucom
lret
fldl
in
shl
xlat
ss
leave
stc
cmp
incl
rolb
in
mov
in
lret
enter
sbb
cmp
fst
in
cmp
cli
xlat
test
in
loopne
test
mov
int
cmp
xor
aaa
out
cmp
fdivl
mov
test
out
xlat
pop
lock
repz
jmp
aaa
stc
out
in
testb
mov
jmp
ljmp
iret
xor
idivb
ffree
jecxz
adc
xchg
jecxz
std
test
leave
fsubrs
cmp
fnstsw
sbb
cmp
sbb
fdivp
std
in
enter
adc
repnz
lock
enter
hlt
aam
cmp
cmp
add
in
into
in
loope
xor
into
fxch
shll
roll
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
lea
add
sti
shl
cmc
sti
out
cmp
ret
lret
mov
xchg
lret
shl
adc
test
cmp
int
sar
cmp
test
testl
enter
aam
in
out
aaa
jmp
int
ljmp
in
imul
ds
in
cmp
in
mov
hlt
sub
fidivl
fld
cmp
cmp
fld
into
loope
jmp
xchg
xchg
mov
clc
iret
in
in
out
cmp
ds
xor
iret
cmp
ret
mov
lock
iret
test
fcmovb
jmp
fstp
rcr
fdivp
iret
loop
lret
ret
mov
int
cld
mov
nop
xchg
icebp
xor
iret
in
in
enter
mov
fsubr
cli
int3
in
and
sar
fxch
cmp
xlat
xor
push
out
mov
xor
iret
ficoms
jmp
shll
in
out
addb
in
fmull
jmp
rcl
cmp
rcl
call
cli
loope
mov
xlat
cmp
mov
int3
ljmp
cmp
cmp
repnz
ret
mov
fcomi
shr
in
loope
xlat
repnz
ror
hlt
jmp
and
shl
xlat
in
loope
xor
repz
ret
jecxz
iret
out
xor
aad
vpsrlq
xlat
sti
cli
std
fsubr
loopne
in
fcmovnu
cmc
test
call
xor
loope
ror
fadd
test
fdivr
out
jmp
rcll
out
xor
or
repz
repnz
ljmp
hlt
jmp
shr
cmp
jmp
ds
loop
inc
shl
rorl
or
in
lret
xor
div
cld
fcmove
cli
stc
fdecstp
in
ret
int3
rol
out
fcmovbe
sti
rcl
incl
inc
or
sub
add
ret
iret
enter
int
xchg
cmpsb
push
ja
lds
jle
add
xchg
std
ljmp
repnz
imul
cmp
int
icebp
leave
mov
xchg
add
shr
sub
cli
in
leave
cld
clc
aam
cmp
aad
cld
roll
les
out
out
jecxz
into
test
ffreep
loope
cmp
sar
out
fdivrp
cli
lock
rclb
ror
cld
into
fsubrp
hlt
cmc
fcomp
aam
in
hlt
call
fisttpll
cmc
xchg
in
lret
fcomp
xor
aad
loope
leave
test
int
mov
ljmp
fdivl
ds
xlat
loop
in
std
jecxz
xor
cld
testl
call
ret
xor
iret
cmp
rcl
ds
out
cmc
sub
fmul
mov
out
jmp
ljmp
iret
jecxz
repz
leave
mul
fdivr
mov
hlt
loopne
jmp
sarb
mul
in
sarb
push
in
xchg
out
out
xchg
aam
sub
jmp
stc
cmp
in
int3
fsub
cmp
aad
fsubrp
mov
loopne
cld
int3
iret
fucomp
in
in
fdiv
xlat
ljmp
lock
rorb
mov
int3
xchg
and
xor
std
fmulp
shl
sbb
shl
out
test
or
in
repz
fcomip
aaa
call
lock
lds
lds
mov
nop
out
lret
xlat
cmp
stc
idiv
cld
in
cli
rcr
cmc
test
mov
test
icebp
nop
cmc
cmc
or
fcmove
hlt
cmp
in
out
aaa
icebp
sti
rol
sbb
lret
stc
orl
loope
xor
sar
out
fmul
int
in
clc
aaa
fsub
aas
loope
loopne
cli
fdiv
fucomi
out
in
enter
in
iret
lret
xlat
shl
ss
mov
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
addl
lock
in
decl
clc
out
xor
neg
fprem1
in
in
repz
fucom
fxch
movl
div
jecxz
fcmovbe
lret
cmp
xor
int
add
enter
loop
out
leave
hlt
xchg
icebp
ret
ret
in
das
icebp
out
rcl
int
fsubr
vpsadbw
loopne
out
ror
ljmp
shr
in
cmp
lret
cld
cld
out
ds
std
shl
xchg
inc
xlat
iret
stc
loopne
into
test
das
out
loope
xor
fsubr
fcmovu
cmp
hlt
cld
out
cmc
mov
in
enter
jecxz
lock
mov
les
rolb
test
cld
mov
mov
int3
xchg
nop
aad
cmp
aaa
jecxz
enter
cmc
cmp
aam
ret
xchg
xlat
ret
idiv
xchg
cli
cli
leave
rcl
out
loopne
jecxz
jmp
aad
int
xlat
cld
jecxz
cmp
std
les
in
cld
xchg
xchg
aas
jmp
lock
cmp
jecxz
aad
movb
in
test
cmp
out
out
shr
xor
iret
sti
out
cld
cmp
aaa
fdivrs
fidivs
cmp
stc
call
into
jmp
not
lret
cmp
out
cld
fdivr
addb
xchg
int
ret
cmp
shr
out
aam
les
aad
lock
in
or
clc
jmp
mov
addl
xchg
xor
shr
jmp
in
fyl2xp1
cmc
ret
fcmovnb
in
mov
testl
cld
xor
ror
out
test
out
repz
fdivr
movl
aad
fcmovnu
ss
hlt
jmp
sar
ds
filds
cli
int3
test
repz
cli
fld1
fdiv
sarb
loope,pt
xor
loope
orb
shl
shlb
jmp
add
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
add
jle
adc
jle
out
clc
repz
out
cmp
int
aam
sar
loopne
cli
out
out
mov
in
in
lret
xor
jecxz
out
out
cmc
ret
mov
mul
clc
xchg
in
das
clc
int3
cmp
xlat
ds
stc
fadds
in
jmp
rclb
int
aaa
cs
cmp
jecxz
ret
loope
mov
mov
fidivrs
loope
cli
sar
cmc
fdivr
ds
xlat
leave
ffree
int3
cli
out
cli
lret
test
xor
hlt
neg
shr
aas
ret
jecxz
in
cld
loope
rcr
shl
ror
ret
xor
sar
xlat
xor
ss
cli
fpatan
repz
ljmp
aad
xlat
aam
cmc
cld
sar
xor
iret
iret
cmp
xchg
cli
in
fptan
fimull
in
icebp
ret
out
fcmovbe
cmp
fnstsw
hlt
ret
roll
testb
mov
in
fsubrp
int3
cmp
aad
shl
clc
ret
mov
mov
icebp
rcl
xor
call
cmp
cli
mov
hlt
loopne
out
fiadds
in
mov
not
ss
cmp
sarl
xorb
cmc
filds
xor
loope
ljmp
imul
iret
shr
iret
fiadds
loope
cmc
rcr
std
fprem
sbb
into
in
fdivp
in
jmp
fcmovu
cmp
clc
clc
faddl
in
mov
flds
hlt
ss
stc
xor
fsub
jmp
into
lock
shl
out
xchg
sbb
jmp
mov
out
call
fmul
cmp
loope
cmp
loope
addb
in
jmp
out
iret
in
ret
xor
out
jmp
jecxz
fcmovb
hlt
roll
sub
add
ror
enter
lret
add
out
jecxz
cmpl
lea
xchg
jmp
repnz
lret
cmp
sti
in
rcr
in
fidivrl
rol
aam
addb
roll
shl
fdivrs
lock
neg
stc
idiv
stc
mov
test
cld
clc
rorb
out
xchg
jmp
cmc
cli
sar
fidivs
ret
aaa
and
enter
mov
lret
dec
divl
cmp
sti
cmp
enter
xor
loope
rol
faddl
mov
lock
fcmove
nop
out
loope
aad
idiv
out
int
test
icebp
sti
adc
loope
ror
int
aad
ret
stc
hlt
xor
test
ljmp
jecxz
out
mov
std
loop
hlt
ljmp
cmc
cmp
stc
cmp
ljmp
fsub
in
cld
in
loop
xchg
test
shl
xor
lock
std
icebp
out
shl
repnz
flds
xchg
mov
rolb
cmp
into
lock
aam
sub
into
ds
jecxz
mov
iret
call
xchg
lock
xor
sti
aad
cmp
loope
repnz
icebp
filds
clc
mov
xchg
fucom
sub
xlat
leave
xor
in
bnd
stc
loop
in
sti
mov
test
shl
jecxz
xchg
repnz
jecxz
aam
sar
in
iret
jecxz
fsub
and
cli
add
test
nop
xchg
mov
enter
not
sti
lret
fistpll
mov
cmp
mov
rcl
fld
xor
out
xor
fbstp
loopne
icebp
repnz
repnz
xchg
int3
lock
in
iret
cmc
xlat
cmp
lock
icebp
leave
shl
sti
out
in
shl
cld
loopne
ret
fcomp
fdivp
fdivp
std
mov
ret
jmp
xor
sar
rolb
rcr
out
out
cld
fucomip
out
test
mul
loop
ljmp
or
add
or
mov
jmp
int3
enter
into
push
mov
rorl
jle
adc
jle
aas
cmp
ret
loop
std
aam
rcr
mov
sub
rcl
xor
call
dec
cld
cmp
cmc
cmp
clc
call
jmp
call
hlt
hlt
out
out
fsubr
xor
cmp
rcr
test
loop
aad
lret
xchg
cld
loop
fmulp
shr
cmp
in
xor
rcl
lret
cli
adc
repnz
xchg
dec
fsub
jmp
icebp
repz
in
cmp
adc
jecxz
loop
fimull
std
mov
ljmp
xor
ljmp
call
ret
testl
jmp
clc
div
call
in
adc
mov
cld
call
xchg
aam
das
lret
aam
shl
sub
xor
iret
sarl
iret
lock
in
mul
mov
int3
loop
out
loopne
hlt
aaa
cmc
std
out
out
cmp
not
xrelease
clc
jmp
xchg
loop
sub
ss
xor
icebp
cld
hlt
loopne
ds
enter
int
fcmovnu
out
in
cld
fsubp
sub
cmp
int3
fcomi
cmp
ret
out
fdivrp
loop
ljmp
mov
out
in
fbstp
in
lds
lret
cmc
out
lret
and
ret
loop
fcmovnb
aad
out
mov
mov
iret
shl
shl
cmp
fdivs
cmc
neg
fadd
jmp
mov
mov
xor
lret
imul
cli
loope
ret
jmp
fcmovu
xchg
xchg
out
xchg
jmp
jmp
hlt
loopne
jmp
fdivr
cmc
aas
mov
in
faddl
mov
loope
sub
jmp
cld
repz
out
aad
in
jmp
or
loop
xor
in
jmp
fildl
clc
test
aad
lea
je
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
loopne
shl
loopne
div
test
rcl
icebp
ror
stc
into
aad
ds
test
in
cli
call
mov
xor
rcl
cmp
fcomp
idivl
clc
out
fsubr
rol
fdivrl
fdiv
fdivrp
into
in
in
loopne
xchg
iret
aam
mov
fiadds
fdivr
fdivrp
ret
in
out
out
loopne
in
int3
test
enter
rol
incb
xlat
hlt
xchg
ror
mov
fimuls
in
shl
aad
loopne
loope
jmp
rolb
stc
test
mov
lret
leave
in
repnz
into
cmp
loop
loope
hlt
jmp
loop
ljmp
cld
iret
iret
stc
cmp
aam
cmp
aam
test
enter
f2xm1
mov
out
sub
aam
jmp
cmp
in
flds
mov
in
ljmp
lock
fcmovu
loopne
xor
fcomip
xchg
in
into
into
jmp
fdivr
lret
in
into
cld
ds
cmp
hlt
aas
aad
fistpll
lret
incl
fisttpll
out
int
fdivp
lret
stc
jecxz
in
ds
out
div
idiv
jmp
cld
jmp
icebp
adc
hlt
ss
std
in
addb
idiv
mov
test
loopne
sti
loope
lds
cli
fnstcw
aad
cld
std
fdivr
out
hlt
xchg
aam
sti
ret
cmc
out
ret
jmp
jecxz
xor
iret
test
out
loop
into
ds
jecxz
jmp
in
jmp
in
in
repnz
fdivrs
ss
shlb
fldl
loope
clc
in
mov
mov
call
cmp
in
in
lret
cmpb
cmc
shl
mov
fimull
mov
cld
mov
jmp
in
icebp
xor
int3
fst
jmp
inc
in
mov
addl
jmp
int
fcmove
fstp
adc
js
pop
ret
mov
adc
jle
test
inc
mov
lret
mov
mov
mov
jmp
icebp
pop
out
fadd
xor
jmp
cmp
rol
in
iret
fincstp
enter
loopne
into
or
cmp
jmp
shl
icebp
out
fneni(8087
iret
mov
leave
cld
in
lret
mov
int3
icebp
loope
imul
ror
std
repz
not
loop
shl
jmp
enter
mov
clc
clc
fstp
clc
jmp
aaa
fdivp
enter
adc
iret
fmull
not
lret
out
cmp
shl
rolb
clc
loope
int
out
cmc
out
repnz
imul
call
out
rcr
jmp
aam
jmp
cmc
out
xchg
fsub
xor
icebp
fdivrl
leave
cmp
ds
fiaddl
faddp
cmc
xor
ret
ljmp
xor
into
jmp
rcr
rcr
lret
ret
ret
mov
repz
out
jmp
cmc
in
fsqrt
lret
iret
out
ljmp
stc
cmp
ljmp
in
loope
call
rcr
lock
ljmp
ret
cld
orb
repnz
enter
cmc
int3
out
leave
repz
rcl
sar
iret
addl
lock
in
loope
mov
repnz
icebp
sar
aam
clc
cmc
shr
in
iret
in
jmp
call
rorb
call
shr
xlat
xor
loope
jmp
std
mov
in
jmp
int
fdivrp
cmc
ds
repz
fiadds
loope
xchg
aaa
das
lret
aam
fcmovne
aas
cmp
adc
fcomp
test
clc
loope
idiv
xchg
out
aad
enter
aad
cli
aam
std
out
rcl
loopne
mov
ljmp
out
int
inc
lock
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
cmpsl
add
jle
add
shlb
int3
int
rcr
cmp
int3
loope
ret
cli
cli
incb
sar
loopne
shr
out
lock
aaa
shr
cld
repnz
rol
fdivr
xchg
in
mov
ljmp
mul
loope
fldl2e
jecxz
call
out
shl
cli
loope
aam
loope
loop
int3
in
mov
in
xor
fprem
jmp
cmc
adc
clc
cmp
loope
fdivp
idiv
or
leave
in
lds
lock
aad
fprem
roll
loope
fiadds
int
hlt
loop
out
xor
ds
ds
add
sar
sbb
out
ljmp
aaa
repz
cmp
clc
cmp
cli
adc
leave
jmp
mov
std
jecxz
jecxz
xchg
imul
xor
sti
divb
aad
shlb
cmc
call
cld
out
ljmp
sar
imul
cmc
int3
shll
stc
fcmove
shl
jmp
jecxz
mov
xchg
out
shll
int
cmp
stc
out
shl
hlt
cli
fsubr
leave
loopne
ffreep
xchg
mov
repz
int
lock
iret
shl
cli
sbb
fcomi
fmull
sub
xchg
loop
cli
clc
into
out
sti
cmp
int
repz
test
icebp
fcomi
jecxz
jmp
loop
cld
rorb
ret
lret
ss
call
clc
into
xor
xlat
call
ret
out
add
shll
cmp
idiv
in
inc
xlat
icebp
fst
in
mov
ljmp
shll
ljmp
sti
out
sbb
loop
leave
rcr
loop
fldl
and
loope
clc
shll
das
sti
in
shr
aam
sar
in
xchg
mov
in
mov
xchg
shrl
shll
hlt
fdivr
fcomi
icebp
sbb
push
adc
xlat
xlat
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
in
call
jle
add
mov
int
enter
xchg
in
xchg
rol
xor
aam
neg
jmp
out
jecxz
shl
cld
mov
mov
out
loopne
orb
in
enter
call
out
test
cmc
imul
loop
incb
rcr
clc
in
ss
fldl
loope
test
fdivr
lret
out
loope
loopne
int3
fsubr
iret
not
std
cmc
aaa
fdiv
loopne
fisttpl
std
fiaddl
int3
lret
fsub
into
lret
aas
cmp
in
mov
mov
in
in
xchg
aam
icebp
shll
icebp
iret
jmp
clc
cmp
xlat
cmp
clc
inc
loope
out
enter
std
repnz
loop
das
cmp
cmp
shl
xor
out
cld
repz
loop
leave
and
xchg
in
jmp
rol
xlat
out
fst
ljmp
out
fucomi
in
ret
in
xchg
mul
lock
repnz
lret
cmp
fdivrp
rol
cmp
in
cli
out
fiadds
in
ljmp
shlb
out
loop
cmp
cmpb
out
lret
fdiv
cld
int
xchg
mov
ljmp
int
xlat
div
jecxz
cli
out
out
mov
nop
out
cmc
iret
xchg
loopne
int
cmp
test
out
roll
fyl2x
mov
out
loope
mov
fdivrs
fcmovb
lock
ds
loope
lret
mov
cmp
xchg
xchg
aam
cli
leave
aam
test
test
stc
loop
stc
xchg
mov
mov
addl
out
sar
lock
sti
jmp
neg
jecxz
mov
orb
int
ljmp
div
shl
sbb
out
loope
mov
cli
stc
fsub
mov
xchg
sub
cmp
clc
fsub
stc
rcl
dec
in
jecxz
out
addl
cld
shl
in
ror
repnz
clc
cli
fcmovnb
lret
loope
jecxz
mov
flds
fisttps
jmp
out
xor
cmc
cmp
not
sti
fcmovb
ret
cld
in
xchg
repz
xlat
lds
stc
aam
sti
std
loope
fdivrp
ret
cli
loope
lret
int
icebp
fstp
repnz
xlat
ret
out
out
cli
sti
hlt
int
addl
fiadds
in
loopne
lret
lret
iret
das
lret
hlt
cmp
shr
testb
pushf
clc
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
not
clc
std
call
dec
xchg
xchg
fbstp
icebp
call
idiv
fcomp
cmp
out
mov
idiv
xchg
out
ljmp
xor
out
shl
aad
xor
xchg
mov
in
fimull
xchg
repnz
out
jmp
ds
xlat
aas
ror
cmp
idivl
faddp
jecxz
clc
loop
sub
jecxz
int3
iret
xor
xor
aam
cmp
jmp
fcmovb
repz
xlat
hlt
fsubr
std
lret
loop
std
ror
aad
xor
std
fcmovbe
xor
clc
lret
in
cmp
orl
test
in
loopne
enter
sub
cmp
iret
hlt
and
aam
leave
lds
jecxz
leave
xchg
and
call
xlat
fistpll
dec
aas
ret
xor
aas
xchg
out
ror
into
xor
loope
ret
cli
stc
repnz
repnz
stc
int3
repz
sti
in
out
idiv
xchg
cli
cli
dec
aam
xor
sub
cmp
div
sar
cmp
cmp
fcmovbe
ret
mov
faddp
rcl
lock
jecxz
clc
cmp
fucomi
fnstcw
xor
lock
call
jmp
stc
rcr
cld
test
shll
out
jmp
shl
std
fnstcw
aad
fsub
mov
in
int
icebp
lret
mov
out
into
aad
leave
lret
out
ljmp
enter
test
xchg
addl
jmp
lds
aas
aam
cld
int3
int
out
clc
xchg
xlat
sar
jecxz
lret
loopne
cmp
fists
iret
fcomi
leave
fdivr
sarb
sti
test
testl
cld
or
xchg
int
lret
into
cmp
stc
loope
shl
jecxz
stc
int
decl
icebp
aas
cs
in
xor
aam
sti
cmc
fcom
iret
sbb
ret
call
mov
aad
out
out
cld
cmp
neg
jecxz
div
mov
xchg
out
nop
jecxz
shl
out
hlt
cli
fsubrp
in
rolb
not
fadds
jmp
sti
shr
loopne
int
shll
leave
neg
int
sti
sti
call
sbb
xchg
ror
repnz
rcl
into
xlat
int3
in
cmp
loop
into
test
xchg
mov
test
into
xchg
testb
cmp
stc
cmp
cmp
std
shl
loopne
jmp
fdivrp
roll
in
ret
cli
lret
rcr
leave
std
test
inc
cld
daa
test
inc
add
add
add
rolb
and
add
and
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
mov
xchg
jle
mov
aas
xor
mov
icebp
out
lds
aaa
leave
leave
lret
loopne
repnz
aad
filds
fimull
call
aad
jmp
stc
shl
loopne
fiadds
mov
in
enter
std
in
into
in
xor
lret
cli
lret
aam
out
repnz
loop
in
test
in
out
mov
ljmp
stc
xor
out
icebp
jecxz
in
aad
fsubp
cld
shr
aad
stc
test
out
xchg
xor
cmc
clc
fcomp
fucomi
cmp
in
out
or
cmp
fcmovb
cli
in
leave
mov
out
rclb
out
out
hlt
repnz
jmp
div
sti
shl
movl
ror
out
xchg
shll
xor
stc
jmp
sti
cmp
out
mul
out
test
push
in
repz
ss
in
jmp
aad
aam
fsub
xlat
rol
cmp
mov
int
jmp
xchg
loopne
mov
aam
loopne
loop
ss
loope
cmc
sar
in
idiv
lret
stc
jecxz
xchg
xchg
xchg
clc
int3
cmp
icebp
aam
not
cmp
ljmp
jmp
sub
lret
in
in
shr
shlb
cmp
out
cld
cmp
idiv
inc
mul
jmp
ror
out
lock
hlt
xlat
icebp
cmc
hlt
enter
int
aas
repz
aas
test
mov
iret
xchg
into
lret
int
out
enter
out
repnz
aas
xchg
enter
call
xchg
in
fldl
cli
frndint
repz
cmp
repnz
loopne
sti
filds
out
loope
stc
int3
into
sbb
jmp
icebp
fdivrs
fcmovnu
aam
rcl
fcomp
aas
enter
xor
enter
roll
rcl
leave
cmp
fdivr
out
incb
xchg
mov
mov
jmp
aam
loopne
xor
fnop
in
repz
cmp
sarl
test
lock
ljmp
lret
cld
loopne
mov
mov
lock
iret
call
aad
in
clc
loopne
fidivrl
sbb
leave
loope
mov
div
call
ds
test
cmp
fadd
ret
jecxz
ret
ljmp
loopne
out
xor
aad
sar
rcl
sarb
out
stc
roll
test
int
in
mov
fnsave
enter
ret
cmc
sbb
mov
sbb
or
out
shl
hlt
stc
clc
cmp
aam
rcl
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
std
inc
loope
fcmovb
out
mov
out
iret
shl
test
ret
cmp
int
int3
dec
xlat
cli
shl
shl
jmp
nop
and
jecxz
fdiv
xor
lret
incl
cld
out
xlat
out
incb
xchg
out
in
leave
in
lock
xlat
loopne
sti
hlt
std
aad
icebp
in
fcmovne
in
cli
mov
mov
cmc
sti
rcr
stc
iret
cmp
jecxz
cmp
test
int3
std
xchg
jmp
ret
into
bnd
out
xorb
out
aad
stc
xchg
lret
out
lret
mov
shlb
xor
jecxz
xlat
out
cmp
loopne
fcmovb
repnz
ds
fsubr
mov
out
fiadds
shll
jmp
lret
call
loope
shl
repz
xchg
decl
ljmp
ror
rcl
fcmovne
loop
ret
loope
ret
aas
ror
out
in
fsubp
iret
test
fcmove
xor
int3
rcl
in
int
in
repnz
out
addb
rorl
cli
cmp
lock
fsin
std
cmpb
out
cmc
xlat
aas
in
in
loop
addl
repz
out
std
in
rcr
sar
vcmpss
call
leave
lret
hlt
xor
clc
xor
lret
jecxz
test
mov
test
cld
jecxz
loope
hlt
sub
jmp
ljmp
aas
repz
cmp
ret
xchg
call
leave
mov
out
repz
lret
fldln2
rcr
imul
aad
int3
call
jecxz
mov
hlt
aam
hlt
lock
xlat
xor
int3
cmp
loopne
ret
enter
loope
xchg
cli
enter
aad
icebp
fiaddl
in
push
imul
nop
cli
loopne
mov
repnz
out
call
or
test
icebp
div
roll
iret
fcmovnbe
sar
shlb
out
out
in
fbstp
fdecstp
cmp
ret
cld
hlt
repz
fnsetpm(287
mov
int
lock
jmp
fcmovu
aad
aaa
aaa
xor
cmpb
test
in
int
out
out
jmp
sub
shrb
in
leave
ljmp
idiv
shl
cmp
cld
test
adc
ret
fnstenv
mul
sar
idivl
out
sti
aam
mov
fcom
clc
loopne
iret
fninit
jmp
jecxz
xor
lret
xor
dec
or
jmp
rcl
aad
aad
shll
das
cmp
lret
jle
add
loop
adc
call
fcomp
xlat
fmulp
jecxz
sub
ss
lret
int
loop
sti
cld
and
ljmp
int3
in
aaa
out
ljmp
loope
repnz
iret
icebp
loopne
mov
in
repnz
ljmp
leave
jmp
leave
fcomi
sti
clc
xchg
fstp
leave
xlat
xor
repz
xor
cmc
lock
hlt
into
cmp
rcl
adc
rcl
test
loopne
in
out
jmp
repnz
repnz
lret
iret
faddl
mov
repz
mov
ret
rcr
fdivs
iret
cmp
test
stc
xchg
fxch
xchg
shr
stc
cmp
leave
aaa
cmp
cld
cmp
fdivp
jecxz
stc
enter
fucom
call
mov
idiv
clc
fdivp
fcomip
xlat
std
in
fcomi
neg
stc
clc
lret
test
repz
in
shl
cmp
hlt
in
std
xorb
aas
and
cmp
mov
out
rorl
xor
call
xor
les
call
cld
out
in
jecxz
lret
xor
stc
hlt
stc
leave
int
rol
cmc
and
jmp
cld
test
out
cld
out
jmp
cs
loop
repnz
lock
sar
out
in
adc
in
int
cli
repnz
into
into
cmp
cmp
hlt
aam
loope
cmc
cld
lock
ret
rorl
jmp
xchg
cmc
shl
cmp
ljmp
test
clc
loopne,pt
loop
out
mov
fstp
jecxz
cld
cmc
out
ret
shr
neg
push
push
out
lret
test
out
sti
lret
nop
jecxz
cs
cmc
cmc
lret
icebp
cli
out
repz
sti
clc
repz
sti
loop
mov
ljmp
jmp
lret
loope
rol
repz
fcmovbe
movl
xchg
aad
xlat
xlat
ljmp
iret
rcr
frstpm(287
std
test
in
rcl
stc
lds
xor
cli
fcomip
fst
out
jecxz
enter
ljmp
fprem
out
clc
in
int
cmp
cmp
cmp
stc
jmp
ljmp
das
int
rcl
ljmp
ds
fcmovnu
shl
rol
jecxz
xchg
mov
leave
leave
leave
out
hlt
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
dec
cmpsl
sbb
or
jle
fsubr
rcl
out
test
ret
mov
sar
out
out
into
int3
shr
aam
sti
lret
std
iret
cmp
ret
xor
incb
adcl
push
xlat
int
out
lock
cmp
stc
not
xchg
add
lret
test
xchg
ljmp
in
cmc
cmc
xor
ret
repnz
aam
filds
lret
leave
in
out
xor
neg
call
cmp
ret
ret
stc
shl
xchg
faddl
xchg
das
cmc
leave
call
fmul
ret
fdivrs
repz
mov
std
jmp
loop
hlt
ror
in
call
into
cld
icebp
fdiv
fistpll
mov
testb
rolb
jmp
enter
xlat
out
int
jecxz
fsubr
cmc
test
in
loopne
xchg
repz
hlt
leave
in
repnz
sti
cmp
int3
rolb
cmp
cmc
fdivr
in
xlat
rorb
lret
lret
call
aad
int3
cld
not
ret
ds
neg
xchg
fimuls
shl
xor
sti
in
out
std
ljmp
loop
leave
fsubp
neg
int
nop
in
loopne
aas
xor
fcomi
cli
leave
cld
cli
xlat
and
aam
aam
mov
into
loop
loop
fsincos
call
rcr
loope
xchg
test
cmc
int
mov
out
xor
xor
hlt
into
icebp
loope
xlat
cmp
leave
fucom
movl
stc
cmp
not
lret
fdivs
xchg
int
loop
into
mov
out
sub
aad
test
iret
in
fdivrl
iret
shr
xchg
jecxz
mov
cld
out
out
xchg
loope
lret
fcom
cld
into
lret
cld
std
cmp
cld
shl
adc
jmp
xchg
int
leave
out
xor
in
out
rcl
cmp
clc
in
sbb
into
icebp
iret
sti
mov
mov
call
idiv
shr
addb
add
int
jmp
shl
int
ret
aam
repnz
idiv
cmc
shl
ret
loopne
aad
mov
cld
or
adcb
ljmp
aam
in
stc
sbb
test
loopne
sub
mov
call
xchg
xor
int3
sti
clc
out
int
loop
repnz
loop
cld
movb
test
int3
hlt
xlat
xlat
xor
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
shll
jle
add
icebp
leave
rcr
ret
fdivrp
rol
leave
lret
xchg
test
addl
divb
rcr
aad
aam
fucom
jmp
call
leave
rorl
out
stc
xor
fstpt
fidivrl
hlt
rol
cmp
xor
fmul
jmp
out
lret
stc
lret
fnsave
xlat
in
jmp
hlt
or
cld
fucomi
test
iret
xor
cmp
sbb
in
faddl
clc
mov
int3
xor
divl
repz
ds
stc
test
jmp
in
std
dec
rcr
clc
int3
lock
divb
xor
lret
clc
stc
icebp
shl
aam
mov
int3
idiv
in
out
loop
sub
aaa
jmp
cmp
sti
repz
int3
sarb
fadds
into
xchg
out
cmc
xorl
cmp
jmp
in
lock
fcmovu
ret
ret
call
out
hlt
xchg
xchg
out
lock
idivb
aas
lock
aas
addl
out
fldl2e
out
shl
xor
aad
cmc
jmp
cmp
stc
xlat
incb
cld
clc
mov
lock
in
jmp
shl
loope
cmc
cmc
jmp
cmp
icebp
jecxz
out
loop
repz
jmp
fcmovnu
hlt
loope
sub
lock
shl
fnstcw
out
test
cld
les
rolb
mov
adc
ror
jmp
cmp
out
cli
icebp
hlt
mov
clc
lret
in
out
jmp
aad
int
xlat
addb
stc
sti
decl
lock
fisttps
in
mul
imul
lock
ljmp
orl
lret
in
jecxz
divl
int3
shll
out
xor
aaa
stc
in
in
ffree
mov
hlt
in
mov
call
ss
hlt
ror
loope
cmp
repz
sbb
fiaddl
int
ss
sti
repnz
imul
clc
ret
call
ds
clc
call
out
xchg
xor
cmp
lock
fstpt
xlat
rol
loope
jmp
adcb
fxch
cmp
cmp
clc
cmp
cmp
lock
enter
cmp
and
rcl
fcomp
sarb
lret
xchg
repnz
hlt
mul
int3
incb
or
in
xor
idiv
xor
clc
jmp
rcl
rcr
fstp
aam
cmp
lods
outsb
inc
sti
aaa
test
jle
out
cmp
cmc
push
test
iret
ffreep
xlat
aad
out
lret
in
into
fucomip
jmp
divb
loop
in
xor
xor
icebp
jecxz
ror
ds
out
int
enter
aam
hlt
ljmp
out
clc
jmp
into
addl
std
fcmovne
xchg
call
cmp
sub
fcomi
hlt
loope
inc
fnsetpm(287
in
xchg
fcom
repz
aad
aas
cld
and
mov
cli
in
call
xchg
mov
not
enter
test
fcomip
cmp
mul
loop
out
sti
fcmovu
mov
sar
jmp
rcl
jmp
iret
cld
xor
inc
out
icebp
cmc
hlt
jmp
out
xchg
mov
in
iret
xor
ror
out
cmp
idivb
cmp
ror
and
xchg
out
dec
int3
icebp
out
nop
xchg
pop
lret
lock
stc
test
clc
xlat
mov
fstl
sarl
lret
fnstsw
not
stc
rol
repz
leave
mov
mov
lret
faddl
clc
shl
aaa
ljmp
rcl
out
xchg
dec
decb
in
sti
ror
aam
xorb
fadd
hlt
out
flds
sti
iret
in
jmp
xor
cmp
ss
fdivr
clc
fcmovu
aad
aas
ljmp
mov
addb
into
cli
jmp
idiv
jmp
cmp
hlt
and
loopne
jmp
std
jecxz
notb
ret
sti
xor
roll
enter
cld
mov
into
call
imul
xor
shl
call
icebp
rcr
and
loopne
jmp
mov
fists
leave
out
icebp
sti
in
int
ret
sti
jmp
sar
loopne
jecxz
in
clc
in
rorb
sti
jmp
jmp
repnz
mov
fadds
xchg
shll
clc
out
out
ss
fcomip
jecxz
loopne
sarb
rcr
clc
mov
cli
int
in
cld
rcl
rol
int3
iret
iret
ss
cmp
sar
in
ret
hlt
mov
std
test
nop
mov
shr
rcll
jmp
stc
call
clc
cmp
adc
lret
enter
adcl
sti
in
fcomp
cmp
icebp
sti
cmc
ds
aam
ljmp
into
mov
xor
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
adc
ret
jle
add
in
fcmovnbe
aaa
loopne
sti
cld
ds
out
ret
stc
out
sar
imul
in
iret
rcr
jmp
mul
lock
lret
call
cmp
fst
ret
std
fstp
xchg
test
int3
xor
out
ljmp
jmp
repz
shl
leave
clc
loopne
std
orl
rcl
ss
aad
idiv
or
fsubp
fmul
xchg
xlat
jecxz
enter
jmp
cmc
ffreep
enter
ss
lret
cmp
cmc
add
neg
xchg
iret
jecxz
ret
out
shll
clc
shr
aas
inc
repz
in
fst
loopne
cli
cli
mov
repnz
out
divb
jmp
rol
jmp
ret
fcomp
out
clc
test
adcb
clc
in
out
mul
lret
out
fprem
sti
fmul
xlat
jmp
fucomp
lret
mov
out
das
repnz
rcl
ljmp
aas
rcl
test
int3
lock
nop
or
out
aad
leave
fnsave
fnstcw
clc
aam
jmp
out
lret
rclb
ljmp
clc
into
stc
and
out
out
mov
loop
xchg
ror
stc
ss
lret
xor
test
faddp
loop
or
leave
int
enter
xchg
repnz
repnz
out
imul
sar
into
fcmovu
fsub
mov
std
test
loop
loop
adc
sub
cs
jmp
iret
fabs
ret
fdivrp
loope
std
fucom
mov
cld
in
out
std
test
xor
jmp
xlat
cmp
clc
loopne
int3
int3
ret
repnz
rorb
int3
fcoml
aaa
int3
clc
icebp
hlt
out
cmp
clc
push
rcr
mov
ret
int3
call
sti
fisttpl
int
lret
lret
cld
clc
iret
fsubr
int
aam
addb
jmp
mov
jmp
xchg
nop
int3
xor
lret
fsubr
fcomi
neg
aam
fcmovnu
cld
stc
cli
rcr
enter
test
mov
fdivr
mul
into
divl
clc
out
cmp
stc
sarl
fcmovnbe
in
imul
flds
lock
and
int
int
xor
in
cmp
cmp
out
clc
out
addl
mov
lret
in
out
lret
out
xchg
xor
not
cmp
sti
ds
int3
fcmovnbe
jmp
lea
jmp
lock
ljmp
out
ljmp
repz
xchg
mov
loop
loopne
out
ret
jne
cmp
jmp
rcl
aad
rcrl
xchg
dec
add
jle
call
cld
cmp
out
rcr
hlt
repnz
cli
leave
cld
mov
loopne
test
xor
call
xlat
out
filds
cli
and
into
into
int3
ret
call
test
shl
clc
test
cld
mov
mul
ret
std
ljmp
mov
out
iret
cmp
hlt
shr
in
repnz
cld
xlat
div
xlat
cld
fninit
mov
xor
xchg
flds
mov
out
cmp
cmp
faddl
in
icebp
fdivr
xchg
repz
shrb
jecxz
fidivrl
lock
out
leave
fisttps
out
repz
in
in
stc
fcmovbe
or
test
mov
aam
cmc
mov
adc
test
iret
out
aad
fxch
fdivp
bnd
out
rorl
mov
int
aad
loop
loop
aam
std
shll
sti
sar
add
sbb
fcomp
ret
in
fcmovu
lock
xorl
fdiv
icebp
aaa
jmp
add
fsincos
test
in
leave
lock
out
lret
hlt
aad
xor
cmp
cmp
in
aam
in
rolb
int3
call
lret
fucomi
into
int3
out
shrb
stc
aad
xlat
jmp
call
rolb
xor
xchg
in
mov
ror
fcmove
xor
repz
cmp
out
cmp
clc
loopne
repnz
inc
out
cld
xchg
fucom
mov
out
rol
cmp
testl
in
ret
cmp
mov
repz
aad
cmc
call
div
shl
iret
test
jmp
fadds
jmp
jecxz
fsubr
ljmp
clc
aad
cli
faddp
xchg
jmp
cld
xchg
mov
call
sub
rcl
xor
call
ror
fsub
ret
lock
cmp
mov
hlt
repz
loopne
iret
in
aaa
leave
enter
into
jecxz
in
test
rcr
repz
cli
out
and
lret
mov
int
cmp
fstpt
cmp
sar
lret
loope
inc
jmp
lds
in
xchg
in
clc
rol
clc
ljmp
cmp
test
xor
mov
fisttpl
call
icebp
xor
jmp
sar
aam
loop
fucomp
mov
loopne
xor
divl
leave
cmc
fxch
fmulp
fadd
fcmovb
jecxz
xchg
xchg
out
test
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
push
popf
pushf
mov
add
enter
aaa
std
in
iret
fxch
cmp
icebp
rcl
jecxz
stc
mov
mov
lret
iret
enter
rcl
lock
fdivs
in
xor
shl
in
lock
aad
rol
rcl
fdivrp
addb
int3
in
enter
cmp
fucomip
fdivrp
fdiv
add
fimuls
or
mov
xchg
jecxz
in
out
out
in
ljmp
out
cli
rcr
test
cld
xlat
ljmp
imul
aam
icebp
xor
xor
fdivrl
out
rcr
ss
test
movb
lea
std
call
shl
les
lret
mul
test
out
out
mov
fcomip
lret
ret
in
sti
out
div
ret
rcr
std
jecxz
test
out
adc
lds
out
shr
aad
aas
out
cli
faddp
add
cld
loopne
loop
ljmp
mov
icebp
out
cmp
lret
hlt
cmp
ret
loopne
fld1
test
xchg
int
iret
jecxz
into
aaa
test
out
ljmp
cmp
test
imul
mov
in
loop
icebp
fsubrp
push
iret
fmul
ret
hlt
out
aam
loop
rcr
hlt
aas
roll
test
xchg
lock
call
into
out
aaa
cmc
ds
in
in
fdivr
aam
cmp
stc
loopne
loop
xlat
stc
cli
out
iret
ljmp
fstpt
cld
clc
sti
cmc
sar
test
xchg
jmp
jmp
xchg
nop
out
ss
sti
jmp
fadd
fdivr
icebp
hlt
hlt
mov
jmp
fstl
mov
ret
leave
out
sarb
out
sub
fdivr
sti
clc
ljmp
in
xchg
mov
in
xlat
into
cli
rcr
repnz
cli
clc
std
rol
addb
or
mov
rcr
out
call
icebp
cmp
hlt
rcl
call
addl
add
mov
add
movl
cmp
movl
jmp
mov
fstp
enter
imul
jle
sbb
jle
int
xlat
cmc
in
xor
clc
out
cmp
jmp
incl
mov
clc
xchg
fiadds
icebp
imul
jmp
cmp
fnstsw
cmp
cmp
mov
ljmp
mov
cmp
repnz
cmp
sar
cmp
in
add
out
call
xchg
enter
mov
xlat
cmp
fcmovnb
repz
xchg
incl
ss
xor
lock
loopne
out
call
jmp
out
loop
std
mov
shlb
aad
xor
lret
fucom
in
xchg
test
test
enter
mov
xchg
shl
in
jecxz
cli
lret
aam
loop
aam
rolb
imul
lock
jmp
jecxz
xor
fnsave
fsubp
sbb
sar
addl
out
ret
loopne
xlat
out
aad
int3
lock
sbb
hlt
cmp
mov
lret
jecxz
fists
ret
xor
fcomi
xlat
call
repz
cmp
xlat
sti
clc
xchg
mov
into
xchg
iret
xor
leave
leave
aad
test
les
out
out
idiv
cld
nop
jecxz
jmp
out
enter
clc
fiadds
icebp
icebp
jmp
and
ljmp
mov
ss
hlt
neg
call
testb
fildl
test
fstp
out
xchg
loop
lret
aad
jmp
ss
cld
cmp
cld
loopne
fxch
sar
loope
jmp
sbb
repnz
ljmp
cmp
roll
jmp
mov
jecxz
adc
shlb
call
cmp
std
xor
fst
cld
cli
cmc
incl
out
nop
mov
int3
rol
cmc
lret
loop
int3
leave
stc
repnz
std
loopne
std
fcom
fcmovnbe
loope
incl
xchg
jne
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
or
divb
xor
fbstp
rcl
cmp
ror
repnz
stc
clc
shr
in
or
adc
loop
clc
test
shl
lret
cmp
ds
sbb
xchg
test
fdiv
enter
ret
icebp
int
xor
int3
aam
fdiv
aas
out
sti
les
jmp
ljmp
jmp
jmp
loope
ror
jmp
sbb
decl
in
iret
ret
xor
fxch
fcmovnu
fcmovbe
out
jecxz
test
fcmovbe
cmp
in
xchg
cld
mov
aam
xor
leave
cmp
xor
loopne
cmc
cli
loop
aad
in
loope
xchg
lock
lret
out
xor
cmp
aaa
aad
fincstp
std
fistpll
aas
out
cmpb
cmp
in
incb
ror
jmp
in
xor
cli
aas
repnz
and
int
icebp
in
in
ljmp
ds
sarb
fidivrl
in
loop
cld
and
hlt
mov
xorb
out
div
enter
sar
adc
clc
rorl
decl
iret
loop
hlt
out
cmp
repnz
leave
leave
aad
cmp
out
adc
jmp
enter
jmp
not
out
repz
in
fistpll
fcomp
xlat
lock
mov
decl
xchg
mov
loopne
hlt
not
out
out
fdivrp
lret
in
int
in
ror
neg
ror
jmp
test
sti
fldln2
cli
addl
xor
rcl
int
cmp
loopne
fidivrs
repz
fadds
jmp
out
iret
jmp
hlt
repz
iret
xor
fldlg2
cmp
xor
fmul
icebp
shl
fcmove
loop
mov
in
addb
out
aad
cmp
rcr
cmp
in
cmc
hlt
cmp
lds
orb
aam
cmp
icebp
std
repnz
adc
flds
loopne
in
icebp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
or
inc
dec
sbb
jle
jmp
adc
out
ljmp
aam
aas
xor
sti
icebp
fiadds
clc
fsub
shl
mov
shlb
test
ffreep
lret
hlt
filds
mov
xchg
iret
int3
nop
xchg
out
test
jmp
lret
loopne
xlat
cmp
adc
out
testl
ljmp
sub
stc
cmp
fsub
rcl
fiadds
out
mov
cli
xchg
test
lret
xor
ljmp
neg
add
xor
orl
xor
clc
aaa
out
cmp
cmp
int
out
stc
loop
mov
ret
mov
repz
lock
rol
leave
ror
icebp
xlat
xor
xchg
lret
and
call
jmp
fldln2
cmp
cli
lock
incl
loop
loop
mov
ret
loope
xlat
shr
cmc
cmc
aas
hlt
int3
fldln2
int3
ret
mul
fcmovbe
sti
fcmovne
fsub
std
mov
cli
shl
repz
icebp
enter
cmp
sarb
shl
adc
loop
cld
std
fcmovu
adcl
shl
idivl
int3
rol
test
rcl
lret
xchg
std
loopne
mov
das
shl
aam
repz
clc
cmp
out
in
jmp
repnz
loopne
test
aam
ljmp
inc
ds
stc
cli
aad
fcomp
testl
xlat
in
in
aaa
mov
fcmovnbe
aad
xchg
sar
xchg
stc
addb
mov
test
cmp
ss
in
and
cmp
enter
in
in
hlt
aam
in
aam
ss
lret
shl
fnstcw
loop
loopne
out
xor
int3
addb
in
not
xlat
cmc
cmp
sti
aam
shl
shl
in
leave
testb
add
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
popf
je
ss
jle
add
filds
out
loop,pn
aaa
repnz
iret
aaa
adc
rolb
sbb
ret
rclb
ret
jmp
cli
aas
ret
in
jecxz
in
repnz
in
int3
fdivr
xchg
int
call
repnz
aam
aas
rolb
fsqrt
fsub
ret
enter
ror
in
aam
shr
clc
out
lock
in
cli
rol
cld
fadd
fdivrp
mov
xchg
xchg
int
clc
int3
enter
leave
stc
cmp
fsub
fisttpl
icebp
int3
out
loop
hlt
leave
mul
into
repnz
ds
cmp
cmp
roll
fdivrp
into
repnz
ret
shl
in
jmp
aad
cmp
jecxz
lock
jecxz
sti
leave
adcl
div
cmp
stc
clc
out
ds
aam
test
aad
jmp
xchg
lock
in
ret
cmc
ss
out
out
cli
jmp
test
ret
mov
out
test
enter
cmc
xor
loop
shr
in
neg
ljmp
fcmovbe
test
out
fmuls
xchg
repz
fdivs
aam
aaa
aam
fprem
hlt
stc
test
out
enter
fsub
xchg
sub
decb
xlat
jmp
cmp
rcr
call
lret
out
into
shr
ss
sar
aam
in
lock
xlat
lret
out
fstp
hlt
stc
or
shr
xchg
xchg
fsubr
int
std
sti
cmc
iret
int
xor
sbb
jecxz
in
xlat
mov
int3
ror
repz
xchg
out
xor
repz
enter
fnstcw
cmc
in
rcl
cli
cmc
mov
fcmovnb
lret
aam
faddp
div
out
shl
cmp
enter
fcmovbe
cmp
and
mov
ljmp
int
xlat
int
fxtract
cmp
lret
div
in
sti
out
jecxz
not
and
jmp
aam
enter
aad
cmp
and
mov
jle
add
test
loopne
rolb
in
repz
divb
jmp
icebp
roll
out
ljmp
mov
out
sti
into
rol
fcomp
add
xlat
in
mov
in
fxch
in
cmp
sar
aaa
fcompp
cmp
iret
in
roll
in
mov
incb
call
cmc
cld
stc
into
xor
add
jecxz
std
in
leave
icebp
in
mov
iret
xchg
loope
ror
in
ror
icebp
stc
div
cmp
lock
jmp
jmp
lock
xchg
aaa
fdivr
cmc
aaa
fildl
cld
call
sbb
in
sti
leave
leave
fiadds
jmp
in
in
fmul
in
in
cmp
loopne
std
in
mov
aam
xchg
shl
out
hlt
into
idiv
clc
cmc
jmp
cmp
cmp
in
test
lds
lret
fmulp
ret
sub
out
repnz
in
out
cli
sti
mul
loope
inc
in
jmp
cli
lock
test
enter
vmaskmovdqu
jmp
in
std
aas
rcr
rol
fldlg2
sbb
jmp
jmp
into
in
rcr
out
out
jecxz
loope
filds
clc
enter
test
or
cs
fcmovu
in
iret
fcmovne
loope
fsubp
aas
sbb
cmc
in
call
fisttpl
cs
sub
cmp
shr
icebp
loope
out
fdiv
test
jmp
mov
xchg
hlt
lret
ljmp
repnz
out
out
int3
push
loop
fsubp
fadd
int
nop
in
rolb
rol
xor
leave
fsub
lret
int3
cmp
test
lock
fcmovnbe
xlat
in
cli
loop
into
jmp
orl
jmp
ror
in
and
out
cmc
std
in
aas
orb
test
ret
call
int
or
jmp
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
in
int3
fsub
lret
rorb
out
cmp
xor
ss
xor
hlt
loopne
test
sub
mov
aad
int
shr
shl
ror
aas
in
out
fiaddl
mov
clc
mov
xchg
addb
repz
shrb
sti
ss
int
rcr
aam
cmp
add
leave
jmp
test
aad
iret
xor
cmp
sarb
adc
fsubrp
in
in
lret
mov
out
int
shl
rcr
int
xor
fnstsw
cmp
fcmovnbe
icebp
test
int
out
xchg
test
loop
aad
cmp
rcr
jecxz
std
loopne
loope
xlat
cmp
xchg
not
ljmp
jmp
rolb
cmc
std
jecxz
filds
ror
out
vpaddsw
fcomi
sti
repnz
sbb
cld
ret
xor
sub
in
addb
shl
iret
shl
out
vpsubsw
add
mov
in
sub
out
std
ljmp
in
enter
call
enter
jmp
lock
sub
xor
shll
cmp
sbb
cli
in
mov
in
xchg
not
aad
in
rcl
jmp
stc
int
fildl
sti
jmp
fdivrp
loop
shl
repz
loope
xor
out
cmp
xor
ds
rolb
neg
aas
loop
mov
out
fucomip
xor
xor
sti
neg
fcom
cmp
out
out
sti
fninit
xchg
test
in
orb
in
shl
clc
fsubr
icebp
xor
aad
rol
cli
clc
hlt
cld
cld
ret
movb
aad
lret
xor
xor
hlt
hlt
fadds
in
enter
orl
cmc
iret
int3
fdivr
lret
in
out
jecxz
jne
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
dec
inc
test
jle
add
enter
stc
loopne
enter
test
call
cmp
repnz
clc
ljmp
shl
enter
xchg
loope
fdivrp
aam
shr
rcr
lret
xor
fdivs
ret
xlat
ds
aam
mov
mov
in
mov
into
loopne
lret
xchg
in
cli
leave
out
fcmove
cmp
aad
jecxz
in
out
aam
stc
les
out
jecxz
into
shl
xor
jmp
fsubr
repnz
ret
rcl
in
std
orl
nop
fidivs
loope
shlb
cmp
fsub
in
xlat
aam
div
ljmp
cld
call
cs
leave
aam
lock
aaa
leave
clc
sub
idiv
imul
rcr
std
addl
jecxz
xlat
stc
fpatan
fadd
cmp
rol
roll
loop
test
loopne
shl
out
iret
xor
repnz
xor
cmp
not
in
loope
stc
xlat
test
loop
into
out
ror
xlat
ret
iret
shl
out
icebp
repz
jmp
cli
iret
cli
sarl
hlt
std
addb
roll
ret
out
iret
idiv
hlt
aas
repz
fdivrs
mov
fcmovne
stc
std
add
in
enter
xchg
lock
cmp
aaa
clc
idivb
loop
shr
cld
test
testl
xchg
ror
cmp
xor
icebp
hlt
lock
aam
xlat
fld
mov
enter
fildl
iret
ror
in
out
rcr
repz
std
xlat
in
hlt
addb
fimull
and
xor
fst
icebp
hlt
clc
in
faddl
lret
lret
out
aad
fcmovnb
ss
repnz
jecxz
flds
jmp
jmp
fildll
repz
cmp
stc
cmp
fstp
sti
incl
mov
rolb
xchg
div
vpsubsb
lock
cmp
cmp
in
testl
test
cmc
xor
hlt
sarl
not
cmc
hlt
repnz
mov
lret
andb
cld
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
mov
inc
add
ret
jle
call
shl
mov
neg
jecxz
cmp
lret
loope
fdivrp
shl
cld
clc
test
filds
ror
test
sti
stc
enter
ds
and
fldl
ljmp
ljmp
int3
cmp
cmp
sar
call
loope
out
jmp
in
loop
jecxz
aad
clc
fcmovnb
lock
cld
inc
repz
cld
rcr
out
repz
out
nop
icebp
icebp
loopne
shr
enter
enter
clc
out
in
stc
hlt
mov
repnz
out
shl
out
jmp
xor
vpor
ror
fstpt
repnz
fstp
mov
in
test
shl
lret
xchg
xor
fdivs
ljmp
in
fcmovbe
rcr
enter
std
shl
sub
in
xor
enter
shl
cmp
stc
xchg
xlat
fcmovne
clc
mov
lret
xrelease
lret
fidivl
enter
rol
ret
sarb
loop
int3
clc
jmp
xchg
repnz
sub
leave
ror
aas
into
clc
in
neg
call
lret
out
aas
repz
jmp
les
repnz
fsubr
clc
cmpb
jmp
lret
test
nop
fcmovne
test
jecxz
in
jmp
out
cmp
cmpb
cmpb
icebp
icebp
les
call
xchg
xchg
enter
xor
fcmove
cmp
jecxz
shl
and
ret
jmp
int
sub
jecxz
sbb
ret
neg
lock
repz
idiv
rcl
out
xlat
loop
loop
xchg
jmp
out
std
leave
rcl
jmp
sti
fucomp
out
call
fnstcw
aad
loop
fmulp
test
mov
fmul
loop
lret
mov
out
jmp
int
stc
lret
test
std
clc
loope
leave
sbb
xchg
int
addb
in
lret
sti
out
aad
clc
aam
fadd
fucomi
sarl
lock
lret
xchg
out
enter
cmp
call
out
rol
repnz
fisttpll
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
xchg
in
jecxz
mov
shl
in
ljmp
fucomi
repnz
in
addl
ror
int3
xchg
xchg
in
loop
test
xor
fildl
jmp
mov
xorb
loope
hlt
fcmovne
ss
cmp
flds
les
jmp
in
int3
into
xchg
add
jmp
aaa
out
leave
fmul
int
test
add
into
cld
repz
leave
shr
aam
shl
aaa
cmp
cmp
repnz
xchg
vpsubq
and
repnz
iret
out
sub
clc
lock
std
sti
icebp
loopne
fcomp
repnz
and
cld
fdivrp
xchg
icebp
mov
addl
fxch
iret
call
cmp
xor
rcr
leave
hlt
dec
aas
mov
mov
out
ss
cmc
repz
cmp
ljmp
cli
mov
loop
into
lock
xchg
hlt
hlt
orl
out
repz
fmul
in
sar
test
out
lea
mov
stc
fmul
out
fndisi(8087
iret
rcl
loop
out
repnz
ret
fisttpll
rclb
in
not
rcl
in
cmp
lock
mov
jmp
xlat
addb
jecxz
out
repz
out
in
repnz
in
add
stc
mov
lret
out
shr
into
fisttps
rcl
fsubr
lret
shr
ss
mov
xlat
int3
sti
incl
in
xor
lret
cli
out
fnop
loope
out
ret
fxtract
cmp
cmp
int3
fcmove
mov
mov
orl
jmp
ret
cmp
mov
call
xchg
shr
iret
rol
out
lock
stc
cmp
icebp
div
cmp
ds
test
shl
out
out
ss
aad
shl
xlat
lret
leave
fdiv
push
cmp
xchg
xlat
fmull
out
subb
out
ljmp
shl
fdivrp
ffreep
jmp
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
scas
cmc
add
mov
jle
out
loope
in
rcr
fstpt
jmp
and
ret
jecxz
rorl
fldl
aad
repnz
xor
test
fadds
stc
mov
nop
or
repz
int3
test
repnz
aad
fcomp
enter
fcmovnbe
loope
sbb
mov
ret
lret
in
ljmp
fnstsw
shl
stc
cli
int3
shl
les
loope
in
ds
mov
jmp
loop
shl
out
hlt
into
neg
int3
ror
cmp
shl
cmc
clc
cld
call
call
roll
repz
fadd
sarb
ret
jmp
jmp
ret
mov
mov
shl
sub
xor
ljmp
fld
fnstcw
cli
test
lds
std
jmp
jecxz
xor
out
lret
icebp
out
cmp
neg
ret
stc
ljmp
sti
shr
shl
and
fidivrl
call
aas
test
test
fiaddl
in
fadd
test
or
into
stc
icebp
in
cmc
ror
in
ret
std
flds
sti
out
std
lret
xchg
xchg
out
repz
in
out
enter
fdiv
cmc
out
sti
neg
cmc
loope
out
mov
shrb
xor
xor
stc
lret
call
loopne
rcr
cmp
rol
out
test
loope
xchg
into
sarl
neg
in
sarl
out
ret
loopne
jecxz
in
cmc
mov
fsubrp
out
lret
lock
in
xlat
test
fldl2t
fld1
in
repz
fincstp
aad
shl
in
std
in
icebp
stc
jmp
loop
repnz
ret
xor
leave
ljmp
jecxz
ret
not
testl
xchg
test
shlb
in
not
cmp
std
lret
xor
aad
cmpl
fiaddl
shlb
call
cmp
loope
loop
repz
loop
in
leave
xchg
shr
in
cs
enter
rcr
cmp
cmp
fiaddl
in
lret
jmp
in
inc
xor
mov
adcl
xor
adcl
xor
adcl
add
add
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
imul
test
mov
jle
mov
ss
aam
fnstsw
in
aad
out
fsubr
mov
out
iret
xor
xor
cmp
cmp
int3
out
jecxz
loop
orl
in
shl
jmp
into
aam
dec
ds
test
xchg
test
lock
leave
out
call
aad
xor
call
add
iret
clc
cld
in
in
add
lret
mov
jecxz
imul
in
leave
cmp
icebp
into
in
ret
orb
decb
into
aaa
xor
ret
xor
ljmp
sti
shl
fcmovbe
jmp
ftst
rolb
fdiv
jecxz
lock
cmp
mov
or
cmp
out
jmp
cs
cmp
icebp
cmp
fstpt
ffree
test
cmp
xlat
fisttpll
in
loopne
ficoms
ret
cli
idivb
aad
cmp
aam
cmp
enter
test
jmp
repnz
cli
loope
cmp
aam
aam
aad
mov
loop
rorb
ljmp
in
loop
in
ret
stc
mov
fxch
test
fsubrp
out
ret
clc
jmp
lret
fxch
loop
cmp
test
lds
orl
incb
xor
out
out
repz
out
cmc
in
mov
lea
sarb
rcl
leave
jecxz
int
imul
fcmovnu
in
adc
out
xchg
fadd
cmp
into
jmp
in
jmp
aas
jmp
ljmp
shr
cmp
iret
addb
int3
icebp
xor
rcl
std
rolb
cld
xlat
in
add
dec
hlt
mov
loopne
enter
in
out
xor
adc
call
mov
rcr
shr
repnz
xor
out
xor
shl
test
out
clc
fdivr
xchg
dec
xchg
sub
aam
leave
in
ret
idivb
je
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
dec
jns
add
jle
add
in
stc
cmp
sti
fcomp
rcr
test
call
loope
cmc
xchg
xor
rcr
fcmovbe
cmp
rcr
ds
aas
out
and
leave
nop
out
out
sbb
in
xchg
xor
xor
in
lock
clc
clc
rcl
aad
shl
fstp
mov
mov
call
clc
xor
ret
out
out
aad
cmp
lock
cld
cli
ds
adc
shr
icebp
int3
int
fnstsw
test
enter
in
mov
lret
lret
ror
in
idivl
ss
shl
fcmovne
fiadds
fimuls
loope
xchg
cmp
cmp
in
fcmovne
cld
ret
hlt
fcomp
stc
out
lds
in
sbb
loop
jmp
cmp
jmp
rcr
xchg
aas
leave
cld
xlat
out
mov
cld
shl
mov
in
lret
in
push
add
lock
cli
fcmovnb
les
shl
rcr
iret
sub
in
jmp
cs
sarl
loopne
loope,pt
out
fcmovnbe
and
loop
fadd
test
call
loope
ljmp
cmp
dec
clc
loop
sarl
fsubr
mov
mov
leave
ljmp
in
into
cmp
out
ss
fiaddl
neg
fstp
std
into
call
in
out
ljmp
ljmp
out
fsub
loopne
add
inc
cmp
nop
mov
int3
repnz
ss
in
out
std
idivl
cmp
cmc
ret
cmc
cld
addl
imull
xlat
fcomp
int3
repz
enter
cld
aaa
cmp
mov
lret
int3
into
mov
xlat
out
xor
lds
in
xor
cmp
fcmovbe
testl
mov
fcomip
cmc
mov
in
aam
clc
xor
mul
cmp
int3
shr
fcompp
fstp
xor
test
lea
out
lret
fcmovu
cmp
fprem1
loopne
add
mov
sub
in
mov
cmp
icebp
repz
fmuls
lock
jmp
lret
ret
int
lret
in
aad
out
sbb
sub
ret
jle
jmp
fnstsw
loop
test
stc
loope
jmp
mov
lock
cmc
lret
and
jecxz
ret
mov
addl
out
cld
in
ljmp
aam
sarl
fcom
rcr
loop
in
incb
xchg
jecxz
in
cmp
neg
out
cmp
aam
stc
repz
aad
repnz
loopne
in
fiadds
out
out
lock
cmp
aas
into
cmp
hlt
cld
lret
sti
lret
xchg
addl
div
loopne
out
in
out
loopne
xlat
out
std
test
int3
xchg
out
std
mov
xor
aam
out
in
into
in
ds
sti
addl
roll
xchg
aaa
shlb
in
jmp
aad
stc
loopne
mul
ret
neg
lret
fadds
jmp
ror
repnz
imul
jmp
loop
std
in
std
sbb
fmul
stc
loop
adc
call
stc
cmc
cmc
ror
loope
cmp
in
in
jecxz
in
mov
test
mov
out
loope
iret
aaa
lock
cld
repnz
cmp
ret
sbb
loopne
fucomp
cli
jmp
xchg
lret
out
shl
stc
test
loopne
fcmovu
loopne
cmc
jmp
std
out
cld
std
xchg
shl
jmp
idivl
cmp
xor
shr
repz
ret
test
jecxz
mov
xor
xor
div
fdivr
iret
int
cmc
out
test
testb
enter
xchg
ret
ret
cli
cmp
xor
aad
shr
cmp
ror
shl
in
sti
orb
into
xchg
hlt
into
jmp
leave
icebp
xor
cmp
aam
rcl
cmp
leave
sub
repnz
shl
iret
sarb
ds
shl
sbb
in
rcl
fisttpll
mov
divb
ljmp
cli
int3
cmc
aam
fcomip
into
call
xlat
jmp
mov
fisttpll
loop
icebp
cmp
cld
stc
cmp
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
testl
std
icebp
fucomip
xchg
loop
out
aad
jmp
icebp
std
loope
into
fdiv
rcl
fmulp
lret
jecxz
mov
aam
iret
loope
int3
hlt
icebp
stc
call
stc
shl
xlat
xchg
nop
mov
enter
clc
shll
loope
adc
rcr
repz
in
int3
in
mov
xchg
shr
test
aaa
xor
in
cmp
ds
into
lret
cmc
int
loop
cmp
aad
sub
sar
mov
int3
shr
repnz
cmp
xor
repnz
fsubr
fcomip
int
mov
movl
out
cld
xchg
repnz
repz
xor
lret
iret
sbb
and
aam
ljmp
in
xchg
imul
shr
sar
sarb
lret
repnz
cmp
mov
into
repz
loop
in
fxch
cld
iret
ds
aad
ret
ret
ret
ret
in
fstp
fcmove
iret
into
xchg
repz
adc
lret
cmp
fst
not
iret
xor
add
hlt
std
jecxz
sti
mov
loope
call
call
cli
cli
fcmovbe
flds
cmc
lret
out
ljmp
loopne
cmc
repz
repz
cmp
fnclex
in
cmp
aas
add
mov
std
xchg
enter
fdivrs
cmc
dec
lock
aad
testb
enter
call
aam
cmp
hlt
repnz
fdivrl
std
sti
fdiv
xchg
fisttpl
sbb
shl
nop
shr
div
leave
in
cmp
lock
cmp
fiaddl
fimull
ret
rolb
shr
ljmp
aas
int
clc
aam
enter
out
rolb
repz
enter
repz
out
sbb
fcmovnu
enter
out
int3
rcll
adc
ror
fxch
cmp
enter
clc
sbb
jmp
mov
sub
stc
not
repnz
ror
icebp
mov
orl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
aas
cmp
jmp
ret
jle
loopne
leave
enter
test
in
xor
fxtract
sti
rcr
sar
in
loop
shr
fisttpl
xchg
aam
vpsadbw
in
jmp
hlt
fptan
sbb
test
flds
ret
int
jmp
fcmovnbe
iret
cmp
imul
aas
lret
ds
xlat
rorb
out
cli
or
xchg
lret
in
jmp
sar
sar
hlt
sar
rcl
aam
cmp
testl
hlt
in
sti
into
cli
hlt
cmp
icebp
cld
mul
icebp
cmc
mov
fsub
int
mov
in
repnz
stc
int3
ds
xlat
sar
cli
loope
in
xchg
jmp
leave
icebp
icebp
shl
int3
rol
cmp
fucomip
cmp
ljmp
xchg
cmp
stc
decl
call
cmp
fsub
leave
cmp
repnz
mov
mov
into
enter
cmc
icebp
sti
enter
out
in
aas
loope
aam
and
leave
mov
enter
repz
div
repz
into
int3
int3
repz
cmc
out
cmc
ffreep
repz
fxch
in
stc
test
std
lds
xor
stc
hlt
ds
shr
ds
fdivr
cmc
flds
out
ficoms
clc
xlat
into
iret
sti
testb
out
faddp
fninit
jmp
in
filds
ret
xor
rcl
rcr
fadds
rol
loope
call
icebp
out
in
add
iret
jmp
int
fmul
clc
aas
out
fdiv
rolb
fcmovne
int
nop
lret
xchg
hlt
into
icebp
ljmp
cmp
ret
out
test
fiaddl
ror
int
leave
sub
xor
ss
iret
test
cmp
into
cmp
fcmovnu
mov
sub
mov
fimuls
aad
cmp
in
jmp
sar
cmp
fcom
in
clc
out
int
repz
in
inc
out
shl
cli
aaa
ror
out
loope
fsubrp
in
shl
les
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
jne
into
je
jle
ret
jle
cli
xchg
lret
xchg
or
das
cmp
hlt
enter
cmp
cmp
aas
sbb
flds
ljmp
out
xor
clc
xor
lock
lock
cmp
xabort
fsub
fsubp
out
out
xchg
fdivr
fadd
hlt
stc
hlt
fnstsw
cmp
ror
fmul
les
cld
hlt
clc
clc
out
addb
hlt
aad
xor
jmp
shl
aam
loope
jecxz
in
sbb
jmp
jmp
lea
in
ret
enter
lret
in
jmp
shl
ret
fsubrp
loopne
in
lea
test
ss
enter
lock
test
hlt
and
neg
out
loopne
fcomip
xchg
loop
xor
out
loope
roll
loopne
loopne
stc
cmp
lret
test
rcr
stc
clc
aas
shl
out
and
xchg
cmp
lret
int
shl
lret
loop
clc
out
in
fld
fdivr
clc
loope
repnz
fmulp
out
test
in
or
mov
in
out
into
cmp
cmp
rcl
aam
cmc
loope
rolb
out
fucom
jmp
jmp
cmp
fcomip
lock
icebp
xchg
icebp
iret
test
xor
ljmp
cmp
ret
aam
enter
out
lds
loop
aaa
lret
loopne
or
cmp
shr
cli
fcomp
mov
out
rorl
ret
sti
in
lret
fcmovnbe
ror
cli
xrelease
fcmovne
int3
xchg
xchg
out
fsubr
loopne
lock
repz
and
out
test
aam
lret
jmp
out
loopne
test
mov
shr
das
shl
aad
cmp
into
loopne
icebp
aas
fdivrl
xchg
in
jmp
xchg
shr
rcr
jecxz
out
hlt
cmp
clc
loop
cmc
not
rolb
ljmp
test
aaa
cmp
out
loopne
hlt
fsubr
shr
test
testl
rol
rcr
and
xor
ret
jle
rolb
aaa
fidivl
lret
jmp
repz
call
fcomp
in
call
ret
sar
clc
in
cmpl
loope
lds
add
in
out
in
shrb
xor
shrb
into
out
int
or
cmc
lock
ljmp
int
mov
out
ret
sub
fcmovnu
fnstcw
cld
clc
lret
xchg
xchg
shr
in
jmp
lret
out
call
shr
idiv
addb
in
xchg
in
aam
ss
std
into
call
out
out
leave
fucomp
in
mov
cli
nop
sti
cmp
in
enter
out
cmc
lret
xor
fadd
jecxz
shl
fdivr
enter
call
into
ror
xor
out
aad
out
in
rcr
int
out
fst
in
in
int3
nop
lret
ret
sti
fdiv
enter
lret
out
loop
cld
out
xlat
xlat
les
fimuls
stc
aaa
xor
in
std
fcmove
xor
shl
repz
sub
test
loop
orb
iret
xor
shr
sti
jmp
aam
fscale
sar
fiadds
fildl
in
jmp
fcmove
out
sub
cld
aas
fcmovnu
fmul
ret
loope
out
fsub
lret
xchg
in
xor
xbegin
into
clc
rcr
ret
cmp
jmp
leave
and
mov
repnz
lret
call
cmc
hlt
std
repz
call
not
std
in
loope
into
repnz
xchg
and
cmp
fst
rcr
into
loopne
cmp
xchg
sar
loope
lret
fsubp
repnz
cmp
fcmovnu
lock
loope
sti
fnstcw
fdiv
loop
jmp
in
nop
test
test
mov
in
int3
xlat
test
frndint
cmp
faddp
loope
xlat
rorl
fcmove
not
ss
ss
enter
iret
leave
and
icebp
enter
stc
fld
test
in
ficoms
add
jmp
fadd
lret
fstp
aad
mov
cmp
dec
jle
ret
jle
das
in
not
lret
sbb
cmp
rcr
jmp
fucomip
nop
lock
sub
out
rcl
enter
fcmovne
addl
mov
loope
mov
fsubrp
jmp
enter
int3
fcom
sti
stc
clc
fcmovnbe
fcmovb
hlt
out
jecxz
int
repnz
repnz
cld
out
fst
loop
or
cmp
fisttpll
into
in
shl
jmp
xlat
leave
in
aam
fcomip
out
sar
cmp
decl
lock
fninit
fcomip
das
lock
sti
xor
fdivrs
imul
xor
xlat
sti
loopne
stc
ljmp
repz
in
xor
xor
cmp
jmp
test
jecxz
imul
cld
in
sti
leave
mov
lock
in
ljmp
in
shl
sar
testb
lret
xchg
icebp
xor
imul
clc
cli
sti
aad
jmp
aas
cld
fst
rcr
adc
hlt
les
imul
int
in
addb
lret
cmp
cmp
rcl
add
fdivr
call
dec
in
mul
jmp
in
cmp
loopne
out
icebp
imul
ret
cli
ljmp
rcl
jecxz
fdivr
hlt
cmp
stc
xlat
sti
cmp
add
lret
mov
cli
jmp
faddl
cmp
fcmovb
int
clc
ljmp
les
addl
lea
out
not
cmp
into
fcmovu
stc
test
loopne
lret
fldz
nop
and
fxch
repz
cmpl
les
out
lds
aad
test
repnz
dec
out
in
rcl
cmp
cmp
test
fsubr
in
in
call
aad
aaa
std
fmulp
hlt
aad
test
loopne
and
sbb
mov
in
add
cmc
leave
cld
out
loopne
cmp
out
call
cld
fscale
cli
mov
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
dec
inc
push
jle
ret
jle
cmp
fidivrl
fildl
loopne
call
lret
filds
out
int3
shl
iret
stc
leave
into
into
sti
cmp
rol
rcl
loopne
fildl
int3
iret
test
ret
stc
cld
shl
cmp
sti
ret
adc
out
mul
test
xchg
call
in
into
ss
fucomip
int3
sarb
stc
neg
shl
xrelease
lret
lret
cld
out
shl
aam
in
ror
xlat
lret
loope
sar
inc
mov
cld
in
mov
adc
mov
leave
loop
in
cs
icebp
jecxz
in
cmp
cld
loopne
int
stc
loop
xchg
lret
rcl
cli
fnstsw
std
clc
fincstp
fadd
into
ds
enter
ret
cli
mov
nop
in
iret
icebp
int
cld
repnz
cmp
and
in
enter
loope
xchg
out
in
jmp
ljmp
add
leave
in
mov
in
sti
in
mov
mov
sub
shll
xlat
cld
ds
fnstsw
bnd
fucomi
in
repnz
rclb
jecxz
xlat
repz
ds
std
int3
cmp
xchg
repnz
lret
jmp
rclb
xor
ror
idiv
add
cmp
shl
fcomip
orl
iret
not
lock
cmp
lret
shl
shl
repz
out
out
mov
shl
fadd
out
adc
test
fucom
shl
jmp
in
neg
call
ljmp
repnz
fdivl
aam
cmp
cmp
test
cmc
ret
test
mov
in
iret
out
lock
ss
push
shl
fld
leave
lret
fsub
mov
xchg
xchg
xchg
add
int3
divb
into
ss
clc
cmc
in
cmc
test
fucomp
fcmove
in
icebp
mov
out
shr
xor
test
cli
cld
cmp
shr
sub
fucomp
inc
mov
stc
int3
out
leave
lock
xor
add
jmp
xlat
into
ror
fxch
flds
jp
pop
cli
fiadds
jle
ret
jle
in
aaa
lret
idivl
ret
clc
call
cld
and
in
test
icebp
loope
in
lret
iret
sti
call
std
cld
cmpb
loop
in
out
ljmp
lret
xor
out
enter
in
xlat
cli
cmp
cmp
shl
aas
repz
int3
fdivrp
ljmp
xor
hlt
fnsave
sbb
into
icebp
testb
mov
int3
ret
out
lock
rol
cmc
divb
fdivs
out
divb
sar
sbb
into
cli
clc
decb
xchg
or
fucomip
mov
out
shl
lock
sbb
rcr
ds
addl
ret
mov
lock
int
int3
cmp
loope
cmp
cli
rolb
out
iret
fsub
in
cmc
mov
sarl
sarb
sarl
fndisi(8087
testl
lock
ljmp
aam
fcmovnu
fdivrp
cmp
cld
repnz
incb
xchg
lret
iret
std
cmp
xchg
int3
loop
xor
fldcw
xor
ljmp
aas
add
fcmovu
in
fdivr
mov
xchg
loopne
xchg
icebp
lock
hlt
fcmovne
lock
loop
fidivl
aam
in
aam
movl
shl
lret
xor
enter
lret
in
hlt
roll
sub
lret
call
lret
mov
ljmp
cmp
jecxz
cld
ret
cmp
in
loopne
in
loope
enter
out
ret
xor
cld
fcomp
cmp
repnz
call
out
in
loope
orl
shll
cmp
fmul
fcomi
lret
flds
dec
filds
xchg
xchg
loope
lret
repz
loop
fmul
cli
aas
shlb
repz
in
sti
mov
in
mov
out
in
lds
repz
iret
xor
fmul
aad
xor
test
neg
ffree
out
into
sub
shll
enter
push
hlt
sbb
into
xlat
test
rorl
loopne
cli
fimuls
out
sti
jmp
lock
aas
lret
mov
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
std
arpl
enter
ret
jle
aam
loopne
lock
out
mov
xchg
cs
clc
shll
into
xlat
iret
ret
sarb
faddp
sarl
icebp
out
xchg
hlt
rcl
ljmp
repnz
cmp
movb
std
test
mov
leave
loope
out
ror
iret
stc
icebp
idivl
iret
adc
fiaddl
jecxz
in
loopne
shr
iret
imul
in
in
cli
imul
loopne
shl
cld
ret
loop
call
testb
in
loope
in
in
enter
cmp
stc
sti
cmp
xlat
shl
fucomi
leave
icebp
out
mov
aad
icebp
xor
xlat
out
rcl
out
fcomi
loop
clc
aad
ret
mov
incl
int
int3
out
shl
lret
repnz
cmp
cmp
fcmovnbe
loope
clc
call
int3
cmp
int
out
orl
divl
cmp
cmp
xor
mov
enter
lock
nop
bnd
icebp
repnz
int3
idivb
sub
loope
shl
aas
ret
leave
dec
jecxz
mov
xor
fsubr
push
and
fucom
aas
ret
out
test
test
lret
fcmovnu
xchg
aaa
xor
cmp
aam
loope
cmp
flds
mov
fucomip
jmp
aad
cmp
shl
int
sar
loop
leave
enter
addl
out
call
aad
std
jmp
aaa
std
int3
cmc
sbb
and
fsubr
mov
std
repnz
icebp
leave
cmp
cli
cmp
cld
and
rcl
enter
jmp
loop
mov
hlt
xor
clc
repnz
loop
in
test
fcmovu
ljmp
nop
iret
test
stc
rol
out
iret
cmp
repz
fistpll
testb
clc
lea
repz
in
hlt
loopne
in
ljmp
clc
aam
jmp
dec
mov
in
repz
jecxz
rcr
sar
sar
cld
testl
ret
int3
fmul
aad
mov
push
cmpsb
jl
pop
jle
ret
jle
hlt
fcomip
xlat
xor
fcmovnu
xlat
mov
fimull
call
int
fucomi
rcl
shl
jmp
fiaddl
lret
aad
hlt
out
out
cmp
xlat
aas
sbb
ds
out
into
lret
cld
fucomip
fadd
hlt
jecxz
sub
out
sub
rcr
std
jecxz
loopne
xchg
fisttpll
mov
shrl
int3
lret
ror
ss
cmp
loope
mov
ret
loop
mov
clc
mov
lock
enter
cmp
repnz
loopne
cmp
hlt
clc
cmp
add
filds
out
ftst
jmp
out
ljmp
lock
out
xchg
xchg
cmc
adc
repz
divl
sarl
or
fmulp
cmc
sar
sti
inc
loop
shl
shl
mov
sub
aaa
vaddsubps
cmp
cmp
aas
sti
loop
jecxz
cmp
clc
fimuls
ror
fdivr
cmp
fstp
fdivrp
div
in
add
orl
iret
loope
int3
rol
icebp
xor
fdivrp
int
not
fcmovnb
idiv
shl
mov
test
roll
int
fmulp
fsqrt
ret
out
rolb
ds
mov
loopne
std
icebp
shl
mov
aad
out
not
ljmp
and
sti
cli
cmc
cld
jmp
icebp
mov
out
xor
hlt
fsub
int3
fincstp
sub
cmp
out
cmp
hlt
test
icebp
cmp
mov
lret
xor
in
int
idiv
shr
aas
ds
aad
std
lret
out
out
adcb
call
xor
lret
out
fcmovne
xlat
test
xlat
fsub
fiaddl
orb
ljmp
cmp
aaa
enter
rcl
sar
ret
jmp
int3
in
lock
ror
loopne
in
int3
out
jecxz
aad
hlt
inc
sar
rcr
cmp
into
loope
cld
cmp
in
rol
fsqrt
shr
cmp
int3
cmp
fcmovu
test
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
lret
push
pop
jle
ret
jle
repnz
cmc
test
nop
lock
loop
hlt
in
cmp
in
filds
stc
iret
test
fsub
into
loop
test
cli
cs
clc
lock
ror
loope
ret
xchg
mov
jmp
cld
int
fsubrp
jmp
cmp
ss
leave
loop
int
out
xchg
jmp
ljmp
int
repnz
into
sarb
jmp
loopne
test
fisttpl
loopne
mov
loopne
lock
test
enter
ss
leave
cmp
shl
test
repz
in
repnz
mov
sub
lock
xor
int
cld
stc
cmpb
fistpll
out
loop
mov
out
loopne
ljmp
loope
iret
cmp
cmp
xor
out
sar
out
filds
cmc
jmp
orl
ret
cmp
iret
aas
ss
ss
idivl
test
mov
leave
lret
mov
das
enter
hlt
repz
repz
imul
fcmovnu
fcomip
cld
lret
jmp
jmp
lret
cmp
cmp
fcmovu
lock
cli
test
call
enter
loopne
out
xchg
shr
out
iret
enter
leave
aas
repnz
shl
fadds
out
call
shl
in
call
cmp
add
mov
xchg
shl
ret
out
repz
addb
aam
in
cli
sbb
fxch
fimuls
into
out
icebp
stc
cmp
ds
ror
cld
sar
std
testb
leave
mov
or
lret
shlb
ret
out
out
hlt
div
aad
std
xor
fimuls
fcmovnu
xchg
jmp
cld
int3
loope
shl
fsubr
cmp
ror
fiadds
rcr
sti
test
sti
fsubp
jecxz
jmp
hlt
out
ljmp
adc
loopne
test
sti
out
fsts
rol
out
clc
int
shl
ss
jmp
rcr
xlat
lock
dec
orl
add
into
aad
vpaddusw
aad
js
jg
jnp
or
jle
int3
jmp
sti
test
xchg
lret
xor
aam
into
rol
idiv
xchg
cmp
aad
int3
int
repz
mov
aam
fnsave
icebp
aad
aas
cld
hlt
ds
xchg
aas
stc
fimull
xchg
xchg
ror
cmp
cmp
bnd
aaa
ror
incb
in
loopne
test
loop
lea
xor
out
neg
repz
fcmovb
testl
lret
repnz
lock
cld
lret
clc
cmp
addl
shl
cmp
fimuls
test
repz
int3
jmp
cmp
clc
fdivrs
int3
cmp
rcl
in
lea
mov
into
out
in
shl
sarl
iret
int
mul
in
lds
mov
test
in
jmp
not
in
cmp
out
cmp
fcmovnbe
clc
enter
ljmp
shl
shl
ror
int3
fcmovbe
cmc
int
icebp
cli
aas
cmc
aas
cli
lret
xchg
cli
out
and
shll
divb
xor
aas
cli
aam
enter
lret
test
mov
mov
out
lret
into
sarl
stc
enter
jmp
cmp
ret
loopne
cli
cli
rcr
aam
std
cli
icebp
enter
subb
aam
shlb
test
sti
leave
repnz
in
and
in
ss
out
sti
out
out
ret
ffreep
repnz
enter
in
shr
in
aad
clc
rcl
fldpi
clc
cmc
cmp
shl
sti
loope
xchg
mov
mov
or
out
int
orl
rcr
out
in
out
repz
cmp
cld
leave
clc
loop
mov
lock
mov
rol
into
jmp
out
repz
out
repz
fisttps
cld
mov
idivb
stc
clc
cmp
jmp
fnstsw
in
xlat
aam
xor
sbb
lret
into
cld
mov
ljmp
icebp
icebp
ss
std
lret
in
test
cli
test
mov
roll
imul
sub
jmp
aad
int3
fmul
fnstsw
test
pop
jle
ret
jle
int3
addb
stc
xor
out
aaa
lret
cmp
hlt
aam
enter
lret
nop
leave
ljmp
rcl
out
cmp
sti
in
sbb
test
mov
in
xchg
out
repz
cli
cmp
in
sub
aad
loopne
aad
incl
lock
jmp
lret
repz
ror
out
into
aad
idivb
xor
aam
mov
xchg
std
fsubrp
out
test
aaa
shl
call
loop,pt
fcmovne
idiv
aad
add
loop
decb
loope
cmp
std
cli
into
fdivrl
cmp
xlat
cld
cmc
popl
jecxz
out
loope
hlt
out
out
std
int
sti
sarl
push
jecxz
testl
rorb
lock
ss
not
rcr
clc
div
loope
fdivr
fxam
xchg
xchg
iret
out
enter
rcr
das
std
sti
jmp
mul
fcom
hlt
out
in
loope
ds
stc
ljmp
shlb
call
cmp
repnz
int
loope
les
loope
int3
fdivr
hlt
xchg
cmp
fcmovne
cmc
into
sub
fldl
cmc
ret
incb
repnz
ret
icebp
int3
cmp
leave
repz
in
idivl
shl
hlt
cmpl
orl
mov
ss
ret
shlb
aaa
int3
cmp
cli
xor
repz
ds
out
frstpm(287
enter
repnz
shr
ljmp
sbb
test
repnz
jecxz
in
roll
cmc
out
neg
stc
ror
cmp
int3
cmp
roll
div
cli
ljmp
mov
lret
fidivs
ret
rcr
sar
call
xchg
lock
fldl
xor
int
in
fucomip
cli
int3
cmp
int3
ds
fdivr
out
les
mov
aam
cmc
iret
lret
cli
cli
addl
in
test
mov
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
mov
pushf
popa
jle
ret
jle
aam
rcl
ljmp
jmp
out
cli
ret
cld
mov
lret
sub
hlt
dec
ljmp
aaa
hlt
into
lock
xlat
rol
out
out
div
cli
fldln2
jecxz
mov
mov
shr
fmul
idiv
iret
aad
ds
fdivr
cli
loope
xlat
out
int3
xchg
cli
loop
mov
cmp
aam
fprem1
rcr
shl
call
jmp
sub
mov
mov
jmp
hlt
into
fcmovbe
sbb
repnz
rcr
test
fdivr
idiv
stc
fdivr
ret
out
jmp
cs
hlt
xor
lret
enter
std
in
loope
xchg
shl
sbb
loop
iret
xchg
ljmp
in
lock
sar
xor
fcomp
add
clc
enter
mov
jmp
das
aaa
repnz
cmp
repnz
shl
fiaddl
mov
ror
loope
mov
xor
xor
in
neg
jmp
in
jmp
out
mov
cmc
repnz
std
idiv
idiv
ror
aaa
rol
cld
ljmp
decb
xchg
shl
div
out
call
rcr
ds
fcmovnb
fcmovb
out
cli
in
shl
enter
fucomi
cld
xor
ret
in
aam
idiv
xlat
inc
in
loop
jmp
int3
icebp
repnz
xor
fidivrs
fcmovnu
sti
testb
cld
call
icebp
in
xchg
call
sar
in
sti
ror
repz
fidivrl
loop
clc
ret
cli
vpsraw
iret
ljmp
enter
cmp
out
std
call
clc
loope
sti
mov
fadd
out
aad
out
jmp
cmp
faddl
fcmovnu
jecxz
xlat
in
fsub
in
jecxz
out
out
aam
stc
cld
std
std
aad
fidivrl
addb
call
mov
out
shl
int
aaa
ss
fstpt
iret
ds
lret
fsubrp
shl
xchg
out
shl
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
dec
adc
ret
jle
ret
jle
loop
in
std
icebp
into
out
cli
testb
adc
mov
fcmovbe
in
rcl
iret
in
lret
icebp
std
bnd
aas
rol
iret
rol
sbb
mov
call
mov
in
xor
xlat
repnz
fadd
aam
loopne
cli
ret
out
mov
xlat
xchg
mov
ror
out
fdiv
ds
test
cmp
and
xchg
test
xor
bnd
cmp
adc
mov
les
std
mov
loopne
test
loope
fnstenv
clc
enter
sbb
icebp
shl
in
stc
fcomp
int
in
in
vpandn
lock
fidivl
xor
cmp
in
ret
test
leave
incb
fisttps
loopne
out
clc
call
aaa
in
in
jecxz
icebp
loopne
mov
loope
adc
in
jecxz
sub
int
out
std
repz
icebp
fsub
clc
jecxz
jecxz
out
fsubr
into
adcb
ret
in
lret
loop
iret
jmp
loopne
repz
xchg
fcomi
jmp
flds
xchg
rcll
out
aad
cmp
ds
out
rcl
roll
loope
nop
in
aam
xchg
cs
in
xor
shl
stc
clc
int
rcr
rol
cmc
testl
rcl
cmc
iret
fidivl
cli
out
stc
lock
ljmp
hlt
in
std
int
fstl
int
ljmp
in
iret
cmp
sti
ds
aad
aam
in
jmp
fstl
lret
in
das
out
icebp
fld
fsub
in
nop
or
cmc
mov
jecxz
aam
cli
aam
aas
leave
shl
shl
shl
cmc
ret
mov
leave
lock
xchg
shl
in
jmp
ret
cmp
cmp
cli
test
cli
and
xchg
addl
shrb
lds
xor
cmp
into
loopne
clc
out
repz
sbb
test
cmc
not
ljmp
loopne
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
xor
cli
out
cmp
in
dec
out
mov
sti
mov
int
jecxz
addb
in
ds
xlat
cmp
cmpl
lret
xor
out
loop
divb
ss
xor
into
hlt
in
shl
int
into
in
loopne
fcmovnbe
mov
int3
in
test
lret
loop
out
shl
jmp
loope
cmp
shl
neg
fcmovbe
xchg
out
hlt
movl
cmp
std
ds
aad
fstp
out
leave
ret
sbb
call
jmp
idiv
sti
call
in
and
cld
leave
fdivp
stc
incb
cs
into
sub
into
cmp
cld
shl
adc
mul
sar
xchg
test
xor
jmp
xor
lret
enter
int3
vpaddw
repnz
mov
sti
xlat
out
nop
int
addl
aaa
loope
ljmp
ret
lret
aad
fsubr
jmp
jmp
lret
aas
cmp
iret
test
loope
and
fadds
loop
sub
cmp
shlb
cld
aas
repnz
ret
ds
clc
lds
loop
call
call
out
aas
rcr
cmpl
ret
leave
fisttps
lret
repz
rcl
iret
in
out
ds
cmp
test
test
nop
icebp
in
icebp
repz
xchg
ljmp
div
loop
test
ds
call
lock
lock
xor
out
xlat
icebp
ret
fdiv
and
fsub
enter
xchg
out
out
into
in
ss
stc
xor
loop
cmp
cmp
loope
fucomp
decb
in
std
cmp
cmp
sarl
int
sar
frstpm(287
loop
iret
and
xchg
mov
loopne
aam
clc
sti
out
cmp
leave
inc
ffreep
repz
in
repz
mov
int
cmp
cmp
pop
jmp
mov
jmp
ret
int
fstl
mov
shr
call
add
shl
int
rcr
faddp
xchg
aad
loop
mov
subl
fcomp
stc
int
test
in
fdivr
faddp
shl
orb
iret
aaa
out
call
ret
cli
stc
xlat
jmp
lret
jmp
cmp
int3
lret
and
sarb
call
aaa
into
int
in
mov
test
xchg
test
cld
jmp
icebp
loopne
lret
xor
repz
ffreep
repz
out
out
xchg
iret
mov
xor
std
stc
xlat
jecxz
in
roll
std
in
dec
xor
mov
xlat
shlb
xlat
sarb
rolb
mov
xchg
jecxz
rcr
in
call
jecxz
and
fld1
cmc
rorl
leave
xchg
mov
jmp
inc
stc
repz
ret
repz
loope
int
jecxz
out
mul
ss
into
rcl
int3
icebp
add
loop
test
roll
in
in
cmp
fst
xor
ds
fcmovnbe
aas
cli
loope
loope
lret
int
or
rol
shlb
shr
leave
icebp
cmp
rcr
in
repz
xchg
leave
aad
cli
out
in
lock
ss
aaa
lret
faddl
ffreep
ret
std
in
rorb
out
fidivl
cli
rcl
cmp
fcomp
fmul
cmp
aad
fsubrp
test
loop
out
rorb
xor
xor
ss
stc
ljmp
cmc
fucom
loop
mov
std
out
roll
call
cmp
call
iret
int
sti
xor
mov
mov
fmulp
ror
aam
std
cmp
fcmove
loop
in
out
fadd
rcr
test
or
xchg
lret
xchg
leave
fsubr
xor
int
xor
cmp
adc
rol
leave
mov
xchg
fdiv
aam
cli
aad
int3
loopne
shl
cmpb
je
jmp
int3
ret
int
mov
pusha
das
fs
jge
lods
push
jle
add
and
fdiv
sti
fld
loopne
fucomi
mov
loopne
xor
repz
stc
xor
fcompp
aad
clc
lock
idiv
test
mov
push
mov
xchg
mov
loope
cmp
out
iret
int3
hlt
sti
hlt
sar
cmp
ds
adc
fcoml
divb
cld
enter
loope
aam
loopne
idiv
enter
test
cli
or
jmp
ret
icebp
lret
int3
fnstsw
cmp
fdiv
sti
xchg
mov
xchg
xchg
ljmp
out
in
leave
jmp
loopne
cmp
ds
cmp
cli
lret
lret
fcmovu
call
ljmp
cmp
sar
neg
jmp
fdiv
icebp
cli
out
xchg
jmp
icebp
cs
into
cli
idiv
cmc
rcl
repnz
stc
repz
lret
int
test
out
mov
mul
rol
cmc
out
fdivl
lock
out
loop
lret
fisttpll
into
repnz
in
stc
cmp
leave
rcl
div
roll
fucomi
call
in
mov
ss
xor
cmc
int3
call
rcl
ret
ljmp
sti
int
cld
nop
rcl
not
ret
cld
call
lret
int3
ret
ret
sti
cmp
shr
in
out
in
clc
loope
out
out
cli
xlat
int
fxch
aam
cmc
mov
loope
cld
fiaddl
loope
mov
rcr
fcmovnu
out
rcr
ljmp
rcr
clc
fucom
loop
jecxz
call
out
out
cmp
hlt
cmc
aaa
sti
loope
std
stc
in
addb
sti
out
fucomip
or
leave
jmp
xor
cmp
aas
aam
cmp
cld
enter
jmp
ljmp
lock
rcl
aad
cmp
shr
int3
into
adc
jecxz
mov
xchg
jmp
sub
hlt
xor
enter
clc
jmp
ret
cmp
call
shr
cmp
iret
cmp
loop
lahf
sbb
sub
call
in
jmp
aad
iret
aas
rol
aad
push
inc
push
repnz
and
jo
jle
test
jle
loopne
out
jmp
out
aad
out
lret
cli
ljmp
fstp
cmp
loope
lret
and
jmp
and
in
hlt
lock
cli
ret
shl
xchg
jecxz
iret
test
ljmp
cld
clc
iret
out
cld
loop
hlt
test
mov
mov
in
aam
cmp
in
xor
ss
cmp
loopne
addb
mov
ss
stc
fsubr
sti
iret
xor
add
loopne
xchg
ljmp
fcmove
loope
out
rol
stc
xor
cld
lret
ret
shl
aam
rcl
stc
cmc
test
out
xchg
mov
lea
ret
jmp
aas
cmp
cmp
xchg
out
iret
in
fisttpll
xor
hlt
out
cmp
repnz
shl
ret
ffreep
adc
mov
rcr
and
iret
icebp
icebp
std
adc
cmc
loopne
aad
mov
fiaddl
shl
in
call
fidivrs
ds
in
test
call
mov
loopne
xchg
ss
int
cld
hlt
cld
ss
cmp
ljmp
movl
aad
lret
cmp
shl
fdivrl
icebp
fadd
rol
fsubr
fxch
iret
in
shll
sub
aad
in
int
fchs
repz
xlat
xchg
std
fiaddl
fcmovb
cli
adcl
xor
cli
repz
cmp
fdivr
mov
ffreep
icebp
int3
rcll
in
in
hlt
cmp
out
fdivr
mul
jecxz
fcomip
cli
test
xchg
shr
in
leave
out
div
cmp
cmp
rcl
fxtract
loopne
or
mov
xlat
faddl
shl
out
jmp
fcmovbe
ffree
fsubrp
fcmovnu
clc
loop
test
mov
lea
out
aam
xor
cli
das
xor
filds
test
fiadds
cmc
xor
in
rol
out
cmp
aad
hlt
sarb
aad
xor
out
into
loope
or
lret
hlt
out
repz
repz
jecxz
hlt
xlat
lock
aad
shl
addb
iret
into
cld
out
div
aaa
addb
repz
in
fucomip
loop
sub
jmp
aas
into
lret
leave
aam
dec
jo
pop
notb
sbb
test
jle
ficoms
ror
sarb
xor
lret
repz
std
xor
loope
xlat
dec
out
call
rcll
call
aaa
aas
lret
int
rcr
fcmovnbe
vpsubw
int
xchg
incb
int3
shlb
cs
aad
in
sbb
int3
cmp
cmp
icebp
roll
shl
sub
fdivrl
ds
and
test
out
in
mov
sti
icebp
addb
ljmp
imul
hlt
cmpl
out
cld
sti
int3
in
addb
jmp
aam
in
iret
lret
fst
int
loope
out
aam
stc
testl
in
mov
xor
cmp
shll
ror
out
cmpl
xlat
test
in
out
xchg
jecxz
idiv
aam
shlb
xlat
int
cli
sar
rcl
stc
in
cld
call
mul
out
aam
fucomi
cli
ljmp
aas
ret
lret
testl
out
stc
jmp
std
cmp
idivb
fcom
repnz
xchg
fsubrp
xchg
in
out
das
out
ret
stc
stc
sar
xlat
cmp
and
test
xchg
stc
call
call
jmp
sti
imul
lret
out
or
aas
fsub
sub
out
test
sbb
jecxz
loopne
xlat
int
ljmp
loope
out
icebp
cld
addl
repnz
mov
shl
out
cmp
stc
jmp
sub
out
int3
out
stc
icebp
jmp
sbb
std
iret
cmp
cmp
std
cmp
repz
loop
mul
jmp
rorl
icebp
jmp
sar
cli
enter
xlat
faddl
test
xchg
ljmp
xlat
repnz
cmc
lret
fneni(8087
out
ds
test
sub
leave
mov
jmp
xchg
rorb
in
out
cmp
ss
test
icebp
testb
loopne
ror
loop
xor
ror
in
out
aad
lock
in
jecxz
cmc
test
repnz
int3
mov
mov
repz
repz
fdivrl
aad
sbb
repz
mov
fdivrp
int
nop
in
xchg
lret
shll
ss
call
repnz
cld
std
loope
cli
xchg
mov
decl
nop
cld
in
out
xor
int3
xor
rorl
push
jmp
int3
ret
int3
int3
sahf
pushf
gs
out
mov
test
jle
cmp
rcr
cmp
iret
cli
aam
aad
stc
loopne
fildl
mov
into
jmp
cmp
push
loop
into
out
xlat
xchg
fcomp
out
clc
test
in
repz
ds
xor
sbb
test
jmp
fimuls
ljmp
rcr
cmp
cmp
aaa
std
cmpb
aas
loope
fcmovu
cld
in
mov
mov
and
out
repnz
aaa
jmp
adc
cmc
leave
in
mov
lock
shl
in
cmp
loopne
fdivr
rcr
ret
out
test
jecxz
fisttps
out
shl
sar
cli
repz
out
cmc
ds
xor
iret
test
fisttpll
mov
xchg
lret
lock
hlt
in
cs
jmp
aaa
sar
fcmovbe
test
aam
or
lock
jecxz
stc
cmp
repz
out
sar
ds
in
rcr
jmp
nop
fninit
leave
fsubrp
or
fcom
leave
into
ss
cmp
cmp
loopne
xchg
adc
ds
std
fcomp
fisttpll
in
cmp
repnz
into
rcr
int
cmp
lock
xlat
loopne
loop
cli
loopne
lock
ljmp
cmp
aaa
aas
clc
cmpb
fstp
rorl
out
fisttps
aaa
aad
ljmp
aam
loopne
ret
leave
stc
jecxz
or
rcl
xchg
ss
cmc
in
ss
call
in
shl
in
cli
aad
out
fcmove
lret
jmp
aam
cld
call
out
fldl
ds
mov
out
mov
add
xor
shll
repz
cmp
stc
in
out
test
jecxz
testb
into
enter
out
ss
hlt
leave
jmp
ds
clc
stc
inc
out
mov
aam
out
xor
into
cmp
inc
lret
in
loope
repz
test
fstp
mov
mov
fldl
jmp
ljmp
loopne
rol
out
hlt
int
addl
in
test
cmpl
fdivrp
sti
xlat
call
iret
xor
mov
repnz
rcr
cld
xor
cmp
repnz
push
mov
mov
sub
out
cmc
sbb
std
fadd
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
mov
test
jle
icebp
in
fiaddl
lea
mov
in
shl
aad
in
lret
leave
fdivr
aas
icebp
fstp
cmp
enter
and
fimuls
not
out
xor
lock
cmc
fdivrp
fcmovb
fcmovb
aam
clc
decb
out
fsubr
idivb
fdivrl
xlat
xor
shl
aad
fdivp
call
cmc
adcb
out
fucom
enter
mul
rcr
mov
clc
cld
mov
fstp
xchg
xchg
call
lret
lret
repz
mov
call
bnd
call
in
lret
lret
cmp
xorb
cld
in
sbb
jecxz
lret
in
fmuls
jmp
int
sti
in
lret
int
cld
sarb
shl
fcmovbe
out
out
ds
or
iret
cs
aad
lock
std
cmp
aad
lds
in
add
fldl2t
test
mov
enter
xor
into
cmp
int
out
test
sbb
ret
fstp
sub
out
xchg
cmp
cmp
cmp
clc
fincstp
into
test
roll
xchg
fsubr
out
jecxz
ffreep
les
xor
cmp
cmp
repz
cmp
ret
icebp
addb
loope
int
mov
jecxz
test
out
cmp
fcomp
iret
test
cmp
aas
fneni(8087
test
out
ret
aad
out
fcmovne
ds
int
aad
fcmovbe
mov
ljmp
sti
ret
incl
das
shl
xor
shl
rcl
repz
cmp
test
aas
roll
sub
addl
xlat
xlat
leave
stc
cld
clc
fcmovnu
rcr
ret
repnz
xor
nop
test
xchg
pop
jmp
hlt
repnz
jmp
into
sbb
sbb
lret
cmc
and
fcmovu
lret
xchg
mov
in
cmp
out
cmp
fdivr
rolb
call
shr
xchg
in
lret
aad
xlat
cmp
into
xlat
int
test
loop
fcmovnu
aad
fldl
into
in
xor
ss
not
sar
movl
iret
int3
iret
xchg
or
xor
cmp
cli
in
cmp
rol
repnz
faddp
xor
mov
leave
enter
mov
ret
xor
out
repnz
clc
test
aad
aam
in
xchg
add
add
aam
rcl
aad
inc
xor
fwait
pop
imul
jle
test
jle
mov
addl
repz
in
std
loope
rcl
shr
sar
out
in
fcom
loopne
jecxz
fsubp
mov
clc
lret
ss
std
iret
rcl
rol
jecxz
clc
stc
and
ds
lret
out
call
cld
fcomp
neg
loopne
jecxz
fcmovnb
sarb
fdivrp
loop
cld
mov
std
icebp
enter
xor
in
xor
jmp
in
out
enter
ljmp
sti
std
shl
lret
fincstp
aaa
cmp
roll
xchg
std
stc
loop
lret
loop
in
in
out
aad
xor
aad
idivb
icebp
test
mov
xchg
clc
in
sti
orb
fucomip
aaa
rcl
ss
cmp
fcmovbe
int
in
out
test
cli
out
lret
cli
mov
shr
dec
icebp
das
out
shl
int3
std
jmp
not
std
ret
int
out
jecxz
in
lea
cld
repz
lock
cld
out
cmp
xor
icebp
fcmovnu
vpaddq
in
ljmp
out
hlt
div
iret
rol
shr
aad
aas
loop
shr
div
xlat
orl
jmp
ss
sti
repnz
cli
fcom
int
neg
loopne
test
xchg
mov
mov
jmp
ds
rol
shl
ljmp
leave
test
mov
xor
lret
icebp
cld
sarl
stc
shr
clc
out
loop
cmc
fsubr
mov
shr
int
call
fdiv
aam
int3
ror
std
fistpll
adc
xlat
les
xchg
xchg
lds
lock
out
hlt
enter
fistpll
fadd
in
fchs
fldlg2
stc
mov
incb
loope
call
stc
out
loopne
cmp
iret
rcr
and
cld
loop
sbb
call
out
test
in
addb
addb
cld
in
call
ret
out
xor
stc
out
aas
lock
out
testl
shl
mul
fsub
enter
fcomp
lock
cmp
cli
in
sarb
enter
mov
filds
aaa
stc
rcl
jmp
xlat
xor
fst
mov
lret
stc
or
test
mov
shl
aam
shl
les
rcl
repz
lock
cmp
out
out
mul
clc
mov
aam
test
xor
mov
adcl
add
jmp
mov
fcmovnu
or
sub
movsl
aad
ret
jle
add
aad
cmp
leave
aas
rcr
cmp
ds
inc
mul
frstpm(287
ljmp
ss
out
cmc
jmp
ror
xor
rol
test
aam
cmc
out
int
out
in
shl
ljmp
clc
sarl
shl
fcmovnbe
fadd
fldl
out
mov
int3
div
lock
icebp
cmp
repnz
std
cli
aad
repz
jmp
test
icebp
mov
shl
stc
fnsave
fnstsw
ror
in
fldl
out
call
xchg
in
in
jmp
cmc
shlb
mov
fcmove
cli
cld
fdiv
enter
cmp
cld
clc
out
cmp
cld
stc
not
lock
loopne
loop
in
xlat
lock
int3
orb
rcr
cmp
clc
cmp
shl
test
cmc
fstp
out
nop
iret
out
loope
xchg
shl
cmc
xor
iret
xor
cmp
cld
shl
loop
xlat
in
addl
in
xchg
cld
incb
jmp
xor
sbb
fdivp
fadd
jecxz
mov
int3
xchg
mov
test
aaa
rcl
in
stc
repz
iret
cmp
out
xor
or
fucomip
addl
stc
fst
ror
adc
repz
std
movl
int
in
repz
fdivrs
icebp
leave
cli
sar
sti
stc
idiv
xor
testl
repz
repnz
push
fidivrs
shr
neg
fsub
out
int
cld
sbb
lea
shl
stc
frndint
aam
or
fcomi
addl
lret
loop
rorb
xor
lock
sti
cmp
loopne
fdivr
loop
test
addb
rorb
out
shrb
enter
iret
ss
cmp
shr
icebp
rolb
vpmulhuw
fmul
fucomp
repz
ljmp
int
sar
xor
fidivrs
addl
call
hlt
in
iret
cmp
shl
int3
out
sti
cmc
icebp
clc
cmp
rol
mov
in
lret
fcmovu
jecxz
in
xor
xchg
loope
aam
in
bnd
out
cmp
xchg
int3
sti
loopne
lock
xor
rcl
xor
into
sub
jecxz
in
loopne
mov
loope
and
in
xchg
loop
jmp
jmp
xor
hlt
cld
ljmp
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
jmp
shrl
test
jle
std
out
leave
ret
clc
mov
jmp
nop
lea
jmp
idiv
rcl
lret
cmp
fcomp
hlt
call
out
rcll
call
iret
ds
imul
sti
cli
not
rcr
sub
test
fldl2t
out
nop
call
out
xlat
xlat
mov
std
push
cmp
sti
in
loope
into
mov
rol
cli
fucompp
lret
in
hlt
std
add
rcl
test
loope
mov
xchg
out
xchg
out
out
lret
fdiv
lret
jecxz
test
ret
fstp
test
sti
repnz
mov
addl
xor
cli
cli
shl
out
cmc
out
ror
xchg
in
div
jmp
enter
out
push
stc
repz
dec
jmp
test
shl
mov
fsub
idiv
call
or
call
cmp
rcr
fdiv
jecxz
aam
loop
inc
fcomp
in
xchg
in
repnz
aaa
leave
into
lret
dec
into
cmp
fcmovnb
sti
stc
out
lret
lret
test
xchg
stc
repz
into
loop
rcl
loope
out
mov
ror
xor
fcmovbe
lret
lock
sbb
test
cmp
jmp
leave
mov
jmp
aad
lret
cli
into
jmp
shl
xlat
rcr
mov
lret
call
out
aas
xor
fsubr
jmp
fcomip
loop
stc
div
and
fisttpl
fucomp
mov
aam
not
into
cmp
rcl
jmp
testb
fisttpll
cli
out
sbb
xchg
xchg
shr
xor
fcmovne
xor
loopne
cmp
in
fsubr
leave
in
enter
loopne
cmp
leave
int3
aad
cmp
sar
cli
test
test
aas
call
in
fnsetpm(287
repz
icebp
in
enter
fdivr
icebp
out
xlat
int
std
rol
call
sub
mov
repz
out
jecxz
shll
fcmovnu
xor
int3
cmp
sbb
out
mov
sti
std
xchg
into
repnz
repnz
out
fsubr
out
int
cmp
test
icebp
fldl
lret
mov
mov
leave
in
enter
out
lret
leave
ljmp
cmp
decl
fiaddl
iret
in
int3
ss
cli
idiv
aaa
in
iret
int3
loopne
rcr
loopne
aad
int3
out
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
hlt
or
int
jg
jle
add
lret
jecxz
leave
loopne
loope
in
xor
cmc
cmp
cmc
out
loope
cld
ret
shl
hlt
cmp
loope
mov
or
ret
shl
cli
stc
in
in
idivl
fcom
cmp
in
mov
jmp
iret
loope
ret
cli
int3
fidivrs
cmc
stc
fildl
fdiv
leave
loopne
ljmp
nop
iret
aam
in
lret
ljmp
ljmp
mov
xor
out
cld
xchg
in
in
aad
cmp
fsubr
rcl
jmp
cmc
roll
orl
in
xchg
into
lret
out
icebp
enter
ds
iret
rcr
test
les
stc
rorl
lock
sub
iret
cmp
cmp
sar
loope
sti
test
incb
in
leave
leave
xor
cld
fildl
aam
cmp
ret
into
jmp
repz
fucomip
cs
cmp
in
repz
aam
fmulp
in
mov
nop
xchg
cs
out
cmp
aad
shl
aas
and
std
mov
mov
ljmp
lret
ror
fiadds
cld
loope
xchg
and
lock
ret
xor
cmc
iret
into
stc
iret
sti
fdiv
faddl
out
enter
std
xchg
into
xor
jecxz
in
lret
in
xor
lds
hlt
dec
mov
lret
cmc
int3
enter
xor
stc
jmp
not
stc
sar
in
jecxz
cli
fdiv
in
nop
jecxz
into
in
xchg
icebp
in
xor
xor
hlt
fcomi
loopne
fidivrl
lock
cmp
lret
jecxz
fdivr
shl
in
repz
xor
cmp
stc
cli
in
ret
out
hlt
or
movb
aam
fldln2
out
les
repnz
cmp
int3
int3
aad
iret
icebp
mov
lret
cmc
xlat
out
fimuls
call
aaa
repnz
cli
fidivrl
in
rolb
enter
sub
xchg
lret
rcr
loopne
repz
repz
enter
cmp
fdivr
cld
mov
jmp
fists
stc
out
fcmovbe
cmp
iret
neg
std
loopne
out
mul
sub
fcomi
xchg
jmp
aaa
fdivrs
xlat
sti
test
out
rcl
aad
shl
repnz
cli
int
xchg
loope
cmp
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
rcll
rolb
jle
add
cmc
xor
into
loopne
cmc
aad
aas
sbb
fildl
test
xchg
sar
loopne
out
lret
cmp
shr
in
div
stc
add
out
out
jecxz
jmp
or
ret
fcomp
fistpll
clc
cmp
enter
hlt
out
fdivrp
loop
hlt
jmp
out
in
xor
incb
xlat
xchg
clc
loope
loop
enter
in
lea
aaa
xlat
std
out
ss
int3
into
rcl
cld
test
aam
cmp
fimull
shlb
aam
sarl
stc
cmp
xorl
xchg
leave
out
cld
repz
int
lock
repz
in
int
rcr
sti
fmul
std
fisttpl
lock
test
lea
test
sti
cmc
in
ds
decb
lret
xchg
out
hlt
ror
lret
aam
sti
div
testb
vpaddusb
fcmove
mov
call
clc
leave
xor
out
out
jmp
out
aas
in
aad
jecxz
in
mov
mov
ljmp
cli
int
shl
ljmp
test
xlat
xchg
fadd
xchg
sub
jmp
loopne
lret
aam
cmp
in
sarl
aaa
into
repnz
rcr
test
xchg
int
cld
xor
out
shrl
out
icebp
out
sub
cmp
cld
bnd
les
mov
iret
ret
repz
fdivrp
in
not
cld
ljmp
cli
leave
int3
addl
fucomi
sar
in
loop
orb
int3
jmp
mov
icebp
iret
sarb
rcr
out
cmp
out
jecxz,pt
out
in
fadd
in
std
nop
filds
das
cmc
hlt
cmp
sar
fdivrl
cmp
jecxz
out
call
sbb
shr
in
loopne
call
jmp
cmpl
sti
sti
in
ljmp
adcl
iret
cmp
clc
into
test
cli
shl
jmp
call
in
xlat
mov
out
fldl
icebp
in
call
fsub
fdivrs
cmc
clc
enter
fldl
out
in
ret
enter
cli
leave
shl
int
rolb
mov
lret
out
loop
fxch
icebp
fisttps
in
repz
jmp
cmp
jmp
cmp
jmp
into
int
xlat
andb
push
jg
test
jle
in
cmp
repnz
cmp
out
test
mov
sub
int3
cmp
repnz
rol
icebp
repnz
neg
lret
mov
jecxz
into
xchg
into
enter
lock
hlt
fdivr
test
out
xchg
hlt
in
aam
shll
lret
ret
ror
faddl
test
ljmp
xchg
shr
ret
icebp
iret
lret
std
rcr
cmp
repnz
test
out
xlat
addl
test
jmp
aaa
jmp
cmp
std
idivl
int3
clc
out
fcomi
jecxz
mov
leave
in
loope
sub
ss
lret
std
int3
rolb
loop
stc
in
ljmp
repz
aaa
shl
clc
fsub
cmp
loope
mov
std
decb
fucomp
sti
in
aam
out
bnd
cmp
sti
idivl
in
rcr
fildl
mov
addb
in
iret
std
cmp
jmp
aam
testl
lret
adc
xor
out
cmp
jmp
cmp
rcl
push
fcmovu
loope
fdivr
xlat
mov
mov
sub
in
ror
rcr
aad
xor
ffreep
aam
in
shl
lret
test
int3
icebp
xchg
xor
lea
ss
cmp
cli
div
ret
test
cld
cli
fimull
lea
mov
shr
lret
cmp
ds
jmp
repnz
rcr
test
lret
jmp
mov
div
int
fadd
ds
leave
lret
out
push
sti
cli
ljmp
xor
xlat
lret
sarl
enter
icebp
fcomip
in
ljmp
sub
rcll
xor
jecxz
jmp
xor
std
jecxz
mov
fcmovnu
fldl
ficoms
aad
sarl
jmp
not
shr
test
cmc
lret
out
ficoml
enter
hlt
jmp
aas
aam
stc
loop
lock
icebp
cld
in
xchg
mov
in
push
xchg
xor
ss
cmp
cli
iret
cmp
fiaddl
aam
clc
mov
jecxz
ljmp
stc
xor
test
xlat
cli
fucomip
shl
jmp
clc
xchg
cli
call
hlt
leave
in
in
out
adc
cmp
or
test
or
add
cmp
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
cld
mov
test
in
sar
lret
stc
xlat
cmp
jmp
cmp
xchg
loopne
in
std
test
call
sub
out
shlb
xlat
stc
loop
fnstsw
aam
lds
sti
loope
lret
fdivp
iret
not
out
in
in
cld
cmp
lock
fmuls
fmull
test
rol
lret
jecxz
cmp
out
lret
sarl
cmp
orb
cmc
nop
repz
lock
cmp
int3
filds
loopne
enter
xlat
out
clc
in
out
int3
out
les
fcmovu
out
in
aaa
loop
cmp
loope
enter
cld
call
std
roll
cmp
out
in
leave
into
inc
test
rcl
mov
roll
mov
sub
aam
jmp
cmp
call
clc
cld
flds
testl
out
xor
div
ror
ror
rol
fcmovbe
fucomp
loopne
cli
out
loope
in
in
cld
jmp
out
xor
test
ss
shl
jecxz
filds
xlat
mov
jecxz
enter
xchg
hlt
leave
mov
not
int3
jecxz
adc
test
mov
vmovntdq
cld
cmp
clc
cmp
lock
repnz
sti
shr
jecxz
out
nop
loopne
shl
mov
in
in
fcomp
iret
lret
int
cmp
idiv
fxch
cmpl
fisttps
into
lret
shr
xor
enter
rcl
in
ljmp
out
dec
loop
in
loopne
adc
repz
loop
clc
int
hlt
enter
iret
ret
fiadds
fsub
dec
test
mov
nop
addl
aaa
cli
iret
adc
cmp
shr
in
clc
out
nop
sti
loopne
nop
enter
clc
hlt
cs
loope
shl
lock
neg
sar
incl
mov
shl
cmp
hlt
fcmovu
hlt
hlt
shl
xlat
ret
sar
fiaddl
in
fucomip
lret
iret
and
in
xor
sti
jmp
rcr
ljmp
cmc
loopne
mov
fcmovne
adcb
out
in
out
cmc
loopne
cmp
lds
mov
mov
jmp
jecxz
rcr
idiv
out
repz
shr
aam
ds
out
in
out
ret
fdiv
xrelease
xorb
mov
add
inc
or
or
pushf
ja
add
ret
add
int3
ror
fcomp
aam
aas
idivb
mov
or
test
jle
in
jecxz
in
in
clc
jmp
cmp
xchg
ds
faddp
int3
shl
out
loope
mov
in
xor
faddl
test
repz
xchg
in
sar
xor
ffree
jmp
lock
loope
shl
aas
out
cld
loope
mov
mov
addb
ljmp
cmp
rcr
repz
rorb
lret
loope
lock
das
xor
call
div
divl
aam
ret
roll
fcmovnb
fdivrp
xchg
xchg
in
xlat
cmp
shl
int3
cmp
out
ds
fadd
mov
xor
ss
int
out
repnz
loopne,pt
cmpb
repz
out
mov
xor
loope
clc
cmp
lret
shr
xchg
clc
out
loopne
mov
jmp
in
in
jmp
call
fdivrs
out
icebp
loop
loop
loop
jecxz
out
enter
int3
aad
idivl
cli
fsubr
int
cmp
addl
out
xchg
call
hlt
jmp
out
cli
xlat
lret
and
call
fstp
xchg
xchg
lock
cmc
ljmp
loopne
fildl
std
testb
jmp
xlat
cmp
fmul
xlat
cmp
in
loop
ret
lret
int
jmp
ficoms
out
out
fabs
neg
cmp
into
imul
fiaddl
fucomip
test
loop
cmc
fdivrl
rcr
fcomip
add
mov
lret
jmp
in
lret
faddp
sar
lock
enter
iret
std
mul
loopne
aam
repz
mul
xchg
loop
leave
cli
xchg
rcll
icebp
out
aad
cmp
repz
cmp
shr
aad
aam
int
stc
repnz
fucomip
loopne
aam
cmp
out
xlat
cmp
cmp
aas
xlat
clc
xor
fimull
lock
in
call
sub
out
aas
sbb
jmp
out
in
aam
int
out
hlt
xchg
rolb
cmp
int
icebp
cmp
ret
ret
shl
fldl
lret
rcl
orb
cli
clc
lret
loopne
cmp
stc
roll
mul
addb
sub
lret
int3
out
fnstenv
in
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
lahf
loope
push
add
cmp
cmp
xlat
fiadds
lret
incb
aam
rcl
das
xor
lret
out
icebp
ret
iret
ret
clc
sbb
aam
fcomp
fimuls
out
aaa
out
leave
into
repnz
aam
fscale
cmp
repnz
rolb
cli
int3
xchg
mov
call
out
icebp
aad
out
cmc
idivl
sbb
xchg
aaa
aad
leave
cld
cmp
into
std
out
idiv
fsincos
fidivrl
jecxz
call
shr
fsub
shll
rcr
hlt
xor
stc
fcmove
lock
clc
ror
xchg
mov
cli
std
out
fcmovu
loope
dec
loop
xor
hlt
aad
fnstenv
ljmp
in
stc
test
fmul
shr
jmp
in
out
out
lret
repz
stc
ljmp
sar
sbb
cli
cmp
test
shl
rcl
xor
fcmovnbe
xor
fnstenv
call
lock
ret
in
mov
mov
out
cmc
xor
shr
ss
jmp
fucomi
hlt
out
rol
ljmp
xchg
in
lret
cmc
cs
stc
lret
shr
fldz
cmp
in
mov
rorb
fcmovb
cmp
icebp
cmp
cmp
loopne
into
shl
ljmp
decl
in
sub
enter
cmp
fstpt
rcl
out
out
and
in
faddl
xchg
rcl
repz
cmp
into
fst
cld
neg
clc
in
rorl
mov
out
sti
in
int
call
int
hlt
lock
add
stc
loopne
repz
into
int3
das
out
sar
frstpm(287
shl
out
iret
cld
cld
aaa
xchg
out
mov
test
adcl
clc
aad
idivl
repz
int
in
shl
stc
lret
mov
lds
out
xchg
out
int3
mov
aad
into
ds
stc
adc
ret
fnsetpm(287
adc
cli
fucomi
mov
repz
lock
xor
in
enter
cmc
xlat
cmp
into
icebp
idivl
or
in
shl
mov
roll
xor
aam
xlat
shl
cmp
inc
neg
ret
lock
xchg
mov
clc
shr
ljmp
lret
clc
ret
vpandn
test
rcl
mov
iret
lock
out
aam
out
lret
sti
ds
in
and
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
push
push
ret
movq
add
loope
out
xchg
rcl
jmp
ret
hlt
aam
shl
fucomi
cmp
cli
stc
call
enter
test
mov
test
xor
xor
out
fstpt
aad
cmp
cld
iret
hlt
xor
lret
loopne
jmp
iret
loopne
lock
xor
stc
out
aam
hlt
rcl
loop
ret
not
mov
in
cmc
jmp
loopne
in
out
std
test
xor
ds
out
cld
xor
adc
ret
jecxz
rol
int
xchg
hlt
fucomip
xor
repnz
fcmovu
xor
rcl
xor
sbb
cli
stc
stc
jmp
jmp
cs
lock
leave
fsubrp
xlat
cld
ret
xlat
clc
stc
xchg
out
cli
mov
loop
out
int3
test
cmp
call
cmc
clc
in
in
rcr
jecxz
std
call
icebp
out
lret
out
ljmp
cmc
cmp
into
cmp
aad
loop
in
jecxz
fsubrp
jecxz
mov
loope
in
sarb
xor
clc
fstpt
xchg
xlat
cld
int
mov
ficoms
ljmp
cmp
lock
fiadds
ret
ljmp
out
aad
aaa
xor
cmp
mul
icebp
ret
incb
cld
mov
shrb
fdivrs
jmp
in
cld
fdivrp
cmp
ffree
test
mov
nop
lds
xlat
lock
cmp
xlat
shr
iret
loop
into
fdivrp
in
loopne
loopne
fcmove
in
xchg
test
enter
jmp
jmp
in
clc
ret
jmp
mov
loopne
xchg
nop
xchg
stc
ret
fcmovnu
cld
cld
cmp
out
xor
in
test
aas
rorl
int3
jmp
fdivr
out
lock
imul
hlt
int3
rcr
aaa
jmp
shl
or
sti
lret
cli
loopne
addb
xlat
cmp
call
in
lret
repz
std
addb
lret
xchg
repnz
xchg
repnz
int
int3
lret
shl
fdivrs
loop
cli
aas
jecxz
std
ret
inc
aam
out
in
inc
rorb
ljmp
xlat
ds
aam
jmp
icebp
faddp
cmp
fcomip
mov
out
call
xor
jmp
in
sti
ds
lock
test
fcmovbe
lret
int
int3
cli
sub
ffreep
clc
aam
cmp
jmp
int
aad
shl
loopne
xchg
std
lret
fmuls
movb
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
ret
aad
adc
test
jle
jmp
xor
repz
repnz
hlt
repz
repnz
out
mov
lock
out
in
lock
ss
lret
stc
xor
flds
in
loop
mov
test
mov
addb
cmp
fcmovne
cmp
lret
push
xor
rcr
orl
mov
xchg
xor
iret
repnz
test
xlat
repnz
ret
mov
int
repz
rol
ljmp
loopne
int
ftst
out
stc
orl
call
repnz
xor
fstp
fcomi
shr
fcmovu
rol
sti
cmp
fdivr
in
out
jmp
xchg
test
hlt
lret
xor
cmp
ds
aas
xchg
mov
xchg
fmulp
orb
icebp
lret
cmp
int
loope
xlat
out
ret
xchg
in
out
in
repnz
test
rcr
in
out
lret
aaa
xor
xor
jmp
clc
ret
aad
fadds
nop
call
out
out
out
xor
xor
sarb
cmp
idivl
xlat
fcmovnb
cli
lret
out
jmp
loope
mov
jmp
cmp
cmp
sti
div
loope
lock
fcmovb
incb
std
sar
out
repnz
xor
out
fcomi
cmc
sarb
rcr
ror
stc
or
lock
loopne
not
out
xor
cmp
cmp
in
iret
aas
aam
fmulp
enter
incb
mov
xor
repz
shl
int
out
xchg
jmp
out
in
nop
mov
iret
out
shl
in
lret
hlt
fidivrl
sbb
cmp
and
fucom
xlat
sti
xchg
shr
xchg
lea
rol
out
xor
cmp
sar
sbb
rcr
call
mov
dec
fucomi
xchg
lea
lock
aaa
int3
roll
test
test
in
or
out
xchg
loope
stc
iret
ds
loopne
clc
ds
loopne
in
int3
fmull
int3
adcb
ss
div
lock
clc
iret
hlt
loope
loop
mov
loope
pop
cld
jmp
lock
sti
repz
xor
and
not
mov
movb
mov
loopne
fucom
xor
neg
xor
out
call
fadd
testb
mov
ljmp
das
sub
std
fdiv
mov
lea
push
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
push
into
add
jg
test
jle
fidivrs
out
stc
icebp
in
idivl
icebp
ljmp
lock
xchg
shr
jmp
fcmovnb
into
in
icebp
enter
cmp
repz
mov
nop
aas
in
cmp
sti
in
cmc
cmp
in
neg
cmp
rolb
in
jecxz
ficoml
clc
int
lret
jmp
cli
or
ret
testb
mov
xchg
and
rol
clc
xlat
in
in
fxch
cld
cmp
lock
roll
call
in
out
xchg
subb
fcmovne
int
int3
ds
addb
orb
fdiv
lret
loopne
shl
ss
out
fnstenv
add
fadd
clc
faddl
mov
xchg
and
cmc
shr
repz
repnz
std
in
cli
in
sti
loope
fimuls
into
ljmp
jmp
ds
stc
out
repz
in
iret
cld
aad
cmc
in
sub
jecxz
mov
lock
icebp
enter
rcr
xchg
rcr
ljmp
iret
in
loope
test
int3
stc
jmp
ror
hlt
cli
shr
jecxz
xor
enter
shl
aaa
fmul
cmp
cmp
ljmp
test
mov
mov
loop
lret
shl
repnz
cmp
into
xor
shr
lret
aam
std
fnsetpm(287
out
repz
aas
out
nop
stc
xchg
icebp
jmp
out
jecxz
lds
cmp
clc
sub
out
aas
fst
leave
xchg
in
sar
fmull
fcomi
xor
fsubrp
sti
fxam
sub
xchg
stc
filds
in
out
int3
stc
xor
lret
shr
fcos
cmc
xor
rol
clc
faddp
sti
sub
mov
shr
in
out
aas
idivb
in
sar
fadd
aam
neg
in
out
jmp
out
out
out
shll
fbstp
or
out
jecxz
xlat
aad
clc
sti
in
cmp
xchg
jmp
enter
fucomp
out
and
fsubr
test
xlat
cli
out
lret
ljmp
ret
ljmp
jmp
fnstcw
test
lret
shl
cmc
call
call
cmp
repz
icebp
enter
stc
or
out
xchg
icebp
fcmovne
aad
enter
cmc
repz
fisttpl
ret
add
xlat
rcl
rcr
lret
push
cmp
aad
mov
int3
nop
pop
jg
test
jle
loopne
clc
fcos
xchg
fsub
int3
int
xchg
ljmp
clc
xor
idivl
cld
fxch
push
repz
aas
roll
jmp
cli
mov
hlt
in
repnz
into
lock
fpatan
fmul
rcl
fldl
fdivp
call
int
mov
ss
shl
cmc
clc
call
sarl
in
sti
ret
xor
mov
cs
xor
fstpt
test
out
and
fiaddl
jmp
lock
leave
rcr
cld
sti
icebp
aaa
cld
clc
ret
repz
loopne
in
int3
mov
nop
shl
xchg
xchg
out
lret
in
xor
xor
cli
cmp
repz
aam
loopne
std
into
call
mov
out
int3
rcl
les
lret
fsin
aam
aad
aam
repz
aad
in
mov
iret
mov
cmc
adcl
rcl
hlt
clc
sub
xchg
xlat
mov
enter
out
loop
mov
ror
in
out
hlt
aaa
jmp
sarb
ret
cli
repnz
addl
neg
ret
out
lock
iret
iret
cmp
not
fdiv
fucom
ret
fsubp
out
jecxz
test
leave
cmp
int3
cld
idiv
out
clc
lret
rcr
aam
test
cmp
sti
stc
loope
adcl
cmp
aaa
mul
sti
shr
into
out
test
flds
jmp
iret
out
out
loop
enter
int3
fadds
roll
jmp
jmp
call
ret
in
in
xor
ret
jecxz
jecxz
ljmp
addb
ljmp
fsin
hlt
jecxz
xlat
cmp
call
xchg
nop
loope
into
into
loope
in
call
fnstsw
xlat
into
cmc
stc
loop
idiv
call
sti
ror
xchg
sub
cmp
cmp
xor
aam
lock
std
aad
stc
lret
in
in
in
xchg
or
xchg
cmc
sub
aad
aad
jmp
stc
out
lock
out
into
cld
mov
lds
in
ror
shr
ds
fcom
jecxz
clc
icebp
mov
jecxz
stc
sti
test
cmc
out
lock
fdivrs
shr
ljmp
add
aas
faddl
out
loopne
in
hlt
lds
jmp
stc
ds
loopne
addl
andb
and
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
into
cmpb
jg
test
jle
mov
xor
stc
out
into
lret
rcr
sub
cmp
test
rorb
rol
leave
xor
div
cmp
aad
in
out
in
les
jecxz
in
xor
cmp
test
jmp
loope
les
loopne
lret
in
xchg
ljmp
aaa
lds
lret
fucomip
or
fdivr
jmp
out
or
lock
rorl
in
into
enter
cmp
xor
stc
rcl
sarb
mov
ljmp
aam
rol
repz
sar
enter
repz
std
aad
enter
mov
clc
out
enter
int
lret
cld
enter
rcr
ror
jecxz
rol
loopne
test
out
into
sbb
shl
in
std
xor
lret
lock
ret
xor
test
int3
jecxz
loop
loope
icebp
cmp
aad
cmp
idivb
fsubp
fadds
out
in
jecxz
test
in
not
loopne
call
cmp
ret
out
hlt
xlat
shl
loop
incb
test
aad
iret
shl
leave
cmp
out
cld
ret
ret
loopne
loope
cli
call
shl
ljmp
clc
jmp
lret
int3
loope
lock
imul
lret
int
int3
xchg
mov
in
out
rcr
out
ss
shr
fstpt
repz
repnz
decb
jecxz
rcr
aad
cmp
cmp
cmp
int
rol
call
neg
xchg
mov
xchg
icebp
add
icebp
ljmp
cld
cmp
jecxz
mov
jecxz
mov
loopne
xchg
enter
cld
xor
fsubp
faddp
fdivr
idiv
sub
fucomi
loopne
aad
jmp
icebp
lock
fdivp
cmp
orb
out
sti
mov
out
ss
aaa
in
fcmovu
repnz
cli
rol
fcomip
fsubr
incl
mov
xchg
cld
loop
xlat
loopne
int3
ret
repz
jmp
iret
fcmovbe
cmp
test
rcl
fcomip
out
cld
leave
nop
mov
std
adc
lret
shl
stc
ror
in
rcr
cmc
cli
loop
test
shl
test
icebp
loop
out
call
cmc
f2xm1
sar
cmp
test
repz
cli
rcr
loopne
jmp
shl
int3
clc
div
cmp
jne
jmp
enter
rcr
adc
lock
ficompl
test
jle
fdivr
lret
sti
into
xlat
in
cmp
cmp
addb
into
xchg
loope
in
test
ror
aas
aam
loop
rol
lock
fdiv
in
and
in
int3
ljmp
iret
jmp
test
add
fsubr
and
idiv
movl
into
call
rcl
cmp
out
out
fdivr
mov
orl
repz
cli
sti
shl
cmp
out
in
loope
loop
ffree
rcl
jmp
enter
lret
mov
jecxz
jmp
int3
fdiv
lret
call
fdivrp
ret
aas
std
lret
incl
xrelease
jmp
iret
std
test
lock
mov
out
out
shl
mul
rcl
aad
into
in
loop
enter
out
lock
in
out
mov
jmp
test
shl
fsub
repz
les
mov
into
fldl
loop
lds
hlt
shl
stc
sarb
iret
fiadds
xchg
loop
loop
jmp
iret
into
not
icebp
cmp
sarl
fnstsw
cli
orb
enter
cmp
xor
cmp
out
sarl
aad
fucom
jmp
lock
in
xchg
into
loopne
divl
cmp
xor
inc
test
mov
roll
fmul
xchg
nop
out
loope
fsubp
xor
ret
repz
int
into
loopne
sar
lock
in
xchg
into
cld
icebp
xchg
xor
lret
xor
cli
cmp
iret
xor
jecxz
out
and
mov
jmp
shrl
fnstenv
ss
jmp
ret
in
icebp
rolb
cmc
int
cli
cld
mov
iret
mov
enter
clc
leave
out
cmp
sub
ret
enter
and
fcomip
aam
cs
jmp
cmc
stc
cmp
std
loope
cld
fsub
enter
into
xchg
ljmp
xor
int
fmul
std
fmul
jmp
ffreep
loop
jmp
jmp
leave
mov
fimuls
repnz
aad
xor
sti
out
loopne
ret
xchg
cld
addl
bnd
fxch
fdivs
jmp
loope
shl
test
loop
addb
call
out
iret
enter
cmp
iret
loope
in
fcmovnbe
into
aas
mov
xor
add
jmp
rcl
rcl
aad
mov
fidivrl
fimull
add
cmp
incb
xchg
div
xor
rcr
lock
hlt
idivb
jecxz
aad
rcr
in
cli
fcmove
loopne
mov
sub
aad
aaa
repnz
repnz
jmp
jmp
sar
jmp
lret
out
fmul
loopne
mov
ret
xor
fcmovnbe
inc
ret
filds
xchg
test
jecxz
icebp
cmc
cmc
in
sti
sti
divl
fcmovu
into
fcmovnu
fiaddl
cld
jmp
adcl
cmpb
stc
cmp
cmc
xchg
enter
mov
repz
hlt
aad
repnz
jmp
loop
ds
fdivrp
int3
leave
orb
aam
rcl
iret
fdiv
hlt
cmp
jmp
shl
rcr
icebp
cmc
cmp
mov
loope
loope
icebp
xchg
out
hlt
lds
cmp
jecxz
roll
in
in
ljmp
rcr
into
div
shl
int
shr
push
aam
hlt
cli
aam
fmuls
cld
out
loopne
out
xorl
xlat
repz
xor
std
sti
in
and
mov
std
hlt
cli
sub
fucomi
adcl
xor
cmc
sti
enter
ror
rcr
fstp
xchg
not
in
jmp
fldl
icebp
sub
out
cmp
xor
xor
aas
out
sti
fnstsw
fcomi
fimull
ss
xor
ret
lock
clc
rol
in
lea
hlt
mov
loopne
jmp
fnstcw
rcl
lret
icebp
out
in
leave
loopne
call
jmp
nop
lock
in
aaa
out
aad
hlt
xor
in
xlat
faddl
rolb
fsubr
cli
iret
addl
cmp
repz
icebp
ljmp
xchg
mov
cmc
sub
clc
ss
xor
jmp
fildl
mov
test
mov
enter
idivl
jmp
shl
testb
jmp
lret
xchg
out
out
cmp
int3
clc
shl
fsubr
shr
out
xchg
cli
out
loope
cld
in
leave
int
out
sub
in
call
cmp
fidivrl
jmp
mov
jmp
repz
repnz
ss
jmp
int3
sti
ss
and
mov
ljmp
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
loope
lds
hlt
lret
jmp
fld
fnstcw
hlt
cmp
rcr
in
rolb
dec
fmuls
test
ljmp
out
leave
leave
lret
aam
in
ljmp
int3
ret
rorb
icebp
into
aad
in
repz
loopne
ret
out
ffree
xlat
mov
test
jmp
loop
into
in
icebp
aad
repz
rcr
out
icebp
out
hlt
ret
test
repnz
loope
test
int3
in
int
in
in
shr
loopne
xlat
sti
out
fxch
sbb
mov
int3
loop
mov
leave
in
lret
out
repz
fucomip
in
mov
mov
fsubrp
call
jmp
clc
not
int
repnz
in
fcomip
lret
ljmp
out
lock
rcr
test
cmp
aad
call
les
xchg
xchg
test
cmp
neg
ds
ljmp
stc
in
fstp
ffreep
int3
rcr
xchg
shl
cmp
cmp
shl
fdivp
fdivr
cmp
mov
in
call
test
loop
xchg
into
call
std
cmp
loop
std
into
stc
cmc
fdivp
mov
adc
enter
loope
loopne
mov
out
shl
iret
fdivs
iret
std
out
sub
addl
cmp
rcr
dec
hlt
aam
idiv
xor
cmp
cli
adc
loopne
rcr
test
aam
loop
loope
out
mov
jecxz
in
icebp
fcmovbe
cmc
loopne
fstpt
xor
cmp
ret
loope
fimuls
aam
enter
shl
repnz
repz
out
sti
cmp
std
rcr
enter
call
mov
shll
lret
in
cmp
testb
loopne
orb
icebp
mov
into
in
into
aas
cmp
out
iret
les
cmp
fcmovne
out
hlt
nop
loope
das
mov
clc
aaa
cli
cmc
jecxz
stc
xacquire
loop
stc
test
adcl
icebp
iret
sti
in
cmp
rcr
test
cld
rcr
xchg
loop
orl
out
iret
leave
ds
repz
test
fsub
fucom
int
out
adc
repnz
stc
ljmp
rcr
rol
mov
std
icebp
nop
into
fldl
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
inc
mov
aad
and
jle
add
ror
out
in
into
fdivrl
stc
rcr
rolb
lret
mov
mov
or
out
xlat
xor
std
cld
lock
test
xor
fcompp
in
leave
enter
cs
icebp
aad
sub
ds
loope
repz
mov
loop
call
mov
rcr
lret
fcmovu
clc
icebp
cmc
aas
lock
div
test
rcl
mov
int3
jecxz
jmp
lock
ljmp
lock
test
stc
loopne
mov
int
mov
in
enter
rcl
call
cmp
loop
sti
leave
mov
sti
repz
aam
clc
iret
in
in
aam
lret
inc
loope
test
fadd
lret
test
mov
sti
mov
xchg
test
lret
out
fsubr
fldlg2
cmpb
idiv
loope
or
xchg
lock
leave
enter
test
cmc
lds
ss
in
xlat
repz
ffreep
hlt
mov
fcmovnbe
xlat
jecxz
icebp
xchg
lock
xlat
rol
out
loopne
aaa
cld
loop
shl
test
call
mov
cld
shr
in
ret
out
cmp
cld
call
aaa
stc
fdivr
call
repz
ror
jmp
cld
int3
idiv
hlt
xlat
cmp
jmp
roll
loop
out
std
clc
xchg
mov
test
test
cmp
cmp
iret
loope
hlt
cld
out
out
mov
repnz
mov
ljmp
loopne
int3
xor
cmp
cmp
xlat
in
aam
mul
cmp
clc
lret
nop
mov
clc
int3
out
into
in
repz
cld
iret
stc
loopne
test
clc
out
stc
enter
les
jmp
xor
jmp
jmp
sbb
ds
mov
fdivrp
mov
leave
jmp
into
lock
in
xlat
cmp
jmp
inc
rcr
loope
xlat
out
decl
in
int
ss
lock
repz
icebp
fdivr
sar
clc
adc
int3
cmp
ret
orl
loop
fnstcw
rcr
cmp
mov
cmc
rcr
xor
call
ret
shll
stc
rcl
enter
test
xor
aas
clc
fucomip
ljmp
mov
rcl
jmp
loope
cmc
test
out
repnz
incl
icebp
out
in
mul
jmp
cmp
jmp
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
lds
jle
add
aad
aam
clc
cmp
clc
les
xchg
adcb
lret
xor
iret
ds
ret
loop
fcmovnu
leave
out
test
lea
imull
call
sti
cmc
repnz
ret
rol
mov
fimull
call
in
repz
lock
out
and
test
sbb
loopne
mov
faddl
in
in
into
rcl
out
neg
lret
aas
cli
in
lds
ret
mov
lock
out
in
in
enter
cmp
lret
lock
sbb
cld
repnz
mov
xchg
mov
jecxz
cmp
cmp
test
repnz
sar
mov
mov
in
mov
or
loop
icebp
jecxz
jmp
adc
clc
icebp
cli
fcom
lret
fisttpll
in
filds
in
out
fnstenv
leave
aaa
jmp
sti
not
fdiv
fsubrp
incl
shl
pushl
xlat
in
in
shr
fdivrs
fcmovnbe
test
clc
test
or
fsub
clc
loop
lock
aaa
out
sti
idiv
dec
clc
loopne
sbb
cli
test
adcb
out
ljmp
not
test
in
hlt
lret
aam
shr
jmp
mul
lds
leave
leave
stc
out
std
jmp
aad
loope
fisttps
lock
xchg
vpextrw
cs
iret
loopne
jecxz
cmc
in
addl
xchg
test
loopne
out
rol
sarb
cld
repnz
aam
cmc
cmpb
repnz
call
fucomp
xchg
test
int3
ret
hlt
out
enter
lret
fcmovne
cld
shl
decl
imul
mov
mov
nop
xchg
in
aad
xor
aaa
cmp
idivl
in
std
cmp
sarb
incl
test
ret
out
iret
test
loop
xlat
fcmove
cmp
repnz
call
mov
sti
loop
out
mov
repnz
bnd
ljmp
ret
aam
aam
mov
popl
lret
rcr
int3
std
icebp
xlat
cmp
cmp
cmc
shl
bnd
in
ljmp
and
call
lock
leave
ret
aad
repz
mov
loopne
fildl
incl
xor
cmp
aam
cmp
cmp
dec
jmp
test
sub
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
outsb
dec
insb
inc
sub
test
jle
fucompp
nop
rorb
ss
lret
fsubr
int3
out
cmp
clc
flds
xchg
std
shl
out
repnz
xor
xor
fsubr
iret
rcr
fcmovu
jmp
cmc
xlat
xchg
xchg
test
fsqrt
cmp
out
fdivrp
cmp
stc
test
cmc
ds
test
test
loopne
repz
bnd
rcr
fnstcw
cmp
cmp
mov
out
lock
ficoms
xor
ss
fnstsw
iret
cmp
int
aas
into
add
adc
in
cmp
xor
hlt
cmp
fildl
jmp
fisttpll
out
iret
lret
ljmp
cld
lock
rolb
aam
fst
mov
in
cld
xchg
repnz
into
loope
cld
repnz
loopne
fsub
fcmovbe
ds
fdivr
loopne
out
fxch
loop
mov
lret
xchg
ljmp
test
push
in
rcl
stc
test
xchg
out
fiaddl
in
xchg
xor
repnz
repnz
cli
out
fucom
cmc
in
xchg
out
out
leave
into
jmp
call
shrb
cmc
das
enter
jmp
fnstcw
cld
mov
loopne
in
leave
fcmovbe
in
aam
lock
jmp
int3
lret
clc
ret
hlt
idivl
test
sar
xor
xchg
shl
loop
jecxz
cli
cmp
call
fdivrl
loop
ds
mov
xchg
cli
loope
in
fmulp
aam
xor
ror
in
out
repnz
aad
loop
aas
call
cmc
addl
adcl
repz
into
cmp
aam
or
test
ret
xchg
xchg
ljmp
lret
iret
lock
out
jecxz
testb
mov
in
loop
out
int3
out
fcmovnu
sar
loope
fiadds
in
mov
leave
cmp
divl
cmp
out
iret
ffreep
fildl
sti
xlat
xchg
int3
in
xchg
xor
in
repz
mov
aad
icebp
out
fdiv
rol
neg
in
ljmp
loope
test
std
aaa
hlt
loope
fcomip
hlt
ds
call
mul
jmp
bnd
lret
lock
into
in
test
int3
fmul
hlt
loope
clc
ds
lret
clc
or
cmp
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
out
pop
xchg
pusha
sub
jle
add
cmc
cmc
fdivl
xlat
lock
icebp
fcmovbe
cmp
fsubr
fst
clc
aam
filds
mov
icebp
enter
test
cmp
cmp
cmp
enter
call
mov
jmp
leave
int
lock
fcmovbe
repz
cld
enter
sti
lret
lea
out
xlat
cmc
rcr
int3
rol
clc
vcvtpd2dq
repz
lret
mov
in
sti
jmp
into
fcmove
cmp
stc
fnstcw
aas
loope
fcmovb
std
std
loop
call
icebp
mov
mul
in
out
fcom
ret
icebp
iret
in
hlt
test
jmp
jmp
jmp
int3
clc
call
aad
ss
sti
stc
ret
out
out
loop
ret
int
std
in
loop
fdivp
ror
rcr
cmp
out
test
cmpl
in
int
mov
xchg
mov
xchg
xor
repz
call
out
cli
addb
fmul
xchg
int
int
cmp
ss
cmp
fildl
rol
cli
leave
stc
jecxz
stc
mov
or
shl
out
fcom
fdivrp
cli
lock
loopne
inc
addb
mov
iret
xor
xor
rol
aaa
idivb
or
sti
shl
xchg
ret
xlat
lret
shl
shl
ljmp
cld
ljmp
out
sar
shr
mov
loop
fsubr
mov
icebp
mov
into
neg
std
sar
std
std
iret
rol
loope
jecxz
out
fcmovu
cmp
incl
jmp
ret
lock
idiv
shl
mov
stc
imul
sub
mov
fdivr
test
loope
not
ljmp
icebp
cmp
roll
enter
fmul
and
sub
lock
not
sub
fsub
test
rorb
mov
mov
xor
xlat
iret
repz
loopne
test
out
mov
aad
stc
jmp
mov
xchg
addb
xor
in
out
aam
into
cmp
test
repz
fld
int3
mov
test
call
rol
xor
ljmp
ret
fld
lock
jmp
mov
lret
loopne
fmulp
lea
repz
repz
in
cmp
fiadds
xchg
ret
xlat
test
into
sti
cld
leave
lret
aas
rcl
stc
in
cmc
aad
hlt
xorl
add
ret
int3
rcl
ret
fldl
jmp
jle
add
cmp
vshufpd
in
loope
mov
int3
xchg
in
jmp
fsubr
lock
in
jecxz
loope
cmc
shr
leave
fyl2xp1
leave
nop
call
xchg
clc
fmul
sti
div
out
cli
cmp
xlat
into
in
cmp
not
mul
int
call
int
shr
divl
ret
ror
cld
cmp
cmc
lock
mov
cmc
out
out
rorl
int3
lret
in
int
fdivp
into
std
fnstenv
shl
out
sti
aad
ds
jecxz
fadds
shl
out
ljmp
loope
int
and
out
in
clc
into
shl
xchg
lret
xchg
call
xor
rcl
jecxz
fcmovnbe
icebp
clc
repz
mul
or
cmc
lea
iret
aaa
xor
repnz
ret
cmp
fistpll
lret
out
enter
in
xor
shl
clc
hlt
rcr
cmp
stc
cli
aas
addl
xlat
fisttpl
in
xor
out
vpmuludq
jmp
xor
rcr
loop
jmp
cmp
shr
repz
jmp
icebp
in
repz
lret
in
loope
fucomp
jecxz
fadd
xchg
out
add
mov
lret
cmp
icebp
std
sar
lock
jmp
out
out
repnz
cld
aam
mov
int
jmp
hlt
testb
icebp
aaa
iret
jmp
idiv
cmp
repnz
shl
aad
fcmovb
loop
decb
sub
enter
div
loop
fdivr
test
call
test
int3
xchg
out
aad
xor
cmp
std
int3
loop
movb
in
in
repnz
xchg
fdivs
fcmovu
cmp
cmp
std
fldl
rorb
fildl
out
hlt
xor
fcmovnbe
not
aas
divb
loop
in
loope
cli
ret
mov
xchg
test
fsub
out
shr
jecxz
in
in
sub
out
leave
stc
sbb
sarb
fprem1
and
out
cld
fsubp
iret
rcll
sub
leave
xor
enter
stc
cmp
cmp
sar
mov
xchg
xchg
xchg
aad
cmc
stc
loop
icebp
xor
aaa
fcomip
fdiv
cmp
test
ds
std
cmc
lret
xchg
popl
aaa
repnz
iret
leave
in
fcom
in
cld
incb
xchg
testl
xlat
out
out
call
ror
div
movl
add
fadd
aam
fst
fcoms
sbb
jg
and
insb
xor
jg
test
jle
ret
loopne
and
xchg
enter
call
repz
loope
test
lock
cmc
jmp
in
fsubr
fadds
fdivrp
ret
or
hlt
fcmovnu
fmul
loop
out
in
mov
rol
clc
jmp
int
fcmove
jmp
cld
in
cmp
cli
enter
fisttps
call
aaa
jmp
ror
aaa
repnz
or
stc
in
jmp
lret
lock
lret
xor
enter
idivb
out
fbstp
call
aad
cli
cli
xchg
jecxz
out
fiadds
test
ffreep
mov
call
std
xchg
out
ljmp
into
shrl
cli
xor
cmp
repz
mov
in
fcmove
jmp
nop
lds
out
div
cmp
int3
out
xor
sti
incb
mov
out
iret
out
repnz
fidivl
aad
in
add
xlat
fadds
mov
jmp
xchg
ftst
cli
lret
das
aad
test
repz
out
aaa
roll
cli
fimull
jecxz
aad
fcmove
lret
iret
icebp
xlat
cmpl
lret
hlt
in
ftst
rcr
jmp
jmp
lret
fdivl
std
fidivrl
ror
test
loope
cmp
fildl
filds
aaa
not
rcl
cld
out
cmc
div
not
std
hlt
div
loope
movb
orb
xlat
repz
sti
in
jmp
rcl
fcomp
loopne
cld
cmc
fsubp
loop
out
std
out
xchg
repz
lock
out
ss
fildl
fdivr
in
orb
hlt
icebp
xor
xor
in
cld
repz
repnz
std
loope
jmp
in
test
ljmp
out
in
lret
cmp
xor
fidivrs
cmp
out
jecxz
mov
sbb
repz
mov
sar
fpatan
cmp
out
stc
enter
cmp
faddp
sti
sub
nop
out
test
xchg
xchg
iret
in
xor
int
fidivrs
call
fadd
cld
icebp
ret
mov
orb
ret
cmc
xor
ljmp
jecxz
loope
aad
mov
repz
into
aaa
stc
lret
out
cmp
test
loopne
repz
enter
ror
iret
loop
pop
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
sub
jle
add
lret
sti
shr
cmp
out
aas
rcl
shl
std
loop
fneni(8087
in
xchg
icebp
out
ror
imul
lret
aad
hlt
repnz
std
fldlg2
clc
cmp
cmc
cld
xchg
shl
dec
fisttps
xchg
in
jmp
sub
into
int3
lret
ljmp
test
cmp
fcmovu
lret
iret
mov
in
enter
shll
lret
lock
adc
fnsetpm(287
fsub
jecxz
fmuls
rorl
xor
in
fadd
rcr
div
cmp
cmp
cmc
aad
xchg
mov
test
lret
lret
in
xor
cmc
lret
cmp
into
cli
sti
fcmovu
out
mov
cmp
mov
out
idivb
aad
leave
cmp
call
ds
out
in
rol
ljmp
fnstcw
cli
rcr
cmc
call
call
addb
icebp
imulb
imul
hlt
out
repnz
cmp
aad
addl
out
fucomp
ljmp
aaa
icebp
out
lock
cmp
cmp
ret
cli
in
enter
mov
cmp
repnz
ror
loop
shl
xor
xchg
loope
enter
xchg
into
xchg
shl
shll
div
neg
xor
cmp
jmp
lret
ret
out
fcomip
in
lret
sub
div
stc
out
aas
aas
repz
mov
and
mov
and
ss
in
cmc
rolb
aam
cli
inc
out
loopne
cli
sub
fst
lret
ret
aaa
lock
cmp
fiadds
movb
fxch
leave
jmp
repnz
vpsubb
cmp
loopne
std
std
call
ffree
aam
test
call
in
in
call
addl
movl
mov
mul
jmp
repnz
sti
out
aam
cmc
mov
clc
sti
mov
xchg
in
jmp
out
shll
cmp
into
out
loope
aaa
ret
ret
mov
in
stc
jecxz
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
xchg
adc
aaa
jg
fiaddl
jle
repz
in
aaa
ret
ss
in
aad
hlt
sar
and
vpsubusb
std
mov
enter
lret
mov
out
aam
xlat
icebp
sti
into
in
fmul
ss
xor
jmp
lock
leave
in
shr
iret
lret
out
repz
fucom
cmc
xrelease
mov
movl
mov
cmc
int3
iret
int3
idiv
clc
ds
iret
ret
test
sbb
inc
jmp
mov
xchg
hlt
rcl
rcl
cmp
ds
cmp
std
cli
sarb
xchg
out
ret
out
lock
xor
rcl
cld
leave
faddp
in
fmulp
lret
out
std
in
int
out
jmp
in
xor
iret
lret
idivl
into
test
int3
neg
mov
xchg
iret
call
clc
sub
loopne
cmp
hlt
adc
cmc
rorl
xchg
mov
fdiv
ljmp
cmpb
jmp
xchg
out
in
in
repnz
jmp
std
cmp
loopne
repnz
rcr
lret
addl
nop
jmp
xor
xor
cli
stc
sar
fimull
fucomip
filds
xchg
shl
cmp
cmc
out
cld
fucomip
cmc
fcmovnu
clc
fprem
leave
jmp
jmp
fcmovu
movl
jmp
lds
cmp
cld
in
cld
fucom
repnz
xlat
xlat
shr
lea
out
hlt
xor
xor
out
roll
aas
loopne
in
mov
call
roll
hlt
cmp
fsubr
fistpll
fcomp
cmp
call
lret
int
lret
xchg
xchg
hlt
in
xor
fldlg2
xor
lret
cli
shr
aam
roll
jmp
mov
ret
out
hlt
fcomi
xor
cmp
cmp
xlat
mov
mov
xchg
sub
leave
out
xor
icebp
iret
cli
fcmovne
out
repz
lret
in
nop
xchg
int
loop
xchg
into
rol
enter
cmp
shl
cmp
aam
in
jmp
and
loopne
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
jge
ret
jg
fiaddl
jle
dec
out
xchg
mov
xor
neg
rcr
fsubr
ljmp
sbb
fcmovnb
test
xchg
mov
test
out
ss
xorb
into
out
fcom
cli
mov
std
fdivrp
in
leave
in
mov
aam
ror
xor
div
enter
xor
ret
in
hlt
std
xlat
nop
sar
test
out
jmp
cmc
int
std
iret
fdivrl
repz
cmc
in
ret
mov
lret
jecxz
xchg
xchg
aam
vpsubq
xor
addl
out
test
sar
in
int3
mov
jmp
stc
int
lret
aas
fnstsw
shr
hlt
sar
fadds
sub
sti
addl
jecxz
into
xor
hlt
lret
ror
rcr
call
fcmovnu
fdiv
fcmovnbe
out
imulb
xor
out
jmp
idivl
repz
add
testl
mov
shrb
shll
cmp
cmp
fcom
stc
fdivrl
stc
jmp
orb
aaa
cmc
fcmovu
stc
in
lock
clc
cli
int
ret
aas
test
adc
in
iret
in
int
jecxz
fdiv
aaa
lock
fnstsw
shl
cmp
fucom
hlt
test
in
loope
xor
into
rol
cmp
cmp
sti
call
cmp
icebp
les
jecxz
test
loop
repnz
out
cmp
repnz
in
fnstsw
sub
loop
out
loopne
lock
out
clc
out
lret
xor
leave
repz
iret
lock
vshufps
jmp
xchg
loop
out
xlat
enter
cmp
ret
aas
mov
repnz
jmp
mov
test
into
int
mov
jmp
lock
in
stc
xor
jecxz
hlt
xchg
aam
cmp
icebp
loope
out
xchg
mov
aam
xor
xor
lret
loopne
out
lock
hlt
stc
loopne
jmp
into
fsubr
mov
aas
int3
loop
jecxz
aad
shl
loop
mul
int
rol
fcomi
ds
xchg
leave
loop
faddp
leave
xlat
int
stc
enter
in
cld
cmp
repz
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
testb
aaa
jb
jg
fiaddl
jle
jmp
mov
xchg
fucom
out
lret
out
int
sti
shlb
sti
sar
and
jmp
out
out
icebp
loop
fcmovnbe
int
lret
fcom
stc
cli
out
rcl
test
call
rorl
sub
xor
neg
not
into
fcmovnb
stc
iret
mov
cmp
jmp
std
decl
jmp
cmp
leave
fdivrp
std
cmpl
clc
out
call
jmp
rolb
cmp
cmp
sarb
iret
loope
cld
fdiv
call
hlt
in
movl
lret
ror
repz
into
rcr
std
fcomp
not
icebp
xor
jmp
jmp
mov
xor
int3
in
cmp
and
cmp
into
out
in
out
test
jecxz
jecxz
iret
shl
in
rol
in
fsubp
in
loopne
into
fidivrs
loope
xlat
fcmovbe
out
fisttps
out
aad
out
fstpt
imul
cmp
aam
fdivr
cmp
and
ljmp
in
loop
iret
stc
std
ret
std
jmp
nop
out
mov
xor
jecxz
lret
call
ret
lock
jecxz
xor
lock
repz
call
repz
xor
in
cld
lret
cmp
int
cmp
fdivrs
jmp
cld
lret
std
xchg
ljmp
sarl
shl
fstpt
in
cmp
nop
dec
ror
xchg
icebp
iret
cmp
int
int3
iret
loopne
cmc
adc
sti
xlat
fucomi
mov
loop
out
dec
cld
std
rolb
int3
fcom
sarb
jmp
faddp
ror
loope
ret
jmp
fsub
icebp
into
aam
fyl2x
aam
cmp
int3
lret
fsubr
xor
mov
fucom
fimull
int
call
enter
xlat
shr
aaa
rol
fdiv
in
out
loope
lock
iret
sti
clc
lret
repnz
aas
repz
orl
or
in
cld
icebp
cmc
out
fdivs
aad
aad
sti
cmp
cmp
cli
rol
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
jg
fiaddl
jle
mov
rcr
fadd
aad
xchg
xchg
xor
xor
out
xlat
cmp
in
xor
fsubp
cmc
sub
fsub
sti
frstpm(287
adcl
out
enter
cmp
cmc
mov
cld
int3
fcmovnu
mov
add
cmp
out
in
xor
repz
fcomp
aad
roll
xchg
in
in
cli
int3
fsub
aam
icebp
hlt
shl
cmp
stc
jmp
clc
test
mov
jmp
enter
sar
cmp
jecxz
sti
iret
test
enter
mov
lds
testb
out
ljmp
incl
stc
leave
faddl
fsubrp
jmp
out
out
cmp
aam
in
loope
test
aas
orb
mov
into
ror
jmp
imul
xor
icebp
vpsllw
hlt
int3
xor
loopne
fisttpl
shrb
out
cmc
fidivl
repnz
iret
out
sar
addb
fcoml
in
fsubr
sti
fcmovnbe
out
lock
into
sbb
icebp
sti
ret
jecxz
jmp
xchg
loopne
int3
shl
out
fstp
sti
out
rcr
cmp
xor
in
sti
cli
loop
repnz
iret
in
call
leave
out
ss
out
clc
fiadds
in
std
out
loopne
lret
test
cld
in
loopne
into
sarl
rcl
jmp
lock
xchg
ljmp
ss
cmc
cmp
std
repnz
cmc
enter
in
imul
int3
stc
xchg
xor
cmp
cld
stc
fidivrs
cmc
jecxz
fadd
out
in
std
lret
hlt
int3
into
out
clc
jmp
cmp
aaa
aad
aas
int
xlat
loop
adc
in
fsubr
mov
into
test
aam
sub
sarb
fdivr
hlt
loop
fcmovnu
out
call
icebp
cli
jmp
repz
idiv
shl
in
rolb
ret
xrelease
fsub
sti
sar
shl
enter
rcl
lret
rcr
inc
inc
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
xchg
stos
sarb
add
out
inc
cmc
cli
and
jecxz
std
jmp
and
mov
xchg
cmc
xor
hlt
aam
hlt
cmp
out
testb
ret
enter
call
stc
sub
ljmp
lret
fnstcw
stc
fadds
xchg
sub
leave
in
hlt
xor
xor
ror
idiv
jmp
sub
in
and
loope
rcl
xchg
mov
in
out
int
rcr
adc
xchg
loop
sti
out
test
out
icebp
ror
jmp
xor
rcl
xlat
hlt
aad
in
in
mov
in
lret
lock
xchg
in
test
les
cli
or
int3
fstpt
incb
orl
call
xor
ret
aaa
das
ljmp
cmp
fcomp
repnz
jmp
ljmp
icebp
loop
out
ss
call
lock
int
ffreep
shl
shr
in
test
call
clc
lock
out
xor
fld
loopne
repnz
call
icebp
in
shl
mov
fcmovne
neg
iret
cmp
icebp
cmp
faddp
leave
test
shr
xchg
out
lret
xor
fcomi
loopne
clc
stc
aad
ds
fadds
jmp
lret
mov
ljmp
enter
fstpt
rol
cli
cld
in
filds
ljmp
test
jmp
in
call
inc
jecxz
cmc
jecxz
neg
lret
call
xchg
xchg
int
cmp
not
into
jmp
and
fistpll
loop
ljmp
sti
jmp
xchg
ljmp
lock
cmc
hlt
aam
jecxz
inc
xchg
loop
mov
in
into
repnz
sub
loop
sti
in
aad
clc
cmp
xlat
cmc
out
aad
sti
cld
or
ljmp
aaa
in
shl
in
aad
shl
rcr
xlat
sar
aam
cli
mov
adc
aad
int
shl
out
lret
int3
cmc
hlt
sarb
fldl
loopne
sti
clc
mov
das
xor
roll
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
cmp
fiaddl
jle
int3
out
sarl
jmp
ffree
out
rolb
mov
out
into
lret
out
mov
xor
ror
ljmp
mul
aad
mov
in
mov
mov
xor
xlat
cli
lock
cmpb
loop
roll
out
loopne
xchg
int3
shl
ljmp
fucomp
stc
clc
shl
xchg
mov
out
xlat
mov
std
addl
fcmovnu
ljmp
out
loop
add
std
mov
loop
in
jecxz
nop
hlt
in
fcomi
stc
fsubr
hlt
iret
stc
aam
into
loopne
rcr
clc
stc
addl
into
aam
in
div
xor
jecxz
fcomip
call
leave
mov
fmuls
mov
xlat
clc
ror
xor
not
loope
sarb
loopne
sar
add
out
xchg
in
int
hlt
out
repz
ds
roll
out
out
out
in
fisttpll
lret
repnz
out
dec
loope
lds
test
fmulp
cli
mov
loope
xor
lret
icebp
cmc
cli
aam
loope
icebp
idivl
aam
fcomip
cmc
sbb
xchg
test
sub
fcmovnu
fistpll
in
into
iret
stc
cld
std
test
out
int
xchg
xor
fisubrl
fld
shl
jmp
incl
xchg
in
xchg
in
loopne
lret
shr
jmp
shll
repnz
sti
fcmovnu
out
fucompp
sti
sar
xchg
enter
fucomip
out
repz
icebp
in
ss
stc
cmpl
xlat
loopne
rcl
leave
mov
icebp
test
lret
mov
rcl
int3
hlt
out
ds
loopne
cmp
cli
fnstcw
aad
mov
fcmovb
xlat
icebp
loopne
into
test
test
aad
ss
xor
shl
hlt
ret
xlat
xlat
loopne
aad
jecxz
jmp
test
int
xlat
ret
divl
int3
cmp
fdiv
clc
cld
aam
in
loopne
xlat
std
sti
test
incl
jmp
rcl
ss
sar
loopne
jecxz
mov
ret
out
int3
mov
xchg
shl
leave
hlt
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
pusha
popa
enter
jg
fiaddl
jle
cmc
lret
ljmp
iret
jecxz
aad
fimull
xchg
mov
icebp
call
shll
loope
loopne
fcmovnu
fcomip
sarl
ror
out
adc
loop
loope
xor
fcomp
out
test
rcr
sbb
loopne
cld
mov
loope
test
in
iret
into
aaa
das
aad
in
std
repz
cld
cli
in
out
loopne
das
sti
clc
cmp
fmul
not
cli
cmp
jmp
test
enter
sbb
incl
int3
jmp
cmp
aad
shr
aad
mov
lret
test
mov
out
xchg
lock
cmp
cmp
in
xchg
loop
flds
xchg
into
in
aam
int3
ret
jecxz
hlt
stc
not
cmp
repz
cmp
cmp
icebp
test
xchg
call
jecxz
sarb
repz
icebp
stc
aas
aam
rolb
mov
ljmp
repz
aam
cmp
idiv
stc
cmp
cmp
test
xchg
mov
out
int3
iret
mov
fimull
lret
xor
jmp
fsincos
fcomp
xlat
repz
bnd
in
mov
cli
stc
fsubrp
shl
xchg
xor
xor
aam
xor
cmp
iret
loop
ror
loopne
fsub
xlat
fmulp
or
iret
std
adcl
aam
idiv
sti
stc
lret
addl
lret
mov
in
ljmp
cld
in
cld
test
repnz
mov
movl
in
aaa
cmp
cmc
int
or
repz
cli
rorb
test
mov
sbb
fmulp
subb
xor
fstpt
clc
fcomip
fnstsw
cld
fiadds
les
fimuls
out
ljmp
in
cmp
repnz
out
fimuls
mov
cli
xor
cmc
xlat
int3
cli
lret
repnz
aaa
std
rorl
aas
stc
cmp
ljmp
out
in
in
sti
icebp
cmp
fcmovnb
cmp
loopne
repnz
loopne
jmp
ljmp
xor
add
add
sbb
add
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
pop
test
mov
add
ss
lret
jmp
idivb
fnstsw
add
enter
in
fcomip
das
clc
xor
clc
into
sti
shl
inc
ds
xlat
incl
fcoml
xor
in
lret
repz
fcmovne
cmp
cmp
cmp
xlat
xor
mov
out
not
cli
cli
in
out
repz
lock
fcos
shl
ret
in
mov
mov
in
xor
xor
sub
fdivrp
or
out
lock
xchg
loopne
ljmp
mov
out
leave
out
xor
cmp
std
cld
cli
shl
out
aad
test
jmp
out
hlt
loopne
sub
cmp
out
out
cmp
out
cmc
xchg
aam
icebp
aam
xchg
out
fmuls
test
repz
xor
jmp
cli
sarl
fcmovb
in
mov
lret
rcr
jmp
rol
jecxz
ljmp
iret
in
test
rol
cld
faddl
in
out
into
loope
fdivrs
call
std
ds
ffreep
std
ret
in
rcr
ret
mov
out
lock
in
xor
lret
xor
aad
xor
rcl
hlt
not
xchg
cld
test
out
fdivrp
hlt
mov
xor
xlat
jmp
ret
xlat
not
loope
lret
test
out
test
clc
cmp
aad
out
enter
mul
out
fiadds
in
loop
fsub
sti
shl
fimuls
ljmp
lock
out
std
xlat
fsubr
fldl
call
fcmovnb
jmp
jmp
idivl
out
inc
ffreep
add
fisttpll
rcr
ljmp
iret
out
lret
jmp
clc
out
fisttpl
in
repnz
out
nop
lret
hlt
clc
lock
out
sarb
cmp
aas
test
aas
sub
in
leave
loopne
cli
repnz
std
into
mov
stc
fmul
xor
cmp
hlt
std
loope
loopne
aas
decb
int3
out
nop
xchg
fucomp
shrl
cmp
aam
hlt
cmp
clc
xlat
in
stc
in
ljmp
jge
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
popf
xchg
std
mov
fiaddl
jle
shl
shl
sub
jecxz
clc
aad
fcompp
icebp
jmp
test
hlt
out
fldl
mov
mov
out
xor
divl
clc
xor
hlt
in
adc
jmp
cld
orb
xor
loop
out
out
lret
cmp
lret
in
test
aam
fcom
int3
in
adc
cld
loopne
into
ret
cs
in
xor
lret
icebp
test
ljmp
mov
fldl
iret
icebp
stc
shr
cmp
cmp
lret
out
ret
xchg
mov
decb
xchg
loop
clc
leave
in
out
std
aam
aas
cmc
cmp
fdivrp
cmc
ret
testl
fsubr
lds
aaa
ss
test
cmp
shl
sar
out
out
ljmp
ljmp
out
aad
test
idiv
cmp
incb
fcmovnb
lret
fsub
lret
loopne
sbb
out
shr
xlat
ror
roll
fcomip
in
idiv
fmuls
out
add
loop
aad
call
cmp
fdivrp
lret
cld
lea
sub
sti
enter
cli
cmp
cld
cli
mul
enter
sub
mov
rolb
cld
rcr
aad
enter
fcmovnbe
faddl
testl
call
aaa
repnz
rcl
cmp
in
cli
mov
xchg
lock
hlt
mov
xlat
repnz
ss
into
cld
loope
cmp
cmp
out
stc
call
call
jmp
cmp
cmp
cmp
int
cmp
ffree
lret
out
enter
int
int
into
iret
aam
ss
xor
adc
fdiv
cmp
ljmp
xchg
in
in
out
call
sbb
ret
cmp
cmp
mov
out
shr
div
sar
xor
repz
rol
test
fadd
in
mov
in
repnz
ror
int
jmp
ret
roll
addb
movl
jmp
rcl
ret
fucomp
insb
fstps
adc
jg
fiaddl
jle
cli
rclb
in
aam
int
int3
cmp
aam
into
div
out
adc
fprem1
mov
fimuls
hlt
loop
out
stc
jmp
icebp
loop
into
aad
std
hlt
ljmp
popl
ret
repz
loope
rol
ret
rorl
cld
nop
mov
rorl
in
ss
rcr
lret
loopne
xor
loope
fmuls
int3
test
lea
xlat
loop
fsubr
out
xor
cmp
out
cmp
fst
cld
aas
cli
int3
xchg
in
mov
subb
lock
aam
std
lret
sti
out
out
rcl
sbb
xlat
jmp
fmul
repnz
in
out
icebp
in
idivl
rcr
out
out
clc
jmp
icebp
nop
fistl
cmp
clc
aam
not
ljmp
loop
mov
loopne
fiadds
shlb
lret
call
fdecstp
fstpt
cli
jecxz
fisttpll
in
in
cmp
aad
aas
std
jecxz
in
sub
test
stc
sti
call
mov
xlat
out
cmp
ljmp
ds
and
xlat
sti
ljmp
popl
icebp
out
shll
fmul
sti
jmp
ftst
cmpb
cmc
decb
aad
stc
int3
jmp
rcr
shl
jmp
faddl
movl
divb
aaa
xor
sar
dec
stc
fcomip
cld
fiaddl
leave
leave
jecxz
into
mov
nop
int
ror
icebp
not
cld
out
out
loope
stc
aam
rol
rcr
int
loope
lret
lock
cmp
aas
jmp
cld
xlat
in
rcr
out
imul
xchg
fdivr
jmp
fsubrp
std
fcom
icebp
in
ss
fcomp
aam
ds
loop
aas
xor
fadds
decb
icebp
out
repnz
fdiv
int3
xbegin
icebp
repnz
std
test
lret
fcmovnu
addl
xchg
cs
out
rcr
sarb
fstpt
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
incb
xchg
call
into
enter
xlat
cmp
call
stc
in
testb
inc
xchg
xchg
repnz
jmp
cmp
cmp
loopne
sti
incb
cmc
mov
ljmp
jmp
jmp
int3
int
fnsetpm(287
fiadds
fxch
lret
mov
das
shl
iret
cmp
cmp
xor
aad
shl
hlt
test
ljmp
lock
in
out
into
jmp
fcmovnbe
ret
std
ret
repnz
aam
aam
sti
in
in
leave
xchg
xlat
out
lock
cmp
cmp
loop
repnz
jecxz
in
loopne
sar
xor
lret
in
test
fdivr
repz
out
test
fucomip
stc
cld
aam
mov
fstp
loope
mov
fmul
test
lock
ljmp
shl
in
fcom
test
mov
ljmp
xor
xor
iret
ljmp
cmp
in
rcr
sar
xchg
stc
out
in
cli
fsubrp
in
in
in
cmp
hlt
xlat
ljmp
ror
test
fdivr
aad
loope
incl
fdivp
shll
rcl
int
cmp
fincstp
rcl
sarb
enter
xchg
out
out
div
lds
cmp
xor
cli
sub
bnd
in
jecxz
addl
repz
loope
aas
out
aad
hlt
jmp
cld
clc
aaa
jmp
icebp
aaa
fdivrp
mov
aam
jecxz
fldl
enter
enter
jmp
into
cmp
cld
fscale
std
jmp
jmp
xchg
out
in
shl
cmp
cmp
cmp
lock
into
fnsetpm(287
addl
repz
cmp
clc
cmp
in
ret
xlat
loopne
lret
xchg
enter
ror
out
ljmp
icebp
addb
in
jmp
fdivp
cld
shl
xchg
aam
hlt
int
not
rcr
ljmp
rolb
jecxz
cmp
loopne
loope
lret
loop
shl
cmp
cmp
cmc
icebp
shl
clc
mov
add
jmp
rcl
aad
loop
pop
sbb
repz
jle
add
lret
mov
repz
lock
repz
cli
cli
fmulp
stc
adc
cli
div
aas
loop
leave
jmp
fucom
mov
loop
loope
in
clc
repz
rol
fadds
div
repz
call
xchg
jecxz
into
aad
cmp
ret
div
sti
aam
fcmovu
cli
fdivr
sbb
rol
clc
std
xchg
xchg
das
jmp
out
icebp
not
aas
xor
vpsrld
xlat
mov
call
mov
xor
cld
clc
fcmovne
xor
iret
int3
repz
rcl
les
cld
icebp
mov
mov
fsqrt
cmp
cs
fstp
loopne
stc
faddp
cmp
xchg
int
std
test
xchg
ret
xor
loope
shl
aam
stc
fisttps
sub
jecxz
out
les
fld
cs
cld
shl
shr
fcmovnbe
clc
imul
stc
mov
xor
int
fdiv
repz
hlt
out
in
shl
jmp
in
mov
shl
cmc
int3
hlt
ret
cmp
cmp
leave
loop
sarl
ret
call
out
into
fiaddl
rcl
shl
rcl
fsubr
call
cmp
repz
jmp
jmp
loope
lret
test
xor
sub
xor
cmp
jecxz
or
loopne
std
mov
fildl
mov
jecxz
stc
out
fadds
cmp
fdivr
int3
loopne
lret
sti
cld
out
xchg
enter
shl
lds
leave
lock
lock
aam
ftst
loope
repnz
mov
xor
clc
in
clc
out
leave
fdivr
add
xlat
mov
mov
mov
xchg
shll
xor
lret
rcl
icebp
loopne
in
fdivp
fcmovnbe
rorb
lret
ljmp
in
shl
sti
repnz
idiv
clc
out
fucomp
out
dec
jmp
xchg
icebp
int
cmp
out
hlt
idiv
shl
ret
loopne
rol
ljmp
in
iret
lock
xchg
rcl
ret
fcomi
cmc
out
rcl
orl
jbe
add
je
add
enter
fstp
int
inc
dec
and
add
jle
add
aas
add
rcr
in
in
int3
jmp
mov
int
cmp
repnz
cli
fdiv
aad
neg
xchg
mov
shl
test
in
cmc
xor
clc
in
loop
cmp
jecxz
cmp
stc
jmp
fiaddl
xor
shl
sti
cmc
rcl
cmp
xchg
test
jmp
test
mov
leave
sarb
repz
cmc
repnz
stc
ss
in
xchg
fmuls
fisttpll
out
lock
enter
shr
sbb
ret
call
mov
xchg
std
in
rol
aaa
xor
cmp
test
in
out
aas
repz
sub
xchg
fsubr
repz
test
fnstenv
shr
fsubr
xor
in
cmc
repz
out
add
shl
xor
xor
cli
cmp
cli
rcl
in
hlt
mov
lret
mov
lret
into
nop
sar
enter
jmp
jmp
ss
lret
fxch
loope
test
rcl
stc
enter
sti
sti
fiadds
das
xor
cmp
out
out
repnz
out
cmp
repnz
out
clc
idiv
call
xchg
mov
xchg
shl
ss
imull
lret
ljmp
fucompp
clc
std
cli
cmc
fsubrp
loop
test
int
cli
cmp
int
enter
cmp
test
shl
rcl
aam
cld
clc
adcl
call
in
dec
cmp
cld
into
lock
flds
out
sbb
out
in
mov
clc
rcr
fmul
repz
cmc
or
test
movl
mov
adc
shll
cmc
out
hlt
lret
fcomip
aaa
xchg
call
in
mov
lea
fsub
lock
cmp
cmp
cmp
iret
or
fcmovnbe
fcmovne
incl
hlt
out
cmc
fidivl
fstpt
roll
test
lret
stc
fninit
xchg
in
in
loop
xor
xor
out
loop
fcmovnb
loop
clc
lret
mov
test
fiadds
shll
in
ss
out
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
fsubr
movsl
data16
jle
add
cmp
cmpb
fmul
sbb
fstp
mov
lret
repnz
xor
icebp
int3
test
add
xchg
into
out
into
hlt
fmulp
xor
sub
lret
ds
cmp
aas
aad
call
lret
dec
lret
icebp
nop
out
cmc
xor
cmp
cli
cmp
repz
ret
cmc
in
add
loopne
jmp
mov
into
xor
xor
imulb
xor
cmp
int
xchg
xlat
loopne
fldl
mov
mov
rcl
not
aam
jmp
out
cli
fucom
fsub
addl
rolb
cmp
in
clc
dec
cmp
in
shl
cmpb
aam
lret
jecxz
xchg
xchg
ljmp
icebp
call
into
add
decl
test
and
out
out
lret
cmp
stc
enter
repz
xor
roll
into
sbb
cmc
jmp
repnz
fcmovne
shr
aad
vpsllw
mov
fimull
repnz
jmp
xor
in
in
adc
clc
fcmove
xchg
orl
xor
cmp
cld
stc
fnsave
cmp
in
cld
loop
mov
ret
rclb
lret
sarb
iret
filds
cli
ret
testl
mov
ljmp
fstpt
jmp
sub
in
aad
and
test
in
nop
in
out
out
jmp
ror
int
in
fxch
out
int
ss
xlat
ds
in
cmp
in
xor
into
cmp
neg
clc
lret
sar
rol
clc
shl
cmp
lret
stc
shl
loop
rcl
rol
cli
out
ljmp
int
sti
aad
shl
out
fsubr
mov
fsubp
mov
adcb
xor
sti
cld
aam
imul
cmp
idivb
int
xchg
out
xchg
rol
fcom
cmp
xor
idiv
shl
cmp
sti
ret
shl
call
ljmp
out
out
xor
xor
xorl
xor
jmp
aam
mov
int
rol
repnz
rorl
lods
ret
jle
add
neg
das
aaa
loopne
shr
cmp
lock
icebp
ljmp
jmp
adc
mov
int3
in
ror
jmp
stc
fldln2
xor
mov
aad
in
addl
sub
fcmove
ljmp
xlat
rcr
cmp
rcl
enter
xchg
ss
fcomp
lock
fcmovnu
out
div
out
add
dec
loop
mov
mov
xchg
xor
in
loop
fprem1
std
out
xor
aaa
lock
filds
repnz
sub
int3
lock
icebp
jecxz
test
cld
incb
mov
int
jecxz
iret
aam
jmp
shr
lret
sar
cmp
lret
aas
out
leave
sti
out
in
repz
mov
hlt
cmp
sti
fprem
repz
loop
repz
std
in
faddp
jmp
test
ret
int3
xor
int
shlb
out
cmc
xor
fiaddl
incl
xchg
mov
cmc
xchg
in
repz
rol
int
sarb
cmp
fucomip
aam
fcmovnb
fadd
mov
call
nop
mov
aam
out
xor
lret
cmp
xlat
xlat
cmp
jmp
add
cli
cli
out
int
nop
lock
mov
aad
in
lret
adc
repnz
clc
cmc
lret
in
loopne
out
call
jmp
call
out
call
stc
aad
ret
clc
aad
cld
lds
std
fcomip
xor
lock
into
cmp
loope,pt
clc
iret
test
repz
cli
fmul
out
xchg
shl
xchg
jmp
icebp
out
int
out
loope
cmc
div
shl
div
shl
lds
mov
hlt
xor
sar
sub
fsubr
stc
aas
fsub
clc
leave
mov
vpsubw
mov
iret
cmc
out
iret
das
ljmp
cmp
cmp
imul
clc
loope
ror
fucom
sar
ljmp
sti
aam
sti
out
shl
into
repz
aam
fsubr
std
std
int
xchg
mov
loope
inc
fadd
sarb
hlt
jmp
push
cmp
aad
cmc
cmp
in
lret
mov
sti
lock
in
lock
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
and
mov
fiaddl
jle
lret
enter
icebp
in
icebp
aam
aas
fdivp
ds
fmuls
faddl
shl
out
lock
iret
repnz
testb
jmp
sti
cmp
test
imul
das
shl
clc
jmp
cmp
fcomp
out
neg
ljmp
lock
loop
mov
hlt
xor
cld
in
repnz
iret
loope
cmc
fadds
int
out
xchg
jmp
aad
repz
cmp
shr
adc
test
out
in
fsubrp
mov
orl
in
sti
cmp
loope
in
in
loope
in
call
test
enter
sti
cmp
in
shr
ds
out
out
ret
ret
in
in
into
fld1
xchg
jecxz
loop
jecxz
lret
repnz
lock
jmp
sarl
test
ret
enter
mov
jecxz
aam
cli
int3
out
cmp
leave
fcomip
fdivrl
cmp
ds
loopne
leave
incb
adcl
lret
fsub
cmp
std
repnz
leave
loop
filds
in
jmp
cli
iret
aad
cmc
into
sbb
cmp
call
std
mov
clc
in
out
sub
jmp
jmp
cmp
in
ret
repz
fsubr
mov
out
hlt
rol
stc
aam
lret
hlt
jmp
iret
icebp
jecxz
cld
iret
fst
ret
loop
orl
and
xor
in
lock
stc
int
cmp
div
ret
loope
jmp
mov
dec
xor
jmp
shr
cmp
ss
std
rcr
loope
lret
jecxz
call
hlt
neg
sar
clc
cmc
lret
jmp
loopne
in
rcr
fsubr
cld
orl
xor
call
rcr
aam
cmpb
cli
clc
fiaddl
out
rcr
xchg
xchg
loope
fxtract
in
fdiv
std
ss
clc
stc
loopne
jecxz
cmp
jmp
fmul
mov
loop
hlt
aad
fcmovnu
out
fneni(8087
xor
xlat
ret
sar
mov
xchg
jmp
push
int3
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
ljmp
jle
add
xchg
repnz
test
f2xm1
enter
push
fcomp
aam
loop
aam
sar
in
out
cli
jecxz
xchg
lock
cmc
lret
test
in
not
iret
rcl
enter
lret
sti
cli
cli
std
sti
loope
test
out
call
fadd
cli
call
clc
shl
cmc
xchg
call
fst
addb
cmc
jmp
fcom
cmp
sar
fcomi
loop
out
sti
fcmovb
sti
mov
rcl
stc
cmp
in
fcmovu
clc
in
ret
jmp
in
and
fucomp
out
xor
lds
shlb
icebp
cmp
idiv
loop
enter
call
loopne
jmp
loop
rol
cld
int
cmc
ss
out
les
jecxz
cld
xchg
loopne
jmp
shl
aad
xor
xlat
aaa
ds
cmp
cli
ror
call
lret
jmp
jmp
lock
iret
loope
leave
cld
repnz
into
cmc
loop
out
shll
loop,pt
icebp
xchg
loop,pt
testl
int
icebp
cmc
divb
aas
in
loopne
ffree
cmc
not
ror
jmp
out
xchg
loope
in
xor
into
repnz
add
adc
mov
clc
in
lret
lret
int3
hlt
fdivs
sbb
fiadds
ret
test
lock
xchg
in
icebp
icebp
in
iret
xor
in
shl
in
xor
cmp
ret
aad
int
fndisi(8087
into
in
leave
cmc
mov
jmp
out
cmp
sti
loope
xchg
rolb
into
lret
in
repz
shl
test
ret
iret
mul
clc
rcl
xlat
cmp
mov
aas
neg
lret
ljmp
in
aaa
stc
not
into
std
cmp
out
cmp
icebp
addb
in
jmp
call
jmp
icebp
clc
fcmove
sarl
std
clc
aas
call
call
out
adc
xorl
xlat
cmp
int
test
cli
cli
test
iret
into
in
mov
rcl
ss
hlt
fmul
fidivrs
cmp
ret
lock
fcmovb
repnz
and
stc
adc
add
jmp
aad
ret
int
fistpl
inc
rep
fistpll
fiaddl
jle
out
out
lret
rclb
mul
in
rcr
repz
fcomp
aam
rol
fisttps
jecxz
orl
fcmovnbe
ss
test
rcl
out
in
in
jecxz
mov
mov
lea
xor
les
add
repnz
out
div
sub
out
fisttpl
int3
in
ror
clc
sarl
std
sti
xor
in
leave
movl
out
shll
fmul
enter
cmp
cmc
loopne
orl
incb
out
fucomi
ds
out
stc
repz
fsubrp
shr
ds
iret
test
mov
shr
xor
repnz
cmc
int3
in
shl
cmp
ljmp
mov
in
lret
ljmp
ljmp
stc
loope
lret
mov
lret
add
cld
out
xchg
enter
rcl
xor
cmc
push
out
cmc
orl
ljmp
loope
xchg
lds
iret
out
idiv
into
ljmp
test
ljmp
xchg
rcr
out
stc
in
cmp
cld
clc
fucomip
aas
repnz
lock
shl
and
fmull
repnz
rol
rcr
aad
cmp
xor
addl
stc
test
int
loopne
jecxz
xor
mul
stc
fdiv
in
cmp
fsub
fdivr
mov
test
fldl
repz
jmp
aam
stc
aas
iret
cmc
rcl
aas
ljmp
or
fistl
in
jmp
xlat
cmp
xor
int3
iret
icebp
xlat
ds
cli
inc
xchg
out
shl
xchg
jecxz
xor
in
stc
fnsave
not
xlat
std
jecxz
test
ror
jmp
fmulp
xchg
aad
aam
aaa
xlat
das
xor
iret
cmp
fst
cmp
fisttpll
or
out
in
incl
jmp
fsubr
sti
fnstcw
loopne
cmp
cli
cmp
out
cmc
clc
mov
xchg
cmc
ss
leave
cmp
sti
cmp
stc
inc
fucomp
imul
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
jl
pop
dec
mov
jg
fiaddl
jle
out
mov
sub
loope
std
int
imulb
shlb
jmp
cmp
and
std
aas
ljmp
iret
call
cs
cmp
leave
in
into
in
repz
cli
xchg
cmc
fdivrs
lret
test
out
into
in
cmp
shr
fst
stc
addb
fst
fxch
in
nop
mov
xchg
xchg
call
aaa
ss
xor
idiv
aad
and
hlt
in
orb
lock
xor
xlat
rcr
ljmp
loop
orl
filds
xor
fdivr
aaa
out
aad
cld
ds
lock
test
in
iret
icebp
adc
int
in
int3
call
aad
cmc
ljmp
jmp
sub
into
lock
lret
icebp
enter
shl
loop
cmp
in
lock
in
mov
in
xor
ss
out
iret
shr
fcmovb
rcl
sub
std
ffreep
fcmove
icebp
sub
jecxz
in
lret
cmp
loopne
xor
fptan
mov
jecxz
clc
leave
cld
mov
shll
icebp
leave
iret
std
ds
adc
clc
out
enter
iret
in
xchg
xchg
xor
fcmovbe
idivl
stc
in
incl
test
out
in
fiadds
aaa
xor
ror
ds
loope
loop
sti
cli
enter
out
loope
mov
ret
lock
idivb
in
in
xor
add
ret
std
fisttpll
fisttpll
out
cli
xor
test
les
lret
and
xchg
ljmp
loope
cmc
rcr
fucomip
fidivrl
pushl
hlt
mov
jmp
in
shl
test
lret
xor
fcmovb
clc
std
xchg
rcr
stc
cli
movl
call
jmp
cmp
fdiv
test
into
call
in
lds
aad
int3
sar
ret
divl
xor
fcmovnbe
decb
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
addl
sti
jecxz
int
loopne
in
ss
les
lret
aaa
cmp
stc
rcl
in
mov
out
enter
nop
in
xor
fdiv
flds
jecxz
cli
xlat
in
in
sti
jmp
rol
aam
cmp
sar
into
faddp
loop
cld
ret
aas
loop
repnz
test
out
stc
jmp
loopne
in
cmp
xor
cmp
ss
add
sbb
mov
loopne
xchg
in
jmp
iret
fcmovbe
in
call
jmp
leave
jmp
xchg
fmulp
popl
lock
cld
xor
rcr
adc
aam
xchg
jecxz
mov
jecxz
test
ror
int3
test
hlt
shl
neg
sti
jmp
cmp
in
mov
clc
orl
jecxz
jmp
xor
fdivr
fxch
cmp
sarl
cli
add
aad
jmp
sti
dec
rcr
jmp
fdivr
imul
call
int3
ljmp
fsub
sub
int3
fsub
jecxz
test
xchg
jmp
xor
xor
xor
cli
loope
or
inc
aad
mov
lret
and
xchg
ljmp
not
aas
int3
cmp
fcomp
test
repz
call
rorb
cmp
icebp
fmul
jmp
dec
cld
test
cmc
fcmovnu
loope
faddp
int
fcomp
xchg
loop
mov
out
cmp
cli
xor
int3
cmp
cmp
fildl
cli
mov
xor
cmp
xor
cmp
sar
out
std
adc
rcl
fldl
nop
repz
xchg
shr
ss
into
jmp
iret
shlb
in
cmp
fdivr
fdiv
icebp
xchg
shr
lock
cmp
leave
std
aam
push
fcomip
cmp
stc
xlat
mov
rorb
out
iret
xor
icebp
xlat
rcl
jecxz
test
movl
icebp
xchg
xchg
call
in
cmp
in
out
cmp
rcl
cmp
in
call
mov
repz
aam
aam
lret
fsubrp
repz
xchg
add
add
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
push
sub
fiaddl
jle
bnd
stc
sti
cld
out
in
shlb
lret
int
or
add
ljmp
lret
mov
das
lret
in
out
cld
cmp
lret
repnz
hlt
ffree
jmp
sar
incb
inc
sub
cmp
leave
repnz
int
clc
fdivrp
out
mov
cmpb
pop
lea
repz
ret
cld
cmp
rol
aad
loope
rol
leave
enter
jmp
iret
jmp
cmp
jmp
repz
shr
sbb
cmc
jecxz
clc
push
out
cli
fmul
sar
ljmp
not
idiv
loopne
cld
std
lret
cmp
neg
shl
test
mov
call
int3
shr
fcom
xor
rcl
fsub
lock
test
mov
xchg
divb
into
imul
jmp
cmp
in
sub
cmp
roll
out
shl
in
sar
rcl
jmp
rcr
mov
ljmp
out
shr
int3
ret
lds
cmp
hlt
out
repnz
fmul
fdivrs
aam
cmc
std
loope
xlat
fiadds
lret
call
sti
cld
aad
xlat
or
sar
frndint
in
repz
fsubr
jmp
ror
ljmp
cmp
cmp
in
fcmovnu
xlat
jmp
mov
xchg
in
rcl
xchg
call
repnz
loope
aas
rcr
cmp
test
in
xchg
mov
lock
in
repz
xor
jmp
in
cld
icebp
std
fadd
fcomp
loopne
mov
cld
call
lock
adc
cld
fsubr
clc
aaa
aas
and
repnz
fadds
fcomip
out
xchg
hlt
loopne
ret
xor
aaa
imul
aaa
aas
ror
stc
fld
shl
sti
cld
lret
out
mov
lock
ljmp
repz
test
in
inc
jmp
call
into
xchg
leave
aaa
iret
int
fnstcw
int3
cli
shl
ds
int
addl
int
int3
std
mov
xor
cmc
xlat
ss
add
jmp
int3
int
loope
sub
std
icebp
addb
jle
add
cmc
jmp
cmp
ret
rol
les
fcomip
xchg
iret
jmp
hlt
iret
roll
fidivrl
shl
jmp
aas
rclb
jmp
into
in
fcmovnu
xor
xlat
loopne
stc
flds
jecxz
cli
clc
adcb
out
in
jecxz
fmul
out
adc
incb
add
stc
ret
ret
test
int
loop
std
icebp
shl
out
lret
cmp
repnz
fdecstp
shl
std
shl
adc
jecxz
repnz
mov
icebp
in
xor
sarl
clc
loop
ljmp
in
in
loope
mov
repz
icebp
icebp
imul
sarb
icebp
lock
jmp
mov
sub
in
lret
in
rcl
ss
cmp
cmc
fsubp
addl
aad
xbegin
fsubp
xchg
xlat
enter
fcmovbe
repnz
cmp
repnz
icebp
out
xchg
cmp
xlat
fcmovnu
enter
lock
in
fidivrl
hlt
fdiv
icebp
loopne
test
jmp
int
lret
sti
std
in
mov
out
cmp
xlat
fyl2x
rcr
lock
xchg
repz
mov
fdiv
repz
into
ss
lret
shl
aad
aas
neg
out
lock
add
clc
mov
ljmp
das
shl
jmp
fcmovnbe
fsincos
cli
cmp
iret
sti
out
cmp
loopne
mov
cld
popl
int
xor
hlt
aad
cmp
repz
out
sti
ret
aad
jmp
mov
xchg
xchg
lret
repz
call
sub
xlat
enter
jmp
mov
xor
cmp
fsubr
shl
enter
lret
test
int
cmp
ffreep
cld
fdivr
rolb
jecxz
jmp
addl
cmc
cmp
rcl
in
xor
cmp
cmp
in
fcmovb
out
in
enter
orb
loope
xor
shl
xlat
in
in
cmp
shr
mov
aam
loop
clc
and
jmp
ror
add
jmp
enter
fstp
int3
shl
scas
imul
lret
pop
mov
jmp
jle
add
ret
shl
xlat
xor
fcompp
aad
in
std
repnz
mov
lret
enter
or
idiv
cld
in
aaa
repnz
fyl2xp1
push
std
fnstsw
fdivr
stc
sti
jmp
xchg
mov
out
ss
aad
cmp
cmp
repnz
std
fcomp
sbb
jmp
icebp
mov
cmp
vpaddd
stc
test
cmp
lock
cli
test
xlat
lret
cld
test
loopne
mov
out
out
cmp
cmc
loop
jecxz
shl
cli
addl
into
lock
cmp
imul
std
fsubp
ljmp
rcl
loop
jmp
fmuls
xchg
aad
fcmovu
sti
ss
loopne
sbb
stc
aas
cli
aad
fadd
mov
icebp
xchg
ljmp
aad
cmp
shl
ss
fcomip
fcomip
ret
in
lret
in
xchg
jmp
jmp
idiv
xor
iret
out
call
test
rcl
xchg
jmp
clc
ret
stc
hlt
repnz
shl
shl
xor
fadds
out
xchg
test
fxch
xor
hlt
lret
fmul
div
iret
frndint
faddl
fucom
and
out
lret
rclb
cmp
sar
leave
int3
idivb
stc
hlt
adc
cmc
leave
or
fisttps
not
sub
in
in
fdivrs
fsubr
cmc
stc
fcmovnbe
and
ffree
fucom
ret
xchg
in
shl
ljmp
out
jmp
stc
xlat
ds
jmp
fmul
cld
cld
into
xchg
jmp
jmp
fucomi
fsub
shl
xor
cli
loop
sti
shl
xlat
or
sub
fsubrl
rcr
cmp
clc
shl
adc
xchg
repnz
mov
xchg
loopne
lret
lret
enter
fnstcw
jmp
loope
in
cli
sarl
loop
fisttpll
xchg
mov
ffreep
in
int
cmp
leave
rcr
xlat
idiv
test
mov
test
nop
repz
loopne
rol
clc
jecxz
sarl
cmc
neg
cmp
in
cli
loope
decb
in
shr
cld
out
xchg
je
add
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
aad
in
int
div
aaa
sti
clc
in
int
ret
fimuls
out
leave
jmp
leave
xchg
lret
xchg
xor
leave
cmp
fdivrl
shl
ror
fldl
lret
lret
cld
loopne
test
loopne
jmp
clc
stc
jmp
xlat
test
mov
addb
shl
rol
lret
repnz
int3
jmp
fdiv
cmp
cld
fsubp
faddl
int3
loopne
sub
aaa
into
in
repz
ds
int3
fcmovnu
out
aas
out
in
mov
in
loop
aaa
rcl
rcl
idiv
aam
cmc
rcr
loope
xlat
xrelease
sti
mov
test
cs
fcmovbe
xor
ss
icebp
cmp
leave
fcmovbe
out
out
nop
out
xchg
and
call
aad
repz
into
rol
cli
aas
loopne
xlat
test
aam
std
out
sub
in
fst
test
in
mov
into
not
fucomi
loope
jecxz
stc
out
enter
fld
or
int3
xchg
in
rcl
cli
xlat
idiv
iret
in
xlat
out
repnz
cld
jmp
in
xchg
xchg
ss
stc
sarl
fsubr
shr
fldl
jmp
into
repz
repz
sar
cmp
cli
into
call
hlt
jecxz
test
sti
in
sbb
int3
mov
das
lret
xor
clc
xor
rcr
clc
ret
out
cmc
in
mov
jmp
xchg
jecxz
xor
cmp
neg
shl
aam
shl
mov
in
cli
ror
out
adc
leave
shr
out
leave
loop
aas
fucom
shl
movb
in
test
jmp
enter
repnz
fcmovnbe
cld
ljmp
in
loop
fxch
jmp
in
fisttpll
aaa
cs
dec
cmp
testl
cld
loop
test
in
fucomi
ljmp
lock
aam
sarb
xor
icebp
fdivr
testb
out
jmp
out
xor
clc
shlb
hlt
loope
loopne
sar
in
loop
loop
orl
fimull
jl
add
jmp
lret
ret
in
call
ds
movsl
aam
out
jg
fiaddl
jle
loop
xchg
rcl
lock
sti
stc
clc
rcr
lret
repnz
repnz
leave
cmc
out
jmp
cmc
int3
xor
jecxz
into
iret
jmp
int
in
stc
test
ret
fsubrp
and
sbb
hlt
loopne
in
lret
jmp
loopne
out
push
in
out
sar
cmp
fimuls
xchg
mov
icebp
rcr
lret
lock
rcr
repz
loopne
cmp
ljmp
cli
test
or
call
aad
lock
leave
aad
hlt
in
iret
shl
jecxz
ljmp
test
lret
int3
fucom
stc
stc
cmp
lock
test
loope
loope
clc
repnz
icebp
aad
shl
sub
xor
cmp
sti
fadds
test
lret
in
int
and
int3
enter
cmp
lock
fdiv
call
stc
fdivp
std
leave
clc
rol
test
xor
call
out
aam
fnstsw
add
add
fiadds
enter
or
out
in
xor
cmp
cmc
cmc
loope
int
iret
rcr
test
enter
test
test
std
and
lock
out
out
sub
lret
loop
fiaddl
sti
test
into
in
lock
jmp
xor
aaa
bnd
not
ds
loope
xchg
clc
std
mov
loope
enter
ds
in
push
sar
fcmovnbe
sti
repz
clc
jmp
jmp
nop
in
int
in
fnstcw
lock
xlat
loop
loop
loopne
lret
in
mov
jmp
in
fcom
xlat
div
das
out
std
cmp
clc
fidivl
icebp
test
not
orl
icebp
in
out
in
shlb
ror
jmp
rolb
testb
std
hlt
sub
not
aaa
call
cmp
rcr
xlat
loopne
cmc
fucom
div
jmp
mov
jmp
xlat
shlb
clc
cli
cli
in
xor
out
lret
in
lds
xchg
iret
lock
cld
fstp
out
cmp
sarl
shl
ror
inc
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
inc
dec
cwtl
ss
fiaddl
jle
cld
cli
loop
into
mov
int3
test
ljmp
fstpt
call
aaa
out
mov
test
mov
repnz
repnz
int
out
clc
xor
fcomi
fsubr
out
in
loope
xchg
fsubp
lret
and
shr
out
shlb
lock
fcmove
shr
cmp
repz
xchg
repz
test
xchg
out
lret
loop
div
idivb
aam
stc
shl
sbb
in
aad
ret
out
test
xchg
lock
out
fstl
aam
iret
int
lret
aam
in
bnd
mov
std
cld
iret
iret
icebp
out
xor
out
cmc
jmp
ror
enter
xor
std
xor
xchg
repnz
fmulp
repnz
repz
xor
icebp
lret
rcl
roll
orl
out
std
in
fdivp
int
repz
sti
jmp
cmpb
iret
xlat
les
cld
loopne
fisttpl
int3
ljmp
aam
lret
ds
jmp
std
sti
fstl
enter
cmc
std
lds
out
fucomi
add
flds
repz
xchg
repnz
int3
cs
lret
int
lock
and
cmp
jmp
test
mov
jmp
repz
mov
jmp
xor
out
into
fstp
div
and
adc
fimull
fdiv
xchg
jmp
clc
fcom
enter
loopne
cld
aad
ljmp
lock
in
in
cmp
in
clc
shr
stc
call
mov
enter
xchg
out
std
enter
leave
out
repnz
aam
icebp
icebp
loopne,pt
ds
jecxz
fsubr
sbb
jmp
loope
out
aam
xor
out
cmp
neg
fnstsw
clc
incl
in
aad
xchg
nop
into
jmp
fmul
enter
in
les
aad
out
clc
rcr
repz
repnz
leave
neg
ds
xchg
mov
cmp
idiv
icebp
ds
loope
int
cmp
int
fisttps
in
nop
xlat
aad
int3
aaa
cmp
shl
sar
fiadds
push
call
add
xlat
mov
rcr
xlat
sub
jmp
xchg
hlt
jg
fiaddl
jle
fdiv
call
test
jecxz
repz
lock
cmp
xor
aam
shl
in
and
mov
and
loop
jecxz
xchg
in
in
ss
loopne
rol
icebp
out
sti
call
vcvtpd2dq
int
cld
repnz
sti
xor
fcmovne
in
std
cmp
sar
test
repnz
fistl
lret
repz
sti
imul
shl
mul
shll
loopne
hlt
lret
stc
bnd
in
cmp
cmp
in
std
xor
rcl
cli
faddp
in
out
jmp
iret
out
loope,pn
cli
in
in
int3
fprem
sti
cld
in
aas
iret
icebp
adc
or
testb
out
mov
jmp
xor
lds
xlat
out
loopne
cmc
sarb
into
stc
aam
rol
cld
std
ret
loope
fmulp
int3
into
test
call
fdiv
lret
jecxz
ror
cli
repz
loopne
add
fadd
enter
test
leave
loope
lds
cmp
or
test
xchg
fcmovnb
test
xlat
fucomi
jecxz
xchg
fmul
lock
imul
jecxz
fucomi
ds
ds
std
cli
xlat
clc
std
std
in
out
iret
nop
xchg
jecxz
sub
ljmp
in
sarb
xchg
test
lret
in
decb
in
out
loop
clc
ljmp
icebp
hlt
xor
xchg
xchg
loop
into
xchg
jmp
into
in
in
ds
sarl
sti
cld
int
ds
loopne
mov
stc
in
int3
xchg
fucomp
test
in
out
enter
rcl
cmp
cmpl
mov
in
ljmp
aam
xor
les
lock
ror
fadds
lret
in
shr
in
mov
fdivr
repz
out
xor
in
test
vpaddb
std
stc
out
cld
xor
fldl
repz
idivb
lret
loopne
ror
ror
ret
cli
filds
lret
ljmp
int
sar
lret
xlat
repz
cmp
lret
iret
mov
idiv
xor
xor
std
cmp
into
xor
aad
xor
jmp
lret
xlat
aas
rcr
int
in
push
ret
cmc
outsb
idivb
fiaddl
jle
lock
not
in
in
jecxz
lret
nop
sub
loope
iret
lret
ss
fcmove
repz
aam
shl
fldl
rcr
icebp
int3
in
repnz
ljmp
neg
int
cmp
icebp
sbb
cld
sar
cld
test
test
mov
call
stc
aad
repnz
xlat
idiv
jmp
mov
out
xchg
decl
enter
clc
cmp
rcl
xor
jecxz
fiaddl
and
jmp
shl
cmc
vshufps
sbb
flds
in
stc
xchg
in
xchg
lea
clc
fnstenv
lret
out
out
fstpt
jmp
test
fdiv
jecxz
mov
and
mov
mov
lret
in
into
divb
call
xlat
in
loopne,pt
test
mov
out
in
in
out
jecxz
mov
fxch
cmc
ljmp
cld
clc
and
xchg
aam
adc
out
rcl
stc
fdiv
clc
dec
ds
xor
movb
xchg
rcr
fnstsw
fcomip
shlb
leave
stc
aam
fxch
jmp
cmp
shl
jecxz
sti
ljmp
in
shlb
lret
repz
out
shl
shl
repnz
aam
test
ficoms
lock
lret
in
xlat
out
cmp
call
xchg
xchg
xchg
cmc
aaa
out
repnz
int
cmc
cmp
rcl
cmp
int
repz
test
loop
cli
fldpi
fldl
in
test
int3
shl
loop
mul
cmp
rcr
jmp
into
out
std
int
repnz
hlt
ss
div
fmul
in
in
repnz
int3
repz
xlat
sub
xchg
mov
loop
cli
ss
rcl
cld
aam
repnz
and
shl
out
in
iret
cld
lock
rcl
in
aad
cmp
int3
sar
fprem
cmc
hlt
les
addb
xchg
loopne
test
repnz
shll
call
addl
jmp
cli
out
icebp
mov
xlat
xor
enter
xlat
fstpt
ljmp
add
jmp
lret
fst
mov
addr16
inc
int
das
lret
jle
add
fsub
clc
sub
ret
ret
mov
xchg
nop
in
shlb
repz
lret
idiv
sti
ret
iret
stc
sub
in
fiadds
call
enter
sti
ror
fucomi
cli
fiadds
aam
cli
test
test
xor
out
out
in
fsubp
in
not
cmp
cld
imul
out
aad
mov
enter
loop
in
cmc
cmp
cmp
in
fcomi
cmp
cmp
idiv
mov
call
xchg
jmp
das
out
ret
fmulp
loopne
fistpll
sti
icebp
add
out
cli
sti
lret
repnz
in
jmp
fdiv
cmp
dec
fistpll
rcl
rcl
cmp
test
incl
in
xor
cmp
int3
aam
aam
or
test
call
mov
xor
sub
aad
fadd
ret
out
sbb
dec
stc
enter
test
std
incb
sub
cmpb
dec
icebp
fcmovnbe
out
loop
xchg
ljmp
cld
aas
cld
aad
test
fcmovnu
clc
in
decl
hlt
aad
clc
xor
xor
sti
idivb
cmp
aam
xlat
fcmovb
test
xchg
cs
lock
int
xor
loope
mov
sti
jmp
ror
sub
in
ljmp
shl
jmp
sar
clc
in
call
in
icebp
nop
rolb
in
out
cli
repnz
aaa
aas
lret
aad
out
cmp
clc
xchg
clc
icebp
in
mov
xchg
xchg
xor
int
cld
sti
xor
cmp
cmp
aas
fldl
fsubrp
fsubrp
ljmp
into
cmc
repz
out
sti
cmp
ret
rol
out
in
mov
fmulp
xchg
or
nop
out
shll
shr
std
aam
cmp
std
test
ret
leave
int3
repz
mov
out
into
int
aad
fnstcw
cmp
sar
les
ds
cli
cld
std
jecxz
vphaddubw
call
cmp
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
jae
lret
push
cmpsb
sti
jg
fiaddl
jle
aas
cmp
iret
shl
repz
in
mov
xlat
xchg
shl
decl
rol
aaa
fidivrl
sar
xlat
std
addl
cmp
mov
xlat
loop
cli
int
fmulp
in
in
shrl
div
aaa
fcmovbe
clc
sbb
mov
fisttpll
loop
into
icebp
fcmovnbe
xlat
cmp
ss
fsub
mul
in
add
in
faddl
int
xor
div
repz
int
cld
rol
jecxz
mov
into
fldl
loopne
rol
cli
fmul
xor
stc
icebp
std
std
fadd
fadd
cli
leave
faddp
and
xchg
shr
xor
in
lock
rol
loope
in
mov
mov
cmp
out
jecxz
out
cmc
xor
adc
in
fldl
xchg
cld
mov
xchg
rol
fdiv
lret
fcomip
rolb
filds
mov
xchg
in
xor
cmp
in
fdivp
lret
in
aas
in
in
rcr
in
cmp
out
jmp
test
not
fsubrp
repnz
idivl
idivb
xchg
incb
cld
cli
lea
int
clc
lds
lret
ss
repnz
xor
mov
sti
into
into
in
in
rcl
ret
imul
out
repz
fsubr
ror
icebp
xor
aas
leave
xchg
loop
stc
xchg
out
fsubr
addl
loopne
cmp
icebp
aam
out
idiv
sub
in
jmp
fsts
test
xor
in
ljmp
mov
xchg
fildl
in
leave
in
fcomip
fdivp
cmp
xor
jecxz
in
mov
adcb
out
cli
ljmp
loop
icebp
rcr
loope
fxch
int
leave
fdivr
mov
rolb
f2xm1
cmp
sti
shr
cld
int
clc
rcl
fsubrp
std
hlt
cli
out
fxch
xor
sar
in
test
sarl
cmp
shl
fcomip
lds
aam
in
loop
ret
cli
repnz
mov
hlt
out
aad
jge
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
xchg
inc
aas
fldl
jg
fiaddl
jle
xor
int
frndint
aas
iret
fadd
fsubp
cld
xlat
mov
lret
into
jecxz
xchg
jecxz
xor
cli
jmp
cmp
flds
ljmp
stc
enter
nop
in
imul
into
enter
xlat
xor
ffree
lock
aam
in
sti
ret
fadd
mov
xor
xor
jmp
xor
rcr
out
out
shr
test
rcl
ret
cmc
sar
sti
repnz
xchg
imul
iret
fucompp
clc
xlat
int3
cli
lock
jmp
aam
clc
lock
clc
mov
xchg
call
leave
aad
xlat
cld
clc
sbb
in
fcmovnu
fldl
xchg
repnz
mov
test
shll
cmp
neg
loope
jecxz
sti
fsubr
repnz
xor
out
xor
enter
cmp
sarl
les
iret
repz
shr
leave
aam
lret
cmp
fcmovu
cmp
addl
addl
loope
shrl
int3
xlat
idiv
out
aas
addl
movl
rol
out
ss
sar
cli
testb
testl
mov
xlat
rcl
in
fucomp
in
into
fidivrl
mov
xchg
in
and
int
lret
enter
pushl
stc
repz
enter
in
xchg
push
out
xlat
xlat
in
lret
in
fcmovu
iret
shl
xlat
ret
xlat
jecxz
sbb
or
cmc
repz
rol
lret
xlat
aas
sarl
repz
loopne
into
cld
fcmovnb
xor
into
lret
std
in
int
ret
shlb
loop
call
icebp
adc
xlat
rcr
mov
dec
out
mov
shll
in
lret
xor
out
loop
xchg
clc
repnz
loop
test
ror
repnz
xor
fcmovb
lret
aad
leave
cli
fdivrl
cmp
jmp
int
fiadds
roll
ljmp
inc
fdivr
ret
vpmuludq
loop
fimuls
mov
jmp
jge
jmp
leave
aas
ret
vpcmpeqw
mov
inc
jl
cmpb
add
xor
out
in
ss
in
jmp
hlt
into
icebp
ret
rcl
in
aad
sti
mov
ror
lret
cmc
int3
in
shl
hlt
rcr
jmp
cmp
icebp
and
rcl
aam
sti
filds
cmc
xchg
xchg
cmc
into
ljmp
out
in
iret
test
loope
stc
lret
int
loop
mov
enter
std
iret
hlt
loopne
fdivrp
jecxz
ljmp
loopne
hlt
out
imul
call
rcl
cmp
adc
cld
aam
out
fiaddl
das
ror
sti
cmp
xor
icebp
call
testb
fldl2e
int3
icebp
mov
repz
aam
lock
neg
fsubr
sti
aaa
fcomp
aam
fdivp
cmp
xlat
rcr
cmp
clc
jmp
into
shlb
neg
in
out
cmp
in
lret
cmp
repnz
jmp
fimuls
sub
xor
aad
repz
aas
int3
dec
cmc
jecxz
stc
cli
fmul
in
fucomi
xchg
in
or
aaa
les
stc
rcl
enter
sarb
test
xchg
in
stc
orl
xor
idiv
in
ds
cmp
sti
shr
rcr
testb
fdivr
jecxz
jmp
aam
lret
repnz
fistpll
cmp
testl
in
orb
shl
repnz
das
fnstcw
loop
orl
movl
fldcw
xlat
in
cmp
fidivrl
roll
hlt
loopne
ret
nop
in
and
jmp
xor
fsubr
stc
xor
cli
fcmove
rolb
ljmp
sar
test
lret
lock
aam
aas
loopne
rcr
cld
jmp
out
mov
sbb
loope
icebp
xchg
lret
rcl
aad
neg
in
cld
ror
icebp
into
stc
rol
xlat
loop
std
in
call
jecxz
sub
out
out
fcmove
into
cmp
int
aas
aad
jecxz
icebp
mov
fsubp
in
loopne
adc
filds
jmp
stc
repnz
aaa
loope
clc
out
xchg
test
iret
xchg
loope
xor
jmp
int3
ret
lret
ret
int
int3
int
adc
xlat
add
add
loopne
nop
jmp
shr
xor
lret
repz
cmp
test
test
rcr
ret
sti
lret
faddp
sti
in
fucomip
cs
out
ljmp
addl
repnz
movb
not
xor
repz
imul
loope
loope
loope
and
leave
in
xchg
in
rcl
shll
sti
fcomi
cld
fucomip
repnz
clc
aas
lock
ds
jmp
in
mov
ljmp
jmp
cmp
repz
in
hlt
fimull
mov
lret
in
shl
leave
xor
int3
aaa
int
lret
cmp
int
fdivp
test
fdivr
in
loopne
icebp
cld
test
out
loopne
cmp
cmp
cld
cmp
ljmp
loop
enter
sti
fdivr
enter
loop
in
xor
cmp
cmc
aam
cmc
test
jmp
incb
in
mov
out
xlat
out
ror
cmc
ds
aam
icebp
sbb
mov
leave
repz
lock
icebp
lock
xor
cmp
fiadds
push
mov
mov
xchg
loope
enter
repnz
jmp
out
ss
sti
decb
out
test
xchg
sar
lret
cli
idiv
aam
hlt
and
roll
cld
into
mov
lret
int
ljmp
lret
sti
fsubr
cli
loopne
xchg
rol
out
vpsubsb
in
ljmp
enter
and
aad
ret
fstp
mov
lret
jmp
cmp
cmp
ror
shr
loope
fprem
faddp
fucomp
mov
leave
addb
cli
int
repz
cmp
out
fcomip
shl
hlt
shl
cli
hlt
cmc
fdivrp
mov
icebp
repnz
in
int
fadd
xor
lock
into
ds
lock
aas
repz
into
jmp
xchg
enter
fnstenv
int3
lock
out
rcr
in
aad
add
jmp
fsubp
test
sti
orl
ror
fcom
cmc
leave
jmp
rcl
xchg
addb
in
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
or
iret
mov
ss
fsqrt
cld
cld
fsubp
lret
into
fsubp
cmp
repnz
sbb
ljmp
enter
xlat
out
cmp
ret
ds
clc
rol
mov
xchg
ror
xor
leave
enter
icebp
jmp
hlt
hlt
add
fimuls
stc
mov
test
out
call
repz
fdivrl
jecxz
cld
sbb
mov
xchg
mov
shl
fcomi
lret
cmp
fnstsw
or
mov
out
cli
mov
test
iret
shl
int3
repnz
ss
enter
mul
incb
jmp
xchg
jecxz
ljmp
ror
cmp
decb
loopne
into
jmp
lock
ss
repz
sar
imul
cmp
and
aas
test
sti
neg
lret
fcomip
int3
loop
clc
fldlg2
shr
fsubp
cmc
icebp
or
mul
test
testl
in
leave
ss
xor
shr
cmp
fmulp
jmp
test
out
jmp
repz
in
fincstp
cmp
into
stc
clc
std
repnz
jmp
stc
cmp
roll
lret
repnz
out
icebp
ljmp
out
rcr
aad
sti
out
fildl
div
xor
into
call
xlat
lock
repz
test
faddl
xchg
xchg
xchg
stc
xor
cld
out
xor
loopne
in
imul
in
xchg
rcl
cmp
int3
out
repz
mul
sar
ret
int3
iret
xor
cmp
rcl
fcomi
ds
leave
int
in
lret
fsub
in
xor
clc
in
rcl
jmp
into
sarl
sti
repz
aad
xchg
loopne
loopne
jmp
lret
aam
clc
cmp
jecxz
fcmovb
loopne
sti
std
xchg
mov
fndisi(8087
test
repz
clc
clc
xor
cmp
repnz
in
ds
sti
fucomi
xchg
flds
orl
clc
sti
shlb
cmp
bnd
fdivp
mov
mov
mov
jmp
into
aam
fmul
dec
cmp
sbb
xchg
fiaddl
jle
loope
sti
jecxz
iret
jecxz
in
in
ljmp
out
fcomp
clc
fsqrt
test
test
cmc
cli
fisttpll
out
xchg
jecxz
hlt
call
lock
xlat
rcl
repnz
clc
lock
jmp
into
repnz
in
call
jmp
sarl
std
sbb
icebp
out
test
cld
ss
fdivrp
cld
fsubr
std
call
mov
mov
xchg
test
in
loope
ljmp
xorl
jmp
fcmovu
fdivrp
mov
loop
repz
fnstenv
std
faddl
fcmovnu
sti
out
xlat
incl
xchg
fsubrp
xchg
loope,pn
ljmp
faddl
sti
cmc
loopne
enter
in
jmp
icebp
out
fdivs
cli
in
out
fucomip
loope
loope
cld
rcl
sti
clc
addb
repz
fbstp
jmp
sti
cmc
dec
lret
iret
aas
out
call
fsubr
fucomp
call
imul
ret
loop
sti
xor
jmp
lock
stc
in
cli
mov
int
not
imull
repz
iret
ss
clc
cld
cld
iret
shl
fst
out
xchg
iret
out
sti
loope
xchg
call
sti
shlb
sti
lret
aas
aam
into
cmp
fiadds
call
int3
jmp
int3
int
repz
out
lret
cmp
ret
cmp
in
loop
iret
fisttpll
icebp
ret
enter
repnz
int3
enter
rcr
xor
stc
incl
out
lea
fincstp
lret
sti
cmp
lock
repz
loope
fcomi
hlt
enter
loopne
xchg
lea
out
leave
sub
xlat
loope
sarl
ret
stc
aad
aas
fld
test
into
clc
fcomi
int
sub
fmul
in
in
xor
lock
cmp
repz
std
call
lret
in
iret
iret
std
in
out
rcl
out
fld
cmc
std
xor
aas
fdivr
loopne
addl
in
and
jmp
xor
cmp
rcl
rcl
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
add
fiaddl
jle
flds
aas
clc
decb
mov
repz
ror
aaa
adc
sarb
fsubr
fdivp
lret
ljmp
popl
in
cmp
xor
lret
fucomi
aam
sbb
repnz
in
lret
roll
into
ret
rcl
imul
cmp
out
cmp
leave
int3
xlat
loop
int3
int
iret
loop
sarl
aaa
stc
ss
fiadds
mov
lret
lock
jmp
int3
xor
rol
out
xlat
aad
ror
fdivr
fdiv
loop
std
ffree
testb
jecxz
shrb
int
ss
cmc
in
in
ds
int3
std
test
std
aad
ret
out
xchg
lret
in
call
fdiv
cld
xor
lret
shl
testb
call
xchg
fisttpll
lock
in
xor
aaa
test
jecxz
adc
clc
aas
test
mov
aad
stc
call
cmp
lret
hlt
ret
repz
lock
leave
jecxz
cmp
xor
loopne
xlat
loope
cld
sti
out
mov
stc
leave
fcmovnu
dec
int3
lret
shr
xor
sti
into
fmul
jmp
sar
ds
lret
jecxz
mov
lock
xor
lret
in
fsubr
cmp
ret
hlt
jmp
cli
loop
fimuls
test
repnz
jmp
fistpll
std
in
ds
test
adc
in
cmp
aam
xor
hlt
repz
lret
rcr
div
sti
int3
ret
ffreep
fcom
jecxz
in
test
jecxz
adc
ret
int3
fnstcw
out
icebp
cmc
clc
adc
into
aad
stc
neg
sti
fucomip
loop
mov
sub
aam
jecxz
cmp
cmp
cli
xlat
out
stc
fprem
fcomip
loop
xlat
mov
loope
loop
int3
shr
test
icebp
clc
fxch
in
in
clc
ret
add
out
fdivr
mov
enter
repnz
aam
enter
loopne
dec
rol
repnz
std
fucomi
jmp
int
xchg
out
rol
fsubr
int
lock
out
sub
push
in
jmp
ror
rcl
stos
sub
insl
and
mov
fiaddl
jle
roll
jmp
xor
fldl2e
lret
shl
aad
fbstp
in
divl
xor
in
into
lock
div
icebp
test
fimull
orb
ret
fadd
shll
lret
cmp
cmp
fldl
test
cli
into
incb
xchg
leave
xlat
jecxz
hlt
lret
into
shr
sar
fsub
adc
call
cmp
mov
repnz
fdivp
int3
ror
jmp
repnz
shl
fprem
jmp
icebp
lock
int
out
xor
call
shl
fucomip
fcomip
out
call
sbb
addb
cs
jmp
lock
out
sar
cld
aad
jecxz
loope
out
std
xchg
mov
xchg
aam
xchg
icebp
out
sti
sub
ljmp
call
ds
mov
mov
shl
into
enter
fidivrl
in
in
in
out
out
out
fcomi
cld
repz
enter
out
rcl
sub
std
sarb
int3
adc
xchg
cmp
sti
lret
jmp
mov
lret
sub
in
int3
cmp
call
icebp
loopne
test
call
out
loope
test
xchg
divl
ljmp
cmp
cmp
lock
stc
cmp
mov
leave
fisttpll
shl
xor
lret
jmp
jecxz
rcl
call
mov
rclb
test
stc
in
loope
iret
cmp
in
jmp
leave
lret
std
cld
out
ror
divb
in
xor
fcmovu
aam
icebp
ljmp
aam
test
fsincos
mov
jmp
lret
out
out
fmul
fcmovu
std
fucomip
lret
icebp
shr
add
testb
ljmp
sub
lds
jmp
cmc
in
sti
aad
rcr
idiv
jmp
call
nop
test
call
aam
bnd
aaa
ret
fcmovnb
roll
loope
repnz
enter
sar
jmp
test
ffree
ljmp
incb
or
shl
jecxz
leave
cmp
hlt
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
sar
or
rcl
or
stc
mov
stc
test
mov
rcl
les
aad
ret
aam
out
div
cmp
clc
repnz
rol
in
int
in
out
lock
mov
out
ret
cmp
in
cmp
cmp
aas
rcr
repz
std
out
loope
icebp
shl
mov
and
in
xor
cmp
rcl
ds
in
sti
repz
shr
cmc
leave
fsubp
ljmp
shrl
lret
out
jmp
cld
clc
iret
in
cli
cmpb
test
incl
xchg
loop
xor
jecxz
stc
cmp
fucomi
or
fcmovnu
fucom
test
clc
mov
lret
xchg
jecxz
xor
shl
fst
rcr
clc
cli
fucomip
clc
repz
jmp
iret
std
loope
sti
rorl
sub
cmp
aaa
fsubr
sar
loope
int
loop
mov
mov
test
ljmp
ror
stc
cmp
enter
ljmp
aam
mov
mov
lret
into
fiadds
in
icebp
out
fdivr
rcr
into
rcl
fimuls
mov
loopne
cld
leave
loopne
iret
ljmp
aaa
shl
jmp
fnstenv
in
loop
xchg
fsubr
icebp
call
aaa
repnz
jmp
xor
int3
adc
sarb
add
addl
ffreep
icebp
xlat
ret
not
ds
repnz
leave
xlat
ffreep
out
out
jmp
xchg
test
enter
xor
sar
jmp
sar
add
xchg
leave
lret
hlt
int3
neg
loope
call
shl
shr
neg
jmp
clc
aad
aas
cld
out
jecxz
xchg
in
orl
rcl
jmp
cmp
iret
jmp
mul
test
jmp
in
repz
icebp
aad
stc
xlat
cmp
ljmp
rcl
incl
inc
out
mov
test
out
cmp
repnz
cmc
in
iret
out
enter
lds
in
nop
jmp
stc
shr
call
icebp
in
adc
mov
cld
out
in
std
int
std
loope
call
scas
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
repnz
bound
jle
jmp
lret
cmp
idiv
ret
mov
rol
xchg
jmp
jecxz
xchg
out
loope
in
into
clc
fdiv
cmp
jmp
in
out
and
nop
call
in
leave
sti
cmp
repnz
repz
repz
sti
fsub
xchg
in
xchg
jecxz
ret
icebp
in
out
icebp
cmp
xor
clc
adc
rcr
test
fsub
fyl2xp1
enter
test
clc
fdivp
repnz
repz
lock
std
fucomi
xor
jmp
lock
ljmp
cmp
lret
cmp
jmp
aas
leave
mov
mov
iret
stc
std
cmp
ss
hlt
cli
loope
aam
xchg
xlat
enter
lret
ljmp
xor
clc
rcl
rcl
in
in
incl
jmp
into
mov
aaa
int
repnz
aad
cmp
aad
rol
fiaddl
cmp
in
out
aas
fmul
out
cmp
hlt
cmc
or
out
test
orb
int
call
in
sub
jmp
loope
fadd
in
testb
fndisi(8087
stc
test
xchg
test
rcr
imul
int
loopne
out
lock
jmp
or
clc
test
repz
cmc
out
ret
jmp
fucomp
lret
into
cmp
xlat
out
cli
leave
mov
out
aam
call
int
leave
ds
lock
testl
mov
jmp
clc
xor
fsincos
icebp
clc
out
fyl2x
cmp
std
hlt
cmc
rorl
int3
loope
lret
sti
out
into
call
cmp
fcmove
cmc
fdivr
aas
or
jecxz
sar
xlat
jmp
int3
test
cld
int3
in
rolb
into
cmp
stc
rcr
int3
jmp
lret
lret
xor
dec
cmc
out
stc
mov
in
int3
jmp
xlat
repz
in
enter
cmp
sbb
xchg
fsub
lds
and
call
aad
cmp
loope
aas
cmp
xlat
div
fdivp
jmp
call
out
xor
jmp
enter
fcmovne
fst
or
pop
leave
lret
ds
jg
fiaddl
jle
loop
shl
cmp
fidivrs
fcmove
cmp
test
test
out
loopne
div
in
int3
aam
iret
lret
aad
xor
jmp
sarb
fcmovb
test
loop
orl
neg
mul
push
aas
hlt
lock
call
roll
ljmp
xor
shll
leave
cmp
stc
dec
aaa
ret
div
repz
mov
loop
in
loop
cmc
cmc
iret
in
sub
out
out
cli
into
loope
out
neg
loope
cld
loopne
jecxz
sti
jecxz
loopne
icebp
in
lock
repnz
repnz
cmp
inc
loopne
mov
fsubr
lret
call
shl
mov
out
mul
jmp
sarl
ror
movb
enter
in
mov
rclb
xor
fdivrp
out
ds
shl
aas
std
in
lret
jmp
lret
std
xchg
repz
out
int
lret
repz
lret
cli
ret
xlat
loop
xchg
ljmp
nop
mov
shl
repz
fnstenv
cld
cmp
loope
into
and
imul
mov
out
lock
in
test
rol
xor
aad
aaa
enter
ret
icebp
out
jecxz
xchg
fsubp
xchg
cli
leave
shr
iret
xchg
xor
iret
lret
sti
ror
out
cli
fdivr
test
enter
fucomip
cld
loop
shr
ljmp
clc
cmc
xor
div
cmp
ret
clc
fld
jmp
test
fmul
in
fcmovne
out
aaa
lret
jecxz
adc
ret
repz
jmp
nop
decl
sub
int
icebp
hlt
dec
icebp
rcr
in
clc
hlt
loop
clc
mov
in
iret
xor
aam
int3
cmp
out
loop
ds
div
test
repnz
loope
loopne
lock
ss
cmp
lret
add
fmul
out
in
or
fcoms
out
xor
out
leave
out
int
or
xlat
rcl
fdivrs
repnz
ljmp
repnz
call
fmul
ds
ret
fidivrs
icebp
mov
xchg
int
stc
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
jmp
xchg
jg
fiaddl
jle
out
mov
rcl
cmp
das
cmp
repnz
test
xchg
rorl
xchg
repz
fcom
call
jmp
jmp
add
int
lret
int
xchg
out
repnz
loop
xabort
cmpb
cmp
cld
fucomi
vpavgb
out
fcomip
xchg
xchg
out
les
rcl
fdivl
leave
cmp
lret
rcr
test
fdecstp
loopne
sti
push
cli
in
mov
shr
out
fcom
test
jmp
xlat
neg
clc
mov
neg
addl
out
loop
rcl
cli
cs
out
rcr
loop
fdiv
mov
call
in
lret
xchg
aad
fadd
out
fdiv
ss
int
cmc
loopne
shl
sti
out
fadds
jecxz
ljmp
lock
lret
aad
loopne
out
ret
xchg
ffree
stc
mov
in
xchg
jecxz
repnz
xor
fadd
call
xlat
cld
fadd
fld
inc
jecxz
fucomip
mov
icebp
jmp
xor
out
cmc
aam
sti
cmpl
cli
add
fsubr
mov
xchg
xchg
ret
sar
cmc
cli
cmp
cld
std
jecxz
xor
rcr
roll
loopne
div
enter
lock
cmp
fcomip
cmp
rcr
test
out
stc
nop
lret
xchg
in
test
ss
fcmovnbe
cmp
ret
shl
xor
cld
lret
decb
fstp
loopne
jmp
lret
fmul
cmc
int3
adc
adc
fdiv
jmp
in
test
iret
ror
int3
xor
cmp
cmp
repnz
jmp
ret
sbb
in
xchg
out
into
cld
lock
xchg
in
fprem1
shr
hlt
jmp
icebp
int
neg
shl
ret
jmp
mov
out
addb
cmp
fsub
loope
loope
fsub
rol
repnz
stc
stc
jecxz
int
jecxz
ficoms
lock
in
std
in
xchg
into
mov
nop
xchg
fsub
lret
rol
jmp
int3
hlt
int
fadds
mov
sbb
mov
add
cli
jbe
mov
mov
jmp
rcl
into
test
mov
lea
push
jbe
jg
fiaddl
jle
call
lock
aad
shr
rcl
ds
jecxz
stc
cli
loop
clc
cmc
mov
mov
ljmp
call
cmc
repnz
loop
test
jecxz
flds
ljmp
jmp
shl
cmp
ss
cld
rcl
sti
roll
out
fdivrp
ficoml
enter
xor
shr
fistpll
loopne
loope
jmp
jmp
in
xchg
nop
call
ror
cmp
out
cmp
repnz
std
roll
ret
in
testl
ror
lret
stc
idivl
cmp
rolb
ret
fsub
incl
hlt
lret
mov
ss
in
jmp
cmc
fdivp
repz
fdiv
jmp
mov
lret
imul
aam
jecxz
aad
cmp
cld
loopne
iret
cmp
loope
rcl
decl
test
hlt
into
std
into
into
cmc
in
cli
in
iret
icebp
sar
loopne
iret
rcr
icebp
in
xlat
fld
stc
cld
std
fmuls
jmp
jecxz
enter
cmp
loopne
in
loope
lock
xchg
decl
mov
cmp
xlat
cmp
fneni(8087
loope
ret
fdivrp
xlat
icebp
add
mov
out
test
hlt
call
jmp
enter
xor
vpmuludq
aad
les
loopne
xchg
mov
sar
sti
cmp
ljmp
leave
idivl
mov
int
loop
shr
repnz
shr
in
in
out
cmp
adc
ret
aam
test
loop
nop
addl
out
stc
fmulp
lret
sub
sar
fiaddl
rcll
xor
fldz
faddp
aaa
stc
cmp
hlt
into
mul
mov
mov
enter
aad
in
fadd
lock
testb
out
testb
loop
rcl
jmp
call
repnz
cli
hlt
ds
mov
sub
sar
repz
into
fcomip
cmp
vpandn
loope
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
mov
dec
add
fiaddl
jle
in
fmul
ljmp
xchg
aad
repz
ljmp
rcl
cli
repz
call
in
in
enter
loopne
out
in
shl
xlat
out
in
fdiv
loop
cmp
repnz
into
int
test
loope
int
cmp
imul
jmp
in
cmp
loope
lock
mov
repz
in
iret
fsub
repz
jecxz
bnd
out
aaa
jmp
aaa
call
out
into
dec
ret
mov
mov
test
rcl
rcr
sub
into
out
cli
shl
lret
in
jmp
rcl
ret
ret
fdivr
ljmp
out
mov
cmc
ret
in
int3
leave
cmp
and
xlat
aam
sbb
stc
sub
in
nop
xchg
rorl
fldl2t
in
fucomi
repz
shl
out
loop
loopne
fsubp
loope
lret
mov
mov
out
fnstcw
div
repnz
in
in
ror
aad
jmp
jecxz
cld
in
int
leave
into
xor
aad
icebp
sar
hlt
cli
mov
xchg
std
mov
xchg
fdivrp
stc
out
cs
rcr
loope
cmp
fcomip
call
enter
in
xchg
aad
cld
cli
call
cmc
sar
stc
testl
lret
mov
shr
iret
fcom
repnz
fst
repnz
int
loopne
out
fdivp
jmp
std
into
into
mov
mov
stc
sti
fxch
repz
out
test
xlat
decl
jecxz
out
xor
fcmovne
rcr
cld
repnz
cmp
icebp
cmp
cmc
incb
fisttps
aas
aad
ss
cmp
lret
in
xlat
ss
add
xlat
aam
stc
fdivr
mov
int3
int
fst
aas
aaa
out
repnz
ljmp
faddp
jmp
cli
jmp
cld
std
xchg
idiv
jmp
test
loope
fcomip
cmp
test
mov
xchg
ljmp
cmp
or
jecxz
enter
ljmp
repnz
div
out
out
int
aaa
icebp
repnz
cmp
cmp
jge
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
sub
scas
pushf
jg
fiaddl
jle
std
clc
fucomp
loopne
imul
shr
rol
test
repnz
cld
in
icebp
shl
cli
shr
in
aas
fiaddl
stc
in
out
xchg
lret
shr
shrb
repz
aaa
ss
cld
cmp
sti
iret
idiv
test
icebp
rolb
out
std
in
mov
les
xor
aas
aaa
loope
in
hlt
xchg
out
test
out
int
int
decb
sub
hlt
cmp
rolb
mov
call
and
aad
aad
xor
incl
aam
adc
in
addl
xchg
xchg
jmp
repnz
lret
call
out
ret
shl
neg
cli
hlt
ljmp
sub
aad
ret
sti
sub
sar
loope
ss
aad
cmp
xchg
and
jmp
xchg
icebp
call
out
cli
cmc
cli
aas
shl
fdiv
out
call
sti
shl
and
hlt
cmp
ds
jmp
fxch
iret
test
ffree
loopne
lret
filds
out
rcl
ljmp
out
fiadds
faddl
sti
xlat
addb
out
xor
in
repnz
cld
jmp
stc
fiaddl
movb
hlt
lret
into
icebp
ss
in
cmp
icebp
repnz
jecxz
sar
shl
test
xchg
aas
orl
ficoms
iret
jmp
rcr
fdivp
fstpt
les
mov
fisttpl
clc
rcr
leave
out
cmc
sar
aas
hlt
aad
cmc
cmp
aad
faddp
cmp
mov
test
adc
lret
aam
cmp
cmp
fptan
loope
cmp
xchg
orb
leave
jmp
jmp
fst
out
cld
cld
cmp
ret
cmp
aam
sti
loopne
jmp
jmp
xor
aam
iret
cmp
xor
xor
cmp
in
clc
in
loop
out
lea
shr
out
fsubr
aad
xor
cmp
movb
std
bnd
loopne
in
ss
int
aam
aas
ds
xor
jmp
iret
ret
rcr
fxch
in
incl
push
push
or
jle
hlt
hlt
icebp
loopne
loope
stc
aad
mul
std
test
fildl
in
int
sub
leave
cmp
not
cld
repnz
icebp
std
enter
int
cld
icebp
cli
shl
repz
hlt
ljmp
fdivr
in
icebp
shr
testl
cmp
repz
xor
ds
repz
fcmovb
fisttpl
xchg
or
rcl
cmp
call
int3
xor
iret
addl
int
call
fcomip
in
fmul
out
xor
ss
aad
into
fnstcw
aad
out
imul
stc
stc
lock
out
std
lock
xor
sti
cmp
ret
not
test
mov
clc
fsubr
iret
mov
repz
adc
xor
in
repz
lret
loope
cmc
in
ds
les
leave
jecxz
jmp
icebp
bnd
aaa
std
xor
cmp
loop
aam
idiv
fcmovbe
faddp
clc
xchg
call
in
repnz
in
shll
clc
shl
cmp
lret
xor
in
test
incb
jmp
xor
xor
jmp
std
aaa
xor
not
shl
rcl
mov
out
mov
in
mov
xchg
fcom
cmp
jecxz
cmp
xor
loopne
rcl
jmp
sbb
repnz
xchg
aam
icebp
cmp
test
fsubr
cli
aam
out
les
cld
in
lret
mov
icebp
rol
call
ret
int3
xor
repnz
xor
xor
in
xchg
lock
in
out
xor
fidivrl
ss
icebp
flds
out
fucomp
into
nop
out
call
xor
cld
int
xlat
int3
aam
cmp
out
aad
cld
aam
mov
and
std
loope
lret
hlt
shl
ljmp
into
aas
aad
int
jmp
in
nop
mov
jecxz
in
fsub
fcomp
in
cld
loopne
fcmovne
add
clc
in
int3
lret
sti
fcomip
loope
int3
rcr
in
shl
aad
rcr
and
ret
jmp
or
out
mov
aad
aaa
xor
xor
imul
add
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
into
fdivr
addl
cmc
clc
iret
mov
shl
xor
lret
rcr
std
in
jmp
int3
rcl
lock
aad
aam
int3
sti
xchg
loope
repz
cmp
fcomi
jecxz
cmp
fsubp
sti
fildl
in
lret
jecxz
shr
cmp
sti
fldlg2
loopne
in
out
ftst
lock
test
sbb
sti
mov
rol
jecxz
icebp
xor
icebp
repz
shl
rol
sti
aam
les
into
mov
out
in
int3
repz
cmpb
mov
loopne
std
shl
rorb
lock
xor
in
out
cld
ret
rcr
shr
leave
ljmp
addl
loop
int3
clc
fstp
ljmp
hlt
ds
aam
faddp
ljmp
fsubr
fcmovbe
int3
ds
in
fcmovnbe
imul
aad
fstp
out
jmp
std
int3
lea
cmc
xor
loopne
xor
rcl
jecxz
addb
mov
jecxz
or
aas
call
leave
fcmovbe
repnz
cli
roll
aam
ret
test
orl
xor
repnz
cmp
fabs
adc
fildl
sti
fiaddl
int3
aad
jmp
out
cmp
stc
xlat
icebp
in
neg
ljmp
in
fstl
in
call
ror
hlt
aad
in
std
cli
icebp
leave
adc
mov
jmp
cmp
repz
clc
stc
ret
repz
clc
rorl
leave
sub
aad
int
ljmp
loop
stc
test
inc
out
push
out
xchg
call
cli
cmp
fmul
fcmovbe
icebp
clc
ret
shl
stc
hlt
lret
aam
test
leave
movl
cmp
cmp
jmp
lock
xor
shl
ret
loopne
and
subl
aam
iret
fucomi
cmp
xor
rcl
mov
iret
test
hlt
jmp
aam
in
xor
cli
jmp
leave
rcr
fcomp
cmc
pop
fildl
xchg
mov
fiaddl
jle
xor
ljmp
rolb
add
testl
sub
leave
xlat
clc
neg
fldz
jmp
cli
loopne
loop
mov
lock
mov
test
ljmp
jmp
sti
test
out
cli
out
ret
xchg
in
xchg
icebp
xchg
das
shl
std
out
cmp
ds
xchg
ljmp
shr
lock
xchg
out
iret
fsubr
ljmp
sti
incb
fisttpl
xchg
out
aaa
jmp
call
aam
out
repnz
roll
ret
fimull
int3
sub
jmp
cld
ror
ds
loopne
fsub
test
test
addb
jmp
int
aam
ret
sti
repnz
in
fsub
jmp
jmp
xchg
test
hlt
out
shl
fildl
aad
iret
mov
adcb
repnz
in
cmp
div
cmp
cmc
icebp
cmp
rol
mov
into
test
ret
das
loop
cmp
shr
rcr
aam
out
cmp
ret
out
and
clc
cld
int
lret
xchg
xchg
in
imul
shll
aam
repnz
repnz
hlt
mov
mov
fdivp
out
jmp
xor
out
cmc
lret
cmp
into
in
xchg
repnz
addl
in
jmp
aad
hlt
jmp
aas
sti
test
fcomp
mov
enter
xchg
into
in
xor
cmc
ret
lret
xor
out
cmp
frstpm(287
orl
mov
repnz
jmp
das
divb
stc
ret
shl
xlat
xchg
mov
fsubrp
loope
xor
clc
cmp
out
ss
in
shl
xlat
out
aad
shr
std
mov
lret
out
shl
cmc
int3
xor
divb
aaa
int3
in
int
iret
ds
aam
repnz
out
aad
ror
lock
lock
aad
stc
out
xor
rol
in
aam
loope
fadd
mov
mov
leave
xchg
lret
shl
add
jmp
rcl
iret
aam
aad
sarl
cmp
dec
push
cmpsb
jg
fiaddl
jle
in
loop
ss
cmp
cmp
jmp
cmp
cli
repz
ret
fst
test
icebp
cmp
xlat
out
xor
filds
cld
shl
fst
lret
fxch
xchg
rorl
out
aam
lret
out
or
and
sarl
lret
stc
in
rclb
into
cmpb
cmp
lock
cmp
rcl
ret
shl
cmc
xchg
testl
loop
in
out
cmc
sarb
sarb
mul
clc
cld
loop
xchg
loopne
filds
decb
lret
divb
into
icebp
cmc
int
ss
cmp
leave
ljmp
flds
fcmovnu
iret
sti
out
sub
imul
fcmovbe
cld
into
fnstcw
hlt
clc
repz
aam
stc
stc
fmull
test
in
iret
std
xor
xor
sti
clc
cld
div
and
in
icebp
fmull
icebp
leave
xor
cs
call
loope
cld
test
idiv
test
xchg
in
ljmp
fmul
jmp
hlt
aas
in
mov
std
and
fcmovb
jmp
orl
jecxz
aas
jmp
loop
fadds
icebp
lret
into
repnz
hlt
cli
loop
icebp
cmp
aas
cmc
into
jmp
fdivl
rol
shl
fisttpll
movb
ret
lret
fldlg2
xlat
fnstenv
jmp
cmp
ror
call
clc
loopne
fmul
stc
jmp
mov
hlt
cmc
aaa
shr
int
in
cmp
jecxz
jecxz
cmpl
cmp
mov
stc
in
out
out
xchg
aas
loopne
aaa
repnz
lret
fdivp
clc
std
test
icebp
lret
loop
in
in
loope
call
sub
cli
cli
stc
out
cmp
sar
loop
cmp
loop
out
addb
fsubp
hlt
xor
aad
aad
shr
lock
fdiv
icebp
mov
fprem1
aas
test
in
loop
sub
mov
stc
sub
in
fucom
fcomip
ret
cli
adc
xchg
fists
in
imul
aad
xor
rol
loopne
mov
into
ret
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
lds
jb
test
jle
add
rcll
rcl
in
int
cmp
repnz
jmp
fcom
sbb
sti
std
ds
jecxz
lock
fmul
xchg
mov
cmc
cmp
sti
call
repz
cli
ds
shl
mov
out
std
mov
ss
jmp
icebp
div
iret
lock
cmp
rol
fmull
mov
loope
test
in
fdiv
repnz
out
lock
aam
sti
rcl
fucom
incb
fcompp
jmp
jmp
cs
ds
fdiv
fcmove
into
testb
xchg
in
call
xchg
shll
cmp
aad
repz
clc
out
sbb
call
loope
mov
rcll
lret
int
out
std
xor
lock
fcmove
in
call
xchg
rol
xor
ret
cmp
std
jmp
cmp
cmp
in
xor
out
out
fcmovnu
loopne
sti
xchg
cld
mov
in
jecxz
lds
cmp
fdivrs
call
repz
iret
fistpll
or
out
std
out
test
aad
xor
xor
icebp
ljmp
aad
out
out
xchg
in
ret
fisttps
lret
into
cmp
repz
cli
fucomip
xor
repz
leave
lret
xchg
out
fstl
lret
shlb
out
rolb
shl
rol
sar
jmp
cli
out
int
in
aaa
clc
sti
lret
fdiv
lret
into
cmp
sarl
lret
mov
fcoml
xchg
shr
lock
lret
lret
ds
ds
stc
std
xchg
fdivr
fmulp
fildl
mov
xor
fst
ror
repz
addl
decl
sub
shll
xor
test
ror
sarb
aam
aad
std
cmc
ret
cld
fsub
out
lret
enter
cli
xor
cmc
int
cmp
sub
xlat
in
mov
mov
sti
frndint
aam
shl
sar
ret
xlat
rolb
fsubp
fstp
cmp
xor
int3
xor
rcl
fdivr
cmp
aam
not
sbb
imul
jmp
rol
lret
ror
int
aam
dec
andl
push
stos
jg
fiaddl
jle
mov
dec
iret
mov
out
rol
xor
aaa
cli
in
in
fdivrl
cmc
loope
shl
cli
xchg
fst
movb
roll
sub
in
lock
in
ds
jecxz
jecxz
mov
cli
test
cmp
xchg
in
lret
lret
out
int
jmp
stc
repnz
cmp
ds
test
in
test
sar
jmp
clc
cli
cmp
and
ret
cmc
cmc
cld
fmuls
ror
clc
loop
xor
fcmovnbe
lret
call
cmc
aam
loop
aam
in
test
loop
in
std
xchg
iret
xor
les
into
cli
fnstcw
loope
repz
shl
enter
shr
adc
jmp
aaa
cmp
repnz
aam
loope
fiadds
fiadds
shl
mov
in
lock
neg
in
shl
loopne
stc
les
lret
cld
stc
in
aam
call
int
out
enter
out
iret
in
out
in
loopne
div
repz
loopne
fabs
mov
int
xchg
repz
jecxz
in
ss
cli
xlat
xlat
in
sti
lds
rcr
jmp
hlt
aad
out
int
aas
or
in
hlt
addb
out
fdivr
nop
sar
into
xor
cmp
cmp
rcr
into
fiadds
aam
test
dec
in
test
out
aad
jmp
xor
lock
add
ficoml
xchg
jmp
xlat
xor
cmp
xor
cmp
xlat
in
addl
int3
out
rorb
test
in
shll
enter
lret
fcomi
adc
jmp
jecxz
fucomp
mov
lret
rcl
loopne
into
sti
enter
cmp
add
ret
filds
fdivrp
test
shlb
cmp
sti
in
sarb
incb
loope
repz
mov
sbb
loope
cmc
aad
fcom
shl
mov
cmp
test
aad
in
leave
sti
fmuls
loopne
in
into
out
icebp
cmp
lock
fstpt
jecxz
enter
xlat
jbe
jmp
int
lret
lret
int
mov
call
jle
add
jecxz
lret
out
xchg
into
jmp
rol
repnz
cli
cmp
fadd
cmp
div
fcmovnbe
fxam
in
xchg
cld
jmp
iret
loope
iret
into
repnz
cli
call
ret
cli
fildl
in
xor
in
divb
xor
ds
in
iret
ffree
fsub
clc
icebp
test
xlat
cld
in
cli
shr
out
xchg
nop
in
into
xor
xor
fcmovnu
hlt
xlat
addb
jmp
enter
mov
test
addb
call
lock
in
clc
ret
in
xlat
hlt
clc
out
fsubr
lret
lea
xor
out
ss
in
iret
shl
sti
dec
cmp
mov
nop
jecxz
adcb
ss
div
int3
cmc
idiv
roll
test
fxam
xlat
fldlg2
incb
xor
out
fcmovnbe
rcr
testl
sti
neg
mov
aad
jmp
cmp
jmp
lock
cmp
repz
out
ljmp
rcll
out
cmp
lret
call
aas
repz
cmp
cmp
test
mov
int3
in
loopne
lea
out
xor
cmp
cld
cmp
rcl
std
cmpl
xchg
jecxz
loop
lea
fincstp
lds
rcr
sti
icebp
in
fnop
fchs
mov
mov
xchg
jmp
in
leave
rcr
int3
int3
ror
cli
incb
test
out
cli
test
jmp
fstl
cmp
lret
sti
aaa
stc
test
out
out
loopne
loop
out
fists
leave
icebp
repnz
in
icebp
repnz
in
mul
hlt
cmc
testb
test
jmp
cli
loop
ror
shr
xor
int3
lret
in
enter
cmp
loope
fmulp
cld
test
lret
mov
loop
in
divb
lret
in
cli
loope
int3
fsub
filds
in
loopne
mov
int3
loopne
cld
test
out
hlt
out
loop
xor
int3
idivb
repz
loop
idiv
aas
xchg
jmp
lret
ror
das
icebp
cli
leave
cmp
int3
sti
in
cmp
pop
jmp
ror
ror
aad
inc
push
cmp
scas
jg
fiaddl
jle
xchg
loope
nop
nop
sti
leave
loopne
loop
jmp
jmp
jmp
lock
sar
and
iret
fisttpll
xor
lock
out
out
cmc
icebp
shr
out
rolb
sti
ret
and
icebp
out
xor
jecxz
lock
out
rcl
loope
loopne
repz
fldl2t
inc
in
decl
icebp
into
hlt
clc
cli
lret
lock
fcmovnu
fdivrs
icebp
aam
cmc
mov
xchg
sub
xlat
cmp
repz
cli
filds
shr
jecxz
lret
out
out
loope
cmc
loop
ljmp
cmc
sarl
cmp
cmp
fcmovne
in
or
xlat
ljmp
lds
cli
fld
hlt
ror
cmp
aam
iret
xchg
loopne
out
xlat
int3
out
jmp
lret
lock
jmp
shl
cld
cmp
repnz
xchg
std
std
in
dec
xchg
and
shr
rcr
inc
icebp
cmp
xlat
out
hlt
in
shl
fistl
das
ss
shl
aaa
call
icebp
lret
rcr
repnz
aad
xor
xchg
xlat
lret
into
adc
out
shr
hlt
xor
call
icebp
cmp
cmp
ret
aad
int3
fsubrp
loop
repz
xchg
lock
repz
out
aas
cmp
cmpl
ret
aad
test
into
adc
ss
sub
fstp
icebp
hlt
xor
stc
loope
iret
fadd
rcl
jmp
cld
mov
in
in
jecxz
in
aam
shl
jecxz
into
out
out
cli
rcr
fcompp
loope
sar
lds
testb
loope
in
lret
out
fucomp
cmp
in
aas
not
ds
rol
lock
loop
lret
in
repnz
out
xor
cmp
cmp
cmp
rolb
call
in
loop
xchg
fmulp
shr
call
fcmovbe
aam
in
into
cmp
test
loopne
clc
fmull
mov
cmc
shrl
xor
stc
shl
sar
test
aad
add
clc
test
mov
out
in
mov
fdiv
xor
cmp
cli
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
pop
cltd
xchg
push
jg
pop
add
loopne
jmp
orl
loop
jmp
test
repz
aam
fcmovnb
ds
sti
fucom
aam
aam
shr
in
out
std
jmp
shrl
repnz
std
xor
mov
jecxz
loope
lea
mov
xor
enter
addb
enter
jecxz
sub
repz
out
repz
fsubr
idivl
neg
icebp
cmc
enter
int3
xchg
iret
icebp
cmp
lret
std
jmp
shl
in
fucomip
xor
cli
lret
into
jmp
ret
aam
ret
loope
out
out
cmp
out
fisubrl
xor
xor
cmp
idivl
flds
loopne
out
out
fnstenv
cli
jmp
lock
test
test
stc
out
out
jmp
adc
xor
lock
leave
cmp
out
divl
fistpll
test
out
iret
jmp
idiv
in
clc
fiaddl
jmp
idivl
shl
jmp
aas
in
repnz
icebp
call
enter
std
les
fcmovnbe
in
call
sar
repnz
cmpb
or
bnd
out
clc
sub
in
in
cmp
fcomi
add
cld
test
jmp
fcmovne
mov
cmp
ret
clc
in
clc
out
aaa
out
cmp
in
stc
fldl
loope
sti
mov
test
repnz
out
aaa
cmp
vpsubw
loope
xor
sti
shr
test
ret
fsubr
xchg
xchg
cs
xlat
int
imul
and
test
testl
cmp
mov
ljmp
ds
in
test
hlt
loopne
cmc
call
or
into
in
iret
xor
ret
sub
shr
out
aas
jmp
call
xchg
fdiv
in
clc
out
in
enter
shr
in
std
aam
cld
mov
sub
out
int3
out
divl
in
into
lret
loopne
aam
cmp
ret
sti
out
testb
repz
xor
into
in
sar
xlat
fdivrl
loopne
loop
jmp
stc
ret
ljmp
fndisi(8087
sar
xchg
aaa
in
lock
ljmp
std
int
sbb
cmc
fdivrp
leave
out
xchg
out
out
ror
int3
out
jmp
sar
ds
loope
xchg
loop
cmc
in
xlat
mov
hlt
jecxz
loop
xor
int3
sarl
out
aam
hlt
cmp
aad
call
in
mov
xchg
cs
cli
in
ss
push
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
inc
mov
jb
mov
jle
add
aaa
fdiv
repnz
ret
xchg
out
jmp
cli
fsubr
ljmp
xlat
das
hlt
idivl
adc
loopne
hlt
in
lret
stc
ljmp
sub
repnz
cli
xlat
aam
fcomip
cmp
roll
std
test
out
lret
aam
cli
aad
rcl
lock
icebp
cmpb
div
call
or
call
fdecstp
cli
std
ror
sbb
roll
fmulp
in
out
cld
clc
int
xchg
and
test
lock
cmp
sar
cmp
orl
icebp
shl
sub
out
fcmove
imul
cmp
loope
cmp
filds
lock
in
cmc
int3
out
cmp
xor
cmc
ss
loope
cld
lret
loope
out
fsub
int
orl
sar
repz
ds
in
lock
stc
nop
fiadds
ror
hlt
cmp
cmp
aad
ss
lret
aam
aad
mov
out
leave
out
jecxz
out
aad
lret
out
out
fnstsw
cmc
aas
cmp
cmp
leave
out
in
std
in
dec
mov
in
int
int3
cmp
cmp
hlt
cli
addb
lret
sbb
mov
out
xor
cli
out
aam
icebp
jecxz
icebp
cmp
fld
ret
std
mov
ret
fsubp
shl
in
ljmp
out
out
aam
rol
hlt
cli
out
orb
test
in
xor
std
sti
sbb
clc
lock
mov
ljmp
in
into
cmc
loope
call
aas
aad
int
aas
and
testl
in
call
lret
stc
icebp
cmpl
loope
hlt
or
in
test
filds
ror
aam
cmp
cli
cmp
lret
cmp
lock
rcl
ds
cld
enter
mov
int3
in
ljmp
fcmovbe
iret
xlat
leave
lret
sub
jecxz
ljmp
aad
stc
leave
repz
repz
lock
repnz
movb
nop
ror
call
xor
cmp
shl
loop
out
or
out
mov
sbb
xlat
lret
enter
in
int
loopne,pt
out
xchg
hlt
mov
jecxz
lock
fldl
xor
sub
out
xor
cld
loop
loopne
jmp
stc
addb
call
xlat
cld
cmc
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
sbb
add
jle
add
enter
jmp
stc
hlt
fcmovb
in
idiv
jmp
lret
lock
in
loop
divb
into
jmp
fdivl
aad
ror
cld
cld
loope
vpaddusb
out
sbb
mov
int3
shl
xor
xor
jmp
xorb
xchg
test
mov
loope
lret
incb
xor
jmp
call
fstpt
hlt
rcl
cmp
clc
cmc
aas
leave
lret
in
into
in
loopne
enter
repnz
iret
fdivrl
in
repnz
repz
clc
lock
lret
xchg
icebp
and
out
into
hlt
leave
xor
fcmovnb
leave
sar
and
test
call
out
out
iret
cmp
xchg
iret
enter
jecxz
out
cmp
cld
int3
ret
clc
mov
in
lret
mov
fsubr
leave
call
in
ror
cld
cmp
testl
cld
mov
fsub
in
in
ljmp
cld
std
fidivl
repz
icebp
orb
mov
ljmp
jmp
in
icebp
ljmp
iret
call
clc
in
icebp
test
cld
mov
call
loopne
int
ret
repz
mov
in
out
out
mov
std
out
out
sub
sti
cmp
aad
fildl
mov
out
in
mov
iret
out
icebp
repnz
fadds
fsub
jmp
stc
out
fmulp
rorb
ljmp
cli
loop
roll
clc
incl
iret
fcmove
sti
lret
ljmp
in
aaa
neg
clc
cmp
out
enter
call
xchg
ljmp
cmp
fsub
xor
cmp
hlt
clc
into
sbb
stc
imul
and
mov
xchg
xchg
das
int
xor
in
fildl
and
loop
cld
ret
leave
jmp
std
mov
fcom
cmp
iret
cmp
cld
lret
shl
fsin
clc
leave
aas
fildl
nop
shr
xor
lock
rcl
xlat
test
fsub
xchg
testb
fcos
xchg
lock
leave
out
lock
iret
xor
lret
out
lret
cld
sti
in
cmc
aam
leave
cmp
repnz
ds
stc
cmp
into
fcmovu
loope
and
cli
ljmp
shl
lret
fxtract
fidivrs
cmp
cmp
call
mov
mov
test
loop
rcr
enter
enter
in
fcmovb
flds
fsub
mov
fucomi
iret
mov
out
xor
jmp
ret
ror
aad
and
jno
jmp
mov
jle
xor
call
not
fprem1
in
icebp
clc
aad
repz
loope
rorl
lock
sti
cmp
out
int3
stc
in
xlat
in
cmp
std
cli
test
jecxz
rclb
call
lret
in
lret
test
mov
cli
mov
lret
rorl
lock
ss
enter
inc
std
jecxz
mov
idiv
leave
jmp
das
ret
jmp
clc
int
int
rcl
cmp
sti
sub
idiv
loope
out
in
cld
call
int
out
ljmp
int3
ret
aas
fcmovnb
cld
shl
test
lock
in
rcl
ljmp
repz
cld
vpaddq
out
jmp
out
std
mov
rcl
in
cmp
icebp
int
out
aad
addb
fmulp
in
jecxz
add
xor
cmc
out
ror
cmp
aad
out
mov
std
lret
into
rclb
mul
fxch
cmc
int
stc
cmp
clc
cli
out
sar
std
sub
out
xchg
filds
ljmp
lret
jecxz
xlat
out
fadds
cld
fsubp
mov
repz
xor
xor
lret
push
fld
cmp
neg
mov
ljmp
cs
out
aad
not
aam
fnstcw
test
shl
clc
jmp
mov
sub
sub
cli
aad
les
mov
in
out
fimull
jmp
vshufps
imul
iret
aad
fsubp
shl
jecxz
aad
and
out
jmp
shl
xlat
ret
rcl
fdivr
out
rolb
rcl
loop
int3
mov
enter
out
enter
fidivrl
int3
cmp
std
cld
out
lret
fcmovu
enter
test
leave
in
in
int
cmp
cmc
aas
ret
out
loop
repz
and
test
cmp
fcmove
lock
fcmove
repnz
in
xlat
adc
jmp
ljmp
repz
aaa
jecxz
cmp
leave
testl
lret
leave
clc
mov
icebp
in
xor
leave
ss
cli
in
iret
xor
ret
cmp
test
test
lds
xor
repnz
sti
lret
sub
stc
in
fimull
cli
jmp
jmp
lret
out
repz
ret
rcl
shl
test
rcr
cld
loope
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
push
and
jg
pop
add
cs
hlt
cmc
test
int
rol
ftst
call
mov
fmull
lret
lock
stc
out
sar
fadds
test
sbb
out
xchg
ss
aad
loope
sar
flds
jecxz
clc
lret
mov
ljmp
cli
lret
icebp
hlt
cmp
repz
mov
incl
repz
rorb
shr
xor
out
fmul
cmp
xlat
loop
test
loope
xlat
leave
flds
xchg
jmp
call
sarb
jmp
aam
fdivr
repnz
int
loopne
std
sbb
int3
test
cmp
aam
imul
std
cmp
roll
loopne
fmulp
in
std
hlt
xchg
leave
cld
int3
cmp
cmp
not
std
fucomp
lret
test
mov
mov
in
inc
xlat
loope
cmc
xor
iret
ret
les
std
mov
int3
mov
faddp
loopne
rcr
ret
jecxz
aas
fildl
lret
movb
iret
lock
jecxz
enter
jmp
loopne
rcl
fcmovnu
aam
out
fcmove
filds
jmp
clc
stc
out
stc
int3
shl
repnz
ret
xchg
iret
in
div
int
cld
call
cli
int3
int
test
jecxz
loop
addb
test
in
nop
xchg
xor
ljmp
rcr
aad
lock
std
stc
div
mov
or
cmc
aam
ror
ret
test
in
into
add
leave
ljmp
test
idivb
in
fmul
clc
leave
fdiv
stc
std
ret
out
fsub
aam
or
inc
in
jmp
and
aam
aaa
fadd
cld
out
std
sti
aam
aas
iret
lock
loopne
fcmovnu
orl
aad
lret
cmp
jmp
sarb
in
xchg
loope
ljmp
call
cmp
out
iret
jmp
repnz
stc
test
shl
hlt
fimull
xchg
lret
rol
xor
out
std
cmp
aaa
leave
adc
xlat
in
loop
jmp
test
mov
xchg
lret
out
loop
cmp
fprem1
cmp
out
cmp
and
cld
fcmovb
jmp
cld
ror
mov
loope
not
in
cmp
out
lock
cmc
aam
rolb
frndint
stc
fildl
incl
xor
fsub
into
out
ret
inc
incl
jmp
fcomip
cmp
movl
jmp
aas
aam
aas
aad
iret
aam
adc
mov
push
pop
push
cmp
jle
add
in
mul
clc
in
repnz
xor
lret
aad
out
cld
stc
cli
xchg
int3
fiadds
aam
icebp
jecxz
out
out
icebp
into
stc
rcl
cmp
xor
mov
mov
testb
xor
ljmp
xor
aaa
cld
lret
cmp
rcl
loope
mov
ret
les
stc
xor
fdiv
out
ss
xor
sti
jecxz
repnz
stc
jmp
mov
test
rcl
hlt
xor
int3
cli
int3
int
int
xor
test
cmp
clc
mov
xchg
in
test
imul
aad
cli
xor
out
div
rcl
incb
enter
cld
mov
xor
xor
iret
xor
rcl
fmul
cmp
aad
aad
not
leave
in
jecxz
fimuls
ror
aam
shrb
fdivr
stc
cmp
shl
incl
fiaddl
lret
ljmp
int
cmp
into
stc
ror
fdivrp
cmp
shl
aad
out
fcmovne
mov
out
iret
out
shr
repz
cmp
cmp
fdivr
aam
std
cld
out
in
test
mov
fmuls
loopne
lret
lret
into
sti
fdivrs
adc
cmp
cli
fdiv
mov
aad
fucom
lock
lock
cmp
xor
cmp
iret
xlat
leave
clc
xor
sar
aam
mov
cmp
into
repnz
ljmp
fistpll
cld
sarb
and
stc
cmp
loop
jmp
mov
rol
loopne
iret
cmp
out
stc
into
icebp
loope
fisttps
jmp
xchg
cmc
hlt
out
rcr
ljmp
sbb
icebp
mul
lret
loope
mov
repnz
jmp
fucomi
xor
aam
roll
movb
int
in
jmp
int3
in
stc
leave
fmulp
aad
cmp
cli
and
xchg
sti
jmp
out
in
mov
in
int3
cmp
rcr
cli
repz
fcmovb
std
aam
loope
mov
loopne
aad
lret
xor
clc
ror
repnz
leave
xlat
shr
sbb
loop
loop
and
addl
ss
xorb
iret
stc
loope
call
icebp
addl
into
in
shr
enter
xor
aas
sarb
jmp
orb
jecxz
rcr
stc
ror
out
cmc
cmp
cmp
enter
cld
mov
fsub
mov
fsubrp
out
out
loop
xor
repz
fidivrl
rcl
or
orl
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
nop
leave
fmul
xchg
shlb
sub
sti
in
sar
int3
mul
into
fcmovne
repz
test
in
int3
mov
xchg
out
loope
loop
out
cmp
cld
out
loopne
std
cmp
adc
repz
adc
nop
leave
cld
int3
test
out
pushl
in
aaa
xor
into
in
sti
loop
mul
test
or
cli
fcmove
in
int3
std
rcr
mov
fdiv
int
shl
idiv
cmp
sti
out
fcmovnu
addb
out
call
int
cld
cmp
xor
aad
fidivrl
cmc
addl
mov
aaa
shl
cmp
shll
xlat
cmp
repz
mov
test
rorb
cmp
std
out
sti
hlt
clc
rol
sti
in
fiadds
in
in
rol
icebp
in
clc
aaa
xor
in
div
xlat
fadd
cmp
cmc
jecxz
ljmp
ror
call
aaa
aad
ljmp
push
xor
cmp
les
lea
into
out
das
imul
ss
repz
xor
ret
fucomp
leave
mov
xchg
xchg
dec
decb
sti
ljmp
clc
loop
cmc
cmp
div
int3
cli
test
loopne
xlat
jecxz
out
iret
call
cmpl
call
test
ljmp
lock
ss
xor
out
fcmovnbe
lret
cmp
stc
cmc
jmp
cmp
out
ror
jecxz
ss
aam
shl
ljmp
jmp
in
in
mov
in
and
in
leave
lock
in
repz
in
loopne
test
or
sti
cmc
sub
and
filds
leave
stc
cmp
mul
jmp
lock
fcmovu
neg
xor
mov
cmp
loope
jecxz
cmc
shll
div
enter
ret
ret
fcmovu
in
call
xchg
jecxz
idiv
sub
ss
in
adc
cld
sar
mov
addb
in
cmp
lock
faddp
lret
aam
ret
test
jmp
fucom
out
icebp
in
popl
repnz
int
aaa
out
repz
in
cli
aam
aam
repnz
sti
orb
xchg
out
int3
cmc
out
leave
out
cmp
ret
fildl
in
in
out
fdivrp
into
ffreep
stc
jmp
ss
xlat
into
ror
jecxz
xchg
fdivrp
test
out
ficoms
sti
int
out
out
aas
sti
jecxz
loope
cld
iret
fadd
mov
cld
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
jmp
lock
iret
sub
xor
icebp
out
loop
lock
aas
ret
int
cld
in
in
decl
in
iret
imul
fcomip
fnstcw
mov
or
movl
int
ss
clc
cmp
ret
shl
mov
fdiv
mov
fdiv
cmp
aam
sub
add
xlat
mov
fmul
cli
mov
jmp
xchg
mov
loope
ljmp
ss
stc
repnz
leave
mov
mov
loope
out
cmp
fcmovne
rcr
cli
faddl
mov
in
out
ret
jecxz
xchg
iret
in
ss
sub
sar
loope
clc
cli
test
loopne
fucomp
popl
or
xor
xor
sarl
ror
fcmovu
out
loope
testl
out
xchg
shll
cmp
aam
leave
xor
fdiv
hlt
loop
cmpb
ret
test
test
mov
xchg
iret
aad
xor
aad
aad
call
stc
cld
fdecstp
icebp
fsubp
ljmp
sar
lock
cs
cmp
imul
cmp
in
in
fcmovbe
xchg
xchg
orl
hlt
ror
ljmp
cmp
out
fabs
nop
in
xchg
mov
int
clc
aam
fdivr
cmp
ret
fninit
test
xchg
mov
dec
shr
xor
aad
shlb
cli
idiv
fcmovnbe
cmc
loop
aam
mov
loopne
in
mov
aaa
int
shlb
clc
add
xlat
lret
mov
addb
xchg
into
rcl
call
jmp
icebp
sar
clc
aam
jmp
cmc
out
mul
std
std
into
fstl
in
div
in
enter
aam
std
xlat
bnd
cld
clc
out
sti
mov
sar
lret
test
nop
in
shll
jecxz
ljmp
out
idiv
les
call
enter
xchg
aas
rcr
jmp
leave
leave
out
into
jmp
rol
neg
icebp
ds
loop
loopne
out
xchg
out
aad
loop
jmp
lret
aad
rcl
rcr
ret
mov
jmp
int3
aam
cs
leave
ror
out
fmul
aad
lret
out
xlat
loope
cld
adc
xchg
xor
in
xchg
loopne
ss
xor
clc
in
out
hlt
rcl
not
in
fildl
or
cmc
repz
cmp
leave
shr
xor
std
icebp
stc
rcl
aas
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
jg
pop
push
dec
jg
pop
add
xchg
fsubrp
in
div
sub
ret
fxch
hlt
in
sar
adc
fiaddl
ror
addl
jmp
cmc
lock
fdiv
sarb
cmp
repnz
ljmp
mov
lret
repz
ljmp
cmc
loop
ds
in
in
lret
decl
int
enter
cmp
lret
icebp
fdivr
xlat
add
sti
repz
out
xlat
mov
fisttps
fnstenv
into
leave
out
std
in
rcl
hlt
cmp
fdivr
in
fxch
loop
adc
lret
divb
test
jmp
stc
cld
cld
repnz
jecxz
xbegin
lret
fmull
jecxz
out
aam
aad
fdivrl
aad
cmp
std
enter
jmp
call
aas
divb
int
repnz
repz
rorb
sub
mov
lock
cmp
faddl
mov
cmc
cli
ljmp
loop
icebp
divb
repnz
sti
fucomip
lock
adc
cld
loop
mov
in
orl
mov
out
icebp
into
cmc
xor
lret
jmp
repz
out
std
loop
mov
stc
int3
jecxz
out
mov
ret
aaa
xlat
xlat
fsubp
fcmovnbe
sti
cld
jecxz
push
in
cmp
cli
xchg
nop
in
ljmp
aam
sti
stc
shl
aaa
jmp
inc
mov
out
mov
out
inc
cli
jmp
sub
xor
clc
cmp
ljmp
sar
sar
ret
std
loope
in
rcr
out
xchg
rcll
call
int3
ror
xlat
fucom
jecxz
loope
mov
jecxz
call
xchg
sub
call
das
clc
mul
jmp
xor
clc
mov
fiadds
icebp
xchg
shl
out
lret
lret
jmp
call
ss
aas
xor
test
fiadds
out
aaa
out
aad
out
fscale
int3
les
mov
in
out
orb
call
fst
push
shr
fnstsw
icebp
fdivr
test
enter
std
std
fisttpll
cmp
jmp
xor
idivl
sti
fdivrp
stc
mov
repnz
cmp
in
rcl
repz
sti
lret
cmc
in
loop
in
cmp
sbb
in
into
fucomp
xor
shl
cmp
lret
in
rolb
inc
ret
mov
fsubp
xchg
jmp
cmc
into
cmp
fpatan
sar
lock
jmp
aad
fnstsw
repz
add
scas
dec
jg
pop
add
sarl
jmp
in
cli
xlat
stc
mov
out
int3
xor
rcr
mov
fxtract
cld
fsub
ret
fnstsw
xchg
lret
iret
xchg
in
subl
aad
adc
aas
xchg
mov
int3
int
xchg
fmulp
das
lret
test
jmp
sti
loop
cmp
in
adc
call
lock
jecxz
clc
int3
in
int
in
aas
std
hlt
sti
aam
xor
mov
xchg
loopne
lret
cmp
enter
ljmp
stc
ret
cld
call
mov
std
out
cli
roll
stc
out
ror
icebp
xor
shl
repz
inc
fucomi
cld
adc
in
nop
int
loope
iret
lock
stc
enter
sbb
in
stc
testb
int3
loopne
int
out
out
in
add
fxam
imul
in
xor
repz
xlat
loopne
test
testl
xchg
mov
lret
in
jecxz
out
fcmovbe
rcr
sar
icebp
stc
cmp
aad
sar
jecxz
jmp
jmp
sbb
test
lret
repz
jmp
cmp
jecxz
stc
mov
fcmovu
std
xlat
xchg
enter
movl
cld
fistpll
rcl
jecxz
neg
out
xchg
jecxz
pop
ljmp
ret
cmc
rcr
ljmp
cmp
idiv
testl
sar
cmp
shll
ds
cmpb
sti
out
fisttpll
sti
loop
test
repz
cmp
loopne
loop
rcr
addl
ffreep
movb
das
cmc
call
cli
icebp
cmp
jecxz
fcmovnu
out
in
out
loopne
xchg
out
cs
jmp
cmp
lock
fadd
repz
lret
mov
in
xchg
loop
sar
fadd
ss
cmp
loop
sti
fptan
repz
mov
clc
orl
mov
xlat
out
repz
repnz
xlat
rol
cmp
cld
aad
jmp
lret
int
fmul
lea
ss
aam
enter
cmp
loopne
mov
mov
roll
clc
jmp
shll
ljmp
faddp
test
in
xchg
cld
loope
repnz
stc
leave
hlt
hlt
xor
out
fld
test
cmp
ret
idiv
out
icebp
int
mov
jecxz
cmp
out
lock
jmp
hlt
fcmovnbe
rolb
ds
out
mov
or
cmc
jecxz
lock
sub
repnz
test
jmp
lret
loope
or
jmp
iret
aam
aas
aad
iret
aam
ljmp
cmc
mov
jg
pop
add
test
mov
clc
cmc
mov
lret
test
loopne
in
les
cli
fmul
rcr
aaa
in
mov
test
in
cli
add
jecxz
lock
rcl
cld
in
fcmovu
hlt
xor
fcmovne
mov
fucom
int
fstp
out
mov
aam
imul
fcmovnb
out
cmp
cmp
cld
sarl
out
xlat
jmp
out
out
lds
rcr
faddl
ret
ret
aam
rcl
test
sub
in
filds
iret
stc
aam
ss
hlt
in
std
repz
cmp
cmp
frndint
cld
cmc
mov
cld
lret
out
shl
ror
shll
jecxz
out
stc
aam
loopne
std
idiv
cmp
in
nop
pause
test
in
imul
ljmp
xor
aad
sub
enter
mov
leave
ljmp
cli
jecxz
mul
rcl
xlat
std
xlat
ljmp
jecxz
mov
fmul
cmp
rcl
or
cmp
shl
repnz
cmp
in
call
aad
icebp
fcmove
ljmp
fcmovnb
and
cmp
call
xchg
int3
test
xor
in
cmp
int
test
loope
lock
dec
jmp
loopne
into
in
repz
hlt
sub
xlat
into
shl
cmpl
clc
decl
enter
test
icebp
in
xor
cmp
clc
fcmovbe
imul
clc
loopne
incl
jmp
sar
int3
out
mov
sti
aaa
leave
lret
mul
rcl
hlt
std
stc
repz
shl
in
cld
out
xorb
ss
fidivrs
hlt
fmulp
cld
cli
aad
imul
idiv
out
cli
out
leave
lret
out
das
into
icebp
iret
shl
loopne
aam
loop
fstpt
std
std
fadd
jmp
test
in
addl
xor
ljmp
ret
cmc
sbb
fiadds
adcb
xor
enter
and
shl
rcr
ds
mov
lock
mov
xlat
imul
lret
lock
rolb
rcr
lret
ljmp
test
out
cmp
iret
cmp
ds
std
hlt
test
in
sti
test
in
aam
test
cmp
ror
lock
lret
shl
jecxz
fadd
mov
aad
or
iret
jmp
xchg
out
out
shr
jecxz
ljmp
in
fcmovnbe
repnz
in
mov
int
fsubr
fstpt
repz
hlt
fldz
fisttps
add
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
rclb
jmp
add
into
clc
loop
xlat
fcomp
stc
inc
mov
lret
enter
jmp
xlat
aad
icebp
imul
cmp
int3
aam
loope
rcl
loop
in
cmp
jmp
shr
ss
out
xor
out
aad
rcl
sbb
loop
idiv
in
out
repnz
mov
xchg
lock
cmp
fsin
idiv
rol
test
jmp
into
out
loopne
in
ret
fmul
repnz
in
leave
enter
in
xlat
cmp
stc
loopne
ret
fucomip
decl
nop
repz
cmp
call
iret
xchg
stc
ror
fincstp
les
shl
lret
shr
aam
aaa
out
cmp
cmp
ret
not
fadd
cmc
out
in
in
shr
jecxz
call
rcl
lret
in
sti
in
test
repnz
sbb
sti
fsubp
mov
loop
in
lock
xor
cmc
fsubr
rcr
out
xor
mul
test
ds
repnz
std
int
out
loop
rcll
cmp
xor
out
cmp
cmp
ret
icebp
out
repnz
xchg
xchg
sub
icebp
loope
leave
test
lret
out
in
aad
repz
out
jmp
xchg
cmp
loopne
in
shl
enter
ljmp
push
fsub
fsubr
mov
repnz
hlt
clc
repnz
xor
sti
fdivp
cmp
out
fldz
decl
jmp
test
int3
loope
and
mov
lock
iret
stc
xlat
out
cmp
sti
repz
jmp
fisttpll
ss
cmc
in
rcr
iret
fidivrl
rcr
aas
aad
clc
ffree
jecxz
out
repnz
rorb
fcmovu
aas
repnz
out
inc
or
notl
aad
ljmp
std
fxch
fdivp
shr
bnd
mov
call
shr
into
jecxz
xlat
int
fdivs
fcomip
roll
jecxz
fmull
xchg
mov
xor
in
loope
fcomp
aad
ror
cmp
loop
ret
xchg
mov
jmp
not
std
into
out
cmp
fyl2x
out
addb
mov
test
loop
in
in
cli
icebp
repnz
ljmp
std
loop
test
nop
ljmp
icebp
leave
ss
call
out
faddl
fdivrs
mov
in
test
dec
out
loopne
xchg
into
imul
cmp
cli
enter
loopne
addb
test
mov
fnclex
test
test
in
fimuls
add
add
ror
fst
mov
vshufps
add
cmp
loope
idivl
idiv
shl
in
loop
in
xchg
cld
icebp
mov
xchg
jmp
aaa
cmp
in
hlt
cmp
out
xchg
fucomip
loope
ror
repz
cld
lock
aad
stc
fndisi(8087
cld
cmc
div
xor
fmulp
ffreep
lret
jecxz
icebp
xchg
repz
int3
fidivl
lock
cmc
cmp
divb
aam
addb
call
xchg
iret
rcr
call
cmp
aam
icebp
fcmovnu
hlt
jmp
call
in
hlt
mov
test
jmp
repnz
out
ror
cmp
test
sbb
out
loopne
mov
test
icebp
mul
enter
aaa
ss
icebp
testl
faddl
jmp
lret
call
into
aaa
aam
fsubr
rolb
repnz
in
int3
incb
jecxz
mov
jmp
in
iret
fnstenv
and
shr
hlt
out
cld
fsubp
leave
std
mov
loopne
test
addb
xor
std
in
fsubr
add
aas
in
int
fcomp
std
mov
xchg
in
call
out
std
fmul
sub
fld
cli
test
ljmp
div
out
div
xor
cmp
repz
mov
in
mov
xchg
lret
loope
aad
les
xor
enter
repz
xor
fcomip
jecxz
fsub
incb
int
xchg
icebp
aam
jmp
fdiv
aaa
call
clc
rcr
repnz
jmp
fimull
fucom
fsubp
xchg
ret
jecxz
lret
lret
hlt
icebp
cmp
ret
aad
inc
fcmovne
out
test
or
xchg
xchg
int3
icebp
enter
stc
jecxz
iret
fcomp
mov
orl
out
test
mov
into
leave
xor
hlt
fxch
aaa
loope
sti
call
jecxz
aad
out
jecxz
idiv
mov
iret
xchg
out
in
rcl
ret
into
ret
repz
rcl
ljmp
fsub
aad
xlat
cld
lea
xchg
out
aad
xor
xor
loop
adc
shl
xchg
ret
filds
hlt
out
sarl
call
idiv
fidivl
leave
xlat
ret
xchg
std
out
shl
jmp
fcom
loop
div
cli
sar
hlt
sarl
roll
enter
nop
test
cs
in
lret
cmp
aam
fcmovb
ret
rcr
ljmp
sbb
sar
xchg
loop
jmp
lock
cmp
flds
and
loope
ljmp
in
jmp
shlb
movl
test
or
add
cmc
add
add
aad
aad
int
jge
in
and
roll
add
lock
clc
in
iret
call
hlt
xchg
popl
out
xor
out
ret
icebp
fsubr
rolb
testl
lret
iret
adc
fcom
fdivs
fidivrs
stc
sar
lock
repz
mov
out
into
jmp
shl
xlat
xor
leave
xlat
leave
out
ss
test
test
test
int
addb
xor
cmp
fdivrp
ss
add
call
std
jmp
xchg
xor
div
sub
cmp
std
fnop
and
in
call
into
leave
test
jmp
shl
cmp
loop
icebp
cmp
xlat
mov
in
test
into
sub
ljmp
fdivl
ss
fcmovnu
divb
and
div
stc
mov
icebp
mov
ljmp
xor
aaa
aaa
icebp
iret
cmp
xor
loop
xchg
sub
test
lds
cmc
fscale
ljmp
aas
out
rcr
clc
cmc
or
mov
addl
hlt
stc
stc
sarb
xor
ret
cmp
aad
jecxz
std
mov
lds
fxch
out
aaa
fcomi
cmc
shl
xlat
addb
loop
test
call
aam
iret
out
test
cmp
ret
aaa
add
xchg
jmp
icebp
jecxz
out
cs
cmp
aam
rcr
cmp
jecxz
fucom
std
stc
test
mov
xchg
icebp
in
in
int3
test
sar
xlat
lret
shl
out
cli
std
fiaddl
out
mov
test
jmp
lret
cld
aaa
clc
out
fdivrl
jmp
loope
xchg
in
enter
xchg
rcl
xor
rcl
hlt
aam
out
ds
cmp
ds
cmc
cmc
cld
mul
jmp
popl
fsubrp
xabort
fmul
shr
hlt
lret
call
fcmovnu
aam
fdivrp
aad
addl
xor
xor
lret
xor
into
jmp
lret
shl
cmp
in
fmull
or
cmp
lret
lret
aaa
iret
repnz
fistpll
xchg
enter
or
xchg
rcl
jecxz
cmc
fdiv
icebp
stc
lock
cli
rol
cli
xlat
ljmp
ljmp
loope
test
ror
cmp
test
lret
fdivr
fiaddl
and
cmc
fsubr
into
cmp
xor
repz
into
loope
rol
mov
ret
std
std
out
jmp
int3
mov
xor
jmp
ret
les
je
push
or
add
jle
add
xlat
loop
ljmp
aam
rcl
out
fiadds
faddp
repnz
iret
out
jmp
iret
hlt
loopne
imul
xlat
ret
ret
xchg
xchg
nop
cld
loopne
icebp
int3
leave
repnz
shlb
repnz
cmp
aam
cmp
hlt
div
in
les
loope
ret
lock
test
into
cmp
ret
rol
out
lret
loopne
in
in
xchg
mov
shl
sti
xor
aad
jmp
loope
cld
in
fst
stc
std
repnz
loopne
fadds
rcl
div
jecxz
xor
test
iret
iret
int
sar
add
mov
cli
lret
addb
call
stc
cld
aad
lret
loop
ffreep
test
out
out
lret
repz
out
shll
clc
into
ss
cmp
rol
lds
into
fcmovu
xchg
int
in
in
hlt
xor
int
cmp
stc
xlat
cmp
lock
cmp
loope
loop
loop
mov
nop
loop
fidivrl
fyl2x
shl
aaa
lock
lret
cmp
cmp
filds
jmp
test
lret
mov
divl
icebp
in
in
shl
into
out
ror
in
std
out
fldln2
jmp
fcomip
iret
xor
xor
idivl
aad
cmp
fadds
enter
jmp
lock
aam
enter
iret
ret
cli
cmp
testb
out
xchg
aam
not
ljmp
xchg
in
repz
enter
lret
faddl
sti
icebp
enter
out
loope
and
orb
int
out
cld
cmp
into
iret
fistpll
lock
clc
lret
mov
int3
jecxz
dec
out
lock
sarl
shl
cmp
out
add
rcl
xchg
fadd
mov
in
leave
lock
in
xlat
jmp
not
std
fcmove
add
mov
hlt
mov
leave
loopne
stc
out
lret
xchg
mov
icebp
out
xor
into
in
loope
rcr
icebp
out
cli
addl
xchg
lock
xor
lret
cs
aad
clc
icebp
into
cmp
test
movb
out
out
aad
fmul
cmp
repz
stc
aad
fnclex
repnz
in
dec
dec
fyl2xp1
loope
test
nop
leave
aam
icebp
hlt
int3
enter
aam
loopne
in
cld
fld
ret
imul
out
loop
addl
xor
ds
cld
fsub
shl
in
xlat
out
decb
lret
sar
jecxz
loopne
ljmp
sar
loopne
rcl
cmp
call
in
iret
std
lret
add
mov
mov
jmp
rol
rol
rcl
aad
add
cmp
or
jg
pop
add
xchg
xor
hlt
call
rcl
iret
adc
loope
aad
adc
fiadds
repz
into
aaa
repz
aam
ljmp
cmp
out
addl
hlt
fcom
int3
cmp
jecxz
movb
loop
fcmove
shr
into
sub
stc
jmp
std
das
cmp
xor
hlt
sbb
aad
std
in
stc
and
out
ror
icebp
jmp
loopne
repnz
out
or
jmp
or
cld
jecxz
ror
in
test
cmp
icebp
fmul
int3
testl
cld
sti
mov
rclb
cmp
repnz
fcmove
in
shl
and
shl
enter
aaa
loope
xlat
lock
cmp
ss
cmp
cld
out
cli
fldl
sti
fdivrp
in
ljmp
enter
enter
jecxz
and
loopne
ljmp
or
int
into
lret
shl
dec
fxch
aad
repnz
hlt
int3
in
jmp
fmulp
xchg
xor
cmc
aam
lock
in
into
lock
icebp
in
loopne
flds
cli
std
xchg
aam
xchg
hlt
ljmp
incb
iret
in
cmp
fsub
repnz
into
test
aaa
test
cmp
div
out
clc
rcr
jecxz
test
in
mov
out
adc
ss
in
lret
aas
sar
xlat
jecxz
cmp
orb
fucomp
shl
call
idiv
sar
out
iret
xlat
cli
cmp
in
rol
and
sbb
into
fdivr
xchg
std
aam
ret
stc
aad
lret
clc
cld
testb
fsubp
incb
in
mov
out
std
hlt
xor
aaa
cli
call
repz
out
out
ret
addb
fists
xlat
ror
out
cmc
out
out
rcl
cmp
roll
out
mov
mov
in
in
imul
stc
int
cmc
in
in
faddl
test
movb
lea
fsub
fnsave
jmp
jmp
loopne
mov
ds
sti
lret
out
shl
in
addb
vpor
ljmp
fmul
ror
cmp
loopne
lock
iret
fdivs
cld
into
aas
out
ds
int
incl
lret
int
in
mov
sti
ljmp
int3
lock
xlat
cmp
shl
aam
aad
sti
fldl
pushl
movl
inc
add
jne
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
rolb
jg
pop
add
test
in
xchg
aad
xor
dec
jmp
fadds
cmp
sbb
xchg
out
or
aaa
xor
les
int3
aas
repnz
lret
xlat
fdivrs
fdivrp
mov
xchg
test
roll
out
call
cld
rcl
sti
cmc
test
cmp
neg
loope
int
rclb
iret
fnsave
cld
fdiv
shl
loop
shl
decl
enter
lock
int3
fsub
aaa
xor
xor
fdivr
xor
in
movb
out
sar
hlt
sub
ljmp
fistpll
ror
xlat
xor
lret
test
jmp
call
iret
lock
out
idivb
jecxz
out
fiaddl
cli
call
fcmovu
ljmp
fnstenv
fnstsw
sti
iret
clc
ds
cli
in
ret
out
fcomp
test
mov
ljmp
jmp
fiadds
xchg
in
in
cmp
in
test
jmp
in
in
ljmp
repz
jecxz
out
ret
cld
mov
iret
shlb
aaa
out
aam
shr
rolb
xchg
xchg
lock
out
clc
rcl
cmc
out
cmp
shl
fcmovnu
jecxz
mov
addb
repz
test
xor
shl
int
mov
out
vcvttpd2dq
out
repnz
in
aam
repnz
addl
adc
mov
int
and
repnz
out
sar
int
aas
xor
cli
shr
iret
xchg
neg
neg
mov
int3
lock
lret
mov
clc
aad
call
shl
in
fidivrs
mov
mov
leave
neg
loopne
cld
test
fisttps
out
jmp
lds
int
ret
loope
xbegin
loope
orl
cld
out
in
not
cmp
out
cmp
rcr
rcr
hlt
lret
loope
lock
loope
int
clc
in
out
clc
aaa
neg
int
hlt
out
cmp
aad
ret
in
leave
mov
loope
stc
in
mov
ss
in
ds
loope
loope
cmp
jecxz
imul
mov
loop
leave
in
out
xor
xor
loop
ljmp
sti
lret
out
rcl
int
cld
ljmp
jecxz
shl
hlt
xchg
enter
repnz
out
xlat
fcmovb
xlat
leave
fidivrs
iret
div
fcmovnb
repz
std
test
sti
lds
add
add
ror
fld
and
test
fdivrs
ss
bound
pop
add
lret
repnz
cmc
sub
aad
test
int3
aas
xor
testb
cmc
mul
int3
int
loope
ljmp
xor
leave
loopne
fadds
test
sub
mov
fadd
orl
aad
xor
lock
fsubr
loop
mov
neg
test
loopne
jmp
imull
rcl
lds
std
sbb
std
jecxz
xor
in
fimuls
fmulp
test
jmp
fcmovnu
lock
sarb
leave
cmc
xchg
repnz
loopne
in
out
out
ror
repz
stc
adc
sar
cmp
rol
loop
imul
mov
xchg
rorb
int
fxtract
idiv
aaa
into
std
in
into
rol
ffree
jecxz
xlat
in
fisttps
in
in
out
cmp
lret
cld
not
fcmovnb
fucom
std
mov
cld
fcmovnb
int
dec
hlt
into
in
lret
div
jmp
aam
icebp
lret
adc
fisttpll
sti
out
stc
mov
clc
fnop
cld
out
lock
cmp
aad
in
leave
cmc
cmc
lret
xchg
in
int
hlt
test
jmp
repz
fnstsw
loope
clc
idiv
sar
orb
lock
shl
in
enter
shr
aad
fcomi
mov
loope
les
call
hlt
sub
shl
cli
cmp
sar
sarl
out
lock
cmc
mov
addb
loop
in
mov
in
jecxz
aad
shl
fstpt
fadds
jmp
in
int
cld
in
loopne
call
out
repnz
test
idiv
hlt
sarb
ret
cmc
repz
hlt
mov
addl
rcl
call
xlat
into
cld
hlt
into
in
fcmovb
loope
lret
mov
into
in
test
xor
jmp
icebp
aad
cmp
not
ret
faddp
test
idiv
jmp
out
loop
out
jmp
out
cmc
cld
aad
rol
repnz
incl
cld
in
sub
loop
out
in
ss
cmp
aaa
lret
test
aad
aam
jecxz
sub
mov
in
xchg
out
sub
xor
leave
xor
cld
idiv
idiv
icebp
xlat
rcr
aam
in
int
iret
repnz
test
cmp
cmp
ror
cmp
ret
enter
loop
stc
mov
lret
into
cmp
in
fsubr
ss
fcmovb
ret
test
stc
fmul
jecxz
lret
orl
cmp
rcr
rcr
cmpl
cmp
out
pop
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
mov
push
hlt
gs
pop
add
loop
sar
adcl
cld
lock
fldl
test
cli
jmp
shl
loop
mov
xlat
out
shlb
fldl2e
fbstp
int3
cmp
fadds
std
out
popl
out
ret
leave
cmp
hlt
aaa
lret
ffreep
fsub
clc
sar
jmp
movb
vpsubusw
shr
xor
idiv
in
test
ljmp
fucom
std
adcl
cmp
rcr
lock
sub
mov
fdivrp
std
fcmovnbe
cmp
xor
repz
lret
fcmovbe
ffree
jecxz
test
cld
rcr
ffreep
imul
mov
fucomip
leave
orb
in
repnz
fstpt
cmp
fiadds
xchg
aam
cmc
in
stc
mov
out
sub
ror
in
das
into
fptan
shl
sar
ret
out
fildl
xchg
test
ljmp
repz
fsubrp
jecxz
hlt
fcmovb
mov
std
vfrczsd
xor
into
jmp
idiv
mov
hlt
mov
int3
shr
mov
lds
lret
jmp
test
faddp
mov
mul
leave
enter
xchg
rclb
jmp
cli
div
in
loopne
ret
jecxz
aas
fcomp
cmpb
out
nop
loope
test
in
xor
cmp
cmp
int
iret
out
shl
ret
ret
ret
out
fcmovu
call
xchg
loopne
xchg
xchg
loope
ljmp
sti
int3
mul
xchg
fcmovnb
xlat
fcomp
jmp
sti
iret
xchg
into
mov
leave
shl
repz
cmp
sbb
loope
jecxz
jmp
fcmovnbe
out
icebp
out
test
sti
roll
std
test
idiv
mov
ret
fmul
test
fimuls
aad
lret
fmulp
ret
test
sti
fcomi
bnd
fiaddl
lds
out
sti
hlt
cmp
out
call
fdivl
test
ret
mov
test
add
xchg
xchg
out
cs
ljmp
cmp
call
lret
loopne
jmp
xchg
repz
out
in
fsub
int
idiv
testb
fmulp
mov
ljmp
repz
sub
xor
call
shl
fcmovbe
fcomp
xlat
in
in
sti
in
std
jmp
jecxz
cmp
out
int
cmp
loope
cmc
lock
repz
shl
in
call
xor
hlt
xor
aad
lret
rcl
ds
fstpt
ret
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
int3
inc
vpunpckhbw
sbb
jle
mov
loope
fildl
iret
xor
xor
xor
iret
cmp
fsub
into
test
xchg
test
int3
in
sti
lret
jmp
xor
enter
out
rcl
shl
out
test
xchg
loope
test
ror
lock
fcmovne
int3
cmp
cld
lret
div
in
sbb
lds
loope
leave
vpmulhuw
lret
xor
cmp
sarb
fscale
test
mov
xchg
in
mov
jecxz
in
repnz
repz
stc
fxch
cmp
clc
cli
div
repz
jecxz
mov
ljmp
fcomi
jmp
jmp
int3
xchg
cli
faddp
xlat
loope
loop
jmp
xchg
call
fcmovu
cld
inc
or
lock
loopne
fcomp
icebp
mov
idivb
jmp
leave
cmpl
aam
int3
imul
jecxz
jecxz
mov
shlb
cmc
lock
cmc
loop
loopne
fcmovnbe
call
mov
in
out
shl
ret
cmp
into
sti
std
fstp
shl
mul
cmp
ffree
lds
iret
test
int
call
aas
fldl
rcl
faddl
mov
lret
decl
fcmovb
xor
call
out
int
aad
repz
enter
mov
loopne
in
nop
cmp
aam
fsubr
les
xlat
into
out
fcmovnu
testl
xchg
xchg
orb
loope
cli
std
ljmp
rol
sti
dec
fcomp
lret
lret
out
lea
in
in
call
repz
lret
clc
iret
repz
stc
loope
int3
xlat
cld
orb
aam
hlt
xlat
imul
jmp
std
iret
sti
ret
shl
aad
int
mov
out
aad
cmp
xor
repz
loope
ds
cmp
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
xor
push
jle
add
jecxz
out
cmp
int
fcmovu
into
mov
loop
hlt
hlt
iret
iret
lock
loopne
idivl
repnz
out
cld
in
mov
clc
nop
stc
loop
adc
xchg
sub
ss
iret
imul
leave
cli
incb
ror
not
cmc
and
xchg
xor
aam
jecxz
clc
lret
lret
fstp
test
and
leave
mov
stc
jmp
ljmp
repnz
aam
fucomi
xlat
sti
aaa
fadd
enter
fldl
out
std
call
out
repz
xor
fistpll
divl
fsubp
std
aas
rcr
loope
lret
test
xchg
iret
lret
icebp
loope
out
aam
cmc
sti
repz
aas
cmp
test
in
rcr
fsubrp
fsubrp
in
repnz
and
leave
ljmp
sbb
xor
icebp
flds
mov
lret
int3
repz
repnz
ljmp
test
xlat
std
leave
test
cld
jmp
out
xchg
jecxz
mov
divb
ss
jmp
cmp
aam
incl
fisttps
test
leave
mov
cmc
repz
leave
aad
jmp
into
jecxz
test
aad
cld
in
xchg
fcomp
movl
in
aad
rcl
aad
iret
cmp
cmp
loope
mov
fcmovne
shr
sti
jecxz
out
lock
cmp
jmp
cmp
cmp
enter
in
loopne
orb
aas
lret
xor
enter
in
in
fdivr
out
cli
stc
fadd
cli
sub
bnd
out
cmp
cmp
fcomp
out
xchg
mov
jecxz
out
mov
loope
enter
cmp
ljmp
jmp
lret
out
lret
xchg
xchg
icebp
loopne
repz
aam
jmp
fdivr
cld
mov
mov
out
mov
lock
in
out
stc
enter
aam
hlt
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
out
aas
mov
sbb
jle
xor
iret
sti
fsubp
fld
sub
xchg
mov
out
roll
vpsubusw
aam
aam
loop
int3
cmp
jecxz
out
faddl
mov
rorl
lock
cli
ffree
test
rorb
fdivp
ljmp
int
clc
aam
lock
loope
xor
or
faddl
xchg
loop
mov
leave
shl
int3
ljmp
shl
hlt
sti
mul
testb
iret
mov
repnz
xor
cmp
lret
not
stc
fadd
iret
adc
int
iret
icebp
in
cld
icebp
repz
out
iret
cmc
neg
out
iret
shr
aad
xchg
in
fcmovbe
lret
xchg
jmp
jmp
leave
clc
xor
clc
in
cmc
icebp
int3
cmp
in
lock
enter
xchg
loope
in
inc
int3
xlat
hlt
lock
cmp
xor
incb
cld
in
test
out
lea
xor
shr
out
xor
loop
hlt
loop
rol
fcmovb
fst
fdivr
sti
test
and
call
cmc
fcmovnbe
lret
fcmovb
repz
loop
xchg
call
hlt
shl
loop
cmp
shr
ds
out
idivl
and
lret
ljmp
xchg
jmp
loop
call
cmp
cld
sbb
aaa
test
ds
fsub
fldl
rol
fcmovbe
divl
cmp
ljmp
fdiv
cmp
rorb
lret
rcl
xor
repz
cmp
repnz
out
xchg
ljmp
in
test
aad
out
fnstcw
aas
rol
ds
ret
out
orl
cli
xor
fdivrs
sti
xor
test
icebp
les
movl
into
les
rorb
add
add
int
aas
int
int
jbe
repnz
jle
add
jmp
cli
fcomp
aaa
cmp
aam
in
fimuls
fmull
loop
xor
iret
cmc
or
sar
repnz
cmp
hlt
sar
cld
cli
out
and
nop
jmp
int
xor
in
fidivrs
leave
loop
fmul
cmp
testb
mov
xor
xor
cmp
rcl
in
repz
xchg
stc
out
xchg
repnz
in
loopne
out
in
sar
jmp
out
shlb
cmp
in
in
aad
sub
loopne
loop
and
xor
ljmp
faddp
cli
loope
aad
xchg
jecxz
into
out
out
mov
roll
out
les
out
fdivr
cmp
lds
xchg
jecxz
fsub
xchg
xchg
jmp
ror
xor
jmp
fnop
loopne
xchg
testl
cmc
loop
out
xor
xor
sarl
repnz
out
jmp
hlt
ljmp
xor
cmp
out
iret
loope
shlb
aam
ds
mov
fscale
stc
jmp
iret
test
ss
sti
in
ljmp
iret
and
fiaddl
in
leave
rcll
cmp
jmp
out
cmp
out
aad
frstpm(287
vpandn
nop
enter
lret
cmp
enter
xor
faddl
out
loope
ror
add
xchg
mov
xor
shl
aaa
xor
std
out
ror
jmp
fcom
inc
mov
movl
aaa
shl
ss
fnstcw
icebp
cmp
cmp
in
loope
xchg
in
in
icebp
in
ljmp
int
aaa
ljmp
ret
aad
lret
leave
std
lret
iret
divb
rcr
out
rcl
out
jmp
cld
xlat
rcr
vmovntdq
loope
into
mov
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
int3
clc
xor
cmp
cmp
xor
fimuls
repz
adc
lret
fldl2e
std
aaa
sub
cmp
incb
jmp
ror
ljmp
jmp
jmp
jmp
into
int3
xlat
out
std
iret
fucom
sti
out
lea
lock
aaa
cmc
aad
aam
mov
cmc
fiadds
jmp
orb
rcl
repnz
ret
rcr
xchg
loop
loop
in
mov
loopne
xchg
mov
int
rcl
ret
int3
fcmovne
std
fcmovne
cli
cmp
std
repz
jecxz
shl
std
out
test
sub
orb
xor
fcmovnu
shl
stc
ds
mov
out
ret
sbb
sub
addl
cmp
hlt
cmp
lock
shl
lret
loop
int3
xchg
jmp
loope
sti
cmp
cmp
call
add
xbegin
iret
out
movb
shlb
xlat
cmp
inc
cmp
jmp
xlat
orb
adc
in
cmp
aad
testb
testl
mov
fnstenv
lock
fcmovnbe
cmp
shl
lret
jmp
inc
out
xchg
hlt
aam
imul
cli
cli
repz
std
shl
aas
fadd
shl
out
ror
ffree
cmc
mov
mov
xchg
mov
icebp
xor
lret
repnz
std
jecxz
out
out
loop
enter
fadds
mov
into
xor
cmp
shl
sar
repz
leave
loop
xlat
jmp
int
fcmovnu
and
int3
xor
repz
aas
hlt
cmp
jecxz
and
lret
fsubr
loop
rcl
icebp
xchg
loope
xor
cli
xor
xor
cld
std
loope
into
aad
loope
aas
shl
xchg
std
fmull
out
ljmp
neg
lret
iret
cli
jmp
call
testb
leave
mov
in
repnz
jmp
sar
fucomp
shl
or
ljmp
mov
hlt
mul
repnz
cmp
clc
sti
fldl
mov
ret
fdivp
fneni(8087
stc
cld
ret
xchg
adc
int3
cmp
fstp
cmp
ds
std
xchg
add
lret
leave
imul
in
iret
fstp
cmc
ljmp
rcr
adc
test
fdivr
fmuls
or
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
push
cwtl
lock
jle
add
shr
in
in
mov
icebp
shl
xor
in
fld
idiv
jmp
hlt
cld
cli
int
std
loope
cli
ret
mov
filds
std
test
lret
idivl
int
cmpb
add
in
rcl
xchg
xchg
hlt
xor
fdivp
cmp
mul
stc
clc
rolb
jecxz
enter
fildl
jecxz
int3
cmp
shr
addl
cmp
adc
enter
lock
aam
cmp
leave
cmp
iret
cmc
sbb
ret
enter
jmp
fmull
ds
int
loop
idivb
mov
stc
fmuls
and
out
aam
fmul
jmp
ds
aad
xlat
xlat
shl
ret
lds
rorl
icebp
lret
cmp
shr
loopne
aas
aam
in
loop
enter
orb
into
cld
sar
repz
fcmovb
loope
rol
cmc
out
out
filds
loopne
hlt
xor
lret
jmp
rcr
incb
lret
lea
rol
shll
enter
loopne
lret
repnz
call
aas
std
mov
repnz
lret
loopne
loop
xlat
stc
xlat
cmp
into
iret
in
rcl
fcmovne
in
mov
mov
ror
hlt
shr
fcmovnbe
loope
cmp
std
mov
jecxz
shl
cmc
std
xchg
shr
les
jecxz
lret
enter
cmp
hlt
fldl
fucomip
loopne
addb
rcl
cmc
std
loope,pt
cmp
sar
mov
mov
mov
xchg
shl
jmp
int
fcom
aas
fld
stc
in
fsubr
mov
mov
loope
aaa
ljmp
clc
hlt
fsub
cmp
xchg
enter
fisttps
enter
aad
fdivs
ds
loopne
clc
in
fmul
ret
imul
faddl
ljmp
fcmove
repnz
icebp
std
cld
out
aam
out
adc
out
nop
and
in
xchg
xchg
test
out
fsubrs
out
fcmovnbe
aaa
fdiv
in
fst
sti
aad
mov
call
nop
loope
shl
lock
fnstenv
rcr
in
aam
cli
sar
xlat
jecxz
les
ffreep
cmp
leave
mov
in
rcl
clc
je
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
cmp
inc
sbbb
jg
lods
add
rcl
loop
std
ror
fnstcw
sub
out
cmc
ret
sub
orb
ljmp
cmp
fidivrs
loopne
out
fisttps
loope
xchg
iret
divb
lret
jmp
clc
xlat
aad
aam
ffreep
icebp
aad
fst
xchg
xlat
sti
test
and
jecxz
in
aam
lret
fidivrs
xor
in
fucom
enter
mov
mov
jecxz
shr
iret
sub
addb
iret
rcr
mov
out
loop
mov
ss
repz
cld
enter
ds
ret
rol
jecxz
jecxz
out
jmp
hlt
mov
ret
aam
int3
fcomip
roll
enter
lret
jmp
in
aad
iret
repz
in
in
cmpl
out
aad
lds
xchg
std
fsub
shl
loopne
fdiv
in
divb
test
std
ret
xchg
sti
div
cmp
jecxz
xchg
fcmovnbe
sub
in
xor
fucomip
lret
and
ret
sbb
mov
mov
xor
rol
in
neg
xor
ds
clc
xchg
jmp
ds
in
call
shl
in
jmp
in
jecxz
shl
sar
xlat
ror
les
orb
ss
out
aas
ljmp
out
roll
int3
mov
lock
cmp
cli
sar
out
sarl
clc
ror
sti
fneni(8087
jmp
sub
jmp
xchg
iret
out
sub
fdiv
leave
xlat
out
ds
fdivp
rcl
xchg
bnd
rorb
jmp
in
fdivr
aad
jmp
fldl
enter
clc
lret
mov
iret
ror
aaa
ljmp
repnz
xlat
loope
repnz
in
shl
icebp
shr
cmp
cs
repnz
lock
out
fadds
neg
out
sti
lea
enter
leave
xor
cmp
out
fsub
test
sti
leave
test
int3
out
icebp
test
hlt
test
ret
call
not
call
mov
test
ljmp
out
jecxz
cmc
lock
ds
fsubr
cld
cli
rol
cmc
lock
cmc
out
lret
sti
into
mov
in
shll
idivl
sar
jecxz
cmp
add
add
rcl
fst
int
lea
insb
push
jg
lods
add
sti
in
cmc
stc
cli
bnd
sti
cmp
loope
std
int
in
orb
std
in
cli
out
mov
xor
out
fstpt
not
cmpb
sarb
ret
mov
mov
sti
sub
loope
icebp
call
sti
rcr
neg
rcl
out
int3
out
mov
xchg
rolb
ss
repnz
aaa
idiv
fcmovnb
xor
loopne
fisttpl
test
ss
aad
shl
in
aam
std
int
shl
loopne
call
cmc
jmp
fildl
ret
ret
in
aaa
sti
iret
fcmovbe
clc
cmp
shl
mov
sti
in
clc
loop
xchg
xchg
nop
imull
out
aad
cmp
hlt
loope
ds
sti
clc
loopne
out
mov
int3
lock
mov
jecxz
jmp
repz
enter
in
cmpl
fiaddl
loopne
out
call
xlat
sarl
out
hlt
in
lret
aas
loope
repz
div
in
leave
fcmove
enter
nop
rol
aad
shll
shl
out
repz
aam
rolb
repz
cmc
in
lds
mov
mov
out
xor
in
cmp
into
leave
fsubr
fadds
xchg
mov
fdivr
xchg
out
roll
iret
jecxz
out
fstp
sub
fstp
rol
fsubp
aad
sti
fadds
mov
in
xchg
xor
cmc
leave
jmp
lock
test
clc
shl
cld
fisttpl
fsub
int3
jmp
incl
out
in
xor
std
xlat
jmp
aam
enter
xchg
xchg
loopne
ljmp
xlat
ljmp
in
jecxz
xchg
mov
cld
fadds
in
loop
loop
xor
clc
out
loopne
fcomip
jecxz
jmp
xchg
repnz
rcl
cmp
aam
aas
push
fsubp
rcr
in
testb
xchg
ficoms
repz
lret
loopne
iret
aad
repz
cmp
filds
sub
int3
cmc
aas
hlt
fcmovbe
lret
out
jmp
fdiv
filds
loopne
leave
in
out
icebp
adcl
xor
push
lock
xor
repnz
enter
lret
xchg
lret
into
shl
shl
stc
aad
aaa
clc
fnstsw
sbb
out
fnstcw
fcmovnu
leave
ret
loopne
dec
jmp
loop
nop
repz
orl
jmp
int3
ror
int
lds
xchg
jg
lods
add
jecxz
loopne
out
lret
aam
idivl
xchg
mov
into
loop
cmc
xor
cli
stc
jmp
cmc
hlt
aas
aad
shl
shl
std
xor
fldl
adcb
ljmp
hlt
fucomip
loop
fucomp
out
rorb
shr
lret
enter
cmp
fnstenv
int
cmp
add
rorl
in
jecxz
nop
ljmp
xlat
iret
repnz
sti
lret
sti
repz
sti
call
leave
out
repnz
xchg
mov
icebp
cmp
int3
cli
cmc
stc
in
repz
out
mov
loope
fisttps
int3
loop
loop
not
ss
repz
enter
mov
test
mov
and
mov
fidivrl
out
sti
out
ror
cld
rcl
xchg
mov
test
repnz
lds
loope
hlt
test
neg
iret
out
aad
repz
mov
leave
xchg
shr
jmp
fst
repnz
in
pushl
cmc
out
test
fsubrp
test
rcl
in
stc
in
hlt
leave
aam
cli
ret
cld
enter
out
cli
test
xor
leave
stc
icebp
cmp
rcr
loopne
aad
clc
aad
call
fcmovu
call
rol
loopne
out
repnz
cmp
fdivrp
loop
aam
std
mov
loopne
icebp
out
orl
stc
out
xor
idiv
lret
lret
ret
and
ljmp
repnz
std
out
xor
std
call
rolb
aad
test
mov
xchg
shlb
out
aad
cmp
ss
jmp
loopne
repz
mov
test
lret
loopne
shrl
sub
icebp
rol
into
lret
fdivrp
cmp
testb
faddl
sar
fdivl
ss
fst
fidivrl
lock
frndint
call
test
jmp
out
jecxz
loopne
lret
aam
out
into
cld
shl
out
repnz
test
jmp
ret
test
loopne
loop
cmp
neg
ss
out
idivl
in
cmp
repz
fadds
adc
lock
ss
xor
stc
rolb
enter
jecxz
in
call
shl
fsubr
hlt
repz
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
pop
inc
mov
lods
add
rcl
cld
aad
testb
xchg
xchg
mov
sub
hlt
in
icebp
cmp
cmp
loope
idiv
cmc
cmp
loope
hlt
fimuls
xchg
xchg
hlt
int
fcomip
xor
xor
loopne
cmp
std
aas
lock
loopne
cli
in
jecxz
orb
xlat
hlt
aaa
cmp
fcmove
fmul
out
aaa
lret
test
in
xchg
mov
loope
xor
cmp
xor
ljmp
aam
movl
fcmovbe
adcl
jmp
rcl
clc
in
rol
test
jmp
hlt
testb
jmp
in
test
aaa
ffree
into
out
aad
cli
cmp
xor
out
mov
rcl
cmc
into
shll
fdivp
cmp
aaa
in
cmp
lock
test
addb
iret
divl
repz
ljmp
cmp
cld
cli
in
ljmp
jmp
lret
cmp
repz
call
leave
lock
xchg
lock
out
mul
rcl
hlt
fcmovnbe
cmc
repz
shl
xchg
hlt
jecxz
fcmovu
loopne
xchg
fst
fsubp
ljmp
aaa
lock
fcmove
ret
sti
hlt
testb
into
std
int3
xchg
mov
repz
call
call
int
shl
jecxz
cmpl
jmp
mov
cmc
enter
ljmp
cmp
ret
addl
mov
repz
out
icebp
not
int3
xor
imul
cli
fcom
test
loop
mov
shl
sti
jmp
sti
cld
lret
fdivrp
xchg
divl
xor
shl
xlat
in
fidivrl
fdivrs
ret
rcl
rolb
loop
jmp
bnd
in
ror
sti
sarb
int3
ret
cli
addb
fdivrp
loop
fucomi
xchg
loop
enter
call
iret
ljmp
ret
test
orb
xchg
out
jmp
clc
shl
enter
fadd
xlat
call
xchg
stc
leave
lret
movb
test
ss
out
aaa
rcl
cmp
fsub
ret
call
lret
xchg
fiaddl
jecxz
xor
out
cmp
in
iret
flds
in
int3
fmul
iret
loopne
loop
in
sti
cmc
rcl
aaa
aas
fld
aas
std
repnz
adc
add
add
lret
enter
fcmovnu
push
icebp
ret
xchg
lods
add
lret
rcl
stc
int
cmp
cmp
cmp
mov
neg
ds
stc
fucom
fiaddl
in
fstpt
in
leave
fcomip
into
aam
cli
fidivrs
in
addb
test
mov
imul
out
fdivrp
cmp
sbb
jecxz,pt
xlat
cmp
hlt
out
in
xchg
rcr
xlat
sti
int3
xor
int
stc
rorl
imul
sti
fstl
lock
jmp
ds
out
ror
cmpl
xlat
not
aad
in
jmp
lret
out
in
shll
ljmp
cmp
in
aam
xor
mov
int3
loope
fiaddl
clc
rcl
cmc
in
shl
aad
cmp
loope
cli
loopne
loop
loopne
mov
cli
loope
or
jmp
into
lret
leave
fmul
iret
sar
sti
sar
int
into
test
mov
lret
mov
mov
xor
lock
jmp
xlat
aas
cmp
sti
cli
rcr
testl
in
rol
jecxz
leave
out
cld
out
rcl
out
hlt
add
rol
std
test
test
lret
xchg
rol
test
shr
stc
xlat
cmp
icebp
cli
hlt
sti
sub
lock
icebp
cld
xor
std
stc
xlat
inc
rol
cmp
repz
call
loope
decb
xor
cli
sar
enter
cmc
idiv
cmp
lock
neg
test
out
out
jecxz
fists
aam
in
cld
xor
xlat
cld
cli
cli
fdivrp
ds
rorl
jmp
ljmp
sar
repz
repnz
sarl
xlat
rol
aam
xchg
nop
test
out
xor
ret
in
ss
int
clc
cmc
out
aam
fsubp
rcr
loopne
xor
leave
int3
fmul
cmc
repnz
leave
cmp
lock
aas
not
repz
in
and
call
call
orb
xor
sarb
int3
out
cmp
ror
aad
stc
cmp
or
clc
cli
ljmp
lock
jmp
loope
out
lock
inc
stc
mov
xchg
cli
in
xchg
lret
cmp
xlat
lock
std
xor
int3
loop
xlat
shl
addb
ljmp
div
int3
les
hlt
lret
enter
int3
fsubr
sarb
cld
loop
mov
loop
mov
iret
xchg
ret
ljmp
shl
stc
cmp
jne
mov
mov
xor
jmp
enter
int
enter
push
add
mov
lods
add
cmc
fadds
loop
test
loop
roll
stc
repz
shl
xlat
cli
flds
jmp
jmp
jmp
cmp
cmp
stc
stc
out
loope
mov
out
jmp
iret
shrb
out
into
fsubr
jmp
cmp
fcmovb
out
in
mov
or
mov
test
lret
cld
lock
repz
hlt
cmp
cmc
in
aad
mov
in
int
mov
lock
in
cmc
in
xlat
int
cmp
cmp
loope
ret
stc
sti
in
ret
sub
int
clc
enter
out
imul
xor
in
ror
lret
aas
aam
cmp
aas
flds
repz
jmp
int3
lret
jecxz
xor
aam
sti
aam
ss
stc
aad
in
mov
div
aad
jecxz
int3
call
xor
aaa
xor
leave
fsubr
stc
rcl
out
not
cmc
fcmovnu
mov
mov
loop
icebp
out
out
into
int3
call
jmp
shl
out
cmc
and
int
enter
mov
shr
fcomp
iret
int3
ds
cmp
cmp
fdiv
out
clc
mov
idiv
fmuls
xor
cmp
out
sar
loopne
in
in
out
cmp
in
ljmp
loope
xchg
sub
repz
shl
cld
ljmp
in
repz
loope
in
mov
xchg
repnz
fcom
out
int3
shl
divb
test
cld
shl
clc
orl
lds
in
iret
rcl
xor
fcomp
ds
fnstcw
nop
loope
addb
in
aaa
cli
xor
cmp
jecxz
out
cmp
jecxz
testl
mov
repz
xor
repz
clc
sar
sub
cmp
mov
std
into
loope
rorb
cmp
ss
cld
add
repz
xchg
ret
ljmp
jmp
lret
cmp
std
icebp
cmp
not
std
rcl
enter
xlat
fimuls
xchg
call
cld
div
cmp
cld
int3
into
loop
out
loope
in
in
int3
mov
fst
shr
orl
aaa
sar
lret
in
xchg
in
fiadds
lret
jecxz
in
xor
aam
cmp
xor
cmp
sti
int
adc
in
rorl
add
add
aas
lret
fcmovnu
xlat
aad
jno
dec
pushf
mov
jle
add
ror
call
xor
cmc
hlt
out
iret
fsincos
cmp
in
into
addl
fmull
cmc
rcr
clc
lock
ljmp
loopne
cmc
std
add
leave
mov
leave
mov
out
test
xor
repnz
xor
aaa
hlt
sar
ret
iret
jmp
int
ffree
out
lret
ljmp
aaa
icebp
aad
ljmp
fcmovbe
xlat
leave
in
fcmovu
leave
mov
call
repnz
fdiv
repz
jmp
out
in
call
std
lds
nop
repnz
xor
call
aad
fsubr
int
rcr
inc
loope
faddl
out
mov
mov
xor
ljmp
sub
adc
fyl2x
xlat
in
sub
mov
leave
repnz
fst
jmp
in
dec
loop
sbb
dec
mov
sub
mov
adcb
icebp
xor
fdivr
in
cmp
fucomip
xor
leave
int3
mov
and
mov
ret
shl
fadd
sarl
out
repz
roll
hlt
test
ficoms
cmp
fdivr
fcmovne
dec
ret
cmc
aas
test
ds
fucom
test
decl
xchg
sar
jmp
not
ror
cmp
fsqrt
rol
out
fadds
cld
in
repnz
in
mov
jecxz
cmp
stc
lret
sarb
cmp
sarb
loop
loop
sti
call
lea
in
div
aam
repnz
aam
out
xlat
aam
sar
rcl
lret
std
dec
int3
in
xchg
aad
rcl
rol
leave
icebp
stc
out
ss
ds
sar
mov
addb
into
or
jmp
dec
leave
jmp
bnd
cli
cmp
std
cmp
cmc
cld
test
out
enter
shr
ret
ljmp
sub
ret
loopne
test
lret
lret
call
sub
repnz
fdiv
enter
loopne
icebp
cmp
rol
enter
out
lock
jmp
xor
rcl
aad
in
int
incb
rol
leave
jmp
orb
out
cmp
sti
cli
xor
int3
loope
lock
rcr
mov
ret
xchg
test
xchg
ret
fidivl
out
cli
ror
sarl
in
fcmovbe
fxch
fiaddl
std
jmp
icebp
xor
in
into
in
int
mov
mov
jmp
into
enter
int3
fwait
outsb
mov
mov
pop
push
add
loope
repnz
lock
sub
loopne
leave
fiadds
in
xor
vpsadbw
xor
or
sbb
mov
out
fcomip
xchg
jecxz
iret
in
out
cmp
shr
in
enter
cmp
into
aam
fisttpl
and
sti
fucomp
lret
hlt
xabort
hlt
xor
int3
leave
fdivrl
sbb
shl
xlat
fdiv
loope
lret
xor
int3
rcr
in
mov
xor
leave
in
cmp
loop
int
fcmovu
jmp
rcr
cli
mov
xchg
xlat
stc
call
ror
rcr
adc
repnz
ffree
ljmp
add
jmp
clc
out
rol
into
cmp
not
lock
cmpb
lret
test
in
roll
cmp
aaa
enter
iret
loopne
aad
into
in
fadd
cmc
lret
std
mov
in
fdivr
jmp
icebp
call
aam
ljmp
loop
in
test
testl
mov
loope
out
aad
fdivr
lret
loope
fsubp
loope
icebp
fsin
fadd
std
fimull
xchg
in
out
xchg
aam
cmp
lret
ror
xlat
cmp
int3
jecxz
out
aam
cld
fcmovnu
in
rcr
in
out
jmp
lret
xor
xlat
fdivp
hlt
aam
rorl
sti
enter
mov
cmp
call
cmpl
call
xor
mov
ljmp
iret
idivb
cmp
cld
shr
fiaddl
in
ret
fsub
mov
xor
lret
out
lret
aaa
jmp
repz
cmp
fcmovnbe
mov
int
std
cmc
in
out
in
call
into
fcom
stc
in
fstp
cld
cli
out
xchg
mov
test
hlt
into
leave
cli
cmp
icebp
aaa
cmp
shl
sar
fdivr
orl
xor
cs
out
aaa
cli
loope
cmp
loope
jmp
orl
jmp
cmc
iret
rcr
xor
in
rcr
lret
loop
fadd
std
repz
repz
flds
incb
rol
rcr
cmc
cmp
cld
repnz
cmc
stc
aad
mov
xchg
in
ljmp
aaa
in
icebp
shl
ret
std
ret
mov
nop
in
xchg
out
jecxz
divb
aam
test
into
mul
lock
rcr
cli
jecxz
mov
jmp
leave
iret
int3
into
fstp
pushf
mov
std
repnz
or
jle
add
xchg
xchg
in
aam
sarl
out
xor
repnz
clc
xchg
add
mov
lret
roll
das
cmp
enter
cmp
stc
into
out
neg
addl
loop
xchg
shl
jmp
leave
xor
clc
icebp
aaa
shl
sar
jecxz
imul
jecxz
out
loop
jecxz
out
shl
lret
lret
aad
out
jmp
test
incb
in
loop
xchg
std
lret
int
out
into
fcmove
iret
enter
cmc
repnz
rol
repz
fmul
int
fxch
into
rcl
xchg
std
in
leave
lret
rcr
cmp
fsubp
sti
rcr
aad
test
loopne
xchg
mov
aad
sub
stc
ss
aaa
cmc
fdivs
loopne
call
shl
mov
mov
lret
nop
test
jmp
xlat
xor
std
cmp
cli
aad
cmp
xchg
add
ffree
out
orb
repz
in
cmc
cld
shr
shl
fndisi(8087
xchg
enter
out
test
out
fcomi
xchg
jmp
out
cmp
stc
cmp
int
fdivp
ffree
cmp
lret
iret
xchg
lret
repnz
in
fcmovbe
ljmp
loop
incb
loope
ret
mov
xchg
mov
enter
stc
ss
iret
loopne
addb
call
mov
lret
int
loop
ror
lret
enter
aam
ds
cmc
frndint
mov
clc
int3
in
loop
xchg
rcl
in
call
hlt
imul
rcr
cmp
sti
call
ljmp
rol
in
int
repnz
not
cmp
call
hlt
rcl
xchg
out
jecxz
mov
or
test
fcom
enter
lock
in
sti
in
cli
out
aad
ds
jmp
lock
in
ret
lret
clc
iret
out
fstp
icebp
repnz
out
les
fimuls
add
fstl
jmp
xor
out
ds
stc
clc
cmp
ds
shr
out
jmp
ljmp
xor
icebp
jmp
addl
lret
enter
jmp
into
out
repz
loop
ror
cld
cmc
icebp
cmc
xor
cmc
icebp
call
loopne
cmp
call
cmp
hlt
cmp
ss
fcmovnu
and
mul
stc
loopne
enter
jmp
add
cmc
jmp
sti
cmc
rcr
mov
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
das
mov
push
add
add
aam
sub
in
test
repz
mov
ljmp
ret
icebp
int
shr
into
lock
repnz
loop
hlt
test
hlt
fmull
enter
mov
call
cmp
in
iret
sub
cmp
cmp
mov
loopne
int
cmp
aad
clc
lret
fcmovbe
sar
rcr
fucomp
shl
aad
lret
xchg
fisttpll
xor
iret
sub
xor
shr
rol
into
fdivr
dec
fmul
lret
cli
int
xchg
aam
sub
in
int
aad
stc
hlt
rcr
clc
test
fadd
sbb
testb
adcl
enter
shlb
addl
out
fisttps
sub
hlt
aaa
sarb
fdivr
ds
mov
fucom
std
mov
fisttps
icebp
repz
aad
fucomip
shr
int3
lock
stc
xlat
aas
fmul
cld
mov
test
fucomip
hlt
jmp
fsubr
clc
jmp
cmp
call
ds
cld
int
int
mov
dec
mov
fldl2e
iret
div
fcmovnbe
loopne
into
clc
fcmovnb
loopne
aas
cmc
sti
std
leave
stc
out
fmul
sub
rol
in
in
icebp
aam
in
cmc
aas
out
cmpl
xor
stc
mov
xchg
sar
int
lret
cs
jmp
loop
fdiv
rolb
ror
enter
iret
loop
repz
in
loopne
xlat
out
cli
aad
icebp
div
in
mov
stc
out
jmp
loopne
in
cmp
std
lret
ror
in
cmpl
flds
std
in
jmp
std
mov
mov
fdivs
xor
ljmp
aam
test
sub
sti
jmp
fmulp
call
int3
fcmovu
ret
cmp
test
cmc
leave
cmp
enter
int3
jmp
mov
out
lock
repz
repz
fdivrl
out
enter
fcomp
out
jmp
icebp
repz
into
div
fstp
lret
lock
repz
jecxz
shl
cld
int
fisttpll
mov
loop
stc
clc
xlat
ljmp
int3
hlt
movb
sar
mov
aaa
ror
std
cld
fst
aad
xor
idiv
loopne
fsubr
jecxz
sbb
not
repz
jmp
int3
cli
lret
cmp
xlat
call
mov
jmp
enter
aad
leave
fnsave
cmp
mov
adc
jle
add
movl
hlt
aad
xor
repz
shl
fdivp
fucom
aam
incb
mov
out
vpsubusw
aaa
cmp
in
clc
call
adc
mov
repnz
aaa
stc
rol
in
lret
fstpt
fdivrp
cmp
rcl
into
fadd
clc
out
sbb
mov
addl
lock
icebp
shl
xlat
fsub
shl
jmp
out
rcll
ss
fsubrp
sarl
cmp
xor
icebp
std
incl
jmp
mov
xchg
fsubp
cs
ret
lret
leave
cmp
fdivrl
int
rol
add
lea
ljmp
xor
xor
enter
hlt
aam
jecxz
rcl
cmp
or
loopne
leave
repz
ret
jecxz
neg
in
cld
into
stc
aad
fadd
cmp
out
jmp
fldl
xchg
loope
ss
in
fistpll
cmc
cmp
fucom
clc
rol
lret
ret
jecxz
iret
jmp
stc
cli
rol
repnz
adc
test
mov
loopne
or
out
mov
mov
fsubr
call
aas
enter
loop
dec
cmp
loop
xlat
ffreep
into
out
test
lock
xlat
xor
clc
cmp
fcom
std
fadd
cli
shl
std
fdivrp
mov
decb
cmc
repz
fbstp
jmp
fdivr
fdivrs
repz
ffreep
in
rcr
fiadds
sti
nop
movb
leave
ffree
leave
fdiv
fst
xlat
ss
idiv
test
adcl
shl
xor
aam
enter
cld
neg
cmc
stc
into
fdiv
loopne
ljmp
jecxz
int3
ffreep
xor
aad
idiv
rcr
clc
and
loop
test
fxch
cmpl
fsubr
xchg
mov
in
shll
int3
sub
hlt
aaa
enter
in
jmp
idivb
addl
call
test
in
aam
enter
sti
in
clc
repnz
out
rcl
cld
add
lret
lret
in
repnz
xor
lock
out
cli
ret
loop
rol
loopne
cmp
cli
mov
std
rclb
ret
aad
call
sar
cmp
jecxz
fld1
lret
clc
ljmp
mov
xor
xor
das
idiv
enter
div
fldl
enter
fxch
repnz
lret
loope
in
jecxz
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
cmc
xor
sar
aad
xor
mov
fimuls
out
call
out
fcmovnu
clc
aad
fxtract
xlat
jecxz
out
sar
out
int3
out
in
std
cmc
lds
out
hlt
out
int
fdivr
int
into
ret
fisttps
loop
out
lock
xchg
in
loop
cmp
repnz
ss
cmp
cmp
std
in
sbb
test
fcomi
ror
out
aam
aas
enter
call
cmp
rol
cmp
cld
mov
jmp
popl
loop
into
hlt
cmp
cmc
cmp
aad
and
in
jmp
cmp
xchg
call
lret
aaa
stc
xor
xlat
cmp
out
lock
sub
rol
in
out
cli
shr
jmp
xchg
decb
leave
aam
aaa
fsubr
rcl
std
cld
cld
iret
loop
std
test
rcr
xchg
out
int
cmp
xor
hlt
cmc
clc
sti
fmul
cmp
idiv
out
push
addl
sub
mov
fsqrt
xor
f2xm1
xor
loope
in
rcr
loopne
stc
fdivr
test
addb
int3
bnd
cmp
out
shr
cmp
stc
xlat
in
out
out
out
rcl
test
clc
test
ret
lret
shl
shl
ror
jmp
sti
idivl
hlt
icebp
into
in
repnz
ret
enter
orb
cld
xchg
ljmp
aaa
cmp
fcmovne
ds
int
out
cmp
in
mov
int3
or
lret
adcl
xlat
cmp
ret
fsub
std
fiaddl
clc
in
stc
icebp
popl
das
int3
jecxz
shl
jmp
aaa
rcr
cld
loopne
stc
lret
mov
fxam
jmp
ljmp
shr
sti
ret
out
call
lock
xchg
mov
jmp
sti
ss
in
sti
sar
test
loop
fninit
decl
nop
test
enter
fcmove
repnz
ljmp
cmp
fsub
call
fcoml
jmp
iret
xlat
iret
cmp
in
aad
icebp
iret
in
test
sti
out
hlt
loope
xor
repz
fsub
lock
int
std
ret
cmc
icebp
out
xchg
aas
mov
in
rolb
out
loop
sar
test
shl
rcl
ffree
int3
ljmp
rcl
ljmp
aam
cmc
lock
idiv
fcomp
fcmovnu
in
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
outsl
xlat
or
push
add
add
xchg
cli
lea
fsubr
in
sti
xlat
enter
in
std
xor
jecxz
ret
lret
lea
repnz
cmp
fcmovne
cmp
int3
loopne
jmp
in
fmul
cli
sbb
faddl
out
into
int
aam
aaa
out
repz
enter
cmp
enter
std
nop
test
jecxz
mov
xorb
stc
sub
not
leave
clc
xorb
stc
loop
testl
int
fucomp
shr
in
in
aad
repz
clc
cmc
in
fcmovnb
sar
cmp
cld
mov
xchg
std
decl
xor
ror
int
fdivs
jecxz
aam
fcmovne
fucomi
test
loope
sti
jecxz
nop
icebp
xchg
xchg
shl
xor
cmp
clc
out
xor
shr
in
test
cmp
repz
sbb
loop
jmp
aaa
shr
ss
ss
shlb
lret
xlat
xor
cli
sbb
fisttpll
out
xchg
loopne
cs
int3
imul
hlt
xlat
into
loop
sti
cmp
cmp
xchg
cld
xlat
mov
ljmp
adc
rcl
cli
xor
aaa
repz
int3
jmp
in
test
jecxz
cmc
mov
sti
xchg
out
int
jecxz
out
leave
lock
cld
ljmp
into
aas
fcmovbe
loope
xchg
leave
ljmp
in
repz
imul
xlat
cld
xor
loope
int
cmp
aam
fprem1
fcos
xchg
shl
mov
call
shl
ss
xor
stc
cmp
loop
sti
mov
in
fstp
les
out
cmc
enter
cmp
xor
ds
loop
test
and
int3
addl
rcl
repz
in
in
clc
sarb
cmp
cli
fucomp
in
xchg
int3
in
out
xchg
test
out
in
xlat
jmp
aas
cmp
fcomp
shl
fcom
fstp
stc
int3
out
fiadds
out
das
test
jmp
cmp
aad
xlat
stc
mov
lock
hlt
xchg
into
loop
sti
hlt
sar
ljmp
clc
cmp
cld
fstp
clc
mov
xor
repnz
loopne
into
jecxz
std
vpaddusw
lret
neg
addb
rorb
xor
cmp
out
cmp
idiv
in
rcl
xor
out
fucomip
iret
fdivp
loopne
lret
lret
sar
call
ffree
out
sbb
cmp
repnz
loopne
incl
xchg
clc
lock
adc
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
sbb
jle
add
repnz
icebp
icebp
cld
iret
sar
rol
adc
ds
ljmp
lret
repnz
sub
icebp
stc
cmp
loope
xlat
ffreep
loopne
ffree
in
leave
int3
jmp
lret
cli
out
out
leave
jmp
faddl
in
cmc
in
jmp
xchg
clc
neg
in
out
cmp
cmc
incl
out
ret
std
test
out
adc
mov
xor
out
divl
leave
ljmp
shl
ljmp
into
rcr
xchg
shr
rcl
shll
xor
loop
cmp
leave
or
xor
in
loop
dec
lret
enter
ljmp
cmp
test
std
sub
stc
mov
or
into
repnz
repnz
repnz
cmp
std
cli
fadd
clc
fmuls
xchg
sub
out
lock
repz
xlat
rcl
sti
incb
xchg
lret
in
ss
xor
aaa
cmp
mul
cmp
and
loopne
aad
in
std
int3
mov
xchg
icebp
loop
fcmove
in
aam
fcmovbe
fdivp
loopne
repnz
std
ret
cmc
mov
mov
xchg
jmp
xor
cli
shr
in
cmp
flds
enter
enter
shr
call
jecxz
xor
shr
ror
repnz
clc
icebp
cld
fiaddl
loope
icebp
out
ljmp
jmp
aaa
int3
aas
fcmovb
cmp
rolb
std
in
lock
imul
xor
cmp
sti
fsub
lret
jmp
cmp
shl
rcr
fsubp
loopne
in
icebp
filds
shll
xor
rcl
xlat
cmp
fcmovbe
xlat
jecxz
shl
jecxz
in
mov
fistl
repz
std
lock
jecxz
cmc
sar
jecxz
clc
mov
mov
lock
jmp
stc
ror
lret
into
rol
idiv
fucom
fcmovb
cld
in
out
fucomp
into
push
subl
jmp
rcl
enter
fldl
push
xchg
mov
add
cmp
add
add
call
in
cmp
jmp
cmp
sti
fcomip
sbb
out
lret
sub
iret
icebp
iret
clc
fcmovnbe
aam
loope
lock
aas
shl
in
xchg
out
fdivr
shl
notb
int3
lret
xor
iret
fcmovnbe
shl
rcl
in
lock
mov
int3
test
in
aam
iret
out
sti
xor
shl
sar
hlt
xchg
fcomip
out
call
loop
out
jmp
shlb
leave
xor
cmp
incb
orl
fdiv
enter
ds
ret
cli
xlat
test
cld
idiv
ret
lret
xlat
mov
call
decl
shlb
xor
cmp
xlat
out
clc
mov
cld
lret
cld
in
cli
mov
call
call
hlt
sti
in
std
cld
mov
lret
out
test
rol
cli
jecxz
icebp
fsubr
lock
rolb
xor
loop
fcomip
xchg
aad
sar
aas
sbb
rcr
in
cmp
and
lret
loope
shl
out
out
xor
neg
xor
cmp
out
idiv
sar
cmp
std
int3
testl
out
out
hlt
aam
cmp
repz
xlat
xchg
clc
mov
adcb
repz
lret
lret
fidivl
fcmovbe
fyl2x
stc
cmp
mov
and
loope
mov
in
enter
in
int3
cli
cmp
sarb
aad
fcmovb
aad
call
in
test
repnz
jecxz
icebp
int3
std
neg
lret
idivb
ror
idivl
fcomi
jmp
out
cli
mov
test
iret
sar
repz
leave
jecxz
loope
add
mul
clc
xchg
jmp
loope
fcmovnbe
std
sarl
shlb
and
sar
loope
repz
imul
into
lock
xchg
fisttps
shll
out
aam
xor
repnz
shl
rcr
mul
cld
mov
hlt
mov
pop
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
fdivrs
add
add
jmp
int
lret
lea
std
div
leave
cmc
out
icebp
jmp
ret
mov
loope
out
sbb
out
in
fadd
shr
xchg
cs
out
jmp
test
jmp
and
test
rolb
xor
rcl
xor
fdivr
fucom
icebp
loop
int
ret
cmp
call
cmc
test
mov
loope
xchg
fcoml
repnz
fld
xor
adc
xor
mov
out
sbb
jecxz
out
ljmp
fdivp
repz
ljmp
fsubrp
pause
out
aam
int
sub
icebp
lret
fdivrp
jecxz
cmp
xlat
cld
mov
xchg
jmp
fisttpll
leave
in
cli
xor
out
cmp
fcmovb
fadd
in
jmp
mov
mov
jmp
out
fdivr
iret
into
shl
lret
fyl2x
xlat
incb
in
mov
loope
xchg
rcl
int3
ret
sti
into
in
leave
ljmp
repz
loope
ret
aad
lret
nop
iret
fcmovnbe
ljmp
les
in
iret
leave
aas
out
loopne
ret
fmul
enter
out
out
test
cmp
jmp
out
fchs
cmp
les
orb
mov
lock
shlb
cmp
int
loop
loope
loopne,pt
cmp
loope
leave
mov
mov
fdivp
cs
rcr
ss
out
hlt
mul
int
loop
decl
aas
sub
out
in
in
shr
les
leave
sub
int3
call
ljmp
repz
loop
or
mov
dec
int3
cli
xor
ss
cmp
lock
shl
jmp
movl
in
clc
sub
cs
int
cli
xlat
fmulp
fsub
sti
stc
out
mov
stc
decl
jmp
xor
icebp
std
ds
fdivr
stc
loop
shl
out
sub
push
mov
xor
jmp
fidivrl
aad
fcmovnb
lock
mov
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
cmp
mov
in
sbb
xchg
jecxz
shl
xlat
out
out
cmpb
xor
filds
in
jmp
rcll
leave
jecxz
aaa
icebp
jmp
jmp
ds
fldl
jecxz
in
out
test
int3
shlb
leave
lret
iret
leave
aas
lret
aam
cmp
cld
testl
int3
lret
test
in
jmp
loopne
shl
cmp
repz
cli
test
neg
out
mov
lret
jecxz
repnz
xor
fcmovnbe
clc
call
div
and
rcl
loopne
xlat
in
leave
rol
out
in
jmp
std
lret
fst
out
xlat
ret
enter
cld
int3
xchg
and
mov
repnz
in
fcmove
sarl
aaa
lret
icebp
cmp
cmp
call
lret
ljmp
cmc
clc
call
cmp
test
faddp
cmp
fisttpll
aam
fcmovbe
aaa
xor
aas
cmc
cmp
cli
filds
xchg
jmp
and
fcomip
add
out
icebp
aad
call
cmp
stc
cmc
mov
loope
rcr
xchg
shl
into
xor
divl
enter
clc
ljmp
aam
and
popl
xchg
int
sub
jmp
into
cmp
hlt
rcr
shl
ffree
div
lret
loop
jmp
in
lret
aam
fcomip
shl
cmp
enter
fdivl
cmp
test
ljmp
test
fucomip
ss
sarl
aam
aad
inc
lds
loope
mov
jmp
rorb
out
fxch
enter
cmp
cmc
repz
loop
xchg
sbb
in
mov
stc
out
mov
cmp
lret
leave
out
aam
xchg
vpsrlw
fdivr
out
clc
lret
out
ljmp
xlat
cmp
repz
out
shr
test
hlt
out
idiv
orl
xchg
orb
fdivrl
icebp
not
lret
mov
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
cmp
and
jle
add
addb
test
lock
aam
in
xor
xlat
aam
into
shl
aas
test
in
mov
xchg
fdivrp
out
mov
call
stc
fcmovnbe
out
rolb
aas
sar
fdivrs
repz
mov
jecxz
stc
mov
hlt
test
xor
icebp
cli
lret
aad
aad
iret
stc
rorb
mov
fldl
in
bnd
cli
clc
iret
xlat
cmp
fcmovnu
hlt
jmp
fstp
sbb
fsub
int3
xchg
or
repnz
out
cmp
adc
out
fpatan
lds
stc
iret
rolb
cmp
fmul
div
in
cld
cmp
fsincos
ret
jmp
or
jmp
mov
lea
not
int
lock
filds
loope
test
in
xchg
nop
pop
rorb
icebp
hlt
lret
cld
into
xlat
incl
faddl
fisttpl
in
loop
shlb
fdivrs
xlat
cmp
ljmp
clc
addl
xchg
mov
int3
ror
mov
shl
fcmove
out
hlt
cli
clc
cmp
fcmove
fiaddl
lds
rcr
icebp
in
lock
cli
loop
fiaddl
cld
in
xlat
fmul
out
rolb
xor
xor
fcmovbe
into
cmp
sarb
fsubr
mov
or
jecxz
out
mov
hlt
cmc
lds
in
hlt
shr
std
fcomip
shl
cmp
ret
cmp
loope
mov
lret
in
iret
xchg
ss
ror
sti
loopne
leave
ret
neg
repz
lret
ficoms
in
nop
out
aam
xor
cmc
int3
ds
ret
cmp
mul
in
xchg
lock
in
leave
cmp
sar
ds
adc
cli
out
repnz
mov
out
mov
fsub
aaa
cmp
lret
fcmovnbe
fucomip
sub
sar
loop
adc
in
jmp
std
flds
ljmp
mov
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
cmp
leave
cmp
icebp
sar
sar
jmp
jmp
std
mov
xor
xchg
repz
aam
int
ljmp
test
fsubp
cmc
loope
loop
test
xchg
jmp
ss
idiv
ljmp
cli
in
cmc
ret
mov
lock
call
aas
call
enter
sti
fcmovbe
rcr
repz
repz
fndisi(8087
in
loope
lret
int3
xor
lret
iret
hlt
neg
out
jmp
cmp
jecxz
ljmp
cli
orl
out
aad
xlat
int3
lret
sti
aad
fucom
fdiv
clc
sar
sbb
stc
lret
repnz
aam
jecxz
in
cmp
imul
flds
aad
lret
std
shl
jmp
frstpm(287
das
fdivrp
repnz
in
test
lock
cmp
ljmp
hlt
in
aaa
fucomi
ljmp
into
fcomp
sti
test
xlat
nop
in
nop
in
call
cmp
cmc
cli
clc
xlat
cmp
jecxz
addb
cli
fmull
test
clc
sub
repz
sti
push
fdivp
sbb
repnz
test
fiaddl
out
out
xchg
in
out
stc
lret
int
ret
fucom
cmc
ds
mov
lret
filds
repz
xor
jmp
lret
iret
stc
repnz
test
test
xor
repnz
repnz
fiadds
ret
idiv
lret
ds
repnz
xchg
lret
loope
cmp
cmc
call
xor
idivb
not
cmp
dec
fmuls
cmc
fst
out
aam
repnz
aas
loope
out
xor
loope
out
loope
in
mov
ret
rorl
fdiv
iret
lock
ror
sti
fcomip
fld
xlat
clc
mov
xchg
mov
cmc
in
xchg
jecxz
xlat
int3
out
out
idivb
leave
cmp
hlt
test
loope
fisttpl
call
lret
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
xor
mov
fisubs
add
add
out
leave
int3
iret
std
sti
fcmovbe
out
clc
iret
sar
in
cmc
loop
jmp
out
xchg
out
mov
in
sub
out
shr
out
icebp
sarb
add
fyl2xp1
cld
in
dec
lret
out
rorl
aaa
xor
lret
neg
sti
fstp
add
int
sub
test
jmp
ljmp
rcr
lret
in
int3
int3
fsub
cmc
call
leave
ljmp
repz
shr
iret
cmp
int
sbb
loopne
out
or
addb
int3
fcom
jmp
fnstcw
addb
cld
loopne
nop
jmp
mov
mov
aaa
repnz
xor
jmp
jecxz
fcomp
aam
mul
mov
stc
mov
fldl
int
out
jecxz
fcmovu
xor
cli
repz
in
cmp
cli
jmp
test
lret
loope
loop
aaa
shlb
call
repnz
icebp
test
out
leave
test
xchg
int
xchg
iret
aam
repz
ror
das
int
xor
jecxz
xor
not
rcr
xchg
incl
jmp
aam
std
repnz
jmp
in
out
movl
jecxz
and
int
out
iret
ss
std
lret
cmp
xlat
fldlg2
addb
xchg
faddp
call
out
ds
fldl
aas
imul
fcmovb
cmp
xchg
test
filds
fldl2e
iret
rcr
sarl
ss
fcmovu
fucom
test
enter
ror
out
lock
repz
lock
cmp
in
cli
loope
out
xchg
cld
lret
int3
loope
leave
mov
dec
icebp
les
stc
hlt
out
sti
enter
int
in
mul
ret
loope
fildl
in
call
idivl
out
fstpt
lret
xlat
iret
iret
ret
xchg
jecxz
addl
mov
jmp
das
repz
jmp
cli
lock
test
cmc
mov
ret
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
jge
mov
add
add
loopne
mov
int3
out
out
jmp
out
stc
leave
loop
in
fiaddl
out
int
lds
jmp
xor
xlat
lret
xor
cld
std
stc
cld
shl
test
sub
out
mov
cmc
shr
clc
jmp
call
cmp
ret
out
shr
loopne
mov
fsubp
fbstp
cmc
in
out
lock
xlat
aam
testl
enter
jmp
xchg
imul
in
leave
in
into
out
into
fistpll
aad
cmp
rol
jmp
jmp
fimull
into
iret
ret
enter
sti
clc
into
ret
in
xor
fcmovnbe
call
mov
ret
icebp
xchg
hlt
icebp
shlb
out
cmc
xlat
cmp
ds
ret
jecxz
rolb
clc
loopne
int3
in
hlt
ljmp
lds
ds
out
fdivrp
call
fdivrp
iret
lret
loopne
mov
in
xor
iret
ss
std
fst
aad
stc
hlt
out
repz
test
lret
in
mov
lock
mov
repnz
sarl
stc
sar
rcl
rcr
xlat
in
fcmovbe
shl
fsubr
mov
mov
call
ljmp
in
iret
leave
xor
jecxz
cmc
mov
cld
lret
cld
enter
loopne
xor
in
iret
call
cli
loope
lock
shl
sti
std
std
mov
orl
enter
loope
cmp
clc
std
hlt
loop
les
in
out
lret
mov
out
stc
call
cld
fsubr
cmp
cld
aad
jmp
loope
fadd
fsub
hlt
loopne
loop
in
shl
fcmovnu
lock
or
aas
cmc
jecxz
fscale
stc
fcmove
lret
sar
jecxz
in
sar
jmp
cmp
xlat
loope
rol
in
loop
incb
int3
stc
xor
enter
cmp
cmc
xlat
flds
jmp
dec
in
ror
loope
jmp
repnz
xor
cmp
sti
cli
fistpll
into
xlat
lock
out
rol
xrelease
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
imul
cmp
jle
rcl
cmp
hlt
loope
or
lret
xor
fnstcw
cmc
loope
sub
repz
out
loopne
ljmp
lock
fcmovne
out
cli
in
icebp
repz
into
loope
add
fisttpl
sub
jecxz
ret
in
cmp
xor
repz
cmp
loopne
roll
cld
or
lret
shr
xlat
ss
in
jmp
in
ret
shl
out
lea
in
loope
filds
repnz
std
int3
ds
test
out
repnz
cld
fcmovnu
mov
ret
mov
out
cmc
in
out
stc
call
xor
cmp
xchg
jmp
out
xchg
cmc
out
in
clc
repz
mul
repnz
aas
hlt
aam
out
and
loope
shrl
lock
shl
not
aas
xor
fldz
into
loope
aam
mov
cld
mul
out
std
in
cmp
xor
jecxz
xor
in
cld
cmc
cmp
int
cmc
ret
clc
rorl
repz
dec
lret
stc
jmp
cmp
loope
loope
repnz
test
xlat
hlt
mov
sti
fdivr
nop
mov
out
shlb
aad
aaa
jmp
iret
loop
shl
xchg
enter
lret
xchg
cmc
leave
repnz
cmp
repnz
ret
fidivrl
ret
out
jmp
lock
aad
leave
shlb
int3
fsub
xlat
loopne
ret
fadd
inc
xbegin
faddp
mov
std
addb
fcom
cld
fmul
in
in
fmul
loope
rcr
fmul
cld
enter
cld
std
shl
add
jmp
call
cmp
iret
rcl
ret
cmp
clc
icebp
xchg
in
rcl
rcl
fmulp
call
cmp
adc
fdivrp
and
and
and
enter
lret
out
jmp
cmp
cli
sti
add
fiadds
std
repz
aam
ret
int
frndint
sti
xorb
enter
adc
in
mov
jmp
int3
aas
rol
fst
fadd
ljmp
aam
sub
jle
les
call
incb
rol
xabort
fincstp
xlat
xlat
aad
rcl
rcr
fcmovu
call
imul
in
loopne
mov
cmp
fdivrs
cmc
faddl
fcomip
leave
ret
jmp
in
jmp
xchg
xrelease
jmp
aad
stc
xor
out
sti
not
lock
rorl
ror
in
enter
ss
or
rcr
cmp
xlat
out
int
loopne
sub
repz
shl
enter
ljmp
cmp
cli
leave
mov
shl
adc
cmp
fcom
icebp
out
fadds
out
ffreep
loopne
in
out
lock
jmp
into
jmp
leave
lock
test
aam
mov
lock
iret
in
cmc
jecxz
lret
jmp
fcom
lock
mov
lock
out
xchg
xchg
xor
jmp
div
stc
out
in
hlt
jmp
aaa
xchg
out
in
in
lea
shr
repz
lds
iret
fdiv
out
icebp
hlt
std
int
ret
cld
ret
mov
mov
or
xor
xor
call
repnz
neg
loop
sub
in
mov
test
xor
in
jmp
ror
jmp
xlat
out
stc
out
test
cld
mov
xor
test
out
fistpll
aas
idivl
mov
ljmp
in
out
xchg
test
iret
out
jecxz
repz
fiadds
or
cld
fcmovnu
or
cld
fxch
fucomp
mov
into
loope
stc
in
in
cs
sar
addb
ror
fmulp
mov
int3
orl
loope
not
jmp
out
in
fdivr
adc
cli
cmc
cmc
loop
aam
mov
mov
lea
xor
xor
test
rcl
xor
fucompp
mul
cld
leave
mov
iret
loope
aad
xor
fsubr
call
inc
in
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
bound
test
das
add
add
cmp
fst
aam
repz
mov
mov
add
faddl
hlt
mov
call
lret
cmp
aam
lock
and
test
leave
jecxz
into
mul
fxch
into
aam
enter
aad
hlt
out
hlt
aad
mov
xlat
xchg
iret
in
lock
out
jecxz
out
into
out
cmp
cmpl
xchg
mov
clc
addl
lret
call
clc
cmp
rol
in
fildl
xchg
add
lret
int
std
into
aam
fcmove
out
ret
hlt
jmp
std
jecxz
cld
ljmp
fildll
lock
fmul
xlat
fdivr
loop
cmp
icebp
ljmp
sti
in
loopne
xchg
in
cmc
divl
cmp
clc
icebp
cmc
out
loope
in
filds
out
nop
test
bnd
call
or
loop
int3
mul
repz
orb
loope
iret
in
enter
repz
cmp
shr
cmp
repz
out
testb
aam
sti
lock
enter
mov
out
out
xor
fpatan
cmp
xor
ds
mov
in
in
jmp
das
aam
shlb
aad
ds
repz
fldl
lret
lret
out
ror
jmp
rcr
ljmp
and
repz
clc
in
out
xchg
shll
mul
hlt
sti
repnz
jmp
shr
test
aam
not
jecxz
in
call
ljmp
sar
clc
in
roll
out
xchg
and
imul
ret
in
fcmovnu
iret
ds
int
ret
in
loope
fsubr
testl
xchg
clc
loop
std
in
in
into
cli
xor
repz
std
leave
mov
nop
cld
xchg
xchg
xchg
stc
leave
cmp
cmc
sti
iret
fiaddl
cmp
fcmovnb
int
icebp
mov
shlb
or
push
add
add
xlat
xlat
rcl
ror
fld
cs
and
dec
jecxz
xorb
jle
add
enter
leave
jmp
rcl
repz
shr
mov
leave
mov
orl
in
stc
ss
sarl
ror
fsub
xlat
cmp
out
std
fcmovne
in
fisttps
int3
enter
cmp
call
test
cmp
in
lret
ljmp
lret
fdivrs
ss
adc
frstpm(287
aam
vpandn
fimuls
ljmp
ss
icebp
aad
loop
rcr
ret
neg
out
orl
divb
cli
xor
shl
cmp
cmp
stc
cmp
leave
clc
into
or
aad
shl
fdiv
aam
iret
aas
cmp
repz
repz
out
clc
hlt
cli
mov
xchg
loopne
ret
in
xor
cld
iret
fcomip
jmp
shl
repz
lret
ret
in
ljmp
in
in
int3
clc
fstp
icebp
cmp
sbb
cmpl
ret
in
loop
xchg
lret
enter
rol
xor
aad
not
cld
fmulp
in
out
out
loopne
mov
out
loopne
int
shlb
test
shlb
sti
sti
aad
mov
xlat
jmp
int3
repnz
shl
cli
out
lret
call
ljmp
cmc
repz
fcomi
roll
aad
cli
neg
into
rcr
aam
sti
cli
repnz
aam
shl
cmc
test
not
icebp
enter
out
into
shlb
in
into
clc
int
leave
aaa
hlt
shl
fadds
xlat
ret
lret
cld
icebp
lret
xchg
div
ret
ljmp
stc
roll
push
enter
cmp
in
fiadds
jmp
and
fucom
cmpb
cli
xchg
ljmp
fildl
repz
in
in
lret
cmp
cmp
ret
hlt
shl
fdivrp
xlat
mov
test
into
xchg
xor
ret
cmp
fstpt
jmp
iret
cmp
loope
out
call
cli
add
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
iret
mov
add
hlt
mov
out
repz
cmp
aam
fcmovu
int3
inc
lock
sar
aam
lret
iret
ljmp
test
xor
fidivrs
loop
rcr
in
test
mov
test
icebp
into
stc
into
fdivp
xlat
loopne
aad
ljmp
out
in
fiaddl
das
enter
out
idivb
loope
cmc
jecxz
shr
sti
jecxz
std
lock
xchg
repz
das
xor
lret
leave
sti
jmp
ret
les
orl
idivl
xlat
xor
lret
lret
jmp
sti
div
hlt
out
enter
ljmp
jmp
out
ror
clc
cmp
int
xlat
out
cmc
leave
test
ret
xlat
loop
mov
mov
xor
std
jmp
ret
xlat
fstp
not
enter
xchg
nop
xchg
xchg
out
int3
jmp
shrb
fstp
xor
lret
ror
xlat
fsubp
lock
ljmp
ljmp
lret
into
lret
sarb
loopne
sti
out
sti
xor
out
out
fiadds
xchg
std
out
xor
ret
leave
stc
ffree
sub
xor
cmp
std
jecxz
sbb
fiadds
incl
aad
cld
clc
cmc
shr
out
inc
fcom
addb
incb
xor
in
lret
sarl
cmp
xor
fcomi
aam
orb
aad
fabs
fxam
std
int
in
sarl
out
jmp
mov
test
jmp
in
das
sub
ljmp
jecxz
cmp
mul
std
fsubr
orb
aam
fdiv
repz
cmp
xor
repz
fst
loopne
icebp
std
fsubr
mov
xchg
mov
in
repz
into
xlat
in
std
cmc
lret
cld
repz
add
xchg
mov
repnz
std
repnz
rol
call
fidivs
iret
shr
aas
sti
in
sti
div
lea
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
xor
fisubrl
xor
jle
in
int3
flds
shl
in
ret
neg
shr
sar
ds
testl
fucomip
or
aam
clc
jecxz
cli
out
xor
int
repz
cmp
aam
dec
out
repnz
xchg
xchg
nop
repz
int
in
cmp
cli
hlt
cmp
loopne
loop
xlat
or
decb
xlat
lret
icebp
cli
cmp
xor
cmpb
cli
loope
loope
shl
ljmp
cli
fmul
mov
ss
stc
cmp
int3
sbb
loope
repnz
loop
test
int
test
xchg
fstl
into
jecxz
leave
rol
roll
std
fdivp
iret
into
xchg
std
iret
xchg
xchg
xor
jmp
out
in
into
loop
in
and
mov
out
rolb
jmp
fdiv
rcl
loopne
xlat
stc
aam
fmul
cli
lret
fcmove
loop
xchg
repz
loop
aam
jecxz
shl
cmp
inc
ret
in
lock
sar
mov
stc
test
fcmovu
lea
ror
cli
ret
fstpt
xor
aad
repnz
loop
sti
rolb
and
xor
icebp
cli
out
loop
clc
int
jecxz
test
mov
addl
lret
ss
repnz
ds
test
jecxz
rcr
out
fucomip
xchg
or
rcr
out
jmp
cmp
cmp
rcr
jecxz
ret
xlat
mov
cli
shr
repz
ror
out
cmp
loope
fdivr
cmp
cmc
fcmovb
fcomip
mov
leave
test
jmp
lret
iret
clc
xor
lret
aas
xlat
cld
in
cmc
hlt
sti
lret
cmp
loopne
jmp
xchg
xlat
ror
stc
xlat
cmp
icebp
fmul
cmp
neg
out
xor
jmp
lock
popl
repnz
out
sti
shl
aam
repz
cmp
fiadds
in
lret
mul
icebp
ss
cmc
sarl
icebp
loop
repz
add
add
leave
mov
ror
adc
push
sub
adc
cmp
jle
addb
loop
clc
call
in
clc
clc
xor
fstpt
iret
lock
into
cld
and
fisttps
out
xchg
aad
cmc
in
in
cmp
jmp
aam
loop
ret
fst
dec
mov
xchg
cmc
cmc
icebp
loope
sti
in
cld
ljmp
hlt
shl
in
stc
mov
mov
fmul
enter
test
iret
jmp
into
leave
cmc
loopne
loope
xor
loope
mul
xchg
flds
cmc
shlb
jmp
out
icebp
lret
fnstsw
call
ffreep
fdiv
loop
aad
mov
jmp
xchg
xor
xlat
out
leave
xor
icebp
fprem1
stc
adc
call
xchg
mov
orb
xlat
ret
imul
out
xor
aad
cmp
ds
aaa
lock
sar
mov
and
in
mov
ljmp
ror
xlat
shl
rcl
enter
fdivrp
loopne
roll
xor
loop
in
enter
faddp
idivb
mul
fcomp
loope
sti
mov
shl
testb
repnz
loope
cmp
ret
mov
dec
adcl
enter
and
ret
faddl
mov
sbb
mov
jecxz
divl
leave
cld
sarb
fcmovbe
cli
lock
xchg
neg
loopne
cld
sub
in
das
shl
fnstenv
out
shr
aam
addl
aad
into
in
incl
aam
das
int3
in
cmp
sarl
int
fsincos
adc
aam
rcl
loop
out
xchg
mov
in
leave
enter
cmc
into
div
shl
hlt
incb
lret
ds
faddp
test
in
xchg
leave
idiv
shl
cmp
std
cmp
rcl
fmulp
div
fucomp
xchg
loop
in
add
fdivrl
enter
ljmp
xlat
out
fdiv
mov
clc
jecxz
int
out
loopne
icebp
shl
cmc
cmp
dec
clc
xor
jmp
int3
aas
ret
sbb
roll
pop
call
add
aam
sarl
hlt
div
test
std
ljmp
ljmp
stc
clc
leave
fcmovne
sar
aam
aad
jecxz
fadd
mov
decl
rcr
cmc
enter
out
hlt
out
leave
aas
fcmovnb
shr
lret
in
loope
leave
xchg
test
jmp
cmc
fsub
addb
stc
enter
fstl
mov
loop
lock
std
sar
ds
add
xlat
xchg
in
in
into
xchg
hlt
icebp
leave
xor
enter
divl
ror
and
ret
mov
cmp
in
shr
fmull
jmp
cmp
cmp
ror
fscale
clc
lock
cmp
test
test
fstp
xchg
into
mul
jmp
loopne
rcr
rcl
cmc
jmp
in
shl
rcl
xchg
into
in
cmc
rcl
ret
aad
aas
jmp
stc
cmp
loope
clc
mov
in
rcl
out
shlb
jecxz
out
icebp
cmp
xlat
shl
rolb
cld
out
orb
xchg
cmc
ret
cmp
lret
out
iret
rcl
cmp
test
rcl
ffreep
hlt
ds
sti
fldz
adc
jecxz
ss
leave
int
aaa
cld
leave
fucomip
iret
testl
xchg
fsubrp
xchg
rcl
test
cs
fld
into
in
cmc
shl
rcl
ss
cmc
lock
test
mov
xchg
cmc
shl
ljmp
iret
int3
xlat
ds
mov
loope
ret
dec
rorb
ret
leave
test
in
xlat
sti
sti
lock
ljmp
call
jmp
ror
not
out
out
in
out
fdivrp
xlat
int
repnz
rol
jmp
test
repnz
test
out
iret
aaa
aad
repnz
fdivrl
leave
shl
in
testl
loope
test
adcb
lds
shr
into
cmp
fsubr
aad
xchg
aam
movl
nop
int
out
repz
cmp
jmp
rol
rcl
rol
aad
sahf
xor
xor
add
int3
rcl
cmp
xlat
out
in
into
movl
jecxz
in
lret
loop
cmp
jmp
not
loopne
into
int
mul
fdivp
out
fxam
cmp
rcl
mov
xchg
xor
lock
fadd
in
fdiv
jecxz
repnz
into
jmp
in
lret
cmp
jmp
cmp
icebp
cmp
aam
jmp
fmuls
aad
xlat
in
int
cmp
hlt
faddl
lret
sti
clc
lret
xchg
test
call
aaa
sub
std
fdivrl
in
rol
lock
cld
jecxz
lret
mul
fisttpll
loope
rcl
leave
repnz
mul
test
fucomip
mov
test
int3
dec
idivb
sub
lock
leave
aam
xor
jecxz
out
test
fcoml
cmp
enter
cmp
sti
repz
aad
ffreep
xor
fmull
out
cmc
in
int3
stc
call
cmpb
loope
jmp
test
xlat
int
out
lea
xor
out
cli
jmp
aad
add
aam
and
aad
ljmp
xchg
in
in
div
clc
jmp
stc
loop
shl
out
repz
xchg
enter
icebp
int3
decl
sti
xor
leave
fcmovu
fdivl
ds
cmp
out
test
test
mov
jmp
fadd
ljmp
clc
ljmp
sub
mov
neg
xchg
int3
icebp
aad
xor
ret
lret
lret
shl
in
in
fcmovne
into
sbb
int
test
repz
fdivrl
cli
jmp
rol
sbb
lret
test
mov
ror
xchg
loope
into
shll
xor
aaa
repnz
add
cmp
fdiv
mov
lret
test
into
mov
out
in
lock
dec
aam
repnz
into
aas
jmp
lret
ljmp
add
jmp
aad
mov
mov
lcall
cmp
jle
addl
in
xor
fdivr
ret
clc
fsubp
stc
aas
enter
xchg
xlat
lret
vpmullw
int
out
lret
not
rcl
test
lds
shl
xor
icebp
stc
ds
iret
loopne
cli
repnz
incl
xlat
mov
cld
fdivr
in
int3
out
in
out
int3
idiv
cli
stc
in
test
test
xchg
out
iret
fsts
clc
ret
enter
cld
lret
xor
cmp
cli
xchg
test
jmp
imul
cmp
sarl
cmp
iret
out
shr
aam
in
in
cmp
repnz
sub
shll
fdiv
std
ljmp
in
rcr
int
out
cmc
out
ljmp
cli
xor
sbb
fadds
fadd
cld
xchg
shr
rol
xor
fmulp
cmc
fcmovnbe
faddl
call
sti
in
xchg
fcoml
out
shl
into
out
sti
shl
loopne
cli
rorl
addl
rorb
xor
aaa
repz
into
hlt
sar
roll
ret
call
mov
out
xlat
shr
not
sar
stc
sar
filds
clc
cld
mov
cli
in
rolb
jmp
ljmp
fnstcw
mov
loope
cmp
out
call
xlat
div
fxch
icebp
stc
test
cli
cmp
out
mov
lock
fcomip
mov
aad
cmp
sti
aaa
test
aad
hlt
iret
ret
test
xlat
inc
int3
test
loope
stc
xor
sub
jmp
fcmovu
ret
ds
in
in
loope
in
mov
das
xor
cli
fdivrl
jecxz,pt
into
xchg
cli
std
out
ffree
out
icebp
cld
out
int
int
aaa
repz
jmp
out
icebp
fsincos
test
fcomp
out
fisttps
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
sbb
roll
cmp
jle
nop
mov
fdivrp
mov
rcl
out
cmp
cmp
icebp
imul
add
loop
sti
in
lret
popl
jecxz
hlt
aam
aad
ror
shl
cld
int3
in
mov
ret
jmp
mov
xchg
imul
shl
lret
into
fdiv
repnz
in
ret
fld1
loope
jmp
mov
loopne
rclb
lret
fadds
cmc
ds
loope
fucom
jmp
and
in
out
in
out
xor
cmp
enter
loopne
aad
xlat
cmc
shr
sar
xchg
ljmp
inc
lock
aam
cmp
fmul
fdiv
out
fcomp
iret
repz
cld
ror
call
in
loop
aad
xor
cmp
les
hlt
ss
fabs
flds
clc
fcomip
in
test
loop
decb
xor
aaa
out
not
cmp
loopne
rorl
cli
ret
adcl
ret
cmp
leave
out
fcmovnu
ret
rol
ret
leave
int3
clc
lret
test
in
sub
fnstenv
xor
repnz
ss
cld
lds
fdivp
cli
cmp
out
ret
out
cmp
repz
loop
cmp
loope
idiv
std
call
rorb
jmp
clc
fidivrl
aad
shl
in
loopne
cmp
repz
lret
xchg
mov
in
into
int
loope
cmc
call
repz
sub
xchg
sbb
neg
jecxz
test
jmp
shll
fstpt
sti
test
sar
idiv
testl
xor
in
idiv
xor
fsubp
icebp
fcmovbe
xlat
into
fmull
leave
mov
cli
fcmovb
xchg
test
xchg
xor
ss
clc
xor
lock
cli
cld
repnz
sti
mov
lret
cld
ret
xor
fdiv
fnstsw
icebp
cmp
ds
aas
adc
fcmovb
stc
in
ljmp
rcl
cli
lret
fdecstp
aad
fnstcw
rcl
clc
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
push
mov
jle
add
fabs
mov
xchg
fmull
into
xchg
das
in
into
leave
out
cmp
xlat
shr
cmp
ljmp
in
rorb
fxam
jmp
cmc
hlt
iret
int
shr
icebp
shl
loope
incl
test
mov
aam
loope
stc
sub
fmulp
cmc
cli
sar
loope
and
into
out
cli
shr
into
addb
leave
in
fmul
cld
loop
cld
sti
lock
cmp
fsubr
fcmove
fucomp
xchg
ljmp
ret
xor
div
neg
loope
repnz
hlt
rcl
stc
loopne
std
mov
out
mov
lret
hlt
int3
lock
enter
std
int
jmp
aad
hlt
enter
jecxz
stc
clc
jecxz
mov
xchg
in
in
in
shr
idivb
xor
sar
test
add
in
clc
sar
out
out
ror
cmp
fxch
std
xor
shl
jecxz
cld
repz
call
jmp
test
jmp
lret
call
imul
xor
fiadds
fcmove
loop
mov
rolb
enter
jmp
in
stc
loopne
fldl
lret
into
std
sti
out
loopne
repnz
ss
enter
loope
shl
shl
ret
cmp
mov
int
mov
testb
ss
out
call
cmp
iret
xlat
clc
fcompp
test
mov
stc
fdiv
jmp
fcmovnu
cmp
xlat
aam
ror
rcr
out
mov
int3
cli
sti
sub
shl
out
aaa
out
out
icebp
in
out
std
cld
shr
repnz
ljmp
xchg
int
cmc
shl
leave
mov
mul
cmp
sti
stc
shr
xlat
repnz
enter
repnz
lock
sarl
cmp
rcl
std
cmp
shl
test
aad
fmul
int
leave
lea
in
cmp
jmp
cli
rcl
fcmovnbe
cld
ret
stc
sti
leave
loopne
lret
clc
fstl
in
loope
fcmovnu
icebp
int
pop
xchg
jmp
aas
int3
mov
std
int
pushf
cs
sub
mov
add
add
loope
aaa
call
test
fsubr
in
nop
fucompp
in
test
in
repz
lock
cmp
stc
loope
test
mov
shr
repz
xor
in
call
cld
xor
xlat
fsub
enter
decl
xor
fdivrs
fidivl
cmp
sar
aad
rolb
stc
cli
out
lret
repz
call
aad
cmp
sti
shl
repz
sarl
mul
mov
cli
rorb
jmp
out
divb
xor
in
leave
ljmp
mov
xchg
mov
mov
and
jmp
orb
in
enter
test
repz
loop
loopne
lock
mov
popl
std
neg
in
cmp
repz
out
fcmovnu
call
in
fists
out
xor
lret
jmp
out
shr
iret
stc
ror
sti
out
repnz
fucomi
mov
nop
shr
mov
rcll
cmp
imul
cmp
adc
dec
stc
stc
fldl
xchg
adc
enter
sti
lret
fucomp
aad
aam
aad
xchg
leave
fucomip
cld
shl
hlt
in
into
into
not
rcl
aad
shl
sti
out
not
test
ds
xchg
out
enter
xchg
xchg
out
shrb
icebp
cmp
jecxz
ds
xlat
fidivrl
mul
out
call
repz
enter
out
xor
clc
lock
fmul
loope
loope
out
out
ret
ffreep
in
jecxz
mov
leave
loope
shl
aam
hlt
lret
into
xor
rol
adc
loope
mov
sti
xor
leave
xor
fldcw
rcl
loope
cmp
test
std
mov
std
lret
xchg
xchg
out
into
ljmp
ss
icebp
std
div
xor
rolb
not
cmp
flds
lret
ret
fsubr
lock
lret
adc
leave
jecxz
imul
ljmp
test
xor
ss
cs
xchg
dec
jmp
lret
int3
fcmovnu
mov
std
adc
jle
add
aaa
cmp
sbb
shl
fcomp
out
jecxz
sti
jmp
out
xlat
ret
xor
rcr
xor
aad
aad
aam
into
fucompp
rcr
hlt
mov
leave
cmc
decb
clc
into
rcr
sti
ror
ret
imul
lock
sar
std
xchg
out
iret
out
xor
lret
out
clc
clc
ret
repz
cmp
lea
enter
jmp
cld
cmc
fcom
cmp
fildl
sbb
jmp
repnz
repnz
cmp
repz
cmp
testb
icebp
out
ljmp
ss
enter
idivl
ds
loope
xchg
orl
lret
into
out
rclb
fninit
fnstsw
cmp
cmpl
cmp
in
ret
ror
int3
loop
xor
cmp
sti
ljmp
mul
testl
in
in
divb
int3
aam
idivl
in
int3
call
ret
repz
aam
call
mov
loopne
in
repz
fcom
aam
int3
stc
or
loopne
cli
clc
hlt
repz
call
xchg
nop
icebp
lret
sarl
cmp
xlat
cmp
sbb
cli
fsubp
call
xchg
decl
iret
lret
cmp
fbstp
loopne
icebp
clc
and
loop
fildl
in
rclb
aaa
shl
cmp
sbb
lock
test
lock
lock
xchg
rol
mov
xlat
sti
fnstcw
repnz
rcl
fcmovnu
rolb
in
nop
leave
xchg
iret
repz
repz
cmc
call
cmp
sar
addl
mov
aam
xchg
lock
out
aad
iret
movl
call
jmp
xchg
loopne
rol
or
shr
stc
aam
leave
shl
int3
clc
neg
fisttpl
add
in
orb
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
loope
push
mov
lret
cmp
jle
jmp
rcl
aad
aam
std
fucomip
test
call
xlat
cmp
jecxz
xchg
lret
int
in
out
aaa
in
cmp
in
lret
into
fdivrl
stc
ret
lds
clc
addb
jmp
aaa
stc
iret
std
fdivr
std
out
sbb
ret
xchg
int3
cli
out
incl
in
cmp
in
rcl
testb
jecxz
repz
out
call
in
ret
sti
int
sar
ljmp
idiv
inc
mov
sti
loopne
lea
leave
imul
in
lret
cmp
iret
ror
ret
sbb
fisttpll
mov
in
jmp
out
das
iret
aad
in
cmp
sti
fxch
loopne
xchg
add
call
xchg
fidivs
stc
fcmovbe
xor
cld
cld
ror
cli
cld
ds
aad
aad
fadd
fisttps
popl
xor
fcmovnb
fdivrs
fcmove
into
rcl
xor
cmp
rcr
mov
and
ljmp
stc
int
idivb
fidivrl
cli
cli
xlat
loop
shl
leave
cmp
loope
jmp
icebp
xchg
repz
stc
cld
cmpb
sar
out
rolb
flds
into
rol
loop
sti
repz
clc
lret
fcom
cmp
cmp
clc
or
test
std
out
hlt
xchg
xchg
iret
lock
rcr
in
xor
cld
fiadds
hlt
aam
sub
loop
fstp
test
xchg
int3
jmp
in
iret
fxtract
ljmp
cmp
fsub
std
cli
loop
adc
loopne
cli
lock
shl
stc
neg
faddl
ror
aam
in
test
in
jmp
xlat
repnz
cli
fdivrp
iret
call
fmulp
fcomip
into
xchg
xchg
aad
xor
enter
int
mul
les
in
fsub
ret
loope
ljmp
cli
rcr
aas
sbb
ret
ljmp
scas
add
add
add
aam
int
int
aam
xchg
inc
lret
pop
fstpt
int3
add
add
cmp
xor
fnstsw
shr
jecxz
in
repnz
loope
ret
loope
adcb
test
xor
xor
ss
in
in
aaa
fdivp
test
inc
loopne
fsts
std
mov
ljmp
int
sar
and
cmp
rorl
loope
call
ret
lret
in
cmc
clc
cmp
jecxz
out
cmp
mov
loop
in
cld
aad
lock
lret
cmp
cmp
aam
stc
shl
jecxz
out
cld
hlt
out
xlat
loop
stc
jmp
jecxz
repz
xchg
out
fcmovnb
fildl
jecxz
rol
fsubr
mul
decb
rcl
lock
out
cmp
leave
cli
cli
out
in
std
loop
test
jecxz
rol
mul
loop
out
out
rcr
cmp
out
fnstcw
out
loopne
filds
rolb
aad
xor
cli
jmp
cmp
fcmovbe
fsin
call
test
and
out
lock
clc
out
sarl
cmp
fistpll
mov
mul
lret
in
loopne
mov
ss
xor
aaa
hlt
shl
stc
cmp
cmc
out
lret
jecxz
std
xchg
in
loope
call
mul
out
jmp
into
xor
mov
jmp
rolb
aad
repnz
fdiv
repz
cld
loopne
fst
sar
jecxz
cld
in
cli
cli
fcmovnu
out
int
in
fxtract
repz
fidivs
aam
cmp
cmpb
jecxz
fprem1
aam
loop
mov
ror
out
enter
lret
leave
aad
loope
aad
cmc
xlat
mov
xlat
fisttpll
aam
ret
fdivs
ljmp
fcmovne
cmp
repnz
leave
stc
in
loope
mov
loope
loope
test
shr
lret
cmc
xlat
std
call
ret
aas
xchg
fyl2xp1
xchg
mov
xchg
icebp
in
cmc
fmulp
in
into
jmp
enter
in
rcr
test
jecxz
xor
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
jns
lret
into
add
add
cmp
test
xchg
shl
loop
fdiv
repnz
iret
xor
fdivl
ds
cld
not
cmp
leave
jecxz
lret
rcll
xor
xor
lret
cmp
aas
xlat
rol
fadd
out
fdivr
ljmp
xchg
sub
or
aaa
sub
xorb
cmp
loop
in
in
out
popl
xchg
xchg
xor
stc
repnz
int
cmp
cmp
jecxz
fcmovu
mov
sar
cld
call
int
cs
repz
loopne
inc
roll
xchg
in
jmp
enter
repz
filds
hlt
out
sbb
fmulp
xlat
sti
mov
icebp
sub
sti
xlat
stc
fdivp
aam
repnz
fsin
std
faddp
out
mov
jmp
jmp
cmc
ljmp
lret
lock
xlat
filds
in
out
in
fisttpll
out
ljmp
lock
test
cmp
enter
xchg
mov
jmp
out
loop
stc
in
cli
cmp
div
into
cmp
stc
inc
leave
cmp
cld
in
xchg
aam
int
out
cmp
cmp
cmp
clc
fiadds
xchg
xchg
imul
out
fcmove
lret
cmp
in
out
xchg
stc
clc
fucomp
jecxz
orb
lret
neg
int3
sar
mul
repnz
movl
fcomip
mov
loopne
repz
cmp
lret
cmp
cmc
sti
sar
rol
jmp
mov
cld
rol
loopne
mov
div
rol
jmp
xor
cmp
hlt
ds
cmc
mov
not
loopne
mov
test
cmp
aaa
out
sti
cli
cmp
iret
fldl
stc
shl
int3
vpsubb
jecxz
aam
xchg
sub
ror
cld
clc
iret
lock
out
fdivl
repz
loopne
incb
xchg
not
call
fmul
cli
jmp
enter
add
ret
xlat
fmul
fmul
rcr
test
dec
and
lods
rolb
jle
add
clc
fdivrl
lds
mov
sti
int3
ljmp
cmp
imul
cmp
cmc
clc
fcmovnbe
ret
in
leave
aad
lock
shr
loope
rcr
idiv
jmp
int
int3
ret
ds
out
rcl
in
out
mov
cld
nop
std
lret
loopne
das
aam
ss
and
call
sti
ret
shr
ljmp
shl
cmp
ds
cmp
cmc
in
push
ds
out
lret
int3
mov
fsubrp
lock
test
das
cs
stc
fnstcw
neg
sarl
mov
fsubp
xchg
mov
leave
int
ret
cmp
rcl
int
cli
fadd
jecxz
and
in
ljmp
into
clc
sar
cmp
jmp
int3
lock
fsub
fsubr
fsubr
mov
int
in
icebp
out
ret
out
out
jmp
ffree
cli
sti
fdivp
shl
sti
inc
loopne
idiv
int
and
test
repz
cmc
int3
cli
fmulp
sub
ret
shl
cmp
fimull
xchg
notb
aam
rcr
fdivs
out
shl
aam
fcmovu
cmc
call
test
int3
fucom
in
repnz
enter
das
cmp
cli
loope
stc
repz
repnz
ret
test
nop
mov
hlt
cmc
out
shr
iret
out
xor
cmp
int
test
in
mov
jmp
ret
lret
mov
clc
jmp
aad
iret
cli
fdivr
loop
test
out
in
xchg
cmc
out
out
lret
out
loope
adc
loopne
loop
ds
ljmp
bnd
ror
lret
repz
idivb
incl
in
nop
loop
fisttps
lret
das
lock
cmp
loopne
repz
or
rorl
out
iret
xchg
lock
cmp
jmp
in
fmul
stc
xchg
or
aam
sti
fldl2t
lret
je
mov
jmp
rcl
leave
int3
leave
fldt
xchg
lock
rolb
jle
add
lret
dec
std
test
out
test
lea
aam
loopne
ljmp
cmp
std
test
push
shl
out
mov
hlt
in
jecxz
ror
cmp
sar
std
leave
ss
not
hlt
idiv
ds
lret
call
mov
enter
fsubr
repz
out
into
loope
fcmovnb
out
enter
loop
fsubp
ljmp
out
clc
out
stc
call
stc
cmp
hlt
lret
jecxz
int
out
rorb
les
xlat
into
cmp
sti
into
int
repnz
roll
aad
cld
test
fsubp
loop
xor
rcl
fcmovnbe
lret
test
cmp
cli
fdivr
stc
cld
addb
ret
shlb
icebp
fcmovbe
int
rolb
clc
fcmovne
fdivrp
addb
lret
leave
fmulp
int3
lret
addl
out
les
mov
xchg
sub
imul
repnz
lret
rcl
int
ret
dec
std
aas
int3
in
std
lret
cld
mov
in
aad
ds
cmp
or
aad
jmp
mov
ljmp
sar
mul
lret
std
cmp
lret
cmp
addb
xlat
fildl
loop
rolb
in
out
xor
out
neg
fdiv
cmp
aas
fdecstp
xlat
enter
shl
loope
in
das
in
stc
sub
aaa
cmp
cmp
fcomip
out
test
clc
leave
ljmp
lock
fmulp
fcomp
cmp
int
icebp
hlt
sar
ret
in
mov
fsub
loopne
xor
aad
shr
in
aad
lret
xor
icebp
out
in
fmul
mov
mov
into
int3
out
stc
cmp
in
cmp
in
cmp
test
mov
sti
clc
jmp
int
test
lret
aad
repz
in
or
push
enter
int3
loope
leave
sti
fchs
shr
out
mov
xor
adc
inc
addb
add
add
ror
fstp
ffree
pop
fiadds
and
add
add
loop
fprem
aaa
cmp
cmp
loopne
ffreep
fcmovnb
std
stc
cmc
in
loop
repz
repz
out
cli
cmp
cmp
std
div
sti
in
in
nop
in
out
xchg
aam
int
sarl
in
rcl
iret
aas
lock
xlat
rol
loopne
in
in
lret
jmp
fcmovu
int
xor
aad
fdivr
out
xlat
fsub
aad
jmp
xchg
fdiv
test
div
jmp
sti
xor
lret
ds
out
cmp
repz
ret
mul
out
fadd
jmp
jmp
in
cld
adcl
cld
cli
cmp
out
les
in
loopne
cli
loope
mov
in
ret
xlat
iret
fdivrp
ror
test
std
fiadds
out
out
int3
into
loopne
sar
in
aam
xlat
stc
iret
fld
fcmovbe
aad
adc
aaa
addb
xlat
mov
cli
fcomip
std
bnd
in
loop
into
aam
sti
cmp
hlt
out
xlat
xor
ret
and
loop
mov
nop
lret
clc
lret
xor
cmp
aaa
icebp
lock
rcl
idiv
shl
cli
stc
fucomi
xchg
fsubp
xchg
div
xlat
fld
lock
repz
fucomip
ret
faddp
mov
sti
jecxz
fldl2e
in
addb
cmp
stc
hlt
cmp
out
cmp
loop
rcl
loope
test
sar
mov
fsubr
cmc
into
lret
sarl
xchg
hlt
aad
test
int
loop
jmp
ljmp
in
fnstsw
cmc
cmp
xor
sar
fdivr
repz
cli
std
sti
in
shr
cld
xchg
loope
xor
iret
sti
xor
rcr
fildl
test
repnz
ljmp
jecxz
das
shr
ret
fcmovb
test
test
out
mov
in
lock
out
out
hlt
icebp
not
int
fcmovb
xchg
out
jmp
xchg
shll
test
xlat
cld
fsubr
cld
cld
rcl
rol
iret
sbb
cld
std
mov
mov
jmp
enter
int3
aam
pop
adc
mov
test
fcmovbe
add
add
repz
in
sar
xor
icebp
fbstp
into
aad
sbb
fsubr
jmp
loope
into
cmp
imul
icebp
out
aam
test
fst
in
test
addl
xchg
cld
jmp
test
leave
das
repnz
leave
out
sti
cmp
lret
rcl
rcl
mov
fcmovu
std
lret
cli
enter
out
fdivs
cli
fmul
addl
cli
testb
mov
in
xor
fidivrl
cmc
rcl
clc
lret
hlt
filds
out
ljmp
nop
rcl
repnz
into
int3
rcl
aaa
cmp
loop
cld
lock
out
ljmp
mov
not
das
lock
jmp
aam
idivl
cld
cld
cmp
jmp
mov
mov
test
sub
in
cld
in
loopne
aad
ffree
aam
rcr
test
clc
cld
std
xchg
lea
mov
aam
cmp
icebp
repz
cmp
lock
fst
loopne
ljmp
hlt
loop
out
sar
imul
jmp
cmp
rcr
loopne
call
fsub
in
int3
test
xchg
das
rol
xor
int3
aaa
aad
idivl
jecxz
cli
cmpl
fst
sti
xchg
int3
mov
int3
xchg
mov
cmp
out
xor
not
lock
loopne
std
loope
mov
adcb
int3
xor
test
in
sar
cli
cmp
in
jmp
out
jmp
ljmp
aad
stc
jmp
out
icebp
xchg
fadd
cmc
in
mov
fsub
out
mov
rcr
cmc
call
fldl2t
lock
rcl
cmp
call
test
test
out
lret
lock
ss
sar
xlat
sar
ret
stc
or
rcl
sti
out
in
fsubrp
jmp
shl
call
leave
lret
icebp
shl
test
xlat
loopne
fdiv
mov
incb
loope
ret
cld
aaa
in
xor
int3
ds
roll
mov
cmc
mov
shr
push
add
add
lret
int
jp
fimuls
xchg
flds
jle
add
cmc
orl
ljmp
cld
cmp
cmp
cmp
loope
repz
fcmovb
int3
loopne
icebp
xchg
mov
shl
repnz
jecxz
cld
neg
cmp
hlt
sar
icebp
test
test
sbb
in
call
ss
out
repz
aaa
xor
xlat
lock
push
out
enter
mov
nop
mov
hlt
xor
fucom
loope
jmp
ror
out
loopne
rol
out
out
mov
enter
xchg
imulb
in
fpatan
repz
cmp
and
fsubr
loop
test
loop
iret
test
repz
shr
ss
test
jecxz
std
xchg
xchg
lret
fbstp
rcl
int3
lret
out
aas
sarb
jecxz
jecxz
fadd
jmp
ror
nop
aad
imul
xor
out
hlt
repz
les
mov
rolb
sub
ljmp
neg
cli
mov
jmp
jmp
xchg
xchg
div
rcl
fxch
jmp
fdivp
loope
cli
loopne
ljmp
sbb
out
aaa
enter
leave
aam
lock
cmpl
in
loope
call
fadd
xchg
loope
icebp
shl
in
cli
rcl
in
ljmp
repz
rorl
fadd
sti
jecxz
int3
loop
lret
fpatan
xor
and
shl
repz
jmp
call
in
aad
xor
enter
sar
ror
sti
rcl
aam
in
repnz
lret
int3
mov
in
ror
orb
ljmp
test
mov
idiv
loopne
lea
sub
fcom
ljmp
sub
ret
ret
mov
ret
cmc
jmp
lock
out
enter
fldcw
xor
aas
jmp
iret
std
out
out
jecxz
lret
in
xchg
cmp
roll
ljmp
cli
ret
loope
xorl
xor
add
jmp
aas
push
mov
adc
lods
aaa
dec
fildl
jle
add
std
in
fmul
fcmovu
out
enter
rol
ret
xor
enter
shl
int3
cmp
in
fisttps
test
ss
out
cli
shl
xlat
aas
cli
call
hlt
les
mov
fldln2
in
mov
jmp
not
xor
cld
sti
shr
fcmovne
mov
idiv
in
movl
xor
std
cld
repnz
int
sar
repnz
addl
iret
jecxz
xchg
fcmovnb
hlt
cmp
out
ds
lock
cmc
loop
loope
loope
jmp
hlt
into
xor
lock
sti
leave
aam
out
fsubrp
sarb
test
leave
stc
jmp
xchg
xchg
enter
ret
clc
xor
test
shl
stc
hlt
loopne
hlt
not
out
test
in
ljmp
in
rol
in
fadd
test
out
test
out
ror
fdecstp
ss
int
in
shr
cmp
ret
ret
test
testb
iret
ficoms
shl
hlt
call
ss
std
clc
aad
incl
xchg
xchg
out
lret
loope
out
cmp
fstp
fnstcw
fcmovnbe
cmp
idiv
mov
xchg
jmp
ljmp
fnstcw
loopne
loop
rolb
call
fsub
cld
xchg
loopne
aaa
lret
hlt
lock
cmc
rol
fdivr
int
loopne,pt
in
enter
out
test
ljmp
jecxz
cli
in
fmulp
icebp
in
stc
pushl
aas
cli
stc
loope
sub
iret
lret
test
int
rcl
xor
cld
rcr
in
cmp
loope
xchg
call
out
mov
loopne
enter
xor
int3
jmp
lock
loop
enter
icebp
xor
vcmppd
lret
shl
cmpb
cmp
ffreep
loopne
neg
mov
divb
ljmp
int3
div
mov
jmp
enter
lret
jno
sbb
jmp
in
or
add
add
mul
ret
cmp
xlat
repz
ljmp
sar
mov
shl
rcl
imull
repz
cmp
lret
enter
int
cmp
shl
cld
or
out
iret
call
imul
clc
jmp
cmp
std
aad
in
in
test
test
rcl
fld
xchg
loop
ficoms
mov
das
ret
repnz
ss
fcmove
in
xlat
fiaddl
test
out
loopne
repnz
filds
repnz
call
cmp
fcmovnbe
adc
xchg
mov
shl
xor
cmp
ljmp
cli
div
loope
les
std
loopne
int3
mov
aad
in
repz
stc
out
ret
fcmovnbe
stc
loop
mov
loopne
into
into
repnz
loop
in
out
out
xor
neg
aad
fdiv
vpsubsb
out
mov
in
xchg
rcl
hlt
out
stc
cmp
test
rcr
xchg
and
out
call
dec
xchg
loopne
jmp
rol
fdivrs
iret
fcmovne
test
cld
lds
fcmovnu
mov
les
cmp
out
repnz
jmp
jecxz
out
cmp
ret
push
fcmovnu
ljmp
fldl
icebp
repz
cli
xor
clc
div
cmp
jmp
fcmovnb
out
int3
std
ljmp
mul
out
int3
in
leave
aaa
cld
xor
ffree
ret
in
and
loop
mov
test
icebp
jmp
xor
int
sti
fidivrs
shl
ror
rol
sub
loop
in
out
lret
lds
int3
enter
neg
flds
sar
hlt
sbb
lret
sub
fsubp
jmp
cs
lret
repnz
aam
test
test
icebp
rolb
adcb
nop
xor
iret
in
ljmp
ret
cmp
into
sti
xlat
mov
leave
out
orb
xchg
xor
out
icebp
fsubrs
cmp
dec
sar
loop
fdivr
cli
jmp
mov
jecxz
lock
hlt
cmp
shr
push
add
add
enter
fcmovu
fstps
outsl
inc
mov
loopne
jle
add
out
enter
std
fucomp
loop
jecxz
cld
cli
out
test
mov
iret
xchg
out
loope
sub
enter
test
test
icebp
sti
flds
iret
loope
in
nop
loop
loopne
xor
sar
fdivs
shl
cmp
jmp
out
sti
lret
into
lret
int
cmp
hlt
dec
cmp
stc
out
cld
clc
icebp
adc
std
test
loope
mov
xchg
imul
out
xor
int
xlat
stc
repz
icebp
testl
sti
lock
loop
out
jecxz
out
shr
cli
cli
loope
fnstsw
mov
fisttps
repz
cmc
std
call
iret
in
loope
call
mov
mov
cmc
ret
jecxz
xor
cld
iret
hlt
fdiv
sar
test
fimuls
jecxz
in
xchg
roll
fcmovu
fidivrl
icebp
sti
repz
cmc
clc
shl
cld
aad
fsubr
int3
lret
ficoms
clc
in
xor
lock
lret
in
addb
loopne
loopne
lret
leave
xchg
cmc
sub
xor
out
idiv
iret
shl
cmp
ret
ret
repz
cmp
nop
in
out
loop
out
lock
ror
shlb
test
aad
repnz
sarl
in
loope
aam
xor
enter
cmc
cmc
in
fiadds
out
xlat
aam
fisttpl
faddl
das
hlt
out
xor
int3
cmc
aas
in
loope
lock
sub
in
in
icebp
jmp
xor
fdiv
jmp
cld
bnd
int
xlat
testb
xchg
cmp
cld
hlt
xchg
out
rcr
icebp
call
int
cmp
fdivp
repnz
xchg
into
out
aam
fucomip
shr
aad
cli
into
jmp
lret
cmp
in
repz
testl
hlt
fsub
aad
cs
fmul
fmulp
sbb
addb
jecxz
lret
test
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
pop
out
in
cld
loop
jle
add
in
sub
rol
cmp
out
addl
in
xlat
xchg
fiaddl
mov
ljmp
ds
fidivrl
int3
aad
fcmovu
rol
fldl
enter
nop
mov
in
fxch
mul
lret
cmp
loop
cmp
ljmp
clc
test
repnz
test
xor
xor
in
neg
cmp
aas
cmp
cmp
cmp
cmc
fcmovnbe
std
ljmp
aad
repnz
lret
cmp
cmp
vpsubq
fmul
cmp
rcll
in
aad
std
xor
aas
cmp
mov
xchg
mov
xchg
in
xchg
fiadds
xlat
in
xlat
stc
clc
out
xlat
out
loope
cmp
roll
out
sti
sub
nop
lret
or
xchg
ret
in
fidivs
shl
xlat
rol
repz
xchg
cmp
fimull
iret
stc
into
aad
out
aaa
out
jmp
hlt
aam
loop
roll
loope
incb
xor
xor
cli
iret
repnz
std
aaa
dec
cld
fsub
xchg
les
loop
sti
mov
jmp
cmp
add
ret
loop
fdiv
fcmovnb
in
rcll
cmc
aad
clc
int
loop
lret
sbb
fldl
jecxz
addb
xor
aad
xor
fstpt
jmp
loop
cli
mul
aam
ljmp
nop
rcll
rcl
cmc
cmp
aas
loopne
into
loope
cmp
idivl
std
flds
sar
repnz
loope
call
in
cmc
call
cld
aam
test
xor
fimuls
repz
cli
les
lret
xchg
sti
call
stc
rcl
hlt
cmp
shl
in
cli
xlat
std
ljmp
adc
sub
call
fiadds
aad
xor
cmp
jmp
stc
repnz
clc
ret
and
neg
mov
jmp
mov
aam
fstp
fcoml
adc
mov
add
add
in
in
mov
lea
xor
stc
clc
hlt
into
xlat
xlat
xor
test
ret
icebp
loopne
fists
out
lret
incb
cmc
sti
flds
fucom
jecxz
jmp
out
sub
aaa
call
fcmovnbe
into
jecxz
xlat
faddp
aad
call
out
sar
xor
cmc
cmp
rolb
out
sti
shl
cli
mov
jecxz
xchg
jecxz
ret
out
in
cmp
into
stc
in
mov
cmp
jmp
rcll
aaa
int3
out
xor
shlb
rolb
fcmovne
xchg
mov
subb
int3
shll
cmp
fnstcw
std
f2xm1
cmc
test
fadd
ret
adc
out
sbb
fmulp
xchg
in
fnstenv
ljmp
loop
hlt
rcr
mov
mov
repnz
int
sub
out
out
lock
fucomp
aam
cmpb
rcr
in
ret
xchg
stc
repz
mov
in
clc
out
jmp
cmp
cli
cmp
cmp
sbb
mov
fmul
fimull
fstl
cli
cmp
lret
hlt
ror
fxch
jecxz
sti
fucomp
div
sti
mov
cld
out
in
xchg
xor
shlb
cmp
icebp
ljmp
shr
in
out
cli
clc
shr
out
std
iret
xlat
div
cmp
ljmp
fcomp
mul
cld
mov
or
lret
loop
test
stc
clc
lret
xrelease
mov
sub
rclb
xor
aaa
in
aad
shl
add
xchg
lock
mov
lret
fildll
aam
sti
cmp
icebp
div
sti
out
ret
fstp
test
rcr
in
test
filds
lock
fucomi
clc
cmp
fcomp
cmp
rcl
repnz
clc
aad
iret
test
adcb
aam
stc
sar
out
sti
sarl
clc
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
mov
roll
out
in
aad
ss
sti
icebp
loop
stc
cmc
mov
mov
loopne
lret
test
test
int3
aam
cmp
enter
loopne
sbb
cli
clc
in
fucomip
cld
loop
into
fbstp
call
lret
in
repnz
rolb
mov
fucomi
add
mov
int3
out
lock
jmp
in
fdivr
cmc
out
test
fucom
aas
std
fadd
stc
sti
out
fldl
out
leave
iret
xor
clc
jecxz
loope
idiv
loope
ljmp
cmp
cs
sub
in
lret
xor
repz
loope
cmpb
orb
clc
into
filds
xor
iret
rcr
cmp
lock
out
fcmovu
xlat
loope
shl
loopne
rcl
aas
in
in
in
jmp
cmc
loop
ret
and
xchg
in
sti
cli
out
test
shl
vpaddq
xor
loop
cmp
clc
cmc
in
idiv
stc
fsub
call
xchg
out
xor
jmp
into
cmp
out
ds
jmp
jmp
mov
rcl
xlat
ret
cmp
cmp
xchg
shl
mov
sti
lock
icebp
jmp
cmp
icebp
ds
out
cld
ret
ljmp
in
orl
aad
lock
out
cmp
int3
cmp
fcmovu
loope
rorl
clc
jmp
test
in
das
int3
int3
lds
out
cmp
cmp
adc
fimull
out
clc
in
fsts
xor
ret
cld
cli
cmp
hlt
leave
aas
hlt
cmp
cld
clc
ret
leave
mul
in
ljmp
out
out
in
shr
xor
hlt
out
lds
and
in
call
or
shr
cmp
in
cmp
cmp
icebp
cmp
rcl
cmp
leave
fcomp
lret
jmp
cmp
hlt
jmp
rorl
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
ljmp
cmp
jle
sar
rcr
jmp
vpsubq
addl
in
lret
fucompp
repnz
loop
clc
out
mov
stc
leave
movl
enter
cmp
jmp
sti
xor
icebp
xlat
inc
or
icebp
aam
int3
loope
sub
icebp
loop
jecxz
xlat
xchg
idiv
fiaddl
call
xchg
lock
ret
idiv
clc
stc
jmp
sar
clc
shlb
div
repz
hlt
idiv
call
lret
mov
ljmp
sti
xor
fdivr
addb
clc
lret
int3
out
ret
in
loopne
mov
in
int
aaa
jmp
std
cmp
testb
int
and
cld
xchg
mov
fcmove
dec
fsub
cli
int3
shl
aam
aam
fstp
fiaddl
lret
icebp
in
mov
out
call
loop
addb
cmp
loopne
cmc
out
ljmp
lret
shl
sarb
fadd
sar
cld
stc
xchg
loopne
jmp
out
xor
cmp
lret
repz
icebp
sar
mul
loop
std
jecxz
xchg
call
xor
cld
cli
out
std
in
rcl
call
rcr
fabs
leave
aam
out
shr
in
imul
aad
lret
call
fiadds
out
jmp
xor
shr
out
cli
icebp
aad
ss
rcl
shl
rorl
lds
mov
leave
leave
lock
xor
fstpt
imul
stc
sti
shl
incl
loopne
into
leave
in
lret
sub
cs
shr
hlt
ljmp
or
mov
ljmp
xor
xor
xor
leave
loop
ss
lock
fsub
fiaddl
fcmovnu
lock
test
enter
cld
shr
idiv
aad
test
stc
stc
call
enter
mov
xor
inc
hlt
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
imul
cmp
repz
aad
mov
mov
enter
jmp
ror
jmp
sub
aaa
xor
idivl
jmp
in
test
flds
jmp
in
loopne
iret
out
jmp
fmul
int3
cmp
iret
xlat
out
xor
fmull
mov
repnz
out
in
xor
out
filds
sbb
stc
cld
xchg
repz
out
hlt
enter
stc
fdivrl
xlat
int
sarl
in
in
aas
xlat
fisttpl
rcl
xor
stc
cmp
sar
cmp
aam
cld
not
fnstcw
loop
neg
aam
cli
mov
nop
in
out
lret
iret
in
shl
std
ss
neg
out
cld
fcmovbe
cmp
test
faddp
aam
in
test
in
xor
les
xor
sarl
clc
aad
loope
loop
out
repz
orl
bnd
out
repz
cmp
addl
loopne
mov
out
shl
xor
ror
stc
repz
rcl
ljmp
cmp
loop
flds
mov
test
cmc
in
test
cmp
neg
jmp
sub
test
fcmovnbe
icebp
lret
out
or
rcl
sti
cli
loop
fmul
orl
out
sarb
rcr
lret
hlt
jmp
fcom
fxtract
filds
mov
dec
xchg
int
hlt
lret
aam
imul
lds
clc
out
out
loope
aas
fcomip
call
mov
mov
nop
int3
ret
out
repnz
clc
enter
jmp
lock
jecxz
std
cmc
clc
out
enter
mov
popl
cmc
fst
std
aaa
ret
lds
fsub
in
xchg
mov
int3
xchg
not
divb
int
idivb
cmp
fcmovbe
in
leave
mov
ljmp
in
loope
ljmp
testl
out
out
fcmovu
mov
icebp
rcrl
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
sbb
and
add
not
hlt
in
fdivp
leave
test
cmp
decl
addb
subl
fistpll
aam
call
fldl
xchg
xchg
xchg
vcomisd
fcmovnbe
xor
repz
out
out
icebp
xchg
jmp
mov
into
stc
lret
test
out
icebp
test
leave
lea
mov
shr
jmp
fldl2t
int
hlt
cli
jmp
ljmp
shr
xlat
xchg
call
out
out
into
out
lock
cmp
ret
fsubp
fcomp
fcmovb
ror
xlat
cli
mov
sar
in
leave
lret
fdivrs
lret
std
clc
cli
cmp
sar
adc
rcr
out
loop
orl
sub
in
aaa
rcr
fistpll
fucom
aad
cmp
test
xchg
mov
roll
xor
xlat
cmp
fstp
sti
jmp
in
in
in
ljmp
jecxz
std
out
out
hlt
lock
hlt
hlt
aad
cld
fldz
iret
sti
xchg
fcomip
mov
icebp
sti
lds
rcr
in
stc
ds
rol
hlt
imul
in
incl
and
ljmp
cmp
out
jecxz
int
testl
mov
shl
aas
int
fnstenv
cmp
rcr
into
ror
in
in
div
cld
loope
call
loopne
fucom
out
enter
int3
int3
aaa
jmp
xor
hlt
shl
fdecstp
mov
test
xchg
xchg
in
sub
fcmove
sar
leave
fcom
in
repnz
call
sti
stc
testl
test
in
repnz
cmp
cmp
in
neg
int3
fisttpll
repz
clc
in
fcmovbe
cmc
in
stc
loopne
idiv
int3
fxtract
fsubr
mov
ret
loop
into
adc
lret
repz
ret
lret
xlat
int
cld
ret
and
mov
sti
clc
addb
add
add
rcl
fcomp
aad
mov
pop
inc
pop
out
add
add
rorb
ret
loope
lret
xlat
cld
std
enter
fsub
test
out
xchg
lret
leave
xor
xor
ss
aam
sbb
sar
lock
int3
in
lret
call
clc
jmp
stc
fucomp
fcomi
cld
std
shl
clc
testl
pushl
cmc
jmp
std
sti
fsubrp
std
ffreep
xlat
hlt
out
sub
jecxz
mov
lret
hlt
nop
int
ret
cmp
test
repnz
rcr
les
out
lea
ret
xor
cs
fcmovnu
lret
cmp
adc
aad
sub
in
int3
leave
ret
xchg
mov
test
ret
cmc
in
repnz
xor
out
ljmp
mov
ffreep
loopne
xor
or
mul
repz
shl
jecxz
repz
sub
fsubr
rcl
xor
xor
leave
cli
inc
fidivrl
shl
sbb
fcom
leave
fisttps
mov
test
lock
repz
sar
shr
fsubrp
ret
leave
in
call
loopne
hlt
lock
icebp
cmp
aam
repz
jecxz
fldl
xlat
lret
cli
ljmp
out
jmp
out
repz
repz
rcr
xchg
call
jecxz
test
in
das
xor
in
std
cli
out
rol
fcmovnb
iret
in
aad
ret
in
adcl
rcl
out
repz
in
xor
fildl
enter
mov
in
xchg
jmp
ror
rcr
ljmp
addb
mov
in
repnz
lret
xchg
enter
in
in
cld
in
into
std
cmp
in
fildl
loope
lret
cld
loope
in
mov
mov
sub
fld
cmp
out
ljmp
aas
fcomp
sti
mov
lret
ffreep
iret
lock
stc
fmul
into
int3
sar
in
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
jne
enter
add
add
orl
rcl
lds
shr
ljmp
loop
fdiv
stc
fisttpll
jecxz
ljmp
loope
repz
cmp
shll
rcl
test
int
xchg
in
mov
icebp
ss
idivl
clc
cld
jecxz
filds
xchg
into
xchg
int3
leave
lock
int3
int
ret
out
xor
cmp
cmp
loope
iret
stc
cli
addb
jmp
mov
xchg
lret
in
in
sub
incl
out
out
roll
test
in
out
ljmp
ds
jecxz
shl
sti
loopne
cmp
clc
ljmp
shl
ret
lret
cmc
loopne,pt
ret
fsub
ror
fcmovnu
clc
stc
testb
xchg
mov
shr
clc
lock
fcmovnu
icebp
sarl
addl
icebp
into
loope
xchg
iret
lock
xor
enter
cli
mul
cmp
filds
lret
lret
and
sub
cmc
repnz
fdivr
sar
sti
jecxz
aas
ds
cli
rol
ret
sti
ljmp
xchg
jmp
icebp
lret
fcmovnbe
std
aam
ss
xlat
rol
loopne
sti
enter
out
cmp
loop
cmp
repnz
stc
cmp
fstp
ret
rolb
cmc
cld
ret
in
test
int3
ret
cmp
test
cmp
mov
orb
in
test
ss
out
clc
xor
xlat
aad
repz
mov
into
test
aam
hlt
int
xlat
shl
cmc
repz
cmp
jecxz
mov
test
icebp
stc
fsubrp
cmp
out
sar
neg
xchg
sbb
idiv
leave
xor
nop
iret
into
jecxz
sarl
lret
cmp
fneni(8087
xor
filds
mov
out
aaa
rcl
fcmovbe
in
repz
fildl
fisttpl
sbb
dec
jmp
int
ret
lret
aad
int
jmp
in
fcmovne
hlt
add
add
cmc
rol
in
repz
into
lret
out
shr
loopne
clc
xor
cld
fcom
cmp
cld
loopne
fsubr
out
aas
idiv
test
fdiv
fcmovb
into
cli
out
add
xchg
adc
ljmp
cli
aad
fcmovbe
loope
loop
sti
xchg
ret
cld
ret
out
call
hlt
in
shl
fst
mul
fsin
icebp
repz
test
fsubr
jmp
nop
lret
into
out
xor
fdivrp
aam
int
in
sar
fisttps
mov
in
faddl
int
xor
std
test
repz
cli
xlat
jecxz
test
out
decb
das
shlb
icebp
std
std
jmp
cmp
cmp
mov
ljmp
loopne
in
icebp
sar
out
fldlg2
ljmp
ffree
ret
loope
int3
fscale
jecxz
in
fdiv
cmp
in
clc
ror
out
jmp
int3
clc
cmc
ret
loop
testl
mov
loopne
rcr
xor
cmp
fsubr
call
rcr
rolb
sti
fadds
xchg
jecxz
xor
int
rcr
and
cmc
out
sti
out
in
loop
sbb
or
cmp
repnz
cmp
clc
aaa
fcmovnu
iret
loopne
out
xchg
fmulp
out
test
int
lret
hlt
cmc
shl
aas
ljmp
std
loopne
clc
cld
mov
rclb
sarl
icebp
fdiv
ror
aas
fsincos
into
loope
cli
ffreep
fucom
faddp
lock
xor
cmp
out
cmc
int
idiv
cli
lock
xchg
nop
jecxz
xchg
fisttps
sti
rcl
loope
into
into
cli
hlt
leave
leave
xlat
test
in
repnz
shl
fdivr
loopne
fstp
rcr
cmp
fldl
in
imull
lock
ljmp
fsub
rcr
hlt
in
in
fcmovu
test
fcmovu
xchg
enter
shl
out
cmp
xor
add
pop
mov
pop
pop
pop
leave
ret
