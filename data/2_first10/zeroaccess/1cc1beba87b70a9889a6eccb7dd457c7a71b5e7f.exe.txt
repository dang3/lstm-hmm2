push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
mov
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
addr16
jo
mov
idivb
xor
mov
or
and
jmp
and
push
pop
sbb
mov
add
sbb
inc
aad
out
or
mov
jnp
movsb
out
repz
pusha
outsb
xor
mov
and
mov
pop
or
sbb
push
push
lcall
iret
sbb
sti
add
inc
or
jp
lea
loopne
add
and
jecxz
fxch
jg
mov
es
shl
imul
fiadds
fcmovu
cmc
mov
cs
pushf
icebp
push
mov
mov
mov
mov
fstps
sub
add
sub
mov
jbe
mov
mov
outsl
adc
outsl
cmpsb
cmpsb
adc
mov
stc
dec
push
dec
rorb
push
or
push
and
ja
mov
mov
out
cmpsl
or
and
jp
lea
cmp
test
push
add
xchg
arpl
mov
in
cmp
push
push
dec
repnz
sbb
rolb
push
jp
movsl
lcall
or
or
push
icebp
jo
es
ljmp
lcall
cs
addr16
cmp
sbb
rcll
fistps
fldz
stc
pop
sarl
fsubl
insb
add
imul
daa
icebp
dec
rol
push
or
xchg
addl
movsb
test
in
xchg
xchg
xchg
fisubs
repz
imul
insl
ja
out
sbb
hlt
or
adc
scas
or
add
lods
pop
das
bound
test
inc
inc
sbb
lahf
repnz
shl
inc
sub
cld
dec
test
fidivrl
in
xchg
dec
shl
aas
push
cmpsl
out
add
mov
pushf
cmp
inc
cwtl
jle
jno
xor
mov
push
shrl
pushf
aad
mov
add
xchg
or
xchg
pushf
sub
into
std
scas
lods
fadd
inc
cmpsl
pop
flds
fldt
stos
mov
jmp
xchg
and
jnp
sahf
clc
xchg
adc
sti
mov
and
sbb
test
sbb
push
cltd
ja
clc
sbb
scas
add
sbb
call
or
push
das
jmp
scas
add
push
sti
aad
fpatan
mov
cmp
jae
mov
push
mov
je
mov
filds
cmp
pop
arpl
cmpsb
inc
test
or
das
popf
mov
cld
repnz
out
dec
mov
ja
mov
int3
push
mov
xchg
cmovae
jns
mov
imul
add
jno
stc
data16
cld
repz
or
in
sub
dec
scas
xor
shll
inc
inc
mov
dec
dec
mov
ss
sti
imul
stos
sbb
mov
daa
mov
leave
aad
jp
cltd
cmp
mov
mov
jg
leave
je
and
dec
mov
les
out
arpl
cmp
aaa
lea
in
mov
call
repnz
sbb
lods
sbb
push
in
or
cmp
or
popa
mov
bound
and
fnstcw
sar
cmp
pop
pop
movl
test
mov
cmpsl
aaa
push
cld
adc
fisubl
aas
add
inc
cwtl
lret
dec
lret
pop
dec
jae
in
ljmp
in
sub
cmp
decb
push
mov
cmp
mov
push
cmp
loopne
dec
jp
cmp
add
xchg
andl
fstl
scas
xor
ret
inc
sti
xchg
inc
mov
add
pop
mov
inc
add
adc
cwtl
test
push
addb
adcl
and
cmpsb
dec
repz
mov
and
inc
mov
imul
mov
sbb
sarb
and
push
pop
and
int
cmp
sbb
out
inc
in
add
mov
cwtl
xchg
xchg
jle
adc
inc
cmp
shll
fmull
xchg
test
push
fucomi
push
adc
cmc
aam
dec
scas
ret
jge
mov
ss
arpl
push
add
cld
imull
pop
std
and
dec
stc
in
sti
aad
mov
vunpckhps
lret
test
pop
out
out
mov
mov
jge
stos
out
test
add
push
pop
cmp
push
add
pop
idivl
out
xor
dec
fisttps
jmp
int
shrd
dec
push
ds
xor
mov
adc
pop
sub
movb
xor
cmc
or
inc
or
in
loopne
xchg
and
fsubs
inc
or
int3
cmp
mov
inc
mov
aad
pop
mov
sar
lret
or
mov
and
dec
push
aad
dec
cmpsl
adc
lock
fisubrs
out
mov
enter
sub
imul
imul
mov
sub
pushf
testb
shll
sub
jb
jnp
aas
cmp
iret
or
cmp
call
rcrl
or
cmp
jae
xchg
adc
inc
mov
movsl
dec
jns
add
push
sub
insl
jl
stos
les
xchg
push
or
rclb
mov
out
sahf
in
sarb
jbe
xor
test
pop
dec
xchg
loop
test
loop
bound
jp
and
test
xlat
mov
nop
in
xchg
pop
jns
in
icebp
loope
pop
mov
pop
pushf
aas
xor
imul
test
out
dec
adc
pop
push
aad
aaa
jae
repnz
sub
mov
xchg
jae
cmp
movsl
ficoms
lcall
jl
aaa
je
test
inc
imul
lea
push
push
and
pop
test
mov
xor
scas
test
sub
cld
icebp
sti
or
sub
add
outsl
xchg
mov
jae
fmul
xorb
sbb
push
mul
js
xor
add
mov
rcl
push
movsb
clc
push
jle
rcl
xor
adc
xor
hlt
jb
add
jno
mov
sbb
sub
or
dec
mov
sti
movsl
sub
nop
pushf
fidivrs
iret
mov
sbb
cmpb
adc
lock
mov
sbb
scas
and
pop
sti
adc
xor
adcb
fldenv
fsubs
cmp
hlt
pop
es
and
and
mov
inc
xlat
iret
or
pop
aam
ja
adc
push
lahf
aad
scas
inc
ret
lds
xor
pop
inc
xchg
xor
outsb
xor
cs
mov
pop
jmp
sbb
fidivl
cmpsb
stos
in
popa
lret
scas
ss
loope
jmp
push
mov
loope
pop
or
lock
mov
lock
or
inc
ss
pop
lock
jge
add
push
or
test
aad
cmp
cld
lea
setbe
and
pushf
jg
jo
xchg
sub
insb
or
dec
popf
sarl
lea
icebp
inc
lcall
and
imul
scas
mov
pushf
push
xchg
or
push
test
xchg
scas
stc
or
fmuls
fs
inc
xchg
sbb
add
jge
xchg
scas
std
jg
pop
jb
lods
lds
fldenv
rol
std
outsb
enter
xchg
mov
insl
fneni(8087
jbe
xchg
jae
ret
mov
dec
and
mov
lcall
pop
stos
sbb
pop
icebp
cs
mov
pop
js
cltd
stc
and
sbb
jmp
dec
push
mov
sub
jne
xor
faddp
cld
je
mov
ja
lods
fcompl
push
inc
jb
addl
xor
jmp
repz
out
pop
mov
js
mov
xor
cld
mov
push
dec
fisttpl
mov
sub
fst
notl
mov
xor
test
and
out
mov
mov
out
cli
dec
stc
push
leave
jle
push
in
stos
movsb
pop
push
jnp
movsb
fcmovnb
jns
sti
fs
inc
and
adc
cmp
xor
hlt
xor
in
imul
sbb
sbb
fidivrs
sti
popf
popl
lcall
rcr
xor
dec
fildl
xlat
out
sbb
cli
push
popf
hlt
pop
pop
ja
push
and
xlat
mov
fisubl
push
test
lret
xchg
mov
clc
cmp
push
add
outsl
lret
mov
movsb
or
mov
dec
ficomps
xchg
std
in
andl
xchg
cmp
dec
cld
sahf
pushf
sbb
pop
fidivrl
cmp
mov
fucom
ret
xchg
div
es
std
std
and
mov
test
lret
rol
mov
xchg
mov
mov
inc
mov
mov
adc
shl
xchg
jne
dec
mov
imul
out
stc
cs
xchg
into
test
inc
and
mov
pusha
push
addb
jmp
dec
and
pop
je
cmp
dec
and
or
or
out
cmp
adc
cmp
add
sbb
in
pop
mov
mov
xor
jmp
aad
daa
ret
xor
dec
mov
pop
mov
or
inc
or
sub
outsb
adc
rorl
aad
fistpl
addr16
or
dec
push
ljmp
add
jge
lret
xor
xor
scas
popf
jecxz
mov
in
cli
mov
cmc
in
inc
sub
nop
xchg
ret
xor
imul
mov
out
xlat
pop
cmp
cmp
or
test
mov
test
inc
mov
aaa
cmp
mov
fiaddl
sbb
mov
cld
fiaddl
jp
ja
push
push
cmpsb
cmovb
sub
push
sbb
out
rorl
and
or
adc
lods
notb
outsl
dec
fiadds
and
lods
inc
aam
xchg
sahf
cli
or
test
hlt
jb
testb
jle
addr16
inc
mov
add
rcrl
test
mov
jp
dec
and
imul
and
into
dec
cmp
or
inc
jecxz
cli
adc
imul
shrb
pop
lods
sub
jl
mov
sbb
jno
mov
mov
jg
es
je
stos
and
sub
xlat
xchg
sub
sbb
inc
fldcw
dec
mov
sub
or
mov
mov
mov
pusha
xchg
xor
sbb
stos
pop
mov
mov
mov
mov
cmpsb
mov
pop
stos
dec
mov
jae
dec
ds
arpl
sbb
mov
jae
inc
cwtl
mov
ret
sbb
scas
mov
int3
das
or
in
mov
xchg
leave
nop
xchg
pop
dec
xchg
xlat
cmpsb
pop
or
in
sahf
push
sbb
mov
or
fcmovbe
jns
imul
xor
sarb
inc
repz
or
push
mov
stos
xchg
mov
mov
pop
clc
pop
add
fcoml
xchg
xor
xor
cli
icebp
mov
outsl
ljmp
xor
test
repnz
mov
leave
fwait
pop
aad
adc
ds
inc
lods
aaa
push
inc
fs
sti
fisttpll
into
inc
xor
popa
xchg
pop
inc
loopne
jmp
pop
outsl
add
pop
jp
int
test
or
inc
add
repnz
pop
add
nop
cmp
mov
adc
fiaddl
jecxz
icebp
xchg
mov
adc
and
inc
push
mov
xor
stos
xchg
cmp
pushf
mov
outsb
stos
sub
mov
add
sbb
push
dec
jb
faddl
xchg
int
mov
iret
add
loope
push
call
mov
push
insb
add
xlat
jge
mov
mov
mov
push
enter
xchg
out
cmp
test
gs
pop
mov
cltd
jns
sarl
dec
jno
lods
cmp
out
mov
test
mov
cmp
sbb
ljmp
mov
out
fnstcw
sub
push
mov
xor
pushf
or
cmc
pushf
dec
fsubrp
dec
lret
xchg
and
adc
add
mov
shr
std
mov
mov
sbb
sbb
jge
inc
sbbb
cs
pushf
rol
or
jae
lret
mov
loop
inc
int3
mov
mov
movsl
add
and
sub
cltd
mov
daa
dec
pop
jae
lret
lret
inc
push
aad
inc
sbb
imull
je
pop
mov
test
mov
push
pop
ljmp
push
xchg
pop
jbe
test
inc
xchg
outsl
out
mov
sub
lods
jp
adc
pop
push
sbb
into
add
int
clc
inc
add
insl
jbe
xor
inc
idivl
mov
pop
jl
inc
cmpsl
sub
or
dec
stc
icebp
hlt
nop
or
jnp
lcall
in
mov
push
adc
push
push
inc
jb
roll
jge
mov
push
out
adc
js
pop
es
outsl
lret
nop
cmp
in
shll
xor
xchg
sbb
add
sti
dec
jae
push
or
out
pusha
mov
subb
pop
loop
xchg
pop
cmc
pop
icebp
xor
mov
push
enter
insb
fwait
mov
push
loopne
in
sarl
cmpsb
mov
int3
sbb
mov
inc
pop
sbb
xchg
test
cmp
push
test
inc
ds
mov
mov
lock
aaa
ja
add
ljmp
xchg
sub
ja
push
test
into
mov
loope
cmp
pop
iret
jl
or
aas
rcr
imul
cmc
insb
mov
loope
mov
adc
in
dec
mov
cmp
out
fnsave
lahf
jle
jg
or
pop
adc
test
fadd
aad
push
loopne
pop
daa
test
jmp
in
lahf
into
insl
std
xor
daa
cwtl
inc
arpl
pop
popf
andl
jp
push
in
scas
jmp
push
add
lea
mov
inc
add
add
xor
ret
push
xor
push
mov
adc
or
mov
ljmp
rcll
mov
xchg
push
or
inc
mov
add
mov
pop
pop
enter
repnz
aad
gs
pop
sti
jne
incl
push
in
loop
or
inc
xchg
ljmp
ror
out
stos
push
mov
insb
test
inc
pop
pop
mov
mov
shr
pop
mov
mov
in
jge
mov
mov
rcrl
push
mov
out
out
xchg
adc
cmp
loopne
inc
cmp
and
dec
lods
push
push
add
mov
sub
inc
mov
sbb
std
adcb
mov
add
add
mov
stos
out
arpl
paddq
jmp
aaa
inc
cli
dec
and
dec
push
daa
rcr
lods
mov
push
cmp
push
lds
inc
or
xor
test
xchg
cmpsb
add
mov
in
xor
repz
out
insl
and
arpl
lods
leave
mov
int3
orb
jg
xlat
push
sub
insl
bound
pop
shr
ja
mull
jne
inc
cmpsb
xchg
movsl
dec
inc
int
jmp
mov
andb
sbb
inc
cmpsb
and
sahf
inc
mov
mov
jge
or
xor
cmp
push
loopne
inc
inc
daa
fnstsw
je
inc
jmp
movsb
adc
or
inc
jg
ror
jg
pushf
and
stc
dec
dec
pop
adc
xlat
inc
ficompl
pop
dec
lods
pop
pop
pushl
sub
push
xor
sbb
out
mov
mov
rcr
adc
xchg
push
stos
aaa
add
lods
jg
add
sub
inc
xchg
inc
out
mov
das
mov
or
sbb
test
insb
cmp
mov
loopne
pop
in
jno
pushl
pop
pop
nop
test
aad
out
mov
pop
xor
pop
xlat
cmp
xor
mov
mov
sub
sbb
lock
and
out
sahf
jne
xlat
rcrl
enter
cmp
push
push
jb
loopne
mov
dec
push
add
inc
imull
test
insb
xchg
xchg
out
pop
scas
sbb
xchg
je
fistps
jp
fstps
mov
cmp
dec
movsb
push
jne
mov
imul
negb
jb
add
ss
pop
sbb
out
notl
fnsetpm(287
jno
pushf
mov
filds
and
or
jp
ror
int3
xchg
cmp
testb
add
sarb
mov
jle
mov
repnz
aam
jge
lods
xchg
lods
repz
sti
jne,pn
dec
andb
movsl
sbb
and
xchg
sti
sub
adc
gs
cmp
add
sbb
adc
push
mov
popa
rcr
or
mov
add
cs
in
cmp
xor
cmc
popf
mov
jo
into
aaa
scas
cmp
push
push
pop
adc
fsubs
dec
push
sbb
xchg
pop
or
lea
xchg
mov
add
mov
mov
test
cmc
xchg
adc
ss
push
lods
adc
shrw
out
lahf
inc
cmp
scas
cmc
pop
and
adc
or
shrl
loopne
fstps
fbld
jne
mov
mov
xor
cld
ficoms
test
pop
and
out
sbb
mov
xchg
jp
mov
mov
ja
lret
clc
pop
pop
sub
cmova
lock
dec
cmp
and
mov
nop
js
dec
mov
sub
insl
in
fidivs
cmpl
mov
mov
jns
jle
pushl
sbb
push
dec
enter
in
scas
cmpsb
nop
mov
mov
dec
movsb
stos
xchg
cli
addr16
sbb
lret
ljmp
xchg
pop
sbb
mulb
insl
xchg
push
cli
clc
adc
leave
sti
sarb
sbb
xchg
aad
ljmp
fs
pop
je
lods
loope
sbb
lods
push
xchg
lcall
adc
mov
add
in
pop
fprem
sbb
sub
ja
jmp
jle
xchg
cmp
imul
push
ficompl
insl
sub
lahf
jmp
cmp
fmuls
add
arpl
fldl
ja
and
rcrb
cmp
sbb
scas
mov
inc
sub
add
sti
dec
lods
mov
sbb
lret
cmp
push
jns
int
and
outsb
xor
pop
cmp
fwait
scas
aas
stos
mov
dec
pop
xchg
out
push
dec
xor
adc
xchg
test
minps
hlt
lds
filds
push
mov
outsb
jnp
xor
cmpl
mov
jle
sub
data16
xchg
jmp
jo
arpl
pcmpgtb
lea
xor
add
call
xchg
mov
sahf
sbb
addr16
cmp
imul
and
mov
xchg
lret
clc
ret
repz
mov
push
call
fdivrl
inc
into
std
ljmp
daa
adc
cmpsb
imul
enter
movsl
adc
inc
mov
stc
or
outsb
into
mov
xor
inc
sbb
loopne
int3
and
out
and
mov
insb
stos
in
cmp
int3
mov
imul
xor
or
cmp
add
cmp
and
aaa
ss
or
cmp
push
cmp
cltd
ret
call
push
push
jns
xor
nop
jp
stc
or
orl
inc
sbb
repnz
push
ss
popl
repnz
adcb
out
pop
test
in
mov
sbb
xchg
pop
xchg
stc
push
xchg
enter
into
enter
adc
int3
inc
mov
inc
bound
xchg
and
dec
rorl
pop
in
mov
insb
xchg
mov
mov
push
stc
cmp
jb
sub
or
pop
cmpsb
xor
push
enter
rolb
jle
aam
test
sar
scas
or
pop
hlt
mov
fldenv
xchg
aas
movsl
cmp
dec
icebp
dec
or
push
icebp
push
pop
pop
movsl
les
jmp
les
js
inc
add
ss
loope
fwait
loopne,pt
mov
xchg
adc
dec
int3
call
xor
sub
sub
and
mov
cld
icebp
ja
ret
mov
lods
push
int3
push
lods
icebp
rolb
jmp
aas
jns
add
imul
dec
arpl
aad
xor
shrb
dec
shl
sahf
lods
fiadds
sarl
dec
pop
or
and
xchg
shlb
bound
inc
pop
leave
dec
nop
inc
les
fs
fisttpll
test
xor
test
mov
aam
mov
ss
add
xchg
add
dec
or
push
mov
xlat
inc
out
jnp
fsts
xlat
lahf
adc
cld
jbe
int3
adc
or
iret
jl
mov
jns
add
adc
and
jmp
pop
mov
rclb
orl
adc
jae
mov
or
sbb
inc
repnz
enter
sub
dec
adc
outsl
loop
mov
or
or
icebp
cltd
jecxz
push
cmp
xor
loopne
insb
or
pop
push
adc
mov
jmp
push
jno
fst
mov
ljmp
jmp
mov
sbb
jp
imul
mov
ss
cmpsb
pop
pop
mov
gs
aaa
stos
je
hlt
clc
in
ret
stos
push
shrb
addr16
lret
add
leave
dec
lret
cmp
in
dec
sbb
int
mov
test
add
daa
cmp
and
leave
mov
xchg
sub
repz
fwait
or
mulb
mov
rcrb
add
add
jbe
outsl
add
push
sbbl
test
lods
cltd
and
push
and
notl
stos
in
sarb
dec
jne
mov
cmp
roll
push
sahf
movsl
ljmp
outsl
xchg
xchg
into
bound
xorl
cmpsb
and
jl
cmp
addl
testb
or
dec
sbb
fcmove
push
movsl
scas
sub
xor
jb
or
pop
dec
loop
mov
xor
leave
loopne
dec
popa
mov
sbb
or
lret
xor
mov
and
or
mov
pop
jae
into
or
sti
ret
mov
insl
rorl
ret
mov
mov
push
jo
xor
jo
xchg
dec
loopne
shlb
mov
dec
sbb
mov
stos
and
pop
pusha
cmc
inc
call
popa
loope
shl
mov
jmp
repnz
mov
push
jns
lods
xchg
cli
mov
inc
daa
pop
imul
fidivrl
shl
xor
test
cld
clc
mov
adc
mov
sub
mov
fstpl
call
jb
sti
mov
xchg
es
jmp
mov
in
bound
mov
sbb
and
mov
jge
ret
cmp
lds
and
mov
xor
outsb
mov
decb
push
inc
int
xchg
cmp
stc
and
aaa
pop
movsl
dec
or
lock
push
push
bound
ret
mov
inc
ret
add
push
jmp
or
xlat
pop
and
mov
push
ficoms
add
or
roll
push
dec
push
aad
jg
cmp
ja
pop
aaa
push
xchg
pop
mov
push
cmpb
insb
dec
fidivs
imul
xchg
push
xchg
pop
pop
push
dec
pusha
imul
int
outsl
dec
scas
add
sahf
jne
xor
aas
mov
addr16
ret
and
pusha
sub
outsb
cs
rolb
cmp
je
scas
mov
scas
adc
adc
call
lret
insl
jo
repnz
xor
mov
jmp
push
shrb
mov
fldl
popf
adc
add
js
add
loop
xchg
call
in
mov
cld
fidivrl
dec
sub
int
pop
ret
inc
enter
pop
jmp
leave
gs
repz
mov
clc
add
dec
pop
jns
inc
or
mov
cmp
jmp
stos
stos
mov
mov
dec
aam
out
or
mov
shr
inc
or
loope
push
scas
outsl
mov
cmp
loopne
jae
bound
fcmovbe
mov
repnz
cld
mov
mov
mov
adc
das
adc
cmp
je
js
loopne
inc
or
testl
fsub
inc
setg
test
nop
xor
jae
push
xchg
sbb
in
sbb
push
sbb
stc
rcll
jb
jmp
lret
inc
push
adc
push
or
mov
popf
cmp
cmp
jae
loopne
imul
push
fcomp
and
sub
dec
xor
jne
xor
push
hlt
int3
adc
push
scas
pop
jp
jle
xchg
mov
aam
adc
jae
outsb
mul
test
dec
xor
dec
mov
es
rorb
mov
mov
mov
sbb
mov
xor
mov
jns
fs
sub
add
popl
jge
fmulp
scas
fisubl
mov
addr16
push
lds
mov
mov
cs
shr
mov
lcall
iret
imul
lahf
fildll
fiaddl
pop
leave
rolb
sub
xorl
jp
add
ficomps
inc
nop
sub
rcl
add
xchg
fildll
and
stos
jne
xchg
xchg
inc
cmc
push
lret
jmp
int
and
out
out
jo
mov
add
mov
inc
or
add
xchg
lds
test
arpl
sbb
fiaddl
outsl
popa
jnp
jo
cmc
jle
inc
mov
mov
ret
mov
lcall
or
inc
inc
adc
cwtl
in
into
xchg
xchg
bnd
adc
sbb
xor
mov
repz
add
dec
in
mov
inc
dec
das
inc
ret
inc
xchg
xor
cmpsb
pop
enter
or
aad
mov
loopne
xor
mov
add
xor
xchg
pop
inc
int
cmp
pop
cltd
add
jb
cmp
cltd
fucomi
arpl
and
pop
inc
dec
mov
push
lods
cmpsl
pushf
add
push
std
test
sub
test
aam
mov
push
xor
jg
sub
add
scas
iret
or
cmp
dec
cmp
bnd
test
mov
and
enter
insb
lods
in
fs
push
and
leave
jmp
push
popa
mov
shl
rorl
mov
test
cmc
lret
xchg
jnp
push
ret
mov
pop
inc
or
cld
lcall
and
data16
scas
movsb
clc
mov
fadds
iret
lahf
add
mov
mov
test
xchg
adc
rcrl
in
mov
out
push
repz
sub
adc
and
xchg
mov
es
push
sub
adc
xor
pop
stos
ds
das
push
pushf
mov
fadds
mov
lods
cmp
sub
data16
imul
mov
int
jne
xor
in
cmc
sub
jle
cmp
dec
icebp
and
je
faddl
jmp
dec
xchg
fadd
pop
pushf
mov
pop
nop
jbe
jae
into
pop
mov
out
jecxz
and
mov
add
sub
in
les
jmp
dec
aam
jmp
test
popf
sub
insb
xchg
pop
mov
sub
mov
mov
cld
cs
test
xchg
push
cmp
adc
mov
xor
push
and
call
ljmp
sub
fstpl
filds
lret
mov
out
repnz
inc
adc
cmc
rorl
cmpsb
pop
cmpsb
sbb
dec
hlt
out
add
in
jo
addr16
mov
inc
add
pop
fwait
gs
or
and
or
mov
jmp
mov
sbb
xchg
iret
lods
jp
push
loop
imul
push
ljmp
jp
push
ret
rcrl
lret
push
stc
sbb
iret
jo
repnz
push
dec
mov
pop
dec
xor
pop
push
xor
popf
xchg
into
inc
inc
mov
push
push
ret
scas
pop
bound
or
ja
mov
cld
mov
adc
fwait
imul
and
in
add
cmp
outsl
stc
xor
into
ret
pop
ud1
iret
mov
out
scas
nop
xchg
adc
enter
out
pop
xchg
ds
and
stos
inc
movb
aaa
add
cs
decl
imulb
mov
dec
xor
push
in
mov
dec
test
pop
pop
lods
cs
insl
aas
dec
aaa
testb
sub
loopne
out
mov
jmp
and
pop
pop
push
add
adc
xchg
adc
dec
dec
movsb
cmp
mov
mov
push
dec
arpl
mov
cli
and
add
popf
cs
sbb
addr16
cmc
loopne
mov
inc
add
loop
daa
fcomip
mov
dec
mov
fimuls
lods
popa
mov
stc
add
repz
mov
lods
dec
mov
pop
adcb
cltd
sbb
inc
cmpsl
pop
test
mull
sub
xor
or
ret
shr
dec
cltd
lret
outsl
xchg
inc
sub
mov
test
out
mov
jae
dec
test
enter
mov
sbb
dec
je
lcall
mull
inc
iret
dec
xor
pusha
adc
std
adc
jbe
adcb
add
aas
adc
pop
cmp
andl
jne
or
xor
pop
out
add
sahf
fwait
jb
cmp
cltd
inc
pop
fsts
pop
xor
sarb
je
inc
enter
dec
loop
jb
pop
outsl
sub
pop
jb
xchg
loop
xchg
jns
mov
fldln2
pusha
sub
lcall
popf
push
loope
jmp
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
xor
xlat
pop
jp
aaa
pop
jp
rcrb
inc
sub
test
mov
pop
fistl
cltd
add
ret
gs
or
pop
shll
cmp
sbb
mov
inc
push
stc
push
sub
push
std
pusha
int3
iret
fsubr
ja
rorl
out
jae
mov
fwait
or
adc
int
mov
dec
rclb
mov
iret
sub
pop
and
scas
mov
adcb
push
inc
pushl
test
test
ret
lock
mov
addr16
outsl
ds
sbb
scas
inc
push
sub
addr16
mov
fs
insl
mov
pop
cmp
push
into
xchg
push
pop
pop
cmpsl
dec
das
push
mov
lret
ja
pop
scas
leave
adc
push
cmp
mov
add
lcall
mov
lods
lret
xor
addr16
push
dec
sarb
or
cmc
cmp
pop
cmp
cld
push
in
mov
in
ds
inc
inc
sbb
outsl
mov
cmp
popa
mov
push
jge
mov
adc
dec
jb
adc
cmp
ss
cwtl
scas
cmpsl
je
addr16
test
call
lcall
lret
xlat
out
jge
ss
or
push
push
mov
jo
and
mov
rorl
stos
mov
inc
shl
leave
imull
enter
dec
lret
aas
fldl
mov
pop
dec
or
pop
ret
xlat
push
aad
xchg
ja
gs
cs
mov
popw
pushf
adc
fildl
aaa
dec
xor
fcmovnu
pop
int
out
jg
or
rorl
popa
mov
or
prefetch
or
inc
dec
pushf
xor
sbb
cmp
jnp
xor
insb
jns
add
lods
mov
sti
das
scas
cltd
stos
out
shll
bound
or
jecxz
lahf
out
sbb
mov
loopne
and
test
xor
add
pop
mov
lea
mov
inc
lret
inc
jmp
cmp
iret
mov
add
imul
inc
nop
adc
cmp
xchg
das
out
xor
push
cld
fs
sbb
jle
imul
and
and
mov
jne
push
lret
lret
lods
fbld
jle
push
xchg
lds
cli
mov
cltd
lods
cs
test
cmp
fst
jmp
je
das
xor
lock
jmp
or
movsb
dec
adcb
lods
mov
mov
add
out
and
jae
fcompl
cmpsl
sub
bound
rolb
add
dec
dec
xor
in
mov
ss
pop
outsb
out
adc
add
and
push
adc
sbb
jbe
scas
cmp
push
popf
add
out
movnti
add
jne
cmp
xchg
mov
cmpsb
and
and
or
sbb
stos
pop
mov
jno
bound
jo
popa
ljmp
lea
aam
adc
out
mov
xchg
rcrb
dec
cmpb
jns
dec
iret
aas
and
jbe
xor
xor
inc
dec
ret
jo
xor
in
mov
inc
xchg
mov
movsl
hlt
push
mov
or
jne
std
cmpsl
lock
adcb
mov
lret
dec
mov
push
xor
in
mov
push
xchg
or
fidivrl
push
shl
enter
mov
scas
lods
pop
adc
movsb
pop
jp
push
xor
jge
das
push
jo
push
lods
aaa
mov
repnz
xor
aaa
sarl
dec
scas
push
scas
in
adc
loopne
xchg
ret
shll
ja
icebp
and
popw
movsb
add
loop
cmp
movsl
dec
mov
insb
int
dec
popf
xor
cmp
push
cmp
cmp
push
mov
mov
cmp
jmp
in
in
es
mov
sti
cs
fimuls
dec
add
popa
sti
cmp
fidivrl
je
pop
sub
or
xchg
les
and
push
dec
lods
ret
pop
ret
cmp
jbe
fidivl
jmp
inc
out
cmpsl
and
jne
mov
mov
jns
sti
xor
in
test
xchg
scas
mov
mov
inc
nop
aas
mov
nop
push
and
jmp
add
jnp
cmpsb
imul
push
xchg
iret
sbb
hlt
xlat
fsubrl
int
sti
adc
int
pop
mov
fistpll
nop
sahf
call
cmp
pop
jne
push
jmp
xchg
cmpsl
lcall
ja
imul
jns
lods
js
js
adc
test
mov
addb
adc
push
mov
xchg
xchg
sahf
in
clc
sbb
ds
in
std
testl
ss
into
jae
xor
dec
inc
inc
sbb
and
xchg
pop
imul
push
dec
jne
jnp
jb
jge
dec
movsb
push
mov
into
push
lock
dec
adc
dec
mov
outsb
cmp
lcall
adc
loop
xchg
ds
pop
stos
xchg
jg
out
sbb
out
lcall
shll
cmc
mov
out
cmp
mov
js
push
push
bound
xchg
lahf
sbb
mov
mov
mov
or
inc
test
hlt
stos
cmp
xchg
or
xlat
outsb
pop
sub
cmc
test
aaa
sbb
or
pop
sbb
mov
sub
pop
mov
bound
bnd
and
out
mov
jge
test
ja
inc
les
data16
or
insl
leave
jno
repnz
adc
jp
sbbl
shll
push
xchg
int3
arpl
mov
in
outsl
int
pop
sub
mov
movsl
cmp
pusha
das
fxch
fwait
pop
imul
adc
lea
lret
inc
movsb
dec
imul
xchg
push
cmp
dec
int
mov
addl
pop
aad
dec
lret
fnstcw
mov
pop
cwtl
cmpsb
add
pushf
aas
inc
jo
bound
and
test
fcoml
sub
jns
pop
cmp
into
pop
and
popf
push
dec
mov
mov
out
or
push
lock
adc
into
repz
out
mov
sti
jmp
and
daa
mov
mov
lods
dec
rclb
cs
and
mov
lock
jne
mov
adc
shl
add
xlat
testl
hlt
push
sahf
dec
jg
shll
lods
pop
adcb
inc
enter
mov
xchg
sahf
xor
jbe
lret
sti
cld
fidivrl
pop
sti
int3
inc
movl
mov
pusha
mov
mov
xchg
ret
dec
sbb
and
mov
arpl
push
loope
xchg
sbb
popf
rorb
pop
jnp
cmpsl
dec
mov
rorl
imul
fnstenv
movsb
mov
and
shrl
push
mov
repz
xor
sub
outsl
mov
dec
sub
pop
adc
dec
mov
out
jg
pop
pop
pop
or
lods
xor
lret
int
test
loope
lahf
adc
icebp
push
xor
fldl
fmuls
in
mov
cmp
push
dec
xor
stc
or
xor
adcl
call
frstor
iret
jmp
ja
jmp
movl
into
shll
stos
jmp
scas
andl
mov
out
mov
mov
pop
sbb
imul
xor
nop
mov
mov
mov
es
aas
mull
push
cli
jnp
bound
test
pop
or
cwtl
insl
lock
adc
or
outsb
dec
pop
cmc
xchg
sub
ljmp
inc
nop
das
lcall
mov
jne
ss
jle
mov
jp
inc
outsl
xlat
out
xchg
mov
xchg
dec
push
jb
daa
mov
jns
mov
pop
scas
xor
test
xchg
fsubrl
lahf
push
cld
insl
sbb
xchg
lock
dec
xor
cwtl
clc
inc
mov
mov
fldl2e
rorb
add
cmp
cltd
jp
nop
inc
mov
adc
arpl
stos
push
jae
lret
dec
ljmp
mov
xor
popa
dec
push
jle
out
or
mov
xor
mov
mov
lods
jbe
in
pop
es
pop
mov
sub
gs
loopne
lret
cmpb
test
push
add
js
jle
repz
mov
sar
or
sti
xchg
mov
dec
xchg
add
in
adcb
ja
and
ja
das
jo
sbb
cwtl
or
jmp
test
mov
ja
mov
xor
popa
in
cwtl
and
inc
push
cmpsb
gs
jbe
sub
sub
out
cs
inc
flds
or
mov
xchg
sbb
loopne
inc
sbbl
pop
outsb
adc
pop
js
out
in
test
and
pop
mov
push
inc
je
inc
sbb
insb
adc
out
cmp
std
mov
in
bound
cmpsb
pop
cmp
ret
sub
fwait
pop
cmovb
add
aad
and
push
xlat
mov
js
aas
xchg
scas
out
std
sub
outsb
ss
push
xor
ljmp
scas
out
mov
or
andl
cmpsl
xchg
jl
je
sbb
mov
or
int3
or
jno
enter
xorb
fisttpl
jge
sti
xchg
les
insb
sub
les
pop
xlat
cmpsb
mov
adc
ja
jno
jnp
jne
sbb
leave
sub
popa
fiaddl
push
push
or
into
mov
test
fstpt
or
xor
idivl
sub
pop
cmpsl
sub
mov
mov
pop
mov
sbb
xchg
outsl
inc
cmp
xchg
pop
std
cmp
pop
jl
test
stc
popf
dec
sbb
in
xchg
in
fistpl
movsb
icebp
cmp
mov
ret
sub
jne
addb
test
cmpsl
mov
and
pushf
adc
incl
sbb
pop
lret
fsubrl
outsl
fstps
cmp
cmp
popf
sub
movsl
inc
fsubr
xchg
das
jmp
jne
icebp
loope
fadds
shll
dec
mov
fcmovnbe
mov
jmp
bound
fwait
inc
mov
lcall
pusha
jo
adc
jno
sub
sbb
cmp
xor
jmp
mov
hlt
out
mov
fldpi
jle
in
clc
lods
fdivrs
and
jbe
sbb
xchg
xor
pop
and
sub
rcr
push
push
fwait
icebp
out
mov
arpl
push
popf
sbb
fisttpl
int3
das
clc
cmpsb
popf
aas
mov
popa
sub
addr16
mov
xor
aam
and
ds
xchg
xchg
cmp
arpl
and
xor
mov
add
and
fidivrl
lods
cli
mov
jge
jge
push
cmpsb
loop
xchg
pop
aaa
add
cmpsb
into
mov
es
mov
mov
jmp
inc
sarb
or
rorb
jbe
sub
insb
push
cmp
fisttpl
fimuls
out
cltd
cmp
popf
pop
xchg
aam
mov
adc
or
aad
jae
cmp
inc
imul
jge
sbb
testb
pushf
inc
xchg
mov
stos
arpl
add
mov
test
push
movsl
push
pop
mov
xchg
pop
out
cmp
clc
cltd
pop
adc
sub
fists
pop
add
clc
pop
popf
add
jns
test
push
scas
mov
shl
pop
mov
js
push
mov
lods
sub
scas
lcall
dec
or
test
pop
das
clc
stc
jo
cmc
hlt
add
je
add
sbb
mov
push
pusha
iret
aaa
xchg
xor
add
clc
je
lcall
push
bound
fwait
mov
shrl
fimull
out
loope
pop
pop
push
push
xchg
add
push
jg
inc
mov
push
loope
leave
or
das
dec
add
inc
dec
pop
loope
pushf
in
imul
imul
imul
mov
pop
call
js
mov
xor
repnz
xchg
mov
out
mov
or
xor
dec
les
insl
repnz
daa
add
adc
enter
sbb
mov
gs
mov
add
rol
xorl
popa
pop
in
fildl
cmpsb
stos
sahf
mov
jmp
mov
ja
cmovg
and
loop
and
sarl
mov
mov
out
mov
xorl
andb
rcrb
mov
mov
pop
dec
inc
dec
rcll
jmp
inc
inc
jmp
frstor
or
push
ret
clc
and
movsb
test
in
out
cmp
fistps
enter
push
cmp
icebp
fldt
adc
enter
pop
xchg
gs
push
mov
fimuls
inc
cmp
jne
dec
sbb
xchg
inc
push
in
cmc
scas
jbe
je
push
fldt
inc
pop
inc
test
daa
out
addr16
adc
stos
jne
cld
mov
sub
lcall
inc
and
adc
out
fcmovnbe
lods
mov
adc
lret
jl
loop
out
mov
xchg
faddp
xchg
push
leave
inc
pusha
dec
push
sub
and
mov
sub
mov
jae
and
loop
test
cmp
ss
sti
and
pusha
adc
mov
pusha
mov
jbe
xor
jg
ja
add
dec
xchg
out
jl
popa
inc
jmp
adc
or
adc
out
xchg
adc
pop
jnp
inc
dec
xchg
ficomps
sti
xlat
sbb
mov
xchg
xchg
test
mov
les
xlat
push
xor
lods
and
mov
in
pop
lret
mov
add
jns
jno
and
cmp
flds
cmp
mov
push
movsb
xor
test
cmp
andb
mov
cwtl
les
popa
dec
and
in
dec
das
jae
inc
lea
lods
adc
add
or
pop
push
fs
jg
fnstcw
push
cmp
out
dec
adc
jnp
inc
and
dec
or
iret
mov
sbb
xchg
jae
xchg
gs
mov
movsb
lds
ret
jo
pop
clc
push
lcall
adc
lods
mov
and
into
sar
ljmp
adcb
mov
push
faddl
std
sbb
fs
add
fsubr
push
pop
xor
jb
add
push
mov
mov
repnz
in
mov
mov
imul
push
fnsave
inc
mov
sbb
jno
push
dec
xor
pop
jecxz
adc
mov
mov
push
jmp
push
mov
xor
and
cmp
out
add
iret
stos
mov
sarb
pop
mov
out
das
hlt
cmc
and
mov
imul
cli
mov
lods
xor
push
rol
fs
addr16
jle
fst
and
cmpsl
push
in
xchg
push
cmp
jb
cld
sbb
int
pop
das
out
stc
enter
stos
pop
xchg
insl
inc
sbbb
sti
mov
xor
lea
repnz
pop
and
mov
das
jo
or
sub
dec
ret
imul
scas
and
lock
pop
mov
cmp
xlat
dec
bswap
xchg
outsl
dec
enter
xchg
test
shrb
mov
cmp
lcall
add
sbb
sbb
mov
repnz
sahf
mov
scas
mov
adc
dec
lods
add
cmpsb
jo
dec
lods
into
fisubl
fldcw
addr16
call
sahf
push
loopne
add
xor
push
mov
push
fildl
mov
add
inc
test
push
cli
push
ret
inc
jo
xchg
jb
test
sub
mov
inc
cmpsb
jp
out
insl
pop
nop
rcrb
or
sbb
or
xchg
xor
fidivs
shrb
std
inc
dec
data16
jmp
aam
mov
pop
xor
inc
sub
insb
pop
lods
and
imul
add
mov
pop
pop
jo
pushf
aad
jnp
sarl
and
add
push
mov
call
aam
mov
popf
mov
pop
jns
int
sub
pop
sub
insb
cmp
mov
out
out
push
push
adc
ljmp
les
jl
push
mov
inc
imul
jbe
maxps
loop
add
xchg
mov
jge
jecxz
lret
repnz
adc
cmp
and
psubd
in
adc
jnp
inc
cmc
push
xchg
and
dec
vcvtps2dq
xchg
mov
or
dec
and
sub
mov
daa
cmp
in
xlat
gs
fs
popa
sbb
or
call
xor
adc
mov
iret
ja
fsts
sub
dec
pop
push
scas
sti
test
cmp
mov
pushf
popf
popf
mov
mov
into
fistpll
xchg
mov
push
fnstsw
cld
imul
pcmpgtd
push
jp
push
xchg
cmpsb
push
pop
and
insl
lahf
sub
push
gs
push
mov
das
pushf
xchg
mov
sub
daa
mov
aaa
bound
ret
orb
fists
sbb
in
jne
mov
adcl
push
push
mov
insb
mov
sbb
mov
rolb
cmp
out
xchg
stos
gs
outsb
mov
jbe
lock
xchg
mov
push
mov
shll
add
stos
add
sub
int3
ja
cmp
adc
fdivrs
ljmp
dec
or
and
imul
xchg
sahf
pop
pop
mulb
inc
and
call
add
mov
ja
dec
movsb
sbb
push
inc
sub
pop
mov
daa
xor
sti
les
jne
lahf
test
bound
icebp
cmpsl
push
mov
jg
std
cmc
test
push
addr16
lahf
fimuls
add
mov
fnsave
jecxz
mov
add
bound
sbb
arpl
xor
mov
cmp
inc
in
insb
push
xchg
jl
dec
sbb
xchg
fisubrs
sbb
repz
and
inc
jmp
fiadds
mov
push
sbb
jns
andb
decl
sahf
jg
fs
push
mov
pop
sub
std
mov
popa
sub
xchg
xor
add
repz
pop
fmul
pushf
ret
sbb
jbe
add
dec
push
push
mov
or
fdivl
ret
dec
cmpsb
enter
mov
and
out
movsb
fcomp
dec
mov
ljmp
ss
push
fidivrs
mov
int3
lret
sahf
push
ja
sub
inc
xor
data16
fidivs
imul
js
cmp
fcmovu
xchg
pushf
sub
jge
xor
add
arpl
pop
out
icebp
pop
rep
mov
lcall
push
fstl
js
jg
adc
repnz
mov
mov
and
mov
outsl
mov
lods
inc
cmc
jge
lock
dec
jne
add
jmp
arpl
sub
out
inc
out
shlb
shll
add
ror
or
mov
push
int
jg
sbb
test
shll
sub
jns
fwait
cwtl
and
cmc
ja
or
mov
leave
shll
aad
xchg
pop
pusha
repz
xchg
insb
stos
out
add
or
adc
sbb
or
push
pusha
dec
push
cmp
into
pop
jmp
or
fs
jns
bswap
addr16
insb
outsl
xlat
jge,pt
mov
push
shl
or
lcall
add
push
mov
rcrb
push
js
or
inc
jg
insl
add
mov
inc
jp
mov
pop
pushf
lock
pop
cmp
loope
pop
mov
pusha
jne
lock
inc
outsl
jns
push
sub
movsl
xchg
inc
in
jl
cltd
mov
add
frstor
bound
addr16
rol
adc
xor
cmp
pop
dec
mov
scas
clc
cmp
int
cmpl
inc
add
jns
add
push
loope
inc
imul
xchg
push
sti
ret
lods
xor
ret
mov
push
push
in
sub
sarb
lea
popa
cwtl
mov
push
xor
sbbb
dec
sti
xor
in
fistps
in
subb
dec
cmp
mov
outsl
cmp
or
fwait
lock
push
enter
cmpsl
dec
sub
or
daa
push
cli
cmc
dec
cmp
push
subl
push
adcl
lahf
negb
adc
cmp
pop
ljmp
ret
rcll
add
dec
test
fwait
xor
shl
pop
cld
les
xor
sub
and
std
pusha
inc
movsb
in
loope
cmpb
sbb
xor
jne
ret
and
inc
jge
and
sbbl
je
fbstp
dec
inc
lea
xchg
and
add
pop
pop
rorl
jl
aaa
fsubrl
int
dec
rcr
stc
stc
or
adc
mov
loope
mov
mov
xor
mov
clc
testl
ret
loopne
sahf
sahf
sbb
jae
int
inc
fwait
jne
imul
pop
cmp
mov
scas
sti
rcrb
mov
lret
fnsave
xor
jnp
xchg
movsb
dec
in
cmp
loope
pop
mov
enter
jg
and
popl
fld
std
pop
int
sbb
mov
fstpl
int3
cld
nop
mov
cmp
dec
add
pop
mov
out
xor
rorb
cmp
in
cmp
mov
shl
call
insb
and
test
aaa
xor
inc
mov
push
dec
call
pop
pop
imul
scas
cmc
repnz
or
push
out
inc
cmp
xchg
cmpsb
xorl
int3
pushaw
cmp
inc
orb
pop
push
stc
je
mov
jnp
or
mov
ret
cmp
popf
ds
fdivp
dec
lock
mov
xchg
movsb
lret
test
mov
clc
scas
fwait
imul
mov
in
jl
mov
out
add
stos
push
rorb
push
testl
cmpsl
lods
sub
scas
adc
lds
in
in
test
lods
fdivrs
int
cmp
shrl
jmp
lret
mov
lods
jb
or
sti
mov
lock
pusha
test
cmpb
out
sub
scas
dec
testb
into
mov
and
lahf
mov
jns
clc
sub
push
call
pop
cmpsl
ret
sbb
repnz
testb
lahf
pop
push
int3
sub
inc
pop
lret
xorb
and
pop
mov
xchg
js
ret
xchg
mov
jmp
jmp
call
test
adc
push
or
je
cmp
sahf
push
push
xchg
cmp
std
leave
dec
sub
scas
jbe
test
xchg
mov
daa
sub
jle
pushf
adc
cmp
icebp
cmp
add
lock
popa
mov
loope
jo
push
pop
xchg
sti
clc
testb
sub
mov
test
mov
adc
pop
icebp
jns
jmp
mov
cmp
stc
lods
mov
jl
jge
fwait
mov
xchg
jb
lds
repz
mov
mov
pop
bound
std
xor
stos
rcl
or
jo
jmp
mov
push
cmp
cmp
popf
jo
data16
mov
aas
rcr
xchg
test
xchg
out
and
ret
adc
mov
add
test
mov
stc
inc
test
add
aaa
mov
popa
in
push
mov
enter
mov
das
movsb
jecxz
inc
xchg
in
mov
xchg
and
pinsrw
mov
mov
mov
movsl
mov
add
inc
jle
xchg
daa
adc
adc
mov
lahf
hlt
rorb
and
pop
js
aaa
cli
out
std
data16
cmp
ljmp
inc
cmpsl
mov
lret
ret
lea
sbb
icebp
and
and
pop
iret
xchg
fnstcw
stc
mov
in
cmpb
int
inc
test
sub
cmp
and
cs
pop
adc
in
pop
pusha
fwait
pop
and
inc
xor
bound
mov
insb
aad
push
in
inc
xchg
or
addr16
loop
loope
sbb
dec
or
and
psrad
in
js
aam
push
cltd
and
dec
mov
lds
lock
mov
xchg
jae
arpl
arpl
lods
jecxz
int3
adc
test
ja
add
and
mov
out
xchg
pop
fcoml
fadd
mov
aaa
xlat
pop
fmuls
xacquire
jmp
ljmp
in
fdivl
jmp
push
push
dec
mov
dec
push
push
rorb
jno
pop
arpl
sub
fistps
rcrb
ret
cmp
lea
je
clc
pop
push
ja
push
mov
push
mov
jb
fucomp
cld
mov
gs
or
pop
push
imul
xchg
mov
cmp
sti
insl
in
repz
mov
mov
lcall
shl
fsubrl
add
and
jno
int3
clc
or
arpl
xchg
mov
pcmpgtd
outsb
rclb
outsb
sbb
mov
xchg
dec
vmxoff
push
xchg
cld
add
sysenter
lods
loop
jns
xor
mov
xchg
sub
addr16
cmp
int
and
iret
push
fimuls
les
sbb
mov
shll
inc
std
cmp
ss
int
mov
std
das
mov
push
jp
mov
mov
and
cmp
mov
lret
leave
in
cmp
test
aaa
je
pop
xlat
mov
cmp
jo
mov
sbb
jecxz
mov
insb
scas
mov
cmp
in
inc
or
fsubrl
pop
pop
out
lret
bnd
adc
in
insl
dec
add
repnz
lods
jne
in
mov
orl
fstpt
mov
in
fistpl
pop
cwtl
push
das
ret
pop
repnz
lock
xrelease
in
xor
leave
xlat
jo
push
lea
pop
inc
and
push
pop
inc
xor
lock
push
ss
cld
push
mov
btc
dec
xchg
pop
push
inc
dec
push
add
rcl
cmp
das
or
aad
mov
or
adc
inc
jl
jle
popa
xchg
push
pop
pop
testl
sub
xchg
add
pop
sub
or
inc
jnp
dec
and
loop
push
cmpsb
jmp
aad
lods
les
adc
stc
push
rcr
xorl
lock
jl
leave
es
pop
add
lds
sbb
xchg
cli
mov
xor
or
push
or
pop
push
xor
pushf
loopne
mov
mov
sbb
sub
cs
or
push
sbb
cmp
clc
fisubrl
popf
inc
insl
call
xor
out
adc
popf
pop
pop
and
sbb
sbb
mov
dec
cmp
mov
shlb
repnz
mov
pop
xor
add
std
xor
xlat
xorb
out
popa
push
xor
aad
inc
and
add
lret
out
imul
sbb
push
dec
and
pop
xchg
lret
es
repz
lcall
popf
push
add
mov
add
repnz
mov
aas
fdivs
mov
adc
scas
xchg
mov
and
std
mov
dec
pop
mov
cmp
add
sbb
adc
scas
cld
push
pushf
test
mov
push
imul
cmpsb
push
pusha
and
hlt
mov
imul
sbb
das
test
rcll
and
gs
push
cmpsl
aam
dec
jle
mov
or
or
ficoml
test
or
pop
sub
outsl
push
mov
mov
prefetch
xlat
mov
or
inc
sahf
ljmp
xchg
or
adcb
adc
xchg
pop
or
je
add
bound
out
add
pop
xchg
aam
sahf
mov
aaa
jo
in
rcll
mov
lods
inc
xor
mov
addr16
pop
mov
fstpt
jg
rol
shrl
push
and
cmp
ret
adc
push
push
adc
push
lods
mov
and
push
test
enter
push
cmpsl
sti
xor
pop
push
daa
sarl
dec
mov
mov
mov
or
xchg
out
lahf
dec
jmp
jge
aas
test
testl
push
cmp
sbb
add
mov
stc
std
add
sub
int
add
push
jnp
in
jb
aaa
dec
nop
pop
ret
push
mov
jmp
bound
mov
mov
jmp
fistpl
out
ss
cwtl
push
cmp
mov
stos
mov
movl
popa
sbb
loop
or
adc
lods
in
inc
rcll
popa
nop
aaa
adcl
xor
sbb
xlat
and
push
add
andb
leave
inc
cmp
js
movsl
cwtl
int3
mov
int
ja
sbb
inc
paddsw
and
lahf
mov
sbbb
lods
call
shll
in
cmp
xlat
std
dec
and
jnp
das
fdivr
iret
push
aaa
bound
iret
repnz
enter
bound
sub
shlb
pop
sahf
out
int
outsb
push
into
pop
sbb
mov
push
pop
cli
fs
lret
stos
mov
mov
or
fbstp
dec
loop
push
shrb
sarb
sbb
xor
or
fcoms
sahf
nop
lret
inc
mov
pop
out
adc
cmp
clc
or
lret
ljmp
jmp
xchg
sbb
xcrypt-ofb
cmpsl
outsl
test
xor
mov
movsb
inc
dec
enter
mov
sti
ljmp
arpl
mov
and
imul
lock
jne
push
sub
fucomip
ljmp
xchg
in
add
adc
pop
movsl
insb
push
push
fcmove
push
popa
xor
js
enter
outsl
xchg
je
call
repz
jle
add
lahf
mov
xchg
and
dec
sbbb
push
std
je
out
mov
lock
inc
lcall
push
shlb
lret
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
repnz
push
xchg
add
and
arpl
jbe
mov
clc
popa
enterw
and
or
mov
xor
dec
jo
adc
movsl
ds
aas
dec
enter
in
xchg
jmp
call
fwait
adc
sub
int3
mov
fcmovne
imul
repz
adc
cs
nop
lret
fisubs
push
push
jle
je
cwtl
inc
pusha
sti
xor
sub
sbb
test
push
add
fisttpl
sbb
pop
mov
sti
jb
imul
insb
fwait
cli
inc
mov
out
push
aad
shll
enter
mov
cs
aam
rorb
push
rcr
aam
loopne
test
imul
test
jle
mov
jo
sbb
inc
daa
add
inc
mov
cmp
popa
jnp
loope
sub
and
jo
std
pop
out
adc
xlat
shl
lods
mov
jmp
cmp
fwait
push
jo
insl
mov
leave
xchg
xlat
inc
je
fsts
adc
xor
xlat
test
pop
fwait
pop
jg
loop
jecxz
mov
mov
andl
dec
ret
pop
movsl
sti
cli
push
dec
frstor
dec
or
pop
addl
bound
xor
push
jb
push
fsubs
lret
push
les
adc
cli
sub
jnp
xor
xchg
rolb
pop
nop
xorl
cmp
addl
fcmovu
shll
mov
bswap
jns
rclb
int
and
popa
iret
cltd
jmp
dec
push
add
loopne
mov
es
jge
mov
mov
push
cmp
fsubp
pushl
rol
jne
add
and
fisubs
stos
jbe
dec
push
jmp
incb
jnp
divb
mov
test
shlb
push
push
sub
rcl
fstpl
fisttpll
out
or
ss
push
dec
push
mov
negl
imul
push
add
mov
js
ljmp
mov
loopne
or
in
mov
dec
jmp
fdivl
jb,pt
push
adc
or
idiv
xor
sub
mov
add
movsl
xorb
mov
and
or
lea
xchg
sahf
xchg
shlb
xchg
mov
jae
lcall
jmp
ds
ljmp
jecxz
addr16
xchg
addl
jecxz
push
fdiv
sub
pusha
dec
mov
out
jp
loope
movsl
ss
fcmovnu
pop
push
lods
flds
loop
scas
dec
je
int
jecxz
addr16
xchg
ljmp
pop
notl
inc
or
in
cmp
mov
loopne
xchg
lock
sub
lds
andl
inc
test
xchg
scas
sbb
adc
mov
aam
scas
out
xor
mov
or
das
std
test
jp
outsl
xchg
and
mov
xor
jp
or
mov
dec
inc
sub
iret
mov
in
scas
sti
xor
pusha
sahf
adc
mov
or
ja
xor
sbb
mov
repnz
adc
lods
ret
mov
addl
jle
shl
clc
xchg
rolb
jae
in
sbb
mov
pop
insl
sbb
ljmp
clc
into
pop
xchg
inc
push
cmp
test
int
add
xchg
and
cmp
int
neg
je
fistpl
mov
xchg
stc
lahf
fwait
insl
mov
push
mov
sub
sub
in
add
enter
andl
cmp
add
jne
imul
lret
xchg
dec
hlt
popa
sub
cmp
jnp
xor
push
orl
inc
inc
sub
inc
xor
arpl
cmc
xchg
cmpsb
or
sbb
sub
cmp
cmpsb
icebp
or
xchg
inc
leave
push
pmaxub
test
outsl
mov
cmc
mov
add
mov
dec
fs
mov
cli
mov
fldl
rcrl
pop
fldl
test
mov
in
jge
imul
xchg
rorl
shlb
test
jp
daa
sbb
cwtd
xchg
jg
cmp
ja
aad
push
je
rcrb
lcallw
ds
dec
xor
mov
sub
mov
popa
or
out
loope
add
repnz
pop
xor
adc
adc
mov
pushf
pop
xor
inc
lret
mov
adc
push
ljmp
xorb
adc
test
push
int
dec
test
cmp
mov
jno
test
push
jno
daa
mov
jae
dec
sbb
jge
dec
mov
mov
andb
scas
inc
shrl
mov
push
pop
out
in
mov
mov
sub
mov
jns
cwtl
hlt
mov
aad
and
jg
pop
pusha
leave
icebp
push
in
jae
adc
mov
inc
mov
cmpsl
aad
jb
js
mov
jnp
repnz
push
jge
xchg
pop
jg
daa
fists
push
call
push
out
pop
mov
rclb
test
negl
sub
adc
jmp
out
dec
arpl
movsb
scas
dec
shrb
push
add
std
inc
sbb
mov
pushf
lea
pop
stc
movsl
fdivrl
std
sbb
dec
push
js
in
fstps
lret
lds
sbb
pop
push
inc
adc
adc
add
or
dec
lock
pop
shrl
push
outsb
movsl
popf
inc
fcomps
jo
imul
fsubrs
fcoms
aas
incb
xchg
in
push
add
dec
pop
js
bound
shrl
xor
cmc
in
mov
push
mov
xor
insb
shrb
jb
jbe
int
lret
or
dec
mov
or
adc
mov
inc
insb
roll
xchg
xorl
jno
or
das
fs
cmp
xor
sbb
pop
jb
inc
inc
push
aad
jae
shlb
dec
or
jecxz
adc
jle
xchg
dec
push
addl
cltd
fcmove
test
mov
or
xchg
icebp
clc
pop
inc
js
lret
imul
mov
xchg
aad
arpl
lea
xor
cmp
and
cmp
mov
or
sbb
pop
add
bound
jo
mov
pop
int3
orl
rolb
into
fisttpl
mov
jge
mov
stos
insl
add
sub
mov
xor
stos
mov
pusha
or
test
pop
lea
sbb
mov
rorl
insl
mov
mov
push
and
inc
stos
xchg
adc
or
out
xor
xor
stos
mov
sahf
movsb
add
xchg
arpl
stc
xor
lock
fcompl
aas
mov
je
inc
out
mov
mov
jge
xchg
jp
pop
sbb
mov
mov
jne
scas
movsl
inc
push
adc
lahf
sub
push
test
and
loopne
ffree
inc
pop
fcmovbe
out
dec
or
pop
add
mov
jp
push
inc
in
mov
jl
dec
nop
adc
int
xchg
lcall
dec
lea
ret
rorb
mov
mov
clc
cmp
sbb
shrl
dec
aaa
inc
mov
push
iret
mov
push
inc
and
mov
and
sub
jb
sarl
cmp
inc
js
inc
push
pushf
fistpl
jp
data16
ljmp
add
into
test
inc
push
es
or
or
jle
xor
dec
sub
cmpsb
dec
jns
imul
sbb
into
jae
repz
shll
cmp
jecxz
push
les
pop
mov
sbb
mov
mov
inc
mov
mov
xor
lret
out
mov
icebp
in
jp
pop
cmpsb
mov
addr16
mov
adc
and
fildll
mov
push
jl
int3
push
add
sub
das
jbe
fdivr
or
mov
add
pusha
xor
movsl
sti
in
repnz
mov
fwait
sub
add
das
sub
ret
sub
rep
inc
inc
or
sarl
into
xor
sub
stos
fcomp
aas
ret
adc
pop
sbb
xchg
arpl
sar
jmp
arpl
sti
push
mov
roll
xchg
repz
mov
loope
dec
je
push
daa
jno
sbb
outsb
and
pop
add
mov
movsl
pop
adc
xchg
mov
push
ret
cmpsb
sbb
or
jno
push
jb
cmp
or
or
ljmp
push
pop
leave
xchg
jnp
aad
daa
or
cmp
movsl
loope
push
fimuls
repnz
popa
je
sbb
add
dec
pop
mov
xchg
jo
pop
or
ljmp
xchg
xchg
inc
jecxz
push
scas
cmp
dec
lahf
inc
xchg
push
sub
xchg
fistps
mov
mov
shlb
sti
fistpl
dec
test
roll
sbb
push
sbb
pop
adc
sbb
xlat
inc
xchg
cmc
mov
out
repz
pop
addl
cmpsb
cli
cmp
and
mov
mov
cmp
gs
xchg
maskmovq
js
daa
cmp
adc
xor
dec
inc
sub
mov
ret
scas
sbbb
sub
jbe
cmpsl
loopne
fwait
cmp
inc
cmp
cli
lret
fcmovnbe
shr
mov
mov
shlb
scas
sub
xchg
add
xchg
fs
inc
mov
lret
fcmovu
dec
jmp
daa
sbb
pop
mov
sub
lods
leave
sti
cmc
loopne
mov
xor
pop
or
sbb
lahf
cmp
and
neg
inc
in
dec
out
jae
mov
lods
or
fcmove
xor
xor
test
and
push
mov
xorl
cmpsl
xor
mov
imul
fimuls
sbb
js
xor
sub
in
aad
add
and
movsl
jl
repnz
int
mov
cmc
das
adc
mov
xor
rclb
xchg
scas
outsl
out
jge
dec
jl
loop
jb
jb
sbb
push
pop
jbe
mov
jb
xchg
and
ljmp
dec
popf
test
sbb
cltd
and
in
test
and
call
mov
std
mov
mov
or
iret
ret
loop
mov
mov
jns
adc
jg
enter
out
jp
fcmovnb
pop
in
push
popa
jg
cli
loopne
lods
jg
jecxz
add
movsb
rorb
cmp
jb
cmp
mov
cltd
sub
sub
hlt
mov
push
out
push
pop
and
cmpsl
test
in
idivb
inc
movsl
and
sbb
pop
das
mov
dec
sarl
pop
sub
pusha
nop
pop
push
shl
xchg
negl
andb
lock
sbb
pop
cmpsl
mov
stos
ljmp
dec
adc
inc
rcr
pop
fstpt
and
in
out
xchg
fldenv
insl
addr16
jae
mov
ret
xchg
jmp
cs
fs
out
in
ja
cwtl
std
scas
les
jmp
pusha
popa
dec
addr16
data16
xchg
mov
mov
xchg
mov
xchg
subb
cmp
mov
fwait
out
mov
mov
dec
scas
movsl
fnstsw
mov
sahf
push
loop
sahf
pushf
js
ja
dec
or
xchg
dec
cmpb
sub
xchg
xchg
add
jno
icebp
sbb
repnz
push
ror
fisubrs
scas
dec
jp
or
jecxz
loop
sbb
dec
lock
or
adc
mov
ja
inc
popf
cmpsb
cmc
cmc
aad
jle
xchg
xor
leave
or
push
jne
hlt
xchg
ja
or
int3
or
retw
sub
dec
call
loopne
xchg
repz
test
adc
adc
cmpb
loopne
jae
out
leave
in
mov
mov
jmp
test
lahf
or
sub
addr16
mov
lock
sbb
lahf
cmpsl
xchg
int
cmp
cmc
sub
mov
add
cltd
shrb
adc
loopne
gs
dec
or
cwtl
xchg
insl
or
push
outsb
mov
push
in
adc
in
rcrl
push
mov
andl
xchg
and
js
pop
jo
int3
dec
mov
sbbl
dec
test
repnz
cmpsb
mov
lock
shll
test
in
in
jg
push
push
lods
xor
mov
lock
orb
repnz
pop
nop
mov
clc
jnp
add
cltd
popa
cli
cli
dec
jnp
into
dec
jns
mov
add
adcb
fidivrs
xchg
jb
mov
or
push
shl
adc
adc
ss
xchg
sub
xchg
xchg
loopne
and
dec
jo
fmull
and
daa
hlt
xor
or
rclb
hlt
mov
hlt
push
std
jb
mov
outsl
lret
rcrl
xchg
add
test
mov
mov
negl
imul
lock
pushf
cmp
ds
jle
jge
jne
nop
xlat
cmp
stos
jmp
arpl
and
imul
dec
popf
mov
rcr
dec
push
cmp
mov
cwtl
cmp
stos
pop
cs
dec
stos
shrl
leave
pop
add
mov
mov
jge
aam
testl
popa
popf
inc
mov
inc
icebp
pop
mov
shlb
test
lds
mov
xchg
sub
negb
mov
mov
ret
mov
lret
sti
ja
ljmp
jne
jmp
jg
test
xor
mov
repz
mov
dec
bound
imul
ja
inc
mov
cmp
cmp
in
daa
orb
push
or
repz
jbe
jecxz
mov
leave
je
movsb
inc
or
and
dec
out
push
daa
mul
adc
sbb
or
jge
popf
test
inc
fsubrs
dec
push
daa
xchg
enter
or
pop
cld
dec
mov
or
or
or
push
arpl
in
and
jnp
repz
sub
stc
sti
or
push
dec
jge
daa
repnz
pop
hlt
cmpsb
mov
scas
push
cmpsb
xchg
fdivrs
xchg
pusha
into
or
or
mov
ret
mov
cmp
add
sub
xor
scas
rolb
push
push
xor
lods
cwtl
bound
jne
jns
fstl
jne
movl
int3
sbb
mov
stos
pop
inc
jmp
mov
aas
push
int
mov
push
mov
clc
ret
cmp
sysenter
inc
inc
enter
in
fisubrl
ljmp
adc
in
int
or
jl
in
mov
es
popl
inc
xor
clc
int
in
cwtl
mov
adc
push
jmp
sti
pop
arpl
and
rcrl
dec
outsb
pop
jmp
push
mov
pop
mov
aaa
stos
add
out
inc
shlb
jbe
jecxz
roll
clc
or
lock
outsb
lods
xor
sub
je
or
lret
or
sub
cs
inc
xchg
cs
loop
notb
ds
push
adc
test
jno
shlb
movsl
out
xorl
lds
cli
xorb
push
je
cltd
arpl
xchg
popf
push
daa
mov
enter
js
fstps
fwait
stc
or
sbb
inc
fxch
push
add
jb
xchg
inc
xor
dec
jp
jnp
aaa
ret
xchg
inc
mov
cmp
pop
cli
arpl
in
pop
daa
jg
ss
arpl
mov
pop
pop
push
rcll
div
cltd
stos
cmp
sub
push
mov
dec
cld
and
int3
xlat
push
inc
or
mov
pop
shll
repnz
jb
push
add
push
inc
mov
call
adc
stos
dec
sub
xchg
push
aad
into
inc
movsb
stc
cmp
mov
scas
jo
scas
scas
jmp
mov
scas
pushf
out
push
push
enter
add
mov
mov
xor
bound
mov
pusha
sub
jns
mov
imul
pusha
std
push
cli
cli
shl
sub
xchg
ljmp
fwait
mov
in
cmp
test
stos
popf
das
decb
aas
push
inc
test
test
jmp
stc
cmp
jg
mov
data16
add
scas
insl
lcall
fldl
ret
inc
neg
enter
lea
aam
mov
mov
mov
fistl
mov
adc
sbb
cmpsl
pop
mov
sub
ljmp
push
out
aas
push
gs
movlps
mov
cvtps2pd
popa
cmpb
addb
fwait
jge
dec
cmp
add
enter
jne
fcomps
fisubs
or
sbb
int
fisttpl
jo
or
push
setl
push
into
fimuls
shrb
dec
jmp
xchg
leave
outsl
imul
lods
cmpsl
shrl
push
jg
and
dec
cmp
out
lods
sub
jbe
inc
icebp
popa
loopne
insl
repz
stc
cmp
jns
pop
jno
dec
mov
sahf
sarb
scas
arpl
pusha
data16
cmp
enter
cmc
enter
leave
mov
mov
cmp
inc
movb
pop
and
addr16
mov
cwtl
ret
mov
jecxz
fwait
xchg
xlat
sahf
xchg
push
dec
adc
xlat
je
xchg
xchg
mov
popa
adc
pop
add
lret
mov
into
fsts
inc
cmp
insb
mov
cmp
push
subb
sbb
cmpsb
add
cmp
int
inc
jae
push
fwait
push
cmp
lret
dec
xchg
fcomi
lock
and
xchg
and
sbb
cmp
adc
pop
add
popf
insl
insb
inc
je
test
push
jl
sub
mov
pushf
adc
test
mov
jbe
shll
out
dec
js
test
push
jne
sbb
in
pop
xchg
xor
shrb
icebp
ja
xchg
mov
test
cli
sbbb
inc
xchg
sub
add
outsl
xor
nop
cwtl
rolb
or
sahf
or
jl
sbb
imul
ljmp
mov
mov
rcll
jae
xchg
jmp
movsb
cmp
sub
outsb
inc
mov
jo
xor
cld
sbb
sbb
sbb
aaa
push
out
hlt
outsl
push
jbe
shlb
es
sbb
add
dec
and
xchg
mov
lahf
movsl
mov
xlat
inc
lods
sbb
aam
fcoms
or
mov
icebp
pushf
dec
mov
lcall
mov
mov
aas
cmpsl
sti
in
fdivs
inc
mov
out
nop
shll
cmovg
popf
push
data16
jge
push
pop
aas
mov
push
push
cmc
je
adc
cld
push
push
imul
insl
sub
inc
test
outsl
jge
xor
sbb
pop
dec
sbb
lock
fsts
push
inc
jmp
aas
mov
mov
lahf
push
lret
mov
push
shll
or
pushf
push
arpl
adc
xchg
outsb
mov
jge
cmp
and
add
fcmovnu
rorb
cltd
jb
shrl
movsb
sub
push
cld
mov
xor
jne
push
das
cld
popf
mov
insb
xor
push
sub
fists
mov
in
mov
mov
clc
push
xchg
shll
les
std
sub
jb
dec
addl
mov
pushf
jno
sbb
dec
sbb
add
data16
mov
cmp
leave
dec
mov
nop
lret
pop
insb
out
rcrb
bound
mov
adc
in
jp
cmc
inc
imul
test
mov
hlt
push
ret
in
ds
and
dec
or
mov
ret
cmp
bnd
hlt
sub
out
push
outsl
fistpl
mov
cs
hlt
pop
les
mov
loopne
fucom
stos
mov
lods
xor
or
mov
jbe
insb
dec
out
test
mov
mov
pop
xchg
adc
inc
push
or
mov
loop
mov
enter
aas
in
or
add
ljmp
mov
jmp
insb
fninit
popa
std
mov
cmp
imul
addl
xor
lret
shlb
inc
xor
dec
xchg
xor
cmc
adc
repz
or
cmp
jle
mov
xchg
jl
mov
push
cmc
xlat
popf
mov
push
push
xchg
and
xchg
cld
pop
adc
out
shll
jmp
shrb
clc
mov
xor
xchg
aaa
inc
and
fwait
pop
jne
pop
xchg
out
jmp
fsts
test
bswap
cli
cltd
adc
enter
push
adc
loop,pn
shll
scas
jge
mov
arpl
bound
lcall
mov
xorb
xchg
rcrb
add
xor
cmpsl
sahf
fstpl
mov
inc
jecxz
mov
sbb
loop
cmpsb
push
xor
ds
int
mov
sub
lods
lcall
mov
sbb
or
loope
lods
aaa
mov
mov
pop
add
inc
adc
pop
mov
lret
push
scas
jb
xor
cmp
pop
dec
mov
xchg
push
dec
or
mov
das
or
leave
mov
jno
jns
cltd
pop
cmc
in
or
xchg
rcl
mov
and
inc
lods
out
into
ficoms
clc
lahf
adc
or
and
pop
mov
sti
rcl
loop
pop
mov
xchg
push
xor
xchg
and
cmp
loopne
dec
into
inc
and
out
ja
jbe
adcl
fisttps
sbb
sti
cmp
lret
mul
scas
jmp
mov
cmp
out
in
imul
mov
add
inc
into
rcll
jecxz
shll
into
fincstp
cmp
and
insl
dec
cmpsl
roll
adc
ss
xchg
push
clc
sahf
sbb
dec
cmp
in
xor
clc
mov
mov
shlb
xchg
inc
add
and
std
inc
cmp
mov
dec
pop
fstpl
xchg
xchg
aam
mov
or
cld
ret
mov
test
int3
addr16
xchg
mov
sbb
cmpsl
inc
push
int
sub
inc
mov
aad
mov
push
xchg
xchg
mov
pop
leave
pop
sub
lock
scas
repz
aad
imul
andl
adc
pop
sbb
push
cmp
fs
mov
inc
or
clc
loopne
loopne
repz
jno
xor
insb
xchg
push
and
fistpl
testl
mov
enter
jmp
add
cltd
inc
pusha
adc
and
push
adc
mov
pop
pop
aad
adc
fdivl
hlt
repnz
sub
xchg
push
mov
outsl
scas
inc
stc
cltd
mov
fsubl
decb
dec
mov
test
lock
add
sbb
scas
sbb
dec
jno
adc
test
cwtl
cwtl
cld
shll
test
or
aas
mov
jne
and
push
rcrb
xchg
ds
mov
cmp
inc
fdivrs
jl
pushf
cmpsb
enter
mov
inc
mov
cld
mov
popa
lret
addb
popa
push
test
inc
cs
sub
outsl
dec
lods
pushf
int
xlat
or
cmp
push
mov
fcompl
pop
pop
cmp
cli
movsb
das
sbb
adc
jp
jns
mov
xchg
ss
xor
push
jle
cmpsb
inc
mov
into
mov
sbb
push
mov
fwait
nop
pop
ret
test
stos
sub
insl
jnp
loop
and
icebp
dec
jb
gs
or
xor
mov
cmpsl
jmp
push
ljmp
sbb
mov
mov
xchg
xchg
les
adc
popf
in
lea
loop
add
push
xor
lods
addl
lcall
int3
movsl
and
ret
pop
gs
lahf
leave
test
mov
jbe
push
outsb
xchg
mov
inc
push
stos
mov
inc
cmc
jbe
or
or
sub
mov
je
inc
sub
xorl
orl
es
loopne
jo
add
or
pop
xchg
stos
or
mov
fiadds
ret
mov
enter
jmp
pminsw
rolb
add
ds
movsl
out
and
popa
iret
push
adc
and
push
fstl
aad
xorb
in
imul
test
imul
cltd
sub
push
mov
cltd
hlt
xchg
stc
adc
pushf
out
ljmp
jg
adc
xchg
adc
std
mov
aas
inc
js
jmp
lods
jns
jnp
movsl
or
push
xor
rorb
out
movsb
out
adc
fistl
sbb
xor
loopne
fdivr
mov
add
inc
rorb
mov
cmp
cwtl
mov
rorb
push
xor
push
add
mov
fadd
sub
mov
inc
push
sbb
aam
and
adc
mov
pop
cwtl
mov
lock
sti
bound
pop
bound
and
or
dec
sbb
push
dec
fmuls
daa
test
les
mov
pop
pop
push
cltd
adc
inc
fildll
or
mov
mov
push
jne
jo
call
daa
lret
xchg
popl
inc
cmp
adc
dec
daa
cltd
cld
lea
mov
fstpl
add
jle
push
push
jno
in
xchg
test
ja
xor
pop
xor
xor
add
faddp
push
jb
xor
xor
out
out
stos
lods
leave
ret
sub
data16
mov
test
movsb
testb
rorl
sub
imul
mov
nop
mov
jmp
pop
fcomps
sbb
shlb
mov
data16
jmp
mov
aam
adc
pusha
mov
jl
pop
shrl
pop
add
pop
je
push
or
hlt
inc
aaa
add
sbb
inc
out
aad
jae
jae
sub
jmp
xor
test
rcl
mov
sbbb
imul
sti
push
inc
cmp
loope
in
test
test
xchg
push
popa
aad
jns
and
notl
push
dec
push
xchg
jo
std
pop
mov
dec
pushf
fildll
sbb
into
cmpsl
mov
cmp
push
ds
in
pop
hlt
inc
mov
add
jl
xlat
xor
cmpsb
jbe
repz
lds
push
fisubrl
and
rcrb
cs
pop
lcall
loope
lret
dec
movsb
cmp
xor
aam
ljmp
jae
cmp
inc
movq
leave
cli
or
cs
les
pop
sub
dec
aas
cmpsl
cmp
xor
pop
sbb
lds
je
repz
test
and
cmp
add
jp
inc
cmc
and
data16
lahf
sub
cmpsb
mov
pop
fdivs
adc
pop
js
outsb
aad
mov
push
push
ss
daa
adc
inc
mov
into
stos
lea
mov
or
imul
outsl
mov
mov
ficompl
mov
popl
cmp
mov
xlat
and
jo
mov
shrl
cmp
jno
ja
jns
xchg
jl
cmp
sub
or
jg
lret
daa
jmp
faddl
sbb
push
sbb
int3
or
pop
or
dec
mov
orb
or
lock
adc
xor
cwtl
hlt
cmc
shll
mov
lret
popf
mov
fmuls
in
push
cmp
inc
lahf
mov
sub
xor
add
cltd
scas
test
loope
pop
scas
rcll
test
mov
jae
js
das
add
sbb
pop
cli
sbb
push
dec
popf
jecxz
push
jns
loopne
lret
sub
cmp
in
sub
and
sbb
and
fldcw
push
push
cmp
push
inc
sub
pushf
les
or
insl
sti
jo
sub
cmp
das
dec
ret
lret
jnp,pt
xchg
ss
mov
stos
cmp
dec
mov
insl
lock
movsl
pop
insb
dec
push
inc
or
rorb
add
cmp
fcmovnbe
mov
jl
cli
add
gs
test
repnz
mov
mov
subl
adc
pop
jnp
bound
ss
push
cmp
lret
pop
lock
push
jle
add
push
mov
test
in
xchg
inc
popf
xchg
sub
bound
popf
ret
sub
xor
negl
aas
push
sub
mov
pop
stos
dec
push
std
clc
gs
out
sub
int
pop
aad
aaa
pop
mov
cmc
movsl
push
push
imul
xchg
out
mov
cmp
mov
sbb
imul
xor
mov
jbe
mov
cmp
pop
jno
movsl
sbb
in
leave
sbb
mov
movsl
test
pop
pop
sub
popf
mov
push
inc
ja
mov
fnstenv
iret
out
or
jge
sub
jmp
ljmp
jge
js
mov
xchg
add
add
ds
dec
pop
add
aaa
jp
or
cmpsb
dec
test
rcl
mov
popf
in
add
sub
sbb
dec
addr16
mov
dec
sub
mov
or
fs
cmp
mov
in
lcall
sti
add
push
pop
fsubrl
popf
xchg
lahf
push
lahf
inc
imul
sbb
lds
out
in
inc
inc
in
inc
das
mov
or
or
xchg
mov
mov
xor
imul
xlat
mov
stos
push
pop
stos
and
outsb
pushf
and
test
int3
test
and
and
cs
adc
lods
xchg
aad
add
pop
lahf
mov
push
das
mov
jno
and
sub
xor
dec
cmp
ret
dec
push
cwtl
jns
stos
in
inc
cmp
aas
xchg
ret
jge
int3
movsl
int
pop
lds
lock
and
outsb
mov
scas
hlt
test
dec
mov
xchg
adc
rolb
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
and
cmc
insl
add
jp
pop
jp
cmc
push
dec
mov
ret
dec
lret
mov
icebp
xchg
push
cmp
pop
and
mov
and
mov
push
fcoms
xchg
xor
test
mov
xchg
or
xchg
mov
xchg
fs
aad
mov
cmp
mov
hlt
shrb
es
mov
sbb
sub
push
pop
fdivrs
mov
cmp
iret
add
xchg
jne
mov
xlat
test
mov
stos
pop
mov
gs
out
push
lea
push
xchg
ss
cmpsb
mov
hlt
fcomp
cmc
mov
popf
jae
or
xor
ss
inc
xchg
cmp
dec
add
and
das
outsl
mov
mov
mov
push
in
sub
mov
je
mov
mov
mov
push
add
iret
test
pop
loopne
in
addl
fiadds
loopne
jp
push
movsl
pop
movsb
cli
push
adc
movsl
cltd
mov
adc
fsubrl
or
pop
fsubs
sbb
aaa
insl
cmp
or
or
inc
daa
mov
cmc
fmul
shld
js
and
pusha
imul
aaa
or
hlt
lcall
mov
mov
cwtl
pop
jbe
in
arpl
push
enter
mov
jmp
hlt
shrl
jg
fneni(8087
push
lret
mov
xchg
mov
int
xchg
pop
or
out
xor
inc
push
out
xchg
pop
lret
sbbl
int
xchg
fdivrs
push
dec
jno
xchg
fiadds
inc
mov
lahf
repz
mov
xor
popa
aas
dec
pop
insl
mov
mov
aas
sub
test
les
aaa
mov
fcomip
inc
add
mov
fdivrs
inc
pusha
add
inc
sahf
fwait
incl
cmp
mov
in
xor
lret
outsb
sahf
lret
push
xor
xor
fs
pop
xchg
jne
shll
xor
and
stc
repz
xchg
rclb
lock
dec
std
xchg
push
mov
xor
or
cwtl
inc
jno
push
sti
adc
pop
xor
cmp
test
das
mov
mov
jb
jmp
and
push
sub
add
inc
arpl
movsb
and
test
mov
or
enter
sub
pop
xchg
mov
push
add
xorl
ret
imul
addr16
aas
out
iret
fildll
dec
lcall
dec
popf
push
lods
aas
mov
xchg
xorb
stc
add
into
xor
shrb
dec
lcall
push
xchg
test
push
inc
xor
xchg
dec
mov
fisttpll
dec
test
jmp
imul
das
push
ljmp
lea
ret
mov
adc
xlat
cmp
xchg
hlt
dec
and
inc
add
out
sub
mov
pop
iret
mov
jecxz
stc
rorl
mov
add
in
or
mov
imul
jae
jnp
popa
sub
in
cli
and
xchg
inc
les
and
pop
in
or
sub
leave
pop
add
roll
push
add
mov
scas
jecxz
cmpl
push
and
mov
iret
sub
adc
call
adc
popf
add
in
fcompl
mov
add
stc
mov
push
jl
xor
push
lods
mov
sbb
jne
push
repnz
cmp
inc
or
mov
inc
sbb
add
arpl
fs
xchg
insb
inc
or
jle
mov
adc
jl
inc
outsl
icebp
shll
mov
data16
push
popa
cmpsl
fsubrp
ret
aad
or
inc
imul
jge
aam
adc
daa
cmpsl
nop
outsb
pop
push
test
xchg
rol
popf
outsb
mov
iret
mov
lret
push
pushf
dec
jmp
lds
stc
ss
jge
or
mov
shrl
add
in
iret
xor
insl
nop
or
mov
nop
mov
stos
push
or
leave
pop
jmp
pop
out
cli
mov
in
in
inc
ljmp
add
aas
ss
mov
mov
mov
pop
xor
xchg
jecxz
inc
jnp
or
js
mov
lods
js
outsl
pop
pop
adc
cmp
cmp
push
test
stos
inc
mov
int
pop
add
outsb
call
mov
test
pop
lods
and
dec
mov
lret
dec
mov
cs
mov
test
std
test
rolb
mov
stos
out
pop
into
shr
int3
push
mov
fdiv
add
xchg
es
nop
movsb
jl
notb
push
xorl
shll
jnp
aam
out
jge
outsl
icebp
add
dec
icebp
mov
sar
adc
jae
test
jmp
addr16
jbe
daa
xchg
push
adc
dec
sarl
int3
sub
cmpsl
les
inc
out
subb
call
into
lea
inc
inc
cltd
addb
xor
mov
dec
mov
dec
sbb
stc
mov
outsl
addr16
fistpl
sahf
lds
dec
ret
mov
decl
dec
add
inc
jns
mov
mov
sti
push
mov
and
jns
cmp
dec
in
sbb
outsl
inc
rcr
movsb
inc
or
cmc
out
int
addb
dec
out
cs
xchg
mov
jno
pop
push
or
mov
mov
adc
je
cmp
sub
inc
and
mov
sub
cs
ljmp
mov
loope
jno
pop
pusha
mov
dec
into
in
jge
pop
dec
xchg
push
call
mov
rcrb
xabort
mov
dec
aaa
imul
fs
jo
daa
or
add
sbb
pop
push
data16
xchg
aaa
pop
inc
fists
sub
sub
cmpsl
test
std
sbb
test
mov
mulb
jge
enter
mov
jmp
in
adc
pop
aaa
in
mov
push
mov
jae
inc
aaa
inc
in
outsl
mov
push
xchg
and
scas
addr16
notb
mov
sbb
sub
pop
dec
ret
enter
das
xchg
dec
inc
cmc
fcoms
mov
push
pop
sbb
or
mov
adc
clc
loopne
push
dec
pop
ror
xchg
sub
pop
cltd
and
mov
imull
pop
cmp
xchg
sbb
mov
shlb
jb
pop
loop
enter
adc
push
push
and
int
loope
mov
cmp
cmp
loopne
insb
xchg
pusha
clc
aaa
pushf
or
push
xlat
lcall
xchg
adc
cmp
clc
or
frstor
imul
jnp
sti
fwait
add
iret
fwait
jns
sbbl
jb
adc
ss
pop
lret
test
jb
push
sahf
xor
clc
dec
outsb
cmp
dec
int
lcall
cmp
outsb
popf
mov
fcmovu
push
mov
mov
out
cmp
rorl
pop
js
sub
cmp
inc
inc
cmpb
xor
jl
sub
mov
js
jecxz
pop
in
movsb
jae
sub
adc
ja
fprem
dec
and
repnz
iret
pop
jmp
jnp
and
lods
cld
sbb
jnp
js
sub
lret
lods
pop
mov
mov
mov
sahf
dec
lret
es
sahf
pop
sub
adc
insb
push
push
cld
mov
mov
cmp
hlt
sub
les
std
pop
in
and
lods
nop/reserved
or
out
dec
call
les
fdivr
mov
test
xor
in
loopne
pusha
loopne
mov
cmp
leave
inc
push
cmpsb
imul
movsl
pmaddwd
ds
lock
dec
jle
mov
sub
test
out
mov
mov
imul
mov
cmp
adc
cwtl
es
popa
mov
adc
int
sub
in
data16
inc
mov
mov
in
ljmp
ja
dec
mov
fnstcw
xchg
loop
pop
sarb
cmpsb
or
aas
mov
subl
pop
mov
lock
jne
cs
addr16
mov
dec
cmp
mov
mov
ljmp
push
push
pop
mov
pop
mov
scas
shlb
xchg
sbb
lahf
mov
insl
in
push
add
shll
mov
or
cld
add
inc
scas
fdivrl
mov
adcl
push
pop
pushf
lea
mov
push
test
push
adc
mov
dec
push
test
fistpl
in
ret
mov
fiaddl
sub
mov
mov
incl
pop
xchg
push
fcoml
xchg
popf
and
or
mov
push
mov
mov
xor
dec
sub
xor
imull
fimuls
pop
cmp
inc
jmp
xchg
in
push
jle
pop
fadds
pop
flds
sahf
movsl
insb
orb
emms
mull
cmp
xchg
lock
fadds
xchg
add
insb
mov
aaa
xchg
cwtl
and
stos
mov
and
inc
call
in
jns
and
jne
aaa
jmp
pop
fadd
pop
xorb
pop
daa
scas
push
mov
dec
push
lds
jp
sbb
int3
outsl
andb
add
ret
stc
aaa
arpl
arpl
das
push
orb
cwtl
outsl
dec
sub
jbe
pusha
sub
xchg
jae
aaa
xor
rorl
shl
adc
ds
or
out
jno
hlt
insb
adc
int
inc
mov
sub
icebp
cltd
mov
pushf
cld
outsb
sub
cs
and
mov
pop
pop
mov
out
pop
sti
aad
mov
and
or
push
cltd
imul
jle
mov
gs
xchg
es
bound
outsb
mov
mov
add
sub
loop
pop
add
mov
fstl
add
and
jns
add
mov
test
inc
gs
cs
sub
mov
mov
in
loop
cwtl
fimuls
dec
xorb
es
call
xchg
push
inc
inc
ds
cwtl
add
mov
daa
test
shlb
pop
ds
or
xchg
andb
sub
pop
mov
dec
rep
les
add
es
movsl
sub
lock
fadd
into
outsb
sbb
or
sbb
push
aas
adc
inc
popf
mov
iret
mov
fwait
cmpsb
fistpl
xor
push
add
and
mov
sub
push
pop
lea
mov
push
jne
mov
pushf
push
xor
in
scas
int3
and
idivb
nop
mov
jo
xorl
aad
insb
cwtl
pop
repnz
fdivrs
rcll
sbb
inc
aad
jmp
je
dec
push
setbe
loop
cs
cli
mov
dec
xchg
fdivs
sub
inc
sbb
mov
dec
or
aaa
pop
mov
sub
push
lds
mov
test
xor
das
push
int3
hlt
and
mov
pushw
mov
adcl
sbb
xchg
mov
pop
inc
std
out
jo
repz
movsl
xor
or
xor
testb
mov
add
ret
xchg
bound
sub
sub
add
cmp
aam
mov
in
mov
sbb
test
popf
dec
cmp
xchg
and
ds
mov
bnd
repz
lock
xchg
clc
pop
jnp
mov
popf
sbb
sahf
pop
mulb
adc
imul
add
mov
xchg
cmpsl
clc
fildll
jmp
iret
push
mov
and
mov
xchg
push
insb
inc
add
fnstcw
push
fistps
loopne
cmp
push
mov
gs
sar
sub
push
push
in
out
or
negb
jne
mov
testl
imul
rcrl
ret
add
mov
xchg
mov
popa
push
adc
jbe
icebp
inc
sub
stos
and
aas
loop
js
movsb
xlat
jbe
xor
cltd
pop
in
rcrb
outsb
inc
and
inc
in
xchg
push
dec
ret
dec
xchg
loope
popf
sub
adc
aam
mov
scas
loop
push
jg
add
pop
dec
sahf
aas
adc
mov
test
outsl
jg
data16
mov
stos
sbb
push
subb
imul
or
shl
sub
popf
scas
out
xor
push
mov
ss
xor
mov
dec
lret
fwait
daa
leave
xchg
and
in
cwtl
xor
push
cmpsb
sub
mov
out
cmp
inc
add
jl
jne
dec
xorl
fstpt
adc
bound
in
fldpi
hlt
lock
inc
hlt
push
imul
shlb
jecxz
rclb
mov
sub
add
icebp
cmpsl
test
ds
loopne
sbb
push
fnsave
enter
push
mov
mov
or
addl
cmpsb
lcall
cmp
mov
push
pop
mov
add
sub
sbbl
adc
roll
es
mov
mov
sub
xor
lret
dec
cmp
fnstsw
adc
ficomps
adc
inc
xchg
cltd
cmpl
jp
test
jb
inc
scas
xchg
repnz
jae
dec
push
popf
mov
mov
push
push
sbb
cmp
push
inc
or
sbb
mov
dec
ljmp
jg
repnz
out
jns
into
out
add
adc
push
mov
ficoml
pop
pop
xchg
cmp
xchg
jb
jnp
mov
dec
lret
into
xor
sbb
out
sbb
mov
mov
mov
filds
sbbb
stc
jge
mov
mov
jecxz
nop
testb
aas
daa
inc
inc
push
ja
inc
xor
sbb
adc
in
lods
popa
mov
fisubl
repnz
sub
mov
int3
adc
into
xchg
mov
fldcw
rcrl
stos
fldl2t
addl
mov
iret
sub
cmpsb
xcrypt-ecb
cmpsl
dec
repnz
aas
push
inc
add
out
mov
subb
pop
cmpsl
push
adc
cltd
stc
mov
cmc
push
icebp
xchg
jb
dec
bt
jae
fisubrs
inc
les
orb
sarb
cmc
je
and
sbb
push
or
in
lods
rclb
lret
inc
jns
lcall
movsl
cmp
sbb
in
adc
push
xor
sbb
aaa
stc
divb
and
mov
shll
cltd
jo
aas
pop
and
adcb
or
sbbw
xor
mov
js
add
sbb
in
pop
sbb
scas
sub
gs
test
inc
mov
iret
lds
and
icebp
int3
or
sbb
mov
cmpb
sbb
push
adc
mov
push
test
push
decb
or
sar
add
sbb
hlt
cmp
adc
adc
aam
and
nop
sahf
inc
negb
jae
pop
movsb
and
push
cmpsb
dec
pop
sbb
jge
add
and
or
mov
lret
push
dec
in
test
mov
and
xchg
rorb
test
aas
adc
lret
fcmovnb
jbe
insl
sub
sub
fidivl
scas
test
mov
pop
xchg
pop
or
insl
cmp
or
test
faddp
es
or
je
fcmovbe
dec
mov
rcr
fsubs
mov
add
add
or
pushf
movsl
pop
pusha
movsl
popa
mov
lahf
cmp
inc
aas
jnp
inc
outsl
lret
imul
stos
mov
cmpb
lahf
lret
inc
lcall
cld
sub
loopne
lods
fs
ja
inc
mov
xor
shl
add
stos
mov
push
icebp
sbb
mov
mov
push
insl
sbb
mov
lods
xchg
inc
fsubrp
out
aad
push
mov
xchg
jae
dec
sbb
inc
hlt
jl
mov
mov
dec
shrl
orl
in
ret
mov
in
sbb
pop
sub
xchg
or
pop
mov
push
loopne
lods
es
out
xor
cmpsb
jg
es
lret
pop
imul
xchg
push
xchg
xchg
and
jbe
repz
sti
sbb
rolw
ficoml
popa
hlt
cwtl
pop
push
pop
stos
andl
add
in
addr16
arpl
jbe
test
test
cld
hlt
ficoms
push
adc
aaa
imul
push
mov
int
jle
js
repnz
sub
loope
pop
pop
inc
mov
mov
mov
rcrb
inc
xlat
rcr
mov
js
and
dec
mov
mov
pop
mov
jmp
addl
jb
ja
pcmpgtd
fiadds
mov
cmc
iret
inc
out
jp
fucomp
sbbl
pushf
cmp
mov
inc
in
inc
daa
cmp
mov
pop
in
and
in
test
mov
je
mov
xor
add
fimuls
out
jb
inc
inc
xchg
sbb
or
sbb
dec
jecxz
loop
dec
in
mov
xchg
jmp
mov
cmpsb
out
sti
xchg
jne
scas
and
mov
mov
jge
pop
sbb
pop
cmp
mov
add
cld
xor
negb
loope
in
ret
test
inc
mov
dec
cmp
movsb
ds
in
into
push
cmp
cmp
ret
cmp
fisubrs
shlb
in
jbe
dec
jle
and
insb
out
push
jl
scas
lea
push
sbb
pop
out
cmpps
pop
out
jns
inc
xchg
mov
inc
test
mov
lea
cwtl
sbb
mov
aas
push
xor
stos
and
cmp
xlat
push
pusha
iret
inc
imul
add
repnz
adc
push
xor
xchg
daa
xchg
pop
xlat
arpl
xor
ja,pt
xrelease
sub
cli
cmpsb
fnstenv
or
cs
js
mov
movsb
ret
loopne
int
or
xchg
fwait
in
cmovne
xchg
sahf
cmpsb
and
cmpl
int3
loope
mov
sbb
mov
xor
add
jae
sub
jnp
push
sbb
or
subb
xor
adc
xor
sar
jnp
jb
clc
cmp
dec
jno
negl
mov
stos
sahf
fstl
fstp
fsubrl
mov
mov
or
daa
out
ljmp
inc
cmp
imul
cmp
push
fdivp
mov
data16
addr16
mov
stos
add
jmp
cs
and
je
jns
imul
cmpsl
mov
pop
in
cmp
sbb
xchg
adc
mov
inc
sub
adcb
push
mov
and
rorb
xor
jp
sbb
jg
and
or
popf
pop
lods
arpl
sub
pop
add
insb
or
fwait
mov
loope
stos
push
mov
cmp
dec
mull
mov
mov
lcall
jae
in
mov
push
jmp
mov
dec
xchg
mov
jae
es
stos
jp
mov
fldcw
adc
jge
push
std
stos
sub
dec
inc
das
inc
xor
repz
repz
stos
xrelease
dec
mov
pop
scas
jle
push
imul
loopne
ror
lods
mov
adc
dec
inc
xchg
ret
push
or
rcl
movsl
jmp
in
inc
dec
in
shrl
je
inc
xchg
ret
pop
loop
mov
fnstcw
cmp
out
mov
je
sti
aad
jmp
fisttpll
mov
mov
adc
inc
repnz
dec
cmp
imul
icebp
cs
enter
fisubl
roll
lcall
dec
inc
cmpsl
sbb
or
in
clc
faddl
sti
jo
push
push
popf
push
jg
sar
push
xchg
mov
hlt
lcall
shl
mov
cmp
jg
mov
mov
or
daa
xchg
js
outsb
and
pushl
pop
xchg
stc
imul
xor
fninit
cld
mov
dec
sbb
and
jae
movsl
inc
jecxz
jb
mov
ss
pop
pop
in
cmpsb
test
popf
jbe
or
out
aas
mov
xchg
fstl
dec
jge
daa
push
or
pop
lret
mov
out
cmp
pop
mov
add
cmp
or
mov
andb
add
cmpsb
push
lea
adc
pop
jne
push
xchg
rcrl
push
aad
mov
hlt
inc
pushf
invd
fbstp
fimuls
ret
bound
mov
mov
xor
mov
jno
mov
test
mov
dec
push
shr
inc
js
push
pushf
mov
jmp
frstor
mov
inc
sbb
xchg
out
mov
ja
shll
mov
inc
push
fmull
loope
xor
mov
jg
and
mov
test
sub
rolb
or
cmp
inc
and
stos
out
gs
cmp
lds
and
fldz
xchg
arpl
adc
test
pop
xchg
jb
xlat
int3
cmp
out
sub
loope
insb
inc
pusha
lahf
xchg
and
nop
je
sub
xchg
loopne
loope
cld
fcomip
xlat
mov
int
fildll
decl
in
repnz
fs
addl
mov
stc
dec
cmp
inc
repz
hlt
mov
jmp
adc
inc
les
shll
shl
sbb
mov
lahf
mov
inc
loopne
jg
cmp
fsubrl
daa
fildl
cmp
bound
in
les
and
out
ja
es
or
imul
sbb
or
adc
xor
gs
ss
ret
lret
clc
xor
mov
xchg
mov
adcl
popa
stos
add
and
pop
and
lods
inc
dec
push
mull
mov
xchg
jp
outsl
andl
cmpsl
xor
push
and
push
xchg
xor
jle
mov
shlb
stos
or
nop
addr16
cmp
ja
repnz
in
jo
in
popa
sbb
sub
das
sub
out
push
mov
ja
mov
bound
dec
aas
jecxz
rolb
mov
shlb
iret
jnp
mov
jecxz
fbstp
dec
mov
aaa
xchg
sub
pop
mov
lcall
pusha
orl
test
shlb
aam
shlb
adc
shl
cli
ficomps
mov
push
xor
jne
repz
xchg
mov
pop
stos
mov
mov
mov
or
mov
hlt
fiadds
sbb
ds
cmp
dec
jecxz
ds
sub
in
out
sub
fdivl
je
mov
pusha
adc
outsl
pop
add
js
or
inc
push
and
insl
loop
pop
xor
cmp
xchg
fistl
addr16
xchg
hlt
in
outsb
inc
add
xchg
mov
test
pop
cmc
inc
fwait
das
aad
ficoms
pop
push
ds
das
or
test
sahf
jbe
xlat
xchg
push
cwtl
fs
push
ljmp
push
packssdw
stos
adc
mov
jl
std
pop
xchg
cmp
cmp
xchg
repnz
popf
in
ret
out
fimull
test
inc
cmpsb
and
ss
rolb
dec
sbb
mov
push
orl
pop
lahf
and
mov
loop
mov
sub
add
leave
rclb
sub
lods
mov
push
insb
pop
test
mov
xchg
and
jb
movsb
rcl
sub
js
scas
jmp
xchg
fistpll
lock
mov
xchg
xchg
std
push
mov
lret
in
sbb
mov
fadds
daa
mov
jecxz
mov
pusha
stos
or
loope
xchg
mull
leave
add
jecxz
cmpsl
out
pop
scas
insl
jp
adc
clc
fsubs
push
mov
dec
mov
lds
divb
xchg
pusha
test
push
repz
dec
sbb
push
popf
outsl
jae
das
dec
mov
int3
add
mov
aad
mov
sbb
push
mov
mov
in
sbb
movsl
negb
cmp
sbb
fmul
hlt
dec
outsb
sub
jp
mov
mov
cmp
jb
and
mov
inc
cmp
push
loope
shrb
popf
adc
dec
jmp
ds
mov
cmp
inc
rcrl
xlat
push
cmp
mov
cmp
adc
mov
adc
mov
sar
ret
cmpb
imul
adc
scas
rorb
and
xchg
mov
xchg
push
push
mov
inc
int3
lahf
movsb
mov
jp
mov
and
aam
ror
aam
mov
sbb
mov
or
leave
push
adc
loope
and
adc
xor
addr16
insl
add
leave
insl
leave
xor
fisttps
mov
adc
into
fsubrl
sbb
mov
aaa
push
xchg
mov
out
daa
inc
les
add
lds
xchg
xchg
clc
cmpsb
enter
and
sub
outsl
mov
adc
lcall
sbb
xchg
test
fldcw
popa
sbb
in
in
add
test
movsl
mov
dec
pushf
in
and
loope
and
cmp
in
dec
into
jne
aas
divl
mov
mov
sub
dec
push
lea
mov
clc
dec
std
pop
push
outsb
fidivrs
aas
enter
jo
push
stos
sbb
aad
pop
xor
fldenv
fldt
cltd
push
jbe
aam
inc
xor
or
call
mov
outsb
cmp
or
out
aas
add
arpl
add
sahf
jo
aaa
and
push
lcall
out
testl
out
cmc
ud0
mov
dec
std
leave
mov
add
lock
pop
popf
inc
inc
dec
test
pop
outsb
or
mov
test
mov
push
cmp
push
inc
hlt
cmp
test
add
mov
outsb
call
imul
pop
cmp
and
push
push
mov
or
jno
cltd
fs
adcb
into
push
push
xchg
cmp
cltd
jmp
ja
xor
sub
in
xchg
jno
sbb
or
pop
push
adc
leave
cmpsl
cwtl
push
outsb
ret
inc
dec
pop
out
aas
dec
dec
xor
jmp
loop
mov
xor
xchg
cmp
pop
dec
aaa
mov
or
pop
lret
add
push
or
pushf
sbb
adc
and
out
icebp
lds
lret
ret
ja
pop
inc
mov
insl
sbb
mov
pop
ret
fwait
cwtl
aad
test
and
adc
arpl
test
xor
mov
xchg
cli
push
int3
data16
scas
imul
sub
sarl
popl
icebp
daa
int
cs
xor
add
std
inc
inc
push
add
stos
jbe
and
mov
std
jecxz
aas
dec
loope
xchg
inc
cltd
mov
scas
aas
icebp
rcrl
movsb
dec
cltd
outsl
testb
outsl
mov
ret
inc
push
lret
xchg
sbb
mov
lea
cmc
cmpsl
shlb
pop
jb
pushf
ljmp
pop
push
shlb
dec
push
dec
fistpll
bound
push
jno
push
lahf
cmpb
ljmp
out
fdivs
mov
dec
mov
dec
push
jp
stc
xchg
fwait
scas
cmc
xor
sbb
inc
into
mov
inc
pop
mov
test
mov
and
push
rcrl
add
into
cld
mov
scas
jecxz
hlt
jo
loopne
stos
sahf
or
dec
add
mov
mov
dec
jge
push
lds
test
out
xlat
jmp
jmp
sarb
pusha
sub
xchg
outsl
jns
dec
or
mov
pop
repz
add
addr16
test
andb
jae
mov
inc
sbb
ljmp
xlat
push
jmp
pop
inc
sbb
sar
jbe
test
int
pop
out
jno
ret
xchg
jecxz
jb
es
cld
mov
jecxz
in
sarl
jl
add
mov
mov
inc
xor
xchg
scas
lock
pop
xchg
mov
insl
insl
jae
and
imul
arpl
push
jmp
fiadds
cmp
fwait
test
mov
js
push
or
jne
sbb
jbe
xchg
fldcw
ret
push
jge
mov
pop
lret
arpl
lret
add
js
jmp
mov
lods
lahf
xchg
je
add
mov
clc
filds
cld
iret
pop
stc
push
into
fwait
lock
pop
push
inc
inc
aaa
sub
out
xor
dec
and
mov
test
xor
cmp
sti
adc
inc
popl
enter
test
rcr
pop
clc
xchg
mov
fldenv
out
pop
loope
inc
aas
mov
cmp
sti
popaw
xchg
rol
cmp
pop
sub
adc
arpl
fstpt
mov
pop
es
rcrb
mov
insb
out
mov
and
cs
or
in
mov
mov
push
sbb
mov
cmp
adc
insb
pop
cmp
int3
mov
out
cmp
inc
fcompp
cs
rorl
cmp
aaa
clc
stc
cmp
fwait
in
xor
or
push
xchg
dec
mov
xchg
hlt
push
mov
sti
add
sbb
scas
mov
sub
and
lret
push
js
sbb
pushf
xchg
lret
jl
sbb
ds
mov
sub
sar
dec
lods
inc
pop
fildll
in
push
addr16
push
xchg
cmp
pop
inc
pop
nop
rcl
and
jmp
mov
lret
scas
cmpsb
nop
subl
ret
inc
inc
mov
aas
mov
fucomip
ja
sub
call
and
imul
push
add
cmpsl
jbe
or
mov
rcrb
xchg
loopne
xchg
mov
add
popa
inc
push
sub
mov
jnp
push
sbb
cmpsb
insb
leave
pop
test
pop
fdivr
inc
cs
mov
ljmp
dec
cmp
cmp
fstps
push
insl
scas
dec
sbb
popf
dec
jmp
add
loopne
aam
iret
pusha
in
push
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
lret
nop
call
dec
sub
pop
dec
sbb
jmp
repz
xor
out
xor
insb
repz
or
jae
arpl
mov
dec
jnp
data16
adc
mov
mov
mov
dec
and
popf
dec
scas
lods
xor
fistpll
ds
add
lods
outsl
in
mov
push
sbb
cmpsb
add
pop
dec
scas
orb
divb
setns
lret
xor
inc
xchg
sbb
mov
repz
xor
lret
push
mov
xchg
pop
xor
adc
inc
test
fldl
fwait
pop
adc
cmp
icebp
push
les
xchg
push
fdiv
nop
xchg
test
cmp
pusha
stos
es
repz
cmp
mov
jbe
mov
data16
push
out
fwait
ss
sub
dec
mov
mov
pop
std
adc
scas
push
dec
test
and
sarl
in
push
pop
jmp
ret
sub
lret
xchg
inc
fldcw
mov
jecxz
sub
call
movsl
inc
push
js
shlb
jo
xchg
cli
adcl
push
stos
inc
xchg
fsts
in
mov
cmp
pop
mov
or
and
fists
xchg
pop
test
das
inc
out
iret
incl
cmp
and
lret
cmpsb
pop
popf
mov
jecxz
xchg
mov
imul
sahf
rorl
gs
jne
jecxz
xor
ljmp
cwtl
lock
and
rcrl
aad
mov
lret
je
xor
je
mov
dec
cltd
inc
mov
int3
rcll
and
inc
cmp
sub
out
lock
andps
and
aaa
inc
sub
mov
mov
mov
movsb
xor
mov
in
push
dec
out
shlb
stc
repnz
jns
xor
jno
repnz
sbb
cmp
jo
aam
inc
or
into
mov
and
pop
scas
imul
jg
mov
push
and
cwtl
ss
add
add
pop
dec
jo
test
lods
stos
movsb
outsl
xor
cmp
push
mov
and
pop
stos
xchg
mov
insl
in
mov
test
push
jmp
lock
cltd
adcb
cmc
pusha
subb
syscall
mov
rolb
dec
stos
test
out
xchg
fidivl
push
addr16
pop
test
cmpsb
lds
xor
js
out
push
jb
aad
sbb
sub
dec
mov
imul
xchg
insb
mov
cmpl
jae
push
push
shrl
imul
stos
outsb
lods
shll
lret
mov
icebp
push
pop
jb
das
ret
push
outsb
pop
mull
sbb
movsb
outsl
and
pop
xor
jp
pop
cmp
loopne
gs
sub
push
ret
cmp
stc
cmp
repnz
popf
xor
pop
sub
mov
into
movsl
mov
mov
sub
jl
adc
cltd
add
pushf
xchg
nop
movsl
pop
adc
push
jp
pushf
inc
bound
mov
rcll
adc
mov
notl
dec
xor
fadd
out
jmp
loopne
xchg
lahf
sub
test
pop
push
jl
mov
popf
dec
cwtl
ss
add
mov
and
xchg
enter
and
test
or
cmpl
mov
adc
jo
popa
cmp
fildll
lahf
mov
push
aam
adc
dec
dec
lods
mov
mov
pushf
fsubrs
sbb
test
sbb
push
pop
cmp
dec
pop
mov
xchg
imul
mov
daa
cs
xchg
lock
xchg
sbb
idivb
ficoms
jge
adc
jmp
nop
dec
arpl
test
cltd
arpl
lfs
les
into
dec
insb
mov
and
push
lock
or
pop
outsb
inc
fwait
ret
outsb
bound
fisttpl
lcall
pop
and
xor
iret
cmp
loop
rcll
bound
int3
cwtl
adc
jo
push
leave
leave
arpl
mov
xor
pop
mov
cltd
mov
movb
xchg
lods
stos
sbb
pop
add
add
fsubl
idivb
push
in
and
cmpsb
inc
add
in
roll
pop
fldt
pop
xchg
add
inc
or
daa
xchg
aam
pop
xchg
dec
mov
push
cltd
add
cmp
out
popa
sub
add
test
mov
push
mov
les
shrb
bound
sub
dec
outsb
enter
push
adc
fisttpl
add
ret
inc
nop
aaa
add
testb
sub
sub
imul
repnz
pop
fmull
xchg
in
cmp
lret
dec
int
ljmp
andb
pop
addr16
push
loop
movsl
ja
iret
aam
outsl
stos
mov
or
cmp
icebp
stos
dec
add
fldt
loope
xchg
sbb
xor
xchg
or
fldt
mov
fstpl
push
jp
add
insb
rcl
icebp
sub
aam
shlb
mov
and
and
pop
es
inc
cmc
and
xchg
fs
fisttpl
movsb
insb
gs
xor
lret
lret
push
in
sbb
hlt
mov
ss
ss
sbb
daa
arpl
jnp
cmpb
adc
scas
xchg
jns
xor
lcall
mov
and
xchg
aaa
cltd
repz
sub
jns
shl
mov
jns
jns
adc
inc
pop
lret
fwait
mov
shrb
outsb
test
push
and
enter
fisubs
movsb
fistps
dec
in
mov
call
out
push
rorb
jge
jecxz
jmp
scas
xorl
xlat
mov
sahf
repz
pop
and
sbb
cs
repz
idiv
lods
ror
ss
dec
adc
in
insb
arpl
pop
sbb
stos
lods
lock
in
pop
stc
ret
lock
xchg
hlt
dec
push
rolb
add
fidivl
cmpsb
fucom
push
cmc
cmp
sub
out
mov
xchg
mov
bound
lcall
adc
incl
lock
dec
mov
xchg
push
pop
xor
dec
adc
push
or
and
push
andb
mov
cmp
push
jno
push
popa
in
cmp
fs
in
sbb
add
stos
jne
in
xchg
les
mov
jb
xchg
rcrb
rcrl
in
scas
jnp
daa
mov
sub
sub
daa
enter
xchg
sub
push
xor
sbb
cmp
add
mov
push
mov
lret
adc
popa
push
xor
in
adc
in
jp
sub
sbb
fstl
movsb
test
push
and
lock
lock
leave
adc
cmp
push
mov
aad
aad
or
imul
cmc
int
outsl
mov
pushl
fadds
mov
das
pop
notb
push
pop
sbb
and
je
push
inc
mov
test
ret
in
ret
adc
lret
mov
jns
mov
int3
out
jg
nop
mov
inc
jg
and
je
stos
cmp
cld
leave
cmp
and
inc
jmp
add
sub
test
scas
push
mov
outsb
scas
ret
mov
test
push
fnstsw
push
shlb
dec
loope
mov
mov
addr16
jo
push
ret
xor
ret
stos
aas
das
lea
inc
fs
mov
pop
push
xor
or
imul
mov
mov
push
imul
and
out
int3
fbstp
cmp
fmuls
add
mov
scas
leave
or
lea
xchg
push
mov
pop
inc
mov
and
int
fsubrp
sub
xchg
popa
into
loope
loop
aas
push
cmpsb
and
fdivl
ss
dec
mov
push
mov
sbb
cmp
sbb
inc
dec
adc
sahf
aad
popa
sub
fidivrl
out
add
sbbl
jne
loope
shl
sub
push
sahf
rorb
fcomip
push
jo
sub
dec
push
divl
inc
or
cli
add
popf
imul
in
xor
jo
mov
cld
ret
arpl
push
test
inc
rorb
mov
fcomip
lock
stos
rolb
push
inc
pop
xor
out
enter
push
shrb
jecxz
loopne
adc
loop
ret
not
push
mov
mov
ss
mov
dec
nop
mov
jno
cmc
mov
call
jns
sub
lahf
sti
mov
adc
cmpsl
push
aam
jnp
fwait
and
cld
test
pop
in
mov
mov
movsl
testl
out
inc
loope
add
es
jg
push
and
dec
clc
ds
addl
sbb
mov
xlat
in
testl
push
pop
in
mov
sbb
push
add
mov
call
mov
mov
loope
inc
aas
adc
add
pushf
pusha
popa
cmp
mov
xchg
cmp
adc
sahf
pusha
int3
jb
stc
pusha
movl
sbb
pop
out
jmp
push
xor
loop
sub
xchg
je
xchg
cmp
adc
out
mov
pop
movsb
mov
ds
call
je
mov
stos
ljmp
std
hlt
push
mov
inc
fs
xchg
push
aad
xchg
in
aad
shlb
lret
addr16
push
jbe
dec
sbb
lret
out
lock
xor
cmp
cld
inc
pop
outsb
adc
leave
daa
pop
in
add
mov
loop
mov
jp
fsub
leave
jo
xchg
adc
test
pop
fdivr
inc
push
sub
inc
daa
emms
fcoml
cmp
mov
enter
pop
jno
imul
aaa
ret
hlt
xchg
fs
aas
dec
xor
pop
inc
pop
dec
outsb
jbe
inc
insb
mov
inc
pop
rorl
xchg
sbb
les
push
arpl
js
fdivrs
and
inc
scas
fdivrs
stos
or
mov
dec
sub
mov
nop
negl
jl
ds
fnstenv
and
adc
ds
xchg
jle
popa
dec
fisubrs
mov
xor
and
arpl
movsb
insb
movsb
or
xabort
lods
out
hlt
ret
mov
fsubrl
xchg
pop
in
pop
rclb
xor
pop
idiv
loop
repz
sub
repz
mov
scas
std
ljmp
lock
repnz
popa
fsubrl
fwait
dec
add
cmp
dec
or
in
adc
arpl
or
shlb
xchg
mov
clc
jae
jb
loope
push
stos
in
loopne
lea
adc
xlat
leave
popl
inc
pop
sbb
inc
add
in
fwait
sbb
xchg
sub
mov
push
movsb
stc
ja
mov
testb
jno
negb
sub
mov
cld
sub
xlat
xchg
adc
in
lock
mov
cmp
stos
sbb
lret
cmc
add
push
jns
fs
ret
pop
xchg
test
lahf
fwait
xchg
sub
push
xorl
fs
adc
adc
nop
shl
fdiv
cmc
pop
push
andps
adc
scas
push
sahf
xchg
fs
nop
ds
popa
inc
inc
in
sbb
cmp
leave
xor
stos
ja
aam
dec
xor
push
or
sbb
inc
adc
jmp
test
pop
cmc
xor
push
sbb
adc
test
je
mov
je
cmp
iret
pop
in
adc
ror
fsts
push
repnz
insl
lds
cli
das
fsts
pop
cmpsb
push
outsb
test
arpl
loope
leave
add
inc
mov
adc
xchg
shl
cvtps2pi
sbb
lcall
bound
xor
bnd
into
cmpsl
cltd
adc
inc
sbb
arpl
xor
sub
or
jne
dec
mov
roll
push
mov
test
sub
cmp
cwtl
bound
jp
adc
add
bound
aas
add
pushl
adc
je
int
cltd
xor
aam
dec
jae
pop
aam
lea
push
int
push
xor
fmull
das
jne
push
mov
bound
enter
push
mov
out
add
lea
dec
arpl
imul
popa
rorb
aad
cmpsl
stos
into
inc
xor
bound
adc
inc
add
dec
loope
test
mov
lea
test
cltd
fcmovnbe
lds
js
enter
out
push
cs
mov
mov
cmc
popf
clc
jp
push
sahf
mov
or
clc
add
push
push
cmp
xor
jb
xlat
cmp
sub
lret
mov
xor
lds
call
inc
mov
mov
dec
cltd
scas
retw
icebp
out
arpl
pushf
jne
popf
mov
cmp
pop
sahf
jg
dec
loopne
fbld
mov
sbb
sub
icebp
test
push
sbb
pop
xor
je
sub
mov
xlat
mov
xchg
adc
jno
movsl
stos
and
mov
adc
imul
sub
or
xchg
dec
mov
fstpt
nop
in
mov
mov
aam
and
dec
fmul
cmp
push
or
dec
xor
inc
dec
mov
cmp
xor
add
dec
xorl
loop
ja
leave
cld
daa
and
sub
hlt
cs
mov
test
hlt
sbb
cmpsl
sahf
sub
pop
and
pushf
enter
arpl
lods
fadds
mov
lock
rorb
jb
imull
cmpsl
pop
mov
or
xor
sub
mov
addr16
daa
cmpl
sbb
outsl
es
xlat
jg
aaa
push
sbbl
xor
imul
lds
xchg
loopne
into
lods
es
pop
push
out
and
xchg
subl
cmp
cmp
mov
jle
jle
sbb
addr16
jbe
push
xor
lea
out
shr
pop
test
and
sub
mov
jb
jge
sahf
push
gs
test
imul
jmp
and
and
lcall
rorl
outsl
movsb
cltd
addl
add
lcall
mov
cmp
aam
push
push
and
mov
pushf
clc
sub
dec
jl
cltd
adc
movsl
shrb
push
mov
repnz
add
repnz
je
sbb
loopne
inc
push
test
add
sub
xchg
jge
jb
adc
sbb
or
sarb
mov
mov
mov
mov
jge
addl
inc
lret
cltd
test
pop
test
ds
lods
jno
mov
repz
or
call
fidivrl
dec
lods
or
addr16
push
cld
jbe
and
addl
outsl
xchg
dec
and
ret
enter
mov
jecxz
push
rorl
out
or
or
stc
movsb
lds
cmpsb
sti
mov
cmp
mov
mov
jl
jnp
and
mov
push
cmp
mov
push
or
add
stc
jns,pt
jb
mov
or
cmp
jl
pop
daa
popf
mov
or
imul
adc
cmpsl
in
lock
dec
jp
mov
dec
sub
add
movsl
mov
pop
dec
inc
or
or
lret
inc
or
or
jnp
mov
cld
inc
adc
mov
cmp
inc
test
mov
dec
pop
and
movsl
xor
lret
out
out
in
pop
std
in
stc
add
xchg
sub
mov
testb
iret
movl
push
cmpsl
bound
xor
js
clc
jns
or
mov
xchg
aad
popl
jge
mov
pop
cmp
sahf
std
inc
add
popl
sbb
lock
adc
pusha
out
fisttpll
xor
jnp
adc
movsl
push
mov
lods
adc
adc
vmptrld
fsubr
nop
xor
sbb
testb
mov
pop
push
arpl
sbb
aad
arpl
lds
fldenv
mov
into
push
stos
jo
lret
fisttpll
das
inc
xchg
mov
outsb
iret
xchg
mov
push
adc
repnz
jne
xor
enter
mov
mov
or
cwtl
rclb
js
js
mov
push
pop
add
enter
sti
stos
jg
cwtl
lret
out
in
scas
lods
mov
daa
in
aad
nopl
push
scas
mov
aaa
jmp
dec
neg
imul
fnstcw
popa
mov
int
cmpsl
xor
lds
sub
xchg
dec
test
pop
push
jl
lret
adc
inc
xor
adc
jbe
mov
jo
push
sbb
add
jns
cwtl
fmuls
stos
cmpsl
pop
push
push
push
jns
ja
mov
jl
cmpsb
mov
sbb
dec
sbb
and
lret
mov
add
jne
mov
ror
mov
sbb
aaa
xchg
roll
test
adc
adcb
add
and
and
pop
jl
add
cmpsl
sbb
lock
jo
xor
je
inc
and
test
cmp
sub
cmp
xchg
in
push
dec
cmp
adc
cs
push
sti
jl
mov
push
push
ja,pt
inc
xor
fs
fidivrl
fistpll
fsubl
pop
jb
jl
and
lret
inc
adc
sbb
insl
repz
sti
ja
mov
mov
sarb
or
add
or
mov
add
jb
push
cmpsl
mov
jne
js
inc
sub
mov
and
pop
nop
jecxz
push
jo
adc
add
xchg
and
sbb
mov
int
sti
outsl
shlb
push
jecxz
mov
xchg
ds
jo
lods
mov
test
dec
cmp
cld
pop
hlt
cltd
cli
and
jno
insb
mov
aas
adc
mov
aam
ret
dec
push
aas
and
pop
fldcw
jno
lahf
sbb
cltd
sbb
mov
sar
std
push
movsl
sbb
imul
fisttpll
es
scas
jne
mov
arpl
fcmovbe
dec
das
push
push
addr16
stc
inc
xchg
push
insl
adcl
or
sbb
sahf
imul
iret
shrl
mov
rcl
outsb
sbb
pop
dec
xchg
dec
inc
jp
pop
int
lret
and
mov
mov
loopne
add
mov
mov
insb
pop
fstpl
ds
pop
jbe
addr16
sub
jb
repnz
fbld
ds
outsb
rolb
sub
andl
fdiv
arpl
pusha
xor
xchg
inc
add
loopne
cmp
push
roll
push
loopne
dec
add
sub
pop
aad
inc
out
cld
pop
mov
lods
insl
jbe
sub
xchg
push
adc
dec
adc
std
pop
daa
ds
setb
sub
cwtl
data16
push
hlt
cltd
insb
jl
sbb
icebp
inc
enter
and
scas
and
cmp
bound
or
or
push
jb
in
arpl
lahf
mov
pop
cmpsb
fiadds
out
pop
push
mov
ficomps
test
mov
sti
and
xor
dec
jmp
xor
test
xor
subb
and
inc
and
mov
cmp
or
inc
fwait
mov
pop
or
cmc
movsb
mov
cmc
outsb
lea
jle
inc
lret
mov
mov
mov
pop
ficoml
cli
mov
lret
jb
sbb
sbb
leave
lods
sub
jg
clc
mov
mov
dec
popa
fwait
pusha
push
outsl
dec
ss
enter
xchg
in
sub
repz
xchg
out
jb
enter
pop
imull
jge
je
add
sahf
divb
adc
jo
mov
inc
mov
imul
push
lods
int3
sub
iret
jp
cwtl
ljmp
push
adc
into
enter
leave
xlat
stc
loop
sbb
and
mov
and
sub
fnstenv
jmp
push
adc
push
lahf
cmp
je
movsl
pushf
ljmp
dec
iret
mov
sbb
cmp
push
or
inc
jle
jns
fcmovnb
movsl
popl
mov
xchg
fs
jecxz
faddl
das
jl
xor
fnstsw
inc
push
sahf
es
jns
push
ss
in
pop
pop
ret
not
popa
push
xor
cmp
dec
mov
insl
out
or
push
dec
iret
mov
mov
or
movsb
xor
scas
push
icebp
aad
enter
ret
xlat
fimuls
mov
push
pop
adc
xchg
sbb
pop
mov
add
cli
stos
inc
ljmp
pop
mov
push
in
clc
stos
dec
cld
fs
adc
mov
pusha
je
mov
jp
pop
out
sub
push
dec
out
adc
in
fmulp
divb
mov
pop
pusha
gs
inc
sbb
push
daa
into
xchg
cmp
add
xor
add
mov
shll
mov
or
aad
adc
mov
lcall
ret
and
shl
ljmp
push
push
push
das
rcll
fsubrl
in
sahf
std
sahf
scas
mull
cli
pop
or
pop
ds
clc
jl
pop
mov
cmp
leave
sti
imul
repnz
jno
mov
mov
rcll
push
rdtsc
and
pop
in
insb
les
inc
push
and
pop
mov
push
mov
es
ljmp
and
and
push
out
arpl
mov
jne
test
pop
inc
addr16
aad
inc
xor
into
pop
xor
incl
pop
add
ret
push
dec
addr16
pop
imul
add
mov
mov
inc
inc
test
sahf
nop
add
test
fwait
gs
in
mov
insl
mov
loope
inc
cmc
dec
roll
xor
xor
jns
shlb
jp
shl
in
lods
out
adcb
ja
adc
xchg
add
jnp
xlat
dec
fildl
in
and
sub
cmpsb
loopne
xor
testl
push
shrd
sti
inc
mov
xchg
push
xor
ds
pop
lods
jecxz
or
test
loope
mov
pusha
add
icebp
stc
out
or
jnp
cmc
xchg
sbb
pushf
jae
fisubrl
int
loope
xchg
arpl
pop
pop
sub
mov
es
lcall
sbb
mov
ficoml
test
das
jno
outsb
enter
or
cli
in
and
and
xor
cwtl
stos
xchg
fimull
rsm
sub
iret
movsb
xchg
adc
inc
call
sar
mov
in
leave
cmp
shrd
stc
adc
scas
jle
pushf
dec
sub
sub
movsb
aas
bound
or
cmp
sub
sbb
sahf
popa
stos
pop
popa
and
or
popa
popa
cld
outsl
push
pop
movsl
movzwl
popa
shl
sub
cmp
xor
daa
cmp
adc
cmp
pop
dec
sub
test
mov
fisubl
insb
mov
fsubp
insl
loope
sbb
sbb
imul
nop
jo
fldt
aam
xchg
addr16
das
cmp
push
sbb
lods
mov
xor
mov
scas
cmp
bnd
xchg
negl
pop
pop
and
out
lds
mov
jns
jecxz
cmpsl
sarl
inc
adc
dec
push
testb
popa
fisubs
movsl
cmp
inc
jl
xlat
inc
xchg
pop
test
lea
pop
fwait
inc
cwtl
xchg
mov
jle
scas
sub
gs
push
push
addr16
mov
jae
imul
or
imul
mov
mov
jmp
pop
leave
sbb
xor
mov
sbb
add
hlt
ljmp
add
sbbl
mov
cs
scas
add
loopne
mov
fldt
aad
xor
jle
fwait
pop
icebp
outsl
push
out
sub
mov
adc
insb
js
add
pop
dec
test
fs
sub
insl
stos
das
sbbl
mov
mov
nop
push
sub
es
outsb
shlb
fwait
insl
add
int3
mov
xchg
popf
sbb
int3
shr
push
repz
sahf
ljmp
sbb
pop
push
push
pop
jbe
je
add
xor
or
ds
push
cmp
sub
fisubrl
sti
sti
aad
mov
mov
stos
push
outsl
ds
pop
add
xor
xor
pop
clc
outsb
pop
in
adcb
push
je
jle
mov
mov
mov
fxch
or
ds
out
pop
mov
push
pop
pop
jns
orl
ds
inc
mov
outsl
imulb
pusha
movsl
loop
repnz
sub
rol
mov
sub
rcr
ds
dec
pop
xchg
xchg
push
insl
push
imul
int
stos
push
adc
add
push
cli
push
aas
loopne
gs
jo
push
dec
mov
into
sub
in
addr16
add
jno
in
pop
mov
xor
jp
imul
mov
pop
loopne
rclb
sub
mov
jbe
fs
lahf
add
cld
inc
cmp
cmp
leave
arpl
add
lods
or
push
out
inc
fimull
insl
xchg
out
xor
push
subb
mov
addr16
mov
adc
mov
cmp
xchg
imul
decl
fistpl
mov
les
cmpsl
in
jb
xor
mov
mov
vmwrite
push
in
cmp
add
jl
pop
out
rorb
pop
sbb
stc
lret
and
jge
ds
cmp
mov
jl
or
mov
and
sbb
xchg
les
ret
int
cmp
subb
inc
pop
sub
repz
push
mov
push
inc
and
dec
inc
sub
mov
jae
sbb
lods
adc
loope
pushf
push
sbbb
cmp
xor
mov
adc
xor
pop
dec
out
mov
lods
add
xchg
loopne
arpl
lock
shl
lods
dec
fsubl
pop
std
int
add
xchg
insb
sbbl
sub
xor
cmp
mov
lret
test
or
repz
cmp
jno
xchg
pop
lods
fucomip
stos
mov
cld
les
jge
pop
bound
cltd
mov
xlat
inc
ljmp
cmp
mov
test
or
les
enter
aam
pop
push
and
aam
sbbb
jle
mov
sub
dec
ss
ds
mov
push
aad
dec
daa
push
pushf
mov
pop
cmp
xchg
jbe
fwait
insl
push
dec
add
jbe
mov
jbe
movsb
add
aad
fildl
loop
cs
arpl
push
arpl
test
xor
cmp
cmpsl
repnz
shrb
movsb
mov
mov
hlt
aas
dec
adc
fcoms
push
and
int3
inc
pop
and
iret
and
and
stc
adc
adc
xchg
or
xchg
pop
insb
shll
push
adc
jle
pop
and
push
dec
adc
outsl
sub
dec
test
mov
insl
push
jmp
lret
arpl
mov
movsl
daa
sahf
testb
cmpsb
adcb
push
cli
sub
in
cmpb
test
ficoms
adc
push
sbb
jg
and
jo
inc
pop
daa
dec
dec
das
add
movsl
jg
repnz
out
dec
fstl
lea
shrb
lods
das
mov
dec
in
dec
movsb
add
jno
aas
and
inc
pop
cmpsl
adc
into
std
xorl
sarl
dec
lret
mov
adc
dec
int3
pop
cmpsl
adc
fsubs
add
jb
shll
pop
addr16
cmp
xor
lods
pop
adc
rcll
js
cmp
sub
jp
adc
cwtl
ret
mov
or
decb
inc
mov
loopne
xchg
decb
xchg
outsb
cmp
loop
imul
dec
sahf
pushf
es
xchg
push
push
out
pop
push
dec
mov
sbb
data16
data16
test
jl
inc
nop
dec
lret
inc
mov
push
rclb
subb
ss
adc
shlb
imul
mov
imul
pop
adc
popf
jno
orb
dec
pop
aas
dec
test
dec
subb
dec
cld
int
pop
sbb
test
cli
dec
pop
jp
scas
cmp
inc
lahf
aaa
mov
lret
mov
roll
xchg
xor
jl
xchg
xchg
lds
repnz
leave
into
pop
arpl
bound
movl
mov
and
jo
xor
outsb
adc
cmp
fiaddl
and
add
fcompl
sub
and
adc
push
mov
jne
mov
xor
mov
les
fdivl
stos
lcall
out
dec
scas
imul
movsb
push
cmp
icebp
or
pop
lahf
lds
shl
insl
hlt
mov
jecxz
rcrb
sub
xchg
push
nop
inc
mov
mov
cmc
and
mov
movsl
mov
cmpl
repz
pop
test
push
movl
mov
das
in
movaps
movsl
xchg
cmpsb
in
es
jnp
cmp
xor
xchg
xchg
mov
adc
add
stc
push
fxch
xchg
xor
shrb
push
xor
add
push
cmp
sub
faddp
add
sbb
pop
fs
push
mov
bound
cs
jb
bound
into
flds
cli
push
xor
inc
cmp
adc
adcb
or
and
leave
in
cmp
xchg
mov
add
test
loopne
je
xchg
mov
icebp
or
movsb
ret
sti
mov
mov
jmp
inc
pop
xchg
and
mov
sbb
adc
push
push
mov
nop
in
popl
push
jbe
mov
icebp
jp
popf
cmp
xor
lods
scas
add
call
xor
sub
add
inc
fstl
ljmp
clc
adc
aaa
std
pop
cltd
icebp
jg
or
sbbl
call
data16
pop
dec
fwait
adc
jae
enter
push
xchg
push
cmp
adc
fnsave
fsubs
pop
hlt
xor
sahf
in
scas
lds
iret
pop
scas
cmp
dec
xor
jl
loope
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
les
test
jp
pop
jp
xchg
xchg
add
mov
mov
out
adcl
ret
je
inc
arpl
idiv
mov
mov
cwtl
pop
je
lods
sub
adc
mov
imul
push
imul
hlt
adc
shl
and
divl
scas
xchg
dec
or
or
jns
jmp
add
add
fwait
xor
fwait
or
test
mov
out
jo
int3
mov
shl
inc
ja
lret
jp
call
inc
mov
push
int
add
lds
in
and
test
inc
test
clc
cmp
dec
in
int3
xchg
sarl
push
xor
inc
mov
nop
inc
cmpl
add
mov
adc
repz
loop
fidivrl
int
rcrb
lea
xchg
mov
dec
aam
outsb
cmpsl
adc
pop
adc
pop
jge
cwtl
sti
sub
cwtl
mov
testb
call
add
xor
sbb
dec
scas
fimuls
push
push
jle
cmpsl
push
fimull
adc
jo
jb
or
fs
sbb
jo
cmp
lock
addr16
sbb
jmp
push
aaa
test
jno
and
cld
lea
sbb
xor
mov
int3
or
pop
xor
outsb
mov
shll
xlat
mov
shll
fcompl
iret
pop
in
std
inc
mov
xchg
and
xchg
mov
mov
and
addr16
test
pop
pop
push
mov
and
adc
mov
stc
scas
fldcw
pop
test
jno
jo
jle
lods
jns
jp
in
pop
push
movsl
xchg
out
test
jg
inc
rclb
xor
xchg
pop
sbb
lret
dec
jge
cwtl
into
adc
jo
jecxz
js
pop
cld
imul
push
jmp
sbb
jge,pt
push
mov
mov
jle
dec
xor
pop
es
push
sbb
lahf
test
scas
add
add
dec
mov
out
repnz
cmp
pop
ljmp
rorb
rol
enter
mov
push
cmpsb
xchg
pushf
mov
jns
or
scas
lcall
pusha
mov
rcrb
jmp
outsb
loopne
dec
mov
mov
insb
pop
push
ret
lock
loop
jg
dec
adc
pusha
xor
mov
jmp
mov
std
mov
idiv
mov
imul
xorb
sbb
push
sub
and
loope
mov
push
sub
insl
icebp
call
rorb
dec
das
push
cld
call
mov
push
movl
cmp
scas
dec
mov
mov
sub
lcall
divl
fcomps
out
lods
cmp
std
aas
stos
fsubp
or
mov
movsl
xlat
sbb
mov
lret
mov
push
int3
mov
mov
mov
push
push
scas
fwait
sbb
out
inc
jne
lahf
out
or
incl
cmc
jne
jbe
and
or
xor
filds
popf
mov
dec
cs
outsb
dec
adc
dec
dec
negl
imul
mov
les
in
inc
pop
push
and
xor
push
lock
jle
cmp
cmp
sub
push
les
push
add
jno
pop
xchg
mov
lods
fnstenv
dec
cs
icebp
pop
pop
int3
and
test
inc
fstl
mov
xchg
int3
mov
cmp
xor
fs
mov
out
dec
mov
add
sub
ss
adc
imull
out
test
xchg
push
mov
add
or
bound
dec
mov
adc
sbb
mov
out
mov
mov
pop
icebp
cmp
shrl
jne
mov
xchg
les
xlat
in
test
cmpsl
rcrl
loope
and
subb
pop
jno
inc
adc
push
jnp
dec
jns
xchg
decb
mov
shl
xor
add
out
hlt
rep
frstor
outsl
int
cld
cld
cmp
mov
sub
lea
cmp
loope
mov
push
pop
mov
cmp
movsl
lahf
popf
inc
fmuls
or
cmp
mov
fsubs
mov
xor
loope
rcrb
pop
pop
mov
push
adc
in
jnp
lret
mov
repnz
inc
pop
add
pop
mov
nop
rcl
loope
lcall
push
mov
loope
dec
repnz
cld
inc
in
insl
push
add
rorb
mov
push
inc
dec
ss
inc
out
mov
ret
cmp
fcoms
xor
stos
pop
push
and
call
mov
mov
jo
aam
push
or
je
mov
push
test
mov
adc
int
cmp
cmp
out
sbb
push
mov
out
cmpb
push
adc
jge
sbb
and
mov
ss
ja
xor
and
pushl
ja
dec
gs
xchg
lret
push
inc
loopne
push
push
lahf
lea
lret
test
cmp
mov
repz
cmp
jmp
and
mov
push
push
cmp
push
iret
adc
loopne
lcall
out
mov
push
jno
mov
xchg
sbb
inc
mov
cmpsb
dec
and
xchg
out
ja
int3
mov
mov
aam
ss
insl
lret
mov
dec
mov
sub
adc
dec
sub
out
loop
mov
xor
xor
lret
mov
outsb
imul
jle
xor
sarb
loopne
cmpsl
test
fdivrs
and
xor
push
in
cmpsl
sbb
or
imul
push
adc
andb
dec
dec
ds
xchg
insb
cmp
pop
fcoml
jmp
in
dec
cld
lods
rclb
cwtl
daa
shll
or
loop
add
addl
push
test
cmp
mov
cmc
pop
imul
icebp
test
cld
mov
fwait
bound
or
sub
and
xor
jne
enter
orb
fistps
andl
outsb
xchg
mov
mov
add
sbb
jns
jmp
cmc
stos
lods
addr16
scas
test
aaa
lret
pusha
bound
mov
mov
add
push
pop
ja
mov
ja
lret
stc
aam
push
jmp
aas
test
pop
xor
inc
aam
add
mov
jb
fwait
mov
lahf
mov
xor
in
aas
inc
pop
test
in
cld
mov
ss
xor
xchg
mov
scas
sahf
sub
repz
adc
xchg
test
add
cmp
jnp
pushf
adc
ds
sbb
xchg
push
out
or
jo
out
jle
sub
mov
jbe
and
sbb
fs
insl
add
enter
and
pop
jmp
in
gs
push
data16
sahf
dec
adc
gs
test
fidivs
idivl
lret
xor
mov
xchg
cmp
fsts
or
and
mov
adc
cmp
inc
pop
dec
imul
sub
and
subl
mov
push
push
push
int3
cmp
xor
push
pop
in
fsubrs
and
or
cwtl
insb
pusha
adc
and
popa
adc
push
inc
ficoml
xchg
fdivr
lret
mov
imul
jmp
mov
aas
pusha
test
mov
call
and
cwtl
jbe
je
repnz
xchg
lcall
inc
rcr
push
xchg
cmp
adc
lret
test
sub
pop
push
dec
test
or
sub
sbb
add
mov
jecxz
or
pop
cmp
test
jmp
dec
mov
ja
lret
bound
fists
addr16
movsb
dec
loop
cmp
daa
cmpl
jns
movsl
push
push
push
stos
pop
fsubrl
lds
and
or
mov
push
shlb
inc
mov
stc
pop
popa
das
cmp
lret
fld1
fdivrs
jnp
inc
pop
daa
icebp
push
clc
add
sbb
mov
push
add
push
xor
cmp
jl
int
mov
push
adc
daa
movsb
out
imul
into
andb
inc
add
mov
push
aas
add
push
mov
dec
les
shr
adc
and
sub
sbb
sub
hlt
dec
pop
push
add
mov
int
cmpsb
add
lahf
mov
and
test
xlat
jp
xchg
fsub
cmp
cmp
add
sub
in
lds
adc
xlat
inc
cmp
adc
rorl
iret
inc
test
movsb
sub
movsb
ret
lret
aam
mov
arpl
loopne
cltd
jge
out
jge
sbb
dec
sti
int
mov
xor
sbb
push
iret
mov
mov
ja
adc
dec
xor
inc
push
repnz
inc
sbb
ljmp
out
mov
cs
cmp
dec
push
sub
int
mov
pop
mov
push
xor
cmp
jecxz
pop
lock
lret
add
dec
and
outsb
out
xchg
daa
outsb
bound
mov
jae
out
sub
clc
cwtl
jle
fisttps
popf
daa
mov
or
shrl
dec
movsl
cmp
or
nop
pop
rep
aam
mov
scas
ret
sub
pusha
jne
xchg
loope
lret
push
sahf
pop
addb
jno
and
fnstenv
mov
sub
pusha
inc
mov
ret
adc
sbb
cmp
mov
pop
outsl
in
push
adc
js
pop
push
fnstenv
cmovbe
adcb
mov
push
ret
and
out
or
mov
fdivrl
jnp
mov
jne
adc
jno
jle
sub
ss
data16
in
mov
aaa
inc
and
dec
dec
sbb
adc
out
cmp
mov
sarl
stos
inc
lock
stc
inc
add
adc
xchg
mov
movsl
in
icebp
xorb
loope
or
mov
icebp
add
rclb
fidivrs
testl
jl
sub
repnz
push
dec
aad
loope
push
mov
lcall
mov
fs
sbb
or
test
movsb
push
je
loopne
and
add
push
movsl
idiv
pop
and
bswap
stos
adc
cmp
cmpsb
testl
fs
sbb
or
cli
and
add
cmc
sub
push
repnz
add
popa
push
add
inc
cmp
daa
mov
les
push
sbb
popl
jp
jo
sbb
mov
push
jle
mov
xchg
int
push
stos
insb
fisubs
fdivl
lret
mov
push
je
pop
push
mov
pop
addr16
adc
leave
les
je
ds
jl
mov
pop
sub
sub
dec
movsl
sbb
xor
adc
fidivrs
push
hlt
ficoml
jg
jle
sbbl
cmpsl
insb
xor
in
in
into
mov
inc
nop
jge
stc
iret
sub
mov
cmpsb
lods
mov
push
out
jp
lods
hlt
mov
bnd
scas
scas
or
push
shl
lret
inc
push
and
in
cld
dec
fadd
scas
outsb
icebp
or
mov
push
sbb
mov
push
jmp
dec
mov
lretw
and
cwtl
cmpsb
inc
test
lcall
xchg
les
test
das
mov
push
push
mov
fcoml
cmp
jl
scas
adc
faddl
and
pop
sub
or
clc
dec
xchg
int3
push
leave
mov
sbbb
sbb
lret
fisubs
pop
fwait
rcll
add
movsb
out
stos
stos
inc
xor
sbb
insb
pop
dec
ret
imull
mov
inc
or
stos
pop
lods
cs
pop
aas
mov
hlt
cwtl
mov
push
mov
and
mov
cmp
pop
arpl
fisubs
mov
lcall
push
cmpsb
pushf
fstpl
jns
movsl
hlt
out
pop
jno
aad
inc
lret
xchg
negl
divb
imul
shlb
mov
rol
adc
ret
cmp
imul
adc
dec
mov
lret
mov
ja
iret
call
cmp
mov
fucom
inc
inc
mov
test
or
sub
add
lods
fs
loopne
jb
ds
cmp
test
insb
or
xchg
inc
dec
ja
jl
mov
dec
pop
icebp
inc
sub
jg
fistpll
lahf
bound
push
xor
cmpb
pop
loope
sbb
cli
dec
das
cmpsl
adcb
mov
mov
jb
and
loope
add
imul
testb
stos
adc
push
aas
in
xor
mov
lcall
push
jno
popf
sahf
incb
pop
stc
and
imull
je
decb
jecxz
int
enter
sbb
inc
dec
inc
aaa
or
inc
int3
cli
lock
cmp
xchg
shlb
mov
daa
sbb
jge
aam
sbbb
adc
jle
ja
mov
dec
nop
cmp
loop
sbb
aad
les
inc
out
aad
das
push
cmp
int3
lods
lret
ret
aaa
mov
lea
cwtl
xchg
aas
bound
pop
push
inc
js
xchg
mov
js
xchg
clc
movsb
or
mov
out
psubb
test
push
lds
or
jg
cmp
jge
inc
ret
jnp
clc
out
cli
cmp
fsubrl
cs
and
popa
cld
fldl
inc
sbb
mov
jecxz
lock
and
or
gs
jmp
mov
movsb
cmp
push
hlt
xor
lock
sbb
outsb
or
jge
cmp
sub
dec
stc
xlat
cmpsl
cmp
cmp
xchg
das
stos
dec
xor
xchg
out
mov
stc
mov
mov
fsubrs
in
cmpsb
cmp
pop
mov
pop
adc
xor
dec
push
jle
daa
push
mov
fstps
test
iret
repz
mov
pusha
xor
mov
jo
in
fiadds
add
imul
sbb
ljmp
hlt
fnstsw
insl
stos
mov
add
push
rcll
add
fwait
clc
mov
jae
push
adcb
push
mov
mull
ja
jle
faddl
xor
xor
cli
fdivs
mov
cmpsb
mov
jge
ret
lock
sahf
or
xchg
jo
repnz
add
pop
mov
lea
dec
stos
daa
repnz
inc
or
fwait
jb
mov
mov
sarl
insb
insb
xchg
scas
mov
mov
lea
test
pop
mov
and
and
cmc
cmpsb
and
out
js
and
sub
mov
outsb
jg
cwtl
xor
sub
jmp
mov
jle
mov
sub
jo
mov
mov
es
movsl
push
add
jnp
and
test
mov
mov
sbb
cltd
xor
dec
stos
dec
dec
dec
mov
push
test
sbb
pop
inc
add
lahf
jl
and
mov
std
lds
mov
pop
in
fisttpll
repz
or
xchg
pusha
movsl
pop
mov
dec
jae
fcomip
or
jno
or
pop
imul
sub
xor
sub
jae
sbb
add
xchg
pop
out
jb
iret
sbb
je
push
js
lea
xchg
mov
outsb
xchg
lcall
jg
or
mov
push
jecxz
addl
mov
adc
loopne
pop
dec
cmp
pop
mov
out
add
lock
popf
sbb
mov
mov
adc
dec
movsb
inc
sahf
call
addr16
mov
jmp
sub
inc
leave
jne
mov
adc
push
movsb
loopne
push
sbbl
outsb
cld
pop
aaa
arpl
lea
pop
add
push
repnz
out
jae
ja
loope
xor
mov
mov
insb
xlat
repz
xor
jnp
icebp
loop
mov
cmpl
cmp
jno
out
pop
out
mov
enter
adc
pop
pop
jle
adc
scas
jns
arpl
imul
mov
lea
les
add
cmp
mov
xor
jp
andl
xor
int
lret
pop
dec
movsl
add
fldcw
jmp
sbb
push
aaa
jecxz
cs
mov
fs
ret
mov
sbb
pop
cli
arpl
sbb
xor
mov
out
lea
jnp
insl
popf
andb
push
adc
test
inc
mulb
cmpsl
sahf
add
push
xchg
lods
mov
xor
sbb
or
ret
sub
xchg
icebp
sarb
test
fidivrl
pop
sbb
cmp
in
cmp
cmp
popf
mov
dec
jge
out
push
nop
jp
lods
xchg
loope
fnstsw
or
pop
insl
add
sbb
sbb
and
xchg
or
clc
scas
xchg
das
jge
int3
les
and
push
movsb
aad
cmc
push
outsb
subb
arpl
jmp
sbb
jno
imulb
rclb
cmp
pop
jg
jne
test
mov
lods
mov
les
test
pop
inc
out
dec
sub
cmp
adc
pop
mov
lahf
faddl
add
xlat
fldcw
mov
movsl
sub
mov
gs
xchg
inc
lds
inc
fcompl
sub
mov
adc
mov
imul
or
shll
es
mov
loope
xchg
mov
pop
in
mov
adc
xor
dec
popa
mov
gs
jb
cmc
sub
out
add
mov
xor
cmp
stc
aam
movsl
shlb
int3
ds
cmpsb
jmp
pop
shll
pushf
pop
dec
std
mov
ficompl
adc
pop
test
inc
xchg
sbb
data16
add
adc
xchg
pop
out
enter
jmp
fisttps
cmp
adc
insb
imul
pop
imul
mov
js
pop
jl
neg
xchg
lret
loope
mov
sbb
insl
movsb
dec
movsl
pop
arpl
test
lret
cwtl
pop
or
dec
or
cmp
pusha
mov
insl
shrl
pop
inc
scas
pop
cli
pushf
jne
inc
cmc
mov
outsl
call
stc
mov
pop
push
das
xchg
ljmp
push
push
cmpb
inc
out
call
add
sub
jo
jge
repnz
jns
iret
mov
adc
sbb
pop
or
cld
fisubs
popf
out
sar
jae
sbb
andl
ffreep
sti
das
stos
xor
frstpm(287
stc
pop
movsb
xor
sahf
push
or
lret
sti
and
and
and
cmp
imul
sub
lods
mov
add
sbb
sbb
xchg
gs
mov
stos
dec
add
cmc
bound
xchg
dec
xchg
push
lock
lods
jae,pt
pusha
adc
mov
je
int3
lcall
jle
andl
xor
imul
call
leave
cmp
in
cmp
push
adc
loopne
ret
mov
rcl
push
stc
shl
jb
lock
sub
pop
in
fs
cmp
dec
mov
adc
or
lcall
mov
arpl
pop
lcall
cmp
outsl
ficomps
xchg
pop
mov
mov
rcl
push
mov
push
xor
inc
and
stos
push
mov
aad
addl
fisubrs
je
je
xchg
xor
imul
lods
in
inc
mov
jmp
sub
daa
jne
popa
inc
ret
jle
xor
and
adc
sub
test
add
popf
iret
loope
dec
push
in
popa
dec
ja
es
int3
das
dec
shlb
xchg
mov
xor
mov
mov
in
jae
movzbl
es
fmull
enter
dec
inc
mov
int3
xchg
ds
jmp
fs
sub
mov
pop
cmpsb
int
jl
dec
loope
ds
mov
lret
push
cwtl
imul
xchg
jmp
stc
addl
add
dec
cmovnp
sarb
dec
jnp
jecxz
push
iret
mov
adc
mov
fnstenv
sbbl
jl
mov
mov
test
jb
and
add
sarb
pop
cmp
popf
xlat
cmp
lock
es
jns
insb
mov
pop
jno
sarl
aas
cmp
jne
dec
sub
fbld
stc
hlt
sbb
push
push
divb
clc
dec
filds
inc
xor
hlt
and
outsl
imul
xor
bound
sbb
scas
sub
mov
dec
mov
repz
subb
xchg
int
ret
and
aam
jmp
fstps
out
mov
sbb
mov
test
mov
adc
loope
test
cmpsb
push
enter
inc
push
movsl
popa
test
cld
ja
popa
fistl
xlat
jns
jle
sahf
adc
or
mov
pop
pop
aas
aas
fldt
jb
or
inc
dec
das
jns
jns
lea
xchg
mov
cmp
sbb
push
and
add
cwtl
sbb
sub
push
js
jge
das
and
push
push
cmc
imul
lods
inc
cmc
call
add
cld
and
ljmp
mov
sbb
mov
xor
xor
je,pn
jmp
movsb
mov
push
push
inc
inc
popa
add
mov
adc
adc
cwtl
sub
mov
jns
jmp
std
sub
lcall
cs
arpl
subl
cs
and
xor
jmp
xchg
xor
mov
xchg
sti
data16
jmp
mov
mov
hlt
sahf
xchg
lods
ret
inc
mov
mov
mov
movsl
nopl
fadds
stos
ljmp
fwait
xor
sbb
and
ret
adc
cltd
xchg
cmovbe
pusha
jle
inc
jecxz
out
insl
test
jb
cwtl
shll
rcrb
xchg
scas
push
loopne
in
clc
jge
push
fwait
pop
mov
incl
shr
movb
dec
add
rolb
mov
cmp
pop
loope
mov
inc
pop
xchg
xor
jmp
sbb
fnstsw
into
shrb
jl
or
and
ret
mov
cltd
xchg
dec
ffree
lock
sti
cmp
into
push
dec
mov
jae
fwait
xchg
out
test
shrb
insb
xor
mov
movsb
inc
xor
ds
enter
inc
jno
pushf
jns
mov
mov
add
mov
ret
pop
sub
push
loop
jecxz
testl
fldt
xor
xchg
push
add
in
inc
testb
mov
sti
cmpb
mov
jg
clc
inc
inc
sub
cmc
pop
mov
fidivs
enter
xchg
shlb
jecxz
mov
xor
rorb
std
repnz
xchg
je
mov
inc
dec
jg
std
adc
movsl
sahf
sahf
clc
dec
and
test
cmpsb
add
cltd
inc
xchg
cmp
ljmp
mov
pop
mov
push
sbb
daa
push
int
pop
mov
cwtl
cmp
push
and
mov
mov
enter
in
pop
scas
jno
fs
stc
mov
test
xchg
mov
movsl
adc
aas
cltd
arpl
push
ja
out
rorb
push
push
mov
push
push
adc
xorl
dec
mov
dec
xchg
or
ja
mov
gs
outsl
loope
pusha
repnz
sbb
test
in
add
inc
out
add
add
sbb
sar
in
shrl
sub
adc
ret
test
sub
and
ffreep
or
jnp
es
test
or
jg
jae
scas
cmp
mov
mov
push
and
int3
xchg
sbb
icebp
in
sub
add
ret
sti
daa
dec
mov
mov
ficoml
movsl
ror
pop
jmp
jne
popf
lcall
and
into
add
fisttpl
sub
pop
and
lea
clc
pusha
or
dec
xchg
andl
cmp
mov
scas
fstpt
dec
popf
push
movsb
pop
cmp
dec
xlat
cmp
xor
or
or
movsb
sbbb
xchg
dec
fisttpl
pop
dec
xor
ss
rorb
push
pop
popa
sub
cmp
jo
enter
aaa
jbe
pop
comiss
push
pop
and
adc
scas
or
xchg
mov
sbb
jl
sub
mov
mov
push
addl
adc
cmc
jle
mov
shrl
decl
mov
popf
cmp
push
dec
aad
fwait
pop
mov
inc
repz
ljmp
pop
mov
sbb
test
jnp
mov
repnz
dec
jg
cmpsb
mov
outsl
xor
and
pusha
mov
out
pop
negl
scas
and
inc
rorl
lcall
mov
ror
xchg
adc
ficoml
hlt
xchg
jo
lret
jl
enter
hlt
sbb
xchg
inc
imul
shll
and
imul
lret
cld
out
loop
push
push
add
add
xor
inc
jge
pusha
cmp
int
cmp
push
mov
push
into
js
pushf
in
push
in
add
cmp
inc
aam
push
hlt
mov
xchg
mov
scas
push
and
dec
jle
push
int3
ret
adc
jl
xchg
sti
inc
loope
inc
shlb
popf
xchg
ja
pop
test
and
vpandn
hlt
add
subl
cmpsb
mov
mov
push
mov
je
cmc
test
inc
es
jne
inc
cld
in
mov
adc
sbb
cmp
addr16
xor
mov
fstpl
sahf
lret
loopne
push
xchg
xchg
repnz
imul
fisubl
sbb
js,pn
aam
push
std
xor
jno
mov
jns
dec
mov
ss
push
lcall
lcall
lods
and
push
mov
mov
or
shlb
rcr
fistpll
aam
pop
push
idivb
shrb
xchg
loop
fisubl
stos
inc
jmp
sbb
xchg
push
pusha
inc
fwait
stos
clc
inc
lret
dec
or
scas
into
dec
jge
stos
out
cmp
iret
xlat
out
aaa
cmc
and
add
repnz
push
into
test
adc
popf
clc
and
jae
sbb
push
cmpsb
scas
addr16
mov
out
test
or
andb
add
mov
lcall
and
push
dec
sbb
gs
or
mov
mov
xlat
aas
lcall
gs
aam
popa
push
xchg
pop
dec
pop
stos
clc
outsl
adc
dec
cltd
xchg
std
iret
neg
insl
inc
add
arpl
sub
xchg
push
jns
jo
mov
lock
or
xchg
ds
cpuid
ret
dec
loop
fistpl
adc
shlb
jg
cld
aam
pop
pushf
sbb
ds
insl
xchg
lock
sbb
push
mov
and
push
push
adc
or
outsb
addr16
push
nop
jno
push
lret
mov
mov
out
xor
xor
lea
xor
jmp
dec
xchg
addr16
inc
sti
xor
push
sahf
les
stc
stos
and
push
add
xchg
mov
fwait
jnp
stc
push
rorb
cmpsl
hlt
es
jns
pusha
xor
js
jbe
scas
test
lret
inc
ja
cmp
inc
iret
xchg
rcrb
fcoml
dec
cmp
mov
fadd
mov
stos
mov
jmp
sub
adc
add
dec
and
xor
into
cmp
fsub
mov
loopne
push
push
pop
push
inc
stos
dec
daa
into
jae
rolb
or
jbe
rep
jl
ljmp
mov
jo
stc
sbbl
jno
add
dec
mov
addr16
icebp
add
add
fsubp
in
inc
jmp
sti
ret
adc
stc
dec
inc
cli
fmuls
sub
mov
pop
test
xchg
lahf
ds
stos
sbb
lret
subl
outsb
imul
cmpsl
cmc
movsb
sahf
adc
mov
dec
jmp
jmp
cmc
sub
and
pop
outsb
push
xor
xchg
je
push
in
or
popa
dec
hlt
ja
xchg
mov
add
pop
pushf
aas
nop
mov
sbb
or
sbb
inc
leave
fildll
fwait
push
fnstsw
sub
push
andl
call
rcrb
out
pushf
and
inc
push
jp
mov
out
test
call
aas
mov
test
jnp
pusha
addr16
xlat
mov
ss
ja
and
mov
cmp
movsl
cmp
insb
push
arpl
sbbb
add
push
arpl
and
mov
into
jmp
cmp
ret
xor
adc
jne
out
cmp
iret
cmc
stc
stos
inc
pop
cmpsl
sarl
pop
sub
cmp
xor
or
repnz
xchg
pusha
mov
cmpsb
mov
pop
dec
fdivs
bound
or
cmpsb
dec
add
shll
enter
fs
gs
dec
mov
pop
test
outsb
fadds
xchg
xor
or
mov
sub
hlt
movsb
sbb
adc
sub
out
push
test
xchg
ss
aam
stos
repz
arpl
dec
outsl
stos
xor
xchg
adc
sbb
lahf
pop
es
jmp
add
and
rol
sbb
push
cmp
mulb
or
fwait
test
test
out
sbbb
in
les
cld
push
inc
push
xchg
push
or
ret
clc
push
negl
fxch
inc
nop
or
in
dec
mov
push
leave
or
pop
scas
sub
incb
dec
cmp
jge
mov
xor
mov
jno
decb
fcoml
and
dec
mov
cmc
sahf
adc
fcomps
jbe
mov
xchg
in
mov
mov
xchg
stos
push
leave
enter
outsb
sub
aaa
mov
inc
in
or
dec
ja
mov
icebp
jne
jmp
loope
pusha
shr
add
pusha
pop
pop
and
mov
call
add
or
cmp
aad
fstps
subb
stc
gs
cmp
xchg
sub
adcl
fwait
nop
test
repz
cli
dec
jg
roll
leave
sub
jae
or
sar
and
cmp
add
cs
out
outsl
add
shlb
ja
inc
add
pop
xor
lret
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
shrl
and
push
jp
enter
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
fsubs
fimull
repz
add
notb
pop
jno
add
rclb
xchg
jmp
mov
stc
je
add
push
pop
out
ja
jo
xchg
adc
add
pop
mov
jo
mov
mov
dec
ljmp
sub
rcll
fsts
cwtl
or
sub
jbe
jecxz
adc
jle
popa
scas
dec
cltd
shll
mov
mov
mov
add
push
out
jl
add
xchg
sub
inc
mov
test
call
mov
adc
pushf
mov
cmpsl
mov
mov
lds
add
testl
push
or
cltd
ds
cmp
daa
shl
dec
dec
js
xor
imul
and
je
jns
xor
xor
cld
shlb
mov
and
and
push
outsl
inc
push
xor
jo
fidivs
adc
and
repnz
jnp
in
sub
mov
add
jmp
arpl
xchg
pop
jg
cmp
push
jl
mov
leave
lret
dec
xchg
and
mov
iret
pop
rolb
mov
and
fcoml
rorb
lds
int3
out
sub
rolb
mov
push
ja
imul
js
leave
xor
inc
cmpsl
les
adc
adc
jns
jae
pop
mov
and
lods
inc
sti
xchg
mov
movsl
pusha
and
notl
sub
sbb
xchg
pop
mov
jmp
mov
cltd
mov
stc
leave
movsl
test
hlt
inc
adc
xlat
shr
push
js
jne
pop
or
ja
xchg
adc
out
mov
push
scas
adc
popf
or
outsl
mov
push
lea
mov
arpl
mov
and
jae
dec
push
pop
dec
add
repnz
pop
icebp
adc
jg
add
unpcklps
push
jecxz
jne
dec
mov
movsb
rcl
mov
mov
scas
in
xchg
lods
js
lret
stos
sub
shrl
sbb
mov
mov
gs
aaa
aad
fldlg2
nop
data16
aaa
mov
xchg
aas
sub
movsb
mov
add
pop
xchg
jb
pop
fnstenv
pop
sub
inc
cmp
in
sub
lods
fsub
jecxz
xchg
in
or
scas
xor
lahf
and
addr16
lock
and
mov
je
mov
pop
sbb
or
sub
in
xor
jmp
pshufw
cs
dec
es
frstor
das
or
ja
mov
negb
mov
cmp
inc
call
sahf
and
je
insl
push
mov
movsl
jle
fnsave
daa
adc
fcoms
nop
repnz
das
repnz
lea
mov
mov
loopne
jbe
jno
cmp
int
adc
pop
xchg
jnp
push
mov
fistps
outsl
cmp
or
cld
ret
rcll
pop
push
adc
xchg
cs
insl
sarl
jbe
adc
cwtl
push
push
cmpsl
sbb
lock
or
mov
jno
cmp
int
push
xchg
add
sub
in
inc
les
test
cli
sbb
mov
mov
es
ds
fdivrl
lds
cltd
dec
daa
jp
inc
inc
das
pop
popf
or
add
test
cmpsl
and
push
xor
lds
inc
jmp
dec
sbb
xchg
push
mov
dec
scas
jge
xlat
xchg
scas
stos
out
inc
inc
xchg
aad
andb
adc
mov
push
mov
inc
cmp
pop
repz
into
mov
loope
inc
push
lods
or
jo
insb
cmc
outsl
push
mov
not
das
xchg
or
push
adc
leave
js
jb
ret
scas
add
jne
xchg
aam
sub
divl
ret
int
cmp
lea
fbstp
or
pop
xchg
push
dec
add
jb
fwait
mov
sbb
aas
push
in
inc
adc
jmp
cli
xor
push
and
popf
sub
or
mov
pop
nop
push
push
shlb
add
pop
mov
rclb
jecxz
stos
or
add
hlt
mov
xchg
das
dec
stos
add
mov
jl
outsl
inc
aas
push
add
enter
add
rclb
pop
lahf
jg
fdivl
flds
add
add
add
mov
and
xchg
or
dec
xchg
fnstcw
loope
imul
mov
into
cli
scas
bound
jne
xchg
xor
push
add
pop
fwait
or
in
mov
stos
jo
inc
outsl
out
jo
or
loop
dec
adcl
mov
adc
fwait
xorb
jecxz
rcll
cmp
loope
outsl
in
mov
push
dec
sbb
cmpl
inc
or
push
test
cmp
adc
jae
cmpb
ret
nop
mov
mov
dec
ds
gs
fcoms
ficoms
subb
xchg
scas
push
cmp
add
cmpsb
cld
or
cmp
cs
nop
ja
mov
adc
mov
popf
and
ljmp
xor
shll
xchg
cmp
scas
or
dec
fisttpll
ss
pop
add
and
jae
cs
popa
loop
fidivs
repz
xor
pushf
scas
ljmp
or
push
lret
ret
shlb
xchg
bound
mov
push
and
jmp
es
pop
nop
clc
subb
sbb
loop
sub
and
xor
add
sub
add
jecxz
adc
mov
outsb
push
imul
push
cmpsb
call
mov
sbb
cli
mov
push
shlb
jge
pop
xor
xchg
pop
cltd
and
daa
ljmp
fs
xor
push
pop
jmp
rcrl
ja
sarb
inc
mov
add
mov
cmpsb
das
mov
pop
lds
push
or
push
xor
adc
mov
jp
movsl
leave
pusha
pop
cltd
cs
or
sub
xchg
testb
inc
mov
xorl
mov
idiv
mov
push
push
jge
push
lahf
out
in
pop
pushf
mov
inc
sbb
mov
iret
and
outsl
arpl
mov
pavgb
jg
pop
mov
dec
jge
cmp
repz
mov
mov
mov
lods
repnz
dec
cmp
daa
xor
xchg
mov
movsb
cli
dec
lock
je
leave
aad
mov
ljmp
mov
fs
ret
cmp
pop
pop
aaa
jo
cmc
or
inc
mov
fdivr
int3
gs
dec
outsl
adc
lods
jg
lahf
popf
subb
push
les
mov
push
inc
loop
push
int3
scas
out
shrb
push
jl
pop
leave
fists
lods
fwait
push
pop
shlb
sbb
repz
test
xchg
xchg
loope
mov
dec
in
add
jbe
and
lcall
popa
scas
inc
push
cmp
jg
fs
clc
pop
push
mov
into
sub
enter
cs
out
pop
icebp
jnp
insl
mov
ja
jns
movsl
pop
add
xchg
lret
leave
inc
jb
adc
sbb
cmp
push
adc
stos
mov
jo
jns
sbb
jb
std
jno
mov
and
imul
add
pop
mov
cwtl
in
cmp
cmp
dec
in
ja
jb
pusha
ss
xchg
mov
xchg
xchg
or
jns
mov
dec
and
ds
push
jl
fldenv
mov
push
dec
rorb
or
jns
lahf
mov
adc
xchg
lcall
push
and
push
shl
sbb
sbb
jg
es
adc
sahf
mov
enter
mov
jae
ret
adc
adc
insl
imul
ja
mov
inc
fiadds
pcmpgtd
push
fs
adc
lea
gs
lret
mov
sub
stos
adc
lods
call
pop
lcall
daa
gs
sbb
or
test
jbe
fdiv
dec
clc
fisttpll
xor
mov
push
ret
sub
hlt
mov
int
pop
fcmovnb
xor
add
pop
sarl
fstl
fstpt
jnp
sub
fisubs
fldt
repnz
shr
add
cld
lds
inc
loope
mov
ss
sarl
mov
add
add
jmp
mov
outsb
fwait
push
scas
sub
out
xor
xchg
jb
popa
mul
add
bound
or
or
fucomip
mov
outsb
fstl
cmp
cmp
aad
lods
or
push
popl
scas
push
xchg
lods
push
mov
add
add
cmp
cmpsb
jg
mov
jae
push
lods
pop
fiadds
add
add
add
xchg
mov
repnz
nop
lahf
xlat
inc
fstps
jge
push
gs
sub
sub
hlt
inc
add
aas
jns
in
or
cmpsl
sbb
inc
test
dec
daa
mov
pushf
jp
mov
loopne
test
cmpb
or
sub
mov
jl
in
xor
jle
mov
cld
ret
lahf
out
stc
push
jno
lock
scas
jbe
sub
aaa
test
xchg
add
add
fs
shl
pop
sub
mov
addr16
dec
in
pop
jge
ds
add
jae
das
aaa
inc
mov
int
cli
fildll
mov
mov
push
mov
out
lea
mov
ds
test
icebp
pop
jo
sahf
push
rol
int3
popf
pop
push
mov
iret
mov
push
push
cli
jecxz
cmp
jns
xor
icebp
ljmp
gs
imulb
cmpsb
out
lea
push
mov
ss
sarb
std
rcrl
mov
ljmp
and
cmpb
mov
outsb
mov
sbb
mov
test
lea
arpl
adc
cmc
outsl
in
aam
and
mov
jnp
js
xor
test
pop
mov
insl
lods
int
hlt
stc
and
stc
or
xchg
or
std
stos
push
add
shl
lret
jae
std
mov
mov
or
cs
sti
test
cs
jge
test
fbstp
lods
iret
lcall
leave
and
outsb
cmp
xor
aad
clc
cmpsl
and
lds
popl
or
aad
mov
jmp
push
je
les
jmp
sbb
cmpb
test
mov
out
jg
in
xor
out
cmp
pop
enter
cmp
mov
jp
enter
add
sub
xchg
repz
mov
adc
jp
leave
inc
fisttpll
cmpsl
mov
popf
sbb
jb
xorb
mov
fbld
test
sbb
pop
and
icebp
inc
jns
into
in
movb
adc
add
push
scas
mov
ss
xor
xchg
inc
jle
enter
push
clc
int3
and
xor
mov
and
mov
dec
movsb
ljmp
hlt
xor
mov
dec
in
fistl
or
jno
xchg
or
aad
sahf
xchg
cmp
insl
mul
cs
loopne
mov
jo
test
subl
or
repnz
test
pushfw
lds
sub
frstor
add
stc
inc
pushl
lret
ds
lret
adc
add
leave
xchg
adc
iret
mulb
inc
pop
call
cmp
and
lods
lods
loope
adc
iret
jecxz
out
ss
mov
mov
or
pop
dec
xor
lea
xor
xchg
mov
mov
subb
hlt
xor
push
xchg
movl
jb
sub
into
mov
and
push
xchg
dec
test
inc
inc
repz
imul
pop
mov
pop
xchg
mov
out
and
test
rclb
mov
stos
push
inc
xchg
cmpsb
imul
lock
fidivs
shr
jg
pop
ds
sbb
mov
lods
push
loop
cmpl
mov
outsl
or
test
addb
mov
pop
pop
movsl
adcl
mov
mov
or
subl
xor
jo
pop
jecxz
andb
dec
lahf
imul
pop
das
jg
jb
popf
out
mov
outsl
push
sahf
sahf
mov
in
pop
outsb
orb
test
inc
les
subb
movsl
add
or
mov
pop
pusha
fdivs
jne
popf
into
jle
stos
xchg
ljmp
insb
je
pushf
ret
sub
lods
push
andl
imul
push
lahf
sti
loopne
sbb
lret
mov
dec
cmp
fnstsw
pop
add
mov
scas
or
adc
popa
cwtl
std
icebp
testl
push
fstp
pop
fwait
in
mov
out
adc
rorb
mov
inc
ror
or
ja
int3
add
add
add
pminsw
idiv
repz
lret
adc
add
add
add
mov
gs
repnz
mov
es
sbb
pop
cmp
mov
shl
enter
aam
push
shl
sar
cmp
les
mov
pop
pop
fwait
ja
lahf
inc
aam
mov
roll
js
push
and
and
cmp
jbe
mov
outsb
imul
inc
mov
mov
clc
stos
add
add
cli
xor
jge
enter
jmp
addr16
je
fisubrs
aad
fcmovnb
jg
xchg
mov
sarl
int3
lret
mov
inc
out
mov
fnsave
inc
fidivrs
mov
inc
loop
in
mov
xchg
cmpxchg8b
int3
xchg
shrb
icebp
jo
and
andnps
jle
mov
sti
xor
mov
insl
scas
sub
add
dec
loopne
cmpsb
aaa
fnsave
popa
insb
push
ja
scas
sahf
mov
add
cmc
movsl
push
jecxz
cmp
or
xor
xchg
push
xchg
lock
adc
or
jmp
les
jbe
pop
mov
fldcw
mov
insl
ret
hlt
popa
mov
mov
data16
add
jns
and
stc
lcall
cmp
dec
xor
cmp
insb
pop
lret
pop
lret
jbe
jle
dec
popl
mov
pop
ds
dec
sub
xchg
and
ds
leave
pop
xchg
outsl
and
mov
pop
or
push
dec
in
fnstsw
mulb
mov
daa
loope
inc
xchg
xlat
test
pop
add
sbb
and
cmpsb
or
in
out
rcrb
repnz
xchg
insl
dec
mov
and
mov
pop
mov
stc
pop
xlat
sbb
in
xor
lret
in
aas
dec
mov
jl
std
push
into
bound
lahf
xchg
in
push
sub
mov
jo
xor
subl
test
dec
add
jb
and
daa
cmp
test
std
adc
rcll
sbb
addb
sbb
fldcw
int
popf
lods
cmp
adc
push
xor
mov
adc
add
dec
jg
add
mov
mov
mov
xor
xor
sub
jge
push
arpl
inc
loop
inc
jl
and
dec
and
xchg
push
pushf
fdivp
roll
and
inc
sub
push
add
pop
mov
and
push
shlb
fisttpl
ds
adc
xchg
mov
ja
test
mov
jmp
fnstsw
data16
pop
and
pop
sub
xchg
sub
dec
push
shlb
lods
inc
xor
fmulp
stos
int3
mov
add
aas
sub
mov
shlb
or
and
xor
cs
fisttps
pop
ret
dec
cmp
mov
mov
lcall
je
int
mov
cs
lea
xchg
sbb
cli
outsl
enter
mov
jae
jo
imul
loopne
xchg
xor
ret
push
ret
cmc
mov
aaa
icebp
sub
dec
sti
sub
cs
arpl
mov
inc
push
repz
sbb
lret
xor
push
movsb
dec
jmp
push
pop
adc
pop
loop
add
push
rcl
mov
imul
nop
jns
sub
and
loopne
ss
cmp
scas
xchg
adc
cmp
pop
mov
in
out
pop
jg
repnz
out
fstps
pop
add
and
fcompl
dec
ret
ja
jno
loop
dec
rcll
rcl
xor
jo
push
mov
push
fs
jecxz
dec
push
push
in
out
pop
xchg
and
add
cmp
imul
xor
jl
sub
dec
in
pop
sahf
popf
mov
out
dec
movsb
sbb
lds
push
inc
cmp
and
push
cli
mov
sub
jnp
lret
je
addb
fmulp
lret
sbb
cmp
add
dec
stos
leave
pop
push
pop
jbe
stos
push
mov
sbb
xor
cwtl
pop
pusha
mov
and
ja
xchg
enter
cmp
push
fcomi
mov
fwait
je
sbb
popa
fcom
or
add
adc
lahf
or
cmpsb
mov
add
outsl
or
or
test
or
popf
or
nop
lret
add
add
add
xchg
lret
jnp
sarl
cmpb
inc
call
add
sub
xor
repnz
lcall
jecxz
cmc
dec
outsb
lods
push
test
inc
arpl
xor
fildl
mov
iret
stos
jnp
cmp
xchg
icebp
shlb
aas
sub
insl
add
mov
rcrb
sub
cmpsl
repz
xchg
push
lret
addr16
popa
mov
adcb
lods
cmp
loope
and
ja
leave
into
into
inc
fnstsw
jp
pop
loop
lods
aaa
stc
jl
movsl
scas
cmp
xor
xchg
push
pusha
loop
inc
mov
jb
adc
cmp
dec
add
fimull
mov
dec
aad
cmpsl
lds
cwtl
sub
test
push
aas
jle
xchg
cwtl
fildll
xor
and
mov
movsl
add
dec
fs
cmp
xchg
enter
jae
xchg
andl
int
push
out
rorl
es
inc
jb
cmp
dec
gs
repz
repz
fnstsw
mov
adc
aas
cwtl
sbb
loopne
xchg
mov
or
xchg
xlat
jl
pushf
push
mov
or
mov
dec
shl
pop
out
cmp
mov
das
xor
cmp
inc
pop
mov
nop
out
adc
movsb
push
jo
jno
mov
fwait
lods
fdivr
mov
stc
arpl
sbb
fldcw
dec
mov
insl
out
mov
mov
xchg
cmp
loope
inc
xor
xlat
insl
sub
ds
and
push
loop
daa
add
and
adc
and
mov
out
out
cmpl
adc
xor
lods
pop
inc
and
aaa
jmp
add
rcl
sti
cmp
fisubl
sti
sahf
sub
cld
in
adc
les
cmpsb
jae
push
lret
xchg
lods
cld
lods
add
jnp
imul
lds
mov
cmp
inc
jb
xor
cmp
inc
adc
lea
sbb
movsb
andl
xor
mov
jno
jns
pop
ljmp
ds
in
in
f2xm1
and
dec
adc
jns
fidivs
hlt
pop
mov
stc
lret
and
popa
out
xor
jle
outsb
add
cmp
das
fs
lahf
lea
sub
in
ror
inc
ret
das
xchg
cmpsb
fistpl
jb
cmp
call
fistpll
into
stc
add
lock
icebp
push
fsubrl
imul
mov
adc
rorl
je
in
ret
insb
ret
data16
rclb
pop
es
xchg
mov
mov
les
pop
add
daa
test
and
jae
ja
ljmp
mov
xor
adc
hlt
testb
lds
mov
ret
or
and
cwtl
enter
push
fidivrs
in
rclb
std
shrb
int3
lods
push
mull
xor
or
dec
and
jge
icebp
jb
in
pop
push
in
das
cmp
or
inc
enter
mov
lahf
in
enter
outsb
inc
push
mov
or
mov
faddl
insl
and
push
ss
push
andl
movsb
ja
push
sbb
cmpsb
and
fdivs
cmp
push
daa
nop
adc
pushf
sub
or
jmp
inc
and
repz
cmp
xchg
jge
jecxz
push
mov
out
mov
sbb
iret
sub
jle
sbb
popf
mov
mov
bound
ds
mov
cmp
add
push
and
jo
das
sbb
dec
jae
inc
sbb
sub
je
push
test
sub
mov
insb
inc
jl
out
push
push
and
aam
xlat
push
loopne
mov
push
test
pop
frndint
dec
and
pop
inc
push
ret
jbe
push
lods
fistpll
mov
outsl
in
jnp
call
jae
xchg
addr16
pop
in
xor
sti
pop
or
lods
jecxz
xor
fbstp
xchg
mov
pop
mov
add
jae
lods
pop
mov
pop
test
mov
cmpsl
xchg
mov
cltd
aas
bnd
out
inc
add
mov
out
scas
adc
dec
and
and
xor
add
and
jecxz
pop
loope
bound
xchg
mov
imul
or
repz
add
add
add
pop
test
adc
testb
in
add
repz
add
add
stos
out
stc
adc
cwtl
sbb
sti
fidivrl
les
sbb
dec
insl
ja
dec
mov
pop
sbb
roll
cli
test
popa
pushf
and
addr16
xor
inc
xor
test
pop
push
movsb
or
sub
xchg
mov
mov
sub
sbb
decb
mov
inc
pop
add
sub
cmp
jae
nop
jmp
neg
adc
shl
jecxz,pt
out
pop
repz
adc
lahf
andb
imul
and
cmp
arpl
jle
outsb
sbb
mov
iret
xchg
xchg
sub
cmp
sti
gs
jecxz
rorb
xchg
aas
mov
push
aam
jg
sub
lret
push
and
push
push
xchg
sar
aaa
ljmp
jmp
jb
mov
fcompl
xor
lret
mov
popa
push
mov
out
out
jo
jno
fisubrs
in
add
js
lods
inc
push
addr16
dec
mov
mov
scas
std
push
cmpsb
jl
jo
pop
or
out
decl
loope
inc
iret
insl
fnstenv
inc
inc
rcpps
cwtl
push
shlb
sub
mov
out
inc
sub
pop
or
cmpb
jecxz
xchg
lods
xchg
mov
and
imul
mov
adc
or
fstl
test
aam
add
clc
pop
test
clc
clc
or
mov
pop
dec
xor
lahf
jnp
cwtl
lcall
ds
repz
push
push
and
cmp
ja
test
push
int
sub
pusha
adc
fs
aad
push
lods
mov
clc
fwait
ds
inc
sbb
jecxz
or
call
mov
loope
pop
cmp
or
ds
sahf
aam
dec
or
stos
pop
sti
fs
ss
repz
push
iret
popf
and
add
jle
mov
pop
and
iret
sbb
add
cmpsl
inc
inc
std
les
jb
aas
sub
hlt
or
in
arpl
dec
push
pop
add
int3
arpl
mov
pop
lods
xor
sahf
mov
push
arpl
je
daa
mov
das
cmp
push
jbe
daa
out
shrl
pop
inc
add
jge
jecxz
dec
push
fstl
sahf
iret
and
xchg
les
cwtl
pop
outsb
fisubrs
mov
push
lea
idiv
mov
sbb
xor
sti
jno
push
and
rcr
into
mov
cmp
and
adc
mov
xchg
xor
js
inc
fimuls
iret
adc
mov
lock
in
xor
loop
testl
hlt
enter
jle
shl
leave
out
add
cmpsl
loopne
ret
call
and
lds
adc
adc
or
rorl
leave
fsubrp
sbbl
add
mov
sahf
sarl
push
pop
mov
xchg
xor
cld
xchg
inc
mov
push
xor
mov
leave
std
cmp
or
mov
popf
or
addr16
stos
adc
or
sbb
dec
push
mov
and
ret
sbb
scas
int3
mov
dec
test
dec
inc
cmp
bnd
int3
jl
inc
jg
mov
js
movsb
sbb
lret
call
ja
sub
clc
mov
mov
out
or
jg
jge
into
and
fcomps
push
push
mov
jbe
inc
sub
bnd
outsb
push
das
xchg
pop
jo
mov
sbb
mov
adc
xor
push
sbb
jae
mov
and
mov
xor
and
clc
mov
daa
lock
pop
scas
fdivr
test
je
lods
std
push
cmpsl
mov
jl
jae
adc
sub
gs
outsl
push
pop
jecxz
inc
mov
xchg
xor
or
add
test
pop
cmp
lret
test
cmpsl
rclb
mov
mov
xor
leave
movb
fwait
xor
mov
adc
pop
pushf
add
ds
add
push
sbb
in
dec
xor
dec
sbb
mov
call
stos
insb
mov
pushf
push
jb
vmovd
jb
pop
leave
mov
mov
xchg
cwtl
pop
frstor
add
add
fisttps
mov
adc
lret
mov
add
add
add
jecxz
inc
ljmp
cmp
sub
lods
jmp
jns
scas
scas
dec
pop
xchg
pop
pop
jg
and
sbb
clc
cmp
xchg
out
cmp
test
sbb
push
and
loopne
lds
cmpl
decb
in
dec
push
pop
insb
addb
jl
push
adc
fwait
push
inc
xor
movsl
lock
pop
sub
mov
repnz
mov
jle
inc
sbb
sub
lret
jecxz
pushf
aas
push
cmp
hlt
scas
stos
scas
pop
ror
leave
nop
adc
lret
stos
sbb
testl
stos
jg
pmaxsw
stos
adc
cmp
loope
in
mov
cmp
sbb
xor
mov
gs
outsl
in
pop
and
pop
nop
mov
loope
stc
sysexit
dec
mov
sahf
call
push
pushf
jge
cmpsb
mov
fwait
sbb
test
pop
ds
pop
pop
ret
xor
xor
in
adc
pusha
add
or
jg
iret
bound
lret
fiaddl
test
adc
pop
es
outsb
mov
xor
iret
scas
cmc
add
popa
leave
mov
aaa
subl
jge
add
adc
mov
mov
mov
xchg
das
sbb
test
jge
or
fwait
popa
push
push
lcall
xchg
or
rol
mov
xor
rep
sub
and
icebp
mov
or
xchg
daa
mov
sub
push
or
push
dec
add
scas
mov
popf
mov
add
sub
xor
push
jns
das
push
xchg
jecxz
pop
and
cmpsb
sbb
aas
lock
clc
es
test
cmp
jl
mov
cmpsb
ror
jp
popf
jo
outsb
scas
in
lret
mov
jne
imull
lea
les
leave
jp
dec
mov
int
imul
push
mov
mov
xchg
or
imul
pop
sbb
lods
xchg
or
mov
and
out
or
mov
sbb
lock
les
dec
dec
xchg
mov
outsb
sbb
push
adc
sub
leave
sub
jae
ds
lret
ret
nop
rcrl
push
mov
lret
add
insl
mov
mov
inc
mov
sahf
out
lret
jl
mov
cmp
jmp
lahf
mov
stos
ja
dec
xchg
or
loopne
orb
fadd
pop
in
jne
loopne
cltd
stos
dec
out
mov
mov
outsl
mov
clc
enter
push
fst
dec
mov
mov
in
sbb
and
movsl
mov
ss
icebp
les
jmp
dec
jg
test
outsb
jbe
mov
mov
and
jg
cmp
popa
ds
xchg
pop
test
ror
add
push
lods
push
lock
push
rolb
adc
jns
incb
jno
pop
pusha
mov
je
sbb
pop
popl
andb
movsb
lds
sbb
push
xor
outsb
bound
add
rcr
out
jae
push
mov
dec
mov
shll
in
test
aas
adc
dec
pop
add
xchg
cmc
push
arpl
out
xor
sub
fsubrp
icebp
lds
inc
cs
xor
lds
lret
ljmp
add
sti
inc
loope
and
cli
sub
out
roll
mov
add
dec
inc
dec
mov
mov
orl
jnp
pop
cmpsl
sbb
subl
pop
xchg
pop
pop
test
out
push
mov
not
icebp
sar
mov
pop
lods
jp
scas
js
out
inc
cli
push
enter
je
ljmp
test
cs
and
lock
sub
xor
pop
mov
xor
cs
dec
fucomp
jno
mov
xor
mov
xchg
mov
rcr
loop
jmp
xor
and
xchg
jns
insb
scas
cmpsb
lea
aas
clc
popa
mov
mov
sub
sub
xchg
lahf
jge
jne
jne
xlat
mov
xor
pushf
ret
sbb
mov
dec
and
addl
add
shll
in
add
add
add
mov
jno
cmc
divl
mov
addr16
testl
add
adc
push
sti
mov
popa
fwait
out
out
addr16
arpl
loopne
pop
sub
add
mov
lea
pop
das
xchg
sbb
sub
out
fdivl
test
add
lret
cwtl
mov
and
or
loopne
leave
mov
or
adc
sbb
lods
and
mov
sbb
and
cs
out
test
dec
je
scas
pop
jbe
xchg
and
dec
mov
dec
repnz
in
lock
fnstenv
ljmp
pand
outsb
les
icebp
movsb
xchg
mov
jo
pop
push
xchg
jecxz
iret
xchg
adc
aas
xorb
pop
arpl
ret
popf
sbb
pop
repnz
fistpll
adc
lahf
sbb
ljmp
mov
xorb
mov
subb
and
dec
cmpsl
inc
dec
xchg
pop
or
fsubrl
clc
repnz
scas
inc
outsl
xchg
fdivr
and
mov
aaa
pop
arpl
aaa
mov
sbb
divl
pushf
xor
sbb
or
sub
xor
pushf
sub
inc
shlb
or
stos
lcall
push
into
or
iret
mov
js
mov
or
push
hlt
xlat
arpl
or
loop
in
stos
ljmp
cmpsl
into
and
hlt
push
mov
mov
pop
xor
testl
jno
xor
xor
or
testb
aam
daa
cmp
sarb
in
cli
and
and
dec
xor
inc
xor
dec
and
mov
mov
sub
mov
mov
lcall
push
loop
popa
lret
mov
mov
mov
sub
out
enter
ds
xchg
mov
out
pop
std
das
mov
mov
cmp
test
inc
std
rcr
fisubl
je
mov
adc
add
movsl
or
lods
add
clc
inc
push
hlt
out
lret
xor
or
pop
je
leave
jl
test
movsl
les
cli
iret
ss
jno
dec
test
mov
sub
pusha
fidivrl
mov
std
lds
aam
or
jb
lock
jne
mull
mov
popf
sbb
xor
mov
inc
addr16
call
dec
into
or
mov
xorl
xorb
add
out
mov
dec
xchg
push
or
scas
loope
rolb
cmp
cmp
andl
jno
bnd
std
cwtl
shll
loopne
jge
inc
jbe
outsl
push
add
lret
clc
test
int3
xchg
mov
or
cwtl
ja
jl
out
stos
mov
bound
sub
scas
call
add
xor
pop
xor
mov
lea
pop
xchg
xor
fcomps
loopne
jl
stos
ficoms
les
or
arpl
mov
movsl
adc
ds
jo
adc
ljmp
push
and
out
popf
imul
test
pop
sbb
mov
daa
out
rcl
hlt
cmp
push
mov
mov
fiadds
repnz
jnp
add
imul
aaa
push
cs
pop
cld
mov
into
rcl
push
jns
jae
fsubrl
jbe
dec
insl
adc
mov
dec
clc
bound
pushf
je
or
out
sbb
lods
repz
cmpb
push
push
add
jl
es
jge
inc
orl
repz
roll
jo
and
cmpsb
pop
loopne
cmp
stos
lret
enter
fsubrs
sub
xchg
leave
jg
pop
loopne
out
jmp
mov
and
jle
push
sbb
mov
inc
ja
dec
cld
xchg
push
cwtl
mov
je
pop
cmp
xchg
adc
cwtl
adc
lret
fidivrl
mov
js
mov
adc
lcall
orl
popf
jb
and
in
push
pop
mov
sub
and
sub
fdivp
pushl
sub
xchg
stc
sub
rcl
push
or
push
sbb
sub
test
into
mov
test
sub
jno
cmp
push
sti
push
fs
xchg
add
mov
inc
or
jge
add
or
pop
mov
add
add
sahf
xchg
inc
fisttps
lahf
int
push
mov
cmp
cld
add
repz
add
dec
lret
add
pop
imul
bsf
lods
leave
aam
cmpsb
adc
mov
iret
int3
mov
insb
or
hlt
mov
mov
sub
addr16
mov
inc
fistps
test
xor
pop
into
adc
cmp
cmpsl
lret
xchg
gs
ja
dec
mov
adc
mov
push
pushf
xor
jp
mov
push
pop
jecxz
fidivrs
fcoml
jne,pt
adc
repnz
pop
pop
jae
mull
add
enter
repz
movsl
ret
mov
jbe
xchg
sub
or
movsb
jns
ficoml
inc
leave
ja
fstl
jae
and
mov
hlt
stos
or
push
iretw
pop
nop
lret
movsl
add
not
xchg
cmpsl
push
sub
sti
jne
mov
mov
jle
bound
dec
stc
mov
jno
idiv
in
cmp
lcall
cmc
mov
ja
insl
pop
shll
xchg
or
sbb
mov
adc
adc
mov
sbb
cmp
pop
pushf
pop
and
sbb
jno
or
subl
xchg
stc
jns
xchg
adcb
sbb
cmp
push
cmpsl
stos
lret
pusha
icebp
aam
and
cmc
dec
nop
and
icebp
jnp
xchg
adc
hlt
add
ret
bound
lods
clc
cmpsl
sbb
add
cld
dec
inc
ljmp
data16
mov
shr
sahf
cmp
mov
and
lods
daa
jmp
inc
ljmp
aas
dec
and
and
mov
int
adc
cmp
mov
mov
sub
shl
xlat
pushf
mov
pop
push
out
sbb
xchg
xor
xor
inc
shrb
or
lea
adc
adc
out
adc
pop
imul
cmp
mov
in
dec
sub
mov
repnz
adc
push
xchg
and
inc
inc
aam
andb
dec
loop
int3
mov
stc
je
dec
pop
jg
sub
jp
cmpsl
cmpsl
dec
sahf
jge
ret
sbb
adc
xor
cltd
push
mov
test
lret
cli
sbb
and
outsb
pop
mov
add
cmpsl
out
popa
add
sbb
push
repz
ret
arpl
xor
loop
xlat
arpl
int
inc
mov
xorl
das
sahf
sub
jns
cmc
insl
test
jmp
cmp
into
jg
jnp
cmp
iret
div
outsb
jl
stc
aam
ret
pop
les
sbb
xchg
add
fwait
xchg
sub
negl
sbb
or
movsb
and
out
inc
rolb
aas
xchg
add
lahf
mov
mov
movsl
icebp
rcrb
xchg
test
loop
jp
pop
mov
das
sbb
lods
imul
dec
xor
and
mov
jg
lcall
and
sahf
xchg
faddl
dec
mov
cmp
aad
divb
push
mov
test
insb
out
xchg
rolb
xor
jl
popf
mov
jns
fwait
imull
call
dec
push
ret
je
mov
andl
pop
int
nop
adc
icebp
subl
out
pusha
fmull
pushf
mov
mov
mov
inc
xor
mov
movsb
dec
jle
mov
cmc
fbld
lret
movsb
mov
mov
adc
cld
pop
dec
js
icebp
ficoms
mov
int
jae
or
dec
gs
xor
or
call
adc
out
pop
pop
lret
sbb
jae
rolb
lods
test
shlb
and
sbb
bound
dec
cltd
adc
into
aad
sub
cmp
packssdw
adc
jg
mov
psubd
sub
mov
pop
xchg
and
xor
push
xor
pop
pop
xchg
jo
lea
mov
or
cmp
shlb
xor
push
ljmp
lahf
lahf
xchg
sub
push
ret
mov
imul
add
xchg
lock
dec
jge
ret
fisttpl
outsb
xchg
mov
in
add
push
std
xor
leave
cltd
mov
es
jle
mov
jnp
add
add
add
call
aas
popa
adc
add
mov
add
add
add
xchg
pusha
les
fs
in
nop
push
jo
sbb
push
mov
jle
or
fs
jge
aam
das
mov
cmp
rorl
jle
or
pushf
frstor
ficoms
pusha
pop
daa
orb
fs
pop
mov
cmpsb
jbe
ds
sub
mov
in
std
imul
mov
cmp
pop
out
xorl
subl
nop
mov
or
clc
xchg
push
sti
sbb
ja
cmpl
xchg
jg
divl
je
in
js
push
mov
aas
int3
dec
int
popa
mov
inc
push
dec
mov
add
test
pop
push
insl
mov
adc
pushf
mov
inc
mov
xchg
fisubl
or
sub
mov
loope
inc
push
or
aaa
jns
in
cwtl
mov
mov
xchg
jae
icebp
mov
mov
cli
sti
xchg
xchg
iret
cltd
jp
test
mov
and
hlt
lret
in
jg
adc
or
lea
movsl
or
or
std
lods
push
movsb
lea
mov
shll
jno
ret
sahf
out
sub
ja
inc
sahf
mov
dec
and
hlt
and
lods
xchg
push
sbb
pop
rorl
pop
xchg
push
arpl
cmp
pop
insb
fldcw
xor
push
cwtl
jp
or
ljmp
int3
test
iret
and
mov
add
movsb
insb
or
pop
push
pop
adc
arpl
cld
jns
nop
jmp
mov
lea
mov
xchg
push
cmpb
cwtl
cmp
and
sbb
xor
loopne
ja
notl
pop
jl
sub
cmpsl
test
nop
popa
sub
nop
subl
das
mov
push
js
and
jmp
pop
das
inc
movsl
push
push
add
insb
dec
jmp
movsl
sti
loop
add
ds
dec
mov
adc
fucomp
push
stc
xor
adcl
cmp
out
and
sub
loopne
inc
dec
test
pusha
xchg
push
xor
into
fcompl
push
dec
icebp
push
xchg
mov
dec
dec
inc
lods
dec
idivb
call
xor
xor
xor
mov
push
leave
out
jbe
lahf
mov
leave
adc
push
pop
sbbl
leave
and
push
sbb
sub
popa
sub
add
mov
in
mov
push
shrl
adc
into
pop
scas
aaa
mov
dec
or
sbb
dec
jb
lock
test
nop
push
inc
sbb
rcr
je
cmpsb
jg
maxps
jae
dec
push
dec
pop
xchg
add
mov
js
push
adc
sbb
add
cmp
stos
outsb
dec
sbb
outsl
cmp
add
pop
dec
fiadds
jnp
mov
ret
hlt
xchg
or
jecxz
movsb
or
or
sti
fs
jecxz
incb
shlb
and
xchg
xchg
sahf
jmp
mov
add
shl
jbe
lods
out
xor
add
mov
stc
adc
jbe
mov
test
jge
loopne
or
sbb
jbe
pop
pushf
scas
out
jmp
outsb
out
or
mov
sti
aas
pop
and
ret
out
movl
popf
jmp
xchg
cli
std
sbb
xchg
dec
adc
iret
popf
hlt
lahf
inc
push
sti
sub
cmp
add
xlat
mov
mov
cmpsl
das
ljmp
pop
ds
pop
mov
ds
cmpsl
xor
jns
xor
call
repnz
ret
imul
sahf
push
cmp
sub
xchg
sbb
ds
movsb
daa
push
push
add
mov
cmp
out
pop
or
iret
lcall
incl
lret
and
bnd
jl
pop
push
in
inc
lcall
movsb
dec
lock
inc
add
std
lock
mov
pop
pop
cmp
push
div
rcl
xlat
lret
and
and
test
sbb
add
stos
mov
cli
rolb
fwait
hlt
xor
vandnpd
sarl
sar
fsubrs
js
cs
fistpl
xchg
and
pop
pop
inc
add
cwtl
pop
in
sub
les
push
mov
push
sub
lods
jecxz
dec
mov
adc
cmpsb
jl
cmp
mov
sub
add
add
add
fidivrs
int
fucomi
push
testl
rcrl
das
push
mov
push
inc
call
mov
decb
inc
int3
push
pop
jno
prefetchwt1
or
jmp
test
push
insb
push
int
inc
sbb
cmpsb
pcmpeqd
adc
daa
negl
jecxz
test
inc
scas
imul
repnz
stos
add
jecxz
repnz
js
mov
xlat
jecxz
clc
jg
into
sub
cmp
iret
add
mov
out
jp
cltd
int
jp
inc
jl
dec
jo
lods
pop
cmp
fs
cli
repnz
loope
sarl
test
xchg
icebp
pop
jge
aaa
fdivl
out
and
mov
int3
and
dec
test
shlb
sbb
mov
idivl
pushf
mov
adc
movsl
sbb
jge
cmpsl
push
jg
movsb
mov
dec
test
and
gs
out
scas
xlat
xchg
lcall
mov
push
mov
push
stos
mov
cmp
fwait
xor
cmpsb
mov
jo
fldcw
mov
mov
jbe
ds
adc
fcmovu
sub
and
or
hlt
imul
cmc
scas
xchg
inc
aaa
scas
push
xor
pop
int3
sbb
mull
xlat
cmp
cmp
lret
mov
pop
fwait
rcrl
adc
mov
push
aad
jge
jle
push
mov
rol
mov
pop
lcall
aaa
loope
lea
push
inc
xchg
fisubl
and
in
mov
xchg
jo
add
andl
cli
mov
sub
add
lret
sti
push
xchg
lods
xor
fisubrs
or
xlat
int
add
mov
xchg
adc
jnp
xlat
jl
xlat
mov
insl
mov
xchg
fcomps
loop
fdivrl
insl
mov
push
inc
call
xor
and
ret
adc
fdivs
pushf
dec
pop
in
sub
rolb
lahf
movsl
push
sbb
addr16
lret
push
xor
push
mov
jp
ret
push
adc
ret
or
xchg
sub
pop
fstl
add
jg
clc
shl
fnstsw
test
imul
inc
in
or
pop
fiaddl
jbe
pop
pop
adc
dec
notl
adc
sbb
inc
in
or
aam
iret
add
shll
aaa
mov
xor
in
jecxz
in
adc
test
xchg
arpl
push
shll
xor
add
fdivp
xor
pushf
dec
fnstsw
inc
add
aam
cwtl
xor
pusha
je
or
fdivl
inc
push
push
xlat
or
jmp
ret
cld
pop
cmp
inc
mov
push
aam
push
and
pop
pop
lret
add
push
lcall
int
sbb
inc
jne
push
addb
mov
push
mov
adc
out
push
outsl
pop
scas
pop
pop
ret
into
dec
fbld
jnp
jle
jbe
or
test
pop
cli
cli
mov
fcomp
addb
ret
packssdw
xor
les
xor
arpl
mov
lock
sti
inc
mov
xchg
push
cmc
arpl
in
dec
pavgw
lds
mov
testb
push
adcl
mov
popf
xor
ds
ret
sbb
loope
mov
adcb
xchg
dec
movsb
mov
add
jnp
dec
mov
das
and
leave
sbb
jecxz
mov
repz
jmp
imul
or
movsb
popf
out
shll
cwtl
jbe
pop
push
pop
mov
ret
sub
sbb
or
inc
xchg
stos
dec
ret
add
adc
inc
inc
lret
inc
outsl
fcompl
in
jae
cwtl
cwtl
pop
aaa
inc
mov
jle
adc
fsubl
push
xchg
fcoml
clc
sub
mov
orb
ss
jge
push
in
mov
test
mov
out
arpl
sub
mov
fdivrs
outsb
icebp
mov
pop
xor
les
lods
sub
int
mov
mov
ficoms
call
divl
dec
mov
cmp
cmpsl
sub
enter
jne
sbb
sahf
loopne
or
push
push
in
sub
dec
cs
int3
jecxz
or
stos
cmp
inc
lods
cli
popa
movsl
jmp
add
add
add
std
mov
push
jg
mov
ljmp
add
xchg
icebp
outsb
shr
shrb
aam
push
cs
jno
call
jge
iret
rcll
int3
lea
dec
imul
daa
pusha
jno
cmp
pop
xor
sbb
rcrb
add
mov
subb
out
jmp
sbb
cltd
std
add
inc
mov
call
jle
out
jmp
imul
mov
std
ret
adc
mov
xor
popa
dec
test
mov
mov
in
sarl
jb
mov
aad
inc
adc
incb
mov
or
scas
mov
xchg
out
pop
sbb
xchg
test
or
push
loopne
in
test
insb
sub
mov
or
int
or
mov
inc
popa
sub
shll
outsb
mov
aam
inc
aad
repz
inc
cltd
pop
out
inc
popf
jb
push
jns,pn
daa
icebp
jae
mov
push
cmp
mov
xchg
pop
std
dec
lret
js
push
inc
subl
popa
dec
jb
mov
mov
lret
sub
inc
dec
lods
sbb
mov
aaa
icebp
dec
dec
sti
or
sti
dec
popa
test
xchg
lret
ljmp
and
push
mov
xor
jns
pop
loopne
into
add
xlat
lahf
or
loope
sbb
fidivrs
xchg
push
cmp
xor
pusha
and
pop
es
lcall
inc
dec
mov
movsb
mov
cmc
xlat
cmp
and
scas
mov
lods
filds
scas
sbb
xor
mov
fdivr
dec
jo
adc
dec
xor
sub
cltd
mov
lahf
notl
cmpsb
outsb
leave
push
xchg
ficoml
iret
xor
test
and
or
xor
inc
andb
lock
add
and
rorb
pusha
pop
outsl
inc
lret
insb
ret
loop
je
cld
outsl
mov
int3
int
and
or
aam
mov
loope
std
mov
add
or
mov
sub
xor
pop
sbb
ret
cli
jl
xor
jne
nop
sub
mov
jecxz
ja
xor
cs
jle
std
das
push
aam
dec
push
inc
sub
pop
cmp
adc
pusha
add
xchg
mov
lcall
fnsetpm(287
push
xorb
jns
mov
pop
fbstp
leave
xchg
add
cmp
sahf
mov
jmp
inc
fs
clc
es
xchg
jo
mov
xchg
mov
cli
push
sarl
shl
gs
call
xor
sbb
and
sub
fidivrl
cwtl
jle
js
sahf
xchg
xor
or
movsb
or
inc
sbb
stc
and
jmp
scas
loope
mov
jbe
je
push
mov
xchg
adc
xchg
je
xlat
sahf
cmp
xchg
mov
insb
push
in
mov
jle
ffree
mov
push
in
jae
mov
js
pop
cmc
cvttps2pi
xor
insb
xchg
cmp
xchg
aas
jnp
push
xor
cmpsb
pushf
inc
movsb
ljmp
push
mov
subb
bound
lea
test
sbb
lea
jmp
enter
jbe
mov
pop
cld
pop
and
inc
xchg
shrb
xor
dec
mov
or
sbb
les
shrl
inc
lret
pop
in
push
and
ja
orb
sbb
cmp
ret
dec
fcomps
es
push
int
popf
xor
out
bound
cmp
mov
sbb
or
mov
ds
mov
out
dec
stos
xor
lea
jp
push
out
xor
and
and
cmp
cmp
movsb
imul
ss
aad
and
pandn
andb
fsub
or
inc
jnp
sbb
push
jle
jo
loop
xor
imul
jb
push
das
ss
add
mov
rol
mov
and
pop
xchg
in
mov
cmp
jmp
into
int3
push
call
push
rcrb
std
fldenv
pop
push
hlt
popf
jle
cmc
xor
and
push
sub
lahf
push
inc
sub
ljmp
jle
mov
jle
xchg
addr16
mov
push
mov
pop
int3
in
stos
or
lret
mov
push
lods
loopne
mov
loope
shlb
add
add
lret
in
out
dec
add
enter
add
repz
add
jno
inc
cmp
and
inc
shrb
xchg
cs
mov
or
adc
fldl
dec
jecxz
mov
sbb
loop
mov
hlt
call
mov
cmpsb
jbe
push
sub
in
xor
cmp
inc
js
sbb
push
cmp
cmpsl
data16
mov
dec
insb
dec
cs
jg
push
mov
xor
push
mov
sub
sub
dec
fimull
gs
dec
ljmp
xorb
cmp
jnp
pop
rclb
push
inc
aaa
cltd
jmp
jmp
mov
pop
inc
repnz
stos
je
xchg
mov
sub
movsb
adc
into
pcmpgtb
insl
dec
pop
or
xlat
add
sub
xor
jp
push
daa
and
push
cli
pusha
lcallw
mov
int
aaa
dec
popf
jg
sub
inc
sbb
arpl
mov
jle
or
sbb
sub
leave
jp
pop
fidivs
adc
adcb
jl
jle
pop
push
cmc
xchg
nop
mov
movsb
and
xchg
cwtl
fsubrs
or
repnz
in
push
xchg
jne
pop
je
sbb
sahf
mov
push
out
popl
lock
mov
shl
aad
jl
outsl
test
push
orl
cmp
add
insb
divb
inc
icebp
mov
inc
loope
jae
jecxz
cmpsb
push
dec
stos
ficoms
cmp
mov
dec
cmp
lods
ljmp
lea
lret
cmp
xor
push
adc
loopne
jns
jns
jp
inc
cld
ret
bnd
cld
das
je
adc
pop
int
sub
fldcw
popf
mov
lods
adc
mov
mov
loopne
jmp
and
xchg
inc
push
sub
and
out
lahf
inc
cmp
cmp
mov
or
xchg
cmpsb
fwait
mov
mov
push
mov
add
orw
push
repnz
push
negl
dec
cmp
mov
fiadds
mov
push
jnp
fmul
mov
fsubs
jmp
pop
and
insb
lea
mov
and
or
mov
test
sbb
inc
mov
loop
dec
xchg
inc
jl
jmp
cmp
cmpsl
sar
mov
leave
lock
dec
push
arpl
push
popf
sti
in
xchg
adc
xchg
imul
cmp
popa
pop
insl
xor
aas
outsl
scas
push
mov
jmp
mov
inc
test
ljmpw
mov
setp
mov
and
pop
rolb
in
outsl
cmp
dec
popa
sub
mov
jns
loopne
cmp
aas
pop
lea
inc
cld
push
cmp
fldcw
idivb
lea
loopne
mov
shlb
jne
dec
add
cmp
mov
inc
out
fstpl
adc
aam
adc
sbb
mov
mov
jno
mov
push
out
out
add
add
enter
flds
pop
mov
pop
add
addr16
xor
push
pop
pushf
movsb
jae
sbb
sbbl
pop
dec
dec
xchg
call
data16
addr16
jo
icebp
adc
imul
cmp
push
ljmp
das
push
cli
int
xor
mov
xor
mov
das
sahf
sub
repz
into
jae
into
imul
out
orl
xchg
sbb
xor
lret
push
xchg
movsl
cmc
mov
xchg
cwtl
fistpll
add
push
rorl
push
std
add
sbb
je
mov
addl
gs
xchg
and
inc
das
sub
push
js
out
repz
mov
shr
mov
mov
xor
cmpsl
or
iret
xor
xchg
lods
iret
inc
mov
and
mov
cmp
out
push
lods
icebp
outsb
popa
mov
mov
stc
out
cmp
adc
and
das
jecxz
inc
mov
and
pop
stc
adc
lret
and
add
in
clc
jl
test
stos
jle
mov
and
and
sbb
sub
add
pop
shl
shlb
aas
gs
xorps
insb
xchg
pop
outsl
call
adc
test
in
jo
mov
inc
mov
dec
les
popa
add
add
add
je
std
mov
sarb
add
repz
add
sahf
je
push
mov
insb
outsb
pop
xor
add
cltd
jb
sbb
iret
cmc
mov
repnz
cld
or
inc
adc
push
out
jl
pushf
jbe
pop
xor
popf
dec
movsl
dec
sub
xor
and
adc
adc
fwait
stc
inc
imul
mov
mov
shr
fwait
dec
aas
aam
push
mov
xor
pop
rcl
xor
cmp
dec
adc
sub
jne
push
call
sub
push
aad
in
inc
mov
popf
les
or
lcall
test
je
pop
in
cmp
and
pop
std
cmpl
shll
jo
int
or
shr
pop
or
mov
add
lods
xchg
das
mov
movsl
fwait
adc
fistpl
stos
stc
lock
fidivs
movsl
mov
mov
cmp
fdivrs
jge
and
add
xor
imul
pop
push
aaa
add
popa
movsl
cmp
out
inc
movsb
cmp
dec
jae
mov
cmp
movsl
inc
sarl
mov
pusha
js
mov
sbb
rep
fadd
xlat
and
push
add
sahf
mov
mov
push
fistps
cmp
sbb
mov
ja
dec
rcrb
call
sbb
popf
fwait
dec
xchg
jo
sub
mov
or
add
jns
and
jp
xchg
bound
xor
xor
xchg
loop
int
movsb
mov
stos
arpl
mov
hlt
jns
add
push
lcall
das
push
popl
imul
daa
pusha
lahf
mov
jb
ret
out
mov
fwait
pop
cmp
popa
fwait
or
mov
nop
fwait
cwtl
adc
lahf
data16
fbstp
testb
mov
cmp
test
or
fldcw
cwtl
push
fidivrl
bound
dec
push
cmp
adc
loopne
jo
add
arpl
inc
out
outsb
pop
data16
out
aas
adc
inc
dec
push
sub
iret
push
sahf
jne
push
pop
imul
es
cmc
dec
mov
pop
or
mov
popa
test
sub
js
mov
shll
push
pop
jge
dec
pusha
cmp
sbb
jo
inc
ja
repz
mov
jg
push
pop
loop
pop
jmp
pop
push
test
daa
xchg
mov
movb
and
ret
or
mov
lret
push
fmul
dec
or
xchg
stc
xchg
loope
fwait
mov
cmpsb
xchg
aas
sarb
pop
into
fldcw
cli
popl
insb
xchg
add
jl
mov
jge
mov
sub
or
test
dec
repz
mov
sub
aam
adc
mov
cmp
lahf
add
std
and
imul
dec
sbb
dec
cmp
jno
push
adc
add
gs
addr16
cmp
cmpb
dec
nop
movsl
adc
jl
inc
divl
insl
or
test
xchg
aaa
cs
lahf
mov
insb
pushf
xor
mov
stos
movsb
out
sbb
cmp
inc
test
mov
test
xor
daa
xchg
jns
mov
inc
jle
inc
iret
je
add
fsubl
lahf
cmp
push
shrl
sti
popa
aam
imul
pusha
lods
inc
mov
fstps
jnp
icebp
xlat
mov
out
rcl
add
pop
fwait
jnp
insb
adc
fcomps
adc
pop
jge
mov
add
mov
or
or
fninit
push
rcr
test
sub
mov
ljmp
cmpsl
inc
test
jp
stos
cmc
cs
xor
mov
insl
loopne
jbe
mov
fsts
xchg
cmpsl
int
clc
dec
lcall
ret
jne
std
divl
daa
inc
sub
pushf
sub
jl
push
xor
mov
adc
hlt
dec
or
imul
push
xchg
test
push
ja
out
dec
insb
into
aaa
cmp
inc
sub
jae
xor
dec
dec
nop
push
pop
mov
test
stos
jno
xor
mov
in
push
and
cmp
and
inc
cwtl
adc
mov
mov
pop
ficoms
cwtl
rcll
sbb
fucomp
movsl
lret
or
lds
sub
pop
cmp
pop
pusha
aaa
pop
push
jbe
or
int
orb
mulb
or
add
add
add
in
in
or
and
add
add
add
int
jbe
lret
popf
dec
pop
hlt
inc
out
notl
leave
sahf
mov
dec
es
jne
cmpsb
cmp
ret
cmpsb
dec
dec
jp
xchg
out
adc
jge
roll
cli
add
out
in
int
popa
jp
mov
in
addb
cmp
ljmp
lods
lahf
adc
push
divb
dec
cmpsb
cmp
cmp
test
movsb
jp
dec
dec
push
in
loope
les
inc
cmp
push
outsb
mov
sbb
mov
mov
pop
jmp
jo
hlt
xor
xchg
or
lock
fcoms
arpl
adc
shl
jmp
psubusb
fs
dec
mov
subb
pop
and
test
fidivrs
popa
xchg
ud0
pop
leave
xchg
lret
pop
mov
or
ja
inc
push
push
ljmp
jmp
imulb
push
jl
push
neg
lea
ja
std
mov
jo
mov
jecxz
and
adc
iret
push
loopne
pop
ret
mov
jne
mov
fcoml
pop
pop
mov
daa
mov
xor
insl
inc
test
push
push
mov
jle
mov
scas
push
cmp
add
in
dec
jnp
ficoms
sub
xchg
push
or
rclb
movb
aaa
cmp
repz
sub
sub
insb
jl
push
loope
xchg
into
jp
lock
xor
arpl
mov
inc
imul
mov
imul
into
repnz
cmc
in
xlat
int3
push
jno
jge
lcall
rorl
jmp
cwtl
insl
enter
lods
push
mov
data16
mov
push
jb
in
sarl
pusha
test
push
and
cmp
test
fisubs
jnp
xlat
sbb
out
jg
mov
sbb
stc
jb
jg
pusha
insb
dec
mov
sbb
jo
or
mov
test
stos
xchg
and
loopne
sti
andl
lret
mov
out
rol
cwtl
lcall
cmpsl
lcall
xchg
or
mulb
aam
icebp
add
sub
push
popf
out
jge
js
adc
cmpsb
loop
lahf
inc
sar
push
push
add
xchg
mov
pop
add
ds
push
mov
bound
xchg
sbb
lret
leave
pop
lods
repz
sbb
and
inc
cs
cwtl
into
mov
fucomp
neg
mov
and
adc
or
sbb
sub
lret
dec
nop
mov
stc
xorb
mov
cmp
xchg
add
sub
outsl
mov
cld
outsl
cmp
dec
rolb
or
into
jae
cltd
mov
lret
and
or
xchg
fwait
push
dec
stos
rcll
inc
imul
xchg
xor
mov
fisubrl
ret
push
nop
push
push
inc
push
mov
andl
pop
sub
or
pop
lcall
mov
xlat
sbb
mov
int3
or
aaa
mov
addr16
mov
inc
icebp
mov
push
loope
ja
cmp
movsb
pop
mov
sub
adc
sahf
ss
fstl
add
leave
pop
in
test
and
jae
push
daa
jne
iret
jp
popf
jnp
cmp
or
lcall
popa
inc
mov
lea
les
jae
inc
subl
aad
add
imul
ja
mov
outsl
push
rcl
aas
hlt
xchg
or
insl
lret
xor
pushf
int3
push
xchg
lret
cmp
push
sub
loop
or
stos
cmpl
fildl
leave
cmp
out
clc
cmpsb
mov
dec
lods
sub
cmp
mov
or
les
lock
or
mov
jle
add
sub
pop
sbb
sar
in
xchg
mov
pushf
out
aaa
adc
std
inc
sarb
js
jp
das
add
fldenv
mov
dec
push
add
adc
mov
pop
ja
cmp
hlt
imul
inc
sbb
dec
repz
insb
push
pop
xchg
int3
popl
das
mov
xor
mov
jbe
lock
xlat
stc
scas
movsb
insb
xchg
sub
lods
lds
lock
mov
add
pop
pop
xlat
dec
mov
js
dec
jecxz
inc
xor
mov
cs
dec
sub
pop
jnp
add
sub
push
pop
pop
push
dec
clc
push
dec
dec
pop
add
es
or
lcall
iret
mov
and
stos
pop
lea
add
add
add
push
push
add
lods
test
gs
cwtl
and
add
add
scas
cmpl
outsl
adc
mov
lds
and
mov
add
adc
imul
sbb
ljmp
daa
mov
cmp
and
into
mov
or
stos
cltd
test
jns
in
cmp
cmp
xchg
sahf
js
imul
cmc
shlb
cli
pop
xchg
add
jns
aaa
xchg
pop
dec
scas
or
mov
ja
xor
lret
fsubs
xor
gs
sub
mov
or
push
push
subl
ficompl
int
cmp
xlat
cmp
in
inc
sbb
dec
and
push
lret
ljmp
sbb
sub
jno
and
stc
jge
jle
pop
lahf
mov
lods
dec
xchg
adc
je
in
push
std
pop
mov
jg
inc
xor
jb,pt
cmp
push
imul
cmc
xchg
enter
fldcw
mov
mov
mov
subb
jb
xchg
add
jl
dec
and
cmpsl
pop
sub
out
sub
enter
jl
pop
xlat
mov
std
adcb
sbb
fsubs
mov
cmp
jmp
sub
imul
test
data16
int3
mov
ds
cltd
mov
cmp
mov
ret
or
dec
sbb
or
or
ret
xchg
push
scas
cmc
jge
adc
mov
pop
cmpsl
cmp
add
or
test
rclb
add
cmp
insl
and
in
push
test
or
pop
lock
rol
lgs
pusha
cmpb
fsts
cmpsb
jge
xchg
xor
xor
aaa
dec
test
sub
jl
xchg
mov
pop
and
mov
or
adc
movsb
ret
outsl
lret
mov
sub
cmpsl
mov
mov
inc
xchg
popf
mov
popf
je
push
jg,pt
loopne
mov
dec
jno
lcall
cmc
add
add
jp
in
mov
add
or
pusha
pop
mov
pushf
aaa
mov
fldl
jns
inc
out
data16
xchg
adc
mov
or
bnd
into
add
jp
sti
pop
cmp
sahf
aad
cmc
aas
mov
mov
movsb
gs
sub
or
jo
push
mov
imul
je
push
sarb
ss
add
aaa
dec
bound
cs
ss
inc
mov
xor
add
inc
std
and
cs
mov
mov
push
fstl
ret
and
lcall
adc
loop
push
xchg
xchg
jno
push
and
sti
xor
lcall
hlt
xchg
push
push
adc
addr16
popa
aam
loopne
inc
pop
pop
in
lea
ja
jns
cltd
pop
cmp
mov
ds
aas
imul
jge
lds
dec
test
cmp
rcl
push
mov
sub
lods
lock
xor
jmp
shll
add
mov
enter
decl
adc
mov
dec
mov
es
lods
mov
lods
pop
clc
jne
adc
gs
fwait
xor
cmp
pop
pop
lahf
rcl
mov
mov
sub
outsl
outsb
std
roll
andl
es
ret
fistpl
sub
pop
ret
push
mov
or
mov
ds
or
inc
push
outsb
shlb
cmpsl
dec
xchg
aas
mov
fmuls
fwait
xorb
and
scas
inc
xchg
dec
mov
aad
mov
jg
mov
push
out
iret
sub
mov
sti
adc
add
je
ja
or
ja
cltd
mov
out
push
daa
aad
mov
add
scas
xor
fimuls
push
addl
xchg
into
scas
jb
fwait
xor
xchg
mov
sub
cltd
dec
mov
mov
loop
jae
sahf
jmp
and
cs
test
cli
xchg
ret
data16
cli
cld
jle
shll
arpl
ljmp
mov
jnp
fidivl
pop
loopne
ds
fcoms
and
daa
enter
test
sub
pop
mov
popf
adc
jae
fnstenv
or
xchg
lret
insl
pop
imul
add
je
jne
pop
outsl
out
aaa
jae
in
adc
repz
add
pop
fisubrl
inc
xor
adc
aaa
lock
rorl
jge,pn
push
inc
repnz
popf
test
pop
mov
int
xchg
jge
xor
test
sahf
lds
add
ret
and
dec
out
dec
inc
adc
loop
mov
add
add
mov
mov
out
lock
adc
sbb
pop
inc
les
ljmp
andb
cmp
and
mov
lock
mov
jo
xchg
jb
dec
adc
sbbb
lcall
rcl
popa
mov
sbb
ret
lahf
icebp
ret
inc
push
or
add
pop
pop
scas
push
sbb
mov
jnp
and
js
into
notb
push
cmp
rorb
pop
lock
adc
and
xchg
fwait
push
test
xor
inc
cld
or
mov
xor
into
out
call
inc
in
and
dec
lods
mov
data16
pop
mov
subb
daa
and
lock
cmpsb
dec
xchg
dec
jns
inc
cmp
inc
xchg
push
push
sbb
je
nop
mov
xor
cmp
stos
jb
pop
adc
inc
jo
loop
test
pop
dec
xchg
scas
lea
mov
fcomi
fstps
ja
mov
mov
repz
lcall
jns
subl
sub
loop
pop
xchg
movsl
in
dec
add
push
lods
jmp
mov
push
rorl
pop
add
ds
cmp
arpl
data16
mov
lahf
popa
cltd
fsub
adc
mov
cwtl
lea
inc
mov
inc
loope
mov
fsubs
inc
jo
lret
int3
int3
inc
dec
inc
shll
xor
push
push
scas
sahf
sub
stos
cmc
lock
push
addl
rcl
inc
mov
das
dec
fnsave
fwait
xor
xorb
xchg
fwait
jns
incl
cmp
jp
add
sub
icebp
mov
loope
jle
cld
sbb
test
das
adc
cmp
fwait
cmp
pushf
jns
mov
loopne
jle
push
imulb
push
pop
int
cmp
mov
cmp
ss
jae
repz
rcrl
insb
mov
push
incb
jbe
movb
hlt
decb
dec
dec
lret
ret
push
stc
pop
icebp
mov
sbb
into
lahf
push
xchg
clc
adc
jne
sub
xor
add
xchg
call
xor
mov
xchg
or
mov
stc
push
fwait
add
jns,pt
adc
incl
mov
mov
sub
gs
jo
loop
mov
iret
push
and
sbb
lcall
dec
dec
pop
dec
daa
jp
lret
addr16
rolb
loop
out
int
lds
lcall
pop
sub
mov
cmp
fdivl
mov
hlt
in
ret
pushf
loope
sub
sahf
inc
add
fwait
in
notl
call
aad
test
add
movsl
inc
cmp
push
mov
repz
sahf
sbb
lret
ja
call
mov
insb
lcall
sub
xchg
popa
add
aas
adc
scas
dec
adc
frstor
scas
jb
outsl
movsb
cmpsb
sahf
test
in
cwtl
fdivs
xchg
push
mov
xchg
pop
cmp
jns
movsb
lret
mov
and
mov
or
ret
push
bound
mov
mov
stc
shll
loop
lds
js
das
sarl
mov
dec
xor
pop
and
lods
pop
lds
add
and
lods
pop
adc
rcrb
in
rorl
jg
or
out
or
adc
adc
int
xlat
subl
jmp
cmpl
adc
mov
and
xchg
and
fidivs
stos
dec
xchg
daa
lods
sub
push
imul
jne
mov
push
pop
cs
incl
sbb
sbb
dec
int
fdivr
jae
cmp
incb
and
push
mov
pushf
push
or
or
rorb
lcall
mov
mov
sub
add
add
dec
dec
ss
std
iret
cmp
cld
test
add
repz
add
movsb
push
fistpll
xor
pop
jae
mov
lcall
add
and
jle
sti
push
inc
mov
sub
add
enter
xchg
mov
add
fwait
lret
adc
sbb
insl
das
xchg
sub
dec
add
in
mov
mov
mov
jmp
fidivs
mov
hlt
clc
jmp
jp
sbb
leave
pushf
int3
xchg
sub
mov
pop
sub
mov
std
pop
mov
pop
pop
scas
push
and
pop
push
push
push
dec
add
sbb
scas
inc
cli
mov
frstor
push
loopne
jo
jnp
add
jl
mov
cld
jmp
addr16
leave
pop
sbb
icebp
ss
lods
int
lahf
lds
and
cmp
loop
push
push
dec
mov
shr
or
pop
or
dec
cmp
out
xchg
push
push
je
mov
xorl
pop
add
mov
sahf
or
push
push
addr16
and
push
cmp
cmc
std
push
enter
cmp
out
jns
push
mov
xchg
mov
bnd
enter
xchg
pop
push
push
out
das
mov
bound
icebp
mov
lods
scas
pop
mov
push
movsl
pop
push
sarb
and
scas
add
push
add
into
pop
aam
loope
push
stos
xor
xchg
jmp
js
fisttps
test
and
aad
lcall
jmp
cwtl
mov
mov
out
imul
inc
push
les
xor
or
mov
mov
dec
and
fucomip
ljmp
mov
movsl
addr16
xchg
or
mov
inc
jmp
addr16
cmp
pusha
test
push
mov
clc
out
and
pop
mov
aaa
loop
mov
jp
cmc
mov
notl
sahf
sbb
pop
mov
sub
sbb
sub
xchg
hlt
inc
xchg
notl
jle
push
pusha
mov
stos
xchg
ret
mov
lret
jne
or
push
push
mov
adcl
cwtl
fcoml
test
gs
and
sbb
dec
mov
xchg
les
inc
cmpsb
sti
cmp
cmc
imul
loopne
or
fcompl
pop
mov
mov
sbb
pop
inc
flds
xlat
mov
repz
xor
jg
push
mov
idiv
mov
or
xor
pushf
data16
pushf
sbb
lret
cli
sbb
pop
adc
or
ja
test
and
xchg
rorb
es
xchg
sbb
data16
sub
jmp
loop
mov
add
rcll
mov
sub
pushf
xchg
and
mov
insb
dec
inc
in
sahf
xchg
imul
jmp
inc
mov
das
shll
jmp
adc
or
fisttpl
pop
test
adc
divl
jp
lds
test
cmp
inc
cld
arpl
icebp
in
inc
imul
xor
jmp
push
test
popa
and
bound
enter
das
jmp
pusha
push
jge
sbb
ja
lret
or
cpuid
popf
mov
movsl
into
roll
pop
test
loope
push
add
xor
xlat
xor
aam
sbb
divl
frstor
sbb
cwtl
and
jle
mov
mov
bnd
push
mov
arpl
fisubrl
jns
push
ret
nop
cmpsl
daa
cmpsb
fs
pop
arpl
mov
xchg
test
popf
dec
pop
pop
imul
sub
inc
sub
icebp
pusha
push
xchg
pop
pushf
dec
out
ret
std
testl
xor
popa
mov
out
fadds
mov
inc
int3
push
add
stc
add
mov
inc
mov
pcmpgtw
adc
cs
fwait
popa
movsl
jle
jo
xchg
adcb
pop
or
aam
nop
and
aam
enter
xchg
rcll
aaa
sbb
insl
int3
fisttpl
fbstp
mov
or
jo
pop
inc
jecxz
dec
sarb
popf
sbb
loop
daa
mov
andl
icebp
xor
data16
aaa
jl
sub
mov
mov
scas
outsl
stc
jl
into
mov
pop
imull
add
add
add
es
mov
jmp
fdivrp
sub
add
add
add
gs
xchg
insb
imul
lret
fisubl
out
lock
popa
lock
fs
and
pop
scas
pop
pushf
mov
push
mov
clc
inc
xchg
push
pop
div
mov
add
jno
fcoms
xchg
adc
ds
ds
cltd
fld
push
jae
jecxz
das
subb
add
sbb
sbb
pop
mov
jp
sbb
sbb
jmp
shlb
xor
add
es
popf
pop
into
popa
notb
ror
cmp
fbstp
push
xchg
rclb
sbb
lret
outsb
fisttpll
cmp
mov
cld
sub
lcall
or
pop
xchg
push
in
lcall
jle
test
xchg
jmp
push
shr
enter
jmp
imul
repz
jge
lret
and
clc
adc
mov
dec
xchg
dec
jecxz
pop
pop
cmc
lods
in
cs
test
mov
sub
popl
push
pop
stos
xchg
jns
ret
fadd
xchg
pop
cmp
push
lahf
shlb
add
ja
push
addb
je
pop
or
shlb
fdivs
ret
lret
rcrl
sbb
mov
aam
push
icebp
or
sub
mov
push
imul
mov
pop
xor
stc
sub
into
daa
icebp
jns
jecxz
pop
test
int3
notl
sub
aaa
mov
addr16
sarl
inc
pop
dec
dec
adc
pop
dec
xlat
insl
xor
out
fs
cltd
add
pushf
aas
xchg
push
cmpl
lds
mov
fs
pop
rcll
pop
fsubr
mov
mov
test
xchg
scas
add
fidivrl
popa
call
fcmovbe
fpatan
sbb
sbb
mov
cmc
leave
cs
dec
insl
push
pop
cmpsl
push
mov
sub
aaa
dec
loope
mov
aas
les
xor
xor
adc
mov
xchg
xchg
push
test
and
adc
test
out
mov
xchg
cld
test
pushf
sub
sub
sarb
das
sbb
loopne
test
and
enter
adc
pusha
hlt
push
xchg
mov
sbb
ret
mov
div
je
pop
push
rolb
sub
jmp
aam
xor
aam
mov
test
cmpsb
mov
jbe
insb
push
push
xchg
fsubl
cs
sub
xchg
cmp
xchg
cmp
dec
push
mov
mov
shlb
push
cmp
push
loop
sub
pop
sub
loop
sarl
xchg
xor
cmpsl
push
adc
mov
das
sub
dec
xchg
fwait
adc
adc
in
mov
pop
cmp
lret
adc
rol
out
lods
dec
mov
and
cs
icebp
adc
pop
mov
popa
in
out
cmpsb
push
push
xor
stos
movsb
and
jle
jmp
xchg
pop
pop
sahf
jno
push
pop
sbb
test
dec
cmc
lcall
outsl
hlt
mov
pop
jno
jl
lods
adc
xchg
pop
inc
jmp
mov
cmp
loope
stos
outsl
sbb
jo
cmp
in
jnp
fidivrl
fs
adc
test
inc
and
out
lahf
dec
xchg
xorb
add
and
ret
jle
sar
cld
movsl
fimull
imul
cmp
mov
lea
lahf
mov
in
inc
ds
lods
xchg
push
jge
push
ljmp
insb
fidivrl
shrb
mov
inc
notl
mov
icebp
push
mov
arpl
pop
xchg
or
pop
lret
xor
sub
pushf
jmp
inc
cs
jno
outsl
repz
push
sub
in
outsb
push
jnp
notb
jb
into
int
shl
xchg
jno
mov
mov
inc
cwtl
clc
jns
outsl
or
daa
dec
mov
dec
pop
xchg
iret
rclb
push
add
pop
jne
cld
cld
mov
mov
and
xor
and
dec
mov
mov
inc
fidivl
test
jb
addr16
adc
inc
xchg
pop
and
aas
mov
push
push
add
std
loopne
inc
and
jecxz
test
in
mov
cltd
stos
or
add
mov
fcmovbe
fbld
lahf
test
ret
adc
loopne
cmp
sbb
outsl
adc
subl
push
aam
add
add
add
aaa
sti
addr16
out
fidivs
and
sub
repz
add
movsb
push
jle
mov
sbb
add
jno
popa
cltd
sbb
cltd
jmp
mov
xor
dec
push
ret
pop
fs
shr
cmc
les
and
push
ret
inc
xchg
ret
insb
push
pop
cmp
mov
fiadds
clc
mov
and
mov
pop
movsl
or
ret
cmp
popf
js
stc
push
mov
imul
rolb
cli
dec
cmpsl
sbb
fstp
jae
xchg
jmp
inc
dec
jl
jecxz
nop
mov
movsb
jnp
fcoms
and
mov
or
iret
pop
in
or
jae
jle
mov
inc
ret
jle
jmp
push
ljmp
jae
push
fdivs
rorl
nop
aas
dec
mov
xchg
push
repz
sarl
xor
unpckhps
int
jne
pusha
xchg
pop
adc
pop
mov
inc
dec
adc
leave
incl
cltd
dec
jmp
sarl
cmpsb
or
in
inc
push
pop
shll
cwtl
mov
call
xor
jecxz
sub
sub
mov
stos
aaa
lods
pop
or
lcall
push
jae
mov
std
mov
mov
sub
and
pop
inc
cmp
xlat
lcall
adc
mov
ja
int3
rorb
xchg
dec
pop
ret
cmpsb
fnstsw
pop
lcall
dec
push
adc
je
jl
test
aas
ret
dec
cmp
loopne
adc
pushf
mov
adc
cltd
mov
ret
cmpsl
rorb
sub
jmp
jge
ljmp
mov
loopne
mov
pop
cs
mov
push
pop
ss
fbstp
pop
sub
ss
pslld
clc
or
jae
scas
arpl
sahf
push
or
test
jae
jge
pop
push
dec
repz
adc
repnz
cmp
mov
rcrl
inc
mov
les
push
fwait
pop
icebp
mov
pop
in
fildll
push
loopne
mulb
repnz
jecxz
iret
loopne
cmc
in
out
sub
rcl
add
ds
cmp
push
les
xor
outsb
sub
and
sub
jl
outsl
insl
cmp
push
lds
packssdw
inc
frndint
inc
xor
call
pop
insl
add
addr16
cmp
dec
int
xchg
push
push
xchg
bound
daa
or
aas
jmp
xchg
jecxz
mov
insl
sub
test
sahf
stos
std
push
jb
push
or
pop
insl
daa
or
mov
mov
mov
mov
jge
into
dec
pop
mov
xchg
ja
xchg
fimull
jg
pop
out
insl
fdivrs
pop
daa
push
and
jge
xor
mov
testb
popf
push
mov
push
out
xor
mov
dec
sti
fidivs
pusha
scas
test
test
pop
testb
dec
mov
sbb
ds
or
ret
ret
idiv
dec
sbbl
cmpl
sbb
call
push
and
icebp
std
stc
ficomps
insl
jne
in
push
lods
xorb
int3
fisubl
test
shl
loop
pop
push
jo
mov
out
stos
mov
int3
mov
sub
daa
xor
lods
mov
dec
test
mov
call
dec
rcll
mov
jae
jp
cmp
fs
ljmp
mov
push
pop
shlb
push
xchg
xchg
in
aam
jbe
out
adcw
add
in
push
push
xor
movsl
ret
into
int
leave
jg
cmp
xchg
ud2
push
psadbw
or
inc
add
mov
sub
out
cwtl
push
lcall
loop
adc
push
cmp
pop
mov
push
pop
xlat
imul
pop
test
std
sub
arpl
mov
insb
cmp
ret
je
sub
movsl
jae
stos
xchg
fnstsw
js
pop
pop
je
sbb
pusha
push
pop
leave
adc
inc
cmc
pop
mov
ja
jb
pop
movsl
stc
pop
mov
inc
mov
xor
sub
lret
mov
xor
pop
sbb
incl
je
loop
js
mov
pop
imul
mov
pop
aaa
lcall
orb
cmp
jb
fs
mov
loopne
mov
pop
xor
daa
jecxz
dec
fiaddl
add
add
out
sbb
repz
jne
enter
add
add
add
icebp
and
jg
scas
pop
imul
push
push
pop
cmpsl
popf
dec
lret
xchg
lret
xchg
jmp
sub
push
jbe
xchg
shl
add
outsb
out
out
lds
insl
adc
mov
jae
out
push
shlb
xor
sub
lock
lods
jl
pop
ret
cwtl
push
push
cmp
loop
rol
shlb
xchg
push
mov
or
pop
pop
or
mov
lcall
addr16
xchg
push
pop
push
pop
hlt
pop
lods
add
xlat
out
mov
pop
sub
lds
or
jg
push
leave
mov
add
pop
andb
xchg
adc
and
fcmovnbe
sahf
inc
jmp
pusha
xchg
ror
sbb
xor
pop
pop
insl
push
add
in
mov
jae
rcll
add
xchg
sbb
sub
setns
pop
ss
sub
or
xor
mov
in
cmc
data16
pop
icebp
or
lret
cmp
and
test
or
loopne
xchg
inc
lock
orb
mov
lcall
into
jbe
xor
push
rcrb
test
jo
mov
inc
or
test
push
push
fs
sarl
add
jmp
inc
aam
pop
data16
jnp
or
hlt
cmpsl
sbb
or
iret
mov
cli
add
out
inc
mov
mov
cltd
nop
sbb
fmull
test
fdiv
fistpl
dec
push
sbb
mov
shrb
sbb
jb
mov
pusha
and
xor
mov
mov
xlat
xorb
aad
fadds
cmp
adc
insb
sahf
rsqrtps
stos
std
mov
push
or
mov
pop
mov
outsl
inc
pop
data16
cmp
cld
scas
sbb
jp
cmpsl
mov
push
adc
jb
insl
ljmp
adc
adc
xor
shrl
imul
lret
in
jmp
imul
insl
out
mov
scas
push
movsb
mov
stos
inc
lods
jmp
jge
push
std
daa
fldl
jecxz
mov
sbb
cmp
sbb
mov
sbb
push
xor
lods
movsl
or
lods
and
inc
dec
aas
jg
sub
pop
and
fsts
sub
and
sahf
cltd
popa
les
cmc
mov
mov
cmpb
adc
adc
push
inc
test
sti
mov
cli
jb
ss
in
jge
enter
orl
daa
roll
sahf
jb
mov
and
enter
mov
adc
fistps
daa
pusha
pop
mov
and
cld
pusha
jns
pop
loop
lock
out
outsl
add
movsb
sub
popf
jb
das
sahf
pusha
mov
fistpll
cmp
cltd
ret
mov
int3
mov
mov
or
int
das
movlps
fwait
mov
and
sbb
push
std
fninit
sbb
and
and
imul
cmpsb
pusha
rorb
sbb
in
or
sarb
pop
pop
test
fs
mov
test
hlt
sub
dec
add
cld
enter
sub
pop
icebp
subl
rolb
dec
add
stos
fucom
inc
lret
xor
push
push
js
das
rcrb
pop
pop
cmp
js
and
fs
sub
xchg
add
into
adc
mov
cs
mov
mov
add
pop
xorb
out
mov
divb
pop
int
pop
es
or
fwait
xor
sahf
and
push
sarl
es
mov
aas
mov
insl
hlt
aaa
cmp
sbb
jle
mov
add
pop
pushf
scas
dec
add
mov
fmulp
or
arpl
ret
pop
xchg
sub
lret
push
add
xlat
fs
dec
mov
mov
adc
pop
ret
shrl
mov
in
jg
and
iret
add
mov
cmpsb
fisttpll
shlb
lret
xchg
fcompl
movsb
push
stos
mov
sbb
mov
xor
jmp
mov
push
out
or
mov
sbb
fsub
aam
push
sarb
jmp
jno
lcall
lds
jae
inc
lds
ss
and
jmp
stos
insb
dec
cmpsl
bswap
femms
imul
addr16
int
and
out
stos
fwait
stc
rclb
int
add
add
add
mov
pusha
daa
push
outsl
push
add
add
insl
rorb
mov
cmp
push
fs
cmpsl
dec
faddl
mov
inc
lea
add
sub
add
movsl
ss
inc
cwtl
enter
cmc
cmp
stos
div
int3
mov
lret
cmp
pop
loopne
add
cmp
fnstsw
lods
repz
es
std
clc
ljmp
sti
enter
aam
stc
outsl
cld
mov
outsb
fcompl
or
insb
or
jbe
in
scas
add
inc
add
adc
popf
mov
xchg
pop
fldenv
mov
fldl
mov
aam
aaa
int
add
enter
int
popf
mov
xchg
sbb
and
mov
cld
rolb
mov
stos
nop
data16
lods
out
fimull
rorl
gs
sbb
cmpsb
cld
mov
ljmp
or
jge
test
fmull
or
ljmp
aaa
pop
lcall
pop
stos
sub
dec
daa
mov
xchg
pop
setg
in
inc
imul
push
out
xchg
sub
pop
pop
popa
pop
or
jle
daa
mov
in
inc
hlt
inc
sbb
xor
push
loopne
std
sbb
leave
dec
inc
sahf
pop
dec
mov
pop
mov
loope
xor
loopne
in
into
cli
xor
pop
cs
iret
int
shlb
push
add
jo
iret
push
bound
mov
cmp
jg
cmp
xchg
insl
cli
popf
jle
popl
mov
popl
xchg
in
sub
or
and
frstor
jp
jbe
inc
movsb
repnz
jmp
jmp
repnz
fcoms
out
aad
mulb
xchg
jo
xor
xlat
cli
jp
push
lods
sub
xor
fidivl
jle
inc
adc
test
or
add
push
fs
fimuls
cltd
lods
lret
mov
data16
sub
jo
fcomps
cmp
in
rol
adc
mov
inc
in
mov
mov
adcb
cmp
fisubrl
das
cmpsb
mov
pop
sub
stos
call
xchg
outsl
dec
xor
xchg
pop
or
repz
mov
mov
mov
dec
aad
xchg
insb
inc
add
leave
loope
loope
stos
cmp
ja
pop
xchg
and
fs
rorl
in
lret
inc
cmp
jp
addl
push
and
mov
mov
mov
das
aad
mov
mov
mov
mov
mov
clc
mov
or
cwtl
int3
xchg
mov
mov
insb
fs
or
inc
or
xchg
xlat
fcmovnu
xor
add
pop
or
jne
cmp
pop
adc
and
jnp
dec
daa
into
xor
jmp
cmp
jecxz
xchg
pop
pop
mov
cmp
jl
inc
sti
into
inc
push
icebp
aas
cmova
inc
pop
cmp
mov
sahf
fcompl
mov
inc
movsl
sbb
lcall
test
shrb
xor
ret
bound
mov
xchg
dec
clc
andb
lcall
rorl
bnd
and
push
sbb
pushf
jl
sub
out
pop
dec
sub
mov
sbb
stos
call
popa
mov
inc
push
rorl
call
shll
clc
add
sub
mov
movsl
mov
xlat
ljmp
mov
shrl
push
in
push
addb
sahf
sbb
fadds
and
iret
test
pop
sahf
jmp
repz
push
mov
mov
cmp
sub
add
add
add
sbb
lock
xor
movsl
testb
mov
cmp
cmp
and
push
mov
dec
loopne
xor
cmp
aam
lcall
fidivl
lock
js
stos
mov
cmp
es
orl
hlt
xor
mov
xor
dec
in
sub
lods
std
in
shll
negl
in
jmp
imulb
dec
xchg
int
pop
out
cld
jl
sub
mov
inc
dec
jbe
jb
loope
or
rcrl
iret
shrb
int
jae
fiadds
outsl
js
sahf
out
xor
xorl
add
add
in
pop
dec
negl
mov
adc
mov
inc
add
repz
add
cmp
dec
fisubs
rol
dec
dec
and
test
gs
and
sub
inc
mov
aad
add
es
sbb
es
clc
fbld
xchg
fiadds
sbb
scas
jne
cmp
mov
dec
loope
nop
aam
mov
fcomi
pop
push
adc
pop
cmp
pop
test
jmp
pop
lds
add
xor
ljmp
in
and
fwait
and
or
hlt
pop
and
call
adc
adc
push
mov
inc
sbb
pop
xchg
arpl
push
mov
push
mov
int3
andb
dec
enter
fbld
sbb
inc
jp
jmp
mov
aaa
insb
cmpsb
popf
cmp
xchg
mov
mov
lcall
sub
out
or
fimuls
aam
jb
adc
pop
inc
ret
test
and
aad
mov
jp
data16
xor
mov
jp
arpl
ds
stos
xchg
adc
push
jmp
push
ja
xchg
inc
mov
ffreep
dec
xchg
test
leave
xor
jmp
gs
mov
scas
cmpsb
mov
or
test
cmpb
mov
cld
gs
pop
xor
jg
shl
lcall
imull
xchg
lds
sbbb
out
shll
fdivrs
bound
and
and
leave
repz
push
movsl
push
cmpsl
mov
addr16
cmp
enter
notl
aaa
and
mov
in
in
mov
movsb
mov
xchg
adcl
mov
cmp
ds
and
cli
xlat
and
add
gs
test
add
cs
cmp
adc
push
in
loope
mov
jmp
vpunpcklbw
mov
in
or
popw
sbb
sarl
mov
stc
push
cmp
mov
adc
xlat
sub
in
loop
or
sbb
ret
in
mov
mov
lods
cmp
dec
scas
daa
stos
stos
fldt
mov
fiaddl
pop
pushf
inc
push
enter
xor
add
testb
and
inc
pop
mov
loop
push
ss
push
and
pop
sub
mov
fnsave
cltd
je
sub
push
mov
shrb
rcll
or
enter
lea
rcl
pusha
jl
sub
push
jg
or
mov
mov
dec
jnp
roll
nop
mov
adc
insl
movsb
sahf
add
jl
shrb
ljmp
or
dec
sbb
incl
ja
inc
cmp
repz
outsb
arpl
push
popf
test
inc
ficoms
sub
inc
xor
mov
and
lods
ret
mull
les
in
pop
adc
lods
addl
pop
orl
adc
enter
or
out
jbe
pop
lea
iret
jbe
pop
cmpsl
cmp
aaa
gs
sbb
inc
mov
jb
movsb
inc
and
dec
mov
dec
jb
and
fsubrs
xchg
inc
enter
repz
div
sub
jns
jg
ljmp
mov
mov
and
push
std
loop
fistl
and
and
iret
add
add
aad
cmpsl
push
jle
fldl
imul
call
nop
insb
loop
sbb
mov
pop
fstl
loope
repnz
xlat
hlt
and
cwtl
pop
dec
lret
add
mov
rorb
mov
sub
mov
pop
inc
jno
dec
mov
inc
and
in
ret
cmp
push
push
cmp
je
dec
icebp
add
pop
or
xchg
shr
inc
mov
mov
insl
adc
dec
dec
mov
sti
and
loopne
inc
push
arpl
jae
or
je
mov
or
xor
sbb
insb
mov
and
addr16
jecxz
test
aaa
dec
test
cmp
lea
fidivrs
int3
sti
and
pop
movsb
jmp
lret
xchg
mov
push
rcr
pop
sahf
dec
jns
in
out
movsl
mov
lea
adcl
sbb
mov
test
dec
outsb
mov
es
test
jmp
daa
mov
mov
dec
add
add
add
ds
fdivp
cld
ds
daa
cmp
dec
repz
add
repz
add
jno
mov
aam
push
es
ljmp
pop
push
scas
pop
sbb
pop
and
push
add
adc
jg
xor
in
pushf
in
out
int3
pop
pushf
mov
pop
addr16
movsb
das
mov
push
es
dec
cwtl
jg
push
mov
jmp
add
dec
pop
std
xchg
push
lahf
ficoms
or
dec
aas
mov
adc
push
test
xchg
sbb
or
jo
cltd
inc
jmp
in
or
add
mov
call
dec
mov
mov
or
imul
neg
stos
jnp
xchg
pop
adc
xchg
test
jecxz
sahf
sbb
sbb
dec
push
ja
and
movsl
in
icebp
mov
cmpb
fidivrs
aaa
fnstcw
dec
or
mov
pop
and
xchg
add
hlt
xor
popa
testl
xor
mov
shl
or
xchg
push
lods
mov
mov
push
cmpsl
call
jno
or
outsl
cmp
fwait
cmc
hlt
pop
in
pop
jns
push
into
pop
inc
mov
jl
sbb
test
in
pop
mov
shlb
xchg
jmp
pop
insl
cwtl
cmp
jno
sbb
dec
repz
jne
out
in
mov
jns
es
cltd
mov
gs
dec
adc
sub
cmpsb
sbbb
add
test
pop
cmc
lret
pop
imul
fildll
mov
je
cmpsl
out
jns
and
and
and
xchg
jecxz
cmp
cmpsl
scas
xrelease
mov
jae
std
jae
cli
into
cmp
mov
aas
imul
in
dec
dec
push
push
inc
xchg
sbb
xchg
loope
fstpl
lcall
mov
mov
sbb
cmp
mov
dec
cmp
inc
cmpsl
imul
mov
call
mov
add
mov
mov
out
mov
fwait
xor
mov
push
xchg
incb
mov
out
in
lods
adc
dec
das
mov
cmp
fsubr
arpl
push
jno
mov
lods
cmc
mov
pop
push
test
push
sub
aad
cmp
iret
sub
pusha
ja
aas
sbb
xor
pop
jbe
jnp
and
add
sbb
and
inc
mov
popa
pushf
sub
mov
jecxz
push
push
std
pusha
icebp
leave
cwtl
push
xchg
push
fs
mov
dec
sbb
aas
ja
fnsave
je
and
mov
push
ret
fld
jge
and
pop
push
dec
lods
lods
clc
push
popa
mov
outsb
stos
lcall
adc
jecxz
cmpsb
mov
jb
push
and
mov
xor
or
jmp
inc
pop
mov
shlb
and
jo
mov
push
lods
es
aam
pop
jmp
daa
fldenv
jecxz
insl
js
negb
aaa
add
loopne
pop
dec
lods
test
mov
or
lahf
add
lds
xchg
pusha
icebp
cld
push
pop
in
jne
xor
sub
inc
loopne
mov
pop
enter
fcmovu
xor
stos
outsl
into
lods
std
dec
lds
push
adc
ret
jl
insb
or
scas
mov
int
xchg
adc
lahf
push
iret
imul
out
push
adc
xchg
add
cmc
inc
ret
scas
popa
lret
rorb
dec
xchg
pusha
jne
mov
fdivs
push
das
in
adc
into
inc
fistpll
sub
inc
mov
jmp
in
ljmp
jae
pop
ffreep
jns
add
adc
mov
ljmp
cmovae
add
sbb
outsl
inc
aas
out
and
cmp
jns
xchg
or
mov
xchg
gs
lret
push
mov
xorb
in
add
push
into
add
lods
loopne
xchg
in
stos
stos
fcomps
push
mov
push
xor
sub
or
mov
jns
insb
mov
xor
in
adc
push
test
pop
out
push
in
aas
ljmp
dec
rolb
ljmp
push
mov
mov
test
xor
adc
cmc
mov
jge,pt
inc
out
hlt
pop
xor
jge
mov
mov
push
xor
int3
pop
xor
je
add
add
jnp
xor
jg
sbbl
inc
dec
add
repz
add
push
adc
jl
xchg
pop
ljmp
cwtl
test
orl
cmp
xchg
int
pop
fwait
roll
mov
out
mov
jle
or
mov
int3
pop
inc
inc
cmc
sbb
and
fidivs
movsb
movsl
pop
lahf
xchg
dec
loopne
xchg
xchg
sbb
and
jno
and
test
mov
lahf
into
testl
movsb
mov
stos
adc
adc
out
add
pop
movsb
std
xor
jb
jp
sbb
and
cld
mov
arpl
rcr
adc
shll
cmpl
xchg
mov
xchg
push
mov
push
loope
adc
test
test
decb
or
jae
data16
jecxz
data16
mov
mov
scas
push
xor
add
inc
js
or
pop
dec
fsubs
pop
repz
in
jae
xlat
mov
sub
adcb
dec
loopne
pop
sahf
mov
inc
data16
jg
mov
daa
add
iret
or
mov
xchg
pushf
add
jle
ret
loope
pop
pop
clc
jge
leave
outsl
sbb
jp
mov
mov
or
and
mov
gs
pop
addl
xchg
xchg
xchg
xchg
stos
int3
sub
mov
nop
jge
cmp
out
repz
add
adcl
push
mov
sub
xor
sub
mov
out
rcrl
aam
shll
cmp
mov
jns
mov
stos
stos
pop
cld
loop
xchg
adc
ficoml
xor
or
ds
push
mov
imul
loopne
mov
adc
fcmovnb
dec
push
in
pop
inc
inc
add
lret
aam
cli
xchg
scas
out
je
rcll
and
sub
fildll
leave
insl
cld
xchg
repnz
mov
fstl
mov
mov
xor
xchg
cli
mov
xchg
testl
add
push
xchg
sub
es
jmp
adc
and
std
ljmp
dec
movsb
or
je
and
push
sub
mov
inc
push
leave
or
and
cltd
dec
stos
xor
mov
lea
int3
shlb
ret
mov
sbb
add
scas
shlb
dec
in
movsb
orb
jecxz
mov
pop
and
pusha
cli
scas
pushf
push
mov
cmp
xchg
pop
mov
dec
xchg
jno
xchg
scas
push
mov
scas
movsl
into
jl
outsl
pop
bnd
and
mov
xor
out
mov
mov
ds
add
imul
lcall
scas
data16
pop
dec
fcoms
popa
lea
push
push
das
and
or
rolb
lods
xor
mov
pop
cmc
xor
fmuls
movsl
push
dec
aam
dec
ficoml
test
lods
xchg
inc
jo
test
mov
cmpsl
push
cmp
cmc
cld
aam
pop
pop
jne
xor
cli
loope
pop
cwtl
adc
xchg
scas
jo
subl
popa
inc
pop
aaa
mov
mov
sbb
jecxz
adc
xchg
dec
out
hlt
addr16
shl
test
add
lds
sahf
sub
insb
push
sub
ja
lret
ret
xor
hlt
or
pusha
push
mov
jp
or
push
jno
rclb
dec
cmp
mov
jge
neg
clc
imul
xor
mov
adc
sub
daa
sbb
and
xchg
xchg
daa
ss
ret
mov
inc
add
mov
addb
fdivrl
or
fildll
dec
pushf
and
jp
cmp
push
gs
or
inc
xor
mov
mov
in
enter
jne
clc
mov
or
addr16
cwtl
xor
adc
aaa
mov
lds
push
stos
xlat
jg
ja
lods
fwait
cld
cli
out
or
pop
jmp
add
adcl
in
push
imul
daa
push
push
mov
testb
xchg
or
mov
or
in
loopne
cmc
mov
mov
cmp
int
shll
ds
dec
sub
or
rcr
mov
sub
clc
cmp
mov
xor
pop
clc
mov
pop
lods
push
add
pop
jle
jg
in
mov
jae
into
dec
xchg
jp
fistpll
add
loop
add
mov
icebp
mov
add
add
add
adc
insb
ljmp
adc
lret
push
lea
cltd
negl
inc
pop
out
adcb
pop
movsb
test
ljmp
mov
loopne
ret
dec
mov
mov
mov
aad
js
mov
jmp
ljmp
pop
clc
out
xlat
xor
lods
daa
in
mov
stos
inc
jl
fs
xchg
cmpl
xlat
dec
mov
lods
les
ljmp
hlt
and
jns
and
cli
xor
and
popa
inc
daa
fisubrs
cli
dec
pop
mov
push
inc
lcall
lret
xchg
mov
lret
dec
push
jne
mov
nop
mov
and
or
push
jg
inc
in
cmc
orb
mul
out
int
enter
popf
fmuls
sub
jp
jp
and
cmpsb
mov
and
movl
or
stos
leave
or
out
int3
push
cmpsl
fwait
movsb
jno
aad
pop
lret
lock
popa
sbb
mov
xchg
idiv
xor
xchg
sbb
push
scas
stc
cmpsl
inc
mov
xlat
pop
mov
adc
xor
scas
dec
fsubrs
jl
sbb
cli
mov
xchg
mov
movl
dec
pop
xchg
xchg
lea
xor
push
adc
int
test
mov
dec
addl
fldl
dec
push
dec
inc
fsubl
mov
jg
iret
test
adc
insb
sarb
sub
and
sahf
dec
mov
paddsb
arpl
cli
into
dec
xor
xor
add
xchg
push
cmp
mov
xor
sahf
aas
pushf
mov
pop
mov
lds
setae
stos
jb
or
jnp
jg
jns
cmp
imul
xor
enter
lret
or
pop
cmc
mov
mov
cmc
sub
mov
dec
addr16
pop
mov
mov
daa
addr16
xor
scas
push
push
jno
sbb
popa
and
out
push
cmp
scas
pop
cmp
leave
jmp
sbb
ret
outsb
aaa
mov
add
fs
pop
lret
jns
cmp
inc
cs
gs
push
insl
mov
je
mov
fs
int
sarb
ljmp
imulb
dec
popf
mov
icebp
scas
stos
inc
pop
push
stc
push
sbb
fisubrs
jle
fcmovne
daa
and
adc
lds
leave
add
sbb
sub
cmp
jb
iret
adc
loope
push
cwtl
rorl
fwait
mov
jns
adcb
sbb
cwtl
adc
jmp
mov
push
pop
mov
pop
sbb
mov
lds
adc
popa
mov
out
and
test
jnp
les
movsb
xor
xchg
das
dec
push
sbb
xchg
ljmp
fistl
push
ss
inc
jmp
int
mov
inc
cld
cmp
pop
jl
jbe
push
mov
ret
cmpsl
fcoml
xorb
xchg
int
or
hlt
mov
es
dec
xor
pop
pop
faddl
mov
in
xchg
mov
mov
out
and
and
cmp
adc
sbb
leave
and
push
xlat
cmp
scas
test
bound
stos
scas
rcrl
adc
xor
or
mov
imul
jle
inc
pop
outsb
gs
int3
scas
pop
daa
adc
aaa
into
addr16
iret
mov
cwtl
push
sbb
icebp
mov
adc
lcall
mov
jmp
jge
shr
out
into
and
pop
jmp
arpl
ss
fldcw
cwtl
or
mov
xchg
cmp
iret
cmp
out
cwtl
jge
mov
test
fchs
or
data16
jle
xchg
adc
fdivrs
inc
loope
jno
or
shlb
popf
or
push
imul
jno
sub
cmp
and
dec
stos
aad
idivb
push
sti
pop
rclb
mov
fsubl
push
test
add
mov
sub
sbb
test
mov
or
xchg
cmpsl
loop
mov
leave
mov
test
adcb
sarb
rol
mov
cmc
dec
popa
or
mov
rolb
add
add
add
loope
loope
fistpll
adcl
stos
adc
xchg
daa
push
add
repz
add
xchg
repz
sbb
mov
sbb
cli
mov
pop
or
add
aaa
int
fstpt
rclb
xlat
aad
pop
icebp
test
xchg
jbe
sub
sbb
jo
mov
pop
add
popa
mov
pop
imul
inc
cmp
fldenv
sub
or
faddl
add
imull
adc
dec
pop
out
in
mov
dec
xchg
dec
dec
ret
fsubrs
popa
add
dec
mov
push
scas
out
push
xchg
stos
loopne
mov
dec
inc
repz
mov
lret
popl
sbb
xchg
mov
and
jmp
xor
shr
mov
jb
sub
inc
pushf
push
pop
push
icebp
and
add
jg
cmp
add
cld
fcmovnu
adc
cmpsb
jae
dec
ljmp
sub
insb
enter
push
mov
arpl
xchg
xor
jecxz
mov
push
pop
xchg
addl
mov
push
or
std
test
push
in
xor
aaa
or
repnz
nop
notl
ficompl
add
dec
into
aas
fwait
in
fistps
cmc
fsubl
mov
enter
push
insb
and
dec
mov
test
js
xchg
jno
jne
aas
fdivl
ret
adc
jb
arpl
mov
aad
stc
mov
inc
testl
jno
and
dec
dec
hlt
mov
or
mov
ja
fadds
xor
cs
inc
insb
inc
or
nop
adc
cs
push
xorl
insb
int
sub
rcr
out
packuswb
mov
fcoms
sbb
mov
sub
rolb
imul
cli
fwait
es
fcoms
insl
xchg
jne
frstor
pop
sub
mov
es
andl
inc
push
mov
lea
or
mov
loop
jecxz
std
hlt
jno
inc
or
ljmp
push
pushf
test
int3
sub
sbb
dec
xchg
roll
add
mov
inc
movsl
xor
das
xlat
iret
loop
xor
sub
cld
imul
dec
pushl
roll
mov
mov
lods
mov
mov
sub
sti
sbb
ret
adc
jnp
inc
dec
cwtl
outsb
lock
mov
and
dec
add
jne
jp
xchg
cmp
fdivr
lret
cmp
movsl
shlb
pop
aas
out
mov
adc
negb
or
shl
sti
mov
enter
mov
daa
pop
sbb
loop
mov
cltd
stos
sbb
data16
loopne
pop
imul
test
inc
fwait
or
xor
popf
pop
mov
sub
outsl
dec
orb
imul
lcall
sbb
xor
aaa
adc
xor
cmpsb
cmp
ret
xchg
je
int
xchg
or
into
stc
or
xor
aam
sub
jp
fs
and
mov
mov
mov
jg,pn
mov
inc
test
cld
adc
out
sub
jmp
int
sbb
jecxz
add
cs
lret
xchg
movsl
iret
mov
sbb
push
inc
aaa
popw
mov
ret
push
adc
sbb
pop
repnz
lret
aas
push
adc
xor
dec
les
add
and
jl
test
xchg
push
bound
pop
fsubs
push
inc
lds
pop
aas
jl
enter
or
sarb
cmp
xor
pushf
dec
sub
jp
mov
rcrb
push
cmp
mov
pop
xlat
pop
shr
xchg
into
add
and
fdivrs
in
push
bound
or
outsb
mov
je
fistps
inc
push
mov
movsb
sbb
ret
jns
int
clc
repz
lea
lods
dec
loopne
xor
cmp
fwait
aad
sub
push
cmc
cmpsl
out
pop
daa
lcall
ljmp
les
fwait
or
into
push
addl
gs
fwait
cwtl
fildll
in
pop
lret
cmc
out
sbb
movsl
pop
or
out
lcall
in
jmp
movsl
les
ret
outsl
insl
mov
stos
aam
enter
sub
push
xor
lret
mov
fwait
sub
add
insl
cmp
and
aam
insl
out
xchg
int3
push
xchg
aas
cltd
arpl
add
add
add
test
xchg
and
cmp
sbb
pop
add
repz
add
pop
push
push
push
data16
sbb
mov
push
clts
pusha
mov
out
push
imul
mov
add
mov
test
mov
ret
notb
dec
insl
xchg
out
push
xor
fs
mov
arpl
addr16
jns
ljmp
sub
or
jecxz
imul
dec
andb
pushf
sub
xor
sub
into
pop
xchg
push
cmp
sub
lods
gs
std
testb
loop
clc
pusha
dec
push
jnp
std
push
push
add
inc
xchg
mov
in
sub
or
push
movsb
inc
call
mov
xor
cmpsl
pop
or
movsb
push
or
mov
mov
sbb
mov
aad
fs
mov
std
jno
mov
mov
loopne
je
rclb
mov
add
mov
cmp
push
lods
sub
maskmovq
negl
pop
jae
mov
xor
or
pslld
add
push
mov
add
daa
cmp
repnz
inc
xor
cli
es
mov
or
jmp
cmp
sti
xor
fldenv
jg
mov
test
leave
sub
mov
sub
mov
pop
push
pushl
mov
xlat
jmp
mov
jecxz
cmpsl
stos
add
dec
insb
in
and
hlt
aaa
andb
pushw
imul
out
pop
pop
shr
les
add
repnz
out
sti
or
inc
outsb
pop
xchg
sub
pushf
lods
je,pn
inc
adc
rcrl
xchg
insl
mov
cli
fiadds
cld
data16
pop
jns
add
sbbl
push
sbb
pusha
mov
adc
inc
pop
sbbb
xchg
jecxz
movsb
xchg
push
mov
xchg
push
jge
imul
adcb
out
out
aaa
sub
xor
and
fnstenv
or
mov
loopne
jge
arpl
ja
jecxz
add
mov
mov
insb
sub
pop
adc
fsubrs
fstps
jmp
and
pusha
xor
icebp
pop
sbbl
mov
xor
mov
push
shl
shlb
shrb
mov
sub
jmp
mov
sbb
aam
inc
scas
sti
pop
inc
icebp
pop
jb
mov
cmp
andb
mov
jns
dec
aaa
dec
push
cmpsl
mov
jl
mov
gs
xchg
movsl
xorl
jnp
aaa
mov
ret
or
sti
int
orb
xchg
mov
cmp
flds
jb
mov
dec
mov
clc
sub
jmp
lret
in
stc
scas
ss
mov
shlb
inc
mov
insl
mov
ret
push
mov
jnp
adc
sbbl
addl
inc
adc
rorb
xor
cld
xor
sbb
cmp
cltd
out
jae
push
fcomps
clc
dec
push
aam
and
mov
mov
repnz
push
dec
clc
imull
push
jae
push
gs
push
inc
xchg
mov
outsb
out
jecxz
or
cwtl
jmp
and
inc
push
pop
xchg
cmp
xor
inc
inc
out
cmp
repnz
imul
aas
adc
push
scas
lods
mov
sub
mov
jns
or
jle
mov
adc
xor
loope
aad
inc
jbe
lahf
lods
inc
xchg
xchg
push
or
and
xchg
and
loop
aam
push
mov
add
mov
xchg
pop
sbb
ret
mov
inc
in
push
das
sub
cmpsl
mov
cmp
jae
aas
idivl
inc
daa
mov
jns
mov
pop
pop
inc
add
rorl
mov
xor
jnp
cmpsb
dec
add
xor
lcall
mov
fstpt
jg
sub
xlat
sahf
dec
xchg
aam
test
jmp
les
lcall
xchg
or
mov
or
sbbl
jmp
scas
mov
jns
jno
cmp
or
outsb
cmpsl
sbb
push
ljmp
aad
ficoml
xorb
inc
mov
scas
sub
fildl
cmpsl
sub
invd
popa
leave
cmpsl
popa
mov
add
xlat
jnp
insl
sbb
xchg
in
test
sub
aas
shrb
shlb
add
add
cmp
loope
mov
mov
add
add
add
lods
push
push
sub
cwtl
push
fisubl
add
mov
jae
pop
int3
dec
repz
jle
sbb
mov
pop
and
fs
mov
subb
xadd
xchg
stos
jb
loop
push
out
jg
add
clc
sub
adc
dec
in
sub
std
movsl
iret
shll
sbb
and
mov
in
lret
leave
inc
gs
popa
ss
in
test
les
add
sbb
or
ss
sbb
or
inc
leave
inc
inc
pop
push
sub
jb
outsb
xchg
or
adc
bound
ja
stos
and
adc
pop
out
mov
sbb
dec
filds
test
cmp
loopne
test
mov
and
in
jns
push
mov
mov
ret
lahf
pop
sbb
call
ret
pop
push
xchg
cmc
cmp
nop
mov
cmpsb
das
xor
lahf
inc
out
add
mov
xor
fdivl
jmp
mov
mov
fdiv
dec
mov
leave
jns
sub
cmp
mov
popa
iret
push
cmc
test
dec
inc
sahf
into
enter
jle
jnp
mov
dec
gs
pushf
stos
push
pop
or
add
out
mov
test
sarb
sub
outsb
leave
dec
nop
lahf
icebp
loop
call
out
data16
dec
xchg
or
cmpsb
sub
sbb
dec
inc
push
sbb
andl
int3
insb
mov
mov
add
xchg
rclb
jmp
jne
inc
in
out
lds
jns
sar
jb
mov
fisubrl
push
jb
sub
popf
aaa
popl
imul
pop
mov
stos
sub
and
outsl
into
push
cltd
inc
test
out
xor
dec
push
pop
mov
cltd
std
mov
leave
lret
mov
mov
in
test
shlb
stos
or
fwait
xor
rcrb
xchg
repz
cmp
or
dec
into
xchg
mov
popa
nop
scas
pop
nop
push
out
cmp
xchg
xor
sbb
push
and
addr16
popa
inc
sub
jg
xchg
cs
adc
rolb
cwtl
inc
ficoml
ret
sahf
add
in
std
sub
cmc
pop
aaa
xchg
pop
ss
fs
xor
mov
addb
inc
sbb
mov
in
outsl
pop
mov
pop
mov
pushf
sub
inc
jbe
int3
lret
sarb
cli
or
int3
ss
stc
adc
cmp
imul
aam
call
hlt
movsb
xor
mov
lcall
call
les
lret
sarl
aas
or
andl
iret
mov
cltd
rclb
out
or
mov
jae
aad
or
aam
out
adc
mov
add
int3
popf
nop
cli
pop
aad
fwait
push
sbb
pop
lcall
dec
js
jge
mov
jno
icebp
and
adc
inc
xchg
jb
xor
xor
stos
xor
iret
sbbl
adc
jmp
pop
iret
mov
dec
bound
imul
or
outsb
jo
and
test
push
and
bound
outsl
mov
stc
data16
jbe
lret
lds
pop
or
fwait
popa
xlat
jns
push
dec
cltd
movsl
mov
leave
xchg
aam
pop
lock
or
testl
leave
cli
cmp
loopne
lcall
repnz
sub
hlt
push
push
cmp
and
loopw
pop
sub
push
push
mov
cmp
mov
push
je
mov
mov
subb
mov
cmpsb
or
scas
jle
inc
dec
stos
adc
jmp
pop
or
lret
in
adc
jnp
sbb
scas
xchg
cmp
and
imul
fbld
hlt
xchg
arpl
loop
lahf
fwait
mov
fisttpll
or
adc
adc
jle
mov
test
mov
inc
sub
cli
out
dec
sahf
mov
xchg
sbb
aas
xlat
bound
orl
add
movsb
fiadds
das
fisubl
in
cmp
pop
sahf
je
jno
std
lock
jg
or
test
mov
cltd
xchg
gs
mov
es
popa
dec
iret
sub
inc
iret
pop
mov
dec
stc
jbe
ds
pop
push
adc
or
popl
add
add
jg
mov
jp
ret
inc
lds
out
add
repz
add
out
movsl
xchg
ljmp
sub
cwtl
scas
dec
movb
xor
out
cld
xor
imul
loop
loopne
sub
sbb
call
pop
arpl
fwait
loop
mov
sbb
rorb
mov
add
xor
lcall
xchg
cmp
outsb
xchg
jo
mov
and
adc
sahf
jno
xchg
in
dec
add
leave
enter
mov
cmc
or
mov
aas
mov
add
dec
sti
fcmovnu
int3
push
arpl
gs
xchg
add
dec
loop
ret
lea
mov
fdivl
cs
xor
jg
int
dec
adc
sarl
pop
sbb
add
lods
sbb
lret
mov
push
fdiv
js
cmp
jle
popa
mov
push
xchg
jge
adcb
pop
inc
test
out
pop
ds
mov
bound
xchg
in
aaa
rorb
bound
std
lock
lods
mov
jp
mov
rcrb
call
xor
sub
push
mov
pop
mov
dec
or
and
ja
ret
adc
in
loope
mov
lods
dec
pop
pop
outsb
filds
scas
mov
xchg
and
inc
scas
xchg
xor
xor
cmp
mov
inc
jnp
loop
mov
jno
sub
jmp
add
ja
mov
call
jge
dec
add
je
pop
inc
sbb
cmp
lcall
test
xlat
mov
int
xchg
add
sub
aaa
ror
pop
ret
in
fnsave
icebp
lods
lret
push
mov
adc
and
mov
jp
leave
mov
sbb
mov
in
jns
push
cld
mov
orl
mov
jb
and
xor
push
ja
aam
xchg
dec
xor
and
js
testl
add
push
popa
arpl
ds
fiadds
int
in
addr16
in
aas
jne
sub
lcall
fbstp
xchg
adc
jo
loop
and
scas
pop
in
mov
scas
add
fisubrl
les
loopne
cmp
inc
add
jecxz
int
jp
fdivs
sbb
andl
test
mov
xorl
dec
ficompl
or
and
test
imul
inc
test
imul
xor
stc
xchg
push
mov
jns
jp
jno
aas
cmpsl
and
push
inc
or
in
lret
push
pop
jl
adc
pop
bnd
mov
icebp
cltd
cmpsb
repnz
lcall
rclb
sti
adc
mov
mov
repnz
add
iret
mov
cmpsb
mov
push
cwtl
shl
repz
xchg
in
or
lret
push
ljmp
xchg
cwtl
push
out
ja
das
das
push
and
adc
xor
jno
mov
fwait
cmp
xchg
or
add
insl
insb
mov
add
add
mov
push
loopne
mov
lds
fsubr
movsb
sub
cmp
lods
gs
lods
push
out
jge
sbb
xor
add
cld
or
daa
mov
fdivl
inc
int3
movb
xor
out
lods
ss
in
mov
push
mov
mov
repz
movsb
or
fildl
loopne
test
push
in
andl
lret
sub
sub
stos
fmull
push
xchg
mov
cmp
mov
stos
add
and
mov
mov
hlt
out
fwait
in
sub
pop
bound
outsl
mov
xor
shlb
scas
pop
push
push
and
dec
mov
push
add
sub
or
fistpll
xorl
pcmpeqb
and
pop
add
and
cmpsl
in
pop
add
movsl
lock
jl
sub
push
pusha
movsb
mov
add
add
xor
ljmp
lds
xchg
dec
out
aaa
xchg
pop
xor
mov
sbb
test
je
test
out
nop
mov
push
mov
aas
fdivrl
daa
repz
sti
adc
mov
leave
inc
xor
stos
in
sbb
sub
into
or
repnz
mov
inc
inc
outsl
out
push
lcall
push
cmp
cmp
push
pop
mov
lahf
call
add
repz
add
xchg
cmpsb
fwait
xorl
stos
xorb
adc
cltd
mov
pop
cmpl
pop
jno
mov
nop
addr16
dec
sub
xlat
cld
out
out
orl
es
pop
dec
cmp
adc
and
adc
fisttps
pushf
dec
mov
cs
inc
insb
shlb
mov
inc
jbe
mov
in
push
stc
sbb
sub
lods
sbb
in
mov
stc
mov
inc
imul
dec
push
shr
pop
sbb
jno
push
mov
xchg
jno
add
mov
jg
push
jne
scas
stos
ret
xchg
sub
js
in
dec
pop
daa
loop
sub
mov
imul
data16
add
ret
pop
mov
inc
mov
sub
jg
pushf
bound
or
xchg
dec
sbb
pusha
pushf
inc
test
call
push
test
push
ret
lahf
imul
push
mov
and
ffree
enter
das
inc
lret
jmp
mov
lcall
sub
xor
ljmp
inc
aas
xchg
xlat
movsb
loop
adc
in
shlb
movsl
mov
cld
fbld
mov
or
cmpsb
into
inc
fisttpl
mov
rcrb
sti
je
loop
lods
ret
cld
dec
clc
bt
inc
ud0
lods
xor
adc
test
cli
gs
iret
push
and
ret
pop
dec
call
stos
ja
dec
daa
mov
jne
mov
xor
mov
fldlg2
imul
push
push
cmp
popa
mov
scas
test
repnz
dec
mov
cmpsl
test
stos
bound
in
fcmovu
dec
out
ja
xchg
mov
out
cwtl
pop
in
es
and
or
andb
push
lret
js
rcr
mov
jmp
jge
xor
mov
jae
push
dec
shl
mov
enter
add
fimuls
in
mov
int
repnz
lock
shll
sub
cltd
call
test
adc
mov
sbb
jb
cmp
addl
mov
loopne
adc
lret
mov
xchg
in
inc
pop
jmp
push
call
or
sub
jo
mov
insl
cmp
scas
cmp
inc
flds
popa
iret
lcall
push
xchg
daa
fs
in
and
in
ficompl
cmp
or
popa
test
rolb
inc
or
mov
adc
pusha
mov
or
mov
ss
insb
mov
sahf
dec
lods
aas
jmp
cmpsl
sub
push
lret
and
pusha
add
push
pop
inc
rorl
add
xor
in
cmpsb
rcrl
adc
hlt
test
add
insl
stos
je
inc
pop
dec
cmpsb
adc
push
jbe
jge
leave
cs
xchg
stos
mov
insl
xchg
inc
push
ja
mov
movsb
pop
outsl
daa
lds
stos
cmp
xchg
push
cmpsl
xchg
sbb
and
xchg
dec
daa
lret
jle
in
ss
fdivs
mov
or
out
std
retw
dec
or
in
push
jp
dec
cltd
add
sub
lea
dec
push
jecxz
xchg
xor
xorl
loop
xchg
mov
and
cmp
outsl
cmpsb
push
repnz
addr16
mov
mov
test
shr
icebp
pop
pop
clc
or
aam
jmp
pop
push
scas
mov
movsl
popa
aaa
push
mov
cmpsb
cmpsb
dec
or
sbb
ret
pop
rcll
push
cld
lea
cmp
sbb
cmp
int3
scas
es
mov
repz
cld
repz
mov
out
jge
stos
push
lea
iret
or
jae
jns
sbb
lods
sbb
and
sbb
cmp
push
popf
inc
lds
sub
jle
and
mov
leave
lret
loop
in
jo
jae
mov
repnz
sbb
lcall
test
sarb
rclb
sbb
pop
jbe
adc
in
jnp
aad
mov
in
cmp
cltd
sbb
mov
jge
adc
sub
call
adc
pop
xor
fmul
xchg
fidivrl
sub
jg
test
out
xorb
out
add
repz
add
cmp
sbb
lock
mov
insb
push
xor
push
adc
scas
sub
sti
aam
pop
pop
xor
jnp
sbb
mov
loopne
insl
pop
and
outsb
mov
sub
mov
repnz
xor
cmpsl
sbb
cmpsl
pop
std
push
inc
adc
mov
xchg
aam
stos
adc
add
and
inc
mov
mov
mov
adc
pop
fisttpl
jle
or
imul
movsb
gs
jl
rolb
xorl
sbb
mov
dec
sbb
aas
jle
arpl
out
lahf
mov
dec
stos
pop
jo
enter
aam
dec
xchg
aam
call
mov
lcall
pop
imul
sbb
mov
jae
dec
mov
cmp
sub
test
dec
inc
ret
outsl
popa
inc
push
sub
sub
adc
xchg
fwait
mov
add
cmp
loop
and
xchg
ljmp
enter
dec
mov
mov
sub
and
stos
add
xor
sbbl
inc
aaa
mov
or
xchg
sahf
or
xchg
mov
xlat
xlat
pop
add
xor
sbb
push
out
add
int
pop
pop
into
adc
add
or
dec
les
pushaw
into
pusha
xor
inc
xor
loop
cmc
pushf
mov
mov
ds
xor
xor
fdivr
lods
inc
adc
push
xchg
pop
int
nop
push
or
cld
sub
in
pop
lds
jns
and
aad
sub
or
jne
imul
insl
orb
dec
xchg
hlt
ror
ds
mov
jg
adc
into
push
dec
push
mov
fs
push
xor
xlat
popa
fidivs
arpl
inc
cmp
outsl
mov
jge
add
adc
pop
adc
shlb
imul
sbb
addr16
push
xchg
clc
js
jbe
gs
gs
mov
nop
inc
mov
imul
subb
fbld
pop
sbb
push
dec
cltd
imul
pop
fdiv
dec
push
add
data16
cmp
lret
jbe
in
mov
sbb
push
ja
rcrb
xchg
out
xorb
xor
fmull
fcompl
pop
pushl
call
jbe
xchg
jg
sbb
negb
cli
fadds
movb
fmull
pop
out
push
jl
lea
aam
mov
push
sub
xchg
pop
jecxz
xor
pop
xlat
jae
fadds
jp
iret
and
mov
std
add
jb
arpl
fsubs
ds
lock
sub
out
out
decb
fwait
test
xchg
push
outsb
in
ret
bound
dec
inc
aam
jl
add
es
push
sbb
mov
dec
mov
lret
jp
mov
in
insb
ret
jmp
cltd
adc
pop
xchg
jmp
dec
lret
cmp
sub
mov
into
loope
cmp
mov
jne
dec
popf
mov
add
adc
mov
iret
pop
jge
js
and
push
mov
movsb
arpl
loopne
lods
or
scas
or
and
jbe
mov
pop
popa
fwait
sahf
adc
jle
cmp
mov
jae
add
test
xchg
loopne
mov
mov
mov
into
pop
add
lods
mov
scas
iret
inc
pop
subl
adc
int3
xchg
into
pop
mov
xor
fwait
or
test
outsb
adc
mov
sti
jbe
jae
call
mov
mov
jmp
les
icebp
pop
leave
cmc
popa
mov
sub
jno
jge
xor
jo
cld
in
mov
push
fldt
sbb
pop
pop
jae
mov
xor
xor
inc
pop
mov
mov
fdivr
add
jl
repz
pop
adc
arpl
subb
sbbb
cmpsl
mov
andb
ret
insl
adc
in
fistpl
mov
push
pop
push
int
fidivrl
push
jg
rclb
mov
push
pop
jmp
sub
inc
sub
fstpl
nop
loope
add
add
add
mulb
repnz
out
outsb
adc
fnstenv
add
add
add
dec
mov
jmp
push
mov
addr16
imul
fnstenv
sub
mov
ja
loope
in
cmpsl
push
push
push
xchg
mov
loope
xchg
orb
add
lahf
xor
jns
aad
ffreep
out
mov
add
xchg
mov
sahf
aaa
rcrl
push
cmc
je
out
ret
cld
and
in
jle
sbb
cmp
das
mov
stos
mov
das
fists
imul
movsb
push
add
loop
pop
rolb
clc
loope
or
cmpsb
mov
adc
or
mov
xchg
push
loope
adc
out
jle
xor
das
mov
in
jae
leave
xorl
adc
lahf
dec
stos
jge
push
loope
dec
gs
bound
mov
pushf
sbbb
dec
add
xchg
push
cmp
adc
jns
sub
sub
mov
scas
lret
lds
pushf
stos
mov
or
mov
pop
push
sub
pop
stos
mov
jmp
jmp
pop
aam
ret
xor
xchg
or
in
lods
lcall
sbb
in
js
sub
sahf
adc
imul
sub
cli
test
enter
mov
aas
and
pushf
pop
aad
pop
mov
subb
mov
mov
mov
in
mov
mov
pop
add
sbb
dec
inc
sub
and
aad
ljmp
or
cmp
add
mov
mov
sti
pop
xor
pop
pop
and
xor
orb
imul
imul
es
gs
hlt
lds
andl
mov
cmp
iret
push
add
sbbb
xlat
xchg
cmp
xor
mov
ret
sub
dec
or
ds
jmp
sbb
iret
movsb
sbb
sbb
sub
push
pop
push
cmpsb
out
ficomps
pusha
mov
inc
xchg
cltd
inc
es
ss
sbbl
out
cwtl
xchg
ja
lahf
cmpsb
push
push
inc
mov
aaa
mov
lahf
add
arpl
push
cmp
mov
pop
add
rcl
loopne
aaa
or
arpl
cmp
fcomps
push
adc
addr16
and
adc
ds
mov
pushf
push
jno
add
add
mov
mov
jmp
cmpsl
lcall
mov
pop
jno
and
int
in
in
xor
into
cltd
stc
mov
pop
and
jno
cmc
push
and
in
lock
lea
jmp
fidivrl
outsl
pop
jp
cmc
xchg
inc
jno
cmpsl
and
sti
cmpl
data16
jo
xchg
sbb
cs
testl
push
fistpll
ja
dec
add
lea
xor
enter
dec
mov
lahf
lea
push
xchg
lods
sahf
idivl
pop
pop
pop
xlat
or
bound
lcall
out
sub
mov
loopne
inc
mov
xor
iret
insl
mov
xchg
sub
movsb
lods
inc
push
push
addb
adc
cmp
andl
test
mov
insb
sub
ja
movb
ret
sbb
gs
adc
js
jb
inc
nop
addb
mov
cmp
xchg
xchg
rcl
lods
pop
dec
inc
sub
popa
pop
and
cmpsb
clc
pop
inc
xorb
push
inc
out
ja
call
cmp
cli
xor
inc
mov
xor
adc
fidivs
pop
xlat
mov
sbb
xlat
imul
mov
in
sbb
sbb
leave
dec
out
fwait
stc
test
ror
xor
insl
sub
pushf
pop
xchg
divb
pop
push
xchg
out
mov
cmp
clc
repnz
mov
lds
cmp
or
arpl
push
mov
out
fcomi
dec
in
xchg
inc
sub
xor
sbb
dec
int
jb
lret
jle
in
in
test
jbe
mov
jmp
mov
adc
int
jbe
add
hlt
or
dec
sbb
add
sbb
push
imul
mov
test
jg
mov
pop
into
fwait
int
mov
lcall
and
sahf
sahf
scas
iret
jmp
add
add
mov
mov
add
inc
int3
ja
add
add
add
sbb
inc
cld
push
sbb
lret
insl
mov
cmp
mov
imul
mov
sub
mov
stc
test
add
cmp
mov
lahf
sub
push
das
pop
lods
cmpsb
dec
xor
cmp
jnp
cmp
jno
xor
dec
xchg
decb
inc
lcall
mov
ljmp
daa
mov
inc
mov
ret
push
andb
scas
stc
dec
push
mov
cmp
fldl
std
mov
dec
xchg
les
sub
imul
pushf
dec
jb
xchg
pusha
mov
int
je
call
inc
or
or
mov
xor
sbb
and
sbb
out
lret
gs
jg
xor
push
mov
mov
loope
jne
inc
pop
push
xchg
aad
fs
dec
das
je
mov
pop
push
enter
push
xchg
and
adc
lea
pop
mov
and
sbb
test
cld
movsl
add
sub
and
pop
out
pop
cltd
cmp
push
jae
outsb
mov
dec
push
xchg
or
or
dec
mov
and
or
aas
data16
sarb
icebp
mov
int
je
cltd
jge
and
js
xchg
push
mov
movsb
and
pop
pop
ss
aas
push
mov
cmp
test
in
pop
xchg
nop
push
cltd
sub
fs
cmp
orl
inc
push
push
and
or
test
movl
adc
inc
and
or
push
sahf
sbb
push
mov
cld
loope
ja
and
stos
in
int
mov
or
cli
pop
icebp
xor
ficoms
jl
aas
jmp
mov
mov
cmp
aam
pop
mov
shll
cld
pop
inc
dec
ret
xchg
lock
sbb
mov
xlat
rol
add
cmp
insb
adc
push
jae
sub
sbb
outsb
aaa
add
xchg
aad
inc
movl
call
pop
call
mov
push
mov
push
loopne
adc
cmpsb
cli
dec
cmpsl
jp
jmp
daa
sbb
mov
movsb
pusha
call
std
mov
pop
mov
mov
lods
dec
sbb
lahf
mov
jns
fs
shrl
cmp
and
inc
or
dec
adc
iret
push
shlb
popf
insb
imul
xchg
sub
mov
xchg
mov
mov
xorb
das
jge
push
sub
push
pop
std
loop
lsl
and
imull
sbb
std
inc
lcall
iret
idiv
loope
int3
addr16
clc
xchg
fnsave
push
cltd
or
test
push
xchg
dec
dec
mov
jb
cmp
test
insb
rorb
es
push
xor
xlat
or
push
adc
add
dec
xchg
fdivl
jns
es
adc
arpl
xor
mov
rsm
cmp
fcompl
stos
fsts
cmp
js
push
int
mov
inc
adc
pop
dec
lret
pop
adc
xchg
push
mov
ds
sub
or
dec
jb
pop
mov
jo
add
push
mov
ds
scas
repnz
push
cmp
aam
int
loope
mov
adc
push
cld
loop
sub
cmc
pushf
and
das
xchg
ljmp
out
inc
add
mov
push
inc
jecxz
roll
stos
sub
aad
lock
dec
mov
lcall
xor
jecxz
inc
shlb
shrl
fnsave
push
test
or
popf
or
push
lods
scas
jb
xor
dec
dec
pop
mov
aaa
cli
jne
arpl
xchg
inc
mov
insl
sbb
enter
scas
xchg
test
xchg
jmp
aas
jnp
orb
mov
in
jge
arpl
hlt
sahf
cmpsb
out
or
push
dec
lahf
imul
mov
aad
jbe
dec
mov
jo
jns
sbb
rcl
jp
ficomps
pop
jmp
dec
iret
insb
fs
out
popa
call
mov
inc
push
mov
or
xchg
xor
dec
lcall
xchg
js
push
jnp
and
add
add
add
mov
and
jge
mov
add
add
pushw
xchg
mov
adc
leave
and
fstp
pop
clc
gs
and
lret
pop
lret
jmp
into
mov
adc
and
xchg
fistps
loopne
pop
adc
movsb
sub
aas
dec
push
mov
cmp
lods
out
mull
ret
idivb
add
mov
addr16
les
and
or
dec
movsl
pop
mov
adc
adc
jmp
pop
push
inc
das
jmp
rorb
orb
jae
sahf
ficompl
xchg
xchg
add
rorl
dec
in
repnz
fdiv
push
inc
mov
or
xor
cmp
aaa
xchg
lcall
add
aam
pop
pop
jmp
in
adc
fs
call
jmp
negb
cmp
sub
mov
orb
aas
pop
mov
fdivs
fwait
add
adc
rolb
jmp
xchg
loopne
lret
testb
jns
jg
push
mov
fiaddl
mov
aad
pop
adc
fs
fstpt
xor
cmpsb
popf
mov
sahf
cltd
jbe
xchg
jmp
hlt
fwait
mov
mov
adc
jno
mov
imul
xor
into
adc
roll
and
popa
cmpsl
lret
push
and
cli
bswap
lea
sbb
lahf
cli
iret
push
cs
and
sbb
dec
or
mul
mov
jg
mov
fwait
data16
adcb
push
scas
mov
dec
sbb
shlb
sub
mov
jl
test
fadd
frstor
mov
loop
jne
aas
enter
lods
fdivrp
mov
movsl
or
repz
adc
enter
loope
popf
das
xor
popf
pushw
arpl
es
out
push
jl
mov
sahf
mov
scas
pop
inc
jne,pt
mov
jg
inc
pop
cwtl
mov
leave
sarl
shlb
push
data16
dec
testl
cltd
addr16
loop
adc
call
cmpsl
jg
jb
xor
lods
data16
ss
dec
pop
cmp
inc
sbb
dec
in
inc
and
shll
bound
add
aam
push
inc
sub
adc
fs
mov
insb
aaa
xchg
mov
dec
leave
cmp
jge
pop
fsts
jg
push
int3
pop
push
jmp
adc
imul
ds
nop
and
pop
icebp
and
jp
loop
lea
or
and
nop
sbb
push
rolb
xor
xchg
aad
mov
push
popl
mov
cmp
adc
repz
and
mov
mov
dec
arpl
xchg
fdivs
dec
frstor
push
inc
imul
mov
adc
adc
rorb
xchg
nop
jne
push
mov
xchg
ret
stc
or
adc
mov
lcall
cmpsb
cmpl
jne
ljmp
fnsave
sbb
xor
mov
mov
lret
push
cmp
or
xchg
pop
inc
jae
and
mov
sub
pop
bnd
int
dec
shlb
fistpll
jbe
xchg
add
rcrl
add
arpl
push
ja
xor
aam
clc
mov
movsl
pop
mov
into
xor
cmpsb
stos
jl
btc
clc
imul
mov
int
mov
or
shlb
movsl
xchg
mov
lds
add
out
adc
cmp
sub
ds
insb
dec
xor
push
popf
mov
movsl
lods
popa
sarl
cmp
xchg
out
leave
dec
dec
push
mov
in
out
imulb
sbbb
sti
push
push
push
mov
stos
mov
mov
push
adc
rcll
adc
nop
dec
ret
jge
mov
sbb
repnz
in
out
jne
adc
add
inc
movsl
xchg
pop
mov
adcb
jnp
mov
cmpb
mov
push
hlt
lea
jns
adc
or
popf
jmp
mov
push
dec
pop
sub
sub
push
lods
adc
out
push
fidivrl
add
negl
or
push
cmp
jbe
call
and
pop
or
sbb
cmp
dec
mov
lret
cmova
or
mov
inc
jmp
mov
popa
in
jge
js
fisttpl
push
popa
cli
add
add
add
add
pop
fldl
inc
sti
aas
jb
add
rol
test
mov
add
repz
add
cwtl
jnp
fcompl
inc
call
mov
mov
mov
cmc
or
and
je
andb
and
repz
imulb
dec
loop
push
addr16
cs
dec
jg
jmp
js
inc
adc
mov
push
cld
mov
fsubrs
mov
inc
out
mov
pop
cmp
fdivrl
or
pop
outsl
inc
mov
mov
jnp
mov
adc
lods
sbb
dec
fcompl
lret
mov
lds
xlat
jb
std
aas
outsb
mov
in
idivb
popf
addb
add
stos
inc
dec
mov
adc
int3
mov
data16
inc
sbb
sub
cld
lret
xchg
or
std
in
enter
jecxz
jl
inc
mov
jns
push
les
pushl
lret
xchg
sbb
imul
push
mov
pop
mov
xor
and
xchg
push
movb
or
jo
or
or
pushw
aaa
sbb
mov
or
mov
out
aam
and
mov
fnsave
clc
enter
pop
cmc
in
aad
sub
and
mov
jmp
and
jmp
divb
mov
jecxz
decb
test
in
add
in
nop
xchg
jl
mov
xchg
icebp
sbb
mov
mov
pop
arpl
out
mov
std
cmp
xor
push
sbb
test
ljmp
lcall
dec
jp
sbb
test
xchg
xchg
mov
jg
push
adc
xchg
and
stos
subb
out
movsl
fldt
sbb
repz
outsl
imul
mov
mov
in
mov
mov
insl
jmp
movsb
sub
rolb
ret
push
ljmp
test
mov
aaa
popf
ret
ljmp
pop
cli
mov
aam
arpl
adc
dec
mov
pop
sti
scas
sar
jecxz
sub
push
sarl
gs
xchg
pop
pop
mov
ret
jns
shl
and
inc
mov
repz
hlt
test
inc
dec
mov
pop
pushf
in
pop
out
xor
pop
pop
cmp
movsb
hlt
subl
push
lock
testb
rcll
or
dec
fnstcw
imul
jbe
in
cmpsb
sbb
jmp
jmp
fwait
inc
inc
mov
pop
inc
xchg
lods
ficoml
rcrl
inc
push
lahf
dec
xorb
insl
dec
add
fs
jno
xor
mov
push
sti
cld
cmpsb
xlat
jo
movsb
clc
insb
js
out
lcall
pusha
test
xor
push
repz
shll
repz
push
daa
int
in
jo
and
fistpll
pop
repz
test
dec
pop
and
push
xchg
add
inc
adc
mov
hlt
push
mov
addr16
mov
push
adc
push
mov
sbb
into
in
pop
cld
in
imul
fsts
sbb
mov
adcl
mov
cmp
xor
jne
pop
scas
push
cwtl
mov
jno
stc
in
jnp
outsl
sub
lret
push
jns
fcomps
cld
and
push
aaa
mov
xchg
imul
mov
call
iret
dec
das
cmpl
in
nop
test
inc
not
jg
inc
arpl
arpl
add
and
adc
adc
insb
dec
popa
mov
movsb
jl
ret
push
js
arpl
pop
cmp
jns
rcrb
cltd
cltd
ret
push
mov
mov
adc
sbb
inc
pushf
pop
and
fnstenv
jmp
sbb
mov
ret
jg
mov
inc
int3
jb
push
dec
int
pop
mov
aam
and
pop
fwait
in
daa
lret
fcmovnbe
jge
or
xchg
jl
outsl
lods
mov
aas
pop
or
cmc
aas
negl
jns
subl
and
mov
adc
jle
xchg
imul
jmp
ss
mov
int
movsl
fucom
and
pop
roll
mov
out
mov
sub
inc
daa
cmp
repz
fsubl
test
inc
ret
addr16
dec
pusha
pop
push
repz
cmp
mov
mov
ja
gs
xor
fcoml
loope
add
add
add
jge
mov
or
fisubrl
add
repz
add
stos
sbb
pop
jge
loop
lret
movsl
sbb
in
cs
test
sub
pop
insb
in
adc
adc
jne
jo
mul
insl
leave
int
test
jo
cmp
mov
insb
add
stos
push
adcb
xchg
cmp
mov
std
test
add
jle
xchg
shrl
push
lcall
and
xchg
push
and
add
test
sbb
mov
jo
push
shl
sahf
int
push
push
push
dec
cmp
mov
sub
or
test
pop
pop
add
outsb
aaa
cmp
push
sbb
subb
std
xchg
xchg
sbb
rorl
aad
push
add
push
cwtl
sub
negb
mov
lods
ret
mov
xchg
or
ret
outsb
xchg
add
or
cmp
mov
xor
int3
mov
lods
ljmp
fsubrl
pop
adc
aad
cmp
fadds
stc
mov
cwtl
subl
push
leave
push
pop
dec
aad
dec
sbb
jbe
sub
sbb
iret
jo
imul
sbb
jo
jle
jp
roll
or
aaa
imul
sahf
lea
cmpl
push
aam
jb
stos
or
int3
add
inc
fadd
rorl
mov
loopne
adc
push
das
data16
cltd
out
int3
ret
lahf
stos
and
iret
nop
pop
rcl
mov
cmpsb
clc
pop
mov
shrl
adc
mov
dec
lret
int
rol
pop
sti
nop
lods
dec
sbb
mov
inc
popa
inc
sbb
inc
insl
enter
jae
fwait
dec
clc
rcrl
cmp
sbb
xchg
std
add
lods
pushf
sub
lock
pop
sub
iret
mov
cmpsl
fwait
mov
cltd
movsl
jo
cltd
test
mov
es
cmp
mov
mov
les
scas
push
sub
jno
mov
pop
hlt
mov
add
popa
add
adc
filds
or
or
jns
jg
sbb
scas
scas
xor
xor
shl
sub
bound
clc
xchg
sub
push
mov
jmp
cmpsb
arpl
xchg
lods
push
jbe
rclb
xchg
stos
scas
andl
or
jp
lcall
sub
mov
and
loope
mov
dec
out
pusha
mov
enter
cmp
and
aaa
sbb
loop
shrb
rorb
adc
shrl
mov
mov
in
imul
push
ret
gs
movsl
jns
mov
push
popa
push
cmp
test
pop
out
in
jl
aaa
cmc
mov
js
lock
mov
pop
icebp
mov
inc
xorb
incl
mov
lea
testl
push
inc
rcl
decb
mov
mov
sub
ja,pt
sbb
dec
inc
cli
inc
nop
cli
push
inc
int
rcrl
push
jo
mov
jae
loope
jecxz
jge
adc
test
dec
std
jmp
xchg
jl
sbb
out
pop
or
pop
in
add
adc
mov
pop
and
outsb
out
popa
push
and
pop
dec
data16
push
or
popf
gs
daa
jb
test
mov
pop
jp
jge
shlb
ljmp
jbe
out
inc
jae
popa
xor
loopne
idiv
add
jg
xor
les
or
aaa
dec
in
mov
cmc
popa
push
xchg
fnstenv
addl
xchg
hlt
jp
or
rcrl
and
mov
cmp
jo
jb
dec
cld
xchg
mov
es
adc
push
orl
movl
xchg
rcl
out
test
inc
push
adc
cwtl
dec
mov
mov
push
lcall
in
ja
lahf
stos
stos
push
movsb
xor
sub
nop
inc
or
adc
sub
sahf
cmp
loop
gs
insl
pop
rorb
mov
outsb
xchg
out
std
nop
sbbb
data16
inc
dec
popf
stos
aas
out
adc
pop
cltd
and
sbb
jo
mov
mov
ss
lock
loope,pn
negl
mov
arpl
pop
inc
add
mov
mov
sbb
fs
jbe
ret
or
pop
adc
add
add
xchg
adc
pop
mov
cmp
mov
add
add
add
ljmp
inc
icebp
scas
mov
je
addr16
xor
das
adc
cmp
mov
lret
jno
repnz
mov
setg
cmp
jae
scas
popa
xchg
inc
sub
lods
xchg
je
mov
adc
inc
shr
mov
dec
pop
sub
jmp
movsb
pop
daa
push
pop
adc
scas
mov
das
and
sbb
mov
adc
xchg
hlt
push
test
sub
dec
sub
push
mov
cld
inc
inc
pop
or
into
andl
cmc
int3
popf
popf
pusha
shr
xchg
mov
popa
or
cltd
hlt
pop
into
das
pop
xchg
push
cmpsl
dec
testl
jns
and
and
sbb
stos
cmpsl
and
cmp
aam
mov
mov
jle
pop
pop
enter
ja
inc
xor
jl
xlat
out
test
xor
out
add
jno
jae
stos
fisttpll
mov
out
xor
fmul
test
fcomi
ret
ss
mov
cld
xor
jecxz
xchg
stos
lret
push
sbb
rclb
xchg
pop
adc
adc
or
inc
push
cmpb
repz
lahf
fbstp
inc
je
and
pop
mov
pop
inc
push
xchg
push
stos
mov
sub
mov
hlt
psubb
and
inc
adc
movsb
lds
add
ds
mov
push
cmpsl
lahf
jecxz
xchg
js
fstps
jae
repz
push
js
or
mov
cltd
fiadds
sbb
shll
addr16
mov
idiv
pop
sub
jnp
mov
loop
popa
clc
movsl
out
mov
mov
jmp
jmp
cmp
xlat
sbb
xor
dec
push
inc
push
xlat
cmp
test
inc
dec
popf
ss
mov
add
sub
pop
cld
pop
repnz
hlt
cltd
in
inc
ficompl
ficomps
mov
shrb
pushf
dec
sbb
jmp
mov
mov
dec
negb
outsb
add
sub
mov
and
in
pop
cmp
xor
jo
dec
lods
outsb
xchg
ret
into
call
test
arpl
or
in
sti
popf
out
jle
movsl
fnsave
stc
loope
mov
das
fwait
jae
cli
and
lcall
sbb
sub
mov
fistl
mov
xchg
pop
gs
xlat
pop
or
sbb
stc
jl
cmc
mov
sub
jbe
hlt
jmp
ja
push
in
xchg
fmuls
lret
mov
add
sbb
shlb
popa
mov
pop
adc
mov
pop
lods
mov
mov
and
lea
icebp
jl
arpl
negb
adc
outsl
xchg
adc
pop
loopne
sub
cmpsb
call
cmp
xchg
mov
icebp
out
gs
inc
decb
mov
cltd
in
xor
and
ja
or
repz
xchg
cltd
aad
das
fimull
xor
int
cmp
data16
dec
push
jnp
inc
dec
dec
arpl
dec
scas
cltd
or
dec
inc
fstps
push
aas
jne
sub
fdiv
jno
xchg
sub
subl
dec
xchg
pop
mov
rorb
lea
cmpsb
in
pop
mov
mov
cmp
lcall
test
xor
mov
xchg
seto
jne
lahf
arpl
xchg
sbb
mov
or
es
mov
jecxz
incb
mov
pop
daa
fwait
mov
sub
xchg
sbb
aad
psraw
aad
popf
std
mov
mov
imul
adc
mov
or
ljmp
jp
loop
out
xchg
loopne
cmp
inc
sbb
aas
mov
mov
ret
cmp
adcl
inc
sub
imul
or
aam
pop
mov
jp
iret
filds
cmp
inc
xchg
fistl
push
call
popa
add
adc
out
insl
xchg
in
or
test
clc
jecxz
aad
cmpb
mov
sub
xchg
mov
dec
out
ss
cmpl
movsb
sbb
xchg
dec
sub
iret
mov
xchg
mov
out
mov
repnz
add
add
sti
and
es
sti
std
sbb
adc
movsl
mov
add
add
cld
xlat
dec
or
out
dec
imul
in
and
popf
xchg
and
sub
sbb
jnp
add
ja
mov
nop
data16
ret
sub
push
loope
icebp
xor
push
mov
jg
push
sbb
pop
sub
cmpsl
inc
mov
cs
sub
pop
pop
cmp
jns
insl
fwait
jbe
cmc
sbb
fdivrs
pop
mov
mov
add
movnti
pop
out
sub
inc
adc
jle
pop
mov
arpl
mov
pop
int3
out
push
mov
sbb
arpl
in
jae
xchg
pusha
and
pusha
xor
hlt
lret
mov
pop
ret
adc
fcmovu
fmul
shll
iret
lock
jp
dec
sbb
in
fdivs
lods
fsubrl
inc
sbb
lea
out
mov
movsb
pop
push
mov
push
lea
loop
fstpt
fstpt
das
sub
cmp
mov
gs
stos
fdivl
jmp
push
pop
jp
movsb
inc
lds
pop
out
clc
xchg
xchg
lea
ret
dec
loop
sub
orb
mov
gs
ljmp
outsb
mov
push
jae
push
js
jge
cmpsl
into
sub
mov
jnp
push
mov
xchg
sbb
dec
bnd
arpl
cwtl
stos
out
daa
scas
arpl
stos
adc
je
ret
pop
adc
xor
pop
jo
push
xchg
add
mov
in
or
pop
int
imul
and
jg
inc
sub
ja
cmp
mov
dec
cltd
sub
xchg
dec
adc
mov
loopne
dec
rcr
jb
xlat
push
pop
lea
pop
out
mov
test
cld
add
cmpsb
mov
xor
data16
icebp
fdivs
push
or
pop
push
sub
rcrb
imulb
push
daa
in
mov
adc
mov
es
sahf
xchg
xchg
sbb
push
data16
out
xor
dec
cmpl
mov
movsl
fcompl
sub
cmp
fldcw
sub
stc
test
sahf
mov
pop
ljmp
aam
addb
rol
adc
adc
ja
jae
out
popa
push
notl
mov
fisubl
inc
adc
int
pop
out
dec
lret
xor
cli
or
scas
ja
aas
push
xchg
cmpb
jle
dec
divb
pop
sti
push
push
xor
xor
lods
cmp
mov
shl
stos
pop
lods
leave
insl
cmp
es
jmp
cmp
push
dec
and
inc
ds
cltd
push
jle
fisttpll
pushf
xor
dec
movsb
push
jno
jecxz
lcall
pop
aaa
xorb
xchg
sub
jbe
xchg
cmp
mov
mov
call
mov
jecxz
fldenv
or
dec
fnstsw
lret
enter
cmc
dec
arpl
enter
pop
pop
or
lret
jmp
sbb
add
fs
push
fs
loope
mov
add
sbb
ror
pop
ss
lock
push
sub
xchg
inc
add
pop
xor
cmc
jp
xor
lea
jg
mov
dec
aad
icebp
pop
movsb
inc
xor
iret
jg
mov
add
pop
adc
movsb
jbe
movsb
and
int3
cltd
insb
sub
mov
jb
mov
sub
je
mov
scas
nop
push
sbbb
xchg
les
inc
push
jno
pop
mov
jmp
or
jnp
cmp
adcb
test
cmc
dec
and
jmp
xchg
sar
dec
mov
test
add
cmp
dec
dec
or
pop
shl
sbb
js
scas
das
push
mov
lret
push
and
cmp
mov
outsb
add
int
fdiv
fsubrl
icebp
and
imul
div
mov
inc
sbb
sbb
add
lds
ja
inc
js
hlt
dec
leave
out
out
mov
xor
xchg
xlat
jl
jns
push
out
pop
mov
cmc
sbb
jae
and
aaa
inc
adc
int
cmp
push
cmp
sahf
pop
test
nop
cmpsl
add
sbb
out
fcomi
dec
es
int3
and
sub
add
add
add
mov
jg
lcall
jb
xchg
add
repz
add
dec
adc
mov
dec
shrl
test
dec
in
cmp
inc
jmp
sub
jns
adc
lea
lret
jb
test
loop
push
dec
mov
dec
in
rcrl
dec
pop
sub
outsl
xor
push
out
sbb
repnz
movq
inc
daa
daa
das
fcmovne
loope
mov
loopne
mov
lock
sbb
rorl
es
hlt
push
or
jbe
stos
push
shlb
rclb
jno
cmp
or
sbb
leave
inc
mov
in
pop
lea
aam
adc
sti
jg
adc
push
xchg
cmp
sub
lock
mov
or
xchg
iret
into
in
mov
and
es
into
sbb
ror
orb
hlt
push
adc
fdivrl
sub
mov
out
ss
add
and
out
leave
push
das
jb
inc
hlt
mov
jb
sbb
sahf
shrl
xchg
jbe
mov
outsl
cmp
xor
ret
mov
inc
and
mov
les
jg
leave
push
movsl
out
cmp
fcmovnb
fidivrs
adc
imul
pusha
mov
in
jbe
jbe
lods
mov
inc
mov
pop
cmpsl
into
jle
int
repz
xchg
or
test
mov
push
lret
into
outsb
in
cmpsl
pop
bound
pushf
inc
pop
mov
mov
fsubs
out
sub
xor
adc
jge
xchg
sbb
clc
or
outsb
xchg
sbb
outsl
xchg
lods
out
cs
jbe
out
add
aad
adc
in
pop
mov
cld
cmp
sbb
ficoms
pop
sub
mov
ja
lock
cmpsl
push
sbbb
sahf
out
jmp
sahf
movsb
loop
push
sub
gs
aad
xchg
pop
or
lock
dec
int3
stc
push
stos
pusha
out
mov
inc
xor
mov
movsb
repz
or
push
mov
add
xor
jl
lcall
jmp
shll
cwtl
ja
pop
iret
pop
add
sub
nop
js
aas
or
int
push
out
fcoms
ss
jb
mov
inc
add
push
filds
cwtl
jmp
dec
xor
arpl
je
pop
popa
push
and
frstor
les
in
xchg
dec
dec
push
test
js
cmp
xchg
mov
das
aad
fisttpl
enter
push
scas
mov
add
lods
loopne
and
out
or
jle
push
movl
rorb
mov
clc
fiaddl
cmp
subb
out
cmp
xchg
push
daa
xlat
fisubrl
dec
icebp
test
jbe
cs
js
xchg
sbb
out
mov
daa
cltd
xor
sbb
fsts
imul
inc
shl
int3
arpl
xor
xor
cmp
or
or
mov
jmp
push
call
inc
lds
xor
scas
and
ss
dec
or
cmp
pop
nop
mov
mov
pop
fdivl
ljmp
aas
add
mov
iret
add
je
inc
mov
cmp
loopne
loop
sub
popa
sub
ljmp
inc
and
sbb
or
jp
sub
pop
cmp
mov
popl
or
sti
int3
cmp
lret
prefetchw
mov
adcl
mov
mov
mov
push
xchg
popa
in
test
mov
adc
push
fisttps
cmp
jp
cld
test
pop
cmp
ljmp
mov
mov
mov
lahf
pusha
mov
stos
jge
jnp
jle
imul
fwait
lea
sub
xchg
adc
out
rorl
cmp
ja
dec
mov
xor
mov
pop
fs
scas
cmp
out
push
movsb
cmp
sub
add
leave
inc
clc
push
xor
jecxz
xor
cmp
aaa
sbb
inc
stos
mov
mov
mov
scas
xchg
lret
xchg
cmpb
xchg
push
daa
cmp
add
push
or
cmc
pop
mov
add
add
stc
pop
sub
stos
jns
dec
sub
aas
jnp
jno
add
repz
add
leave
dec
ja
sti
jecxz
jo
iret
xchg
inc
sub
jb
in
js
jns
aad
adc
cmpl
dec
int
push
jecxz
lds
fs
stc
jle
call
lods
or
mov
jnp
or
and
sub
cmpsb
aad
rorb
sub
sub
test
adc
mov
xlat
mov
cmpl
std
xchg
jno
out
jp
mov
jno
jl
stos
inc
negl
and
sbb
test
push
sub
and
pop
scas
dec
loope
bound
xorl
sub
sbb
mov
xchg
in
call
mov
pop
aaa
or
pop
icebp
xchg
outsl
out
or
clc
dec
xor
imul
shll
cmpsb
ret
sub
mov
sub
out
addl
push
ret
pop
sbb
dec
xchg
addr16
loopne
add
or
sbb
push
mov
jno
scas
xchg
mov
mov
in
mov
pop
adc
mov
cltd
inc
icebp
pop
fadds
mov
mov
adc
inc
or
mov
add
roll
mov
push
das
cs
mov
cmp
mov
dec
cld
pop
movsl
mov
pushf
movsb
adc
cmp
out
jo
orb
sub
fadd
sbb
out
add
lret
jnp
jg
cmp
lahf
rorl
scas
movsl
cmp
test
push
int3
or
jnp
fidivl
call
pushf
shll
pop
inc
or
xor
pop
sbb
mov
mov
je
shrl
mov
stos
mov
jne
stos
cmp
sub
inc
jbe
iret
mov
testb
jge
jge
adc
ljmp
jno
and
or
pop
es
inc
iret
lock
das
bound
mov
sub
push
mov
mov
std
dec
mov
in
ja
iret
lret
test
ja
jg
test
sbb
pop
and
push
fidivs
imul
fs
mov
pop
daa
sahf
leave
inc
pop
cmp
repnz
fcoms
add
inc
les
push
aaa
mov
lods
pop
mov
and
ret
lahf
jge
fisttpl
inc
jbe
outsb
add
fstpl
inc
mov
popa
xchg
scas
hlt
dec
int3
insl
sbb
inc
mov
es
pop
ret
mov
add
push
xchg
xchg
jmp
movsb
lock
dec
shll
mov
jno
and
mov
mov
jecxz
pop
dec
enter
scas
pop
and
cli
sbb
and
cmp
add
adc
add
call
arpl
push
fs
mov
cmp
enter
sbb
cli
outsb
dec
or
add
inc
loopne
pop
dec
aaa
jp
sbb
adc
icebp
mov
sbb
lods
sbb
imul
mov
and
dec
fucomp
cli
adcl
rcll
mov
push
pop
lea
xchg
pusha
pop
movsb
and
aad
lods
dec
mov
dec
inc
cmp
cmpsl
or
lods
cltd
lahf
mov
pop
lcall
add
lds
pop
fs
xchg
adc
pop
lea
mov
sbbl
lret
inc
mov
jnp
mov
fmul
jnp
mov
sbb
xchg
fsubl
loope
sbb
pop
stos
xor
cs
push
dec
scas
test
shl
cwtl
repnz
adc
and
in
add
add
mov
pop
xchg
cs
inc
sbb
in
lods
sub
out
cmp
pop
test
in
pop
in
pop
call
out
inc
jp
inc
mov
mov
add
lods
or
js
xchg
pop
cmp
jge
push
jmp
in
fld
clc
loopne
outsb
in
test
arpl
adc
push
js
addb
pushf
inc
pop
ss
add
mov
jecxz
nop
xor
sbb
mov
jl
sub
and
cwtl
int3
push
jl
stos
out
add
cmpb
out
loop
std
ffree
out
loop
sbb
inc
add
lahf
mov
dec
jge
int
cli
sub
es
call
mov
push
test
mov
test
sbb
push
pop
mov
movsb
xchg
cmp
mov
pop
and
mov
addr16
std
inc
jle
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
repz
add
xor
int3
add
xor
lcall
jp
or
out
fucom
dec
hlt
scas
aad
popa
cmc
push
cmp
pop
incb
push
out
mov
mov
ds
es
shrl
push
xchg
ja
mov
mov
out
dec
or
xchg
lock
enter
pop
inc
jp
pop
ja
xchg
inc
or
push
dec
pop
loopne
dec
shrb
sbb
mov
addr16
enter
aad
inc
pop
push
mov
in
sbb
xchg
xchg
inc
push
add
inc
cs
dec
cmc
sbb
dec
dec
inc
mov
insl
xchg
sbb
push
repnz
mov
push
inc
or
xlat
cmpsb
adc
js
or
test
sub
jae
sbb
cmpsb
cmp
adc
mov
adc
out
inc
lds
imul
sub
loop
add
mov
or
outsl
mov
jns
add
add
faddl
dec
pop
push
xchg
mov
mov
lahf
xchg
push
mov
and
sbb
mov
xchg
data16
xchg
mov
cmpsb
push
idivb
test
repz
cmpsl
shl
sbb
int3
or
out
cwtl
xchg
pop
sbb
scas
call
loopne
rcl
lret
or
or
fbstp
xor
jmp
int3
mov
cwtl
fcompl
lock
xor
fldt
std
xchg
cli
fs
or
test
jne
imul
pushf
dec
jne
pusha
pop
ret
ret
sub
cmpsb
mov
pushf
ljmp
in
mov
mov
jnp
pop
dec
pop
push
push
imul
adc
mov
xchg
lods
pushl
and
cmpsb
rol
cmp
in
aas
lcall
cmc
lahf
dec
mov
adc
out
sbb
loop
icebp
scas
push
mov
sbb
cltd
jle
pop
mul
test
push
jp
cmp
pusha
mov
sbb
mov
dec
sub
sahf
lea
xor
xor
loopne
inc
pop
or
mov
cmpsl
je
mov
pop
mov
fisubrl
push
sbb
push
inc
outsb
pop
mull
add
push
shll
cmpsl
lock
mov
dec
lcall
ret
int3
in
xor
lds
out
push
cs
mov
and
and
add
sbb
push
insl
xchg
leave
mov
mov
and
ret
aaa
fsubp
dec
inc
por
clc
scas
out
pop
mov
addr16
cmp
loop
call
xchg
add
arpl
sti
sub
push
stos
mov
repnz
cmp
cs
sarb
aam
lods
stos
insl
incl
ss
xchg
push
sub
inc
test
bound
pop
pop
ss
xchg
sub
in
mov
imul
push
mov
add
sub
push
out
stos
cmp
imul
xor
lret
jo
cmpsb
add
data16
sbb
or
mov
push
jge
insl
add
xchg
movsl
xchg
movsb
insl
cmp
and
jb
outsl
xchg
fistl
xorl
lret
xor
lods
fdivs
xchg
adc
cmpsl
rorl
popa
push
fnstenv
jbe
ja
adc
fs
xchg
push
push
daa
push
rcl
dec
ja
aad
outsb
cli
pop
dec
stos
inc
daa
scas
jl
shl
jmp
in
jle
mov
sub
into
xchg
dec
jmp
imul
lods
xchg
mov
mov
cld
add
push
pop
mov
cmp
jo
dec
adc
push
lcall
cmp
loope
pop
lds
mov
mov
aad
insl
fisttpl
adc
in
jge
loop
scas
stos
arpl
out
push
subb
outsl
fldl
push
movsb
mov
cmp
dec
mov
xchg
mov
or
das
mov
inc
jge
add
inc
scas
dec
mov
sbb
dec
mov
lock
repz
pusha
ljmp
xor
mull
and
and
mov
pop
mov
push
sbb
mov
lcall
in
lea
mov
add
shlb
scas
adcb
dec
lods
inc
or
in
scas
jae
add
in
add
repz
out
or
add
jnp
inc
inc
ljmp
sub
out
sub
in
xor
fldenv
mov
loopne
sub
xor
add
add
xlat
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
mov
pop
std
ja
and
push
mov
ds
mov
adc
data16
pop
jg
orb
jo
pop
cmpsl
shll
pop
mov
fsts
or
mov
ljmp
pop
stc
push
out
xchg
cmpsl
out
aam
aas
lds
push
mov
jb
fdivrl
cmc
jg
jae
mov
stos
int
iret
push
movsb
cwtl
xor
mov
lret
pop
xchg
fstpl
je
repz
and
ja
xchg
lcall
mov
loopne
cmp
mov
jle
pop
inc
xor
push
add
mov
mov
inc
mov
xor
das
pop
cmpl
test
push
jmp
mov
arpl
cltd
lret
fcoml
xor
sahf
dec
gs
negb
push
sub
repnz
test
pop
mov
adcb
mov
xor
mov
add
jle
push
data16
dec
mov
mov
dec
and
inc
fcompl
aas
mov
push
push
js
dec
mov
orl
fstps
push
orl
xchg
mov
out
jl
data16
in
cmp
cmp
and
lret
sbb
xchg
pop
push
addb
jne
adc
sub
add
mov
sub
cmpsb
xor
pop
pop
jo
movl
sahf
es
cmpsw
je
xchg
mov
nop
in
add
aas
push
clc
push
aaa
hlt
add
sub
fcmovb
xchg
and
incb
xor
push
xlat
fnstsw
pop
test
pop
xor
or
mov
ljmp
pop
movsb
iret
inc
xchg
mov
repnz
imul
loope
cltd
sbb
int
sbb
adc
lods
sbb
mov
repnz
pop
dec
int3
jo
jge
repnz
add
mov
inc
aaa
push
out
mov
cmp
sub
test
fnstcw
leave
cli
mov
mov
bound
xor
outsl
push
repz
push
movsl
subb
dec
mov
imul
aaa
dec
mov
mov
mov
dec
mov
lea
cmp
xor
push
mov
mov
or
std
pusha
pop
int3
bnd
sahf
ret
loope
jo
cmp
pop
mov
cmc
mov
sahf
scas
popa
in
lock
shlb
adc
cmpsb
xor
jne
mov
popw
scas
lods
mov
jl
mov
cli
js
pop
sbbl
notl
pushf
insb
movsl
call
or
test
ret
cmp
movsb
outsl
xor
jns
pop
adc
fimuls
jg
test
ret
fists
lahf
mov
cmc
lods
in
xchg
js
inc
add
mov
cmpsl
inc
inc
out
or
rolb
call
inc
add
nop
sub
lcall
and
dec
scas
pushf
mov
inc
fiaddl
inc
loope,pt
add
push
cmp
dec
cmp
add
push
pop
aam
cmpsb
cmp
lahf
aam
add
mov
jo
stos
mov
sahf
lds
pop
insl
clc
xchg
mov
loope
adc
inc
dec
cltd
adcl
xchg
sbb
addr16
adc
loope
pop
scas
mov
jno
cmp
icebp
or
add
mov
mov
jmp
mov
inc
xor
popa
lret
sbb
pop
pop
ss
sub
mov
inc
inc
lea
shlb
xchg
jno
andl
pop
stos
bound
lods
adc
pop
or
ja
lcall
mov
cltd
dec
out
xchg
or
mov
inc
cmpsb
in
xchg
adc
adc
pushf
addr16
pop
mov
aaa
fsubrl
out
push
mov
or
pop
mov
pop
cmp
cmp
out
outsb
insb
addl
iret
out
std
jg
sub
enter
inc
icebp
xchg
fisubrs
pop
cmc
movsb
mov
sbb
dec
sbb
dec
sbb
lock
pushw
xchg
push
lea
xor
sbb
xchg
jecxz
inc
es
dec
or
fnsave
pusha
sub
mov
mov
lahf
stc
jnp
jns
push
xchg
xor
loop
and
outsb
fidivrl
gs
and
cli
sbb
mov
xchg
nop
xchg
rolb
jmp
dec
jae
add
add
cvtdq2ps
dec
sar
adc
in
in
dec
test
add
pop
int3
xor
mov
js
or
fwait
jp
out
dec
sbb
cmc
sbb
mov
lcall
inc
push
add
cld
and
mov
iret
fadds
cmp
push
loope
dec
icebp
lea
add
and
aam
clc
mov
addr16
nop
jmp
pop
dec
into
jle
or
adc
adc
cld
inc
out
pop
or
nop
mov
push
sub
int
test
scas
sub
aam
and
adc
cmp
jle
mov
addr16
pop
dec
lret
sub
daa
mov
pop
xor
dec
and
pop
ret
lcall
pop
mov
out
lahf
jge
mov
mov
sahf
es
divb
inc
adc
pop
sub
cmpsl
xchg
cmp
push
loope
sub
leave
mov
push
adc
xchg
scas
in
js
out
ds
cld
push
shr
jp
adc
mov
xchg
mov
and
xor
or
mov
lods
mov
test
xchg
orb
std
insb
lods
scas
cmc
ret
cmc
push
out
sub
dec
popa
sbb
addr16
add
addr16
jne
cmpl
mov
mov
push
mov
pushl
loope
add
int
ljmp
push
lea
rolb
cmpsb
inc
add
gs
test
arpl
sbb
mov
mov
jmp
fiaddl
sub
les
adc
mov
cld
jl
in
lods
cmpsb
loop
add
sub
ret
dec
sbb
mov
mov
sarl
repz
jnp
jmp
mov
iret
stc
dec
into
movsb
xchg
xor
ficomps
loop
or
lods
lret
daa
push
loope
pushf
test
aam
or
mov
sbb
les
fcmovnb
and
sbb
xchg
mov
adc
add
and
inc
stos
jp
stc
int
dec
sub
push
inc
jecxz
inc
add
outsb
fs
mov
rorl
jbe
sbb
aam
mov
popa
mov
call
xlat
dec
cltd
xchg
dec
adc
insb
cmp
push
adc
adc
push
cld
data16
mov
cltd
fcmove
cmp
sub
arpl
lret
dec
lcall
cmpsb
stos
leave
test
out
jp
and
cwtl
enter
jg
cmp
stc
dec
mov
mov
andb
mov
aas
cmp
xchg
iret
xor
sub
or
bound
mov
mov
push
das
jmp
xorl
xor
bound
sub
mov
push
insb
jb
sub
mov
test
sub
push
add
sti
mov
in
dec
push
mov
shrb
pop
fsubrl
movd
icebp
or
and
lea
fildll
inc
jmp
ja
mov
insl
sub
pop
test
clc
test
in
xchg
jo
aas
or
mov
arpl
add
mov
rorb
sarl
add
mov
push
mov
fisubs
sub
jmp
out
stc
mov
addr16
push
adc
pop
mov
scas
int
sub
dec
int
sbbl
jb
add
sbb
mov
jne
out
dec
lahf
jge
pop
dec
sti
negb
sub
push
sub
mov
les
ljmp
cwtl
idivb
popa
cmp
sub
sbb
cmpsb
in
or
out
xor
sti
xor
into
insl
rcll
lahf
add
dec
jp
fsubrs
outsl
cmp
outsb
adc
lea
not
lret
fcmovnb
mul
push
enter
std
jb
shrl
fcoml
sbb
cmp
lret
push
jnp
mov
dec
cltd
mov
sbb
ljmp
dec
sub
jg
daa
or
stos
inc
dec
fsubrp
sub
and
xor
or
jne
iret
and
nop
sbb
xchg
add
jge
outsb
test
filds
adc
xchg
mov
pop
xlat
mov
jbe
mov
and
dec
cmp
and
push
and
jno
arpl
dec
cmp
xchg
pop
insb
xor
add
add
add
push
push
lret
mov
pop
fcmovu
mov
repz
add
nop
fsub
dec
push
stos
aad
bound
fsubrp
jg
mov
mov
and
aaa
jecxz
outsb
jmp
push
addb
std
aaa
in
jmp
push
mov
stos
imul
mov
hlt
dec
fdivs
ljmp
sti
outsb
and
cltd
jno
inc
xchg
je
in
cs
dec
cmp
fidivs
dec
or
sub
sbb
lret
or
shll
xlat
nop
imul
and
mov
inc
dec
pop
xor
sbb
mov
mov
push
popf
fadds
pop
fstpt
outsl
icebp
cmp
mov
sbb
adc
stos
jnp
fcoml
push
mov
imul
add
cmp
jb
fistps
pop
jle
push
ret
cwtl
mov
bound
adc
fimull
sub
outsl
pushf
xor
push
daa
and
push
add
mov
adcb
nop
shl
dec
dec
add
dec
jbe
push
shl
and
or
add
mov
and
imul
inc
rorb
push
sub
stos
mov
push
add
mov
xor
mov
mov
xchg
mov
sarl
call
addb
cmpsb
gs
pop
mov
mov
jge
repnz
cmp
ret
in
fistpl
mov
out
fistpl
inc
movsl
enter
pop
xchg
jle
pop
imul
cmp
inc
imul
and
mov
adc
lret
lods
sbb
subl
jge
xor
std
test
push
andl
adc
mov
add
outsl
pop
xor
ret
sahf
loopne
pop
loop
add
mov
cmp
dec
pop
aaa
cmpb
cmpsb
or
test
adc
or
fstl
call
sub
inc
mov
push
inc
pop
jns
jo
mov
jmp
jle
jmp
lret
adc
jge
lcall
cmp
lods
xor
add
popf
js
cwtl
mov
push
test
lea
insl
xor
out
leave
mov
cli
iret
pushl
or
out
inc
jbe
repz
negb
sarb
pop
sbb
ret
mov
push
jbe
in
and
insb
out
sub
subb
mov
lods
sub
in
push
test
sbb
sbb
lods
dec
push
add
mov
jnp
fisttpll
aad
stos
lahf
fcmovnu
lods
sbb
pop
outsl
xchg
lods
mov
pop
mov
adc
push
testl
mov
rcr
pop
push
mov
sbb
sbb
cs
cmp
jg
arpl
or
fiadds
xchg
inc
and
dec
jae
sti
inc
sbb
sbb
xorb
shlb
movsb
pop
xor
jo
incl
xchg
repnz
imul
push
adc
test
and
sub
pop
sahf
adc
hlt
cs
inc
arpl
outsl
cmp
cld
rolb
movsl
push
and
mov
test
mov
andl
dec
pop
push
adc
rorb
sbb
jle
inc
jecxz
cmp
sub
mov
aas
and
jp
into
cwtl
cmpsl
enter
jl
sbb
sub
lcall
xchg
adc
addb
insl
mov
push
sub
fucom
adcl
mov
mov
inc
mov
sbb
adc
jnp
movsb
pop
data16
jge
push
mov
xor
shl
mov
sub
sbbb
and
out
xchg
push
xchg
xchg
addr16
shlb
or
loope
xor
shlb
dec
into
dec
jecxz
pop
cltd
mov
aam
sbb
stos
popl
xchg
jecxz
pop
cmp
or
pcmpgtd
and
into
leave
fcoms
pop
sub
push
das
pop
add
bnd
test
dec
push
lret
pop
mov
pop
inc
fistl
lock
mov
cmp
pop
sbb
sti
add
inc
xchg
nop
test
mov
push
adc
aad
fidivrl
arpl
cmp
push
jb
xor
push
fwait
cld
and
daa
dec
loope
sbb
jle
mov
push
pop
imul
test
mov
mov
in
add
add
add
daa
cmp
mov
and
xor
add
sbb
dec
mov
cmp
add
push
xchg
pop
jge
add
in
movsb
push
mov
push
xor
ret
adc
jecxz
test
pushf
mov
jnp
inc
lods
fistl
xchg
rol
and
push
or
test
sub
mov
lea
hlt
pop
mov
outsb
cmp
and
int3
pushf
sti
mov
out
je
push
pop
sub
sub
jge
sub
fwait
imul
out
dec
adc
inc
lret
add
sub
das
ret
sahf
cli
mov
addr16
mov
cld
mov
roll
icebp
jnp
jne
xor
nop
inc
xor
std
inc
mov
rcll
scas
dec
push
and
mov
xor
insl
fld
stc
fdivrl
jg
jo
adc
sarl
jns
lock
fisubrl
pop
ja
and
nop
mov
insl
bound
pop
js
sub
cwtl
shll
push
push
psubusw
mov
sbb
adc
sub
xchg
movsl
sti
stos
adc
lcall
mov
sahf
data16
in
lcall
xchg
cwtl
mov
sub
add
cmp
idivb
scas
xchg
xchg
mov
jge
sbb
jg
mov
rcr
sbb
fsubl
pop
test
push
stos
mov
fdivrs
rcl
xor
xchg
outsl
jg
cmpsl
sub
cltd
and
in
imul
das
int
aad
leave
or
mov
loop
loopne
jmp
xchg
rclb
aad
fcoml
xchg
mov
lods
sub
mov
mov
sub
inc
pop
sub
es
stos
popl
cltd
or
adc
andb
inc
sbb
clc
jl
cmp
lret
leave
nop
push
sbb
jg
add
mov
scas
pop
xchg
out
sbb
mov
pop
sarl
cltd
test
nop
dec
dec
adc
je
mov
and
and
cmp
aam
dec
jl
push
sti
sub
lret
or
int3
dec
sbb
loope
pop
imul
jbe
int3
cmp
cmp
ds
jecxz
out
in
lea
xor
xchg
push
mov
pop
jnp
mov
mov
bswap
inc
jae
pusha
xlat
add
lret
inc
push
lods
sarl
rol
mov
aad
and
xchg
fadds
or
fistpl
into
sub
lock
je
ja
and
test
push
ljmpw
lahf
int
mov
dec
xor
push
out
jmp
leave
in
into
sub
cmp
mov
push
imull
cmp
lds
xchg
iret
stos
pop
mov
push
mov
imul
sbb
test
adc
sbb
lahf
cmpsl
jnp
int
mov
pop
leave
xor
sbb
and
ds
adc
repz
sahf
and
fwait
mov
sbbl
int
mov
into
fsub
xchg
repz
adc
std
packsswb
shr
insl
movsb
stc
lret
xchg
or
xchg
inc
dec
push
cmpsb
pop
sar
shr
cli
cmpb
mov
sarb
in
lods
mov
pop
sub
popf
js
mov
mov
mov
or
push
notl
enter
loope
sbb
inc
ret
cmp
jp
mov
arpl
push
cld
test
and
ret
gs
pop
push
ljmp
sbb
out
xchg
popa
add
hlt
pushf
jecxz
sbb
sahf
push
jnp
xchg
cmp
pusha
inc
or
repz
jb
pop
ficoml
mov
ja
xor
jmp
pop
adc
inc
mov
mov
lcall
adc
pop
push
mov
pop
or
and
ret
xlat
adc
cli
movsb
shll
mov
xor
outsl
test
outsl
mov
insl
fcoml
mov
enter
xchg
mov
pop
jns
inc
in
pop
out
sub
add
xchg
addr16
mov
imul
push
pop
or
and
imul
or
fwait
add
and
sbb
sub
sar
test
dec
call
es
shlb
leave
or
lahf
call
addb
and
icebp
aam
pop
push
ds
jno
push
sbb
mov
mov
es
mov
push
pop
pop
dec
shlb
add
add
sar
data16
mov
out
fidivrl
lahf
mov
repz
add
mov
in
sub
sar
cmc
mov
xchg
xor
out
mov
xor
scas
pop
out
fdivl
mov
test
std
cmovb
out
lock
pop
subb
sahf
add
mov
xor
sbb
out
jno
rol
dec
in
gs
jb
inc
xchg
xchg
ja
dec
xor
out
aad
mov
sbb
xor
mov
jns
outsl
decb
test
cmp
popf
nop
xchg
mov
loop
adc
aaa
out
mov
xorl
iret
mov
das
pop
jbe
adc
inc
out
add
jmp
push
adc
sbb
movsl
sbb
push
lea
nop
pushl
cmp
jb
ljmp
and
mov
out
std
mov
ret
jno
mov
test
iret
jg
ljmp
push
and
dec
xchg
push
flds
movsb
push
push
pop
lret
lods
push
push
xor
push
jns
cs
cmp
push
fisttpll
loop
imull
add
movsl
loope
lods
sub
lds
mov
sbb
outsb
loope
pop
mov
pop
add
out
cwtl
xor
and
jbe
ret
in
rcrb
int3
jge
and
sarb
mov
sub
ficompl
pop
data16
pusha
ror
jmp
leave
cld
fcompl
cmp
add
roll
cwtl
addl
xchg
scas
subl
in
mov
jne,pn
mov
adc
mov
test
dec
js
in
gs
clc
pushf
outsl
dec
rolw
pop
dec
pop
and
in
sbb
xchg
movl
int3
popf
divl
movsl
inc
movsb
sub
imul
aam
je
jne
xor
stos
stos
movd
mov
pop
adcb
out
jne
pop
jp
into
sub
push
pop
pop
or
movsl
pusha
les
push
mov
jge
pop
or
jl
out
dec
add
or
lock
hlt
cmp
jl
cld
jnp
push
mov
outsl
mov
test
lods
js
in
mov
lock
pop
lret
pop
stos
mov
or
jo
xchg
test
scas
dec
pop
pop
jecxz
sti
movsl
movl
push
mov
hlt
out
js
mov
pop
mov
xor
icebp
movsl
xlat
in
fimull
push
adc
cld
iret
int
ror
iret
roll
sbb
jae
adc
daa
ljmp
jnp
sub
fisubrs
mov
mov
lods
push
xor
adc
fnstsw
scas
clc
sub
stos
divb
movsl
stc
mov
int
hlt
pop
stos
and
loope
push
gs
fadd
js
int
aaa
out
shr
and
add
pop
iret
sub
mov
test
int3
jnp
imul
push
es
into
cmp
std
les
lret
add
sub
int3
gs
fidivs
dec
and
pop
sbbl
and
rep
in
xchg
dec
dec
ds
lods
leave
out
push
xchg
enter
lock
add
je
xor
ja
rclb
mov
add
dec
inc
aam
and
xchg
cmpsl
pop
repnz
mov
les
mov
mov
or
push
cmp
pop
adc
pop
push
ja
sarl
test
shrl
shl
adc
ss
leave
daa
dec
or
xlat
push
push
cmp
in
das
push
mov
push
sub
insl
sbb
lods
js
imul
cmp
hlt
adc
lods
sahf
stos
cmp
jmp
sub
xchg
mov
in
movsl
add
add
outsl
mov
cmp
push
inc
das
push
or
xor
ss
push
mov
jo
mov
xchg
loope
adc
xchg
out
xor
hlt
ffree
mov
mov
pop
sti
adc
jp
lcall
call
sarb
repz
pop
call
jg
sub
mov
rorb
out
test
add
aas
cli
cmp
test
pop
cld
pushf
jbe
adc
and
mov
cmp
jnp
push
mov
mov
ljmp
xor
mov
cmpsl
xchg
add
iret
cmp
outsl
jecxz
push
insl
sahf
sub
pushf
push
mov
add
mov
jne
insb
xor
out
mov
mov
mov
pop
xchg
xchg
adc
stos
xor
jne
mov
pop
out
aas
adc
mov
dec
lds
data16
fidivl
lods
ss
movl
pop
movsl
add
jle
mov
mov
xor
call
packuswb
data16
inc
enter
bound
or
int
sbb
jecxz
cli
lea
push
pop
aad
mov
push
mov
push
ja
jl
push
push
in
push
movsb
push
xchg
sahf
xor
or
and
stc
movsb
addb
adcl
xchg
xlat
mov
aaa
leave
mov
jae
loope
dec
icebp
sub
sbb
or
adc
sbb
pusha
cmp
inc
jno
mov
fistl
mov
cmc
and
out
mov
mull
xor
sbb
cmpsl
cmpsl
outsl
jg
sub
add
inc
sbbl
enter
in
cmp
rclb
adc
fwait
lret
xchg
add
dec
enter
mov
out
lret
adc
mov
icebp
push
je
in
adc
sbb
lea
pop
xchg
pop
stos
fisubrs
test
fmull
mov
rcll
mov
pop
push
and
fldl
lcall
int
lods
cs
adc
dec
jle
jns
jnp
fbstp
jp
inc
or
inc
mov
mov
mov
je
sarl
repz
mov
out
iret
inc
aad
mov
sbb
mov
xor
roll
sbb
aam
jnp
push
popf
out
jnp
inc
pop
sbb
pop
add
or
lea
adc
das
dec
mov
loope
in
out
jl
hlt
popw
jmp
mul
scas
push
mov
push
pop
dec
outsb
cmpsl
mov
pop
inc
pop
jecxz
cli
sub
fisttpl
pop
test
dec
mov
push
arpl
ficomps
sbbb
mov
or
pop
sub
lock
dec
xor
xchg
bound
xor
insb
neg
jns
inc
add
xchg
or
int
out
stos
loope
mov
xchg
lahf
jge
sbb
add
dec
andb
mov
and
push
insl
pop
sbb
jns
nop
arpl
mov
sbb
push
or
inc
xchg
mov
jb
in
inc
or
andl
push
dec
cld
movsl
jnp
xchg
xlat
mov
mov
lea
or
cmp
scas
mov
repnz
dec
xor
out
add
sti
js
insl
push
rolb
xchg
fisttps
mov
shll
imul
inc
xchg
sbb
addr16
lods
sbb
pop
repz
fdivl
ror
or
push
fbstp
push
imul
lahf
test
scas
xlat
or
in
xchg
aad
cmpsb
mov
fsubl
lcall
mov
push
sarb
xchg
jecxz
sub
setge
ficoms
aas
fistl
sub
pop
push
jl
mov
ret
or
mov
ljmp
jecxz
and
stos
xchg
mov
xorl
mov
hlt
ja
add
cs
pushf
sbb
mov
mov
xchg
pop
cli
data16
inc
inc
enter
mov
inc
and
into
out
push
jge
sbb
lods
cmp
adc
sbb
mov
out
push
and
sub
add
dec
push
mov
or
test
add
test
scas
cs
lea
rclb
and
cmpb
imul
pop
cs
and
idivl
stos
cmp
fiaddl
push
aaa
imul
jns
loope
push
push
cmp
jo
mov
lods
hlt
pop
pop
icebp
into
mov
stos
lret
mov
sub
mov
stos
mov
sub
insb
inc
ficompl
sub
aaa
adcb
mov
or
sbbl
push
push
adc
mov
movsl
std
iret
sbb
sub
mov
lods
xchg
cmp
mov
push
sub
adc
mov
les
out
in
add
add
add
lea
imul
fcmovnb
push
or
stos
or
add
repz
add
inc
and
mov
popf
repnz
dec
stc
flds
int
lock
xor
jne
sub
fdivr
sahf
mov
or
ljmp
push
or
mov
xchg
leave
xchg
mov
mov
sarl
sahf
jp
je
or
xor
xor
out
pop
shll
imul
xorb
into
or
xor
xchg
test
sub
cmc
out
or
jae
adc
fimull
jnp
mov
lret
call
push
mov
lahf
imul
sahf
arpl
ljmp
enter
pusha
sbb
pusha
sbb
adc
out
sub
jns
jbe
adcl
in
dec
inc
push
pusha
jne
hlt
mov
ret
lods
push
mov
inc
das
cmp
into
imul
xchg
push
les
imul
dec
pop
lods
arpl
inc
icebp
fsubrs
add
dec
push
mov
xlat
sahf
mov
cmp
or
xchg
dec
fiadds
ret
and
xchg
push
hlt
aaa
inc
inc
jbe
mov
rolb
mov
insl
inc
xchg
adc
cmpsb
mov
cmc
sub
mov
ret
movsb
cld
or
loop
stc
cmpsb
mov
lods
ffree
dec
cs
cmpsb
or
stos
in
mov
lcall
addr16
negl
shll
lret
sbb
dec
in
jmp
sbb
mov
mov
loop
outsl
mov
mov
adc
aaa
arpl
int
shll
or
dec
xchg
jne
adc
addr16
fdivr
gs
mov
aaa
sub
xlat
lahf
cmp
dec
xchg
adc
push
dec
sbb
mov
xor
rorb
es
stos
gs
mov
push
push
daa
mov
mov
push
jg
ret
inc
loope
loopne
cs
test
pushf
xor
push
push
js
aam
scas
xchg
pushf
movsl
sti
aas
mov
lods
fnsave
int
lret
adc
movsl
outsb
inc
mov
xchg
add
call
jle
loopne
repz
lahf
push
push
push
mov
push
xor
xchg
cmp
sbb
lret
mov
popf
outsb
mov
mov
subb
adc
xchg
mov
lock
xlat
int
or
mov
jmp
adc
xorb
cs
push
aas
nop
dec
out
cmp
mov
cmp
gs
test
test
imul
aad
in
pop
xor
push
sbb
jnp
adc
imul
outsl
ja
inc
mov
sub
inc
hlt
in
lods
sbb
xor
loope
mov
outsb
sub
rcrb
stc
mov
les
pop
pop
add
stos
adc
ja
in
test
ficoml
in
sub
popl
fisttps
fldt
lods
std
jmp
shrb
push
hlt
push
mov
pusha
pop
aad
mov
adc
imulb
bound
mov
fsub
arpl
xor
adc
fidivrl
push
push
adc
fwait
and
mov
dec
pusha
sbb
jno
mov
mov
xor
rol
inc
cmp
add
add
loop
test
rol
out
icebp
mov
stos
imulb
inc
bnd
and
xchg
cmp
and
fisttps
push
pop
mov
imull
lcall
dec
dec
mov
outsl
mov
jo
xchg
and
push
xor
outsb
and
ret
sub
mov
lods
sbb
imulb
fwait
aas
pop
xor
pop
rclb
jmp
dec
lods
inc
mov
mov
in
or
mov
int
and
mov
jnp
xor
scas
mov
notb
out
dec
repnz
jmp
adc
mov
add
mov
add
ds
push
mov
les
xor
jno
cwtl
jle
test
or
push
repz
ja
lods
aas
inc
push
and
stc
mov
adc
ret
add
cmp
mov
mov
cmpsb
xchg
push
cmp
aam
sqrtps
sub
icebp
popa
aaa
lret
call
xchg
pop
mov
sbb
mov
pop
rcrb
pop
fdiv
lods
jns
push
add
scas
fsub
test
repnz
daa
push
out
popa
add
call
insb
mov
add
xor
aad
push
jecxz
sub
inc
dec
pop
add
adc
sub
add
add
addb
bswap
test
dec
or
movb
repz
add
test
notl
jmp
sub
mov
cmp
shr
sbb
icebp
xchg
dec
mov
ret
lods
sarb
jp
in
icebp
iret
push
js
icebp
jns
lods
roll
sahf
jl
mov
cltd
nop
push
inc
xchg
push
incl
bound
inc
rcrl
sarb
lret
mov
dec
pop
cmp
add
sbb
mov
out
inc
xor
repnz
rcrb
push
dec
test
lods
xor
dec
add
jecxz
nop
and
and
sahf
pop
test
test
lock
test
pop
rorb
movsb
test
adc
xlat
mov
xor
aaa
ret
push
mov
dec
lock
leave
stc
sub
sub
ds
lcall
mov
sub
cmc
xchg
cmp
xor
xor
out
add
mov
fcmovnb
inc
jle
adc
adc
dec
sub
insb
mov
cmp
dec
scas
sarl
mov
mov
mov
jbe
ret
insl
cld
mov
popf
lds
xor
test
jmp
add
fdivrl
bnd
cmp
xchg
push
sbb
cmp
cmpsl
lods
fsubr
and
xchg
xchg
arpl
bnd
andl
mov
xor
push
insb
repz
pop
sbb
xor
mov
dec
insl
and
fwait
jecxz
mov
imul
add
fisubrs
push
xchg
sti
mov
jle
mov
arpl
dec
out
xor
out
cmp
push
addr16
pushl
xor
hlt
pop
push
xchg
insb
outsb
cwtl
scas
push
push
and
stos
test
lret
cmp
aam
mov
and
mov
lods
dec
sarl
lret
inc
mov
mov
jl
pop
sti
sti
mov
lods
pushf
mov
jo
icebp
cmp
fsincos
xor
outsb
clc
sub
or
jecxz
lret
insb
sbb
push
hlt
inc
mov
and
push
push
jl
mov
cld
rcll
sahf
loopne
pop
roll
loopne
das
sub
or
call
pusha
mov
lods
dec
loopne
jmp
scas
leave
int
or
add
shll
adc
int3
inc
sub
imul
xchg
push
inc
fadd
cmc
int
call
jg
xor
cmp
adc
scas
out
xchg
out
pop
xchg
rorb
arpl
sti
int3
fsub
and
mov
stc
fdivl
sbb
or
push
pop
les
loop
imul
and
sti
mov
push
jl
stc
or
ljmp
je
imul
mov
adc
repnz
lea
push
inc
jo
das
pop
shlb
add
or
or
std
push
sbb
cwtl
out
je
insl
gs
mov
jp
dec
lahf
lods
or
jecxz
mov
and
lods
and
lds
shl
in
aam
jae
push
dec
xchg
pop
and
imul
test
mov
flds
lret
xchg
xchg
in
out
pusha
test
aam
xor
orl
fxtract
pop
xorb
sbb
call
lahf
adc
lods
cli
outsb
adc
lea
adc
cltd
mov
dec
xchg
fsubrl
cmp
sub
test
pop
fmuls
cltd
sti
sub
sbb
lods
sub
pop
leave
lret
adcb
mov
les
dec
outsb
push
push
mov
scas
push
imull
rorb
pop
je
and
das
pusha
fsts
pop
scas
sarb
and
push
pop
ja
pop
cltd
addr16
lock
jg
pop
sahf
push
dec
add
push
in
or
mov
dec
and
mov
add
adcl
jmp
push
icebp
inc
fxch
or
or
push
mov
stos
and
mov
push
cld
mov
testl
xchg
out
loope
pop
movsb
mov
loopne
adc
mov
stc
je
jbe
pusha
jge
xchg
mov
jle
xchg
xor
lods
in
subl
xlat
cmp
loop
fistpll
xor
mov
sbb
shll
fdivs
xchg
or
pop
jge
push
rol
mov
popf
in
imul
adc
sub
push
mov
dec
js
je
fs
mov
mov
add
jg
cmc
or
repz
add
add
add
shrl
es
push
iret
add
pop
insl
lods
or
inc
js
cltd
ror
sbb
enter
pop
jns
push
in
scas
sub
and
push
clc
dec
jp
jae
inc
loop
lods
push
lea
pop
arpl
mov
jecxz
mov
loope
xchg
xchg
lcall
in
jle
fisubrs
mov
inc
sbbb
mov
and
pusha
pop
loopne
cmp
icebp
pop
fldln2
movsb
jae
push
fsubs
fisubrl
insl
or
clc
pop
ret
mov
int3
mov
add
cmp
movsl
icebp
inc
out
adc
ficompl
in
dec
push
push
sbbl
jb
dec
lret
dec
push
inc
pusha
push
cmp
fisttpl
movsl
pushf
push
or
mov
lock
loopne
imul
cmp
ret
push
loope
sbb
jg
lahf
pop
mov
xchg
inc
in
jae
std
xchg
xchg
shl
cs
jns
imul
pop
out
cmp
shll
mov
lds
push
outsb
dec
mov
mov
mov
or
rclb
inc
test
iret
mov
ret
or
adc
or
xchg
inc
repnz
push
sub
ret
lds
push
imul
push
imul
in
xchg
pop
das
jge
aad
orb
cwtl
aad
xchg
clc
inc
dec
or
int
sahf
gs
fs
into
je
inc
sbb
xchg
fistpl
mov
add
dec
pop
and
pushf
cmp
imul
enter
push
loop
shll
dec
enter
xchg
mov
push
push
dec
negl
and
push
cs
cli
icebp
arpl
sbb
out
and
sbb
mov
cld
lcall
xor
ficoms
cmpsb
jle
dec
popf
cs
pop
or
jbe
ficoml
xor
pop
scas
mov
loope
mov
mov
pop
pop
mov
repnz
pop
arpl
in
add
xor
mov
sbb
push
out
pop
push
ss
in
outsb
int
nop
aad
lret
jmp
mov
pusha
iret
inc
jmp
shrl
mov
filds
jo
mov
or
mov
xor
push
mov
lods
stos
jmp
cmp
lods
cmp
sti
ljmp
mov
shll
mov
js
inc
pop
clc
lahf
cmp
add
ds
sti
mov
data16
pop
ljmp
sarl
test
fists
or
insb
negl
arpl
lahf
stos
icebp
adc
sub
mov
ror
loopne
xchg
push
addr16
push
pop
xor
add
sbb
imul
xor
push
jbe
fimull
push
ss
leave
call
daa
push
insl
cltd
jecxz
js
repz
stos
js
mov
dec
add
cld
add
ret
mov
jb
pop
pop
ss
push
xor
cmp
cmpl
dec
xor
inc
aam
push
repz
sbb
repnz
lods
faddl
jae
and
or
adc
cmp
adc
mov
pop
leave
cmpsl
iret
xchg
push
add
sar
rcr
mov
mov
xchg
subl
and
mov
inc
test
fiaddl
imul
cli
mov
lahf
ret
adc
movsl
and
aad
sub
ficomps
bound
lret
and
mov
and
sub
mov
fnstenv
int
mov
loope
xor
cmp
loopne
lret
mov
push
cmp
repz
mov
fs
or
sbb
imul
and
cmpb
sti
hlt
mov
xlat
dec
test
mov
mov
xchg
insb
in
aaa
mov
pusha
or
aam
add
jg
or
ss
and
lret
jle
jle
pop
lret
lock
or
lret
mov
mov
sub
test
jg
mov
sbb
inc
dec
mov
jge
dec
pop
jl
outsb
pushw
mov
mov
sahf
mov
iret
adc
bound
sti
lock
push
xchg
xor
ret
or
outsl
mov
mov
jns
xchg
loope
iret
pop
outsb
xchg
ss
add
add
outsb
out
lds
test
loop
add
repz
add
pop
addl
sub
mov
ret
jns
mov
nop
and
scas
jbe
addr16
xlat
std
mov
sbb
bound
pop
out
adc
sub
mov
jne
lea
xor
dec
mov
repz
push
push
fstl
dec
pop
mov
mov
push
sbb
jne
fsubr
sti
sub
push
pop
jmp
or
stc
mov
sub
and
cmp
or
sub
cwtl
and
xor
pop
cld
pop
leave
mov
cmpsb
dec
xchg
daa
arpl
jle
faddp
sbb
testl
fsts
repz
push
fcom
insl
pop
and
cmpsl
inc
xor
xor
push
add
rcll
xchg
shl
pop
fs
rclb
into
lds
pop
sarb
mov
push
cmpb
sbb
or
pop
sbb
dec
or
and
mov
or
lcall
jmp
rorl
inc
pop
add
cld
loopne
fwait
mov
outsb
add
pop
jl
push
xchg
lahf
mov
dec
inc
outsl
rclb
cmp
mov
mov
ljmp
popf
test
shlb
in
pop
call
xor
sbb
adc
dec
and
pop
js
xor
das
add
idiv
inc
out
mov
dec
repnz
jns
test
push
sub
decb
pop
xor
hlt
sbb
nop
and
mul
jge
decl
push
js
adc
adc
fs
and
imul
inc
inc
in
test
sub
or
pop
xor
cltd
cmp
mul
in
into
sbb
mov
insb
insb
js,pt
lret
add
je
mov
pop
in
mov
movsb
and
or
call
cmpl
aam
js
popl
cmp
iret
push
or
fnstsw
mov
hlt
cmp
xchg
mov
cmp
and
mov
cmc
lods
mov
icebp
push
addl
pop
mov
shll
adc
jg
mov
aaa
jge
out
mov
xlat
cld
out
or
je
inc
ror
mov
orb
cmp
sti
xchg
push
scas
lds
or
jbe
insb
sbb
gs
add
mov
cmp
dec
inc
mov
punpckhbw
mov
xlat
ja
fcmovbe
cmpsb
int
cmp
add
push
jno
bound
sahf
mov
inc
and
or
shll
aad
scas
lret
mov
lret
adc
xor
dec
sbb
xchg
pop
popf
jnp
repnz
filds
cs
or
xor
and
inc
sub
push
shrb
dec
negl
lcall
sbb
or
scas
int3
aam
mov
sbb
xor
pop
or
cltd
jo
pop
mov
mov
push
mov
sub
add
push
push
test
pop
cmpsl
sti
insb
test
and
lahf
pusha
adc
jbe
sub
clc
xor
mov
pop
into
xorl
shll
jnp
pop
xor
popf
aam
clc
mov
or
mov
unpcklps
lahf
imul
cld
push
fwait
pusha
andl
je
dec
dec
add
jecxz
mov
int
fwait
xor
ds
shrb
mov
mov
jle
dec
out
and
inc
iret
in
mov
cwtl
or
push
aas
mov
dec
add
and
mov
mov
sbb
adc
test
jae
mov
stos
mov
data16
xor
lock
sub
fsubrs
test
cltd
sbb
adc
out
ja
dec
fwait
ret
int
mov
sbb
jge
inc
push
inc
stos
cltd
lods
add
jecxz
movl
xchg
test
push
or
jnp
add
sub
cmc
jo,pt
adc
sarl
int
in
lret
fcomi
push
clc
cmp
push
xor
fidivrl
xchg
xchg
addr16
xlat
mov
mov
shrb
pop
fcoms
sbb
rep
ss
cmp
sbb
push
sub
frstpm(287
outsb
mov
add
sarb
mov
icebp
xchg
scas
lods
cmp
add
add
add
lret
lods
xlat
sti
mov
mov
aad
add
repz
add
add
fadd
add
jo
clc
xchg
add
lods
xor
addr16
and
mov
add
fnstenv
xchg
mov
fcoms
int3
dec
inc
cmp
push
sub
add
fucomp
and
mov
fldcw
jmp
push
aaa
scas
and
mov
adc
arpl
push
scas
stos
nop
xor
push
cmpsb
movsl
dec
stos
lods
jge
sbb
popf
inc
xchg
fisubrs
xor
test
adc
jo
push
xor
xorl
insl
jns
xor
mov
loope
stc
sbb
jp
xchg
mov
and
sbb
js
jecxz
cli
xchg
cmp
lea
ficoml
xor
dec
daa
adc
mov
dec
imul
pop
sbb
mov
jecxz
scas
popf
add
addl
xchg
pop
push
das
shlb
push
add
pop
mov
xchg
lock
sub
mov
fildll
jle
jg
sti
fsubr
mov
or
scas
pop
adc
fs
adc
cmpb
push
scas
lret
jb
call
shl
mov
jno
or
add
mov
jns
sbb
into
cmp
cld
sub
jns
cmp
and
scas
lret
adc
lret
or
pop
push
addr16
and
outsl
mov
outsl
push
bound
out
fdivl
dec
and
and
sbb
hlt
aam
pop
pop
test
out
mov
pop
add
and
xchg
fxch
lcall
mov
insb
cmc
inc
xchg
aaa
mov
fwait
aam
cmp
ss
and
add
xchg
add
lods
rcrb
lret
mov
lret
jae
mov
mov
push
call
and
clc
or
jns
mov
push
stos
mov
insb
mov
shr
lcall
pop
aam
loopne
pop
loopne
sahf
jge
test
jg
ror
cmp
popf
stos
inc
stos
push
ja
in
xor
sbb
addb
xor
jnp
jmp
xchg
jb
push
lcall
mov
ss
push
in
adc
test
mov
or
nop
fs
cli
inc
xchg
inc
int
aad
fwait
pop
inc
cmpsl
mov
sbb
insl
js
ret
popa
cli
sub
cmc
pushf
and
sub
and
or
insb
pop
mov
out
jp
ljmp
fs
pop
movsb
dec
es
cli
mov
mov
or
inc
xchg
dec
jecxz
adc
cmp
in
repz
mov
and
gs
in
jo
cmpsb
pop
adc
adc
aaa
je
and
test
sahf
cltd
xor
int
shrl
xchg
daa
outsb
jge
sti
out
iret
hlt
xchg
sbb
cltd
mov
pop
mov
fs
sub
xchg
push
cmc
ret
jecxz
jp
aaa
movsb
xor
adcb
bound
mov
jle
fistps
or
test
xor
sar
sub
inc
pop
cmpsb
aaa
mov
add
fildl
sub
mov
jb
cs
mov
repnz
jp
scas
ja,pn
out
sbb
pop
jno
dec
ljmp
xchg
adc
js
aas
es
pusha
movsb
clc
lea
lret
add
sub
or
ret
sub
inc
inc
add
or
inc
out
mov
xor
sbb
mov
pop
jl
sbb
sub
sti
pop
jbe
dec
jae
and
pop
xchg
mov
lods
or
in
lahf
cmpl
shrb
mov
in
pop
adc
mov
wrmsr
sbb
pop
cmp
lret
call
aas
jmp
inc
adc
rcrl
and
mov
mov
cmpsl
loop
dec
test
int3
jmp
lds
fadd
inc
bound
ds
add
cmc
cmpsl
mulb
mov
fbstp
adc
add
sahf
pop
mov
nop
jae
sub
and
sahf
adc
sub
rcl
xchg
ret
dec
mov
mov
ss
dec
or
pop
mov
imul
fldcw
cmp
in
sbb
jl
ljmp
arpl
cmpsl
fdivr
mov
inc
xor
aam
jecxz
add
add
add
loop
bnd
fcomi
mov
ljmp
add
add
add
and
rclb
pop
loope
dec
jbe
mov
lock
cmc
stos
jl
sbb
mov
cmp
xchg
shrb
unpckhps
xchg
push
fidivrl
xor
jmp
je
outsb
sbb
xchg
pop
jl
jno
dec
push
jl
push
scas
mov
xlat
or
loopne
mov
stos
or
ljmp
das
faddl
or
mov
fcoml
test
mov
aam
addr16
cld
push
icebp
aas
gs
test
rolb
jbe
incb
notb
popa
add
aaa
mov
add
lock
cltd
fnstsw
repz
lahf
add
inc
les
mov
repnz
xchg
xchg
cmpsb
repnz
mov
add
lock
loopne
std
sbb
cmpsl
idiv
clc
inc
cs
into
cwtl
mov
jmp
xlat
pop
push
or
outsb
xchg
dec
push
fstps
sbb
mov
push
mov
adc
jp
orl
mov
pop
add
in
mov
movsb
ljmp
sbb
stc
aaa
mov
sahf
fidivrl
sahf
cmpb
cmpsb
les
lret
push
js
push
inc
inc
pushf
ss
scas
push
sbbl
cmp
jmp
mov
je
pop
test
das
out
cld
lret
add
test
orb
sti
or
xchg
std
std
push
xchg
loop
mov
mov
testb
stos
ret
shrl
popa
jmp
mov
and
andl
cmp
or
inc
in
add
jnp
and
mov
xchg
cwtl
dec
insb
imul
sub
call
sub
das
mov
insb
dec
adc
lret
iret
ret
xor
clc
add
in
popf
shrl
subb
mov
jae
inc
cld
inc
adc
dec
push
xchg
dec
dec
inc
inc
cmp
cmpsb
xor
insb
ja
arpl
push
mov
jg
sar
cmp
push
and
mov
jo
std
adc
jne
lock
sub
add
outsl
pop
sub
jo
scas
jl
pop
test
addr16
push
inc
push
dec
and
fadds
jbe
pusha
jns
cmc
mov
dec
ljmp
adc
xchg
or
or
dec
icebp
adc
mov
adc
aad
mov
divb
fcoml
sbb
addr16
sbb
in
xlat
cmp
or
or
push
mov
xor
adc
mov
aaa
xor
popf
adc
in
int
incb
push
jmp
pop
sti
mov
mov
ds
push
aaa
mov
pushf
fldt
std
into
shlb
mov
and
arpl
stc
sub
shrb
movsl
outsl
movsl
test
scas
push
jp
mov
xchg
adc
sbb
xor
xchg
add
inc
popl
pop
lock
fcompl
xchg
mov
cltd
pop
addr16
clc
sub
xchg
fcoml
mov
push
into
jmp
rcl
std
ljmp
mov
aam
cs
and
lcall
pop
scas
jg
leave
jb
pop
jae
pop
hlt
lock
jecxz
ds
addb
repz
jb
sub
inc
adc
dec
loop
sahf
sbb
fmul
dec
mov
aas
fsubl
mov
sbbb
gs
mov
stos
inc
sbb
inc
or
pop
fbld
pusha
push
scas
test
jmp
ss
xchg
shrb
jge
inc
repz
int3
hlt
es
shll
sbb
dec
aaa
orps
enter
pop
lret
loopne
xlat
pop
sub
ljmp
call
push
ficoml
or
xor
mov
sub
daa
jp
in
adc
mov
add
sbb
sbb
push
repz
mov
fwait
cmp
lods
mov
lock
adc
inc
pop
shll
xor
fidivrl
cld
mov
in
pop
aaa
cli
mov
bound
mov
mov
out
daa
push
jp
ljmp
push
cmpsb
mov
cltd
out
mov
les
sbb
push
sbb
imul
dec
pop
or
pop
flds
repnz
add
add
add
ss
in
inc
sbb
xchg
jns
filds
add
add
add
dec
rcrb
hlt
inc
adc
push
add
pop
dec
aam
stc
leave
push
jge
mov
fistl
push
pushf
adc
sub
pop
sbb
lcall
mov
adc
mov
jecxz
mov
dec
shl
mov
sub
jbe
xor
or
sub
stos
jns
sbb
mov
lea
cmc
pop
dec
xorl
sbb
sbb
push
dec
cmc
mov
jnp
mov
or
jecxz
mov
arpl
clc
int
jo
adc
test
add
inc
lock
lods
test
int
ss
bound
lea
rorl
jnp
arpl
insl
fdivp
xor
push
and
pop
outsl
sti
nop
repz
cmp
js
add
dec
insl
jge
enter
add
mov
cld
adc
mov
addl
add
jp
push
sub
leave
cltd
sub
std
in
fimuls
mov
movsb
incb
mov
jmp
push
cmp
inc
int3
cmpl
jno
pop
inc
hlt
push
push
sbb
pushl
push
test
popa
xchg
incb
xor
and
addr16
sbb
push
sti
arpl
scas
inc
push
push
push
int
add
push
ja
cmp
ja
inc
sbbl
mov
cmp
addb
imul
dec
inc
in
arpl
mov
xor
dec
mov
lds
push
imul
scas
idivb
stc
xchg
push
imul
jl
pop
nop
inc
jg
sub
mov
cli
leave
lret
push
ja
jno
scas
dec
aaa
imul
mov
and
ret
mov
mov
adc
ds
and
or
jno
pop
stc
je
pop
add
fdiv
lea
ret
or
subb
call
enter
inc
cmp
add
adc
xchg
testl
push
hlt
mov
test
jo
cltd
mov
sbbb
mov
sub
bound
push
sahf
aam
and
jo
jle
xchg
pop
dec
jns
adc
and
fbld
enter
icebp
sub
push
daa
clc
pop
loope
fidivs
cmpsl
inc
addr16
jle
and
fbld
dec
mov
cltd
lods
test
jg
sub
sbb
lea
or
hlt
test
shlb
xor
push
inc
iret
out
xchg
xor
rolb
adcl
jno
out
add
popa
pop
ret
xchg
mov
xchg
inc
in
xchg
jbe
ss
cmc
pcmpgtb
ret
xchg
lea
mov
jecxz
add
repnz
push
and
negb
cwtl
rcll
cld
dec
cmpl
push
std
xor
popa
sub
subl
sbb
xchg
es
ja
sarb
andl
lods
flds
rcl
mov
xchg
mov
add
or
pop
or
xchg
xchg
xor
gs
into
sti
mov
decb
adc
dec
xchg
rcll
out
push
mov
lods
mov
fidivs
pop
pop
scas
push
pop
popa
mov
rol
or
orps
fdivp
int3
cmpsl
mov
or
sub
mov
sub
jne
rcll
stos
daa
add
ret
repnz
outsl
int
xlat
out
push
cmpsb
mov
sarl
nop
rcrb
aas
movsb
mov
psraw
ffree
jl
xchg
mov
mov
push
push
cmc
lea
icebp
sahf
adc
and
movsb
push
mov
stc
push
adc
jae
ret
jae
fs
jg
jg
and
fdivl
cmp
movsl
push
insl
and
in
push
adc
sub
fwait
mov
leave
push
outsb
loopne,pt
push
data16
sbb
int
popa
mov
mov
cmp
push
push
idivb
push
jl
pop
cmp
pop
or
push
in
lret
sti
imul
cmpsl
mov
push
fisubs
test
xor
rorb
addl
mov
inc
inc
lods
mov
sub
add
movsb
movsl
adc
jge
fisubs
mov
out
insb
daa
jo
ljmp
in
mov
xor
fadds
add
add
xchg
rcrb
pop
roll
add
add
repz
add
out
mov
xchg
cmpsl
ds
arpl
or
std
mov
scas
daa
jl
int3
xchg
xor
mov
test
subb
inc
or
test
ds
cwtl
xor
div
xchg
sahf
xchg
jns
out
xchg
pop
jg
mov
sarl
fadds
lahf
jl
cltd
scas
or
loope
mov
add
mov
inc
ret
inc
dec
fdiv
popf
add
dec
and
roll
mov
add
push
xor
mov
jp
xor
mov
lahf
nop
push
fistpl
das
xchg
popf
leave
add
lea
dec
push
mov
cmp
and
je
bswap
in
jnp
stos
pop
add
mov
sti
pop
sbb
adc
aas
pop
cmp
adc
pop
imul
fidivrs
push
cwtl
in
ror
divps
cmp
push
cmp
mov
fstps
mov
fldcw
fsub
xchg
sbb
push
aam
sub
ficoml
cmp
pop
cli
inc
inc
push
adc
vminps
hlt
shll
sub
push
dec
push
loopne
leave
lea
pop
pop
jb
xchg
loope
jmp
clc
jle
neg
sub
insl
pop
test
xchg
inc
xor
jmp
idiv
cmpsb
xchg
fimull
xchg
dec
dec
das
stc
dec
in
sbb
scas
repnz
rcrb
push
stos
aad
cmpsl
pop
mov
out
or
mov
loope
pop
xor
xor
pop
cmp
sub
and
dec
add
push
pop
stos
dec
xchg
mov
cli
xchg
mov
call
leave
fidivrs
dec
inc
daa
or
imul
jmp
xchg
loop
int
jle
dec
mov
pop
jg
shl
cltd
adc
mov
jge
jns
push
fisttps
cmp
js
aaa
pop
or
and
jle
cmpb
outsb
cmp
xor
mov
jne
add
pop
pop
lahf
jp
lods
add
js
pop
xor
daa
out
stos
cmp
test
imul
test
push
adc
mov
lret
sbb
push
cmp
daa
pop
das
mov
push
stos
arpl
jmp
leave
push
leave
xchg
bound
lret
fs
mov
fcomps
and
and
sbb
dec
jno
inc
mov
inc
mov
adc
dec
fidivl
fstpt
sub
sarb
dec
ss
sub
test
sub
cmp
into
mov
movsb
incb
cltd
fcmovb
sbb
fst
sbb
mov
adc
data16
and
add
sub
sub
adc
jnp
cmp
adc
popf
push
ffreep
sbb
jnp
outsb
popa
jp
movl
fisubrl
loop
imul
dec
sub
ljmp
lret
push
roll
in
rclb
pop
cltd
shll
idivb
and
mov
push
popf
sbb
std
mov
cmpsb
out
shl
mov
jg
lret
stos
pop
inc
pop
lds
mull
pop
data16
popl
sti
and
mov
mov
push
out
in
inc
mov
dec
stc
pop
sbb
mov
inc
shll
neg
mov
bound
or
out
pusha
popf
cmp
dec
ja
in
cmpsb
xor
adc
push
fdivs
jp
pop
dec
and
cmp
and
mov
test
fisubl
jno
repz
ja
fwait
hlt
xchg
inc
inc
inc
repz
mov
push
or
clc
dec
sub
inc
add
sub
adc
scas
std
pop
stos
xchg
cmpsl
fisttps
jnp
add
sarb
add
adc
mov
inc
mov
inc
xor
addr16
pushf
inc
add
insb
lock
loop
test
xchg
cmpsb
mov
and
test
pop
or
sub
cmp
cmp
pop
jb
push
xchg
sti
dec
xchg
xlat
jno
std
ss
lsl
into
jae
xor
movb
cmpl
enter
arpl
pop
push
adc
dec
jge
sub
xchg
fists
aas
xchg
xor
fwait
sub
or
stc
arpl
jmp
mov
add
aad
jle
mov
and
js
and
mov
jb
or
sbb
outsl
fwait
dec
mov
pop
jge
adc
test
inc
jmp
pop
add
jnp
sbb
xor
movsl
add
add
add
xchg
std
repz
inc
out
sbb
jge
jmp
add
movsl
push
xchg
mov
test
jmp
xchg
inc
sub
lea
mov
pop
popa
push
mov
shlb
inc
int
sbb
mov
dec
stc
xchg
push
push
lods
ficoms
fs
outsb
push
cmp
xor
adcl
push
push
jne
popf
inc
inc
mov
mov
jno
cmc
ja
xor
sbb
int3
imull
cltd
or
mov
nop
dec
add
sbb
cmpl
sub
std
mov
int
mov
xor
imul
sarl
sahf
xlat
iret
divb
and
push
cli
out
and
xchg
in
lahf
int
sub
das
sahf
xor
outsb
cwtl
sarb
cld
add
lret
fcoml
fists
fcoms
push
sbb
or
jle
push
pop
dec
dec
pop
scas
jnp
push
cmp
ljmp
cli
sbb
and
push
test
xorb
inc
and
sub
dec
jmp
mov
iret
jg
jo
popf
xchg
sbb
pop
mov
mov
jmp
or
xor
jmp
movsb
repnz
ror
cs
stos
sub
cwtl
mov
inc
decb
movsb
or
test
sbbb
je
into
mov
and
fnstsw
cli
jns
pop
int
mov
icebp
mov
sarb
xor
mov
push
mov
dec
and
sub
pop
xchg
into
dec
jle
je
xchg
push
and
push
or
rolb
addb
inc
or
sub
push
mov
or
loop
cltd
pop
das
cmpb
in
jae
add
push
jnp
inc
xor
scas
stos
push
sub
mov
pop
fs
test
mov
jae
and
test
cmpl
xchg
sub
test
shl
lret
xorl
imul
adc
mov
inc
pop
inc
movsb
loop
repz
dec
shlb
jl
ret
add
mov
int3
and
dec
mov
push
and
adc
rolb
hlt
cmp
bound
loop
cmpb
adcb
js
mov
lods
cli
jns
xor
mov
sbb
jnp
out
cmp
nop
shlb
cmp
inc
xchg
repz
popa
mov
test
jbe
and
or
addr16
jecxz
jle
or
jo
pop
hlt
jecxz
in
and
fnstenv
push
sub
pusha
mov
add
aam
adc
adc
mov
add
xor
int
mov
or
les
mov
xor
mov
psrlw
lcall
mov
fnstcw
push
sbb
dec
int
pop
add
add
mov
scas
adc
stos
fistl
pop
mov
loope
cmp
inc
xchg
mov
ret
lds
push
xchg
mov
xchg
popf
push
adc
inc
cmp
dec
into
pop
cmp
das
es
mov
gs
iret
cmp
rcr
stos
add
jge
stos
jmp
push
outsl
xor
inc
lock
das
fstpl
pop
mov
loope
push
xchg
mov
xchg
sbb
sahf
std
icebp
jnp
xchg
cmp
cmp
push
sub
out
insb
fdivrs
std
pop
adc
pop
cmpsl
inc
inc
movsl
call
imul
ss
jno
bound
daa
insb
out
cmpsb
adc
pushf
xor
ficompl
or
jns
jnp
es
int3
xchg
xchg
fidivrl
xor
mov
xchg
jno
aaa
and
xchg
stos
xchg
xchg
dec
cmpsl
cmpb
push
push
and
cmc
repz
inc
mov
xchg
cmpsb
sub
jnp
out
inc
mov
stos
pop
ficomps
int
out
popf
ret
arpl
pop
pop
mov
jno
pop
les
mov
fcomp
mov
scas
adc
push
cwtl
in
xchg
add
pop
dec
sbb
scas
jmp
clc
jb
pop
pop
pop
sub
inc
sbb
lea
cmp
xor
lods
ja
xor
mov
add
mov
movsb
fdivp
mov
xor
stc
int3
mov
mov
inc
mov
cwtl
fdiv
int3
mov
mov
jmp
push
xchg
lahf
fcoml
add
cld
lods
adcb
js
shl
insb
fld
clc
push
xchg
mov
orl
jmp
repz
cli
dec
mov
popf
push
mov
inc
push
movsl
cmp
hlt
or
insl
xchg
add
add
add
les
std
mov
daa
icebp
rclb
add
mov
jae
fmuls
mov
pop
js
xor
push
adc
pop
lds
pushf
xor
rcrl
sbb
lret
and
lods
inc
sub
sbb
adcb
sarb
dec
pop
sahf
mov
cmpsb
lahf
lea
sahf
popf
fidivl
js
movsl
mov
pop
jo
add
les
fwait
push
sub
lcall
mov
xor
cmpxchg
dec
imul
sbb
cli
scas
and
pop
hlt
jle
jp
mov
push
sbb
xchg
dec
into
movsb
xor
mov
pop
and
lds
mov
sbb
aas
nop
or
xor
sbbl
sub
pop
imul
cmpsl
sub
inc
lahf
mov
mov
scas
inc
gs
mov
stos
push
jle
mov
mov
ret
xchg
sbb
or
std
dec
or
sahf
orb
push
or
adc
in
fistpll
push
pusha
pop
xor
xor
popf
rcrl
sbb
pop
repnz
or
push
cli
push
mov
xchg
push
jne
scas
and
sbb
fstps
data16
sbb
dec
xchg
jo
aam
les
sub
dec
movl
hlt
jae
push
loop
jne
imul
out
stc
push
mov
push
cmc
jno
cmovge
mov
cltd
mov
lods
outsb
fucompp
ret
jbe
mov
test
pop
repnz
cwtl
inc
je
aaa
enter
jle
push
xchg
and
jp
in
jb
push
popl
push
add
xchg
pop
mov
push
lock
add
or
xor
ljmp
dec
sbbl
add
cmp
mov
or
scas
mov
push
xor
adc
cmp
pusha
insl
div
jnp
xor
scas
mov
lret
insl
add
shr
insl
push
popf
sub
xor
setp
aaa
sti
mov
xchg
mov
ror
pop
clc
add
push
leave
popf
inc
aam
setg
outsl
xor
cmpsl
dec
ljmp
lret
out
bound
cs
lds
out
fcompl
dec
cmpsl
std
jns
pop
das
mov
dec
or
push
rorb
sbbb
pusha
inc
lods
and
push
jne
push
mov
inc
popa
xchg
je
les
xor
addr16
pop
mov
cmp
jle
xor
cmp
in
shl
cld
xchg
pop
out
mov
ss
popa
fcmovnu
pop
adc
not
cmp
pop
push
lret
push
sbb
loopne
mov
mov
push
cmp
sub
ljmp
cmp
je
or
notl
outsb
rcrl
mov
movsb
sarl
mov
jmp
ljmp
shlb
mov
mov
mov
cltd
push
lods
jnp
push
andl
or
mov
pop
mov
xor
xor
sbb
adc
jbe
inc
dec
cs
outsb
mov
pop
mov
adc
int
data16
and
sbbb
push
aad
insl
jne
call
jne
rolb
or
jmp
add
add
clc
pushf
inc
cmp
pop
ret
sbb
cmpsb
pop
bsf
add
scas
add
fstpt
inc
in
lret
cmp
std
ret
aaa
xchg
push
mov
ret
mov
loop
push
jns
mov
xchg
jns
xchg
test
jecxz
shrl
xchg
dec
inc
jl
inc
jp
mov
inc
movsl
fs
xor
jae
xlat
mov
loopne
frstor
mov
lahf
pop
int3
push
and
xchg
mov
stc
xchg
mov
mov
lret
mov
dec
cwtl
int3
into
pop
sahf
sbb
ss
loope
xor
les
call
add
call
xchg
pusha
sbb
ret
inc
sbb
cli
fisubl
or
pop
sub
enter
out
adc
popa
mov
std
lds
ficoms
gs
lret
mov
and
cli
rcr
adc
jne
std
loop
lret
push
xor
loopne
cmpsb
mov
lret
stc
dec
push
inc
cmp
or
mov
add
add
push
dec
shr
jg
push
mov
ss
xchg
add
repz
add
jmp
mov
mov
push
mov
lcall
push
adc
lea
pop
mov
pop
inc
mov
dec
roll
sub
in
sub
fldenv
imul
or
inc
xor
cmp
sbb
test
adc
inc
aas
inc
mov
sbb
xor
sub
cmp
fcom
xchg
xor
xor
sbb
ds
mov
xor
movsl
ja
adc
roll
sbb
mov
xchg
mov
lahf
xchg
stc
adc
and
xchg
les
js
fcom
add
icebp
lods
jmp
sbb
xor
jns
jl
jae
jge
jmp
inc
leave
jne
xchg
jg
clc
mov
push
dec
ror
out
inc
sub
mov
fwait
and
inc
mov
push
xchg
repnz
mov
pop
icebp
pusha
mov
add
fistpl
decb
jae
stc
mov
mov
stos
push
push
jne
fisubrl
andl
not
cwtl
mov
iret
out
pop
pop
mov
sbb
push
repz
cltd
cwtl
add
sub
dec
sub
shll
cmp
test
push
xor
imul
pop
inc
sbbb
push
ja
inc
pop
xchg
dec
xor
fwait
sub
cmp
pop
fs
mov
push
mov
push
cmc
out
pushf
aam
loop
dec
pop
mov
lret
shrb
and
xor
mov
repz
stos
insl
das
cwtl
jg
movsb
dec
in
fsts
icebp
mulb
xor
sub
test
cmp
dec
test
outsl
push
xlat
cmp
dec
fildll
push
std
mov
loop
sti
fsincos
cmpsl
lods
inc
outsb
mov
mov
call
xchg
popl
push
push
push
inc
mov
popf
insl
out
mov
mov
push
jl
mov
into
add
shll
xlat
sub
mov
cmp
mov
push
dec
rorb
jecxz
jns
sbb
sub
xor
popa
or
mov
sub
mov
imul
lea
or
loopne
mov
cmp
aam
ja
cmp
gs
adcb
sub
and
add
push
int
jo
clc
and
push
ds
mov
adc
dec
adc
cld
pop
pusha
jmp
jb
out
xor
push
aam
or
js
push
in
add
dec
rcrb
in
popa
dec
adc
push
das
adc
xor
insl
jo
rorb
xor
add
mov
and
pop
or
sbb
aad
jmp
or
sbb
stos
shr
push
movsl
movsl
cld
or
push
sub
fimuls
shll
pop
sub
mov
sub
stc
loop
test
pop
mov
pushf
lret
hlt
inc
movsb
or
sub
or
cmpsl
dec
fnstenv
dec
std
iret
xchg
into
pop
push
arpl
jl
fwait
sbb
popa
or
cmpsb
mov
jnp
xlat
add
rdmsr
mov
insl
mov
repz
cmp
js
xchg
dec
adc
sbb
push
jmp
add
sti
jge
pop
popa
test
fs
js
je
adc
push
lret
add
mov
notb
repz
push
mov
repz
cs
in
mov
repnz
mov
push
dec
push
jl
mov
push
inc
jecxz
push
adc
add
mov
push
inc
mov
jb
sbb
jmp
adc
cwtl
test
or
cmpsl
shll
xor
mov
je
les
int
imul
xchg
sub
test
fsubrp
and
jg
and
sbb
popa
pop
mov
sub
jge
push
testl
leave
mov
cwtl
jno
xor
and
xchg
mov
imul
push
clc
in
lret
lret
mov
xchg
ds
leave
xor
mov
mov
sbb
gs
fimull
jb
fisubrl
sbb
dec
mov
repnz
mov
rcl
mov
push
push
test
pop
lahf
ds
js
mov
movsl
scas
mov
movsb
sti
dec
jmp
and
mov
loopne
repnz
gs
push
repnz
iret
jbe
clc
add
pop
mov
xchg
mov
repz
jno
dec
push
add
add
add
movsl
push
movsl
shl
divl
mov
add
in
add
ret
add
jecxz
mov
lods
add
enter
pusha
add
fidivl
in
dec
iret
sbb
inc
aam
and
aaa
mov
push
decb
pop
dec
outsb
adc
pop
mov
pop
flds
lahf
pop
repz
or
sub
dec
sahf
cmp
es
ds
or
pushf
sub
data16
push
adc
enter
ror
imull
xchg
pop
push
push
shll
push
inc
pop
addr16
int3
fidivrs
and
popa
ret
out
sti
ret
push
hlt
pop
out
mov
dec
xchg
or
fsubs
push
cs
push
xor
mov
xchg
lret
xchg
or
sbb
repz
cld
push
mov
mov
sbbl
mov
addr16
or
fwait
jl
xor
push
inc
push
clc
fisttps
xor
rcll
mov
jge
enter
xchg
ret
gs
cwtl
imul
push
pop
pop
push
int
adc
pop
loopne
mov
movsb
xchg
cltd
or
xchg
push
push
ss
fwait
jae
pop
jg
jg
push
jnp
sahf
xchg
sarl
aas
cs
lcall
sbbb
adc
pop
scas
inc
nop
cmp
mov
scas
pop
das
movsl
push
out
push
add
push
pusha
cmpsb
mov
std
adc
jecxz,pn
or
out
data16
xchg
ss
cli
jbe
aam
mov
adc
and
sbb
xchg
rcll
add
mov
pop
scas
in
add
ss
mov
inc
dec
mov
inc
adc
cmp
sub
cli
jecxz
cli
int
mov
and
sub
out
cmpsl
mov
jge
mov
outsl
ljmp
pop
data16
stc
idivb
cmp
imul
call
or
pop
bound
bound
sub
mov
in
repnz
ljmp
add
jno
mov
mov
dec
mov
cmc
outsl
dec
out
jecxz
jmp
push
icebp
hlt
jo
dec
cli
xchg
adc
leave
mov
xor
cli
push
xchg
stos
pop
aad
add
bound
sbb
rolb
aas
sub
cmpsb
sub
fwait
mov
mov
mov
mov
sahf
pop
add
movsb
jbe
dec
shlb
hlt
push
daa
add
rcrl
xor
ds
sub
fnstsw
daa
subl
and
add
repnz
test
fcomip
sbb
pop
std
mov
sbb
imulb
cmpsb
ja
mov
xchg
jns
mov
push
insl
pop
pop
jge
push
das
push
call
stos
loope
xchg
push
mov
push
int
in
xchg
mov
or
sub
mov
cltd
outsb
adc
nop
incl
mov
daa
nop
sbb
in
mov
push
aad
mov
ret
jp
lock
pop
inc
imul
adc
and
and
movsb
popa
outsl
cmp
scas
add
andl
in
push
adcl
cld
orb
mov
pop
xchg
dec
inc
gs
inc
pop
add
shr
ja
inc
into
cmpsb
dec
jae
dec
mov
adc
cmpsb
jns
repz
insl
jne
gs
cld
dec
mov
lock
aad
sbb
inc
push
sbb
pushf
jecxz
lcall
jge
jl
insb
sbb
push
out
pop
cmp
xor
imul
jo
inc
mov
test
dec
sahf
sbb
vandnpd
dec
mov
lcall
iret
call
lret
aad
jle
aaa
push
pusha
adc
inc
into
cmp
pop
mov
imul
imul
pop
sub
cmpsl
mov
ret
fsubrl
cmp
mov
xor
adc
jge
xor
cltd
and
mov
pop
gs
in
aam
shll
rcll
jl
push
xorb
xchg
rclb
lcall
cmc
xchg
mov
shl
mov
cmpsb
jbe
push
mov
sbb
xor
cli
out
and
mov
jo,pn
daa
incb
xor
loopne
add
pusha
pop
xor
inc
bound
fwait
sub
mov
jl
subb
xchg
xchg
das
sub
lcall
jae
inc
rcrb
