push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
mov
add
jl
pop
jl
adc
and
popa
pusha
xlat
fs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
xchg
sahf
dec
lds
mov
jmp
std
dec
mov
lcall
enter
add
divl
aas
arpl
mov
js
lds
test
mov
jl
fistpl
ret
jge
iret
insl
lds
xacquire
sbb
dec
mov
pop
or
loopne
mov
insl
out
xor
cmp
mov
jle
fdivs
sti
loopne
addb
fisttpl
lock
push
bound
mov
dec
in
mov
mov
js
aam
mov
dec
lret
jp
sar
xor
aam
stos
cmpsb
pop
jl
ljmp
fcoml
pop
or
jmp
dec
lea
iret
out
or
test
flds
movsb
imul
enter
inc
or
idiv
test
pop
js
add
cmp
ljmp
push
sahf
dec
push
lods
jge
outsb
ds
repnz
pop
jo
mov
cli
cmp
cmpsl
repnz
pop
ja
push
into
orl
in
mov
pusha
outsl
dec
icebp
popa
mov
andb
mov
jb
inc
lods
jg
mov
lret
imul
rcrl
test
sbb
cli
mov
push
mov
dec
sub
push
sub
out
fsubl
mov
sub
out
push
stos
xchg
and
xor
dec
cmpsb
or
xchg
pop
int3
xchg
xlat
cmp
iret
sub
fs
insl
popf
sbb
push
pop
loop
push
cld
adc
pop
xchg
outsl
adc
fsubr
icebp
js
enter
push
dec
xchg
idivb
xor
sub
sbb
enter
jg
xchg
fidivrs
daa
in
and
add
cmp
and
insb
repnz
testb
hlt
xchg
insl
jp
add
mov
jmp
sub
clc
sub
sbb
cmp
mov
cmpsl
sti
cmp
xchg
filds
fimull
cmp
mov
xchg
lock
sti
shrb
pop
stc
sub
mov
je
xor
pusha
inc
cmpsl
ljmp
sbb
shll
sub
and
jno
mov
out
pop
rcrb
jp
or
lock
xchg
sbb
cmp
imul
push
test
arpl
aaa
imul
push
mov
adc
add
lret
xchg
pop
int3
pop
sub
xor
mov
xlat
outsb
push
ror
xor
or
out
mov
xor
pop
std
dec
jo
shlb
dec
mov
shll
popa
scas
ds
pop
mov
and
xchg
mov
call
xchg
adc
sbb
xchg
or
popa
pop
outsl
fadds
daa
testb
sti
not
int3
pop
cmp
pushf
out
mov
lods
loopne
inc
mov
jp
fstps
mov
push
dec
shl
and
insb
sahf
jle
lds
jp
in
fnstcw
pop
jecxz
aaa
sub
andb
xlat
mov
lds
inc
add
andb
inc
insb
cs
xchg
dec
pop
mov
sub
mov
and
mov
push
fwait
jne
mov
fst
clc
loope
push
arpl
mov
and
notb
add
pop
test
dec
fwait
and
enter
addr16
lret
lods
sbb
adcl
pop
popf
pusha
scas
ja
mov
inc
dec
inc
lret
push
shlb
jecxz
je
push
jbe
jecxz
sbb
shrl
push
shlb
out
dec
imul
icebp
out
mov
xchg
int3
mov
sub
mov
fstl
pop
cmp
hlt
bound
aas
xor
in
and
sti
repz
je
scas
insl
and
xor
mov
jecxz
dec
ret
sub
mov
into
pusha
daa
xor
lock
faddl
inc
ud1
mov
sub
jl
idivb
popf
scas
icebp
pusha
mov
pop
testb
jno
cmp
out
sbb
ficoms
xchg
data16
stos
or
mov
out
out
pop
push
add
mov
dec
loopne
adc
adc
or
sub
lock
push
lods
cmp
jae
dec
das
and
into
flds
ret
iret
popf
fs
dec
pop
cwtl
ds
hlt
std
in
mov
into
cmp
cmp
cmpsb
pop
popa
test
jae
mov
jbe
pushf
dec
and
sbb
cwtl
lds
mov
xor
push
xchg
mov
add
aad
fisttpl
stos
jecxz
push
loopne
test
mov
out
repnz
push
ret
push
test
mov
lea
jbe
stos
insl
add
sbb
inc
outsb
xor
iret
jl
adc
mov
roll
lret
stos
movsb
mov
nop
pop
mov
lret
test
jmp
es
lret
xchg
mov
dec
incb
in
and
repnz
in
cwtl
into
lea
jnp
fisubrl
jge
sbb
sub
jle
dec
pop
into
push
cmp
mov
xchg
fst
mov
pushl
aas
dec
ss
push
inc
and
mov
bound
dec
outsb
jo
in
mov
push
fs
inc
add
sarl
idiv
repz
inc
mov
xchg
fiadds
mov
pop
sti
popf
roll
mov
fbld
jae
mov
je
fstp
clc
lahf
stc
mov
push
mov
fdivl
fidivrs
push
sub
into
mov
fisubrs
imul
pop
xor
push
in
scas
mov
call
jl
stos
push
jne
jae
lcall
jno
jae
xor
xor
dec
popf
pop
bound
mov
mov
lahf
mov
adc
insb
test
in
lea
and
popa
pop
std
mov
clc
mov
mov
cwtl
xchg
dec
movsb
fxch
xor
mov
and
pop
aaa
sub
int
cmp
sub
add
cs
ret
inc
test
jnp
scas
and
xchg
xor
dec
add
adc
inc
add
pop
call
xor
dec
scas
lret
das
repnz
xor
je
ficoms
lock
mov
sub
cli
adc
aad
xor
shll
sbb
pop
cmp
mov
mov
cs
stos
test
bound
sub
mov
jl
sarl
pop
movsb
sub
xchg
shl
loopne
sbb
xchg
xor
out
js
mov
xor
cltd
lret
or
push
mov
xchg
fsubr
incl
sbb
icebp
xchg
scas
xor
movsb
cmc
lods
sub
adc
jmp
inc
sahf
lods
out
shrb
cltd
addb
xchg
dec
and
insb
pop
stos
or
in
dec
ret
jo
sbb
insb
sbbl
jne
leave
jmp
dec
es
test
test
enter
test
and
jecxz
aad
jecxz
pop
orb
leave
sub
and
insb
and
cmp
inc
fldcw
mov
inc
pop
das
add
dec
inc
dec
cmp
xor
jecxz
int
fiadds
sti
mov
and
test
testb
aam
add
lods
push
in
daa
leave
push
fsubrs
add
test
popf
test
xor
xchg
dec
mov
aam
outsb
cmpsb
adc
cmpsb
mov
shrl
and
in
cmp
gs
faddl
cmp
sbb
lahf
or
sti
sarb
subb
lret
getsec
mov
rorb
push
imulb
xor
rorb
das
adc
aad
fwait
je
dec
jl
xchg
pop
mov
xchg
jmp
inc
jmp
mov
or
mov
cmp
jbe
dec
les
filds
stos
insb
xchg
xchg
lds
sbb
and
pop
sahf
pop
sub
adc
sub
cld
rclb
xlat
cmp
push
inc
jmp
das
mov
sahf
and
jbe
sahf
lods
lock
cmp
stos
sub
adc
lea
pop
dec
mov
clc
mov
cmc
xor
int3
pop
jne
movsb
into
mov
and
outsb
lds
lcall
push
daa
fisubs
movsl
dec
popa
sarb
mov
sub
xchg
pop
add
mov
push
jg
stc
sbb
es
jno
aam
scas
in
mov
sub
push
mov
pushf
fcompl
push
or
add
out
push
push
test
or
lret
mov
out
int3
and
lods
ret
add
adc
es
pop
insl
into
push
xor
xchg
push
sub
mov
subl
mov
data16
sar
push
clc
mov
stos
test
cli
insl
adc
cmc
je
lret
xchg
lret
mov
sti
movsl
xchg
bound
js
xchg
sub
mov
arpl
lods
xchg
or
in
fcoms
mov
lods
cmpb
je
js
pusha
mov
icebp
movsb
leave
imul
lods
push
sbb
xchg
in
lret
in
ss
mov
xor
xchg
xchg
mov
dec
jb
jne
pop
adc
dec
dec
mov
out
enter
ss
cmp
rclb
fsubs
test
mov
stos
mov
lret
daa
adc
mov
fdivrs
rcrl
jmp
inc
ret
xor
sahf
daa
out
ret
jo
insb
in
clc
movsb
pusha
mov
mov
orb
xchg
fmull
dec
pop
sub
fistpl
inc
push
sbb
clc
js
pop
nop
cltd
jno
stos
loop
sbb
cmp
jge
repnz
fwait
lret
xchg
cmp
jo
out
test
movsl
cs
mov
sarb
iret
and
pop
xor
jae
xchg
into
decl
add
push
iret
xchg
stos
push
xchg
into
test
mov
hlt
insb
lea
jo
and
pop
push
fcmovbe
std
dec
push
cwtl
jmp
into
jp
shrl
cltd
cli
fmull
pop
mov
mov
or
mov
mov
xchg
and
aas
pop
fisttpl
pop
shrl
xchg
jbe
cmpsl
dec
mov
into
repz
cmp
imul
loopne
mov
dec
je
xchg
fwait
out
hlt
cld
cmpb
outsl
pushf
loope
test
cltd
hlt
cmp
xor
scas
mov
xchg
push
cltd
sub
aaa
lock
cltd
and
mov
sar
in
shlb
xlat
xor
cmc
mov
ficoml
jnp
xor
popa
mov
adc
dec
pop
adc
jne
sbb
jno
jne
out
mov
addl
and
mov
cmp
in
into
leave
dec
testb
jmp
cld
pop
cltd
dec
jle
xchg
cmp
fisttpl
add
mov
lock
and
lods
add
lret
sti
push
shll
mov
pop
sbb
jmp
cmp
insb
mov
int
mov
out
inc
lds
push
shrb
pop
sub
mov
sub
pop
pop
jl
cltd
fcomi
imul
fwait
and
std
sarb
dec
pop
inc
test
clc
fxch
hlt
data16
xor
cwtl
cmc
test
and
xor
push
fmul
push
shr
pop
xor
fldt
out
in
sahf
les
and
and
xchg
adc
aas
int3
or
cmp
scas
fs
jno
inc
in
sub
fistps
aam
popl
or
in
outsl
mov
dec
ljmp
sti
popf
daa
mov
sbb
and
cmp
stc
inc
std
insb
hlt
inc
ss
mov
mov
fsub
cmp
div
add
sarl
les
frstor
adc
mov
icebp
xor
mov
in
je
fs
mov
xchg
rcll
pop
push
jmp
mov
push
and
jne
push
pop
xchg
xor
loop
insb
aam
pop
mov
stc
pop
std
enter
add
xchg
push
add
addl
pop
cs
fs
pop
imul
dec
jo
icebp
cmpsb
leave
pop
stos
mov
rcrb
add
pop
insb
pop
in
lret
push
xlat
das
push
sub
adc
lods
dec
das
mov
mov
jle
push
sub
cmpsl
push
and
xchg
mov
subl
jge
das
add
or
add
push
fbld
test
inc
xchg
imull
addr16
xor
cmp
lret
inc
cmpsl
or
je
int
push
or
sub
andl
js
jp
mov
lret
add
in
movsb
pop
popf
xchg
enter
inc
rolb
out
loopne
outsl
add
mov
aaa
movsb
ljmp
out
inc
inc
mov
stos
cmp
push
xchg
lods
mov
mov
repnz
loope
mov
sbb
mov
xor
lods
bnd
push
add
es
sbbb
pusha
out
xchg
xlat
jmp
jb
pop
mov
lret
aad
cmp
out
in
mov
aam
imul
ret
lods
ret
nop
pusha
push
adc
mov
ja
sbb
shl
adcl
inc
ljmp
mov
xchg
and
xchg
sti
inc
aad
add
and
movsb
lea
jo
sahf
dec
std
pop
das
dec
or
mov
int
jp
nop
dec
fs
or
adc
in
flds
xchg
dec
pop
dec
push
jno
pavgb
sbb
inc
pop
and
jne
push
in
loop
add
jns
xchg
iret
push
or
mov
hlt
cmpb
xor
xchg
test
push
inc
shr
outsb
fadd
dec
test
xor
adcl
and
bound
cltd
popa
fdivrp
xor
gs
adc
pusha
pop
jmp
sub
popa
jae
aaa
ret
adc
addr16
and
push
in
mov
pop
add
and
sahf
jmp
insb
and
add
aaa
call
push
xchg
add
xchg
insb
xor
mov
adc
sbb
sbb
mov
orl
shl
lret
int3
xchg
jmp
das
mov
mov
inc
pop
aas
scas
mov
leave
jne
sbb
push
call
pop
dec
lods
mov
mov
adc
arpl
lret
pop
xchg
cmp
test
and
xchg
jno
add
call
mov
scas
pusha
mov
add
int
mov
jge
cmp
loope
cmp
ljmp
xchg
mov
adcl
or
pop
jg
stc
into
pop
js
add
insb
aad
sub
out
gs
mov
lahf
rolw
int
imul
or
mov
push
mov
and
mov
mov
mov
popa
rcll
mov
daa
mov
scas
xchg
lods
push
rclb
dec
xor
cmp
jge
mov
nop
xor
xchg
xorb
xchg
aaa
movsl
xchg
lods
or
stos
dec
or
ret
stos
sub
and
mov
pushf
inc
dec
cmc
mov
int3
jmp
test
dec
lds
loopne
dec
int
aas
jb
mov
adc
inc
mov
cmp
fs
cli
push
push
pop
add
dec
push
mov
xchg
jl
stc
faddl
movsb
sbb
call
sub
pop
bnd
jmp
mov
dec
sbbl
cmpsl
lcall
loopne
inc
shl
aam
fs
in
jge
inc
cmpsl
mov
int3
data16
test
pop
sarb
rcrb
xor
jb
adc
and
clc
popf
push
bndstx
sti
xor
inc
movsb
push
leave
std
cmpsl
and
dec
mov
loop
lcall
shlb
aam
gs
dec
orl
xor
xchg
sub
std
mov
cmp
pop
ljmp
xor
aas
push
add
loopne
inc
push
test
jnp
clc
aaa
mov
hlt
add
leave
cltd
mov
jmp
push
cld
enter
xchg
jecxz,pt
orb
inc
and
dec
push
cmp
test
mov
call
adc
fadds
rclb
jo
mov
adc
in
xchg
dec
jle
lret
stc
cmove
sbb
and
rclb
pop
shlb
stos
roll
mov
lods
lds
andl
sbb
pop
mov
inc
jno
cwtl
adc
push
sub
mov
pop
ffree
jns
push
in
pusha
xchg
mov
icebp
jp
xchg
mov
xchg
call
in
cmpsl
addr16
or
sub
sub
jle
jg
js
stos
cs
imul
mov
fstps
mov
pop
je
or
enter
mov
or
icebp
push
mov
sub
pushf
and
sbbl
and
adc
lock
and
xchg
mov
sbbb
rol
ss
push
pop
mov
mov
insb
xor
mov
or
mov
adc
jne
pushf
sub
iret
jae
dec
shlb
ja
lcall
mov
iret
lret
in
sbb
jmp
mov
sbb
out
adc
add
shrl
jo
mov
inc
jg
xchg
cmpsl
pop
inc
insb
shrl
and
int3
inc
jno
push
sarb
in
jle
in
cmpsb
movsb
cmp
push
inc
cli
sbb
lods
rcl
jbe
int
or
pop
es
je
push
pop
lret
ljmp
cmp
push
js
push
xchg
cmp
mov
jg
test
es
push
shll
ja
test
cwtl
orb
outsb
idivl
out
loop
and
or
adc
leave
out
sub
lret
jle
shlb
xchg
mov
ficompl
xchg
aad
and
mov
out
ljmp
mov
dec
iret
mov
aad
mov
pop
int
rclb
xchg
into
rcrb
inc
pusha
xchg
mov
popa
pushf
fxch
pop
aad
adc
out
repnz
call
scas
push
push
jmp
lret
in
pop
mov
out
mov
mov
mov
stos
sub
jae
sarb
cmpsb
mov
jb
push
push
or
bound
das
imul
decl
mov
dec
mov
or
or
iret
sbb
xchg
ds
call
aaa
pop
shlb
cmp
jns
rcrl
xchg
mov
mov
lock
insb
push
mov
fildl
daa
leave
cmp
and
subb
add
out
ds
xlat
pop
testl
cmp
jae
sbb
push
inc
imulb
hlt
sti
xorb
out
pop
mov
test
fdivrl
popf
mov
xor
jmp
ds
bound
popf
add
cmp
sbb
orl
and
mov
loope
mov
sbb
jb
mov
jb
add
cmpsl
movsl
lock
and
lods
mov
mov
cmp
imulb
outsb
cmp
and
ja
aas
fwait
ss
jb
ss
xlat
pop
push
add
add
fmull
push
sub
xorb
ss
and
ret
cmpsl
fdivl
dec
hlt
mov
xchg
std
movsl
into
xchg
fistpll
ficomps
xchg
sub
xor
inc
mov
jmp
jg
push
cmpsb
add
xor
dec
outsb
adc
pop
mov
mov
mov
js
xchg
test
push
mov
insl
xlat
and
hlt
in
pop
loopne,pn
js
mov
or
dec
mov
mov
push
inc
js
fs
das
inc
mov
addr16
and
daa
jmp
xor
jg
xchg
cmpsl
es
cmc
sub
sub
ds
pop
adc
ja
mov
in
adc
push
jge
mov
pop
sbb
xor
aam
decl
inc
push
ds
testb
push
scas
lcall
mov
inc
xchg
aaa
mov
mov
push
jae
dec
xorl
fldenv
jbe
pop
lahf
movsb
pop
cmp
mov
push
dec
imul
jl
push
or
ds
popa
push
mov
fiaddl
sub
pusha
in
mov
mov
int3
inc
das
jecxz
aas
test
repz
aad
fwait
lar
push
daa
je
xor
in
inc
and
cmpsb
cmc
std
mov
test
les
jo
cmpsb
jg
cmpb
cmpsb
and
push
ret
push
mov
or
mov
and
movsl
push
xchg
std
cld
repnz
push
lcall
jb
cli
pop
lds
out
and
aam
xchg
sbb
dec
das
jge
shl
pop
stc
dec
mov
inc
aas
push
sbb
adc
lcall
stos
add
in
mov
stos
sbb
add
pop
jmp
sub
add
out
popl
add
mov
cmp
jbe
lods
scas
adc
ljmp
jl
dec
mov
add
stos
inc
subl
fildll
inc
cmpsb
sbb
repz
or
push
out
gs
lret
test
adc
add
punpckhdq
shlb
add
std
cltd
inc
add
test
out
pop
jbe
call
lock
test
movsb
icebp
and
sti
or
dec
xor
data16
loop
out
cmc
dec
imul
movsl
xlat
movsl
add
nop
daa
jnp
adc
incl
inc
std
pop
lahf
mov
js
in
mov
jle
pop
adc
add
es
pop
xchg
cli
inc
pop
and
ja
ds
dec
std
fsubs
sub
lret
mov
sarl
add
lcall
lahf
rcrb
fs
pusha
push
div
stos
pushf
or
arpl
dec
add
popf
pop
fisubrs
jb
lcall
js
sahf
or
sbb
outsb
jb
ret
rclb
outsl
adc
mov
dec
into
arpl
pushl
dec
negb
or
pop
adc
popf
cmp
test
sbb
in
les
mov
mov
jbe
iret
es
dec
fimuls
mov
leave
scas
mov
dec
or
js
cmp
adc
xor
push
mov
sub
add
lret
out
sbb
aaa
sub
movsb
fbstp
xchg
add
xchg
fwait
cmpsb
lret
shll
aaa
or
add
mov
cmp
push
stos
cmp
popf
bnd
cmp
repz
mov
inc
rcrl
and
jns
jp
scas
stos
inc
dec
fnstcw
jb
aad
fdivs
loop
in
xchg
ja
ss
in
mov
or
lret
sbb
incl
add
or
mov
ja
repz
ret
cli
sbb
or
jb
movsl
loop
xor
sub
gs
ret
pop
mov
scas
adc
insl
pop
pusha
sahf
add
jnp
or
lea
mov
movsl
add
ljmp
movsl
or
stos
push
dec
scas
fstp
add
fbstp
and
sub
dec
nop
inc
xchg
sub
xchg
xchg
dec
jmp
push
rclb
inc
iret
inc
addb
out
lea
test
js
xchg
pop
dec
or
inc
rcrb
sub
lea
sub
es
push
cld
jl
cli
xor
aas
jmp
ljmp
les
jge
add
lods
hlt
bnd
pop
pop
js
push
or
mov
dec
and
pop
movsl
jge
fsts
mov
hlt
mov
popa
pop
mov
mov
test
push
nop
add
lods
push
jbe
aam
aam
sub
pop
inc
dec
dec
ret
cmp
mov
pop
lret
cltd
insb
jl
iret
fimuls
and
xchg
pop
pop
jae
stos
aaa
mov
sub
sub
imul
shll
insl
jne
cmp
fdivl
shll
mov
sbbl
movsb
cmp
or
rcrb
xor
adc
lret
jle
cmp
imul
push
test
dec
jb
and
push
and
int3
cmp
and
adc
repz
adc
popf
hlt
mov
push
pop
mov
fsubs
dec
ss
js
dec
lea
jecxz
adc
ljmp
pop
sub
and
add
xchg
ret
add
push
outsb
ret
ret
ds
fmuls
xchg
bound
add
movsl
ret
bound
fsubrp
pusha
shll
lcall
push
xchg
jo
insb
sub
sti
adc
outsb
dec
sub
inc
push
cmc
and
mov
push
out
sti
mov
inc
insl
fadd
sub
and
xchg
fsub
push
cli
mov
or
inc
rcrl
movsl
pop
sahf
mov
scas
in
das
leave
inc
and
push
jecxz
and
cli
push
push
je
cmc
cmp
fildll
data16
xlat
lcall
sbb
enter
lcall
mov
add
mov
adc
xor
popf
xchg
lret
outsl
mov
fstpt
cli
inc
ljmp
ja
dec
pop
inc
scas
add
enter
repnz
mov
mov
movsl
clc
xchg
mov
mov
shlb
xchg
in
mov
popa
and
adc
push
push
mov
fldcw
je
into
movsb
daa
lret
popl
loopne
xchg
push
inc
pop
xor
jo
or
cmp
push
mov
fsubp
test
cli
stos
shr
inc
jb
sbb
add
ret
jg
and
xor
call
mov
scas
mov
cld
push
dec
test
cwtl
sbb
cmpsb
fnstsw
not
xchg
push
push
iret
mov
sub
jecxz
mov
dec
lds
inc
lods
aam
icebp
dec
xchg
jns
sbb
inc
jmp
roll
dec
jmp
pop
adc
push
or
mov
jbe
xchg
sahf
bound
iret
arpl
gs
and
es
pop
mov
push
adc
mov
pop
mov
xor
push
pusha
cmpsl
ret
push
mov
xchg
cmpsl
xor
mov
shrb
in
sub
xchg
scas
dec
push
idivl
push
inc
mov
fistpl
jg
std
xchg
lret
int
adc
cmp
xchg
or
inc
cltd
enter
fstpl
ret
mov
testl
nopl
into
jmp
dec
sbb
lds
adc
adc
loop
xchg
inc
and
push
dec
pop
lds
pushf
sub
shll
les
jge
dec
adc
xchg
sbb
sub
sahf
gs
push
stc
rcrb
mov
outsl
cmpxchg
sbb
das
lds
pop
ljmp
fimull
clc
mov
mov
das
test
adc
add
inc
mov
clc
and
lret
insb
shll
and
cmp
adc
adc
jne
out
in
adc
mov
mov
mov
adc
pop
fs
call
xlat
push
adc
out
mov
out
andl
and
ss
mov
jb
lock
nop
adc
push
adc
lcall
xor
add
stos
mov
dec
std
mov
mov
lock
and
add
popf
or
js
push
or
jge
decl
repz
pop
jl
inc
fiaddl
sbb
loope
xor
or
or
jge
xor
lcall
and
fnstcw
aaa
mov
lret
mov
mov
hlt
push
and
stos
test
jmp
cltd
jne
and
mov
ljmp
mov
push
pop
lahf
sbbb
push
push
push
pop
add
ja
shrb
aaa
inc
aas
lret
int
inc
xor
mov
stos
call
ret
subl
xchg
jbe
scas
inc
jp
int
xor
push
scas
and
pop
mov
jg
aam
idiv
jne
mov
data16
fildl
mov
movsb
lock
push
jnp
dec
sub
inc
or
jp
stc
aam
lods
enter
or
xor
mov
hlt
jb
dec
lcall
xor
pop
jp
imulb
xor
sbb
stc
out
and
repz
jmp
inc
xorl
mov
sub
push
xor
push
mov
sbb
and
mov
dec
xchg
pusha
dec
aaa
add
lds
sbb
scas
or
dec
lods
pusha
or
mov
xor
or
imul
dec
mov
inc
aad
cmp
std
and
lahf
lret
add
adc
aaa
sub
mov
xchg
sub
add
adc
cmp
mov
sbb
and
and
jg
iret
and
loopne
mov
push
add
jae
mov
insl
mov
jp
enter
xlat
push
lret
jb
aam
xchg
mov
test
cmp
mov
test
nop
adc
mov
cltd
add
lock
aaa
xlat
cwtl
push
je
cmp
loope
lock
push
and
repnz
pop
shll
and
xor
sti
adc
add
mov
in
test
inc
jle
ffreep
je
xor
mov
js
mov
and
pushf
bound
mov
xchg
test
nop
ds
cmpsb
jl
sub
repz
or
call
loop
fisubl
int
mov
jl
call
out
mov
add
mov
mov
adc
mov
sbb
xchg
sti
pushf
xor
in
mov
xor
sti
call
les
pop
add
dec
out
fcmovnb
es
cmp
and
pop
mov
js
xchg
and
mov
clc
jmp
jg
decb
and
jge
adc
adc
add
adc
fsubrs
lahf
mov
jl
jmp
sub
add
das
mov
icebp
in
dec
pop
jmp
bound
les
popa
cs
or
repnz
mov
xor
test
add
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
es
mov
pop
jl
dec
pop
jl
mov
addb
mov
arpl
adc
mov
dec
mov
testl
js
lcall
push
push
mov
nop
pop
xchg
cmp
xchg
adc
in
add
pop
mov
loopne
and
sub
in
and
cwtl
aas
mov
or
mov
mov
mov
mov
lock
pusha
pop
shlb
adc
outsl
enter
jle
jl
in
idivl
inc
dec
add
fstpl
sbb
sub
mov
adcb
jb
jge
mov
push
lock
dec
subb
and
cmpsl
addl
push
ljmp
shll
movsl
lahf
jmp
sub
scas
cwtl
int
lock
sahf
xchg
popf
adc
inc
scas
out
in
mov
jg
decl
ficoms
dec
jp
xor
sbb
and
cs
jge
jg
imul
pop
xchg
cmp
and
iret
imul
xchg
xlat
cmp
push
xor
lcall
movl
ja
aam
inc
mov
xor
mov
ja
out
xchg
in
jbe
push
call
and
outsb
lea
mov
adc
jmp
xchg
pop
push
and
inc
xor
dec
cmpsb
and
jo
mov
lods
xchg
in
out
scas
icebp
cmc
push
sbb
or
nop
mov
imul
inc
add
insl
test
jl
xchg
testb
dec
sub
pop
mov
sahf
insb
sub
in
or
icebp
or
dec
xor
sbb
mov
mov
pop
xor
xor
cmp
movsl
xor
xor
xchg
adc
cld
hlt
pushf
shlb
jbe
xchg
in
jl
xchg
pop
sarb
xlat
out
pop
add
or
push
rcl
fwait
gs
mov
loopne
jne
int3
aaa
mov
mov
shl
cs
pusha
or
jmp
mov
dec
or
lods
sbb
hlt
pop
addr16
and
stos
das
pusha
je
inc
push
ss
lods
gs
les
shll
in
dec
fisubrl
outsb
cmp
sub
addr16
dec
mov
sti
jg
testl
es
sarb
aas
nop
xchg
sub
sbb
mov
sub
subb
lods
pop
ja
gs
inc
cmp
inc
mov
sbb
sti
xor
stos
cmp
ds
adc
rcrl
mov
dec
mov
inc
test
push
sbb
sbb
shll
aas
inc
loop
addr16
stos
daa
pop
nop
hlt
iret
inc
or
insl
addr16
fstps
pop
popf
int3
pop
movsb
and
icebp
xchg
int
push
mov
inc
mov
scas
dec
push
and
fsubrs
or
adc
sbb
jge
das
lret
and
jl
cmp
mov
lcall
xchg
dec
je
daa
mov
insb
and
scas
mov
call
adc
movsb
xor
cld
bound
cmp
outsl
jmp
lret
fcoms
xchg
cmp
int3
dec
xchg
mov
hlt
jmp
mov
mov
mov
and
inc
add
mov
repz
sub
mov
push
pop
ret
and
xlat
push
std
paddb
mov
dec
mov
mov
xchg
push
test
into
jg,pt
sub
jmp
ss
pop
popf
lods
test
push
xchg
xchg
pop
xor
mov
and
cltd
insl
jae
popf
mov
imul
sub
dec
lock
out
ds
popf
lea
cmp
pusha
add
sbb
dec
xchg
lcall
inc
cltd
ss
sub
loopne
push
in
cmp
and
cli
inc
adc
mov
sub
jne
sti
sti
jnp
cmp
inc
ds
cli
ret
dec
icebp
into
pop
rolb
jle
pushf
lcall
mov
out
inc
sub
mov
pop
movsb
xchg
mov
mov
stos
sub
sub
insl
popf
cmc
mov
roll
lcall
jle
sbb
faddl
movsb
js
mov
add
hlt
popa
fists
mov
xchg
adc
and
xchg
pusha
iret
jnp
dec
ljmp
lret
lock
xor
in
pop
xchg
rcrl
lahf
mov
cmp
push
incl
xchg
adc
imul
fisubrl
add
repz
or
in
call
insl
jae
dec
sub
dec
test
into
mov
das
filds
aam
in
mov
jne
dec
dec
mov
pop
jg
adc
rcl
mov
lcall
dec
mov
cmp
test
dec
or
scas
inc
cmp
mov
js
aaa
pop
or
or
in
jnp
sbb
inc
fidivrl
or
popa
push
inc
nop
xlat
mov
pop
jae
movsl
sub
out
dec
out
ret
sbb
movsb
inc
lcall
xchg
lea
roll
shlb
addr16
xchg
loopne
fdivrs
mov
test
call
xchg
push
jb
dec
fsts
adc
or
cmp
popa
aam
mov
sub
es
hlt
mov
cmp
push
jo
nop
ljmp
stc
ja
mov
stc
movlps
es
dec
jecxz
aam
cmp
mov
icebp
lcall
jae
xchg
shlb
repnz
ret
adc
pop
filds
outsl
mov
lret
call
ret
jae
cmp
jae
cmc
arpl
js
and
fstps
xchg
icebp
loopne,pt
inc
stos
cltd
pop
pop
push
pop
test
sbb
movsl
xor
pushf
cltd
enter
mov
jno
movsb
icebp
lds
pop
dec
sbb
pusha
push
mov
mov
jmp
xor
or
popa
jbe
sub
in
sbbl
jp
jmp
jecxz
les
sub
in
fidivrs
and
ret
imull
dec
mov
push
ret
gs
pop
push
inc
pop
pop
push
popa
fsubrs
je
xor
arpl
ret
divb
sbb
rorl
add
aaa
lods
cld
das
pop
pop
pop
pop
out
mov
sub
add
test
dec
jl
fsts
repz
push
daa
push
add
push
cmpsb
out
push
into
and
and
jo
clc
and
fstps
mov
je
ret
ja
outsb
pushf
std
mov
inc
imul
ror
and
adc
inc
pop
adc
push
f2xm1
push
sub
pop
in
inc
test
dec
das
mov
aad
mov
stc
stc
test
mov
add
stos
rcrb
cmp
movsl
ss
push
cld
dec
mov
into
out
fidivs
push
mov
adc
insb
dec
je
mov
or
jb
push
mov
jmp
and
cmpsb
roll
or
cmp
nop
js
loop
dec
inc
ret
lock
das
out
lock
sub
mov
cmp
shl
add
out
cld
adc
test
pop
or
call
inc
mov
cmp
xor
pop
jb
imull
xchg
leave
mov
outsl
loope
hlt
js
inc
xorb
mov
in
js
in
mov
arpl
sbb
loope
movsb
mov
orl
mov
jmp
pop
xchg
xchg
jbe
fbstp
cmp
divb
shlb
jo
icebp
sahf
mov
std
add
sub
insb
pop
lcall
in
pop
addr16
clc
sub
jbe
and
bound
or
pop
loop
dec
iret
pop
fdiv
push
mov
lea
lahf
ret
leave
mov
mov
adc
mov
lret
rcll
or
or
in
push
dec
call
mov
bound
inc
xchg
xchg
cltd
imul
xlat
push
or
mov
dec
jl
jp
adc
xchg
xchg
arpl
lret
pop
dec
dec
jbe
push
sbb
sub
pop
orb
cmp
jae
xor
or
subb
push
popa
pop
xchg
shlb
add
in
sti
and
filds
sbb
fldcw
lods
aaa
pop
dec
pop
mov
xor
cmpl
leave
mov
scas
mov
xchg
mov
jg
push
je
pop
jno
loop
push
add
ret
sub
add
call
sbb
mov
fmull
es
lds
pop
push
or
test
mov
push
cmp
je
mov
push
jp
sbb
aam
pop
xchg
movsb
int
and
jg
dec
outsl
sti
dec
decl
cmp
inc
fisubs
cmp
aaa
xchg
add
mov
cs
pop
loopne
pop
fld
mov
adc
push
sub
pushf
push
sahf
jno
rorb
inc
push
mov
nop
nop
sahf
xchg
push
lods
test
pop
mov
imul
cmp
mov
and
jne
pop
test
add
testl
cmp
adc
mov
int
adc
stos
mov
xchg
mov
scas
pop
es
stc
fisttps
adc
xchg
xor
and
rcrb
in
shlb
sub
insl
jb
pusha
ljmp
lret
adc
jecxz
in
add
xchg
inc
repz
dec
inc
lret
sahf
inc
dec
cs
push
mov
ds
jno
cld
popf
test
test
sbb
mov
pop
stos
adc
sbb
or
mov
popa
mov
push
int
sub
loope
jne
data16
cltd
adc
lahf
push
add
jno
adc
icebp
testl
into
fsts
xor
mov
cmpsb
pop
cld
movsl
inc
cs
inc
sub
and
mov
bnd
lods
and
stc
popf
dec
xchg
cmp
xor
fdiv
jnp
cld
loop
in
xor
xlat
adc
lea
xchg
shrb
cli
movsl
sti
mov
std
stos
ljmp
sahf
lea
mov
lea
call
aad
lret
mov
cli
mov
push
les
push
out
inc
mov
insb
or
outsl
push
stc
mov
out
cmpsb
test
jbe
sbb
xchg
ds
cmp
data16
jle
jnp
sar
sarl
xor
lret
pop
adcl
dec
enter
pop
addl
xor
fbstp
mov
sbb
enter
fldt
test
fmul
fisttps
and
pop
sbb
insl
xchg
xlat
push
pop
mov
fbstp
fld
cltd
stc
sbb
cmp
jnp
je
mov
dec
xchg
scas
popf
push
out
inc
lahf
inc
cs
jns
inc
cmp
xor
adc
lock
inc
das
les
push
dec
dec
shlb
xchg
das
pop
hlt
mov
adc
xchg
xchg
pusha
mov
in
mov
jno
jl
dec
icebp
cltd
sub
inc
fs
data16
adc
leave
inc
inc
ljmp
arpl
adc
adc
lds
push
js
xor
mov
ljmp
fidivrs
scas
rclb
and
add
add
repnz
or
daa
mov
and
jb
xchg
into
outsl
in
jle
loope
ret
negb
testb
push
outsb
push
movsl
jl
popf
push
dec
dec
add
insl
xchg
fimull
jo
fdivs
sbb
or
das
ja
out
shrb
dec
jo
inc
sub
xor
lods
mov
mov
sahf
pop
inc
insl
xor
bound
push
xchg
xchg
pop
out
inc
mov
mov
shll
mov
add
pop
fisubrl
std
lea
js
rolb
mov
and
and
jge
pop
add
jp
outsl
xchg
pop
lret
cmp
mov
adc
mov
nop
je
stc
sbb
cmpsb
push
pop
push
sub
xor
cmp
lods
push
ret
dec
outsl
pop
dec
icebp
aaa
stos
jbe
push
out
gs
sbb
push
lcall
mov
mov
push
jle
push
cmpsl
mov
loopne
jbe
rclb
pop
rcr
arpl
and
jno
mov
test
out
cwtl
sbb
in
shll
push
pop
rcrb
je
push
cld
push
dec
shll
inc
dec
pop
icebp
inc
cmpsl
ja
icebp
hlt
mov
fsubrp
lahf
push
jne
loope
mov
adc
sub
xorb
cltd
mov
mov
scas
rcl
movsl
push
xchg
push
shll
cs
in
or
sbb
fistl
add
ficoml
cmpsb
jo
add
jnp
adc
clc
shll
out
add
mov
push
xor
dec
jp
mov
add
jl
scas
sbb
aas
je
xor
rcrl
or
push
dec
cs
leave
ljmp
fmull
imul
hlt
pop
sub
data16
andb
cmp
inc
cmc
push
cmp
popa
aam
cmpsl
mov
sub
fsts
popa
rorl
or
jo
je
imul
int
jae
xchg
popf
flds
std
cvtps2pd
adc
mov
xchg
sti
mov
les
addr16
and
add
dec
pusha
pop
cmp
cmpsb
push
sbb
sahf
adc
push
lcall
rolb
movsl
loop
cmp
mov
lahf
xor
and
rorl
add
pusha
jbe
mov
mov
cmpsl
nop
ror
loop
push
lods
into
lahf
sbb
or
mov
cltd
dec
test
and
sbb
mov
dec
std
addl
out
xchg
pop
mov
pop
xor
enter
push
xchg
mov
in
or
bound
mov
sbb
int
cmp
pusha
jno
shr
cmp
or
or
sub
adcb
mov
xchg
inc
ret
jb
push
mov
sub
push
dec
mov
and
dec
lcall
pusha
pop
outsb
cmpb
inc
rol
addr16
in
jg
ret
out
push
addr16
sub
push
cmp
mov
jle
cld
sti
mov
lea
or
push
and
jae
sbb
pop
push
mov
les
mov
fistpll
and
mov
mov
mov
imul
mov
sbb
std
cwtl
scas
inc
and
daa
pop
jns
dec
bound
mov
adc
or
call
xchg
sbb
pop
mov
add
in
mov
negl
mov
daa
lods
aad
mov
adc
add
pop
pop
mov
add
jl
push
test
sarl
cmp
push
lds
lock
sbb
mov
xor
add
lds
and
pop
clc
dec
and
popa
mov
pushf
ljmp
xor
fistpl
xchg
loopne
pop
fists
pushf
inc
repz
test
add
adc
xor
lahf
push
cmpsl
pop
push
pop
mov
lods
movsl
cli
cmc
lods
push
mov
mov
mov
subl
ljmp
cmc
gs
sahf
adc
mov
xchg
xor
out
xlat
ret
in
test
sbb
dec
enter
dec
lods
mov
gs
inc
adc
sbb
arpl
fsubrl
rcrl
negb
dec
jo
add
cmp
mov
and
daa
push
inc
inc
ror
sbb
inc
leave
lret
sub
cmp
push
out
sar
idivb
not
xchg
sbb
mov
je
dec
sbb
fsubs
es
push
shlb
adc
and
fcomps
popa
cld
cmpsl
push
enter
sub
lcall
ret
sbb
dec
lahf
aas
xchg
jmp
xlat
ljmp
mov
mov
gs
and
cmpl
loop
fistpll
jle
dec
into
stos
jl
outsl
or
xchg
xor
mov
aas
bnd
jnp
test
and
push
mov
cmp
sub
imull
subb
cmpb
lds
out
lods
mov
repz
inc
jnp
dec
push
and
in
ljmpw
xchg
mov
scas
aad
test
mov
xchg
je
xchg
idivb
mov
pop
into
test
fcomps
push
mov
out
gs
outsb
or
sahf
mov
iret
test
aad
mov
push
imul
add
xchg
pop
popa
or
add
leave
sub
repnz
mov
imul
dec
push
in
add
daa
outsl
mov
cwtl
stos
in
loopne
adc
les
or
mov
adc
xor
in
outsb
divl
jge
dec
and
mov
repz
sub
pop
push
fcmovu
testl
das
outsl
push
push
jg
fwait
adcb
lcall
aad
clc
repnz
mov
sahf
stos
mov
and
call
daa
std
sbb
jg
enter
sbb
add
rorl
filds
addr16
xor
test
mov
into
push
push
fnstenv
push
mov
loop
xchg
ds
ljmp
jbe
arpl
repz
pop
icebp
ret
loopne
insb
std
jae
ret
pop
ss
fcomps
sar
lahf
test
jecxz
js
cmp
push
lea
cmp
push
bound
jp
lcall
and
movsb
sub
das
dec
xor
inc
mov
cmp
xchg
stc
mov
imul
mov
inc
pop
pop
or
mov
jmp
mov
out
aad
xor
shlb
movsb
gs
push
insb
lods
out
cmp
outsl
cld
xchg
mov
out
lods
inc
or
mov
cmc
xchg
jne
jne
out
cld
jo
pop
sbb
bound
mov
aaa
xchg
pop
iret
scas
js
subl
mov
cwtl
cltd
in
mov
inc
daa
sbb
sbb
mov
mov
xor
and
add
lea
lds
add
nop
mov
lret
add
sub
add
mov
popa
xchg
mov
jmp
lcall
scas
ss
lahf
aad
sbb
ja
les
cmpsb
rorl
jno
stos
shll
inc
and
fmull
xchg
repz
push
imulb
xchg
push
sbb
cmp
xchg
cmp
int3
les
jp
das
out
ljmp
cltd
jge
testl
pop
scas
loope
lcall
jnp
fwait
xor
push
pop
out
adc
ret
push
bound
test
mov
xchg
xchg
xor
flds
sbb
movsl
adc
inc
ja
sub
pop
iret
or
xchg
mov
pop
adc
sti
cltd
in
xchg
movb
and
sub
jae
and
and
push
in
pop
ds
lods
stc
dec
push
cwtl
stc
mov
pop
in
lahf
jns
dec
adc
dec
push
xor
test
popa
push
loopne
mov
mov
test
pop
gs
sub
pop
pop
and
cmpl
jns
stos
mov
andl
jmp
loopne
scas
cmp
dec
sbb
cwtl
mov
sub
mov
aam
jo
dec
pop
and
sarl
das
adc
dec
cmc
bnd
loope
jae
outsl
cwtl
mov
mov
je
test
fwait
cmp
xchg
ret
int
push
cmp
mov
test
aad
mov
pop
leave
add
jae
test
test
add
dec
push
inc
mov
add
push
xchg
lods
pop
out
push
xor
pop
fdivp
adc
test
or
call
sti
cmpsb
rcrl
sahf
sbb
mov
and
cmpsl
nop
push
mov
xchg
leave
sbb
stc
and
mov
and
stc
jl
sbb
es
inc
fnstenv
inc
mov
mov
ret
xchg
xor
bnd
jae
pop
addr16
fwait
mov
lret
hlt
sbb
mov
mov
rcrb
rorl
push
push
mulb
lea
xchg
push
fs
mov
mov
nop
mov
ret
mov
lock
inc
jp
mov
sbb
sub
jnp
xlat
cmp
jne
sbb
dec
lret
imul
rcrl
lahf
scas
add
lods
mov
push
adcb
leave
mov
jle
inc
pop
jnp
mov
js
fwait
les
icebp
into
aaa
inc
rorl
out
aaa
mov
shll
movsl
stos
xchg
mov
mov
nop
push
lret
pop
fidivs
mov
in
fstpl
adc
pop
inc
mov
and
inc
gs
jns
or
pusha
jbe
jno
and
mov
or
mov
mov
jbe
mov
je
in
jbe
and
add
ret
fwait
mov
mov
mov
in
push
leave
outsl
clc
dec
repz
dec
pop
sbb
jae
mov
pop
std
sub
and
out
dec
sti
xor
out
pop
xor
mov
dec
call
cmc
scas
sub
dec
mov
adc
mov
lret
and
xchg
daa
js
adc
shlb
fbstp
pop
jne
xor
adc
cltd
jne
jl
xchg
pop
jne
sbb
add
mov
fldcw
adc
lods
in
ss
rol
xchg
fstp
clc
sub
enter
mov
jl
mov
rorl
sub
and
andl
popa
notl
push
cmp
addr16
cltd
inc
jo
cmp
lahf
dec
or
push
add
into
fdivrs
push
xor
sbbl
push
test
adc
ljmp
dec
movsb
jle
inc
mov
and
in
movsl
outsb
jne
ljmp
dec
mov
out
sub
push
mov
inc
cli
out
mov
rorb
je
jno
xchg
dec
mov
adc
inc
and
cmp
sbb
popa
xor
mov
pop
idivl
sbbl
cmp
insb
out
ficompl
xor
add
dec
sbb
shl
std
stc
adc
lcall
pop
sbb
push
loope
inc
lahf
push
pop
js
jno
xlat
or
push
and
sbb
cltd
mov
test
inc
or
clc
mov
sub
sub
xor
xchg
jnp
clc
jno
ljmp
sbb
jae
add
scas
add
bound
sub
sbb
xor
add
negl
rcll
retw
adc
lcall
adc
pop
negb
xor
pop
sub
in
jns
movsl
loop
fnstsw
cmp
arpl
inc
jg
mov
out
jb
rorl
pop
adc
fadds
and
inc
xchg
rcl
dec
movsb
insl
mov
enter
push
mov
data16
xchg
fwait
int3
ds
xchg
sub
lcall
sbb
mov
mov
ds
into
dec
out
mov
cli
cwtl
adc
dec
negl
dec
xor
das
loopne
xor
test
out
inc
pop
insl
or
jae
mov
mov
das
xchg
pushf
in
mov
xchg
cld
shrb
addb
int
jnp
std
xchg
mov
add
test
pop
jecxz
or
popf
or
mov
inc
and
mov
loope
mov
aad
adc
jb
scas
lds
sub
add
or
in
add
mov
add
pusha
out
push
sbb
push
mov
data16
call
in
mov
push
cs
push
pop
cmpsl
clc
mov
and
jbe
hlt
dec
xor
jl
or
mov
xor
mov
add
pop
inc
xchg
nop
sarb
and
cmp
pop
xchg
daa
sub
repnz
xchg
repnz
inc
bound
in
mov
dec
push
negb
shrl
dec
sarl
imul
fs
out
sbb
add
sbb
rolb
pushf
in
sbb
lds
loop
push
sbb
fs
adc
int
ljmp
fstl
rcll
scas
test
jo
sbb
rcll
inc
loopne
pop
inc
es
dec
scas
mov
push
mov
out
and
mov
lds
jmp
test
mov
insl
popf
mov
aad
jno
rorl
fnstsw
outsl
test
clc
jo
xchg
xor
imul
cld
mov
pop
dec
and
mov
std
hlt
int3
push
add
outsb
test
ja
into
cmp
or
jb
vpsubsb
ss
lock
incl
cmp
jb
xor
aam
subb
test
testl
mov
mov
xor
mov
push
in
shll
mov
popa
mov
mov
jnp
aas
adc
mov
jns
xor
sbb
bswap
aaa
dec
sbb
bswap
add
push
sarb
xchg
sub
rcrl
push
inc
or
pop
xor
aas
add
dec
xchg
cmp
test
adc
push
out
dec
push
inc
dec
push
mov
push
in
sub
fidivrs
shlb
out
pushf
pop
inc
xor
subl
in
aas
jns
iret
rcrb
lock
mov
cmp
mov
hlt
lods
out
mov
cmp
subb
jle
adc
xor
mov
icebp
mov
push
and
mov
into
mov
sub
fnsave
and
push
iret
cld
or
cmp
mov
adc
std
in
cmpsl
stos
cmp
cmp
jmp
fldcw
dec
add
rcrb
xor
dec
dec
mov
test
ja
pop
mov
mov
or
xor
in
enter
dec
mov
adc
mov
cmp
pop
iret
jo
adc
mov
inc
mov
rcr
pop
jmp
lret
stc
or
addl
out
je
fisttps
out
ret
lods
movsb
inc
push
adc
stc
out
sbb
sti
test
sti
mov
dec
dec
cld
out
sbb
ljmp
cmp
cmp
cmp
inc
fists
test
loope
xchg
iret
mov
lret
repz
repnz
or
xchg
inc
mov
adc
int
mov
pop
mov
mov
stos
push
xchg
xor
mov
stos
sbb
dec
sub
out
imul
sub
or
lds
in
les
cmpsl
push
dec
stos
cmp
cmp
pop
ds
inc
mov
dec
mov
test
mov
insl
inc
cs
pop
xor
mulb
fs
or
pop
fwait
insl
fst
and
jp
sbb
or
pop
inc
pop
int
ret
movsb
stos
stc
call
imulb
jp
push
jbe
movsl
add
test
jge
lods
sub
inc
mov
sub
inc
in
sar
addb
jno
mov
shlb
fs
cmp
repz
dec
jmp
les
cmp
lds
pop
ss
and
adc
mov
jbe
js
bound
dec
pop
decb
dec
adc
xlat
cmp
sbb
outsb
push
insb
mov
stos
or
and
mov
fiaddl
sub
add
mov
xchg
dec
inc
or
adc
push
cmp
pushf
xor
xor
bound
xchg
add
pop
popf
push
push
pop
enter
int
lahf
jae
or
in
cmp
insb
ss
nop
push
pop
xor
jno
add
jmp
or
add
pop
and
out
lret
loope
mov
mov
adc
lds
dec
or
inc
xlat
cmpl
fcomps
repz
mov
les
push
push
js
arpl
sahf
inc
pand
sub
subl
hlt
adc
or
dec
lcall
mov
lahf
push
mov
sti
jne
pop
pop
insl
xchg
sub
imul
aad
stos
hlt
adc
xchg
ds
or
fisubrl
jns
sbb
stos
hlt
push
pop
jnp
popf
movsb
loop
fbld
dec
dec
pusha
mov
popf
dec
mov
imul
jae
dec
fsubs
shll
adcb
jne
add
data16
aaa
cmp
mov
sbb
shll
sub
add
sbb
lock
xor
mov
cmp
stc
xchg
xchg
nop
data16
adc
pop
jecxz
aas
xchg
or
and
inc
cmpsl
rorb
xor
cwtl
push
and
and
sti
sbb
in
in
loop
mov
xchg
jne
les
xlat
mov
lods
mov
aaa
mov
adc
mov
loope
mov
xchg
jge
pushf
in
mov
icebp
repnz
and
inc
mov
sbb
rorb
int
and
les
lahf
scas
ja
lret
arpl
in
cltd
xor
push
repnz
jg
pop
xchg
inc
in
sbb
mov
inc
jo,pn
loope
cli
clc
mov
icebp
fsubrp
pop
pmaddwd
inc
iret
pop
mov
push
mov
lds
xchg
inc
cmp
imul
fwait
stos
nop
xor
divb
jnp
test
jle
std
jl
stos
sub
popa
leave
jecxz
repz
insb
pop
cwtl
mov
inc
insl
mov
pop
iret
and
mov
fbstp
stc
outsl
cltd
or
mov
cli
iret
ss
pop
cvtpi2ps
lds
fs
add
xchg
inc
in
jl
mov
push
lea
out
data16
sahf
shll
lods
cmp
pop
dec
ss
repnz
fsubl
imul
mov
mov
mov
fadds
jp
mov
fsubrl
out
outsb
nopl
or
adcb
daa
fdiv
test
loopne
mov
idivl
mov
cmp
and
inc
cmc
inc
mov
imul
fs
xchg
imul
icebp
adc
into
inc
xchg
sbb
xchg
mov
out
sbb
push
cld
cmc
pop
mov
inc
aam
hlt
bound
iret
call
inc
inc
lock
subl
jae
pop
pop
xor
stos
push
in
inc
fsubr
dec
dec
add
pop
rolb
add
mov
push
enter
adc
fists
push
insl
adc
mov
enter
loopne
mov
inc
add
dec
and
add
mov
sbb
gs
cmp
pop
jl
scas
lea
sbb
in
ljmp
xor
jno
scas
inc
add
jp
stos
jl
xchg
inc
sbb
pop
mov
xchg
mov
movsl
insl
divl
sub
jmp
incb
mov
in
ljmp
pop
int3
push
lods
rclb
cmp
cs
pop
xchg
mov
nop
mov
jp
mov
ds
lea
add
int3
mov
in
test
pop
xchg
ficomps
and
in
mulb
add
and
loop
repnz
stos
sbb
idivl
mov
shlb
cmp
js
jmp
xchg
sbbl
call
shrl
clc
mov
xchg
lods
jae
xchg
push
mov
insb
and
int3
and
hlt
leave
dec
fmul
gs
add
cwtl
insb
cmp
xchg
pop
aas
mov
jecxz
iret
mov
sbb
mov
in
cmc
jb
lods
lods
in
push
mov
inc
adc
pop
adc
add
lret
sbb
jne
xchg
xlat
xor
cli
add
enter
jmp
sbb
cmpsl
xchg
nop
push
cltd
lcall
and
adc
xchg
xchg
lea
or
sbb
xor
data16
lods
repz
pop
sbb
std
test
adcl
add
inc
int
xor
je
sub
clc
sbb
shrb
dec
pop
sbb
sbb
out
jb
in
fstl
xor
dec
imul
negl
mov
jno
andl
in
ljmp
xor
mov
ret
mov
add
adc
add
or
popa
mov
cmpl
mov
cltd
aas
xchg
mov
out
subb
loopne
fdivp
js
ficomps
scas
cmp
in
inc
idivb
add
jae
mov
pop
cli
in
jecxz
das
inc
rclb
lea
imul
pop
in
movsb
inc
loop
sub
cmp
ds
les
xchg
xchg
jno
sbb
add
jl
test
pop
stc
mov
stos
inc
jb
lahf
in
or
fs
ljmp
js
insb
pop
pop
sbb
ss
das
xchg
cmp
or
jo
stos
cmpsl
jbe
clc
repnz
dec
daa
shlb
rcll
pop
mov
inc
push
sub
push
add
jae
and
mov
sbb
sbb
fidivl
mov
scas
sbb
mov
btr
dec
inc
push
lret
fcomps
xor
ror
cmp
in
gs
adc
mov
sub
add
jnp
lods
and
mov
inc
or
push
or
shrl
daa
fldl
mov
test
int
outsb
xor
lea
cmp
fsub
lods
insb
fucomip
sub
pop
movsb
data16
jecxz,pt
rol
jmp
orl
std
test
pop
sub
inc
incl
cmpsb
adc
popf
fstl
cmp
jnp
xor
scas
cmp
inc
rorb
fldz
sarb
sarl
aad
inc
leave
mov
sub
pop
popa
lods
xor
ds
push
mov
movsb
and
push
cwtl
aam
dec
mov
adc
push
jp
js
lds
sub
jne
jp
sbb
hlt
les
and
ja
fcomip
or
cmpsl
xchg
imul
testl
repnz
and
inc
sahf
push
mov
ss
clc
in
cmp
test
loopne
inc
cwtl
js
movsb
fisttps
loop
popa
test
es
ja
or
bnd
push
jno
push
or
jg
mov
pushf
mov
rolb
pop
inc
and
aad
mov
pop
cld
outsl
rclb
dec
jle
xchg
pushf
or
wrmsr
inc
leave
call
pushf
out
lods
mov
add
xor
inc
inc
and
repnz
and
pop
ds
cmp
push
add
sahf
mov
fwait
gs
mov
cmp
or
xor
shll
xlat
jp
sbb
jp
pusha
push
mov
sub
and
cmp
cmpsb
shll
mov
or
jbe
mov
dec
sub
push
sub
cmp
repz
out
fisttpll
movsb
aam
nop
je
data16
jo
mov
scas
cmp
xorb
mov
xchg
jb
sub
cmpsl
add
sub
or
fstps
sbb
leave
test
aas
pop
xchg
mov
xchg
mov
in
cmp
xchg
int
jo
scas
shl
jge
pop
leave
mov
jo
lea
pop
add
dec
hlt
or
sahf
test
ret
lahf
cmpsb
cmp
mov
pop
leave
ficompl
jge
cmc
and
test
test
cmp
pop
dec
and
jp
out
mov
or
test
pop
add
and
mov
data16
or
inc
std
jo
pop
gs
cmpsl
xchg
inc
mov
adc
mov
mov
jns
insb
addr16
cmpb
add
flds
mov
xchg
sahf
xor
movsl
ljmp
or
pop
nop
xchg
jge
adcb
push
mov
in
pop
int3
sahf
loopne
outsl
cwtl
aam
jle
arpl
aaa
std
outsl
adc
xchg
fcompl
rorl
jmp
aad
pop
andb
rcrb
fildll
addr16
shlb
sub
adc
mov
js
pop
xchg
pop
fsts
adc
jns
aas
pop
test
mov
pop
mov
dec
sbbl
xlat
inc
daa
xchg
call
sub
xchg
dec
jae
sbb
in
jg
jbe
pop
or
lret
adc
sub
sub
xlat
leave
sbbl
jecxz
stos
mov
les
je
push
je
je
xchg
pop
xchg
testl
rcrl
xchg
int
mov
xchg
outsb
es
inc
xorb
dec
jne
and
testl
xor
mov
icebp
in
adc
daa
and
push
icebp
nop
lret
add
xor
das
movsb
push
hlt
loopne
out
stc
xchg
mov
inc
cltd
test
or
xor
into
mov
enter
mov
stos
popf
mov
lahf
push
and
xlat
mov
dec
and
and
add
imul
flds
mov
ljmp
push
push
dec
xchg
fidivrl
ss
ljmp
push
nop
sbb
sbb
sub
filds
xchg
setbe
sbb
cmp
std
cmp
inc
pop
add
dec
out
cwtl
jbe
add
fbstp
push
lcall
addr16
mov
adc
dec
adc
repnz
lahf
fdivrl
cli
std
push
sbb
sbb
mov
call
pushf
lcall
sahf
popa
mov
adc
hlt
pop
sub
sti
xor
std
shll
push
test
cmp
pop
and
sbb
orl
imul
sarb
cld
mov
dec
xchg
sahf
aas
jbe
mov
xchg
nop
and
mov
xchg
mov
mov
jns
cmp
fiadds
test
mov
or
lods
imul
and
lret
leave
inc
fs
pop
jb
sbb
mov
cs
adc
repz
mov
add
xchg
mul
leave
out
hlt
mov
cli
inc
stos
std
into
movsb
loop
pop
mov
imul
push
int3
fstps
xor
dec
jno
es
jmpw
fistps
jmp
es
mov
mov
adc
sub
ja
fs
pushf
mov
add
sbb
mov
jns
cmp
add
imul
xor
into
mov
lea
dec
inc
cltd
mov
jmp
xchg
fbld
and
push
adc
loopne
cmp
or
sub
and
jne
je
mov
mov
arpl
pop
das
cmpl
fwait
cmpl
pop
out
push
xor
and
lret
adcl
and
imull
and
mov
scas
stos
pop
xor
xchg
mov
mov
ret
and
sbb
sarl
lret
adc
lret
insl
jnp
aaa
inc
or
jge
ljmp
ljmp
andb
inc
mov
inc
sub
inc
aad
jg
repnz
adc
sbb
sub
je
add
jo
xor
mov
lret
mov
pop
pop
mov
jbe
xlat
dec
int3
hlt
xchg
sub
bound
mov
pop
jle
scas
shlb
fwait
inc
mov
lret
movsl
std
jmp
pusha
movsl
popa
lods
lods
mov
dec
ss
dec
popf
push
mov
leave
outsb
jecxz
cmc
ficoml
test
out
lds
pop
testb
out
and
in
inc
scas
pusha
adc
mov
mov
or
xchg
rorb
adc
xchg
mov
and
jnp
cmp
mov
bound
lret
or
inc
daa
outsl
push
fimuls
popf
int
test
iret
pop
aam
push
push
sbbb
jl
bound
repz
call
es
aam
mov
ja
repnz
push
mov
int3
mov
ret
cmp
or
sahf
sti
push
xchg
mov
stc
mov
gs
jmp
mov
lds
or
jbe
xor
pop
sub
add
rcrb
inc
movsb
repnz
dec
fisubrl
ret
lea
cmpsb
nop
xchg
lahf
dec
dec
cmc
pop
fnsetpm(287
jae
icebp
sti
jl
inc
fldt
lret
and
xchg
push
out
add
push
call
jnp
fsubrl
and
mov
arpl
iret
xchg
pop
ss
push
jno
add
add
fidivrs
filds
jo
mov
jg
or
lret
mov
shl
dec
aam
cmp
insl
xlat
in
call
pop
aaa
sbb
addl
xchg
and
sub
lock
adcb
mov
fstpl
inc
addr16
in
lods
inc
mov
repnz
mov
add
mov
out
xor
sbb
jg
cmp
mov
test
and
fnstsw
lret
add
jb
lds
iret
adc
add
fimuls
xlat
or
lds
and
cwtl
jp
xor
xor
cmp
xchg
jae
aas
test
test
inc
and
repnz
mov
das
cmpsb
dec
jb
sub
aad
mul
dec
lahf
arpl
sub
cltd
pop
sub
out
cmp
add
rep
stos
mov
loopne,pn
rolb
les
scas
dec
inc
scas
in
push
mov
les
outsl
dec
scas
shll
in
in
loop
sbb
inc
xchg
xchg
cmp
pusha
pop
sarb
push
xchg
inc
cwtl
pop
mov
imul
std
push
test
fisttpll
insl
aas
outsl
adc
push
add
mov
aad
inc
xchg
push
frstor
xlat
rcrl
sarb
aad
sbb
jg
xchg
dec
jl
pop
stos
xchg
dec
enter
jns
pop
jg
pop
fst
jmp
push
ja
pop
cmp
dec
inc
jae
pop
insl
rorb
mov
outsl
xor
out
jl
inc
cmp
push
xor
sbb
cmp
popa
cwtl
push
lods
jnp
mov
out
lods
cmpsb
enter
pop
or
xchg
lea
out
sti
pop
movsb
and
leave
push
inc
xchg
mov
int
les
mov
jecxz
scas
or
cmpsb
xor
rcr
dec
or
fdivp
cmpxchg
jo
stos
push
pop
cld
shlb
stc
inc
add
sbb
das
jb
pop
lods
arpl
repz
fwait
rcl
shll
cmpsl
jo
stos
bound
push
sti
mov
test
sahf
mov
int3
mov
sbb
jle
pop
ret
xchg
cmpsl
testl
sahf
jne
mov
popf
aam
mov
xlat
out
movsb
mov
inc
pop
arpl
ss
push
mov
cmp
jmp
and
cmc
inc
icebp
call
and
pop
push
and
mov
leave
push
mov
xor
push
add
or
int
mov
sahf
outsl
adc
test
lret
jmp
lret
xlat
out
out
sbb
notl
mov
push
mov
scas
xor
push
mov
jbe
xchg
gs
inc
lret
rclb
jb
ds
jle
sarl
fidivs
cld
call
rol
push
adc
cmp
xlat
movsl
repz
imul
jo
mov
jge
mov
jle
dec
faddl
leave
out
push
cmpsl
shrb
repnz
sbb
aas
cmpsl
jnp
jg
or
out
xor
push
cld
mov
test
jbe
lcall
adc
dec
addr16
jl
bound
mov
ja
lret
test
push
scas
dec
and
pop
or
sub
xchg
in
dec
hlt
sbb
pop
decl
pop
jb
add
jp
out
rorb
mov
rcr
or
imul
std
leave
adc
test
pop
mov
dec
popf
xchg
or
push
call
int
pop
sbb
xchg
mov
rcr
negl
out
jg
dec
pop
jmp
outsb
and
pop
add
xor
mov
insb
push
popa
inc
pop
xchg
jbe
outsl
cmpb
insb
aaa
inc
aad
sub
sti
cltd
mov
mov
fmull
and
push
xor
sbbb
gs
in
lds
or
xor
sub
iret
popf
lods
push
jg
shl
fmulp
add
mov
dec
mov
stc
push
xchg
scas
data16
pop
add
out
scas
mov
nop
jp
sti
sbbl
fisubrl
jae
dec
outsb
mov
test
es
lock
sub
inc
jge
mov
clc
xor
pop
mov
in
push
pop
dec
loope
mov
lcall
and
popf
ret
dec
ds
mov
stos
out
mov
fsts
sbb
cmp
or
outsl
dec
jno
ja
pop
lcall
push
stos
shrb
xor
sub
mov
jl
jns
stos
xchg
movsl
lods
bound
cmp
insl
cmpl
idivl
xchg
jmp
cwtl
ret
xor
aaa
mov
pop
dec
pop
mov
shl
lret
push
scas
xor
inc
popf
in
dec
mov
adc
fldl2e
inc
movsl
pop
fwait
xor
mov
lahf
sub
gs
and
adc
iret
push
sahf
jnp
add
mov
dec
in
jecxz
mov
test
cmp
dec
lods
and
ret
pop
dec
or
cmpsl
decl
sbb
mov
push
cmpsb
out
jnp
je
fildll
adc
stos
movsl
lods
push
push
mov
dec
dec
lahf
sbb
lds
lret
fdivr
imul
lcall
stos
and
xchg
fcompl
aas
enter
push
sub
cwtl
fldcw
shl
and
fsubs
jg
add
sub
mov
add
pop
cli
lds
push
add
js
fwait
cli
shll
repnz
pop
xor
popa
mov
inc
dec
movsl
repz
std
cld
pop
fldenv
push
xchg
jo
or
imull
mov
lods
les
inc
dec
jmp
jbe
sub
jbe
leave
xchg
out
shl
cmp
movsl
mov
pop
mov
xchg
out
lock
std
lods
pextrw
inc
outsb
movsl
cmp
sub
jmp
test
out
or
mov
ss
and
jle
lahf
cmc
out
fstpt
shl
lods
std
lds
cmpsl
mov
xorl
and
sub
fldl
movsl
lret
xlat
add
outsl
in
add
out
adc
in
cwtl
mov
adc
lret
in
push
frstor
pushf
ret
and
push
call
cmp
push
push
lods
push
cmp
mov
xchg
js
je
aas
xchg
push
nop
cmpsb
daa
fs
sbb
push
xor
mov
out
inc
jbe
and
mov
mov
and
rclb
sub
stc
gs
or
mov
mov
add
push
aad
rcrl
adc
in
fistl
test
pop
xchg
addr16
clc
add
jmp
call
cltd
lea
aam
subb
sbb
or
inc
add
pop
aas
jle
shlb
outsb
xor
push
push
leave
lods
clc
loopne
js
inc
into
pop
ss
mov
pop
loopne
sbb
mov
in
leave
ret
inc
sub
jp
ds
shlb
cmp
mov
lock
push
mov
mov
stos
xor
pop
or
cmp
roll
cmpsl
insl
imul
xchg
push
and
mov
out
rclb
lcall
call
add
hlt
add
xchg
mov
lcall
and
mov
adc
and
test
mov
cmc
outsb
loope
mov
jns
cmc
inc
jle
inc
in
xchg
mov
cwtl
cltd
mov
push
ss
shrb
fwait
push
test
mov
je
sti
jg
push
pop
jno
mov
sbb
or
xchg
test
push
cmp
aas
fimull
xchg
mov
push
xchg
pop
mov
mov
adc
loop
repnz
inc
inc
outsl
push
pop
sar
pop
gs
xchg
subb
insb
pop
hlt
mov
sti
mov
sbb
adc
repz
je
and
ja
imul
std
dec
daa
dec
outsb
rorl
push
insl
pop
mov
and
fldl
xor
in
insl
mov
xor
and
lcall
xchg
mov
pop
or
sbb
inc
es
sbb
push
xchg
idiv
push
inc
fwait
sbbb
cwtl
xchg
insl
push
scas
xchg
rol
out
out
mov
jg
into
sbbl
outsb
dec
addr16
add
jecxz
sbb
fs
outsl
adc
push
das
divl
dec
sub
add
cmp
in
xchg
xchg
mov
repz
sub
out
cmc
ret
out
or
mov
and
into
pusha
andl
lea
js
aaa
in
das
push
loop
mov
lret
add
idiv
cmp
out
xorl
sbb
into
adc
and
pop
call
inc
call
cmpsb
daa
notl
aad
xor
jns
ficompl
and
out
xchg
push
cmpl
fisubrl
stos
ja
fidivrs
dec
mov
out
pop
xchg
lahf
xchg
mov
mov
fistpl
push
jp
das
push
daa
loop
rolb
lods
or
jl
out
or
and
pop
xchg
and
push
pop
je
mov
mulb
in
and
jo
sub
jmpw
pushf
push
cmp
sub
subl
fcomps
mov
andl
mov
mov
cltd
outsb
xlat
in
gs
jecxz
rclb
pop
or
movsl
inc
stc
int
test
sub
repz
lret
mov
xor
scas
sub
ficompl
in
push
iret
mov
ret
shrb
add
movsb
insb
cmp
mov
fidivl
aad
pop
test
ret
xchg
sti
cmpl
or
aas
add
xchg
sbb
dec
and
mov
mov
test
mov
mov
fistps
lds
sub
jle
orb
sub
pushf
mov
push
pop
int3
aad
scas
call
ret
xor
sahf
hlt
lcall
jae
mov
adc
jmp
daa
cmp
or
sbb
sub
add
data16
mov
ljmp
jne
push
sahf
inc
shlb
add
lcall
adc
aaa
mov
icebp
adc
scas
cli
daa
jne
jmp
dec
js
daa
lret
sub
ret
pop
adcb
jb
jo
jo
mov
inc
fmull
mov
lds
fisubrs
int3
sub
push
dec
in
adc
test
out
es
jp
test
jae
js
fmul
xchg
insl
test
lods
data16
int3
cmp
mov
push
jno
call
or
sub
fidivrs
dec
mov
lods
popf
cmp
js
pop
xor
nop
sbb
cmp
jbe
sub
mov
xlat
stc
cmp
movsb
mov
jle
or
addr16
out
sub
xchg
sahf
mov
cs
cli
aad
enter
xor
mov
notl
sbb
xchg
fcoms
xchg
push
ss
adc
nop
data16
push
lcall
mov
rclb
dec
xchg
dec
stos
xchg
mov
cmpb
sbb
lcall
leave
xchg
adc
mov
xor
xchg
rorb
and
or
adc
imul
cmp
out
loop
cmp
add
lods
dec
inc
pop
jns
add
xacquire
add
mov
outsb
addr16
xor
xor
pop
mov
sub
pop
pushf
fsubp
xor
test
aam
jo
mov
cmp
sbb
sbb
fcmovb
icebp
pop
pop
mov
sarb
adc
xlat
fists
inc
lods
jae
mov
cli
mov
sahf
lahf
cmp
aad
lods
push
aad
dec
icebp
pop
xchg
mov
outsb
inc
pop
cmp
inc
shll
in
js
pop
add
popf
fmull
jo
dec
push
popa
scas
adc
jns
nop
bound
ret
aam
sbb
inc
adc
xchg
push
lds
jb
test
cld
fcompl
shll
pushf
fnstcw
scas
push
xchg
jle
pop
fisttpll
sbb
mov
and
in
out
or
test
dec
subb
je
pusha
arpl
mov
xlat
repnz
add
hlt
scas
jecxz
inc
push
cmpl
push
daa
pusha
cmp
js
pop
fdivs
les
dec
rol
cltd
outsl
inc
jl
adc
xor
out
std
repnz
mov
sahf
adc
fistpl
in
addr16
inc
mov
sti
dec
dec
push
lods
icebp
sahf
lea
jle
in
jmp
mov
in
push
pop
mov
lret
xchg
sti
repz
dec
or
mov
push
adc
dec
lock
sub
dec
jmp
push
or
add
inc
mov
push
roll
inc
jae
cmpb
dec
mov
test
sub
ja
mov
dec
mov
ljmp
sti
xchg
or
scas
mov
inc
push
leave
pop
jl
mov
int3
insl
stos
movb
sub
stc
jnp
sub
cmp
mov
push
push
jge
aas
mov
push
push
jle
jae
cmp
cmp
inc
adc
imul
in
mov
call
cli
roll
cmp
push
and
mov
push
cmp
rolb
dec
insl
cmp
js
mov
inc
ret
dec
cmp
notb
sub
adc
xor
in
orl
outsb
adc
jg
clc
aam
fdivp
pop
pop
lods
aad
dec
testl
in
rolb
or
sub
pop
and
sub
sti
lods
fdivl
sub
mov
das
orb
cli
xchg
fldl
mov
adc
and
lahf
jo
fidivrs
sahf
jbe
das
adc
je
aas
call
xor
test
mov
lods
add
sub
jae
nop
push
rclb
xchg
ss
mov
dec
dec
std
sbb
fsubr
roll
xchg
es
sti
mov
sbb
enter
fs
lds
aam
inc
mov
fcmovnbe
test
call
mov
pop
dec
mov
das
xchg
in
lret
dec
cmp
fidivrl
dec
or
xor
fisubs
fwait
dec
xor
jae
enter
inc
xchg
add
lods
or
cmp
outsl
push
mov
enter
adc
xor
mov
push
ja
sbb
cmc
rorl
pop
pop
xchg
or
mov
mov
xchg
push
sbb
mov
arpl
and
cmp
fwait
sbb
jno
jl
xor
xor
push
ljmp
mov
xchg
fiaddl
sbbb
dec
nop
xchg
icebp
inc
iret
ss
and
xor
dec
jg
cmp
iret
ss
lds
sbbl
xor
or
push
mov
cmp
mov
mov
cmc
dec
shl
mov
xchg
cwtl
inc
xor
cld
inc
mov
insb
out
sub
jb
icebp
ret
xlat
xchg
mov
ds
xchg
inc
mov
and
cltd
xor
inc
push
clc
ss
push
pop
cmp
jnp
mov
jbe
test
jg
aad
inc
inc
add
shll
add
shrb
add
fs
pop
sbb
pop
push
repnz
mov
mov
mov
sbb
push
cmpsb
sbb
mov
stos
push
addb
lods
imul
int
fsubrs
cmp
ljmp
mov
pop
mov
push
pop
push
add
jo
cs
scas
ds
xor
adc
dec
pop
lods
jg
cmp
dec
imul
or
repnz
inc
repnz
arpl
sar
or
push
into
test
or
jg
inc
jno
push
cwtl
mov
mov
aaa
and
aaa
int
test
aaa
lods
scas
adc
xorl
adcb
ret
les
adc
fildll
inc
pop
arpl
ds
or
addr16
stos
mov
outsl
add
cmp
mov
aam
les
pusha
movsb
nop
test
mov
sub
fldcw
and
mov
movsl
and
rcll
movb
push
cmp
xchg
xor
mov
jmp
shr
movsb
add
jno
in
cwtl
mov
rcll
aam
lock
lahf
fbld
pop
inc
mov
gs
sahf
and
addl
or
jo
fidivrs
sub
xchg
ja
aas
aas
jbe
test
adc
std
packsswb
push
cmpsl
xor
pop
push
or
lock
xchg
jle
test
jno
mov
pop
loopew
mov
out
xlat
outsl
repz
idivb
inc
js
cmp
loop
mov
pushf
sub
and
out
and
test
dec
addr16
lds
dec
mov
pusha
push
in
fldt
mov
xor
icebp
insl
movsl
scas
pop
daa
push
push
rolb
out
inc
push
mov
add
rolb
xor
lock
cmpsl
add
mov
xchg
dec
mov
cmp
ror
addl
xor
pop
xor
int
insl
push
push
mov
mov
xor
gs
mov
pop
sti
push
dec
adc
nop
cld
in
mov
loopne
and
push
xor
hlt
sahf
neg
dec
enter
and
je
pop
pop
pop
lods
push
pop
aaa
mov
jecxz
or
xlat
mov
pusha
sub
push
inc
add
mov
mov
xchg
popl
inc
jbe
pop
test
sub
pushw
or
jno
dec
jbe
sysexit
sub
insl
out
pop
ja
xchg
into
test
mov
jae
jmp
and
sub
lods
jnp
add
jecxz
mov
and
test
popa
sbb
aaa
iret
inc
mov
je
movsl
push
mov
pop
dec
daa
xchg
push
ja
mov
inc
jg
push
arpl
inc
xchg
imul
das
iret
mov
dec
mov
clc
fs
in
enter
add
out
mov
iret
pop
push
rcll
movsl
mov
xchg
cli
popa
or
mov
je
dec
mov
test
lea
jecxz
lret
cmpsb
jge
std
sub
loopne,pt
mov
mov
ret
mov
sbb
into
and
ret
xchg
sub
and
cmp
mov
std
mov
pushf
ljmp
or
xorl
pop
xchg
rol
mov
mov
push
addb
addr16
out
mov
inc
push
in
lret
pushf
pop
xchg
inc
out
sbb
cmpsb
out
jl
push
inc
mov
push
std
xchg
add
pop
xchg
mov
sbb
cmpl
pushf
insb
dec
cmp
and
xor
insl
push
cmp
ret
and
std
mov
out
ret
nop
jns
pop
bound
daa
ds
stc
aas
sub
dec
mov
mov
jne
aam
push
js
aam
dec
dec
fcom
rcll
mov
mov
iret
fcmovnb
loopne
mov
lock
xchg
pop
ss
comiss
aam
aaa
inc
fwait
mov
lret
mov
inc
ja
ret
push
xor
in
mov
jns
test
lea
sub
outsb
add
lds
xorl
jmp
sub
jno
imul
cmpsb
pushf
and
mov
sub
adc
xlat
or
mov
hlt
aam
push
pop
mov
add
decl
leave
leave
pop
mov
sub
test
jge
xor
xor
notl
outsb
jl
cmp
hlt
in
inc
stos
lcall
or
ret
jmp
fisubrl
dec
pop
pop
les
push
imul
clc
mov
bound
mov
ds
sub
mov
aaa
dec
add
add
pop
push
add
and
jecxz
ljmp
adc
xor
xor
pop
popa
dec
or
dec
pop
and
test
inc
xchg
pop
adc
and
test
xchg
into
ret
jne
clc
adc
or
addr16
arpl
mov
xor
jae
jle
lods
imul
popf
pop
dec
push
in
les
mov
inc
jp
movsl
pop
mov
pop
jmp
xchg
pop
rcll
das
sbb
mov
js
xchg
es
dec
mov
mov
mov
cltd
js
push
jno
jne
mov
cmp
ds
ficoml
popa
add
scas
inc
cld
pop
pop
cmp
inc
sub
pop
dec
cmp
xlat
sbbl
arpl
jbe
adc
push
dec
cmp
push
push
test
jo
daa
movsl
loope
lcall
aas
arpl
hlt
fstl
jb
out
inc
jmp
lret
push
nop
in
es
je
adc
sarb
xorl
pop
fdiv
adc
movsl
dec
call
xlat
sub
pop
add
mov
inc
and
sbb
test
mov
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
dec
lods
scas
rolb
jl
adc
inc
add
inc
inc
ret
dec
mov
mov
pop
mov
inc
push
mov
xor
mov
mov
mov
mov
jnp
jns
lcall
movsl
ret
ss
ljmp
lea
cmp
inc
lret
add
sarb
jb
mov
fcompl
mov
ljmp
xchg
addb
xchg
das
popf
or
neg
pop
add
rep
imul
out
loop
fnstsw
mov
or
out
aam
jnp
hlt
adcl
dec
add
jbe
das
dec
mov
mov
les
mov
std
sub
xchg
push
in
dec
out
mov
push
ljmp
call
xchg
mov
mov
fimuls
dec
mov
jge
leave
fwait
xor
adcb
cwtl
in
mov
test
fimuls
ds
mov
mov
out
icebp
pushl
mov
adc
insb
and
push
rclb
std
test
jle
mov
push
push
dec
sarb
dec
repnz
les
int
cs
repz
mov
loope
rorb
push
loopne
ret
inc
mov
fucom
ljmp
adc
stos
aas
lds
sbb
jecxz
fadd
and
pop
cli
mov
fs
popa
mov
adc
or
jge
jp
mov
sbb
inc
lahf
pop
nop
popa
imul
xchg
xchg
cs
lret
dec
mov
jp
push
mov
gs
out
loope
lea
cmc
jg
add
sbb
sbbb
xchg
leave
loopne
lods
inc
movsl
ret
jmp
pop
loope
fidivl
in
and
fldl
ret
xchg
xchg
jecxz
mov
stos
in
pop
repnz
movsb
data16
cmp
mov
jecxz
pop
xlat
outsb
mov
mov
stos
das
dec
push
inc
push
push
mov
cmp
popa
push
add
inc
fdivr
lds
jg
dec
jmp
popf
jmp
sti
cmp
mov
pop
mov
add
jmp
mov
jmp
hlt
xchg
sub
pop
sub
dec
cli
xchg
jb
sti
aam
cvttps2pi
jle
mov
pushf
es
xchg
iret
loopne
daa
es
aam
pop
insl
mov
and
icebp
push
cwtl
sub
shrl
dec
xchg
sbb
xor
pop
jl
or
inc
fwait
repnz
out
pop
fldenv
jbe
int
in
push
adc
ljmp
imul
orl
loope
pop
pop
in
shlb
mov
mov
fmull
fstl
pop
lret
in
jns
inc
js
stos
outsb
sbb
xchg
arpl
add
testl
inc
xchg
jns
call
sbb
push
jecxz
jmp
push
arpl
push
or
inc
filds
pop
dec
cmp
dec
sub
ss
mov
iret
dec
mov
call
pop
lods
int3
dec
int3
and
sti
jge
adcb
mov
mov
inc
sub
and
push
push
cmc
cld
mov
ljmp
or
out
in
pop
sub
cmc
mov
mov
and
int3
xchg
fs
test
sarb
push
fidivrl
andl
jae
inc
dec
fldcw
fsubp
or
mov
insl
insl
in
mov
ret
insl
cmp
lock
mov
sub
test
pop
push
xor
js
add
pop
insl
js
xchg
les
iret
mov
andb
sahf
rsqrtps
push
mov
aas
popf
out
aam
stos
test
arpl
out
scas
sbb
notl
adc
sub
aad
and
push
jb
mull
push
cmp
mov
xor
aam
jo
push
dec
xchg
pop
push
mov
jae
adc
inc
add
and
cmp
scas
aas
dec
push
sbb
clc
neg
mov
pop
cmp
call
pop
popf
lcall
pop
movq
xchg
rclb
jbe
test
sbb
cmp
mov
scas
insl
add
test
scas
cmpsb
mov
cmp
std
push
sbb
in
xor
pop
fidivl
js
push
lods
push
xchg
sub
adcl
insb
push
lret
xchg
mov
insb
clc
and
rcrl
mov
xor
stos
fwait
mov
leave
enter
mov
aad
push
push
scas
pop
push
sbb
push
repnz
mov
mov
pop
cmpsb
xorl
xlat
popa
push
or
fidivl
fistpll
iret
test
xor
fldl
iret
sub
inc
sub
adc
lahf
js
sbb
inc
enter
mov
lods
jo
fwait
jecxz
mov
jge
add
cmp
xchg
push
xchg
call
leave
inc
lods
mov
xlat
mov
mov
hlt
push
addr16
mov
cmpsl
add
fwait
loopne
or
sti
push
nop
pop
out
xor
out
xor
inc
mov
mov
pop
fucomp
repnz
inc
fnstcw
mov
in
xor
in
mov
rclb
shlb
add
arpl
lret
adc
fs
je
xor
mov
icebp
icebp
mov
cltd
jne
xchg
scas
inc
add
xor
xor
das
rorb
or
cmp
xor
dec
dec
sub
sbb
fs
hlt
in
xor
gs
inc
pop
push
sbb
pop
es
cmp
orb
std
dec
loope
shll
movl
sahf
ss
xor
std
fsts
test
aaa
cmpsb
into
enter
xchg
data16
xor
push
aam
sahf
jbe
add
pusha
sub
test
inc
jno
cmp
ret
daa
add
push
mov
enter
ror
push
imul
sahf
nop
das
sbb
out
mov
add
icebp
xchg
xor
lds
jb
fdivrs
call
in
xchg
or
pop
mov
push
add
nop
shll
fisttpll
adc
scas
jp
inc
add
into
mov
in
pop
dec
enter
stos
jnp
pushf
jle
dec
pop
sub
push
addr16
movsb
push
inc
loop
jb
cmp
rcr
adc
les
insb
sbb
mov
hlt
dec
lods
sbb
outsb
push
cmp
push
out
xlat
lret
sbbb
ret
or
mov
jp
push
scas
pushf
mov
jp
or
xlat
mov
loope
mov
xor
cmp
idivl
push
or
fisttps
mov
jo
and
loopne
or
xchg
cmpsb
inc
sbbl
jae
lds
cwtl
and
inc
jp
lea
pop
sarl
jg
cld
xor
cli
fstpt
cmp
and
enter
lock
lock
fsub
cmp
xchg
mov
lret
and
push
cld
movl
mov
nop
into
clc
pop
xlat
dec
test
jns
cld
pop
ds
fwait
mov
push
and
imul
pushf
mov
push
or
sbb
and
stos
fadds
js
in
sbb
mov
outsl
jle
out
xchg
jo
pusha
les
clc
or
sbb
jle
out
push
inc
fs
mov
icebp
sub
add
jge
cmp
lds
lret
orb
xor
xchg
orl
js
fsubr
jge
jns
test
pop
mov
popf
push
pop
and
dec
fcmove
mov
pusha
loopne
lods
mov
jne
adc
cmp
mov
outsl
dec
xor
xchg
repz
addr16
cltd
xchg
daa
insl
sub
jg
addr16
outsb
fimull
stc
test
lock
sbb
push
ja
xchg
mov
xor
mov
movq
lds
push
add
nop
jecxz
add
inc
jno
imull
in
sub
adc
sbb
outsb
xchg
test
in
jl
fdivr
and
nop
dec
mov
out
test
mov
sahf
popa
imul
cmp
nop
ret
lds
popa
jp
mov
mov
mov
sbb
and
cmc
xchg
cmpsl
sub
outsl
and
push
fildll
sub
sbb
mov
out
add
cltd
inc
jne
rclb
addr16
and
adc
pushf
xor
adc
xchg
mov
fidivrs
push
xchg
orb
adc
int
aam
aas
iret
xchg
inc
lahf
cmp
sbb
cmp
lcall
or
adc
out
or
add
dec
xchg
mov
repnz
jns
xchg
incb
outsb
hlt
sbb
xchg
xchg
cltd
xchg
popa
and
daa
cmp
fdivrl
bnd
test
dec
inc
cld
test
es
sbb
sub
test
pop
ljmp
or
stc
test
inc
popf
nop
or
repnz
jl
jbe
mov
pop
stos
pop
repnz
repnz
je
inc
jae
jle
iret
loop
inc
je
mov
sahf
fistl
lea
dec
inc
push
jle
test
hlt
push
cmp
idivb
sbb
std
sbb
push
push
mov
jecxz
or
push
cmp
adcb
aas
fnsave
les
call
xchg
subl
sbb
sbb
shrb
inc
enter
jecxz
mov
fdivrl
xlat
inc
pop
jecxz
pushf
and
orb
cwtl
mov
xlat
in
dec
dec
jns
or
mov
push
xchg
leave
mov
gs
sub
test
dec
or
add
into
inc
lcall
in
mov
mov
mov
jmp
data16
xor
jp
into
icebp
sbb
jg
into
pop
xorb
in
xchg
jo
xchg
sbb
adcb
addr16
and
popf
or
shlb
cld
ret
xchg
daa
sbb
mov
jp
xchg
dec
or
mov
xor
jecxz
jmp
add
mov
push
push
cmp
inc
push
inc
hlt
inc
xor
leave
les
frstor
test
add
cmp
and
rorl
ja
fcmovnb
xchg
and
sbb
sbb
or
mov
mov
imul
lea
ja,pn
adc
or
or
loope
xor
mov
adc
sub
mov
out
xchg
fptan
xor
mov
std
clc
cmc
dec
and
outsb
repz
jb
in
mov
jle
jl
dec
imul
push
jl
loope
js
lahf
mov
out
jmp
mov
addr16
les
lahf
fnsave
arpl
inc
das
pop
add
mov
roll
push
mov
std
fs
in
and
in
sbb
lea
xor
negl
imul
mov
add
ljmp
int
mov
mov
mov
pop
arpl
jmp
inc
addl
loope
movsl
out
cmp
das
xchg
into
or
inc
dec
rorb
inc
sub
sub
xchg
push
sub
mov
in
adc
neg
mov
andb
es
mov
lea
dec
popa
aas
and
push
add
nop
sbb
pushf
rcrl
add
cld
pop
mov
stc
insl
dec
push
imul
xchg
pop
mov
repnz
subl
scas
in
dec
shrl
mov
add
sub
clc
mov
cs
sbb
subb
popf
jo
movsb
push
std
stos
pop
xchg
gs
dec
std
loop
pop
sbb
or
mov
xchg
inc
lods
xorl
or
pop
enter
mov
ljmp
lods
in
xor
push
xchg
xor
ficompl
mov
add
xor
mov
aad
mov
sub
cmpb
cmp
fwait
pop
movsb
into
cli
cmp
divl
mov
loope
dec
es
mov
push
mov
cmp
psubq
cmpb
js
rol
lods
mov
xchg
push
pop
push
dec
rcrl
call
leave
rorb
push
nop
pop
and
adc
dec
xchg
sti
mov
stos
sbb
rorb
mov
add
ja
fcmovnbe
mov
arpl
leave
lret
jns
into
xchg
dec
jbe
push
jp
push
push
cmp
loopne
inc
xlat
jnp
stc
fstpl
out
add
pop
stos
lret
ljmp
xchg
stos
sahf
xor
lods
push
int3
push
pop
es
or
in
jne
scas
int3
lret
orl
and
xchg
popa
pop
lcall
aaa
xor
daa
mov
mov
inc
push
out
into
lods
hlt
pop
stos
mov
adc
dec
jbe
add
xchg
adc
cmpsl
outsl
addl
call
loope
sbb
in
fisttpl
adc
sbb
out
and
out
sub
lret
clc
inc
mov
mov
mov
decb
insb
dec
sbb
and
lea
sub
or
sub
fisubrl
add
stc
xchg
or
jno
aas
scas
call
out
pop
sbb
sub
pop
and
leave
jg
ds
cmc
fisubrl
add
outsl
out
lret
cmpsb
cmpsl
pop
inc
add
nop
repnz
paddusw
cmp
jle
fisubs
ds
adc
aam
repnz
sub
fidivrl
cwtl
jae
mov
imul
mov
and
popa
mov
aad
dec
push
stc
out
out
inc
xchg
inc
shlb
push
ss
ljmp
jmp
mov
push
stc
cwtl
cmp
xor
xchg
adc
jle
mov
imul
jns
adc
xchg
mov
cmp
inc
fs
xchg
add
loope
inc
cmp
pushf
cmp
and
lds
scas
repz
jl
enter
mov
ss
jl
outsl
mov
cmp
loopne
lock
popa
cld
pop
xchg
xlat
sub
cmp
adc
inc
jecxz
out
pop
inc
std
mov
pop
inc
daa
shlb
lcall
scas
cmc
and
push
fsubrs
fcomps
ljmp
jno
aam
fwait
pop
scas
mov
sbb
xchg
loopne
sub
jmp
int3
imul
je
jle
stos
cmp
fiaddl
pop
mov
scas
aad
jne
pusha
int
inc
lcall
inc
adc
hlt
push
inc
ret
insl
sbb
call
das
add
cmp
mov
cli
inc
dec
xor
movsb
pushf
sub
push
dec
lret
ret
add
mov
cmp
mov
xor
pop
aas
fbstp
pop
pop
dec
outsl
and
and
aad
and
or
push
sub
mov
mov
mov
cmpsb
sub
cmpsb
xchg
ljmp
sbb
iret
xor
push
wbinvd
mov
jle
ror
push
scas
mov
xchg
cmpb
inc
ja
ljmp
mov
push
ret
daa
test
jl
repnz
jns
xor
dec
pushf
jb
pop
mov
push
pushl
pop
jg
cmp
dec
cmp
ds
pcmpeqb
jnp
test
adc
inc
jne
dec
sbb
test
pop
inc
push
xorps
push
imul
adc
jns
imul
ss
cltd
movsl
push
push
orb
and
jp
sbb
jae
imul
sub
rorb
sub
sub
pop
inc
pop
lods
push
subb
add
xor
mov
dec
jne
dec
xor
test
mov
cmpsl
or
shrb
cli
rorl
fstps
shll
push
loop
rorb
loope
rep
cmp
lds
push
fidivrl
dec
cmpsb
pop
cmpb
jl
pusha
mov
pop
jo
mov
cs
jno
lret
lods
pop
adc
inc
test
or
out
lahf
das
fs
mov
frndint
adc
or
ficomps
fucomi
push
sub
add
jne
call
xlat
popf
mov
idiv
mov
cmpb
sete
ljmp
mov
fcoms
imul
add
mov
inc
push
arpl
jecxz
cli
jl
mov
and
lahf
ss
push
mov
push
mov
pop
mov
xorl
testl
sub
movzwl
rol
mov
pusha
mov
je
mov
loopne
jg
ret
mov
lahf
je
insl
mov
fcoml
in
sbb
adc
pop
std
dec
adc
insl
xor
dec
icebp
cmp
scas
movsb
push
popf
clc
dec
cmc
fimuls
dec
jbe
loop
int3
in
and
adc
and
add
lcall
or
setge
lea
rcrl
shr
sub
lods
dec
lret
inc
and
cmp
or
and
imul
aam
int
xor
and
push
cmp
or
add
cmpsl
cmp
inc
test
xor
out
psubw
popa
push
mov
xchg
lds
lcall
test
shlb
loopne
out
scas
xor
pop
fcoml
mov
in
sbb
leave
mov
pop
ljmp
sub
push
inc
ja
out
push
sub
fwait
xor
sbb
test
push
popa
pusha
cmc
dec
jg
inc
stos
push
and
jo
inc
mov
test
pop
stos
adc
add
outsb
lock
or
rcll
shll
mov
out
mov
add
cmp
mov
outsb
jmp
test
stos
mov
sbb
lods
mov
test
add
mov
ret
jno
lea
stc
sub
push
pop
mov
mov
std
pushf
ret
and
stc
pop
inc
and
mov
stc
xor
jnp
sub
invd
sub
mov
stc
jecxz
ljmp
shrl
inc
mov
out
aam
add
mov
push
lahf
dec
jl
fildll
loopne
push
push
and
std
insl
sbbb
ja
dec
push
push
and
sti
ja
data16
pop
dec
push
or
xchg
data16
xor
xchg
lea
xor
cmp
mov
loope
xchg
ja
jne
cmp
mov
les
shll
mov
pop
outsb
cmp
jae
mov
sub
inc
xor
cmc
into
push
sbb
out
inc
lret
call
sbb
mov
cli
mov
mov
testb
or
push
inc
test
sbb
clc
pop
push
popf
int3
push
lods
ret
repnz
ja
loope
mov
in
adc
outsb
sbb
jmp
popa
imul
sub
xchg
popa
mov
push
push
leave
mov
jo
push
iret
mov
and
xchg
pusha
std
repz
and
mov
mov
mov
and
xchg
repz
jp
sub
movsl
stos
into
in
push
or
lds
imul
push
notl
jge
data16
ss
dec
aas
shrb
gs
enter
dec
push
xorl
cmpsb
std
xor
sbbb
push
add
and
dec
in
mov
arpl
in
xor
fcomip
cmp
int
mov
dec
popa
in
cmc
out
lret
sbb
cmp
mul
mov
outsb
stc
movsl
ret
mov
rcr
roll
jbe,pn
mov
rorl
cmpsb
cmc
mov
mov
or
in
fdivr
pop
js
cmp
rol
mov
xor
mov
pop
orb
pop
negl
fcompl
mov
mov
sbb
xor
push
mov
push
push
fidivrs
or
test
jmp
pop
jae
push
pushf
adc
jl
popl
test
mov
data16
mov
sub
mov
ljmp
xor
inc
push
cmpsl
test
sti
mov
mov
xchg
sub
test
jmp
pop
jp
dec
jle
inc
xlat
mov
jo
or
test
jl
jnp
inc
loopne
fmull
or
loop
loope
mov
dec
mov
repnz
add
push
test
shl
mov
sub
mov
je
rcr
shl
and
push
mov
pop
pushf
jae
shlb
inc
lods
lret
mov
movd
mov
gs
adc
add
addr16
inc
outsb
jl
inc
shl
mov
test
divb
sbb
in
mov
repz
xchg
xor
push
dec
lret
movsb
mov
ja
mov
sub
repz
insl
test
clc
ret
jae
mov
add
es
dec
int3
mov
dec
and
push
mov
loopne
aam
mov
xlat
cmp
lock
rcll
rolb
in
jns
orl
cs
loopne
push
dec
inc
adc
cmp
xor
cmp
stos
into
sbb
flds
xor
push
inc
es
pusha
and
jb
add
aad
jb
or
divl
mov
cmp
aas
mov
subb
or
push
sbb
jne
aas
dec
lret
enter
jae
push
arpl
pop
push
pmuludq
shll
push
out
add
sahf
das
push
test
mov
sbb
movsb
xchg
lcall
pop
sti
mov
jno
mov
leave
mov
icebp
sarl
mov
pop
adc
rorl
popa
and
out
adc
imul
mov
inc
lahf
icebp
cltd
movsb
mov
icebp
das
push
aad
scas
pop
sub
pusha
imul
outsb
loope
cmp
mov
mov
aaa
push
push
xchg
xlat
push
test
lret
fsubrl
in
sub
frstor
inc
cli
stos
sbb
dec
push
mov
inc
xchg
sbb
popf
mov
sub
dec
in
loop
cld
jne
mov
mov
push
xor
les
sub
out
icebp
fdivrp
fmull
xor
hlt
inc
jo
mov
cmp
mov
hlt
negl
in
cmp
xchg
cmp
or
mov
mov
je
fbstp
lods
sarl
in
mov
mov
and
jns
sahf
or
movsl
cmp
mov
js
cmpsb
rcrl
cs
sahf
lea
movsb
push
mov
cld
sbb
les
inc
bound
mov
fnstcw
mov
ss
add
dec
cli
cs
stos
and
push
test
imul
push
out
mov
push
cmp
xor
mov
xor
std
and
cwtl
mov
push
out
dec
dec
jmp
jecxz
sub
ret
mov
jg
jbe
das
repz
ljmp
testl
xchg
out
andb
das
jmp
push
mov
test
xchg
hlt
cld
ds
es
outsl
popf
mov
fs
mov
jno
adc
mov
outsb
jle
xor
mov
mov
out
gs
push
outsb
jg
or
adc
fnstsw
ret
nop
loop
mov
push
cmp
pop
xchg
je
cmp
lea
pop
in
and
lret
sub
push
pop
cmc
xor
sub
std
das
repnz
rol
out
fnstenv
mov
push
jg
or
xor
pop
xchg
bound
fcoms
xor
dec
sub
lock
sahf
cwtl
mov
adc
aad
pop
popf
ljmp
pop
cmpsb
inc
or
hlt
push
dec
dec
dec
add
mov
out
mov
clc
arpl
pop
and
test
cmp
clc
cmp
xchg
jp
ds
dec
loope
test
cmc
mov
push
sub
or
ljmp
and
ds
jae
and
int3
add
cmp
xlat
push
daa
leave
and
add
notb
dec
mov
subl
xor
xchg
mov
bound
and
aaa
imul
rclb
sub
sbb
dec
sbb
hlt
shlb
push
stc
shl
push
cmp
mov
inc
mov
mov
movsb
in
fisubrl
or
sarl
cmp
inc
push
outsl
jbe
repnz
movzwl
mov
cli
sbb
jne
shr
pop
push
push
lcall
sbb
pop
les
fimull
xor
aaa
decl
ret
cmpxchg
adc
loopne
daa
mov
push
aas
insb
push
dec
lods
out
adc
cmp
pop
xchg
bound
inc
inc
loop
pop
xchg
rcll
pop
popa
xchg
sti
push
out
out
imul
in
xor
lahf
inc
shl
rcr
in
js
dec
aam
cmpsb
cmp
jbe
or
sti
jle
push
ret
pop
jmp
dec
leave
inc
mov
xchg
mov
cld
sbb
stos
xchg
loopne
or
ss
cltd
inc
add
push
test
frstor
xchg
lret
dec
lods
adc
lret
imul
stos
dec
aad
push
out
aas
or
mov
mov
inc
imul
outsl
out
pop
cmpsb
cmc
cmp
lock
sub
ja
add
sbb
xlat
mov
aad
mov
lock
jns
or
nop
pop
inc
inc
cmp
push
negb
lahf
mov
mov
push
pop
scas
lods
sahf
jmp
jnp
cmp
push
out
fmull
mov
ds
ja
sub
inc
push
sbb
outsb
test
popa
adc
push
lret
lea
jbe
inc
ds
cmp
aam
sbb
addb
popf
loop
out
sbb
mov
aaa
outsw
push
cli
pusha
dec
cmp
nop
mov
mov
lcall
jb
cmp
pop
nop
adcl
shrl
nop
jle
or
jp
push
and
inc
mov
pop
insl
xchg
insb
mov
fwait
and
xchg
jo
xchg
inc
call
or
stos
and
popl
out
out
cli
cmp
das
sub
popw
mov
xor
xchg
or
pop
push
sbb
aaa
or
mov
pop
sbb
in
add
add
cli
shr
cs
jo
sti
out
sti
mov
imul
cmpsb
xor
cmp
xchg
push
cmp
call
fldt
inc
adc
scas
push
dec
or
dec
test
lock
adc
jae
gs
cmp
stc
push
pushf
xlat
xor
lcall
stc
push
subb
xor
in
lods
jp
test
or
bound
cmc
adcl
push
mov
push
mov
outsl
xor
sub
adc
mov
adc
lds
jle
xor
aam
in
btr
pop
and
cwtl
xchg
push
dec
das
push
mov
les
mov
imul
cmp
outsl
cmp
ds
mov
pop
push
pop
cmp
adc
sbb
outsb
loop
mov
xchg
pop
jg
lock
cmp
jle
push
insl
push
xor
aam
notl
insl
outsb
arpl
add
lds
sbb
pop
inc
out
das
loop
mov
xchg
mov
jmp
push
daa
lods
sub
mov
insb
hlt
add
inc
mov
or
in
je
xchg
cmpsl
ds
jbe
sub
xchg
test
lcall
mov
push
clc
dec
push
fstpt
js
loope
pop
call
add
ret
jo
shll
pop
test
pop
adc
xchg
mov
jl
fwait
mov
jp
ljmp
xor
nop
arpl
cli
hlt
fdiv
jne
in
mov
arpl
dec
daa
xchg
mov
sub
adc
lock
push
push
hlt
filds
jnp
jnp
jmp
ljmp
subl
mov
outsl
lcall
mov
sbb
test
lods
xor
arpl
flds
adc
inc
fstps
xchg
dec
jg
xchg
mov
outsl
sbb
stos
jl
lods
pop
lods
add
adc
inc
enter
das
xchg
ret
andl
icebp
jnp
xchg
dec
nop
iret
ret
test
lods
mov
push
pop
cmp
push
push
pop
dec
pop
add
stos
in
mov
js
jg
mov
sbb
iret
inc
mov
cmp
and
dec
repz
sbb
idivb
jge
jge
xchg
adc
cli
repz
icebp
cmp
dec
lock
out
and
push
stos
data16
inc
cli
jmp
lods
xorl
movsl
add
sub
lret
fldt
push
sbb
push
pop
mov
in
inc
lret
sub
inc
orl
add
push
pusha
xorb
gs
sbb
inc
or
or
test
xchg
out
sub
test
jb
cld
mov
shrb
xchg
or
xchg
mov
mov
xor
in
sbb
fisubl
repz
inc
lock
outsb
push
test
test
ret
mov
je
xor
in
or
mov
sub
cs
jle
cmp
and
sahf
jno
inc
or
sbb
and
pop
in
js
inc
mov
repnz
negb
lret
sub
das
xchg
inc
ljmp
pop
pop
lea
in
mov
mov
mov
aad
xchg
enter
push
outsl
xor
mov
pop
xchg
pop
dec
neg
in
out
lret
and
cmp
xor
sbb
js
cmc
jg
daa
addr16
xchg
push
rcrl
mov
mov
inc
mov
stos
test
dec
fisubrl
push
jno
outsl
test
push
lock
cmp
fadds
stos
test
xchg
and
cs
nop
jge
cmc
push
fcmovnbe
mov
test
push
sub
add
and
or
repz
cmpsl
in
loopne
cmp
adcb
inc
sbb
icebp
sub
shl
push
cwtl
es
ret
xchg
rolb
adc
stos
sub
pop
into
lret
jo
mov
mov
adc
push
pop
push
fld
inc
jb
mov
push
xchg
ss
and
push
mov
xchg
mov
or
inc
and
sbb
pop
ss
into
jne
or
xchg
stos
aad
cmpsb
mov
add
add
inc
xchg
push
add
mov
pusha
mov
jo
shlb
popf
adc
adc
adc
pop
pop
cmp
dec
scas
mov
sub
jnp
inc
shlb
mov
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
mov
or
loopne
jl
pop
jl
dec
add
lock
sbb
out
xor
push
jmp
sbbb
loopne
iret
rorb
mov
aad
push
hlt
scas
outsl
jae
scas
popf
dec
add
pop
les
pusha
dec
subb
dec
adc
adcl
divb
repnz
jge
dec
sahf
cltd
sub
fucom
in
dec
pop
notb
mov
add
stos
cmp
dec
and
xchg
lcall
pop
dec
addr16
sti
push
mov
loop
dec
fistpll
inc
jg
or
and
xor
cmc
das
fildll
jno
lea
sbb
mov
in
je
pop
scas
and
loopne
mov
sti
mov
jg
pop
subl
hlt
cli
push
mov
and
and
add
lcall
cmp
xorb
mov
sbb
dec
imul
enter
mov
roll
pop
push
sub
ficoml
push
in
xchg
mov
mov
les
fbld
dec
mov
pop
and
mov
sbb
xchg
inc
js
and
fmuls
repnz
and
repnz
nop
ds
push
out
pusha
or
scas
cwtl
lods
xchg
int3
mov
jl
js
lods
inc
cld
scas
sbb
out
inc
xchg
sbb
outsl
add
scas
fmul
dec
repz
xor
cmpsl
sbb
data16
rcl
sub
jno
cmp
cld
and
cmp
test
test
nop
sub
jnp
xchg
xchg
les
sbb
mov
jp
fsubrs
sbbb
and
jne
or
bnd
out
je
stc
jns
popf
xchg
into
js
xchg
popf
lret
loop
and
cltd
cmp
int3
cmpsl
test
cmc
or
and
or
cmpsb
mov
jmp
fsubrs
jmp
sub
imul
pop
add
xchg
lea
adc
pop
imull
les
cmc
mov
insb
and
clc
inc
iret
insb
lret
push
xor
mov
stos
jg
cmp
adc
cmp
int
cltd
mov
sbb
mov
icebp
loope
cmp
mov
lea
fmuls
push
mov
lahf
cs
lahf
xchg
idivw
mov
mov
sbb
imul
cmpsl
arpl
xchg
addr16
or
pusha
sub
std
ret
or
out
vpsrld
lret
lahf
jnp
jge
lds
ss
fwait
lods
mov
xchg
push
pop
xor
data16
push
lret
adc
add
outsb
inc
xorb
cmpl
jl
loopne
ret
and
es
mov
fcmovnb
sbb
lds
pop
clc
mov
inc
insb
xor
sbb
inc
cmp
pop
sbb
rcr
pop
hlt
int3
stc
push
test
sbb
test
xlat
call
and
daa
out
pop
mov
lock
cmp
fldt
in
mov
xor
xchg
pop
pop
mov
dec
jb
dec
pop
xchg
cltd
sbb
jle
mov
sahf
mov
dec
mov
notl
jb
outsl
les
not
cmp
iret
dec
leave
outsl
adc
jge
jmp
xchg
movsb
mov
pop
stos
jecxz
mov
roll
push
or
jo
push
push
pop
in
das
inc
inc
ds
mov
push
or
dec
ret
push
push
add
mov
subb
xchg
jle
loop
cmp
stos
hlt
sub
repz
subb
mov
decl
popa
xor
test
jg
movl
and
into
fldcw
sub
jns
mov
mov
outsb
ret
xchg
cmpsb
sub
lds
cmp
int
int
lret
sti
es
adc
bound
jl
clc
mov
mov
push
jbe
inc
repz
sbb
insb
hlt
out
inc
in
mov
xorl
pushl
adc
mov
out
push
add
nop
idiv
mov
cld
test
in
orps
imull
jno
cmp
jl
popf
mov
sbb
xor
lret
ljmp
mov
cltd
mov
bound
xchg
mov
xchg
cmpb
pop
xor
and
bound
in
aas
inc
hlt
ja
aas
pushf
mov
insl
sub
mov
xchg
push
fcoms
fstl
test
jle
scas
test
mov
xchg
add
mov
int3
jp
mov
inc
nop
iret
xchg
jnp
pop
mov
xchg
and
sub
decl
out
ss
mov
xchg
repnz
pop
adc
lock
jb
insb
fstps
or
lcall
cmc
fdivrs
repnz
test
add
mul
xchg
stos
xchg
xchg
int3
pop
jns
mov
mov
mov
lahf
pusha
repz
out
pop
add
arpl
out
lret
test
in
push
lods
sbb
mov
inc
jle
test
push
lret
bound
inc
add
mov
hlt
mov
xor
or
inc
push
xor
mov
and
or
movsl
pushf
dec
xorl
nop
aaa
cmp
inc
inc
lds
out
loop
stc
mov
push
push
mov
jl
inc
or
xor
test
cmc
jmp
xchg
or
jne
add
adc
js
imul
jno
xor
rolb
out
ret
xchg
mov
and
nop
mov
xor
movsl
jl
lock
cmp
sub
repnz
mov
out
int3
shlb
bound
shlb
fcoml
lcall
mov
add
inc
cmp
inc
push
and
in
add
or
fidivrs
push
lods
inc
stc
mov
popa
imul
dec
bound
mov
jmp
and
lret
xchg
push
pop
cwtl
clc
popf
xorl
test
aam
xor
adc
xchg
xor
sarb
mov
arpl
popa
adc
nop
std
add
icebp
mov
and
fadds
std
xchg
xchg
mov
sub
and
lret
lcall
pop
clc
out
xchg
adcl
sub
fldt
lret
adc
daa
aam
dec
xor
stos
fcompl
outsb
xchg
aaa
mov
dec
movsb
ljmp
lds
das
daa
lret
adc
xor
fadds
sub
fdivrs
pop
fwait
mov
mov
mov
pop
mov
stc
push
add
adc
or
add
orb
icebp
push
cmp
mov
lcall
hlt
cmpsb
out
dec
cmp
push
or
xchg
add
mov
movsl
rclb
pop
sub
xlat
bnd
mov
lret
lret
jmp
push
mov
xor
and
js
mov
and
add
sub
add
mov
xor
or
mov
push
lahf
mov
js
jne
rolb
jl
xor
and
jne
or
adc
orb
cs
arpl
stos
inc
push
das
and
inc
adc
jg
mov
mov
fs
repnz
mov
data16
cmp
je
jl
xchg
cmp
out
and
sbb
sbb
scas
out
mov
cmpsb
in
ljmp
repnz
add
test
in
insb
addr16
fmull
mov
popa
push
and
mov
and
mov
cmc
repnz
pop
or
fs
leave
enter
and
jl
rol
cld
es
jne
sarb
sub
popf
cmp
or
dec
repz
xchg
xor
int3
mov
setns
mov
jge
mov
int
jp
add
push
lret
imul
mov
add
lahf
repz
jae
dec
push
jmp
xchg
rcrb
adc
pushf
int3
mov
cmc
shlb
rcl
push
lock
inc
inc
and
add
ljmp
sub
pop
pop
cmp
add
sub
movsl
mov
cmp
sub
es
and
or
and
mov
xor
cmp
mov
imul
dec
mul
xchg
shrb
mov
cmp
mov
shll
dec
mov
push
mov
xchg
mov
xor
popa
repnz
jae
pushf
fwait
mov
loopne
repz
ret
cli
jae
lea
int
dec
loopne
xor
xchg
fisubs
sahf
sub
mov
ja
cmp
jno
lea
int
cmc
in
ds
dec
movsb
pop
gs
add
mov
sbb
push
jo
clc
mov
pop
je
shlb
dec
inc
imulb
sub
dec
ljmp
mov
jl
fstpt
fwait
stc
movsl
lcall
cmp
fdivr
insl
ja
push
adc
movsl
aad
push
mov
iret
scas
mov
into
outsb
or
sarl
insb
sarb
sbb
cmpsb
inc
fstpl
xor
repz
pop
loopne
sahf
arpl
test
sbb
and
adc
mov
dec
repz
cwtl
xor
outsb
mov
pop
mov
call
das
or
xchg
cltd
push
aad
cmpsb
jmp
ret
loopne
lahf
or
in
cld
jns
sti
add
push
sbb
add
mov
xchg
mov
inc
in
inc
pop
mov
sbb
xor
out
bound
xchg
addr16
xlat
test
cmp
std
rcrb
add
and
add
and
addr16
nop
dec
lds
arpl
cwtl
mov
cmp
mov
xchg
inc
hlt
mov
int
call
cmpsl
test
mov
push
adc
pop
mov
inc
or
test
arpl
cmc
popa
leave
daa
das
test
test
ljmp
xchg
mov
mov
mov
dec
andl
aas
push
adc
push
insl
pop
add
rorb
clc
leave
cmpsl
add
sub
mov
and
testl
cmp
mov
xchg
dec
sahf
lds
ss
das
inc
or
lret
bnd
mov
insb
dec
ret
mov
pop
bound
mov
pusha
sbb
loopne
mov
adc
aam
jno
les
inc
in
out
rorb
push
push
mov
dec
jge,pt
es
pop
lods
cmp
adc
xor
mov
pop
fldt
or
and
daa
repz
iret
push
aam
test
pop
push
push
scas
mov
int
mov
sbb
xor
aad
dec
push
fs
and
or
sub
adc
push
push
sbb
stc
mov
test
sbb
cmp
adc
out
das
nop
ret
sub
adc
jnp
xchg
lock
dec
jle
pop
std
sub
int3
dec
dec
aaa
jno
loopne
or
cld
dec
push
inc
push
fmul
sub
aad
out
enter
out
hlt
xlat
les
pop
sub
xchg
cmp
mov
or
mov
loope
cmc
aam
cmpsb
sbb
fsts
outsl
cmpsl
mov
icebp
dec
add
add
fcoml
into
lcall
lret
xchg
dec
mov
inc
data16
cs
adc
mov
add
roll
fwait
push
and
int
loope
ljmp
fmul
cmpsl
mov
mov
xchg
in
jg
dec
or
addr16
sahf
mov
mov
mov
adc
sti
pop
adc
add
pop
jo
xchg
xchg
cmp
stos
dec
shll
xor
sbb
int
rcll
adc
adcb
negb
popa
dec
xchg
push
dec
mov
scas
inc
mov
push
fcomp
fisubrs
popa
pop
stc
cmpsb
jnp
mov
lods
push
push
decl
aaa
or
lahf
mov
fwait
mov
stos
jb
jge
add
sbbl
inc
adc
sbb
push
aas
int3
jnp
sbb
adc
fdivs
std
jo
mov
jp
js
aam
dec
adc
push
pushf
enter
js
hlt
push
call
mov
mov
sub
push
cli
lock
lods
cmp
test
lcall
repz
sarl
push
mov
sub
cmpsb
and
mov
lea
aad
jecxz
cmp
cli
sbb
test
sub
jg
pop
cmp
stos
sub
repnz
mov
cwtl
inc
sub
bound
imul
pop
mov
adc
scas
adc
imul
xor
sbb
or
sar
ret
inc
popf
sub
pop
scas
mov
bound
lcall
dec
js
jns
insl
add
lret
and
aam
sub
jne
sub
enter
mov
add
mov
mov
int
adc
fdiv
sub
xchg
push
and
aaa
xchg
xchg
int3
les
in
cmp
inc
xchg
cmpsb
mov
xchg
xor
adcl
aam
mov
jmp
pop
daa
sti
xor
jb
frstpm(287
aad
sub
mov
ss
shll
scas
out
jo
inc
pop
xchg
xchg
loopne
xchg
enter
cmp
mov
sbbl
adc
adc
jmp
enter
sbb
int3
cld
bound
pop
cmp
dec
xchg
icebp
out
jge
into
ljmp
dec
into
es
dec
cmp
loope
pop
outsl
cmp
xchg
roll
adcl
bound
xchg
push
lret
fadd
push
inc
daa
fsubrl
sub
adc
inc
cmc
inc
jecxz
or
lret
jle
jae
adc
outsl
xor
xor
daa
hlt
xchg
out
ss
out
daa
sarb
cld
loope
and
push
dec
in
xchg
nop
cmp
xlat
adc
mov
cmp
adc
bound
sbb
jge
mov
scas
mov
into
jmp
out
fdivs
jg
fwait
jnp
stos
cmp
pop
and
push
int3
mov
cmp
push
and
ret
pop
pop
test
iret
icebp
scas
push
or
lds
fbstp
fs
fistps
stos
test
loopne
aam
push
pushl
push
jmp
xor
aaa
ja
notl
and
movsl
daa
jmp
popf
add
popa
mov
fidivl
es
sbb
cmp
jne
js
ret
dec
das
pop
sbbb
fucom
imul
jnp
lds
cltd
sub
inc
lcall
pop
in
adc
add
int
test
lcall
push
mov
mov
mov
out
mov
inc
adc
pop
mov
sub
pop
xchg
xchg
aaa
mov
stos
out
inc
cmp
dec
dec
sub
sbb
mov
mov
loopne
shlb
adc
sti
in
fs
mov
mov
push
xchg
sahf
popa
add
sbb
jmp
push
sbb
dec
mov
push
and
lods
cmc
sbb
mov
and
cmp
into
push
int3
jg
sbb
jbe
adc
add
cli
cmp
push
movsl
lret
test
pop
inc
icebp
mov
cmpsl
aam
or
inc
div
in
add
sbb
xchg
mov
ja
push
cmpsb
jae
mov
cmp
dec
int3
mov
pop
mov
cmp
xor
icebp
shrl
adc
jp,pn
aam
mov
push
idivl
cmpsb
test
mov
pusha
jbe
aad
jno
pop
sub
add
push
mov
jb
loopne
loop
aad
test
das
clc
test
or
in
data16
mov
and
inc
mov
xor
popf
lret
test
jp
dec
or
and
cmp
mov
stc
aas
inc
jnp
bound
lcall
popa
or
jnp
or
jp
mov
data16
xchg
sub
mov
cmpsb
push
call
scas
push
testl
jle
mov
xchg
jmp
xor
xchg
mov
sbb
fxch
shll
jns
rorl
push
pop
rol
lods
inc
inc
stos
or
in
outsl
xchg
movsl
mov
insb
pop
sbb
push
push
jg
cmp
filds
and
inc
loop
xor
dec
dec
sbb
shrl
push
mov
lds
adc
inc
enter
push
cmp
cmp
mov
pop
shlb
arpl
cs
sub
daa
lea
and
ja
imul
lds
lods
call
adc
cmp
mov
scas
je
pop
cmp
fmuls
out
mov
shrb
push
or
mov
cmp
jno
lahf
and
pop
into
pushf
xchg
cmp
adc
jmp
ljmp
sub
scas
sbb
xor
xchg
ljmp
adc
jle
movsb
cmpb
cwtl
outsb
push
int
pop
outsl
dec
sub
push
pop
adcb
sarl
das
mov
in
fwait
aad
mov
mov
es
or
inc
adc
push
pop
repz
sub
lret
rorl
push
sti
push
adc
test
mov
nop/reserved
or
pop
fwait
in
lods
jns
xorl
cmpsl
and
xchg
out
add
shrl
xor
out
mov
js
cmp
ffreep
iret
cmp
scas
insl
jp
shll
push
in
sbb
or
out
jae
pop
mov
jne
push
mov
test
sbb
das
pushf
lock
jge
xchg
xchg
repnz
xor
xor
mov
lret
jns
adc
push
inc
es
sub
pop
pop
jmp
and
add
mov
mov
mov
push
mov
sub
je
mulb
int3
xor
test
fnstsw
cmp
inc
mov
in
fnsave
push
in
add
dec
push
fs
pop
adc
add
out
mov
loope
push
jmp
sbb
aad
ljmp
cmpsb
ficompl
fs
in
jl
dec
push
ja
jbe
cmp
xchg
jmp
repz
mov
push
xchg
fldenv
pop
jge
mov
js
lock
mov
push
fbstp
inc
xchg
movsl
pop
fdivs
stos
pop
cs
add
aam
sti
aad
mov
mov
mov
out
add
inc
or
mov
scas
add
jmp
lret
icebp
call
push
xor
cmpsl
insl
xchg
inc
mov
lahf
popf
int3
sub
mov
adc
aas
cld
cld
fs
mov
xchg
cmpsb
and
lcall
xor
cmp
in
mov
cmp
push
insb
xchg
ss
cmc
ud1
xchg
sub
ja
cmp
clc
inc
cmc
ret
cmp
push
popa
sub
lcall
xorb
icebp
loop
les
and
pusha
lcall
and
xlat
lret
dec
push
aaa
jle
jbe
dec
js
add
push
dec
push
push
bound
mov
je
out
popa
aad
push
xchg
sbb
jecxz
loop
xchg
adc
push
xor
mov
out
ret
cmp
clc
dec
pop
subb
inc
jp
or
mov
std
fiaddl
bound
xor
enter
sti
test
pop
push
cmc
jmp
xchg
dec
arpl
add
add
xchg
add
das
mov
lahf
add
fsts
pop
xchg
inc
xchg
sub
mov
mov
stos
jecxz
and
mov
iret
dec
inc
mov
daa
sub
pop
xchg
or
mov
ljmp
mov
jle
jne
adc
test
fwait
adc
mov
das
xor
mov
nop
fwait
stc
mov
hlt
dec
scas
pop
lods
adc
insb
cmpb
jecxz
dec
insb
insl
or
mov
mov
out
dec
push
xor
das
movsb
hlt
in
mov
lea
pop
shll
lods
aaa
daa
cmpsl
and
xor
int3
enter
out
clc
sbb
pop
sbb
popa
jle
repz
sub
xor
mov
aam
out
out
jle
rorl
bound
stos
xchg
xor
inc
je
sbb
mov
xchg
fdivrl
std
rcrl
sbb
int
xor
jns
fistps
out
push
sti
push
ss
dec
inc
jmp
fbstp
cwtl
fucom
and
mov
cmp
xlat
jnp
lods
jle
movsl
ret
xchg
outsb
adcl
push
test
xchg
inc
sti
jnp
dec
and
aaa
mov
mov
jne
jo
sub
cmp
jl
nop
fsts
aam
xor
push
andl
jle
or
dec
xchg
inc
push
pop
pop
popf
pop
mov
loop
int3
ret
jbe
lcall
dec
push
fwait
insb
or
je
inc
push
loop
and
add
aad
fs
push
jne
out
mov
push
jb
sub
test
xchg
test
inc
repz
sub
dec
dec
in
push
mov
push
jp
out
pop
ds
cmp
mov
mov
adcb
jl
std
jae
and
xor
xchg
push
xchg
adc
lret
aaa
sub
jmp
inc
ret
push
cmpsb
int
sbb
cmp
subl
mov
inc
jg
cmc
icebp
adc
jmp
fbld
mov
adc
and
and
shr
push
aaa
ret
fisttpll
stos
loopne
lahf
loopne
adc
pop
xor
movsb
push
sbb
jb
or
aad
pop
out
sahf
jmp
xchg
rolb
sahf
addr16
or
mov
push
popa
clc
adc
mov
gs
mov
fwait
cmp
jecxz
jae
xor
inc
rcrl
mov
popa
fnstcw
dec
ljmp
cltd
loope
adc
pushf
orl
je
fbld
unpcklps
pusha
pop
sbb
imul
mov
mov
xchg
mov
fs
cltd
mov
push
pop
aad
idiv
cmpsb
xor
add
int
je
push
les
inc
sbb
inc
inc
outsb
insb
jo
dec
lret
add
mov
add
add
insb
addr16
les
call
lcall
pop
adc
dec
cmp
dec
pop
mov
cmpsl
cld
arpl
dec
mov
pop
hlt
push
int3
mov
iret
mov
sbbl
xor
repnz
mov
and
inc
ret
xchg
cwtl
movsb
lods
lock
add
test
mov
test
fdivrl
mov
jae
push
adc
xorb
jae
cmp
sbb
pop
je
pop
xor
cmp
jne
dec
mov
lahf
push
loopne
ja
mov
int3
lcall
stos
mov
push
xor
dec
outsl
insl
iret
jecxz
mov
add
shll
jmp
pop
push
data16
sti
xor
pop
push
jp
aam
push
push
xchg
adc
bound
mov
cmp
iret
in
mov
inc
adc
push
xchg
lahf
and
rclb
imul
push
out
loope
addr16
sub
sbb
leave
lret
xor
jnp
roll
jp
sbb
cmp
les
cmp
jae
push
es
lock
mov
mov
imul
or
sbbl
nop
inc
jmp
cmp
lds
jecxz
xchg
in
jl
test
fwait
sti
mov
stos
roll
insb
pop
pop
and
dec
rcrb
mov
xor
cmpb
inc
out
xor
jl
inc
inc
mov
inc
mov
and
sbb
cwtl
push
in
mov
stos
test
sub
popa
cltd
xchg
adc
in
jl
cwtl
fistpll
dec
jle
addr16
add
daa
cmp
sbb
cmpsl
xchg
imulb
pop
sbb
fnstsw
mov
gs
out
pusha
dec
pop
ja
sarl
pop
sub
lcall
lahf
stc
outsb
adc
mov
fwait
mov
jl
mov
push
xor
inc
imul
add
ljmp
iret
out
xor
mov
aaa
sbb
jecxz
lods
iret
pop
jno
lock
iret
aad
outsl
jg
mov
sbbl
xor
jnp
decb
inc
or
push
push
into
out
roll
mov
add
cmpb
scas
and
fwait
xor
scas
rolb
add
hlt
ds
ror
push
push
insb
sub
cltd
xchg
addr16
adc
mov
xchg
jmp
sar
add
dec
mov
sub
testb
inc
negb
test
cmp
aaa
daa
add
mov
and
fnstsw
dec
movsb
mov
sbb
xchg
inc
ret
sub
loop
cmp
xor
loope
roll
imul
bound
jg
pop
inc
rcll
add
movsb
imul
cltd
jp
push
xchg
adc
pop
insb
add
test
lock
jge
jno
out
push
clc
xor
fdivp
push
jmp
mov
add
xor
or
jno
lock
and
add
mov
push
sub
shl
cmc
sahf
ds
pop
xor
sbb
loop
jmp
jge
je
pop
pop
mov
stos
dec
push
adc
push
imul
inc
sbb
fwait
sub
jecxz
inc
movb
cmp
cmp
sub
xchg
imull
adc
pushf
and
mov
rorb
aad
jbe
movsl
lods
xchg
lock
xchg
jg
dec
add
clc
ret
stc
or
aad
cmpsl
into
insb
inc
push
xor
lcall
scas
in
xchg
or
into
loopne
sub
inc
mov
dec
rcll
out
adc
adc
sti
je
adc
xor
scas
in
shl
std
sub
push
loope
int3
fstl
jecxz
pop
addl
mov
xchg
pop
jl
add
mov
lods
dec
shrl
push
xchg
mov
mov
outsl
cmpsb
cli
or
sub
scas
push
pop
insl
or
add
cmpsl
roll
adc
add
fs
aam
movsl
cltd
pop
out
push
dec
lret
and
aad
dec
cmp
stos
sub
sub
cltd
jp
push
xchg
sbb
pop
std
psrlq
pop
jns
enter
fidivrl
les
imul
cmp
mov
inc
cmp
push
rcrl
ljmp
cwtl
fwait
loop
mov
jnp
xchg
mov
inc
jne
dec
sbb
xchg
sub
aam
adc
jae
sarl
loope
pushf
fnstsw
fbld
es
ss
addb
or
mov
aam
jge
push
mov
mov
fimull
inc
dec
inc
cmpb
xchg
xchg
call
mov
into
fs
pop
popf
in
leave
jno
jne
mov
lds
imul
movsb
mov
int3
or
mov
add
mov
xor
addr16
fld
push
pop
mov
loop
inc
or
inc
nop
rorb
daa
mov
dec
mov
xchg
fldl
scas
shrl
cmp
ficoml
sbb
cmc
js
or
or
xchg
repnz
cmp
xchg
sub
and
and
push
fcomps
pushl
daa
pop
inc
mov
sti
adc
and
lret
mul
fwait
ret
movsb
mov
cmc
das
push
push
sbb
test
pop
xchg
hlt
rcrb
add
and
repnz
ljmp
ret
sbb
and
test
fadds
add
insb
mov
cwtl
jno
inc
aam
clc
lcall
jmp
cmp
movsl
or
call
sbb
stc
ds
insl
js
sub
loopne
nop
mov
dec
jl
mov
push
lahf
sub
in
cmpsb
sahf
and
mov
or
fmull
rol
jne
pop
xchg
xor
push
inc
and
lret
xor
int
push
insl
subl
insb
fimuls
js
mov
lcall
fstpl
test
or
test
jmp
call
loop
das
mov
bound
lods
jmp
rcrl
pushl
inc
adc
jae
or
mov
pop
xlat
les
pop
int3
ret
xchg
jne
adc
imul
mov
insl
or
mov
sub
pop
arpl
inc
adc
and
cmpsl
das
mov
jno
movsl
enter
pop
jl
mov
dec
out
mov
movsb
mov
mov
dec
stos
push
and
in
mov
enter
xor
jae
stos
ja
shlb
cmpl
mov
sbbb
inc
adc
sub
pop
movl
push
sbb
aas
dec
test
push
les
push
sahf
xchg
xor
mov
xchg
notb
mov
xchg
es
mov
rorb
call
movsb
dec
mov
and
out
xchg
jae
js
push
js
adcl
pop
mov
aaa
dec
in
repz
xchg
fdiv
rcl
inc
xor
mov
adc
inc
mov
mov
insl
cmp
cmpsl
and
xor
shl
lea
gs
in
mov
hlt
pusha
xor
xor
movsb
sbb
arpl
movsl
cmp
sub
and
dec
inc
fmull
out
mov
pushf
test
adc
test
push
sub
dec
adc
push
cmp
cmp
push
or
sbb
sub
cmp
adc
cltd
mov
js
pusha
adc
adc
fdiv
hlt
imulb
scas
arpl
pop
ljmp
pop
xchg
addr16
cmp
inc
and
adc
outsb
and
mov
stos
rorl
loopne
cli
popa
dec
and
fidivs
mov
add
fs
cmp
xchg
jge
xor
push
inc
in
mov
ljmp
mov
and
dec
mov
iret
and
enter
repnz
in
and
add
pusha
sub
adc
nop
xor
push
lret
les
ss
outsl
imul
sti
fwait
movsb
test
add
jecxz
sbb
cmc
shll
loopne
cmp
dec
shr
arpl
lds
add
je
js
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
cmpsl
into
mov
jl
jl
inc
pop
jl
add
xlat
or
cltd
xor
xchg
mov
stos
fcoms
or
int3
jae
jg
jle
fwait
pop
frstor
stc
dec
mov
push
ds
and
aaa
fidivs
pop
pop
or
mov
adc
pop
mov
fisubl
bound
leave
inc
pop
inc
inc
xchg
test
cmpsl
mov
insb
stc
test
add
cmp
jns
loope
inc
jge
rolb
push
mov
mov
jns
int
pusha
dec
push
mov
push
push
dec
jle
sbbl
xchg
push
jbe
aas
dec
xor
aam
inc
push
leave
icebp
mov
mov
pushf
inc
roll
iret
ds
cmc
in
mov
nop
loop
sub
arpl
mov
xor
clc
int3
and
dec
xorb
leave
and
loop
mov
rorl
and
inc
repz
imul
xor
lds
cmp
or
push
test
push
lods
cmp
scas
cwtl
push
shlb
pop
add
cld
pushf
push
mov
fnsave
test
in
xor
add
mov
pop
pop
inc
std
dec
rorb
jl
ljmp
mov
icebp
push
push
clc
mov
push
mov
dec
push
cltd
jle
adc
idivb
jno
jp
iret
ja
aad
jmp
lea
insb
fsubl
mov
ja
jecxz
incb
xchg
rcrb
lret
scas
jbe
movsl
add
mov
mov
lret
enter
mov
push
sahf
test
inc
xchg
push
cs
mov
sub
addl
jae
push
push
pop
push
cmpsl
pop
int
sbb
scas
sbb
and
push
inc
dec
insl
loop
lds
ss
dec
mov
pop
adc
imul
add
xchg
add
sub
xlat
fldl
pop
out
mov
fsubrp
cmp
jne
inc
adc
sbb
incb
pop
rcll
mov
ror
add
popa
pop
push
in
movsl
mov
and
addr16
out
fdivl
ljmp
inc
aam
loopne
inc
jns
out
sub
mov
sub
imul
pop
daa
fnsave
pop
pop
sub
negb
adc
cld
pop
push
lret
push
lret
mov
std
ds
ss
mov
jecxz
stos
or
inc
sbb
ret
sbb
ret
insb
xor
add
sub
repz
fstpt
dec
inc
mov
mov
adc
outsl
lahf
fs
adc
std
xor
pushf
rorb
jl
lods
xchg
addb
out
out
push
scas
jne
ja
mov
xchg
push
fistpll
push
push
add
inc
xor
push
fs
cmp
push
ss
shll
mov
cli
rorb
ficoms
inc
sar
cmp
push
fstl
lret
jmp
out
push
push
cwtl
mov
je
add
pop
testb
mov
mov
leave
xchg
loopne
push
ja
loop
inc
push
std
pop
xchg
scas
and
xor
mov
enter
aad
inc
xchg
mov
push
lds
push
inc
add
nop
mov
cmp
shrl
mov
mov
adc
out
into
inc
adc
inc
roll
xor
xchg
pop
loopne
cltd
adc
nop
fsubl
pop
adc
mov
xor
lahf
in
push
push
pop
ja
jbe
mov
imul
adc
xchg
and
cmp
lcall
dec
xor
xchg
hlt
dec
mov
dec
push
mov
lods
iret
popf
or
inc
gs
in
xor
adc
pop
loope
push
lods
mov
scas
cmp
sub
mov
cmp
mov
xchg
jg
jbe
push
gs
jo
jae
mov
xor
popa
pop
dec
xchg
mov
lret
xchg
jl
loop
dec
cmpl
aaa
adc
push
fcoml
or
stos
cmp
ror
push
je
lods
ret
cmp
dec
push
shl
cmc
ficompl
test
inc
mov
adc
loop
int
nop
loop
mov
icebp
cmp
aaa
repnz
sub
movsl
movsb
ss
clc
add
push
aad
mov
call
pop
add
aaa
lret
xorb
mov
ljmp
test
neg
cmp
dec
divl
push
and
mov
aad
sbb
xchg
mov
data16
sbb
cmpsl
jb
enter
push
and
fistps
xchg
mov
cmpsb
dec
fneni(8087
mov
gs
jecxz
movsl
mov
mov
pop
inc
cli
js
out
shll
outsb
and
aam
test
xlat
dec
sbb
stos
xchg
cmp
xchg
xor
dec
ret
xlat
fwait
add
sub
mov
in
mov
push
data16
push
mov
cs
adc
stos
into
mov
sbb
add
jge
out
jb
dec
dec
add
jae
pop
mov
mov
or
mov
shrb
mov
sti
or
pop
add
loop
outsl
iret
jno
mov
dec
or
xchg
mov
lret
cmp
xchg
test
add
repz
jmp
sbb
or
loope
sbb
aad
cmp
iret
stos
sbb
mov
xor
subb
mov
pop
cmp
cmp
adc
sub
add
cmpsb
lods
mov
dec
jno
divl
add
ds
repnz
dec
clc
insb
pop
popa
sbb
xchg
push
pop
add
mov
movsb
mov
dec
or
addr16
jle
push
jge
mov
and
imul
ja
inc
mov
test
pusha
daa
clc
fisubl
adc
sbb
or
lods
push
push
in
inc
push
shr
xchg
test
ret
cmp
icebp
sub
int
or
shrb
gs
cmpsl
mov
inc
push
ret
or
pop
sbb
mov
xor
shrb
cld
mov
mov
or
shll
data16
jmp
mov
mov
jne
out
aad
xchg
int3
add
sub
or
or
shll
dec
inc
ljmp
jecxz
adc
orl
loope
mov
addr16
sub
cmc
pop
ret
cmp
xchg
movsb
scas
lods
lahf
push
int3
arpl
mov
push
push
stc
jle
pop
pusha
call
dec
pop
mov
jnp
xchg
popl
xchg
sub
sbb
sub
add
cmpsb
lods
rcl
pop
imul
les
xchg
hlt
or
cmc
sar
int
pop
sub
inc
hlt
xor
sbb
cmp
lea
and
fdivs
pop
sti
cmp
add
sti
lret
push
or
bound
lcall
push
mov
mov
mov
ja
or
gs
scas
pop
push
fdivl
adc
xchg
sub
pusha
sbb
in
dec
push
cmp
icebp
pushf
out
in
pushf
mov
je
leave
dec
ja
jecxz
je
pop
mov
daa
sahf
mov
loope
push
rsqrtps
cmp
pop
add
xchg
sbb
stos
sarb
aad
mov
int3
add
mov
negb
lock
gs
inc
add
popf
cmp
mov
aam
imul
mov
leave
std
jmp
xchg
stos
jmp
sets
fdivrl
add
push
mov
outsb
cmp
out
fwait
pusha
pushf
pop
jne
enter
pop
pop
xchg
sbb
mov
cmpsb
jmp
mov
fcomps
repnz
sbb
or
mul
mov
mov
iret
rcrl
and
sbb
cmp
push
push
in
orl
dec
jmp
jle
lret
in
jmp
jp
out
fwait
jle
testb
sub
xchg
icebp
and
nop
inc
lret
push
popa
fimuls
loopne
jno
cmpsl
inc
pop
repnz
nop
shll
sbb
cld
sarb
jae
jge
inc
or
jnp
pop
dec
std
das
fildll
nop
pop
sahf
cs
mov
adc
insl
call
inc
addr16
mov
jp
pop
mov
sub
repnz
data16
cmp
push
out
imul
xchg
je
test
cmpsl
insl
pop
lcall
xchg
aam
mov
imul
aaa
ja
adc
cmpsl
push
mov
ss
lret
jl
imul
arpl
jecxz
mov
cwtl
mov
xor
jbe
mov
test
inc
lds
je
pcmpgtb
cmp
dec
inc
and
cmc
test
outsl
popf
sbb
pop
mov
mov
ficoms
clc
pushf
popf
into
call
loopne
insl
push
mov
jecxz
sarl
sub
sarl
sbb
insl
cli
mov
insb
push
fidivs
ss
repz
and
cmp
movsl
rcrb
push
inc
mov
lods
loopne
and
dec
and
imul
leave
push
xchg
fucomip
jb
inc
push
inc
adc
in
xor
and
mov
xor
adc
fisubl
bnd
xchg
pop
dec
inc
in
pusha
cmpsl
pop
jp
imul
mov
push
lahf
cltd
mov
loop
scas
addr16
cli
mov
fistps
imul
or
mov
jecxz
lds
mov
rcl
xchg
mov
xor
or
enter
inc
cmp
xchg
ja
inc
cmp
mov
or
push
jecxz
sbb
push
push
sahf
and
addb
push
xchg
and
or
inc
popa
xchg
hlt
pushf
pop
sbb
sbb
jb
add
cld
pop
pop
cmpsl
xor
into
je
pop
out
push
jbe
jb
xchg
pop
sub
ficompl
pushf
je
xchg
ret
out
popf
fisubl
add
test
pushf
not
dec
add
mov
adc
sbbl
xchg
jmp
stos
xchg
ss
cmp
movsb
jne
jbe
mov
pop
mov
xchg
jle
lret
sarl
jp
fs
dec
ljmp
xchg
aaa
aaa
das
sbb
push
adc
xchg
and
jno
xor
fstl
cmpsb
and
or
shrl
arpl
repnz
iret
push
xor
xor
mov
lret
std
incl
mov
stc
or
imul
push
sub
imul
cmpsl
jo
cltd
inc
push
enter
ljmp
mov
aas
arpl
jl
ljmp
jne
stc
cmp
or
ret
jmp
push
mov
cmp
and
push
sbb
lcall
or
lahf
loopne
outsb
mov
dec
cmp
inc
push
jne
cwtl
aas
xor
pop
ret
mov
mov
xchg
pop
lea
std
jmp
bound
xchg
iret
and
ss
xor
add
call
cmpb
cwtl
cmpl
loopne
pop
lret
in
xor
xchg
in
dec
insl
mov
cld
cld
mov
fdivrs
add
outsl
stos
test
add
add
dec
std
add
aaa
loope
test
mov
sbb
ss
mov
stc
leave
add
loope
in
mov
daa
movsb
push
and
dec
mov
sbb
lea
push
cmp
jno
xor
fimuls
repz
hlt
and
mov
psubusw
xor
cmp
push
in
mov
push
push
xchg
arpl
enter
jl
insb
dec
mov
push
inc
cmp
xlat
pushf
jmp
inc
cmp
pop
jmp
loope
xchg
arpl
mov
inc
mov
cmpsb
sub
cmp
bound
adc
lock
aad
cmp
ja
and
mov
dec
in
jae
movsb
loopne
and
orb
mov
sbb
xchg
xchg
pop
push
dec
jl
mov
push
add
incb
push
mov
mov
xlat
cmp
adcl
or
lret
mov
push
push
jg
imul
inc
dec
movsl
mov
push
push
and
lods
js
jg
cmp
adc
into
mov
jge
pop
xchg
les
pop
mov
or
hlt
sahf
popa
and
adc
sub
or
mov
cli
adc
loopne
jp
fs
adc
decb
xchg
dec
orl
insb
add
mov
mov
jbe
adc
and
or
test
xchg
fisubrs
push
call
shl
fistl
pop
push
add
xor
out
add
lret
jae
das
mov
cmpsb
cmpsb
jns
adc
push
pop
repnz
cli
xchg
repnz
inc
mov
jg
xchg
fs
imul
je,pt
pop
mov
jg
fs
pop
xchg
dec
mov
sti
out
pop
in
cmp
jmp
xor
mov
in
js
xor
xor
icebp
dec
cmp
xor
push
repnz
fisubrs
mov
pop
xchg
sbb
mov
jbe
shlb
cmpsb
jle
jmp
stos
aam
shrl
enter
adc
jg
jns
sub
pop
loop
pop
sbb
stos
add
leave
adcb
xchg
add
pop
add
push
test
sbb
bound
pushf
mov
mov
add
enter
sti
xor
and
lds
hlt
xchg
incl
xlat
pusha
repz
movsl
pop
xchg
aas
imul
inc
int3
ffree
outsb
scas
mov
fidivs
fistpl
imul
pop
push
push
les
lret
or
mov
xor
dec
fdivr
lret
push
sbb
insb
imul
fldenv
or
cmp
mov
test
xlat
add
test
dec
lds
xor
jbe
jmp
in
add
and
lret
sarl
mov
inc
lods
lds
and
subb
icebp
mov
xchg
xor
es
xchg
js
cwtl
xchg
lcall
jmp
adc
fidivrs
lcall
js
xor
push
fldcw
ret
aad
test
mov
mov
jmp
insb
scas
push
xor
mov
subl
in
mov
aaa
sbb
pop
outsb
cmp
or
insb
pop
sub
adc
cli
mov
xchg
cmpsl
pop
out
addr16
and
int3
ret
and
xchg
nop
cmp
divl
and
and
pop
mov
cmpsl
pop
dec
leave
cmp
div
push
repnz
loop
stos
cmpsb
jnp
fstpl
loop
fsubr
push
sub
mov
scas
sub
jmp
pop
mov
lds
cmpsb
out
xchg
pop
ror
or
outsl
stc
sahf
imul
pop
ret
enter
cld
xchg
mov
idivb
lds
testb
push
popa
insb
sbb
jecxz
pop
mov
inc
xchg
push
lret
test
in
jbe
jb
mov
daa
jns
sub
lea
jmp
aas
fs
jbe
dec
hlt
test
mov
in
xorl
cmpsb
daa
inc
mov
daa
xlat
mov
testb
mov
jno
jecxz
ret
push
inc
subb
dec
pop
mov
pop
pop
outsb
rcr
adc
cmp
in
mov
mov
pop
inc
repnz
aam
xor
lcall
mov
stos
sub
dec
jp
xor
mov
ljmp
inc
jns
push
or
cmp
xor
pop
lods
movsb
sbb
and
push
lret
xchg
mov
inc
xchg
sub
add
sarl
mov
dec
push
and
mov
test
mov
dec
jns
in
loope
aam
jb
adc
push
sub
jno
inc
nop
sub
xor
sub
int
je
mov
fistpll
leave
out
xor
addr16
adc
cmc
push
xchg
sbb
jl
push
and
repnz
xor
mov
test
mov
mov
xor
lods
outsb
aas
mov
or
mov
mov
inc
ss
sub
ficompl
cli
xor
icebp
enter
jo
or
das
test
mov
and
js
movsb
dec
out
loope
js
jmp
push
mov
jne
pop
pop
shlb
test
pop
jmp
shl
ds
sbb
jecxz
push
jne
jns,pt
imul
stc
sti
out
shrl
dec
inc
push
push
mov
add
popa
and
and
mov
mov
addr16
push
sarb
inc
cmpsb
mov
outsl
out
adc
fisubl
mov
popf
lock
stos
sbb
js
add
je
fstps
xchg
jno
popf
sub
cmp
pop
aad
sahf
popa
mov
sbb
lcall
fmuls
cltd
jo
xchg
ret
xchg
xor
mov
add
cmp
inc
or
shrl
jl
aaa
jae
and
xor
lock
or
push
int3
nop
movsl
cmp
add
das
andl
jnp
sub
mov
push
fs
ds
roll
fs
stos
aaa
mulb
dec
mov
insl
push
pusha
sub
xchg
mov
xor
iret
imul
and
pushf
daa
sbbl
add
xchg
fwait
popf
aaa
enter
push
popa
pusha
sti
jae
addr16
mov
pop
push
int
gs
pop
xor
test
aam
push
and
mov
xchg
rcr
shll
ss
fisttpll
adc
jmp
sbb
cwtl
dec
add
fisttpl
adc
fs
jo
and
scas
mov
mov
shl
xchg
clc
xor
jae
xor
push
dec
ja
fstps
jbe
cmpb
js
fdivs
cmp
add
add
ficompl
dec
shlb
jne
mov
aad
movsl
push
cmp
or
mov
sbb
bound
lock
mov
ds
cltd
in
mov
mull
cmpl
dec
add
mov
mov
lds
or
mov
xor
jbe
mov
test
sti
arpl
bound
loop
push
jnp
dec
mov
jne
sub
loope
mov
cmp
push
repz
stos
insl
stos
xlat
fxch
rcl
mov
lcall
repz
mov
gs
js
and
adc
cmpsb
rolb
jae
subb
outsl
push
push
jns
lock
stos
cli
movsb
mov
stos
pop
daa
ja
cmp
cmp
fcmovu
sub
fimuls
adc
test
jnp
inc
pushf
fldl
les
fisttpl
pop
dec
int3
repnz
jno
inc
aam
bound
loop
sbb
cli
push
sub
adc
data16
mov
or
mov
cli
add
and
pop
inc
and
cwtl
scas
je
add
lods
repz
movnti
sti
loopne
pop
ljmp
insb
stos
sub
inc
xchg
adc
push
std
and
inc
rcr
sbb
mov
cmp
iret
movsb
push
inc
das
pop
fidivl
xchg
scas
jl
das
mov
int
dec
arpl
repz
jb
in
in
iret
add
mov
cmp
push
push
inc
pop
icebp
xor
or
enter
mov
stos
sub
cltd
xchg
xor
xchg
cmc
jae
xchg
mov
iret
sahf
mov
out
call
pop
inc
dec
mov
cmp
jo
cmp
adc
int3
push
imul
shlb
imul
adc
sub
dec
daa
insl
dec
jae
pop
dec
cmpl
xor
test
mov
clc
push
push
leave
fnsave
adc
push
mov
mov
jp
add
inc
adc
imulb
xchg
js
dec
jno
mov
aad
push
mov
rol
xor
rorb
and
mov
add
mov
pop
add
ss
ficoml
ret
or
rcll
movb
sbb
nop
mov
mov
push
adc
fstpl
in
pop
push
jle
xor
sbb
jecxz
cmp
push
lcall
into
lahf
pop
xlat
lea
fsts
mov
jno
and
shrb
sbb
adc
addr16
add
cmp
pusha
and
mov
stc
std
lods
inc
pop
or
mov
or
xorb
ret
stc
lock
jmp
scas
lock
das
or
std
jecxz
mov
outsb
stos
or
jg
xor
lds
mov
std
mov
dec
adc
xchg
push
adc
push
sarl
sti
sub
mov
jmp
out
mov
push
mov
adc
push
mov
in
dec
sbb
sub
shrl
fcmovb
xchg
cli
pop
gs
andl
in
out
gs
rorb
mov
out
ret
cmc
inc
daa
xchg
add
jge
repz
cmpsl
xchg
push
pop
pop
xchg
push
out
mov
adc
outsb
ja
std
cmpsl
loop
cmp
loope
adc
ljmp
push
or
sbb
lods
daa
add
ret
jb
sub
clc
test
in
cs
in
push
jo
cmpsl
enter
jge
adc
popa
lret
sbb
pop
jnp
loope
aam
imul
add
mov
iret
sbb
push
outsb
hlt
testl
or
inc
sub
mov
icebp
fs
adc
mov
sbb
xor
inc
sbb
dec
jns
fwait
jecxz
xlat
scas
fucomip
jb
lds
add
jnp
dec
inc
xorb
leave
cld
cmc
push
iret
xor
inc
push
or
inc
and
sub
push
in
mov
hlt
mov
test
push
mov
outsb
mov
pop
ljmp
jge
call
icebp
repnz
leave
dec
mov
test
fcoml
js
adc
and
ds
bound
dec
data16
movsb
add
loop
inc
dec
into
jbe
insl
mov
mov
stos
insb
and
add
ja
sahf
sbb
dec
lods
mov
cmp
or
push
imul
fimuls
cmpsb
lods
jae
jle
jmp
icebp
stos
scas
xchg
fildl
push
xchg
scas
movl
jno
inc
icebp
pop
jmp
jbe
fistps
icebp
cmc
pshufw
cmp
sahf
decb
fs
mov
rcrl
and
out
jo
sbb
mov
mov
cmpl
insl
add
aad
mov
pop
fnstsw
lock
loope
inc
in
add
add
out
movsl
or
in
xchg
ficomps
in
idivb
repz
lods
inc
ret
mov
jo
cs
jb
inc
lcall
imul
xchg
js
push
frstor
cwtl
pop
stos
pop
add
out
and
mov
and
sub
adc
bound
scas
iret
inc
iret
dec
adc
imul
pop
data16
and
xor
cmpsb
psllw
pop
cmc
sbb
aaa
fcmovne
pop
sbb
cs
mov
cwtl
mov
fadd
dec
jl
stos
adc
les
adc
and
adc
loopne
call
xchg
push
sub
jo
inc
xor
or
cmp
sbb
xchg
push
fldcw
sub
inc
pop
lcall
cmpsb
jae
sbb
popf
push
popf
push
sub
xchg
cmpsb
lcall
add
cmp
fcom
int
popf
bound
add
outsl
inc
pushw
push
mov
sbb
pop
sub
add
xchg
cld
adc
jmp
mov
scas
cmp
lods
stos
into
mov
push
jnp
and
sub
int
dec
dec
iret
sahf
into
leave
ficomps
enter
add
mov
adcl
subl
cmp
pop
test
int
or
cmp
cltd
push
movmskps
cmpsb
in
inc
adc
ret
dec
das
sahf
and
out
cltd
stos
ljmp
mov
pushf
cmc
adc
adc
mov
js
xchg
adc
mov
dec
and
xor
inc
adc
aam
pop
int3
stos
mov
push
aaa
adc
iret
int3
jns
add
ja
and
push
add
push
add
pop
push
jmp
cmpb
fcmovnbe
pushf
xor
les
orl
sbb
leave
pop
and
hlt
pminsw
mul
xchg
cld
push
rclb
pop
sbb
jecxz
andb
push
add
inc
sub
mov
cmp
dec
out
imul
mov
jae
test
and
adc
or
shlb
andb
sub
icebp
mov
outsl
adc
lds
pop
mov
cmp
jo
outsb
and
bnd
sbb
pop
mov
lret
cmpsl
inc
jp
bound
inc
insb
movsb
stos
xchg
lcall
adcb
sbb
dec
cmp
xor
dec
loope
xchg
ds
jo
cmpsb
pop
jmp
lock
rolb
call
adc
mov
jae
aam
sbbl
mov
in
mov
bound
arpl
insb
or
sbb
dec
jmp
adc
push
adc
mov
mov
sti
cmpsl
inc
or
cmpsl
or
popa
pop
fildll
push
push
je
xchg
dec
pop
sbbb
inc
pop
js
sub
xchg
sub
rol
xlat
push
adc
hlt
in
add
pushf
dec
ret
xchg
xchg
add
sbb
xchg
aam
pop
ror
test
rorl
cmp
ja
ret
scas
mov
mov
out
dec
mov
push
xor
pop
test
loope
in
xchg
push
popf
fdivrl
jns
lret
add
cmp
sub
cmp
hlt
adc
shrl
test
test
push
sbb
stc
xchg
in
vunpckhps
lods
adc
xchg
popf
xchg
sub
ret
rcl
mov
xor
stc
vmovntps
popf
xor
mov
test
ds
cmp
sub
fmulp
add
mov
or
pop
xlat
jae
das
jp
sub
mov
and
and
movsl
pop
pop
mov
cmp
movsb
dec
pop
lods
mov
mov
andl
les
test
ret
mov
inc
jge
out
mov
mov
mov
mov
xor
call
outsb
push
cltd
lcall
mov
mov
push
pop
cmpsl
push
loopne
enter
jl
cmpsl
cmpsl
mov
jmp
ss
ljmp
mov
mov
mov
jmp
and
adc
int3
iret
cmpsl
sti
or
rcll
pushf
jle
mov
inc
sbb
sub
insl
dec
pop
pop
idiv
sub
mov
scas
shrb
mov
push
loopne
rolb
push
pop
testb
mov
jb
pshufw
out
sbb
in
push
repnz
push
fwait
inc
jl
add
jae
sub
mov
pop
mulb
cmp
jmp
xchg
scas
out
loopne
push
rorl
dec
int
inc
push
adc
mov
out
push
call
pop
not
ficoml
sub
lret
push
dec
lods
das
mov
shr
dec
jl
mov
adc
andl
enter
popa
fistl
mov
push
and
loope
ja
into
and
add
cmpsb
fs
xor
xchg
fstpl
mov
loope
cmpsb
repnz
das
jmp
es
xor
cmp
sub
test
push
call
add
fwait
sbb
rclb
aad
jge
in
fwait
push
test
add
int3
mov
insb
and
lods
sbb
push
xchg
sbb
mov
mov
cmpsl
push
mov
and
inc
aam
loop
pushf
add
adc
inc
inc
or
nop
test
push
inc
pop
scas
xchg
mov
into
sub
rcll
xchg
jne
adc
jne
inc
scas
push
pop
xlat
popa
bound
iret
dec
inc
mov
push
cmp
out
fdiv
neg
loope
das
fwait
xchg
daa
std
mov
mov
not
xchg
jne
imul
mov
sub
cmp
sti
dec
mov
pushl
mov
repz
jle
ljmp
popa
dec
xchg
int3
xchg
cmp
mov
mov
pusha
push
clc
adc
cmp
bound
mov
push
add
sti
adc
push
in
jp,pn
xchg
pop
js
leave
xlat
cmp
pop
dec
popa
and
mov
ret
pop
adcl
sti
lret
mov
cmp
sub
or
shll
inc
ret
mov
pop
jge
xchg
sub
aas
lea
push
cmpl
push
inc
jmp
mov
hlt
mov
xchg
fidivl
jns
lea
loope
add
pop
insb
dec
sbb
xor
pop
mov
loop
shlb
out
push
in
enter
adc
mov
push
lods
outsl
cltd
inc
int
pushf
xchg
jo
xor
hlt
loope
jge
jbe
outsl
push
fimull
test
pop
fisttpll
decb
jae
mov
in
dec
xchg
mov
xchg
stos
movsb
loope
mov
and
into
adc
fwait
sbb
jge
gs
lcall
jle
stos
sarl
out
stos
ds
adc
fs
cmp
inc
xor
subl
mov
push
cmp
sub
inc
push
xor
and
pop
aaa
rcrb
jge
xor
fbstp
xchg
inc
sub
adc
inc
xchg
les
inc
or
hlt
push
dec
mov
xchg
fisubrs
sbb
fptan
movsl
inc
sub
adc
stos
mov
jg
xorb
ficoms
mov
adc
push
mov
dec
cmpsl
in
sbb
dec
insb
inc
pop
in
push
je
or
test
ja
inc
fisttpl
in
inc
es
repnz
movsb
mov
mulb
pop
push
lods
pop
insl
xlat
sub
dec
xlat
call
rorl
jp
insl
lret
sub
add
pusha
movsl
sbb
lret
ret
inc
std
sbb
arpl
dec
fcmovne
scas
sbb
sbb
mov
adc
or
cwtl
mov
xlat
fimull
mov
xor
sbb
and
or
push
je
stc
stos
dec
pop
jb,pt
mov
cmp
push
push
int
es
pop
mov
sbb
fimuls
je
cmp
add
adc
sbb
sarb
aad
loopne
push
jnp
inc
pop
push
push
mov
loope
mov
ret
mov
and
push
popf
mov
rcl
push
hlt
xchg
fwait
xor
into
cmp
or
inc
enter
mov
ljmp
rcrb
das
popa
sbb
add
lds
xor
ss
loope
movsl
mov
inc
daa
shl
test
xor
jecxz
lahf
mov
data16
enter
loop
pusha
cli
xchg
notl
push
sub
jae
and
xchg
idivl
shr
nop
ss
lea
mov
add
inc
and
add
adc
cmp
add
add
push
add
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
popf
mov
add
jl
inc
pop
jl
js
ret
adc
loopne
or
lahf
rcrb
sub
cmpl
or
cli
bound
test
out
inc
push
mov
mov
aad
hlt
mov
or
xchg
xlat
outsb
js
imul
push
lods
jl
push
xor
add
in
cmpsl
cmp
ss
fldl2e
dec
sub
sarb
xor
or
sbb
xchg
stos
mov
xor
in
push
jbe
or
dec
mov
dec
ds
out
fwait
pop
daa
mov
mov
add
loope
sbb
xchg
hlt
xchg
stos
pushf
add
cmpsl
out
push
dec
ljmp
fadds
pop
fnstenv
adc
in
cmp
sub
adc
inc
inc
fisttpl
xorl
add
into
stos
sub
rorl
or
and
pusha
pusha
jecxz
scas
std
add
arpl
cwtl
into
push
sarb
push
fisttps
mov
addr16
sti
jae
xor
js
mov
push
lods
sub
ljmp
iret
lahf
push
or
sbb
or
daa
ficomps
jl
xchg
cli
nop
lods
out
pop
inc
mov
dec
mov
outsb
adc
and
in
adc
ja
adc
pop
push
sub
mov
clc
loop
mov
es
test
shrl
movsb
icebp
dec
int
sub
sti
jnp
jo
lds
add
imul
ljmp
push
rorl
push
mov
mov
call
push
mov
jns
xlat
incb
cmc
jmp
jp
aaa
cmp
push
jns
dec
jg
fildl
lahf
out
sbb
or
dec
pop
imul
dec
jns
fistps
sbb
out
in
jb
mov
sbbb
cmp
lret
jbe
lock
stos
stos
movl
sbb
pushf
sub
sub
test
jb
inc
stc
push
out
adc
mov
ja
sti
inc
mov
lcall
pop
push
xor
adc
in
mov
sbb
push
addr16
out
aam
mov
add
lods
xlat
xchg
sbb
lods
and
mov
mov
stos
push
pop
in
xlat
sahf
add
fndisi(8087
jecxz
lret
inc
sub
call
sbb
push
das
dec
out
sahf
out
push
shlb
dec
push
or
dec
scas
mov
movsb
or
pop
inc
adc
jecxz
outsl
dec
call
clc
add
inc
imul
mov
mov
jnp
add
jmp
daa
les
sub
dec
add
es
pushf
jbe
xor
push
fldenv
outsb
lods
and
dec
mov
and
jns,pt
adc
or
push
and
mov
xchg
nop
fwait
xor
sub
jns
cmp
jo
lea
mov
clc
cmpsl
gs
xor
leave
or
mov
lahf
and
ss
cmpsl
mov
popa
ljmp
sub
nop
sahf
push
adc
push
movsb
ficoms
mov
dec
nop
sub
repnz
mov
stos
outsb
push
sub
pop
push
pop
lret
sub
inc
fwait
mov
sahf
daa
pop
adc
es
iret
movsl
insl
push
fstpl
in
push
jle
jl
xchg
pop
mov
and
mov
or
pop
das
cmp
call
jb
and
inc
call
cld
inc
mov
test
into
test
cwtl
jp
or
mov
jbe
aas
inc
popf
mov
jg
push
jge
pop
sbb
mov
cmpsb
or
push
pop
lcall
inc
adc
or
lods
es
lret
xchg
lds
test
adc
stos
jo
daa
aam
inc
mov
sti
out
bound
mov
pop
in
xchg
xchg
or
mov
nop
jg
sahf
loopne
mov
test
jge
lcall
insl
and
mov
and
dec
fistl
sti
sub
sub
mov
rolb
pushf
xlat
bound
and
das
aam
cmpsb
pop
adc
mov
push
repz
cmp
inc
pusha
cli
or
call
lahf
and
mov
pop
push
test
movsl
or
cli
dec
rcll
pop
test
mov
dec
mov
xor
lods
daa
int3
bound
outsl
cwtl
pushf
das
xchg
sbb
and
test
adcl
je
int3
cmp
and
pop
out
push
aad
adc
mov
fs
push
adc
xchg
sub
nop
jge
sti
pusha
mov
adc
lods
testb
dec
jmp
mov
sahf
push
sarb
lret
pop
cltd
mov
cwtl
ljmp
ret
sub
and
lock
pop
mov
lret
adc
inc
in
mov
fdiv
push
imul
mov
xchg
sbb
pop
out
pushf
pop
cmp
push
jge
push
call
shlb
sub
mov
xor
insb
jno
cmp
inc
dec
addb
das
push
idivb
cmp
lods
or
lahf
adcl
out
rolb
lret
push
xor
and
push
roll
mov
shll
outsb
sub
cmpsb
fwait
loop
shl
xlat
std
mov
pop
and
push
mov
and
adc
jb
in
js
aaa
mov
testl
sub
lea
cmpsb
fsts
add
adc
rorl
push
test
mov
pop
lret
add
sbb
xchg
rorl
aad
orl
aam
inc
mov
jg
stc
mov
out
adc
cmpsb
adc
xchg
jno
sub
inc
insl
cmpsl
xchg
hlt
xor
stos
pusha
mov
ss
pop
cmp
mov
out
and
push
sbb
cld
out
cmp
cmpsl
mov
testl
jb
push
pushf
cmp
ret
sub
outsb
insl
loope
push
or
stos
out
mov
ja
dec
adc
jne
ds
jg
sub
sub
lcall
jle
in
or
sub
out
xchg
cmp
and
test
pop
and
dec
push
orb
lret
dec
ja
mov
fsub
addr16
jbe
xchg
out
js
pop
jge
loop
fdivp
jge
jns
shrl
mov
jl
lcall
scas
and
cmp
addr16
pop
lcall
push
addr16
popf
cld
test
and
pop
movsl
dec
ja
mov
dec
lahf
and
sbb
sbb
mov
inc
fimuls
lods
ret
xor
and
enter
test
outsb
pop
aad
ds
push
mov
in
ljmp
push
and
cmp
push
sub
xchg
adc
sbb
mov
jge
test
push
mov
dec
add
jl
int
shrl
adc
and
cs
int3
in
repnz
fstl
popa
lret
jbe
lret
xorb
sbb
xchg
outsl
cmc
push
sti
daa
js
jb
enter
inc
scas
ror
xchg
cli
pop
adc
cmpl
mov
or
sub
push
mov
pop
das
mov
add
xlat
inc
pop
mov
in
sub
add
xchg
stos
divb
fisttpll
add
cmpsb
xchg
or
lods
shlb
adc
cli
test
fdivl
push
add
iret
add
shll
or
mov
popf
push
es
inc
push
xor
push
and
sub
xorl
in
roll
mov
ror
fistl
int3
xchg
gs
xchg
test
bound
rcr
out
mov
or
rol
and
mov
fsub
wbinvd
xor
jnp
and
and
repz
dec
fcoml
xchg
movsl
inc
rcr
bound
cmp
sahf
cmp
pop
idiv
lock
mov
lcall
pop
dec
add
cmp
fsts
pop
mov
pop
pop
mov
insl
imul
dec
mov
mov
pop
xchg
cmp
pop
out
inc
iret
out
pushf
adc
test
add
data16
shrl
fnsave
ja
xlat
mov
jne
and
pop
xor
push
dec
jo
fmuls
shlb
add
addb
sub
int
xlat
loop
clc
fdivrp
fimuls
popa
sbb
stc
ds
ret
add
lds
idivb
adcl
scas
pop
cmp
jae
iret
fisubrs
and
fmul
cld
aaa
aad
outsb
xchg
sbb
gs
test
inc
inc
mov
sbb
jns
adc
int
dec
pop
xchg
das
pop
popa
dec
sub
or
dec
mov
loopne
not
mov
js
fistl
xchg
loop
sarl
push
xchg
outsb
mov
lods
xchg
jmp
cmc
outsl
sbb
fimull
insl
sbb
into
cmp
aad
scas
fmulp
dec
outsl
pop
insb
addr16
pop
jecxz
sbb
repz
adc
fistl
jmp
dec
mov
pop
bound
cmp
adc
stos
jae
sbb
xchg
pusha
or
jnp
mov
iret
int
cltd
repz
push
jl
or
or
pop
jge
jmp
shll
enter
xor
push
pop
and
xor
xchg
psrlq
or
sbb
add
ja
stc
subl
ret
ljmp
mov
push
adc
mov
insb
or
aam
mov
inc
mov
pop
xchg
mov
and
push
inc
xchg
cmp
dec
sar
into
inc
dec
sahf
sti
mov
xor
and
int3
xchg
ljmp
pop
sub
fdivp
mov
in
sbb
push
enter
out
ljmp
aad
mov
add
pushf
loop
xor
jle
sti
fmulp
cmp
out
jmp
sbbb
mov
xor
xchg
es
sti
sub
enter
mov
repz
push
lahf
dec
ficoml
aam
xcrypt-ecb
cmpsl
pop
add
xor
sbb
add
bnd
push
pop
and
lods
mov
xor
fwait
test
adc
cmp
mov
repnz
or
xor
sbb
ffreep
clc
loop
xchg
cmp
movsb
and
xchg
mov
inc
and
movl
insl
adc
mov
cmp
cli
dec
fmul
dec
out
pop
stos
mov
adc
mov
movsl
dec
or
sbb
pop
push
dec
aaa
xor
mov
in
jmp
xchg
and
imul
inc
add
js
dec
lret
test
sub
mov
lcall
sub
inc
icebp
cmp
mov
xchg
mov
ss
in
test
xchg
je
adc
loop
push
sub
mov
xor
and
loop
fisubrl
gs
xor
or
mov
mov
mov
out
sub
repz
leave
insl
mov
dec
ljmp
mov
and
and
adc
lods
sbb
repz
xchg
std
je
stos
push
outsl
fimuls
stos
fcoms
and
imul
sbb
lock
out
and
or
jns
movsb
inc
cmp
out
jne
mov
mov
incb
mov
lods
dec
mov
out
popf
pop
mov
imul
dec
icebp
add
pop
xchg
mov
adc
dec
adc
test
sti
mov
fiadds
in
test
dec
lods
cmp
pop
jge
mov
sub
ljmp
idivb
aas
adc
pop
cmp
dec
push
dec
jle
out
xchg
cs
loopne
adc
inc
ds
cmc
ds
adc
js
mov
inc
or
in
inc
dec
add
gs
jo
subl
dec
mov
cmp
je
or
and
dec
aas
rorb
popa
mov
test
pop
iret
mov
xlat
pop
test
shrl
jno,pt
mov
in
or
std
mov
test
cmpl
xchg
pop
xchg
cmp
push
inc
lea
arpl
xchg
xor
push
imul
lock
inc
dec
xchg
jl
popa
cs
mov
mov
jb
jl
bnd
jno
movsb
cmp
pop
cwtl
sahf
scas
stc
outsb
lods
or
fcmove
loope
iret
mov
add
push
dec
mov
mov
or
in
js
sahf
stos
in
nop
nop
jno
lods
mov
push
cs
pop
enter
divl
outsb
loope
add
out
and
dec
jno
in
sbb
add
fcomps
jp
andl
fcomps
jae
pop
pusha
xchg
in
cltd
scas
hlt
lock
std
xchg
inc
add
xor
gs
cli
inc
adc
jo
sbb
arpl
jbe
mov
stos
loop
or
subl
add
fdivrp
jno
sub
roll
cs
loopne
sti
xchg
cmp
je
mov
test
ret
fisubrl
adc
mov
int3
add
cmpsl
jne
jnp
into
xchg
in
add
jae
jno
lods
xor
mov
cld
sbb
inc
jge
dec
aad
lds
dec
add
add
loop
rolb
lret
pop
inc
sbbl
mov
popf
mov
cmp
mov
shl
or
xchg
sub
and
popf
cmc
arpl
mov
xchg
push
xor
push
cmp
mov
xlat
out
adc
shlb
int
add
loop
add
or
ja
imul
inc
pusha
or
inc
cmpl
pop
jb
mov
push
outsb
sarb
add
shl
inc
pop
jp
sbb
popf
dec
enter
repz
mov
imull
mov
pop
movsb
scas
inc
jle
negb
fnstsw
push
inc
sbb
inc
sub
es
mov
push
fstps
jns
nop
ss
push
mov
cmp
xchg
negl
xor
xorl
push
mov
xchg
or
inc
mov
xchg
and
push
in
xchg
adc
notb
mov
insb
ds
mov
lcall
divb
sbb
pop
outsb
lds
das
inc
fwait
in
and
scas
cmp
jge
and
insb
out
push
sbb
xor
fsqrt
sarb
out
or
push
pop
inc
mov
mov
in
xor
xor
fisttpll
adc
xor
jo
aad
cltd
jbe
sub
adc
push
sti
or
push
pop
sbb
pop
rcll
sub
jbe
pop
jmp
sti
add
and
in
xor
filds
mov
dec
aaa
mov
and
cwtl
push
mov
dec
imul
cs
jmp
loope
and
inc
inc
sub
out
sub
cmp
loop
sar
and
pop
stc
out
lods
pusha
mov
push
jp
pusha
mov
orb
fs
pop
dec
adc
jns
mov
jo
gs
movsb
gs
and
aad
cmpsl
inc
iret
call
sbb
fbld
int
pop
movsb
in
aas
push
cmp
dec
mov
jge
imul
sarb
mov
fmull
xlat
push
scas
jns
pop
push
fwait
test
in
sub
repnz
das
jg
add
dec
cmp
or
inc
mov
xchg
in
pop
mov
pop
or
aam
cli
mov
adc
cmp
cmp
shll
jnp
outsl
ret
cmp
sbb
sbb
jge
fadds
sub
fstpl
sbb
xchg
fmulp
sbb
data16
jp
add
mov
adc
lahf
das
test
sub
stos
shl
movsl
clc
in
mov
popf
lret
notl
call
fbld
out
xchg
mov
pop
daa
daa
dec
jmp
loop
xchg
and
xor
movsb
das
int3
mov
scas
cmp
mov
icebp
imul
xor
ss
stos
add
pop
sbb
mov
mov
stos
fs
mov
xor
xchg
ret
test
sub
jb
adc
and
test
cmpsl
xchg
ljmp
jo
xchg
pushf
fbstp
pavgb
xchg
push
or
test
popw
test
jmp
jbe
dec
dec
sub
rcr
and
loope
js
mov
dec
lock
xchg
adc
jp
call
inc
pop
jne
popa
movsl
jle
ficomps
adc
sbb
push
or
cmp
adc
aaa
fildl
pusha
outsb
mov
push
mov
repnz
mov
push
mov
daa
mov
cmp
sub
insb
and
push
repz
jmp
push
ljmp
mov
sbb
ss
les
mov
sbb
pop
testb
push
stos
xchg
arpl
xor
fisttpll
lods
and
xchg
std
mov
push
lea
les
mov
lea
in
dec
xchg
xor
mov
stos
and
in
xor
fnstcw
cmpxchg
test
cmp
mov
push
sbb
hlt
push
cli
and
lods
push
icebp
xchg
jno
push
divl
mov
popf
cmp
mov
mov
adc
imul
call
aad
int
push
cmp
or
je
mov
cmp
sub
repz
fstps
push
ja
pop
pop
js
pop
inc
xchg
into
lret
lods
gs
xor
jnp
add
dec
mov
mov
jg
fidivs
les
in
out
enter
imul
sub
xchg
mov
pop
mov
rcll
lahf
xor
add
sbb
pop
nop
imul
and
xor
mov
fsubrl
mov
or
mov
ret
fsts
mov
cmp
xchg
outsb
jmp
cwtl
ljmp
mov
and
adc
sbb
sub
cmp
mov
addr16
pop
test
sti
mov
fstpt
enter
mov
hlt
sub
cld
cmpsb
cmpsl
orb
lock
dec
inc
pop
sarb
push
xor
movsl
jb
cmp
int3
shl
adc
scas
lret
roll
sahf
sub
rorb
inc
je
adc
mov
pop
ljmp
jno
add
cmp
xor
and
add
push
insl
sahf
adc
jns
xor
lret
daa
sub
cmp
and
add
es
inc
and
arpl
add
loop
push
iret
test
test
loopne
mov
ljmp
adc
cwtl
sbbl
sbb
nop
dec
or
inc
lods
jne
xlat
loopne
aas
dec
arpl
stc
aas
cli
push
fstpl
push
xor
push
lcall
inc
push
lahf
fidivrs
lds
cwtl
stos
sbb
inc
cmp
mov
ds
add
push
lods
push
lods
add
and
sbb
or
mov
xlat
cmpl
sti
add
lods
xchg
lahf
dec
lret
push
scas
dec
pop
arpl
movhps
fldenv
adc
jo
sub
int
mov
inc
mov
fldl
mov
and
xchg
repz
jae
leave
scas
jge
jmp
pop
xchg
fisttpll
ret
mulb
sbb
pop
jmp
mov
dec
emms
pop
repnz
in
ret
stc
jle
add
enter
ret
fdivrs
cli
xchg
xchg
arpl
mov
jp
hlt
out
dec
loope
call
jg
mov
fdivs
and
mov
iret
inc
vmread
pop
iret
addr16
push
lds
push
xor
incb
push
jl
fs
mov
xrelease
push
add
stc
shlb
bound
sbb
mov
fnstcw
or
popa
scas
nop
divb
add
lods
pop
mov
lock
add
cmp
lret
clc
ficompl
push
clc
fildl
push
popf
inc
fadd
in
mov
ds
sub
outsl
pop
pop
xchg
xlat
popa
sub
insl
daa
aam
or
mov
lea
lods
push
lea
ds
mov
out
dec
fnstsw
mov
dec
ds
push
jae
outsl
lcall
mov
or
adc
clc
xchg
js
pop
push
cmp
shl
das
outsb
mov
in
mov
push
inc
push
cmp
enter
cmpb
aaa
ficomps
xchg
jg
bound
sbb
cmp
push
sbb
or
lods
and
lock
stc
xchg
cmp
outsl
sbb
ja
sub
int
dec
sbb
mov
jne
push
pop
xchg
push
adc
mov
pop
jp
jp
pop
inc
mov
sbb
dec
mov
cmc
xchg
jg
pop
fld
cmp
mov
stos
int
fldcw
outsb
mov
or
stos
add
sahf
xor
adcl
xchg
mov
rcrb
subl
xchg
adc
jns
push
shrl
pop
movsb
js
push
sti
inc
dec
adc
js
xchg
fdivp
mov
push
pop
sbb
xchg
pusha
fucomp
dec
int
mov
sahf
jnp
jbe
jae
das
push
or
push
rcl
lahf
mov
jae
popa
jp
fildl
adcb
or
sub
and
mov
and
cwtl
push
pushf
imul
xor
daa
add
pop
scas
cmp
movsb
mov
jno
xchg
xchg
inc
or
xor
outsb
into
mov
mov
xor
out
lret
pop
pop
cmpsb
cld
int3
int
rcrl
xchg
es
and
lock
fcoml
in
mov
pop
jge
cmpb
popa
jo
adc
jmp
sub
cs
stos
and
fnstsw
repz
cmpsl
sbb
and
fnstcw
jle
inc
push
enter
pop
cmp
inc
mov
das
push
cmp
rolb
add
mov
scas
ja
xchg
jecxz
cs
xlat
ljmp
cmp
das
popf
cmp
pop
sub
sti
sbb
dec
and
mov
mov
mov
jmp
mov
or
mov
iret
push
inc
cmp
gs
inc
and
fildll
movsb
or
out
pop
loopne
mov
out
idivl
xor
pop
das
imul
xchg
mov
mov
jle
inc
cmp
mov
adc
adc
sub
dec
sbb
xchg
lahf
mov
cmpsb
xchg
insb
cltd
jbe
mov
jb
test
inc
or
or
jp
mov
cmp
push
inc
cmp
xorl
jge
mov
test
or
push
xchg
jno
gs
in
mov
subl
add
push
popa
xchg
xchg
mov
fndisi(8087
jge
jl
inc
lea
iret
enter
jo
cmp
in
imul
mov
xor
sahf
dec
or
ja
ret
out
int
adc
xor
es
mov
cltd
ljmp
jge
fistl
and
mov
adc
sub
and
mov
mov
loope
sahf
cmc
add
mov
jne
pop
ror
sbb
cli
out
mov
andb
sub
shrl
push
lcall
jecxz
sub
mov
inc
cmpsl
mov
xor
push
inc
add
push
test
subb
aad
aaa
and
mov
rcll
jns
lahf
inc
push
scas
jl
daa
pushf
cmpl
out
mov
out
push
lahf
popf
fwait
ja
push
mov
stos
xor
sbb
lock
cmpsb
mov
cmp
addb
jle
lahf
xlat
aas
cmp
cmp
push
pop
inc
cmpsl
adcl
xor
mov
dec
dec
les
testb
sbb
icebp
pop
inc
sbb
mov
cltd
mov
shrb
lea
xchg
scas
outsb
xchg
pop
outsl
mov
inc
xchg
lret
lods
xchg
mov
rcll
pushf
lock
mov
pop
leave
test
jae
pushf
std
inc
adc
jne
jae
outsl
sbb
sub
imul
cmp
xchg
cltd
jbe
sbb
sahf
stos
ret
fcmovnbe
add
mov
xchg
lret
aas
mov
dec
in
gs
shlb
outsl
xor
add
push
pushw
pop
lock
push
add
test
outsb
repnz
insb
push
les
into
xchg
divb
jp
and
lds
dec
dec
mov
enter
rcr
push
inc
out
or
lret
insb
adc
push
sub
inc
inc
adc
mov
arpl
lahf
cli
xlat
pusha
pop
ret
clc
lods
xor
test
sub
sbb
sbbb
xor
dec
inc
inc
jne
clc
dec
mov
cmp
push
notb
adc
imull
ficomps
add
clc
sti
mov
pop
popa
mov
sbb
xor
aas
idivl
mov
add
cs
pusha
nop
mov
loopne
aam
jns
cwtl
inc
cmpsb
clc
push
xchg
stc
cmp
loopne
mov
int
lds
dec
stc
dec
mov
nop
mov
jne
ds
bound
add
xorb
cmp
jl
mov
ret
cmpsb
push
push
ja
and
mov
test
xor
movsl
insl
loop
and
push
scas
insb
inc
enter
mov
std
add
std
int3
inc
sub
jl
idiv
shl
xorl
imul
dec
ss
xchg
mov
outsb
sbbb
dec
jns
sub
lcall
mov
pop
cmp
sbb
fmuls
dec
push
insb
andb
stos
call
cwtl
push
jp
pop
jns
or
in
int3
call
pop
rcll
enter
ret
and
cmp
xchg
decl
js
xchg
out
es
scas
jo
stos
jae
mov
lea
arpl
jg
jo
popa
sub
jnp
jle
fxch
lods
xor
sar
stos
fdivrl
fdivrs
ficoms
dec
aaa
stos
out
pusha
ret
and
cmp
testl
sarl
arpl
or
push
jbe
insb
in
push
loope
cmp
sbb
aad
xor
inc
pusha
mov
jb
movsb
leave
dec
inc
test
push
mov
stc
roll
data16
mov
pushf
dec
lahf
sub
add
cmpsl
pop
and
dec
into
scas
outsb
loope
cmp
sub
stc
divl
fisubs
repz
add
gs
cmp
mov
mov
sahf
daa
or
dec
mov
xor
pop
inc
outsb
ret
lods
lahf
jecxz
sub
adc
cwtl
in
mov
inc
jle
xor
or
cmp
push
xchg
imul
or
mov
sbb
lahf
stos
test
adc
pop
push
iret
dec
sarb
jb
outsl
lods
mov
pop
cmpsb
xor
jno
aam
test
ss
push
sub
jp
xor
lret
push
cmp
cmp
cwtl
sub
ficoms
sbb
sub
mov
movsl
insl
stc
xchg
xor
cmp
jge
rorl
ss
bound
mov
scas
test
out
push
cmp
pop
jp
jnp
insb
mov
jno
sbb
pop
out
sahf
mov
sbb
dec
outsl
ja
or
and
test
cwtl
push
inc
push
popa
jmp
bound
imul
add
cltd
int
lcall
sbb
add
cmp
or
sbb
cltd
inc
insl
xlat
bsr
cmpsb
mov
pop
mov
adc
movsb
movsb
or
sti
stc
sbb
and
or
lahf
js
fdivrs
fstps
or
lcall
sub
stc
sbb
mov
xor
aad
es
sub
pop
pop
add
mov
mov
mov
aad
adc
cli
dec
lahf
imul
leave
adc
in
adc
test
inc
cld
push
lods
leave
push
xchg
push
inc
mov
mov
xchg
arpl
fcmove
ja
dec
pop
inc
repz
int
cmp
dec
outsl
fs
shrb
fs
inc
aam
fadds
in
pop
mov
jg
rcl
test
rcr
addl
ja
push
into
mov
xor
in
incb
inc
mov
incl
ja
enter
loop
sub
add
cmp
adc
jnp
jl
loope
mov
ret
mov
mov
dec
mov
or
or
pop
mov
decb
jb
mov
fisubrl
mov
dec
push
nop
test
std
in
insb
in
jno
xor
adc
mov
mov
fwait
sbb
enter
mov
es
adc
mov
mov
mov
inc
mov
fadds
test
pop
push
insl
mov
pop
inc
add
aad
cmpsl
push
mov
jnp
out
jns
cmpsb
sub
out
pop
push
mov
or
loope
push
ret
and
mov
cltd
fwait
cmp
int
sbb
xchg
aam
loop
andl
xlat
movsb
mov
or
arpl
les
dec
and
sub
lods
popf
inc
mov
js
add
dec
out
jb
icebp
loop
xchg
sbb
lcall
lahf
mov
or
cmpsl
push
inc
bound
pop
xor
arpl
inc
clc
dec
adc
xor
test
xchg
icebp
int
clc
mov
mov
mov
jb
mov
mov
jmp
repnz
jmp
inc
mov
cmp
loope
mov
jo
cmp
filds
pop
xor
mov
leave
push
data16
mov
mov
movsl
inc
jg
or
mov
jbe
xchg
adc
xchg
sbb
sub
adc
push
fnsave
lahf
mov
cmp
test
mov
push
sarl
cli
int
xor
insl
pushf
xchg
xor
cli
movsb
es
and
test
cmp
xchg
negl
or
push
xchg
mov
pop
or
cmp
and
add
sti
lahf
rorl
imul
adc
pusha
jno
fmull
fwait
lds
mov
xor
daa
fnstenv
ja
sub
push
aam
xchg
jecxz
jo
dec
inc
pop
aas
decl
or
sub
data16
rorb
notb
jecxz
fimull
mov
insl
cmp
jno
inc
ret
xchg
insl
jbe
fildl
pop
mov
mov
push
inc
pop
sbb
xorl
imul
sub
ds
jno
dec
movsl
mov
loopne
xchg
fs
out
push
sbb
mov
mov
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
cmpsl
xchg
mov
jl
inc
pop
jl
mov
sar
pushl
loop
fisubrl
mov
js
jne
pop
inc
scas
sub
mov
add
and
test
fistpl
adc
lret
sbb
xor
dec
adc
fisubl
push
xchg
pop
mov
dec
sbb
popa
xchg
and
sub
xchg
cmpsl
stos
pushf
scas
mov
lods
dec
roll
cmp
setae
lds
les
dec
dec
and
ds
push
fsubrl
das
inc
and
insl
scas
inc
loopne
or
cmc
pushf
lahf
rorl
cmp
cltd
inc
dec
cmp
inc
aad
sbb
aas
mov
shrb
insb
jl
sbb
push
xor
mov
lods
rolb
out
jmp
into
adc
cmc
call
test
jae
xor
cmpsb
inc
fs
mov
dec
xor
out
ret
enter
or
repnz
scas
mov
mov
aas
scas
cmp
adc
or
sti
or
ret
jle
stos
fidivrs
sub
mov
sbb
arpl
or
inc
mov
bound
mov
fstpl
dec
repz
inc
scas
ja
inc
add
jns
stc
pop
mov
out
outsb
andl
imul
sbb
into
cmp
dec
lret
test
nop
pushf
pop
fsubs
adc
xchg
jno
imul
call
xor
or
sbb
sub
mov
mov
pop
loopne
cmp
insl
lret
inc
pusha
lret
mov
out
enter
jo
mov
aas
inc
lcall
dec
mov
push
in
xlat
data16
mov
xchg
hlt
xor
push
jo
cltd
insl
xor
or
mov
pop
jbe
lds
mov
mov
inc
daa
cmc
sub
lcall
xor
dec
daa
jo
jp
push
cmpsb
ds
mov
cmp
stos
mov
pop
or
mov
push
push
inc
xchg
fisubs
daa
inc
fcompp
loope
stos
fcomip
jo
repz
xor
cmpsl
jecxz
push
jl,pt
mov
rolb
dec
cs
lcall
loope
sub
icebp
cli
add
push
add
push
fnstcw
cltd
dec
jge
mov
iret
ret
sbb
push
aam
xor
mov
in
jle
mov
es
push
pushf
popf
in
cmpsl
adc
cmp
and
inc
mov
cmp
jp
in
pop
in
inc
dec
enter
fnstenv
movsb
mov
or
add
sbb
ljmp
dec
and
and
push
jmp
lods
test
imul
mov
pmullw
hlt
in
dec
mov
leave
or
xor
dec
and
int
mov
pop
test
xchg
call
rcrl
pop
mov
inc
push
dec
outsb
rcrl
fcoms
or
nop
mov
gs
repz
jo
nop
movl
jae
cmp
stc
movsl
mov
pop
insl
jo
push
mov
sub
test
call
aam
adc
clc
js
sbb
mov
clc
and
test
jg
repz
add
rclb
and
jno
aad
cmpsb
cmpsb
pand
arpl
xchg
cmc
sbb
sbb
fcoml
in
sahf
jae
fistpl
or
fs
jp
or
inc
loopne
loope
xor
scas
pop
xor
cmp
cwtl
push
ret
dec
mov
and
imul
pop
lahf
and
pop
xor
pop
push
sub
pop
repnz
sbb
push
mov
adc
adc
loop
rcl
in
lock
std
jl
test
pusha
and
ret
es
in
adc
dec
xor
stos
out
aam
sub
jb
cwtl
push
add
and
fadd
insl
and
adcb
nop
sbb
add
and
or
adc
inc
push
mov
cmp
sub
xchg
add
sti
shrb
add
jle
mov
jbe
xchg
adc
jle
lcall
cmp
pushf
push
cmp
and
sbb
adc
jecxz
pop
lahf
pop
xchg
jg
sbb
aas
iret
pop
jp
nop
data16
notl
mov
xchg
mov
jns
mov
pop
adc
jb
add
jecxz
sbb
btc
mov
in
shrb
xlat
outsl
and
mov
cmp
push
jle
imul
loope
das
pop
std
call
inc
faddl
fcomip
fcompl
mov
inc
ret
gs
pop
and
or
mov
fisubrl
push
inc
add
mov
ret
push
iret
daa
cmpsl
mov
cmpsb
xlat
fisttpll
fscale
fimull
sbb
in
jmp
testl
sbb
das
fidivrl
sbb
mov
cwtl
shll
inc
icebp
sti
xchg
testb
or
inc
fwait
popf
fwait
popa
adc
aam
push
and
xchg
xchg
and
jp
imul
into
and
sub
ja
loopne
sub
lock
push
pop
xchg
mov
lret
scas
out
mov
jbe
jp
popf
cmp
sbb
out
and
sub
insb
add
sahf
loop
cmp
or
mov
xlat
pop
arpl
ljmp
call
cwtl
pop
in
add
xor
inc
fisubs
sub
add
adc
inc
mov
and
js
or
mov
roll
in
pop
sar
cmp
imul
cmp
lret
pop
aad
stc
jbe
mov
mov
sub
out
fdivrs
cltd
sahf
and
call
cwtl
push
cmpsb
or
out
xor
sub
cld
or
push
xchg
xchg
xchg
fistl
sti
and
jg
stos
imul
fld
lcall
fstpt
gs
adc
cld
out
outsb
mov
mov
push
xor
cmp
dec
mov
lea
dec
mov
outsl
leave
pop
popf
aam
xor
or
fistpl
adc
std
cs
and
push
leave
mov
xchg
dec
inc
and
xor
add
addl
jbe
pushf
out
leave
jecxz
sbb
cwtl
std
mov
jmp
dec
push
stos
test
adc
movsl
jp
mov
rcrb
xchg
ss
and
push
rcr
addb
ja
sbb
hlt
bound
mov
push
dec
xchg
ss
xchg
cmp
enter
scas
outsl
xchg
test
mov
lahf
and
movsl
rcl
movsb
or
cld
and
cmp
push
add
and
pusha
dec
outsl
ds
lahf
push
xchg
push
jmp
push
sub
and
pop
rolb
or
mov
and
cmp
int3
add
int
int
mov
mov
sbb
test
pusha
out
adc
inc
fwait
xchg
sahf
jg
sbb
pop
cs
cmp
inc
jne
stc
outsb
dec
pop
inc
outsl
subl
adc
inc
mulb
add
jno
lret
sub
lds
mov
in
adc
push
mov
sarl
dec
stc
js
cmpb
push
ror
lcall
cmp
sbb
fadds
adc
push
shl
ja
sbb
stos
dec
push
pop
movsl
int
lods
and
fs
mov
cld
push
add
loope
imulb
inc
ja
js
mov
aam
sti
xchg
inc
mov
pop
xchg
clc
insl
cmc
imul
fdiv
push
test
dec
hlt
xor
das
sahf
jno
scas
mov
ficoms
and
repnz
shl
sub
jecxz
lret
pop
mov
daa
push
in
jo
mov
mov
clc
sti
enter
insb
mov
dec
imul
les
sub
and
fmuls
sbb
mov
mov
pop
in
add
std
fstps
sub
sub
push
sub
add
cmpsb
lds
add
lock
out
sbb
dec
fsubrs
cmp
inc
mov
mov
and
add
mov
or
jo
fwait
nop
mov
addr16
jmp
test
xor
cwtl
mov
aaa
fdecstp
or
sub
cmpsl
mov
push
das
mov
cmp
call
enter
inc
mov
idivl
inc
adc
inc
mov
sbb
pusha
call
xchg
aad
ja
xor
lret
mov
xor
enter
dec
pop
xchg
mov
iret
xchg
fidivrs
push
dec
leave
bound
mov
sbb
push
pop
sub
lds
outsl
mov
xchg
mov
push
and
mov
loopne
out
adc
daa
cmpsl
ret
jae
mov
lods
push
call
push
sub
mov
pop
and
dec
loopne
jg
hlt
dec
sub
fnsave
fcomip
push
xlat
mov
adc
xor
jmp
gs
jecxz
rclb
scas
stos
or
outsb
mov
scas
inc
add
xchg
loope
int
add
addr16
add
into
pop
rcrb
push
lret
mov
aad
and
stos
jne
int3
push
icebp
cmp
sub
cmp
push
cmpsl
inc
cmpsb
dec
data16
mov
addl
aad
and
fildl
cwtl
cs
sub
push
jl
add
rcll
cs
sbb
sbb
leave
jns
jle
popl
and
add
or
lret
pop
dec
and
xor
cltd
jb
in
mov
add
mov
mov
pop
shlb
inc
aas
test
cmp
loopne
and
mov
outsl
out
add
lret
ret
test
inc
adc
lret
ds
gs
lock
fnstenv
shlb
sar
icebp
pop
jg
roll
stos
inc
dec
test
lcall
jecxz
lds
fimuls
hlt
mov
adc
insl
jns
mov
and
pusha
adc
mov
cwtl
mov
je
pop
add
xor
ds
int3
call
les
sahf
sub
movsl
rcl
scas
push
testl
hlt
jne
hlt
pusha
or
cmp
cmp
jb
int
mov
insl
push
xor
gs
jecxz
lods
pop
js
adc
pop
push
outsb
lods
xchg
pop
das
rolb
xor
add
push
test
jo
adc
fucomi
or
sub
mov
sub
mov
jnp
mov
mov
mov
inc
mov
pop
add
jnp
insl
cmp
mov
scas
jle
cmp
in
xorl
les
mov
aam
or
lods
cmc
fxch
mov
test
xor
outsb
xor
in
movsb
clc
add
add
repnz
mov
setno
mov
mov
add
pop
out
in
fidivrs
inc
cmp
cmpl
sti
pop
or
negb
rorl
pop
fstpl
and
ds
pop
imul
adc
ret
cmpsl
into
cmpsb
std
arpl
in
adc
divl
xor
cmpsl
cmpl
xchg
out
push
cli
sub
aam
push
push
in
ss
mov
test
and
add
jb,pt
pop
adc
popa
pushf
mov
cmp
icebp
cmp
outsb
xor
xor
in
mov
sbb
pop
addl
nop
xor
pop
sub
ss
cmp
or
pop
or
fistps
dec
jae
mov
or
push
push
std
push
das
lds
push
fstp
xlat
cmp
dec
cmp
push
mov
iret
les
inc
sbb
cwtl
hlt
bound
mov
xor
cmp
inc
aam
mov
inc
jl
push
cmp
shr
push
hlt
cs
pop
push
nop
fstps
xchg
pop
adc
lcall
test
and
popa
sbb
sbb
or
loop
ljmp
inc
lds
jecxz
mov
fwait
leave
loopne
or
lods
cmp
mov
cmp
out
mov
mov
in
adc
jne
jo
call
mov
in
ror
cwtl
xor
scas
fstp
pop
xchg
aad
adcl
and
xchg
call
xchg
fimull
js
push
in
call
fcompl
push
add
faddl
lds
sahf
gs
fimuls
xchg
inc
push
les
push
orl
mov
stc
and
ficoms
ja
imul
lret
cmp
insb
cmp
pop
xchg
inc
jle
jle
lea
sub
jge
lcall
stos
rcll
pop
mov
add
in
sarb
xor
push
aam
mov
push
adcb
sbb
pop
push
loope
repz
in
jecxz
pushf
mov
inc
js
dec
enter
aam
mov
fistpl
xor
jns
sbb
jmp
xchg
aas
sbb
mov
in
fcomp
mov
scas
lret
orl
mov
and
mov
sbb
mov
daa
sub
call
cmp
mov
push
imulb
test
fwait
pop
push
mov
jnp
outsb
add
mov
pop
rorl
lods
mov
and
dec
cli
add
std
fld
inc
mov
aad
mov
and
pop
sub
lahf
je
fistpll
imul
in
in
pop
gs
inc
or
cmpsb
gs
sbb
mov
or
lock
fs
dec
insb
je
xchg
push
sbb
dec
or
sbb
lods
dec
sub
jbe
dec
cwtl
stos
stos
pcmpeqw
hlt
scas
lock
lods
mov
cwtl
mov
sub
pop
cmp
push
rcrl
inc
test
and
mov
inc
aaa
pop
push
cwtl
movsl
xchg
inc
mov
cltd
inc
out
or
xor
pop
jns
pop
addr16
test
in
pop
daa
loopne
fsubrl
dec
ljmp
or
fcmovu
sbb
add
and
insb
shrb
add
jns
mov
mov
insb
dec
pop
mov
addr16
xchg
les
fwait
stc
sarb
sbb
rorb
xchg
hlt
jp
sub
das
push
sub
jmp
pop
mov
out
lcall
add
ds
insb
mov
outsb
outsl
fs
cmc
mov
test
movsl
stc
addr16
xor
sarl
popa
and
mov
cwtl
dec
xchg
in
and
pop
into
nop
dec
shr
mov
cmp
push
insl
mov
pushf
add
std
mov
fcmovne
icebp
pop
lods
mov
fldcw
movsb
push
shrl
sarl
push
fimuls
je
out
test
daa
ja
loopne
and
push
in
pop
xor
mull
xchg
push
push
sbb
pushf
scas
gs
push
das
push
adc
sahf
jle
xor
mov
stos
inc
pop
pop
in
ds
adc
sbbl
js
lock
das
dec
sbb
fdivl
add
scas
rcll
sbb
stc
push
push
inc
movsl
sub
and
pop
xor
mov
xor
lods
sarl
rcll
scas
pop
scas
and
ret
test
mov
lods
jge
mov
dec
sti
or
lock
push
ljmp
idivb
jae,pn
adc
dec
int3
pop
mov
enter
mov
or
mov
or
pop
std
push
mov
jb
shr
ret
jge
ja
popf
addl
push
push
add
add
cltd
loope
dec
pop
addr16
fdiv
cmpsb
xchg
imul
jmp
daa
pop
cvttps2pi
testl
lahf
mov
xchg
test
testb
and
mov
loopne
and
je
fstl
out
or
xor
sub
ljmp
add
xor
fisttps
sbb
dec
js
mov
out
sub
lods
call
jbe
mov
call
mov
mov
cmpsb
movsl
dec
add
xchg
cmpsl
adc
push
or
rcll
sbb
bound
rcrb
int
and
mov
and
dec
in
daa
add
mov
ret
inc
adcl
push
mov
push
pop
dec
push
cld
sbb
mov
bound
sahf
dec
ret
jnp
sti
push
ret
insl
js
fsubrp
mov
lret
in
jg
in
or
xor
nop
fwait
cmpsl
xchg
sub
push
fs
mov
in
dec
mov
fldenv
xchg
dec
int3
xchg
out
xchg
imul
jmp
fsubrl
hlt
mov
clc
cmp
push
jmp
mov
pop
sbb
jne
shll
stc
add
je
loopne
popf
int
iret
mov
xchg
jnp
push
push
test
xor
neg
jbe
jo
mov
fwait
jl
mov
add
in
jg
xchg
into
push
scas
cmp
outsl
and
xchg
mov
mov
push
sbb
push
mov
xchg
imul
inc
dec
cld
fnstsw
jl
loop
inc
ljmp
loope
lret
icebp
loopne
ja
lea
sub
mov
test
cmp
push
data16
dec
stc
jbe
sbb
roll
fucomp
mov
inc
pop
test
cmp
loop
sahf
mov
stos
dec
sub
cmpsl
sub
lea
mov
rcr
popa
out
cmp
repz
cmp
push
cld
adc
adc
pop
jns
movsl
hlt
imul
xchg
gs
call
mov
fsubrl
pcmpeqb
push
cltd
mov
adcl
cwtl
xor
xor
cmp
lock
mov
cmp
add
iret
push
xor
adc
mov
stc
push
out
popf
add
sub
mov
sti
fisttps
insl
sahf
dec
inc
inc
shlb
pusha
pop
daa
test
jp
cmp
jmp
aas
push
sbb
rcll
dec
inc
or
popf
dec
fwait
inc
lock
stc
pop
cld
push
pop
jbe
fistpll
adc
mov
pop
dec
add
sahf
sarl
mov
loope
fwait
in
arpl
fbstp
push
into
mov
mov
jp
pop
push
inc
and
fdivl
dec
jo
popl
scas
xlat
push
mov
adc
or
rclb
jmp
add
fsubrs
bound
sub
jecxz
or
add
mov
pop
cmp
adc
fcompl
mov
push
gs
add
sti
movsb
in
xchg
push
dec
cmp
push
cmp
mov
adc
sbb
sub
int3
aad
push
pop
lods
pop
dec
mov
xor
rcl
adc
mov
jmp
jl
int3
jns
jle
sarl
subl
dec
gs
imulb
cmpsl
sub
xchg
xchg
lods
pop
cmp
ss
cmp
test
into
inc
daa
pop
pop
outsl
std
enter
das
push
mov
push
lods
ss
jb
test
mov
pop
into
xor
lahf
and
aaa
enter
pop
aad
fs
and
xor
add
mov
roll
pop
daa
xor
stc
sbb
sahf
jnp
jmp
or
jbe
pop
or
sbbl
sbb
inc
add
cltd
pusha
pop
inc
aas
mov
in
and
xor
add
popa
sbb
pop
mov
call
push
dec
lcall
movsb
js
in
repz
mov
dec
xor
adc
call
call
push
adc
enter
mov
lea
cmp
daa
jno
out
xchg
lcall
out
jae
adcb
repz
push
icebp
xchg
mov
iret
mov
sub
mov
popf
dec
std
in
add
adc
sbb
sub
lods
pop
dec
xchg
mov
repnz
sti
push
aas
mov
jnp
xor
mov
daa
push
xor
xchg
xorl
ljmp
rep
jl
or
pushf
stos
popf
imul
push
iret
sub
icebp
and
mov
jno
pop
jb
and
add
mov
das
mov
call
daa
sbb
cmp
and
mov
es
push
std
int
xchg
cmp
inc
mov
pusha
stc
push
in
dec
in
fldl
mov
lods
push
mov
or
pop
cmp
shlb
or
lret
enter
pop
xchg
pop
adc
pop
shrl
pop
push
repnz
rcrb
pop
aas
or
sub
fcomip
jge
mov
in
test
call
xchg
jb
jp
jg
mov
xchg
jg
mov
out
xchg
push
sub
or
das
add
push
nop
xchg
dec
ficoms
stos
push
and
xchg
mov
cli
stc
sub
mov
or
mov
push
repz
or
dec
push
mov
xchg
popf
sbb
jp
inc
pusha
sub
mov
cmp
and
mov
adc
out
das
leave
and
sarb
movsb
push
imul
mov
andl
mov
jae
dec
mov
divb
add
pusha
out
push
pop
sub
sbb
or
and
inc
mov
add
mov
push
xchg
data16
sti
test
imul
xchg
cmp
mov
jo
shlb
fcompl
fsub
xor
in
test
pop
js
mov
jl
insb
out
inc
push
fcmovb
stc
adc
test
add
pop
inc
hlt
xchg
in
addr16
roll
mov
fsubs
cmpsl
xchg
xchg
nop
stc
negb
cmp
push
jg
out
mov
aaa
sbb
jbe
daa
call
push
add
mov
push
sarl
int3
add
push
ret
mov
jecxz
push
out
mov
push
cmpsl
out
add
push
sbb
push
imul
push
mov
in
out
enter
push
jo
test
test
lret
es
or
cmp
insl
jne
lea
int
pop
and
push
divb
or
dec
jae
jl
icebp
ds
jl
mov
add
or
movsl
mov
xchg
into
push
and
push
or
in
into
xlat
out
adc
push
pop
sbb
loopne
inc
pop
out
arpl
dec
mov
mov
int
mov
nop
xchg
push
test
mov
adc
lods
fnsave
sbb
cmpsl
xchg
ret
sbbb
lods
adc
iret
mov
dec
fcoml
repnz
out
aas
add
mov
mov
xchg
sbb
cwtl
cmp
cmc
out
xor
push
adc
arpl
jle
int3
lcall
jmp
mov
in
dec
roll
shlb
inc
aam
stos
push
mov
xchg
cmpsl
rclb
fcmovnu
test
sbb
pop
pop
jl
cmp
pop
xor
ja
jne
pop
pop
jno
and
loopne
ret
gs
in
hlt
push
sbb
roll
mov
das
test
mov
mov
mov
sub
jp
andb
xchg
push
sub
cmp
in
push
add
sbb
mov
mov
adc
adc
sar
sub
mov
mov
out
popa
cmp
and
imull
mov
lcall
mov
addr16
adc
cs
xor
mov
push
cmpsb
mov
cwtl
imul
das
cmp
pop
dec
stos
push
and
ret
dec
mov
outsb
movsb
ja
xchg
out
lahf
outsb
fldt
inc
outsb
jl
sub
pop
je
les
fldcw
popf
jnp
fbstp
adc
dec
into
sub
scas
cmpsl
std
sbb
dec
loopne
arpl
xchg
fprem1
rcrb
mov
jle
mov
test
faddl
shll
rorb
add
lret
test
adc
int3
mov
mov
bound
cmp
dec
test
xor
hlt
cld
addr16
test
bound
mov
cmp
ss
dec
jno
cmp
lds
mov
mov
out
push
add
in
or
ss
and
dec
test
popa
repnz
clc
jle
pop
xchg
cmc
xor
call
in
adc
mov
lret
xchg
paddusb
mov
jg
mov
rcrb
aaa
xchg
inc
data16
push
idivb
sbbb
lds
iret
jb
lds
xchg
mov
or
push
mov
addr16
je
lea
xor
enter
sbbb
inc
xchg
out
sub
mov
popf
pop
cmp
cmpb
push
push
jl
les
push
lret
stos
jle
idivl
xor
mov
pop
dec
ja
mov
into
mov
inc
jbe
lret
or
jb
out
sahf
dec
inc
add
or
rcrl
pop
pushf
cmp
stos
addl
mov
and
add
rorl
mov
pusha
or
faddl
aas
scas
iret
sbb
ret
fwait
stc
and
mov
insl
jp
jmp
insb
stos
xor
adc
gs
adc
inc
add
xor
mov
inc
jbe
xchg
movsl
out
scas
xchg
sbb
nop
mov
clc
jl
mov
movsl
mov
aas
aad
mov
add
mov
repnz
shrl
das
dec
enter
xchg
dec
testl
dec
mov
add
out
push
pop
or
mov
add
pop
bound
adc
cmp
adc
jecxz
scas
push
fwait
enter
pushf
stos
and
repnz
test
jge
mov
sbb
jg
pop
dec
int3
mov
push
jle
mov
or
dec
mov
inc
xchg
sahf
pushf
jecxz
jbe
add
xorb
rcrl
mov
icebp
popa
imul
pop
cmp
add
int3
lods
stos
pop
test
fsubl
xor
xor
or
scas
jmp
mov
jb
js
imul
xor
mov
sbb
test
xor
sub
push
popf
mov
push
push
pop
idivl
push
mov
mov
aad
or
dec
push
mov
lock
sbb
shl
cmpsl
sbb
cmc
repnz
out
or
loopne
xor
xchg
cli
sbb
and
inc
cmp
push
pop
addb
adc
mov
adc
adc
shrb
pop
cmp
add
or
lret
and
scas
imull
sti
les
mov
fnsave
xchg
fwait
or
iret
jge
xor
xchg
xchg
aaa
and
sahf
into
sbb
fwait
and
in
gs
es
inc
cmpsb
push
jb
mov
mov
lea
inc
test
adc
iret
adc
push
jnp
xchg
mov
add
stc
push
xor
leave
mov
inc
mov
rdpmc
mov
movsl
test
lret
subl
jle
xor
mov
pop
jne
inc
cmovge
sub
arpl
mov
cmpsb
cltd
pop
arpl
add
int
sbb
cmp
and
fnstenv
ficoml
fdivrl
negb
and
inc
dec
hlt
mov
mov
leave
out
adc
mov
push
test
cltd
sub
movsb
aad
inc
aaa
mov
lea
or
or
or
clc
pop
sbb
gs
push
jge
mov
test
gs
push
or
sub
xor
in
daa
add
imul
and
xlat
ds
sbb
movsl
mov
bound
jae
pop
adc
or
and
das
daa
mov
in
push
inc
ds
loope
push
xor
outsb
out
dec
je
ss
and
xchg
or
in
mov
dec
imul
fsubl
mov
inc
aas
jbe
xor
xchg
mov
or
and
ficoml
lea
test
push
lea
sub
jmp
push
insb
add
loop
cmp
mov
sti
sti
mov
pop
mov
mov
lds
fsubl
cld
inc
fadds
jmp
jb
jnp
std
aaa
ficomps
xchg
jbe
iret
push
sub
xor
mov
or
in
insl
inc
repnz
mulps
in
jbe
add
and
cmp
push
mov
fisttps
loope
sub
into
in
jb
arpl
push
mov
fs
adc
xchg
mov
stc
lcall
scas
adc
shl
stos
leave
inc
test
adc
xlat
jecxz
dec
out
or
lock
or
mov
or
lahf
xchg
mov
lock
icebp
sub
icebp
dec
add
aad
sbb
ss
dec
cltd
dec
lods
bound
pop
cld
int3
and
nop
sahf
loope
outsb
cltd
out
mov
lcall
aad
into
inc
pop
pusha
xchg
mov
cld
jnp
or
mov
sub
xor
mov
sbb
add
xor
cwtl
cmp
nopl
rclb
inc
jne
adc
sub
mov
data16
loopne
pop
xor
repz
push
mov
pop
mov
movd
je
into
xor
and
cmpb
std
adc
test
arpl
outsl
jno
mov
inc
or
ret
aas
jae
and
sti
insl
push
or
out
or
outsl
xor
sbb
inc
clc
cmp
repz
pushf
js
sub
fistps
lret
xchg
out
aam
sbbl
jecxz
pop
xchg
fsubs
cmp
push
out
ret
aas
cmp
lret
jmp
into
inc
cmp
and
leave
push
xor
lds
das
or
cmp
movsl
cmp
call
ljmp
aas
add
cwtl
pop
dec
and
jns
dec
repz
or
repnz
lds
adc
outsb
sbb
push
repz
push
xchg
pushf
roll
adc
rorl
aas
stc
int3
xor
inc
inc
bound
push
in
xchg
subb
sub
lret
imul
push
lret
jns
add
dec
cli
mov
out
ja
cmp
mov
aas
lods
in
insb
iret
cmp
add
call
arpl
or
jmp
std
push
xor
jle
scas
cmp
cld
jp
lods
int
ret
jns
clc
stos
mov
mov
mov
addr16
cltd
aaa
in
cmc
out
add
mov
in
cmpsl
dec
xchg
scas
add
cmc
mov
dec
rcll
into
clc
mov
addr16
xchg
scas
adc
dec
xchg
pop
pushf
dec
clc
das
xor
cwtl
jae
cmp
lret
jg
pop
fisubrl
sub
stos
ljmp
push
test
ds
dec
sti
xchg
and
mov
mov
in
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
sbb
or
jmp
fistps
out
movd
into
sbb
mov
cmp
inc
lods
insl
jmp
and
inc
cmp
shrb
loopne
mov
inc
inc
adcl
lret
and
inc
flds
aaa
addr16
data16
into
scas
sahf
hlt
jle
in
adc
shlb
mov
mov
fildl
cli
loop
andb
mov
lods
out
fstps
cmpsb
sub
mov
vpbroadcastw
mov
xchg
push
pop
push
mov
pusha
aam
cld
xchg
movsb
xchg
lcall
jo
es
push
jo
in
hlt
mov
nop
cmp
movsb
mov
fsub
andb
sbb
outsb
sub
xchg
mov
inc
outsb
leave
test
cs
inc
vcmpsd
stos
movsb
cli
js
adc
insb
xchg
jns
mov
mov
stc
dec
adc
outsb
mov
jg
fldenv
popa
iret
xor
push
inc
hlt
cwtl
shll
jl
ret
cmpsb
loope
in
adcb
out
xchg
pusha
pop
jne
pusha
movb
pusha
pop
add
jbe
jl
add
jge
enter
cld
stos
dec
aam
cmp
push
pop
mov
insl
jp
fidivrl
cmp
out
xchg
ss
shr
push
xchg
xchg
test
lods
or
rolb
addr16
inc
sbb
inc
xchg
faddl
mov
test
jae
stc
mov
repz
je
cmpsl
lcall
xor
jb
push
push
ljmp
mov
mov
xchg
cmpsl
adc
xchg
inc
xchg
inc
in
popf
mov
sub
inc
push
ss
pop
cld
or
ret
adc
fs
or
or
xchg
jle
xchg
jl
adc
leave
insl
repz
aad
lods
andl
xchg
push
dec
scas
sbb
rolb
xor
xchg
push
imul
out
lret
test
adc
lock
and
jg
mov
jns
xchg
rcll
and
pop
or
jbe
xchg
mov
mov
mov
fbstp
push
sahf
push
stos
int
sub
jp
mov
push
jge
call
adc
mov
repz
jno
scas
fsts
mov
jle
mov
sub
jg
xchg
or
lahf
dec
test
inc
cmp
lret
sub
mov
jno
sbb
cmp
sub
xor
push
and
cmp
xchg
push
in
cmp
or
lods
jle
pusha
inc
sbb
lcall
cmp
xchg
ret
mov
repnz
sub
loope
enter
add
pusha
mov
test
cwtl
adc
and
mov
out
out
adcl
sub
sub
fdiv
push
dec
cs
cmpl
adc
inc
jo
mov
sbb
insl
aaa
push
or
mov
repnz
or
jns
data16
sbb
ss
cmp
xchg
bound
pop
fwait
jp
push
sub
cld
push
cmp
xchg
ja
sbb
and
mov
sbb
bound
imulb
sahf
movsb
pusha
xor
rcr
add
push
dec
or
jmp
xchg
shl
das
sbb
pop
mov
inc
xchg
data16
out
out
rorb
push
xchg
addr16
popl
and
pop
mov
jmp
lret
stos
pop
sub
add
nop
inc
iret
mov
loope
cmpsl
ja
mov
pop
fs
xchg
mov
test
ja
sub
bound
xor
push
xor
sahf
fsubrp
filds
jmp
mov
mov
inc
ficoms
fnstcw
stos
data16
lods
jmp
pushf
or
mov
mov
lods
addr16
ja
in
sub
and
mulb
out
lret
popf
cmc
mov
cmp
push
icebp
mov
inc
aaa
lea
sub
mov
movsl
jle
jg
xchg
xorl
mov
mov
xchg
xchg
push
sbb
inc
js
adc
aam
pop
cmpsb
int3
adc
fwait
rclb
pop
sbb
or
in
sahf
mov
fwait
out
in
mov
pop
jge
sbb
loop
aam
stos
faddl
sbb
mov
or
mov
cmp
mov
sub
cmpsl
mov
daa
cmp
pop
in
cld
cmp
jnp
test
insl
iret
jmp
cmp
mov
sti
cmpl
dec
push
mov
pop
gs
xor
cmp
pop
test
sbb
push
add
inc
xchg
ret
pop
pop
sub
sbbl
sub
in
je
dec
mov
mov
popf
push
out
aas
cmp
les
sbb
add
add
outsl
sti
call
xor
ret
ret
and
push
iret
imul
fwait
sbb
sub
fsubp
mov
les
out
dec
inc
push
and
shlb
push
push
xor
jbe
outsl
xor
cld
aam
scas
dec
adc
ror
icebp
loopne
mov
mov
xchg
pop
or
xchg
jb
adc
fbstp
arpl
movsb
movb
lods
pop
or
inc
aam
jmp
add
enter
test
out
es
cmp
xchg
enter
and
pop
inc
dec
outsl
sarb
push
jb
sahf
lea
shll
inc
or
push
jns
xlat
loopne
add
push
xorb
andl
movsl
jmp
mov
dec
insb
js
sar
dec
and
inc
in
pop
lcall
or
ret
inc
cltd
push
and
call
push
daa
popf
sahf
repz
rcrb
dec
and
or
jg
popa
test
inc
lahf
jg
xchg
in
or
dec
add
repnz
mov
gs
push
repnz
repz
jp
fidivrs
ror
movsl
pop
rclb
movsl
addr16
mov
jb
mov
int
pushf
dec
daa
lds
pop
popf
mov
scas
mov
insl
loopne
sub
mov
cltd
xor
aaa
add
dec
cmp
xor
fwait
mov
paddsw
imull
outsb
loope
inc
ret
leave
aas
dec
pusha
xor
cmc
loopne
orb
sub
mov
pushl
test
andb
aam
xor
and
jp
cwtl
fdivs
pop
negl
mov
add
mov
and
and
bound
pusha
or
push
cli
stc
or
mov
dec
out
jbe
testl
inc
sub
push
sub
pop
stos
mov
sub
mov
std
xchg
push
pop
dec
sarb
lahf
hlt
lret
dec
popa
add
outsl
xchg
mov
inc
fldenv
add
bound
add
inc
jae
outsl
cld
out
cmp
test
cmp
subl
and
insl
push
adc
sbb
dec
js
mov
and
jg
stos
sbb
rcrl
mov
setb
mov
and
dec
add
adc
jne
ss
mov
pop
push
pop
mov
sub
cmpsl
stos
mov
inc
jg
shlb
cmp
adc
inc
xor
cmp
std
mov
inc
dec
aad
sbb
lds
and
andl
lea
lea
xchg
dec
and
cmpsb
sbb
adc
push
insl
out
rolb
xchg
jmp
out
cmc
pop
ljmp
call
ret
std
stc
xor
xor
xor
add
in
dec
sbb
xchg
int
and
shr
jmp
xchg
aaa
push
insb
xchg
dec
ret
xor
int
cmp
pusha
mov
clc
fidivs
cwtl
mov
iret
inc
xor
xor
das
or
enter
mov
out
idivl
inc
mov
call
aad
inc
sbb
cmp
adc
xchg
mov
sbb
mov
push
popa
and
testl
mov
hlt
sti
mov
fdivs
ljmp
cmp
iret
flds
leave
in
xchg
inc
sbb
lea
repnz
rorl
or
in
test
add
js
push
lds
mov
push
loope
or
mov
inc
jecxz
add
sbb
shlb
sub
icebp
cmp
inc
fisttpl
arpl
arpl
fldt
push
dec
jo
jbe
xlat
jecxz
add
mov
add
and
jns
xchg
xorl
and
clc
and
punpcklbw
lret
and
inc
ja
mov
movsb
add
cmpsb
xchg
loope
jge
jns
sbb
in
cmp
stos
ljmp
addr16
xchg
stc
les
or
jge
das
sbb
add
add
mov
or
jmp
xchg
cmpsb
xlat
adc
cltd
and
jo
and
test
mov
xchg
xor
fwait
das
push
fisttpl
icebp
leave
outsl
enter
mov
lret
loope
dec
jne
or
mov
aaa
shll
ljmp
out
inc
pop
and
mov
cmp
fists
pop
jg
rcrl
mov
in
loopne
idivb
ja
fildll
clc
cmp
insb
push
shlb
imul
adc
mov
stos
dec
pop
adc
cmpsb
xchg
cld
pushf
inc
outsb
ja
adc
sbbb
das
add
lea
or
xchg
add
iret
clc
xchg
push
dec
mov
insb
test
loopne
xor
mov
lahf
leave
mov
dec
ret
mov
sarl
ljmp
xchg
mov
lret
sarb
jmp
movb
pusha
call
jb
sar
inc
or
pxor
mov
jbe
sbb
sti
cwtl
dec
sub
lds
mov
rcpps
xor
mov
test
jg
add
in
sub
cld
inc
lcall
push
rclb
push
sub
cmp
inc
orb
cmpsl
mov
pop
mov
add
inc
int
call
add
fstp
ficompl
iret
pop
mov
dec
movsl
rcrl
dec
lods
adc
lcall
pusha
nop
jne
pop
mov
dec
and
ficomps
jge
adc
popf
jno
push
in
lds
jae
imul
jne
fs
icebp
xchg
push
inc
add
insl
pop
out
mov
inc
jl
out
jns
jnp
and
jnp
sub
negl
mov
ret
call
add
xchg
fisubrl
test
xchg
lret
test
fdivrp
arpl
push
scas
xchg
inc
mov
and
fwait
adc
repnz
daa
rclb
cli
jg
movsl
push
push
rcll
mov
and
popa
jmp
scas
and
xchg
out
and
scas
push
aaa
in
mov
je
loop
cltd
push
add
jno
jnp
das
pop
enter
cmp
in
inc
cmp
mov
dec
pop
sbb
mov
cld
inc
incl
lds
jecxz
xchg
jo
punpckhwd
mov
mov
mov
pop
push
sub
cmp
mov
pop
pop
cmp
dec
pushf
mov
xchg
imull
mov
pop
xchg
fwait
sbb
jge
mov
arpl
decl
jg
sbb
sbb
loopne
inc
aaa
mov
cmpsb
adc
test
fnstsw
jbe
xchg
mov
in
mov
enter
sub
rorl
xlat
pop
mov
loopne
stos
je
scas
lret
arpl
stos
lcall
xor
and
fs
xor
push
cmp
pop
add
inc
adc
jo
cmp
cli
popf
dec
mov
jp
cmpsb
dec
cltd
lock
cmp
popa
mov
inc
fwait
dec
push
xchg
pop
into
leave
gs
cmc
in
adc
or
xor
or
into
or
sbb
cld
sub
push
xchg
adc
cmpl
dec
orl
daa
sub
out
push
repz
cmc
std
cltd
repnz
clc
add
roll
jbe
sbb
insl
xlat
cmp
push
push
jecxz
and
xchg
add
jno
filds
xchg
inc
adcb
repz
adc
jecxz
cmpsl
testl
pop
xchg
je
nop
lret
out
push
xor
inc
xchg
fwait
cwtl
pop
sbb
xor
in
mov
and
gs
mov
xor
xlat
cmpl
std
fwait
sarb
push
sbb
cmp
xchg
cltd
dec
sbb
mov
mov
aam
mov
std
lret
mov
stos
mov
lret
xchg
sub
mov
mov
mov
and
test
xor
jb
cld
in
insb
lock
mov
rolb
cmp
inc
cmp
stos
jae
fsubrs
mov
dec
cvtpi2ps
lds
std
or
xor
fcoms
outsb
ret
lret
xchg
add
std
add
jb
pop
hlt
imul
jl
push
mov
gs
lret
jg
cwtl
das
push
outsb
ret
pop
lods
sub
push
xchg
jo
sarl
push
mov
mov
popa
fstl
aam
loopne
pop
cmc
add
sub
mov
cmp
cmpsb
inc
or
lock
mov
sub
push
out
call
iret
inc
mov
lcall
cmp
mov
loop
roll
fwait
lea
xor
jnp
aaa
in
mov
or
inc
std
lahf
cmpsb
xor
pop
adc
popf
bound
dec
addl
lds
mov
in
daa
sbb
add
or
mov
int
int
repz
pop
mov
dec
stc
push
in
ljmp
sbb
out
xchg
cmp
cli
xor
mov
sub
test
loope
sbb
inc
jno
pop
int3
xchg
add
xchg
or
jae
mov
sti
sub
mov
dec
push
int
cli
jl
movsb
ss
sarb
test
das
icebp
mov
fsubrp
dec
cmc
or
ret
pop
pop
sbb
mov
fsubs
inc
arpl
jno
cmc
jmp
xchg
mov
pushf
mov
add
aam
sbb
andl
add
xor
mov
sub
mov
dec
cltd
sub
jp
jnp
xchg
dec
or
mov
jnp
push
or
adc
xchg
xlat
pushf
sub
outsl
cmp
and
pusha
in
push
push
scas
xchg
scas
cltd
sti
or
mov
rcrb
aaa
imul
lods
scas
out
push
mov
fld
repz
stos
fcmovnb
nop
stc
sbb
out
add
cmp
sbb
and
sarb
jp
lock
lea
jge
pop
jnp
mov
mov
mov
int
dec
pop
je
xorl
subl
test
mov
testb
rorb
into
leave
jecxz
outsb
iret
jns
setbe
xchg
test
xchg
xchg
out
sbb
imul
daa
into
fadds
lret
inc
in
loop
inc
mov
xchg
fsubl
jge
leave
sbb
cmp
out
jge
push
cmp
scas
adc
sub
ret
push
in
dec
lods
mov
lds
mov
mov
dec
xchg
ror
enter
call
or
mov
fwait
das
add
sbbl
repz
sub
mov
and
bound
jns
mov
or
roll
fst
dec
inc
add
pop
dec
insl
jae
sbb
mov
xor
xor
jnp
jno
cmp
mov
sub
inc
add
pushf
pop
xchg
scas
push
jne
outsb
mov
jb
ljmp
mov
clc
arpl
fwait
scas
in
sti
xchg
dec
rcl
pop
sub
xchg
scas
adc
test
jg
mov
mov
jo
lea
jmp
add
gs
popf
insb
imul
adc
dec
push
push
out
push
mov
inc
fwait
popf
insl
ds
pop
je
push
fsub
out
aaa
push
xor
add
out
shr
mov
out
lods
call
insl
nop
mov
hlt
jmp
or
cmp
ret
pop
jnp
pop
jnp,pn
xor
push
fidivs
dec
imul
mov
popf
add
jmp
sub
jae
inc
lret
pop
xor
jecxz
lcall
std
sub
cmp
mov
inc
xlat
lahf
sub
test
loopne
nop
ret
mov
cltd
jmp
icebp
test
roll
mov
testb
in
pop
cmp
popf
dec
clc
jae
dec
cmp
jg
mov
and
int
out
shll
adc
xlat
in
sbb
push
dec
push
movsb
stos
lock
leave
xchg
out
dec
dec
dec
xlat
mov
lea
imul
mov
fs
dec
lret
ja
lea
dec
test
xorl
mov
inc
push
push
mov
ljmp
subb
add
or
rol
arpl
sub
xchg
xorl
daa
sahf
dec
cli
pushf
leave
pop
loopne
iret
adc
pop
jae
sub
pop
sub
adc
jl
or
xor
aam
rolb
fsts
adc
pop
xor
lret
shll
xchg
jno
push
pop
pop
in
lods
cmp
ret
lds
rol
inc
dec
adcl
and
adcb
xchg
std
cltd
insl
pop
out
hlt
lea
push
or
mov
jecxz
into
lock
push
gs
movsb
bound
scas
out
shlb
repz
inc
mov
adc
lea
dec
aaa
push
inc
mov
mov
lret
mov
mov
add
test
mov
jae
or
scas
loopne
std
sub
mov
push
sti
push
sar
imul
adc
add
sub
bound
test
pop
mov
sarl
or
and
jp
mov
xlat
xor
and
xor
sub
push
call
lods
pop
stc
xchg
adc
dec
mov
cwtl
lcall
xchg
sub
pop
mov
fldz
ljmp
mov
lret
add
in
sarb
pop
jno
and
pop
gs
rorl
pushf
cs
cld
pusha
cltd
es
aas
scas
sbb
bound
and
push
add
adc
or
mov
lods
imulb
rorb
pop
int
add
leave
ljmp
cs
lods
push
add
sbb
xor
xor
fistpll
mov
sub
cmpsl
xchg
hlt
setnp
add
mov
mov
mov
es
add
mov
or
and
loop
icebp
cmc
movsb
add
jnp
outsb
cmp
ret
push
orl
int
lock
sub
jg
test
pop
daa
mov
mov
not
cmpsl
xor
jnp
xchg
hlt
arpl
addr16
jae
adc
mov
xchg
pop
aas
xor
sbb
push
jge
pushw
jp
or
ljmp
std
sub
roll
nop
cmp
negl
lahf
adc
cmp
int
mov
cmp
hlt
sbb
inc
divl
fistpl
mov
jb
rorl
jge
mov
inc
mov
cmpsb
sub
mov
push
fsts
inc
add
dec
loopne
xchg
push
pushf
roll
test
addb
outsb
andl
aas
xchg
popf
stc
jle
pop
or
mov
jno
pop
and
fsubrs
les
in
loopne
adc
aaa
jno
mov
mov
mov
ret
cmp
out
scas
cmp
js
inc
sbb
stos
loopne
inc
xor
lods
mov
sub
subb
mov
mov
in
out
jecxz
cmpsl
stos
sbb
dec
mov
mov
arpl
loope
lret
jle
lcall
enter
push
xchg
outsb
add
jl
test
call
loopne
es
xor
lds
aas
pushf
mov
ja
push
or
pop
pop
cmpsl
dec
or
sub
dec
mov
xlat
leave
adc
xchg
lcall
and
andl
pop
aaa
mov
dec
mov
aas
je
dec
outsb
add
fcmovne
mov
rcll
aad
jmp
dec
adc
push
dec
scas
xchg
ss
xor
mov
xlat
aaa
pop
inc
repz
pop
or
ret
adc
sbb
cmp
stos
jne,pt
mov
push
cmp
stos
or
mov
gs
repnz
pop
popf
sub
pop
jg
xchg
ljmp
popa
jns
sbbb
aad
mov
xor
stc
push
mov
popa
push
lret
mov
sbb
push
fisubs
imul
fistpl
sub
mov
inc
cmpsl
jmp
add
inc
cmp
cli
xchg
push
lods
adc
cmpsl
mov
and
cmp
or
jae
jns
cmc
mov
jle
push
xchg
push
lock
lret
fadd
dec
test
in
mov
jne
xor
mov
repz
inc
adc
inc
adc
mov
sbb
jno
pop
push
cmp
and
push
jmp
sbb
cmp
add
rcl
insb
orl
and
inc
mov
ja
aad
pop
sub
mov
dec
and
shl
sbb
loope
data16
hlt
sub
xchg
stos
jmp
ss
mov
sbb
mov
std
add
bound
mov
cmc
push
mov
sub
das
out
lock
addr16
jmp
inc
imulb
outsb
mov
push
push
ss
fiadds
outsl
adc
push
cwtl
pusha
movsl
lahf
repnz
movl
cmp
dec
add
pop
icebp
mov
cmp
orb
jle
fistpl
cmp
pop
std
in
cwtl
xchg
mov
idivb
mov
adc
mov
ljmp
aaa
adc
aad
or
imull
push
push
inc
pushf
dec
int3
pusha
inc
pop
outsb
dec
inc
mov
call
or
aas
push
shl
orb
iret
loop
mov
mov
fistpl
mov
jmp
movsb
mov
lret
fdivl
scas
iret
push
xor
lds
inc
sub
nop
movsl
xchg
ficompl
cmp
jae
clc
fidivrs
xlat
call
or
push
lahf
pop
subl
out
lock
cltd
adc
mov
mov
mov
idivb
outsl
xor
cmp
cmp
and
sbb
jmp
pushf
cld
xor
add
popf
andb
or
int
xchg
out
les
xor
inc
js
adcb
cmpsb
addr16
enter
jmp
adc
stc
xchg
mov
jbe
fnstcw
testb
and
or
stc
fwait
sbb
mov
xchg
mov
mov
pop
mov
push
inc
xor
sbb
or
repnz
scas
js
sub
xchg
loope
lea
or
lea
rol
cmp
lock
mov
adc
sbb
adcl
and
inc
inc
xchg
in
adc
jecxz
fstl
scas
pop
pop
les
add
sbb
stc
ret
insb
ja
inc
cmp
out
pop
or
notb
lds
push
ret
js
jo
addr16
cli
cmp
mov
dec
and
hlt
lret
enter
jo
loope
jecxz
movsl
sub
push
shl
lods
cmc
mov
adc
std
ret
jnp
iret
pminub
js
insl
stc
dec
movsl
pop
push
xor
jb
cmp
jne
test
dec
cmpsb
fdivs
or
mov
adc
cmpsb
add
cmp
hlt
fidivs
xchg
dec
mov
not
fdivrl
xchg
in
sbb
fcmovnb
adc
daa
sbb
push
inc
sbb
xlat
cmp
outsl
insl
cwtl
mov
sub
and
fldcw
repz
adc
fs
scas
push
shll
fdivs
enter
int
and
icebp
xchg
add
lea
idivl
andl
jne
iret
pop
pop
inc
xchg
mov
mov
aas
cltd
dec
out
or
rcll
sub
data16
mov
imul
and
inc
fistps
mov
adc
push
ss
xor
arpl
push
fimuls
ss
sub
push
adc
mov
in
nop
jbe
cmpb
push
pushf
jmp
pusha
sbb
jbe
mov
sti
jo
lret
cwtl
pop
aad
cmp
add
cmp
clc
push
xor
es
push
dec
mov
pusha
jnp
lods
mov
mov
fs
mov
in
les
xlat
cltd
inc
mov
or
loopne
dec
outsl
icebp
bswap
out
xchg
shlb
push
lret
mov
imul
adc
arpl
fstpl
jecxz
outsb
pop
lret
mov
idivb
push
sbb
jae
cmp
fldenv
cmp
and
fisttps
leave
jbe
lcall
push
xlat
ret
or
fildll
std
pop
or
mov
stos
adc
xor
into
mov
sub
dec
mov
negb
adcl
scas
xorb
ret
fidivs
push
xchg
test
addb
dec
mov
jne
jg
testl
leave
and
test
hlt
insb
pop
push
movsl
inc
pop
mov
fwait
daa
cmc
scas
int3
sub
dec
and
jge
mov
xor
popa
and
push
jo
test
pop
test
ret
sbb
and
dec
xchg
sbb
mov
push
in
inc
jle
add
push
push
lods
cwtl
push
xchg
fsubrl
test
imul
mov
cld
jl
pop
test
push
pop
cmp
xorl
adc
call
jb
pop
cltd
insl
scas
mov
inc
inc
mov
insl
inc
xchg
rcl
cmp
jp
sub
stos
sub
sbb
stc
jnp
xor
std
jmp
stc
pop
popf
and
mov
jle
adc
push
mov
pop
pop
or
aad
lock
sub
push
sti
sub
cmp
pop
lods
lds
mov
sub
out
jbe
xor
sbb
mov
outsl
lock
and
push
add
push
xor
fstps
xchg
cltd
sub
jno
adc
sub
or
lock
inc
or
jl
mov
loopne
mov
ret
repz
mov
aad
lgs
sbb
pop
fstpl
sbb
push
push
iret
push
pop
dec
xorl
adc
jp
xchg
mov
xchg
jo
cltd
inc
icebp
adc
mov
inc
lahf
jo
arpl
mull
hlt
popa
dec
pop
xchg
add
jnp
dec
xlat
insl
test
sbb
mov
push
paddw
aad
sub
jge
push
aad
fwait
xchg
dec
pop
sbb
mov
sbb
cmp
lods
jmp
inc
and
cmp
dec
push
aas
stos
push
cmp
xor
pop
lods
jecxz
sbbb
xchg
ja
inc
stc
xchg
sti
lods
ret
and
lea
pop
test
andl
sbb
mov
mov
xchg
sub
test
push
call
daa
loop
sub
adc
in
rclb
push
jns
negl
or
mov
and
rorl
mov
pop
jle
and
adc
ret
adc
test
add
test
mov
add
sahf
or
sarl
add
lock
inc
out
aad
imul
sbb
aas
dec
fcmovb
xor
and
lods
adc
and
xorb
mov
lret
loop
cmp
shrl
stos
and
xlat
inc
or
jns
sar
mov
sbb
dec
dec
inc
cmp
xor
scas
or
or
arpl
addr16
mov
cmp
and
push
cmc
andb
and
loope
mov
xchg
add
movb
push
cmp
imul
add
jbe
loopne
push
xor
clc
sti
int3
test
mov
pop
dec
int3
scas
ds
push
mov
mov
lods
jno
mov
mov
lahf
fdivrp
and
rcrl
fadd
nop
pop
adc
test
imul
rorl
pop
mov
icebp
test
int3
pop
sarl
pop
sub
lock
xor
dec
fidivs
add
mov
xlat
sahf
mov
addr16
sti
arpl
push
cmp
mov
loop
adc
arpl
adc
sahf
sbb
add
mov
fmull
or
out
psllq
loop
lret
jl
mov
inc
jge
pop
cwtl
mov
addr16
in
mov
pop
movsb
jmp
xor
mov
decb
adc
pop
ret
mov
and
or
ret
add
movsl
push
inc
mov
push
fsubrp
jne
jle
pop
pushf
and
pop
jmp
call
es
xor
add
daa
test
sbb
fnsave
jb
shl
xchg
inc
push
inc
add
ja
xchg
cmpsl
mov
fsubl
mov
shl
rclb
dec
and
jns
or
lods
pslld
inc
adc
cmpsb
inc
lret
mov
push
mov
je
or
cld
adc
movsb
push
xor
loopne
movsb
lret
sub
lret
mov
adc
pushf
mov
ljmp
aam
add
bound
push
or
stos
push
push
int
cmp
push
subb
outsb
mov
or
pushf
aas
dec
sbb
addr16
sti
and
sbb
dec
lret
push
sbb
xchg
data16
or
xor
inc
adc
addr16
stos
pop
cmpsl
movsb
sbb
or
sub
pop
repz
cld
es
in
fs
xchg
cwtl
clc
js
push
fdivrl
cltd
add
out
dec
das
nop
lcall
push
icebp
mov
push
pop
push
jnp
mov
jno
adc
sub
imul
and
rclb
gs
inc
iret
dec
sub
outsl
pop
ss
ds
ds
mov
add
and
mov
fimull
cwtl
cmp
or
into
pop
xor
xorb
es
sbb
cli
insb
dec
dec
or
mov
cmp
stos
stc
xchg
mov
orb
jg
and
pop
pop
cmp
insl
sbb
enter
and
imul
shr
sbb
jmp
lret
cmp
decl
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
add
pop
dec
int3
xor
inc
pop
jl
jne
scas
adc
mov
and
xchg
jns
pop
fidivs
push
lret
enter
sbb
jecxz
mov
jp
jl
lods
mov
test
jne
cmpsb
or
xlat
jl
rcll
xchg
fists
cmpl
push
int
xchg
sub
jmp
outsb
jb
jl
mov
pop
add
jne
subb
inc
enter
inc
pop
sub
std
cli
or
mov
mov
lret
and
xchg
inc
out
and
fistpll
out
test
outsb
jae
mov
sbb
dec
inc
mov
fmulp
cmp
jbe
pop
lcall
dec
mov
add
jg
xchg
pushf
sbb
sbb
fldz
lods
mov
sbb
daa
jae
jne
lahf
adc
pop
arpl
mov
jle
mov
pop
and
adc
xchg
mov
test
imulb
cmc
xchg
inc
push
dec
fsubl
dec
lock
cmp
jbe
bound
shr
mov
das
stos
scas
lcall
xchg
pop
cmp
cmp
mov
jecxz
sub
dec
pop
popa
sub
sub
mov
mov
lds
cmp
lahf
cmc
xor
cli
imul
xchg
adc
jno
pop
xlat
clc
cmc
sub
idivb
ficompl
push
leave
das
dec
inc
and
add
pop
dec
ljmp
mov
xor
repz
mov
jle
ss
leave
je
jbe
pop
sub
inc
cmpsb
inc
fwait
push
js
ss
arpl
xor
push
cltd
mov
inc
aam
mov
test
and
fs
cmp
mov
roll
adc
mov
push
cld
scas
mov
pushf
test
jle
cmp
fnstsw
mov
pop
mov
and
xor
cmp
ret
inc
push
call
mov
out
pop
or
cmp
ljmp
mov
push
jne
sti
jmp
jne
sarb
mov
dec
das
js
ja
inc
push
iret
gs
push
stos
repz
xor
push
adc
stos
std
ja
lods
shr
xor
or
jnp
stos
movl
out
mov
mov
inc
leave
jge
clc
xor
push
inc
push
fstpt
mov
push
pop
insb
push
orb
cmp
push
clc
pop
test
aad
cmp
add
lret
repnz
rolb
mov
pop
mov
inc
arpl
nop
dec
int
sbb
dec
repnz
movsl
mov
jbe
ss
in
sub
in
mov
gs
sti
xchg
mov
mov
cltd
nop
jns
out
push
jge
cmp
fcomip
cltd
lds
mov
sub
xor
push
in
pop
cmpsb
push
or
cmpsl
sbbl
jmp
inc
mov
test
sbb
xchg
lret
in
jecxz
pop
insl
clc
scas
insl
add
negb
jle
jno
nop
imul
dec
movsb
jno
push
xchg
lds
daa
xchg
ret
push
cltd
mov
fdivrl
ljmp
pop
pop
mov
imul
dec
xchg
push
test
jbe
mov
icebp
aam
das
in
in
sti
out
bound
jmp
ja
out
popf
and
cmpsl
dec
and
popa
sub
cli
mov
cmp
out
mov
mov
icebp
jno
ret
mov
xor
rorb
and
into
push
pop
cmp
jge
ss
xchg
mov
pop
mov
stos
adc
lcall
ret
leave
int
ja
mov
dec
jmp
xor
aas
loopnew
ljmp
and
mov
addl
shrw
into
out
fwait
pusha
sahf
shrl
test
adc
lock
jae
hlt
ds
sbb
das
les
push
adc
loope
adc
add
test
cmp
add
mov
lods
mov
sbb
pop
imul
scas
enter
into
lock
xor
dec
mov
sbb
inc
popa
jae
jmp
icebp
jno
ret
pop
mov
push
jg
and
mov
push
inc
lahf
fnsave
dec
xor
add
out
shrb
dec
dec
imul
addr16
stc
xor
mov
xlat
imul
out
shl
add
ret
add
mov
add
jp
fmuls
sbb
std
js
xchg
add
and
jne
mov
xor
sub
vmovaps
cltd
cld
lock
jnp
xor
jnp
rorb
jmp
rorb
sub
lds
insb
imul
push
dec
dec
xchg
cmpsl
mov
cmp
popa
out
jecxz
jb
mov
loop
or
mov
or
add
pop
pop
fwait
add
mov
add
sbb
xchg
ljmp
sbb
push
lock
loopne
bound
mov
sub
add
out
sbb
in
push
adcb
mulb
xor
lods
inc
or
mov
cwtl
inc
lods
subl
fdivrp
and
dec
fnstcw
test
and
out
popl
icebp
xchg
mov
adc
add
cmp
lcall
push
add
mov
xor
mov
jle
dec
daa
out
lret
orl
jb
pop
cmpsb
jnp
test
xchg
sub
shll
xchg
push
sub
mov
push
in
adc
or
adc
mov
pop
mov
pop
pusha
or
mov
sub
dec
push
cmpsl
sti
mov
xchg
mov
lret
out
es
or
frstor
push
shr
daa
fisubl
mov
in
cwtl
sbb
push
jae
xor
bswap
dec
fldcw
std
or
mov
jbe
cltd
pop
push
pop
adc
lock
hlt
lds
dec
outsl
std
add
push
imull
jecxz
cmp
jmp
cmp
stc
inc
cmp
rorl
in
lods
vunpcklps
ret
div
dec
pop
mov
jg
jno
mov
rorb
mov
cmp
or
bound
jbe
setns
cmc
scas
or
lods
stos
scas
cs
adc
ja
pop
addl
add
pusha
mov
pop
lods
stos
inc
faddl
cmp
xchg
pop
fsubrl
cmp
jnp
push
dec
mov
xchg
daa
jecxz
or
arpl
xchg
jb
ja
dec
push
vhsubpd
cmpsb
mov
xchg
pop
leave
gs
cmpl
aad
and
xchg
sbb
push
jmp
stos
and
test
mov
ret
mov
bound
inc
mov
ffree
pop
scas
aad
jl
push
cmpsl
xchg
push
cwtl
fimuls
push
fdivl
in
or
mov
mov
jne
pushl
flds
mov
scas
mov
sbb
sti
adc
cli
lock
add
cmp
sbb
lds
sub
sub
mov
push
notb
sbb
mov
addr16
fmulp
push
popa
push
stos
add
jne
jae
outsb
mov
pop
or
hlt
in
mov
sbb
and
arpl
in
or
icebp
sub
jb
jbe
stos
inc
das
fucom
aaa
xor
repz
sub
mov
in
out
daa
jp
icebp
dec
push
inc
inc
pop
adc
push
cmp
dec
mov
xchg
mov
lods
lods
stc
jo
ss
add
fs
xlat
aam
dec
push
dec
pop
fsubr
js
es
icebp
fsubp
add
and
adc
scas
loopne
xor
add
into
dec
lds
cwtl
in
call
mov
xchg
imul
fwait
mov
ret
mov
jmp
sbb
xchg
pop
clc
imul
lock
mov
movsb
dec
dec
cwtl
aad
pop
pop
cmp
std
je
sti
mov
xchg
fwait
popf
arpl
adc
mov
inc
popa
jge
sub
pop
cmp
rcll
sti
inc
gs
ja
rcll
fwait
push
sub
add
and
push
adc
or
popf
xor
xchg
ss
mov
test
jmp
rolb
jno
pop
inc
lahf
pop
scas
inc
cltd
add
in
mov
mov
xchg
in
lock
sbb
aaa
inc
pop
mov
xchg
or
xlat
pop
out
cmp
ud2
test
ret
xchg
inc
test
or
jp
out
std
cmp
xchg
xchg
push
in
jl
fldt
sbb
mov
dec
pushf
in
outsl
mov
push
or
mov
and
cmp
push
push
pop
push
xor
mov
loopne
ja
xchg
mov
addl
lahf
pop
lock
aas
push
jmp
push
loopne
adc
sub
mov
xor
pop
lods
mov
and
jecxz
enter
lods
cwtl
out
jbe
out
and
push
sub
pop
shll
xchg
in
insl
js
lret
imul
and
inc
cmp
out
js
test
out
jno
cmpsb
mov
mov
fmuls
jne
cmp
scas
loopne
out
daa
push
leave
lcall
out
mov
jb
inc
enter
enter
cmp
rcrb
addb
xchg
shll
mov
lock
or
push
adc
jle
cwtl
gs
in
sbb
pmovmskb
sar
cli
add
cwtl
sbb
sbb
add
adc
mov
or
sbb
push
jno
pop
or
loope
insl
sbb
aam
stos
lods
dec
data16
cmp
ficoml
pushf
adc
movsb
imul
xor
test
aas
out
xor
daa
inc
jmp
jg
in
and
popf
dec
ret
dec
daa
pop
xor
adc
xorl
lcall
test
xlat
test
int
leave
jl
test
cmc
mov
mov
sub
out
nop
push
mov
jg
jmp
dec
cs
scas
outsb
xor
in
adc
xor
sub
sub
idivl
inc
fimull
dec
xchg
jl
add
pop
push
ret
xchg
scas
xchg
and
cmp
inc
sbb
push
in
shl
js
fimull
mov
mull
mov
imull
cld
sub
lds
xchg
outsb
push
pop
push
daa
xlat
lds
popf
daa
lods
sub
adc
notl
pop
mov
lret
adc
mov
call
add
lods
mov
loope
cs
pop
sub
lods
out
mov
mov
jnp
xchg
pop
cli
xchg
xchg
cmp
rol
xlat
pop
dec
push
pop
sarb
dec
pop
cmpsb
mov
jnp
jg
out
pop
popf
mov
cmp
lea
add
push
cld
jl
xlat
jb
sub
and
fcoml
shl
les
std
pop
push
push
adc
in
arpl
lret
push
mov
or
mov
pop
and
xchg
inc
iret
push
mov
jae
testl
sti
es
ja
or
pop
dec
jle
daa
loope
cli
cld
jne
lods
push
mov
add
push
push
cltd
daa
push
aam
dec
jp
pop
scas
imul
roll
out
lea
divl
adc
imul
xchg
cmp
mov
addr16
shrb
enter
out
sahf
insl
es
add
ja
push
push
clc
add
adc
mov
pushf
div
mov
outsl
fadds
div
lcall
outsl
data16
push
jno
push
mov
outsl
pop
orb
jg
lcall
out
cwtl
rcll
jle
jo
jbe
test
fbld
out
mov
loop
add
je
aaa
repz
mov
repnz
lods
push
in
jge
sti
cmpsb
movsb
mov
icebp
push
jp
sub
jb
insb
ret
stos
out
insl
or
movsl
push
lods
js
add
cmp
and
lcall
in
dec
je
orb
push
mov
pop
push
push
divl
cs
into
and
cmpsb
cmpsl
imul
fisubl
push
jbe
int3
dec
ljmp
pop
rcll
or
mov
mov
sbb
push
lea
sub
pop
call
fidivrl
shrb
xchg
cmp
nop
inc
sbb
int3
mov
mov
jmp
cmp
daa
rorl
push
insl
gs
jno
mov
loop
xor
shlb
cmp
cld
inc
rcrb
push
rcl
mov
in
les
aas
pop
inc
int
adc
sub
pop
fsubs
inc
xorl
xchg
jl
ds
adc
push
pop
pop
test
and
loop
mov
cmp
mov
sti
xor
sbb
ret
lret
test
sti
cmp
sub
mov
repnz
xchg
in
outsl
in
inc
sbb
mov
fs
icebp
mov
clc
ret
fldcw
mov
lods
into
cmp
in
out
outsb
test
xchg
pop
mov
cmc
out
mov
mov
ret
cmp
pop
inc
lahf
push
and
bnd
fabs
xchg
in
xchg
fistpll
cli
clc
movsl
ds
sbb
lcall
xor
and
fisubrl
sub
add
sbb
movsb
sub
push
int
mov
loop
mov
or
pushf
jo
in
mov
push
out
pop
lret
or
xchg
pop
and
jb
xchg
jnp
clc
mov
int
pop
xorb
xchg
popf
sbb
cwtl
mov
loopne
pushf
out
xor
xor
and
xchg
mov
pop
push
pop
dec
and
xor
jl
lock
cmp
xchg
mov
andb
iret
add
div
rorb
pop
hlt
repz
add
call
mov
ss
sub
pop
add
mov
cmpsl
xor
inc
cmc
rclb
in
les
and
mov
out
js
xchg
stos
and
xchg
xchg
dec
sub
fcmovnbe
sahf
rorb
jg
inc
es
sub
icebp
mov
arpl
pop
or
xor
push
sub
mov
mov
mov
jle
dec
or
rcrb
int
insl
in
sub
nop
mov
xor
inc
sub
sti
aas
and
cmp
jle
in
jae
jp
scas
imul
jp
push
jae
test
imul
fmull
aam
outsb
outsb
fwait
int
jb
iret
sbb
and
cmpsl
sub
dec
in
pushf
xchg
jns
cs
push
stos
xchg
mov
or
imul
xchg
jl
push
mov
in
je
ljmp
push
adc
lahf
sub
or
pop
leave
loop
jns
sbb
jl
lods
cwtl
xorb
test
adc
and
adc
xor
ja
mov
jbe
jge
std
inc
repz
movsl
sub
fwait
mov
leave
cmp
dec
pop
push
cmp
mov
fs
cmp
push
mov
dec
int3
movsb
addr16
dec
xchg
xchg
dec
popf
push
addr16
push
adc
xchg
test
mov
jno
mov
pop
mov
cmp
test
and
pop
mov
in
and
mov
and
lret
xchg
mov
inc
test
aam
xor
icebp
pusha
or
or
xor
lock
mov
pushf
inc
mov
jae
inc
cwtl
es
aam
sbb
test
jno
or
push
ret
mov
loopne
and
in
test
lret
mov
mov
xor
repz
mov
xor
imul
xchg
movsl
in
loopne
adc
add
out
xor
push
cs
sbb
or
test
xchg
pop
mov
and
push
lcall
cmp
ljmp
cmp
test
cli
test
jb
imulb
inc
js
in
dec
fld
push
ficomps
stc
fsubrs
pop
fstl
xchg
cld
sub
roll
fstpl
add
inc
fwait
mov
rclb
add
movsb
jg
negl
xorb
push
mov
dec
dec
xchg
and
ljmp
gs
inc
jge
aas
pop
rcl
xchg
repnz
jbe
mov
fidivrl
or
cltd
out
out
loopne
inc
cmpb
imul
jns
or
leave
sbb
mov
dec
gs
lcall
xchg
xchg
or
mov
push
lods
int
test
xchg
and
xchg
stos
sub
or
int3
push
jo
add
and
pop
mov
jp
lds
cmp
imulb
mov
movsl
xchg
adc
pop
cli
ss
add
jns
movsl
lret
jmp
adc
lock
sub
xor
cs
mov
xchg
and
pop
jg
adc
insb
mov
mov
or
inc
into
adc
pop
int3
shl
sub
xor
sub
and
add
jge
std
mov
js
sub
rcr
mov
lods
mov
sub
mov
cmp
mov
and
mov
add
inc
popa
xor
sbb
xchg
rcrl
es
lods
and
adc
lods
push
mov
out
and
test
sub
cwtl
add
fstpl
adc
je
nop
cmpsl
mov
mov
test
sbb
push
inc
dec
ret
stos
in
cmp
movsb
imul
sahf
xor
mov
push
into
dec
addr16
and
shll
rdtsc
adc
insb
daa
mov
adc
rorl
imul
add
inc
inc
ljmp
and
mov
divl
jmp
setnp
stc
and
inc
scas
dec
out
mov
cmp
movsb
mov
push
movsb
test
mov
mov
insl
test
jecxz
test
mov
pusha
iret
leave
fadds
loope
ljmp
outsl
adc
push
popa
popa
loopne
jecxz
inc
movsl
bound
lods
rcr
lret
pop
sbb
push
ja
inc
or
verr
mov
mov
push
mov
cmpsl
xor
and
pusha
repz
test
cltd
push
jmp
imul
mov
es
push
test
push
push
lock
int3
cmp
push
inc
bound
addl
out
jne
sub
stos
inc
clc
mov
sbb
hlt
inc
idivb
sbb
mov
sbb
inc
jno
ss
aad
aam
fwait
pop
cmp
cwtl
aaa
divb
mov
jnp
jne
push
push
add
cli
les
cmp
ljmp
pop
xor
rorb
xor
repz
jne
pop
div
add
loopne
mov
mov
adc
mov
push
inc
cwtl
shrl
pushf
dec
dec
ljmp
outsl
mov
jo
push
and
cmpb
lret
push
into
in
bound
push
les
pushf
repnz
inc
aaa
mov
stc
idivl
adc
adc
jns
cmp
xchg
xor
inc
push
not
pop
sbb
in
clc
daa
jp
pushf
fwait
inc
xchg
xchg
or
outsb
and
popa
ljmp
push
adc
xor
push
xchg
pop
cmp
xchg
push
cmp
bound
pop
push
inc
mov
aas
mov
lock
xor
stc
jmp
sahf
push
popf
sarl
inc
mull
xor
mov
jecxz
pop
leave
and
test
lods
movsb
add
inc
out
mov
inc
mov
rcll
or
dec
jno
xchg
gs
and
dec
xchg
mov
jno
xor
gs
popa
push
clc
test
repnz
mov
sbb
push
mov
jmp
xchg
mov
ret
and
jno
sbb
push
lods
pushf
or
dec
outsl
xchg
test
jg
fwait
jle
cltd
mov
repz
sbb
mov
test
into
mov
aad
cmp
aaa
lock
pop
cmp
in
adc
mov
pop
jge
adc
test
dec
shrl
sub
call
push
lds
and
sbbb
test
mov
mov
dec
jmp
inc
jg
stc
je
pop
adc
push
leave
cmp
xchg
addb
bound
inc
dec
stc
clc
rclb
mov
mov
mov
cmp
in
xchg
iret
idivl
xchg
add
adc
inc
movsb
xchg
rcr
sbb
and
xchg
enter
pusha
add
pop
pop
push
mov
xchg
cmpsl
xchg
imul
xor
push
mov
je
jecxz
rorb
jmp
daa
sub
add
jno
xor
aaa
int3
lds
push
lcall
mov
cmp
movsb
mov
fs
movsl
movsl
pop
push
ret
inc
and
push
adc
adc
mov
xlat
xchg
mov
lret
or
xchg
cltd
sbb
sub
jl
cmc
sbb
lods
outsl
jl
nop
pop
xchg
mov
xor
mov
push
and
xchg
aaa
mov
fwait
bound
ljmp
je
test
and
mov
mov
or
xor
addl
inc
ret
gs
iret
push
mov
push
mov
jno
inc
and
pop
mov
mov
fnsave
test
test
nop
cmp
jl
pop
push
stos
hlt
insl
and
sbb
mov
aaa
iret
and
and
sub
data16
je
ds
jnp
pop
test
stc
in
or
inc
jns
xchg
sub
or
gs
cwtl
push
lea
jmp
jecxz
je
dec
sub
leave
fcoml
leave
movlps
xchg
daa
sub
jns
iret
jb
pop
cmp
xchg
inc
sbb
dec
leave
out
pop
imul
xchg
sub
rcrb
ret
js
rclb
sbb
jecxz
inc
movsl
cmp
adc
push
ljmp
mov
mov
adc
cmp
push
push
aad
and
xlat
sub
adcl
out
xor
jb
jbe
cmp
dec
fimuls
and
pop
mov
clc
adc
sbb
mov
push
push
adc
je
mov
xor
sarb
addb
add
and
mov
inc
jg
mov
mov
shll
pop
adc
and
or
test
ds
popf
shl
adcl
jnp
add
icebp
aaa
adc
mov
or
cmp
add
test
scas
cmp
outsb
sbb
xor
nop
mov
lock
and
push
dec
call
mulb
lds
dec
pop
cmp
dec
cmpxchg
jge
pop
shl
cmp
pushl
dec
or
cmp
push
out
fcomps
mov
dec
pusha
aas
ja
pop
mov
das
pushf
insb
clc
cmp
lret
mov
mov
pop
pop
mov
mov
jb
pop
lds
cmpsb
fcoml
popf
inc
das
xlat
mov
pop
lods
dec
dec
lds
mov
and
stos
lcall
push
add
insl
push
call
adc
or
jb
sbbb
mov
lock
fstpt
std
pop
sbb
push
out
add
dec
jmp
push
negb
cwtl
or
jp
sub
push
adc
mov
jns
sbb
std
and
sub
jns
mov
jl
notb
push
or
xor
shll
scas
fsubrl
mov
ss
lea
xchg
or
loop
cmpsb
xchg
fnstcw
popw
jmp
loop
lret
adcl
fiaddl
test
in
or
fildl
fucomip
xchg
mov
sbb
cmp
scas
cmp
std
ror
test
addl
sub
jmp
inc
jnp
push
or
cmp
pop
and
bound
jbe
divl
rcll
addr16
fwait
adc
mov
xor
pop
stos
pop
ficomps
lock
lret
or
mov
aad
and
repnz
fs
sub
pusha
push
or
cld
mov
push
xor
xchg
lock
mov
cmp
mov
push
sbb
mov
iret
jb
sbb
popa
je
cmp
xor
aam
push
mov
xchg
xchg
or
movsl
frstor
jno
lods
lods
push
das
fwait
sub
inc
movsb
fcmovu
out
mov
sub
hlt
and
in
jp
leave
adc
cld
dec
xor
jg
adc
mov
xchg
rorb
jmp
push
clc
roll
xchg
out
push
shl
or
test
insb
mov
imulb
or
repz
in
push
sarb
jnp
pop
dec
stos
es
pop
push
in
push
lcall
mov
lret
inc
out
inc
mov
dec
add
inc
adcb
cmpsl
sub
test
push
xchg
push
aaa
and
in
cmp
shll
sub
into
mov
mov
je
ss
push
mov
jbe
jb
popf
ffree
cmp
sbb
fldz
idivb
scas
scas
out
mov
aad
leave
adc
push
dec
jo
sbb
ret
mov
fucom
movsb
mov
out
pop
test
rclb
dec
sub
test
xchg
lret
adc
scas
cmp
repz
sub
imul
rorl
push
cmp
sti
aaa
mov
add
rcl
fbld
stos
inc
rcll
sub
ficoml
faddl
inc
mov
dec
andb
jge
mov
test
xorl
into
cmc
jno
shlb
sub
out
cs
lods
add
popa
in
dec
push
mulb
push
hlt
sbb
pushl
out
adc
mov
sbb
mov
cmp
nop
roll
jb
stos
pop
or
xchg
pop
push
stos
repz
lods
mov
aam
imul
cltd
js
fiaddl
aam
mov
cwtl
call
lock
scas
testl
xor
call
push
push
outsb
loop
int3
iret
loop
mov
adc
adc
out
stos
fimull
stc
aaa
jns
sbb
pusha
aam
xor
push
popf
push
daa
enter
mov
popa
add
dec
loope
mov
out
rorl
mov
clc
inc
add
jno
outsb
fldl
test
gs
test
lock
lcall
ret
stos
jne
movsl
pop
jg
and
int3
jl
pop
out
mov
and
sub
jnp
push
js
fidivrl
dec
mov
lcall
or
stos
mov
inc
cmpsb
push
scas
nop
pop
mov
jbe
cmp
add
inc
xchg
scas
lods
mov
xchg
int3
shll
ret
push
ss
int3
icebp
rorl
push
mov
mov
mov
aaa
mov
jp
mov
sti
add
sbb
sbb
mov
js
lds
jmp
test
jae
decb
fidivrl
mov
ljmp
inc
andb
push
and
ja
push
adcb
add
push
cs
jp
dec
in
int
mov
sub
repz
out
jno
icebp
ffreep
cmp
push
xor
or
test
and
sbb
dec
aas
dec
test
jnp
xor
insl
ljmp
add
sbb
pop
inc
dec
mov
stos
stc
aaa
jne
add
movsl
adc
push
scas
loop
jl
mov
les
shll
scas
jbe
outsb
fistps
aas
xor
stc
das
daa
push
addb
add
xchg
mov
inc
loop
mov
xlat
dec
xor
insl
fcmovbe
test
addl
sub
cmc
ror
clc
sbbb
out
add
lds
or
sbb
mov
xor
adc
iret
stc
xchg
sar
xor
fldenv
loopne
pop
adc
in
call
jg
cmp
in
into
mov
adcl
aaa
popa
les
movsl
and
ja
bound
sbb
mov
jge
xchg
sub
fwait
pop
or
pop
jmp
pop
xchg
or
xlat
pusha
jnp
repz
sarl
aaa
shr
ljmp
pushf
jg
enter
sub
les
adc
repz
push
mov
and
shll
jb
jae
mov
repnz
add
repnz
or
xchg
ret
pop
movsl
movsb
scas
push
stc
ja
pop
xchg
sahf
shlb
cwtl
pushf
je
inc
add
inc
xchg
movsl
data16
dec
lea
xor
fadds
je
jbe
fmulp
mov
sbb
je
sete
jno
inc
stc
mov
jne
lret
pop
xchg
xor
js
ret
in
call
xor
add
imul
xchg
mov
mov
push
aaa
enter
cmp
aad
in
dec
pop
enter
jbe
out
xlat
mov
shlb
lcall
dec
iret
push
ljmp
xchg
mov
xor
jg
pop
mov
push
xchg
add
rorl
xchg
mov
mov
xor
shll
movsb
std
mov
xchg
out
mov
int3
js
or
mov
std
xorl
inc
data16
and
dec
imul
mov
xor
push
iret
dec
movsl
or
and
in
dec
iret
inc
inc
outsb
testb
call
test
pop
jp
inc
icebp
repz
aas
outsl
mov
sub
pop
out
dec
add
xor
xor
lea
call
mov
adc
dec
dec
inc
jge
or
sub
cli
mov
gs
aas
daa
xor
sbb
dec
push
push
add
lock
stos
pop
lsl
leave
inc
lock
hlt
adc
jno
insb
ljmp
in
inc
test
push
mov
adc
adc
arpl
popf
jne
out
bound
mov
rcll
jns
ret
add
mov
push
cltd
ret
add
shl
inc
inc
sarl
mov
bound
inc
sub
cwtl
jecxz
ret
jb
mov
popa
mov
sbbb
inc
or
mov
clc
mov
sub
repnz
xor
dec
pop
cs
dec
out
es
ret
pop
lahf
bsr
inc
out
push
xor
ret
lods
push
pop
arpl
push
out
sti
and
lcall
push
sub
imul
aas
dec
or
or
inc
fs
add
gs
cmpsb
jbe
jnp
gs
dec
mov
aam
das
cs
addr16
fdivrs
clc
je
cmc
mov
cmp
push
xlat
push
sub
jl
repnz
repnz
mov
mov
push
data16
es
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
add
inc
pop
jl
fldt
imulb
decw
lods
test
mov
je
dec
jns
sub
rcrl
leave
cmp
ret
add
mov
pop
jae
mov
mov
or
lret
jle
fildll
call
sbb
or
sub
pusha
mov
or
or
cmp
mov
je
js
sbb
dec
js
std
sbb
test
aam
jbe
mov
sahf
inc
jl
mov
dec
sub
jecxz
daa
jo
cld
cmp
fnstcw
jmp
push
popf
pop
push
push
mov
push
and
scas
or
cltd
pop
push
lock
arpl
outsb
add
pushf
adc
sub
jge
xor
sbb
dec
jge
cli
cmp
xor
pop
fwait
jmp
cmp
pop
xor
sub
fs
cmpsl
arpl
push
dec
notl
dec
mov
fldl
cltd
and
subl
test
stos
pop
insb
add
stc
xor
or
jge
lret
lods
or
fdivrs
sarl
iret
mov
nop
adc
add
cmp
push
ss
mov
or
scas
cmpsb
scas
adc
ds
es
jae
mov
out
out
pushf
fbld
sbb
push
jmp
xchg
xorb
cmp
pop
pop
test
aas
or
outsb
lcall
sub
jmp
mov
pusha
ljmp
out
subl
xor
test
cmpsl
repz
add
xchg
xor
mov
outsl
fdivs
and
nop
in
std
into
hlt
out
into
xchg
mov
fs
aad
popa
scas
xor
or
in
sub
stos
push
mov
aas
pusha
cwtl
pop
push
sub
repz
and
adc
mov
pop
pop
mov
in
insl
inc
cmpsb
bound
leave
mov
mov
cmpsb
xor
push
mov
mov
pop
xlat
inc
iret
and
in
pop
arpl
add
mulb
mov
out
push
movsb
or
or
int3
stos
mov
aam
stos
push
jae
cmp
dec
cmp
enter
inc
fcoms
cmp
jmp
jmp
and
xlat
jns
call
stos
jae
mov
lods
nop
jo
repnz
or
add
sub
sub
pop
bound
or
inc
shll
fimuls
js
into
jp
jo
sarb
jnp
mov
js
sub
jl
push
sub
fwait
in
jg
push
jecxz
cltd
add
add
sub
fnstenv
fstl
pop
lea
test
fdivrp
sbb
mov
pop
mov
ret
lds
out
cmp
dec
sbb
push
sub
in
and
aas
dec
mov
out
and
lcall
adc
jl
xlat
ljmp
adc
mov
add
pop
outsl
mov
pop
inc
mov
popf
aad
int
loop
mov
fmul
popa
imul
rcrb
aad
cwtl
mov
sqrtps
xor
inc
outsb
mov
or
xchg
sub
mov
jmp
xor
into
rclb
or
inc
mov
daa
push
nop
gs
push
out
negl
pop
cmovbe
lods
jae
jecxz
rcl
fninit
fistpl
jno
add
jne
das
jge
cmpsl
out
sbb
int3
adc
mov
hlt
pop
jns
mov
and
adc
or
inc
outsb
pop
imul
out
push
pop
fists
adc
movsb
leave
lock
mov
insb
inc
clc
clc
andl
or
inc
sub
jb
incl
pop
xchg
sub
push
adc
xor
ds
dec
popa
pop
add
sahf
cwtl
or
lahf
loopne
jno
xchg
sbb
out
int
inc
aaa
pop
sbb
push
cmp
je
pop
pop
rcl
xor
xchg
andb
fiadds
outsb
int3
pop
pop
inc
pushf
cmc
call
fldenv
add
aas
popa
sti
nop
xchg
inc
loopne
push
sub
jp
popa
int3
aam
lods
insl
sub
clc
cmp
shlb
add
jmp
push
jo
jl
xchg
jo
pop
and
stc
mov
addr16
mov
xchg
adcl
fbstp
fsub
orb
call
cmp
je
add
add
insl
fidivs
call
xchg
ljmp
jmp
or
pop
sub
outsb
push
lds
es
outsl
push
push
cld
adcb
cmp
cmp
mov
sub
loope
inc
push
push
in
sbb
sub
rcrl
push
cmp
xchg
dec
out
sub
icebp
jb
icebp
sbb
xchg
xchg
xchg
pop
stc
jb
lock
stos
aad
iret
ljmp
inc
mov
gs
pusha
icebp
mov
rclb
arpl
xor
xchg
popf
pop
popf
cmp
psubsb
xchg
add
fdivs
loop
scas
dec
adcb
inc
cmp
cmp
fs
sub
cmp
jg
shl
pop
and
sbb
sbb
outsb
fstl
dec
xchg
ljmp
adcb
inc
cmpsb
mov
inc
or
jb
inc
pop
add
cmp
cmp
int3
or
push
adc
shll
pop
sub
push
mov
jnp
push
pop
jb
sbb
lods
int3
andb
int
jne
fstl
add
and
cli
gs
mov
xor
dec
pushf
ret
push
sbb
outsl
mov
push
mov
add
mov
fsubs
mov
das
aas
and
sbb
add
std
and
fucom
sbb
das
push
rcll
mov
sub
insb
data16
sbb
pusha
xor
push
les
or
loop
dec
call
add
in
pop
dec
nop
pop
in
outsb
test
inc
push
imul
lahf
cwtl
and
fs
fs
cmpsb
mov
imul
inc
movsb
push
repnz
test
adc
insl
jmp
enter
fs
lods
icebp
push
rorl
pusha
adc
jle
loopne
xor
sbbl
push
pop
lock
jmp
and
xor
outsb
pop
jecxz
xlat
filds
cwtl
mov
lret
dec
sbbb
inc
or
pop
lods
mov
int3
pusha
aas
out
xchg
add
stos
dec
and
dec
daa
popa
jo
dec
pop
push
inc
jcxz
xchg
push
loopne
mov
xor
xchg
cmp
popf
push
repnz
daa
mov
test
loopne
sahf
adc
pop
xor
mov
or
pop
iret
nop
push
fsubrl
xlat
mov
ljmp
cmp
jmp
cltd
cmp
sbb
lds
insl
mov
scas
int
clc
lods
dec
jne
inc
adc
shrb
push
inc
aam
shl
aas
nop
and
imul
out
xlat
fs
int
fimull
and
sub
divb
push
mov
or
enter
xor
rcrl
lahf
cli
sahf
pinsrw
shl
xlat
enter
lret
and
jmp
or
mov
and
or
sbb
loope
fsubs
lods
iret
dec
shlb
jp
xchg
add
out
push
and
insl
pop
mov
mov
mov
lea
cmpsb
adc
clc
cwtl
outsb
lret
xchg
fsubrl
in
sub
bound
sbb
shl
pop
mov
add
sbb
pop
andb
addb
aad
dec
scas
mov
gs
mov
lock
lock
sbb
mov
fisubrs
je
jmp
call
cmp
pop
xor
arpl
lcall
cli
sahf
out
mov
push
inc
sub
arpl
neg
pop
ljmp
dec
push
outsl
add
xor
inc
or
loope
sarl
das
pusha
aad
lds
icebp
push
cs
or
std
xor
mov
rclb
rorl
jbe
add
jmp
xor
mov
push
nop
or
xchg
xchg
jecxz
dec
xchg
xor
cld
enter
or
sub
fwait
repz
rcrl
sub
jg
or
xchg
movsb
nop
inc
popf
push
sbb
mov
mov
dec
aas
insb
fdivr
into
inc
fildl
stos
pusha
hlt
in
sti
cmp
subb
mov
add
lock
jae
addr16
mov
pop
cld
ja
xor
lds
mov
pop
push
sbb
add
shll
pop
dec
popa
xor
in
xchg
sahf
movsb
inc
push
mov
testb
pop
mov
hlt
adc
jae
cmp
sub
and
push
dec
xchg
pop
or
icebp
push
std
loop,pn
cld
adc
push
sahf
aad
mov
js
jmp
in
push
aaa
es
shrl
mov
cmc
cmp
pushf
fwait
rcrb
push
and
xchg
les
sub
push
pop
imul
std
int
jl
nop
dec
mov
mov
pop
jmp
adc
cmp
test
out
xor
cltd
loope
push
xor
in
sbb
jmp
loopne
push
adc
aaa
clc
dec
or
push
mov
mov
adc
push
sbb
dec
mov
sbb
inc
sbb
bound
sarb
mov
adc
fidivrl
shll
jge
push
fdivrl
call
push
and
or
add
mov
outsl
xor
sbb
or
int3
movsl
test
insl
out
int3
dec
out
movsl
sub
push
pop
inc
mov
or
or
testl
and
jl
mov
fisubs
sub
pusha
and
cmp
movsb
loope
push
mov
adc
jo
sti
lea
popf
mov
jecxz
lds
rclb
lcall
in
sub
sub
inc
lods
push
xchg
je
loope
cs
daa
jg
into
push
push
mov
filds
add
dec
push
ja
nop
icebp
adc
mov
mov
popa
and
mov
pop
push
loop
or
ds
rcrb
push
pop
stos
mov
jp
add
jp
adcb
test
fistps
or
inc
sub
mov
push
dec
jns
inc
scas
ror
sub
cmc
inc
dec
out
jnp
inc
mov
mov
out
fistl
xor
jmp
sub
into
push
imul
insl
lea
out
lock
popa
dec
stos
lret
push
leave
lods
xchg
dec
inc
mov
mov
mov
icebp
jmp
in
fstpl
dec
and
ja
sbb
push
dec
or
aad
pop
xchg
fwait
sbb
or
cmpsl
adc
or
cs
cli
les
cwtl
cmp
mov
movsb
in
aam
add
fiadds
pop
mov
xor
mov
jb
jne
hlt
sbb
sub
fisubl
xchg
test
push
test
mov
mov
push
lods
in
daa
pop
ret
out
cmp
test
adc
pop
stos
mov
jecxz
orb
cmp
clc
lret
mov
aaa
lods
stos
scas
lret
or
rclb
or
jg
ljmp
roll
sbb
loope
push
les
scas
shlb
lret
dec
fimull
sti
xchg
adc
pop
cmc
mov
stos
cmp
pop
mov
repz
aas
or
in
subb
rclb
dec
lret
in
test
jns
sub
mov
arpl
jb
pushf
xchg
hlt
sbb
gs
push
sub
dec
cmp
adc
sbb
mov
and
arpl
pop
cwtl
cli
in
rcr
repz
mov
and
mov
cmc
add
adc
pop
leave
into
insb
push
pop
xor
lret
dec
ss
bound
lea
mov
pop
fsubs
insb
das
mov
mov
sbb
cmpsl
sbb
inc
add
mov
mov
push
sub
aaa
test
cmc
sbb
pop
add
popa
mov
jb
rol
ret
inc
repz
insb
adc
jo
push
and
mov
int3
int3
jnp
loopne
xlat
rcl
xchg
mov
push
xor
xlat
adc
mov
add
call
lcall
outsb
xchg
iret
inc
and
push
pop
leave
and
out
mov
shlb
call
mov
adc
or
loope
push
fbstp
mov
lahf
add
jo
adc
vpmulhw
or
dec
sahf
mov
int
insl
mov
cmpsl
adcb
insb
mov
imul
mul
sbb
push
adc
clc
imul
shrb
dec
cmc
gs
and
push
pop
pusha
push
ja
pop
cmp
mov
icebp
sbb
subb
cmpsl
and
subl
sbb
xchg
sub
in
add
cmp
in
mov
test
movsl
call
cli
xchg
cmp
or
and
pushf
sahf
xchg
xor
sbb
ss
adcb
add
dec
fwait
xchg
sbb
and
and
cmpsb
and
pushf
jge
mov
dec
jecxz
push
lock
dec
xchg
popa
and
insb
repz
jle
xchg
addl
flds
lret
jnp
es
jecxz
int3
add
sbb
xchg
sbb
mov
cmp
sub
push
and
and
gs
pop
xlat
imul
mov
jne
sub
add
or
pop
test
fidivs
int
idivb
fsubl
jbe
mov
fidivrs
loopne
jne
mov
lods
dec
or
push
adc
xchg
lea
or
push
or
cmp
clc
cli
jmp
pop
andps
leave
add
xor
adc
nop
test
loop
bound
cmp
push
dec
xor
mov
jge
imul
push
push
lret
hlt
jns
sbb
aaa
movsb
sbb
ret
dec
nop
idivb
mov
fsubl
dec
fisubrs
xor
cwtl
es
fwait
das
jbe
cmp
mov
push
mov
sbb
push
fwait
mov
movsl
inc
lcall
or
adc
xchg
imul
shll
sub
add
xchg
jo
mov
or
iret
sti
adc
adc
jo
push
dec
mov
cmc
mov
mov
jae
movsb
xor
cmp
repz
push
mov
std
pop
inc
sti
lock
fcmovnu
mov
xor
or
cli
and
cltd
mov
out
or
loop
dec
bound
in
notl
insl
or
mov
sbb
jo
lods
test
icebp
loop
mov
outsb
add
out
push
das
lret
xor
push
cmp
fwait
xlat
ret
test
and
aas
addr16
jbe
stc
jns
jmp
jb
ja
push
sbb
pop
cltd
roll
bound
push
sub
out
icebp
fnsave
mov
addr16
mov
mov
xchg
pop
ret
and
repz
repz
aas
into
incb
outsb
hlt
aas
add
or
sub
cltd
pop
adc
ss
popa
in
out
cmp
fdivrl
loope
fs
jbe
das
ljmp
je
outsb
call
adcb
dec
inc
or
sbb
in
fistps
mov
lods
out
xchg
movsb
ss
cltd
cwtl
mov
jmp
jmp
fwait
jbe
jae
cmc
push
mov
mov
daa
ds
rcrl
jp
std
xchg
xlat
inc
and
testl
je
ds
iret
push
stc
adc
sbb
xlat
jne
or
bswap
decl
push
or
mov
mov
ss
sub
mov
stos
cmc
mov
jo
push
mov
mov
in
jo
adc
xchg
xor
int3
cmp
and
and
jne
add
fnstenv
pusha
cmp
cli
xchg
std
fcomps
pusha
push
arpl
push
in
insb
cmc
scas
loope
xor
in
mov
les
inc
cwtl
data16
xchg
push
push
inc
sub
lods
inc
cmp
lds
ficompl
inc
stc
sbb
lret
lods
sbb
repnz
mov
jl
filds
sbb
mov
add
inc
in
ror
xor
insb
cmp
xor
repnz
pop
push
xor
idivb
adc
push
xchg
out
and
data16
jge
mov
stos
fisubrl
stos
popf
cli
ret
push
mov
adc
or
jae
in
cltd
popf
pop
inc
push
or
sub
xchg
popf
rcll
jne
pop
mov
jne
xchg
loope
pop
sahf
adc
outsb
rcrb
mov
xor
ret
push
xchg
mov
mov
pop
lods
push
ljmp
xchg
and
and
out
fnsave
dec
pop
roll
pusha
jns
push
inc
push
inc
push
jmp
ja
in
out
movsb
insl
ficomps
mov
mov
pushf
xchg
pop
clc
movsl
out
xorb
jp
stos
or
cmpsl
jae
sbb
mov
lret
hlt
inc
lcall
fcmove
lcall
pop
pushf
es
sbb
aad
sub
sbb
push
in
jecxz
repnz
out
cmpb
nop
cmc
std
mov
or
cmp
mov
mov
jns
pop
adc
out
stos
adc
cmpsb
aad
push
push
int
clc
mov
jg
clc
das
into
jecxz
stos
mov
push
lock
dec
lea
rcr
jge
divl
insb
mov
dec
aad
mov
mul
leave
sbbl
aam
inc
jns
out
das
mov
rcrl
cmpsb
cwtl
js
mov
int3
mov
mov
add
fmull
out
imul
jns
jnp
lret
sbb
jl
adc
jnp
add
mov
ljmp
ljmp
mov
lcall
ja
and
adc
shrl
add
jno
rcrl
fstpl
stc
leave
movsb
test
jo
insb
or
inc
lea
loop
mov
add
cld
div
pusha
sbb
jecxz
push
dec
test
sti
ljmp
loop
jg
mov
xor
push
cltd
aam
push
dec
rcrb
lea
cmp
mov
cmp
cmpsl
dec
inc
cs
loop
mov
xlat
mov
js
into
pop
push
stc
movsl
pop
and
xor
add
mov
ja
in
enter
je
cmp
call
insl
sub
xchg
iret
out
out
pop
sbb
xchg
sub
or
and
add
ss
inc
fwait
adc
xchg
inc
das
into
mov
adc
int3
inc
loopne
sbb
dec
adc
mov
movsl
cmp
cmpsb
lock
loope
mov
mov
or
cmp
shl
test
popa
lret
mov
nop
pop
cli
shrb
or
repz
mov
out
mov
sub
push
popf
rcl
fxch
les
lret
out
inc
cmp
or
pushf
jbe
imul
push
mov
add
and
jno
mov
mov
movsl
enter
std
jbe
test
movsl
jmp
inc
adc
lods
push
jnp
xchg
imul
mov
lods
mov
aaa
sbb
and
mov
lret
std
fnsave
pop
imul
lods
and
cmpsb
cld
ds
adc
inc
mov
xlat
fsub
push
cmp
pop
mov
sti
jg
or
leave
inc
test
arpl
aas
adc
sbb
arpl
loop
or
jcxz
cmp
pop
mov
ret
dec
pop
rclb
mov
pop
jecxz
mov
daa
mov
pusha
sti
movups
fincstp
sub
test
icebp
pop
mov
add
negb
fucom
mov
stos
test
arpl
das
xchg
pop
xchg
decb
sub
jbe
pop
incb
fstl
jb
jp
jmp
movl
inc
jle
test
mov
push
adc
pop
mov
sbb
mov
gs
lret
inc
les
adc
adc
test
pop
imul
lcall
decl
and
inc
lock
xor
adc
out
negl
pop
xchg
and
scas
xor
or
int
and
mov
mov
cvtpi2ps
mov
incb
sub
pop
push
cltd
loopne
adc
test
movsl
shrl
rcrl
dec
push
faddl
and
punpckldq
jb
sbb
sbb
dec
out
cmp
ret
dec
aaa
jno
sarl
aaa
les
pop
out
fisubl
in
lods
push
movl
rcll
loop
lods
pop
add
aas
int3
enter
adc
dec
hlt
dec
lcall
mov
js
scas
adc
jge
pop
push
movsl
repz
mov
sahf
mov
and
popf
popf
push
push
and
das
scas
jne
push
fwait
xor
lds
sbb
pop
mov
fisubs
call
add
mov
xor
inc
jnp
xchg
mov
push
cmpsb
inc
nop
dec
nop
push
cmp
mov
pop
in
pop
inc
cmp
cmp
add
push
push
xchg
xor
ljmp
or
xor
adcl
jmp
xlat
cmp
out
or
jge
ljmp
das
aaa
popf
dec
cwtl
sub
fnstenv
fisttps
sub
dec
out
bound
out
orl
ret
imul
push
push
adc
mov
mov
fstl
testb
or
mov
iret
outsl
popa
rolb
xchg
sbb
mov
imulb
loopne
xor
mov
decl
sbb
mov
test
das
mov
test
int3
adc
cmp
or
push
jne
lds
leave
into
outsl
fsubrl
fldl
shrb
in
pop
into
nop
pop
or
push
mov
js
les
sbb
ds
mov
mov
cmpsb
xor
mov
pop
and
loopne
mov
mov
imul
movsb
dec
adc
mov
mov
je
jno
loop
mov
test
pushf
shr
mov
cs
ret
adc
cli
dec
movq
out
add
jmp
push
cmp
inc
addr16
fmul
shll
push
xchg
xchg
popa
push
xchg
push
xchg
jmp
negb
xchg
sbb
jns
jae
inc
shl
fstpt
push
cmp
je
push
lds
test
add
jle
mov
pop
push
jnp
loop
sti
out
and
pop
mov
xchg
popf
ja
dec
push
adc
movsl
es
popf
push
je
jmp
jecxz
popf
push
pusha
int3
xlat
mov
push
loop
je
dec
mov
mov
lret
and
mov
ja
cmp
inc
iret
outsl
popl
dec
xor
js
ficomps
sahf
lock
xor
sub
cmpsb
ds
pop
or
mov
add
push
int
sub
pop
mov
mov
xor
ret
fmull
test
fidivrs
and
int3
mov
mov
out
pop
rcrb
or
daa
add
repz
jg
add
cmpsb
push
rcll
dec
insb
pushf
xchg
sbb
and
out
sub
mull
test
test
and
sahf
dec
mov
cmp
in
push
loop
mov
sub
mov
pushf
dec
loope
aaa
shll
xchg
xor
insl
mov
fnstcw
add
push
push
push
and
mov
push
jmp
ret
jg
bound
pop
pop
mov
mov
xchg
mov
dec
or
je
adc
leave
in
or
imul
cmp
cmpsl
mov
jne
or
add
cmpsl
addr16
pop
divl
rcrb
test
repnz
and
xchg
dec
outsb
repnz
mov
and
call
daa
xchg
movq
gs
inc
xlat
loope
pop
xor
and
aaa
dec
push
sbb
mov
push
add
fisubrs
push
sbb
pop
loopne
pop
test
lods
inc
insl
adc
sub
or
inc
rorb
cmpsb
insl
aaa
sub
movsl
arpl
jbe
mov
and
push
sbb
fbstp
call
jnp
mov
in
push
cmp
dec
mov
xchg
mov
mov
movsb
and
xchg
mov
jp
xor
loope
movsl
popf
jae
aaa
ret
inc
mov
inc
adc
iret
inc
insl
pop
inc
clc
sbb
ror
fs
outsb
push
fiadds
mov
movsl
xchg
jnp
movsl
call
stos
push
cmpb
daa
add
adc
in
rol
jg
dec
and
roll
jmp
add
mov
pop
cld
sbb
sub
loope
xor
lds
ss
or
xchg
adc
xchg
mov
jge
push
add
repnz
inc
mov
jns
hlt
into
adc
cmp
pop
push
lea
jno
das
jnp
dec
mov
mov
xchg
test
pop
out
enter
mov
dec
mov
mov
jo
sbb
and
cmpsb
incb
std
fildll
icebp
ror
add
iret
jbe
fwait
test
push
mov
sub
daa
pop
push
sbb
dec
xor
pop
pop
inc
div
mov
mov
and
cmpsb
cltd
out
imul
and
fwait
dec
push
xchg
xchg
pop
mov
fidivrl
lea
cmpsb
das
adc
int3
adc
push
adc
pushf
mov
pop
fsubs
and
addr16
loop
jmp
andb
pop
mov
xchg
cmpsl
pop
int3
xchg
jg
pop
jg
fmul
xchg
xor
jns
cwtl
imulb
into
add
imul
es
jmp
mov
xor
mov
ret
aad
das
clc
mov
sub
push
mov
pop
out
lahf
and
push
outsl
push
aas
pop
push
cld
mov
and
push
les
xchg
ljmp
push
cmp
decb
test
inc
or
out
push
sub
js
pop
xor
jecxz
xchg
sbb
fnstenv
insb
add
inc
mov
mov
out
in
add
mov
in
jb
jecxz
sahf
push
mov
out
fs
sub
enter
out
out
sbb
pop
rcrl
test
nop
outsl
sbb
fs
pop
and
pushf
lcall
stc
or
stos
push
ret
pop
fwait
aas
jne
ret
scas
jbe
dec
add
je
xor
cmpsb
enter
pop
or
loope
mov
jge
mov
xlat
mov
addr16
aam
rclb
mov
mov
fists
call
mov
adc
xor
loope
movsb
call
xor
andl
in
fcmove
cmp
and
pop
cltd
and
iret
scas
outsl
dec
rcl
nop
dec
bound
out
testl
int
jno
push
aad
xor
sti
shl
dec
mov
ret
pop
dec
add
sub
mov
mov
jnp
mov
stos
js
stc
jnp
fidivrs
xchg
sbb
pop
ss
pop
loope
jle
stc
xchg
inc
ret
popf
adc
sbb
xor
ds
int
outsl
push
and
dec
lods
push
js
and
mov
jnp
sbb
es
xchg
sbb
add
mov
outsl
mov
dec
popf
aam
ljmp
jl
add
mov
push
mov
adc
cmp
sub
ja
fbld
shlb
das
fwait
cmp
scas
pop
push
push
xor
cwtl
sarb
xchg
jge
dec
push
cmp
das
test
test
xor
dec
mov
xlat
jge
adc
pusha
mov
adc
mov
js
ret
cmc
in
arpl
test
out
cltd
arpl
andb
push
in
xlat
sub
icebp
xchg
or
mov
push
inc
adc
pop
dec
daa
cmpb
divl
or
fs
jne
xor
push
fisubrl
mov
ja
xchg
jl
repz
push
cld
mov
movsb
cmc
rcll
cmp
and
call
or
adc
mov
jg
subl
pushf
dec
push
push
or
not
fwait
icebp
adc
xor
push
push
outsb
and
push
xchg
xor
inc
in
xchg
jl
cmc
pop
ljmp
sub
dec
rcll
outsb
push
pop
push
int3
mov
rcrl
mull
and
xlat
imul
out
sahf
clc
insb
hlt
jns
dec
sub
or
mov
leave
xor
add
and
testl
adcb
or
push
les
jecxz
test
mov
pop
jb
icebp
in
mov
push
xchg
jmp
cmp
call
pushf
mov
xchg
push
xchg
cltd
data16
adc
xchg
dec
cmpsl
in
xchg
mov
inc
pop
pop
mov
mov
arpl
dec
scas
ljmp
or
adc
fsubs
out
outsb
push
ja
jae
or
lds
fidivl
loopne
jns,pn
or
xchg
sbb
mov
repz
adc
out
sbb
add
inc
arpl
jne
adc
sub
sub
inc
call
and
sbb
push
fisttpll
mov
je
adc
negb
insb
lahf
inc
lock
shlb
mov
ja
insb
in
test
jg
popa
push
fnstenv
mov
pop
inc
or
inc
jge
sbb
mov
and
cs
data16
add
jbe
xchg
jmp
andb
das
mov
outsb
or
jmp
dec
push
sub
pushf
xchg
outsl
dec
lahf
fcmovnbe
sti
xchg
lret
icebp
out
mov
lea
xchg
ss
cmp
js
cmp
add
inc
ret
aad
scas
fadds
mov
push
cmpsl
fisubs
pop
jg
fisubrl
pop
xor
mov
add
mov
stc
mov
sbb
pushf
insl
out
fistps
dec
mov
roll
cmpsb
imul
outsb
pop
sub
aad
add
cmp
pop
dec
addr16
inc
push
or
mov
andl
call
lret
push
xchg
inc
data16
jnp
mov
cmp
js
jmp
jb
repz
sub
or
pusha
xchg
xchg
rep
mov
or
xchg
and
rolb
sbb
or
sahf
mov
lret
cmpsl
pop
daa
sbb
orl
sub
pop
sub
dec
leave
mov
dec
pop
mov
mov
sti
shll
jmp
mov
xor
or
shr
xlat
lret
dec
sbb
addr16
jnp
mov
push
sti
cmpsl
call
and
sub
shll
std
adc
dec
mov
aad
add
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
jo
dec
lods
push
imul
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
data16
push
enter
add
incb
add
push
cwtl
js
dec
out
mov
loopne
and
jno
xor
adc
and
mov
dec
shlb
lods
stos
mov
jbe
es
sbb
cmp
jecxz
push
adc
movsb
add
outsb
nop
mov
push
dec
mov
xor
pop
movsb
jns
loop
inc
xor
push
andb
inc
or
out
scas
stc
cs
stos
dec
mov
inc
repz
cmpsb
aas
adc
jbe
cmp
and
testb
mov
in
push
mov
mov
add
add
iret
adc
ret
cmp
ja
aaa
sbb
push
dec
mov
or
es
xchg
push
jno
enter
inc
xchg
inc
xchg
jmp
jecxz
pusha
and
cmpsl
pushf
sub
cmpsl
push
loopne
in
mov
aas
and
icebp
xchg
add
xor
out
jae
pop
xchg
test
xor
jae
sahf
shrd
sub
sbb
jle
adc
popf
out
outsb
xlat
cmp
cmpsl
in
ss
sbb
xor
pop
sahf
adc
pushl
and
sbb
adc
xchg
mov
xchg
jne
dec
fnstsw
cmp
loopne
gs
clc
push
mov
mov
mov
pop
pop
aaa
inc
sub
bnd
clc
out
xchg
mov
sbb
xchg
jae
cmpsl
mov
push
pop
je
in
testl
xor
fcoms
sub
mov
jecxz
cmp
pop
pop
out
or
mov
das
repnz
outsb
mov
xor
cmp
sub
jecxz
pop
or
popf
add
or
cmp
xor
xor
mov
xor
fsubl
mov
stos
inc
cltd
fwait
add
ja
idiv
jg
mulb
cmpsb
loop
test
add
add
add
push
dec
add
imul
push
xchg
mov
aas
jb
cs
jge
xor
pop
sti
fadds
pop
mov
xchg
mov
daa
outsl
ror
pushf
pop
mov
push
xor
andl
xchg
sbb
aas
sub
icebp
jae
mov
adc
imul
cwtl
fmulp
rol
divb
cmpsb
bound
flds
jl
cmp
daa
adc
lods
cmpsb
inc
cli
xchg
xchg
mov
pusha
push
or
clc
mov
stos
xchg
lods
mov
call
jl
mov
push
mov
xor
popa
ret
xchg
mov
inc
ret
movl
adc
mov
pop
xchg
fs
inc
cmp
stos
mov
push
sbb
ljmp
or
or
negb
sbb
fcomps
xor
pop
cmc
cmpsb
iret
fsubr
and
les
mov
mov
lret
mov
int3
mov
aam
test
mov
pop
lahf
fcmovbe
inc
inc
ss
jle
cmp
sub
call
adc
mov
dec
and
xchg
into
jnp
xchg
insl
xchg
es
sahf
nop
xchg
leave
inc
mov
in
lods
mov
ficompl
je
jge
je
adc
movsl
or
ds
push
lods
ds
jp
adc
mov
sub
cwtl
adc
std
bound
add
aam
sarb
xchg
repnz
inc
fsubrl
jge
cmp
xchg
rcrb
mov
xor
movb
inc
mov
pop
sar
jg
ja
jns
test
dec
xchg
mov
and
call
mov
movsl
call
lahf
gs
ret
mov
and
inc
pop
add
pop
sbb
pop
std
jg
jle
popl
add
incb
add
in
icebp
movups
jb
clc
xor
sbb
test
mov
adc
mov
xchg
ret
lret
pop
inc
scas
hlt
jo
ret
jmp
add
lds
mov
or
inc
inc
outsl
clc
movsl
xchg
cmp
lods
jmp
mov
aam
and
daa
inc
pop
xor
es
aad
and
jl
iret
and
adc
jns
and
cmpsl
fisubrs
shrb
movb
pop
add
push
loop
out
pop
mov
push
pop
int
fs
leave
cwtl
in
fsub
pop
jne
imul
out
in
and
sti
repz
outsl
sub
rcrl
stc
and
call
int3
xor
sbb
hlt
xor
sbb
inc
or
xlat
inc
push
and
xor
sbb
mov
jmp
xor
push
sbb
jg
addr16
or
inc
push
outsb
push
mov
mov
jbe
jg
lea
bnd
xor
aaa
outsl
sub
mov
inc
push
mov
jb
inc
cmp
cmp
or
mov
sbb
hlt
and
mov
repnz
push
cmp
xor
or
loop
daa
jno
or
insl
les
lock
test
or
out
fwait
add
adc
mov
cld
je
imul
mov
das
std
mov
in
xor
sub
popf
push
xchg
dec
hlt
mov
icebp
gs
mov
add
andb
idiv
push
pushf
fsubs
dec
jae
ds
scas
lods
adc
imul
xchg
imul
loopne
dec
inc
inc
mov
mov
pop
inc
insl
xchg
aas
add
mov
cmp
loopne
lds
shrl
scas
and
add
push
add
mov
int
mov
adcb
incb
add
ror
and
clc
fdivs
adc
hlt
inc
cli
xor
xchg
add
rorb
add
cmp
fidivs
in
sbb
ror
shll
mov
out
sub
mov
jae
cwtl
jge
mov
inc
or
inc
push
int
xchg
jbe
ss
leave
imul
cmp
add
dec
rclb
ss
mov
push
insl
push
loopne
fxam
jb
bound
jne
xchg
mov
and
lahf
xchg
jns
adc
pop
lods
cmpsl
cltd
mov
adc
mov
repnz
sbb
shlb
add
roll
andl
jb
mov
jl
cmp
add
in
pop
fs
xorb
popf
xor
add
mov
mov
sbb
mov
cmc
cmp
movsl
pop
pop
adc
ljmp
sar
int
dec
fdivr
sbb
mov
pop
dec
adc
sub
fs
pop
push
sub
xchg
sbb
cmc
in
ror
test
sbb
mov
or
adc
dec
mov
mov
sbb
cmp
mov
and
dec
pop
jmp
sub
data16
pop
mov
mov
in
push
fwait
mov
fisttps
insb
sub
pop
fadds
jmp
test
mov
stc
aad
aad
shrl
mov
pop
sbb
sub
xlat
dec
into
jb
sub
shr
push
mov
mov
adc
unpcklps
scas
dec
pop
jae
aad
xor
push
in
adc
push
ds
cmp
sete
pusha
xchg
out
adc
adcb
testl
js
hlt
mov
std
jl
xor
jg
sbb
add
add
sti
loop
xchg
insl
pop
loopne
push
adc
dec
stos
adc
sbb
loop
dec
std
mov
mov
sbb
lret
inc
popf
dec
dec
jmp
loop
cmp
pop
lods
repz
arpl
jnp
or
inc
nop
cmp
mov
stc
lret
add
jge
mov
in
int3
sahf
gs
xchg
xchg
jns
outsl
cmpl
sbb
repz
push
es
and
cmpsb
xchg
pop
roll
sbb
imul
cmp
mov
aaa
hlt
out
shld
insb
mov
data16
lahf
dec
aam
xchg
push
add
xor
insb
pop
xchg
mov
sbb
dec
mov
mov
arpl
loope
shl
mov
push
fwait
jle
adc
cmp
xorb
xchg
in
xchg
pop
dec
dec
lock
stos
pop
ljmp
xlat
fisttpll
test
jmp
jno
push
fwait
cmp
cmp
jecxz
mov
mov
xchg
pop
std
jne
jge
aad
lock
cmp
mov
arpl
push
jmp
jp
mov
ficoms
fists
aas
aam
sub
repz
mov
xchg
cmp
out
xor
ds
pop
push
cwtl
xor
imul
mov
add
je
dec
imul
into
rcr
push
mov
out
xor
dec
ds
imul
mov
sti
in
call
mov
outsl
lods
push
popf
xchg
dec
inc
and
or
mov
arpl
ret
push
cmp
jno
out
mov
out
in
imul
sahf
fmuls
decl
sti
pop
cmp
scas
and
clc
add
add
imul
fdivrl
jle
or
incb
add
jnp
je
pop
jae
test
sub
aam
cmp
call
ret
imul
loope
cs
insb
in
mov
icebp
pop
sbb
lods
mov
mov
mov
test
gs
subb
ret
and
emms
js
sub
mov
cmpsl
jle
mov
or
pop
test
aad
aaa
in
stc
into
ljmp
mov
jl
pop
mov
xchg
out
sub
jmp
enter
repnz
push
dec
sbb
ret
jb
or
fldt
mov
push
pop
ja
arpl
fcompl
repnz
jg
cwtl
sbb
in
jl
sar
push
or
loopne
jno
popf
ljmp
scas
fsts
dec
cmp
repnz
mov
pop
lret
daa
mov
cwtl
test
cmp
xchg
push
add
adc
in
jbe
and
xor
lock
add
icebp
dec
push
mov
lret
test
cmc
inc
cmp
fwait
pop
sahf
les
push
mov
or
andl
mov
jle
ror
rcrl
mov
ficompl
mov
jg
lret
call
mov
sahf
fwait
pop
fwait
mov
scas
out
push
xor
pop
inc
aaa
xchg
filds
cmp
testb
dec
and
jmp
loope
push
mov
lcall
and
lods
hlt
dec
iret
adc
test
pop
sub
xchg
pop
fdivrl
aaa
int
sbb
xlat
ficoms
in
shlb
test
bound
inc
scas
push
adc
or
sub
adc
fsts
imul
mov
inc
daa
jnp
in
or
push
xchg
push
pop
cmpsb
lds
push
aad
stc
scas
mov
fmull
pop
in
orb
aas
ss
ret
lcall
ljmp
cmpsl
sbb
jg
pop
fstps
cld
mov
add
add
add
outsb
int
jb
and
xlat
sbb
jecxz
adc
add
mov
jb
xchg
mov
or
imul
xchg
je
xchg
ret
std
loop
or
add
pop
mov
lods
and
mov
ljmp
pcmpgtd
mov
mov
into
dec
test
adc
or
inc
dec
jno
push
jb
into
daa
mov
arpl
mov
fistpll
sbb
daa
lahf
nop
xor
lcall
insl
leave
rorl
push
sub
xor
or
mov
adc
sbb
xchg
jle
nop
aaa
in
frstor
mov
push
mov
fs
pop
fstpl
xor
roll
pop
mov
jge
ja
lahf
leave
xchg
jns
adc
jmp
dec
movsl
das
and
test
mov
into
add
cmp
jl
jmp
mov
addr16
loop
ljmp
push
fiaddl
aas
adc
imul
push
jbe
xchg
out
test
das
stos
cmp
shrl
repz
fmulp
mov
inc
jl
sbb
js
mov
movsb
pop
xchg
jmp
jl
push
or
inc
and
insb
sub
cmpsl
lea
lret
icebp
cmpb
mov
sub
mov
or
pop
in
movsb
pop
fs
rorb
pop
cli
lret
jbe
xchg
inc
or
scas
pop
xor
rclb
add
adc
loopne
imul
jp
sub
xor
jge
mov
xchg
and
lods
es
push
cmp
mov
test
push
mov
lret
inc
dec
orl
cld
mov
push
rcl
mov
paddb
xor
sub
fisttpll
imul
sahf
add
clc
pop
cli
mov
inc
sub
push
in
loop
add
cmc
fistpll
movsb
fidivl
js
pop
dec
cli
nop
add
incb
add
mov
jg
or
mov
sbb
ljmp
dec
inc
punpcklwd
cld
nop
add
ja
jle
fiadds
or
int
es
xor
mov
cmp
dec
sub
sub
push
nop
mov
sbb
xchg
cmp
mov
or
insl
and
insl
jle
pop
out
jne
mov
xor
je
lcall
or
xor
or
pop
std
cmp
dec
mov
les
int3
movsl
aad
xchg
js
movsb
mov
arpl
dec
loope
adc
dec
and
repz
add
fcompl
mov
jge
push
std
pop
imul
xchg
jmp
and
xchg
sbb
enter
fwait
push
jmp
clc
repnz
sub
outsl
mov
adc
lret
mov
mov
dec
xor
enter
fisubrl
test
pop
lock
movsl
daa
aas
shrl
cwtl
loope
lods
adc
int
jae
loop
pop
dec
outsb
ror
sbb
cld
cli
xorb
sarl
pop
jge
mov
and
lds
cmc
inc
jp
mov
nop
sub
jno
std
pop
fs
push
divl
inc
sub
movsl
mov
pop
dec
pop
lock
out
mov
pop
sarl
and
rorb
push
aas
ds
loope
imul
cmc
int3
outsl
roll
mov
cmp
dec
rol
push
sub
cs
sub
ret
test
lock
test
daa
push
in
dec
das
popa
out
cmp
jle
int
xor
sub
sub
repnz
shrl
cltd
pop
test
fisttps
add
and
sbb
cmp
cmpsl
xor
mov
cmp
ds
push
add
and
movsb
lea
sub
notb
out
mov
incb
add
push
js
jmp
sbb
rcr
pop
jne
aas
and
mov
jmp
mov
cltd
mov
mov
mov
aaa
outsl
in
mov
push
adcl
mov
fidivrl
mov
inc
and
jo
ss
movl
pop
movsb
loopne
lds
sbb
mov
push
ss
test
add
and
adc
clc
mov
mov
mov
fstl
xor
std
mov
inc
pushf
pop
xor
lods
xchg
push
xchg
push
push
jl
sub
xchg
inc
lret
mov
fdivr
xchg
jnp
movsb
cmp
ror
cmpsl
mov
les
pop
scas
in
repnz
outsl
adc
fs
mov
push
dec
xchg
fdivrl
sbb
fcompl
xor
sub
out
or
xchg
shll
cmpsl
push
int3
inc
mov
push
pusha
push
jecxz
iret
xor
push
push
and
adc
mov
mov
push
dec
nop
out
fdivl
xchg
xchg
pop
jmp
int3
jo
add
mov
ja
push
push
inc
ret
mov
xchg
mov
jno
lds
cmc
jae
adc
pop
loopne
lret
dec
pop
or
sbb
dec
adc
sub
sub
negb
int3
mov
cmp
hlt
icebp
shlb
mov
mov
nop
cmp
ds
or
std
fnstsw
pop
idivb
xchg
int
add
or
lods
mov
push
xor
cmp
outsl
xchg
xchg
xor
and
dec
pop
mov
mov
and
mov
dec
dec
xchg
scas
daa
sub
mov
pop
sbb
dec
clc
push
dec
fcmove
mull
and
push
stos
ret
cltd
nop
jle
push
cs
adc
and
pop
mov
cmp
in
loope
push
cmpsb
rcrb
add
test
mov
popa
notb
add
fcmovnbe
inc
mov
add
cmp
cmpsl
mov
es
xor
lahf
mov
loop
bound
int3
fistpl
lds
pop
gs
in
and
push
dec
pop
mov
insb
lods
sar
icebp
jb
cmp
cmp
std
sahf
add
scas
xchg
ss
pop
jecxz
push
adc
sbb
leave
push
push
push
cwtl
dec
push
and
sbb
sbb
jbe
cwtl
movsl
lods
cmp
pop
jb
in
cmp
mov
push
jl
add
imul
add
inc
mov
sti
daa
xchg
sub
sub
nop
and
sub
sarb
mov
xor
adc
mov
ja
xchg
inc
lods
popf
pop
addr16
add
and
dec
cld
add
push
jmp
add
inc
clc
sbb
jmp
pop
insb
push
sbbb
pop
cld
xor
in
bound
es
div
dec
mov
loop
jnp
movsb
loopne
pusha
xlat
adc
mov
push
mov
xor
jle
inc
rcll
flds
xor
or
sub
arpl
push
test
mov
and
mov
dec
popa
inc
outsl
filds
mov
jo
cmc
insl
cld
add
sub
jne
xchg
or
pop
adc
sbb
jae
sahf
adc
sti
dec
xchg
daa
repz
and
insb
sbb
mov
push
rcr
adc
sbb
sbb
bound
pop
insb
daa
clc
dec
xchg
push
add
cmp
popa
sub
call
ljmp
mov
lcall
loope
inc
ret
std
lock
or
daa
mov
mov
cmp
push
ret
xor
sub
inc
mov
in
movsb
adc
add
add
add
test
xchg
std
jg
mov
ret
xchg
add
incb
add
iret
adc
fdivp
jl
jecxz
sub
lods
icebp
and
cmp
and
bswap
out
in
fxch
add
xchg
shl
jbe
sbb
push
jno
je
bound
or
xlat
inc
roll
mov
data16
pop
jl
sub
mov
testb
mov
xchg
sub
fstps
cmp
imul
adc
pushw
stos
xor
push
outsl
popf
cmpsb
loop
cmp
test
mov
sbb
mov
roll
movsb
push
out
cmp
rcll
repz
lock
aam
rclb
sahf
fdivrl
test
hlt
orb
jmp
test
sbb
scas
scas
out
int3
add
lock
push
sub
sub
mov
jg
cmp
mov
xchg
mov
and
insl
pop
fsts
daa
in
mov
sbb
movnti
or
out
or
movsb
pop
orb
into
jne
bound
adc
popl
sub
sbb
ret
and
jp
rep
jnp
and
push
xchg
nop
adc
aas
in
push
stos
divl
or
imul
pop
movsl
mov
cld
or
lock
mov
aas
jb
cmp
stc
and
xchg
fmulp
pop
adc
dec
pusha
cmp
test
out
dec
mov
andb
dec
cwtl
and
xor
adc
pop
lea
inc
cmp
adc
inc
cmp
push
adc
mov
loope
pop
add
dec
pop
mov
dec
xor
and
popl
pop
push
sub
inc
aam
out
nop
movsb
mov
clc
mov
mov
mov
add
mov
idiv
iret
rorl
jns
inc
or
cwtl
add
incb
add
icebp
cmpsl
pop
jl
fcompl
dec
test
or
ret
xchg
sub
in
cmc
inc
arpl
mov
in
dec
push
mov
sbb
pop
imul
leave
andl
inc
int3
insb
jno
ficoms
int
and
adc
xchg
pop
ds
in
cmp
mov
jle
fadd
inc
cld
xor
inc
mov
jb
mov
repnz
inc
push
fcoml
dec
mov
in
inc
jb
mov
in
cmp
dec
sbb
pop
lret
lock
bound
popa
jo
jg
ficoml
pop
notl
mov
push
subl
adc
loope
xor
fdivs
and
popf
js
pusha
or
mov
lahf
and
inc
inc
aam
sbb
jecxz
sub
sti
repz
bound
mov
xchg
imul
sub
dec
and
inc
mov
pop
in
ret
push
mov
pop
dec
mov
fildll
cmp
or
push
cmpsb
jge
addl
push
push
xchg
push
pop
pop
xchg
addl
out
je
xchg
lahf
lea
test
jmp
sub
fistpll
xchg
cmp
data16
das
popf
enter
repnz
pop
hlt
bound
mov
xorb
push
in
xor
mov
dec
lret
mov
cmp
add
add
jne
loopne
repnz
lret
or
dec
add
aas
jecxz
jecxz
in
test
xchg
push
xor
mov
xor
sar
imul
iret
mov
jnp
sub
in
outsl
je
jnp
loope
insl
sarl
and
es
rolb
movsl
call
add
ret
mov
ja
or
lcall
pushf
mov
icebp
js
test
jne
pop
in
pusha
pop
ss
adc
movsb
adc
pop
enter
imul
mov
xchg
stos
sbb
in
sbb
inc
in
jno
xor
or
mov
leave
mov
xor
in
push
inc
pop
push
and
add
and
pop
repz
cmp
test
add
fsubrp
clc
pop
popf
pop
xchg
or
xchg
jb
or
cltd
inc
mov
xchg
jb
pop
test
aas
sti
and
and
mov
cmc
out
and
sub
push
loopne
xchg
divl
push
xchg
push
mov
push
pop
movsb
add
sbb
inc
push
cli
push
lret
es
fiadds
inc
jmp
adc
cltd
dec
imul
push
or
js
insl
push
mov
inc
es
mov
test
xchg
add
mov
pop
sbb
mov
lcall
add
pop
sub
scas
push
sub
ret
inc
jle
push
mov
xor
arpl
pushf
adc
xchg
imul
das
adc
ss
clc
adcl
mov
sub
push
xor
loopne
out
sbb
jne
dec
inc
scas
push
push
jmp
mov
scas
xchg
mov
or
push
sbb
and
lods
out
pop
push
jno
pop
popf
add
mov
mov
pop
sbb
enter
add
xchg
push
and
lods
sarl
cld
arpl
pop
cmc
ret
das
jae
mov
xor
xor
jecxz
das
xchg
mov
cli
add
cmp
enter
jns
mov
imul
fbld
es
pop
lret
xor
jnp
dec
sub
lret
mov
add
push
jle
xlat
lret
push
testl
pushf
add
incb
add
push
mov
insl
daa
jl
xor
dec
adc
in
jp
sbb
or
inc
xor
lahf
pushf
aas
xor
pop
loopne
mov
add
es
ret
push
call
mov
inc
jb
mov
inc
mov
push
icebp
scas
add
push
insl
jl
pop
cmc
test
add
jecxz
in
daa
jp
sbb
into
incl
cld
test
xor
cmp
dec
lods
lea
jae
rcrl
mov
loop
adc
pop
stc
xchg
aas
dec
sarb
bound
or
outsb
sub
mov
rolb
loopne
mov
jno
outsl
aam
stos
xchg
cld
inc
sub
aam
lds
sub
dec
popa
mov
setae
ljmp
inc
sub
pop
pop
dec
lcall
push
das
sbb
sarl
incb
in
ret
icebp
xchg
push
xor
cmp
test
imul
int3
add
and
push
fistps
ret
insb
std
dec
mov
pop
les
scas
push
lcall
jle
push
std
adc
adc
std
insb
fldl
xor
pop
xchg
out
add
in
out
pop
cmpl
call
ret
mov
adc
aas
xor
pop
lea
inc
imul
pop
pop
xchg
mov
test
cmp
add
xchg
aam
pop
or
pop
add
out
mull
jno
adc
and
or
stos
pop
sbb
pop
aaa
lods
les
push
ss
add
adc
mov
or
sar
and
fadds
inc
xchg
loopne
pop
ret
loopne
repz
pshufw
jno
mov
mov
add
push
or
pop
out
repz
fucomp
push
cmp
in
sahf
add
incb
add
pop
repz
jns
enter
push
lcall
xchg
sbb
jbe
jp
shlb
mov
hlt
gs
pop
push
push
push
pop
test
ljmp
adc
imul
sub
incl
dec
and
sub
inc
shll
push
cmp
std
fidivs
imul
fistpll
mov
cmpsb
inc
pusha
xorb
mov
pop
xor
fisttps
popf
xchg
sub
lea
out
inc
adcb
jecxz
pop
mov
add
imul
adc
dec
mov
xor
jbe
push
inc
push
jp
adc
xchg
inc
mov
push
mov
lahf
sub
fcoml
mov
mov
ljmp
mov
sbb
sahf
push
inc
cmp
push
repz
loop
mov
clc
lret
clc
outsl
inc
ja
sbb
mov
add
movsl
jns
test
rorl
popf
imul
push
testl
add
cmp
shlb
xchg
and
push
jnp
mov
sbb
xchg
mov
pop
add
sti
and
mov
mov
cli
test
jecxz
or
aam
inc
jno
xor
jno
fldt
sub
in
movsb
fcoms
push
imul
imul
sub
fists
jecxz
lahf
xor
dec
and
mov
fistpll
xor
cltd
and
mov
jecxz
les
pop
fmull
movsb
mov
movsl
jae
jecxz
cmc
shrb
adc
dec
fucomip
cli
push
xor
cmp
repz
push
xor
mov
and
or
inc
popa
push
pop
sbb
add
and
add
xchg
insl
mov
out
nop
sbb
dec
shr
mov
add
inc
push
andb
into
or
adc
mov
sub
lods
xchg
test
repz
shll
je
or
insb
arpl
je
cmpsl
out
and
or
sahf
shll
dec
call
push
sbb
clc
cli
dec
xor
mov
dec
shlb
not
jne
arpl
jmp
cmp
sbb
test
nop
out
cld
jno
nop
xor
mov
add
ret
xchg
incl
addr16
dec
scas
jle
mull
cmp
xchg
in
enter
xchg
jae
adc
stos
sub
cmc
add
aas
mov
lods
das
cltd
sub
aaa
pusha
stc
jp
roll
push
jmp
rclb
cmp
pop
add
arpl
and
stos
test
mov
xor
daa
push
popf
ficoms
aad
mov
jl
loope
cmc
xchg
sbb
mov
mov
pop
int3
fwait
loope
loope
rcll
sbb
rcrb
jge
call
sbb
into
mov
add
in
inc
or
gs
mov
shrl
add
jmp
out
mov
leave
add
bound
insb
or
xor
testb
jbe
mov
sub
int3
pop
adc
enter
add
xor
push
iret
fidivrl
mov
cmc
mov
je
test
sarb
int
fucomp
loopne
clc
push
sbb
je
pushf
ljmp
xchg
cmp
inc
pop
lret
stos
imul
push
dec
mov
lcall
jge
mov
into
adc
jno
xchg
cmp
pusha
pop
js
jle
xlat
shr
iret
clc
lods
arpl
icebp
xchg
cmp
pop
aam
adc
arpl
xor
stos
loopne
addr16
std
push
les
cmp
add
dec
out
ja
idiv
pop
out
cmp
outsl
push
call
add
add
mov
and
popa
xor
mov
and
js
out
iret
ret
in
add
xlat
subb
lods
dec
loop
and
data16
sbb
lods
sbb
addr16
flds
cmp
nop
mov
mov
fstps
loop
sbb
and
enter
fs
pop
pop
filds
push
repnz
inc
in
sarl
and
mov
jno
pop
pop
les
int
mov
push
test
dec
xor
or
jecxz
icebp
vpacksswb
or
pushf
in
rcr
xor
cs
add
psrlw
jae
mov
leave
pop
sbb
and
arpl
xchg
or
pop
ret
lret
jno
pop
xor
fldl
mov
shrb
mov
jns
test
mov
adc
std
fnclex
ljmp
and
pop
das
or
add
ss
mov
adc
aam
dec
test
jne
inc
imul
stc
mov
lods
lcall
and
xchg
and
or
ficompl
cmp
pop
repz
aas
sub
or
lea
xor
repz
popa
inc
lds
or
rcrb
ficomps
sbb
adc
dec
pushf
jp
incb
sub
rcrl
inc
mov
mov
jbe
xchg
push
je
stc
sbb
repz
adcl
idivb
das
push
xor
pop
mov
clc
dec
shrb
sub
and
cmpsb
scas
mov
cmp
lea
imul
fstp
insl
stos
push
popf
adc
lock
imul
mov
pop
jecxz
sti
mov
inc
dec
into
ret
movsb
add
incb
add
cmc
xor
or
test
xchg
mov
daa
pushf
and
insl
lods
stos
in
in
lock
idivl
daa
or
cmp
adc
in
mov
or
dec
add
filds
dec
mov
jo
insl
incl
dec
cmpsl
fdiv
inc
xor
dec
fs
fld
xor
mov
iret
sbb
call
dec
mov
mov
mov
ss
outsb
lods
inc
adc
imul
test
mov
test
bound
jecxz
inc
divb
arpl
dec
dec
loop
nop
xor
xlat
mov
imul
xor
dec
sub
mov
hlt
push
mov
pop
cs
fld
nop
push
insl
ljmp
shll
sti
iret
pushf
mov
xchg
mov
cmp
icebp
negl
pop
push
dec
inc
hlt
jne
mov
in
pop
xorl
ljmp
rcll
cltd
scas
xor
lods
xor
fmuls
shrb
outsl
cltd
outsb
sub
test
aas
add
in
test
jl
dec
fldcw
in
test
mov
ret
mov
out
movsl
and
rol
or
std
push
jbe
jl
fwait
ret
es
push
iret
sbb
or
fldl
test
ss
mov
mov
into
jne
pop
push
insb
fstps
pavgw
movsl
inc
adc
jge
scas
cmp
test
pop
push
cmp
push
add
jmp
sbb
test
xor
mov
lods
pop
mov
mov
fcmovu
sbb
fdivr
out
fdivrp
inc
pop
dec
cmp
stc
adc
and
loopne
mov
jae
mov
push
mov
add
add
add
add
sahf
xor
sub
cli
xchg
in
add
incb
add
notl
and
or
jmp
push
xchg
repz
sbb
and
iret
push
aas
stos
call
int
xchg
nop
sub
jae
push
dec
sub
sbb
xor
mov
or
mov
enter
and
cmp
adc
aam
mov
rcr
inc
ljmp
stos
xor
push
mov
loope
fistl
loopne
mov
pop
lds
in
addb
in
sbb
mov
daa
clc
les
pop
pop
loope
popa
pop
sub
or
jbe
test
pop
pop
negl
mov
sub
ret
inc
clc
add
jno
ss
sub
imul
outsb
fsubrl
mov
hlt
mov
les
add
ret
or
mov
push
mov
push
gs
fmul
jno
jnp
sahf
aas
lcall
jns
std
dec
sbb
xorb
es
add
and
cltd
flds
sbb
rolb
mov
jl
xor
push
sbb
loope
xorl
leave
andb
faddl
rorb
imul
in
xor
or
mov
xor
lahf
pop
ror
jne
sbb
pop
push
testb
cltd
inc
mov
push
sub
ret
mov
movsl
outsb
in
jno
xchg
xchg
jg
cmp
and
xchg
dec
jno
ds
cmp
out
add
in
mov
cwtl
scas
jae
in
cmc
and
movl
jbe
cld
in
js
add
mov
pushl
leave
pop
stos
sarl
jne
lds
lds
fs
or
add
add
add
stc
std
in
mov
mov
std
cmp
cld
lock
add
incb
add
push
fsubr
out
fwait
xchg
lret
test
andb
fs
or
mov
pop
and
or
xchg
push
xor
sub
imul
into
sub
push
loope
popw
pop
les
sbb
add
pusha
mov
or
push
jle
leave
or
sbb
mov
ljmp
aad
add
cli
jle
jb
mov
sbb
es
leave
leave
push
lds
dec
push
sub
movsl
jae
mov
ror
inc
push
inc
mov
lea
push
dec
mov
fildll
scas
ljmp
mov
lods
mov
bound
dec
call
jge
ljmp
mov
inc
mov
imul
nop
pushf
xchg
adc
out
push
bound
in
cs
nop
out
test
push
sbb
pushf
push
sub
nop
lods
xor
mov
stc
inc
cli
sub
push
sbb
push
adc
push
push
mov
lret
cmpsb
aas
lea
shll
xor
dec
xchg
xchg
or
dec
xorl
xor
inc
sbb
pusha
and
rcrb
insl
sti
insl
inc
add
sub
adc
daa
shr
push
test
mov
aam
jp
decb
movsb
jo
inc
sahf
xchg
cs
and
push
add
and
mov
push
or
jl
xor
sbb
stos
mov
adc
shll
test
mov
jmp
xchg
jge
sub
fstpl
fdivrs
scas
and
push
mov
cmp
sbb
or
lea
inc
xor
dec
xor
jns
out
inc
outsb
inc
sub
mov
mov
cwtl
push
xchg
aas
test
sarl
add
sub
mov
xchg
test
lds
pop
test
inc
enter
adc
sbb
frstpm(287
mov
add
add
add
add
rolb
testb
inc
aas
inc
inc
inc
loopne
add
incb
add
lret
jge
mov
mov
cmp
add
popf
mov
lds
rolb
hlt
fs
notb
mov
push
rcrl
sub
lock
inc
cmp
sti
mov
mov
loop
sub
bound
inc
sub
sti
inc
in
push
add
insl
inc
mov
push
in
iret
xchg
cltd
cmpsb
mov
lods
sub
sbb
lcall
and
push
popf
fisttpll
rcl
inc
shl
loopne
js
les
outsb
sub
stc
xchg
mov
leave
sahf
call
mov
lds
repz
mov
push
adc
inc
mov
loope
push
or
push
xchg
pop
or
mov
and
mov
push
push
pushf
sbb
scas
xchg
dec
mov
aas
insb
lea
aas
popa
pop
pop
inc
dec
in
mov
sub
add
nop
shlb
or
test
adc
sub
cmp
push
dec
xchg
popa
add
xor
sub
sub
cmc
aam
jne
test
imul
loope
mov
jle
loopne
jnp
hlt
push
xchg
pop
shrl
adc
enter
sbb
cmp
ss
ljmp
shrb
dec
push
or
adc
ret
stc
mov
or
aad
push
sub
lods
push
lret
jl
cli
push
mov
sub
popf
inc
stos
outsl
cmp
addr16
js,pt
lcall
or
inc
insl
xchg
sahf
dec
sar
xchg
pslld
fmulp
dec
icebp
xchg
negb
adc
dec
jbe
dec
iret
ds
xor
push
fistl
mov
mov
ljmp
cmpsl
cmp
insb
in
fcmovb
jbe
int
push
rcll
scas
sbb
add
add
add
inc
inc
popa
data16
gs
mov
leave
sbb
lods
add
incb
add
out
pop
in
jae
cmp
jecxz
add
cmp
cwtl
ja
lret
enter
xor
out
sub
fidivrs
pshufw
insb
xchg
pop
addr16
cmp
xcrypt-cbc
cmpsl
rol
xchg
sbb
sub
or
mov
xchg
push
pop
shlb
repz
adc
call
fcoml
mov
test
andl
jmp
pop
imul
lahf
xchg
mov
sahf
dec
scas
iret
outsl
xor
fucomp
sbb
loopne
ss
or
add
repnz
cmc
cmp
xor
ja
xlat
push
movsl
sub
scas
fwait
mov
cmp
loop
outsb
pop
xchg
jbe
iret
outsl
push
addr16
and
cwtl
xchg
insb
push
push
js
xchg
sarl
rcll
pop
stc
push
cwtl
xchg
push
xor
pop
movsbl
fistl
push
js
fwait
insl
cli
mov
shll
test
sub
mov
mov
hlt
pop
cmp
or
and
jns
sahf
sbb
outsb
xchg
popf
push
mov
xchg
fstl
icebp
xchg
repz
push
xor
inc
mov
aaa
mov
cmp
inc
adc
xor
mov
jbe
pop
out
insb
in
pushf
movsb
mov
xor
xchg
mov
dec
loope
inc
lea
scas
jge
es
pop
add
push
add
mov
or
jg
popa
cli
ret
cmp
mov
inc
inc
jecxz
pop
cltd
pop
jne
ljmp
jp
test
mul
jae
xor
pop
pop
je
cld
and
adc
lods
int
pop
loop
dec
inc
mov
mov
cmp
stos
scas
jo
push
adc
pop
pushw
or
adc
sahf
push
cmc
fucom
cltd
sarl
inc
jo
scas
push
mov
clc
xrelease
push
inc
pop
scas
add
mov
rcrl
repz
cli
cmp
adc
add
lcall
add
add
ret
xorb
push
cld
lock
adcb
push
dec
add
stc
ss
scas
mov
stc
or
jbe
xchg
movb
lea
xchg
push
inc
ja
mov
std
inc
sub
mov
jp
mov
ja
push
mov
mov
fistps
dec
inc
push
pop
cmp
pop
xchg
in
mov
push
inc
into
imul
and
or
mov
xchg
sbb
repz
cld
sub
es
out
in
pop
mov
in
jns
loop
push
add
jge
int
and
jmp
xchg
xor
test
xchg
sbb
pop
jp
xor
mov
jge
mov
pop
outsl
jge
hlt
jmp
into
pop
xchg
in
aad
sbb
shlb
stc
and
mov
rorb
shll
pop
mov
bound
pop
popa
pop
add
mov
sub
inc
lahf
enter
sub
arpl
add
dec
mov
ss
lahf
or
xchg
stc
or
mov
sbb
pop
sbb
pop
movsb
add
movsb
scas
sub
insb
jmp
xor
mov
ja
push
clc
movsb
mov
mov
call
loopne
push
cmp
pand
xchg
dec
inc
push
test
int3
pop
xor
jl
dec
jnp
pop
mov
adc
ret
sub
dec
add
xchg
jp
and
sub
ja
lods
stos
cmp
jp
adc
jbe
inc
rorb
js
sbbb
jge
pop
dec
out
push
movsl
jae
mov
mov
movsb
sub
js
pop
sbb
xchg
and
cmp
add
cmp
icebp
lods
pop
mov
pop
das
jp
das
lods
bound
icebp
fimull
mov
outsb
shll
add
shlb
xchg
lcall
cmp
adc
add
incb
add
bound
movsb
movsb
in
insl
push
adc
mov
cltd
cmp
lock
and
icebp
pop
outsb
jecxz
pop
push
scas
jge
adc
mov
add
jbe
arpl
inc
push
adc
das
mov
mov
andl
inc
push
lret
fldenv
xchg
loope
fs
int
add
fnstsw
or
cmc
dec
mov
cmpsb
outsl
inc
mov
and
test
dec
push
fiadds
pusha
xor
inc
or
xor
cmp
les
rcl
lods
xor
or
aad
outsl
punpckhdq
sbb
mov
out
cltd
es
sti
bound
push
nop
in
dec
jne
stos
fstps
imull
fidivl
push
jge
rcll
pop
jbe
jne
jecxz
fsubrs
arpl
mov
mov
mov
lock
movd
in
pushf
lds
ret
out
mov
sbb
sbb
add
in
dec
data16
dec
ret
pop
jl
dec
pop
add
loopne
fmull
mov
mov
mov
pop
xchg
lea
mov
shll
push
cmp
mov
or
jb
xorb
imul
and
inc
lds
sub
pop
push
inc
mov
gs
sbb
movsl
mov
xor
das
out
sti
shll
outsl
push
sbb
mov
in
scas
xor
jl
pop
sub
popa
jmp
mov
ret
adc
pop
adc
sti
iret
ret
sub
add
clc
mov
lcall
adc
std
lahf
sbb
mov
lods
mov
or
flds
jmp
push
fcoms
jo
cmpsb
jae
daa
ret
adc
out
mov
rolb
add
cmp
mov
in
outsb
fs
pop
inc
subb
mov
add
add
add
jge
rcrb
mov
clc
add
pusha
add
or
shll
adc
mov
repnz
sub
jnp
pop
aad
inc
lea
xor
jge
inc
jp
mov
scas
loopne
push
into
cmpsl
push
aaa
lret
cmp
and
mov
cmp
imul
xor
and
divb
dec
jns
sub
out
fcomi
mov
ror
push
jbe
jnp
cmp
cltd
leave
mov
fdivrl
mov
dec
or
stos
jo
rorb
push
xor
add
sbb
outsl
out
ja
inc
fldcw
sbbb
inc
leave
cld
or
cli
mov
shl
stc
int
data16
mov
and
mov
xchg
xor
mov
adc
dec
aam
rclb
je
push
cwtl
inc
dec
dec
int3
cs
into
mov
shll
dec
inc
push
movsb
pushf
or
fistpl
cmpsl
add
call
rcl
sub
fwait
les
push
int
push
bnd
or
aad
int3
xor
lret
and
decl
mov
test
aas
or
adc
cmp
stc
add
inc
iret
aad
lea
jb
cs
sar
jae
movsl
mov
pop
outsb
jno
cld
mov
fbstp
inc
push
outsb
popl
xor
lock
pop
pop
xchg
test
xchg
dec
jnp
incb
lret
pusha
bound
cmp
fs
stos
mov
lahf
rcll
push
mov
adc
dec
lock
cmp
adcb
sub
dec
inc
jg
pop
int3
std
test
sbb
xchg
cs
inc
mov
push
xchg
xchg
mov
dec
xchg
in
fiaddl
test
sbb
fdivrs
add
sub
repz
mov
fwait
add
inc
mov
jb
mov
mov
mov
add
add
add
cli
jns
aaa
lahf
sahf
in
es
daa
mov
sub
dec
inc
cmpb
inc
add
xchg
sar
aad
cltd
pop
mov
xchg
arpl
jno
and
jno
and
xchg
push
hlt
daa
jmp
stc
ret
push
pop
jno
xchg
bound
cmp
mov
rcrb
push
pop
fmuls
and
jecxz
decl
les
pusha
scas
pop
pop
jns
and
jmp
in
mov
in
mov
dec
mov
fisubrl
das
jo
xor
xlat
test
xchg
test
and
jae
cltd
fmul
movsl
jns
mov
sti
sub
add
mov
push
xor
sbb
sarb
adc
cld
cmc
int3
pushf
into
xor
icebp
pop
and
inc
addr16
pop
addl
movb
fwait
popf
icebp
fldenv
pushf
shrb
xor
aas
clc
icebp
and
cwtl
cmp
xlat
jno
mov
fwait
pop
push
std
cmpl
shlb
icebp
adc
std
push
or
sub
pushf
mov
mov
aaa
inc
or
in
idivl
mov
jg
cs
adc
inc
mov
cmp
lahf
lcall
movsb
add
in
sbb
enter
xchg
fimull
jo
adcl
inc
imul
pop
or
xchg
pop
pusha
mov
jecxz
dec
and
or
fnstenv
add
shll
fs
push
sbb
xchg
aas
pop
sbb
outsb
addr16
mov
fsubs
enter
and
stos
and
scas
mov
scas
in
add
and
lods
inc
pop
clc
ret
aas
mov
cld
and
clc
mov
cmp
mov
test
add
incb
add
fmul
rcrl
flds
sub
push
mov
add
and
fiadds
pushf
dec
pop
inc
pop
sub
out
push
lds
mov
pop
add
inc
add
pop
aaa
xchg
mov
movsb
push
and
adc
or
les
aaa
jle
das
nop
mov
jle
add
pop
sti
mov
lret
push
icebp
in
jne
sbb
adc
sub
iret
fsubl
mov
sub
loop
pop
xchg
aaa
xlat
int
xor
and
adc
imul
stc
and
pop
pop
mov
rcrb
aas
lcall
inc
mov
sub
add
sub
addb
fbstp
mov
xchg
fbld
lock
adc
aaa
pop
std
xor
stos
or
pop
cmp
fadd
clc
add
je
insl
daa
inc
cltd
rorl
push
pop
addr16
pop
loope
mov
mov
mov
xchg
mov
das
test
lock
pop
aas
xchg
flds
mov
in
rolb
ret
ja,pt
or
inc
mov
pop
testb
movsb
ds
lcall
je
cmp
mov
pop
in
inc
leave
es
in
pop
sysexit
mov
cs
mov
jp
sbb
cmpsb
enter
je
push
and
fisttpll
pop
int3
push
mov
bound
mov
and
das
push
jbe
rorb
mov
arpl
push
push
fisttps
xor
orb
insb
addb
xor
je
cmp
and
popf
insl
mov
sub
rcl
out
pop
or
int
ret
shll
inc
jg
dec
shlb
add
cmp
out
idivl
test
cli
pop
sarb
add
movsb
outsb
int
pop
push
sarl
sub
cmp
or
sub
push
js
rclb
xor
or
adc
jns
call
push
xchg
outsl
pop
sub
enter
adc
adc
ret
pop
mov
xchg
arpl
xchg
lock
mov
mov
cltd
jo
push
cmp
out
je
sbb
daa
adc
jae
push
xlat
cmpsb
sarl
add
hlt
mov
dec
mov
lret
cmpsl
pop
xor
fwait
movsb
cmp
sbbb
aam
sbb
sub
or
add
leave
aaa
scas
ret
out
xchg
fstpt
movsb
in
andb
mov
imull
in
sbb
add
dec
jbe
push
or
mov
mov
cmp
fwait
lods
jo
jl
and
lahf
push
mov
add
xchg
mov
xor
adc
das
xor
les
pop
enter
aam
xor
test
sti
dec
push
pushf
sub
fs
pop
push
js
push
mov
xchg
push
pusha
and
pop
push
out
or
sub
sub
mov
leave
insl
pushf
mov
xchg
mov
bound
push
ds
fidivs
lahf
sub
push
and
xor
ror
and
or
repnz
dec
jae
dec
icebp
sub
lret
xor
inc
arpl
mov
lret
test
ficomps
push
lods
sar
cmp
hlt
leave
test
mov
mov
mov
mov
cli
insb
or
adc
das
push
lcall
ljmp
jp
ds
fimuls
lock
xor
xlat
and
dec
xchg
jg
add
gs
fcompp
out
fs
popf
outsb
mov
mov
add
push
int
popf
sub
repz
in
xchg
mov
dec
sbb
fstps
inc
push
and
lcall
pop
jne,pt
iret
aam
ja
out
xchg
popf
ljmp
fnstsw
lds
mov
mov
push
xchg
and
int3
sub
or
scas
and
dec
sbb
pusha
fs
pushf
fidivl
xchg
clc
hlt
sarl
xor
cmovp
and
andb
cmpsl
and
insb
sbb
lea
jecxz
mov
les
jo
iret
or
mov
dec
imulb
dec
ret
jecxz
clc
mov
pop
loope
mov
leave
rorb
mov
adc
sti
aam
inc
xchg
add
iret
dec
xor
push
jmp
xchg
mov
dec
mov
aad
leave
cmpsb
popf
shlb
fwait
pop
dec
jp
cwtl
mov
xchg
adc
adc
mov
xchg
jl
cli
lds
rcrl
pop
mov
dec
add
movsb
xchg
test
push
push
add
pop
cmp
push
fs
and
in
movd
test
aaa
push
jl
nop
mov
sbb
test
or
mov
mov
inc
mov
dec
inc
push
aad
pop
ja
imul
cmp
cmp
loop
stos
or
es
rclb
std
mov
not
adc
dec
stos
cmp
popf
andl
lea
sbb
jmp
aam
ljmp
mov
daa
addr16
into
mov
push
popa
sahf
add
aaa
lcall
pop
adc
iret
jl
jl
fnsetpm(287
gs
sarl
ret
push
not
and
test
mov
jecxz
sbb
xor
add
add
add
adc
arpl
sti
adc
jl
dec
dec
pop
imul
mov
add
adc
mov
fdivs
test
subb
cmp
or
into
je
mov
xor
push
xor
or
test
xchg
out
ljmp
addr16
sbb
lcall
jne
push
mov
addr16
fwait
xchg
int
repnz
mov
sub
mov
clc
cmpsl
or
arpl
mov
mov
movsb
fwait
push
mov
int
movsb
gs
cmpsl
fsubp
out
in
sub
inc
mov
popf
loopne
add
xor
sarl
jns
addr16
insl
sbb
pushl
repz
icebp
pop
jno
push
cmp
loope
xchg
or
pushf
mov
mov
cwtl
add
push
and
jmp
lret
insb
adc
inc
pop
out
push
cmpsb
aam
push
xchg
daa
sbb
inc
ret
mov
cmp
sbb
add
mov
loope
incb
popf
pop
dec
dec
jo
in
repz
fs
xor
xor
xor
mov
jo
push
mov
mov
add
xchg
inc
sub
sti
lods
adc
aam
cmp
insb
xor
addr16
call
in
inc
aam
adc
lret
cmp
mov
data16
and
out
push
out
js
sbb
sub
out
testb
rorl
sub
xchg
shlb
push
push
mov
pop
lock
adc
jge
jp
inc
cmpsb
imul
pop
mov
cmp
cmp
mov
js
jns
es
lret
and
inc
sub
cmp
out
inc
inc
jmp
outsl
mov
mov
loop
cmpsl
jmp
add
and
xor
sub
addr16
mov
add
mov
mov
or
mov
arpl
rorl
fcmovbe
and
and
add
iret
xor
in
xor
mov
or
dec
movsb
mov
push
shll
cmp
and
xor
add
les
out
add
xchg
dec
outsb
ja
xchg
pop
mov
inc
xor
out
mov
sbb
aad
pop
mov
aaa
pop
sub
addb
push
xchg
popf
test
ja
push
lret
inc
jb
pop
mov
or
or
popa
xor
jmp
dec
loopne
inc
xchg
fstps
pop
loop
mov
leave
xlat
not
fisubl
vpmacsww
gs
sbb
xchg
dec
ss
jbe
je
pusha
inc
das
xchg
mov
jno
ret
aad
gs
jge
ljmp
add
pop
xor
mov
xchg
adc
jns
mov
cmp
push
mov
push
outsb
adc
fldcw
push
cwtl
sub
cmp
ljmp
sarl
cmpsl
xor
push
enter
push
sahf
sub
sahf
addr16
dec
dec
insl
pop
subl
test
fisubl
mov
out
mov
rcrl
push
xor
push
rclb
movsl
sbb
push
xor
mov
pop
mov
fildll
addl
fs
repz
and
mov
lcall
mov
sahf
ss
je
enter
andb
subl
sub
cwtl
mov
adc
mov
or
sbb
imulb
inc
fwait
dec
scas
sub
inc
push
pusha
mov
enter
insb
cmp
stos
enter
notl
xchg
pop
mov
jg
data16
sbb
push
pushf
cmp
rolb
incb
add
outsl
test
shl
fists
sbb
out
adc
jne
cli
and
cmpsb
inc
dec
out
inc
cmc
mov
push
mov
movsl
mov
out
push
paddq
jno
aad
pop
adc
shll
stc
adcl
popa
sbb
in
lret
dec
mov
add
enter
pusha
xchg
jo
xchg
lods
jbe
jecxz
and
push
xchg
rclb
adc
loope
jle
push
scas
fisubl
fcmovnu
pop
jle
add
ret
sub
mov
push
jle
cmpsl
cmpsb
mov
js
dec
xchg
push
imul
and
faddl
and
jb
ja
push
out
mov
and
mov
jmp
out
pushf
aam
jg
sbb
fs
pop
dec
xlat
pushf
dec
cmp
lret
add
lods
testb
and
jne
test
mov
nop
dec
pop
sbb
mov
ja
mov
cli
fisubrl
in
or
movsl
outsl
rorb
mov
sbb
mov
mulps
push
sbb
popa
xchg
or
aad
lock
in
mov
sbb
ja
rolb
sbb
in
out
int3
xor
imul
push
movsl
and
jp
xchg
and
push
fs
mov
out
jns
pop
scas
pop
inc
or
pop
sub
mov
data16
test
in
ucomiss
cld
pop
fwait
out
jge
sub
push
cmp
imul
ret
into
sbb
jb
call
icebp
stos
ret
sbb
pop
test
mov
fxch
rolb
js
imul
add
xor
add
in
jb
adcb
cmp
int3
pop
scas
out
jmp
push
aam
add
inc
push
pusha
jbe
out
test
stos
sbb
add
incb
add
popa
sti
xor
pop
test
or
fbstp
and
in
sub
lret
mov
int3
les
xchg
mov
dec
div
mov
dec
stos
mov
adc
xchg
pop
sbb
lea
dec
xchg
jno
jmp
pop
sub
push
and
add
mov
push
xor
or
adc
hlt
push
push
enter
loop
add
cmpsl
adcb
stos
nop
mov
jb
fnsave
pop
cltd
push
cmp
xor
lods
inc
dec
je
fwait
insl
decb
add
lcall
dec
lea
and
xor
jnp
test
mov
gs
dec
mov
in
inc
pop
mov
push
fbstp
stos
sbb
scas
das
adc
mov
sub
ja
sahf
sub
ret
call
je
leave
jnp
dec
xchg
data16
scas
sub
rcrb
adc
and
movsb
cmp
xchg
or
inc
and
loope
adc
das
add
call
mov
in
mov
lods
inc
js
jg
loope
jbe
and
hlt
cmp
cs
enter
adc
mov
pushf
subb
fwait
and
or
aad
mov
movsl
into
add
cmpsl
mov
adc
pop
gs
addb
int3
mov
mov
pop
int3
cmp
lds
mov
ja
xor
sbb
pop
push
jmp
ret
out
sbb
or
lods
sti
push
leave
cmpsb
ss
call
xchg
sub
jb
inc
sub
icebp
cmp
insl
scas
add
jp
imul
loope
aad
push
pop
add
leave
je
pusha
in
addr16
fnstsw
in
cli
sbb
cld
lods
inc
adc
xor
stos
dec
mov
push
jns
mov
add
add
add
push
sub
fucomip
addr16
int3
sbb
les
add
add
add
inc
icebp
ljmp
sbb
mov
mov
dec
xor
sbb
bnd
jle
rcr
jg
push
cltd
pop
push
imul
andl
inc
mov
mov
push
mov
sub
popa
fisubrs
mov
push
or
ljmp
mov
jecxz
adc
popf
cmp
and
mov
iret
fdivrl
test
mov
sarb
cld
sub
xchg
fistps
sarl
inc
sbb
idivb
and
shr
cmp
jns
jnp
jae
out
lods
jmp
ljmp
or
inc
movb
sti
mov
nop
inc
sbb
adc
mov
cmp
mov
aam
daa
push
fsubrl
mov
pop
std
or
loope
jbe
sysexit
or
xlat
js
sub
jmp
jle
xor
inc
jecxz
fdiv
sti
test
roll
mov
ljmp
sbb
cmp
pop
sbb
jo
mov
fwait
adc
push
xchg
pop
cmp
mull
push
pop
push
adc
or
sbb
mov
dec
ror
pop
vpsrlw
mov
test
cld
and
mov
hlt
pushl
mov
in
sbb
scas
or
inc
cli
inc
fdivrs
and
rcll
or
pop
pop
jg
sbb
mov
mov
adc
mov
js
aad
stos
int
add
mov
cli
fldenv
js
stos
out
fnstenv
xorl
sarb
mov
lock
scas
pop
lock
sahf
add
aad
imul
mov
lret
add
insb
sub
outsl
daa
insl
push
addb
and
movb
incb
add
push
xor
mov
das
fdivrs
xchg
dec
jmp
mov
ljmp
test
lcall
mov
lods
xor
dec
fdivrs
inc
push
xchg
shlb
jmp
or
lods
adc
int
fisubl
fmull
into
inc
adc
sbb
sbbl
cmp
imul
sub
popa
enter
pop
pop
push
scas
jnp
adcb
adc
mov
out
stos
mov
sbb
les
lock
xor
adc
jae
push
mov
pop
test
sub
enter
ja
mov
push
subb
outsl
pusha
add
adcb
ss
ss
mov
cs
xor
cmpsl
aam
dec
outsb
fstps
inc
mov
pushf
mov
mov
rcl
mov
xor
test
in
xchg
icebp
lret
in
push
incl
mov
sub
inc
mov
dec
cwtl
and
push
scas
xchg
shl
jle
mov
subb
mov
movsb
adc
cmpl
shlb
or
jmp
loope
push
dec
push
ljmp
mov
xchg
xor
cs
call
ret
push
push
xchg
push
lock
and
adc
dec
lahf
jns
dec
movsb
in
sbb
and
stos
cmp
loop
push
hlt
int
popa
in
mov
jae
pop
loope
je
push
xchg
ret
sbb
xchg
ss
jecxz
rol
popf
xor
insl
test
dec
loope
pop
jbe
fbld
je
pop
inc
dec
xchg
in
xlat
adc
xor
sbb
push
jl
rcl
dec
push
sahf
jb
fstp
adc
imul
mov
in
push
dec
push
fimull
rcll
add
inc
lea
and
mov
out
leave
enter
xchg
pushf
fcmovb
enter
add
add
xor
loopne
ja
ja
sub
or
leave
repz
popa
test
mov
xchg
adc
arpl
pop
sub
imul
xor
nop
insl
xchg
push
push
and
mov
loopne
mov
std
mov
adc
gs
lock
dec
push
mov
jae
aaa
and
inc
test
lock
cwtl
cli
mov
jne
insl
fs
sub
xor
lea
out
stos
out
or
push
and
mov
outsb
je
push
bound
cmp
divb
andl
sbb
adc
add
inc
or
adc
push
xchg
add
outsb
push
pop
mov
or
aad
or
ds
jmp
and
sti
fistl
insl
xlat
cmc
mov
xchg
and
call
loopne
mov
jmp
sarl
pop
sbb
addl
fwait
pop
mov
sub
in
mov
sbb
in
xchg
dec
cli
push
push
lcall
popf
push
jp
sbb
loopne
push
mov
fnstcw
enter
mov
mov
mov
sti
cld
js
lea
imul
pop
jp
cmp
mov
stos
add
test
divb
push
xlat
mov
fsubs
mov
rolb
dec
cmp
jnp
mov
jle
and
add
inc
leave
inc
in
iret
cmp
pop
mov
lea
clc
push
test
daa
jecxz
test
loop
jl
out
xchg
mov
pop
xchg
out
inc
cmp
jbe
dec
adc
sub
cld
push
shrl
push
ret
imul
hlt
cmp
mov
cmp
lret
incb
add
jb
test
out
xor
jmp
ss
fcomi
jmp
mov
mov
push
shl
pop
push
fwait
clc
mov
mov
cmpsl
mov
scas
mov
jno
rorl
mov
fwait
xor
iret
xor
lea
test
aam
dec
mov
pop
jecxz
shlb
inc
aaa
jg
push
sbb
jecxz
mov
adc
jb
push
push
lea
inc
sub
ret
cmp
fstpl
add
cmp
xchg
outsb
jmp
aaa
dec
test
inc
icebp
mov
stos
test
insl
jecxz
pop
lcall
jle
arpl
and
jns
dec
test
adc
notb
rcrl
push
fwait
mov
ja
xchg
or
jae
loopne
mov
pusha
movsl
js
xlat
add
mov
fidivrl
push
xchg
cli
sbb
xor
adc
aam
sqrtps
jl
dec
sub
adc
inc
cmp
jmp
adc
xor
cwtl
and
les
cli
xor
mov
push
push
hlt
dec
data16
call
outsb
mov
xchg
sub
gs
test
jmp
aas
inc
push
ja
shrb
sbb
lds
pop
jmp
and
add
sarl
pop
sub
sahf
adc
pop
mov
cmp
jl
xor
mov
sub
push
orl
imul
and
mov
lcall
int
adc
scas
cmpb
insb
push
hlt
bound
and
fwait
mov
clc
jg
cmp
xor
sub
rorl
scas
js
mov
iret
cmp
js
icebp
push
dec
adc
pop
push
xchg
or
out
outsl
fiadds
push
adc
pop
inc
jb
mov
roll
lret
add
push
ds
outsb
sbb
aam
dec
lret
pop
mov
add
add
mov
xchg
inc
inc
adc
cld
in
pop
adc
adc
hlt
cmpsb
jns
mov
inc
jp
inc
testl
scas
out
out
cmp
lea
jp
xchg
jmp
xchg
hlt
add
movsl
pusha
adc
fbstp
idivb
pop
push
and
push
cmp
sbb
push
xchg
add
imul
cmp
fs
sub
adc
jmp
mov
out
mov
addr16
les
pop
fwait
jle
ret
mov
jle
mov
add
sub
xchg
nop
lea
bound
ret
fildll
inc
xlat
sub
mov
xchg
test
fisubl
dec
mov
xchg
jge
pop
lods
cmp
dec
push
test
lds
dec
gs
popf
or
xor
leave
rcrl
mov
lret
enter
inc
leave
xchg
mov
or
pop
push
pop
jo
xchg
jp
fdiv
adc
mov
add
jo
fwait
sbb
ss
dec
dec
mov
dec
add
or
pop
xchg
xchg
ss
mov
and
loopne
out
push
dec
jecxz
adc
pop
cmpsl
adc
sub
adc
dec
ljmp
jo
push
mov
outsl
lods
es
les
sti
cmpsb
sbb
in
inc
in
jae
ljmp
rolb
out
inc
into
stc
mov
xor
add
stos
xchg
xor
nop
jmp
and
mov
mov
leave
enter
test
addr16
mov
jbe
xchg
sub
bound
lahf
adc
push
dec
stc
sub
adc
icebp
xchg
imulb
cmpsb
je
and
xorb
xchg
add
mov
mov
nop
push
push
cwtl
call
incb
add
xchg
div
hlt
lods
movb
xor
inc
orb
add
ret
dec
js
in
xchg
fcoms
mov
ficompl
icebp
inc
pushf
and
fwait
push
adc
cmp
cmpb
jl
repnz
mov
aas
rcrb
fisubrl
inc
hlt
cmp
mov
loop
mov
dec
inc
mov
ja
cmc
xorb
jb
in
cmp
test
fsubrs
adc
mov
xchg
ds
fs
fbstp
xchg
inc
addb
repz
insb
aam
lock
fdivrl
es
xor
add
jae
rcl
mov
push
fiaddl
mov
dec
inc
inc
mov
mov
fmul
test
jne
ja
pop
xor
ror
or
jl
sbb
inc
mov
inc
push
jg
aad
mov
sub
stos
jmp
inc
xor
iret
cwtl
mov
mov
clc
fildll
out
mov
ljmp
shrl
cmp
repnz
ret
mov
les
cli
and
fs
mov
fcmovb
fsubrl
aad
sahf
pop
inc
fisubl
xchg
inc
jae
gs
xor
mov
lods
xchg
out
mov
add
mov
push
and
sub
outsl
aas
xor
jns
add
add
sub
xor
and
jne
inc
mov
jne
mov
insb
inc
mov
test
jmp
xchg
lret
mov
xchg
and
jo
xor
std
or
movl
not
adc
or
enter
push
pop
push
in
xor
and
clc
js
or
mov
add
mov
in
dec
cmp
pop
sbb
mov
add
add
sub
cmpsb
arpl
mov
mov
insl
inc
push
insl
pop
shlb
push
fsubrs
rolb
xor
xchg
lea
jl
or
test
or
add
pop
in
dec
xor
mov
jnp
test
scas
in
cmc
jecxz
add
in
enter
pusha
aam
mov
sbb
aaa
lahf
aad
cmc
scas
das
ret
mov
repnz
cmpsl
movsb
fistl
jge
je
loop
out
test
jge
clc
xchg
popa
ss
pop
xchg
inc
imul
and
add
cwtl
dec
add
push
pop
sarb
ljmp
sub
imul
ljmp
insb
jbe
cmp
pop
cs
jno
add
test
iret
lcall
sub
enter
loope
jnp
pop
in
sub
icebp
and
pop
mov
outsl
and
sub
mov
ljmp
jp
lahf
popf
mov
sub
iret
push
movsl
xlat
inc
movsb
call
daa
jl
out
push
jb
push
ds
inc
jno
mov
lea
pop
mov
and
outsb
test
pop
pop
shrl
dec
or
jns
loope
pusha
aaa
ljmp
imul
or
out
mov
pop
xchg
scas
jmp
mov
enter
dec
test
mov
xor
mov
imul
ss
lahf
cli
je
fsubrl
enter
je
test
mov
mov
mov
inc
inc
out
dec
mov
ficompl
mov
inc
add
clc
mov
cmp
and
fimull
adc
das
jl
movsb
pop
stos
pop
mov
out
xchg
mov
add
inc
pop
xor
popf
pop
ljmp
add
add
add
fldcw
out
lret
rolb
add
add
add
andl
push
dec
sbb
jns
mov
fsincos
scas
dec
loopne
add
jns
cld
ret
movsb
mov
push
icebp
lods
cmp
out
push
popa
pop
inc
les
mov
ja
inc
ljmp
loopne
and
cmpsb
mov
mov
int3
pop
ss
xchg
inc
out
mov
lds
leave
push
inc
mov
cmp
add
movsb
mov
jns
or
cmc
jnp
adc
movsb
loop
cmc
fwait
dec
shl
arpl
jge
mov
out
xor
test
inc
jle
xchg
dec
maskmovq
imul
mov
fisubrs
loop
scas
xchg
stc
xor
orb
std
lods
cmp
orl
out
jo,pn
je
xchg
shrb
cmp
loope
ficomps
or
mov
das
aam
ss
add
pop
rorl
ret
clc
cmc
in
das
test
outsl
adc
fstpt
test
leave
ret
ja
xchg
push
pop
setle
ficoml
push
add
mov
mov
add
sbb
dec
mov
xor
scas
xor
and
mov
dec
dec
adc
sbb
lahf
mov
pusha
lcall
fcomps
insl
out
andl
push
cmp
roll
push
icebp
sbb
fnstenv
push
xchg
test
or
dec
dec
ljmp
clc
test
cltd
mov
mov
mov
cmp
popa
outsl
jnp
pop
das
jg
adc
push
bound
push
cltd
inc
stc
xchg
hlt
jp
jmp
daa
pop
in
inc
xchg
pop
pop
int
rolb
xor
cmp
fisubrl
pop
push
push
shlb
insl
mov
or
mov
mov
mov
adc
jge
loopne
std
sbb
clc
int3
jg
add
push
dec
pop
xchg
dec
push
pop
mov
add
incb
add
aad
pop
out
pop
pop
mov
or
and
ficompl
pop
out
pop
movsb
in
scas
repnz
and
loop
popf
daa
push
lds
das
je
out
gs
inc
sbb
dec
dec
shrb
sahf
xchg
out
add
sub
je
and
in
mov
mov
xchg
ror
inc
inc
shlb
stos
fs
ret
out
bound
or
jmp
jns
leave
test
add
xchg
xchg
vcvttss2si
sbb
xchg
lea
sbb
repz
or
mov
cmp
fmulp
push
cli
rolb
add
fimull
or
int
push
lahf
dec
nop
inc
xchg
sub
push
xchg
cmpsl
andb
xor
mov
lcall
cmp
mov
mov
hlt
testl
jnp
mov
divb
jg
xchg
jb
adc
mov
xor
add
mov
scas
lds
xor
mov
cmp
pop
dec
hlt
mov
cmp
cmpsl
adc
cmp
mov
cmpl
add
jns
dec
faddl
cli
pop
xchg
ss
sti
jb
pop
hlt
addl
push
cmpb
setb
mov
cmp
shl
xor
fnstsw
mulb
sub
push
imull
int
into
lods
push
mov
jnp
adc
cmpb
ljmp
movsl
sub
cmp
popf
lods
fwait
rorl
pop
cwtl
rclb
and
sti
cld
or
push
dec
and
aas
mov
jp
or
xor
test
imul
fbstp
push
daa
jge
and
pusha
test
cmp
sub
or
xchg
cmp
pop
pop
lret
mov
add
add
add
add
xchg
jl
cld
decl
or
sub
add
incb
add
pop
or
fisubs
mov
aad
dec
or
cld
mov
test
enter
adc
call
pop
daa
stos
jmp
push
push
xchg
mov
clc
lcall
movsl
pop
scas
je
inc
stos
and
push
push
mov
mov
dec
ds
cmp
iret
adc
push
test
imul
push
repz
stos
adcl
push
inc
je
adc
cmp
mov
mov
and
xor
fbstp
dec
cli
xchg
orl
mov
cmp
mov
stos
aam
cmc
jle
or
je
pop
mov
cmp
jb
in
ljmp
and
fstps
int
sub
sub
push
lahf
cs
fdiv
push
loopne
iret
insb
mov
out
shll
in
aad
and
cvtps2pd
inc
test
fidivrl
leave
sbb
xchg
imul
push
pop
inc
inc
fisttpl
out
shlb
dec
repnz
std
add
pop
popf
test
inc
adc
sbb
and
in
add
dec
inc
jno
cmpsl
inc
je
bound
mov
aad
sbb
jae
aas
jnp
mov
fldcw
jmp
dec
clc
das
pop
pop
or
or
cli
cmp
jno
cmp
or
mov
adc
insl
xchg
sub
mov
push
xor
sbb
or
pop
outsl
adc
add
pushl
mov
adc
incl
push
test
push
jp
push
mov
iret
adc
loope
je
cltd
popa
cli
jg
jmp
cmp
insl
icebp
sbb
mov
stos
adc
add
or
sub
scas
adc
add
ret
and
dec
repz
fldt
xor
mov
mov
add
incb
add
jno
jne
add
push
arpl
dec
mov
mov
dec
subl
push
dec
mov
mov
add
xor
cmp
mov
dec
mov
jg
out
cmp
mov
in
inc
jg
dec
ljmp
cmpsb
lret
pop
jnp
stos
xor
sbb
xlat
lahf
mov
xchg
sub
inc
clc
ret
dec
cmp
hlt
inc
out
enter
lock
push
pop
mov
js
jnp
ret
push
sub
es
aas
dec
ds
call
mov
mov
pusha
adc
or
jmp
cmp
cld
out
dec
push
xor
mov
cmp
or
jne
cltd
test
push
add
outsl
pop
xor
pop
aam
popa
pop
stos
sub
jno
fistpll
cmp
xor
adc
mov
mov
cwtl
pushf
fsts
push
lock
test
or
aad
push
sbb
adc
or
push
inc
daa
jnp
fidivs
lret
mov
inc
add
gs
dec
sti
sbb
sbb
mov
and
adcl
cld
mov
ret
jge
inc
dec
mov
push
cmp
xor
pusha
fsubrl
jae
mov
push
push
sahf
sbb
cmp
sub
xchg
loop
ficoml
mov
xrelease
mov
movsb
and
mov
scas
dec
mov
sbb
add
pushf
addr16
lock
xor
xchg
mov
dec
push
inc
scas
das
in
ja
lret
and
sub
xchg
adc
dec
loopne
mov
adc
aam
jnp
mov
sub
addr16
lods
add
in
xor
add
lcall
jnp
push
mov
stc
lods
mov
add
add
add
out
sbb
adcb
outsl
rdpmc
mov
cmp
lods
in
cmp
inc
xchg
das
xchg
cli
or
sbb
out
jb
out
xchg
outsl
sahf
popa
popl
jnp
pop
cwtl
sub
or
jle
les
add
jno
or
in
jl
inc
in
adc
and
ljmp
sub
lret
in
test
adc
outsb
out
in
inc
andl
mov
int
enter
test
xchg
shlb
push
adc
push
popa
mov
cld
sbb
into
fsts
or
inc
stos
and
and
adc
int3
fadd
rorl
cmp
rclb
adc
mov
fldcw
mov
shrb
cld
fwait
cli
lods
xchg
jp
out
ret
dec
dec
or
xor
popa
out
jle
push
ja
aaa
mov
cltd
fldenv
cli
sbb
mov
cmp
mov
imul
inc
jnp
or
add
cltd
int3
cmpsb
pusha
out
lahf
or
mov
push
jecxz
hlt
repz
sub
mov
and
jns
push
stos
jne
and
mov
outsb
xor
xor
mov
scas
xchg
rol
in
aam
xchg
sbb
repnz
hlt
lcall
push
push
mov
out
popa
fwait
push
push
cmp
and
sub
add
scas
xorb
std
xor
cmp
pusha
imul
lcall
shll
aaa
pusha
pop
fadd
cltd
push
xchg
gs
jmp
sbb
mov
sarl
loopne
out
pop
add
aas
outsl
aam
dec
mov
push
subb
js
subl
push
cmp
xchg
pop
sbb
lea
test
add
add
add
rolb
dec
idivl
jg
mov
push
scas
faddl
add
add
add
inc
pop
xor
fisubl
jp
push
fcomps
mov
loop
mov
xchg
and
aaa
push
cld
sbb
mov
jo
mov
cmp
mov
xchg
push
push
add
mov
into
out
popf
sbb
int3
into
mov
std
test
sarb
inc
xchg
aas
loopne
adc
mov
ret
jb
sbb
inc
mov
adc
test
ja
out
ret
in
mov
mov
pop
pop
or
xchg
inc
push
in
sbbb
jmp
add
xchg
cmp
inc
lret
pop
xchg
fsubl
out
mov
mov
js
xor
xchg
mov
outsb
test
push
test
and
add
out
dec
pop
mov
pusha
cmp
mov
jne
push
sbb
lock
jle
mov
push
xchg
lret
into
jg
pop
cli
stc
cltd
mov
push
mov
rcl
hlt
push
inc
in
sti
inc
pop
jle
sbb
pushf
imul
jns
or
andb
and
pop
and
jl
push
sub
sbb
int
jno
shll
loop
add
cmp
cmp
xor
xor
loopne
pop
dec
jp
cmpsb
aas
loop
mov
add
dec
jbe
pushf
sub
lods
outsl
pop
pop
cmp
lret
jge
dec
jmp
test
adc
shlb
into
pushf
leave
add
lea
addr16
mov
adc
push
push
clc
xor
pop
daa
mov
addb
into
xor
inc
jecxz
mov
inc
sbb
mov
lahf
mov
dec
mov
add
lods
loop
cmp
push
add
jnp
subl
mov
add
mov
call
mov
push
aaa
jb
lods
fiadds
add
add
add
aaa
add
inc
ret
dec
jb
repz
loopne
push
mov
dec
sti
inc
mov
or
cmp
pop
cmp
mov
ret
pop
pop
test
icebp
scas
pop
fxch
cmp
sub
lret
sbbl
pop
cmp
xor
bound
pop
pop
add
adc
cli
call
sub
je
inc
divl
push
dec
push
or
jae
xchg
ret
jmp
lock
jge
mov
adc
xchg
mov
lret
xchg
add
adc
xchg
jecxz
xor
push
sbb
inc
ss
push
mov
xchg
push
and
test
or
pop
inc
popa
stos
jle
mov
cltd
add
fcmovnb
mov
add
or
sbb
into
stc
dec
mov
shll
adc
and
subl
push
xor
jae
rol
fndisi(8087
push
mov
roll
pop
mov
and
bound
xchg
ss
adcb
sbb
shll
xchg
je
pop
pusha
inc
pop
dec
sbb
pop
cmpsb
iret
pop
mov
cmp
cmp
jge
xchg
imul
cmpsl
lahf
pop
scas
mov
xchg
dec
insl
inc
popa
ja
xchg
pop
sbb
inc
sbb
push
adcl
cltd
gs
cmc
filds
loop
sub
xorl
xchg
lcall
jne
sbb
adc
inc
in
int
mov
sub
sbb
mov
cmpb
mov
int
add
mov
clc
ds
shl
std
add
cld
or
jle
jne
fwait
adc
fcoml
scas
mov
dec
daa
jl
jnp
dec
jp
std
dec
mov
xor
pop
sbb
sub
stos
pusha
call
movsl
sub
add
ficompl
mov
lods
xor
stos
loopne
add
add
add
arpl
push
call
pop
dec
mov
aas
xchg
jp
loop
jns
pop
xchg
lahf
xor
mov
std
add
push
xchg
cmc
stc
and
sub
push
dec
pushf
adc
movsl
fisubrl
inc
mov
mov
mov
in
fstpl
add
inc
sbb
cltd
sub
mov
push
aam
bound
fistl
adc
sti
jb
dec
js
aaa
sub
cmp
mov
scas
arpl
mov
pop
inc
adc
xchg
insb
es
pop
or
loop
xchg
lret
jns
push
xor
popa
int
add
push
popf
fstps
push
mov
mov
outsl
xchg
cmp
inc
dec
push
out
mov
adc
sub
cmp
or
sub
mov
fnstcw
pop
ret
adc
adc
insl
test
dec
add
lret
inc
popf
ficoms
lea
mov
fld1
pop
or
adc
rolb
movsl
in
cmp
fwait
je
sbb
push
icebp
fldenv
cmp
pop
pop
jns
pop
push
das
les
repz
sbb
sbb
addr16
mov
mov
outsl
fbstp
jge
je
movsl
push
loop
popf
cli
data16
mov
movsl
roll
pop
push
mov
push
fs
cmp
xchg
inc
clc
push
pop
bound
popf
pop
ret
das
aad
arpl
mov
or
sub
test
xchg
jmp
stc
inc
ja
jbe
jnp
cmp
pop
fs
adc
nop
popf
shrb
sbb
and
rcll
pushf
xchg
or
cmp
in
mov
repnz
clc
test
dec
mov
push
movsl
mov
xchg
jbe
mov
jno
fwait
cmpsl
call
sbb
mov
add
inc
stos
pop
sbb
cli
inc
cli
mov
xor
test
add
incb
add
mov
std
pop
cmpb
cmp
fwait
mov
idivb
rcl
test
data16
mov
xchg
pushw
bound
js
ds
insl
into
incl
inc
leave
mov
loop
jle
in
push
je
inc
dec
cltd
lods
repz
cmp
inc
insl
into
jne
push
aad
push
dec
cltd
xlat
loope
push
inc
xchg
xchg
cmp
push
insb
stos
mov
aaa
ja
jp
cli
xchg
mov
enter
std
pop
outsb
popf
ficoml
shl
jle
mov
cli
cmpsb
lds
jnp
mov
dec
mov
lods
inc
aam
mov
cld
adc
mov
mov
jbe
lcall
or
out
or
xor
js
aad
scas
xor
push
push
sbb
jb
ficoms
jl
sbb
clc
jmp
lcall
enter
or
fbld
aad
insl
jecxz
mov
mov
add
sbb
ja
fnstcw
sbb
xchg
mov
enter
dec
push
push
or
stos
dec
popf
cmp
jg
and
fs
mov
mov
mov
cs
mov
repnz
sbb
sub
mov
lods
in
rorb
out
ja
xchg
mov
mov
outsb
jge
xchg
hlt
int
xchg
lods
adc
push
lds
sub
inc
add
jle
mov
lods
out
sub
scas
pop
sarb
enter
sbb
hlt
test
sahf
arpl
pop
pop
mov
xor
ret
or
cmpsl
sub
lahf
ljmp
jp
adc
mov
mov
xlat
insb
jne
fxch
mov
mov
sub
xchg
jbe
mov
mov
or
mov
xchg
repnz
add
mov
xlat
push
xlat
ja
out
push
lahf
pop
pmaxub
cmpsb
in
add
add
add
pop
call
in
and
sbb
xor
aam
adc
and
ficoms
ss
mov
test
movsl
lcall
pusha
dec
xchg
add
add
icebp
insl
push
test
add
xchg
loope
lods
xchg
out
fbld
sahf
cli
imul
inc
sti
pop
mov
call
and
adc
mov
fsubr
stos
lods
dec
cltd
and
or
loop
in
testl
xchg
and
fst
dec
fsubrp
cmp
aam
rcr
fldcw
loopne,pn
mov
test
std
dec
dec
pop
lods
jp
in
adc
dec
add
add
push
xor
fwait
xchg
pop
xor
cwtl
push
lcall
dec
arpl
in
xorb
scas
fsubs
pop
adc
inc
dec
je
xor
sar
lods
fisubrl
dec
push
inc
jnp
movsl
into
rcr
rcl
xchg
xchg
leave
xor
or
arpl
xor
mov
dec
add
int3
ret
inc
and
dec
xchg
xchg
subb
xchg
push
dec
aaa
gs
jne
orl
xor
dec
lods
sbb
lods
and
ret
out
sub
dec
mov
jns
loopne
addr16
outsb
shll
inc
sub
movsl
mov
push
icebp
pop
nop
or
inc
imul
arpl
fs
cmpb
andb
push
mov
ficomps
mov
jge
fnstsw
mov
sbb
push
sahf
jns
stc
divb
mov
cmp
dec
cwtl
jmp
fwait
sbb
mov
jl
imul
lods
sbb
cmpl
movsb
pusha
and
test
int3
mov
add
int3
shlb
lahf
dec
sti
into
push
jg
add
rcll
jmp
mov
movsb
out
add
add
add
cmp
lods
daa
push
cwtl
xchg
sti
fwait
push
out
mov
cwtl
add
jge
notb
dec
inc
mov
add
mov
xor
and
jnp
cmp
inc
jbe
push
xchg
jg
adc
outsl
pop
jmp
lods
lods
dec
call
mov
nop
rolb
mul
sub
mov
adc
enter
xor
mov
sub
les
loopne
or
mov
stos
dec
loop
scas
sarb
push
cwtl
addr16
addr16
lods
jle
stc
clc
cmp
jle
cmp
dec
insb
mov
jp
push
dec
loope
push
outsl
jbe
ja
jg
xor
fdivs
sub
out
mov
dec
jno
adcl
pop
shrl
cmp
mov
fistpl
mov
pop
adcl
stc
xchg
es
scas
push
aas
fistl
dec
xchg
xchg
cmc
das
sbb
cs
inc
aam
imul
sbb
inc
xchg
das
stc
std
add
xor
xorl
add
mov
jmp
add
imul
aad
icebp
dec
dec
repz
push
aaa
movsb
or
or
pop
call
daa
mov
mov
sbb
cmp
sbbl
daa
mov
faddl
movsl
call
es
jbe
pop
jge
or
pop
jg
sti
repnz
dec
push
cmp
push
add
dec
pop
adc
cmp
jns
aad
repnz
into
outsb
sub
jg
mov
outsl
int
adc
mov
cli
sbb
pop
out
lret
in
xchg
jmp
loope
inc
cmp
cmp
mov
and
dec
clc
ret
add
sub
pop
test
xchg
lea
mov
pop
sub
mov
iret
negb
mov
mov
inc
mov
add
add
push
cmp
loop
sub
fidivs
popa
cltd
or
and
mov
push
scas
xchg
frstor
addr16
shrb
sahf
repnz
pop
popl
mov
inc
dec
mov
xor
out
xor
xchg
ds
ja
mov
pop
inc
xchg
sub
sub
push
aam
mov
shlb
inc
and
inc
ret
pop
mov
hlt
and
sub
mov
inc
std
adc
mov
stos
fsubl
cmp
sub
adc
or
ds
inc
push
push
pushf
sahf
aam
sub
addr16
scas
pop
jmp
fistps
mov
inc
imul
outsl
xchg
lods
add
ficompl
sbb
xor
jmp
mov
imul
cld
xchg
imul
decl
or
dec
rorb
pop
xchg
cmp
test
or
jge
push
mov
rorb
add
fists
stos
add
inc
and
cs
cmc
jge
xor
and
push
pop
add
clc
cmp
push
ss
lods
mov
dec
movsl
int3
nop
ret
sbb
adc
stc
adc
mov
or
loopne
dec
popf
jmp
mov
adc
divl
add
jbe
dec
lds
or
int3
push
call
xchg
cmpsl
mov
mov
dec
inc
add
ja
xor
adc
loopne
jl
call
orb
xchg
sti
push
movsl
ret
scas
pop
imul
pop
insb
xchg
jae
or
gs
mov
sub
sarl
xor
pop
stos
fisttpl
fsubrs
mov
dec
cmpsl
dec
jne
sub
cmc
test
mov
adc
rol
mov
popa
or
add
sub
ja
jno
dec
test
xchg
hlt
mov
add
add
out
lret
idivb
jg
loop
out
or
orl
testl
out
nop
jae
dec
int3
cmp
adc
mov
jg
cwtl
sbb
mov
loop
jae
imul
xchg
sub
dec
adc
stos
or
or
in
cld
jl
xor
push
inc
fldt
cvtps2pd
ds
ret
push
popf
mov
sbb
in
cmp
rol
rcrl
inc
mov
insl
loopne
or
push
xchg
mov
lods
das
adc
or
mov
lods
jmp
sbb
push
xchg
cmpsl
int
mov
xchg
pusha
dec
and
fidivs
lods
lea
and
sub
imul
inc
mov
out
movsb
jo
lds
inc
inc
mov
loopne
push
adc
lods
dec
jae
repnz
mov
sub
ficompl
roll
lods
xchg
shrl
mov
int3
ret
std
sbb
xor
bound
mov
adc
sub
ja
ret
dec
sarb
ss
lret
stos
push
popf
rcll
cmpsb
and
pop
push
pop
mov
push
aas
lret
orl
inc
ds
mov
add
fdivl
pop
cmp
repz
loop
imull
mov
sahf
and
jmp
lret
jns
adc
sbb
shl
add
cs
je
aaa
cmc
adc
mov
push
loop
cli
pusha
and
cmp
or
push
aaa
pop
jne
repnz
mov
dec
mov
inc
mov
mov
lods
pop
lcall
dec
ret
dec
mov
or
mov
mov
mov
and
xchg
test
mov
cmp
xchg
enter
dec
imul
mov
das
ret
xlat
jbe
add
mov
stc
popf
or
mov
incb
add
push
xor
bound
mov
aad
lret
xchg
jmp
cmpsb
mov
mov
arpl
xchg
test
je
enter
add
sahf
inc
test
xchg
iret
or
fdivr
cmp
mov
sti
jl
addb
pop
adc
adc
pop
pop
int3
cli
sbb
lret
mov
cmc
mov
int
jbe
ret
adc
lahf
lock
sub
popl
inc
dec
call
pop
mov
pusha
mov
movsb
or
mov
in
push
jne
and
out
mov
sti
int3
sbbl
jb
lret
es
xchg
dec
loop
std
cmp
sub
lret
xor
imul
mov
sub
xor
lds
adc
movsb
sub
and
jmp
xor
sti
add
fwait
inc
xchg
pop
lcall
and
xchg
or
pop
push
pop
mov
jl
stos
adc
cmpsb
setge
scas
jl
es
mov
jbe
pop
iret
cwtl
loope
lods
sub
mov
ficomps
pop
xor
or
addr16
pushf
jecxz
add
dec
sbb
sub
loope
pop
aas
adc
test
int
push
add
outsl
mov
sbb
sub
xor
push
cmpsl
or
cmp
pop
jcxz
dec
jno
orb
inc
xor
lret
pop
cmp
dec
jmp
fcomps
je
insb
or
scas
gs
jmp
add
in
ficompl
mov
stc
test
daa
pop
shlb
fisubrs
int3
imul
inc
mov
sub
sbb
xlat
lret
and
mov
and
ja
pushf
call
push
fisubrs
mov
data16
ljmp
add
jns
sbb
jge
and
dec
rclb
rcrb
add
outsb
lds
je
sub
jecxz
push
lret
sub
mov
jo
js
push
adc
insb
push
jge
xor
xchg
stc
jmp
mov
cmpsb
jno
loop
pop
xor
nop
test
and
rorl
in
cmp
jmp
icebp
adc
sbb
in
adcb
cmp
sbb
sub
and
aaa
adc
adc
push
add
mov
loope
push
and
icebp
out
push
jmp
sub
cmp
inc
scas
lahf
les
std
sub
sbb
fwait
divb
push
sub
stc
test
fdivl
mov
dec
out
fsts
cmp
xor
ja
inc
dec
aad
sub
outsl
inc
sub
pop
pop
lods
loopne
cmp
jle
test
std
and
jge
xorl
push
xor
adc
ret
nop
sbb
sub
mov
and
scas
outsl
or
stc
mov
lds
insb
and
and
repz
and
jmp
inc
das
xor
mov
mov
adc
and
xchg
fiadds
loope
dec
mov
sub
fimull
sbb
jge
outsb
daa
cmp
ss
fidivrl
adc
push
cmp
lret
xor
int3
xchg
xlat
popa
jns
sti
mov
mov
pop
lahf
frstor
nopl
movsl
sub
adc
jno
sbb
ss
or
stos
xchg
sub
in
sbb
and
adc
fiaddl
and
jecxz
js
ret
jmp
notb
mov
out
pop
es
push
pop
iret
loopne
add
cmc
in
dec
sbb
loop
shll
fdivrl
leave
push
dec
jge
scas
pusha
iret
push
mov
fistpll
pop
mov
cmp
add
roll
pop
arpl
mov
lcall
add
pushf
cmpsl
bound
and
cmpb
push
and
icebp
sarb
push
fisubl
dec
sbb
sbb
pop
stos
add
es
ret
pop
mov
out
loopne
pop
push
pop
test
insl
loopne
popf
or
xor
pop
xchg
int
call
sti
push
loopne
out
pop
sahf
leave
int
cmp
push
or
mov
mov
and
sbb
pop
jmp
adc
imul
mov
sub
jne
lahf
clts
sbb
xchg
cld
jecxz
inc
pusha
pop
mov
jle
clc
xchg
out
movsl
inc
dec
mov
or
and
test
addl
int
stos
imul
xchg
mov
jbe
inc
cwtl
push
rclb
sub
xchg
sub
addr16
cmp
repnz
mov
shrd
cmpsl
xor
lea
loop
insl
xor
outsb
cltd
pop
sub
mov
inc
add
sbb
sub
mov
pop
xchg
fnsave
rcrb
imul
inc
push
mov
sub
mov
out
and
sub
mov
jge
hlt
stos
fistl
insb
push
out
cmp
dec
pushf
push
movsl
mov
into
cmpsl
insb
cmp
xchg
dec
mov
xchg
or
xor
lret
outsb
cwtl
sub
sub
dec
mov
xchg
add
push
std
cmp
mov
clc
fldl
cld
cmp
sub
in
jne
test
mov
nop
outsb
lock
inc
mov
imul
loop
in
aam
xchg
mov
aaa
pusha
cmc
pop
ljmp
jle
pop
pop
mov
or
stos
outsb
xchg
push
jle
js
lret
scas
es
iret
psrad
add
addr16
scas
mov
js
sbb
adc
add
daa
pushf
cli
mov
xchg
out
cltd
xor
add
incb
add
rcr
sub
sbb
or
adc
ret
adc
jle
and
arpl
dec
push
addr16
mov
mov
loop
enter
adc
test
cmp
jmp
adc
mov
cmp
xchg
mov
jb
cwtl
mov
les
inc
mov
cmpsl
xor
mov
sbb
pop
imul
xchg
or
loop
leave
mov
negb
lret
pop
inc
cltd
out
dec
push
fdivr
loop
mov
pop
enter
and
jecxz
push
jnp
addl
fldenv
and
jecxz
iret
or
mov
push
aas
insl
adcb
lods
pop
outsb
mov
mov
or
stos
jecxz
add
pop
push
pop
push
test
mov
in
out
test
adc
je
fsubl
ret
sbb
inc
imul
shlb
mull
test
fldcw
loop
inc
test
cmp
lret
dec
sub
and
test
sub
pop
cli
imul
scas
push
push
imul
into
xor
daa
push
xlat
fisttpl
push
fdivrs
out
and
add
loope
cmp
mov
mov
mov
mov
mov
jnp
dec
notl
ret
xchg
and
pop
aas
sahf
das
bound
sarl
fldt
pop
testb
lahf
add
outsl
das
std
outsl
lock
xchg
sub
rcrb
scas
add
push
adc
lahf
jle
sbb
ja
adc
jns
push
pop
int
sub
pusha
daa
add
js
test
clc
or
shl
add
or
ficomps
inc
xor
aam
fadds
pop
xchg
fs
bound
or
idivb
scas
ficomps
mov
add
lcall
leavew
and
loop
arpl
add
add
sbbb
pop
mov
rcrb
mov
dec
add
jmp
pop
jno
mov
andb
mov
jmp
inc
fistps
push
ja
icebp
into
sti
jp
cltd
iret
cltd
enter
xor
lret
daa
jnp
stos
add
in
xor
out
hlt
add
mov
add
lret
cwtl
imul
jecxz
and
or
cs
and
mov
inc
mov
icebp
rclb
hlt
sbb
pmuludq
cmc
in
adc
jbe
cmpsb
sarb
push
add
push
fyl2x
pop
fdivrs
repz
push
pop
data16
out
xor
insl
sub
jl
pop
fldenv
out
call
shlb
fwait
sahf
mov
push
std
mulb
fsubr
sbb
jge
pop
and
rol
mov
and
mov
jb
add
inc
fidivs
inc
cld
ret
cltd
mov
stos
mov
mov
push
stos
xchg
std
xchg
out
jno
jmp
jnp
adc
movsl
add
fists
movsl
jae
mov
push
insb
popf
or
adc
cmp
aaa
and
cmp
out
cmpl
andl
outsl
insb
int
and
sub
f2xm1
lret
lea
or
pop
cwtl
mov
mov
mov
jmp
daa
adcb
repz
mov
dec
les
insb
ret
xchg
mov
bound
mov
and
jo
mov
hlt
push
or
stc
gs
clc
xor
pop
lods
mov
jle
js
push
inc
cld
outsb
pop
jg
jp
cld
sub
xchg
cmpsl
cld
fidivrs
inc
sbb
cmp
sbb
and
adcb
fisttpl
add
add
add
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
jns
mov
xchg
testb
incb
add
mov
popf
gs
or
xchg
jae
ds
jecxz
fs
cmp
hlt
xor
shll
aad
int
jg
cmpsb
ss
cmp
adc
xchg
adc
lret
add
dec
pop
dec
inc
sti
mov
sub
push
cmp
fsts
dec
and
nop
push
ljmp
in
cmp
loop
lahf
jnp
les
fwait
mov
and
repz
arpl
sub
xchg
pop
pop
pop
addr16
sti
loope
dec
jl
sbb
imul
in
or
cmovae
inc
daa
push
jmp
pushf
sub
inc
mov
testl
dec
outsb
fbld
push
out
xor
pop
lret
mov
cwtl
fnstcw
or
nop
outsl
sbb
push
pop
add
aad
push
jle
dec
in
xchg
mov
fwait
jne
mov
cld
fs
pop
or
xor
lcall
cmp
and
push
scas
sahf
pop
divl
sub
cmpsl
into
sub
sarl
insl
dec
inc
push
push
nop
and
push
dec
cld
in
in
push
ljmp
sbb
out
scas
push
sbb
inc
jp
add
adc
jmp
inc
cmpl
rorb
dec
xor
scas
xchg
dec
fwait
or
lods
filds
iret
negb
cs
cmpsl
dec
inc
ficompl
outsb
cmc
in
stos
mov
sub
or
pusha
pop
xor
mov
mov
adc
or
sub
or
dec
add
xchg
sbb
mov
jnp
xchg
sarl
or
push
and
call
popf
hlt
jl
xlat
loopne
xchg
inc
sbb
rcrl
nop
stos
mov
or
cli
xchg
add
add
xchg
add
std
cmp
stc
jl
stc
jne
pop
pushf
out
xchg
clc
add
incb
add
push
sbb
xchg
out
sahf
push
stos
jecxz
fsubp
push
popf
dec
cmp
push
popf
mov
cmp
pop
xchg
cld
pop
sub
xlat
ljmp
and
packssdw
mov
adc
cmp
in
into
mov
sub
mov
cmp
xor
subb
sub
cmc
mov
dec
inc
mov
icebp
xchg
int
fmuls
mov
jo
cmp
xchg
adc
mov
mov
pushf
addr16
and
inc
pusha
leave
mov
outsb
mov
mov
jg
dec
or
inc
sbb
cmp
lret
cmpb
jb
mov
jecxz
je
cmpsl
mov
mov
jge
add
jnp
jae
lahf
aaa
in
fdivr
dec
xchg
iret
jne
push
ror
pusha
and
pop
dec
into
pop
sahf
xlat
cmp
jo
imul
out
js
mov
push
sahf
adcl
adc
inc
sub
clc
jns
sub
inc
push
into
push
push
xchg
pop
cwtl
jae
ret
jne
mov
in
pop
cmp
adc
lahf
cmpsl
dec
dec
js
add
mov
pop
icebp
sbb
dec
mov
lods
xchg
nop
mov
arpl
inc
or
mov
arpl
scas
pop
test
ljmp
sar
dec
ss
pusha
lcall
sbb
mov
int
push
adcb
mov
add
mov
fmull
jmp
fcmove
mov
push
add
dec
mov
push
push
shrb
mov
test
inc
push
adc
mov
or
scas
mov
push
jmp
pusha
mov
dec
test
dec
mov
out
icebp
add
test
cmp
test
nop
cli
add
push
add
add
sbb
lods
lea
in
jg
