push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
mov
ja
int
xchg
lock
fstpl
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
mov
testl
mov
test
pop
xchg
pop
add
inc
mov
add
outsb
je
cmp
stos
mov
scas
addl
popf
xor
aad
jg
pop
cli
jbe
mov
xchg
push
popf
hlt
lods
mov
gs
ror
dec
leave
inc
push
fistpl
mov
aas
add
int3
insl
cmp
jmp
sub
leave
cmp
adc
lods
mov
imul
xor
xchg
adc
mov
lret
jne
test
hlt
inc
into
loopne
lock
insl
pop
jo
or
mov
inc
fcompl
and
arpl
or
sbb
stos
mov
sub
jbe
out
testl
lcall
fld
in
sbb
shrb
push
pop
test
cmp
std
add
xlat
lds
test
loopne
pop
ljmp
cmp
enter
pop
popa
mov
aam
ret
inc
mov
jb
mov
jge
popf
inc
xchg
pop
das
ror
push
jmp
or
lcall
out
or
shl
lcall
inc
sbb
mov
xor
loope
ja
or
in
adc
xor
push
or
push
mov
subl
jmp
fldcw
add
sbb
mov
dec
stos
sub
lock
insb
pop
xor
sub
or
or
dec
pop
cmp
lods
and
add
mov
das
add
jmp
loopne
scas
jmp
sbb
lret
mov
inc
orb
out
push
xchg
inc
cltd
mul
jo
mov
pop
cmp
sub
sub
aam
mov
into
stos
fs
add
clc
icebp
mov
shl
mov
repnz
call
and
jmp
ret
cmp
rcr
pop
es
test
stc
dec
loopne
and
mul
hlt
mov
clc
add
jae
or
xchg
jp
sarb
sub
add
aad
push
in
out
movsl
cld
call
jae
lea
aad
sahf
sbb
mov
or
stos
inc
push
stos
shll
insb
or
pop
push
imul
xchg
shl
dec
xor
and
mov
in
shr
push
mov
std
push
push
fistl
fistl
or
sbb
dec
rcl
repnz
outsl
clc
mov
stc
les
dec
pop
rclb
mov
das
shll
xadd
out
jge
test
mov
add
mov
mov
addr16
ljmp
outsb
jle
sbb
repnz
daa
mov
xchg
inc
add
adc
mov
shll
loopne
js
dec
mov
dec
fbld
add
lret
mull
pop
dec
ds
call
je
scas
or
lret
mov
cmp
pop
rcrl
jl
sbb
rclb
mov
out
pop
ret
mov
stc
outsl
movsl
loop
inc
out
mov
add
cli
popf
jno
fisubl
mov
mov
push
cli
xchg
repz
mov
jge
or
loop
push
xor
clc
enter
cli
jns
jae
add
mov
les
cmp
fldl
inc
xchg
daa
pushf
xchg
push
pop
push
inc
push
sbb
fldenv
arpl
push
or
out
fdivl
neg
adc
hlt
and
imul
lret
xchg
sar
jno
les
xchg
adc
ret
lret
mov
mov
push
stos
xor
push
popf
jp
cld
aas
insl
sbb
frstor
icebp
push
aas
lret
mov
shl
adc
inc
xchg
out
cs
sahf
inc
call
test
push
push
out
ja
mov
xchg
xchg
adc
xchg
jecxz
or
clc
sub
pop
xchg
push
cmp
mov
xor
imul
jge
sbb
in
xchg
cmc
xchg
ds
inc
lock
andl
int
insl
or
in
sarl
sub
out
gs
jp
or
and
cmp
pop
push
daa
shrb
and
mov
imull
enter
add
push
in
mov
xchg
mov
jae
insl
and
push
dec
rolb
mov
imul
sub
ljmp
mov
sbb
jne
or
std
incb
repnz
ss
sar
stc
sbb
imul
sbb
pop
mov
dec
cmp
mov
inc
jg
dec
add
pop
fwait
iret
lock
or
mov
popf
mov
mov
push
and
xchg
dec
aam
mov
inc
xchg
mov
dec
imul
insb
rclb
xor
mov
and
lock
ret
gs
dec
les
aad
adc
gs
arpl
bound
out
jecxz
cld
lea
cli
xchg
sti
sbb
stc
inc
dec
scas
push
xor
dec
cmp
int
test
testb
shl
fidivl
or
xorb
jecxz
mov
sbb
push
addl
fbld
daa
repnz
and
mov
in
faddl
xchg
sub
stos
dec
scas
aaa
or
idivl
cmp
xchg
mov
addr16
int
cmp
loope
std
insb
sub
cmp
insl
jp
fldcw
inc
add
adc
fwait
jmp
in
addr16
int
jl
push
movsl
push
pop
dec
push
outsl
enter
out
mov
mov
adc
or
clc
pop
dec
sub
xchg
dec
js
ja
sbb
lcall
fists
stc
dec
inc
jns
mov
fildl
aam
add
and
ljmp
xchg
add
xor
outsb
pop
jo
xor
dec
ja
ljmp
rcrl
cwtl
or
je
dec
mov
inc
pop
xor
inc
out
mov
fdiv
push
mov
add
fwait
jge
mov
cli
insl
mov
or
dec
lods
inc
jnp
fdivr
imul
clc
push
sarb
pushf
mov
roll
dec
idiv
ss
dec
aaa
mov
fwait
jl
out
dec
outsb
int
std
enter
inc
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
and
xchg
add
mov
bound
mov
gs
orl
adc
aam
sub
ljmp
xor
add
xlat
lcall
push
xchg
pushf
iret
cltd
sbb
aam
pop
jb
xor
movsl
mov
push
stos
pop
ret
adc
fdivs
pushf
mov
mov
and
xor
in
iret
daa
mov
pop
stos
cld
outsl
dec
adc
mulb
and
mov
inc
je
data16
xor
popa
inc
sub
and
sbb
cwtl
sub
cmp
sub
push
sub
xor
mov
mov
decl
insl
movsb
repnz
adc
mov
pop
cmp
sub
inc
lret
inc
je
jmp
and
cli
adc
inc
or
xchg
fwait
test
add
ljmp
push
ja
leave
adc
cmp
insb
out
das
jmp
push
push
or
mov
loopne
mov
call
xlat
xor
or
push
cli
dec
loope
push
mov
inc
add
pop
or
insb
jl
scas
mov
jmp
xchg
pop
push
inc
sub
jl
inc
xchg
arpl
fdivl
lods
cmp
lahf
mov
lcall
and
pop
rcr
xor
or
sbb
sub
andb
xchg
push
sbb
sbb
mov
xchg
cltd
push
add
inc
fisubs
jbe
adc
loop
loopne
idivb
cmp
push
mov
or
popf
loopne
dec
sbb
fnstsw
pusha
cltd
stos
jp
dec
iret
int
hlt
add
sti
fistpl
mov
scas
push
xchg
add
test
inc
xor
pop
dec
cmp
insb
cwtl
loopne
jb
cmp
cmpb
push
aam
xor
into
lods
addr16
inc
fadds
sub
aaa
push
pop
push
and
out
js
sbb
xchg
test
pop
sti
mov
jae
ds
add
cmp
ds
cltd
dec
pop
jecxz
out
jge
jl
out
fwait
sub
and
dec
xor
out
rorl
nop
jne
data16
nop
lods
xor
imul
pop
xor
test
gs
pop
sbb
sub
push
adc
xor
push
cmc
pushf
das
jae
xchg
jbe
ja
mov
adc
mov
lahf
pop
repnz
fmull
lock
cmp
ret
scas
sub
xor
sbb
cmp
mov
push
lock
sbbl
mov
or
push
mov
xor
call
js
outsl
cmpsb
add
or
popf
ds
aad
enter
cltd
push
jnp
push
pop
mov
push
orl
jp
js
push
rolb
mov
mov
int3
pusha
std
and
test
jmp
test
sub
imul
aad
mov
mov
adc
mov
xlat
inc
aad
and
inc
out
nop
jge
neg
loopne
or
hlt
push
sbb
jmp
jbe
fldt
cmpsb
jl
pop
dec
test
and
dec
test
adc
lret
mov
je
addr16
and
test
sub
mov
xlat
mov
push
mov
iret
fsts
cmc
insb
xchg
cld
sbb
inc
stc
bound
pop
js
ljmp
xchg
imul
pop
rolb
sbb
and
test
hlt
rcl
cmp
pop
in
xor
cld
je
add
popa
add
mov
pop
fdivs
in
ret
or
mov
jmp
lahf
clc
inc
dec
push
out
fsub
mov
lds
or
xchg
test
pop
add
jg
fs
mov
push
mov
idiv
jmp
jp
sub
repz
mov
pop
adc
add
jae
out
or
fdivrl
mov
idivl
adc
jae
cmpsb
jnp
and
icebp
push
cltd
inc
test
inc
scas
in
vminpd
cltd
mov
fcomip
inc
add
test
adc
cmp
xchg
cmc
sub
test
dec
mul
mov
xor
jmp
or
aas
cmpsl
aam
dec
add
gs
bound
add
insl
je
mov
mov
cmc
popf
pop
xor
nop
mov
mov
sbb
int
xchg
or
ret
sbb
adc
mov
pusha
aad
ja
cli
dec
cmpsl
mov
mov
ja
sub
fistps
movsb
arpl
mov
lea
gs
in
mov
pop
dec
mov
xchg
push
aam
test
ja
fwait
je
adc
jo
xor
es
sbb
nop
arpl
mov
push
das
lea
mov
push
mov
sub
cmp
clc
hlt
in
sbb
fstpt
out
xchg
cmp
scas
mov
dec
xchg
mov
jle
jg
insl
sbb
rcrl
xchg
popf
and
xchg
cli
clc
mov
roll
pop
mov
xchg
or
sbb
inc
jle
imul
add
mov
xchg
mov
in
mov
mov
dec
sarl
mov
popf
in
adc
push
adc
inc
loopne
pusha
cmp
jnp
add
sub
push
fs
xor
dec
push
cld
mov
jge
fsubs
aas
and
mov
dec
lret
test
ljmp
arpl
fcmovnb
flds
pop
pop
repz
or
inc
dec
aad
sub
loop
inc
clc
out
jg
jno
cmc
sub
out
sbb
mov
fsubs
iret
lret
sbb
stc
pop
push
xchg
mov
jae
das
sar
or
out
sub
inc
jne
icebp
popf
jne
fmull
adc
jae
rclb
adc
les
dec
aam
cs
ds
jmp
xor
add
sarb
push
jge
clc
nop
gs
xchg
push
pop
push
push
dec
das
test
int
sbb
out
or
jae
enter
inc
jne
mov
xlat
pop
push
std
sbb
jmp
cmpsl
mov
add
inc
sub
pop
push
mov
fistl
dec
enter
push
test
pop
pop
clc
fidivl
dec
sbb
sub
fwait
call
div
xchg
xchg
subl
call
bound
xchg
ret
sub
sbb
cmp
jbe
mov
pop
xchg
adc
aam
adc
lods
cmp
pop
pop
cmp
sub
mov
jecxz
inc
call
imul
or
or
fbld
aad
sub
out
sub
dec
outsb
cmc
sub
inc
mov
je
cmp
gs
pop
or
pop
iret
mov
rcl
mov
mov
push
xor
aad
and
in
sub
adc
shrb
push
or
into
xchg
xorb
xchg
imul
sub
lret
mov
fs
add
jno
xchg
sub
xor
loopne
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
add
cmc
ja
stos
pop
popa
adc
adc
sahf
shll
push
push
mov
incl
add
sub
int3
xchg
cs
dec
dec
and
push
sti
decl
dec
outsl
prefetcht1
jb
adc
int3
sub
xchg
jnp
ficomps
mov
lret
mov
jno
fstps
xchg
movsb
jmp
and
in
mov
push
fldl
testl
repz
add
or
mov
repnz
fsts
jmp
and
cmp
jmp
jmp
jno
xchg
mov
les
xlat
daa
aas
dec
inc
push
mov
inc
cwtl
pop
cmpsl
dec
in
add
rcrb
xchg
dec
xor
lods
or
cmp
push
mov
subb
imul
dec
push
insl
lea
inc
inc
dec
xor
sbb
add
js
pop
fsubrs
add
mov
inc
xlat
jae
out
push
clc
pop
add
sbb
hlt
xor
nop
mov
fsubs
je
sub
xchg
push
insb
dec
xor
ficoml
daa
addl
push
mov
xchg
les
ss
out
adcb
out
add
sar
mov
mov
mov
push
or
int
test
shl
insl
pop
pop
mov
mov
xchg
shlb
andl
mov
test
cli
mov
xor
mov
sbb
scas
jp
or
stos
mov
mov
clc
dec
pop
jecxz
fsub
cmp
jge
fistpl
dec
sbbb
lock
xlat
jmp
test
mov
xchg
sub
xorl
sub
fcomps
xchg
sub
or
into
xor
pop
jns
ficoms
mov
cmp
sub
push
jge
in
xor
adc
ret
insb
es
xchg
mov
mov
adc
mov
push
mov
test
shll
push
outsb
imul
and
push
movsl
push
aaa
jge
outsl
into
dec
out
fiadds
das
dec
jl
bound
cmp
icebp
insl
sub
mov
mov
inc
mov
outsl
pushl
push
jp
jb
jp
lock
fiaddl
push
fwait
push
mov
mov
xchg
add
sbb
jg
sbb
sbb
or
xchg
sbb
inc
stc
push
or
je
in
jmp
xchg
sbb
rorb
mov
test
mov
loopne
lahf
adc
xchg
add
xor
mov
dec
lea
push
add
cld
cli
jb
and
bound
in
and
inc
jno
repz
cmp
xchg
push
and
jb
aas
add
rclb
lret
shl
imul
adc
sbb
in
cmp
push
inc
mov
pop
paddusw
scas
mov
xchg
pop
cs
adc
popf
jae
inc
mov
pop
dec
cmpsl
mov
cmp
ss
mov
cmpsb
mov
mov
addb
test
push
xor
aam
jb
cld
inc
or
arpl
adc
ljmp
add
insl
dec
dec
push
outsl
push
loope
js
outsl
jo
sti
out
pop
mov
rolb
shrb
add
and
xchg
mov
mov
jns
in
jo
enter
pop
cmp
pushf
popa
out
scas
jle
ss
cmp
shr
test
push
mov
ljmp
ficoml
pop
cmpsb
pop
js
xor
jmp
insl
mov
inc
pop
js
jl
xchg
out
pushf
xor
inc
sub
ret
call
and
ds
xchg
add
adc
cmp
lock
push
dec
xchg
in
mov
lret
jnp
push
mov
push
mov
clc
gs
popf
sbbl
fildll
dec
out
sbb
add
dec
xlat
mov
jmp
add
xor
lods
pop
rorb
mov
dec
leave
outsb
or
notb
pop
sub
in
jl
inc
sbb
jo
inc
sbb
and
sub
mov
inc
cltd
jl
push
sahf
dec
push
dec
xor
jns
cltd
movsl
aad
jo
out
adc
mov
add
in
outsl
movsl
fisttps
clc
int3
popa
addb
mov
jnp
test
add
bound
std
pop
push
test
mov
dec
loop
push
mov
out
into
faddl
dec
mov
inc
pop
mov
ljmp
pushl
sub
mov
lds
push
and
push
mov
ficoms
mov
scas
rorl
shll
mov
xchg
sahf
ret
scas
push
sub
rcll
pop
xchg
fwait
mov
inc
das
icebp
or
cmpsb
aaa
dec
mov
rorl
mov
fcompl
xor
push
out
fs
sbb
xor
jae
cwtl
repnz
fnstsw
mov
stos
push
cmp
into
fwait
xor
jl
stc
mov
sub
mov
mov
ret
lret
out
outsb
sub
pop
lods
jge
xchg
jge
jo,pt
aam
inc
cmp
pop
or
mov
push
sub
les
xchg
in
jo
mov
fbstp
aad
mov
shrb
fimuls
clc
push
add
push
xchg
jns
xchg
jbe
in
fsubrl
push
push
jo
out
push
iret
xlat
arpl
repnz
and
jp
shlb
in
mov
rcr
sarl
data16
pop
iret
test
popf
test
jecxz
dec
inc
ret
jecxz
shlb
in
pop
gs
cmp
push
mov
push
arpl
pop
mov
or
loop
cmc
mov
ret
pop
shll
outsb
jns
popa
xchg
push
jno
push
push
adc
hlt
add
adc
aad
jbe
pop
je
ds
pop
add
xlat
adc
adc
lds
inc
pop
push
mov
test
roll
pcmpgtd
sub
aas
gs
iret
lods
pop
cmp
push
jns
pop
xchg
ret
setb
das
lds
mov
cmc
loop
jo
pop
repnz
inc
jb
inc
push
int3
inc
pusha
arpl
pop
adc
addr16
das
enter
mov
jo
adc
xchg
jle
divl
clc
imul
mov
cltd
xchg
in
pslld
bound
out
lret
leave
pusha
push
pop
mov
mov
or
call
cmpsb
jl
cld
popa
movsl
sub
or
popa
lea
stos
leave
cld
scas
mov
mov
insb
and
std
or
add
in
sti
bound
mov
shrl
inc
dec
mov
loop
stos
lds
mov
inc
sub
or
aas
sub
int
mov
aam
pop
inc
inc
ret
add
and
in
stos
fs
mov
sbb
dec
ljmp
pop
sbb
dec
adc
and
cmc
push
loopne
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
repnz
xchg
push
mov
fisttpll
jae
fisubrl
fsubrs
ljmp
loopne
add
cmpb
adc
adc
in
sub
xor
ficoml
test
jl
call
lret
mov
pop
mov
movsl
xchg
mov
push
in
test
mov
int3
fists
in
test
shrb
loope
data16
jg
aad
xchg
jno
lcallw
dec
sti
sub
imul
mov
pop
xor
cmp
dec
je
es
push
inc
push
inc
add
cmp
cmc
inc
in
dec
jmp
fisubrs
popf
pop
inc
ljmp
fmuls
push
cmp
xchg
xchg
lret
sti
rcr
shr
rcrb
xchg
test
mov
xor
decl
enter
and
fcoms
jmp
push
scas
mov
jns
iret
push
jo
imul
sub
jmp
loopne
jo
dec
mov
pop
and
data16
pusha
xchg
xchg
xor
xchg
out
pushf
rorb
in
inc
insl
xor
add
cs
pop
loopne
cmp
cmc
lea
sub
scas
scas
adc
shrl
pushf
nop
fs
and
out
ss
rep
cs
mov
xor
lds
mov
jb
fwait
rcrb
mov
fisubrl
cmp
shrl
test
lcall
in
jmp
push
rorl
mov
popa
push
fwait
cmp
repnz
jle
and
xchg
mov
lods
mov
cmp
shl
mov
pop
sub
push
lret
inc
dec
cmp
mov
sub
mov
test
adc
mov
mov
cmc
push
cmp
jbe
push
rcr
mov
or
sahf
inc
test
push
adc
inc
xor
inc
outsb
bound
or
in
inc
push
dec
xchg
test
shlb
push
test
mov
mov
xchg
dec
fwait
sbb
test
dec
in
in
movsl
pop
push
cmpsl
mov
jle,pt
mov
hlt
das
out
in
push
cs
fisttps
adc
mov
adc
fldcw
add
push
lret
rorb
pop
jmp
jne
loope
pop
mov
test
popa
sbb
aam
sbb
jb
or
pop
popa
lret
bound
push
frstor
dec
mov
pop
rorb
insl
fisubl
hlt
xor
add
out
sub
mov
es
dec
cmpsb
psubw
xor
pop
sub
pusha
ljmp
bound
arpl
shlb
mov
popl
lahf
outsl
cmp
scas
dec
xchg
pop
fdivrs
jecxz
rclb
adc
mov
es
lret
lcall
ljmp
leave
pop
sub
cmp
scas
outsb
loope
xchg
sbb
arpl
inc
push
nop
stc
jg
push
add
scas
jnp
jmp
sahf
faddl
push
in
shll
test
fists
and
or
sub
push
subb
icebp
dec
lods
in
inc
loopne
shll
dec
je
push
jbe
int3
dec
in
out
dec
insb
dec
aam
add
frstor
call
push
mov
jno
loop
xchg
dec
mov
dec
mov
inc
cltd
mov
sub
mov
xchg
sbb
pop
mov
jl
jbe
mov
cmp
push
and
stc
loopne
push
mov
jb
scas
push
ret
pop
xchg
xor
in
and
std
sbb
mov
mov
icebp
jl
cmpsl
or
imul
dec
inc
and
iret
xor
fmull
xlat
pusha
loopne
mov
inc
aad
xchg
cli
cli
mov
pop
je
push
rcrl
mov
iret
inc
cmp
cmp
or
and
rolb
cmpsb
xchg
pop
xchg
xor
pop
sub
lea
lahf
adc
or
cmp
leave
stos
mov
dec
push
cmp
sub
pop
sbb
cs
popf
inc
or
adcl
sti
lods
sbb
or
sub
xor
dec
jbe
add
test
repnz
add
hlt
jle
xor
fisttpll
pop
inc
mov
inc
add
das
jno
das
filds
push
mov
xlat
dec
icebp
mov
sub
shl
out
inc
adc
adc
fildll
daa
mov
jg
and
mov
fdivrl
xchg
inc
fcmovne
stos
fsts
cwtl
adc
cli
mov
aad
mov
cmp
sub
rcr
xchg
dec
adc
jo
imul
test
rcrl
cmp
aad
mov
jbe
test
fidivrl
ret
jo
or
xor
test
xchg
mov
cmp
dec
inc
lods
cmpsl
lahf
pop
adc
sbbl
push
les
inc
notl
xor
xor
push
shl
pop
and
test
lahf
add
addr16
mov
aaa
dec
scas
sub
xlat
shl
cmp
dec
sahf
call
je
mov
out
repnz
mov
xor
xchg
popf
imul
leave
push
lods
ret
repz
loopne
pop
mov
add
pop
pop
pop
mov
in
cld
mov
and
pop
mov
icebp
add
push
push
jg
cmp
jmp
jb
mov
aam
sub
cld
cld
pushf
dec
xchg
lahf
pop
push
in
pusha
pop
inc
cmp
lcall
mov
mov
out
push
xorl
or
out
outsb
dec
dec
nop
pop
and
mov
loopne
sti
cmp
xchg
mov
nop
shll
fwait
push
loopne
into
inc
push
sub
xchg
shrl
adc
aas
into
jnp
add
fadd
sub
xchg
imul
jns
cmc
int
orb
or
or
hlt
lods
and
pushf
push
and
inc
dec
popa
mov
inc
faddl
in
nop
mov
movsl
and
push
stos
pop
icebp
fwait
xchg
popf
xor
fildll
sarb
pushf
out
cmp
cltd
fucompp
inc
mov
mov
call
lahf
lcall
lea
and
lahf
fwait
add
xchg
jns
addl
sahf
sub
out
push
scas
pop
cs
push
mov
movsl
mov
lret
scas
int
pop
add
repnz
mov
lea
in
pop
mov
dec
mull
andl
pop
pop
pop
push
std
xchg
out
or
scas
int3
test
mov
inc
pusha
lea
insl
bound
lods
inc
add
cmp
out
sti
ja
lds
repnz
mov
aas
mov
das
fnstcw
jmp
mov
stc
mov
sub
mov
xor
mov
jbe
dec
adc
fmul
sbbb
js
pushf
xor
dec
add
mov
addl
shll
insl
and
daa
mov
push
lock
xchg
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
mov
les
xchg
push
mov
pop
scas
fcmovu
jne
icebp
pop
jmp
shl
inc
pop
int
pop
in
icebp
xchg
cmpsb
stos
sbb
xchg
fwait
repnz
call
sbb
dec
out
push
imul
add
push
push
cmp
sub
cmp
pop
inc
mov
xchg
je
sbb
mov
iret
inc
xor
sub
pop
pop
sub
mov
mov
bound
lds
mov
mov
sub
cmp
cwtl
daa
andl
adc
adc
xor
jne
and
movb
ljmp
xchg
les
enter
push
insb
xlat
in
push
out
repnz
lea
add
out
aaa
push
int3
in
mov
aad
dec
add
loopne
adc
jno
call
dec
inc
inc
push
cmp
jo
in
and
shl
movsb
sub
vucomisd
clc
hlt
add
clc
inc
mov
lock
dec
mov
and
pop
stos
mov
xchg
loop
and
xchg
js
int3
or
daa
or
sbb
iret
jge
in
out
dec
fidivrl
loope
add
push
dec
jg
adc
jb
test
push
xchg
iret
int3
cmp
movsl
add
add
aas
adc
sbb
cmpsb
cmpsl
pop
inc
insb
push
xor
cli
fs
mov
test
ja
and
pop
fdivrl
cmp
push
test
adc
and
sub
or
xor
mov
mov
dec
push
sub
or
jge
subb
sbb
cmp
mulb
notb
and
push
inc
dec
scas
mov
pop
pop
or
xchg
sub
out
push
cli
arpl
fsubrs
xor
or
add
push
pop
test
scas
icebp
mov
dec
xchg
sbb
xor
xor
add
sub
mov
les
mov
loop
mov
popfw
pop
imul
in
push
inc
add
mov
scas
xor
popa
mov
jmp
xor
sar
xor
mov
xlat
les
mov
jnp
xor
fnsave
push
mov
std
into
xchg
roll
cmp
pushf
bound
push
cs
in
cmc
fstpt
mov
fwait
jle
rorb
adc
das
dec
xchg
mov
xchg
imul
dec
rorl
cli
add
in
dec
push
arpl
xor
mov
aad
shl
jl
dec
imul
out
lret
lea
lcall
cmp
scas
jns
fsub
xchg
fsubrs
add
cmp
xchg
push
cmp
mov
stos
fs
loopne
mov
mov
push
cmpsl
imul
jb
push
adc
or
mov
sbb
adc
mov
xchg
cmp
call
dec
daa
lret
lret
push
ljmp
adc
inc
xor
or
lahf
cltd
in
insl
push
xchg
jnp
mov
pop
shll
adc
or
xor
jp
outsb
sbb
fists
popa
mov
movsb
in
cmp
push
cmp
dec
lret
jg
scas
scas
arpl
add
xchg
mov
add
out
ficoms
in
stos
xor
mov
dec
mov
in
push
mov
cmp
jecxz
fists
out
xchg
aas
shlb
add
fisubs
leave
pop
dec
jmp
cmpsl
mov
pushf
ret
pop
loop
fwait
xchg
dec
cmpsl
fdivrl
mov
push
lock
dec
or
and
fdivl
loope
repnz
loop
cld
jns
and
int
push
fidivl
test
lods
mov
sbb
mov
mov
pop
push
dec
xchg
jp
out
pop
hlt
hlt
ljmp
out
mov
les
add
jmp
das
push
adc
fnsave
aaa
push
data16
dec
mov
dec
loope
icebp
icebp
cmp
loop
es
mov
mov
std
xchg
jle
xor
frstor
ret
mov
lret
int
test
addl
cltd
cmp
push
mov
push
ds
lret
cmp
pop
push
das
cmp
stos
lds
mov
mov
sbb
xchg
int
fiadds
scas
cmp
or
cmp
mov
fldt
mov
adc
xchg
fildll
mov
xor
xchg
add
xor
sti
enter
pop
clc
nop
add
inc
arpl
mov
cmp
aas
or
andb
or
push
dec
adc
sub
add
sbbb
lea
popa
adc
test
fdivl
push
adc
sub
shrl
adcb
fdivp
movsl
scas
and
gs
clc
sub
loop
push
xchg
and
and
inc
and
loopne
pop
jg
xor
stc
xchg
dec
push
adcb
gs
xlat
dec
mov
js
adcb
cltd
into
lret
in
push
and
movsb
nop
pusha
mov
add
mov
jb
or
outsb
jo
sub
mov
and
cmpsb
cmp
sub
inc
inc
mov
mov
push
xor
mov
dec
or
je
mov
and
fldt
jp
orb
sub
inc
or
jo
cmp
mov
sub
fldt
dec
imul
push
dec
scas
xchg
add
lret
lcall
dec
in
rorb
ja
test
popa
hlt
fwait
inc
lret
dec
mov
fisttps
xlat
push
ret
mov
xor
xchg
leave
cmp
and
mov
add
or
adc
lea
pop
scas
push
lds
cmp
adc
pop
in
out
mov
pop
test
jne
xchg
pop
mov
sbb
rclb
insb
mov
mov
fistpl
sub
imul
or
add
xchg
mov
pop
fwait
xchg
or
sub
and
insl
ss
in
add
imul
push
gs
sbbw
leave
push
loope
lds
jge
add
or
arpl
sbb
pop
add
dec
loopne
jno
shll
cmpsb
jb
push
lcall
sub
les
ljmp
xor
push
mov
es
test
inc
cmc
sub
aad
scas
cmpsb
lret
stc
jmp
pop
dec
inc
frstor
mov
inc
xor
add
push
mov
cmp
ljmp
fstpt
pop
jno
and
scas
popa
test
push
movsl
fsubl
iret
daa
cltd
dec
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
enter
jne
push
or
outsb
dec
js
sub
cmp
and
fdiv
jb
or
data16
rorl
leave
mov
js
push
sbb
icebp
ret
mov
pusha
jb
dec
push
pop
inc
mov
aad
lea
test
inc
movsb
add
sub
int
mov
cmp
or
in
mov
sarl
icebp
fdecstp
scas
fisttpl
call
jns
mov
mov
sbb
leave
stos
call
adcl
cmpsl
cmp
aas
sub
adc
pusha
std
cmc
sub
js
in
and
jbe
jnp
testb
enter
dec
filds
jge
mov
inc
mov
pusha
mov
clc
and
fdivl
push
mov
or
mov
sbb
fisttpl
mov
jne
mov
push
fstl
sti
test
scas
cmpsl
push
in
out
out
cld
sbb
dec
aas
inc
into
lcall
repz
jge
push
sub
aaa
jne
icebp
aas
mov
xchg
sub
jge
xor
fistps
dec
mov
pop
pusha
dec
divb
pusha
xor
addl
pop
mov
add
sbb
imul
mov
jmp
xor
insb
int
nop
or
movsl
lcall
lret
inc
loop
outsb
stos
sub
loopne
das
repz
aad
xchg
xchg
sbb
cs
dec
and
mov
sbb
bound
push
imul
xchg
mov
and
sbb
outsb
insb
and
fdivs
cmc
pop
xorl
jb
sti
aam
popf
inc
mov
add
cmp
mov
cmp
cmpsl
dec
dec
xchg
mov
mov
mov
out
add
cwtl
iret
in
jne
outsl
mov
cmp
xchg
adc
push
or
push
xchg
dec
fdivp
cmc
int
xor
inc
cmc
enter
loop
lds
xor
jecxz
shrl
out
pop
movsl
inc
hlt
jbe
push
sahf
jecxz
fstl
push
out
sub
jne
push
dec
out
jge
xchg
repnz
adc
sub
sbb
sub
xchg
add
jmp
push
shrl
mov
jns
shrb
xchg
mov
and
push
sbb
jp
scas
movsl
xor
inc
stos
testl
mov
dec
mov
fistpl
push
xchg
cs
sbb
pop
add
rorl
cmp
and
cmpsl
jns
jg
repnz
imul
icebp
pop
sbb
mov
dec
es
jmp
push
scas
in
add
popa
fnstenv
pop
ret
arpl
mov
mov
sbb
and
lret
idivl
stc
cwtl
push
ret
xor
test
clc
jb
in
lret
fiaddl
leave
scas
push
test
jb
dec
je
jno
add
cmp
mov
xchg
sbb
or
ficompl
cli
addr16
mov
adc
addb
aam
stos
inc
sub
mov
mov
push
rcrb
call
jno
bound
mov
sub
xorl
sub
out
repz
shlb
adc
stos
jno
in
push
dec
insl
push
inc
aam
jp
aad
cmpb
cmp
stos
pop
imull
and
lods
dec
inc
inc
inc
std
ja
push
insb
sub
pop
pop
sbb
imul
out
into
aaa
xor
pushf
mov
ds
jmp
gs
xchg
or
xor
data16
pop
pop
sbb
sbb
rorl
sahf
and
lret
das
xchg
iret
push
shlb
jle
cli
test
arpl
es
lret
out
mov
repnz
pop
mov
dec
add
in
pop
xchg
cmpsl
lods
int3
pop
and
jb
cmp
mov
arpl
fadds
push
mov
std
push
push
mov
lods
out
inc
cs
push
mov
add
sub
and
jno
dec
call
js
jl
in
cmc
pushf
cmp
mov
in
lods
aad
mov
sbb
test
aam
or
jae
out
cld
mov
loope
jge
push
and
rcrl
sbb
and
xchg
test
loope
add
cmp
xchg
scas
and
lahf
and
mov
je
jecxz
mov
pop
dec
sbb
iret
xchg
das
mull
aas
shrb
es
pop
jnp
or
sbb
mov
ljmp
mov
iret
lcall
dec
shr
fucomip
mov
rcr
inc
push
jl
cmp
iretw
add
pop
push
movsb
and
cmp
cli
cmp
lahf
outsl
lock
dec
adc
jae
fsincos
mov
xor
cmc
lds
out
adc
inc
fadd
cli
mov
mov
cwtl
cltd
mov
orb
jno
repz
cmc
jns
sbb
pop
lds
cltd
mov
mov
pop
outsb
mov
sarb
popf
in
enter
cs
push
inc
inc
adc
push
xchg
pop
jecxz
lcall
negb
cmpl
cld
xchg
verr
test
aaa
jmp
enter
mov
cli
adc
in
out
add
jo
call
or
inc
daa
js
push
or
inc
jge
push
lret
inc
xor
or
push
jno
or
clc
cmp
cmc
dec
loop
sbb
xor
stos
mov
push
push
mov
scas
iret
pusha
jl
lea
sbb
mov
sbb
lahf
inc
and
fcompl
inc
cmp
loope
push
test
mov
jne
or
ds
mov
mov
daa
mov
jae
or
add
sbb
add
mov
jecxz
and
pop
imul
push
jbe
sti
int
out
not
lahf
sbb
andl
outsl
mov
push
mov
fdivl
ds
pop
int
call
pushf
test
mov
int3
call
cmp
inc
data16
popf
inc
jg
hlt
xchg
sbb
jne
pop
pop
dec
ret
ret
jns
scas
pop
movb
mov
sub
pop
mov
addr16
lds
jp
out
add
or
out
pop
push
add
push
xchg
mov
lret
xchg
jecxz
fistpl
jge
push
pop
sub
fldt
addb
imul
cmp
das
mov
cmp
dec
pop
pop
inc
mov
loop
add
adc
rolb
xlat
aaa
xor
xor
xchg
imul
pusha
adc
roll
outsb
frstor
arpl
data16
inc
adc
jge
mov
cwtl
xchg
iret
stos
ret
sub
mov
lods
aaa
inc
cmp
inc
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
cmpsl
mov
inc
mov
ja
fsubs
xlat
fs
xchg
or
subl
jne
rcll
adc
xlat
repnz
jge
out
fnstenv
scas
push
aaa
cmp
int3
cld
clc
dec
mov
jmp
jne
xchg
fdivrs
outsb
jle
sbb
in
in
xor
aaa
fisubs
push
mov
in
xchg
mov
xor
daa
outsb
setge
nop
nop
and
xor
fcmovne
add
pop
xor
fs
fistps
adc
ss
mov
cmp
pop
aad
inc
je
xlat
icebp
das
sbb
ljmp
mov
loope
ss
andb
pushf
push
jge
push
jge
add
inc
mov
xor
pop
daa
neg
ss
cmp
lret
out
xor
jo
add
pushw
xchg
mov
outsb
add
or
push
sub
cmp
pop
into
mov
aad
dec
ss
sub
popf
cwtl
call
int
cmp
repz
pusha
gs
dec
inc
fstpt
mov
dec
pop
cmp
and
iret
mov
cmp
loop
stc
or
lret
inc
and
in
jg
adc
dec
repz
aam
aaa
sub
push
movsb
daa
sub
cmp
ret
cmp
xchg
sbb
mov
aaa
lahf
sbb
arpl
jb
pushf
outsl
notb
test
jle
xor
shl
adc
xchg
imul
loop
jbe
or
jg
adc
ret
stos
test
xchg
cwtl
testb
loopne
jle
mov
jle
or
int3
mov
mov
jns
xor
sbb
mov
xchg
xchg
or
dec
xchg
mov
xchg
insl
mov
dec
jg
stos
rolb
orl
jns
jns
aas
loope
movsb
rclb
push
lock
subl
daa
lds
js
xchg
js
add
out
xor
jnp
mov
inc
icebp
sub
ret
dec
inc
fisttpl
push
push
xchg
fisubl
leave
xchg
outsb
mov
or
adc
dec
pop
fcoml
push
das
je
mov
sub
loope
cmpsb
pushf
movsl
xchg
loop
outsb
add
scas
mov
imul
push
push
shl
xor
adc
add
arpl
xor
stc
jmp
sub
popa
popf
and
nopl
xchg
adc
jle
mov
mov
xor
dec
stc
and
scas
ror
shr
xadd
repz
jbe
and
rep
mov
out
jg
lret
adc
mov
cmpsl
rcl
je
rol
into
sbb
bound
lock
or
jae
callw
or
mov
xchg
adc
mov
adc
movsb
ret
loope
sub
or
in
in
stos
add
jne
add
xchg
paddd
inc
cltd
aad
gs
add
test
and
mov
fnstenv
ja
sbb
or
insl
pushf
xchg
xlat
or
mov
lcall
fwait
sbb
sbb
and
xchg
push
clc
nop
sahf
push
leave
xchg
adc
in
xlat
addr16
cmp
mov
mov
inc
jne
xchg
andb
inc
fcoms
and
mov
xor
ja
repz
movsl
add
mov
push
ror
adc
xchg
fwait
adc
add
xor
fmull
imul
and
pop
sbb
push
pusha
daa
mov
push
in
mov
xlat
ret
loop
mov
cmp
es
faddl
dec
out
outsl
popf
lret
mov
fcoml
test
fisttpl
add
mov
dec
mov
pop
sbb
jle
pop
repnz
vpor
sub
dec
fdivrl
int3
mov
xchg
out
xchg
mov
mov
mov
pop
jb
sahf
mov
cwtl
fisubrl
out
adc
adc
dec
popl
xchg
out
daa
sub
sub
sbb
xor
jae
sahf
dec
mov
sub
test
jge
mov
lahf
jecxz
data16
sbb
jo
ss
adc
out
fs
sbb
mov
rep
enter
lret
lret
cs
mov
lods
push
add
xor
cmp
sbb
in
push
out
dec
or
fdivp
mov
pop
jnp
jg
pop
out
sbb
ret
jmp
xorb
dec
arpl
jg
add
mov
xor
or
xor
sbb
fstps
lds
and
fdivrl
cmpsl
jl
into
sarl
mov
adc
arpl
aaa
mov
popf
inc
cmp
cmp
mov
xchg
xor
in
subl
lret
mov
divl
shlb
xchg
pop
pop
dec
or
sbb
shll
push
xchg
mov
fdivrp
mov
mov
inc
jne
stos
dec
pop
mov
xchg
cmc
test
sub
sub
mov
jno
fbld
gs
pop
int
addr16
int
je
lock
daa
mov
push
xchg
xchg
cwtl
nop
fiaddl
and
xchg
into
adc
add
push
les
or
sarl
int
lret
imul
xchg
sbb
xchg
pop
rclb
inc
daa
movsl
pop
mov
push
xchg
fwait
xchg
mov
xlat
popf
mov
mov
jns
mov
dec
or
imul
leave
xchg
xor
stos
pop
or
jp
jo
cwtl
jmp
mov
fs
psubsw
cmp
pushf
movsl
imul
mulb
cmpsb
leave
mov
xchg
test
add
cld
data16
mov
orl
imul
dec
mull
mov
cmp
in
cmpb
cmpsb
insb
cmpsl
popf
pop
pop
shrb
aaa
push
xchg
jl
dec
test
repnz
stos
loop
or
sbb
in
cltd
cld
mov
mov
es
push
lahf
mov
mov
sahf
adc
jae
push
das
mov
test
into
jecxz
mov
test
js
pop
ret
dec
daa
repnz
sbb
push
or
lret
cmc
int3
outsb
ja
inc
imul
dec
popf
movsl
and
cmp
mov
cwtl
aad
dec
push
xor
aaa
push
std
xor
negl
pop
or
xor
dec
std
mov
iret
adc
sbb
or
sub
das
jae
mov
sahf
mov
popf
mov
lfs
xor
or
rcrl
out
or
shlb
test
dec
idivb
hlt
pop
adc
push
imul
lret
mov
add
sbb
push
lods
fcoml
mov
dec
add
mov
pop
insl
push
add
sub
sbb
hlt
imul
int3
jnp
scas
pop
mov
pop
jg
push
inc
imul
jle
adcb
es
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
xchg
aaa
outsb
xchg
mov
add
and
adc
roll
mov
pushf
andb
shll
adc
inc
jmp
push
push
mov
in
adc
xchg
xchg
push
mov
pop
sbbb
das
stc
pop
mov
icebp
sti
ret
orl
pop
pop
fadd
outsl
fldl
mov
jnp
mov
and
insl
rorb
sbb
ds
inc
arpl
inc
sbb
cs
push
jo
push
das
mov
popa
or
push
int3
or
popa
dec
sbb
sub
push
pop
hlt
iret
imul
mov
sbb
lea
cmp
or
and
loop
fmulp
mov
dec
sub
xor
pusha
fld
xchg
inc
sbb
push
mov
fwait
clc
ret
xchg
movsl
xchg
sbb
lahf
mov
mov
lret
push
xorb
xchg
and
or
xchg
xchg
jns
js
cmp
mov
pusha
flds
pop
pop
outsl
fists
pop
and
sub
pop
cltd
scas
pop
scas
sbb
es
mov
test
dec
push
test
and
lock
jl
fchs
pusha
sbb
adc
decl
lds
int
pop
sbb
cmc
mov
adc
dec
cmpsb
mov
sbb
jae
jmp
add
jno
xchg
adc
popa
push
push
shl
and
in
cmp
xchg
and
add
and
lret
int
mov
mov
cmp
outsl
xchg
mov
cmc
pop
int
mov
test
mov
mov
rcrb
int
lret
js
cmp
sbb
hlt
cmp
push
inc
add
mov
outsb
jle
pop
xchg
popf
pop
add
mov
ret
pop
jb
xor
popa
cld
xor
fdivrs
jnp
jno
or
stc
adc
mov
push
call
lds
jp
mov
or
out
imul
hlt
adc
push
addb
out
push
mov
cmpsl
xchg
enter
push
mov
icebp
inc
dec
nop
dec
imul
hlt
xchg
daa
ret
dec
mov
fildl
int
push
xchg
scas
add
cmp
and
cwtl
int3
xchg
lods
push
add
cmpsb
test
adc
in
fnsave
push
fprem1
mov
mov
sbb
and
fldln2
mov
js
mov
lret
icebp
push
add
rclb
mov
ret
or
mov
stos
out
push
xchg
push
push
call
pop
xorb
int3
out
xchg
and
mov
loop
push
xor
adc
or
xchg
stos
jmp
cmpsb
mov
int
call
ror
js
adc
sahf
jmp
mov
adc
adc
ja
add
push
fstps
xor
jl
movsb
jecxz
call
push
mov
icebp
pop
push
and
dec
dec
mov
and
xchg
push
dec
sbb
rclb
mov
test
adc
aam
int3
enter
shlb
scas
cmp
push
call
jno
mov
cmp
shrl
mov
and
inc
add
cmp
sbb
jbe
mov
mov
push
or
push
pop
pop
stos
or
jno
imul
enter
movsl
pop
mov
dec
repz
jmp
pop
into
loopne
jmp
inc
xor
sahf
xchg
jmp
mov
push
shrb
mov
movsl
mov
loop
mov
sbb
cmpsb
jmp
mov
inc
dec
loopne
ret
aas
xchg
jge
push
and
or
push
lret
jb
mov
sbb
int
mov
push
imul
movsl
push
sarb
mov
in
mov
xor
psadbw
rclb
daa
cmc
ja
cmpsb
dec
inc
out
push
jmp
inc
mov
cwtl
test
mov
inc
andl
flds
loopne
or
cmp
sub
mulb
into
jecxz
adc
push
test
lcall
cmp
addr16
mov
out
xor
sub
xchg
inc
mov
mov
test
fimull
xor
pop
out
mov
iret
xor
mov
mov
outsb
std
shlb
mov
ret
xchg
repnz
mov
push
mov
cs
inc
test
jno
jg
mov
enter
jne
jle
test
or
outsb
test
push
stc
pop
dec
mov
ret
and
repnz
xor
shrb
sub
popa
inc
int
adc
lods
mov
cltd
dec
jb
sti
dec
jmp
dec
mov
in
imul
lret
mov
loop,pt
sbb
or
pop
mov
cltd
mov
jns
sbb
inc
mov
adc
jbe
stos
cmp
sub
xchg
pop
mov
repnz
and
lret
mov
rolb
cmp
arpl
ret
mov
fidivl
jbe
clc
loopne
movsl
pushf
jae
cmp
stos
pusha
mov
cmp
not
pop
test
xchg
inc
cmp
fld
pop
out
mov
test
in
inc
out
xchg
movsl
add
mov
sub
mov
mov
jle
push
enter
push
push
adc
push
fidivs
test
adc
ds
test
jmp
movl
bound
jbe
cmc
aaa
inc
mov
dec
das
xlat
dec
fiaddl
bound
out
stos
sbb
mov
mov
mov
dec
icebp
movnti
sbb
push
in
sahf
pop
push
testb
loope
fstl
push
mov
jp
jle
push
ljmp
imul
and
and
mov
jb
mov
inc
push
jp
xchg
ss
ja
dec
push
xchg
add
push
pop
dec
jmp
add
loopne
xor
and
jle
mov
call
data16
movsl
xchg
mov
push
subl
clc
rclb
insb
call
mov
or
xor
mov
scas
loope
jle
cld
orl
mov
and
scas
les
and
daa
loop
popf
jmp
cmp
lea
sub
fcmovu
mov
or
nop
add
mov
roll
mov
outsl
test
mov
dec
mov
push
jno
cmc
test
push
or
mov
mov
mov
fwait
inc
or
cmpsb
cmpsl
or
lods
or
xchg
in
inc
push
inc
addr16
add
dec
pop
dec
outsb
cmp
xchg
cmpsl
and
dec
aad
repz
das
adc
aad
loope
push
int
jno
mov
fcomps
js
inc
movsb
xchg
loopne
inc
jno
xchg
push
inc
cmp
sub
shl
insb
mov
out
add
and
adcb
add
push
inc
scas
jo
and
imul
dec
aad
fs
sahf
mov
mov
data16
enter
test
cmpsb
mov
fmull
xor
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
mov
lret
mov
ja
add
pop
pop
mov
or
mov
hlt
movsb
pop
js
movsl
hlt
push
scas
addr16
push
stos
je
mov
sub
sbb
jo
movsl
mov
cmp
stos
xchg
cld
aam
cmpsb
pop
lods
add
push
xor
shrd
xchg
and
jno
push
sub
sub
xor
ja
mov
shrb
jp
cli
mov
push
or
popf
xchg
hlt
sarl
cmpsl
sub
fsts
popa
cmp
dec
xlat
xorl
dec
push
push
out
loop
add
jne
adcb
jl
or
xor
push
sbb
mov
js
idivb
adc
cmc
aas
andl
scas
dec
or
out
cmp
repnz
mov
cmp
fcmovnb
lahf
pop
xor
sahf
pop
movsb
jb
cmp
mov
pop
sbb
jle
call
cmc
xchg
rcr
xchg
dec
cmp
xchg
icebp
xchg
jbe
lea
js
and
xchg
pop
decl
hlt
xchg
fs
cmp
xor
insl
cmpsl
imul
andl
fwait
ret
cwtl
sbb
cmpsl
add
jbe
fidivrl
or
mov
push
testb
fimuls
cmp
add
and
pop
pop
cltd
insl
sbb
sbb
aas
fisttpll
scas
pop
je
or
mov
xor
push
push
or
pop
push
add
fildl
sarl
movsl
cmp
mov
xor
cmp
decl
imul
lahf
and
into
nop
fistpll
jmp
movsb
leave
lcall
xchg
clc
repz
adc
mov
inc
inc
sbb
out
xor
add
ficoms
int3
fs
xchg
fistps
cmp
pop
rclb
clc
int
lahf
mov
cmp
test
repnz
je
add
scas
sub
js
cmp
push
dec
sarb
enter
dec
jb
lea
outsb
sbb
andl
mov
das
dec
mov
lods
inc
ja
daa
push
cmp
dec
arpl
mov
cmp
and
pop
out
push
ljmp
sbb
push
jnp
sub
sbb
sub
je
mov
jge
lds
jae
test
insb
ucomiss
fiaddl
out
mov
jnp
jbe
adc
jge
sbb
xchg
lods
cmp
and
push
cld
mov
sub
cmp
mov
xor
mov
adc
jmp
stc
jmp
pop
rcll
mov
and
mov
sub
fdivrp
int3
dec
nop
insl
mov
and
roll
outsl
dec
cmp
outsl
sub
gs
ds
lds
shlb
cs
sub
push
aam
mov
mov
mov
jbe
mov
ljmp
fcmovbe
popf
into
jp
lret
scas
and
jnp
mov
cmc
sub
cmp
mov
mov
clc
hlt
jbe
je
cmp
aad
and
lock
mov
jae
jae
push
adc
or
or
fldl
xlat
fistpl
jns
lods
jge
xchg
test
lods
cmp
or
cmpb
lar
or
pop
sbb
lea
sbb
dec
and
xchg
aas
mov
andl
fnstenv
sub
sbb
cmpb
push
xor
sahf
enter
out
add
daa
sti
in
push
in
cmp
fimull
sti
xchg
mov
leave
fwait
xor
xor
mov
sbb
mov
addr16
imul
lcall
jb
adc
mov
test
cmc
jo
dec
push
enter
mov
xchg
mov
mov
sbb
lea
int
fimuls
loopne
ss
pop
fs
dec
jno
mov
mov
std
mov
pop
pop
int
shrl
repnz
scas
movsl
fisttps
icebp
repz
leave
data16
dec
popa
ret
jns
jbe
xchg
fs
push
mov
stc
adc
cwtl
imul
mov
fdiv
mov
xchg
and
inc
add
xchg
stos
sbb
data16
out
jb
dec
pop
das
sbb
ret
cmp
mov
hlt
in
sub
rorb
std
enter
scas
iret
pop
aas
dec
sbb
in
mov
mov
test
or
push
mov
mov
jb
mov
mov
lock
mov
cmp
sbb
xchg
pop
fadds
subb
fmul
xchg
adc
nop
lds
les
jmp
xchg
mov
jae
lock
dec
jne
addl
mov
cli
mov
jbe
pop
rcll
arpl
adc
pushf
in
les
test
or
adc
sub
pop
sbb
pop
xor
mov
test
add
in
push
or
sbb
call
pop
hlt
and
shrb
imul
arpl
push
sub
dec
pop
iret
scas
add
fistps
out
fidivs
jmp
out
inc
push
in
jge
pusha
rcll
mov
cmpsb
sbb
xor
cmp
sub
lods
sub
pop
adc
sub
sbb
jp
cmp
adcb
dec
lods
lods
mov
movsl
mov
jmp
add
mov
jne
pushl
or
popf
mov
mov
test
mov
pop
in
enter
in
nop
dec
push
push
sbb
and
sub
lods
mov
lods
iret
mov
xchg
aas
mov
leave
pusha
loopne
data16
ficoms
cmpsl
sub
in
shll
dec
push
and
test
push
mov
add
mov
adc
dec
push
cltd
xchg
mov
jl
push
xchg
mov
and
xor
sbb
mov
mov
outsb
xor
xchg
and
cmc
mov
cmpsb
pop
sarl
mov
mov
and
outsb
mov
jl
icebp
ret
push
cmp
push
mov
xor
and
mov
jmp
sbb
pop
mov
jns
inc
dec
mov
sbb
adc
hlt
jl
adc
mov
cs
pop
scas
sbb
push
add
add
and
insl
repz
pop
pushf
jl
pusha
inc
sub
add
jno
xor
pop
and
sub
adc
cmp
xchg
call
ficoms
subl
xlat
sbb
in
or
test
roll
and
ret
cld
sbb
cmpl
not
ljmp
push
xor
call
test
inc
addr16
jmp
jmp
loopne
jns
pop
sbb
dec
stc
dec
shlb
dec
cmp
mov
xchg
jo
lods
mov
mov
popf
in
jg
xor
mov
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
mov
ds
jp
ja
jae
xchg
movsl
aas
into
in
xorb
xor
ljmp
cwtl
dec
mov
scas
push
pop
lds
push
sub
and
insb
call
adc
stos
popa
sti
push
cmpsb
xor
pop
cmpsb
das
jne
jo
jnp,pt
jb
ss
push
xor
fidivrs
inc
ret
mov
xchg
jb
cld
sub
nop
jl
data16
jecxz
push
cmpsb
jb
sar
cltd
stos
mov
mov
dec
xor
inc
stos
inc
mov
lds
stos
stos
pop
push
fwait
aad
dec
mov
aas
movsb
and
jae
sub
jmp
arpl
cmp
cltd
sub
add
inc
adc
std
sahf
cmpl
push
xchg
aas
in
cmp
loope
test
scas
call
das
sbb
stos
add
jns
mov
scas
sbb
push
mov
imul
xor
ficoml
pop
jo
in
and
adc
push
std
or
int3
cmpsb
pop
push
jne
lds
adcl
xchg
pop
pop
pop
inc
and
xchg
xchg
je
jae
ret
dec
lahf
leave
shl
jae
inc
inc
daa
jo
dec
faddl
adc
add
in
xchg
inc
inc
test
enter
cmpsb
push
pop
addr16
lret
and
idiv
push
sti
inc
aas
push
out
push
sbb
ret
scas
scas
push
add
mov
jge
popa
dec
push
out
mov
pop
lock
sti
inc
fldln2
dec
insb
jg
add
imul
sbb
imul
std
cmp
xor
loop
loope
cwtl
outsw
data16
xchg
cld
test
xchg
mov
fstenv
xor
sub
stos
fwait
and
mov
dec
int
ja
into
mov
or
call
pop
cmp
das
cmpsl
fcmovne
mov
mov
add
movsb
sub
repnz
icebp
sbb
mov
test
add
insb
adc
pop
fstpt
loop
adc
lcall
or
aas
loopne
es
push
push
sarl
pop
fmul
mov
push
cli
xchg
dec
sub
clc
loopne
subl
push
sbb
andb
cwtl
sub
je
fs
popa
cmp
pop
sbb
push
and
adc
dec
push
sub
adc
push
subl
jp
sub
push
test
movsb
mov
or
jno
and
xor
cmpsb
cmp
inc
pop
cmp
add
mov
jmp
outsl
dec
adc
mov
ret
jae
fistpl
mov
cvtpi2ps
and
xchg
mov
cmp
repnz
fwait
pop
dec
sbb
or
sbb
adc
nop
push
add
jecxz
bound
sub
gs
std
loope
sbb
lahf
stc
sub
dec
mov
adc
shl
mov
push
mov
enter
xchg
test
lock
cmp
cmpsb
aad
push
mov
or
popf
or
je
outsb
push
sbb
ljmp
clc
in
jb
les
xchg
push
pop
mov
shlb
cmpsb
adc
xor
sub
xlat
and
inc
sub
shrl
pop
and
pop
jle
sbb
iret
sub
pop
imul
mov
push
sub
ljmp
and
shlb
jb
imul
jl
fidivs
cli
fnsave
adc
mov
pop
call
test
into
cmc
imul
not
bnd
inc
add
fstp
rcll
fimull
lcall
aas
mov
imul
xchg
sbb
mov
xchg
ja
and
dec
cwtl
scas
lret
ret
loope
ret
mov
or
xchg
imul
bswap
xchg
dec
outsb
daa
aad
mov
sbb
cmp
add
into
push
xor
fldt
push
push
clc
lock
inc
push
cmp
lods
shr
ret
in
aaa
dec
nop
mov
mov
inc
rol
mov
adc
gs
sub
jno
sub
jnp
faddp
inc
sub
adc
pop
cmpsb
sbb
ffreep
dec
movsb
pop
leave
jge
not
ljmp
push
bound
cmc
push
cmp
mov
jge
mov
sbb
cmp
fsts
aad
xchg
repz
test
adc
push
shrb
imul
mov
pop
adc
lock
out
adc
lret
add
add
lcall
xlat
pop
das
fwait
jo
jo
push
aas
pop
loope
fdivl
jp
mov
scas
push
mov
push
test
inc
dec
std
bound
xor
outsl
mov
sti
xorl
addr16
pop
jo
scas
and
cs
and
notl
popf
imul
fisttpl
mov
adc
push
mov
adc
mov
bnd
dec
fbld
add
pop
ja
andw
xorl
scas
stc
aad
testb
and
fnsave
out
xchg
icebp
xor
push
cmp
scas
jne
mov
lods
shlb
test
push
add
mov
mov
xchg
sub
or
ret
mov
jne
fsubp
push
mov
sub
dec
pop
xor
inc
mov
mov
jge
out
int3
mov
outsl
jp
add
icebp
int3
arpl
bound
pop
xchg
test
inc
mov
push
insb
fnstsw
loopne
push
shll
repnz
icebp
pop
adc
mov
add
call
adc
push
add
cltd
sbb
jmp
adc
dec
inc
xchg
lret
add
mov
cltd
bound
clc
jp
push
fnstenv
sbb
notb
adc
out
popf
imul
aaa
jbe
out
xchg
mov
push
or
sbb
shll
inc
hlt
icebp
dec
dec
and
ljmp
mov
stc
gs
xchg
jb
jg
inc
loop
lahf
push
sarl
pop
ret
mov
sbb
imul
mov
inc
add
sub
test
push
mov
rorl
xchg
rcrl
repnz
mov
xchg
test
xor
mov
sub
stos
arpl
lret
mov
jp
loope
push
repnz
loope
not
jge
in
adc
jns
add
es
xor
int
xchg
bound
adc
fnstcw
xor
pop
cmp
fnstsw
out
push
pop
sub
pop
mov
ja
pop
mov
out
call
outsl
jnp
mov
cmc
test
lret
sbb
loope
adc
and
sti
pop
sbb
jo
scas
pop
pop
ds
out
stos
lcall
jge
lahf
and
enter
inc
addb
out
js
inc
add
push
sbb
or
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
test
push
ja
dec
aaa
scas
les
xchg
shrb
push
ret
sbb
aad
leave
sbb
sbb
mov
mul
sahf
in
dec
fwait
mov
xor
test
aaa
mov
jne
jg
jnp
mov
jo
cmp
and
int
movsb
sahf
jns
sbb
jge
xchg
and
push
jl
lahf
leave
lds
ret
add
ficomps
sbb
push
insb
cmp
add
dec
ja
dec
ret
mov
mov
or
in
addb
pop
js
push
inc
ret
mov
or
mov
add
bound
js
sbb
addr16
out
rcrb
or
cmpsb
push
mov
outsb
mov
lret
pop
into
ret
xchg
adc
ror
push
clc
popa
scas
and
mov
je
or
mov
aaa
cwtl
shlb
jle
mov
dec
or
imul
mov
mov
push
push
aad
sahf
loop
lahf
mov
jp
fcmovu
mov
pop
dec
inc
ljmp
aaa
push
pop
jo
add
adc
sub
add
out
inc
jl
jns
mov
loop
shlb
cmp
fcmove
jge
popf
mov
mov
fstps
inc
add
inc
fisubrl
fwait
mov
ret
popf
ficoml
sbb
loope
jecxz
in
adc
lea
in
pop
fldenv
pmaxsw
push
shrb
add
test
dec
sbb
xor
cld
ret
call
rorl
sti
sbb
stos
imul
les
aad
lcall
inc
subl
mov
and
insl
inc
scas
nop
or
repz
cmp
xlat
inc
ret
mov
sub
or
ljmp
push
call
cmp
test
dec
insl
pop
repnz
aaa
dec
sarb
mov
xchg
pop
out
mov
popfw
sub
xor
outsl
lea
imul
enter
mov
push
mov
cmpsl
ljmp
fcoml
pushf
pop
out
das
mov
dec
rol
cmc
push
push
or
or
mov
in
push
cmpsl
sbb
push
sub
insl
xor
cld
sub
mov
je
mov
add
pusha
sbb
daa
add
xchg
cmpsl
imul
add
fimuls
sbb
or
sbb
cli
or
mov
adc
adc
or
jns
aam
pusha
sub
into
int3
stos
outsl
stos
cmp
pop
push
fidivrl
dec
sub
mov
jo
repnz
push
sub
cmp
lcall
ret
inc
mov
mov
xchg
mov
fld
or
stos
xchg
push
mov
mov
dec
lods
jmp
xchg
and
fistl
or
faddp
push
rcll
cmpb
mov
negb
cwtl
mov
cmp
aas
and
pop
or
cmp
aam
push
adc
jae
inc
lea
fnstcw
hlt
pop
stos
jmp
les
pop
or
mov
mov
imul
and
popf
popa
clc
cmp
xlat
push
mov
movsl
or
rcrb
mov
sbb
leave
inc
push
or
arpl
adc
lds
jl
outsb
loope
mov
jg
cwtl
mov
sahf
pop
dec
cli
test
subl
jns
std
push
ds
pop
dec
notb
lods
pop
inc
adc
mov
push
je
les
and
inc
sbb
shrl
shr
in
inc
sub
nop
ja
lods
add
push
mov
sub
stos
andb
sahf
fdivr
push
add
out
les
pop
mov
ljmp
jg
inc
mov
fistpll
andl
repz
loope
jb
mov
mov
mov
push
inc
lahf
daa
movsb
adc
out
repnz
jg
cmc
cwtl
int3
inc
xchg
in
popa
aaa
lods
js
xor
cmpsb
push
xchg
cmpl
inc
mov
lahf
stos
sbb
xchg
in
shlb
in
dec
push
sbb
add
add
outsl
sub
movsl
repnz
stc
sbb
xor
pop
xchg
aam
inc
push
jb
jge
test
lods
mov
aas
sbb
mov
xor
loopne
cwtl
inc
pop
je
push
ja
pop
push
popl
enter
adc
mov
ljmp
rorb
cmp
mov
cwtl
sbbb
cmc
lods
fwait
push
cmp
outsb
mov
xchg
loopne
pop
sbb
int
pop
pop
movsb
aad
xchg
pop
popf
push
pushw
sub
mov
cld
fdivl
mov
ror
std
adc
jbe
cmp
scas
enter
adc
insb
rorb
mov
jecxz
ret
nop
je
outsl
inc
inc
fldl
out
fistpll
and
int3
in
lds
jae
cwtl
push
push
scas
ffree
hlt
and
decb
cmp
xor
mov
loopne
dec
adc
or
inc
daa
mov
push
sbb
inc
test
lcall
inc
insl
xchg
push
or
rorb
xchg
test
sub
jb
or
xchg
push
mov
sbb
outsl
jge
sbb
mov
mov
or
jl
push
sub
pushf
dec
lahf
subl
xchg
sub
fs
stc
aam
ds
movsl
xchg
xor
in
in
scas
xchg
out
sub
aaa
push
and
jnp
dec
mul
dec
and
and
jnp
jno
dec
jnp
jl
push
or
sarl
mov
lds
cmpsb
rcrl
pushf
shll
mov
cmc
mov
xchg
in
mov
out
xchg
rcll
pop
icebp
fadds
xchg
fdivrl
mov
das
scas
es
mov
xorb
arpl
orl
loopne
andb
aad
mov
jmp
inc
mov
lahf
sub
pop
pop
out
or
lahf
ljmp
aas
jnp
pusha
lds
clc
movsb
mov
cmpsl
cli
fldcw
xchg
mov
add
imul
test
pop
add
dec
jns
cmc
mov
sub
arpl
outsl
mov
cmp
stc
test
outsb
inc
mov
bnd
popa
dec
orb
arpl
jl
push
cmp
push
pop
int
sbb
insl
test
sub
and
loop
not
sub
sti
sub
xor
mov
fdivs
pop
lock
repz
sahf
out
cwtl
call
in
or
mov
ss
mov
add
xor
lods
or
test
xlat
mov
cmpb
lret
in
xchg
dec
and
xlat
mov
stc
dec
inc
into
daa
pop
adc
cmc
fs
aaa
mov
jge
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
pop
int3
bound
xchg
pop
and
test
mov
gs
mov
imul
loope
outsb
addl
mov
add
addl
mov
loop
xorb
cltd
repnz
mov
mov
je
adcl
pop
into
cmp
call
jo
loop
mov
xchg
xor
daa
jnp
mov
out
and
inc
mov
pop
rcrb
adcl
in
push
xchg
cltd
into
cmpsl
add
repnz
mov
bound
outsl
insl
loope
out
push
mov
add
sbb
sarb
ret
dec
insb
mov
mov
faddl
pop
fidivs
repnz
imul
movsl
scas
sbb
subl
lods
enter
cmp
aad
jnp
jp
push
push
pop
pop
sbb
je
jns
test
push
imul
and
ficomps
mov
lcall
scas
cltd
sub
jmp
push
xchg
fisttps
mov
sbbb
xchg
sub
aaa
shlb
shll
sub
cli
pop
cmpsl
movsl
push
pop
add
add
mov
leave
sub
and
das
adc
loop
popf
outsl
push
inc
xor
stc
push
rcll
and
bound
add
pusha
cmp
lahf
jnp
push
loop
and
mov
dec
in
adc
push
loopne
or
loope
inc
js
aas
add
mov
mov
inc
aad
or
in
sub
push
xor
loop
mov
inc
popf
mov
jmp
es
pop
aaa
insl
mov
lret
in
jbe
cmp
cmp
das
test
dec
cli
sub
divl
lret
and
in
and
cmp
fdivrs
es
in
xchg
mov
inc
dec
adc
inc
inc
inc
in
sbb
and
pop
arpl
pop
inc
cltd
mov
adc
movsb
jb
punpcklbw
scas
and
jno
bound
and
movsb
std
in
ret
mov
mov
mov
xchg
adc
int3
test
out
movsb
jns
and
inc
adc
jnp
pop
outsb
inc
push
push
dec
xor
shrl
pop
lahf
out
mov
clc
sub
or
repz
cmp
mov
add
jl
adc
or
pusha
enter
dec
xchg
push
dec
aad
mov
imull
lahf
xchg
jmp
test
pop
imul
dec
int
roll
xchg
testb
sbb
mov
pop
shll
rep
lods
outsl
lret
lds
scas
mov
pop
loope
sub
int3
push
movsl
imul
pop
mov
inc
stos
lods
stos
mov
sub
or
fisttpl
or
lret
xor
mov
pop
or
or
mov
pop
out
mov
clc
mov
and
outsl
pop
lcall
pop
mov
pop
add
lahf
std
dec
imul
fimuls
cmpsb
pop
jle
jle
sub
test
aam
pop
aas
divl
pop
adc
dec
mov
adc
xor
fcomip
aam
ret
mov
mov
pop
aad
mov
mov
stos
pushf
outsl
ss
mov
pop
pop
je
test
lock
das
mov
sub
mov
aas
ja
cmp
push
mov
and
push
mov
in
insb
xchg
cltd
jge
cli
jbe
xor
rclb
jne
popf
stc
insb
jb
xchg
xchg
int
addb
repz
and
xor
lret
pop
and
add
mov
aam
inc
lods
out
sub
sub
jae
pushf
xchg
fs
loop
leave
fildl
xor
shlb
cmpsb
jne
push
out
xchg
gs
sbb
in
shl
adc
test
adc
in
push
ja
adc
or
mov
push
out
aas
xor
push
rorl
jg
fcomps
push
jmp
push
xchg
aad
mov
shrb
cmp
lahf
dec
cmp
sub
dec
arpl
push
inc
cwtl
data16
adc
lret
sbb
jno
popa
and
adc
mov
into
sahf
push
mov
jbe
xor
into
bound
pop
inc
xchg
inc
mov
inc
add
inc
xlat
sub
lea
push
pushl
insl
and
imul
cmc
loope
sarb
cmp
lcall
out
push
mov
mov
cmpsb
cmp
sbb
inc
pop
gs
mov
sti
stc
nop
pop
cltd
out
ret
scas
ror
cmpsb
test
icebp
or
pop
dec
mov
xor
mov
fidivrs
call
lcall
outsl
cli
stos
aaa
clc
inc
enter
jp
lahf
sub
mov
popa
inc
cltd
hlt
hlt
repz
or
xor
xchg
jp
xchg
shlb
call
insb
jno
and
loopne
cs
ss
bound
jl
aas
lods
pop
xor
mov
inc
mov
mov
and
mov
mov
loopne
push
aad
and
jmp
dec
clc
or
sbb
xchg
sbb
jno
cli
adc
outsb
xchg
mov
pusha
jg
rorb
test
mov
lock
cltd
pushf
pop
clc
dec
jmp
fldl
test
or
pop
mov
sbb
stos
movsb
push
cmp
cli
inc
sbb
arpl
xchg
fwait
mov
inc
dec
je
pop
std
test
xchg
lcall
mov
xchg
jnp
shll
cmpsl
lods
and
lock
fcomps
xchg
test
leave
gs
ljmp
loop
xor
mov
aaa
cmp
sbb
or
sbb
sub
mov
arpl
dec
cmc
adc
push
cmp
xor
lahf
jp
decl
popf
hlt
or
orl
insl
insb
shll
mov
rcl
jnp
and
js
push
xor
mov
data16
sbbl
adc
inc
jns
mov
xlat
push
lock
ficoms
les
xchg
test
or
fwait
cmp
call
xchg
jge
pushaw
aaa
data16
int
pop
jle
les
in
pop
addr16
mov
push
mov
call
jge
enter
sub
push
jnp
leave
daa
adc
sbbl
or
inc
sbb
xchg
subl
adc
lea
jl
jne
movsl
imull
rcrb
imul
lods
mov
xchg
xchg
leave
cmp
popa
test
jno
jecxz
je
rcll
out
xchg
pop
shlb
jg
mov
pushl
clc
or
jmp
push
out
mov
push
pop
xor
mov
loopne
lods
or
jp
iret
add
aaa
add
xorl
xchg
rol
or
dec
mov
pop
xor
push
pop
fisttps
push
lods
mulb
in
shlb
rolb
icebp
pop
add
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
ret
outsl
dec
ja
dec
movsb
popa
stc
shlb
push
je
mov
mov
in
and
sbb
aaa
ret
inc
add
nop
jbe
mov
sbb
lret
add
adc
dec
add
out
push
insl
dec
lods
mov
pop
jnp
cmp
xchg
pop
fbld
sub
jg
jo
sahf
lds
cmc
sbb
stos
cwtl
adc
shlb
sbb
mov
out
xor
repnz
pop
inc
pop
das
inc
ret
cmp
test
inc
dec
aaa
sbb
outsb
pop
cmp
pop
xor
xor
xchg
mov
aam
and
sahf
enter
mov
or
rolb
or
divl
and
pop
orl
push
adc
add
adc
dec
inc
xchg
mov
adc
jns
jg
cmpsl
mov
add
pop
or
fcom
cmc
xor
cli
test
push
das
arpl
aas
fmull
dec
sbb
rol
mov
and
lods
add
ja
sub
mov
jbe
lret
bound
inc
mov
mov
int
cltd
push
mov
jb
and
inc
les
jmp
stos
lock
or
cmpsb
push
add
in
clc
jge
inc
inc
and
mov
and
aas
jbe
pop
inc
jne
enter
fstps
sub
push
xchg
or
cwtl
sub
into
cs
pop
mov
sub
mov
std
adc
lret
addr16
adc
dec
fs
add
push
mov
daa
test
inc
xor
fs
or
add
arpl
hlt
test
xorb
lahf
pop
jge
les
add
sub
mov
cs
fmuls
lods
lahf
movsb
mov
stos
orl
jae
insb
dec
push
stos
push
test
mov
das
sbbb
mov
nop
imul
lea
repz
jecxz
and
or
sub
pop
mov
imul
sub
inc
nop
shrb
and
pop
dec
inc
sub
nop
mov
aam
std
shlb
push
mov
sbb
lret
sub
mov
in
rclb
cmpb
stc
cmp
lock
rcll
into
xchg
sub
lret
jae,pn
fisttpll
mov
lods
jb
or
shlb
loope
inc
loope
push
aaa
movl
cmp
lods
in
stos
xchg
pop
scas
in
inc
adc
scas
fs
lock
mov
movsl
sub
push
xor
and
loop
out
enter
or
dec
adc
inc
inc
sub
and
push
test
add
push
inc
fs
sbb
mov
inc
leave
addr16
data16
bound
inc
dec
push
test
pop
repz
loope
pop
jbe
sbb
lcall
mov
push
xchg
in
add
std
xchg
sti
xchg
setg
int
pop
test
std
icebp
sub
scas
fimuls
push
repnz
pop
push
stos
test
xchg
lock
mov
cmp
adc
cmp
jge
ds
xchg
jbe
es
adc
scas
or
scas
shll
mov
shll
xor
scas
jge
cmp
xchg
sbb
dec
cltd
pop
mov
cmp
test
bound
inc
mov
aad
scas
adc
jg
inc
subb
xchg
dec
loope
sub
ret
jecxz
ret
or
or
addl
lea
push
xchg
mov
rcl
stos
push
mov
pop
fisubl
jmp
pop
mov
mov
es
pop
jb
inc
ficoml
ja
enter
cmp
ja
cmp
push
push
mov
sahf
in
scas
cmp
or
add
out
or
adc
fisttpll
or
in
jl
insl
es
xchg
andl
insb
xchg
mov
fdivrs
int
inc
mov
outsb
lahf
mov
pop
out
scas
or
mov
pop
ror
int3
bound
data16
fdivrs
or
bound
fldenv
out
pop
and
push
imul
mov
or
or
insb
adc
xor
pusha
test
stos
sbb
outsb
mov
mov
push
test
cltd
shrb
iret
jp
xor
fnstenv
sbb
out
fimull
adc
xor
xor
imul
jle
jmp
js
repnz
or
cs
shlb
jno
xor
pop
insl
bnd
lea
xor
lods
mov
ljmp
inc
push
lret
cmpsl
les
pop
jg
jl
pop
cmp
aaa
outsl
and
into
pop
pop
pop
cmp
mov
sub
in
pop
xchg
xor
inc
inc
push
push
andb
icebp
icebp
pop
insb
call
scas
fisttpll
mov
cs
push
cs
jg
out
xchg
or
popf
es
jl
fimull
fdivrs
dec
outsl
mulb
pop
das
sbb
push
cmp
or
popf
into
repnz
enter
dec
lock
sub
out
jge
push
int3
jnp
popa
inc
and
adc
push
cmp
mov
inc
mov
mov
push
in
stos
jge
outsl
dec
aaa
mov
js
movsl
pop
adc
mov
xor
mov
mov
popa
cmp
in
mov
inc
xor
cwtl
push
inc
imul
pop
push
pop
das
es
jle
sbb
cmp
lret
or
push
shrb
cwtl
sub
daa
dec
bound
bound
stc
adc
lods
xchg
nop
cmpl
rcll
cld
jge
mov
ret
push
out
push
rcrl
lcall
shl
dec
and
andb
iret
test
out
inc
in
cld
inc
je
cmpsb
repz
or
or
popf
test
mov
mov
or
icebp
mov
dec
jle
movsb
inc
jbe
imul
or
adc
cs
shlb
pop
push
mov
mov
mov
scas
loopne
dec
sbb
jge
mov
jg
cli
pusha
fsub
ljmp
mov
xchg
in
mov
mov
insb
dec
sahf
mov
cmp
popf
xchg
out
roll
aad
fldt
ret
push
add
adc
movsl
outsb
or
inc
nop
stc
dec
cmovb
test
cmp
adc
das
push
bound
nop
test
push
pop
popf
out
popa
out
in
fisttps
push
in
in
sarl
jnp
xchg
mov
data16
popf
xchg
out
icebp
mov
mov
push
cmp
bound
ret
push
and
and
jne
or
inc
rorl
fwait
push
jo
pop
lds
sbb
xchg
pop
push
lahf
repz
mov
adc
or
mov
sbb
cmpsb
ljmp
mov
jmp
push
add
and
stos
inc
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
rol
xchg
cmp
ja
aaa
movsb
xchg
out
in
cmp
or
and
fisttpl
sub
push
xor
mov
sbbb
or
das
inc
lret
xchg
mov
jo
scas
imul
push
gs
lcall
sbbl
test
mov
loopne
mov
pop
insb
dec
sub
outsb
sar
pop
jo
mov
dec
mov
pop
dec
clc
push
lret
je
cs
in
adc
mov
sub
dec
or
jne
jno
or
mov
push
lcall
dec
xor
orb
sarb
push
fistpll
aad
sbb
xor
dec
cmp
fwait
pop
cmpb
sbb
xor
mov
daa
subl
adc
adc
mov
xchg
sahf
jg
fnstenv
gs
es
inc
adc
inc
aad
imul
leave
icebp
pop
movsb
ja
js
lea
ss
shl
sub
clc
and
stos
out
icebp
mov
jne
jmp
daa
mov
fisubl
inc
xor
pop
sarb
pop
jmp
rolb
sti
jl
call
sti
insl
pop
je
pop
movb
mov
iret
cltd
sub
xor
out
mov
jns
push
iret
andb
sub
jg
lock
in
adc
cmp
sbb
rcr
int3
movl
xchg
xchg
lods
imul
stos
dec
ficoml
cmpl
stc
out
in
pop
pusha
mov
pop
mulb
adc
adc
dec
lock
lock
sbb
imul
adc
adc
sbb
aaa
mov
jge
faddp
rorl
ret
sbb
dec
fmuls
in
cltd
cwtl
inc
lds
pop
or
lcall
sbb
aam
lods
stos
clc
je
mov
mov
adc
adc
pop
or
push
push
add
push
bound
pop
pop
cmc
mov
sbbb
call
inc
inc
lret
mov
pop
stos
jo,pt
bnd
cmc
or
enter
jbe
mov
popf
inc
push
xlat
lret
push
xchg
leave
cmpb
fs
in
jae
out
sub
jae
cli
leave
daa
dec
xor
or
mov
ret
and
jmp
pop
ffree
aaa
xchg
push
adc
je
mov
in
sub
arpl
sub
and
adc
std
loop
add
hlt
xchg
out
mov
jb
es
ja
cmpsb
pusha
pop
cmpsb
jle
jne
rclb
mov
fld1
inc
jmp
push
pusha
lret
mov
inc
leave
fcompl
out
mov
repnz
xchg
fs
in
popf
xchg
std
jo
pop
or
roll
mov
rorl
addb
adc
lcall
sbb
rcrb
mov
push
jge
js
jl
inc
cwtl
inc
xor
les
cmpl
popa
or
xchg
hlt
ret
std
notl
sub
outsb
pop
pop
stos
or
call
test
xchg
dec
xchg
lock
aam
in
rcrl
fimuls
cmp
dec
test
pushf
addr16
push
push
stos
pop
in
in
mov
add
lea
ficoml
dec
test
adc
push
adc
sbb
test
xor
loop
loopne
push
call
inc
gs
push
decl
push
xor
fbstp
jo
stc
add
and
jmp
adc
cwtl
dec
ja
jl
out
push
pop
es
lods
push
push
ljmp
leave
inc
shll
push
add
iret
mov
jnp
mov
sub
push
mov
test
call
leave
lods
xlat
dec
fwait
cmp
mov
imul
xchg
mov
call
push
fidivrl
shlb
sbb
pop
js
insb
pop
repnz
dec
test
out
adc
mov
mov
xlat
mov
mov
pop
pop
push
ljmp
jnp,pt
movsl
mov
mov
loop
and
scas
divb
rcl
loop
jmp
jnp
daa
addr16
inc
xchg
repnz
push
or
lock
jbe
lret
adc
das
mov
enter
call
adc
mov
adc
repnz
cmp
mov
fidivrl
sub
xchg
mov
sub
inc
aas
push
cmc
mov
movsb
fcompl
jle
aad
sbb
xchg
sub
lret
mov
out
push
mov
cmc
sub
lods
es
jecxz
push
call
dec
lcall
pop
std
cmc
mov
popf
lcall
fwait
mov
jl
stc
or
sbbl
and
jns
adc
aam
into
jl
test
dec
out
adc
dec
cmc
xchg
lock
jbe
jo,pn
and
cltd
dec
ror
xchg
add
cs
and
aad
sub
rcr
inc
pop
popa
inc
jnp
gs
push
xor
outsb
cmp
pop
repz
flds
js
pop
fimull
dec
outsl
cmpb
sub
push
jge
and
inc
or
adc
rolb
arpl
xchg
lahf
fidivrs
dec
jbe
push
test
call
jl
sub
dec
out
ret
outsl
popa
nop
lahf
fdivl
adc
sbb
mov
sbb
stc
dec
movsb
scas
xchg
mov
scas
mov
rol
pushl
aad
or
push
inc
in
xor
jge
inc
add
loope
mov
lcall
ja
pmovmskb
adc
xor
out
xchg
jb
je
in
out
add
pop
aas
add
xchg
stos
sbb
pop
mov
scas
mov
cmp
dec
test
lahf
insl
int3
xlat
andb
jl
das
xchg
repz
mov
stc
push
pushf
fmuls
jae
faddp
xchg
mov
xchg
ss
in
cltd
ja
sbb
pushf
aaa
push
adc
daa
mov
ljmp
orb
cmp
adc
aaa
clc
imull
dec
mov
sbb
and
ret
movsb
sbb
popa
loop
cmp
popf
push
push
or
and
dec
ds
add
popf
xchg
movsb
push
arpl
iret
hlt
daa
das
jno
fdiv
mov
subb
dec
push
ror
xchg
pop
fs
push
push
pop
jle
pusha
cmp
jae
add
mov
push
xor
push
pop
and
jmp
xchg
xor
and
test
push
and
cmp
outsl
pop
pop
dec
js
aam
mov
mov
and
insb
shll
xlat
sbb
jae
push
dec
es
popa
hlt
in
call
adc
imul
out
out
mov
insl
inc
rcr
inc
mov
adc
cmp
sub
pop
dec
adc
je
shl
fimull
popf
cltd
insb
addr16
cmp
adc
xorl
jo
pop
nop
in
jmp
dec
mov
inc
mov
dec
repnz
or
inc
in
or
ret
or
test
popf
jp
insb
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
dec
mov
ja
inc
mov
pop
es
pop
pop
cmc
mov
and
ficompl
ret
call
or
and
frstor
mov
movsb
mov
adc
adc
cld
sub
adc
arpl
mov
aad
iret
mov
inc
jp
insl
jg
fsub
inc
push
jb
mov
push
jge
ss
push
adc
jle
cmp
mov
and
push
or
mov
xor
fisubl
pop
lock
hlt
mov
arpl
push
cli
testl
adc
adc
aam
add
sbb
adc
test
imul
insl
in
pop
sbb
in
mov
popf
jae
sbb
movsb
sbb
and
dec
dec
dec
xchg
mov
adc
mov
xchg
std
inc
lahf
pop
clc
cmp
xchg
ficoml
inc
out
leave
stc
and
js
fimuls
dec
lods
or
xchg
push
push
mov
pop
mov
ret
inc
xchg
dec
iret
je
jnp
add
popf
cmp
addr16
cmp
mov
push
add
outsl
shl
inc
lock
lods
pop
lret
push
repz
bound
scas
sti
call
fbld
jno
dec
lahf
cmp
or
push
push
dec
mov
outsb
stos
in
data16
aaa
adcl
insb
mov
lahf
mov
mov
sub
out
repz
iret
add
pop
out
mov
pop
mov
push
sub
dec
and
xchg
movsb
aaa
dec
loope
jne
mov
inc
outsb
mov
sbb
jl
in
xchg
arpl
jmp
inc
scas
jge
xchg
mov
stc
sbb
dec
inc
mov
into
push
icebp
or
lret
jmp
pop
mov
pop
sub
push
in
jp
xor
mov
jnp
adc
mov
daa
mov
adc
in
jecxz
jg
incb
in
fcmovu
outsb
jmp
xchg
dec
xchg
inc
pushf
mov
lahf
adc
iret
fildl
push
push
sub
mov
sarl
repnz
pop
cmp
leave
in
adc
shrb
clc
inc
ficoms
jecxz
xlat
jno
ret
arpl
lret
js
out
fisttpll
dec
cld
out
sbb
cmp
ret
test
jmp
or
sbb
dec
orb
fcmovb
ljmp
stc
xchg
xchg
leave
adc
stos
push
rcrb
fsubr
sub
js
hlt
cmp
push
ret
iret
je
das
mov
scas
push
bound
jns
imul
fsubrp
xchg
mov
in
inc
subl
or
movsb
and
shll
dec
ja
ljmp
pop
lods
jle
movsl
cwtl
fdivp
lea
fsubs
out
call
repnz
mov
das
pop
cli
pop
xchg
sub
lahf
pop
cmpsb
js
cmp
push
sub
mov
jl
cli
insl
xchg
popf
dec
test
cmp
xchg
or
cs
mov
divl
aad
jo
les
in
push
push
push
outsl
test
add
pop
adc
pop
and
pop
push
repz
sbb
push
sahf
mov
xor
popa
mov
rolb
lahf
arpl
cmp
cmp
iret
mov
xor
or
fsubrl
mov
add
test
in
or
lock
fsubr
insb
sub
pop
or
push
mov
add
mov
push
lock
iret
or
push
sbb
cmp
inc
dec
aas
in
dec
or
clc
arpl
pop
mov
or
inc
cs
ret
mov
sahf
mov
jp
pop
push
daa
je
rolb
dec
fcmovnu
mov
cmpsb
adc
sti
fwait
das
roll
jae
notl
int3
or
lahf
aad
pop
sbb
shlb
pop
movsl
iret
sbb
dec
adc
rcll
fadds
cmp
repnz
mulb
stos
pop
cmp
xchg
ret
icebp
cld
mov
xchg
jge
fistpl
mov
add
addr16
cmp
pop
push
leave
pop
mov
lock
push
sbb
mov
sbb
push
in
leave
test
inc
jmp
scas
mov
mov
xorb
test
inc
dec
hlt
jno
lcall
sbb
addl
dec
inc
shll
adc
dec
cmpsb
das
cmp
xchg
fwait
andl
movsb
nopl
dec
add
outsl
mov
ror
dec
adc
je
shr
fiadds
popa
mov
push
cltd
mov
sbbl
and
or
xchg
shrl
push
sti
xor
mov
fiaddl
mov
push
dec
popf
loope
mov
scas
outsl
and
push
push
mov
jecxz
mov
mov
lcall
mov
mov
mov
or
loope
xor
mov
icebp
inc
test
add
sub
mov
icebp
les
mov
out
ficoml
sbb
dec
mov
out
fldt
xchg
or
lock
arpl
push
test
cmp
mov
jo
mov
repnz
out
ljmp
popf
xchg
nop
negb
push
cmc
pop
xchg
test
je
push
arpl
sub
xor
jne
lret
in
sbbb
imul
scas
and
push
leave
cwtl
popf
out
jg
rorl
pop
loop
bound
xchg
and
aam
les
mov
aad
mov
pop
and
or
pop
adc
inc
fldcw
scas
or
adc
call
repnz
mov
lret
cmp
xchg
test
scas
roll
subb
dec
jmp
mov
jl
je
jb
jle
add
leave
cwtl
jns
xchg
test
jnp
xor
sbb
adc
add
aas
loopne
loope
and
test
lea
test
cmpsb
xor
add
bound
inc
push
scas
mov
jecxz
push
sbb
mov
movsb
cmp
sahf
imul
push
sbb
scas
outsb
jns
mov
inc
ffree
je
fs
mov
lods
add
es
mov
gs
push
jnp
cmp
mov
clc
jb
and
icebp
into
mov
pop
add
aaa
rcrl
push
rolb
sbb
loop
jbe
sbb
test
xor
fdivs
subl
or
cmp
es
ja
xchg
mov
xchg
sbb
cltd
loope
inc
jmp
pop
cmp
jb
gs
std
lret
add
cld
add
sbb
push
fcoms
xchg
test
cltd
mov
in
xorl
adc
loopne
popf
cmp
jne
add
adc
adc
sbb
bound
lds
cmp
xchg
dec
mov
testb
cmpl
mov
and
dec
arpl
scas
mov
mov
push
jb
in
xchg
mov
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
adc
add
ja
push
jg
xor
inc
mov
mov
adc
loop
push
xchg
insl
stc
mov
jnp
insb
sub
push
stos
xor
into
lret
dec
jae
xor
mov
inc
cmp
test
in
out
in
jb
stos
cmp
negl
or
xchg
add
lock
jmp
jge
jp
popa
jge
dec
insb
notb
pop
aad
jecxz
xlat
gs
push
mov
pop
lret
mov
stc
aad
or
lds
insl
scas
ror
cmp
lcall
cmc
orl
cli
xchg
sbb
lahf
pop
imul
insl
shlb
xchg
cmp
dec
fisttpll
pop
outsb
ficoms
adc
push
or
roll
mov
jns
xchg
je
fimull
jecxz
js
sub
mov
fnstenv
sub
cli
sarl
jg
imul
pop
sub
or
mov
dec
lea
jnp
adc
mov
shll
add
mov
xor
fcom
dec
jns
rorb
mov
sbb
fwait
mov
repnz
xchg
inc
jge
jo
fists
push
shll
adc
mov
cmp
mov
mov
jne
and
mov
lret
sarl
jbe
mov
hlt
aas
mov
and
mov
fsubl
cs
loopne
leave
rcrb
fwait
cmp
jbe
dec
jo
mov
sub
add
pop
xchg
jnp
mov
lret
cmpl
fistpll
in
rol
fistpll
pushf
fstpt
cmpb
pushl
mov
sarl
pop
sub
and
incb
mov
add
outsb
cmp
scas
fistps
shl
add
push
lcall
adc
sarl
cmp
sbb
popf
add
mov
enter
push
js
pop
test
test
mov
add
or
cmp
xchg
loopne
pop
mov
fwait
loope
mov
xorl
movl
enter
xor
scas
sbb
jo
push
lods
and
movsl
test
dec
xchg
sbb
movsl
and
scas
loopne
mov
jnp
inc
es
sbb
in
pop
add
xor
popa
mov
mov
xor
pop
push
sbb
cmp
inc
xchg
and
imul
mov
leave
repz
cmp
arpl
dec
ret
and
test
sbb
sbb
or
ds
inc
fstpl
xchg
fiadds
jnp
jbe
cmp
push
fisttps
shrb
fs
out
jge
mov
jmp
and
in
xor
mov
sub
jle
and
shl
cvtps2pi
fstpt
aas
dec
xchg
mulb
out
mov
cs
shlb
cld
icebp
pop
in
lds
or
stos
test
mov
arpl
aad
cmp
int
hlt
in
mov
fimuls
inc
rcrb
xor
or
jge,pt
cmp
jnp
enter
hlt
sub
in
mov
popf
std
mov
test
cwtl
pop
push
les
int3
xchg
dec
loope
call
mov
pop
xor
xchg
repz
lret
inc
hlt
xchg
lds
add
ficoml
rcrl
xor
je
pop
fisubrl
mov
test
inc
xchg
ja
push
sbb
mov
adc
mov
dec
gs
mov
xchg
lods
cmpsl
movsb
das
xor
cs
add
sub
xor
dec
stos
adc
mov
push
daa
aad
subb
lds
push
testb
jb
imul
out
cli
sahf
iret
sbbb
cltd
push
inc
dec
das
dec
cltd
mov
jne
and
mov
push
scas
cmpsl
mov
mov
js
adc
pushf
mov
xor
mov
inc
xor
daa
cmp
shrl
jmp
cld
movsl
push
je
in
dec
mov
pop
rorb
lds
fs
imul
sbb
lahf
ss
movsl
rolb
mov
sub
lock
fadds
mov
mov
aad
xchg
scas
and
fidivl
pop
dec
sub
mov
dec
aaa
xchg
cmp
inc
clc
mov
xor
jne
xor
test
pop
xchg
fisubl
lea
jge
pop
sub
call
mov
rcll
cmp
mov
xor
dec
fisubs
sbb
push
lcall
and
pop
lods
daa
in
movsb
pop
loop
ds
in
out
or
sbb
pop
shlb
insl
jl
syscall
repnz
push
adcb
in
mov
pop
xchg
nop
mov
shll
and
test
nop
shlb
cmpsl
out
aam
push
or
pop
dec
xchg
out
fisttps
orl
gs
loope
lea
lret
fmuls
mov
cmp
fimull
faddl
and
or
mov
mov
ja
int
inc
mov
call
arpl
pop
push
jbe
iret
push
loop
xor
jle
mov
push
jp
es
cmp
mov
pop
repnz
sub
pushf
lcall
cmp
nop
fnstcw
add
cmpb
icebp
push
pop
mov
sti
and
jmp
or
es
adc
sbb
xchg
pop
fld
orl
mov
push
rcl
pushf
add
sarl
xchg
cmc
xor
ret
ret
add
cmc
mov
pop
push
lret
aas
nop
cmpsb
inc
ja
std
dec
lea
xor
not
in
cmc
bound
xor
xor
add
cmpsb
test
mov
and
movsb
fimull
lcall
ret
and
sahf
inc
inc
movsb
stos
jmp
pop
xor
add
xor
movsb
xchg
mov
sbb
out
dec
pop
lcall
mov
das
dec
in
or
lahf
test
scas
lcall
mov
mov
cltd
aas
mov
and
push
cld
or
adc
imul
cmp
pop
lds
ja
mov
push
mov
fsubr
ss
into
push
jge
loop
loopne
xchg
mov
filds
xchg
outsb
clc
imull
pop
inc
or
dec
jge
leave
mov
mov
out
dec
mov
les
mov
insl
xlat
movsl
push
ljmp
jns
jle
add
xchg
jnp
xchg
fcomip
inc
les
push
xor
dec
xor
pop
lahf
xchg
cld
pop
mov
adc
outsl
cmp
outsb
add
xor
jle
cmp
inc
xorb
push
das
adc
xlat
cmp
imulb
sbb
mov
loopne
daa
push
jae
shl
fbld
rorb
push
in
add
sub
add
loope
imul
jmp
add
or
or
adc
push
ja
sub
mov
xchg
inc
mov
out
mov
inc
outsl
call
mov
movsl
jnp
or
loop
popf
fmull
fisttpl
jnp
jg
mov
inc
mov
fadds
loop
mov
je
in
fidivs
imul
es
or
mov
in
adc
inc
mov
daa
xor
hlt
insl
jbe
aaa
ret
jle
or
jne
imul
ds
in
je
xor
push
lock
lret
shl
and
mov
test
hlt
sub
add
iret
das
aam
jg
xchg
add
cmp
cmp
jns
mov
pop
jg
clc
sti
mov
daa
add
adc
push
fdivrs
addr16
ja
mov
sbbl
mov
dec
jo
sbbl
mov
inc
movsb
mov
fsubs
in
adc
mov
pushf
mov
lret
xchg
enter
xorl
std
mov
xchg
test
or
push
jg
test
out
dec
and
in
cli
inc
addr16
lock
aad
fsubrs
out
int3
test
decl
out
push
shlb
or
popl
cltd
adc
push
cmp
sahf
pop
cmc
mov
xor
cs
mov
gs
push
sbb
sub
pop
jnp
divb
cmp
mov
lahf
xorl
mov
xchg
into
cmc
ret
out
sub
push
les
adc
out
jp
cmp
mov
sub
fistps
insb
inc
cwtl
scas
outsb
adc
xchg
add
es
dec
stos
lea
or
inc
inc
sbb
pushf
subl
or
or
dec
mov
inc
push
outsl
xchg
mov
dec
jge
jo
or
into
adc
mov
sub
cmp
push
push
imul
imul
loopne
aas
mov
xor
mov
and
pop
gs
dec
dec
adc
scas
hlt
inc
add
adc
popa
dec
jp
dec
jle
negl
into
pop
jmp
sub
scas
popf
cld
dec
leave
cltd
sub
cmp
pop
push
pop
imul
dec
sub
push
jle
and
and
loop
cmp
sub
divb
push
adc
mov
xor
xchg
sbb
jmp
pop
sbb
pop
jae
in
push
inc
ds
push
cmpb
setne
pusha
xchg
testb
adcl
adc
sbb
adc
inc
sub
or
jg
mov
aam
jl
dec
out
xchg
pop
cli
sbb
push
shr
or
xchg
mov
mov
jo
adc
fistl
push
push
jecxz
daa
scas
lods
lret
ljmp
jne
cmp
popf
mov
mov
ljmp
dec
popf
adc
xor
push
inc
and
pop
jno
stos
mov
ret
cmpsb
xchg
pop
out
into
mov
call
into
jne
pop
out
mov
aaa
adc
lret
lock
movsb
xchg
ss
cmp
or
shrb
ja
mov
sbb
enter
sbb
xor
roll
stos
les
add
dec
xchg
das
sbb
sub
adc
xor
pop
cli
pop
jge
jmp
pop
mov
mov
mov
and
jno
jbe
xchg
loopne
dec
or
cmpsl
insl
dec
idivl
and
in
cmp
jno
inc
xor
jp,pt
repz
out
or
mov
mov
sbb
adc
dec
sub
bound
outsb
in
jp
cltd
adc
xor
aam
fsubrl
out
cmp
outsb
pop
jnp
push
inc
push
pusha
pop
es
mov
ret
rorb
lret
mov
add
adc
xor
sahf
mov
push
dec
push
cmpsb
addb
mov
fcoml
xchg
dec
nop
cmpsl
mov
aaa
insl
test
dec
les
add
aaa
outsl
imulb
insl
mov
xchg
xchg
icebp
mov
mov
test
das
mov
sbb
div
mov
outsb
xchg
popa
scas
jns
add
sub
mov
jns
arpl
pop
orl
and
lock
and
inc
loop
clc
pop
aad
into
jg
idivl
adc
adc
ds
sub
pop
pop
mov
dec
daa
cmp
pop
push
mov
mov
xchg
inc
pop
fidivl
jp
cmp
psubq
xchg
mov
mov
sub
push
icebp
iret
lock
jecxz
mov
faddl
mov
pop
cmp
repnz
int
mov
dec
fwait
sub
in
jnp
repz
jno
cmp
aam
iret
xchg
xchg
loop
sbb
mov
gs
mov
or
ret
pop
mov
dec
jns
fildl
imul
jmp
mov
cmp
mov
or
mov
adc
cli
shll
ret
loop
jg
pop
mov
sbb
jns
movsl
pop
mov
jg
repz
rorl
cmp
jo
xchg
inc
adc
xchg
iret
jecxz
xchg
nop
lds
inc
xchg
mov
xchg
out
addr16
xchg
ret
insl
mov
cld
loope
fsubl
jae
dec
or
push
ja
add
xor
sub
sub
push
sub
idivb
fs
mov
mov
mov
push
movsb
pop
push
sub
adc
or
push
ret
aad
pop
sbbl
dec
js
call
orl
imul
loopne
jle
ds
loope
mov
xchg
cmc
mulb
ja
addr16
inc
or
pop
sbb
push
insl
test
lods
ljmp
es
aad
hlt
cmp
gs
es
pop
inc
sbb
aas
or
cmc
jo
pop
ret
aam
dec
mov
adc
and
dec
cmp
addr16
inc
sbb
and
pop
xor
enter
add
leave
sub
ret
inc
fmuls
pop
sbb
adc
lahf
testl
into
fcomi
aaa
cmpsl
mov
ficomps
mov
pop
jmp
popf
subl
out
mov
cmc
mov
ljmp
popf
mov
sub
cmpsl
jg
into
ret
rolb
andl
jg
xor
push
mov
jb
cmpsb
adc
lock
lret
push
push
sbbb
xchg
mov
cmp
test
lcall
push
ja
adc
test
dec
imul
sub
adc
aaa
sbb
mov
cmc
xchg
aad
inc
and
insl
jecxz
inc
stc
cmovb
and
xlat
loop
mov
mov
std
mov
int
popa
push
in
xchg
mov
pop
cmc
mov
add
jns
das
push
adc
repnz
ret
cmc
adc
push
pop
scas
mov
aas
jp
and
mov
adcl
jo
lret
in
std
popl
sbb
sti
sub
iret
mulb
dec
movsl
stc
iret
repz
mov
inc
add
testl
mov
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
call
decb
ja
out
popa
lret
leave
repz
scas
and
movsb
repnz
sti
inc
mov
add
popa
ret
inc
loop
popf
lahf
mov
add
test
mov
pop
out
es
cmp
adc
mov
cltd
jmp
mov
andb
mov
ds
aam
mov
lahf
mov
rol
std
mov
cwtl
mov
cmp
clc
cltd
daa
jbe
gs
dec
fists
add
xorb
aaa
daa
mov
test
movsb
mov
les
push
mov
enter
dec
rorb
cld
ja
fstps
scas
les
sbb
outsb
mov
mov
aam
lods
pop
mov
push
or
mov
mov
dec
jne
std
sti
xor
inc
sar
sbb
popa
add
push
cmpsl
divb
mov
mov
jno
ds
push
lret
inc
je
sbb
xorl
jo
cmpsl
daa
cmp
in
xor
insb
jne
adcl
ret
xchg
lcall
lock
xor
ljmp
mov
mov
mov
pop
cmp
dec
aas
push
ja
loope
jecxz
test
stc
xchg
xor
addr16
pop
xchg
movsb
leave
es
mov
add
push
ss
cmpsb
jge
sub
sbb
sub
inc
rclb
repnz
jo
int3
stos
and
sbb
je
sbb
cmp
movsb
add
dec
jne
add
fisubrs
jle
pop
sbbl
dec
xchg
outsb
jg
adc
mov
enter
out
pop
pop
pop
mov
outsl
dec
cmp
cltd
stos
adc
mov
xchg
arpl
scas
inc
movsl
adc
sbb
lret
or
or
xor
xcrypt-ofb
cmpsl
outsl
jmp
jae
dec
fstl
shll
jecxz
xchg
cmp
cmpsl
inc
lahf
hlt
cltd
scas
inc
push
lcall
lds
mov
xlat
xchg
imul
inc
out
fdivl
add
add
ljmp
and
xchg
mov
into
repnz
jo
xchg
adc
push
adc
inc
popf
cli
dec
add
xor
add
adc
adc
sub
add
mov
iret
mov
cmp
dec
push
push
xchg
std
push
pop
shll
adc
mov
sar
push
inc
and
adc
push
int
cmc
std
dec
inc
push
xchg
inc
idivb
mov
add
sbb
inc
pop
sub
ss
nop
cmp
lahf
mov
xchg
sti
call
mov
les
mov
icebp
mov
and
sahf
xor
jae
in
inc
cmpb
shlb
popa
adc
jne
sbb
adc
pop
dec
jl
xor
test
js
ja
dec
lods
fdiv
and
ror
dec
addr16
minps
push
jns
mov
xor
mov
xor
pop
test
test
dec
xor
stos
pop
js
cmpb
inc
dec
inc
mov
pushf
push
dec
add
test
adc
xchg
mov
inc
xlat
repnz
lods
popa
out
push
mov
sbb
shll
mov
ss
popf
and
fwait
es
sbb
jae
sub
mov
cmp
and
mov
inc
add
js
jae
mov
mov
popf
outsl
push
xor
lods
add
out
es
push
imul
sbb
jg
lea
gs
jnp
xor
test
sub
jl
js
addr16
pop
push
repnz
sbb
push
or
lahf
adc
insb
lock
add
pop
push
mov
dec
push
fwait
push
gs
outsb
jnp
lock
xchg
jae
pushf
dec
mov
dec
insl
push
lahf
in
pop
and
repz
scas
je
cmp
inc
arpl
dec
cld
cmp
cmp
into
stos
mov
xor
rorb
scas
jg
les
adc
iret
jne
jg
das
adc
lods
mov
xchg
je
xor
insl
leave
ds
jns
lret
adc
pop
mov
pop
sahf
bnd
roll
in
and
clc
roll
jecxz
mov
pusha
pop
mov
dec
pop
aad
lret
cmpl
jle
mov
lods
outsb
imul
inc
shrl
shr
xchg
xchg
hlt
pop
sbb
stc
jne
movl
xchg
clc
test
test
repz
or
xchg
push
jno
loope
cmp
pop
hlt
inc
mov
nop
inc
sub
sub
cmp
xor
pusha
shr
xchg
jne
jecxz
inc
xchg
sbb
jmp
test
dec
adc
cmp
testl
lret
shr
stc
mov
or
leave
and
xor
loope
data16
popa
scas
mov
insb
prefetcht2
adcl
xchg
mov
and
shrb
push
jns
lods
inc
imul
sar
ljmp
push
inc
adc
jb
inc
push
adc
push
or
and
or
xchg
mov
outsb
pop
pop
daa
xchg
jo
hlt
clc
cmc
pushf
or
jb
lods
push
shlb
pop
dec
mov
mov
aas
adc
cmp
and
in
sub
cmpsl
and
pusha
or
call
mov
jl
outsl
jl
fisubs
iret
jae
arpl
pop
orb
mov
jns
fdivrs
mov
push
mov
xor
dec
cmp
aam
sbb
sub
pop
and
and
and
mov
push
cmp
sbb
out
jnp
repz
xchg
int
inc
stos
scas
loop
sbb
hlt
or
xchg
cld
dec
dec
mov
add
enter
sub
fwait
xor
or
in
add
pop
insb
rorl
xor
fwait
mull
cwtl
lock
cmpsb
mov
sbbb
cmpsb
cld
rcrl
fs
addr16
adc
loop
xchg
dec
insb
sub
sbb
pusha
adc
dec
cmpsl
in
adc
push
cmpsb
test
inc
notb
icebp
jg
repnz
int3
jo
loop
sub
daa
xchg
pop
jns
ficoml
dec
sbb
sub
dec
xchg
jns
bound
mov
mov
add
fildl
mov
fs
inc
push
adc
jbe
xlat
dec
jb
and
inc
jecxz
cli
mov
mov
push
int3
or
shll
sti
mov
cltd
adc
movl
cmp
and
push
popf
lock
pop
hlt
sbb
jmp
testb
mov
lods
loope
loopne
lcall
add
daa
mov
in
out
ds
sahf
xchg
inc
xchg
xchg
pop
jns
inc
shll
sub
push
lock
adc
push
icebp
fld
in
xchg
adc
fldcw
xor
pop
insl
in
pop
cmp
jbe
cmpsl
sbb
aad
rcll
stos
ljmp
push
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
push
mov
add
xchg
popa
add
lahf
int3
clc
data16
mov
mov
lret
das
das
shlb
jg
jbe
push
xchg
push
hlt
inc
aam
mov
fmul
shlb
or
push
mov
sbb
mov
lds
jmp
stos
in
outsl
jl
pop
add
lret
movsl
in
dec
jbe
loopne
mov
stos
ss
faddl
je
add
js
je
je
or
mov
or
faddl
les
jg
pop
mov
sbb
in
sub
xchg
mov
mov
mov
jo
dec
xlat
jmp
cmpsl
jle
aad
ljmpw
fimull
or
sbb
out
nop
in
sti
popf
lret
imul
outsl
fst
aam
repnz
rcrl
imul
or
loop
xchg
jb
xor
loop
rcrb
sbb
test
cmpsl
mov
dec
mov
lahf
pop
xchg
lods
pop
push
hlt
mov
inc
shrb
movsl
push
out
popf
aas
sarl
dec
shll
dec
and
out
pop
adc
jge
fiaddl
je
cli
lods
jle
outsl
movsb
movsl
jae
iret
cli
xor
enter
push
adc
jp
les
sub
and
xchg
jne
jb
in
push
clc
insb
cmp
pop
divl
lock
add
xchg
xchg
lret
icebp
pusha
lahf
or
dec
mov
out
mov
adc
jae
rcll
mov
cmp
popf
pusha
xlat
and
sbb
fdivl
mov
movsl
mov
push
or
insb
pop
lock
test
js
loopne
icebp
xor
mov
xor
inc
cmp
xchg
jl
test
in
xor
call
push
dec
cmp
outsl
mov
lods
cli
dec
mov
repnz
sarl
ficoml
call
das
or
push
or
xchg
jmp
outsb
push
stos
mov
imul
clc
xor
jnp
jg
push
pusha
xchg
in
jb
scas
pop
out
mov
popa
add
sahf
cmc
adc
dec
call
data16
mov
jg
jp
ret
push
xor
dec
sub
mov
sahf
out
icebp
aad
xor
sbbl
sub
dec
sub
jbe
mov
icebp
xor
push
out
fst
add
inc
scas
not
rorb
dec
adc
or
lret
fnstsw
inc
out
mov
fistpl
ss
push
push
popf
pop
test
fldenv
cmp
lcall
sbb
sahf
adc
adc
xrelease
fcmovu
int3
insl
in
inc
adc
add
loope
sub
cmp
xchg
aas
pop
sub
ljmp
lds
out
fdivrl
and
push
jecxz
fildl
push
dec
xchg
adc
xchg
mov
out
int
and
jb
cli
lret
pop
outsl
stos
mov
frndint
pop
xor
sahf
fidivs
xchg
and
addb
rcr
cmp
dec
cmc
shlb
sub
push
cltd
adc
and
insb
mov
inc
test
ja
stc
sub
xchg
lahf
xlat
xor
add
jl
pop
adc
pop
jmp
addl
mov
leave
fisubl
ss
aaa
aas
jae
jmp
jns
sbb
cmpsb
sbb
dec
ret
fcoml
and
push
sbb
int
and
les
inc
adc
mov
pusha
dec
mov
fxch
jl
cld
fists
push
fxch
gs
inc
sub
mov
or
fdivs
subb
push
jae
push
dec
stos
mov
popf
shll
adc
or
mov
xchg
or
lea
in
mov
push
scas
test
or
ljmp
mov
push
mov
aaa
cmpsb
bound
xor
fisttpll
hlt
out
jmp
sbb
data16
sub
mov
loop
lods
outsl
lods
ds
pusha
xchg
lahf
aaa
loope
xor
xchg
mov
les
out
jp
or
cmpl
gs
pop
or
push
inc
outsb
add
shrl
inc
and
cmpl
xlat
sbb
sbb
push
lods
ljmp
jl
adc
push
je
sbb
inc
test
add
outsl
popa
rep
addr16
inc
mov
cmp
cmp
pop
call
test
dec
data16
daa
push
xchg
lods
or
jns
mov
enter
sub
xchg
pop
test
jo
pop
rcr
movsb
inc
cmp
imul
lods
pop
adc
fcomps
ljmp
sbb
test
xrelease
stos
xchg
mov
mov
mov
jecxz
js
daa
out
cmp
inc
pusha
xor
aad
jg
push
mov
insl
mov
jp
cmp
leave
xchg
push
xchg
je
mov
ja
iret
push
push
xlat
xor
notrack
mov
mov
data16
xor
pop
dec
adc
in
mov
mov
inc
out
dec
push
add
push
pop
mov
divl
sarb
push
sahf
xor
test
mov
dec
loop
sub
sub
ret
cmc
xor
pop
jnp
insb
push
je
or
addr16
scas
mov
lds
test
leave
jno
es
outsb
push
mov
data16
mov
in
mov
push
jns
add
je
lret
pusha
lock
mov
or
dec
lock
nop
out
pop
dec
std
and
jmp
arpl
ja
cmp
in
dec
jo
dec
sub
dec
sbb
mov
lods
repz
pop
add
push
ds
or
aad
std
cmp
les
hlt
adc
loop
push
les
fcmovu
or
mov
jne
inc
xchg
not
add
pop
int
sti
pop
xchg
mov
ss
add
jmp
gs
mov
leave
pop
pop
clc
test
ja
stc
sbb
sbb
xchg
dec
dec
and
into
jo
hlt
sub
movsb
stos
out
cwtl
aas
je
pop
mov
or
les
mov
fimull
outsl
sahf
pop
lahf
jl
dec
sub
mov
daa
sbbb
mov
xchg
out
icebp
insl
loope
jle
in
inc
das
ss
mov
out
adc
mov
iret
xchg
in
imul
aad
cmpsb
push
cmpsb
xlat
mov
xchg
mov
out
or
pusha
sbb
pop
xchg
es
rcrb
ljmp
push
dec
ficompl
add
xor
pusha
jo
push
icebp
cmp
addr16
inc
into
mov
xchg
inc
ret
out
pop
iret
fidivs
test
shll
sbbb
jp
sbbl
scas
or
pop
cmc
std
les
cli
jmp
sbb
std
and
rcll
add
and
testl
xor
and
dec
daa
jl
sub
mov
arpl
sbb
mov
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
pop
pop
xchg
loopne
push
insl
and
pop
stos
jne
mov
hlt
mov
and
push
das
mov
sub
in
jmp
push
in
push
push
sbb
push
sbb
dec
out
mov
xchg
xor
lret
and
inc
bound
orl
push
insl
outsb
and
sti
subb
scas
mov
or
ja
arpl
rclb
in
cmp
lcall
mov
pop
dec
imul
iret
lahf
outsb
in
mov
shrl
pop
test
dec
mov
mov
xchg
jmp
xor
arpl
sub
jg
cmp
fmuls
dec
pop
push
push
adc
sbb
xor
sub
jp
xor
es
mov
mov
mov
imul
or
lods
repnz
sub
push
and
mov
retw
rcll
pop
add
push
jns
inc
xlat
sub
xor
sti
ja
fisubrs
inc
arpl
xorb
or
sti
into
push
dec
push
sub
ljmp
rorl
or
or
inc
pop
sbbl
es
cmp
xor
and
adc
push
push
push
push
aaa
rorl
bswap
std
pop
into
push
lods
mov
xor
lods
dec
push
cwtl
cmp
inc
daa
mov
lds
imul
aam
sub
sub
xor
popa
call
bound
sub
rcrb
scas
pmuludq
push
jmp
mov
sarb
aad
adc
sub
inc
xchg
addl
mov
es
sub
pop
aad
dec
jle
inc
imul
jmp
dec
movsl
jb
in
mov
xor
int
and
add
pop
clc
add
pop
subb
icebp
mov
lcall
sub
ret
hlt
mov
out
call
push
ljmp
inc
loop
xor
dec
cltd
and
mov
ds
and
ljmp
cs
mov
mov
sub
xchg
cs
cmp
icebp
xchg
jl
scas
ret
stos
cmpsb
fucom
movsl
cmp
and
mov
cli
mov
js
movsb
imul
out
mov
stos
jns
stc
lods
iret
pop
add
fs
sub
xchg
adc
shrb
dec
xchg
pop
adc
mov
mov
dec
les
push
pop
std
iret
enter
test
lods
mov
imul
lds
fstpt
cld
sbbb
mov
add
repnz
sub
std
leave
movsl
push
lods
aas
pop
repz
lret
cmc
es
xchg
dec
adc
pop
dec
in
mov
leave
sub
jo
dec
addr16
int
push
jge
sub
dec
and
fxtract
adc
add
push
mov
push
scas
sub
jbe
scas
inc
imul
repnz
or
insl
call
ret
mov
aad
shrb
cmp
filds
sub
adc
dec
into
or
jns
in
ret
push
ds
scas
sbb
ret
xchg
jae
xchg
dec
xor
aaa
mov
out
mov
mov
test
mov
push
out
lods
cld
jmp
fdivp
push
sub
push
pop
and
enter
xor
sub
and
pop
sti
imul
in
push
cli
jmp
repnz
orl
jae
rorl
cmp
rolb
cli
jne
cmc
notl
pop
cmpsl
mov
and
out
test
out
sbb
rcll
arpl
mov
bound
outsl
aam
jb
cmpsb
ja
sub
outsb
repnz
sbb
fisubrs
dec
and
push
mov
cmp
rcrb
loop
mov
dec
into
int
cmp
xorl
xor
xchg
stos
stos
ret
pusha
pop
pop
dec
jnp
adc
clc
scas
jecxz
pop
sub
mov
insb
mov
rolb
lds
cmpsl
or
pop
jmp
jmp
shlb
repnz
pop
lret
sahf
dec
out
mov
lcall
sahf
mov
mov
or
movl
in
sbb
popf
add
mov
mov
arpl
orb
aas
sub
out
jecxz
test
std
pop
lahf
pop
push
xor
cmp
inc
or
push
mov
ja
cmpsb
sahf
pop
cwtl
mov
leave
jg
xor
in
mov
cltd
mov
jbe
aaa
and
mov
xor
push
adc
addr16
push
loopne
incb
movl
and
ror
in
mov
loope
dec
mov
pop
and
and
fldenv
pusha
fisubrl
pop
mov
and
jae
stc
repnz
fstpl
xor
adc
out
cmp
mov
and
std
fisubrl
outsl
aaa
xorl
or
mov
data16
xor
pop
shll
or
sbb
test
push
inc
lea
loope
scas
std
mov
ljmp
mov
gs
pop
test
sbb
xchg
stc
stos
cmp
in
cmp
insl
call
shll
sub
mov
shl
pop
movsl
aad
fidivs
cmpsl
daa
jns
js
add
stos
js
mov
lds
mov
lret
std
out
fadds
sti
ja
lock
lods
xchg
movsl
int3
inc
and
imul
es
lods
sbb
iret
in
add
xor
shlb
and
arpl
dec
xchg
inc
or
and
adc
stos
aam
out
push
fwait
repz
rorb
adc
iret
testl
xor
sahf
nop
sbb
jmp
retw
outsb
jb
xchg
in
push
add
sti
push
cmpsl
inc
icebp
dec
mov
mov
pusha
or
or
jb
aas
ret
cltd
add
test
adc
sti
test
aaa
movsb
jle
inc
lret
ret
movsb
inc
mov
in
outsb
test
adc
xor
xor
sub
in
test
and
das
icebp
sbb
enter
divl
sub
add
push
enter
call
mov
sub
mov
test
jp
loop
mov
mov
stos
cmp
sub
call
idivb
mov
popa
lea
mov
hlt
pop
pusha
mov
xchg
hlt
ds
repz
xor
pop
adc
les
mov
das
push
xchg
mov
std
adc
adc
out
int
and
lcall
in
mov
loope
sarb
xchg
pop
dec
adc
sbb
in
imul
mov
jns
scas
in
mov
push
push
push
push
mov
call
lcall
push
clc
xchg
mov
push
cmp
rorb
enter
pop
add
add
dec
push
adc
call
jbe
xchg
add
xchg
xchg
sbb
data16
idivb
lea
cmp
sub
jo
lret
loopne
arpl
or
loop
jg
mov
out
clc
repnz
data16
fsubs
call
int3
cmp
loopne
mov
jg
pop
pop
mov
cmp
sbbb
hlt
pop
sbb
mov
jp
dec
adcb
pop
push
inc
repz
jmp
test
and
pop
jnp
and
push
clc
dec
sbb
sub
shlb
mov
adc
and
add
mov
xchg
into
lds
cmp
call
das
mov
dec
test
jno
mov
scas
sarb
cmp
mov
ret
jle
dec
sub
pop
or
pop
sub
mov
sbb
lea
movsl
push
les
fdivs
fdiv
xlat
sbb
movsl
push
in
filds
and
jb
out
mov
add
in
inc
sti
push
mov
xchg
jmp
repz
dec
and
lds
je
shrb
push
mov
xor
adc
loope
pop
jl
aam
es
mov
lcall
ss
lea
jnp
lea
mov
sub
sbbb
setae
mov
incb
mov
bound
aad
adc
lahf
jns
push
popf
test
add
add
or
bnd
fisubrs
pop
scas
daa
push
jbe
push
icebp
jp
loope
test
mov
gs
enter
fisubl
inc
or
adc
jno
repz
jo
dec
pop
stos
or
roll
jge
cmpsb
enter
mov
xchg
icebp
pusha
jecxz
xor
jle
ds
pusha
mov
and
aaa
scas
cmpl
or
pushf
pop
rcr
inc
cmp
call
push
ja
ret
je
mov
insl
shlb
ja
je
addb
testb
faddp
mov
out
js
sub
inc
aaa
adc
inc
xchg
sbb
movsb
mov
insl
jmp
lret
stc
mov
add
cltd
lret
imul
inc
dec
movsl
push
push
or
negb
mov
mov
sub
sarb
and
leave
mov
ds
push
pop
sbb
pop
cmp
std
scas
lea
jae
pop
inc
jb
sbbl
or
push
xchg
dec
push
sbb
mov
push
imul
mov
cli
inc
pop
mov
or
nop
mov
or
loope
inc
cli
scas
jmp
jbe
lcall
and
out
cmp
jle
clc
mov
jo
adc
outsl
push
ljmp
test
push
jnp
xor
and
mov
lods
pop
fiadds
stos
xchg
pop
xor
pop
aam
dec
inc
or
insb
rolb
pandn
icebp
sbbb
pop
lret
insl
leave
in
cli
push
mov
cwtl
aaa
mov
cmpsb
mov
mov
jo
mov
and
scas
repnz
xchg
jl
loope
stos
into
dec
std
jecxz
sub
mov
fsubrl
adcl
push
stos
or
push
pop
mov
xchg
ret
jnp
dec
int
das
jno
mov
inc
out
loope
pop
fcmovnbe
or
rcll
mov
add
pop
pop
addr16
inc
repnz
cld
loopne
mov
xor
and
inc
call
int3
cmpsl
sbb
mov
fbstp
int
enter
data16
fimull
mov
sahf
mov
xchg
dec
jmp
jns,pn
insb
or
testl
lods
add
iret
pop
jo
xor
lcall
pop
testb
subl
in
es
ds
mov
xor
lods
xor
mov
pop
cli
stc
sub
jnp
roll
sub
aas
inc
aad
call
mov
int3
xchg
scas
je
xor
mov
and
xchg
inc
lret
orl
ljmp
adc
push
les
test
into
lds
jge
mov
sti
movb
js
pop
out
movsb
dec
push
call
dec
jecxz
and
ja
addr16
lret
mov
xor
jbe
std
pop
dec
add
cmpb
test
mov
mov
test
shll
clc
mov
inc
int
cld
sub
xchg
dec
shll
shrl
adc
inc
cli
xchg
lds
adc
hlt
icebp
ds
rcrb
pusha
iret
nop
add
jl
pop
mov
push
xor
js
inc
idiv
out
push
lods
test
dec
or
inc
jg
out
push
push
xor
out
repz
ret
movsb
out
enter
das
out
push
js
cs
insb
subl
aaa
and
xchg
sbb
or
sbb
adc
cli
movsl
xor
ja
sub
arpl
scas
int3
or
push
es
gs
sbb
inc
fs
subl
adc
mov
stos
jmp
mov
mov
in
lahf
call
test
pop
push
push
cmp
flds
or
fmulp
in
addr16
jecxz
cmc
ret
push
sub
mov
inc
mov
pop
jecxz
sbb
inc
push
xor
xor
fmuls
mov
fiaddl
test
xor
inc
lock
xor
adc
mov
push
jp
pop
fisttps
push
dec
cltd
adc
das
out
scas
popa
out
or
pop
push
dec
push
jne
xor
enter
add
add
lret
cmpsb
fisttps
push
inc
btc
je
push
or
roll
inc
push
inc
jge
lods
fadd
lock
sub
ret
inc
nop
push
add
fcom
jae
repz
and
loopne
sub
pop
xchg
and
mov
fcmovu
xor
jne
xchg
jns
xchg
jbe
ja
repz
push
and
lds
lea
jb
push
gs
lcall
mov
push
stos
inc
shlb
sti
shr
cmp
xchg
shlb
imul
out
lahf
gs
notb
fcmovu
xor
outsb
and
push
jbe
or
mov
ss
aad
bound
and
test
xchg
cltd
hlt
fldt
mov
rclb
xor
jne
cmpsl
xor
xor
push
pop
lds
pusha
repnz
or
xchg
mov
dec
idivb
sbb
mov
scas
lret
sbb
cltd
mov
jns
sarl
in
notb
cs
dec
pop
jae
out
sub
jmp
fmuls
mov
xchg
push
int3
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
or
sub
psllw
pop
adc
call
lods
adc
adc
leave
mov
ficomps
imul
pop
rcrl
fildll
mov
leave
sbb
cwtl
loope
int
jo
sub
xlat
je
xor
sub
movsl
xchg
popf
jns
cld
and
nopl
pushf
imul
sub
js
cmpsb
in
lods
fildll
add
lds
inc
sbb
fbld
call
adc
jne
dec
sub
daa
ja
in
and
stos
in
xchg
xchg
pop
push
cmp
pusha
inc
mov
mov
je
scas
or
dec
jo
xchg
dec
roll
sub
in
jnp
rclb
dec
ja
popa
ds
push
sarb
cmpsb
add
rclb
mov
mov
cwtl
repz
sbb
in
les
pop
jb
ret
sub
push
nopl
sahf
mov
jl
push
in
push
int
pop
jge
mov
cmp
movsl
jnp
jnp
dec
mov
sbb
dec
iret
rorb
xchg
xor
insb
rcr
lret
aam
push
lahf
add
jno
dec
jb
stc
daa
mov
xor
add
outsl
out
pop
test
jg
xchg
movsl
pop
jae
andb
adc
xchg
mov
mov
loop
sbb
movsb
out
sub
movsb
rcr
mov
cmp
and
in
in
lret
jmp
adc
inc
push
xchg
xchg
scas
orb
int3
cltd
dec
sbb
or
mov
fsubp
push
pop
add
or
outsl
int
or
in
add
incl
icebp
pusha
andl
sub
daa
hlt
fistl
aaa
jl
icebp
or
stos
xchg
sbb
out
mov
inc
push
cs
pop
mov
les
sbb
int3
inc
sub
and
rcll
mov
cmc
mov
jge
stc
cmpb
mov
push
shlb
jae
push
cmpl
push
int3
or
orl
out
movsl
dec
in
mov
out
xlat
push
pop
pop
pop
or
ss
aad
pop
stos
int3
outsl
adc
adc
enter
mov
jo
inc
into
inc
dec
mov
out
xchg
and
push
lret
and
sub
lret
stos
add
push
mov
ljmp
xchg
push
aas
rorl
je
cmp
push
inc
sbb
nop
sti
xor
jge
dec
pop
push
dec
push
xchg
shlb
hlt
subl
lahf
cmp
imul
jno
cmp
imul
adc
push
int3
pushf
mov
add
ljmp
dec
mov
mov
insl
fwait
inc
push
pop
outsl
jmp
jne
cli
lea
and
shlb
push
jl
fisubrl
xor
jno
mov
dec
test
into
fsubl
imul
lods
fwait
xor
mov
and
testl
dec
iret
dec
ret
add
in
xchg
or
push
sti
iret
arpl
int
xchg
in
cwtl
or
cmp
pop
dec
pop
std
outsb
mov
xor
adc
mov
sbb
test
stos
fisttps
fdivr
and
ret
pop
jecxz
xchg
dec
xchg
xchg
mov
mov
xor
inc
mov
jno
repz
cwtl
add
clc
pop
fnstsw
xchg
jmp
lods
xchg
ds
aam
mov
std
test
test
outsl
push
cmc
mov
movsl
dec
mov
ljmp
int
push
shl
xor
cmp
sub
xchg
xor
adc
mov
sub
pop
mov
adc
jp
mov
pop
jle
push
push
jo
aam
mov
xor
sub
aad
jmp
adc
xor
jnp
pop
ret
or
add
es
mov
insb
mov
out
or
jae
in
flds
insl
pop
movsb
mov
les
test
mov
pop
inc
sbb
shl
sbbl
cmp
add
xor
push
jmp
fcmovnu
mov
sbb
xor
inc
bound
add
mov
test
imul
in
cld
fistpll
cmpsb
movsb
dec
outsb
cmpsb
shll
pop
cmp
jecxz
mov
pop
stos
pop
daa
fldenv
jo
jno
call
aas
fcomps
inc
and
pop
cwtl
adc
fcmovb
jbe
div
inc
in
dec
arpl
iret
jg
lahf
mov
sahf
lods
cmp
rorl
xor
or
sub
xor
add
fwait
rcrl
movlps
inc
lret
jnp
stos
xchg
and
or
sub
mov
mov
jge
hlt
jle
dec
cmp
in
jle
or
decb
pop
in
jne
sti
or
mov
loopne
adc
cli
cwtl
dec
mov
xchg
repnz
mov
sti
lcall
dec
xchg
cmp
std
mov
cmpsb
sbb
inc
xchg
gs
shlb
jl
test
in
add
jo
fmuls
or
dec
mov
mov
mov
push
jo
mov
xor
cmpsb
movsb
mov
iret
mov
test
or
mov
cli
xchg
add
adc
std
push
adc
fldt
ljmp
push
pop
call
cmpsl
int
sahf
adc
in
sbb
jmp
add
xchg
cmp
push
xor
xor
adc
aas
fcoml
jo
sbb
cld
std
push
xchg
rcrl
sub
aas
cli
xchg
sbb
sbb
lea
mov
mov
addr16
cltd
ret
js
add
jno
pop
pop
fidivl
mov
dec
mov
and
test
mov
adc
cmp
lea
mov
pop
dec
ss
and
ss
sub
in
pop
mov
mov
in
loope
fldenv
insl
sbbl
popf
loope
jno
call
rcll
insb
das
add
mov
add
fldl
pop
scas
scas
sahf
rcrb
add
jbe
nop
shlb
loopne
in
push
xor
xchg
xlat
adc
dec
push
jbe
out
inc
outsl
jne
mov
cmp
xchg
stc
push
add
push
xor
sarl
mov
jmp
add
test
repnz
xor
xor
lods
and
sub
inc
sbb
test
loopne
nop
push
lods
xchg
mov
xchg
sub
mov
in
or
jne
and
cmp
cld
test
movsl
lcall
ljmp
les
pop
inc
mov
jg
add
and
mov
int
mov
movb
cmp
adc
popa
mov
jmp
fimuls
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
add
push
shrb
psrlw
fs
jecxz
int
xchg
hlt
ja
mov
loopne
pop
test
adc
test
inc
dec
je
mov
mov
inc
idivl
out
cld
ffreep
mov
leave
xchg
int
int
mov
push
adc
ljmp
out
call
lods
ds
inc
test
and
jnp
xor
push
inc
out
cmp
loope
pop
mov
inc
pop
in
cmp
loope
pop
test
jp
xchg
fisttps
mov
jne
in
mov
jmp
aaa
xor
lret
mov
testb
lahf
cmpl
add
jno
ret
aad
inc
out
adc
dec
jmp
mov
or
sahf
xlat
ret
xorl
xlat
loopne
nop
lahf
ss
outsl
add
jne
and
sbb
aas
jne
sbb
rcrb
aas
cmc
cmp
int
dec
loope
sub
fisttpll
dec
inc
iret
adc
lea
or
int3
jno
xchg
add
repnz
inc
out
mov
ljmp
into
push
mov
lahf
cmp
jecxz
aas
movsl
mov
inc
inc
or
cmpsb
lahf
mov
inc
andb
pop
inc
fldt
and
add
dec
test
xchg
data16
out
sub
xor
cmp
push
push
insb
sbb
pop
cld
out
mov
or
cltd
cmp
loope
test
in
addb
adc
test
push
sbb
cmp
or
adc
jg
leave
dec
pop
inc
jecxz
int3
inc
jns
jp
push
adc
cmp
scas
pop
movl
out
pop
fdivrl
aad
and
dec
pop
mov
adc
mov
mov
push
adc
shlb
mov
decb
fmull
pop
mov
leave
hlt
je
lcall
push
pop
bound
rolb
mov
mov
fcomps
call
add
cmpsb
test
sub
xor
xor
add
ja
or
aas
mov
lock
pusha
add
mov
imul
inc
jle
xor
pushf
mov
test
dec
xor
not
jecxz
imulb
add
ficompl
hlt
shr
dec
insb
das
jmp
or
or
mov
pushf
test
pushf
or
pop
pop
pop
cmp
in
lcall
test
mov
adc
add
jecxz
cmovae
pushf
jl
jmp
jb
cmc
mov
add
sub
pop
inc
cmp
pop
iret
fcoms
push
loope
imul
ss
push
push
ss
test
mov
mov
fldl
fnstsw
daa
push
out
or
jecxz
add
xchg
mov
lahf
cmc
rcr
insl
fs
repz
add
imul
pminub
jg
jle
or
mov
lahf
fdiv
cld
cmp
aas
jge
movsb
jo
xor
inc
mov
jmp
std
jle
out
pop
sub
push
push
dec
inc
js
xchg
test
cmp
insl
notl
scas
js
daa
scas
mov
or
int3
test
xchg
push
xor
push
orb
mov
dec
jecxz
aam
and
cwtl
rorb
test
jmp
jae
jae
ret
and
mov
scas
mov
out
test
push
pop
iret
mov
jg
add
scas
and
mov
adcb
xchg
stc
jecxz
pop
adc
stc
mov
shr
imul
ss
xor
push
xchg
cmpsb
sbb
icebp
sub
push
lock
sbb
xchg
mov
bnd
arpl
dec
mov
add
jo
mov
cmpl
pop
jnp
movl
xor
pop
movsl
call
and
pop
test
jmpw
mov
cs
movsb
test
in
mov
mov
out
test
and
inc
add
jae
xchg
xchg
or
rcrb
cmpsb
mov
push
cmp
adcb
mov
fiadds
pop
pop
mov
adc
lret
xor
sti
scas
in
pop
cmpb
adc
xlat
lret
stos
push
ja
add
rorb
movsl
mulb
fnstcw
ljmp
mov
cmc
jne
lds
xor
add
jo
cmp
inc
stc
sar
imul
int3
imulb
cmp
jae
pusha
mov
dec
neg
mov
cli
pop
or
jbe
scas
std
add
sbb
jmp
inc
test
xlat
lret
xchg
mov
jno
movsl
adc
sbb
sbb
xor
popa
loop
enter
push
push
out
adc
fistps
dec
aam
clc
mov
cmpsb
push
inc
int3
adc
loopne
xchg
and
fdiv
fidivrs
mov
push
and
inc
sbb
js
xor
or
pusha
in
fldenv
and
in
cmc
dec
rcrb
ljmp
cmp
sahf
xchg
cld
daa
sahf
jl
jge
lods
das
inc
cld
push
imul
fs
mov
sub
xchg
adc
xlat
xor
hlt
xchg
sub
out
shrl
rorb
adc
xlat
and
mov
lcall
mov
dec
insl
testb
mov
std
or
sbb
sbb
xchg
hlt
jnp
fldenv
mov
imulb
pusha
push
xchg
outsl
adc
stos
mov
mov
push
sub
jne
pop
rcr
or
mov
jmp
andl
or
fistpll
out
inc
adc
pop
mov
pop
xchg
mov
iret
std
dec
jecxz
faddp
popf
scas
fdivrs
jo
xchg
and
aaa
dec
cwtl
xor
adc
mov
pop
mov
mov
push
add
sub
stos
bound
pusha
xchg
ja
test
jne
ret
js
xchg
or
imul
xor
daa
push
arpl
or
pop
push
add
movsb
outsb
add
mov
mov
iret
xchg
jl
dec
mov
mov
push
pop
lods
xchg
iret
push
push
jp
jbe
fdivs
gs
or
and
stc
fwait
push
pop
push
push
adc
xor
lret
xchg
xor
cld
lahf
or
pop
pop
pop
in
mov
push
cli
push
cmp
xor
aam
adc
mov
xchg
gs
inc
fs
pusha
idiv
lea
jge
sbb
mov
dec
or
insl
inc
daa
je
test
fwait
pop
inc
mov
push
mov
mov
movsb
mov
movsl
test
push
clc
mov
popa
test
push
and
lods
scas
mov
sub
xor
cwtl
in
jnp
sbb
stos
mov
mov
xchg
ja
pop
xchg
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
pop
inc
mov
ja
dec
bound
inc
inc
cmp
sub
mov
or
lea
dec
sub
pop
mov
adc
cmp
les
cli
or
std
push
rcll
mov
xchg
popf
les
jns
outsb
jecxz
rcrl
cmpsl
push
mov
jno
xchg
dec
xor
cmc
test
inc
dec
pusha
sub
mov
and
add
mov
clc
xchg
shrb
mov
or
sub
xchg
movsl
ret
mov
jno
mov
cwtl
addr16
cs
arpl
outsb
pop
sub
and
push
cmpsb
push
xchg
pop
inc
xchg
dec
jno
mov
pop
cmpsl
add
stc
jns
sub
imul
test
jno
jmp
fwait
inc
cmp
xor
leave
mov
leave
xchg
div
push
and
andb
mov
sbb
lahf
out
mov
pop
test
push
inc
jecxz
pushl
int3
sarl
jnp
fwait
sub
movsb
xor
cmpsb
nop
or
dec
pop
xor
inc
loopne
mov
mov
mov
xchg
sahf
loop
int
in
sub
mov
mov
xchg
scas
add
ret
fisttps
lret
or
cmp
sub
push
ror
adc
sbb
in
ds
adc
push
pop
aam
movsb
cmc
or
mov
xlat
pop
push
inc
push
dec
add
mull
mov
mov
xchg
mov
insb
fwait
add
ret
pop
in
bound
sub
aas
ror
and
insb
stc
pop
movsl
inc
sub
out
jmp
repz
test
dec
pop
dec
add
inc
mov
add
addr16
imul
sub
popf
mov
stos
sbb
out
shll
mov
into
fistl
cmp
repnz
clc
popa
lods
mov
repnz
subb
jbe
sub
movl
push
mov
push
jp
in
jmp
es
aad
movsl
int
mov
pop
push
mov
test
push
add
out
shrl
inc
push
mov
adc
push
nop
xorb
mov
in
adc
loopne
roll
push
pop
jge
xchg
aaa
dec
add
ret
mov
lahf
fxam
pusha
push
or
cmpsb
push
lahf
arpl
dec
push
dec
fs
mov
sub
movb
std
js
pop
test
add
push
mov
decl
nop
mov
popa
mov
fwait
ss
iret
mov
mov
push
cmc
mov
pushf
sub
aam
and
fcmove
jge
push
cwtl
cmp
mov
cmp
mov
mov
cmpsb
jo
popf
test
adc
fs
scas
outsl
sub
sub
outsb
filds
adc
cmp
push
aaa
sub
lret
cmp
out
lcall
cmp
pop
mov
cmpsl
stos
stos
and
fcmovnbe
rorl
and
jmp
rcrl
dec
arpl
mov
bound
jno
push
dec
add
shl
clc
add
out
xchg
ret
adc
push
mov
add
jge
push
adc
inc
inc
mov
rcr
and
bound
sub
mov
mov
call
sbb
or
outsl
cmp
cmpsl
jno
lods
arpl
xchg
mov
into
mov
notb
mov
inc
sbb
push
movsb
adc
xor
int
sbb
scas
repz
sub
inc
insb
push
push
call
jae
inc
into
jns
lea
jne
andb
rorb
push
aaa
stos
or
loop
int3
jbe
cmp
aas
cld
pop
jo
jg
push
push
and
cwtl
jns
add
aaa
xchg
fists
in
insl
rsm
push
test
sbb
mov
xor
enter
jle
push
lcall
lcall
jle
adc
push
lret
ljmp
mov
add
dec
cmp
sarb
mov
cmpl
xchg
ret
pop
mov
push
in
xchg
loope
lock
adc
repz
mov
in
jge
addl
testb
mov
hlt
test
sti
jae
aas
jae
cmp
mov
icebp
mov
ret
fstpt
sub
daa
adc
iret
cmpsb
test
repz
cli
push
and
sbb
sbb
jp
xor
jo
and
iret
sbb
and
mov
aam
arpl
or
jnp
mov
loopne
data16
add
xchg
repnz
mov
imul
shll
lds
mov
add
sub
push
cltd
stos
add
cmp
jb
adc
les
cmp
jl
cmpl
dec
fstps
cmp
adc
mov
add
bound
mov
cmp
movsb
pop
xor
cli
mov
sbb
test
add
lahf
fwait
daa
pop
push
sub
jecxz
inc
xlat
add
push
in
mov
stos
sbb
stos
shr
pusha
or
mov
lea
mov
pop
xor
fnstenv
jg
adc
outsb
sub
lcall
mov
mov
rolb
push
sub
push
fnstsw
mov
in
notl
cmpsl
dec
aaa
lods
daa
pop
daa
out
cs
vcmpss
test
lock
jge
xor
jno
mov
aam
shrb
mov
mov
pop
xchg
xchg
ljmp
push
cmp
std
andl
cmpsl
adc
pop
enter
jb
in
aad
stc
mov
les
shll
sbb
div
jnp
jg
jbe
pop
hlt
movsl
adc
push
or
jmp
xchg
hlt
outsb
call
dec
les
sub
push
mov
push
insb
and
adc
or
sbb
rclb
std
lcall
daa
jns
pop
and
cld
or
sub
popf
pop
out
ljmp
shll
iret
arpl
and
jmp
and
test
dec
push
fdivrs
enter
gs
xchg
lret
rorl
xlat
mov
jae
ja
in
clc
push
xchg
sahf
cmp
aas
adc
dec
jecxz
loop
push
mov
cmp
cmp
ds
lcall
mov
xchg
stos
pop
mov
pop
loope
mov
pop
bound
sub
out
pushf
daa
inc
neg
adc
mov
xor
lds
lods
mov
cmpsb
pop
jo
and
subb
dec
popf
ljmp
mov
nop
sbb
into
out
push
inc
movsb
or
popa
shl
add
cmp
leave
lods
or
cltd
test
dec
sarb
insb
cltd
jle
adc
sub
outsl
cmpsl
mov
lds
push
or
adc
mov
icebp
mov
cmpl
or
ror
jp
std
arpl
pop
mov
dec
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
out
mov
xchg
mov
and
cmpsb
cmp
jle
ss
pop
xchg
xlat
aad
mov
int
sub
mov
or
daa
jne
dec
mov
lds
sub
cld
cmp
add
rcll
xor
or
and
jle
adc
or
inc
dec
fnsave
popf
cmp
mov
mov
scas
ret
xchg
or
fwait
push
jae
jae
mov
push
in
inc
push
sbb
mov
mov
mov
in
dec
out
push
out
arpl
lcall
mov
mov
aaa
mov
adc
lret
jmp
test
and
pop
fstpt
cmp
aaa
mov
mov
out
adc
push
xor
sti
out
jns
inc
add
imul
cmp
sbb
sbb
cmpsl
push
js
adc
jb
push
sub
mov
xchg
je
rcl
cli
mov
or
inc
daa
rcrb
and
stc
or
pusha
push
stos
xor
mov
inc
cmp
cmp
jbe
pop
iret
sbbb
and
mov
enter
mov
xorl
mov
adc
cmp
aad
add
mov
mov
push
jecxz
clc
cmp
xor
pop
fsubr
push
daa
xchg
or
pop
xchg
mov
add
test
push
jnp
and
dec
xchg
push
cmp
data16
and
dec
mov
fsts
cld
shll
out
pop
aas
mov
mov
bsf
cmp
xchg
test
cld
jl
dec
mov
pop
mov
pop
es
jb
and
subl
mov
lcall
ret
outsb
mov
inc
jnp
mov
and
pop
ja
cmp
sti
mov
or
xchg
xchg
and
cmp
scas
push
das
in
les
inc
icebp
sbb
in
mov
ds
scas
lds
lcall
sbb
pop
mov
insb
adc
lods
dec
lret
mov
inc
jb
nop
ret
or
jl
iret
test
in
lea
int
in
jae
pop
stos
fnsave
pop
popa
rcrl
in
jo
loop
std
test
loopne
push
into
ds
std
bnd
pop
xor
cltd
xor
jo
fnstcw
inc
sbb
sbb
pop
cmpsb
dec
adc
cld
das
mov
jno
mov
scas
push
fstpl
xor
adc
mov
jnp
mov
add
pushf
mov
and
das
adc
jnp
jne
mov
fisttps
or
cs
call
cmc
jp
mov
push
shll
mov
filds
sub
jmp
in
fdivrs
or
mov
in
ja
test
xchg
stos
ret
repnz
jmp
repnz
daa
xlat
popa
popa
enter
std
dec
pop
movsl
mov
jb
xor
add
jne
cmp
scas
xorl
jns
maskmovq
testl
loop
mov
cmpsl
jge
int3
call
jbe
mov
fnstcw
scas
dec
lret
xor
and
jo
cs
aas
leave
xlat
mov
sbb
sti
mov
mov
push
lea
cli
fsubrl
cmpsb
lods
fcoms
adc
jb
inc
push
pop
dec
sub
out
mov
push
inc
arpl
fldt
icebp
cmp
mulb
inc
push
aad
stc
loop
and
out
push
in
icebp
je
sti
movsb
out
mov
cmp
rcll
mov
mov
lret
dec
jno
jnp
mov
ss
shrb
fdivr
push
mov
or
and
pop
and
test
jb
stos
bound
insb
jns
push
movsl
dec
stc
in
push
pusha
inc
int
xor
cs
or
ret
dec
lret
pop
jg
xor
cmp
ret
mov
xor
or
sbb
imul
pop
lret
int
mov
icebp
scas
jl
add
jmp
push
mov
loope
and
pop
insl
movsl
mov
lcall
sub
iret
fstl
icebp
data16
mov
popf
adc
xchg
mov
pop
sarl
fwait
into
pop
pop
testb
imul
into
sbb
in
add
mov
pop
outsl
cmp
push
ss
inc
or
or
xchg
cmp
add
mov
pop
loopne
xor
jp
enter
fwait
mov
hlt
sub
push
cltd
sbb
fidivrs
shlb
sub
inc
and
inc
mov
xor
sbbl
mov
rclb
push
stos
mov
loop
int
and
jno
jo
leave
or
and
push
and
les
shlb
jb
aas
push
fadd
fs
testb
pop
pop
into
push
lcall
int3
pop
aaa
mov
lret
xchg
fdivrp
inc
jl
js,pn
inc
js
lret
sub
insb
sub
ljmp
dec
insl
mov
dec
ret
push
int3
ror
mov
les
mov
movsb
mov
mov
andb
loope
enter
dec
sahf
into
in
sbb
xchg
addr16
mov
xchg
push
sub
and
pop
pushf
dec
adc
dec
inc
push
mov
xchg
sub
xor
ja
cmpsl
push
stc
dec
xor
mov
out
das
or
mov
xor
push
test
daa
in
xchg
ja
lahf
js
in
sub
xor
dec
ja
sbb
lcall
push
xor
cmp
in
rcrl
test
pop
xchg
aad
xchg
ljmp
jmp
xchg
mov
xchg
call
jp
in
ljmp
mov
mov
test
mov
rorl
pop
fdivl
icebp
test
push
sbb
or
sbb
xchg
jb
lcall
push
mov
dec
jbe
pop
inc
in
in
xlat
lret
inc
cmp
fnstenv
or
and
add
std
xchg
sbb
es
inc
dec
repnz
mov
loope
cmpsb
jecxz
shll
cmpsl
mov
jo
xchg
std
lods
mov
scas
add
xchg
iret
mov
leave
cli
lock
cmp
icebp
push
pop
mov
mov
xchg
das
jmp
mov
lcall
pusha
and
je
sub
mov
pop
inc
icebp
stos
add
dec
jecxz
fstl
loop
out
repnz
enter
jbe
fistl
rorl
mov
and
popaw
stos
iret
add
xchg
or
adc
mov
scas
callw
xchg
dec
ret
or
rorb
ja
ret
rorb
adc
or
addr16
fdivrl
xchg
sub
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
popa
mov
ja
loope
mov
sbb
sub
dec
mov
in
sub
adc
sub
xor
xchg
roll
mov
add
sub
test
or
mov
icebp
jnp
dec
pusha
ret
repz
shlb
subb
aam
out
mov
inc
jg
or
fildl
clc
xlat
and
les
lock
fistpl
or
inc
sbb
ljmp
dec
cwtl
fistps
imul
pop
mov
addl
cs
add
adc
sub
hlt
in
rcrl
shl
loope
lahf
enter
pushf
fmul
push
mov
lds
sub
push
or
lea
and
les
and
jns
daa
addr16
shrl
aas
pop
or
enter
sub
cmp
sub
pop
rclb
mov
mov
pushf
out
inc
lret
inc
jns,pt
lahf
pop
dec
test
lds
xchg
cltd
dec
add
call
push
pop
imul
jns
sbb
ret
int3
adc
cmp
dec
and
aam
jp
cmpl
divb
mov
pop
push
and
or
rorl
lds
mov
pop
in
rcrl
jmp
out
sbb
xchg
dec
std
mov
cwtl
jge
pop
and
mov
leave
shrb
pop
ss
data16
jg
fsub
push
cld
fildll
movsl
jle
in
movsb
xor
jl
dec
dec
fldl
jge
inc
std
sahf
pop
mov
loopne
add
jge
hlt
sbb
sti
std
mov
icebp
ja
jge
jle
mov
imul
lret
inc
aam
icebp
mov
push
into
cmp
scas
fcmovu
out
mov
loop
xor
mov
mov
and
push
movsl
adc
jae
sub
or
sbb
repz
int
arpl
dec
push
clc
xor
xchg
push
scas
jmp
cmp
addr16
mov
cmp
out
scas
scas
adc
cmpsl
cmp
gs
stc
mov
xchg
cmp
and
adc
lret
xlat
in
and
mov
test
jle
mov
lret
fnstsw
pushl
push
cs
loopne
push
push
dec
mov
std
rcll
in
stc
lcall
adcb
stos
push
pop
jb
loopne
push
sub
pop
loopne
or
mov
loope
jne
mov
jecxz
test
insl
and
mov
push
sub
pop
cli
sub
jae
enter
int
push
movsl
xchg
mov
or
mov
jne
arpl
mov
iret
aam
adc
pop
lock
adc
out
add
rolb
adc
clc
pop
pop
and
jmp
mov
cmc
jl
xor
adc
ds
jb
cmp
push
mov
ljmp
dec
call
jmp
aaa
notl
or
mov
clc
push
cwtl
imul
insl
fistl
fnsave
sub
stos
inc
adc
imul
add
mov
add
jmp
cmpsb
insl
pop
push
filds
pop
cmp
repz
insb
jp
in
or
adc
mov
movsb
ret
push
sbbb
or
dec
sbb
mov
dec
loopne
or
nop
or
and
test
inc
inc
hlt
mov
jp
bound
push
sbb
mov
mov
and
outsb
fcmovu
sub
lret
stos
cmp
xchg
pop
cmp
dec
push
call
xchg
cmp
mov
and
lds
jb
out
pusha
xchg
insb
push
les
push
sbb
or
cmpsb
xor
cmp
sahf
sbb
adcb
rol
aas
out
outsb
ret
pop
jne
ss
inc
xchg
mov
icebp
jle
fimull
test
cmp
popa
adc
xchg
xchg
jmp
xchg
or
lods
js
mov
sbb
pop
inc
sti
loop
lds
fmull
mov
mov
mov
ja
mov
xchg
xchg
and
sbb
pop
in
stos
fld
out
cs
test
inc
cmc
dec
out
icebp
mov
imul
sub
popa
lret
cmpl
int
mov
dec
popf
jg
cmc
test
icebp
pusha
push
or
add
stos
pop
iret
arpl
dec
imull
pop
rcrl
call
ds
pusha
push
addr16
xor
push
mov
outsl
ret
inc
jb
mov
lods
adc
mov
push
add
and
aaa
add
add
add
cmpb
xchg
adc
cs
dec
cld
nop
jl
in
movsl
lret
lods
sbb
lahf
scas
imul
inc
ds
stos
adc
mov
ret
dec
add
imul
xor
imul
adc
inc
pop
dec
jnp
iret
cmp
mov
out
cmp
subb
cltd
scas
pusha
adc
sbb
pop
out
repz
pushl
pushf
mov
stos
jmp
dec
ret
adc
mov
insb
xlat
arpl
mov
imul
and
jne
sti
jmp
pop
and
xchg
insl
and
movsl
push
fs
ret
call
imul
pop
je
out
and
pushf
pusha
fbstp
dec
shr
cld
dec
add
mov
movsl
and
adc
repnz
popf
ficoml
sbb
fbstp
fadds
mov
je
xchg
fcmovu
mov
inc
xchg
add
ds
lret
push
mov
xor
push
addr16
pop
inc
jae
aas
dec
jp
movsb
xchg
outsb
and
mov
push
divl
es
cli
roll
jmp
inc
mov
inc
pushl
jns
inc
jns
sbb
xor
dec
xorl
cmpsl
sarl
xchg
mov
fs
pushf
jne
lret
adc
cmpsl
add
sub
test
icebp
popf
dec
cs
stos
inc
jnp
pop
dec
dec
adc
xchg
je
imul
push
fsubl
movsl
mov
mov
fdivrs
inc
icebp
out
or
mov
fbld
data16
enter
push
mov
fsubp
inc
xchg
fildl
add
cli
cmp
add
icebp
mov
jge
loope
fldenv
mov
push
jae
fsubrl
cmp
xor
pop
pop
cwtl
aaa
push
push
or
decl
es
imull
ds
mov
add
or
xchg
mov
aaa
clc
and
or
lret
mov
xchg
mov
lcall
int
fdivs
jge
jne
fidivrs
inc
sar
mov
and
dec
aam
jl
shlb
xchg
aas
orl
push
lcall
dec
sub
mov
xchg
popa
xor
loopne
push
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
loop
push
mov
xchg
shll
js
adc
fnstcw
mov
jbe
sbb
cmp
insb
arpl
mov
ss
and
ret
syscall
cltd
dec
inc
pop
or
fidivs
into
mov
or
int3
mov
ja
fs
mov
gs
push
sub
mov
lods
xchg
push
pop
mov
or
call
mov
fistl
fdivrl
idivl
mov
add
mov
out
pop
xor
sub
icebp
lods
mov
in
pop
inc
push
jne
mov
scas
add
jne
shll
test
daa
xchg
mov
lret
in
popf
mov
lds
mov
lretw
push
adc
jge
push
jbe
or
mov
jae
cltd
cmp
shr
push
out
inc
imul
ds
xchg
fcompp
dec
push
dec
mov
cmpsb
mov
cwtl
repnz
push
mov
jno
fidivs
sub
inc
cmpb
xchg
xchg
sub
mov
leave
sub
shr
adc
push
std
fldl2t
or
pop
sub
test
cwtl
inc
in
sbb
xchg
pop
cwtl
xchg
cmp
inc
push
mov
mov
jge
insl
jp
jnp
lcall
xor
fidivl
or
xor
xor
lea
jecxz
push
fldenv
jg
and
push
mov
cmp
mov
or
lock
push
jns
push
add
fisttpl
xchg
xchg
mov
in
xor
insl
cmc
sbb
fbstp
fwait
xor
push
inc
cmc
int
sub
insl
inc
pop
inc
inc
mov
push
clc
mov
sub
push
mov
ja
lret
aas
or
aaa
mov
aad
pop
jl
and
xchg
loop
insb
lods
icebp
add
xchg
lea
sbb
sbb
in
or
stc
and
lret
loopne
and
sub
mov
sahf
loope
andb
psrld
cs
sbb
daa
and
test
pop
call
or
pop
cmpsb
push
dec
push
push
cmp
gs
ret
rcrl
jae
cmp
jae
jl
xor
inc
dec
mov
subb
shrl
ljmp
ljmp
insl
ret
data16
test
ss
xchg
pop
popa
ficoms
xor
int3
inc
cli
negb
cld
mov
mov
push
lock
xor
stc
push
out
and
pop
fsts
sbb
jne
pop
mov
shrb
sbb
call
out
movsl
subl
icebp
sbb
and
xor
add
fcmove
mov
test
clc
scas
push
pop
test
repnz
cmp
pop
insl
lret
repz
push
or
add
mov
sahf
jnp
rorl
sub
std
shl
adcb
push
ret
xchg
adc
movsb
mov
pop
xchg
lret
mov
ja
test
sti
mov
mov
cmp
movsl
mov
adc
xchg
idiv
inc
call
adc
nop
or
stos
stos
js
push
inc
ret
mov
jae
fldl
fistpl
test
addr16
and
std
enter
test
xchg
xchg
fnstcw
adc
or
fwait
dec
cmp
aas
fisubl
push
mov
mov
outsb
repz
sahf
test
sub
aad
adc
push
inc
loopne
movsb
inc
scas
lds
mov
inc
icebp
cmp
mov
and
aaa
push
inc
inc
out
mov
mov
ret
inc
cmp
or
push
movsl
pop
push
xchg
sbb
jecxz
test
xchg
mov
and
and
pop
push
pop
test
mov
sbb
pop
pushl
inc
mov
in
scas
sub
rcll
ffree
inc
pop
mov
das
pop
push
popa
and
enter
inc
jo
sub
pop
out
pop
sub
je
cmp
stc
mov
add
cmp
js
jae
mov
lcall
stc
sahf
fs
add
xchg
push
clc
int3
movsl
mov
cmp
stos
aam
and
jne
insb
jg
int3
adc
adc
mov
jle
xlat
sarb
loop
sub
shlb
in
mov
sub
xor
mov
arpl
in
mov
je
mov
aaa
lods
sbb
fisubrs
mov
xor
jg
adc
dec
mov
push
in
aaa
aaa
add
fsts
pusha
mov
or
mov
lods
insl
shrb
mov
inc
leave
loop
jmp
mov
cld
fidivrs
mov
std
mov
leave
sti
ficompl
js
je
orb
push
bound
stos
ja
fsubrs
fbld
xchg
mov
adc
in
lock
aas
mov
lret
dec
add
add
or
fnstcw
faddl
adc
push
and
ja
lea
lret
mov
push
sub
dec
or
mov
pop
mov
ljmp
mov
mov
loopne
mov
sbb
jae
xchg
aas
xchg
add
xor
mov
add
out
add
mov
pop
xor
stc
fistpll
fisttpll
add
push
dec
cmp
jno
mov
xchg
jmp
cld
jmp
xchg
subl
stc
decb
hlt
ja
fdivr
ret
ja
iret
or
mov
add
out
bound
sbb
jbe
sbb
mov
mov
jl
cmpsb
ljmp
ljmp
inc
in
mov
mov
gs
and
daa
mov
ret
jge
dec
das
xchg
pop
mov
cmp
test
leave
inc
xlat
mov
fs
stos
mov
mov
pop
popa
repz
and
in
mov
push
sbb
lds
dec
ds
push
mov
adc
fcoms
test
pop
popa
dec
mov
xor
mov
test
lock
push
leave
xor
pop
repnz
adc
xchg
cmc
inc
imul
adc
push
cmp
sahf
jns
pop
xchg
fnstcw
pop
xor
ret
mov
add
jmp
push
and
dec
pop
xchg
jmp
jno
fstpl
pop
push
das
aas
imul
cltd
movsb
dec
xchg
mov
mov
movsb
ja
xor
xor
idivb
out
and
iret
mov
cld
scas
and
mov
das
call
cmc
lret
add
fdivrl
js
jecxz
or
out
xchg
fs
jae
pop
push
cltd
mov
inc
insb
sarl
cmp
sarl
rcll
inc
cmp
fsubrl
insb
pop
cltd
insw
xchg
bnd
ja
out
mov
mov
mov
jmp
aam
inc
test
addr16
add
insl
mov
mov
xchg
push
es
sub
idiv
test
or
pop
and
jno
sahf
push
and
cmp
movsl
inc
or
js
xchg
add
pop
fnsave
dec
repnz
xlat
xor
xorl
movl
xorb
or
rorl
sbb
mov
fisubl
or
cmpb
das
lret
test
pop
mov
mov
pop
sbb
mov
or
push
stos
stc
sub
test
loope
shrl
push
cs
jg
jle
mov
stc
mov
popa
test
repz
cld
lret
xor
adc
subb
fstl
sub
sbb
mov
js
ds
or
insl
dec
std
lcall
push
dec
daa
popa
mov
stc
in
outsb
cmpsb
je
loop
cmp
jl
lcall
push
psubusw
rcrl
cmpsb
sbb
sbb
push
mov
xorb
ljmp
bound
and
in
sub
lds
roll
push
adc
movsl
das
into
xor
mov
mov
es
mov
xchg
pushf
cmp
data16
lock
sub
rclb
xchg
adc
mov
jg
sti
jno
rcll
jbe
out
data16
cmp
xchg
out
sub
jge
fdivs
xor
fnstsw
mov
test
fstpt
xor
scas
clc
dec
hlt
lret
add
js
and
cmp
out
jb
imul
dec
push
addr16
xchg
in
mov
mov
js
loop
pop
call
jnp
ret
aam
xor
xchg
insb
sbb
jne
inc
inc
xorl
push
addb
xor
mov
xor
add
push
orl
lret
fsincos
xchg
stos
in
add
insl
dec
jge
ror
xchg
adc
mov
js
aad
push
push
ficoms
movsl
ret
pushf
in
push
mov
mov
fwait
cld
xor
cmp
adc
push
fwait
and
lret
out
mov
sbb
mov
mov
sbb
push
cmp
mov
xchg
xor
not
adc
out
jo
jecxz
xor
pop
test
imul
aas
push
mov
add
xchg
cld
int
gs
dec
jmp
imul
movsb
mov
mov
jmp
test
insb
xor
bound
adc
and
jo
jle
repz
ja
shrl
mov
xchg
out
jo
call
jb
scas
sbb
sub
add
fdivr
dec
lds
dec
jnp
cwtl
in
rclb
cmp
rcll
adc
mov
popf
pop
ficompl
lret
add
and
xchg
out
test
mov
cli
pop
push
loopne
clc
sbb
pop
les
or
dec
and
sbb
mov
sbb
xor
negb
arpl
xchg
mov
mov
popf
fs
xor
dec
xor
out
jb
inc
or
xchg
sub
test
test
data16
pop
adc
sti
shrl
lahf
mov
fs
jo
jb
icebp
cmp
mov
adc
jecxz
jmp
add
xor
push
and
dec
ret
mov
mov
jae
jg
nop
xlat
mov
mov
jbe
aas
xor
pop
dec
stos
and
pop
lock
push
repnz
out
pop
divb
aas
test
mov
mov
loop
add
inc
std
bound
cmp
or
rcll
inc
in
xchg
cmp
insb
xor
cmc
pop
xchg
orl
jne
add
jl
das
adc
repz
pop
xor
cmp
inc
xchg
jns
movsl
pop
scas
mov
and
push
add
shll
push
arpl
cmp
or
test
js
mov
pop
xor
inc
adc
outsl
mov
arpl
call
jnp
jb
mov
sub
inc
adcb
mov
sysenter
andl
xchg
daa
xchg
jae
inc
jle
dec
push
pop
in
inc
jae
cmp
pop
mov
add
dec
pop
outsb
arpl
test
push
scas
xor
fs
call
xchg
aaa
sub
jae
pop
sub
imul
enter
int
pop
mov
shll
xorl
xchg
test
push
push
je
mov
cli
movb
xchg
insb
mov
mov
cmp
mov
cmp
sub
mov
xor
dec
mov
mov
cmp
mov
sbb
mov
lods
movsl
aad
stc
inc
and
push
lods
ljmp
cmpsl
adc
inc
fildl
out
adc
repnz
scas
dec
jno
add
inc
pop
push
popf
cmp
push
and
push
xor
test
ljmp
lds
mov
ljmp
insl
std
loop
push
xor
jnp
mov
out
mov
mov
lret
rolb
mov
out
mov
js
enter
pop
mov
mov
jmp
sub
xor
adc
bound
ss
push
les
mov
sub
shrb
xor
cwtl
test
pop
dec
xchg
sub
loopne
stos
inc
out
mov
add
adc
aas
inc
notl
or
lret
repnz
scas
push
dec
sub
mov
xchg
lahf
outsb
mov
xchg
mov
in
lock
pop
ret
dec
loopne
icebp
popf
push
cld
pop
jmp
lods
inc
pushf
mov
shl
lahf
in
dec
mov
mov
shll
mov
in
aam
sbbl
mov
xchg
ja
adc
dec
mov
movb
sub
test
mov
jno
cli
out
mov
mov
addb
sbb
xor
mulb
sub
clc
inc
mov
sbb
cmp
es
out
std
loope
out
pop
inc
or
or
insl
sti
sahf
push
pop
xchg
sbb
jle
jae
lcall
shrb
sub
scas
popf
iret
cmpsl
pop
testl
mov
jnp
aaa
xor
dec
jle
add
sbbl
dec
mov
int3
mov
in
outsb
fcmovnu
leave
lods
push
pushf
add
sbbl
fsubr
test
and
dec
xchg
lahf
mull
fcoml
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
pop
ja
and
out
es
push
es
pop
lods
jae
cmp
add
xchg
sub
jnp
sti
adc
ss
and
pop
jp
call
iret
es
cld
insl
outsl
stos
das
out
cmp
pop
mov
adc
repnz
and
int3
mov
shrb
or
sbb
stc
loop
jo
adc
and
and
or
jg
cmp
out
cmp
lcall
popf
test
xchg
scas
scas
es
xchg
fdivrs
fs
inc
mov
jae
pop
movsb
sbb
je
inc
sarl
mov
loope
js
js
outsl
mov
inc
icebp
mov
cmp
push
scas
sbb
pusha
push
test
outsl
pop
mov
fwait
clc
mov
jb
sub
cmp
pop
imul
xor
pop
and
cmp
fsubrl
out
lods
rclb
inc
aas
imul
insb
mov
pusha
jecxz
jno
and
mov
outsl
and
jno
cmp
push
mov
inc
mov
fnstenv
mov
or
mov
push
rclb
xchg
xor
or
xor
pop
inc
jne
lret
push
xchg
inc
xor
lcall
fstpt
xchg
fwait
xor
or
orb
add
xlat
xchg
subb
mov
mov
pop
xor
add
sarl
mov
push
mov
ja
push
push
iret
sub
xchg
and
push
or
mov
rcll
out
sti
adc
loope
shlb
sti
jle
inc
mov
dec
enter
jae
sub
push
jmp
aas
push
daa
xlat
lahf
subl
pop
ds
xchg
jmp
ljmp
aaa
xchg
add
jmp
push
pushf
pop
mov
pop
lcall
stos
inc
sbb
mov
sub
hlt
dec
xchg
xchg
mov
xor
ljmp
push
xor
icebp
icebp
ljmp
mov
testl
hlt
sbb
add
jmp
leave
jmp
ret
mov
and
aas
repz
cltd
xchg
mov
sahf
push
outsl
push
mov
dec
add
sbb
shll
jb
xor
jbe
in
mov
mov
bound
inc
jns
aaa
mov
mov
xor
popa
xchg
test
es
adc
add
cwtl
cltd
push
and
jae
in
and
adc
mov
movsb
ja
inc
cmp
aaa
mov
pop
dec
insl
mov
xchg
hlt
stos
rolb
inc
xchg
jp
movsl
repz
jne
dec
push
test
cmpsb
or
jge
xor
addb
push
cld
xorl
nop
cli
and
ret
xchg
dec
scas
sub
mov
pop
xchg
js
sub
push
xor
aam
sub
add
mov
fcoml
mov
mov
or
stos
mov
xchg
decb
jp
sub
ja
add
out
insl
jmp
jge
jmp
pop
pop
out
jle
mov
sbb
insb
cmpsb
dec
adc
sub
popf
into
mov
test
mov
negb
mov
adc
ficompl
pop
dec
shll
ret
leave
lods
clc
push
lcall
or
mov
sbb
hlt
push
loopne
icebp
xor
int
pop
jl
std
sub
sbb
add
or
das
adc
pop
bnd
sub
jno
xbegin
call
cmpl
sbb
dec
push
pop
pop
lods
add
pusha
test
leave
push
mov
das
mov
or
repz
cli
mov
rolb
inc
push
add
lret
ja
jecxz
lock
mov
sbb
enter
xchg
and
jb
loop
iret
sbb
outsl
mov
add
mov
scas
icebp
and
cmpsl
inc
and
sbb
xor
nop
push
pusha
or
jb
sahf
and
aas
inc
pusha
gs
aad
pop
cmc
cld
pop
adc
jl
pop
adc
jp
rcrb
insb
inc
inc
cltd
jmp
pop
cmp
stos
jle
es
add
out
pop
std
add
xor
insl
xchg
ret
adc
daa
lea
mov
jne
sbb
pop
test
das
jle
mov
leave
mov
add
loop
cmp
xchg
ficomps
cmp
cmp
xor
add
push
leave
lods
cwtl
popf
lods
sbb
ja
jl
dec
mov
stos
gs
or
out
and
jp
js
movsl
out
ja
pop
sub
sbbb
pop
sbb
lcall
fldenv
mov
outsb
sbb
pop
xor
cwtl
out
mov
out
jb
mov
scas
addr16
test
pop
int
sbb
fwait
sarl
jecxz
test
popa
into
cld
call
xchg
movsb
testb
loope
mov
iret
xor
xchg
addr16
mov
adc
lock
imul
mov
sub
mov
jmp
inc
je
jae
nop
mov
cmp
jmp
pop
sbb
adc
clc
mov
cs
mov
sbb
cld
mov
mov
idivb
mov
inc
aam
repnz
lret
or
fs
xchg
or
shlb
xchg
add
lds
arpl
fdivrl
xchg
addb
fldcw
std
push
lds
out
fcmovb
out
xchg
or
ja
sbb
mov
or
sub
cwtl
test
jg
sarb
fisubrl
fildl
dec
loopne
jo
jb
dec
pop
inc
inc
and
negb
sub
push
outsl
xchg
es
andl
cmpsb
pop
ss
into
push
outsl
inc
or
sub
pusha
or
push
push
testb
fists
sub
loope
mov
lret
mov
testb
fistps
arpl
xchg
pop
arpl
inc
insb
popa
jge
nop
jl
hlt
sub
insb
mov
mov
scas
mov
cmp
sub
mov
sbb
mov
jl
sbb
pop
push
popa
aaa
shrb
jnp
mov
xor
ljmp
cmp
cmp
enter
testl
xor
xorl
mov
xor
pop
repz
inc
sub
xor
inc
adc
adc
mov
sbb
fistl
mov
push
mov
xchg
mov
and
sub
push
out
sahf
and
and
mov
enter
pop
dec
lret
sarb
or
xor
jbe
mov
nop
push
adc
outsl
xchg
inc
xor
pop
mov
mov
lret
aad
mov
ja
xchg
fmuls
lock
mov
icebp
pop
ljmp
ja
es
ja
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
mov
dec
ja
addr16
scas
sbb
cld
push
sub
sbb
ja
out
and
faddl
pop
jle
pusha
andb
sbb
loopne
mov
xchg
fisttpl
stc
dec
les
jl
adc
jle
ds
lea
xor
pop
push
mov
aad
pop
cmc
add
mov
xchg
xchg
fldenv
dec
mov
mov
stc
les
fs
mov
adc
into
cmp
mov
outsl
jno
inc
push
mov
leave
or
stos
pop
pop
mov
inc
pop
cmp
data16
push
cmp
pop
xor
adc
pop
jae
cltd
js
xchg
decl
push
sub
incb
repz
clc
xchg
or
pop
pop
sub
pop
mov
adc
fistps
adc
mov
mov
popa
adc
xchg
add
repz
push
fdivs
dec
sbb
xchg
pop
loope
dec
jge
sbb
mov
sub
ret
and
and
in
sbb
shl
cmpsl
cmp
leave
cmp
xor
fiaddl
jl
pop
mov
xorl
xchg
xchg
fstps
fidivrs
push
cmp
test
loopne
xor
gs
xor
mov
hlt
and
or
ret
enter
mov
lret
aam
in
sub
xorl
sub
scas
and
call
shrl
inc
inc
push
cs
and
sub
and
and
add
js
in
xor
imul
je
lods
or
mov
xchg
shlb
mov
clc
daa
ret
repnz
adc
mov
ficompl
push
or
mov
es
jecxz
push
or
std
dec
cli
test
out
adc
dec
mov
push
shll
cli
mov
dec
rolb
jb
leave
rorb
mov
fldenv
pop
mov
or
aam
aaa
rcrl
imul
xchg
pop
aas
inc
jle
pusha
sub
and
popa
pop
jbe
push
movsb
inc
notb
insl
insl
xchg
sbb
ja
mov
pop
popf
mov
mov
cwtl
sahf
or
hlt
aaa
cmp
mov
push
inc
daa
lds
sbb
fs
movsl
shll
pop
cmp
stos
lods
hlt
mov
inc
divl
lods
test
mov
xchg
sti
imul
push
or
adc
hlt
and
push
insb
push
cli
icebp
mov
mov
insl
in
insb
fucomp
xchg
aad
mov
push
xchg
pop
in
icebp
adc
inc
in
push
pop
add
dec
das
fcompl
adc
scas
lods
pop
or
arpl
inc
or
mov
adcl
mov
adc
push
xor
and
fdivr
push
mov
sub
pop
or
setp
jmp
xchg
int3
or
adc
cmpsl
orl
mov
lds
mov
and
outsl
insl
mov
cmp
mov
add
jl
call
fs
dec
add
lock
mov
movsb
cmovle
ret
sub
add
add
jp
or
out
jo
cmp
mov
jns
insl
pop
mov
ds
sbb
shr
fadd
lcall
les
push
fsubs
je
jnp
mov
mov
fsubrl
movsb
mov
mov
xor
pop
pop
or
shl
cwtl
push
out
xchg
xor
xor
mov
mov
jg
pop
cmp
addr16
mull
rcr
or
add
mov
sbb
fildl
sub
xchg
addl
in
pop
cli
pop
sahf
shrl
insl
insl
dec
sub
je
push
dec
xchg
cwtl
adc
xchg
test
shr
subl
inc
mov
mul
xor
jns
and
cmpsl
setae
xor
sahf
mov
sbb
xlat
inc
mov
mov
inc
dec
pusha
rolb
xchg
rep
push
cmc
jge
repnz
mov
cmp
pop
ret
fstps
pop
xchg
ss
mov
fdivl
cld
sub
push
jl
std
push
scas
bound
outsb
ret
imul
ja
push
inc
lcall
mov
cwtl
cmp
andb
mov
adc
lret
jl
data16
test
dec
jbe
mov
or
fistps
pusha
ret
loopne
pop
lea
mov
imul
mov
and
pop
push
pop
sbb
push
lea
int3
movsl
nop
icebp
loopne
xchg
stos
mov
ljmp
rcrl
mulb
and
jecxz
clc
insb
pop
jmp
cmp
mov
in
jle
add
push
xchg
nop
mov
cltd
xlat
inc
clc
into
dec
outsb
sbb
loopne
push
test
mov
xchg
mov
in
das
push
lea
sub
jno
jecxz
sbb
movsl
dec
in
int3
mov
and
cmpsb
mov
fcoms
xchg
xchg
pop
js
sbb
dec
mov
add
sub
test
add
insl
push
mov
lds
mov
stos
pop
jne
data16
fisubrl
pusha
inc
push
lret
ret
adc
mov
inc
push
loope
sub
xor
mov
test
daa
push
fmuls
stc
enter
jg
test
jno
inc
push
pusha
adc
clc
inc
out
sub
outsb
fs
pop
push
jge
nop
lret
sbb
jnp
mov
cmpsb
dec
sub
aaa
pop
mov
jle
or
or
inc
out
jno
incl
inc
lcall
notl
pop
sub
mov
ss
mov
ret
jo
push
insl
cld
sarb
xchg
jb
cmp
divb
loopne
jp
jecxz
lods
rorl
out
xchg
lock
dec
daa
push
mov
data16
adc
cmp
mov
stos
pop
lea
mov
outsl
and
repnz
test
aas
fs
lret
push
repz
xchg
out
add
mov
sti
cld
sub
ds
cmp
adc
jg
das
scas
hlt
mov
int3
icebp
int3
jmp
dec
mov
popa
add
inc
inc
pop
push
icebp
ljmp
push
loopne
cmc
inc
jo
icebp
lock
daa
jmp
cmpsb
outsb
jecxz
fsubs
mov
stos
xchg
fistps
sbb
dec
jo
jb
mov
repnz
xchg
push
movsl
movsl
sahf
xchg
scas
stos
into
cwtl
pop
sub
xlat
push
and
leave
in
and
jl
jbe
push
or
adc
mov
inc
out
mov
dec
or
xor
insb
pop
in
test
call
call
add
test
pop
ret
or
adc
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
hlt
xchg
rclb
pfrsqit1
pop
popa
mov
adc
pop
sarb
adc
jmp
mov
enter
xchg
xlat
cmp
fcmovnb
mov
and
pop
hlt
loop
xchg
je
push
pop
scas
xor
repz
sbb
mov
xchg
and
mov
jae
mov
iret
imulb
lret
jecxz
push
cmpsl
and
mov
bt
sbb
or
fists
out
shll
dec
xor
xchg
xor
mov
cmpsl
cmp
xchg
mov
adc
sbb
pusha
dec
shll
lds
aaa
gs
js
dec
jns
outsb
push
in
push
cmp
mov
pmulhw
push
xchg
pop
inc
inc
and
mov
shlb
rcrl
ret
mov
stos
xor
mov
daa
add
rcll
and
push
xchg
mov
cmp
pusha
stos
in
mov
sbb
xor
es
data16
mov
lds
pop
jl
mov
sub
pop
aad
cli
outsl
push
repz
push
xor
clc
scas
das
jbe
adc
dec
mov
lahf
movaps
push
push
insb
clc
sbb
adc
push
das
imul
rclb
iret
add
mov
enter
xchg
jle
shll
sbbb
push
cmp
jmp
lret
insl
lods
jle
movsl
jbe
daa
idiv
out
push
inc
inc
mov
or
dec
sub
test
jnp
loope
inc
call
les
imul
in
addr16
cmp
cmp
fsubl
sbb
push
insb
lret
sbb
jo
sub
icebp
adc
lret
pop
and
jle
mov
divb
add
cmc
adcl
clc
int3
cltd
add
sub
inc
dec
adc
add
movsl
movsb
jo
jl
jns
hlt
out
dec
stc
jb
dec
add
xchg
mov
pop
scas
outsb
jmp
xor
ret
jnp
cmp
movsb
lret
mov
lret
mov
andl
sub
push
addr16
mov
stos
pushf
lods
or
std
and
adcl
dec
add
or
xchg
or
scas
out
adc
lret
mov
and
data16
push
popf
pop
gs
and
aaa
mov
dec
les
flds
sbb
imul
cmc
or
xchg
and
out
xchg
pop
stos
cmpsl
cmpsb
mov
scas
or
mov
xorb
jmp
inc
out
insb
pop
filds
mov
ja
pushf
lods
cmc
mov
cmp
pop
movl
lret
decl
push
test
loope
sbb
pop
fdivs
inc
and
dec
add
addr16
fsubrp
push
sbb
ja
mov
cld
mov
pushf
cs
inc
shlb
cmc
mov
xor
and
ds
push
cmp
cmp
adcl
push
jnp
test
addr16
mov
and
das
nop
jp
sub
mov
bound
mov
inc
mov
sti
fisubl
test
out
push
dec
int3
fistpl
mov
mov
adc
mov
andb
out
sub
xor
mov
pmuludq
jp
cmc
jl
sub
aad
shl
or
pop
push
inc
mov
xchg
push
sbb
cmpsb
mov
dec
jp
outsb
out
adc
aad
lods
xor
push
pop
inc
into
clc
jnp
fcmovbe
ja
lret
adc
hlt
inc
imul
push
out
jg
cmp
fwait
aas
dec
lcall
jne
into
and
loopne
mov
mov
jb
mov
mov
fsubrs
lcall
ss
lret
daa
push
clc
cmpsb
add
mov
in
adc
inc
notl
imull
push
pop
mov
mov
aaa
loope
sti
cld
out
sbb
mov
inc
mov
addr16
mov
sub
cmpsb
push
enter
mov
lcall
ret
addb
in
ljmp
test
sub
inc
add
sub
mov
in
aam
mov
outsb
xchg
rorb
mov
add
fwait
pushf
pop
pop
js
or
sbb
loopne
inc
in
jno
es
cmp
sub
js
or
mov
filds
inc
mov
add
cmpsl
loope
es
dec
jno
xchg
loop
test
je
xchg
ret
into
stc
cmp
shrl
xchg
jg
jmp
addr16
in
aas
pushf
dec
add
les
xlat
pop
shl
push
testl
pop
int
pop
pop
fcomip
scas
movsl
sub
lds
rorb
sti
add
xor
sub
jecxz
por
fiadds
push
daa
andl
es
mov
in
leave
aas
jmp
push
fcompl
mov
sti
bound
mov
loop
inc
jge
imul
int3
icebp
dec
adc
sub
mov
jmp
sbb
pop
cmp
pop
jmp
in
ja
ljmp
dec
mov
cmpsl
jg
sbbb
pop
cmp
push
pop
mov
fnstsw
in
dec
bound
inc
out
push
mov
in
inc
xchg
and
xchg
xchg
mov
lods
shrl
sub
sub
lds
xchg
jg
dec
cmpsb
cld
mov
xchg
xlat
lcall
les
jecxz
daa
in
filds
shll
mov
repz
mov
fsubs
lods
int
cmc
mov
js
mov
aaa
inc
outsl
out
cmpsb
popa
movsl
xor
mov
cmp
sti
pop
xchg
test
push
and
ss
sbb
push
shll
pop
cld
cmp
push
and
push
or
pop
std
pushf
dec
popa
inc
fildll
ret
mov
lcall
outsw
and
dec
adc
xorl
sub
fmuls
gs
sbb
cmp
xchg
or
xor
mov
enter
int
mov
ret
push
pop
dec
cmpsb
dec
jae
mov
or
cwtl
cmp
mov
insb
repz
fsubl
rcll
sub
mov
popa
in
mov
cmp
push
ficomps
rorl
xor
stos
pop
shr
mov
jbe
push
push
inc
pop
fcoms
jecxz
movsl
cmpsl
xor
rcll
mov
and
xchg
push
mov
cwtl
sbb
lea
fdivrl
xchg
add
outsb
lcall
data16
or
outsb
fwait
cmpsb
shl
pop
inc
lds
inc
adc
pop
xor
in
mov
mov
pop
xchg
jge
inc
jmp
rorl
rclb
mov
out
mov
xchg
loope
ljmp
adc
incl
and
xor
sbb
dec
push
cmp
push
sub
movsb
dec
pop
and
stc
jb
ret
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
push
fimull
xor
scas
pop
pushl
cs
xor
sahf
dec
jns
cmp
insl
mov
mov
jno
leave
ja
cmc
mov
shld
xlat
mov
ret
xor
xchg
dec
or
fcomp
mov
outsb
mov
xchg
xlat
divb
add
movsb
xor
lods
les
xor
lahf
cmp
addr16
cs
in
out
mov
dec
sbb
test
adc
adc
mov
or
xchg
jmp
or
push
hlt
addr16
pop
test
dec
pop
pushf
mov
pop
pop
idiv
insb
mov
lea
mov
mov
bound
sahf
insb
push
dec
push
sarb
pop
mov
push
lahf
adc
icebp
dec
adc
lds
fiaddl
cwtl
push
iret
pop
mov
jmp
cli
mov
gs
repnz
addb
rorl
jnp
cli
fbld
in
in
insb
ror
cmpsb
fsubs
loopne
inc
fdivs
lock
scas
adc
test
dec
dec
aad
lahf
cs
test
cmpsl
sub
push
jns
mov
push
jge
cmpsl
rclb
notl
daa
xchg
add
lods
push
and
mov
xor
push
pop
nop
sub
rol
mov
cwtl
jne
sbb
dec
popa
je
jmp
cmp
pop
subb
jbe
pop
inc
or
adc
lea
out
push
xor
popf
and
sub
dec
mov
push
ret
in
mov
clc
add
sub
and
lret
or
into
jl
lea
arpl
call
int
aam
icebp
pop
xchg
dec
cli
out
mov
int
jno
jecxz
test
mov
ja
dec
dec
push
aam
sub
iret
add
aaa
mov
cmp
stos
sbb
test
ljmp
jb
push
jne
adc
push
ss
std
xchg
jecxz
sahf
mov
lret
scas
out
sub
mov
popa
js
sub
in
movsl
jns
lret
outsl
and
fsubr
inc
imul
mov
je
sahf
pop
lcall
outsl
inc
sbb
jp
out
ja
incl
adc
cmp
mov
fdivr
xchg
outsl
or
pop
das
mov
pop
lret
lds
and
aaa
add
push
xchg
lahf
mov
mov
cmpsb
out
mov
or
ds
popf
shrb
in
cmpsb
jns
mov
hlt
xchg
sarl
dec
cmpsl
test
or
fdivl
mov
pop
lods
pop
shlb
inc
sub
aad
lods
jno
mov
sahf
loop
cmpsb
sbb
test
bound
popf
xor
xor
lods
mov
outsb
aad
jmp
sti
mov
inc
mov
add
mov
add
mov
ja
adc
ss
in
ret
mov
int
movsl
pop
icebp
sar
ja
int
mov
mov
dec
xchg
cli
bound
je
jb
cld
jle
mov
cmp
fwait
mov
pop
pop
xchg
jns
test
cmpsb
out
push
jecxz
xor
add
sbb
and
dec
adc
call
sahf
sub
shll
movsb
pop
pop
out
insb
jbe
push
pop
shlb
dec
inc
inc
and
andb
xor
cmc
adc
mov
cmpsl
mov
loop
xor
jnp
stos
pop
lock
sub
ds
and
add
shll
mov
cmc
and
cmpsl
sti
sbb
lret
push
mov
xchg
sbb
stc
adc
pop
sbb
out
scas
pop
ljmp
mov
call
xchg
lret
push
dec
and
movsb
call
jo
fwait
cmpb
cmpsb
xchg
inc
mov
jns
sub
bswap
mov
std
push
inc
pop
jnp
push
jl
test
mov
mov
pop
and
out
mov
ljmp
jnp
jae
sarl
dec
jg
sahf
xchg
es
jno
out
lret
inc
and
adc
enter
push
popa
js
or
div
xchg
mov
lret
xchg
jmp
iret
adc
lret
sub
pop
cmpsb
sub
in
nop
dec
xor
xchg
xchg
fwait
mov
aas
sub
popf
xor
pop
xchg
push
cmpsl
or
cmp
adc
out
or
and
stos
dec
scas
and
cmp
loopw
jl
in
pop
dec
and
loopne
mov
repnz
adc
inc
add
ret
and
inc
cld
int3
pop
pop
iret
jno
sarl
mov
push
out
push
pop
iret
cmc
sbb
xor
pop
inc
and
ljmp
aas
pop
popf
jge
fildl
push
arpl
add
imul
lea
dec
mov
dec
sub
xchg
xchg
hlt
cld
filds
bound
push
cmp
rolb
mov
jle
pop
call
sub
ljmp
or
fcmovbe
fwait
add
mov
mov
or
push
fnop
aad
outsl
xchg
int3
pop
mov
fwait
add
jae
jno
loopne
ret
loop
and
inc
xor
lret
pusha
jle
xor
dec
adcl
cwtl
in
inc
mov
mov
and
std
add
and
dec
fcomp
push
pop
insl
pop
or
jg
jnp
cmp
jb
lret
int
ljmp
mov
jne
inc
ret
pushf
jle
push
les
pop
jge
cmp
add
pop
sbb
call
cli
mov
insb
sub
dec
in
aas
xchg
inc
adc
xor
add
aad
lret
rcrb
push
adcb
pop
nop
lahf
repnz
jnp
inc
ljmp
ret
stos
jle
cmpsb
adc
enter
push
fsubp
jnp
mov
push
jno
push
cmpsb
leave
cs
or
sub
daa
mov
popf
aad
imul
into
dec
data16
push
in
jg
mov
outsb
cli
sbb
and
jp
arpl
dec
adc
and
xchg
cmc
shll
popa
adc
jno
icebp
inc
dec
fwait
ret
int
fdivl
mov
lods
mul
and
sbb
mov
cltd
xchg
xor
or
cltd
cltd
scas
pop
in
ss
xlat
cltd
push
fdivr
mov
shrb
movsl
push
xor
or
push
insb
add
dec
out
jg
fwait
push
sti
xchg
aad
mov
and
or
pusha
push
dec
mov
cs
loopne
es
imul
push
pop
arpl
add
mov
fisttps
xchg
mov
mov
push
jl
cmp
data16
adc
lcall
jecxz
adc
mov
leave
and
lods
loopne
iret
sbb
pop
loop
xchg
inc
shrb
push
das
sahf
out
or
jnp
pushf
fcmovb
lcall
mov
mov
mov
jb
mov
mov
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
mull
cmpsb
mov
jnp
gs
mov
fcompl
jne
mov
fisttpll
int
test
insl
out
add
test
call
pop
loop
add
cmp
int
lock
out
or
repnz
jp
es
lahf
and
and
push
mov
inc
cmc
scas
push
sbb
mov
sahf
and
dec
mov
lea
push
test
jmp
mov
and
push
jno
ja
es
loope
jp
rorb
aas
inc
mov
mov
fs
sbb
xchg
jae
cltd
cmp
loop
add
lds
mov
nop
mov
xchg
mov
shll
fs
xchg
hlt
jb
js
int
inc
cmovo
jns
and
sbb
pop
or
mov
push
xchg
cmp
fimull
dec
insb
fwait
pop
rclb
xor
inc
mov
ret
mov
inc
xor
xor
add
or
test
dec
sar
jbe
sub
push
test
jno
adc
scas
ficompl
pop
sub
adc
data16
pop
pop
test
sbb
rcrl
in
enter
mov
push
nop
roll
sahf
mov
rcrl
lahf
inc
inc
pop
mov
jmp
xor
movsl
mov
mov
scas
sub
in
sub
test
ret
sub
nop
and
sub
and
test
mov
data16
push
xchg
jnp
call
push
bound
in
and
pop
icebp
xor
shl
mov
hlt
adc
mov
jmp
out
rorl
add
std
adc
mov
cli
lock
xchg
push
pop
icebp
pusha
adc
aad
cmp
cld
push
inc
jbe
xchg
loopne
cli
add
mov
jno
and
cld
pop
and
ret
repz
xchg
call
ds
inc
cltd
adcb
out
insb
dec
inc
mov
xchg
adc
or
pop
clc
sti
ror
sti
cmp
push
push
xchg
sbb
lods
add
jmp
out
rolb
test
jp
orl
jecxz
pop
jbe
out
je
mov
dec
in
cmpsl
lret
mov
jmp
push
lcall
push
hlt
test
pop
lahf
cmp
xchg
into
in
push
cmp
push
push
dec
ljmp
or
sub
push
inc
fldl
dec
ret
or
jb
out
js
pop
inc
xchg
fldenv
test
pop
mov
repnz
mov
test
xor
jne
sub
pop
movsb
xor
jns
sarl
rorl
push
dec
jbe
sahf
mov
inc
ret
dec
iret
and
sbbl
je
movl
test
sbb
rcrb
push
mov
jo
jecxz
dec
nop
sbb
pop
or
inc
pop
pop
cmp
cmc
decl
push
xchg
fisubrs
scas
adc
xor
push
sbb
mov
loop
outsb
ds
iret
xor
dec
push
jne
mov
dec
call
lcall
push
push
add
sub
cmp
pop
mov
jbe
and
cli
sti
or
mov
fiaddl
int3
in
sub
lods
sbb
mov
jns
adc
push
fistpll
adc
mov
inc
lea
adc
dec
jno
fstp
mov
or
cmovg
rolb
sub
out
out
pop
mov
orb
jno
push
adc
add
test
jns
lret
push
out
dec
enter
xor
and
mov
imul
jge
push
int
movsb
sbb
mov
mov
mov
inc
lcall
dec
repnz
and
cmp
xor
fdivrl
ja
push
and
mov
or
pop
pop
lods
jecxz
add
add
sar
push
movsb
fnsave
lods
adc
jo
flds
push
mov
xor
cmp
push
fadds
push
jp
adc
sbb
ja
jle
or
lea
dec
es
loop
scas
xor
int3
stos
mov
out
pop
push
inc
testb
repz
sarl
icebp
cltd
and
sub
mov
xor
into
jo
mov
cltd
cmp
aaa
cmp
cmp
rorb
mov
imul
pusha
mov
hlt
imul
sbb
cltd
add
iret
xor
xchg
in
not
movsl
scas
add
int3
inc
ret
je
into
nop
sti
sbb
or
rcll
inc
inc
push
push
xor
sbb
jno
ljmp
subl
mov
jmp
aam
dec
fnstcw
icebp
mov
idivb
popa
das
jmp
aad
add
xor
je
leave
ret
subb
inc
adc
xor
jbe
loop
pop
adc
xor
test
jo
cmp
inc
fs
aad
push
cmc
xor
stos
jne
sub
insb
sub
xchg
fcmove
inc
test
call
push
mov
lods
int
jbe
push
and
add
dec
loope
sbb
push
sbb
aaa
movsl
push
lock
push
pusha
sbb
aad
fs
fs
inc
xchg
jne
pop
mov
mov
pop
cmpsl
add
iret
adc
stos
cltd
cld
and
cli
fdivrs
cs
adc
mov
push
add
sbb
mov
inc
pop
leave
xchg
xchg
dec
ljmp
clc
sahf
jg
lock
stos
adc
popa
add
scas
mov
adc
fsubs
in
stos
jg
mov
int
and
movsb
jne
scas
pop
and
sub
in
hlt
jge
pop
sbb
sbb
adc
fnsave
mov
aam
neg
pop
sbb
xchg
cmc
cltd
sub
mov
cmp
arpl
movsb
lret
out
aas
mov
fcoms
jne
mov
das
sbb
dec
out
scas
outsl
jo
mov
aad
enterw
jno
sub
sub
test
clc
inc
sub
mov
sub
out
cmpsl
fldenv
adc
out
inc
xor
in
nop
adc
sbb
add
inc
adc
jo
fs
mov
mov
xrelease
mov
adc
lods
and
inc
test
inc
insb
xor
mov
or
dec
js
adc
jno
jle
outsl
jle
mov
sbb
jne
dec
inc
je
mov
sub
cmovne
sbb
mov
adc
mov
and
xchg
or
push
cmc
push
dec
scas
mov
adc
outsb
mov
xorl
mov
repz
les
add
cmp
popf
sub
leave
sub
leave
divl
aas
data16
out
out
xchg
sub
cmp
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
adc
adc
wrmsr
mov
mov
loop
jge
mov
jb
sub
ja
stos
pushf
or
cmp
jle
push
jmp
pop
fsubrs
or
inc
movsb
loope
pop
stc
inc
out
sahf
jl
cmp
lods
dec
int3
jnp
jae
jecxz
xchg
iret
iret
fdivs
dec
mov
mov
ret
dec
mov
insl
push
mov
out
pop
dec
scas
arpl
xchg
sbb
mov
bnd
je
cmpb
std
bound
sar
pop
stos
daa
cmpsl
add
dec
int3
pop
jo
push
ret
rorb
inc
fstp
fwait
addr16
insb
mov
outsl
dec
mov
mov
cli
insl
aas
out
insb
dec
mov
in
inc
outsb
js
cmpsl
call
and
mov
ljmp
ret
mov
inc
ss
pop
mov
push
neg
sbb
mov
dec
mov
push
fldenv
xchg
stc
pop
int
les
cmp
inc
sbb
lods
xor
xchg
pop
in
and
addl
fldl
insb
ljmp
dec
add
cmp
dec
fdivrs
out
lcall
movb
pop
jae
cmp
call
imul
shlb
push
mov
mov
cmp
adc
shld
dec
mov
repz
xor
inc
adc
lds
test
in
arpl
pushf
xor
or
add
mov
xchg
ret
stos
cltd
cmp
scas
mov
pop
mov
rcrb
lcall
loope
cwtl
jmp
inc
lods
inc
notb
pop
adc
test
aaa
sub
jne
pop
push
std
bound
adc
dec
sub
roll
imul
fmuls
dec
jecxz
and
push
gs
and
xchg
mov
lea
sbb
xlat
scas
mov
popw
popf
lock
loopne
mov
push
shl
xchg
lock
and
jb
lods
push
mov
or
movl
mov
jns
inc
out
addb
scas
and
push
test
jo
outsb
mov
fwait
sub
mov
xchg
rol
sbb
dec
xchg
or
mov
jne
cltd
insl
popf
add
fidivrl
loope
in
mov
pusha
jge
sub
test
subl
aad
dec
push
ret
out
bound
js
sub
push
outsl
aas
xor
add
daa
aam
mov
cwtl
mov
pop
adcl
sahf
fadds
push
push
xchg
fildl
cmpsl
xchg
adc
mov
mov
mov
dec
dec
and
inc
mov
mov
mov
xor
cmc
call
mov
lret
mov
scas
push
fistps
sahf
ljmp
sub
sarl
mov
xor
enter
ret
aaa
sbb
or
jno
andl
fisubl
cmc
jo
iret
pop
xchg
in
inc
pop
cmpsl
outsl
mov
je
or
inc
lcall
es
mov
inc
inc
rorb
add
dec
shrl
push
and
ja
push
xchg
cmpsb
add
cltd
mov
cmpsb
in
xchg
jle
lahf
idivl
jge
sub
sbb
xchg
sub
push
xor
push
rcrb
fstps
insb
jle
xchg
iret
test
mov
popf
sub
sub
outsl
in
idiv
cmpsl
lahf
jmp
outsb
mov
aam
mov
loope
push
xchg
aam
xchg
mov
aad
out
xchg
sarb
mov
and
cmpsl
or
popf
ds
mov
dec
fiaddl
jmp
pop
arpl
sbb
in
cltd
fadds
sub
push
cmp
xor
sbb
shl
cmc
ja
movsb
inc
and
adc
scas
xchg
stc
in
hlt
shll
jecxz
and
outsb
mov
pop
lret
cld
pop
sbb
add
mov
xchg
and
or
leave
mov
push
push
stos
rorb
push
cmp
dec
xchg
aad
mov
out
insl
mov
jo
mov
mov
test
cmpsl
rclb
stos
xchg
mov
mov
ret
xchg
sbb
jmp
fiadds
push
jg
jl
xor
addr16
jp
sbb
and
fmuls
bound
gs
sub
mov
test
lret
mov
cmp
loopne
jbe
push
mov
sub
cmpsl
arpl
sbb
sbb
arpl
lahf
push
mov
dec
lds
fwait
outsl
daa
mov
xchg
scas
cmp
leave
sub
xorb
push
clc
cmp
in
aaa
ret
test
cmp
jmp
mov
jb
andb
mov
mov
mov
push
inc
jle
cmp
mov
pop
xchg
jbe
push
mov
test
sub
sbbb
insb
rorb
or
lods
mov
repnz
xchg
and
push
dec
push
outsb
pop
shlb
pop
movsb
push
sahf
mov
jnp
jecxz
jno
pop
in
sub
jl
adc
mov
jnp
out
inc
mov
jae
scas
mov
sub
adc
clc
push
mov
cs
bound
push
fcomps
mov
xor
or
ficoml
lods
adc
mov
and
lahf
jl
pop
sub
test
shll
popf
adc
pop
adc
and
add
xchg
hlt
push
inc
stc
push
xor
pop
lock
cs
lret
or
call
pop
lock
fldl
fcmovnbe
cmp
xchg
data16
jnp
in
mov
lods
out
and
adc
xchg
push
or
push
mov
push
aam
mov
fiaddl
sub
fisubl
das
adc
sub
pop
sbb
out
std
pop
stos
mov
fwait
cmpsb
cmp
mov
in
gs
mov
and
push
and
outsb
imul
jbe
sbb
cmp
sbb
pushf
adc
inc
push
popa
cmc
dec
adc
pop
inc
movsb
push
int
xor
xchg
adc
test
ds
dec
inc
mov
jbe
and
sbb
fsubrl
dec
push
cmp
out
mov
mov
daa
out
xor
imul
je
mov
ljmp
mov
cltd
cmpsl
jae
jecxz
out
mov
subl
dec
sbb
sub
xchg
andl
sub
xor
cmp
mov
jno
pop
dec
pop
mov
ja
mov
mov
shlb
leave
mov
cmp
lret
dec
ljmp
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
nop
inc
pop
add
ja
or
mov
jno
unpckhps
imul
jge
dec
ret
addb
jb
jns
inc
mov
fidivl
pop
fs
mov
mov
cmp
js
cli
scas
sbb
dec
nop
movsb
pop
test
add
stc
xor
out
mov
xchg
mov
fstpt
push
leave
mov
test
je
cmp
sbb
cwtl
shll
and
mov
mov
sub
and
stos
stos
pop
adc
test
shlb
jne
dec
push
pusha
mov
sbb
shlb
xchg
xchg
negb
leave
jb
sbb
xor
jmp
lods
xor
ficoms
roll
ret
fcomi
sbb
sahf
in
inc
cmp
mov
add
xor
stc
xchg
addr16
pop
cmp
sbb
jg
movq
mov
leave
mov
ds
push
pop
cmpsb
ds
lods
subb
lds
adc
jmp
and
or
ljmp
fwait
sbb
or
adc
cmc
adc
add
or
sbb
les
pop
clc
cltd
fwait
mov
push
push
push
enter
xchg
loop
aad
out
or
mov
nop
xchg
loope,pn
ret
cmp
mov
push
das
cmp
sbb
mov
mov
testb
push
xchg
dec
mov
or
inc
rcr
cld
cmp
mov
cs
shlb
rorb
ret
inc
cmpsl
cltd
popf
cmp
int3
enter
popf
fstpl
dec
xchg
mov
xchg
or
adc
stos
cmc
inc
and
fsubrl
out
cmp
imul
jns
stc
in
pop
inc
sbb
int3
ljmp
test
jg
cmp
inc
mov
add
gs
jge
popf
lock
in
stos
mov
ficompl
inc
lret
pushf
cmpb
dec
ficompl
roll
test
adc
jbe
popf
mov
mov
sub
repnz
push
rcr
xchg
leave
add
push
cmpsb
mov
dec
pop
mov
and
xor
scas
push
and
out
mov
lea
sbbb
push
xor
mov
pop
fwait
inc
sub
inc
jmp
pop
xchg
pop
add
sarl
add
push
subl
or
inc
lret
cmp
cmpsb
push
jle
or
ficomps
or
stos
aas
shrl
int
addr16
pop
call
lea
xor
out
adc
xchg
dec
lock
jae
push
shr
cmpsb
inc
repz
lds
sbb
cltd
jae
addl
sub
int
movsl
imul
in
jecxz
adc
stos
jg
pop
rorb
jl
sub
loopne
jbe
mov
xchg
dec
mov
xchg
dec
inc
mov
and
sbb
push
xchg
mov
icebp
mov
fmull
lret
mov
clc
loop
jmp
out
cld
rol
cwtl
lock
out
sub
mov
xchg
or
fadds
cmp
pop
push
mov
fsub
push
je
dec
dec
sub
mov
mov
cmp
insl
aam
data16
inc
outsl
mov
int3
mov
sub
std
fs
push
push
adc
ret
pushf
dec
outsl
out
test
cmp
mov
fcmovu
adc
movsb
lods
sbb
sbb
in
cmp
add
inc
fistl
test
jbe
inc
xchg
pop
add
ficoml
pop
adc
lret
pop
mov
jl
xor
inc
int3
mov
std
sub
mov
out
push
jmp
push
scas
test
and
movsb
fists
iret
push
call
inc
xchg
fisttps
jle
pop
aad
mov
mov
out
mov
iret
pushf
movsl
and
cmp
in
jge
mov
mov
add
filds
mov
adc
add
jne
cmp
loop
sub
iret
popa
sti
xor
leave
sbb
xchg
popl
daa
sub
mov
rclb
in
add
xchg
xchg
inc
mov
negb
repz
shrb
push
cmp
jae
out
bound
aad
fsubrl
pusha
cmp
or
ret
sbb
xor
mov
push
sbb
xor
jecxz
enter
push
iret
push
jae
stos
cmp
inc
insl
daa
cmpsl
rorl
xchg
rcrl
cmp
jnp
repnz
xchg
sti
data16
inc
xchg
or
ret
in
mov
mov
cwtl
jecxz
add
or
sub
xchg
xchg
pop
rcrl
fldcw
add
rorl
push
fsub
lock
lock
xchg
and
cld
repnz
mov
push
loop
je
aam
scas
or
test
push
mov
sub
or
and
incb
sub
lds
mov
mov
mov
mov
push
cmp
and
pusha
insb
xor
aas
dec
mov
sbb
xchg
sub
repnz
test
std
and
xor
test
sbb
out
aam
std
fldl
and
je
subb
repz
pop
enter
test
mov
dec
into
rcrb
sbb
lahf
fnstenv
jg
insb
repnz
adc
sub
out
inc
xchg
mov
push
inc
aad
insl
lock
xor
push
jnp
jo
je
ja
shll
push
scas
sarb
loop
dec
test
shlb
jl
xlat
inc
lods
aaa
dec
rcr
dec
test
int
fdivl
xchg
jle
or
iret
into
mov
sbb
sbb
icebp
push
lods
movsl
cmp
arpl
ljmp
inc
and
and
push
call
mov
scas
leave
cld
jge
fstpl
js
mov
xlat
outsl
lahf
jbe
cs
push
xor
or
adc
sbb
mov
aas
in
mov
jae
cmp
sar
mov
stos
clc
adc
ja
ljmp
jo
cmp
push
repnz
inc
cwtl
imul
sub
sbbl
ret
out
test
int
pop
out
pushf
mov
push
out
jbe
ret
iret
sbb
mov
movsl
cmp
pop
shll
dec
cltd
shr
inc
cmpsb
ret
shl
xchg
pusha
and
jne
add
xchg
or
scas
mov
jmp
cld
push
adc
popa
push
or
out
clc
nop
mov
sbb
movsb
pusha
pmaddwd
xchg
movsb
fstps
or
mov
iret
sub
repnz
jl
test
push
mov
popf
repnz
mov
push
mov
pop
insb
jge
jge
inc
xchg
push
fwait
mov
mov
mov
sub
push
stos
sbb
std
js
pop
das
jb
fildl
jmp
cmp
adc
mov
test
xchg
repz
xchg
out
aaa
adc
or
shrb
ret
mov
jle
mov
mov
lods
je
repnz
nop
xor
mov
jno
or
pop
and
popa
jmp
test
lds
insb
mov
js
outsb
add
orl
cmp
jge
push
sbb
push
negb
in
aam
leave
in
sbb
cmp
sub
add
jge
repnz
mov
mov
jg
jmp
lret
outsb
hlt
js
inc
lcall
addr16
jecxz
add
lea
call
outsb
adc
dec
mov
es
mov
jae
ja
add
fnstenv
notb
imulb
pop
out
outsl
jmp
sbb
mov
stos
scas
mov
mov
out
push
adcl
lock
repnz
insb
add
push
out
out
sbbb
push
mov
xchg
mov
fstps
or
inc
mull
test
bswap
test
push
loop
gs
lret
cmc
and
xchg
in
mov
xchg
fs
push
pop
out
lods
adc
jp
push
adc
and
lods
xchg
sti
push
or
sbb
or
fcoml
or
notl
ret
and
cmpsb
neg
fdivrs
shl
jge
inc
dec
sub
test
dec
into
fstpl
adc
fildll
pop
int3
insb
out
fld1
mov
sahf
mov
pop
jmp
or
fisubs
cmp
imul
scas
cmpsl
xor
pop
and
popl
rol
push
push
dec
or
pop
les
jnp
push
and
ss
aaa
mov
mov
rorb
mov
pusha
sub
loope
dec
dec
xchg
jo
leave
cmp
xor
add
aaa
mov
push
xchg
xchg
push
and
addr16
je
ret
sub
sbb
test
or
sub
mov
loopne
xor
es
repnz
mov
test
hlt
rcll
mov
aam
es
mov
cmp
lahf
jg
jne
cmp
jge
pop
das
mov
and
cmp
jge
incb
mov
jbe
push
or
pop
push
lcall
pop
adc
mov
pushl
push
stos
psubw
arpl
add
mov
pop
enter
sbb
mov
inc
jge
pop
cmp
mov
add
es
sbb
cmpb
sbb
icebp
jno
lds
cmp
xchg
imul
add
dec
or
xor
inc
daa
mov
lock
cmp
lahf
jmp
xchg
test
sahf
adc
cwtl
rcll
mov
xchg
clc
sub
sti
mov
pop
pushf
xor
repnz
ret
push
cmp
cs
aas
mov
push
nop
dec
add
sbb
jg
adc
subb
test
shll
pop
in
xchg
inc
fdivr
mov
ss
ficompl
ljmp
aaa
stc
ja
cmp
mov
stos
cs
fwait
dec
js
mov
movl
fwait
sub
push
popf
js
mov
mov
fwait
cmp
mov
fisubl
dec
lret
divb
sub
sahf
ja
imul
nop
xlat
sbb
xchg
push
push
and
inc
int3
rol
mov
in
rcl
xor
xor
dec
loopne
ret
add
jns
mov
push
out
pop
into
stos
jmp
push
fwait
jge
es
and
push
mov
and
enter
dec
dec
cmp
xor
add
fdivrl
adc
jmp
xor
outsl
sub
pop
push
mov
pop
xor
jle
in
push
xchg
xor
xchg
les
das
cmp
mov
adc
and
xchg
insb
lds
push
fildl
xchg
and
or
pop
fwait
int3
sbb
dec
mov
jno
bound
test
jae
ret
lock
xchg
popa
movl
mov
dec
ret
movsl
push
ljmp
sahf
std
and
gs
sbb
daa
mov
sbb
lods
dec
shr
loopne
sbb
adc
dec
push
dec
mov
jmp
leave
fwait
hlt
movsl
jae
fistl
popf
out
mov
ja
xchg
fwait
das
loopne
cmp
leave
dec
leave
aaa
scas
stc
push
jl
pusha
test
jle
pop
xor
shlb
rclb
push
xchg
xorb
gs
rorb
cmp
inc
push
push
push
cmp
jge
je
mov
adc
fadd
roll
stos
andl
push
add
pop
mov
or
mov
pop
das
adc
cmp
pop
xchg
fwait
push
sbb
rcrl
negl
xor
popa
xchg
cmp
inc
mov
es
lods
enter
int
out
fmuls
cs
lods
lods
push
dec
in
jns
lods
addr16
aaa
push
push
adc
cmpsb
cmp
adc
popf
fadds
pushf
mov
jb
mov
xlat
adcb
lea
push
insl
in
shl
push
repnz
cmp
cmp
push
add
push
rcll
pop
jle
faddp
imul
std
mov
mov
ja
xchg
adcl
inc
ja
mov
mov
inc
dec
sub
jp
insb
xor
aam
adc
mov
adc
xor
push
mov
fwait
ret
lods
fstps
add
neg
or
push
rcrl
arpl
outsl
fimuls
in
jecxz
cmp
mov
popf
pop
adc
pop
mov
dec
frstor
movb
xchg
pop
bound
je
cli
dec
loopne
ljmp
ds
xchg
jne
mov
imul
in
jno,pn
arpl
inc
fstpt
push
ficompl
fsubl
mov
pop
mov
aad
and
out
push
inc
mov
jb
fmul
incb
bound
cmc
lcall
out
mov
lods
pop
mov
icebp
sbb
js
rcl
jge
aas
cmp
lock
and
dec
or
dec
cmp
jae
dec
xor
out
push
sbb
inc
mov
bound
je
push
adcb
dec
insb
and
nop
add
and
in
xchg
inc
ljmp
cmc
bound
addb
cmp
pop
outsl
jl
ret
daa
insl
mov
cltd
lods
stc
jl
loope
mov
mov
push
iret
dec
daa
lret
mov
pop
loop
or
or
cmp
and
mov
inc
sub
stos
inc
int
dec
xchg
fcmovb
jns
clc
fs
adc
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
xorl
sahf
push
test
pushf
fs
pusha
dec
dec
gs
sub
rorb
aas
rorb
pop
mov
mov
cmc
mov
and
loopne
and
jns
nop
pop
cltd
xor
idivb
sahf
jge
xor
adc
in
cmp
test
je
cld
in
push
xor
adc
lret
xorb
cmp
les
push
call
mov
jo
pop
lret
xchg
adc
sahf
push
ljmp
mov
push
insl
xchg
out
movsb
cmp
arpl
dec
xchg
stc
iret
mov
cmp
icebp
cmp
push
jecxz
es
lds
sbb
xchg
xchg
and
cmpsl
movsb
mov
sbb
mov
loope
push
xor
fwait
out
ficomps
and
jecxz
cld
into
scas
cmp
mov
lock
pop
xchg
dec
xor
cld
sarb
scas
loope
adc
repnz
push
out
shrl
jne
int3
out
insl
shlb
xchg
cmp
push
jle
push
flds
inc
lret
dec
jae
outsl
insl
mov
adc
clc
sbb
cltd
jmp
jl
sbb
enter
pop
cmp
or
sub
adc
in
shrb
fbstp
add
cld
pop
ds
aaa
aas
in
test
inc
and
loopne
popf
nop
and
push
cli
imul
xor
inc
pop
mov
push
out
fcmovb
push
inc
fisubrs
jp
subb
dec
loopne
cwtl
jmp
adc
adc
lods
xor
mov
inc
cmp
jbe
dec
jge
shld
lods
inc
test
xchg
push
les
adc
roll
mov
jecxz
and
jo
xchg
sbb
mov
and
push
in
repnz
inc
xor
ljmp
xchg
cmpsb
je
sbb
scas
leave
mov
cmp
bound
sub
in
cs
enter
xor
mov
fisttps
or
cmp
test
loope
fdivs
inc
in
cmp
int
sbb
cmp
pop
push
es
mov
icebp
imul
mov
shll
fwait
jb
rol
jg
xor
sub
lret
jae
jne
inc
popf
test
jnp
push
lea
fldenv
xor
mov
add
lahf
push
push
jbe
xor
lret
or
cmp
cmp
push
int3
pop
lods
add
xor
hlt
out
int3
cs
push
cmp
dec
sti
mov
xor
decl
cmp
xor
das
or
testb
cmc
ds
mov
mov
mov
dec
ljmp
lds
dec
fdivl
js
jns
or
test
mov
mov
cmpl
nop
pop
outsb
imul
push
xor
adc
push
ja
ud1
mov
xor
sbb
push
mov
cwtl
cmp
popf
loopne
cmc
push
push
inc
loop
ja
mov
jne
inc
cmpsl
mov
sbb
rorb
mov
and
in
clc
mov
movsb
lcall
popa
xor
js
or
mov
adc
dec
orb
sub
push
xchg
xchg
adc
inc
mov
adc
sub
aas
mov
fmul
outsl
xor
cwtl
pop
pushf
sub
mov
xor
pop
pop
sbb
jo
cltd
mov
sbb
aam
loopne
outsb
add
sub
div
aaa
push
pop
add
gs
clc
out
fnstsw
adc
mov
rcrb
test
sqrtps
idivl
mov
fs
xchg
daa
aad
xchg
push
and
add
xlat
sub
int
dec
jecxz
test
xor
cli
fs
fmull
stos
mov
lock
and
xor
xchg
mov
adc
pop
mov
sti
in
std
jae,pt
ror
lea
cmc
popf
testl
nop
in
xchg
mov
jl
int
shrl
aam
int
outsb
sub
pop
cwtl
arpl
lods
push
lcall
xchg
mov
les
out
pop
pop
scas
cmp
push
lret
nopl
lret
pop
add
fwait
lahf
ljmp
dec
popl
ret
cld
jecxz
loop
fimuls
aaa
xor
sub
sub
adc
fcomip
sbb
je
push
adc
mov
xchg
sbb
xchg
lods
pop
gs
jnp
push
fldl
iret
stos
addr16
enter
outsl
in
jg
aad
subl
subl
pop
das
loop
cltd
cli
popf
imul
lcall
jl
xchg
cmc
add
mov
iret
cld
insl
or
and
aas
xor
test
mov
mov
mov
jns
fiaddl
cmp
inc
and
push
adc
push
jo
data16
add
lahf
das
lods
cmp
pop
rcll
or
test
sbb
pop
sbb
sbb
mov
test
icebp
test
loope
pop
ret
loop
push
shll
cmpl
outsb
jl
std
pop
jae
gs
jns
imul
es
jl
push
insl
and
add
sub
xor
add
mov
decl
cltd
mov
push
imul
inc
cmpsl
aas
push
dec
jmp
sub
data16
fwait
push
in
jno
fxch
insb
setge
sbb
aad
lret
mov
inc
xor
not
test
negb
into
mov
pop
fadd
xor
imul
insb
nop
scas
fwait
add
lea
cmp
sub
stos
ss
pop
arpl
icebp
ret
aaa
bound
std
inc
cmc
data16
push
fwait
and
cltd
lahf
or
int3
jbe
mov
test
sub
fistl
cmp
int3
out
push
outsl
jmp
cwtl
fstpt
fnstcw
shlb
inc
cwtl
rcr
adcl
aam
xchg
xchg
loop
cwtl
jbe
loop
push
and
sbb
inc
jo
sahf
add
mov
fcmovbe
ds
mov
out
testb
stos
push
shl
inc
incl
push
push
loop
and
mov
and
cmpsl
sbb
test
pop
pop
loope
in
add
xchg
adc
jnp
subb
lea
stc
movsb
movsl
inc
and
movb
mov
mov
cmpsl
and
inc
adc
xchg
mov
add
ss
pop
cs
iret
dec
inc
dec
add
push
mov
int
imul
movl
pushf
inc
or
repnz
cltd
sub
mov
jmp
ljmp
sub
push
push
cs
test
adc
xchg
and
push
shrl
outsl
outsl
jo
test
mov
cmpb
ds
out
inc
jbe
out
aad
fdivl
xlat
inc
lods
cmp
ss
cwtl
in
stos
fwait
lods
and
movsl
addl
aad
xchg
and
outsl
cmc
idivb
test
mov
fcoms
in
mov
mov
fcmovbe
sbb
adc
jbe
call
into
sbb
int
rorb
mov
testb
pop
gs
adc
jecxz
popf
cmp
add
mov
es
leave
xchg
pusha
inc
xor
or
iret
cmp
push
lahf
push
mov
ja
movsl
clc
cs
adc
popa
mov
xor
sub
notl
loopne
xchg
dec
or
and
addr16
xchg
pop
mov
inc
cmpsl
push
push
xchg
or
mov
decb
movsl
sub
in
mov
push
push
outsl
jl
xchg
popf
sbb
jo
into
sub
pusha
dec
xlat
mov
cmp
lods
stc
insb
outsl
pop
sbb
or
cli
popa
push
jl
sahf
and
cli
out
and
dec
inc
arpl
mov
je
mov
cmpb
fidivl
int3
inc
scas
and
test
out
xlat
mov
test
mov
loop
push
testb
lcall
cmp
xchg
or
xchg
aas
lods
and
jmp
leave
je
or
cmp
in
or
pop
stos
adc
mov
nop
sbb
cmpl
adc
cmp
imul
lods
int
in
inc
adc
loopne
xor
movsb
and
inc
adc
and
inc
or
leave
fwait
ljmp
adcl
jae
icebp
xor
movsl
test
add
xor
stos
xchg
jmp
cmp
jb
mov
jg
jno
mov
sbb
lods
adc
lcall
or
icebp
sti
or
test
mov
push
and
mov
or
mov
into
out
push
mov
or
into
and
aas
ficoms
push
imul
cld
adc
dec
addb
in
loop
les
push
sar
mov
outsb
or
addr16
mov
ficompl
imul
mov
pop
xchg
mov
xor
scas
fldt
je
daa
ja
sub
xchg
dec
dec
fcomip
sbb
lock
push
lds
and
sub
icebp
stos
addl
mov
pop
cmc
inc
cmp
push
xor
enter
xor
jnp
and
xchg
or
mov
mov
jge
pop
movl
mov
dec
daa
pop
jp
frstor
fldenv
mov
sub
sub
or
mov
adc
incb
xor
jbe
xchg
in
arpl
push
cmp
mov
or
mov
test
std
out
cwtl
out
inc
dec
mov
push
cli
xchg
and
push
or
shl
fcmovu
xchg
popf
cmp
iret
loopne
mov
call
daa
and
js
sti
cmp
jae
xchg
or
cmp
mov
cwtl
lcall
jae
and
cmp
sbb
out
sub
mov
lock
shlb
jo
push
and
shll
xor
call
lahf
ret
scas
adc
mov
leave
push
pop
divl
sub
popf
cmc
scas
divl
dec
xor
shl
push
adc
cld
gs
and
stos
and
push
gs
xor
jmp
stos
mov
lret
stos
pop
das
sbb
cld
add
or
push
int
pushf
out
ss
mov
mov
into
push
mov
je
aaa
push
mov
stos
push
test
stc
shll
movsb
imul
cli
imul
cmp
fldenv
sbbb
shrb
rcl
sahf
daa
inc
jmp
cmpsb
mov
movsl
inc
lea
cwtl
mov
int
mov
pop
dec
daa
pop
fildll
cltd
not
test
shrb
lahf
pop
sar
dec
out
fldt
pop
sbbl
imul
jmp
pop
in
in
inc
mov
stos
adc
aaa
popf
nop
add
cmp
leave
mov
mov
jp
adc
pop
adc
hlt
out
rcr
fiadds
orb
sbb
loop
xchg
sbb
outsb
jns
and
in
ret
inc
dec
sub
push
shrb
pop
mov
popf
jnp
and
dec
fildl
xchg
test
std
and
mov
jnp
test
in
jecxz
hlt
adc
test
flds
xor
adc
test
adc
jnp
sbb
imul
test
dec
movsl
sahf
mov
repnz
sbb
mov
ds
data16
jg
roll
sub
cltd
sub
xchg
xor
mov
and
push
adc
inc
pop
add
or
pusha
xor
jmp
xchg
cld
mov
iret
jp
lods
dec
popa
and
adc
les
cwtl
add
into
shr
stc
jl
inc
call
adc
push
daa
xchg
sbb
add
sub
int3
xchg
in
sahf
mov
sub
jb
and
sub
loop
sbb
test
aaa
enter
push
insb
icebp
adc
leave
pop
pop
fcoms
dec
adc
lahf
cmp
adc
xchg
aam
xchg
orl
push
lock
xor
and
xchg
sbb
repnz
or
jg
movsb
adc
inc
arpl
ss
test
pop
xchg
les
fbstp
out
sbb
cmp
sbb
loope
push
sti
and
in
pop
or
sbb
nop
push
cwtl
push
ja
dec
arpl
push
xchg
mov
xor
sti
mov
sbb
mov
stos
and
ror
ds
fcoml
cmpsl
gs
or
xor
add
std
xor
imul
data16
xchg
loopne
sub
imul
lea
sub
ds
fcomps
movsb
and
mov
aam
scas
ret
push
cli
rolb
sbb
dec
movsb
sub
xorl
lods
and
xchg
pop
pop
add
repz
int
sub
shlb
mov
daa
scas
fwait
daa
and
popa
add
mov
pushl
or
sub
popa
scas
ds
sub
lods
enter
add
push
push
je
out
rclb
xor
shrl
js
jmp
push
jg
jmp
scas
inc
jns
or
push
test
iret
push
cmp
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
pop
inc
icebp
aas
mov
jg
int
push
popf
push
or
stos
enter
rol
mov
xor
sub
cwtl
scas
call
mov
rsqrtps
adc
enter
mov
leave
add
add
add
and
andb
mov
xor
aaa
daa
and
pop
icebp
lret
dec
daa
ret
dec
ja
rcrl
xchg
iret
mov
test
mov
push
and
xchg
inc
xchg
sub
test
not
fcmovnbe
push
cmp
test
cmp
jmp
jae
adc
jb
cmp
add
in
scas
ja
stc
cmp
lret
je
xor
cmp
arpl
cs
mov
clc
shll
push
aam
jae
push
and
dec
push
xor
sarl
inc
and
dec
or
sbb
pop
rcll
fisubrl
mov
jne
fidivrl
cmpsl
cmpl
pusha
cltd
mov
pushf
jecxz
mov
pop
jge
xor
out
push
or
stc
fsts
xor
sti
adc
sti
xchg
leave
inc
ds
xor
shrb
fbld
aas
sbb
scas
xlat
xlat
and
stc
out
rcll
pop
fsubrl
aaa
or
cli
leave
mov
mov
ret
jmp
xchg
mov
sbb
jne
jmp
dec
sti
inc
xchg
shlb
in
dec
mov
clc
in
lods
mov
sbb
movsl
mov
scas
add
xor
hlt
lcall
pop
pop
sub
enter
sbb
and
push
lods
mov
das
add
dec
push
cmp
sbbb
mov
adc
arpl
subb
call
xchg
mov
movsb
orb
fs
mov
lahf
and
pop
dec
push
sarb
ljmp
outsl
push
pop
sarb
ja
bound
out
mov
lret
pop
jns
pop
push
mov
pop
mov
in
mov
push
mov
mov
idivl
and
and
fcoms
and
filds
mov
stc
push
jb
dec
sti
fmuls
loope
mov
lcall
push
xor
and
outsl
mov
fbstp
cltd
cmp
jnp
sub
xlat
sub
scas
roll
repnz
das
push
je
mov
addr16
frstor
lahf
xchg
adc
adc
mov
cmp
mov
push
mov
mov
stc
xchg
cmp
mov
and
dec
or
repz
shlb
mov
les
add
out
in
sbb
xlat
push
cmp
sbb
into
je
test
and
sub
mov
stc
out
fs
jp
inc
lea
scas
xor
out
movsb
cmc
xchg
call
dec
test
push
cmp
lahf
aam
mov
cmpb
jecxz
xor
mov
ljmp
stc
aad
test
push
ds
or
sub
roll
jmp
lock
lret
jl
mov
js
cld
cmp
dec
mov
fwait
jae
push
repz
aad
stc
dec
inc
fmuls
popf
jno
fnstsw
icebp
sbb
jbe
int
stos
ret
lods
jae
cmp
in
mov
push
cmp
mov
dec
sub
divl
js
in
mov
push
rclb
inc
insl
push
lods
adc
scas
mov
clc
addr16
dec
leave
add
add
jne
jge
enter
cmp
and
xchg
push
les
in
jno
sbb
loop
pop
jp
fcoms
repz
ret
ds
inc
xchg
lods
sub
out
push
lcall
outsb
xor
lcall
lea
add
xor
pop
divl
insl
out
rcrb
in
mov
fdivl
jns
mov
and
jge
jne
dec
adc
ret
mov
test
insb
cmp
dec
mov
pushf
nop
fcoms
das
jecxz
add
xchg
or
mov
add
inc
sbbb
mov
and
les
mov
ja
fimull
lret
andb
fdivl
int
ja
mov
xchg
addl
sub
imul
cmp
daa
imul
scas
cmpsb
pop
dec
mov
in
jo
fstp
jns
or
lea
pop
in
pop
jl
hlt
mov
push
mov
xor
out
dec
out
std
xor
inc
mov
pop
jge
mov
pop
or
add
lds
mov
jb
xor
add
fcomps
dec
mov
mov
orl
popa
sbb
jbe
dec
jge
fdiv
leave
jl
jns
xlat
inc
or
test
mov
add
arpl
pop
mov
into
stos
clc
lds
mov
lds
jmp
sbb
jns
scas
cmp
outsb
std
cmc
xor
loopne
ret
push
dec
adc
loopne
mov
and
pop
pop
shrb
addr16
pop
fcmovb
lahf
mov
jne
inc
fists
idiv
adc
stos
shll
mov
and
movsb
and
mov
add
test
cmp
jge
jle
sub
sub
fnstenv
mov
aaa
add
mov
rcr
mov
loop
test
out
mov
pop
or
adc
inc
notl
andb
in
enter
dec
mov
popf
sbb
cs
sbb
mov
cmp
fldl
push
sahf
add
jp
sub
add
cmp
out
and
test
pushf
fs
cmpsl
mov
jne
and
es
inc
push
xor
aaa
mov
call
mov
shrb
xchg
adcb
mov
fnstcw
push
enter
fs
mov
sbbl
add
out
cwtl
fildll
cltd
in
push
ja
mov
push
jge
or
mov
repnz
jbe
jae
cmpsb
ljmp
or
push
fcomps
adc
push
or
push
jmp
push
adc
out
jno
xchg
mov
push
loopne
out
lea
cmp
mov
xchg
sub
mov
stc
aaa
sbb
pop
mov
mov
mov
cli
test
push
adc
push
insl
lods
dec
sbb
fsts
mov
jmp
cmpsb
stos
mov
mov
mov
pop
out
mov
mov
push
sub
cwtl
jae
jbe
add
inc
jo
rcrb
or
int3
sub
add
push
and
idiv
int
adc
sbb
sti
or
jp
cmp
in
out
cmpsl
inc
fistps
cmpsb
in
int
pop
push
pop
stos
iret
xor
insb
lret
xchg
inc
jno
mov
pop
and
int3
pop
sbb
shlb
bound
insb
xor
or
int
push
inc
mov
mov
xlat
push
imul
mov
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
and
mov
adc
xchg
xchg
popa
inc
sub
out
stos
hlt
jns
call
fdivs
lret
sub
push
lahf
test
rcll
negl
adc
push
clc
dec
cmp
out
mov
ja
test
lds
and
movsb
inc
push
lret
mov
mov
mov
sub
push
ror
lock
pop
call
inc
xlat
sbbl
sbb
loope
imul
ficompl
add
ja
stos
lds
xchg
lret
cmp
adc
lahf
jae
or
aam
xchg
fsubr
addr16
inc
xor
popf
fldcw
sbb
ficoms
shlb
sub
test
out
sbb
outsl
pushf
mov
enter
jns
icebp
nop
sub
inc
adc
pop
xchg
enter
fdivrl
xchg
repnz
clc
inc
mov
cmp
addr16
ja
pop
fistps
add
es
stos
mov
lret
cmp
sub
test
cli
repz
loope
pushf
cmp
sbb
lock
or
int3
add
aaa
ss
sub
adc
loopne
stos
and
pop
pop
insb
xchg
push
inc
shll
sbb
xchg
xchg
fwait
sbb
cmpsb
push
inc
lcall
jns
or
jecxz
stc
loop
xor
sub
lcall
dec
popf
sbb
xchg
fistpll
in
and
dec
cwtl
repnz
outsb
ret
in
fcomip
jp
insl
outsb
cmp
sub
mov
or
inc
stc
or
fwait
jp
push
jge
iret
in
mov
dec
inc
cmp
or
mov
cmp
int
jno,pn
inc
jnp
iret
test
xchg
mov
sahf
clc
push
or
dec
loope
loope
iret
jnp
aad
test
sbb
jle
adc
call
mov
rcrl
pop
mov
filds
xor
inc
mov
or
adc
sub
scas
out
fcompp
xchg
jmp
les
js
leave
cmpsl
inc
lret
test
test
sub
pusha
xchg
xchg
or
push
aaa
nop
inc
mov
inc
scas
mov
xor
adc
xchg
in
sub
cmpl
push
sbb
popa
inc
outsb
mov
inc
es
lret
cltd
fadd
shr
shrb
scas
sbb
xchg
fs
jecxz
jle
pop
mov
add
ret
xchg
xlat
nop
fsts
in
or
add
and
mov
movl
jns
mov
icebp
sub
dec
add
mov
scas
outsb
mov
loopne
pop
add
jg
pushf
sti
add
mov
pop
clc
js
jne
rcll
pop
cmp
pop
inc
adc
mov
mov
lea
into
push
aaa
cmpsb
andb
js
add
in
cld
ja
and
jmp
mov
out
mov
out
lret
add
xor
adc
ds
rclb
int3
xor
mov
jb
sar
push
or
xor
mov
cwtl
mov
pop
pop
mov
push
sub
je
dec
sbb
pop
xor
cmp
pop
xor
add
div
loope
adc
mov
xor
jecxz
push
movsb
lea
adc
movsb
cmp
push
lods
push
jbe
jle
leave
out
xchg
xlat
lds
mov
in
mov
sar
add
shrl
adc
js
mov
fcmovnbe
pop
jns
test
in
dec
xchg
xor
sub
jno
ret
into
or
dec
adc
and
cmp
stos
ja
dec
cltd
shll
add
out
pop
aas
clc
jae
icebp
lds
outsb
and
fistpll
cmpsb
jae
fcoml
in
fcmovne
xchg
mov
fcmovnu
and
std
xchg
fidivrs
add
mov
xchg
aam
iret
add
repnz
mov
movsb
in
inc
call
sub
jae
xchg
push
and
aaa
push
jp
or
sub
add
mov
sub
rcl
sub
imul
fmulp
shrl
sahf
lds
fsubl
loop
int
mov
rclb
into
add
add
inc
sbb
popa
xchg
cmp
out
cmp
sbb
cmp
push
sub
jbe
or
sub
gs
jne
popa
in
mov
sbb
nop
mov
push
aam
pusha
jecxz
pop
pusha
pop
dec
jle
enter
mov
jg
test
cmpl
jge
mov
aad
and
repz
ss
mov
add
adc
out
cwtl
push
mov
enter
lcall
scas
std
fcoms
rcrl
in
adc
cmp
cli
xor
and
xor
stos
repz
in
lea
xchg
jo
mov
xchg
lret
or
cmp
sti
cmpsl
loope
cmp
outsl
imul
mov
fiaddl
and
mov
mov
aad
clc
faddl
ljmp
push
xor
jl
pop
pop
out
aaa
aas
jmp
js
sub
and
mov
dec
push
cs
insl
dec
xchg
push
stos
jae,pn
cld
stos
adc
cmp
xor
cmp
xchg
jae
pop
mov
inc
xchg
xchg
xor
psubb
call
ljmp
ffreep
cmp
cmp
or
dec
sbb
mov
push
add
dec
andb
dec
leave
dec
sub
xchg
inc
mov
lret
ret
call
movsl
xor
mov
jnp
pop
sub
inc
je
aad
mov
loopne
lret
pop
ret
scas
lock
xlat
inc
cmp
mov
je
dec
jecxz
out
pop
fsubr
cltd
js
jmp
jmp
clc
mov
sarl
xor
insl
push
out
and
mov
xchg
sbb
cli
adc
or
inc
adc
stos
mov
pusha
jmp
add
rcr
mov
xchg
mov
sub
addr16
push
cli
xacquire
shr
insl
enter
inc
repnz
aam
push
scas
loopne
adc
ret
outsb
dec
andl
mov
gs
add
mov
mov
sbb
popa
add
jne
or
rolb
outsb
dec
addl
es
pop
call
add
mov
jno
test
ja
mov
loop
lret
jne
push
dec
adc
or
pop
subl
shrl
dec
js
pop
and
xchg
rclb
loopne
push
push
lock
add
mov
jnp
scas
cmpsl
mov
packsswb
lods
out
jns
cmp
lcall
orb
add
repz
clc
mov
ret
scas
push
sub
pushf
sub
jne
aam
inc
repnz
add
sbb
outsb
in
repnz
xor
xlat
ret
dec
sahf
jg
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
mov
lcall
inc
test
scas
in
xor
jg
mov
mov
aas
fisttpl
lcall
mov
pop
rcrl
lods
jnp
arpl
rdpmc
aas
repz
ret
xor
push
dec
inc
push
add
jae
lret
mov
fisubrl
xchg
cmpsl
addl
sbb
pop
fisttps
pop
xchg
addr16
insl
inc
push
inc
and
cltd
dec
and
in
sbb
arpl
sti
nop
lcall
sub
shlb
push
dec
jnp
ret
sbb
xchg
mov
iret
dec
insl
sarb
sub
push
aas
adc
pop
icebp
pushf
clc
stc
mov
movl
push
cmp
in
push
mov
inc
sbb
inc
sti
pop
test
xchg
imul
mov
shll
repnz
frstor
aam
pop
fldpi
out
mov
ja
aas
add
rcrb
movsl
notb
jae
ds
inc
addl
cmp
imul
jg
test
sub
jp
sbb
mov
int
mov
jl
dec
fs
pop
push
push
stc
sbb
test
fxam
cs
push
mov
sbb
cli
mov
out
in
pop
cltd
push
repnz
dec
dec
cmpsl
out
imul
call
je
dec
jl
es
std
jmp
and
mov
fsub
lret
sub
xor
add
inc
push
aam
and
mov
mov
inc
jns
sub
inc
inc
or
pop
ss
mov
adc
cwtl
xchg
inc
mov
jge
mov
lcall
cmp
js
and
sub
lds
lret
xchg
out
adc
inc
pop
mov
std
jb
sub
push
adc
adc
ss
sahf
icebp
fisttpll
aad
fiadds
popa
xchg
mov
das
addr16
or
dec
push
jns
jl
pushf
mov
sub
mov
mov
mov
mov
cmp
mov
jp
dec
iret
dec
cld
push
pop
jbe
mov
fimuls
pop
pop
pop
mov
js
test
mov
test
jmp
imul
imul
jmp
lock
or
push
mov
push
movsb
daa
addr16
aam
mov
jmp
sti
lods
bnd
aam
adc
dec
cmp
adc
cmp
es
jbe
pop
pop
mov
repz
aas
aad
lods
ss
arpl
imul
fists
jp
cmpsb
icebp
fistps
inc
jbe
imul
mov
mov
lahf
mov
mov
loop
movsl
fwait
sbb
dec
or
insl
cwtl
fwait
mov
nop
cli
sbb
mov
in
dec
xchg
sbb
scas
enter
push
fstpl
dec
ret
les
test
cmp
xchg
pushf
mov
insl
icebp
fwait
loopne
es
andb
idivb
mov
pop
sbb
xchg
inc
push
es
add
jge
mov
addr16
jl
outsl
lcall
pop
jecxz
xor
jns
push
cmpsl
fcoml
testl
mov
add
ret
nop
push
fildl
cmpl
sti
pop
ret
mov
mov
push
pop
int3
in
int
lock
inc
cmp
dec
out
xchg
aam
jnp
aad
bound
mov
cwtl
dec
jl
loope
movsb
nop
xchg
and
mov
arpl
int
mov
cs
sub
popa
mov
xor
out
mov
ret
fstpl
push
rcrl
inc
sbbb
and
jl
dec
sub
mov
push
sub
loop
adc
jb
pusha
in
mov
xor
daa
pop
shrl
mov
xor
mov
mov
movl
lahf
in
loope
in
loop
out
cld
arpl
jae
sbb
cmp
out
es
xchg
loope
lods
mov
sub
jecxz
push
and
int3
test
fdivrl
int
clc
inc
mov
cmp
ja
je
cmp
fisubrl
sti
sti
jno
mov
jbe
sub
and
lahf
add
or
pop
stos
mov
xchg
push
movsl
push
int
mov
fwait
out
push
stos
hlt
loope
sahf
mov
push
fwait
or
int3
xchg
aam
jecxz
test
ret
pop
ret
cmp
leave
stos
shll
xor
movswl
xor
push
sub
sub
popf
xor
jp
test
test
std
mov
gs
or
test
scas
mov
fsubrs
ret
sub
in
add
add
insl
imul
lds
in
or
not
xlat
jl
push
inc
sarb
adcl
cmpsb
sub
ret
fcomps
add
inc
jle
ja
cld
jg
popf
jno
mov
adc
mov
dec
add
jmp
sahf
test
pop
adc
push
in
dec
pushf
mov
jae
enter
push
cmpsl
mov
addl
push
inc
cld
ds
adc
ret
jbe
or
cmp
xchg
int
outsl
or
xchg
sahf
jno
pop
in
pusha
xor
adc
inc
imul
jnp
mov
mov
pop
push
out
mov
lea
xor
loop
xchg
and
dec
lcall
jecxz
xchg
cwtl
shlb
movsb
and
in
push
cmp
sbb
jne
lret
loopne
pop
movsb
mov
sbb
shlb
push
push
xchg
and
fistpl
jae
inc
mov
cwtl
das
mov
add
idiv
in
int
or
cli
scas
addb
arpl
sbb
mov
fldl
jb
or
push
test
cli
or
and
inc
mov
dec
enter
cmp
pop
mov
test
out
mov
push
clts
ret
cmp
adc
pop
arpl
sti
lret
lret
xchg
and
cltd
mov
mov
leave
jo
or
adc
xlat
outsb
mov
xchg
cmp
ds
pop
mov
pop
adc
xlat
sub
dec
xchg
sub
or
mov
sub
mov
push
and
jo
lret
and
jb
mov
inc
ljmp
inc
jl
push
and
xchg
js
ljmp
cmp
ss
mov
test
mov
pushf
addr16
dec
mov
icebp
add
or
hlt
repnz
cmp
scas
in
aas
push
inc
in
stc
mov
ja
adc
add
dec
ljmp
lret
bound
pop
or
lods
xchg
and
nop
daa
mov
lea
sub
sbb
outsl
test
inc
pop
sbb
out
adc
sahf
sahf
fisubrl
popf
cmpb
in
jbe
mov
pop
pop
or
popf
pop
pushf
fimuls
outsb
mov
sub
nop
xor
xchg
addl
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
mov
adc
xchg
bound
push
lods
test
inc
adc
lret
jl
fstpl
in
sub
lds
dec
les
jae
leave
cltd
pusha
test
in
test
pop
or
push
insl
movsl
movsb
jnp
xor
movsl
dec
pop
pop
test
sub
jge
xor
add
sbb
add
pop
testb
mov
jle
dec
cmc
outsb
movsl
divb
sbb
cmp
icebp
jo
or
or
jge
push
movsl
out
mov
outsb
xchg
xor
dec
push
ret
insb
pusha
test
sbb
imul
in
out
fnstcw
push
popf
loopne
movb
mov
mov
pusha
dec
mov
dec
aas
mov
adc
dec
jb
push
jo
bound
es
in
mov
jbe
negl
jecxz
inc
push
icebp
xchg
lahf
sbb
aam
mov
int
cs
je
fimull
fnsave
into
adc
sub
mov
stos
dec
in
or
hlt
mov
cwtl
pop
adc
mov
dec
ds
shlb
xchg
fildll
std
rorl
add
cmpsb
int3
mov
sbb
pushw
lea
lds
push
loop
push
movsb
lds
fmull
testl
or
inc
aam
pop
fildl
cmp
sbb
sub
pushf
pop
xchg
nop
jp
es
push
mov
xor
mov
xor
notl
sti
pop
add
mov
negl
shll
fdivrs
mov
inc
mov
adc
leave
lahf
insl
clc
push
icebp
dec
dec
sbb
ret
sti
pusha
and
push
sbb
andl
mov
and
xchg
aas
mov
mov
pop
mov
fsubrl
pushf
lret
fcomps
sbb
cmp
and
fists
and
xor
mov
imul
outsl
lds
lcall
and
and
int3
icebp
inc
jg
imul
adc
add
jo
add
mov
sub
and
jmp
add
jnp
adc
cwtl
cltd
fcoml
push
insl
and
out
adc
pop
scas
sbb
mov
icebp
push
into
or
lds
push
jl
cld
mov
imul
push
push
jg
push
cwtl
insl
adc
sub
ja
mov
xor
fdivrl
and
clc
lods
or
mov
sbb
out
lahf
fisubrs
sbb
test
and
mov
jnp
mov
es
jno
ds
inc
mov
mov
hlt
dec
stos
push
push
cli
fisubs
jl
and
pop
leave
add
sub
test
and
mov
xor
xlat
in
xor
cmp
ret
clc
arpl
cmp
adc
aam
inc
dec
out
call
push
mov
cmp
inc
minps
cmpl
dec
fcmove
negl
mov
xchg
xchg
call
cld
inc
out
test
add
adc
clc
push
dec
mov
mov
test
ret
push
pop
pusha
push
xchg
pop
nop
lea
adc
mov
sbb
mov
pop
sbb
and
jge
xchg
jg
xchg
sub
mov
ret
or
stos
cli
push
cld
pop
std
pop
ret
push
test
add
pop
lret
mov
push
pop
or
repz
sti
cmc
xor
pop
pushf
xchg
es
ss
notb
push
arpl
bound
into
dec
sub
add
inc
mov
xor
ds
imul
cmp
outsb
push
imul
outsl
test
mov
xchg
insb
into
pop
jb
xlat
add
pop
insb
sub
lds
in
ja
scas
movsl
adc
mov
mov
mov
test
push
mov
dec
inc
add
adc
loop
iret
push
or
xchg
push
xchg
jp
dec
jne
std
shll
outsl
inc
mov
adc
incb
daa
dec
mov
aaa
xor
jb
outsl
add
dec
lods
push
in
imul
xor
mov
aad
repnz
iret
cmp
loop
loope
mov
dec
inc
mov
mov
fcoms
fcompl
mov
loopne
aam
test
adc
inc
int3
add
rcr
push
fldl
pop
dec
push
jae
mov
enter
mov
je
sub
sbb
enter
cmc
jge
arpl
imull
sub
in
dec
or
mov
das
ljmp
out
inc
push
fldt
cwtl
in
jns
jl
adc
jne
jp
ljmp
mov
adc
je
jmp
out
sbb
push
mov
dec
pop
mov
mov
adc
dec
movsb
mov
lock
cltd
mov
fildll
cmp
pushf
cmovg
xor
mov
cwtl
out
je
push
xlat
sub
repnz
sub
lcall
mov
xor
pusha
and
dec
ja
xchg
add
pop
jg
dec
lahf
loopne
rol
mov
lea
leave
imul
loope
sbb
ficoml
gs
jp
cmc
sub
and
xchg
or
push
test
and
aad
das
mov
and
in
xchg
aad
pop
xchg
mov
sbb
push
repz
xchg
xchg
sbb
jae
cmpsl
scas
fidivs
cmpsb
ljmp
mov
mov
fnsave
jge
lcall
xchg
cmpsl
ljmp
hlt
ljmp
pop
gs
gs
mov
add
xor
push
xchg
fidivrl
xchg
sbb
std
test
andl
aam
repz
test
sarl
xor
sub
jecxz
into
dec
pop
jne
iret
mov
lods
hlt
pop
pop
lret
mov
popf
stc
gs
clc
inc
xor
fistl
ja
inc
pop
out
dec
ds
pop
sti
mov
outsb
fwait
iret
stc
setae
cli
sub
pusha
jl
mov
push
jnp
loope
daa
dec
sarb
fabs
jle
mov
pop
or
jg
jle
cmp
test
insb
adc
cs
and
sti
fxch
repnz
cld
out
rcl
inc
sub
scas
shl
out
fldl
fucomi
lds
cmp
add
fldcw
movsl
inc
xchg
clc
inc
mov
mov
fldt
sti
sub
xchg
inc
cmpsl
js
push
mov
inc
pop
sub
add
add
pushf
xor
jo
push
fimuls
pop
sub
clc
es
cmp
outsl
aaa
inc
jp
data16
outsb
dec
daa
push
push
js
gs
xchg
andb
xorb
xchg
in
std
pushf
clc
mov
ret
sub
aam
xor
notb
sub
xchg
jne
loopne
call
lret
pop
movsb
shrd
shr
jmp
and
add
loop
es
pop
js
or
adc
xchg
popa
pop
jmp
loopne
outsb
xchg
push
sahf
leave
test
and
je
test
ja
loopne
es
dec
cmp
sarb
mov
inc
xchg
pop
adc
adc
repnz
mov
inc
loope
je
shr
loopne
pop
pop
mov
xchg
insl
inc
inc
aam
cmpsl
and
mov
pushf
xor
inc
cld
xlat
sub
lock
mov
cmpsl
movsb
inc
mov
popl
aas
das
jae
icebp
mov
js
aad
enter
xor
sbb
adc
push
xchg
mov
std
clc
out
add
fadds
repnz
push
mov
out
repnz
int3
pop
ret
jmp
cmpsb
mov
xor
pop
dec
xor
xlat
sti
mov
fwait
jg
mov
dec
or
jo
clc
push
add
repnz
push
xchg
imul
pop
inc
push
cmp
test
ds
jne
mov
std
movsb
inc
cmp
or
ret
imul
xor
flds
push
cmpsl
cmp
xor
sti
and
leave
mov
xor
sbb
mov
cmp
xchg
inc
adc
mov
push
test
fsubs
and
push
adc
or
jp
ret
outsl
push
andb
gs
sbb
adc
mov
aam
dec
push
sarl
adc
scas
xlat
pop
scas
test
je
or
and
lods
inc
enter
mov
repnz
cltd
pop
ret
jae
lahf
decl
jle
jb
test
ds
mov
mov
inc
dec
stos
xor
or
add
es
lcall
push
inc
xor
aaa
js
jle
push
and
pop
jmp
fwait
inc
or
cmc
mov
aam
cs
mov
pop
stc
popa
sbb
mov
push
jmp
xchg
add
xchg
stc
mov
push
adc
clc
mov
mov
repz
out
dec
cmp
jb
mov
mov
adc
push
test
pop
push
testb
pop
je
inc
pop
lods
add
mov
mov
mov
and
xchg
pop
in
clc
imul
mov
lret
xchg
gs
popf
out
xor
jae
int3
cmp
cmc
mov
aam
add
inc
dec
repnz
xchg
jecxz
out
out
outsb
and
push
add
or
adc
jl
mov
ret
xchg
or
push
dec
into
imul
add
mov
sub
fcmove
outsl
pop
inc
rcrl
cmp
jmp
lcall
cmpsl
out
nop
add
adc
and
les
inc
jp
int
jbe
add
fcomps
sbb
sbb
push
fs
mov
jge
cmp
xor
xor
mov
push
jne
push
lods
or
add
xor
jmp
shr
fsubrl
inc
test
jecxz
xchg
pushl
inc
ss
cmpsl
scas
fnstcw
jle
out
push
xchg
dec
pop
call
lret
lret
fisubrl
dec
arpl
push
idivl
pop
add
sbb
mov
dec
insb
icebp
rep
and
sbb
or
lret
mov
cmp
jl
push
mov
dec
jle
sbb
cld
sti
fisubrl
dec
dec
mov
adcb
add
cmpl
lds
decb
sub
mov
fiadds
test
dec
inc
xor
and
jge
pushf
pop
mov
cmp
int
enter
call
movsl
xchg
pop
movsb
dec
iret
push
imul
jle
test
xor
xchg
mov
enter
inc
out
fisttpll
in
inc
and
and
cltd
push
int
xchg
pop
add
cli
cmp
fsub
mov
mov
jge
mov
pop
xchg
adc
lods
scas
outsl
push
add
faddp
xor
leave
lock
push
icebp
leave
push
sub
push
pop
sbb
aam
xchg
push
xor
sbb
push
xchg
loopne
out
loope
adc
xor
popf
sub
mov
outsl
pop
push
adc
lret
ljmp
iret
test
iret
repnz
inc
add
adc
xchg
enter
rorl
jmp
push
jp
add
dec
mov
and
mov
jno
sbb
mov
xor
cmc
lret
xchg
and
mov
adc
sbb
pop
adc
push
int
mov
fldenv
xor
xchg
xor
mov
clc
cmp
mov
arpl
mov
inc
pop
and
ret
jg
fwait
js
movsb
dec
add
repnz
push
xor
lret
sub
sub
fsubs
testl
ja
jmp
inc
out
out
xor
popa
gs
enter
mov
jbe
fiaddl
lds
or
std
push
cmc
ja
and
bound
stos
inc
dec
clc
xchg
cmpsl
sub
sbb
inc
and
mov
xor
rcl
aad
and
roll
movnti
adc
dec
aas
sub
dec
icebp
fadds
fstpt
mov
jae
fsts
push
dec
leave
sub
aaa
xchg
cmp
push
clc
sub
xchg
rcrl
lret
cmp
scas
sbb
mov
pop
pop
lea
sbb
lret
cmp
movsb
xchg
shlb
xor
in
or
or
ficompl
cli
das
xor
divb
and
test
cmp
or
sarb
add
leave
lret
imul
dec
inc
sub
jmp
and
jns
in
mov
ret
push
push
push
repz
mov
test
ret
mov
sbb
pop
inc
aad
mov
into
fsubrl
sub
test
aam
adc
dec
mov
pop
jno
mov
mov
cld
push
cmp
pop
or
push
stc
xor
add
ja
sahf
xchg
stos
sub
repnz
ficoms
push
in
jo
mov
inc
orl
xchg
je
das
cmpsl
sub
popa
icebp
pushf
in
in
imul
shll
scas
sub
ss
out
outsb
lock
in
add
xchg
repz
stos
cmp
xchg
mov
stos
fadds
lret
push
mov
xchg
mov
ja
push
push
mov
add
add
dec
sub
inc
cmp
loop
or
inc
ljmp
sub
sbb
pop
sub
es
pop
stos
xchg
nop
test
inc
cmp
push
fcoms
mov
movsl
sbb
scas
mov
mov
cmc
pusha
mov
mov
lods
jnp
inc
xchg
or
inc
mov
lea
sub
xchg
xchg
dec
fidivrl
push
loopne
fldenv
or
shl
xor
or
jmp
aam
mov
xor
push
fmul
sahf
xchg
xlat
push
cmova
loopne
in
gs
xchg
dec
mov
mov
in
mov
sahf
std
repnz
or
loopne
fisttpll
pop
xchg
dec
movsl
push
sub
or
pop
dec
outsb
pop
fisubl
dec
mov
rclb
shll
mov
cmp
mov
push
decl
cmpsl
xchg
sub
jle
dec
or
enter
into
pop
rsqrtps
jl
je
ja
adc
jns
cmp
shll
mov
int
mov
into
nop
mov
int3
jge
cwtl
mov
pop
sbb
mov
cmp
cmpsl
pop
test
imul
inc
into
fadd
sub
xor
inc
arpl
add
out
lret
push
cmp
enter
push
daa
push
mov
fnstenv
bnd
jp
adc
jmp
jl
dec
xchg
ror
movsb
test
call
shl
and
or
imul
push
add
mov
inc
lds
repnz
cmp
int
adc
pop
cmp
in
pop
data16
out
sahf
pop
shrl
xor
inc
out
inc
inc
scas
sub
mov
adc
mov
and
mov
lds
clc
nop
adc
cmp
sbb
imul
into
mov
bswap
jmp
add
pop
insb
imul
clc
xchg
clc
push
sbb
inc
mov
popa
lds
mov
outsl
test
fldt
lods
pop
cmpsl
cmpsb
mov
ja
mov
mov
lret
xchg
test
and
fnstsw
mov
daa
adc
push
pushf
mov
push
inc
jl
mov
adc
lcall
dec
push
repnz
xor
and
jmp
xchg
idivb
stc
mov
xor
out
in
out
call
ljmp
les
cli
or
gs
js
pop
xchg
dec
push
loope
outsl
scas
repz
mov
mov
std
xchg
or
pop
test
or
ss
push
inc
stos
or
pushf
ret
js
mov
ret
jae
adc
push
or
test
idiv
les
popa
mov
sbb
insl
out
test
add
nop
int3
jl
rorl
jg,pn
hlt
add
xchg
dec
clc
mov
fiaddl
cmc
test
cld
gs
mov
ds
xchg
pop
or
jp
xlat
sahf
sbb
fistl
pop
in
in
jle
mov
sbbl
bound
and
ds
xchg
aam
jle
stos
dec
scas
cmp
dec
push
sti
mov
push
ret
adc
xchg
jl
cmp
mov
push
cmp
mov
adc
lods
jae
aas
or
push
cld
pop
jnp
cwtl
jno
dec
icebp
inc
inc
lods
shrl
mov
roll
mov
or
lret
stos
icebp
outsb
jb
stos
push
jns
call
cmp
roll
mov
xchg
mov
pop
jns
cld
xor
lea
dec
or
loope
ret
mov
clts
int
or
or
cld
daa
jmp
adc
jnp
mov
and
mov
test
mov
addb
mov
stc
cmpsl
xchg
les
insb
arpl
mov
sbb
adc
adc
xor
push
lods
ljmp
mov
xor
pop
mov
adc
stos
mov
sbb
lahf
ret
push
test
jl
mov
cmpsb
adc
xor
das
es
xchg
cmc
inc
xor
js
lock
test
jnp
pop
mov
pop
out
daa
testl
fistps
jg
or
and
cmp
mov
cs
popa
mov
mov
push
mov
mov
inc
adc
cld
push
imull
fsubl
dec
movsb
sbb
fdivs
sub
cld
es
cmp
fldt
adc
roll
das
es
lods
push
xor
pop
insl
jecxz
ja
jle
sbb
rclb
and
add
lods
mov
cmp
cmp
imul
inc
xor
mov
dec
lahf
pop
push
test
mov
inc
xorb
pusha
mov
int3
repnz
fcmovb
push
cltd
add
std
push
stos
xor
sbb
adc
mov
sub
jne
sub
js
inc
rcl
shrb
sub
rcll
lret
dec
mov
ss
or
mov
mov
test
dec
mov
incl
pop
jbe
jmp
ret
mov
lock
je
push
jnp
adc
lcall
cltd
dec
js
cld
call
test
pusha
push
cmp
fstl
jle
or
bound
lea
mov
pop
mov
je
out
pop
mov
or
scas
out
dec
mov
pop
imul
cmpsl
ds
sub
into
push
outsl
fstpl
aad
mov
push
loope
cld
orb
dec
int3
mov
sbb
sub
pop
mov
sbb
inc
mov
fbstp
sahf
jb
inc
push
mov
adc
jp
push
mov
or
outsb
push
jmp
flds
pop
mov
fwait
cli
mov
push
mov
sti
adc
sti
sahf
xlat
pop
data16
ds
dec
add
sub
js
ljmp
insb
or
mov
xchg
cmp
push
sub
xchg
scas
outsl
das
test
lret
stc
loop
sarb
dec
in
xor
dec
pop
scas
push
mov
push
mov
xchg
pop
sbb
jmp
je
rcll
dec
pop
adc
jp
lcall
push
xchg
stc
aad
leave
test
test
repz
aas
sub
jge
stos
test
fdivrl
js
push
xorl
inc
mov
mov
mov
push
xchg
int3
iret
lods
push
aam
roll
cmp
faddl
ja
loop
scas
mov
jmp
ljmpw
fcmovb
loopne
sti
pop
loopne
pop
ss
cwtl
or
adc
std
dec
lret
xchg
subl
sub
mov
nop
cmp
pop
test
sbb
jb
ja
int3
xor
jl
sbb
add
enter
test
mov
cld
add
div
scas
push
fld
pop
in
loop
lcall
or
dec
clc
loope
and
pop
mov
in
call
cli
jnp
fbld
lods
test
std
inc
out
leave
push
add
addl
jge
out
rorl
out
xchg
pop
int
mov
ja
pop
lods
arpl
aam
push
adc
lock
inc
cmc
mov
cmc
cwtl
ss
push
cmpsb
push
sbb
push
cmp
fadds
add
or
pop
inc
or
and
jo
adc
xchg
mov
inc
mov
hlt
int
xlat
sarb
scas
jae
xchg
mov
addr16
push
fstpt
dec
jo
pop
xchg
xchg
pushf
jnp
sub
lods
cmp
mov
and
sarl
stos
mov
jae
xchg
insl
dec
mov
lds
dec
imul
or
sahf
cmp
xor
std
xchg
inc
fsubl
imul
dec
push
inc
sub
mov
mov
ja
fistps
mov
pushf
dec
or
mov
addr16
lcall
pop
push
lret
dec
fimuls
pop
sub
aam
sub
fsubrs
int
cmpsl
lret
push
or
bound
adc
addb
inc
sub
mov
cltd
adc
lock
sub
inc
test
xorb
daa
mov
mov
push
loopne
xchg
mov
inc
adc
or
push
roll
jp
ret
mov
ds
in
or
icebp
std
cwtl
jnp
xor
and
gs
xor
xlat
mov
inc
add
pop
nop
incl
std
push
outsb
fucom
push
movsl
jns
or
cs
stos
out
cmp
lahf
xchg
shl
popf
out
insl
in
jg
push
or
cmp
push
mov
sti
lock
das
pusha
cs
nop
pop
mov
aas
rcll
sarw
pop
and
dec
lods
imul
es
lods
lret
cmp
cmp
out
andl
repnz
arpl
dec
dec
bound
lahf
cmp
mov
popa
imul
leave
and
mov
or
es
sti
scas
adc
jl
shll
pop
cmp
in
lret
xchg
outsb
xlat
test
ja
out
cmp
cmp
jns
inc
cli
xchg
add
push
or
or
mov
int3
adc
shrl
fistpll
pop
mov
jle
jg
push
xchg
rol
pop
and
scas
cmp
jbe,pt
fs
mov
stos
push
int
sbb
insb
call
cmpsb
sbb
mov
lods
xchg
pop
dec
mov
sbb
ja
aaa
sbb
pop
xchg
xchg
nop
repz
nop
test
and
roll
push
jg
cmc
movsl
add
xchg
inc
es
jle
sbb
pop
dec
mov
shll
inc
sbb
dec
dec
into
ds
lods
push
sti
sbb
cmpsb
push
pop
sbb
pop
cmp
sbb
adc
fsubrs
inc
int3
dec
jp
mov
nop
adc
lcall
sbb
gs
mov
mov
lods
xchg
js
mov
lods
fs
daa
mov
xchg
jge
adc
lret
popa
out
leave
push
sbb
cmp
adc
cmp
cli
into
rcrl
pop
lods
mov
mov
lds
mov
push
xorl
int3
stos
jbe
mov
sti
outsl
insb
movsb
cs
sub
cltd
and
add
push
sbb
mov
cmc
add
lret
mov
mov
insl
push
and
push
test
cmp
add
shll
es
pop
adc
xor
cmp
cmp
mov
fmull
pop
add
mov
cmp
lods
movaps
subb
xor
repz
adc
sbb
les
xor
mov
das
daa
cld
rcrb
xor
jno
lret
inc
mov
xchg
aad
std
insl
mov
or
cltd
xor
test
sti
mov
add
cmp
cmc
les
xchg
push
xlat
sbb
out
pop
punpckhbw
jb
sub
emms
aas
sub
das
loopne
cld
mov
push
out
lret
cltd
jle
cmpsb
outsl
gs
push
int3
sbb
cli
dec
pop
push
cmpl
pop
push
insl
xchg
sti
push
sahf
in
aas
sti
and
sub
not
jo
call
fstpl
gs
ret
pop
pop
popa
add
inc
fdivl
stos
jno
mov
iret
loopne
mov
lock
pop
xor
arpl
dec
xchg
mov
rcrl
shrb
mov
mov
ss
addr16
icebp
jno
push
in
dec
pop
movsb
daa
cs
mov
cltd
out
dec
imul
popf
addr16
cli
lahf
bnd
out
push
daa
xchg
in
mov
sub
jg
icebp
gs
mov
inc
pop
mov
nop
sub
jo
cmpsl
and
and
jle
ror
jecxz
or
pusha
and
das
mov
shrb
jecxz
ljmp
mov
lods
movsb
and
pop
xor
push
cmp
shrl
addr16
leave
les
sub
rcl
adc
push
dec
dec
mov
loope
mov
test
insb
dec
iret
mov
cli
mov
lods
icebp
push
jg
sti
out
lds
mov
outsl
mov
leave
push
sbbb
repz
inc
mov
xlat
push
out
xchg
cltd
add
mov
js
push
adc
scas
aaa
cmp
dec
xchg
mov
in
sub
fcoml
or
rolb
lcall
cmp
add
aas
iret
test
cmc
xor
push
mov
mov
sahf
inc
js
mov
iret
jecxz
cmp
ss
sbb
repnz
fists
mov
sub
rorb
adc
xchg
mov
leave
std
jo
aaa
fdivl
xlat
lods
jne
or
mov
sub
insb
dec
adc
movsb
jmp
add
mov
into
nop
fmull
inc
mov
jle
pop
in
or
adc
popf
sub
cmp
adc
or
int3
or
inc
pop
cmc
pop
push
aaa
adc
cmpl
aad
divl
daa
loop
fdivrs
sub
pop
push
pop
inc
cmpsb
xor
xor
cmp
movsl
jle
in
push
or
mov
and
cld
loopne
xor
jo
or
jmp
mov
cmc
dec
dec
inc
push
mov
punpckhwd
mov
insb
jge
and
loope
mov
lea
into
mov
out
jo
cmc
sub
movsb
pushf
jns
roll
shll
outsl
rorl
stos
movsb
enter
push
ret
mov
sbb
mov
roll
ss
gs
scas
aam
es
push
out
add
ror
aaa
mov
inc
je
cmp
adcb
cmpl
je
cmp
imul
xchg
fmul
out
loop
sub
xor
ja
cmpb
lret
mov
icebp
mov
scas
pushf
neg
stos
cmpsb
ret
dec
daa
outsl
in
mov
cld
fisubrs
inc
dec
mov
mov
sbb
cld
xor
jo
xchg
jmp
mov
sbbl
jp
and
adc
repz
mov
shl
dec
std
repnz
jecxz
nop
repnz
mov
sub
xchg
adc
cmp
add
add
scas
cltd
and
push
push
fcomps
sbb
mov
jl
jmp
pop
dec
sbb
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
fsubs
adc
xor
adc
loop
adc
test
movsl
in
popf
or
js
xor
xor
in
sahf
adc
leave
mov
push
inc
int
sub
cmp
cmp
fs
push
nop
jecxz
mov
imul
fs
pop
in
mov
mov
fsts
ds
hlt
mov
jnp
cmp
jo
cmp
adc
int3
js
xchg
push
ret
nop
jno
clc
or
add
add
jno
pop
je
push
fisttps
jmp
jmp
push
mov
cld
xor
outsb
push
mov
inc
cwtl
mov
dec
mov
fwait
testl
xor
xchg
push
pusha
sbb
fists
cmpsb
decl
add
push
out
mov
mov
pushf
add
adc
lock
out
mov
aam
mov
insb
loope
sti
int
dec
mov
fwait
jne
dec
nop
mov
loope
or
fabs
int3
scas
pcmpeqd
loop
mov
imul
mov
xlat
rolb
div
jne
adc
add
lea
ret
mov
add
ficoml
pop
icebp
jne
pusha
repnz
inc
repnz
movsb
or
sarl
ljmp
stos
xchg
test
mov
lods
out
repz
pop
push
loop
fs
xor
and
jmp
sbb
cmp
cmpb
lock
dec
test
jnp
dec
or
or
insl
xchg
lret
popa
mov
xchg
xchg
mov
sbb
fimuls
fwait
sbb
in
test
pop
mov
data16
repnz
sub
xchg
push
pop
repz
adcl
es
outsb
jnp
push
jbe
cwtl
sbb
xor
pop
lds
aam
sbb
xor
loopne
jo
enter
int
ja
out
cmpsb
stos
sub
xor
std
shrl
arpl
iret
jbe
xchg
repz
push
mov
jb
lods
push
lea
stos
xor
sub
mov
xchg
sbb
pop
push
rorl
mov
cwtl
out
xchg
ja
dec
inc
adc
in
test
pop
int3
jmp
out
mov
jbe
imul
fcmovnb
imul
sbb
xchg
or
lahf
lahf
jne
jle
dec
ret
and
data16
cmp
and
sub
dec
jge
sti
gs
adc
xor
mov
lahf
scas
mov
inc
int
stos
push
sub
push
sub
clc
mov
je
pop
adc
sub
push
or
enter
lret
jp
dec
pop
lret
mov
mov
in
xchg
rorl
push
rep
lret
sbb
repnz
out
add
xchg
out
lods
jbe
jmp
cmp
jb
cmp
lods
mov
cltd
push
ret
clc
lahf
sarl
sbb
test
mov
int3
dec
cld
dec
or
fdivrl
mov
aam
aas
xchg
test
shll
mov
clc
cmpsl
rol
sub
and
popf
dec
dec
jle
imul
add
sub
add
fstp
jmp
leave
mov
inc
cmp
cmc
pop
sbb
inc
and
mov
addb
imull
pop
cmpsl
push
lcall
das
cmp
aaa
xchg
in
ss
dec
cmp
mov
scas
call
mov
jl
or
sti
or
or
pop
arpl
inc
js
sarb
gs
push
in
repnz
sarb
out
jne
xchg
roll
pop
mov
jae
pop
push
lods
lods
inc
nop
sahf
and
scas
jne
sub
pop
or
loopne
lret
inc
mov
mov
dec
call
and
repnz
js
pop
pop
pop
mov
xchg
mov
jno
push
test
lods
and
insl
adc
jo
popl
lret
xor
and
stc
leave
pop
jo
into
pushf
fwait
icebp
mov
call
xchg
add
jp
scas
xchg
xchg
movsl
sub
cmp
outsl
adc
sbb
push
test
in
popf
jns
das
fcompl
sbb
aad
mov
cmp
insb
sbb
stos
fwait
sbb
inc
loope
jle
push
aad
add
jp
outsb
call
imul
push
sub
mov
mov
mul
mov
mov
xchg
and
or
loopne
push
fs
mov
outsb
in
leave
xchg
arpl
fnsave
mov
push
sbb
mov
pusha
or
aam
push
mov
jecxz
int
arpl
je
mov
or
imul
shlb
fwait
icebp
add
mov
mov
mov
jg
ds
pop
stos
js
fwait
sbb
sub
jno
pop
sub
out
sahf
fcmove
add
mov
jnp
sysenter
hlt
mov
push
dec
inc
into
test
dec
cmp
sbb
lods
es
cmpsl
inc
out
push
adc
pop
inc
jbe
xor
cmp
fwait
jns
das
mov
rorb
lock
jp
push
push
icebp
push
sub
jbe
inc
cmp
mov
and
imull
mov
mov
dec
and
push
dec
inc
push
outsb
lods
jne
inc
dec
in
add
dec
cmp
insb
in
mov
jmp
nop
dec
jns
adc
je
loopne
mov
js
sahf
add
lahf
cmp
data16
movsl
mov
divb
push
mov
mov
ret
ss
sbb
mov
pop
andb
dec
incl
aad
cwtl
inc
movsb
data16
pop
rcrl
xchg
or
stos
xor
sti
pop
pop
arpl
and
test
mov
sub
or
add
mov
dec
mov
ja
loop
inc
cld
push
or
in
cmp
push
dec
xor
adc
icebp
hlt
mov
xor
scas
mov
jg
inc
and
dec
scas
aas
fildl
mov
popl
addl
pop
jno
mov
in
and
imul
movsl
inc
push
adc
gs
in
mov
dec
lret
sub
cmpsl
lret
xor
cmp
dec
or
lret
popf
loop
cmpsb
rcrl
push
cmp
pop
xchg
fidivrs
add
pop
call
mov
iret
repnz
into
lahf
pop
xchg
lret
loop
dec
or
push
sub
fiaddl
mov
lahf
sbb
xchg
dec
push
hlt
cli
fldl
mov
jns
pop
test
orl
aas
repnz
mov
sbb
jmp
nop
lods
addr16
mov
outsl
mov
xlat
mov
mov
in
lahf
cli
mov
jbe
sub
mov
cmp
push
lds
iret
xor
aam
adc
push
or
stos
sbb
or
js
ds
inc
orl
lcall
pop
mov
mov
xchg
xchg
inc
movsl
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
arpl
adc
xchg
xor
fwait
xlat
pop
cmpsb
and
cmp
fwait
sub
jp
fstl
clc
jge
jg
fcomi
out
mov
mov
pop
aaa
or
xchg
enter
iret
loopne
jo
into
lds
adcb
add
int3
sub
xchg
insb
pop
sbb
outsl
in
loopne
mov
cmp
sbbb
out
lods
sbb
pusha
mov
in
jns
aad
ss
jbe
pop
or
jnp
adc
js
push
int3
push
cmpsl
and
mov
adc
add
outsl
sbb
clc
call
mov
dec
lret
dec
dec
ds
push
mov
add
dec
adc
in
mov
or
inc
inc
pop
push
push
jno
sarl
mov
cli
movsb
rorl
icebp
sub
movsl
fmulp
mov
dec
pusha
pop
push
mov
mov
pushf
addr16
xlat
rolb
dec
mov
data16
xchg
es
pop
jne
adc
lret
insl
fwait
enter
imul
insl
and
rcrb
mov
mov
lret
stc
jle
mov
imul
cs
out
xor
pusha
je
das
call
loopne
dec
adc
rep
call
jmp
test
ror
pop
or
xchg
hlt
sub
pmovmskb
rorl
dec
mov
lret
mov
jno
and
add
dec
sbb
xor
stos
or
push
sbb
mov
inc
aam
pop
adc
je
cmpsl
std
mov
cmpsl
mov
data16
xor
cwtl
sub
fsubr
adc
mov
jno
mov
push
cmpsb
and
pusha
aam
mov
enter
cwtl
mov
loope
in
lret
jnp
pushf
and
xchg
add
add
cltd
and
clc
sbb
or
fisubs
enter
add
and
pop
mov
push
or
test
popf
xorl
lock
icebp
sub
sbb
lock
inc
add
jl
aam
add
mov
or
sbb
testb
fcoml
mov
scas
jno
mov
inc
ss
sub
push
fidivrs
pop
sbbl
mov
sbb
jp
sbb
lret
popf
outsb
xchg
dec
hlt
repz
ljmp
xorl
push
dec
xchg
jl
jns
xchg
mov
jns
lahf
mov
adc
ret
ficoml
xchg
std
pop
loope
outsl
leave
ret
aas
stc
and
inc
fisubrl
cmpsl
jp
das
xor
addr16
movzbl
xor
imul
push
int
popf
mov
and
push
shl
add
pop
jns
in
xchg
popl
mov
or
adc
push
mov
iretw
jp
xlat
dec
add
or
rorb
mov
in
sarl
iret
fldt
aaa
and
cwtl
push
cmp
jg
xchg
mov
ret
jmp
xor
inc
jle
push
inc
pop
es
lock
aas
ss
loop
add
and
lea
lahf
dec
sbb
notl
adc
into
mov
pushf
imul
xor
std
add
ds
inc
sbb
enter
and
mov
or
jge
jmp
aas
mov
aam
add
pop
clc
push
stos
sbb
mov
aaa
xchg
inc
and
push
das
jne
lret
inc
call
ljmp
mov
sub
cli
xchg
sub
dec
push
sbb
fsts
xor
adc
repz
fistps
sbbl
inc
xchg
aam
out
fcmovb
cmp
or
xchg
jnp
stc
movsl
jp
and
jbe
sub
inc
nop
fwait
cwtl
rolb
shrb
jp
outsb
fsub
cmp
or
xchg
add
mov
into
cld
cmp
mov
mov
mov
xchg
mov
lcall
repnz
dec
dec
xor
inc
add
roll
enter
push
test
inc
outsl
mov
adc
and
clc
ljmp
adc
sbb
dec
mov
imul
stc
js
push
imul
xchg
ds
add
dec
pushl
pushf
push
pop
in
mov
pop
loope
mov
jne
jae
dec
mov
push
or
pop
push
sub
frstpm(287
push
xor
cmp
xor
test
adc
fdivs
sarb
mov
call
mov
out
mov
lock
jbe
incb
add
int3
cwtl
fildl
xchg
pop
push
xchg
push
jecxz
pop
pop
jbe
push
push
or
mov
sbb
inc
sarb
cmp
sbb
mov
and
jne
inc
sub
dec
sbb
add
push
jl
mov
lock
xor
loop
or
mov
cli
lret
loope
fwait
inc
dec
movb
test
pop
jle
xlat
mov
roll
add
cmp
lods
loop
jmp
mov
cmp
hlt
push
xor
hlt
sarl
je
cli
dec
arpl
push
push
cmpsl
pop
in
neg
sets
dec
mov
or
add
sbb
testl
shlb
pop
inc
div
aad
in
xchg
jae
cwtl
pop
out
or
or
ficoml
inc
outsl
push
leave
push
inc
in
mov
push
sti
add
insl
incb
inc
pop
mov
sahf
data16
mov
aaa
jae
insl
sbb
xchg
dec
xchg
inc
or
loopne
in
gs
fadd
xchg
adc
and
sbbb
daa
mov
sub
inc
sbb
imul
adc
jne
fnstcw
add
cmpb
mull
mov
jnp
add
mov
pop
xorl
out
mov
mov
ficoml
mov
mov
imul
in
int3
pop
in
xor
xchg
pop
loopne
jl
test
pop
psadbw
mov
les
ljmp
dec
lret
or
xchg
outsb
sbb
aas
sub
call
and
mov
xchg
jns
mov
cmp
mov
jne
ja
push
ljmp
mov
js
inc
fildll
lods
dec
and
scas
das
xchg
mov
xor
adc
xlat
or
jle
mov
sbb
jno
lods
outsb
jne
add
nop
ret
pop
popa
sbb
xchg
out
lds
adc
mov
mov
lods
xchg
mov
push
jno
fwait
pop
les
into
mov
bound
adc
data16
test
cld
adc
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
mov
clc
adc
xchg
ss
lcall
test
add
ds
dec
and
and
mov
fcmovne
sarb
sbb
inc
add
inc
ss
out
push
mov
roll
xchg
add
dec
add
dec
lock
ss
iret
icebp
xor
jns
pop
adc
inc
jge
mov
dec
nop
nop
or
push
dec
push
xchg
push
loope
pop
jb
dec
ljmp
dec
and
adc
cltd
insl
push
repz
jne
sbb
ljmp
mov
movsb
push
pop
adcl
sbb
pop
test
loop
pusha
mov
subl
fwait
orb
push
scas
jb
adc
or
mov
inc
xchg
sub
movsl
call
mov
push
aaa
xor
xchg
sbb
mov
orl
xor
repz
xor
mov
addr16
lds
loop
bound
sub
cmpsb
fcmovnb
scas
cld
xchg
outsl
xor
dec
je
pop
adc
mov
popa
sahf
push
cli
les
es
rcll
fnstcw
fmuls
adc
push
inc
add
int3
and
mov
sbb
mov
fwait
ss
push
ds
xchg
pop
dec
mov
subl
cmp
jne
xor
out
repnz
add
into
cmp
pop
out
aas
cmp
hlt
add
lahf
inc
ds
pop
rol
push
cmp
jmp
inc
mov
sbb
jle
fdivrl
std
mov
cmc
and
and
mov
pop
xor
fs
lahf
in
pop
insb
bound
add
into
xchg
js
iret
add
jl
jns
pop
xchg
ds
jl
aam
hlt
and
gs
loop
leave
rclb
push
xor
adc
rcrl
repnz
mov
mov
fimull
cmp
imull
add
mov
xor
jge
jle
movsl
iret
cmp
and
in
add
ret
dec
loop
dec
js
adc
mov
lret
mov
in
enter
roll
xchg
or
in
inc
data16
scas
idivb
out
push
mov
bound
jo
int3
lock
loopne
sbb
fstpl
jmp
adc
and
cltd
cmp
xchg
lcall
xchg
mov
cli
test
idivb
lods
fdivs
and
pop
adc
les
outsl
addr16
mov
xchg
add
into
cwtl
lcall
push
jmp
adc
jge
adc
addb
or
mov
xor
inc
sub
push
xor
gs
add
adc
add
jg
xor
jecxz
fsubrl
fsub
dec
mov
adc
mov
mov
aaa
jnp
mov
ja
jge
cmpsb
mov
sahf
lock
mov
and
fldcw
xor
fldcw
ss
loopne
mov
rsm
mov
sbb
or
fucomip
bound
sti
inc
je
pop
add
fld1
std
pop
add
out
push
nop
cwtl
sbb
cltd
inc
add
jns
dec
sub
psrlq
xor
dec
in
pop
imul
pop
out
mov
xchg
fs
sbb
jae
js
ja
scas
xor
jns
out
sbb
inc
mov
fistpll
adc
jne
push
add
ja
stc
roll
in
int3
mov
cmp
or
pop
cmpsl
lods
inc
hlt
stc
jle
sub
xchg
je
insb
sub
xor
aad
xor
mov
dec
sub
jb
jbe
pushf
or
ss
xor
cmp
cli
xchg
gs
and
push
xlat
mov
xchg
in
aam
loop
jg
cmpsl
ljmp
sbb
xlat
sub
xchg
push
or
es
xchg
inc
ja
fistl
nop
out
lods
loop
call
mov
sbb
mov
fwait
sbb
xchg
push
int
in
push
scas
fsubs
xor
pextrw
lcall
iret
ss
xchg
jno
xor
jb
outsb
jnp
enter
popf
sahf
repz
jae
xchg
inc
cltd
movsl
ret
add
adc
or
jg
outsb
mov
sbb
jecxz
pop
add
aaa
or
sub
fwait
or
movsl
mov
out
imul
scas
cwtl
mov
xor
aas
shll
and
cmp
popa
imul
popa
test
cmc
pushf
and
into
dec
dec
and
cmp
test
daa
sbb
or
xor
aaa
mov
sub
jns
in
fsubs
mov
push
test
out
pop
and
out
mov
insb
inc
lods
mov
ljmp
stos
or
pop
sbb
iret
mov
imul
mov
mov
push
arpl
lock
cmp
bound
adc
ss
iret
mov
cmc
sub
out
mov
jno
imul
sub
divl
xlat
lret
das
push
and
sbb
ror
stos
es
push
and
add
mov
jg
gs
xchg
aam
mov
push
insl
stos
out
out
test
std
xor
testb
movsl
mov
fistpl
popf
xor
push
and
movsl
cltd
lds
and
xchg
imul
insl
dec
loopne
adc
stos
dec
addb
cmp
in
lods
jg
sub
imul
cmc
inc
push
mov
sub
test
cmp
push
jg
imul
test
or
mov
push
test
aad
sub
xor
fldt
mov
sub
stos
jmp
push
pop
pop
fistl
sti
jecxz
jne
ljmp
sarl
enter
mov
pop
insl
data16
mov
addl
ss
push
scas
xchg
xchg
jp
inc
adc
andl
xor
stos
xor
jge
fcoms
mov
dec
call
rorb
outsb
imul
cwtl
mov
ds
dec
into
lret
jns
push
ds
add
les
pushf
push
adc
push
insl
test
fcomps
xchg
xor
movsw
fmul
cmovp
xchg
xor
scas
imul
cld
out
ss
in
cld
fsubr
mov
and
js
jbe
in
test
out
lods
fbld
sub
imul
clc
sub
xchg
pop
xorb
cmp
adcl
ficoms
ljmp
fdivrl
pop
jp
out
gs
cmpsl
and
dec
and
jge
push
mov
or
inc
mov
adc
jmp
outsb
cli
outsl
mov
clc
add
pop
movswl
fnsave
xor
scas
ss
pop
ror
icebp
jecxz
ljmp
mov
inc
enter
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
push
pop
push
int
popf
in
dec
push
mov
adcl
pop
in
xor
in
mov
push
jne
or
out
sbb
push
xchg
js
repnz
ret
or
fstps
outsb
cltd
dec
ljmp
jae
pop
dec
cld
add
adc
mov
xor
and
fiaddl
repz
dec
call
imul
mov
xchg
shll
into
xchg
mov
popa
add
aaa
mov
clc
ret
pop
xor
aad
aaa
cmpsb
cli
inc
push
mov
jb
imul
push
add
dec
cmpsb
mov
jo
add
xchg
das
inc
inc
or
sbbb
out
sub
jp
mov
call
sub
fsubrl
ja
fidivrl
stc
dec
bound
inc
fmulp
add
pusha
xchg
sti
cmp
sahf
clc
pop
push
shl
add
lret
mov
int
sti
clc
hlt
xor
xchg
mov
xchg
hlt
js
cmp
fwait
mov
sub
jmp
jae
dec
bound
dec
lret
fs
ret
dec
pop
js
loope
xor
mov
push
sbb
and
cmp
sbb
fldt
mov
mov
inc
arpl
xor
xor
xchg
fstp
mov
arpl
add
sub
les
repnz
test
ja
dec
psraw
inc
das
push
pop
or
idivl
jbe
lcall
insl
jge
and
sub
xor
inc
jle
les
repz
popa
or
fidivl
std
loopne
loop
push
inc
aaa
aad
cs
out
ss
dec
ret
mov
dec
pop
cs
into
xchg
cmpsb
dec
xor
iret
add
xor
adc
dec
insb
fsubrs
shl
sub
mov
out
mov
and
adc
pop
xchg
mov
mov
into
dec
adc
test
cwtl
js
shll
push
imul
lahf
cmp
mov
cli
jmp
sbb
sub
popa
push
pop
add
dec
jnp
push
xor
mov
xor
cli
mov
insl
sub
test
sbb
mov
in
mov
out
sbb
mov
dec
mov
add
ja
sub
imull
sbb
ret
enter
mul
mov
mov
das
inc
fwait
scas
daa
sarb
cmp
fisttpll
cmp
xor
cmp
imul
stos
xor
adc
in
inc
cmp
scas
sarb
in
pop
in
cmp
popa
hlt
mov
push
loopne
int3
sub
fidivrs
xor
ror
jl
mov
in
lahf
enter
cmp
in
xlat
push
inc
pop
pusha
pop
push
adc
add
leave
mov
sbb
cli
lret
scas
fsubl
adc
cmp
or
push
jmp
loope
inc
sarb
cmp
add
mov
ja
add
adc
push
pop
dec
and
cmpsl
test
adc
sbb
call
add
retw
sub
mov
or
clc
mov
add
icebp
orb
in
loopne
lds
push
into
or
mov
cltd
push
pop
mov
xlat
movsl
or
sti
and
push
sub
xorl
xor
xchg
xchg
gs
or
popa
mov
push
imul
pushf
sub
adc
lret
dec
dec
adc
xor
dec
mov
sahf
add
nop
lret
popf
ret
sti
popf
add
loope
leave
stos
out
mov
aam
enter
mov
adc
stc
ret
outsb
adc
xchg
icebp
mov
cmp
jnp
imul
out
jno
insb
pop
mov
adc
inc
push
lret
mov
jmp
push
xchg
mov
inc
shld
sub
cs
test
sbb
mov
les
or
pop
test
pushf
inc
xor
imul
mov
test
dec
mov
cs
lret
aam
popa
mov
and
jmp
inc
mov
pop
rcrl
pop
jmp
lret
test
in
sar
sbb
ret
add
push
push
mov
lds
test
jg
xor
inc
cmpsb
sub
dec
xor
sub
jo
mov
flds
push
inc
xlat
pushl
pop
and
adc
pop
and
divb
and
insb
and
mov
mov
das
aaa
sbb
dec
xchg
or
in
fdivp
lods
stos
jnp
fcmove
push
and
rcll
gs
test
imul
aas
nop
test
inc
pop
loop
fcomi
fdiv
repz
repnz
mov
xor
push
in
lret
lcall
adc
xor
jno
int3
sub
mov
fwait
or
std
push
nop
mov
popa
xor
cmpsb
adc
jne
and
xor
mov
fisttpl
add
idiv
adc
fs
ja
scas
mov
lods
ds
test
dec
nop
mov
mov
pop
xchg
pusha
sbb
loop
push
push
xor
js
jnp
and
xor
pushf
add
bound
not
adc
mov
adc
dec
ret
lahf
sub
push
add
inc
jmp
out
fsubrs
subb
push
xor
repnz
sbb
xchg
lock
adc
inc
sbb
sub
and
out
movsl
aad
push
adc
inc
icebp
ds
into
cltd
lcall
and
stos
sub
pop
sub
xchg
mov
cmc
fs
lods
aas
dec
cmpsb
push
pop
jae
ljmp
call
jno
ljmp
push
or
or
stc
scas
test
rcrl
pop
addb
ret
xor
fcmovb
inc
xor
push
sub
xchg
or
in
dec
jp
test
jecxz
xor
bound
loop
cmp
aaa
test
and
pop
in
ret
mov
shll
cmpsl
pop
aam
test
xchg
test
sbb
xchg
jb
testb
xor
nop
or
fsubrl
or
dec
sub
sub
icebp
nop
push
and
movsb
mov
out
popa
sub
imulb
and
and
pop
and
mov
int3
xchg
pushl
inc
sbb
imul
jecxz
mov
hlt
xchg
fdivl
cmp
fdivs
sahf
jp
sbb
sti
sbb
out
inc
xor
mov
cmpsl
adc
and
movsb
xor
insl
xchg
dec
adc
sbb
sbb
dec
sub
push
mov
sbb
cltd
inc
jnp
aas
fdivrl
fnstsw
lock
add
jnp
mov
cmpb
sub
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
inc
sbb
mov
or
ja
sarl
sub
hlt
xor
aaa
shrl
sti
sub
and
cmpsl
test
dec
mov
dec
mov
stos
cmp
jecxz
push
xor
inc
add
orl
popa
fprem
shlw
pushl
scas
push
jge
test
into
and
inc
repz
mov
mull
test
cld
jne
das
rcl
xchg
pop
push
xor
ja
or
lods
test
sbb
out
ja
leave
mov
mov
sub
and
lahf
jmp
or
push
clc
lods
jb
mov
imul
decl
mov
clc
xor
push
pushf
loop
insl
int
mov
jl
ljmp
mov
fs
mov
xor
outsl
ja
and
mulb
or
imul
xchg
jns
std
mov
fs
dec
or
cmp
sbb
mov
je
xchg
push
push
cmpsb
push
popf
addr16
lods
inc
pop
aaa
cmp
ret
cmc
inc
int
ja
repnz
negl
mov
std
test
cmp
daa
lahf
int3
mov
in
pop
sbb
cmc
jecxz
sub
pop
push
inc
outsb
inc
stos
and
push
and
lret
jecxz
cmpsb
cld
mov
out
enter
jge
sbb
jo
cmpb
cwtl
rorb
dec
xchg
cmp
adc
mov
lea
mov
mull
dec
rol
pop
lcall
cmp
shll
sub
xchg
fildl
lods
mov
adc
leave
pop
popa
jg
cmp
sub
push
push
in
ret
pop
in
sarb
dec
pop
inc
jmp
xchg
mov
pop
xchg
shll
mov
imul
out
mov
jbe
mov
fstpt
negl
into
cmp
dec
mov
inc
cmpsb
shr
and
mov
pop
mov
clc
out
jecxz
xor
loope
popf
mov
xchg
or
ljmp
add
adc
inc
fwait
jne
xchg
or
jmp
lret
jmp
enter
jnp
jbe
std
adc
jge
gs
movsl
popf
arpl
pop
jle
in
imul
xchg
loope
mov
push
repnz
and
test
mov
jl
shr
fchs
movsb
sbb
adc
lahf
sub
shrb
adc
or
push
loop
or
divl
scas
incl
out
lods
and
testb
in
in
imul
mov
mov
or
out
ja
cmpsb
xchg
and
lret
vpminub
call
adc
dec
xor
test
lcall
xor
xchg
xchg
sahf
lods
cmp
notb
or
or
xor
cwtl
outsl
mov
adc
test
or
psubusw
add
mov
cmp
mov
push
add
hlt
filds
jg
call
mov
jmp
mov
push
mov
addr16
mov
cmpsl
stos
xchg
or
add
dec
pop
push
decb
aad
sub
xchg
push
xor
bound
mov
data16
inc
and
mov
lock
mov
stos
jns
and
mov
ficomps
and
bound
or
ss
iret
call
bound
add
add
imul
xchg
xchg
loopne
aaa
inc
ljmp
loop
push
jmp
add
xchg
pop
adc
out
xchg
sarb
mulb
iret
mov
jae
jne
ljmp
lahf
shlb
scas
lea
inc
inc
xchg
loope
mov
test
sbb
dec
pop
or
mov
sub
push
or
xor
push
or
add
add
cld
testl
jne
out
les
js
lret
frstor
lcall
push
sahf
dec
inc
clc
pop
movsb
jl
jne
ja
cmp
movsl
push
mov
sbb
cmpl
or
cmovs
sbb
xor
pavgb
movsb
outsb
int3
popa
and
dec
mov
inc
shrb
aas
mov
lock
adc
mov
inc
rcll
pushf
adc
or
cmpb
sbb
clc
adc
test
jp
mov
pop
xor
movsl
mov
stos
jbe,pn
std
dec
or
dec
sbb
adc
mov
push
inc
jnp
mov
sub
mov
jb
es
mov
notb
mov
repnz
jbe
div
xor
jae
push
pop
orb
lods
movsb
movsb
mov
mov
adc
in
xor
dec
mov
insb
sti
cld
mov
sbb
or
in
decl
sub
mov
out
cld
or
xor
mov
lea
push
js
je
push
and
sbb
lods
movl
push
shrb
mov
mov
push
mov
push
ret
loopne
jl
sbb
shlb
cmpsl
jns
adcl
adc
jp
pop
cmpsb
jmp
cli
cmp
lods
rol
cld
cmp
lock
jecxz
dec
stos
xor
or
cmp
sbb
mov
loope
ret
mov
push
push
jns
mov
mov
aaa
adc
xlat
mov
inc
xchg
cmc
lahf
mov
lock
clc
jo
push
test
icebp
xchg
rcrb
scas
scas
es
jno
repz
push
pop
mov
xchg
int
aad
imul
into
ret
in
notl
and
ficoms
rcrb
test
fwait
negl
in
dec
and
shll
inc
ja
ja
jge
cmp
test
or
sahf
enter
mov
and
cmp
cmp
aas
into
stc
lods
inc
pop
jns
outsl
addl
aaa
pusha
testl
xchg
pop
sub
inc
pop
sbb
add
jp
popa
pop
data16
pop
movsb
push
call
loopne
and
loop
mov
popa
mov
arpl
mov
inc
cli
mov
out
lcall
xchg
insb
fimull
in
jbe
push
cmpb
xor
sbb
dec
or
fnstsw
add
adc
test
jnp
aam
outsb
pop
popa
sbb
leave
mov
jle
sti
xor
push
sahf
xor
jnp
testb
mov
mov
fnstenv
adc
out
add
pop
fsubr
popf
dec
gs
ja
or
xchg
and
mov
adc
mov
pop
pop
enter
mov
sbb
setp
jmp
loop
ss
jns
testl
ffreep
push
jae
jg
xchg
out
jmp
or
insb
rcll
fst
push
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
into
in
lahf
cld
adc
movsb
stc
pmovmskb
or
inc
sarl
sub
sti
sbb
cmpsb
outsl
ret
mov
dec
xlat
les
repz
inc
in
xor
and
insb
xchg
mov
das
inc
inc
test
stos
stos
popf
push
sbb
inc
adc
int3
dec
jne,pt
adc
lods
cwtl
fildl
mov
jle
jl
push
call
roll
repz
dec
cmpsb
push
inc
inc
xor
push
dec
sub
pop
push
xchg
inc
in
xor
pop
mov
testl
ds
rolb
pusha
cmpsl
jns
add
clc
shr
jbe
mov
sub
sub
push
mov
xchg
sub
xor
lock
or
adcl
mov
adc
mov
push
dec
push
push
mov
into
adc
sbb
or
mov
push
shll
push
and
or
push
push
lods
rcrl
repnz
ret
icebp
mov
and
jns
xchg
sub
mov
pop
mov
inc
orl
loope
pop
ja
iret
inc
xchg
stc
push
mov
sbb
popf
pop
es
fiaddl
xlat
aad
popa
xor
outsb
clc
xlat
jns
es
xchg
mov
add
inc
add
aad
ret
pushf
mov
sbb
sub
pop
test
jg
lods
js,pn
pop
mov
xor
dec
mov
add
into
pop
pop
mov
int
rolb
adc
mov
add
not
xchg
push
rolb
fbstp
popl
push
or
or
mov
lods
imul
mov
sub
mov
sub
and
pop
mov
nop
jbe
mov
cli
and
popa
fdivs
outsb
adc
mov
addr16
js
pop
or
sbb
cltd
sub
dec
jle
push
lret
shrb
out
lds
loope
jg
xchg
ss
pop
mov
add
jne
orb
sar
pushf
lods
dec
je
leave
iret
loop
sbb
sahf
jmp
mov
pop
es
and
out
stos
test
jge
lds
xchg
jnp
std
test
mov
xchg
cmp
mov
cmp
mov
imul
adc
mov
xchg
mov
cmpsb
or
jns
sbb
and
stc
cmp
push
inc
int
loop
icebp
pop
xchg
inc
lods
mov
scas
sti
cmp
ja
out
das
out
or
cmpsl
dec
mov
not
icebp
loop
mov
mov
mov
xchg
or
int3
jg
jle
out
loop
out
imul
push
imul
jmp
xchg
cmp
mov
int3
subl
add
dec
outsl
sub
lcall
mov
add
adc
lds
push
add
jge
call
fstpl
inc
adc
ja
or
cmp
fnstsw
sbb
popf
out
aaa
cmpsb
dec
sti
pop
iret
loopne
lock
je
divl
or
jb
xor
mov
cmp
imul
inc
mov
stc
inc
add
or
inc
cmp
push
sahf
mov
fmull
int
out
repnz
aaa
add
sete
testb
js
jmp
lea
fisttpll
pop
jl
loope
daa
jae
push
and
aaa
negb
or
stos
pop
outsb
or
int3
adc
jns
fs
jno
call
pop
lret
xchg
and
xchg
out
inc
js
dec
mull
adc
mov
pop
mov
in
ljmp
sbb
sbb
stc
push
xchg
out
loope
fucom
jno
inc
movsl
addr16
repnz
xchg
cmp
mov
sahf
cli
xchg
sbb
or
add
test
rorl
cmp
mov
push
scas
xchg
jg
sub
xor
inc
sbb
mov
mov
mov
push
add
push
stc
fwait
cs
outsl
push
in
xchg
pop
pop
push
in
pop
mov
xor
mov
outsb
inc
fsts
nop
jb
pop
jle
xor
cmpsl
scas
int3
xchg
scas
sbb
jmp
pop
pushf
imul
je
repz
das
xchg
ss
aaa
hlt
add
lret
inc
adc
jae
push
and
insb
sahf
mov
ret
jne
cmp
shlb
int3
fs
inc
inc
add
add
adc
push
out
je
mov
icebp
aas
in
insb
rep
fcomp
cmp
mov
dec
mov
lcall
test
mov
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
