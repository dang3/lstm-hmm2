push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
add
mov
jle
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
fcmove
aad
shl
sti
aad
iret
loope
testl
xchg
jmp
icebp
out
call
sbb
clc
call
lock
loop
mov
repz
out
out
sti
lret
cmp
out
repnz
movl
cli
jmp
push
call
ljmp
rcr
out
cli
fadds
ret
out
in
loopne
in
loop
mov
in
std
leave
cmp
rcr
cmp
rcr
test
ljmp
test
xor
lret
repnz
icebp
cmp
fiaddl
fimull
out
ljmp
leave
fdiv
aam
divl
shl
out
ljmp
sbb
xor
enter
cld
idiv
push
fidivrl
xor
cmc
jmp
lret
shr
aam
aam
cmp
std
fdivp
loopne
cmp
test
out
repnz
loope
icebp
ljmp
ror
fnstsw
cmp
lret
rcr
fadd
fcom
rorl
cmp
xchg
neg
into
clc
neg
clc
jmp
int
lret
cmp
rcl
sar
clc
mov
mov
out
mov
fisttpll
aad
repz
aam
loope
ret
lock
fdivr
int
iret
jmp
shl
mov
cmp
lret
ret
iret
fcmovu
fldl
loopne
nop
fcmovnbe
xchg
movb
xor
cmp
lock
xchg
cld
sbb
loope
loope
xchg
leave
rolb
xlat
ljmp
neg
out
test
ljmp
lock
rol
sub
aam
in
sti
cmp
cld
test
enter
mov
loopne
hlt
jmp
fcmovnbe
clc
clc
jmp
in
loopne
loop
xchg
ror
sti
std
in
lock
lret
in
fxch
aam
iret
aam
out
not
icebp
int
test
aad
enter
mov
lret
cli
icebp
lret
jecxz
aad
lret
ss
out
loop
movb
mov
sub
sti
xchg
xchg
lock
out
fcmove
cld
icebp
leave
jecxz
xlat
loopne
fscale
enter
icebp
out
xchg
call
leave
sti
fdiv
cmp
clc
xlat
dec
sarl
repnz
fldl
and
xchg
adcb
lret
icebp
fdivr
ds
std
lock
sti
out
faddp
fsubp
test
in
test
mov
int
xor
mul
loope
rcl
fidivrl
mov
mov
in
cld
in
mov
enter
out
in
movl
fdiv
jecxz
test
fadds
nop
xchg
ret
out
shr
cmp
in
out
cmp
idivb
shl
testl
loop
loop
xor
enter
out
jmp
fadd
testl
test
call
int3
fldpi
ss
lret
sti
std
shl
mov
in
fiaddl
in
xchg
xchg
cli
not
in
ljmp
lock
cli
stc
fucomp
out
addb
rcl
aam
enter
lret
cld
fdivr
add
mov
test
hlt
lret
rcl
sub
aam
cmp
jmp
call
cld
fisttpl
call
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
xchg
sbb
add
jmp
stc
shl
out
mov
icebp
into
xchg
in
iret
cmp
cmp
shr
adc
hlt
and
out
lret
xor
in
das
enter
cli
fdiv
in
int
cmp
fsubp
stc
out
jecxz
xchg
sbb
cld
sti
fcoml
xor
cmp
out
cmc
push
lock
loop
jmp
mov
int3
iret
fsubp
jecxz
cs
xor
loopne
sbb
fadd
testb
ljmp
hlt
xlat
cmp
in
out
fsubr
int3
ret
mul
ror
in
mov
ljmp
repnz
test
cmp
loopne
div
rcl
into
ror
les
fstp
fisttpl
das
cli
bnd
stc
aas
icebp
in
in
icebp
mov
add
mov
int
fmul
sti
fisttps
repnz
sti
cld
cmc
sarb
cmp
in
out
fildl
cld
loop
in
cli
fiaddl
xor
aaa
cmp
sar
sar
aaa
lock
ret
cmc
mov
fsubrp
loopne
rclb
lock
in
call
hlt
shl
fstpt
call
ffreep
cli
out
xor
lock
lret
in
shl
cmp
rcr
ljmp
shl
sti
sar
stc
aam
int3
in
std
loop
out
mov
repz
shr
aaa
sti
aas
fcmovu
sub
addb
fcmovb
mov
xchg
repz
shl
jmp
out
cmc
loope
rcl
cmp
xlat
xchg
mov
out
icebp
in
mov
repz
xlat
enter
rcr
iret
shl
ret
test
xchg
int
nop
loopne
sar
iret
jmp
repz
xor
clc
icebp
jecxz
loop
loop
call
mov
out
repz
jmp
fcomp
jmp
cld
xor
ret
ds
xchg
in
nop
sti
into
iret
rcll
shl
leave
cmp
shr
icebp
sarl
imul
jecxz
fsub
fsubr
cli
addl
jecxz
lret
cli
aaa
lret
icebp
cmp
loopne
std
ljmp
in
iret
decb
jmp
in
iret
int
std
shr
sti
and
lock
jecxz
test
nop
and
loope
out
loopne
rol
clc
fcmovne
ss
clc
fnstsw
test
cmp
loopne
orl
mov
out
xor
ret
jmp
stc
loopne
lret
aam
lock
loop
xlat
aam
mov
out
lock
xchg
mov
repnz
lock
ret
shr
cmp
fmuls
int3
in
fldl
ret
lret
rcr
aaa
out
repnz
repnz
cmp
leave
cli
jecxz
fsub
int3
loopne
test
jmp
aam
jmp
ss
loopne,pt
mov
int
loope
stc
sti
hlt
repnz
sbb
fsub
loop
lret
clc
int3
fsubp
sti
out
shr
aam
xor
xor
repz
cld
inc
ds
fcmovne
fisttpll
ljmp
repz
hlt
sbb
xchg
fcmove
xchg
jmp
repz
int3
ljmp
sar
loop
call
loop
call
xchg
int3
out
repnz
fsubr
icebp
rcl
int
cmp
in
in
into
jecxz
jmp
rclb
leave
aad
out
cmc
std
leave
cmp
fimull
fmul
mov
rorl
in
ret
ret
aam
cmp
or
xor
in
xlat
mov
stc
sub
in
rcl
loope
aas
shl
xor
out
bnd
loop
cmc
fst
aad
fiaddl
icebp
cld
xchg
jecxz
hlt
icebp
in
in
xor
cmp
lret
hlt
ret
loope
sbb
enter
in
ljmp
std
cmc
int3
cmp
cmp
cli
sbb
stc
mov
out
test
test
mov
mul
sub
cmp
cmp
testb
shr
fucom
faddl
cld
test
fnstcw
out
jecxz
shl
sarl
mov
fsubp
lret
out
lock
out
int
xor
ss
ror
xor
lret
fsubr
mov
jmp
fadd
leave
int
bound
inc
aad
sub
int3
pop
jle
movsl
add
rol
fsubr
out
out
clc
out
int
rcl
xor
int
aaa
aaa
aad
stc
lret
fcmovb
movb
loop
lock
loop
out
xor
out
cmp
sarl
mov
and
mov
xchg
out
out
ljmp
fdivs
jecxz
repz
orb
std
int3
mov
rcl
hlt
cli
imul
sbb
sar
aam
jecxz
sti
and
lock
out
test
icebp
icebp
sti
int3
loopne
shl
in
addb
fisttpll
neg
enter
aad
out
fcomp
ds
xchg
incb
mov
sti
mov
lock
sub
jecxz
enter
ljmp
stc
fstp
fdivp
loopne
stc
fucom
fcmove
fcmove
mov
xlat
cmc
xor
fdivr
xlat
icebp
repz
jmp
out
lock
fucomi
mov
in
hlt
idivb
in
fdivr
cmp
clc
xchg
sar
out
xabort
lret
std
and
imulb
aad
lock
cli
cmp
adc
aad
rolb
xor
out
out
loop
lret
int3
cmc
in
fdiv
xor
std
ss
dec
fldl
idiv
mov
mov
out
xchg
xchg
in
and
iret
cmp
out
rcl
repz
into
xor
in
shl
jecxz
mov
std
mov
in
orb
out
xor
cmp
stc
sbb
ljmp
repz
aam
loope
hlt
into
cmp
sar
aaa
into
fstp
sar
clc
rcr
out
cli
movb
lret
repz
in
aam
into
jmp
fnstsw
xlat
in
repnz
mul
loopne
adcl
clc
out
xor
enter
lock
aam
fadd
fiaddl
stc
jecxz
xchg
int
mov
mov
cmp
cmpl
xlat
cli
mov
enter
icebp
in
icebp
aam
test
out
fidivrl
int
loope
in
test
sarb
jmp
loop
nop
in
lea
xor
rcl
jmp
fdecstp
jecxz
loopne
out
ds
neg
mov
in
out
not
out
shl
cld
cmp
shl
sbb
testb
or
std
rolb
jmp
int3
in
sarb
repnz
rcr
shl
hlt
mov
incb
std
mov
aam
int
cmc
cmp
call
repnz
add
decb
out
loope
shr
sti
fmul
cli
enter
aas
cmc
jmp
fld
jmp
lret
mov
add
xor
xor
leave
fstpt
loope
add
cli
icebp
int
nop
jmp
divb
iret
sbb
cmp
ds
mov
ret
out
out
mov
divb
lret
cmp
xor
cmp
repz
leave
in
out
int3
cld
enter
loope
xor
cli
xor
std
cmp
hlt
int3
aad
ret
loop
test
mov
xchg
adc
jmp
icebp
int3
cmp
xlat
in
cmp
cmp
cmp
loope
sti
loopne
fucom
div
neg
xchg
mov
in
in
out
xor
lret
aas
add
ljmp
lret
cld
fsubr
mov
jecxz
xor
int
clc
ds
jecxz
cmc
rolb
test
repnz
aad
call
out
int
in
cmp
mov
xlat
stc
out
clc
loope
icebp
loop
in
in
cmp
xlat
fucomi
icebp
cld
aaa
cmp
out
icebp
xchg
call
loope
into
loop
in
test
lret
fchs
fsubp
rcl
fucom
lret
out
lret
xchg
loop
fdivp
out
div
fdiv
shl
neg
aam
shlb
fdiv
iret
cmc
sbb
out
icebp
loop
ljmp
shl
aad
in
stc
in
loope
rcr
test
fdivr
jmp
fdiv
out
in
call
aaa
aad
sti
cli
jmp
ret
in
test
fildl
int
mov
xor
stc
out
iret
cmp
out
cld
loopne
ss
repnz
out
lea
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
test
jle
movsl
add
ret
out
jecxz
addl
leave
aad
idiv
shl
fsubp
mov
enter
mov
mov
mov
xchg
mov
aad
call
fdivrl
cmc
out
fdivp
repnz
enter
jecxz
iret
fcomp
mov
jmp
mov
ror
lret
rcr
int
enter
jmp
iret
xlat
rol
loopne
loop
fsub
xchg
lret
mov
xor
cmp
fdiv
std
rolb
ret
out
in
in
fucomip
incl
jmp
out
sar
sar
out
cld
shl
test
sti
shr
lret
mov
out
leave
xor
xor
shl
les
or
jmp
loopne
ror
ljmp
in
cmp
into
jmp
sar
out
mov
sti
mov
xchg
mul
ror
enter
idivl
hlt
int
fcomi
rcl
add
mov
loope
lret
mov
call
shlb
fcomi
cmp
std
ds
enter
mov
lea
in
rcl
rcl
aaa
xor
fdivr
jmp
cmc
cmc
cld
cmp
loop
ds
and
mov
fucomp
xchg
xchg
xor
out
rol
in
cmp
cmp
int3
clc
aad
jmp
out
jmp
jmp
cmp
jmp
repnz
out
ds
fsub
leave
addl
hlt
lock
fadd
xor
icebp
shl
xlat
lock
fcmovb
call
in
xlat
neg
in
lret
out
out
lock
xor
loop
cmp
xor
cli
jecxz
hlt
call
into
icebp
lock
xchg
jecxz
in
cmp
test
cmc
ds
ret
aam
loopne
into
in
int
int
aaa
cs
div
sar
int
int
cmc
ret
div
lock
cmp
and
loopne
fcomi
xchg
cmc
ljmp
fsubr
ljmp
xlat
call
loopne
fstl
out
out
das
shl
in
fsubp
out
in
into
adc
stc
and
loope
cmp
addl
cli
test
jecxz
shl
aad
flds
mov
rclb
fdiv
fsubr
push
cmp
rcr
ffreep
mov
mul
mov
xchg
fsubr
icebp
leave
clc
cli
lock
cmp
cmpb
std
cmp
and
lock
mov
ljmp
ss
cmp
icebp
aam
ds
in
roll
in
loope
xor
sub
xor
cmc
out
enter
ss
cmp
in
cmp
loopne
std
loope
ds
jecxz
cli
fcoml
in
ror
xor
leave
jmp
iret
hlt
out
fcmovnu
xlat
lock
xchg
mov
fadd
clc
shl
stc
iret
xor
aam
ljmp
cli
loope
mov
ljmp
enter
lret
iret
int
decb
lret
fisttpll
shr
out
in
xlat
fcom
xor
aad
lret
xlat
ss
and
mov
in
loop
fadds
xchg
shl
xor
clc
repz
iret
vpsllq
ljmp
in
rorl
cmc
in
in
sti
xor
lret
fistpll
cli
test
fsqrt
mov
in
jmp
mov
rcl
int3
repnz
sti
xor
leave
call
rcl
loop
mov
stc
std
iret
call
adcl
int3
idivl
in
std
loopne
iret
jecxz
ret
aam
shr
leave
mov
xchg
shrl
leave
loop
aad
std
stc
jmp
lock
ror
test
sar
jecxz
ret
int3
loop
nop
loope
rorb
in
cmp
lock
lret
out
aas
in
mov
test
test
addb
xchg
jecxz
enter
cmp
repz
cld
ds
ljmp
in
shl
jmp
jmp
int3
jmp
repz
fstp
in
test
repnz
cmc
ljmp
jecxz
mov
out
iret
in
fidivrs
aam
aaa
in
sti
loop
cli
test
cli
sti
cli
xchg
cli
and
xchg
lret
aaa
jecxz
repnz
ds
out
fcmovbe
ds
sti
out
repz
out
out
fildl
add
mov
rcl
aad
int3
call
in
lcall
jle
hlt
xchg
sub
xlat
repnz
dec
int3
idiv
cmp
adc
in
ret
sti
cld
mov
call
iret
loopne
aaa
sti
out
idiv
mov
loopne
xchg
loope
lret
loope
sti
std
enter
nop
fsubp
stc
shlb
xor
jmp
std
test
ds
test
xlat
and
mov
jecxz
in
mov
rcl
hlt
not
enter
neg
cld
imul
lds
out
faddl
std
mov
stc
aaa
shr
idivb
out
aaa
loope
repz
fldl
mov
ffreep
in
ffreep
xor
shr
aad
jmp
icebp
in
sarb
fld1
movl
int
clc
into
in
aaa
xor
fxch
iret
cmp
ret
test
test
loope
xchg
fdivp
xor
loop
jmp
cmc
jmp
out
std
cld
loopne
lock
enter
mov
in
xchg
rcl
mov
ret
shr
lret
fmul
stc
lret
idivb
test
mov
fdivr
ffree
frstpm(287
clc
shr
int
and
iret
call
or
cmpb
mov
sti
in
cld
shr
out
hlt
xchg
aad
in
out
iret
cld
iret
fxch
sti
clc
clc
rcl
ds
sti
cmp
fiaddl
ret
enter
cmc
xor
stc
rcr
jecxz
in
mov
out
orl
repz
fmul
icebp
cmp
ret
les
sar
lret
out
shr
fimuls
leave
fcomp
rcl
fucomi
hlt
aas
cmp
icebp
out
test
cmp
call
jecxz
cmc
ljmp
in
icebp
aaa
idiv
into
out
fmul
adc
les
out
fsubrp
lret
loop
fnstcw
fcom
ljmp
cmp
call
fiadds
subb
lret
jmp
into
fst
int
shr
into
ds
lock
fld
testl
xor
test
lock
neg
cld
shr
sarb
call
xchg
clc
lock
xchg
test
enter
lock
xor
cmp
sti
cli
rol
aad
lret
neg
out
jmp
out
fnstenv
cmp
cmp
lock
clc
aad
cli
hlt
aas
ljmp
repz
xchg
aaa
xor
out
fldl2t
aad
fstpt
icebp
out
sti
rcl
adc
aam
enter
leave
fdivr
lock
xchg
xor
not
xor
shl
lret
aad
clc
test
cmc
aad
sbb
jmp
in
jecxz
test
call
sti
in
cmp
aam
test
fiaddl
rcll
faddp
ret
in
cmp
rol
fndisi(8087
shl
int
lock
clc
call
xchg
stc
out
xor
leave
ss
std
loopne
rcl
out
fdivr
lret
out
jmp
rol
fnstenv
cmp
sar
hlt
int3
rcl
ds
xlat
fcmovne
out
lret
out
xchg
test
shl
repz
dec
fmul
fcmovnb
in
repnz
test
loopne
int
icebp
mov
loope
aad
fcom
test
rol
icebp
iret
aas
loopne
fucomi
std
lret
sti
filds
ljmp
into
cmp
stc
test
lret
in
jmp
int
in
sar
jmp
loopne
aad
aam
aas
loope
aad
lret
sti
mov
jmp
lret
hlt
jmp
shr
jmp
out
in
into
cmc
xchg
fdivr
mov
mov
test
fadd
cli
ljmp
icebp
ret
faddp
mov
in
out
fsubrp
mov
rol
aaa
repz
aad
fnstsw
inc
cmc
aam
testb
mov
out
test
mov
out
cmp
repz
xchg
aam
std
int3
loop
mov
xchg
xchg
rol
int3
hlt
clc
in
rcl
jmp
filds
icebp
fdivrp
xlat
stc
lea
shl
rclb
ljmp
aaa
jmp
test
cmp
shl
in
enter
decb
fcmovu
out
sar
lock
hlt
cmp
incl
in
test
lret
mov
xchg
das
call
test
add
rcl
fstp
fldt
shll
add
xor
enter
and
ret
stc
div
imul
fsubr
sbb
loop,pn
cmc
shl
cmp
sar
int3
jecxz
xlat
add
xchg
cli
clc
fsubrp
and
enter
hlt
aad
hlt
xor
fadd
cld
neg
hlt
ds
jmp
out
call
out
clc
leave
call
lret
int
ror
xlat
mov
aas
clc
std
mov
into
nop
lret
loop
aas
icebp
loope
cmp
cmp
cmp
lret
fst
test
cmc
cli
cli
cmp
in
cld
jmp
jecxz
in
in
aad
ds
shl
test
shl
fcomp
mov
mov
in
aas
call
iret
sarb
divb
fcom
loopne
mov
lret
fucompp
iret
xchg
ljmp
out
ror
xor
in
cmp
lret
loope
loope
bnd
jmp
vcmppd
ljmp
int
iret
clc
lock
in
aad
cld
mov
test
fildl
iret
repz
cmp
cmp
addb
in
cld
roll
xchg
ljmp
cmp
fdivrl
repz
call
out
fcompp
ret
sti
repz
ljmp
mov
leave
aam
repz
stc
test
and
cmp
lret
sti
mov
loope
loop
cs
fnstcw
lret
jmp
cmp
in
div
test
std
xchg
xchg
fucomip
out
div
out
fsubr
iret
rcr
sti
fldl
cmp
cmc
std
fabs
jmp
lock
test
xor
jmp
into
in
loope
loop
fsub
loope
mov
into
rcll
stc
enter
int
sti
loopne
std
rcr
fsub
in
out
mov
test
icebp
icebp
xchg
mov
icebp
mov
lret
not
out
test
cmp
fcomi
out
in
out
ljmp
ret
lret
out
int
fdivrl
into
ljmp
test
vpaddd
cld
cld
or
loopne
fxch
cmc
repz
out
int
fcom
in
fsubr
lock
xlat
fucomi
mov
test
lret
sti
sti
shl
jmp
cld
aaa
fcom
div
jecxz
jecxz
jecxz
in
stc
ror
call
in
out
idiv
cmp
fnstsw
cld
int
out
add
icebp
shl
mov
jecxz
iret
bnd
test
int
ror
sub
jecxz
cmp
and
int
in
mov
xchg
repz
enter
xlat
aad
ffree
cmc
shl
test
stc
loop
mov
mov
into
cli
fsub
call
aad
iret
xor
cmp
loope
cmp
cld
rol
fsubp
ret
jmp
div
mov
repnz
shl
xor
in
cmp
xlat
cld
out
shl
repz
xlat
shl
aad
std
mov
lret
xchg
addl
int
sti
aas
into
in
sti
stc
repz
and
stc
fisttpll
xor
cmc
xor
xor
clc
fpatan
sti
stc
out
div
xchg
lret
fninit
xchg
clc
ror
out
mov
xor
in
rcr
ss
clc
cmc
rcl
rolb
aad
jmp
jmp
fstl
xor
clc
ljmp
stc
cld
addb
xchg
sbb
lret
xchg
xor
jmp
cmp
sarb
lock
sti
not
ret
aad
mov
fsubrp
out
int
in
ljmp
sti
fdivr
cmp
cmp
cmp
jecxz
hlt
cmp
mov
lret
lret
xchg
test
repz
std
fdivr
adc
mov
testl
jmp
out
repnz
mul
ds
rcl
ret
xchg
aas
aas
loopne
fld
ljmp
mov
shl
in
out
lock
clc
shr
rolb
lret
add
out
repz
jecxz
sub
out
in
and
repnz
ret
fstp
test
loope
lret
sub
clc
cli
xor
repnz
rcl
cli
cmp
and
test
int3
nop
cmp
ret
rcr
ss
fscale
lock
cld
sti
lock
out
stc
sti
icebp
testb
sbb
mov
cld
xor
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
ljmp
jle
add
iret
fidivrl
lock
ds
int
mov
iret
mov
and
loop
cmp
fdivrs
icebp
rcl
inc
stc
sti
fcmove
aam
xlat
lock
rorb
shl
cmp
sti
icebp
stc
aas
rcl
sar
test
fucomp
int3
int3
and
int
testb
lock
loopne,pt
xor
hlt
rcr
in
in
rorb
jecxz
int3
cld
lret
fstp
stc
out
ds
vshufps
cmp
int
out
aam
bnd
ret
jmp
cmp
lock
fincstp
xchg
mov
clc
fmulp
ljmp
jmp
lret
repz
ds
ret
mov
rcr
cld
enter
test
rcl
cmp
cmp
out
jmp
in
loop
xchg
shr
out
fdivrp
fcmovbe
into
cld
aam
out
into
ljmp
cmp
cmpl
cmp
icebp
rcr
stc
and
jmp
ljmp
clc
rcr
xor
in
fcom
cmp
aad
xlat
int
cmc
cmp
leave
jecxz
lret
mov
in
lret
rolb
xor
xlat
push
int3
lret
ret
add
xchg
jecxz
xchg
enter
ss
std
cmp
cmp
xchg
ret
aam
filds
out
or
shl
loope
xor
cld
clc
hlt
cli
fcomi
repnz
clc
out
fdiv
xchg
xchg
fmuls
iret
loopne
in
not
xor
cmc
fxch
cmp
aas
ret
mov
decl
loop
repnz
std
loope
in
jecxz,pn
xor
cmp
std
out
cmp
out
sar
clc
add
int
lock
xchg
and
idiv
stc
imul
repnz
cmp
sbb
ret
mov
call
ror
nop
call
out
fcmovne
leave
fcomi
ror
cld
fnstcw
out
test
cld
test
out
decb
xchg
loop
bnd
repnz
xlat
in
cmp
fdiv
cmp
xlat
enter
in
loop
mov
not
repnz
cmp
shr
xlat
clc
rcr
out
repnz
out
cmc
test
or
shl
shlb
aad
rcl
cld
icebp
hlt
neg
incb
test
xchg
jmp
mov
shr
int3
lret
cmp
int3
xlat
xlat
xchg
cmp
jmp
in
xchg
rcr
nop
cmc
xor
int
leave
in
xlat
test
ret
mov
mov
xor
xor
cmp
das
out
call
idiv
cld
aas
inc
mov
int3
mov
in
stc
fucomi
call
flds
loope
filds
lea
repnz
shr
cmp
aad
shl
int
in
ror
lret
call
mov
lock
clc
ljmp
repz
out
shl
shl
clc
lret
cli
xlat
xchg
enter
xchg
jecxz
enter
call
cld
loopne
aas
jecxz
stc
in
in
into
iret
mov
loopne
cmc
loopne
out
int
shr
idivl
icebp
ds
fdivr
aaa
decl
mul
out
fdiv
mov
loopne
out
xor
out
iret
in
leave
lret
aad
stc
sub
out
icebp
loop
jecxz
shr
mov
fdivrp
call
iret
xchg
cmp
mov
iret
cli
iret
loopne
aam
neg
cld
rcr
aam
aam
in
test
sti
and
cmp
cli
mov
xchg
ljmp
sti
cmp
xor
jmp
sti
lds
leave
clc
vpxor
xchg
mov
repnz
ljmp
in
cmp
ljmp
addb
out
out
cld
enter
cmp
aam
test
shr
std
jecxz
imul
fxch
call
aaa
fmul
xor
das
std
cmp
ds
in
fdivr
test
lret
fsubp
out
loope
in
xlat
out
shl
cmp
cmp
lock
lock
jecxz
shl
stc
fdivrp
jmp
xchg
sti
in
mov
loope
cmp
out
cmp
cmp
aas
test
faddp
rcl
fdivr
out
jmp
sar
rorl
xor
ljmp
jmp
cmp
iret
movzwl
jmp
ret
aas
ret
aad
aad
mov
cmp
add
cli
ffree
div
test
test
loopne
xchg
loope
shrb
das
jmp
cmp
fdivp
loope
repz
loop
aam
sub
cli
jecxz
in
shl
or
shr
neg
repz
aad
xor
ljmp
rcr
fmul
loop
or
in
iret
mov
test
leave
fstpt
cmp
addb
mov
loop
xchg
int3
xchg
test
jmp
sub
cmc
int
sarl
hlt
mov
fcmovnu
xchg
jmp
icebp
ljmp
xor
int3
int3
cmp
hlt
loopne
rcl
fcmovnb
out
loope
fisttpl
loope
sub
lret
xbegin
cmpl
aam
mov
neg
call
loopne
orl
jmp
lock
test
enter
incb
xchg
xchg
aad
in
lret
sti
lret
loop
rolb
fstp
jecxz
lret
orl
jmp
aam
jmp
int
std
out
shl
aad
fcomp
xchg
xchg
ss
xor
call
clc
stc
lret
in
shl
aad
sbb
xchg
enter
ljmp
cli
repz
cmp
cmp
stc
out
xchg
jmp
lret
aam
test
int3
xor
xlat
in
neg
int
in
fcmovb
fcomip
jmp
jmp
test
incl
shll
aas
out
and
fstp
loope
std
call
imul
in
xchg
aam
rcr
in
xor
int3
out
in
cld
out
ret
incl
aam
mov
out
fldl
in
fdivr
xlat
ljmp
shl
fsubrp
std
loope
cmc
int3
xchg
lds
jmp
ljmp
out
stc
leave
stc
testb
loopne
xchg
jecxz
xchg
loopne
int
enter
stc
in
cmp
aad
loope
fdivr
into
cld
mov
xchg
int3
cs
ds
into
cli
icebp
in
cmp
test
loop
repnz
icebp
icebp
xor
in
jmp
out
cmp
rolb
repnz
cmc
mov
or
xchg
ror
cmp
in
clc
hlt
sar
stc
sar
in
cld
fst
shl
sbb
fcoml
sti
rcr
fdiv
int3
in
aam
lds
lret
mov
into
shl
rcl
xor
ror
fucomip
lock
cmp
orb
in
fcomi
lret
rorl
lret
lock
out
std
sti
stc
in
in
fsubr
iret
popl
xchg
lock
cmp
ljmp
int
mul
repz
mov
jmp
ljmp
into
ljmp
cmp
idiv
adc
test
adc
int3
clc
sub
addl
xor
lock
fucomip
fsub
cli
cmp
std
add
sti
xchg
xorb
ret
in
int3
ss
int
rolb
sar
fdivr
xchg
or
rcr
loope
aam
call
stc
rcl
xlat
sti
fcmovbe
clc
cld
xlat
sti
stc
or
out
xlat
cmp
ror
enter
jecxz
aas
addl
clc
int3
mov
xchg
mov
in
rcl
cmp
repnz
clc
jmp
out
vshufps
mov
rolb
out
fldpi
fincstp
loopne
loopne
cld
test
mov
fisttpl
addb
out
aas
repnz
fistpll
sbb
cli
addl
repnz
xor
out
hlt
fdiv
out
repz
repnz
cmp
loop
test
repz
mov
iret
orl
fcomi
loope
cmp
test
aad
jmp
loopne
mov
xchg
repnz
xchg
aas
shl
leave
out
cmp
out
jmp
fdivr
repz
cld
aas
imul
sar
jecxz
mov
jmp
mov
loop
shlb
clc
xor
xor
call
repnz
fdivrp
idiv
testb
jecxz
xchg
ret
ljmp
repz
neg
les
stc
or
or
mov
rcr
fcmovnu
mov
push
lcall
add
lret
call
int
loop
cmp
cmp
loopne
icebp
cmp
cmp
icebp
rol
loope
clc
out
mov
and
out
repnz
xlat
shl
hlt
into
ror
ret
clc
movl
out
loop
xor
fxch
out
fsin
aad
xorl
cmp
call
rcl
sti
xchg
not
loopne
in
in
cmp
iret
xlat
lock
loope
rol
loope
loop
clc
cld
lret
into
loopne
xchg
hlt
mov
xor
sti
cmp
xor
ds
aad
cmpl
xor
sub
xchg
ss
repz
cmp
cld
aad
or
call
xor
iret
lds
ljmp
cmp
test
cli
rolb
jmp
jmp
xchg
into
out
fdivl
shr
ss
adc
ret
sti
ret
mov
stc
jmp
mov
fimuls
in
shll
fsubr
adc
rol
enter
adc
cli
in
and
jecxz
xor
fcomi
stc
out
std
hlt
fsubr
rcl
jecxz
fucomi
std
ljmp
iret
loope
jmp
xchg
jmp
repnz
cli
cmp
xlat
repz
icebp
fcomi
out
enter
lock
loop
sti
mov
in
xor
cmp
fstp
ret
incl
test
lret
into
loope
orl
lock
cmp
repnz
test
mov
in
test
std
stc
mov
rorl
xor
cmp
idivb
clc
out
fcmovnu
rcr
repz
mov
fabs
fcomp
test
out
ffreep
or
in
sti
fcomp
shl
clc
hlt
out
rcl
and
clc
mov
mov
in
ljmp
xor
neg
enter
sarl
cmp
xchg
xchg
ret
mov
in
jecxz
xchg
xchg
int3
int3
idivb
cld
repz
cld
iret
out
in
fsubr
aam
loop
movl
loopne
jmp
in
iret
aam
in
adc
in
loop
mov
mov
jmp
xor
aam
loop
jmp
cld
aad
out
xchg
fcmovnbe
ffree
out
xchg
icebp
into
mov
fbstp
ret
aad
in
leave
fnstenv
aaa
cmp
rolb
test
fsubrp
aas
cli
nop
nop
fisttpl
ss
lds
out
shr
sarl
fdivrl
repz
div
xlat
std
mov
cmp
nop
xchg
lds
cmc
sar
repz
repz
aad
addl
into
mov
shl
lret
out
aaa
loope
cld
shl
ret
sar
call
cld
cld
out
xchg
out
loope
repz
cmp
enter
jecxz
fcmovne
in
aam
hlt
xchg
neg
xchg
mov
fstl
aaa
iret
int3
ss
jmp
icebp
stc
aas
iret
aad
fsub
xchg
nop
mov
int3
cmc
fcmovb
cmp
lret
cmp
cmp
fdiv
icebp
test
leave
and
cli
lea
in
ror
clc
cli
in
call
clc
sbb
loopne
lock
xchg
out
fcmovne
in
out
adcb
shl
dec
clc
iret
loope
sar
fadd
aad
in
add
cmp
xlat
xor
aaa
hlt
cmc
aam
ds
aam
xor
clc
test
stc
in
std
ljmp
shrb
int
jecxz
test
fnstsw
in
aaa
faddl
test
fsub
shl
xchg
mov
iret
loop
fcom
cmp
xor
enter
aad
fdiv
test
loopne
fxtract
loope
mov
shl
repz
hlt
cmp
leave
jmp
into
fsub
testl
in
xchg
out
add
leave
xor
icebp
hlt
cmc
jmp
stc
sar
aad
ret
xchg
into
ljmp
shlb
sti
out
cmp
loopne
fcmovu
ret
fcom
ljmp
out
xchg
call
fadd
cmp
repz
sarb
ffreep
cmp
jmp
loopne
mov
cli
xchg
loopne
mov
xor
xor
leave
rol
out
leave
jmp
cmp
aad
mov
xlat
int3
jmp
lret
mov
cmp
shr
leave
cmp
test
lock
aad
cli
repz
out
fldlg2
fisttps
dec
call
mov
aad
leave
aad
fcmovnu
sub
frstor
jle
add
lret
lock
int3
leave
idiv
in
fprem
cmp
sti
aas
leave
repz
test
repnz
lret
cmp
xor
fnop
in
adc
aas
repz
out
addl
and
in
loop
hlt
jmp
loop
icebp
rcl
hlt
xchg
fsubr
mov
enter
ljmp
fdivr
rol
lret
addl
mov
subl
ljmp
into
int
rcl
out
out
in
stc
xor
orl
divl
xlat
out
cmc
xor
int3
cmp
not
test
aas
out
out
fimull
hlt
mov
loopne
lret
in
repz
fldl2e
rcr
rcr
shl
repnz
fiadds
test
shl
in
shr
aad
enter
int
clc
loopne
xlat
loopne
test
enter
jmp
mov
mov
into
xchg
subb
in
lret
fidivrs
fcomip
fcmovnbe
rolb
in
clc
in
incb
ljmp
rcl
cli
loopne
sti
shl
jmp
fisttpll
lret
mov
stc
out
out
in
repnz
cld
faddl
fcom
stc
loopne
loop
in
int3
out
int3
repnz
cmp
ror
lret
aam
fcom
cmp
ret
cmp
ds
orb
int3
addl
aad
sarb
lock
and
jmp
mov
sar
fdivp
les
shll
aaa
sti
cmp
sti
rcr
cmp
aad
icebp
adc
mov
repnz
lret
lock
lret
and
sti
fcmovnb
out
out
or
aam
into
shl
ljmp
sar
loope
call
repz
xchg
movb
rcr
cmp
aam
rcr
xor
and
addb
xchg
xchg
std
cmc
ror
out
fcmovnb
xor
cmp
fdivrl
fdivrl
mov
cli
ret
mov
fiadds
shll
ljmp
aad
loop
stc
xlat
test
xchg
jecxz
loopne
test
loope
cmc
xlat
xor
cmp
cmp
sar
xlat
and
aad
adc
into
cli
test
das
hlt
xor
ror
xlat
test
cmpl
mov
aad
std
mov
faddl
into
xor
fstp
cmp
fucomip
fdivr
xchg
sti
clc
stc
fimull
in
loop
xor
cmpb
out
std
xchg
out
lock
mov
cli
xchg
fucomi
mov
out
shr
lret
jmp
jmp
repz
int3
aaa
cmp
out
xabort
fisttpl
lock
fdiv
shll
fcmovu
cmp
repz
test
cli
test
idiv
out
in
les
clc
fucompp
lret
xor
fsin
icebp
into
cmp
mov
enter
out
call
lds
fxam
repz
out
fst
xlat
in
roll
xchg
leave
out
xchg
hlt
out
int3
enter
out
xlat
out
loop
fadd
int
sbb
rcl
mov
in
nop
loopne
stc
int
jmp
fsubrp
idivb
std
neg
mov
call
fdiv
in
mov
loope
aam
cmc
leave
fld
cmp
cmp
fadd
repnz
rol
out
clc
xlat
in
out
mov
add
xor
fnstenv
call
ret
std
ret
lds
loop
out
cli
loope
mov
jecxz
iret
aam
std
cmp
clc
iret
sti
cmp
sti
test
repz
orb
icebp
ret
lea
xlat
call
in
adc
sti
ret
in
cld
ret
call
out
int
mov
out
lock
enter
hlt
fcmovbe
cmp
in
clc
shl
call
xchg
and
xor
leave
divl
out
cmpb
in
shl
test
fcmovne
mov
ljmp
in
aas
ljmp
aas
rcl
cli
and
enter
mov
call
sarl
repz
xor
shl
cmp
shr
cmp
test
xchg
rorb
cmc
int3
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fildl
or
movsl
add
lock
fadd
fsubr
loopne
out
xchg
leave
aad
mov
mov
nop
xchg
xlat
xor
lret
lret
int
iret
int3
xor
sar
mov
hlt
call
out
mov
icebp
in
lret
cmp
ds
out
icebp
cmc
ffree
rcl
rcr
cmp
test
in
test
rcll
lret
lret
leave
cli
in
fcomip
icebp
cmc
out
xlat
lock
jecxz
clc
jmp
repz
iret
shl
lret
fdivl
aam
loopne
loop
lock
push
cmp
mov
fsubrp
repnz
ror
repz
repnz
fidivl
aaa
test
aam
out
mov
clc
fiadds
rcr
in
mov
in
out
fcom
std
shr
fstp
rcl
aam
jmp
fsubrp
fmull
sarl
enter
out
add
hlt
aad
call
out
mov
out
sti
shll
fnstsw
divb
imul
out
cld
adc
call
int3
int3
out
and
divb
idiv
cmp
std
cli
out
out
rcl
out
les
loope
mov
ljmp
jecxz
loope
out
xlat
int3
repz
int
rcl
cmp
cmp
test
mov
fimuls
out
out
shr
loope
into
icebp
in
sar
xor
cmp
fcomi
leave
loope
addb
std
repz
call
out
fdiv
loope
f2xm1
lock
iret
vpsraw
out
fdiv
sarb
xor
int
repnz
rol
leave
cld
int3
fildl
in
ret
lock
ss
cmp
out
cmp
fnstcw
loopne
loop
cli
test
test
jmp
jmp
xor
int3
in
cmp
repz
out
decl
repz
out
into
into
out
hlt
cmp
shl
ret
aad
fld
in
mov
ret
std
stc
faddl
lock
leave
in
xor
cmp
lret
repz
rol
out
mov
fcmovnu
ficoms
std
jmp
ret
rcr
ret
leave
aad
hlt
ds
clc
out
clc
rcr
cli
xchg
fmulp
out
in
in
out
call
in
lret
iret
stc
ds
fidivrs
fsub
and
lret
out
jmp
mov
ror
std
in
lret
jecxz
aad
cmp
shlb
cmp
mov
ret
fadd
in
push
aad
out
fchs
ds
cmc
stc
adc
cld
leave
and
fadd
in
or
ret
int
in
sar
cmp
faddl
cmp
sti
xlat
fucom
dec
fst
loopne
loopne
fnop
cld
fucomp
int
into
hlt
cli
cmp
aad
sti
mov
repnz
mov
aad
fdivs
cmp
shl
aaa
stc
cld
fucom
shl
push
sar
in
int3
lret
dec
jmp
out
xchg
fidivs
in
clc
xor
cmp
sar
in
in
ds
sar
leave
jecxz
lret
out
aam
mov
cmp
out
xor
out
int3
in
cmpl
ret
in
jmp
fsubrp
lret
int3
sar
xor
fadd
xlat
aad
shl
fcmovu
stc
jmp
in
xchg
out
icebp
xor
out
aas
fnstsw
addl
out
leave
out
in
ror
nop
jmp
xor
idivb
ljmp
add
test
fdivrp
lret
lock
jecxz
jmp
out
xor
out
call
inc
fdivr
std
leave
test
int3
lret
xchg
nop
xchg
loop
cs
aaa
loop
clc
sbb
hlt
jmp
stc
mov
xchg
loope
test
xor
test
hlt
hlt
enter
cmp
shl
ret
enter
iret
addl
aaa
sti
xor
aaa
cmpl
add
addb
jmp
out
out
iret
ror
das
rcr
out
adc
cmc
cmp
aad
xchg
out
call
xlat
enter
shl
ret
xlat
out
out
lret
or
stc
lock
lock
ljmp
out
aaa
loopne
fdivr
shl
sar
enter
in
test
or
testb
leave
aaa
rcr
cld
aam
jecxz
test
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
repz
dec
sub
jle
movsl
add
cmp
into
rol
in
fsubrp
ljmp
repnz
int
in
leave
jecxz
stc
ffree
leave
ljmp
mov
aam
xchg
out
in
cmc
out
lret
repnz
hlt
ds
idivb
int
fdivr
stc
ret
ret
clc
ret
clc
in
out
sub
fxch
shr
out
cmp
in
aam
repz
add
fcmovb
testl
ror
sub
iret
lret
jmp
xor
roll
loope
jmp
lock
jecxz
rcl
repnz
stc
fdivrs
sbb
iret
call
loopne
fmulp
fcmovne
test
call
fdivrs
into
icebp
stc
cmpl
in
lret
in
fdivrp
in
repz
subl
cmp
pushl
cmc
idiv
xor
jmp
out
iret
fcmove
into
out
out
repz
repnz
hlt
rcl
lret
fucomip
loop
loope
jmp
enter
mov
in
not
xor
lock
bnd
clc
std
and
lock
xlat
int
lock
in
jmp
fucomi
shr
rcl
and
movl
iret
cmp
cmp
lock
lock
cld
fcmovu
testl
shl
lret
lock
icebp
xor
aas
jecxz
cmpl
testl
in
fcmovne
lret
aad
int
ret
enter
in
fildl
nop
icebp
aas
xor
xor
cmp
cmc
cmp
std
out
repnz
or
test
fcmovne
in
lret
xchg
xchg
loope
les
into
icebp
cmp
int3
jmp
cld
fcom
cmp
jecxz
jmp
out
fcmovnu
repnz
repz
shlb
imul
ds
neg
icebp
cli
test
adc
test
filds
lret
lret
enter
idiv
cld
cmp
shl
ret
roll
call
repnz
jmp
shl
in
cmc
std
loop
into
fst
hlt
stc
fadd
in
out
icebp
repz
in
xchg
aaa
jecxz
aaa
lds
leave
cld
hlt
enter
test
rcr
fucom
leave
fistpll
mov
int3
mov
out
jmp
out
jecxz
xor
out
icebp
hlt
ss
xchg
jecxz
loop
shr
int
lock
out
hlt
cmp
cmp
fdivr
into
aad
in
fildl
sbb
fcmovne
nop
mov
cmc
out
iret
iret
cmp
cmp
ds
icebp
and
fst
sbb
lret
xchg
shr
into
ret
out
iret
shll
fldl
ret
cmc
idiv
hlt
in
loope
stc
xchg
out
ror
div
xor
fmul
sarb
flds
testl
in
addb
hlt
hlt
cmp
aaa
jmp
icebp
int3
loopne
ret
fildl
fildl
adcb
call
sub
loope
sti
cli
shl
frndint
out
in
ret
lret
jmp
ret
cmp
rcl
sar
sti
xchg
ret
xlat
cmp
jecxz
xchg
xchg
mov
sub
idiv
fucomi
in
out
idivl
cmc
cmp
cmpl
out
out
in
mov
in
out
icebp
int3
div
cmp
iret
fmul
shr
in
lret
cmp
jecxz
les
in
mov
ljmp
xor
stc
lret
lret
fnstcw
int
aad
enter
ret
fiaddl
lock
jmp
std
stc
aad
dec
stc
fcmovbe
cmc
shl
loopne
cli
mov
mov
into
fists
into
lret
dec
xlat
cmc
shl
div
add
loopne
enter
cld
icebp
in
ljmp
xor
cmp
aas
cli
hlt
sar
in
clc
in
xchg
cli
loop
out
jmp
lret
repnz
cmp
ds
jecxz
fdivp
fadd
imul
test
enter
mov
xorb
in
repz
ss
cmp
fcomi
lret
addb
cld
fmul
test
decb
aad
clc
imul
rcl
stc
cli
cmp
test
decb
in
ljmp
ret
aam
xor
shr
fdivr
rolb
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
int
add
jle
add
rcl
cld
lock
repz
into
enter
fidivrs
mul
fnstcw
iret
xchg
fsubr
aam
cmp
sti
xchg
vpminsw
stc
jmp
fdivp
sti
fnstcw
sti
in
mov
sti
popl
xchg
div
cmc
iret
stc
cmp
repz
stc
ret
loopne
std
cli
test
iret
shrb
leave
icebp
in
jmp
neg
cmp
lock
push
lock
fdivp
addb
int3
adc
out
cmc
leave
mul
xor
ljmp
out
mov
fiadds
mov
hlt
in
rcl
cli
rcl
repnz
shl
std
out
fcmovbe
shl
repz
mov
decl
fnstenv
shl
in
icebp
clc
and
clc
mul
jecxz
fisttpll
xchg
fdivp
aam
lock
ror
cmc
aad
loope
int
in
roll
mov
sub
in
cli
test
mov
hlt
cs
cmp
adc
jecxz
cli
aad
sbb
nop
ljmp
div
fxch
int
shl
into
shl
cmp
cld
xor
addb
loope
mov
ss
int3
repnz
call
hlt
clc
ds
out
fninit
sbb
fdivr
iret
mov
repnz
stc
xor
ss
sti
lock
sbb
fisttps
fsubp
in
hlt
xor
aam
cmp
test
fstp
xorl
hlt
repz
shl
mov
out
hlt
loop
leave
ljmp
int
out
fdivr
std
test
mov
lock
xchg
int
repz
shr
leave
enter
lock
sti
sti
fsub
ljmp
std
test
jecxz
fcmovnu
lock
aas
shl
icebp
shl
aam
mov
fsubrp
test
nop
roll
jecxz
cmp
cmp
cmp
jmp
loop
fidivrs
cmp
std
cmc
test
lock
and
aaa
stc
int
clc
cmp
int
ret
aam
jecxz
xchg
test
sti
fucompp
mov
in
std
xlat
int3
icebp
std
aam
iret
loopne
jecxz
fsubp
cmpb
test
mov
call
in
fucom
ljmp
cli
shl
sti
xlat
jecxz,pt
enter
xchg
lret
xchg
aam
jecxz
aam
in
cli
cmp
shl
out
repnz
addl
mov
int
int
int3
repnz
icebp
sti
xor
fnstsw
xlat
clc
cmc
test
cmc
cld
call
jmp
xchg
imul
in
aaa
xor
iret
loope
call
jmp
lock
ret
fildl
fiadds
in
xor
in
aam
fcmovne
clc
in
ret
aam
in
xchg
lock
rolb
out
cli
into
lret
sti
cmc
adc
cmc
out
sti
out
jmp
loopne
clc
fstl
jmp
cmc
clc
in
int3
in
ds
ror
cmp
cmp
out
cli
mov
ret
xchg
in
call
loopne
xor
int3
cmp
xorb
rcl
not
in
ret
rcr
add
jmp
dec
int
rcr
ret
in
xor
rcl
xabort
addb
out
ljmp
ret
imul
jmp
jmp
ret
rol
inc
out
lea
or
call
clc
fdivrl
ds
repnz
ds
jecxz
out
mov
filds
test
ljmp
xchg
ret
fmuls
icebp
in
xchg
in
test
idiv
ss
cli
out
ss
cmp
in
fldl
loopne
int
cmp
xor
ss
shl
cmp
les
loop
in
mov
or
not
xor
cmp
jmp
std
sti
ret
fdivrp
fcom
lret
int3
inc
loop
xchg
xor
in
fdiv
ss
repnz
cmp
iret
cmp
jecxz
vpminsw
int3
in
in
fxam
loop
mov
not
iret
ss
call
shl
ds
clc
fadd
jmp
out
jmp
fninit
repnz
sbb
test
repnz
int3
out
xlat
loope
fdiv
repnz
xlat
int3
test
in
mov
int
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
sbbl
jle
std
mov
ror
fdivr
xlat
enter
add
enter
jmp
std
cli
rcl
repz
ss
out
cs
cmp
iret
rol
cld
shl
cld
test
loopne
cmc
mul
jmp
in
mov
enter
cmp
cmp
inc
stc
mov
mov
out
mov
jmp
sub
int3
fidivrl
iret
icebp
cli
lret
rcl
mov
in
stc
into
lds
mov
aam
bnd
xor
not
out
loope
xchg
stc
xchg
cld
int
mov
xchg
repz
xor
fcmovnu
cmc
cmp
cmp
int
icebp
stc
rcl
xlat
xchg
out
xchg
mov
loope
cmp
clc
xor
lock
fninit
clc
fcomp
sti
in
cmp
clc
fcomip
mov
xchg
fsubp
ljmp
ss
adc
in
fcomi
lock
stc
int
enter
ljmp
aad
cmp
fcomp
sbb
ret
out
sti
clc
mov
fmull
out
mov
fadd
cmc
int3
std
cmp
jmp
cmp
std
stc
rcr
fildl
fucomi
into
int
out
cmc
fdiv
aad
xor
call
rcr
rol
or
int3
in
mov
in
fmulp
jmp
neg
out
imul
idivl
cld
repz
rcr
les
mov
nop
std
in
xchg
aad
ret
enter
sti
lret
fdivr
clc
and
fucom
ds
stc
imul
std
shl
orb
cmp
leave
xlat
fdecstp
hlt
int
lock
mov
test
cmp
mov
loopne
movb
call
jmp
test
xchg
std
cli
in
out
mov
ljmp
stc
into
fistpll
iret
in
ror
in
jecxz
jecxz
aad
sti
lret
fld
mov
in
ss
lret
cmc
out
xlat
stc
jmp
in
test
fdiv
loopne
in
out
iret
mov
shlb
cmp
cld
int
fcmovne
or
inc
in
out
mov
lock
xor
rol
fcomp
sar
aaa
ror
adc
test
cmc
hlt
ret
cli
int3
into
orb
sub
idiv
in
xlat
jmp
cmpb
clc
loop
call
into
xor
repnz
bnd
fcomip
aam
sarl
fcomip
fucomp
sti
stc
jmp
int
out
leave
rcl
rcl
div
in
aad
cmp
in
cli
cmp
cli
clc
shl
aam
test
loopne
mov
icebp
jmp
jmp
icebp
das
ror
aaa
leave
loop
icebp
addl
nop
jecxz
mov
mov
rol
jecxz
out
out
cmp
ds
stc
and
std
orb
sar
out
jecxz
aam
divb
rcr
int
rcl
in
sbb
std
ds
iret
into
mov
fdivp
loope
rol
enter
hlt
xor
aad
in
fcmovnu
ret
test
add
xlat
jecxz
mov
icebp
sub
call
sti
aas
rolb
stc
xlat
fdiv
lret
fcmovnu
lret
into
in
in
out
xor
xor
aaa
idivb
dec
lock
cmp
out
jecxz
mov
out
mov
int
sti
call
stc
lret
ret
mov
clc
mov
cli
mov
mov
mov
int
cmc
int3
jmp
clc
loopne
rol
cmp
fildl
jmp
fisttpl
jmp
sub
int3
in
lock
fcmovnb
cmp
rol
shl
jmp
jecxz
out
std
fisttps
int
int
out
shll
loopne
clc
les
into
repz
int
icebp
ret
xor
xlat
in
fucom
cli
leave
xchg
testl
xor
clc
repz
lret
call
aaa
fucom
repnz
mov
std
xchg
loop
test
into
shl
int
cmp
bnd
fadds
loopne
mov
cmc
xchg
mov
enter
cmp
sar
call
jecxz,pt
call
aad
leave
enter
std
mov
cmp
fcomip
cmp
ffree
in
cmc
mov
jmp
int3
int
mov
aaa
add
jmp
fstp
je
xchg
or
and
jle
movsl
add
loope
enter
out
into
in
int
aad
inc
lock
loop
aad
fiaddl
sbb
das
out
rcl
iret
fptan
fmulp
repnz
in
inc
cld
shr
loopne
jmp
cmc
int
repz
icebp
xlat
jmp
test
cmp
rol
leave
mov
xchg
adcl
xor
jmp
sar
add
in
orl
xchg
cs
cmp
cmc
jecxz
into
addl
sti
nop
mov
or
xchg
enter
aam
cmc
iret
cmp
fcmovnb
cmp
clc
iret
loope
ret
in
in
jmp
lret
mov
aad
out
shr
xor
cmp
ss
xlat
aas
aas
sar
loop
in
iret
cmp
addb
repnz
shr
cli
rcr
cmp
clc
ljmp
mov
into
in
xor
repz
fsub
std
fdivrs
sarb
std
fdivp
cmc
loopne
xlat
enter
loope
in
test
sar
fldz
cmp
aaa
roll
faddp
ret
test
call
xchg
xchg
out
xor
lret
cmp
std
cmp
ret
or
mov
lock
jecxz
sub
clc
cmc
sar
cmp
loope
cmc
incb
incb
jmp
xchg
in
shl
ss
clc
aam
cmp
aam
rol
lret
leave
xchg
out
testb
clc
in
ss
stc
loop
fmull
mov
shl
xor
cmp
int3
clc
stc
iret
into
fucom
shl
fiadds
lret
repz
xor
rcl
xor
xor
loop
shl
std
sub
enter
loopne
orl
int
cmp
test
ret
ret
fmul
enter
cld
sti
mov
lds
vpsrlq
cmp
sar
std
out
fcomi
shl
hlt
out
xchg
call
in
aaa
cs
leave
mov
ljmp
cmc
in
addb
into
test
cmc
loop
enter
testb
out
loopne
jmp
xlat
addb
mov
cmc
xlat
repnz
fdiv
std
enter
rol
icebp
ror
jmp
fcmovb
out
test
xchg
jmp
jmp
repnz
int
xlat
lock
lock
hlt
in
fcomp
jmp
mov
mov
xor
in
cld
in
fcom
pushl
cmp
in
incl
int3
fists
xchg
shr
lock
cmp
cli
out
loope
fstp
repz
test
hlt
fcmovnbe
leave
std
in
mov
nop
test
xor
aam
in
out
iret
hlt
ds
out
shl
xlat
or
test
mov
nop
hlt
loope
aam
enter
call
rcr
adc
idiv
repnz
fcmovu
lret
cld
ljmp
icebp
fmulp
aaa
and
addb
sti
test
call
call
aaa
cmp
shlb
std
mul
clc
cmp
xlat
in
lret
jmp
mov
shll
jmp
clc
clc
int3
out
aad
cmp
shl
mov
fsubr
test
jecxz
lret
fidivs
loopne
clc
int
cli
xor
cmp
cmp
shl
flds
incl
xchg
iret
rol
cmp
repz
lock
iret
cmp
sarb
sar
shl
mov
frstpm(287
mov
orb
ljmp
hlt
adc
sub
adc
into
int
in
mov
rol
rol
cmp
repz
filds
xchg
clc
fnstsw
cmp
fucomi
loopne
repnz
in
jecxz
aaa
cmp
out
loopne
cmp
ds
loope
out
int3
enter
int
xchg
xor
divl
out
out
cld
incb
fcomp
cli
idivl
call
rorb
in
out
repz
jecxz
cmp
fld
out
loop
fcomp
fildl
xor
cmp
call
icebp
cmp
hlt
clc
repz
loope
in
sub
xchg
jmp
loop
leave
aam
shll
enter
cld
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
inc
inc
ret
jle
movsl
add
std
not
hlt
sbb
rcr
fcmovnu
loopne
fsubr
adcl
iret
ljmp
aad
loop
test
cmc
aam
filds
ljmp
fnstenv
cmp
cli
fcmovnbe
fsub
aam
fdivrp
ror
test
ljmp
repnz
xor
lret
ror
xlat
ror
jecxz
into
fiaddl
add
and
xor
xor
cmp
int
in
xor
icebp
out
fimuls
out
mov
in
xchg
aam
loopne
out
cld
cmp
ss
xor
test
icebp
jecxz
in
in
aad
mov
mov
call
icebp
fst
hlt
xor
shlb
hlt
ljmp
stc
sti
out
ljmp
imul
clc
repnz
jmp
out
test
ret
test
fsubrp
lret
xchg
test
lock
aad
in
fsubp
aas
fistpll
shl
fucomp
mov
sub
jmp
mov
in
hlt
neg
repnz
fdivs
icebp
cld
incl
xchg
std
lret
int
loop
jmp
jmp
in
fdivrs
in
fadds
xlat
test
neg
lret
adcl
repz
aaa
into
in
ljmp
fcmovnb
ret
repnz
xchg
lock
repz
mov
enter
xor
stc
hlt
aad
in
repz
fstp
in
xlat
mov
in
fucomip
call
enter
iret
shr
jmp
into
fnstsw
shl
test
loop
call
filds
call
hlt
xor
xlat
aam
loop
fadd
cmp
shl
int
mov
addb
shl
cmp
fcmovnu
cmp
flds
mov
clc
fadds
adc
ret
out
out
int
jmp
cmp
test
cmc
in
ljmp
jmp
std
out
in
leave
mul
xor
int3
into
call
div
add
sti
lock
xchg
repnz
rcl
out
hlt
cli
out
xor
iret
cmp
ret
out
in
xchg
cld
in
in
out
in
hlt
out
shl
int
cmc
cld
ss
loop
xchg
sub
in
nop
icebp
cli
nop
out
and
out
icebp
aam
xlat
sti
leave
clc
ror
faddp
addb
loopne
iret
icebp
xchg
hlt
aaa
into
leave
in
into
cmp
cmp
in
repnz
out
in
xchg
jecxz
xchg
xchg
in
aam
jmp
jmp
int
cmp
sbb
test
movl
in
cmp
lock
aam
lock
shl
movb
mov
sub
lock
cld
into
fcmovnb
std
ret
mov
stc
cld
jmp
shr
repz
lret
ret
enter
cmp
aad
xlat
test
cmp
lret
xlat
lock
jmp
cs
shl
hlt
in
out
icebp
shl
incb
mov
int3
sti
icebp
loopne
xchg
loope
out
ljmp
rol
int
loope
xlat
cld
ror
mov
fisttpl
repnz
xlat
aad
cmp
loope
xchg
rolb
lret
loop
loopne
int3
loopne
xor
lret
ds
addb
in
jmp
loope
test
fiaddl
xchg
lret
xor
enter
repz
frndint
cmc
xlat
fadd
xlat
xlat
jmp
in
rorl
not
iret
leave
enter
ds
xlat
test
ds
in
shl
iret
in
into
in
shrl
in
xor
lret
sarl
adc
aam
fcomp
out
jmp
repnz
loope
xor
icebp
in
lock
int
aad
test
shl
repnz
in
mov
jmp
lret
rcl
aaa
int
fnstsw
ror
std
out
fdivr
loope
rcl
xchg
jecxz
mov
xchg
mov
in
shl
aad
aaa
cmp
aam
rcr
cmp
repnz
loope
leave
cld
in
iret
sub
fcom
cmp
repnz
sbb
mov
std
nop
xchg
mov
in
in
call
hlt
xor
xor
repnz
xorl
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
dec
push
outsb
out
enter
add
loopne
sar
loope
dec
loopne
in
mov
loope
int
out
xor
in
sti
aas
sti
ror
in
fcomi
fdivr
fdivp
aad
loop
mov
addb
in
sar
jmp
fstpt
testl
std
lock
fidivl
rcl
leave
imul
aad
lock
vcvttpd2dq
cmc
in
mov
mov
xchg
loope
call
cli
cmp
ret
xlat
in
cld
rol
loopne
aad
mov
xchg
int
aaa
cmp
idivl
ss
cmc
aad
xlat
ret
rcl
ror
clc
ljmp
rorl
into
xor
in
into
fcomip
repz
hlt
rolb
in
in
out
out
out
ror
sarl
out
cmc
stc
or
lock
in
les
hlt
sub
out
enter
in
ret
fnsetpm(287
fidivs
aaa
aad
cmp
hlt
ret
faddp
mul
xchg
test
xchg
iret
xchg
mov
fdivp
call
out
shll
fst
adc
lock
aas
hlt
lret
out
fsubp
call
ljmp
lret
fucomip
rcl
mov
sbb
loope
rcr
loop
das
out
call
sar
in
fcmovnbe
xlat
test
jmp
cmp
in
fmulp
loopne,pt
stc
flds
aad
test
out
addl
xor
clc
xor
iret
cmp
sbb
aad
clc
in
cmc
xlat
out
lock
rcr
xor
aad
stc
shl
fst
cli
into
out
leave
hlt
in
loopne
xchg
cld
jmp
loopne
mov
enter
xor
aaa
out
cmp
stc
idiv
les
int3
nop
out
call
hlt
xor
enter
repnz
int
iret
cld
jecxz
hlt
clc
in
fadds
test
xchg
aam
xchg
sub
fcmovbe
loop
shl
iret
ret
clc
std
leave
in
in
int3
loopne
hlt
ljmp
in
cmp
cmp
xor
fcomip
fnstsw
clc
stc
out
sti
stc
lret
iret
xor
in
xor
rcr
aas
jmp
xlat
xor
fdiv
fcomp
std
in
lret
fucomip
mov
repz
out
clc
into
cld
fucomi
jmp
aad
cmp
xchg
cli
filds
flds
lds
out
cmp
cmc
lock
loop
clc
ds
sti
aad
sti
rorl
mov
out
mov
xor
std
into
ds
cmp
ret
fiaddl
jecxz
xchg
test
repnz
cmp
cld
xor
ljmp
lock
movb
in
in
xor
in
in
iret
xor
repnz
xor
iret
jecxz
fstp
test
cli
fcmove
int3
std
mov
rcr
xchg
aam
shl
int
aad
into
fcmovnb
ret
loop
fdivp
sti
in
idiv
decl
in
xlat
int
shl
aad
sar
xlat
fdiv
shr
rcl
aam
cmp
lea
ffreep
in
call
rolb
sar
roll
call
xchg
lock
xor
rcr
cmp
ds
cmpl
jmp
filds
icebp
aad
ljmp
xor
lock
hlt
cld
out
in
fildl
loope
out
shr
aaa
out
icebp
xor
rol
lret
hlt
out
ljmp
jmp
jmp
in
out
aad
leave
cmp
add
ret
jecxz
sbb
xchg
xchg
loope
cmc
aad
xor
stc
aad
aad
dec
rcl
rol
std
cld
cmp
in
mov
into
in
out
aam
sub
cld
rcl
fmulp
out
fmul
in
fcmovne
xchg
mov
ret
leave
jecxz
xchg
ret
in
xlat
cli
in
fsubp
shl
into
out
std
shl
enter
mov
loopne
loop
repz
in
cmp
out
fcomip
ljmp
cmc
std
test
add
fxch
iret
in
int3
ljmp
clc
cmc
sarl
xchg
addb
fstp
mov
clc
sar
xor
xlat
in
fcmovu
aam
shl
rorl
mov
aam
mov
and
jle
add
loopne
in
in
xor
in
in
xlat
ss
divb
fucomi
shr
aad
out
orl
jecxz
or
xchg
shl
repz
ljmp
int
cld
sti
inc
xor
jecxz
in
fmull
cmp
out
xor
fcom
in
push
int
out
xor
mov
test
shr
lret
nop
jecxz
call
aad
shr
jecxz
shr
out
call
repz
rcr
ret
push
enter
fabs
xchg
jecxz
shr
into
test
lock
clc
fsub
cld
out
loopne
incl
sti
mov
mov
test
clc
jmp
xor
lock
in
icebp
addl
xchg
decl
loope
xchg
clc
hlt
rcr
dec
jmp
incl
test
enter
xor
aam
xchg
loope
aad
hlt
cmp
xlat
ljmp
cmpb
leave
in
xlat
cld
out
sti
int
shl
hlt
out
cs
in
sar
hlt
cli
repz
iret
ret
ffree
flds
cli
mov
aam
out
lret
xor
in
cmpb
fcomi
in
hlt
int
mov
std
enter
loopne
in
xor
xor
dec
aad
test
sti
aas
cmp
mov
into
test
xor
loop
xor
in
ljmp
sarb
test
sub
xchg
nop
fimuls
in
out
aaa
cmp
cmp
in
loope
xlat
fdivp
xchg
loope
lret
ljmp
in
xor
idiv
lret
repnz
and
rol
rolb
or
icebp
cld
std
xchg
xchg
ror
iret
clc
in
jecxz
out
out
out
cmp
loopne
repnz
aas
xchg
jmp
mov
xor
enter
aam
iret
cli
icebp
repz
repnz
xchg
mov
cld
xchg
leave
lret
orl
cmc
in
jmp
roll
loopne
into
jecxz
mov
loope
hlt
in
jmp
aam
shl
fcomip
loop
aaa
in
cmp
fsub
mov
cld
stc
repnz
aam
aas
mov
fdivp
cmp
cld
fcomi
ret
div
into
jmp
mov
sbb
leave
shl
cmc
ffree
std
neg
lret
neg
cmp
cli
adc
call
mov
sbb
in
ret
in
cmc
xor
into
ret
loop
out
clc
ljmp
roll
into
out
shr
fdiv
hlt
ljmp
call
add
decb
nop
out
nop
mov
shr
xor
in
ffree
fstp
cmp
xlat
add
sti
in
or
ror
cmp
aaa
call
out
test
cld
call
neg
cli
mov
in
mov
test
out
iret
aam
mov
out
lret
cmp
ret
test
rorb
xchg
fsubrp
roll
into
xor
cmp
cmc
icebp
clc
cmp
repz
and
loop
fisttpl
adc
ljmp
out
repz
fxch
in
cmc
mov
shl
or
jmp
mul
sti
ror
leave
xor
ss
loope
mov
cld
mov
loop
fildl
ss
cmp
call
sar
xchg
aad
sti
sbb
loop
enter
repnz
leave
aad
repnz
out
aad
sub
fsubp
cmp
call
hlt
out
leave
std
int
xchg
iret
rcl
xor
leave
clc
out
fptan
ret
cld
fdivrl
loope
loopne
ljmp
icebp
clc
cld
idivl
ljmp
test
iret
aad
sar
xchg
in
mov
div
sti
shr
lock
cmp
xor
sti
into
mov
in
cmp
lock
repnz
cmp
div
roll
out
rcr
mov
xor
iret
aad
stc
jmp
iret
fdivr
aas
xchg
rolb
fdiv
in
in
fcomip
hlt
ror
mov
cld
fcomi
int
xchg
ret
or
fsubr
or
in
xchg
out
xor
hlt
lret
out
sar
loopne
cmp
rcl
test
stc
int3
sbb
cli
jmp
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
inc
or
xor
movsl
add
xchg
out
hlt
jecxz
cmc
cli
sti
cli
fdivrl
hlt
xor
jmp
fiaddl
iret
iret
fisttps
xlat
jmp
lret
repz
ljmp
mov
int3
cmc
jmp
fnstsw
iret
fdivp
aas
aas
iret
roll
cli
sti
loop
rcl
mov
in
std
xchg
xor
xor
xor
aam
out
shl
ds
repz
enter
mov
fcos
mov
leave
xchg
ss
iret
int3
iret
aaa
aam
aam
ds
aam
loope
in
cld
jecxz
out
in
icebp
xchg
repz
div
jmp
jmp
loop
aam
call
aas
aad
call
int
repz
loop
repz
aad
in
cli
jmp
not
out
ljmp
rcl
lret
xlat
ljmp
iret
mov
shl
iret
fdiv
loopne
int
shl
mul
out
out
clc
sbb
enter
faddp
sti
cmp
in
fdiv
aas
testb
fisttps
orl
lock
cmp
fdiv
ds
fcmovu
out
jecxz
lock
loop
fmull
repz
out
iret
ljmp
icebp
cmc
cmp
test
jmp
loopne
iret
enter
into
icebp
shl
cmc
in
rcl
test
testb
xchg
in
xor
jmp
cmpb
sarl
icebp
fcmovbe
cld
xlat
aad
stc
mov
int
loopne
icebp
into
aam
out
sub
in
cmc
into
div
fmul
loop
out
repz
leave
mov
mov
nop
rorb
xor
out
ds
hlt
fiadds
std
xlat
test
mov
fisttpl
ret
aaa
ret
sar
cmp
fucomi
cmc
cmp
repnz
fiadds
mov
nop
mov
lret
xchg
cmc
xlat
xor
int3
enter
cmp
sarb
repnz
xlat
mov
jecxz
call
call
shl
fxch
xlat
iret
ds
in
in
repnz
cmpl
out
repnz
addl
jmp
mov
jecxz
fst
iret
idiv
iret
aad
jecxz
lock
xchg
out
jmp
stc
fidivrs
fdivrp
stc
test
in
enter
xchg
fisttps
clc
xor
aas
cmp
fcmovu
out
jecxz
dec
in
mov
out
cli
lock
call
in
fidivrl
ss
aad
cmc
jecxz
loope
xchg
rcr
mov
cld
xchg
out
fcomip
loope
lret
cs
cmp
not
lock
shl
les
in
sti
in
mov
fnstcw
call
fdiv
aam
cmp
aas
cmc
repz
fdivrp
mov
flds
xchg
in
in
loop
xlat
lret
or
shl
std
addl
addl
aad
cld
fdiv
cld
cmc
in
loope
faddp
clc
mov
lret
ljmp
mov
in
cld
in
call
repz
shl
ljmp
repz
mov
jmp
enter
cmc
test
fcomip
cli
xchg
fcmovnb
jmp
out
loopne
test
adcb
clc
shl
in
hlt
cli
repz
repz
fxam
xchg
xchg
test
lret
ret
stc
int
cmp
neg
in
ret
roll
cli
jmp
out
leave
loop
out
into
aad
shlb
sti
lret
out
icebp
loop
cmp
lds
xchg
in
mov
sti
mov
fucom
lret
loopne
xchg
xor
xor
in
clc
hlt
into
stc
cmp
repz
hlt
loope
sbb
in
and
jmp
sub
aam
repz
cmp
sarb
ret
test
ffree
testb
call
mov
das
stc
fucomi
out
std
mov
neg
cmp
aam
ds
xchg
in
fsubp
ljmp
aaa
enter
out
aaa
cld
jmp
aas
rcl
aad
sbb
test
aas
and
int3
mov
hlt
hlt
out
div
hlt
ss
leave
cmp
stc
mov
loopne
xchg
in
in
cmc
shl
in
leave
xor
and
cmp
shl
cmc
and
call
xchg
aam
rcl
xor
add
add
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
fxch
iret
jmp
ds
fsub
testb
in
lock
rcl
cmp
ljmp
aas
sarl
hlt
stc
aad
aam
adc
loopne
out
int3
shl
int3
das
xor
aad
mov
fldl
loop
in
addl
loope
out
clc
jecxz
cld
xlat
mul
cld
out
repz
stc
in
call
mov
fsubrp
rcl
xlat
lock
aaa
hlt
ds
iret
int3
cld
testl
leave
fsubrp
sti
iret
xchg
xor
cmp
iret
rolb
repz
fildl
ret
hlt
lret
lret
roll
rcr
fildl
xchg
cld
fnsetpm(287
test
jecxz
cs
fxch
sarb
shl
cmp
sbb
testb
loope
test
orl
cmp
ffree
cmp
adc
test
call
icebp
leave
ljmp
cmp
mul
rol
loop
int
ret
cmp
adc
fcmove
fdivr
or
test
xlat
ss
out
cmp
idiv
repz
fiadds
out
leave
in
shl
ljmp
xlat
jmp
xor
shl
clc
cld
addb
loope
out
xor
test
xor
cmp
xor
clc
fcmovne
test
lret
ds
out
mov
loope
std
lret
cld
cmc
inc
shr
cmp
fdivrp
xor
loop
in
fcomp
in
fucomip
lret
orb
inc
cs
not
cmp
ds
in
and
aas
mov
aam
xchg
fcomp
out
lock
xchg
pushl
jmp
fnstcw
aas
cmp
mov
addl
leave
xchg
incb
int
stc
fyl2xp1
cld
sti
fcomp
repnz
aad
xor
sub
mov
repz
repnz
loop
cs
cmp
repnz
loop
cld
adc
out
xchg
in
out
xor
out
xor
repnz
loope
int3
cmpl
imul
imul
cld
nop
ljmp
in
aam
cmp
clc
ss
lock
cmpl
lret
les
into
xchg
xchg
xor
lret
std
aaa
fdivr
clc
shl
cmp
in
into
xlat
loope
jecxz
into
hlt
nop
shl
rcl
ss
ror
in
aad
ds
fld
jecxz
sbb
loopne
ljmp
xlat
shlb
out
cmc
shr
clc
ds
loopne
idiv
loop
out
fucom
jecxz
shl
ss
lock
cmp
into
test
cmp
std
call
clc
fcmovnu
xchg
lret
int
in
shlb
aad
cmp
aas
ret
cmp
sub
ljmp
imul
cmp
jmp
fucomp
out
fldl
loop
mov
cli
test
hlt
mov
lret
out
out
std
stc
cli
hlt
cmp
rcr
loope
out
rol
xchg
or
out
in
ret
cmp
cmp
aam
hlt
rcr
out
in
sti
xor
loopne
xchg
cld
sti
rorb
fmul
fidivl
out
jmp
fldl
lret
xlat
loop
fiaddl
aaa
xor
cmp
ljmp
rcl
hlt
xlat
testl
orl
iret
rol
sar
std
loope
out
cld
sarl
in
mov
lea
mov
mov
xor
iret
lret
icebp
cli
xlat
stc
xchg
xchg
cmp
ljmp
xor
in
int3
ss
call
shl
cld
test
ret
mov
fldl
mov
xor
lds
in
fpatan
lock
stc
cld
cmp
std
out
lds
sub
cld
jmp
in
cmp
aad
cmp
cmp
fldl2e
test
sbb
incl
jecxz
in
into
jmp
jecxz
out
ss
clc
in
xor
sti
sbb
mov
enter
out
enter
test
hlt
lret
shl
rol
cmp
lret
leave
loope
loop
sar
xchg
loop
call
test
adcl
xor
leave
out
icebp
lret
test
xor
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
cli
jge
or
jle
movsl
add
xlat
bnd
stc
loope
fmuls
dec
jmp
loope
shlb
clc
cmp
out
aam
int
clc
ljmp
jmp
aam
jmp
in
out
fsubp
into
filds
lret
in
leave
std
in
divl
cmp
in
stc
sub
mov
test
and
clc
xor
rcl
fmul
repnz
cmp
rol
ret
int3
mov
loope
fucom
idiv
lret
out
fnsave
in
out
repnz
cmc
fiaddl
loope
in
icebp
test
xchg
in
out
xor
out
push
aas
roll
sti
fdivrp
call
jecxz
out
jecxz
mul
das
in
repz
icebp
fmulp
cmp
rcr
mov
clc
out
leave
mov
in
jmp
stc
rcl
lret
iret
aaa
sbb
test
sbb
sti
jmp
mov
into
lds
cmp
repnz
icebp
ss
cld
push
cmc
mov
ljmp
shr
enter
fcmovu
lret
clc
cli
rcl
aam
idiv
fildl
repnz
ror
iret
cmc
cmc
iret
sti
lock
aas
lret
test
test
ljmp
cld
mov
repnz
lock
xor
xor
hlt
iret
clc
cmp
aam
loopne
shr
fcmovu
fdivr
jecxz
std
lret
in
loope
lock
jmp
fucomp
cmp
fldlg2
std
icebp
fadd
ret
test
xchg
mov
shrl
lock
xor
in
div
div
std
lret
int
std
xchg
decb
lret
xchg
ss
out
cmp
jmp
lret
ret
clc
jecxz
leave
repz
out
into
repz
repz
enter
lret
xor
cmp
clc
cmp
iret
loop
xchg
mov
hlt
leave
int
xor
hlt
cmp
into
cli
iret
in
ret
xorb
test
mov
cli
mov
jmp
repnz
repnz
shrl
cmp
aaa
xor
ss
shl
aas
mov
in
int3
sbb
and
out
test
int3
in
fcmovne
cmp
repnz
fst
test
xor
loopne
xchg
mov
call
xor
cmp
ror
std
aas
cld
xchg
call
stc
mov
ror
ss
leave
out
shr
out
cmp
out
out
xlat
repz
stc
sbb
nop
mov
out
stc
cli
jmp
in
addb
fildl
sti
jecxz
in
std
in
mov
lock
enter
clc
ljmp
out
aam
test
out
lret
xchg
repz
cmc
jmp
shr
clc
imul
aaa
xlat
int
iret
cld
ret
fadd
xchg
fildl
repz
aaa
clc
lret
ror
sti
leave
fcmovne
aas
cld
jecxz
aas
mul
mov
add
loope
leave
ljmp
aad
ss
rcr
aad
repnz
fcmovnb
in
imul
std
loope
in
loope
xor
ror
enter
aaa
jmp
cmp
std
cli
test
int
fists
leave
fstpt
into
int3
out
cmp
repnz
aam
fdivrp
hlt
fdivp
std
std
orl
xor
iret
in
leave
sar
cmp
stc
ret
rcl
les
ret
in
in
mov
xchg
in
jecxz
cmc
out
fsin
repnz
cmp
repnz
mov
lret
fst
clc
ljmp
cli
out
icebp
cmp
into
xlat
addb
in
fyl2xp1
call
ror
aam
divl
aam
ror
lret
test
repz
xchg
lret
test
xchg
repnz
out
out
cmp
cmp
int
fmulp
fucomip
add
fcmovnu
enter
lds
aam
lea
in
cmp
aaa
sarb
loop
in
aas
cmp
xchg
idiv
ret
mov
incl
sub
enter
div
out
lret
f2xm1
add
fldl
mov
fchs
rorl
jmp
repnz
cmp
stc
cmc
in
sti
loop
inc
cmc
cmp
fiadds
mov
test
call
test
fcmovu
cmpl
int
ficoms
jmp
cld
cmp
iret
into
aaa
icebp
cmp
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
outsl
leave
mov
jle
movsl
add
xlat
mov
cld
fmul
out
mov
mul
clc
int
icebp
in
hlt
xor
cmpb
in
sti
ret
xchg
loope
out
sti
mov
lret
loop
lock
fdivrp
xor
out
cmp
incl
in
lds
loope
rolb
sub
in
lret
in
test
jecxz
xchg
fucom
leave
mov
aaa
into
cmp
xor
fninit
xchg
repnz
call
xchg
in
sbb
int
int
cmp
repnz
jmp
out
into
cmp
mov
int3
loopne
stc
xor
xchg
aam
xor
int
add
sar
jecxz
fsubr
repz
sti
nop
loop
in
jecxz
int
in
xor
fdiv
in
aas
loopne
cmp
loopne
stc
lock
out
iret
repnz
ss
call
test
hlt
fucomip
test
enter
loope
int
shll
cmc
jmp
in
cmp
cld
rol
loope
fmuls
int
icebp
aam
xor
ss
cmp
fcmovu
clc
cli
into
xlat
iret
movb
call
orl
repnz
cmp
cld
sti
hlt
and
repnz
vpaddd
faddl
out
int
stc
imul
int
cmp
shl
loop
leave
hlt
fadds
hlt
mov
clc
in
repz
ljmp
loopne
ret
shl
fucomi
fcomip
mov
out
rcr
xchg
rol
cmp
lock
call
loop
fsubr
fsubp
call
lret
ljmp
clc
les
hlt
ret
ds
xchg
add
lret
fimull
lret
repz
aaa
in
out
cli
cmp
cmp
loop
hlt
ljmp
xchg
rorb
repnz
ret
fst
xor
int3
loopne
rolb
xchg
mov
stc
xchg
leave
hlt
out
icebp
loop
ret
out
sti
loope
std
fdivr
lock
leave
idiv
fscale
jmp
xchg
xchg
int3
rcr
call
repz
out
sbb
jecxz
jmp
faddp
cmp
out
xchg
shr
aad
fcmove
sar
in
enter
cmp
not
lret
out
test
ljmp
int
in
icebp
ds
ret
repnz
stc
call
jecxz
out
iret
test
lret
xor
stc
xor
sub
lret
iret
ljmp
fcom
call
iret
cld
sbb
in
rol
stc
repz
lret
jmp
aad
rcl
xor
jmp
sbb
clc
call
out
shr
test
fcmovnb
cmp
cmp
cmp
stc
cli
out
roll
out
int3
incl
stc
jecxz
out
aaa
lret
cmc
xlat
xor
xchg
xchg
cmp
loopne
xchg
enter
sti
div
enter
icebp
ret
int
cmp
fnstsw
in
xchg
icebp
hlt
fst
in
xor
repz
call
hlt
out
stc
aas
ret
fadd
cmc
clc
test
mov
in
lock
sarl
lret
hlt
testb
jecxz
fimull
vcvtpd2dq
jmp
jmp
cld
ss
idiv
test
sbb
mov
leave
test
fcmovne
shl
jmp
rol
rcl
ror
icebp
fadd
out
mov
addb
xchg
in
icebp
int3
clc
enter
jecxz
les
cmc
out
fstp
xchg
int3
mov
xor
loop
in
cmp
out
cmp
cmp
ret
jmp
out
fld1
xchg
leave
xchg
out
hlt
loop
aaa
into
fidivl
aam
cmp
clc
faddl
test
cli
cld
loope
test
aam
call
iret
hlt
fdivrp
iret
loope
xlat
fdiv
xlat
cld
test
or
lock
shl
int3
out
hlt
fdivrs
lock
cmp
ror
sti
fsub
xlat
rol
ret
lret
in
leave
out
jmp
loopne
nop
das
cmc
xor
repz
fcmove
push
xchg
mov
xlat
in
je
mov
mov
jmp
int3
enter
lret
int
stos
test
movsb
mov
jle
movsl
add
ret
xchg
loop
xlat
enter
xor
test
sbb
jmp
xchg
and
xlat
in
stc
aad
ss
aaa
std
cld
cmp
fsub
sub
jmp
std
iret
sub
lock
out
clc
cmp
ss
aam
out
out
cld
stc
cmp
lret
xchg
sti
cld
ret
loop
out
in
xlat
ljmp
rcl
cld
aad
xlat
roll
jecxz
fdivr
xchg
cmc
mov
cmp
icebp
out
jmp
clc
aam
fdivr
mul
in
mul
jmp
mov
ljmp
aaa
call
cmp
cld
aad
loopne
xchg
in
jecxz
iret
mov
icebp
rol
out
cmc
ljmp
test
xchg
out
out
int
sub
not
enter
ss
shl
cmp
cmp
rol
in
ds
jecxz
or
shl
cmc
mov
xor
int
ljmp
shl
aad
loopne
ret
cld
in
lret
in
shr
loope
int3
cmp
lret
ss
in
adc
cmp
mov
cld
vpaddw
bnd
cmp
fnsave
int
out
repz
sti
aas
cld
mul
mov
aas
in
int
std
repnz
jmp
iret
cmc
rcl
fmul
jecxz
mov
test
loopne
out
int
ret
in
repnz
call
sti
lock
cmp
neg
inc
std
cli
mov
mov
mov
mul
ret
xlat
lock
lret
cmp
lret
faddp
fcmovnbe
iret
inc
jecxz
int3
enter
jmp
out
ret
aaa
aam
in
xlat
icebp
mov
shr
sub
loopne
cli
jecxz
incl
xlat
rcl
leave
call
lret
xorb
fcmovnb
or
loopne
out
std
stc
lea
xor
lret
xlat
sarb
cmp
aam
jecxz
shl
jecxz
out
xchg
hlt
loop
out
out
cmc
xor
fdivrl
leave
into
cmp
in
xlat
jecxz
in
fsubr
loop
stc
fiaddl
xchg
loop
in
mov
into
cmp
in
std
out
clc
mov
call
mov
cmc
cmp
in
cmp
sti
repz
sar
out
sarb
cmp
jmp
or
ret
les
lret
jmp
out
aas
rcl
hlt
jecxz
jmp
mov
out
xbegin
ds
rcr
iret
fcomi
cli
ffree
std
mov
call
leave
in
or
lret
iret
aad
hlt
std
shr
cmp
fadds
ljmp
mov
fisttpl
mov
cmp
fnstcw
aas
sar
std
ret
clc
call
xchg
int3
cmc
hlt
repz
fstpt
fsubr
idivl
test
ret
cmp
fiaddl
loopne
lret
orl
out
int3
stc
repnz
hlt
aad
int3
clc
ret
ret
ffree
movl
adcl
rcl
xor
out
sti
icebp
jmp
sarl
test
cmc
int3
int
sub
aam
jmp
out
xor
ds
fisttpl
fmulp
in
dec
mov
in
xor
int3
repz
dec
lret
cmp
rcr
cmp
repz
cld
out
fadds
fistpll
xor
lret
clc
shlb
icebp
rcr
rcl
fiadds
fdivp
call
hlt
loop
into
xlat
jmp
enter
fdivr
xlat
cmp
sar
orl
dec
mov
ror
jecxz
jmp
fsubr
fsubr
lret
icebp
iret
std
adc
mov
iret
int
out
shr
lock
rcr
int3
ljmp
sti
jecxz
ds
sbb
xlat
out
jecxz
hlt
repnz
ljmp
cmp
repz
shl
repnz
sti
frstpm(287
not
int
mov
out
xchg
in
mov
aad
ss
icebp
repz
stc
fdiv
aam
out
out
jmp
mov
in
call
shl
aaa
xor
iret
aad
shr
test
fmull
fnstsw
xabort
out
jmp
lock
stc
repz
jmp
fstp
roll
test
jecxz
call
leave
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
enter
cli
xor
fsubr
xlat
aas
xlat
faddl
faddl
ljmp
cmc
xor
sti
call
ljmp
test
push
in
mov
xchg
loop
loope
fdivs
in
out
ror
into
cmp
fmul
loope
test
mov
mov
in
out
lock
ror
fcmove
aad
call
ret
out
hlt
repz
std
out
lret
xor
lock
loop
frstpm(287
in
les
call
ljmp
loopne
jmp
lock
repnz
int
jecxz
cmp
ret
cmc
fprem1
clc
cli
jecxz
loop
jecxz
out
out
das
fdivrp
not
fiaddl
cmp
rcl
stc
and
mov
out
fst
repnz
shll
cld
fcmovnu
cmp
fcomip
loop
ret
aad
ret
fsubrp
test
icebp
nop
enter
int
clc
ljmp
lock
fdivrl
hlt
fsubp
faddl
call
lock
icebp
sub
jecxz
xor
fmul
rcl
loopne
fnsetpm(287
hlt
int3
in
lock
lret
int
jmp
clc
out
rcr
into
repz
out
aas
sar
out
jmp
aad
int3
ffree
out
jmp
test
lret
cmc
aam
cmp
in
cmp
jmp
xlat
xchg
adc
out
jmp
in
ret
cmp
ss
lock
sbb
cmp
mov
out
xchg
hlt
loope
xor
int3
ret
enter
cmp
loope
test
call
mov
in
out
iret
mov
test
shl
fidivrl
stc
out
shl
rolb
orl
out
call
leave
cmp
cmc
cmp
aaa
repz
enter
xlat
loopne
mov
rorl
shr
out
cs
out
cmp
fidivrl
not
repnz
stc
fucomip
lds
sbb
rorb
in
cmp
idiv
hlt
loope
cmp
in
xlat
sti
test
aad
fucomp
test
xchg
fistl
int
lock
in
ds
fmul
aas
ret
lock
rcr
out
hlt
cld
in
xor
jecxz
icebp
fidivl
leave
sub
hlt
sti
add
loope
loope
in
fsub
lret
xchg
repnz
lock
jecxz
aam
cmp
loope
aas
loopne
iret
lock
leave
imul
out
call
repnz
xor
cmp
shl
shr
leave
lret
fstp
into
stc
incb
fldl2e
in
lea
call
xor
int
roll
mov
in
testb
fcomip
aam
ss
out
hlt
cmp
loop
repnz
incl
out
lock
lret
in
sub
aaa
lret
ror
int
loopne
fdivr
sti
test
std
call
and
icebp
in
icebp
sub
shr
idiv
icebp
cmp
int
cld
shl
fucom
std
lret
ljmp
xchg
shl
shll
xor
in
loope
mov
aam
fisttps
enter
into
in
fsub
out
sti
fprem
int
loope
in
ror
jecxz
addl
iret
mov
xchg
xchg
int3
out
lock
xor
out
cli
lock
icebp
jecxz
aam
shl
std
ror
stc
test
jmp
out
fsubr
enter
aas
aad
sbb
push
leave
and
fucomp
int3
ret
std
loopne
mov
rcl
ljmp
int3
fndisi(8087
loope
sar
call
in
mov
in
into
in
imul
lock
int
shr
shr
fiadds
std
fcmove
mov
sbb
xchg
jmp
lret
fiaddl
idiv
mov
fadd
mov
jmp
jmp
nop
jmp
shl
xor
cmpb
repnz
out
aas
testl
shl
repz
cmp
fucomp
jecxz
cld
fstpt
add
loop
in
fcmovnu
iret
mov
xor
ret
xlat
cmp
int
aaa
fdivrs
testl
int
fiadds
sarb
clc
aad
cmp
ss
std
cli
test
roll
in
iret
jmp
enter
inc
in
inc
or
movb
mov
jmp
mov
fst
fxch
jg
lods
loop
cli
and
cmpsb
in
jle
movsl
add
std
shl
aas
loope
icebp
test
lock
into
into
fst
repz
icebp
in
out
enter
out
out
incl
loope
ret
ljmp
mov
mov
jmp
call
ds
clc
in
cli
std
std
sar
jecxz
fiadds
icebp
incb
cli
ljmp
int3
cmp
xlat
icebp
hlt
sar
test
xlat
ljmp
loope
out
ljmp
rcr
fdivrs
out
fcmovu
fsub
out
xchg
jmp
mov
loop
aaa
int3
sar
in
cmp
lds
cmp
mov
xchg
aam
xor
enter
std
fnstsw
in
loop
xlat
cmc
in
aad
mov
in
jecxz
cmc
aam
out
aad
cmp
aas
out
lret
fucom
cmp
push
and
icebp
in
cmp
fcom
xor
shl
testb
ljmp
loop
hlt
clc
clc
call
push
iret
xchg
incl
xchg
mov
test
test
in
int
in
test
fsub
stc
mov
mov
test
xor
cmc
int3
fadd
aas
mov
sti
xchg
xchg
lock
lea
jmp
fnstsw
int3
sti
cmp
lret
aad
aad
sarl
sti
cmc
adc
test
out
or
int
jmp
fidivrl
fcmovnb
jmp
cld
rol
cld
fucomip
testb
shl
xchg
mov
ss
aaa
ljmp
cmp
ffreep
cld
loope
xor
int3
lret
filds
ss
call
aam
into
cmp
repz
les
rcl
std
test
xlat
std
fsts
xor
stc
fld
sar
not
cli
cmp
lds
and
cli
in
out
movb
cmp
cmp
fcomip
test
rcr
and
int3
aas
into
sti
icebp
shr
lds
jmp
out
repnz
in
call
testb
mov
nop
iret
into
loopne
call
cmp
ljmp
fsubr
stc
sarl
xchg
nop
nop
mov
sub
out
xlat
out
das
sti
call
cmp
in
jmp
in
std
loopne
lret
lock
xor
shl
repz
out
out
sar
rcl
xlat
mov
lret
in
jecxz
xor
lock
shr
jmp
aas
jmp
xchg
clc
neg
testl
xchg
in
aam
shlb
jmp
fnstcw
fldz
out
xor
sub
fcmove
into
test
in
shlb
enter
lock
fincstp
cmc
lret
sti
inc
in
xchg
out
ljmp
jmp
das
shll
cmp
xor
fistpll
fidivs
jmp
out
out
mov
neg
repnz
int
hlt
call
into
sar
rcr
cmc
ffreep
idiv
sub
flds
in
xor
idiv
fincstp
ror
fst
fcomp
out
aad
sti
std
ljmp
out
out
dec
out
cmp
into
neg
iret
rcl
fiadds
in
aam
loope
cmp
test
lock
repz
xlat
cmp
lret
into
ror
fcmovnu
test
orl
div
into
jmp
cld
hlt
jmp
fsubp
in
rcr
jmp
jecxz
in
jecxz
rorb
aaa
icebp
aad
lret
shr
out
aad
icebp
cmc
test
out
add
cmp
aaa
fcmove
fdiv
leave
repz
in
shl
ss
cmpl
fsub
ret
sbb
in
mov
xchg
shrb
xor
sar
cmp
jmp
faddp
ret
loop
xlat
sti
mov
int3
les
call
cmp
std
fiaddl
ljmp
out
call
cs
iret
int
icebp
sub
fcmovnu
rcl
stc
shl
in
testb
iret
loop
sub
hlt
iret
cmp
cmp
cmp
cmc
aad
lock
hlt
xchg
mov
out
clc
cmp
lret
fdiv
int
sarb
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
mov
movsl
add
aas
cli
icebp
mov
fdivp
mov
loopne
in
in
icebp
iret
xor
ret
leave
out
xor
stc
jecxz
cli
std
xlat
shl
out
ret
int
loope
loopne
mov
xchg
jmp
jecxz
in
rcr
cmp
rcl
ret
cli
sub
in
jecxz
shl
hlt
orb
out
xor
cmc
incb
aad
imul
decb
rcl
loope
fsub
into
lock
aaa
fdiv
fld
ret
mov
mov
fimull
xor
sub
shl
xor
xlat
in
iret
repz
cmp
idiv
std
int
in
mov
in
iret
jmp
repz
lret
in
rcr
rol
enter
testl
lret
int
int
clc
lock
and
clc
int3
cld
adcl
jmp
ljmp
sti
lock
rol
jecxz
repnz
iret
fcomip
in
ret
xor
stc
out
aad
int
ffree
cmc
aad
cld
xlat
testl
ficoms
out
ljmp
out
ds
aas
cmp
aam
into
rol
mov
enter
aaa
xor
ljmp
xchg
rcl
stc
into
clc
in
xchg
int
into
jmp
jecxz
fmul
jmp
repnz
loop
out
clc
repz
shr
mov
out
nop
jmp
loopne
repnz
shll
ljmp
std
into
int
into
shl
fst
lret
sbb
xchg
fmulp
call
in
leave
xlat
fdivrp
rol
rcl
neg
or
in
shr
ljmp
hlt
enter
stc
clc
hlt
cmp
xor
aad
out
hlt
xlat
loop
in
in
jmp
jmp
aaa
aaa
in
cli
into
fdivrp
shl
ret
cmp
cmp
test
out
into
int3
leave
fucomi
mov
sub
xlat
repnz
cmp
cmp
hlt
hlt
and
cmc
out
mov
aaa
not
sar
xor
xlat
cmp
mul
xchg
sti
in
aad
out
cld
and
out
out
out
hlt
enter
sti
fcmovnbe
imul
cld
stc
fcompp
mov
in
stc
icebp
nop
int
xor
stc
aam
jmp
enter
jecxz
fidivrs
fdivr
sti
fucom
loope
xchg
mov
repz
in
in
lret
jmp
in
in
ret
ds
rolb
xlat
icebp
out
mov
hlt
iret
out
ljmp
stc
sar
hlt
testb
mul
ljmp
loop
iret
into
call
cmp
shl
std
out
ret
stc
xchg
jmp
jmp
lock
sub
cmp
clc
int3
repz
out
repnz
and
not
loope
clc
jmp
nop
fisttps
xor
repz
aaa
jmp
ret
hlt
rcr
loopne
loopne
mov
rcll
divb
int
shl
repnz
out
repz
jmp
stc
cld
cld
enter
repz
out
xchg
test
out
enter
addl
mov
xchg
iret
iret
jmp
iret
std
cmp
in
call
lock
ljmp
lret
lock
xor
int3
cmc
cld
repnz
jmp
loopne
shl
cmp
aad
in
leave
std
fucomp
into
sti
iret
xchg
jmp
in
leave
aad
in
aaa
cmp
int3
in
xor
rolb
cmc
or
popl
xchg
repz
xor
in
cli
repz
cmp
lock
les
xlat
cmp
shr
loope
out
shr
in
fcmovne
fdivl
leave
rol
fnstsw
enter
into
in
out
shl
int
xor
fcmove
xlat
cmp
aad
in
not
lock
enter
xor
jmp
mov
jmp
jmp
imul
aad
ret
repnz
leave
call
lret
xchg
jmp
in
sti
fcmovnbe
shr
sar
int3
rcl
ds
xlat
loope
mul
nop
ljmp
xor
cmp
out
out
cmp
bnd
cli
rcr
fdivp
les
std
fmulp
cld
cmc
xchg
repnz
leave
jmp
repnz
ss
flds
ffreep
stc
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
xchg
and
repz
mov
call
out
leave
stc
xor
ljmp
stc
mov
icebp
icebp
xchg
das
icebp
aam
icebp
test
ror
out
aas
rcr
leave
mov
leave
and
loopne
decb
lret
aam
cld
aas
xlat
cld
out
out
aam
enter
in
xlat
leave
in
test
out
cli
shll
jmp
int3
cld
cmp
xor
call
hlt
jmp
mov
jecxz
in
lock
jecxz
ss
neg
lock
repz
fcmovnu
sti
nop
jmp
hlt
iret
xchg
repz
enter
cmc
loope
sarb
clc
cli
fisttpl
jecxz
fstp
cld
xchg
mov
hlt
xlat
sar
in
fcomip
cld
cmp
mul
fcmovbe
cli
stc
in
in
into
xchg
fdivr
dec
icebp
in
in
cli
lock
stc
aaa
cmp
aas
rcr
ret
addb
in
mov
nop
fucom
jmp
xlat
loope
out
cmp
not
cmp
cmp
adc
cli
mov
repz
jecxz
repz
xlat
int3
fdivp
int
repnz
out
fcmovnu
sbb
test
in
xchg
jmp
out
out
xlat
fst
iret
repnz
cmp
fidivrl
fsubp
out
fldl2e
sub
lock
sub
mov
jmp
lock
in
jmp
test
cs
lret
rcl
cmp
cmp
fnstsw
sti
in
addb
xchg
mov
fcomip
clc
cmp
fdivr
fcmovbe
xlat
fadd
ljmp
jmp
icebp
out
in
ss
out
test
cmp
cmp
mov
lret
in
jmp
out
xchg
sar
clc
in
out
icebp
xlat
ret
xchg
fcmovne
mov
cli
into
out
sub
stc
int3
xor
out
repz
sti
sarb
rol
or
out
fldl
aas
imul
iret
mul
ljmp
cmp
std
cmp
lret
mov
test
ret
loope
lret
aad
out
jmp
cmp
cmc
sar
cmp
shr
rcl
sti
lds
lret
xchg
lock
loop
call
cmc
in
rcl
and
cmc
fsubp
repz
sbb
and
rcl
jmp
in
sarl
int3
shr
cmp
into
lock
repz
cmc
repz
loopne
sti
xchg
loopne
lret
cmc
xor
cli
xlat
loopne
xlat
std
and
inc
mov
les
cli
std
cld
int3
shr
cmp
out
fnstcw
fsubr
hlt
out
inc
fsubrp
adc
call
fucomp
loope
iret
push
div
leave
jmp
stc
jmp
div
sar
aas
fadd
clc
call
ficoms
xchg
sub
xor
fdivrs
ljmp
repnz
repz
loope
loope
xchg
xlat
aad
fcmovnbe
cmp
int3
adc
loop
adc
test
and
sub
in
fdiv
fcomip
repz
rcr
aam
xlat
jecxz
fucomip
int3
stc
leave
mov
fsub
lock
fucompp
stc
xor
cmp
add
out
and
loopne
enter
xchg
out
int3
loop
iret
in
cmp
out
into
lret
shr
aas
cmp
lock
cli
lret
xchg
rclb
xor
ljmp
icebp
repnz
std
repz
jmp
cmc
jmp
enter
xchg
iret
in
cmp
xor
adc
out
fprem
loopne
adcl
aad
cmc
xlat
cmp
loopne
in
in
int
jmp
cld
or
jmp
ljmp
out
cli
cmc
repz
idivb
ret
hlt
cli
lret
or
jecxz
fcmovne
repz
int
repnz
fdiv
stc
xor
repz
iret
ret
loop,pt
repz
in
mov
aad
int3
jmp
sti
xlat
lock
stc
jmp
test
cmp
repz
aad
sti
out
cli
int
jmp
aaa
sarb
clc
cmp
cli
cmp
aas
fidivrl
jecxz
fucomip
cli
ljmp
lock
rcl
into
not
cmp
int
fdecstp
testl
mov
or
jmp
aam
iret
int3
fst
outsl
fmull
aam
nop
fwait
sti
jle
movsl
add
rcr
mov
call
rcl
leave
repz
icebp
xlat
sti
fidivrs
xchg
xchg
filds
fisttps
cmp
repz
fdivp
sbb
loop
loope
in
fdiv
xchg
call
ret
xlat
cmp
icebp
iret
loopne
in
fucom
fdivrp
clc
fucomi
into
mov
xchg
xchg
loope
aam
ror
ss
aaa
shl
rol
fnstsw
leave
mov
out
leave
repnz
das
call
idivl
cmp
stc
fprem
jecxz
test
test
sti
jecxz
rcr
lret
loopne
das
cli
cmp
cmp
in
ljmp
out
testb
lock
adc
sub
rol
into
sar
aad
cmp
aam
cmp
repnz
stc
ret
ret
xchg
out
jecxz
xor
repz
int3
stc
cmp
repz
rcr
in
loopne
ljmp
out
loop
mov
lret
ss
cmp
int3
into
into
movb
ffree
mov
lock
shr
into
xor
jecxz
out
ss
cli
hlt
adc
xlat
xchg
mov
mov
std
int3
xchg
xchg
icebp
in
xlat
jecxz
in
jmp
into
loopne
aas
aam
cmpl
int3
enter
add
aad
cli
fyl2xp1
aam
loop
repnz
stc
cli
cmc
std
xchg
xchg
std
mov
icebp
xor
cmp
hlt
iret
fsubp
and
sbb
jmp
in
in
adc
cmc
sti
xlat
aam
xor
cld
aam
mov
stc
int
lock
xchg
int3
shl
rcl
xor
cmp
lret
cmp
int
rolb
and
call
icebp
aaa
aaa
ror
in
cmp
fxch
push
in
fimuls
fcompp
ljmp
xor
in
in
fcomi
into
aam
lock
out
fdiv
aad
fmul
cmc
fldlg2
cld
repz
aad
leave
icebp
out
leave
cmp
cmp
mov
sar
fdivr
fcmove
xor
in
int
xor
in
lret
fxch
fsubr
icebp
rcr
stc
rorl
mov
leave
roll
call
repnz
out
loopne
rcl
mov
mov
fadd
fcmove
enter
into
xchg
into
in
idiv
fcmovb
sti
in
repnz
xor
out
fmul
ljmp
jmp
out
loopne
fadd
loop
xlat
icebp
int3
iret
out
fldln2
out
out
test
cld
cmc
test
in
in
icebp
in
shl
xor
xlat
call
rcr
in
fcmovnbe
ror
xchg
sub
in
rcl
xlat
xor
aam
cmp
int
ffreep
rcl
lock
jmp
jmp
out
ficoml
hlt
xor
idiv
fdiv
lret
int
clc
out
fucomp
cmp
fstp
mov
clc
in
rol
mov
mov
xchg
in
shr
cli
out
repnz
sti
cli
lds
mov
jmp
lock
rcr
fldln2
iret
lock
ljmp
aas
out
loopne
fldl
out
xor
vpsubusw
repz
enter
sar
in
fucom
in
cmp
fsub
mov
mov
fnsetpm(287
xchg
xchg
ljmp
jmp
xlat
icebp
xor
add
idiv
mov
aam
in
loope
sbb
cld
rorb
out
out
cmp
ror
cmc
sar
in
repz
sub
dec
iret
adc
sub
int
shl
out
loopne
aas
aas
shl
mul
out
out
out
fst
in
ror
loop
shlb
xor
aaa
lock
lock
loopne
ret
cli
ret
xchg
testl
mov
lret
les
cmp
jmp
ffree
fildl
jmp
jmp
shlb
sarl
lret
sar
shr
mov
call
iret
icebp
hlt
les
aaa
test
idiv
rolb
cmp
movb
sub
out
rcl
icebp
enter
iret
aam
in
fsub
loopne
enter
out
jmp
jecxz
jmp
cmp
cmp
cld
cmp
in
fsubr
faddp
fcmovnu
out
in
test
cmp
lock
fdiv
cli
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
in
cmpb
add
in
leave
test
aad
int3
f2xm1
orb
decl
loope
mov
fdivr
fdiv
icebp
cmp
hlt
enter
into
xchg
aam
shr
hlt
hlt
aad
leave
fxtract
fadd
out
cmc
cmp
test
cld
enter
mov
xor
repnz
lret
fmul
loop
ss
lds
leave
int
mov
decl
jecxz
out
call
xlat
fdivr
lock
rolb
cld
out
test
into
xor
ret
out
imul
cmc
adc
loope
xlat
shl
out
lret
out
movl
in
xor
lret
ror
loopne
cmp
out
aad
or
shl
mov
xor
cmp
aam
iret
fcmovnbe
xor
mov
out
orl
in
xor
fxch
rcr
jmp
lock
in
test
call
loop
clc
lret
fmulp
repnz
cmc
jmp
shr
into
out
jmp
cmp
aas
sti
rol
out
repnz
mov
cmp
test
shl
jmp
cmp
out
int3
hlt
jmp
xlat
cld
repnz
fcmove
cli
jmp
out
mov
cs
repz
call
std
repnz
rcr
cld
cld
test
into
jmp
fstp
shr
ljmp
xchg
aad
out
test
int
xchg
mov
jmp
clc
cld
int3
call
fst
sarb
cmpb
xchg
jmp
iret
and
xor
xlat
cmc
cmp
cmp
into
rcl
cld
cmp
fimull
fisttpl
repz
out
in
fadd
fnstsw
int3
fcomip
cmp
clc
cmp
test
and
lret
jmp
aaa
idivb
fiaddl
sar
in
ffree
in
clc
in
jmp
ret
imul
icebp
std
clc
xlat
xor
rolb
in
sbb
test
xor
repnz
repnz
out
fninit
in
cmp
leave
mov
hlt
in
xlat
clc
out
shr
ljmp
int3
rcl
loop
icebp
fcmovb
cmc
shl
fdivr
popl
mov
lret
in
sar
jecxz
fnstsw
stc
and
xchg
xchg
icebp
ret
loop
repz
lds
repz
in
xlat
icebp
in
cmp
not
hlt
jecxz
in
cli
in
lret
jecxz
into
sti
mov
out
out
jecxz
out
fdiv
cmp
jecxz
test
jecxz
fmull
mov
in
aam
cmp
iret
loope
in
xlat
cld
ret
adc
mov
ret
repnz
xlat
in
div
cli
out
aas
ljmp
xchg
jecxz
std
stc
in
out
cmc
xor
ss
leave
rcl
sar
aad
hlt
cli
fiadds
int
rcl
into
rcr
out
fcomi
sti
ror
out
stc
fucomip
jmp
enter
xchg
fstp
test
xlat
shlb
std
cmp
sar
in
repnz
stc
out
nop
movl
fdiv
call
aad
out
fdivrs
out
in
ljmp
fcomi
std
fst
loope
loope
icebp
clc
in
leave
neg
cli
fadd
cld
cmp
loopne
hlt
stc
call
jecxz
repnz
xor
xor
xor
leave
std
into
cmc
cld
aad
int
call
test
int3
rorb
repnz
stc
icebp
cld
int3
clc
shlb
cmp
out
cmp
lock
test
mov
fisttpll
cmp
lret
out
cli
stc
ret
loop
fprem1
aam
jmp
mov
xchg
out
cld
fcmovnu
ljmp
sbb
call
call
ror
sub
iret
aad
clc
cmp
hlt
xlat
fdivrl
loop
loope
cli
test
lock
jecxz
shr
iret
fcmove
cmp
into
aam
loop
hlt
xor
leave
testl
std
nop
clc
int
in
out
cmp
in
aam
loope
aad
in
loope
ret
fisttps
out
sub
rolb
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
jmp
test
movsl
add
int
cmp
loopne
ret
xor
xchg
mov
shlb
repz
vpsllq
fcmovbe
fidivrs
sti
aaa
add
loopne
jmp
stc
test
fldl
ljmp
cmp
icebp
cmp
cmp
in
shr
iret
hlt
loope
mul
xlat
cmp
ljmp
jecxz
fadds
lret
decb
out
in
aas
shrb
ss
cmp
cmp
xchg
loop
loop
sar
mov
in
in
mov
out
repz
fmulp
fxch
cmp
mov
fisttpl
orb
cmc
sub
fcmovb
cli
shl
rol
aam
test
shl
aas
clc
in
stc
xchg
enter
repnz
rcl
stc
out
ljmp
ds
mov
fimull
loope
call
ror
aam
ss
xor
cmp
idivl
faddl
int3
leave
out
lock
sub
ljmp
cmp
hlt
mov
test
test
repnz
fbstp
iret
aaa
out
fdiv
div
cmpl
fpatan
leave
faddl
clc
lret
lea
hlt
fsubr
cmp
hlt
fnstsw
xchg
cmc
std
fld1
stc
iret
in
leave
call
fadd
fcmovu
hlt
fprem
std
cmp
not
aam
jmp
lret
rorl
into
ret
fidivrl
out
xlat
sar
ffreep
loopne
fadd
into
xchg
int3
into
xor
lret
repnz
cld
hlt
flds
shl
enter
in
dec
call
xchg
icebp
stc
xor
cld
hlt
xor
sar
sar
ret
test
cld
fdivr
out
enter
into
mov
out
sar
in
cmp
cmp
cmp
cmp
roll
in
les
orb
in
aaa
cmp
cmp
loop
adc
sti
ret
test
int3
ljmp
test
das
test
ss
repz
idiv
iret
aas
les
sti
ffreep
fucomip
rorb
lret
out
cmp
fnstsw
loopne
repz
shl
ret
cmp
fiaddl
rol
sti
stc
lock
int3
cmp
cmp
xlat
out
fsub
mov
jmp
neg
ror
aad
cli
in
cmp
out
clc
fxam
loop
std
enter
leave
mov
mov
enter
out
rol
aam
cmc
cmp
out
jmp
in
ds
rorb
cld
iret
ljmp
in
int3
leave
call
cmp
lret
loop
adc
fcomp
xchg
test
faddp
out
int3
aam
sar
fabs
loopne
cmc
cmp
fdivp
cmp
clc
mov
in
icebp
fdivr
sub
hlt
int
repz
sti
rcr
into
call
ljmp
ljmp
sub
lock
fdiv
hlt
xchg
mul
fcmovnu
lret
fsub
xchg
fucomp
test
fldcw
fcomp
shr
out
fdivrs
ljmp
mov
cld
test
mov
loopne
jmp
cli
aas
in
cmp
hlt
clc
out
ds
mov
loop
int3
filds
in
in
rcl
into
cmp
fldl
ljmp
aam
les
jecxz
ror
cmp
in
repz
icebp
out
repnz
std
icebp
loop
div
in
in
fcmove
mov
sub
iret
lock
aas
jmp
sti
sti
aad
ret
aad
enter
mov
out
shl
xor
les
leave
aam
ss
flds
ror
sub
cli
xchg
div
cmc
xor
iret
xor
aaa
aad
jmp
xlat
aas
div
fnstcw
loop
notb
hlt
repnz
aaa
loop
lock
ror
inc
xor
sti
in
jecxz
faddl
lret
fistl
xor
hlt
hlt
iret
xor
cmp
cmp
in
jecxz
out
mov
sarl
lret
sarb
cli
std
xlat
in
loope
sti
ror
cli
xchg
out
fdivp
xor
xor
into
xlat
cmp
fpatan
cmp
fcmovnb
ds
xlat
cmp
add
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
inc
mov
jle
movsl
add
fmull
lret
lret
mov
mov
ljmp
fcmovnu
shl
inc
fucom
test
adcl
call
out
ss
xchg
std
loopne
mov
cli
fcmove
loop
shl
iret
jecxz
xor
shl
rol
out
hlt
lret
in
xor
fucom
ljmp
ljmp
lret
fdivl
cmp
lock
rcr
xlat
xchg
leave
call
xchg
lock
shl
cmp
cmp
sti
int3
idivb
cmc
test
faddl
out
jmp
out
xchg
int
cmc
in
in
in
xor
sarl
idivb
les
leave
cmc
in
call
lock
sarb
shl
cmp
test
std
lds
int3
test
std
xchg
xchg
lock
lret
iret
out
neg
sar
rcr
shl
ljmp
fcmovbe
int3
int
incl
aam
aaa
out
cli
faddl
mov
xchg
in
leave
ror
mov
loop
clc
leave
frstpm(287
lds
cmc
push
fsubr
leave
fucomip
mov
mov
jecxz
xor
ss
call
sti
fst
xchg
repnz
ljmp
mov
hlt
fists
repnz
lock
rcl
in
std
cmc
rol
fnstsw
mov
fmul
icebp
repnz
out
loop
ret
cmp
jmp
repnz
rol
filds
jecxz
ret
in
in
divl
aaa
xlat
sti
xor
into
xor
fsub
aam
roll
out
xchg
mov
repnz
sub
out
ds
mov
fcomp
sti
test
cli
loopne
mov
std
loopne
out
in
ret
out
icebp
out
loopne
fdivp
in
sti
test
enter
xlat
popl
mov
jmp
cmp
ret
sti
cld
aas
jecxz
test
in
mov
repnz
aam
cmp
rcl
clc
icebp
xchg
ret
sar
jmp
loope
fsubrp
nop
rorl
int3
lret
cmc
cld
in
rcl
faddl
faddl
std
int
xor
sub
cmp
leave
fsub
ret
test
aas
cmc
out
mov
frndint
cld
out
in
fisttpll
xor
rol
lret
ffree
sti
fstpt
out
loope
sbb
mov
lock
leave
shr
cmp
test
iret
ret
cmc
fdivr
stc
call
test
std
repnz
stc
lock
in
xor
sti
jmp
aaa
aas
std
roll
mov
out
jmp
enter
stc
lret
fcomp
loop
loope
icebp
std
cli
in
loopne
addb
rcl
out
sar
stc
stc
loope
ror
rolb
out
jmp
in
mov
mul
aad
cmp
leave
cmp
sti
int3
repnz
ret
stc
clc
in
stc
test
test
fsub
in
rcl
xor
xor
cmp
cmp
cmp
sti
into
out
cmp
jmp
into
mov
roll
iret
sti
xor
fidivrs
into
cli
icebp
clc
fcmovbe
adc
leave
loop
in
out
test
das
sub
leave
xor
repz
sub
iret
fadd
mov
aam
lret
testl
hlt
aam
ror
lret
fucomp
cld
flds
cli
flds
fisttpl
sar
test
lret
test
aas
rcl
loope
cli
xchg
mov
xchg
nop
mov
jecxz
aaa
shl
sti
cld
out
cld
cmp
cld
hlt
lret
xor
sar
mov
clc
mov
enter
test
cmc
ss
into
cli
std
ror
xor
stc
cmc
cld
out
stc
std
and
clc
shl
and
in
xor
xor
xor
iret
xor
cli
cmp
in
cld
cld
fcmovnb
in
vpaddd
in
fsubrp
fucomip
shlb
lock
cmp
das
out
xlat
aam
cmp
testb
mul
vpavgw
call
aad
fcmove
testb
xlat
cld
loope
testl
xlat
int
xor
int3
stc
xor
leave
xor
in
xchg
shl
std
cmc
fcmovb
fdivrp
jne
jmp
int
into
fst
das
inc
aam
jns
data16
mov
movsl
add
fmulp
in
test
mov
call
fsubr
cmp
int
lock
hlt
jecxz
lret
ret
mul
test
cmc
das
not
jmp
aaa
not
aam
fdiv
fcom
jmp
loope
nop
fmulp
nop
repnz
xor
into
fdiv
fnstcw
ret
fucomp
ret
div
enter
in
iret
or
in
xor
idivl
shlb
roll
addb
frndint
mov
in
jmp
test
jmp
cmp
mov
fmuls
in
in
xchg
in
xor
ljmp
rcr
fildl
xchg
jmp
xchg
sub
cmp
fdiv
sarb
cmpb
roll
out
fiadds
call
fcmove
sti
shl
cmp
cmp
ret
lock
xchg
stc
sar
mov
enter
in
in
jmp
cmpl
repnz
int
out
orl
cmp
lret
aad
xor
in
ret
out
clc
hlt
mov
out
cld
in
lea
aad
aam
icebp
ror
leave
fmul
call
cmp
jecxz
cld
ret
ffree
stc
fld
fstl
fmul
in
cmp
lret
ds
xlat
cmp
rcl
cmp
xchg
loop
xor
out
fcmovu
in
idivl
adc
fmul
inc
int3
xchg
jmp
jmp
ljmp
std
in
aam
ds
jecxz
ljmp
mov
xor
int
cmp
jmp
loop
ffreep
in
testl
ret
cli
repnz
not
std
aas
cmp
fld
loop
xor
test
stc
cld
out
jmp
xlat
aad
ljmp
ror
cmp
in
hlt
xchg
jmp
out
repnz
fiadds
jmp
stc
sar
stc
repz
jmp
sbb
div
ds
mov
out
into
call
xor
ror
jmp
lret
fnstsw
iret
aad
fxch
ffreep
cmc
jmp
mov
loop
in
int
ret
cmc
aad
cmp
std
ds
add
shl
loope
repz
xor
shll
stc
rcl
aad
call
out
in
incl
shr
in
xor
repnz
lret
iret
cmp
jecxz
std
cmc
mul
ret
loopne
fstp
mov
mov
out
shr
repnz
jmp
ljmp
hlt
loope
mov
ljmp
lea
fsub
fmul
repnz
xor
cmp
mov
std
cmp
cli
in
lret
shr
xor
call
into
loope
out
mov
out
loope
out
in
int3
clc
in
rcl
ror
imul
xor
hlt
fdivr
rcr
inc
cld
test
int
in
sar
out
leave
int
stc
loopne
cli
lock
fcmovne
mov
xchg
int
int
out
out
int
aam
cmp
ror
fcmovnb
sar
jecxz
aam
aad
in
out
add
icebp
fldl
xlat
in
fadds
sar
call
idivb
in
rorb
sub
jmp
int
clc
rcl
cmp
rcl
jecxz,pt
call
std
and
fiadds
clc
out
stc
int
loop
cld
call
std
test
loope
call
cmp
cmp
in
fcmovnu
jmp
int
out
call
out
fisttpl
cmp
stc
icebp
out
loopne
fdivrs
loop
fsub
test
aam
std
mov
xchg
xor
icebp
fldl2t
cmp
fdivp
std
cmp
jecxz
ret
rcl
repz
clc
cld
ljmp
icebp
xor
repz
repz
fcmovbe
iret
sbb
call
fucomp
fmul
mov
in
in
xor
leave
sarl
ss
lock
in
rcr
lock
fdiv
ret
out
loop
cld
cld
popl
sub
xor
repz
in
repnz
mov
out
leave
stc
icebp
repnz
fsubrp
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
cmc
ss
lock
xor
fucomp
xor
cmp
test
inc
vpsubsb
ret
xchg
mov
ret
imulb
repz
fidivs
lret
cmp
in
fcom
sti
loop
enter
in
rcl
out
xor
shl
in
xlat
in
repnz
aam
sar
aam
jmp
testl
mov
hlt
mul
xor
repz
fucomi
jmp
stc
loop
aam
fldl
fmuls
dec
fisttps
not
aam
hlt
cmpb
aam
rol
in
fildl
in
iret
call
xlat
loope
int
in
fdiv
loop
fcomp
in
stc
and
out
xor
idiv
rcl
enter
aam
ret
sbb
leave
clc
fnsetpm(287
xchg
mov
test
rcll
cmp
cmp
ss
into
int
fcmovnu
jecxz
clc
cld
sub
test
xchg
enter
out
out
out
iret
sarb
in
cmp
idiv
sti
lret
mov
out
neg
in
xor
lock
xor
shl
or
aas
xlat
shl
test
leave
call
ljmp
fucomi
cmp
hlt
int
cmc
xor
cli
fsubp
xlat
ljmp
mov
shl
sti
ret
cmp
out
lret
cmpb
cmp
out
cld
loop
enter
mov
test
shl
loope
fcomp
cli
ror
ljmp
repz
stc
repz
ljmp
xor
leave
fsubr
stc
cld
enter
loope
testl
test
loope
sub
int3
call
loope
ret
rol
mov
call
aam
xlat
sarl
out
fcmove
icebp
lock
aas
in
rol
jmp
out
in
loopne
icebp
jmp
in
clc
cmp
int3
int3
clc
jmp
ret
stc
xchg
call
enter
icebp
and
shl
fnstcw
aaa
in
imul
neg
addl
in
ret
leave
loop
imul
int3
leave
test
cmp
cmp
inc
test
mul
icebp
lret
int
mov
cmc
lret
fcomp
out
lret
idivl
div
cmp
sarb
mov
fcomi
out
shll
cmp
hlt
jmp
out
lds
fst
out
xchg
orl
out
jmp
aad
lret
rcr
and
loopne
in
orl
aad
sti
out
idivl
jmp
jecxz
rol
mov
fdivr
xlat
xchg
out
lret
sub
leave
cmp
aam
repz
shl
lds
fcomp
mov
leave
ret
mov
adcb
lock
cmp
fldl
rcl
test
fisttpll
xchg
cld
aam
jmp
repz
ret
fildl
fiaddl
loopne
mov
int3
xor
aad
leave
xor
fiaddl
xlat
jmp
fcmovu
out
into
icebp
loop
in
decb
repz
cmp
cli
shl
shl
enter
out
into
mov
jmp
aaa
xor
idiv
fnstcw
push
loopne
hlt
adc
out
cmp
cld
stc
std
lret
in
mov
in
icebp
xor
ss
aaa
sti
cmpb
out
iret
lds
stc
test
fcmovnu
mov
mov
shll
leave
aam
clc
aam
out
idiv
aam
cmp
adc
cld
loope
repnz
mov
fisttps
icebp
out
cmp
repz
jecxz
loop
sti
repnz
xchg
addb
cmp
aas
hlt
ljmp
rcl
add
loopne
test
shl
iret
clc
xor
jmp
call
addl
fcmovne
int3
addb
shr
cmc
idivb
clc
cmp
lock
not
stc
stc
mov
jecxz
aad
xor
lock
repz
ds
aas
hlt
addb
fucomip
in
lret
divb
out
in
clc
hlt
ds
cmp
stc
xlat
icebp
aaa
sti
roll
xchg
iret
loopne
mov
nop
fsubrp
cs
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
icebp
or
jle
xchg
add
xlat
cmp
sar
int3
ret
stc
repz
jmp
ljmp
xchg
hlt
enter
out
repnz
out
int3
test
rolb
std
leave
adcl
aam
shrb
idivl
fsubp
ds
fsub
std
xchg
into
out
sub
aam
sti
repz
fnstsw
in
repnz
xchg
in
std
hlt
clc
aad
nop
into
mov
out
shl
ljmp
rolb
loope
fcmovnb
int
movl
iret
neg
repz
std
out
sbb
jmp
xchg
fstp
xchg
loopne
xor
ss
into
xlat
cmp
stc
stc
cmc
int
shl
icebp
decb
in
out
fmulp
out
roll
xlat
out
sti
ljmp
loopne
rcl
test
loop
mov
aam
les
xor
cmp
loope
lret
sarl
into
cld
lds
clc
rcl
fsubrp
mov
lock
hlt
ret
cmp
ret
adc
fnstcw
mov
mov
jmp
iret
into
lock
cli
int3
clc
not
clc
fdivrp
cmpb
clc
in
enter
test
out
ror
out
ret
cli
icebp
fmulp
xor
jmp
ret
jecxz
rcl
fildl
sub
push
in
rcl
xor
jecxz
fidivl
ds
cmp
std
cmp
fimuls
out
int
ret
repnz
call
sarb
stc
test
hlt
jmp
xchg
cmp
popl
out
cmp
leave
ds
jmp
test
cld
aam
fcmovnu
in
aad
lock
loope
int
int3
mul
xor
into
repnz
adc
jmp
iret
fucom
mov
div
repnz
fadd
not
aaa
in
std
jecxz
repnz
orb
lock
mov
cmc
xchg
mov
ljmp
int
cmp
out
cmc
repz
sar
testb
ljmp
cmp
std
test
cmp
shl
xlat
idiv
lret
in
and
aaa
int3
cli
mov
out
call
repnz
out
out
loopne
clc
loop
leave
dec
std
nop
jmp
aad
repz
stc
enter
repnz
shl
aad
test
les
loopne
iret
out
mov
mov
in
ss
das
fucomi
iret
sbb
shl
rcr
rol
fcmovbe
lret
xchg
xchg
mov
or
repnz
lock
cmp
iret
rcr
cld
fcmovnbe
fdivrs
loop
and
jmp
fisttpl
cmc
repz
hlt
in
sub
cmc
fcos
ret
aad
xchg
ljmp
fmull
divl
cmp
cli
cmp
out
into
icebp
into
aam
fdivr
aam
in
cld
enter
mov
enter
add
fcomp
aam
cmp
test
ds
in
fsub
xchg
int
xchg
aam
clc
xor
hlt
fnstcw
sar
fucomp
sti
neg
ljmp
in
aad
clc
out
cmp
dec
rcr
cmp
out
add
cmpb
jecxz
iret
fstl
cmc
shr
jmp
ror
shl
std
jmp
adc
std
cli
fdivrp
test
lret
int3
xlat
fucomip
cld
xlat
int3
aam
stc
loopne
jmp
sti
clc
in
mov
sar
jmp
out
shl
test
loopne
aam
roll
fiadds
out
mov
out
in
lds
shl
iret
bnd
cld
out
xlat
addl
mov
loopne
jmp
cmp
xor
lock
aaa
fidivrs
sti
mul
xlat
jmp
xchg
loop
test
enter
stc
cli
std
call
cmp
ffreep
test
xchg
fildl
mov
shr
xor
aam
fdiv
fnstsw
std
fcmovnu
fimuls
in
jecxz
stc
shl
fdivl
shr
iret
clc
cmp
ds
fcmovnu
decl
int
xchg
call
lret
ss
aad
rcr
les
lret
xlat
imul
xchg
mov
adc
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
fbstp
add
xchg
add
in
aam
lret
ss
rcl
dec
call
iret
clc
in
add
frndint
test
test
icebp
jecxz
in
cmp
cmp
clc
icebp
fcmovne
rol
xchg
repz
xlat
stc
out
fmul
leave
fdivrp
aam
xorl
leave
cli
rcl
fcomp
hlt
enter
in
test
out
out
xchg
jmp
imul
fcom
fcmovb
fcomip
cmp
stc
rcr
repnz
test
out
fisttps
xchg
ffreep
int3
jecxz
aad
jmp
hlt
jmp
stc
int3
jecxz
cli
fcmovbe
jmp
lea
fsub
mov
lret
enter
std
std
fldl2e
sbb
xchg
sti
mov
fcomip
dec
int3
sub
ret
in
sti
xor
ret
cmc
fldl2t
leave
ljmp
fisttpl
shr
ror
xor
ret
iret
aad
mov
out
mov
addl
aaa
cld
out
xor
loope
fistpll
ret
repnz
cmc
mov
mov
out
in
adc
jecxz
idivb
out
cmp
fistpll
out
xor
cmp
cmp
out
mov
mov
fucomip
sub
lret
int
xor
leave
out
fdivrs
test
out
std
jecxz
jecxz
out
fstp
loop
sti
xchg
lret
cmp
cmp
out
xor
adc
orl
mov
stc
lds
iret
hlt
imul
in
shl
test
aam
lret
and
loopne
fucomp
lret
iret
ljmp
hlt
sarb
ror
lret
iret
cmpl
stc
neg
fcomp
mov
in
fiadds
das
out
cmc
fnsave
cli
call
neg
ret
loope
jecxz
clc
sti
cld
fstl
ss
cmc
aad
repz
cmp
rcl
faddp
clc
int3
in
lret
std
jecxz
nop
shl
vpsubd
vpaddb
cli
fstp
fcomp
std
fisttpll
incl
xchg
cs
iret
int3
int3
fxtract
ds
inc
aam
fisttpl
int3
icebp
out
out
in
jecxz
int
jmp
jmp
out
and
std
dec
loope
lock
ss
sti
rcr
hlt
cmc
rcr
in
idivb
ret
fstp
mov
jecxz
fsubr
int3
in
loop
nop
shl
imul
xor
iret
lock
imul
loopne
hlt
incb
stc
jmp
jecxz
xchg
test
shl
ret
lock
fcom
cld
fucom
ljmp
cmp
mov
sar
lret
nop
ror
jecxz
icebp
into
fstpt
hlt
xor
std
cmp
jmp
out
jmp
fcmove
xlat
fidivs
icebp
clc
lock
ljmp
lret
lea
loope
rol
cs
cmp
clc
cmp
cld
ret
shl
cmp
out
mov
shlb
xor
mov
hlt
iret
fiaddl
ret
jmp
loop
into
fcomip
repz
cmp
lock
cmp
stc
loopne
cmp
rcr
test
mov
fimull
ljmp
aaa
lock
out
in
lret
cmp
sub
or
fcmovne
int
shr
loope
icebp
fldl2e
in
xor
or
rol
clc
out
ret
xor
loop
in
fucomi
jmp
cmp
in
stc
shl
shl
lock
fmul
mov
xchg
fmulp
stc
fucomi
rcr
cmp
fmulp
cmp
fcmovb
call
repnz
out
sbb
iret
xor
into
out
roll
cmp
loopne
cld
cld
stc
ret
fimull
in
rclb
xor
xor
out
loopne
cld
cmc
jecxz
jecxz
shl
cld
fcomi
test
icebp
sub
mov
clc
jecxz
repz
lret
out
cmp
in
mov
cmp
mov
in
ljmp
loop
xor
enter
icebp
cmc
in
sti
dec
test
xchg
or
rolb
cmc
ss
icebp
neg
iret
cld
jecxz
cmp
stc
mov
jecxz
decl
repnz
test
fsubr
xlat
stc
leave
cmp
sar
stc
out
out
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
clc
fimull
test
repnz
icebp
loope
mul
test
hlt
cmp
fadd
mov
repnz
out
clc
repz
stc
aaa
cld
ljmp
in
ljmp
xchg
fucomip
fsubp
mov
sub
rcl
aam
cmp
sar
cmc
test
fucomi
lret
loopne
fmull
in
iret
fprem1
clc
shr
not
icebp
idivl
test
cli
rcr
aad
into
sti
ror
out
xchg
rol
fnsave
repnz
icebp
repnz
in
xchg
test
sub
rcl
iret
out
sub
ds
cld
roll
aam
cmc
fcmovbe
into
xlat
cli
addl
aam
xlat
cld
lret
repnz
jmp
fmul
shl
aam
into
test
pause
xor
out
rol
xor
fdivrl
rcl
hlt
fstpt
dec
fdivp
in
in
icebp
call
das
cs
fucompp
sti
cmp
cmc
loopne
aas
cli
faddp
lds
repnz
jecxz
xchg
xchg
loopne
xor
iret
hlt
xor
vpaddw
aaa
fnstcw
aad
loopne
cld
cli
jmp
jmp
in
out
mov
xchg
clc
ror
rcr
clc
xor
repnz
and
fsubp
xlat
out
out
filds
and
cmp
shr
fcmovne
testl
leave
fsubrp
nop
lret
in
int3
iret
leave
out
leave
aad
lret
fdecstp
std
cmp
faddl
std
loope
int3
loope
iret
xor
shll
lret
cmp
shr
sbb
out
jecxz
ljmp
ror
adc
cmp
aas
xor
in
call
in
jmp
aad
ss
out
ror
lock
clc
out
cmp
shl
mov
int
into
into
mov
aam
shr
lret
enter
fsubrp
fdiv
rcr
hlt
stc
add
repz
in
mov
mov
fiadds
xor
into
fsubrp
fucomip
fmul
incl
jecxz
fucom
mov
cmc
addl
xor
rcr
xchg
out
xlat
call
ret
aam
sti
lret
rcl
repz
out
lock
cmp
out
mov
neg
roll
lea
loope
xor
rcl
fstp
cli
out
rcr
ds
cmp
ljmp
ror
lret
fcomi
icebp
stc
cld
cld
in
cmp
cmc
out
rol
jmp
jecxz
xlat
into
repz
das
aam
xor
iret
aaa
ds
cmp
rolb
cld
rcr
out
iret
jmp
xor
out
xor
xor
ror
sti
fdivp
test
sarl
leave
loope
mov
roll
xor
idivb
cmp
neg
fucomp
in
out
rcl
loop
clc
sub
lock
out
fdivrp
call
in
out
in
cmp
call
std
iret
fdivr
shl
sti
fcom
lret
jmp
shl
fadd
aad
enter
adc
fldl
xlat
fiaddl
jmp
bnd
fdivp
iret
clc
idiv
in
fcmovnbe
stc
leave
fisttps
fcmovne
rolb
xor
cli
div
iret
int3
add
shl
mov
iret
add
in
call
xlat
out
imul
jmp
test
in
repnz
sbb
loop
in
cmc
icebp
sar
enter
lret
lret
out
std
fdiv
rolb
out
lret
xchg
lock
xor
lock
xor
rolb
in
in
loopne
out
xlat
out
fucomi
fdivrl
loope,pt
roll
xchg
cld
out
mov
jecxz
icebp
lret
in
aad
cld
jmp
aas
cmc
add
ds
stc
in
jmp
xchg
jmp
jecxz
xchg
ss
aam
cmc
fcompp
int
xor
ds
fld
cmc
hlt
mov
fdivr
jmp
icebp
shl
nop
iret
hlt
dec
shr
lock
repnz
cmc
cli
out
cli
cli
mov
call
ret
xchg
xor
xlat
lret
into
shl
xlat
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
or
movsl
jle
xchg
add
repnz
into
out
ficoml
ljmp
leave
stc
cmp
stc
out
fsub
in
leave
loop
ficoms
sub
repnz
repz
rolb
test
in
rcr
xchg
shr
into
ljmp
xor
cmp
clc
aaa
shl
mov
test
xlat
test
fmuls
iret
div
aam
jecxz
enter
cmp
loop
test
ret
out
incb
test
out
ss
sti
leave
cld
sarl
fcmove
in
ret
fucomp
mov
test
in
mov
mov
xor
imul
jmp
aad
clc
shl
roll
into
out
lret
out
xchg
clc
ss
in
rcl
cmc
fucomp
xlat
iret
call
or
clc
cli
in
lock
into
in
ret
xor
fidivrs
out
in
in
ds
fdivrl
loop
lea
jmp
xor
rcl
fdivrp
ljmp
repnz
dec
int
fiaddl
lret
loop
clc
aam
jmp
iret
cmp
repnz
test
cli
cmp
std
clc
fisttps
sub
xor
lret
in
push
fidivl
xlat
cmp
std
decb
aad
loop
ss
cmp
incb
ljmp
out
aam
not
shll
imul
rol
xor
std
cmp
std
in
repnz
shl
cmp
cld
sbb
lret
out
into
in
icebp
ss
addl
pop
incb
out
out
cmp
fmul
cmp
icebp
int3
fidivl
lock
rol
fcomi
cmc
call
loope
xchg
xor
clc
jmp
lret
repz
in
aad
xchg
lret
out
stc
fcmovu
cli
cli
orb
in
imulb
fdivs
sti
rolb
xchg
fiaddl
fsub
lock
repz
clc
fldln2
stc
sar
in
lret
loope
fsub
fstp
fsub
sar
ljmp
fisttpl
loop
out
xlat
std
rcl
loopne
icebp
in
cmp
out
aas
in
jmp
loope
lret
incb
cmc
divl
fcmove
ljmp
xlat
ret
cld
hlt
xchg
xchg
xchg
fst
shl
out
fdecstp
ret
cli
idivb
out
in
repz
cli
loopne
test
faddl
into
xchg
iret
hlt
ss
cli
leave
in
lock
aad
ret
cmc
movl
in
into
test
rol
xor
leave
repnz
in
lret
cli
cmp
sti
orl
loopne
cmc
in
icebp
cmp
stc
repz
into
loope
in
loope
sar
and
leave
loopne
out
test
cmp
lock
into
cmc
xor
cmc
ds
hlt
idiv
fcmovne
mov
addl
fidivrl
fiadds
fcomi
mov
fadd
sti
ljmp
lret
fcmove
cmp
sbb
rcl
cmp
fsub
sbb
mov
enter
in
xchg
int3
xor
in
lock
jmp
in
iret
out
roll
icebp
cli
repz
addl
fxch
loopne
cld
repnz
shl
roll
mov
in
shlb
cmp
into
out
shr
into
loopne
icebp
aam
stc
leave
fmul
test
fmul
loopne
rcl
out
in
hlt
fdivrp
fcmovbe
loop
and
xlat
cmc
mov
mov
int3
out
hlt
fcomip
shl
shlb
icebp
enter
cmpb
fxam
sar
rcl
in
leave
loopne
xchg
out
int3
mov
cs
into
out
out
aam
add
icebp
out
fucomip
cld
fmul
mov
decb
leave
lds
repnz
in
repz
cli
sti
rcl
cmp
sar
flds
repz
lea
stc
rcl
int3
cs
aad
iret
and
idiv
repz
cld
xlat
out
sti
jmp
icebp
mov
xor
into
out
lret
ror
loop
xor
test
fcmovnb
lret
cld
int3
dec
jmp
loopne
mov
jmp
mov
or
add
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
jo
test
jle
cmp
aas
cmp
addb
div
fildl
lret
faddp
vpinsrw
sti
cmp
rcl
idiv
cmc
loopne
cld
ret
mov
fmull
in
enter
aaa
ljmp
sarb
xlat
sti
mov
in
ret
iret
in
or
mul
repnz
aad
xor
fnop
fcomi
testb
jmp
into
int
xchg
lock
repnz
jmp
cli
fsub
sar
rolb
mov
mov
jmp
leave
shl
out
out
fdivp
in
shl
icebp
std
xor
test
mul
xbegin
faddl
stc
hlt
ljmp
filds
fildl
stc
mov
cmc
ljmp
rcl
aad
ret
in
test
les
jmp
repz
lock
repz
jmp
repz
loop
leave
in
orl
in
mov
ror
aaa
rcr
into
loopne
stc
repz
icebp
filds
xor
neg
sub
icebp
lock
xlat
repnz
sti
fmull
mov
repz
test
repz
lock
int3
out
in
jecxz
repnz
sti
jmp
mov
loope
mov
in
aam
cmp
fmul
cmp
aam
loop
aam
out
loopne
cmp
jmp
jmp
cmp
ljmp
in
cld
fdiv
shl
cld
rorl
lock
leave
icebp
xchg
jecxz
rol
enter
repz
leave
loop
out
out
fildl
and
out
stc
out
mov
loop
lret
leave
xlat
bnd
ds
repz
out
xchg
orb
jmp
rcl
into
into
ljmp
xlat
rcl
icebp
jmp
ret
loop
mov
mov
ljmp
aas
rcl
jmp
test
jecxz
repz
repnz
sub
iret
repz
inc
and
in
rcr
fcmovnb
enter
loopne
in
loope
jecxz
repnz
cmp
xor
idiv
hlt
out
repz
sbb
in
loope
addl
lret
sar
loopne
imul
ror
sti
hlt
leave
imul
faddl
mov
clc
std
jmp
aas
ds
out
std
hlt
mov
stc
in
sti
mov
sbb
xor
ret
sti
shl
jmp
std
add
int
mov
in
fdiv
int3
xor
xor
xlat
fcmove
aaa
ljmp
fxam
ret
ret
out
lret
int3
lea
leave
int3
into
cmc
in
rcr
jmp
rcr
stc
loopne
repnz
in
test
xchg
rol
rcl
sub
cli
iret
fcomi
in
repz
xor
xchg
int
roll
iret
cld
icebp
in
stc
cmc
fdivl
xchg
faddp
fdivrp
repnz
in
xor
out
repz
in
cmp
hlt
neg
ror
not
xchg
mov
lret
lock
jmp
repnz
xor
int3
int
iret
iret
idiv
fcomp
sar
aaa
std
rol
loopne
addl
aad
in
cmp
in
sti
repnz
cmc
loope
loop
repz
test
out
icebp
shl
xor
fld1
shll
out
xor
cld
sar
loope
iret
cmp
ljmp
xchg
iret
aad
int3
aad
out
repnz
cmp
stc
test
fld
adc
addl
ret
fdivs
fcmove
repnz
cli
repnz
in
fidivrl
addl
out
sti
out
test
cli
lds
jmp
xor
lock
neg
out
stc
lock
fucomip
into
f2xm1
out
ret
rcl
fstp
stc
sub
loopne
cld
call
test
fdivs
lret
out
sarb
lock
cmp
fscale
cli
stc
out
enter
out
sub
xor
aam
cli
cmc
fcmove
cld
cmp
icebp
lds
stc
out
out
decl
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
sub
jle
xchg
add
iret
jecxz
jmp
jmp
idiv
icebp
shl
aas
fxtract
out
aam
rcl
in
fmul
mov
lock
fdivp
int3
shr
stc
repz
ljmp
fld
jmp
idiv
rcl
lock
in
cmp
ss
fstp
cli
cmp
sarl
addl
int3
enter
cmc
int3
clc
jmp
in
cmp
aad
loopne
rol
in
in
fadd
int3
int3
std
int3
xchg
mov
stc
fdivrs
clc
sarl
out
test
mov
in
xchg
fimuls
xor
cld
repnz
fcmovb
rcr
out
repnz
stc
mov
test
mov
fnclex
xchg
aad
shr
iret
xor
xlat
ljmp
cld
enter
fcmovne
test
repz
test
clc
neg
cmp
shl
std
rolb
mov
rolb
rcll
xor
cmc
fmul
aam
fld
aam
fadds
fisttpl
in
out
xor
clc
call
sbb
ss
cmp
leave
fcmovbe
or
xchg
mov
rcr
in
out
in
ret
fmul
aaa
jmp
loope
aad
sti
hlt
loope
mov
loopne
out
cld
leave
fiadds
in
loope
cmp
xor
ss
cmp
int
sar
loop
adc
out
loope
fimull
icebp
loope
ss
stc
shr
shl
aas
aad
test
xchg
fdivr
test
xlat
stc
cli
shl
ljmp
fcomi
fidivl
ss
cmp
fstp
mov
inc
out
into
pop
int3
test
in
aam
rcl
cmp
cmp
cmp
cld
shl
cld
jmp
loopne
fsub
in
nop
jecxz
aam
loop
out
rcl
xor
sar
add
lds
in
xchg
xchg
loope
xor
aad
out
int3
ss
loop
hlt
rol
in
cli
mov
iret
jmp
into
in
das
cmc
out
in
loopne
cmp
loop
jecxz
in
fsubp
mov
out
rcl
aad
in
div
lret
sarl
loope,pt
shr
fadd
cld
loopne
leave
inc
int
sti
sub
out
icebp
in
ss
lret
xchg
loopne
testl
mov
xor
fmul
idivb
ss
cld
push
mov
neg
xchg
fdiv
in
mov
clc
rol
cmp
xlat
call
adc
out
mov
call
in
out
ret
int
in
out
int
repnz
std
out
aam
aas
aad
out
mov
sub
out
cmp
cmp
rol
roll
fcmovu
icebp
jmp
addl
repnz
aas
aas
out
in
jmp
nop
fisttpl
ret
xor
icebp
cmc
xlat
shl
fiadds
fsincos
out
neg
cmp
xchg
aad
rcr
call
rcr
in
hlt
repnz
cld
loope
lret
fiaddl
aaa
enter
lds
enter
iret
loopne
testl
enter
rolb
int3
out
call
loopne
jecxz
cmc
mul
in
xlat
out
fimull
ret
repnz
ljmp
fdivp
std
cli
iret
aas
shl
xchg
lret
xlat
orl
jmp
stc
repnz
lock
cmp
fildl
loope
fadd
loope
ret
jmp
xor
cmp
out
call
fcmovnu
shl
jmp
lret
out
into
sbb
xchg
lret
ror
xor
repnz
loope
sar
frndint
in
aad
fsub
aad
out
jecxz
incb
das
cmp
leave
ljmp
icebp
roll
sti
ljmp
mov
int3
jmp
iret
cmp
fcomp
push
frndint
enter
xchg
in
mov
int
repnz
xor
shlb
into
cmp
incb
ljmp
in
mov
out
rolb
jmp
fnstsw
int3
ss
aas
cmp
mov
fiaddl
orl
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
sti
mov
adcl
jle
in
lret
in
xchg
ret
in
cmp
xlat
cmp
cmp
ffreep
sbb
jecxz
xchg
out
fcmovnbe
in
in
jmp
aaa
idivl
fdivp
iret
hlt
leave
call
into
out
in
shl
ret
shl
xor
in
fmul
cmp
hlt
fildl
cld
xor
mov
shl
out
cmp
aaa
repz
lret
int3
fstp
loope
idiv
movl
call
cs
icebp
aad
xor
std
dec
std
fprem
add
rol
out
sub
xchg
out
sar
call
fdivr
fistpll
rcl
cmc
hlt
enter
xchg
in
iret
cld
mov
xchg
in
cmp
repnz
fdivr
adc
sti
loop
enter
mov
xchg
enter
repnz
int3
fidivl
out
cmp
repz
sub
out
iret
in
cld
jecxz
in
cld
int
mov
orb
int
sar
cld
rcr
in
mul
frstpm(287
ljmp
in
ret
nop
loope
mov
xor
fmul
cmc
hlt
aad
in
leave
fucom
ss
into
testl
sti
lock
loope
hlt
rol
rcl
in
cmp
out
xor
ljmp
in
leave
ror
fdivp
shr
jecxz
out
cli
xor
aad
cld
jecxz
test
fldl
loope
test
jmp
out
icebp
cs
xor
xor
cli
fadd
in
repnz
jmp
mov
aam
aam
xlat
jmp
stc
xlat
ror
fcomip
cmp
icebp
fisttpll
out
out
cli
out
icebp
int
cs
idiv
xlat
jmp
jmp
int
in
loope
rcr
in
and
ljmp
fsub
cmp
icebp
rcl
rcr
out
jecxz
sbb
repz
call
xchg
clc
stc
adc
rcll
xor
cmc
std
fldl2t
xlat
rcl
out
fcomip
xchg
lds
cmc
mov
clc
out
cmc
out
cmp
aaa
jmp
aas
ret
in
in
out
in
sbb
jmp
cmc
out
fcom
out
rcr
fildl
jecxz
fmulp
fdivr
dec
in
jmp
addl
sub
cmp
addb
faddl
in
mov
mov
vpsubq
hlt
loopne
cmp
ret
out
stc
loopne
jecxz
or
orb
fcmove
not
test
add
mov
mov
fcmovbe
ss
ss
fcmovbe
fcomp
cli
in
sti
loop
test
mov
cld
loop
xor
mov
cmp
aas
fiaddl
aad
loope
mov
lret
int
sbb
rol
leave
jmp
fdivr
xor
cli
xchg
repz
test
xchg
nop
or
loop
leave
aam
ljmp
int
in
sar
roll
fisttps
rcl
jecxz
jmp
sti
loopne
loope
roll
sub
out
xchg
addl
rol
cld
cmp
shl
loop
xlat
sti
test
cld
in
fmuls
nop
roll
jmp
out
xor
cmp
aas
repnz
lret
cli
jmp
test
out
out
das
hlt
jmp
lock
hlt
xlat
lock
jmp
xchg
repz
ret
cmc
enter
rclb
in
leave
fcmovnbe
aam
ret
ret
out
cli
test
call
xchg
xchg
aam
repz
call
lret
out
cmp
cmc
enter
les
in
aam
jmp
jmp
cmp
shl
sarb
dec
fidivrl
clc
jecxz
test
clc
xlat
sbb
call
fnstenv
out
loopne
filds
ret
xchg
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
mov
aas
add
orb
ror
icebp
ret
ljmp
stc
rcr
rcr
ret
mov
lret
fsubr
xor
xchg
into
icebp
cmp
lret
fdivrl
cmp
xchg
orl
ret
out
std
out
cmp
out
sbb
sub
loopne
test
fmul
cld
leave
jmp
iret
xchg
aaa
in
iret
in
int
jmp
hlt
and
cli
test
ds
xlat
cmp
mov
xchg
repz
out
sarl
xlat
iret
int
int
testl
addl
cld
fcomp
cmp
out
out
ds
shl
test
mov
les
xchg
out
out
cmp
fnstcw
ret
div
fdivr
ret
shl
mov
jecxz
incl
xchg
mov
xor
cmp
cli
out
xlat
ss
xlat
vpand
in
or
jmp
rol
jmp
std
ror
lock
hlt
aas
cmp
cld
mov
faddl
in
xlat
leave
out
shl
hlt
repz
fcomp
into
testl
lret
and
xor
jmp
ljmp
loope
aam
cmp
ds
sbb
lock
sarb
ss
loope
ss
sbb
addb
xchg
aad
cmc
rcl
xor
into
xlat
aas
cli
ds
mov
shl
xchg
popl
icebp
shlb
fnsave
hlt
cmp
fsincos
cmc
incl
into
leave
iret
mov
out
xlat
out
xlat
fsubrp
stc
lret
xor
aad
mul
fsubr
lock
in
incl
int3
sti
in
fcmovnbe
inc
ljmp
aad
fcomp
xor
nop
test
cmp
out
sti
shl
test
loope
jmp
adc
enter
jmp
stc
call
and
shl
cld
loop
decl
call
out
cli
in
cmp
std
shl
cmp
cmp
shl
xchg
iret
xchg
in
repz
lret
xor
sti
fdivrp
loopne
loop
cmp
out
in
call
in
nop
cs
sti
cld
sarl
ds
cmp
hlt
fadd
sar
cmp
neg
loope
lret
enter
loopne
pop
iret
xor
clc
fsub
iret
cld
loope
sub
cmp
in
jmp
out
out
rcr
xchg
mov
cmc
out
jmp
out
xor
lock
lret
cmp
into
icebp
test
cmp
addb
mul
out
fsincos
divl
ds
aas
clc
sub
test
in
sub
adcb
xlat
sti
leave
cmp
shl
in
loope
cld
shl
in
not
loop
enter
iret
cmc
in
ret
fdivr
leave
aam
aaa
stc
sub
push
sbb
xchg
call
fdivp
rcl
aam
int3
int3
clc
shr
cld
sti
rol
ret
les
out
orb
cmc
iret
lock
cmp
cmc
loope
out
loopne
fildl
cli
test
test
lock
in
iret
addl
test
lret
std
fiadds
test
iret
hlt
xor
sti
div
int3
aaa
hlt
fcomip
rol
in
aas
cld
jecxz
ret
shl
ljmp
out
int
std
xlat
aaa
adc
orl
xchg
xchg
lock
not
xor
into
mul
into
fst
rcl
or
lret
mov
out
idiv
fdivrl
enter
xlat
in
in
test
fcmovnu
out
faddp
xchg
clc
out
xchg
in
cmc
xorb
int3
jmp
rcl
lret
sar
aam
repz
clc
cmp
int
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
lea
mov
jle
ljmp
in
das
das
jmp
cmp
jmp
cli
ror
icebp
fidivrl
rol
fst
mov
decb
mov
out
mul
fxch
aad
loopne
jecxz
out
int
ret
clc
test
cld
jmp
int3
mov
int
repnz
cmp
ljmp
cmc
stc
fst
rcl
fdivrp
cld
test
xchg
xchg
aam
lret
std
div
cmp
loope
shl
iret
loop
les
iret
orl
loope
das
stc
xlat
shl
cmp
lret
test
cli
test
jmp
shrb
cs
out
idiv
fucomi
ds
cmp
repz
aam
fucom
test
into
nop
int3
fdivp
out
in
out
lds
sti
sarb
addb
jmp
ljmp
iret
xor
jmp
divb
xlat
aad
hlt
rol
fcmovbe
orb
iret
jecxz
into
das
ret
sub
stc
jmp
roll
ret
enter
test
xchg
loopne
clc
fdivrs
rcr
iret
fidivrs
leave
shl
inc
fdivrp
leave
cmp
call
lock
xor
xlat
out
fdivs
cmp
aaa
cmp
fnstcw
clc
out
ret
mov
add
out
sub
aad
test
cmp
into
cmp
fistpll
cmc
fucomip
dec
iret
test
loop
in
int3
repz
clc
iret
sub
sub
out
rcr
xlat
loope
in
loopne
mov
jmp
cld
mov
into
enter
xor
in
test
sarb
mov
fimuls
mov
loope
mov
loope
iret
fcom
in
cmp
loope
aam
cmp
test
xchg
xchg
icebp
call
cli
xor
aad
cmp
jecxz
iret
stc
mov
incl
loope
stc
lret
in
std
lret
cmp
stc
clc
div
int
repnz
cmp
clc
cmp
repz
and
icebp
mov
fidivl
aam
repz
cmp
sar
rcl
jmp
lret
lret
int3
fcmovne
loop
call
stc
ss
ss
divl
cli
aas
jmp
stc
repz
cmp
out
xchg
into
rorb
cmc
les
cmc
sar
sbb
fdiv
fmuls
sub
repz
rcl
in
leave
sarl
in
jmp
faddl
repz
int3
out
xchg
nop
in
rcl
xor
mul
aaa
ljmp
jecxz
cmp
aad
in
cld
cld
loope
leave
rorb
leave
icebp
cli
jmp
cmp
loope
xlat
out
rcr
xlat
loope
stc
in
mov
repz
mov
repnz
xlat
fidivs
ds
stc
rcl
not
in
addl
shr
loope
aad
out
jmp
fcmovnb
loopne
loope
in
ds
xor
loope
out
aas
stc
adcl
in
jecxz
call
fdivl
icebp
cmp
ret
fcmovnb
in
jmp
test
test
jecxz
aad
aam
lret
in
fcomip
int3
xor
cmc
sub
clc
cld
test
xlat
fmuls
hlt
hlt
in
xlat
int
ljmp
sarl
sti
in
in
xchg
out
lret
mov
ret
cmc
lret
cmc
cs
aas
fdivp
shl
clc
lret
mov
cld
jecxz
addl
sti
stc
fidivrs
inc
cli
out
out
cmp
sti
xchg
filds
std
cmp
addl
out
cld
enter
fucom
ror
das
ss
xor
ds
test
fcomp
out
loope
clc
cmp
fdiv
loop
in
out
vpxor
std
iret
in
sarb
shr
cmp
mov
fneni(8087
addb
std
lock
pushl
lret
icebp
out
aad
aas
rolb
shl
call
inc
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
xchg
jle
aas
add
mov
rcl
jecxz
lret
imul
int3
std
and
repnz
sti
cmp
lret
fmull
iret
sub
out
cli
aam
cmp
push
loopne
stc
in
or
cld
ret
test
jmp
test
enter
mul
rcl
aad
ljmp
std
jecxz
mov
fdivrp
fcoml
int3
out
rcl
fucomp
cmp
icebp
cmc
xlat
cli
mov
int3
fdivr
iret
iret
ret
ljmp
shlb
hlt
icebp
fcmovne
int
sub
cmp
fiadds
mov
les
in
sarb
lock
lock
sti
lock
repz
out
in
ljmp
cmp
not
xlat
cmp
not
cmc
cmp
loope
cld
call
leave
xchg
cmc
sub
jecxz
out
fcmovnu
cmp
std
idiv
fucomp
clc
sti
fst
jmp
ret
lret
rcl
xchg
shll
cmp
out
jmp
fst
fndisi(8087
fdivr
lds
inc
in
loop
fbstp
lret
out
stc
cld
cmp
fcmovnb
int3
idivl
in
add
cld
jmp
in
xchg
loope
out
orl
icebp
fucompp
cli
loop
cld
test
mov
and
int
fucomi
jmp
loop
clc
test
cmc
int
test
ret
rol
in
cmp
shl
into
loopne
lret
out
jmp
ljmp
loope
fldl2e
enter
test
leave
dec
sub
ret
enter
loop
test
into
aad
test
jecxz
loop
xchg
cmp
lret
filds
leave
in
cli
ror
enter
in
rcl
addb
out
in
xchg
dec
out
cmp
cmp
cld
fmul
out
divb
addb
mov
mov
stc
mov
std
mov
aam
fsubr
lock
cmp
aas
mov
fadd
testb
fidivs
lret
xor
lret
cmp
fidivrs
rolb
loope
neg
in
popl
mov
xchg
rcl
sti
iret
ss
ss
add
aam
inc
out
int
out
incl
shll
iret
xlat
int
lret
cmp
cmp
test
clc
sti
xchg
lret
out
in
repz
aaa
xor
xor
enter
jmp
lock
shl
shr
loope
lret
xchg
mov
repnz
cmp
enter
cmp
in
in
in
test
clc
or
xchg
test
in
jmp
loopne
in
out
clc
cld
jecxz
stc
inc
xlat
mov
flds
nop
test
lret
cmc
cmp
leave
out
out
stc
in
sti
int3
in
iret
adc
fcomi
in
addb
jmp
fscale
in
xor
aas
shlb
icebp
rol
ror
sbb
in
int
xchg
repz
xor
cmp
aam
rol
aam
sti
cld
aad
enter
xchg
out
xchg
xor
ss
repz
xlat
out
out
not
rolb
fucomi
loope
nop
loop
repnz
aam
clc
cmp
fsubp
cmp
aad
xchg
rorl
icebp
fsubrp
mov
adcb
into
out
lock
cmp
roll
xlat
sti
out
in
int
ljmp
fdivs
loope
repnz
repnz
loop
call
in
xchg
fdivr
orb
xlat
clc
fst
cmp
not
ffree
aas
repz
mov
xchg
std
cmc
jecxz
jecxz
into
stc
shlb
repz
lock
xlat
out
sarl
call
in
and
call
or
cmp
ljmp
into
fiadds
mov
xchg
xlat
lock
in
lock
iret
inc
filds
lds
incb
add
adc
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
push
mov
jg
inc
jle
aas
add
lret
lret
in
mov
in
jecxz
cmp
into
cmp
loope
icebp
xlat
iret
shl
fcomp
jmp
ljmp
xor
xor
cli
lret
loop
sti
in
std
cmp
aam
stc
loopne
in
addl
jmp
aam
ljmp
addb
mov
xchg
mov
leave
ret
xor
div
leave
out
fdivp
ds
fidivrl
jecxz
fptan
std
fsubrp
loopne
clc
icebp
std
mov
rolb
xor
xor
cmc
test
cmp
jmp
vphadddq
shl
sti
stc
cmp
fcmovnbe
clc
lock
loope
ffreep
rcl
hlt
enter
jmp
in
orl
aad
out
rcl
shl
cmp
out
fmul
lock
call
repz
cli
lret
rcr
cli
ret
std
call
addl
add
cli
cli
fdivs
iret
cld
rcl
cmpb
out
aam
jmp
test
in
das
call
clc
in
clc
jmp
cmp
out
fimuls
enter
mov
stc
xor
int
aam
loop
repnz
sar
std
aad
into
call
std
in
enter
out
out
cmp
testb
std
lret
addb
xchg
xchg
ljmp
hlt
out
icebp
fcom
shl
repnz
fsubp
repz
mov
leave
xchg
mov
ror
xor
leave
fsubr
fcomp
cmp
hlt
cli
repnz
xlat
xlat
cli
sbb
lret
orb
out
sarb
fmul
jmp
loope
fdivr
stc
cmpb
fistl
aaa
ret
loop
into
lret
idiv
enter
int
cmp
test
into
std
out
out
frstpm(287
movl
sti
std
idivb
cmp
fcmovbe
inc
cmc
cli
not
loopne
jmp
ror
call
sub
xor
out
cmc
cmp
faddl
std
clc
xchg
loope
fabs
lret
mov
lret
xor
lret
sarb
cmp
ss
not
clc
add
out
rclb
loop
rcr
cmp
in
neg
clc
xor
aad
iret
test
mov
aas
mov
sar
orl
int
aaa
aas
sti
shr
ror
repnz
in
jecxz
in
out
addl
repz
cmp
loop
ret
loopne
jmp
lret
fildl
lret
fsubr
out
cmp
in
into
fdivrs
orb
fucomip
mov
jecxz
aad
rcr
hlt
xor
cmp
std
out
fst
cmp
std
ljmp
ljmp
out
in
icebp
int
sub
xlat
aas
ljmp
stc
addb
int3
icebp
ss
in
std
ret
fadd
out
cld
xlat
movl
repz
stc
cmp
repnz
cmp
cmc
fnstcw
cmc
cmp
rorl
jecxz
xchg
int
lock
loopne
ret
repz
cmp
lret
int
cmp
adc
ljmp
loopne
cmc
in
test
fnstenv
int3
test
out
fildl
test
mov
int3
xor
int3
shr
cmp
int
aam
cmp
in
fst
lret
out
loopne
enter
div
cmp
icebp
fstpt
jmp
shl
aad
out
sub
les
mov
xchg
aam
repz
mul
shll
in
loop
fmulp
lock
mov
lret
std
repz
mov
lret
lock
cld
repz
ljmp
clc
xlat
cmp
and
hlt
shl
leave
jmp
ljmp
orb
loop
subl
or
pop
jns
add
xor
add
inc
clc
and
inc
lock
test
inc
add
or
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
lret
in
xor
fcmove
cmp
in
shlb
sub
cli
loop
fcmove
hlt
shl
vpaddusw
xor
xlat
cli
lret
loopne
cmpb
jecxz
cmp
fcmovu
loop
sub
test
out
in
iret
cmp
jecxz
jmp
ret
repz
cmpl
call
jmp
xor
xlat
repnz
stc
fcmovnbe
sub
test
cld
xchg
call
out
jecxz
jecxz
in
fadd
lret
iret
cmc
icebp
hlt
aas
sbb
fnsetpm(287
orl
out
loope
test
std
testb
cs
out
fnstsw
cmp
rol
loopne
aam
loop
ljmp
repz
out
icebp
inc
int
lret
in
lret
jmp
xlat
fcom
sbb
ljmp
rcll
stc
cmc
fadd
cmp
cli
in
sub
fsub
xchg
lret
xchg
into
loope
mov
das
xor
cli
in
cmp
fsub
leave
cmc
in
rcl
in
cmp
aas
ret
addb
rcl
xor
rol
cmp
hlt
ss
lock
filds
test
xchg
loope
out
loope
cmp
fcmovnu
clc
out
testl
enter
mov
and
addl
sti
into
lret
fcmovne
and
xchg
loope
in
loop
fistl
ret
std
ror
call
ror
xlat
test
mov
lret
jmp
fdiv
std
mov
ret
les
icebp
icebp
cmp
fcomip
fcmovbe
fcom
xlat
out
leave
fisttpl
fisttpll
ret
icebp
jmp
cmp
rcl
adc
cmc
cmp
dec
ljmp
aad
ret
lret
cli
aaa
leave
call
idivl
lret
fcomip
rcr
fildl
lea
fdivp
mov
test
in
ror
cli
rcl
fcmovnu
roll
cli
fiadds
nop
iret
xor
call
int3
cmp
rol
fcmovnu
loopne
out
cld
out
test
fsub
out
call
sti
test
aam
lock
aaa
cmc
int3
frstpm(287
xchg
out
xchg
div
xchg
loopne
in
in
cmc
test
leave
in
xor
lock
aam
cli
out
out
test
lret
fcomp
clc
lret
mov
into
ss
aas
icebp
xlat
rcl
clc
clc
fcomi
jmp
loopne
mov
aam
xor
fidivrl
lock
fistpll
hlt
stc
out
fxch
int3
mov
lret
popl
cmp
aaa
call
ss
ror
in
loope
fcmovu
mov
adc
in
rol
clc
sub
sub
cmp
cmp
clc
rcr
repz
fcmovnu
out
test
mov
xchg
xor
ror
repz
xor
int3
ljmp
fadd
aam
jmp
test
in
xchg
in
aad
out
hlt
stc
xor
out
shl
icebp
ds
aas
shr
aam
clc
fmuls
nop
mov
in
cmc
lret
std
jmp
rcl
lds
lret
leave
out
fstp
sti
adcl
hlt
in
call
cmc
not
cli
fldl
ljmp
call
cmp
int
ss
jmp
fcom
fnstcw
les
leave
in
xchg
mov
xchg
enter
leave
cmp
xor
iret
aam
stc
cmc
ret
jmp
roll
in
hlt
call
fdivl
xlat
testl
jmp
repnz
int3
iret
call
repnz
out
hlt
fcmovu
cmc
jecxz
loopne
clc
fcomi
add
jmp
in
mov
in
xor
lret
out
in
xchg
test
jmp
fists
hlt
aam
fdivr
aaa
sti
div
repz
fcomp
fst
clc
mov
in
out
orl
or
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
nop
rcr
dec
jle
aas
add
ljmp
sub
ds
int
fsubrp
out
shr
call
ljmp
aad
rcr
xor
xor
into
xlat
std
in
adc
stc
leave
ret
mov
mov
ss
in
out
xor
stc
stc
sti
loop
in
jmp
faddp
loopne
ficoms
ret
lret
sti
cmc
in
sti
hlt
loopne
aad
cmp
rol
mov
rorl
xor
int
repnz
aaa
call
fnstsw
cli
repz
sbb
lret
enter
loopne
incl
lock
cmc
ss
ljmp
clc
and
mov
and
repz
int3
loop
ss
aam
xor
cmp
in
roll
fyl2x
shl
or
mov
ror
rcl
cmp
loop
int
repz
cli
xchg
lret
int3
in
into
jmp
bnd
xor
ds
cli
hlt
in
cmp
clc
int3
cli
out
iret
fcoml
imulb
int3
iret
cmp
ss
out
hlt
in
in
les
test
mov
ror
int
fsubrp
loop
icebp
icebp
out
out
cmp
roll
xchg
roll
into
sti
repnz
shr
not
repnz
fcom
iret
icebp
sarb
std
sti
aam
sti
cld
out
mov
fisttps
ret
out
fld
xor
loopne
cli
repz
repz
test
mov
loopne
lret
flds
out
cmc
lock
int
ljmp
fld
out
rcl
jecxz
mov
jecxz
ljmp
icebp
cmp
shll
ljmp
fadd
ret
rcl
test
shr
leave
enter
mov
clc
int3
out
out
cmp
lret
ror
loopne
xlat
repz
test
mov
neg
out
lds
xchg
fstp
fmulp
rol
int3
aad
in
aas
out
decl
fcmovnu
orb
ret
jmp
leave
into
shl
roll
mul
imul
orl
repz
jecxz
int3
clc
sti
push
in
loope
test
in
dec
cld
in
ljmp
mov
xlat
ss
iret
test
shl
in
jecxz
hlt
cmp
leave
in
mov
shl
or
enter
call
aad
cmc
loopne
jecxz
cmp
jmp
mul
fsub
xchg
in
iret
call
into
call
lret
fcomi
fadd
addb
stc
cld
cld
shr
fucomip
xchg
xor
shl
jmp
aad
fdivr
aaa
loop
fildl
jmp
mov
shr
xor
cli
sti
xlat
ror
repnz
out
sti
sti
cli
mov
neg
in
enter
enter
rcr
jmp
aaa
sti
repz
repz
icebp
rcl
icebp
ds
fdiv
xlat
testb
lret
out
ljmp
cmp
fsubr
aas
neg
jecxz
adc
out
ljmp
rol
int3
ss
cmc
std
cmp
ror
clc
in
rolb
in
ret
lret
mov
mov
fst
repz
loop
mul
call
loope
loop
rolb
ljmp
mov
xchg
loope
test
xor
stc
cmc
hlt
stc
lock
cmc
add
lret
fimuls
test
repnz
shl
hlt
cld
lock
sbb
rcr
sti
hlt
mul
fcmovnb
out
mov
xchg
xchg
call
cmp
jmp
rol
clc
clc
jmp
cld
fucomp
lret
mov
dec
jmp
hlt
jmp
out
cld
add
fidivrs
mov
loope
cmp
mov
out
cmp
clc
out
hlt
cmp
ret
fstp
loopne
cli
stc
loop
int
ljmp
cmp
into
lock
cmp
rcr
loopne
adc
ret
aad
aam
test
mov
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
fisubl
jp
push
jle
aas
add
xchg
mov
ljmp
cmc
cmp
roll
test
in
lock
cld
loopne
ljmp
hlt
aaa
div
std
cmp
xlat
in
test
cli
addl
mov
xchg
in
in
xlat
hlt
in
cmp
ss
cmp
test
ret
enter
xor
xorl
xlat
enter
int3
lret
int
fincstp
cld
clc
mov
in
mov
nop
out
mov
ret
shr
xor
int3
call
xor
std
cld
call
out
fdiv
out
mov
icebp
enter
jmp
aad
idiv
loopne
cmp
lret
xchg
mov
fmulp
rol
xor
cmp
call
hlt
out
rcr
flds
ficoml
repz
das
xor
frndint
ffree
pushl
xlat
xlat
xlat
hlt
fcmove
jmp
xchg
out
dec
sub
int3
divl
xlat
cmp
repnz
cld
enter
into
sbb
int3
out
out
repnz
icebp
fmulp
div
sarl
hlt
shr
enter
testb
mov
jmp
cmp
stc
hlt
jecxz
loop
out
test
fadds
sti
jecxz
repnz
ret
fxch
aad
enter
shr
ror
jecxz
test
stc
test
xlat
jmp
loopne
in
mov
in
enter
call
cmp
int
cmp
bnd
out
int3
mov
call
hlt
out
lock
in
out
cmc
xor
fdivp
rcr
out
mov
fstp
leave
inc
roll
icebp
iret
cli
ds
ljmp
decl
mov
enter
loope
in
xor
xor
jmp
in
in
fnstcw
fsubp
ret
mov
out
shr
iret
xlat
in
leave
sti
lret
fstp
fucomp
in
std
aam
std
leave
fldpi
fcmovne
out
int
and
lret
into
int3
ljmp
loope
add
inc
mov
int3
lret
out
test
out
sti
iret
rorb
cmc
into
cmp
fchs
cmc
cli
flds
idiv
cmc
stc
mov
xchg
adc
repz
xor
repz
fcmovnbe
in
loope
filds
xlat
mov
stc
lret
jmp
xchg
xor
leave
out
loop
icebp
test
hlt
mov
std
shl
repnz
cs
call
out
lret
aam
in
stc
xlat
cld
ffreep
lds
hlt
into
mov
aad
enter
idivl
cmp
repnz
repnz
fsubrp
jmp
decl
jmp
rorl
shll
cmp
test
loopne
in
fdivp
jmp
fisttps
aaa
lock
xor
div
dec
cmp
loope
xlat
mul
fdivp
mov
mov
rcl
hlt
xchg
hlt
aam
cli
out
rcl
cli
clc
repz
aam
in
hlt
xchg
addl
iret
cmp
fmul
cmp
leave
cmp
filds
fsub
lock
fisttpll
jmp
fcmovnu
fnstenv
cmc
cmp
cmp
hlt
fnsetpm(287
xlat
cld
cmc
sbb
out
nop
mov
mov
shl
shl
call
ror
fstpt
testb
sarb
int
out
in
dec
cli
in
divb
not
cmp
call
xchg
repnz
aam
lret
xabort
cli
cld
mov
out
leave
jmp
out
jmp
fcom
enter
fidivrl
idiv
xchg
mov
xor
cmp
les
addl
in
fucomip
ljmp
xlat
sti
aaa
ds
fucomip
test
jecxz
xlat
mov
fimuls
aad
xor
hlt
aaa
out
enter
cmp
test
mov
lret
clc
loop
jmp
xor
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
ljmp
jmp
leave
rcl
stc
shr
cmp
cld
out
in
mov
addb
int
iret
out
std
loope
aas
out
shl
cld
loop
out
lock
out
in
xor
call
aam
xchg
jmp
xchg
enter
jecxz
repnz
imul
fcmovnb
repnz
cmp
cld
mov
imul
mov
jecxz
loop
xchg
icebp
lock
jecxz
jmp
out
lret
ret
sti
fisttps
stc
test
icebp
ret
ss
aam
enter
neg
aam
aas
inc
fimull
sti
mov
xchg
xchg
out
xor
fcmovu
ds
icebp
incb
aam
stc
out
iret
in
xchg
xchg
repz
idiv
cmp
cmp
fidivrs
loope
pext
in
leave
cld
ffree
enter
mov
cmp
cmc
stc
out
idivl
out
loop
cmp
jecxz
sti
loop
in
loop
iret
mov
sub
fsubr
cmp
cmp
shl
cmp
cld
cli
aam
clc
in
aad
lret
in
aam
enter
imul
cli
clc
aaa
sti
ror
mul
shr
aam
call
mov
loop
out
fsubr
cmp
repnz
cld
sbb
repnz
sti
stc
loope
in
stc
into
sti
test
lret
fcomi
int3
lret
aam
icebp
ds
mov
std
aam
dec
lock
into
icebp
in
jmp
in
out
cmp
in
cmp
fcmovbe
cmp
out
fdiv
sbb
lds
mov
in
int3
iret
lock
rcr
aad
ljmp
test
enter
mov
lret
xor
leave
jmp
neg
xlat
jecxz
test
xlat
and
int3
loopne
jmp
ret
ljmp
icebp
sti
shl
sar
adc
fisttpl
lock
xor
fldt
fmul
aad
cmpl
in
in
roll
das
out
lret
jmp
call
cmp
loopne
rcl
loop
leave
jmp
clc
cli
and
enter
sarb
loopne
sar
cld
xchg
xor
faddl
or
lock
xor
ljmp
lret
icebp
ret
jecxz
in
sbb
in
lock
test
in
rcr
into
fnsave
loope
rcr
int3
fnstsw
sbb
jmp
in
mov
cmc
int3
aaa
in
aam
in
cmp
out
or
cli
rcr
repnz
int3
iret
iret
test
int3
ret
jmp
lret
ss
aaa
xlat
filds
loope
incb
out
rclb
jmp
xor
cmp
mul
lret
jmp
mov
mov
int3
clc
shll
lret
out
incb
not
cmp
xlat
mov
clc
in
xchg
in
test
mov
in
out
sar
out
shl
aam
cmp
clc
jecxz
ffree
adc
dec
jmp
repnz
test
lret
repnz
fcomi
enter
mov
sub
mov
shr
ljmp
cmp
ss
fadd
out
iret
ret
loopne
cli
test
xlat
fsubp
leave
xchg
rcl
repz
das
icebp
ss
cli
lock
cmp
int3
out
loop
mov
cmp
sti
rorb
xor
sarb
idivb
sarb
aad
cmp
call
aas
aas
xchg
test
xchg
xor
in
in
or
cmp
movl
rcll
ret
clc
out
xor
rcr
loope
test
aam
fcmovb
movb
lret
cmc
in
mov
ret
jmp
lret
leave
adc
xorl
iret
jmp
jmp
iret
in
xchg
xor
jmp
int
vpaddusw
fstp
pop
mov
outsl
outsb
stos
loope
ficomps
jle
add
repz
into
repz
rcr
cmp
shl
in
test
fsubp
in
mov
lret
fprem
cmp
jecxz
cmp
repnz
mov
orb
fcmovnu
cmc
int3
fadd
into
rcr
stc
clc
out
jecxz
mov
fdivp
fdivr
xor
clc
aad
loope
shl
xchg
fsubp
loopne
jmp
ss
cmp
aad
addb
fdivp
fiaddl
shr
out
ljmp
fmulp
out
enter
ret
cmp
rorb
mov
cmp
in
xchg
jmp
clc
ss
in
out
xor
shl
fdivr
aam
fidivrs
shl
hlt
mov
loopne
in
mov
int3
in
into
in
cmp
xor
fsub
loop
or
into
decb
in
in
jmp
fcmovnb
rcl
clc
into
cld
lret
sar
sbb
xlat
aam
ret
stc
in
stc
out
fdivr
mov
cmc
aam
lret
in
imul
std
int
clc
cmp
ret
aad
xlat
mov
lret
jmp
jmp
aad
xor
lock
sti
cmp
hlt
stc
stc
in
f2xm1
cmp
hlt
std
in
mov
lock
jmp
aas
shlb
fsubr
cmp
fistpll
rcr
loopne
xchg
fildl
into
in
mov
shl
sub
aad
xlat
std
out
in
sar
adc
rol
mov
fmuls
fldl
xor
xor
xor
fucomp
out
add
out
in
cld
faddp
mov
in
ljmp
cmp
enter
ljmp
repz
in
loop
out
xchg
int3
fucomi
int
leave
sar
loop
in
fcom
in
orb
jmp
icebp
in
out
xor
xor
in
lock
fidivrl
neg
in
in
in
in
xchg
call
leave
sub
clc
cmp
in
aad
repz
aas
out
loopne
mov
icebp
enter
out
aas
int3
repz
enter
ss
ds
ffree
idiv
cmp
neg
xchg
out
int
hlt
xor
out
lret
call
call
ds
icebp
lret
les
in
icebp
repz
cmp
loopne
sar
fucomip
aam
iret
icebp
test
add
xchg
cli
mov
fsub
ljmp
loopne
cmp
sar
repnz
fscale
out
fsubrp
out
mov
rcl
hlt
loopne
jmp
les
decb
test
jecxz
vpsubw
ffree
iret
icebp
in
or
ret
test
mov
lret
decb
into
rol
repnz
loope
jmp
sti
shl
loop
incb
loop
fcoml
xor
iret
lock
neg
rcl
idiv
ret
hlt
mul
test
fiadds
out
jecxz
cmp
aaa
out
in
out
repnz
jecxz
test
jecxz
mov
loopne
leave
repnz
lret
in
test
in
repnz
jecxz
cli
imul
int3
mul
clc
sub
jmp
std
sub
leave
cmp
cld
out
cmp
cmp
loope
out
aas
jecxz
sti
jecxz
std
xchg
in
ret
into
out
shl
int
iret
iret
fdivrp
lock
enter
mov
mov
in
aad
clc
clc
cmp
lret
lret
hlt
lock
repnz
leave
out
fucom
fmuls
jmp
out
loopne
lock
sti
std
repz
test
loope
fildl
out
repz
lock
aaa
rcl
cmp
loopne
clc
cli
rcl
cld
test
in
int3
xchg
mov
aaa
in
ror
or
clc
mul
test
sbb
loop
mov
lea
lret
add
jmp
fcom
xlat
push
xlat
outsb
rcr
add
jle
add
xor
xor
cmp
fdiv
shl
iret
sbb
fcmovu
std
loopne
iret
mov
in
out
int3
neg
fnsave
sub
repnz
fcmovnb
loope
lock
iret
icebp
iret
jmp
lock
sarl
cmp
hlt
in
out
mov
test
mov
fmulp
into
in
xchg
sarl
sub
jmp
cmp
fcmovbe
fcmovu
xchg
jecxz
iret
fisttpl
sub
out
call
sar
leave
ret
cmp
adc
call
mov
rcl
lea
loop
int
fldlg2
fmul
icebp
cmp
not
ret
ret
shl
jmp
fimuls
lock
aam
das
lock
xor
lock
out
faddp
lock
out
aam
clc
out
test
out
rclb
lret
out
leave
cmp
shl
cmc
loop
repz
sti
and
sbb
into
out
ffreep
xor
not
out
int
std
sti
cld
cmp
rolb
xchg
hlt
icebp
mov
shl
iret
repz
jecxz
cmp
cli
lret
jmp
repz
leave
xor
in
cli
cli
test
not
cmp
jecxz
out
out
leave
int3
aam
mov
aam
ss
aaa
out
repnz
xlat
addb
lret
out
mov
out
mov
jmp
jmp
idivb
out
divl
ret
fdiv
shr
sbb
sub
ret
xchg
lret
in
jecxz
cmp
cmp
cmp
aam
adc
ret
lret
out
ret
jmp
loope
sti
cli
std
into
ds
fstp
icebp
fistpll
sbb
test
lret
xchg
frstpm(287
test
mov
loopne
jmp
aad
test
lock
icebp
cmpl
jmp
std
in
addb
ss
cmp
aas
fildl
xchg
jmp
xlat
jecxz
mov
out
mov
ss
cmc
lds
test
in
fcmovb
mov
fcom
mov
stc
into
and
mov
loop
int3
xor
lret
std
aad
loope
out
in
cmp
clc
sti
lret
fcmovnb
in
lock
shl
ljmp
cld
aam
iret
cmc
int
frstpm(287
frndint
mov
xchg
hlt
out
jecxz
rcr
repnz
cs
out
lret
fcom
adc
aam
inc
loope
xlat
test
std
test
into
lock
cli
std
lret
ret
test
fimull
std
fildl
call
cld
aaa
hlt
in
repz
cmp
icebp
iret
xrelease
repnz
stc
call
xchg
shl
in
cmp
aas
iret
ds
in
fadds
sub
subb
xor
out
cli
jmp
cmp
loope
rol
fdiv
ret
test
fchs
fdivp
xchg
xchg
in
int
cs
test
das
out
call
ret
repnz
lret
test
cli
fneni(8087
icebp
in
out
xchg
jecxz
cmc
sti
in
int3
sarb
rcl
roll
roll
int3
xchg
jecxz
int
aam
aam
xor
std
cld
leave
aaa
std
in
ret
loopne
in
sbb
clc
push
in
sti
cld
cmp
shr
in
out
lret
ss
loop
loopne
clc
cmp
ret
testl
out
fldl
lret
cmp
aas
loope
loop
loope
sarl
fcomip
icebp
xchg
loope
stc
clc
repz
neg
xor
xor
lock
adc
icebp
cli
jmp
in
iret
test
loopne
repz
loopne
repnz
out
ss
cmp
fstp
xor
mov
leave
in
fucomip
std
xchg
testb
cmp
aas
aaa
shl
ret
icebp
ds
cmc
enter
mov
clc
int
shr
jmp
sub
xor
fmulp
clc
hlt
ret
cmp
loopne
mov
nop
aad
fsub
cmp
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
xlat
loope
pusha
popa
jle
aas
add
in
lret
cmc
fldl2t
addb
roll
in
mov
repnz
ror
aaa
out
out
lock
out
cli
sti
stc
testl
int3
fildl
shl
in
sub
das
aaa
cmp
xlat
rcr
cmc
cmp
aam
fucomp
xlat
rcl
cmc
addb
xchg
lret
divl
repz
in
aas
hlt
xlat
repnz
frstpm(287
mov
out
std
lret
or
jmp
into
xor
in
hlt
hlt
iret
std
ret
cld
ret
aam
cli
xchg
in
ljmp
shr
stc
shl
cmp
fucomp
frndint
aad
cmp
out
movb
mov
xor
loop
enter
leave
in
cmp
test
loopne
and
aad
xchg
xor
rolb
shl
aam
icebp
loop
fiadds
xchg
lret
fucomp
cld
fcomip
std
testb
std
icebp
adc
stc
rcr
mul
repz
cld
aad
iret
nop
ret
xchg
ret
out
leave
fscale
std
cld
loop
roll
call
lock
loop
in
jmp
lret
aad
stc
ret
ret
std
rol
loop
lret
addb
sub
fcmovnbe
stc
rcr
out
fcmovb
cmc
cmp
mov
cli
jmp
loope
loope
iret
xlat
enter
in
icebp
lret
idiv
loope
loope
faddl
fimuls
out
shlb
int
jmp
sti
icebp
neg
cmp
hlt
cmc
in
lret
xchg
lock
cmc
leave
aam
xor
cmp
repz
jmp
shl
loop
neg
out
jmp
fsubrp
in
repz
lret
fistpll
ds
cmp
test
enter
stc
ljmp
out
loope
sub
cmp
out
out
stc
addb
sar
fadd
test
xchg
icebp
aad
shl
cmp
xor
cmp
ret
out
ljmp
lret
sub
jmp
call
int
rcr
ret
out
mov
and
call
in
lret
iret
aad
lret
out
stc
in
cld
hlt
shr
fmul
stc
loop
xchg
ret
xchg
lret
ds
fadd
ffreep
xchg
mov
xchg
aam
das
xor
cmc
cmp
loope
rcl
push
ret
ret
in
cli
out
loopne
in
xchg
in
into
in
cmc
in
aam
not
or
xbegin
out
loope
out
xchg
out
repnz
sti
lret
call
int
test
hlt
mov
enter
lret
std
jmp
xchg
xchg
cmc
int3
fnstenv
clc
cmp
xor
lret
hlt
cld
aas
call
int3
movb
loop
xchg
into
enter
xor
fnstenv
repz
clc
cmp
out
xlat
ret
sar
out
loop
std
cli
xchg
nop
hlt
int3
int
call
xorb
out
fsub
loope
ret
enter
int
orl
imul
shl
aad
addb
repnz
call
int3
and
jecxz
jmp
jecxz
lret
leave
cmp
shl
ret
incl
dec
iret
test
fst
mov
xlat
in
jmp
rol
and
aad
clc
out
enter
fsubp
xchg
xchg
repnz
shll
fnstcw
fsub
xlat
test
fnstcw
fcmovu
repz
and
cmp
out
loopne
xchg
shr
cli
jmp
divb
rcr
cld
iret
sar
fucom
call
xchg
lret
lea
aaa
in
repz
ljmp
jecxz
fprem1
leave
out
lret
sti
adc
in
ljmp
fnstsw
xor
loopne
clc
loop
fstp
xchg
lret
inc
divl
into
out
out
rcl
loop
fstp
cmp
idiv
incl
test
in
ljmp
mov
add
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
jae
inc
pop
and
jle
add
iret
sub
fcomi
cmpb
testb
mov
shl
xor
icebp
cmc
fdivrp
xlat
cmp
mul
icebp
jecxz
filds
into
fcomp
xor
xchg
int
rol
into
sti
cmp
push
aad
loopne
aam
mov
leave
int3
stc
test
into
mov
in
xor
int
repnz
fdivrp
int3
flds
leave
test
fdivr
iret
iret
xor
cli
loopne
rcr
out
int3
xlat
fcomi
neg
loopne
out
fdiv
enter
xchg
out
xor
xor
cmc
repnz
clc
cmp
out
loope
cld
jecxz
dec
ljmp
xor
aad
ds
loope
testb
mov
jecxz
aad
loop
div
call
cmpl
xlat
iret
imul
aad
clc
in
mov
out
xchg
mov
mov
int3
xlat
aad
sti
jmp
cli
sub
lock
adc
and
loop
lret
call
cmp
incb
out
call
xchg
cs
aad
jmp
fstpt
shl
xlat
xor
shl
sbb
or
mov
enter
ljmp
div
rcr
repnz
icebp
cmp
repnz
neg
mov
cmp
faddl
hlt
lret
ror
shr
in
cmp
int3
xor
jecxz
rcl
loope
idiv
jmp
fadds
fdivp
sub
imulb
les
repnz
rol
aas
rol
loope
cmp
leave
jmp
nop
out
ror
int
cmp
iret
fscale
sbb
iret
fsub
ffree
ret
jecxz
enter
fisttpll
xlat
loop
repz
shlb
cmp
fcmovnb
aas
fildl
xchg
out
std
jecxz
iret
xor
enter
cmp
lock
iret
call
jmp
icebp
fsubr
addb
into
clc
leave
cmp
shr
cmpb
xlat
and
ljmp
aam
dec
iret
stc
clc
out
fucomp
xlat
aam
loope
sar
sbb
fiadds
in
loopne
mov
aad
into
fdivrp
imul
leave
ror
shl
fildl
jecxz
out
xlat
loopne
leave
xchg
test
jmp
bnd
test
fdivrs
rolb
stc
mov
int3
out
out
lock
cs
div
cmp
fcomi
test
out
call
ror
hlt
in
loopne
neg
fdivrs
int
shl
loopne
fdivrp
xchg
call
loopne
xchg
repz
cli
lret
into
fcomp
out
addl
loopne
loop
mov
in
fsubrp
xchg
jmp
addb
fucomip
aad
loop
lds
nop
not
out
fmul
cmc
into
out
fcomip
int
xlat
cmp
ret
jmp
rolb
xor
out
cmp
cmp
enter
cld
fldl
in
xlat
in
clc
ljmp
lret
into
fyl2x
ss
cmp
xor
cmp
ret
cli
test
test
test
test
enter
out
imul
in
ror
rcr
fcomi
aaa
clc
aas
in
out
aam
int3
jmp
rcr
mov
leave
ret
repnz
call
aas
rol
aad
stc
dec
cld
fnstcw
addl
in
loope
shll
cmp
in
in
cld
fcmovu
fnsetpm(287
rcr
aad
mov
loope
add
faddl
xor
out
int3
xor
roll
clc
repz
fcom
mov
loopne
in
mov
loope
leave
lock
divb
cmp
rol
aam
fsub
fdivr
fildl
out
jmp
out
ljmp
sti
lock
ds
aas
in
int
mov
icebp
jecxz
loop
repz
out
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
fdivs
jle
add
std
sarl
hlt
sti
into
cmp
fcmove
mul
test
fildll
fidivl
sarl
sarb
cld
test
jmp
xchg
jecxz
aaa
xor
stc
repnz
ds
loopne
ffree
imul
mov
hlt
fiadds
int3
lea
sti
cld
ljmp
neg
test
jecxz
mov
shl
xchg
ror
xor
aad
cli
cmp
cmc
test
rol
jmp
stc
xchg
xchg
icebp
in
mov
repz
aam
cmp
shl
cmp
ds
lds
mov
xchg
loopne
out
ljmp
shl
sti
loop
clc
test
repz
out
test
jmp
hlt
xor
ret
lret
xor
xor
fidivrs
cmp
sti
out
xchg
repz
in
in
test
les
aam
cmp
cli
ss
cmp
loope
orl
aam
cmc
lock
cli
cmc
hlt
lret
cmp
jecxz
out
jecxz
repnz
std
cli
popl
cmc
repz
int
out
repnz
adc
cmp
out
rol
lret
std
stc
fldl
repz
sub
out
int3
rcr
in
shl
and
hlt
cmp
std
movl
int3
cli
into
int3
clc
in
cld
cld
xlat
leave
lock
in
in
fdivrp
rcr
leave
mov
test
in
repnz
aaa
xor
stc
xor
iret
loope
repnz
lret
ret
leave
mov
mov
roll
rcr
fcmovne
aaa
int
std
int
roll
fdivr
mov
lret
jmp
xchg
test
lret
vmaskmovdqu
fucomp
aad
ret
rol
stc
addb
icebp
test
in
into
loop
xor
cmc
fsubrp
frstpm(287
cmp
shl
cli
loopne
fucomp
ljmp
repz
xor
cmc
in
std
lock
fdivr
lock
in
jmp
mov
loopne
cli
repz
in
into
sti
into
xor
neg
roll
enter
rcr
loope
loopne
aad
cmp
clc
shl
repz
sarb
aaa
icebp
ffreep
call
into
test
xchg
xchg
leave
mov
out
jmp
xor
hlt
int
rcl
lret
lret
iret
rolb
mov
test
cmp
jecxz
rcl
int
shl
neg
xlat
xchg
aad
jmp
out
mov
mov
out
jecxz
aad
aaa
div
into
iret
out
aas
addb
sbb
mov
xchg
fmull
int3
xor
clc
enter
faddp
loopne
icebp
roll
in
stc
nop
out
orl
clc
in
in
cli
fdivr
aas
fistpll
aam
shr
jecxz
clc
jmp
lock
xchg
xchg
leave
jecxz
int
out
jmp
ljmp
rorl
adcb
lock
out
out
leave
clc
jmp
repz
hlt
fcmove
xchg
call
lock
shr
aaa
stc
in
enter
rcr
repnz
stc
enter
ficoml
call
aaa
not
loope
iret
xchg
hlt
rol
in
out
cli
and
call
out
cmp
in
fcom
fucomi
xlat
repnz
ds
cmp
ds
addl
xchg
rcl
loop
shll
clc
xlat
call
hlt
stc
and
nop
jmp
clc
int3
iret
cmp
cld
ret
jecxz
test
cmc
out
loop
cld
addl
shl
ss
cmp
in
hlt
ret
idiv
clc
fmul
out
ljmp
test
aaa
ror
aas
cmp
xchg
orb
loope
xor
shr
fcomps
inc
clc
jmp
aam
fadd
fstp
pusha
shl
fsubrp
xor
aas
add
rol
cmp
icebp
fcmovbe
idivb
cmp
out
cmp
dec
shl
xchg
xchg
enter
enter
sbb
repz
adc
ret
xchg
loope
mov
out
xlat
in
out
aad
shl
loope
fcomip
cmc
cld
fsubp
and
mov
mov
in
shl
in
int
shr
jecxz
stc
stc
lock
fcompp
loopne
lret
lret
hlt
in
clc
stc
sub
out
leave
aam
enter
xor
jecxz
cld
add
fsts
in
call
sti
hlt
cmp
fidivs
repnz
call
in
icebp
xchg
call
into
ret
out
out
hlt
cmp
cld
ffree
aam
stc
sar
lret
mov
lret
int
test
int3
fnsave
adc
xlat
shl
jecxz
flds
test
call
mov
xor
lret
cli
std
xlat
aaa
cli
cmc
sti
cmp
xchg
frstpm(287
adc
enter
fdivr
mov
jmp
les
shll
out
aam
lock
cld
cmp
repz
xchg
out
jmp
mov
sub
xor
into
leave
int
cli
cld
ret
xchg
push
fisttpl
nop
ljmp
sar
int3
shl
clc
sti
fcmovbe
ds
sti
aad
fisttpl
lock
repz
in
xor
sar
fcom
sar
ret
vcmpps
movb
xchg
nop
jecxz
xor
das
in
cmp
hlt
rcl
int
xlat
shl
fcmovnb
loope
cmc
aad
int
mov
in
call
int3
aaa
shl
int
fbstp
aad
aam
cld
orl
int3
repz
repnz
das
int3
cmc
fcmovnu
xor
iret
not
aam
sar
addb
mov
out
leave
call
repnz
cmc
cmp
int3
shr
stc
stc
ds
repz
ror
int3
leave
xchg
icebp
xchg
jecxz
jmp
lock
sti
cmp
hlt
test
jecxz
repz
fsub
ljmp
out
leave
out
hlt
int
fsin
aaa
loop
cmc
loop
loope
sti
jecxz
xchg
std
in
fnstsw
clc
xlat
hlt
ss
cld
xlat
call
into
loope
aam
fucom
test
vpaddsw
leave
std
lret
enter
fsub
fadd
aas
cmp
fst
aas
clc
call
test
out
out
lock
sar
stc
cmp
shr
lock
ljmp
aad
inc
or
iret
int3
lret
xchg
in
ss
repz
int
ss
inc
in
loope
roll
icebp
adc
int
fcmovnbe
cli
cld
repnz
in
cmp
xchg
mov
cld
aam
loopne,pt
fcmove
lret
out
in
lret
out
ss
aas
enter
cld
rol
mov
xchg
iret
fmulp
fnstsw
lret
repz
xor
sti
fmul
out
int
loopne
xlat
aaa
xchg
mov
mov
xlat
cli
ret
lock
xchg
xchg
iret
lds
neg
idiv
out
out
fidivrs
neg
cmc
ret
test
jmp
nop
out
shr
cmp
shr
fdiv
aaa
sar
cmpl
neg
ret
int3
out
or
jmp
loop
cmp
imull
cmp
aas
cmp
jmp
adc
repnz
leave
mov
cld
mov
into
iret
clc
jmp
lret
repz
repz
in
fsub
out
sti
fildl
out
in
repz
xor
stc
in
loopne
into
addl
cmp
in
clc
xor
cmp
clc
sbb
div
not
in
cld
in
mov
mov
loopne
sub
lret
in
xlat
fcmovu
hlt
jmp
sarl
xor
in
aad
out
cmc
enter
lret
mov
lea
clc
stc
cmp
aas
aad
sarb
loopne
fxam
xlat
fld
loopne
xchg
test
rcll
in
in
xor
jmp
fcomp
fistps
je
fsts
fs
jle
add
not
icebp
enter
cmp
test
aad
clc
in
cmc
test
xchg
aaa
idiv
out
ret
ljmp
xlat
rcl
repz
repnz
leave
in
int
loope
fstp
lret
out
in
hlt
cli
in
shl
add
loope
xlat
loop
jecxz
ljmp
jmp
call
fcmovbe
xlat
ljmp
loopne
cmc
loopne
xchg
in
sbb
xchg
fdivrp
in
cmp
hlt
in
jmp
test
fst
neg
test
mov
ror
in
xlat
out
into
lock
int
cmc
cmp
faddp
cld
movb
call
xchg
xlat
fcom
imul
xlat
int
rcr
sti
stc
aas
adc
enter
lea
sub
out
in
fdivr
cmp
fdivp
std
shl
sti
rcr
fprem1
mov
fucomp
nop
fcmovnu
out
shl
int3
sub
int3
out
fdivr
repnz
loop
rolb
loopne
jmp
repnz
ror
les
aad
ds
leave
ret
frndint
rolb
ror
leave
test
clc
shlb
test
lret
fadd
call
lret
in
test
loop
ret
out
cmp
enter
fpatan
fsub
roll
fistl
std
shr
vpmovmskb
rcr
call
incb
ret
rcr
fimuls
xchg
xchg
jmp
call
cmp
leave
fdivrp
jecxz
hlt
test
sti
lea
loopne
rcl
xorb
cmp
stc
xlat
int3
fidivrs
ds
test
stc
ljmp
in
nop
int
clc
shl
stc
in
in
out
fsubr
xlat
cmp
repnz
mov
in
and
fcmovbe
in
push
test
icebp
int3
clc
cmp
hlt
cmp
sar
rcl
xchg
call
orb
ljmp
cld
jmp
rol
in
xchg
jmp
out
flds
jmp
lret
iret
neg
out
aas
aad
fxam
cld
iret
loopne
fsubrp
xchg
xchg
loopne
int
call
icebp
clc
fadd
cmc
test
lock
and
shl
leave
testb
xorl
cmp
fdivrl
icebp
cli
in
aad
mov
call
dec
loop
hlt
mov
in
jmp
enter
fcom
sbb
clc
into
fsubp
ret
aam
fucomp
test
or
xchg
out
enter
aam
clc
aam
cmc
cmc
cli
aas
into
sar
cmc
loope
cli
leave
clc
mov
int
xchg
xchg
ret
iret
ljmp
add
hlt
jecxz
repnz
loope
nop
loope
cld
xchg
in
repz
int
xor
repz
loope
or
cmp
xchg
loop
ret
out
cmc
shl
divl
aam
in
xor
idiv
cmp
stc
mov
lock
xlat
cmp
int3
shr
cmp
stc
test
jmp
int
lret
shr
nop
repnz
aaa
in
repnz
fsub
repnz
cld
int
loope
rcl
std
fucom
loopne
fildl
in
test
fcomip
xor
lret
in
int
lock
rcl
out
test
out
test
test
ret
leave
into
xchg
xchg
rol
ljmp
xor
out
mov
fcomi
ret
test
int
ret
incb
xor
lock
aad
into
loopne
ds
sti
ret
ret
out
cli
ss
loop
enter
icebp
lock
sbb
shr
loope
decb
fmulp
mov
adc
sub
leave
fcmovbe
aaa
icebp
jmp
fnstenv
std
in
rol
ret
mul
out
flds
fcoml
aad
leave
ffree
xor
aad
out
in
mov
fdivr
ljmp
cmp
in
repz
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
xor
ja
jle
add
fstpt
lret
cld
lock
fstp
loope
loope
leave
dec
in
xchg
cmp
fxch
out
cmc
div
out
out
roll
testb
fdivp
call
into
cmp
xor
fidivrl
xor
cmpb
cld
std
cmp
mov
loope
jmp
nop
int3
xor
sub
lret
fcmovb
std
int
sar
rol
fcomip
sarb
loope
sub
fiadds
ljmp
in
aam
out
into
cmp
loop
or
in
enter
or
aaa
xor
aaa
aam
in
into
in
sti
and
loope
loopne
out
int
iret
shl
lock
lock
out
in
cmp
fucom
cmp
sar
aad
dec
jecxz
lret
mov
shr
call
in
fucomi
stc
int
out
fndisi(8087
or
cmp
in
in
in
repnz
shl
enter
repz
xor
fdivp
test
test
mov
fsubp
lret
out
lret
out
int3
jmp
rcl
repz
shr
repnz
lret
sti
out
ljmp
jmp
sti
in
iret
cmp
ss
cmp
cmp
xlat
sub
sar
neg
fdivrp
shl
mov
ror
aam
idivl
cmp
testl
sbb
lds
repnz
cmp
xor
std
fdiv
loope
out
rol
sar
ret
add
test
sub
nop
loop
repz
shr
in
lock
std
sbb
not
call
sti
loop
movl
repz
xlat
stc
fcomp
fsubrp
test
clc
xchg
aas
call
stc
lret
sub
in
fdivrs
sarl
in
cld
stc
into
not
roll
fucomip
lea
xlat
rcl
fstpt
lock
into
rcr
or
fisttps
lret
sbb
int
shl
nop
test
loop
cmp
shlb
aad
cmp
cli
adc
rcr
testb
test
out
out
and
cld
not
ljmp
cld
aas
std
rcl
mov
fildl
divb
rcl
enter
leave
ret
repnz
aad
stc
lret
lret
jecxz
jmp
xor
in
cmp
cld
int3
std
ds
std
stc
call
adc
out
ss
int3
clc
int3
leave
cmc
into
hlt
out
lret
sti
lock
out
ret
int3
faddl
enter
shl
xor
ljmp
loop
icebp
sar
fcmovb
aad
ficoms
adcb
lret
cmp
xlat
fildl
mov
lret
xchg
jmp
in
ss
lret
cld
lret
cmp
call
in
loopne
loopne
test
std
repnz
ljmp
iret
loope
fcmovu
out
loopne
aam
out
out
int3
cld
loop
out
shll
xor
jmp
cli
test
out
in
lock
call
fstl
jmp
loop
in
cmc
clc
shr
cmp
roll
neg
ret
cli
roll
xchg
ror
into
int
rcr
ror
fsubrp
jecxz
sbb
test
rol
mov
repnz
fcmovbe
neg
ljmp
orb
addb
mul
fadd
int
jmp
into
filds
ljmp
mov
test
clc
xlat
div
fcomi
ffreep
shl
cmpb
ret
and
mov
loope
test
adc
into
in
xor
sti
hlt
fcmovne
icebp
clc
adc
loopne
in
fyl2xp1
clc
fcmove
sbb
xchg
orb
sti
jecxz
jmp
repnz
stc
cmp
in
ret
in
repz
fnop
orl
int3
cmp
shr
add
add
rol
aad
pop
pop
movsb
or
dec
movsb
out
jle
aas
add
cli
dec
sarl
or
sti
out
loopne
mov
int3
jmp
test
xchg
enter
int
in
lret
cmc
int
adc
iret
out
repnz
les
rolb
xor
out
int3
xor
loop
faddl
in
mov
lret
enter
into
loope
aaa
in
xor
xor
aas
repnz
jecxz
xchg
rcr
repz
filds
lret
xchg
jecxz
leave
repz
in
cmp
out
loope
loope,pt
loop
test
in
out
repnz
cmp
enter
sar
rcr
adc
mov
jmp
jecxz
or
loope
call
fyl2x
aas
in
cmp
repz
ret
repz
nop
std
xchg
mov
popl
in
int
jmp
icebp
repz
std
xchg
hlt
addl
aaa
ret
ljmp
cmp
div
not
clc
out
int
icebp
ljmp
icebp
in
out
aad
in
clc
shl
shl
aam
out
loope
ret
out
lret
mov
out
test
or
divl
in
int
leave
fdivr
xlat
add
incb
lret
sti
fiaddl
into
rcl
shl
hlt
aam
or
fimuls
in
stc
cli
mov
test
repz
aad
sub
fnop
cmc
fdivrp
lock
aad
mov
xchg
mov
shl
int
xor
stc
cli
leave
and
fiaddl
out
lret
ret
icebp
orb
in
lock
aad
ret
loope
loopne
mov
cld
std
ljmp
call
fcmovnb
repnz
rcl
loope
lds
sub
jmp
jecxz
leave
repz
call
out
icebp
stc
out
shl
fsubp
test
repnz
int
xchg
icebp
cmc
cmp
out
cmp
rcl
enter
lret
sbb
xchg
and
ljmp
cmc
cli
fdivr
or
loop
shl
fadd
mov
incb
sti
fldcw
cmp
shr
cmc
cmp
rol
sar
xlat
in
mov
enter
mov
sub
test
int3
fldln2
int
hlt
sar
rol
mov
int3
nop
test
mov
rcr
shlb
xor
int3
repnz
rcl
out
fsub
call
mov
in
testb
idiv
xor
into
aad
rolb
mov
aam
testb
cmc
ror
aam
cmc
fcmovne
cmp
cmp
cmp
aas
enter
cli
iret
out
xchg
ljmp
cmp
clc
in
rol
ljmp
ret
out
repz
in
fbstp
ret
in
iret
in
into
call
ret
std
cmc
cld
clc
clc
loop
int
flds
jecxz
in
sub
aam
aam
fnstsw
rol
aas
xlat
shr
jmp
leave
mov
xchg
xor
divb
cmp
cmc
loopne
out
fdivr
sti
add
out
faddp
loopne
repnz
int
std
xchg
jmp
shrl
hlt
clc
test
test
fadd
mov
add
test
rclb
sub
aad
ss
roll
into
cmc
repz
inc
orl
enter
into
int
out
call
shl
lock
loope
enter
cli
rcl
xchg
in
jecxz
xor
enter
icebp
clc
fdiv
into
icebp
orl
orl
aad
aad
cld
idivl
fildl
cmp
rorl
mov
int
addl
enter
xor
imul
ror
leave
imul
fucomi
sar
in
mov
rol
xor
rcl
stc
repnz
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
cwtl
mov
add
div
fcomp
sti
ret
loop
mov
stc
xchg
neg
mov
test
fld
lret
cmp
lret
lret
repnz
xchg
fsubr
loop
sti
in
mov
mov
iret
out
leave
xlat
repz
cli
lock
in
out
test
adc
leave
mov
out
or
iret
lret
ror
aam
repz
lret
rcl
call
orb
lret
ljmp
in
ror
lret
cmc
test
repz
faddl
icebp
iret
int3
cmc
into
in
sar
in
repz
ss
std
in
aad
xchg
loope
in
mov
cli
mov
rcr
out
ret
cmp
fsubr
test
not
mul
lret
mov
rolb
int3
test
loop
xor
ss
jmp
shl
jecxz
fadds
clc
icebp
orl
call
shl
out
cmc
hlt
loope
fdivrp
sbb
fldl
jmp
xchg
stc
repnz
ss
fdivrs
leave
cli
roll
out
clc
jmp
iret
fdivr
ljmp
ret
repz
cmp
rcr
or
ret
jmp
lret
adcl
in
cmp
xor
cmp
fcmove
cmp
sti
xor
and
mov
into
jecxz
ficoml
xor
in
out
rcl
loop
aas
int3
cmp
adc
hlt
test
sti
and
loopne
lret
neg
jmp
xlat
rcl
lock
test
in
iret
int
cld
mov
cmp
aaa
jmp
fcom
int
call
in
out
in
loopne
and
aad
rol
cmp
sub
cmp
out
fcmovb
adc
orb
enter
xor
lret
fdivrl
cmp
cmc
loop
enter
out
out
sti
sti
repz
icebp
into
cmp
call
int
ror
in
mul
addl
ror
out
ss
out
jmp
rolb
fisttpl
jmp
repz
enter
out
out
ret
testl
loop
out
mov
xchg
not
das
imul
in
cmp
enter
iret
aas
jecxz
loopne
jecxz
out
ret
xlat
decl
rcl
in
sarb
in
out
hlt
aas
cld
or
rcl
rcl
fsub
filds
repnz
out
loop
fsubr
repnz
shr
cmp
in
rcr
rcl
test
aad
int3
clc
icebp
repnz
dec
div
call
out
xlat
int
in
clc
ret
idivl
div
cmp
test
xchg
ret
std
lock
enter
xor
in
aas
lock
ds
ret
mov
rcll
hlt
ss
rcl
leave
in
lret
stc
aam
ret
cli
call
test
in
xchg
call
hlt
out
shl
xor
imul
xor
sar
cli
shl
rcr
clc
enter
testb
ror
in
shl
out
cmc
test
cmp
icebp
stc
sar
sar
xlat
out
or
mov
into
in
neg
xor
std
shr
xor
jmp
out
cmc
ffreep
test
cmc
loope
std
loop
nop
orl
rcl
jmp
adc
div
clc
std
mov
repnz
out
in
lock
aad
cmp
fsub
mov
enter
ret
in
hlt
fdivp
iret
ror
aaa
fnstsw
sti
cmp
in
loopne
cmp
stc
rol
call
jecxz
fmull
sti
shl
fnsave
icebp
icebp
not
leave
aad
fstp
cli
loopne
mov
fnstcw
fxch
cld
repnz
cld
cld
fcomp
iret
fldl
cli
mov
test
lea
iret
xchg
ljmp
cmp
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
in
mov
jg
aas
add
std
aad
cli
loope,pt
sti
shl
fildl
ret
mov
in
loop
ss
rcl
int
aam
fistpll
std
fcmovu
repnz
fcomp
ret
add
lock
and
xor
cmp
into
sar
sbb
and
in
lret
mov
out
shr
rcl
in
lock
int
fcmovb
sti
bnd
out
fcmovu
sub
sti
xchg
iret
xchg
divl
fdivrs
aam
aam
push
repz
mov
jmp
cs
xor
dec
ss
aad
std
call
cli
out
test
out
mov
testb
aaa
in
cmp
jmp
test
fildl
aad
in
jmp
test
loop
xchg
fidivs
into
loope
leave
int3
aam
xlat
lock
and
fdivr
fisttpll
in
xchg
rcr
cmp
fdiv
cld
jmp
fnstcw
cmp
sti
fcomp
ret
int3
fisttps
test
hlt
icebp
vpminsw
sti
xor
fdivr
shl
mov
fisttps
xchg
out
int
aam
sti
xlat
aas
cmp
into
xlat
rcr
jecxz
sti
xlat
in
testb
out
shr
iret
int
in
jmp
jmp
fdiv
call
jmp
icebp
std
fildl
vpmovmskb
out
int3
fidivrs
in
into
loop
neg
fsub
push
jmp
std
cld
out
fcomip
ret
out
icebp
lock
std
lret
adc
ret
fdiv
jmp
xlat
jmp
mov
hlt
fdivp
int
ret
cld
fucomp
fsubrp
aam
cmpb
sbb
hlt
frstpm(287
out
in
out
mov
icebp
enter
cmp
out
lock
clc
cmp
cmp
cmp
fisttpll
mov
in
jmp
idiv
sarl
repz
sti
into
cmp
loop
in
jmp
icebp
mov
xor
cmp
idiv
fidivrs
loope
cmc
clc
in
cld
stc
sti
cld
ljmp
test
fcmovu
ror
ror
xor
aad
xlat
in
or
int
loope
aam
rcr
lret
mov
in
loop
test
fsubr
int
idiv
aam
xlat
into
repz
jecxz
fdiv
out
ljmp
int
loopne
repnz
lret
jmp
test
cld
cmp
fucomi
fcmovb
fmulp
dec
ror
xchg
shll
xor
cmc
adc
cmpl
rcr
fiadds
loope
int3
ljmp
aaa
int3
repz
cmp
loope
call
mov
lock
xchg
divb
fsub
call
std
stc
adc
ret
fsubp
sti
mov
in
iret
lock
int
cmp
cmc
idivb
loopne
shl
fildl
std
hlt
test
mov
shlb
shr
sar
lock
cmp
jecxz
lock
loope
xchg
mov
adcl
rcr
jmp
loope
std
and
sbb
cmc
leave
movl
add
cmp
leave
cmp
fnop
ds
xchg
call
leave
incl
cli
out
lret
int3
cmc
icebp
hlt
cli
repnz
loope
fcmovnu
rol
out
cld
loop
lret
test
fsubr
in
int
enter
xlat
cmc
sti
stc
ret
loopne
loope
fcompp
test
std
fists
out
shl
out
lret
loope
loope
cmp
orb
jmp
enter
in
xor
jmp
loop
idivb
fadd
jmp
jmp
out
sub
cmp
in
in
hlt
fsubr
not
and
aad
leave
ljmp
icebp
shl
cmc
int
cmc
sarl
fucomi
lock
and
in
jmp
cmc
mul
ret
jmp
out
aad
xor
lret
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
or
jg
aas
add
lret
cli
iret
rcl
std
std
clc
int3
fdivr
sar
decl
call
icebp
cmp
aas
repz
repnz
ret
xchg
mov
stc
in
mov
jmp
loop
into
sub
cmp
in
std
imul
rolb
cli
fdivrp
aad
in
jmp
fucomi
test
xor
divb
int3
shl
xor
cmp
xchg
out
or
loopne
loop
into
out
cmp
cmp
test
xchg
icebp
fucomp
test
xchg
test
enter
not
cmp
repz
not
rcl
xchg
leave
ljmp
out
test
xchg
ljmp
rol
rcl
lock
neg
in
rol
repnz
lret
ljmp
loopne
xor
xor
rcr
idivb
hlt
rol
rol
fcomp
fsub
cli
enter
sub
jmp
rol
cmp
jmp
div
cmpl
fdivrs
fmul
in
jmp
fisttpll
in
into
into
xor
flds
ds
movl
shl
repz
jmp
xor
in
fcmovnbe
out
out
xor
xor
aad
neg
sub
out
out
fcomip
fstp
out
enter
in
fcmovnu
xlat
out
jecxz
ror
ret
ret
icebp
xchg
lea
lret
loope
mov
int3
jecxz
out
int
cli
leave
out
sar
loop
clc
sbb
repz
fldl
xchg
mov
jmp
ror
fxch
out
std
ret
out
jmp
loop
jecxz
out
in
xchg
std
imul
hlt
loope
aaa
imul
fsub
fndisi(8087
loop
repnz
repz
fisttpll
in
in
repz
rcr
cmp
aaa
push
shl
call
clc
xchg
out
sub
in
mov
xor
sarl
leave
xor
ror
aas
rcr
filds
lret
in
in
xchg
in
in
icebp
sub
fnsave
cli
rcr
repnz
mov
fucomip
mov
test
rol
clc
out
shl
jmp
clc
fiadds
aam
test
repz
xor
in
divb
ret
les
lds
sti
sbb
into
in
stc
cmp
fcos
out
sti
mov
leave
fmul
call
decb
aad
in
aaa
repnz
clc
shl
jecxz
call
ljmp
call
lock
xor
repz
sti
xlat
hlt
repz
test
mov
mov
lock
neg
lock
icebp
icebp
std
cld
inc
xchg
loope
call
or
int3
lret
idivl
aad
icebp
cli
icebp
cmp
in
sarl
fmull
out
fmulp
shr
mov
sub
fxch
out
icebp
iret
std
adc
aas
std
in
mov
jecxz
in
xchg
mov
out
incl
fmul
std
into
call
lds
cli
les
in
enter
int3
into
int
cmc
ret
fsub
mov
cli
flds
in
sti
xchg
xchg
int3
cmp
out
out
cli
rcl
ds
cli
int3
inc
fninit
les
mov
shl
mov
aam
in
clc
sti
out
repnz
lret
ret
in
cmc
cli
neg
mov
loope
incl
repz
icebp
ror
aas
adc
fucomip
flds
mov
loope
mov
out
shr
out
sar
cmp
leave
cmp
fadd
stc
shl
mov
in
int3
out
rcl
jmp
fdivr
out
ss
inc
out
shr
cmp
mov
leave
int
cmp
lret
jecxz
xlat
cli
fcmovb
test
lret
int
std
cld
int3
rcr
xor
ljmp
mov
movsbl
jmp
aam
aad
fstp
movsb
ficomps
adc
or
jle
add
ror
out
xchg
jmp
xchg
fcmove
shr
out
test
in
ret
xor
sti
ss
cli
cli
cmp
idiv
test
xchg
fildl
xor
xor
divl
iret
sti
fcomip
shl
out
fsin
rcl
loop
jecxz
mov
fcoms
shr
xor
rcr
xor
int
cmp
hlt
loope
fabs
mov
loope
test
in
roll
hlt
rcl
stc
icebp
jmp
iret
int3
loope
test
fprem
aam
orb
lret
faddp
leave
shr
cmp
ds
cmp
clc
int
div
rorb
xchg
test
std
jecxz
mov
loop
mov
cmc
cmc
into
leave
lock
rcr
aas
ret
repz
xchg
sub
shr
icebp
imul
cmp
lret
aaa
shl
out
cmp
aam
loopne
cmpb
loop
cld
in
addl
div
fcmovnu
f2xm1
shl
in
ret
ret
repz
bnd
stc
iret
fsubp
fcmovnbe
ror
enter
in
shll
cmp
rolb
fmul
sti
in
pop
in
in
push
xchg
enter
lret
hlt
fmul
aas
in
jecxz
xlat
cmp
enter
lret
in
test
enter
lock
clc
int
test
and
lret
in
shll
cmc
aad
out
cli
hlt
fucom
fstp
cmp
imul
mov
incl
loop
cmc
fldl2t
ljmp
ds
out
incl
jmp
loope
jmp
sti
ds
fcmovnb
ds
fisttpll
test
loopne
iret
loope
ljmp
rcl
leave
repz
ror
rcl
repnz
fucomp
cli
test
icebp
sub
test
cmp
cmpb
cld
loope
sar
cld
and
loop
int
jmp
cld
xor
hlt
clc
ffreep
idiv
repz
shl
sar
mov
out
clc
nop
leave
rclb
out
xor
in
ss
cmp
lret
int
lock
loopne
xchg
testb
hlt
cmc
lret
fld
in
ret
neg
mul
jecxz
jecxz
jmp
jmp
enter
ss
not
shl
ss
aam
loope
hlt
leave
and
mov
mov
loope
ljmp
fstp
int3
fdiv
loopne
sarb
testl
loopne
in
mov
iret
out
leave
std
stc
fidivrs
ror
sar
ds
loope
movb
xchg
jmp
fxam
aaa
out
std
cmp
repnz
std
xlat
test
fidivrl
ret
ffreep
lret
out
out
xchg
sbb
in
out
xor
imul
test
cmp
ret
and
shl
loopne
lea
int
loop
xor
repz
fdivr
loope
clc
aam
in
orl
cld
ljmp
out
lret
test
rcr
test
sub
loopne
test
out
cmp
call
shl
rolb
int
fcmovu
mov
xor
ss
sti
adc
cld
aad
cmp
loopne
mov
sti
shr
fsubp
rcr
int
cmp
aas
shr
mul
sar
flds
fmul
call
xchg
loope
xlat
test
fnstenv
fnstsw
in
div
rolb
adc
xchg
cld
cld
test
repz
hlt
enter
icebp
aad
clc
out
out
in
jmp
fildl
loop
neg
loopne
cmp
fdivrp
stc
adc
sti
ret
sti
test
out
jecxz
mov
loopne
in
aam
hlt
aad
jmp
ds
repnz
sbb
xor
xor
into
shll
clc
repz
fucom
xor
jmp
ret
lret
enter
int
cltd
movsb
imul
cmp
leave
push
stos
adc
aas
add
loope
fidivrl
mov
xchg
mov
aaa
jmp
hlt
lock
enter
repnz
fcomip
repnz
ljmp
and
aam
jecxz
in
int3
enter
ds
test
cmc
rcr
clc
ret
ljmp
shl
xchg
repnz
ljmp
fmulp
xlat
in
out
rcl
fadds
fsub
out
in
nop
jecxz
repz
xor
int
fnstsw
fdiv
repnz
into
hlt
out
roll
and
shl
in
jmp
lret
repnz
ret
fsubr
enter
loop
ljmp
int
shl
lock
aas
iret
stc
fcomip
xor
repz
int3
fisttpl
rcl
out
cmp
sti
repnz
loopne
sub
xlat
mov
ljmp
jmp
xchg
out
les
lock
fistpll
aam
div
out
out
int
in
out
hlt
aam
xor
cmc
out
call
iret
aam
ds
stc
mov
iret
cli
rorl
xor
mul
xor
in
neg
ret
xor
sub
aas
cld
shr
loopne
jmp
xor
les
fcomi
lock
cmp
iret
sti
xlat
iret
loopne
lret
test
out
mov
shl
jmp
stc
out
shr
fnstsw
fcmovnu
icebp
loopne
sti
loope
lret
in
xchg
lret
in
xchg
subl
cli
int3
out
in
fcmovnu
shl
mov
jmp
fsub
fucomip
orl
fsubr
leave
fdivr
fidivrl
loopne
loop
loope
std
cmc
not
or
lea
loop
ror
enter
cli
xlat
repz
and
ljmp
ljmp
loope
shr
xor
std
cmp
in
repnz
iret
incb
lret
mov
xchg
xchg
in
shll
enter
repz
rol
rcl
rolb
in
mov
in
mov
in
cs
cmc
repz
cmp
cli
fxch
cli
loop
fisttpll
jecxz
leave
lret
ficoml
xor
xor
out
rcr
cld
repnz
aad
in
jmp
fimuls
test
loopne
icebp
cli
sti
cli
neg
aaa
cmc
ror
cmp
aas
cmp
in
cmc
addb
jmp
addl
fxch
fsubp
aas
cmp
stc
fcmovnbe
cmp
out
call
ror
repz
int3
sar
lret
out
cmp
idivl
test
out
rolb
not
hlt
xor
call
ffreep
shl
xor
sbb
xchg
jmp
aaa
jecxz
sti
lock
fstpt
fadds
xlat
cmp
ljmp
cmp
in
lret
cmp
into
not
jecxz
ds
in
fsincos
in
xchg
iret
aam
vshufps
icebp
aaa
cli
lock
cmc
aad
flds
test
call
leave
adc
jecxz
rol
shl
cmp
xor
hlt
xchg
jmp
aad
in
mov
ljmp
das
iret
imul
stc
in
into
std
sarb
loopne
and
aas
in
jecxz
in
xchg
lret
int3
hlt
out
xor
hlt
in
idivb
cmc
sti
out
ror
rcr
shl
fincstp
hlt
hlt
mov
ficoml
mov
mov
cmc
xor
xlat
fsubrp
cmpb
repnz
loopne
aam
fcmovnu
fsub
enter
lret
xchg
ljmp
repnz
cmp
icebp
not
idiv
vpminub
fsubr
xchg
shr
clc
sub
fnstcw
xlat
fst
out
rol
div
push
std
loop
rorb
int3
in
xor
test
out
ljmp
loopne
xlat
hlt
out
mov
orb
int
lret
iret
call
jmp
xlat
addb
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
fdiv
jecxz
in
fdiv
movb
jmp
xor
fdivp
clc
xor
cli
int3
out
cmp
jmp
xchg
fldl
xor
iret
cld
ds
shl
xlat
xchg
loopne
lret
idiv
jmp
xchg
in
nop
shl
loop
out
fistpll
call
loop
aaa
sti
stc
cld
fucom
jecxz
loopne
lret
mov
ret
aam
call
in
stc
faddp
ret
jmp
popl
shr
rol
in
loop
repz
fldln2
sti
filds
aas
enter
enter
jmp
icebp
repnz
aam
xor
cmp
jmp
jmp
jecxz
cmc
fnstsw
testb
rorl
test
rcl
call
aas
out
int3
rcl
rol
mul
loopne
in
adc
xchg
ret
stc
hlt
lock
jmp
in
std
fdiv
stc
xchg
xchg
or
xchg
ljmp
cmp
jmp
aam
incb
addb
in
xor
xlat
in
aad
out
ljmp
loopne
clc
jmp
int3
lret
test
out
aad
aaa
jmp
cli
lock
dec
int
ds
out
std
xchg
repz
cli
xchg
xchg
in
aad
xor
call
cmc
ljmp
test
fmul
test
iret
sbb
test
loopne
out
xor
ljmp
aad
mov
cli
in
out
iret
mov
enter
mov
loopne
xor
in
in
out
repnz
sti
fdivrl
test
clc
ror
enter
cmp
xlat
enter
iret
std
add
out
xchg
ljmp
xchg
lock
call
lret
sti
stc
rolb
jmp
into
lret
in
hlt
xor
in
icebp
loopne
rcl
shl
fcmovb
in
lret
or
mov
into
shl
icebp
xlat
iret
aas
xor
cmpb
aad
fsubp
std
out
adcb
cmp
repnz
cmp
jmp
loope
fcmovnu
leave
mov
nop
mov
clc
out
jmp
loop
icebp
rcr
decl
jmp
test
out
shr
rcr
out
not
out
icebp
ret
repnz
mov
or
fucomi
shl
and
int
lock
cmp
filds
call
test
in
mov
enter
jmp
cmp
int3
rcl
sbb
div
addl
mov
hlt
lock
call
sti
cmc
les
mov
into
test
jmp
mov
ljmp
xor
fmul
fstp
into
fdivr
call
fmulp
mov
xor
in
cmp
shl
out
xlat
rcl
cmp
aad
rorl
fcomip
lret
mov
lret
cmp
ljmp
in
lret
cli
fdivr
idiv
test
out
out
fdivrp
test
rclb
int3
out
fcmovnu
sar
loope
addl
into
mov
call
icebp
shr
ret
leave
call
xlat
hlt
in
rcr
ds
cli
xchg
jecxz
ljmp
repz
fmul
fsin
repz
clc
hlt
fdivrp
xchg
in
in
mov
mov
movl
xlat
int3
in
out
lock
sub
std
cmc
filds
mov
mov
cmc
aaa
ret
leave
repz
fsincos
test
fdivp
fcmovu
loop
repz
icebp
in
icebp
in
fcmove
ss
sarl
in
jmp
out
in
mov
ret
ss
std
cmp
xlat
fdivrs
rorb
test
push
add
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
addr16
push
sub
add
jecxz
jecxz
aad
mov
fmulp
int
les
xor
lret
iret
fcmove
or
ffreep
cmp
aad
loopne
mov
aad
faddl
mov
fidivrl
clc
xlat
cmp
aad
adc
fcmovbe
sub
movb
loope
test
clc
hlt
cld
cmp
aas
repz
out
rcl
testl
out
cld
mul
lock
into
int3
aaa
in
repz
aam
icebp
loope
out
test
test
test
iret
loop
sub
rorl
aam
repz
stc
incl
clc
shl
cmp
clc
ljmp
out
leave
xlat
std
out
fcmovu
shl
add
clc
enter
xor
std
test
xor
int3
cmp
clc
out
int3
cmp
loope
std
hlt
idiv
loop
xchg
in
mov
rclb
rcl
hlt
enter
ret
cld
decl
out
in
out
int3
loopne
xchg
shl
int3
in
fdivl
xlat
sar
div
ffreep
xchg
clc
xchg
ljmp
loope
into
shl
enter
in
ljmp
aam
in
std
test
in
jecxz
fsubrp
xchg
ror
test
xor
faddl
repnz
addb
addl
leave
xor
rcl
sar
out
fdivrp
std
sbb
xor
ret
out
in
hlt
cmp
rcl
not
or
test
cmp
mov
mov
int
xor
div
int3
in
ret
aas
fdivrs
ret
sar
repz
int3
cli
in
cmp
cmp
loopne
clc
shl
jecxz
shl
rolb
into
stc
shl
icebp
test
cmc
ret
int
xor
clc
sarl
call
in
stc
movb
jecxz
cs
jmp
cmp
fldlg2
sti
fldl
cmp
cmc
loope
mov
in
mov
into
hlt
in
ret
stc
out
ljmp
cmp
std
loope
fstp
repnz
mov
lret
rcr
ret
test
rcl
fsubrs
std
cmp
aam
aad
ds
call
lret
adc
vpaddsb
cmp
call
sub
rorl
std
or
aam
leave
int
loop
cmp
clc
fnstcw
xlat
roll
decl
out
out
cli
into
in
nop
pushl
xlat
aad
not
cmp
or
fcom
cmp
sti
fiaddl
call
ficoml
ss
testb
xchg
mov
mov
lock
div
cmp
idivb
leave
aas
jecxz
iret
fadds
lret
loope
fdivr
out
std
mov
int3
sar
fmul
loope
xor
clc
icebp
clc
call
lret
notb
mov
xchg
cmc
cmp
int
out
cmp
icebp
sar
in
loope
cmp
fcmovnbe
jmp
lret
stc
cld
fcomp
out
sti
loope
enter
out
fsub
loope
ror
hlt
xchg
faddp
fucom
idiv
mov
loope
xchg
std
fucomip
in
jmp
aaa
rcr
lock
fsub
hlt
loopne
std
test
hlt
faddp
or
mov
repz
cld
ss
fdiv
loopne
clc
cmc
lock
hlt
in
fisttpll
mov
nop
add
fcmovnbe
fnop
shl
adc
loope
repnz
cli
mov
fucomi
xor
jecxz
ss
shll
call
cli
sarl
testb
ret
out
lret
leave
loopne
loop
ljmp
call
lret
cmc
testl
fcmovu
fcmove
mov
mov
leave
ret
xor
jecxz
repz
aam
fdiv
testl
aam
hlt
int
int3
iret
lock
aas
cmp
in
loopne
inc
call
add
ror
int3
aam
mov
cmp
out
sbb
jle
call
cld
lret
out
jecxz
out
mov
in
call
cmp
fld
aad
fdivr
mov
imul
int
mov
repnz
enter
iret
aaa
rcl
out
clc
clc
mov
fcmovne
test
std
enter
ljmp
bnd
fldlg2
fucomip
int
test
fneni(8087
mov
out
in
int3
lret
mov
cs
call
fcom
repnz
mov
cmp
xchg
int
xchg
shl
jmp
rcr
shl
cmp
std
hlt
out
ret
imul
addb
ljmp
out
shr
out
fcmovu
aas
cmc
ffree
in
adc
in
std
jecxz
stc
out
lret
fmulp
cs
out
sar
das
cmp
addb
filds
repnz
out
repz
iret
repz
cli
fdivrl
sar
fnstcw
fcmovu
add
ljmp
in
das
xor
out
rcl
repnz
jmp
repnz
int3
call
std
test
call
iret
out
int
aam
roll
les
xlat
xchg
out
nop
rorl
loop
xlat
ss
enter
xor
test
loopne
decl
fcomip
cld
out
out
xor
sub
test
std
sti
loopne
fst
fsubp
cmp
sti
jmp
test
out
xorl
fidivs
out
in
xor
cmp
leave
out
cmc
out
xlat
lock
xchg
jecxz
xor
cmp
enter
rcl
ds
call
xlat
int3
out
fucomip
cld
test
int3
rol
jmp
out
cmp
stc
iret
ljmp
std
mov
ljmp
int3
rcr
xchg
aad
lds
clc
cld
repz
jmp
cli
shr
lds
call
rcr
mov
rolb
leave
ror
enter
push
xchg
repz
mov
loopne
cld
out
in
fxch
into
cmp
cmp
neg
cmc
fcmovnb
hlt
cmpb
test
jecxz
loope
in
out
rcl
ss
xlat
test
lret
rcl
int3
into
sti
add
jmp
aam
int3
orb
xchg
leave
xor
repz
jmp
ds
rol
icebp
cmp
loopne
fmull
fadd
loopne
aam
shl
xlat
xor
shl
int
faddp
rol
cld
jmp
out
mov
loop
incb
aad
jecxz
jmp
sarb
cmc
repnz
fcmovbe
aad
mov
loopne
fucomp
call
lock
aad
divl
div
repnz
iret
in
sbb
cmpb
ret
leave
cli
loope
call
and
enter
aad
xor
cld
out
mov
in
stc
jmp
out
std
xchg
out
xchg
xor
cli
aaa
sub
push
repz
xchg
test
int3
cli
lret
mov
xchg
int3
out
fdivrs
xor
fbstp
icebp
ret
shl
loope
into
out
int3
mov
xor
les
cmp
out
xlat
stc
ds
into
ret
incl
cli
xchg
and
xor
lock
call
leave
ds
mul
test
std
out
mov
fnstenv
xor
jmp
xor
stc
repz
icebp
iret
repz
repz
lds
iret
enter
repz
out
shl
xor
clc
ror
clc
rolb
jmp
mov
dec
in
nop
std
fsub
xchg
div
icebp
rcl
repnz
ljmp
icebp
hlt
loop
lret
fists
jecxz
xor
jmp
in
xlat
fcomi
aad
cli
in
out
xchg
xchg
in
in
in
lock
cli
lret
call
ljmp
fst
test
out
lock
lret
loopne
ljmp
into
aaa
ds
fxam
cmp
in
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
cld
cmp
fst
test
cmc
into
xor
in
iret
leave
lret
cmp
in
test
test
call
out
in
jmp
in
cmp
icebp
stc
aam
add
mov
out
xlat
fcmovnbe
rolb
sub
xor
xor
sar
or
fiaddl
aas
mov
std
jecxz
cs
xor
fdivp
test
in
mov
fsubp
in
clc
mov
iret
sti
hlt
std
in
jecxz
hlt
cmc
cmp
aad
xlat
stc
not
sti
xrelease
test
mov
fisttpl
pushl
aad
sti
loopne
cmp
in
idiv
stc
fsub
fsubr
loop
sti
stc
out
mov
vpminsw
loope
aad
in
icebp
icebp
ljmp
ffreep
cmp
mov
xchg
jmp
jecxz
lret
in
int
fcmovne
xor
repnz
fiadds
sti
cli
xchg
int
xlat
xor
fsub
xlat
jmp
fld
ds
int
stc
xchg
xor
out
ss
sarb
pushl
jmp
loop
ret
shl
repz
mov
xchg
loop
orl
int3
stc
loope
xlat
fcmovnb
rcl
ds
in
xchg
loopne
leave
xor
ss
rol
sar
rcl
ret
int3
xchg
into
xchg
in
out
ret
out
ss
cmp
idivb
stc
in
sbb
iret
lret
jmp
cli
cmp
clc
sti
fnstsw
ror
rol
cmc
xchg
cmp
xchg
fdivr
call
lret
int3
shl
rol
ror
imul
xlat
jecxz
int
shl
jmp
rolb
in
into
loop
ret
das
fcmovu
rol
cmp
loope
ffreep
lock
jmp
cli
loop
xchg
xchg
faddp
cs
fmul
jmp
lock
lock
fucomi
ds
ret
rol
in
fadd
repnz
cld
mov
in
xor
test
fcomp
in
lret
out
in
icebp
mov
test
divl
rol
in
int
lret
aaa
cld
loop
clc
int
cmp
adc
fstp
int3
fimuls
div
fcmovnbe
out
fstpt
sar
aas
mul
cld
xlat
fprem1
fdiv
loop
test
int3
out
fcmovu
aad
lret
hlt
cmpl
stc
rcr
mov
clc
xor
xor
jmp
fsub
fcmovbe
sbb
xchg
mov
aam
ror
jmp
enter
int3
cmp
ror
into
in
stc
sar
sti
lret
icebp
out
jmp
in
fdivr
cmc
neg
xor
jmp
jecxz
repz
add
aad
fildl
mov
xor
cld
out
int
cmp
div
neg
loop
cmpl
cmc
mov
jecxz
xchg
mov
in
imul
xlat
lock
int3
std
neg
ds
cld
out
out
sbb
sbb
loop
xchg
int
ss
out
ror
aad
cmp
in
in
cmc
test
addb
fcomip
repnz
repnz
fdivrl
xor
int
loope
ret
xchg
mov
adc
fisttps
iret
das
into
out
stc
stc
shr
int
ret
std
rol
xchg
xchg
call
cmp
sti
into
repz
jmp
and
in
out
orb
cmc
in
shl
stc
xor
cmp
sar
cmp
in
fsubr
or
ret
jecxz
icebp
fsubrp
int3
hlt
sub
loop
out
and
in
fcmovu
mov
in
mov
lret
repz
in
jmp
into
fcmovne
adc
into
loop
xchg
push
xchg
fiadds
push
das
in
cli
fdivrs
cmp
out
loope
add
inc
lock
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
mov
aas
add
cli
loop
fmulp
xlat
leave
call
jecxz
cs
lret
cmp
sub
cmc
clc
cmc
repz
in
xlat
mov
fdivr
int
icebp
shl
mov
cmp
xlat
fidivrs
aad
xor
test
mov
fmull
into
xchg
shll
sarl
out
sti
repz
lret
fdiv
mov
jmp
nop
jmp
in
mov
lret
aad
xor
jecxz
repnz
fsubrp
shl
loop
ret
stc
ret
hlt
jmp
xlat
fimuls
lock
jecxz
xor
das
ljmp
fadd
fucomp
loop
lret
jmp
xchg
rclb
sar
enter
fstp
fcomi
fld
xchg
imul
loop
mov
lret
test
sub
mov
out
int
ljmp
aam
sub
ret
cmp
in
stc
fcomip
xchg
aad
icebp
in
cmc
fldpi
fst
rcl
imul
aaa
rol
add
cmp
xchg
adcl
out
loop
repnz
xor
fmul
hlt
jecxz
aas
fadd
xlat
mov
sub
jmp
out
sbb
aam
repz
mov
lret
xchg
repnz
in
xor
hlt
sti
in
fxch
cmp
out
cmpl
jmp
cmc
sbb
ljmp
xor
rcl
lret
cli
aas
iret
rcr
in
decb
mov
xchg
repz
out
repz
ds
cmp
jecxz
rorl
loopne
lret
loop
lret
jmp
icebp
hlt
ss
fcos
repz
std
shl
sti
in
lret
rolb
rcr
repnz
cmp
mov
addb
repnz
mov
jmp
enter
cmp
repnz
loope
fcomip
sti
movb
loop
out
loop
aam
icebp
xor
divl
call
ret
int
out
jmp
enter
out
into
mov
test
jecxz
lret
imul
into
jmp
std
repz
cmp
loope
loopne
into
fsubrp
xchg
fstp
ljmp
shl
ror
fdivp
rol
cld
fadd
fdiv
cmp
jmp
test
shlb
xor
sar
loope
ret
in
test
lds
mov
in
into
int3
repnz
in
aam
leave
int3
out
cld
fxch
jmp
icebp
fsubp
out
and
mov
out
repz
xchg
std
xchg
ljmp
int3
loopne
ret
aad
cmp
addb
fcmovnu
xchg
mov
out
icebp
xor
call
sarb
div
rolb
in
lock
in
rorb
sti
out
cmp
fcmovu
fcmovnbe
sub
into
roll
stc
loop
ss
aam
cmc
jmp
cmp
fucomp
loop
std
enter
xchg
fisttps
rcll
int3
cs
sti
rcr
sti
ror
icebp
into
aad
rol
jmp
decb
into
decb
sub
cmp
fidivrs
fstpt
cmc
loope,pt
loope
loope
out
jmp
vpandn
loopne
cs
rol
aaa
mov
cmc
std
hlt
int3
cld
out
jmp
jmp
lock
shlb
fcmovnbe
ds
fistpll
lret
fbstp
test
out
call
jecxz
sub
out
jmp
jmp
cmp
out
jecxz
dec
xchg
int3
loope
shr
ljmp
cs
rcl
fidivrl
icebp
aam
lret
leave
mov
nop
int
int
out
sub
cmp
fidivrl
cli
jmp
loopne
out
icebp
not
mov
stc
mov
jmp
in
repz
fstpt
rcr
in
not
fisttps
out
repnz
mov
ror
ss
ds
cmp
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
mov
xor
jg
aas
add
loopne
clc
test
jmp
repnz
cs
jmp
icebp
cmp
aas
aaa
aam
fiadds
into
mov
enter
out
sub
call
shl
sarl
xchg
in
cld
test
mov
rcl
xchg
in
imul
loope
bnd
aaa
fcmovnbe
iret
aam
cmp
leave
adcl
loope
rcl
stc
out
out
int
sarl
hlt
ret
out
xlat
loop
cli
fsub
ljmp
xor
shl
leave
aad
fdivr
loope
out
icebp
fcomip
test
stc
fsub
fmull
xchg
jmp
out
rcl
std
fdiv
hlt
clc
hlt
sar
jecxz
jmp
lret
xchg
in
cs
cmp
xor
xlat
xor
fsubp
idivb
fldl
xchg
out
out
cs
ljmp
xlat
aam
rcl
loopne
mov
loopne
out
out
mov
jmp
icebp
int
cli
out
lret
cmc
idiv
mov
shr
in
jecxz
fimuls
xor
cmc
ljmp
shl
cmc
repz
test
in
and
xchg
in
in
ret
aad
fnstsw
std
rolb
fmuls
iret
in
cmc
into
repz
out
aaa
fst
push
xor
cld
cmc
ljmp
mov
orb
sub
sti
in
fcmovu
sar
sti
in
aas
shl
fcomp
in
call
fdivp
jmp
sub
ss
cmp
sar
jecxz
std
ds
stc
cmp
jmp
iret
out
or
lret
clc
sar
cmp
repz
std
leave
cld
loop
mov
jmp
into
hlt
aad
aam
fsubp
repnz
clc
les
aas
mov
int
les
test
not
stc
cmp
cmp
push
rol
in
hlt
stc
loope
in
call
lret
ljmp
rcl
test
xchg
aad
rcr
enter
xchg
ljmp
icebp
cmp
lret
into
enter
repz
shl
out
cli
orb
shr
ljmp
jecxz
ror
cmc
lret
loopne
loop
cmp
test
mov
jmp
das
out
cmp
fidivrl
std
aad
cli
cli
loope
lock
in
jmp
ret
fimuls
iret
in
xchg
shr
aam
cmp
sti
repnz
in
cli
loopne
not
call
ds
out
fmulp
mov
xor
aam
into
aaa
lret
rcr
hlt
repz
xchg
in
ret
ss
leave
xlat
shr
fdivl
rcr
fcos
mov
in
aad
iret
xchg
enter
rclb
out
clc
xor
jmp
rol
sti
shl
ljmp
sbb
mov
fldpi
out
loopne
fucomip
int
into
xchg
stc
xchg
inc
flds
loop
xchg
mul
ljmp
out
sar
and
aad
leave
in
xchg
out
jecxz
loope
fstpt
cmp
call
jecxz
sbb
lret
mov
enter
int
lock
xor
jmp
out
xor
not
int
fcmovnbe
out
les
jecxz
in
icebp
int3
div
aam
cld
call
rcl
fdivrl
leave
loopne
addb
lea
enter
jmp
cmp
int
idiv
cmc
sti
repz
jmp
xabort
cli
call
ror
xor
jmp
imul
jecxz
clc
xlat
test
clc
repnz
imul
fcomp
mov
hlt
test
shrl
int
ret
call
rcr
cmp
std
xchg
loop
fucom
mov
xor
aad
aad
hlt
cmp
rcr
aam
mov
xor
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
cmp
sti
xor
hlt
loop
icebp
in
lock
clc
fnstsw
fucom
test
ret
out
std
lds
in
in
mov
xor
divb
in
std
lock
fcmovne
cmc
call
fnclex
flds
in
leave
sub
mov
icebp
aam
std
cmp
fucomip
frndint
xlat
sar
loopne
ljmp
repnz
out
mov
das
in
ror
in
cmp
repnz
loope
in
div
mov
cli
ret
fiadds
fst
in
aad
sarl
ss
repnz
cmp
ret
cmc
cmp
out
sti
loop
ret
lret
mov
fldl
cs
enter
cmp
xorl
aam
or
nop
stc
repz
leave
shl
in
cmp
fdivrp
sti
fiaddl
fcmovnu
in
fcmovu
mov
sbb
in
icebp
aam
div
ljmp
decl
in
repnz
ljmp
xor
loopne
sar
loopne
out
cli
out
jmp
jmp
in
mov
fdivl
sti
fcmovnbe
into
out
lock
cmp
test
add
ftst
lea
lret
xchg
mov
xabort
sti
sti
repnz
iret
rcr
std
test
enter
in
orl
call
in
ds
loopne,pt
loopne
clc
iret
test
jecxz
imull
lret
fdivrs
fldl
mov
call
sub
das
fdivs
icebp
fdivr
repz
sar
iret
fdivr
sti
loop
test
fxam
loopne
mov
in
mul
idiv
fnstsw
cmc
sarb
cmp
std
out
clc
imul
leave
test
cmp
mov
xlat
lret
xor
out
not
and
in
fcmovb
clc
xchg
ffreep
div
movl
aaa
jmp
ss
out
cli
cmp
fptan
ds
neg
in
fnop
nop
int3
int
mov
xor
div
iret
lret
fcomip
shl
cmp
add
out
into
int3
xchg
in
out
out
shll
xor
cli
in
leave
std
repnz
iret
ret
sti
loopne
rol
loopne
fnsetpm(287
nop
ret
int3
jmp
xchg
leave
lret
rcl
lret
ljmp
rcl
ret
out
out
int
xchg
rorb
aad
fxch
out
std
fdivs
in
fcomip
shl
cli
xlat
enter
mov
sub
loop
shl
rol
out
sti
clc
cld
cmp
test
sti
sbb
mov
xchg
out
sub
xor
in
lock
call
mov
in
add
in
in
test
in
cmp
cld
shr
fsubrp
icebp
cli
clc
in
out
out
out
shl
sti
fdivp
out
cld
test
lock
loope
in
xor
in
lock
cmp
ffreep
out
stc
mov
enter
orl
out
ss
shr
loop
lds
icebp
ljmp
into
out
out
incl
cmc
aad
in
cmp
aaa
ds
aam
fxam
faddp
clc
mov
in
fisttps
aaa
repnz
sar
cmp
fcmovbe
xor
aad
loope
mov
mov
hlt
xor
cmc
repnz
xlat
clc
shll
sarl
and
sar
sbb
fucomip
sti
mov
aad
rol
cli
fxch
addl
ljmp
int
jmp
int3
enter
out
shr
repz
into
int
loop
enter
mov
mov
fcmovnbe
mov
cmp
cmp
fxch
shl
int
fmul
mov
ret
fxch
std
fimull
iret
loop
xor
leave
rcr
xlat
out
out
rcl
addb
loop
in
enter
xchg
xchg
call
lret
jmp
icebp
add
loop
jmp
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fldl
es
xor
scas
add
ret
jmp
fucomp
in
in
test
repnz
shlb
call
cli
or
lret
cmc
shll
xor
xor
cld
into
xor
aam
aas
out
jmp
mov
xchg
int
sub
fdivs
jmp
int
repz
lock
loope
test
sub
std
out
loope
lock
xlat
into
imul
rcl
ds
cmc
loopne
jecxz
idiv
sti
stc
ret
fsubrp
call
cs
xor
int
cmp
iret
xchg
in
call
call
leave
ss
lock
ror
enter
ret
stc
repz
stc
iret
add
fcomi
ljmp
imul
shl
cmp
loop
aam
lret
mov
fcmovnu
loope
xor
jecxz
aam
int
cmc
fmul
loopne
cld
fcomp
rorl
xlat
jmp
in
test
leave
test
call
sarb
std
roll
fadd
cmp
sar
int
enter
cli
xor
sub
in
in
cld
lret
mov
mov
repnz
int
out
ljmp
std
ror
cld
rolb
jecxz
cmpl
loop
sti
jmp
aam
int
repz
out
not
cmp
repz
cmpb
stc
call
loope
or
loope
addb
xlat
in
fyl2x
cli
aad
loopne
in
test
loopne
mov
out
sub
les
out
xor
clc
out
leave
ror
aam
loope,pt
rcr
stc
test
std
in
out
call
repnz
stc
sarb
addl
in
mov
out
lret
call
sub
icebp
int3
ds
fldz
test
out
hlt
shl
fcom
call
into
nop
test
out
icebp
test
fsqrt
loope
fidivrl
mov
call
fmull
call
ror
fdivr
fcom
in
shl
rcl
loope
repnz
mov
cld
clc
sbb
xchg
cld
sti
mov
shr
ret
in
into
cld
loop,pt
test
adc
movb
cld
repz
cmc
out
jecxz
out
fldl2t
cmc
flds
loopne
loope
clc
leave
aam
sti
clc
xchg
shr
test
int
xor
cmp
fdiv
cmp
roll
sbb
incl
icebp
sub
hlt
out
ljmp
stc
aad
ret
lret
cld
lea
jecxz
fadd
out
xor
sarb
jmp
shr
cli
xchg
jecxz
fcomip
leave
ljmp
fsub
out
aad
lock
hlt
std
repz
lock
mul
inc
jecxz
roll
xorb
cmp
aam
aaa
fstpt
repnz
aas
fninit
jmp
loopne
incb
call
cmc
out
xor
xlat
vpmullw
and
sar
out
in
ljmp
in
call
xchg
out
iret
enter
ljmp
xlat
cmp
rcr
icebp
jecxz
std
enter
fmul
out
ret
cmp
xor
fmulp
xchg
mov
loope
or
lock
aad
call
xlat
ds
in
cmc
out
loop
in
mov
lret
xchg
int
int
into
neg
cld
cmp
fdivr
aas
in
cli
repz
xor
sti
in
sub
cs
ret
ret
leave
repnz
jmp
fsubr
xor
sar
mov
out
les
mov
cmp
das
fcmovnu
ljmp
cli
loop
out
lret
clc
sbb
xchg
test
call
in
mov
lret
fcmovne
addb
mov
add
out
out
mov
cld
xchg
sub
lret
leave
shr
sar
icebp
out
test
enter
out
std
lret
roll
cmc
int
icebp
idivl
loop
and
add
cmc
lds
stc
fucomip
adc
shll
repnz
clc
fidivrs
loopne
std
hlt
loopne
mov
jecxz
cmp
mov
out
loopne
enter
xlat
int
cli
sarb
in
cmp
xlat
ljmp
fucomi
int
xchg
int3
aaa
fcmovbe
fdivrs
movl
xor
jmp
iret
rol
rol
or
push
aaa
bound
jg
scas
add
enter
cmp
shl
cmp
fsubr
nop
shl
ljmp
jmp
jmp
cmp
xchg
cmc
imul
in
rolb
out
aad
repz
jmp
cmp
repnz
repz
ds
enter
int
aad
icebp
das
lock
lret
cli
out
jecxz
out
fiaddl
mov
rorl
out
int
aam
ljmp
cld
jmp
xchg
test
loope
aas
sub
ss
cmp
repnz
sarb
clc
cmp
add
mov
in
call
out
xor
cmp
aas
cmp
iret
roll
mov
xchg
mov
mov
shrl
clc
jecxz
das
ljmp
cmp
cmp
in
in
xchg
in
xchg
in
test
into
ret
lret
cmp
aas
ret
aad
fprem1
enter
call
fucom
call
in
sti
jmp
cmp
rcr
mov
loopne
loope
or
aaa
shl
loopne
repnz
idiv
cmp
enter
enter
xor
in
xor
in
lret
cmp
fdivr
sti
out
imul
ds
clc
mov
mov
ret
test
repnz
clc
jmp
cmp
cmp
fidivrl
fstp
idivl
out
fucom
xchg
test
out
nop
mov
in
int
enter
cmp
xor
out
fsin
aad
aad
sti
mov
rorb
ret
cmp
fdivr
sti
cmp
fmul
stc
add
lds
loope
fst
mov
lret
lret
int3
fcmovu
test
std
loope
fadds
hlt
fisttpll
xchg
or
ret
hlt
leave
repz
sarl
clc
cld
icebp
stc
adc
aad
dec
xchg
lret
cmp
mov
into
lock
xor
sti
icebp
fcmovbe
std
cmp
fdivr
in
test
mov
stc
jecxz
int3
mov
xchg
lea
cmp
roll
cmp
cld
sub
testl
lret
leave
hlt
int3
ljmp
in
cmpb
rol
jmp
fcmovne
sub
int3
std
shl
cmp
into
xor
sar
lret
shl
sbb
aad
mov
leave
mov
aas
ljmp
sar
clc
repnz
cmp
test
loop
in
cli
in
popl
clc
aaa
stc
hlt
int3
jmp
out
jecxz
loopne
xchg
leave
in
int3
out
jmp
test
fdivs
ljmp
aam
cmc
stc
cli
ljmp
filds
imul
cmc
repz
icebp
stc
loopne
jmp
int
loope
loope
stc
fucomi
mov
test
xor
cmp
jmp
sar
loopne
clc
cld
fnstsw
xchg
mov
lret
adc
fucomip
into
into
jmp
repnz
ljmp
cmc
rcl
test
std
lock
fistpll
div
ss
fidivrs
cli
sarb
loopne
repnz
ds
and
cli
cmp
into
icebp
icebp
jmp
leave
stc
fdiv
ds
out
aas
shr
cmp
xlat
leave
test
out
fcmovnbe
mov
icebp
out
repnz
cmc
int
cmc
cmp
cli
out
fucomip
cmp
in
fldln2
enter
xchg
int3
sar
xor
cmp
lock
add
loope
enter
sbb
aaa
aad
fst
lret
xlat
sti
out
loop
fmul
ret
decl
into
jecxz
into
out
xor
icebp
xor
cld
xor
fdiv
into
fcmovbe
aam
loop
neg
ret
test
int3
fildl
jmp
fucomi
fstpt
aad
shl
in
add
xchg
cld
fmul
aas
imul
lock
rcr
xlat
fistpll
loop
loopne
ret
fcmovu
decb
test
icebp
hlt
das
std
fidivrs
aas
into
cmp
aas
jmp
idiv
xlat
mov
incl
xor
idiv
in
iret
cli
rcr
addb
fdiv
ljmp
loope
out
sti
into
cmp
div
loope
cmp
lock
cmp
jmp
loope
movl
jmp
enter
fxch
shll
or
enter
cmp
jle
add
out
xchg
in
mov
shl
cmc
in
fdivrs
shl
sti
mov
ror
sub
xor
xor
sti
test
shl
hlt
add
loopne
ljmp
test
xlat
jmp
stc
neg
int3
fcmovne
cmc
sbb
hlt
fsubp
lret
lret
in
and
xlat
aad
in
xlat
lock
cli
xor
icebp
sti
lock
shl
fsubr
loope
mov
xor
ror
or
int
in
out
sti
ret
fcmovu
jecxz
fucomip
jecxz
xacquire
mul
fdivrp
enter
ffree
ret
cli
shl
testl
aam
int3
mul
in
fcmove
sar
aaa
fidivrl
cld
neg
sti
inc
jmp
in
xchg
fistl
ljmp
rcr
cmp
rol
stc
xlat
add
cli
leave
lret
mov
call
not
in
out
cmc
cld
into
int
repz
icebp
mov
mov
xchg
jmp
jmp
xchg
ror
ret
fcmovne
repz
cmpl
repz
ret
jecxz
popl
in
nop
out
in
into
cmp
jmp
adc
fistpll
fdivp
std
hlt
out
lret
mov
repnz
repz
leave
rcl
rol
out
loop
shl
jmp
out
and
rcl
xchg
shl
xor
out
sti
cmp
test
fcmovnu
out
in
add
fmulp
mov
xchg
loop
xor
cmp
std
lret
leave
xor
int
movb
cld
lea
jmp
cmp
icebp
shr
enter
aas
fmul
loop,pt
aam
jecxz
std
rorb
fadd
in
aad
cli
cmp
incl
xchg
or
mov
int3
sub
cmp
hlt
cmp
cld
into
xchg
rorl
in
out
xchg
std
inc
loope
mul
rcr
out
cmp
shr
out
fucomp
movb
icebp
in
int3
aam
xchg
rol
iret
cmp
ds
out
fcomp
cmp
rol
xlat
leave
ljmp
xchg
mov
loope
aad
rcl
cli
cmp
test
shl
loopne
repz
out
sub
cld
nop
adc
aam
xor
jmp
ss
lret
lret
repz
loopne
std
fcmovb
leave
mov
mov
ss
out
ds
fsubrp
into
hlt
sti
aas
fnstsw
cli
ljmp
repnz
out
in
lret
lret
out
cmp
cmp
fcmovb
rol
mov
sti
out
fimuls
aad
sub
aad
not
ror
add
rolb
fmul
ljmp
loope
enter
aam
repz
idiv
cld
xchg
cld
cmc
jecxz
out
out
out
rorb
aas
ret
out
int3
repz
jmp
idiv
hlt
xchg
test
jmp
xchg
mov
vshufpd
out
xor
out
icebp
xlat
std
sti
leave
ret
hlt
fcmovnu
test
out
xchg
fnstenv
aaa
cmp
leave
and
repnz
stc
loopne
cmp
fiadds
loope
xlat
in
hlt
stc
int
fcomi
jmp
icebp
repz
orb
sti
lret
faddl
repnz
cli
sub
fdivrp
les
fsubp
call
mov
fcoml
ljmp
int3
in
adc
test
out
mov
lret
xchg
out
mov
cmp
std
fdivr
imul
fdivp
cmp
rolb
fabs
in
test
call
call
xor
int
ffreep
ret
xchg
call
in
int3
xchg
icebp
lret
int
out
loop
ror
cmp
aad
out
loope
fstp
bnd
ret
sub
nop
in
cli
shl
int3
repnz
clc
in
aad
cmp
cmp
lret
stc
out
shl
shl
loop
ljmp
sar
rcl
loop
int3
out
cmp
ds
sub
in
fucom
fsubr
aad
fmul
sti
fcmovu
jmp
in
jmp
fucomp
cld
loopne
hlt
lret
clc
xor
rcl
filds
into
cli
sti
test
xor
in
out
xlat
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
sar
cmp
rolb
test
loopne
ret
lret
lock
xor
sub
lret
cmp
clc
cmp
fsubp
cmp
loope
test
mov
out
test
ljmp
aas
ds
repnz
rcr
lock
clc
ss
xor
jmp
fstp
fcmovnu
idivb
hlt
fcmovbe
fmull
lret
leave
cld
lock
xchg
rol
in
rcr
divb
icebp
rcl
out
enter
in
lret
sti
repnz
rol
aam
cmp
xor
ds
fmull
in
in
shl
rclb
loop
lret
fld
int
fdiv
aas
shl
out
loopne
jecxz
jecxz
ftst
test
ret
xor
fucomip
cmp
test
lret
fisttpll
fstl
in
sti
div
in
fcmovb
fdiv
loop
clc
mov
clc
out
out
loope
loopne
xchg
into
jmp
aad
in
jmp
cmpl
ljmp
in
out
in
in
xchg
ror
sub
xor
loope
repnz
iret
xchg
jmp
stc
in
aaa
enter
repnz
aad
cmp
rcl
test
out
call
roll
cld
repnz
testl
cmc
fadd
in
mov
ljmp
in
cmc
loope
jecxz
int3
ljmp
std
sbb
stc
call
test
loope
jmp
loope
ss
cmp
lret
stc
int3
leave
out
lock
loopne
sub
xchg
sti
imul
in
out
xchg
cld
addl
in
int3
shl
xorl
loope
in
out
and
out
xchg
test
iret
aaa
xor
lret
into
aam
ds
out
sti
out
xlat
fimull
xchg
out
loopne
int
idivb
fcmovu
in
fcmovnu
adc
icebp
loop
cmc
fildl
ljmp
in
clc
out
sarb
shl
not
loopne
cmp
repz
iret
in
test
aad
cmp
sar
fdivs
sti
cmp
fcmovnb
in
rol
ljmp
mov
xchg
lock
into
f2xm1
fcomip
lock
into
cmp
stc
fcmovu
out
xlat
std
cld
fiaddl
aam
iret
fdiv
xor
jmp
xlat
enter
shl
xchg
in
out
aas
out
mov
rol
aad
xor
cmp
fmulp
lret
add
loope
cli
mov
or
fstp
stc
out
mov
xchg
xor
enter
stc
cld
imul
aad
stc
cmp
rolb
out
fucomi
xchg
icebp
jmp
ret
jmp
fsubr
cli
cld
iret
ror
and
xlat
leave
adc
mov
add
sub
fld
rcr
cmp
jmp
clc
loope
lds
lock
in
aaa
iret
aaa
cmp
jmp
fcmove
xlat
cli
push
shl
fcmovb
out
ret
in
fucomi
cld
cld
roll
hlt
jmp
aas
sarb
in
iret
clc
loopne
aad
ret
test
fsubp
iret
int
xchg
rorl
int
int
jmp
faddl
xchg
leave
into
shl
out
int3
ret
fidivrl
out
rcr
cmpb
mov
leave
stc
in
loop
xchg
out
int3
fldcw
xor
shl
cmp
fcmovnbe
fcmovbe
call
cli
fadd
jmp
dec
fstp
rol
in
iret
lock
xor
cmp
mov
roll
jecxz
loop
xchg
test
fmul
xor
sti
cmc
fidivrl
rcr
idivb
clc
in
stc
mov
test
idiv
ror
jmp
in
icebp
loop
cmp
aad
cmp
in
jmp
roll
mov
in
mov
ljmp
fyl2xp1
xor
aam
int3
adc
push
neg
test
jmp
fdivr
xor
les
cli
imul
ljmp
in
fiaddl
out
mov
rclb
call
and
rcl
les
lret
lret
lds
out
fcmovnbe
clc
sar
repnz
in
rcr
lret
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
lods
sub
lds
scas
add
out
xor
in
not
in
std
icebp
leave
repz
cmp
icebp
clc
aam
testb
out
jmp
call
fdivr
cmp
int3
not
out
cmc
ljmp
nop
in
mov
loope
shl
aaa
lock
lock
in
rcl
clc
sti
clc
test
lret
fisttpl
repz
fidivrl
out
ffreep
imul
ret
rol
xchg
fdiv
sti
jmp
ror
int
rcl
jecxz
out
cmp
xlat
loop
testb
std
div
mov
test
xchg
cld
mov
mov
cmp
aad
ss
sti
cmp
int
repz
hlt
fdiv
jmp
int3
cld
enter
sti
cmc
in
test
xor
test
fcmovnu
xlat
fcmovb
cmp
or
hlt
test
in
icebp
sti
rcl
xchg
icebp
sar
cld
into
ror
cmp
roll
stc
mov
mov
xlat
loope
rclb
xor
fadd
repz
out
fyl2xp1
cmc
xlat
idiv
sar
mov
mov
fmull
mul
aam
jecxz
das
cmp
in
fidivrl
out
fnstcw
fucomip
hlt
in
leave
sub
jecxz
in
in
xor
out
lock
fdiv
hlt
cmpl
shl
decb
fildl
ljmp
fnop
ret
in
cmp
in
shl
fmuls
rolb
cmp
lret
hlt
loopne
icebp
jecxz
aad
aam
aas
loopne
lret
jecxz
xchg
sti
jmp
lret
out
cmp
cmp
xlat
out
stc
sti
stc
fldl
rclb
sar
cmp
fucomi
divb
test
in
ffreep
vpaddb
jmp
out
int
shr
out
sarl
xor
in
fmul
cli
repnz
repnz
repz
xchg
aad
rorb
hlt
aas
ss
sti
call
in
stc
stc
lock
test
test
std
ljmp
xor
out
cmp
in
cmp
clc
loopne
fadd
jmp
loope
fsubr
loop
test
in
in
fdiv
cmc
cmp
cmp
jmp
sar
xor
mov
out
loope
mov
ror
icebp
out
in
cli
hlt
hlt
cmp
aad
out
movb
cld
shl
shl
or
jecxz
sti
out
iret
repz
icebp
fcmovu
stc
fadds
fimull
fmul
jecxz
int
aad
fldln2
iret
out
iret
xlat
std
cli
out
loop
sti
std
call
fdiv
int
cmc
shlb
repz
ds
cli
cmp
in
stc
in
lock
mov
iret
cli
fsubr
lock
fcomip
or
loope
out
ljmp
loopne
loop
aad
lret
cmp
fdivr
cli
rcr
ret
out
lock
jecxz
out
int
jecxz
xchg
rcr
int
in
xor
jmp
testl
out
int
mov
and
sub
xor
xor
cmp
into
sar
xor
sti
loope
fcmovnb
vpsubb
loop
shr
idivb
xor
shr
aam
stc
int
stc
repz
enter
in
cld
lret
cmc
fucomip
aaa
lret
cmp
neg
sti
iret
cmp
div
out
out
loope
lret
and
fists
jmp
ljmp
into
sar
roll
out
mov
repnz
icebp
iret
les
out
out
hlt
jecxz
sar
cmc
ret
sbb
fisttpll
iret
in
test
ss
leave
cmp
sarl
mul
aad
hlt
aam
enter
aad
div
decl
repnz
sti
fdivs
stc
call
fcmovb
hlt
jmp
in
test
mov
ror
cmp
lret
fdivr
test
fsub
cld
xchg
aad
sbb
int
nop
ret
cmp
aaa
xlat
shr
test
cmc
aam
xlat
loopne
cld
mov
fsub
shr
xchg
mov
enter
out
std
jmp
sar
fcmovnu
iret
mov
fldl
sub
faddl
xlat
ret
icebp
shr
fldln2
ljmp
jmp
jecxz
mov
jmp
mov
nop
xchg
xor
into
jmp
fprem
idivb
xlat
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
mov
lret
scas
add
cmp
filds
mov
loop
loope
xchg
ror
fdiv
cmp
hlt
lock
fdivp
or
sti
out
faddl
decb
ljmp
ss
cmp
cmp
jecxz
test
mov
xchg
mov
repz
ljmp
out
fdivl
repnz
bnd
test
mov
mov
loopne
decl
leave
ss
dec
aaa
incb
sbb
ds
mov
mov
leave
int3
out
fucomp
ror
ljmp
shl
cmp
cmc
out
in
into
sbb
shl
xor
cmp
shl
lock
add
leave
jmp
cmp
in
icebp
sti
ljmp
aad
aad
cmp
aad
mul
fst
shl
fcos
cli
lret
mov
dec
lret
lds
cld
ss
int3
aad
repnz
out
out
mov
orb
out
repnz
in
int
hlt
fstpt
std
in
test
jmp
xchg
leave
xchg
xchg
fcmovnu
out
into
int
sbb
fnstsw
addl
std
out
mov
std
fsubrp
hlt
loop
repz
cmp
cmp
fildl
fcmovne
call
jmp
aam
shrb
stc
in
stc
cmp
enter
int3
cmp
shl
shl
cli
stc
in
movl
xlat
out
cmc
in
xor
int3
jmp
adc
mov
cli
addl
sti
enter
ljmp
loopne
aam
fucomip
cli
out
std
loopne
fnclex
icebp
xor
jmp
fsubrp
cmc
loope
les
cli
xchg
in
ljmp
cmp
fsubr
fldl2t
cmp
sti
ljmp
stc
cmp
jecxz
lret
clc
xchg
cld
mov
rol
in
aaa
cs
cmp
in
cmp
clc
ret
add
out
mov
hlt
xchg
mov
xor
mul
ss
faddl
shr
hlt
leave
out
stc
into
or
sub
xlat
fld1
ljmp
test
cmp
cld
sti
fsub
cmp
addl
in
xor
loope
sti
hlt
aas
loopne
div
xlat
loopne
in
neg
test
shl
int
in
jmp
loop
ss
cld
ret
jecxz
loop
sti
fsub
enter
xchg
in
xor
lret
in
repz
lret
clc
fabs
clc
stc
out
sti
cli
mov
nop
sti
test
xchg
lock
ror
enter
iret
out
into
std
rcr
clc
loopne
lret
in
sbb
out
xchg
out
jecxz
imul
fnstcw
inc
fld
stc
aas
fucomip
clc
xchg
mov
rorl
in
in
lret
dec
fsub
sar
jecxz
aam
hlt
jmp
incl
out
stc
out
out
repz
neg
xor
loope
cmp
stc
ffree
sti
ret
fimull
iret
movb
ss
fmulp
out
fsubr
rcl
icebp
icebp
incb
fisttpl
in
fsub
add
aad
jmp
cmp
stc
out
fst
loopne
fimuls
fisttpl
in
and
cli
repz
std
xor
cmp
in
ds
rol
loop
call
jecxz
adc
in
clc
lock
leave
jmp
repnz
adc
sbb
sti
xlat
sub
mov
jmp
repnz
cmp
jmp
cmp
cmp
fcmovb
jecxz
out
jmp
rorb
xor
idiv
repnz
cmp
cmp
cmp
jmp
fucomi
xchg
enter
fnstcw
out
not
int
out
aas
fcmove
lock
ret
int
cld
leave
nop
test
hlt
loopne
fsubr
xor
shl
in
sti
aam
aas
ds
incl
aad
leave
lret
call
rcr
std
out
repz
loope
into
out
out
fcmovnbe
loope
test
in
mov
ljmp
fninit
xor
xor
cmp
shl
repz
cli
std
leave
std
mov
fsubrp
in
xchg
repnz
cmc
sar
cli
cmc
loope
ds
hlt
test
out
clc
xchg
jne
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
scas
mov
jle
add
in
repz
jmp
icebp
cmp
lret
stc
aam
div
fdivrl
sti
and
cld
fsub
adcl
div
cli
repnz
in
aad
ret
loop
xchg
ret
out
ror
iret
in
cld
out
ljmp
cmp
filds
jecxz
cld
cmc
jecxz
mov
fadds
iret
fisttpll
cmc
in
jmp
aaa
jmp
aad
loopne
xchg
out
cmp
ljmp
cli
cld
in
shr
std
fcmovu
sar
xlat
aad
aad
cmc
ret
fucom
loope
out
call
rorl
sti
xor
into
out
imul
idiv
cmc
xrelease
cld
mov
jecxz
cmp
out
fdivr
cmp
ffree
jecxz
in
fiadds
loop
stc
mov
cli
in
xchg
stc
jmp
cmp
clc
out
out
jecxz
ljmp
mov
aam
std
out
ljmp
ds
out
in
sti
cmc
fst
loop
div
int
into
xlat
and
and
icebp
cld
cmp
stc
test
rcl
shr
hlt
repz
jmp
fucomi
pushl
sub
jmp
loop
fiadds
fst
out
hlt
div
cli
cmp
cli
clc
lret
clc
xor
fxam
cli
testb
jecxz
rcr
fndisi(8087
aad
in
out
xor
out
out
leave
sarl
cmp
jecxz
repz
aas
enter
in
loop
out
leave
xlat
fmul
fchs
cmp
loop
out
inc
out
xchg
xlat
clc
fisttpl
mov
aam
cmc
loopne
int
clc
out
cmp
loope
fadds
ftst
aad
mov
lock
cld
into
mov
xchg
aas
aad
xor
in
int
into
clc
fcom
xlat
ret
sub
xchg
mov
mov
sub
in
xchg
jmp
aad
in
cmp
int
xor
leave
loop
orl
loop
aaa
into
cmp
aad
icebp
repz
out
cli
in
out
lret
fmulp
loopne
decb
jecxz
fdivr
xor
aam
out
aam
rol
not
lret
dec
test
jmp
loopne
rcl
shr
jmp
cmp
faddp
fdivrl
xlat
test
loope
loopne
enter
mov
lret
fidivrl
aad
shr
icebp
repnz
rcr
enter
xlat
ror
loope
jecxz
mov
lds
ljmp
cmp
fcmovne
out
sti
call
repnz
shlb
in
xor
ret
cmp
ret
xchg
sub
xchg
mov
fdivr
xor
jmp
sbb
in
loopne
lret
fildl
mov
into
sub
xor
out
dec
rcr
ds
fcmovbe
out
fucomp
xor
jecxz
fsubrp
mov
cmp
imul
cmp
hlt
aam
adc
ret
repnz
call
and
fucomi
icebp
test
iret
xlat
out
clc
in
xlat
and
test
aad
loopne
loopne
cmp
mov
call
cmc
repz
fiaddl
rcr
out
mov
loop
int3
lret
xchg
jmp
test
not
hlt
xchg
div
mul
testl
shr
in
aad
out
rcl
cmp
shr
icebp
div
sti
or
lret
stc
out
mov
fcomi
out
out
ljmp
icebp
aas
not
roll
lret
jecxz
fimuls
cmc
ret
leave
in
rcl
fsubp
addb
fcmovu
test
in
lea
aad
iret
cmc
icebp
ror
aas
xor
repz
lock
cld
loop
xchg
out
enter
cmp
shl
icebp
lock
out
iret
test
loop
test
out
xor
loopne
stc
cli
xor
shr
hlt
xlat
aam
in
cmp
cld
ret
addl
ljmp
xor
aad
repnz
int
fstp
stc
loope
ljmp
fcmove
mov
hlt
loope
jecxz
cmp
ds
out
in
in
jmp
test
clc
mul
roll
shr
ror
nop
test
ljmp
out
cld
stc
in
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
aas
cmpb
xchg
test
cld
ret
sti
rcr
test
xor
cmp
out
cmp
in
ds
mul
std
in
call
mov
cmp
ljmp
fldl
xlat
aad
ret
jmp
ljmp
hlt
in
call
int
fistpll
fndisi(8087
call
fcmovne
mov
fucomp
imul
xor
jmp
ljmp
loop
test
lret
cmp
out
orb
icebp
lock
out
enter
ret
cmp
out
fdivr
mov
leave
shl
jmp
rcl
lret
int
loope
flds
testl
ficoms
shl
lret
cli
cmp
repz
not
shl
mov
cmp
enter
icebp
call
repnz
icebp
cld
repz
cli
cmpb
lds
jecxz
xchg
shl
xchg
hlt
aaa
div
int
enter
call
cmc
sbb
cld
clc
ljmp
sub
out
div
out
inc
cmc
jmp
rcl
inc
ds
fldl
stc
xchg
in
addl
out
ss
sti
shl
clc
shl
ret
clc
mov
into
cld
test
xor
aam
leave
hlt
int3
fdivp
enter
rcl
in
in
xlat
incl
out
xchg
xor
repz
cmp
aad
ret
sar
mov
in
jecxz
call
in
aaa
ret
xor
imul
cmpb
aas
test
repz
jmp
enter
mov
out
aam
leave
jmp
int3
ds
idivb
icebp
test
fsub
loop
test
mov
jecxz
xchg
fucomip
fistl
in
xor
sti
out
fsubr
cmp
sar
loope
stc
ret
test
ficoml
aad
icebp
int
jmp
fdivrl
lret
fnsetpm(287
shl
idiv
rol
fadd
cli
or
out
jmp
int
cmc
fdivr
clc
loopne
xlat
ret
sbb
mov
fildl
in
leave
lret
mov
in
in
cld
aaa
cld
cmp
ds
in
loop
fcomp
in
lock
mov
adcl
int3
aad
xlat
cld
out
lret
cld
std
icebp
ret
std
mov
nop
ljmp
cmp
in
cmp
out
mov
fsub
orl
loope
xchg
icebp
das
fsub
in
iret
in
out
ss
ds
loop
test
enter
jmp
out
out
jmp
idiv
lock
rcl
icebp
out
ljmp
xchg
jmp
ljmp
fst
jmp
clc
lds
out
jmp
shr
out
lret
div
int
cmp
xlat
jmp
shl
shl
aas
hlt
fsubp
aam
neg
int
shl
loop
shl
ss
shl
leave
lds
xorb
cmpl
std
fndisi(8087
ffreep
fimuls
xchg
icebp
shll
lret
cmp
out
out
test
mul
ljmp
std
in
test
mov
xchg
loopne
repz
ss
shlb
fst
int
clc
inc
movb
fmul
jecxz
loop
rorl
cmp
out
ss
out
cmp
icebp
iret
fld1
neg
cmp
xchg
sbb
xchg
jmp
cmp
idiv
into
ljmp
fmul
test
in
into
fmulp
fdivp
xchg
into
leave
lock
imul
cli
lret
sti
hlt
add
mov
fsubr
test
fmuls
and
leave
cli
cmp
cld
cmp
fdivrp
jmp
in
in
lock
jecxz
jmp
cmp
out
hlt
in
vcomisd
adc
or
repz
mov
lret
out
icebp
xchg
int
xor
fucomi
cmp
into
ret
test
enter
fiadds
mov
call
sar
aad
loope
fprem1
call
ret
enter
sub
shl
nop
xchg
repnz
xor
iret
aad
imul
lret
fdivrp
cld
idivb
fscale
clc
jmp
sbb
lock
int3
lock
icebp
lock
cmp
ret
repz
mov
mov
call
iret
addl
add
aas
sarl
fcmovnbe
fcmovb
loope
add
les
jg
scas
add
loope
adc
rcr
jecxz
ss
cmp
lock
testl
iret
repnz
stc
std
xor
cmp
aaa
rcr
xchg
aad
jmp
xlat
clc
int3
ljmp
jecxz
jmp
shr
out
sbb
mov
repz
cmp
xchg
sub
loopne
xlat
jmp
lret
cmp
lret
iret
in
fcmovnb
xlat
jmp
loope
or
iret
fstl
out
jmp
in
cmc
stc
fucom
aam
xlat
loop
mov
fmull
sub
std
sar
into
adc
sar
and
out
fucomp
ljmp
in
repnz
shlb
cmp
faddp
loope
into
fcmovnbe
hlt
mov
flds
out
aas
ljmp
lret
stc
cmp
fst
ljmp
jmp
icebp
loope
lret
lret
lret
int3
jecxz
test
test
ds
int3
jecxz
sti
xchg
shl
loopne
xor
shr
fmul
ss
imul
fiaddl
call
out
fdivr
nop
nop
xchg
aaa
sti
int
loope
lock
rol
xchg
in
fiaddl
ror
int3
loope
repnz
lock
fsub
cmp
fcmovnb
repnz
adc
call
add
in
sti
test
rcr
xlat
aam
test
jecxz
iret
shl
out
cmc
les
jmp
in
leave
enter
jmp
jmp
std
icebp
iret
ret
icebp
cli
mov
stc
jmp
mov
xchg
lret
mov
rcr
das
call
ret
push
in
xchg
clc
xlat
jecxz
cld
jmp
test
rol
in
lret
lret
div
fsubp
loop
fsub
ror
filds
repz
in
call
fldlg2
hlt
sar
repz
in
fldl
mov
ljmp
xlat
ljmp
repz
fldl
fmulp
xchg
test
std
test
int3
ret
iret
aad
shl
into
cmp
cmp
and
sti
leave
out
out
adcl
lret
in
cmp
std
std
out
aaa
cmp
orl
call
cld
cmp
ds
lret
cmpb
not
repz
out
in
fucomip
aam
iret
xor
lock
aad
leave
cmp
xor
and
cmp
call
xchg
shr
in
ret
cs
out
call
hlt
sbb
ret
lret
in
test
mov
ss
fdivrl
aam
iret
call
jmp
loope
fildl
leave
sub
jecxz
not
lock
cli
fdivrs
in
rol
fdivr
enter
jecxz
loop
loop
leave
in
sub
clc
fsubp
jecxz
fdivr
div
loopne
lret
int
mov
lret
sbb
xor
cmp
call
cmc
sti
xor
ds
call
mov
xlat
lock
aaa
int3
int
xor
lock
idivb
hlt
mul
out
fmuls
mov
lret
shr
repnz
cmc
xchg
cli
addl
enter
clc
das
stc
sti
test
jecxz
cmc
jecxz
addb
fprem1
jecxz
cmp
jmp
aam
ds
ret
leave
cld
in
loope
in
loopne
mov
lock
shll
lret
out
aaa
icebp
iret
fcmovnu
ret
into
aam
out
sar
enter
leave
icebp
mov
aad
enter
in
neg
cli
aad
into
ret
repnz
out
cli
mov
xchg
lea
stc
std
std
sti
fcmovnbe
int
in
std
addb
jmp
mov
lret
xchg
sub
enter
xor
cli
iret
shl
neg
fcomp
ret
fimull
ljmp
clc
lock
in
shr
rcr
roll
xchg
xlat
shl
jecxz
not
sarl
aad
call
fmul
cld
addb
fmuls
call
lret
cmp
lock
in
xor
call
add
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
sarb
rorb
in
fimull
loope
lock
in
out
aas
iret
cld
int3
hlt
out
repnz
int3
in
enter
loope
lock
icebp
int
aad
stc
idiv
cmp
in
cmp
repnz
xchg
enter
out
jmp
rcl
out
cmp
aas
stc
cli
cmp
fld
mov
in
pop
std
sub
out
les
leave
call
out
ljmp
fmuls
test
out
cs
repz
sar
inc
lret
loope
out
clc
loop
aad
cld
in
repnz
shrb
rcr
sti
lret
hlt
test
loopne
cmp
repnz
lret
aas
cmp
repnz
into
clc
cmp
xor
out
xlat
cmp
fidivrs
cmc
lock
xchg
mov
xlat
aas
in
in
repnz
shr
aam
in
ror
repz
cld
icebp
aas
fld
bnd
lret
lret
call
int3
fsubp
not
xor
aam
aad
cmp
repz
out
repz
loop
leave
lret
ljmp
call
cli
ljmp
shl
mov
fdivp
sar
test
and
xor
lock
xor
roll
addl
xchg
icebp
into
out
repnz
adc
ret
fiaddl
mov
xchg
xchg
out
clc
iret
cli
aas
repnz
aam
fcmovnu
in
fcmovb
enter
mov
xchg
mov
xchg
fsubrs
sub
out
div
cmp
icebp
cmp
ret
icebp
hlt
std
hlt
cmp
into
xchg
rorl
loope
stc
xor
iret
cli
out
jmp
hlt
out
xchg
fmuls
jecxz
into
repz
hlt
repz
out
fcmovu
cmp
xlat
cmp
aam
icebp
repnz
in
clc
sti
test
jmp
loop
loope
ret
int
ret
lret
cmp
sar
clc
aas
adc
aam
mov
add
fsubp
out
int3
loopne
lock
repnz
aad
cmp
in
aam
ret
fcomi
in
call
out
in
enter
call
xlat
iret
out
ftst
iret
out
fstp
lock
clc
addb
jmp
or
nop
jecxz
fxam
sti
fcmovne
aam
loop
adc
mov
mov
icebp
out
out
test
clc
xor
enter
enter
sti
dec
out
repz
rorb
sbb
in
jecxz
xchg
sub
icebp
hlt
repnz
aas
loope
cmp
in
stc
fdivp
hlt
cmp
fimull
ljmp
fcmovbe
idiv
ret
out
fst
ret
ret
in
rol
loope
ret
stc
not
fidivrs
test
and
mov
test
fadd
ljmp
enter
jmp
repnz
fst
aas
hlt
ret
out
mov
int3
std
aam
out
call
jmp
icebp
lock
ret
jecxz
ret
cmp
loopne
cli
out
cld
sub
div
xor
std
cli
icebp
ss
out
loopne
jmp
aas
flds
into
loope
aam
int3
ljmp
cmp
shl
cmp
mov
dec
addb
out
hlt
das
out
aam
lock
leave
addb
xlat
repz
imul
orl
enter
ds
lret
idiv
ret
ljmp
xchg
sti
std
test
aad
xor
aaa
fsubr
xor
rol
fucom
stc
dec
test
mov
addl
stc
lds
stc
stc
ss
repz
cmp
neg
stc
jecxz
out
hlt
call
lret
into
repnz
fcomip
aam
xchg
and
in
mov
xchg
in
repz
xor
xor
out
xor
icebp
idiv
test
xchg
cmp
xchg
repz
mov
enter
cli
loope
loopne
cmp
fsubr
ljmp
out
lock
int3
or
jmp
repz
stc
loop
enter
jmp
call
repnz
xor
in
std
call
lock
movl
jne
jmp
rcl
aad
aad
shll
mov
jg
scas
add
xchg
lds
ljmp
repz
call
and
decl
xchg
aad
shlb
iret
cld
leave
cmp
fdivp
cld
ret
repz
jecxz
shr
fiaddl
stc
fucomp
repnz
repnz
in
aaa
jecxz
aas
cmp
loope
repnz
les
jmp
lret
xor
call
cld
lret
fadd
aas
cmc
icebp
orl
call
shlb
repz
leave
cmp
roll
lock
vshufpd
out
lock
fisttpll
aam
sub
xor
aam
stc
sar
cmp
rcl
aam
jmp
cld
stc
out
int
stc
xor
stc
aaa
cmp
rcl
lock
fiadds
fsubp
out
xchg
xor
icebp
in
xor
cmp
clc
xorb
fadds
in
cli
decl
xchg
xor
fcmovu
lret
stc
fxch
aad
fdivrp
ret
fstp
and
aad
testb
loope
leave
out
in
cmp
fcomi
loopne
out
cmp
lock
cli
rorb
fisttpll
out
test
in
fdivrl
fcmovnu
cmp
ror
clc
cld
jecxz
loope
test
decl
hlt
mov
out
fcmovnu
das
out
cmp
in
ret
sti
ret
repz
stc
mov
fists
in
hlt
shr
out
lret
lret
shl
out
aam
bnd
xchg
stc
cld
int
int
aam
xor
in
jmp
loopne
fdiv
cmp
stc
cli
flds
test
iret
jmp
in
in
int
cmp
ret
hlt
enter
lret
mov
in
mov
in
loop
iret
repz
sarb
cli
ds
fdivp
test
fcmovb
mov
cmc
xlat
sti
mov
movl
icebp
leave
das
in
enter
shl
fsubrp
out
xchg
test
enter
jmp
xchg
hlt
fldcw
jmp
fst
out
rcr
test
call
test
loopne
call
out
lock
shl
jmp
rol
sar
xchg
shl
in
fst
in
nop
sub
shr
div
stc
int
clc
out
xor
loopne
shr
add
fld
test
jecxz
mov
out
fstp
in
out
jmp
fucompp
xor
out
xlat
out
out
ret
mov
adc
cld
cmp
jecxz
rol
ret
sti
cld
mov
int
out
loopne
int
aad
xor
fcmovne
aad
cld
std
cmp
cmp
in
stc
stc
clc
call
test
mov
xlat
call
cld
std
fcmovnbe
jmp
lock
movl
call
aaa
cli
rcl
std
shl
lret
sar
rcr
iret
xlat
ret
xlat
repnz
decl
shl
xor
lret
out
cmp
out
aaa
div
flds
sti
xor
jecxz
std
out
mov
mov
rol
xor
ds
cmp
out
cld
sar
fsubr
fsubr
mov
enter
fcomip
loop
repnz
int3
aaa
cmp
out
out
fucomi
mov
ljmp
iret
xor
ror
icebp
out
ds
cmp
cmp
addl
mov
mov
in
shrb
xor
aaa
lret
jmp
out
sarb
ds
aam
cmpl
mov
jmp
test
fcmovu
cmp
cmp
repz
rorb
in
loopne
repnz
fmul
xbegin
in
std
faddp
in
out
fsubr
ljmp
repz
cmp
xor
add
hlt
xlat
and
xchg
stc
xlat
loop
mov
xchg
aaa
xor
lret
loope
rcl
out
adc
ror
testb
in
fisttpll
cmc
cmc
xor
icebp
sti
hlt
aam
sarb
fsub
ret
adc
fisttps
xchg
loope
lret
test
xlat
xor
stc
ret
ds
cld
jecxz
out
int
orb
fdiv
aam
fyl2xp1
repnz
cmp
std
ret
sbb
stc
mov
fdiv
rcl
xchg
out
cmp
aam
cmp
aas
cmp
cmpl
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
dec
mov
mov
scas
add
xchg
stc
out
add
in
test
xchg
xor
out
sub
call
and
ds
call
mov
ret
jmp
in
jmp
aaa
cmp
rcr
not
xlat
fmull
cli
decb
jmp
into
cmp
cmp
rcr
int3
std
repz
les
fucompp
mov
xchg
jmp
loope
stc
fcmovb
xor
jmp
loope
hlt
shl
call
loopne
push
out
mov
out
aad
xor
enter
xor
out
jmp
enter
decl
out
cmp
out
sub
in
mov
enter
jmp
out
leave
int
aaa
in
ljmp
repz
in
mov
in
rorb
aaa
cli
leave
shl
call
clc
addl
in
and
mov
xor
das
hlt
fadd
ror
clc
int
cmp
stc
test
out
ret
loope
roll
ss
ss
out
div
cmp
sar
sarl
mov
ret
out
std
lret
call
in
fdiv
enter
loop
aad
xlat
test
xchg
cld
and
xor
repnz
jmp
hlt
sar
stc
repz
mov
cmc
incl
icebp
into
into
mov
rol
lret
cmc
aaa
xor
ss
sti
cmp
in
jecxz
in
fdivrp
in
lret
jmp
ss
ljmp
out
clc
repnz
out
incb
aam
cmc
xor
xor
jmp
cmp
addb
sbb
cld
rclb
repz
xor
out
sar
in
loope
mov
xlat
vpmulhuw
lret
in
test
cld
aaa
into
ss
lock
ret
fcmovnb
loop
shl
jmp
add
lret
out
incl
clc
lret
fprem
aam
faddl
fdivrp
lret
lret
in
hlt
lret
int
repz
int3
aam
inc
std
shll
loop
hlt
out
leave
jmp
mov
out
xchg
fucomp
mov
loope
cmp
das
in
shr
out
into
repnz
neg
div
mov
mov
lret
mov
fucomi
out
enter
cld
fsub
fdivrp
cld
fdivr
fmull
call
xchg
ss
cmp
clc
aam
rcl
out
cmp
fcmovbe
xlat
clc
test
addb
jecxz
hlt
into
fscale
in
fdivp
rol
xlat
cli
loope
lock
stc
test
fsubp
mov
in
enter
ljmp
cmp
sar
ds
test
mul
orl
shl
out
mov
jecxz
not
icebp
out
std
xor
aas
sarb
cmp
aam
stc
cli
jmp
xchg
mov
xor
mul
icebp
div
ss
in
ror
sarl
xlat
loop
mov
jmp
popl
fbstp
xlat
in
sti
xor
rcr
ljmp
xchg
sti
leave
test
cli
enter
repz
into
shlb
fdivr
lock
fdivrl
call
into
sti
fadd
idivb
in
enter
ljmp
ljmp
cmp
movl
cli
xchg
loop
jecxz
call
iret
repz
cli
icebp
in
clc
incb
jecxz
ret
rcl
mov
int
das
xlat
cmp
sti
jecxz
cmp
shl
xlat
test
loope
fstp
fisttps
lds
repnz
out
jmp
call
sbb
out
fxam
test
fiadds
xchg
mov
loope
aam
out
hlt
int
in
fdivr
cmp
lock
out
cld
jecxz
iret
repz
fdivs
xor
shl
cmc
jecxz
and
in
mov
xchg
leave
mov
nop
jmp
loopne
icebp
xor
out
icebp
repnz
ret
addl
ror
into
mov
cs
aad
lret
fsubr
ss
fmul
test
in
movb
out
fcoml
shr
repz
loope
cmp
xchg
fucomi
in
lret
orb
in
xor
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
sub
jg
jg
or
jle
int
jmp
sti
icebp
lock
sti
shl
lock
addl
test
jecxz
ljmp
aam
xor
cmc
lock
faddp
loop
lret
cld
jmp
out
leave
loope
xchg
loop
iret
aad
aam
sti
ds
icebp
faddl
icebp
cmp
in
mov
fldl
xor
icebp
rcr
aaa
cmp
std
loop
rcr
filds
mov
loopne
lret
loope
sub
ret
hlt
into
fiadds
shl
cli
mov
cli
aad
lea
in
aam
cmp
lret
rcl
leave
sti
aas
repz
ret
sbb
ds
in
ljmp
out
mov
ljmp
push
neg
cli
cmp
fucomi
int3
xchg
ret
xor
enter
loope
rcr
lds
fcmove
out
cli
cli
flds
aad
ret
hlt
xor
xlat
out
into
icebp
test
hlt
sbb
in
jmp
in
ljmp
out
shl
jecxz
cmp
out
fdiv
faddp
rcl
repnz
fmul
leave
loop
mov
leave
jecxz
in
iret
repz
ret
jmp
hlt
clc
lret
ret
fsubrp
out
test
lret
cli
loope
lret
test
test
clc
sub
call
aas
cmp
testl
in
rolb
rcl
sub
out
in
into
jmp
out
iret
lret
jecxz
fdivr
jecxz
lret
out
nop
ret
xchg
loopne
and
xor
clc
repnz
sti
ret
rol
std
addb
xlat
orl
ss
cmc
xor
lock
sarb
ret
xchg
test
loopne
lret
ljmp
nop
call
stc
int3
aaa
shl
sti
into
lock
neg
roll
fsubr
ror
ror
divl
in
stc
shl
loope
xor
ffree
out
xlat
fucom
fsub
fsts
in
enter
aam
idiv
int3
fdiv
icebp
jecxz
aam
leave
in
fisttpl
std
shl
das
enter
int3
shr
int3
jmp
rol
repz
fsub
jmp
cli
jmp
iret
xchg
out
stc
loope
stc
shl
ss
faddp
aad
rcl
cli
clc
call
in
leave
nop
in
out
xlat
into
test
jmp
ror
ds
hlt
ret
aam
or
clc
cld
loop
jmp
loopne
loop
sti
cmp
ss
cmp
rcl
addl
fildl
lret
out
fiadds
call
enter
jecxz
clc
lock
std
decb
divl
enter
repnz
ret
repnz
aad
cld
fcomp
in
test
xor
xlat
call
shl
sbb
fiadds
jmp
in
in
test
aad
xor
into
out
loopne
hlt
out
in
std
mov
enter
lock
addb
in
iret
jmp
fnstenv
out
fucomip
xlat
cmp
aad
jmp
fsub
repz
xchg
out
aad
les
aaa
lret
cs
loopne
cmp
ffreep
mov
mov
ficoms
jmp
cmc
xor
clc
jmp
fcmovnu
xchg
int
fdivr
hlt
out
out
fsubr
jmp
xor
cmp
into
in
loope
add
mov
mov
xchg
xchg
out
sub
call
in
not
aad
xlat
xchg
sub
xchg
mov
in
xor
cmp
aam
adc
stc
incb
ljmp
jecxz
lret
divb
cmp
enter
jmp
cld
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
outsl
movsl
fisubl
or
jle
loope
fadds
rcr
in
icebp
repz
hlt
aam
xor
div
in
lret
lret
ret
loopne
sti
ret
adc
enter
xchg
jmp
xor
fdivr
fdivl
lock
cmp
lret
sbb
and
sbb
int
mov
rol
call
cmp
leave
cmp
cld
repnz
clc
loope
jmp
cmc
cli
jmp
call
aam
les
in
cmp
ds
jmp
les
faddp
aad
std
mov
loopne
cld
mov
dec
ror
into
out
fnstsw
cmp
lret
in
leave
in
into
hlt
rol
int3
xlat
shr
aad
xlat
div
ds
iret
cli
ljmp
mov
xchg
and
icebp
xor
cli
clc
ss
cmp
cmc
ffree
ds
lock
fadd
xchg
out
out
xchg
ret
aam
fcmovnu
ss
sti
adc
cld
ljmp
fldl
imul
lret
xor
std
cmp
shl
rolb
xchg
lret
xrelease
jmp
loop,pt
ds
rorb
xchg
sti
repnz
nop
in
int
das
out
sar
cmc
ljmp
fcmovnbe
lock
lock
out
int3
test
out
shl
out
fsubrp
sti
fmulp
fucom
incb
std
into
test
sti
ficoml
ss
sti
lret
ljmp
iret
fistpll
aam
rcr
fneni(8087
lret
into
loop
sub
cmp
shl
enter
stc
ds
lock
cmp
aad
jmp
fcmove
iret
sti
leave
decl
lock
repz
out
push
in
in
fcomi
out
test
mov
int
jmp
cmp
fldl
out
faddl
ffreep
test
lret
nop
rcll
neg
fcomi
in
cmp
ss
cmp
xlat
stc
loopne
ret
loope
lret
in
jmp
loopne
fcomi
int
rcr
rcl
testb
fcomi
fstp
test
into
test
in
cmc
shr
std
fstp
fdivr
cmp
ror
xchg
orb
shr
xchg
les
cli
lock
fstp
loope
loope
rol
jecxz
mov
call
loop
aad
lock
int3
xlat
aam
cld
loop
cmp
icebp
xor
fmulp
mov
loopne
orb
repz
clc
xlat
in
aaa
cli
stc
fidivrs
loop
call
test
fscale
enter
fucom
fucomip
xor
xor
hlt
xor
cmp
sti
cli
ror
clc
loopne
repnz
test
fucomip
shl
icebp
fdivp
aad
repnz
out
out
out
jmp
cmp
in
clc
cmp
out
aam
repz
jmp
mov
icebp
lock
jmp
shl
hlt
shlb
ljmp
in
cli
in
stc
div
faddl
xchg
leave
out
xchg
icebp
out
rcr
in
loope
fnop
test
cli
neg
lret
in
call
sub
fnstenv
les
ror
cmp
stc
into
and
hlt
leave
xchg
rclb
repz
jmp
std
in
cmp
cmp
int
addl
std
out
rorb
repnz
sti
fcmovne
cmp
in
adc
in
ds
lret
cli
sti
loop
in
int
jmp
mov
shl
ljmp
ljmp
shl
shr
in
lock
or
jecxz
loop
xlat
xor
ljmp
sti
sbb
rcl
test
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
testl
jg
or
jle
mov
fldl
fisubrs
sti
das
xlat
rcl
cmp
cmp
out
icebp
not
les
test
jmp
xor
cmp
aam
fsubr
repnz
iret
aas
cmp
aad
loopne
jmp
aad
cmp
cmc
jmp
idiv
xor
iret
out
cmp
into
cmp
fisttps
iret
lret
ljmp
into
aad
out
lret
cli
iret
loop
not
xchg
test
mov
hlt
xchg
enter
cmp
fmul
in
in
loop
aas
fcmovne
xchg
int
leave
addl
shr
int3
stc
hlt
icebp
fadd
ret
cmp
lret
test
sti
lret
aad
lret
sarl
cmp
in
std
sar
sarl
les
fmull
lock
aaa
fprem1
out
leave
fmulp
imul
rcr
fadd
clc
mov
call
in
rorl
cld
leave
rcl
cmp
ds
mul
out
decl
in
mov
mov
loope
sub
das
cmp
jecxz
out
cmp
idivl
in
ljmp
addb
in
in
repnz
das
iret
cmp
cmp
lret
out
bnd
in
xabort
loop
jmp
jmp
imul
fmul
xor
ljmp
cmp
lret
iret
call
into
leave
ret
in
xor
lret
enter
icebp
fdivp
lock
in
inc
orl
xor
cmp
lret
hlt
fnstsw
loop
clc
cmp
fcomip
cld
mov
mov
ljmp
ljmp
loopne
fyl2xp1
and
fsubrp
xchg
mov
jmp
ljmp
sti
add
rcl
fcmove
fsubp
xchg
shl
jmp
ss
fsqrt
int3
sarl
fcomp
rcl
xchg
mov
fsubp
mov
lds
fsubrp
ror
imul
aaa
jmp
cmp
xor
xlat
sti
orl
loope
hlt
rcl
shl
int
in
in
repz
xchg
clc
aad
enter
mov
test
ss
repz
std
shl
cmc
cmp
inc
rcr
xchg
fdivrp
int
repz
xchg
sarb
in
into
shlb
repnz
jmp
ds
cli
icebp
fprem1
push
mov
call
out
cmc
cmp
div
inc
fcmovnu
sbb
fcmovnbe
fsub
lret
in
nop
xchg
test
rolb
hlt
in
bnd
ss
loop
roll
rol
ret
stc
mov
mov
aad
in
xor
lret
xor
idivb
cld
xor
out
repnz
mov
jmp
lret
sar
lret
xchg
lret
shl
imul
cmp
ds
ret
aad
fdivr
clc
and
out
in
mov
icebp
sub
xlat
sti
out
xlat
in
loope
rolb
enter
in
int
mov
shl
jecxz
xlat
fcmovb
ftst
jmp
enter
sar
ror
lock
call
fiadds
into
imul
icebp
fcom
xor
cmp
int
fstpt
fcmovnbe
shl
ret
sti
loope
mov
in
xchg
test
out
iret
aad
xor
call
xlat
fcmovb
out
lock
cli
out
mov
jecxz
and
fnstenv
call
in
fiadds
std
loope
idiv
mov
xchg
fcom
cmc
shl
xor
clc
jmp
out
rcr
imul
test
mov
fisttpll
jmp
in
cmc
icebp
fcmovu
aad
ljmp
repnz
clc
aad
clc
loope
in
out
mov
aad
idivb
add
andl
add
adc
jmp
rcl
aad
rcrl
mov
and
jg
or
jle
ljmp
fsubrp
not
lds
incb
fildl
sub
lret
stc
lds
leave
idivl
and
std
fadd
repz
in
mov
out
xchg
repz
shl
ror
hlt
repz
stc
shl
ljmp
xchg
rcl
sti
shr
cmc
ds
jmp
xor
shl
fsub
test
flds
lea
into
jecxz
std
fcomp
cld
aaa
lret
iret
xchg
jecxz
test
xchg
xchg
int
test
fmulp
aaa
aad
shr
lds
int
cmp
lock
shl
add
stc
repnz
out
cmc
out
repz
aad
aam
not
loopne
out
mov
enter
or
shl
aaa
cmp
cli
shr
ljmp
out
leave
std
mov
leave
test
ljmp
in
loop
test
enter
out
iret
mov
mov
ljmp
aad
aad
repnz
fsub
sarl
xchg
mov
xchg
jecxz
test
ss
repnz
shl
in
rorl
icebp
out
int
fmul
xor
xor
in
out
shl
adc
ret
imul
jmp
into
cld
iret
iret
out
rcr
cmp
lret
sti
fcmovu
flds
aam
les
jmp
xlat
imul
xor
stc
rol
ret
fidivrs
loope
cmc
mov
icebp
cmc
shrb
int3
cmc
ljmp
add
test
lock
in
cli
test
stc
loopne
shl
adc
shr
sub
ror
enter
test
cmpb
out
loopne
nop
jmp
std
cld
hlt
fdivp
test
cmp
repnz
xlat
div
fidivrs
test
icebp
cmp
xchg
mov
in
std
out
in
shr
aaa
sar
xlat
lock
cmp
lock
fsubp
cmc
loopne
sti
or
ror
test
jmp
into
cmp
incl
add
cli
lock
lret
in
aad
test
out
cld
in
rcl
fsubr
in
loopne
int
in
int3
lds
ret
call
cld
fdivr
cmp
fidivrl
test
test
stc
fdivr
ljmp
out
in
xor
xlat
xor
cmc
fxch
rcr
fsub
ret
repnz
xchg
lret
jmp
inc
out
iret
loopne
mov
shl
xor
out
lock
repz
idiv
std
out
aam
test
ficoml
in
test
das
xor
xor
in
out
loope
addb
fsubp
test
xor
xor
enter
hlt
ds
ret
in
jmp
out
test
aaa
lock
cmc
xor
int
xor
aas
fnstsw
in
cld
addl
call
cli
out
cmp
fdivp
div
fiadds
call
cli
repnz
out
sub
aad
repz
lock
idiv
roll
clc
mov
adc
out
sar
cmp
cld
cmc
fucomip
fcomip
roll
ffreep
stc
test
or
out
sub
clc
jmp
sar
int
out
fnstcw
rcl
fdivrs
fldl2t
lret
call
mov
loopne
int
xlat
cmp
iret
jmp
cmpl
test
testl
lret
lock
fucom
cmp
std
repz
test
shl
out
decl
xchg
int3
vphaddwq
call
repnz
clc
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
or
mov
sub
jg
roll
jle
ret
rolb
loope
jecxz
adcl
lret
lds
sarl
cld
ret
not
fdivr
stc
fiadds
out
or
iret
aad
aas
iret
int
call
out
fcmove
loope
xchg
clc
test
cli
test
idiv
in
orb
divl
fsubr
fnstsw
rcl
lock
addl
fcomi
out
xchg
cld
lret
in
in
enter
fnstsw
iret
std
loope
std
lock
cmp
mov
sti
out
stc
repz
out
ret
in
cmp
aad
lock
shll
mov
mov
jmp
filds
out
ror
shl
ljmp
icebp
faddl
jecxz
cmpb
mov
lret
xchg
lock
jmp
cli
cmp
cmp
ffree
fadds
lret
cli
call
jmp
aaa
out
leave
aaa
fld
leave
sar
hlt
incl
in
sti
std
jmp
and
shr
fldl
repz
shl
repz
dec
lock
sti
sbb
cmc
clc
mov
lock
loope
jecxz
out
ret
das
cmp
fucom
out
lock
ljmp
neg
cmpl
jmp
iret
call
fdiv
cli
out
test
in
aaa
cli
icebp
loopne
out
into
ljmp
jmp
idiv
aam
out
fnop
int
cmp
in
sbb
jmp
rorb
in
ss
iret
sarb
repnz
shl
hlt
and
jecxz
fucomi
mov
mov
lock
loop
xor
xor
in
in
aam
loope
ret
xor
in
jmp
in
mov
faddl
cmc
out
repz
cld
dec
lock
shl
cmp
cli
out
call
in
and
out
aaa
xor
lds
aas
cli
mov
fiadds
xchg
out
std
nop
idivl
iret
shr
in
ss
ror
imul
xor
test
iret
sti
aad
fsub
ret
in
stc
out
and
in
repz
int3
out
test
cmpb
addl
shl
iret
and
enter
aaa
fucomp
rolb
xlat
repz
clc
mov
mov
clc
out
icebp
mov
in
into
cmc
fyl2x
in
jmp
cmp
div
aam
fildl
jmp
jmp
lock
sub
stc
xor
aaa
call
test
not
mov
jmp
xchg
adc
xor
in
xor
out
cmc
sar
lock
rcr
fstp
cmp
jmp
aam
enter
leave
filds
f2xm1
jmp
cmp
cld
roll
fsubr
int
sbb
mov
lock
enter
aad
div
cmp
ret
sbb
fucomip
int
clc
xchg
int3
iret
int3
mov
clc
jecxz
fsub
out
cli
out
test
test
loope
out
leave
enter
jmp
in
xchg
xor
cli
fmul
lret
ret
lock
stc
sbb
int
test
xor
shlb
mul
rcl
ss
aam
out
xlat
out
cld
ret
ret
jmp
stc
rcl
shl
test
enter
into
aas
shl
cmp
repz
clc
mov
ljmp
call
xor
mul
loope
or
mov
and
lret
leave
out
in
icebp
xor
out
cmc
out
aaa
stc
sar
fmul
addb
sti
mov
int
call
shl
jmp
ljmp
loope
fxch
aam
loope
fsubr
shl
aam
xor
xor
out
iret
cmp
sbb
xchg
mov
rorl
fiadds
shll
clc
test
into
cmc
cli
shl
aam
sti
xlat
and
out
test
rol
hlt
xchg
aaa
sub
stc
loope
cmpl
ret
shl
loop
out
fdivrp
jmp
out
movl
movl
mov
sub
jmp
mov
fstp
enter
imul
jl
jg
roll
jle
int3
jmp
in
out
repz
call
lock
sbb
leave
lret
out
jecxz
int
lret
shlb
vmovq
in
xor
fucomip
fld
aam
loope
enter
std
fcomip
cld
mov
ljmp
std
leave
repz
loope
cli
in
rcl
ds
loop
fcmovnbe
xchg
ljmp
xor
shlb
shl
filds
loop
enter
mov
rcr
aam
iret
ror
int
xlat
repnz
lret
in
test
cmc
enter
mov
testb
div
icebp
adc
cmc
loopne
xlat
loopne
cmc
out
leave
ljmp
mov
test
cmp
rcr
rcr
loopne
out
fldl
cli
loope
fdiv
call
cmc
fcmovne
cmp
into
xlat
in
cmp
cmp
cmc
into
cld
sub
fcmovu
aad
fcmovu
or
call
jmp
repnz
incl
fdivrp
out
mov
lea
xor
hlt
ljmp
cmp
loopne
fldl
out
cmc
shlb
cmc
xlat
rcr
in
jmp
in
in
fisttpll
hlt
mov
call
roll
jmp
cli
aaa
stc
int
and
fld1
mov
testl
loope
iret
rcr
cmp
ss
xor
addb
loop
in
out
cli
mov
xor
cli
int
stc
cmp
out
aaa
fidivrl
out
mov
fucomip
incb
xchg
lret
iret
ret
div
das
pushl
xlat
cmpb
into
fprem1
rcl
aad
cld
in
decl
test
cmp
repz
shl
out
testl
sti
out
loopne
repnz
loopne
int3
enter
fdivp
iret
cmp
fnstcw
xchg
cld
mov
mov
jecxz
aad
repnz
iret
sar
fdivrp
cmp
aas
repz
sarl
test
call
shl
xlat
lock
leave
aam
hlt
fdivr
xlat
out
fcmovbe
repnz
cld
lret
fcmovnu
test
jecxz
mov
xchg
test
out
sar
xlat
stc
iret
out
fptan
mov
rolb
fucomp
xchg
aam
into
cs
ljmp
cmpl
in
mov
xchg
std
xchg
out
das
out
call
fcom
add
lock
stc
jmp
xchg
std
jecxz
int3
lock
ss
stc
cmp
into
loope
loopne
xchg
xchg
ret
mov
sti
into
test
ljmp
call
and
sbb
fcmove
cld
cli
test
mov
int3
in
iret
out
icebp
xlat
shl
ljmp
cmp
ret
fsubp
filds
int3
sti
lret
in
neg
enter
aaa
in
out
in
in
repnz
iret
lock
or
mov
xchg
in
mov
xor
sti
lock
loopne
or
ret
rol
fcmovu
sbb
mov
std
shl
repz
ret
int
in
out
into
aad
imul
out
cmp
xchg
fxtract
fscale
out
loop
fst
repz
out
les
xor
cmp
icebp
test
aad
enter
cmc
fucomip
mov
in
call
xor
ret
out
hlt
stc
cli
in
cmp
stc
in
loop
fiadds
loop
lret
call
fucomp
loopne
rcl
neg
out
ds
mov
sti
ret
roll
mov
xor
divl
xor
std
xor
fcmovnbe
test
orb
xchg
lock
clc
cli
out
iret
cli
clc
repnz
stc
loop
aam
loopne
loope
ljmp
mov
repz
out
in
rcr
fnsave
fidivrl
cmp
cli
fldl
stc
mov
leave
xchg
fucomp
shl
jmp
loop
call
f2xm1
cmp
shl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
mov
fdiv
int
loope
lea
hlt
cmc
sar
iret
ss
jmp
ds
jecxz
ret
mov
int3
in
mov
nop
enter
call
loop
jecxz
ret
cli
cmp
fsub
int3
loope
enter
out
lret
leave
in
cmc
cmp
cmp
test
aam
int
mov
xchg
cld
jmp
loopne
int3
cli
out
icebp
loope
int
out
iret
lock
aas
rol
sti
faddp
mov
int3
fcmovu
test
iret
repz
aas
jmp
cmc
into
lock
mov
fsub
ljmp
adc
jecxz
jmp
aaa
out
loope
cli
in
sar
mov
mov
out
jecxz
mov
out
repnz
in
in
idiv
call
icebp
out
xchg
call
out
lret
cld
lea
stc
iret
fdivr
in
sar
cli
loop
shl
sar
shl
call
jmp
test
jmp
aaa
call
cmp
cmp
jecxz
ror
mov
jecxz
ljmp
cmc
ret
xor
in
iret
fsubr
std
fmulp
int3
loope
jmp
les
mov
les
ljmp
cld
jmp
addb
stc
stc
in
std
jmp
test
ljmp
fcmovnbe
cmp
iret
out
fmul
sti
icebp
call
int3
fsubrp
xchg
jmp
aam
icebp
out
and
into
loope
leave
imul
stc
xlat
fsubr
lret
test
loopne
xor
xor
lock
repnz
lock
leave
stc
fmul
lret
mov
int
test
icebp
in
mov
cli
cmc
jmp
in
stc
sti
cld
in
inc
mov
xchg
test
mov
popl
in
xor
repnz
cmp
cmpb
test
std
cmp
rol
call
cld
call
clc
ss
cli
out
icebp
ss
fcomip
test
fdivr
aad
leave
out
fldln2
mov
xchg
sti
in
rcl
aad
in
clc
cmp
test
repnz
jecxz
fnop
cli
jmp
shl
xchg
cmp
into
fmuls
in
xor
xor
icebp
xor
fsubr
rcl
fadd
ret
loopne
in
addl
rcl
das
shr
clc
clc
aad
lock
loope
loopne
mov
std
stc
loope
mov
xchg
in
xchg
xor
repz
cmp
cmc
lock
ret
jecxz
out
loope
fxch
mov
repnz
in
out
lds
std
clc
in
add
adc
out
lret
or
xchg
fnstcw
in
out
fidivrl
stc
lock
in
ret
jmp
int3
leave
cmp
cld
mov
ret
fidivl
ds
aas
ds
addb
jmp
xchg
icebp
repnz
cs
aad
ret
out
ljmp
in
aas
inc
jmp
out
xchg
fisttpll
hlt
call
xor
aad
lock
loop
xchg
mov
test
out
out
xchg
cmp
rcl
cld
repnz
iret
out
fcmovnb
xchg
loop
mov
mov
aam
fnstsw
iret
enter
test
cli
ret
sarb
repz
lock
loopne
fcmove
int3
idivl
aad
hlt
clc
ds
jecxz
les
roll
ret
xor
sub
ss
int3
ror
repnz
jecxz
stc
fcom
in
test
test
mov
jmp
loope
xor
repz
ss
aad
addl
int3
in
enter
lock
out
fcomi
cmp
cli
enter
shl
in
ffreep
mov
int
jecxz
std
fsubp
in
out
cmp
std
repnz
jmp
xchg
fld
in
out
xchg
cli
mov
loope
cli
cmp
fmuls
inc
arpl
orl
add
imul
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
dec
jne
mov
mov
roll
jle
cmp
fdivrs
cmp
loopne
aad
sarl
rol
neg
sti
test
mov
in
mov
lock
divl
bnd
cld
ret
fiadds
lret
jecxz
iret
icebp
sub
enter
lret
in
rolb
in
loop
jecxz
lret
jmp
add
out
xor
jecxz
sub
fidivl
std
lret
icebp
cmp
in
fildl
icebp
in
loopne
icebp
out
repnz
ret
sarl
xor
loopne
lock
jmp
cmp
repnz
in
aam
aam
aam
test
test
xchg
fcom
loopne
rol
cld
loop
in
cld
addb
divl
xor
int3
repz
ret
lock
mov
lret
loop
cld
mov
into
xchg
mov
stc
int3
fadd
neg
shl
std
shl
shr
cmp
repz
call
xchg
lock
clc
clc
sti
xor
div
sarl
repnz
aad
in
mul
fimuls
mov
loopne
pop
clc
out
in
fucomp
into
jmp
jecxz
fucomi
test
icebp
fadds
jmp
loop
mov
jmp
jmp
faddp
stc
sar
std
std
vpaddusw
fiaddl
mov
xchg
out
in
out
cmp
cli
aam
ret
cli
xor
in
int
cli
out
out
lret
xchg
aam
cli
jmp
jmp
stc
hlt
roll
mov
out
ljmp
int
ss
rcr
sarl
test
int
push
out
xchg
xor
fld
shlb
sarb
ljmp
ret
out
icebp
in
hlt
aad
ret
in
jmp
xlat
incb
cld
movl
test
xchg
loopne
jmp
stc
fldpi
push
cmp
fdivp
fsubp
ret
fcompp
mov
mov
orb
int
jmp
leave
cli
aas
lock
neg
aad
mov
std
shl
mov
xchg
repz
lret
addb
ret
clc
into
roll
xor
enter
call
aas
ret
cmp
test
mov
fucomp
in
sarl
xor
cmp
cmp
rcl
cmp
int3
fdivp
clc
iret
adc
mov
shl
fucomip
divb
cs
xor
ss
aam
in
out
int3
in
fdivr
aad
fdiv
cli
mov
loopne
out
mov
rol
stc
lret
into
out
into
imul
std
in
ret
cmp
testl
fsubrp
shl
divb
jecxz
cmp
call
cmp
in
xlat
jecxz
stc
icebp
sti
lock
xor
rol
hlt
out
int
cmp
out
xor
cld
rol
sti
cld
test
jmp
xchg
sub
out
into
ror
ljmp
stc
mov
lret
xchg
nop
leave
and
fimuls
xor
fdivl
cmp
ret
cli
fndisi(8087
dec
and
mov
xchg
icebp
xor
sub
int3
out
loope
cmp
call
int3
dec
mov
std
loopne
icebp
xchg
shl
xor
xor
enter
call
int
std
roll
sbb
jecxz
test
leave
in
in
cmp
hlt
cli
ror
cmp
mov
loope
aam
in
mov
fisttps
in
fxch
int
enter
cmp
jmp
loop
cmc
ret
xlat
mov
xlat
fdivr
int3
lock
roll
cmp
cmp
lock
into
fldl
std
ljmp
out
into
xchg
out
in
xor
fdivrp
out
aam
rolb
loopne
xlat
out
loope
loope
out
aam
sti
out
xor
fcmove
fcmovb
jecxz
std
repz
loop
lret
neg
mov
ljmp
xor
jmp
std
cmp
in
ret
xlat
cmp
in
hlt
and
inc
fmuls
push
arpl
add
add
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
in
mov
outsl
testl
shr
shl
shlb
in
cmp
cmp
cli
loop
cmp
in
sar
testb
fdivrp
out
loop
out
int3
shr
xor
ss
test
loopne
ret
and
loopne
out
test
xchg
clc
int
shll
jmp
fstpt
or
test
xlat
fcmovnu
kmovw
out
int3
shll
call
test
clc
aam
ljmp
sti
test
iret
xchg
mov
out
loop
sar
cli
jmp
cld
fdiv
add
loopne
lret
mov
leave
sub
xchg
xchg
icebp
int3
fadd
leave
leave
fdiv
iret
imul
sarl
lret
into
sti
lock
repnz
aam
cmp
fstp
loopne
fcmove
iret
roll
cmp
lds
ljmp
clc
fcmovnbe
jmp
sar
clc
rolb
repnz
cmp
in
std
out
cld
cmp
shl
loop
adc
xchg
iret
xchg
lea
cli
icebp
out
out
lret
idiv
fsub
std
jmp
xchg
mov
int
out
int3
ret
divl
cmp
cmp
ret
out
jmp
enter
hlt
shl
rol
jmp
fcmovnu
aam
icebp
loope
sti
fiadds
test
sti
test
out
xchg
cmp
ss
in
enter
repnz
out
sti
icebp
test
test
fsubp
fucom
out
aam
hlt
in
in
enter
call
xlat
neg
lret
sbb
test
loope
incl
int
ror
out
roll
ret
cmp
xlat
xchg
adcl
vpsubq
xlat
iret
lock
stc
in
filds
out
out
loopne
mov
call
out
out
repnz
cld
stc
aad
call
mov
xchg
stc
cld
lock
aad
jmp
call
lret
shl
xlat
cmc
fdivr
in
call
cld
fsub
ljmp
cmp
xor
cmp
sti
out
shl
hlt
test
sti
repnz
testb
sti
cld
hlt
hlt
xchg
fdivs
clc
cli
xlat
cmp
sti
out
xor
aad
aam
std
repz
ffree
fxch
jmp
iret
enter
stc
xlat
xbegin
cmp
orb
out
test
fmulp
in
cmc
cmc
fnstenv
in
ds
fcmovnu
iret
fsqrt
cmpl
jmp
shrl
lock
jmp
rcl
shr
out
cmp
aad
xor
jecxz
int
cmc
hlt
in
ss
not
ljmp
hlt
out
hlt
mul
test
out
test
xchg
fimuls
fdivl
fcmove
repz
stc
out
roll
out
xchg
not
sarl
jmp
ror
cmp
aad
stc
call
and
lret
xchg
loop
call
call
cmp
iret
loopne
aad
icebp
xchg
fucomi
out
lock
icebp
out
hlt
mov
divb
cmp
rol
shll
loopne
int3
xlat
les
xlat
jmp
mov
xchg
call
out
cmp
out
cmp
cmp
out
cmp
cmp
shl
aas
repz
call
rolb
les
out
divl
aad
loopne
clc
clc
mov
lret
leave
mov
xchg
lock
loopne
imul
xlat
xor
ds
sbb
test
test
add
orl
lock
sti
jmp
icebp
ffreep
sarb
std
stc
loopne
rcl
ljmp
ljmp
shl
cmp
repz
call
cmp
cmp
std
out
addl
aaa
fdivr
out
lret
ds
call
loop
dec
xchg
sarb
xor
xor
std
ss
aad
inc
in
jmp
aam
enter
aad
cmp
and
inc
adc
jg
roll
jle
rolb
hlt
idiv
fcmovne
in
lret
ljmp
rol
lret
xor
cmc
std
sar
ror
enter
int
xchg
loope
nop
lret
xor
xor
out
cmp
int
cld
neg
aas
loopne
out
lret
fucomi
fcmovnu
roll
vpaddb
loopne
filds
xchg
lret
cmc
stc
jmp
loop
out
xchg
out
in
int3
std
out
cmp
aam
fiaddl
xchg
xchg
out
aaa
loop
in
cmp
lret
adc
loop
and
xchg
lret
std
xchg
into
xchg
into
call
xor
cli
icebp
fadd
stc
fcmovnb
mov
mov
xchg
repnz
ret
in
sti
idiv
xor
xlat
cmc
xlat
adc
cmp
leave
idivb
stc
loopne
fisttps
aaa
aaa
fcomi
cmp
xor
rcl
fnstsw
lret
sbb
test
icebp
into
xor
out
cmc
shl
in
hlt
icebp
int
mov
int
out
addb
ret
das
jmp
ljmp
loopne
jecxz
and
rol
loopne
int3
fxch
call
repnz
leave
into
lret
jmp
repz
push
cld
shr
shl
les
xchg
jecxz
int
mov
ljmp
aaa
ss
fmul
incb
xchg
loopne
into
clc
sti
cld
lret
test
xor
loop
cmp
fcmovbe
ss
adc
clc
test
sbb
jecxz
aas
sub
fsubr
repz
aad
stc
cmp
stc
in
call
cli
leave
lock
iret
sarl
enter
aam
aam
iret
repz
leave
cmp
std
out
dec
into
in
rcl
xor
sub
ljmp
rol
test
xchg
clc
in
lea
hlt
xlat
leave
fcomp
fdivrs
cld
idiv
test
xchg
xlat
out
cld
int3
lea
xor
hlt
ss
aas
stc
loopne
cmp
addl
mov
into
std
cmp
cld
shl
cli
aas
enter
mov
ljmp
in
neg
enter
sar
loope,pt
cmp
in
out
jecxz
aas
out
int3
xchg
ljmp
ss
iret
call
fdivr
clc
cmp
aas
lock
jmp
mov
cmc
rcr
cmp
ror
cmc
fmul
repz
cli
fsubp
aas
and
mov
inc
jmp
loop
rorl
xlat
shr
in
cmp
cld
xor
fstpt
aas
ret
shl
int3
in
mov
call
lock
aad
xor
cmp
lret
std
cmp
ret
clc
fdivr
sub
leave
sti
std
stc
adc
xchg
in
lock
enter
cmp
loopne
clc
aas
ret
in
loop
loope
lret
call
loopne
xchg
orb
stc
into
ror
loope,pt
loope
aam
neg
lret
fmuls
lret
mov
rcl
out
out
ljmp
aad
mov
cli
in
fldl
mov
vcvttpd2dq
out
cmp
sti
loopne
test
jecxz
lret
lock
incb
out
les
ss
in
hlt
decb
repnz
lds
div
jmp
xor
cld
clc
leave
cmc
xchg
in
in
out
int3
out
ror
call
repnz
in
fcom
fidivrs
cmc
ss
cmc
xchg
aad
fmuls
lret
mov
cmc
cmp
hlt
cmp
fdivp
aam
ret
fst
in
out
cld
mov
loopne
out
cli
neg
hlt
ds
rol
shl
div
xchg
hlt
in
test
rorl
cli
in
int3
std
in
cmp
fcmovnbe
loop
xchg
not
ljmp
lret
loopne
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
aad
fadd
out
cli
cmp
xor
lock
std
fadd
ret
jmp
mov
int
loop
rcl
xor
shl
sar
faddl
ret
in
incb
loope
mov
sub
xor
xor
sti
test
fstp
in
mov
jecxz
fists
aas
call
clc
out
cmp
clc
div
lock
fdivrs
std
fadd
out
cli
fmulp
loop
ljmp
shl
int
jmp
std
sti
std
rolb
ljmp
out
in
cmc
out
lret
cmp
loopne
loopne
call
mov
adc
xchg
int3
aam
fdivrs
shll
cmp
cmp
jecxz
test
test
mov
iret
xchg
cs
out
xor
aad
enter
fldl
mov
cmc
loopne
loop
add
fldl
jmp
mov
lock
and
movl
cld
not
enter
lret
leave
iret
loopne
xor
out
clc
cld
in
clc
test
iret
xchg
dec
das
xor
enter
fsub
cli
loope
in
repnz
call
xor
hlt
aas
in
xor
fcmovu
clc
rol
fdiv
loopne
repz
jmp
iret
in
in
jecxz
repz
lret
lret
out
out
aaa
fnsave
sbb
shl
mov
fmulp
jmp
roll
iret
stc
cmp
out
int
cld
fdivrl
xlat
into
aad
xchg
out
loope
mov
ljmp
cs
divb
rcl
loop
rorl
mov
repnz
in
aad
icebp
xlat
ror
cmp
loope
rolb
in
loop
or
int3
xchg
jmp
fcmovu
cmp
loopne
clc
int
into
out
loopne
jecxz
cld
aad
cld
lret
mov
xchg
in
ljmp
jmp
int3
cmp
int3
repz
jecxz
mov
xchg
cld
xchg
fcoml
xor
xor
ror
cmp
in
repnz
enter
iret
repnz
out
shlb
in
int3
hlt
int3
test
test
xchg
jmp
mov
int
ss
jmp
fcmovu
loope
cmp
rcl
repz
int
stc
into
jmp
out
fstp
int
neg
aam
jmp
xlat
cmp
loope
ror
loop
aam
call
ljmp
jecxz
xor
icebp
in
lret
rcr
std
int
cmc
out
clc
sti
int
in
mov
sub
jecxz
enter
cmp
cmp
fdivr
mov
xchg
fucomp
cs
cmc
out
aad
clc
aas
shr
cld
xlat
adc
repz
xchg
ljmp
in
xchg
fmul
ror
sti
int
aas
aas
cmp
xchg
incl
iret
fisttpll
les
lret
xor
jmp
ljmp
push
fmuls
jmp
popl
cmp
repz
xor
shr
cld
test
clc
out
test
test
lret
sub
xor
ss
out
out
sarl
int3
loop
repnz
cmp
aad
clc
cld
ret
mov
mov
iret
cmp
std
call
cld
ss
aam
xchg
fsubrp
jmp
icebp
xchg
icebp
out
lea
out
in
aaa
xor
out
stc
fidivrs
jmp
fsubr
loopne
ljmp
xlat
fdiv
int3
jmp
shl
stc
ds
clc
ljmp
shl
xchg
in
sarb
lret
ljmp
repnz
in
shl
cmp
out
jmp
rcl
repz
enter
cmp
sbb
hlt
cmp
fdiv
mov
lea
xor
in
cmp
cmp
aad
push
aam
dec
or
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
in
cltd
jg
roll
jle
enter
jmp
out
adc
xchg
imul
aaa
imul
int3
test
loope
fstpt
icebp
jecxz
out
roll
mov
xor
fcmovne
lock
loopne
test
shl
jecxz
test
xchg
mov
aam
ret
rcl
sub
in
lret
ds
sbb
fcmovnbe
mov
sub
lret
xorb
in
jmp
xor
ljmp
out
rol
loope
fstp
loopne
faddp
jmp
in
jecxz
out
das
hlt
int3
aam
int3
icebp
cld
test
repz
in
loop
imul
fcmovnu
xchg
int
lret
clc
not
jecxz
out
xor
out
repz
inc
fidivrs
ret
test
int
icebp
fst
loope
das
aaa
in
idivl
in
cmc
cmc
lret
fdivrl
std
clc
ret
push
out
mov
aad
xor
jmp
std
cmp
sarl
aad
sbb
mov
or
xchg
iret
xlat
shr
stc
cs
cmc
repz
repnz
mov
out
xchg
test
iret
xchg
loope
iret
loopne
ljmp
loopne
div
aam
sti
loopne
loop
loopne
mov
xchg
aam
repnz
jecxz
stc
out
xor
ffree
mul
ret
test
out
lret
in
roll
int
aad
xor
loope
into
iret
jecxz
rol
test
mov
mov
std
lret
rorl
int
ljmp
loope
out
fcmovbe
aam
leave
roll
xchg
hlt
in
in
aam
lret
hlt
cld
rol
xlat
jmp
mov
lock
mov
lock
into
cmp
cmp
cld
leave
hlt
clc
hlt
stc
idiv
xlat
rcl
fmuls
enter
lock
ror
xor
call
ror
cmpb
out
lock
cmc
addb
in
out
icebp
int
cli
jecxz
out
lock
cld
fsubrp
ret
loop
out
ret
fcmovu
xlat
jmp
icebp
jmp
ljmp
repnz
jmp
stc
cmp
fiaddl
lret
xor
in
in
std
out
lock
cmp
fsub
loop
enter
jmp
test
in
aam
imul
std
in
fnstcw
cmp
aad
clc
cli
ds
jmp
out
in
in
aam
xlat
in
cli
ror
shlb
fcmovnu
ljmp
out
cmp
out
int
mov
int
sar
out
xlat
cmp
cmp
loop
mov
cld
jmp
enter
icebp
loop
xchg
fxch
jecxz
repnz
xlat
addb
add
loope
cmc
clc
ljmp
shl
lret
aaa
cli
xor
imul
fstpt
in
ljmp
loop
cli
out
aad
not
aaa
lret
fmul
jecxz
out
shl
test
sbb
jmp
in
enter
iret
shl
out
repz
iret
xor
cmp
aam
aas
fsub
sar
mov
fadds
iret
fcmovnu
xchg
xchg
in
in
cmc
jmp
xor
icebp
out
test
lock
repz
jecxz
nop
movb
xor
cmc
in
sti
std
int3
cli
lret
sti
repz
fcomip
lds
stc
addb
xor
into
lock
xor
or
aad
sub
ret
out
out
out
into
adcl
clc
cli
aaa
rcl
aad
xlat
ret
cmc
mov
hlt
addb
in
into
test
fcomi
xor
cmp
rcl
ret
jecxz
out
rcr
aad
ljmp
xorb
cli
shl
cmp
out
icebp
lret
rcr
xlat
sar
adc
mov
out
into
loop
lock
jmp
sarb
xlat
fidivrl
not
flds
jecxz
in
repz
out
enter
ss
ret
aam
aad
sar
enter
nop
in
jmp
test
add
add
enter
fmul
fnstcw
mov
pusha
inc
popf
jg
roll
jle
std
in
cli
fdiv
call
repnz
incl
sub
out
leave
sub
shl
jecxz
out
jmp
cmp
aam
fdiv
sti
call
fcompp
in
in
xchg
xchg
ljmp
hlt
jmp
idiv
test
cmc
ret
test
fsubr
lret
into
mov
in
sub
shl
cmp
int3
clc
fst
int3
fistpll
faddp
cli
leave
int
lret
out
icebp
sti
jmp
iret
shl
lock
jecxz
clc
test
jecxz
enter
nop
fcmovnbe
addl
xor
out
aad
cld
out
test
call
shl
cmp
in
cmp
neg
rcl
sti
out
xchg
fdivrs
test
icebp
repnz
out
iret
enter
cld
lock
fiadds
ds
loop
xlat
lds
mov
cmp
aad
fmul
stc
shlb
shr
fdivrp
fsub
ret
jmp
nop
jecxz
lds
lock
in
cmp
cmp
in
enter
out
dec
call
xor
fsubr
repnz
aas
aam
jmp
shl
neg
mov
ret
int3
orl
int3
out
xor
out
aam
ljmp
xchg
std
mov
cld
or
mul
ret
iret
aaa
xor
sar
iret
rorl
lret
test
lret
lock
out
in
ljmp
repnz
loop
ljmp
aaa
out
cmp
aad
cmp
loopne
sti
cmc
faddl
sar
xchg
fcoml
mov
out
hlt
xor
lret
cmp
out
cmp
sti
rol
hlt
add
xor
aad
clc
loopne
lret
test
hlt
mov
rcl
cmc
ss
rolb
hlt
test
xlat
lock
nop
rolb
repz
cli
xlat
leave
cmp
roll
faddp
nop
xchg
mov
loopne
rorb
cld
xor
idiv
ror
ret
loope
in
sti
test
in
leave
xchg
sti
lret
dec
sarb
idivl
fdivr
cli
fadd
cmp
incb
in
leave
call
out
xchg
aaa
out
in
hlt
xor
into
jmp
clc
repz
loop
loope
shr
int
sub
call
lock
sti
sti
rol
ret
movl
repz
aad
lret
xor
in
into
shl
cmp
aas
fucom
xor
clc
std
movb
cmc
xor
aad
cmp
fcomp
xor
loop
test
jmp
xlat
mov
repnz
ss
cmp
hlt
jmp
fcmovnb
frndint
sti
cld
in
iret
lock
div
bnd
fnstcw
in
repnz
icebp
shl
jmp
or
in
fmulp
shl
in
iret
aaa
loopne
int
fsub
aam
fcmovne
cli
shr
rcl
enter
clc
out
xchg
fptan
sbb
call
fidivs
aaa
icebp
fucomp
xlat
cmp
fincstp
jecxz
cld
jmp
in
icebp
in
addb
cmp
rcr
int3
cmc
int3
loop
fsubp
fadd
jmp
faddl
jecxz
xchg
out
xor
les
aam
cli
cmp
icebp
fcomip
clc
aad
cmp
leave
sti
lea
ljmp
repnz
icebp
std
sti
cld
fnstcw
in
rcr
ret
sub
into
mov
icebp
vaddsubps
call
in
faddp
test
out
in
add
mov
repnz
jmp
in
rcr
fnstcw
rcr
repz
testl
mov
hlt
shlb
sub
jmp
fxtract
out
jmp
loopne
sarl
xlat
shl
fisttps
int3
loope
in
xor
lock
imul
hlt
loop
xlat
cld
xlat
repz
add
adcl
jmp
enter
fst
ffree
and
dec
jo
fcmovne
xchg
mov
jle
shl
loope
xchg
out
int3
out
cmp
xor
sarb
roll
fdivr
std
xchg
out
jecxz
xchg
loopne
ret
ljmp
push
cli
fcmovbe
std
fcmovnb
out
mov
mov
lock
clc
enter
leave
aam
cld
inc
enter
mov
fisttps
in
xlat
cmp
aam
xor
shl
fcmove
out
in
leave
rolb
test
stc
call
aam
divl
rolb
loop
test
hlt
into
mov
xor
test
cmp
iret
cmp
ret
and
fmuls
repnz
out
sub
clc
vcvtdq2pd
iret
in
flds
flds
sti
xchg
cli
xchg
rcl
hlt
xor
sub
cmp
aam
std
lret
cmp
rcr
out
enter
sti
iret
xchg
cli
in
into
xor
fldln2
clc
hlt
ljmp
ds
fdivr
loope
leave
lret
out
call
enter
lock
jecxz
fsub
ret
xchg
faddp
out
ljmp
jmp
xor
xor
stc
aaa
cld
test
ffreep
cli
loope
fcmovnu
in
lock
mov
xor
cmp
stc
sti
xchg
rcr
out
fucomip
test
cli
in
test
cmp
cld
xor
cli
cli
loop
cld
xor
aad
in
xchg
ror
test
aam
sti
cmp
aaa
cmp
cmp
in
loopne
rorb
sti
addl
iret
out
f2xm1
sarl
cmp
cmp
cmpb
fcmovb
cmp
mov
fiadds
loope
ret
call
ljmp
loope
cmp
xlat
fadd
iret
loop
out
sub
in
aam
aaa
aas
sbb
cmp
cli
xlat
mov
stc
out
fildl
lret
xchg
out
call
stc
cmp
cmpb
ds
fcmove
in
nop
shr
leave
lret
iret
jmp
ret
into
call
cmp
cmp
in
aam
mov
loop
loop
addb
nop
ljmp
cmp
cmp
fiadds
cmp
fiaddl
in
cmc
mov
xlat
loop
xor
shl
ds
hlt
cmc
ret
mov
into
test
mov
in
enter
in
cmc
test
lock
ret
fsubr
in
test
repnz
mov
ror
lret
aad
cmp
cld
sti
xlat
aad
in
lret
decb
nop
aad
lock
leave
repz
imul
xorl
aam
div
loop
fsubp
fsub
in
fcoml
xor
int3
ljmp
test
out
rol
addb
mov
xlat
clc
into
xlat
into
shll
not
stc
rcr
cmp
in
fcmovnu
sub
lock
out
lds
cmc
out
ss
jmp
aam
movl
loope
loop
out
aaa
repz
cld
xor
sbb
int
call
and
loop
jmp
out
cli
cli
cli
aaa
out
aad
aam
cmp
sbb
fadd
mov
sti
mov
call
shll
hlt
cmp
jmp
cmpb
hlt
in
sar
cld
fadds
sub
nop
mov
int3
xor
hlt
loope
and
in
orl
ret
lret
xor
fcmovne
iret
or
jecxz
filds
fucom
stc
ficoms
aaa
fdiv
cmp
xor
int
and
fdivrp
test
jmp
aas
jmp
shl
jmp
shl
aaa
aam
lock
cmc
inc
les
lock
out
clc
sub
loop
out
out
cmp
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
test
ror
jmp
add
cmp
and
imul
test
test
loop
loop
mov
in
ss
int3
out
fidivrs
loopne
shl
repnz
cmp
and
lock
fucomip
jmp
aad
cmp
xlat
fcmovne
fdivrp
int3
test
fidivrl
rorb
jmp
lock
hlt
out
xchg
into
ret
in
aam
lret
in
icebp
rcr
rcl
jecxz
nop
mov
int3
call
leave
lret
jmp
jmp
in
adc
enter
in
and
loopne
xor
cld
hlt
in
in
shll
in
rcl
loope
loopne
inc
clc
hlt
loop
fcmovb
mov
mov
loop
stc
xor
xlat
lret
aad
xor
loop
rol
loopne
cli
fcmovbe
loop
std
in
nop
iret
lret
neg
lock
cmp
clc
fiadds
jecxz
and
mov
mov
shl
call
loope
jmp
lock
fidivrs
sbb
sarl
mov
mov
out
out
jmp
clc
lret
mov
out
rcl
repnz
sar
rcr
mov
and
into
cmp
or
filds
jecxz
ss
repnz
out
fstp
cmp
test
lock
lea
out
out
mov
leave
enter
stc
ffreep
repz
std
testl
out
in
loope
int3
shl
in
std
aas
loop
loopne
fst
xchg
incb
mov
repnz
mov
shr
int
shr
neg
ret
adc
call
neg
fildl
hlt
loope
aam
out
loop
aad
ss
fdivr
adc
rolb
ficoms
loope
shr
loop
aad
idiv
cmp
idiv
ror
in
cld
cmp
mov
fsubrp
out
and
cld
out
aam
aad
call
xor
push
stc
in
sti
stc
cmc
test
jmp
mov
hlt
sar
ljmp
jmp
ret
xlat
decl
orl
shll
cli
sti
out
iret
out
clc
iret
icebp
fcmovu
cmp
mov
mov
vpmaddwd
in
leave
cmp
cmp
fcmovne
stc
icebp
cmp
cld
test
ds
mov
test
into
repnz
mov
lret
in
in
cli
enter
sarl
loopne
in
xlat
in
in
out
mov
fisttps
jmp
cmp
repnz
cmp
add
loopne
clc
hlt
fld
fiaddl
or
rol
ret
aam
cmp
cmp
aam
aas
xor
sar
flds
test
mov
repnz
out
cmp
lock
xchg
xlat
out
sub
fcoml
xor
lock
repnz
cmp
jecxz
shl
ret
fstp
popl
and
xor
out
ret
ss
xor
into
fcom
rcl
in
cmp
mov
jecxz
loope
into
idiv
int
fucomp
addl
loop
loopne
into
leave
ror
jecxz
jmp
in
cli
rcl
in
aad
lret
faddp
test
out
rorl
nop
xchg
leave
jmp
jmp
lret
in
vcomisd
fcmovnu
sti
int3
and
ffree
ljmp
repz
stc
sti
xlat
out
lret
in
fcmovne
dec
filds
in
test
loopne
shl
fmul
out
int3
fbstp
fcomi
out
enter
ret
clc
jecxz
loop
sbb
mov
or
out
sub
xor
xor
xlat
xlat
ret
loope
jmp
int
in
std
mov
in
into
ljmp
clc
lret
leave
hlt
cmpb
aam
fdivr
idiv
std
sbb
cli
out
rol
lock
jecxz
jmp
in
lock
sar
std
stc
hlt
fsubrp
cmp
icebp
out
fdivr
ret
mov
cli
loope
lock
jecxz
in
out
ror
aad
cmp
sbb
jecxz
out
enter
jmp
lock
cld
je
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
push
add
jle
mov
das
repz
jmp
fdivl
aad
cld
lock
fstpt
icebp
loopne
test
shl
cld
int3
lock
lock
mul
out
cli
out
cld
cmp
fcomip
fld
fdivrl
stc
idivb
out
ljmp
in
out
loope
xor
fxtract
into
aad
cli
sarl
stc
orb
int3
out
loope
shl
leave
int3
call
int
in
call
fimull
in
rolb
in
in
cmc
test
clc
shl
lock
and
mov
fsubrp
jmp
nop
mov
repz
repnz
in
clc
ss
sti
aad
loopne
std
aam
rol
test
test
sarl
xor
cli
sarb
cmp
aad
call
mov
faddl
mov
ss
clc
leave
fnstcw
lret
cld
shr
hlt
int3
iret
icebp
fdivrl
sub
jmp
xchg
std
in
test
jmp
into
std
ljmp
in
xchg
add
out
out
imul
addb
xor
xor
fadd
out
hlt
aaa
int
test
jecxz
shl
fcom
neg
in
ffree
mov
ret
icebp
xlat
in
aad
shl
sbb
repnz
repnz
jmp
out
decb
out
xor
xor
xor
sarb
cmp
cmc
mov
fucomp
enter
loop
jecxz
lock
aad
cmp
test
into
xlat
loopne
div
ret
out
loope
shl
inc
ljmp
in
imul
test
sub
aas
add
int3
testl
aam
in
int
repz
loopne
out
cld
xor
clc
lret
enter
loopne
int3
das
loopne
ljmp
cmp
cmp
sti
xchg
test
xchg
lret
mov
out
shr
loop
xor
xor
aaa
iret
jmp
fiadds
mov
jmp
fisttps
xor
ljmp
fstpt
cmp
ror
loopne
neg
loop
mov
xchg
nop
jmp
clc
in
in
cli
clc
fnstcw
jmp
jecxz
rcl
cmc
sar
clc
loope
mov
sti
xchg
sar
repnz
shl
xor
idiv
ljmp
aaa
ret
shl
cmp
mov
mov
iret
out
cli
lret
cmp
fidivrl
in
repz
fadds
test
stc
fisttpll
repnz
in
aam
cmp
neg
iret
cmp
mov
cld
idiv
out
int3
mov
shl
cmp
ss
ror
fdivrl
neg
icebp
and
test
loope
mov
dec
iret
xor
aaa
aam
icebp
leave
xlat
cmpl
aam
loopne
out
rol
sbb
fdivrp
into
clc
stc
fdivs
ror
cmp
jmp
std
cmp
std
std
enter
lock
int
cmc
fsubr
fnstsw
in
loopne
rol
aam
enter
lret
in
mov
shl
into
lret
aad
cmp
aas
fcomp
test
aam
les
lret
xchg
sar
nop
hlt
hlt
loopne
imul
xlat
int3
div
xlat
std
int
ret
stc
ret
clc
enter
cmp
ljmp
into
fucomp
int3
out
hlt
out
loope
into
out
sarl
rol
vpaddusw
jmp
aad
xlat
test
out
iret
sar
bnd
cmp
fstp
xchg
xlat
aad
decl
into
in
mov
fsubrp
aam
xor
shr
leave
cmp
cmp
lock
in
leave
xchg
lret
cli
int3
xchg
imul
xor
in
fnsave
stc
addl
repnz
test
neg
jecxz
nop
call
fdivs
out
shl
into
shl
cld
loopne
loopne
test
ljmp
fsubr
ror
cmc
and
jmp
cmp
xor
aam
jmp
into
xor
testl
xor
clc
cld
cmp
roll
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
mov
lea
scas
jg
roll
jle
shl
mov
cld
mov
mov
in
in
ret
ss
fisubrl
leave
fcomp
iret
lock
sub
faddp
xchg
cld
lock
rclb
shl
out
lock
sti
mul
ffreep
roll
test
mov
enter
out
xor
aaa
xor
fcmovu
sti
addb
out
out
loop
incb
nop
test
imul
loopne
fcomp
rcl
test
mov
out
stc
mov
shl
das
ror
repz
fistpll
rcl
repz
repnz
repz
loop
int3
cld
out
test
nop
in
ss
stc
in
repnz
lock
ss
not
fsub
shl
idiv
jmp
call
lock
shl
shl
xor
fsubr
aam
cmp
loope
lea
repz
call
ror
das
lret
aaa
fidivl
test
loop
hlt
incl
xchg
nop
ljmp
stc
int
sti
fdiv
clc
loopne
ret
loope
filds
fisttpl
out
clc
xlat
ss
into
leave
jmp
stc
ret
mov
test
repz
out
loopne
out
ljmp
test
lock
out
rcr
lret
jmp
call
in
cmp
repz
xlat
aad
rol
mov
enter
cld
xchg
subl
cli
xor
neg
roll
icebp
jmp
dec
sbb
rolb
xor
aad
fdiv
int
in
in
int3
cmp
lock
repnz
mov
xchg
sub
int
sub
neg
cmp
cmp
sti
not
out
hlt
or
mov
cli
int3
std
jecxz
mov
fdivr
les
lret
cli
cmc
fcmovu
aad
test
loopne
cld
lock
xchg
cmp
xor
hlt
jmp
lock
in
xchg
ljmp
loop
shr
shl
xchg
enter
out
xor
lock
int3
div
cmp
ret
mov
or
nop
loop
loope
ret
hlt
sar
enter
divl
repz
rolb
repnz
out
in
sub
xchg
iret
xor
xor
clc
out
cld
repnz
fcomp
rol
movb
in
or
rcll
cli
ss
into
int3
lret
aad
ret
test
test
fildl
loopne
ss
clc
into
fcomp
ror
cmp
ret
fnstsw
mov
xchg
xor
not
sarb
repnz
icebp
cmp
in
mov
test
fiadds
iret
das
loop
xor
lret
fcmovbe
cli
cld
jmp
std
test
test
enter
lret
stc
xchg
rol
hlt
out
mov
aaa
leave
repz
jmp
ljmp
aam
loope
loope
repz
jmp
sti
loopne
xchg
nop
int
sub
xor
hlt
cmp
jmp
and
call
ffree
in
xchg
orl
hlt
ret
cmp
repnz
ret
mov
xchg
mov
into
mov
lock
mov
rcr
jmp
out
cli
ds
loope
cmp
lock
fimuls
ljmp
ror
out
neg
xlat
into
in
ljmp
cli
fiaddl
lret
mov
lret
out
iret
lock
leave
fsub
in
shl
cmp
jmp
lret
cmp
test
std
jecxz
mov
rcr
jmp
enter
in
out
cmp
ret
sti
rolb
enter
fsub
fdivr
into
rorl
vpsllq
cld
cmp
ret
sti
fdivrs
in
ljmp
hlt
rcl
shl
xor
rcl
into
lock
inc
aas
in
cmc
and
loope
test
into
nop
rorl
call
aaa
ds
cmp
test
vpsubsb
mov
in
in
out
mov
jmp
lds
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
and
mov
jle
add
ss
stc
icebp
div
aas
adc
neg
jmp
out
decb
jecxz
out
cli
repnz
rcl
cmc
fst
fdivrs
ret
out
stc
orl
ret
in
ds
out
cli
mov
jmp
xchg
and
cld
std
lret
sbb
xlat
cli
les
ret
lea
fcomip
aad
int3
lret
xor
lret
jmp
adc
cmp
shl
vpaddusw
test
in
mov
out
fldl
in
lret
out
ljmp
fninit
push
in
movb
iret
mov
repz
aaa
not
xor
aaa
jmp
repnz
ret
mov
in
aam
mov
mov
out
ret
lds
ljmp
aas
mov
out
int
out
shl
iret
out
fsubr
xlat
cmp
ss
sarb
cmp
iret
push
sar
out
fiaddl
in
fucompp
rcll
jmp
out
iret
fdiv
sti
hlt
sarl
lock
test
aam
leave
loope
out
lret
int3
lret
shl
xor
das
ret
cmp
fcmovne
cmp
rol
xchg
enter
addb
adc
xor
cmc
into
shl
lret
cmpl
xchg
call
out
lret
loopne
xchg
lret
enter
ljmp
into
shl
out
ret
jecxz
mov
lret
repnz
test
aad
sti
xor
ds
xor
jecxz
flds
adcb
fdivs
clc
in
fcmovbe
ret
cmp
out
sti
test
in
test
out
in
xchg
bnd
enter
sarl
clc
ljmp
out
jmp
fsub
xchg
out
ret
out
shll
leave
jmp
out
call
in
in
cmp
repz
ds
in
div
xor
shl
loopne
lret
aam
loop
icebp
repz
aad
lret
in
out
lock
in
ss
in
in
repnz
aas
shr
stc
out
loopne
xchg
roll
out
out
call
neg
fadd
jmp
lret
stc
fcomip
in
rolb
test
ret
mov
repnz
ss
int
rcl
sti
call
stc
std
lock
fcomp
fucom
cli
cld
decb
sarl
repnz
fdivrp
xor
jmp
iret
xchg
mov
test
lret
loopne
fsubp
iret
mov
repz
out
fsub
testl
repnz
ffree
sub
and
lret
int
enter
repz
ffree
xor
fcmovbe
in
repz
shr
cmp
mov
mov
mov
divl
int3
int3
in
shr
cmp
repz
ljmp
std
cli
sti
xchg
xchg
shrb
out
loop
cli
fst
fmul
in
xor
fucomip
aam
out
test
clc
fimuls
xchg
call
ljmp
aad
icebp
in
out
filds
ljmp
mov
cs
int
aaa
xor
ljmp
jecxz
shl
rcl
adc
repz
lds
ss
shl
aam
into
cmp
add
sbb
out
mov
addl
jmp
cmp
aas
testl
les
cmc
ljmp
sar
jmp
cld
in
icebp
icebp
test
vpaddw
enter
lret
mov
cmp
xlat
int
jmp
aam
aad
fstp
cmp
into
test
out
in
xchg
repz
fstp
repz
div
lock
fcmovbe
not
addb
shl
lock
xlat
hlt
cmc
xor
out
ret
cmp
shl
icebp
xlat
rorb
rolb
mov
shl
hlt
aam
enter
sarl
cmp
fsubr
shl
ret
fimuls
cwtl
sbb
add
arpl
decl
call
mov
add
add
stos
cli
push
es
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
test
std
out
adc
sarl
int
fnstcw
loopne
ret
sbb
cmp
repz
jmp
ror
cmp
xor
shl
cmc
cmpl
rol
jmp
cmp
fsubp
int3
std
test
ss
fldcw
jmp
enter
ret
cmp
mov
enter
enter
mov
sub
out
out
xlat
icebp
cmc
fcomp
cmp
int
in
cmp
loopne
fisttps
xchg
xchg
call
fucomi
ljmp
sar
clc
fadds
in
mov
mov
mov
rcl
ss
ss
cmp
int3
repz
clc
rol
clc
cmp
fdivr
leave
mov
xchg
jmp
mul
ljmp
test
xchg
sti
in
stc
into
in
xchg
mov
xchg
in
jecxz
das
fucomi
repnz
ss
shl
out
incb
into
mov
out
mov
int3
ss
jmp
ljmp
cli
loop
clc
jecxz
loop
leave
mov
mov
fcomi
int3
cmc
loop
jmp
int
aad
or
enter
cmp
lret
out
xor
loop
call
rcl
repz
icebp
lock
stc
mov
addl
out
int3
xor
xor
out
loop
loop
ret
cmc
std
ljmp
cli
jmp
xchg
xchg
ljmp
repnz
loopne
fcmovnb
lock
cld
and
leave
nop
or
incl
xlat
lock
fcmovbe
aam
ds
lds
lret
mov
enter
ss
in
repnz
aas
cmp
test
ret
out
fxch
mov
cmc
xchg
jmp
out
shl
aam
sti
aaa
fnstenv
mov
fucom
int3
jmp
mov
loopne
out
lock
ret
int3
stc
hlt
cmp
lock
int3
cmp
cld
in
std
xchg
fadds
addb
jecxz
mov
fcomi
cli
and
stc
test
addl
xlat
neg
leave
lret
ljmp
enter
or
in
sti
sub
xchg
aad
fdivrl
jmp
cmp
aam
xchg
cmc
jmp
stc
add
loop
lock
fimuls
cmc
icebp
jmp
xor
int
adc
loope
or
shl
xchg
jecxz
fmul
cli
cmp
fxtract
int3
cmp
cmp
iret
xor
mov
fsubp
lret
loope
repnz
lds
int3
shr
fcmovnu
loop
hlt
aas
out
push
orl
cs
fdiv
repnz
cmp
cmpl
xchg
out
xchg
into
in
shrb
ret
in
aas
cli
cmc
sti
ret
sti
ret
cmc
lret
fcos
lret
xchg
sub
xlat
cmp
ljmp
aam
repz
cld
cmp
enter
leave
into
loopne
nop
xor
ret
ljmp
jmp
mul
stc
aad
ret
enter
bnd
int
leave
jmp
leave
iret
sarl
lock
out
loope
xchg
xor
shr
rcl
cmp
sar
shl
repz
idiv
out
filds
xor
out
fucompp
icebp
out
adc
filds
jmp
decl
ljmp
sti
int3
repz
ljmp
std
in
xchg
int3
into
repz
out
ret
sti
in
in
stc
in
test
int3
cmc
into
cmp
lret
cld
frndint
neg
mov
jmp
out
xlat
shr
sarl
hlt
in
aaa
and
test
test
movl
in
call
test
fucom
aam
sti
xor
loope
xchg
repz
loop
int
repz
cmp
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
sbb
jg
roll
jle
fcomi
incb
ljmp
in
sti
fisttps
clc
out
enter
idiv
fdivr
ret
cld
sarb
test
stc
aas
jmp
mov
int
out
fdivr
jmp
rcl
fstp
out
rcr
and
fcomp
in
cmc
aas
into
fiadds
xchg
xor
ret
lock
clc
enter
in
ret
test
fucompp
cld
lds
fisttpll
fdivs
icebp
fcmovbe
testl
and
mov
repnz
in
cmp
icebp
lret
int3
into
into
repnz
lock
lret
lea
lret
jmp
fmul
sti
cmc
ret
mul
sub
in
jecxz
mov
sti
in
mov
shl
sti
ljmp
shlb
fst
icebp
sar
int3
xchg
out
fcmove
mov
ljmp
loop
shlb
cld
aam
cmp
loopne
in
xor
lret
into
cld
adcb
repz
fcomp
shl
fdivrp
repz
lret
std
and
rcr
enter
cmp
sti
incl
test
xchg
loope
jmp
icebp
jmp
int
ret
std
hlt
repz
ret
out
jmp
xchg
shr
leave
shl
fcmove
clc
dec
clc
icebp
ss
rcl
jmp
mov
fsubr
into
loop
leave
jmp
icebp
imull
into
sub
rcr
fcmovnu
ret
loop
aad
sti
cmc
sar
orb
out
iret
cmp
cmp
clc
fsub
sti
cmp
test
div
cli
lret
sub
ljmp
neg
in
leave
out
out
fidivrs
loope
cmp
xlat
fmul
xchg
fimull
mov
hlt
loope
ret
cmc
loop
enter
cld
fstpt
fsub
sbb
ljmp
aad
xlat
aad
enter
hlt
inc
filds
lret
fimuls
fmull
xor
repnz
sarb
aam
stc
cli
test
lock
mov
shll
leave
iret
call
xor
test
clc
fsub
xchg
mul
sti
loopne
std
nop
out
hlt
out
int
in
ljmp
roll
repz
mov
mov
sti
in
or
sub
fcomp
vpsrlw
lock
lret
fcmovbe
cli
ret
call
xchg
mov
xchg
jecxz
iret
in
cmc
rcl
ds
cmp
aad
loop
loop
jecxz
int
int3
out
xchg
fcoml
out
jmp
xor
inc
sar
mov
jecxz
lret
fucomp
ljmp
fadd
sarl
cld
rolb
fcmovb
fcomp
testl
jmp
ret
int3
shl
fprem1
roll
aam
xor
ror
jmp
out
roll
in
in
cld
ss
enter
ds
hlt
in
ret
xchg
clc
fmulp
xchg
mov
loope
in
xor
cmp
in
stc
cmp
fcomi
loope
cli
incl
mov
xchg
fimull
int3
divl
not
into
out
fdivrl
hlt
clc
incb
jmp
dec
in
xchg
nop
lock
lret
cld
icebp
loop
fpatan
jmp
in
in
loop
xchg
sub
sub
cmp
into
fst
cmp
int3
sbb
icebp
jecxz
fcmovnu
jmp
fmull
decb
cli
in
lock
ds
int
std
sti
fcom
icebp
loope
out
mov
repnz
xchg
adc
int
repnz
out
test
cmp
ds
rcl
jecxz
ds
loopne
mov
lret
int3
fildl
sti
aad
rol
enter
sti
iret
in
jmp
shl
test
hlt
ss
xlat
jmp
fcmovu
hlt
cli
dec
repnz
cmp
lret
lret
lret
mov
mov
xchg
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
lret
in
ret
fnstcw
call
not
fdivr
sti
sbb
rol
cld
mov
leave
iret
fiaddl
in
ljmp
in
cmp
lock
xchg
stc
ret
cli
in
test
in
nop
shr
jmp
xlat
stc
fadd
les
testb
xchg
jmp
xor
hlt
call
jmp
out
sbb
mov
ret
cli
in
mov
repnz
ror
lret
mov
lret
cmp
fdivrs
cmp
adc
mov
aas
lock
call
cmc
lret
fdivrp
idivb
fst
aaa
xchg
rcl
cli
cli
cmc
jecxz
xlat
clc
sti
repnz
mov
shl
xor
cmp
jmp
cmp
cli
jecxz
test
out
int
int3
iret
lock
call
fsubr
lock
ds
bnd
out
jecxz
in
ror
xchg
shl
rol
out
in
cmp
and
ret
fxam
cli
cli
repz
loop
in
std
int3
mov
xchg
out
std
nop
imull
vpsrad
in
rcr
divl
repnz
and
enter
clc
fucomi
lock
fsubr
xchg
ror
in
in
cmc
in
out
aaa
hlt
xor
loope
flds
lret
sbb
lret
repz
fcom
fidivl
in
xlat
into
stc
repz
fcom
clc
ret
clc
cmp
out
int3
nop
out
out
aad
shrb
iret
std
adc
std
not
aaa
ret
fnstsw
adc
sti
xchg
in
shl
xchg
cs
lock
leave
rcl
leave
std
neg
ret
cmp
inc
ret
mov
rcl
mov
xchg
fildll
cmp
repnz
into
int3
cli
in
cld
iret
fcmovu
out
shr
mov
in
lret
flds
loope
in
jmp
not
jmp
in
shl
fsqrt
mov
xlat
loope
icebp
loop
std
icebp
out
cmc
ret
out
cmp
cmp
cld
ss
cmp
loopne
out
std
loope
mov
mov
sbb
fmulp
mov
test
int3
div
stc
in
idiv
incb
out
lock
fdivrp
cli
lret
loopne
cld
out
jmp
repz
cli
lret
jmp
lret
or
repnz
xchg
shl
lret
out
xchg
loop
cmp
out
jmp
test
ret
fdivr
aas
enter
in
loop
or
call
aam
fsub
lret
rcr
sarl
mul
cmp
mov
in
int
loopne
jmp
into
aam
std
call
repnz
ret
not
mov
lret
orb
lock
rol
hlt
lret
ds
cmp
ret
cld
shl
sbb
cmp
loop
out
xchg
loop
xchg
rol
out
in
out
out
aad
into
hlt
call
ret
jmp
mov
and
int
aaa
jmp
cmp
shr
in
rcr
cli
fstp
lret
xchg
mov
xchg
mov
ret
out
ror
xor
fcomp
icebp
xor
fsqrt
sti
in
mov
xchg
xchg
loope
sti
repz
rolb
cmp
cld
in
addb
fdivrp
aam
xor
cs
enter
sbb
bnd
ret
fmull
fiaddl
int3
ljmp
lret
sarl
test
xor
mov
stc
jecxz
cmp
jmp
jmp
loopne
enter
rcr
sar
sarl
sbb
rcr
mov
mov
les
ret
xor
xor
hlt
xlat
loope
cmp
out
fmulp
or
orb
out
lret
stc
out
jmp
not
fldl
enter
xchg
ljmp
ss
in
in
out
fstp
int3
lret
cmp
xor
test
aam
fmull
fildl
loope
repnz
repz
shr
sarl
sarb
fsubp
test
rorl
repnz
out
aad
cmp
out
jmp
xlat
rorl
mov
mov
xor
add
jmp
ror
rcl
mov
shl
scas
inc
jg
roll
jle
idivl
ret
sbb
in
mov
lock
leave
int
cmp
jmp
icebp
sbb
loope
in
in
xlat
mov
in
jmp
int
fstl
icebp
repz
in
xlat
ds
in
loopne
mov
xchg
ljmp
cmp
clc
aad
rol
sar
lret
fucomip
in
loopne
lock
xor
ret
cmp
cmp
ds
fimull
cli
int3
xchg
in
in
repnz
out
enter
std
lret
icebp
cld
sar
sti
call
mov
cli
jmp
rol
xlat
loopne
repnz
sti
sti
cmp
mov
in
jmp
in
lret
shl
int
int3
ljmp
out
leave
lds
sti
xchg
shrb
vpmaddwd
lock
cmp
shl
fcmovb
fst
enter
loope
ret
mov
xchg
mov
loopne
out
cld
into
fucomp
cmp
and
rcl
out
fadd
enter
or
repnz
shl
aad
jmp
iret
cmp
shl
cmp
cli
orl
rolb
ret
xor
cmc
shll
sbb
std
icebp
xor
mov
xchg
jecxz
not
fsub
ret
out
lock
sarb
aas
int3
ret
ret
in
call
test
icebp
sti
repnz
aaa
cmp
cmp
ds
cmp
test
fucom
incl
int
int
in
shr
mov
ret
hlt
leave
xor
ss
testb
test
loop
aad
mov
roll
subb
jecxz
aaa
lock
add
fistpll
fdivp
fadd
hlt
hlt
loopne
mov
addb
ror
ret
std
ds
and
ret
enter
mov
clc
mov
xchg
lock
xor
iret
int
aam
filds
repnz
fmuls
addb
lret
cs
cmp
xorl
clc
cmp
sbb
in
addb
xor
out
lock
rcr
ds
clc
cmp
loope
loope
fcmovnb
loopne
addb
in
out
ljmp
fucomip
fdiv
test
into
aad
xchg
test
lret
xor
dec
lock
aam
hlt
hlt
xor
repnz
fsubr
roll
test
std
mov
xchg
int
xor
shll
cli
cmpl
cmp
shr
and
mov
stc
rcr
into
cmp
call
xlat
cmp
jecxz
fmull
test
mov
xchg
ret
call
into
sti
idivb
in
shl
fsubr
cmp
std
hlt
int3
xchg
call
aad
icebp
aaa
xlat
fnop
cmp
lds
hlt
std
in
clc
in
in
repnz
aad
int3
lock
iret
cmp
call
in
fdiv
out
out
mov
xchg
ss
aam
shr
lret
cmp
cli
test
ds
cmp
neg
aas
shl
nop
cli
shr
lret
enter
cld
lret
add
cmp
addl
jmp
fdivs
shlb
cld
cli
ss
cmp
bnd
fdivp
fidivrs
sub
loop
xchg
rorb
sarl
loop
leave
cmc
into
cmp
fidivrs
repz
in
ds
test
ljmp
lret
lds
aad
lock
shl
cmp
ret
shr
call
jecxz
in
xchg
mov
call
stc
in
fmul
fcompp
xor
hlt
repz
imul
fdivrp
in
xchg
into
jecxz
int3
xor
cmp
in
fcomi
xlat
hlt
cli
fucomp
out
rcl
cmc
adc
int
ret
lret
shl
addl
xor
int3
sti
enter
std
in
repnz
call
leave
shr
mov
mov
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
loop
cmpsl
add
jle
add
xor
xor
lret
fnstsw
cmp
xlat
repnz
aas
cmc
repz
out
loop
in
nop
jmp
hlt
xor
cli
xor
aas
iret
cmp
sar
loop
ljmp
mov
in
ret
cld
fsubrp
aam
stc
rcr
sar
fld
xchg
aam
in
jecxz
filds
idiv
in
stc
aaa
cld
aad
faddl
faddp
clc
xchg
in
lret
mov
leave
loope
ljmp
loop
rcr
sar
mov
xchg
out
jecxz
fnstenv
test
in
fndisi(8087
test
jecxz
jmp
repnz
rcr
nop
in
out
out
out
xor
call
fnsetpm(287
rcr
call
loop
fcmovb
call
xchg
aam
in
cmp
sti
out
iret
out
leave
cmp
cld
aas
out
ret
std
in
in
enter
mov
out
vpmaddwd
int
cmp
fisttpll
ret
cld
call
fucomip
ror
idiv
leave
shr
ss
cmp
fnclex
fdivr
rcr
jecxz
out
jmp
cld
mov
rcl
fcmovnu
ljmp
repnz
icebp
shl
in
test
leave
filds
out
hlt
sar
xor
cmp
lret
loope
fdivrl
jecxz
mov
fldlg2
addl
xchg
imul
iret
stc
in
cs
sar
xor
icebp
fdiv
test
test
mov
mov
xlat
fsubr
icebp
mov
int
lret
jmp
aaa
cmc
fiaddl
test
decl
leave
test
ss
aam
cmp
cmp
stc
testb
in
xlat
sti
out
xchg
mov
leave
aam
xor
aaa
xlat
ljmp
in
cmc
add
hlt
cli
out
fmuls
fisttps
int3
aam
cmp
jecxz
loop
in
repz
out
add
test
loope
in
leave
enter
int
sar
fsincos
out
roll
and
test
test
call
cmp
out
hlt
loop
cmp
movl
leave
xchg
xchg
xlat
ss
xor
ret
shl
rorb
clc
jecxz
int3
std
xchg
aad
aad
cmp
out
fdiv
out
sar
repnz
fcomp
and
loopne
ljmp
fcmove
divl
ljmp
fdivrp
cmp
cli
sti
lds
mov
xchg
xchg
iret
cmc
stc
enter
fmul
aas
loopne
in
fcomi
leave
ret
les
out
mov
loope
jmp
cmp
shr
fidivrs
rcr
out
adc
sbb
cld
cli
lock
incb
xor
lret
ljmp
int
repnz
stc
fucomip
mov
mov
xor
jmp
fiadds
fiadds
or
repz
out
repz
cmp
int
jmp
in
sbb
repz
hlt
xlat
cmc
mov
loope
call
into
idiv
cmp
loopne
lret
sti
out
shl
ret
imul
and
xchg
dec
vpmuludq
sti
cld
out
shl
jmp
orb
jecxz
jecxz
xchg
cli
leave
out
test
int
fnsave
cli
int3
sti
fucomip
testl
mov
popl
ror
iret
xor
jmp
jmp
loopne
loop
ljmp
enter
xchg
hlt
not
lret
repnz
loopne
aaa
repnz
lock
fnstsw
jmp
std
or
std
icebp
lret
iret
cmc
clc
xor
int
int
fcmovu
cmpb
hlt
mov
jecxz
adcb
cld
stc
lret
test
repz
out
fdivr
mov
mov
icebp
fsubrp
into
fld
shll
cmp
lret
addl
repz
cld
std
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
int3
enter
out
lock
repnz
out
idiv
aaa
call
aad
cmp
out
fsincos
test
out
repnz
repz
into
enter
cli
fstp
cmpb
fcmovnbe
fcomp
xchg
xchg
les
repnz
lret
clc
call
fdiv
repnz
loopne
into
roll
aam
fxch
fstp
loop
lret
enter
shl
cli
out
hlt
ljmp
hlt
test
in
mov
mov
aad
cmp
cmp
jmp
cmp
aad
test
hlt
xchg
jecxz
call
idiv
fucomp
sbb
into
mov
aad
in
mov
movb
out
aaa
in
ret
fcmovnu
xlat
fdivr
fidivrl
neg
cmp
filds
xchg
rclb
fsubr
cmp
clc
cmp
xlat
fmul
sti
aad
aam
cli
lds
in
aam
out
xor
in
shr
cmp
iret
sarl
lock
sar
clc
out
xchg
test
mov
repnz
clc
std
stc
xlat
aad
out
cmp
fsub
test
add
testl
shll
shr
xor
enter
int
xlat
lret
fdivrp
sti
clc
mov
shr
enter
jecxz
nop
std
in
into
in
rcl
rcl
lock
cli
cli
rcr
ret
decl
loop
int
lock
out
xchg
out
shl
icebp
ret
into
jmp
fdivrs
in
repnz
loope
fdivp
leave
lds
leave
inc
xchg
aaa
int
rcl
in
jmp
aam
sbb
ds
in
fcmovnu
in
movb
out
nop
ror
ret
fmul
cld
out
clc
div
into
fadds
aad
in
enter
repz
cli
ss
cmp
fdivrp
and
repnz
in
addl
in
jmp
enter
in
into
ljmp
out
fmull
lock
jecxz
mov
clc
fnstenv
fnsave
xlat
cmp
aad
loop
cmc
movb
cli
mov
sub
clc
xor
out
leave
xlat
jmp
notrack
ret
cmpb
sub
cmp
lret
mov
call
ljmp
loop
stc
hlt
shl
fcmovnu
mov
call
jmp
enter
out
out
out
ds
leave
xor
cmp
neg
aas
mov
out
fiadds
int3
ljmp
fdiv
rcr
lret
cmp
fdivp
loope
fincstp
cld
shl
ret
loope
stc
cld
enter
rcl
xchg
out
int3
in
sub
int3
ljmp
test
test
jmp
fmuls
int
shl
repz
int
aaa
ds
ret
xchg
icebp
xchg
iret
popl
sti
fcmovne
loopne
cmp
xlat
mov
and
sti
lret
aad
xor
cli
sti
ljmp
out
aam
les
test
xchg
test
rol
into
leave
stc
lock
test
cmp
jecxz
loope
fcmovnb
cmc
int3
out
icebp
mov
fisttps
int3
lock
aaa
out
out
xlat
loopne
jecxz
test
cld
movl
fucom
xchg
out
xor
fcom
fadds
cmp
hlt
rol
hlt
ret
mov
loop
in
mov
in
iret
jecxz
sub
xor
cmp
fcmovnu
adc
aam
stc
incb
in
sbb
mov
cs
fdiv
ret
ss
cmp
in
cmp
movb
sub
ljmp
mul
lret
fcmovnb
loopne
rcl
ret
fiaddl
in
test
xchg
iret
inc
jmp
shl
lret
lret
cli
fcmovnu
fucom
cmp
test
out
stc
leave
ljmp
cld
fld
call
fcmovnu
fadds
leave
in
std
xchg
aam
out
cmp
cld
xor
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
cmc
cmp
cld
xchg
filds
loop
in
out
nop
roll
cmp
aam
hlt
loope
std
add
std
fnstcw
repnz
sar
fucomp
ljmp
cmc
ljmp
cmp
jecxz
ret
addb
out
xchg
cmc
sbb
repz
iret
rcr
rcl
int3
sti
int
mov
lret
in
in
aam
int
les
repz
rcr
cmc
cmp
mov
xlat
int
rorl
stc
xor
cs
int
fsubp
rolb
xor
fisttps
test
rol
in
repz
into
fcmove
into
imul
rcl
addl
fisttpll
clc
icebp
ljmp
aas
sarl
clc
leave
cld
out
in
mov
into
shl
in
ror
jmp
enter
icebp
hlt
sar
loope
call
fdivp
xchg
int
xchg
shl
xor
repz
jmp
test
sar
jmp
int
in
fucom
mov
xchg
lock
jmp
xor
cmc
shlb
repz
cmp
repz
addb
testb
xchg
jmp
cmp
sti
into
cmp
ds
stc
repz
jecxz
loopne
in
in
cmp
cmc
mov
iret
xlat
enter
int3
cld
bnd
in
loop
inc
fcomp
int3
cld
xchg
xchg
xor
out
iret
aam
int
int
cmp
cmc
jecxz
xlat
ljmp
rcr
das
lret
aam
out
shl
repnz
idiv
icebp
mov
rol
loop
test
adc
mov
imul
in
into
aad
icebp
fiadds
les
xabort
xchg
xchg
mov
ret
das
repnz
repz
xor
in
fdivrs
shl
rcr
out
fiadds
cmc
repnz
xor
xor
std
aad
icebp
fxch
loop
jecxz
mul
loopne
test
sti
xchg
aad
shl
aam
sub
out
lret
iret
aam
fdivr
idiv
fmull
shr
ljmp
fdiv
shl
fidivs
jmp
int
stc
mov
rorl
out
cld
shl
in
iret
lock
cld
cmp
ffreep
clc
repz
cmpl
loopne
shl
and
dec
loopne
nop
cld
mov
rcr
cs
fdivs
out
cmp
cmp
shl
cld
aam
jmp
in
mov
in
xor
xchg
out
repz
out
aad
ds
ss
ffreep
orl
inc
std
out
int
leave
in
aad
cmp
ljmp
hlt
mov
in
clc
lret
loope
mov
mov
xchg
mov
cli
out
iret
in
ljmp
shl
test
jmp
clc
enter
xchg
and
ljmp
iret
aad
out
incl
ret
xchg
cld
repz
mov
call
cld
jmp
fcomi
clc
hlt
ret
in
sub
in
in
xor
ror
ror
rcl
shlb
iret
clc
hlt
std
orl
mov
out
out
aam
rcr
icebp
enter
ret
cmp
fiaddl
fnclex
in
lret
xchg
ret
clc
fdivr
jmp
jmp
clc
xor
call
int
jecxz
fcomip
cmc
ror
imulb
cmp
lds
f2xm1
not
fdivrs
add
ljmp
xchg
lret
aaa
ret
std
fidivrs
xlat
stc
std
cmp
in
aad
rol
ror
out
mov
call
addb
xor
int
fiaddl
rcr
enter
call
lret
loope
das
ss
jecxz
fldl2t
aad
cld
lret
shl
in
inc
cld
mov
ljmp
mov
ss
lret
out
cmp
repnz
incl
xlat
int3
mul
sbb
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
mov
lock
in
hlt
mul
cmc
fstpt
xor
in
loope
fstp
shl
lock
nop
orb
aam
xor
cmp
fucomip
cld
clc
clc
xlat
out
repnz
fldl
ljmp
shll
ret
xlat
fcmovbe
iret
int
cmp
cld
ret
ret
rcl
test
in
int
mov
iret
ljmp
leave
aaa
fdecstp
lock
icebp
cld
cmc
xchg
xchg
fcmove
mov
repnz
lret
ret
cmc
in
cmp
addb
incl
loopne
cli
lea
xor
cmp
cmp
sti
sar
ret
sti
in
loop
loope
xchg
lret
call
cli
xor
cmp
faddp
xchg
in
into
jmp
fucom
in
int
cmp
out
ror
hlt
clc
rcr
idivb
xchg
ffreep
aam
mov
xchg
div
xor
out
jmp
sarb
loopne
test
imul
shl
xlat
call
iret
ret
out
lret
cmp
xlat
cmp
fstpt
rorb
test
mov
lret
cmp
fst
stc
fdiv
sti
loopne
loopne
xor
in
fdivr
lock
fsubr
loopne
sub
in
cmp
cmp
repnz
stc
add
rcr
call
out
out
xor
icebp
out
out
cmc
cli
in
aad
call
sub
decb
icebp
neg
fcomi
in
into
shl
div
shr
xchg
in
xchg
std
out
aaa
shl
stc
jmp
cld
xlat
rcl
iret
test
out
cmp
std
xchg
test
divl
xor
jecxz
icebp
lock
cld
jecxz,pt
out
out
fmull
mov
loopne
adcl
in
fcmovbe
fiaddl
jecxz
fcmovbe
leave
mov
mov
into
int3
add
sti
xor
std
cmp
in
cmp
loop
fucompp
aad
call
not
clc
test
cmp
div
xor
cli
in
xlat
stc
out
sub
test
repnz
aaa
icebp
out
call
fsubrp
fildl
idiv
inc
test
loopne
std
in
shl
loop
enter
in
das
into
out
jmp
int
fucom
aam
cld
fadd
aas
popl
cmc
in
lds
mul
in
lret
jmp
aas
lock
jecxz
inc
mov
inc
xchg
icebp
xor
repnz
rcl
aaa
fmul
sarl
xchg
in
mov
xchg
jecxz
cmp
fdivr
cmp
cld
repz
cmp
aad
xlat
mov
test
jecxz
fst
nop
out
mov
out
xor
lret
lock
std
cld
sti
cmp
jecxz
in
in
fcomp
int3
test
jecxz
out
aas
into
out
cld
ljmp
stc
cmc
cmp
loopne
jmp
lret
mov
int3
rol
aad
cli
aad
in
cmpl
rcl
bnd
sbb
loope
in
out
aam
nop
xor
sub
lret
lock
aaa
jmp
hlt
aas
fmul
sbb
aas
fcmovnbe
leave
xchg
mov
out
mov
xor
cmp
xor
repnz
int
xor
cmc
std
sti
rolb
imul
mov
in
fdivp
int
subb
loope
jmp
fucom
ds
fadd
fcom
cmp
mov
xchg
aad
out
divb
cmp
std
cmp
mov
mov
loopne
ljmp
jmp
enter
icebp
lret
xorb
cmc
mul
sub
leave
mov
aam
cld
cli
enter
neg
xor
jmp
in
lret
xchg
leave
test
rcll
iret
shl
in
sti
cmp
ret
hlt
faddp
mov
int
out
in
ljmp
in
ret
int
inc
in
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
flds
in
fsubr
lock
into
in
out
out
fldz
lret
out
cmc
fcom
fcomip
jmp
loope
out
mov
jecxz
in
repnz
nop
in
cmp
cmp
idivl
ds
repnz
fcmovnb
ljmp
xchg
jmp
test
in
shr
cmp
stc
cli
cmp
neg
repz
loopne
and
out
xchg
mov
out
in
ss
stc
stc
fldln2
ss
ds
repz
sti
ljmp
lock
xor
fmul
fcmove
ljmp
xchg
xor
out
loop
xchg
in
xor
jecxz
leave
cmc
stc
fsubp
hlt
out
idivl
hlt
hlt
xchg
les
ret
out
jmp
iret
in
les
fnstenv
in
fptan
rcl
call
std
clc
clc
aam
enter
fmul
in
lret
aad
jmp
divl
fidivl
fdivl
aas
fildl
sti
fmulp
fsubp
fmull
xchg
loope
jecxz
jmp
lret
fdivrs
xlat
stc
fsincos
mov
cli
mov
loop
lret
out
in
aam
out
repnz
xor
in
xlat
inc
xchg
fabs
cmc
cld
fsub
in
leave
mov
cmc
fucompp
fmul
std
shl
int
cmp
fcomi
ret
sbb
or
out
sub
out
hlt
xor
cmc
stc
int3
xor
ss
loop
sti
fcom
ror
jmp
call
loope
out
hlt
cmp
enter
xlat
cmc
sar
out
mov
in
jmp
stc
xchg
mov
xor
aad
std
fcmovnb
cmp
cmp
fsubr
in
lret
fimuls
divb
jecxz
aaa
sti
cmp
aaa
cmp
shr
test
fldl
fstl
out
lock
stc
fstp
rcl
lret
xor
int3
idiv
cmc
cmc
aad
in
sbb
in
orl
xlat
cmp
stc
fdivr
fcmovnu
cmp
xchg
cmp
xlat
call
rclb
enter
xlat
icebp
shll
clc
int3
in
clc
rcr
mul
in
loope
int
std
shl
in
test
lret
sti
rcr
clc
into
loope
test
sub
mov
repnz
cli
div
frndint
into
in
aas
jecxz,pt
cmc
loope
cld
out
std
fildl
mov
aad
clc
xlat
icebp
cmp
icebp
xor
out
fucomp
std
loopne,pt
xlat
fucomip
xchg
addb
in
ret
in
fyl2xp1
cmp
int3
sti
cmp
aas
std
mov
lret
cld
in
fsub
jecxz
in
xorb
int3
in
leave
in
enter
ljmp
repnz
ljmp
lret
xchg
leave
in
ss
enter
fcmovbe
inc
cld
out
shl
lret
stc
rorl
iret
xor
int3
aaa
repnz
jmp
std
aam
clc
addl
jmp
in
in
not
xor
clc
cmp
in
xlat
iret
cli
int3
test
shr
cld
xchg
stc
loop
movb
xchg
cmc
repnz
ret
iret
ss
cld
fidivrs
repz
cld
aam
enter
fiaddl
rorb
idivb
cmp
iret
loopne
jecxz
loope
std
fnstcw
out
call
icebp
decl
int
jmp
cmp
cld
cld
out
ds
fldl
into
in
iret
jmp
into
xlat
cmp
out
mul
xlat
hlt
out
in
fstp
loop
loopne
xchg
test
aad
cmp
aam
ret
jecxz
std
mov
lret
rorb
call
fdiv
jmp
out
div
fcmovu
fadd
sti
ljmp
in
icebp
in
xchg
jmp
hlt
ret
fadd
jmp
sti
into
loope
cmp
fdivr
ret
or
xchg
xchg
cmc
lock
fstpt
cli
cmp
icebp
sar
incl
shl
clc
loope
jmp
xchg
lret
enter
push
fstpt
sti
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
int3
aaa
stc
aam
call
aas
ret
repnz
mov
fmull
nop
loopne
in
cmc
cmp
ljmp
into
lock
fidivrs
ret
in
mov
fcomip
cld
out
std
in
in
sarb
out
cs
cmc
fucomi
cmp
stc
in
in
xlat
in
jmp
jmp
ret
cmp
iret
out
shr
shl
loope
lret
inc
fcmovbe
jecxz
hlt
in
mov
enter
lret
iret
iret
sub
jmp
cmc
cmp
repnz
rcr
cld
loopne
jecxz
mov
lret
cld
fcmove
int
out
xor
jmp
cmp
cmp
cmp
icebp
icebp
test
shl
in
test
fld
mov
shl
ret
in
lds
aas
std
aaa
cli
aam
neg
cmc
test
xchg
call
mov
xor
xor
jmp
fucomp
cmp
jmp
sbb
xchg
testb
shl
jmp
ret
jmp
call
ror
ret
stc
in
stc
clc
fxch
mov
sti
call
in
loop
loope
aad
xlat
sti
clc
iret
cld
cmp
cli
cmp
test
call
loope
xlat
mul
loope
lret
pop
loope
shlb
roll
sar
fcmovu
test
xchg
in
mov
in
xlat
divl
sti
out
test
loope
xlat
aad
les
jecxz
out
xor
aad
int3
jmp
cmp
into
hlt
cli
loopne
fdivrp
in
decl
xchg
xchg
repz
fsincos
xlat
cmc
cmp
leave
loopne
stc
cld
cmp
hlt
loopne,pt
nop
call
out
xor
ss
in
out
xor
std
sar
fld
rol
incb
into
loop
xchg
lds
cli
into
idivb
lret
jmp
sti
cmp
std
fimuls
and
out
hlt
int3
into
out
neg
repz
cmpb
and
or
fmul
test
out
shll
rcl
xlat
in
clc
fmulp
fdiv
lock
cld
vpaddq
mov
out
mov
xchg
xchg
in
icebp
repnz
fxch
cli
iret
sar
repz
cmc
enter
fadd
movl
repz
sti
cmp
fst
cmp
xlat
fadds
lds
hlt
xchg
xor
out
std
call
cmc
stc
fcom
in
shl
xchg
loope
lret
xchg
in
loop
loop
cmp
stc
repz
fistpll
fdivr
aad
out
out
iret
lds
fsubrp
jecxz
xchg
xor
in
les
jmp
rcr
sar
test
cli
ftst
stc
cmc
fcomp
loope
lock
fcmovne
repnz
out
in
out
out
fdivr
fcmovnbe
fdiv
out
loope
fld
adc
aam
xlat
xchg
cmp
loopne
fmulp
out
xor
sti
int3
aam
loop
repz
xlat
in
les
fimuls
out
shlb
bnd
call
clc
cld
in
loopne
lret
xchg
jmp
loopne
stc
iret
fdiv
xor
aad
iret
rcl
cli
repz
mov
clc
out
fnsetpm(287
ljmp
ret
repz
in
cmp
lock
clc
test
cli
mov
mov
stc
lret
icebp
cmp
xor
sti
ret
cld
std
in
ljmp
repnz
aas
cmp
rcr
testb
jmp
out
into
nop
orb
imul
into
repnz
out
cmp
cld
fdiv
rcl
fisttpll
ficoml
stc
call
lock
out
cmp
fadd
fyl2xp1
aam
out
mov
mov
mov
xchg
xacquire
in
ss
cmc
fcmovnbe
into
fcomip
rol
in
out
jmp
int
test
in
test
jmp
enter
call
shl
aad
xlat
ljmp
leave
mov
test
jmp
aaa
out
jmp
xor
ds
icebp
and
addl
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
shll
jg
roll
jle
addb
jmp
int3
int3
clc
lret
repz
hlt
int
in
loopne
neg
sti
fcmove
enter
sub
shr
xor
icebp
imul
cmp
in
jmp
jmp
out
add
xlat
out
mov
in
rcll
cli
in
clc
iret
cmp
faddp
jecxz
rcl
stc
fldl
xor
ljmp
clc
lret
dec
std
vpsrld
out
enter
cli
into
jecxz
out
loope
test
lret
fcmove
sar
cmc
xor
ret
addl
mov
iret
popl
leave
hlt
fcom
jmp
into
sbb
aas
hlt
loope
jmp
icebp
xchg
hlt
div
in
jmp
cld
cmp
cld
loop
repz
out
int
iret
fisttps
jmp
in
rcr
rcl
fabs
int3
fcomp
in
fnstcw
cld
int
into
enter
xchg
orl
cmp
xor
cmp
mov
mov
filds
jecxz
xchg
xchg
aas
aaa
out
out
cmp
test
out
hlt
repz
jmp
nop
mov
test
xchg
in
xor
icebp
cmp
hlt
ds
jmp
test
cld
cmp
out
clc
std
mov
enter
in
test
cmp
out
jmp
sub
cmp
shl
stc
lea
fmul
into
lea
in
int3
ljmp
loop
iret
out
fidivrs
rcl
jmp
jmp
imul
rorb
jmp
in
lret
rcl
cmp
ss
rcr
filds
imul
out
jmp
out
in
hlt
idiv
clc
loopne
cmp
loop
jmp
fst
cmp
mov
int3
repz
les
jmp
cli
cmp
fstp
out
faddl
ljmp
std
fildl
xor
lock
fdivp
lret
cmpb
out
ret
cld
fmul
nop
mov
into
test
enter
rcl
xchg
incb
loope
xlat
int3
aad
into
int
lret
std
fdiv
int3
fcmovne
mov
test
xor
jmp
int3
aaa
aaa
in
idivb
into
cmp
jmp
aam
push
roll
fucomip
loope
mov
cmp
fcomip
ror
in
sar
push
loopne
jmp
shr
lock
test
jecxz
div
out
call
fcomp
rcl
aad
xchg
rol
ljmp
nop
sar
ljmp
cmp
sar
aas
in
dec
loope
jecxz
test
out
lock
loope
ret
in
cmp
xlat
ds
cmp
jmp
fucomip
into
lock
xchg
hlt
xchg
into
xor
cmc
divl
out
fcmovne
repz
frstpm(287
enter
std
in
loop
in
jecxz
out
aad
das
lret
bnd
iret
jmp
test
lock
rcr
fiaddl
int
xchg
jmp
divb
lock
cmp
fsubrp
hlt
sti
repz
cmp
rol
cli
cmc
jmp
stc
decb
cld
repnz
aam
int
fbstp
lock
mul
mov
mov
lock
lock
in
out
lret
int
cli
fadds
ret
fcmove
fisttps
clc
div
lret
jmp
cmc
out
fldz
cmp
icebp
cmc
mov
neg
call
test
in
sti
out
in
into
std
fucomip
lock
int
loope,pt
xchg
loopne
fdivr
mov
loope
imul
jmp
cmp
icebp
xlat
hlt
sar
cmc
out
test
fdivrp
cli
sti
mov
int
nop
xor
shl
fdiv
aad
ss
cmp
shl
mov
loopne
in
sti
idiv
mov
lret
mov
xchg
into
lret
cmp
int3
stc
cmp
rorl
stc
mov
shl
stc
lret
sarl
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
push
sub
addr16
push
add
cmp
cmc
aam
ror
xlat
in
in
loope
cld
test
xchg
hlt
aad
xor
aam
ret
lret
cli
aas
jmp
fsub
shl
jecxz
jecxz
cmc
mov
dec
std
loop
into
repz
lock
cli
cmp
clc
out
out
cmp
loope
repnz
fcmovbe
in
ret
fadd
mov
xor
idiv
stc
cmp
ss
xchg
call
rolb
xchg
in
out
neg
enter
aaa
jecxz
div
cld
out
in
lea
int
cmc
loopne
call
lret
cmp
jmp
fidivrl
cmp
cmp
xlat
xchg
enter
fildl
jmp
aam
rol
sub
cmp
push
call
xchg
xchg
mov
fld1
lock
aad
cmc
fdivp
loope
loop
fsubr
jmp
loopne
xchg
ret
xor
cmp
std
adc
loop
mul
rorl
cmp
ljmp
fcmovbe
cmp
cmp
clc
idivl
fcomip
aam
xor
in
test
ror
mov
aaa
in
ss
enter
aas
fadd
ret
repnz
sti
shl
loop
in
sub
repnz
repnz
fldl2e
fdivrl
cmp
into
les
repnz
les
lock
loop
lret
ret
cli
enter
cli
clc
loopne
repnz
cli
cld
idiv
jecxz
clc
repnz
and
cs
cli
int
fpatan
in
cld
fdiv
cli
rcl
out
movl
addb
sarb
into
xlat
cmp
mov
clc
or
fcomp
cli
int3
xchg
dec
mov
rol
clc
std
out
cmp
sarl
cmp
aam
xlat
testb
lret
int3
mov
cmc
in
out
aas
in
xlat
cli
ds
jecxz
aad
add
xlat
loop
ret
into
xor
in
lret
repnz
cmp
call
fcmovbe
mov
fstl
aad
xor
aam
adc
aas
sar
mul
mov
std
fucomi
repz
jmp
cmp
lret
cmp
lock
jecxz
jmp
lret
cld
mov
mov
xchg
loope
icebp
repz
lret
in
ljmp
idiv
mov
loope
jmp
out
in
out
or
shl
fdiv
aaa
loopne
test
cli
in
xchg
in
clc
enter
xchg
ljmp
out
lret
clc
shr
hlt
lock
fiadds
mov
mov
ror
hlt
xor
clc
stc
cmc
ds
shl
shl
out
call
loope
out
mov
call
fcom
aaa
int
hlt
enter
cld
neg
loop
test
mov
fists
aaa
aad
int3
iret
fsubrp
stc
hlt
mov
leave
leave
int
xchg
cld
sub
loop
ret
ss
cmp
enter
loope
aas
aam
repnz
stc
mov
mov
in
in
icebp
in
das
xor
stc
ss
out
fucomip
cmp
test
jmp
test
test
jmp
mov
icebp
xor
leave
sti
clc
jmp
pushl
jmp
addb
repz
xlat
fisttps
ljmp
enter
cmp
clc
out
idiv
stc
sti
std
stc
sarb
ret
ret
movl
imul
shl
ljmp
sar
sarl
loop
stc
call
flds
shr
shrb
in
fnstcw
xor
xor
shl
in
rol
loop
rcr
in
addb
aaa
aaa
ror
fldpi
out
fnsave
jmp
fcmovbe
lret
stc
test
cli
clc
roll
aas
rol
lds
out
std
sarl
add
loop
mov
test
loopne
xchg
out
aaa
jmp
lret
clc
cmp
cmp
fsubp
cmp
cmc
aam
stc
loope
fdivrp
ljmp
clc
jmp
enter
in
iret
cmc
rolb
testl
xlat
out
lret
out
fcmovu
ror
in
xchg
loop
stc
mov
lret
cli
std
repnz
mov
shl
iret
out
in
fnstsw
cmp
cmp
int
icebp
cmp
hlt
ret
int
in
xor
aam
sar
shr
repnz
ss
addb
fdivrp
aad
loopne
out
mov
call
add
adc
add
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
sbb
sbb
jg
push
add
aad
jmp
aaa
cmp
sti
in
std
sti
icebp
in
cld
fnstsw
sarb
loopne
ds
loop
jmp
in
ror
cli
ss
shl
sar
repnz
mul
cmp
mov
mov
leave
fsub
adcb
shlb
cmp
ret
xchg
in
in
sti
fxch
call
fcomip
xor
jecxz
cli
icebp
ds
rcl
rcl
push
lret
aad
stc
lock
std
icebp
mov
cld
cmc
ffree
cmp
not
repz
rcr
jmp
mov
xchg
out
int
cmp
sar
dec
out
jmp
clc
loope
int3
cli
out
nop
rcl
mov
jecxz
ljmp
hlt
aad
loope
fsubr
fadds
fildl
cli
lret
xor
ljmp
lock
fsubp
flds
test
std
xor
lret
hlt
repz
hlt
loope
sarb
loop
sti
test
cmp
aam
test
sti
icebp
roll
into
xor
hlt
out
xor
fmulp
sti
fcom
xchg
xchg
add
leave
jmp
in
fmull
jmp
aaa
clc
imul
int
fcomip
xchg
xchg
mov
std
lock
std
test
sub
ss
repnz
repz
xlat
cmp
clc
aam
testl
shl
xor
in
xlat
aas
int
fucomip
jecxz
repz
out
lret
ret
mov
fisttps
in
neg
rcl
xlat
shl
out
fnstcw
icebp
cmc
lret
lret
int
xlat
mov
shr
xchg
call
in
hlt
repnz
cmpl
sar
repz
aad
into
mov
jmp
lret
lret
aad
call
in
iret
sbb
cmc
ret
cld
mov
loopne
iret
repnz
iret
int3
rol
repz
in
stc
loope
repnz
add
out
fucomi
sti
mov
icebp
xor
ret
in
enter
stc
shl
sarb
jecxz
clc
ljmp
xchg
loop
int
iret
cmc
fcmovb
aad
fucomip
cmp
cmc
in
xlat
mov
call
xchg
or
ljmp
lret
iret
repnz
in
sarb
enter
loope
call
in
out
call
out
not
test
les
into
xchg
rcr
mov
repz
rcl
iret
xor
cmp
aam
test
loope
mov
xchg
das
xor
clc
jmp
cmp
ds
cmp
ret
not
mov
out
addl
shl
ljmp
fidivrl
cld
shl
rol
fyl2x
lret
ljmp
in
clc
rcr
hlt
aaa
int3
out
clc
faddl
fsub
cli
int3
fcmovne
repnz
enter
cmp
ret
mov
aad
repz
into
loop
mov
test
out
xor
out
cmp
xorb
rol
clc
mov
xlat
mov
out
enter
xor
out
adc
out
cli
xchg
mov
mov
icebp
rolb
out
jecxz
enter
push
cld
fistpll
hlt
ds
cmc
fmulp
out
lret
call
jecxz
fistpll
xor
aam
cmp
iret
cmp
out
lock
jecxz
mov
fmul
in
test
ljmp
out
stc
lock
repnz
in
int
mov
in
xchg
mov
clc
int
ss
ljmp
repz
ljmp
loope
shr
xchg
in
jecxz
cmp
shr
into
out
aas
fdivrp
int
cli
les
mov
jmp
divl
aad
iret
rcl
fdivrp
rcr
xor
sub
icebp
mov
repz
out
fcomi
icebp
lock
int
test
xchg
loop
repz
ljmp
repnz
ljmp
cmc
in
sti
int
xlat
xor
clc
jecxz
rol
std
mov
or
xchg
shl
dec
hlt
into
fsubr
lock
ret
cmp
in
in
out
stc
repnz
ficoms
in
lret
icebp
sarb
iret
idivb
aad
neg
cmp
xlat
xlat
clc
mov
loop
rol
clc
sub
xor
out
aas
cmp
rolb
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
mov
push
add
sbb
in
cmp
ffreep
cmc
cmp
hlt
in
fcmovnu
rcl
shl
not
cmc
ljmp
fmul
hlt
decl
leave
xor
cmc
hlt
leave
or
sub
mov
rolb
in
ret
shll
out
neg
sarb
rol
ret
hlt
call
fmull
div
fcmovnb
cmp
hlt
cmp
cld
cmp
aam
repnz
cli
cld
or
roll
xor
cli
cli
iret
clc
std
into
fucomi
ror
std
cld
cli
cmp
roll
out
out
xor
vmovq
sar
rcl
test
out
neg
cld
mov
fldl
jecxz
ljmp
enter
cmp
clc
out
add
jmp
jecxz
jecxz
int
sub
sarl
loop
fiadds
cmc
out
ret
stc
ret
loop
jmp
out
xor
loope
in
out
in
sbb
leave
addb
out
in
shrl
rol
ror
ljmp
int
jecxz,pt
orb
icebp
std
in
test
in
rol
lret
repnz
repz
out
out
fsubp
jmp
std
jecxz
mov
repz
loope
shr
jmp
icebp
loopne
cmp
int
cmp
loope
in
leave
lock
lret
mov
mov
mov
into
cli
ss
stc
in
enter
ds
std
fdiv
mov
jmp
jmp
std
int
int3
aad
clc
jmp
cmp
sar
in
cmc
shl
loope
cld
loope
jecxz
aam
and
cli
hlt
in
jmp
lret
rolb
leave
clc
sbb
ret
repnz
mov
cmp
dec
repz
ret
enter
mov
fsubr
out
lret
xchg
in
into
ret
fadd
repnz
std
in
icebp
fsub
int
in
sti
adc
xlat
jmp
loop
lock
out
lret
cmp
loopne
mul
cmc
repz
ror
lret
ljmp
lock
clc
jmp
cld
ret
fadd
fmul
faddl
sti
shl
test
call
cmp
cmp
rolb
fsubp
out
xchg
ss
cmp
icebp
icebp
out
fcmovnbe
test
out
incl
shl
fsubp
lock
aad
lock
in
out
aam
addl
xchg
xchg
mov
fcmovnbe
call
lock
cmp
std
repz
fsubrp
in
fmuls
rcll
aam
aam
leave
loopne
xlat
repz
shl
in
cli
lret
mov
fsub
loope
into
out
aam
sub
int
ljmp
cld
ds
test
call
loop
in
xchg
cs
out
out
fucomi
hlt
repz
cmp
fidivl
out
out
clc
loope
leave
xchg
int3
mov
das
out
repz
sarl
fcomp
stc
in
xlat
lock
aas
ret
test
cmp
jecxz
out
cmc
shl
hlt
clc
imul
sti
fmulp
lock
sar
sti
in
jmp
enter
dec
xchg
fucom
repnz
xor
ror
enter
iret
jmp
repnz
rcr
mov
mov
mov
leave
enter
aam
rcl
xlat
into
loope
clc
and
test
test
in
aaa
lock
shl
aad
shl
rolb
cmp
jmp
xchg
xlat
shrl
sub
sarb
hlt
cmp
repnz
rolb
fucom
call
xchg
loopne
repnz
into
aaa
in
clc
in
xor
lock
out
fcom
movb
loopne
leave
in
out
aam
cli
into
out
out
xor
cmp
loop
aad
repnz
hlt
mov
out
idiv
std
sub
int
mov
in
xor
jmp
call
iret
icebp
in
ret
xchg
loope
jecxz
xchg
icebp
ss
clc
enter
ljmp
cli
cmp
orl
stc
call
fucomip
cld
iret
test
testl
out
mov
xlat
lock
lret
fnstsw
cmp
add
div
aad
in
mov
xor
fdivr
cld
xor
stc
push
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
in
loopne
out
xchg
lock
addl
aam
in
rol
jmp
cmp
std
fnstcw
xchg
loopne
out
sti
xchg
xchg
out
xor
out
shl
cmp
cmpb
cmp
icebp
repnz
cmc
dec
lret
rorb
sub
divl
in
xlat
loopne
out
loop
jmp
in
cli
out
in
loopne
cmc
orl
rol
in
out
stc
and
out
sti
xlat
fisttpl
mov
xchg
jmp
int
repz
out
ror
out
cmp
iret
idiv
fcmovu
lds
fmull
fdivr
orb
neg
out
cld
adc
loopne
fdiv
mov
xlat
addl
xchg
stc
clc
xor
neg
shl
ror
jecxz
hlt
vpsubb
clc
orb
xchg
icebp
rol
lret
in
cli
call
roll
xlat
lds
in
in
fmull
cmp
xor
into
loope
loopne
vaddsubps
fildl
loopne
loopne
iret
xor
fmul
stc
xor
rcr
cmp
in
out
aam
lea
loope
in
test
neg
xor
fmul
out
cli
fcompp
cld
sar
loopne
out
testl
rcll
aad
sar
cmc
cmp
int
clc
loopne
xchg
lea
int
xchg
aad
xor
ss
clc
cld
cmp
ffree
xchg
leave
lds
mov
shl
cmc
ret
into
out
ss
repz
into
shl
in
addl
mov
jmp
rcl
ljmp
jmp
test
ljmp
loop
lret
jmp
aam
icebp
loop
mov
lret
fadd
xchg
aam
icebp
cmc
lret
cmp
shl
fcmovbe
cmp
cld
stc
cld
mov
loopne
cld
in
imul
jmp
sbb
leave
lret
out
jmp
aad
ds
push
jmp
and
mov
out
in
fld
xor
fidivrs
ret
neg
jecxz
faddl
ljmp
mov
ret
cmp
out
ljmp
test
in
in
idiv
test
test
jmp
aam
fldlg2
cli
idivb
cmp
sar
icebp
sar
jmp
sbb
repz
xchg
out
out
clc
fnstenv
ss
push
in
ror
call
xlat
test
lea
jecxz
div
repnz
cmc
stc
in
int3
incb
jecxz,pt
in
xchg
mov
fstl
icebp
repnz
xor
loope
cmp
test
sbb
call
xchg
out
enter
in
fld
lret
int
in
sub
fadd
mov
fst
mov
aad
repz
in
ror
shlb
neg
cmp
repnz
fucom
neg
loope
test
rol
xor
shr
enter
out
aas
cmp
hlt
repz
enter
in
in
in
mov
lock
xlat
std
aaa
sarb
aam
loopne
loopne
xor
fiadds
out
in
sar
out
aad
ljmp
fsubr
mul
addb
sti
lret
int3
and
out
out
xorl
divb
ds
cmp
test
xchg
mov
jmp
xchg
xchg
xchg
call
lock
lock
iret
sarb
lock
cmp
hlt
fiaddl
mov
repz
icebp
out
lret
cmp
jmp
shl
aam
cli
stc
out
loopne
shl
jmp
mov
leave
cmp
stc
cmp
fld
test
in
test
mov
loop
fucomp
loop
xchg
mov
int3
xor
in
cmp
ds
ds
sar
aad
sbb
mov
int3
call
call
fcmove
loope
icebp
repz
mul
cld
lret
and
mul
ret
cld
cmp
cmp
repnz
test
mov
in
ret
in
lock
shll
sarl
cli
cmp
xlat
out
test
fdivr
xor
sub
stc
loope
xor
ljmp
aas
fcmovnu
rol
std
repz
lret
lret
rcl
out
test
inc
lock
lods
bound
inc
arpl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
aam
jp
jle
add
out
xor
rcl
fdivs
shl
fucom
loope
in
test
addb
rol
out
jmp
jmp
xor
rcr
cs
clc
xor
fcmovnu
repnz
not
rolb
sub
dec
lock
ljmp
ror
loopne
shl
ret
fxtract
and
mov
hlt
in
xlat
cmp
cli
in
xor
cmp
adc
out
ljmp
xchg
iret
test
xchg
xor
repz
shl
xlat
lret
hlt
cmp
adc
out
mov
loopne
xor
repnz
int3
repnz
in
lret
loopne
jecxz
div
fscale
in
lea
out
int3
int3
ss
out
ss
cli
cld
cld
decl
ljmp
stc
jecxz
shrb
hlt
leave
hlt
incl
fadds
cld
fcmove
xchg
aam
das
repnz
cmp
cmp
filds
mov
lret
test
in
cmp
in
int
lock
roll
clc
sbb
leave
cli
loopne
lret
adcb
fidivrl
in
filds
sti
cmp
mov
in
fsubr
mov
sti
ss
lock
fnstcw
fsubr
ret
idiv
in
mov
jmp
icebp
xlat
xlat
sti
iret
cmp
into
fcom
aas
cmp
fstp
repnz
sti
mov
or
ljmp
call
fucom
lret
cmc
in
jmp
xchg
ret
mov
leave
test
sar
jmp
neg
aam
jecxz
cmp
addb
xchg
adcl
fcmovne
cmc
cmp
lock
loop
aam
sbb
add
test
in
mov
loopne
cs
out
clc
int3
cmp
cmp
repnz
aam
out
ljmp
aam
aad
repz
call
std
lock
int3
roll
fucomi
mov
mov
mov
xor
aam
ljmp
sti
out
ret
enter
test
lea
in
xor
das
out
stc
in
xor
loop
test
icebp
cli
repnz
icebp
xchg
xchg
mov
aam
clc
cmp
cmp
sarl
int
test
cmp
out
xchg
orb
jmp
cs
ss
idiv
into
test
icebp
cmp
stc
mov
lea
into
hlt
xor
lock
cmc
sti
xor
adc
in
rolb
xchg
rorl
lock
cmp
jmp
cli
std
fadds
lret
out
dec
les
in
rol
hlt
ror
incl
aam
xchg
xchg
in
loopne
fsub
xchg
xchg
out
xchg
int3
shl
jmp
shr
ss
cmp
aas
cmc
cld
std
aam
out
fcomp
lret
lret
test
int3
xor
icebp
enter
cmp
cmp
int
xchg
std
test
xchg
jmp
stc
xor
rcl
jecxz
ret
fcmovbe
stc
clc
imul
xlat
stc
incb
out
ror
aam
rcr
rol
lock
mov
fldlg2
or
int3
in
in
repnz
sti
enter
xlat
in
cmp
stc
not
lret
ljmp
xor
call
cmp
sti
cmp
in
xchg
cli
icebp
shl
loope
lret
cli
mov
loop
int
test
sar
out
out
sarb
fcmovnu
sar
loop
movb
std
faddl
jmp
idiv
int3
jecxz
loope
test
int
sti
ror
xchg
sub
jmp
sbb
jecxz
repnz
jmp
xchg
ljmp
lret
int3
stc
xor
ret
roll
jmp
in
in
jmp
lock
out
xor
cmp
iret
icebp
cmc
inc
std
fisttpll
cld
mov
fmull
iret
leave
ret
cmc
int3
fidivrl
div
neg
fcmovne
fdiv
hlt
neg
jmp
sti
fsub
push
mov
ljmp
std
icebp
fxch
cmp
sti
ds
cld
faddl
ffree
xchg
ret
rol
out
sti
fcomi
cld
fcmovu
aaa
aam
cmc
inc
orl
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
sahf
popf
mov
jle
add
mov
enter
jmp
xchg
jmp
jmp
in
jmp
fdivrl
in
loop
jecxz
aad
xchg
loope
icebp
adcl
ds
repz
xlat
ds
rcl
fcom
fmuls
sti
fucomi
ljmp
std
cmp
aam
xor
hlt
rcr
aam
fdivr
popl
and
repnz
rol
mov
xchg
nop
call
in
int3
sti
sti
cmp
ror
ret
cmp
sti
xchg
test
sub
lret
out
int
ret
repnz
shr
int
fcmovnb
loope,pt
xor
cmc
ret
ffree
call
out
div
loope
ret
xor
fsincos
in
repnz
cld
idivb
fucom
in
jmp
sbb
mov
adc
xor
aaa
into
sarb
sbb
cli
loop
test
clc
ret
fcmovnb
shl
enter
mov
out
into
sub
lret
clc
jmp
cmp
out
cmp
loope
neg
fimull
aad
into
das
out
leave
aam
aad
loope
xor
loopne
std
jecxz
xchg
xor
or
xor
sti
fdivrs
out
fcmovnu
out
cmp
icebp
cli
hlt
cmp
out
xchg
out
hlt
aad
out
call
cmp
div
addl
cld
fucomp
out
out
out
jmp
loope
jmp
fsubr
cmp
stc
into
into
std
orb
jmp
fsub
mov
test
lock
xor
jecxz
in
xchg
xchg
sti
xchg
xchg
ljmp
aaa
icebp
fsubr
call
in
out
aas
call
test
hlt
cmp
adc
aaa
out
xor
out
lock
cli
enter
jecxz
ljmp
enter
neg
leave
lret
xlat
ss
lock
sarb
std
shl
flds
hlt
xor
sub
fcomp
sarb
std
out
in
sar
cmc
loop
loope
out
fmulp
fmul
xchg
xchg
rcl
iret
xor
out
jmp
call
loop
xchg
std
loope
in
ljmp
fsub
jmp
lock
shl
addl
out
leave
xchg
add
shl
lock
repnz
sub
loope
fstp
rol
in
loop
call
fcompp
out
mov
xchg
out
call
cmpl
aad
stc
aad
cli
loope
mov
or
ljmp
cmp
std
lret
fcomi
ret
jecxz
cli
cmp
int
sti
lret
int
iret
mov
sub
rol
stc
fidivrl
fdiv
not
ret
cmp
mov
mov
jmp
ljmp
cmp
sar
fidivrs
testb
rolb
out
into
aad
aad
ror
ss
cld
test
repz
out
out
loopne
test
xor
xor
jmp
aad
lret
lret
sti
xor
mov
cld
in
mov
aam
ss
ret
cmp
icebp
xor
cmp
xor
in
fcmovnb
aam
shl
adcb
int3
sti
cmp
fxtract
repnz
ret
std
fsincos
test
std
lock
rcr
jmp
iret
in
in
shl
repz
and
adc
fiaddl
ljmp
ror
int
repz
cmp
frstpm(287
aad
call
sti
in
mov
xor
lret
ror
out
shr
cli
xor
aad
loopne
stc
jecxz
jecxz
lret
sti
loop
xchg
ljmp
xor
xor
iret
shl
in
repnz
idiv
mul
fmul
and
xchg
clc
rcr
sti
int
into
cmc
ds
cmp
fcmovnb
ljmp
xchg
shl
iret
les
aaa
rol
cli
loop
clc
icebp
repz
jmp
pop
stc
iret
jmp
out
int
loopne
ss
hlt
cmp
cmp
aas
test
repz
incl
ljmp
aad
loope
ljmp
ss
into
sar
neg
out
in
loope
std
lock
in
test
in
enter
clc
int3
fxtract
lock
in
incb
in
sti
out
icebp
jmp
stc
lock
iret
cmp
loop
inc
call
add
add
out
add
add
rcl
aad
aad
push
push
scas
sub
add
add
cmpl
fstp
fsub
mul
cli
jecxz
cmp
in
xor
xor
out
out
shr
shr
lret
repz
stc
std
fincstp
jmp
out
in
sar
clc
xor
cmp
stc
shll
int3
ret
mul
shr
iret
cli
jecxz
call
jmp
aaa
sti
cli
int3
int3
icebp
rol
sar
loope
hlt
call
repnz
sar
xor
xor
imul
in
int
std
repz
shl
mov
jecxz
and
mov
jmp
repnz
cmp
ror
aam
into
cmpl
fyl2xp1
test
fisttpll
xchg
in
xchg
cmc
les
shl
fdivp
xor
aas
cmp
cld
cmp
aad
aam
fadds
sub
jecxz
adc
jmp
xor
jmp
sbb
ljmp
mov
xor
shr
fcmovbe
rcr
int
int
ret
jecxz
fucomp
fiadds
loope
out
cs
out
lock
cmp
out
ret
cmp
ds
ljmp
xchg
mov
vphaddubw
shl
cmp
cmc
fcomip
rcr
ret
stc
leave
leave
rolb
mov
lret
ss
fdivr
not
iret
ret
fcom
xchg
leave
enter
out
jmp
repnz
out
aad
xor
xor
fmul
xlat
sub
stc
fldl
stc
jecxz
fxam
sub
call
xlat
in
call
ror
lock
cli
fdivrp
loopne
in
mov
fsubrp
cld
call
xor
shl
fsubr
int3
clc
ds
cmp
jmp
lock
loope
fsubr
lret
xchg
std
fsubr
in
sub
in
aam
iret
cmp
fcmovnu
shl
repnz
ljmp
inc
in
out
ror
aad
jmp
xor
loopne
les
xchg
std
loopne
in
in
fmul
lock
out
xchg
repnz
repnz
aad
cmp
ror
stc
ret
shl
loope
aas
mov
mov
xchg
fdivrp
loopne
cs
into
cmp
cmp
roll
cli
xor
lret
jecxz
fdivp
sub
lock
std
out
clc
clc
loop
fdivr
sub
fmul
call
test
xor
icebp
ret
enter
lret
jmp
loop
cmpb
vpaddd
out
mov
cli
loope
lret
xor
xlat
ret
in
in
aaa
cld
aad
shl
out
fcmovb
out
repz
out
test
out
sub
fldl2e
mul
cld
icebp
xor
test
fucom
repz
int3
lock
stc
mov
mov
fld1
lret
in
repnz
ret
in
test
mov
or
icebp
leave
lret
ljmp
in
fldl
sbb
jecxz
shl
into
mul
aam
xor
cmp
in
cmp
aam
neg
test
mov
mov
loop
repz
loope
xlat
repz
cmp
leave
sbb
cli
inc
repz
out
call
in
out
fildl
jmp
out
fucompp
f2xm1
rcr
fcomi
fadds
out
sub
enter
in
aam
lds
jecxz
lret
cmp
aad
bnd
stc
in
std
aam
jecxz
mov
test
xchg
xchg
in
cmc
loop
call
fsubr
int3
ffreep
fsub
loop
movb
fildl
mul
ss
icebp
shl
lock
icebp
repz
xlat
leave
fisttpll
xchg
cmp
xor
fdivrl
int3
cli
int
addl
xchg
out
out
mov
repz
cmp
sti
out
jmp
in
aam
fstp
and
inc
enter
jecxz
loope
incb
repnz
xlat
out
roll
fadd
cld
mov
orl
xor
in
call
fdivp
addb
lret
addb
mov
aaa
shl
fxch
out
repz
ret
shl
loopne
cmc
loope
leave
fcmove
repnz
test
repnz
clc
xor
in
iret
in
jmp
in
std
stc
xlat
leave
call
jmp
xchg
xchg
shl
xor
lret
jmp
int3
jecxz
in
testl
fdiv
xchg
sub
in
leave
ss
xbegin
repz
testb
in
test
loop
cld
into
ljmp
add
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
lds
jle
add
cmp
divl
das
out
filds
rcr
cmp
leave
xlat
iret
cli
int3
iret
xchg
ss
std
aaa
sti
aas
fidivrs
hlt
out
stc
stc
cld
jecxz
in
jmp
out
lret
ljmp
inc
add
lret
jecxz
fmulp
in
filds
loope
rol
lret
in
fcmovnbe
adc
aad
enter
std
lret
loop
roll
loopne
shl
in
cmp
std
sti
fildl
mov
fcmovnu
into
jmp
iret
vpsrad
loop
leave
cmp
fsub
aam
int
cmp
in
flds
aam
int3
loop
into
iret
std
int3
aad
fxch
lret
out
in
loope
aam
clc
test
out
lret
fadd
fisttpl
in
jecxz
icebp
lock
iret
sti
leave
rcr
in
mov
cmp
jmp
inc
out
jecxz
loop
leave
loope
xor
jmp
cmp
shl
test
sti
addb
decl
in
int3
in
ret
aaa
jmp
sbb
xchg
xchg
call
lret
out
loopne
test
repz
not
call
cmc
out
sarb
shl
std
std
div
sub
call
xor
in
int
idivb
rcl
rcr
aad
fcmovnu
orl
call
xor
cld
xor
leave
rolb
fcmovnu
aad
cmc
lds
std
jmp
shr
leave
int3
jmp
clc
fiaddl
out
std
popl
hlt
hlt
int3
xlat
mov
stc
cld
enter
neg
neg
rol
incl
neg
fcmove
int3
mov
hlt
xlat
ss
out
fcmovnbe
into
xor
faddl
lds
ret
repz
repz
repnz
xor
cmp
in
sbb
ret
in
into
test
repnz
stc
lret
sarb
xlat
loopne
sti
shl
cli
cmp
testb
sti
call
cmc
xor
in
icebp
jmp
loopne
test
loope
test
sbb
sti
testb
rolb
aaa
call
hlt
cmp
ret
out
loopne
leave
fmul
mov
fmulp
int3
xor
imul
lret
cmp
cmp
shl
ret
xlat
testl
lret
aad
shr
dec
repnz
int
jecxz
ret
repz
testl
cmc
xor
icebp
out
xor
fistpll
out
shr
add
fdivp
loopne
shl
ljmp
lret
shl
enter
fdivp
hlt
flds
call
xchg
int3
call
xlat
repnz
icebp
shl
std
clc
sar
aas
in
jecxz
aam
aad
xor
int3
repnz
into
aam
test
xlat
and
in
cmp
in
out
cld
cmc
iret
int3
ss
aam
aam
xchg
ret
fsubp
xlat
xchg
test
rcl
repz
enter
into
in
cmp
cld
fadd
jmp
ret
out
stc
xchg
out
aas
xlat
ss
xor
fcompp
cmc
cmp
sar
fidivrs
call
loop
out
mov
xchg
das
xlat
shl
shl
jmp
loop
test
fadd
fisttpll
cli
jmp
mov
sub
cli
out
jmp
dec
jmp
fcmovb
shl
out
lea
test
iret
xchg
xor
in
xor
cmp
fucomip
lret
roll
ret
mov
jmp
loope
in
enter
ljmp
imul
jmp
into
iret
int3
imul
cld
icebp
flds
test
std
iret
jmp
into
xor
cmp
in
out
test
cli
out
mov
mov
hlt
sub
jecxz
hlt
in
cmc
cmp
jmp
ret
fcmovnu
adc
loop
xlat
jmp
iret
cmc
call
cmp
out
lock
call
hlt
test
repz
roll
ljmp
ljmp
xor
not
int3
jmp
fstp
mov
out
enter
fsubp
jmp
in
lock
rcr
aam
ror
fidivrl
jecxz,pt
mov
icebp
mov
mov
mov
aaa
jmp
xor
aaa
xor
repnz
cmc
out
jecxz
jmp
cmc
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
vmread
xor
add
add
mov
stc
mov
out
nop
xchg
lock
call
cmp
fdiv
loope
roll
out
jmp
aaa
shl
xlat
jmp
int
repnz
sbb
enter
loopne
rclb
xor
in
aaa
ret
hlt
fsubrp
lock
fcmovbe
add
mov
enter
cld
loope
jmp
shl
das
jmp
cld
jmp
loopne
sarl
fmulp
jecxz
jmp
mov
ljmp
aaa
das
stc
fdivp
into
xor
cmp
cli
sti
mov
fcmove
xlat
sub
int3
mov
loopne
shl
ror
vpsubb
ljmp
out
ret
neg
out
int
rcr
lret
xchg
rcl
jecxz
cmp
imul
rolb
repnz
fisttpl
test
lock
in
xor
ljmp
in
int3
shl
incl
call
icebp
rolb
ljmp
shl
shl
repnz
ljmp
in
mov
in
mov
xlat
lret
jecxz
in
fmul
out
hlt
into
shr
aaa
loopne
std
mov
sti
test
fstp
iret
test
out
aad
std
xlat
int
cmp
aad
test
in
jmp
cli
test
nop
xor
aaa
out
cmp
lret
cmp
aad
in
in
stc
test
mov
into
fxch
out
incb
int3
sti
in
fst
or
fnstsw
repnz
in
mov
int
std
out
xchg
mov
aaa
repnz
hlt
in
call
xlat
fstp
not
test
sar
cli
mov
dec
in
or
shlb
cmp
call
push
cmp
cld
mul
enter
fsub
jmp
iret
out
xchg
xchg
into
fsubp
leave
ljmp
ljmp
repnz
ret
cld
xchg
filds
xor
cld
rcr
xorl
into
icebp
shr
test
in
nop
ljmp
test
sub
iret
icebp
out
aam
shl
cmp
and
test
xchg
loopne
jmp
loop
ret
fsubrs
lds
xor
aaa
loop
int
idiv
mov
mov
leave
lock
fsubr
int
fsubr
ror
fdivrl
int
aad
xlat
clc
in
fcmovu
fcom
mov
rcr
iret
fcomip
lret
enter
in
ljmp
aas
sti
mov
jecxz
addb
out
std
call
rcr
stc
fxch
rcr
in
xchg
in
ljmp
test
jmp
xchg
repz
cs
xor
in
cmc
into
sar
incb
test
ljmp
out
test
sub
cmp
fcmove
in
in
lds
int
xchg
fadd
nop
adc
repnz
cmc
cs
out
repz
cld
iret
loop
add
fld
loop
icebp
adc
cld
xchg
out
xor
aam
ds
neg
ds
rcr
fdiv
mov
in
jecxz
test
call
rcl
stc
fdivp
std
iret
adc
into
aad
cmp
imul
mov
lret
or
idivl
cmp
rcr
fnsetpm(287
roll
xchg
in
cmc
lret
ss
idivl
into
aad
fcmovb
sti
repnz
xchg
leave
in
fmulp
iret
in
adcl
out
fcmovnu
fdivl
clc
cli
loop
cmp
ftst
sub
out
lret
rorb
aaa
in
lret
hlt
loopne
cmp
sarb
stc
and
loope
std
out
lock
jmp
out
hlt
call
cmp
into
test
sti
aad
xlat
int3
sti
test
fmuls
sub
out
fdivl
shl
sarb
iret
imul
cmp
clc
xchg
addb
fadd
in
out
fldz
rolb
xor
sti
in
fcmovu
fsubr
jecxz
loope
cs
fcmovbe
iret
out
fcmovnbe
icebp
xor
roll
loope
mov
jmp
stc
sub
shl
iret
cmc
xor
fxch
fsubrp
cmp
cmp
cmp
lock
cld
test
test
mov
out
out
xor
jecxz
cmp
repnz
out
repz
std
fnstcw
in
jmp
test
mov
jmp
add
xlat
out
int
hlt
in
std
call
rolb
mov
lds
orl
in
aam
ljmp
out
add
add
lret
into
fst
fstp
bound
mov
push
add
cli
mov
lret
fisttps
aam
ljmp
ror
cmp
ds
cmp
mul
out
fcmovne
nop
lret
orb
icebp
clc
ret
lret
ljmp
mov
orl
jecxz
out
xchg
adc
iret
xlat
out
cmp
sti
cmp
cmp
test
in
decb
shl
out
loop
clc
hlt
xor
xor
fnstenv
fidivrs
fsubr
ftst
hlt
clc
ret
shl
sti
loope
call
in
cli
repnz
loopne
fdiv
xor
loope
ret
dec
jmp
cld
mov
xchg
hlt
aad
icebp
cmc
repz
cmp
loopne
lock
test
icebp
shr
adc
ljmp
sub
stc
repz
loopne
sbb
ffreep
aas
and
mov
mov
iret
cli
jmp
loope
jmp
test
div
clc
cld
aam
aad
xchg
cld
clc
mov
in
test
int3
hlt
in
xor
in
ds
cmp
call
lret
cld
mov
icebp
aad
jecxz
ret
repz
int3
cmp
in
hlt
mov
std
sbb
mov
in
fists
int3
fcmovne
repz
fadd
test
in
in
mov
in
enter
xchg
leave
jmp
neg
cmp
ror
cli
lds
add
fneni(8087
ror
mov
test
fsub
ret
in
cld
pushl
int
loope
out
loop
jmp
fsubr
out
adc
sbb
loop
lret
repz
fcompp
in
int3
aas
shl
addb
int3
mov
out
ret
sti
out
not
loope
ret
shl
loop
out
mov
cli
int
add
loop
jmp
repz
dec
fdivrp
cli
test
test
iret
icebp
icebp
fimuls
cmp
aad
cmp
ss
cli
iret
in
sar
aam
jecxz
leave
mov
out
mov
fdiv
sti
hlt
icebp
lret
lret
cmp
repz
std
jmp
int3
loopne
mov
int3
xor
leave
fdivl
divl
fiaddl
loopne
sbb
out
out
call
ret
xor
aam
rcr
std
fadd
rol
aam
lret
lret
flds
mov
in
lret
aad
aad
ljmp
mul
test
xlat
loopne
out
loope
mov
shll
xlat
lock
lock
xchg
jecxz
aad
loopne
mov
enter
hlt
shr
das
out
fcmovnb
not
xor
cmp
xor
in
rol
out
mov
sbb
shr
loopne
aad
xor
ret
in
idiv
stc
rcl
shr
ret
loop
ffree
jecxz
out
cld
orl
repz
fmul
hlt
fiadds
loopne
cld
inc
clc
xchg
flds
int
xchg
fadd
in
aam
cmp
cli
in
icebp
test
ret
call
mov
jecxz
jmp
sbb
int3
loope
out
enter
shr
cmp
jmp
cmc
faddl
cli
ljmp
xchg
rcl
xor
icebp
iret
out
fdivr
lret
fsubr
shl
rcr
out
rolb
mov
loope
and
divb
std
rol
lock
std
in
call
mov
fldlg2
aad
int
lea
shr
stc
cmp
repnz
lock
std
icebp
sar
out
ret
les
fnstsw
xchg
xchg
xor
std
cmp
fucomip
xor
loope
fnstcw
stc
enter
xlat
sti
sub
mov
xor
rcl
repz
icebp
out
xlat
fmul
loope
aam
ret
div
adc
loope
decl
xchg
mov
in
repnz
xor
cli
in
sti
jmp
aad
ret
hlt
in
int
stc
mov
mov
repnz
repz
in
ror
out
sti
ljmp
sarl
out
incl
loope
shr
shl
xor
sub
enter
lret
cmp
cmp
aam
fcmovbe
in
mov
stc
dec
xchg
and
out
clc
lret
idivl
fmulp
hlt
les
call
testl
ror
repnz
int3
out
xlat
aam
loop
loopne
in
sbb
fucomi
shl
cmc
jmp
enter
cmp
cmc
lret
cli
aam
mov
fsubrp
ret
in
stc
out
xchg
roll
shrb
jmp
int
iret
rcl
aad
inc
xor
loope
xchg
cwtl
mov
add
in
rcr
int
lock
repz
clc
rcl
hlt
cmp
fmull
ror
jmp
jecxz
in
repz
sti
sbb
rorl
cmp
xor
aad
hlt
repnz
repnz
jmp
jmp
in
ficoms
int
xor
loopne
shl
into
loop
fdivp
hlt
ljmp
fldl
aam
in
repnz
xor
cmpl
loopne
ffreep
test
test
mov
rclb
rol
xor
cmp
shr
cmc
cli
in
out
shl
std
test
mov
out
flds
jmp
loope
ret
rolb
in
incl
std
lret
call
adc
ss
idiv
rcr
jmp
ljmp
xchg
decb
ror
hlt
ljmp
xor
into
repnz
aas
test
sar
test
enter
lret
lock
cli
mov
loop
shr
in
in
out
out
in
sarb
loopne
bnd
test
loope
icebp
icebp
in
loopne
into
sub
cmp
cmp
cmp
fcomi
les
xor
xchg
std
mov
rol
jecxz
cmp
test
out
cmp
ror
hlt
mov
loop
aam
fcmovnu
mov
mov
fdiv
cli
shr
int
ss
lock
stc
testl
fsubrp
out
lret
in
out
enter
jmp
cmp
fucompp
shl
in
repnz
loope
aad
fucomp
cli
mov
sti
xchg
rorb
repz
fnstenv
in
stc
repz
stc
int
addb
lret
test
xchg
hlt
loopne
stc
out
fdivs
aaa
shl
fmul
cmp
hlt
fldl
std
stc
cmp
out
jmp
ljmp
repz
repz
fcmovnu
rcl
test
lret
mov
jmp
leave
in
mov
xor
ret
hlt
cli
lock
fsubrp
loope
fld
aad
std
in
test
sti
icebp
mov
xor
rcr
in
fst
fnstcw
out
or
test
not
sti
call
xchg
in
rcl
hlt
cmp
fmulp
cmp
mul
clc
in
out
ret
in
in
repnz
int3
xchg
aad
ret
xabort
fcmovbe
rolb
cld
out
mul
out
dec
in
lock
std
jecxz
leave
rcr
fnstsw
repz
cmp
cmc
stc
testb
repnz
rorb
cmp
in
rcl
in
ljmp
jecxz
mov
test
jmp
lret
in
cmp
fdivrl
shl
aam
xor
mov
icebp
jmp
xor
into
xor
das
icebp
cmp
in
fcomi
xchg
in
test
in
in
xchg
fucomip
out
sub
leave
loope
loope
loopne
sar
xchg
xchg
out
xchg
shlb
call
enter
cmpb
enter
jmp
mov
out
fiadds
xlat
jecxz
div
faddl
sar
stc
ret
mov
nop
call
fsubp
out
xlat
hlt
in
sti
ds
cmp
fst
cli
xlat
hlt
or
fadds
mov
rorl
out
fld
leave
jmp
icebp
fucomip
lds
loop
filds
aam
fdiv
in
test
lret
aas
xor
repnz
mov
loope
icebp
ljmp
lret
rcr
out
not
aad
std
rcr
out
xlat
in
cmp
loop
mov
call
xor
fdiv
sti
stc
fdecstp
cmp
shl
jmp
ret
int3
in
dec
into
xlat
leave
xor
shr
jmp
jecxz
loope
out
jmp
jmp
icebp
rcr
jmp
shlb
into
icebp
clc
in
lock
jmp
imul
loope
out
shl
out
int3
out
icebp
lock
icebp
test
jmp
aaa
cmp
cmpl
shr
orl
ljmp
lret
rol
cmc
int3
fsubr
fdiv
aad
loopne
fiaddl
jmp
out
out
cmc
jmp
xor
fst
ret
rcr
and
aad
out
xchg
out
in
mov
enter
rcl
cld
iret
aam
repz
fdivr
test
mov
mov
int
call
incl
jmp
mov
fcmovnu
or
sub
movsb
dec
mov
sbb
jle
add
sti
mov
mov
into
ret
in
call
cld
not
loope
icebp
cmp
ljmp
iret
in
ljmp
out
neg
fmulp
fcmovu
hlt
iret
out
lock
ljmp
sbb
xchg
fisttpll
shr
ds
call
iret
fcomi
int
loop
call
int
in
loop
in
aad
das
iret
leave
int
in
fdiv
std
call
cld
into
aam
loop
test
call
xchg
out
mov
lret
cmp
xabort
out
fdivrs
in
repnz
aaa
stc
aam
cmp
xchg
and
jmp
les
ljmp
int
shl
icebp
repz
sti
jecxz
fldl
fstp
out
ret
int3
ljmp
aad
repnz
out
xlat
repz
mov
iret
lret
imull
ss
clc
cmp
cmp
repz
push
out
testb
jmp
in
mov
cmp
in
call
sar
fscale
cmp
cld
in
jecxz
fsubrp
xchg
int
shl
sub
fmulp
lock
cmc
repz
mov
xchg
enter
repz
out
shll
call
fdivr
in
ret
fcmovnu
adc
out
std
shl
loopne
mov
aam
aaa
in
int
cmp
aaa
shl
sarl
test
test
hlt
les
decb
xchg
out
das
call
fidivrl
incb
fcmovnb
frndint
mov
in
lock
icebp
in
xor
icebp
cmp
icebp
call
aam
sti
lock
enter
jmp
iret
in
mov
in
in
call
cmpb
loope
leave
fsubr
call
clc
loopne
in
test
shl
cmp
ss
jecxz
hlt
aad
fsubp
jmp
shl
xchg
shr
hlt
sub
xor
repnz
cmp
or
cmc
addb
mov
roll
iret
repz
cmp
aaa
cmp
fmull
idiv
idiv
jmp
jmp
in
ret
out
loopne
clc
shl
hlt
sbb
ret
xchg
loop
fldl
call
mov
in
in
clc
ss
out
test
rol
ljmp
sbb
iret
iret
out
xor
hlt
into
leave
hlt
cmp
int3
addl
faddl
in
xchg
ss
xor
repnz
fstp
cmc
shll
lock
loop
stc
ret
sti
stc
out
xchg
jmp
rol
in
out
fcmovb
int3
cld
shr
stc
xlat
stc
cmpl
mov
std
in
rol
out
enter
ljmp
rorl
fildl
sti
adc
not
aaa
loop
leave
call
aas
les
std
idiv
mov
int3
jecxz
int
xchg
int3
rol
xor
cmp
iret
leave
ds
cmp
neg
fimuls
in
mov
mov
loope
loop
clc
shr
clc
repnz
sti
ret
repz
clc
enter
mov
ret
loope
repz
enter
call
dec
lock
cld
mov
mov
fsqrt
out
cli
jecxz
nop
int3
in
xchg
call
cmp
lret
icebp
out
sti
jmp
fcmove
loopne
xchg
fstp
xlat
mov
out
fdivr
lret
loope
rorl
int3
in
int
int
lock
repz
out
fldl
cld
leave
popl
xor
cmp
cmp
loopne
aad
iret
addl
lock
lret
ret
cmc
cmp
cmp
loope
cli
shl
incb
mov
dec
jecxz
xchg
lock
loop
hlt
out
ds
ds
fidivrs
cmc
aam
mov
fadds
leave
fucom
xchg
into
out
ror
cmp
int
aad
cmp
shl
sti
test
enter
enter
int
test
cs
repz
and
fld
jmp
loopne
xchg
ljmp
cld
cmp
std
stc
cmp
std
hlt
rcr
enter
leave
jecxz
loopne
enter
aaa
cmp
std
fcmovnbe
xor
hlt
ffreep
cmp
ret
std
mov
cli
orb
repz
xor
shll
lret
iret
loopne
fcmovu
out
sti
inc
std
stc
xlat
neg
iret
mov
call
int
repz
shr
jmp
int3
jmp
cld
ret
or
andb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
jp
gs
and
jle
add
not
fxch
jmp
out
mov
mov
iret
shl
xor
sti
stc
fcomp
enter
int3
loopne
aas
std
clc
std
shr
leave
add
mov
in
leave
xor
fcmovu
aas
stc
sti
faddl
sti
fucomip
ljmp
jecxz
cmc
imul
hlt
std
cmp
aam
hlt
cld
ret
cmp
test
loop
mov
in
out
xchg
xchg
jmp
fcmovnb
cli
iret
cmp
icebp
loope
fcmovnu
fadd
fimuls
into
leave
fcomip
cmc
aad
jecxz
in
fdivrs
ss
into
aad
hlt
stc
in
ret
roll
fimuls
xchg
movl
aaa
sbb
out
clc
cmc
mov
std
faddl
lock
out
ljmp
pushl
cmp
std
cmp
xlat
lret
int3
mov
in
icebp
in
pushl
xor
int3
int
cmp
test
cmc
mov
jmp
test
mov
ret
sti
in
shr
cmp
into
test
sbb
sbb
repnz
lret
div
fcmovbe
ret
xor
in
xor
not
out
rcl
enter
nop
fucom
repnz
lret
fidivl
idiv
out
ret
xlat
mov
faddl
out
icebp
out
cmc
cmp
xor
loop
sbb
cmp
jmp
call
out
stc
vmovq
cmc
aaa
xor
sti
sar
and
repnz
ret
in
roll
aam
clc
jmp
clc
cmp
fadds
leave
lret
loopne
popl
iret
hlt
cmc
ret
aaa
clc
lock
stc
shl
fld
into
cmp
aam
in
sti
mov
in
jmp
adcl
int3
cmp
xor
int
jecxz
lock
jecxz
fisttpl
lock
mov
iret
out
into
lret
out
in
hlt
xor
sti
test
fcmovbe
aas
cli
jecxz
test
in
and
ret
cmp
sti
rcl
out
std
cmp
out
ret
repz
hlt
imul
test
jmp
sub
xor
clc
iret
jmp
xor
aam
ret
div
in
aas
xlat
cmc
loope
les
out
fst
mov
int3
neg
xor
xchg
fadds
iret
inc
xchg
loop
cli
into
enter
stc
rcl
fstpt
xchg
int3
idiv
cmp
out
std
int3
rol
loop
ss
cmp
repnz
loop
clc
jmp
lret
add
xchg
cmp
cmp
sar
ds
iret
loope
fcmovnu
in
in
enter
sti
mov
loope
rcl
divb
shlb
call
icebp
in
out
xchg
not
rolb
out
fcmovne
fmull
icebp
ret
lock
idiv
iret
sti
std
aas
add
cld
fisttpl
out
icebp
out
rcll
fcmove
fdivr
stc
ljmp
leave
cld
xchg
xchg
jmp
cld
cmc
iret
into
stc
shl
repz
in
hlt
jmp
cmc
rcl
test
std
test
lock
aam
in
loop
out
xor
fstpt
iret
fcmovu
repz
movl
enter
std
in
int3
ret
stc
hlt
call
fucomip
hlt
int3
ret
fiaddl
filds
test
int
in
loope
iret
cmp
xor
stc
shr
cmpb
neg
cmp
lret
out
addl
shl
repz
repz
fsubp
cld
stc
cmp
cld
out
loopne
xchg
into
jecxz
repz
xor
call
cmp
test
not
ret
hlt
out
loopne
xchg
in
xor
call
ljmp
orb
stc
xchg
jmp
ss
mul
cmp
push
jmp
sub
cmp
test
call
cld
icebp
repz
out
jmp
out
cli
cli
xlat
clc
mov
mov
cmp
decl
loope
lock
out
aad
cmp
int
out
in
idivb
rorl
xchg
test
hlt
idiv
hlt
out
rcl
fdivrs
out
out
xchg
leave
jecxz
call
jmp
int3
sbb
xlat
jecxz
iret
addl
icebp
rorl
ret
xor
and
pushf
clc
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
fdivr
leave
hlt
into
int
rcl
fnclex
rcl
test
xchg
loopne
sub
fcmovu
clc
in
in
into
lret
cmc
xchg
aad
stc
xlat
in
into
cld
test
call
mov
call
lock
lds
ds
xchg
out
in
test
icebp
xchg
ret
int
out
int3
int3
hlt
std
cmc
aam
cld
clc
fdivrp
ret
fmulp
in
repnz
aam
std
fldlg2
lock
shl
in
in
in
repz
jmp
mov
imul
cli
shlb
sti
lock
repz
fadd
fisttpll
repz
clc
cmp
cmc
fbstp
int3
faddp
fdivr
sub
sub
cld
sti
in
out
cmc
jmp
ror
out
leave
fucomp
div
fdivr
fcom
cmp
addl
std
enter
int
jecxz
into
cmp
cld
aam
ljmp
roll
fimull
iret
int3
xchg
ret
repnz
int
xor
cmc
xlat
jecxz
call
leave
in
mov
lock
xchg
rcr
repnz
icebp
shl
xor
fcomip
rolb
sti
out
cld
shl
mov
mov
xor
out
int3
jmp
and
test
test
stc
int
icebp
adc
fucomi
int
enter
jmp
ret
loop
std
call
mov
loop
hlt
xchg
stc
in
xor
int3
cmpl
cmc
orb
xlat
xchg
in
repnz
aaa
sub
aam
iret
repz
cmp
in
ror
sti
cmc
leave
aam
loop
addl
call
idivl
cmp
into
in
rcl
mov
ret
loop
sti
loop
in
xchg
in
cs
rcl
sti
hlt
cmp
iret
cmp
int
sti
fdiv
std
fcmovb
out
fadds
cld
rcl
rol
sar
cs
cmp
in
cmc
cmpl
aad
jmp
rolb
cli
in
leave
hlt
xchg
xchg
aad
xor
cs
aaa
cld
int
neg
out
ret
out
cli
les
aam
loopne
jmp
jmp
int3
int
fcmovu
testb
hlt
cli
in
fsub
jecxz
std
incl
les
out
jmp
test
shl
cli
leave
shr
mov
in
ljmp
repnz
sub
clc
xor
cmp
addl
fcmovbe
ret
clc
mov
repnz
xlat
lret
aam
cmp
out
cld
rol
decl
ret
out
shl
ljmp
in
in
fucomp
cmc
shr
in
loope
mov
stc
std
mov
mov
xchg
out
mul
in
icebp
cli
leave
shl
lock
shl
rol
mov
xchg
mov
iret
int3
loope
in
jecxz
aad
fcmovnu
ror
idiv
int
loopne
aas
aam
ffree
fsub
adcb
lret
not
lds
loopne
loop
cmp
repnz
not
ret
xlat
dec
out
lret
rol
vphadduwd
in
call
hlt
shl
fmul
lock
ror
shr
in
mov
test
xlat
fxch
out
ds
clc
flds
cli
out
rorb
mov
xor
cmpb
add
loop
out
ljmp
filds
stc
shrl
div
repz
xor
in
cmp
loopne
in
rorb
xor
lret
in
iret
cmp
cmp
xlat
in
shl
out
filds
ret
in
vprotw
jmp
in
in
lret
enter
xor
cmp
incb
in
lret
sub
rorb
in
xor
fcmovnbe
call
stc
out
loop
rcl
cld
lock
lret
testb
lock
hlt
call
shl
idivl
out
int
fcomip
out
sar
cmp
aad
mov
xchg
in
xchg
loope
repnz
iret
out
repz
cmp
les
in
xchg
xchg
xchg
in
into
icebp
idiv
int3
enter
aad
cmc
fidivrs
mov
repnz
ljmp
leave
cmc
xchg
in
in
not
clc
fidivrs
lock
lock
sar
loop
in
fisttps
shl
mov
xor
sti
cld
jmp
xor
addl
clc
jmp
sti
ret
test
test
inc
hlt
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
mov
sub
add
add
cld
cmc
xchg
rol
shl
leave
stc
cli
rcl
jmp
stc
shl
sti
shl
fcmovne
out
cld
lret
adc
ret
shr
ljmp
cmp
cmp
cmp
loop
cmp
sbb
in
cmc
sub
xor
in
in
aad
sar
cmp
fdivp
xchg
xlat
push
fstp
fcomp
into
xchg
fsub
sarb
cs
fcomp
xlat
icebp
ss
cld
cmp
ret
in
adc
in
sub
roll
cmp
cmc
lret
repnz
xlat
sarb
iret
cmp
test
xchg
hlt
incb
xor
into
fcmovbe
cmp
aas
fdivr
sti
lret
loopne
or
xchg
shl
sar
rol
xlat
aaa
repnz
cmc
cmp
sarl
rolb
stc
test
ljmp
aam
fcmovne
cmp
repz
ljmp
jecxz
addl
nop
jmp
cld
out
cmc
xor
cmp
std
fdivp
clc
ret
fucomi
sub
sbb
loopne
jmp
sar
lock
loope
hlt
cmc
aas
hlt
loopne
out
in
cmc
jecxz
das
ss
enter
lock
clc
repnz
cmp
fsubp
loop
or
loope
lret
int
loop
repnz
aad
shlb
shlb
std
fneni(8087
lret
fcmovbe
cmp
cli
out
call
xlat
enter
into
loope
in
lret
cmp
lds
rolb
aad
hlt
call
stc
jecxz
rclb
xor
xor
xlat
std
loope
in
add
icebp
std
addb
nop
fildl
rol
lret
in
fprem
cmp
loop
rolb
sti
call
out
jmp
or
xor
icebp
cs
in
loope
icebp
adc
test
adc
mov
leave
icebp
jecxz
out
mov
stc
in
xor
ljmp
enter
fldl
jecxz
in
shr
jmp
loopne
repz
loope
mov
fmuls
aad
xor
xor
cmp
clc
rolb
test
ret
in
out
testl
xchg
hlt
aad
aad
stc
jecxz
in
stc
mov
faddp
mov
rorl
cmp
in
fcmovnu
not
lret
hlt
into
fucomp
out
cmp
cmc
ret
jecxz
xchg
fsubr
out
cli
sub
inc
rol
iret
clc
sar
aaa
cmp
incb
cld
rcl
cld
incl
int
ljmp
sti
rcr
cli
ljmp
fucom
call
mov
repnz
fucomip
xor
not
jmp
xor
fcmovnu
repz
jmp
int
loop
int3
std
loopne
out
ljmp
cld
aaa
cli
stc
out
out
repz
addl
addl
in
in
cld
sti
inc
aas
aas
std
idiv
and
test
nop
in
mov
in
mul
in
xor
cmp
fucomip
loop
in
aad
call
lret
jmp
in
fucomip
mov
in
cmp
in
xchg
movl
fdivr
out
cmc
xor
cmp
into
shr
and
notrack
rol
call
out
iret
vpsllq
xor
xor
aam
fdiv
fnstsw
in
fdivr
add
decl
in
icebp
loope
aad
out
ss
fcmovnb
enter
sar
jmp
rorl
lds
in
aaa
into
stc
sti
repz
sbb
lret
test
lock
out
leave
fsubp
fucom
dec
icebp
loop
mov
leave
leave
xor
fdivrp
test
fcmove
shl
sbb
leave
mov
jecxz
ljmp
int3
rcl
hlt
xor
cmp
shr
filds
hlt
rcr
xlat
loop
test
into
xor
in
sar
in
fcomp
rcr
div
loopne
jmp
test
mov
xchg
loop
loop
ss
out
fcomp
aaa
cmp
loop
fdiv
ret
dec
in
xchg
mov
rcl
iret
cmc
cs
clc
ret
add
testl
out
cld
lret
icebp
das
in
cli
xor
cmp
lock
aas
xor
cld
leave
sti
cmp
test
jmp
aad
aad
cmp
rcr
lock
fsubrp
repz
fcmovnbe
ret
mov
mov
xor
jmp
into
int
xlat
into
jns
push
das
add
add
ret
rcr
faddp
movl
xor
out
fnstenv
cmp
loopne
cmp
int
call
filds
out
in
test
ret
cmc
sti
hlt
lret
ret
sub
in
std
loop
add
mov
out
lret
loop
rcr
out
iret
loopne
repnz
repnz
sbb
out
incl
mov
lret
das
xor
cmp
jmp
not
aad
aas
mul
xchg
jmp
cli
lret
clc
mov
rol
xor
cmp
fsub
in
fmul
and
xlat
lret
loop
out
mov
jecxz
test
in
xor
neg
loopne
iret
stc
loopne
clc
loop
fldl
xchg
loope
call
shl
loop
icebp
repz
fsqrt
loopne
test
fdivrp
test
fsub
fimuls
jmp
fucom
ss
out
ror
lret
std
out
ss
cli
repnz
jecxz
orl
fcmovu
repnz
leave
ret
shlb
in
cmc
roll
ror
xchg
and
std
repnz
in
fcmove
int
xlat
shr
loop
sti
icebp
stc
ret
jmp
xlat
stc
mov
xchg
fisubrs
lret
cmp
div
xlat
mov
iret
hlt
cmc
iret
shr
in
out
cmp
rcr
std
int
fcmovnu
clc
aad
orl
out
cmc
enter
repz
fdivr
cmp
aas
fcmove
jecxz
stc
jecxz
loope
ret
jecxz
fadd
decl
jmp
in
les
shl
fldl2t
int3
cmp
loop
aaa
jmp
in
ftst
std
out
sti
xchg
xchg
out
stc
sti
xlat
stc
repz
div
repz
aas
vpmulhuw
jmp
aad
rcr
leave
repnz
cli
out
xor
stc
aas
call
leave
fsub
out
fsubr
mov
loope
repnz
cld
aaa
cmp
loope
xchg
incl
lea
test
out
and
xchg
ret
mov
enter
std
int
jmp
out
fxch
shl
loope
rolb
in
jmp
and
sub
out
in
lret
repnz
fcom
addb
ljmp
int3
xchg
and
rcl
in
xlat
fcmovnu
into
jmp
ret
movb
loop
xchg
int
in
aaa
xor
out
shl
aas
into
rcr
in
faddl
jecxz
hlt
out
ror
out
out
adc
cmc
stc
jmp
xchg
or
mov
mov
iret
aam
in
repz
cmp
std
leave
jmp
cld
std
mov
call
call
xchg
hlt
in
enter
sarl
lret
test
shll
ds
testl
in
stc
ror
lret
out
enter
aas
cmp
rol
loope
jecxz
addl
out
fcmovnu
out
ret
xor
ror
stc
clc
xor
sti
test
out
addb
adc
mov
ljmp
shl
shl
loopne
aad
rcr
vpmaxsw
into
std
call
icebp
into
ljmp
cld
incb
and
jmp
call
lock
loop
sub
into
std
ror
ror
out
shl
rcr
repz
mov
leave
lret
enter
mov
aad
out
faddl
loope
neg
test
mov
into
out
iret
std
out
lock
leave
cmp
cmc
ljmp
testb
aad
jmp
loop
aam
repnz
lock
repnz
aaa
cmp
out
in
mov
call
out
in
out
int
iret
repnz
std
jecxz
cmp
fdivrp
into
in
xchg
sti
fsub
fcomip
ljmp
jmp
fsubr
xchg
xchg
jecxz
std
mov
out
fsub
sti
adcb
cld
out
sar
leave
cmp
fcos
cmp
in
mov
into
fldl2e
lock
hlt
mov
iret
jecxz
jmp
jmp
loop
flds
test
addl
mov
loop
das
sti
out
fsub
fucomip
idivl
int
into
in
test
stc
fcmovnb
enter
stc
jecxz
shl
icebp
out
out
cmp
ret
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
sar
fnstsw
icebp
stc
lds
mov
clc
mov
call
out
cmp
clc
cmp
out
loop
hlt
test
test
enter
call
enter
std
cmp
fcom
ljmp
fcmovbe
out
testb
dec
fsubrp
aaa
enter
jmp
leave
aam
cmp
shr
sar
mov
call
test
mov
icebp
jmp
iret
out
cmp
cmp
lret
lret
shl
roll
std
fdivrp
into
mov
into
ljmp
stc
fcom
icebp
ds
enter
xlat
aas
cld
loopne
stc
out
jmp
ss
mov
hlt
hlt
int3
out
out
xor
ret
loopne
stc
test
nop
jmp
mov
xor
iret
cmp
test
shr
not
or
into
fsubr
in
out
aam
xor
lds
cmp
in
neg
fsubp
call
test
sti
fucomp
test
lret
ljmp
xor
loope
rcl
flds
bnd
int
shl
jecxz
out
repz
cmp
xor
adc
lret
into
addl
cmp
fnsave
out
fnstsw
loopne
icebp
rcr
hlt
call
in
fld
loope
std
int3
lret
xchg
shrl
xlat
not
xor
aam
ror
ret
testb
std
cld
in
popl
out
lret
fcom
ds
int3
cmp
and
fcomp
call
mov
sti
hlt
xchg
lds
xor
xlat
incb
fdivrl
fchs
in
test
in
in
into
test
xor
aad
repnz
rol
jmp
test
xchg
leave
xchg
jmp
test
adcl
cmp
shr
shl
shl
fcom
cmp
orl
jmp
ss
aaa
cmp
loop
rcl
ffreep
clc
loopne
fcmovne
cld
out
xchg
xchg
rorb
out
cld
sbb
ds
iret
rcr
loope
fldl
in
roll
in
out
in
shl
aad
cmp
jmp
cld
in
repz
cmp
fcmovnu
mov
xchg
call
repnz
ror
in
fdivr
enter
enter
shl
mov
adcl
cld
jmp
in
cmp
std
and
shl
out
jmp
shr
loopne
not
aam
jmp
fdivp
jmp
lock
incl
lock
hlt
mov
out
rcl
fldcw
xor
fadd
idiv
icebp
or
loopne
loop
xlat
fcomip
in
mov
lret
out
ljmp
ds
push
mul
repz
leave
loopne,pt
leave
enter
in
mov
sub
shr
hlt
hlt
into
aad
loope
lds
out
into
fadds
test
lret
std
fdivp
inc
fdivs
iret
mov
leave
xchg
mov
int
in
loope
loope
loope
xor
fnop
int
in
rcl
aam
jecxz
cmp
div
xchg
out
in
int3
fmulp
rol
out
rol
rol
int
test
std
stc
mov
std
sar
ror
xchg
xchg
pop
idivb
int
fcmovne
cli
jmp
loop
fcmovnu
loopne
ret
cmp
mov
mov
nop
rol
rcl
cmp
shll
hlt
ret
in
sar
cmp
mov
int3
icebp
loop
repnz
fcom
iret
leave
out
call
sti
out
sti
aam
aad
jmp
out
loop
fcmove
cli
shl
test
xor
loope
sti
fcomi
sar
cmp
fdivrl
in
aas
sarb
test
in
inc
test
cmp
in
iret
in
hlt
cmp
stc
repnz
fdivr
out
ljmp
cld
loop
mov
jmp
lock
sti
xor
cmp
xlat
iret
std
out
lock
jmp
in
jmp
mov
xchg
xchg
shl
call
int
loopne
sar
cmp
in
in
int
out
int3
ror
loope
xchg
ss
xor
stc
fidivrl
repnz
cmp
div
lock
jmp
in
mov
lret
xchg
or
out
fstpt
aad
loop
fcmovnu
clc
fadds
into
int
in
xor
in
jmp
into
loope
cmc
ds
sub
into
fucomp
in
std
nop
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
cs
cmp
jle
add
and
xor
leave
xor
fyl2xp1
roll
rcr
ds
fst
xchg
and
xchg
xchg
mov
sarl
cmp
cmp
int
cld
neg
neg
cmc
int3
mov
in
icebp
rolb
aam
bnd
enter
cli
fistpll
lock
xchg
loop
shl
fcmovu
xchg
xchg
xlat
call
lock
cmp
fst
fadds
stc
out
cmp
lea
ret
int
fdivrs
les
clc
cmc
leave
decl
test
xchg
hlt
test
jmp
std
cmp
in
leave
shl
in
xchg
cli
ljmp
xchg
shl
ror
repz
aad
cmp
and
out
test
enter
loope
xchg
iret
test
out
in
enter
enter
repnz
in
not
xchg
mov
out
test
in
fcmovnu
xchg
jmp
xor
cmp
cmp
into
cmp
out
std
jecxz
ffree
fcmovnbe
in
in
loope
call
jecxz
xor
fsubr
cli
out
xor
lret
fisttpll
sti
imul
ljmp
nop
ret
vpinsrw
icebp
cmp
loop,pt
test
rol
shl
cli
test
jmp
orl
lock
cmp
ds
clc
loope
cmp
loop
std
mov
icebp
fucomip
xor
cmp
sarl
fdivp
inc
test
fcmovbe
out
lret
sti
loopne
xchg
out
in
shr
out
ss
icebp
aad
div
cmp
rol
sar
cmp
in
in
fcmove
test
aam
int3
fldpi
icebp
cmp
sarb
ds
rcl
stc
ror
lret
lret
fdivrp
in
cli
into
mov
das
aaa
cmp
cmp
neg
cmp
lret
aam
out
in
stc
shl
mov
lret
mov
fsts
cs
xor
int
int
cmp
cmp
aad
xlat
std
mov
ret
xchg
and
jecxz
in
xchg
jecxz
rcl
call
ds
test
shl
xchg
out
cld
iret
mov
repz
aam
dec
cld
jmp
icebp
in
into
aam
fiadds
leave
movl
lock
repz
xor
rol
sti
fdivp
std
repz
xchg
fmuls
in
leave
sub
call
fcomip
stc
addl
mov
iret
ljmp
aam
cmp
iret
aam
cmp
pushl
hlt
xchg
in
jecxz
nop
out
int
out
out
xor
xor
in
cmp
int3
not
std
into
ret
out
enter
jmp
int
mov
fcomip
ret
xor
in
shl
cmc
jecxz
rol
add
cmc
loope
loope
ror
out
sub
in
out
cld
in
repz
aam
idivl
sti
idiv
out
xlat
in
sti
jmp
lock
jmp
in
aad
repnz
repnz
xlat
out
fsubp
std
cli
loope
fisttpll
mov
shl
fcmove
cs
rcl
int
rcr
clc
ljmp
test
mov
cs
clc
fcmove
loop
iret
fmulp
and
ljmp
out
int
jmp
ret
in
in
int
fstpt
cmp
mul
fsubr
fcmove
jmp
cld
icebp
loop
jecxz
lock
jmp
jmp
neg
rol
fildl
mov
out
ffreep
fists
xor
fninit
sarb
call
and
into
ffreep
jecxz
std
out
in
in
mov
in
in
adc
cmp
hlt
cld
jmp
sarb
aad
leave
clc
into
loop
fistl
loope
lret
repz
lret
int
repnz
lock
aas
cmc
sbb
std
lret
mov
enter
sub
sti
loope
jmp
cmp
out
std
cmp
fsubr
leave
ljmp
stc
out
cmp
fsubr
in
addb
imul
fsub
jecxz
lea
xlat
repnz
ljmp
std
xor
repz
sti
test
in
mov
mov
repz
clc
lock
jmp
ror
in
cmc
clc
int
repnz
sub
repnz
ficoms
shrb
hlt
cmp
into
les
fildl
enter
int3
mov
xor
cld
cli
out
cmp
aad
fst
test
and
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
or
iret
sarb
add
add
cli
jmp
leave
loopne
nop
xchg
int
cmp
ljmp
ror
lret
lret
out
in
xchg
mov
aad
hlt
hlt
in
hlt
int3
int3
lock
shll
fcomp
testb
int3
loop
repz
bnd
div
lret
clc
stc
lock
cmc
out
fucompp
imul
jmp
les
loope,pn
lds
into
repnz
sarl
xlat
xor
shl
in
sbb
loopne
enter
loope
out
out
not
cli
idiv
int3
aam
cmp
sar
xlat
aam
addb
into
fidivs
stc
into
ljmp
ret
ret
call
int
in
or
f2xm1
xor
shl
sar
cmp
sar
cld
clc
sub
cli
fxch
mov
rolb
lret
out
hlt
fmul
leave
neg
jmp
out
cmp
in
lret
popl
nop
in
vpminub
into
int
fldl
hlt
icebp
addl
xchg
ror
out
xor
lret
icebp
cmp
clc
xlat
loopne
ret
loop
cmc
icebp
jmp
fucomi
lea
fucom
hlt
das
ss
lret
ds
jecxz
test
faddp
xchg
in
sub
lret
xchg
in
mov
xchg
in
out
rcl
fdivl
in
loopne
icebp
out
shr
jecxz
ljmp
xchg
rcl
lret
fdiv
lret
aaa
fildl
cmc
cli
sub
fcmove
mov
jmp
cmc
mov
call
cld
lock
jmp
mov
incb
aad
shl
xor
aam
ss
cld
lock
repnz
call
sti
in
xchg
icebp
in
ljmp
in
rcr
out
aam
fcmove
clc
loop
out
loope
shr
icebp
not
lret
aam
xor
aad
loopne
and
lret
mov
loop
leave
xor
xorl
loopne
stc
faddl
loope
out
lret
jmp
hlt
cmp
call
cmp
repnz
loope,pt
fldl
jmp
enter
jmp
repz
test
cmp
sti
cmp
iret
cmp
out
fdivrp
std
ljmp
into
iret
in
in
loop
shr
call
cmc
loopne
cmp
cli
sbb
ret
mov
out
xchg
into
out
divb
imul
out
repz
leave
icebp
fdivr
dec
fcompp
xor
aam
fsub
mov
mov
repnz
xor
iret
aad
stc
std
div
ljmp
shl
ret
in
in
ret
fninit
lock
lock
hlt
xchg
ss
stc
sti
xor
ds
lret
fnstsw
mov
xchg
iret
test
hlt
into
rcr
fcmovne
ror
into
iret
icebp
cli
icebp
repz
stc
lret
sbb
out
fucomp
jmp
clc
shr
lret
stc
cmp
loopne
in
repnz
mov
lret
xchg
xchg
fsubrp
or
jecxz
cmp
in
fstp
test
add
test
in
jecxz
call
clc
rol
xlat
sarb
neg
fdivrs
std
loopne
icebp
sar
in
hlt
ret
xchg
repnz
out
ror
out
aam
int
aas
aad
sar
cmp
fucom
mov
loop
iret
loope
ror
in
shr
in
shll
stc
xor
div
cmp
hlt
cmp
xor
xchg
out
xchg
test
xor
xor
in
ss
ds
sar
mov
call
sti
jmp
loope
xor
int
rcl
rcr
rcl
sti
cld
cld
loop
out
lret
in
out
ljmp
hlt
in
in
cmp
aad
repz
cmp
fadds
mov
mov
call
in
mov
lret
int3
lock
aad
cmp
loopne
hlt
aad
loopne
incb
call
call
in
jmp
jmp
loopne
loop
aad
aam
enter
ret
test
repnz
test
fldl
roll
inc
ljmp
jmp
jmp
xor
xor
rolb
test
loope
test
xchg
xchg
xchg
leave
enter
std
clc
xlat
out
ds
aam
loope
cli
in
addl
rolb
in
lret
idivl
rcr
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
mov
mov
push
add
aam
repz
cmp
fsub
in
xlat
ljmp
int
aam
xor
div
repz
shl
xlat
cmc
test
fcmovu
fldl
test
cmp
aam
cmp
shl
hlt
sar
ret
aas
repz
int
xchg
iret
int3
xor
repnz
in
cmp
cmp
aam
ds
loop
jmp
clc
out
nop
enter
out
loopne
jmp
in
xlat
lock
out
repnz
and
rolb
jmp
ror
test
add
in
ss
ret
call
int
xor
fdiv
loope
mov
aad
ljmp
in
out
vpavgw
out
out
imul
xor
stc
iret
sar
rcl
cld
adc
in
mov
ljmp
int
aam
div
shl
aad
repz
repnz
enter
loop
lea
adc
ror
xor
sarl
lret
int3
shlb
rolb
incl
xchg
cmc
in
xor
lret
cmp
sti
lret
rcl
jecxz
rcr
mov
fld
in
loope
add
int
mov
xor
cmp
xlat
aaa
idivl
in
icebp
loopne
cli
aas
hlt
mov
test
into
mov
and
ror
in
imul
repz
fidivs
jmp
sti
sarb
fidivrl
in
sar
out
cmc
jmp
test
out
hlt
leave
rcl
int3
aam
cmp
ret
shl
cmp
sti
out
jecxz
repnz
in
hlt
iret
enter
leave
incl
lock
hlt
sbb
shl
in
mov
in
cmp
loopne
ror
stc
aad
xchg
rol
incl
int3
out
fdivs
vpminub
stc
idivl
cmp
cld
cli
ret
mov
ret
xchg
in
fnclex
in
lea
ljmp
icebp
stc
loope
or
fcmovu
neg
incb
loopne
pop
xor
xlat
ret
out
xor
ds
std
cmc
fnstsw
lock
jecxz
movl
aam
cs
lret
repnz
iret
icebp
sar
icebp
rolb
jmp
fsubrp
iret
jecxz
mov
out
out
call
idivl
xor
int3
aas
movb
shl
out
xor
out
leave
hlt
repnz
ds
fcmovnb
in
sar
nop
iret
jecxz
fcom
shl
sti
ss
cmp
ror
into
iret
in
cmp
loopne
ret
frndint
mov
fsub
xchg
icebp
mov
mov
fld1
jecxz
out
cmp
cmp
int
mov
stc
stc
or
adc
xchg
call
into
cmp
int3
rcr
lret
repnz
incl
jecxz
test
icebp
xchg
mov
jmp
call
hlt
shr
fstpt
jecxz
loop
decb
testl
aam
sub
idivb
repnz
aad
rol
sti
fsub
test
mov
in
int
loop
aaa
divb
cmp
xlat
aad
rolb
cld
hlt
loopne
xlat
in
jmp
dec
leave
aaa
out
ljmp
hlt
out
sti
rcr
jecxz
cld
cli
out
loopne
iret
jmp
xor
in
aaa
out
fmulp
fucom
out
out
in
std
vpsubd
out
jmp
fcmovu
sti
ljmp
loopne
clc
ret
aas
ljmp
sti
orl
lret
repz
out
cmp
iret
loope
jecxz
loope
hlt
rolb
in
out
in
out
nop
mov
icebp
cli
ss
jmp
xlat
shr
les
test
enter
lds
in
into
fsub
lret
iret
hlt
ret
inc
jecxz
jmp
enter
std
xor
call
cmp
hlt
fadd
and
jmp
ljmp
xchg
ljmp
enter
cli
divl
imul
cmpb
loopne
test
out
loop
leave
jmp
xchg
int3
int
jmp
jecxz
idivl
neg
cmp
aad
call
loope
fisttpl
mul
idiv
aam
lock
into
aad
ret
div
fadd
jmp
sbb
test
loop
shl
aam
int
jmp
aad
stc
jecxz
les
lds
xchg
xor
ss
lock
cmpl
shl
jmp
repnz
addb
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
jp
sarb
jle
add
in
lret
sar
repz
int3
sar
hlt
cmc
fdivrp
repnz
call
lret
int
aaa
jmp
out
repnz
cli
rcr
repz
fcomi
cli
clc
mov
jmp
cld
ljmp
into
clc
repnz
cmp
jmp
fcmovu
iret
fdivp
ret
test
sub
repz
ret
ret
lock
cmp
sub
cli
stc
adc
fxch
clc
stc
sti
lret
cli
xchg
loopne
sbb
imull
shr
sarl
repnz
aaa
aaa
test
into
repz
cmc
xchg
jmp
out
ror
xchg
jmp
out
aas
cmc
leave
repnz
out
stc
int
fidivrl
cmp
ds
loop
sbb
neg
fimull
aam
in
out
out
cmc
in
rol
aad
cld
cmp
xlat
fcmovnu
repnz
jecxz
xor
cmp
mov
mov
mov
out
jmp
call
cmp
fnop
shl
hlt
loopne
out
leave
lret
jmp
std
mov
ljmp
aad
in
hlt
cmp
push
in
testb
test
xor
enter
lret
cmp
call
out
fxch
test
cli
lret
xlat
cli
shll
add
sti
ret
mov
mov
in
rcl
xchg
aas
shlb
hlt
out
ljmp
cmp
xchg
xchg
test
out
shr
into
loopne
test
imul
xlat
ret
loop
out
hlt
std
cli
xlat
test
mov
ret
or
iret
out
lret
xor
int
in
fneni(8087
leave
jmp
mov
int
xchg
add
out
fcomp
div
lret
sub
sti
cmp
clc
mov
rcll
repnz
out
fstpt
fsubp
aas
ret
fld
call
int
in
jmp
out
rcr
iret
out
fnsave
ffree
stc
test
std
fadd
xchg
leave
mov
and
xchg
ret
fidivl
lret
cli
sar
out
int3
into
hlt
out
fdivrs
loopne
xor
orl
lret
cld
xor
aas
shr
div
rolb
xchg
lret
lea
out
fadd
repz
jmp
lret
shl
aas
cmc
rorl
fld
xchg
jmp
icebp
xchg
jmp
lret
out
into
rol
test
and
fadd
fcomip
sti
fxch
loope
addb
xor
xlat
stc
repz
cmp
ret
fsubp
fldl
enter
jmp
repz
aaa
rcl
cli
hlt
jmp
testb
loop
enter
loop
loope
hlt
aaa
ret
repz
lock
in
ds
xlat
xlat
fcmovnb
in
mov
lock
repz
out
rcr
out
lret
xor
call
rol
aam
repz
testl
divl
in
out
jecxz
fcmovnu
repnz
int
addb
shl
testl
loopne
ljmp
jmp
cli
loop
rcr
sbb
xchg
mov
mov
ljmp
iret
icebp
aad
xor
shl
inc
aad
sti
clc
lret
out
jmp
nop
xchg
shl
int
cmp
test
aaa
test
out
in
std
les
testl
sar
in
int
enter
cmp
icebp
inc
cmp
loope
lds
xchg
jecxz
imulb
aad
div
cmp
ret
ret
xchg
enter
fldz
loopne
leave
xchg
mov
sbb
ljmp
cmpl
cmp
jecxz
cld
ret
xchg
xor
cmp
out
cmp
cmp
cmp
loope
sar
rolb
sub
icebp
lret
lret
lret
int
fxch
xor
xor
fdivp
clc
shl
std
rcr
rcr
fdiv
cld
test
ror
ret
int3
xchg
shl
clc
das
xor
rcr
iret
sti
ljmp
repnz
hlt
cmc
jmp
loope
filds
out
stc
int3
fdiv
fnstcw
roll
mov
loop
test
int
out
rcl
aaa
lret
in
cli
shl
cmpb
lret
stc
xlat
ror
ljmp
in
shr
lret
fistpll
fprem
cli
test
aad
rcr
fdivp
lret
mov
cld
shl
adcb
ss
into
clc
xlat
in
std
stc
out
test
clc
mov
ret
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
adc
jle
add
call
int
xor
xor
leave
fdiv
cmp
cmp
std
xlat
icebp
out
rcl
iret
shl
aad
loope
leave
cld
out
loop
std
mov
fld
lock
aas
rcr
ljmp
enter
std
into
xchg
ljmp
cmp
aad
stc
ds
fdiv
cld
mov
in
into
xlat
xchg
mov
into
jmp
call
ds
div
cmp
aas
test
repnz
neg
mov
lock
repz
xor
xor
cld
aam
rcr
icebp
in
lds
leave
iret
xchg
mov
test
stc
fcmove
div
ljmp
in
aad
roll
fcmovne
loopne
nop
in
shl
in
iret
int3
jmp
cmc
xor
cli
aad
cmp
cmp
hlt
test
out
ret
fsub
enter
xor
ljmp
cmp
dec
lock
std
ret
out
loope
xchg
in
mov
lock
ret
rol
cmc
dec
out
call
fcmovnu
cmp
aas
fcmovne
ljmp
shr
leave
jecxz
xor
fptan
clc
xor
loope
in
xchg
test
iret
clc
fcmove
leave
int
rcr
test
ret
in
std
test
shl
mov
shl
aad
call
enter
idivl
in
in
test
cmp
cmpb
mov
decl
xor
jecxz
xor
fucomp
loopne
fnstsw
int
xchg
in
in
mov
in
out
icebp
xchg
ret
int3
repnz
fcmovnu
idiv
cmp
vpmullw
enter
mov
lock
in
nop
hlt
in
imul
lret
enter
cld
cmc
fmul
jmp
shl
loopne
orl
jmp
ljmp
sub
aaa
lret
in
repz
xlat
sti
into
loop
test
loope
int3
cmp
aam
fdiv
call
int
in
int3
test
repnz
sti
xchg
in
xchg
cs
in
in
repnz
xchg
hlt
stc
enter
xlat
into
mov
lret
loopne
test
jmp
jmp
lock
jecxz
cmp
cli
mov
neg
out
out
xchg
mov
jmp
jmp
stc
repz
cld
lret
sti
cmp
ret
in
mul
in
or
sti
xchg
xchg
xchg
xor
cli
cld
cmp
clc
xlat
rolb
int
jmp
xchg
xchg
jecxz
mov
fsub
sti
jmp
iret
lret
ror
stc
jecxz
fsubp
sti
push
ret
out
out
fsubp
incl
xor
aaa
icebp
cmp
rcr
fcomp
hlt
cld
in
out
enter
lret
int
cmp
in
rol
in
into
stc
clc
jmp
rcr
in
loope,pt
fldl
fmul
orl
into
iret
lock
leave
das
fst
xlat
cmp
rol
out
mul
aam
mov
xchg
jecxz
cs
lret
fldln2
jmp
aad
xlat
fsub
fiadds
lret
leave
fcmovu
ror
cmc
int
fcom
cmc
lock
shl
in
aad
testb
ljmp
xor
fcmovnbe
cli
xor
aad
out
cld
stc
out
call
lret
out
mov
icebp
cld
xor
cmp
icebp
shl
shl
fcmovnb
fmuls
lret
ljmp
cli
cmp
not
inc
out
ffreep
mov
xchg
int
jecxz
repnz
xor
cmp
cmp
iret
cmp
fildl
mov
jecxz
std
ljmp
cmp
fnsave
fiaddl
xchg
aad
out
testb
fsubr
jmp
les
jmp
cmp
into
int
ss
shl
neg
neg
adcl
rcl
stc
fucomp
fidivrl
xlat
repz
ror
iret
sti
std
decb
mov
jmp
ljmp
test
stc
sti
cli
repz
lret
mov
sub
in
leave
xor
sti
fucompp
into
fadds
out
ret
loop
in
jecxz
xchg
mov
mov
vpmullw
repz
fidivrl
fmul
shl
fsub
loopne
vpminub
lock
into
mov
fldlg2
fstp
cmp
aas
out
clc
in
stc
fdivrp
ljmp
out
shr
xor
icebp
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
scas
int
stos
roll
jle
add
out
loope
in
aas
xlat
sti
fisttps
jecxz
in
repnz
out
out
rcr
xor
out
jmp
fdivrs
fst
test
not
lret
fadd
and
ret
jmp
out
fdivr
aas
aad
xchg
out
test
fcomi
xchg
shl
in
in
lock
fdivr
idivl
shl
fnstsw
cmp
sbb
orb
leave
lret
cs
std
shl
sbb
cli
out
shl
std
orb
addb
in
enter
rcl
xor
loop
fld
neg
shl
aam
lret
out
in
mov
aam
enter
int3
lock
aam
in
enter
aad
jmp
std
int3
xchg
mov
iret
ljmp
ret
iret
repz
cld
clc
lret
xchg
mov
xchg
enter
xor
cmp
xor
repz
shl
mov
repz
addl
into
cld
loopne
in
hlt
loop
repz
cli
ds
fisttps
out
divl
fld
xor
cmp
cmp
fstp
icebp
aas
clc
test
idiv
test
xchg
mov
icebp
in
in
fdivrl
icebp
fdivs
std
test
out
std
mov
loopne
fsubrp
out
xchg
or
ss
bnd
cmp
repnz
add
xchg
stc
loop
loopne
in
aad
lock
leave
repnz
fsub
aas
icebp
stc
repz
adc
mov
in
fcmovnbe
aam
lret
cmp
out
cmp
loopne
cmp
int
and
rcl
jecxz
test
stc
ljmp
shl
aaa
int
fstpt
cmp
icebp
clc
leave
fisttpl
iret
repnz
ret
out
repnz
aam
cmp
in
push
ljmp
int3
mov
adc
leave
xor
out
stc
xor
or
out
cmp
ret
in
filds
dec
xchg
lock
fcmovnbe
hlt
hlt
xlat
cmc
out
in
xor
rcl
test
test
out
fndisi(8087
in
adcb
vaddsubpd
in
xor
rcl
push
shl
les
mov
xchg
aad
int
cmp
leave
cld
loope
sarl
rcr
aad
ljmp
loope
xchg
into
out
aam
repnz
cmpb
lock
stc
cmp
shr
into
lret
xorl
icebp
fcmovbe
in
out
iret
fidivl
cmp
ret
roll
shl
sub
repz
cmc
in
sub
jmp
enter
fdivrl
stc
repnz
aad
jecxz
stc
repnz
xchg
mov
out
icebp
fcmovbe
cmc
stc
shll
call
fstp
sub
xchg
orb
xor
cmp
shl
repz
rol
fcmovne
iret
ljmp
ljmp
aaa
cmp
and
mov
xrelease
mov
loope
loope
in
aam
clc
icebp
fcmove
int3
cmp
or
sti
ljmp
repz
orb
fmul
in
stc
repz
fmul
out
xchg
enter
xchg
out
shl
out
fmul
lret
hlt
repz
in
ret
clc
ret
aad
loop
sti
jmp
out
xchg
xor
shlb
icebp
fmul
ror
lret
sarb
sbb
ljmp
aam
out
in
cmp
lret
enter
xlat
fcomi
test
xchg
addb
in
filds
sub
ret
cmp
xor
icebp
call
fidivrs
adc
cmc
ret
les
xchg
cmc
iret
enter
repnz
shl
xchg
cli
jmp
fadd
loope
out
mov
loope
int
cmp
out
stc
in
out
shr
cld
test
clc
cli
leave
roll
leave
int3
idivb
cmc
hlt
std
stc
sti
fidivrs
lock
cld
clc
std
mov
loop
fneni(8087
incb
enter
sti
shl
filds
loopne
aad
jecxz
lret
std
mov
jmp
out
std
cld
cmp
std
fldpi
cld
int3
out
and
mov
test
adc
lock
jmp
testb
fstp
lret
std
filds
int
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
xor
add
iret
aaa
jmp
call
cmp
inc
stc
cli
xor
test
test
ror
icebp
fcomip
xchg
xor
out
in
out
leave
call
rol
cmp
inc
cmp
enter
int
in
shl
fcmove
cmp
icebp
in
sub
add
repz
in
std
popl
fld1
sub
fdivr
shl
xlat
rcr
in
ret
mov
lret
repnz
lret
clc
into
cli
cmpb
iret
stc
clc
out
cld
xchg
inc
flds
aam
hlt
jmp
call
aad
loopne
fildl
aad
rorb
mov
shl
in
stc
cmp
int3
fdivrl
sti
xchg
shl
loop
xabort
test
loopne
in
ret
leave
call
cli
cli
icebp
cmc
aas
in
jecxz
fcmovnu
decl
loop
mov
imul
xlat
shll
icebp
cmp
jmp
cmc
cmp
out
fucomip
loop
adc
call
std
stc
aas
loope
rcl
xlat
cli
test
fcmovne
mov
std
sub
icebp
iret
aaa
in
aad
cmp
fdivrp
sti
shl
in
test
stc
xlat
test
repz
icebp
aam
out
fdivs
call
int3
aas
icebp
neg
loope
test
mov
out
xchg
mov
test
div
stc
jmp
repz
jmp
cmp
movb
enter
loopne
jmp
ss
enter
div
int3
lock
cmc
fsub
fcmove
loopne
lret
in
xchg
shrl
bnd
cld
into
ds
out
xor
fucomi
stc
add
hlt
mov
xorl
neg
fcmovnbe
out
shl
jecxz
loope
loope
fst
call
mov
mov
in
cmp
cmp
cli
clc
int3
loope
aam
sar
cld
loopne
fdivr
int3
xchg
cli
loop
lock
lret
aad
aad
int3
bnd
jecxz
xchg
stc
cmc
jmp
mov
cld
lret
cmc
aad
shl
out
in
cmp
clc
out
aas
in
xlat
in
incl
jmp
std
dec
enter
cmc
aas
out
out
ljmp
cld
repnz
ror
rcr
aad
fnop
jmp
mov
cs
out
lret
out
jmp
out
loop
in
mov
out
mov
out
xor
lds
out
aam
aam
rcr
cld
mul
in
call
or
mul
call
lret
int3
lret
lret
cld
repz
out
test
out
rcl
repz
ljmp
fsub
jecxz
fdiv
xor
xor
fcmovu
rcl
aas
cmp
rolb
jmp
nop
test
in
repz
xor
leave
repz
cmp
ret
rolb
out
int3
out
in
xchg
xor
aaa
sti
fsubr
lret
icebp
icebp
cmp
rcl
ret
and
in
mul
mov
incl
out
leave
xor
stc
xor
loopne,pt
fcmovb
clc
stc
in
cli
or
out
jmp
nop
loopne
std
in
ss
xor
enter
aam
icebp
cmp
sar
inc
fcmovnu
fadd
mov
mov
shll
xor
jmp
cmc
cmc
addb
ljmp
iret
ret
in
in
xor
leave
sti
ds
addl
ret
in
sbb
xchg
into
int
out
sar
aad
int
ror
rcr
fdivr
ds
fsubp
call
xchg
out
cmp
repz
fcmovb
faddl
in
loopne
mov
out
in
aam
xor
fcmovu
shl
fsub
neg
clc
loope
cld
lret
cld
fisttpl
mov
ror
hlt
lret
fdivrp
int
cli
hlt
test
jecxz
testb
int3
xchg
xor
ror
xor
into
repnz
shl
lock
cld
repz
in
addb
repz
in
aaa
cmp
out
rol
rolb
and
clc
loop
jmp
mov
adcb
cmp
lret
sarb
or
cmpl
fdiv
rorb
ljmp
int
call
cld
std
cld
cmp
loopne
in
inc
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
inc
pushf
out
fildl
jle
add
flds
ds
out
adc
ror
iret
aad
mul
sub
cmp
cmc
shr
loopne
ror
cld
xchg
xchg
addl
fstp
in
sub
out
lret
fcmovne
hlt
int
fadd
rol
orl
out
jmp
xor
iret
out
ljmp
jecxz
repz
rcl
aam
fdiv
std
loopne
test
mul
icebp
fdivrs
hlt
out
enter
loopne
fistpll
jmp
cli
jmp
lock
cmp
xchg
enter
int3
out
cmc
fadd
fst
loopne
sar
test
hlt
fimuls
loop
jmp
leave
cmc
clc
xlat
addl
aam
orb
xchg
aam
stc
xor
int
ror
fst
fdivr
hlt
cli
clc
fildl
xchg
out
rol
out
ret
std
cmp
jmp
icebp
adc
leave
in
mov
out
shlb
repnz
fcmovu
cmc
fnstcw
fdivr
cli
in
push
cmpl
out
lret
xchg
mov
ret
leave
lret
fsubrp
cmp
lock
out
hlt
xchg
enter
dec
fcmovnbe
rclb
cmp
enter
sti
loopne
iret
xlat
out
repnz
fcoml
xor
cs
cmp
fcomip
fimuls
in
enter
into
nop
lock
cmc
int3
jmp
rolb
in
mov
repnz
out
out
leave
in
repnz
dec
xor
jecxz
stc
hlt
fcomi
lret
fadd
nop
clc
xchg
fdiv
int3
nop
loopne
stc
xor
repnz
std
shr
cmp
stc
aad
out
lret
and
xchg
xchg
rcl
xlat
sti
cmc
out
fcom
cld
ret
sar
shr
mov
sti
leave
decl
loopne
das
cmp
rol
repnz
lret
into
loopne,pt
loop
loop
jmp
xchg
in
lret
fsubr
iret
fsubr
int3
hlt
fcomp
rcr
aas
jecxz
faddl
cld
into
repnz
jmp
ss
out
adc
cmp
mov
lret
std
hlt
call
cmp
jmp
cmp
aas
leave
sti
jecxz
incl
xlat
loopne
fcmovu
dec
icebp
xchg
in
xlat
rol
jmp
cmp
ljmp
shl
ret
out
xchg
in
movl
shl
shl
fsubr
loopne
fdivp
cld
flds
lret
nop
adcl
cmp
int
loope
loopne
fdivrp
test
flds
fcmovnu
jecxz
hlt
xor
idiv
ljmp
into
loop
repz
xchg
mov
mov
xchg
shl
xchg
out
idiv
out
cmp
cmc
cmp
ds
ds
orb
rcl
jmp
divl
frndint
fmul
int
fnstcw
int3
fdiv
cld
les
test
mov
cmp
xor
call
cmc
test
jmp
int3
sub
loop
in
aam
jmp
sar
fcmovu
in
clc
xor
test
cli
mov
jecxz
loopne
jmp
cli
lock
clc
cld
idivb
cmpb
cli
call
jmp
leave
in
lret
sti
lds
cmp
repnz
cmp
cld
xor
mov
jmp
loopne
not
repz
adc
jecxz
aad
xchg
call
clc
enter
out
xchg
xchg
xlat
enter
cmp
xor
div
int
test
cmp
ret
ffree
aas
filds
rcl
loope
repz
aam
fincstp
fcmovu
xor
aam
out
jecxz
loopne
test
loope
cld
call
out
cmc
enter
aas
adc
cli
addb
out
rcl
in
pop
out
sarb
jmp
ror
into
clc
shr
xor
fiaddl
lret
test
rol
lock
cmp
cmp
addl
cli
cmp
in
ljmp
fmul
xor
fidivl
leave
lret
loopne
icebp
sbb
cmp
enter
xchg
xchg
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
jmp
jle
add
repnz
rorl
cmp
xlat
cmp
aam
jecxz
lock
jmp
in
jmp
shl
repz
aam
out
not
ljmp
imul
sar
fchs
sbb
jecxz
mov
stc
div
fdiv
xor
ffree
cmp
xlat
loope
sbb
faddp
mov
imul
aaa
cmp
fmul
test
cld
jecxz
cmp
call
test
aam
lea
xor
icebp
cmp
lock
sar
loop
addb
stc
popl
xchg
xchg
into
xor
ljmp
sti
clc
aam
shl
test
loope
fsub
jmp
xlat
shr
out
cmp
cmp
cli
cmp
xchg
aad
imul
sti
xchg
out
mov
xchg
icebp
enter
int
repz
jmp
and
loope
sti
in
vshufps
loope
in
out
fsub
cmp
vaddsubpd
fcmove
imul
out
loopne
in
xchg
clc
adc
int3
into
incl
out
ljmp
fdivr
xor
rcl
ret
fiadds
in
xchg
jmp
clc
enter
fyl2xp1
repz
cli
std
rol
xor
mov
leave
or
xchg
adc
in
out
xor
xor
hlt
into
xlat
shl
aas
aam
aad
idiv
cli
rcr
in
in
in
xor
ss
call
aaa
aas
in
sub
fsubr
out
xchg
xchg
int3
xor
ljmp
aas
cli
roll
ds
out
xchg
int3
loope
hlt
cmp
out
int
xor
sti
out
shl
repnz
clc
and
fmulp
rorb
into
fcmovnbe
ss
loopne
int
int3
inc
jecxz
lret
int3
xchg
fucomi
out
aad
loop
jmp
ss
lret
vpmaxub
cmc
sti
ljmp
cld
int
shr
xor
cmp
loopne
iret
mul
test
out
cli
in
test
in
jmp
dec
xor
aad
leave
into
aad
rcr
loopne
rcr
out
loopne
test
mov
fmul
int3
popl
enter
stc
shr
into
cmp
rol
fdivrs
fstp
incb
out
leave
loopne
out
imul
out
sub
fdivr
std
repz
fsubr
ds
sar
cli
stc
xabort
repz
enter
icebp
rcl
ret
cmc
xor
iret
sar
hlt
roll
cmp
neg
xchg
sti
loope
mov
into
into
shl
cmc
in
ds
out
leave
lret
sti
flds
jmp
orl
rcr
cmp
cmp
fmul
repz
clc
xlat
testb
loope
xchg
iret
mov
xor
int
out
sti
fmulp
fstpt
fdivr
fldl
xchg
xchg
ror
orl
cmp
fucomip
std
inc
idiv
fsub
lds
mov
ror
testb
ss
cmp
ror
fadd
out
std
adc
fcmovu
call
movb
rol
xor
xor
out
ss
loopne
cmp
loop
testb
fldpi
std
loope
loope
rcll
ljmp
xor
mov
call
in
lock
in
mov
clc
cmp
lret
std
cld
fucomi
test
ret
movb
mov
call
sarl
test
roll
sar
and
mov
repnz
jmp
clc
stc
cmp
shr
loopne
fcmovnb
cli
fmulp
sti
sti
in
out
lret
cmc
and
cli
out
sti
cs
in
enter
fdivp
fnsetpm(287
xchg
cmp
loop
std
out
enter
adcl
xlat
xor
in
cli
sti
rcr
ror
stc
out
or
lret
shr
xchg
jmp
shr
test
stc
cmp
out
stc
stc
fcmovu
in
std
sti
rcr
iret
aaa
test
cmp
fcom
out
loop
incl
xlat
fisttps
aad
sub
fyl2x
xor
rcl
into
fcmovu
fcomi
aad
fstp
rcr
in
lock
les
ret
int
fidivrs
cmp
shr
lds
add
enter
int
fnstenv
sbb
sub
add
out
jmp
rcl
mov
xchg
cli
fcmove
out
xchg
xor
out
call
into
int
rol
iret
shl
shl
lea
ror
icebp
loope
hlt
in
fidivrl
into
out
fptan
repz
cmp
ret
sar
shl
lret
loop
out
mov
clc
cmp
cli
iret
aaa
enter
in
rol
hlt
mov
xor
into
lock
cmc
loop
xor
xlat
fistpll
cmp
stc
ret
fdivrp
in
ret
lret
clc
fimuls
mov
out
loope
into
jecxz
lds
fcom
enter
ret
int3
neg
jmp
in
xchg
nop
lret
int
repz
lret
icebp
xlat
in
xchg
and
out
xchg
test
cld
mov
xor
enter
cmp
jmp
loopne
sarb
out
sarb
in
std
fdivr
jmp
nop
xchg
xchg
nop
out
lock
xlat
fucomi
icebp
in
rcr
cmp
fcom
sti
rol
repz
call
xor
out
ss
int3
in
dec
cmp
idivl
std
cmc
xlat
repnz
enter
repnz
enter
int3
lock
into
shl
shl
fnsetpm(287
xabort
out
cld
fdiv
adcl
sti
cmc
cmp
roll
jecxz
cmc
mov
ror
nop
jmp
jmp
enter
inc
in
hlt
aad
orb
fisttpl
in
sub
icebp
fsub
in
jmp
not
shl
in
fcomp
aam
xlat
call
in
int3
enter
fsubr
in
xor
cmp
in
int
incb
in
loope
out
shl
loope
cmc
int3
xor
aaa
fdiv
repnz
jmp
std
enter
xor
in
int3
in
sub
enter
int
iret
sti
shl
stc
rcr
mov
sti
rorb
xor
clc
cs
sarl
jmp
loopne
ret
fldl
int3
loopne
jecxz
xchg
mov
jmp
clc
xor
ljmp
lret
div
sti
icebp
out
cld
xor
out
fdivrp
in
out
faddl
xor
xlat
out
sarb
cmp
jecxz
xchg
stc
incl
out
addb
cmc
fdiv
xor
shl
fcmove
cmp
out
sar
fsubr
sarl
mov
loope
out
out
int3
xchg
out
in
into
xor
rcl
test
shl
stc
jmp
jmp
call
jecxz
in
cmp
idiv
jmp
repnz
sti
sti
cmp
test
loope
lea
hlt
in
cmp
test
in
in
jecxz
call
sti
mov
xor
cmp
cmpl
les
test
bnd
iret
loope
sarl
std
xlat
cmp
cmp
cmp
call
test
rcll
aaa
xor
in
imul
cli
ror
ds
fdiv
xchg
out
ljmp
sti
loop
xchg
in
neg
hlt
aaa
into
aas
cli
clc
std
xlat
std
cmp
lock
repz
out
rol
repnz
in
cmp
imul
fdivrl
test
mov
int3
sti
cmc
lock
cld
sub
fiadds
mov
int3
decb
ss
into
jmp
leave
clc
ss
sarl
iret
loop
mov
ror
jmp
lret
ljmp
stc
out
xor
iret
repnz
xlat
shll
cmp
cmp
loopne
lock
xchg
fimuls
loopne
loope
enter
cmp
sar
aas
xor
aam
fiadds
fucomip
or
out
xchg
fmulp
call
clc
xlat
lret
out
lock
fucom
inc
repz
mov
clc
out
out
fcmove
shl
into
out
loope
shl
lret
in
fucomi
std
loope
std
sar
xchg
sar
clc
out
mov
call
out
shlb
rcl
in
enter
cmp
loopne
loopne
enter
jmp
leave
enter
jmp
sti
repnz
xor
out
fldln2
sbb
or
call
loopne
hlt
shl
in
ror
fadd
cli
cmp
shl
ret
repnz
in
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
sti
lock
int3
int3
nop
enter
shl
iret
repnz
lret
into
repz
repz
fadd
ret
mov
lret
in
repz
in
shl
lret
stc
sar
shlb
aaa
jmp
loopne
out
aad
cmp
idiv
fadds
hlt
mov
sti
sti
ds
fcomp
out
cmp
repz
leave
inc
cld
xchg
cli
and
jmp
std
out
ds
rcr
rcl
mov
test
loopne
ficoml
ss
aaa
repz
fidivl
fldz
shl
testl
int
loopne
lea
aam
shr
imul
cmp
sar
clc
fcomip
ljmp
in
rorb
divl
fnstcw
idiv
in
fsub
xchg
mov
cmc
mov
ss
in
out
in
lret
ds
icebp
clc
adc
leave
out
fsub
orb
aad
jecxz
leave
fcmovbe
out
xlat
addl
fdivr
xlat
fcmovu
iret
call
test
div
dec
fdivrl
sarl
repnz
out
call
mov
lret
jecxz
das
fsubr
cmc
leave
vpaddb
lock
cmp
jecxz
fprem1
ffree
ljmp
in
in
jmp
lret
std
repz
fnstsw
aas
fdiv
fiadds
xchg
call
shl
enter
repnz
lret
repnz
loope
xlat
xchg
or
mov
jmp
aad
lock
aad
ds
sti
in
sti
loopne
mov
stc
loopne
in
out
out
in
iret
int
int3
xlat
cld
lock
in
icebp
test
test
sti
xchg
mov
test
iret
ss
aas
iret
faddp
sar
sar
adc
lret
addb
repnz
imul
jecxz
leave
ljmp
into
fstp
stc
fdiv
ds
test
jecxz
fst
fdivp
enter
cmc
lret
stc
aam
add
repnz
cmp
leave
lret
imul
jecxz
in
xor
stc
int3
iret
dec
lock
cmc
mov
mov
loopne
lds
jmp
ror
aam
sarb
xorb
loope
iret
cmc
rol
loopne
aad
call
fldl
aad
aaa
xor
ljmp
std
ds
roll
or
lret
or
fcmovb
cld
lret
iret
std
icebp
rcl
adc
icebp
loop
call
and
call
leave
rcl
out
out
aaa
repnz
mul
ret
ret
fisttpll
sbb
fdiv
repz
icebp
in
xor
xlat
shl
test
loopne
add
sar
and
int
bnd
ljmp
stc
call
stc
ffreep
out
rol
xchg
cli
or
ljmp
fprem
int3
leave
cmp
fnstenv
hlt
out
call
mov
lret
into
aam
test
into
repnz
lret
repz
std
ds
cld
addb
out
in
jmp
push
xor
loope
out
xor
ds
iret
fstpt
hlt
cli
loope
stc
mov
mov
int3
incb
loope
cmp
jmp
aas
icebp
in
clc
rcl
movl
jecxz
aam
xor
ret
aaa
ljmp
loopne
ret
xlat
shl
cmp
hlt
loop
shl
les
sub
divb
fcmovbe
lock
ds
out
fcomp
addb
enter
in
out
mov
test
out
xor
shr
fsubr
int3
neg
hlt
in
fcmovb
aas
cli
out
in
leave
out
call
xchg
call
sti
lret
aam
aam
hlt
icebp
in
stc
cld
cli
les
in
aam
out
hlt
jmp
fdivr
in
cli
aad
cli
icebp
add
out
mov
into
test
fldcw
int
fdivr
lret
testb
cmp
mov
fsubr
ror
shl
shl
int3
enter
iret
xlat
repnz
loop
and
in
jecxz
aam
clc
divl
fstpt
in
fimuls
xchg
call
in
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
call
fxch
iret
int3
loope
fcomi
incb
in
lock
out
loope
lret
lret
int3
in
iret
cld
rcr
in
fcmovnu
std
ljmp
add
xchg
int
enter
bnd
cmp
fldl
fldl
in
int3
in
iret
ror
aad
bnd
cld
rcr
stc
test
xlat
test
addb
in
ror
div
jmp
fcom
xor
aas
repz
aad
fmul
rorb
out
in
stc
cld
xor
call
fcmovnbe
cmp
idiv
hlt
loopne
aam
cmp
int
jecxz
icebp
ljmp
lret
lock
repz
in
cmc
cmp
ds
jmp
out
out
loopne
mov
ret
cmp
cmp
lret
int3
sbb
fadds
test
test
int
xor
sub
ljmp
aas
ror
in
loopne
imul
jecxz
call
cli
out
jmp
in
repz
lds
idiv
repnz
dec
xor
in
loop
xchg
cli
mov
lret
xchg
ljmp
rcr
les
shr
aam
repz
iret
aas
rcl
lret
aas
int
hlt
xchg
sar
xor
fcmovu
ljmp
test
test
leave
mov
aas
mov
int
test
ret
std
aam
repz
rcl
ret
out
sar
loop
xchg
in
fcmove
aam
in
out
leave
shl
out
idivl
icebp
cli
xor
rcl
test
jmp
shl
mov
ret
clc
int
neg
cmp
lret
in
fsub
fndisi(8087
sti
test
fdivp
stc
hlt
hlt
pop
clc
cmp
shl
jmp
cmp
or
leave
jmp
leave
loope
xchg
xor
fstpt
lret
aad
aad
aas
in
in
hlt
xchg
in
mov
out
xchg
out
shr
in
ss
xor
fdivr
cli
test
fdivr
cmp
fmuls
in
into
sub
leave
fdivrl
in
fmulp
fmulp
hlt
enter
jmp
leave
out
ljmp
xor
lock
cmp
xchg
cmpl
mov
int
xlat
ljmp
xor
cmp
xchg
jecxz
call
lret
faddl
loope
iret
clc
in
fsubr
out
test
iret
fdivr
testl
sub
xlat
xor
fsubrp
rcl
cli
fcmovbe
rcl
out
ret
rorl
into
loopne
xchg
leave
xor
cmp
jmp
cli
add
fnstcw
lret
out
out
out
enter
jmp
into
shrb
sti
cmp
cmp
sti
add
cld
in
leave
loopne
leave
call
repz
out
ss
cli
in
mul
fldl
in
leave
fsubrp
int
mov
aam
in
cmp
xor
aaa
lret
int3
icebp
cmp
fildl
xchg
fldln2
lea
enter
repz
fdivr
addb
cmp
neg
addb
in
xlat
out
cmp
out
fincstp
test
xlat
out
sar
lock
mov
sti
loopne
mov
fucomip
lock
out
fst
xlat
cmp
loopne
clc
cld
ret
std
enter
jmp
xchg
jecxz
cmc
repz
ds
clc
ss
jecxz
testl
jmp
popl
in
cmp
leave
clc
int
int
shr
enter
sti
mov
hlt
xchg
int
int
xor
sti
out
fcmovne
repnz
in
sbb
jmp
fldpi
ljmp
loope
leave
fsubr
int3
lret
cmpl
cmp
add
inc
fcmovbe
lock
jmp
xor
leave
xor
sarb
fidivrs
std
xchg
loopne
jmp
in
fdivrp
in
iret
mov
fdivr
xor
repz
rolb
aas
rorl
fldl
xor
call
cmp
cmc
shl
fcomp
mov
out
loope
fneni(8087
mov
ss
fdivr
iret
clc
hlt
ss
in
out
push
or
add
lds
add
aad
xlat
fcmovnu
ret
pop
lock
sbb
add
add
iret
std
fadd
xor
orl
in
int
lret
cmp
xlat
sti
incb
leave
cld
mov
xchg
ljmp
lock
neg
cmp
hlt
jecxz
repz
ret
cmp
lret
mov
call
out
in
out
repnz
cmp
xor
adc
test
out
int
int3
int3
cmp
int
cmp
loope
ds
sbb
int3
faddl
loopne
out
rcr
idiv
icebp
xor
ret
cld
rcl
enter
fdivr
jmp
test
test
stc
into
sub
cmp
fdivrp
cmp
out
lea
incb
into
xor
out
dec
cmp
clc
loopne
call
fsubp
xor
cmp
sub
cmc
add
xlat
cmp
enter
lret
xchg
repnz
icebp
ss
xlat
rcl
into
ret
cld
rol
cmp
stc
or
xchg
in
out
shl
call
out
cmp
cmc
aas
shr
int
inc
aam
testb
out
faddl
rcl
lock
stc
repz
cmp
rolb
loope
in
filds
call
xor
aam
clc
jmp
icebp
xlat
ret
inc
xor
clc
fld
xchg
leave
enter
jmp
loope
fstpt
cmp
into
aam
loope
xlat
repnz
cmc
idiv
out
and
xchg
divb
hlt
divl
repz
aad
into
loop
test
rcl
ret
fdivp
fildl
out
repz
xchg
xor
jmp
icebp
cli
sbb
fxch
repnz
sarb
lret
xlat
leave
shl
xchg
xchg
loopne
int
loope
ret
in
in
enter
cmp
idivb
fdiv
in
movl
iret
imul
aam
int3
lock
idivl
rcl
jmp
clc
lea
xchg
call
in
icebp
das
out
sti
hlt
cmp
iret
call
lds
add
fninit
mov
out
ret
lock
incl
out
std
in
jmp
sbb
in
lea
imul
cmp
repnz
cld
out
int
xor
repnz
ret
cmp
call
into
int
cmc
sub
repz
leave
lret
loopne
ds
roll
in
int
in
mov
jecxz
xlat
repz
into
iret
into
xlat
adc
lret
jmp
mov
mov
loope
jmp
out
fdivl
hlt
fdivrp
sar
roll
ljmp
in
xchg
test
lock
aam
shr
int
int
in
mov
clc
decl
aam
repz
clc
xor
call
into
loopne
rcr
fdivrp
loopne
in
int
fcmovnb
adcb
leave
ret
xor
ljmp
shl
icebp
call
popl
hlt
shr
aas
loope
hlt
lret
ror
cmp
fdivp
xlat
rol
cmc
jecxz
in
not
loope
jmp
dec
jmp
lret
aam
faddl
stc
out
xchg
addb
shl
int
xlat
cmp
in
xor
cmp
std
stc
in
fiadds
jmp
mov
out
jmp
neg
cmp
in
cli
fidivrl
cmp
out
sar
test
add
in
nop
in
mov
lock
fcom
fst
ds
out
cmc
loope
lds
enter
fsubp
ljmp
sub
leave
out
fucom
test
repnz
test
leave
lret
lret
lret
mov
aaa
in
clc
cmp
rol
lds
enter
test
into
mov
lock
in
fsub
clc
repz
not
aad
stc
clc
loope
int
fistl
out
hlt
repz
not
enter
adc
loope
shl
fcmovb
fucom
fsubrp
loop
int3
jmp
decb
in
cmp
shlb
cmp
xor
iret
loop
rolb
orl
aad
jmp
icebp
int
idivb
rolb
testl
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
sbb
pop
add
testl
jle
out
fmulp
sar
lock
int
xor
loop
xchg
out
sti
fucomp
cli
out
mov
cmc
loope
into
enter
iret
aad
ret
cmc
jecxz
std
loope
hlt
ljmp
in
mov
xor
jecxz
call
std
fcmovnb
jmp
in
in
xchg
mov
orl
cmp
shr
aad
loope
rol
test
std
in
orb
add
in
aaa
cmp
fdivr
rcl
fcos
sbb
ds
fmulp
loopne
nop
fsubp
test
jmp
shl
cli
lock
stc
rolb
lock
test
cmc
stc
enter
std
cmp
inc
idiv
xchg
cli
ds
orb
and
cmp
into
xor
lock
cmp
loop
out
sbb
adc
shr
stc
shl
cmp
fucomip
into
int
int
out
cld
loop
fmuls
mov
shll
xor
stc
cli
shl
lock
hlt
xchg
ret
in
mov
loop
xchg
mov
xchg
xchg
call
iret
iret
fdivrp
adc
mul
aad
imul
in
fsts
int
rcl
icebp
lock
icebp
cmp
ljmp
stc
jecxz
stc
lds
repnz
xchg
ss
ret
cmp
cmp
xor
ret
in
mov
mul
in
in
rcl
xchg
fcom
ss
out
enter
sti
jecxz
cmp
xlat
mov
mov
call
in
aaa
stc
fxch
cmc
cld
in
aad
aam
idiv
rcl
in
out
test
out
push
out
loop
aaa
cmc
int3
repz
repnz
clc
aad
cli
ret
loop
iret
lock
cmc
call
fiadds
and
faddp
icebp
jmp
fimuls
int
xor
jmp
jmp
loop
stc
loop
cli
jecxz
neg
out
lret
jmp
in
in
enter
loopne
cmp
ret
cmc
or
in
lock
cld
adc
icebp
jmp
cmp
cmp
rcr
fcmovnb
test
fucomp
call
mov
or
int
int3
hlt
out
loop
int3
in
fmul
cmpb
iret
out
stc
iret
fdivr
xlat
sar
jecxz
int
in
int3
out
mov
out
std
adc
jmp
rcr
loope
enter
fdivrp
fcomp
loopne
std
icebp
xchg
fsubr
ret
neg
shl
clc
cmp
aas
aas
roll
cmc
leave
mov
mov
call
lret
shr
cmc
enter
ret
icebp
hlt
rol
icebp
cld
test
test
cmp
sbb
lret
lock
fpatan
repnz
fcom
test
loope
fsubp
rolb
jecxz
xchg
int3
jmp
xchg
in
jecxz
cld
idivb
leave
in
ret
cmp
xchg
shl
xlat
jmp
rolb
shr
xor
iret
fdiv
lock
lret
roll
ret
decb
mov
xlat
in
xlat
out
jmp
cmc
fmul
ret
jmp
in
call
enter
out
xor
out
cmp
cmp
idivl
std
fidivrs
fcmovnbe
test
orl
fmulp
lock
fisubrl
iret
hlt
cmc
jecxz
sti
add
rol
mov
call
lret
fdivs
repnz
repz
fdivrs
rcr
cmp
call
mov
std
loop
jmp
repz
hlt
shr
les
in
out
fdiv
cmp
out
out
addb
out
jecxz
ret
rol
in
fnsave
int
aaa
testb
incl
into
xchg
ljmp
cmp
aam
lock
repnz
shl
lock
fdivp
fsubr
leave
std
iret
test
in
xor
ret
shr
lret
cld
aad
iret
loope
rcl
stc
in
in
in
hlt
xor
out
lret
imul
aad
fbstp
ljmp
jmp
jmp
in
orl
sarb
rcl
xlat
fdecstp
repz
fdivrp
enter
addl
fcomp
das
cmp
fcmovb
inc
fsubs
test
add
int3
rcl
ret
fldl
rcll
add
fsubp
cmp
aam
cli
repnz
test
stc
cmc
fnstenv
xlat
idiv
hlt
fsubr
ret
hlt
out
div
out
in
jecxz
out
in
xchg
jecxz
mov
clc
xlat
mov
ljmp
ds
repnz
jmp
int3
xchg
loopne
aas
cmc
fcmovbe
aad
int
out
jmp
cmp
int3
sar
cld
hlt
out
addl
in
call
mov
lret
jmp
aas
fdiv
roll
ret
mov
out
faddp
iret
fcmovnbe
xchg
xchg
fidivrs
lret
out
lret
fucomp
int
cmpb
fcmovu
repnz
ror
aad
mov
mov
xchg
aad
ss
int
aad
repz
stc
repz
stc
roll
jmp
enter
int
in
std
in
rcr
sti
lock
cmp
icebp
in
out
fsubr
and
test
lock
aad
out
xor
lock
aas
hlt
cmp
fadd
out
aad
mov
fimull
sar
jecxz
icebp
in
xor
iret
aad
cmp
ror
stc
adc
xlat
jmp
rorl
out
xor
cmp
enter
imul
ret
sti
loope
fiaddl
or
mov
mul
shlb
into
fidivl
int
cmc
jecxz
rcl
out
jmp
iret
mov
or
lret
ss
cmp
iret
int3
fnsave
repnz
repnz
repnz
cli
nop
std
fsubrp
icebp
hlt
loopne
in
lret
icebp
iret
aad
fnstcw
xor
orb
mov
int3
out
lock
sti
fcom
sbb
in
aad
loop
fadd
add
loopne
lret
stc
int
mov
repnz
jmp
xor
hlt
lock
in
aas
in
mov
leave
lret
jmp
out
loope
rol
repnz
cli
stc
lret
cmc
repz
icebp
test
cmp
ret
testb
lret
int
iret
cmc
repnz
into
cmc
xor
into
ret
ffree
clc
lds
xchg
cld
in
in
cmc
in
int3
out
lret
repz
cmp
in
loop
sti
xor
and
in
xchg
fimuls
out
rcr
ss
fcomi
call
jmp
loope
in
fimull
loop
loop
out
xor
xlat
cmc
stc
cmp
fdivrp
iret
repz
clc
cli
loop
fcomip
xchg
leave
imul
mov
mov
std
mov
mov
das
lock
out
lret
out
cmp
sub
rcl
hlt
enter
rorb
int
loopne
cmp
lock
cmp
cli
ret
rcl
xchg
aad
mov
call
jecxz
aaa
cmp
iret
lock
lret
loope
in
fabs
shl
out
fldl
fucomp
in
jmp
into
imul
enter
jecxz
aas
in
jecxz
loope
int
loopne
xchg
jecxz
sub
enter
repnz
jmp
clc
xlat
repnz
sti
xlat
lret
loope
incb
mov
in
out
enter
cld
ror
repz
loopne
stc
xor
clc
ret
sbb
rcl
movl
loopne
repz
cld
aam
aad
cld
call
enter
lock
cmp
cmc
fcomip
int3
aam
xlat
repnz
std
cmp
mov
in
loop
fiadds
leave
lret
in
imul
stc
iret
lock
test
std
mov
int
decb
aam
repz
div
jmp
int3
sti
aam
leave
jmp
ret
out
rorl
call
aaa
cmc
ror
lret
fdivp
cmp
cmp
idiv
cmc
enter
orb
ss
stc
lret
rcl
fcom
in
loopne
ret
sbb
xor
fsubr
int
mov
rcl
cmp
not
call
hlt
ss
flds
ljmp
lret
loop
ss
clc
xlat
aam
addb
jecxz
in
mov
xchg
hlt
in
jecxz
call
iret
in
aas
in
neg
out
loopne
sti
vpavgb
mov
in
test
out
lret
cmp
iret
cmp
mov
enter
in
cli
ljmp
loope
sub
fprem1
ds
cld
in
out
not
test
fadd
test
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
sbb
add
add
mov
jmp
lock
fcmovne
sar
repz
xlat
iret
cmc
jecxz
std
ds
out
mov
loop
in
or
out
mov
repz
shr
call
div
into
rcr
stc
sub
ret
sub
fmull
icebp
int3
in
lret
fld
ss
in
addb
int3
xchg
fld1
in
rcll
out
cmc
xor
xor
ds
incl
cmp
lret
call
int3
int
idivl
ds
cli
aam
into
ffreep
cmp
xchg
mov
loop
ss
out
ljmp
imul
and
in
mov
out
out
out
mov
jmp
int3
call
fidivrl
filds
addb
in
shl
in
xchg
in
xor
icebp
fcomi
in
stc
fdivr
cmp
cmc
faddp
in
fld
into
out
test
icebp
sub
ret
in
cmc
rolb
loope
fucom
leave
mov
jmp
xchg
in
ljmp
int3
ljmp
iret
in
in
rol
call
lret
in
in
out
mov
cs
ss
iret
shr
cmp
lock
loopne
cmp
int3
call
aam
ljmp
cmp
cmp
test
cli
addl
clc
repnz
loopne
xchg
loop
call
cmp
les
sar
iret
in
sti
fdivrp
mov
divl
cmp
cmp
into
hlt
fildl
cli
xlat
ret
into
test
rolb
lds
ror
cli
out
jecxz
shl
shl
call
xchg
test
in
mov
ret
int
enter
in
cld
aas
rcl
sbb
ffreep
out
stc
out
in
mov
jmp
sub
lock
aaa
cmp
fldz
fcomp
cli
shl
loopne
test
call
lret
leave
sti
lret
in
iret
in
fdivp
cmp
call
popl
ret
lock
cmp
ss
aam
push
cmpb
jecxz
mul
mov
loope
mov
mov
ljmp
fucomip
not
shl
sarb
jmp
mov
lret
ror
aad
fcmove
cmp
cli
cmp
in
repnz
xchg
aad
out
rorb
xchg
loopne
jmp
in
shl
fcmovne
lret
cmp
cli
loope
repnz
aas
decb
fucom
mov
loope
out
int
fsubr
icebp
lock
ror
in
loopne
repz
div
in
loopne
lret
sub
lret
mov
cs
jmp
cmp
out
repz
stc
neg
mov
jecxz
lock
xor
shr
out
sar
cmp
ss
rcr
sti
repnz
filds
xchg
shl
nop
lret
lock
shr
int3
aaa
clc
in
cmp
int
les
fld
jmp
enter
jmp
leave
out
sarl
sarl
out
xchg
xchg
ljmp
out
ret
in
aam
fcmovnb
repz
rcl
lock
lock
fisttps
fimull
das
hlt
cmp
in
aaa
aam
xor
std
ds
shl
fsub
xchg
call
out
in
xor
cmp
cmp
aad
cmp
out
testl
neg
fildl
int3
enter
fcmovnbe
aam
push
imul
ret
xchg
fsub
fdivrp
out
ficoms
in
aad
xor
hlt
out
not
sar
out
out
cmp
fcmovnu
xor
neg
loope
fdivrp
fst
xchg
mov
rol
shl
out
xlat
cmc
sar
fidivl
cld
aad
cmp
aam
mov
lret
int
in
nop
xlat
rcr
hlt
stc
xor
fsubrp
fsqrt
shl
sarb
and
fmuls
cli
lret
into
nop
shrl
in
cli
clc
cmp
cmp
bnd
ret
loopne
jmp
mov
mov
lock
lock
fisttps
in
out
divb
xor
aad
idivl
jmp
enter
loopne
or
in
clc
aad
xor
repnz
div
fucomp
loope
in
ror
fsqrt
out
enter
out
lret
mov
cmc
sarl
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
mov
xor
test
jle
add
cmp
into
cmp
aaa
iret
int
cmp
clc
cld
hlt
loope
call
fsubp
lock
iret
ror
xor
neg
idiv
fsub
jecxz
out
fldl
in
test
jmp
int
in
lret
call
cmp
ljmp
into
nop
mov
shl
lret
cld
cli
fidivrs
int
loopne
shl
in
jecxz
cld
mov
rorl
xor
sarl
jmp
stc
xor
in
mov
clc
ret
mov
xchg
mov
enter
sarb
cmp
rcr
std
ret
jecxz
std
std
in
test
incl
into
hlt
in
ss
xor
aam
jmp
clc
hlt
rcr
test
enter
shl
in
and
fcmovnu
fdivr
fdivrs
fdivr
sti
mov
clc
or
int3
rorl
ret
std
repnz
cld
cli
ljmp
out
cld
std
fprem
sti
adcb
leave
in
in
repz
loopne
cmp
aam
shl
loope
sub
icebp
cmc
loopne
sub
cli
aad
enter
call
clc
push
out
mov
and
int
in
hlt
in
aam
int
imul
in
out
out
in
ljmp
mov
fsubr
loop
jmp
iret
repnz
cmp
fdivr
in
stc
cmp
hlt
test
in
fstpt
leave
leave
in
xchg
test
into
xor
int3
sar
aad
rcr
sti
sar
movb
out
cld
iret
decb
test
out
fyl2x
int3
clc
ds
int3
jecxz
loope
repnz
enter
stc
ret
rcl
lock
sbb
cld
clc
neg
cld
into
cmp
repz
fsubr
hlt
out
mov
sti
icebp
iret
addl
ljmp
cmc
cmp
lret
test
out
loopne
out
shl
call
fldln2
ljmp
repz
dec
out
xchg
fisttps
out
cmc
iret
fdivrs
cmp
cli
out
iret
aam
enter
aam
int
cli
shr
aam
lea
iret
in
aam
cli
int
into
ror
cmp
cmp
clc
mov
fcmovnb
enter
loope
jecxz
out
in
jmp
out
test
call
int3
in
jmp
mov
jmp
sti
or
out
sar
jmp
fadd
stc
int
xchg
out
ljmp
cmp
xor
enter
cmp
ljmp
mov
cmp
cli
out
cmp
int3
filds
clc
shr
mov
fists
lret
shl
hlt
out
int3
ror
jmp
cmp
aaa
in
rcr
cmp
cmc
in
jecxz
out
fsubr
decl
cmp
aad
out
idiv
xor
cmp
in
cld
enter
mov
loope
out
jmp
shll
rolb
cmp
test
and
shl
repnz
jmp
sar
cmpb
neg
fld
aam
fucomip
fmuls
mov
out
xor
int3
aad
repz
leave
jmp
mul
icebp
repnz
fmull
into
out
into
out
das
loop
fsubrl
in
fidivrl
loop
into
aas
aad
xacquire
cli
in
in
mov
test
out
int
aam
jmp
fdivr
xchg
fnstsw
idiv
stc
leave
fxch
out
lret
not
hlt
into
lock
std
shl
ss
addl
test
fadds
repnz
ljmp
cmpl
xchg
fcompp
in
test
out
into
xor
xor
cmp
iret
clc
sti
cmp
stc
enter
fcmovnu
iret
xchg
rclb
out
iret
xor
in
lret
xor
call
jecxz
ret
shr
out
cmc
imul
clc
ret
xor
int3
fcom
stc
cli
out
loopne
aam
clc
mov
stc
call
rcr
lock
fmul
sti
fiadds
mov
loopne
test
iret
xor
int
loop
icebp
xor
idiv
aam
aad
aad
cli
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
ret
addr16
shrl
add
add
mov
std
cli
sub
test
in
aad
out
cmc
int3
sarb
xor
out
and
cmc
cld
test
loope
leave
out
clc
aam
out
ds
repnz
jecxz
in
cli
popl
incb
in
das
lret
cmp
aas
lret
loope
ret
ljmp
and
aam
fcmovbe
fxch
fcmovnbe
call
in
idivb
ret
jmp
fcomp
loope
ret
mov
aam
cli
icebp
shl
sar
rcr
cmp
xor
adc
test
and
popl
into
fsubr
cmp
std
cli
fldlg2
cmp
xor
rol
mov
jecxz
lret
orb
aaa
jmp
stc
icebp
in
cmp
cmp
fisttpll
testl
xor
xor
cmc
cmp
sti
iret
cmp
lret
mov
icebp
in
mov
cs
sub
shr
jmp
jmp
std
jmp
int3
into
xchg
orl
in
int
cmp
iret
in
std
roll
fcmove
xchg
xchg
icebp
xchg
cli
ss
clc
in
fucomp
icebp
rol
in
cmp
fsubp
repnz
imul
out
call
xchg
out
in
int
sub
out
fstpt
cmp
rcl
clc
roll
xchg
into
xchg
xor
cli
shl
cmp
ret
std
mul
out
call
fdiv
mov
into
out
rcll
xor
xor
clc
ljmp
movl
xchg
roll
cld
lret
jmp
hlt
mov
mov
sbb
fstp
testb
shr
ljmp
loopne
lock
loope
orb
lret
repz
shll
neg
cmp
sar
in
fiaddl
in
fildl
int3
jmp
cmp
imul
loopne
cmp
fucomp
out
cmp
aad
enter
shl
adc
in
icebp
ss
aam
cmp
in
aad
out
mul
ret
lock
xchg
jecxz
in
in
out
aam
xor
ss
xor
into
xor
cld
int3
into
clc
cmp
stc
loope
sti
lret
mov
loopne
cmc
rol
in
aam
lret
std
jmp
call
out
cld
xor
cmc
in
inc
out
fsubp
loopne
repnz
divb
fprem1
out
icebp
div
fadd
sarl
test
rolb
in
mov
out
shl
jecxz
in
out
fucom
not
jmp
sti
fdiv
cld
clc
xor
mov
orl
in
iret
bnd
sar
sti
cmp
jecxz
repnz
ret
add
shl
in
iret
ret
sub
fcom
cmp
loopne
out
dec
xor
enter
addb
test
xor
cmp
cli
into
loop
hlt
cmp
in
fcmovne
call
std
fucomip
nop
in
mov
clc
shlb
clc
fsubrp
ror
fcmovbe
int3
sti
in
stc
fdivrp
xchg
or
rorb
sar
xor
xor
fidivrl
rcr
sub
loopne
ror
lret
jmp
enter
repz
jmp
sti
out
sarl
loop
out
cmp
ret
mov
ret
filds
stc
not
fdivrp
jmp
hlt
int
ffree
cmp
cmp
fstp
out
mov
rol
cli
into
out
ds
sub
rcr
faddp
cmp
in
decl
jmp
int3
jmp
sarb
std
loop
rcl
xlat
loope
loop
xchg
xor
xchg
ret
out
cli
std
icebp
icebp
loopne
loope
ds
sti
jmp
mov
call
xchg
repnz
out
cmp
cmp
stc
mov
ret
enter
cli
loope
or
ret
in
shlb
icebp
aad
aam
fldl
call
cmp
lret
repnz
jmp
std
out
aam
clc
loopne
test
xchg
mov
fucomip
call
in
cmp
ret
cmp
fxch
call
lock
push
clc
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
dec
push
int
mov
jle
add
in
int3
in
in
ret
repnz
jecxz
rolb
ret
mov
xchg
cld
jecxz
xchg
xchg
xor
xlat
jmp
std
out
loope
loopne
div
not
jmp
mov
xchg
div
xor
idiv
jmp
lock
ds
jmp
aad
into
xchg
mov
std
mov
out
xor
shr
not
hlt
shl
in
clc
cld
sar
repnz
cld
sti
in
in
in
out
rcr
in
out
cmc
clc
leave
cmp
bnd
cmp
fcomp
addb
or
int
mov
lock
xor
ljmp
repnz
loope
call
mov
mov
shl
loop
fmul
ljmp
cmp
int3
loop
shl
std
call
xlat
out
cld
in
nop
out
mul
fcom
int
aad
cmc
hlt
rcr
icebp
inc
aaa
cmp
fucomi
out
loopne
sbb
shl
int
xor
aam
aam
sarb
icebp
repnz
aam
mov
xchg
out
mov
div
lock
out
fcomp
shr
div
clc
std
fsubp
iret
xchg
in
faddp
mov
fimull
in
leave
cld
into
leave
ror
inc
std
iret
cmc
leave
ret
aad
mov
xlat
lock
iret
jmp
loop
aam
out
jmp
cmp
cmp
out
shr
fdiv
leave
fucom
loope
into
mov
xchg
jmp
jmp
fiadds
cli
out
cli
std
mov
xchg
xchg
loope
int
cmp
imul
stc
fnstcw
int3
fninit
aad
lock
shl
loopne
std
int
mov
lock
repz
ror
std
rcl
fcomi
ds
loopne
test
ret
int
iret
adcl
fmul
cmp
in
cmp
and
fsub
enter
test
mov
call
aaa
cld
in
ljmp
cmp
rcr
in
out
in
lret
iret
out
out
mov
jecxz
loop
not
int3
lock
faddp
int
rol
xbegin
loopne
jecxz
std
xchg
ret
lock
out
cld
icebp
iret
rcr
dec
neg
aaa
jmp
fldl
mov
ror
lds
idivb
imul
aaa
fcmovnu
dec
frndint
hlt
xchg
aad
fsubr
int3
out
xchg
xlat
sar
int
cmc
aaa
jmp
loop
aas
shl
stc
xor
flds
out
in
xchg
ss
lret
sti
leave
cmp
sti
out
jecxz
xlat
cmc
jmp
xchg
icebp
xchg
xor
int3
ss
out
cmp
cmp
dec
lret
repz
sarl
sub
in
les
out
addb
cmp
fucomp
repz
int3
cld
in
jmp
call
sar
mov
jmp
fadd
ror
aaa
loope
fcmovnb
aam
fdivr
sar
cld
sub
ljmp
fcom
in
out
int
rcr
lock
out
in
aam
flds
and
in
rcr
mov
sub
leave
loopne
fdiv
fidivrs
xor
loopne
cmp
int
fmull
leave
in
stc
ljmp
xor
neg
xor
call
call
xlat
sarl
cmc
call
fsub
icebp
fistpll
ret
icebp
out
ret
loopne
addb
jmp
fsubr
xor
cld
enter
into
loope
cmp
fcomip
mov
loop
mul
call
nop
aam
call
rcr
clc
repz
sti
out
cli
in
flds
std
ljmp
cmp
cli
fdivrl
jmp
fucomip
ss
fucomp
hlt
ret
fneni(8087
std
test
cmp
clc
loopne
repnz
cmp
div
in
std
test
jecxz
std
fcomp
fildl
out
test
xor
cmc
leave
in
fidivs
icebp
fdivr
clc
cmc
test
in
decl
aas
jmp
xor
jecxz
test
std
lock
enter
mov
jmp
mov
xlat
xor
in
vpsllq
iret
fucomp
fidivrs
fucom
fcmovnbe
fadds
out
jmp
faddl
iret
das
shll
ror
fdivrs
icebp
cmp
int
test
sti
leave
lret
jecxz
call
test
roll
out
icebp
repnz
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
mov
jle
add
sar
std
clc
out
loopne
in
xchg
mov
popl
repnz
ljmp
out
icebp
sbb
sti
mov
neg
xchg
xchg
lock
and
in
out
lret
cmp
xlat
rcr
lret
cli
jecxz
in
ret
jecxz,pt
cli
lock
int
jmp
loope
xor
enter
fstpt
cld
sar
ret
repz
cmp
mov
call
repnz
xchg
out
imul
fcomp
in
imul
int3
fsubr
iret
repz
out
jecxz
sar
fildl
rcr
nop
loope
cs
into
aam
sarl
lret
loop
test
testl
mov
rol
mov
xchg
imul
cli
divl
std
out
out
imul
mul
rol
test
mov
jmp
xchg
leave
nop
leave
mov
mov
cmp
fdiv
xlat
jecxz
repz
addl
add
fsubrp
or
fcom
loopne
xor
xchg
lret
bnd
loopne
icebp
jecxz
cmp
cmp
fcmovb
adc
xlat
cld
icebp
ret
shr
in
out
mov
xchg
cmp
loop
lret
xor
shr
loope
rcl
loop
int
ljmp
loop
aad
sub
shl
roll
ror
cmc
test
leave
fmul
rorl
into
hlt
fistpll
repz
stc
faddl
test
loopne
mov
ljmp
fadd
call
fdivp
ret
loopne,pt
leave
fdivr
loop
jmp
int
nop
enter
jmp
ror
lock
les
testl
out
xchg
loop
in
xor
sar
fdivs
loope
out
inc
cmc
shl
enter
loope
sar
nop
xchg
xor
repnz
out
into
in
xor
lock
int3
out
xchg
xchg
int3
loop
ret
cmc
in
sti
aad
aad
cmc
loop
std
loop
fucom
jmp
cmc
int3
call
jmp
out
fnstenv
aam
lret
jmp
idivl
sarl
out
out
leave
mov
out
in
mov
xchg
roll
xor
aam
out
call
aad
rol
mul
loop
ffree
ret
out
int
jecxz
mov
out
repnz
aaa
in
out
repnz
cld
idiv
fdiv
xor
hlt
fucom
cmc
stc
mov
test
in
in
out
repnz
clc
into
vpmuludq
aam
ret
aad
mul
ljmp
sti
sub
out
rcl
rcr
xor
fld
cmp
sbb
ret
ljmp
mov
test
out
ror
fsubrp
ljmp
fildl
fdivr
call
rcr
lret
iret
enter
rcl
sar
cmc
test
xlat
loop
mov
xchg
in
ljmp
icebp
xor
sarl
lret
neg
lock
fadd
test
enter
jecxz
nop
out
out
ret
call
icebp
fcmovnbe
int
mul
filds
flds
popl
rol
jmp
icebp
repz
fdiv
cmc
jecxz
std
cld
aad
mov
icebp
iret
xchg
loopne
stc
stc
enter
addb
cmp
fstp
clc
in
mov
xchg
loop
shl
loope
in
in
enter
std
cmp
cld
test
mov
faddl
loop
iret
xchg
loopne
jecxz
xor
jmp
lret
cli
iret
cld
fdiv
shl
test
stc
in
test
jmp
std
rolb
ljmp
lret
shr
cmc
fcomip
test
vpaddusw
ret
jmp
xchg
jmp
jmp
aad
lret
repz
cmp
ffree
cld
aad
ffree
enter
jecxz
repz
jmp
into
rcl
fidivrl
cmp
jmp
xlat
ret
ret
jmp
out
jecxz
mov
loop,pn
in
ljmp
neg
in
cmp
shl
in
test
int
stc
in
sub
cmp
ljmp
out
hlt
loop
int3
stc
loope
xchg
loopne
shr
iret
aad
shl
repnz
cmc
clc
sar
out
out
into
fists
loop
sarl
lock
ss
out
jecxz
fnsetpm(287
shr
fimull
mov
add
add
add
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
adc
xchg
add
add
lock
mov
xchg
fildll
int
int
out
int3
jmp
fdiv
stc
fcmovbe
jecxz
xchg
ljmp
jecxz
out
in
out
out
cmp
clc
int
fucomip
repnz
sti
test
loop
jecxz
icebp
in
mov
in
ljmp
iret
repz
fadd
aad
in
repz
lret
mov
flds
leave
out
jecxz
in
idiv
fmul
sarl
neg
shr
cmp
sti
out
orb
sarb
in
stc
ror
shl
jmp
cmp
les
ret
stc
mov
cld
rorl
repz
aad
cmp
clc
sti
les
fimuls
decl
rcr
ss
cmp
cld
loop
fprem
cli
rol
out
call
mov
adcb
call
std
fcomip
addb
adc
jmp
iret
fcmovbe
ljmp
aaa
in
repz
cmp
into
clc
adc
lret
loopne
mov
std
ljmp
iret
ret
out
leave
in
xlat
cmp
clc
loopne
fucom
cmp
test
lret
loopne
iret
int3
jmp
cmp
xlat
cmp
repnz
rol
xchg
into
jecxz
out
iret
nop
out
out
leave
sarl
cmc
fyl2x
hlt
cmp
cli
xchg
loope
mov
into
rclb
jmp
xor
repnz
fsubrp
repnz
repz
aad
lret
jmp
in
out
int3
in
into
ljmp
icebp
neg
sti
cli
lock
cmp
cld
out
into
in
out
in
mov
hlt
loop
int3
cmp
int3
aam
ss
cmp
incl
xchg
out
call
iret
out
ror
jmp
int3
neg
cmp
cli
xlat
sar
movl
xchg
repnz
out
cmp
leave
shlb
mul
cld
xor
orl
les
into
out
ljmp
cmp
sti
hlt
in
call
ljmp
aad
into
das
hlt
std
xor
xlat
fidivrs
cmp
fdivrl
lret
int3
xchg
orb
mov
rol
fldln2
cmp
cmp
aas
rcr
clc
xchg
jmp
lret
jmp
adc
int
sti
xor
in
fsubr
rol
into
shl
incb
idiv
decb
in
fsubr
shr
int
aaa
ror
int3
std
stc
ret
cmp
hlt
out
fcmovb
jmp
loop
aad
into
int
ljmp
sar
std
rcl
mov
int3
ljmp
repnz
leave
leave
enter
sbb
icebp
rcl
call
call
fsubp
jecxz
lock
shl
cmp
sar
bnd
fsincos
addb
enter
mov
xchg
hlt
in
into
in
enter
call
cli
fildl
out
xlat
loopne
clc
and
out
jmp
fpatan
cmp
leave
cmp
in
cmp
xor
jmp
lea
xor
out
lret
xor
shr
cmp
cli
ds
fiadds
cld
out
mov
rcl
les
aaa
cmp
ss
shr
lret
repz
xchg
out
fld
cld
in
loop
cld
xchg
sub
repz
call
cmp
icebp
in
adc
fcmovbe
call
sti
loop
mov
icebp
iret
jmp
in
into
sti
cmp
sti
rcl
cld
test
ret
loop
cld
jecxz
in
mov
lret
div
faddl
jecxz
xchg
jmp
add
xchg
dec
test
in
cmc
leave
fsubrp
lock
cmp
jecxz
xchg
clc
neg
xchg
sub
shl
repz
xor
div
std
repnz
sti
fisttps
test
int
repnz
xchg
sub
not
aad
test
cmp
inc
aad
test
int3
out
fdivr
call
call
repnz
cmp
in
sub
lds
ret
sti
sti
fsubr
out
decl
loop
int3
icebp
neg
rcr
rol
cmp
mov
enter
sti
push
mul
leave
out
lret
scas
xlat
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
fld
ss
jmp
jecxz
cmp
ror
out
loopne
out
mov
sub
stc
out
int3
sarb
rcr
faddl
in
enter
int
incb
cmp
aaa
repnz
hlt
enter
filds
rcr
jmp
iret
leave
in
in
cmc
fnstcw
jmp
cld
xlat
ds
cmp
cli
sbb
mov
jmp
out
mov
out
mov
xlat
iret
repnz
into
cmp
cmp
cmp
jmp
lret
jmp
loope
jecxz
aam
shl
aad
in
cmc
cmp
aam
rolb
loope
loopne
dec
test
nop
lret
jecxz
int3
cli
cmp
ds
shl
out
call
lret
ljmp
call
ds
or
ret
out
cmc
testb
mov
fxam
in
out
cmp
fldln2
lret
xlat
rol
ds
icebp
movb
lock
jmp
loop
cmp
cmp
cmp
into
aam
aam
cmp
mov
mov
ret
in
in
sarl
dec
roll
cmc
loopne
enter
test
jmp
aam
loop
repz
repnz
out
xor
xchg
jmp
fucompp
loope
loope
out
rcl
loope
jecxz
int
ljmp
ds
cli
lds
int3
fdiv
cmp
ljmp
cmp
loopne
ds
fsin
fst
int3
incb
cmc
out
in
clc
ljmp
ror
fdivr
loop
jecxz
les
lret
std
loope
jmp
not
shr
out
int3
sub
lock
shl
add
mov
out
mov
cmp
shrl
aad
cmp
not
fmulp
aas
aas
shll
fisttps
test
mov
loop
incb
stc
hlt
cmp
out
push
cmp
xlat
sbb
out
ljmp
mov
out
hlt
icebp
jecxz
clc
xor
out
xor
clc
into
ds
repz
sarb
roll
lret
fcoml
lret
shr
stc
cmp
clc
fcmove
ret
stc
roll
fadds
out
out
shr
int
xor
ss
icebp
neg
in
cmp
cmc
leave
jmp
call
repnz
cmc
in
icebp
jmp
aam
inc
shl
rcl
out
xlat
ror
aam
or
stc
lret
shr
xor
repz
ljmp
rcl
neg
repz
test
fildl
xchg
mov
out
cmp
xor
not
lret
int
fmulp
sar
fdiv
mov
in
in
int3
ljmp
lret
enter
lock
shl
clc
out
out
xchg
in
out
repnz
jmp
sti
idivb
jmp
cmc
repnz
fisttpl
out
test
in
aad
into
int3
aad
xor
fdivl
shr
aad
flds
test
push
xchg
or
fldz
fadd
rcr
imul
int
cmp
testb
fldl
lock
cmp
bnd
stc
cmp
testl
mov
nop
dec
rclb
repz
lret
addb
cmp
icebp
std
cmp
mov
sub
test
xor
cmp
stc
cmc
rcr
hlt
cmp
out
mov
mov
loope
rcl
ret
ret
fcmovnu
cmp
jmp
fadds
sti
lret
les
lock
enter
out
fmul
dec
ds
cmc
rol
sti
lret
mov
and
ljmp
aas
out
sti
jecxz
iret
std
loope
loop
in
out
test
test
fcmove
fdiv
cmp
cmp
fucom
loop
cli
into
out
xchg
mov
aam
int3
ljmp
loop
repz
addl
mov
aam
hlt
stc
lret
cmpl
out
cmp
enter
fcmovnu
and
xchg
or
les
lret
cld
in
aas
adc
bnd
aam
rolb
add
add
add
add
sbb
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
shlb
jle
out
cmc
int
cli
iret
xchg
lret
call
jmp
aas
in
lret
ffreep
repnz
mov
std
jecxz
fdivp
xchg
xor
xor
in
clc
int
fstpt
clc
into
cmp
aas
xchg
in
mov
in
mov
clc
fadd
lret
cli
repnz
fiaddl
clc
in
fcmovbe
fcomip
test
nop
mov
xchg
xor
rcr
jmp
lret
ffreep
rcl
cmp
test
adc
mov
clc
out
int3
imul
std
cmp
cmpl
out
aas
stc
jmp
in
lock
fcmovne
incb
idivb
repnz
out
lock
fildl
test
neg
in
loop
cld
out
std
repz
in
shr
xor
stc
in
xlat
out
adc
fcomi
decb
shr
out
out
mov
cmp
ret
in
lock
jmp
cmp
loopne
lds
or
loopne
call
xor
fadd
stc
cmp
call
into
idiv
div
cld
ret
xchg
clc
or
in
imul
repnz
sti
adc
into
cmp
loope
test
xchg
addb
cmp
in
aas
xor
fucomp
sbb
repz
mov
rcr
call
in
cmp
repz
out
xlat
rcr
mov
loop
in
cld
loope
enter
xchg
dec
loopne
fnstenv
xlat
cmp
ljmp
loopne
std
cmp
in
stc
fcmovnu
nop
rcr
decl
int3
lret
cmc
in
shr
cmp
fcomi
fmull
leave
loopne
jecxz
std
call
in
hlt
cmp
cld
lock
cmp
clc
ret
enter
mov
xor
cs
enter
fcmovne
into
loop,pt
aaa
jecxz
jmp
ret
std
mov
mov
incl
loope
xor
cmp
lret
cmp
mov
std
cmc
int3
mov
std
enter
adc
cs
int3
cmp
aas
out
out
aam
shl
xchg
mov
xchg
int3
loopne
xchg
xor
cmp
jmp
aas
jmp
aas
in
mov
stc
fdiv
fadds
fdivp
xchg
loopne
hlt
xor
cmp
cmp
jmp
rcl
std
cmp
cmp
xlat
lret
int
in
jecxz
jmp
mov
loop
aam
cld
repz
repz
roll
faddl
jecxz
in
aam
ljmp
int
ffreep
sar
cmp
fsub
mov
cmp
repnz
out
cmp
enter
ljmp
hlt
fsubr
xlat
xchg
in
repz
aad
into
sti
out
aam
out
cld
sti
cmp
rolb
aam
cli
into
mov
jecxz
test
divl
xor
cmp
ljmp
add
in
int3
lret
int3
mov
int
mov
out
in
repz
loopne
cld
out
shl
ret
enter
fmuls
lock
ret
out
sti
cmp
hlt
jmp
and
in
repz
lret
incl
jmp
ss
fdivr
enter
jmp
neg
stc
fiaddl
aad
cli
fsub
mov
xchg
loope
das
cmp
cmp
xor
clc
ret
ret
adc
out
loopne
repz
repz
das
lret
lret
into
cmp
aad
mul
out
call
in
in
fists
icebp
lret
cmp
fabs
out
in
fnsetpm(287
fprem1
loopne
cmp
rcll
enter
in
cmc
idiv
lret
fldlg2
aad
hlt
sti
clc
sar
stc
ffreep
stc
int
xchg
fmul
xor
fdivr
clc
cmp
repz
push
cmc
cld
frndint
std
or
jecxz
fsubr
in
xchg
sub
shl
hlt
int3
fadds
repnz
leave
lret
sti
fsub
xchg
xchg
xchg
imull
cmp
rcl
repnz
out
cmp
fcmovbe
repnz
out
test
mov
xchg
out
lret
out
cli
out
std
std
out
int
aad
loop
div
leave
jmp
iret
faddl
add
rcr
xor
sarl
faddl
popl
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
xor
stos
push
jge
add
add
repz
fidivl
call
not
fdiv
ret
idiv
fucomi
cld
mov
mov
in
shl
cld
das
int
cmp
aam
xchg
rol
test
int
mov
iret
icebp
jmp
icebp
out
int
leave
cmp
sti
loopne
std
cmp
fdiv
test
lret
loopne
cld
test
fisttps
int3
aad
fcmovnu
loope
in
faddp
xlat
movb
mov
loope
test
xor
fcom
repz
into
and
std
incl
in
ret
xor
mov
out
das
jecxz
in
iret
enter
cld
fcmovb
repz
aam
vpmulhuw
testb
mov
loope
ror
ret
cli
ss
jmp
loopne
les
out
iret
mov
xor
loope
xor
stc
out
fcmovnbe
cmp
in
ret
loope
repnz
out
mov
mov
enter
out
int
in
xor
rcl
ss
add
iret
cld
cmp
jmp
xchg
fdivr
std
cmc
loop
xor
aaa
icebp
xor
test
jmp
cmp
push
in
fcmove
clc
in
addl
aad
sarb
incl
faddp
inc
test
fucomip
movb
in
into
loope
aaa
xor
cmp
loope
testl
mov
out
leave
out
cmc
stc
int3
in
cli
cmp
out
xchg
call
test
ror
call
mov
int3
das
aaa
in
iret
jmp
leave
loope
iret
sarl
ffreep
loope
in
fcmovnu
out
xchg
adc
adcb
icebp
lret
cmp
mul
sbb
testb
cli
xlat
fimuls
and
cmp
cmp
ss
shlb
adc
rcl
cmp
ror
fistpll
ljmp
xchg
out
lds
xlat
jmp
fldl2e
repz
incb
out
std
clc
test
stc
leave
into
sti
loop
faddl
shlb
icebp
xor
clc
hlt
in
les
test
loope
cld
out
in
xchg
addb
call
lret
loopne
rol
cmpl
cli
leave
faddl
rcl
xchg
loopne
jmp
jmp
loope
shl
hlt
enter
fsubr
out
jmp
xchg
addb
sarb
cmp
sar
cmp
fdivr
mov
std
out
std
enter
xor
leave
std
aas
cmp
and
xabort
in
jecxz
iret
mov
xor
icebp
aam
fst
cmp
aam
ret
fimuls
test
sub
into
in
shll
into
cmp
in
cmp
shr
fldl2e
ret
in
lret
test
rcr
xor
jecxz
fst
fmul
aam
fstp
addb
in
icebp
test
loopne
xchg
hlt
hlt
xlat
fldcw
cmp
xor
aas
lret
idivl
clc
cld
ret
xlat
jmp
sbb
fsubrp
shl
rcr
not
in
ss
cmp
int
loop
or
loope
xchg
loopne
mov
cli
icebp
addb
int
lret
fdiv
in
shl
idivb
in
aam
fdivr
mov
testb
cmp
icebp
stc
rolb
sbb
fildl
xchg
jmp
out
xor
hlt
lret
test
aam
mov
int3
or
cmc
idiv
loop
fdiv
cmp
cmp
cmc
shl
icebp
into
cmc
cmc
icebp
aas
aam
in
rorb
div
in
icebp
in
out
aam
fnstsw
idiv
loopne
fsub
cmc
test
jmp
fimull
iret
shll
sti
jmp
ret
lds
test
ljmp
xchg
mov
in
fdivs
ss
stc
loopne
ss
stc
jecxz
jmp
call
in
xchg
icebp
test
mov
cmc
ljmp
hlt
repz
aaa
test
mov
neg
out
repnz
loopne
xchg
in
xor
ss
ljmp
fldl
aad
sub
out
cli
test
int3
hlt
or
leave
shr
cld
fldln2
xor
cmp
cmp
cld
sti
mov
cld
loop
enter
mov
into
lret
jmp
cmc
cld
cld
cmp
into
fisttpl
xchg
add
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
out
aam
loope
test
sti
hlt
jmp
into
out
ljmp
leave
jmp
or
ror
fcmovb
rorl
fndisi(8087
les
int3
das
clc
xor
clc
out
icebp
incb
in
xchg
out
mov
shr
xor
aam
out
out
shll
ds
cmp
leave
mov
vpor
fmul
les
aaa
out
in
in
cmp
adc
clc
inc
xchg
out
mov
lock
repnz
in
clc
repnz
out
mul
test
jecxz
popl
loop
out
cmp
rolb
sub
fldl
xlat
fldl
ljmp
in
cli
hlt
neg
icebp
rcr
fdecstp
mov
test
xor
jmp
enter
fptan
cmp
cld
fsub
test
addb
test
loope
into
loop
enter
cld
xor
sarb
out
ds
cli
jecxz
mov
fcmovu
iret
adcb
in
fucomi
fucomip
cmp
fst
xchg
rcl
jecxz
test
lret
in
int3
loope
xor
in
ljmp
jecxz
cmp
cli
xlat
in
jmp
ror
out
int3
ror
aad
in
std
repz
cmp
xlat
int3
test
jecxz
fldl2t
sbb
test
ss
ljmp
stc
cld
stc
repnz
loope
sar
ljmp
jmp
in
sar
int
in
jecxz
xlat
fsubp
cld
sti
out
mov
in
out
jecxz
mov
shrl
xor
stc
xor
xor
loopne
fdiv
test
movb
call
xor
enter
call
cli
test
fsubr
in
fstpt
xchg
loop
shl
mov
in
jmp
jecxz
cmp
call
stc
fxch
aam
mov
ljmp
fdivr
mov
repnz
ljmp
sarl
xor
not
cmp
clc
loop
and
xchg
loope
out
xor
int
divl
aaa
enter
aas
loopne
into
cmc
mov
mov
mov
jecxz
icebp
shlb
xor
xor
aad
cmp
loope
jecxz
cld
fcmovbe
icebp
aam
out
xlat
fimuls
mov
xor
xor
lock
out
loopne
cmp
cld
div
rol
mov
out
sti
int
mov
aam
repz
clc
cmp
std
test
xchg
cli
cld
mov
lock
xchg
xchg
loop
shl
into
neg
lret
xlat
fidivl
rol
icebp
aad
div
enter
fucomip
mov
loope
lret
into
lock
mov
lret
fdiv
sbb
cld
xchg
cld
fmul
roll
xchg
lret
shl
jmp
out
cmp
fucom
sti
rol
out
mov
in
mov
fisttpl
in
clc
in
int3
aaa
aaa
idiv
lock
into
sbb
cmpb
xchg
cmc
orl
xchg
enter
sub
out
out
sar
leave
fidivrl
fdivrs
cld
xchg
xchg
ret
rolb
out
into
loop
int
ljmp
cmp
out
filds
in
out
shl
in
mov
leave
xlat
xor
shl
std
iret
shl
enter
int
loop
shl
shr
in
out
cmp
enter
fcmovnu
repz
enter
xlat
jecxz
out
shl
out
xor
into
hlt
stc
rcl
in
cmp
loope
rorl
mov
in
int3
leave
test
test
ror
xlat
cli
into
icebp
hlt
cli
lret
shl
stc
loope
aas
call
rorl
das
shlb
in
fdivr
out
fmul
iret
fsub
clc
fsub
lret
lret
mov
in
shl
stc
aad
lret
repnz
cmp
adc
lds
or
loope
shl
sub
aad
cli
cmp
idivb
int3
xor
shl
sar
mov
rol
aam
out
loope
xor
out
lret
icebp
xor
std
iret
idiv
fnstsw
fdivr
push
in
enter
loope
xchg
xor
sti
cmp
jecxz
addl
leave
int
push
rorb
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
fidivrs
inc
xlat
scas
add
add
fisttpl
test
sub
sar
jmp
repz
jmp
div
std
adc
mov
out
fists
cld
xor
lret
jmp
cli
repnz
repnz
sarl
icebp
xchg
stc
lret
mov
filds
aam
aaa
cli
out
xor
xor
ss
flds
fcmovnb
mov
mov
out
xor
loop
jecxz
call
dec
rol
cld
or
lret
mov
out
mov
inc
shlb
hlt
into
xor
in
lock
ds
aas
rcl
xchg
xchg
nop
rolb
fadd
sti
enter
in
int
int
test
out
out
fcomp
fninit
aam
sbb
out
sti
int3
cmp
std
sti
cmc
xor
icebp
mov
into
mov
aad
ret
iret
lret
icebp
xor
icebp
dec
inc
in
fcmovnu
fsubrp
fcomip
call
loop
xorl
out
fsubr
xor
xlat
shl
fdiv
xchg
test
loope
ljmp
xchg
in
lret
xor
in
call
aam
repz
iret
ds
les
sti
adc
loopne
cmc
xor
fcmovbe
repnz
rcl
idiv
clc
repnz
fld
jmp
into
lock
imul
xor
in
std
lock
aam
repz
fucomip
in
loopne
aas
lret
test
test
hlt
test
in
in
fldl2e
out
cmp
out
out
lret
iret
loope
not
sbb
mov
enter
fstl
cli
in
fst
leave
cmp
out
aas
lret
fdivr
in
incl
ror
ss
icebp
clc
fucomi
cld
icebp
loopne,pt
shl
fcomp
loop
rorb
test
out
cli
sti
xchg
lock
int3
div
cmp
xor
cld
clc
hlt
test
loope
mov
out
xchg
call
in
into
in
fadds
sti
in
lds
stc
mov
in
lea
call
sar
iret
in
out
fisttpl
cmp
xchg
das
cmc
xor
std
int3
sbb
sti
out
fincstp
inc
fldl
ljmp
in
imul
into
out
sti
fcmovbe
into
rcl
rol
aad
loope
mov
out
xchg
xchg
mul
repnz
into
sti
xor
ljmp
shl
jmp
fiaddl
test
mov
loope
fcmovb
in
icebp
aam
into
cmp
ret
shl
rol
incb
in
clc
mov
vcmpss
out
int
fdivr
jmp
cmp
cld
rorl
xchg
shr
loope
in
iret
call
in
in
int
fistpll
ret
int3
mul
fmul
fiadds
call
xchg
call
aas
repz
xor
loopne
sub
fcom
call
loopne
mov
fmul
aam
xor
aaa
cli
lock
repnz
hlt
shl
fsubp
xchg
out
int
in
iret
cli
cmp
fcmovne
ss
xor
clc
cmpb
rcr
cmp
aad
mov
filds
in
xor
lock
shlb
into
cmp
ret
in
cli
test
fstp
cmc
loop
leave
ficoms
cmp
in
lret
fnstsw
ljmp
ljmp
mov
loope
nop
popl
cld
cmc
repz
fstpt
cmp
sti
roll
mov
addb
xchg
lock
into
cld
hlt
cmp
aam
int
lock
cld
test
ret
addl
xor
jmp
clc
cli
cmc
icebp
in
xor
lock
sbb
xlat
ret
sti
cld
stc
nop
dec
mov
out
xor
hlt
loopne
loopne
cmp
rcr
cmp
hlt
fisttpll
fcoml
xchg
hlt
ljmp
iret
ds
fnstsw
cmp
int3
lret
out
out
fisttps
in
int
sarl
cmp
ret
fdivp
fadds
icebp
repnz
in
shr
cmc
cmp
fdiv
ret
in
jmp
fisttpl
sbb
xorl
xor
into
out
div
call
jecxz
in
fadd
aam
std
test
sub
icebp
xchg
in
shll
shlb
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
push
test
add
jg
jle
int
fmul
out
hlt
shl
ds
ljmp
filds
xor
out
sub
into
shll
in
stc
xor
out
fadd
xlat
clc
test
stc
shr
into
aad
xor
icebp
idiv
xchg
fndisi(8087
loope
jecxz
icebp
out
into
out
out
aaa
aad
cmp
int
rcl
cmc
test
movl
mov
enter
clc
sti
lret
cmp
in
sti
std
lret
fsubp
std
lret
out
mov
in
out
jmp
fucomp
out
idiv
testb
jmp
cmp
shr
xlat
in
call
fnstcw
aas
cmp
cmc
out
loop
lds
in
into
hlt
shl
lret
shl
xor
ljmp
cmp
add
in
jmp
repnz
ror
clc
fnstenv
fmul
cmp
enter
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
