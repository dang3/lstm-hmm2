push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
and
mov
cmp
cs
shll
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
loope
gs
fmuls
push
test
add
les
inc
xchg
repz
or
adc
mov
cmp
xchg
jo
mov
push
pop
xchg
pop
sti
mov
mov
and
fxch
and
jmp
sbb
addl
test
xchg
addr16
mov
mov
mov
lcall
sbb
lahf
mov
fildll
sub
fnstenv
shll
mov
push
mov
imul
adc
pop
inc
pushf
and
xor
cmp
sarb
xchg
popa
fwait
jmp
mov
push
es
xchg
xchg
test
cmpl
icebp
test
jge
mov
lods
testb
jbe
enter
test
insl
add
negl
iret
and
enter
sbb
adc
add
xor
arpl
inc
in
xor
fistps
push
cmp
jmp
sub
mov
in
pop
sbb
xchg
xchg
mov
push
xchg
cld
add
jb
cld
xchg
fnstenv
aaa
lret
xchg
push
and
jae
enter
mov
push
jmp
and
or
inc
adc
lret
sbb
insl
mov
jo
and
jge
cmp
leave
cmpsl
xchg
stc
sbb
scas
mov
xor
sub
xchg
mov
and
jae
lea
fcmovb
fcompl
and
inc
jg
pop
mov
stc
in
inc
pop
je
pop
xor
stos
xlat
push
ret
xchg
cmp
dec
aam
pop
xchg
dec
ror
add
mov
lret
test
inc
lret
inc
xor
push
xor
push
push
mov
mov
pop
mov
cltd
in
sbb
sub
adc
sbb
stos
ljmp
ret
and
inc
outsl
mov
xchg
insl
push
fisubrl
in
ds
loop
cld
mov
cwtl
xchg
push
push
and
sub
repnz
ficompl
mov
icebp
sbb
inc
testl
sahf
jno
repz
xchg
mov
lods
push
mov
sbb
dec
in
pop
push
stos
xor
add
adc
stos
adc
outsb
sub
xchg
cs
mov
imul
loop
adc
lods
cld
int
jg
in
or
add
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
je
sub
aas
out
xchg
mov
rol
sub
pushf
xor
int3
sbb
mov
mov
mov
jne
testb
cmp
nop
cmc
sbb
pop
pop
enter
sub
cmp
adc
mov
adc
jae
popa
jns
ja
pop
outsl
jno
mov
cwtl
repnz
mov
out
cmpsb
test
and
lret
movsl
loope
add
mov
daa
test
data16
pusha
dec
jecxz
outsl
in
jb
dec
leave
mov
push
call
roll
add
ret
mov
pop
fisttpll
pop
gs
sti
mov
imul
add
daa
xchg
pusha
jle
mov
aad
add
mov
scas
adc
pop
xchg
push
sahf
mov
mov
mov
jmp
xchg
dec
jecxz
sahf
inc
and
lds
das
mov
pop
stos
inc
mov
and
pop
mov
fidivrl
fwait
es
sub
adc
nop
lcall
jle
push
scas
cmp
dec
mov
sbbb
lods
sti
sub
adc
sub
inc
repz
xor
enter
xchg
xor
cmp
xchg
je
and
pusha
dec
iret
dec
movsl
hlt
arpl
dec
xlat
pusha
data16
movsb
inc
in
hlt
mov
enter
dec
sbb
push
sbb
fmuls
jle
inc
or
sub
xchg
xor
mov
xlat
cmp
fdivrl
fnstenv
sub
repnz
xchg
leave
punpckldq
pop
and
sub
js
clc
pop
mov
xchg
addl
add
adc
sbb
stc
sub
dec
js
test
sbb
xchg
cmpsl
lds
adc
arpl
pop
sub
test
adc
jl
xchg
xchg
aad
or
in
das
mov
pop
ficoml
pop
vmread
ds
pop
loope
push
add
dec
popf
lods
xchg
add
mov
or
jmp
jb
mov
inc
loope
inc
subl
xchg
mov
loopne
cmc
sbb
mov
xor
jnp
in
xor
lds
popf
outsb
stc
or
popf
in
inc
aam
dec
mov
adc
add
stos
push
add
mov
sub
loope
popf
push
xor
pop
leave
jo
fistl
or
jl
and
filds
and
push
outsl
add
xchg
pop
pusha
mov
and
jnp
cmc
ss
sub
nop
popa
dec
mov
xchg
mov
ret
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
lahf
clc
mov
xchg
xor
dec
idiv
popf
iret
ss
or
adc
or
movsl
lcall
in
inc
fwait
mov
cmp
xchg
aam
aam
push
xchg
pop
test
inc
les
xchg
ss
xchg
pop
push
jmp
orb
cmp
add
jbe
jp
hlt
bound
add
cmc
fcomp
mov
call
mov
sahf
andl
mov
out
outsb
xlat
dec
lahf
jp
fdivr
xor
aad
scas
out
mov
cmpsb
movsb
and
push
nop
shl
push
aam
add
in
jno
and
jge
outsb
inc
movsb
lods
stos
dec
scas
test
outsl
and
pusha
jl
xor
sub
inc
cmpsb
cmp
xor
dec
xchg
cmp
les
dec
js
xor
out
push
cltd
xor
lock
stos
lahf
push
insl
hlt
or
pop
nop
popa
add
cmp
int
add
xor
fs
push
mov
cmp
stos
rcrl
aaa
dec
in
jno
test
outsb
sar
or
mov
ja
inc
js
jb
cmp
lods
test
pop
pop
js
pop
dec
out
lods
dec
mov
addb
repz
scas
xor
jg
movsl
stos
push
sbb
mov
arpl
repnz
and
test
in
inc
loopne
dec
enter
ljmp
testb
loope
and
imul
cmp
scas
push
call
dec
ja
in
adc
mov
loope
add
sub
dec
outsb
orb
fs
mov
test
mov
xchg
xlat
lock
ja
jmp
push
std
aas
and
push
xor
outsl
lret
imul
jbe
add
inc
adc
or
cld
jmp
sbb
pushl
gs
nop
mov
and
shl
and
jno
ljmp
sub
lods
cmpl
push
loopne
adc
imul
aam
jl
inc
sub
or
mov
cmpsl
and
and
jo
sub
in
cmc
add
xchg
jnp
mov
dec
shrb
and
into
add
in
lret
add
jbe
aam
and
sbb
push
adc
lret
jmp
pushf
mov
das
jns
mov
adc
enter
addl
jecxz
jge
and
mov
dec
xchg
pop
out
lret
test
fs
ret
aas
jl
out
cld
jnp
mov
or
xor
sbb
test
in
in
addr16
iret
stos
decl
mov
and
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
fnstcw
adc
sbb
ud2
loope
xor
in
mov
sub
call
insb
push
mov
ss
jne
fiaddl
jns
lods
mov
add
inc
xlat
dec
mov
jns
pop
fwait
or
dec
sub
sub
test
cmp
cmp
and
repnz
or
and
cmpsb
mov
mov
rolb
mov
nop
in
cwtl
fs
push
add
add
aad
incb
mov
js
jae
inc
in
push
push
push
aaa
mov
insb
jecxz
jecxz
fdivrl
js
mov
cltd
sub
jl
and
dec
aam
fdivp
add
leave
hlt
sbbl
lods
fcmovu
notb
je
aas
jbe
dec
xor
notl
mov
cmp
mov
add
jne
cmp
repnz
pushf
jo
das
mov
stos
mov
mov
sub
addr16
fadd
jg
or
mov
or
shll
or
sbb
call
pusha
dec
mov
fs
out
xchg
mov
xchg
aas
xor
pop
lcall
nop
daa
in
mov
scas
je
sbb
scas
lods
jo
sub
imul
dec
mov
mov
stos
rcrl
pop
add
loopne
lret
inc
sub
add
xchg
lret
push
call
shl
dec
add
imul
inc
add
mov
ss
sub
cmp
fisubrs
out
out
add
cmp
jl
or
test
clc
mov
lea
sub
pop
mov
mov
test
ds
out
lcall
or
mov
lods
enter
dec
pop
mov
lret
lcall
daa
jg
jmp
hlt
movsl
lret
jecxz
ficoml
push
and
sbb
jnp
adc
gs
fsubrs
jb
out
sbb
add
test
mov
jge
stos
lock
test
cmp
xchg
int3
lds
movsb
mov
push
or
test
jb
outsb
popa
test
dec
or
bound
shrl
lock
add
lret
mov
sbbl
mov
sahf
daa
lret
ss
loopne
pop
xchg
xlat
jg
dec
daa
scas
out
test
xchg
das
hlt
sbb
pop
xchg
loop
mov
ret
popa
mov
inc
add
push
fcmovnb
inc
ror
mov
and
ds
sbb
scas
rclb
fadd
out
outsl
jl
pushf
mov
aas
fcompl
cmc
xor
add
cld
mov
fnsetpm(287
insl
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
push
mov
sbb
and
sbb
cmp
sub
xorl
mov
test
xchg
jbe
and
cmp
fwait
inc
mov
jecxz
movsb
imul
je
dec
lods
push
popf
sub
out
dec
iret
inc
add
pop
jb
cmp
sbb
int3
int3
fiadds
rorb
sbb
fwait
and
test
push
andl
addb
xchg
cmp
lds
cmc
sub
add
inc
lahf
insl
xchg
mov
dec
das
mov
dec
dec
jecxz
pop
js
push
or
mov
out
mov
sub
pop
lods
mov
push
pop
mov
push
ss
mov
out
out
jl
imul
jl
xor
aad
dec
sub
dec
into
push
xchg
mov
pop
pushf
mov
push
int
callw
inc
xchg
jb
mov
out
cmp
ficompl
mov
xchg
dec
in
rclb
mov
jp
jp
and
xor
into
inc
pop
pop
jns
stos
aas
notl
cld
push
adc
sbb
sub
cmpsl
insb
jae
adc
mov
pop
dec
test
rcrb
mov
shl
xlat
mov
out
fs
fcoml
cmp
jb
mov
pop
push
inc
or
mov
and
xchg
cmpsl
mov
mov
fwait
pop
or
cld
or
lea
lods
adc
out
push
mov
sbb
icebp
xor
push
lds
jp
adc
pop
ljmp
daa
cmp
xchg
push
addb
adc
inc
popf
stos
outsl
jle
dec
fisubl
fwait
std
and
cltd
push
lds
dec
daa
xchg
std
mov
pop
fists
movsl
enter
jmp
loope
push
daa
and
mov
fdivrl
ror
aam
push
xchg
enter
rcl
inc
xlat
cli
mov
inc
inc
lahf
stos
fnstenv
mov
das
lock
popa
push
mov
test
xor
out
stos
pop
fucomi
shl
sarb
push
cltd
xchg
push
in
loopne
out
cld
scas
negl
test
aam
pop
pop
pusha
fildl
sbb
stos
iret
inc
mov
or
jb
mov
dec
test
dec
xchg
jle
idiv
std
mov
mov
jge
push
xor
loope
add
adc
call
addr16
shll
int3
xchg
test
mov
cmp
mov
fldenv
push
nop
imul
hlt
or
lock
push
mov
xchg
sub
cmp
div
and
xor
pusha
pop
shll
sub
mov
push
xchg
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
inc
sarl
adc
sbb
test
jo,pt
rcr
aaa
sbb
mov
jbe
jne
sub
ds
nop
push
iret
dec
imul
xchg
adc
pusha
aas
jbe
jle
clc
int
pop
lds
sub
sbb
adc
sahf
and
out
adc
push
dec
mov
mov
cmc
mov
sub
adc
add
inc
das
dec
test
adc
sub
imul
jp
out
loop
push
xor
fxch
movsb
repz
pushl
test
mov
jmp
cld
inc
or
xchg
mov
out
loopne
mov
jo
sbb
fldl
imul
add
gs
push
or
dec
fsubr
mov
movsl
insb
and
inc
add
dec
scas
addb
cltd
sbb
adc
out
fistpll
das
xchg
hlt
or
mov
mov
mov
leave
popf
ljmp
and
popf
cmc
jo
dec
pop
xor
and
arpl
cmp
cmpb
les
mov
xchg
decl
dec
adc
and
movsl
ja
adc
cmp
into
push
jo
mov
mov
addr16
pop
addr16
dec
lods
fs
sarl
fmuls
mov
jmp
xchg
adc
jae
jmp
pop
cld
cli
lock
lods
js
adc
add
daa
cwtl
dec
push
xchg
jno
mov
mov
or
jbe
out
sub
jnp
mov
shll
xor
arpl
xor
cmp
dec
xor
daa
sub
inc
sbb
insl
push
xor
lods
mov
push
sbb
test
xchg
loop
shrl
mov
or
repz
sbb
push
sub
xor
jo
roll
addl
or
mov
add
int3
xchg
fstp
jmp
outsb
es
ss
jmp
sub
test
and
or
test
add
or
xchg
sub
insb
ret
and
in
adc
addr16
bound
sub
in
xchg
fcom
mov
push
fwait
outsl
popf
cmp
fdivs
ja
or
sub
cltd
je
mov
loop
addr16
out
jl
fdiv
xchg
in
int3
or
adc
ret
std
xor
cmp
pop
repnz
arpl
cmpsl
inc
push
sub
imul
xlat
and
cli
sbb
scas
sbb
inc
dec
sbbl
cmp
inc
jne
aam
shlb
sub
sub
xchg
stos
or
call
fnstsw
loop
movsb
test
fisubl
inc
into
nop
cmp
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
fdivs
dec
negb
sbb
adc
sbb
jno
int
daa
pop
push
outsl
xchg
aam
push
cli
pop
leave
push
addr16
lock
rolb
insl
movsb
out
sbb
les
fimull
gs
sahf
push
xchg
adc
push
inc
jp
xchg
sbb
jnp
test
or
mov
push
lods
gs
sbb
mov
add
pop
and
mov
add
cmp
enter
mov
pop
inc
in
sbb
add
div
or
pop
rcll
jo
lcall
push
xchg
fnstsw
adc
dec
push
mov
stos
loope
mov
pop
push
inc
cmc
push
imul
mov
push
add
xor
ljmp
das
mov
or
das
lods
cmpsb
gs
push
lret
fsubs
outsb
out
cld
dec
out
mov
add
mov
pop
sub
add
lds
xchg
pop
sub
insb
xchg
cwtl
jno
fs
mov
sbb
lds
frstor
mov
push
mov
imul
gs
or
mov
inc
sbb
or
arpl
jle,pt
mov
dec
std
mov
sbb
pop
adcl
iret
clc
sub
jb
movsbl
pop
or
mov
test
popa
shl
jo
lds
shr
lret
loopne
popa
xchg
and
imulb
xor
shlw
orl
mov
aas
icebp
inc
lret
mov
ret
pushf
fwait
or
xor
or
push
xchg
lock
jecxz
mov
pushl
push
and
aaa
les
xor
mov
pop
jmp
cmpsb
cmpsl
cmp
ljmp
mov
int
xor
leave
cmp
cld
mov
sbb
xor
int3
push
fldl
icebp
xor
cli
dec
stos
loop
inc
push
je
pop
aaa
sbbb
jnp
jno
pop
add
jnp
icebp
inc
lea
lock
test
xchg
inc
pushf
test
push
inc
adc
push
stc
xchg
cld
cmc
add
sti
out
imul
or
scas
dec
adc
fidivrs
andl
push
mov
xchg
out
push
imul
xlat
sarl
dec
and
cmp
add
mov
push
rclb
leave
or
mov
and
push
xchg
adc
jp
adc
sub
sbb
cmpsb
xchg
pop
shll
and
xchg
push
xchg
or
or
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
jle
lock
and
sbb
push
in
div
clc
movsl
add
lcall
nop
jp
int3
inc
loop
push
add
sub
fmuls
pop
dec
divb
dec
xlat
sbb
xchg
dec
fsubl
pop
cmp
rcrb
mov
in
xor
out
inc
mov
movsb
xchg
and
adc
or
dec
js
xchg
and
cli
daa
cmp
roll
dec
or
pop
sub
xlat
pop
pop
inc
mov
add
dec
out
test
mov
jp
mov
pushf
std
mov
ret
sarl
jb
fnstenv
scas
sbb
inc
cltd
dec
dec
add
jae
daa
jge
push
sub
sbb
aas
jl
into
mov
fcmovu
xchg
dec
ficomps
dec
lcall
and
mov
mov
xchg
jp
mov
xor
subl
lods
lods
in
movsl
mov
xcrypt-ecb
cmpsl
int3
aas
add
push
mov
in
aaa
mov
xchg
dec
mov
aas
std
mov
fisubs
inc
mov
and
stc
mov
stos
pop
pop
xlat
mov
sbb
mov
sub
sub
xchg
xor
je
cmp
push
push
lods
or
add
add
pop
fsubp
imul
fcmovb
in
inc
add
aas
psllw
outsb
test
ss
data16
std
roll
and
cli
or
xchg
cld
pop
jne
arpl
in
xchg
and
mov
xlat
aam
out
mov
bound
add
sub
adc
fimuls
pusha
loop
shr
sub
cli
dec
es
jb
comiss
fstpt
mov
push
push
lea
and
adc
repz
and
std
cmp
pop
add
sub
jle
movl
sbb
mov
mov
or
int3
mov
mov
jne
scas
sbb
notl
mov
mov
inc
jo
cmp
orl
shrb
pop
mov
ret
inc
shl
inc
jo
mov
adc
mov
insb
out
sub
pop
dec
outsl
lock
xor
push
pop
push
push
mov
jmp
std
pop
cwtl
jmp
dec
nop
cmpsl
xchg
push
mov
xchg
mov
dec
gs
mov
mov
pop
inc
or
mov
push
xchg
sub
stc
jae
icebp
fbstp
mov
mov
fdivr
sti
xor
mov
and
and
xor
push
mov
std
scas
es
sbb
stos
mov
clc
jb
sub
es
insb
lods
movntq
rcr
enter
push
mov
test
mov
ret
imul
lods
enter
add
add
push
push
push
mov
icebp
add
pop
jmp
sbb
adc
sbb
adc
sbbb
mov
dec
cmp
mov
push
loopne
insl
sbb
movsb
xor
testb
jg
adc
mov
pop
cmp
aas
pop
jl
xor
cli
sbb
or
into
or
cli
nop
loop
pop
mov
lss
xchg
rorl
jmp
nopl
hlt
or
add
cmp
jle
or
xchg
xor
ja
push
inc
sti
push
pushf
cmpsl
iret
pop
push
jge
xor
lret
cld
adc
arpl
push
cmpsb
mov
jbe
mov
mov
aaa
adc
cmpsl
sbb
pop
dec
call
cld
adc
aad
in
faddl
mov
xor
outsb
test
push
mov
sahf
xchg
lods
xchg
mov
or
pop
pop
clc
dec
shlb
roll
jmp
mov
subb
cmc
xor
fwait
mov
cmc
lret
std
outsb
fmuls
mov
pop
subl
enter
adc
jae
cwtl
fisttps
ret
push
addr16
inc
xchg
testl
movsl
sbb
lods
mov
or
push
cli
ret
lahf
jb
orps
je
fdivrl
jecxz
call
add
bound
xlat
push
loopne
dec
ficomps
out
xchg
jge
arpl
mov
mov
push
out
adc
out
add
cltd
jmp
in
cmp
mov
test
push
cmc
pop
push
pop
adc
loop
push
or
dec
mov
xchg
inc
mov
xchg
sbb
jno
cmp
mov
test
mov
cmp
sbb
notb
daa
pop
mov
jp
sahf
rolb
pop
push
or
cmp
and
scas
add
cmpsb
or
sbb
sahf
stc
fldcw
cmp
das
js
push
mov
andb
mov
push
mov
pop
sbb
daa
outsb
mov
fnop
enter
lods
sbb
inc
xchg
pop
out
mov
fldln2
ud0
aas
jae
mov
outsb
mov
mov
fisttpl
jecxz
dec
push
notb
adc
and
cmpsb
xchg
orl
dec
pop
push
stos
inc
std
dec
lret
outsl
pop
mov
loopne
roll
in
js
jl
pop
dec
pop
inc
cmpsl
in
call
sarb
int3
inc
fwait
push
jo
mov
sub
roll
push
sbb
out
dec
daa
jne
sub
outsl
mov
xchg
ss
xor
sub
jg
je
test
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cmc
shll
in
sbb
adc
sbb
jo
xor
pop
mov
or
adc
mov
mov
or
jne
xchg
and
and
push
insl
dec
xchg
mov
xor
lahf
jb
stc
xchg
out
int3
sbb
iret
jne
shll
push
or
jo
mov
pop
fwait
jbe
sbb
popa
movsb
jl
sbb
or
cs
push
js
and
mov
aaa
aam
mov
shr
das
pop
ja
cltd
ret
push
push
fcomps
mov
and
mov
cmp
cmp
cmp
scas
cmpsb
xchg
pop
incl
adc
pop
dec
dec
loope
fldz
sub
adc
lea
in
mov
repz
mov
sub
cwtl
ret
push
std
lods
cmp
cltd
xchg
cmp
aam
outsb
pusha
dec
jns
mov
jb
sbb
or
xchg
adc
add
or
adc
xchg
add
mov
mov
add
dec
ljmp
aaa
adc
xchg
jbe
je
inc
incl
mov
inc
push
clc
mov
mov
lahf
push
jne
xchg
lahf
enter
pop
fiaddl
stc
mov
xchg
inc
inc
dec
fs
inc
push
sub
cltd
add
push
or
loope
and
jnp
dec
cmp
test
pop
movb
mov
mov
or
decb
jle
jl
stos
mov
and
mov
mov
in
incl
pop
xlat
adc
add
lods
test
sub
popf
add
push
pop
xor
fbld
mov
push
push
aad
xchg
cmpsb
adcl
and
pop
out
stos
push
pop
sti
aaa
mov
push
dec
mov
sub
and
aas
call
jne
sbb
sbbl
movsl
cwtl
mov
lds
cmp
into
ljmp
xor
cmp
mov
lods
mov
cmpsl
ret
jb
sahf
lods
xchg
add
adc
mov
sahf
pushw
push
std
roll
cmpsb
out
insl
push
sbb
xchg
add
sub
pop
pop
xor
sub
push
pusha
je
mov
mov
or
shlb
mov
push
loop,pn
push
cli
enter
mov
push
sbb
cmp
pop
lea
push
mov
jno
shll
adc
inc
mov
mov
ret
and
or
in
mov
mov
popf
test
jbe
xor
xchg
mov
dec
repnz
jno
jns
aad
cmp
and
popf
stos
lods
jl
jp
fwait
cmc
shl
and
inc
push
lcall
pop
jge
mov
push
push
mov
ret
or
add
add
les
or
pause
adc
fistps
sbb
adc
sbb
out
stc
jno
sbb
ljmp
ds
xor
xchg
ds
data16
outsl
jbe
dec
cmp
out
dec
in
dec
andb
adc
and
mov
sbb
imul
pop
pop
mov
sar
xchg
xchg
xor
loope
adc
test
jno
scas
jl
mov
pop
imul
hlt
push
push
jmp
sub
xor
outsl
xor
scas
adc
mov
shll
xchg
inc
pop
out
aas
xor
dec
xor
and
pushf
fistpl
lret
shlb
jo
pop
sbbb
jl
test
xor
shrb
rorl
dec
adc
xor
rcrl
les
inc
icebp
gs
std
xorb
adc
jno
xor
mov
maxps
bnd
xchg
outsb
mov
into
loope
push
and
xchg
call
cmp
jmp
sti
mov
mov
pop
mov
repz
test
mov
dec
mov
pop
shlb
pop
aaa
and
int
pop
pop
xchg
jno
mov
leave
popa
fistpll
mov
fs
adc
mov
out
loopne
adc
pusha
stos
bound
ja
and
cmp
add
es
add
mov
into
pop
loopne
out
test
dec
test
adc
jl
mov
cmpsl
jmp
pop
jb
sbb
mov
cmc
mov
inc
mov
les
add
int3
call
lea
lcall
sbb
mov
cs
stos
or
xor
mov
fcmovbe
out
mov
sbb
cmp
mov
dec
push
insb
int
add
into
popf
adc
fistpll
jmp
push
push
or
in
lock
mov
je
pop
cltd
mov
pop
rolb
and
push
and
iret
or
push
dec
cmp
lods
bound
fildl
add
mov
das
aad
sbb
inc
adc
xchg
jge
push
mov
clc
cli
sbb
inc
cmp
popf
push
xor
addl
pop
cmp
popa
sub
jmp
stos
inc
in
sbb
shrb
aas
xor
mov
ret
pusha
sbb
or
mov
xor
addl
int
mov
dec
pop
add
adc
cwtl
inc
mov
jnp
inc
sti
pop
out
aad
pop
orb
aad
in
aas
mov
sub
imul
loope
lods
lods
repnz
xor
jp
mov
dec
sub
outsb
and
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
xorb
loopne
lock
sub
insl
icebp
fninit
hlt
push
das
jne
iret
fnstcw
rorb
fs
xchg
ljmp
push
or
outsb
std
aaa
add
pop
ss
mov
adcl
lds
stc
mov
jecxz
dec
out
repnz
push
cs
addr16
adc
jge
mov
test
out
imul
mov
jle
dec
cmp
int3
nop
inc
and
std
js
sbb
insl
mov
xchg
inc
nop
movsl
sbbl
adc
rol
mov
shlb
cwtl
push
testl
add
dec
xor
je
out
std
pop
push
shll
sahf
sbb
out
jb
leave
mov
mov
xor
dec
cwtl
sub
mov
sar
push
in
pop
mov
gs
mov
or
mov
xchg
in
loope
frstor
aas
push
cmp
imul
jge,pt
xchg
adcb
mov
outsl
fstps
xchg
in
inc
mov
inc
fsubs
pop
pop
pop
inc
mov
int3
clc
pushf
or
jae
icebp
push
cmp
inc
sbb
shll
xor
test
pop
out
mov
cmc
mov
test
fwait
test
xchg
sbbb
les
addb
adc
push
add
pop
push
inc
xchg
lods
jnp
mov
jne
cmp
mov
push
outsb
mov
nop
add
lret
sahf
adc
xchg
enter
in
rcl
cmpsl
daa
cmp
inc
popa
xchg
pop
jl
ss
clc
dec
subb
loope
sti
int3
mov
dec
sbb
dec
push
pop
and
jo
lret
sub
or
leave
mov
fisttps
xchg
adc
mov
mov
mov
xchg
rolb
lea
in
test
dec
xchg
or
cmp
jmp
je
jp
mov
cmp
xchg
mov
dec
test
push
mov
insl
lret
xchg
movsl
push
outsl
andl
std
add
and
divl
outsb
aas
pop
inc
mov
push
cld
cli
test
lds
mov
push
js
clc
cmp
fcmovnbe
sbb
pop
adc
cmp
jmp
add
pop
add
adc
stos
xlat
imul
dec
jl
jecxz
aas
push
lock
jmp
xchg
repz
pop
ljmp
inc
sti
out
int
insl
push
fwait
sbb
ret
out
into
mov
xchg
dec
xor
inc
stos
cmp
push
stos
inc
stc
cmp
shlb
jno
pop
mov
xchg
mov
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
int
js
sbb
and
sbb
sbb
pop
aas
mov
dec
in
pop
push
fdivl
jp
lods
dec
stos
daa
enter
shr
pop
add
inc
xchg
inc
cmp
and
cmp
outsl
and
ljmp
mov
cmc
andl
push
nop
rclb
cmp
movsl
cld
std
push
jbe
shll
mov
jecxz
cmp
sbb
jnp
sbb
test
pop
mov
in
cwtl
lret
fisttpll
cmp
push
cmp
mov
in
sub
xor
test
mov
rclb
add
push
sahf
insb
inc
lahf
jl
cmpsb
pop
cmp
daa
xchg
fwait
xchg
icebp
and
xchg
inc
xchg
lods
mov
pop
inc
popa
clc
out
int
ja
jbe
mov
xor
shrb
insl
and
push
imul
mov
in
push
aaa
fmul
and
es
add
test
push
xchg
or
test
adc
rol
sbb
xchg
lahf
call
leave
shlb
cmp
adc
pop
into
dec
fsubrl
sbb
jmp
lcall
shll
push
push
addr16
std
push
arpl
je
test
test
mov
daa
jmp
cmp
mov
les
xchg
decw
aam
or
sbbb
lret
adc
pop
cmp
jnp
je
gs
into
montmul
cmpsb
inc
repz
mov
std
jnp
sarb
jl
xlat
jg
lods
pop
mov
push
xor
popf
mov
das
push
mov
push
jecxz
and
jecxz
aas
mov
sbb
cld
cmp
pusha
pop
jge
pop
adc
xchg
les
jnp
repz
notb
aas
sub
int3
inc
fnstcw
loope
test
adc
pop
inc
inc
loop
insl
push
add
xor
adc
ret
lret
cmp
pusha
insl
mov
icebp
cltd
sub
sarl
in
mov
outsl
mov
push
insl
imul
push
lahf
push
jmp
sbb
jl
cli
jno
popf
dec
popa
pop
push
loopne
pop
adc
xchg
pop
xchg
inc
stos
xchg
sub
or
fisubs
pushl
inc
cltd
jecxz
sbb
aad
push
cld
jb
adc
pop
xchg
fsts
testb
mov
lret
jl
adc
stos
loop
dec
jmp
and
jne
sbb
in
out
test
mov
jno
inc
mov
in
es
dec
jo
push
stos
int3
ds
sub
or
aam
hlt
sub
mov
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
int3
lcall
and
sbb
fs
lea
arpl
push
push
mov
rclb
xor
jae
xor
push
cmpsl
push
sub
aas
inc
cmp
push
lret
ss
adc
scas
mov
push
mov
cmpsb
push
inc
fistpl
ss
xchg
or
inc
bound
xchg
stos
pop
cld
dec
lret
arpl
pop
inc
and
ret
int3
mov
mov
icebp
push
stos
leave
mov
mov
in
push
jae
dec
cmc
mov
shlb
dec
gs
sbb
and
xor
push
sbb
xchg
sti
pusha
adc
mov
les
sbb
fwait
les
orb
push
xor
xlat
loop
loope
mov
scas
ja
and
stos
inc
cmp
sbb
inc
mov
cmc
movsl
xchg
pop
aam
xchg
dec
mov
xor
cmp
cmp
stos
shll
and
into
jecxz
xlat
test
sbb
xchg
lahf
in
cli
out
notb
hlt
std
adc
push
cwtl
scas
sbb
jns
pop
pop
cmp
js
shll
mov
popf
js
jg
fwait
inc
int3
ffreep
jnp
pop
js
mov
jb
pop
xchg
mov
sbb
repz
ljmp
test
jo
sbb
sarb
mov
pop
in
adc
push
aam
jns
adc
in
scas
lret
lea
out
in
or
push
cmp
inc
adc
popf
inc
xor
cmpsl
insl
cmp
fistl
and
cmp
aad
jbe
rcrl
nop
lcall
push
scas
nop
jle
add
fiadds
mov
jg,pn
lahf
and
enter
adc
pop
ret
out
xlat
cs
cs
mov
adc
movsl
xchg
lcall
aaa
push
out
nop
dec
adc
mov
add
xchg
xchg
jno
out
popa
jno
fld
mov
sti
cmp
mov
pop
xor
mov
in
xor
cmc
mov
aad
mov
xchg
scas
jns
xchg
cmpsl
lea
cltd
cwtl
mull
or
pop
jnp
fisubs
stos
lcall
jl
arpl
repnz
jno
mov
mulb
test
fisubs
cli
jno
mov
lods
jmp
sbb
aam
shll
jle
das
test
push
popa
in
mov
aas
cmpsl
and
and
fstpt
lock
xchg
pop
arpl
fwait
push
andb
mov
into
add
mov
push
sti
std
out
xchg
xchg
scas
xchg
imul
ja
sti
lret
jl
pop
pop
fcom
fmul
pop
outsl
mov
in
mov
xchg
adc
cmpsb
mov
outsb
mov
stos
cmp
add
test
inc
adc
inc
cld
mov
mov
jmp
dec
lret
repz
cmp
fildl
imul
pop
dec
fisttps
adc
stc
mov
out
test
cwtl
inc
inc
adc
stos
movsl
xor
cmp
mov
in
dec
and
icebp
sahf
cwtl
inc
adc
les
imul
lods
daa
mov
push
mov
cmp
push
orl
stc
inc
gs
fbstp
aam
or
jg
jne
push
pusha
lods
je
mov
out
or
mov
adc
jmp
push
cmc
call
loop
rcll
add
cmp
pop
rcll
jmp
les
pop
loopne
lret
sbb
sub
stos
mov
int
bound
js
add
lret
notb
push
pusha
mov
pop
sbb
dec
fisubs
dec
jp
enter
pushf
xor
lods
mov
cmp
std
or
fnstenv
fbld
je
push
pop
cmp
mov
mov
std
int
mov
sarl
adc
rorl
pop
test
and
add
fcomps
js
out
cwtl
sbb
shlb
rorl
mov
lods
jo
pop
mov
loope
test
not
jbe
test
xlat
adc
stc
dec
adc
push
mov
aad
push
mov
ljmp
cmp
mov
cld
push
aas
cmpsb
leave
sahf
cld
add
inc
out
sub
add
shl
test
mov
sbb
aam
sub
outsl
fstl
stos
dec
lods
in
ss
test
mov
sahf
add
jle
mov
cmp
sub
rorl
clc
test
jle
mov
negb
daa
fiadds
sbb
das
in
mov
sbb
mov
and
xor
or
jecxz
arpl
pop
lock
lds
xor
daa
and
test
adc
mov
sbb
and
xlat
sbb
lock
and
subl
sub
ret
sarl
mov
push
xchg
f2xm1
push
dec
into
jns
sub
or
cmp
adc
mov
lods
xor
and
imul
mov
test
outsb
pusha
idivb
inc
and
fldenv
fwait
es
addl
jae
cmp
pop
cmp
fbstp
js
cmp
xchg
inc
cmp
mov
adc
cmp
push
into
push
push
or
and
mov
test
xchg
les
sbb
dec
add
jecxz
jle
push
push
inc
dec
xchg
mov
orb
aam
or
jne
and
stc
inc
push
add
push
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
push
inc
push
rcrl
and
sbb
clc
es
jae
xor
test
mov
inc
xor
mov
les
xchg
testb
jo
pop
out
mov
clc
daa
das
dec
and
jno
or
push
push
cmpsl
lret
jb
gs
cmp
fldenv
inc
sbb
daa
cmp
fucomip
insb
pushf
mov
adc
lds
imul
push
mov
fsubr
fs
sbb
or
imul
lret
rorl
imul
pusha
lcall
adc
iret
adc
xchg
cwtl
stos
sbbb
stc
mov
jecxz
loop
in
push
mov
stos
push
or
or
cmp
icebp
cmpb
rcrl
movsb
mov
add
imul
and
sub
pop
fisttpll
sub
fdivl
es
scas
stos
dec
add
fistps
mov
cld
gs
out
orl
test
fsubrs
lret
loopne
pusha
xor
and
out
nop
test
xchg
bnd
xlat
daa
mov
pop
sti
lcall
in
enter
lret
mov
mov
in
sahf
push
loopne
cltd
mov
cli
jne
jbe
lahf
scas
rcll
sti
mov
pop
sub
dec
subb
dec
movsb
lock
loop
xchg
or
ds
imul
cwtl
icebp
addr16
into
jne
or
push
out
sub
stos
mov
outsl
adc
fidivrl
in
adc
cmp
js
cmp
sbb
xor
lret
cwtl
loop
push
outsl
pop
out
ljmp
leave
adc
or
adc
mov
rcll
push
leave
movsl
out
cmpsl
sub
xchg
push
and
les
mov
fsubp
das
stos
inc
out
lods
dec
fidivs
fwait
sti
xchg
add
pop
dec
xchg
mov
xor
iret
imul
sbb
mov
mov
insl
scas
jb
ljmp
xor
or
or
xchg
inc
push
mov
test
sbb
cltd
adc
dec
add
call
mov
xlat
jmp
push
imul
sub
fcoml
fst
fsub
mov
or
add
movsb
add
std
lahf
pop
mov
inc
enter
sub
xlat
xor
sahf
out
cmp
sbb
cmp
aam
dec
cmpsl
lret
sub
or
in
push
dec
or
push
insl
outsb
push
aam
aas
mov
sub
aam
or
mov
gs
sub
addr16
dec
xchg
neg
popa
push
mov
into
xchg
pop
push
or
xchg
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
jecxz
loope
dec
mov
pop
mov
mov
sbb
shrb
sub
sub
push
out
jp
cli
ljmp
jg
insb
shlb
push
add
or
aad
in
or
lcall
inc
jmp
arpl
aaa
lods
mov
fimuls
daa
jb
ljmp
jle
pop
or
mov
aam
outsb
push
data16
imul
mov
movsl
pushf
jae
sahf
lock
jnp
fcoms
jecxz
leave
and
push
dec
mov
jmp
outsl
add
jb
xor
add
lahf
cs
mov
cld
bound
mov
imul
out
fs
jne
fisttpl
in
repz
or
push
les
lret
cmpsl
scas
data16
sarl
lds
cmpsb
stos
adc
xchg
or
lcall
ljmp
xor
fsts
inc
adcl
out
inc
or
testb
jo
scas
sub
fsubrl
cltd
outsl
scas
mov
ret
je
clc
xor
scas
add
sub
push
cld
xor
mov
push
popa
rcrb
adc
ds
cld
insb
mov
hlt
push
dec
jp
sarl
fwait
notb
cmp
jmp
jnp
ret
jg
xor
fnsave
ja
das
lret
cmpsb
push
jo
xor
aam
xchg
jo
inc
jle
pusha
std
sti
mov
push
testb
lock
mov
les
in
popf
pop
xor
sbb
mov
in
ret
jo
sbb
cmp
mov
jle
fs
nop
lahf
lahf
jne
xor
sbb
vmwrite
xorl
and
xchg
sub
push
cltd
fwait
ljmp
fiaddl
jl
les
push
leave
xor
mov
cmp
int
dec
cmp
inc
xor
in
mov
mov
int3
jecxz
cmc
push
sub
mov
pop
les
jmp
je
inc
xchg
push
cli
mov
jnp
adc
hlt
push
lret
lods
and
dec
les
incb
das
insb
xlat
int
push
xor
push
dec
enter
dec
and
or
popa
pop
scas
dec
dec
jl
orb
loopne
dec
push
push
mov
js
cs
inc
hlt
enter
notb
mov
loop
outsl
mov
movhps
jnp
dec
jb,pn
ret
fdiv
out
add
cmp
pop
jno
pop
mov
pop
in
movsb
insl
loopne
push
je
mov
xchg
xchg
popa
test
scas
and
data16
pop
push
or
push
fdivrp
pop
xlat
cmpl
adc
adc
add
pop
pop
push
test
add
inc
incl
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
lret
mov
adc
sbb
adc
negl
cmp
inc
add
test
lods
clc
mov
fs
adc
xchg
jg
aad
hlt
xchg
sub
popa
repnz
push
pop
push
sbb
cmp
and
push
inc
cmpsl
sbb
fcos
mov
mov
inc
aam
bound
std
mov
enter
into
cmove
ret
cli
xor
mov
inc
mov
dec
and
sbbb
inc
xchg
add
push
or
add
ficomps
xor
pop
pop
je
in
sub
xchg
stos
sbb
in
inc
aas
test
outsl
cs
jmp
add
cmp
stos
rol
inc
mov
scas
lock
leave
insl
inc
loope
adcb
xchg
cmc
fidivl
fildl
jbe
xor
rorl
outsl
cmp
adc
fcmovb
dec
mov
lock
faddl
mov
dec
xorb
mov
inc
inc
enter
push
pop
call
repnz
ss
xlat
or
mov
ret
inc
decl
mov
mov
mov
mov
adc
mov
imul
sbb
inc
in
push
or
scas
fists
rcrl
fs
or
or
or
mov
inc
push
sarb
pop
push
push
shrl
jecxz
adc
lret
shl
lock
ds
iret
or
prefetchnta
jle
nop
mov
imul
jle
dec
jl
aad
cmp
xchg
std
push
pop
repz
aaa
add
fcoms
cmp
int3
cmp
arpl
mov
testl
dec
dec
arpl
hlt
mov
in
sbb
cmpb
add
shll
lods
inc
pop
cwtl
addr16
add
jb
mov
cli
jmp
js
jge
iret
rcrl
cmc
loop
or
push
repz
sub
popa
aaa
adc
call
fnstcw
jmp
cmpsb
insb
test
xor
out
arpl
cmp
fiaddl
lods
xchg
dec
cmp
add
dec
xor
pop
jmp
in
and
lock
fwait
mov
je
into
adc
inc
xor
mov
jns
xor
mov
pop
xchg
jno
rclb
adc
mov
addr16
into
or
fidivrs
jb
and
mov
pop
pop
mov
jbe
sub
mov
ficompl
mov
subb
sarb
adc
pop
idivb
push
adc
sub
or
sbb
les
and
mov
fildl
pop
int3
hlt
ror
ss
cmpsb
out
lahf
mov
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
out
aas
sti
loope
loope
mov
je
xchg
sbb
addr16
fidivs
lock
les
cmpsb
mov
push
sti
test
xlat
and
or
jge
lcall
sbb
scas
sbb
and
dec
dec
jno
pop
nop
jmp
imul
mov
mov
pop
and
pop
dec
mov
dec
ds
push
iret
mov
loope
outsb
sbb
mov
push
xchg
das
enter
outsl
mov
aad
lahf
outsl
loope
mov
setle
repz
pop
or
dec
fdivs
popa
push
jge
roll
add
push
adc
flds
mov
push
cmp
ljmp
lds
leave
inc
scas
dec
push
xorl
fstpt
lods
jb
xchg
jne
push
fstl
push
and
or
inc
mov
repnz
lods
jbe
xchg
or
aaa
sub
fidivrl
decl
sbb
test
int
stos
repz
sahf
cmp
dec
les
imul
sbb
loop
mov
adc
aaa
nop
inc
aad
gs
mov
mov
sub
push
call
xor
mov
and
sbb
add
adc
sahf
enter
jl
ss
lods
xchg
sbb
and
call
mov
repz
inc
aad
dec
test
insb
faddp
nop
or
into
jno
and
loopne
push
lret
push
push
pop
add
adc
shl
add
inc
loope
loop
jle
mov
fbld
xchg
push
mov
lret
dec
cld
mov
fiadds
jp
scas
outsb
push
lods
add
dec
enter
insb
cmpsl
xor
dec
fcomps
popf
push
inc
std
inc
int3
or
iret
aaa
mov
lret
fstps
sub
out
pop
dec
inc
jns
and
or
test
mov
jb
sbb
fisubs
and
mov
fucomi
mov
sub
mov
lds
ss
mov
lods
popa
xchg
jg
nop
gs
mov
aam
jg
fcmovbe
nop
jne
cwtl
test
pop
stos
pop
sbb
mov
xchg
addl
cmp
add
mov
mov
mov
jmp
push
cmp
repz
pop
incb
push
inc
sub
dec
xchg
loop
sbb
mov
mov
add
imul
sbb
shlb
and
mov
fsubs
jmp
xor
out
and
sub
cmp
pusha
cltd
sub
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
or
mov
sbb
and
sbb
and
loopne
xchg
rolb
popf
adc
push
stos
push
clc
out
js
addr16
xchg
sbb
cmp
push
sbb
dec
push
mov
push
js
enter
insl
or
mov
sub
mov
xchg
arpl
dec
jno
test
jo
enter
sbb
arpl
push
mov
stos
iret
out
xor
sbb
sti
scas
movsb
in
cmp
pop
sbb
xchg
mov
jle
fs
push
sar
sub
scas
push
jg
mov
sahf
cmp
jle
and
push
call
push
rcrl
inc
cmp
flds
cmc
movsb
scas
jb
or
cld
mov
jnp
jle
addr16
mov
nop
dec
bound
sub
je
insb
push
cmp
or
int3
hlt
adc
add
pop
pop
or
mov
cltd
fwait
push
xchg
xchg
dec
mov
std
or
iret
push
or
xor
cmpsl
jb
or
les
add
ficoms
clc
std
lods
pushf
mov
cmpsl
pop
mov
test
dec
sub
loopne
pop
push
addr16
add
xchg
mov
mov
shlb
fwait
outsl
cmp
xor
jmp
jae
jmp
mov
pop
cmp
cmp
cmp
leave
jns
dec
fbstp
addr16
rolb
pop
std
xor
fs
mov
mov
stos
imul
test
or
outsb
cltd
cmp
in
call
addr16
mov
mov
xchg
loopne
call
dec
arpl
jno
jo
sti
sub
add
and
jnp
cs
mov
inc
test
adc
daa
ret
loop
ss
icebp
sbb
mov
ljmp
or
dec
das
and
outsb
adc
pop
xor
sub
lds
data16
fs
sub
pop
xchg
cmp
push
and
icebp
sbb
sub
dec
sub
jp
cltd
bound
call
mov
into
imul
mov
add
jno
hlt
orb
pop
inc
gs
and
sbb
repz
xchg
popa
pop
das
push
idivl
xchg
loope
push
ja
xchg
cmp
dec
das
inc
mov
sub
xor
stos
orl
aas
mov
mov
inc
and
inc
lea
mov
lcall
xchg
fidivl
in
popa
je
lds
sbb
test
subb
and
test
icebp
sbb
loopne
cld
popa
insl
nop
or
lods
das
mov
add
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
xor
and
sbb
ret
outsb
testb
fs
int3
push
add
les
sub
cwtl
inc
sti
les
daa
fisubs
add
or
jb
mov
pop
xchg
cltd
cmp
enter
scas
and
orl
push
shr
add
lds
aaa
adc
sahf
mov
mov
mov
inc
jecxz
or
testl
pusha
jl
mov
pop
je
adc
and
pop
pusha
popa
in
leave
fwait
loop
gs
cmp
cli
push
inc
push
pop
fsts
mov
mov
add
inc
jmp
mov
jmp
or
insb
push
mov
sbb
sarl
in
mov
inc
lret
std
push
inc
aas
and
sbb
and
or
movsl
gs
pop
adc
cmp
mov
sub
jb
push
je
imul
faddl
and
shrl
scas
add
xchg
dec
inc
lret
add
lds
or
inc
fists
repz
mov
adc
pop
mov
jecxz
inc
jp
mov
pop
mov
leave
loop
fsts
stos
lds
push
lods
mov
es
loopne
pushl
sbb
movsl
mov
fidivrs
gs
punpcklwd
adc
fiaddl
scas
jnp
notl
jl
mov
mov
or
add
repnz
rcll
adc
shll
mov
xchg
and
out
mov
lcall
aaa
cmp
mov
sub
mov
inc
jne
pop
ret
loopne
sbb
mov
inc
stos
in
sti
test
nop
push
imul
rorl
sbb
and
mov
popf
pop
decb
mov
ret
out
dec
fwait
pop
add
jle
idiv
xchg
cld
mov
jne
in
or
out
pop
and
xor
pop
add
cmp
es
ss
mov
xor
push
call
jmp
shll
in
jae
rcll
inc
mov
cli
call
je
or
mov
fisubs
lret
int3
popf
push
or
add
sar
les
sbb
sub
adc
cmc
pop
lods
lds
out
enter
mov
fiaddl
cltd
dec
pusha
pmullw
int3
push
mov
fdivl
jmp
aam
lahf
jp
stos
out
jge
sbbl
bound
lods
es
mov
rorb
inc
lds
cmp
sbb
adc
out
rcr
fcompl
in
je
and
jmp
cltd
dec
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
sub
sbb
and
sbb
movl
sbb
es
out
mov
ljmp
xchg
push
pop
mov
les
imul
adc
push
addl
sub
mov
addr16
cld
pop
mov
and
rcrb
mov
and
adc
mov
or
nop
dec
or
and
aad
outsb
dec
das
in
loop
rorb
mov
mov
ret
dec
fistps
inc
mov
dec
jmp
pusha
mov
mov
loop
xchg
ss
pop
xor
fistps
mov
add
mov
jae
nop
std
sbb
or
cwtl
sar
pop
je
xor
in
cmp
adc
data16
push
xor
out
daa
and
bound
mov
fwait
in
scas
jb
add
jg
xor
cwtl
jb
in
push
jle
shl
outsl
cmp
mov
jns
jmp
inc
lret
fwait
jge,pn
imul
ret
mov
or
mov
cli
out
in
pop
or
xchg
push
jne
xchg
shll
adc
fisttpll
cmp
mov
aam
sbb
cmp
ret
jnp
xor
daa
mov
or
sbb
test
pavgw
jo
mov
sub
cmp
mov
aad
xor
adcl
scas
adc
cmp
xchg
icebp
adc
stc
jmp
js
movsl
push
int
mov
jge
mov
jp
xchg
aas
js
call
jl
adcl
cwtl
pop
hlt
test
push
ss
jae
ficoml
xchg
push
setle
dec
mov
cmpsl
pushf
mov
mov
and
pop
jg
sub
cmp
popf
dec
psubw
or
lret
fisttpl
out
sub
fildl
push
imul
test
in
mov
add
fmulp
mov
out
imul
popa
jnp
cli
fists
pushf
test
subb
xor
clc
inc
andl
sub
aam
cmc
cmpl
cltd
jns
sub
je
enter
mov
xor
imul
aam
std
inc
or
sbb
std
mov
push
in
lods
pop
or
les
in
data16
daa
jbe
xchg
fcomps
push
pop
xor
or
arpl
ds
iret
dec
jno
mov
inc
into
ja
adc
inc
dec
popa
call
inc
xchg
mov
loope
lds
xorl
sbb
rol
add
mov
sub
and
cmpsb
mov
icebp
push
es
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
xchg
sbb
and
sbb
aas
lock
push
mov
jecxz
inc
fwait
xchg
lods
out
push
lds
fdiv
addr16
pop
imul
push
add
jo
in
and
dec
adc
xor
push
pop
loope
mov
aad
subl
out
add
jp
or
inc
adc
enter
rcll
loopne
push
aam
add
imul
push
fnstenv
lcall
pop
mov
cmp
adc
in
add
mov
loop
sub
dec
add
int3
mov
mov
mov
xchg
or
je
pop
jle
aad
pop
imul
sub
cmc
loopne
xor
bnd
push
data16
or
add
pop
dec
popa
out
ds
xchg
inc
in
mov
mov
dec
ja
add
xor
arpl
fcmovnbe
call
addb
push
andb
cmpb
cmpsb
sbb
push
xchg
xor
push
mov
or
test
mov
dec
sbb
push
xchg
pop
mov
lock
pop
loope
js
push
rcr
mov
stc
or
jmp
add
mov
dec
inc
imul
xlat
dec
xor
cli
mov
outsl
mov
mov
mov
adc
sub
shrl
push
pop
ljmp
sti
jg
scas
loopne
dec
push
inc
pop
and
push
mov
imul
fld
push
mov
fwait
bnd
sub
aas
lcall
or
jecxz
mov
mov
dec
daa
adc
mov
call
mov
movsb
sbb
xor
xchg
sbb
cmc
pop
cmp
shlb
jns
inc
dec
lahf
pushf
cmp
pusha
xor
out
insb
mov
inc
mov
dec
cwtl
leave
fisttpl
je
adc
cmp
pop
arpl
je
outsl
pop
sub
mov
shrl
sub
jl
scas
call
push
inc
mov
pushf
cmc
lock
dec
in
shr
ds
sub
mov
dec
idivl
lahf
pop
or
jg
test
inc
xlat
xor
inc
sbb
into
mov
jge
sbb
shrl
sbb
sub
sbb
cwtl
cmc
jge
xchg
mov
sub
push
nop
decb
in
sti
jp
jbe
or
cmc
or
add
xorl
lret
ds
outsl
xlat
push
xchg
lret
or
scas
sbb
sbb
add
sub
mov
imul
pop
sub
jg
xchg
xor
mov
mov
scas
sub
dec
cmp
add
xchg
in
es
out
mov
pop
xchg
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
mov
sbb
and
sbb
cmp
xchg
dec
loop
xchg
popa
and
fcomps
out
and
pop
pop
shrb
movsl
pop
push
decb
loope
jg
adc
cmpl
cmpsb
and
jg
fs
in
mov
mov
push
sbb
scas
in
mov
test
das
sub
subl
outsb
mov
adc
jl
out
call
mov
icebp
mov
pop
shl
ja
mov
sahf
scas
popf
cmpsb
push
inc
aas
adc
cmp
adc
add
int
or
add
add
jb
ljmp
sarb
pop
jp
inc
pop
pushf
ja
int3
push
xchg
fs
sbb
cmpsb
int
pop
jns
mov
adc
xor
adc
adc
int3
mov
lret
add
xor
adc
jns
jg
aad
dec
addl
sahf
scas
pop
sub
jl
es
cmpsb
pop
pop
inc
jb
adc
jp
sbb
repz
add
mov
xor
es
sbb
js
sti
aas
xor
or
xchg
add
test
inc
cltd
sub
imul
fldt
psubusb
add
ljmp
mov
jecxz,pt
inc
lahf
mov
enter
mov
adc
xor
ds
push
mov
jbe
add
ss
sbb
out
add
cmp
out
mov
jbe
xchg
cltd
push
pop
dec
in
arpl
addl
ss
and
ret
jno
pop
mov
ja
xlat
arpl
mov
out
mov
mov
or
cmpb
jmp
out
cld
test
in
lods
notl
inc
pushl
sbb
fsubrl
and
imul
es
dec
or
pop
and
int3
inc
das
stos
push
out
shlb
je
std
mov
cmp
imul
jecxz
mov
jecxz
fwait
cmp
in
mov
pop
out
scas
js
xor
cmpsl
sbb
push
int3
push
push
mov
sub
push
addr16
in
addr16
jne
lea
out
push
mov
sbb
lock
sub
ljmp
lret
movl
jle
vandnps
test
arpl
mull
std
adc
loope
in
sbb
mov
in
insb
mov
jns
inc
or
cmp
sub
fidivs
mov
lret
sub
sub
push
jbe
scas
jo
mov
nop
or
add
iret
and
fisubrl
mov
push
shll
das
inc
push
dec
cltd
and
into
in
clc
dec
and
xor
and
dec
jno
lock
addb
scas
pop
xchg
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
addr16
test
repz
shlb
inc
pushl
sub
mov
pop
fisubrs
jae
inc
pop
addl
dec
mov
mov
fbstp
popa
add
xor
xor
xchg
xchg
push
push
cmp
pop
pop
inc
fwait
insl
cmp
sarb
fwait
sbbb
xchg
scas
mov
icebp
mov
outsb
cmp
xlat
push
imul
add
nop
sub
addr16
fisttps
jb
ljmp
leave
pop
lcall
loop
rcrb
lods
scas
loopne
stc
jmp
dec
dec
xchg
mov
add
mov
bound
dec
push
mov
xchg
imul
lahf
mov
divb
sub
data16
les
je
rcrb
fisubl
cwtl
push
adc
push
xchg
mov
push
sub
unpcklps
cwtl
jns
jge
xor
mov
mov
push
aas
imul
test
add
movsl
dec
test
movsb
jge
addb
sub
pop
insb
dec
inc
hlt
scas
imul
push
lcall
push
icebp
daa
insb
imul
jae
nop
sub
stc
pushf
fadds
test
xor
jb
add
cmpsb
gs
xchg
or
cmpsl
stos
fisubrs
movsb
andl
ret
sbb
add
or
adc
mov
jb
xchg
jp
jne
or
jl
add
adc
mov
gs
icebp
test
bound
jecxz
aam
in
or
jno
sbb
add
insl
sbb
clc
ficompl
repnz
pop
fcmovbe
mov
in
push
cmp
xor
adc
mov
adc
pop
or
lret
xchg
jmp
cwtl
and
adc
outsl
xchg
cmp
sti
cmp
rclb
lea
or
xor
das
pop
push
loopne
or
les
lds
mov
or
ror
xchg
into
inc
push
mov
pop
sbbl
inc
pop
icebp
inc
mov
int3
cs
cltd
jmp
lea
aam
sub
cmp
mov
xchg
inc
mov
dec
and
add
adc
lahf
sub
scas
dec
xchg
jle
aam
out
loope
mov
imul
call
shrl
and
mov
filds
gs
sti
dec
sub
sub
imul
inc
dec
into
enter
mov
push
mov
je
gs
sahf
inc
pusha
hlt
test
push
movl
add
test
jge
inc
cmpsl
xor
lods
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
xchg
loopne
sbb
and
sbb
movsb
jmp
aad
xchg
cmp
test
and
add
orl
pop
fldl
push
pop
fnstenv
js
cmp
xor
pop
imul
or
dec
imul
pop
js
jns
cwtl
repnz
and
fsubs
dec
mov
push
js
fimuls
mov
aad
sbb
sub
jecxz
jno
mov
divl
roll
int
fdivl
xor
mov
insb
mov
push
sahf
stos
stc
popf
int3
xor
fistpl
fcompl
loope
fistpl
pop
cli
das
mov
mov
sub
cli
push
arpl
push
mov
mov
arpl
inc
pop
mov
lods
popf
pslld
adc
ret
xchg
das
cld
dec
dec
cmpsl
push
and
lahf
xor
push
les
fiadds
iret
cmp
mov
rolb
dec
addr16
ljmp
cmpsl
gs
movsl
mov
das
js
fistl
push
mov
shll
cmp
add
or
insb
mov
clc
fsubr
faddp
add
jmp
loopne
inc
incl
push
adc
rcll
and
push
fildll
inc
out
xlat
dec
cmp
sti
pop
int3
fs
xchg
int3
mov
mov
push
jbe
loope
cmp
icebp
mov
ficoms
mov
mov
mov
std
hlt
lret
pushl
sbb
js
pusha
rcrb
and
inc
mov
pop
cmp
push
sub
jb
push
mov
inc
sbb
inc
and
dec
push
adc
add
cmp
daa
and
xlat
cmp
jns
sub
ficomps
adc
aas
xchg
hlt
dec
push
and
call
mov
test
mov
dec
jg
les
lcall
jo
fcmovb
push
mov
push
or
jb
or
mov
jp
nop
xlat
scas
movb
and
enter
or
push
aaa
push
insl
xor
stc
iret
das
inc
cs
mov
iret
add
add
mov
js
jnp
or
inc
arpl
testl
adc
push
xchg
cmp
xchg
pop
jg
dec
icebp
cmp
out
repnz
or
cld
inc
jae
sbb
mov
jnp
adcl
jmp
adc
fsubrl
add
scas
jae
ljmp
ret
outsl
in
inc
mov
stos
shrb
jg
lods
mov
mov
out
sub
xlat
stc
arpl
imul
call
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
push
jg
sbb
adc
sbb
adc
pop
insb
dec
add
roll
lahf
fwait
add
or
jns
arpl
xor
mov
cltd
int3
pop
stos
imul
lds
sbb
jno
sbb
nop
push
sbb
insl
or
mov
inc
loop
xor
jmp
insl
lret
repnz
insl
and
and
outsb
push
push
lock
push
mov
pop
pushf
ljmp
in
pop
inc
test
lret
xor
and
mov
inc
bound
sti
aam
xchg
repnz
inc
and
adc
dec
pop
dec
jmp
loope
popf
mov
pop
xor
cmp
mov
fiaddl
mov
cmp
pop
or
xor
addb
push
cmp
in
insb
icebp
rol
sbb
add
adcl
js
adc
pop
add
pop
dec
cmp
fisubl
push
lea
iret
pusha
xor
cmp
repnz
dec
fisubl
sub
dec
nop
push
cwtl
jmp
or
pop
js
in
sarl
jg
or
dec
mov
rorl
sub
ja
xchg
xchg
fdivrp
test
fldcw
das
pop
fdivrs
xorb
sti
subb
popa
push
xor
and
mov
sbbb
aad
xorb
push
lea
cwtl
cmp
xor
stos
loop
pop
and
sbb
mov
les
add
dec
push
stos
scas
xlat
xor
adc
leave
insl
les
and
jo
xor
lods
outsb
push
push
nop
xchg
or
loopne
in
inc
mov
xchg
ret
stc
popa
mov
push
fcoml
loope
sub
cmp
scas
shl
mov
mov
rcrl
mov
or
jns
ds
cmp
sub
ret
and
outsl
dec
mov
or
mov
fimull
or
adcb
adc
aam
iret
pop
mov
sub
sbb
xchg
push
subb
push
repz
push
xor
adc
xchg
xorb
jle
cmp
lock
loopne
mov
inc
cmpsb
sub
fstpl
clc
xor
ds
jb
push
xchg
cli
test
mov
ficoms
dec
dec
inc
dec
imul
inc
mov
sbb
stc
pop
add
ret
mov
cmp
js
xor
imul
pushf
ljmp
push
lret
fistpll
iret
adc
lahf
add
cmc
outsb
fcmovnu
inc
xor
in
push
cmp
pop
mov
fs
shr
icebp
pop
inc
mov
push
imul
test
cmc
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
icebp
scas
mov
jns
sbb
adc
sbb
jp
xor
pop
subl
loope
das
push
fisubs
test
jp
cmp
daa
outsb
inc
jns
shlb
ja
cmp
movsb
pop
sbb
jle
cmpsl
addr16
cmp
jecxz
adc
cmp
sub
pop
fldcw
xchg
dec
testl
in
cli
repz
pop
aad
aaa
bound
and
mov
call
dec
testb
xchg
repz
xor
pop
leave
inc
fimuls
out
cmp
das
push
jo
xor
mov
loope
push
pop
dec
xchg
addr16
xlat
inc
xchg
les
xchg
out
imul
les
jne
out
xor
push
xchg
jb
sarb
adc
or
jle
jmp
sbb
movsl
sbb
dec
mov
std
popf
cmp
xchg
mov
shll
and
adc
fisttps
mov
shr
and
adc
cs
lcall
fldl
stc
inc
repz
mov
mov
ficompl
rcrb
aas
jns
add
pusha
sbb
movsl
repnz
adc
pop
jne
test
xlat
xor
ljmp
nop
packsswb
dec
dec
leave
popl
add
jge
out
iret
push
add
add
lcall
lea
sub
and
fcos
repnz
mov
add
mov
dec
daa
cmp
cs
jge
dec
add
mov
pop
mov
mov
icebp
or
lret
test
cmp
sbb
dec
push
in
jnp
fiadds
xchg
ljmp
imul
lods
pop
pop
add
ja
hlt
lcall
sarb
cmp
cs
cmp
out
push
out
push
xor
movsl
ss
pop
inc
in
into
sub
and
dec
orb
loop
lock
aas
into
cmpsl
pop
add
call
lcall
cwtl
stc
scas
or
sub
icebp
sbb
lea
pop
das
xchg
or
mov
push
xor
incb
ja
jp
sub
fnstcw
jg
lods
cmpsl
lods
scas
inc
lds
scas
xor
or
pop
and
mov
mov
je
aaa
mov
adc
and
test
imul
mov
pop
test
jns
fucomi
lret
push
loop,pn
add
insb
adc
xchg
cwtl
jno
fcoms
lds
ss
push
inc
test
enter
hlt
mov
sub
add
sarb
aas
mov
sbb
stos
popa
subl
fs
fidivrs
sbb
in
push
test
cmp
xchg
xchg
mov
add
movsl
pop
push
lret
add
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
jns
xor
insb
or
xor
repnz
mov
lret
jecxz
push
or
fs
lcall
or
adcl
jb
mov
jge
enter
mov
mov
inc
flds
jl
sbb
out
aaa
pop
pop
dec
xchg
lock
dec
cld
jge
xor
test
cmp
push
fsubrs
and
sub
aaa
mov
or
ds
mov
outsb
test
and
pop
sbb
ja
jecxz
je
dec
stos
fldenv
pusha
inc
xor
push
mov
sbb
mov
aad
pushf
cmp
aaa
cs
fwait
mov
call
ja
lcall
xor
and
js
cs
cs
popf
mov
cmc
mov
ret
int
fwait
inc
mull
adc
cli
or
int
pop
xor
add
mov
out
sub
fsubl
and
negl
aaa
aam
jo
or
pop
hlt
lods
sbb
ss
jg
out
loopne
sti
shll
sbb
sub
and
int
test
pusha
mov
pushf
and
xchg
sub
xlat
ret
xchg
mov
push
pushf
cwtl
dec
aaa
cld
repz
push
gs
in
mov
lods
fcomi
cmpsl
sub
fidivs
dec
dec
repnz
and
xchg
jae
xchg
push
fsubp
xor
jbe
pop
mov
mov
jb
stos
jmp
in
pop
jp
mov
push
insb
popa
lods
dec
iret
sub
outsl
push
cltd
sti
mov
mov
mov
into
and
mov
mov
add
and
xchg
add
dec
sbb
cmpl
fstl
aam
inc
sbb
lods
cmpsb
xor
xchg
clc
mov
cltd
sbb
daa
push
popf
stos
aaa
pop
jb
das
fcoml
push
out
ja
adc
mov
insb
fsubs
test
leave
int
cmpsl
mov
subb
fwait
or
repz
repnz
inc
jo
cwtl
sub
dec
sbb
inc
dec
inc
cmpsb
std
out
ret
inc
xor
fists
test
clc
jmp
push
imul
pop
arpl
bound
or
xchg
loope
cli
pop
fisttps
mov
cltd
xorl
adc
outsb
fsubl
xchg
lds
add
jle
stos
xor
push
pusha
push
ffree
and
mov
and
cmp
mov
loope
sub
xor
imul
stos
insl
jl
int
or
cld
dec
stos
xor
fwait
test
fildl
leave
push
pop
push
dec
cmp
jae
xchg
and
daa
pusha
mov
push
js
sbb
mov
cmp
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
aaa
dec
jle
insl
sbb
and
sbb
repz
adcb
sub
out
inc
and
sbb
pop
mov
pop
out
cmp
cmp
lcall
mov
xchg
arpl
into
int
mov
dec
data16
rcll
sbb
mov
sub
mov
hlt
leave
xor
pushf
pop
and
cmp
inc
andl
outsl
and
fs
into
je
or
ljmp
inc
add
ljmp
jecxz
das
sbb
mov
das
cld
sub
mov
lds
std
rclb
test
sub
and
push
push
push
clc
loop
jp
mov
xchg
mov
adc
pushf
into
mov
and
adc
push
mov
push
or
clc
jbe
xchg
insb
rcll
sbb
rcll
mov
mov
pusha
mov
out
jbe
fmuls
fs
adc
or
mov
pop
or
ds
mov
dec
add
push
add
jb
ret
add
xchg
daa
mov
pop
xchg
dec
pop
xchg
mov
sbb
stc
cmpsb
push
mov
nop
lret
dec
shlb
cmp
and
sub
cmpsb
add
sarl
jmp
cmp
pop
pop
fwait
adc
cltd
data16
inc
mov
pop
jno
lds
sbb
stos
movsl
fdivl
loopne
or
jp
mov
in
xchg
add
aas
loopne
push
sbb
loop
cmpl
cmp
sub
and
adc
mov
mov
pop
mov
add
flds
or
pop
test
bound
xlat
and
cmp
mov
adc
lret
movsl
pop
cmpsl
cmp
sbb
mov
pop
xchg
xchg
pop
mov
js
fisttps
insb
int
mov
out
jns
push
xor
test
aad
or
pushf
stos
adc
mov
pop
add
adc
pop
push
mov
or
subb
jb
xchg
in
sbb
cmp
movsl
scas
stc
mov
repz
ret
out
fsubrs
repnz
testl
fadd
cmpsb
mov
sbb
shl
jns
inc
xor
jge
pop
fnstcw
sbb
lret
jmp
pop
dec
sti
push
sub
popa
or
fdivrp
fisubs
or
mov
cwtl
movsl
sub
sbb
clc
lock
adc
divl
inc
mov
pop
or
pop
enter
lret
adc
rcrb
daa
push
xchg
push
out
sub
cltd
xor
popf
sti
jl
mov
test
push
in
imul
adc
movsb
xchg
dec
orl
enter
add
ljmp
and
push
sbb
push
std
xor
sbb
and
sbb
xor
cmp
icebp
subb
or
xor
push
lret
enter
repnz
inc
pusha
shrb
enter
sbb
jge
sahf
fdivrs
lret
xor
fsubs
mov
hlt
push
cmp
lods
out
xchg
test
and
bound
inc
inc
pop
xor
xor
inc
mov
aas
mov
adc
mov
out
in
js
clc
aaa
ljmp
enter
les
push
jecxz
cmp
mov
pop
call
stos
fldcw
jle
xor
stos
rcll
icebp
andb
aaa
in
adcb
and
idiv
inc
stos
enter
movsl
filds
xor
sub
mov
mov
adc
xor
jno
mov
fistpll
adc
inc
xchg
xor
popa
cmp
out
jl
pop
inc
sbb
nop
jecxz
shlb
cwtl
and
das
lock
adc
fadds
idivl
push
das
out
sarb
sbb
or
cmc
or
cmc
push
inc
loopne
mov
ljmp
notl
int
cwtl
and
in
xchg
lock
fstp
push
aaa
mov
mov
cltd
cwtl
loope
cmp
mov
push
std
jecxz
add
jne
dec
jg
jb
xchg
out
add
popa
mov
incb
xchg
push
cmpsb
dec
loop
aaa
imul
xor
jle
lods
popa
push
or
jle
sarb
push
pop
leave
adc
pop
sahf
int3
cmp
jl
rcrb
sub
mov
lret
inc
xor
inc
fstps
adc
inc
sbb
jbe
cmp
cmp
data16
int3
jecxz
sbb
rcrl
and
test
mov
cmpsl
shlb
jns
sbb
dec
add
fwait
lock
mov
fnstenv
and
enter
loope
fst
iret
in
fnstcw
clc
repz
add
or
xor
inc
addr16
mov
pop
test
adc
mov
fwait
pop
lahf
mov
fbstp
adc
pop
sbb
addr16
sti
mov
jmp
pop
repz
loop
stc
shll
call
fs
xchg
lock
and
out
dec
jmp
sub
ja
mov
cmpsb
mov
or
pusha
mov
jl
mov
push
imul
clc
pop
jg
inc
lcall
incb
incl
mov
push
call
inc
dec
add
inc
test
nop
out
popa
xor
push
pop
jnp
movsb
mov
pop
cmp
dec
ja
icebp
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
hlt
push
popa
sbb
and
sbb
pop
jg
mov
aaa
inc
or
add
inc
inc
inc
jno
xor
dec
ljmp
loopne
nop
inc
int
xor
pop
cmp
rep
inc
push
cmp
jg
mov
or
mov
mov
pusha
movsl
or
ljmp
pop
xorl
fdivs
or
cmp
std
jge
lahf
stc
mov
dec
pop
repz
inc
aam
dec
mov
dec
mov
iret
inc
mov
call
mov
push
xor
mov
inc
in
cmpsl
cs
inc
lcall
orb
lret
fcomps
in
hlt
subl
inc
cltd
scas
xchg
pop
sbb
add
mov
in
or
or
inc
inc
mov
dec
jg
mov
mov
ficomps
jo
ds
adc
negb
adc
shrb
xchg
xchg
push
aad
iret
mov
cmp
test
adc
fstl
lock
aaa
xor
push
push
into
scas
loopne
test
or
dec
cmp
std
xchg
inc
gs
jns
es
jp
repnz
cmc
fcompl
scas
subb
sub
dec
std
aas
and
push
cltd
sbb
mov
mov
xor
inc
scas
mov
mov
aad
outsl
je
pop
jbe
rolb
and
mov
lret
aam
cmp
inc
add
or
or
cmp
mov
fldl
add
inc
shr
imul
scas
testw
fs
push
xorl
mov
mov
jo
imul
rorb
and
scas
xor
stc
xorb
movsl
cltd
sbb
std
shrl
sbb
xchg
mov
inc
or
ret
add
jge
add
sbb
pushf
js
xor
push
stos
roll
sub
testl
inc
dec
cmp
aam
cmp
rcll
test
inc
cld
pusha
fcmove
rcrl
lds
fwait
or
dec
mov
mov
jecxz
addl
pop
imul
mov
jp
stos
scas
test
add
mov
lea
cwtl
rcl
push
pop
js
lahf
mov
fcmovbe
xor
js
frstor
mov
aas
rcrl
jae
cmp
pusha
fs
ret
pop
sti
xchg
shl
sub
lods
pop
lcall
pop
add
xchg
adc
and
icebp
jbe
and
xchg
sub
test
jbe
jae
frstor
je
push
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
stc
sbb
sbb
adc
sbb
and
jl
lea
fidivl
push
outsb
inc
xchg
add
es
fwait
int3
cmp
mov
inc
add
icebp
fsubl
mov
in
sub
cmp
ss
addr16
ljmp
or
int
je
jp
lcall
addr16
jns
mov
dec
adc
lret
jge
insl
jne
pop
fwait
jnp
sbb
add
rol
or
cmpl
insb
out
sbb
fmuls
mov
leave
movq
add
out
mov
fdivrs
in
call
divb
xchg
aas
in
adc
orb
insl
test
cmp
push
movsl
test
xor
adc
pop
jmp
cmp
popf
and
cmp
es
aaa
movsb
fbld
mov
pusha
pushf
in
das
lret
xchg
add
xor
mov
and
aaa
out
mov
sar
add
lahf
jle
adc
push
data16
sub
adc
adc
mov
dec
inc
mov
adc
data16
xor
jg
mov
rcrl
push
pop
mov
fdivrs
xchg
ss
dec
int
xor
inc
les
pop
loopne
mov
out
push
jo
cmpsl
movsl
pop
and
roll
or
xchg
inc
hlt
stos
push
sbb
pop
jl
mov
add
mov
jp
mov
cltd
xor
ret
sbb
mov
lahf
xor
popf
shlb
cmp
jp
or
push
loopne
jnp
xchg
icebp
and
cli
enter
push
repz
adc
push
sub
adc
popf
mov
add
sbb
mov
repnz
dec
inc
jo
jp
jge
sbb
and
daa
or
lods
test
xor
fsubl
add
jl
insb
inc
and
in
push
cmp
add
fsubs
sub
mov
es
test
cmc
mov
rcl
sub
mov
out
fidivl
fwait
mov
clc
insb
jo
sub
add
lret
sub
dec
adc
lods
hlt
pop
push
mov
fsubp
test
je
je
adc
fwait
cmpsl
out
rolb
popf
and
pop
add
iret
push
cltd
xchg
cmpsb
dec
clc
adc
mov
pop
mov
cmp
mov
dec
and
ja
rorl
sub
cmc
loop
xor
scas
lea
movsl
jae
test
jae
cmp
insl
lea
into
mov
mov
jmp
cmc
out
clc
insl
adc
add
adc
push
pop
sub
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
popa
out
sbb
push
mov
pop
lahf
fisttpl
jno
aas
or
push
dec
inc
outsl
popa
or
xor
sbbb
out
push
xor
xor
mov
add
in
imul
dec
fdivs
rolb
jl
push
out
mov
and
pop
jmp
std
sbb
inc
pop
pushf
test
pop
push
add
mov
sti
jb
jmp
adc
sbb
outsl
cmp
push
push
pop
sahf
test
lret
bound
xor
sub
push
add
loopne
test
xchg
fcmove
mov
inc
xchg
cmp
movsb
fimull
add
aad
mov
and
mov
out
sbb
xchg
mov
rorb
inc
dec
or
adc
sbb
xlat
jmp
add
add
hlt
cli
mov
and
mov
push
mov
in
jo
stos
cmp
jae
mov
sahf
cmp
loopne
fldcw
ficoms
in
pop
les
mov
mov
gs
mov
cmp
aad
rcll
push
jnp
aad
dec
mov
mov
fidivrs
push
mov
int3
gs
test
test
imul
repnz
popf
cs
pop
mov
and
xor
lea
and
sbb
std
pop
std
push
lds
dec
sbb
mov
in
gs
jle,pt
lock
xor
sub
xchg
pop
fs
test
ds
rorb
mov
xor
sbb
out
inc
pop
ds
inc
mov
aas
cmp
hlt
stos
lds
inc
dec
add
xor
or
push
adc
push
mov
pop
ss
shlb
push
cs
add
out
mov
and
dec
push
movswl
mov
cmp
das
and
dec
shlb
stc
aam
in
jge
stc
rcrb
mov
std
jmp
out
add
pop
jle
and
push
or
adc
jo
adc
pop
test
test
pusha
xchg
jne
rolb
xchg
mov
xor
and
nop
jns
push
into
aam
pop
aad
inc
insl
jl
or
fstl
push
cwtl
cmpsb
leave
lds
nop
jle
jmp
rolb
ja
fiadds
test
dec
add
pop
ret
mov
sub
cmp
aas
lret
inc
jne
lds
pop
push
inc
fimull
lods
inc
push
and
inc
or
or
out
psubb
test
jecxz
fadds
ja
lcall
jl
mov
lea
xlat
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
pusha
xor
pop
and
xor
insb
stos
push
cmp
fwait
inc
cmp
std
cmp
sbb
xlat
cmp
xor
das
andl
mov
repz
mov
sti
xor
pop
xor
xor
setne
lcall
push
mov
imul
sbb
push
xchg
rorb
mov
movsl
lds
je,pt
dec
add
jl
into
nop
mov
pop
les
stos
in
xchg
jbe
pop
scas
lahf
dec
cmp
pop
cmpsb
lods
jbe
das
push
in
int3
jb
aas
mov
insl
jbe
dec
mov
mov
cmp
iret
jecxz
inc
pop
outsl
dec
in
push
loope
add
pushf
scas
push
pop
and
cmpsl
repnz
test
repz
sub
mov
imul
sbb
and
push
mov
adc
daa
dec
push
and
jo
js
stos
mov
aas
mov
sbb
cld
xor
add
cwtl
sub
mov
pop
rcll
push
mov
dec
cmp
jns
cmc
pop
insl
mov
add
shll
push
adc
jo
push
xchg
jbe
mov
insl
aas
cmp
bound
adc
gs
or
lea
mov
repz
xor
mov
daa
nop
pop
xchg
or
mov
and
fisttpl
and
pop
adc
mov
cmpsb
adc
xchg
xor
sub
hlt
push
les
and
jb
sub
cmp
mov
or
and
aad
push
adcb
adc
sbb
jmp
push
push
sub
sbb
scas
dec
mov
iret
push
lock
or
cmp
adc
xor
mov
repz
leave
mov
nop
out
push
adc
scas
xchg
stos
lret
rorb
jno
clc
popf
and
dec
lods
sub
or
cmp
rolb
sbb
jecxz
mov
xchg
cli
sub
movsl
in
cmp
popa
mov
cmpsl
lock
jge
mov
fnstenv
aad
add
adc
pusha
jmp
xchg
ljmp
push
mov
shl
jge
in
mov
fildl
jbe
scas
jbe
fbld
mov
push
loope
dec
ret
and
jge
mov
xor
addb
jne
xchg
cmp
sub
pop
xor
rcll
cld
ret
js
sub
movsl
iret
bound
pop
icebp
sub
push
and
mov
add
insl
push
jge
mov
mov
ja
inc
or
mov
and
test
lock
test
jcxz
lret
dec
mov
jecxz
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
push
or
xor
sbb
adc
sbb
mov
push
lea
sbb
or
mov
lret
push
fsubp
fcmove
or
pop
and
inc
dec
sbb
aas
roll
mov
jecxz
dec
lods
cli
xor
lret
pop
xchg
mov
or
hlt
push
push
lods
add
sbb
imul
dec
add
addr16
sbb
mov
add
insl
xor
lods
divb
leave
jg
scas
icebp
or
les
sub
xchg
lcall
aam
in
sub
scas
lods
das
push
xchg
in
cmp
dec
xchg
repnz
xor
pop
mov
push
mov
adc
paddw
xchg
cmp
xchg
mov
popf
dec
repnz
cmpsb
sbb
or
pop
pop
lret
pop
lret
jo
sbb
in
mov
push
cmpsl
sbb
mov
out
testl
stos
fidivrs
lcall
cmpsb
sbb
add
mov
addr16
cmp
mov
js
mov
fs
js
and
add
jle
dec
inc
stc
mov
jecxz
std
adc
ljmp
jmp
mov
or
xchg
stos
ret
popf
aaa
cmpsl
nop
jmp
mov
pop
jecxz
add
lea
mov
xchg
jecxz
add
jg
je
lea
int3
push
jnp
mov
jl
sbb
out
xchg
dec
mov
xor
mov
dec
sub
xor
mov
hlt
jne
jl
inc
insl
adc
cmp
les
sbb
insb
adc
jnp
test
lcall
mov
sti
insl
push
bnd
dec
add
je
push
addr16
and
dec
loopne
arpl
aad
fadd
push
test
and
lds
pushf
in
or
adc
adc
mov
popa
or
sahf
jecxz
aad
aam
fistl
push
lret
fbstp
adc
nop
rorb
lds
push
lret
push
push
jp
inc
xor
mov
inc
mov
pop
out
outsb
scas
out
ret
sarb
call
sarl
cmp
aad
mov
mov
jecxz
cmpb
ljmp
lahf
pop
enter
ret
js
pop
sarl
int
dec
mov
sti
cmp
popa
pop
xor
leave
and
mov
mov
pushf
inc
gs
adc
bound
sbb
fdiv
inc
popa
lret
pusha
xchg
bound
mov
movsb
pop
lea
shll
mov
sbb
jo
cmpsl
dec
daa
scas
and
ret
out
ss
mov
add
movsl
js
into
cmp
mov
int
sub
test
test
add
icebp
jb
movsl
rorl
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
rcll
pop
jo
inc
sbb
add
sbb
lahf
cmc
and
loopne
inc
divl
sbb
in
pushf
pop
xchg
xor
xchg
xor
mov
mov
fsubr
mov
pop
test
cli
mov
cltd
aad
flds
in
mov
xor
sub
jg
cmpsl
scas
out
mov
notb
ljmp
notl
imul
leave
or
xchg
pop
stos
std
in
sti
cmp
lds
mov
xor
and
dec
mov
in
movsl
jae
pop
hlt
jbe
movb
push
popa
adc
and
lret
addr16
stos
test
daa
fmul
out
cwtl
jecxz
imul
out
inc
loopne
mov
mov
and
mov
mov
mov
daa
fldt
inc
jp
pop
aad
cmp
loopne
push
mov
jo
push
cmp
dec
movsl
daa
out
test
add
mull
xlat
push
mov
pushf
jne
sti
inc
aas
push
pop
add
outsb
mov
and
imul
out
scas
ret
sub
push
xchg
cmp
data16
cmp
movsb
into
and
loop
data16
imul
and
jbe
cmp
imul
push
dec
iret
movsb
ss
xor
stos
add
fsubr
sbb
dec
ds
in
mov
in
dec
sbb
ds
pop
std
adcb
push
mov
rcr
dec
rclb
pop
sub
adcb
add
push
pop
insl
repnz
repnz
pop
ds
lret
mulb
pop
out
and
insb
stos
mov
fs
std
xchg
clc
aad
sub
sub
stos
push
xchg
adc
cmp
mov
cmp
lea
inc
cld
ljmp
in
push
loopne
hlt
mov
jmp
lret
cwtl
pop
popa
fucomip
dec
sbb
push
dec
aas
enter
dec
cmp
fdiv
mov
pop
movsb
xchg
inc
cmp
add
inc
dec
mov
cs
cli
mov
stos
and
or
jae
pop
push
lods
fcmovu
lret
or
imull
sub
mov
add
iret
scas
aas
pop
and
xorb
sub
cmpsb
bound
ret
loope
inc
xchg
mov
mov
jecxz
pop
inc
rol
ret
aas
sbb
dec
movsb
ja
jb
jle
sub
mov
xlat
pusha
jo
fstpt
xor
adc
sub
pop
push
insb
aad
dec
ljmp
ret
sub
sbb
and
ret
mov
lods
dec
sarb
pushf
mov
mov
mov
fisubrl
sub
mov
or
jnp
xor
add
pusha
jnp
add
mov
xlat
xchg
jecxz
dec
adc
push
ret
popa
mov
push
aam
inc
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
into
ficomps
sbb
adc
sbb
insb
jecxz
aad
in
lcall
and
add
sub
add
cmp
sbb
sbb
push
ficoms
sar
and
pop
mov
xor
jmp
cmp
imul
pusha
xchg
push
enter
in
push
cmpsb
mov
test
lret
jl
and
emms
sbb
pop
mov
sti
int
sti
jnp
xchg
pushf
dec
and
ret
imul
jbe
loop
outsl
test
addl
cmpsl
out
xor
xor
loopne
pop
dec
push
push
aad
outsb
push
lock
push
outsl
dec
jg
dec
add
stc
add
fbstp
es
std
ds
push
pop
daa
mov
fstps
ss
or
ds
mov
push
in
cmp
pop
pop
sub
loopne
mov
sbb
push
xchg
outsl
pop
xlat
pop
jbe
jmp
dec
cmpsl
jno
jns
in
cld
xlat
repnz
dec
push
dec
int3
leave
fdiv
mov
fsubrs
xchg
rorb
or
xchg
insb
push
jo
ds
xchg
cmpl
mov
addr16
or
jb
test
or
push
cld
mov
pop
and
mov
pop
stos
stos
outsl
arpl
and
adc
icebp
fcompl
pop
aas
adc
out
nop
repnz
subl
sub
mov
ljmp
xchg
fs
jo
and
sbb
and
cwtl
bound
cli
aad
pushf
jmp
movsl
lcall
jnp
outsb
lea
insl
int
daa
in
pop
sbb
adc
or
shlb
aad
pop
pop
arpl
add
ss
pop
movsl
fwait
fwait
pop
sbb
fwait
xor
mov
cli
jne
cmp
cs
mov
sbb
out
ret
das
mov
xor
add
lods
into
xchg
into
out
adc
dec
jnp
pop
jbe
aas
mov
je
out
fisubrs
movsl
add
lods
aaa
inc
pop
rcll
jnp
push
xchg
js
icebp
out
js
pop
negb
xchg
jmp
cmp
push
or
fidivs
push
repz
mov
jecxz
mov
xchg
inc
sar
mov
inc
xchg
ficompl
add
roll
fcom
filds
cmp
shlb
cmp
rcrb
call
xor
fidivs
mov
pop
dec
insb
das
jne
xor
int3
xor
push
sbb
scas
add
dec
mov
cmp
aam
or
jbe
test
lods
mov
jmp
sarl
push
push
out
call
aas
pop
jno
pop
repz
cmc
mov
test
xchg
test
mov
cld
scas
mov
inc
xor
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
je
stos
call
adc
sbb
push
daa
sbb
mov
enter
in
mulb
clc
stos
xorl
psrlw
std
xor
in
aas
xchg
pop
jecxz
sbb
mov
iret
jne
fnstcw
andb
pop
xor
popf
lcall
test
fnsave
mov
mov
rclb
popa
push
or
add
js
mov
jno
adc
sub
xor
clc
pop
sahf
push
inc
mov
jecxz
push
adc
xor
out
fimuls
dec
pop
cs
outsb
aaa
jmp
mov
roll
lret
ret
gs
xchg
jge,pt
lds
lret
cmp
mov
jae
sub
fstpt
das
lahf
stc
jno
call
pop
push
xchg
cmp
or
push
arpl
clc
vmovss
inc
movsb
cli
loope
js
sahf
subb
sbb
xor
out
imul
cmp
and
rclb
div
jle
ror
mov
pop
jo
xor
mov
mov
call
dec
fstps
pop
cs
fs
stos
mov
sub
idivb
in
xchg
adc
pushf
aaa
jnp
movl
inc
mov
jmp
or
mov
jbe
or
or
inc
je
jl
cmpsb
add
sbb
mov
sahf
pop
ret
rclb
push
stos
icebp
dec
mov
sahf
sar
mov
adc
sets
movsl
pop
ja
out
xchg
dec
inc
addl
and
scas
lcall
jmp
mov
dec
daa
adc
mov
pushf
pop
hlt
sbb
rclb
or
js
add
sti
jmp
inc
dec
jns
scas
stc
repnz
cmp
mov
test
fstpl
or
jno
rcrl
pusha
or
xor
fbstp
xor
fwait
inc
add
and
sub
jmp
push
stc
or
xchg
xor
test
test
push
rorl
sub
sahf
je
cmpsb
cmp
push
dec
push
mov
in
jne
lret
or
pop
add
mov
dec
call
add
dec
push
xchg
lods
sub
lds
sbb
iret
inc
andl
pop
cmpsl
test
cmp
inc
fs
cmp
popf
dec
aaa
sbb
lret
or
into
mov
subl
pop
adc
es
jae
daa
mov
fucomp
mov
mov
repz
inc
fists
dec
pop
cltd
push
mov
jge
fimuls
icebp
es
xor
dec
push
lahf
xchg
sbb
rep
ret
inc
aad
add
xor
mov
pop
es
fwait
mov
xor
push
inc
daa
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
gs
add
sbb
fnstenv
filds
pop
sub
rclb
pop
inc
andb
pop
sahf
push
cmpsb
jno
xchg
pop
sti
leave
push
in
or
sarl
dec
notl
fildl
addr16
and
mov
fs
sub
jno
je
stos
nop
or
pop
push
and
outsl
add
mov
inc
jmp
or
in
xchg
xor
push
xchg
inc
adc
mov
test
in
xchg
arpl
movsl
mov
or
mov
orl
jno
ftst
and
inc
sbb
pop
jp
push
adc
jp
xchg
in
xchg
hlt
je
shlb
jns
idivb
push
lods
out
scas
js
stos
mov
jne
stos
mov
push
js
inc
inc
out
pushl
enter
fnstcw
jg
push
mov
loopne
mov
int3
mov
pop
notb
dec
or
sub
icebp
mov
xchg
sub
insb
pushf
int
dec
cli
xchg
dec
mov
scas
push
jnp
mov
stc
xchg
es
nop
adc
mov
xchg
or
jbe
dec
test
aaa
jl
mov
orb
aad
pop
push
and
hlt
mov
cmp
adc
sti
test
jnp
fcoms
cmc
ljmp
cmpsl
dec
jl
out
push
sahf
pop
xor
test
push
mov
test
jl
dec
jmp
cli
xlat
inc
lods
ret
hlt
test
xor
cltd
inc
xor
in
test
pop
and
movsl
and
lods
mov
sub
sbb
xchg
sti
push
mov
sarl
mov
repz
mov
jns
cmp
mov
lds
or
xorl
mov
push
sbb
aad
pop
dec
daa
add
hlt
adc
cltd
test
jge
mov
fwait
hlt
pop
xchg
dec
add
xor
jnp
mov
lods
mov
mov
xchg
sahf
je
mov
insb
ljmp
sbb
sub
jno
shrl
aas
xor
dec
lcall
clc
jbe
test
mov
popf
lock
adc
cli
or
nop
sbb
int3
push
add
sahf
and
cmp
mov
xchg
xor
mov
out
lahf
sahf
orl
pop
sbb
mov
hlt
jp
sti
sub
add
mov
repnz
lods
call
shrb
aas
inc
ljmp
jb
mov
test
es
pop
repz
jl
mov
mov
jo
inc
xor
cmp
xor
and
dec
cmp
mov
push
clc
pop
into
push
icebp
lret
inc
push
jmp
add
push
sbb
ja
mov
sub
sbb
adc
sbb
test
fisubrs
imul
xor
sti
pop
ss
mov
into
stc
stos
in
lahf
mov
dec
xchg
ds
repnz
mov
shlb
sbb
add
cltd
or
mov
sbbl
das
lds
jl
scas
gs
iret
mov
shrl
push
rol
aam
sbb
lods
mov
das
jno
mov
scas
out
sbb
cmpsl
or
jb
movsb
dec
stos
imul
push
xchg
ret
cmp
loope
dec
xchg
xchg
call
xacquire
packuswb
and
mov
loopne
int
mov
adc
sub
mov
jmp
push
jecxz
imul
sub
mov
lahf
mov
shrb
xchg
hlt
sti
js
push
add
or
pusha
inc
inc
int3
cwtl
adc
xor
into
xor
popf
call
icebp
jge
push
mov
dec
mov
mov
addl
xor
stc
jb
in
adc
out
lods
insb
mov
orl
cli
es
std
inc
mov
mov
jnp
sub
sti
nop
fistps
mov
popf
sub
out
outsl
ja
xchg
push
cmp
push
outsb
jle
inc
adc
fcmovnbe
sbb
scas
lea
xor
cmp
jmp
pop
pop
int3
ret
and
mov
lahf
or
repz
fwait
pop
mov
cld
stc
adc
sbb
push
or
add
cwtl
pop
xor
sub
inc
adc
aam
xor
mov
rcl
or
mov
sahf
ret
jo
jbe
out
into
xor
stos
mov
lea
lret
shrb
mov
add
mov
clc
dec
add
xchg
xchg
add
jp
mov
or
clc
and
sbbb
sub
push
inc
and
or
sbbl
and
repnz
outsb
cmp
sub
mov
aam
or
int
orb
sbb
adc
sbb
sbb
dec
sub
sbb
shlb
arpl
mov
lgs
jl
fbld
pop
push
push
mov
popf
aad
loopne
scas
pop
mov
sub
cmp
mov
fwait
sub
scas
add
mov
pushl
pop
push
js
adc
sbb
cmpsl
add
pushf
js
es
mov
inc
pop
dec
mov
mov
mov
loope
cmp
pop
pop
nop
out
insl
loop
xchg
ljmp
add
fsubrl
mov
int
add
and
push
jmp
addr16
bound
mov
adc
stos
mov
adc
sbb
in
std
daa
mov
into
inc
sti
rcrl
dec
les
fidivs
pop
mov
lods
pop
shrl
add
vpaddusb
push
mov
mov
cld
mov
cmp
int
xchg
ficoml
popa
leave
arpl
pop
movsb
push
sbb
sbb
mov
pushf
add
push
cwtl
pop
dec
dec
cltd
jg
sar
cmpsb
xchg
ja
out
lock
mov
es
xor
cmpsl
pop
inc
lret
insb
xor
add
xchg
inc
lret
loope
mov
pop
dec
push
jmp
stos
dec
adc
push
std
les
ficomps
mov
mov
cmp
sahf
jbe
imul
jnp
cmp
xchg
fistps
test
loope
imul
cmpsl
xor
enter
iret
shlb
popa
mov
pop
lods
jbe
jmp
or
mov
push
ret
inc
jae
aas
jae
es
mov
or
in
hlt
mov
outsl
rclb
add
xor
shrl
xchg
nop
push
cmp
ljmp
inc
push
xorl
mov
dec
jno
lcall
push
push
mov
jmp
rolb
xchg
je
cli
movsl
fisttpll
imul
je
push
and
outsb
call
insb
lcall
push
bswap
inc
gs
jne
arpl
les
iret
inc
lods
pop
int
xlat
icebp
rcrl
mov
notb
xor
push
xlat
xlat
xchg
dec
mov
jbe
loopne
push
or
push
or
mov
mov
daa
outsl
or
nop
in
push
xor
orb
je
pop
sbb
sti
mov
outsl
sbb
sbb
pop
int3
fwait
xor
adc
add
shlb
xlat
lods
mov
xchg
shlb
test
popa
adc
fistps
repz
mov
sbb
pop
aas
roll
pop
mov
jne
imul
dec
fwait
push
iret
movsb
inc
leave
addl
cltd
idivw
lcall
pop
rclb
test
pop
fildll
xor
jge
mov
pop
sub
out
out
out
inc
test
sbbl
jmp
jns
push
rep
pop
int3
sarl
aam
psubb
repz
push
push
loope
outsb
stc
cltd
xchg
adc
push
fcmove
push
mov
jno
and
sub
aam
push
or
push
jo
jl
dec
xor
adc
hlt
mov
cmp
add
push
sbb
xlat
mov
mov
lock
jl
pop
shll
push
stos
mov
dec
outsl
iret
repz
ds
insb
jge
pop
sarb
xchg
cwtl
push
push
pop
jae
lret
jecxz
xor
addr16
jle
sahf
and
pop
pop
fldcw
xchg
jmp
and
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
xlat
hlt
push
pop
sbb
add
sbb
pop
out
sub
dec
add
pop
insb
popa
dec
cli
sub
jmp
ss
mov
popw
sarb
cmp
repnz
lds
mov
mov
cmc
and
call
les
stc
cmpb
jbe
cmp
imul
lods
out
ficompl
push
pop
insb
sub
jnp
fists
jg
xchg
add
pop
outsb
dec
add
dec
jno
pop
repnz
push
xor
jp
dec
xor
outsl
inc
mov
or
std
mov
scas
add
cltd
jne
movsl
mov
sarl
fwait
push
cmp
lea
dec
xchg
imul
pushf
push
mov
and
test
adc
test
push
idivb
leave
fsubrl
fldt
sbb
mov
mov
ret
xor
mov
icebp
hlt
aad
mov
fidivs
aad
ret
xchg
sti
fld
push
pop
add
bound
jbe
xchg
cmc
push
sti
popa
sbb
mov
idiv
push
in
in
xchg
mov
mov
jle
pop
ss
dec
repnz
test
enter
or
jp
mov
or
inc
xor
insb
insl
fwait
jge
mov
scas
xor
scas
cld
inc
pop
sub
and
rorb
divb
sub
or
cmp
add
push
leave
sahf
mov
lret
dec
fwait
out
aad
aas
cmp
imul
push
aaa
insb
pop
push
aad
xchg
test
sbbl
jle
mov
aam
into
fdivrl
mov
xchg
xor
mov
mov
out
ret
xchg
pushf
pop
or
icebp
inc
push
inc
aas
pop
xchg
mov
lcall
add
incl
ficomps
mov
fcom
in
dec
adc
adc
inc
js
ror
dec
lcall
out
add
shl
jmp
mov
xchg
inc
jns
cmp
push
lahf
pop
mov
inc
imul
lods
int
nop
gs
cli
jl
pop
pop
sahf
jb
in
movsl
bound
scas
test
cltd
bound
outsl
ss
and
enter
test
lcall
unpcklps
jb
or
lock
cmpsb
sbb
add
adc
rol
xchg
mov
into
adc
in
or
in
xchg
movsb
loopne
add
mov
pop
popa
sahf
in
add
jns
mov
unpcklps
push
fs
lds
fs
mov
inc
sarl
push
inc
xchg
lret
pop
lods
jmp
add
ret
mov
insb
dec
dec
sahf
aaa
cmp
xor
sub
mov
mov
leave
cmp
push
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
sbb
sbb
adc
sbb
out
cmpsl
das
lret
dec
push
out
mov
cmp
insb
lds
cvttps2pi
jne
fs
cmc
pop
roll
sbb
jae
int3
lea
pop
insb
aad
lock
pop
xchg
xor
pop
dec
stos
push
stos
pushf
jg
outsb
idivb
stos
add
sub
mov
sub
mov
xchg
add
sbb
inc
or
mov
cwtl
dec
xchg
and
mov
pop
cbtw
icebp
rolb
mov
xor
hlt
dec
cmpsl
lds
aad
pop
cmpb
xor
les
loope
sub
or
subb
adc
pop
jne
mov
push
mov
sub
or
push
and
xlat
pop
mov
repz
mov
lock
mov
mov
addr16
add
xor
cs
fisttpl
pop
shl
jg
lret
pop
cmp
jno
imul
fsubp
push
mov
push
icebp
xor
fidivrl
mov
ss
ss
mov
ficoms
or
push
sub
ja
pop
mov
inc
popf
mov
aam
les
iret
mov
lea
mov
es
cmpsl
inc
mov
push
shrl
inc
xlat
pop
cmp
adc
pop
pop
test
lahf
mov
fwait
mov
int
int3
push
dec
or
xchg
xchg
or
ret
mov
lea
ds
pop
jb
cmp
aas
ds
mov
jecxz
sbb
dec
push
into
sysexit
or
or
add
sub
popf
push
stos
dec
or
mov
subl
push
cmp
mov
flds
jmp
and
insb
cmp
lds
outsl
dec
scas
sbb
repz
add
add
pop
movsbl
dec
daa
adc
sti
jge
xrelease
xchg
jmp
xchg
mov
push
pop
push
lods
jl
sbbb
ret
mov
out
repz
lret
in
lret
ds
das
add
cltd
pop
leave
aas
ds
je
inc
ret
pop
das
cmp
inc
jo
cmpsb
xor
and
mov
xor
sub
lods
xchg
insl
nop
flds
cld
fidivs
adc
rclb
jp
sub
jbe
pop
add
in
inc
js
sti
pop
inc
ss
jbe
loop
divl
mov
nop
pop
data16
mov
out
cld
sbb
jb
push
repnz
out
ret
mov
sbb
inc
jle
pushf
xchg
leave
jo
pop
aas
insb
sub
repz
in
jecxz
shlb
mov
mov
repnz
divb
out
mov
jge
nop
daa
pushf
hlt
mov
push
mov
incb
push
sti
lds
sub
dec
stc
adc
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
mov
adc
sbb
adc
sbb
in
pop
daa
xchg
mov
stos
cmp
adc
push
leave
daa
pop
xchg
sbb
lods
in
dec
fiaddl
push
scas
push
xor
outsb
je
fnstsw
jae
dec
dec
inc
mov
push
push
iret
loope
outsb
mov
and
sahf
adc
cli
fdivrl
xor
std
push
or
sub
lea
dec
sbbl
jg
and
push
ss
fst
repnz
mov
vdivss
test
iret
push
add
pop
or
mov
decb
movsb
mov
push
lock
xchg
cmp
mov
cltd
outsl
cmpb
cmc
cmpsl
pop
fcompl
pushf
lret
sub
movsl
sarb
into
lods
cmpsl
fwait
pop
pop
sub
cmpsl
inc
xor
mov
push
sub
stc
jp
push
adc
ret
push
dec
sub
sbb
out
pop
mov
cmpsb
xorl
cmp
movsl
out
sbb
mov
cmp
push
fs
add
push
sub
fs
push
pop
xor
jge
stos
dec
lock
pop
cs
cmp
pop
loop
inc
test
out
loope
leave
push
mov
and
push
sub
cmp
repz
adc
push
or
mov
cmp
test
fnsave
out
in
lcall
hlt
in
shll
data16
insl
shr
stos
pop
scas
rcl
push
sti
insl
je
jmp
xchg
rcrl
mov
pop
dec
int3
jl
push
in
jb
and
les
xor
or
pop
jno
mov
js
mov
jecxz
cmp
or
insl
mov
loope
push
icebp
mov
cmpsl
shll
push
aas
or
out
mov
cltd
loop
nop
imul
sbb
leave
mov
outsb
lcall
jmp
adc
jns
cmp
xchg
mov
pop
out
data16
mov
xor
cmc
shr
xchg
in
mov
scas
mov
cmpsb
movsb
pop
jnp
dec
pop
movsb
ret
sbb
jp
mov
imul
xor
es
push
xorl
aaa
pusha
aad
das
mov
lret
lret
and
into
test
lea
rep
call
jae
push
rolb
jg
mov
andl
pop
cmp
cmp
push
xchg
fidivl
add
pop
lods
das
xchg
and
pop
lahf
jg
pop
sub
pmaxub
fisttps
in
jmp
ja
cmpsb
icebp
fs
or
shrd
push
ficomps
fldl
jl
das
movsl
sbbb
dec
xchg
rorl
mov
xchg
inc
dec
in
enter
mov
std
add
xor
cli
inc
test
aam
scas
add
scas
dec
inc
movsb
mov
les
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
mov
mov
or
sbb
push
movsb
xor
negb
adc
add
out
pop
jp
jmp
dec
pop
add
mov
dec
test
lret
or
stos
aad
mov
sbb
mov
xchg
dec
mov
mov
mov
icebp
sbb
loope
into
fwait
aam
xor
dec
mov
push
das
cmpsl
dec
xor
loope
inc
and
les
idivl
push
sbb
lcall
imulb
add
int
dec
sbb
add
fstp
cmpsb
lret
pop
sub
dec
jbe
mov
cmpsb
jb
inc
sti
xchg
jecxz
push
cwtl
mov
testl
insb
jmp
call
je
push
pop
add
in
push
xlat
mov
icebp
jae
lods
popl
stos
roll
add
cmp
rorb
mov
add
xor
shrl
cmp
inc
cmpsl
dec
sti
dec
pop
inc
cmp
lods
sar
fadds
adc
popa
pop
cmp
xchg
subb
int
push
or
jp
jle
movsb
pop
pop
push
dec
inc
dec
mov
mov
cs
add
lods
and
mov
xchg
dec
stos
inc
sbbl
add
adc
rorb
mov
dec
scas
loope
mov
xor
movsl
aam
neg
adc
cwtl
leave
mov
jp
daa
dec
jg
ret
adc
ljmp
inc
and
ds
call
lock
into
sahf
jnp
inc
cmp
add
stc
mov
cld
cmp
or
jae
ja
insl
imul
sub
mov
cli
xor
scas
add
sub
mov
clc
cmc
mov
dec
push
pop
test
jno
adc
mov
arpl
lods
fsubs
stc
xor
in
js
mov
outsl
xchg
notb
fidivs
int
push
push
data16
adc
sbb
and
ds
rclb
inc
mov
in
or
jne
mov
enter
rcr
add
loopne
cmp
stos
add
pop
jns
insb
push
jbe
das
stc
in
or
nop
lahf
xor
dec
out
xor
testb
sub
mov
jb
lret
sbb
mov
nop
jnp
xor
mov
mov
daa
js
jae
mov
iret
mov
mov
in
sbb
mov
in
mov
mov
mov
and
xchg
cmp
push
das
jae
cmp
sub
inc
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
jg
mov
pop
sbb
test
sbb
sbb
lcall
lock
mov
jbe
addl
push
xchg
adc
lahf
xchg
add
pop
pop
push
jne
xor
mov
movntps
mov
xor
clc
push
sub
mov
jae
dec
insl
std
mov
and
scas
in
popa
xor
fwait
in
addl
cmp
shll
adc
push
ljmp
and
push
pop
xor
xchg
stos
lods
stc
cmp
mov
aad
pop
sbb
aaa
jne
and
roll
pop
adc
cmpsl
lahf
mov
repz
jae
sub
xor
cld
jle
xchg
lods
mov
mov
jecxz
add
pop
aad
sub
scas
fildll
cmpl
adcl
inc
fbld
jmp
sub
mov
mov
mov
lock
aam
push
mov
xor
aaa
xchg
sbb
daa
cmp
jo
dec
mov
mov
pop
adc
scas
test
fidivs
out
pop
int
pop
push
mov
push
clc
lret
jb
or
sub
inc
jnp
ficoml
lahf
and
push
dec
push
insb
lea
pusha
dec
adc
add
stos
sbbl
lods
shll
dec
inc
imul
rcll
into
popl
jae
in
xchg
jne
xchg
pop
mov
xchg
xor
lods
sahf
fisubs
dec
aas
std
mov
jnp
or
or
push
fdivrl
mov
arpl
mov
arpl
lea
js
xchg
or
xchg
lods
test
gs
mov
lahf
xor
sub
pop
out
call
movsb
pop
jle
outsb
out
ds
cmp
dec
inc
mov
inc
pusha
filds
cld
lcall
incb
int3
into
sbb
mov
cmp
mov
imul
std
or
xor
pop
xchg
sub
pop
gs
sub
sub
je
test
call
mov
adcb
and
sub
dec
lret
in
mov
xchg
lds
and
ret
xchg
inc
add
in
iret
mov
repz
and
and
mov
pushf
lret
mov
sahf
imul
cmovp
xor
lods
nop
lret
test
and
push
test
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
push
jnp
popa
add
sbb
cmpsb
movsl
das
adc
mov
inc
cmp
push
outsb
js
daa
nop
cmc
es
push
js
fwait
sarb
stc
outsb
lret
aam
mov
and
dec
cmp
jl
lret
pusha
sbb
mov
mov
adc
mov
jnp
lods
inc
mov
pop
adc
mov
icebp
lock
aaa
sbb
scas
fisubs
lret
aas
jne
clc
push
sub
or
xlat
sub
sub
jecxz
push
movsb
imul
test
fwait
ret
inc
xchg
or
sub
ret
jae
fbld
outsl
or
fcoml
sub
rcrl
addb
mov
int3
jo
data16
cmp
adc
gs
sbbl
inc
push
mov
cmp
xchg
ljmp
shlb
std
rcrb
sub
andb
cmpsl
fadds
pop
jbe
cmpsb
mov
rcrl
and
inc
fisubrs
popf
inc
jge
stos
cmp
mov
xor
add
push
bound
or
mov
dec
mov
lret
jecxz
add
addb
loopne
in
loope
push
adc
ds
imul
sbb
mov
mov
mov
mov
or
add
jns
pop
mov
cmc
loopne
out
pop
jo
xchg
pop
js
cmp
insl
jnp
lea
mov
bound
dec
mov
xchg
jo
ljmp
xchg
push
ficoms
add
ljmp
and
sub
add
lahf
and
clc
xor
dec
lret
aad
mov
xor
jmp
fcomps
gs
sub
and
mov
inc
and
stc
movsl
pop
inc
dec
pop
jge
sub
aad
cmp
clc
sub
sbb
das
and
xchg
cltd
jns
dec
cmpb
mov
mov
push
push
mov
pop
inc
mov
mov
push
mov
or
mov
inc
lods
inc
jne
into
je
sbb
sub
sbb
std
or
cmp
dec
mov
outsb
cld
mov
add
sbb
push
scas
mov
movsl
hlt
js
adc
fsubrl
les
subb
clc
in
fisubrl
cmpsl
mov
adc
aas
jmp
hlt
mov
jnp
xor
xor
xor
dec
inc
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
jne
push
sti
sbb
test
sbb
push
sub
mov
std
call
jle
leave
and
in
mov
and
inc
jmp
ret
popf
mov
adc
shr
das
push
test
pop
ret
sbb
xchg
pop
icebp
add
movl
lcall
shlb
lret
insb
push
dec
sub
add
or
rorb
and
mov
pop
xor
andl
inc
divl
cmp
dec
popf
mov
mov
test
arpl
fwait
idivl
mov
push
fcmovb
je
in
imul
insb
xor
jmp
aad
lods
iret
inc
addb
in
push
jno
dec
clc
loope
sarb
mov
punpcklbw
pushf
ja
dec
mov
ret
mov
xor
inc
das
xor
arpl
jle
sbb
xlat
scas
std
enter
test
xchg
add
mov
sub
xchg
jl
pop
xor
testb
mov
aaa
icebp
ret
mov
test
out
in
pop
out
sub
into
rorb
lods
pop
pusha
xchg
jb
in
stos
jbe
jae
mov
in
jge
adc
adc
loopne
jne
mov
pop
and
out
jns,pt
cmp
aaa
mov
movsb
ficoms
scas
xchg
cwtl
stc
fiadds
or
icebp
mov
das
loope
add
inc
xor
test
or
out
int3
push
insb
loopne
popa
imul
fdivrl
test
and
pop
mov
jnp
out
out
mov
fdivr
loope
shlb
xchg
fsubrl
pop
xor
loop
push
ret
jne
les
dec
lret
ss
jg
fwait
sub
stc
or
jne
jne
jle
aad
ud2
mov
es
push
mov
adc
cli
scas
das
push
mov
mov
daa
xor
add
pop
sbb
ss
push
inc
ss
lods
xor
jg
xchg
out
adc
gs
insl
xor
cltd
pushf
in
mov
mov
and
sbb
mov
js
mov
cmp
lret
fcompl
data16
int3
andl
xor
cmp
dec
mov
and
cwtl
ja
xlat
mov
outsl
outsb
popf
das
imul
push
daa
gs
mov
fldcw
faddl
pop
xchg
repnz
or
pop
or
xor
adcl
fwait
nop
or
pop
mov
lea
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
push
negl
sbb
iret
and
cli
data16
pusha
scas
cmpsb
cli
xchg
aam
ja
cmp
rorl
aas
mov
mull
push
sbb
adc
cmp
aam
jne
sbb
sbb
out
rorb
mov
inc
andl
fsubs
lods
mov
loope
and
test
pop
enter
dec
ja
sbb
cmp
icebp
addr16
push
mov
bound
imul
jbe
aad
shr
and
outsl
into
sbb
cmp
clc
iret
or
movsb
dec
mov
inc
xor
mov
repz
push
cmp
xchg
popa
jp
arpl
filds
insb
dec
adcl
mov
rorb
mov
push
and
sbb
and
mov
ss
test
clc
inc
sahf
sbb
jmp
lret
dec
sbb
jbe
dec
fiadds
cmpsl
xchg
xor
adc
mov
inc
sub
into
adc
js
mov
test
int
cmpsl
subl
subb
xchg
add
mov
add
div
jl
rolb
xor
jl
push
sar
xchg
shl
sub
xchg
jb
hlt
fidivrl
or
push
sub
lcall
xor
sub
iret
clc
in
jecxz
cld
arpl
dec
insl
push
movsb
mov
push
xor
push
nop
xor
cmc
aad
inc
adc
cwtl
fs
sub
popf
pop
sbb
mov
add
mov
les
call
sbbl
loopne
stos
dec
cltd
cli
jb
adc
in
dec
jnp
mov
jl
inc
add
jbe
fnstsw
jecxz
aaa
mov
dec
sahf
xchg
add
aaa
dec
int3
pop
mov
cs
shlb
sahf
xchg
xor
rcrb
mov
mov
fs
jle
ds
mov
sahf
or
adc
test
jo
mov
movsl
lcall
jp
inc
lea
test
and
shlb
cmp
out
dec
jbe
cli
jo
jmp
add
adc
push
and
xchg
pop
dec
pusha
or
xor
lcall
adc
mov
xchg
daa
pop
imul
jns
cmp
jne
jmp
in
sbb
outsb
std
imul
xchg
fcomps
add
dec
mov
and
incl
inc
call
movl
jmp
aas
mov
mov
dec
mov
jne
adc
sbb
test
sbb
xchg
cmp
cmpsb
mov
or
cmpsb
lods
out
int
out
mov
push
mov
adc
dec
sub
ret
or
cmp
bswap
cmpsb
and
pop
andb
cli
push
add
jnp
inc
addr16
aaa
mov
push
lret
inc
lods
push
mov
mov
mov
and
mov
repz
and
add
sub
mov
dec
rcrb
imul
fdiv
xor
js
bound
cmp
xchg
and
xor
pop
add
ret
pop
xor
add
mov
lds
scas
pop
and
mov
adc
jmp
or
lods
leave
mov
adc
push
jmp
clc
js
aaa
mov
dec
mov
sub
in
push
mov
or
aam
into
enter
mov
inc
mov
mov
mov
cmc
xchg
sar
ret
mov
and
xorb
jp
inc
scas
cli
rcrl
jne
fldenv
inc
fs
out
add
cmp
int
pop
out
adc
ja
movsl
ss
iret
pusha
mov
adc
insl
adc
insl
adc
lea
sti
jmp
ror
xchg
inc
aam
sbb
test
dec
sahf
mov
outsl
mov
push
es
in
test
dec
push
jns
hlt
xchg
popa
add
and
pushf
push
vpshuflw
shlb
push
mov
iret
push
or
add
sub
repnz
nopl
scas
push
out
sub
xor
jecxz
jo
jbe
aas
sub
aam
out
movsb
ret
mov
cld
ja
or
daa
push
cli
sbb
sub
scas
imul
ss
and
sub
sbbl
cmc
xlat
adc
sbbb
push
ret
fwait
mov
sub
xor
mov
ss
jb
icebp
test
sub
int3
aam
pop
iret
mov
mov
and
and
xchg
in
and
shlb
mov
adc
popl
js
je
daa
arpl
cli
sbb
sbb
push
pop
test
inc
call
sbbl
pop
push
jb
pop
icebp
cld
mov
inc
int
pop
cmp
popf
scas
jnp
or
jge
cwtl
or
es
test
dec
xchg
mov
test
movsb
xchg
mov
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
push
out
mov
adc
sbb
push
sub
mov
fs
jmp
or
lods
push
add
sub
add
sbb
xchg
push
pop
cld
and
cmp
xchg
jle
sub
sbbl
sbb
and
push
shlb
xchg
sbb
clc
pop
or
and
inc
lret
jmp
je
adc
push
in
stos
xchg
int3
cmp
and
add
dec
movsl
addr16
and
lea
shlb
loope
mov
jg
push
in
inc
sarb
mov
inc
insb
pop
mov
and
stc
cmc
push
ss
add
push
out
sbb
or
stos
popa
sbbl
jg
push
inc
adc
jne
repnz
mov
shrl
xor
inc
push
jp
test
and
inc
pusha
je
int3
test
xor
mov
scas
cmpb
xlat
or
mov
rol
pop
and
mov
movl
call
bound
arpl
pop
in
mov
cmp
fwait
inc
scas
scas
xor
icebp
dec
jnp
ret
je
dec
push
mov
pushf
imul
pop
sbb
push
jecxz
mov
push
cmp
mov
inc
mov
call
jns
lahf
test
sbb
xlat
pop
or
xchg
fsubrp
jmp
loopne
push
repz
in
pop
mov
xor
ret
aas
gs
js
mov
rorb
jbe
push
cmp
add
jecxz
sbb
imul
sti
cmp
std
sbb
fsubs
fdiv
jg
xlat
cmp
inc
lahf
mov
in
cwtl
test
jne
mov
push
adc
idivb
xor
test
mov
mov
lret
in
cmp
fwait
mov
outsl
jle
sub
sti
lea
fwait
das
mov
push
mov
out
icebp
dec
cmp
aad
mov
das
aam
scas
test
fdiv
cmp
cmp
xor
push
mov
mov
sbb
add
scas
xor
xchg
test
inc
in
ljmp
arpl
adc
scas
pop
jae
pop
xlat
cmp
popa
and
test
sbb
movsb
ret
sub
shll
mov
sub
cmc
stos
cmpsl
inc
shrl
lock
popa
xor
sub
pop
icebp
into
pop
stos
jmp
pop
rol
mov
xchg
add
jb
lret
je
addl
and
xchg
xor
inc
test
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
cltd
lods
mov
out
sbb
fcompl
fwait
push
xorb
inc
in
int
cmp
jnp
imul
cmp
mov
out
fst
pop
mov
dec
out
lods
push
jle
mov
xchg
in
sub
mov
inc
jbe
pop
lcall
sbb
push
outsl
scas
inc
cmp
add
add
mov
rclb
adc
lds
cltd
push
inc
or
add
jecxz
lea
in
xchg
int
out
lret
push
sbb
jnp
jmp
iret
dec
addb
cmp
adc
xchg
mov
xor
sub
adc
cld
mov
mov
dec
imul
mov
imul
sub
inc
adc
popf
push
dec
in
inc
fildl
jge
shlb
mov
fs
jo
cmp
push
jl
ds
cltd
mov
scas
repnz
lahf
fildl
add
mov
pop
mov
inc
in
rolb
sbb
adc
adc
dec
in
sub
out
sub
and
sbb
or
movsl
lret
sbb
mov
push
mov
dec
outsb
shrl
cmp
jo
xor
hlt
dec
sti
stc
sbb
sub
xor
mov
mov
pop
cwtl
sahf
add
pop
add
test
adc
aam
out
lcall
sub
imul
xchg
sub
lea
test
dec
movsl
xchg
aaa
cmc
mov
pop
xchg
rcrl
push
addb
add
xlat
cwtl
adc
push
push
inc
or
loop
dec
and
negl
movsl
fs
sbb
mov
arpl
cmpsl
aaa
mov
and
ljmp
inc
call
mov
jmp
sub
lret
cmp
mov
adc
mov
jmp
lcall
push
sub
inc
jno
bswap
ret
addb
add
mov
lods
nop
mov
jge
sahf
cmp
pop
inc
jns
pop
xchg
je
clc
sub
aam
mov
popf
int
call
jnp
enter
xor
and
xchg
sub
mov
jbe
sarb
dec
outsb
lret
repz
sbb
dec
mov
mov
imul
push
pop
jne
add
lods
into
les
nop
rorb
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
mov
loopne
sbb
clc
jo
xorl
popf
lret
push
inc
bound
aad
or
test
jecxz
and
sbb
push
cmp
cld
sbb
imul
enter
shrl
stos
shl
ficoms
jge
ret
das
cmp
cmp
push
and
or
add
jl
repnz
and
cmp
adc
add
mov
rep
fs
out
mov
cmp
inc
fdivl
fldl
mov
adcb
add
je
push
pusha
mov
repz
outsl
jle
or
jo
push
xchg
orl
adcb
daa
push
jge
sbb
scas
rol
orb
es
sub
pushf
xor
fiaddl
lret
rcrl
stc
jle
inc
ret
dec
xchg
cmp
jp
fildll
add
outsl
scas
mov
push
mov
and
add
in
xor
iret
xor
cltd
add
jecxz
mov
push
test
push
cmp
dec
mov
or
stos
enter
push
sbb
and
jbe
shll
push
push
cmpsb
inc
add
fadd
inc
insb
out
mov
lahf
sbb
stos
xchg
sub
inc
inc
jl
lahf
jecxz
mov
outsl
cmp
inc
jno
repnz
pushf
push
data16
xor
cwtl
stos
lcall
sbb
jno
mov
xor
stos
jne
std
push
push
movsl
xchg
cmp
sub
popa
std
sti
call
or
mov
sub
inc
sarb
mov
outsl
roll
xchg
push
cmp
dec
shll
sub
jle
lcall
lret
leave
sarb
mov
fstps
add
xchg
out
push
les
mov
out
stos
jp
and
adc
lret
clc
aaa
sub
add
and
jp
loopne
imulb
mov
xor
dec
jle
mov
add
les
or
dec
cmp
loopne
test
adc
xchg
scas
jne
stos
jp
mov
loop
adc
mov
adc
scas
mov
push
and
pop
dec
cwtl
into
cli
dec
xchg
inc
dec
push
ljmp
leave
ficoml
add
orl
cmp
dec
sub
jmp
or
push
stos
mov
push
push
imul
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
adc
sbb
adc
sbb
pushl
xor
push
movsb
fidivl
and
inc
jl
inc
mov
arpl
push
data16
cltd
push
jmp
xor
pop
xchg
int
mov
or
mov
mov
cltd
jbe
xchg
psrlw
jb
pop
push
adc
stc
ja
push
cwtl
or
scas
cmpsb
jp
fdivrl
das
push
cltd
sbb
jbe
mov
cmp
mov
inc
sbb
adc
add
mov
sbb
icebp
and
push
arpl
pop
xchg
cmp
iret
fld
jmp
pop
add
bswap
xor
decl
mov
jp
or
rclb
into
xor
scas
mov
jno
cmp
adc
lock
add
ret
repnz
mov
mov
call
out
jmp
adcb
xor
fwait
xor
popa
cltd
fidivs
lret
in
and
or
mov
mov
sbb
mov
sbb
movsb
ljmp
sbb
in
inc
fsubl
add
dec
imul
lds
imul
jmp
fucomip
sub
or
sbb
xor
mov
and
std
ret
imul
gs
jo
jno
dec
adc
lret
pop
les
pop
jbe
xor
mov
out
dec
and
push
pop
loopne
fdivl
dec
jp
movsb
inc
rcll
out
scas
inc
notb
or
out
xlat
loop
or
mov
push
ja
enter
mov
push
jb
insl
push
popf
lcall
outsb
and
cwtl
ret
popa
gs
jns
gs
cmpsl
mov
clc
ds
mov
imul
jnp
dec
push
test
lods
or
int3
jmp
xchg
mov
dec
cmpsb
mov
inc
sti
xchg
jbe
or
mov
mov
fdiv
jae
popa
add
test
fucomp
or
sbb
sub
int3
xor
cmovae
jno
lods
inc
aas
popf
add
shr
sbbl
or
pop
bound
push
rcrl
push
mov
or
test
subb
cwtl
jo
frstor
or
cmp
jg
adc
loope
inc
jno
mov
jg
xchg
aas
leave
lods
addl
std
add
or
push
movsl
push
test
rorl
js
lcall
mov
mov
leave
fstpt
and
imul
mov
icebp
sahf
inc
mov
ss
sbb
pop
adc
outsb
mov
nop
gs
sti
adc
or
mov
mov
jg
int3
mov
bnd
xlat
fbstp
sub
mov
test
mov
sub
adc
addr16
int
stos
mov
in
int
dec
dec
clc
ds
into
xchg
dec
inc
sbb
popf
sub
dec
js
jle
test
cmp
ljmp
cmp
daa
mov
popa
push
out
sub
mov
add
fsubrp
daa
lods
pop
insl
test
adc
sbb
push
jg
or
xchg
add
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
js
mov
xor
sbb
mov
mov
lret
fwait
xorb
push
sbb
pop
jg
adc
xchg
and
sub
push
or
jne
imul
sbb
adc
adc
cmp
movsb
dec
xlat
add
and
movb
or
cld
stos
or
push
add
insb
add
sbb
mov
ud1
push
clc
outsb
sub
mov
fucom
inc
xchg
mov
fxch
das
push
cmp
int
fwait
aad
xchg
lods
in
fs
addl
add
fldcw
jo
pop
sub
pop
rol
lea
fcmovu
adc
das
pusha
in
fwait
add
inc
out
pop
jmp
adc
sub
iret
test
jge
xchg
push
mov
pop
out
jge
int
cs
imul
leave
sub
sbb
fldt
jns
pushf
push
ljmp
sbb
nop
daa
sub
movsb
and
imul
inc
leave
inc
dec
push
fistl
push
cld
inc
aaa
into
pop
test
push
adcl
cltd
mov
add
mov
mov
jne
push
fwait
iret
lods
cmc
jecxz
pop
mov
mov
pushf
push
sbb
or
cmp
cmpsl
sti
add
cmp
lret
jns
jb
lcall
stos
enter
sarb
lcall
aad
add
jno
lds
data16
in
outsl
jl
push
sbb
jae
inc
cmpsl
inc
jge
sub
outsb
rorb
movsb
mov
and
pop
push
inc
aaa
pop
adc
cmpsl
scas
xchg
mov
andb
jnp
jmp
adc
cmp
cmpsl
cvtps2pi
xchg
loop
es
lods
jne
fistps
jbe
scas
mov
iret
pop
adc
add
aaa
sbb
nop
adc
jl
inc
fidivrl
push
mov
sbb
cltd
push
jb
xor
add
dec
push
and
pusha
and
cmp
add
push
sarl
ret
pop
cltd
mov
or
repz
jno
push
fstpl
adc
outsl
ljmp
add
jno
fistpl
sahf
mov
rcl
daa
js
pop
mov
cmp
jle
push
scas
mov
es
pop
imul
lcall
fsubrl
jnp
add
mov
divl
dec
shll
fiaddl
test
or
shll
inc
mov
jge
aaa
and
leave
das
fidivl
sub
mov
shr
or
test
hlt
jae
aaa
mov
jg
sbb
aas
mov
mov
sub
sub
inc
popa
pop
jg
insl
and
adc
or
imul
mov
mov
and
in
ljmp
add
fsub
testl
nop
shlb
cli
fnstsw
ds
lret
cmp
sub
xor
sahf
gs
sub
cld
ljmp
pop
push
add
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
stc
out
das
jmp
dec
jp
jnp
pop
fisttpll
add
or
fwait
push
pop
mov
or
dec
fcomp
push
add
int3
push
test
ds
es
adc
sti
cmp
out
and
ja
xchg
sub
cmpsb
add
leave
enter
lea
ljmp
imul
aad
adc
out
out
dec
mov
test
in
xchg
xchg
mov
dec
jns
cmp
or
adc
push
cmp
jne
fwait
in
sahf
stos
xchg
push
lahf
pushfw
mov
enter
push
mov
js
int
cli
and
jmp
mov
clc
repz
mov
xchg
stc
leave
add
cmpsb
jle
shlb
sub
fsubrs
imul
stos
cmp
lahf
rcrl
cmp
push
out
pop
mov
test
ss
add
pop
cmp
std
mov
sar
fildl
mov
cwtl
cwtl
out
jmp
in
or
add
fcmove
mov
orb
jnp
xchg
sbb
fidivs
cwtl
sub
inc
out
cmpsb
dec
ss
jnp
fiaddl
imul
ret
std
add
insl
jp
lahf
loop
sub
add
fistps
inc
sub
fisubs
push
fwait
stc
popf
fmuls
stos
mov
mov
cld
adc
dec
nop
and
push
lock
mov
xlat
xor
fldenv
xchg
sbb
cmp
cmp
jmp
stos
fdivrs
bound
rcrb
inc
in
pusha
inc
mov
sub
sub
sub
jno
int
movq
mov
pop
ds
je
int3
push
into
mov
dec
xor
ljmp
adc
pop
pop
aam
xor
mov
les
orl
in
add
push
dec
push
in
xchg
andl
mov
sahf
mov
pop
lahf
subl
mov
sub
mov
push
pushf
arpl
aas
jo
jmp
inc
jb
in
insl
inc
cmp
jns
sub
repz
mov
ds
sbb
and
fs
jl
mov
mov
jge
xor
daa
push
pop
xchg
add
dec
mov
mov
jnp
or
in
data16
cmpsb
stos
jmp
es
in
push
decl
scas
ror
add
loopne
out
stos
fs
xor
jg
idiv
repnz
mov
in
mov
push
mov
adc
test
shrb
xor
mov
pop
scas
out
xchg
xchg
mov
jnp
dec
jecxz
add
cmp
and
dec
sub
add
sbbb
cwtl
inc
or
mov
loopne
out
cltd
ss
xlat
insb
ja
jmp
arpl
sbb
mov
ror
mov
aas
fisttpl
pop
inc
scas
testb
frstor
lods
add
sub
push
adc
iret
andb
jecxz
call
sti
adc
cmp
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
push
and
sbb
xor
sbb
xlat
das
sub
jno
or
mov
out
adc
mov
ds
or
lret
cmp
inc
js
mov
frstor
pop
pop
inc
cmp
stos
repnz
dec
inc
popf
cmpsl
and
lods
jae
sub
jle
orb
int
adc
dec
cmp
or
or
dec
imul
push
sahf
insl
icebp
popa
movsl
scas
adc
pushf
sbb
stos
fmul
sub
sbb
jp
adc
aam
dec
inc
sarb
dec
stos
pushf
adc
jo
call
sar
sti
je
xchg
mov
sti
lcall
sarb
fstpt
adc
subl
lcall
push
jecxz
lret
mov
mov
sbb
or
repz
insb
clc
mov
sbb
mov
or
add
xor
sub
sub
jae
sub
fnstsw
rorb
stos
repnz
adc
out
iret
mov
addr16
pop
pushl
inc
xor
sub
negb
and
ret
sti
pop
mov
outsb
ret
sbb
call
xor
sub
test
out
enter
testb
jp
mov
xorl
mov
jmp
dec
pop
mov
jns
pop
mov
imul
addr16
jne
xchg
and
pop
insb
cmpsb
int3
lret
fs
fidivs
or
int3
push
imul
fsubs
and
sbb
and
xor
negl
fidivrl
and
sti
out
iret
push
jb
fdivs
xchg
pop
or
mov
fists
push
xlat
adc
icebp
inc
in
stc
sbb
pop
jl
pop
mov
cmp
mov
xchg
xchg
loop
aaa
pop
orb
push
gs
hlt
jge
push
and
imul
insl
or
js
shrl
stos
adc
push
les
adc
shlb
loope
jne
and
ret
cs
push
repnz
addr16
repnz
jmp
mov
jbe
jg
mov
inc
or
mov
mov
aam
cwtl
adc
adc
dec
pop
bound
xorb
clc
ss
jle
lock
daa
test
enter
add
imul
inc
adc
or
test
subps
hlt
or
test
enter
dec
push
nop
aas
xor
mov
cmp
push
clc
fs
fnsave
mov
sbb
ds
cmc
mov
mov
negl
sti
hlt
lds
gs
nop
cmp
jnp
dec
rcl
xor
adc
adc
mov
xor
mov
frndint
mov
lods
inc
xchg
dec
lea
xor
pop
cld
std
outsb
cmpsl
and
fistpl
xchg
jbe
push
or
das
dec
push
jg
and
jnp
pusha
sub
jb
and
mov
mov
push
arpl
or
push
ret
hlt
pop
mov
hlt
sbb
mov
or
inc
loope
xor
stc
negl
adc
pop
mov
cwtl
rorb
ds
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
clc
ja
mov
sbb
xor
sbb
xlat
pusha
xchg
fiadds
fisubs
sbb
inc
cmpsl
popf
jp
rolb
aaa
mov
enter
mov
movsb
jbe
fistps
addr16
test
inc
scas
jno
add
out
lds
add
xchg
jne
insb
dec
push
hlt
push
test
mov
mov
cmc
push
inc
cltd
adc
gs
jge
push
outsl
mov
jg
mov
jne
aas
or
loope
jmp
cltd
addr16
mov
jecxz
mov
push
mov
mov
scas
jmp
movsb
pushf
or
add
testl
push
xchg
mov
mov
mov
in
jae
cmpsl
or
adc
jecxz
jns
pop
loopne
and
in
xchg
mov
rolb
or
outsb
mov
jge
and
jmp
pop
jne
and
out
pusha
and
mov
mov
hlt
jg
push
daa
jp
adc
cld
mov
mov
add
or
cmc
sbb
adc
sub
popa
aas
add
and
add
cmpsl
fs
incb
scas
cmp
pop
cmp
lret
pop
add
pop
xchg
add
out
mov
push
std
xchg
loope
inc
sub
sub
inc
in
sbb
arpl
sbb
pop
inc
pusha
mov
sub
mov
jp
jnp
sub
in
mov
mov
scas
out
test
xchg
aas
sub
ljmp
aas
lods
das
test
inc
add
clc
mov
je
dec
sti
lds
test
clc
stos
mov
mov
into
test
cmpsb
inc
mov
cmp
mov
add
add
stos
inc
aas
xchg
adc
arpl
jecxz
cmp
jmp
insl
mov
icebp
inc
daa
imul
cltd
push
mov
fs
jmp
call
shrl
cmp
sub
fsubrs
or
leave
jb
lahf
popf
cmpsl
or
nop
fmuls
js
rcrl
gs
daa
cmp
in
pop
push
aam
mov
gs
cld
jg
aaa
sbb
mov
xchg
test
mov
cmp
fwait
jnp
xor
push
xchg
jbe
and
jns
rcl
out
sti
inc
gs
fidivl
les
loop
aad
mov
inc
xchg
div
fidivrl
imul
leave
insb
ljmp
lahf
repz
push
addr16
jnp
sbbb
mov
cmp
and
mov
xor
rorb
inc
adc
out
and
push
rolb
jl
pop
mov
mov
mov
daa
popa
adc
push
jbe
divl
adc
rolb
sysexit
in
ficoms
nop
jno
jmp
adcb
icebp
sub
ds
icebp
shl
xlat
cs
xor
test
in
mov
or
push
fiadds
and
add
adc
jl
mov
cwtl
pushf
dec
ljmp
push
mov
cld
pushf
test
mov
and
out
push
fistpl
mov
mov
xor
int
shrl
xor
xchg
inc
cmp
push
into
aam
inc
imul
mov
rolb
pop
out
cmc
das
mov
mov
add
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
out
jle
mov
sbb
dec
and
testl
fistps
or
fcoml
outsb
outsb
pop
xchg
adc
iret
out
lcall
push
adc
sahf
push
cmp
add
ficoms
pop
lret
xchg
inc
scas
out
jecxz
mov
mov
fsubrp
sub
pop
cmp
jns
loop
mov
fsubs
cwtl
testb
ss
movsb
lods
and
mov
sbb
push
out
roll
or
stc
jne
nop
push
pop
xchg
mov
lret
pop
mov
outsb
xchg
packssdw
daa
dec
mov
testb
sbb
adc
loope
cmp
dec
jge
mov
sub
push
push
jecxz
or
mov
ret
sbb
mov
fcmovbe
iret
mov
test
test
xchg
cmc
roll
adc
call
and
das
xchg
stos
addl
insb
mov
out
lods
stos
je
adc
mov
mov
mov
inc
dec
dec
sub
lods
shrl
push
sub
pop
test
sub
das
hlt
popf
inc
mov
cmp
data16
mov
in
sbb
mov
test
enter
fsubrs
lds
inc
mov
call
ljmp
mov
adc
ffree
add
jp
pop
sbb
xor
and
and
clc
jo
push
push
test
or
xor
popa
idiv
popfw
push
popa
mov
lcall
aas
and
outsb
mov
out
jno
sbb
adc
insl
sub
add
out
cmp
cmp
ret
sbb
jge
xchg
pop
sbb
rorb
aam
call
lret
nop
push
inc
xlat
push
into
push
daa
jg
pop
jmp
cmp
dec
push
jns
fdivs
xchg
mov
sub
loopne
xchg
out
bound
arpl
jmp
gs
mov
in
sti
pop
pop
pop
mov
cmp
cld
mov
cmp
stos
imul
jae
sub
dec
mov
or
arpl
ficoms
jecxz
jge
pop
and
add
js
orb
mov
pop
sub
nop
test
inc
mov
xor
into
add
cld
and
ret
xchg
jp
inc
cld
or
cwtl
pushf
mov
js
test
lret
inc
xor
fidivl
std
insb
test
enter
sub
bound
nop
mov
shrl
push
inc
mov
sbb
mov
sub
icebp
adc
test
gs
mov
dec
sub
pop
je
in
mov
cmp
xchg
stos
movsb
xor
and
sub
xor
rclb
cmp
jmp
in
sub
popf
pop
mov
scas
adc
sbb
jns
fsubrl
xorb
rcrb
jns
adc
pusha
xor
fcomps
leave
xchg
shll
pop
shlb
ror
inc
sti
xor
lock
dec
jns
add
cmp
or
adc
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
shrl
mov
sbb
adc
sbb
gs
faddl
je
pop
ds
repz
scas
je
push
stc
ss
inc
test
ja
or
pop
fcompl
mov
aaa
hlt
fwait
in
cmp
fbld
bound
add
cmp
push
enter
int3
pop
dec
fisubrs
push
lcall
icebp
clc
rclb
pop
lret
in
ret
test
mov
cmp
adc
aad
or
mov
xchg
pop
jge
es
or
aad
loopne
movsb
inc
xchg
add
mov
mov
mov
mov
dec
cmp
xlat
mov
lods
in
lods
out
pop
mov
fimull
mov
adc
lret
sub
cmpb
loopne
cmpsb
mov
lcall
lea
push
mov
mov
inc
xchg
cli
xchg
cmp
and
cmp
js
sti
addr16
rcrl
subl
popa
das
ja
lahf
sub
mov
jl
and
cmp
fisubs
imul
fimuls
push
ljmp
addb
add
int
aad
pop
popf
sbb
dec
jbe
fwait
dec
das
jp
xchg
push
mov
jge
test
mov
lret
jp
jp
adc
lcall
movsb
add
jecxz
stos
mov
mov
jp
into
jnp
scas
add
scas
xlat
add
pop
scas
loop
add
mov
sub
das
push
aas
jno
cld
out
sub
sbb
inc
or
sbb
sub
mov
rcrb
cmp
xor
out
adc
sbb
repnz
movsb
data16
test
cltd
arpl
sub
stc
int
sub
xchg
sti
mov
daa
or
addr16
in
xor
cwtl
outsb
mov
mov
pop
cmp
daa
pusha
faddl
mov
and
xor
cmp
dec
adc
imul
add
lea
jnp
data16
out
pop
sbb
fisttpl
push
inc
xor
adc
into
and
mov
sbb
cmp
montmul
cmpsb
ret
pop
mov
movl
test
pop
les
leave
sbb
ja
outsb
pop
mov
stos
mov
aas
inc
ljmp
in
scas
mov
aam
jb
nop
dec
push
insl
rorl
push
cmp
popa
ss
gs
rorl
test
cmp
cmpsl
test
fsubrs
sahf
sbb
insl
push
out
jne
pop
imul
push
rolb
add
cmp
in
aas
mov
addl
xor
xor
xor
repnz
inc
jno
out
adc
fiaddl
les
xor
or
or
mov
int3
arpl
out
stc
add
test
inc
orl
clc
jno
lea
movsb
lods
scas
xchg
pop
fnsave
xchg
xor
in
or
cmp
cli
rcll
xchg
stos
cwtl
test
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
test
stos
sbb
test
xchg
mov
aaa
outsb
adc
mov
mov
inc
lret
sub
sub
jecxz
xlat
dec
jo
clc
std
pop
xchg
repz
xchg
iret
mov
mov
jle
dec
jno
addl
add
shrw
outsb
cmpsb
dec
cltd
jno
dec
test
adc
pushf
ficomps
pop
push
mov
ret
fs
repz
std
call
movsl
cmc
sub
int
cli
push
push
push
xchg
or
incb
xor
fs
cmp
adc
cmp
ljmp
xor
mov
or
jb
in
imul
add
xor
insl
adc
add
cmp
sub
ret
jne
mov
push
sahf
outsb
test
jb
inc
inc
mov
mov
in
mov
inc
test
out
test
shll
jl
loop
dec
cmp
push
inc
test
cmp
movsb
cvtpi2ps
inc
pop
mov
sub
cmc
rcrb
push
mov
cmp
push
mov
mov
dec
loopne
pop
sbb
pop
lret
mov
push
inc
sbb
push
xchg
fwait
sub
fidivrs
or
cmp
or
dec
pusha
cmp
push
adc
pop
inc
aas
imul
and
push
mov
and
add
shrb
add
insl
or
jle
repz
xchg
mov
push
adc
push
subb
sub
add
scas
sar
mov
ljmp
dec
dec
lods
fldt
xchg
push
pop
test
jbe
sub
cmc
or
dec
test
adc
push
int3
jo
jb
add
and
sbb
outsb
cwtl
dec
loop
push
jmp
cwtl
mov
ficoms
repz
xor
cld
jmp
shlb
repnz
imul
pop
pop
xor
mov
loop
imul
xchg
xchg
shrl
mov
lods
cmp
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
addb
movl
or
stos
and
jno
ror
or
adc
jl
mov
imul
mov
aad
jmp
imul
mov
insb
aas
outsl
pop
pushf
and
cltd
or
cmp
push
xor
mov
mov
sbb
out
stos
scas
dec
push
pop
fwait
sbb
xchg
mov
cmpsl
mov
fdivl
fadd
jmp
inc
jecxz
mov
push
sbb
test
sbb
jbe
xchg
dec
xchg
lods
mov
mov
lret
xor
rclb
mov
es
shrb
popa
mov
push
inc
mov
jo
andl
dec
jge
leave
stc
fimull
jne
mov
dec
xlat
out
adc
jle
xchg
mov
imul
mov
push
inc
andl
adc
mov
out
push
and
outsb
or
dec
and
nop
enter
cmp
jnp
cmpsb
push
xchg
lahf
inc
add
mov
pop
xchg
jg
pusha
or
ljmp
sub
dec
jo
adc
inc
inc
stos
lds
shll
mov
cli
mov
xor
decb
lcall
ljmp
fstpt
rol
stos
add
sarl
jl
pop
cmp
dec
test
insb
sbb
fildll
cmp
nop
pop
popf
mov
push
or
push
mov
jl
sbb
mov
jo
ret
cltd
jg
popf
cld
insb
or
fxch
movsb
or
call
dec
and
xor
mov
push
sub
jne
push
adc
outsb
ljmp
mov
inc
nop
test
aam
cwtl
jo
cmpsl
scas
inc
je
cwtl
out
cmpsl
lret
xchg
xchg
and
fsubs
je
mov
rolb
or
pop
mov
mov
int
sub
xchg
lods
pop
pop
test
ss
push
into
lea
arpl
call
dec
and
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
insl
mov
sbb
test
xor
es
sub
xchg
adc
shl
inc
cmp
mov
lret
push
rclb
mov
movsb
imul
imul
pop
stos
inc
xor
insb
pop
sbb
arpl
roll
cmp
jmp
xchg
cmpsb
arpl
call
mov
cld
fisttps
out
popf
ljmp
cmc
in
mull
mov
mov
scas
push
sbb
cld
push
test
aam
push
xchg
cmpsb
adc
pushf
pop
mov
pop
loopne
sbb
lret
dec
test
inc
scas
out
jnp
mov
imul
xor
pop
stc
sbb
adc
filds
or
xor
ljmp
andl
int3
fcompl
mov
pop
sbb
dec
int
ret
mov
maxps
mov
mov
xor
xchg
movsb
adc
xchg
test
pushw
cmpl
out
pop
push
mov
insl
scas
js
clc
sbb
int
enter
lcall
pop
into
ficompl
rolb
jle
add
sub
bound
mov
addb
dec
sub
arpl
lahf
jl
dec
mov
dec
dec
jmp
shlb
test
pop
mov
inc
adc
addr16
cld
lods
dec
pushf
mov
arpl
cmp
ret
add
lea
cltd
aad
std
mov
test
out
into
pushf
out
pop
mov
daa
clc
ss
lcall
mov
leave
test
push
test
adcb
lods
adc
lahf
and
icebp
or
add
pop
cli
and
xlat
gs
push
inc
mov
jle
mov
movsl
movsl
and
fidivl
push
cltd
add
aaa
ror
imul
adc
fiadds
sbb
sub
cld
lock
daa
xorl
divl
mov
mov
push
clc
sarb
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
xchg
or
pushf
sbb
test
out
out
je
out
imul
pop
inc
sub
cmpsb
gs
js
push
ret
and
lods
pop
clc
outsb
push
fldcw
popf
sbb
jo
insl
add
ss
inc
out
sbb
aaa
push
sahf
clc
mov
iret
cs
icebp
xchg
dec
mov
pushf
inc
ffree
jo
nop
sbb
inc
clc
mov
dec
fnstsw
sbb
out
icebp
or
mov
aaa
ss
xor
sub
xchg
stos
or
and
ror
inc
test
jne
je
insb
dec
into
mov
inc
insl
xchg
inc
ret
into
push
leave
int
sub
test
outsl
mov
cli
jge
mov
mov
dec
push
aam
pop
xchg
add
cmp
lret
mov
mov
xlat
xchg
popa
mov
xchg
cwtl
mov
stos
jae
mov
aas
xchg
hlt
pop
xor
mov
ret
insb
jbe
arpl
mov
stos
sbb
xor
inc
push
hlt
push
add
xor
mov
push
loopne
aam
sub
mov
loop
pushf
lock
mov
mov
loopne
mov
mov
dec
sub
rorb
mov
test
dec
pop
mov
mov
xor
dec
es
sti
leave
or
xorb
test
push
jne
cmp
loop
jb
sbb
mov
and
in
rcrl
aas
int3
add
push
mov
mov
xor
movsl
movsb
cltd
push
movsb
sahf
inc
cmp
data16
push
pusha
and
mov
cmp
xchg
add
pop
fdiv
push
or
leave
sub
call
enter
mov
pop
and
mov
push
push
hlt
mov
fsubs
repz
xor
mov
jle
push
or
push
inc
out
jno
outsb
and
ja
jg
stos
js
xor
rorb
push
push
clc
inc
std
xor
daa
scas
pop
sbb
pop
mov
and
adc
xor
leave
insl
dec
nop
xor
sub
iret
ret
or
cmp
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
test
sbb
test
pop
std
daa
lds
mov
pop
jnp
roll
gs
popf
xor
pop
orl
mov
cld
fistpl
and
and
jno
pop
mov
cmp
push
xor
rcrb
int
sub
sti
push
dec
sbb
pop
cmp
mov
fildl
mov
xor
fs
inc
push
and
sbb
aas
jns
mov
icebp
sbb
xchg
or
push
mov
lahf
push
sub
mov
push
jmp
sbb
repz
or
sti
test
adc
mov
adc
adc
test
xor
sbb
orb
pop
shrl
imul
sbb
outsb
pop
mov
inc
icebp
addr16
pop
xchg
out
cmp
in
cmpsb
loopne
pop
cmp
icebp
addr16
test
jecxz
or
out
mov
inc
test
xchg
loop
pop
loope
lret
fs
out
dec
and
aaa
pop
jns
jo
sbbl
dec
ret
daa
xchg
cs
push
sub
das
and
test
push
jnp
outsl
mov
adc
je
dec
adc
insb
lret
nop
jns
in
jge
sub
outsl
andb
jnp
xchg
jle
leave
cmp
dec
lret
sub
xchg
jmp
fimuls
cmp
ss
xchg
jno
cli
icebp
nop
mov
outsl
pop
sbb
scas
jae
ja
lods
jl
mov
add
mov
add
shll
sti
ds
rorl
pop
mov
cmc
dec
cmpsb
inc
sbb
out
mov
mov
push
lcall
xor
push
mov
mov
insl
les
sarl
test
sbb
std
scas
push
pop
mov
dec
outsb
inc
shll
bound
fistpll
ss
cmp
jecxz
fidivl
mov
out
test
mov
dec
cld
mov
fiaddl
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
mov
clc
pop
pop
xor
mov
xlat
or
add
dec
inc
or
stos
and
lods
pop
push
pop
test
jo
test
sbb
loope
mov
inc
mov
jbe
test
adc
jo
gs
add
push
hlt
sub
sbb
pop
test
mov
push
mov
shlb
mov
out
sarb
inc
dec
mov
adc
ret
mov
sahf
cmpl
dec
mov
pop
pop
cmpsl
xor
rorl
mov
pop
sbbl
lcall
push
cmp
ret
dec
insb
fildll
sahf
adc
out
mov
sbb
adc
out
shll
pop
movsl
pop
sub
or
xchg
ds
paddw
mov
loop
arpl
mov
stos
push
paddq
cltd
cmp
mov
xchg
pop
fwait
push
mov
cmc
negl
cmp
lret
or
xchg
rorl
inc
inc
out
cmp
xchg
push
adc
popa
aad
pop
pop
fistl
xchg
or
outsl
out
movsl
mov
inc
addr16
stos
pop
in
stos
dec
push
int3
or
adc
inc
fsubrs
fistpll
xchg
mov
sub
ror
or
ficoms
adc
ja
call
or
out
out
insl
xor
rcrb
jl
push
test
arpl
test
shll
enter
imul
fsub
mov
sub
push
inc
in
xor
xor
adc
sbb
popf
addr16
aaa
shrb
into
mov
js
shll
push
sbb
push
in
imul
adcl
movsl
mov
mov
xor
push
popf
rol
test
fldl2t
jno
roll
rcrl
sbb
pop
popf
scas
mov
push
stc
sub
call
pop
test
aad
and
jmp
shrl
add
dec
mov
jmp
div
mov
xor
or
jmp
push
and
mov
mov
nop
sbb
test
gs
xchg
or
sub
mov
mov
dec
lcall
rol
out
pop
lret
popf
lock
sbb
push
imul
or
lock
xor
mov
mov
mov
mov
push
lea
and
sbb
lock
jae
cmp
adc
outsl
cli
lret
xor
fbld
ljmp
fildll
fdiv
ret
loope
mov
fs
pop
xor
sbb
dec
sbb
fnstenv
jno
sub
cwtl
rcrb
adcl
outsb
into
adc
mov
cmp
xor
lods
push
xorl
pop
aam
xchg
inc
stc
aas
xchg
mov
ds
xchg
lods
in
popf
cmp
sub
push
les
test
push
jmp
in
incb
mov
xchg
lcall
jb
sbbb
aad
mulb
lret
jp
iret
in
idivl
push
es
or
lahf
stos
ja
jmp
adc
xor
push
fsub
sub
adc
loopne
jp
cltd
int3
popa
push
sbb
loopne
xrelease
icebp
mov
and
pop
cmp
fsubs
cmp
iret
dec
aam
popf
mov
adc
fcomps
out
cs
add
dec
scas
add
inc
mov
pop
scas
pop
mov
ja
fstps
aaa
xchg
test
push
push
hlt
mov
mov
xlat
cmp
imul
ficompl
dec
ja
push
data16
out
jae
cmp
pop
cli
xchg
scas
dec
jo
jne
and
nop
adc
mov
xor
nop
push
jecxz
push
aam
pop
scas
scas
xor
lock
xor
xchg
xchg
mov
jmp
add
sbb
imulb
aad
cmp
repz
push
pop
call
sbb
insb
out
push
test
out
les
xor
inc
cltd
sub
bound
jecxz
loope
ja
lret
xor
fwait
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
dec
jle
mov
sbb
mov
testl
jnp
movsb
or
lods
fstpt
stos
sbb
and
jb
mov
mov
scas
test
pop
xlat
cmpsb
jle
cwtl
fistps
push
jl
fdiv
rcll
out
lret
dec
cmp
out
add
jo
jecxz
cmp
push
or
xchg
dec
pop
aas
push
push
cli
jl
hlt
dec
mov
lahf
mov
add
sahf
ret
jne
jg
push
sbb
nop
and
mov
mov
sbb
lret
or
sbb
adc
cli
mov
jp
push
movsl
loope
shrb
pop
mov
lret
es
stos
movsl
cmp
mov
or
aam
pusha
addr16
inc
lea
arpl
cs
mov
xchg
cmc
xor
mov
pusha
and
loope
sbb
fiaddl
imul
xchg
adc
add
fnstcw
jae
ja
inc
in
mov
sbb
mov
mov
mov
jge
jg
pop
jg
xor
xchg
aaa
cmp
int3
adc
sarb
jo
mov
shl
cmp
mov
lcall
pop
sbbl
outsl
and
test
mov
jecxz
dec
mov
lea
inc
jle
aaa
rorl
mov
add
cmp
cmc
mov
insl
adc
push
dec
jo
aas
cmpsl
mov
sub
adc
mov
int
test
push
jb
inc
and
icebp
gs
aas
sarl
mov
sbb
mov
sub
pop
lods
test
js
jle
cld
xchg
push
jns
adc
xchg
cmp
jnp
rorb
arpl
loope
jnp
shrl
add
jmp
js
ret
adcl
inc
cltd
es
bound
movsl
mov
mov
mov
scas
leave
jge
jb
je
push
cmp
mov
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
xchg
sbb
sbb
xor
pop
xor
ret
pop
adc
jo
dec
pop
imul
fistps
mov
test
cs
jp
pop
fisubl
lcall
lcall
mov
add
ffree
movsb
or
cmp
mov
ja
xchg
pop
jns
xchg
mov
pop
std
pop
test
sarl
ss
mov
insl
add
into
dec
fnstsw
mov
adc
and
gs
popf
jne
shlb
jle
inc
dec
sub
nop
sar
orb
sub
adc
std
jne
es
add
shll
in
mov
push
scas
lret
cmc
xchg
mov
lcall
sbb
in
xchg
pop
fisubl
mov
push
mov
iret
jg
dec
add
or
xchg
aas
push
lods
cmp
and
inc
push
loope
test
pop
push
cld
arpl
lock
inc
cli
pop
xchg
add
sbb
xor
ljmp
ret
dec
mov
fsts
inc
xchg
xor
loopne
shrl
sbb
jo
sub
jns
push
mov
or
into
cmp
push
rolb
pop
cmp
dec
jmp
rcll
ret
ret
repz
xchg
aad
js
popa
sbb
ljmp
sti
es
and
movsl
jecxz
fs
insl
mov
xchg
or
arpl
mov
cmp
lar
sbb
cmc
lea
adc
scas
adc
cwtl
cmpsl
dec
mov
scas
pushf
lret
or
lea
rcrl
das
test
hlt
xor
std
cmp
cld
and
movsb
cmp
sbb
jle
dec
gs
rorb
xchg
dec
or
pop
or
outsl
pop
sub
repz
mov
pop
pop
dec
pushf
push
loopne
xor
scas
addb
pop
mov
mov
push
int3
test
jg
or
sub
arpl
or
push
inc
pop
add
add
cmp
jmp
or
mov
sub
inc
out
sub
push
push
mov
out
sub
and
xchg
cli
aas
jae
push
loopne
stc
cmp
xchg
pop
xlat
mov
adc
imul
cmpsl
xchg
cmp
ret
add
in
stos
and
into
fisttpl
mov
imul
cli
test
cmp
das
jmp
sbb
aas
inc
xchg
fisttpll
loopne
inc
out
bound
ret
rorl
out
sub
enter
jo
pop
imul
sbb
push
aas
lret
les
fucomip
xchg
mov
ja
rolb
adcl
xor
shr
sbb
add
and
jmp
pop
xchg
leave
xorb
and
xlat
shlb
pushf
in
lods
filds
sbb
scas
mov
iret
xor
push
jl
jne
push
jbe
pop
xchg
xchg
mov
and
popf
pop
xor
loop
sub
lcall
pop
or
xchg
movl
jmp
into
jne
inc
sbb
pop
clc
push
inc
mov
jns
sbb
xor
lods
testb
jle
pop
cmpsl
fistpll
and
rcr
mov
stos
or
adc
dec
fdivp
cmp
sub
ret
fists
out
cmp
xor
mov
int
inc
test
fwait
and
test
mov
addr16
insl
hlt
cmpsb
pop
or
cmp
out
xor
dec
lret
pop
mov
int3
adc
ljmp
sub
mov
enter
sbb
pop
pusha
jg
pushf
sti
jmp
mov
jnp
xor
jnp
dec
ds
test
adc
lods
out
sub
sub
adc
add
fistl
enter
fs
addr16
lods
int3
or
dec
andb
xor
gs
lret
mov
add
adc
scas
sub
cmpsl
push
jo
pop
lret
inc
pop
test
mov
and
dec
push
addr16
xchg
sahf
or
stos
xchg
mov
mov
cli
fnstenv
and
or
and
mov
xchg
lahf
dec
adc
sub
addr16
push
cmpsl
in
jnp
cmp
enter
stos
out
mov
fidivrl
add
sub
mov
lahf
xor
filds
ficoml
xor
and
test
push
sub
sbb
and
mov
cmc
xchg
sub
xor
rcll
sub
ss
inc
push
pop
hlt
into
cs
adc
fstps
fmuls
cmc
out
loop
pop
xchg
jne
movsb
lods
adc
addr16
cmpb
push
test
pop
adc
jno
pusha
xor
nop
xchg
mov
xchg
xlat
jg
test
sub
stos
adcl
sub
enter
cmp
mov
int
cmp
mov
add
insl
cli
and
into
lods
inc
cmc
ret
movsb
pop
push
jmp
or
pop
add
xchg
out
mov
or
inc
and
cwtl
leave
out
loopne
sbb
in
fdivp
into
sub
test
sub
add
jno
jbe
rcll
in
mov
adc
cltd
int3
mov
pop
js
mov
cltd
fstl
ja
test
push
inc
push
jno
mov
inc
jae
xchg
bnd
bnd
jno
outsb
jp
movsb
xor
mov
es
cwtl
ds
inc
xchg
adc
or
aaa
push
adc
push
cli
dec
inc
addl
xlat
or
shlb
mov
cmp
loop
cmpl
mov
pop
movsl
jle
and
sub
shrl
out
sbb
push
dec
cli
fneni(8087
outsb
mov
pop
lock
mov
and
out
shl
int
loopne
sbb
mov
call
adc
jae
sarl
in
and
jmp
push
test
push
dec
imul
mov
cmp
xchg
push
mov
subl
cmp
inc
clc
leave
std
lret
fwait
mov
mov
dec
xor
lret
andb
xchg
mov
and
imulb
imul
dec
out
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
mov
cwtl
and
sub
sar
ret
add
mov
inc
adcb
std
lds
hlt
jl
das
lock
and
push
xchg
repz
lea
mov
push
jle
sbb
aad
sub
test
aas
in
xor
sarb
popf
dec
inc
jo
sub
fmuls
push
lret
mov
dec
push
adc
mov
cwtl
inc
xchg
imul
rcll
add
or
add
xor
sbb
iret
push
cld
mov
adc
aaa
lock
movzbl
shll
mov
mov
sub
pop
mov
cli
fisttps
outsl
xchg
inc
push
xor
lret
flds
loope
adc
rcrl
push
arpl
or
adc
adc
shrb
jle
dec
int3
push
stc
repz
inc
mov
lret
pop
mov
notb
and
mov
lea
mov
in
cwtl
hlt
mov
xchg
xchg
mov
sbb
xor
imul
cltd
xchg
cltd
fsts
pop
lods
ret
inc
inc
jmp
shrb
in
scas
orl
stc
xchg
or
adc
mov
cwtl
je
jle
incl
lods
clc
push
fdivrs
cmp
popf
imul
nop
add
push
and
xchg
in
loope
imul
dec
aaa
fisttpl
int
and
ret
push
jmp
or
dec
push
dec
lods
jmp
fildl
js
xchg
aam
jmp
and
shlb
mov
loopne
adc
mov
dec
inc
cmp
out
sbb
xchg
test
loope
inc
sbb
rol
and
insb
jl
dec
in
call
adc
dec
xor
mov
adc
push
push
xor
fisttps
outsl
push
xlat
out
sahf
pop
jecxz
aad
cmp
pop
fwait
mov
mov
dec
icebp
cwtl
loop
xchg
pop
pop
pcmpeqw
xchg
stos
daa
ds
imul
inc
cmp
sub
mov
and
sbb
stos
mov
mov
mov
sbb
pushl
lock
outsl
lahf
mov
cmp
in
jecxz
iret
lds
dec
cwtl
andb
sub
cmc
lret
outsl
idiv
cli
inc
repnz
testl
push
sbb
cmp
in
call
xor
jge
jno
xchg
int
sub
stos
push
test
jo
mov
dec
xor
in
sub
push
lea
add
xchg
rcrb
mov
ret
popa
cmp
lahf
push
mov
push
adc
das
lahf
and
xor
mov
repnz
loope
psadbw
jb
and
jbe
sahf
mov
daa
adc
shl
sub
lahf
lods
push
pop
inc
jecxz
jns
shl
push
add
test
push
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
cmpsb
mov
scas
jecxz
sub
lods
xchg
push
cs
push
aam
mov
les
insb
and
arpl
push
cltd
cli
push
sahf
cmp
arpl
into
sbb
xchg
push
js
push
or
add
scas
mov
sbb
or
movsl
loope
cmp
cmp
push
mov
fcmovne
mov
add
fisubrl
mov
xor
adc
fs
jle
inc
mov
leave
sti
jmp
pop
stos
fisttps
jbe
jmp
and
inc
mov
insb
int
and
imul
test
mov
inc
rcl
fistpll
testb
sbb
adc
pop
push
mov
cmp
out
inc
or
addb
or
fisttpll
int
cmp
pop
out
ret
sub
pop
adc
inc
sbb
decb
data16
xchg
loope
icebp
loopne
sub
sbb
ljmp
and
fnstsw
sarb
test
lods
inc
cmp
inc
push
ret
inc
cld
push
fwait
push
arpl
inc
dec
sti
dec
dec
or
fsubr
mov
nop
arpl
cmpsl
ds
nop
in
std
in
aam
and
cld
fisttpl
sarl
mov
imul
xor
es
cwtl
sahf
dec
and
outsb
mov
pop
mov
or
jge
push
pop
aas
cmp
out
push
or
into
pop
xor
xor
xor
inc
mov
sub
arpl
cmp
mov
pop
jecxz,pt
pop
fwait
inc
cmpsb
lea
scas
mov
mov
jp
es
movsb
leave
scas
hlt
or
lods
aas
cs
pop
or
or
push
push
pop
jg
push
dec
cmp
out
add
das
and
cmp
dec
outsl
xor
rcrl
push
mov
data16
xchg
insb
loopne
repz
cmpsl
daa
mov
addr16
mov
imul
dec
xchg
xor
sub
outsl
cli
cmp
lret
add
push
ja
gs
jno
and
cwtl
js
jns
pop
stos
mov
xchg
lock
iret
inc
dec
pop
movsb
xchg
add
sbb
in
xchg
and
ljmp
scas
and
sbb
and
lahf
mov
jl
adc
stc
loope
clc
pop
xor
pusha
lods
xlat
lahf
pop
jbe
mov
sbb
jecxz
push
and
jo
inc
loopne
js
pushf
enter
int
sti
lcall
movsb
subl
cmp
stos
call
clc
inc
pusha
call
in
rolb
push
or
jg
add
xorl
jbe
sub
filds
mov
imul
hlt
add
or
pop
mov
mov
loopne
stc
sbb
fisttpl
outsl
adc
mov
bound
xor
icebp
pop
sub
cltd
cwtl
dec
mov
lret
inc
adc
sti
xchg
dec
push
jb
fistpl
ja
sbb
inc
les
jmp
dec
das
test
call
test
addr16
add
stos
cmpsl
outsl
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
xchg
cld
mov
jns
sbb
xor
fwait
clc
add
push
or
pop
jae
adc
jg
xchg
mov
rol
dec
rcrb
xor
fidivrs
iret
jmp
inc
adc
and
les
mov
push
dec
mov
loope
js
pusha
inc
lret
lods
mov
xchg
xlat
out
mov
adc
xor
jno
loopne
sub
dec
les
stos
xor
sarl
repnz
or
lds
loopne
jae
mov
cmpsb
in
outsb
outsb
adc
add
mov
mov
scas
lahf
ds
jno
pop
shlb
lock
mov
stc
jnp
mov
add
cmp
fistps
int3
inc
jmp
insb
mov
jg
arpl
dec
push
iret
call
sbb
arpl
add
mov
idivl
mov
int
add
in
cld
sub
shlb
push
outsl
int
cli
ficompl
leave
int
arpl
pop
jne
rorb
scas
mov
and
adc
and
push
loope
add
out
xchg
xchg
repnz
mov
fs
sbb
inc
lahf
ficompl
fstpt
add
or
mov
xor
into
xor
xor
mov
fsts
out
je
adc
arpl
sub
dec
insl
mov
push
loopne
dec
fs
lock
xchg
mov
jmp
sbb
add
sbb
add
jae
pop
les
jno
push
sub
xor
adc
out
or
ds
xor
mov
lcall
sarl
shrl
jo
mov
mov
mov
insl
sub
dec
scas
mov
movsb
int
push
cmp
jbe
pop
pop
inc
mov
dec
jae
test
mov
or
scas
ret
adc
pop
or
adc
lahf
loope
add
aad
in
pop
xor
ret
sbb
std
cmpsl
repz
jle
pop
pushf
lret
jbe
nop
lods
cltd
incl
pop
sbb
cmp
int3
mov
pop
mov
mov
mov
or
clc
es
and
sub
mov
xchg
es
adc
push
loop
inc
aaa
xor
push
sbbl
out
push
ja
or
pop
stos
mov
aas
scas
les
cmp
movsb
or
dec
jp
ss
pop
jp
inc
cli
dec
das
iret
mov
imul
mov
adc
sti
mov
add
cltd
imul
iret
adc
movl
and
sub
inc
jecxz
mov
scas
and
scas
mov
dec
int
pusha
pusha
push
adc
mov
leave
je
push
aam
inc
jecxz
cmovg
movsl
cli
and
or
arpl
add
pop
arpl
fs
pop
stc
out
sub
test
jle
bound
add
ret
jnp
sub
negb
xchg
xchg
cmp
cmp
xor
add
bound
and
sbb
cmp
outsb
insl
into
cmpsl
jae
dec
cwtl
insb
add
mov
cld
push
lea
into
popa
into
add
stos
mov
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
out
mov
pop
data16
jns
sbb
es
shrl
push
imul
movsb
and
xor
popf
pop
dec
cmpl
sbb
scas
ss
or
xor
xor
rcl
into
xlat
inc
test
push
adc
dec
cmpsl
mov
push
sub
or
push
pop
ljmp
add
pop
cmp
data16
sub
add
mov
rol
out
pop
mov
dec
bound
popf
imul
shll
inc
mov
inc
das
sbb
lret
jo
cmpb
sbb
notb
out
lods
inc
sbb
imul
bound
dec
add
cltd
adc
xchg
lods
xor
in
aas
xchg
sbbl
fwait
cmp
mov
and
mov
rcrl
in
ja
test
sbb
popf
das
cmp
pop
inc
or
insb
mov
add
int
mov
mov
lea
cmpsl
loopne
push
sarl
dec
inc
js
sahf
cwtl
out
xchg
out
and
jbe
xor
jae
fwait
scas
xchg
les
push
xchg
test
pop
bound
jp
cmpsl
sbb
int
mov
imul
mov
push
scas
mov
add
lods
sbb
pop
pop
ja
pusha
fbstp
fbstp
and
fwait
adc
pop
fisttps
cmp
and
sti
loope
dec
leave
jb
addr16
jbe
dec
add
rorb
stos
adc
mov
dec
adc
sbb
jg
dec
xor
sar
xchg
mov
je
dec
mov
and
lcall
scas
mov
mov
pop
xchg
fsubs
push
outsb
add
in
mov
cmp
into
bound
shr
in
dec
xlat
cmp
out
lods
out
icebp
popl
adc
mov
enter
sub
lds
push
jp
sbb
nop
xchg
insb
xor
xchg
out
stos
fiaddl
mov
sub
imul
jbe
addr16
aad
leave
xor
push
dec
xchg
jo
adc
sub
or
and
push
or
outsb
push
outsl
aam
jbe
jmp
pop
pop
sub
xchg
pop
in
adc
sub
cmp
lds
das
repz
loope
jle
jecxz
sbb
mov
mov
std
das
lret
or
mov
sub
jge
pop
je
mov
mov
lea
std
das
push
stc
lea
outsl
cmpsl
dec
stos
xchg
test
mov
fucom
stos
lea
les
xchg
les
mov
movsb
jno
icebp
sahf
cli
popf
inc
and
jge
add
inc
inc
leave
mov
mulb
loope
in
aad
push
mov
jp
ljmp
call
add
and
push
and
xchg
movsl
lock
es
fistps
add
add
mov
adc
or
cmpsb
subb
dec
mov
inc
lea
out
mov
movl
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
pop
icebp
popa
jo
pop
sbb
jns
sbb
data16
cs
iret
push
popf
sbb
push
je
lock
sub
stos
pcmpgtb
imull
cmc
dec
cmpsl
xor
in
add
ror
roll
insl
and
adc
lea
stc
lods
sbb
cmp
out
cmp
icebp
jnp
test
aam
push
mov
cmpl
mov
add
movsb
divb
jecxz
xchg
mov
rolb
dec
fisttpll
pop
popa
arpl
ret
inc
sub
jno
leave
pop
gs
cltd
jmp
cli
scas
jge
or
jle
dec
lret
pop
cmp
jle
dec
jae
jmp
adc
push
subb
cmpsb
pop
lods
jmp
jae
mov
cmp
cli
xor
imul
stos
imul
leave
jne
sbb
lea
adc
test
xchg
stc
cmp
xor
dec
mov
xchg
iret
out
negl
aam
sbb
push
adc
popf
jmp
xor
mov
sub
xchg
xor
scas
sarb
dec
pop
push
rolb
into
ljmp
jno
and
ljmp
push
stos
sbb
dec
mov
lods
scas
imul
push
andb
lret
sarl
shll
jne
jmp
fidivs
mov
pop
rcrb
and
sahf
jno
mov
xchg
and
ss
adc
repz
pusha
pop
insl
ret
mov
mov
outsb
push
jb
sti
pop
sbb
divb
jle
add
xlat
sbb
add
test
daa
push
push
pop
orl
or
gs
jg
daa
jmp
mov
pop
inc
stos
repz
and
jmp
pop
iret
xchg
and
in
and
dec
or
jno
xor
pop
loope
cmpsl
mov
jns
fwait
aas
mov
mov
push
xchg
mov
lock
rcrl
add
jne
test
jge
lahf
lods
loop
xor
sbbb
adc
imul
int
dec
add
sub
data16
xchg
fdivs
xchg
sbb
repnz
xchg
dec
mov
shl
pop
decl
or
ret
mov
jg
ds
pop
idivl
push
mov
sbb
mov
cmpl
dec
inc
jns
push
push
pop
inc
shl
xchg
xchg
popa
std
xor
out
adc
pushf
push
push
mov
icebp
inc
push
inc
repnz
inc
fdivp
push
in
xor
int3
dec
inc
insl
sub
xchg
xchg
mov
push
mov
hlt
pop
xor
mov
ficoms
idivl
sarb
test
mov
adc
out
imul
xchg
xlat
in
adc
push
insl
inc
cwtl
sbb
ret
mov
int
movsl
mov
pop
loop
test
out
cwtl
divl
mov
dec
adc
ret
mov
push
dec
fnstenv
jns
push
sub
js
rcrl
and
mov
mov
ret
rcrl
lea
sub
loope
lret
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
ja
jle
pop
sbb
je
sbb
aas
bound
stc
outsb
jg
popf
in
in
dec
push
xchg
cmp
data16
enter
xchg
lcall
push
mov
xchg
fnsave
push
adc
mov
jb
mov
jns
mov
cltd
dec
fwait
daa
xchg
cs
cmp
adc
jb
push
dec
jl
push
xor
push
aas
sbbl
lea
adc
lds
out
fwait
idivl
cmp
cli
movsb
bound
dec
pop
out
cmpsb
push
nop
test
pop
inc
popa
fists
mov
and
test
shlb
daa
pop
fisttpll
rcl
shll
dec
pop
into
sbb
ficomps
inc
push
inc
je
int
adc
sahf
daa
test
leave
jmp
jns
fsubrp
mov
je
mov
insl
mov
adc
dec
add
and
add
sub
and
cmp
xchg
mov
pop
enter
mov
dec
add
and
in
insb
and
lds
shll
xor
or
fldl
test
mov
push
mov
fwait
repz
fistl
xor
mov
addl
lods
xor
outsl
mov
jne
shr
cmp
jns
add
or
out
push
add
popf
and
jge
jno
ja
idiv
repz
incb
cmp
lods
dec
mov
cmpsl
sub
jo
aam
sbb
mov
movsl
xor
cmp
loope
scas
int
push
popf
aad
cmp
dec
in
push
mov
iret
pop
inc
pop
mov
test
test
mov
sbb
roll
mov
imull
std
inc
das
dec
ret
sbb
pop
ja
pusha
push
mov
mov
rcll
ljmp
js
cmp
into
ret
fidivs
ret
inc
push
xchg
or
jp
movsb
stos
push
jmp
std
fs
je
jmp
sarb
fiaddl
and
mov
addr16
adc
fdivrs
jne
popf
mov
popa
xchg
pop
fs
sub
into
add
insb
sub
and
imul
rclb
rol
in
cli
cmc
lea
iret
fstl
outsl
and
adcb
add
test
adc
bound
hlt
inc
jg
fwait
push
insl
bound
cmp
push
lods
xor
scas
mov
sahf
pop
loop
mov
jno
cmp
aad
dec
dec
in
stos
fdivl
jno
cmp
andl
rcr
push
orb
add
push
movsl
icebp
push
icebp
das
ja
iret
ret
jmp
lock
pop
jo
std
faddp
mov
adc
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
lock
and
sbb
subb
pusha
imul
cmpsl
or
mov
mov
push
dec
dec
sahf
or
sarl
ffreep
xor
int
test
and
outsb
js
or
incb
xchg
mov
repz
sbb
xor
mov
push
into
pop
clc
nop
ds
mov
xor
push
xchg
scas
in
push
sub
lods
push
cmc
test
xor
mov
shlb
aas
adc
ss
lret
out
pop
lret
arpl
add
cwtl
lahf
movsl
and
jg
repz
inc
iret
dec
in
fstl
fsubp
push
sbb
jb
pop
push
mov
adc
xchg
mov
std
mov
inc
jecxz
sub
add
xchg
mov
adc
int3
roll
sub
xor
inc
push
jae
push
lods
jb
movsl
int3
jnp
ret
mov
push
lock
mov
cld
push
pop
icebp
rolb
inc
cmp
xor
inc
repz
inc
imul
pop
in
popa
sbb
mov
fistpl
cmp
sbb
std
js
leave
divl
sti
test
pop
das
pop
xchg
lret
ret
xor
and
sti
inc
add
xor
rol
outsb
jne
jp
ficoms
and
fildll
ret
inc
xor
addr16
inc
test
das
mov
pop
xchg
and
in
lahf
adc
add
cmc
stos
mov
ror
push
pop
dec
ds
cmp
pop
adc
dec
out
sbbl
test
mov
mov
pusha
std
mov
cli
push
stos
xchg
decb
lds
cmpb
lock
cwtl
inc
inc
xchg
mov
arpl
dec
mov
enter
shlb
mov
push
and
hlt
ret
fmulp
sbb
in
mov
sbb
repnz
cs
sar
xor
jns
xchg
aad
push
mov
jo
scas
xor
or
in
addr16
mov
xchg
sbb
lcall
cltd
xchg
sub
icebp
movb
or
xchg
push
sbb
das
jmp
arpl
outsb
and
lret
push
jge
fcoml
popl
cld
sar
sbb
outsb
imul
jns
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
testl
scas
adc
sbb
fs
negl
or
lods
cmpsb
inc
inc
scas
sub
idiv
xchg
into
je
test
fs
mov
lods
rclb
int
das
pop
arpl
mov
push
loope
movb
jo
out
aad
loopne
jg
xchg
aas
xor
push
ror
cwtl
repz
jecxz
fucomip
lret
aam
jg
cltd
jl
loope
jp
mov
fs
push
xor
mul
call
cmpsb
outsb
nop
or
mov
xor
movsl
mov
pop
aam
fldl
nop
andb
loopne
fwait
sub
dec
dec
mov
ss
push
repnz
cmp
icebp
stos
jo
sub
mov
mov
mov
jae
add
cmpb
cld
jo
lock
mov
and
sbb
cmp
inc
test
pop
pop
shll
sub
mov
test
cmp
out
pusha
je
lahf
loopne
pop
push
jmp
movsl
fildll
dec
jb
xchg
xchg
js
outsb
cmp
lcall
daa
ret
pop
mov
jmp
dec
divl
inc
mov
mov
mov
xor
sub
sub
leave
push
xor
fnstenv
ds
xchg
pop
push
lahf
push
and
nop
mov
testb
add
stos
mov
push
shrl
pop
sbb
aas
mov
jecxz
xor
in
mov
stos
dec
lret
test
movsb
repnz
add
scas
add
pop
int3
xchg
mov
dec
adc
pop
jp
loopne
in
mov
sbb
xchg
int
dec
xchg
jge
mov
inc
cmpsb
lahf
lods
jmp
incl
jbe
cmp
mov
repz
mov
and
adc
jl
test
iret
and
in
repnz
aad
inc
out
adc
pushf
ficoml
rcr
and
sbb
jle
pop
cmp
fs
mov
xor
inc
sti
inc
cmc
push
les
into
das
ds
pop
scas
dec
pusha
rcll
adc
mov
add
movsb
inc
ret
mov
dec
mov
std
xchg
lods
sti
les
in
fcmovu
frstor
adc
jo
arpl
shl
out
bound
mov
idivb
or
ret
mov
mov
add
sub
iret
adc
pop
pop
shll
sbb
adc
dec
xchg
mov
add
ljmp
jmp
mov
add
cwtl
stc
fsubl
jmp
outsb
adc
jmp
push
add
sarb
mov
sbb
fsubl
push
xchg
shl
jmp
or
js
add
sub
adc
cli
dec
ret
loopne
push
xor
mov
pop
xchg
mov
rcrb
sub
test
loopne
das
push
xchg
mov
push
jo,pn
add
jge
ficomps
and
rolb
enter
push
fcmovu
dec
add
lret
out
or
xlat
cmp
add
lahf
loop
mov
push
movsl
dec
or
xchg
pop
inc
sub
cmpsl
inc
in
mov
mov
loopne
pop
inc
xchg
in
data16
cmpsb
jns
fistl
arpl
ja
inc
dec
lret
ja
scas
enter
sbb
mov
mov
mov
sub
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
adc
sbb
scas
adc
sbb
xor
setle
loope
or
outsb
insl
test
iret
inc
pop
pop
ror
sub
outsb
hlt
sub
test
out
mov
or
pop
pop
ljmp
divl
mov
push
push
adc
lret
or
xchg
push
stos
sbb
lds
mov
jp
lods
adc
hlt
adc
cwtl
ss
adc
push
pop
and
mov
addr16
fsubrl
inc
ja
mov
mov
adc
xchg
mov
and
inc
inc
mov
test
or
popa
sahf
mov
add
insl
jg
ficoml
lret
inc
cmpsl
jg
jecxz
stc
ss
mov
ljmp
repnz
xor
hlt
aad
ja
pop
insl
inc
sub
mov
xor
test
or
lods
arpl
lretw
rcrb
out
mov
and
mov
adc
dec
scas
imul
or
add
mov
sbb
test
xor
fstl
cmp
rcll
add
stos
push
xchg
push
je
divb
inc
mov
int
sub
ss
movsl
das
ret
push
in
int3
into
jns
insl
sub
sbb
clc
rcr
ds
les
add
ret
or
or
sti
addb
scas
or
mov
inc
mov
ljmp
and
add
sbb
jle
negl
pop
sarl
jp
cld
cmp
inc
mov
pop
dec
dec
pushf
push
sub
mov
ljmp
aas
pop
mov
xchg
jmp
aas
cltd
mov
sbb
jmp
fwait
xor
push
fldl
jl
enter
outsl
sbb
insl
pop
das
gs
fstpt
cld
pop
jmp
and
jp
shrl
call
repz
fnsave
mov
popa
jmp
or
mov
adc
sbb
or
sub
aas
aam
mov
push
ficompl
clc
cmp
scas
xchg
pop
enter
incb
push
pop
xchg
dec
cld
sahf
lahf
add
das
push
out
mov
jae
rcrl
aaa
in
outsb
mov
bound
stos
xchg
test
sub
jnp,pt
sub
cmc
test
xchg
into
outsl
inc
lock
dec
fwait
daa
repnz
imull
cli
pop
in
in
sahf
sub
orl
leave
xchg
add
push
sbb
hlt
push
loope
pop
add
test
inc
jae
dec
jnp
mov
cmp
out
jo
repnz
mov
cld
mov
daa
lahf
mov
mov
or
popa
jp
call
pop
ljmp
addr16
jg
pop
insl
xor
mov
loopne
cwtl
fsubs
cmp
sbbb
sbb
cmovg
test
test
cmc
mov
mov
inc
jbe
icebp
mov
or
cltd
sbb
cmp
inc
adc
insb
dec
mov
push
sbb
fwait
cmp
xchg
mov
sahf
pop
les
jle
shlb
ret
push
rcrb
cwtl
rolb
movsb
inc
mov
inc
push
jl
das
or
dec
xchg
ret
or
jo
mov
push
adc
outsb
push
aad
repnz
je
inc
frstor
daa
inc
hlt
xchg
xor
sub
inc
sub
daa
push
rcrl
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
mov
mov
notb
sbb
fistps
imul
hlt
aas
or
lcall
iret
dec
pop
enter
xor
sub
add
shlb
push
mov
or
or
es
movsl
push
or
sbb
mov
pop
pop
jb
xor
rolb
je
ss
test
stos
int
pop
aas
sbb
push
aaa
jae
mov
jg
cmp
xchg
decl
je
inc
mov
mov
mov
sub
popa
inc
out
xor
inc
cmp
fwait
push
and
inc
shrb
ljmp
push
fwait
out
not
mov
loop
into
ja
adc
jl
inc
sub
gs
and
iret
inc
sub
xchg
inc
mov
loope
sbb
repnz
lahf
es
jmp
aas
xor
insl
cwtl
imul
mov
add
mov
jecxz
jnp
arpl
push
jno
sbb
adc
jbe
push
shlb
push
xor
mov
fldl
fldcw
jae
inc
adc
cmp
mov
rclb
sarb
pop
ss
sub
pop
add
and
pop
and
inc
mov
stos
movsb
cmpsb
es
mov
add
adc
jecxz
repnz
mov
push
pop
lods
fmul
testl
mov
or
or
push
scas
mov
xchg
inc
imul
xor
xchg
jmp
inc
jae
push
rorb
mov
inc
adc
and
in
pop
pop
cmpl
test
mov
mov
leave
scas
lret
jno
mov
bound
inc
stos
inc
or
repz
xchg
and
jp
xor
jge
add
jl
xor
ljmp
aam
xor
pop
lea
add
rcrl
divb
mov
pop
cmp
pop
mov
dec
xchg
fimull
test
or
addl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
jbe
iret
jo
cmp
sbb
adc
sbb
stc
xor
sub
loope
xor
fnstsw
test
mov
pusha
sub
test
xchg
jns
loop
clc
jns
sbb
mov
jb
icebp
sarl
idiv
ret
push
dec
mov
mov
sbb
inc
xchg
sub
and
fcomps
loope
cmp
stos
test
aas
xchg
jge
pusha
cltd
mov
into
jmp
fsincos
lods
jno
add
jns
int
cmp
mov
into
sub
bound
in
jmp
gs
dec
dec
push
out
cmp
or
mov
pop
mov
cmp
cwtl
add
hlt
jns
add
ja
iret
iret
icebp
sub
push
cli
mov
pop
adc
fs
divl
lea
fimull
mov
mov
fimull
cmpsl
in
imul
popl
xor
jl
dec
out
mov
adc
mov
inc
and
pop
ss
loope
push
or
and
dec
inc
xor
mov
and
mov
mov
mov
mov
cmp
or
dec
cmp
xor
and
js
insl
mov
xchg
ja
xchg
xchg
mov
cmpsl
mov
jb
mov
idiv
cld
jns
sti
inc
add
notb
lods
and
test
sub
rolb
call
push
cli
xor
aaa
pop
aad
add
cmp
scas
bswap
adc
cltd
aaa
je
jp
and
in
xchg
dec
cmpsb
arpl
out
jmp
inc
cmp
jnp
rolb
icebp
in
pushf
iret
xchg
cmp
lahf
lock
popf
jl
ret
push
jg
mov
cmp
xchg
movsb
sbb
iret
add
push
cs
call
daa
xchg
int3
pop
pop
leave
push
js
mov
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
mov
hlt
push
sbb
notb
sbb
mov
push
add
test
les
sub
jl
movsl
xor
cmp
add
out
outsl
js
adc
rolb
cmpsb
lcall
xor
gs
adc
jecxz
fcomi
jo
imul
dec
mov
ljmp
test
push
mov
or
loope
aad
dec
mov
pushw
mov
and
aam
pop
out
mov
jg
test
jno
mov
dec
xchg
jae
inc
outsb
cs
inc
jb
mov
pop
test
mov
mov
out
hlt
out
loope
bound
fcomps
add
dec
outsl
enter
sbb
pop
hlt
jb
xchg
jnp
sti
aas
push
cwtl
sbb
lret
je
stos
mov
sahf
je
push
jecxz
dec
iret
jo
jbe
dec
push
std
out
or
mov
mov
outsl
mov
mov
inc
lea
sub
fnstenv
ja
cmp
test
or
fs
mov
sar
mov
cmp
jl
cmp
dec
xchg
jnp
stos
push
xor
stos
jp
stos
mov
jecxz
test
das
fildl
aaa
push
jg
fdivs
fmull
js
sub
adc
call
cwtl
outsb
cmp
mov
jb
out
mov
sub
mov
mov
arpl
ljmp
pop
mov
pop
daa
out
inc
xchg
xchg
sbb
in
pusha
xchg
jge
adc
inc
std
push
fldl
movsb
aaa
jb
mov
negl
jbe
dec
cs
shll
gs
pop
aad
and
mov
sahf
or
dec
mov
lcall
push
pusha
xchg
cmpl
xchg
jge
je
sub
mov
mov
jmp
jns
xor
and
shlb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
mov
loope
shll
xchg
fdivr
in
mov
inc
jbe
inc
mov
pop
sub
jp
decb
add
fcoml
ret
out
inc
int
add
data16
loope
inc
cmp
mov
jp,pn
mov
fsubr
push
dec
jecxz
fldenv
xchg
push
push
movsl
xor
pop
loop
lods
dec
fnstsw
aam
fs
je
add
pop
daa
jb
stos
test
ja
sbb
es
aaa
push
stos
test
xchg
push
push
and
into
mov
mov
jne
jne
xor
les
mov
dec
mov
ljmp
push
pop
inc
xchg
pop
or
cmc
xchg
jnp
push
fdivl
cld
sbb
mul
xor
mov
mov
outsb
lret
push
sahf
lods
mov
popf
pop
xchg
sahf
fcomp
je
clc
sub
pop
add
subl
movsl
push
dec
adc
push
cs
mov
ret
mov
cltd
fstpt
mov
adc
imul
bts
jp
stmxcsr
pop
or
and
jnp
inc
imul
push
fnstenv
in
sbb
mov
xchg
int
or
pop
jp
addr16
pop
pop
xor
mov
and
sbbb
push
dec
add
sub
int3
jbe
cmp
xor
ss
mov
cmpsb
cli
mov
xchg
es
inc
sbb
fs
add
das
call
das
pop
popa
xorl
imul
push
cmpsl
int3
pop
lds
insl
sub
cmp
lret
adc
jno
movsb
mov
push
or
pop
arpl
jo
and
jb
mov
lds
xorl
and
add
xchg
cmpb
gs
jb
cmp
stos
adc
xor
cmpsl
sbb
out
fcmovnu
das
lock
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
sbb
out
cwtl
dec
pop
dec
xlat
jg
shr
mov
out
xchg
adc
cmp
push
test
inc
mov
lock
dec
pop
clc
or
mov
xchg
add
add
inc
inc
mov
js
out
or
ret
leave
push
mov
jecxz
add
out
push
sbb
fldl
sub
push
or
leave
sbb
cwtl
jmp
sbb
jp
repnz
adc
push
mov
mov
mov
stc
scas
es
daa
push
mov
fistpll
arpl
mov
mov
mov
push
ss
sti
mov
adc
ret
pusha
pop
lods
sti
mov
aam
stos
and
or
add
sbb
dec
icebp
dec
xchg
sti
in
mov
test
cwtl
dec
sbb
adc
dec
aam
movsl
inc
and
sbb
adc
andb
leave
fnstsw
lea
fs
lods
lcall
sbb
sbbl
stos
mov
into
aaa
adc
mov
enter
out
out
adc
xor
icebp
push
outsl
mov
mov
lcall
dec
pop
sub
cs
scas
inc
ret
push
add
add
repnz
dec
lret
cmp
xchg
adc
adc
xchg
xor
sub
push
pop
ds
xchg
movb
dec
and
cmp
fucomi
pop
addr16
pop
or
jne
andb
outsb
mov
inc
mov
xchg
sbb
fldenv
fstps
pop
inc
test
mov
or
mov
outsb
movsb
cs
adc
mov
mov
lret
rcll
add
pusha
out
insb
pusha
sub
std
xor
mov
flds
sbb
push
mov
mov
jmp
aaa
and
dec
mov
push
out
loopne
mov
ljmp
sbb
notb
sbb
xchg
ljmp
fs
cmp
and
pop
sub
mov
idivl
dec
adc
out
in
inc
ja
push
cmp
mov
sbb
mov
adc
inc
adc
add
sbbl
push
outsl
dec
xlat
inc
cmp
imul
arpl
sub
jns
add
jmp
in
cli
mov
dec
mov
adc
in
fcom
test
aas
jecxz
mov
jno
fwait
mov
xchg
je
andl
cmp
inc
sbb
or
out
sub
cli
xor
ret
inc
push
ret
mov
add
mov
lret
mov
test
imul
sbb
bound
mov
jbe
mov
iret
xor
hlt
outsb
enter
aad
adc
std
lods
xor
repnz
in
push
scas
sbb
jo
ljmp
inc
jne
leave
scas
aas
icebp
sbb
inc
xor
mov
aaa
add
lods
add
pusha
ljmp
in
jb
out
dec
pop
popf
rcll
jecxz
pushf
mov
dec
call
mov
test
clc
jmp
shrb
or
pop
lods
hlt
dec
and
cs
lock
adcb
cmpsb
lock
ja
cs
fs
pop
sbb
adc
in
push
or
imul
popa
add
es
mov
jnp
outsl
mov
pop
jle
push
imul
mov
mov
jp
cmc
pop
rolb
mov
sahf
leave
shrd
sub
lahf
cltd
sub
popf
mov
sbb
add
mov
cwtl
xchg
movl
aam
pop
mov
imul
inc
xor
xor
jp
popa
mov
dec
add
fdiv
or
ret
sbb
test
movsb
jnp
fldcw
adc
jb
sbb
adc
out
movsb
push
ret
mov
and
lods
add
cli
jmp
dec
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
jecxz
stc
ret
cmp
jmp
daa
mov
mov
or
lods
sbb
jae
push
push
jmp
cmpl
mov
ja
in
dec
or
lods
xchg
sahf
mov
or
ret
jne
out
fimull
sub
mov
cmp
pop
daa
xor
push
inc
push
lods
jmp
and
in
pop
inc
popf
in
or
xchg
andb
loopne
mov
js
pop
and
jno
mov
addb
mov
and
mov
cmp
scas
cmpsb
sub
rcrl
or
mov
cmp
gs
fldl2e
lret
pop
inc
jecxz
xchg
sahf
loopne
xlat
adc
jb
fcom
add
int
push
adc
js
dec
mov
dec
popf
outsb
inc
mov
ret
mov
test
jne
cmp
inc
dec
ret
xchg
mov
pop
push
xor
dec
mov
cmpsb
cld
mov
xor
pop
into
push
inc
insl
into
dec
inc
push
inc
fimull
sub
mov
les
je
movsl
jno
fdivl
mov
ds
shrb
or
enter
sbb
jge
dec
cmp
sub
push
adc
pop
leave
shlb
leave
shlb
xor
mov
jp
ret
stc
dec
cmp
shll
leave
xchg
ljmp
pop
mov
ljmp
jecxz
xor
sbb
lcall
add
dec
jecxz
call
sub
sbb
mov
sbb
cli
xor
push
add
insb
jge
or
adc
ret
xchg
jno
push
inc
add
daa
cmp
xchg
loop
mov
aad
test
jne
imul
mov
sbb
clc
loop
dec
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
mov
jnp
and
add
ljmp
sub
movsl
sbb
lret
clc
shl
inc
add
das
jbe
sub
test
jo
aam
push
popa
mov
inc
push
sub
or
out
xor
leave
fwait
push
jge
dec
pcmpeqd
test
pop
sub
pop
pop
sbb
pushf
mov
xlat
add
add
add
inc
xor
rolb
xor
movsl
inc
call
cmp
jbe
jp
shrl
sbb
mov
xchg
xor
outsb
call
aam
jge
cltd
jmp
rorl
sbb
test
push
repnz
lods
les
es
push
cmp
mov
jg
add
dec
push
xchg
mov
mov
mov
cmc
shrl
mov
inc
stos
test
cld
xor
or
ja
rcrl
cmp
pop
lods
jbe
sbb
xchg
call
adc
xor
mov
ds
fstl
cmpsl
inc
pop
cmc
insb
aas
divl
aaa
lea
test
adc
xor
scas
or
add
outsb
dec
mov
lods
and
and
fstps
icebp
sub
jmp
loop
pop
fsts
jg
insb
xor
add
and
pop
cwtl
fildl
inc
push
sbb
add
andps
mov
pop
xor
xchg
sub
dec
shr
aam
inc
js
and
sub
adc
out
push
out
or
lea
sbb
icebp
insb
rcll
mov
jae
cli
adc
dec
out
xchg
aam
adc
mov
mov
fbld
or
jl
lods
pop
inc
orl
lods
sahf
push
xchg
in
scas
fisttpll
or
mov
ficoml
sub
in
stos
xchg
les
xor
stos
push
call
jne
jge
jmp
adc
hlt
aam
into
rorb
popf
mov
inc
sub
pop
mov
arpl
mov
add
sbb
mov
movsb
addr16
std
addb
dec
lret
xchg
inc
push
outsl
fs
pushf
adc
lea
adc
mov
je
popf
ret
imul
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
ss
sbb
sbb
enter
bound
sbb
adc
cld
sub
jne
cltd
jne
cmp
pop
adc
add
xchg
fidivs
mov
sub
mov
js
pusha
mov
xchg
push
rcrb
scas
mov
sbb
push
out
fsts
ret
bound
movsl
and
push
cmp
test
sti
icebp
inc
add
dec
pop
stc
pusha
decb
adc
or
dec
add
adc
stos
aad
jns
cli
js
fwait
inc
rorb
and
aam
inc
mov
dec
dec
cmp
cmp
outsb
pop
mov
inc
sbb
adc
ret
daa
dec
push
mov
push
and
jg
and
iret
cmp
divl
jge
test
andb
jmp
mov
scas
lea
lods
jae
push
mov
add
cmc
loop
daa
adcl
pop
dec
push
int3
arpl
add
sub
and
dec
push
inc
arpl
or
cld
adc
sub
pusha
test
mov
inc
and
int3
lods
sti
fsubrp
adcb
xor
mov
scas
mov
xchg
in
or
fcoml
ss
and
rcrl
cmp
nop
fistl
test
or
nop
lcall
jo
mov
mov
mov
mov
or
cmp
or
sar
aad
jl
xchg
je
loop
outsb
data16
dec
mov
cmp
or
loopne
and
mov
mov
mov
mov
aad
and
sbb
mov
mov
mov
pop
jae
push
xchg
aaa
add
pop
dec
arpl
sub
aas
shlb
add
jo
mov
popa
inc
and
daa
adc
ret
stos
sbb
xor
xor
and
lea
lock
inc
jbe
lcall
scas
cwtl
sub
cmp
es
pushl
mov
adc
and
xchg
pop
inc
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
push
sbb
sbb
adc
sbb
ret
xchg
sub
lahf
jno
add
sbb
push
mov
shll
jno
lret
or
xor
test
movsl
pop
subb
fwait
push
loopne
or
xchg
jge
imul
vmovddup
addl
xadd
int
outsl
insl
out
mov
in
push
gs
add
pop
push
stc
icebp
mov
push
lahf
imul
gs
cmp
or
or
mov
mov
insb
imul
dec
loopne
fstpl
insb
push
scas
xchg
mov
jae
mov
mov
out
outsb
sub
ret
mov
or
imul
inc
xlat
int
add
outsl
or
sbb
pop
icebp
fisubrl
mov
paddusb
and
xlat
ret
push
adc
inc
test
sti
xchg
imul
das
sub
pop
sbb
xchg
rcll
movsb
data16
mov
pop
lods
dec
inc
jecxz
subb
push
xchg
lea
xchg
mov
mov
dec
adc
cmp
hlt
xlat
or
inc
mov
xchg
pop
aaa
outsl
push
pop
clc
mov
inc
xor
jge
pop
roll
mov
pop
dec
lcall
jmp
cmc
jp
xchg
pushf
jbe
stos
push
nop
xchg
aam
mov
into
sub
data16
jle
mov
xchg
mov
cmp
aas
xor
sti
es
testb
fiaddl
lds
mov
fidivrs
movsl
stos
int
lods
sub
or
adc
cwtl
lds
and
lods
scas
mov
adc
xchg
sub
jmp
addr16
xchg
pop
iret
out
hlt
pusha
mov
sarb
pop
nop
sub
push
mov
sbb
push
push
push
cmp
scas
sub
fistps
lods
pop
popf
mov
mov
sub
inc
mov
addr16
xorl
xor
mov
mov
pop
cmp
stc
mov
pop
arpl
cmc
pop
adc
ret
and
rcr
xor
push
xor
mov
dec
cmp
adc
jg
mov
inc
push
fstps
cmp
add
xchg
or
fwait
mov
pop
std
or
cmp
xchg
stc
mov
into
loope
jl
gs
pop
cld
sqrtps
push
xor
mov
aam
sub
jmp
ss
sbb
pop
mov
pushl
sub
ret
std
xor
sbb
setnp
sbb
push
enter
icebp
ficoms
or
cmc
jne
add
clc
out
pop
push
test
jecxz
mov
imul
nop
push
mov
fisubrl
or
stos
int
orb
data16
fldcw
lods
sub
dec
imul
mov
push
xchg
cmpsb
push
add
lods
pop
dec
lret
mov
push
loope
xlat
out
xor
es
cmp
xlat
dec
add
aas
lret
aam
pop
lcall
adc
data16
fs
ret
mov
in
clc
cmp
sbb
aad
inc
iret
cmp
sbb
daa
mov
in
ljmp
or
movsl
push
pop
sahf
cld
mov
xchg
mov
lea
dec
and
push
sahf
icebp
fsts
dec
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
in
sbb
sbb
adc
sbb
xchg
clc
jne
adc
push
cltd
pop
aad
cwtl
addb
mov
shlb
inc
test
inc
mov
adc
cmp
fbstp
mov
in
les
sti
es
loope
aam
addr16
rcrb
jno
sbb
pushf
sub
and
imul
movsl
or
xchg
ret
xor
jecxz
mov
mov
outsb
cmp
in
mov
mov
jbe
repz
dec
sub
xor
je
test
cltd
and
out
iret
push
push
inc
mov
dec
mov
lcall
icebp
inc
xor
mov
aas
rorb
pop
sbb
sar
jle
sbb
mov
sub
fisttpl
rcrb
lock
repz
cltd
imul
jb
roll
shl
adcb
dec
adcb
imul
pushf
test
cmc
test
sbb
andl
sub
cmc
dec
xor
mov
mov
inc
push
mov
imul
sbb
repz
adc
fs
and
data16
shlb
popa
aaa
sahf
pop
jp
pop
popf
das
jno
popa
inc
xchg
mov
popf
pop
mov
mov
inc
push
cmp
xchg
shlb
adc
add
cli
sarl
xchg
aas
fwait
jnp
movsb
adc
sbb
icebp
outsb
sub
popf
ds
push
pushf
add
sahf
mov
push
xchg
sub
fsubl
jle
data16
jno
aad
repnz
idivl
xor
mov
inc
andl
fstl
mov
push
cmp
mov
and
pusha
or
frstor
push
jno
cmp
and
cmp
dec
pop
test
negl
mov
popa
ss
aad
shll
pop
popa
mov
enter
push
scas
je
lea
xor
adc
into
stc
inc
xchg
out
jge
movsl
in
test
test
jg
loop
lods
dec
mov
xchg
or
and
icebp
stos
in
std
test
pusha
btr
fbld
cmp
cwtl
pop
pusha
jae
mov
icebp
out
popf
dec
xchg
mov
daa
adcb
inc
into
push
nop
sbb
push
scas
jp
mov
sbb
cmp
stc
insl
sbb
js
sub
cmp
loope
jne
xor
mov
ljmp
sti
std
in
loop
mov
xchg
mov
push
add
sbb
mov
lcall
mov
dec
cmp
jp
and
add
mov
adc
push
push
sbb
sti
and
movsl
jl
sub
stc
or
inc
faddl
call
rcll
and
xlat
adc
nop
pop
ror
inc
rcrb
mov
mov
jae
adc
jmp
insl
xchg
sbb
cmpb
adc
mov
pop
shll
data16
adcl
mov
cmp
xor
in
push
xchg
pop
adc
dec
or
inc
test
dec
cmp
mov
mov
out
fadds
xchg
mov
inc
aad
popa
repz
mov
jae
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
and
jo
or
sbb
adc
sbb
aaa
fidivl
ss
pop
jge
and
sub
dec
mov
cltd
stos
jl
mov
xchg
add
dec
shl
and
flds
repnz
push
jg
sbb
fcomps
sbb
scas
dec
aad
pop
cwtl
lret
lods
aas
mov
js
repz
mov
push
mov
push
lcall
in
orl
add
pop
shlb
pushf
dec
xchg
bswap
mov
add
jnp
xchg
push
sbb
shlb
mov
add
push
add
jb
sub
or
int3
sub
cmp
sbb
daa
ret
push
cltd
push
jl
cli
inc
std
lea
fists
shr
pop
push
push
cmp
orb
xlat
pop
test
ret
ret
fimuls
mov
xor
inc
xchg
or
dec
adc
mov
addr16
xchg
mov
xchg
push
call
mov
cmp
add
inc
fiadds
cltd
mov
adc
and
sub
cwtl
lcall
stos
and
orl
cmpb
arpl
loopne
mov
repnz
rorb
mov
jns
ficoml
cmc
push
xchg
jecxz
dec
insl
popf
cs
scas
call
mov
stos
dec
shlb
jo
ljmp
int3
jo
mov
sbb
in
out
push
mov
push
movsb
pusha
inc
cltd
add
test
mov
aas
cli
outsl
sbb
cltd
mov
and
push
push
inc
push
cwtl
ret
stos
mov
fistl
push
in
out
pop
lahf
jmp
shll
mov
cmp
sarb
test
mov
mov
bound
dec
add
mov
jne
fmull
lret
inc
inc
lds
mov
mull
out
add
das
icebp
jns
push
mov
aam
inc
pop
adc
mov
xor
arpl
int3
insl
std
pop
jp
call
pop
xchg
and
out
inc
cmp
pushf
cmp
addr16
call
ljmp
pop
inc
xor
dec
movsw
jp
inc
mov
add
mov
jge
add
adc
scas
xchg
out
je
lahf
mov
data16
sbb
cltd
and
movl
cmp
add
insl
and
mov
lret
cwtl
push
in
sub
js
jg
push
decl
sbb
cmpsb
fistpll
fsubl
loope
mov
push
or
sbb
push
hlt
inc
mov
rolb
cmp
xor
inc
pusha
cmp
xor
ljmp
mov
inc
sub
repz
mov
dec
daa
sub
ds
test
jmp
out
sbb
pop
xlat
pushf
sti
cmp
pushf
mov
push
ds
or
mov
adc
add
xor
and
stos
inc
call
and
push
sbb
or
jmp
cmpsl
pop
cmp
rcrl
xchg
xchg
dec
cs
repz
dec
adcl
xlat
fwait
add
xlat
insl
pop
sahf
jecxz
cwtl
lock
push
data16
inc
jno
push
push
mov
subl
jmp
mov
push
in
xor
jl
push
add
sbb
adc
sbb
int3
mov
int
xor
into
sbb
push
mov
fwait
pop
push
and
stos
outsl
les
sbb
mov
pop
ljmp
mov
xor
fidivrl
add
lcall
mov
scas
mov
pop
xchg
pusha
xor
sbb
xchg
jns
out
dec
int
lcall
pop
inc
adc
fsubp
mov
mov
cmp
hlt
enter
xchg
push
daa
add
and
pop
cmc
mov
cmp
test
or
loopne
out
mov
push
clc
bnd
inc
fstp
add
loope
mov
mov
xchg
jl
mov
pop
cmp
inc
push
jne
or
sub
push
push
cmc
sub
jp
repnz
jle
rcr
rcll
shrl
xor
mov
lods
mov
xlat
test
mov
cmp
add
sbb
cmp
mov
adcb
and
adcb
sub
loop
jle
mov
adcl
xor
cmp
push
jnp
mov
xchg
sub
mov
hlt
pop
ret
jecxz
sub
cmp
shll
push
popa
pop
and
inc
rorl
and
sub
imul
in
push
jg
test
ds
into
fnsave
xor
mov
lcall
inc
dec
iret
or
insb
mov
fdivrl
into
sbb
pop
cmp
lds
fcoms
adc
jno
xor
pop
cmc
aam
xlat
stc
mov
mov
stc
push
mov
ret
mov
pop
iret
fs
imul
pop
das
mov
add
addb
cmp
dec
bound
out
xchg
cmpsb
dec
sub
das
inc
arpl
jae
push
pop
mov
xor
ja
push
mov
cltd
out
enter
test
cld
in
xchg
loopne
aad
or
xor
ret
test
xchg
ljmp
ljmp
loop
cmp
mull
imul
test
mov
jns
xor
adcb
outsb
mov
lcall
pop
mov
dec
bound
or
and
adc
jmp
jb,pn
mov
xchg
xlat
out
stc
jbe
dec
mov
mov
and
pop
incl
sub
and
push
mov
incl
cmpsb
insl
lods
push
in
popf
mov
js
pop
dec
fsubrl
sbb
icebp
mov
cmp
movsl
fmuls
nop
ret
or
sub
inc
enter
dec
dec
jge
adc
sti
adc
pushf
push
andl
popa
push
test
add
inc
fsubp
popa
gs
adc
cmp
in
sbb
fldt
arpl
mov
jbe
xchg
iret
mov
je
in
pop
jno
sbb
mov
std
and
call
test
xchg
xchg
push
dec
ret
lret
sub
adc
inc
fdivl
mov
lret
fcomp
loopne
xlat
adc
push
rcr
pop
jbe
dec
repz
push
xchg
xor
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
test
imull
mov
cmc
lods
mov
lods
int
ret
dec
popf
inc
mov
leave
fistl
cs
stos
pop
pop
jb
pop
and
adc
mov
pop
out
xchg
repnz
jbe
inc
test
in
jo
int
lret
sub
sub
xlat
pop
xchg
lods
insl
scas
jmp
adc
xchg
lods
xor
push
push
jo
cltd
ror
and
jp
adc
and
xor
jne
inc
inc
jbe
insl
or
cmp
push
dec
xchg
dec
or
pop
cmpsb
jns
fcomp
mov
mov
ss
repnz
push
add
call
cmp
ljmp
adcb
div
sbb
js
ret
mov
pop
mov
cmpsl
stos
xor
enter
pop
dec
sbb
jnp
sbb
andb
push
out
mov
push
add
mov
jle
or
sbb
or
pop
add
je
test
popl
sub
mov
and
sbb
fwait
test
lods
sub
push
pop
jge
pop
jecxz,pn
push
jo
scas
jecxz
push
outsb
or
fildll
mov
push
xor
mov
dec
inc
inc
cmp
sub
outsl
fcomip
or
incb
or
or
addl
xchg
out
cli
mov
cmp
sbbb
stos
fiadds
mov
loopne
popf
push
ss
dec
mov
dec
int3
jp
mov
add
sub
xchg
lods
stos
repnz
icebp
ret
f2xm1
cld
xchg
mov
lods
xor
repz
in
inc
in
cld
loop
sbb
loope
addr16
lret
mov
sub
xchg
repnz
cmp
add
out
out
xchg
mov
stc
clc
or
mov
mov
in
mov
mov
aad
rolb
out
pop
sbb
cmp
jmp
push
add
mov
cmp
sbb
add
leave
xchg
mov
cmp
push
jl
aas
bound
mov
mov
sbb
imul
daa
data16
sarb
sbb
pushf
pop
jge
test
inc
push
in
out
fistps
push
test
mov
daa
out
inc
imul
fmull
sbb
dec
ja
test
int
cmp
xchg
out
mov
cmp
mov
enter
movsl
stos
cmp
mov
xchg
mov
icebp
cs
xor
inc
fwait
or
lods
movsl
negb
in
test
xchg
sbb
arpl
lods
mov
mov
frstor
shll
mov
push
mov
dec
mov
xchg
push
sbb
dec
lods
insb
cmpsb
enter
push
and
jmp
push
xor
out
pop
inc
out
or
mov
arpl
mov
into
sbb
push
push
add
push
adc
jp
movl
sub
ljmp
outsl
cmc
mov
mov
stos
adcb
sbb
sahf
inc
addl
les
xchg
add
mov
xchg
rorl
enter
add
add
fimull
test
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
xor
mov
push
sbb
adc
sbb
xor
fiadds
icebp
pop
xor
repz
ljmp
clc
es
imul
mov
jb
fidivl
andb
loop
sbb
jecxz
into
daa
scas
jns
jl
into
jle
faddp
adc
jno
add
fcmovb
mov
adc
xor
xor
stos
pop
sbb
fcomps
and
add
jo
lret
jg
xchg
out
pop
mov
mov
cltd
in
sbb
add
fisubrs
xor
into
xor
sbb
xor
popf
scas
std
lock
mov
cld
jg
mov
fstps
push
stos
mov
ss
pusha
push
cmp
cmpsb
push
mov
rcll
xor
dec
cmp
cs
scas
stos
and
test
mov
add
rcrl
inc
or
movsb
xchg
dec
lds
mov
inc
mov
adc
out
repz
fdivrs
pop
xor
and
nop
lahf
cmp
jne
sub
ret
adc
xchg
ja
movsl
fldl
jnp
push
das
data16
adcl
scas
fcomp
or
jmp
popf
sbb
hlt
mov
xor
or
daa
fs
outsb
and
add
or
subb
outsl
imul
sub
pusha
cmp
push
and
xor
xchg
out
sbb
mov
cli
sahf
in
xchg
inc
jbe
ds
out
and
decb
pop
jne
adcl
imul
and
loop
sbb
adc
pushf
lock
cltd
je
jae
mov
test
cltd
in
push
sahf
nop
and
push
test
xor
dec
and
dec
jb
addr16
inc
xchg
out
jge
xchg
repnz
aam
in
mov
sbb
inc
hlt
or
xor
or
js
push
ret
dec
insb
jge
mov
jns
pop
xorb
lea
and
test
lret
push
lahf
add
into
shlb
ret
push
sub
ljmp
dec
icebp
jecxz
push
mov
mov
sbb
movsl
mov
dec
push
adc
inc
pop
fmuls
sahf
inc
cli
loope
ss
dec
icebp
insb
scas
sub
or
jmp
dec
stc
mov
lock
sbb
in
mov
mov
sub
in
bound
lea
pop
pop
adc
cmp
jmp
xchg
shlb
popa
cmp
ret
cmc
bound
loop
lahf
or
dec
je
sbb
push
mov
dec
out
icebp
fs
icebp
inc
jns
push
test
fdivs
bt
mov
lret
imul
in
push
mov
test
out
sbb
mov
int
and
dec
cmpsb
popf
ret
cmpsl
push
ret
addb
dec
jl
cmp
movsl
fs
leave
jbe
push
cmp
cmp
daa
sub
cmp
lcall
xchg
loopne
mov
cmp
xchg
movsl
or
rcl
in
cmp
pop
add
mov
js
out
loop
push
adc
inc
push
xor
flds
inc
sub
lea
mov
es
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
mov
adc
movsb
lds
imul
mov
mov
das
mov
sbb
insb
mov
xor
cmpl
or
and
sbb
xchg
dec
cmp
pop
mov
test
push
clc
stc
sysenter
sbb
inc
ja
sar
fwait
sub
js
gs
xor
and
hlt
je
fdivrl
stos
cmp
jnp
ja
ret
dec
in
and
insl
add
in
sub
adc
lods
jl
push
mov
xchg
mov
jb
inc
movsl
out
add
inc
fimuls
xchg
pop
imul
out
loop
aas
inc
testb
pop
jg
dec
lock
pop
push
jle
mov
xchg
insb
frstor
pop
inc
adc
fs
addr16
cmpsl
lret
ljmp
mov
daa
lahf
pop
dec
shlb
test
cmpsb
in
jp
ljmp
add
jl
pop
push
lcall
cli
and
and
repnz
cld
out
cmpsb
imul
int
sbb
test
nop
int3
test
xchg
hlt
out
or
ja
and
push
cwtl
push
repz
mov
xor
movsb
sahf
cltd
mov
pop
in
push
dec
cmp
test
push
xor
push
fnstcw
jle
cmpsb
push
fstpt
arpl
lods
test
rcl
subl
xchg
push
insb
and
and
pushf
enter
rcl
mov
xor
pushf
filds
mov
lods
in
in
jp
adc
and
fmul
int
cmpsl
add
xor
xchg
adc
sahf
cltd
pop
mov
mov
stos
push
mov
inc
pop
jno
jb
mov
cmp
push
jno
cmp
arpl
pop
leave
fildll
mov
lcall
jae
jmp
adc
mov
test
cmp
pop
or
subl
sti
out
mov
jns
test
cwtl
push
adc
inc
aaa
mov
dec
push
push
roll
cmp
negb
sbb
push
fwait
jne
push
add
test
call
add
mov
xchg
add
mov
cmp
or
mov
jp
je
fxam
mov
lahf
jbe
insb
mov
repnz
mov
xchg
mov
fidivs
add
add
jp
scas
dec
adc
outsl
xchg
inc
mov
lock
sti
inc
mov
jge
or
loopne
inc
repz
jecxz
pop
cmc
dec
push
mov
inc
cmpsl
pop
and
xor
movups
rcl
daa
xor
in
ret
ret
call
fucomi
mov
clc
nop
pop
std
loopne
lcall
aad
rolb
icebp
sbb
out
mov
xor
movhps
jnp
insl
js
in
jl
test
sbb
sbb
sbb
xchg
xchg
jns
out
push
push
inc
cmp
es
out
imul
std
fisubl
jo
pop
frstor
sub
into
ret
push
mov
sub
pop
icebp
mov
ret
rcll
clc
sub
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
push
inc
inc
push
jmp
sbb
xlat
mov
cmp
adc
pop
pop
daa
mov
sub
xchg
cmc
sarb
aaa
mov
add
ficomps
mov
add
pushf
scas
mov
mov
mov
repnz
cwtl
mov
jmp
aam
xchg
cmp
shlb
xlat
mov
stos
ret
adc
add
aam
sub
ret
aas
xchg
or
mov
push
out
scas
pop
push
push
dec
xor
imul
jecxz
movsl
xchg
outsb
psrlq
mov
lret
dec
push
push
or
cmp
sub
push
cmp
lods
fst
fdivl
dec
stos
mov
repz
bound
test
test
sbb
cmpsl
jns
adc
jge
clc
add
inc
aas
xor
popa
adc
in
je
mov
cmpsl
push
mov
cs
xor
aam
decl
sbb
insb
in
lret
sti
jno
fsubrs
popa
shrl
je,pn
in
xchg
or
inc
mov
stc
pop
or
jle
mov
lret
shrb
pop
sub
hlt
bound
jl
shll
push
cmpsb
or
pop
pushl
mov
cli
jecxz
push
dec
cli
mov
and
mov
and
xor
fs
ljmp
out
cmp
in
and
dec
scas
push
push
xchg
lock
in
out
inc
pop
ror
sub
mov
mov
push
mov
pop
jae
mov
frstor
mov
insb
cs
in
fildl
lcall
xchg
lret
add
pushf
add
je
xor
mov
mov
cmpsl
ret
hlt
pop
xor
hlt
lcall
or
push
mov
pop
in
xor
loopne
dec
adc
mov
cs
mov
fdivs
pop
repz
cmp
fs
pop
jp
cmpsl
scas
imul
dec
lds
std
lahf
and
inc
movsl
inc
and
xchg
and
push
insb
jnp
rol
mov
pop
test
ficomps
in
push
jnp
mov
mov
sub
add
fstl
addl
repnz
test
mov
mov
mov
push
push
cmp
daa
dec
jmp
xorb
xchg
les
pop
test
in
cmp
xor
push
xchg
mov
add
add
xchg
test
inc
xor
xchg
mov
imul
lahf
ds
push
jl
adc
cmpsb
xor
arpl
icebp
mov
and
clc
jae
or
int3
mov
cmpsl
add
insb
and
out
jo
les
dec
adc
fmull
aam
or
sarb
fisubrl
pushf
out
adcl
push
add
std
xchg
push
push
xor
add
or
gs
push
dec
jmp
sbb
jne
lret
cmp
inc
pop
or
pop
inc
test
xchg
dec
mov
pop
test
in
call
mov
add
movsl
stc
sbb
iret
dec
sbb
in
in
jne
insl
sbb
iret
jl
dec
jecxz
dec
fwait
mov
fcoml
add
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
adc
loope
sbb
adc
sbb
out
stc
pop
out
mov
sub
in
add
cwtl
in
movsb
mov
mov
addr16
repnz
sub
push
ret
cmp
mov
sub
adc
adc
lock
cmpsb
xor
ja
scas
aas
out
inc
pop
imul
insl
xor
cli
loop
test
dec
push
mov
mov
xor
aaa
mov
cmpsb
insl
cli
out
push
push
testl
push
xor
cltd
jbe
fistpll
jnp
xchg
push
mov
sbb
cmp
clc
bound
pop
push
movsb
gs
or
cmp
jmp
and
mov
in
int3
hlt
imul
in
dec
cmpsl
out
std
in
sub
mov
cltd
movsb
sbb
les
dec
pop
xor
adc
mov
mov
scas
lcall
push
test
in
std
mov
sub
loop
test
shrl
shl
iret
mov
cmpsl
int
or
fldcw
mov
sbb
adc
imul
aaa
call
mov
nop
jne
adc
or
arpl
out
daa
xor
jg
mov
and
jo
insb
cs
push
daa
adc
sarb
in
xchg
pop
rcrb
out
sub
jbe
sbbb
in
and
or
es
jp
adc
test
mov
testl
xor
aaa
pusha
leave
cmp
adc
pop
mov
xor
out
out
push
mov
or
sbb
dec
jl
jge
push
mov
jo
push
dec
cld
mov
xor
xor
test
push
in
loop
xchg
pushl
lods
mov
sahf
add
adc
andl
std
and
loopne,pn
mov
mov
inc
lods
push
pushf
mov
cmpsb
lret
adc
cwtl
std
mov
pop
repz
stc
fcomps
push
insl
sbbl
dec
mov
lods
js
vpaddb
dec
fsubrs
jnp
inc
add
mov
pop
push
inc
or
out
movsl
pushf
xor
sbbl
mov
adc
ja
mov
js
pop
jge
out
jl
mov
xchg
mov
in
lds
inc
into
dec
push
push
fcmovnu
sbb
out
scas
and
xchg
push
scas
cmpsl
sub
pop
dec
cmp
fidivrl
push
push
ja
or
jo
in
xor
sbb
mov
push
ja
xchg
pushf
inc
repz
jno
loope
inc
or
mov
or
loop
jne
ss
dec
gs
loop
jb
pop
daa
cltd
mov
xchg
fcomps
mov
jno
sti
dec
mov
sub
push
cli
arpl
enter
loopne
cmp
xor
stc
push
fisubl
roll
add
push
lea
stos
sti
mov
lock
fs
mov
js
push
ljmp
push
sub
xor
xchg
outsb
ja
fs
add
mov
mov
mov
mov
mov
add
movsb
call
mov
mull
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
xor
fistl
sbb
adc
sbb
sti
loope
ss
ss
in
loope
testb
jno
loop
push
sub
mov
insb
cwtl
jp
xchg
jmp
mov
clc
mulb
shlb
push
push
fsubr
pushf
or
sahf
pushf
leave
inc
dec
sub
pop
and
inc
inc
aad
mov
mov
fiadds
inc
stc
mov
in
mov
shrl
test
stc
ds
adc
and
xor
mov
pusha
add
cmp
mov
leave
mov
pop
jb
lds
sti
inc
pop
or
or
sub
sub
movsb
mov
sar
into
cmp
into
mov
sbb
mov
fcoml
cwtl
sbb
or
push
cmp
fwait
or
mov
cmp
push
out
cltd
jb
ret
cmp
mov
jge
xchg
pop
jne
outsl
aaa
js
ljmp
push
xchg
push
xor
fdivrl
sub
pop
xchg
jp
push
test
ds
and
or
aaa
mov
sub
jge
lea
aaa
jno
fmulp
in
sti
je
sahf
pop
insb
push
xor
xchg
sub
rorl
mov
mov
and
in
test
sub
add
jp
mov
in
sbb
mov
sub
inc
inc
or
fcmovnbe
ss
lods
mov
les
and
arpl
jnp
dec
cmp
sub
mov
sbb
jge
xchg
or
and
and
sbb
xchg
jb
or
or
mov
fildll
mov
mov
jns
fs
xlat
dec
inc
arpl
sbb
sbb
mov
dec
hlt
and
aas
fldl
orl
ret
or
ret
push
push
mov
and
inc
mov
jmp
xor
push
mov
push
dec
lock
bound
rcl
jg
xchg
shlb
mov
xchg
lock
stos
sub
dec
dec
in
aam
popf
pushf
test
push
stc
jne
pop
push
lods
loop
gs
dec
lds
sub
sub
addb
imul
and
pushl
mov
daa
fmull
les
test
movsb
bound
imul
xchg
mov
ret
in
fists
fcmovnb
fwait
bound
ss
pop
mov
cmpsb
daa
lcall
push
lcall
out
mov
mov
gs
cld
sbb
inc
sbb
mov
and
mov
shl
clc
das
dec
add
jo
stos
pop
push
and
ljmp
add
cmp
mov
lahf
xor
adc
lcall
test
inc
repnz
adc
push
pop
int3
cmpsl
mov
xor
xchg
pop
sub
cwtl
dec
mov
pop
fs
mov
int
arpl
insl
int
movsb
sub
mov
xor
xchg
outsb
jle
insl
insb
fcomps
fsubrs
ds
xor
cld
sub
sahf
lahf
push
movsb
sbb
and
in
and
push
push
inc
and
aas
xchg
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
dec
inc
pop
stos
inc
rcll
sbb
adc
sbb
jmp
pop
xor
add
arpl
movb
out
dec
cltd
push
pusha
stos
xor
jmp
loop
andb
adc
daa
cmp
push
lds
shrl
xor
out
pop
getsec
mov
inc
movsb
inc
jae
sub
inc
push
je
roll
xchg
or
inc
dec
movsl
mov
adc
cmp
pop
repnz
aas
imul
cmc
xor
push
mov
subb
xchg
lea
and
test
addr16
fnstcw
mov
cltd
dec
out
std
mov
push
mov
jae
daa
cld
cmp
out
test
fmull
sbb
cld
lret
or
scas
lods
int3
stos
test
mov
leave
imul
rcl
je
call
lea
push
aam
inc
fnstenv
inc
sub
stc
cmovbe
inc
and
cli
daa
mov
xchg
shrb
cmpsb
insb
pop
lahf
int
in
sarb
out
mov
roll
ret
fsubp
idivb
mov
test
cmp
out
dec
aad
loope
push
jo
test
push
je
movl
fcompl
xor
mov
mov
jle
xchg
push
mov
inc
fldt
shrl
xchg
in
cs
cmp
lcall
push
cmpsb
sti
xlat
int
mov
jle
mov
adc
iret
inc
mov
iret
mov
aas
es
or
and
pushf
test
inc
dec
mov
sub
lret
jl
popa
or
jp
imull
iret
ret
push
xor
daa
shlb
addr16
dec
sti
mov
sbb
scas
or
mov
addl
das
xor
inc
sub
cmp
mov
jp
loopne
out
and
lret
jmp
in
jb
clc
and
aas
cmp
ljmp
stc
xchg
das
aaa
mov
mov
cmp
imul
mov
std
iret
mov
cmc
pushf
outsl
fcmovnb
out
lret
jo
push
sub
push
addl
sbb
push
outsb
and
adc
jb
dec
inc
fs
push
jmp
xchg
add
xchg
movsb
inc
pop
or
fwait
cmc
loop
cltd
mov
rcr
test
lock
mov
nop
xor
pop
inc
mov
jnp,pt
and
mov
jns
jl
inc
mov
adc
in
insb
and
sbb
shr
mov
rcrl
push
imul
test
cmpsl
cwtl
imul
or
mov
push
mov
lcall
lret
jno
jge
mov
out
pop
mov
inc
mov
dec
subb
mov
inc
popf
adc
mov
sbb
mov
jecxz
dec
jmp
xor
pop
pushf
mov
and
fbld
mov
cmp
int
xchg
int
sub
mov
cwtl
sub
dec
push
outsl
jne
cmp
lods
xor
mov
sbb
sub
and
fiadds
jle
push
add
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
scas
aaa
push
int
sbb
adc
sbb
mov
fsub
shl
aaa
jle
dec
inc
nop
and
cmc
in
jbe
mov
add
stos
add
sahf
out
fcomi
sub
vpsubusb
mov
lds
andb
mov
jmp
push
pop
or
addr16
scas
aad
rclb
pop
mov
in
loope
fisttpl
dec
mov
inc
xor
cmpsl
subl
adc
push
mov
cmp
push
cmpsb
mov
loope
mov
xlat
in
out
shlb
int
jb
sub
cmc
dec
mov
popf
mov
popf
ds
lods
shrb
cmp
mov
repnz
cmp
cmp
xchg
mov
jns
mov
pop
sub
jecxz
jg
gs
fmul
mov
pop
lds
fisubrl
fnstsw
xchg
xchg
les
mov
mov
arpl
sti
loop
outsb
test
es
xor
in
jmp
dec
enter
sbb
adc
aaa
dec
add
shlb
sub
pop
or
test
inc
repz
jp
mov
add
push
push
or
lods
scas
das
mov
xchg
out
data16
xor
insl
xchg
and
push
bound
push
orb
das
cld
mov
cltd
dec
push
dec
sub
add
int3
cld
add
sbb
mov
add
xchg
stos
shll
repnz
scas
rcll
scas
xchg
icebp
pusha
lcall
mov
test
cli
repz
cmc
lods
daa
fidivl
sub
cmpsb
mulb
pop
xor
adc
push
cwtl
cs
push
popf
in
mov
mov
xchg
mov
lods
mov
jns
movsb
js
clc
repz
sbb
push
push
and
ret
mov
xlat
pop
jle
cmp
mov
scas
int
mov
push
mov
add
sbb
pop
ds
cmp
sti
push
shrl
es
add
and
out
rolb
mov
mov
into
mov
xchg
mov
add
aas
rorl
in
cmpsb
enter
xorb
inc
scas
jg
lcall
pop
pushf
mov
push
rol
sahf
mov
lods
add
jbe
aad
fldenv
cmc
lods
sbb
mov
pop
push
or
scas
divl
daa
leave
lret
ljmp
cmc
stos
fidivrl
adc
js
pop
movsl
mov
subb
daa
mov
ror
lods
jno
jbe
stc
js
bound
or
sub
mov
sbb
outsb
cmc
decb
mov
lret
cli
push
pop
shl
sbb
in
mov
imul
stos
imul
arpl
jne
ret
scas
xor
xchg
in
xchg
leave
push
or
jne
sub
sbbb
out
adc
repz
loopne
jns
bound
iret
test
jmp
mov
incl
cmc
pop
cwtl
js
lods
scas
scas
lret
and
int3
sub
test
cmp
jae
or
outsb
push
or
lcall
and
mov
in
lds
rorb
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
out
mov
sbb
sbb
loopne
jne
clc
out
or
out
cmp
mov
out
stos
xchg
xor
subl
dec
push
sub
or
jl
lods
xor
push
dec
test
adc
jbe
scas
aam
bound
loopne
dec
xor
jno
or
xchg
outsb
inc
push
iret
or
mov
push
dec
push
fcomps
cmp
std
add
xlat
sbb
addb
leave
stos
or
and
stos
dec
jge
fs
jne
pop
iret
sub
adcl
cld
cmpl
rcl
test
test
jb
xlat
mov
sub
mov
xchg
das
sbb
mov
test
ds
imul
pushf
push
imul
cmp
negb
pop
sbb
pop
inc
cltd
sbb
push
mov
jbe
insl
adc
mov
je
fwait
add
push
pushf
addr16
add
push
pop
inc
mov
arpl
mov
cmpsl
test
push
or
clc
mov
in
inc
repz
dec
shrb
inc
jne
jno
test
cmp
outsb
mov
leave
hlt
shlb
pop
je
push
test
adc
dec
push
mov
in
xchg
push
dec
nop
ret
pop
cmp
shr
pop
inc
mov
add
or
lds
sbb
cmpsb
push
xchg
popf
in
xchg
mov
in
inc
mov
test
jg
pop
sub
cmp
inc
mov
cmp
imul
push
jne
cmpsl
test
or
mov
adc
data16
add
fdivp
xchg
ds
fwait
out
insl
xor
mov
adc
mov
stos
ret
inc
mov
lret
or
test
inc
loope
xor
adc
or
aas
aaa
push
aaa
jns
out
imul
add
rcrl
in
inc
jns
les
push
jg
fcomps
pushw
aad
daa
cmp
cmp
and
stos
shll
aad
cmp
adc
mov
adc
movsb
mov
pop
out
mov
lods
mov
sub
adc
jl
xor
adcl
loop
lea
fnstenv
in
cmp
pop
pop
jns
push
cld
lods
push
lock
mov
mov
lds
xchg
jp
push
ds
sbb
inc
cmp
aam
or
test
dec
jae
jnp
popa
pop
ret
jg
gs
mov
adc
sahf
aaa
push
or
mov
ds
add
xor
mov
inc
sub
dec
lret
fsubl
testl
push
subl
je
in
cltd
sti
lcall
add
sbb
push
mov
test
mov
jo
mov
in
test
xchg
enter
pop
pushf
pop
pusha
mov
ja
sbb
pop
pusha
mov
or
test
lahf
fidivrl
scas
add
or
jmp
fstpt
popa
vpsubw
mov
mov
cmc
or
lods
mov
sahf
scas
sub
jae
cmovle
je
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
push
mov
sbb
iret
inc
subl
rorb
adc
imul
outsb
pop
xor
pop
jmp
add
test
jge
mov
mov
sub
or
cltd
xor
fimull
ret
mov
jae
jae
mov
movsl
xchg
in
roll
xor
pop
xor
test
xchg
in
or
cmp
outsl
ret
and
pop
andb
out
das
mov
dec
xchg
dec
out
mov
lret
int
lahf
mov
inc
aad
in
lahf
imul
imul
jle
and
push
jp
daa
out
les
std
sbb
or
mov
inc
push
sub
mov
xchg
dec
in
insb
jb
jns
cld
gs
add
mov
sub
xor
and
add
xchg
stos
mov
mov
mov
jmp
inc
nop
pushf
fsubl
inc
push
loop
sbb
add
sub
sub
js
xchg
cmp
adc
mov
xor
mov
jecxz
push
jno
and
sbb
int3
enter
ss
movsb
and
xchg
out
jae
adc
negl
cltd
dec
dec
pop
jae
xchg
sbb
lock
movsb
adc
push
pop
and
jge
mov
sbb
pop
movsl
fwait
cs
repz
sti
aaa
es
pushl
adc
insb
add
or
sbb
add
ja
fisubrl
add
push
daa
inc
popa
adc
cmpsb
sub
push
lods
and
movsb
cmp
inc
jb
push
jle
mov
jns
mov
fst
clc
ds
addr16
xchg
bound
add
lret
test
jo
clc
inc
add
lcall
pop
test
outsb
pop
add
push
adc
sub
jg
xchg
js
shrb
pop
push
fisubs
xor
mov
scas
xchg
movsl
inc
iret
ficompl
or
jecxz
mov
test
inc
mov
punpckhdq
dec
test
dec
push
push
xchg
lret
pop
data16
insl
mov
dec
adc
push
inc
sbb
xor
mov
mov
jmp
push
pop
pop
jbe
inc
jg
pop
ficoms
inc
fcmovnbe
or
and
adc
movsb
sub
xchg
push
dec
cmp
sbb
push
out
cltd
mov
cs
es
fisubs
mov
je
rorb
fisttps
xchg
shl
mov
dec
pop
fistpll
mov
jns
adc
fildl
xchg
outsl
pop
bound
scas
sbb
dec
nop
sub
pop
cmc
sub
jo
pop
add
fsub
xchg
push
out
daa
pop
pop
roll
pop
xchg
jne
xlat
cwtl
icebp
xor
sub
push
into
xchg
push
and
repz
add
cmp
fldcw
inc
lret
sub
pop
cmp
inc
jnp
dec
pop
jae
dec
mov
and
std
stos
mov
mov
inc
popa
aaa
jge
mov
jne
jl
andb
sbb
loope
std
mov
mov
lret
jns
ja
test
or
aaa
addr16
mov
mov
inc
gs
xchg
sub
mov
ss
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
fimuls
sbb
xchg
fs
pop
dec
in
sbb
cltd
mov
cmp
ret
stc
adc
jg
je
jnp
inc
ffree
test
stos
cli
mov
es
arpl
ud1
arpl
in
mov
mov
lret
outsl
ret
adc
adc
pop
sub
jge
sbb
push
imul
je
jne
out
iret
stos
fwait
push
dec
push
out
test
fwait
sbb
fidivrl
out
push
adc
jo
sbb
sbb
fimuls
addb
pop
sarl
cmp
das
fiadds
inc
xchg
ret
loop
sbb
cmp
push
bound
and
popa
imul
lea
jle
imulb
icebp
js
sub
mov
popf
ret
sarb
sbb
jmp
push
dec
jne
or
aaa
xchg
fldcw
jecxz
cmpsb
sub
xor
cmpsl
adc
fldl
in
xor
mov
sub
mov
cmp
cwtl
ret
incl
pop
in
jmp
jge
test
xchg
mov
movsb
adc
int3
pop
jmp
pop
sub
dec
loopne
and
lahf
lret
pop
xchg
mov
mov
lret
lods
mov
dec
and
cmp
xchg
iret
mov
iret
fidivl
mov
ret
lret
movsl
mov
shrl
mov
jae
pop
into
sub
pop
mov
mov
lods
scas
xchg
mov
and
inc
sub
shl
jns
inc
mov
dec
iret
ja
pop
daa
sbb
fwait
xchg
leave
push
das
repz
jg
mov
int
test
sub
xor
sahf
dec
pop
add
int
add
add
sar
cmp
dec
xlat
cmp
sbbl
or
sub
jns
cmp
mov
mov
stos
pop
mov
jae
jns
loopne
sbb
inc
cltd
pop
xchg
pop
mov
mov
out
lea
mov
pop
aad
test
adc
inc
int
sbb
add
push
cmp
dec
sub
cmc
xrelease
sub
dec
jmp
push
xchg
xchg
mov
imul
jo
jno
rol
jecxz
sti
rolb
imul
cld
sbb
pop
or
mov
outsb
cs
add
pop
iret
jl
dec
mov
jb
push
or
out
add
in
xchg
push
mov
or
adc
dec
push
sbb
inc
cmpsb
enter
jp
mov
xchg
inc
loope
mov
in
cld
cmpsb
das
fwait
jg
push
sub
repnz
push
aam
std
jns
jbe
lods
dec
cmp
dec
stc
sub
nop
stos
mov
dec
jb
push
loopne
dec
sub
les
leave
out
mov
mov
cmp
jne
add
inc
inc
iret
notb
dec
test
pop
mov
jne
or
jecxz
sahf
mov
sbb
push
mov
xor
xchg
ret
adc
jo
sti
pusha
cld
inc
test
push
xchg
push
dec
pop
fcmovnb
ljmp
mov
sarb
pushf
fnstenv
inc
movsl
dec
frndint
mov
adc
or
shll
call
mov
add
xchg
fcoms
inc
pop
adc
add
dec
and
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
icebp
test
in
jno
aas
pop
cmpb
push
mov
adc
les
inc
and
push
in
jge
push
jp
dec
outsl
insb
aas
test
test
or
add
fucomip
mov
xor
out
jns
in
sub
outsb
std
adc
inc
js
jnp
jmp
shl
pop
push
sbb
dec
push
xlat
mov
sub
pop
pop
mov
out
ficompl
aaa
shll
lret
adc
mov
sbb
test
push
push
mov
or
sbb
fdivl
addr16
mov
lock
mov
shlb
leave
fdiv
mov
in
scas
adc
outsl
cmp
jle
outsb
movsb
cmpsb
out
ljmp
xchg
cmp
xor
jo
scas
loope
sbb
fwait
jecxz
stos
push
nop
add
pop
cmp
imulb
inc
xor
xchg
jmp
cmpsl
fsub
call
pop
mov
daa
lds
pop
push
lock
fisubrs
mov
and
cmpsb
sbb
pop
fmuls
cs
or
and
out
inc
add
mov
mov
cmp
jmp
fldl
jnp
push
pop
popa
cmp
or
inc
mov
lea
repnz
or
in
das
mov
clc
cmp
bound
add
js
sahf
cmpsl
je
and
jl
out
jns
fcoml
or
nop
das
aam
push
repnz
cmp
daa
test
push
out
sub
scas
pop
adc
rorb
push
mov
mov
jecxz
inc
jle
scas
and
and
jl
bnd
cmpsb
pushf
fcomps
push
adc
inc
pusha
sbb
inc
sbb
sub
rcrb
cmp
and
and
inc
xchg
into
mov
xor
repnz
push
cmc
jo
iret
sub
push
call
fdiv
dec
mov
dec
clc
xchg
add
shlb
mov
xchg
std
out
mov
out
lods
sbb
das
or
jnp
push
mov
outsb
jb
xchg
insb
xchg
fnstenv
dec
in
imul
xor
pop
insl
mov
pop
fsubl
lods
adc
in
sti
nop
mov
jecxz
sub
jo
adc
sbb
add
shl
adc
add
cmp
push
scas
and
loop
mov
sub
mov
loopne
sbb
lds
fldt
loopne
and
aam
fistpl
pusha
add
adc
pop
cwtl
ret
or
push
inc
mov
jne
rclb
mov
out
pusha
or
dec
test
adc
xchg
sub
sub
xor
lahf
mov
movsl
lret
mov
bound
sub
mov
xchg
imul
mov
adc
push
or
es
fs
dec
push
mov
cli
push
mov
mov
add
stos
cmp
leave
loop
inc
rcl
imul
mov
pop
into
jno
inc
push
lcall
icebp
xor
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
test
das
mov
and
sbb
andl
xchg
cltd
les
sbb
test
xchg
js
shrb
pop
adc
sub
sbb
call
or
out
insb
and
aas
cmpsb
and
out
sub
add
add
rcrl
js
aam
push
sub
push
sub
mov
and
pop
aam
addr16
in
mov
or
cmc
jecxz
add
push
out
enter
mov
add
loop
cmc
dec
int
jnp
push
dec
ficoms
and
in
dec
fistpl
xor
inc
or
jnp
cs
xchg
mov
out
call
xor
aaa
adc
pop
pop
pusha
cmp
xor
xor
adc
sub
test
push
test
add
jl
push
inc
pop
jmp
dec
or
mull
shlb
and
aad
hlt
add
aas
dec
call
dec
imul
rorb
push
dec
add
fsubrs
sbb
shll
mov
lcall
cmp
and
pop
jne
iret
jmp
jecxz
iret
lgs
mov
pop
pop
and
sub
and
loopne
mov
sub
test
push
iret
inc
stc
dec
in
adc
pop
enter
xor
adc
sbb
jp
push
scas
lcall
jl
mov
bound
insb
jno
out
loope
or
push
inc
jp
cmp
and
sbb
mov
xor
std
push
not
xor
push
xor
imul
movb
mov
lcall
dec
sbb
add
mov
push
cmpsl
inc
pop
arpl
adc
xchg
into
cs
and
rcl
clc
sub
andl
mov
sbb
and
insl
scas
add
pop
cld
test
test
mov
ret
xlat
xchg
hlt
sub
jp
std
iret
push
iret
hlt
pushl
data16
sti
xchg
leave
jnp
sti
clc
and
jp
sub
mov
test
sub
addr16
arpl
xchg
pop
cmp
add
cmp
out
xor
push
jp
add
mov
sbb
sub
jg
out
mov
xor
jns
ja
fiaddl
lret
and
and
inc
and
jg
gs
sbb
daa
jbe
dec
clc
adc
rcll
aaa
add
sahf
mov
psllw
jl
push
mov
dec
insb
inc
sub
cmpb
call
fwait
xor
ljmp
inc
add
mov
mov
out
lds
lret
or
sbbl
mov
test
inc
dec
sbb
stos
mov
test
mov
flds
popf
add
mov
xchg
lret
movsl
or
xor
fs
sub
loopne
movsl
and
jno
ficoml
sub
aam
hlt
mov
add
sahf
stos
add
div
cmp
paddusw
ja
lahf
or
fnstsw
jb
add
and
fidivs
jge
and
and
add
rcl
cmp
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
sub
push
mov
sbb
mov
ret
sub
push
mov
frstor
out
mov
jecxz
xchg
shlb
mov
icebp
add
into
pop
adc
es
rcrl
xchg
xchg
das
sbb
mov
mov
xor
insb
jle
movsl
mov
sub
outsb
cmovns
mov
mov
aas
jp
pushf
in
dec
aaa
test
popa
inc
inc
addb
cmp
xor
dec
or
cmpsl
sahf
lcall
mulb
cli
rcl
rorb
inc
daa
sarb
frstor
mov
xchg
sub
fimull
and
adc
dec
popf
pop
ss
or
ficomps
dec
cmpsl
adc
in
mov
jle
mov
adc
test
mov
push
adc
data16
push
mov
mov
xchg
add
or
pop
out
or
push
hlt
nop
sbb
scas
shll
mov
loopne
cmp
insb
jns
add
inc
fildl
aad
cltd
out
push
sub
pop
fisubl
pop
inc
mov
fwait
roll
adc
adc
xor
push
sub
mov
inc
add
inc
ds
cld
xor
shl
ljmp
sahf
jne
ret
adcb
jl
out
sub
jecxz
inc
frstor
mov
sub
pushf
mov
sarb
mov
xchg
cmp
xchg
das
nop
xchg
jo
daa
xchg
adc
pop
addr16
xchg
mov
pop
ffreep
pushf
lds
pop
push
xchg
lock
andb
gs
mov
icebp
push
sbb
inc
out
imul
adc
movsl
test
dec
xchg
xchg
and
mov
iret
xor
pusha
inc
jae
jle
scas
cmp
xchg
fs
je
xor
in
lcallw
sub
pop
pop
out
and
stos
lcall
mov
pop
clc
push
movsb
mov
pushf
fucomip
adc
sti
mov
pop
mov
cmp
mov
cmp
insb
fwait
push
daa
gs
pop
je
inc
scas
adc
inc
and
fs
lahf
pop
xlat
inc
lret
shr
add
dec
and
arpl
out
sub
or
sarl
sti
pusha
xor
neg
scas
ss
dec
cmpsl
ffreep
pushf
jmp
or
loopne
sbb
jae
and
pop
loop
mov
cmpb
mov
xchg
adc
dec
inc
inc
insb
aad
cmp
mov
mov
cltd
icebp
jno
sbb
jns
or
sti
in
mov
xchg
mov
sbb
xchg
sbb
cmp
sti
pop
xor
insl
and
mov
sub
xor
icebp
or
push
inc
xor
stos
das
sbb
daa
pop
or
adc
push
in
dec
vpsubusw
push
mov
call
insb
daa
scas
fimuls
push
je
scas
jno
jns
movsb
cli
fidivrs
adc
fbstp
dec
aam
mov
shlb
or
xchg
jg
movsl
xor
sbb
dec
adc
pop
xor
movsb
sbb
test
fildl
jno
adcb
jp
push
pop
xchg
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
movsb
int
pop
fwait
push
sbb
adc
sbb
sub
xor
test
fisubs
stos
push
repz
in
mov
dec
rcrl
rcll
and
mov
sbb
enter
outsl
dec
inc
inc
sahf
sbb
and
pushf
add
mov
sbb
stos
dec
fstpl
push
jno
cmpsl
xchg
xchg
ljmp
in
mov
arpl
adc
cmc
push
into
stos
lea
shlb
ja
out
cmc
stos
pop
clc
mov
push
fnstsw
sub
push
add
stos
fwait
xchg
ja,pn
adc
mov
mov
mov
pop
jb
insb
mov
pop
mov
sbb
or
add
cmc
cmc
and
push
push
and
jmp
add
fnsave
xchg
pop
bound
in
sahf
and
inc
cmp
sub
cmpb
lock
pop
leave
pop
xchg
mov
mov
pusha
call
or
subb
mov
loope
adc
or
dec
int3
push
lds
mov
int3
cmc
js
or
and
jmp
sub
cwtl
aas
dec
adc
imul
addb
mov
push
sub
outsl
lret
outsl
adc
nop
or
fwait
inc
out
or
sti
sahf
scas
pop
enter
dec
xchg
lcall
push
pop
iret
xchg
xor
mov
push
xor
lds
or
inc
or
mov
xor
mov
push
or
add
or
jb
adc
je
out
xchg
xor
int
jnp
es
pop
std
push
pop
sarb
dec
cmpb
imul
inc
ficoml
pop
jae
sahf
mov
movsl
adc
mov
scas
sub
xchg
insl
xchg
xchg
jl
xchg
inc
cmpsb
lods
inc
lods
xchg
xor
in
xchg
outsb
fnstcw
into
scas
push
scas
xchg
sahf
jo
pop
pushf
add
enter
rorb
fcmovnb
sahf
or
xchg
sub
pop
stos
mov
push
ljmp
je
into
sbb
cmp
mov
xchg
sbb
sbb
xchg
sub
xchg
stc
push
sub
dec
jae
pop
test
lcall
push
mov
and
mov
cltd
push
sti
or
add
lret
fs
adc
sub
add
ja
lods
cwtl
rclb
call
sbb
sub
movsb
jbe
movsb
je
int3
jo
outsb
pop
xchg
and
sub
lods
rorb
xadd
mov
ret
add
or
mov
iret
shrb
mov
jne
sub
imul
xor
inc
lea
or
mov
jg
xor
in
mov
cmp
ret
iret
and
push
push
cmp
adc
adc
cmpb
xchg
push
mov
or
cmp
xchg
or
mov
jns
rcll
aad
repz
lods
sub
repnz
imul
mov
in
lds
mov
push
shll
movsl
inc
lea
orb
lret
mov
sub
ret
cs
or
jg
jno
mov
mov
add
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
stos
in
mov
and
sbb
sbbb
xchg
add
addr16
mov
lock
inc
movsl
lea
fnstenv
fs
les
xchg
aas
cmp
js
add
xchg
inc
sub
loop
loopne
pop
adc
cmp
inc
lock
jae
repnz
pop
lcall
xor
negb
mov
mov
push
stos
mov
fs
jge
fstpt
sbb
cli
addr16
dec
je
mov
pop
dec
imul
xor
mov
xchg
out
out
push
xor
xchg
cwtl
iret
and
xor
and
xchg
into
imul
mov
jl
fs
std
js
adcl
inc
mov
mov
cmp
push
dec
add
out
sbb
rcrl
fcoml
mov
bswap
mov
xchg
inc
stos
add
pop
adc
sub
mov
jo
cmpsb
out
ret
mov
xchg
pop
mov
jp
cmc
sbb
cmp
xor
and
frstor
jmp
xchg
add
aaa
inc
aas
fbld
mov
cltd
jne
out
rcr
mov
scas
in
xor
insl
hlt
xchg
push
sbb
xor
ficompl
sub
push
insl
pusha
push
nop
mov
sub
std
mov
rcrb
pop
lock
int
das
cld
xor
int
jl
xchg
lods
push
insb
sahf
push
sbb
dec
mov
iret
or
enter
jmp
jbe
or
push
into
xchg
lea
sbb
aaa
aas
sbb
inc
fwait
js
push
movsb
xor
dec
mov
and
push
std
fisttpll
je
mov
push
std
fwait
cmp
or
icebp
out
add
mov
movb
jno
test
js
xchg
inc
xchg
jecxz
jecxz
repnz
jns
rcrl
aam
inc
movsl
rolb
movsl
mulb
push
mov
aas
sahf
stc
mov
call
aas
pop
push
das
and
adc
mov
or
in
outsl
loopne
outsl
test
fsubrl
xor
push
mov
mov
pusha
cmp
ja
stc
push
fwait
aad
pop
iret
xor
xor
sbb
mov
cmp
out
into
xor
jno
mov
arpl
xchg
pop
add
fiaddl
loope
cltd
sbb
push
sub
jns
hlt
or
call
dec
outsl
mov
imul
xchg
cmpsl
imul
mov
sbb
cli
jecxz
rep
sbb
xchg
testl
loop
ret
inc
cmpsb
fstps
push
fcomps
gs
xchg
insl
push
mov
aam
sub
dec
out
and
jp
sbb
adc
xlat
nop
aad
aam
fisttpll
xor
out
push
xor
popf
movsl
push
adc
cld
fidivrs
add
mov
outsb
and
or
fcoml
mov
cmp
xchg
mov
mov
and
test
mov
pushf
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
gs
push
lea
sbb
adc
sbb
insl
push
xchg
into
dec
or
ja
lret
movsl
push
push
fisubs
mov
mov
ret
mov
hlt
pop
mov
push
mov
xchg
aad
lret
lods
idivb
addl
fistpl
mov
add
dec
in
jb
adc
ds
dec
hlt
lea
add
xor
jg
divl
fmuls
aam
pop
mov
pusha
sbbl
xlat
inc
cmp
ss
fwait
aam
repnz
js
sub
arpl
mov
jns
xor
mov
into
into
xchg
mov
test
xchg
adcb
jb
xor
and
mov
fadd
notl
cli
sub
add
pop
ret
pop
adc
inc
es
movsl
in
mov
pusha
mov
pushf
rcl
data16
dec
fiaddl
into
ret
add
mov
add
push
xor
pop
sarl
outsb
push
lock
xchg
cmp
or
mov
outsl
cmp
rolb
xchg
sub
mov
jb
gs
cmpsb
mov
cmp
push
mov
jbe
push
out
hlt
xchg
pop
clc
mov
gs
fcmovbe
cwtl
sbb
inc
lret
cmp
xchg
add
stos
movsb
ret
in
adc
shl
gs
jecxz
mov
int
addl
mov
sbb
ss
dec
sbb
cmp
jns
jo
pop
ljmp
in
mov
mov
adc
out
sbb
rcrl
xorb
mov
fldt
add
inc
add
push
adc
adc
dec
inc
dec
jp
push
js
aas
and
xchg
sbbb
jo
mov
cmc
das
cmc
das
mov
push
cmp
push
or
or
cmp
sar
jne
ss
sbb
movsb
aam
jno
jbe
push
test
push
in
mov
jo
dec
aas
test
pop
shll
sbb
jp
cmpsb
scas
xchg
push
mov
push
hlt
stc
popa
dec
mov
rcl
ds
rclb
cmp
mov
cmp
sbb
fsubrs
outsb
xorb
aaa
das
sti
je
jg
cmp
lret
adc
adc
mov
lods
push
xchg
pop
pusha
jb
push
push
mov
movsb
loopne
add
cld
lret
popf
mov
mov
or
adc
lods
lock
out
xor
fisttps
mov
fdivr
cwtl
jecxz
faddl
jno
aam
insb
xchg
sbb
pop
aaa
popa
addr16
into
enter
fwait
or
into
lcall
inc
out
jmp
inc
push
orl
dec
outsb
jne
mov
imul
xor
lods
inc
and
iret
dec
mov
bound
cld
scas
mov
into
pop
inc
jb
xchg
out
inc
fbstp
outsl
es
pop
gs
push
icebp
fwait
sarl
jo
cs
add
std
cmp
loop
mov
push
fdivl
test
fistpl
lahf
and
cmp
cmp
jle
repnz
xchg
xorl
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
cmp
push
sbb
adc
sbb
inc
daa
lods
ja
fiadds
inc
out
jne
cwtl
in
repnz
packssdw
jle
add
inc
mov
lret
cltd
and
sub
push
fcomps
adc
in
mov
dec
es
push
push
call
pop
push
scas
jp
nop
sub
test
les
xor
pusha
insb
xchg
icebp
jnp
fcoms
in
dec
mov
mov
add
std
pop
insb
inc
jp
mov
call
andl
fimuls
xchg
mov
test
repz
in
cmp
sbb
mov
imull
and
pop
stos
in
cld
loop
mov
xchg
lods
iret
xchg
sbb
out
cmpsb
add
push
push
and
test
popa
or
movsl
pop
stc
sbb
jecxz
lahf
es
pop
mov
into
cmp
jne
repnz
repnz
push
push
int3
mov
negl
xorb
cmpsl
push
sub
sub
dec
push
xchg
or
or
rorb
cmpb
movsl
loopne
mov
adc
popf
in
mov
mov
sbb
aaa
or
jno
and
xchg
inc
dec
inc
jb
jb
scas
jbe
movsb
out
push
es
js
push
inc
dec
dec
add
sbb
test
fs
push
dec
mov
not
aad
scas
call
add
mov
jg
xchg
jmp
adcb
mov
adc
fwait
jp
jae
enter
loopne
pop
mov
sbb
mov
cmp
test
stos
rcrb
dec
pop
mov
adc
imul
cld
sbb
repz
lret
mov
push
lock
repz
sbb
or
or
cmpsb
mov
adcb
std
sbb
lcall
pop
mov
lods
mov
inc
push
push
cmpsb
movsb
or
xchg
cmp
movsb
mov
mov
jle
jmp
es
fbld
fcompl
pop
mov
jo
jmp
imul
push
popf
push
push
lock
push
mov
jge
repz
cmpsl
es
leave
mov
ds
xor
loope
push
stos
xchg
cmpsb
jmp
push
popa
jnp
das
pop
sbb
push
ja
push
xchg
ljmp
push
inc
cs
rorb
jge
fcompl
lods
jecxz
sbb
arpl
jmp
mov
inc
in
inc
scas
jecxz
into
cmpsl
cwtl
mov
gs
xchg
mov
int
jecxz
add
pop
stos
stos
add
or
shrb
mov
loope
popa
cmp
xor
push
jge
sbbb
push
movd
or
int3
decb
mov
sbb
outsb
add
xchg
jge
add
cli
sub
mov
sub
loope
jle
test
push
fcoms
test
xchg
daa
xlat
insb
popf
cmpsl
pop
in
push
lret
xchg
loope
or
repz
cmp
roll
cmp
jb
mov
and
lock
andb
dec
sbb
sub
jb
or
repz
xlat
test
insb
mov
loop
adc
pop
in
jbe
enter
out
jae
lea
inc
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
imul
adc
sbb
addr16
xor
repz
jne
pop
sub
xchg
stc
icebp
mov
jl
cmp
ds
xchg
inc
mov
lock
push
negl
outsb
js
repnz
into
data16
and
mov
mov
loopne
or
pop
jg
inc
inc
cmp
sahf
add
pop
jo
les
adc
xchg
adc
jae
pop
mov
test
out
pop
cmpl
cmpsl
sbb
loopne
aam
lods
adc
std
add
aam
mov
push
sbb
cwtl
int3
stos
mov
mov
fsubrs
push
fldt
mov
and
rcr
mov
sbb
shrl
js
gs
add
in
mov
push
je
sbb
mov
cmpsb
addr16
leave
fadds
adc
mov
leave
lods
in
jns
sub
mov
push
dec
push
pop
leave
adc
sub
mov
or
movsl
sbb
out
repz
adc
inc
call
push
cmpb
lret
testl
or
movsb
into
sbb
xchg
jns
nop
mov
out
adc
mov
xchg
or
fldt
push
pop
sub
or
or
push
cld
xor
and
outsl
lret
jg
shll
adc
mov
clc
sbb
out
ljmp
cmpl
sbb
daa
fldl
rolb
decl
inc
xor
adc
imul
sbb
dec
lcall
fs
or
adc
fisttpll
daa
stos
shrl
xor
scas
fs
xor
out
and
out
inc
scas
gs
fisubrs
mov
into
dec
adc
pop
xchg
and
mov
andb
adc
xchg
push
adc
push
pop
shr
scas
pop
js
fldl
outsl
inc
and
adc
mov
dec
dec
pop
test
movsl
mov
xchg
adcb
scas
lock
cmp
xchg
mov
jmp
dec
lahf
mov
sub
cli
stc
mov
mov
xlat
sub
push
fiadds
sbb
or
ds
nop
jb
arpl
and
std
ja
mov
or
jp
ret
add
pop
sbb
test
imul
ds
test
data16
dec
inc
inc
sarl
outsb
jno
stc
mov
aas
lea
insl
ret
and
lahf
xor
pushf
enter
es
sub
adc
add
cltd
mov
aad
add
mov
sar
test
dec
pop
sbb
outsl
xor
ss
inc
cltd
and
pop
inc
cli
rcrb
cmpsl
push
mov
push
rcrl
push
testl
adc
es
lock
dec
inc
pop
stos
ror
bound
cmp
fisttpll
push
inc
xchg
ljmp
dec
cmpsl
mov
cmp
sub
rcrl
jnp
jmp
insb
enter
adc
icebp
out
repz
dec
push
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
pop
jo
jns
sbb
adc
sbb
and
insb
test
mov
cmpsl
out
leave
dec
leave
fistpll
jb
cmp
test
repz
jae
and
arpl
ss
add
sub
das
std
ljmp
popa
and
movsb
out
sub
inc
movsl
push
aas
xor
sub
and
jge
xchg
int3
sbb
mov
mov
test
jecxz
push
xchg
iret
das
inc
sub
mov
mov
movsl
ds
pushf
sub
out
call
sub
sbb
push
pop
jnp
ja
mov
lcall
xlat
jb
add
shrb
test
jnp
mov
or
cwtl
mov
inc
sub
mov
jmp
mov
push
scas
jo
lods
aam
mov
into
sub
xor
ss
jecxz
lahf
push
icebp
pop
addr16
insl
push
cmpsl
lea
leave
mov
jns,pn
les
push
or
insb
xchg
jp
mov
pop
lret
lcall
xchg
xor
dec
sub
xchg
xor
outsl
cmc
enter
pop
test
adc
loopne
fsubl
cmp
repz
shrl
inc
das
pushf
jnp
xchg
inc
push
sbb
jns
jp
push
in
insb
push
sub
movsb
mov
lret
enter
stos
shll
push
je
flds
rcll
or
jo
cs
insb
popa
and
cmpsb
jno
adc
loope
push
cmp
sbb
dec
jno
jl
rorl
ss
out
in
mov
pop
push
rcrb
xchg
xchg
mov
dec
fcmovb
and
inc
pop
pop
or
lods
mov
into
adc
mov
and
scas
jbe
pop
cmc
stc
lret
jg
pop
sub
in
pop
loope
in
push
add
addr16
or
or
mov
sub
mov
into
hlt
xor
in
lds
xorl
cltd
xchg
xor
dec
das
and
mov
ds
aad
stc
push
xchg
andl
int
xchg
or
jmp
push
inc
push
sbb
sub
fildl
test
adc
dec
xor
pop
mov
fimull
lods
int
bound
push
jne
dec
push
gs
mov
add
cmpsl
cmp
loopne
iret
push
jl
leave
enter
jb
and
fnstsw
and
inc
fs
out
mov
pop
mov
js
or
daa
cmp
pop
enter
add
xchg
xchg
mov
fsubl
fs
inc
ret
mov
clc
shll
jmp
popf
sbbb
loopne
hlt
add
shrb
gs
stos
in
leave
push
lret
xor
fwait
xchg
data16
xor
pop
dec
push
lahf
aas
push
gs
cmpb
rcrl
mull
xchg
hlt
ljmp
add
popf
mov
scas
adc
aaa
stos
add
jbe
pop
sbb
enter
jg
cmp
add
lods
mov
rcl
ret
stos
add
incl
mov
pop
xor
or
xchg
in
xchg
lcall
adc
xchg
aaa
mov
xchg
orb
push
xor
mov
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
pop
lret
jo
jno
sbb
adc
sbb
inc
loop
jbe
aam
jne
jns
mov
or
insb
pusha
incl
inc
popf
insl
sbb
aam
cmpl
aam
addr16
mov
mov
dec
test
xor
fiaddl
cwtl
add
test
adc
outsb
xor
sbb
push
std
or
or
add
push
stos
adcl
lahf
add
movsb
inc
mov
pusha
test
adc
push
inc
dec
hlt
inc
mov
xor
das
and
daa
bound
mov
lods
insb
jb
mov
jbe
outsl
mov
icebp
dec
jno
leave
pushf
and
js
xchg
sti
in
in
or
lods
gs
add
push
adc
adc
mov
mov
repz
movsl
mov
pusha
cmp
int3
fcompl
vpsubq
in
out
mov
pusha
pop
mov
add
cld
sbb
and
in
add
xlat
repnz
hlt
cltd
mov
cmp
pop
fidivl
aas
dec
mov
insb
xor
vsubpd
xchg
and
lret
pusha
xor
mov
ljmp
pop
xchg
testb
fsubrl
pushf
xor
repnz
pusha
insb
addr16
pop
jmp
lds
repnz
mov
icebp
arpl
dec
xor
mov
sbb
addr16
popa
xchg
pop
in
inc
movsl
mov
test
mov
data16
aam
mov
push
sti
mov
cs
pop
sbb
dec
cmp
mov
popf
nop
test
jg
push
pop
sub
pop
hlt
fstps
mov
cmc
mov
mov
sub
fimuls
add
shrb
test
lcall
lcall
in
enter
jecxz
pusha
fcoms
and
daa
iret
or
loope
sti
fistpll
push
push
xchg
lret
cmp
sahf
mov
pop
sti
fisubrl
mov
mov
sbb
and
mov
stos
pop
inc
lock
push
les
pop
popl
mov
movsl
shl
push
dec
mov
push
add
popa
icebp
lock
jae
jmp
and
outsl
sub
jecxz
push
mov
andl
and
xchg
cwtl
sbb
push
in
adc
data16
andb
jno
int
push
or
lahf
mov
jne
movsl
ja
jl
mov
addb
sub
in
roll
pop
xor
shll
xchg
loop
shll
mov
inc
cld
neg
mov
add
and
push
je
cmp
popa
sub
push
pop
mov
jne
cmp
rorb
nop
outsb
shll
nop
or
aam
test
fs
cmpsb
cmp
outsl
pop
ret
mov
mov
popf
dec
mov
adc
pop
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
test
push
imul
and
sbb
cmpsl
sbb
es
arpl
leave
sub
lret
sub
xchg
dec
add
incl
jmp
repnz
aaa
lea
cmp
das
cltd
dec
mov
add
cmpl
inc
jbe
sbb
pop
stc
pop
adc
aaa
arpl
std
popa
lds
scas
orb
mov
jp
jg
push
test
test
ss
ljmp
pop
mov
inc
lret
xchg
addl
in
aad
scas
sub
dec
and
iret
add
cmc
nop
mov
out
insl
sub
cmp
outsb
push
pop
cmp
mov
mov
test
inc
jmp
mov
pusha
stc
cmpsb
ljmp
add
cmp
push
push
pop
loopne
shll
push
pop
icebp
setp
hlt
gs
add
adc
cmp
sbb
in
ja
jle
pop
ds
sbb
loop
mov
jbe
sub
cmp
lcall
cmc
shll
sub
imul
jae
inc
fwait
inc
cmp
loope
mov
cmpsl
sbb
xchg
jecxz
xor
sti
jg
scas
int3
rorl
mov
rcll
js
xchg
dec
jge
shrb
hlt
inc
aam
xor
or
aam
or
dec
cmp
nop
dec
sbb
pop
int3
push
push
lret
xchg
xor
and
bound
dec
jns
rcrl
push
mov
mov
inc
push
pop
xchg
imul
outsb
fwait
jecxz
out
jg
movsb
popa
push
call
push
div
call
in
ret
and
push
js
pop
dec
subb
ret
jle
lock
icebp
loope
es
jne
jmp
jmp
fmulp
leave
leave
leave
pop
push
mov
int3
int
ljmp
adc
aad
mov
js
lret
dec
ret
adc
cmpb
ja
call
mov
or
bound
mov
sub
out
push
cmp
hlt
dec
fisubl
push
dec
and
push
lea
mov
xor
and
lds
lahf
lret
test
in
dec
cmp
mov
fucomip
push
cltd
popa
fistl
lea
sbb
jl
int3
fucomi
xorl
sbb
leave
xor
daa
leave
mov
push
or
gs
xor
mov
mov
push
movsl
mov
sub
dec
ja
pusha
lock
and
aam
rorb
sbb
and
or
mov
adc
add
lahf
add
push
insl
jo
pop
push
je
jmp
mov
lods
scas
xchg
mov
xchg
pop
aam
dec
inc
add
inc
inc
mov
gs
pushf
imul
cld
pop
loopne
fstpl
ret
fcmovnbe
addl
jg
jnp
sbb
push
xor
or
cmpsb
int3
in
fldl
sahf
cmpsb
lret
out
sbb
cli
sbb
inc
call
xchg
fisttpll
xlat
insb
cltd
sub
jae
in
pop
xchg
popa
dec
and
mov
sub
jno
push
fs
cli
xor
pushf
rorb
je
adc
mov
filds
ss
xchg
cmpsb
adc
jns
push
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
out
aas
aas
mov
and
sbb
sub
mov
push
sbb
jl
mov
cmp
cmc
mov
adc
xchg
adcb
enter
nop
and
ja
ss
jo
sub
cs
inc
mov
ret
xor
cmp
movsb
sbb
push
ljmp
sub
jge
dec
sbb
subb
xchg
xchg
xchg
mov
add
mov
andl
clc
push
sbb
addr16
mov
sub
clc
imul
pop
mov
insl
jne
mov
mov
lods
aad
test
aas
lds
inc
mov
js
dec
cmp
pop
sbbb
filds
leave
inc
daa
push
repnz
adc
imul
jmp
loop
jle
sub
out
nop
aaa
and
xchg
lock
xchg
test
not
divb
es
mov
push
pop
mov
ret
mov
outsb
andl
mov
dec
xor
ljmp
jecxz
or
pop
sub
lock
adc
rolb
adc
add
sub
cli
jecxz
pop
adc
push
jnp
js
mov
aas
gs
mov
int3
mov
sub
movsb
in
ds
lret
nop
jle
test
or
jg
out
or
lcall
mov
xchg
mov
rclb
xor
mov
inc
scas
stos
mov
mov
push
mov
lods
adc
scas
pop
rcrl
cwtl
test
xor
icebp
push
jns
xlat
or
je
inc
out
aas
sub
mov
jnp
fadds
sub
push
cmpsl
add
call
rorl
lret
loope
fs
mov
sbb
mov
into
sub
adc
pop
in
repnz
out
fdivrs
cltd
popf
jp
stc
pop
rcll
xor
pusha
loop
lods
aam
xchg
xchg
inc
jbe
add
pop
lock
subb
pop
sarb
adc
add
or
add
pop
pop
ficompl
mov
cmp
jno
jo
loop
sahf
testl
add
divb
fs
inc
sub
fcomi
push
fcompl
jbe
minps
ret
add
add
jmp
pop
and
ror
testl
ljmp
enter
int3
loop
fbstp
jle
sbb
adc
adc
jmp
fidivl
shl
mov
or
jge
les
ds
ret
lock
cmp
jl
xlat
lea
popa
jl
dec
test
aas
mov
cmp
dec
cmp
inc
and
ror
sub
out
cmpsl
sub
jno
lret
rol
cmp
insl
pop
xchg
sarb
fidivl
sbb
addr16
push
push
pop
mov
cmp
fxch
stos
or
add
sub
scas
push
push
fdivrl
js
popa
sbb
and
mov
or
pop
push
xchg
outsb
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
xorps
and
sbb
dec
add
jb
repz
cmpsb
mov
ja
pushf
xchg
hlt
shrl
in
iret
jle
lods
iret
sarb
sub
fbstp
push
or
xor
cmpsb
std
xor
in
xchg
loopne
ja
mov
repnz
xor
out
adc
sub
sub
inc
aad
add
xor
jmp
sbb
pushf
movsb
ror
nop
lret
dec
hlt
sarl
outsb
inc
inc
addr16
shrl
pop
out
xor
out
fdivrs
push
push
adc
leave
mov
add
not
rcrl
xor
out
cmp
adc
js
and
dec
adc
cltd
or
call
loopne
pop
xchg
pop
and
mov
in
pusha
movsl
andl
jne
jg
nop
push
aad
dec
filds
push
ljmp
incb
and
jne
jnp
dec
cmp
cmp
mov
pop
xlat
insb
pushf
sub
xchg
cmp
into
mov
pop
mov
outsb
jle
lcall
fucom
ljmp
test
dec
test
into
int3
pop
jnp
in
std
fildl
repnz
cmp
push
mov
mov
repz
pop
dec
jmp
adc
mov
das
dec
aad
pop
xchg
out
in
or
inc
mov
xor
xchg
loopne
xchg
repnz
mov
jp
dec
movsb
aaa
gs
cli
jb
xor
std
jb
xor
mov
xchg
dec
jns
inc
enter
int3
cmpb
leave
dec
shl
dec
push
mov
mov
and
jg
fnstcw
mov
ss
ret
lahf
xor
xchg
add
add
mov
leave
shlb
xchg
adc
jp
stos
sbb
jo
dec
movsb
mov
orl
mov
jmp
addl
popa
mov
inc
mov
xor
cmp
lea
fs
xchg
cltd
pushf
dec
ss
push
xchg
repnz
sbb
into
jbe
dec
aaa
clc
orl
nop
cwtl
fadd
fcomps
or
push
leave
sbb
ficoml
enter
jnp
inc
cmp
pop
adc
xchg
movsb
jg
cli
xchg
xlat
pushf
sti
outsl
addr16
repz
inc
or
clc
inc
add
lahf
xlat
and
in
rcll
mov
fidivs
and
imul
pop
and
cs
scas
xor
mov
out
dec
inc
push
js
jp
nop
je
push
lcall
aas
fs
mov
mov
rcrb
xlat
imul
sub
in
sub
sub
xor
icebp
xor
push
cmp
cvttps2pi
aad
or
push
test
shlb
jae
outsb
ds
push
cmp
jae
ret
sub
js
xor
mov
addr16
sub
xchg
pop
lcall
shl
push
ds
hlt
pop
mov
push
lahf
ss
sub
pop
sbb
imul
lods
loop
movsl
loopne
or
fcmovnu
cmp
jecxz
sbb
fmull
mov
cmp
push
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
pushf
dec
push
push
push
sbb
adc
sbb
jbe
xchg
inc
xor
loop
fbstp
out
cmp
mov
jno,pn
mov
push
jmp
add
cmp
or
xrstors
repnz
lretw
insl
mov
scas
movsb
test
fsubl
mov
or
dec
stos
fcoml
cmp
inc
push
jle
test
pushf
xchg
nop
scas
push
xchg
adc
loop
mov
or
es
lock
inc
and
imul
je
mov
pusha
out
jae
push
test
push
lea
das
test
pusha
lock
fisttps
inc
xlat
scas
adc
pop
and
xchg
inc
daa
adc
push
xchg
fldl
add
test
push
dec
fs
and
imul
mov
pop
enter
jl
push
mov
int
dec
mov
mov
jno
mov
or
dec
rclb
inc
jp
xchg
jmp
cli
lea
xor
outsb
bound
jae,pt
add
dec
push
add
outsl
cmc
cmc
mov
sub
ret
push
lcall
enter
int3
xchg
shll
inc
rcrl
sub
adc
subl
in
push
fstpt
out
out
les
mov
add
xchg
and
cmp
pushf
data16
jg
std
jne
aam
dec
jne
jp
and
sbb
or
xchg
aad
cwtl
jmp
lcall
mov
ss
pop
or
arpl
pop
test
xchg
mov
pop
pusha
adc
in
std
ja
mov
xchg
imul
mov
xchg
dec
or
loope
call
jae
jno
fistpll
dec
pop
xor
fs
add
jle
adc
mov
ret
jecxz
cmp
push
cmp
adc
add
shl
in
adc
nop
pop
shlb
push
lret
pop
repz
ss
xor
mov
loopne
cltd
sbb
popa
cwtl
cmp
lods
cmp
js
add
ljmp
stos
setns
sbb
pop
stos
call
insb
push
shlb
ror
andb
and
push
and
jle
mov
imul
push
mov
rorb
xchg
mov
push
dec
jp
mov
dec
jne
mov
es
pop
es
or
inc
fisttps
and
mov
fcompl
xchg
ljmp
pushf
decw
push
test
enter
inc
adc
add
xor
xchg
rorl
sbb
cld
popf
mov
inc
sbb
es
sahf
inc
mov
int
fidivrs
imul
dec
ss
push
jecxz
dec
cld
jnp
cmp
daa
hlt
shlb
dec
xchg
jge
cltd
leave
ret
mov
stos
test
lods
icebp
jg
mov
sub
add
out
imul
mov
jno
jp
xor
mov
int3
movsl
aam
repz
bound
add
mov
fildl
xchg
notb
mov
adcl
sahf
ret
add
adc
add
xchg
std
jns
cmp
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
mov
jl
dec
push
sbb
adc
sbb
loopne
orl
jecxz
jmp
add
pop
lock
outsl
ss
pop
push
movsb
mov
add
push
xor
jno
in
xor
jae
insl
pop
cmc
cmp
mov
mov
pushf
fnstcw
mov
jle
and
fimull
sbb
sbb
aaa
ss
pop
mov
push
loopne
jle
jmp
clc
jno
fwait
cmp
sbb
inc
sahf
cmp
pop
inc
xchg
mov
movsl
aad
mov
mov
imul
dec
out
rcll
ss
mov
call
dec
jb
pop
inc
movsl
push
xlat
mov
sub
outsb
pop
std
loopne
les
testb
movsl
sub
mov
jge
insb
int3
fidivl
push
mov
cmpsb
push
test
sti
or
xchg
clc
rolb
scas
pop
mov
ret
sbb
test
aad
sbb
mov
or
xchg
and
call
inc
leave
test
icebp
std
cmpsl
mov
cltd
xchg
shlb
xlat
cmc
xchg
sub
mov
pop
lock
and
fldlg2
xchg
loopne
stc
mov
sbb
dec
sbb
mov
jl
loop
lock
outsb
and
dec
int
sbb
iret
mov
dec
imul
je
js
jae
jne
add
adc
cli
fisubrs
adc
in
mov
mov
xchg
enter
add
mov
popa
vmovhps
push
xchg
push
mov
out
aam
in
jo
mov
add
sub
jbe
pusha
inc
push
outsb
push
mov
push
or
mov
shlb
insb
cltd
push
sbb
and
outsb
aad
cwtl
fisubs
dec
out
arpl
js
es
dec
push
or
inc
sbb
dec
mov
adc
or
xchg
ds
pop
out
scas
ds
jnp
mov
into
sbb
push
cmp
cs
pusha
cmpsl
daa
xchg
xchg
daa
pop
aad
jmp
inc
dec
pop
dec
jae
xchg
jne
adc
adc
pop
test
sub
call
jmp
cmp
jmp
xchg
sahf
pop
jnp
mov
fcomp
xor
and
xchg
cmpsl
jecxz
sub
inc
cmp
divl
adc
sub
sbb
fneni(8087
dec
xchg
orb
test
test
dec
inc
insb
andl
adc
xchg
clc
add
push
xor
jae
sbb
cmp
out
ret
mov
ljmp
icebp
loop
mov
mov
push
sub
lea
xchg
decb
or
fisubrs
add
sub
add
xor
pusha
jb
jb
mov
mov
add
adc
arpl
cld
add
arpl
inc
pop
push
test
test
dec
push
fdivrl
jg
xchg
mov
dec
xor
out
inc
adcl
cmpsb
lcall
cmpl
add
push
pop
pop
sub
dec
inc
sub
ret
movsb
xchg
dec
mov
andb
ja
popf
xor
xor
sub
jl
jle
sbb
xchg
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
fldl
sbb
adc
sbb
dec
jg
or
out
addr16
std
add
mov
and
in
std
jp
test
sbb
cli
inc
dec
jle
jecxz
mov
arpl
lret
push
xchg
cmp
jecxz
sub
pop
adc
cmpsb
iret
push
add
push
cmpsl
lea
cs
mov
cmp
adc
pop
insl
jo
lret
repnz
cmp
rclb
dec
sub
and
dec
in
or
cwtl
out
and
or
sub
cmp
xlat
sbb
inc
scas
cmpb
lods
and
adc
iret
mov
js
pop
rcll
shlb
ja
xor
push
mov
out
sbb
out
popf
xchg
not
test
cmc
push
pop
cmp
push
pop
mov
or
das
scas
push
dec
xchg
call
xor
push
or
sub
push
int3
and
mov
fwait
sub
dec
mov
clc
mov
in
mov
inc
loop
hlt
cli
nop
push
mov
mov
mov
cmc
mov
jmp
adc
mov
add
push
inc
cs
cmpsl
sub
xchg
adc
or
and
popf
mov
add
xor
mull
push
cmp
test
bound
popl
ror
fstpt
mov
sbb
ret
and
xchg
mov
sarb
mov
aad
fsubl
pusha
pop
sbb
stc
out
add
cmpsl
mov
gs
jnp
jno
in
xor
sarl
mov
cmp
cld
add
sbb
inc
adc
mov
xor
std
cmp
xor
mov
imul
cmp
inc
sti
adc
mov
push
xchg
insb
fsubrl
ret
xchg
pop
xchg
test
andl
aas
movsl
out
test
iret
js
scas
daa
jp
push
or
shr
shlb
xor
sbb
push
daa
add
fstpt
rorb
jle
test
shrb
lods
addr16
mov
ds
dec
push
xchg
mov
or
xchg
mov
insl
xchg
cld
stc
xor
aad
outsb
insb
lods
fisubs
and
enter
cs
push
push
jg
imul
lcall
out
xor
scas
dec
pusha
pop
pop
lea
pop
cmc
or
mov
inc
sbb
or
fldt
das
in
jnp
rcrl
xchg
xchg
lret
mov
aas
sub
jb
outsb
and
aaa
jecxz
adc
mov
test
into
mov
push
jae
push
mov
mov
jae
lret
add
je
inc
mul
and
repz
jl
xchg
ret
and
pop
xchg
das
sbbl
ret
xchg
imul
xchg
push
cmp
inc
and
int3
daa
add
add
push
or
push
pop
cmc
outsb
ret
jnp
ds
push
cmp
daa
lret
out
sbb
shll
orl
jae
ret
xor
inc
xchg
cmpsb
jle
push
jo
lret
pop
movsb
lods
cmp
fldl
add
mov
icebp
jmp
pop
lcall
add
inc
in
add
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
mov
mulb
addr16
sbb
and
js
cli
mov
leave
dec
pushf
xchg
sbb
xchg
xor
leave
and
popa
jae
push
ja
mov
ss
arpl
loope
ror
dec
ret
sub
fsubrl
popf
pop
xlat
mov
test
popa
jb
pop
enter
clc
stos
into
into
gs
mov
jg
push
cmp
imul
sbb
pop
inc
and
jl
lcall
pop
mov
sahf
scas
stos
stos
out
pop
xchg
movsl
aaa
fs
and
add
lods
inc
jo
push
out
scas
jmp
xchg
add
shlb
jnp
or
int
aad
and
inc
icebp
xorb
scas
ror
leave
int3
hlt
ljmp
test
sub
dec
sub
inc
dec
sbb
orl
push
push
and
dec
ret
scas
jnp
sub
out
leave
out
sbb
js
xor
xchg
je
stos
push
rolb
and
pop
ss
mov
mov
xchg
xchg
stos
test
call
and
insl
fistps
jnp
stc
popf
pop
stos
adc
fs
aam
dec
add
dec
pop
pop
push
repnz
cs
push
push
hlt
loopne
dec
sbbl
andl
movsl
pop
lret
lods
inc
shlb
movsl
push
data16
push
aaa
pop
out
shrb
push
in
pushf
fcoms
sub
stos
xchg
rcrl
add
push
cmc
sar
call
sub
data16
pop
mov
enter
ret
mov
cltd
adc
test
push
je
inc
inc
mov
loop
push
shl
mov
dec
pop
xor
ljmp
jb
sub
mov
push
fldt
push
push
aad
cld
fisubs
aaa
or
xor
and
xchg
out
movsl
pop
mov
add
dec
lods
xchg
pop
inc
ja
sub
mov
outsb
xor
sti
cmpsb
fdivrs
pop
imul
testb
popf
fwait
mov
sub
adc
pusha
jbe
in
insl
sub
lcall
push
fs
out
faddl
icebp
clc
cltd
adc
lods
dec
mov
mov
je
inc
std
cmpb
insl
rcrl
sub
xor
loope
lret
add
stos
nop
sub
xchg
nop
mov
pop
cltd
ljmp
jl
out
cmp
lea
inc
xchg
push
pop
repz
bound
sbb
push
inc
das
sub
icebp
sahf
ret
addl
mov
jp
aaa
xchg
outsl
xchg
fldt
mov
push
cmp
mov
mov
push
nop
xchg
ror
mov
or
imul
xchg
js
fidivs
mov
out
pop
cmp
xchg
rolb
xchg
int3
and
pop
sub
xchg
jge
ficomps
fldcw
stos
inc
dec
rcr
cmp
in
into
jne
mov
rcll
dec
jp
jg
imul
shlb
mov
aad
cmp
pushf
sub
shr
lret
sbb
ljmp
test
rorb
imul
adc
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
stos
out
push
sbb
adc
sbb
or
xor
sub
andb
rcrl
out
push
dec
rcr
out
mov
mov
int
sub
sahf
mov
cmp
mov
mov
fisttpll
out
mov
xor
xor
mov
sub
xchg
mov
repz
popf
hlt
bound
fsubl
mov
mov
cmc
gs
jecxz
shlb
add
aas
icebp
shrl
add
iret
int3
cmp
adc
shrl
xchg
popa
xchg
pop
sbb
es
inc
push
in
mov
rolb
dec
fdivs
push
sbb
and
fistl
inc
xor
mov
ss
pop
and
sub
inc
xlat
leave
and
pop
iret
dec
pop
cmp
or
sbb
xor
loopne
je
or
cmpsb
rcll
add
jge
mov
into
adc
jmp
xchg
or
xchg
mov
pop
sahf
clc
jge
mov
xchg
adc
js
sti
pop
mov
aam
mov
adc
or
mov
cs
fildll
insb
dec
pop
dec
sbb
sarb
mov
js
test
js
mov
adc
je
push
adc
cmpsb
and
push
sbb
jg
mov
cmc
pushf
and
daa
dec
adc
push
sub
and
mov
test
or
lods
lret
add
add
notl
cs
test
mov
fs
sub
js
call
adc
or
mov
mov
xor
and
rol
popa
xchg
les
sarl
xchg
imul
cmp
popf
push
dec
cli
lret
inc
out
push
cli
jle
mov
xor
movsb
rcll
xchg
jp
pop
pusha
ljmp
add
mov
andl
outsl
cli
xchg
mov
cs
adc
fstps
int3
in
jge
filds
dec
fldt
mov
jge
in
push
ret
vpextrw
lds
push
xor
adc
push
pusha
push
sub
ja
sub
mov
xchg
jne
cmpl
or
sub
pop
sub
or
sahf
push
cltd
add
rclb
into
negb
fists
jl
mov
aaa
mov
adc
addr16
dec
in
mov
out
mov
push
dec
or
pop
in
rclb
xor
or
sbb
ficompl
rol
icebp
adc
mov
insl
push
test
dec
repz
stos
pop
ljmp
testl
adc
cmp
sub
aaa
mov
xchg
cli
push
std
xchg
mov
hlt
pop
inc
xor
jb
sbb
pop
mov
cs
mov
test
out
push
dec
cmp
or
lds
std
cmp
xor
ret
or
adc
push
inc
test
test
in
dec
std
mov
xor
imul
cld
cmp
jnp
call
lcall
cltd
jg
jns
push
rcrl
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
mov
push
sbb
adc
sbb
sahf
and
sub
cmp
cmc
push
jp
xor
xchg
ds
repz
mov
mov
sub
test
inc
jae
arpl
adc
xchg
movsl
mov
sbb
mov
xor
sbb
and
ds
inc
lea
jbe
lea
in
mov
pop
in
fisubrs
inc
adc
icebp
and
in
mov
mov
push
into
cmp
sub
addr16
in
jge
in
stos
loopne
lods
outsb
test
adc
insb
jo
dec
imul
inc
mov
and
outsb
and
push
sahf
das
out
jnp
xor
xchg
imul
mov
inc
test
inc
push
fists
lahf
cmp
push
das
mov
sub
es
fbld
js
mov
in
pusha
and
sahf
xchg
dec
add
xchg
nop
jae
lea
pushf
jne
lcall
cs
xor
daa
push
lahf
add
push
adc
dec
pusha
inc
mov
pop
xchg
push
adc
sub
rorl
inc
mov
ss
movsb
ja
pop
jmp
pusha
xor
bound
cmp
test
mov
lret
pop
add
dec
and
mov
jmp
imul
rolb
hlt
adc
cmpsb
test
sbbb
pop
mov
mov
lods
mulb
dec
clc
dec
push
jmp
dec
xchg
add
jae
pushf
lods
xlat
pop
mov
add
cmp
pop
cmc
es
cmpsl
lahf
jmp
pop
cmpsl
lods
rol
mov
xchg
movsb
jo
cli
push
out
jnp
stos
sub
test
notb
rolb
pop
and
cs
les
or
mov
pop
jmp
scas
pop
jmp
sbb
or
jecxz
sbb
inc
cmp
mov
pop
out
ljmp
scas
jo
jmpw
push
and
mov
dec
addr16
add
shl
jle
and
negb
pop
push
inc
ss
scas
mov
lret
in
out
leave
fsubs
mov
ljmp
clc
mov
mov
pop
or
in
xor
and
addb
and
addr16
sub
cmp
and
test
daa
leave
jbe
xchg
jb
shll
dec
test
lea
xor
aas
call
data16
push
stos
ror
leave
adc
enter
mov
insb
or
rcrb
lea
add
xor
lea
bound
cmpsb
addr16
adc
fcoml
mov
push
int3
adc
decl
arpl
jns
lock
or
sahf
aas
pop
mov
mov
and
cmp
mov
test
sub
leave
aad
inc
ret
mov
imulb
mov
mov
push
add
xor
popf
fnstsw
lcall
jae
daa
mov
test
vpshufd
cli
adc
loope
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
jae
mov
and
sbb
jns
dec
fisttps
cmp
push
popf
xchg
pop
aad
test
pop
rcr
movb
mov
fstps
sbbb
inc
pop
cmpsb
cmp
daa
inc
sub
imul
cmpsb
sbb
and
add
xchg
insb
test
mov
ds
test
xorl
movsl
rorb
mov
add
push
pop
aad
and
cs
mov
cmp
dec
dec
fsub
cmp
cmc
sahf
inc
in
jmp
ficoms
out
xchg
mov
dec
mov
or
cmp
into
mov
jnp
mov
pop
out
movsl
stos
cltd
jbe
jge
mov
imul
fs
test
es
pop
jl
mov
jle
imul
in
bound
das
mov
scas
xchg
pop
test
adc
pop
nop
push
cltd
push
pshufw
pop
xchg
shrl
mov
clc
imull
push
cs
call
mov
pushf
ja
ds
push
inc
or
xor
das
mov
jl
stos
xchg
movb
push
loop
mov
js
add
mov
sub
sub
inc
stos
xchg
jmp
subb
cmpsb
push
out
push
inc
jmp
shrl
and
xor
test
iret
test
pop
mov
xchg
dec
addr16
daa
nop
sub
cmp
sub
lock
sarl
out
pushf
mov
xchg
xchg
outsb
ljmp
cmp
push
adcb
adcl
inc
sti
cmp
dec
mov
sbb
mov
mov
fnsave
repz
adc
mov
adc
xchg
and
int3
dec
iret
repz
insl
xlat
mov
test
or
sub
xor
jo
clc
data16
iret
jnp
stos
aaa
loop
daa
xchg
push
mov
negl
subb
push
rolb
push
aad
aas
scas
ret
jecxz
mov
push
jae
sbb
cmp
adc
inc
bound
popa
lock
mov
or
push
scas
add
jg
inc
add
sub
xchg
jo
mov
loope
enter
mov
inc
daa
es
pop
mov
test
stc
outsb
pop
cli
pop
mov
pop
sub
jne
and
xor
into
fwait
lock
or
in
popa
xorb
mov
cmp
gs
xor
aaa
and
imul
dec
push
jge
or
in
cmpsb
cmc
jmp
pop
jb
cli
push
jg
ljmp
test
push
push
sbb
movsl
adc
xchg
inc
cltd
bound
lods
xchg
arpl
and
hlt
xor
jns
test
xor
jmp
push
or
incb
jne
adc
or
push
fwait
jp
iret
sbb
mov
push
fildll
sbb
pop
pop
sub
add
push
in
add
aas
vpshuflw
les
push
lcall
sub
mov
lea
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
lea
and
sbb
ds
fildll
xchg
jno
lahf
das
movsb
in
xchg
sub
xor
xor
sahf
mov
cmpsb
push
es
fs
or
aas
fcmove
or
inc
adc
hlt
test
pop
xlat
les
sti
or
loop
mov
mov
repnz
ljmp
stc
xchg
lock
roll
imul
jg
pop
insl
enter
push
fisubrl
adc
jae
jb
fwait
movsl
icebp
ljmp
mov
movsb
cwtl
ds
cmp
or
jns
sub
pop
mov
lret
push
lods
iret
ffreep
out
add
or
add
mov
push
xor
xor
adc
and
add
adc
subl
inc
jge
popf
add
repz
jns
xor
or
or
ret
push
aas
std
cmp
lret
setb
arpl
push
out
sarl
rorb
pop
xchg
push
pushf
sarl
shrb
cltd
dec
mov
loop
cli
lods
xor
aas
les
push
insb
jae
rolb
imul
dec
jle
sub
xchg
xchg
sbb
enter
xor
xor
dec
repz
jmp
and
in
es
ljmp
pop
addr16
xor
dec
in
mov
xor
repz
mov
lret
xchg
xor
mov
sbb
in
jge
inc
pushf
movsl
mov
push
mov
and
add
push
movsb
dec
add
sbb
fdivs
mov
lods
adc
mov
mov
dec
aaa
inc
fnstenv
scas
scas
sbb
xchg
mov
mov
jmp
inc
sbb
mov
and
jl
mov
lret
add
in
sub
mov
shrl
jl
push
aam
xor
jl
imul
aam
inc
mov
xor
in
mov
fwait
in
add
push
imul
movsb
clc
cmp
mov
or
push
ja
sub
adc
scas
ret
sub
out
cmpsl
loopne
sahf
mov
cmp
jg
xchg
mov
xchg
jns
pop
sub
inc
loop
popa
rcrb
inc
mov
adc
jne
notb
cs
leave
adc
loopne
int3
push
sahf
pusha
aam
data16
daa
xlat
imul
lea
pop
out
inc
jb
push
cmp
call
fmull
lock
lods
pop
push
mov
dec
inc
daa
or
sbb
int
es
add
scas
int3
scas
jne
int3
popa
in
shlb
push
fcomps
clc
mov
daa
mov
mov
data16
cmp
lahf
movsl
dec
pop
es
xchg
in
push
daa
mov
fdivrl
cmpsb
mov
push
lock
nop
fmull
cmp
in
dec
push
push
cmpb
inc
fisubrs
ja
inc
mov
int
scas
sbb
jge
mov
lret
xor
inc
mov
in
test
inc
popa
stc
in
or
lock
mov
mov
es
mov
cmpsl
imul
popf
movsl
add
std
les
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
out
adc
sbb
adc
sbb
std
cld
fildll
pop
xchg
movsl
push
mov
xchg
mov
fsubrs
inc
jbe
mov
dec
test
push
pop
popa
sti
push
out
repz
jmp
hlt
push
jb
ficompl
aad
xchg
sub
mov
mov
cmp
and
std
fsubrl
lret
ja
adc
movsb
lret
aaa
xchg
dec
push
cltd
cmpsb
repz
xchg
and
call
pop
ljmp
dec
mov
fildl
xchg
pop
shrl
push
fistpll
dec
xor
sub
pop
fcmove
lods
es
je
in
fmuls
jae
clc
sti
jns
stos
ss
inc
out
jecxz
nop
out
jbe
cmc
cmpl
out
bound
arpl
mov
mov
loopne
sbb
std
mov
lods
andl
movsb
cmpsl
adc
jp
out
cli
popf
push
shrb
dec
push
mov
fsts
into
dec
nop
ljmp
xor
cmp
int3
push
add
push
std
jg
scas
stos
adc
sti
pop
and
leave
popf
and
icebp
sbb
jle
adc
push
mov
cmpsl
mov
jg
sub
push
xchg
jo
push
jno
popa
mov
push
fidivrs
cltd
loope
scas
movsl
vmread
cmp
pop
and
mov
jg
dec
pushf
fs
add
cs
mov
repnz
mov
loope
imul
mov
adc
cmp
dec
pop
push
mov
dec
add
xchg
mov
mov
jl
ret
lret
movsb
aam
js
movsb
lret
test
not
dec
cmp
jl
push
pop
add
js
into
pop
cld
mov
addr16
add
aaa
pushf
out
pop
jle
cmp
outsl
insb
hlt
dec
xor
std
pop
xchg
inc
xor
push
shrl
mov
push
inc
test
pop
xor
inc
sub
xchg
sbb
add
je,pn
loopne
xor
fisubrs
mov
idivl
aad
xchg
jb
ret
fimull
iret
movsl
mov
and
out
pop
jmp
pop
and
mov
pop
add
push
sti
repnz
xor
cmp
lahf
pop
jne
mov
inc
lahf
add
fs
cld
xor
mov
and
fucomp
sarb
in
insl
rcrl
sbb
shll
mov
xor
and
xchg
pop
stos
repnz
les
je
enter
or
arpl
ds
adc
dec
mov
mov
push
xchg
repz
iret
in
dec
pop
jp
inc
out
orl
movsb
jle,pn
nop
lock
hlt
jle
pop
ret
mov
fstl
scas
cmp
inc
adc
dec
int3
sbb
xor
pop
jno
dec
pop
mov
dec
inc
incl
pop
or
pop
clc
ret
mov
lock
outsb
or
lahf
js
add
add
push
pusha
test
dec
out
and
jl
les
out
mov
sub
push
inc
mov
mov
lret
iret
test
mov
bound
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
and
sbb
xor
pop
idivb
add
push
push
push
stos
xrelease
mov
jg
pushf
pop
adc
sbb
lret
dec
mov
mov
mov
dec
push
pop
sub
and
fnsave
mov
jmp
bound
or
push
daa
sbb
jo
xor
aas
mov
adc
int3
cmp
mov
xchg
rorl
jg
mov
call
outsb
pop
inc
iret
inc
mov
jecxz
scas
push
aad
stos
getsec
mov
dec
jbe
xor
jnp
pusha
pop
pop
ret
lods
pop
cwtl
jle
mull
scas
mov
movsl
mov
repz
xor
inc
inc
mov
loop
xchg
jo
mov
outsl
pop
inc
test
push
sbb
std
andb
sub
in
shrb
mov
pusha
pop
movsb
inc
aam
xchg
pop
test
or
cmp
cwtl
xchg
mov
xchg
mov
jle
cmp
in
lods
dec
ror
into
rcll
push
imul
cmc
fsubrl
sub
inc
jmp
or
inc
mov
mov
mov
mov
add
sbbl
and
inc
les
movsl
mov
jne
lock
cmc
jle
xchg
scas
push
cmp
stc
sbb
push
jb
nop
out
inc
push
push
push
sbb
stos
add
inc
push
les
mov
test
mov
xor
inc
int3
popl
out
inc
imul
jle
loope
adc
outsb
jns
js
cmp
pop
jmp
dec
mov
fs
or
scas
mov
jecxz
xchg
ficomps
mov
sub
push
pop
pushf
sti
push
rcll
pop
or
dec
loopne
adc
fxam
dec
xchg
push
lret
pop
dec
pop
sbb
cmc
push
mov
mov
sti
repz
sahf
ret
dec
cmp
fnstenv
dec
sbb
cmp
sar
inc
cmp
sbb
cwtl
stos
mov
sbb
in
cltd
in
icebp
scas
lcall
mov
adc
imul
in
fstpt
mov
add
and
divb
int3
fs
or
sti
pop
mov
sbb
jnp
mov
push
jbe
and
icebp
push
leave
mov
cld
dec
jmp
or
lods
inc
mov
insb
jnp
pop
sub
rclb
inc
loopne
loopne
dec
cli
sub
mov
inc
mov
fldenv
sbb
movsl
je
aad
adc
fisubs
cmp
jne
cmpsl
subb
add
popa
pop
cmp
mov
scas
cld
cwtl
sub
mov
mulb
pop
cmp
cld
lahf
fstl
shrb
add
rclb
cwtl
leave
mov
mov
ret
inc
aaa
jb
testb
add
xchg
cwtl
mov
or
or
mov
in
cltd
daa
jecxz
outsb
mov
add
gs
int3
adc
or
cmp
testl
enter
mov
pushw
fdivs
and
adc
or
mov
lods
jg
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
repnz
sbb
adc
sbb
jb
xor
lea
add
dec
movsl
jns
out
ret
push
daa
mov
ret
sbb
cmp
in
sub
scas
andb
imul
dec
mov
fsubr
outsb
xor
andb
movsl
pushf
int
mov
pop
push
pop
out
adcl
cld
int3
ja
dec
sarb
sub
or
push
jg
and
pop
repz
fisttpl
cmp
sub
xlat
insb
push
cmp
jmp
xchg
pop
sarl
dec
xchg
lock
push
clc
jbe
shrb
jno
fs
lret
lods
into
les
jb
enter
jp
divb
dec
mov
out
mov
sub
adc
mov
cmp
das
lcall
aam
in
fiadds
jl
push
push
es
mov
inc
sub
jb
push
mov
or
jno
daa
fdivl
mov
inc
popf
test
inc
imul
cmp
push
pop
pop
sbb
in
imul
mov
shr
or
movsb
out
jb
push
and
push
add
movsb
push
fisubs
add
lock
lock
mov
lods
ret
dec
adc
fldl
mov
ret
xchg
jns
cmp
arpl
mov
std
xchg
sbb
orb
sub
rclb
cmpsl
gs
dec
mov
jmp
mov
or
out
sub
repnz
jp
stos
test
pusha
push
testb
dec
lea
sbb
lret
fildl
push
xchg
test
jg
cmp
jl
cs
test
dec
xor
push
stos
mov
mov
outsl
xchg
mov
sbb
jge
and
push
mov
mov
cmc
mov
dec
or
sbb
jecxz
push
fwait
xor
add
cmpsl
test
xor
xchg
or
sub
fistpll
mov
lret
cmc
mov
or
js
jp
sbb
adc
into
mov
push
inc
pop
cmpsl
add
cmpsl
lock
sbb
into
scas
jae
jo
sarl
idivb
xlat
fdiv
sub
aas
scas
and
sub
cmp
pushf
or
stos
rorl
and
xchg
cmp
outsb
rcrb
cmpb
rcll
xor
mov
xor
lds
xor
pushf
mov
cltd
cmp
mov
jl
inc
jae
pop
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
loopne
add
fiaddl
add
xor
add
in
add
push
nop
add
cmp
add
push
mov
add
add
add
add
add
int3
mov
add
add
sub
add
add
add
fimull
add
sub
add
orb
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
adc
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sub
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pushf
and
add
es
add
sub
xchg
and
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
push
movsb
scas
or
movsb
lods
es
add
add
inc
add
add
inc
add
daa
inc
add
es
add
inc
add
inc
out
adc
inc
add
inc
add
xchg
mov
add
inc
add
rcl
pop
bound
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
nop
and
add
inc
add
add
add
lret
xlat
movsb
das
dec
add
mov
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
push
addl
push
addl
push
addl
addl
addl
addl
addl
inc
addl
dec
addl
push
addl
ljmp
add
addl
cli
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
js
add
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
cmpsb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
sub
add
dec
xchg
add
add
add
jl
add
mov
add
test
add
mov
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
jle
add
mov
add
scas
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
xor
add
push
mov
add
add
outsb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
add
pop
mov
add
add
test
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
add
pop
mov
add
add
orb
add
add
loop
add
repnz
add
mov
add
add
and
add
dec
mov
add
add
push
add
orb
add
add
aam
add
ljmp
add
add
mov
add
add
dec
mov
add
add
insb
mov
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
