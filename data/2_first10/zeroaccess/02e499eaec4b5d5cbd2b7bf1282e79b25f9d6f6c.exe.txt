push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
mov
jp
jp
pop
jp
and
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
aas
sub
fcmovu
iret
mov
fwait
or
jno
xchg
add
out
stc
xor
movsb
add
scas
or
push
shll
nop
ja
xchg
inc
inc
loop
cmc
xchg
shlb
out
inc
cmpsb
iret
daa
mov
push
aad
je
jmp
iret
mov
sbb
fadd
jne
jg
leave
lret
push
ret
or
adc
fcmovnb
popa
mov
clc
or
pop
jl
cmpsl
lahf
dec
mov
push
mov
sti
ljmp
cmp
outsb
xchg
mov
inc
push
nop
cmp
xchg
pop
test
rcrl
inc
xor
inc
popl
dec
lret
sbb
in
fadds
imul
popf
pushl
dec
mov
mov
fsub
adc
mov
sub
cmc
es
test
and
cwtl
push
in
jle
lods
je
mov
xchg
daa
ret
xchg
pusha
mov
cli
mov
adc
leave
add
js
pop
daa
mov
push
cltd
mov
movsb
test
std
out
jae
jp
repz
inc
bnd
fists
jb
jns
xchg
out
fldt
pop
ljmp
sbb
sbb
jo
sub
cli
sub
loop
lcall
aaa
out
xchg
and
in
fwait
popa
jecxz
add
cmp
mov
neg
fnstsw
fcoms
xchg
dec
push
push
sub
jnp
es
out
inc
pop
inc
out
leave
jge
inc
test
mov
dec
outsl
mov
aam
ds
lock
cld
xchg
test
popa
adc
movsb
pop
add
jle
xchg
fsubrl
fstpl
dec
sbb
cmp
cmp
pop
std
std
stos
adc
pop
mov
lahf
cmp
pusha
push
cmp
das
jno
test
pop
jecxz
adc
pop
sbb
hlt
and
add
mov
ds
cmc
sub
dec
loopne
subl
mov
fs
cmp
movd
mov
adc
add
cmp
cmpsl
mov
jmp
add
pop
lods
clc
or
xor
in
testl
outsb
lds
sub
xchg
push
xor
cmp
clc
inc
mov
pop
xchg
rcrl
jne
and
xor
shr
repz
dec
subl
aas
clc
sbb
and
jno
push
cltd
sub
std
adc
clc
sbb
mov
ss
scas
loop
jne
jno
pop
dec
shr
daa
adc
cmp
mov
pop
sbb
jns
sbb
pop
aaa
adc
jbe,pt
outsb
cmc
add
push
jmp
lcall
out
cld
pop
adc
out
dec
xchg
sbb
out
movsb
popf
pop
mov
outsb
outsb
imul
mov
jne
nop
stc
das
sbb
mov
pushf
fnsave
shll
popf
popf
sub
push
push
add
test
ret
mov
jnp
pushf
mov
lock
stc
add
mov
loopne
fsubs
push
insl
inc
jmp
jmp
xchg
jp
xlat
or
xor
push
shrb
dec
push
lea
and
out
pop
adc
idivl
xchg
jns
adc
lret
push
loop
cmpsb
clc
xchg
mov
pop
cmp
jle
rcl
cmp
xlat
push
inc
in
pushf
in
inc
pop
outsb
daa
push
push
int3
pop
cmpsb
not
add
cmc
cmc
mov
loopne
lret
cld
jae
pop
lcall
fsubs
inc
lcall
cwtl
out
dec
and
sbb
shr
add
push
sub
pop
out
sbb
testl
testb
or
shlb
mov
test
movsb
adc
xchg
cmc
lcall
es
jmp
ds
hlt
jmp
cmp
insl
stc
cmpb
xchg
or
movsl
stos
pop
push
nop
xor
jecxz
mov
sbb
rcrb
popf
mov
mov
add
mov
sub
mov
dec
xchg
mov
insl
sbb
ljmp
cmp
fsubl
pop
fstl
lahf
adc
aam
fwait
add
nop
sub
ret
adc
stc
std
xchg
push
inc
xchg
js
jge
scas
clc
dec
pop
rcll
pop
pusha
adc
in
pop
decb
test
mov
jp
lret
ds
sub
fabs
lret
xlat
sti
and
mov
or
sbb
lret
outsb
mov
movsl
outsb
mov
das
mov
in
xor
mov
pop
scas
or
leave
lret
push
loopne
mov
sub
pop
push
ja
or
and
cmpsl
repnz
in
cmpsb
push
in
mov
aam
mov
or
xchg
add
adcl
fldcw
loop
push
jns
loope
and
xchg
inc
xlat
pop
dec
mov
mov
xchg
mov
xor
fistps
insb
adc
icebp
test
test
or
ret
inc
mov
add
aas
jmp
lcall
lret
mov
mov
mov
add
mov
test
xchg
xor
js
push
or
hlt
das
js
sub
push
aad
fldcw
add
cltd
mov
cmp
sbb
lock
cmp
clc
sarl
mov
cmp
test
cmpsb
mov
push
mov
dec
call
xchg
js
cmp
cwtl
inc
jmp
pmullw
iret
jge
or
inc
push
cmp
call
mov
push
out
incb
lock
fs
jecxz
push
mov
cmp
push
add
xchg
push
lret
lods
add
lods
dec
ss
sbb
pop
in
ljmp
sub
int
pop
rorl
mov
nop
loop
jmp
stos
repz
dec
ljmp
ds
dec
ficoml
inc
lds
dec
int
cmp
xor
or
inc
out
push
adc
and
lds
mov
and
jns
xchg
dec
add
xchg
xor
jge
xchg
jg
and
sbb
out
jecxz
es
sbbl
jno
cs
cmp
in
add
sub
push
xor
or
ds
out
mov
add
icebp
test
call
xchg
loope
pop
fsts
test
cmp
add
jle
adc
mov
jecxz
inc
push
idivb
mov
push
add
cld
fcom
pushf
addr16
adc
data16
cmp
test
adc
lods
loopne
push
pop
into
xor
mov
sbb
test
add
addr16
push
pop
into
push
pop
cltd
movsb
cmp
cli
addr16
jae
cwtl
pop
xchg
and
ret
repz
les
lahf
addr16
mov
cmp
jge
and
pop
ds
into
lahf
out
aaa
sbb
ljmp
loope
subl
and
fmul
bound
pop
dec
sub
mov
lret
inc
pop
adc
jl
dec
cli
jns
aaa
or
sbb
adc
mov
leave
or
add
xor
jno
fists
loope
dec
pop
lds
adc
mov
rorl
faddl
scas
jb
pop
sub
out
sar
mov
in
xor
push
je
scas
gs
and
out
push
pop
sub
cltd
insl
data16
fdivr
cld
stos
mov
pop
into
out
sbb
add
lods
loopne
dec
mov
xor
and
fwait
cli
push
xor
lods
xor
mov
push
arpl
lret
push
push
imul
popa
pusha
call
or
jmp
dec
insb
ljmp
mov
xchg
mov
add
lea
fcoml
push
shrl
lock
mov
mov
cld
lret
aaa
dec
jo
xor
adc
pop
or
shrb
push
cmpl
dec
dec
inc
stos
pop
outsl
mov
mov
xchg
jp
jmp
ds
insl
clc
adc
lahf
lahf
mov
or
pop
cmp
repnz
inc
rcrl
nop
testl
jmp
pop
lds
mov
popa
shll
or
pusha
sub
lret
jbe
mov
lock
out
push
pushf
das
fwait
push
iret
xlat
xlat
jbe
adc
xor
scas
xchg
movsb
add
push
movsb
mov
stos
or
frstor
mov
enter
xor
inc
les
loopne
call
imul
xlat
dec
jno
push
fcomps
cltd
xchg
jno
dec
daa
fwait
inc
test
mov
loope
xor
cmp
jg
inc
push
xlat
adc
mov
mov
jae
mov
and
fisttps
push
or
les
fdivrp
shrl
int3
dec
push
xor
mov
sar
push
cmpsb
insb
sti
cltd
push
cwtl
add
mov
inc
add
fsubrs
imul
icebp
or
pushf
mov
arpl
ret
pop
push
das
popa
cmc
bound
push
push
add
int3
push
dec
xchg
cmp
pop
movsb
dec
xor
pop
lcall
xorb
js
fsubp
mov
outsl
mov
and
pop
lcall
and
out
mov
nop
loop
imul
dec
in
roll
add
mov
insl
in
lods
leave
xchg
aas
pop
dec
mov
fstps
push
jae
adc
mov
int3
lret
push
jl
ret
push
and
inc
push
ret
mov
out
lahf
lea
call
xchg
test
cmp
test
push
decb
jle
arpl
test
sti
inc
sti
sbbl
popa
adc
sub
out
jno,pt
cwtl
scas
aaa
lahf
pushl
sbb
adc
xchg
loope
push
pop
pop
add
add
mov
and
push
inc
gs
dec
loop
insb
inc
push
stc
xchg
dec
movsb
xor
add
addb
sub
xor
inc
sbb
jmp
push
pop
sub
mov
cmc
cmp
pop
adc
push
inc
add
fcoms
fsubrs
mov
mov
icebp
dec
in
into
jns
mov
xchg
ljmp
mov
mov
das
bound
xor
enter
cmc
clc
cld
xor
repnz
adc
sub
arpl
movsb
testl
and
mov
loop
push
lcall
adc
inc
imul
push
incl
inc
xor
nop
lock
mov
decl
test
mov
mov
xchg
pop
hlt
dec
stos
mov
mov
in
fstps
sbb
ret
pop
aas
inc
inc
adc
fdivs
test
add
add
push
fs
cld
call
leave
or
lods
xor
fisubs
bound
cmpsl
cmc
roll
sub
and
mov
addr16
or
lret
shr
mov
out
lods
adc
inc
int3
ja
jle
xchg
lock
cmpsb
mov
or
push
dec
pop
testb
xor
das
jle
sbb
jae
mov
xchg
or
fisubs
scas
hlt
pop
cs
cmc
in
mov
hlt
push
fistpll
or
stos
mov
lret
fnstsw
sub
cmc
repnz
arpl
sub
loop
out
loop
aaa
mov
push
in
lods
mulb
sbb
dec
sahf
jno
and
popa
cmpsb
mov
mov
inc
dec
arpl
mov
cmp
cmc
je
out
insl
rcr
cmpsb
popf
sub
cmp
jbe
sub
mov
adc
inc
push
jmp
stos
mov
int
mov
test
fdivrl
xchg
mov
mov
out
shlb
xor
mov
xchg
lds
out
add
cs
decb
mov
lahf
inc
push
pop
out
cmp
popa
int3
and
lret
mov
xor
jl
mov
xchg
mov
mov
pop
bnd
enter
ljmp
int3
xor
shl
mov
pop
lock
pop
jbe
lret
test
pop
es
sub
and
mov
dec
je
and
or
mov
inc
ljmp
push
mov
mov
push
inc
mov
add
cltd
jg
mov
notb
lods
mov
dec
cmp
sti
xchg
call
cwtl
mov
in
adc
push
and
mov
mov
stos
xchg
dec
repz
testb
ljmp
inc
push
lea
in
add
jmp
pop
repnz
mov
rol
jns
cmp
je
xchg
lods
mov
cmpsb
cmp
std
push
mov
mov
mov
inc
jbe
dec
mov
ljmp
jno
pop
xchg
xor
std
push
pop
inc
ja
push
aaa
pop
rorb
addr16
fs
std
lea
sub
sbb
sub
inc
bound
pop
adc
cmp
mov
test
xor
hlt
es
xchg
jns
inc
xchg
pop
inc
sub
call
mov
xchg
push
movsb
int3
in
mov
cld
inc
xchg
mov
inc
mov
dec
mov
dec
fbld
fistps
or
mov
lret
pop
adc
cmp
movsl
inc
xor
add
dec
movsb
adc
xchg
popf
cltd
dec
or
cltd
pop
xor
pop
lcall
arpl
sbb
ljmp
adc
sbb
sub
rep
stos
jle
pop
outsb
fildll
ja
or
jns
bound
setp
iret
enter
inc
call
movsb
adc
pop
xlat
pop
or
ret
inc
popf
sahf
xchg
and
adc
and
insl
sub
xor
add
xchg
ret
xlat
xacquire
adc
inc
js
fildl
adc
loop
clc
ljmp
and
xor
cld
pop
ret
bound
in
outsb
pop
jg
sub
lcall
jns
das
leave
mov
addr16
adc
cmp
adc
cmp
std
fisubl
push
mov
cmp
pop
cmp
mov
or
subl
pop
xchg
mov
jbe
outsb
ss
push
mov
inc
cmpsb
and
insb
inc
mov
cmp
mov
inc
aam
jb
loopne
stos
rcl
ja
test
mov
dec
insl
lret
mov
test
sbb
into
fildll
xor
inc
push
leave
adc
fisubrs
rorl
cmp
mul
adc
dec
insb
and
movl
mov
xor
repnz
inc
jo
xorb
mov
fstpt
mov
dec
push
cwtl
pop
in
nop
jb
mov
push
into
or
in
pop
call
rcrb
aad
pusha
jp
lret
fdivl
dec
sub
aad
add
sub
adc
sarl
jo
or
inc
das
cmc
stos
pop
bound
pop
mov
push
scas
jmp
inc
mov
cmc
mov
addr16
mov
loope
add
jne
sub
push
test
out
out
and
jg
outsb
cmp
and
xor
mov
cmpb
mov
mov
mov
int3
sbb
jae
daa
mov
adc
cmp
ljmp
dec
jne
and
sar
test
adc
inc
dec
dec
in
repz
sbb
je
mov
negl
loop
xchg
mov
sbb
push
das
arpl
shrl
mov
lret
mov
and
pop
cmpsl
mov
pop
mov
add
pop
lock
pop
fidivrl
cmpsb
xor
outsb
popl
int3
out
inc
inc
lcall
mov
stc
ds
jne
pop
mov
or
adc
cltd
sbb
push
ficomps
xchg
xor
outsl
dec
fisubs
leave
ss
dec
cmovns
dec
xchg
sub
out
aad
cmpb
cli
add
das
jno
push
in
mov
jle
inc
lock
xor
adc
sub
imul
inc
mov
mov
xchg
imul
inc
sub
mov
inc
inc
sti
sbb
out
mov
rclb
mov
sbbb
lcall
test
xchg
roll
aas
xor
sub
ret
sbb
sbb
sub
xchg
mov
jg
and
fs
adc
mov
cmp
pop
lret
aad
jbe
or
fisubrl
sub
xor
xchg
mov
mov
or
xchg
cltd
dec
jle
rorl
mov
cmp
mov
mov
mov
mov
ljmp
dec
shlb
pushf
jbe
movsb
pusha
push
cltd
and
jno
pusha
lods
es
lahf
push
popf
push
stos
lahf
sahf
mov
and
jb
scas
out
xchg
xor
push
mov
cld
in
xchg
inc
repz
dec
jne
fsubp
test
xchg
out
push
nop
addl
icebp
dec
adcl
mov
pop
lock
pop
xor
inc
out
ja
push
insb
adc
das
jns
out
push
adc
lret
fcoms
cmp
jae
jl
mov
mov
jno
pop
jbe
movsl
jle
js
sbb
cmpsl
jle
pop
pop
inc
mov
inc
mov
pop
pop
faddl
addr16
push
test
fisttpll
sbb
sbb
enter
outsb
das
adc
ret
jb
adc
push
mov
ret
loopne
mov
insb
cld
out
add
stos
dec
mov
or
inc
add
push
dec
mov
push
ffree
fdivs
lods
test
dec
cld
push
sub
inc
jg
jle
add
cmc
loop
mov
xorl
jnp
int3
push
mov
in
lcall
pop
jmp
lret
fnstcw
xchg
jg
aaa
adc
push
incb
ds
shrb
pop
in
aaa
vxorpd
je
test
fbld
popf
and
daa
mov
scas
outsl
cmp
xchg
jno
jns
mov
adc
cs
cmpsb
push
sbb
mov
sbb
enter
mov
ja
lea
in
mov
push
mov
inc
pop
cmp
int
std
sbb
shr
xlat
ljmp
pop
push
cs
dec
adc
mulb
iret
fucomip
aas
data16
rol
lds
cmp
add
add
insb
mov
dec
vcomisd
int
inc
jle
ja
mov
jae
hlt
jbe
xchg
or
fcompl
testb
pop
cltd
cmp
aad
push
ds
movsl
aaa
leave
pop
xor
imul
or
add
mov
decl
out
or
mov
cmp
push
jecxz
sti
mov
into
loopne
aaa
popa
and
nop
test
adc
cwtl
xor
cmp
cmp
ret
insl
pop
lods
and
sbbl
cmp
xor
sahf
sbb
out
in
fwait
mov
inc
in
or
or
incl
pushf
in
inc
fs
aaa
or
fsubr
rcr
jle
and
cmc
inc
or
mulb
jo
ljmp
sub
in
mov
lods
jns
cmp
sub
stc
push
aam
insb
cmp
xor
lret
leave
aas
jno
inc
mov
lock
xchg
mov
mov
nop
add
cmpsb
js
fsts
mov
jns
pusha
jmp
shr
pop
pop
fsub
div
xor
andl
push
rcrb
outsl
pop
xor
mov
lds
sbb
cmpb
andb
cmp
shlb
stos
adc
int3
sbb
hlt
fcmovnu
iret
scas
fistps
shlb
nop
add
mov
add
adc
mov
lea
gs
push
lds
nop
repz
dec
clc
lret
sbb
into
xchg
cmpb
adc
sbb
jg
dec
inc
mov
aam
mov
and
mov
dec
das
lea
pop
dec
mov
sahf
hlt
jbe
mov
xchg
mov
xchg
clc
cmp
add
cmp
and
cltd
popa
cmpb
aas
bound
insb
jl
jmp
xchg
movsl
xchg
daa
push
push
xor
sbb
cmp
and
out
pop
nop
scas
push
xor
mov
movsl
clc
lret
shll
pop
jmp
mov
dec
icebp
and
andb
pusha
loope
in
cld
and
cltd
jne
push
mov
les
in
inc
loop
add
xlat
cmp
adc
repnz
push
lcall
test
rcrb
stos
or
ret
popf
sti
pop
lret
sti
mov
loope
jl
cli
xchg
cmp
push
xor
repnz
inc
pusha
sbb
pop
ljmp
push
gs
das
adc
xchg
xlat
pusha
mov
xor
out
mov
pop
mov
or
cmp
lock
xorb
addr16
popf
nop
mov
rcrl
sub
cmp
lcall
ds
pushf
jg
mov
insl
xor
imul
je
mov
xchg
sahf
fisubs
add
lret
jle
stos
xchg
int3
push
fnop
stos
data16
ss
push
jp
dec
jmp
pop
lods
movsl
imul
loopne
stos
lods
add
enter
addr16
inc
or
mov
adc
dec
clc
and
mov
jmp
les
or
mov
in
inc
jecxz
adc
pushw
aaa
data16
mov
sbb
add
test
or
cld
push
into
ficoml
int
adc
mov
dec
mov
cmpl
lret
icebp
cltd
lea
insl
shll
dec
push
mov
mov
sbb
enter
cmpsl
out
adc
xchg
lret
push
mov
or
outsl
inc
mov
in
cmp
loopne
ret
sub
daa
dec
aas
fists
int
push
ffree
xorb
dec
aaa
cmpsb
or
mov
daa
mov
call
pop
aam
aaa
aam
cwtl
in
fsubrl
pop
xchg
lret
jmp
aad
sahf
rorl
mov
xchg
fiadds
cmp
mov
out
cmp
jecxz
lahf
xor
in
shll
dec
jno
mov
gs
loope
in
sbb
insb
and
ret
sarb
imul
inc
out
test
mov
add
push
pop
mov
xchg
ljmp
out
or
and
stos
inc
rorl
xchg
lods
out
test
imull
pop
mov
rolb
xchg
cld
js
rcrl
cmp
cmpb
add
dec
jmp
jg
rorb
and
in
lds
sbb
dec
adc
inc
push
inc
inc
xchg
mov
pop
mov
push
jnp
xor
mov
xlat
js
mov
jl
jge
arpl
dec
dec
ljmp
sbb
in
cvttps2pi
data16
ss
push
dec
das
mov
pop
pushf
xor
sub
pushf
clc
mov
pushf
js
stos
push
mov
push
add
and
jno
repnz
or
icebp
ds
xchg
jle
mov
sbb
sbb
push
mov
mov
test
add
xchg
or
pop
push
sarb
dec
ret
call
or
inc
insl
call
mov
jmp
dec
cs
cmp
add
scas
inc
jl
dec
sbb
pop
mov
pop
push
inc
xchg
test
lret
jo
rorb
in
mov
insl
sub
aad
cmpsl
push
dec
pop
add
jp
add
jne
repz
inc
sub
and
notb
and
push
enter
pop
fistl
cwtl
fdiv
fs
dec
inc
stos
hlt
pop
cmp
cmp
inc
jle
dec
ds
push
xor
and
mov
mov
fmuls
sbb
and
inc
xchg
pop
shlb
or
test
adc
jge
pop
lcall
ffreep
inc
fisubl
dec
mov
pop
jg
imul
cmpb
mov
ljmp
sub
adc
jns
leave
movsb
add
mov
pop
aam
gs
loop
fistps
dec
in
ljmp
lahf
insb
xchg
imul
lock
jns
push
or
and
sbb
popa
xor
stc
inc
push
and
mov
popa
mov
into
xchg
adc
mov
cmp
xchg
mov
shll
rcrb
adc
xchg
fs
dec
fbstp
insl
stos
mov
pop
test
incb
or
cs
addr16
and
pop
xor
mov
mov
out
xchg
jle
psubb
cmp
and
and
add
shrb
jl
fnstenv
pop
pop
ret
pop
out
xor
repz
popf
les
xlat
sti
adc
pop
call
cmp
ret
mov
ret
paddsw
jge
mov
push
in
fdivs
mov
dec
push
lods
out
mov
arpl
cmp
adc
int
dec
adc
mov
push
orb
fiadds
push
or
sub
sub
insb
insl
clc
or
add
ret
add
pushf
fwait
repnz
mov
pop
xor
xor
dec
push
or
test
out
xor
jnp
in
pop
loope
cmc
imul
pop
sub
sbb
xchg
mov
pusha
mov
loope
inc
aaa
push
sub
repnz
xchg
out
insl
je
fidivrs
ja
loop
jecxz
mov
jo
jae
sub
sbb
je
push
jl
inc
xor
push
adc
cmpsl
rcrl
int3
sarl
or
dec
sbb
xor
mov
das
mov
in
or
cwtl
outsl
nop
inc
mov
xor
jnp
add
xor
or
mov
xlat
mov
leave
loope
and
pop
xor
add
loopne
fwait
lock
push
in
dec
sub
lock
mulb
std
stc
lret
out
movsb
int3
ret
popl
push
sbb
and
fbld
sbb
xor
fdivrp
mov
sbb
sahf
adc
jmp
dec
cmpsb
mov
mov
xor
mov
shl
lds
and
std
je
stos
pop
test
mov
call
in
in
xchg
scas
rcrb
adc
push
xchg
or
mov
out
cli
fidivl
addr16
sarb
bswap
fsubrs
pop
fwait
xchg
jo
sarl
mov
push
mov
xor
or
ret
pop
adc
dec
mov
mov
rorl
test
repz
sarl
xor
inc
imul
bound
sbb
stc
sbb
andb
fsub
out
pop
pop
imul
mulb
xchg
stos
outsl
dec
jecxz
adc
adc
nop
sub
pop
lahf
mov
fadds
aaa
lea
pop
lret
cld
xchg
mov
cmp
sbb
xchg
das
movsb
in
imul
xlat
sti
xorb
stc
fxch
dec
inc
sti
lret
pop
mov
pusha
pop
mov
shl
pop
gs
jmp
stos
arpl
mov
and
into
adc
add
stos
xchg
sub
nop
ds
out
dec
loopne
cli
push
in
mov
add
mov
lds
pop
mov
xchg
out
cmp
lods
sbbb
push
sahf
enter
pop
aas
cltd
clc
or
rclb
mov
adc
pop
ljmp
out
sub
sbb
stos
mov
lds
cmpsl
jmp
and
insb
mov
sti
or
mov
hlt
fs
dec
jmp
add
xchg
pop
or
mov
mov
sbb
push
mov
sbb
mov
adc
sub
jl
fwait
shrl
jp
ljmp
inc
lods
out
pushf
inc
test
into
mov
shl
mov
in
stos
insl
jae
dec
xchg
push
pop
test
mov
imul
je
js
push
scas
mov
insl
cmp
stos
fs
lods
test
mov
add
cs
and
cmp
dec
sub
sbb
fnstenv
push
std
jb
push
xchg
hlt
push
in
outsl
shll
cmpsb
aaa
in
mov
xor
push
cli
into
scas
or
lods
sub
inc
dec
cmpsb
daa
or
mov
mov
sbb
xor
inc
shl
bound
jg
sub
movsl
fstl
and
pop
xchg
mov
mov
out
sbb
scas
into
fstpl
mov
mov
cltd
mov
aas
or
xor
push
dec
jno
fwait
lods
jmp
add
fnsave
cmp
xchg
adc
aaa
jp
fmull
jp
dec
push
sbb
mov
out
popa
and
mov
adc
xor
jmp
and
xor
inc
daa
in
xor
jmp
loope
repnz
out
ljmp
cwtl
add
xor
jnp
cmpsl
daa
inc
jecxz
add
sub
mov
or
cli
fisttpll
mov
rolb
aad
lods
into
lds
inc
cltd
fld1
adc
pop
add
sbb
sbb
loopne
divl
sarl
push
mov
aas
and
dec
lds
or
dec
shl
pop
and
add
xchg
orl
aam
push
xchg
xor
movsl
outsb
mov
xchg
sbb
lret
out
pusha
adcb
adc
outsl
mov
das
mov
sbb
nop
sub
and
js
jnp
cli
mov
mov
or
and
jo
dec
sbb
decb
jb
jns
fnsave
mov
mov
leave
sbb
pusha
and
add
dec
loop
pop
int3
mov
push
scas
lock
stc
cmp
mov
and
mov
stc
mov
and
outsl
fsubrs
xor
and
pop
inc
or
cmp
push
jg
cmc
sbb
mov
clc
xchg
insl
or
lret
inc
mov
les
adc
mov
dec
sbb
cmp
cmp
sti
fwait
cmp
ret
add
mov
lds
sub
xchg
mov
dec
mov
das
add
ret
out
stos
hlt
mov
int3
dec
test
jecxz
rcll
ja
sub
mov
inc
fstl
add
fildll
jns
aaa
sub
fwait
mov
orl
addr16
into
sub
xchg
jge
stos
call
push
adc
mov
test
addl
stos
in
fisubrl
mov
push
push
or
dec
sub
push
in
xchg
jne
mov
mov
orl
add
lock
jl
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
add
sahf
cmp
jns
cmp
outsb
jge
lea
inc
insb
sub
cld
pop
movsb
in
popa
dec
push
add
lcall
xchg
daa
jp
and
and
pushf
sbb
jecxz
inc
pusha
out
jp
cltd
push
lahf
call
mov
dec
dec
cwtl
sbb
repnz
out
and
outsb
mov
mov
jecxz
cmp
clc
addr16
push
mov
cmc
jnp
jb
int3
clc
stc
add
scas
pop
cmp
sub
dec
add
daa
fistps
mov
mov
inc
adc
aas
xchg
pop
mov
fs
and
repz
ds
pop
add
loop
sbb
mov
and
out
jmp
inc
mov
mov
mov
add
and
jbe
cmp
fimuls
into
rclb
hlt
out
lcall
jae
data16
leave
into
adc
sbb
jmp
rol
jl
mov
nop
jge
pop
nop
paddq
dec
jns
test
mov
fisubs
sub
or
adcb
movsl
aaa
lret
jae
jp
fs
and
insl
cmp
adcb
sub
out
pusha
mov
outsl
rolb
lcall
fnsave
cmp
packuswb
push
pop
dec
or
mov
jmp
and
xor
ds
shlb
cs
xchg
sub
dec
or
stc
sub
int3
lahf
or
or
adc
add
nop
popf
sbb
icebp
push
mov
cmpsb
rcll
cmp
cmp
pusha
pop
push
in
push
mov
jnp
pop
mov
pop
adc
pop
sub
mov
into
pop
pop
repnz
sub
insb
fmuls
movsl
addb
iret
cmc
cmpb
inc
pop
movsl
mov
lea
mov
jl
xchg
push
addb
xchg
outsl
mov
mov
cmp
in
cli
fsubr
bound
cmp
nop
negb
or
sbb
mov
dec
testl
movsb
clc
jle
push
mov
xlat
inc
or
das
sbbl
adc
lret
xor
popf
ja
and
sbb
sub
xlat
push
mov
stos
mov
into
test
arpl
stc
fmuls
movswl
add
les
loopne
mov
lret
jbe
mov
jnp
sahf
cmpsb
and
loopne
mov
sti
xchg
dec
es
aas
test
dec
sbb
xor
and
dec
push
lret
xlat
jo
mov
lahf
sti
cwtl
test
pop
adc
shlb
xchg
or
aaa
dec
jecxz
into
aaa
jg
mov
push
cwtl
outsb
pop
jnp
lods
or
mov
fwait
mov
mov
mov
lods
daa
testl
dec
ds
dec
pop
xor
ss
or
add
outsl
pushw
cmp
and
lock
fidivrl
pop
ret
stos
pop
ljmp
xchg
fdivrs
ss
cmp
out
and
push
in
push
push
pop
xchg
jns
or
outsb
jmp
add
shr
adc
sbb
and
push
cld
pop
add
cltd
out
or
decl
mov
insl
adc
push
mov
pop
pop
out
out
cltd
jmp
push
xchg
cmp
pop
leave
loope
pop
iret
mov
mov
loop
pop
cmp
jg
xchg
pushf
xor
in
dec
add
rol
sbb
out
lahf
dec
cmp
mov
and
cmp
sub
push
incb
sub
orb
shr
pusha
popa
sub
pushf
sbb
je
add
push
mov
cmpsl
imul
jmp
jle
insb
push
cmp
cmpb
sbb
movsl
push
pop
fbstp
daa
mov
divb
lea
js
or
fnstsw
and
out
push
fsubrl
and
ds
mov
mov
mov
loop
cwtl
jnp
push
add
push
lds
int
ja
sub
jb
push
lret
mov
mov
arpl
jns
test
int
xor
sarl
in
into
aas
sub
cmp
sbb
mov
xchg
mov
iret
mov
mov
in
xor
fucomp
aaa
mov
xchg
dec
das
ljmp
shrl
shr
fmuls
out
fisubl
and
xchg
sahf
addb
pop
push
add
loop
loope
imul
push
push
push
aam
shl
popf
mov
out
pmullw
sbb
adc
sbb
xrelease
adc
insb
sub
movsb
push
pop
mov
loopne
ret
jge
and
je
and
divb
xlat
mov
and
mov
lcall
adc
mov
pusha
in
popa
cmc
add
mov
out
jp
pop
out
insb
out
inc
xor
add
outsl
daa
mov
int
mov
mov
jns
adc
movsb
stos
lods
cmpl
jle
das
xchg
xchg
inc
outsl
push
add
orl
repz
shrl
ja
mov
adc
jmp
pop
hlt
lcall
mov
ss
addr16
jl
outsb
or
mov
jns
xchg
andl
loopne
mov
cli
testb
pop
push
sahf
test
movsl
mov
ror
movb
leave
repz
mov
imul
mov
jge
add
dec
rcr
push
sbb
cmp
jg
ficomps
jge
fwait
push
inc
inc
mov
adc
dec
or
movsb
sub
push
cmp
lret
xchg
scas
movsl
insl
clc
sub
cmp
sahf
pop
push
rorb
adc
cld
cmp
pmaddwd
jo
adcl
jae
or
xor
mov
inc
mov
mov
mov
or
call
lcall
mov
pop
jecxz
jp
pop
adc
dec
hlt
dec
addl
jnp
sbb
adc
push
dec
aas
inc
pop
loopne
shlb
add
push
or
sub
test
mov
insb
dec
inc
dec
xchg
repnz
sub
es
jns
xchg
popa
jno
xor
push
inc
ret
int
out
or
loopne
cltd
fisttpll
sub
scas
and
int
or
pushf
cmp
or
dec
jo
mov
inc
sarl
jecxz
inc
mov
mov
loopne
pop
and
adcb
jo
push
mov
mov
or
adc
fcmovnbe
jne
jne
loopne
xor
jp
ds
mov
and
dec
sbb
out
jne
inc
popa
arpl
pop
js
mov
cmp
idivb
push
mov
testb
mov
push
push
sbb
orb
sbb
mov
sbb
inc
not
icebp
cmpsb
cmp
test
mov
jns
adc
out
push
stc
xchg
ret
inc
nop
jae
mov
mov
mov
subl
mov
popa
mov
xchg
icebp
outsl
sbb
mov
aas
hlt
stos
push
cmp
mov
pop
adc
and
outsb
in
hlt
in
dec
dec
mov
inc
pop
mov
xor
mov
enter
jecxz
jle
aam
mov
xor
xor
and
pop
pushf
in
das
fwait
movsb
fimuls
lcall
push
pop
push
sub
add
testl
test
adc
sti
aas
stc
push
repz
add
xchg
or
jmp
pop
adc
sbb
or
pop
arpl
push
arpl
shl
push
pop
xor
jno
fists
stc
xchg
xchg
mov
mov
sub
scas
movsb
inc
dec
adc
xor
daa
mov
jns
mov
add
jp
inc
stos
xchg
aaa
shrb
push
pushf
push
mov
pop
sub
clc
fists
jo
xchg
dec
int
ja
pop
mov
inc
notb
add
cmp
pop
pushf
or
jno
aaa
xlat
cmp
jb
enter
add
cmp
xchg
pop
mov
jmp
ret
jno
loope
lds
adc
adc
rcrl
push
jge
into
xor
outsl
push
loop
sbb
xabort
push
adc
mov
cmp
dec
repz
fistl
stos
push
js
sbb
leave
jecxz
fwait
jecxz
nop
jo
sti
in
push
add
cmpsl
push
sti
mov
repnz
inc
add
ret
add
lahf
mov
pop
mul
jmp
in
idiv
jae
ljmp
out
in
lock
pop
lret
stos
xchg
jae
icebp
or
ficomps
fnstsw
mov
out
add
pop
jg
jg
cmp
xor
cmp
cwtl
mov
shll
test
scas
out
push
inc
stos
jb
jo
sub
call
xchg
mov
pop
mov
mov
and
xchg
adc
sbb
iret
ss
push
shl
adc
jmp
bound
pusha
ret
inc
sbb
es
rcr
cmp
mov
push
push
test
fbld
shrl
js
test
fistpl
sub
pushf
ret
ror
mov
jbe
test
bound
jb
xlat
pop
and
xchg
sahf
fildll
es
push
inc
movsl
xor
adc
in
sbb
mov
outsl
stc
int3
lahf
addr16
fmuls
push
xchg
adc
out
or
pop
inc
jbe
roll
inc
push
rcrl
cmp
pop
pop
movsb
outsl
cmp
cld
push
jmp
sbb
cpuid
cmp
cmp
xchg
stc
or
mov
out
fs
mov
push
dec
sbb
mov
insb
jbe
inc
enter
stc
inc
out
mov
cmpsb
mov
jnp
push
adc
push
scas
mov
xor
xor
data16
adc
or
notl
or
mov
push
std
inc
lods
fs
or
sahf
nop
or
shlb
test
jo
jg
es
rcl
aas
push
push
jg
mov
adc
cmp
fwait
inc
sub
mov
push
cmp
mov
cmp
pop
cmp
test
sub
or
psubusw
in
mov
stos
adc
fldt
ds
mov
aas
cmp
push
and
shrl
es
jnp
add
daa
pop
fidivl
mov
pusha
mov
or
push
xchg
push
fwait
and
mov
mov
inc
inc
inc
lods
movsb
xchg
lds
lock
outsb
mov
mov
lahf
push
dec
mov
fnstenv
inc
add
dec
sbb
sbbb
inc
xchg
cld
lods
jl
aaa
and
movsl
cltd
test
inc
mov
pop
mov
fxch
in
lds
xchg
out
shl
lret
xchg
ret
push
sbb
out
sti
and
or
push
jb
jnp
mov
xor
push
jmp
and
push
and
lods
add
mov
push
and
lret
mov
xor
xchg
sbb
std
inc
cmp
mov
fwait
mov
pop
nop
push
stos
addr16
je
xchg
cmp
xchg
adc
and
xor
repz
jb,pn
push
pusha
and
jmp
mov
jnp
add
imul
push
push
sbb
stos
imul
int3
jbe
ret
push
shrb
or
dec
mov
adcl
movsb
lahf
xchg
dec
cmpsl
mov
lret
cs
mov
jle
enter
adc
or
stos
dec
and
push
jb
dec
sub
xchg
insl
jne
adc
imul
push
add
fnstsw
adc
sub
adc
push
mov
mov
and
sub
icebp
and
call
xor
sbb
jmp
cmpb
xchg
or
mov
lcall
cli
adc
push
adc
sub
mov
mov
jecxz
aaa
cmp
mov
lcall
mov
cmp
adc
mov
mov
notl
mov
ss
or
push
add
cmp
pop
mov
dec
mov
fistl
adc
mov
add
movsl
cmp
push
sub
add
dec
xchg
gs
mov
enter
imul
orb
dec
adc
rcrb
lods
test
hlt
xchg
mov
lahf
movsb
or
fldt
cwtl
stc
push
gs
cmp
pop
inc
mov
push
dec
shl
and
jae
aas
xchg
cs
call
and
mov
addr16
jbe
add
aas
das
jne
sbb
jp
sti
scas
mov
mov
lods
jecxz
das
mov
mov
movsb
dec
fstpl
mov
into
mov
jl
daa
movsb
cmp
jge
sub
and
adc
or
pop
sub
push
mov
outsl
jmp
jb
xchg
pop
jp
dec
ficoms
xor
cmpsl
mov
insb
add
xchg
and
aam
aaa
jmp
dec
cmp
and
aad
pusha
push
ja
ret
adc
adc
jb
outsl
pop
hlt
jno
pusha
popa
stc
in
mov
cs
shl
in
and
stc
mov
ds
xchg
clc
and
mov
imul
or
lret
mov
test
cmp
ss
aam
mov
jns
mov
cmc
xchg
adc
jg
inc
es
xor
ficoms
dec
push
or
aas
bndldx
ss
loope
out
push
out
dec
mov
outsb
pop
add
shll
mov
mov
or
xchg
add
pop
in
mov
outsl
and
mov
shl
stos
stos
dec
jae
push
mov
adc
in
xchg
jg
or
sbb
addr16
jnp
push
cmp
shlb
fiadds
jmp
je
inc
call
or
jo
rclb
add
sar
mov
mov
inc
cmpl
xorb
push
or
pop
push
je
scas
rorb
imul
pop
imul
sbb
mov
xchg
push
repnz
push
pop
imul
es
xchg
lahf
pop
push
loop
aad
cmc
mov
popa
cmp
push
jnp
inc
mov
rcrb
test
mov
and
pop
jl
add
jmp
dec
js
xchg
aam
gs
mov
outsl
shlb
mov
test
popa
fildl
roll
cwtl
cmpsl
xor
int3
pop
xor
shrb
push
inc
into
and
or
rolb
xchg
arpl
jb
insl
enter
lea
dec
sbb
sub
cld
adc
mov
jmp
mov
inc
inc
pushf
xchg
mov
sub
inc
cwtl
sub
stos
add
xor
adc
push
mov
push
or
fwait
mov
cmpsb
mov
test
mov
in
jecxz
jae
and
jmp
mov
mov
or
sbbb
add
adc
jbe
add
mov
leave
sub
or
xor
sbb
xor
xchg
push
pusha
rol
sbb
mov
fs
mov
int3
xor
mov
into
push
pop
cmc
xor
xor
arpl
pusha
into
pop
ja
or
lret
fisttpl
xlat
rcr
test
xlat
leave
ljmp
std
and
pop
cmp
les
cmpsb
pop
jns
jp
pusha
sbb
into
sbb
or
jae
fwait
xchg
cmp
cmp
ret
adc
movsb
or
mov
xchg
divb
outsl
pop
add
inc
psllw
ljmp
push
pop
and
pop
push
shll
cmpsb
les
popf
cltd
mov
mov
clc
mov
xor
sbb
xchg
add
xlat
pushf
fs
insl
pop
shlb
add
pop
sub
lcall
fxch
pop
jmp
repnz
int3
insb
js
mov
jmp
push
sbbb
or
lret
mov
popf
lcall
mov
mov
lods
or
mov
jae
sti
testb
mov
add
jmp
xlat
dec
stos
xor
out
jnp
int
push
movsb
fstps
lahf
scas
or
cmp
int3
jbe
shlb
mov
cwtl
neg
pop
mov
rorb
es
outsl
insb
loop
xor
push
push
xchg
add
mov
rolb
jno
dec
or
rorl
rcll
fldenv
fidivs
cli
repnz
stos
imul
mov
push
movl
roll
mov
ret
dec
xor
fdivl
test
ja
icebp
loop
pusha
push
fldl
jo
push
adc
dec
fwait
outsl
cmp
imul
dec
dec
pop
push
mov
mov
adc
negl
inc
stc
sub
push
pusha
pop
add
cwtl
push
push
test
pop
sbb
push
or
mov
pushf
mov
sub
scas
jmp
aam
pusha
pushf
cli
aas
test
mov
mov
bound
scas
cmp
and
adc
lock
test
enter
adc
mov
iret
sbbl
ja
arpl
fs
pop
test
dec
je
xchg
fstpt
sbb
jmp
ljmp
push
shr
loopne
mov
pop
outsb
pop
call
push
in
add
push
push
es
stos
mov
nop
sub
data16
adc
sahf
add
dec
and
mov
out
or
xchg
sub
cmp
rclb
add
cmp
xchg
jno
ret
inc
shll
test
jnp
push
push
xor
xor
push
adc
push
push
mov
das
data16
mov
dec
cwtl
into
incb
mov
test
mov
cli
stos
push
movsb
outsl
notl
inc
jbe
rcll
and
testl
adc
ds
les
outsl
mov
and
aaa
stc
inc
call
cmpsb
push
inc
jns
mov
out
adc
insb
pop
xchg
imul
movups
in
or
push
mov
cmp
xor
jns
mov
jg
dec
stos
fldl
cmp
fbstp
enter
sbb
lock
aaa
xorl
or
cwtl
out
mov
jnp
shll
movsb
pushf
and
sti
sbb
mov
xchg
inc
das
xchg
rcll
jnp
in
outsl
sub
xchg
inc
lret
xchg
xor
mov
add
or
add
add
sbb
cmpsl
repnz
mov
cmp
in
call
xor
mov
js
inc
push
insl
or
mov
sub
push
ljmp
in
and
inc
dec
cmp
lea
int
aas
mov
pop
les
xchg
bound
call
arpl
xchg
aas
mov
jno
clc
stc
mov
jle
lds
fisubrl
movsl
xor
dec
xor
ret
mov
test
iret
inc
adc
shlb
movsb
inc
jo
inc
inc
out
fnstcw
jne
cmp
lods
push
lds
test
lock
dec
mov
bound
in
sbb
loopne
fmull
or
insb
aad
jl
iret
add
mov
fidivl
xor
shlb
fcoms
sbb
jne
mov
insb
fs
bound
out
nop
mov
cmp
ss
xchg
cli
sub
jb
ret
ss
shl
pop
mov
lcall
aas
sbb
in
sar
enter
cmc
clc
push
les
icebp
mov
cmp
std
and
insl
and
ret
aas
pushf
push
push
js
scas
mov
inc
call
and
sbb
xchg
dec
dec
pop
mov
divl
popf
inc
sbb
mov
jle
cmp
int3
inc
push
addb
adc
fsubl
leave
bound
mov
xchg
mov
jp
testl
aaa
lds
jge
dec
arpl
push
in
push
pop
sbb
mov
cmp
xchg
bound
out
pop
mov
int
add
xchg
lea
mov
xor
inc
jge
sub
clc
cmp
mov
int
jo
inc
sub
adc
test
xchg
dec
and
call
rcrl
push
addr16
fiadds
jbe
rcrb
xchg
xor
push
js
sbb
push
es
and
cmpsb
in
aas
adc
cmpsb
das
out
xor
adc
cld
jo
shl
arpl
outsl
jl
add
mov
sub
inc
cmp
jge
mov
insb
jp
pop
xor
std
cs
scas
jecxz
add
lret
sub
sbb
sarb
push
mov
and
cmp
pop
sub
jae
or
test
push
pop
js
cmp
insb
call
scas
das
cmp
dec
jbe
nop
inc
addr16
aad
push
add
fwait
dec
scas
inc
xchg
mov
xchg
imul
in
cmp
mov
jnp
pop
cld
fisubrl
pop
and
rorl
test
test
daa
aaa
dec
mov
call
push
sbb
mov
test
xor
sub
lds
rclb
mov
jle
sbb
push
rorl
popa
push
nop
jbe
adc
repz
add
or
or
xchg
sti
mov
mov
orb
mov
dec
add
cmp
lods
aas
add
add
in
pop
into
sbb
add
and
push
xor
cmpsb
jmp
aaa
mov
add
testb
sahf
sbb
data16
lock
mov
cmpsl
jns
sub
mov
pop
or
dec
test
dec
fadds
daa
popa
cld
bound
sbb
jb
fdivp
insb
xlat
pop
mov
fwait
inc
sub
mov
mov
icebp
mov
pop
sbb
or
cmp
xchg
or
shr
lds
inc
xor
std
cmp
lcall
adc
and
sub
or
std
pop
ljmp
push
faddp
jns
sbb
pop
pop
stc
fisubrs
or
mov
jne
mov
inc
aam
or
sub
mov
add
lahf
xchg
sbb
jne
bound
xchg
in
pop
ja
cmp
int
loopne
and
cltd
test
mov
or
test
sbb
in
xor
sahf
or
push
xchg
sub
mov
popf
stos
daa
jge
push
push
and
mov
ret
rolb
test
sub
or
sahf
imul
in
out
dec
mov
popf
jecxz
mov
adc
jnp
mov
adc
lds
xchg
jb
xorl
sbb
subl
inc
les
dec
jo
ljmp
or
sub
xor
sahf
mov
sbb
mov
push
shll
pop
shrl
in
jne
mov
lahf
mov
mov
and
mov
stos
loope
pop
inc
xchg
pop
leave
adc
outsb
stc
push
mov
dec
or
jae
xchg
outsb
inc
push
inc
add
xor
cmp
daa
sub
push
mov
pop
addr16
enter
cmpsl
loop
and
jmp
jb
mov
mov
add
frstor
pop
dec
test
sub
mov
or
dec
dec
stos
jecxz
inc
mov
and
adc
jg
adc
movsl
fisttpll
movsl
outsb
popa
frstor
xor
leave
push
sbb
mov
add
dec
rorb
sub
into
mov
push
jl
hlt
jle
stc
adc
in
jecxz
mov
pop
test
cmp
sub
imul
sbb
arpl
enter
sub
or
push
mov
pop
popf
xchg
pop
cmpb
out
cmp
ds
cmc
inc
mov
mov
cmp
movsb
xchg
push
fnstenv
pop
push
pcmpgtw
mov
mov
mov
cli
outsb
test
dec
popa
dec
cs
sahf
sbb
test
dec
sbb
insb
fdivp
leave
stos
fcmovnb
pop
sub
or
lret
dec
cs
ljmp
stc
inc
mov
je
into
mov
les
pusha
cld
inc
and
and
cmpsl
mov
adc
mov
cli
mov
push
arpl
jne
adc
jns
lret
jns
mov
adc
xchg
cli
push
or
pop
sub
push
mov
cltd
lcall
stc
or
jecxz
pop
xor
dec
repnz
in
aas
int3
mov
cli
test
sbb
lret
mov
sub
popa
mov
jge
push
mov
and
jl
inc
push
jl
jp
mov
sarb
in
iret
imul
ret
pop
mov
sar
out
jge
ret
adc
data16
pusha
mov
fcompl
int
and
pop
dec
int3
loop
repnz
clc
add
pushl
sbb
cmpsb
andb
enter
repnz
leave
inc
and
sub
inc
push
dec
push
aad
mov
push
cmpsl
add
hlt
dec
out
xor
pop
fisttpl
test
lods
sbb
push
ret
xor
movsb
dec
push
cmp
mov
in
jbe
xchg
insl
xchg
int
push
int
add
xchg
test
jle
pop
push
sti
or
mov
repnz
pop
pop
push
flds
sbb
ja
mov
jo
imul
insl
subl
test
lods
imul
lret
mov
mov
sub
or
js
cmp
cmp
call
std
popf
fisttpll
sub
shrb
xlat
push
mov
lahf
scas
cmpsl
arpl
xchg
add
mov
mov
mov
mov
xchg
adc
adc
xor
sub
repz
inc
inc
repnz
jne
push
stc
and
mov
fldt
jg
pop
mov
data16
mov
test
bnd
adc
iret
cld
xchg
jecxz
movsl
xchg
cmp
xchg
fs
pop
mov
xor
hlt
add
adc
ret
imul
orl
fwait
lock
add
xchg
dec
es
enter
add
loope
call
sub
sub
rcrb
and
shl
in
and
rorb
test
cmp
nop
push
xor
addl
in
xchg
push
pop
ds
mov
or
inc
out
sbb
cmp
in
push
dec
fsubl
jg
cld
push
es
push
mov
jl
inc
adc
mov
pop
jecxz
inc
aad
iret
fimull
repz
mov
insl
pop
cld
mov
inc
jmp
or
and
jmp
sbb
int3
cli
jb
loop
jno
cltd
mov
cmp
push
xchg
clc
lahf
bound
xorl
inc
pop
stos
pusha
insl
rolb
dec
lds
dec
in
sub
sbb
loop
jl
sti
pusha
je
cwtl
fistpl
and
leave
or
dec
lods
jecxz
sub
mov
movsl
pop
jge
icebp
xor
inc
stos
dec
xchg
cmovnp
popa
aas
xchg
imul
dec
fcomi
fimull
push
push
and
mov
push
std
fs
in
cmp
ret
push
push
jmp
cs
aad
mov
out
inc
sahf
sbb
repnz
add
xor
inc
ret
cmp
sbb
fisttps
cmp
mov
sahf
ljmp
xchg
xlat
loope
lret
arpl
out
inc
sub
std
adc
sbbb
popf
push
shrd
xor
add
adc
dec
sub
jb
cmp
sbb
push
aam
pop
orl
pop
mov
jp
das
mov
add
ret
mov
in
or
bnd
pop
arpl
popf
push
clc
jbe
sarb
in
push
jecxz
hlt
rcll
push
lds
jp
add
sahf
inc
enter
xchg
in
xchg
mov
xor
xor
xchg
and
adc
xor
inc
lods
xchg
inc
das
test
sbb
xchg
decb
xchg
mov
mov
std
push
sub
ret
inc
jg
pop
mov
cld
fbld
jnp
js
clc
cwtl
imul
cli
xor
test
push
mov
and
pop
outsb
repnz
gs
ja
fcompl
gs
lds
int
mov
cli
arpl
pop
lds
mov
aam
scas
or
xor
jecxz
popf
pop
mov
cmc
scas
xchg
mov
mov
adcb
test
es
ss
sub
fnstsw
ljmp
idivl
aam
jno
inc
and
push
sub
push
fisubrl
add
push
fidivrl
jne
out
ljmp
repnz
sarl
popf
and
jmp
test
add
pop
xchg
orl
imul
mov
and
shll
mov
in
into
mov
dec
pop
jl
jge
or
sbb
fstpt
scas
idivb
in
jmp
dec
or
ds
push
enter
mov
lret
test
mov
nop
mov
out
push
cmc
imul
inc
sub
mov
test
xchg
iret
or
outsl
jge
iret
adc
mov
sbb
les
insl
inc
mov
mov
insl
xchg
out
lds
mov
pop
jbe
enter
xchg
lock
inc
cmp
sub
or
mov
sub
shlb
mov
mov
xor
mov
jbe
sbbl
jnp
sub
fistpl
or
lods
fbstp
fs
mov
mov
aas
loop
sbb
leave
jne
arpl
sbb
mov
push
lcall
pop
flds
and
rorb
mov
adc
lret
fwait
push
mov
inc
mov
imul
jno
fcomps
sbb
push
int
jle
sbb
mov
xchg
dec
jne
and
insb
push
push
cld
mov
cld
sub
rorb
scas
sarl
jle
jo
lcall
mov
dec
ds
push
pop
xor
or
jns
scas
mov
in
mov
repnz
mov
adc
mov
mov
xor
sub
xchg
jno
or
inc
daa
mov
cmp
fnstenv
inc
out
xor
jne
mov
jmp
sbb
into
pop
and
add
leave
fdivrp
push
xor
xor
cld
xor
pop
clc
in
mov
cmp
jne
adc
push
gs
out
mov
sub
xchg
and
mov
outsb
lods
das
fcomip
call
dec
shrl
js
mov
and
repnz
xor
sahf
scas
cs
cwtl
dec
cmp
jo
jg
xchg
vmovups
inc
xchg
subb
lds
xlat
push
aam
scas
sub
and
adc
fldl
and
jmp
xor
lcall
stc
int
ja
test
sbb
outsl
loop
mov
aad
repz
repnz
mov
mov
sbb
shl
pop
ret
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
fdivp
mov
jno
xor
fstpl
jp
mov
cmp
mov
add
pusha
xchg
xor
and
idivb
dec
mov
pop
fnsave
enter
in
rcll
push
loop
pop
cld
pop
aas
sbb
es
movsb
mov
xchg
cs
rol
cmpsb
test
mov
mov
xchg
xchg
push
jmp
mov
mov
scas
fidivrl
pusha
out
inc
sub
jbe
jbe
outsl
mov
xchg
push
add
js
in
cmp
ljmp
jge
inc
gs
push
or
sti
divl
dec
repnz
leave
in
shrb
shlb
clc
popf
es
mov
or
adc
les
mov
in
inc
fwait
dec
data16
mov
arpl
mov
ret
mov
aam
pop
jno
and
dec
jg
dec
stos
pop
jecxz
dec
dec
test
or
or
jle
data16
in
addr16
sub
or
shlb
pop
movsl
mov
sahf
sti
lds
sub
xchg
jp
adc
lods
sub
cmp
test
jbe
mov
lret
repnz
inc
pushf
sub
dec
cmp
inc
mov
xlat
pop
push
sub
enter
cmpl
arpl
pop
mov
inc
xor
dec
pop
sbb
push
sarb
lea
sbb
pop
imul
roll
xchg
outsl
inc
loopne
pop
xor
adcl
sahf
aaa
adc
mov
int3
adc
fildll
dec
push
inc
popa
pop
inc
push
push
jecxz
push
cmp
xchg
lds
add
shl
cmp
inc
int
mov
imul
int
stos
add
mov
out
call
mov
mov
inc
mov
push
dec
push
cmp
ljmp
jp
push
aad
push
popa
ret
sbbb
lahf
adc
int
mov
sahf
jp
pop
nop
rolb
jbe
adc
push
ret
lds
mov
in
pop
gs
dec
fisubrs
lahf
dec
shrl
addr16
mov
ja
cld
pusha
pop
mov
mov
xor
rorl
sub
xor
mov
xchg
mov
aaa
inc
pop
jecxz
dec
filds
mov
out
cmp
jo
std
repnz
xchg
adc
push
jb
aam
jae
or
aas
mov
pusha
fimuls
pusha
mul
rcrb
fs
jo
stos
imull
movsb
fdivrs
cmp
xchg
in
out
ret
and
jmp
xor
ret
rclb
push
pop
shr
cmp
in
mov
push
xchg
jmp
fwait
mov
sub
or
dec
mov
mov
mov
cld
mov
push
fidivl
sbb
fs
push
inc
mov
xor
and
adc
push
call
insb
int
jo
stc
lret
jb
js,pn
mov
mov
sbb
repnz
push
cmpxchg
nop
mov
and
std
aam
adc
mov
dec
or
xor
cltd
or
sbb
pop
std
es
jg
pop
xor
pop
int3
cmc
lods
into
movsl
jo,pt
xor
int3
jne
xor
imul
lea
outsb
add
and
push
rcrb
fdiv
mov
inc
mov
xchg
or
or
outsl
shr
into
daa
aas
adc
push
sbb
stc
fisttpl
mov
adc
mov
add
mov
mov
sarl
test
push
into
insl
or
inc
cs
mov
xlat
or
cmp
popa
add
mov
out
mov
dec
xchg
mov
icebp
in
push
dec
dec
or
push
out
cli
lock
mov
hlt
jbe
xor
jmp
movsl
rolb
mov
adc
movsb
push
fildl
mov
pop
int
add
inc
cwtl
imulb
fidivs
lds
stc
mov
or
out
fsubl
jno
push
and
bound
aas
lret
out
fwait
sbb
and
gs
push
pop
adc
rcl
stos
in
inc
popa
jnp
subl
push
push
push
sbb
and
jnp
dec
je
ljmp
out
gs
jne
adc
lods
xchg
std
push
es
adc
inc
insl
add
xor
pop
cltd
sahf
ror
xorb
dec
mov
xchg
inc
ds
dec
fs
push
jmp
dec
fwait
jno
inc
ds
sub
jb
jne
pop
and
mov
pushf
mov
pop
mov
push
repz
mov
cld
xor
inc
pop
mov
xlat
jle
jg
ljmp
lods
or
push
xchg
pop
and
mov
mov
cmpsl
ljmp
push
adc
insl
fcompp
dec
ja
dec
divb
push
mov
jge
sbb
mov
sub
andb
cli
cmc
sbb
test
sbb
and
mov
decl
mov
stos
aam
push
sub
or
mov
mov
xor
std
pop
or
xchg
and
and
outsb
stc
fucom
aad
lods
or
sub
lock
dec
lret
push
cli
lahf
in
mov
mov
inc
cmp
scas
icebp
mov
dec
or
cli
ror
adcb
mov
or
and
add
inc
and
leave
pop
test
sti
xorb
nop
int
lcall
int
das
pop
cli
push
cltd
adcl
mov
aad
insb
lea
test
repz
xchg
faddl
dec
fcomi
adc
push
fs
mov
cltd
add
add
shrl
and
pop
xchg
iret
dec
sbb
or
xor
lgdtl
or
mov
es
insb
icebp
mov
pushf
pop
mov
lods
jb
dec
jbe
outsb
test
mov
je
loop
xor
pop
push
inc
rorl
aaa
ss
ja
pushf
cld
mov
ret
out
mov
lods
dec
or
out
dec
mov
push
cmc
mov
adc
sti
sbb
ficoms
in
sarb
cmc
in
scas
adc
sbb
sub
test
and
fdivrp
popf
sbb
cld
cmp
fdivr
lds
jge
jmp
inc
sbb
gs
add
aas
and
jp
orb
pop
add
push
jo
addr16
inc
jmp
push
outsl
movsl
dec
jge
in
repz
arpl
and
fucompp
dec
xor
in
imul
cmp
add
sub
mov
enter
mov
xchg
cli
aaa
add
ret
movsl
cmp
add
nop
jg
xchg
push
xor
cltd
les
bound
push
push
into
xchg
lods
aas
lret
cwtl
pop
lcall
mov
dec
loop
xor
scas
xlat
adc
pushw
inc
push
arpl
inc
sarl
pop
out
mov
outsl
repnz
dec
jg,pt
pushf
inc
mov
sub
subb
dec
xor
pop
ss
push
imul
add
cmp
loope
add
int3
mov
push
insl
test
test
adc
jb
stc
repz
mov
cs
cmp
imul
xchg
cltd
cli
popa
shr
xlat
sub
pop
and
bound
test
pop
rcrl
mov
or
nop
ja
xchg
pushf
jl
xor
xchg
loop
mov
dec
test
jns
sub
in
mov
call
outsl
sti
dec
sbb
rcll
bound
rcrl
and
arpl
dec
cmp
mov
cmp
xchg
movsb
out
js
sbb
push
push
add
pop
sti
mov
push
and
sbb
mov
sub
jle
sub
sub
cmp
cmp
mov
jle
xchg
pop
jmp
sbb
fstl
push
push
pop
cmp
lahf
lcall
pop
or
aaa
dec
pop
hlt
icebp
pushf
mov
xchg
in
int
pushf
mov
cld
mov
add
std
ja
dec
gs
mov
test
mov
sbb
cmp
cld
mov
add
shrb
or
inc
scas
out
sbb
loopne
sbb
fadd
sbb
push
js
sub
push
into
into
xchg
cs
lret
in
clc
adc
insl
ss
dec
cmp
das
jns
inc
sbb
sub
cmp
insb
and
rorl
rcrl
pop
es
clc
movsl
imull
jecxz
inc
adcb
jg
sub
and
into
cltd
out
pop
xor
xor
push
or
or
mov
movsl
pusha
fisttps
sti
sbb
dec
je
adc
push
jl
movl
outsb
ds
test
jg
sbb
lds
pop
dec
inc
and
cmp
inc
push
xchg
jmp
mul
cli
adc
fisubrs
xor
cmp
xor
fwait
jge
jl
lods
and
jno
adc
dec
jecxz
aas
pop
xchg
imul
in
mov
ret
les
jne
stos
stos
out
inc
leave
movsl
decl
jecxz
pusha
ret
xor
aaa
sbb
scas
in
aam
and
shrl
sbb
roll
int
xchg
leave
flds
stc
enter
cmp
pop
adc
orl
in
mov
mov
loopne
mov
stos
mov
adc
aaa
lret
xor
push
mov
insb
sbb
jmp
cmpl
sarb
mov
pop
push
cmp
add
inc
add
fiadds
or
push
or
ja
mov
adc
mov
out
or
fstpl
sbb
out
sub
jmp
xor
mov
in
roll
jl
fidivrs
pop
test
test
pushf
testl
and
test
or
adc
cmp
shr
pop
and
sbb
test
pop
jb
push
lcall
xchg
fisubrs
adc
pop
adc
cmp
sub
mov
andl
loop
sbb
out
test
lahf
adc
lods
movsl
imul
xchg
jge
xchg
mov
mov
mov
daa
adc
bound
xor
add
les
sar
cli
stc
pop
inc
add
or
fldenv
push
sbb
xlat
in
cmp
jmp
inc
sub
sub
pop
lcall
insb
lcall
jno
cmpsl
sub
shrd
sbb
das
push
jecxz
shll
pushf
jne
or
addl
cmp
mov
in
adcl
pusha
sub
push
loope
mov
repnz
xchg
stos
mov
scas
lahf
dec
cmpl
mov
into
pop
adc
cmpl
loopne
enter
ss
cmp
adc
sbb
jl
idivl
xchg
scas
mov
loope
iret
ljmp
jmp
mov
add
je
loop
jne
outsb
int
sub
popf
out
jp
sti
inc
in
rcrl
jbe
negl
mov
dec
mov
cmp
push
bound
jns
leave
stos
nop
jp
jg
ja
jbe
loopne
sub
push
push
cmpb
lahf
movsb
dec
mov
ljmp
shrl
popa
pop
ror
fnsave
push
je
out
out
in
mov
inc
pop
sbb
adc
pushf
adc
fwait
jbe
sbb
mov
mov
hlt
mov
or
mov
cmp
adc
cmp
pop
jb
push
cwtl
fidivrl
push
inc
insl
mov
lea
mov
add
jp
cmp
pop
shrl
movl
push
inc
sub
adc
lds
push
sub
clc
out
xlat
jmp
lcall
aam
mov
inc
jnp
lea
rcrl
lahf
scas
es
sbb
push
fs
pop
call
mov
cmc
and
icebp
and
jecxz
xchg
es
xor
dec
outsl
das
arpl
xor
pop
fiaddl
inc
xorb
pusha
mov
dec
push
cmp
into
scas
dec
rcll
arpl
lods
sub
xchg
xor
cmp
xchg
inc
cld
mov
cmp
decb
jge
push
xchg
fadds
int
popf
movsb
idiv
ret
outsb
sti
orl
adc
or
out
adc
pop
cmp
std
push
in
adc
sahf
test
and
xchg
fwait
mull
cwtl
fidivrl
pop
fucomip
mov
mov
andl
adc
in
or
cmp
sbb
int
jl
jmp
or
shrl
test
ror
leave
sbb
lcall
in
roll
mov
jbe
cmpb
fdivr
insl
or
fcomp
xlat
mov
pop
and
mov
imul
cmpsb
movsl
mov
xchg
imul
adc
lds
cmp
dec
mov
mov
mov
mov
jle
or
mov
in
and
frstor
mov
cmp
push
adc
repnz
lods
sbb
ds
in
arpl
or
lea
ret
ret
cmp
lret
xor
ja
popf
outsb
aam
mov
int
mov
ja
push
cwtl
adc
sahf
push
cli
dec
dec
dec
fldenv
dec
mov
mov
sub
pop
lret
subl
adc
inc
out
mov
mov
pop
mov
clc
ffreep
mov
sub
loope
out
jg
cwtl
push
fcmovne
xchg
sub
or
pop
inc
mov
inc
sub
arpl
cmp
xor
lea
push
pop
lret
test
mov
imul
pop
das
popf
test
ljmp
fdiv
cs
dec
fucom
dec
nop
sarb
cli
loopne
in
fwait
les
hlt
lods
je
ret
mov
adc
and
adc
bnd
in
xchg
outsl
mov
pop
and
mov
jne
mov
add
jmp
inc
push
mov
xorb
inc
sti
adc
inc
pop
int3
test
push
daa
pop
sub
mov
xchg
pushf
mov
in
mov
repz
sbb
lret
inc
inc
mov
gs
mov
push
insb
mov
dec
adc
dec
push
rol
lds
ja
loop
vphaddwq
sti
test
cwtl
jno
inc
push
push
push
mov
insl
add
into
mov
xchg
addl
pusha
jp
mov
inc
add
loope
add
jae
jno
out
out
cmc
into
jmp
pop
cmp
jbe
push
in
insb
xchg
lea
lret
mov
jmp
dec
jns
mov
xchg
push
jmp
cmpsb
cmp
add
in
test
int3
pushf
push
dec
push
sar
xor
xlat
adc
and
jl
adc
aaa
inc
ss
pop
into
and
pop
and
cli
mov
rcrl
push
inc
stos
push
in
popa
add
movsb
jg
loope
sub
cmp
in
mov
mov
subb
cmc
sub
ret
sti
je
vcvtsi2sdl
sub
add
aas
fnstsw
mull
sub
fstpl
test
stc
xorl
testb
pop
mov
and
xchg
adc
xchg
jg
adc
insl
fdivs
mov
in
fstpl
in
call
pop
and
mov
jbe
mov
sub
mov
adc
push
out
les
dec
adc
jbe
push
pop
push
or
loopne
pushf
inc
push
sub
inc
and
push
adc
popf
fistl
std
test
lds
xchg
pop
sub
dec
repnz
jecxz
jnp
jo
dec
je
push
sbb
mov
daa
mov
xchg
xchg
mov
fadd
inc
movsb
in
cmpsb
and
jmp
push
cmp
sbb
pop
jecxz
sbb
cmp
pusha
sub
arpl
inc
cmp
adc
ds
push
outsl
mov
cmp
in
push
add
vxorpd
sub
push
xor
dec
lods
jge
rol
mov
call
inc
inc
and
and
jo
add
cmp
mov
sti
xchg
mov
pop
fbstp
pushf
ja
sbb
dec
dec
in
adc
outsl
aaa
ds
push
sbb
add
cmp
pop
inc
mov
inc
xorl
frstors
mov
inc
mov
or
mov
lods
mov
adc
rcrb
push
lods
cmp
ret
fcompl
xchg
mov
inc
mov
sbb
jge
cmp
mov
or
in
sahf
add
adc
adc
jnp
mov
out
in
cmp
add
cmp
cltd
sub
pop
add
movsb
push
pop
lcall
rclb
pop
push
jecxz
cmp
xchg
jmp
add
movsl
in
sub
nop
cwtl
mov
push
sti
rcll
sub
repz
and
dec
in
push
fwait
add
mov
subl
push
aad
pop
cltd
scas
xor
or
xor
sbb
or
inc
shlb
neg
sbb
push
pop
call
jl
mov
fdiv
ja
cmp
movsl
hlt
and
jge
ja
sahf
addr16
rcrb
stos
test
int
mov
sbb
aaa
mov
push
pop
dec
dec
xchg
in
pop
clc
push
movsl
jno
mov
scas
jg
cmp
xchg
mov
inc
and
out
in
outsb
mov
rolb
adc
cmp
ja
push
sahf
repz
icebp
adcl
and
inc
jge
mov
push
loope
addr16
lahf
or
xor
ljmp
daa
test
push
loope
outsl
cld
popf
jmp
xchg
and
aaa
sbb
movsl
inc
jno
cld
and
lea
ret
xchg
lret
xor
pop
dec
iret
pop
cmc
sub
scas
dec
shrb
and
aaa
mov
mov
jl
cmc
jbe
or
loope
mov
mov
and
aas
xor
mov
std
repz
xchg
jno
mov
repnz
aad
fimull
jp
cld
push
dec
xor
mov
mov
lret
test
out
inc
shll
jg
push
out
add
xchg
xor
shl
pop
das
nop
inc
iret
decb
fiaddl
mov
repz
inc
mov
popa
bndmov
cltd
int
pop
cmp
repz
sarb
pusha
pop
or
push
pushf
nop
sbb
pop
ret
jg
icebp
mov
loope
xchg
add
mov
scas
jns
push
jg
dec
insl
mov
int
jae
das
nop
push
fists
xor
cmc
es
cli
mov
pushf
nop
push
xor
jle
fsubrs
into
jb
out
jmp
mov
sbb
xchg
addl
lock
jnp
xor
out
and
add
xchg
rclb
add
dec
vcomiss
sub
jo
roll
leave
cmp
cmp
imul
cmp
test
jg
pop
test
cmpsl
adc
rorb
mov
in
xlat
push
xor
push
and
sub
pop
inc
pushf
jno
icebp
dec
dec
pushf
stos
scas
enter
mov
mov
ljmp
aas
sub
pop
ljmp
das
je
inc
pushf
outsl
aas
push
mov
mov
lods
add
stos
pop
negb
jnp
loop
pushf
or
in
notl
mov
mov
aam
gs
sbb
or
int
dec
shll
ljmp
int
jno
jle
xchg
sbb
stc
enter
lcall
lret
test
sub
test
gs
jnp
repz
inc
ret
jne
mov
adc
les
lret
aam
stos
inc
mov
cmp
push
and
jo
push
cwtl
loopne
into
mov
xchg
lret
repnz
sub
pmuludq
xor
mov
shr
dec
push
fldt
xor
mov
push
imul
movsb
insl
sub
adc
fildll
sub
sbb
and
add
pop
mov
lret
es
lea
and
nop
jns
sub
clc
jb
sub
ljmp
int3
dec
push
es
loop
xlat
mov
jno
fxam
or
jl
pop
cli
sbb
inc
ljmp
jge
or
hlt
inc
daa
mov
xchg
fisubs
es
mov
lods
sarl
dec
xlat
bound
loopne
xchg
mov
loopne
lcall
ret
pop
jp
xor
xchg
fisubl
into
pop
sub
lret
sbb
push
pop
mov
rcll
cwtl
dec
pop
outsb
cmp
es
push
inc
aas
push
cmpsb
push
adc
aad
mov
push
add
lret
insb
sbb
sbb
or
enter
cmc
sti
inc
mov
push
out
in
cmpsl
pop
movsb
out
jno
fisttps
insb
popa
imul
test
jl
push
fcompl
ret
ret
inc
js
lds
pop
push
cmp
add
cmpb
test
int3
loopne
sub
xchg
adc
add
stos
sbb
movl
insb
inc
pop
sub
out
inc
lds
lods
sbb
or
aam
dec
push
dec
es
pop
sbb
push
push
imul
push
and
ja
rorl
xchg
lahf
js
ret
orl
jo
jo
das
xlat
inc
push
es
test
xor
push
into
or
data16
sub
out
dec
out
iret
pop
insl
jb
jge
pop
repz
add
je
nop
add
inc
fmull
in
push
fisubrl
push
addr16
cmp
imul
and
cmpsb
cmp
jns
sub
lret
out
jg
xchg
jb
push
shrb
ret
pop
aad
add
adc
mov
pusha
inc
call
mov
jp
adc
inc
jbe
bound
mov
pop
xor
nop
xor
bound
das
mov
sarb
lret
and
add
leave
jmp
xor
imul
scas
outsl
mov
arpl
xchg
shlb
pusha
jp
mov
add
or
lods
mov
or
fldenv
mov
sub
jg
aad
xor
jns
push
push
or
jecxz
pop
je
xor
mov
cld
xlat
loope
mov
cmc
ss
cmpsw
jbe
dec
arpl
cmp
mov
jp
mov
aad
add
add
adc
push
dec
xchg
pop
sarl
pop
arpl
sbb
fadd
loop
mov
rorb
out
mov
shll
jne
fidivrl
mov
stc
ds
clc
xlat
test
push
ljmp
add
iret
loop
dec
mov
insl
sbb
inc
jle
and
stos
negl
je
test
pop
xor
scas
enter
daa
adc
test
insl
dec
mov
sub
gs
scas
popf
scas
arpl
cmp
ja
jne
and
pop
aam
sbb
std
pop
or
mov
lock
test
sub
xor
and
push
cld
or
in
push
sub
sub
fcompl
sub
inc
mov
jmp
push
fisttps
ds
mov
mov
jne
bound
imul
mov
filds
xchg
movsb
outsb
imul
xorb
sbb
mull
jbe
dec
es
cmpsl
mov
xor
fnstcw
mov
mov
out
jnp
shr
or
xor
push
mov
jle
push
adc
inc
sub
insb
jmp
imul
xorl
mov
add
lds
xor
jns
xor
enter
incb
cmpl
insb
push
add
sahf
out
cld
out
adc
int3
icebp
gs
push
push
fwait
inc
push
js
and
inc
in
add
jg
mov
push
or
xlat
jmp
xor
pop
out
dec
xchg
cmp
and
iret
aaa
push
pop
jmp
push
cltd
icebp
push
inc
mov
cmp
lock
xchg
stc
mov
and
adc
cmp
cmp
pop
mov
dec
push
add
add
movsb
xor
pushf
cmp
cmp
lret
lods
out
enter
jge
dec
fwait
int
push
jbe
outsl
cmpsb
or
outsb
icebp
mov
adc
mov
pop
das
popf
add
jmp
fwait
enter
add
push
add
mov
mov
out
pop
adc
xor
mov
mov
adc
sbb
dec
xchg
loop
movsb
movsb
lret
mov
ret
pusha
out
xchg
fstpl
dec
data16
mov
mov
inc
sub
cmc
iret
cmp
lahf
jg
lcall
mov
stos
mov
lcall
push
pop
in
mov
inc
loop
repz
pop
adc
ret
or
test
test
sar
xor
les
xorl
cmpsl
clc
xchg
movsb
imul
adc
pop
xchg
add
jo
insb
dec
dec
mov
shlb
loope
mov
push
stos
cmp
jge
scas
mov
pop
test
js
mov
push
push
lret
add
dec
fcompl
enter
mov
lcall
filds
mov
int3
and
aaa
mov
mov
mull
in
je
shll
ljmp
mov
xor
push
sbb
or
mov
pop
fwait
xchg
sbb
insb
sbb
jmp
pop
xchg
push
or
pop
gs
add
js
xchg
psllw
scas
pop
mov
pop
insl
out
add
std
int
ljmp
hlt
sbb
dec
mov
pop
ret
jp
or
sbb
clc
push
loopne
and
or
out
into
out
inc
dec
inc
arpl
cmpsb
adc
insl
mov
mov
insb
popl
add
xchg
int
test
pushf
push
add
xchg
iret
call
adc
inc
inc
rcr
imul
imul
xor
fistpl
xchg
push
iret
jge
sbb
sti
pop
fmul
call
and
test
add
je
pop
lret
mov
in
dec
mov
mov
cmp
aam
addb
stos
inc
loopne
xor
xchg
pop
out
and
push
test
int3
xor
mov
jno
pop
or
mov
cmp
mov
mov
repnz
out
fsin
gs
add
and
data16
sarl
notb
cltd
mov
pusha
int
xor
mov
dec
dec
sbb
add
cld
and
jle
push
mov
sahf
mov
in
ss
dec
mov
lret
cmp
leave
fimuls
loop
pop
inc
fsts
cs
mov
in
lret
add
fwait
sub
pop
cmp
mov
fisubs
lods
pop
and
ud2
ficompl
and
repz
icebp
cmp
mov
mov
and
push
cld
mov
pop
cmp
sbb
xor
fimuls
cmp
jle
pop
in
jns
mov
inc
mov
dec
jmp
mov
ja
add
inc
inc
loope
jae
dec
enter
sbbb
add
fs
outsb
push
jl
lret
shlb
mov
inc
jns
cmp
stc
icebp
pop
negb
mov
inc
out
test
cld
insl
inc
sub
or
adc
mov
push
add
and
cli
in
xchg
jle
in
adc
shr
mov
or
or
imul
jbe
pop
adc
adc
push
xor
add
inc
or
pop
or
into
jae
inc
pop
push
mov
xor
lahf
sbb
ja
nop
jle
jbe
pop
jno
pop
mov
aam
lahf
test
scas
aad
int3
pop
in
lret
hlt
jp
ror
rolb
andl
xor
xchg
stos
xor
out
dec
aam
fnstenv
rolb
xor
lcall
inc
push
cmpl
push
or
cmp
clc
adc
cmp
out
lahf
aaa
and
bound
adc
adcl
push
pop
incb
mov
jo
repnz
pop
pop
or
cmp
sub
mov
imul
add
loope
cltd
pusha
inc
scas
cmp
lds
fstpt
sbb
or
xchg
mov
or
popa
mov
filds
inc
movsl
mov
movsb
adc
loope
in
aas
test
hlt
jns
sahf
out
or
xor
cmpsb
mov
adc
sub
fiaddl
adc
inc
cmp
lea
addr16
xchg
roll
push
test
adc
sbb
js
xlat
dec
das
cmp
scas
addr16
push
push
scas
cmc
adc
fstl
add
out
jle
pushf
fs
inc
mov
xchg
xor
mov
cwtl
stc
xchg
or
jl
loope,pt
lret
outsb
sbb
push
add
fidivrs
jns
xchg
imul
or
shlb
jl
or
hlt
mov
push
pop
xchg
int3
popf
jne
or
test
xchg
enter
inc
cli
or
add
push
jo
stos
mov
pusha
xchg
std
fsubrl
popa
sub
les
in
fdivs
mov
adc
mov
inc
add
sub
cmpb
jmp
sbb
xchg
cmp
xchg
scas
in
inc
insl
add
cld
call
js
sub
mov
or
mov
mov
cmc
repnz
inc
adc
movsb
adc
in
add
les
mov
aaa
jne
rorl
or
mov
cs
ljmp
lods
in
mov
pop
or
pop
mov
pusha
int
adc
push
ret
int
test
daa
stos
cmp
icebp
xchg
or
scas
pop
aaa
cmpl
daa
inc
outsl
adc
cmp
mov
push
cmp
aad
push
aam
fsts
mov
xchg
sub
fs
jl
and
xchg
je
lcall
punpckhwd
adc
xchg
adc
movsl
dec
xor
push
adc
lods
mov
cmc
int3
clc
adc
xchg
leave
jg
pop
loope
scas
fcmovne
pop
xchg
push
outsl
mov
push
daa
push
iret
pop
add
call
testb
loop
aaa
and
mov
sbb
paddsb
ds
jp
fisubs
lcall
xchg
outsb
fnstsw
jecxz
std
clc
aas
sbb
inc
cwtl
lds
repnz
cwtl
js
dec
out
insl
je
sbb
add
fcomps
xor
fs
loope
loop
insl
ror
add
pop
insl
xorb
fs
pop
lods
xchg
xchg
jns
xor
stos
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
sub
jp
pop
jp
or
push
xchg
or
push
rorl
pop
lret
in
push
cmpsl
dec
rorb
pushl
adc
push
nop
add
ret
mov
ljmp
inc
push
scas
fstps
jbe
int3
pop
adcl
xchg
xchg
stos
jecxz
adc
and
out
mov
jmp
insb
out
scas
pop
loop
mov
call
je
xchg
scas
xor
sbb
mov
sbb
stos
sbb
inc
or
outsb
xchg
das
fs
jmp
mov
pop
testb
mov
rolb
pop
cli
jp
sub
jno
js
or
popf
outsb
pop
sbb
pop
mov
lods
in
dec
frstor
pop
fildll
xchg
xchg
fwait
popl
push
aam
pop
out
cmp
mov
mov
ja
push
fwait
pop
dec
lods
stos
jb
movsl
les
bound
cmp
incl
pop
ror
cmp
decl
pop
jno
push
inc
xchg
push
rcr
scas
testb
jnp
add
pop
xchg
fmuls
cmp
outsb
lcall
or
out
in
push
lret
cmp
jmp
push
pop
shlb
jp
test
or
daa
hlt
xor
stc
cld
xor
mov
out
outsb
add
data16
mov
dec
in
lret
shl
cmp
into
ret
ja
xchg
fmulp
inc
hlt
addl
movsl
inc
mov
add
cmp
jne
mov
sub
rcr
fs
jno
fistpl
aas
pop
xchg
out
pop
div
divb
sarb
ja
insl
sub
lret
inc
sbb
sub
loop
int
into
dec
movb
adc
inc
imulb
loop
mov
push
ret
pop
mov
in
iret
arpl
lret
imul
xlat
sbb
xor
mov
push
bound
loopne
pop
out
inc
ljmp
mov
sub
popa
cs
fwait
clc
mov
mov
push
hlt
out
pop
xor
and
mov
test
jbe
add
cmp
pop
insb
frstor
adc
wbinvd
pop
loop
lods
sbb
icebp
jno
fidivs
adc
mov
push
aam
adc
mov
insl
and
icebp
jno,pt
adcl
aaa
and
rolb
jbe
lea
mov
jmp
sbb
mov
xchg
jle
add
sbb
cmp
add
dec
das
je
jne
mov
insl
mov
js
std
cmc
push
ss
dec
xchg
or
jl
popl
sub
int3
test
shlb
mov
xchg
call
pop
pusha
pop
cld
out
or
jmp
clc
xchg
out
jmp
xchg
into
jge
cmc
cmc
xor
inc
lahf
repnz
cli
mov
hlt
inc
shlb
mov
inc
in
cmp
popf
mov
and
je
es
data16
adc
mov
call
add
mov
cmc
addr16
stos
mov
inc
xor
sub
test
es
out
cld
div
into
test
lods
es
push
loopne
out
int
mov
or
mov
cmp
jecxz
push
movsb
clc
jg
dec
xor
sub
js
pop
cmp
outsl
add
xchg
and
testl
push
add
arpl
mov
pop
add
addr16
lock
fs
stos
or
jnp
mov
shll
cs
adc
or
repz
enter
fists
push
ja
insb
cmp
mov
and
lcall
sub
scas
or
mov
dec
fstpt
dec
pop
or
adc
stos
dec
sar
or
sub
lcall
jmp
test
mov
stos
cli
clc
adc
sarb
pop
add
cwtl
leave
es
out
js
mov
out
loop
pop
dec
xchg
inc
je
rcll
divb
push
jns
dec
cmp
mov
das
mov
imul
pop
cmp
mov
mov
or
inc
cmp
adc
enter
out
les
dec
clc
fimull
dec
pop
popa
mov
cmp
lock
adc
xchg
mov
loopne
clc
sbb
dec
mov
in
data16
call
bnd
push
dec
rorb
fs
cltd
fstpl
cmp
xchg
icebp
adc
xor
jns
push
iret
and
popf
enter
mov
push
roll
pop
enter
pop
jno
xchg
adc
mov
sub
out
xor
inc
push
or
sarl
andl
cld
jbe
cmp
mov
mov
out
sub
xchg
xchg
or
mov
cwtl
xor
out
ret
xor
mov
pop
mov
dec
stos
inc
sub
or
ficompl
in
inc
pop
les
xchg
fisubl
in
add
aam
aad
inc
mov
stos
mov
push
imul
xor
pop
jnp
daa
jmp
mov
mov
mov
or
mov
dec
dec
dec
xor
stc
cmp
repnz
inc
addl
mov
sub
pop
push
jne
and
push
push
xchg
and
xchg
ror
out
dec
pop
and
test
stos
lret
dec
dec
adc
cli
mov
pop
test
pusha
sub
fiadds
sarb
pop
mov
sub
adc
hlt
push
test
xchg
sub
popf
mov
mov
or
add
jnp
in
pop
sbb
hlt
dec
out
fiaddl
xchg
cltd
xchg
jmp
and
inc
imul
push
fimull
and
add
push
mov
push
or
daa
movsb
or
aas
mov
mov
xor
mov
jbe
mov
movsb
cmp
mov
movsb
and
je
push
dec
mov
adc
in
jb
mov
ret
aam
push
fst
test
xchg
xlat
aam
pop
jne
sub
xor
pop
push
ret
cmp
pushf
mov
sub
jns
jnp
int3
cwtl
mov
jbe
lds
ja
loope
push
push
xchg
jle
ficoml
in
stos
mov
popf
pop
cli
sbb
pusha
or
fsubrs
shl
das
adc
or
js
negl
push
cwtl
and
and
in
std
adc
mov
inc
movsl
out
mov
jmp
leave
add
push
mov
rcll
cmpsl
jmp
inc
clc
loop
mov
aas
or
nop
cmp
xor
or
jg
addr16
add
mov
in
mov
mov
add
out
test
adc
int
xchg
in
notl
fisubl
pop
mov
jg
inc
out
dec
xchg
sub
shlb
dec
push
leave
xchg
jbe
jno
and
inc
push
fs
les
mov
inc
popa
fldl
jbe
mov
sti
cmp
scas
cltd
jecxz
adc
mov
ss
jge
cli
outsb
enter
push
fmuls
mov
fimull
int3
fcoml
pop
sarb
sbb
sahf
dec
jb
mov
test
adc
mov
outsl
movsb
test
inc
cmp
add
mov
pop
bound
jecxz
rcrb
cmp
das
in
ja
jg
ret
aad
and
lcall
rolb
in
lahf
xor
sbb
test
out
adc
hlt
fistl
xor
dec
mov
rorb
and
aad
fildl
inc
push
pop
pop
push
lahf
push
fimuls
xchg
sbb
aaa
add
loopne
pop
cmp
or
leave
movsb
mov
cmp
fidivrl
mov
test
fistl
imul
inc
mov
mov
lea
enter
mov
imul
jle
add
sbb
jmp
mov
scas
xchg
jecxz
rorb
sahf
and
out
out
dec
lods
xchg
aaa
pop
fbld
pop
out
mov
mov
xchg
loop
mov
xsave
mov
xchg
xchg
mov
inc
aam
or
adc
push
xor
std
xchg
sub
mov
xchg
sti
pop
jno
cwtl
or
ds
mov
push
pop
mov
pop
dec
dec
cmp
movsl
stos
aas
xchg
pop
test
outsl
xor
dec
les
mov
dec
rclb
cwtl
push
push
dec
adc
dec
lret
mov
jne
xorl
dec
shll
inc
and
add
popa
mov
shrb
fnstsw
or
lret
nop
add
add
imul
inc
push
add
push
loop
clc
xchg
into
bound
sbb
cwtl
sbb
inc
push
cmpsb
inc
lar
imull
test
lret
jnp
hlt
cmp
xor
jne
fs
mov
dec
dec
hlt
rcll
sub
xor
push
push
xchg
adc
cmc
adc
add
mov
mov
stos
xchg
dec
mov
loopne
mov
rcll
movsb
dec
push
mov
jne
xor
pop
pop
cld
or
lret
test
call
push
cs
dec
push
data16
outsb
sbb
int3
out
cmp
movsl
icebp
dec
xor
xchg
cs
in
cs
fsubrs
jne
mov
lods
add
xor
inc
push
aam
xchg
push
jg
fwait
xor
popf
adc
enter
mov
lds
stc
stos
xchg
adc
es
and
mov
arpl
sub
dec
mov
cmpsl
shll
shll
lds
sub
or
mov
adc
filds
loop
outsl
pop
arpl
stc
cmp
jecxz
dec
pop
dec
aad
ret
roll
adc
js
cmpsb
xor
adc
and
push
xchg
loopne
insl
lods
clc
in
adc
imul
leave
sub
addb
mull
loop
cmc
cmpl
iret
sbb
jp
cld
cmp
sub
cs
stos
push
gs
inc
popa
pop
mov
and
in
out
repnz
pop
pop
andb
cmp
add
xor
outsb
inc
push
in
loop
scas
xlat
jle
xchg
pop
cli
pop
imul
repnz
loopne
or
push
sub
popf
dec
jb
pop
mov
imulb
lret
std
sub
push
aaa
pop
lods
xchg
sub
aad
int3
popf
sarl
movb
push
sbb
lahf
sarb
adc
mov
mov
jb
xchg
dec
mov
jecxz
mov
mov
jbe
es
clc
push
or
pop
sub
int3
push
aad
movsb
push
mov
incl
bound
fisttpl
fdiv
mov
inc
mov
rorb
pop
fnstcw
cltd
clc
fwait
and
dec
and
negb
dec
outsl
cwtl
or
negb
insl
mov
jge
movsl
dec
cmpsl
or
pop
popa
cmp
xor
cmp
sbb
jmp
ss
xchg
sahf
loopne
arpl
aam
dec
add
std
dec
pop
imul
sbb
scas
stos
imul
loopne
dec
cmp
jp
xor
xor
and
jnp
dec
ljmp
xor
pop
push
pop
scas
inc
pop
add
jno
fldenv
sub
sbb
loope
jo
cwtl
movsb
es
popf
mov
jmp
sub
push
mov
xchg
add
jl
mov
inc
scas
out
mov
xchg
daa
into
out
decb
cwtl
adc
iret
aaa
test
and
cld
or
pop
sti
outsl
pop
sbb
scas
add
or
fucomip
lahf
into
add
xchg
aad
add
mov
inc
cmpsb
fmuls
movsb
int3
mov
mov
dec
loope
sub
rcrl
out
addr16
adc
hlt
sbb
adc
sbb
movb
mov
inc
push
scas
stos
mov
inc
movl
sbb
or
adc
les
aaa
lock
mov
mov
xchg
sub
inc
arpl
sbb
lahf
jo
outsl
aaa
mov
mov
and
loope
adc
or
push
jmp
fs
mov
dec
or
sub
fisubl
js
cwtl
stos
cmp
fidivs
push
ss
ljmp
and
out
insb
lret
mov
inc
loope
mov
mov
out
lahf
fisubl
pop
js
fisttps
fnstcw
loope
or
andl
in
aaa
xchg
imul
outsl
add
out
cmp
lock
sbb
inc
call
out
sub
int3
imul
cmpsb
sub
xchg
xchg
jae
outsb
inc
adc
outsl
fnsave
mov
pop
rorb
or
nop
lods
dec
push
mov
adc
fwait
jnp
mov
cmp
dec
daa
pop
sub
das
push
adc
adc
into
rcr
lahf
push
xor
xlat
mov
inc
jmp
fstps
ret
mov
fiadds
cmp
inc
popf
mov
arpl
push
dec
push
addb
and
test
es
cwtl
nop
ret
in
xchg
push
es
mov
jle
jg
xchg
in
push
or
pop
mov
std
mov
imul
fcoms
lds
mov
sub
cs
fistpl
mov
xor
add
mov
push
sti
push
loope
cmc
testl
mov
xor
jl
stos
pop
jecxz
adc
lock
mov
addr16
cwtl
push
jo
loop
in
mov
ss
rorl
daa
fistpll
ret
xchg
and
pop
cmp
or
rcl
sub
lods
jne
inc
pop
je
jecxz
jne
mull
scas
push
imull
pop
pop
js
xchg
shlb
add
fcoms
ret
push
push
jne
je
nop
jecxz
mov
xor
imul
inc
sub
arpl
xchg
pop
dec
xchg
lock
cwtl
xchg
ror
mov
sbb
adc
xor
and
testb
jne
or
pop
idiv
rcrb
jae
fstl
pop
add
push
sbb
cmp
adc
jae
add
test
loop
ljmp
or
cmp
inc
mov
leave
lret
mov
popa
ljmp
pop
movsb
mov
jbe
lods
xchg
adc
adc
loopne
iret
xchg
adc
xor
adc
push
push
mov
pop
stos
sahf
adc
push
inc
iret
sti
pop
mov
arpl
iret
mov
fdivs
jne
pop
aam
jl
hlt
js
jbe
ffreep
pop
fsubrl
sbb
dec
ss
mov
popa
jo
insl
lret
imul
sub
mov
cmp
pusha
or
cs
adc
push
es
loop
xchg
push
int3
jle
lds
into
test
jle
mov
and
sub
loopne
les
mov
orb
shlb
jbe
roll
test
mov
sub
jecxz
adc
lods
or
cmp
insl
xchg
and
mov
int3
lods
loop,pt
xchg
push
inc
aam
out
dec
xchg
arpl
inc
punpckhwd
cmp
stos
aaa
sbb
and
cs
inc
popa
sahf
call
push
sbb
jns
cmp
push
nop
pop
push
dec
and
insl
mov
mov
sub
cmpsb
xchg
in
inc
lods
ss
pop
pop
pop
ds
mov
insl
jg
pop
adc
test
frstpm(287
xchg
jbe
dec
mov
mov
iret
dec
inc
inc
daa
and
gs
jbe
outsb
nop
jl
sarl
sbb
cmpsb
sar
push
outsl
outsb
dec
jecxz
loop
insl
fcmovb
mov
out
jae
and
dec
cmp
lret
jmp
ss
icebp
xor
fdivrs
sub
mov
mov
push
imul
shrl
dec
mov
sti
jle
and
lcall
pushf
push
mov
orb
push
dec
ljmp
pop
sub
pusha
jbe
aas
in
push
cltd
arpl
pop
jne
xor
mov
aas
mov
adc
fidivs
push
mov
sub
add
jmp
cmp
adc
sarl
adc
inc
sbb
pop
inc
mov
xchg
xor
add
addr16
inc
cmp
push
int3
test
dec
lret
data16
sbb
and
in
in
pop
mov
aas
pop
add
sub
pop
adc
jbe
lods
push
xchg
lcall
in
cwtl
ret
rcll
mov
add
inc
negl
in
jnp
mov
and
ja
dec
inc
loop
jp
jne
stos
fsubrl
pusha
xchg
add
xlat
jnp
out
add
mov
push
imul
cmp
add
aad
pushf
int3
inc
inc
in
cmpsb
cld
pop
ds
hlt
enter
jecxz
out
mov
push
ss
sbb
imul
in
sub
rcl
mov
xor
dec
jecxz
fnstsw
cmpsb
push
xor
ss
cmp
sub
pop
nop
loope
or
cwtl
inc
rcrb
dec
scas
sahf
iret
aad
push
cli
lcall
ret
stos
js
jecxz
mov
ret
mov
add
adcl
mov
mov
fcom
es
adc
dec
pushf
clc
mov
push
xlat
cmpsb
mov
xor
dec
xchg
ss
insl
dec
mov
sahf
mov
mov
sbb
inc
fmuls
sti
popf
mov
pop
mov
mov
mov
std
or
stc
fisubrs
add
shlb
add
repnz
les
cmpsl
cmp
jecxz
xchg
ja
daa
dec
in
out
mov
ss
and
jmp
clc
loopne
stos
sbb
cld
mov
xchg
sbb
jl
pop
addl
mov
adc
test
adc
lcall
ds
cwtl
pop
xorb
jno
fxam
cmpl
sbb
into
xor
mov
clc
cmpsl
add
loope
sub
dec
jno
sub
add
hlt
bnd
rclb
xlat
sti
jg
xchg
adc
int3
lock
je
or
mov
fiaddl
addr16
imul
lods
sahf
clc
sbb
mov
aaa
adc
mov
xchg
sub
sbb
lea
xor
or
pop
cmp
adc
and
pop
mov
shlb
inc
ret
jns
outsl
repz
pop
mov
cmp
setnp
jecxz
aaa
aad
xlat
iret
adc
cmp
pop
mov
push
lret
sub
repz
rcrl
out
or
insb
shll
outsl
lcall
lods
mov
jbe
sub
scas
xchg
aaa
dec
mov
lcall
pop
fdivrl
xchg
dec
xchg
inc
mov
cmc
icebp
mov
insl
jl
arpl
stos
les
inc
test
or
popa
or
daa
xchg
dec
cs
push
xchg
xchg
cmp
adc
pop
add
fmul
jbe
ljmp
repnz
cmpsb
stos
scas
cwtl
lret
jns
ds
push
pop
test
icebp
test
dec
sub
dec
jns
cmpl
and
rclb
sbb
cmpb
inc
pop
sbb
testl
scas
scas
out
add
mov
into
xor
loop
pop
lods
lods
push
subl
xor
cmp
addl
jge
jmp
testb
xchg
rcrb
push
cli
mov
shlb
mov
or
paddusw
fistpl
or
xlat
and
imul
jne
repnz
fcmovu
in
mov
add
xchg
insl
sbb
push
in
xchg
jecxz
inc
mov
mov
fstpl
aad
mov
mov
mov
js
inc
sbb
mov
ficoms
or
sbb
dec
sub
xor
pop
pop
adc
sbb
mov
dec
sub
xchg
dec
sub
jecxz
sub
fnstsw
jne
pop
arpl
daa
pop
xchg
loopne
add
pushf
mov
mov
rorl
xchg
mov
pop
rol
pop
subl
ret
push
das
mov
push
loopne
push
lock
xor
popf
or
add
xchg
pop
pusha
es
outsb
pop
jecxz
jge
out
xor
xor
and
mov
sub
outsl
push
mov
aam
mov
enter
inc
jle
add
addr16
leave
ret
dec
mov
and
jecxz
sub
add
and
push
insb
inc
inc
jmp
xlat
and
jnp
mov
out
jecxz
scas
sti
jb
imul
les
pop
xor
inc
jo
push
or
adc
cmpsl
xchg
jae
push
cmp
repz
sbb
negb
lods
push
sahf
push
push
ret
aam
pop
inc
pop
xor
cs
ret
push
in
pushf
xchg
dec
inc
dec
xor
in
icebp
and
movsl
xchg
add
sahf
push
and
xchg
loop
gs
sbb
pop
jmp
jo
or
jp
rcl
add
jb
mov
xor
cltd
xor
mov
test
sbb
mov
lret
std
jbe
fwait
outsb
cmpsl
xlat
mov
adc
dec
push
sub
popa
repz
ss
add
inc
ret
pop
pop
in
decb
jl
jno
ja
mov
mov
int
cmc
test
mov
or
sbb
aaa
mov
imul
icebp
das
stos
lahf
pop
lcall
out
inc
add
icebp
xchg
cmp
sbb
nop
dec
mov
in
pop
jbe
fists
rcl
push
pop
mov
pop
fistpll
rorb
push
dec
jae
fisubrl
jbe
push
or
mov
lret
mov
pop
cmp
cmp
out
addr16
xchg
jg
movsb
pop
pop
scas
jo
pop
jmp
es
push
cmp
arpl
mov
mov
fnsave
gs
aam
fwait
cmpsl
jmp
fwait
notl
out
dec
jg
cli
cli
mov
int3
decl
jp
je
sbb
fcomip
sbbb
in
ret
mov
and
out
ret
xor
outsl
ret
das
js
push
add
add
adc
test
mov
iret
mov
ret
repnz
mov
in
mov
stos
inc
inc
subl
cltd
std
aaa
test
out
js
adc
ss
xchg
dec
xchg
sub
fisubl
repnz
cmp
or
mov
adc
popf
rcrb
sbb
outsl
fsts
loop
xchg
repz
int
in
pop
xchg
xchg
jle
mov
sub
daa
jb
mov
js
insl
xor
std
pop
imul
stos
lea
pop
outsb
sub
mov
inc
je
cmp
stc
sarl
pop
add
pop
in
sub
cld
rclb
fildl
inc
repnz
in
xchg
mov
sbb
iret
ja
sbb
cltd
adc
cmp
stos
mov
lret
jecxz
push
in
cs
in
dec
mov
jne
adc
aas
jne
push
stos
push
xor
mov
test
xor
loope
and
xlat
hlt
ret
cs
sub
mov
insl
sbb
movsl
fcom
lea
xchg
fimuls
imul
xchg
loopne
mov
dec
mov
scas
lods
lcall
mull
pop
mov
xchg
hlt
xchg
dec
pop
mov
dec
call
sbb
xor
cld
sbb
aas
sub
lret
cmp
fdivl
fwait
mov
fists
sti
fwait
ljmp
jp
mov
add
or
xchg
cmpsl
xchg
shrb
pop
dec
int3
pusha
out
scas
jo
loop
int3
call
xor
fwait
out
fstl
call
sbb
push
clc
xchg
pusha
xor
divb
leave
mov
scas
sti
lods
addr16
jge
jno
lods
jo
xchg
or
push
hlt
pop
add
ret
sar
into
sbb
daa
mov
std
adc
mov
fisttpll
cmp
mov
jbe
cli
les
mov
mov
pop
sbbl
fisubs
cmpb
imul
mov
mulb
mov
lods
insl
insb
cmpsl
mov
xlat
xorb
cltd
push
loopne
insb
cmp
xchg
insl
in
sbb
push
popa
push
push
mov
cltd
mov
jle
push
sub
inc
sub
mov
mov
mov
mov
fists
xchg
mov
add
ja
adc
mov
push
mov
lcall
and
cmp
or
aam
pop
mov
or
xor
jecxz
pop
popa
xor
pop
or
sub
jg
leave
push
dec
add
orb
filds
sub
mov
push
lahf
add
lods
add
shl
int3
hlt
lret
out
pop
nop
pop
push
push
std
cli
or
cmp
add
jne
jo
dec
or
pop
stos
cmc
repnz
jle
mov
test
mov
jg
dec
loope
or
push
dec
dec
dec
cmp
jmp
adc
xchg
cmp
inc
mov
push
rcll
push
and
orb
inc
dec
xchg
inc
hlt
stc
fsts
sar
testb
mov
cmp
cmp
pop
add
cmp
xorl
hlt
push
in
cld
jecxz
and
cmc
mov
sarl
pushl
iret
lret
hlt
xchg
das
int
bswap
push
mov
mov
dec
adc
jae
or
pushl
inc
imul
loope
mov
xchg
sub
daa
notb
inc
adc
push
pop
fdivrp
xor
mov
jmp
scas
mov
in
repz
pop
test
pop
mov
push
idivb
int
sub
dec
jge
clc
or
add
les
or
mov
cld
out
push
sahf
jo
adc
insb
outsb
mov
inc
pop
icebp
push
sbb
sbb
mov
push
xor
push
xchg
xor
sub
push
rclb
in
mov
gs
pop
sarb
ret
fnsave
add
mov
ficoms
loope
xlat
dec
add
mov
sbb
mov
add
sbbl
jo
out
int3
sti
add
lret
insl
cltd
aam
add
fs
sbb
dec
sahf
rcrb
shl
negl
xchg
sbb
cmp
mov
inc
les
push
xor
push
ret
xchg
es
test
and
cli
cmp
lds
jbe
adc
repnz
xchg
sub
or
or
insb
ret
pop
pop
mov
mov
fld1
insb
test
push
sbb
ret
jmp
outsl
mov
dec
fs
sub
pusha
fsubp
ja
xor
xor
jle
sarl
inc
mov
test
add
pop
xlat
jo
das
mov
push
inc
xchg
jl
push
jp
scas
stos
pop
mov
push
cmpsl
lock
adc
enter
jp
or
test
in
in
data16
mov
arpl
dec
cltd
stos
mov
icebp
mov
call
adc
mov
cmpsb
negl
sti
xchg
xor
pop
rorl
icebp
mov
pop
outsb
loop
jl
jle
jnp
int
adc
push
ljmp
xlat
arpl
jbe
cmp
add
sarl
and
stos
add
jae
out
mov
stc
adc
mulb
outsb
pop
outsl
push
scas
dec
xlat
fwait
mov
mov
push
fistl
or
dec
inc
xor
or
mov
movsb
pop
daa
pop
xor
cmc
ret
iret
lea
es
movsb
pop
or
push
cmp
clc
adc
test
mov
pop
mov
add
data16
add
mov
add
cmp
adc
lahf
cmpsl
in
sbb
lret
pop
dec
scas
inc
mov
jge
and
mov
sti
add
mov
adc
push
sub
das
repz
jecxz
out
pop
ja
mov
ret
outsb
xlat
pop
sti
mov
sbb
das
cmpl
mov
mov
fdivr
jle
adc
sub
adc
mov
mov
pusha
ret
and
rep
shl
push
insb
sub
push
outsb
cmp
sahf
pop
dec
fdivrp
test
pop
enter
loop
mov
lods
clc
mov
or
xor
insb
jp
ds
shlb
lahf
lcall
mov
mov
in
lds
xor
aad
cmpl
mov
stos
in
add
dec
icebp
movsb
jb
fcmovbe
sub
cmc
dec
cwtl
xchg
push
cwtl
jo
pop
iret
add
push
jb
out
mov
repz
gs
lret
pop
jmp
xor
sbb
pop
insb
add
call
iret
push
leave
mov
mov
inc
insb
mov
mov
xchg
pop
sub
sub
jno
lcall
jmp
mov
mov
out
mov
lock
jl
test
push
repnz
pop
lcall
push
fcom
fwait
jb
shlb
mov
inc
pusha
cld
mov
cmpsl
in
mov
das
sub
add
cli
outsb
push
push
mov
jl
push
das
lret
fistps
dec
dec
mov
adc
roll
mov
inc
mov
pop
inc
lock
dec
mov
jo
or
lods
jg
mov
dec
lds
adc
mov
adc
xor
in
or
pop
aaa
arpl
popf
popf
insl
addb
mov
cmp
push
dec
mov
lret
xchg
mov
push
add
cmp
push
adc
sub
or
adc
frstor
sub
sub
ret
push
or
ret
push
mov
dec
aas
sub
pop
sub
sbb
aas
leave
cmc
in
and
outsl
ficoml
dec
push
pusha
or
sbb
sbb
gs
daa
pop
and
mov
add
push
mov
les
repz
in
sub
xchg
mov
or
pop
adc
sbb
add
fnop
lods
adc
test
ja
iret
sbb
and
and
clc
mov
pop
pop
jp
push
frndint
fwait
xor
or
das
xor
sahf
adc
xchg
inc
sbb
std
xchg
mov
mov
sbb
add
ja
mov
ret
xchg
fistpl
xchg
lcall
cmpsb
je
lcall
jl
and
loopne
imul
mov
addr16
mov
clc
jo
lock
rolb
sahf
mov
xchg
pop
negl
mov
in
sbb
in
arpl
or
clc
fcomps
lods
shlb
repz
pop
mov
push
sub
bound
std
shlb
pop
push
pop
add
imul
jmp
clc
shll
dec
cltd
cmp
test
stos
push
stc
sub
fcmovnbe
jl
movsl
push
dec
xchg
adc
mov
xlat
lea
push
mov
adc
sbb
push
add
sbb
add
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
fstpl
call
jp
test
lds
out
fisubs
mov
xchg
jp
mov
aaa
push
lcall
repnz
lds
inc
mov
xchg
xor
push
jl
fsubl
test
xlat
xchg
sarb
movsl
xor
xor
cmp
divl
imul
add
mov
inc
pushf
andl
jg
aaa
int3
add
faddl
xchg
fwait
inc
fstp
xchg
dec
repnz
add
xlat
add
lock
jnp
out
sub
les
outsl
xor
daa
ds
mov
scas
mov
and
push
adc
mov
cmp
outsb
mov
mov
sub
or
divb
dec
inc
xor
loope
mov
xor
pop
mov
jo
add
cld
add
pop
mov
inc
xchg
lock
jmp
repz
mov
movsl
cmp
divl
mov
add
js
inc
jae
lcall
xor
call
lret
fchs
rcrl
lods
mov
jne
xchg
and
arpl
xchg
mov
or
jmp
ret
cwtl
dec
inc
mov
je
add
shr
mov
push
mov
call
xlat
enter
leave
jl
push
gs
cs
xor
xchg
dec
or
lods
cs
mov
test
lret
movsl
out
or
rorb
mov
add
lods
cld
dec
xor
aaa
xchg
jl
popa
clc
adc
mov
jp
pop
sbb
or
ficoms
nop
fdivrl
cwtl
sbb
negb
xchg
mov
sti
mov
mov
arpl
jecxz
jno
inc
pop
xchg
xchg
pop
push
add
aam
xchg
repnz
add
cmp
sarl
xor
outsl
pop
add
decb
lock
out
mov
push
push
push
out
mov
ror
xchg
sahf
pop
imul
push
into
jecxz
jbe
sbb
fstpl
or
xor
hlt
fistps
mov
test
or
aaa
cmp
int
pop
sub
movsl
arpl
adc
rcrb
stc
je
aas
pop
leave
sub
outsl
add
cld
cmp
imul
jo
xchg
pop
dec
mov
jnp
scas
sub
or
movsl
push
adc
sbb
rcll
xchg
imul
mov
adc
push
loopne
mov
pop
and
dec
out
sub
iret
subb
rcll
rcll
fwait
std
mov
mov
dec
dec
std
mov
add
out
cltd
jl
jge
mov
mov
leave
inc
lret
inc
enter
imul
push
push
mov
jns
pop
fidivl
sub
daa
ja
inc
or
scas
dec
mov
fwait
out
mov
sub
pop
mov
or
fcmovnb
sub
les
ret
test
push
push
lds
jp
add
mov
add
add
dec
stos
add
cld
xchg
jns
das
push
fstpt
pop
sub
insb
mov
cmp
daa
rcll
mov
les
les
ljmp
sub
cmp
add
pop
pop
jg
xor
xchg
ja
cmpl
mov
test
imul
mov
rclb
mov
daa
pop
or
mov
inc
test
gs
push
bound
lcall
sbb
pop
ret
pop
ret
pop
push
adc
in
sbb
movsb
dec
ret
iret
aam
xor
adc
and
mov
mov
test
dec
pop
fadds
out
mov
data16
cli
push
xor
jecxz
pop
bound
daa
dec
arpl
mov
and
mov
pop
cmp
into
lods
and
aas
push
jmp
mov
out
scas
and
mov
xchg
inc
movsb
or
xchg
pop
test
pop
out
pop
xchg
mov
mov
dec
aas
dec
leave
enter
pop
adc
leave
xchg
inc
in
add
test
loope
xchg
out
mov
adc
dec
int
js
gs
add
shlb
sub
fidivrs
arpl
das
sub
rorb
insl
insl
sub
and
notl
leave
fidivs
pop
dec
ljmp
xchg
and
lods
in
sub
bnd
xchg
lock
cmpsb
inc
jmp
gs
mov
mov
icebp
mov
fisubs
daa
jb
sbb
push
ja
test
push
imul
xor
into
dec
push
adc
clc
cmp
dec
mov
ss
mov
dec
loopne
jl
dec
in
sbb
add
dec
xor
imul
sahf
cmpsl
popf
push
xor
and
jnp
leave
pop
dec
daa
data16
stos
lds
jge
mov
movsb
dec
xchg
push
jge
arpl
cmp
jp
sbb
cmp
pop
cmp
mov
arpl
fldt
fistps
jno
out
lods
movsl
mov
rcl
mov
ret
cld
pop
loope
shr
addr16
xchg
jmp
cmp
sub
jb
sbb
pop
xchg
mov
jl
add
pop
jp
mov
shll
clc
jle
jbe
jg
hlt
mov
mov
fcompl
inc
adc
cs
imul
sub
and
sbb
sbb
mov
fs
xor
rorb
scas
mov
in
insb
mov
inc
push
test
mov
or
xor
filds
xor
or
mov
jno
int3
pop
out
out
mov
cmp
bndstx
cmp
dec
or
pop
mov
xchg
inc
push
inc
cmp
and
and
xchg
repz
sbb
push
mov
dec
jecxz
lret
inc
loop
mov
lea
dec
arpl
icebp
ss
test
cmc
push
dec
adc
pop
lcall
push
sbb
dec
out
pop
in
addb
insb
std
rorl
mov
std
popf
sub
cmp
icebp
push
xchg
les
fidivrl
jg
dec
bound
test
int3
jmp
xchg
dec
call
add
aam
subb
into
mov
sbb
test
inc
je
adc
into
pop
ffree
jno
ljmp
xchg
aas
mov
mov
mov
shll
xorl
fsubrs
jmp
sub
insb
icebp
jp
ficomps
mov
loopne
add
out
mov
mov
out
repz
inc
je
les
push
nop
and
jnp
sbb
in
push
inc
daa
pushf
sbb
out
out
ss
pushf
dec
jl
jmp
out
pop
aas
popf
dec
jne
push
sub
dec
je
scas
scas
iret
cmp
mov
cmp
dec
lahf
outsb
mov
dec
and
mov
or
or
xlat
fistpll
cmpsl
xlat
dec
mov
mov
jne
jmp
ficoms
jecxz
sbb
imul
test
aad
push
fdiv
push
iret
aam
push
or
sahf
inc
out
pop
hlt
jl
jo
test
mov
mov
movsb
stos
out
ficomps
out
test
push
es
inc
loop
dec
mov
fdivr
push
add
xchg
into
sarb
push
in
or
xchg
stos
mov
fcomps
xchg
subl
jne
daa
sti
iret
in
clc
outsb
or
int3
push
push
mov
jo
loope
add
dec
adc
ret
testb
incb
mov
test
xor
cs
adc
and
out
mov
icebp
fcomps
or
movsl
addr16
stos
mov
mov
adc
iret
repnz
pop
or
add
mov
xchg
add
push
dec
mov
jecxz
stc
loopne
ljmp
dec
lret
or
pusha
cs
jl
or
ds
pop
js
cmpsb
xchg
push
pop
push
fs
mov
lahf
jb
add
cwtl
pop
fwait
cld
hlt
cmp
mov
ss
pop
cwtl
rol
movsb
jg
sub
repnz
std
mov
stc
and
stos
pop
ljmp
sub
stc
cmp
cli
stc
scas
fs
int3
jne
adc
jno
out
out
sub
or
sbb
lea
xchg
ficoml
icebp
loop
jbe
inc
push
cmpsl
popf
sbb
jo
inc
fists
jmp
sub
fisttpl
or
aas
cmp
xchg
and
xor
lahf
dec
subb
lock
aam
rcr
testl
pushf
xor
sbb
psubq
out
jb
or
xorl
sar
add
or
fldt
adc
lret
pop
pop
jecxz
add
lret
pushf
sub
mov
pop
icebp
mov
div
and
inc
stc
mov
dec
movsl
push
jmp
dec
loope
pop
scas
fcmovbe
and
mov
or
imul
in
push
or
test
add
fidivs
xor
mov
lock
fcoms
mov
sbb
mov
int3
daa
mov
jns
mov
jo
sub
fst
pop
push
mov
push
mov
xor
inc
and
inc
dec
push
stos
or
in
dec
pop
test
xchg
pop
xchg
inc
jecxz
andb
mov
mov
mov
fstpl
cmp
cmpsl
cmpsb
jbe
push
repz
pop
fcoml
ja
jmp
aas
mov
push
dec
mov
ret
cltd
lods
in
mov
jmp
mov
aaa
and
cs
push
test
pop
xchg
dec
call
mov
arpl
cmpb
mov
lret
xchg
sub
jmp
jp
cmp
movsb
rcll
pop
nop
notb
jmp
scas
inc
fstpl
leave
adc
fsubrs
ret
in
mov
and
mov
mov
insb
and
and
test
std
mov
je
stos
mov
nop
add
movsb
ror
cmpsl
test
adc
sbb
sbb
jnp
jns
stc
and
cltd
rorb
leave
sub
addb
subb
pop
mov
rolb
incb
mov
sbb
out
movsl
shr
cmc
xadd
jmp
clc
mov
lods
int
mov
sbb
mov
pop
arpl
mov
inc
xchg
orl
xchg
arpl
pop
bound
mov
jb
pop
stos
fisttpl
divb
mov
mov
insl
notl
imul
add
push
push
mov
mov
incb
xchg
xor
and
lahf
xor
jmp
dec
je
aaa
insl
xchg
cmpsl
sbb
mov
dec
js
ficompl
jno
js
jb
rorl
out
aaa
arpl
shll
inc
jge
jb
mov
jae
or
mov
xchg
mov
aas
adc
aam
inc
nop
repz
call
aas
pop
add
stos
stos
inc
into
push
cmp
outsb
push
jno
inc
pusha
mov
dec
mov
shrb
aad
cld
cmp
dec
mov
jnp
leave
push
mov
push
fdivs
mov
lahf
xor
leave
fldt
jmp
xchg
push
in
sahf
je
add
data16
cmp
dec
and
int3
imul
divl
xchg
lds
int3
enter
aas
inc
popa
popf
mov
push
xchg
ja
cwtl
cmp
sub
push
push
adc
push
inc
dec
stos
repnz
xor
jle
push
jmp
dec
cli
jp
push
sti
mov
bound
inc
jbe
push
inc
scas
jl
daa
and
push
cmpsb
je
mov
mov
call
cmp
push
sub
pop
jmp
and
or
adc
stos
mov
xor
jg
and
cmpsl
sub
xchg
aas
cmp
not
jmp
push
inc
and
dec
sbb
ficoms
roll
aaa
popa
jno
test
sar
mov
jl
sub
add
imulb
adc
jecxz
push
inc
test
cmp
cmpsb
out
ja
in
lds
jge
dec
sahf
mov
lods
fnstsw
lret
dec
push
cli
insl
push
adc
sti
and
add
gs
popf
mov
adc
jae
mov
fdivl
dec
mov
cmp
repz
push
sti
testb
xchg
xchg
in
rcl
out
sahf
xor
loop
mov
jb
mov
mov
adc
push
stc
in
pop
dec
out
xlat
push
pop
movsb
sub
sbb
and
mov
icebp
sbb
sub
imul
aad
cld
js
cld
jge
and
add
pop
mov
fsubrp
aad
sbb
stos
mov
xchg
dec
lcall
sarl
icebp
xchg
imul
xchg
cmpsl
dec
xor
call
cmp
mov
sbbl
jo
xchg
pop
cmp
imul
jo
arpl
lock
shr
sub
push
mov
insl
cmpl
jmp
push
jnp
loopne
aam
pop
insl
push
mov
movsb
push
dec
movsb
in
aam
xor
popf
jmp
out
loope
fisttpl
and
incb
popa
mov
push
in
movsb
push
and
jp
mov
js
sbb
fs
fwait
xchg
sti
call
lret
ret
fs
push
push
jecxz
int
in
sbb
cmp
sub
mov
xorw
in
adc
or
popf
popf
mov
mov
in
sbb
cli
lods
outsl
adc
testb
outsb
in
shlb
push
aam
pusha
lods
xor
adc
shl
and
pushf
adc
aad
into
or
outsl
out
jg
add
pop
cmp
arpl
insl
sbb
mov
ret
jmp
add
mov
cmp
enter
jp
or
sbb
stos
mov
dec
in
lret
rcl
push
fisubrs
mov
out
loopne
jge
jb
decl
mov
lock
pop
inc
mov
mov
test
pop
loope
cmp
stos
inc
mov
scas
dec
movl
sarb
xor
mov
pushf
jbe
sbb
aaa
mov
rol
insl
jo
clc
sbb
xchg
mov
push
test
cmpsb
ss
or
lahf
jbe
push
inc
leave
mov
scas
insl
int
lret
loope
mov
sbb
xor
cs
pusha
mov
lods
dec
sbb
jns
dec
imul
lcall
mov
movsl
hlt
sub
adc
add
sub
outsl
pop
sti
or
std
arpl
jg
hlt
je
ljmp
pop
mov
loope
sub
aam
mov
sti
mov
int3
cmp
push
mov
dec
mov
xor
inc
add
xor
xchg
jnp
sub
repnz
dec
clc
fwait
adc
or
mov
sbbb
fidivrl
xchg
sbb
in
pop
imul
pop
and
jmp
mov
mov
pop
and
jle
negl
inc
aas
cmp
cmp
jl
gs
popa
imul
mov
inc
mov
and
xchg
cld
xor
xor
mov
xchg
sbb
sbb
mov
shll
and
sbb
push
enter
data16
pop
mov
ret
cmpsl
adc
dec
lahf
std
mov
stos
movsb
push
push
insb
inc
aas
mov
adc
inc
scas
jge
push
data16
shll
push
jb
in
lret
out
push
cmp
cmc
jmp
mov
xor
bound
jl
inc
and
insb
adc
mov
insb
decl
xor
pusha
test
mov
sub
cmpsl
and
xchg
mov
jb
adc
sub
idivb
es
iret
inc
mov
repnz
push
call
jo
dec
lds
xor
divb
push
movsb
sbb
sub
hlt
xchg
in
pop
mov
dec
je
inc
mov
sar
pop
out
mov
mov
inc
mov
jno
scas
insl
push
pop
dec
adc
dec
std
leave
fwait
icebp
mov
sbb
push
icebp
jge
movsl
jbe
int3
inc
loope
jl
aad
loopne
out
lods
adc
adc
dec
dec
mov
cmp
xchg
adc
dec
adc
mov
fists
fadds
test
pop
stos
sbb
push
shrb
leave
jno
fcmovne
addr16
movsb
idivl
iret
or
inc
scas
mov
les
jl
dec
repnz
adc
jp
pop
das
sbb
mov
clc
fdiv
nop
inc
fs
sub
mov
push
inc
cmp
clc
decb
inc
ficoml
sbb
push
test
rcr
fisttpl
xchg
lret
andl
pop
in
in
jmp
sahf
push
mov
mov
dec
lods
bound
ja
xchg
cmp
and
lea
sub
or
icebp
and
sbb
and
mov
iret
lcall
mov
outsb
cs
addb
sub
sub
hlt
inc
test
xchg
jge
or
lea
mov
inc
xchg
pop
mov
out
mov
stos
rorb
and
mov
jmp
orl
movsl
inc
dec
comiss
sub
pop
data16
nop
jae
sbb
add
ja
dec
mov
mov
rorb
ljmp
aaa
fs
xchg
aaa
pop
cli
aad
mov
mov
xor
pop
shl
aad
dec
or
sbb
push
sub
and
popf
lea
push
sbb
pop
jns
cmp
aam
imul
xchg
push
repnz
mov
pop
rolb
xchg
leave
jb
sub
test
rcll
daa
aam
cmp
jne
push
out
repnz
add
pop
imul
inc
je
fstl
popa
inc
sub
imul
cmp
push
lods
xorl
jmp
into
in
fyl2xp1
jl
leave
mov
inc
test
mov
lods
inc
shrl
or
loopne
xchg
in
xchg
adc
jge
dec
mov
out
scas
inc
loop
add
pusha
pushf
arpl
int3
pop
xor
sbb
cwtl
mov
sbb
push
les
jno
xchg
repnz
mov
xchg
imul
adc
call
inc
mov
xchg
mov
jb
arpl
rcll
xor
pop
fs
addr16
mov
aad
jmp
push
ffreep
testb
jbe
iret
jp
jmp
adc
leave
jno
in
and
sbb
dec
xor
out
push
out
icebp
add
mov
fistpl
out
add
sbb
iret
stos
mov
pop
cmp
sbb
mov
mov
movsb
sub
stos
stos
ss
je
cmp
mov
loop
or
hlt
ss
pop
xchg
loope
outsl
mov
cld
iret
sbb
sbb
sbb
cli
pusha
adc
add
mov
jne
pop
mov
adc
sbb
test
mov
pusha
jecxz
fistpll
int
mov
inc
notl
sbb
leave
xchg
pop
clc
test
ror
rolb
sbb
dec
cmc
cmp
pop
repnz
inc
lods
daa
mov
push
mov
mov
aas
out
xchg
aas
leave
or
and
fistps
or
adc
imul
out
or
sbb
jns
or
sub
sub
hlt
pop
cmpl
mov
ficompl
add
int
push
sub
in
xchg
push
push
iret
scas
nop
shrl
pop
jl
loope
mov
xchg
imul
js
mov
sahf
lock
movsb
aad
lea
je
mov
sbb
sbb
push
xchg
or
jl
cmpsb
pop
push
mov
push
xor
or
sub
mov
int3
mov
hlt
fisubs
sub
sub
testl
mov
es
cli
dec
pop
jmp
add
scas
add
fs
fincstp
mov
int3
dec
add
and
xchg
sahf
inc
mov
jle
jae
xchg
ljmp
mov
sbbb
test
inc
icebp
out
loop
fwait
jl
rol
das
xchg
inc
sub
push
lret
sbb
sub
xlat
ljmp
aam
adcb
rcrl
ljmp
rorl
fistpl
jne
notb
inc
dec
dec
sbb
imul
push
ljmp
pop
sub
in
cwtl
insb
pop
orb
lcall
sub
movsb
pop
test
lret
cmpsl
mov
add
lock
neg
jge
sbb
fcmovbe
outsl
dec
and
dec
mov
mov
and
mov
into
int
dec
stos
orl
je
mov
pop
out
inc
adc
push
xchg
fwait
aam
pop
pop
xchg
aad
and
push
into
and
cli
outsl
cmp
cmp
icebp
mov
repz
insb
pop
fidivrs
mov
pusha
sub
fimull
sbb
pop
fnsave
and
lcall
adc
jl
ret
xor
rol
sub
sub
sub
inc
cmp
pop
pop
xchg
cmpsb
add
lret
jbe
push
mov
imul
shr
insl
sti
cmpsl
repnz
xchg
adcl
xchg
enter
push
lods
add
fidivl
ret
push
mov
fisttpl
add
jae
xor
inc
fdivrl
jp
stc
sahf
fstpt
testl
das
xor
int3
lock
and
push
pusha
ret
pusha
jo
mov
dec
adc
test
mov
call
add
bound
pusha
outsb
in
jo
out
add
outsl
xor
fucomp
cmp
sbb
stos
jl
pusha
sbb
test
sbb
popa
push
data16
inc
mov
cmp
ror
in
cs
outsb
cmp
mov
lods
jl
xor
dec
cmp
cmp
jecxz
jmp
iret
and
lods
mov
cld
push
push
pusha
in
pop
mov
push
cmc
mov
test
add
hlt
inc
std
iret
out
mov
adc
scas
loope
sbb
dec
fstl
mov
and
jb
outsb
adc
and
std
fmul
enter
lods
pop
pop
iret
sets
call
sub
test
sub
enter
pop
mov
scas
icebp
int3
ja
gs
loopne
mov
outsl
or
in
push
pop
pop
cltd
in
ret
and
inc
cld
or
enter
xchg
lods
jmp
test
popf
add
lahf
dec
sahf
repz
and
xchg
cmp
std
and
pop
mov
xchg
push
lret
mov
faddl
out
push
jno
scas
inc
dec
test
fld
and
int
ds
insl
add
jecxz
xchg
je
mov
inc
outsl
popa
shl
push
sbbl
and
testb
cmp
jl
rcll
insb
or
add
bound
pop
add
pusha
out
sahf
ja
mov
sub
cmpsb
jb
push
shr
outsb
jae
adc
sbb
push
sbb
add
jae
cmpsl
jge
out
and
mov
cli
dec
fsubl
add
les
dec
lds
inc
insb
xor
push
icebp
mov
or
lods
sbb
fsubrl
xchg
loope
add
std
inc
jle
daa
jecxz
cs
mov
ds
imulb
outsl
adc
adc
in
seta
pop
and
xor
jl
out
lds
xor
xchg
bound
lahf
dec
add
add
xor
fsubs
sub
insl
out
mov
inc
inc
pop
das
pop
icebp
test
ficoml
inc
adc
sub
adc
inc
xchg
xchg
mov
stc
paddb
sbb
or
pop
arpl
nop
adc
out
and
out
incb
adc
mov
daa
incl
push
inc
loopne
jle
cmp
mov
mov
mov
sbb
test
inc
add
mov
inc
out
cmpsb
addr16
sahf
dec
xchg
sub
lds
adc
adc
setl
sub
fstps
test
ret
mov
mov
mov
scas
nop
pop
push
add
dec
es
adc
mov
mov
xchg
scas
cs
repnz
mov
pop
or
stos
adc
in
pop
push
scas
mov
arpl
pop
xchg
int3
cld
adc
or
sbb
jno
lds
aaa
jp
sti
mov
cmp
xchg
mov
dec
cltd
mov
sub
cmp
xor
pushf
adc
scas
pop
cmp
push
xor
push
adc
mov
sub
adc
in
pushf
ja
repnz
mov
pop
icebp
jo
jecxz
push
or
or
out
dec
das
daa
cmp
in
mov
xchg
add
ds
add
dec
mov
cmc
repz
leave
lock
frndint
aaa
test
and
inc
psrld
jns
mov
les
stos
cwtl
lods
adc
fnstcw
mov
mov
aam
mov
or
shrb
push
cli
add
cwtl
movsl
mov
out
ja
and
add
cld
pushf
mov
mov
xlat
sbb
pop
mov
fidivs
arpl
push
jno
mov
mov
fidivrs
aaa
mov
pop
mov
adc
mov
and
aas
popa
mov
idivb
add
addr16
outsb
cs
cmp
test
pop
cmpsb
int
or
jnp
mov
inc
imul
push
divb
lcall
daa
mov
lret
mov
mov
jnp
cli
jl
mov
xlat
test
repnz
mov
pop
dec
xchg
lds
shlb
iret
and
add
aaa
aas
jge
insl
scas
in
in
cmc
ret
loop
push
cmpsl
outsb
fistpl
popf
xor
pushf
rorl
sub
rcrl
add
jbe
sub
arpl
pop
adc
mov
sbb
cmc
or
mov
into
push
mov
out
mov
andb
ljmp
jns
outsl
ret
jge
insl
push
cmc
cmp
xor
sbb
fldcw
xor
mov
and
pop
or
lock
loope
mov
psubsw
mov
jge
incb
leave
adc
cwtl
fsubl
test
xchg
divb
lret
lret
scas
int3
mov
adc
repnz
or
adc
loopne
scas
rolb
in
stc
add
mov
mov
in
pop
jge
stc
inc
push
push
pop
add
into
jne
ret
or
mov
add
ret
jb
shlb
and
cmp
enter
imul
in
fldcw
cmp
dec
lods
mov
push
xor
jp
and
jns
cltd
xchg
les
imul
lret
orl
neg
loopne
repz
jge
inc
add
scas
push
sbb
ret
cld
hlt
and
or
dec
loopne
xchg
mov
jbe
call
push
push
and
fptan
mov
mov
add
sub
sbb
cli
pop
xchg
str
pop
push
inc
xlat
fisttpl
ret
and
in
popl
cmpsb
mov
pop
dec
push
dec
ret
mov
xchg
das
pop
or
add
cmpsl
lods
sbb
push
push
fwait
sbb
mov
mov
and
push
dec
cmpsl
sub
cmpl
fiaddl
cmpsl
and
fcmovnu
and
inc
pushf
push
dec
sbb
push
sbb
pushf
pop
cld
sti
ja
in
cmp
pusha
mov
inc
lret
cmp
and
shlb
cmp
jmp
lea
mov
bound
repnz
pause
mov
push
dec
subl
ja
mov
adc
popa
lock
aas
sbb
js
stos
inc
mov
popa
jnp
adc
pop
scas
bound
sub
pop
leave
jg
ret
sbb
jne
dec
outsl
xchg
cmp
or
movsl
movsl
ret
push
mov
sbb
mov
insl
or
ljmp
pop
aad
sbb
xlat
push
dec
mov
fcmovbe
mov
and
add
out
push
inc
xchg
sbb
out
pusha
andl
push
stos
mov
xchg
lods
xor
sub
jns
pop
mov
and
xorb
jge
jmp
inc
cmp
fimull
sbb
pop
lcall
lahf
mov
jne
stc
mov
and
mov
popf
cmp
jle
add
in
mov
fildl
xchg
add
int
test
pop
fucomi
jo
pop
xor
insb
test
jp
jnp
bound
mov
inc
and
sbb
nop
popf
enter
push
or
inc
pop
sbbl
popf
mov
jns
inc
in
out
iret
cmp
jb
push
aam
or
icebp
adc
enter
scas
mov
ret
test
aad
xchg
mov
mov
add
mov
rclb
das
lret
and
lods
dec
mov
lahf
mov
ret
fs
cmp
movsl
je
stos
push
ds
sub
mov
aad
cmp
dec
test
sbb
mov
inc
cmpsl
pop
mov
xchg
lea
out
nop
nop
aad
out
in
cmpsl
sbb
int
bound
xor
pop
jb
cmpsb
inc
cmp
and
imul
lret
nop
jnp
sbb
outsl
ret
inc
lods
xor
pop
sub
in
idiv
hlt
gs
lcall
xor
and
out
int3
lcall
pushf
cwtl
ds
inc
xchg
pop
test
es
mov
stos
mov
mov
lcall
idivl
enter
out
popf
jp
and
dec
loope
xor
insl
cmp
sbb
rolb
test
sub
les
aam
mov
in
or
pop
or
aas
cld
push
dec
jb
sar
call
lcall
xchg
or
add
push
xchg
int
in
insb
sbb
and
movl
adc
push
cmp
mov
jecxz
pop
shll
jp
popa
out
push
fucom
clc
adc
pop
inc
test
adcb
mov
or
push
imul
jp
mov
inc
daa
cs
clc
add
insl
mov
lret
int3
xchg
sub
jns
pop
jl
in
fsubs
ds
jns
dec
or
aaa
sbb
pop
mov
xchg
sbb
out
xchg
or
lcall
ds
inc
rclb
jl
mov
dec
pop
pushf
fmull
das
xchg
and
das
jecxz
mov
pushl
mov
xor
cmp
or
jno
in
sub
outsb
test
push
arpl
inc
mov
mov
push
aad
aaa
sub
or
mov
and
inc
mov
jb
lds
pop
inc
fildl
fiadds
xchg
jecxz
cmpl
data16
fnstsw
xchg
fstpl
sbb
cmp
sbb
ja
insl
cli
mov
outsl
dec
add
mulb
push
adcb
pusha
ss
out
sub
testl
mov
fnstenv
xchg
xchg
ret
test
ror
jp
leave
jp
repnz
scas
and
push
imull
xchg
jecxz
daa
adc
jmp
mov
add
dec
pop
add
jp
pop
jp
imull
mov
repz
ljmp
scas
jl
dec
sub
and
push
aad
int
xchg
sbbl
mov
sbb
cmc
dec
push
mov
bound
mov
mov
or
sbb
das
repz
xor
pop
ret
bound
pop
push
icebp
lods
jmp
xor
xor
xlat
inc
push
fwait
mov
cli
js
sbb
push
adc
sti
das
add
add
push
mov
cltd
mov
jnp
rorl
mov
daa
aam
and
push
mov
lahf
lock
les
pop
enter
xchg
pop
adc
lea
jae
shll
in
sub
testb
xor
xchg
pop
in
and
adc
cmp
testl
rorb
mov
xor
outsb
mov
cmp
sub
and
mov
xor
fstps
sarb
ljmp
insl
ja
scas
cmp
xlat
and
in
sub
notb
adc
sub
pop
mov
into
and
or
leave
xor
dec
lods
leave
or
add
xor
add
fcmove
mov
in
les
enter
into
push
les
dec
outsl
aam
jo
mov
sbb
movsl
in
icebp
enter
scas
into
pusha
rorb
and
cmp
mov
sahf
std
or
out
out
xchg
jbe
pusha
mov
jecxz
out
pop
test
jp
outsl
ret
mov
pushf
sub
push
je
dec
outsb
fistl
es
subl
leave
mov
lea
jo
ror
sbb
mov
sbb
xchg
or
pop
jl
add
and
pop
loop
xchg
int
cmp
sbb
adc
ficoml
dec
cmp
aaa
push
and
push
seta
pusha
cmc
mov
jae
xor
inc
and
fwait
dec
stos
cli
mov
lock
xor
cmp
push
in
mov
sbb
xor
dec
out
cmp
stos
push
push
inc
shlb
in
or
mov
mov
xlat
mov
cli
xor
movsl
pop
push
mov
cwtl
lret
nop
xchg
pop
cwtl
lods
push
and
sbb
in
xor
xchg
repnz
mov
or
add
dec
arpl
daa
fnstcw
lahf
inc
cli
inc
push
leave
dec
xor
mov
xor
cmp
pop
movb
inc
adc
and
pop
into
rcrl
adc
mov
pop
sub
inc
xor
jb
pop
cmp
pop
sub
scas
insb
leave
stos
mov
push
mov
add
xchg
mov
stos
pop
mov
in
xor
and
xchg
sbb
shll
imul
pusha
rorb
sbb
sbb
repnz
mov
cld
xor
sar
scas
mov
mov
xchg
in
add
test
rolb
das
mov
enter
or
pop
in
mov
add
jge
xor
enter
jmp
cld
pushl
cmp
lea
rcr
nop
cmpsl
lods
mov
and
pushf
rcrb
enter
xchg
and
rorb
xor
cld
in
pop
in
mov
pop
and
jb
rcrl
xchg
sub
xchg
addr16
add
stc
xchg
icebp
pushf
push
mov
rclb
and
mul
sub
sub
push
mov
subb
loopne
push
pushf
stos
or
je
fsub
mov
repz
sbb
sbb
ljmp
adc
jl
xchg
xor
das
mov
pop
xchg
or
xor
lret
jns
mov
push
shrl
int
jecxz
aaa
push
add
mov
mov
mul
mov
jle
outsb
enter
push
stos
or
inc
testb
fs
mov
inc
dec
cwtl
repz
jae
adcb
cmp
fs
iret
jg
pop
sahf
cli
xchg
add
call
aad
mov
adc
dec
outsb
sbb
lock
cltd
dec
rclb
mov
xor
push
mov
sbb
enter
nop
push
test
rol
ret
jb
sahf
in
xor
pop
mov
jnp
ds
shlb
shlb
clc
mov
mov
adcb
shrl
sub
ret
jo
push
in
sub
pop
push
daa
push
call
mov
out
mov
pusha
loop
cmpsl
adc
jae
mov
les
repnz
ss
cmpl
in
js
insl
scas
je
into
andb
loopne
dec
xor
sbb
mov
jge
push
sbb
dec
mov
scas
and
mov
push
inc
out
push
add
push
cwtl
mov
and
iret
mov
and
mov
repnz
mov
lahf
es
and
test
adc
sbb
cmpsb
jbe
mov
mov
xchg
jmp
pop
jmp
shll
mov
out
arpl
les
or
cmp
pop
dec
ss
mov
inc
pop
dec
cmp
push
stos
cmp
stos
jge
sub
outsb
hlt
testb
push
pop
rcrb
pop
mov
les
jg
nop
fwait
dec
push
mov
and
ljmp
leave
rolb
sub
sbb
adc
push
jb
scas
sub
xor
push
cmp
fists
stc
es
shlb
sbb
jb
pop
cltd
push
into
rcrb
or
push
push
gs
jno
push
or
sub
dec
sahf
inc
std
mov
sbb
repz
adc
jno
test
nop
movsb
adcl
test
lret
aas
sbb
dec
pop
rclb
add
dec
push
sub
lods
stc
lret
addb
dec
dec
mov
ja
xorl
xchg
daa
bound
or
rcrl
pop
mov
push
lds
cld
adc
lret
dec
imul
testb
icebp
dec
sbb
rol
inc
fisubrs
jnp
mov
jne
mov
mov
cs
ficoml
aad
in
mov
clc
movsl
adc
add
ss
add
stc
pop
imul
ret
add
pop
jg
nop
push
cli
sbb
dec
pushf
xor
and
call
jae
ret
loope
jge
pop
jge
pushf
je,pt
cmc
jno
aam
mov
out
fdivp
and
daa
imul
in
decl
xchg
cmp
jbe
add
mov
aad
cmpsb
jbe
cltd
lea
and
stos
fsubrs
inc
push
xchg
push
push
in
mov
xchg
cmp
xlat
jb
jl
push
repz
aam
addr16
add
mov
adc
stc
jne
pusha
lods
movsb
adc
xchg
adc
stos
stos
or
dec
das
jnp
pop
fstpt
sti
ret
push
jp
aas
push
ljmp
sbb
sti
mov
xor
lea
cmpb
aaa
add
jo
pop
nop
jg
fisubrs
adc
sub
add
dec
lret
enter
xchg
jae
jecxz
mov
lret
out
lds
sahf
cs
mov
cmp
xchg
loop
push
inc
in
mov
stos
adc
mov
ljmp
mov
adc
mov
or
sbb
sbb
ljmp
add
ja
je
inc
mov
jp
cmpsl
shll
pop
pop
ficoms
xlat
stos
loope
daa
jg
xor
mov
stos
mov
es
cli
mov
inc
cmpsl
mov
adc
xchg
in
addr16
dec
je
aad
rcr
jo
xchg
jo
dec
sub
popa
int3
sahf
push
sbb
pop
inc
push
leave
into
sub
or
incb
pop
ret
push
push
lret
dec
xchg
jl
rcll
pop
and
mov
roll
incl
jo
gs
jno
dec
outsl
sub
mov
lret
inc
ljmp
out
clc
lods
adc
sti
mov
inc
fisttpl
rcll
xchg
addl
lods
add
sahf
fildl
jb
and
cmp
sbb
stos
imul
jle
xchg
jmp
pand
cmp
push
xor
movsl
jp
xor
xchg
test
push
mov
enter
loop
jge
sbb
mov
mov
sti
mov
popa
rclb
sub
pop
push
or
arpl
fbstp
popf
pop
and
add
mov
mov
fmull
adc
or
pop
mov
jne
insl
mov
out
adc
sub
pop
cld
push
mov
pop
repz
or
ljmp
lea
inc
inc
cmp
sbb
mov
sbb
stos
in
addb
sbbb
mov
xchg
cli
shll
sbb
push
sub
push
inc
mov
xlat
and
xchg
jle
aam
dec
lret
in
addr16
cld
inc
mov
mov
jge
mov
push
mov
and
in
mov
sub
dec
lods
mov
into
push
push
xor
ja
stos
test
scas
mov
xchg
fsubr
dec
xor
bnd
dec
loop
inc
push
dec
adc
add
mov
xchg
and
iret
jmp
xchg
push
inc
je
dec
insb
popf
popf
xchg
sub
xor
inc
or
int
loop
and
push
fnstsw
insb
xchg
aad
dec
jle
gs
stc
test
push
ret
imull
cs
xlat
mov
mov
sub
xlat
pop
pop
rcl
sub
adc
or
pop
xor
xchg
mov
sub
js
std
dec
push
push
iret
fdivs
mov
outsl
out
movsb
icebp
pop
loop
add
sbb
repnz
mov
ljmp
mov
add
mov
adcl
fwait
in
in
fldenv
push
add
push
jg
test
xor
nop
sbb
test
out
push
repz
xor
je
movsb
push
xor
divl
movsb
push
dec
dec
sub
aaa
xor
or
add
enter
rclb
inc
test
in
cli
int
test
xchg
cmp
xchg
test
mov
jo
cmp
fstpl
shll
outsb
add
cmp
loopne
xor
loopne
rclb
mov
pop
fistpll
dec
jge
sbb
push
call
call
leave
sub
repnz
adc
sbb
hlt
add
cld
ror
xchg
mov
cmpl
sbb
movl
lahf
pop
mov
mov
adc
sub
xchg
les
or
hlt
pop
movsb
imul
xchg
fcmovnb
pop
fwait
sbb
int3
js
inc
push
pop
stc
in
cmp
jnp
jno
in
iret
cwtl
jnp
clc
cltd
in
fdivl
xor
subb
sbb
sub
test
popl
xchg
xor
cmp
jne
hlt
push
and
adc
cld
sbb
pop
xchg
pusha
inc
inc
push
call
jp
mov
lahf
add
aas
mov
mov
test
outsb
sub
pop
roll
lods
clc
cwtl
or
mov
pop
jbe
jbe
imul
push
in
div
mov
shll
pop
or
mov
popf
enter
leave
dec
or
xor
addr16
sbb
addr16
mov
andl
push
loope
sub
xor
repz
out
subl
cs
cmp
add
mov
stos
mov
fwait
mov
and
mov
scas
sbb
dec
mov
orl
mov
test
jecxz
outsb
inc
insl
shlb
inc
dec
in
cs
stos
in
in
pusha
and
into
inc
repz
xor
rorl
popf
inc
jl
mov
sbb
jmp
sahf
add
cmpsl
into
jno
jbe
lcall
xor
test
sub
ss
mov
sub
fucomip
imul
push
fidivs
xor
and
mov
pusha
cltd
imul
cmpsb
inc
mov
mov
mov
inc
test
leave
push
arpl
push
pop
scas
outsl
mov
rep
mov
sar
and
jno
aaa
hlt
in
jne
add
and
int
repnz
jmp
dec
xchg
aas
push
addr16
dec
popf
les
int3
or
fstps
ja
xchg
loopne
cmpsl
in
mov
dec
sub
dec
les
push
adc
rorl
sub
cmp
adc
addb
jecxz
fcoml
aad
in
into
sub
into
je
vfrczsd
xlat
repz
sti
fstps
sysret
leave
in
sbb
ljmp
pop
cmp
xor
ja
sbb
push
scas
pop
xchg
adc
insl
jae
test
nop
and
fstpt
call
imul
jmp
sub
fisubrl
jp
inc
cmc
das
xchg
or
out
ss
movsl
xchg
nop
int
pop
int3
mov
sti
fildll
cmp
pop
repz
mov
fmull
in
mov
push
inc
in
arpl
sbb
jp
adc
out
pop
mov
aad
stos
bound
movsb
call
lds
jno
in
cmp
and
cmpsb
test
push
xor
xchg
xchg
adc
in
subl
pop
xchg
sub
xor
jne
insl
xchg
ja
loopne
inc
idivb
test
stos
fbld
pop
push
or
and
or
pop
cmc
lds
std
jecxz
fwait
rorb
mov
mov
xchg
push
xchg
mov
sub
adc
aaa
fdivl
add
popf
mov
xchg
adc
mov
mov
adc
or
mov
inc
and
shll
paddusw
push
fldt
and
pop
es
les
xchg
adc
and
sti
xchg
cld
jge
test
fnstsw
pop
fs
or
dec
loopne
roll
out
cmp
pusha
jge
mov
ja
fdivs
scas
adc
sbb
dec
pop
fsub
jno
data16
xchg
aas
pop
mov
lea
mov
scas
xchg
daa
cmc
jl
push
pop
sbb
pop
mov
iret
icebp
jl
fimuls
or
bswap
cmp
cmpsb
mov
xor
inc
inc
inc
xor
ret
jo
mov
mov
insl
inc
je
push
dec
sbb
xchg
adc
cld
sbb
sub
scas
sbb
add
and
pop
dec
or
push
fsts
outsl
dec
inc
mov
xchg
jecxz
sbbb
pop
stos
stos
xor
fcoms
dec
add
mov
orl
xor
mov
test
sub
mov
pop
leave
push
in
dec
mov
jns
push
inc
outsb
push
sti
notb
jnp
sbb
es
and
jl
arpl
or
cmp
fsubl
xorl
adc
mov
sti
fsubrl
fcoml
xchg
int
lods
cmp
bound
test
imulb
sub
push
push
dec
fdiv
sub
sbb
inc
test
lret
sahf
mov
cmp
sub
sti
test
mov
pop
out
pusha
add
into
push
es
sbb
repnz
xor
in
ljmp
in
cwtl
stos
push
sub
gs
or
and
lcall
cmp
xor
inc
pop
std
inc
and
js
cld
adc
jp
loopne
pop
call
andb
or
cmp
je
in
adc
fs
dec
dec
jo
fisubrs
cwtl
fimull
mov
mov
int3
mov
push
rorl
cmp
sti
xchg
mov
or
mov
popf
repz
sub
outsb
inc
pushf
aaa
outsb
into
fs
addb
xor
adc
popl
xchg
mov
or
out
or
cmp
push
add
jno
xor
xchg
rcr
fdivs
in
add
pop
mov
and
inc
xor
xchg
cli
cmp
mov
stos
leave
in
mov
subl
outsl
jb
cmpb
sub
mov
shrb
push
xchg
andb
add
push
push
rorl
or
das
push
mov
sub
stos
lods
mov
xchg
or
aad
pop
pop
inc
idivb
inc
or
in
aas
push
dec
jp
adc
enter
dec
jnp
fwait
adc
cmp
mov
gs
mov
cmpsb
push
push
jno
and
mov
mov
mov
jb
enter
sbb
pop
mov
mov
sub
test
sub
push
aam
fildl
inc
pop
pusha
dec
ljmp
sbb
mov
ss
dec
mov
push
fmuls
pusha
jne
adc
std
push
mov
out
cmpb
bound
loop
mov
jb
cli
mov
cmpb
test
mov
push
ja
iret
mov
mov
jno
shl
in
cwtl
mov
leave
sarl
aas
push
xchg
or
xchg
lcall
jp
mov
inc
mov
repnz
out
xchg
mov
fldl
adc
sbb
cmp
popa
addr16
clc
push
sarb
into
push
lret
negl
jbe,pt
or
pop
or
cwtl
mull
mov
xchg
clc
dec
mov
dec
fdiv
subl
rcr
shll
adc
cmp
dec
inc
xchg
mov
in
push
and
push
dec
adc
ss
push
sbb
jge
loop
jg
push
out
inc
shll
mov
jl
lds
dec
mov
or
ret
repnz
push
aam
test
dec
iret
inc
out
xor
and
dec
jmp
push
movsl
xchg
popa
inc
scas
mov
ljmp
repnz
insb
jmp
pop
xor
cmp
mov
push
sub
xchg
mov
dec
sub
int3
pusha
imul
sbb
outsb
and
daa
test
xchg
jmp
push
lret
lods
jbe
mov
inc
pop
push
push
iret
ljmp
popf
and
add
test
in
mov
push
sbb
out
dec
jb
mov
xchg
data16
call
mov
in
lods
xchg
mov
std
xchg
sub
add
out
xchg
out
cmp
pop
adc
movsl
or
or
das
bound
insl
push
jg
xchg
repz
pop
je
insb
ror
loopne
fwait
pusha
add
shlb
xor
fisttpl
gs
and
jbe
into
mov
dec
insb
pop
adc
mov
das
mov
adc
fdivl
in
sub
push
nopl
mov
mov
fisubrl
mov
mov
test
mov
fmull
out
and
into
mov
jl
stos
mov
inc
and
loop
or
lret
bound
ret
cmc
xor
jb
mov
add
enter
loope,pn
rclb
dec
inc
jb
mov
repz
repz
gs
out
cmp
push
jge
test
xchg
lock
jl
gs
scas
jns
in
stc
ret
pop
push
jle
sub
iret
rclb
imul
pop
scas
push
repz
push
movsb
mov
in
xor
xchg
add
jmp
pop
add
cmovae
sub
popl
mov
fcmovnu
data16
lods
out
sarb
adc
sbb
aaa
mov
iret
mov
mov
fldt
cs
mov
lock
mov
xor
fnstenv
cmpsb
dec
pushf
bnd
cmpsl
pop
jecxz
sti
adc
fst
sahf
add
dec
jmp
mov
iret
sbb
cs
lret
or
out
fs
cltd
and
sarb
cs
pop
dec
xchg
adc
out
add
scas
repz
fsubrs
sbb
ror
push
pusha
pop
sub
ds
or
lea
mov
shlb
adc
xchg
xchg
jmp
jnp
mov
xor
test
stos
push
addl
jg
push
fwait
jmp
jg
sbb
jno
fcomps
insb
push
jbe
mov
jg
mov
mov
out
sub
test
cmp
lahf
int3
cld
jp
loope
mov
lret
fildl
stos
mov
pop
popa
stc
adc
cmp
mov
imul
mov
and
lret
test
inc
add
aad
or
dec
in
mov
dec
jecxz
iret
insl
lcall
mov
arpl
inc
pushf
ss
jno,pn
dec
ja
dec
jno
xor
outsb
mov
movswl
call
js
and
outsl
mov
ror
and
mov
mov
mov
inc
or
and
jmp
rcrb
sbb
or
mov
cmp
iret
jnp
aas
lea
or
push
dec
cltd
shrb
pop
pusha
insb
pushf
adc
in
add
lods
ljmp
shrb
push
dec
pop
lock
cmp
lret
and
ret
and
jno
cwtl
mov
lds
insl
push
ja
lcall
jnp
xchg
aas
add
mov
pop
jl
stos
aam
shl
mov
adc
mov
imul
aaa
xchg
cmpsl
pop
jle
data16
or
lret
ljmp
daa
fisttps
jmp
mov
push
cmpsl
fistpl
pop
scas
or
sbb
push
idivb
popf
and
add
es
xor
add
inc
and
mov
mov
push
fwait
lods
inc
push
out
cltd
xor
mov
jg
out
pushf
test
or
push
fsubrp
xchg
scas
sub
jae
cwtl
add
ljmp
repz
jno
xor
jmp
add
test
cmp
popa
aas
in
xchg
cmpsl
xchg
inc
pop
pop
ljmp
jae
dec
jecxz
adc
push
cmp
xchg
mov
mov
roll
mov
fldpi
fbstp
pop
mov
sbb
repz
aad
shl
pop
dec
inc
mov
and
adc
leave
pop
sbb
loope
adc
xchg
add
inc
dec
sub
cmpsl
mov
rcr
enter
in
hlt
call
mov
popa
hlt
cli
imul
loop
es
aaa
and
jmp
out
inc
mov
movsl
mov
subl
mov
in
je
call
pop
sub
dec
xchg
lea
mov
ret
xlat
xchg
push
inc
dec
rclb
adc
subb
repz
inc
add
jno
pop
and
lock
xor
jl
ret
repz
inc
pfrsqit1
mov
popf
sub
repz
xchg
test
int
stos
leave
jbe
les
sbb
add
cmpsb
and
mov
jmp
dec
sbb
idiv
lahf
xchg
cmp
int
adc
mov
xchg
int
jecxz
cmpsl
dec
ret
addb
imul
fnstenv
push
mov
cmp
lret
pop
jbe
add
icebp
mov
xor
rcr
lcall
adc
in
and
loope
xor
test
mov
add
add
insl
xchg
sub
lret
xchg
out
lds
lret
mov
or
lods
dec
ret
orl
mov
dec
jnp
jbe
mov
cld
popa
mov
shl
add
sbb
sbb
andb
popf
dec
cld
test
out
hlt
add
cltd
adc
mov
or
sbb
inc
scas
jbe
mov
outsl
movsl
sub
addr16
into
test
cli
testl
jle
xor
aad
and
xor
jnp
int
pop
fistpll
mov
sbb
mov
cmpsl
jb
cmp
sahf
adc
sub
lds
sub
aad
jno
aam
adc
cmc
pop
mov
mov
mov
sbb
fsub
sub
mov
inc
or
test
push
mov
dec
cwtl
aas
mov
test
add
cwtl
jae
push
in
rclb
add
cmpsl
out
adc
mov
sbb
cli
shrb
cmp
xchg
or
mov
arpl
mov
addr16
xchg
pushf
sti
push
inc
movsb
or
jmp
sbb
dec
in
cmpsl
sbb
cld
dec
adc
icebp
mov
outsb
scas
insl
jecxz
xchg
fdivrs
mov
scas
ja
dec
rorl
jo
lahf
lcall
push
cmp
xchg
adc
pop
mov
dec
daa
add
mov
xor
sahf
dec
jno
push
cmc
xor
xor
das
lea
adc
jb
dec
inc
cmpsb
jecxz
std
int3
xor
jp
pop
fs
call
sbb
dec
icebp
pusha
push
dec
pop
lret
xchg
stos
dec
lcall
push
mov
in
test
or
cmp
sub
xor
or
pusha
xchg
outsb
pop
and
clc
arpl
xchg
ljmp
out
je
js
jns
and
pop
xchg
test
cmc
pusha
xor
inc
mov
fcoms
mov
les
cltd
jecxz
aas
and
push
xor
mov
cmp
stc
push
dec
notb
cmc
aad
push
int3
jns
adcb
mov
inc
push
fmull
bound
fnstcw
inc
push
jae
push
xor
add
dec
pop
fstl
adc
push
repz
fwait
adc
add
enter
xor
jo
enter
das
fsubrs
lret
or
jae
push
aas
sub
push
andl
enter
pop
clc
jl
lahf
insl
push
out
or
repz
mov
call
imul
imull
loop
mov
jne
add
lds
insb
in
in
scas
mov
in
jne
xor
movnti
movsl
pop
sub
sbb
sbb
or
or
push
mov
or
or
out
or
xchg
mov
ss
ss
dec
clc
jle
mov
fsubs
sub
in
mov
mov
lods
pop
aas
jg
xchg
and
dec
mov
sbbl
mov
jnp
dec
scas
mov
dec
popf
jbe
in
jp
mov
cmp
lea
addr16
push
cmp
cmpsb
ficoms
imul
in
fistpll
loop
rclb
mov
and
dec
add
loopne
into
jmp
bound
or
stos
movsb
jns
pop
adc
jecxz
jp
out
jns
or
inc
pop
daa
inc
mov
imul
mov
fstps
adc
mov
fdivrl
fisttpll
pop
mov
push
cmp
jns
dec
adc
mov
shr
bound
adc
xor
jle
outsl
mov
mov
xor
into
dec
adc
lcall
into
fidivrl
jp
ss
sub
add
xchg
mov
mov
rcl
scas
repz
adc
pop
or
push
loopne
sub
xchg
jl
and
pop
sbb
or
enter
dec
or
outsl
scas
cs
pop
or
imul
xchg
xor
sub
fcompl
xor
mov
mov
push
lods
push
adc
cwtl
add
lock
cmp
ficomps
xor
mov
jmp
cmpl
cs
dec
data16
nop
cmpsl
or
popa
test
jmp
push
xor
ljmp
aam
int3
les
jge
sarb
cmp
rorb
cli
setae
push
xchg
addr16
pop
mulb
popa
scas
fldt
xlat
mov
jo
mov
adc
sbb
test
xchg
inc
test
or
mov
inc
jnp
jae
cmp
cmp
or
xor
pop
pop
xlat
leave
out
outsb
sbb
ds
jp
mov
das
cmp
jb
loope
push
sti
sub
mov
pop
jne
sub
inc
popf
movsl
cmpsb
cwtl
pop
repz
bound
imul
push
iret
jne
push
push
adc
dec
addr16
mov
sub
ja
mov
imulb
lock
rcrb
add
js
arpl
insb
js
and
pop
fstps
nop
cmp
dec
icebp
jmp
xor
jg
add
or
mulb
adc
sahf
push
imul
lods
mov
sub
push
movsl
push
lahf
push
and
repnz
aam
adc
mov
xchg
jmp
mov
sti
lods
add
jbe
fidivrs
mov
loopne
mov
add
sub
mov
mov
fs
mov
iret
fdivrs
sbb
adc
test
adc
pop
mov
and
sbb
sbb
mov
pop
subb
cmp
mov
dec
mov
sarl
cmp
xchg
jb
lods
mov
inc
lods
or
mov
insl
mov
lock
and
scas
cmpsl
cwtl
dec
lock
inc
aad
push
fmull
gs
aas
dec
imul
or
jp
test
fcmovnb
dec
mov
cli
lods
jno
int
xchg
dec
push
arpl
pop
push
xchg
popf
int
pop
cltd
scas
loope
push
xchg
out
icebp
test
stos
xlat
test
loop
not
stos
pusha
aaa
ret
jle
jl
mov
mov
pop
gs
das
dec
lock
sub
pushf
test
dec
jle
add
mov
pop
lock
shl
fs
pop
pop
les
fcmovbe
in
sbb
xor
ss
mov
pop
lret
repnz
lock
push
inc
out
push
test
mov
inc
cmp
sahf
mov
cmpsb
sahf
je
fimull
sbb
dec
mov
repnz
aaa
fcmovu
jnp
test
popa
idivb
adc
sbb
cmpsl
ja
addb
adcb
mov
and
mov
pop
daa
jmp
cmpsl
mov
xchg
push
pop
nop
push
xor
push
mov
xor
and
mov
jg
mov
mov
push
outsb
gs
imul
xchg
in
pushf
scas
adc
ljmp
pop
out
or
mov
jl
shlb
pop
add
out
adc
mov
les
in
sbb
in
das
push
pop
loopne
arpl
xor
dec
inc
in
stos
mov
mov
push
fnstenv
or
adc
shlb
arpl
or
ds
nop
adc
add
sub
jmp
int
sbb
bound
and
jl
adc
std
sub
and
dec
push
lea
loop
sub
std
cmp
cmp
add
shrl
adcl
mov
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
or
inc
mov
jp
push
stc
sbb
push
sarb
rcl
xchg
inc
repnz
aas
or
adc
pop
inc
cs
loop
xchg
add
call
adc
mov
test
push
clc
jae
ss
inc
mov
pop
iret
jl
nop
mov
cmpsb
leave
cmc
xlat
mov
shlb
ds
out
mov
pop
push
sbbb
mov
lods
and
stos
sti
imul
fiaddl
add
cmp
jecxz
lcall
jno
pop
cmp
jnp
mov
jae
test
outsb
das
repz
pop
inc
shrl
jae
push
daa
in
popf
sub
xchg
rcr
xchg
jg
and
scas
sahf
rorl
hlt
dec
push
lods
and
dec
subb
lret
test
jg
popa
out
lret
cmpsl
push
mov
stos
inc
test
xchg
pop
pop
pop
lea
or
adc
mov
or
insl
cmp
mov
loope
cmp
xor
sahf
imul
add
mov
and
jmp
jnp
mov
test
sbb
jb
xor
fs
pcmpeqd
jge
cmp
in
popa
mov
out
pop
iret
ret
stos
sarb
ficompl
and
shlb
insb
in
sahf
mov
inc
push
mov
sbb
fmulp
cmpsl
lret
push
xor
and
pop
mov
movsb
xor
les
ja
inc
out
xlat
cmpsl
inc
adc
fimuls
in
push
add
mov
dec
bound
iret
mov
push
mov
add
pop
mov
dec
addb
ss
xor
cltd
add
pop
dec
mov
jmp
roll
scas
hlt
jne
pop
sbb
sti
or
scas
push
adc
loop
push
outsl
add
sti
je
out
cwtl
rcl
push
stc
dec
nop
sbb
sbb
andb
pop
fdivrl
hlt
mov
loop
and
dec
push
lods
push
imul
dec
xchg
daa
mov
test
aam
mov
pop
scas
gs
cmc
push
imul
and
pop
scas
jb
mov
pop
inc
daa
lahf
pop
or
loopne
scas
ficompl
in
adc
add
mov
pop
cmp
xor
cmp
cltd
stc
pop
je
or
jnp
ficoml
mov
cmp
add
in
pop
sbb
sbb
jo
and
jb
pop
cmp
imul
test
mov
cltd
or
cli
sub
ljmp
mov
rolb
inc
pop
mov
mov
cwtl
shlb
mov
mov
cmp
popf
add
pop
cmp
xor
icebp
out
int
sbb
js
loope
fisubrl
pop
mov
mov
ficomps
cwtl
icebp
jecxz
iret
mov
or
mov
dec
sahf
push
dec
call
or
ss
inc
imul
nop
dec
mov
dec
into
ljmp
push
inc
inc
jne
mov
imul
mov
mov
sbb
mov
hlt
mov
jb
test
and
fcompl
scas
sub
bound
cmp
ja
sahf
push
mov
pop
xchg
dec
fildl
add
cli
and
mov
jb
push
xchg
adc
inc
pop
gs
unpcklps
add
sub
mov
fmull
cmp
cld
pop
mov
sbb
xor
sub
dec
fcomps
push
xor
lret
push
sub
std
pop
dec
sbb
jmp
add
fwait
imul
sti
add
addl
sub
mov
daa
stos
loop
into
xchg
mov
and
aad
jmp
pop
mull
cmc
lcall
sub
mov
stos
adc
sbb
inc
fdivp
lods
shll
fstpt
cwtl
icebp
je
out
outsb
pop
jbe
data16
add
inc
mov
bswap
outsb
sahf
pop
popa
dec
jne
dec
sub
in
push
mov
ljmp
pop
pop
in
xor
push
nop
fidivrs
xchg
stos
mov
cmp
cwtl
xchg
dec
add
fcmove
int
lds
mov
sub
adc
out
fs
mov
adc
mov
or
xor
add
or
push
addl
mov
xchg
dec
xorb
xor
jp
dec
stos
adc
and
mov
popa
add
push
fisttpl
sub
outsb
fistl
dec
aad
aad
leave
mov
imul
push
fisttpll
mov
lock
push
mov
jo
test
call
insl
mov
mov
ds
xor
xchg
cwtl
sbb
adc
xchg
scas
push
mov
lret
xchg
jb
loopne
pop
inc
dec
push
test
inc
jne,pn
mov
dec
movsb
daa
fcomip
sub
call
jne
fidivrl
lret
in
fdivrl
sqrtps
push
aam
rolb
and
mov
xor
negl
fildl
add
sub
stos
out
rcr
pop
jl
cmp
into
inc
xchg
shl
mov
and
leave
ror
push
push
and
imul
and
jmp
xor
hlt
stos
aad
jae
or
movsl
jno
push
lret
inc
loopne
add
dec
mov
jmp
lods
xchg
in
dec
sbb
out
mov
adc
mov
xor
fildl
push
sbb
inc
xchg
push
cmc
popl
push
lods
aaa
jle
adc
ret
inc
mov
daa
aaa
adc
cmp
shll
gs
test
gs
int
aas
cltd
sbb
mov
add
cld
xchg
leave
pop
shll
adc
mov
loope
nop
sbb
sub
mov
or
loop
int3
mov
push
and
imul
xchg
jo
pop
mov
cs
xchg
dec
or
les
inc
push
jg
mov
dec
call
sub
movsl
fstps
push
xor
inc
pop
mov
in
push
mov
outsl
mov
sbb
popf
jl
scas
inc
sub
shlb
add
and
loop
sbb
lcall
je
div
ret
and
iret
dec
cld
faddp
adc
mov
xchg
mov
andl
lcall
sti
adc
mov
sbb
push
dec
and
data16
cmc
xchg
jmp
mov
ss
push
add
mov
int
xchg
and
dec
int3
inc
jo
or
pop
push
dec
jbe
cmp
push
adc
adc
cmp
push
es
mov
fwait
jno
idiv
test
hlt
pop
xchg
mov
movsl
jmp
dec
movsl
jnp
mov
add
add
push
xchg
repnz
jb
pusha
pop
int
pusha
subb
je
and
pop
pop
es
push
mov
movd
repz
out
jecxz
pop
adc
lea
popf
sbb
cmp
or
es
sarb
sbb
xchg
inc
mov
pop
hlt
mov
mov
cmp
cwtl
add
and
into
jmp
xor
sbb
mov
pop
aad
mov
nop
in
fwait
daa
jp
punpckhwd
pop
xchg
jecxz
jl
fsubr
xchg
mov
and
scas
inc
test
add
test
mov
insb
mov
repz
cld
sbb
subb
rolb
and
nop
jmp
inc
imul
add
pop
data16
rcrl
jne
incl
and
mov
add
loopne
leave
mov
sub
int
and
xchg
addl
push
leave
pop
inc
pop
mov
bound
mov
rcrb
cmc
movsl
xchg
dec
addr16
out
add
popa
daa
jg
js
dec
loopne
fs
sub
xlat
sub
pop
add
lcall
push
xlat
and
out
and
out
out
aaa
mov
faddl
sub
call
mov
repz
mov
xchg
sbb
mov
jne
mov
jmp
inc
xchg
adc
ds
test
pusha
mov
test
mov
inc
jne
mov
push
add
inc
cli
test
adc
add
or
mov
adc
sub
fildl
daa
and
aam
inc
testl
cld
adcb
and
pop
mov
sub
pop
dec
mov
arpl
ret
pop
loop
cwtl
mov
ljmp
mov
pop
mov
cmp
mov
and
fxtract
cmc
cltd
loopne
dec
mov
shll
mov
or
enter
mov
leave
or
mov
pop
jnp
enter
and
cmc
outsb
outsl
mov
jle
sub
fdivs
push
daa
push
mull
dec
sub
and
loope
cmp
mov
inc
xchg
arpl
push
in
popf
mov
or
aas
push
cld
push
jl
lahf
lods
jb
dec
and
jno
xor
in
jg
mov
inc
xchg
frstor
xor
daa
and
loop
sbb
pop
sbb
xor
popa
loope
lea
pushf
lods
scas
insl
imul
ja
int3
sub
lret
cmp
sbb
adc
mov
pop
xor
xchg
sbb
dec
test
xchg
nop
paddusw
push
and
sbb
lret
dec
sti
xchg
jmp
adc
mov
push
xchg
dec
dec
clc
sbb
and
lret
xchg
jae
jp
rcl
fisubs
lea
scas
lods
test
pop
loop
lret
mov
test
xor
mov
flds
pop
out
test
sub
sub
cltd
xor
ds
loopne
cmpsl
cmp
jno
push
cmp
cltd
jne
adc
and
cld
mov
pop
inc
loop
mov
add
jne
pop
mov
push
sub
dec
add
push
fnstenv
cmp
and
add
inc
lret
sub
sbb
dec
repnz
adc
clc
gs
into
sub
or
std
dec
or
sbb
adc
lock
mov
pop
mov
jle
mov
sbb
aas
loopne
ficoms
cld
pop
xchg
dec
jg
push
clc
xorb
mov
stc
jl
jne
sahf
or
jmp
jne
movsb
xorl
cmpxchg
lret
aad
mov
cmc
das
mov
ja
dec
jg
or
add
mov
adcb
inc
scas
decb
xchg
mov
dec
cwtl
mov
pop
xchg
lret
add
out
push
dec
cmc
ret
insl
daa
aam
fsub
push
mov
test
lret
roll
rol
jmp
dec
wrmsr
cltd
xor
xchg
mov
cmp
push
sub
xchg
test
push
inc
adc
xchg
movsb
push
or
mov
adc
sbb
mov
js
ljmp
cli
dec
icebp
cld
repz
cmp
and
aaa
adc
or
adc
adcb
ja
dec
xorb
aaa
fwait
push
jl
and
and
leave
sub
or
aam
fadds
jecxz
gs
push
mov
and
lcall
push
xchg
pop
aam
mov
mov
mov
xor
stos
je
test
movsb
pusha
mov
sbb
lcall
inc
call
cli
cli
inc
xor
push
das
dec
test
test
inc
fnsave
test
cmp
lret
mov
mov
mov
sahf
fsubl
out
mov
mov
cmpsb
pop
and
sub
loop
xor
push
std
cmpsl
inc
push
out
adc
add
in
and
mov
push
inc
or
or
int3
popf
push
cmp
sub
std
mov
adc
dec
pcmpgtw
fimull
xor
cltd
inc
sahf
xorl
popf
jns
jle
leave
dec
idiv
aas
push
repz
inc
scas
pop
rdmsr
lds
adc
sub
push
popf
pop
movsb
push
lahf
enter
xor
push
pushf
push
mov
rorl
or
jno
lods
cmp
add
scas
into
sub
ds
stos
or
mov
pop
stos
fs
push
outsb
pop
adc
xchg
mov
mov
in
pop
adc
push
dec
add
fstpl
in
pop
xchg
in
inc
sub
mov
sbb
sbb
decl
xchg
arpl
jecxz
push
repz
das
arpl
or
push
enter
popa
xchg
out
add
push
sub
cli
mov
xor
subb
mov
mov
ss
jmp
push
scas
or
ret
xor
sbb
pop
xlat
cmp
mov
xor
xor
cmp
dec
shrb
pusha
inc
inc
xchg
jo
ja
or
xchg
push
lock
jg
dec
cmp
inc
sti
cmpsb
outsb
test
lods
inc
popf
sub
pop
xor
xorb
xor
addr16
add
or
or
arpl
aad
sbbl
int
scas
int
cs
loopne
jmp
lea
dec
add
jp
sbb
popa
mov
pop
fldcw
bound
nop
shr
xor
or
lcall
ret
adc
call
mov
andb
mov
sbb
cwtl
xchg
int
jle
dec
lcall
inc
scas
iret
or
inc
lret
scas
push
add
push
cs
into
pop
push
fwait
inc
movsb
ret
fwait
lds
mov
cmp
jmp
fdivrl
mov
and
or
scas
mov
and
jecxz
aam
rclb
outsl
ja
inc
cwtl
cmp
or
cmp
sbb
out
es
push
stos
xlat
int3
fidivrl
into
and
add
mov
scas
movsl
jecxz
add
addl
sbb
mov
and
call
lret
ret
inc
fists
adc
jmp
add
xchg
int3
ds
push
xlat
pop
test
rcll
jb
nop
scas
mov
adc
add
jmp
ret
test
cmp
jae
cmp
mov
int
ds
ret
call
sub
enter
cwtl
bound
xor
sub
cmc
loopne
xchg
pop
notl
xor
rcrl
popa
fldl
shll
adc
mov
xchg
cmp
add
pop
std
xchg
adc
bound
mov
idiv
xlat
icebp
mov
push
mov
outsb
cmpsb
pusha
and
imul
movsb
cmp
adc
xchg
test
sahf
test
or
adc
push
push
out
ficoml
int
pop
insl
push
pop
loop
loop
dec
sub
xor
fs
inc
andb
aaa
sub
test
ret
adc
and
dec
adc
pop
cmp
aam
pop
clc
cwtl
in
roll
shlb
scas
mov
loope
mov
dec
mov
xlat
add
rcll
cwtl
imul
js
popf
pop
xchg
stc
add
xchg
adc
mov
or
jbe
mov
push
idiv
mov
pop
pop
xor
lods
pushl
push
xchg
fcompl
lods
outsl
fbld
pop
scas
inc
pavgb
pop
mov
cmp
imul
loope
sub
enter
leave
aas
and
dec
inc
xchg
or
jecxz
out
arpl
je
sbb
inc
pop
add
sbb
test
lock
out
mov
adc
jp
xor
faddl
neg
dec
inc
lret
shlb
imul
vminsd
xchg
inc
jecxz
adc
repz
scas
jle
jp
cmp
and
pusha
jnp
mov
sti
lock
mov
mov
and
into
lret
cwtl
cmp
aaa
mov
sbbb
addl
inc
imul
cmp
out
pop
add
imul
movsl
adc
out
ljmp
adc
inc
bound
aam
leave
xor
daa
inc
dec
adc
popf
mov
inc
loopne
and
call
es
adc
test
lods
aas
cmp
inc
pop
cmp
popl
dec
mov
pop
dec
dec
push
push
or
jns
xlat
xor
or
mov
popa
xchg
mov
mov
jb
xor
shrl
mov
mov
add
cmp
jb
nop
addr16
insb
pop
repnz
movl
mov
xlat
scas
dec
insl
je
mov
and
out
ret
and
mov
lcall
and
lret
incb
xor
lds
pop
test
mov
stos
orl
orl
dec
cmp
fisttpll
fbstp
ja
fs
ds
bound
inc
cmc
adc
das
fs
add
or
pop
push
xor
sub
xlat
mov
dec
gs
sub
adc
cmp
xor
dec
push
out
nop
push
arpl
jg
jl
add
and
out
add
sub
mov
sub
and
cmpxchg
rorl
push
cltd
cmc
pop
int3
lods
inc
jmp
xchg
pop
test
pop
movsl
or
in
sbb
insl
mov
xor
mov
imul
sbb
movsb
push
lahf
xchg
jae
int3
out
add
daa
mov
sar
push
jmp
les
jp
out
jge
jno
mov
xchg
pushf
rclb
push
mov
or
push
mov
inc
pop
sub
mov
rorl
in
pushf
mov
dec
jge
lret
sub
dec
dec
dec
enter
jo
fcomps
xor
push
or
hlt
stos
adc
xchg
mov
mov
dec
cmpsb
ja
mov
sbb
or
mov
jnp
sub
cltd
ljmp
add
test
out
push
cs
fsts
pushl
mov
pusha
leave
add
inc
ret
adc
popf
mov
and
xor
in
pop
sub
xor
clc
mov
test
nop
test
out
gs
hlt
mov
jle
mov
jle
inc
stos
mov
push
insl
mov
in
faddl
or
xchg
mov
psllq
add
jge
iret
adc
or
imul
fadds
sub
or
jae
sbbl
lods
shr
andb
das
jbe
dec
cmpsl
sbb
pusha
iret
push
and
inc
in
push
ljmp
icebp
cmp
je
pop
stc
push
dec
and
push
popa
add
jp
cmc
sbb
aaa
in
cmp
pop
jne
add
and
pop
das
fistpl
add
mov
inc
sti
ja
dec
mov
fsubr
andl
add
lock
dec
mov
bnd
xchg
jg
addr16
icebp
leave
leave
cmp
mov
sub
lock
ss
and
lea
leave
les
sbb
dec
mov
add
or
repnz
pop
push
sub
scas
jno
pop
mov
bound
ret
xor
add
outsl
sbb
pop
sub
push
inc
out
add
mov
out
and
add
push
inc
xchg
das
cmpsl
adc
push
lods
imul
add
lods
rcrl
push
adc
mov
data16
sub
out
inc
xor
roll
loop
cli
jno
shlb
inc
dec
popf
xchg
adcb
test
bound
in
daa
shrl
popa
adc
test
mov
inc
add
in
data16
mov
sti
inc
pushf
in
inc
popa
mov
outsl
xor
sub
jbe
clc
inc
jbe
dec
test
mov
sahf
addr16
jge
adc
push
ror
in
cmpsb
cmc
or
fstpt
shlb
sub
nop
popa
lret
scas
shll
and
call
cmp
xchg
push
sub
inc
enter
test
lahf
push
xorl
dec
int
fs
nop
push
inc
or
mov
int3
nop
fidivs
ret
popl
jne
lahf
dec
cmp
push
lret
pop
mov
into
in
mov
lret
cli
push
lea
push
lds
dec
adc
into
jo
xchg
mov
push
push
jp
jae
gs
sub
pop
xchg
add
xchg
xchg
bound
sti
fbstp
cmp
jp
cmp
mov
repz
inc
inc
insb
pop
lods
stos
inc
mov
or
rcll
push
mov
stos
nop
xchg
sbb
test
mov
pushf
repz
sbb
jnp
jp
jno
push
mov
and
in
movsl
add
les
out
jg
rcr
mov
fld
and
add
jo
mov
adc
cmc
mov
clc
dec
ss
out
cmc
stos
fnstsw
jge
cmp
imul
lock
adc
cmpl
jno
repnz
jns
aam
rclb
inc
cmp
call
or
lods
push
out
jecxz
rorl
push
inc
jecxz
rorl
in
call
jmp
pop
sub
fwait
push
ja
nop
mov
scas
mov
cltd
popf
outsl
pop
incl
cwtl
cmpsb
jnp
aad
in
push
xor
xchg
push
stc
scas
test
addl
and
leave
in
and
sti
cmp
test
xchg
or
mov
add
push
jge
mov
lret
pop
jg
jg
mov
mov
and
insb
pop
xchg
sbb
std
mov
test
roll
std
and
pop
lret
push
jne
ja
mov
test
inc
sub
mov
popa
dec
cmp
sub
and
test
push
pusha
push
mov
jne
sub
repnz
mov
in
inc
in
push
dec
jo
add
jns
loop
in
cmpsb
outsb
pusha
inc
in
or
mov
fistl
and
lods
in
dec
idivb
sub
cmc
out
mov
mov
inc
mov
inc
hlt
and
pop
pop
cmp
sbb
rclb
fidivrl
pop
imul
ds
cmp
pusha
xor
push
shrl
daa
dec
and
cmc
dec
mov
mov
mov
mov
loopne
test
and
add
aaa
sbb
jnp
lcall
nop
sub
add
mov
pop
mov
jecxz
clc
testl
and
ds
push
push
cs
dec
dec
xlat
imul
stc
pushf
add
inc
out
mov
repz
test
mov
gs
pushf
xor
adc
repz
sub
mov
dec
sub
adc
and
mov
xor
popf
stc
sub
arpl
decb
movsl
mov
ret
or
clc
mov
push
pop
rclb
movsl
sbb
int3
xor
push
mov
or
jmp
sbb
enter
sub
jmp
outsb
packsswb
mov
fdiv
inc
mov
jae
sbb
add
out
dec
ret
ret
dec
adc
cltd
in
repz
jbe
cmp
fstps
bound
addb
arpl
dec
and
push
scas
std
ret
faddp
ror
negb
cwtl
mov
xor
enter
push
mov
jns
cli
aad
dec
xor
je
adc
scas
jnp
nop
aad
sti
into
enter
and
sbb
lea
mov
mov
pop
arpl
iret
mov
mov
ljmp
adc
inc
lcall
mov
in
push
sub
jb
add
andl
daa
icebp
popf
cli
sub
jecxz
or
push
cmp
cmp
andb
pop
repz
imul
pushf
sub
push
ljmp
sbbb
pushf
lds
leave
sub
dec
cmp
lock
out
movsb
das
mov
sbb
inc
push
sbb
lods
push
lcall
xchg
lods
scas
faddl
aas
sub
dec
dec
loop
inc
out
dec
in
push
fcompl
test
lds
xor
in
fisubs
push
dec
lret
cli
mov
xor
lcall
andl
jno
fcomp
mov
fadd
es
cmpsl
test
ja
cmc
jmp
not
cmpsb
mov
push
mov
shll
test
cmp
int3
mov
and
xor
dec
add
mov
sahf
xor
push
sbb
gs
in
dec
int3
outsb
std
cltd
push
push
mov
ss
ss
mov
rcll
mov
iret
cld
mov
stos
jnp
cmp
rclb
dec
roll
enter
jmp
nop
push
rcll
cmpb
jns
inc
mov
adc
rcl
cli
sahf
loopne
xchg
adcl
mov
movsb
xchg
mov
setne
mov
adc
mov
cmc
incl
clc
mov
pop
and
push
mov
xchg
pop
call
cltd
fs
lcall
xchg
out
stos
leave
push
movsl
jb
sub
ljmp
add
into
jb
imul
inc
in
inc
pop
sbb
pop
sti
in
fidivl
mov
ret
mov
jle
dec
jne
fcoml
sbbb
push
xchg
into
dec
fidivs
repz
add
jns
insb
subb
inc
sbb
pop
xorb
out
cmp
mov
insl
imul
add
push
mov
jo
fs
fistpl
adc
jg
data16
or
stos
call
in
and
arpl
into
dec
pop
jle
inc
inc
hlt
out
inc
pop
xor
push
ret
mov
jg
mov
xor
shll
jno
jle
xor
rdtsc
adc
lods
mov
push
das
lock
cli
jle
aas
push
mov
cli
cmp
leave
push
repz
fisubs
loop
inc
in
arpl
test
push
mov
jle
outsl
negb
std
jbe
fsubs
inc
cltd
movsl
pop
les
movsl
sub
into
dec
aam
push
adc
js
pop
dec
push
outsb
adcl
inc
jmp
push
mov
xchg
sub
inc
lret
sub
xchg
out
repnz
test
sbb
out
faddl
std
dec
push
push
aad
repz
mov
pop
mov
movsl
outsb
push
cmpsl
ljmp
cmp
pop
jns
cwtl
insb
aad
or
outsb
out
mov
mov
scas
xor
push
adc
fdivl
mov
mov
inc
mov
lds
or
fstp
gs
cld
clc
mov
dec
lods
add
into
les
mov
mov
jl
cmpsl
nop
loope
mov
xchg
sbb
and
test
or
jle
mov
jecxz
jno
sbb
cmp
jb
add
xor
movzbl
and
rcrl
std
std
idivl
xchg
rorb
imul
cltd
sti
dec
pop
pop
xchg
mov
int
call
xchg
daa
add
inc
je
dec
nop
cmp
xchg
inc
jno
mov
mov
jmp
cmp
add
jge
mov
sbb
iret
sub
jl
aas
arpl
xor
inc
inc
cmc
movsl
pop
mov
mov
xor
push
hlt
aam
mov
test
jnp
adc
test
std
dec
sahf
push
repz
lds
das
fwait
sub
stos
stc
mov
or
push
dec
xor
dec
mov
shll
dec
xor
push
xor
dec
leave
sub
cwtl
or
sbb
cmpsl
rolb
pop
sysret
faddp
icebp
dec
mov
add
mov
lds
sbb
mov
cmp
xchg
in
fdiv
and
dec
shr
mov
mov
jne
fstpl
or
sub
or
pop
and
pop
pop
pop
sub
sbb
gs
mov
push
pusha
orb
fists
aam
mov
and
push
push
pushf
pop
dec
inc
loope
mov
xchg
enter
push
mov
xchg
nop
mov
add
ret
in
mov
fcom
inc
fbstp
scas
or
shr
popa
scas
jp
sub
pop
push
mov
clc
adc
mov
arpl
fwait
stc
xchg
daa
push
roll
adc
xchg
das
testb
or
lods
xchg
sbb
inc
fcomi
loopne
out
pop
sbbl
negb
jno
out
repz
or
mov
pop
xchg
lcall
or
sbb
mov
rorb
test
or
fidivrs
mov
xchg
jge
test
and
sbb
xchg
add
gs
push
ja
pop
loop
pop
xchg
js
dec
xchg
jb
add
loopne
push
cld
pushl
int
loope
sarb
sub
clc
ss
adc
pop
nop
cltd
push
and
dec
aaa
jge
xchg
mov
std
popa
add
xorb
mov
imul
sub
ja
jle
out
rorl
and
inc
aas
into
mov
movsl
pop
jae
dec
inc
jg
stos
jge
push
mov
imul
xchg
jnp
sbb
inc
iret
or
sub
sub
movsl
dec
mov
mov
in
notl
jl
loop
mov
ljmp
jge
or
jb
ja
fildl
ljmp
ja
test
stos
dec
pop
insl
movsl
int3
push
mov
cmp
in
and
pusha
pusha
in
mov
repz
mov
pop
scas
add
push
xor
outsl
pop
inc
imul
xor
cmp
rorb
outsb
stc
jmp
insb
jl
sbb
lock
das
lds
xchg
loopne
cs
adc
dec
xor
fbld
fldenv
in
mov
jnp
mov
xor
addb
out
rolb
iret
mov
and
and
fs
ficoms
cmp
xchg
imul
int
pusha
cmp
dec
xor
lods
cmc
xchg
dec
adc
jb
icebp
cmp
aaa
push
dec
mov
sub
addb
addb
out
jb
mov
lods
sub
and
cmp
insl
stos
inc
daa
sbb
cwtl
pop
xchg
lock
in
scas
and
jmp
stc
mov
mov
push
idivb
out
enter
dec
cmp
aaa
jmp
inc
shlb
jbe
test
sti
dec
in
mov
push
repz
push
je
or
dec
adc
mov
and
xlat
push
lret
movsl
outsb
jmp
into
call
repnz
fildl
out
sub
mov
xor
xor
rcl
adc
mov
pop
jbe
sub
jns
xor
sub
push
ret
ret
sub
add
jl
push
dec
lret
fiadds
icebp
in
and
mov
mov
xchg
mov
add
dec
xchg
add
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
jne
jl
cmpb
pop
jp
jb
sub
adc
adc
inc
sub
lcall
jmp
bound
cmpsl
mov
test
xchg
and
jl
adc
movb
and
xor
mov
push
nop
inc
fdivl
nop
add
lahf
sbb
jno
xlat
mov
int3
or
das
shrb
repz
in
in
adc
jb
mov
push
flds
aam
inc
push
sub
dec
cmp
aaa
mov
cld
in
xchg
or
roll
scas
cltd
jno
sbb
dec
dec
mov
mov
mov
dec
fwait
pushf
shr
into
mov
js
imul
mov
mov
call
out
cmpsl
xor
inc
leave
inc
inc
stc
pop
mov
cmp
xor
leave
pop
repnz
xor
arpl
push
jbe
out
adc
sub
insl
hlt
out
jb
inc
jle
sbb
ret
pushf
cmpsb
fdivs
and
mov
jo
dec
out
ja
sbb
or
jle
dec
in
outsl
cmp
mov
loope
std
mov
cs
sbb
xchg
mov
mov
aas
sbb
sub
xor
push
mov
cmc
inc
push
pop
fwait
clc
rclb
inc
sub
sub
or
in
mov
push
lods
incl
daa
mov
ss
xchg
ficoms
or
dec
jb
pop
into
sub
push
add
or
cmp
in
mov
and
and
cmp
xchg
mov
jb
imul
inc
mov
push
push
xor
jecxz
fisubrl
or
mov
clc
jbe
scas
mov
or
loopne
push
mov
jp
outsl
fs
pop
out
pop
xchg
dec
inc
pusha
and
ret
sbbb
repz
push
dec
dec
pop
adc
movsb
scas
cmpsb
mov
pushf
pop
movsb
lcall
fiadds
inc
ljmp
fsubl
mull
in
mov
cs
jns
adc
stos
jp
push
movsb
jnp
fcomps
popf
sbb
cmpsb
scas
lea
std
lds
push
lret
mov
and
mov
adc
ret
ja
pop
jns
cmp
lahf
adc
add
mov
insb
and
push
and
or
rcll
xlat
imul
cwtl
or
xchg
pop
rcrb
push
sub
dec
lahf
addb
call
icebp
lock
inc
or
cltd
or
inc
or
bt
xchg
mov
rcr
and
loop
and
mov
jmp
loop
mov
xchg
dec
or
mov
dec
xor
pop
cltd
sahf
repz
icebp
test
rcll
lock
or
stc
adc
adc
adcl
out
or
pop
cmp
sbb
lock
scas
pop
push
aas
scas
test
mov
mov
popa
sub
inc
ja
mov
pushl
dec
shrl
add
mov
cmpsl
sbbl
mov
mov
xchg
sbb
stos
int3
in
adc
or
push
dec
mov
addr16
daa
mov
add
xor
fdivl
fildl
xor
mov
movsb
and
bound
pop
pop
lods
cmc
sbb
enter
xchg
push
jnp
enter
sub
jno
pop
inc
aad
inc
mov
test
cmp
inc
fdivl
mull
rcl
jne
push
fiadds
xchg
sahf
pop
fadd
mov
repnz
jns
and
fmull
mov
fisttps
xor
add
fmuls
addr16
inc
jmp
loop
ljmp
push
jg
cmp
xchg
icebp
mov
mov
fsubrl
xchg
sbbb
mov
outsl
vucomiss
icebp
test
mov
mov
and
jo
sub
jmp
sub
xor
jecxz
push
xchg
jnp
add
testl
add
outsl
adcl
insl
dec
cmp
or
fwait
inc
ret
jle
daa
scas
dec
nop
fs
xor
stos
rcrb
out
daa
shlb
in
push
adc
dec
call
and
jae
shlb
push
xchg
out
mov
dec
mov
push
popa
push
outsl
push
aaa
xorl
push
das
and
cs
cmp
inc
test
stos
and
mov
push
jmp
pop
xchg
scas
add
mov
test
inc
shrb
clc
pop
pop
sbb
xor
in
mov
test
ja
fbstp
cmp
mov
mov
subl
dec
je
mov
xor
pop
repnz
jl
nop
dec
lcall
pop
jns
cmovl
xchg
fstl
and
je
nop
iret
mov
fwait
or
sbb
mov
cmc
add
sub
inc
add
rol
jle
jbe
pusha
popf
pushf
rcll
mov
ja
jge
nop
sbb
sbb
into
sub
imul
mov
nop
mov
mov
std
hlt
mov
pop
add
push
mov
push
dec
cmp
pop
push
iret
add
mov
cmp
arpl
into
mov
mov
fistps
sahf
jle
int
loop
scas
cmp
xor
mov
clc
xor
adc
mov
jae
jno
push
add
push
and
jo
leave
mov
dec
xor
stos
add
xor
or
js
sar
mov
jl
repnz
cwtl
pop
iret
and
xor
std
pop
test
insb
sbb
and
repnz
test
jns
filds
jne
mov
and
mov
in
and
orl
dec
mov
jg
ljmp
mov
cmpsl
xor
rol
add
or
fcomp
lcall
pop
lcall
stos
stos
pop
int3
scas
fs
mov
mov
mov
pop
ljmp
add
push
push
int
mov
jmp
mov
sbb
lock
lcall
sbb
cmp
hlt
xor
sub
mov
cmp
sbb
bndstx
sti
and
pop
dec
xchg
pop
fs
jmp
fcoml
test
daa
movsb
stc
stos
jnp,pn
mov
out
dec
stos
mov
mov
jnp
repz
inc
fildll
rcl
mov
cmp
test
and
jle
lods
xor
lsl
cmp
xor
sub
inc
sbb
sbb
adc
outsb
sub
cmp
stc
popa
ret
adc
lods
xor
sbb
inc
loope
notl
ret
int
xlat
addr16
out
lret
inc
jo
stos
inc
mov
jns
add
or
mov
or
jae
push
dec
mov
lods
pop
inc
lock
jae
insb
nop
cmpsl
adc
js
sub
test
and
cmc
jnp
xor
xor
sbb
or
xor
or
pop
pop
mov
jp
sti
out
inc
dec
lea
sti
lock
outsl
ss
jl
sub
cmc
sahf
sub
stc
stos
sbb
cmp
jp
scas
xchg
hlt
ja
and
sbb
sub
xor
pop
faddl
std
xor
mov
js
icebp
xchg
or
or
dec
adc
sub
mov
jae
cmp
mov
or
mov
aas
repnz
jle
lods
jmp
push
pause
pop
lret
fstps
mov
jmp
stos
ficompl
int3
fsubrl
cltd
mov
cmp
dec
loopne
adc
pop
sbb
xor
das
insl
add
into
arpl
bound
cmpsb
int
sub
xchg
jp
jae
inc
or
or
dec
clc
push
ds
in
int
mov
pop
mov
call
jl
push
out
jne
inc
inc
jp
int
or
sbb
xor
jno
call
into
js
pop
push
out
rorb
jmp
mov
push
outsl
and
sbb
dec
mov
jg
jl
idivb
dec
mov
sub
lds
and
mov
ss
out
jae
dec
or
lcall
mov
and
mov
mov
dec
dec
xchg
push
lds
xor
aaa
and
cmpsl
das
aaa
test
adc
xor
sbb
mov
arpl
xor
sbb
jg
aas
mov
cmp
mov
push
in
sti
adc
push
or
test
mov
ret
das
push
arpl
popa
mov
adc
push
add
pop
fimull
xor
pop
fdivl
cmp
jns
jp
adc
xchg
push
cmp
cmpsb
or
dec
pop
mov
jbe
and
push
sti
and
popl
lcall
cmpb
sbb
enter
sub
cmp
sbb
push
pop
xor
sub
test
xchg
push
cld
iret
jbe
fwait
xlat
cs
stos
pop
add
push
jecxz
mov
jmp
or
pop
sbb
mov
push
cmp
arpl
dec
xor
lahf
jae
sub
ficoml
adc
out
cmpsb
sub
arpl
bound
jbe
push
jbe
mov
cld
pop
push
sti
push
and
push
sarl
xchg
lcall
sbb
xchg
shr
mov
mov
cs
pop
xor
push
add
inc
sbb
loopne
adc
out
shlb
jae
decl
shlb
xchg
xchg
test
cs
mov
or
xchg
mov
loopne
sar
pop
loopne
pop
mov
iret
out
pop
jns
pop
and
test
xchg
das
icebp
jg
cmc
into
add
mov
mov
imul
out
push
pop
xchg
js
mov
mov
test
xchg
mov
lahf
add
out
cld
sub
pop
iret
xor
daa
outsl
iret
loopne
cltd
addr16
fildl
imul
mov
xor
popl
and
jmp
mov
sbb
pop
adc
adc
imul
xor
jecxz,pn
rolb
jl
fisttpl
aam
dec
xlat
dec
push
ret
adc
or
int
jmp
pop
aaa
jae
add
sub
mov
or
inc
jp
and
cli
call
xchg
jmp
mov
add
test
pusha
shl
aas
es
popf
jnp
dec
sbb
popf
and
xor
inc
outsl
or
rcrl
mov
rolb
js
aaa
cs
mov
jns
call
or
mov
and
mov
mov
inc
xchg
xchg
jge
outsl
push
cs
sub
insb
sub
fnstenv
pop
mov
mov
nop
jb
call
stos
and
and
jnp
push
xchg
pop
cmp
outsl
shlb
cwtl
out
rorb
daa
incl
dec
mov
add
mov
lea
and
pop
loop
mov
pop
inc
dec
das
jle
std
mov
sub
xor
push
aaa
ss
and
inc
nop
fldt
cmpsl
cs
jo
sub
enter
xchg
lock
pushf
movsl
cltd
dec
stos
push
and
pop
dec
mov
and
cmp
fnstcw
jmp
cmp
push
sub
dec
addr16
aaa
into
clc
sbb
push
pushf
shlb
push
mov
jmp
jg
fcoml
inc
pop
ja
push
iret
adc
in
movsb
add
or
mov
shrl
popa
stc
insl
ret
mov
addb
xor
push
subb
dec
sub
push
bound
enter
pop
jg
clc
out
movsb
fnstcw
xchg
lods
pushf
adc
jno
fisubs
std
and
and
enter
or
mov
mov
pushf
inc
xchg
daa
pop
sub
or
mov
and
push
out
cmpsl
adc
push
jno
mov
add
fisubs
hlt
inc
sbb
int
loop
je
adc
lcall
adc
lea
sbb
cwtl
scas
jns
jno
fwait
dec
sbb
mov
push
sbb
cmc
xchg
iret
insl
rclb
or
mov
xor
or
mov
mov
out
ficomps
int3
faddl
lret
xchg
sbb
ret
inc
xlat
push
jmp
cs
xchg
bswap
test
test
sub
add
out
cmp
inc
push
pushf
ljmp
mov
test
inc
pop
lahf
adc
scas
jg
add
scas
pop
scas
rcrl
push
mov
aam
xchg
push
inc
scas
fsubs
mov
mov
dec
andb
out
mov
add
adc
jnp
cmc
int
dec
xchg
jns
xor
pop
dec
inc
or
fsubs
pop
test
adc
adc
pop
test
rcrb
adc
pop
roll
lret
lret
mov
iret
pop
divb
mov
cmp
scas
mov
or
loopne
inc
adc
push
lret
cwtl
mov
inc
dec
inc
cwtl
mov
xchg
int3
inc
pop
in
out
ja
mov
inc
lea
jmp
xor
xchg
std
dec
call
ja
outsl
push
push
outsb
and
dec
pushf
inc
push
repz
lahf
mov
cmc
lods
clc
stos
sub
adc
fmull
loope
inc
sub
sub
sub
pop
jl
jecxz
aaa
cwtl
push
sub
sbb
dec
mov
inc
jbe
add
jmp
sarl
insb
movsb
daa
outsb
dec
xor
xor
loope
inc
jge
rcrb
sub
and
mov
push
sbb
fbstp
jno
jb
fistpl
cmpsb
adc
dec
mov
jmp
ret
and
xlat
push
loopne
das
arpl
into
dec
push
shlb
xchg
and
xlat
lret
xchg
in
ficompl
inc
lock
out
mov
scas
and
cld
sbb
xchg
or
mov
rcll
lds
pop
sahf
cmpsl
rclb
and
pushf
pop
or
enter
cmp
cmp
outsl
cmp
push
sub
xchg
mulb
push
pushf
cltd
nop
jnp
gs
add
ljmp
cltd
push
mov
inc
cs
je
cmp
fisttps
push
push
sub
sti
repz
or
fdivrs
jmp
inc
cmp
add
mov
push
rclb
test
orl
xchg
cmc
push
jbe
mov
insb
adc
cmpsw
andl
jno
rorb
lret
addr16
push
inc
out
shr
mov
adc
aad
cltd
lods
add
mov
jnp
out
mov
stos
xadd
dec
mov
xchg
daa
sbb
les
mov
or
stc
mov
xor
lret
ss
sub
idivb
push
mov
pop
cmp
out
out
xor
dec
xor
jno
daa
test
cmp
das
aaa
subl
cmp
mov
scas
fs
mov
stc
in
gs
or
xchg
stos
mov
outsl
lock
xchg
lret
popa
rcrb
insl
cmp
xchg
enter
popf
push
in
imul
mov
adc
mov
testb
popl
imul
push
adc
sti
mov
movsl
cmp
shl
aad
sub
icebp
pop
popa
in
mov
dec
fldcw
mov
mov
mov
dec
mov
repz
aas
sbb
insb
mov
xor
dec
out
dec
or
orb
out
add
gs
ror
fmull
hlt
push
lahf
and
fistps
jl
das
js
stos
xchg
push
xor
jo
mov
lea
data16
push
aad
sub
xor
pop
push
lret
jb
in
sbb
out
fisubs
jb
iret
in
push
mov
or
xchg
sub
mov
and
sbb
das
jns
jle
pop
int3
cmp
xor
add
stos
out
orb
test
or
into
jbe
gs
xchg
mov
pop
mov
leave
push
sbb
or
stos
lret
addl
jg
dec
inc
xchg
jno
imul
ret
cld
shlb
xor
mov
scas
addr16
mov
adc
mov
mov
fisubl
or
push
xchg
or
ja
ja
sbb
sbb
out
dec
mov
mov
outsl
ja
push
and
sub
fnstsw
jns
mov
and
fsts
mov
mov
pop
or
xchg
ret
enter
mov
mov
jecxz
pop
mov
push
es
pusha
out
clc
mov
jecxz
pop
fbld
orl
shlb
pop
imul
sub
add
sub
add
adc
fdivp
and
shll
repz
cld
in
mov
cs
subb
xchg
add
icebp
lock
jp
into
dec
fsubs
jge
cmpsb
sub
ret
push
push
mov
xchg
sbb
jl
sar
ds
mov
pop
inc
push
test
jecxz
or
fisttps
cmp
dec
pop
fisttpl
lahf
sub
adc
xor
divb
mov
mov
inc
mov
bound
lea
clc
push
xor
pop
loopne
dec
push
xchg
or
cmpsl
pop
scas
bound
jns
loop
sbb
sub
cmpsb
leave
and
adc
push
xchg
pushf
cmp
push
iret
mov
stc
xor
inc
orb
std
jge
ret
cmp
loop
xchg
ret
mov
mov
lahf
stc
popf
pop
pusha
push
test
xor
movnti
jbe
mov
iret
rcll
pusha
sub
outsb
movsl
jnp
loope
aad
and
inc
pop
cmpsb
or
mov
cmpb
mov
pop
fs
cmpsb
outsl
das
add
xor
push
dec
xor
insb
xchg
cmp
cmp
mov
jnp
sbb
mov
mov
inc
pop
mov
pop
jge
subl
or
insb
ficoms
insl
inc
sub
scas
push
or
dec
jne
and
pop
loopne
mov
cmp
in
add
fadds
lret
arpl
dec
pop
mov
pusha
aam
shrl
cli
cmc
or
shlb
pop
mov
iret
adc
loopne
addr16
addr16
xor
mov
ret
jecxz
and
cmp
mov
pop
sti
enter
pop
push
pop
push
pop
mov
cmp
mov
ss
outsl
push
loope
mov
add
test
out
or
push
hlt
jge
sbb
xlat
cs
std
adc
movsb
enter
into
mov
aam
xor
add
loope
sbb
aam
xor
fscale
out
pop
or
dec
out
mov
add
test
inc
mov
pop
push
scas
outsb
scas
mov
or
rcl
add
nop
pop
ret
insl
sub
clc
jl
jne
mov
xchg
add
mov
sbb
mov
mov
imul
and
jo
pop
cmp
imul
loopne
and
pop
or
and
fisubrs
or
inc
sahf
push
and
fdivl
add
and
call
dec
popa
inc
cmp
mov
lods
bound
int3
or
push
sbb
cmp
push
jmp
sti
pusha
clc
imul
cmpsl
mov
pop
mov
nop
sub
inc
xor
inc
push
push
pop
and
incb
push
jge
jbe
and
cmp
inc
lods
mov
mov
hlt
inc
js
test
sbb
shlb
jns
js
aas
loop
lret
sbb
int3
ret
fimuls
pop
pop
xlat
into
and
and
cmc
iret
notl
cmc
mov
push
pop
cmpsl
lahf
lods
push
dec
push
dec
mov
add
jne
call
out
cmp
sbb
fmull
push
out
scas
mov
adc
in
sbb
stos
ret
xchg
sbb
stc
cmp
xor
fwait
nop
fwait
jmp
out
out
sbb
pusha
mov
jle
cmp
rcrl
ret
adc
add
int3
gs
xor
jb
repnz
pop
rorb
jbe
mov
sbb
sbb
push
aaa
int3
ret
mov
sub
sub
cmpsb
rorb
inc
push
pop
aam
xor
jge
lahf
xchg
xchg
add
and
das
add
lahf
inc
adc
jmp
fsubl
jnp
push
pushf
pop
adc
fwait
and
lock
jg
mov
mov
ret
jbe
pop
nop
imul
or
pop
shll
fcompl
nop
js
les
jno
push
dec
mov
mov
mov
cmp
and
jge
aas
neg
popf
lds
es
insb
jno
mov
rcl
out
mov
aam
mov
push
xor
xchg
out
and
adc
ret
mov
sbb
or
adc
ret
cmp
std
data16
sub
hlt
in
mov
push
pop
inc
mov
mov
xchg
cmp
mov
xor
mov
xchg
inc
decl
lods
dec
xor
xor
cmc
orb
jno
lods
pop
push
or
jl
and
ss
std
inc
sbb
loop
and
mov
in
jge
mov
stc
cmp
mov
push
mov
aad
sti
shll
fwait
out
setg
xlat
lods
inc
xchg
repnz
loop
inc
jb
daa
jb
dec
jle
mov
xorl
movsl
stos
stos
xor
call
es
mov
cli
or
fisttpll
add
popa
mov
test
test
negb
mov
cltd
dec
aam
frstor
int3
mov
cld
js
xchg
jl
repz
mov
pop
dec
sub
xchg
jae
or
push
outsl
adc
xchg
inc
inc
adc
lahf
ss
dec
stos
and
and
aad
mov
inc
mov
push
cmp
repnz
sub
aam
jl
lret
shll
leave
jle
sysenter
mov
dec
iret
faddl
inc
jge
adc
mov
out
cmpsb
int
loop
mov
clc
add
jno
mov
mov
push
cmp
push
jg
dec
lds
pop
jg
in
add
stos
sub
lret
fisubs
sbb
or
cltd
xor
adc
cmp
jne
pop
mov
sub
pop
push
dec
jp
adc
mov
jne
cmpsb
push
jns
lret
lahf
cmp
push
inc
jbe
in
out
ljmp
pop
fdivs
int3
xchg
aas
adc
ret
call
sbb
repnz
sbbl
pop
jge
ret
ret
pop
je
lret
sbb
cltd
mov
cwtl
test
mov
pop
pop
inc
cmp
stc
add
in
inc
sbb
sub
cmpsb
sarb
iret
push
mov
add
jb
and
sbb
xor
xor
adc
data16
dec
fisubrs
inc
jns
andl
into
jp
sub
lods
sub
and
repnz
or
in
mov
pop
mov
mov
into
cltd
xor
sbb
add
mov
rcrb
mov
movb
ret
ja
xor
imul
sbb
inc
pop
test
pop
inc
loope
pop
subl
push
jmp
push
mov
sbb
in
fcmovne
out
shlb
loopne
in
out
xlat
rolb
addb
dec
sub
add
repz
inc
iret
mov
das
in
outsl
movl
int3
scas
mov
sub
test
mov
mov
out
jge
dec
popf
cmpsl
or
mov
cmp
andl
and
or
push
push
cwtl
jne
fbstp
pop
js
mov
lcall
call
push
push
jbe
sbb
pop
movsb
mov
xchg
loopne
add
aaa
popf
in
std
jo
loope
xor
sub
iret
imul
sub
or
out
rcl
lret
fsubp
inc
jle
leave
aam
pop
fs
cwtl
iret
sarl
popf
sti
shrb
cmc
neg
sbb
jae
divl
scas
jg
push
cli
mov
mov
mov
jb
mov
adc
or
or
das
mov
lods
cmc
das
push
inc
xor
js
sti
pop
in
xor
out
gs
xchg
mov
jne
ljmp
inc
or
movsl
xor
popa
int
cli
inc
fiadds
clc
fsubrp
and
js
cwtl
in
mov
out
pop
test
xlat
lds
insl
and
es
das
dec
jg
rcrl
push
mov
inc
sub
dec
xor
lock
pop
adc
mov
jo
push
rolb
les
mov
sub
clc
sbb
push
add
int
mov
or
and
dec
mov
pop
pop
push
cmp
push
lock
xlat
test
mov
daa
ja
push
pop
ret
mov
push
cmp
sub
ss
jmp
sub
mov
sub
test
fdivp
out
in
icebp
jns
rcrl
ljmp
sbb
dec
lcall
mov
arpl
dec
imul
fs
push
clc
and
jmp
fcmovnu
fisubrl
jae
dec
jge
cmc
mov
stos
and
roll
notb
mov
sti
ret
rclb
jge
xchg
cmp
sub
popf
fstps
mov
mov
lret
jo
out
mov
and
mov
xor
or
jne
or
lods
popa
aad
pop
sbb
lods
mov
mov
ja
cmc
adc
popa
mov
imul
adc
test
mov
mov
add
rclb
dec
sbb
mov
adc
imul
sarl
adc
sti
xchg
mov
jne
leave
mov
pop
xor
lods
js
nop
scas
aad
mov
fisttpll
lods
mov
dec
mov
fsubrs
arpl
push
scas
mov
fisttpll
xor
jne
push
lea
dec
stos
call
in
aaa
and
cli
xchg
xor
je
fwait
cld
fistl
jno
fs
movsb
cli
cltd
mov
loopne
pop
into
hlt
or
lcall
push
pushf
mov
dec
test
mov
jmp
jb
cmpsb
adc
jo
and
cwtl
pop
add
loope
fimuls
mov
das
inc
sti
adc
ret
or
or
popa
cmp
or
xor
dec
and
sub
mov
and
sti
aam
aas
dec
sbbb
and
sub
sbb
xchg
mov
dec
out
clc
cmp
sub
and
mov
scas
gs
mov
add
adc
and
mov
pushf
sub
mov
push
adcb
inc
mov
cmc
sbb
xchg
add
sarb
add
cmc
stc
mov
sub
jb
aaa
adc
test
sti
test
pop
and
cli
fs
pop
cmp
mov
rcrl
jnp
cli
pop
mov
add
mov
push
push
jl
inc
pop
daa
cmp
fistl
inc
inc
xlat
fldl
cmp
jno
cwtl
lds
cmp
das
xor
jl
add
test
and
cmpl
arpl
xor
mov
addr16
cmp
arpl
subb
inc
aam
add
pop
jo
mov
push
xchg
out
pushf
adc
xchg
mov
mov
and
jnp
or
out
std
adc
sbb
lcall
mov
cld
in
jg
mov
push
and
xchg
lret
jnp
jp
stos
dec
cmp
jbe
leave
xchg
cmp
dec
out
lea
int3
lods
mov
repz
aas
aas
pop
mov
fs
add
lods
adc
enter
jae
and
xor
mov
mov
mov
or
mov
insl
lea
testb
imul
jp
xchg
push
mov
cmp
lods
pop
xchg
and
push
ds
mov
ja
decb
pop
icebp
xchg
inc
pop
inc
cmpsl
sbb
push
dec
in
sahf
repnz
lahf
xchg
fdivrl
xor
loope
cmpsl
bnd
popf
inc
into
rep
cli
xchg
inc
push
mov
out
jecxz
sub
push
sub
call
loopne
push
mull
std
add
xchg
loopne
cwtl
and
xchg
adc
adc
cmp
loope
jb
into
cmp
dec
jl
iret
and
out
in
mov
xor
pusha
cltd
jmp
adcb
cmp
push
clc
mov
lods
inc
shl
test
push
sub
push
mov
pushf
pushf
lds
ss
jne
mov
cmp
cmp
ds
into
push
adc
adc
outsb
rorl
std
inc
sub
dec
repz
xor
std
mov
inc
icebp
jbe
lcall
jmp
cwtl
sub
jg
mov
mov
mov
xor
daa
lds
divl
out
dec
mov
sahf
adc
xchg
jno
and
rcll
cmp
push
sbb
ds
push
push
cli
push
je
push
dec
inc
push
out
in
movsl
shll
ficomps
jmp
scas
xchg
fldcw
std
pop
out
movsb
aad
push
sub
or
test
int
add
inc
jge
add
and
fs
add
js
add
pop
mov
mov
mov
jp
pop
push
sbb
jg
xchg
icebp
lret
adc
push
enter
jno
push
addr16
and
pushf
sub
cs
out
xor
add
jle
dec
sub
out
fisttpl
and
dec
mov
int3
imul
std
ss
add
jns
stos
xchg
lea
sub
push
pop
cli
jmp
inc
mov
fs
andl
cmpsl
push
aad
test
fst
imul
insb
enter
cmpsl
fwait
dec
mov
popa
xor
lcall
mov
insl
lods
push
xchg
mov
add
clc
push
xchg
leave
add
xchg
adc
daa
scas
flds
lock
mov
mov
or
or
xor
mov
sbb
adc
pop
addr16
push
je
int
lahf
out
cmp
sbb
sahf
lods
sbb
imul
cmp
std
mov
dec
mov
shrb
in
mov
mov
xchg
push
sbb
movsl
jns
into
add
int
addr16
adcl
fimull
xchg
out
sub
cmp
pop
stos
in
sub
pop
cmp
mov
push
push
jg
stc
jp
add
sti
stos
cmp
jns
pushf
xchg
xor
std
aam
repnz
jl
xchg
cmp
gs
arpl
out
add
mov
outsl
push
pop
sub
sbb
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
insb
xchg
sbb
data16
pop
jp
rol
shrl
out
subps
adc
adc
pop
scas
ss
cwtl
mov
xchg
or
dec
cltd
sahf
out
xchg
pop
sub
test
mov
or
adc
loop
xchg
cmp
shrb
adc
in
mov
push
push
scas
xchg
mov
popa
mov
push
ss
or
pop
jmp
jbe
rorl
inc
mov
rorl
data16
mov
data16
movsb
out
icebp
sbb
insl
sub
sar
in
pop
inc
push
stos
aad
cmp
outsl
cli
aam
jnp
lret
sub
push
push
push
push
iret
mov
cmp
into
in
mov
jl
imul
jmp
adc
popa
xor
cmp
test
mov
ljmp
cmpsb
fsubl
jl
test
addb
cs
cli
mov
push
pop
hlt
adc
sbb
inc
test
mov
popa
adc
cmc
xor
cmp
out
xchg
loope
pushf
adc
cs
cmp
dec
insb
loopne
mov
pop
jl
js
sub
int
ds
xor
pop
out
rcrl
sub
mov
add
ret
cltd
sub
out
ds
out
cli
sahf
subl
push
loopne
sbb
jmp
adc
test
mull
adcl
dec
push
dec
std
scas
dec
sbb
jp
aas
ja
or
in
lea
jp
fwait
xchg
add
ret
repz
mov
sahf
cmpsl
add
xchg
sub
inc
inc
inc
or
mov
jo
xor
aad
push
xlat
shll
xlat
cmp
mov
stc
aas
cltd
jle
in
testb
xchg
push
orb
dec
rcll
leave
adc
cli
dec
mov
inc
lods
outsb
xor
mov
mov
daa
inc
or
dec
jnp
ds
sarl
stc
enter
mov
push
shr
fs
rep
mov
pop
and
xor
clc
sbb
pusha
cwtl
cmpsb
xor
and
jbe,pt
sahf
testb
test
testb
xchg
push
incl
mov
mov
gs
xlat
shr
ljmp
jbe
adc
xor
dec
or
cld
mov
sarl
mov
lar
sub
inc
jbe
sub
push
push
pop
pop
out
dec
shll
ret
push
sub
dec
aam
sub
mov
movsb
xchg
push
jno
dec
inc
cli
pop
xchg
stos
cmp
call
mov
pop
es
sbb
or
rol
shlb
les
jbe
stos
mov
jle
fcmovb
in
mov
mov
mov
sti
fnsave
aas
pop
mov
std
lods
arpl
jno
add
push
xchg
add
sub
test
xchg
adc
dec
adc
add
jo
sbb
or
mov
das
lods
adc
pop
out
push
inc
repz
mov
flds
mov
clc
push
shr
fwait
lret
and
hlt
and
lret
sbb
push
das
jge
call
mov
sub
lods
out
sub
mov
dec
roll
scas
out
out
stos
jecxz
test
call
test
dec
push
pop
jns
rcrb
pop
mov
fistpl
mov
lret
iret
push
push
int3
or
out
fcom
push
mov
jle
jne
xchg
ficoms
add
mov
arpl
xor
push
cmp
mov
fs
mov
out
jle
xorb
je
dec
pop
xor
es
or
or
jmp
repnz
jbe
daa
jne
lods
sbb
test
inc
xchg
mov
leave
insl
scas
clc
imul
dec
das
outsb
push
pop
lret
push
ret
lahf
jbe
jecxz
imul
mov
mov
lret
addr16
nop
push
lret
clc
adc
imul
test
data16
pushf
call
mov
fldt
popf
fstpt
xchg
or
clc
pop
jns
in
fdivr
mov
orl
sub
ret
repz
mov
dec
push
outsb
popf
unpcklps
or
mov
ss
mov
repnz
test
fstpt
icebp
ljmp
cltd
push
jmp
int3
call
inc
leave
xchg
iret
xchg
xchg
pop
lock
lcall
xor
mov
jge
and
inc
cwtl
out
call
data16
sti
mov
out
popf
mov
out
dec
xchg
dec
push
mov
xchg
jg
fcom
fimuls
leave
inc
ret
leave
sub
push
mov
div
and
nopl
push
or
sub
hlt
or
mov
test
mov
add
fcmovbe
xor
das
add
ja
add
dec
mov
and
or
mov
xchg
stc
mov
daa
int
inc
jb
dec
add
mov
jae
adc
dec
mov
dec
or
ss
stos
xchg
mov
pop
repz
imul
xchg
out
mov
mov
insl
cmp
sbb
out
push
add
and
ret
mov
inc
or
or
push
aas
scas
sub
sbb
push
add
cmp
and
xlat
xchg
das
xlat
aaa
and
mov
cli
insb
mov
fsubrs
xlat
imul
jb,pt
xor
outsb
pop
ret
dec
lds
ss
mov
ljmp
and
ficoml
fs
cld
or
js
pop
js
int
push
negl
adc
insl
cmp
leave
push
loop
inc
sbb
daa
mov
mov
aaa
in
daa
jmp
pushl
pop
sti
rolb
sub
lret
inc
dec
jns
xchg
inc
imul
hlt
adc
push
jp
mov
mov
insl
insb
lret
fs
dec
dec
ficoms
jl
pushf
aam
lret
pusha
cmpsl
xchg
fisubs
push
inc
adc
xorb
pop
and
inc
cmc
outsl
in
andl
fcoml
cmp
pop
imul
add
sub
fdivrl
jae
adc
pop
jae
push
jae
arpl
jle
push
mov
pop
mov
xchg
inc
jge
in
stc
lret
ja
ja
cmpsb
push
fst
sbb
pop
dec
out
mov
or
dec
loopne
leave
rclb
test
jmp
loopne
popa
and
adc
pop
mov
cmpsb
shll
ret
xchg
add
shll
jge
add
ja
les
inc
dec
cli
out
xchg
and
sub
shll
movsb
and
cmp
dec
pop
or
sub
leave
mov
sub
rorb
mov
inc
add
inc
pop
jmp
jbe
lods
popf
push
push
loopne
adc
cmp
sbb
xchg
in
fiaddl
inc
enter
mov
mov
push
out
fs
lret
stc
ret
xchg
xlat
pop
add
rcll
push
add
mov
sub
out
popf
popf
inc
mov
dec
ret
adc
xor
lret
mov
dec
inc
jp
bound
dec
orb
mov
out
xchg
insl
outsl
push
icebp
das
push
or
or
lods
test
movsb
lock
lret
lahf
or
push
dec
xchg
cmp
or
mov
push
jle
aas
lods
adc
ret
dec
adc
push
out
mov
push
orl
xor
xchg
cwtl
daa
and
or
or
repnz
mov
add
lret
les
repnz
mov
sub
sub
out
cmc
xchg
out
rorb
in
push
daa
mov
cmp
or
sbb
pop
insb
pop
adc
and
fsubrs
pop
or
xor
xor
push
int3
imul
dec
pop
xor
push
ds
inc
inc
inc
in
inc
mov
decl
vpcmpeqb
fidivl
popf
rol
pop
loop
mov
in
add
fmuls
adc
adc
sub
lahf
sub
xor
lods
icebp
aaa
xchg
adc
fisubrs
mov
sub
sarb
push
daa
dec
cmp
ss
push
sbb
jno
mov
insb
pop
into
sub
rcr
or
mov
add
pop
cmpsl
pusha
jge
test
addl
jp
pop
mov
rcl
and
and
shl
loopne
adc
sbb
sbbb
mov
out
fnstsw
stos
push
std
loope
xchg
add
das
jnp
ret
icebp
subl
lcall
cwtl
fdivrl
dec
xchg
fwait
inc
aaa
stos
cmp
dec
in
dec
in
fstpt
nop
addr16
rcrb
in
adc
hlt
dec
or
or
std
push
cmp
daa
sub
fld
sub
in
or
dec
cmc
out
adc
push
stos
ljmp
push
pop
movsb
cmp
aad
inc
mov
gs
lret
cs
jne
fwait
or
cmp
insl
cmc
les
and
add
cmp
imul
jnp
sub
sub
pop
aad
and
dec
add
aad
adc
ret
cmp
xor
inc
add
dec
arpl
adc
sub
jge
inc
fstps
mov
out
pop
lahf
aad
ljmp
xor
test
leave
adc
sbb
or
cld
and
out
icebp
cmc
je
mov
dec
push
and
sub
jns
sub
mov
test
fucom
pop
add
popf
inc
pop
adc
push
sub
jecxz
sub
inc
lea
iret
dec
fsubrl
mov
jo
aas
scas
inc
in
repz
sbb
lcall
sti
cmp
adc
popa
test
xchg
lret
cmp
xchg
in
ljmp
xchg
outsl
or
add
jp
and
and
or
sbb
sbb
inc
push
es
add
push
pop
pop
movsl
je
mov
adc
xor
clc
clc
insl
lahf
mov
scas
lods
jae
or
loopne
inc
xchg
mov
pop
nop
mov
test
rcrl
icebp
mov
cmpsb
xchg
pop
out
cld
fldt
cmp
and
rep
push
lods
jg
in
add
insl
negl
jle
scas
and
sub
mov
test
xor
cltd
mov
adc
mov
push
pop
adc
jns
pushf
jmp
mov
loop
add
push
sbb
ds
aaa
pop
jns
mov
ret
and
dec
cmp
repnz
leave
rcr
xchg
xchg
arpl
mov
fsubrs
shrl
addb
dec
icebp
std
test
dec
dec
lock
pop
push
imul
inc
jbe
sbbb
mov
arpl
shlb
push
dec
sti
cld
jne
aaa
mov
mov
repz
adc
mov
push
inc
ret
or
jg
or
fcomps
inc
in
pop
out
push
mov
test
out
jae
sbb
lods
fsub
dec
xor
xchg
mov
mov
mov
pusha
xchg
shl
aam
or
sub
sahf
bound
rclb
imul
sbb
stc
fisubrl
sub
mov
aaa
pushf
notl
sahf
pop
cmp
sbb
jns
aaa
fstpt
aaa
out
pop
iret
les
sbb
pop
xchg
sbbb
pop
dec
push
clc
mov
jle
cwtl
sbb
outsl
mov
sbb
mov
test
lret
adc
das
or
push
dec
xchg
popl
push
mov
shrl
xlat
pop
xchg
sub
mov
iret
out
adc
mov
sbb
in
fcmovnu
adc
int3
clc
clc
sub
jne
jnp
and
push
xchg
idiv
movsb
mov
addr16
mov
jmp
je
xlat
imul
out
je
or
fcom
sar
test
movsl
in
repnz
push
lret
mov
push
xchg
xor
push
mov
and
arpl
gs
add
jno
push
push
test
mov
test
lds
ljmp
scas
mov
dec
aas
cmpsl
dec
packuswb
divb
adc
xlat
pop
mov
sub
inc
out
arpl
shl
cwtl
les
test
or
or
jle
mov
fs
xlat
dec
push
xchg
mov
cmp
adc
inc
popf
or
mov
lock
add
lret
or
cwtl
lock
adc
cmp
ret
into
sti
lods
mov
mov
and
and
ljmp
rcrl
and
mov
test
or
addr16
mov
mov
xor
push
cmp
adc
mov
ror
icebp
adc
es
lock
fstpt
mov
mov
inc
lods
adc
ja
lods
loop
inc
lods
fmull
outsl
cs
mov
icebp
call
xchg
xor
dec
cmp
xor
jl
lea
add
pusha
sbb
inc
push
dec
jae
sub
cmp
jb
nop
or
pop
in
cwtl
div
sbb
pop
popa
xchg
decb
pop
ror
shl
test
lock
mov
cwtl
dec
stos
stos
dec
jmp
mov
call
and
pusha
div
imul
in
xchg
xor
enter
add
arpl
add
cwtl
test
ret
cmc
sahf
mov
sub
sbbb
cmp
mov
mov
add
pusha
adc
mov
mov
daa
sar
mul
jecxz
sbb
ret
cmp
jne
push
adc
push
adc
js
jecxz
inc
aas
scas
pop
es
cmp
pop
mov
jp
mov
jo
push
pop
aad
js
mov
notl
mov
out
mov
jo
pop
hlt
imul
sub
cmp
lret
push
push
sbb
cmp
pop
sbb
jo
or
cmpsl
orl
xor
mov
repnz
stos
sbb
dec
lock
mov
pusha
pop
sub
rep
push
ret
and
xchg
arpl
jnp
cld
enter
or
sub
pop
sub
xor
aad
cmc
sub
pop
aaa
jg
xlat
add
sbb
mov
repz
lock
dec
pop
mov
cmp
jno
mov
mov
ljmp
addr16
push
ljmp
push
ret
adc
adc
scas
enter
push
sbb
std
and
sbb
xor
dec
push
jecxz
cld
mov
cmp
in
mov
jl
icebp
jns
outsl
mov
paddb
or
insl
mov
scas
fmul
or
ljmp
jbe
pop
push
repz
mov
jge
pop
xchg
jge
loope
sqrtps
and
fwait
imul
gs
adc
call
outsl
fistps
lds
sti
imul
ret
inc
and
xor
mov
cli
pop
mov
insl
pop
in
int3
aam
dec
push
dec
push
dec
lret
xchg
orl
fnstcw
inc
daa
sbb
mov
xchg
xor
mov
sbb
sarl
fcompl
and
dec
loop
or
into
mov
test
pop
pop
cmp
dec
xor
test
popf
sub
mov
mov
push
call
adc
mov
movsl
cmp
lods
mov
push
xchg
mov
mov
add
enter
je
fdivrl
sbbb
pop
sub
inc
push
orl
int3
outsl
negb
inc
xor
call
cmp
push
sub
or
mov
xor
popf
jae
inc
push
repz
cwtl
and
popa
movsb
mov
or
lea
nop
jle
push
ret
popa
in
fistps
inc
push
dec
std
adc
push
dec
jge
xchg
cmp
scas
aas
and
test
xor
mov
mov
xchg
ja
cmp
sub
push
ds
adc
add
mov
cmc
inc
stos
sub
xor
addr16
ds
mov
in
lret
into
inc
pop
jo
lock
subl
sbb
enter
adc
xchg
subl
loopne
and
mov
leave
je
push
lahf
std
and
imul
mov
lock
call
inc
in
lret
xchg
xchg
jbe
sar
fadd
int
push
call
mov
hlt
inc
fisttpl
imulb
imul
xchg
pop
pop
leave
ljmp
sbb
xor
in
test
je
mov
jmp
jmp
pop
mov
cli
push
data16
jg
or
mov
clc
sbb
xor
ficomps
xor
nop
rorb
inc
dec
push
dec
jno
xor
imull
nop
and
movsb
cmp
mov
xchg
pushl
and
shlb
jle
xor
sub
jbe
test
idivl
push
jl
repnz
xor
les
jmp
push
sbb
lods
mov
pop
iret
negb
mov
cld
imulb
inc
xchg
push
in
out
xchg
xor
adc
sub
out
orb
pop
and
loopne
mov
push
imul
push
lahf
push
js
shrl
cmpsb
scas
cmpsl
fdivl
cmp
or
inc
push
cmp
addr16
mov
mov
mov
inc
rcr
sub
fwait
pop
push
jno
fcomip
dec
je
ret
rcll
jge
divb
mov
and
mov
cmp
cmp
inc
push
and
imull
in
pop
cmp
and
lahf
pop
xchg
inc
push
scas
dec
jp
cld
cmp
jne
jne
ret
mov
jb
test
and
loope
add
mov
xlat
push
cmp
in
cltd
pop
fsubrl
imul
adc
mov
jo
loope
xor
cwtl
mov
sti
jecxz
jno
push
adc
loopne
add
mov
mov
dec
subl
data16
ljmp
mov
lahf
imul
fbld
mov
push
xchg
jge
shr
push
push
lods
mov
pop
jo
insl
pop
std
cmc
lods
insb
push
test
jmp
pop
adc
int
mov
inc
hlt
pushf
lret
pop
jbe,pt
cli
mov
add
mov
mov
jmp
mov
xor
or
pop
jmp
out
dec
mov
mov
jo
and
jg
mov
or
out
int3
push
ljmp
popf
xlat
cli
nop
inc
scas
movsb
sbb
sbb
lods
adc
mov
das
mov
push
adc
sarl
adc
aaa
cltd
js
xor
das
sbb
lahf
sub
xor
pop
xchg
out
shrb
roll
enter
inc
dec
inc
jle
xchg
scas
stos
add
mov
fwait
ja
in
clc
pushf
push
jno
in
push
decb
aad
out
sbb
dec
lods
inc
push
mov
lahf
leave
adc
cwtl
in
sub
jg
repz
les
mov
sub
outsb
mov
test
push
cmp
mov
fiadds
and
imul
lea
ljmp
dec
xor
cld
mov
scas
fucomp
shl
sbb
xlat
shll
rcrl
fs
pusha
loope
lods
loope
sbb
mov
fmuls
mov
add
test
loop
push
movsl
aaa
or
fwait
push
jb
into
jecxz
mov
lea
cwtl
frstor
inc
arpl
fmull
add
outsb
cmpsb
add
sahf
in
push
pop
cmp
int3
jmp
mov
xchg
push
dec
pop
pop
inc
js
inc
mov
inc
ljmp
jl
sub
ret
lods
pop
fsubp
nop
push
mov
inc
test
cmpsb
aas
adc
push
xchg
mov
cs
sti
or
popf
pushw
lods
sub
push
push
mov
dec
mov
adc
cmp
sbb
xchg
les
stc
push
pop
mov
or
fwait
sbb
xor
divb
and
push
lret
imul
rcll
pusha
mov
adc
push
jecxz
fwait
loopne
or
ror
or
push
dec
add
xchg
test
xchg
mov
dec
data16
shr
pop
dec
movsb
or
out
add
mov
sub
mull
mov
push
subl
rolb
jns
fsubl
add
scas
test
xchg
iret
sub
or
stos
cmp
inc
pop
movsl
in
out
int
imul
ds
testb
es
and
bound
mov
fsts
addb
fisubrl
out
mov
iret
mov
pop
jl
xor
mov
out
movsb
cwtl
fisubrl
pop
xor
inc
iret
push
aad
or
jle
push
and
fimuls
or
fdivrl
add
loopne
int
cmpsl
sub
bound
pop
repnz
or
outsb
les
pop
enter
and
negb
fcoml
dec
sub
movsl
cs
xchg
cmp
dec
shlb
fdivs
cmp
mov
lahf
push
jmp
dec
cwtl
push
push
scas
imul
insb
cmp
inc
mov
pop
cmp
imul
sub
jno
pop
int3
shl
mov
push
shll
xor
xchg
or
iret
inc
pop
add
dec
xchg
sbb
adc
push
add
jg
add
and
repnz
stos
xor
mov
mov
pop
xchg
mov
movsl
iret
loop
in
in
daa
push
inc
jecxz
es
xor
pop
mov
cmp
mov
add
inc
ja
es
dec
and
push
pushf
fcmove
push
pop
call
inc
jns
xchg
imul
jo
jo
push
test
ret
ret
sub
cmp
pop
rcr
loop
jmp
sbb
mov
mov
inc
sahf
push
test
mov
cld
imul
pop
dec
out
mov
xor
ds
xchg
lds
mov
or
or
xchg
nop
test
adc
push
insb
inc
mov
dec
out
mov
lcall
lock
in
adc
loopne
or
shll
pusha
push
push
es
shlb
fisttpll
imul
xor
mov
add
or
xor
xchg
nop
fs
push
popa
xchg
xlat
jb
add
sbb
aaa
pop
cmp
lods
cmp
sbb
mov
xchg
shrb
xchg
mov
mov
negb
mov
dec
sub
fcomip
push
sahf
inc
ficomps
jb
inc
adc
inc
mov
mov
mov
mov
or
push
inc
jp
add
outsl
lret
clc
or
jmp
movsb
enter
mov
mov
lret
das
test
cmp
pop
dec
mov
icebp
lahf
adc
das
sub
pop
pop
insl
dec
jne
xor
sub
arpl
lds
jbe
lcall
push
cmc
or
insl
test
adc
inc
mov
das
sahf
loope
rolb
lea
arpl
push
gs
orl
lods
dec
cmp
sub
iret
scas
cmp
xor
addr16
lods
push
inc
jne
out
mov
stos
inc
rol
iret
xchg
cmc
call
cmpsl
mov
mov
sbb
mov
scas
push
mov
pop
mov
xor
fbstp
pop
shll
ds
inc
testb
les
jnp
das
mov
jo
in
xor
mov
test
pop
addr16
fwait
jno
inc
mov
dec
dec
xchg
cmpsb
add
mov
sbb
je
mov
loop
imull
pushw
int
dec
push
in
lret
ss
jnp
and
aas
pop
iret
daa
pop
add
pop
dec
adc
sub
out
dec
pushf
shll
jnp
sbb
push
add
mov
xor
lea
jnp
int
mov
xor
loope
pop
xchg
ficompl
mov
js
mov
aaa
mov
loop
fldenv
sbb
sar
mov
fs
xor
insl
xchg
mov
clc
jmp
cmc
jno
adcl
fbld
ljmp
jbe,pn
data16
xor
fists
mov
adc
or
mov
cmp
xor
mov
ljmp
dec
or
ljmp
cmp
mov
sub
ret
fs
cld
pop
xor
mov
nop
in
cmpsb
jl
fdivs
xchg
loop
push
ljmp
nop
and
jle
or
mov
repz
mov
xor
dec
cmp
iret
push
mov
sbb
pop
xor
and
jae
aad
sahf
push
xor
imul
stos
mov
lods
jo
mov
les
inc
iret
pop
mov
xchg
nop
outsb
stc
fstpt
sub
jl
dec
decb
jns
sub
xor
movsl
push
push
jge
inc
sub
stc
mov
push
mov
xor
dec
cmp
sub
add
inc
mov
ljmp
ret
xor
xor
sub
jb
dec
or
je
not
incl
ret
lahf
jle
inc
lcall
mov
jb
mov
out
insb
cmpb
or
test
aaa
push
cmp
rcll
mov
pop
imul
inc
popa
int3
cld
jbe
dec
mov
lahf
lcall
rorl
adc
sub
dec
xchg
mov
call
sbb
adc
ret
fsubs
add
adc
es
and
xchg
es
and
mov
pushf
jl
xchg
inc
dec
mov
aad
pop
add
outsl
rolb
cmpb
inc
stc
cmpsl
jno
cmp
roll
js
xor
ss
bound
les
outsb
lahf
dec
xlat
nop
push
pusha
ja
xchg
or
sub
xchg
fisubrs
add
lahf
xchg
lcall
or
inc
outsl
sbb
mov
into
inc
addb
enter
mov
xchg
push
adc
lret
cmp
sahf
in
pop
lret
lret
aas
xchg
js
fwait
dec
adc
adc
mov
repnz
sub
out
xchg
pusha
daa
push
imul
and
neg
inc
aaa
ja
sbb
icebp
setns
ljmp
nop
inc
jecxz
mov
arpl
mov
repz
hlt
cmp
cli
nop
sti
jecxz
int
aaa
push
jecxz
and
or
sbb
push
pop
test
lcall
fldl
dec
xchg
fbld
loop
push
mov
dec
loopne
aas
daa
fucom
ljmp
inc
cltd
dec
cs
pop
int3
movsb
xchg
push
call
sbb
jae
push
out
xor
jbe
xorb
das
shrb
jmp
sbb
cwtl
jp
dec
mov
aam
icebp
arpl
pushf
mov
jns
pop
fs
imul
jae
xchg
or
xchg
cwtl
inc
shlb
inc
add
std
mov
push
push
leave
je
gs
and
sbb
subb
popa
push
cmp
sub
xlat
ljmp
push
xorb
mov
and
cltd
scas
or
pusha
ds
inc
iret
pushf
push
dec
decl
mov
int
sub
out
js
sub
fldt
divb
fdivl
cld
in
xlat
aam
sbb
in
mov
or
push
rclb
xchg
and
add
out
mov
push
jmp
cmp
push
js
daa
shl
mov
xchg
mov
jbe
adc
ret
push
rorl
jbe
nop
aas
shlb
arpl
and
repz
ljmp
jo
sahf
push
adc
xor
rcrl
lods
in
push
notb
sub
test
test
mov
popf
jo
jns
dec
mov
or
stc
mov
cmp
aad
mov
enter
push
dec
rol
loop
loope
dec
dec
push
test
pop
and
pop
or
dec
repz
cld
ljmp
sub
out
cmpsl
mov
cmpsb
test
adc
dec
shrb
aam
cs
insl
cmp
dec
pop
xchg
or
ja
xchg
mov
add
pop
pushf
jb
xor
mov
loop
jmp
lea
xor
imul
out
jge
ret
fsubl
or
pop
dec
mov
xlat
bound
ljmp
pop
or
out
pop
cltd
cmp
hlt
adc
sub
and
stc
cltd
jno
cmp
jmp
aad
adc
fcomip
int
sub
cltd
sbb
jg
inc
movsb
mov
rorl
shrb
rorb
in
daa
out
mov
scas
repz
push
pop
or
and
hlt
pop
xor
mov
aad
jecxz
pop
orb
add
xchg
add
pop
cmpsl
call
mov
imul
inc
sbb
xlat
lret
ret
sub
dec
mov
lret
jecxz
or
fisttpl
ds
ss
shll
adc
xchg
imull
xchg
mov
int3
mov
mov
inc
push
push
rolb
stc
inc
and
dec
clc
pop
adc
mov
or
mov
sahf
pusha
mov
jae
xlat
in
in
lods
dec
and
fadds
insb
sbb
push
dec
mov
add
sub
xchg
ds
cmpsl
aaa
sbb
and
cmp
mov
adc
inc
int3
jmp
jp
or
mov
xor
and
cmp
dec
jecxz
adc
xchg
cmp
and
sarb
push
add
std
dec
sub
push
dec
sub
lods
xchg
in
pop
mov
lock
sbb
mov
sub
pop
mov
xor
add
flds
pop
dec
jmp
test
xor
ficomps
mov
adc
lods
iret
js
std
je
int
outsl
mov
inc
jmp
cmpsb
inc
xchg
rorl
cmp
mov
outsl
pop
repz
shll
mov
jmp
imul
test
sub
pop
movsl
jmp
jns
sub
sub
data16
sbb
dec
test
and
cmp
jg
clc
ja
shll
into
xor
les
and
pop
mov
jns
aad
or
mov
popa
ret
push
rorb
or
xchg
clc
add
rorl
or
pushf
and
add
stos
cwtl
jnp
inc
jns
in
fistpl
and
mov
pop
jp
mov
popa
pop
dec
lock
or
testl
mov
imull
xchg
pop
mov
cmp
push
cld
cmp
cmp
inc
mov
mov
out
and
imul
sub
dec
in
mov
dec
stos
cmpsl
cltd
jne
mov
out
out
es
inc
scas
add
and
data16
and
imul
dec
inc
ret
xchg
movsl
dec
xchg
dec
sub
inc
mov
ss
or
jns
das
cmpsl
pusha
xor
andl
push
pop
cmc
lea
test
lahf
leave
xchg
jae
mov
xchg
adc
testl
cmp
push
into
sbb
in
shlb
mov
out
stos
fprem1
jl
mov
push
xchg
ljmp
repnz
or
stos
in
pop
arpl
cwtl
xor
lret
add
mov
js
mov
push
sbb
adc
mov
aaa
movsl
fnstcw
xchg
push
pop
mov
popf
mov
xorl
sbb
jmp
add
dec
sahf
fiaddl
icebp
call
fsubrs
and
mov
les
scas
outsl
xlat
dec
push
xchg
push
loop
je
inc
xor
mov
cmp
sbb
lods
shrl
inc
push
gs
pop
in
lods
mov
jns
pop
push
rcl
lods
inc
cmp
clc
es
inc
cltd
xchg
adc
les
and
and
sbbl
push
pop
mov
push
or
ret
cmp
mov
or
cmp
push
and
dec
xor
enter
fstpt
lcall
scas
xchg
shrl
dec
imul
repnz
cmp
mov
mov
addl
mov
adc
pop
cmp
sbb
test
add
andb
lret
and
mov
ja
push
nop
cmp
jp
inc
add
in
stc
push
cmp
loop
aam
push
fimull
xchg
cmp
bound
mov
sahf
cmpb
subb
add
mov
cmp
aam
jle
jecxz
add
pop
daa
push
sub
fidivs
xchg
gs
push
clc
cmpsl
sub
cmp
mov
mov
xchg
stc
mov
push
dec
xor
adc
push
cmc
cmp
insb
aaa
imul
ja
popa
mov
mov
push
ret
arpl
inc
fstl
push
repnz
inc
add
shll
outsl
enter
jle
mov
aas
jge
or
xor
jp
sbb
addb
push
dec
cli
leave
adc
mov
fisubl
jbe
adc
pop
jecxz
cltd
inc
xchg
movsl
inc
stos
cmp
mov
adc
dec
sbb
test
mov
dec
in
jle
mov
jle
icebp
mov
push
out
sub
stc
jbe
xchg
jle
clc
sub
xchg
sub
popf
in
cwtl
sbb
sahf
scas
or
cmp
inc
mov
push
fs
cmp
mov
hlt
mov
adc
inc
out
mov
int3
test
movsb
neg
scas
cmp
in
push
mov
push
aas
sbb
sbb
or
fwait
or
cmpsb
cli
mov
mov
dec
jp
push
push
push
pop
outsl
jno
bnd
mov
mov
frstor
push
lds
cltd
sbb
lock
sub
push
mov
adc
dec
aad
lret
hlt
hlt
jns
cmp
mov
or
aas
or
xchg
fisttpl
and
sub
adc
aad
xor
adc
xchg
or
and
pop
loop
mov
dec
mov
bound
in
and
ss
popf
pop
adc
and
jns
ss
add
add
cmp
lock
int3
sub
push
shrb
test
sub
fiadds
cltd
lods
fstl
xchg
and
test
mov
cmp
xchg
les
into
mov
divb
cwtl
xor
push
cmp
sbb
cwtl
into
das
das
and
ljmp
mov
cwtl
setnp
icebp
xchg
add
lret
and
or
incb
rorl
add
jb
jbe
js
mov
lods
mov
or
stc
and
xor
testb
xor
out
out
jle
xchg
xchg
pop
call
les
mov
sbb
shl
push
mov
dec
rolb
mov
popfw
dec
testb
mov
pop
mov
jp
out
mov
aas
notl
xorl
out
xorb
dec
insb
loopne
jg
or
inc
loope
cli
lods
jmp
leave
pop
mov
sub
jne
push
pop
push
push
daa
mov
rcll
mov
or
addb
in
add
inc
mov
sub
call
jae
and
inc
into
inc
pop
test
int3
daa
out
insb
stc
out
orl
outsb
xchg
jne
inc
xchg
jo
cmp
push
sbb
mov
adc
movsb
lock
lcall
ret
or
out
in
repz
movsb
xor
incl
adc
push
bound
pop
push
call
lds
clc
xor
int3
movsl
pushf
sbb
pop
and
push
xlat
stos
sub
fisttps
inc
aaa
push
cld
es
pop
sbbb
jb
inc
cld
pop
sub
cmp
in
inc
mov
cmp
stos
add
fucomi
arpl
cmp
pop
shll
jae
in
inc
inc
cmp
aam
loop
sub
fwait
enter
push
mov
jo
sbb
dec
xchg
cmp
xchg
stos
jno
mov
insl
push
iret
repz
pushf
xchg
sbb
sarl
push
scas
test
mov
sahf
mov
lods
jg
push
sub
pop
xchg
dec
cmp
ljmp
pop
pop
call
fsubp
mov
pop
mov
push
data16
dec
arpl
ljmp
decl
lds
outsb
fcomi
sbb
cmpsl
jge
rolb
inc
mov
inc
mov
and
cld
mov
pushf
in
push
and
sub
jmp
fmul
enter
push
mov
sarl
ja
ja
push
jl
sbb
pop
push
adc
cmp
inc
cwtl
lcall
xor
pop
aad
push
mov
push
and
fisubl
xor
negb
xor
aaa
mov
out
mov
inc
test
xchg
sub
iret
pop
jp
pop
dec
test
loop
es
mov
mov
inc
pop
xchg
pop
and
pop
ljmp
std
cld
in
shl
xchg
add
or
ror
outsl
push
cmp
ret
rorl
and
in
and
jb
and
adc
rorl
sub
mov
es
mov
adcl
add
ja
pop
fdivr
call
jge
dec
lcall
shlb
adc
cli
adc
jnp
sbb
or
stos
and
popa
orb
add
pop
fcmovnu
bound
outsl
xor
pop
lcall
mov
rcll
adc
mul
movsb
in
push
stos
push
mov
call
or
add
setno
out
cli
enter
jecxz
sbb
int3
push
add
fiaddl
fmulp
cmpsb
mov
adcb
inc
imul
lahf
jecxz
out
rolb
int
jge
sbb
add
xchg
inc
xchg
movsl
ja
stc
pushf
push
adc
add
repnz
jecxz,pt
je
es
mov
inc
push
outsb
popf
cmp
add
ds
xchg
movntq
out
xlat
xor
push
dec
test
mov
sbb
es
mov
sbb
out
mov
dec
loop
insl
xor
cwtl
jne
dec
lods
fcomi
sbb
lods
jmp
mov
leave
imul
pop
mov
aad
mov
inc
insl
fcmovnbe
dec
scas
clc
mov
pushf
mov
cmpsl
sbb
push
mov
insl
imul
shlb
push
ja
sub
popl
fstl
rcrl
xor
imull
outsb
sbb
sbb
sahf
out
aaa
std
aaa
lret
xor
in
enter
test
lcall
xchg
mov
mov
sbb
jbe
sub
xchg
outsl
add
add
and
xlat
dec
pop
into
adc
aam
jns
sbb
mov
xor
aaa
xchg
dec
mov
addr16
jo
or
test
pop
in
add
pushf
lahf
sbb
or
or
inc
jo
dec
pushf
cli
and
pop
cltd
jle
neg
ds
or
loopne
mov
xor
rol
cmpb
out
pop
cmc
mov
add
sub
and
js
xor
enter
sub
xchg
movsl
cs
aad
in
in
or
lahf
push
je
pop
sarb
or
inc
lods
jbe
icebp
test
shll
mov
push
push
loopne
fisttpll
mov
testb
enter
imul
cmp
jmp
dec
cmp
ss
sbb
lret
sub
lcall
jle
lret
stos
and
dec
and
xorl
adc
mov
add
fs
jl
je
cmp
dec
fisttps
sub
out
mov
and
or
jmp
mov
inc
xchg
ja
and
out
mov
add
and
or
les
cli
sbb
nop
lret
mov
in
xchg
add
add
sti
and
enter
fld
jl
dec
adc
call
pop
adc
sbb
out
popw
mov
out
mov
sbb
xor
mov
mov
int
mov
mov
dec
sbb
ret
mov
cmp
out
movsl
sahf
sub
adc
cmpsb
lahf
mov
mov
sbb
push
sbb
sbb
ficoml
mov
pop
cmp
dec
jns
shll
and
cmpsb
adc
and
add
push
scas
xchg
inc
fcompl
mov
bound
or
mov
int
cld
adc
repz
notl
pop
add
add
clc
fdivl
fcmovb
add
popf
cli
inc
mov
aam
sub
repnz
xchg
mov
out
inc
pop
and
xchg
rcrb
loopne
stos
jo
lret
add
pop
hlt
ret
aaa
dec
out
dec
jno
and
rcrb
mov
pop
push
shll
inc
shl
sbb
sbb
in
leave
mov
xchg
mov
rorb
lret
push
xchg
sbbb
cmp
ret
pushf
jle
push
pop
mov
xchg
shlb
in
cmp
loop
add
clc
cs
or
out
icebp
ja
sub
rcrl
fistps
jmp
xor
push
scas
imul
push
adc
aad
sti
push
mov
inc
lock
sahf
aaa
mov
cmpsl
push
cltd
je
mov
in
jns
outsb
push
add
setae
lea
lcall
nop
ss
inc
sub
lret
jb
mov
mov
add
cmp
cli
lds
adc
pop
jae
sti
mov
aas
xchg
leave
cmpb
or
cs
xor
notb
mov
out
and
mov
push
push
adc
cmc
lods
mov
push
dec
sbb
sub
push
adc
dec
fldcw
or
rcll
jae
lret
inc
jmp
and
mov
add
sub
in
adc
scas
xor
lock
shl
dec
sub
jp
dec
or
push
mov
out
fldcw
lea
rorl
inc
lock
mov
sbb
xor
sub
icebp
inc
aaa
int3
mov
xor
scas
int
mov
sub
mov
stos
shrl
fcoml
pop
mov
std
negl
mov
pop
test
xchg
aaa
scas
xor
xchg
mov
xor
add
and
adc
sti
jle
add
hlt
insl
or
xor
cmp
lret
cmc
sbb
mov
cmp
test
mov
xchg
pop
js
mov
lods
movsl
mov
dec
and
in
xorb
leave
adc
mov
cmp
mov
xchg
pop
jne
bound
push
add
movsb
xchg
cmc
stos
dec
push
mov
loope
movsl
ret
mov
cmp
je
mov
cmpsl
xchg
daa
mov
incb
pushf
lods
mov
mov
lret
mov
jmp
dec
sbb
push
xchg
insl
sahf
dec
pop
jp
inc
mov
lock
cs
mov
sub
pushf
dec
lahf
add
jno
add
popa
mov
shrb
shrb
leave
dec
sti
test
iret
xchg
leave
add
inc
xor
ret
aaa
sub
cmp
scas
cmc
in
jbe
adc
icebp
jno
inc
orb
sub
fstps
leave
int
jecxz
je
out
shll
xor
pop
arpl
or
xchg
lret
pushf
nop
cmp
arpl
mov
data16
xor
push
dec
push
push
idivl
dec
dec
call
jnp
fdivrl
sub
xor
sti
dec
pop
jle
loope
xchg
mov
sub
das
mov
inc
cld
int
call
xchg
push
jno
aaa
mov
mov
mov
filds
and
xchg
add
popf
xor
les
mul
jg
adc
fistpl
mov
cmp
sbbb
add
dec
insl
add
mov
adc
sbb
xchg
cli
xchg
lods
mov
push
je
jmp
mov
jns
push
mov
stos
jo
fsubrs
icebp
les
fwait
rorb
mov
and
sbb
xlat
inc
mov
stos
gs
mov
mov
add
add
inc
test
cmpsl
add
xor
or
nop
scas
push
leave
aad
push
inc
repnz
sub
pop
iret
fimuls
xchg
mov
or
push
jmp
sub
mov
sbb
jns
and
js
add
cmp
sti
jg
clc
inc
mov
add
push
mov
mov
in
or
pop
xlat
push
inc
jnp
enter
mov
rorl
loope
sbb
ret
js
mov
xor
popf
loop
test
inc
loopne
imul
and
dec
ret
xor
pop
or
mov
push
je
std
jo
daa
sti
fdivrl
jno
jbe
xchg
mov
dec
dec
cli
ret
scas
out
xchg
xor
out
sti
sbb
push
mov
dec
add
cmpsb
aas
pop
pop
mov
lds
jo
lods
jbe
insl
cmp
inc
jns
push
fnstenv
sbb
mov
xor
orb
push
aaa
hlt
in
inc
out
xchg
or
push
pop
pop
cwtl
sub
pop
insl
dec
repz
mov
jnp,pt
push
clc
jle
sub
popa
int3
loope
js
mov
cmpsb
push
idivb
jge
lahf
or
mov
les
jmp
sub
sub
push
mov
pushf
add
mov
push
add
adc
repz
lret
xchg
or
hlt
sbb
pop
loope
add
adc
gs
mov
mov
sub
pop
clc
popf
mov
sbb
or
std
dec
je
pushf
xor
aas
push
dec
fcmovne
call
popa
cmp
out
and
dec
scas
xor
xchg
mov
mov
jbe
add
and
pop
fiadds
add
test
sti
add
or
repz
fwait
adc
or
repz
loop
fwait
dec
mov
dec
push
adc
gs
cli
das
jae
xchg
mov
ja
mov
jae
inc
js
bswap
ret
dec
cmp
xchg
aad
pop
mov
dec
daa
add
aaa
and
mov
lods
mov
and
push
jl
cli
pslld
cwtl
test
or
clc
das
and
jecxz
nop
sbb
push
push
xor
jle
fsubr
hlt
aas
mov
orl
rolb
scas
pop
push
sbb
mov
pushf
cli
and
cmp
pop
jne
pop
enter
mov
pop
loop
pop
inc
insl
out
xor
or
pushf
inc
push
cmpsb
and
shl
sbbl
cmc
push
adc
lds
test
stos
cli
loop
jne
dec
movsb
lahf
mov
fistpl
and
mov
pop
outsl
pop
xor
push
jno
arpl
mov
cmc
out
fs
aad
push
inc
rcrl
mov
aas
lds
push
mov
outsl
xor
cld
fdivs
pop
test
cltd
and
dec
xor
mov
jno
cmp
lea
iret
scas
lret
xchg
push
xchg
outsl
aaa
mov
fcomps
xor
xchg
mov
xchg
jl
mov
fs
add
loope
add
dec
xor
pop
shrb
movsb
outsl
lods
xchg
and
xor
andl
pusha
sbb
enter
add
ret
push
cmp
sti
int3
fiaddl
test
in
stos
pop
popf
ljmp
add
sub
mov
cs
outsl
ds
in
cmp
push
xchg
repnz
xor
add
sbb
rclb
add
pop
sbb
xlat
mov
rcrb
stos
in
pop
repnz
xchg
arpl
pop
cmp
jbe
cld
rolb
and
iret
pushf
pushf
mov
jle
loopne
test
pop
xorb
repnz
loope
or
test
pop
mov
jae
mov
pop
in
add
jmp
mov
clc
add
lds
and
adc
mov
lret
int
adc
and
xchg
sub
push
sahf
adc
sarb
setno
push
repnz
js
sar
dec
loop
test
adc
enter
roll
pop
sub
cmp
stos
push
cmp
in
fisubl
jb
hlt
add
gs
xchg
dec
aam
andb
adc
ret
xor
pop
xchg
mov
lock
cmp
lahf
cmpsl
xor
clc
jnp
cmp
int
test
sbb
or
mov
mov
xor
jecxz
mov
lea
jge
mov
bound
in
bound
push
data16
test
test
arpl
aam
lds
inc
fwait
push
jne
loopne
xchg
cmc
hlt
rcl
fldcw
jle
jne
sarl
lds
sarb
push
stos
push
and
jle
and
push
ret
dec
addr16
nop
popa
xor
nop
adc
sbb
ss
cmpsb
jecxz
ret
push
sub
xor
xchg
mov
xor
mov
cmp
insb
movsl
rolb
jb
xchg
cmpsb
or
cs
sahf
rcll
loope
call
jecxz
popf
add
daa
imul
jo
test
mov
cmc
mov
xchg
pop
fiadds
enter
adc
jmp
pushf
inc
xchg
jns
xlat
and
sbb
vpunpckhwd
insb
jle
pusha
cmp
push
xor
lds
adc
ss
scas
add
inc
adc
out
rcll
addr16
mov
fisttps
sahf
sub
add
ret
pop
mov
movsl
cmc
fwait
push
movsb
adc
add
aad
push
xor
fs
add
pop
lock
push
lock
jp
mov
mov
fwait
push
nop
pop
dec
test
inc
adc
dec
shll
clc
adc
adc
lcall
cmpsl
sbb
xchg
mov
mov
xchg
cltd
pop
mov
push
scas
ret
ret
xor
adc
jno
scas
xlat
cmp
jne
xchg
test
stc
or
xchg
mov
mov
push
mov
je
mov
lret
cmp
adc
dec
addr16
in
mov
cmp
mov
push
in
into
push
xor
popa
pushf
nop
xlat
push
scas
fisubrs
or
sbb
push
das
pop
jnp
push
sub
stos
dec
insl
mov
pusha
fcmovnbe
movsb
sbb
mov
ficoms
es
jmp
pop
sub
mov
push
cwtl
cmp
mov
push
hlt
push
mov
test
inc
jg
ja
jns
xlat
mov
or
pop
xchg
xor
pop
arpl
add
sbb
sub
test
test
mov
pop
mov
inc
jle
nop
int3
cltd
inc
or
addb
push
add
xchg
scas
mov
cmc
addb
mov
ja
ret
bnd
in
test
adc
mov
lret
imul
idiv
lret
fistl
out
ret
lods
sub
push
cwtl
fwait
out
inc
jae
addr16
or
sbb
and
movsl
sahf
rol
cwtl
loopne
fstpt
jno
cmp
test
loopne
or
add
jne
lea
adc
aas
nop
sub
rolb
loop
add
sbb
mov
test
dec
mov
in
inc
daa
enter
inc
test
addr16
repnz
push
sahf
pop
out
cmc
jecxz
and
adc
in
xor
fldl
sub
test
call
aaa
psadbw
out
in
jo
mov
or
pop
aad
popa
dec
fidivrl
out
dec
push
mov
mov
lock
sub
xlat
fwait
leave
jb
out
testl
or
inc
and
inc
cmc
jno
lea
mov
mov
xor
fcoms
xchg
push
decl
stc
in
sbb
pop
sahf
jg
je
pop
inc
xchg
add
stc
push
lock
ret
mov
iret
adc
lahf
bound
test
push
push
add
mov
cmpsb
jo
test
fimull
lds
and
stc
test
pusha
inc
cmc
lock
jne
mov
mov
dec
ret
leave
jns
loope
out
bound
and
mov
push
or
xor
and
lods
hlt
out
jge
adc
cmp
adc
dec
jmp
sahf
lret
mov
or
dec
repnz
jle
int3
popf
add
add
jo
xor
and
pop
jle
adc
movb
out
cmp
or
inc
sub
and
jp
sub
add
push
cwtl
dec
mov
sbb
lret
cmpsl
cltd
fdiv
bound
inc
pop
mov
xchg
jle
push
sahf
push
movsb
aaa
add
mov
mov
add
mov
xchg
dec
enter
stos
je
push
aas
adc
push
xchg
sahf
daa
movsb
cmpsb
daa
dec
pop
stc
add
out
xor
popf
dec
pop
or
ret
dec
sbb
xor
cltd
call
push
loope
ja
push
jp
xchg
xchg
outsb
iret
mov
sub
dec
stos
pop
cmpsl
cmp
int
rolb
outsb
mov
jbe
pop
sub
push
fcomp
pop
xlat
fidivl
xor
sub
ja
outsb
or
das
fnstenv
ss
mov
je
popa
inc
mov
aaa
je
cli
sahf
mov
or
xchg
xchg
push
adc
ljmp
inc
mov
jno
xchg
mov
gs
repnz
sahf
jns
xchg
stc
jge
pop
cld
or
out
scas
and
xor
cld
loopne
mov
arpl
xlat
inc
cmp
pop
mov
mov
sahf
outsl
or
jns
outsb
xor
fiadds
or
adc
xorb
mov
ljmp
not
sub
ret
out
clts
out
incl
movsb
imul
pop
mov
loopne
ss
mov
push
mov
mov
repz
inc
push
sub
stos
aad
and
mov
bound
aad
cld
xor
xchg
scas
pop
mov
push
sub
gs
dec
das
xor
insl
frstor
or
ljmp
mov
repnz
sti
and
mov
int
add
addb
imul
xor
push
dec
std
lret
jg
shrl
pop
popf
push
mov
and
loope
add
cwtl
mov
cmp
inc
bound
xor
cmpsb
jmp
sahf
clc
aaa
mov
lock
lcall
jnp
jns
pop
cmpsb
icebp
test
jns
mov
ret
in
out
sub
mov
jae
push
push
dec
repnz
lods
jo
jle
mov
adc
repnz
push
cli
cmc
imul
push
xchg
in
ret
addr16
xlat
or
jg
cmp
jne
sbb
inc
adc
jp
sbb
inc
imul
jmp
mov
mov
cmpsb
push
loope
cmpsb
adc
lcall
scas
push
and
aas
xchg
xchg
cs
ljmp
xchg
pop
out
roll
mov
or
add
xor
pop
mov
cltd
mov
jmp
sahf
mov
add
cmp
sbb
fisttpll
scas
pushf
cltd
cmp
ret
popa
or
lcall
dec
popf
outsb
cmp
lret
scas
inc
dec
jo
rorl
fcmovb
cmpsl
push
repz
cmp
repz
mov
ret
xchg
loope
mov
push
divl
jns
and
test
inc
aad
push
in
sti
sub
repz
jns
mov
jge
sub
jne
pop
nop
scas
adc
push
out
out
or
mov
lret
ds
pop
imul
das
push
jbe
xchg
sub
push
rorl
xor
decb
int
mov
cmpsl
mov
ds
jg
or
xchg
insl
pop
enter
stos
inc
mov
mov
movsb
push
xor
xchg
mov
out
add
bound
or
xchg
test
and
and
mov
dec
inc
pusha
loopne
sub
push
pop
pop
push
mov
pop
cmp
cmp
jns
and
cmp
stos
fs
push
or
xchg
cmc
lods
dec
sbb
testl
lahf
das
test
mov
fisttpll
test
cmp
ds
xor
fcoms
gs
jns
shl
push
out
sarb
add
jo,pn
rol
mov
enter
std
std
mov
mov
in
dec
je
or
pop
lds
sbb
push
dec
sub
dec
mov
pop
xor
sahf
xchg
pop
sti
or
lret
mov
inc
in
jle
cmp
dec
mov
push
dec
push
rcrb
push
fbld
loop
and
xor
dec
lahf
jne
testl
out
rorl
fisubs
mov
hlt
aas
fs
mov
push
lods
lea
mov
nop
cmpsb
push
ret
pop
push
xor
addr16
sub
cmpsl
xchg
out
ret
lret
sbb
mov
pop
cmc
or
jl
stos
pop
inc
pop
mov
push
stos
mov
call
nop
loop
sub
sbb
xchg
mov
pop
and
push
insb
imul
andb
movsb
pop
dec
or
inc
int3
ss
rcrl
pop
dec
jmp
or
loop
addl
fstps
add
fnstenv
mov
fdivl
iret
cs
in
jge
stos
or
mov
xchg
ljmp
lcall
pusha
aas
faddp
out
sub
inc
lret
push
cld
inc
jecxz
popl
pop
push
aaa
arpl
mov
inc
out
pop
ss
fs
cltd
lea
pop
pop
jae
and
ret
jl
into
or
lahf
jp
xchg
mov
push
orb
mov
cmp
dec
fcoml
mov
test
push
insl
push
xlat
js
inc
sbb
and
outsl
in
jmp
push
inc
sbb
es
insl
rclb
pop
add
sbbb
sub
in
stos
shr
ss
push
fnstcw
scas
pop
data16
push
cmc
adc
push
scas
std
test
xor
inc
cmpb
add
mov
push
dec
xor
xor
xchg
or
jae
lea
les
cli
xchg
add
xchg
scas
pushf
incl
mov
or
pushf
cld
xchg
mov
pop
push
and
mov
xchg
gs
fdivrl
lods
add
pop
lds
push
pop
mov
fcmove
cmp
or
insb
mov
gs
sti
mov
js
leave
mov
dec
sub
repnz
mov
repnz
and
lods
push
in
adc
adc
pop
ret
imull
mov
add
imul
iret
out
add
xor
cmp
mov
mov
aam
jne
push
das
mov
cli
scas
push
test
int3
mov
shl
and
fisubs
out
mov
clc
jg
bound
and
jb
mov
push
and
dec
xor
dec
or
cmp
cli
inc
hlt
xor
xchg
pop
cmc
mov
shll
out
test
or
out
cmp
dec
pop
mov
out
testl
daa
fbld
add
dec
sti
adc
pop
ret
js
mov
es
mov
pop
mov
int3
rcll
push
lahf
mov
and
mov
rclb
inc
sbb
pop
neg
aad
not
and
pushl
idivb
inc
add
xor
iret
aaa
clc
sub
mov
cmp
xor
jb
das
mov
jnp
lds
add
sbb
repz
loop
insl
and
cmc
out
aad
cld
mov
insl
pop
sbb
and
int
fldt
cmc
or
xchg
orb
ss
call
sbb
mov
lock
adc
test
mov
inc
push
rcr
sub
and
jecxz
std
jbe
mov
xchg
xor
addl
lret
popf
pop
push
pop
repz
popf
xchg
or
xor
sbb
enter
or
sbb
cli
xor
mov
leave
cmpsl
sbb
xchg
inc
adc
add
pop
inc
add
enter
xchg
insb
pop
pminsw
fcoml
cmpsb
test
sarb
adc
xchg
push
les
ret
cmp
push
into
push
out
sub
add
mov
jne,pt
mov
and
fwait
jbe
imul
push
mov
mov
test
repnz
leave
xor
stos
sarl
lds
mov
inc
test
data16
subb
stos
jns
loopne
mov
aad
shlb
es
sub
das
xor
repz
jae
sub
fcomi
hlt
out
sub
sbb
cwtl
and
imul
lahf
pop
pop
push
js
cmp
cmpsb
inc
cmp
and
jmp
fldz
mov
push
movsl
inc
repz
movsl
and
popf
xchg
test
push
jecxz
xchg
scas
cmp
dec
sti
mov
jb
push
cmpsb
dec
add
jae
push
push
pop
daa
je
les
dec
mov
xchg
outsb
push
and
test
xchg
pushl
push
aaa
xlat
gs
out
stos
sbb
or
pusha
mov
pop
mov
shll
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
pusha
fimuls
pop
jge
pop
jp
xor
sbb
pop
sub
bound
lea
inc
ljmp
mov
imul
add
ss
jmp
inc
xor
add
mov
xchg
cmp
decl
and
and
mov
movsl
sti
mov
pop
xor
mov
mov
jg
push
mov
mov
cmpl
aaa
idivb
adc
je
dec
lahf
stc
jp
push
icebp
cli
push
lret
ret
add
inc
nop
pop
aas
fwait
divl
lock
push
loopne
or
sbb
fistpl
ret
jnp
cwtl
cmc
sbb
test
outsb
cmp
pop
sbb
shll
adc
test
cltd
jecxz
loopne
cli
ret
testl
loope
fdivs
cli
stos
push
push
hlt
int
cmp
and
pop
pop
add
sub
push
push
mov
lock
mov
jmp
jno
mov
rclb
jp
fisubrs
aas
sbb
outsl
popa
pop
push
jno
sub
jl
dec
sbb
cs
push
mov
xchg
rcrb
push
stos
push
dec
inc
insl
mov
lahf
ja
cmc
mov
sahf
adc
leave
hlt
push
sbb
xor
loope
inc
mov
inc
andb
cmpsl
sbb
sub
push
ss
cld
jns
cmp
inc
dec
fimull
push
jmp
pop
adc
sub
fmul
mov
pop
in
cmpb
dec
adc
sbb
mov
push
xchg
sub
sbb
dec
push
cmp
xlat
xchg
fimuls
ss
clc
xchg
ud2
lcall
stos
inc
fcomp
cld
test
mov
fcomps
mov
push
idivl
xchg
stc
xor
add
mov
lds
xor
sub
fimull
adc
jno
dec
and
jns
xchg
inc
dec
int
and
aad
fs
call
mov
push
rorl
fcoms
lret
xchg
pop
cs
cwtl
cli
jge
mov
xchg
jle
dec
into
and
inc
and
shll
inc
mov
mov
jp
and
add
pop
sahf
cmp
xchg
fs
jae
les
sti
push
sbb
push
mov
mov
xchg
mov
and
dec
or
cmp
add
loope
clc
into
mov
das
mov
add
test
movsb
inc
mov
iret
in
xchg
lahf
mov
push
sahf
out
or
xor
xchg
lret
or
stos
mov
or
adcb
nop
jle
mov
jnp
push
cmp
repnz
cld
jmp
sub
jbe
push
pop
jnp
mov
ret
cli
jae
lret
and
andl
push
fisttpl
xor
jg
sbb
mov
sar
test
pop
mov
lea
popa
aaa
fmuls
es
pop
and
idivl
jbe
leave
fsubl
add
jg
add
js,pn
xchg
mov
push
adc
adc
lea
pop
icebp
mov
mov
fldl
aas
lcall
insl
sub
xor
mov
lcall
mov
out
fcompl
pop
push
mov
ss
jp
out
repz
aam
neg
mov
or
int
push
xor
int3
pop
xchg
xchg
adc
cmp
int
and
adc
cmpsb
push
mov
dec
fnstsw
sbb
dec
lds
xchg
cld
rorl
mov
repz
jne
ljmp
mov
repnz
pop
out
inc
ficomps
adc
add
and
lcall
jne
mov
push
push
movsb
in
dec
mov
in
fnstenv
outsb
inc
or
fwait
pushf
sub
and
mov
lods
enter
out
ja
jmp
jno
mov
gs
adc
mov
or
clc
pushf
ror
cwtl
aaa
mov
jae
inc
dec
cwtl
fcoml
pop
cmp
enter
fmul
rcrl
xorl
add
cmpsl
inc
jb
xor
xor
or
jae
xlat
iret
les
mov
mov
pop
mov
out
mov
cmp
jo
ret
bound
mov
test
jg
inc
lcall
daa
lods
push
inc
xchg
jne
jns
dec
push
leave
sub
mov
mov
cmpsl
fildll
pop
hlt
xchg
hlt
cltd
inc
push
cld
jg
jno
sarl
xchg
pop
and
mov
xor
fwait
ret
iret
ss
mov
adc
adc
ret
ret
jle
jp
sub
jb
repnz
mov
adc
cwtl
fcompl
lret
jne
sbb
mov
out
xchg
mov
mov
rclb
aaa
mov
cld
fs
jb
pop
sti
xchg
in
push
pushl
int
data16
inc
enter
insb
and
sbb
push
imul
adc
sub
pop
test
sub
repz
xor
push
sbb
lods
pop
jle
mov
push
in
inc
cmpsl
cltd
adc
or
scas
pop
pop
push
jl
punpckhbw
stos
movsb
test
xchg
lea
fdivr
mov
push
inc
out
fisubl
test
data16
mov
mov
movsb
mov
inc
loop
mov
in
add
pop
mov
xchg
test
into
das
pop
negl
lods
or
inc
mov
mov
insb
lcall
push
sub
push
rcrb
aaa
cwtl
mov
aaa
sahf
js
mov
mov
scas
iret
icebp
xchg
pop
and
aad
lret
adc
je
psubd
cmpsl
cld
loop
and
imul
xor
jge
push
es
movsb
mov
fmull
jp
adc
mov
cmpsb
xchg
xlat
jo
pop
pop
ljmp
push
cld
inc
xchg
sub
push
inc
loope
jb
adc
xor
ja
dec
mov
test
rol
inc
push
sub
lods
mov
imul
cltd
add
fs
xchg
push
push
and
or
into
jmp
inc
ljmp
cli
pop
cld
int
insb
mov
ret
jae
test
adc
inc
jbe
fisttpl
ds
jle
les
lods
xchg
inc
cmpsb
add
subl
mov
rolb
push
adc
xor
mov
sub
imul
mov
loopne
inc
add
and
mov
leave
jb
mov
jae
sahf
sarb
push
hlt
in
jmp
in
std
cltd
decb
inc
mov
dec
int3
jne
dec
in
jle
fs
jecxz
stos
inc
cmp
push
repnz
pop
daa
and
in
test
test
das
scas
mov
movsl
mov
jmp
adc
rorb
shrb
xchg
push
add
sar
push
inc
lea
inc
and
sub
rcll
lds
mov
sbb
push
xor
sub
movsl
push
add
leave
xchg
mov
inc
inc
dec
xlat
and
xor
sarb
lods
or
adc
pop
cmp
sahf
js
add
dec
fwait
stos
lods
xchg
jp
out
sbb
push
lret
cwtl
iret
lea
cs
jmp
dec
inc
pop
and
jle
mov
lret
cli
jp
ss
pop
outsb
push
jecxz
mov
out
movsl
pop
pop
lahf
cmp
mov
mov
pusha
ljmp
push
fcmovbe
fwait
sbb
loopne
jp
pop
sbb
rcr
and
push
cld
adc
push
into
inc
jle
clc
adc
in
pop
xor
adc
mov
mov
mov
pop
ds
es
adc
jecxz
fisubs
sahf
cltd
shrl
add
bound
in
ja
mov
or
ret
int
je
cmpsb
or
pop
mov
pop
loop
mov
push
scas
push
xchg
movsl
int3
mov
lods
sarb
pop
sbb
pop
pop
adc
pusha
pop
mov
mov
fimuls
outsl
int3
pop
mov
in
jne
pop
pop
popa
in
push
xchg
xchg
es
jno
adc
xchg
and
sub
pop
pxor
js
ret
jne
push
sub
jl
cmp
das
pop
int
daa
cli
inc
lahf
hlt
cmpb
subl
lret
mov
mov
iret
in
push
outsl
stos
mov
dec
sbb
sbb
push
mov
xchg
lods
and
stos
fsts
xchg
jno
sbb
jae
jae
xchg
movsl
lahf
dec
test
idivb
mov
test
hlt
divl
rorb
push
adcb
loope
adc
es
dec
and
scas
aaa
enter
sti
insl
sbb
in
daa
movsb
jle
loopne
in
ret
enter
and
cmc
test
mov
pop
lret
cmp
mov
mov
mov
push
cmp
jg
lret
lahf
push
or
mov
jae
ret
cmp
push
ja
test
mov
aas
inc
mov
outsl
jp
dec
outsl
xchg
or
ret
sahf
out
mov
jp
call
into
inc
or
je
out
add
xor
iret
mov
and
lahf
out
filds
pop
dec
mov
and
push
les
and
or
mov
rcll
test
movsb
push
jns
aaa
xchg
pop
cmpsb
les
pusha
mov
or
mov
jg
sbb
adc
jecxz
lds
or
js
xor
pop
outsl
xor
push
out
leave
pop
push
jecxz
arpl
popa
mov
cmpsb
push
shrl
hlt
subb
ja
movsb
sub
out
push
cli
dec
fsubl
insb
xchg
or
arpl
mov
popf
lcall
jecxz
bound
xor
push
in
pusha
add
jno
loop
out
rcrb
add
in
xor
fdivs
jns
cmp
push
mov
xchg
loopne
sub
adc
insl
jns
movl
and
jae
fsubrs
ficoms
jbe
int
iret
pusha
jno
mov
adc
pop
std
pop
rolb
ficoml
ss
dec
ss
pop
dec
sbb
fs
outsb
mov
sarb
jl
sarl
test
int
lea
mov
mov
daa
sbb
xor
js
inc
push
pop
pop
xchg
jae
jno
shrl
lret
stc
stos
outsl
add
sbb
sbb
jmp
std
rcrb
jne
push
das
lret
loopne
lret
sub
rcrb
insl
jle
lock
jge
xchg
pop
popl
xor
cwtl
es
add
push
shll
gs
icebp
jns
sar
lods
iret
sbb
mov
mov
lret
movsb
rep
sahf
addr16
les
cmp
ret
jmp
cmp
mov
repnz
pop
rcrb
and
test
push
movsb
lods
in
cmp
jecxz
fld
push
jmp
fistpl
pop
mov
push
mov
in
outsb
mov
stc
xor
std
mov
cmp
xlat
sub
repnz
out
push
mov
das
shrl
push
hlt
pop
sbb
in
cmp
fwait
rclb
rorb
mov
popf
sub
mov
push
xchg
jo
sub
xor
mov
fldcw
adcl
shrl
out
cs
leave
pop
add
mov
push
fcompl
sub
mov
add
or
inc
cmp
iret
mov
dec
push
lock
stc
bound
cwtl
pop
or
outsl
inc
sub
xlat
mov
xchg
sbb
push
jge
sub
es
mov
mov
and
xor
add
in
outsb
out
mov
ffreep
in
mov
idivb
in
mov
dec
gs
and
xor
xlat
add
mov
rcll
adc
adc
dec
and
btr
into
and
inc
inc
aas
sub
popf
sbb
mov
jge
adc
ror
or
pop
fisttpll
or
adc
push
jno
push
sbb
pop
push
ljmp
push
mov
in
inc
movsb
in
int
repnz
ja
rolb
push
jmp
insl
push
stos
sub
or
dec
or
adc
push
mov
cmp
cmp
cmpsb
sub
fimull
insb
mov
cmp
inc
inc
dec
jne
jg
xchg
push
adc
in
ret
stos
movb
mov
mov
aaa
gs
test
mov
push
sahf
cmpsl
cmp
jns
xchg
aam
shrb
js
sbb
push
rclb
sub
popf
cmpsb
ss
rclb
mov
adc
adc
sub
scas
inc
sub
xor
jb
in
std
outsb
dec
iret
jge
insb
push
sub
popf
push
stos
jl
int3
pushf
iret
movsb
cltd
pop
das
xchg
jmp
lea
daa
add
lcall
cmc
sub
andb
cmp
enter
les
aad
cmpsl
cmp
and
lods
int
int3
insl
rolb
adc
popf
xor
rolb
out
dec
cmp
pop
roll
xor
mov
lods
popa
and
js
outsb
je
mov
ja
stos
leave
push
fcoms
mov
or
adc
fwait
cmp
int3
cmp
push
ror
daa
push
add
push
fstpt
mov
test
mov
repnz
insb
push
adc
push
cmp
xor
in
jb
std
add
xchg
or
or
mov
jmp
jecxz
jle
loopne
pop
int3
pop
stc
in
sub
idivl
dec
and
ficompl
pop
cmp
sbb
subb
test
mov
cmp
adcl
push
dec
dec
in
js
fscale
jmp
fildll
sub
rcrb
push
sub
negb
call
xlat
loop
fidivs
inc
xchg
add
cmp
js
jp
mov
arpl
daa
bound
mov
mov
inc
xchg
xchg
jo
lods
mov
xchg
mov
daa
aas
fidivs
outsb
adc
lods
xchg
lea
pop
jp
arpl
add
scas
jne
adc
stc
ja
push
vpcmpgtd
ss
ret
dec
cmpsb
mov
enter
sarb
add
mov
lock
ljmp
adc
mov
sub
dec
jl
hlt
xchg
add
fiadds
xchg
repz
sbbl
aam
lods
jge
or
xchg
cmp
inc
mov
dec
pop
in
pop
sub
mov
lea
or
shlb
jae
sbb
push
add
add
cmp
jecxz
lret
pop
loop
std
lods
insl
pop
jno
cli
dec
shlb
in
jnp
popa
divl
stc
pop
sub
and
push
cld
jmp
sbb
mov
cmpsb
or
imul
push
loop
add
sub
das
and
ja
pop
repnz
fs
and
push
pop
xor
mov
dec
lock
push
mul
sub
xchg
and
lods
int3
sbb
ja
scas
add
aad
aam
stc
das
jno
sbb
mov
fcomps
cmp
cmp
fiaddl
cmc
daa
bound
pop
xchg
addr16
ljmp
lds
lret
jae
and
xor
ss
sub
jno
and
and
dec
imul
jnp
aaa
jge
ss
pushf
jbe
daa
aam
fsubrl
je
mov
mov
rorb
inc
out
xor
and
icebp
sub
push
test
mov
arpl
mov
cltd
add
scas
shl
push
mov
or
push
notb
test
and
pop
repz
xor
je
call
sbb
flds
cld
xor
cmp
stos
cmpsl
sub
cmp
movsl
xchg
or
movsl
push
out
or
shrb
in
push
jecxz
out
je
in
ret
ret
repz
lods
inc
orl
cltd
sbb
adc
insb
lret
aas
bound
inc
mov
leave
popf
inc
lcall
add
mov
gs
jo
xor
pop
mov
dec
rcrb
sub
jne
repnz
stc
xor
xor
outsb
mov
mov
test
adc
inc
test
sti
jns
jnp
aad
add
cltd
push
popa
push
cmpsl
or
clc
dec
popf
dec
mov
test
nop
mov
divb
inc
out
popf
dec
lock
sub
or
cmpsl
dec
and
cmpsb
push
mov
dec
mov
mov
add
jbe
pop
popa
xor
sub
mov
insl
xor
insl
mov
std
and
push
pop
addr16
mov
lods
cmpsl
or
pop
int
in
mov
inc
popf
and
mov
repnz
mov
add
lock
sub
jae
xchg
push
test
mov
or
cli
mov
movsl
and
mov
xor
push
popf
jmp
rcrl
mov
insb
pop
mov
xchg
addr16
xchg
mov
and
fdivs
iret
fisttpll
jmp
cmpsb
push
xor
les
dec
pop
cmp
cmpsb
push
lods
adc
add
adc
icebp
int3
call
push
pop
jae
cmp
sbb
mov
mov
popa
rolb
test
out
sub
jns
pop
mov
mov
sub
adc
sub
dec
leave
lret
sub
sti
andb
xchg
sub
push
xchg
repnz
inc
lock
sub
mov
or
sbb
daa
xor
sub
int
mov
cli
ja
push
or
lds
in
push
adc
lret
inc
es
or
lock
movsb
mov
mov
std
jo
add
sub
push
mov
jne
xchg
cmc
mov
jae
push
test
dec
in
das
stos
ret
shrl
stos
into
sti
sub
mov
jmp
push
into
xchg
xor
mov
mov
mov
sbb
dec
pop
jge
jle
lret
repz
jge
inc
das
test
cmp
in
imul
and
jno
jno
mov
dec
aam
mov
cli
sahf
idivl
inc
push
push
ja
shrl
dec
clc
mov
xchg
aas
push
jecxz
mov
sub
fucomp
sbb
xchg
push
push
sbb
pop
repnz
arpl
sbb
popa
popf
cmp
test
xor
mov
imul
fldt
cmc
jle
inc
fcompl
pushf
lahf
aaa
popf
rolb
mov
loopne
les
add
pop
out
dec
fwait
and
pop
in
pop
sub
repnz
loopne
ret
out
mov
leave
pop
dec
addr16
fs
daa
mov
cs
jae
lret
inc
cs
pop
push
cmp
push
cli
out
repz
mov
orb
dec
enter
mov
flds
or
pop
fisubl
sti
addb
imul
jl
push
cmc
or
insl
icebp
ljmp
sbb
arpl
rolb
or
xchg
pop
jnp
mov
mov
out
push
xor
stc
xor
pop
cmpsb
dec
jo
jle
fdivs
stos
mov
sub
fstpt
adc
cltd
xchg
mov
cmp
icebp
mov
ret
xchg
out
stos
movsb
shlb
int3
xchg
out
push
xorl
push
jg
ss
lock
test
adc
pop
sahf
xchg
into
sarl
xchg
out
cli
rclb
jg,pt
in
pop
iret
inc
cmp
adc
clc
cmp
or
iret
repnz
cwtl
jl
inc
bound
insb
push
dec
dec
dec
iret
push
dec
ror
cmp
or
xor
iret
push
daa
sub
cmp
pop
push
pop
xchg
add
inc
int
mov
add
mov
mov
jno
pop
dec
test
pop
mov
jle
sbb
test
xchg
into
or
nop
mov
jnp
insb
fistl
add
adc
jmp
xchg
movl
test
xchg
addl
xlat
repz
cmpsb
add
adc
loop
cmp
cmp
inc
out
enter
xor
bnd
cmp
pop
fisttps
cmp
repz
stc
in
nop
pop
mov
ljmp
sub
mov
or
mov
call
bound
outsl
and
scas
or
ret
inc
adc
iret
ja
jns
enter
gs
out
mov
hlt
movsb
mov
sub
lods
stc
in
jbe
test
adc
stos
pmaxub
push
outsl
pop
loope
fwait
mov
lods
das
pusha
repz
cmp
int3
push
cmp
ja
lods
and
test
das
insb
mov
xor
fldcw
push
push
mov
lods
mov
and
lret
push
push
loope
adc
scas
mov
iret
mov
sub
dec
rcrl
mov
add
inc
xchg
clc
mov
mov
enter
lcall
sbb
fwait
pop
or
ficomps
hlt
xor
popf
cli
cmpsb
out
or
inc
insb
std
sbb
or
cmp
push
out
fists
ljmp
pop
push
fcmovnb
loopne
push
pop
push
pop
inc
cs
cmp
push
cs
xor
movsl
cmp
in
pop
push
mov
fildll
test
push
repnz
mov
add
std
jge
pop
dec
in
xchg
push
and
andb
adc
mov
mov
dec
outsb
adc
lods
sub
loopne
iret
movsb
mov
scas
in
fs
dec
test
mov
test
dec
mov
pop
cltd
pop
cltd
mov
lods
sub
out
push
push
cmp
leave
push
push
insb
push
xchg
sti
mov
jo
sbb
stos
mov
aad
xchg
mov
mov
clc
loopne
mov
xor
adc
lcall
loop
shl
jnp
lahf
scas
xor
ss
jmp
sti
scas
sbb
stos
cmpsl
sbb
adc
lcall
pop
stos
or
xor
xchg
into
test
popa
lcall
xchg
pop
inc
int3
jbe
adc
jp
mov
or
jne
cmc
dec
add
mov
cli
push
mov
cmp
xchg
repz
or
enter
mov
fld
clc
and
mov
adc
jg
sbb
and
inc
leave
add
and
or
push
push
jg
aas
sbb
leave
scas
mov
cmpsb
jbe
sub
push
aad
scas
sub
lahf
push
jle
fnstcw
js
js
dec
lods
fimuls
xchg
test
scas
ror
pop
outsl
lock
rorl
leavew
mov
mov
add
adc
lahf
pusha
jo
push
enter
daa
movsl
icebp
scas
faddl
pop
clc
mov
jg
pop
dec
cmc
fstpt
xchg
dec
leave
int3
and
cmc
xchg
jns,pn
lahf
sub
fsubrl
push
add
inc
mov
ss
lds
mov
and
outsl
stos
sub
lds
cmp
xchg
lea
xor
xor
icebp
int
dec
rep
movsb
scas
inc
push
inc
or
pop
clc
mov
mov
mov
ds
out
call
and
dec
out
cmpsb
pop
loopne
pop
lahf
xlat
shr
stos
pop
arpl
or
lods
push
call
jmp
mov
fisttpl
jecxz
push
push
sub
inc
es
cmc
fnstenv
data16
add
xchg
sbb
stos
icebp
insb
ds
push
mov
test
sbb
jb
pop
cmpsl
push
jmp
movl
jg
mov
insb
stos
ja
pusha
xor
jl
scas
inc
hlt
into
lock
xchg
sbb
inc
xlat
jle
sub
mov
rorb
mov
pop
pusha
cmc
or
call
and
push
dec
xchg
mov
mov
pop
into
aas
dec
in
into
inc
enter
sahf
cmp
add
push
loop
jae
repz
sub
sub
xchg
mov
adc
pushf
lret
jl
ds
dec
sbb
ss
fistpl
pop
inc
jl
mov
sub
out
mov
xchg
inc
fcomps
repnz
inc
dec
ud2
xor
adc
cld
repnz
add
or
movsl
xor
ret
cmp
je
jp
push
mov
or
push
jo
push
xlat
out
scas
xor
push
jns
lcall
push
push
ds
pop
inc
mov
stos
lea
pushf
inc
imulb
iret
aaa
mov
mov
sub
cltd
shl
push
or
or
lds
faddl
pop
and
xchg
jnp
cmp
mov
cld
pop
sub
int3
out
xchg
leave
int
mov
stos
jb
ret
es
inc
hlt
lret
repnz
mov
sbb
push
sub
dec
mov
dec
popf
jae
orb
test
sub
in
daa
xchg
dec
inc
iret
sbb
add
test
dec
inc
xor
test
jne
push
push
add
int3
outsb
xchg
and
push
sbb
outsb
add
jae
sub
cmp
cmpsb
adc
jnp
ja
inc
jbe
movsl
repnz
push
ret
mov
xchg
sbb
pop
shl
push
push
hlt
mov
inc
push
aad
mov
fwait
jnp
cmp
cmp
jmp
int
addr16
lret
mov
jl
ret
adc
xchg
pop
push
sub
jg
sbbb
rolb
lods
out
or
push
add
sub
dec
mov
xor
popf
add
insb
fwait
xchg
pop
bnd
xor
add
cmovae
xor
iret
lea
push
mov
add
ss
dec
repz
mov
lret
pop
cmp
popa
adc
in
sub
cmp
push
out
add
imul
lcall
lret
fistpll
pushf
in
mov
lods
loopne
leave
ficoml
cmp
pop
rclb
fwait
ret
fmuls
rclb
pop
inc
add
push
popa
lret
sbb
dec
inc
in
les
fxch
int
inc
sub
repz
mov
add
mov
push
out
mov
lock
fistl
adc
ret
mov
ret
ja
or
call
mov
loop
adc
das
pop
outsb
and
dec
imul
and
outsl
or
cmp
sahf
leave
pushf
ret
scas
or
xor
dec
cmpsb
sub
sub
add
aaa
stos
in
xor
aad
stc
call
xor
or
out
fmuls
push
pushf
push
cs
xchg
dec
mov
mov
jmp
imul
loop
push
xchg
sub
add
fimull
or
xor
lcall
inc
xor
xchg
dec
cmp
sbb
call
movsb
xchg
inc
mov
lods
aaa
xor
push
cmp
icebp
sbb
lea
stos
bound
add
ror
bound
ret
cmp
cld
add
jl
je
test
aam
inc
lock
mov
or
lds
adc
clc
xchg
sbb
lds
lcall
fs
lods
sub
fcmovnbe
fcompl
ds
outsl
test
rolb
sbb
jle
mov
mov
dec
adc
mov
mov
into
popa
inc
add
or
pop
inc
dec
out
cmp
add
mov
test
xor
or
xorl
mov
out
pop
cwtl
das
inc
shlb
pop
pop
sbb
jbe
cmp
mov
rol
jo
add
jmp
xor
sbb
pop
int
out
and
jne
xchg
stos
xor
pop
lret
mov
lret
add
call
and
sbb
dec
add
clc
mov
pop
outsb
in
sbb
scas
or
not
iret
xchg
and
dec
aam
shl
pop
imul
leave
cmpsl
ss
insb
movsb
jne
or
adc
cld
xchg
jne
ret
sbb
xchg
call
out
pusha
xchg
xchg
pop
nop
add
popf
inc
retw
jmp
or
ss
xor
cmpsl
jmp
inc
or
pop
add
cmp
lea
xchg
xor
and
jne
les
mov
dec
mov
adc
mov
imul
dec
je
xchg
mov
jb
cs
push
pop
int
int3
jnp
mov
and
jp
inc
stc
cltd
fwait
inc
jae
cmp
int3
add
into
ja
pushf
pop
cld
fcmovbe
nop
mov
mov
pop
sbb
loopne
mov
cld
mov
mov
inc
xchg
push
lret
adc
aas
push
sbb
enter
adc
dec
and
xorl
insb
xchg
adc
rcrl
and
data16
mov
xchg
cmp
cltd
aam
or
add
cmp
subl
rcl
adc
outsb
leave
aam
mov
push
mov
shl
repz
popf
dec
pusha
stos
aas
push
mov
mov
mov
daa
push
gs
add
sub
xchg
xchg
adc
in
popf
test
dec
add
dec
movsb
out
and
mov
push
aas
cmp
aam
push
andb
insl
out
mov
mov
arpl
fidivl
sahf
pop
adc
or
pop
mov
iret
rolb
inc
mov
pop
push
into
lods
xor
jle
sti
mov
out
fstl
aad
mov
cld
fistl
sub
stos
aas
adc
in
mov
cltd
sub
add
decb
xor
pshufw
pop
pop
aas
and
orb
push
call
neg
out
into
jns
stc
adc
or
xchg
sub
fcmovu
mov
lahf
mov
addr16
sbb
inc
sbb
scas
sub
fidivrl
loopne
sub
xor
xor
repnz
and
mov
adc
nop
add
pop
mov
push
sbb
push
jno
sbb
mov
dec
lods
mov
lods
in
bound
jg
mov
gs
sub
inc
shr
ja
scas
mov
imul
test
cltd
cmc
ja
pop
dec
pop
inc
inc
adc
jmp
ljmp
cmp
and
pop
pop
fnstsw
mov
cs
int3
xor
call
mov
ficompl
or
ss
dec
cltd
mov
mov
hlt
and
push
mov
cmpsb
add
int
in
jle
xchg
clc
inc
dec
xchg
stc
dec
sbb
lods
test
sbbl
scas
cmp
rol
andl
popa
mull
aam
adcl
inc
lret
out
ffreep
mov
in
add
pop
out
popf
ja
icebp
adc
jb
pop
xor
dec
add
jo
or
fwait
pop
data16
scas
enter
fcomi
ja
shrl
xchg
inc
push
nop
add
addb
sbb
rcl
and
movsb
adc
loopne
pop
mov
mov
mov
cwtl
sar
sahf
mov
pop
pop
mov
inc
cmp
push
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
cmpsb
and
xchg
push
test
sahf
and
or
shll
cwtl
pusha
pusha
pop
sbb
push
mov
ljmp
enter
or
pop
sahf
adc
loope
aad
mov
jmp
fisttpl
cmc
xor
pop
mov
adc
push
mov
hlt
mov
in
cltd
aaa
cmp
and
pop
mov
mov
sahf
imul
lret
into
xchg
gs
mov
cmp
ret
adc
shrb
sub
jp
dec
cmp
inc
fdivp
out
mov
mov
fisubrs
push
or
add
popa
outsb
mov
xchg
lret
mov
data16
xchg
push
sub
xor
dec
sbb
loopw
popf
lcall
mov
inc
push
push
add
sub
inc
sbb
les
push
add
sti
add
xchg
mov
or
mov
cmp
movb
xor
dec
adc
mov
pop
jge
test
xchg
out
sbb
xor
sub
out
mov
std
pop
out
inc
dec
daa
lcall
mov
push
popa
inc
sub
stos
ljmp
jmp
sub
lret
lcall
mov
xchg
fldl
and
sti
aad
test
nop
sahf
or
or
test
xlat
test
dec
hlt
push
and
mov
pop
xor
jp
stos
and
dec
jp
pop
push
pop
jae
movsl
out
in
aam
jg
outsl
loopne
cmp
test
xor
leave
leave
repz
mov
sub
cmp
loop
ret
dec
mov
xchg
rcr
loop
ja
xor
fucom
in
les
stos
enter
inc
jbe
fcomps
lcall
pop
jle
lret
sub
xor
aaa
or
aas
dec
xchg
imul
imul
inc
jg
jne
insb
xchg
sbb
lds
lods
mov
or
js
movsl
insl
ljmp
mov
ds
or
xchg
jg
jl
addr16
add
hlt
mov
pop
add
mov
pop
dec
shrl
push
sbb
push
scas
xchg
pop
inc
pop
mov
sbb
fldt
cld
mov
xchg
fwait
jl
sub
dec
mov
testb
or
inc
shll
int
repz
push
sarl
fidivrl
movsl
decb
idivl
cmp
shrl
jns
mov
push
call
jne,pn
push
loop
in
iret
sub
mov
xorl
pusha
js
push
xor
imul
les
mov
cmpb
movsl
add
scas
jo
rolb
outsl
push
and
orl
out
adc
aad
je
mov
dec
popf
rclb
push
xchg
sub
sbb
jp
mov
ret
std
xor
push
dec
aas
aad
pop
scas
inc
push
pop
loopne
cmp
fdivrs
int
ja
sbb
in
int
mov
fisubrs
out
int
sub
dec
fisttpll
mov
stos
ret
push
icebp
adc
pop
push
and
sub
dec
or
fdivrl
cs
sbb
outsl
arpl
ja
and
pop
cmp
sub
add
imul
stos
sbb
cmp
gs
cmp
mov
cmpsl
sub
or
insb
sub
ret
cmp
daa
repnz
test
cmpsb
xchg
mov
fnstcw
adc
stc
mov
add
cmc
fisubrs
xchg
xchg
mov
pushf
fdivl
repz
pop
iret
frstor
sbb
aaa
or
loope
and
and
mov
dec
stos
andl
fsubr
sbb
movsb
cs
dec
adc
ror
xchg
icebp
jl
dec
in
cmc
jmp
lcall
test
push
rol
cmp
mov
inc
arpl
aad
jbe
jl
push
dec
fwait
lock
cmp
mov
cmpsb
sbb
es
mov
pop
scas
ret
add
ficompl
adc
jmp
or
xlat
mov
xchg
das
pushf
sbb
ds
lock
xchg
inc
lock
ss
js
jno
pop
or
mov
into
and
inc
adc
adc
jns
ljmp
jp
enter
rclb
xor
fxch
gs
jl
mov
rclb
insb
push
pop
sub
fcoms
arpl
xor
int3
cmp
pop
cwtl
fwait
mov
inc
outsb
imul
in
mov
cmp
mov
sti
inc
int
add
push
add
dec
int
sub
cmp
push
add
jb
in
dec
adc
loope
xor
mov
or
or
shlb
out
aam
inc
inc
cmpsl
mov
fistps
inc
xchg
dec
mov
sub
inc
iret
mov
xor
push
inc
push
xchg
jecxz
jmp
pushf
out
dec
ret
dec
push
mov
mov
xchg
lret
push
adc
mov
ret
pop
outsl
mov
or
in
repnz
inc
dec
scas
popf
adc
movsb
dec
cmpsl
push
movb
sbb
jo
sub
jg
mov
jae
pop
xor
xchg
jbe
xchg
in
mov
cwtl
inc
mov
jae
or
pop
pop
movsb
dec
mov
lea
iret
loopne
lods
push
arpl
pop
mov
sub
mov
in
adc
add
lcall
sub
mov
push
iret
adc
in
adc
mov
inc
pop
fstl
sub
gs
push
mov
data16
stc
addr16
lds
inc
call
popf
rorl
sysret
arpl
or
fisubrl
xor
cmp
jp
rcl
dec
xor
bound
xor
stos
out
pop
add
jle
clc
push
mov
push
xchg
or
and
xchg
fidivrl
pop
data16
mov
inc
aam
shl
lea
push
into
lods
rcrb
push
fnstcw
or
adc
imul
cmp
bound
test
jl
outsl
mov
inc
in
scas
insl
xchg
fdivl
cmc
mov
push
ret
sbb
cmp
mov
and
xchg
mov
jecxz
mov
pop
pop
adc
ljmp
insb
aaa
xlat
dec
cmc
psrld
lods
jp
mov
aas
push
ja
in
imul
loop
mov
mov
xchg
popf
xchg
mov
xor
sub
enter
addb
mov
enter
mov
addb
scas
repz
popa
sub
cmp
shll
insl
push
mov
cmp
dec
jp
and
mov
pop
mov
imul
pop
xchg
rolb
loop
movb
mov
mov
push
adc
adc
xchg
mov
sbbl
add
int
jae
inc
mov
daa
lret
mov
imul
mov
or
pop
fcmovb
test
and
popa
add
rcrl
and
lcall
loopne
ljmp
adc
mov
aad
test
mov
sbb
or
scas
push
mov
cmp
xchg
popf
push
es
into
cwtl
shll
shlb
cmc
mov
pop
or
insb
and
xchg
adc
xchg
mov
push
jecxz
xchg
pop
cmp
int
mov
lds
out
fildll
outsb
xor
out
inc
sub
cmp
jmp
fnstsw
cmp
pop
xor
inc
js
xor
mov
adc
sarl
pushf
xor
sahf
lds
jge
or
inc
lock
repz
jl
in
idivb
test
cmp
or
jns
rol
repnz
xchg
and
dec
or
scas
shr
cwtl
cmp
add
popf
orb
push
jns
sub
jecxz
mov
dec
loopne
or
popf
cld
adc
sbb
sahf
push
lds
pop
movntq
in
dec
xchg
push
xor
xchg
jno
xchg
inc
mov
and
mov
jnp
and
jge
pop
ret
mov
in
pop
push
out
mov
pushf
jmp
test
fnstcw
sbb
add
inc
sub
pop
ficomps
enter
in
ss
mov
xor
fistpl
icebp
push
adc
popf
jmp
inc
push
rcpps
int
adc
mov
repz
rcll
jb
mov
push
es
cwtl
push
int3
sbbl
sbb
bound
xchg
jae
lods
arpl
mov
test
xor
cmc
out
xchg
hlt
push
clc
jmp
xorl
mov
mov
imul
faddp
add
cs
inc
cli
lods
dec
cs
addr16
stos
sbb
fisttpll
jb
dec
pop
xchg
ret
pop
jns
adc
inc
push
jp
adc
mov
iret
lods
jbe
mov
inc
or
or
and
or
xor
adc
pushf
push
jb
mov
scas
xchg
lret
test
scas
inc
and
mov
aad
pop
adc
movsl
jns
out
push
jecxz
out
es
mov
mov
or
cwtl
lret
mov
mov
cs
xchg
push
sahf
sub
out
sbb
jecxz
in
bound
fwait
sub
jmp
push
push
fsubs
push
xchg
and
ficoml
lcall
fisubrl
mov
mov
adc
cld
iret
shlb
outsl
les
rorl
in
dec
cmpsl
mov
les
nop
das
addr16
stos
cmpsb
push
jle
lea
imul
mov
pusha
int3
call
cld
cld
mov
sbbb
std
adc
cli
xchg
popf
lea
ljmp
add
lods
xchg
fnstenv
lods
popf
add
int3
lods
insl
shlb
or
mov
imul
lret
fimuls
mov
cld
je
cld
test
mov
ja
jns
and
mov
adc
and
pop
pushf
mov
movsb
fisubrs
or
sbb
out
adc
xlat
inc
imul
dec
lock
pop
scas
repnz
jge
imul
sbb
sbb
movsl
xchg
sbb
imul
pop
popa
mov
pusha
rcrb
push
popf
mov
add
pop
jnp
pop
out
mov
divl
clc
jmp
out
fiaddl
cmp
in
jo
scas
adc
loope
popa
sbb
fs
rolb
add
scas
out
mov
outsb
xchg
dec
lea
jnp
cs
test
loop
push
xor
jns
fsubrl
or
loop
add
lret
pop
dec
pop
out
in
xor
xchg
mov
mov
shl
idiv
fwait
pop
pop
xor
pop
sub
insb
jl
enter
xchg
pushf
jns
stos
mov
enter
das
or
mov
or
push
icebp
ret
push
jnp
in
loop
lods
stos
jp
fidivs
inc
aaa
arpl
movsb
adcl
dec
push
scas
out
lock
lahf
push
les
sbb
push
sbb
mov
sbb
sbb
jmp
mov
test
dec
lds
pop
mov
enter
mov
sub
cmp
lods
mov
lock
aad
xor
out
popf
and
fldt
pop
pushw
pushf
cld
fadd
fmull
in
lahf
roll
scas
mov
xor
push
imul
fiaddl
jno
push
xchg
mov
std
arpl
lret
sub
fisttps
frstor
loopne
paddusb
add
mov
dec
jge
xchg
sub
jl
imulb
fidivl
lods
repz
ficompl
xor
aaa
gs
add
subb
movsl
mov
jns
mov
lock
mov
stc
ds
push
sub
and
add
dec
popa
ret
add
xlat
dec
in
pop
push
push
and
out
in
rcrb
std
pop
mov
repz
imul
add
adc
rcl
xchg
movsb
adc
xor
mov
jecxz
sbb
test
lcall
xchg
ret
lock
lahf
punpckhdq
into
xchg
lods
or
xchg
or
lret
adc
adc
jnp
mov
outsl
add
stos
sahf
sub
pop
cmp
jae
mov
ret
subb
xchg
xchg
ds
data16
jecxz
loopne
andb
xor
xor
cmp
push
pop
clc
loopne
inc
cld
dec
cld
xchg
loope
popl
mov
push
xor
mov
ret
dec
dec
cmp
sub
or
or
adc
xchg
cmp
xchg
fisttpl
dec
mov
cld
clc
nop
dec
lods
and
pusha
addr16
in
jl
enter
push
daa
in
xchg
or
xchg
sub
out
or
fsubs
pop
clc
loope
leave
cmc
popa
lods
add
addr16
mov
notl
xor
daa
pop
mov
and
cmpsl
cmp
jbe
or
push
pop
aad
loopne
or
aam
push
in
pop
and
addb
call
repz
push
inc
cli
cmp
ljmp
cmp
loopnew
inc
or
adc
sbb
push
xchg
pop
iretw
in
not
js
mov
mov
cltd
mov
jbe
jge
cltd
sarb
loope
movsl
sub
cltd
jl
hlt
add
pop
int3
xor
out
testl
test
sti
out
fldlg2
dec
jne
and
jnp
popl
jmp
in
xchg
stos
pusha
pop
shr
inc
out
sbb
loope
cmp
xchg
rolb
ljmp
gs
cli
or
pop
mov
push
cld
pop
repnz
mov
jecxz
out
xlat
sub
jo
ss
mov
je
shlb
sbb
add
fcmove
movsb
aam
out
in
mov
fcomp
push
inc
mov
push
in
hlt
sbb
das
inc
ss
ja
shll
jecxz
adc
loope
xchg
xchg
mov
pop
mov
xor
push
sub
push
in
push
dec
xchg
pop
mov
adc
and
negb
inc
cmpsl
cwtl
aas
lahf
mov
push
or
roll
lea
fimull
loope
xlat
stc
push
jmp
sub
pop
lock
add
jno
mov
mov
int
mov
test
push
and
ja
sbb
test
loope
rolb
imul
dec
push
movsl
and
mov
cmp
mov
push
repz
sub
add
pop
jnp,pn
lcall
cltd
ret
dec
mov
fld
ja
xchg
aam
mov
add
dec
sub
mov
push
xor
add
fnstsw
jl
pusha
roll
push
jmp
call
or
or
cmp
ret
fldenv
dec
lock
pop
repz
or
inc
cmc
insl
jl
arpl
inc
cwtl
fstp
pop
adc
push
cwtl
mov
pop
cmp
or
scas
xchg
loope
and
xchg
inc
pop
imul
in
sbb
leave
out
pop
inc
xor
fcmovnu
push
xchg
xor
mov
and
xchg
loopne
fcompl
sbb
inc
xchg
sar
jp
out
push
cmpsb
dec
cmp
out
in
mov
es
jo
mov
mov
adc
stc
sbb
pop
dec
out
mov
xor
and
cmp
std
aam
gs
cmpb
mov
push
stos
repz
in
lret
out
int3
cmp
dec
outsl
nop
sub
cmc
adc
das
push
test
dec
mulb
popf
test
pop
xor
dec
iret
dec
hlt
mov
dec
push
jo
test
rcll
bound
pop
subb
add
jp
les
jp
dec
cli
in
inc
xchg
add
repz
mov
push
pop
cltd
cmpsl
jno
pop
cmpsl
push
inc
xchg
and
cmp
lret
lea
gs
das
cmc
ret
jge
insl
in
cwtl
iret
ss
push
jae
and
mov
or
out
xchg
jns
sub
xor
sub
iret
and
sarl
lcall
xchg
pushf
inc
cmpsl
test
nop
adc
js
add
icebp
gs
insb
sbb
add
fidivl
inc
pop
jns
fs
sub
cmpsb
push
mov
xor
std
pop
jb
adc
push
sbb
push
mov
sahf
scas
out
jb
cmp
push
in
imul
popf
xchg
mov
pop
push
jns
in
xchg
pcmpgtb
mov
std
inc
add
into
icebp
sub
ret
out
sub
stos
dec
cmpsl
dec
popf
dec
pop
and
stc
cmp
xchg
insl
xchg
fiadds
rorl
and
ret
dec
sahf
pop
insl
xchg
cmpl
jb
inc
ret
test
cmp
in
lods
add
sar
mov
cmp
or
call
test
mov
mov
pushf
sbb
enter
lret
jecxz
ss
mov
inc
jge
call
call
out
hlt
stc
lret
cmpsb
mov
movsbl
imulb
icebp
sub
fildl
fildl
rclb
call
scas
out
stc
xchg
mov
jae
shrl
or
mov
mov
shlb
pop
sti
hlt
xchg
loope
inc
aas
ds
push
jecxz
xor
dec
rcrl
or
mov
out
aam
fistpll
mov
cmpb
daa
push
xchg
sbb
lods
aam
in
out
fcmovne
loope
shll
sarb
and
mov
sub
daa
add
int
jne
add
dec
arpl
fcmovb
shl
adc
add
stos
jb
lret
lret
imul
jg
add
jmp
ljmp
jmp
inc
jge
fadd
push
mov
insl
push
loope
pop
lods
test
xlat
cmc
cltd
jo
js
call
jmp
cmp
sbb
adc
jo
cmp
and
adc
dec
in
inc
mov
cmp
fiaddl
in
and
lret
push
sbb
lds
cwtl
xchg
mov
das
push
inc
rorl
pop
cmp
mov
pusha
mov
ret
aad
sahf
in
iret
inc
vpabsw
jbe
and
aaa
push
adcw
and
jnp
inc
scas
cmp
jnp
repnz
mov
aad
pop
andl
dec
mov
inc
nop
stos
cmpsb
pop
inc
push
iret
add
mov
int
push
dec
mov
cmp
jg
lods
cmp
xchg
jae
mov
sti
adc
fildll
push
popf
cmp
adc
ret
mov
pop
xchg
or
loope
push
xchg
mov
jo
mov
int
scas
dec
call
sar
jmp
jle
jno
call
sbb
scas
pop
imul
or
pop
sub
fists
sbb
mov
jns
data16
pop
jle
dec
jecxz
mov
fcmove
xchg
cmpsb
fwait
icebp
jne
hlt
andb
pop
lcall
pop
xlat
scas
cmp
dec
jns
out
lods
and
jl
aaa
in
push
out
outsl
stos
aad
xchg
fimull
mov
add
filds
ljmp
xor
fs
mov
subb
jmp
sbb
rcll
xor
adc
mov
out
mov
sub
test
dec
jl
repnz
jb
inc
sti
sbb
fdivr
sub
sbb
add
or
mov
fidivrl
dec
ficompl
xor
lods
push
xor
adc
push
sub
cmpsb
adc
sub
outsl
adc
mov
iret
in
mov
daa
cmp
xor
adc
arpl
sti
push
repz
ret
shlb
adc
mov
shlb
adcb
xchg
lahf
push
aad
es
aas
rcrl
pop
stos
out
leave
sbb
out
enter
jbe
mov
xchg
outsb
leave
xlat
pop
repnz
mov
pop
ret
sti
std
adc
setne
bound
ja
xchg
lret
cmp
data16
stos
sub
ljmp
out
fyl2x
add
jle
repnz
push
jo
loope
xor
outsb
sub
je
orl
mov
push
movsl
or
imul
or
sub
andl
mov
cwtl
outsb
mov
roll
rorb
push
pinsrw
sub
data16
mov
mov
aad
push
je
loopne
cmp
adc
pusha
cmc
repnz
sar
fsubrp
cli
rorb
xchg
push
pop
xchg
shll
ljmp
test
fdivr
fwait
push
mov
test
sub
inc
mov
xchg
dec
add
sub
jae
pop
xor
loop
ffree
cmp
mov
shr
mov
fstpt
mov
loop
xor
mov
ljmp
dec
stos
xchg
jmp
rclb
add
dec
xchg
adcl
or
sti
fldlg2
pusha
lock
inc
dec
ja
inc
mov
iret
fnstsw
jle
shlb
fwait
pop
dec
inc
lret
xor
inc
scas
push
outsl
and
call
pop
insl
sub
mov
xchg
xchg
push
lahf
dec
push
fistl
aas
xchg
cmp
sbb
dec
imul
outsl
add
inc
stc
lahf
imul
repz
sarb
and
push
inc
lock
sti
jno
jnp
lahf
andl
test
pop
lock
jl
and
stos
lods
vorps
dec
mov
test
dec
mov
jg
inc
arpl
inc
pop
sti
movsb
movsl
xchg
jo
xor
and
loop
fildl
push
cld
stc
and
das
pop
and
mov
dec
or
jmp
aas
or
lods
inc
cmp
movsl
stos
das
or
lret
sar
xchg
jno
xor
pop
daa
pop
cltd
fld
push
rol
mov
inc
mov
fsubrl
pop
jae
sub
adc
and
out
in
out
dec
in
mov
outsl
and
repz
arpl
dec
pop
push
mov
jns
cmp
into
je
stos
loope
pushf
cmpsl
int3
into
stos
add
and
pop
repz
sub
inc
out
cli
cwtl
outsb
inc
lea
out
in
sti
pop
dec
loope
imull
out
adc
daa
out
fistl
xor
inc
push
sbb
jge
or
scas
add
addr16
aaa
push
imul
scas
or
icebp
aas
shll
push
push
sub
or
fisubrs
data16
pop
xchg
lods
repz
ss
rcl
out
add
int
add
cmp
mov
inc
lahf
repnz
pushw
xor
int3
cmpsl
out
push
cmp
mov
verw
push
das
inc
lret
or
mov
or
dec
mov
xchg
inc
arpl
xor
inc
psubd
loopne
inc
jb
mov
inc
add
sbb
enter
jp
sub
out
rcll
push
pusha
es
dec
mov
lret
ss
outsb
sub
inc
adc
add
jge
out
lea
inc
adc
push
jle
int3
pop
mov
jnp
punpckhdq
cltd
push
xchg
call
loop
shl
xor
dec
scas
int3
lods
scas
jns
xor
and
scas
js
lcall
mov
add
test
cltd
push
lock
sbb
idiv
ljmp
insl
sahf
icebp
stos
test
adc
inc
pop
mov
cmp
test
sub
sbb
mulb
scas
push
push
adc
lock
mov
xchg
out
data16
xchg
inc
jmp
add
mov
movsb
pop
mov
or
sbb
push
jnp
sahf
add
pop
dec
adc
and
xor
notl
sahf
sub
ret
push
into
lods
dec
lcall
stos
in
or
js
cld
pop
call
stos
andb
pop
xchg
lea
rcl
clc
jbe
nop
jbe
mov
bswap
push
push
jae
xor
lea
mov
push
mov
lds
sub
and
cmc
fwait
repnz
xor
imul
mov
ss
sti
xorb
es
shll
jns
sbb
mov
mov
and
jo
leave
aam
mov
arpl
and
stc
in
fwait
shl
pop
xor
loopne
lock
cmp
sub
orl
repz
push
test
aam
pop
xchg
popa
repz
lahf
sub
lret
in
cmp
dec
cmp
test
push
std
jnp
sub
int3
mov
add
or
push
push
or
xor
fisttpll
and
test
fisubrl
fldl
mov
cmp
and
imul
into
insl
repz
imul
jae
idivl
push
movsl
scas
adc
mov
ja
push
into
add
xchg
rolb
test
aas
mov
lock
fdivl
out
sub
add
pop
sbb
jle
ficomps
mov
pop
push
cmp
stos
aaa
and
call
cmp
jp
pop
movsb
arpl
dec
shr
mov
mov
out
loope
test
sub
or
add
lock
in
cmp
push
ja
call
aaa
js
mov
jp
dec
dec
in
dec
mov
lods
movsl
mov
popa
je
loope
dec
loope
mov
fldenv
pop
lret
outsb
sti
and
jne
mov
jp
fstpt
jl
mov
stos
les
push
inc
mov
decb
loopne
xchg
cmp
cmpl
or
sub
mov
and
popf
sbb
xor
or
or
mov
aas
mov
dec
daa
pop
icebp
push
sarl
jae
in
call
xchg
or
xor
jmp
stc
sbb
es
notl
pusha
cmpsl
hlt
mov
lea
leave
mov
jne
pop
xor
ljmp
mov
push
push
into
imul
aas
push
fisttpll
dec
movsl
ljmp
jmp
mov
mov
adc
arpl
adc
push
fisttpll
mov
dec
pop
adc
js
adc
fistl
in
dec
jmp
xchg
mov
xor
outsb
jb
fsub
add
or
jae
xchg
rcrb
jo
xorl
js
ficoms
loopne
outsl
shrl
mov
adc
push
inc
lret
dec
add
insl
fdivs
out
test
stos
data16
test
lea
sahf
dec
mov
push
mov
inc
jb
aam
push
sbb
loope
inc
jg
insb
dec
adc
ds
faddl
fsubrp
js
cmp
dec
fisubs
gs
popf
outsb
divb
or
jo
xor
pushf
sbb
sub
data16
iret
jb
adcb
push
pop
mov
jmp
push
enter
adc
pop
dec
lock
add
loope
cli
into
mov
mov
and
inc
mov
dec
jl
pop
imul
les
leave
movsl
inc
pushf
mov
sysenter
scas
int3
xchg
imul
xchg
mov
mov
dec
roll
mov
or
xor
into
cmp
dec
jg
sarl
in
jge
pop
or
cmp
test
mov
fcmovnb
jne
lock
das
pop
pop
das
mov
test
push
cmp
lea
ss
mov
imul
lock
and
adc
dec
aaa
roll
mov
cmp
js
sub
dec
mov
cwtl
lods
mov
pop
sahf
cmp
dec
mov
outsb
mov
lcall
pop
inc
mov
popf
add
push
test
lret
movsl
push
shld
dec
pop
cltd
lcall
or
sbb
pop
push
xor
sub
out
push
inc
lcall
mov
gs
test
mov
imul
dec
lea
mov
pop
jp
push
cmpsl
jl
rorb
sbb
sbb
add
fldl
or
xor
and
pop
inc
imul
dec
xor
lds
add
imul
xchg
loope
es
push
add
js
mov
insb
fwait
or
movsl
push
aaa
in
cs
loope
sbb
leave
xor
sub
jo
lock
pop
fsubrs
mov
mov
xor
lahf
in
shlb
and
sbbl
fcoms
adc
lahf
and
jnp
inc
mov
call
aaa
aas
mov
clc
fcomip
out
outsb
xchg
repz
lret
gs
mov
sub
mov
test
int
xor
jns
out
push
jae
ljmp
cs
pop
js
mov
arpl
dec
xor
jle
faddl
add
cmpsb
loope
xor
dec
sub
cld
scas
enter
sbb
daa
negb
push
repz
les
gs
xchg
mov
push
adc
iret
pop
ret
lret
inc
jbe
cmpsb
push
and
xlat
aas
mull
adc
mov
subl
addr16
pop
and
iret
jp
cs
movsb
add
sarw
dec
push
ss
adc
test
jge
loopne,pn
jne
lods
push
cmp
int
mov
add
inc
subb
mov
dec
xor
data16
pop
xor
cmpsl
movsb
repnz
scas
mull
xchg
adc
fwait
jae
sbb
push
lretw
sar
fdivrs
adc
mov
xchg
jno
aam
jnp
jg
repz
popf
dec
repz
test
mov
popf
cli
push
cmp
lods
fstpt
push
mov
int
mov
push
jb
jecxz
popf
adc
cltd
mov
fisubl
cli
arpl
jno
sahf
or
call
sub
or
movsl
adc
addr16
jecxz
mov
sbb
in
das
xor
cmp
adc
inc
jne
adc
mov
dec
jmp
add
cmp
adc
mov
mov
dec
mov
aaa
sbbl
mov
cmp
xchg
push
xor
dec
jbe
sbb
inc
sbb
jne
xchg
arpl
push
mov
and
js
xchg
rcrl
mov
pop
jae
inc
call
idiv
jmp
int
pop
filds
xor
data16
and
ret
std
pushf
lods
je
popa
int3
fnsave
js
sahf
sbb
je
inc
or
insl
ret
test
ret
mov
mov
dec
repz
aad
test
mov
icebp
jo
pop
dec
push
xchg
inc
cwtl
ret
std
sbb
cmp
aam
mov
adc
fnstenv
sub
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
insb
sbb
sub
jge
aas
pop
jp
shrb
cs
es
sub
movb
clc
inc
pop
xchg
shll
loop
cmp
out
mov
std
mov
iret
mov
adc
pop
lret
cmc
mov
jno
out
loopne
mov
test
jp
scas
movsl
cmp
test
sub
daa
addl
out
or
or
jb
sub
or
int3
add
fisubs
mov
mov
pop
sbb
ds
outsb
push
add
cmpsb
inc
inc
cmp
fiadds
mov
inc
rorb
inc
test
mov
jl
add
ja
xchg
sti
and
ret
xor
iret
mull
mov
lcall
pop
adc
lea
iret
pop
test
sbb
jmp
push
xchg
jno
mov
push
js
or
roll
push
cmp
sub
dec
repz
test
mov
int3
insl
ljmp
push
cld
xor
inc
imul
mov
xchg
push
imul
sub
sub
int
push
orl
sti
xchg
push
in
push
out
pushl
fucomp
xchg
sbb
sbb
ds
adc
adc
repnz
dec
cmc
enter
xchg
adc
aam
dec
enter
mov
sbb
fcoms
dec
mov
divb
inc
in
push
repz
lcall
mov
lock
aam
jmp
aas
inc
call
negb
sbb
dec
je
das
add
and
mov
loopne
fdivs
fwait
dec
rep
and
mov
jae
sbb
fwait
add
sub
or
into
mov
jl
or
adc
mov
dec
xchg
shll
outsb
and
and
cmp
xchg
shlb
ja
sbb
je
mov
or
jb
xchg
insl
jae
push
outsl
pop
movsb
fld
mov
test
adc
sbb
jp
xchg
shll
jns
or
daa
inc
gs
pop
bound
test
adc
dec
dec
xor
mov
adcb
jmp
or
mov
xor
in
sbb
cmp
into
lea
mov
shrb
cltd
adc
add
aas
xchg
addr16
push
test
mov
cmp
xchg
mov
jno
jecxz
insl
cmp
hlt
mov
shll
mov
movl
add
rorb
mov
sahf
xor
rcrb
aas
lods
adc
rdtsc
cmp
rolb
xchg
inc
cmp
adc
insl
lcall
ljmp
clc
test
jmp
push
aad
sbb
gs
lock
push
fiaddl
incb
xchg
inc
es
xor
push
add
pop
mov
inc
pop
xchg
sub
jbe
dec
test
or
in
js
cmp
mov
arpl
mov
pop
cltd
mov
movsb
not
mov
mov
lahf
out
in
push
shlb
sbb
xor
push
mov
mov
jl
sub
add
add
outsb
cmc
jo
repnz
and
mov
rolb
mov
lods
and
loop
jmp
frstpm(287
sub
insb
sahf
rcll
push
xor
js
fs
movsb
cmp
mov
or
les
ficoms
cld
or
lret
jns
cltd
mov
dec
lods
mov
pop
pop
stos
and
shr
out
dec
xchg
rolb
sub
cmp
scas
repz
pop
outsl
push
xchg
scas
loop
imul
repz
imul
jbe
rolb
push
ret
idivb
enter
cmp
icebp
inc
das
daa
cmp
xor
out
pop
in
jae
imul
add
xchg
in
push
cli
inc
fs
xchg
pop
pop
lret
dec
lea
push
cmp
fcomps
pop
cmc
daa
sbbl
xchg
das
xor
and
xor
inc
jp
insl
jnp
addl
ljmp
call
jecxz
adc
fiaddl
je
pop
mov
into
cld
sub
xchg
dec
pop
fadds
xchg
inc
inc
in
mov
sbb
outsb
inc
je
add
fidivrs
jae
and
punpcklbw
or
pop
push
inc
out
cwtl
dec
popl
loopne
adc
mov
mov
addl
push
pop
mov
into
push
aaa
jg
add
dec
sbb
mov
mov
pushl
add
in
sub
pop
jp
je
add
lahf
loopne
mov
scas
mov
push
xor
xor
jecxz
aam
xchg
inc
daa
push
mov
add
int3
in
bound
cltd
es
pop
xor
or
add
jmp
mov
sbb
mov
hlt
pop
jp
sub
outsb
mov
imul
test
pop
pop
ret
addb
pushf
dec
add
adc
mov
and
sti
es
adc
xor
fiaddl
pusha
bnd
or
int3
js
mov
sbb
xchg
jecxz
add
pushf
icebp
les
aad
outsb
pop
jmp
icebp
mov
cli
lcall
imul
out
jb
pop
in
mov
out
imul
mov
mov
sarb
jmp
bound
dec
dec
or
out
mov
jno
inc
inc
jbe
xor
mov
push
sbb
std
test
test
add
popa
lods
cltd
faddl
dec
ja
or
orb
loop
fstps
neg
fisttps
out
mov
stos
inc
adc
or
inc
xchg
shrl
or
int
adc
push
in
nop
adc
ss
cmp
add
xchg
fstp
int3
sbb
xchg
push
push
pusha
push
aas
cmp
ljmp
rolb
mov
and
adc
out
in
sbb
mov
shl
es
cmp
aas
rcrb
fldenv
cmp
xor
add
mov
out
lods
cmc
push
mov
mov
dec
and
mov
mov
lahf
xchg
mov
jnp
lcall
inc
cmp
xchg
sub
adc
inc
push
xchg
inc
and
outsb
xorb
popa
testl
cltd
jmp
push
aam
mov
xor
push
aas
jns
outsb
je
mov
fildl
jns
inc
int
pop
xchg
movsl
das
lahf
jl
insl
lods
push
and
push
subl
pop
or
cmp
iret
adc
lea
xor
mov
mov
jae
stos
and
decb
inc
push
daa
cmc
xchg
test
outsb
dec
stos
aad
mov
mov
jmp
fldenv
pop
add
inc
fs
mov
repnz
push
jp
ds
int
xchg
inc
sti
jmp
mov
and
push
sub
scas
jg
je
xchg
mov
inc
fwait
jne
clc
jp
repnz
ret
and
out
addr16
jecxz
dec
push
inc
jmp
call
mov
decb
xchg
cmp
mov
stos
inc
in
stos
mov
jne
js
iret
and
pop
jge
sub
xor
aad
jns
xlat
lock
loop
pop
sbb
add
xor
pop
ret
cmp
sub
mov
push
stos
ret
test
scas
call
sbb
sbb
seto
loopne
push
xlat
cmp
mov
cmp
adc
pop
or
mov
nop
pop
addr16
push
pusha
jnp
in
out
xchg
incb
rorb
and
gs
insl
pop
out
les
add
rcrl
mov
lods
cmp
pop
mov
rol
jecxz
pop
jo
inc
jp
push
cmc
fbld
fyl2x
in
aam
mov
mull
or
adc
arpl
pusha
stos
leave
sbb
inc
and
stos
add
lods
or
mov
lods
cs
sbb
int3
mov
ss
jns
and
xchg
mov
jnp
test
cmpsl
adc
into
fldl
push
cmp
mov
orb
jle
popa
aad
mov
xor
sbb
lock
ret
xor
gs
ds
in
add
mov
xchg
push
push
test
out
push
mov
cmp
mov
call
lcall
sub
nop
aaa
addr16
pop
popa
int
enter
mov
jmp
cmpsb
cmpsb
dec
int
push
sub
xor
fisubrs
les
push
adc
addb
push
adc
jb
jle
push
sbb
rcrb
cld
lahf
in
or
imul
wrmsr
ror
adc
pop
lcall
xor
dec
jns
sbb
cmp
push
in
fadds
lods
inc
and
push
push
lcall
int
mov
dec
xchg
lds
mov
inc
cld
arpl
in
je
repz
adc
xchg
lret
adc
adc
iret
outsl
cmp
ja
lea
icebp
mov
aam
std
add
mov
mov
xchg
xor
js
rcrl
or
dec
mov
fmul
fwait
pop
je
add
incl
std
rcrb
or
je
push
push
push
out
dec
mull
out
mov
stos
push
xchg
ror
aam
pop
mov
test
mov
aad
push
jno
popa
pushf
add
lock
xchg
pushf
cmp
mov
push
push
int
adc
adc
pusha
xchg
add
scas
test
add
popa
xor
test
mov
xlat
int
sbb
sub
xchg
or
sbb
xchg
pop
xchg
mov
jnp
pushf
out
adc
rcrb
adc
pop
mov
cmp
in
in
aas
insl
fwait
stc
push
das
sbb
cwtl
and
test
lret
rcrl
cli
mov
jmp
aaa
jns
mov
cmp
cmp
imul
push
sbb
sub
dec
inc
mov
mov
push
and
jecxz
and
push
push
std
mov
cltd
arpl
loopne
jg
repz
add
lods
cmp
pop
movsb
fildll
scas
xor
jb
sub
data16
add
aad
ret
jecxz
jnp
stos
daa
and
adc
push
insl
fs
fimuls
and
ret
add
or
xchg
inc
aam
stos
movsb
lahf
or
push
int3
ljmp
sbb
push
pop
fildl
out
jne
imul
mov
cwtl
sub
xchg
pop
and
fcompl
lds
xchg
sbb
jmp
push
mov
out
shll
pop
sub
je
push
xchg
mov
pop
iret
add
imul
enter
pop
fadds
ljmp
xor
mov
fadd
fists
jno
mov
arpl
dec
sahf
or
fistl
push
mov
cmc
repnz
push
dec
addr16
in
rcrl
fcoms
add
sarb
jo
dec
mov
rol
sub
and
out
out
fwait
hlt
mov
loope
out
pop
stc
iret
adc
xchg
es
mov
or
pop
ret
sub
mov
lret
lea
sbb
int3
aas
cli
ror
cmp
push
or
inc
loope
enter
sbb
mov
inc
xlat
cmc
rclb
push
xchg
sub
adc
clc
dec
jno
ficompl
mov
add
add
cmp
hlt
xchg
mov
subl
inc
add
adcl
sub
mov
mov
aam
xchg
stc
xchg
popf
aaa
xchg
fists
sub
daa
call
sbb
push
les
jge
shll
out
jg
pushf
and
leave
xchg
adc
jae
push
add
sahf
popa
sti
cld
adc
ss
lret
loop
xchg
pop
pop
mov
cmpsl
out
loope
je
leave
adc
inc
adc
aas
shl
scas
lcall
popa
insl
and
mov
ljmp
and
dec
mov
pop
mov
cmp
repz
mov
adc
ret
repnz
in
shll
rclb
push
repnz
inc
xor
out
filds
sub
outsl
jmp
push
or
and
pop
lret
lcall
push
jno
mov
loope
out
or
lret
push
mov
inc
mov
mov
add
mov
lcall
lret
pop
lods
enter
mov
stos
mov
cmp
add
loope
jecxz
cmp
out
test
repnz
inc
pop
inc
gs
pop
jnp
mov
inc
call
cmp
cld
add
aad
mov
sub
ljmp
xchg
and
ret
add
and
fisubrs
hlt
out
incb
push
loope
mov
int3
jp
inc
cmc
pop
mov
mov
push
sub
sbb
xor
mov
inc
mov
faddp
sbb
or
sbbl
jne
add
lods
scas
test
pusha
push
cmp
cmpsl
xor
fldenv
push
fildll
pusha
mov
testl
lods
adc
jb
movb
sbb
mov
or
stos
mov
lds
test
and
mov
lret
je
dec
add
icebp
mov
les
orl
mov
mov
xchg
stos
and
pop
roll
mov
leave
adc
test
out
and
inc
add
xchg
jg
xor
rol
fwait
pop
sbb
repz
in
pop
imul
pushf
inc
push
hlt
pop
xchg
in
insb
jmp
cwtl
scas
stos
sbb
hlt
notb
and
jnp
and
cmpsl
and
aam
addr16
mov
sub
jge
mov
hlt
mov
hlt
addb
push
pop
jmp
ljmp
dec
icebp
lahf
inc
fiaddl
xchg
testb
push
cli
pop
loope
dec
stos
pusha
jne
and
in
pop
cmp
dec
jnp
inc
int3
ret
add
xchg
or
dec
sbb
mov
add
aam
mov
mov
cwtl
pop
cmp
repz
dec
fs
jnp
push
sub
cmp
and
call
pushf
pop
push
push
out
and
xchg
mov
mov
out
fimull
adc
movsb
dec
mov
jge
jne
sub
pop
cmp
in
xor
test
ljmp
or
pop
cld
int3
out
movsl
cmpsl
lret
dec
ljmp
or
in
pop
dec
inc
addr16
jbe
add
fwait
dec
into
cmc
jns
xor
clc
adc
inc
sbb
mov
cmp
in
xlat
lds
shrl
insl
jnp
aas
jne
nop
mov
movsl
sub
int3
cltd
jne
jns
mov
cmp
ja
adc
xchg
xchg
imul
xor
daa
test
int
add
insl
mov
cmp
jne
cltd
ds
add
clc
jns
sbb
aaa
pop
mov
cwtl
dec
lahf
daa
outsl
push
nop
int
add
pop
xor
loope
mov
mov
dec
adc
out
mov
ss
push
call
testl
cld
push
adc
inc
jbe
dec
mov
push
mov
pop
sbb
push
xor
loop
inc
or
xchg
lret
clc
xchg
pop
cld
xchg
mov
xor
xor
aas
cmp
sbb
leave
and
push
jge
xor
inc
inc
or
push
fstl
lods
xchg
js
xchg
testb
es
inc
pop
pop
movsl
cmp
in
ss
push
decb
ja
sub
dec
or
int3
jns
movsl
sbb
xor
fs
test
nop
push
jns
sar
fists
mul
std
lcall
bound
ds
adc
cmc
mov
or
jae
pop
outsb
jmp
mov
jno
test
sub
adc
cs
mov
jo
mov
dec
dec
repnz
popf
aad
inc
loop
push
jbe
insl
push
into
and
xchg
cmpsb
negb
xchg
mov
push
enter
aaa
ret
add
clc
push
jae
or
add
sub
test
mov
imul
enter
aas
stc
mov
jg
loope
sub
rcll
iret
repnz
pop
pop
inc
sti
lret
and
ljmp
mov
or
out
cmc
nop
pop
pop
jg
xlat
aas
gs
in
adc
or
or
add
cltd
xchg
xchg
orl
mov
repz
lcall
sysexit
jb
fistpll
test
addr16
dec
fnstsw
in
dec
jp
mov
int
sbb
gs
sbb
jno
aas
addb
repz
jmp
sahf
mov
push
mov
or
testb
dec
lock
sbb
ja
sub
cmp
ds
cmp
sub
sub
dec
sub
ficoms
ret
ret
ret
inc
je
sub
lock
movsl
inc
jns
test
jb
add
pop
fidivrl
pop
call
addr16
xchg
dec
xchg
sbb
sbb
push
sbb
jne
inc
mov
mov
pop
enter
inc
lret
mov
cmp
ljmp
or
mov
push
mov
sbb
adc
mov
cmp
dec
adc
dec
enter
iret
sub
mov
jle
adc
jle
xchg
or
cmpsl
jp
mov
sbb
or
addl
cs
lret
mov
cmpb
into
jnp
push
mov
xchg
repz
or
inc
jnp
test
lret
je
inc
push
sbb
ret
dec
jmp
mov
inc
out
enter
or
jae
shrb
push
xor
add
cli
repz
push
popa
dec
loopne
add
shlb
fcmove
jp
ret
les
push
add
xchg
inc
loope
xchg
divl
cmp
pop
cmp
dec
das
aam
js
pushf
nop
out
and
sub
pop
in
shll
inc
jmp
fistps
pop
jge
adc
popa
dec
scas
cwtl
and
fnstsw
jg
insb
loopne
fs
pop
cld
pop
std
sbb
dec
xchg
pop
push
cmpsb
mov
or
pop
sbb
sbb
insb
add
cmp
xchg
sbb
adc
mov
std
je
mov
adc
or
jne
or
mov
push
ds
mov
jecxz
in
imull
subl
xchg
jge
cmp
cmp
jnp
xor
movups
outsb
icebp
test
cmpsb
mov
stc
mov
xor
jns
inc
arpl
fwait
xor
sub
mov
push
xchg
jns
sbb
cmp
add
xor
loope
popa
popf
incb
outsb
insl
sbb
mov
sbb
loope
ret
rol
aad
sub
sub
pop
les
fs
add
ljmp
mov
ss
je
nop
and
ret
fwait
std
out
dec
pop
mov
jbe
sbb
popa
or
shrl
mov
inc
xor
test
jns,pt
in
scas
push
fstl
rcrb
push
pop
stc
add
dec
cmp
xchg
mov
fsubp
lods
ss
or
or
lods
cmc
mov
int3
xchg
inc
ja
cwtl
rol
jb
inc
jl
nop
and
sbb
insl
fidivrl
scas
mov
sahf
mov
sub
outsb
xchg
in
push
sub
lock
pop
jno
arpl
mov
into
or
or
xor
arpl
roll
push
pop
sbb
fadds
and
xor
out
jecxz
pop
and
pop
or
sub
mov
jns
inc
repnz
push
mov
daa
fwait
mov
sub
dec
jmp
call
cmp
xchg
loop
cmp
cmc
movsb
cltd
pop
sbb
cmpb
push
leave
std
xor
sub
orb
iret
inc
push
imul
mov
jbe
pop
mov
sbb
stos
aad
fidivrs
shlb
leave
jns
adc
rcll
cli
imul
lret
xchg
xor
arpl
arpl
lahf
outsl
cmp
inc
jo
sub
loopne
and
pop
inc
cmpsb
lock
daa
gs
js
xchg
inc
rcl
aaa
movsl
or
pop
xlat
fisubrs
mov
into
sub
aad
ret
lret
jecxz
enter
stos
inc
divl
inc
jp
pop
punpckldq
daa
mov
cmp
imul
xchg
mov
outsb
js
dec
sbb
jg
mov
or
mov
std
xor
adc
fcompl
popa
dec
test
popa
outsl
jno
xchg
and
inc
bound
mov
push
fidivs
out
mov
int3
js
lret
and
push
sbb
mov
inc
sarl
sub
out
enter
and
out
push
mov
push
insb
cmp
data16
icebp
xor
or
mov
lret
sub
stos
in
iret
inc
sub
cmp
cmpsl
xchg
sub
jno
insb
mov
imul
rclb
adc
inc
inc
lret
pop
push
sbb
outsl
push
add
mov
movsb
les
arpl
bound
sub
pusha
mov
pop
test
jo
divl
loopne
jl
push
mov
add
test
insb
fwait
dec
push
test
mov
jo
insb
ss
sub
mov
jo
jo
xor
loop
push
and
sbb
aas
sub
inc
lds
jno
cli
cltd
outsl
lret
ss
test
pop
in
mov
jmp
hlt
ret
js
jmp
xor
inc
es
out
inc
subl
lret
inc
notl
cmp
popf
cmp
add
pusha
xchg
addr16
mov
cltd
outsb
jmp
push
pop
dec
mov
inc
loopne
inc
roll
xorl
add
cwtl
out
aas
ficoms
mov
movl
xchg
push
xchg
jne
test
aad
dec
rcll
sbb
mov
pop
ds
xor
fistpl
popa
and
sbb
daa
dec
mov
repz
sti
inc
cmpsl
pop
cmpsl
lcall
xlat
xchg
loope
push
jb
inc
fs
iret
iret
sarb
sub
mov
fisttpl
pop
addr16
mov
lcall
iret
dec
ss
push
ror
aam
cmp
lret
mov
sbb
inc
push
sbb
sbb
fucom
xchg
mov
sub
insl
push
pop
xchg
jmp
dec
sub
jp
out
test
xor
mov
pextrw
pop
sub
mov
pop
jmp
in
cmc
xchg
rclb
cmpb
in
enter
add
pusha
inc
mov
fistps
xchg
inc
cs
int
pop
ret
in
insb
nop
idivb
add
jno
cmp
sbb
sbb
sbb
xchg
sub
ss
sub
enter
mov
add
pop
fcmovb
cmp
js
into
out
mov
cmp
inc
dec
fldl
mov
adc
test
iret
and
mov
test
out
stc
mov
add
or
or
insl
xor
jo
out
and
sbb
cs
cmp
shrb
out
fsubrs
or
dec
aas
push
xchg
insl
dec
repnz
jg
fwait
jl
mov
push
sti
pop
sub
mov
xchg
in
dec
fisubl
cmp
mov
xchg
int
les
subl
das
stc
aad
inc
arpl
dec
mov
mov
lahf
mov
scas
fistpl
and
jle
push
and
inc
icebp
cmp
or
sahf
xchg
aam
mov
pusha
mov
pop
stc
jns
movsl
mov
insb
ja
ficompl
flds
imul
out
imul
fldt
mov
hlt
std
out
in
mov
scas
lods
dec
out
sbbl
inc
loop
dec
mov
dec
dec
inc
jmp
test
pop
push
mov
sbb
hlt
lea
ret
ret
bts
loope
dec
movsb
jbe
sbb
mov
divb
pop
pcmpeqd
aas
lahf
test
push
mov
cmpsl
xor
push
and
popf
sbb
out
and
rorb
stos
les
flds
cmp
pop
xchg
movsl
dec
fisubl
push
xor
adc
jge
daa
cli
enter
movsl
cmp
aaa
adc
aam
pop
inc
cld
and
mov
mov
pop
arpl
insl
pusha
cwtl
cs
fisttps
cld
call
test
cmp
daa
xor
mov
mov
xor
xor
xchg
test
dec
xor
ret
pop
adc
iret
cwtl
and
imul
clc
jmp
or
adc
push
dec
mov
out
out
mov
std
sub
lock
pop
pop
imul
jno
mov
nop
jge
sbb
mov
loope
or
xor
out
clc
iret
aad
cmp
push
jnp
and
ja
and
test
pusha
xchg
ror
orb
mov
sub
jae
jns
dec
ret
mov
insb
cmp
jbe
push
push
ficompl
fistpl
insl
shll
sbb
cvtsi2ss
je
sub
sub
dec
roll
ret
stos
lret
movsbl
bound
and
xchg
les
in
push
repz
scas
or
inc
jno
inc
inc
push
movsl
add
jbe
fdivrl
xchg
lcall
cli
movsb
loop
out
sbb
jecxz
js
sub
xorl
jnp
fmul
fwait
push
sub
add
jmp
sarl
ds
push
push
and
addr16
stos
adc
pop
es
mov
frstor
subl
or
andb
cli
lock
lock
lret
cs
loop
dec
leave
in
add
dec
subl
mov
mov
lret
sub
bound
test
mov
in
fildll
sbbl
fcoml
cs
push
outsl
pushf
stos
push
das
outsl
stos
stos
flds
or
fcmovb
aas
sbb
and
shll
shr
jge
syscall
mov
stc
scas
iret
aaa
and
cmp
jge
dec
sub
insl
adc
outsb
out
lods
pusha
les
in
cmc
push
cmp
fsubr
insb
jnp
addps
stc
fimull
cmp
movsb
arpl
xor
lods
push
jno
fs
sahf
mov
scas
stos
out
xchg
and
leave
push
mov
and
loop
pop
addl
xchg
mov
stos
jno
jge
mov
leave
dec
inc
jno
adc
jge
mov
jp
mov
cmovge
ja,pt
movsb
scas
data16
pushf
mov
jmp
lods
mov
ficoms
out
mov
cmp
mov
xchg
xor
fsubp
fisubrs
and
dec
out
fsub
cmpsb
outsl
outsl
pop
inc
cmp
popa
or
pop
mov
mov
pop
test
sub
popf
cs
and
jb
adc
push
scas
int3
addr16
lret
popa
jl
out
test
cs
add
mov
mov
sbb
shrb
sub
in
cmp
adc
out
and
mov
mov
dec
cmp
insl
pop
and
adc
in
inc
xchg
jle
cmp
idivb
pop
mov
adc
xchg
push
andl
inc
bound
push
cmp
ret
int3
sub
adc
push
in
sbb
loopne
ss
lcall
xchg
lock
pop
sbb
xor
xor
inc
sti
out
mov
push
inc
sbb
inc
dec
pop
inc
jl
mov
add
cmp
into
les
add
push
pushf
mov
pop
cmp
rcrb
and
sahf
sbbl
cmp
jmp
xchg
aas
jg
rcrb
mov
je
pop
dec
divl
lock
xchg
int3
pop
push
ret
data16
scas
stc
out
jnp
outsl
jne
sbb
adc
sti
and
sbb
push
insl
cwtl
outsb
popf
mov
cmp
xchg
pop
inc
shrb
jbe
mov
aad
test
mov
xchg
fcoml
js
fsubrs
xor
and
popa
pop
int
jecxz
stos
push
adc
mov
dec
or
pop
sub
cmpsl
icebp
sbb
xor
or
loop
sub
loop
inc
fildll
dec
shll
enter
faddl
decl
mov
insb
pop
xor
adc
cmpxchg8b
xor
cmp
jl
sub
mov
shrb
xor
call
cmp
cld
or
aam
pop
aaa
mov
test
cltd
movsb
cmc
mov
loope
cld
out
mov
idivb
faddl
sti
xchg
or
dec
mov
dec
dec
lods
das
pextrw
adc
iret
out
addps
test
sbb
mov
mov
mov
out
jne,pt
int3
movw
movsb
mov
and
icebp
ljmp
add
add
xchg
mov
sub
cli
into
loop
ret
out
sbb
mov
cmc
mov
jae
ljmp
push
sbb
xor
push
pop
sub
push
mov
push
xchg
or
pop
aas
test
cmp
fisttpll
xchg
or
mov
mov
ret
popf
push
xor
mov
push
loopne
clc
pop
jns
jl
sbb
and
rclb
xchg
andl
cli
sub
cmp
push
cmpsl
mov
cmp
ss
push
and
cld
int
sbb
movb
dec
push
inc
into
and
dec
bound
add
add
jae
sbb
jg
mov
push
or
jle
mov
dec
or
cli
adc
mov
popf
sub
mov
mov
mov
in
push
insl
mov
sti
cli
xchg
test
in
xchg
outsb
push
add
lret
mov
das
mov
mov
push
xor
aad
out
push
jecxz
test
fisttpll
hlt
out
ret
fwait
ret
fmulp
scas
ret
es
mov
ljmp
sti
sbb
inc
mov
out
push
inc
mov
mov
aas
inc
repz
jbe
je
test
enter
lcall
clc
push
jae
icebp
sbb
sbb
adc
mov
dec
pop
pop
pop
inc
add
vpaddusb
push
jp
jb
mov
pusha
cmp
mov
popf
ljmp
inc
jg,pn
gs
outsb
xor
lret
stc
es
dec
cs
push
mov
cmp
negl
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
mov
ja
test
jp
mov
dec
mov
faddl
inc
or
jp
and
sub
xor
flds
shrl
sub
lcall
aas
aad
mov
stos
pop
and
icebp
xchg
mov
ljmp
cmpsl
andb
push
cmc
mov
icebp
add
push
and
add
dec
dec
iret
mov
jnp
jmp
xchg
xchg
add
es
fstl
clc
xchg
xlat
adc
insb
or
dec
subl
cmp
outsb
sub
lods
sbb
cmpsl
sbb
xchg
hlt
fcmovnbe
lret
mov
outsb
pop
out
xor
mov
mov
jecxz
std
pop
pop
mov
ficoms
aas
jne
and
sbb
shl
add
repz
imul
dec
mov
sbb
in
adc
in
push
xchg
outsl
and
add
nop
push
jae
sbb
dec
xchg
insb
cltd
mov
jns
xorb
inc
pop
repz
mov
lock
lods
sub
cmpsb
dec
xor
mov
inc
mov
ss
and
ss
jo
inc
movsb
sbb
push
push
or
mov
shl
adc
add
js
int3
daa
inc
stos
push
outsb
int
mov
pusha
cmp
jg
mov
cmc
push
jnp
imul
testl
xor
ljmp
fiaddl
test
aad
repz
in
lds
subb
or
jmp
lcall
sbb
shrb
mov
mov
mov
mov
xchg
dec
addr16
fsts
cmp
arpl
jno
push
mov
xor
repnz
pop
lret
and
dec
or
sahf
clc
or
rorb
cli
cmp
mov
pop
pop
jge
int
std
lds
ja
clc
addl
cmp
lret
mov
dec
insl
pop
outsl
sbb
push
push
push
lods
or
sahf
xchg
cwtl
inc
shlb
inc
popa
outsl
out
leave
dec
jmp
push
ds
xchg
push
psrad
test
add
mov
in
dec
imul
fsub
xchg
or
push
mov
xlat
outsl
mov
dec
lods
sbb
pop
stos
dec
insb
mov
dec
movsl
sbb
lock
repnz
clc
lret
cmc
jg
cmp
in
mov
jb
or
pop
nop
mov
mov
push
xor
xchg
push
jno
loope
pop
push
sbbl
inc
stos
repnz
fwait
test
sbbb
cmp
mov
aas
iret
jle
clc
dec
outsl
mov
imul
xlat
add
pusha
mov
mov
ljmp
xchg
in
pop
shlb
lret
jae
adc
jo
mov
jnp
pop
aam
jae
out
mov
mov
inc
mov
in
pop
push
cwtl
cmp
lods
repnz
aad
push
pop
outsb
aam
shl
cs
imul
xchg
mov
add
xchg
cwtl
xchg
mov
inc
mov
stos
int3
fists
pop
cwtl
and
sbb
push
xorl
push
push
stos
sub
mov
mov
fstp
stos
mov
scas
inc
sbb
sahf
das
ja
test
cmp
imul
ret
mov
fisttps
les
repnz
subl
or
out
push
sbb
in
bound
jns
addr16
sub
ds
adc
iret
fidivrl
cmc
fabs
mov
data16
aas
and
insb
fildll
cmp
insl
xchg
inc
out
sahf
shrb
cvtpi2ps
aad
mov
nop
outsb
sub
xchg
push
or
int
pusha
in
mov
sti
mov
or
or
cmp
stos
mov
mov
daa
inc
in
dec
adc
push
repz
and
mov
std
in
pop
lea
outsl
lods
sub
test
sbb
xor
int
jnp
rorb
mov
inc
lock
leave
inc
mov
andl
cmpsl
adc
nop
repz
lcall
test
popf
aaa
das
icebp
lods
aas
pop
push
lcall
add
and
push
outsl
loope
lcall
dec
lea
fidivs
mov
add
ds
cmp
or
fwait
xor
push
popf
adc
iret
cli
sti
lret
or
mov
in
inc
fidivs
sbbb
bound
mov
jge
xchg
test
lret
stos
lret
test
and
adc
inc
sahf
lcall
repnz
pop
ja
jno
sub
roll
aad
xchg
lret
sub
jne
mov
aas
out
sbb
and
into
ret
adc
and
ds
jmp
in
dec
push
mov
push
cld
mov
sbb
add
xchg
scas
sub
je
icebp
mov
insl
popf
ljmp
mov
inc
loopne
pop
xor
dec
mov
xchg
add
aam
arpl
xchg
scas
aam
sbb
shll
aam
or
push
test
sub
pop
cmp
dec
and
xchg
inc
push
jle
jmp
push
addl
push
mov
aad
dec
stc
popf
adc
xchg
jl
adc
mov
stos
fs
cmpsb
mov
jmp
adc
inc
add
cltd
lcall
in
mov
xchg
loop
roll
das
jge
pop
xchg
cmc
or
daa
test
imul
aaa
jg
mov
cld
push
push
cmpsb
mov
fadds
adc
fldt
push
hlt
and
push
or
shrb
inc
sbb
pushf
stc
pop
cmp
es
popf
mov
aad
push
ficomps
fdivr
pop
fs
lock
fcomi
mov
xchg
imul
scas
pop
cmp
mov
ret
in
mov
jge
movsl
inc
jb
xchg
mov
sbb
jmp
pop
sbb
rcrl
and
xchg
movsl
mov
jg
sbb
mov
dec
mov
and
xlat
cmp
and
mov
add
inc
test
gs
or
and
sub
dec
add
mov
sub
jno
and
mov
jbe
and
adcb
sbb
add
push
dec
cli
out
stos
bts
mov
leave
ret
xor
popf
xor
push
testl
iret
jecxz
xor
mov
stos
outsb
pop
dec
add
scas
shlb
adc
insb
add
outsb
movl
add
loopne
fstpt
xchg
pop
scas
jnp
sub
out
in
mov
jmp
dec
xchg
cmp
xchg
setp
rcl
cmp
repz
hlt
sbb
orl
mov
or
sahf
pop
jmp
xchg
add
pushf
fisubs
mov
addr16
and
in
cli
cmp
call
inc
repz
jl
push
cmp
stos
imul
inc
out
and
sbb
aam
sub
fidivrl
sbb
pushf
jb
repnz
lds
xlat
jmp
mov
in
lret
sarl
cmp
data16
repz
loope
mov
pop
xlat
or
adc
inc
scas
fisttpll
aas
fistpl
xor
dec
inc
xchg
mov
inc
and
xor
mov
xchg
and
pop
dec
pop
sbb
inc
or
add
mov
mov
int
adc
rcll
sahf
mov
push
insl
mov
jne
popa
or
mov
pop
mov
xchg
pop
in
cmpsb
and
insb
fdivs
ds
dec
cli
pop
insb
clc
in
ljmp
xor
mov
imul
adc
jmp
in
xor
out
push
pop
sub
xor
loopne
mov
push
xor
adc
mov
in
xor
in
sub
push
fnsave
jl
cmc
ret
outsb
cli
dec
mov
and
cltd
neg
mov
js
popf
xchg
icebp
sahf
or
loop
inc
pop
stos
xor
xor
imul
mov
fnstenv
call
mov
sub
les
mov
adc
sbb
aad
inc
lret
xchg
xor
shrb
sbb
andl
fiaddl
pop
mov
sub
lea
int3
stc
mov
mov
mov
adc
push
cmp
xor
and
mov
pop
mov
or
in
insb
pop
xchg
mov
lods
insl
mov
xchg
cltd
mov
or
pop
pop
jae
xchg
mov
inc
fsubrs
adcl
pop
mov
idivl
adc
pop
xlat
mov
stos
mov
xchg
das
jecxz
sbb
shlb
testl
adc
mov
stos
fs
adc
mov
push
adc
sub
shl
dec
addb
std
mov
out
sbb
pop
xchg
and
mov
aam
mov
popf
cmp
lock
jmp
inc
cmp
loope
xchg
ljmp
cmpsl
inc
jmp
mov
push
pop
cmc
sbb
fimull
or
movsb
mov
mov
leave
pop
xor
or
aaa
jne
dec
push
push
inc
mov
add
xor
mov
mov
clc
push
cld
pop
lea
or
loopne
cmpsb
add
jg
lock
lods
ss
mov
dec
sub
mov
xor
xchg
cmp
loop
int3
adc
loop
jle
and
jecxz
pop
imul
popf
or
cmp
sbbb
fisttps
adc
scas
test
mov
mov
mov
shll
mov
jo
dec
or
mov
pop
push
jmp
inc
sbb
adc
xchg
into
and
push
in
mov
pop
mov
jnp
cwtl
pop
pop
cmp
fstps
movsb
out
cmpsl
or
movsl
mov
cmp
repz
add
sahf
mov
filds
lahf
push
mov
pop
xlat
jns
and
in
mov
je
xchg
jecxz
loop
inc
flds
inc
test
mov
sub
pop
aas
push
jl
dec
inc
cmp
mov
mov
aam
lods
add
xor
out
mov
jecxz
mov
cli
js
int
ljmp
gs
mov
sbb
and
xor
adc
pop
and
jne
das
cli
xchg
inc
sbb
sbb
add
bound
add
in
mov
push
xchg
fimull
aas
adc
jae
sahf
lods
adc
mov
sahf
mov
dec
or
cs
js
lcall
fwait
nop
lea
cltd
inc
xchg
jo
mov
mov
sbb
adc
fildll
rcrb
sarl
lea
lock
ljmp
fnstenv
push
lock
inc
mov
cli
jae
aam
in
arpl
inc
popa
cmpsb
test
aas
sub
cld
inc
adc
or
mov
jle
scas
nop
rorb
test
ret
movq
jp
add
jns
jae
lcall
cmpsl
test
pop
and
roll
add
addr16
adc
jecxz
jbe
push
mov
or
and
push
sbb
xchg
or
jmp
loopne
push
jno
mov
and
push
in
push
negl
psadbw
popf
out
xchg
or
xchg
inc
xor
leave
jp
out
out
fistpl
rorl
inc
dec
les
and
int
push
pop
xchg
icebp
test
adc
shrl
jns
cmpsb
cmp
test
cmp
jle
sbb
pop
adc
mov
fcompl
stc
mov
lret
mov
ja
or
xchg
pushf
in
add
cmp
sbb
xchg
testb
fcomp
cld
lret
mov
mov
inc
imul
dec
push
jns
cli
pop
pusha
adc
cmp
pop
mov
push
push
mov
jmp
dec
xchg
movsb
mov
in
push
cmpsb
mov
int
push
rclb
xor
fisubs
inc
clc
pop
push
push
inc
fs
imul
lahf
cmp
cmp
cld
mov
adc
cltd
push
adc
jmp
sahf
jg
mov
es
cmpsb
xchg
xchg
lea
and
shr
cld
in
mov
jne
or
and
sarb
shlb
lods
sub
inc
jns
ja
mov
in
sbb
xchg
push
add
xchg
gs
stc
push
xchg
inc
sub
jmp
or
out
pop
jg
or
xor
mov
mov
dec
add
test
cmpsb
xchg
jge
jmp
inc
fsts
bound
mov
push
fdivr
js
mov
xchg
add
or
sbb
hlt
imul
sub
sbb
cmp
imul
hlt
imul
pushf
fcomps
mov
mov
mov
mov
and
lret
fidivs
push
stc
mov
movsl
enter
fldenv
cltd
movsb
fwait
ret
in
cwtl
xchg
adc
out
jg
jp
inc
scas
mov
popf
sub
out
and
inc
pop
pop
subb
loop
imul
push
push
pop
pop
inc
lds
dec
sub
push
cltd
fisttpl
std
rcrl
mov
out
xor
je
jge
jns
icebp
idiv
mov
jno
test
ficoms
xor
and
lahf
jbe
mov
adc
push
aaa
test
or
stc
mov
fists
ljmp
sub
das
fdivrs
mov
sbb
add
mov
fidivrs
sbb
ljmp
inc
lods
or
fsubr
sbb
mov
cmp
shll
jg
xchg
das
rcr
xchg
xor
add
ja
ljmp
xchg
notl
xchg
dec
dec
add
jecxz
cmp
out
mov
push
sbb
lods
push
imul
sbb
mov
iret
stc
cmc
pop
sbb
cmp
inc
jle
or
leave
jbe
stc
orl
addb
mov
or
repz
jecxz
and
repz
or
int3
adc
jge
std
imul
repnz
or
push
mov
xlat
cmp
jns
cs
icebp
jg
enter
arpl
cmpsl
mov
aam
xor
bnd
sahf
rclb
mov
gs
daa
outsb
mov
icebp
add
cwtl
push
cmpsb
push
and
movsb
into
xor
mov
inc
pop
mov
movl
dec
lds
clc
xor
cltd
push
mov
pop
fs
out
jbe
push
push
dec
sbb
out
xchg
and
std
and
mov
movsl
ljmp
mov
lret
int
lret
lret
rolb
dec
movl
dec
dec
push
in
sbb
pushf
xchg
sti
pop
xchg
dec
dec
out
adc
clc
popa
jns
mov
sub
iret
lahf
lcall
insl
inc
ret
xchg
mov
inc
sub
sbb
or
movsl
cmpsl
push
loop
out
aad
fdivs
call
cmpsb
lock
push
inc
in
test
xor
aam
pop
or
jns
inc
add
cmp
cmp
aas
jbe
adcl
pusha
arpl
or
and
push
inc
std
jb
add
push
push
xor
xor
scas
xchg
pusha
aaa
pop
adc
je
inc
jg
add
fbld
xor
mov
lcall
push
stc
xchg
and
popa
stos
sub
push
fcom
rcr
pop
sbb
imul
inc
push
mov
shll
pop
js
inc
or
mov
cs
push
xlat
loope
in
pop
or
sahf
ret
mov
mov
dec
lahf
mov
inc
int3
mov
addr16
lods
jle
hlt
push
pop
xor
pop
stc
push
lahf
aam
and
test
ret
pusha
ss
lcall
enter
and
xor
xor
sub
xor
push
push
pushl
divb
adc
adc
add
in
lcall
js
iret
loopne
lock
or
pop
mov
add
ret
push
jmp
xor
mov
inc
clc
arpl
int3
and
mov
lret
lods
popf
dec
sti
data16
push
or
pop
cwtl
std
pop
mov
ds
xchg
roll
mov
addl
loopne
jnp
push
setno
inc
out
sbb
jno
in
loopne
ret
pop
xchg
scas
loopne
test
xchg
inc
adc
inc
fsubs
or
cmpsl
shr
sbb
inc
or
cmc
xchg
push
jae
pop
dec
cmpsl
imul
data16
adc
enter
test
ja
mov
shl
out
lea
inc
mov
push
jecxz
dec
int
repnz
or
mov
test
jo
sub
insl
sbb
mov
xor
rorb
cmp
push
mov
push
std
mov
push
icebp
mov
jp
insl
jecxz
jnp
xchg
cmp
loope
aaa
xorl
push
jecxz
mov
mov
stos
repz
loop
pop
and
dec
into
orb
or
inc
aad
scas
cltd
lds
aad
sbb
jae
jbe
cmp
lods
xor
fisttpl
push
daa
cmp
add
lret
paddd
lahf
pop
lret
push
mov
dec
or
movsb
and
stos
push
xor
push
jns
imul
arpl
jg
cmpsl
inc
dec
fbstp
mov
ret
mov
pushf
sbb
xchg
test
lds
test
inc
hlt
nop
push
aas
enter
fistl
mov
lret
jge
jo
enter
xchg
rolb
pop
adc
adc
je
cmpsb
cmp
sbb
das
sub
sub
inc
bound
cld
fsubl
aaa
pop
xchg
in
shll
push
inc
mul
xchg
dec
push
lret
or
sbb
mov
xor
push
lret
sub
or
mov
cmp
ss
lds
mov
inc
xchg
mov
jnp
imul
sbb
repz
popa
pop
nop
out
inc
popf
push
dec
insl
add
aad
cs
and
mov
pop
add
popa
pop
icebp
sbb
sbb
mov
cmp
insl
hlt
mov
leave
push
inc
xor
in
xor
jmp
lcall
imull
ss
and
xor
pop
and
fdivrl
loop
cmpsb
mov
push
rolb
scas
test
pop
add
pop
jb
sub
cmpsl
cmp
xchg
and
or
sarl
xor
pop
jp
fbld
ret
clc
out
addb
repz
mov
mov
hlt
mov
dec
sub
mov
xor
or
xchg
mov
fdivs
mov
jno
xchg
xchg
or
daa
adc
push
adcl
and
mov
btcl
mov
fwait
pop
sbb
xchg
gs
inc
das
lcall
cmpb
clc
pop
mov
cmp
mov
or
xor
xor
mov
mov
popa
sub
xchg
lret
and
lea
bound
push
sub
and
cmp
mov
mov
aam
hlt
inc
stos
or
icebp
arpl
and
jo
addr16
adc
xchg
dec
lods
sub
push
jne
popa
xor
sbb
test
or
clc
pop
mov
loope
leave
les
mov
ret
mov
xchg
dec
testl
fadds
cmp
push
jb
adc
adc
mov
xchg
jecxz
imul
in
in
into
push
hlt
jbe
scas
and
in
mov
call
jo
out
add
dec
add
out
jo
in
or
test
arpl
fwait
sub
xor
into
xchg
xchg
mov
call
rorb
repz
push
xorb
js
xchg
xchg
arpl
movsb
incb
mov
mov
mov
jne
out
outsb
cli
sarb
lea
sysenter
adc
mov
mov
jmp
int3
pop
das
mov
loope
inc
loope
mov
xchg
xchg
mov
bnd
sbb
test
cmp
mov
sbb
test
movsb
icebp
mov
loop
xor
mov
jo
add
mov
scas
leave
lahf
fdiv
pop
mov
inc
pop
lock
mov
push
sbb
jbe
dec
loope
sar
pop
mov
inc
dec
clc
cmp
lcall
mov
inc
data16
push
imul
outsb
cmp
mov
jp
pop
and
jmp
imul
inc
loopne
shlb
es
jmp
test
out
lcall
add
addl
pusha
aam
dec
pop
push
dec
out
rcrb
pop
data16
jne
and
les
mov
push
ss
adc
adc
push
data16
push
pusha
ret
push
add
cmc
sarl
sub
cmpsb
jmp
jmp
or
push
cmp
addr16
cltd
fwait
xchg
movsb
hlt
add
or
movsb
popa
or
test
xchg
pop
cmp
cmp
sbb
push
into
inc
sub
lahf
rcpps
dec
cld
les
fabs
push
sti
jmp
dec
outsl
and
xor
not
orb
mov
xor
mov
dec
dec
outsl
arpl
call
and
push
and
es
add
or
loopne
mov
jo
push
clc
add
out
fwait
push
mov
mov
scas
push
lret
aaa
jecxz
mov
iret
cmpsb
xchg
popl
and
xor
xchg
mov
xor
sub
cmc
xchg
lods
xchg
xor
push
cli
cmp
sbb
sbb
cltd
in
xchg
rcr
inc
pusha
cmp
rorl
push
mov
ret
call
pop
push
mov
outsl
xchg
andl
mov
inc
lea
adc
xchg
adc
scas
test
js
xor
mov
leave
mov
js
jnp
lcall
push
gs
jnp
add
clc
cmc
pop
push
repz
xor
pop
fstl
imul
cmpb
jg
scas
lea
in
ja
push
jle
sub
xchg
shll
iret
mov
scas
ss
dec
shlb
xchg
stos
rclb
jp
or
mov
push
imul
shr
sahf
cmpsb
sbb
push
cmpsl
or
popf
sahf
les
pushf
sbb
jge
int
stc
call
add
data16
pop
repz
adc
inc
pop
fs
and
pop
popf
les
mov
rdtsc
and
xorl
cmp
or
cwtl
jge
aad
push
sub
data16
mov
pushf
cmpsl
cmp
lahf
ljmp
cs
xchg
push
movsb
sub
inc
jnp
xor
add
push
adc
adc
inc
and
out
in
pushf
sub
xchg
jbe
fcmovu
data16
jnp
cs
add
sbb
pop
add
jp
push
xchg
mov
int3
pop
clc
mov
lock
div
mov
ljmp
shl
dec
lods
dec
push
outsb
fidivrl
adcb
mov
js
xor
call
int3
push
push
aam
in
gs
or
adc
notb
ljmp
jl
or
sti
or
xor
andl
or
ficoml
push
and
aam
jnp
xor
pushf
pusha
insb
push
push
sbb
sbb
dec
jbe
xor
scas
or
leave
hlt
insb
or
imul
dec
ret
lock
xchg
aas
daa
out
test
inc
add
push
cmp
and
into
movsb
aaa
and
sub
stc
rcr
inc
dec
iret
mov
pop
add
push
dec
mov
es
push
and
xor
jbe
jge
lea
xabort
pop
ja
sub
movsl
iret
ds
add
mov
pop
push
push
mov
sbbb
and
xchg
xchg
xlat
fwait
loopne
arpl
sbb
xor
les
push
push
mov
pop
fcompl
add
aad
adc
leave
test
movsb
fistpll
push
std
imul
cmp
push
jecxz
cmpb
xchg
jmp
hlt
stos
cld
mov
pop
packssdw
xchg
xchg
push
and
int3
dec
in
mov
mov
xchg
sahf
ljmp
jns
adc
xor
addr16
pop
or
into
inc
adc
cltd
or
add
aas
push
nop
xor
sub
lret
mov
dec
xor
andl
ret
hlt
jle
jo
pop
dec
je
xor
and
hlt
push
fs
push
dec
or
pop
cld
mov
push
mov
pop
xchg
jle
out
idivl
mov
nop
lds
mov
enter
iret
dec
pop
bound
mov
aaa
dec
minps
adc
imul
bound
scas
xchg
cli
shrb
in
sbb
sub
sarb
jmp
mov
dec
or
jae
xchg
mov
mov
bound
mov
pop
inc
jge
xchg
xchg
sub
dec
leave
repnz
jb
insb
pop
ss
icebp
cs
call
pop
mov
stos
mov
lret
sbb
push
dec
fcoml
add
jge
inc
push
aam
aad
add
lret
and
ss
inc
ja
mov
and
pop
pusha
adcb
add
cli
icebp
cmp
in
dec
rorl
mov
mov
adc
fwait
adc
fsts
inc
xor
add
bound
lods
shrb
popf
das
mov
push
xchg
lea
sub
or
ret
jecxz
cmp
or
in
adc
sbb
adc
xor
sub
test
xor
jno
sbb
dec
lds
mov
adc
jae
shlb
mov
jl
xchg
and
int3
push
incb
ret
enter
mov
movsl
push
and
and
mov
inc
fs
std
push
mov
fwait
mov
jge
cmp
mov
aaa
xorb
pop
cmp
dec
ret
mov
data16
dec
leave
leave
loope
loop,pt
jo
es
add
push
mov
mov
inc
adc
mov
xor
jle
push
pop
fdivl
xor
mov
inc
into
sub
lret
andl
in
mov
dec
cli
dec
lock
rcrb
and
pushf
stos
mov
fistpl
nop
inc
sarl
fcmovnb
xor
dec
leave
xchg
ss
xchg
or
cmpl
cmpsl
int3
jbe
push
and
mov
pop
push
ljmp
rclb
or
or
mov
sub
or
mov
stc
dec
inc
arpl
fisttpl
sub
pop
inc
or
inc
add
ss
pop
les
scas
xor
pop
push
inc
in
das
dec
rcl
dec
je
jnp
mov
lods
jnp
and
scas
sbb
cld
fldt
fucomp
pop
jb
adc
daa
cmp
cmpb
mov
int
aad
push
jbe
cmp
insb
int
jl
inc
xor
cmp
inc
jmp
int3
push
ficoml
xchg
fs
lods
dec
sbb
addr16
push
lcall
test
mov
mov
ja
inc
loope
repz
aam
push
xor
fs
in
inc
push
rol
ss
push
xchg
lret
lret
mov
aas
jge
lods
or
jle
enter
js
mov
pushf
js
mov
clc
cs
or
leave
pop
imul
and
scas
inc
rcr
jp
jne
xchg
push
lret
push
dec
addb
gs
jl
add
ret
sub
mov
cmp
cld
call
sti
xchg
icebp
or
neg
mov
sarb
jns
fcompl
sarl
push
push
sbb
fwait
dec
out
inc
imul
xor
das
data16
mov
lret
into
dec
inc
femms
jae
adc
inc
fistl
jecxz
test
inc
scas
and
push
jb
jge
scas
jl
movsl
nop
inc
loope
mov
jmp
inc
mov
popa
jnp
or
pop
outsb
sub
int3
mov
mov
int3
dec
push
gs
imul
jbe
jl
stc
sub
out
xrelease
das
popl
test
in
mov
je
retw
js
mov
test
test
dec
movsb
iret
push
mov
sbb
into
fsubl
jnp
es
cmp
maskmovq
notl
xor
mov
dec
les
inc
arpl
scas
es
jo
icebp
imull
dec
mov
mov
mov
or
in
pushf
roll
stos
pop
sbb
or
jb
sub
pop
jmp
pushf
push
mov
scas
add
mov
std
pop
push
nop
add
das
hlt
out
in
mov
aaa
mov
xchg
pop
lret
sub
sbb
push
ror
push
popf
in
add
cmp
mov
test
aas
mov
iret
data16
jg
pop
push
fcompl
mov
popa
ss
ja
push
jnp
leave
icebp
sub
push
mov
out
cmp
int
stos
jge
cld
jl
dec
cmp
xchg
push
rorb
dec
xchg
push
out
pop
shll
jbe
mov
cmp
bound
mov
push
add
les
movsl
das
cmp
mov
xchg
clc
adc
lds
dec
lret
cmp
sahf
dec
popf
push
dec
xchg
sub
xor
nop
ljmp
mov
in
fwait
js
sbb
xchg
mov
ljmp
sahf
jb
stos
gs
jmp
aaa
dec
outsl
mov
jbe
add
gs
add
jl
popa
popf
cmp
out
add
fs
and
xchg
lret
or
add
fidivs
jl
dec
xor
jmp
sub
rolb
das
enter
and
loope
lret
adc
ja
rcl
fidivs
sbb
jecxz
inc
stos
in
sub
shll
xchg
and
jge
out
adc
aas
add
outsl
xor
lods
xchg
dec
sbb
pop
and
call
lret
jl
lret
push
push
cmp
stc
add
push
iret
enter
cld
data16
sub
lods
bound
ret
mov
jae
mov
xor
xchg
pusha
loope
mov
jg
fs
test
push
cld
leave
xchg
add
push
sbb
or
pop
dec
mov
xor
pushl
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
negb
aas
shlb
jp
and
hlt
pop
sbb
pop
jno
dec
push
adc
int
sub
lret
push
loope
movsb
call
lret
xchg
test
pop
cwtl
dec
rol
cmc
call
dec
pop
cmp
scas
ret
push
xor
stos
jne
pop
xor
cmpsb
sbb
push
in
pushf
cmp
mov
xchg
jne
push
pop
out
pop
mov
cmpsb
xchg
pop
add
mov
insb
lahf
das
cmp
inc
cmpsb
mov
adc
outsl
push
cmpsl
xchg
aas
mov
mov
inc
shl
stos
imul
fsts
sbb
stos
aas
push
clc
xor
jb
std
sub
in
inc
push
or
in
cs
gs
inc
pop
xchg
push
dec
mov
jne
je
dec
lret
in
mov
pop
add
add
ud0
lds
sbb
icebp
notb
xor
icebp
and
das
cmp
jecxz
mov
paddsb
cmp
repnz
subl
mov
out
inc
outsl
pusha
xorl
dec
fdivrl
mov
daa
or
ficoml
xlat
pop
mov
and
jbe
movsl
jp
test
mov
push
fisubl
cwtl
ficoms
popf
jnp
dec
dec
stos
fs
pop
mov
andb
cs
daa
push
lret
xor
insl
mov
sub
sbb
jne
sti
out
adc
pop
xchg
sbb
mov
int
inc
xor
jle
lcall
and
notl
inc
int
pushf
scas
iret
inc
hlt
ret
stos
add
dec
das
jne
mov
xor
loop
jbe
fidivrl
movl
shl
xor
xlat
std
aad
clc
dec
hlt
push
mov
adcb
aam
pop
adc
sub
cli
gs
sub
inc
insl
lods
popa
js
loop
fnstsw
call
orb
xchg
mov
lret
insb
out
and
push
test
xor
jp
mov
cld
cmp
jge
decl
ffree
pop
fldenv
fstpl
cmp
leave
sbb
stc
imul
dec
insb
insl
rcrl
xorl
xchg
inc
jne
jp
cmp
in
std
inc
ds
iret
fsubl
mov
add
subl
jns
outsl
hlt
push
shll
cld
fsubs
cli
mov
add
or
cs
add
mov
jae
insb
sub
data16
push
lea
cwtl
jae
xchg
idivb
push
or
mov
int3
inc
push
or
and
jne
adc
dec
vunpcklpd
sub
idivl
scas
sub
dec
fdivl
xlat
inc
cs
mov
repz
hlt
outsl
push
sbbb
cmp
cmp
aaa
adc
loope
ss
mov
push
jg
jnp
jnp
xor
stos
in
movsl
cmpsb
mov
daa
dec
cmc
adc
jne
add
lret
inc
andb
leave
clc
push
inc
lret
xor
mov
sub
inc
dec
dec
jmp
xchg
or
scas
lea
loope
inc
jo
adc
and
sub
loope
stc
loop
add
test
xchg
xchg
mov
sub
out
sbb
cmp
clc
les
inc
sti
jp
mov
jecxz
pop
adc
inc
out
in
dec
mov
xor
mov
loope
clc
and
mov
insl
or
sahf
jbe
push
mov
icebp
lret
in
enter
notl
jl
addr16
inc
and
leave
and
inc
dec
push
pop
sub
sbb
mov
rorl
mov
pushf
xor
lahf
adc
push
or
xor
xchg
das
retw
adc
adc
and
xchg
ljmp
lahf
cmc
jmp
nop
in
cli
and
into
sbb
hlt
pusha
add
add
cs
jmp
jb
pushf
fs
fists
lcall
int3
xchg
xor
mov
lds
sahf
inc
cmp
mov
cs
mov
jnp
mov
rolb
sarb
push
mov
ret
inc
lret
lds
mov
xor
push
xor
andl
mov
mov
xor
inc
jg
or
jp
or
adc
xchg
add
imul
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
add
add
add
add
add
add
add
cmpb
add
add
add
inc
push
pop
int3
pop
sbb
sub
add
mov
loope
add
add
pop
push
popa
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
