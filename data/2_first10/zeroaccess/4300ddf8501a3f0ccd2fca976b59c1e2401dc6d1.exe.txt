push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
mov
shlb
bound
pop
bound
sub
pop
add
pop
jne
dec
jns
inc
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
mov
ja
mov
add
out
cltd
xlat
jmp
adc
push
xchg
xor
imul
rclb
sub
jge
cld
xchg
dec
out
or
bound
mov
je
or
js
notb
cmpsl
mov
stos
xor
cmp
rclb
insl
cmpsl
sti
push
and
pop
pusha
mov
insb
cmp
std
jle
mov
aad
jg
push
mov
mov
shrb
das
adc
mov
and
cmp
adc
sub
popl
push
xor
stos
pusha
mov
push
adc
mov
ss
sbb
sub
pop
sahf
inc
inc
out
fnstenv
imul
pop
xchg
ret
addl
fcoml
jne
fidivl
cmp
add
adc
dec
push
pop
mov
mov
das
pop
shrl
in
fstps
push
call
cs
push
jae
ss
out
xor
jle
dec
dec
push
or
adcl
in
xchg
cld
lahf
mull
ja
fwait
jecxz
addb
lcall
mov
xchg
ret
cmpsb
pop
scas
mov
and
cwtl
sbb
cmp
aas
adc
inc
dec
cmpsl
popa
cmp
sbb
sbb
xchg
iret
sbb
pop
test
inc
out
shl
shlb
push
adc
imulb
aaa
clc
test
fisubrl
mov
mov
jp
xchg
dec
pushf
cmp
dec
ror
paddw
out
add
add
in
lock
shl
pop
pop
popa
jecxz
push
cmpsl
cwtl
jmp
sbb
push
cmpsl
lcall
divl
lret
in
push
jg
pop
jmp
mov
aas
push
cmp
dec
jnp
lods
aas
push
test
adc
cmp
lods
xchg
fwait
imul
xchg
ficompl
lock
pop
out
incb
sub
out
jle
xchg
mov
or
lcall
xchg
clc
and
test
aas
and
sbb
xor
mov
jl
adc
repz
mov
push
or
enter
xchg
gs
push
aad
outsl
fildl
mov
ds
jns
xlat
mov
push
and
lea
xchg
adc
dec
push
icebp
and
pop
bound
test
iret
inc
jbe
pop
pop
mov
je
jp
mov
jb
or
fadd
cmpsl
fwait
fwait
sbb
and
out
shlb
sbb
cmp
mov
xor
adc
aam
xor
xor
mov
cwtl
addr16
jmp
daa
mov
cmpsb
out
mov
fmuls
add
jle
dec
sub
sub
loopne
cld
inc
stos
dec
cmovge
mov
aaa
pop
cmp
cwtl
arpl
das
stos
sbb
test
xchg
push
test
xor
or
xchg
fsubs
fisubrs
add
xlat
add
hlt
and
into
mov
test
jns
xor
cmp
dec
mov
push
lds
cmp
pop
push
adc
sub
int
int3
sub
in
mov
outsb
inc
lret
dec
sti
jnp
mov
stc
sub
fidivs
std
xchg
xor
mov
pop
cmc
fisttpll
test
outsl
ss
pop
sbb
loopne
pop
inc
push
in
sti
inc
jo
mov
mov
cmp
inc
mov
jmp
gs
add
mov
fdivp
icebp
jno
fdivrs
xchg
xchg
lods
pop
pop
imul
xchg
mov
mov
bound
cmp
push
push
and
pandn
lods
adc
xchg
mov
iret
add
mov
xchg
push
jmp
sub
sub
push
mov
sub
sar
andl
xchg
ret
mov
mov
sar
scas
loope
xchg
pusha
sub
xchg
jle
adc
rol
in
add
out
lock
les
cmp
movsl
or
add
mov
xchg
pop
sbb
mov
jmp
inc
das
icebp
cmp
pop
lock
aad
mov
repnz
push
dec
cmp
mov
cmp
jo
sub
xor
ja
fwait
sbb
sbb
mov
lock
mov
mov
pop
cmpsb
out
sbb
xor
lock
xor
sub
mov
in
out
bound
push
mov
stos
xor
or
adc
outsb
mov
out
jl
jo
mov
aaa
sbb
cmp
jae
lds
ret
add
sarb
fdiv
push
bnd
data16
out
popa
mov
je
flds
int
sbb
mov
iret
lahf
pop
mov
arpl
outsb
mov
aaa
push
cli
add
xor
push
push
jb
inc
scas
aam
arpl
fcoms
jl,pt
bound
or
pop
jo
in
xchg
cmpsl
dec
lock
bound
mov
sub
sub
cmp
inc
andl
push
pop
stos
test
clc
int3
enter
jp
jle
in
sbb
aam
pop
pop
in
and
or
divb
mov
push
jno
mov
mov
inc
fdivrp
or
cmpsb
and
xor
aam
lret
lahf
stos
sahf
scas
outsl
push
push
test
imul
ficompl
mov
scas
dec
mov
sub
sbbl
es
loope
mov
jmp
mov
fdivrs
pusha
rolb
jmp
inc
xchg
dec
xchg
pop
inc
sahf
xchg
push
mov
aam
inc
jle
fmull
in
mov
jno
ss
test
or
sub
loop
dec
movsb
sub
mov
mov
aas
jg
dec
add
inc
sbb
mulb
xor
outsb
mov
xchg
ret
dec
xchg
mov
or
dec
popf
dec
rcrl
mov
pushf
ja
subb
push
stc
in
movsb
pop
xchg
mov
xor
xor
mov
sub
fsubrp
adc
pusha
mov
and
insl
or
xchg
xor
loopne
pop
fs
jp
mov
inc
leave
jmp
scas
mov
nop
jecxz
cmpps
lret
cmpb
xchg
iret
add
fisubrs
ds
mov
out
inc
pop
test
pop
lret
mov
push
cli
test
dec
cmc
adc
push
test
cmpsb
or
test
arpl
pop
xor
cmp
add
in
pop
cmp
jo
cmp
pop
sub
cltd
loope
inc
fdivs
mov
lods
movsl
and
or
pop
or
inc
outsl
mov
jo
xchg
adc
push
in
lock
inc
add
add
shlb
lcall
mov
aaa
mov
aaa
pop
xor
pop
cli
stc
daa
adc
repnz
sbb
orb
cld
inc
xchg
cltd
push
je
sbb
pop
ja
fsub
mov
mull
mov
sbbb
xor
cwtl
addb
shrb
pop
jb
dec
and
xchg
pop
aam
push
rcrl
dec
in
rcrb
xchg
sbb
loopne
mov
decl
jl
iret
ss
push
mov
mov
add
sbb
xchg
fs
cltd
rcrl
ljmp
sbb
rcr
mov
mov
insb
xchg
dec
sarb
mov
pushf
rorl
push
into
pop
pop
aad
jg
inc
sarl
xchg
movsb
cmp
sbb
mov
adc
inc
dec
pusha
fidivrl
jno
cmp
xor
pop
xchg
in
nop
cwtl
aam
pop
int3
mov
repnz
lock
in
push
inc
std
xchg
mov
scas
lcall
sub
stos
cmp
sahf
xlat
mov
stos
pop
in
mov
mov
aam
fs
sti
pop
pop
leave
xorl
rorb
xchg
pop
clc
adc
pop
jae
and
test
fists
mov
push
jg
xor
dec
test
sahf
mov
and
adc
pushf
mov
enter
dec
leave
out
lret
lods
scas
pop
out
rcrl
adc
je
pop
add
out
adc
leave
push
mov
jmp
inc
xchg
pop
lods
xchg
movsb
push
jno
xchg
mov
popa
sub
lea
movsl
pop
and
scas
sbb
test
in
inc
ljmp
pop
jecxz
jnp
outsb
jg
pop
cmp
push
test
mov
xchg
mov
or
xor
sbb
movsb
shl
push
add
ja
push
sbb
pop
push
fsub
or
inc
pop
adc
shll
xlat
cmp
insl
out
xchg
add
mov
and
stos
imul
pop
imul
xlat
movsl
dec
out
dec
fsubrl
sbb
fmull
icebp
push
push
mov
dec
outsl
std
test
and
sbb
pop
aad
daa
stc
sbb
cwtl
repnz
mov
xchg
enter
push
push
sub
inc
movsb
and
xor
mov
loope
inc
xchg
insl
push
xchg
out
pop
fisttpll
xorb
mov
lods
aas
inc
pop
gs
or
aam
pusha
leave
or
mov
leave
out
pop
xor
repnz
adc
sub
xor
stos
scas
loop
mov
aad
jg
mov
dec
or
dec
jb
stos
jmp
lods
dec
mov
pop
pop
fdivrs
loop
aad
aad
mov
cmp
or
ds
pop
rcll
cmp
movsb
out
dec
cmp
inc
hlt
xor
es
cs
cmp
loopne
mov
insl
xor
idivb
sub
fcomp
cmpsb
adc
in
adc
or
sarb
rolb
scas
xlat
adc
shrb
mov
jmp
xchg
cltd
daa
nop
mov
push
stos
inc
adc
ja
mov
in
push
push
clc
in
movsb
add
fimuls
daa
jne
adc
imul
pop
mov
movl
out
movsl
out
xchg
ret
lods
push
cmp
pop
stos
imul
in
adc
mov
popf
fcomp
push
mov
or
mov
push
pop
cmp
frstor
jle
mov
mov
fs
pop
adc
int
or
sub
mov
push
jp
push
mov
gs
push
mov
pop
fdecstp
and
mov
jl
loop
push
ja
nop
scas
cmp
dec
pop
enter
mov
inc
jecxz
mov
aam
aaa
push
inc
jg
es
fsts
test
jb
sub
fdivrs
in
add
fisttpll
ret
dec
adc
adcl
cmp
sbb
inc
out
mov
mov
mov
leave
xchg
cmc
jno
scas
push
mov
stos
fwait
or
xchg
xchg
in
pop
das
cs
loope
dec
shlb
pop
mov
popa
rorb
outsb
and
pop
loop
jb
je
hlt
ljmp
in
popa
cmc
pop
adc
push
ret
sbb
inc
add
ds
in
cs
cld
adc
int
jnp
dec
mov
mov
and
bound
mov
dec
adc
mov
iret
aam
mov
aas
outsl
jo
inc
idivl
hlt
lea
mov
aas
xor
xor
push
sti
mov
inc
pop
mov
push
and
dec
dec
dec
orl
ljmp
fimuls
mov
jo
sub
cmpsb
adc
fcoms
mul
jle
jecxz
push
pop
jnp
in
into
and
dec
int
pop
cmp
fcomi
and
adc
add
out
or
shll
push
mov
push
xchg
jp
pop
popl
stc
dec
shr
lea
add
fcoms
ficoms
mov
and
movsb
pushf
lcall
dec
mov
movsb
dec
push
ja
add
js
lahf
rorb
mov
cli
jne
hlt
pop
xor
mov
jge
sarb
push
int
push
inc
notb
sbb
addr16
cmpsb
jle
or
mov
add
mov
inc
push
and
test
nop
sti
lret
push
test
sti
push
ds
dec
dec
dec
xchg
inc
cld
sub
mov
aaa
jne
insl
jbe
clc
xchg
pop
popf
daa
add
hlt
dec
ds
xor
or
lahf
fwait
cmp
movsb
loop
pop
fistpll
popf
insl
orl
mov
arpl
add
inc
add
mov
sub
lods
fcompl
push
icebp
fwait
mov
xchg
and
xchg
into
stos
lahf
cmc
push
sub
std
jns
lock
mov
add
popf
rcrl
int
cmp
sbb
push
btr
sub
pop
cmpsl
cmp
lahf
adc
icebp
jg
cmp
aaa
fiadds
lcall
in
jns
imul
sub
dec
mov
out
cs
xchg
clc
aam
mov
fwait
add
into
pop
push
test
jae
movsl
cmpsb
mov
je
mov
pop
test
fwait
mov
adc
je
sbbl
push
dec
rclb
lret
ja
adc
add
nop
mov
lcall
cmp
fmul
or
xchg
outsl
dec
mov
and
jbe
inc
pop
add
xor
int3
pushf
lods
jmp
or
hlt
mov
movsb
jg
imul
mov
in
enter
and
mov
movsb
jno
mov
orb
sbb
lea
sbb
inc
and
fildl
xrelease
gs
sbb
mov
in
pop
mov
fldt
lcall
or
xor
popa
adc
cltd
add
cmp
shlb
xor
out
fcompl
aam
or
in
iret
cmp
out
dec
adc
dec
sub
jae
pop
push
sub
mov
mov
mov
push
cmpsl
std
jecxz
inc
ffreep
adc
lock
xor
stc
divb
pop
outsb
and
push
and
cs
dec
fsubrl
or
fimuls
leave
fsubrs
cltd
sbb
xor
add
sub
jns
push
test
xchg
ret
std
leave
movsb
es
xchg
int3
xchg
xchg
loop
loopne
cmp
aaa
push
in
ds
cmp
aaa
int
std
add
lcall
loop
ds
movsb
cmp
aam
int3
add
ss
test
insb
or
into
outsl
cmp
dec
je
out
push
jmp
or
out
adc
fisubrs
es
adc
sarb
into
jbe
insl
inc
dec
jl
sbb
fcompl
cmpb
in
ja
sarb
sahf
mov
and
cmp
fcompl
mov
cltd
js
sub
scas
pop
jnp
int
xchg
inc
test
mov
pop
xchg
or
add
loopne
into
jb
sub
mov
xor
mov
inc
adc
popa
xlat
and
mov
clc
out
or
jae
cltd
adc
out
std
int3
add
fdivrl
add
subb
cmp
sbb
mov
add
call
rolb
popa
pop
jo
lods
pop
mov
vmovapd
mov
daa
add
push
or
inc
add
scas
outsl
and
xor
sbb
out
lret
incl
mov
sbb
outsb
sarb
push
sbb
fidivrl
jp
xchg
mov
insl
mov
xchg
mov
xchg
xor
mov
mov
dec
pop
mov
mov
cli
adc
add
push
cld
stos
dec
add
pusha
push
pop
icebp
filds
fisttpll
stc
aaa
inc
push
movsb
pop
shr
mov
xchg
in
and
cmp
dec
sbb
push
cli
sbb
sub
mov
movsb
popa
ds
sbb
jl
add
inc
loop
clc
test
and
inc
int
cwtl
mov
dec
cmp
mov
jge
lret
mov
xlat
andb
xchg
xchg
sbb
mov
pop
sbb
mov
pop
inc
lods
push
fistps
gs
stc
xor
push
mov
jp
lahf
dec
call
push
inc
clc
xor
movsb
jno,pn
or
sahf
enter
lret
pushf
lret
push
push
pop
in
cwtl
idivb
push
dec
in
es
dec
outsl
cmc
pop
sbb
lods
js
sub
jnp
push
dec
xchg
loop
xchg
sbb
test
jno
xchg
mov
push
xchg
push
xchg
or
lret
cmp
cmc
sbb
add
sar
shlb
cmpsb
jnp
and
js
push
sub
mov
xor
loope
push
test
xor
xchg
or
push
jle
in
jg
or
sub
mov
jmp
mov
xchg
faddp
inc
dec
pop
ds
lcall
out
pop
sub
test
fsubr
fs
jge
mov
stc
dec
fs
adc
in
iret
pop
sbb
dec
jp
repz
ret
mov
add
imul
push
aaa
jg
out
fs
xchg
ja
push
xchg
jne
imul
mov
xor
mov
out
inc
jae
mov
pop
roll
mov
nop
xchg
lods
xorb
jmp
cmp
mov
jl
add
iret
gs
add
mov
pop
adc
insl
add
out
adc
shll
xchg
insb
fists
add
xchg
into
push
xchg
xor
dec
fucom
mov
cmp
int3
mov
push
inc
or
jbe
iret
addl
movsb
gs
mov
test
scas
movsl
pop
je
lret
cmp
xchg
fsubrs
movsl
inc
adc
mov
dec
mov
rcrb
push
gs
dec
fimuls
mov
push
mov
orb
cmp
roll
imul
mov
clc
jae
lods
inc
fidivs
jno
push
pop
je
jo
rcrb
outsl
fcoml
mov
xchg
bnd
inc
cmpsl
rcrb
insl
inc
jmp
fwait
out
and
jnp
and
adcl
sub
jg
aad
and
xor
jp
mov
cwtl
hlt
pop
loop
popf
cmpsl
xor
pop
pop
push
xorb
inc
stc
add
aas
cwtl
xorb
int
mov
push
in
sub
dec
and
lea
xchg
pop
mov
dec
jl
xor
xor
mov
xor
ljmp
and
jne
les
stos
popf
mov
daa
rorb
insl
roll
jbe
dec
xor
push
je
add
xchg
mov
mov
rcrl
or
add
imul
inc
hlt
or
rcrb
sub
mov
lret
cmc
sbb
aaa
hlt
lahf
or
mov
ljmp
add
movsb
stc
rcr
sbb
add
mov
push
cld
dec
mov
jne
pusha
ja
aas
push
xor
enter
xchg
adc
sbb
jg
lret
xchg
jnp
xchg
sarl
fs
sub
mov
mov
int
push
dec
add
sbb
jno
pop
pop
adc
push
rorl
cmpsl
iret
test
int
add
cmp
out
adc
cwtl
out
push
sbb
xchg
std
test
or
dec
cmp
push
in
loope
pop
call
mov
out
mov
add
iret
mov
mov
sub
mov
cmp
push
in
mov
mov
jle
or
push
lsl
orl
xchg
jbe
adc
jle
scas
dec
into
stos
cmp
mov
dec
pop
cmc
out
mov
popf
cmpsb
loop
cld
out
mov
fyl2xp1
ret
iret
iret
or
aam
subl
mov
or
call
push
or
or
dec
adc
pop
rorl
adc
cmpsb
js
lcall
or
mov
mov
jbe
loopne
mov
gs
push
subl
popf
pop
xchg
push
dec
pop
imul
push
jp
icebp
insb
and
loope
sub
aas
mov
xchg
jecxz
jb
dec
mov
add
sub
scas
rorb
xchg
mov
in
jg
jbe
or
sbb
arpl
xchg
ret
xor
scas
or
and
out
add
lock
push
scas
pop
xor
in
jp
jmp
nop
test
xchg
test
fcmovne
dec
xchg
lds
dec
mov
les
adc
xor
sbbb
aas
sbb
popf
adc
mov
out
inc
ret
iret
scas
jnp
dec
fcomp
or
push
repnz
inc
pop
mov
jecxz
pop
jns
xlat
mov
lods
pop
xchg
sarl
add
into
mov
or
es
push
and
jo
fmuls
jmp
jb
aad
fidivrl
mov
pop
cmp
stos
sbb
mov
repnz
bound
sbb
push
jnp
mov
fmull
sub
pop
jle
sub
mov
out
addr16
xchg
dec
rcrb
popf
pop
jle
sub
inc
repz
fldt
add
jmp
in
scas
call
cmp
lods
je
out
data16
jbe
aad
clc
or
pop
js
or
mov
sbb
clc
sub
repnz
shlb
and
dec
aaa
int
and
cmp
inc
sub
into
movsl
subb
jp
mov
lahf
repz
lds
ljmp
mov
pop
inc
bound
push
imul
jb
lcall
divl
shll
mov
data16
movsb
aam
loopne
movsb
fisubrl
push
sbb
push
bound
sbb
call
xchg
rorl
xchg
ret
imul
mov
or
stc
inc
out
hlt
xor
or
pop
fadds
divps
pop
popa
lds
cmpsb
test
sbb
add
xor
lods
push
jne
jnp
and
adc
dec
lret
jmp
dec
scas
mov
fmuls
mov
lods
shl
std
sub
mov
dec
mov
xor
fwait
xchg
sub
pusha
mov
cwtl
int3
ja
push
sub
cmp
jge
andb
jmp
iret
movsl
stc
xchg
mov
sub
and
shll
mov
mov
jmp
ret
pop
ljmp
xor
filds
adc
sti
cmpb
in
imul
repnz
aam
add
adc
call
orb
aas
sbbb
jmp
xlat
out
xchg
sbb
add
rcrb
lret
adc
cmc
pop
mov
pop
loopne
add
cmp
mov
pop
jnp
xor
fdivrl
pop
pop
aam
mov
clc
jb
xor
dec
lods
out
jbe
xchg
out
dec
adcb
xchg
pop
or
outsb
stos
xor
sub
mov
lret
jo
loopne
adc
xor
movsb
mov
jo
ss
cmp
arpl
mov
fmull
dec
nop
push
call
iret
xor
pop
mov
jmp
dec
popa
mov
push
mov
add
call
and
pop
mov
lret
or
insb
repz
cmp
shl
cli
inc
icebp
xor
lods
sti
push
pop
push
sbb
pop
dec
xchg
or
lea
andl
std
push
test
sbb
xchg
mov
movsb
jne
inc
shrb
cmp
cmpl
mov
sub
inc
shll
xchg
mov
int
lcall
fidivrs
stos
aam
subb
les
push
repz
es
imulb
jmp
jns
std
add
pop
gs
pop
roll
rclb
cli
push
pop
add
rcll
inc
lcall
mov
fidivl
divl
xchg
clc
fsubl
adc
call
ljmp
pop
push
lret
xchg
addr16
test
jne
pop
imul
adc
mov
mov
popf
mov
mov
mov
cld
cmpsb
dec
aad
pop
push
dec
and
add
sti
fistps
mov
repz
inc
jge
cmc
sbb
xchg
xchg
cmpsl
inc
xor
jecxz
or
pusha
mov
jbe
sbbl
adc
xor
pusha
pushf
daa
push
jno
cmc
mov
sbb
in
loop
stos
mov
mov
mov
mov
jg
lea
pop
add
icebp
pushf
adc
ret
pop
and
jmp
xchg
and
add
pusha
or
test
mov
mov
data16
shll
xchg
into
out
push
scas
repz
xchg
inc
inc
insb
enter
into
sti
popa
pop
js
std
roll
inc
xchg
test
pop
sti
mov
mov
mov
jle
adc
sub
stos
scas
cmp
or
cmp
jns
scas
and
scas
arpl
push
pop
out
out
xor
inc
adc
stc
mov
jg
jg
xor
add
or
dec
mov
cmp
addl
xor
inc
out
add
push
insb
lahf
fistps
push
and
mov
mov
cmp
pop
xchg
and
nop
pop
lds
je
imul
push
pusha
inc
out
hlt
jecxz
out
fiaddl
repz
insl
mov
outsb
mov
mov
bnd
or
lods
movsb
daa
shlb
rcrb
pop
jmp
inc
dec
sub
mov
js
inc
mov
dec
sahf
daa
xchg
push
lea
sti
mov
xlat
outsl
mov
aam
in
movsl
es
mov
xchg
les
movsb
scas
or
adc
xchg
mov
mov
mov
outsb
push
aam
and
push
lret
xor
lods
jbe
stc
jecxz
pop
andb
stos
loop
mov
push
cmp
sub
dec
adc
fidivs
inc
mov
xchg
sub
jp
dec
loope
insl
xlat
out
xor
roll
outsl
push
jb
dec
ljmp
mov
mov
push
pop
pop
cltd
pop
adc
andb
mov
nop
dec
sub
mov
add
jmp
pushw
adcl
cmp
imul
in
in
and
addr16
mov
xchg
inc
fnstenv
in
call
bound
subb
push
pop
pop
lret
rcr
and
xchg
test
cmp
pop
xor
fcomi
cmp
enter
imul
or
pop
cmc
add
inc
inc
adc
pushw
pop
rclb
leave
repnz
lods
lods
xor
cli
add
loop
loope
movsl
addl
into
lock
shrb
or
jecxz
and
pop
mov
lahf
mov
scas
jne
cmp
push
stos
inc
mov
loopne
and
mov
cs
and
pop
ret
and
bound
mov
js
daa
hlt
lods
or
xor
sbb
or
lock
add
lcall
dec
add
sbb
out
movsb
xor
pushl
mov
inc
pop
fcoml
pop
dec
xlat
push
push
lock
das
cmc
popa
insl
xchg
xchg
jp
daa
pop
out
add
or
int3
xor
dec
pop
pop
jg
jns
inc
idiv
mov
test
into
inc
adc
pop
mov
flds
sbb
outsl
mov
imul
scas
into
aas
mov
das
popa
lods
pop
pop
inc
cmp
les
call
cmpsl
push
add
daa
jmp
int
jecxz
mov
sbb
lods
cmp
or
cld
mulb
inc
bound
icebp
rclb
jbe
add
mov
push
add
cltd
cmc
leave
mov
test
sbb
imul
hlt
dec
mov
jne
mov
adc
das
fcoms
adc
mov
cli
xor
xlat
es
mov
xor
pop
add
push
pop
std
dec
jecxz
sete
pop
and
in
cltd
rorl
cmpl
sahf
out
jg
add
mov
sbbb
loope
pop
and
loope
int
cmp
sbb
mov
pop
cmpsl
dec
and
clc
arpl
xor
imul
jge
lret
ret
cmp
jo
pcmpeqw
js
gs
pop
add
push
mov
dec
lahf
sub
cmpl
adc
xor
ficoml
fiaddl
jg
imul
stos
jmp
cmpsl
lods
xchg
lods
or
ret
push
sbb
dec
das
fmul
popf
jno
xor
push
and
mov
lock
jb,pn
inc
mov
out
cmp
addr16
push
and
stos
fisubl
jge
jae
sbb
inc
xlat
fdivrl
jno
xor
mov
outsl
sti
pop
les
test
enter
jmp
adc
add
loope
xor
xchg
jp
cs
mov
incb
cwtl
jbe
insl
inc
pop
in
pop
fwait
cmp
dec
je
call
insl
jo
out
lret
out
aaa
cwtl
aaa
pop
nop
mov
nop
xor
bound
test
pop
stc
shr
clc
aas
pop
inc
sub
mov
pop
mov
pop
mov
inc
lock
and
push
fwait
ja
lcall
push
outsl
adc
shl
xchg
sub
js
test
lods
loopne
or
sbb
jb
es
arpl
sahf
push
mov
pop
stos
sbb
dec
leave
aas
xchg
outsl
cs
lea
jb
push
je
inc
sahf
leave
xchg
test
shrb
lret
fstpl
mov
mov
cmpl
cmp
and
imul
cwtl
push
adc
jg
fidivrl
jmp
rcrb
in
push
add
add
sbb
mov
loop
or
inc
sarl
add
repz
or
sbb
push
adc
push
cld
jmp
xchg
repnz
lret
iret
or
sub
orl
mov
xor
fldl
aas
aas
stos
and
movsb
fistl
or
in
inc
sbb
mov
fstps
inc
sub
dec
adc
adc
int
stos
aaa
add
xor
je
sbb
std
dec
pop
mov
xor
jns,pn
push
adcb
pop
inc
nop
jp
stc
ficoms
das
dec
and
idiv
popf
mov
mov
shll
cmp
ss
add
mov
add
inc
in
mov
inc
fwait
inc
push
divps
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
add
bound
pop
bound
ljmp
das
fidivrl
or
push
dec
inc
pop
push
adc
push
filds
push
sub
dec
stos
aam
sbb
mov
add
fldl
sarb
lret
adc
sbb
in
xor
lods
push
and
stc
and
dec
and
xchg
lods
jns
sti
sahf
mov
jo
adc
inc
scas
mov
jns
ffreep
in
jecxz
pop
inc
xchg
push
mov
bound
iret
clc
inc
lret
cwtl
mov
sbb
pop
loope
pop
xor
fsts
dec
int
iretw
aam
inc
stc
adc
sbb
or
cmp
inc
mov
dec
rcrb
dec
ljmp
adc
sub
xor
adc
rorb
sub
and
mov
pop
fistps
jno
sub
cmp
fld
lock
movl
jge
mov
fbstp
xor
les
leave
insl
sub
cmpl
movb
or
push
mov
sbb
inc
aam
adc
jne
ljmp
cwtl
inc
mov
xor
xor
loop
fnsave
cmp
rcrl
nop
dec
pushf
pop
or
xchg
sbb
stc
in
cwtl
int3
jo
adc
fists
lea
sub
int3
rcll
xor
mov
dec
xchg
scas
cmpsb
clc
decl
ret
pop
rcr
xor
sub
ds
shl
dec
gs
pop
pop
xor
push
push
ja
pop
push
icebp
sub
xchg
and
std
sarl
mov
inc
mov
lret
dec
pop
jmp
in
add
cli
lock
cmp
xchg
xor
inc
mov
enter
arpl
mov
in
pop
std
sbb
mov
pop
fnsetpm(287
out
std
cmp
xor
adc
test
es
push
mov
imul
adc
in
mov
adcb
jle
sbb
mov
adc
pop
sbb
mov
mov
push
enter
mov
sbb
mov
or
jns
call
test
mov
xchg
fstpt
arpl
insl
inc
xor
xchg
xorl
xchg
cmp
xor
jl
jge
movsb
iret
lret
mov
out
call
fdivs
mov
pusha
push
or
shll
stc
stos
cmc
daa
in
ja
xor
inc
inc
sbb
jge
sub
and
xor
cmc
mov
push
fdivrl
mov
jg
es
nop
mov
rcrl
out
mov
repz
das
jmp
mov
int3
cli
mov
xchg
sbb
and
add
repnz
xor
sbb
xchg
or
or
lods
movsb
dec
shlb
inc
sbb
jp
pop
pusha
mov
cmp
in
data16
es
cmp
pop
insl
inc
lcall
shlb
pop
outsb
push
dec
outsb
mov
adc
inc
je
dec
outsl
mov
aaa
in
test
push
jle
and
mov
sbb
js
xchg
cmc
jno
fucomip
or
or
repz
lret
jno
inc
sti
sub
inc
xchg
rcrl
lds
cld
jne
aaa
insb
cltd
lods
inc
adc
jbe
dec
push
sbb
icebp
fs
fscale
aad
push
cltd
mov
mov
jp
int3
mov
mov
or
mov
jne
loopne
call
repnz
rolb
dec
fcoml
pop
jmp
mov
aaa
pusha
not
fistpl
jns
jns
jno,pn
dec
test
stos
int3
lock
pop
lret
hlt
dec
push
xchg
mov
arpl
cmp
repz
imul
out
loope
mov
jmp
cmpl
and
enter
adc
repz
fwait
pop
loop
dec
test
lcall
int3
jae
xchg
aam
dec
sahf
sub
das
les
ret
sahf
pop
shlb
mov
cli
mov
les
cld
or
cmp
xlat
lcall
lods
incl
jmp
pop
jecxz
xor
in
ja
jecxz
adc
pop
xchg
fnsave
adc
or
pop
pop
adc
loop
icebp
pop
adc
and
push
and
sahf
mov
wbinvd
fs
cmp
mov
or
in
ljmp
jnp
jae
in
insl
aas
or
cmpsl
repnz
cltd
lret
jmp
mov
fdiv
mov
xchg
jae
out
and
jecxz
ret
lahf
mov
mov
mov
sbb
pop
mov
iret
in
stos
cs
sahf
sbb
jg
and
js
mov
int
push
fwait
inc
add
pop
ljmp
stos
fidivrs
mov
adc
mov
insb
enter
jne
push
imul
movsl
add
mov
inc
pop
jle
test
push
lret
cmpb
bound
jns
and
movsb
dec
add
inc
jmp
cltd
hlt
andl
lea
lret
loopne
aaa
xchg
fcomps
push
lds
dec
dec
loope
sar
pop
sbb
rcrl
divb
lods
jl
pop
rcrb
mov
jg
loope
cld
cmp
dec
mov
sub
pop
jecxz
push
int
mov
fsubrl
in
mov
fists
stos
out
cmp
jnp
pop
jecxz
out
je
xor
in
test
adc
xorl
dec
or
loopne
mov
jo
add
addr16
aas
mov
jb
bound
gs
insb
lcall
fcoml
lock
jo
xchg
pop
xchg
xor
aaa
dec
push
pop
insb
aam
xlat
dec
insb
mov
loop
jmp
ljmp
ret
loope
mov
int3
jecxz
adc
pop
cmp
in
cmp
cmp
out
jnp
sub
push
scas
mov
testl
icebp
addr16
and
or
dec
xchg
outsl
or
mov
pusha
pop
mov
arpl
mov
sub
repnz
sbb
xor
xchg
or
cmc
aaa
cltd
fdivs
jl
sub
aam
cmp
je
je
sbbl
or
push
sahf
test
xor
test
enter
shll
lock
into
lods
sub
dec
lret
fidivs
negl
inc
pop
or
sti
pop
lahf
popf
outsb
dec
aam
popf
mov
mov
mov
jnp
sahf
sub
out
pop
rcrb
mov
rol
pop
int3
mov
jmp
adc
movsl
mov
sbb
add
inc
adc
mov
xchg
sub
movsb
mov
iret
xchg
test
negl
and
jecxz
mov
ss
mov
test
sar
and
add
shll
lret
add
pop
dec
fwait
call
aam
in
add
cwtl
stos
xchg
mov
addb
ss
jmp
push
cld
cwtl
inc
mov
popa
and
repz
and
mov
dec
orb
lods
jmp
imul
sbb
gs
clc
mov
test
arpl
inc
addr16
outsl
sub
xchg
mov
mov
lods
mov
fadds
filds
cmp
mov
sbb
cmp
enter
and
addr16
shlb
cmp
push
push
sti
lods
enter
cmp
out
rep
or
xor
addl
mov
or
xchg
sbb
xor
mov
xchg
test
pop
push
xor
rcll
mov
push
test
in
test
cmpsb
cmc
in
xchg
xchg
add
outsb
xor
rcrl
dec
out
xchg
shrb
test
cmpsb
cwtl
sub
or
fs
in
stos
jo
aaa
cld
shl
cmp
sbb
mov
jecxz
mov
jmp
je
mov
aad
lret
mov
push
pop
pusha
jp
add
add
xchg
mov
sub
leave
out
add
pushl
mov
mov
scas
stos
lret
int3
jmp
push
cmp
in
iret
xchg
cmp
subb
and
repnz
xlat
je
fistpl
mov
xchg
int3
push
push
mov
and
pop
lret
cmc
in
les
es
repnz
inc
sbb
or
or
fidivrs
daa
and
iret
jae
lret
add
int
lret
mov
mov
cmp
dec
mov
js
inc
xchg
in
or
aam
mov
inc
add
add
add
sub
dec
jle
jo
dec
jmp
and
jmp
mov
shll
jne
mov
loope
into
jmp
cli
in
repz
lds
fidivrl
xchg
outsb
inc
push
cs
xacquire
cmp
pop
push
fiaddl
and
push
push
and
lods
cmp
sub
repz
push
pop
cmpsb
adc
jne
int3
shll
lock
daa
cmp
add
add
daa
mov
into
inc
lret
cmpsb
jbe
loope
mov
mov
shll
push
flds
aam
aad
scas
jo
pop
sbb
jbe
imul
aaa
lret
push
add
pop
or
push
xchg
push
test
repnz
jge
repz
pop
push
cmp
cwtl
rcll
stos
push
mov
out
pop
adc
dec
inc
xchg
shll
push
inc
sub
fstpt
push
xchg
fbstp
pop
add
cmp
lods
lods
add
clc
add
push
add
pop
push
fnsave
sbb
sbb
es
dec
sahf
adc
icebp
or
hlt
xchg
ret
stos
mov
stc
mov
xchg
pop
lret
rorl
adc
cmp
aad
push
cmp
cmpsb
xchg
aad
ss
push
cli
int3
call
lret
rcl
outsb
mov
or
inc
xchg
scas
pushf
js
ja
bound
dec
mov
jo
push
rorl
in
outsb
pop
add
xlat
sub
scas
jg
in
lock
sbb
dec
sbb
sub
sub
aad
fnstcw
add
push
push
xor
and
adc
and
sub
loopne
xlat
push
rorl
aad
lods
rcrb
mov
or
lahf
into
dec
cmp
mov
cmc
into
out
sub
adc
cld
add
dec
sti
fisttpll
repnz
aad
inc
icebp
xchg
sti
fidivs
mov
push
hlt
jno
rol
das
movsl
arpl
jle
and
xchg
cs
mov
sbb
pop
lret
hlt
adc
jp
jne
adc
xor
loop
bound
adc
faddl
ss
mov
imul
mov
leave
jb
es
fwait
iret
and
sbb
inc
push
inc
fldt
push
ljmp
dec
mov
jg
sbb
cmp
in
negl
push
cmc
mov
jb
jbe
pop
adcb
push
xchg
je
pop
lret
sbb
adc
into
addb
mov
arpl
mov
xor
fistpl
loopne
cs
ljmp
add
ss
xchg
test
call
pop
adc
jle
jbe
outsl
icebp
lea
xchg
pop
sbb
dec
dec
pop
push
repz
and
fstps
popl
ret
pushf
sub
mov
shrd
xchg
or
data16
testb
cmp
cmpsb
mov
xor
mov
inc
sub
cmp
xor
sub
adc
sbb
add
jmp
xchg
xor
or
jae
jecxz
jecxz
arpl
push
into
dec
and
xchg
cmpsb
cmp
cmpsl
insl
cmp
sub
jns
and
hlt
pop
sub
pop
push
or
aaa
pop
out
mov
ss
mov
sti
outsb
push
fdivr
out
mov
arpl
add
into
psrld
test
adc
xchg
ret
xor
xlat
add
mov
sbb
push
xor
inc
leave
das
stc
xor
cmp
ret
adc
rcrb
push
and
xchg
in
xor
mov
jne
xor
adc
lahf
sub
or
pop
stos
mov
je
adc
stos
add
dec
mov
pop
push
repz
fs
std
test
andl
imul
mov
arpl
cmc
movsl
pop
sahf
roll
pop
cmpsl
js
jno
test
insb
pop
or
dec
inc
push
and
out
mov
imulb
xchg
ret
sub
popa
sbb
push
pusha
mov
mov
xchg
subl
andl
cmp
aas
cmp
cmp
mov
pop
cmpsl
cli
out
andps
jb
cmp
fstpt
rcr
lret
add
das
jo
sub
arpl
jp
mov
test
pop
pop
pop
mov
andl
and
mov
arpl
in
xchg
icebp
mov
pusha
jno
shll
jns
dec
daa
leave
or
sti
inc
pop
pop
and
xor
xor
sti
ljmp
clc
aas
icebp
pop
das
jbe
and
sbb
push
adc
jb
pusha
or
add
push
lret
subl
mov
dec
cmpsb
dec
popf
and
mov
test
dec
cmp
xchg
push
rorb
cmp
xchg
das
xchg
icebp
insl
dec
sbbl
jae
mov
call
jg
loopne
out
and
test
ja
les
inc
scas
ss
pop
ret
std
sub
loop
pusha
imul
inc
out
icebp
mov
cli
decl
jne
mov
sarb
push
sbb
idivb
mov
and
jo
int3
insb
mov
mov
loope
dec
sbbl
lods
pop
inc
lods
test
rcl
mov
inc
push
fstpl
sti
insb
cmp
mov
xchg
inc
mov
xor
jmp
jno
lods
movsb
outsb
pushf
sbb
adc
push
repz
jmp
or
or
pushf
adc
adc
test
push
pusha
lds
jnp,pn
push
enter
rcll
sbb
shll
loopne
mulb
push
mov
push
ljmp
jp
movsl
inc
scas
out
push
stos
into
idivb
ja
pop
call
add
es
out
adc
stc
lahf
adc
outsl
jecxz
ja
push
push
adcl
mov
out
cs
dec
shr
inc
sahf
mov
lds
ja
inc
or
out
daa
xchg
lcall
xor
jne
add
mov
es
xor
lahf
ficoml
xchg
inc
scas
xor
mov
stc
sbbl
stos
cmp
xor
sub
push
scas
adc
mov
dec
insb
orl
aaa
dec
jae
xchg
push
push
mov
mov
dec
or
adc
xor
cld
push
fistl
xlat
scas
lret
mov
cmp
and
push
cmpsl
dec
sub
sub
test
add
out
or
das
xchg
rclb
sbb
scas
cmp
jmp
cmp
outsl
out
mov
insl
or
fnstcw
clc
mov
push
fldt
xchg
cwtl
xor
jno
pop
add
dec
jnp
mov
add
jnp
push
and
rep
daa
mov
mov
mov
out
jecxz
mov
jno
popf
leave
pop
sbb
cmpsb
cltd
rep
sub
cli
jns
cmp
in
push
xorb
les
dec
cli
jecxz
hlt
xlat
cmc
inc
add
xlat
divl
out
out
shr
fisubrs
rolb
push
sub
pop
rep
insb
xchg
js
inc
movsb
jne
jns
cmp
aad
pusha
scas
leave
xchg
add
daa
fildl
pushf
scas
fwait
lock
mov
jno
and
lret
jbe
cli
dec
hlt
inc
call
into
sub
loop
xchg
adc
arpl
mov
push
dec
xlat
out
imul
flds
imul
mov
pop
mov
lret
mov
fstps
dec
sbb
cs
mov
cmpsb
loopne
mov
mov
and
aam
mov
outsb
jp
clc
mov
cmc
or
dec
das
mov
adc
jb
andb
lods
jge
pop
push
sub
out
xchg
roll
lods
xorb
cs
in
dec
pop
shr
movsb
out
in
mov
aam
in
xor
mov
test
sbb
js
lcall
sub
add
sbb
push
js
or
loopne
mov
dec
shll
push
pop
test
idivl
xor
add
nop
gs
jecxz
or
lea
mov
cli
cmp
push
movsb
push
mov
test
pop
bound
lcall
dec
mov
fwait
sahf
mov
mov
test
jecxz
arpl
cmp
mov
outsb
cmpsb
nop
push
in
xchg
in
testl
or
andb
jnp
mov
mov
inc
fld
addb
xor
xchg
out
xchg
hlt
pop
test
repz
adc
test
sub
cwtl
insl
cli
mov
outsb
mov
mov
and
ss
fimuls
mov
add
clc
and
inc
out
adc
cmpb
fnsave
sbb
es
xchg
fnstsw
in
dec
fistpll
lods
icebp
andl
jb
adc
add
pop
adc
daa
lret
add
js
mov
popf
cs
out
ret
shlb
cmp
push
mov
fsubrp
mov
pushf
idiv
add
into
out
lcall
xor
in
cmp
outsb
jne
int
in
jno
lds
add
sub
mov
test
iret
or
jo
mov
or
adc
mov
pop
adc
outsl
sub
xlat
lods
and
sub
and
into
xor
aad
adc
push
and
xchg
es
repnz
dec
ljmp
push
push
cmp
out
pop
mov
mov
cmp
popa
add
push
lds
push
stos
test
push
adc
push
or
lods
inc
mov
aaa
sahf
push
call
push
inc
or
sbbb
cmp
adc
and
mov
js
mov
mov
mov
xchg
sbb
leave
cmpsb
fimuls
cwtl
fprem1
sbb
lods
in
ds
ds
cmp
fwait
dec
fwait
and
ret
fs
mov
fcompl
mov
sub
jmp
shlb
ret
sbb
add
xor
aam
stc
push
insb
int
xchg
je
rcrl
jb
inc
mov
lods
arpl
and
aam
sub
jmp
outsb
idivl
xor
sbb
xor
popf
aas
cmp
ja,pt
je
fisubrs
orb
pop
jb
lret
negb
sbb
aad
push
sbb
jle
lret
push
xchg
pop
or
mov
js
add
push
xor
mov
cmp
xorb
xchg
add
lcall
jo
ds
pop
jmp
je
les
pop
fisubl
dec
sub
mov
ss
inc
jp
test
xorl
ret
enter
rcrb
icebp
dec
ret
cmpsb
fs
shlb
cwtl
outsl
adc
iret
xlat
push
gs
inc
add
xchg
pop
push
cmp
mov
xchg
push
adcl
mov
sahf
cmp
addl
mov
inc
dec
xor
mov
push
call
scas
es
adc
adc
xchg
mov
mov
inc
cltd
xchg
add
lcall
aas
es
cmpb
icebp
push
stc
sti
inc
push
cld
jns
adc
loop
jo
filds
add
push
popa
push
insl
movb
jbe
jnp
out
mov
push
sbb
testl
and
pushf
add
push
jle
stc
in
or
add
imul
fldcw
mov
hlt
pop
and
fisttpll
mov
inc
out
dec
jo
mov
sbb
xor
test
mov
mov
insb
leave
in
adc
subl
and
cli
mov
inc
jae
scas
out
jg
lock
addr16
mov
jbe
sbbl
push
les
mov
dec
test
movsl
insl
sub
ljmp
aam
jb
pop
int3
or
xor
test
jmp
inc
std
lods
add
add
in
and
inc
add
push
aas
divl
outsb
jb,pt
sub
mov
push
cmp
in
ds
fs
sub
movl
xchg
push
scas
jno
lock
repnz
aam
shll
adc
adc
mov
std
stos
popa
cmc
or
push
xchg
add
add
repnz
sahf
stos
bound
sbb
push
mov
rcr
in
add
out
mov
lret
bound
imul
sub
push
push
sbb
mov
push
out
jp
mov
inc
mov
xchg
lods
and
xor
inc
repz
test
nop
cmp
dec
test
sub
stos
dec
xor
dec
ljmp
pop
je
rcll
fs
xor
or
dec
ficomps
mov
and
shrb
jne
cmp
jecxz
lods
aaa
jge
pop
jns
stos
testl
xor
les
dec
mov
mov
fisubrl
pop
rolb
cmp
mov
mov
mov
add
jo
and
push
jl
shrl
adc
dec
xchg
jle
jnp
jo
sti
sub
addl
imull
jl
cmp
pop
sbb
xchg
xchg
inc
stc
dec
clc
and
out
pop
in
test
jne
mov
dec
mov
push
inc
fld
in
leave
xchg
xchg
sti
mov
push
jmp
and
inc
notl
xchg
dec
idivb
je
push
lods
cwtl
hlt
xchg
or
je
lods
xor
sti
cmpsb
pop
xchg
pop
popa
sti
sarb
idivl
loop,pn
fmuls
add
movsb
cmpsl
stos
mov
and
jno
lods
int3
sub
dec
and
mov
jb
mov
cmp
lahf
shrl
cld
ret
mov
mov
mov
divb
int3
call
mov
add
sbb
mov
push
inc
or
test
cmp
jno
lods
fistps
dec
pop
mov
stos
add
ss
push
lret
leave
mov
leave
or
addr16
mov
jge
fwait
in
loopne
cmpsb
es
jno
cmp
pop
jp
ja
lret
mov
repnz
icebp
add
add
pop
enter
mov
xlat
xchg
adc
xchg
mov
sbb
lea
xlat
out
movsb
pop
xchg
sub
mov
mov
push
pop
decl
dec
xchg
or
outsb
inc
bound
movsb
movsb
jae
lods
scas
imul
mov
cmp
divb
inc
popa
mov
mov
adc
cmp
jbe
mov
call
mov
xor
pop
dec
aas
mov
mov
mov
pop
xlat
or
mov
ds
sub
sbb
lods
insl
std
jp
mov
lret
scas
xlat
daa
inc
and
xchg
das
push
outsl
xchg
push
mov
xor
pusha
cltd
push
sbb
cmp
lret
inc
push
add
pop
pushf
mov
jne
pop
lcall
xchg
mov
pop
fcmovne
cmc
mov
arpl
aad
mov
xor
mov
push
mov
jne
fiaddl
xor
outsb
movsl
mov
jl
jb
shr
xor
lea
fucomip
testb
inc
pop
sub
jmp
shrl
mov
cmc
in
mov
arpl
outsl
push
push
inc
xlat
in
xorl
jne
sub
leave
decb
jo
pop
outsl
push
gs
or
sub
push
mov
and
mov
xor
lahf
insb
cmp
jo
pop
sbb
mov
imul
sub
or
fs
push
mov
aaa
cmc
ss
fldenv
dec
std
add
or
xchg
cmp
fiadds
inc
push
jecxz
call
or
and
sub
xchg
fsubrs
cld
pop
xchg
in
push
push
repnz
or
jg
add
xchg
in
push
aas
sub
mov
call
xchg
daa
fistpl
mov
das
and
rolb
lahf
or
or
mov
mov
ja
sbb
lock
hlt
cld
cmp
adc
push
xchg
jge
cltd
mov
rorl
cli
ret
mov
dec
call
mov
das
jns
mov
lret
add
cmp
nop
inc
sti
faddl
ja
lods
in
hlt
xchg
adc
push
negl
jbe
sti
jns
insl
sub
jmp
out
stos
mov
inc
cmp
adc
mov
pop
scas
mov
ret
insl
adc
ljmp
pop
xor
xchg
mov
cltd
pusha
inc
dec
sub
mov
push
push
int
in
outsb
push
iret
int3
dec
push
insb
xor
and
mov
add
dec
xor
pop
aam
sbb
and
int3
fstl
fildl
sti
in
pop
nop
inc
adc
cmp
je
rcr
mov
dec
std
and
push
or
dec
inc
mov
roll
sub
xchg
std
mov
inc
mov
cmpsb
pop
sbb
mov
pop
cmp
leave
bound
std
notb
xchg
scas
sub
aaa
int3
in
cmp
dec
int
add
movsl
add
nop
jne
dec
sbb
mov
pop
push
jl
out
or
into
stc
addr16
and
icebp
loop
testb
dec
fs
clc
cmp
cld
les
inc
mov
daa
loopne
xlat
iret
push
dec
mov
adc
pusha
sbbl
je
dec
push
jne
jb
and
fistl
push
mov
mov
dec
jge
xchg
jp
out
adc
inc
xor
les
aad
pop
std
xchg
test
mov
leave
lret
sarl
testl
bound
sbb
popa
bnd
sbb
mov
adc
mov
int
out
nop
test
test
sub
mov
pop
xchg
add
movsb
push
mov
and
aad
mov
xchg
sbb
sti
aas
xchg
je
pop
xchg
mov
test
dec
or
mov
mov
cwtl
jns
sub
js
jmp
aaa
out
movsb
leave
or
push
in
in
das
lea
mov
lods
lods
pop
xchg
dec
mov
pop
sbb
xor
imulb
pop
das
lcall
mov
mov
dec
mov
daa
mov
dec
xor
sbbl
subb
cmp
sahf
mov
jno
add
mov
xor
and
adc
out
repnz
mov
pop
add
mov
into
sub
aaa
loope
fsubl
mov
jno
mov
pop
push
push
ja
jl,pt
in
jne
mov
mov
insl
lcall
mov
out
dec
or
lahf
pop
scas
pop
aaa
loop
in
ja
icebp
test
call
push
test
pop
dec
insl
and
clc
mov
scas
insl
mov
leave
push
mov
xorl
mov
into
ficompl
test
sti
pop
std
dec
mov
adc
stos
inc
idivl
jmp
xchg
jge
jbe
rcl
inc
hlt
sbb
xchg
add
hlt
jecxz
xor
jo
pop
dec
mov
add
xor
mov
jl
adc
shlb
outsl
or
and
cmp
fidivrl
arpl
sahf
or
jle
lcall
pop
add
popf
or
andb
loopne
inc
ljmp
pushf
test
adc
push
xchg
xor
insl
push
cli
jmp
outsw
mov
fs
xchg
mov
sahf
pop
outsb
stc
ficompl
shll
int3
repnz
sub
mov
nopl
or
arpl
jnp
out
cltd
jo
push
mov
xchg
lods
dec
lcall
jne
mov
insb
leave
aas
push
daa
shlb
cmc
loop
push
or
stc
mov
lock
repnz
fidivrl
imul
jo
adc
icebp
and
xor
add
int3
mov
mov
xor
push
inc
ds
icebp
xor
push
ret
andb
loop
and
xorb
ret
rcrl
loop
pushf
add
fwait
push
mov
mov
jno
idivb
inc
mov
shl
ss
scas
or
outsl
mov
orl
sub
repnz
adc
inc
cmp
or
xchg
jge
pushf
mov
pop
sarb
dec
aam
das
rorl
pop
sahf
jp
insb
loop
add
mov
ret
mov
ljmp
out
xor
out
mov
xchg
out
cmp
sub
push
mov
mov
cmp
data16
jne
or
cmp
mov
shll
adc
mov
cmpsb
pop
cmp
xor
in
or
js
in
imul
cs
mov
call
outsl
les
inc
mov
data16
into
movsl
mov
lds
jecxz
sbb
in
lock
jbe
mov
inc
pop
add
enter
dec
call
push
fcoms
mov
pop
jmp
adc
mov
fcmovnbe
pop
test
mov
fnsave
inc
mov
iret
xchg
lret
push
pop
ss
jl
test
arpl
mov
mov
stc
mov
adc
cmp
push
jge
jle
movsl
aad
loop
pop
sub
insl
aaa
xor
mov
aas
or
or
int3
xor
or
pop
adc
xchg
mov
xchg
lret
fistpl
stc
test
pop
push
inc
fnstsw
add
iret
cmp
add
push
inc
ret
sbb
xor
jno
lods
jmp
adc
cltd
sar
cmp
test
insl
adc
push
inc
push
jbe,pt
lds
cmp
dec
xlat
aam
xor
cmp
cmp
ret
loopnew
mov
sub
jl
imul
sub
out
xchg
jns
or
or
xor
scas
jmp
or
mov
xchg
push
jg
repnz
jp
mov
add
jae
mov
xor
or
add
jmp
insl
addb
lods
sarl
stc
out
mov
mov
insb
mov
cmpsl
cmp
sbb
fldt
jle
pop
sahf
mov
les
lock
or
pop
enter
mov
push
test
js
mov
fwait
movsl
nop
jno
mov
lea
mov
gs
jmp
push
mov
int3
add
test
lods
push
repnz
push
adc
cmp
and
sbb
fs
fidivrl
pop
fs
ja
cmc
mov
pop
mov
push
mov
push
and
xor
mov
push
mov
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
dec
in
shll
es
push
ror
xchg
jge
aam
out
pop
sub
push
xor
cmp
std
pop
and
jecxz
imul
and
sti
enter
aaa
sbb
icebp
mov
scas
imul
push
jmp
pop
enter
iret
sahf
cmpb
cmp
sbb
cltd
lahf
jne
and
push
pop
ja
pop
mov
imul
add
pop
push
in
xchg
mov
xchg
dec
fisubrs
int
push
pop
and
mov
lahf
rcl
enter
pop
lcall
jp
testb
push
mov
ss
das
or
lods
push
pop
pop
insw
iret
inc
cmc
rol
xchg
sahf
lret
cmp
dec
popl
ror
daa
mov
ficompl
xchg
pop
xchg
mov
fcomps
aad
lea
push
sbb
es
sbb
ret
das
cmp
cmp
sub
popf
mov
mov
sar
dec
add
stos
aad
jl
cmpl
loopne
and
xchg
mov
inc
xchg
fiadds
imul
inc
inc
jb
xor
jb
mov
cmpsl
mov
nop
add
xor
je
xchg
loopne
dec
jle
cmp
xor
and
mov
xor
sub
ds
push
or
jecxz
sbb
repz
in
test
mov
popa
imul
cmp
int3
sub
mov
sub
dec
push
cld
pop
jle
pusha
lahf
js
mov
mov
fisubl
pop
add
inc
nop
repz
test
cmpsb
pmovmskb
xchg
fwait
loop
int3
dec
cmp
jb
mov
mov
jmp
repnz
ret
inc
xor
mov
dec
mov
jo
das
sub
pop
inc
movb
cmc
xchg
pushf
lds
push
int
or
imul
sbb
sub
mov
idivl
outsl
mov
ss
and
fwait
imul
cmp
xchg
xchg
sub
dec
fadds
out
adcb
mov
lret
cmc
in
add
inc
mov
pop
pop
in
xchg
inc
fdivrs
jns
jp
lret
jge
mov
addr16
mov
or
xchg
idiv
das
adc
cmc
hlt
xchg
dec
sbb
int
stos
es
sbb
call
cmp
cmp
inc
outsl
imul
jno
push
cmp
daa
sti
mov
into
lcall
imul
or
xor
ret
add
adc
movsl
out
ja
out
sahf
mov
ljmp
lods
cmp
sub
call
mov
cmp
xchg
loopne
in
jmp
lcall
mov
loopne
inc
sahf
sbb
cmp
int
push
push
cmpsl
fdivl
subl
jnp
dec
inc
mov
pop
sbb
fcomp
gs
pop
test
mov
jae
call
jo
popa
pop
jns
jecxz
scas
or
aam
push
mov
adc
lea
pop
sti
push
mov
jg
pop
lcall
xor
inc
push
lods
scas
sbb
pop
jl
mov
lock
ljmp
adc
push
cs
leave
sbb
jne
dec
scas
insb
mov
sbb
lods
fsubp
cmp
add
popa
mov
sbb
and
nop
iret
and
sti
jmp
add
insb
jae
pop
sbb
aaa
out
js
xchg
sbb
mov
sub
cmpsl
stos
jmp
pop
mov
je
lret
pop
addl
jo
push
lock
cmc
pop
cli
pop
bound
stc
cmpl
pop
out
dec
pusha
sbb
out
outsb
xor
xchg
leave
mov
int3
mov
mov
rclb
push
push
roll
js
out
pop
imul
mov
pushf
addr16
scas
inc
inc
inc
fdivs
pop
es
mov
cmpsb
mov
add
pop
roll
adc
mov
sub
fisubrl
aas
push
in
popf
sub
inc
xchg
popa
mov
xor
mov
rorb
push
clc
or
jae
inc
popa
sbb
jo
mov
out
pop
cld
ret
mov
inc
inc
in
and
inc
leave
mov
add
adc
push
push
dec
sbb
fnsave
adc
push
mov
add
xor
sbbb
cmp
inc
imul
sbb
adc
add
ret
repz
pop
lods
dec
dec
dec
mov
xor
cmpsl
push
fimull
jg
nop
push
lds
scas
out
sahf
xchg
sbb
cli
or
add
push
pop
rol
dec
jmp
mov
movsl
sbb
ss
xor
push
pop
push
data16
loopne
leave
nop
pop
imul
cmp
cmpsl
sahf
adc
fs
daa
in
sbb
adc
out
jge
inc
lahf
sub
cld
test
sbb
fnstsw
jnp
and
push
into
addr16
out
mov
or
ret
mov
and
aaa
sub
adc
lods
xchg
popa
ds
sbb
aas
leave
ja
outsb
dec
mov
jns
inc
test
pop
add
imul
int
or
cli
adc
in
rcr
adc
inc
movsb
das
std
out
sub
ret
pop
mov
sbb
out
or
mov
repz
shld
aad
or
fistpl
sub
dec
dec
cmpsl
ljmp
mov
addb
movsb
daa
inc
mov
ret
pop
roll
int3
mov
add
pop
dec
adcl
outsl
or
jae
dec
dec
jecxz
das
stos
in
out
mov
mov
or
sub
or
xlat
int3
add
aas
or
sti
mov
push
cs
xchg
lcall
fcoms
push
push
pop
sbb
lock
es
daa
out
push
jbe
setne
cmc
mov
and
mov
loope
push
pop
sub
adc
mov
xchg
xor
mov
push
bound
push
push
push
xchg
ret
mov
shll
sbb
fwait
mov
push
loop
je
xchg
mov
int
das
adc
repz
sub
aas
jns
sub
pusha
push
andl
mov
leave
dec
pop
inc
xchg
mov
cwtl
mov
cmp
mov
mov
ret
lods
pop
xor
int3
in
aaa
fs
push
in
xlat
enter
iret
push
jbe
xchg
nop
or
movsl
js
sub
mov
sbb
sbb
in
jmp
sbb
in
sarl
cmp
sti
in
mov
cli
push
cmp
xchg
jl
pop
mov
inc
mov
mov
mov
imul
xor
pop
dec
fcompl
jno
aaa
mov
in
roll
sub
cmp
adc
sub
jo
jb
jno
ret
jg
mov
rol
push
das
xor
out
fs
jge
pusha
pop
jmp
xorl
scas
mov
ljmp
ror
rcl
add
xchg
mov
add
mov
lahf
andb
sub
cmp
jle
pop
imul
lret
push
push
xchg
das
stc
outsl
push
mov
sbb
cli
add
cs
and
leave
and
dec
ficoml
jecxz
pop
sub
scas
jl
xchg
mov
stc
push
faddp
into
cmp
sbb
mov
cli
mov
in
and
stos
test
cs
lcall
push
mov
jmp
lock
idiv
into
pop
adc
les
jge
or
test
sbb
xor
sbb
lret
mov
and
xlat
out
imul
test
into
ja
cmp
xlat
sub
popa
xor
xchg
mov
jge
mov
out
xchg
pop
es
mov
test
outsb
repnz
mov
fildl
cs
scas
jp
or
sub
xchg
data16
lcall
sub
fisubrs
outsl
and
add
addl
aad
ret
popf
rcrl
push
mov
dec
push
ror
sub
pop
xchg
or
cltd
je
adc
mov
pop
push
mov
xchg
mov
ret
out
inc
cld
scas
je
cli
lods
xlat
mov
sbb
addr16
sbb
int
ret
or
stos
mov
xor
sbb
sub
bound
movsl
loopne
sarb
add
mov
mov
mov
mov
sti
shll
outsb
lds
jno
jb
out
fst
push
xchg
fwait
cmp
push
ret
cmpsl
movsb
sarb
das
sub
stos
rolb
sub
sub
jo
jo
leave
xor
sti
xor
mov
and
into
add
es
jl
xor
in
mov
xor
sub
push
sbb
jmp
xchg
movsb
push
stc
xchg
ret
sub
adc
pop
fistps
ret
lret
sbb
jmp
scas
sbb
add
out
cmpsl
pusha
idivl
cmp
aam
mov
lahf
jg
inc
mov
add
push
jl
cmp
test
cmpsb
push
in
cmp
xor
or
out
aas
dec
scas
out
jp
fimuls
and
push
dec
dec
mov
loopne
mov
add
mov
addr16
push
cld
mov
pop
orl
shll
sub
les
lods
push
in
lret
bnd
jae
mov
pop
inc
mov
jns
std
xchg
imul
xlat
sub
mov
jb
test
mov
pop
jnp
enter
xor
mov
sbb
xchg
dec
ror
sub
push
inc
imul
les
xor
loopne
cmpsl
sub
gs
mov
cmp
nop/reserved
xlat
inc
mov
xchg
std
mov
loop
inc
data16
cmp
loope
shrb
and
stc
mov
movsb
ss
xor
jmp
push
pop
fcompl
mov
fnstsw
push
pop
repnz
repz
mov
flds
and
in
push
jo
dec
push
stc
mov
cmp
hlt
inc
cmc
or
mov
jg
push
pop
push
popa
ret
sbb
test
fildl
enter
in
xchg
lret
jnp
int3
clc
fnsave
mov
daa
cmp
divl
or
ljmp
out
fisubrl
scas
fstl
jnp
inc
fwait
mov
popa
cmp
hlt
lods
push
cmp
mulb
aaa
fstp
fcoml
into
rcll
xor
hlt
repnz
adc
push
outsb
stos
sub
jge
or
fstps
mov
mov
in
pop
lret
les
sbb
ds
nop
call
incb
sub
jg
mov
cmc
jl
lret
repz
je
mov
add
mov
insb
mov
scas
mov
fwait
and
aas
out
loop
mov
jae
jb
push
jne
adc
mov
incl
adc
cs
fcmovne
cltd
mov
mov
jno
js
mov
pop
mov
sub
mov
nop
mov
insl
iret
inc
ret
cs
ret
push
push
fucomi
xor
loopne
call
pop
into
pop
pop
loopne
fimull
subb
nop
dec
je
mov
pop
pop
sbb
shl
in
mov
gs
stos
imul
imul
hlt
or
inc
sbb
sub
fwait
addr16
dec
mov
fsub
rolb
mov
outsl
pop
scas
ret
out
cmp
mov
jno
add
and
cmp
adc
xchg
into
jb
mov
rcl
xor
mov
jge
sbb
ror
mov
iret
mov
clc
je
cld
and
xchg
cmp
gs
add
fwait
out
mov
pop
xchg
fdivs
dec
adc
add
mov
and
or
ss
gs
dec
mov
mov
pop
leave
stos
jb
ret
inc
add
lods
addr16
rol
push
call
or
mov
mov
xorb
xlat
xchg
push
push
sub
js
and
insl
mov
loopne
fcmovu
add
adc
je
and
leave
cmp
data16
shl
dec
mov
adc
ds
test
sub
pop
push
pushf
add
xchg
jl
xlat
jp
jo
out
pusha
xor
mov
or
dec
stos
pop
imul
inc
mov
in
push
push
add
push
adc
push
jp
push
int3
add
or
and
push
je
mov
push
mov
data16
push
push
or
in
test
call
incb
mov
mov
adc
mov
or
aad
xor
fcompl
je
and
test
mov
aam
sbb
xchg
ds
sti
inc
mov
sub
xor
pop
cmp
aaa
or
pushf
sahf
mov
jmp
mov
popf
and
jecxz
xchg
int3
push
in
leave
xchg
sbb
mov
fs
inc
movb
iret
mov
sbb
loop
fxch
pop
xor
test
push
int
aaa
insb
aas
repz
insl
dec
adc
sahf
inc
cmc
xchg
or
cmp
cltd
sahf
pusha
push
cmp
rcl
adc
mov
testb
addr16
cmp
imul
mov
hlt
jb
pop
out
cmp
mov
inc
cmp
int3
insb
xor
mov
jecxz
adc
push
sub
sbb
punpckldq
push
mov
mov
nop
fcmove
xchg
lods
fildll
sbb
cmp
imul
jg
faddl
js
sbb
pop
push
mov
mov
inc
cmp
dec
fadd
fwait
jae
mov
push
dec
or
stos
dec
pop
imul
xchg
xchg
lea
or
femms
iret
jb
cmpsb
lcall
adc
out
and
pop
cmpsb
sti
xchg
xchg
out
lret
daa
cmc
das
ds
scas
xchg
in
fwait
push
sti
mov
mov
mov
xor
mov
dec
out
pop
das
lret
addb
inc
add
push
jmp
imul
in
in
mov
cmp
mov
jno
mov
xor
xchg
push
add
mov
lods
add
stc
div
mov
inc
lcall
sbb
das
sub
pop
sbb
or
lds
ret
imul
sbbl
pop
jp
and
cli
add
jb
jns
out
andb
mov
jb
inc
data16
call
push
cld
xor
sub
push
stos
or
inc
leave
stos
add
lods
ja
insl
add
and
push
in
dec
cli
outsl
imul
fcoml
xchg
dec
mov
and
ss
jnp
mov
clc
lock
stc
daa
popw
pop
mov
sbb
daa
xor
or
fistpl
xor
data16
lock
jg
jbe
xor
pop
jb
sarb
adc
adc
gs
lods
psubd
mov
mov
inc
repnz
sub
jno
cs
fidivs
gs
movsl
push
push
pop
jge
loop
push
loope
pop
mov
cmp
add
lds
aam
dec
sbbb
scas
ljmp
mov
push
nop
nop
push
xchg
mov
mov
insl
lock
aad
xor
add
mov
adc
pop
push
hlt
out
subb
push
sbb
push
or
loope
outsl
aam
xor
ret
and
cwtl
mov
jmp
ret
fisubrl
xchg
cmpsl
mov
fwait
or
and
aaa
cmpsb
pop
call
mov
movsl
mov
fiadds
sub
or
jno
loop
nop
movsb
mov
and
xor
ss
jle
push
add
mov
and
pop
or
imul
mov
xor
mov
mov
jnp
push
xchg
dec
dec
lods
mov
addr16
in
adc
repnz
pop
insl
ret
mov
movsl
stos
push
jmp
jno
jae
jl
mov
sbb
loopne
cmp
jbe
jmp
fsubr
cmp
jecxz
das
addl
lahf
gs
cmpsl
fwait
mov
inc
adc
sbb
mov
xchg
jae
arpl
insb
insl
mov
pushl
sarb
pop
lcall
daa
daa
xor
jp
icebp
add
jmp
stos
or
xchg
mov
sub
movsb
inc
sti
rcll
mov
cmp
inc
sub
or
inc
insl
fwait
inc
jbe
addb
cmp
add
sbb
out
inc
mov
outsb
mov
xchg
and
cmp
ds
jns
dec
add
xchg
stc
js
mov
lods
sub
adc
inc
cmpsb
popa
imulb
ja
fstl
mov
and
cmpsl
lods
stos
popa
sbb
iret
lock
ljmp
outsb
rcl
aaa
loope
add
or
dec
mov
jns
or
or
filds
jo
cli
add
sub
sub
loope
in
xlat
les
int3
fwait
out
cmp
push
lea
add
popl
test
cltd
mov
fs
ja
sbb
bound
stos
imulb
push
ret
subb
jmp
xorl
dec
frstor
stc
xchg
mov
cmp
iret
lcall
add
repnz
jp
cmp
in
cmp
aas
mov
cmpsb
fwait
push
dec
les
sub
sbb
sub
mov
mov
das
push
pushf
aad
mov
pop
movsl
subb
imul
cmp
cmp
jo
mov
mov
xor
data16
cmc
int3
jnp
scas
adc
jl
bound
loopne
inc
movsb
cmp
sbb
js
mov
dec
add
outsl
sahf
push
xor
gs
fistpl
in
insl
orl
aaa
add
cmp
gs
loop
inc
mov
cmpxchg8b
scas
cmpl
pop
aas
cmp
and
xchg
mov
outsl
xchg
or
pop
xchg
pop
int
and
test
cs
test
loop
inc
pop
enter
shlb
cwtl
jnp
test
dec
mov
xchg
push
xor
mov
stc
repz
pop
cld
pop
jbe
outsl
out
push
lods
jmp
mov
jmp
daa
and
repnz
fstps
sbb
inc
jg
add
fcomps
outsb
repz
push
arpl
insl
insb
sub
pop
insb
jns
dec
dec
fsubr
fcomps
or
lods
loop
mov
fs
testl
xor
std
ja
push
xchg
push
inc
movsb
fisubl
lods
in
in
jl
pop
adc
jl
hlt
inc
aad
or
sarl
aad
rcl
in
shrb
mov
jno
adc
int
in
sbb
jno
mov
push
mov
test
push
pop
lods
je
das
ja
test
add
js
das
bound
pop
add
mov
mov
push
roll
xchg
add
das
jge
inc
push
adc
mov
or
xchg
add
dec
mov
or
sbb
popf
mov
pusha
pop
es
loop
imul
sti
mov
xchg
loopne
lcall
nop
mov
jo
pop
pop
fcomps
call
mov
mov
dec
cmpsb
mov
xor
mov
xchg
test
mov
inc
push
jo
call
mov
adc
or
rcr
lret
mov
les
js
das
cmp
cltd
mov
rorl
cmp
and
arpl
out
das
pop
je
outsb
lods
pop
out
xor
lea
out
in
ret
pop
lret
mov
lods
rcrb
sub
dec
cmp
scas
inc
rorb
dec
lds
pop
or
into
jb
and
pop
mov
daa
jo
pop
leave
xor
sarb
xor
int3
and
fs
push
lret
shlb
das
jne
fdivr
sbb
lods
xor
loope
inc
mov
sbb
jae
push
jnp
add
mov
adc
mov
add
push
repnz
xlat
orb
cmpsl
pop
or
push
jmp
mov
cs
mov
xchg
hlt
pop
mov
mov
inc
jmp
scas
push
push
dec
sub
xchg
pop
gs
lret
xchg
mov
out
xchg
xchg
inc
adcl
pop
mov
dec
sbb
mov
mov
in
xchg
popl
xor
jp
fnsave
jbe
pusha
cmp
jns,pn
sub
in
cmp
out
test
bound
sbb
fwait
test
xchg
shrb
dec
mov
cmc
mov
and
dec
mov
decl
mov
jb
push
mov
dec
cmp
jns
into
xor
mov
jns
push
mull
loope
add
mov
cmp
jp
sbb
cmc
movsb
sub
das
jg
rcrl
bound
addb
xor
nop
push
stos
push
in
test
xor
int
repnz
in
imul
dec
jno
jg
outsl
mov
sub
fcomip
push
es
pushf
or
out
ljmp
das
or
jg
test
loope
mov
xchg
mov
jmp
pop
cli
sbb
inc
sbb
loop
mov
mov
insl
adc
sub
lret
add
dec
test
add
push
aaa
addr16
fsub
mov
hlt
xchg
xorb
lea
push
fisubs
enter
clc
inc
aam
mov
loope
daa
push
or
or
xor
into
xor
loope
sbb
and
daa
mov
sahf
mov
cld
inc
mov
cwtl
lea
push
mov
fnstcw
mov
sub
adc
cmp
xor
dec
gs
scas
outsb
clc
pop
daa
in
xchg
das
push
jecxz
sahf
xor
inc
xchg
or
sbb
mov
add
jg
lcall
dec
in
imul
leave
sub
filds
adc
popa
pop
das
xchg
mov
cwtl
ds
mov
into
dec
xchg
fst
fldt
fmuls
pop
repz
out
mov
shr
pop
ja
mov
shl
mov
int3
inc
daa
fstl
jae
fs
add
mov
sub
scas
mov
into
mov
mov
or
jns
dec
in
inc
mov
mull
js
xor
jecxz
adc
jae
fldt
inc
div
xchg
and
in
dec
cmp
mov
lods
mov
imul
aam
pop
test
jo
dec
std
sbb
jb
mov
pop
hlt
xchg
or
sub
in
enter
mov
insl
lret
roll
in
mov
pop
mov
and
scas
push
in
stos
fldcw
out
jp
dec
cld
shrb
pop
dec
mov
mov
push
inc
dec
fsubl
pop
fimull
mov
jge
sahf
pushl
mov
insl
stos
mov
xor
fistps
gs
adc
shlb
push
ds
test
icebp
adc
xor
popa
sub
aad
ja
sti
pusha
xchg
fldl
sahf
or
shll
push
lds
daa
and
mov
mov
pop
cs
shrl
mov
sbb
lea
pop
cmc
jbe
cmp
fs
jno
imul
sub
dec
cvtps2pi
repz
pop
sbb
les
adc
jae
in
xor
xchg
cli
mov
rolb
push
or
or
push
loop
or
push
jle
gs
or
es
dec
repz
inc
imul
jle
or
mov
or
sub
push
daa
sbb
cld
adc
add
das
push
lcall
mov
pop
repz
cwtl
pop
inc
js
push
scas
pop
dec
repnz
stos
pop
sbb
and
stos
mov
jnp
and
mov
xchg
inc
scas
dec
and
stos
jl
xor
cmp
inc
dec
push
pop
dec
enter
or
ljmp
sbb
rcrb
mov
push
jmp
pop
in
inc
pop
adc
dec
pop
xchg
aas
icebp
dec
jmp
vmread
test
rcrb
sbb
xor
sbb
inc
cmp
jmp
insb
xchg
jae
test
sbb
scas
rorb
cmpsl
inc
ds
or
jne
fnstsw
test
arpl
retw
cwtl
or
push
lods
iret
adc
or
mov
roll
mov
repz
les
mov
mov
lea
adc
aaa
inc
lock
sbb
push
clc
add
aaa
movsl
out
inc
mov
iret
jae
xchg
aad
movsl
rorb
arpl
into
stc
lret
mov
lods
mov
in
xchg
popa
jo
inc
lcall
jnp
and
sbb
js
xor
mov
adc
jge
in
inc
or
jns
lea
and
ret
loopne
add
sub
pop
mov
rolb
push
fimull
dec
aad
push
sbb
fsubp
outsl
jae
nop
pushf
fwait
and
test
pop
and
mov
mov
es
cmp
adc
jecxz
arpl
and
fildl
fbstp
dec
cmpsb
test
xchg
stos
adc
adc
pop
lret
ret
mov
or
push
inc
mov
sbb
sub
mov
fcoml
xchg
jmp
cmp
push
pop
shl
adc
hlt
add
cmpsl
out
inc
mov
adc
dec
push
cmpl
int
dec
mov
jp
push
mov
cmp
out
pop
jmp
xchg
lahf
add
jne
nop
mov
xor
xor
jp
je
xchg
popf
inc
subl
push
inc
xor
cmpsl
ds
dec
dec
inc
scas
mov
int3
loopne
dec
leave
mov
pop
mov
outsl
cs
bound
xchg
cli
dec
imul
scas
and
push
sub
push
add
dec
push
sti
jmp
aas
icebp
ret
pop
shr
mov
lret
scas
xchg
pop
cmp
xchg
dec
sub
cmc
mov
pusha
cmpsl
jmp
hlt
and
loope
int
mov
icebp
push
out
mov
adc
sub
add
cmpsb
xor
ret
vmread
cli
iret
repnz
dec
jg
adc
jl
xchg
inc
addl
aas
arpl
popf
and
inc
mov
sbb
mov
adc
jp
dec
lock
inc
sub
lahf
adc
and
jb
push
xor
xchg
xor
imul
insl
fwait
orb
in
repz
fcmovb
inc
cli
outsl
inc
mov
fcoms
or
mov
mull
xchg
and
popa
fildl
imulb
pop
inc
xor
mov
scas
mov
and
pusha
nop
xchg
rcrl
xor
cmp
cmpsl
mov
test
jmp
xor
jb
shll
xor
cld
jle
push
adcl
mov
cmc
sbb
jb
cmpsl
lret
jp
fcompl
pushf
movsb
ret
ss
jbe
out
and
cs
xchg
mov
ret
fists
or
movsb
cwtl
loope
xor
xor
stc
rcr
mov
fldl
xchg
orb
inc
lock
cli
and
xorb
adc
pop
fs
or
mov
sbb
js
mov
jmp
call
test
push
fimull
or
ss
and
mov
lea
pop
jmp
scas
sahf
or
and
es
test
adcb
fistpl
fmull
adc
pop
call
enter
lea
lretw
aad
or
dec
test
push
rorb
push
pop
xor
fstp
push
and
xor
inc
cmpsl
pop
add
sbb
xchg
das
pop
cmp
dec
inc
cmp
out
or
pop
pop
adc
mov
psubw
enter
push
xchg
jecxz
leave
jae
xchg
lahf
fld
cmp
ja
mov
std
int
stc
shll
or
push
popf
ss
pop
negb
sub
xlat
cmovb
mov
lea
push
fistpll
fildl
icebp
out
mov
mov
aam
mov
stos
into
into
fwait
shr
imul
xchg
push
cli
lahf
cmp
cmpl
pusha
movsl
scas
mov
cmp
movsl
pop
fdivl
xor
mov
pusha
insb
mov
icebp
xchg
lock
out
out
das
sub
or
out
gs
and
jl
add
in
inc
mov
inc
sahf
mov
xor
int3
out
inc
or
sbb
mov
outsb
sub
mov
data16
or
push
jb
scas
rol
imul
mov
or
ret
imul
jns
repz
xor
lods
sahf
pop
adcb
mov
scas
imul
and
and
pop
fs
outsb
or
ljmp
jnp
push
lea
stos
sarb
sbb
js
dec
repnz
jp
mov
push
sbb
and
push
cmc
pop
jae
jecxz
jb
fwait
out
jge
lods
add
cli
sahf
cmp
imul
dec
dec
aam
bnd
push
jb
dec
outsb
cmp
loope
inc
mov
cmp
lods
sbb
iret
daa
pop
fsubr
or
push
daa
sub
insl
pop
sbb
jne
jmp
push
add
incl
mov
mov
mov
add
js
pop
loopne
repz
cs
inc
roll
call
ret
daa
cli
call
cmpsl
adc
xchg
cmp
cwtl
icebp
cmpl
cmp
or
push
mov
push
mov
sysret
mov
inc
mov
mov
cmp
adc
adc
dec
mov
aaa
cmpsb
add
push
cs
xlat
xor
in
dec
cmp
jecxz
jg
sub
mov
cmp
loope
jae
sbb
inc
inc
daa
sub
mov
les
push
inc
mov
cmpsb
repnz
mov
rcrl
int
je
js
pop
mov
repz
jecxz
hlt
shlb
fisubrl
sub
cmpsb
push
lahf
mov
rcll
push
sbb
adc
fdivp
jno
xchg
sub
ret
xchg
pop
xchg
inc
addr16
je
push
bnd
dec
mov
ficompl
int
outsb
hlt
and
es
movntq
xchg
pop
xor
sub
and
mov
in
dec
or
push
dec
and
xor
inc
and
dec
into
pushf
xchg
xchg
pop
lock
fiadds
dec
push
adc
movsl
add
std
es
in
fiadds
xor
inc
pop
je
lahf
ret
mov
jbe
ficomps
jbe
decb
mov
pushfw
outsb
xlat
in
lcall
mov
jno
cmp
jns
je
jae
scas
cld
jmp
and
dec
jg
mov
xchg
jno
push
enter
xchg
into
push
outsl
mov
mov
sbb
ljmp
lods
xlat
aam
in
pop
mov
sbb
in
adc
and
mov
pop
js
es
dec
jnp
fwait
es
movsl
push
imul
xchg
cmp
ret
jns
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
mov
icebp
cmpsl
sbb
or
bound
fdivs
xor
fs
sahf
jb
scas
mov
outsl
and
jg
scas
xchg
rolb
std
inc
pop
inc
mov
adc
jg
sbb
fldenv
in
test
das
dec
cmp
fistpll
loopne
jge
push
xchg
pop
cmp
test
sub
incl
push
cmp
scas
and
dec
int
inc
loope
jns
test
daa
xorb
pop
incl
xchg
mov
mov
lcall
hlt
lods
xchg
push
jae
and
sbb
sbb
dec
addr16
lea
cmp
negl
das
int3
jnp
insb
push
jmp
lods
sub
pop
icebp
outsb
movsl
insb
sub
adc
test
cmc
mov
jge
pop
sbb
mov
xchg
ljmp
jne
push
aaa
push
inc
pop
pop
fsubr
rol
fadds
xchg
mov
movsb
or
packssdw
cld
test
scas
inc
sbb
stc
cwtl
dec
or
stos
push
sub
mov
fsubl
push
push
add
mov
aam
testb
inc
dec
adc
and
fsts
decb
in
mov
adc
push
push
xchg
lds
into
dec
fidivl
clc
insb
inc
loope
pop
je
dec
testl
mov
mov
aas
sub
pop
loope
adc
iret
jb
pop
cld
stc
sbb
push
push
std
das
mov
xchg
fstps
push
shrl
adc
dec
dec
fidivrl
jg
mov
rcrb
jae
add
add
adc
xchg
cmp
cltd
xchg
rorb
and
push
cmp
xchg
add
into
js
pop
pop
jp
daa
ret
sbbb
fsubrl
push
mov
hlt
into
mov
sahf
add
in
sbb
xorb
mov
pop
push
or
jno
popa
movsl
push
mov
out
arpl
xchg
sub
push
sahf
add
add
insb
inc
xchg
inc
gs
mov
shrb
outsl
out
mov
xchg
pop
and
jecxz
fcmovnbe
aaa
sbb
add
pop
fldenv
jmp
or
or
shr
je
call
fsts
repz
cltd
iret
mov
jae
inc
lret
sahf
sahf
imul
addb
mov
mov
test
out
aaa
clc
xchg
pushl
test
sbb
lcall
jae
idivb
fsubrl
mov
dec
and
push
sub
add
jp
arpl
mov
outsb
test
push
ret
xor
out
sbbl
fisttpll
aad
stc
cmc
mov
shlb
or
or
xor
sub
mov
pushl
sbb
and
out
xlat
mov
hlt
arpl
stc
int
xor
std
hlt
cmc
loopne
mov
pop
in
sbb
outsb
pushf
inc
sub
int3
mov
pop
in
add
xor
cli
lods
call
sarl
lahf
pop
jbe
gs
pop
push
gs
mov
pop
les
push
jmp
test
ss
or
lret
sub
push
outsb
into
aam
mov
xor
or
flds
mov
add
lds
fwait
and
icebp
mov
xlat
pop
sti
pop
ss
mov
mov
test
negl
xchg
mov
sub
call
decl
dec
pop
pop
imul
test
jns
cmp
jle
or
test
inc
adc
jne
test
test
cli
jl
pop
push
rcrl
push
mov
lahf
sahf
jge
add
leave
subb
push
loop
fdivrl
loopne
mov
sub
mov
int
mov
out
int
popf
pop
test
les
or
or
ret
push
mov
xchg
mov
mov
xchg
lods
sbb
push
outsl
adc
sub
std
fidivs
dec
sti
mov
lods
lods
mov
jg
mov
jne
pop
sbb
stos
add
or
js
dec
mov
inc
inc
insb
pop
sbb
jae
and
or
loopne
mov
sub
cmpl
fnstenv
push
and
aas
mov
lds
xor
cwtl
cmpsl
or
xor
loopne
jno
or
unpcklps
push
mov
out
mov
in
mov
push
jl
ficomps
add
int
sti
mov
sub
popa
leave
lods
aaa
jae
xor
add
call
out
xchg
mov
ficomps
cvtps2pi
inc
mov
cltd
lea
out
stos
add
jg
lea
jg
xlat
repz
and
sbb
xlat
mov
cmp
xchg
fsubrs
cld
into
scas
inc
ret
sbb
mov
gs
sbb
sbb
sti
stos
pop
push
lcall
push
cmpl
bound
lret
clc
inc
push
adc
outsl
and
cli
test
imul
xchg
sub
les
mov
and
or
sbb
jb
fnstcw
out
dec
cmpl
mov
leave
xchg
xor
xchg
pusha
das
enter
fcompl
pop
lcall
in
jb
sub
push
in
imul
mov
push
mov
push
ss
xchg
pop
cmpsb
mov
daa
push
jbe
mov
xchg
vfrczps
insb
push
int3
sub
cmp
icebp
mov
fdivl
mov
sub
repz
inc
xor
adc
fs
arpl
add
in
cld
jge
mov
cmp
arpl
adc
sbb
clc
lods
or
sub
stos
mov
xchg
das
pop
sub
hlt
iret
add
shll
inc
mov
rorl
mov
adc
and
rcrl
loopne
jae
mov
test
and
add
push
pusha
cmp
pop
dec
inc
dec
jg
orl
dec
jge
sbbl
jno
push
outsb
jecxz
imul
xor
pop
outsl
jo
adcl
aaa
fwait
mov
jge
add
or
inc
xchg
sbb
mov
adcb
test
push
aaa
mov
sub
shlb
jle
xchg
mov
daa
mov
xchg
and
shll
fcoms
cmp
out
pusha
push
movsl
adc
in
je
dec
xchg
push
daa
mov
in
pop
popa
ja
cmp
push
and
sbb
out
aam
mov
jno
ficomps
and
xor
nop
xchg
mulb
mov
adc
or
popf
rcll
pop
test
test
push
pushf
test
pop
into
jnp
lret
mov
mov
bound
jns
fcompl
sub
das
dec
and
hlt
cmp
pop
lcall
ffree
mov
xor
push
sbb
shr
jo
adc
mov
jg
jbe
cmp
popa
cli
int3
cmp
cmp
pop
and
imul
xlat
push
call
jns
xchg
rcrb
lods
sub
mov
dec
adc
std
and
popa
sbb
movsb
nop
and
mov
mov
iret
mov
add
sbb
mov
cmp
inc
mov
push
sub
mov
fdivl
sub
enter
orb
repnz
inc
xchg
add
adc
leave
and
jge
and
xor
cmp
adc
gs
sbb
dec
fwait
outsb
cmp
arpl
jg
pop
push
or
mov
mov
jb
negl
sub
dec
and
fcmovnb
cmp
test
inc
int
and
into
and
xor
sarl
or
dec
lea
adc
cmp
sub
xchg
sbb
fs
sub
pop
loopne
jnp
notb
je
fsub
xchg
leave
fs
add
lcall
dec
or
cmp
je
hlt
test
call
ja
mov
mov
scas
and
add
sub
outsb
jmp
push
mov
cmpsl
aam
in
cmpsl
jo
nop
sbb
call
ficoms
or
pop
and
std
inc
or
pop
movsl
push
adc
lods
inc
imul
lret
push
stc
sbb
cmp
pushf
add
arpl
pop
cmc
sub
jb
xchg
je
push
mov
inc
data16
shr
mov
xchg
test
sub
in
outsl
mov
add
scas
and
lret
inc
test
and
imul
mov
mov
mov
fsts
les
inc
into
addr16
mov
xchg
aaa
cmp
xlat
cmp
inc
xor
mov
fbstp
jno
cmpb
xchg
scas
es
cmp
pop
sub
inc
nop
shrb
lods
dec
push
enter
lcall
repnz
mov
dec
shlb
xor
mov
dec
arpl
push
or
sub
mov
mov
cmp
jnp
sub
mov
outsl
lahf
loopne
xchg
mov
xor
pop
fidivl
xor
icebp
sub
mov
inc
jecxz
ror
imul
cmp
xor
outsb
jmp
push
xchg
push
in
movsb
jmp
dec
cltd
lods
mov
or
test
xchg
imul
popf
scas
pmaddwd
lahf
cmp
sbb
cld
jae
mov
mov
std
or
clc
and
out
pop
jge
mov
pop
mov
pop
mov
out
addr16
shl
push
loope
fisttpl
push
pop
add
inc
push
adc
mov
or
rcl
hlt
push
xchg
addr16
sti
test
iret
test
sub
inc
sbb
sbb
popl
mov
add
rclb
loop
clc
push
lock
inc
mov
xchg
movsl
and
pop
lea
in
aad
pop
sub
or
sbb
jmp
fbstp
shll
pop
movsl
sub
or
dec
pop
or
in
rorb
test
rcl
sbb
lock
paddusw
cld
lods
dec
ljmp
inc
and
movsb
in
les
insl
fcmovb
xchg
and
pop
fwait
xor
xchg
faddl
jge
dec
lcall
push
add
inc
jnp
iret
aas
bound
negb
xchg
sbb
aam
int3
cltd
jb
mov
scas
mov
push
jge
push
std
orl
pushf
mov
mov
sub
pushf
test
cli
xchg
sub
daa
lret
jmp
push
je
nop
or
hlt
imul
shl
jne
push
call
mov
mov
fdivs
scas
mov
fs
jns
lods
addl
sbb
insl
sar
lret
xchg
stc
scas
inc
add
adc
in
iret
sub
aad
insb
mov
fmull
ds
dec
add
imul
in
cmp
pushf
stos
les
mov
mov
xchg
jne
lea
popa
aad
ror
leave
out
and
aas
ljmp
dec
or
jg
xor
and
adc
jne
add
mov
xchg
add
pop
test
out
flds
adcb
xor
scas
xor
jno
mov
or
test
rorl
imul
or
add
popa
sbb
pop
add
push
imul
or
fstps
fistpll
lahf
in
sub
arpl
mov
cmpsb
std
xchg
lock
jnp
and
adc
jo
jbe
imul
xor
pop
xor
iret
sub
stos
pushf
mov
aaa
les
push
repnz
jmp
cld
jb
bt
pop
dec
sti
dec
sub
xchg
dec
xor
pusha
and
outsl
push
add
cmpsl
xchg
fiadds
das
lea
and
mov
dec
hlt
enter
cli
outsb
hlt
cmpsl
lcall
push
mov
mov
rolb
int
jle
gs
or
pusha
xlat
pop
inc
xchg
inc
push
popf
and
je
inc
xor
xor
daa
pop
dec
out
push
pop
xor
jmp
outsb
lods
push
pushf
incl
sub
popa
or
sbb
test
jmp
loop
popf
mov
ffreep
sbb
push
ret
ficomps
inc
cwtl
or
ss
loope
cmc
mov
out
stos
aad
lds
mov
add
mov
inc
out
jb
inc
enter
inc
dec
jae
adc
loopne
std
fcmovnbe
cmp
cmpsl
aas
xchg
xchg
xor
mov
imul
ljmp
psraw
in
mov
nop
mov
rol
shlb
insl
jg
test
movmskps
lret
cmpsb
jmp
fisubs
adc
mov
jp
xchg
clc
out
push
pop
fmuls
push
lods
inc
or
int
sbb
aas
mov
stos
cmp
jge
pop
lret
test
int
sarl
and
inc
sbb
mov
and
jmp
jbe
jl
not
sub
enter
test
bound
jecxz
adc
mov
adc
mov
ficomps
xchg
inc
test
jae
cmpsb
sub
nop
sti
push
push
sub
leave
mov
lret
cld
pop
jle
int3
add
aam
cli
and
mov
fs
stc
mov
and
dec
push
mov
ja
fcoms
pop
lea
fisubrs
inc
pushf
notb
out
cmp
mov
repnz
insl
cltd
and
in
xor
jns
ja
cmpb
andb
pusha
sarb
aas
inc
out
mov
or
in
test
lds
mov
inc
mov
jnp
mov
sub
dec
in
mull
cld
xchg
xor
loopne
mov
addb
jle
das
loop
mov
pop
pop
pop
lcall
jmp
push
push
imul
out
in
dec
lahf
xlat
xor
inc
jg
fwait
loopne
jmp
insl
ljmp
xchg
push
jbe
inc
test
sub
clc
mov
and
pop
rcrb
clc
mov
jo
pop
lcall
fs
icebp
outsl
call
sub
pop
in
imul
stos
dec
decb
mov
outsl
jne
loope
jmp
out
mov
adc
mov
bnd
out
mov
fdivl
lret
imul
inc
je
sti
mov
cmp
push
jns
inc
negb
jb
pop
lret
add
daa
inc
cld
stos
orl
dec
imul
lcall
mov
fwait
or
fldcw
adc
add
addr16
pop
or
out
jae
ret
outsb
and
frstor
fdivrl
in
in
lea
es
or
inc
fnstcw
negb
dec
push
jbe
testl
cmp
stc
out
jl
sub
xor
jg
fldt
and
dec
addr16
or
int3
mov
and
mov
mov
ljmp
push
push
mov
mov
into
push
adc
aaa
mov
sti
jo
jb
sbb
cmp
fsubrs
ret
sub
shlb
subl
in
push
nop
fs
jae
mov
in
adc
out
adc
inc
sbb
lea
mov
dec
cmpsl
cmp
mov
out
cltd
popf
sbb
or
sbbb
rcrl
test
push
or
push
out
xchg
popa
pop
pop
rolb
cmp
ljmp
arpl
jge
mov
and
and
mov
inc
ds
cld
int3
lret
inc
mov
lods
push
mov
orl
std
jmp
mov
cmp
jmp
loopne
test
and
cmp
loope
fs
lds
pop
or
lahf
inc
sub
or
stos
xlat
pop
adc
inc
clc
jge
dec
jno
loope
adc
sub
dec
out
mov
or
mov
push
sub
xor
pop
sub
mov
out
out
bound
mov
cltd
les
nop
ret
orb
negb
jge
xchg
lods
pextrw
inc
xchg
and
push
mov
sarl
stos
mov
xchg
dec
rolb
add
pop
nop
ret
dec
push
insb
sub
outsl
ljmp
cs
push
enter
and
dec
lea
cmpsl
jnp
fistl
sub
push
cmp
xchg
ret
mov
pushf
daa
paddw
outsl
sbb
rcrl
add
cld
xchg
pop
mov
add
lahf
andl
sahf
imul
hlt
xorl
in
jne
mov
jns
scas
push
mov
xchg
enter
jno
in
movsb
and
sahf
jb
cmpsl
es
jl
cwtl
jns
sbb
adc
xor
adc
testl
pop
cmp
adc
jp
jge
pusha
sub
fildl
cltd
cli
les
dec
rcrb
jae
pop
dec
loopne
cmp
add
and
fsubp
shl
sub
mov
cmp
icebp
push
xor
gs
cmc
or
into
add
adc
and
mov
xor
mov
insl
pop
pop
cmp
sar
adc
sub
xor
pop
xlat
or
ret
and
lahf
pop
jb
mov
je
xor
cmp
cmc
xchg
inc
insb
roll
pusha
xor
negl
inc
jno
jnp
mov
insl
push
jo
push
insb
stos
popa
out
push
lea
mov
into
sti
and
push
fldcw
dec
popa
ret
lods
push
and
xchg
xchg
int3
cld
cmpsb
pop
sbb
lret
xor
mov
rcrb
adc
lock
pop
cmp
mov
inc
test
outsb
pop
cmc
and
repz
push
sahf
nop
add
lahf
push
int
cmp
lock
out
lahf
das
aas
xchg
sar
mov
andl
popf
xchg
lea
leave
mov
in
scas
and
inc
pop
imull
xor
cltd
push
dec
cld
fcoms
pop
out
inc
sub
add
arpl
xor
nop
loope
and
xchg
sti
cmc
mov
mov
gs
js
xor
xchg
jl
scas
or
lret
and
mov
js
fiaddl
and
push
loope
sub
arpl
pop
inc
fxch
movups
dec
std
adc
cli
add
jle
push
fsubl
mov
inc
pop
out
test
push
adcb
dec
add
mov
imul
mov
add
push
subl
aaa
pop
mov
rol
imul
test
and
mov
cmpsl
mov
test
inc
adc
hlt
js
repz
mov
jns
adc
pop
in
jl
push
lods
jg
jmp
sub
xchg
ds
shll
lret
in
scas
aas
pop
inc
cli
out
inc
std
jmp
cltd
leave
mov
fbstp
ficompl
pop
cmp
pop
dec
scas
pop
jnp
es
icebp
loop
and
jno
adc
push
addr16
push
call
loop
mov
inc
sahf
jo
shrl
out
shrl
sbb
xchg
xchg
jno
test
inc
mov
shrb
lahf
shrl
jno
test
nop
stos
enter
leave
sub
data16
sub
leave
mov
dec
mov
sub
sbb
jno
jne
cmp
cltd
stos
jmp
mov
or
pop
aaa
xchg
cmp
jmp
pop
lock
rol
and
jmp
es
or
fidivrl
enter
jbe
mov
add
mov
loope
mov
mov
sahf
jecxz
mov
aad
out
fnstenv
cs
cmpsb
cmp
and
es
inc
mov
sahf
xchg
dec
in
enter
stos
out
mov
jl
mov
in
jmp
fimull
das
adc
outsl
push
and
les
jecxz
xor
ret
in
and
jnp
mov
xchg
and
es
cmp
cli
ror
and
cmp
add
mov
aaa
ror
jg
inc
dec
out
dec
test
enter
adc
push
pusha
sbb
pop
mov
aam
int3
in
fidivs
imul
jae
xor
mov
ret
lahf
int3
jno
sbb
std
shrl
popf
push
cmp
insl
xor
shr
mov
pop
insb
lret
jo
push
xchg
cmp
fs
lds
or
dec
lea
aaa
sar
aas
inc
js
ret
xchg
inc
sub
test
pop
mov
push
cs
sbb
push
enter
sub
mov
in
sub
xor
inc
test
lods
jmp
mov
ds
jno
mov
jge
test
xchg
mov
mov
xchg
scas
movsb
loopne
out
jno
mov
lret
outsl
add
cmpb
dec
shll
sub
leave
push
bound
sbb
mov
sbbb
mov
inc
adc
xchg
imull
fidivs
mov
jle
or
mov
push
jg
inc
dec
mov
movsl
sahf
out
popa
fs
and
add
add
push
xor
or
push
lahf
aas
movsb
adc
mov
push
int3
loopne
in
scas
sbb
nop
aas
js
ret
ds
or
xchg
pop
les
outsb
fcompl
dec
out
or
inc
iret
or
rcrl
mov
xor
bound
dec
adcl
and
cmp
cld
pop
pop
movsb
add
in
cmp
sbb
mov
lock
pop
mov
jno
xor
adc
retw
xor
jns
cld
push
in
pop
jns
jmp
rolb
ss
insb
insl
je
pusha
jb
notl
jmp
aam
int3
pop
ror
adc
les
mov
inc
popa
jbe
insb
sahf
mov
pop
addr16
test
mov
and
push
adc
push
scas
ds
xchg
sti
sub
cmp
dec
repz
stos
cltd
setno
fsts
lahf
sub
or
xchg
mov
bound
inc
add
sbb
dec
and
je
cmp
aaa
adc
and
pushf
jb
xchg
adc
inc
sbb
sar
xor
dec
push
popa
inc
lods
inc
push
sub
cmc
inc
outsl
sbb
push
xor
push
imul
andl
xchg
push
jl
and
mulb
sarb
inc
cmp
or
jg
jo
cmpsb
push
jp
xlat
xor
sbb
test
jl
mov
adc
mov
sbb
jno
mov
jmp
scas
adc
push
add
sub
mov
and
mov
das
sub
dec
sbb
xchg
jg
out
adc
ret
test
add
subl
stc
cmpsl
out
push
push
ror
ret
insb
pop
mov
push
sbb
popa
ds
mov
aad
fldenv
cmp
daa
jno
sbb
cmp
sahf
cmp
mov
scas
dec
jge
and
push
mov
pop
dec
movsb
jmp
sbb
cmpsl
sbb
and
and
lahf
inc
pop
add
and
aaa
shl
cmc
xchg
jecxz
jae
jbe
mov
je
jb
pop
and
sbb
je
mov
jne,pt
aaa
xlat
and
mov
adc
push
pop
stos
dec
sub
imul
cmp
add
int3
fsubs
jnp
clc
or
or
cmovne
xchg
das
adc
popa
sbb
cmp
ss
jne
pop
xchg
andb
shll
imul
dec
adc
nop
mov
mov
jle
or
std
lahf
loope
mov
xorb
sbb
popl
cld
out
dec
pop
adcl
xor
aaa
nop
adc
ljmp
jns
pop
sbb
jo
push
std
xchg
in
inc
pop
fwait
add
push
rcrl
adc
orb
std
cmpsl
or
xchg
push
jmp
cmpsb
mov
inc
ds
fst
inc
popa
jo
iret
in
into
hlt
xor
sbb
adc
sti
add
rcl
adc
xor
jnp
inc
nop
fs
lea
lahf
cli
fwait
cmp
adc
movsl
fwait
jno
in
cld
push
mov
sbb
jg
pop
xchg
dec
inc
jae
sbb
lahf
sub
cmc
ss
xchg
inc
or
in
xor
out
call
out
rcrl
orl
xlat
add
inc
inc
pop
aas
jl
mov
cltd
enter
std
sti
jo
jbe
out
dec
dec
das
or
repnz
loopne
aaa
pushf
int
inc
xchg
push
push
pop
aam
mov
fsub
hlt
in
lods
loope
sub
mov
lret
mov
pop
xor
adc
sbb
push
and
mov
dec
sbb
sbb
adc
xchg
icebp
data16
ds
addr16
pop
sub
mov
mov
in
sub
pushf
cmpsl
sbb
fstpl
cmp
jo
scas
or
push
sbb
ljmp
lock
jnp
xchg
pushf
lret
loope
shr
lock
test
xchg
sti
add
push
lret
ss
outsl
jne
in
sbb
int
aaa
dec
scas
loope
fistpl
icebp
movsb
pop
shlb
popf
mov
dec
cmp
push
mov
cli
add
bnd
mov
movsl
jns
push
xor
mov
lods
lret
mov
pop
jno
lock
sar
xchg
pushf
mov
arpl
pop
movsb
jo
sbb
xor
shrl
fimuls
outsl
dec
xor
mov
test
push
ds
inc
stc
mov
push
iret
or
sarl
imul
pop
mov
je
xor
lock
xchg
pushf
xchg
repz
jnp
scas
out
pop
loopne
cmp
lret
jbe
out
lock
dec
dec
fistpll
cmpl
jl
mov
inc
ret
ja
adc
sbb
and
inc
xor
mov
adc
rcl
out
out
fsubs
repnz
add
sub
sti
rorl
bound
mov
dec
nop
pop
dec
test
ss
mov
flds
add
cmp
fwait
pusha
jb
insb
dec
sbb
mov
mov
movsl
neg
inc
push
mov
mov
in
or
scas
jp
xlat
into
add
pop
mov
xor
inc
das
je
pop
test
push
shrb
ja
int
bound
stc
inc
aas
cli
in
dec
fldt
and
xor
out
jo
pop
push
sub
add
aad
imul
and
fsubrs
push
cmc
sbb
loop
xlat
shll
iret
test
adc
outsl
repz
out
ljmp
out
test
adc
and
jp
xor
xor
rorb
loope
cmp
mov
aaa
or
test
xchg
xorb
fcoms
pop
jae
loopne
test
add
je
adc
adc
dec
sbb
xchg
loope
ljmp
xor
jnp
pop
inc
jp
es
pop
dec
pop
mov
out
movsl
xorl
lods
jp
call
sub
mov
cmp
and
or
call
mov
loopne
jecxz
clc
cmc
pop
sub
outsb
xchg
inc
das
das
sub
jb
loop
popf
negl
fmuls
cmpsb
clc
popf
and
adc
enter
cmp
mov
xor
mov
fs
mov
ret
adc
stos
xchg
sub
push
sti
bound
inc
fs
push
jb
mov
xor
mov
lret
push
xchg
stos
sbb
and
cmp
ret
fs
nop
lods
cli
notl
mov
ja
pop
xchg
and
and
leave
lds
imul
pushw
adc
hlt
aaa
mov
sub
sub
pop
cwtl
sbb
add
add
lret
dec
test
cmpsb
cmp
in
push
in
dec
inc
mov
mov
xor
rcrl
xchg
xchg
imul
and
cmp
and
sbb
sbb
lret
and
int3
movsl
inc
lock
nop
jnp
xorb
jae
sbb
sub
mull
push
lret
mov
jge
sbb
scas
pop
dec
addr16
mov
mov
insb
lea
adc
dec
inc
into
das
or
adcb
push
jae
xchg
das
ret
lahf
testl
and
out
fucomp
fwait
testb
jle
call
shl
loope
mov
mov
jg
pushf
das
enter
and
push
xchg
or
sbb
dec
adc
imul
loop
mov
cmp
inc
popf
out
jp
sahf
sbb
sbb
mov
xchg
inc
inc
mov
in
jns
xchg
dec
cmpsb
sub
imulb
jnp
sub
ja
lea
xchg
in
xchg
sbb
jne
and
stc
push
sahf
or
push
add
loope
mov
jmp
icebp
and
jbe
ja
inc
test
push
push
hlt
ret
dec
xchg
jge
nop
sub
dec
mov
fcmovu
push
sub
jae
pop
dec
jmp
stc
repz
lcall
mov
adc
movsb
and
xor
push
add
jne
dec
andl
dec
mov
mov
mov
mov
je
inc
ljmp
lods
lea
movsl
sbb
cmp
xchg
into
mov
cmp
xchg
cmp
lods
add
adc
std
popa
pop
sub
mov
adc
jbe
lret
pop
mov
or
outsl
es
cmp
in
popa
hlt
sub
pop
mov
or
fidivrl
dec
add
outsb
mov
mov
or
jae
loope
fcomps
inc
int
call
and
dec
jns
ret
movsl
loop
push
inc
sub
jo
xor
dec
bnd
adcl
adc
scas
ja
or
jge
or
mov
push
xchg
jecxz
mov
movsb
xchg
orl
ljmp
dec
lods
mov
flds
stos
push
sbb
lods
stos
sub
loopne
add
adc
mov
or
xchg
outsl
int3
loope
mov
mov
or
dec
loope
aam
push
in
xor
jo
xor
xchg
dec
scas
fucomip
lods
or
clc
push
or
jo
push
adc
push
adc
mov
pop
es
movsl
cmp
iret
or
push
push
mov
push
stos
cmp
adc
cld
ret
dec
arpl
fidivl
jns
arpl
fcmovnb
and
arpl
jnp
and
dec
repnz
lock
cs
inc
xor
jmp
orl
ret
jb
or
fistl
imul
daa
ret
mov
cmp
jns
cs
scas
dec
adc
or
insl
sub
xchg
jb
movsb
outsl
cmc
ret
inc
push
ret
scas
mov
test
les
cmpsb
mov
loope
out
lds
cmpsl
xchg
sub
pop
cmp
push
mov
mov
rclb
mov
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
pusha
dec
dec
hlt
bound
pop
bound
fstpt
fidivs
inc
insl
push
cmp
pop
shrl
add
jecxz
mov
scas
pushf
daa
fildll
xlat
loop
int3
repz
or
in
adc
jb
xchg
inc
mov
cmp
out
mov
cli
lock
add
mov
aad
enter
fidivrl
cmp
rcll
xchg
sub
sarl
jge
lock
lret
or
popa
inc
adc
jne
shll
jo
movsl
out
xchg
cli
mov
ret
clc
sbb
stos
push
mov
and
push
outsl
scas
cmp
pop
das
repnz
cmpsb
popl
test
vcvtps2dq
inc
xchg
xchg
call
xchg
or
popa
ljmp
daa
jp
inc
pusha
inc
outsl
outsb
inc
loope
xchg
add
enter
imull
adc
xchg
ret
mov
loop
cmpsl
repz
xor
xchg
lods
mov
repnz
scas
rcr
mov
jg
jns
sahf
mov
jb
xor
repnz
scas
inc
rcrb
dec
andl
cwtl
outsl
pusha
dec
aas
imul
mov
mov
add
push
movsb
jmp
mov
pop
out
sbb
xchg
in
sub
aam
xchg
ljmp
ss
xchg
sarl
iret
call
adc
sbb
jmp
lea
and
adc
stos
pop
mov
aam
add
hlt
xchg
adc
jl
sbb
jle
pmullw
inc
and
test
xor
pop
fmuls
xor
jbe
jns
lret
mov
lds
sub
lods
jecxz
xchg
jp
pop
loopne
bound
stos
mov
in
mov
inc
or
in
sahf
adc
in
mov
xchg
sahf
xchg
iret
aaa
sbb
mov
gs
xor
inc
adc
xor
and
popl
lods
mov
inc
jp
call
fcoms
movsl
add
push
mov
imul
enter
out
lods
cmp
lahf
mov
or
test
sub
jmp
sbb
xor
pop
mov
cmp
shll
inc
xor
xorb
popf
sub
lods
sti
flds
jmp
mov
iret
or
dec
and
jns
cltd
and
fldt
or
add
cld
sub
pop
pop
xor
lret
cltd
jmp
xor
and
xchg
or
and
rol
mov
add
pop
inc
mov
mov
cltd
call
rcrl
icebp
jecxz
xor
loopne
idiv
inc
push
rcr
dec
aam
sbb
aad
fldl
mov
sub
cmc
inc
push
jb
and
fisttps
xorl
add
outsb
jmp
xor
jno
fldl
int
dec
xor
sub
inc
jnp
addr16
loope
or
cmp
loope
fidivl
adc
adc
aam
rorb
cli
test
outsl
and
insb
jne
mov
rcr
sub
mov
call
or
lret
push
ret
cmp
push
pop
lcall
add
xchg
cwtl
in
pop
out
das
lret
sbb
fimuls
lds
add
lds
mov
dec
hlt
push
lcall
push
fcompl
jbe
lock
call
mov
push
imul
inc
lret
cmc
cmp
test
ja
sub
inc
inc
mov
dec
outsb
inc
jns
ljmp
xchg
out
or
sub
xchg
jo
mov
push
push
shll
icebp
in
scas
push
mov
mov
stc
mov
push
ret
fwait
cltd
sbb
xchg
scas
int3
enter
hlt
xchg
and
insb
lret
popf
mov
sahf
iret
cmp
out
enter
push
insb
mov
or
xchg
js
je
out
or
cmp
ss
testb
inc
lock
jmp
adc
push
xchg
jle
mov
push
jmp
jecxz,pn
xchg
add
ja
sahf
cmp
adc
fildl
mov
pop
inc
and
cmpsl
ljmp
xor
fmul
dec
fs
jmp
inc
clc
mov
in
clc
jl
loope
pop
push
aad
xchg
lea
mov
lcall
into
xor
stos
jbe
mov
sub
testl
cmpsl
lock
scas
xor
test
jg
push
movsl
call
push
mov
jg
lret
dec
pop
add
jne
add
loopne
dec
out
mov
add
insl
mov
mov
cwtl
hlt
pop
cmp
icebp
das
xchg
mov
push
push
pop
mov
addr16
clc
mov
sbb
dec
imul
cmpsb
leave
adc
cmpsb
pcmpgtb
mov
cwtl
sub
push
adc
fmull
pop
mov
sbb
cwtl
insb
add
in
add
pop
sbb
mov
adc
pusha
dec
lcall
push
cmp
inc
dec
jo
push
adc
fiaddl
shrb
call
cmp
addr16
mov
jg
das
push
cmp
jge
test
pop
fwait
cmp
fisttps
inc
data16
outsb
insl
mov
mov
inc
fildl
movsl
in
xchg
mov
push
fsub
pop
jge
fnstsw
ret
xchg
sbb
xchg
add
add
clc
ljmp
not
mov
das
scas
pop
push
int
rcl
xchg
fsubs
shrl
jae
sub
sub
dec
je
lock
jge
aam
inc
test
mov
xchg
lock
adc
inc
add
or
mov
lret
xchg
icebp
or
std
sbb
lds
and
mov
data16
enter
es
adc
jbe
mov
mov
cmp
je
cmpsl
xchg
cmp
jnp
push
xor
add
fsubrl
ror
mov
sub
outsl
cmp
cmp
jg
out
cmc
mov
bound
mov
dec
cld
ret
aaa
push
loopne
rclb
push
sbb
shlb
pushf
xchg
adc
mov
repnz
scas
roll
jne
incb
ret
clc
mov
mov
lahf
pop
xchg
nop
fidivs
add
out
shl
aam
or
jno
or
or
popa
sub
std
jle
pop
outsb
adc
test
les
cmp
push
inc
sbb
add
adc
in
test
int
movsb
psadbw
mov
inc
ret
cmp
mov
into
mov
mov
cmp
and
popa
imull
xchg
pop
stos
push
xor
cmpsl
mov
adc
jecxz
pop
loopne
add
and
imulb
fisubrl
test
popa
fcomps
cmp
lret
mov
adc
loope
push
sbb
pop
cwtl
out
add
out
aam
cmp
imul
sbb
xchg
sub
push
pop
loopne
mov
inc
mov
movsb
push
dec
mov
fimull
out
jecxz
in
jmp
mov
add
push
and
add
and
sbb
out
mov
fidivl
push
cmpsl
pop
pusha
fisubrl
aaa
rorl
inc
push
daa
addl
push
ret
negb
adc
sub
adc
cltd
xchg
adc
imul
cmp
push
loopne
loopne
sbb
adcl
pop
pop
test
lret
xor
insb
rcrl
fimuls
xchg
sahf
push
inc
xchg
jecxz
xor
sarb
pop
mov
fdivrl
loopne
jl
ficoml
imul
xchg
pop
data16
leave
xchg
fidivrl
hlt
test
das
inc
jno
sub
outsl
int
iret
stos
icebp
push
imul
fadd
push
popf
jne
xlat
cltd
mov
mov
aad
push
sbb
adc
fsubrl
das
pop
ret
scas
lcall
jp
sub
cmpsb
mov
xor
push
loopne
scas
test
jae
adc
push
and
xlat
add
out
push
adc
adc
data16
ret
ficoms
aaa
je
adc
js
jne
pop
or
mov
leave
add
pop
push
mov
pop
clc
pop
mov
in
mov
les
or
fwait
das
cmp
cmp
xchg
mov
mov
inc
lods
std
lret
add
lret
lcall
in
call
call
inc
call
and
or
dec
ja
adc
in
push
mov
aas
xorl
push
leave
int3
dec
push
push
stos
je
cltd
mov
xor
adc
mov
mov
inc
movsl
in
sub
inc
sbb
cmp
cmp
nop
xchg
cmc
cmp
out
repz
scas
loop
or
orl
mov
sbb
cs
xor
aad
or
shrl
sub
insl
cmc
lahf
lret
mov
rorb
fstl
popl
add
je
pop
stos
sub
enter
cltd
cltd
stos
push
les
icebp
push
lods
lea
jp
xchg
or
dec
and
or
iret
push
pusha
push
cmp
test
jnp
xchg
out
jecxz
scas
les
outsl
inc
ss
pop
test
into
out
int
stos
rorl
std
xor
push
aas
dec
test
adc
popf
je
push
or
movsb
sti
jno
inc
push
pop
push
add
inc
enter
mov
iret
das
std
int3
pop
sub
mov
jmp
or
fsubrs
and
in
sub
jmp
xchg
cmp
push
cmpsl
jg
sahf
out
pop
mov
fists
shl
dec
xadd
adc
xchg
into
add
inc
cmp
mov
pop
push
mov
xor
gs
inc
cwtl
xchg
inc
bound
in
mov
rorb
sbb
out
pop
sbb
xorl
or
daa
jae
push
or
in
out
lods
xor
arpl
cmp
hlt
fildll
jge
xlat
lahf
mov
leave
adc
loop
int
daa
mov
push
add
outsl
mov
cmp
out
push
out
mov
sbb
lds
jmp
push
adc
sti
inc
mov
pop
pop
aas
ror
xchg
stos
roll
inc
xchg
xor
insb
or
imul
out
pusha
mov
jl
add
inc
ljmp
hlt
push
dec
xor
adc
inc
cmpsb
pop
sbb
mov
sbb
adc
dec
mov
inc
scas
into
test
mov
jnp
jae
ret
xor
shlb
lahf
jg
sbb
aas
xchg
cmp
lods
mov
xchg
insb
add
mov
rcl
add
mov
pusha
ror
insl
stc
mov
mov
and
xchg
adc
sub
pop
or
push
in
lods
daa
loop
loop
shll
cwtl
and
adc
sahf
sarw
imul
push
inc
repz
mov
data16
xchg
jae
add
sbb
jo
xchg
mov
mov
push
hlt
daa
div
adc
xor
fiaddl
cwtl
pop
sub
pop
shl
jno
sub
cmpsl
movsl
jns
cmp
shrl
icebp
in
mov
lahf
inc
xchg
inc
jecxz
scas
jo,pt
adc
add
inc
flds
cmp
dec
sbb
inc
cmp
flds
add
and
push
test
orb
lock
push
js
dec
sub
mov
cmp
fdivs
jge
pop
push
nop
mov
xchg
pushf
ret
add
fnstcw
in
pop
or
pushf
add
and
xor
mov
dec
int
adc
mov
std
ret
dec
pop
pop
push
es
and
lds
and
push
and
lods
push
and
dec
add
aaa
mov
jno
adc
insb
mov
jle
std
sahf
rcrb
fwait
mov
jge
and
jge
inc
mov
in
lods
push
hlt
pop
and
aaa
es
jbe
fidivl
pop
fucomi
iret
imul
fcomi
out
xchg
rolb
xchg
test
lret
lcall
stc
rcrl
jbe
dec
pop
aaa
repz
out
jnp
mov
shlb
or
je
daa
mov
daa
scas
ret
in
push
inc
ror
sahf
inc
push
ljmp
stos
adc
pop
out
xchg
rcll
test
dec
arpl
lds
pushf
cmp
push
cltd
xchg
mov
pop
fists
jl
ljmp
fninit
les
jecxz
cmpsb
jae
psubq
repz
jecxz
jge
in
sbb
into
icebp
xor
mov
rcll
lods
mov
aam
mov
arpl
mov
out
push
mov
lods
cmp
incb
dec
jmp
and
sub
je
push
lcall
adc
inc
iret
sub
or
stos
int
lods
xor
sub
mov
das
cmc
mov
loop
js
cmp
arpl
rolb
or
mov
in
lcall
fadds
mov
das
jno
iret
cmp
loop
add
xchg
enter
mov
fcmovnu
rorl
add
pusha
lock
mov
pushf
jl
fdivrs
lcall
sbbb
pop
inc
jne
pop
xor
sahf
push
rcll
pop
mov
gs
mov
lea
outsl
push
jns
push
cmp
imul
pop
scas
xchg
pop
lds
das
and
add
enter
mov
mov
hlt
mov
sbb
jmp
dec
xchg
mov
std
movsl
stos
jo
sbb
loopne
and
mov
push
sub
int3
outsb
in
sahf
divl
les
fists
sub
lret
sub
fmul
ss
pop
stos
push
pop
aas
in
sbb
mov
cmc
xchg
xor
cmp
or
add
sbb
inc
das
aas
cmpsb
shll
push
inc
dec
repz
hlt
add
aam
out
push
add
iret
mov
je
push
jle
das
jg
movsl
jecxz
in
xchg
push
cs
xchg
aam
mov
or
out
sbb
pushf
mov
pop
mov
mov
mov
stos
mov
mov
cmp
in
stos
mov
mov
mov
xor
pop
cwtl
xchg
adc
pop
and
jl
ss
xchg
mov
cmp
mov
mov
and
push
jecxz
fs
and
jno
mov
movsl
gs
loopne
xchg
or
sbb
cmpsl
inc
fidivs
test
push
jle
aam
fcomps
test
or
cmp
add
roll
sti
pushf
movsb
aam
lea
xor
mov
js
cmpsb
cmp
pop
pop
cltd
inc
aam
imul
test
xlat
int3
std
dec
xchg
jge
adc
pop
add
lcall
jle
ret
enter
loopne
sbb
add
push
lret
clc
xchg
fmuls
ret
orl
pop
stc
cmp
fadd
test
add
mov
inc
movsl
jg
mov
jb
fdivl
xchg
mov
cmc
sub
jmp
std
xor
mov
lret
ja
rolb
repz
shr
repnz
lds
jl
and
in
dec
out
ljmp
xor
mov
xor
dec
inc
push
pop
mov
dec
cmpsb
xchg
sarb
push
jns
jp
je
xor
push
jle
pushf
dec
add
jbe
mov
xchg
push
sub
cmp
xchg
lcall
sbb
mov
sbb
stos
scas
fmull
in
into
push
add
add
leave
pop
push
js
mov
jl
xlat
xorb
mov
lea
imul
iret
and
mov
out
mov
add
shll
push
aad
xor
mov
rcll
rcl
mov
pop
xor
mov
xor
xor
dec
sahf
sub
shl
mov
imul
addl
mov
in
pop
mov
addl
dec
mov
test
outsb
loopne
int
xchg
sbb
sbb
sbb
fistpll
lds
repz
clc
cld
xchg
jge
int
xlat
shl
mov
movsl
xlat
cltd
xchg
inc
xchg
stos
push
in
and
lods
out
push
cmp
test
fnstenv
daa
adc
mov
aaa
xchg
push
enter
aad
dec
cwtl
xchg
aas
adc
fdivrl
lahf
add
js
inc
xor
js
rcrl
adc
imul
cs
arpl
and
adc
rcrl
ljmp
xor
mov
or
pop
idivl
xchg
cld
in
outsb
or
xlat
jb
jp
addb
push
jb
dec
sbb
inc
aad
sbbb
daa
roll
xor
and
inc
inc
or
sbb
jns
rcrb
cwtl
mov
lret
mov
aad
sub
mov
testl
roll
mov
inc
in
pop
push
xchg
aaa
pop
dec
out
jno
adc
mov
popa
in
cltd
outsb
mov
jb
jns
insb
and
xchg
in
or
test
jecxz
aad
out
push
inc
xor
push
jb
ja
or
and
icebp
push
and
jnp
adc
mul
or
syscall
xchg
dec
lea
push
pop
xor
idivb
scas
cmp
sbb
and
cmp
movsb
leave
mov
push
inc
pop
popf
cmp
imulb
js
lods
aas
clc
stos
mov
inc
in
sbb
js
mov
inc
adc
lahf
nop
test
shlb
mov
std
js
push
jb
or
xchg
enter
adc
xor
dec
ret
jne
arpl
push
or
mov
fprem
out
inc
fbld
orb
int
jno
stos
test
cld
and
pop
and
or
push
dec
jo
stc
dec
mov
mov
testb
pop
les
repz
insb
and
push
inc
jmp
jl
mov
inc
jl
inc
repnz
dec
clc
jmp
dec
js
pop
dec
cli
fs
mov
test
xor
jb
mov
push
pop
fdiv
pop
mov
fisttps
jmp
into
jecxz
inc
std
xchg
mov
push
dec
add
inc
dec
jo
lea
mov
gs
insb
push
sbb
dec
int
mov
stc
sbb
pop
dec
orl
stos
cli
dec
fs
fisttps
out
jno
jno
jl
push
popf
jnp
ss
in
out
mov
in
rcrl
or
push
cmp
movsb
mov
test
push
inc
mov
mov
sahf
adc
cli
jp
and
mov
add
imul
pop
jmp
loop
mov
sarb
loopne
xor
dec
sar
jae
jp
jb
or
mov
mov
movsl
subl
xlat
xor
pop
add
popa
adc
popf
sbbl
aaa
mov
xor
cmp
xchg
mov
loope
jnp
out
jg
mov
pusha
bound
mov
pop
adc
mov
iret
lret
stc
lods
inc
scas
cmpsl
shrl
aas
mov
add
repnz
aas
xchg
bnd
pop
sbb
arpl
mov
es
and
nop
jb
sub
test
fwait
push
push
sub
cli
out
js
test
and
divb
inc
jbe
mov
fldl
stc
imul
rdrand
pusha
adc
mov
mov
mov
mov
sbb
sub
mov
inc
ret
stos
dec
or
insb
mov
adc
in
loopne
xchg
bound
loopne
fwait
jle
ja
add
fwait
xor
pop
outsb
adc
sbb
mov
jl
mov
add
dec
push
or
in
mov
push
xlat
mov
notb
fwait
mov
decb
jne
daa
pop
aaa
or
call
mov
adc
mov
jp
lret
xchg
insb
jp
scas
arpl
xor
mov
lahf
or
adc
adc
xchg
mov
mov
test
xchg
adc
inc
mov
pop
arpl
inc
aad
cli
xchg
pop
and
cmp
inc
lea
inc
scas
cld
aad
or
in
out
mov
hlt
aam
scas
inc
jmp
mov
xor
lods
xchg
push
mov
int
mov
mov
xchg
bound
out
pusha
shlb
mov
ja
ficoms
cli
ret
sbb
mov
repz
pop
imul
or
cmp
test
je
adc
mov
inc
sub
inc
dec
ja
fwait
jns
dec
aad
sub
or
out
or
and
xor
xor
mov
data16
mov
push
xchg
cmc
in
negb
mov
inc
in
lahf
lds
jecxz
and
out
xchg
add
inc
jbe
pop
jmp
pop
and
mov
in
jmp
add
sub
mov
and
push
mov
mov
sub
lahf
mov
les
mov
hlt
movsl
les
push
imul
cltd
ja
and
jmp
inc
cltd
out
jmp
push
add
xchg
popf
pop
ss
in
xlat
mov
ret
dec
hlt
cmpsl
dec
push
fs
mov
dec
mov
shrl
mov
icebp
jmp
adc
rcll
jmp
test
cmpsb
in
lret
sub
adc
cmp
subl
psubsb
in
test
push
mov
dec
test
jecxz
dec
push
dec
mov
es
insb
aad
or
inc
pop
sahf
je
sbb
xchg
cwtl
adc
mov
add
scas
cwtl
cltd
jg
ss
adc
shll
test
movl
cmc
adc
cmc
fisttps
sub
call
fdivrl
clc
cmp
inc
sbb
xchg
dec
stos
mov
add
jno
jo
mov
inc
fisttps
fists
pop
cltd
cmp
test
orb
notl
test
fmull
mov
mov
std
adc
mov
xchg
xor
inc
cwtl
stos
fidivs
sbb
add
dec
in
and
xchg
sbb
dec
cmp
std
dec
out
jns
and
or
push
scas
xchg
lcall
imul
jg
popf
adc
jl
out
jbe
lcall
movsl
dec
jae
mov
pusha
mov
xlat
scas
xor
out
ret
mov
enter
call
stc
hlt
adc
add
mov
jbe
mov
sti
mov
stos
scas
mov
mov
cli
imul
pop
in
ljmp
push
notl
adc
mov
mov
movsb
adc
add
scas
xchg
adc
and
leave
and
or
scas
push
mov
sub
lds
xor
pop
push
scas
add
in
add
jp
xchg
jmp
inc
movsb
add
jg
push
or
mov
movsb
add
ss
mov
push
fmull
push
pusha
ss
or
dec
std
lds
in
jnp
jmp
les
imull
scas
xchg
xchg
in
lea
stc
pushf
loopne
jae
outsb
shrb
cmpsb
cmpsl
into
cli
xor
pop
jle
mov
mov
mov
frstor
mov
mov
pop
dec
mov
pop
mov
in
test
leave
xchg
mov
mov
int
push
or
and
pop
orl
mov
lock
add
int
mov
xor
mov
xor
leave
mov
ret
cmc
imul
fs
pop
lods
inc
inc
and
mov
stc
xor
push
fcoms
lcall
mulb
cmc
pop
in
shrb
enter
rep
xchg
out
jns
xchg
lahf
dec
fcomps
xor
popa
jb
imul
inc
fsubrl
mov
adc
cmc
mov
sbb
push
repnz
into
and
sbb
shll
push
nop
inc
inc
gs
and
adc
inc
jecxz,pt
inc
xlat
sub
inc
jecxz
cmpsb
pusha
jp
sub
jl
imul
push
popf
insl
dec
sub
inc
aad
push
xor
or
cmp
fadd
sbb
cld
call
popf
mov
test
xor
cmpsl
das
add
push
movsb
inc
xchg
or
leave
sti
push
call
shll
les
test
fnstsw
mov
mulps
dec
inc
pop
mov
fisubrl
xchg
test
arpl
or
pop
aad
jo
jns
mov
test
inc
fldt
sub
cmp
pop
pop
bound
dec
push
lret
pop
je
enter
mov
add
fdivrp
or
mull
sbb
adc
repnz
pop
xchg
jecxz
dec
nop
adc
mov
mov
sahf
mov
data16
mov
int
or
jns
xchg
or
cmc
sbbb
dec
ja
aaa
bound
mov
mov
cwtl
xor
clc
lods
or
push
or
push
jl
or
jmp
je
adc
or
js
cltd
cmp
push
fsubrs
inc
cmpsl
arpl
arpl
mov
add
decb
or
jle
fildl
mov
ja
test
jp
pop
cmp
es
incl
xor
inc
lret
adc
call
xchg
gs
bound
bound
shl
adc
movsb
fs
stos
xchg
mov
mov
jns
xchg
push
mov
add
jae
dec
add
bound
subl
jae
mov
sbb
and
pop
sahf
lcall
fwait
dec
bound
or
cmpl
jmp
and
jl
jbe
adc
dec
adc
cld
sub
pop
loopne
jge
rcll
orl
xchg
into
pop
pop
xchg
iret
jo
fwait
scas
and
movsl
test
mov
push
rolb
jno
jmp
push
mov
mov
mov
jne
inc
push
mov
into
mov
ljmp
sbbb
rcrb
xchg
add
scas
js
fs
fidivs
dec
mov
aaa
mov
sub
stos
push
and
jl
add
popa
jmp
pop
aas
daa
insb
std
movsb
shlb
aad
scas
jle
xchg
idivb
bswap
push
adc
add
leave
xor
mov
leave
je
ljmp
or
addr16
rcrb
xchg
mov
ret
roll
iret
adc
fs
rorl
jle
mov
dec
xchg
jae
mov
sbb
movsb
icebp
lret
xchg
or
mov
or
sub
mov
int3
cmp
xor
pop
cmp
repnz
int
into
push
sbb
lret
mov
mov
fiadds
cmpsb
mov
push
mov
clc
push
jns
ret
mov
lea
inc
mov
stc
cmpl
mov
add
cli
aam
push
mov
or
scas
loope
int3
push
jg
fs
gs
leave
shll
aaa
das
hlt
ljmp
add
inc
cmp
loopne
xor
cmpl
sub
ds
psrad
sbb
xchg
and
mov
mov
jnp
mov
add
fwait
push
xchg
pop
dec
mov
mov
xlat
scas
jecxz
leave
out
mov
repz
mov
jae
ljmp
adc
out
lcall
fwait
xchg
inc
mov
test
out
inc
gs
enter
test
jecxz
dec
push
std
aaa
addl
mov
pushf
ds
jnp
push
cmp
push
xorl
or
inc
leave
es
divb
stc
dec
shlb
insb
jo
xor
aam
adcb
movsl
notl
adc
aas
aaa
hlt
jno
imul
fnstenv
xor
inc
mov
or
ja
addr16
mov
cmc
imul
xchg
loop
add
pop
inc
outsl
stos
adc
sub
lods
aas
ds
inc
sahf
cmp
adc
mov
stos
add
and
stc
scas
sbb
hlt
pushf
pop
xor
arpl
lahf
test
xchg
sahf
mov
imul
jne
xchg
push
pop
pop
cmp
xchg
mov
subl
adc
sahf
test
sub
fistpl
lods
loopne
lcall
cmpsl
push
xchg
fs
jl
in
pop
daa
lds
add
adc
hlt
sti
push
adc
mov
in
scas
mov
jno
clc
adc
jae
into
cltd
sarl
mov
xlat
fwait
fs
pop
sbb
inc
and
push
pushf
pop
cltd
dec
inc
pop
mov
nop
push
mov
hlt
xchg
jno
stos
push
adc
mov
gs
outsl
into
lods
nop
jno
rolb
sahf
cwtl
xchg
repnz
dec
dec
enter
push
mov
imul
cmp
lea
lahf
jecxz
add
stos
fs
adc
cmc
pop
ljmp
int
xchg
insb
stos
push
xchg
add
or
xor
jnp
loop,pt
ret
cmp
xchg
sub
cmp
push
repz
mov
inc
and
xchg
pushf
jno
sti
cmc
fbld
int3
inc
fnstenv
sbb
inc
mov
outsb
jns
xchg
vcvtpd2psy
out
hlt
mov
pusha
pop
cmp
dec
negb
jge
xor
ja
into
xchg
mov
mov
sub
add
bound
mov
push
fcoms
cmp
dec
mov
lret
add
les
push
push
mov
push
out
nop
jl
jg
test
adc
xchg
cmpsb
inc
push
mov
sub
ret
mov
mov
arpl
je
mov
inc
xchg
loopne
movsb
icebp
frndint
push
in
fimull
lock
out
mov
ss
adc
or
scas
adc
push
sub
inc
inc
adc
or
icebp
or
out
movsb
clc
add
xor
dec
sbb
fisubrl
je
jnp
or
xchg
add
fisttpll
cli
inc
lret
pop
add
push
mov
mov
add
pop
add
mov
call
out
add
jg
aad
fdivrs
aaa
aas
xlat
aas
sahf
dec
test
mov
sbb
into
dec
lods
mov
notl
leave
add
xchg
insb
dec
jp
test
les
ja
adcl
xor
in
das
js
sahf
lods
jp
mov
in
sub
push
mov
lahf
out
cwtl
fisttps
xchg
shl
iret
jbe
call
ds
jno
push
jmp
dec
sbb
mov
scas
or
push
xchg
mov
out
cmp
repnz
jecxz
mov
push
sub
mov
cmp
jle
cmp
sbb
call
xlat
or
adc
insb
mov
cltd
add
adc
jno
add
jne
mov
xchg
es
add
sbb
enter
aad
rcll
loop
mov
mov
jle
cli
test
loop
push
push
sub
cmp
cwtl
mov
push
adcl
and
dec
mov
xchg
fwait
neg
inc
xor
push
mov
pop
add
bound
nop
fisttpl
fidivs
xor
sahf
push
cmpsb
rcrl
inc
mov
xchg
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
clc
mov
jbe
shll
or
bound
pop
out
or
data16
pop
mov
in
stc
dec
sub
mov
mov
mov
lods
mov
jmp
xor
cmp
sub
dec
bound
adc
lds
in
lock
sub
adc
lcall
outsl
sub
fisubs
inc
jbe
jae
mov
lcall
stos
or
out
ficoml
lret
mov
ret
push
sub
cmp
test
imul
dec
repz
sbb
xchg
scas
mov
in
xor
movsl
imul
xchg
das
in
sbb
scas
or
sub
call
pop
jecxz
add
add
fs
xchg
in
popa
xor
je
gs
scas
lods
lods
rcrb
movsb
xorb
or
jp
jmp
cmp
push
mov
xor
jle
cmp
sub
shrl
scas
sub
mov
inc
sti
mov
pop
mov
adc
sub
cld
dec
inc
sbb
and
xchg
aam
or
rcrb
or
jo
loop
test
add
sbb
ljmp
test
sti
pop
cmp
mov
sub
test
mov
or
dec
mov
lcall
push
std
inc
push
test
imul
sar
popf
push
xchg
aas
mov
or
in
push
mov
xchg
mov
leave
push
mov
rcll
sub
loop
sbb
sbb
xchg
push
out
push
sbb
push
hlt
sbb
or
outsb
jb
jge
sbb
push
shlb
es
push
fdivl
enter
outsb
popf
inc
cwtl
mov
es
push
add
loopne
dec
inc
push
sub
push
sahf
xchg
mov
cmp
mov
push
loopne
lods
lock
lcall
gs
adc
int
scas
dec
mov
jnp
push
mov
mov
pop
push
insb
sbb
adc
mov
testb
cmp
mov
loop
push
aad
loopne
stos
gs
and
mov
rcl
push
or
xchg
mov
jp
push
jne
or
cmp
subl
pop
pusha
pop
lock
lcall
fnstsw
fisttpl
ja
adc
pop
lret
lret
rolb
mov
das
sbb
adc
and
enter
xchg
in
pop
add
ja
mov
add
lcall
xchg
push
inc
and
insb
aaa
rcrb
and
mov
out
hlt
xor
inc
sbb
jb
mov
mov
jb
or
lcall
jmp
sub
mov
jcxz
outsb
lods
inc
fdivrs
and
inc
addr16
cmpsl
icebp
ljmp
dec
mov
and
mov
inc
inc
dec
and
add
push
adc
adc
out
dec
inc
aam
xchg
pop
cs
sub
in
sub
das
int
or
cli
cmp
stos
push
enter
sbb
adc
lods
out
data16
dec
adc
and
lds
sbb
pop
cmp
sbb
das
xchg
divl
push
ljmp
or
dec
mov
scas
popf
xchg
pop
in
xchg
cmp
sub
aas
in
leave
cmp
push
insl
mov
fwait
dec
or
das
pop
cmp
pusha
out
pop
outsb
push
mov
test
mov
data16
mov
fcomip
and
cmp
mov
imul
in
test
aas
cmpsb
imul
iret
mov
jno
xchg
push
and
mov
sub
push
jb
outsl
jle
push
popa
insl
adc
sbb
cmp
iret
xor
adc
loope
mov
lods
repz
out
inc
jmp
repnz
inc
jle
and
js
addb
sbb
andb
push
jb
push
ret
or
cmp
in
stc
test
rcll
and
xchg
xlat
dec
mov
pop
push
pop
movsb
cmc
stos
mov
in
ss
mov
xchg
jmp
cmp
mov
xor
add
jne
out
mov
ss
push
xor
jns
gs
cmpsb
iret
js
idivb
js
dec
mov
mov
popf
sbb
pop
sti
pop
push
cs
pop
leave
jl
data16
sbb
push
inc
cwtl
mov
fucomi
xchg
xchg
pop
imul
out
mov
rclb
dec
cmp
stc
cmp
xchg
mov
or
pop
pop
decl
sbb
cmp
push
xchg
jne
sbb
push
jmp
arpl
fdivs
push
rclb
mov
aas
cmp
pop
mov
xchg
cmp
mov
or
cmpsl
add
fsts
push
mov
push
das
push
push
push
div
movsl
cmpsb
mov
scas
cmp
sbb
push
sarl
cwtl
loop
jge
pop
mov
pop
push
mov
xchg
add
xor
sbb
sub
cmc
cmp
in
into
loopne
cmpsb
dec
js
pop
mov
inc
lahf
aad
adc
cmp
hlt
lods
pop
jno
into
xlat
or
data16
insl
scas
inc
mov
in
negl
xor
sbb
sbb
negb
insl
jno
pop
inc
and
nop
xchg
dec
cmc
inc
das
xor
outsl
out
sbb
pop
popf
repnz
divl
clc
xor
aaa
testb
shlb
adc
push
cmp
shl
cmpsb
adc
xchg
leave
sub
fcmovnu
movsl
cmp
push
sbb
out
mull
jmp
jne
fisubs
mov
push
jo
mov
mov
sub
xor
push
and
sub
lahf
jb
mov
jbe
mov
hlt
cmp
mov
mov
inc
or
mov
test
loop
pop
sbb
sbbl
inc
lcall
insb
mov
jae
icebp
and
mov
inc
cs
dec
xor
jns
int
shl
cmp
mov
adc
popa
adc
cmp
stc
pop
scas
je
mov
data16
pop
scas
add
leave
or
dec
sbb
xor
inc
loop
ss
or
adc
mull
lahf
or
outsl
xchg
hlt
in
aas
push
rcll
pushf
xchg
mov
pop
cmpsl
mov
mov
mov
dec
push
jo
pop
sarl
jo
out
and
rclb
cmp
adc
mov
fimuls
mov
std
cmp
inc
shl
mov
mov
subl
cmp
arpl
jl
lret
jle
sahf
mov
scas
repnz
cmc
int3
push
sbb
jmp
idiv
adc
mov
xor
sarb
push
mul
rclb
ret
hlt
test
cmc
pop
sub
xchg
inc
popa
andl
dec
sti
add
cltd
in
mov
xchg
jecxz
push
mov
sub
or
sahf
icebp
lods
icebp
ss
push
mov
jno
and
ror
mov
or
fcompl
jo
jo
shr
dec
out
mov
xor
je
hlt
rolb
jo
lahf
and
outsl
addr16
aaa
out
xor
cltd
jnp
lret
int
push
call
loop
icebp
dec
les
das
dec
rclb
in
je
pop
aad
or
or
lods
pop
lret
aam
lahf
xor
jne
stos
sbb
icebp
sarl
mov
pop
dec
jecxz
imul
dec
loop
cltd
pop
mov
and
mov
xor
and
lahf
js
mov
pop
pop
popf
jp
jg
xchg
jne
inc
outsb
mov
aaa
aas
popa
add
stc
jmp
add
and
nop
cmp
inc
or
sbb
add
rcll
mov
jb
out
inc
xchg
xor
movsb
mov
sbb
push
popf
mull
outsb
inc
cmp
cld
adc
lret
push
mov
inc
mov
mov
or
push
jp
inc
ljmp
fsts
jne
lret
and
mov
ja
push
mov
dec
pusha
in
fistl
mov
push
xchg
sbb
cmp
in
push
call
jge
jb
cltd
in
dec
xor
fists
cwtl
pop
ficoms
ds
cmp
adc
pop
fimuls
fisttpl
lea
mov
ljmp
or
das
test
dec
lds
fisttpll
vpsrad
mov
dec
sbb
dec
leave
int
daa
mov
popa
ss
dec
sbb
sub
pop
add
int3
xor
mov
mov
mov
xchg
sbb
xor
jnp
call
add
add
mov
mov
xchg
pop
in
jg
movsb
mov
add
sahf
mov
jge
shlb
sub
add
adc
dec
cmpsb
jg
frstor
pop
iret
lds
out
das
and
sub
fistpl
sbbb
lods
ret
inc
mov
rcr
pop
in
sbb
addb
out
pusha
ja
inc
cmp
lret
fisttps
les
mov
xchg
loop
mov
jne
rcll
mov
sub
push
xor
inc
mov
cmpsl
and
loopne
mov
inc
adc
ljmp
fiadds
imul
pop
pop
subl
pop
sti
and
push
inc
aaa
fs
mov
fildll
jno
and
outsb
out
and
lea
adc
xchg
das
mov
popf
push
repz
xchg
cmp
mov
popf
adc
repz
add
shl
aas
and
adc
int3
sub
pop
adc
add
add
adc
out
repnz
aas
jg
jno
pop
pushf
fbld
out
xor
sbb
pop
mov
outsb
hlt
mov
xchg
push
push
mov
fidivrs
cli
popf
psrlw
push
sub
sub
aad
mov
xchg
fiadds
imul
xor
enter
sbb
pop
loope
cmp
jmp
mov
out
add
inc
paddq
sahf
lds
xchg
insb
movsl
loope
out
xchg
stos
add
adc
outsl
push
inc
inc
xchg
jbe
jae
inc
fxch
or
notb
pusha
xlat
xchg
xchg
cmpsl
and
scas
lret
imul
inc
jecxz
bound
push
or
cs
mov
xchg
jl
jle
enter
ljmp
scas
aaa
test
cmc
cmp
xchg
lea
mov
and
push
popa
das
xchg
xchg
cmc
insb
pop
repnz
je
mov
repnz
pop
mov
pop
imul
sti
idivb
adc
mov
add
cs
push
outsb
push
clc
mov
jmp
push
mov
inc
fisubrs
popf
add
orb
in
sub
push
and
dec
xchg
dec
shrb
or
fs
pop
and
or
scas
pushl
ds
jno
push
jae
cmc
pop
cmp
shll
das
and
pop
fs
sbb
lods
lret
mov
push
addr16
jecxz
inc
add
jnp
jmp
arpl
mov
repz
movb
ret
xlat
or
pop
mov
fisubl
jge
std
mov
xchg
arpl
dec
ret
mov
jbe
sarb
push
jns
mov
cmp
cmp
pop
dec
arpl
dec
sbb
mov
aas
push
bnd
jae
xlat
push
jnp
inc
cmp
sbb
push
add
cmp
pop
es
sbb
or
ror
bound
mov
jnp
and
sub
bound
ficoms
cmpsb
shll
jg
sbb
add
sti
mov
scas
xchg
repnz
outsl
mov
push
mov
pop
lods
xor
xchg
call
lock
call
fdivr
cmp
sbb
popa
sub
or
addr16
mov
mov
out
add
xor
sub
into
andb
push
lock
and
scas
out
addr16
and
out
arpl
xor
mov
jae
pop
addr16
add
test
lahf
clc
mov
out
les
push
cmp
inc
out
stc
shrb
aam
mov
jbe
jo
push
addr16
psrld
daa
cmpsb
or
paddsb
aam
dec
sbb
sbb
and
outsl
cmp
push
lock
xlat
jno
xor
gs
subb
mov
mov
mov
inc
addr16
jmp
mov
out
cltd
cmp
icebp
mov
push
mov
xor
and
jo
jle
mov
push
in
gs
add
mov
inc
pushf
xorb
leave
jl
and
cmp
setl
xlat
mov
or
in
in
push
into
leave
jmp
out
mov
cmp
push
mov
or
pop
cmp
repz
mov
push
movsb
popa
jnp
imul
stos
inc
sub
movsb
xchg
sbb
mov
outsl
push
sbb
sahf
rolb
add
mov
xorb
insb
fsub
movsb
ret
cmc
sub
lods
mov
mov
fndisi(8087
imul
add
rcl
push
addr16
clc
out
pop
or
fiaddl
leave
add
pop
add
bound
pop
jb
repz
roll
jge
int3
cld
xchg
pop
jle
cmp
lcall
or
xchg
cltd
xchg
dec
jge
rclb
inc
jno
mov
imul
add
rcr
imul
fwait
pop
add
outsb
jge
pop
out
sbb
inc
xor
push
pop
push
sub
fisttpl
and
xor
mov
hlt
xchg
lcall
mov
cmp
push
xchg
je
inc
rcll
push
jecxz
push
mov
lea
fcoms
mov
in
lret
pop
aas
leave
insl
gs
roll
into
cmp
in
mov
loopne
outsb
jne
pop
enter
push
xchg
lahf
hlt
fs
repnz
mov
sub
xchg
shlb
xchg
subl
inc
out
psubusw
out
daa
xchg
lret
ror
ret
mov
cmp
mov
lret
push
test
jbe
outsb
add
repnz
sub
mov
ret
adc
imul
sub
sti
roll
scas
roll
arpl
aad
inc
push
inc
call
mov
jne
and
stc
addr16
mov
jge
push
push
jo
or
shl
repnz
inc
std
xlat
sub
test
add
xor
xchg
lea
sahf
dec
add
mov
popa
mov
fnstenv
push
outsb
push
ficomps
addr16
or
lret
pcmpgtb
insl
nop
aaa
jae
mov
das
jnp
out
out
mov
and
push
pop
mov
lds
call
iret
or
scas
xchg
ss
filds
sub
jbe
in
fld
int3
clc
cwtl
lcall
inc
add
mov
xchg
xor
sbb
sub
int
xor
js
insl
popf
loopne
ret
shlb
dec
jo
xor
pop
mov
xor
outsb
pop
sub
jge
repnz
mov
pop
je
mov
add
call
sbbl
adcb
test
ljmp
lcall
xchg
mov
mov
push
mov
ret
xor
fstp
es
jbe
lods
sbb
xor
mov
rcrl
cmp
xchg
aaa
je
mov
pop
dec
test
lea
btrl
movsl
xor
ret
mov
hlt
jnp
xchg
jp
ss
pop
nop
int3
xor
imul
mov
cwtl
adc
xor
pusha
add
inc
inc
jb
jo
cltd
adc
mov
outsb
add
mov
add
loope
dec
sbbb
fimull
xchg
adc
arpl
arpl
adc
xor
es
int3
fwait
lcall
cmp
pop
rorb
mov
test
test
inc
nop
ret
cmp
mov
jl
ja
sub
jns
or
std
xor
call
sub
ja
bound
gs
mov
enter
dec
xchg
inc
ja
and
adc
faddl
mov
xor
dec
xor
fidivl
lods
int
arpl
xor
insb
sti
mov
les
push
add
idivl
repz
add
jmp
rcrb
insl
mov
fisttpll
sbb
jl
loop
add
xlat
outsb
push
and
or
jae
ja
mov
lret
mov
or
rorl
pusha
insl
or
mov
pusha
sub
or
cmp
xchg
jl
imul
and
bnd
or
test
in
push
and
jmp
and
ja
push
jne
aad
inc
adc
push
enter
push
pop
jne
sbb
in
fcoms
or
mov
pop
ret
enter
je
imull
mov
jp
stc
pop
inc
jno
jmp
cmp
lods
and
jnp
sub
rcrb
mov
popa
clc
imul
mov
rcll
ds
cs
and
add
dec
lods
pop
and
jg
cmc
rol
jno
pusha
jmp
inc
xor
dec
pop
int
or
dec
loop
cli
pop
inc
mov
icebp
lods
fmuls
inc
lods
loop
push
pop
aam
push
dec
jmp
fidivs
orl
mov
xchg
arpl
sahf
cwtl
mov
test
pusha
mov
ja
ret
cmp
mov
mov
jbe
cmpsl
xor
adc
js
cmpsb
int3
adc
inc
rolb
fwait
and
scas
js
adc
mov
mov
pop
js
cmpsl
xchg
pop
xchg
loop
incl
dec
xchg
add
ficompl
into
rcll
out
jnp
outsl
ror
dec
sbb
push
mov
push
testl
dec
dec
iret
mov
fmull
cmp
stc
jl
mov
xchg
dec
dec
inc
stc
xor
repnz
ja
rorb
xor
mov
adc
cmp
push
push
adc
mov
or
outsb
dec
icebp
mov
jge
sub
test
jge
frstor
imul
jle
mov
jge
out
xor
stos
lahf
fnsave
mov
stos
cmp
hlt
fistps
adc
cmpsl
mov
sbb
ljmp
imul
jne
stos
gs
jne
lret
stos
push
call
fists
cmp
xor
sub
data16
push
cmpsb
pop
aad
in
jmp
addr16
sub
cwtl
sub
pop
push
mov
lcall
ljmp
or
pop
lods
push
mov
mov
pop
dec
mov
fcompl
xor
cltd
cmp
mul
inc
addr16
mov
lcall
jecxz
or
sub
stos
dec
inc
cmp
int3
in
xor
fstps
cmc
test
sub
rclb
in
stos
mov
mov
pop
imul
imul
imul
cmc
push
or
loope
fnsave
icebp
lcall
push
cmp
movsl
adc
mov
push
lea
inc
mov
scas
mov
popa
adc
xor
subb
lds
xchg
jb
inc
lds
pop
xor
dec
inc
sbb
jg
popf
sub
push
xor
pop
cmp
sub
test
add
jno
cmp
or
cltd
inc
int3
cmp
adc
add
es
cmp
inc
and
adc
ror
sti
test
in
mov
cmpsb
dec
push
sub
jge
loop
adc
movsb
xchg
jge
and
push
in
xchg
pop
je
shrb
inc
ds
jns
lods
jecxz
lret
sub
arpl
or
int3
aaa
in
xchg
lods
pop
fdivr
wbinvd
jl
mov
nop
rolb
xor
add
sti
bnd
insl
lret
lods
sbb
pop
lahf
movsl
fsub
lds
adc
cmp
jnp
loop
dec
imul
mov
arpl
xchg
cmp
scas
pop
mov
sub
mov
mov
mov
jmp
push
out
add
scas
mov
std
aam
add
lahf
dec
arpl
pop
ds
inc
lods
and
or
mov
xchg
mov
popa
stc
js
xchg
out
std
xchg
mov
mov
add
into
imul
sbb
xlat
pop
in
fldenv
bound
sbb
mov
inc
rclb
or
inc
push
push
cmp
ss
xchg
mov
pop
jae
push
testl
das
in
pop
xor
cmpsl
xor
inc
inc
jb
ret
xor
andb
insb
mov
sbb
mov
lea
test
cmp
clc
lea
jge
dec
out
cmp
lcall
sahf
test
xor
or
xor
or
adc
daa
mov
cmc
repz
dec
cmpsb
mov
ret
sub
xchg
arpl
leave
jns
ret
ss
out
jmp
int
mov
push
iret
mov
cmp
mov
jge
or
xor
fidivl
loope
and
fs
stos
sub
aam
cmpb
jp
rcrl
cmp
stc
adc
fnstcw
repz
sbb
dec
mov
jge
inc
out
ja
xchg
push
ret
pop
jae
pop
cmp
lret
hlt
cld
outsb
jle
or
test
pusha
sbb
adc
jle
push
jno
inc
jmp
shlb
fists
cmpsb
inc
push
lods
xchg
test
cmp
mov
fbld
rcl
int
jo
xchg
jp
stos
cmp
dec
adc
loope
xor
test
jne
cmp
cmp
enter
xor
in
test
xchg
jns
lock
and
into
sbb
lret
nop
lret
hlt
leave
mov
mov
xor
sbb
repz
das
pop
push
mov
iret
xchg
jns
loop
or
inc
std
adc
fstpt
add
cmpsb
loop
add
lret
dec
jp
cmp
scas
ss
inc
and
cmpsb
mov
stc
shlb
call
sbb
inc
cmp
push
pusha
xor
fsubs
fbld
jns
or
icebp
mov
popl
lock
fldl
sar
push
pop
inc
inc
mov
repz
mov
in
mov
in
mov
data16
adc
mov
xlat
enter
dec
mov
sub
fstl
sub
lret
in
inc
mov
xchg
xor
cltd
mov
es
psubq
stos
xchg
xlat
enter
sub
or
test
xor
push
add
lret
jno
es
sti
in
fimuls
loop
ljmp
xchg
xor
aad
push
popa
cmp
add
cmpl
int3
es
int3
sub
pop
push
push
iret
xorb
jg
arpl
clc
push
mov
dec
add
aaa
in
pushf
divb
adc
mov
sub
adc
cmp
cmp
pop
push
cmp
mov
dec
cmp
jp
jl
push
icebp
mov
xor
mov
ror
outsb
gs
xor
in
sub
jge
cld
rcrb
insl
stos
jns
cmp
or
dec
jmp
jns
in
popa
xchg
push
jl
in
pop
cmp
pop
fbstp
fs
jnp
jne
pop
add
push
out
jae
lret
aam
and
jp
xor
push
or
lock
jno
test
es
xchg
daa
loope
dec
or
cmpb
ljmp
inc
stc
adc
xchg
sbb
scas
lret
dec
lds
jae
jge
mov
sub
push
and
xchg
sbb
lock
ljmp
lods
sub
dec
mov
out
cwtl
mov
js
call
dec
pop
and
mov
rcrl
xor
loopne
push
sbb
ret
cmp
jnp
in
addr16
cmp
sarb
clc
cld
mov
add
out
cld
fwait
and
adc
insl
xchg
add
mov
cmp
data16
out
enter
sbb
inc
cmpsl
cmpl
inc
jmp
test
popa
add
push
pushf
out
sti
outsb
pop
lret
adc
addb
lods
push
cmpsb
mov
push
hlt
hlt
mov
in
inc
cmpsl
lds
fsubrp
sub
hlt
inc
ror
pop
push
sub
mov
add
adc
pop
jbe
mov
stc
xchg
or
xchg
fcoml
movsl
pushf
in
in
inc
or
clc
int
cmp
ret
mov
out
mov
aad
jo
inc
pop
add
sub
sub
pusha
rcrb
mov
int
push
ljmp
pop
fs
sub
js
ret
dec
icebp
call
ret
cmpl
repnz
push
sub
add
test
jmp
jl
cs
test
adc
insb
loopne
stos
sbb
int
fstp
sbb
es
pop
ja
sbb
bound
ret
adc
pop
in
dec
jmp
and
mov
cmp
mov
and
pop
ficompl
xor
pusha
iret
subl
inc
pop
mov
inc
enter
insb
xchg
leave
push
fmuls
rorl
and
imul
sub
xchg
addr16
ja
mov
orb
or
mov
inc
cmp
and
jg
rcrl
cli
sbb
mov
cld
lods
loop
enter
inc
stos
les
push
sub
mov
lret
mov
dec
inc
or
sbb
iret
fistl
fildl
cmp
xchg
xor
xor
xor
add
outsb
popa
lock
xchg
pop
sbb
inc
jge
push
int3
mov
test
enter
adc
movsl
jle
sbb
mov
push
inc
sub
fld
pop
ds
push
fildl
cmp
push
pusha
out
adc
adc
dec
or
enter
repz
jecxz
pop
sub
add
pop
mov
outsl
int
mov
pop
insl
ret
xor
cmp
adc
fcomi
inc
lods
mov
cld
inc
inc
out
or
sbb
mov
adc
jns
xchg
xor
and
jmp
andl
sbb
dec
add
pop
icebp
mov
cmp
jnp
ss
xor
jne
adc
loopne
fstps
mov
mov
test
or
adc
testl
add
add
add
jbe
adc
and
mov
aad
pop
enter
pop
hlt
and
dec
jae
jl
add
pop
movl
push
or
sbb
fstpt
pop
cmp
xor
push
mov
andl
jg
in
or
cmp
push
leave
and
fists
leave
push
sub
sub
mov
mov
aad
jbe
sbb
imul
test
xor
fwait
sbb
pop
lock
lea
jl
leave
xchg
test
or
enter
add
es
nop
arpl
outsl
aaa
pop
into
and
sbb
push
push
cwtl
shlb
dec
mov
roll
testl
mov
jge
mov
cmp
idivb
push
or
hlt
lock
les
jmp
pop
int3
shr
adc
dec
out
ja
stos
pop
sbb
loopne
inc
mov
xor
xchg
ror
jecxz
sub
mulps
pop
je
sbb
bound
dec
inc
je
ret
orb
pop
jmp
loopne
pop
dec
repz
push
mov
cwtl
das
push
mov
shll
sbb
or
sbb
pop
movsb
fcom
xchg
pop
ss
cmp
lret
sbb
push
insb
stos
mov
hlt
mov
add
add
xchg
mov
pusha
sub
out
mov
inc
pop
testb
cmp
lret
xchg
mov
sub
sbbl
outsb
dec
xor
jae
push
iret
test
add
sub
push
cltd
mov
mov
bound
jle
je
add
shrl
imul
icebp
dec
xchg
adc
mov
cmp
jbe
xor
loop
lea
fcmovu
imul
fst
or
fldt
inc
leave
repnz
xor
in
add
enter
insl
push
xor
dec
aaa
fxch
into
jge
sub
pop
inc
push
jecxz
and
loop
pop
cmp
jl
xlat
hlt
pushf
sub
lret
or
push
or
rorl
mov
gs
jnp
mov
dec
jne
std
ljmp
push
xchg
pusha
push
pushf
fwait
loope
ljmp
jo
nop
dec
jmpw
xchg
or
sub
dec
xchg
gs
xor
pushf
pop
movl
fdivr
lret
sub
stc
xchg
stos
sbbl
pop
add
sub
xlat
adc
cmp
or
testl
pop
or
imul
iret
insb
jne
outsl
insl
pop
and
push
jge
or
repz
leave
jns
and
mov
xchg
and
js
daa
out
or
add
add
or
push
inc
dec
jp
in
sub
adc
xchg
cmp
jo
jge
fstl
nop
xor
xchg
dec
mov
popf
mov
out
and
add
cltd
adc
call
test
xchg
add
push
mov
push
push
lock
dec
inc
es
std
shll
dec
jno
sub
pop
and
call
mov
cmpsb
dec
push
dec
mov
and
fisubs
inc
jmp
pushf
test
popf
push
or
loopne
xchg
jmp
or
stc
jmp
out
sub
fnsave
push
inc
jb
jl
xchg
adc
inc
xchg
pop
adc
incb
imul
pop
fisttpll
and
cmp
adc
sbb
out
decb
in
pop
cmp
add
pop
nop
dec
dec
arpl
out
mov
dec
leave
mov
jae
xchg
inc
jo
jae
sub
adc
out
fildl
inc
cmp
jne
add
dec
adc
mov
repz
push
stc
incl
lea
test
jnp
xchg
xchg
aam
jmp
jg
pop
xchg
pop
sti
push
jnp
fmull
stos
mov
xor
pop
cmp
cltd
popa
cmpsb
push
add
or
les
iret
clc
sub
push
xor
repz
mov
out
adc
cli
sbb
or
shll
dec
inc
jmp
sti
sub
sahf
mov
inc
cwtl
xchg
jb
xchg
les
lahf
push
test
loope
push
movl
leave
lea
push
push
and
sbb
cs
push
sbb
push
pop
out
loope
in
adc
sub
pop
flds
cmpl
fsqrt
std
jo
movsb
in
fisubl
mov
and
andb
xchg
cltd
mov
mov
push
clc
bound
out
push
scas
shlb
add
mov
jnp
fsubr
jecxz
xor
cmp
out
fabs
inc
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
insb
mov
bound
pop
bound
pop
stos
fs
and
shll
cmp
mov
mull
outsb
xor
ds
adc
add
inc
mov
add
loop
xorb
aaa
sub
xor
mov
stos
mov
je
sti
or
rolb
cmp
je
cltd
or
imul
dec
pop
fdiv
stos
jl
push
test
test
sbb
xor
cmpl
pop
xchg
mov
add
mov
inc
lahf
test
add
pop
test
loopne
push
inc
cwtl
aaa
aaa
push
add
jne
inc
mov
push
ret
sbbl
fiadds
scas
out
push
push
push
insl
push
cmp
shll
mov
daa
cwtl
cmp
add
je
xchg
lods
adc
jns
pop
sub
push
fimull
mov
cmp
jge
stos
sub
xor
in
cwtl
in
xchg
lret
sbb
adc
add
jle
cmp
jmp
sub
or
test
inc
hlt
and
out
icebp
xor
js
push
insb
lret
sbb
rcr
clc
push
mov
xchg
xlat
sbb
in
pushf
insb
xchg
pop
aaa
or
inc
rolb
adc
mov
jecxz
in
jle
dec
stc
and
pop
push
mov
mov
repz
test
daa
imul
pop
cmp
fisttpl
or
add
cmpsl
inc
pop
adc
jl
mov
shll
cmp
rorb
jp
pop
cmpb
in
in
pop
movsl
arpl
lahf
in
shl
orl
rorb
addr16
inc
cmp
int
adc
insb
imul
add
stos
add
pop
mov
mov
xor
pop
movsb
stc
addr16
int3
cltd
inc
jp
inc
rcrl
sub
ss
xor
xchg
mov
dec
pop
scas
cmc
mov
aaa
adc
lcall
in
call
xchg
rorb
cmp
bound
dec
sbbb
sbb
inc
popa
call
dec
inc
imul
mov
in
js
or
add
mov
mov
sub
add
or
inc
lcall
lds
add
pop
mov
xchg
imul
aaa
or
popf
cmpsl
mov
jnp
cmp
push
jns
les
idivl
sbb
and
nop
std
cmc
sbb
cmp
mov
adc
int3
in
adc
sbb
add
xor
push
jbe
out
or
xchg
mov
adc
loopne
lahf
sarl
mov
call
jb
and
data16
xchg
xor
lret
leave
js
and
cmp
leave
je
pop
push
pop
jmp
lods
lock
xlat
popf
dec
iret
jnp
sub
in
xor
xchg
lods
dec
mov
xor
int
insl
adc
cmpsl
mov
lahf
or
je
ret
lock
and
fdivr
mov
sahf
loope
inc
stos
sbb
mov
push
mov
pop
dec
xchg
repnz
cmp
add
cmp
jne
js
leave
mov
inc
mov
int3
cltd
sub
iret
jbe
mov
nop
fsubr
xchg
inc
xorb
mov
pop
cmc
pop
mov
insl
adc
xlat
ret
outsl
sbb
jb
movsb
mov
jp
insl
sbb
dec
push
out
iret
mov
imul
dec
pop
icebp
adc
and
mov
sub
addl
shrb
lret
mov
xor
mov
movsb
push
push
sbb
mov
ret
rcl
dec
add
popa
push
add
inc
mov
mov
push
int
mov
inc
cmpsb
jp
jnp
pop
hlt
push
popa
push
shl
aas
and
test
jg
inc
sbbl
daa
dec
movsl
loopne
xchg
inc
cltd
adc
test
mov
push
mov
iret
hlt
in
pop
js
pop
push
cmpsl
mov
ljmp
mov
and
inc
pop
xchg
push
loop
aas
jmp
shlb
jecxz
movsb
lods
pop
or
aam
and
or
stos
and
mov
sbb
pop
pop
fnstenv
loope
jnp
xor
xlat
or
je
lret
push
stos
aaa
and
int3
mov
not
fsub
sahf
mov
sarb
mov
xchg
lods
sbb
aam
mov
xor
ret
icebp
adc
mov
nop
mov
not
cs
push
dec
mov
jl
je
inc
mov
inc
ds
and
lcall
outsb
cmp
fmulp
pop
cmpsb
es
int3
pusha
adc
mov
inc
inc
inc
aaa
fistpll
nop
jae
mov
insb
mov
aas
jns
or
pop
push
xchg
hlt
add
je
call
adcl
push
repz
ret
adc
lods
loop
outsb
es
nop
xor
pop
and
sub
sub
sub
dec
cmp
cmpsl
iret
xor
fimuls
push
dec
pop
ss
jns
jl
adc
mov
lods
xchg
daa
test
repnz
sbbb
ss
icebp
popa
add
outsl
push
jo
jp
movsl
negb
and
xchg
push
out
into
and
loope
push
insb
into
pop
rcrb
adc
xchg
fwait
push
xor
push
jnp
ljmp
and
mov
pop
sub
pop
inc
pop
mov
dec
enter
jp
push
stc
sar
mov
xor
imul
mov
mov
xchg
mov
sub
test
cmp
and
cmp
out
cmpsl
mov
mov
jmp
loop
out
dec
mov
sbb
lods
dec
mov
push
test
jae
mov
call
push
lods
and
pop
mov
lret
into
push
jns
aas
pushf
xor
push
mov
outsl
dec
xchg
xor
cmc
sti
subb
loop
dec
icebp
mov
pop
popf
jns
push
lods
fwait
cwtl
pop
push
mov
mov
dec
sub
pop
add
mov
xlat
iret
aad
fwait
inc
cwtl
call
les
cmp
popf
xchg
sbb
dec
imull
push
orb
lods
out
or
mov
lret
iret
push
pushf
adc
adc
mov
aam
outsb
insb
mov
repnz
push
cmpsb
aas
notl
push
push
sahf
push
cmp
sub
outsl
push
stc
sbb
cmp
rorb
stos
bound
push
pop
push
notl
mov
mov
dec
loope
xorl
das
sbb
mov
jl
fidivl
add
cmp
daa
imul
nop
outsb
rolb
jg
movsl
mov
test
push
jbe
jge
test
jge
neg
arpl
jnp
sbb
dec
sar
push
jp
mov
fldcw
aas
into
cli
adc
sub
jae
lea
bound
cmp
stc
xchg
adc
jns
push
xchg
sbb
test
lea
add
sub
and
cmpsb
cmpb
into
adc
stos
loopne
mov
jge
pop
ds
pop
mov
into
push
jmp
and
mov
shufps
mov
ja
jg
inc
add
xor
xchg
jg
repnz
inc
pop
test
and
mov
mov
pop
and
fadd
loope
pushf
cmpsl
loope
jbe
lock
dec
jae
and
jge
lea
fsubs
in
or
aam
jae
out
rcr
xchg
jae
jecxz
and
mov
inc
dec
insl
data16
sar
adc
push
mov
sub
roll
or
insb
sbb
or
cmp
pop
test
ficoml
dec
pop
leave
xor
out
in
jns
inc
cmp
lods
pop
fsub
ljmp
outsb
sbb
clc
or
arpl
outsb
cmp
sti
mov
test
testl
push
orl
push
push
es
push
cmc
cltd
rep
fs
xchg
jne
add
cmp
jne
sub
push
mov
enter
test
sub
or
call
movsl
icebp
xor
cmp
pop
into
mov
pusha
sbb
add
jge
inc
push
clc
pop
lods
mov
arpl
lcall
sbb
sub
cltd
pop
enter
ja
mov
jne
cmp
dec
out
sbb
in
gs
sbb
aad
inc
xchg
inc
dec
push
sub
lock
xchg
push
jg
push
in
sub
inc
push
data16
push
jle
push
add
or
mov
push
pop
jge
mov
orl
lods
fildll
adc
and
enter
loope
mov
xchg
or
jne
outsb
mov
inc
shrl
mov
adc
dec
mov
movsb
sbb
ret
jecxz
nop
and
add
mov
xor
jle
push
xlat
ljmp
arpl
rolb
rclb
in
pop
icebp
dec
push
dec
fs
fistl
inc
fisttpll
pop
call
pop
imul
aam
sub
js
les
xlat
and
std
hlt
mov
out
inc
xlat
ds
add
test
xor
sub
add
shlb
mov
sub
cltd
push
stos
push
pop
outsl
and
dec
xchg
fs
inc
nop
xchg
cltd
ljmp
aam
pop
push
sub
jl
lds
push
outsb
fs
sbb
notb
or
sbb
xchg
sub
in
data16
xchg
hlt
sub
inc
int3
loopne
fstpt
pop
mov
push
repz
fs
or
je
lahf
orb
jl
hlt
jne
pop
call
mov
push
cli
lods
or
dec
lahf
adc
out
push
cltd
or
mov
xor
fwait
cmp
sbb
movb
out
test
test
push
sbb
jp
mov
sti
push
xchg
iret
movsl
add
push
cwtl
jns
sbbb
xchg
cli
repnz
pop
shrb
xor
fwait
inc
aam
fs
mov
mov
fistpl
fcmovu
jno
mov
mov
notb
into
mov
cmp
pop
leave
cwtl
scas
jmp
xchg
outsl
fs
cmp
push
es
mov
insl
imul
xor
lock
sbb
mov
add
push
adc
les
call
adc
xor
cmpl
or
pop
lods
cld
pop
lods
scas
insl
rol
test
out
xchg
mov
add
js
daa
nop
fmul
mov
sub
shrb
pop
mov
dec
int
xor
movsb
jnp
lcall
xor
push
int
pop
sbbl
mov
ficoml
cld
sbbb
push
lds
xchg
adc
mov
stc
inc
mov
xchg
int3
pop
xchg
or
in
pop
fisttps
dec
lds
in
xchg
push
clc
mov
sub
xlat
aad
add
sbb
sub
shll
test
push
mov
fucomi
outsl
out
xchg
fs
mov
fsincos
and
into
vfnmsubps
xor
sub
test
mov
xor
jo
scas
jl
or
jmp
je
xor
xchg
fsts
pop
in
jne
jbe
inc
push
pop
shl
mov
out
push
stos
cmp
stos
adc
xchg
mov
scas
and
sub
xor
ret
mov
and
xor
xor
mov
into
lock
dec
fwait
scas
cmpsb
xorl
pop
ds
push
add
test
ja
add
jb
nop
cs
nop
hlt
jne
imul
aas
jl
ss
lcall
cmpsb
mov
pop
adc
or
aaa
sub
rcll
add
cmp
addr16
mov
pop
xor
fistpl
nop
add
out
cmc
push
xchg
sbb
mull
push
ret
inc
mov
fs
mov
out
or
imul
das
enter
sbb
push
inc
mov
cltd
jecxz
jl
sub
mov
xchg
out
mov
xor
faddl
in
lods
inc
scas
notb
subl
ss
xlat
xchg
sbb
or
in
dec
shll
lock
pushf
in
mov
mov
push
sub
addr16
int
inc
jae
insb
fs
clc
and
lahf
hlt
mov
sahf
call
jg
dec
lock
mov
add
rorb
or
inc
push
cmp
sbb
dec
outsl
loopne
rorb
mov
cld
jp
sub
clc
push
gs
xchg
sbbb
jnp
dec
frstor
lods
frstor
fs
aaa
and
int
cmp
jmp
cli
scas
enter
ret
push
outsl
cmpsl
pushf
and
fnstsw
cmc
mov
dec
or
pushf
xlat
fidivrs
inc
jb
mov
clc
adc
lds
frstor
cs
cmpl
aaa
jb
je
inc
inc
adc
adc
gs
roll
nop
scas
xchg
add
cmp
adc
mov
xchg
fcmovbe
add
xor
mov
cmp
int3
negb
test
lret
dec
or
imul
dec
insl
je
mov
imul
mov
popf
shlb
movsb
scas
pop
xchg
ja
jmp
mov
cmp
mov
and
cmp
iret
jb
lds
out
loop
fdiv
xlat
sub
xorb
pop
test
push
jecxz
dec
xor
inc
jmp
cltd
xorl
cmp
in
enter
add
xchg
outsb
rclb
lea
bound
xchg
sahf
outsl
idivb
gs
mov
lock
fldenv
xchg
popf
icebp
mov
fldenv
sahf
dec
filds
mov
in
inc
into
and
dec
into
int
xor
arpl
mov
push
push
xchg
shr
mov
push
stos
pop
imul
les
clc
mov
aas
add
push
in
in
hlt
js
xor
rorl
dec
lods
and
and
or
mov
mov
stos
scas
out
pop
mov
inc
push
loopne
nop
mov
and
cltd
jbe
sbb
push
push
mov
xlat
test
and
adc
push
pop
xor
push
cmpsl
push
jbe
inc
pop
adc
popf
or
push
push
cs
shr
push
mov
and
call
adc
imul
jb
xor
adcl
jmp
into
jmp
das
int3
test
loopne
jge
mov
push
dec
testl
enter
xchg
cmp
outsl
loopne
into
xchg
push
jne
lret
add
gs
pop
dec
fdivrs
push
ss
int
outsl
push
jbe
mov
scas
add
test
mov
stos
inc
push
std
adc
push
lret
xchg
inc
iret
adc
or
xchg
in
lahf
cmp
sub
iret
out
ja
pop
mov
movsb
fucomip
inc
pop
mov
enter
iret
mov
and
jge
pop
mov
dec
and
sbb
push
cld
mov
fimuls
inc
pop
pushf
in
push
lahf
aas
xor
xor
mov
je
inc
pop
add
mov
repnz
cmp
insl
jno
ss
ss
ret
popf
pushf
ja
pop
pop
mov
int
repz
xor
sub
enter
inc
loope
dec
stos
sub
pusha
mov
cltd
dec
hlt
or
data16
jecxz
sbb
frstor
and
dec
and
mov
outsb
movsl
sub
mov
jo
out
sbb
push
popa
pop
sub
dec
mov
xor
xchg
xchg
push
stos
mov
sti
test
xchg
jns
mov
aas
ficompl
xor
pushf
dec
add
sub
mov
adc
in
pcmpeqw
out
jg
inc
and
notl
sub
inc
rclb
aad
cmpsb
loope
jp
mov
xchg
push
dec
or
mov
scas
inc
mov
pop
test
adc
xor
xchg
inc
mov
xchg
stos
mov
leave
adc
aam
dec
push
lea
dec
lods
outsb
hlt
pop
sbb
outsl
pinsrw
rorl
jecxz
and
pop
std
adc
aad
adc
rolb
loopne
cmp
ficompl
cmpsb
in
shll
lea
xchg
pop
jne
mov
mov
adc
cmpsl
mov
in
add
sbb
scas
push
call
mov
jmp
push
mov
rol
pop
fnop
aaa
pop
scas
aam
jnp
inc
pushf
ret
subl
fsubrp
int
das
xchg
lret
add
cmp
inc
frstor
scas
xor
fldt
cmp
ds
out
stc
shll
cmpsb
test
out
cmpsl
lret
dec
xor
push
and
stos
dec
xchg
sti
push
xor
lods
pop
imul
cwtl
xlat
jmp
and
pop
add
out
push
sahf
cmp
jns
xchg
xor
jl
arpl
mov
and
js
sub
jecxz
cmp
pop
stos
test
leave
das
fsubrl
push
test
dec
and
cmpsl
xor
leave
xchg
fisttpl
aaa
sub
adc
dec
pop
push
lcall
mov
repnz
push
lds
gs
das
cmp
pop
or
cmc
outsl
dec
add
mov
gs
pushl
mov
repnz
add
jg
xor
xor
push
or
cltd
sti
cmpl
xchg
add
test
xchg
insl
dec
push
xor
int
sahf
ret
push
sub
dec
xchg
sub
pushf
cmp
add
bnd
imul
dec
in
shrb
fildl
dec
imul
sbb
push
mov
subb
cwtl
pop
or
out
sbb
shlb
bound
dec
mov
jnp
cmpl
xor
xor
sti
cmpsl
lret
mov
dec
dec
lcall
add
adc
out
xor
scas
mov
dec
mov
arpl
push
dec
pop
adc
add
add
jecxz
leave
add
out
scas
test
je
aad
and
mov
dec
mov
lret
shr
lods
and
dec
out
call
sub
sub
xor
dec
arpl
jnp
sbb
sub
popa
cmp
imul
in
mov
rcrb
jnp,pn
je
push
sbb
lea
test
sub
xor
mov
sub
scas
std
lcall
in
jo
mov
cwtl
jnp
shrl
sarl
lahf
mov
mov
and
cmp
push
ljmp
jg
mov
push
mov
pop
ss
insb
ret
sbb
pop
ret
fldcw
out
sbb
iret
das
mov
jle
shll
aaa
and
adc
mov
loop
cltd
or
repnz
or
stc
fs
out
or
js
cwtl
xchg
andnps
push
in
repnz
dec
aad
jmp
loope
cltd
fdivs
jae
mov
push
push
cwtl
push
push
cmpsl
jecxz
add
movsl
loope
lock
dec
jae
repnz
loopne
fnstcw
lods
cmp
xor
lret
aam
js
push
ret
lret
mov
fdivrl
mov
in
ja
setl
pop
outsl
adc
jae
jae
jmp
loopne
xlat
or
cmp
mov
dec
pop
pop
dec
and
call
mov
inc
inc
or
jp
and
lds
fwait
xor
pushf
cmpsb
xor
sbb
and
push
out
insb
pop
rorl
push
jb
add
rcrl
sahf
dec
inc
push
lds
je
push
dec
insb
cmp
push
nop
loope
jnp
orb
out
push
push
jno
or
jg
pop
lods
add
fldl
and
inc
cltd
out
rorb
mov
stos
inc
jo
dec
cmp
push
xchg
insb
jmp
pop
subb
cld
fwait
int
dec
sub
adc
popf
fisubs
out
outsb
mov
mov
and
leave
gs
jg
add
lock
pop
int
ja
mov
rcrl
popf
inc
lods
adc
dec
out
aam
adc
lods
mov
adc
pop
inc
fnstcw
push
and
push
mov
repz
movsl
cld
test
mov
mov
push
sbb
ja
xlat
dec
jno
leave
fcom
or
loopne
lcall
divb
imul
je
mov
xchg
and
imul
xchg
pop
jns
or
add
fidivs
sbb
xchg
xchg
fisttps
xchg
mov
jl
jae
jne
arpl
addr16
jnp
or
ror
inc
dec
jae
shl
jecxz
add
roll
jmp
adc
lea
aad
cwtl
push
jl
push
ds
shll
decl
in
lock
push
jb
movsl
rorl
pop
mov
sbb
into
mov
lahf
es
mov
in
nop
repz
mov
adc
loope
ficompl
lret
inc
sub
lods
subl
adc
sbb
imul
fisubl
mov
les
xor
pop
out
or
xchg
idivl
mov
ss
xchg
scas
sti
push
sarl
jo
scas
add
hlt
out
fwait
pop
pop
pop
lahf
dec
xor
sar
ret
adc
fadds
dec
mov
mov
add
repz
mov
adc
insb
repz
mov
pop
push
loopne
push
int3
add
shll
inc
popl
sub
out
bound
mov
inc
lea
push
data16
mov
push
inc
sbb
gs
test
cli
lret
imul
in
sarb
adc
sbb
mov
daa
add
push
adc
sub
les
popf
xor
dec
push
lods
hlt
mov
fwait
mov
pop
xchg
adc
lea
insl
inc
sbb
fmul
or
jmp
adc
adcb
pop
mov
sbb
loope
jae
stos
popf
pop
jae
int3
pop
scas
jmp
mov
jp
mov
repz
mov
add
mov
fwait
xor
add
add
clc
dec
clc
mov
lret
in
ja
test
sub
js
test
xor
and
push
aas
test
xchg
addr16
push
xchg
inc
and
adc
inc
sub
ret
pop
aaa
pop
adc
xor
sbb
std
cmpsl
mov
add
pop
mov
aaa
ja
fsts
mov
lret
fsubrl
mov
push
sbbb
into
lret
arpl
push
mov
jb
add
mov
test
lea
pusha
fsubs
sub
ds
sbb
jge
jmp
loopne
cs
jp
notl
insl
icebp
in
dec
dec
push
fld
or
pop
mul
insl
fnsave
pop
divb
add
push
add
cld
adc
aam
push
sahf
jp
sbb
mov
push
scas
out
inc
sbb
icebp
test
sub
cwtl
sub
pusha
xchg
fsts
or
popf
mov
sarl
enter
mov
and
pop
lea
inc
sbb
mov
insl
or
leave
scas
test
xchg
xor
push
dec
push
xlat
insl
mov
inc
cmc
xor
mov
ret
movsb
mov
lds
loope
fstpl
insl
pop
and
scas
mov
imul
xor
les
sbb
sbb
dec
push
or
cmc
dec
arpl
gs
stos
jo
and
pop
xor
hlt
ret
adc
in
divl
add
loopne
icebp
add
push
out
adc
pusha
adc
in
mov
insb
adcl
stos
data16
pop
loope
lods
inc
mov
mov
xchg
pushf
push
mov
into
stos
aaa
or
out
mov
ja
bound
add
dec
cmpb
xor
imul
jmp
movl
adc
cmp
dec
sub
add
pop
push
adc
mov
clc
pusha
jo
jns
sub
jge
fnstenv
in
xchg
imul
push
ret
stos
into
cmpsl
bnd
fistpll
pop
loop
push
in
lods
shll
das
int3
shll
iret
iret
xchg
out
add
mov
xchg
clc
aas
pop
rcll
cmp
fdivs
sub
test
cvtpi2ps
repnz
dec
or
test
inc
xchg
xor
sbb
cmp
cmovg
jnp
pop
cltd
mov
jno
mov
hlt
sarl
inc
adc
fucomip
aaa
shr
std
jg
jmp
rcll
sub
fisttpll
jns
stos
sub
dec
cmpb
roll
shll
mov
mov
test
idivl
xchg
fnstcw
sub
push
dec
sub
scas
xchg
repz
movsb
push
or
mov
call
fsubr
mov
mull
daa
mov
xchg
add
in
mov
enter
lods
inc
insb
out
mov
or
aam
sbb
mov
mov
das
xor
xchg
cli
cmp
push
leave
pushf
xor
pop
dec
cmp
mov
pop
sbbb
loopne
lock
and
push
sbb
add
mov
cmc
cmc
insb
movsl
jmp
mov
mov
repz
call
xchg
cmpsb
xor
and
fistpll
pop
pop
mov
and
mov
insb
cmc
or
js
push
js
das
imul
add
mov
cld
aam
push
xchg
orb
pop
jb
sbb
push
adc
sub
outsb
out
sahf
xchg
mov
icebp
int3
out
jg
fiadds
cmp
lds
sub
or
sahf
test
add
iret
cltd
push
hlt
repnz
or
mov
and
pop
pop
sub
call
loop
dec
xchg
inc
cmp
shlb
imul
lret
lods
cmp
xor
add
cld
jp
mov
lret
xchg
xor
subps
pop
sub
fwait
movsl
push
mov
pusha
inc
jmp
es
in
xor
jb
cmpsl
inc
out
pop
out
pop
lret
mov
and
and
loopne
pushf
cld
into
jg
ss
inc
data16
sub
and
pop
rorl
pop
sub
pop
shlb
stc
push
and
gs
cmp
pusha
gs
dec
xchg
xrelease
ja
sahf
gs
pushf
hlt
paddb
mov
aad
fcomps
lods
popa
cwtl
mov
testb
xor
mov
mov
in
push
pushf
fucom
int3
insb
sub
loope
out
lahf
repz
lret
pop
fiaddl
lock
aas
cli
fucom
mov
cmp
or
shl
add
mov
ja
cwtl
push
arpl
xor
test
push
cld
cmp
imul
dec
cmp
pop
jecxz
or
fcoml
fidivs
leave
cmp
arpl
push
xor
movsl
test
das
and
ret
aam
rcrb
cmpsb
push
aaa
lea
xchg
mov
mov
adc
loopne
dec
stos
add
in
scas
sub
cmpsb
fsub
int
mov
inc
push
movl
lret
xor
sbb
push
emms
dec
adc
outsl
add
lods
into
mov
sbb
jmp
stos
xor
push
jmp
sbbb
loop
gs
jne
iret
mov
cmpsb
mov
sbb
daa
test
adc
mov
test
sbbl
rep
adc
and
mov
mov
or
inc
insl
nop
jle
push
fs
pop
cmp
imul
cmpl
js
sub
jecxz
mov
mov
xor
mov
pop
popa
cli
loopne
dec
incb
xor
push
or
xchg
jae
jno
and
daa
sbb
movsl
les
mov
mov
testb
xor
cs
dec
pop
xor
adc
ds
adc
out
mov
sbb
stos
cli
cmc
inc
sub
mov
arpl
das
sbb
lds
cwtl
sub
aad
lret
adc
imul
fs
jl
pop
mov
test
sbb
dec
push
clc
call
mov
jmp
in
and
cmp
jbe
add
xlat
out
sbb
and
jge
pop
bnd
mov
lods
ret
pop
add
mov
into
or
sub
pop
jle
sbb
cltd
dec
or
sub
fs
gs
mov
xchg
lret
sbb
cwtl
sbbl
notl
out
subb
add
jbe
sub
mov
jmp
shlb
push
pop
leave
lcall
jecxz
xor
mov
addr16
rcrb
sbb
dec
xchg
jnp
lods
xchg
clc
ret
and
cmp
outsb
aam
rol
ja
jmp
test
lret
jb
hlt
fwait
push
cmp
jg
enter
sti
dec
mov
repnz
jg
or
add
pop
shlb
pop
inc
daa
cs
cmp
daa
in
push
jo
add
mov
xor
mov
jne
inc
inc
adc
cmp
mov
sub
jmp
push
notl
sti
jg
imul
or
mov
xchg
cmp
cmp
ret
push
enter
bound
enter
sti
icebp
rcr
outsb
mov
int
xor
xchg
and
dec
outsb
fnstenv
push
push
push
jo
mov
pop
push
jo
push
pushf
repz
popa
cmp
push
ret
dec
stc
push
mov
xchg
outsb
gs
inc
push
or
pop
fwait
cld
scas
mov
lcall
and
mov
xchg
scas
testl
lcall
repz
jo
rorl
mov
sbb
jnp
xchg
imulb
xchg
push
ret
xor
js
mov
ss
jns
mov
out
clc
lods
ret
test
ret
dec
mov
js
jmp
test
cli
cmp
mov
push
mov
fnstenv
cmpb
in
mov
test
loope
sbb
cmpsb
jecxz
and
mov
pop
mov
add
jo
sub
orl
push
andl
mov
jle
add
inc
adc
pop
dec
stos
dec
jns
adc
mov
lds
jle
or
pop
xor
lret
idivb
mov
inc
xorb
fwait
mov
fnstsw
aad
pop
mov
cmc
or
lret
jae
call
sbb
xchg
loopne
lahf
mov
jae
jg
mov
add
test
push
mov
push
call
orb
push
cmp
mov
and
dec
dec
xchg
call
test
mov
enter
pop
test
lods
cmp
or
stc
mov
sub
cli
jae
stc
lods
xlat
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
dec
push
sbb
bound
pop
bound
iret
lods
into
loope
or
jg
filds
jle
xlat
pop
pop
jg
sarb
xchg
or
jg
push
hlt
mov
lcall
jb
push
inc
push
xchg
std
fadds
add
sbb
pop
outsb
shl
xchg
xchg
sti
push
jmp
lcall
jns
and
push
jbe
addr16
xchg
lods
loopne
pop
xchg
cmp
loope
and
adcb
sbb
scas
jb
add
xor
aam
fs
push
enter
and
cmp
movsb
popf
mov
jns
and
push
mov
push
pop
fildll
and
insl
lods
fwait
cmp
out
aam
add
jnp
loop
pop
ds
mov
add
std
dec
mov
es
inc
leave
xor
test
mov
outsb
iret
icebp
dec
xchg
jl
ret
add
dec
frstor
add
push
dec
cwtl
inc
aad
lea
pop
push
lods
jne
push
movsl
je
aam
and
xlat
jmp
movsl
repz
push
xchg
pushf
mov
sbb
lods
cmp
push
pusha
xor
and
imul
sarb
xchg
cmpsl
aam
fs
jl
and
notl
std
roll
inc
mov
dec
jae
subl
pop
mull
mov
int
pushf
adc
addr16
aas
push
mov
sub
outsb
lea
mov
fwait
sub
xchg
out
cmc
rcll
out
pop
imul
bound
mov
push
mov
out
call
push
test
dec
jno
pop
and
sub
shlb
xlat
lret
sbb
test
imul
arpl
pop
xchg
push
pop
in
int
mov
aas
lahf
js
fidivs
dec
xor
sbb
iret
pop
in
add
xchg
mov
mov
sub
daa
pop
outsl
scas
call
sbb
lods
push
xchg
cwtl
dec
adc
dec
mov
lods
jb
xchg
outsb
iret
push
gs
mov
xchg
sbb
addr16
loopne
into
hlt
into
lea
inc
or
dec
jecxz
sbb
adc
inc
movsl
jbe
sbb
outsb
lcall
add
cwtl
fsub
adc
push
or
xchg
push
mov
fs
cmc
xchg
xlat
inc
or
xor
mov
in
add
jne
cmp
dec
push
pop
inc
mov
jb
adc
jbe
inc
gs
sti
imul
jbe
or
stos
mov
dec
xor
dec
xchg
cmp
push
shrl
xor
lds
outsb
hlt
jb
sub
bound
inc
mov
in
and
out
cmc
mov
out
inc
scas
push
ljmp
rolb
inc
aas
pop
stc
push
inc
loope
pop
imul
gs
loope
add
jnp
mul
dec
sbb
nop
aaa
pop
xlat
fnstcw
das
fists
push
das
cli
mov
cmpsl
xchg
in
push
lock
in
mov
xor
pop
xor
movsl
xchg
sbb
dec
cmc
ja
lcall
lret
xlat
test
filds
aaa
rorl
cld
ds
dec
xor
xor
stc
xchg
cld
loop
mov
cmp
movsl
push
and
jp
jp
adc
cmp
ljmp
mov
ficomps
rclb
xchg
ds
add
out
pop
push
jne
into
xor
pusha
je
popl
outsl
sbb
shrl
bound
xchg
xchg
andb
fdivr
cmp
push
mov
inc
inc
or
fnstcw
lret
aaa
push
pop
push
jmp
xchg
iret
push
sarb
sbb
cli
jns
mov
lcall
cltd
movl
rcrb
int
data16
ror
push
out
popa
and
or
ss
insl
inc
idivb
adc
mov
mov
das
and
pop
fdiv
test
pop
aam
and
cld
cmp
pop
pusha
or
xchg
jnp
and
cmp
pop
adc
sbb
sbb
clc
adc
mov
pop
sbb
mov
xor
add
lock
cmp
inc
movsb
test
sub
orl
inc
or
lock
jp
notb
inc
mov
leave
jo
mov
aaa
rorb
in
jg
inc
fnstsw
into
out
mov
outsl
xor
mov
out
push
repz
xchg
push
cld
dec
inc
dec
test
push
fsts
movsb
add
adc
add
gs
push
mov
cmp
inc
adc
negl
dec
cmp
sub
inc
push
leave
inc
enter
inc
popf
lods
xlat
dec
pop
jne
jge
jnp
inc
mov
gs
insb
outsb
pop
inc
sahf
cmp
insl
stc
lods
and
fdivs
mov
movsl
dec
je
mov
lods
xchg
iret
push
pop
mov
push
out
mov
jbe
mov
lret
loopne
sbb
insl
sbb
in
dec
cli
add
mov
mov
fwait
dec
cwtl
cmp
pop
add
jecxz
sub
sbb
jae
out
adc
sbb
shl
shll
mov
or
mov
mov
add
in
or
mov
mov
fildll
cmp
in
div
push
rep
xlat
std
leave
jnp
rcll
mov
sbb
xor
fdivr
mov
imul
dec
lods
jmp
or
sbb
aam
icebp
int3
dec
jp
roll
jb
sub
jb
mov
fs
mov
and
cltd
xor
xor
push
int
lea
sub
xor
add
pop
int3
insl
xchg
ljmp
dec
stos
iret
mov
jg
repnz
aam
add
les
clc
pushf
inc
inc
mov
mov
cmc
out
xchg
mov
hlt
mov
mov
jbe
aas
mov
mov
scas
in
mov
pop
mov
mov
inc
xlat
arpl
mov
push
cmp
into
and
sub
cmp
mov
mov
aaa
dec
shll
or
cltd
add
mov
stos
pop
rclb
cmp
addl
jg
sub
je
cltd
loopne
rorb
push
jnp
adc
push
mov
xchg
in
clc
fwait
or
dec
lret
out
push
mov
push
fsubl
sub
cmp
out
or
xor
sahf
mov
mov
mov
ss
push
int3
cmp
clc
data16
pushf
outsb
outsl
adc
test
sub
fistl
mov
pushf
cmc
enter
test
xchg
sar
jno
push
loop
add
inc
adc
in
push
int3
cmp
repnz
scas
jne
in
aas
adc
push
mov
mov
popf
pop
cwtl
inc
push
adc
rorb
inc
push
jle
lahf
cmp
or
xchg
push
sbb
pop
push
out
jle
add
xor
lret
insl
xabort
lcall
xchg
cmp
inc
cmpsl
lds
mov
xlat
jb
xor
ss
and
jecxz
mov
out
push
adc
push
and
cmpsl
bound
mov
inc
stos
sbb
jo
outsl
sub
dec
icebp
xchg
sub
or
xchg
sbb
mov
and
mov
push
push
fistpll
cmp
push
fistps
das
jl
sbb
cli
add
jnp
xchg
subb
loopne
test
cmp
cwtl
cld
das
cli
add
dec
ficoms
xlat
lcall
pop
push
mov
negl
pop
in
shll
and
dec
xor
add
xor
add
pop
pop
or
test
int
jmp
mov
fwait
scas
jns
outsb
xchg
mov
lcall
and
movsb
scas
mov
xor
sbb
inc
xchg
mov
test
push
jbe
cmp
rolb
sbb
cmc
xchg
loopne
mov
inc
out
repnz
in
es
sbb
lcall
cld
pushf
cwtl
and
push
xchg
mov
imul
call
inc
enter
aam
pop
mov
mov
xor
icebp
push
insl
jnp
add
imul
mov
shrl
in
aad
cmpsl
mov
adc
clc
cmp
fistps
pop
fistl
jecxz
xchg
sti
cmp
dec
ss
and
shlb
outsb
dec
mov
es
shrl
xorl
rcrl
in
cmc
bswap
sbb
mov
addr16
adc
sti
add
inc
dec
mov
add
mov
cmp
mov
test
lds
lahf
add
add
movsl
mov
rclb
lea
or
insl
cmp
out
scas
mov
das
subl
sbb
fisubrs
xchg
jnp
leave
and
push
push
aaa
in
push
mov
pusha
sahf
imul
add
fdivrs
jno
pop
jp
mov
jp
je
sbb
loope
and
and
mov
or
bound
sbb
rolb
push
rorl
cmpsb
mov
mov
clc
jmp
insl
xor
gs
stos
xchg
adc
aas
out
repnz
or
xchg
mov
mov
fwait
clc
dec
inc
psubusb
iret
rcll
add
dec
rorl
gs
addr16
jns
int3
sbb
test
and
or
std
arpl
sahf
push
xchg
mov
mov
nop
push
push
shl
addl
pop
inc
mov
stc
in
imul
cmpsb
and
rolb
icebp
push
int3
arpl
xlat
cltd
push
push
es
xchg
push
mov
mov
or
mov
flds
idivl
out
and
mov
rcrl
sbb
adc
xlat
pop
daa
mov
or
shrb
test
or
leave
in
loope
movsl
fisttpl
ret
addr16
fucomi
dec
jnp
repz
dec
add
mov
loope
mov
ljmp
ficoml
das
cmp
sbb
sub
fmulp
and
rcll
add
loope
retw
and
in
push
add
xor
ficoml
pop
xchg
dec
cmp
sub
xchg
mov
nop
lds
testl
sbb
cli
cmp
lcall
in
stc
mov
mov
scas
test
cmp
pop
or
sbb
adc
cltd
mov
jg
mov
js
cmpsb
jge
fwait
call
and
push
inc
sbb
lock
mov
mov
jb
mov
fmull
adc
pop
out
xchg
je
fidivrs
andb
ja
call
and
inc
adc
push
ficompl
push
xchg
jmp
call
or
addr16
jge
cwtl
xchg
push
pop
or
dec
shll
adc
les
enter
inc
sti
in
pop
and
mov
js
out
inc
out
mov
lret
dec
dec
lcall
loopne
das
mov
aas
or
into
dec
ficompl
scas
fcompl
imul
jmp
iret
mov
cmpsb
inc
in
push
or
adc
nop
dec
adc
and
jle
push
pop
push
adc
mov
lahf
sbbl
icebp
lea
rolb
jmp
sbb
das
dec
push
pop
jnp
test
dec
out
jno
inc
icebp
jbe
nop
push
testl
and
push
push
fbld
dec
incb
lret
in
cmp
xchg
add
mov
pop
xor
or
mov
clc
sub
scas
sub
mov
out
ja
add
icebp
jbe
scas
cmp
mov
cmp
inc
sbb
nop
jecxz
test
ja
push
daa
sbb
xchg
fmuls
dec
dec
lods
or
jo
xchg
push
out
jno
lea
aam
pop
outsl
jle
dec
mov
popa
mov
sbb
push
movsb
jp
or
mov
jp
mov
addr16
mov
aaa
sbb
negl
stos
in
mov
jmp
and
cwtl
sbb
js
sub
stos
mov
cmp
dec
shll
push
pop
inc
xor
sub
push
ret
hlt
pop
or
int
xor
fwait
jns
mov
adc
pop
daa
mov
jmp
mov
xor
inc
clc
add
inc
fs
mov
std
movsl
fdivp
imul
fcmovne
mov
lods
leave
test
rol
push
lods
cmp
mov
hlt
outsl
sub
outsb
push
fldl
pop
jb
push
es
daa
push
push
cmpb
dec
mov
aam
push
sbb
inc
mov
mov
mov
data16
jnp
fcos
ja
xor
jmp
mov
jnp
ja
cmc
cmp
pop
hlt
call
outsl
fcomp
out
movsl
adc
lds
aad
jnp
into
shrb
nop
test
repnz
xor
mov
dec
mov
cs
cltd
sub
pop
cmc
popa
shll
sbb
cmp
stc
sbb
lcall
insb
sub
divb
xchg
fildll
jg
fistpl
sbb
scas
adc
lcall
jp
or
adc
sbb
aam
std
in
xchg
loopne
sub
and
testl
test
daa
push
in
test
inc
fisttpll
xor
mov
dec
pop
cmp
aad
pop
xchg
inc
lods
pop
inc
repz
je
movsb
int
mov
add
or
push
inc
cmp
jecxz
pop
lcall
push
xchg
adc
mov
sahf
inc
pusha
adc
push
pop
dec
or
sbb
ljmp
jb
rclb
xorl
jb
xchg
or
out
or
sbb
xchg
cli
add
cmp
lret
or
test
in
add
ret
movsb
mulb
dec
in
jg
fdivl
add
cmp
daa
mov
push
push
push
jae
push
icebp
mov
lahf
add
add
push
xor
jnp
pop
add
jo
lock
ljmp
dec
dec
push
adc
out
adc
xor
jmp
xchg
or
mov
lret
mov
pushf
ret
inc
sbb
cmp
jecxz
mov
mov
cltd
push
andb
add
dec
mov
cmp
dec
inc
adc
dec
test
dec
fmull
dec
cmc
cmp
dec
cmp
subl
and
mov
sbb
insb
push
adc
xchg
addr16
xchg
popl
jmp
cli
or
mov
stc
sbb
jb
xchg
inc
enter
in
jp
outsl
or
fldcw
pop
mov
sub
xor
std
mov
adc
je
add
sub
rorb
jmp
xchg
mov
push
hlt
insl
cmp
loop
cmp
mov
add
push
cmp
andl
jp
stc
test
stos
test
jne
addr16
mov
and
or
pushf
lods
sahf
push
clc
in
adc
inc
scas
in
push
lods
jge
pop
sub
mov
pop
and
xchg
iret
xchg
dec
fsubl
xchg
icebp
inc
push
mov
or
dec
lret
and
ret
sub
mov
daa
ja
loope
mov
inc
dec
fs
ret
jp
aad
mov
imulb
sub
jae
dec
sub
cmp
mov
call
pop
icebp
xbegin
lea
sbb
sti
test
test
dec
dec
ljmp
xor
clc
xchg
repnz
mov
mov
pop
pop
cwtl
adcb
mov
jle
ss
dec
scas
inc
pop
sarl
adc
pop
in
ljmp
adc
fs
imul
xchg
sub
or
je
addb
shrb
mov
test
jl
sbb
repz
and
xor
or
test
add
popa
scas
inc
rcrl
pushf
pop
or
sbb
out
movups
mov
jnp
inc
adc
jns
xchg
pop
adc
xchg
stc
std
fsts
jp
fiaddl
aam
adc
repnz
movsl
jmp
push
dec
adc
pop
and
push
insl
std
and
shrl
mov
push
out
les
cmpsb
sbb
push
mov
je
out
xor
push
mov
in
dec
nop
push
push
mov
je
insb
adc
xchg
push
les
sbb
fdivs
and
cld
popa
xor
stc
mov
jns
and
test
sbbl
ljmp
push
int
pop
rcrl
inc
sub
mov
popa
pop
insl
fcmovb
sbb
mov
pop
cltd
aad
xchg
sarl
out
jo
out
mov
std
jg
std
xchg
pushf
call
adc
subl
mov
jno
leave
jb
clc
fimull
test
jecxz
je
cmp
xor
inc
adc
clc
add
pushf
add
lcall
adc
hlt
xor
pop
pop
sbb
dec
xor
add
into
scas
pop
xchg
lahf
mov
daa
jo
repnz
sbb
xchg
inc
ljmp
repz
jo
popf
sub
fisubrl
bound
lds
shrb
push
leave
and
jbe
decb
xchg
cld
test
mov
jecxz
jle
shr
nop
fstps
std
adc
inc
mov
test
test
pop
push
lcall
xchg
cltd
inc
jl
lcall
mov
flds
scas
lcall
xor
sbb
dec
ror
test
sub
test
mov
dec
lcall
dec
add
popl
pop
sbb
push
popa
cmc
dec
jnp
mov
adc
dec
pusha
dec
sbb
jbe
fsubr
mov
sub
or
outsb
or
mov
sbb
sti
xchg
les
je
les
mov
std
adcl
cli
mov
testl
mov
sbb
outsl
daa
add
mov
aad
nop
test
pop
jns
and
inc
call
lds
or
cltd
mov
xor
aas
push
test
dec
ficomps
sar
popa
jbe
fs
subl
jno
scas
cwtl
xchg
hlt
mov
clc
xor
sbb
adc
rolb
xchg
and
xlat
fisttpll
mov
sub
sub
xchg
adc
mulb
xchg
mov
jge
jmp
mov
kmovd
gs
push
lods
jnp
mulb
scas
mov
int3
js
test
mov
xor
pop
enter
push
or
lahf
lahf
loopne
push
sbb
mov
sarl
jl
adc
xor
push
clc
xchg
inc
inc
inc
sarb
ret
aad
dec
or
shlb
or
das
jp
inc
mov
movsb
push
in
lcall
js
mov
data16
mov
mov
cmp
or
ss
jae
xchg
xlat
fistl
pop
mov
mov
lods
orl
cs
jg
dec
mov
jecxz
push
aam
outsb
push
push
lahf
test
ljmp
fisttpll
mov
aas
icebp
and
fsubl
and
cmp
test
xor
xchg
ret
repz
push
lret
cwtl
icebp
mov
imul
inc
pop
jo
sub
and
in
fisubrl
fnstenv
xchg
sbb
dec
pop
push
lea
pop
sbbb
xchg
jg
cs
sti
fucompp
mov
ret
pop
lret
ljmp
mov
imul
sbb
into
test
cmc
imul
or
es
mov
aad
je
adc
aas
enter
scas
dec
xor
add
iret
aaa
lea
insb
out
xchg
rcll
jne
clc
adc
add
jbe
add
mov
sub
in
scas
or
add
mov
mov
imul
ret
ret
jle
fiadds
or
inc
rcrb
outsl
or
out
push
push
mov
xor
aam
xor
scas
sahf
pop
loope
scas
cmc
imul
sbb
lods
mov
repz
mov
jbe
mov
popa
mov
popa
mov
sub
xchg
inc
fisubl
sbb
or
test
rolb
jg
repz
sbb
loope
adc
pushf
test
push
inc
outsl
pusha
mov
pop
xchg
sub
cmpsb
inc
inc
jg
stc
idivb
ds
mov
lcall
int3
nop
push
js
adc
push
and
aad
dec
jg
push
lret
mov
jnp
pop
mov
mov
mov
inc
aam
push
test
push
adc
inc
div
xor
jo
repz
ret
xchg
pop
or
jb
cmp
dec
hlt
mulb
mov
xorb
or
adc
loopne
imul
pop
hlt
das
dec
inc
out
or
sbb
add
fsubrl
add
push
scas
in
sbb
or
adc
fisubrs
je
les
xchg
outsb
pop
dec
dec
cmp
mov
ljmp
inc
lea
xchg
out
mov
cwtl
std
lods
add
and
popf
jno
push
mov
outsl
pushl
pop
loope
pop
adc
xchg
add
mov
push
decl
scas
sbb
push
in
sbb
nop
push
imul
xchg
outsb
addl
dec
xor
jecxz
jne
lods
test
mov
jno
cmp
adc
push
fsubrs
stos
pop
dec
mov
sub
andl
pop
pop
inc
inc
scas
out
in
sub
in
mov
xor
jmp
mov
mov
pop
mov
leave
ret
movsl
mov
mov
lock
jno
stc
cmpsl
mov
xor
push
outsb
fstpt
dec
cli
cmc
inc
cmc
sub
add
leave
ds
pop
mov
sbb
ja
and
nop
mov
sbb
cmp
mov
das
nop
testl
and
add
mov
iret
decl
or
jne
cvttps2pi
out
gs
icebp
jmp
inc
sbb
xchg
pop
cli
jge
and
js
mov
ret
inc
loopne
or
lahf
movsl
cmpsb
test
ja
lds
dec
lock
push
lcall
out
cmpsl
and
push
push
cmpb
aam
lcall
dec
push
or
outsb
out
repz
rcr
pop
xor
cmp
setb
push
nop
xchg
out
mov
push
mov
jp
insb
sub
add
and
movsl
arpl
pusha
mov
mov
mov
mov
mov
jnp
pop
ret
nop
jmp
or
jmp
jmp
int3
sub
cmc
mov
mov
ja
pop
mov
dec
imul
ficoml
jo
push
pop
sbb
push
cltd
je
jb
jle
and
imul
and
lods
add
pop
rcll
data16
jb
lock
sub
ss
dec
xchg
int
daa
dec
jb
shr
mov
cli
mov
repz
mov
adc
pop
inc
stc
shrb
mov
jae
out
mov
pop
enter
mov
add
adc
mov
dec
into
pop
push
insb
dec
dec
push
push
insb
insl
mov
dec
inc
push
cmp
mov
cmp
cmp
insl
fsubrl
pushf
ds
mov
jle
call
push
mov
or
cwtl
lods
adc
fsts
nop
lahf
jnp
inc
cmp
jno
sub
cmp
sbb
push
mov
das
cltd
jbe
lock
fsts
std
inc
andl
in
in
std
repnz
out
sbb
popf
jle
mov
mov
js
rcl
push
mov
test
and
sbb
cmp
sbb
pop
bnd
adc
stos
loop
add
movsb
cmpsl
or
jecxz
push
pop
add
pop
push
cmc
imul
xor
dec
add
sarb
ja
xor
or
stos
test
enter
fstl
jno
addr16
mov
cld
cmp
popa
out
adc
movsb
inc
sti
insl
mov
outsl
in
imul
popf
dec
sub
dec
add
outsb
clc
push
and
out
lahf
mov
ss
push
std
jl
or
pushf
loop
dec
mov
das
ret
sti
js
jae
pop
add
adc
jl
xrelease
and
aad
imul
xlat
or
dec
jae
jb
xchg
out
xchg
roll
mov
out
rcrb
mov
fbstp
and
fs
in
add
lods
es
ja
aad
jbe
ret
sbb
cmpsb
mov
enter
jle
fwait
push
dec
inc
pop
pop
jne
or
and
insl
aad
test
pop
mov
jns
add
dec
insl
mov
bound
test
leave
and
fisubrl
mov
jae
jecxz,pt
xorb
stc
mov
xchg
lock
xchg
push
das
movsb
xor
and
iret
in
scas
js
jmp
pop
fmuls
je
scas
pop
icebp
cli
cmp
dec
andl
gs
ret
in
xor
pop
adc
pop
mov
push
mov
int3
push
push
pop
mov
insl
daa
pop
xor
mov
jecxz
dec
fdivrl
pusha
aas
xor
mov
pop
stc
int3
sub
xor
dec
stos
push
adc
inc
fsubs
xor
out
inc
add
pop
dec
dec
pop
ljmp
xchg
mov
cmp
fisubrl
mov
push
in
jnp
push
cmc
test
pop
addr16
jmp
push
scas
mov
mov
add
movsl
data16
jl
push
lock
into
std
xchg
pushf
data16
loop
clc
clc
add
sub
mov
push
push
jmp
daa
xchg
mov
test
call
repz
js
cmp
sbbb
int
push
mov
xchg
insl
mov
test
adc
dec
xor
xchg
sub
xchg
dec
ljmp
inc
jns
lcall
mov
fmuls
mulb
mov
fldenv
xor
rcr
mov
fisttpl
jle
inc
les
lret
pop
push
sbb
pop
daa
test
sub
imul
fcoms
and
mov
push
movsl
aaa
xchg
push
sti
and
adc
fimull
adc
and
and
gs
xor
repz
mov
mov
or
jno
test
in
mov
je
xchg
les
popa
stos
cld
ja
dec
pop
clc
stos
jb
loop
test
xor
jmp
outsb
aas
andl
mov
mov
loop
leave
movsl
das
or
pop
test
xchg
aaa
jbe
rorl
adc
pushf
test
bound
jl
xchg
scas
ja
lods
jo
mov
fimull
adc
jmp
adc
pop
xor
clc
ja
mov
cmp
pusha
shlb
pop
addr16
loopne
int3
xchg
idiv
pop
adc
jg
xchg
pop
jge
int3
dec
aaa
stos
add
rcrb
and
das
cmp
fadds
je
pusha
sub
pop
bound
fwait
ret
iret
aas
jns
sbb
xor
lea
adc
in
leave
and
dec
jl
mov
mov
insb
icebp
push
fstpt
mov
insl
sbb
jne
and
cld
jns
mov
jae
jae
lret
les
jo
add
dec
jecxz
icebp
add
loope
inc
push
push
popa
leave
into
pop
in
or
into
fwait
mov
and
or
push
mov
mov
cld
imul
push
in
inc
mov
xchg
daa
push
jno
push
vpshufd
or
fadds
sub
jbe
cwtl
rorl
or
dec
cmp
cmp
sbb
gs
jmp
pop
inc
mov
dec
jb
fisttpl
mov
rorb
jbe
pop
ffreep
stc
mov
cmpsl
cmc
icebp
insl
cmp
sub
sub
pop
mov
lret
sahf
sbb
add
or
mov
lods
push
mov
adc
inc
test
ret
mov
arpl
jns
cld
enter
xchg
pop
pop
add
dec
int
ja
xlat
jae
sub
imul
dec
mov
mov
or
addl
push
out
jge
lods
in
jp
inc
pop
cs
sti
test
jnp
out
cli
int
pop
jno
shrl
daa
xchg
mov
hlt
repnz
mov
jg
popa
add
das
sbb
aaa
dec
lcall
loopne
pop
mov
xchg
mov
cmp
insl
notl
icebp
sub
clc
cltd
push
adc
dec
jo
and
cmp
mov
aas
movsb
inc
out
fcompl
inc
mov
lcall
roll
mov
mov
int3
push
lret
outsb
in
sarb
xchg
xor
sub
fwait
mov
sbb
cmc
dec
mov
push
adc
add
adc
icebp
pop
sbb
js
fdivrl
or
bnd
adc
xchg
mov
in
sbb
xor
lock
enter
insb
lahf
daa
ss
fwait
or
mov
fnsave
sbb
imul
sub
xchg
sbb
cs
aam
mov
sub
lock
cmpsb
mov
cmc
pop
popf
aam
outsl
in
jb
aaa
push
sbb
inc
call
xor
mov
or
mov
mov
test
or
jno
shr
mov
stos
mov
cmpsb
insb
xor
insl
test
aaa
mov
adc
into
pop
cwtl
cmpsb
dec
pop
das
xlat
fdivs
sub
test
xchg
add
adc
cmp
mov
sbb
stos
mov
or
inc
clc
test
inc
out
rol
xor
pop
daa
or
pop
mov
mov
add
dec
sti
cli
movsb
movl
std
mov
out
cli
scas
push
sub
ret
xor
adc
imul
pop
and
adc
or
sub
in
xchg
pop
adc
mov
imul
out
arpl
jmp
xchg
jnp
ret
adc
xor
clc
lahf
rol
mov
mov
xchg
cmp
sub
xor
addr16
mov
mov
adc
loope
nop
rolb
push
into
dec
jnp
mov
mov
jbe
dec
addr16
push
fbstp
mov
xchg
adc
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
lret
out
inc
popa
bound
pop
bound
jae
xchg
dec
arpl
xor
cs
inc
jmp
aam
lods
xchg
outsb
push
pop
rclb
and
loopne
dec
pop
xchg
mov
or
aad
add
adc
or
sub
or
stos
outsl
jle
or
xlat
in
bound
inc
adc
int3
stc
ljmp
mov
jecxz
mov
and
jae
sub
xchg
call
popa
and
cld
stc
movsl
push
xor
cmpl
mov
inc
pop
ja
out
cmp
cmpsl
scas
inc
cmp
pushl
int
cs
sti
mov
hlt
dec
nop
mov
fistpl
mov
jae
lcall
inc
push
call
mov
call
inc
aad
aad
test
jmp
jmp
mov
sbb
jle
fisttps
fcomps
or
mov
arpl
mov
or
insb
cmpsl
insb
movsb
ret
testb
pop
fdivr
inc
stc
or
jmp
sbb
stos
daa
jbe
and
sub
sub
test
addr16
mov
lret
pop
movsl
pop
ffree
into
loope
xor
dec
std
fistpl
leave
xchg
pusha
mov
fwait
sub
inc
cmc
dec
notb
stos
push
dec
dec
mov
stos
push
jg
dec
cmp
jo
cmp
jo
and
push
jbe
add
lcall
jl
data16
lret
adc
fdivs
lret
xchg
pop
insl
cmc
outsb
jge
inc
popa
pop
aas
iret
add
dec
add
mov
stos
sahf
std
ds
nop
and
aad
es
push
ja
or
gs
dec
inc
or
adc
frstor
rorb
out
icebp
and
xor
das
sub
pop
cld
scas
jne
jle
lahf
cld
push
out
push
jmp
andb
lods
pushf
cmpsb
jg
sbb
cmc
fsubs
cmp
push
ss
jp
inc
shll
scas
out
xor
jo
imul
inc
cld
xchg
push
add
cmp
mov
push
cmp
jbe
fisubs
inc
clc
jbe
and
js
mov
xchg
pop
mov
xor
pop
jg
loopne
mov
lea
push
and
jno
mov
jns
es
jge
and
nop
or
sbb
xor
inc
or
pop
mov
clc
cmpb
mov
rolb
jl
iret
es
push
adc
sahf
sub
cmc
jmp
sbb
sub
jns
jno
loope
mov
xchg
gs
outsl
out
mov
dec
cs
repz
jo
mov
jmp
fiaddl
fsubr
addr16
jge
lret
jae
cld
push
xor
repnz
fisubs
add
mov
ret
insl
or
out
sub
lods
cltd
mov
inc
iret
out
std
add
bound
cmp
cltd
or
xor
pop
fstl
add
push
loope
rorb
pusha
ret
mov
divl
imul
inc
xchg
mov
sub
add
add
mov
movsl
or
mov
inc
add
movsl
or
gs
add
push
test
ljmp
sbb
filds
int3
mov
shlb
mov
scas
xchg
xchg
push
xor
push
inc
jmp
cmp
push
test
and
mov
sub
mov
pop
mov
js
mov
sbb
lret
cwtl
addb
sub
add
mov
sub
pusha
frstor
jl
out
js
out
aad
rcll
movsb
push
rorl
out
bound
sbb
or
mov
fsubl
jge
jp
jne
jnp
shl
add
cmp
or
push
out
or
in
xchg
daa
jg
fldt
mov
adc
push
jle
cmp
jb
xchg
sub
sub
xchg
hlt
mov
js
mov
fldl
cmp
pop
mov
inc
outsb
movsb
or
out
sbb
pop
lcall
mov
cli
xchg
fnstenv
in
mov
push
xorl
dec
jns
mov
push
and
push
stc
shrb
loopne
mov
stos
mov
std
fsubr
sarl
imulb
out
fnsave
inc
icebp
sbb
incl
push
cmp
sub
xchg
cld
gs
psubb
rorb
test
imul
lock
dec
mov
jno
lods
int
dec
rcr
call
fcoms
and
inc
inc
fdivrl
mov
sbb
orb
in
sub
sub
jo
fldt
dec
mov
dec
cmp
mov
repnz
dec
testb
test
mov
imul
fldt
test
andl
xorb
mov
fistl
jmp
and
fidivrl
sbb
cmp
lods
adc
jp
fstps
fxch
sbbb
cs
inc
jge
das
decb
iret
sti
lock
insl
add
cli
cmc
sub
fs
push
out
in
lea
adc
cmp
dec
jmp
mov
lcall
rcll
push
fwait
or
into
psrld
cli
jmp
fwait
out
sarb
lcall
push
subb
stos
inc
outsl
pop
sub
cmp
sar
into
fwait
and
movsl
mov
mov
pop
sbb
enter
leave
inc
and
mov
fs
test
inc
push
sahf
sti
sbb
lods
dec
lea
jno
test
repz
leave
test
stos
inc
loope
push
pop
daa
cmpl
pop
xor
das
sub
pusha
add
cmp
sub
sub
inc
jp
sti
lret
hlt
imul
rcll
or
callw
adc
or
pop
cltd
mov
push
movsl
out
add
or
cltd
mov
adc
mov
cmp
sub
pop
push
push
pop
cmc
bound
or
cli
fst
sarb
dec
insb
adc
push
or
loope
fdivp
ljmp
insb
dec
pop
sub
push
push
ret
repnz
inc
sub
xor
or
ror
loop
sahf
push
or
lock
pop
mov
stos
adc
outsl
shll
sbbb
adc
cmpsl
ss
clc
es
stos
mov
add
xchg
or
push
loope
dec
sbb
push
fcmovnbe
test
mov
inc
mull
into
fstpt
add
pop
and
xor
sar
mov
add
sbb
inc
or
rcrb
jp
pop
insl
data16
adc
lret
mov
dec
mov
push
test
stos
cmp
aam
inc
cmpsb
jno
stc
jne
pop
lret
cmp
je
mov
xchg
adc
mov
push
in
aaa
adc
sbb
inc
loope
ret
add
dec
pop
scas
mov
bnd
aas
test
outsb
jns
mov
shll
jno
inc
mov
mov
mov
jl
push
sarl
mov
mov
mov
pop
pop
mov
or
leave
dec
add
jp
jmp
stos
jae
stc
shrb
lods
mov
fs
and
and
jp
adc
and
stos
ss
hlt
std
add
mov
stc
test
es
fcomip
xchg
popa
mov
push
or
sub
xchg
in
daa
mov
lea
in
mov
sub
mov
das
fcompl
lock
mov
pop
in
std
ljmp
cltd
pop
addl
cmp
add
scas
ds
jo
cmpsl
cmc
das
pop
mov
sub
mov
fs
into
inc
test
bound
pop
out
xlat
lret
test
mov
dec
mov
jns
out
pop
fnstenv
cmc
pop
mov
or
mov
push
adc
rclb
scas
mov
outsl
shll
enter
cmp
lret
xchg
push
mov
in
fnstsw
mov
shl
cld
mov
int3
inc
cmpsl
jnp
xchg
jne
sub
subl
jle
mov
add
dec
sub
push
mov
orb
xor
jmp
add
dec
arpl
inc
jb
stos
in
test
push
jge
add
mov
test
shrb
mov
adc
ret
push
jle
mov
xor
inc
pop
in
push
fisubs
sub
in
lret
movsb
dec
mov
into
jns
in
loopne
add
scas
cmp
and
push
cmp
jno
jbe
and
sbb
ret
sbb
inc
call
sub
pop
xchg
and
mov
mov
std
xor
inc
jmp
lea
adc
mov
shrb
sub
pop
mov
lea
aad
xlat
mov
insl
inc
adc
out
add
ret
xchg
xchg
ja
aam
jo
xchg
mov
mov
push
xor
jbe
iret
mov
push
repz
cmp
dec
and
aas
hlt
push
out
xor
and
jl
mov
mov
dec
insl
jl
pop
pusha
push
add
mov
movsb
movsb
pop
cmp
add
jg
aaa
or
mov
inc
cmp
jp
mov
mov
ret
mov
push
dec
pop
inc
add
jecxz
pushf
fistpll
or
push
mov
ss
loope
dec
js
and
xchg
lods
gs
cmp
sub
aas
jbe
aaa
and
xchg
mov
pop
imul
sub
ja
into
dec
mov
jno
push
pop
or
fadd
inc
xor
pop
and
mov
sti
dec
dec
xor
inc
addl
sub
mov
cld
sarb
and
or
jp
lea
push
mov
dec
xor
sti
sbb
rolb
inc
fwait
int3
rclb
sbb
pop
adc
xchg
fwait
cmpb
or
push
fwait
cmp
adc
cmp
cmp
pop
mov
imul
and
das
in
fisubl
in
stos
movsl
mov
adc
sbb
loop
cmpsl
mov
push
or
mov
or
repz
and
mov
cmp
mov
inc
scas
dec
popf
xchg
shll
cmp
cld
lcall
rolb
or
dec
ret
pusha
xchg
push
and
mov
mov
mov
stos
sbb
adc
adc
jg
nop
cmc
sub
gs
and
shl
and
in
call
stc
rol
cmp
push
xor
xchg
xchg
xor
inc
cmpl
mov
mov
and
shll
inc
jg
mov
pop
jp
jecxz
or
outsb
inc
sarb
fstpt
cmp
sbb
data16
test
mul
xor
xchg
jge
dec
jp
xchg
push
movsl
add
ljmp
stc
mov
hlt
and
jo
clc
xchg
mov
inc
rcl
add
and
push
daa
inc
pop
pusha
daa
popa
lock
fildll
pop
pmaxsw
inc
sbb
add
xchg
mov
add
aas
dec
fstpl
idiv
pop
mov
xlat
cs
lahf
movsl
pushl
lods
lock
xchg
cmp
insl
push
repnz
int3
add
jo
jae
inc
mov
mov
push
mov
cmp
repz
rorl
std
ficompl
mov
addr16
push
imul
dec
stos
shlb
sub
sbb
fs
mov
jge
mov
sbb
xlat
ljmp
push
xchg
pop
clc
test
fwait
bound
xchg
pusha
fucomip
je
iret
add
ljmp
or
mov
enter
xor
idivl
mov
mov
test
sub
dec
mov
mov
mov
hlt
dec
in
sbb
pop
ljmp
cmc
and
mov
sbb
or
xchg
xorb
jnp
lret
adc
mov
sub
mov
leave
rcrl
adcl
rclb
cmpsb
jmp
fnstenv
in
bound
mov
add
fcoms
jne
inc
xor
popa
xchg
ljmp
cmpb
sub
hlt
pop
push
dec
mov
rol
nop
pop
xor
mov
fildll
jbe
leave
arpl
pop
push
add
mov
cltd
mov
fidivs
cmp
lret
cmp
push
hlt
push
cld
or
lods
pop
sbb
xor
les
inc
inc
inc
lods
loope
outsb
jae
leave
stc
and
add
xor
mov
mov
xor
dec
adc
pop
xchg
sahf
xchg
pop
scas
jmp
xchg
andl
push
sbb
mov
xchg
mov
xchg
mov
repnz
pop
nop
aad
mov
ds
lea
movsl
repnz
pop
testb
jecxz
out
jl
arpl
jae
add
call
ret
mov
scas
ret
pop
and
push
xchg
mov
xchg
mov
push
xor
cmp
xchg
jle
inc
mov
and
xor
stos
mov
dec
mov
mov
xor
ljmp
inc
testl
cmp
jmp
fistl
fucomip
daa
sub
pop
aaa
out
mov
aaa
pop
and
push
sub
adc
or
and
or
add
leave
jns
sub
sbb
lods
shll
lcall
outsl
hlt
lods
roll
cli
xor
dec
and
nop
fadds
jge
stos
xor
std
movb
rorl
mov
movsl
jae
or
mov
or
xchg
jo
inc
push
cmp
and
ss
call
cld
fildl
clc
call
icebp
hlt
jae
adcb
pop
jns
and
cmp
inc
cld
lret
fwait
pop
jae
mov
pop
out
das
faddp
rol
imul
arpl
mov
adc
fisubl
push
sub
nop
add
mov
ljmp
xor
fiadds
fsubs
fdivr
xor
cmp
adc
lcall
shll
lods
adc
int3
mov
jge
mov
bound
cmp
add
cmpsl
rorb
lock
lea
mov
or
mov
rorb
cli
sbb
dec
insl
xlat
cmp
cmp
sub
sbb
pop
in
rclb
ret
fcomps
fdiv
adc
ret
mov
hlt
mov
sbb
or
out
or
jnp
cld
jl
outsb
outsl
and
add
and
xchg
arpl
subb
pusha
mov
sarb
ret
adc
pop
cmp
cld
out
xchg
inc
adc
fs
insb
lcall
insb
sbb
xor
nop
inc
push
cld
mov
fcoms
pop
push
pop
sub
pop
mov
pop
pushf
xchg
jmp
fdivrl
and
lret
sbb
xor
divps
loope
rolb
lret
arpl
mov
dec
xchg
sbb
aaa
jo
loop
mov
pop
dec
imul
and
icebp
sbb
int
test
add
fsubl
mov
sub
pop
mov
inc
jns
pop
inc
jae
push
xor
xor
add
int
mov
stos
aad
sub
fcmovnb
jb
leave
jge
dec
or
dec
push
xchg
lahf
xchg
xor
jne
insl
cmc
fnstcw
gs
jne
in
lea
inc
dec
fists
xchg
inc
mov
add
dec
das
push
xchg
cmp
scas
jae
xor
adc
sti
test
and
push
sti
sub
inc
mov
lret
mov
or
repz
fs
sbb
mov
gs
popa
scas
mov
mov
jns
arpl
lret
mov
jl
popf
ss
rorl
lahf
mov
rcll
out
add
faddl
and
fsubl
call
fs
shll
push
insb
inc
mov
je
jns
sub
aad
jo
pop
mov
hlt
arpl
mov
lods
or
sbb
imul
scas
arpl
inc
pushf
cmp
fwait
xor
or
fiaddl
pop
fbstp
rcrb
xchg
or
into
add
jo
inc
add
std
lods
pusha
xchg
mov
insb
les
ja
aad
push
arpl
mov
fwait
cwtl
adcl
or
dec
cli
xchg
ficompl
sub
jnp
pop
push
pop
cmp
pop
mov
sub
pop
sahf
pushf
cmpsb
ja
movb
xchg
pop
shll
push
popa
aaa
push
push
jo
jae
aas
inc
decb
dec
lret
loope
testl
mov
mov
cmpsb
xor
dec
xchg
stos
sbb
pop
sahf
xchg
fs
pop
xor
jns
call
pop
sbb
out
lods
pop
mov
imul
jo
test
test
mov
mov
lea
idivl
js
mov
mov
mov
pop
orb
fldcw
mov
push
test
jg
clc
cwtl
push
jb
fwait
and
dec
mov
jnp
and
and
sbb
mov
push
mov
mov
or
enter
push
cmpsl
xor
push
jns
adc
push
or
inc
lea
inc
xchg
add
mov
inc
jle
jmp
xchg
stc
jecxz
and
add
pop
ja
into
push
add
and
pop
clc
cmc
jno
outsl
std
dec
loop
mov
sbb
loop
jnp
inc
cmpsb
hlt
int
mov
mov
or
mov
and
gs
leave
out
ds
dec
mov
leave
and
inc
aam
dec
idivl
jae
dec
inc
jne
fwait
popa
into
imulb
out
insl
imul
jp
xchg
add
lds
xor
dec
in
pop
dec
aam
std
mov
rol
sub
dec
inc
mov
cld
push
pop
bound
movsb
std
inc
jle
pop
mov
scas
daa
gs
xchg
mov
xor
sbb
mov
pop
inc
dec
clc
jp
xchg
add
in
sub
xor
push
pop
loope
dec
mov
pop
int
ds
jp
das
push
xchg
bound
mov
jle
cld
mov
mov
andl
arpl
push
cmp
sbb
push
add
out
dec
pop
decb
or
insl
out
xor
mov
repz
shr
outsb
dec
sarl
outsl
inc
xor
and
inc
shr
push
iret
cmpb
imul
adc
pop
mov
push
inc
movsl
insl
imul
push
lds
gs
ljmp
dec
xor
jbe
sub
sti
sub
insl
leave
jbe
popf
notb
inc
imul
shrl
test
mov
dec
test
cltd
xor
cs
xchg
fcoml
lock
inc
adc
std
es
sub
hlt
lret
pop
and
and
pop
pop
aaa
pushf
call
mov
dec
mov
aam
sbbb
mov
insb
cli
or
xor
jg
fnstenv
mov
mov
cs
pop
cli
rcll
jecxz
popf
push
dec
loopne
xor
add
fisubs
adc
std
popf
mov
cs
or
shr
sbb
hlt
fmull
in
sbb
rorl
in
xor
push
jp
mov
sbb
push
repz
xchg
pushf
stos
scas
repnz
lret
stc
and
imulb
add
push
data16
rol
mov
add
mov
lock
test
js
scas
push
xor
xchg
sahf
into
rcll
sbb
xchg
clc
xchg
mov
mov
sub
sub
push
stos
stos
les
push
cmovo
mov
sbb
sti
dec
adc
sub
jl
outsb
pop
rcll
cmc
adc
gs
gs
inc
adc
sbb
mov
or
mov
add
in
dec
jb
cs
jne
cmp
push
lock
popa
mov
rcll
in
scas
das
into
or
add
inc
std
mov
loop
xchg
testb
aas
dec
or
cmp
mov
std
mov
push
xlat
lods
push
jl,pt
stc
jne,pt
adc
les
lret
jae
push
sub
fistl
dec
daa
adc
sub
mov
or
ficoml
and
scas
xchg
or
bound
inc
jecxz
stc
shll
aaa
loope
sarl
dec
dec
in
div
xor
inc
clc
or
daa
iret
inc
aad
and
dec
loope
les
jl
pop
dec
loope
cmp
loop
test
aaa
mov
imul
in
dec
cmp
xor
jle
xor
test
push
mov
cwtl
xor
mov
cs
cli
sbb
inc
push
mov
xor
incb
in
dec
movsl
or
cmc
push
cmp
mov
addl
pushf
lret
arpl
adc
inc
fsts
out
xor
adcb
cmp
pop
outsl
xor
std
sub
dec
jle
dec
mov
in
xchg
and
decb
xchg
mov
ja
cld
sub
lldt
jecxz
fistps
rcrb
xor
movb
jne
out
dec
xchg
dec
inc
push
add
jae
inc
leave
in
pop
aas
ss
mov
mov
std
lret
aaa
push
or
dec
or
bound
insl
xor
add
fisttps
push
testl
jo
mov
inc
cli
jle
inc
pop
sub
dec
push
adc
xor
jmp
xor
aam
or
insl
icebp
dec
push
jo
fcoms
fdivrs
or
ret
fs
or
bound
fwait
push
out
sarl
mov
mov
insl
out
insb
pushf
jp
sarb
flds
loope
inc
filds
loope
das
dec
dec
xor
inc
fimull
test
xchg
imul
popa
adc
inc
gs
dec
pop
push
xlat
cld
ja
push
aam
ret
pop
pop
push
push
pop
mov
call
pop
mov
cmp
ss
data16
or
es
pop
pop
test
and
std
push
jge
sahf
pop
pop
push
and
leave
push
ljmp
std
dec
xchg
pop
push
jmp
into
loope
add
lods
in
and
inc
mov
push
mov
xchg
test
rcrb
mov
and
push
cmp
pop
lods
mov
lods
mov
jmp
popf
sahf
rorb
cwtl
mov
popf
xchg
adc
sahf
stos
dec
mov
pop
pop
fs
and
sbb
push
dec
mov
cmpsl
jbe
dec
xor
js
out
xchg
mov
out
adc
xor
nop
in
movsb
push
xor
xor
and
loop
dec
push
dec
iret
jns
int
pop
inc
adc
push
dec
xchg
pop
xchg
ret
stc
fnsave
das
fwait
mov
rclb
stos
test
dec
and
stc
hlt
fidivrs
cs
mov
or
out
xchg
sbb
push
xchg
xchg
jnp
sbb
pusha
xor
mov
xchg
mov
loop
jle
stc
push
push
into
fstp
jmp
cmp
insb
lods
lods
mov
dec
pop
push
fs
test
or
or
dec
mov
push
mov
cwtl
xor
mov
mov
adc
xor
popa
cltd
cs
fucom
push
mov
test
xchg
xor
sub
xchg
fsubl
insb
and
push
adc
inc
pushf
dec
xchg
xlat
je
cmp
cs
push
aad
push
add
lea
leave
fistps
xchg
clc
jle
or
orl
push
inc
inc
rol
fcomps
sub
mov
fs
sbb
je
ds
sub
dec
mov
mov
ljmp
mov
cmp
pop
xor
push
xchg
mov
push
mov
sarb
sub
mov
flds
mov
xchg
xchg
mov
cld
rcrl
mov
dec
inc
cmp
mov
arpl
bound
orb
push
or
push
inc
adc
sarb
sub
fwait
stc
inc
dec
push
mov
cmp
inc
cmpsl
cmp
aas
ljmp
cld
push
or
xchg
mov
mov
sub
mov
pop
mov
push
test
pop
clc
sub
lea
jns
movsl
in
xor
dec
mov
outsb
sub
adc
sbb
ja
inc
stc
cmp
pop
and
jb
push
dec
xchg
mov
data16
pop
dec
cmp
stc
adc
das
addr16
or
unpcklps
or
push
push
imul
shl
xchg
push
mov
lret
fcmovbe
cmp
ret
add
inc
cmp
ljmp
in
test
cmp
cmpb
cwtl
popf
jns
cmc
and
jns
cmpsl
sub
lds
push
les
dec
or
adc
jg
pusha
pop
add
pop
sub
clc
popa
jmp
into
int3
add
aam
ljmp
xchg
jle
dec
sarw
cltd
loop
push
push
pop
data16
push
je
mov
jecxz
imul
paddd
fbstp
call
adc
jnp
das
mov
cmc
fildl
or
pop
bound
inc
cmpb
outsl
and
jmp
jg
lcall
int3
out
negb
sbbb
sti
int3
outsb
sbb
push
cltd
mov
pusha
in
bound
mov
push
xor
mov
mov
pop
add
into
pushl
mov
adc
fwait
add
mov
sub
xchg
aam
sub
test
insb
add
add
mov
or
ljmp
lret
sub
lret
xorb
lods
lret
and
jecxz
sbb
inc
or
stos
popa
xchg
adc
xor
aaa
cmp
int
push
addb
push
add
dec
inc
sub
subl
adc
push
push
stc
mov
stos
daa
sub
divl
stc
sti
loop
es
sbb
sub
inc
mov
cmp
mov
pop
push
pop
mov
dec
add
sub
lret
aas
pop
leave
mov
mov
lret
mov
ja
addb
inc
jb
xchg
int
lahf
insb
hlt
incl
lahf
adc
push
add
push
in
dec
scas
cli
in
xor
mov
sub
fs
das
in
push
sti
cs
out
pop
push
pop
idivb
lret
jnp
lods
ja
mov
mov
sub
push
dec
or
int
fmul
lahf
push
mov
inc
dec
mov
jecxz
test
lods
inc
mov
xchg
mov
jo
add
repnz
xor
push
mov
leave
fistpll
outsl
jle
les
ret
add
pushf
pop
fcomps
and
popa
xchg
mov
fisubrl
lret
pop
xchg
xor
jg
pop
xlat
dec
into
push
sbb
lret
stc
xor
js
mov
xchg
xor
sub
mov
lahf
mov
mov
xor
and
inc
mov
out
leave
mov
pop
fidivl
sub
mov
cmc
mulb
ret
bswap
jl
in
lock
mov
mov
and
add
addr16
jecxz
ret
xor
adc
rolb
stos
cmp
jg
mov
mov
or
cltd
fnsave
mov
in
int
je
jge
mov
jle
xchg
dec
xchg
dec
std
xchg
leave
out
push
mov
insb
leave
jecxz
pop
fwait
push
sbb
or
test
cmp
jb
out
sub
fiaddl
imul
sbb
hlt
mov
outsl
push
pop
add
int
popf
pop
lret
jle
pop
and
sbb
push
dec
lds
imul
push
jbe
popa
movsl
stc
lods
push
mov
rcr
out
mov
inc
rorb
ss
push
xor
mov
daa
pop
addr16
inc
inc
leave
pop
inc
jl
leave
sahf
fmuls
push
pop
mov
stos
push
ja
mov
ljmp
pop
lea
lock
and
xchg
dec
xchg
xchg
movsb
mov
arpl
dec
push
lock
test
es
popf
pop
or
inc
push
mov
shlb
and
xchg
pop
iret
pop
and
pop
adc
xor
xlat
in
addl
sbb
mov
subl
jmp
sbb
dec
add
cmp
cmp
or
jp
inc
xchg
sub
stos
int
iret
jno
sbb
sbb
sub
push
js
andb
add
scas
aas
gs
hlt
pop
cmp
mov
push
xchg
inc
xchg
dec
and
stos
movsb
mov
mov
addb
outsb
mov
in
aad
dec
push
fidivs
and
repnz
xchg
inc
pop
pusha
mov
ja
pop
push
add
leave
ds
inc
shr
inc
fucom
pop
hlt
pop
iret
inc
adc
andl
pop
fisubrl
es
rorb
cmpb
stos
fnstsw
mov
xlat
jmp
inc
lods
xor
xchg
icebp
orb
pop
push
push
not
imul
ja
mov
or
adc
call
fwait
xlat
add
and
fildll
int
jge
cmp
push
mov
mov
add
or
push
mov
pushf
mov
and
sub
popf
mov
aas
cwtl
mov
push
ret
push
int
repnz
mov
xchg
mov
enter
sub
mov
movsl
icebp
jl
push
pop
sbb
es
xor
data16
cmp
inc
rclb
adc
inc
in
movsl
shlb
sti
call
cmp
jo
or
cld
jno
cmpsb
lahf
mov
roll
cmp
inc
test
fdiv
repz
outsl
in
fdivrl
loop
dec
or
aad
sub
pop
data16
mov
repnz
stc
and
push
dec
mov
cmp
xchg
push
push
xor
in
fwait
cmp
sti
aam
dec
adc
sub
mov
pop
inc
int
push
xchg
xor
mov
dec
jecxz
add
lcall
jno
test
xor
repz
sbb
push
adc
jnp
test
inc
in
adc
pop
data16
popa
popf
jp
rcrl
popa
in
mov
pop
gs
cmp
lods
lahf
bound
jno
xor
pop
out
insb
pop
xchg
lret
shrl
outsl
xorl
stos
sub
mov
sub
mov
jle
loopne
fidivl
orl
leave
iret
faddl
jbe
add
jge
icebp
dec
lods
jmp
fbld
pushf
jb
inc
sbb
mov
jecxz
jne
jbe
xlat
cmp
lret
add
dec
jnp
mov
pop
or
or
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
and
xor
or
bound
fcomip
sbbb
dec
jg
daa
dec
fistl
jle
add
fsubl
mov
in
inc
cmpsb
mov
ja
fs
jmp
out
ret
clc
pop
test
xchg
pop
jl
jmp
cmp
imul
jns
dec
ret
into
std
push
push
and
adc
mov
add
cmc
ss
shr
cmp
pushf
sbb
cmpb
mov
cmp
imul
aaa
mov
enter
lods
xchg
or
xchg
pop
mov
and
xchg
lods
adc
inc
xchg
aam
stos
mov
in
out
xor
into
test
cltd
sub
out
rep
sub
xor
fucomip
sarl
sbb
mov
mov
popf
and
imul
test
add
test
jmp
xchg
cld
movsb
mov
cmc
adc
mov
xchg
inc
call
jnp
imul
sub
pop
jno
or
push
fucom
daa
popl
testb
in
cmp
adc
pop
or
jno
push
push
jecxz
dec
sbb
fstpt
dec
sub
dec
xor
push
movntq
imul
cwtl
jmp
in
add
add
push
inc
xchg
ret
int
clc
loopne
xor
inc
fmuls
cld
pushf
lret
cmc
sub
pop
jg
cmp
and
cmp
and
rcl
in
push
lock
adc
xchg
pop
ds
inc
mov
iret
inc
inc
int
lea
jmp
push
jns
and
jb
int3
jp
sub
out
fdiv
add
jnp
and
leave
addr16
ret
hlt
push
pop
xor
les
lcall
rcrl
sbb
in
pop
aad
enter
mov
loopne
fnstsw
pop
mov
out
or
sahf
testl
dec
stos
movb
fs
mov
xor
xchg
mov
scas
test
mov
lock
push
aaa
xchg
mov
outsb
push
imul
fisttpl
add
pop
es
mov
mov
or
sub
push
or
push
xor
and
fcoms
fdivs
in
add
dec
mov
mov
cmc
pop
mov
sbb
iret
and
les
or
cmpsl
xchg
dec
mov
or
add
nop
div
jmp
cmpb
out
out
pushf
dec
inc
mov
jecxz
adc
xchg
lods
lahf
repnz
mov
and
mov
and
int3
mov
js
mov
inc
clc
mov
or
lods
aas
out
es
push
imul
jl
jb
fdivrl
jne
or
xchg
pmulhuw
in
lret
push
out
int3
je
sub
mov
lret
jg
push
sub
add
push
cmc
adc
and
pop
pop
push
push
ljmp
xchg
adc
leave
mov
mov
cmc
aad
dec
inc
adc
pop
shl
das
lods
ja
aas
xchg
movsl
scas
inc
fisubs
lds
push
xor
cmpsl
rolb
aaa
jno
ret
call
stc
cld
mov
mov
ljmp
dec
sbb
sub
push
fdivrl
fdivl
mov
mov
into
sub
inc
pusha
mov
js
jge
inc
roll
sub
out
jge
xor
inc
push
jmp
add
adc
stos
loopne
sbb
icebp
cmp
ljmp
jbe
sub
adc
add
sbb
mov
stos
and
fstl
test
xchg
lods
jb
addr16
out
sub
xor
aaa
mov
cmc
inc
iret
movsb
pop
sbb
jmp
and
sub
jle
dec
imul
inc
xorb
mov
aam
pusha
out
mov
sbbb
out
mov
test
mov
jecxz
sub
inc
js
mov
loopne
xchg
mov
sbb
mov
test
jmp
sub
mov
imul
cmp
lock
push
fisubs
dec
test
icebp
dec
mov
andl
inc
pop
pop
mov
imul
add
mov
stc
xchg
mov
jecxz
ja
scas
jnp
push
into
mov
jle
xor
leave
icebp
xor
add
mov
pop
mov
mov
pop
rcrb
pop
jno
sub
in
lret
paddusw
fcomps
data16
xlat
mov
dec
and
adc
clc
jb
xchg
or
ja
fcmovu
mov
cld
mov
subb
push
cmpsl
je
or
jmp
loop
ret
dec
std
sub
ret
loop
xchg
mov
mov
gs
nop
shlb
xor
leave
pushf
aas
mov
sbbl
lock
jnp
jns
shll
xlat
push
dec
jl
dec
mov
scas
push
fildl
popf
xchg
dec
push
orl
in
dec
dec
push
pop
ljmp
xor
inc
cmp
cmp
add
repnz
shlb
or
and
stc
lock
dec
pop
mov
add
sub
push
xor
xchg
mov
cmp
repz
mov
mov
je
adc
sbb
call
scas
leave
push
mov
add
rcr
push
dec
stc
nop
jbe
mov
pop
mov
jns
fwait
cmpsl
data16
jp
pop
pop
inc
mov
mov
sub
xchg
cmc
jl
or
into
mov
add
jbe
mov
push
in
rol
test
sub
leave
and
mov
scas
shrl
mov
fadds
mov
jg
adc
xor
push
scas
and
clc
sarl
mov
cmc
fidivrs
jmp
cmp
out
dec
jne
xchg
rcrb
sahf
mov
dec
sub
pop
repnz
push
push
leave
jecxz
xchg
jg
shr
cmp
je
xor
sub
sub
mov
cmpsl
sbb
movsb
fmull
inc
out
sub
sbbl
mov
sbb
les
hlt
sti
cmp
mov
outsl
and
adc
rorb
push
mov
push
mov
mov
xor
mov
push
jp
imull
sbb
popa
lock
inc
fstpl
add
and
gs
pop
inc
dec
and
lods
mov
xorl
nop
mov
std
bound
icebp
test
add
testl
jecxz
fcoml
xchg
popl
xchg
ss
xchg
stos
sahf
inc
push
or
lahf
push
mov
xchg
es
jo
in
js
fsubl
imul
push
repnz
stos
push
cmp
mov
in
add
dec
dec
pop
sbb
rclb
dec
adc
sub
gs
repz
aas
sarb
and
cmp
xchg
arpl
shr
ds
or
jo
jno
adc
sbb
shlb
sahf
arpl
xchg
mov
cld
xor
add
imul
jb
dec
inc
roll
aam
jne
es
mov
xlat
ljmp
scas
sub
and
jns
es
mov
sub
lcall
lret
and
leave
inc
aad
andb
insl
xlat
hlt
cwtl
andl
sub
dec
stos
inc
movsl
mov
push
add
mov
cltd
pop
add
lods
xor
mov
pop
repnz
or
jmp
and
les
pop
ret
push
fnsave
ret
imul
dec
dec
adc
and
rol
addl
lock
hlt
sbb
sbb
xchg
sbb
mov
enter
inc
push
mov
ret
pop
lcall
aaa
and
dec
frstor
cmpl
mov
xchg
pop
jae
bound
pop
and
mov
orb
adc
dec
bound
scas
pop
bound
add
jge
push
movntq
xchg
imul
sbb
dec
addr16
push
sub
or
imulb
xchg
dec
sbb
cmp
and
fisubs
loope
out
in
cmc
std
adc
adc
push
adcb
jne
mov
push
xlat
popf
push
cltd
sub
ss
or
xor
shl
insb
xor
xor
jbe
xlat
mov
std
clc
aas
loopne
cs
movsb
push
adc
or
push
xchg
cltd
push
shl
lcall
das
lods
dec
sbb
inc
xor
js
jp
jg
add
mov
mov
aam
push
loop
jae
adcb
popa
arpl
popf
leave
mov
test
mov
mov
sbb
cmpsb
out
dec
roll
and
fimull
out
sub
sbb
and
insl
mov
lds
ja
es
mov
dec
or
mov
lea
out
xchg
adc
cld
lds
dec
les
in
pop
dec
fsub
shrl
push
or
loope
enter
test
lcall
int
aas
and
mov
and
mov
sbb
pop
jb
push
dec
xchg
mov
je,pn
push
pop
add
mov
repnz
add
mov
scas
cmp
hlt
lcall
mov
cli
jg
sti
imul
aam
mov
xor
das
movsl
sbb
jl
cwtl
sbb
jle
xor
xchg
adcb
cmpsl
cmp
ja
sub
arpl
xor
dec
or
fcomip
adc
push
movsl
xorb
out
clc
adc
popf
inc
pusha
pushf
fmuls
test
sbb
hlt
sarl
push
fisubrl
sub
repnz
push
and
stos
loop
cmp
pop
add
or
dec
jge
mov
sub
sub
sbb
push
mov
jle
ret
or
mov
mov
jmp
cmp
sub
call
pop
faddl
je
lea
stc
popa
out
fisubrs
les
add
inc
lret
pop
repnz
cvtpi2ps
bound
jo
insl
push
jg
jb
sbb
fimuls
pop
jne
maskmovq
lcall
and
mov
ja
mov
ret
and
sbb
and
nop
dec
cmp
sub
movsb
lods
pop
jns
mov
xor
in
es
repnz
mov
pop
mov
inc
dec
inc
dec
xchg
dec
leave
stos
xchg
cmp
dec
push
and
adc
cmp
insl
sub
xchg
cld
daa
les
arpl
or
hlt
add
enter
jle
inc
sbb
imul
lods
out
es
xor
mov
jge
mov
pop
mov
sub
or
mov
adc
or
div
xor
loope
sbb
ss
icebp
test
fbstp
ja
mov
repnz
cmpsb
cmp
mov
xor
push
fiaddl
je
jle
adc
rcrb
cs
push
out
ds
xchg
stos
outsb
inc
add
sbb
int
mov
loop
push
adc
mov
mov
pusha
shll
sbb
add
call
inc
nop
inc
sub
sbb
shlb
add
loope
dec
stos
stos
sub
pop
lahf
jb
ret
aam
inc
mov
cmp
push
add
fidivl
pop
push
dec
mov
push
and
sbb
mov
and
sub
data16
adc
repnz
dec
add
es
ret
cmc
push
inc
cmp
shl
cmp
mov
push
fwait
test
jle
sub
xchg
jle
fisubs
mov
adc
mov
lret
push
pop
cltd
mov
cmpsl
cmp
cmp
jp
aaa
jno
dec
sbb
mov
imul
stos
mov
enter
mov
jbe
in
imul
add
xchg
call
popa
jo
add
mov
repz
inc
xorl
scas
mov
push
and
stc
xchg
jne
pop
sahf
dec
lret
sti
fmuls
add
stos
jns
adc
mov
sub
mov
push
lret
lods
jle
call
imul
jge
leave
xchg
loope
pushf
lods
es
stos
fadd
push
xorl
push
lcall
in
arpl
sbb
push
dec
in
cld
cltd
fsubl
pop
and
adc
cld
insl
jl
inc
and
insl
imul
or
mov
fldcw
pop
sub
jnp
in
mov
xchg
cmp
jge
and
ja
lds
add
or
or
dec
icebp
pop
pop
sub
jl
add
xchg
mov
aas
jb
xchg
mov
pop
fwait
push
ficoms
insl
stos
inc
inc
sarl
jle
in
jns
dec
mov
ss
das
filds
inc
and
sub
sarb
inc
mov
jl
xlat
les
sbb
imul
sarb
inc
pushf
push
xchg
outsb
ret
leave
call
pushf
sub
loope
sbb
push
stos
test
add
xor
cmc
sub
out
inc
rorl
add
cmp
mov
sub
gs
out
ja
scas
sub
jle
aad
inc
insl
out
add
adc
or
inc
mov
insb
inc
mov
jecxz
fcmove
int3
sbb
jmp
sahf
and
push
jl
mov
movsb
out
mov
pop
or
push
adcl
mov
imul
clc
insl
repnz
sub
mov
xor
stos
dec
into
inc
ret
or
lock
xchg
adc
je
lds
out
shll
inc
adc
lods
mov
sti
add
or
out
inc
or
jb
or
and
mov
lods
lods
ficomps
push
push
mov
dec
cmpsb
dec
lods
xchg
fmuls
push
inc
sub
fiaddl
pop
adc
and
enter
in
mov
mov
mov
inc
sbb
cmp
inc
jl
imul
dec
push
jae
lret
outsb
mov
std
pop
jecxz
push
push
mov
adcb
out
insb
daa
cmp
or
mov
nop
mov
pop
inc
jae
pushf
jbe
je
leave
xchg
arpl
adc
mov
mov
mov
movsb
or
xchg
jb
and
push
adc
popa
out
sbb
mov
out
xchg
out
xor
outsb
pop
lret
mov
cmp
std
mov
in
xor
pop
mov
push
das
mov
out
pop
pop
add
lock
and
jbe
insl
mov
xor
push
inc
sub
mov
fwait
repnz
pushf
insb
xchg
loop
cmp
pushf
and
xchg
cwtl
mov
mov
loope
sahf
pop
popf
pop
scas
idivb
dec
out
jne
add
jae
and
xchg
and
shlb
jg
jb
scas
cwtl
loop
cltd
pushf
or
pop
jge
enter
inc
jns
nop
mov
lret
fsts
dec
dec
dec
mov
leave
rolb
xor
das
jno
flds
mov
adc
adc
add
addr16
xlat
js
sub
pop
lcall
sbbl
adc
sbb
out
xchg
addl
mov
push
and
mov
ficompl
mov
je
push
aas
inc
dec
shlb
mov
jb
mov
add
fnstsw
das
pop
xor
or
inc
jl
and
sub
cmp
loope
jle
dec
loope
bound
cld
sti
xor
popa
adc
popf
push
stos
int3
lea
lea
popl
jle
mov
or
das
and
xor
xchg
cmp
pop
mov
stos
push
mov
inc
and
js
dec
leave
cmc
lret
in
xchg
pop
mov
dec
mov
fs
mov
cmp
arpl
jne
sbb
mov
xchg
add
int
mov
dec
test
ljmp
mov
xor
scas
jb
pop
xchg
add
jno
jbe
pop
lea
jb
adc
enter
xor
out
fsubl
popf
gs
stc
push
lret
rorb
loope
popa
mov
test
es
cmpsl
and
in
and
xor
mov
pop
jmp
lret
sbb
ds
and
lahf
aaa
jne
gs
sbb
sbb
test
xchg
adc
movsb
roll
inc
clc
mov
shlb
std
and
je
pop
lock
mov
movsb
add
aam
push
int
jb
jno
out
mov
subb
push
mov
fildl
fs
inc
les
sbb
sbb
subb
js
mov
addb
add
dec
mov
sub
mov
push
test
sbb
dec
xor
sti
into
rcr
lret
pop
repnz
pusha
ret
cmp
mov
xchg
ss
daa
in
xchg
loope
jno
and
push
cmp
and
sbb
mov
enter
inc
test
xchg
flds
sbb
xchg
pop
out
fidivl
or
jns
or
dec
fdivp
mov
outsl
mov
loopne
xchg
push
inc
sbb
out
in
push
add
iret
cmp
and
out
mov
cmp
idivl
fwait
fs
xor
inc
addb
ja
cld
jmp
add
outsl
sub
fisubrs
pop
sub
xor
in
mov
hlt
add
jmp
cmp
lock
sbb
lds
aaa
ja
sub
mov
mov
xchg
inc
pop
in
sbbb
inc
mov
sbb
pop
push
cmp
mov
cmp
aad
jg
and
sbb
xchg
out
stc
dec
dec
mov
add
push
or
lods
outsb
mov
xchg
cmp
mov
push
fbld
cmp
int
lea
sti
xor
nop
push
in
sub
jge
repnz
loope
mov
cmpsb
jp
sbb
mov
sub
pop
lcall
inc
pop
ss
dec
ret
std
ss
rolb
icebp
lcall
insb
mov
sub
mov
mov
js
add
mov
cmpb
mov
lds
ss
pusha
mov
fsubrl
icebp
enter
cwtl
push
xor
popf
sbb
cmp
sbb
test
pop
cmc
pop
cmp
inc
repz
js
xlat
pop
jbe
addb
fadds
dec
add
scas
jmp
ljmp
js
gs
adc
cmpsb
lahf
or
dec
jle
fs
lahf
push
lea
gs
jmp
stos
sub
ret
jg
outsb
mov
fisttpl
or
rcrb
scas
mov
lds
push
dec
test
rolb
or
pop
jmp
adc
xchg
mov
in
lcall
or
js
add
pushf
popl
jl
cmc
or
js
adcl
push
inc
fs
push
dec
ror
xchg
repz
xchg
add
loope
sub
and
aas
adc
mov
ret
fidivrs
jle
mov
fsubrl
incb
xchg
pop
in
scas
fsubrl
dec
sbb
lds
lods
stos
test
mov
xchg
stc
testl
mov
xchg
inc
push
stos
push
mov
pop
add
jo
mov
sbb
fwait
jmp
add
mov
xor
xchg
js
es
ds
mov
pop
sub
mov
jo
xchg
popa
imul
js
sub
mov
cld
hlt
add
jp
iret
pusha
xchg
movsl
mov
cmpsl
enter
or
out
pop
mov
out
sub
push
sbb
and
popf
rorl
sbb
adc
hlt
inc
and
mov
lods
jp
inc
inc
xchg
in
fwait
rep
push
lock
cmp
aaa
shrb
mov
sbb
ja
adc
adc
rclb
fstpl
pop
xor
mov
mov
ret
stc
mov
faddl
jnp
push
push
sbb
movsl
in
pop
loopne
xchg
dec
pop
shlb
xchg
jl
rcll
sub
outsb
push
ret
cld
out
pop
fcos
js
nop
mov
push
hlt
popa
fscale
inc
outsl
jle
bnd
ljmp
push
stos
push
xor
jle
adc
repz
and
and
iret
sti
outsl
pop
test
jns
mov
hlt
ss
or
mov
mov
insb
jp
mov
lret
sbb
mov
mov
adc
adc
insb
incl
fnsave
dec
lahf
or
cltd
or
mov
testl
sahf
roll
xchg
adc
or
in
inc
ja
adc
sub
mov
or
mov
jmp
inc
gs
jno
out
mov
adc
sub
mov
pop
push
pop
icebp
mov
pop
andb
xchg
test
movsb
cmc
pop
xchg
mov
xor
jl,pt
push
cmpsl
pop
inc
xchg
and
fcmovb
mov
push
mov
mov
lods
clc
arpl
lahf
and
cmp
test
pop
mov
in
cmp
dec
xor
neg
nop
clc
pop
clc
cmpsl
jle
push
aas
xor
lret
rcr
ds
adc
jmp
xor
xor
cli
cmpsb
clc
movsb
cwtl
nop
adc
push
and
pop
pop
jmp
lret
add
rolb
inc
pop
je
push
mov
push
out
cltd
adc
mov
ss
rcrl
add
pop
xchg
mov
fimuls
pusha
lahf
dec
stc
gs
icebp
inc
pop
pop
mov
sbb
insl
popf
gs
push
dec
or
xchg
addl
jge
pop
andb
sbb
mov
fwait
push
iret
sub
sub
dec
sub
sarl
addr16
lcall
inc
push
test
outsl
sub
add
shrl
cmp
insb
xor
mov
jge
xchg
rcll
push
dec
dec
push
pop
jmp
sbbl
and
aad
lock
je
ds
mov
push
loope
dec
mov
cmp
adc
push
bound
in
outsl
jno
xchg
cmp
fwait
jb
ds
clc
xor
push
imul
dec
out
inc
adc
cmc
pop
in
into
cli
imul
ljmp
ljmp
loop
adc
rorl
adc
jns
shlb
repz
stc
jbe
ds
rorl
mov
adc
xor
mov
repnz
sbb
adc
sbb
cld
insl
in
clc
mov
in
mov
aaa
stos
and
cmp
addr16
leave
xor
bt
push
add
outsl
and
pop
or
adc
mov
out
fwait
dec
stos
sti
fcmovb
or
xchg
xorl
lret
jp
inc
fdivrp
adc
dec
push
jne
mov
flds
mov
je
je
cmp
es
jl
test
pop
sbb
pop
push
mov
cmp
or
xchg
sub
lods
inc
shll
ja
icebp
out
hlt
mov
or
ret
adc
cmp
push
movsb
mov
aas
into
pop
sbb
xchg
int
xor
cltd
pop
push
jecxz
and
pop
sub
imul
cmp
and
mov
gs
repz
jecxz
sbb
adc
jmp
in
nop
es
sbb
mov
mov
test
js
movsl
dec
xor
adc
test
ret
mov
push
pop
mov
gs
sbb
aaa
fdivrl
leave
or
fldl
pop
outsb
ja
stos
push
xchg
cmp
lret
das
push
xchg
and
je
jge
xor
dec
shll
ja
mov
mov
pop
or
xchg
xchg
imul
mov
mov
aad
add
ljmp
xchg
out
rep
clc
test
aaa
or
sbb
ljmp
push
mov
push
jg
ds
dec
outsl
fwait
xchg
cmpsl
ja,pn
addr16
iret
jmp
lock
std
movsl
sbb
jae
mov
add
aas
cltd
push
pop
out
aad
push
in
es
push
xchg
movl
pop
sbb
add
in
add
lock
mov
jp
rcl
jo
pop
sub
jge
int
cli
fs
stos
clc
cmpb
mov
mov
sub
and
mov
dec
fstpt
fisubrs
rcll
pop
fnstenv
imul
xchg
out
imul
adcl
sub
andb
dec
pushf
dec
cmp
dec
mov
gs
pushf
push
xchg
add
and
in
dec
inc
cmp
insl
loop
mov
xchg
aam
inc
loope
mov
mov
sub
sahf
mov
adc
cwtl
cmpsl
pop
mov
pop
lea
xor
idiv
cmp
push
jno
fcomps
loope
std
cmp
mov
mov
add
xor
jge
cwtl
sub
or
inc
lea
sahf
sub
cmp
aad
and
cltd
fldt
cmp
decb
or
iret
test
mov
or
or
in
fcoms
into
jecxz
gs
fiaddl
or
sbb
push
inc
lahf
test
dec
xchg
rolb
mov
aam
dec
in
cld
popf
out
stc
cmc
nop
insl
cmp
push
mov
and
sahf
mov
rorb
xchg
not
cmc
add
lods
incb
jae
outsb
mov
adc
pop
push
sarl
mov
xchg
push
push
sub
add
mov
dec
sar
fnstsw
addr16
bound
inc
sub
lahf
test
adc
js
scas
push
sbb
mov
enter
ret
cli
lods
or
dec
dec
dec
adc
adc
inc
int3
xchg
pop
or
add
push
in
in
xchg
lcall
mov
jae
dec
cmp
jge
xchg
xchg
je
inc
mov
test
push
or
pop
repnz
and
and
mov
add
outsl
sbb
out
adc
mov
mov
inc
add
fbld
push
cwtl
orb
cmp
repz
xor
cmp
aaa
imul
add
lock
cli
sub
jo
push
xchg
out
les
push
adc
scas
movl
mov
cmp
aas
xchg
xor
mov
mov
insb
cmp
out
sbbb
loope
out
out
inc
cmp
sbbb
cmp
fwait
push
mov
int3
jne
ror
inc
daa
fidivs
ficompl
dec
jmp
sbb
and
add
adc
push
es
std
aaa
pop
and
test
call
add
cmp
es
ds
repnz
add
ror
stc
jecxz
xlat
inc
ret
lahf
mov
mov
mov
mov
adcb
rcrl
inc
repz
fwait
rclb
sarb
aas
cwtl
inc
sub
enter
es
hlt
call
sbb
test
mov
arpl
adc
sbbb
andb
cmp
movsb
rorl
add
xchg
popf
stos
xor
add
dec
adc
pop
push
jnp
mov
pop
fisubrl
mov
std
pop
xor
inc
dec
addl
iret
mov
cmc
lock
inc
sbb
mov
daa
push
mov
imul
xchg
add
insb
cmp
lea
add
dec
push
dec
xor
cmpsl
cli
pop
and
xor
or
lock
dec
jne
movsl
sub
js
mov
in
dec
lret
rol
dec
xor
pop
mov
adc
cmp
mov
pop
addr16
jb
mov
arpl
xchg
lret
pop
xchg
sub
pop
pop
xor
scas
test
dec
push
and
js
call
dec
cs
int
lahf
xchg
rcrb
sarl
jo
xchg
and
lods
lret
mov
fcoml
mov
in
mov
sbbl
xchg
jmp
lret
cltd
xor
jbe
in
sbb
fmuls
mov
or
movsl
inc
outsb
mov
sti
in
je
fdiv
xor
outsl
xchg
fistps
mov
adc
mov
push
hlt
jle
mov
fisubrl
out
pop
icebp
out
or
cmp
popa
push
nop
dec
aaa
mov
dec
addr16
ss
jge
cmpsl
inc
inc
imul
cmp
jle
outsl
xchg
movsl
mov
ret
and
and
outsl
nop
push
lcall
add
or
push
sbb
imul
and
add
in
jl
or
adc
or
jo
or
jns
lea
out
or
pushf
iret
ljmp
sahf
mov
insl
popw
repnz
mov
aad
xor
movsb
jmp
xchg
je
push
xchg
sbbb
xor
in
roll
mov
dec
repnz
push
push
push
repz
add
pusha
push
push
adc
cmp
lods
lods
stc
jns
rorl
or
mov
xchg
ret
dec
je
cmpsb
ret
test
loop
lds
xor
xchg
imul
cmp
sub
sub
shr
icebp
mov
cmp
mov
pushf
inc
es
negb
les
xchg
in
xorb
ret
out
out
hlt
push
cli
in
fdivrp
js
lods
incl
cmp
cmp
ficoml
or
mov
in
inc
lock
dec
xchg
cmc
les
cmp
mov
scas
and
inc
sbb
scas
pop
divb
lret
xchg
sbb
xchg
adcb
xchg
adcl
and
jmp
int3
out
cmp
pop
or
addb
daa
xor
pop
push
xlat
sbb
adc
cmp
fcos
dec
divb
ds
lahf
push
enter
jge
test
add
ds
je
fs
lods
in
mov
mov
push
mov
or
pop
ret
mov
shll
push
xor
rolb
xchg
pop
pop
or
popa
adc
icebp
jb
outsw
mov
cmp
push
lods
push
cmp
dec
lahf
xor
push
movsb
sbb
movsb
mov
sbb
out
push
iret
ss
mov
adc
jge
popa
jnp
and
out
jo
and
sbb
fwait
psrlq
hlt
movsl
in
sbb
js
dec
pop
frstor
cld
movsb
sub
jns
mov
mov
popa
jns
add
pop
xor
inc
cmp
roll
or
in
cmp
dec
xchg
cli
inc
inc
cli
scas
cmp
sbb
out
push
in
xor
add
repz
jge
outsb
pushf
lods
inc
je
dec
das
fcompl
clc
out
sbb
jnp
xor
or
mov
push
inc
call
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
or
add
add
bound
je
mov
cmp
mov
insl
xchg
pusha
cmp
iret
dec
fmull
mov
and
mov
or
cmc
xchg
ret
stos
movsb
rcll
adc
loop
arpl
loope
std
mov
dec
rcrl
clc
mov
inc
cmc
mov
pushf
sarl
call
and
ds
std
dec
pop
xor
and
mov
fiaddl
pop
adc
stc
push
cwtl
shl
jbe
ja
lea
lock
xchg
imul
sbb
sti
mov
mov
loop
dec
repz
out
and
lret
sub
insb
incb
jb
push
jo
bound
jbe
xlat
jnp
inc
repz
fidivs
adc
shlb
adc
mov
add
insb
mov
lcall
xchg
das
shrl
out
push
xchg
std
stc
jo
sarl
push
sti
or
mov
lods
adc
add
xor
sarl
je
cmp
push
add
mov
pushf
jns
stos
xor
adc
cmc
popa
pop
test
aas
dec
pop
cmp
icebp
mov
and
shrb
mov
das
dec
xor
insb
mov
jae
cli
sahf
xlat
push
outsl
inc
mov
xchg
jl
xor
push
xchg
scas
xchg
in
movsb
jle
mov
cmp
imul
call
xor
xchg
sahf
movsl
cmpsb
iret
jno
dec
lods
mov
cmpsl
adc
lahf
cld
pop
ljmp
inc
sbb
mov
sub
shlb
mov
ror
shlb
or
ja
cmpsl
cmpsb
sub
lods
xor
or
push
sbb
insb
test
jge
sbb
push
add
bound
sar
inc
jmp
jbe
mov
xchg
and
jb
pop
int3
lea
movsl
ret
and
sti
fwait
int3
mov
or
adc
and
fists
or
pop
loop
dec
addb
mov
cli
lods
dec
sub
iret
inc
sahf
mull
leave
into
jo
mov
xor
xor
pop
inc
outsl
push
push
daa
adc
aas
subb
lds
jmp
push
cwtl
cmp
add
dec
adc
sub
add
cmc
mov
pop
mov
std
mov
pop
dec
test
cli
mov
sub
hlt
xor
push
xchg
fs
jg
mov
icebp
pop
iret
aas
ret
inc
add
cmp
and
imul
push
fsubp
mov
xor
add
xchg
jbe
push
dec
fmul
das
out
dec
jno
imul
sub
lock
xor
and
adc
scas
ljmp
jl
push
xchg
sbb
pop
xchg
in
sub
cmpsl
call
adc
jne
aaa
sahf
inc
inc
mov
in
add
movsl
test
inc
mov
cmp
xchg
js
jmp
iret
movsb
fdivs
jns
testl
mov
loope
mov
and
inc
xor
and
adc
outsb
mov
mov
xchg
std
in
repnz
mov
dec
das
add
jl
aad
fcmovbe
dec
mov
or
inc
cli
pop
cmp
loope
inc
jnp
sub
jns
push
popf
pop
cmp
mov
fs
adc
test
mov
lea
push
mov
aad
sbb
push
bound
cmp
test
scas
pop
mov
inc
sbb
or
cmp
xor
imul
movsb
int
mov
movsb
dec
mov
or
daa
cmp
js
push
dec
in
stc
jp
sub
sbb
jo
xchg
adc
adc
inc
lock
xchg
cmpsl
jp
mov
aaa
xor
out
into
enter
cltd
adc
sbb
or
cmp
jns
dec
arpl
inc
dec
xchg
fnstenv
mov
outsl
push
sbb
lcall
push
xor
iret
jp
call
push
push
mov
ret
xchg
rorl
sahf
cwtl
clc
jle
push
or
adc
push
mov
out
jp
dec
out
ljmp
adc
sbb
shr
add
sbb
mov
in
daa
aad
mov
xchg
hlt
sbb
shlb
push
enter
mov
jno
push
das
jmp
lret
xchg
leave
imulb
sbbl
push
xchg
push
les
lds
sub
insl
cld
and
fisubrl
hlt
fmull
test
outsb
flds
add
pop
scas
push
adc
lahf
and
es
sti
imul
clc
int
and
fsts
data16
mov
and
mov
dec
dec
xchg
adc
call
daa
push
sbb
mov
adc
enter
sahf
shrl
mull
cs
sbb
jno
dec
and
das
inc
lret
dec
cli
movsb
adc
xor
adc
sub
mov
aad
mov
cmp
cmpsb
and
shll
mov
push
pusha
xor
in
mov
mov
adc
pop
mov
fsubr
ss
and
xchg
jb
adc
mov
inc
dec
sbb
jb
push
mov
insl
movsb
clc
repnz
mov
loop
daa
nop
add
dec
es
stos
sbb
pop
sub
stc
lea
fstl
sti
out
or
test
xchg
add
nopl
dec
dec
in
and
mov
or
sbb
push
js
lods
out
das
pop
jns
pop
insl
inc
xchg
cmp
addr16
mov
out
mov
push
mul
and
loope
push
subl
xlat
mov
sub
loope
insl
xor
aad
mov
jmp
ficompl
sbb
jbe
movlps
xchg
push
push
sub
mov
dec
xchg
push
pop
fistpll
je
mov
and
out
lret
int3
cli
xchg
jns
loopne
mov
sub
xor
ret
rorl
daa
call
cmp
pop
add
and
popa
sbb
adc
or
mov
adc
or
movsl
in
rorl
jecxz
in
inc
icebp
scas
xchg
and
stos
outsb
jg
clc
scas
dec
sbb
lahf
stc
inc
adc
leave
jnp
and
inc
inc
lods
clc
int
shrb
dec
aaa
sbb
mov
xchg
cmp
xchg
sub
xor
and
fnstsw
adc
jbe
iret
sbb
cmp
or
loope
xchg
sbb
into
gs
cmp
in
jmp
jmp
imul
js
rcrb
dec
mulb
dec
rcll
mov
imul
test
ret
mov
and
subb
push
jge
in
outsl
push
mov
cmc
mov
movsl
popf
rcl
push
mov
sti
jge
adc
cli
cmpsb
mov
mov
es
jbe
mov
std
and
out
psrld
adcl
xchg
push
fwait
imul
in
icebp
dec
dec
lods
addb
enter
pop
mov
mov
jns
outsb
pop
out
pop
stc
test
cmc
dec
sbb
gs
pop
and
fadd
cmpsb
mulb
push
fisttpl
cwtl
clc
sub
add
xchg
test
sbb
mov
jb
ja
push
fistpll
popf
cmp
mov
imul
dec
jle
cmpb
nop
cmp
jns
push
add
or
out
andb
cmp
jne
in
fdivp
push
mov
mov
pop
sarb
lods
scas
xchg
bound
imul
mov
shlb
add
mov
lret
lds
push
mov
rolb
push
cmp
scas
or
ja
or
pop
mov
jecxz
js
aad
push
dec
ljmp
xor
sub
into
aam
xor
adc
rcrb
cmp
test
push
fisubs
lahf
push
lods
enter
inc
xchg
and
jp
mov
add
movhps
push
sti
jl
lret
clc
scas
dec
insl
inc
add
lahf
mov
bound
xorb
mov
mov
xchg
aaa
ss
icebp
jnp
test
sub
mov
adc
inc
fisubrs
movsl
pop
jmp
and
inc
push
shr
xorb
pushf
xor
rcrb
jge
gs
jae
xchg
out
into
shll
jg
lods
loope
mov
adc
sbb
movsl
cld
or
and
das
loope
jo
sub
incl
or
xchg
push
adc
dec
dec
cmp
adc
mov
push
sub
jp
daa
lcall
cmp
shll
jb
mov
cmpl
call
pusha
dec
sbb
je
jb
mov
push
lea
imul
lret
lret
sbb
mov
ljmp
fsubrl
sbb
stc
sbb
pusha
add
push
out
add
ficoms
xchg
sahf
mov
popa
pop
mov
ljmp
iret
hlt
in
sti
daa
xchg
inc
dec
mov
add
dec
dec
dec
push
xor
lods
es
adc
out
mov
xor
nop
popf
xchg
pop
fiaddl
mov
mov
loop
add
sbbl
mov
inc
test
pop
xchg
or
movb
lods
movsb
mov
mov
or
inc
pop
inc
inc
test
shll
push
and
mov
cs
push
stos
fcmovbe
mov
rorb
mov
notl
adc
cltd
jge
test
in
outsb
adc
xor
and
or
adc
add
mov
inc
mov
into
jb
int
out
pop
pusha
sub
sub
cltd
scas
jnp
inc
sub
adc
mov
and
push
pop
sub
sbb
pop
pop
inc
xlat
dec
mov
or
aaa
cltd
sbb
mov
adc
cs
testb
jnp
dec
xchg
push
arpl
outsb
addl
fucomp
ror
mov
shlb
cmp
scas
sti
mov
inc
sub
or
enter
dec
dec
pop
test
inc
push
dec
xor
push
or
push
aam
xor
stos
dec
leave
xchg
in
ret
sbb
dec
aam
and
mov
rol
shll
mov
lret
jp
dec
mov
mov
lods
les
fcomps
in
ficompl
out
pop
mov
cwtl
xchg
orb
jne
rcl
fidivrs
movsb
shl
jo
mov
mov
outsb
and
pop
add
loopne
pop
lret
mov
movsb
pop
mov
aaa
jno,pn
js
fwait
mov
sahf
push
cwtl
cmp
pop
xor
insl
in
dec
inc
pop
pop
adc
mov
jp
mov
pop
cmp
into
insl
adc
mov
pop
movsl
pop
inc
sbb
fcompp
xor
test
mov
jbe
mov
outsl
ss
sub
mov
cmp
jmp
cmpsb
mov
shrb
and
sub
lret
inc
movsb
xor
out
int3
pop
cmp
lret
dec
mov
jns
imul
xchg
xchg
gs
mov
sub
dec
insb
cmpsl
dec
test
std
aaa
jbe
in
mov
ljmp
lods
mov
jge
inc
out
test
clc
jbe
ficoml
and
js
rcrl
xchg
xchg
sbb
and
cmpsl
enter
inc
mov
out
fwait
cmp
jnp
fdivrp
jnp
lret
mov
mov
lea
addb
push
jnp
pop
sarb
and
mov
mov
mov
mov
out
aaa
dec
aam
pop
mov
leave
inc
mov
sbb
push
cmpsl
mov
mov
adc
xor
push
xchg
push
lods
rolb
sahf
push
cmpl
pop
test
push
and
sbb
pop
cmpb
pushw
shlb
scas
or
fstps
dec
pop
dec
inc
ret
mov
icebp
out
push
ja
ljmp
mov
jmp
les
mov
mov
adc
cmp
fistps
add
addr16
cmp
mov
cs
in
sub
push
or
inc
lds
adc
idivl
push
cmp
inc
pop
stos
iret
test
jp
jl
mov
lods
pop
pop
push
lcall
es
push
adc
iret
adc
jne
cmp
dec
decl
jnp
pop
add
in
andb
leave
lea
fists
xor
pop
ja
pushf
add
sti
pop
mov
fdivs
jp
mov
mov
sarl
popa
push
xor
mov
lods
lods
mov
mov
pop
jnp
push
les
push
jmp
add
and
jmp
jns
das
xor
xorw
outsl
pusha
mov
xor
aaa
sti
jae
xchg
xlat
daa
clc
dec
cmpl
iret
inc
xchg
outsb
out
mov
sbb
push
xchg
bnd
pop
addl
jp
lock
pop
outsl
and
pop
out
add
pop
or
pop
adc
cmp
inc
mov
fdivs
out
sub
inc
mov
mov
inc
nop
pop
dec
dec
mov
jb
stc
add
aad
xchg
xchg
scas
pop
push
mov
mov
push
hlt
sbb
push
mov
pop
gs
aas
mov
icebp
popl
mov
push
adcl
bound
and
mov
xchg
cwtl
into
in
jns
xchg
sbb
leave
negl
and
jne
push
addr16
mov
popf
cmpsb
inc
shlb
pop
out
xchg
cmp
outsb
cmp
movsb
lea
cmp
or
or
pop
sub
dec
xor
fidivl
push
movsl
pop
repnz
xor
mov
cmc
or
lods
cli
xchg
jno
xchg
fdivrs
sti
adc
push
aad
push
sub
push
pop
sbb
push
insb
test
imul
loopne
lds
inc
jl
push
fldl2e
jle
test
pop
les
stos
cmp
rorb
mov
and
ljmp
shll
icebp
cwtl
out
sub
arpl
sarb
movsb
repz
inc
mov
dec
jbe
jno
sub
daa
ljmp
cmp
data16
push
imul
test
pop
repz
jns
lahf
in
mov
decb
jge
pop
dec
in
minps
nop
iret
pop
push
pop
aam
popa
cld
popa
or
enter
loopne
push
xor
xlat
jge
fidivrs
ds
push
add
adc
push
or
inc
dec
inc
out
jp
test
pop
fisubl
fisttpl
or
call
cld
out
scas
mov
pusha
jbe
pushf
cmp
outsb
mov
test
test
outsl
ljmp
mov
fistl
scas
movsl
mov
loop
and
xchg
cmp
adc
adc
cmp
ficomps
xlat
cmc
test
out
insb
push
and
xchg
lcall
ret
jb
ret
jp
popa
mov
lds
shlb
add
cmpsl
sub
aas
out
pop
sahf
fcoml
mov
pop
mov
fsts
sbb
cmpsb
add
mov
push
mov
cmpsl
mov
aad
imul
lods
and
fisubrs
jl
xlat
daa
lods
sbb
mov
mov
mov
pusha
mov
pop
ret
scas
insl
arpl
clc
loop
pop
int
jne
loope
dec
sbb
jp
enter
mov
sbb
push
test
xor
iret
das
mov
test
jmp
dec
jl
pop
fucom
fwait
dec
xor
sbb
jns
shrb
in
idivl
into
dec
xchg
int
xchg
adc
sbb
and
mov
mov
xchg
je
jg
inc
mov
mov
cmp
mov
jb
test
mov
jl
ja
fdivrp
sub
jnp
mov
std
xor
dec
dec
mov
mov
pop
cld
popa
clc
mov
or
or
sub
scas
adc
push
scas
rclb
movsl
movzbl
int
sub
jns
fcomps
aad
stos
adc
jno
add
and
xor
aad
popa
pop
push
mov
mov
sbb
mov
inc
movsb
sub
in
scas
jg
ja
mov
sub
mov
add
imul
mov
jo
adc
call
stc
int
jl
popf
pop
inc
mov
cmp
adc
mov
push
loop
testl
lock
mov
sbb
xlat
lcall
adc
icebp
push
cli
dec
fisubs
das
ljmp
popa
inc
push
push
push
jbe
hlt
push
sti
sbb
push
arpl
pop
inc
sub
mov
xor
es
pop
insl
addr16
cmp
imul
enter
ret
sbb
addr16
xchg
and
scas
push
jmp
jg
fimuls
cltd
repnz
dec
xchg
add
iret
pop
cmp
jecxz
mov
div
xchg
xor
ficoms
push
jns
xchg
jecxz
ja
mov
fbstp
dec
int3
sbb
enter
fwait
lret
dec
inc
mov
sbb
cwtl
addr16
iret
iret
push
jl
inc
cmp
fists
cmpsb
push
xlat
in
pop
adc
daa
mov
popf
lcall
jecxz
adc
cmp
mov
aaa
cmp
push
jns
dec
iret
int3
rclb
adc
dec
insb
pop
sbb
inc
std
mov
aaa
and
daa
add
sub
inc
mov
jl
xor
std
lods
jecxz
int3
xchg
xchg
mov
sbb
js
inc
repz
cmp
imul
pushf
cmc
push
add
divb
orb
iret
and
enter
mov
out
lret
push
ds
and
pop
and
fld
ljmp
insb
andb
shrd
lcall
fimull
imul
lods
inc
pop
mov
add
lods
adc
inc
cmp
cltd
xchg
scas
cmp
mov
hlt
jle
mov
adc
lcall
push
push
lods
idivb
sbb
mov
es
shll
and
lahf
js
outsl
mov
xchg
or
sub
aad
mov
jne
mov
test
cmpl
out
cmpb
aas
pop
and
mov
popf
cs
lret
pop
and
daa
jmp
out
sbb
pushf
xorl
call
mov
sub
mov
sbb
cmpsl
fidivrs
and
cmpsl
push
push
rcll
or
xchg
int
jmp
sub
dec
xchg
into
xor
adc
lahf
add
xor
xchg
jns
lcall
jns
das
pop
mov
lahf
cmp
repnz
ja
inc
xchg
pop
adc
and
mov
mov
shrl
idivl
or
int3
pop
mov
and
je
jb
and
pushf
pop
sbb
in
jbe
xor
das
mov
jno
mov
dec
dec
cmpsb
mov
pusha
jnp
push
and
and
lret
push
mov
push
in
scas
cmpb
adc
mov
push
enter
sub
xor
aaa
sbb
cld
les
xor
and
addr16
fldlg2
and
inc
das
mov
fisttpl
lahf
repnz
call
arpl
push
pop
xchg
popf
les
lahf
cld
mov
adcl
jae
and
shl
cmp
sbb
cmpsb
aam
pop
mov
jg
negl
adc
bound
in
cmpsb
dec
sub
aas
push
outsb
adcl
adcl
dec
mov
push
dec
into
sub
jo
or
cld
mov
cmp
cld
aad
pop
adc
rcrb
lret
sub
int
add
and
mov
es
fildl
cld
mov
or
push
loopne
push
adc
testb
xor
or
jno
sub
add
fnstenv
sub
add
out
cs
inc
xchg
rcrl
imul
mov
xchg
cltd
cmp
imul
fstpl
pop
dec
sub
adc
jb
out
adc
xor
push
mov
adc
add
out
stc
push
out
lcall
and
int3
bound
jl
pop
fdivrl
push
mov
sub
gs
outsb
sub
and
jmp
das
inc
out
sbb
sub
fldt
int
xor
popf
push
push
lods
jno
dec
std
inc
xor
xor
xor
pop
mov
outsl
jbe
jmp
push
push
xchg
imul
adc
ret
cwtl
mov
mov
cmp
call
xchg
xchg
pusha
dec
popa
stos
jl
cmp
xchg
mov
mov
mov
shll
sbbl
repnz
adc
fs
fldlg2
mov
xlat
in
pmulhw
jmp
adc
subl
push
je,pn
aam
dec
xor
cmp
cmp
jne
ficoml
mov
pop
mov
pop
mov
nop
sbb
es
mov
xchg
int3
push
xlat
mov
inc
push
mov
popf
push
roll
lock
fisubs
inc
pop
pop
out
cmp
add
enter
lahf
mov
add
cmpsl
out
and
std
aaa
cmpsb
cmp
andl
mov
fstps
addr16
jae
xchg
imul
fisttpl
cmc
loope
out
add
and
inc
pop
add
cmp
cmc
out
repnz
dec
xchg
jp
pop
and
sbb
sti
mov
xchg
movsl
mov
jmp
push
sbb
pop
gs
ljmp
mov
and
orb
cmpsl
sub
jnp
cld
sar
pushf
scas
repnz
imul
add
fldcw
inc
test
pop
jmp
and
lret
xchg
pop
dec
rcl
data16
adc
adc
mov
scas
jnp
inc
jge
mov
sarb
divb
xchg
sub
cltd
popa
jne
roll
xchg
imul
mov
and
pop
shr
out
or
jae
sub
std
js
and
xor
or
xchg
xchg
xchg
and
dec
cmp
adc
xchg
adc
nop
push
dec
in
clc
out
int3
mov
lods
sub
sarb
jns
xor
mov
mov
cltd
jnp
adc
outsl
int
out
repz
jo
add
inc
in
push
mov
mov
adc
mov
rcrb
xor
mov
sub
dec
mov
push
cmc
je
hlt
sahf
cltd
test
bound
lds
push
cmp
fcomps
sbb
shlb
lcall
adc
lock
notb
mov
push
cld
or
outsb
sbb
lcall
cmpsb
add
push
push
mov
or
push
mov
push
movsl
mov
popf
lahf
dec
nop
mov
jb
and
pop
outsb
mov
addb
mov
clc
lea
ljmp
and
xchg
lret
push
je
js
lods
sar
fneni(8087
in
clc
outsb
sbb
out
pop
jno
mov
loope
enter
mov
dec
pop
out
or
jae
mov
out
ja
xor
pop
jle
int3
lret
test
repnz
jg
pop
das
sti
sbb
xchg
and
movsb
ds
pusha
mov
jp
inc
cmp
xor
sub
pop
cli
ljmp
pop
in
xor
jne
call
ret
jmp
shlb
lret
push
mov
insb
mov
cmp
inc
xchg
ret
dec
cmp
or
test
mov
pop
jae
dec
mov
pop
jle
xchg
xchg
pop
rol
test
xchg
push
pop
shrl
jle
cli
jae
shl
or
nop
dec
inc
dec
xchg
out
es
inc
push
add
roll
dec
movsb
push
rolb
repnz
add
les
push
mov
aas
out
mov
addb
dec
mov
fisttpll
ret
popf
andb
daa
jns
icebp
xchg
pop
add
ja
in
or
ds
enter
pop
jp
int
mov
or
out
cmp
push
or
cmp
dec
pop
sub
test
push
add
nop
test
mov
cwtl
jno
in
dec
pushf
pop
sbb
xor
je
mov
call
mov
adcl
mov
jmp
pushf
ljmp
cmp
test
mov
pop
stos
cmp
jl
movsb
aam
mov
push
data16
int
scas
mov
inc
fistl
and
adc
lahf
sub
incl
and
andb
int
out
loopne
jo
hlt
inc
jns
mov
les
cmp
sbb
push
mov
push
fsts
iret
dec
pusha
out
movsl
or
sub
pop
and
lods
add
fs
and
sub
pop
jecxz
aaa
mov
cmpsl
hlt
sarl
addr16
test
out
or
out
bswap
xchg
inc
mov
inc
push
stos
mov
pop
mov
lods
and
js
in
jle
adc
cmp
xchg
and
mov
or
in
fcmovne
mov
sbb
shrl
gs
cld
insb
outsb
loopne
stos
rorl
xchg
cmpsb
xchg
pop
addb
cld
mov
ret
xor
ret
cmp
sbb
add
mov
ret
inc
and
xlat
shlb
sbb
push
xchg
cmp
jg
fdivrs
xchg
adc
stos
or
add
insb
loope
jmp
lcall
inc
loope
sbb
les
shlb
cmp
fcom
shr
xor
daa
das
inc
scas
cmpsl
mov
xchg
adc
xchg
lds
xor
shl
test
ja
mov
sbb
hlt
repnz
mov
and
cmp
xor
into
dec
test
push
icebp
push
inc
addr16
pop
mov
xchg
movsb
mov
adcb
mov
iret
hlt
das
push
jp
or
in
add
imul
icebp
adc
loopne
cmpsl
fildl
in
fnstsw
lret
xchg
insb
cmp
adc
inc
mov
outsl
xor
clc
nop
sub
adc
fs
mulb
fildll
and
cmp
xchg
push
cmc
lret
jne
cltd
ss
in
push
movsl
adc
ud2
out
inc
mov
adc
jle
mov
scas
pop
sti
popf
push
mov
imul
or
loope
fsub
push
sti
lahf
adc
sbb
jp
mov
dec
test
xor
outsl
into
and
mov
mov
std
and
movsb
xor
jnp
mov
inc
mov
pop
mov
inc
repz
add
xor
jbe
cmpsl
and
ds
push
or
xchg
mov
jne
adc
aas
test
stc
adc
inc
int3
rclb
decb
ficomps
xchg
push
jne
pop
push
mov
cmpsl
jnp
mov
loop
mov
nop
outsl
sahf
xor
pusha
adc
stos
xlat
inc
mov
mov
fdivs
and
fiadds
inc
mov
imul
adc
add
addr16
pop
pop
jmp
jne
fisttpl
adc
mov
out
out
mov
jp
ror
fiadds
pushf
rorb
adc
xchg
shr
sub
mov
xor
pop
dec
adc
xchg
cs
pop
ss
inc
shl
insl
scas
stc
inc
and
sbb
jmp
jmp
sbb
test
cmpb
fisubrl
and
addb
adc
mov
insl
mov
cli
incl
insb
mov
jmp
xchg
lock
and
add
xchg
jne
test
imul
pop
mov
int3
xor
ss
dec
mov
or
cs
test
sbb
mov
aaa
aad
push
sbb
xchg
jmp
lock
lds
repnz
ret
stc
push
cmp
push
in
jle
jno
mov
popa
in
mov
jecxz
xchg
xor
cmpsl
pop
clc
or
dec
ja
mov
pop
jmp
jne
xchg
mov
mov
xchg
mov
les
and
rolb
cmpb
dec
leave
sub
nop
mov
icebp
inc
scas
jb
out
fisttpl
cmp
dec
movsb
jb
adc
xchg
and
cmc
xor
sbb
aas
incl
cs
sub
jg
mov
push
cmp
ficompl
out
leave
mov
pop
inc
inc
cltd
xor
add
addb
in
int
mov
xchg
insl
mov
pop
or
scas
cmp
push
lods
or
sbb
jp
sbb
rcrb
add
push
jo
ss
push
xchg
xor
xchg
add
out
ss
fcmovb
push
mov
adc
arpl
push
loope
dec
mov
inc
cmp
fiadds
js
adc
lret
xchg
dec
xor
inc
pop
sub
pop
lcall
sub
loopne
arpl
xchg
adc
cmp
mov
and
lcall
sub
in
pop
adc
call
pop
mov
in
pusha
and
jge
inc
mov
jmp
inc
aam
and
adc
fldenv
fs
imul
ljmp
push
dec
dec
jg
sub
imul
arpl
mov
mov
loope
lock
xchg
add
in
jge
push
or
sarb
cmpsl
mov
sahf
leave
gs
ficoms
insb
inc
mov
outsb
sbb
and
mov
decl
push
sti
lret
or
add
adc
in
mov
lahf
jge
int3
dec
hlt
paddw
adc
rorb
jae
cmpsb
mov
adc
sub
adc
pushf
fstps
inc
xor
jb
pop
lahf
aam
lods
mov
mov
dec
sbbb
jo
popl
test
stos
push
xlat
lea
data16
fcoms
lcall
out
mov
stos
out
movsb
imul
push
lods
test
add
sarb
ss
and
mov
insl
push
stos
adc
push
mov
pop
cmp
adc
loopne
imul
stos
cmp
mov
jnp
icebp
cltd
mov
mov
push
scas
mov
jbe
sub
dec
or
ljmp
dec
cs
fisttpl
in
cltd
pop
inc
lahf
dec
xchg
cmp
pop
jg
or
sahf
cwtl
dec
ret
cmp
cwtl
adc
pop
or
cmp
test
enter
fistl
add
add
inc
add
dec
xchg
add
add
add
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
test
mov
add
bound
decb
lds
pop
and
cmpsl
dec
idiv
pushf
inc
iret
lahf
cwtl
push
pop
push
pop
leave
leave
addl
mov
mov
sarb
pop
cmpsb
fsubrs
insl
std
and
sub
imul
rorl
or
fisubrs
iret
xor
rcrl
or
jbe
sbb
fcmovnbe
in
pop
lock
sbb
xlat
and
jb
jmp
mov
inc
sti
loopne
lods
xchg
inc
jg
mov
pusha
in
sub
xchg
pop
mov
jnp
mov
jecxz
adc
mov
out
jo
es
cmp
pop
push
jne
mov
sbb
xor
leave
jg
jp
push
mov
mov
sahf
cmpb
mov
dec
pop
iret
stos
pusha
je
xchg
movsb
push
sub
xchg
imul
jl
call
jmp
addr16
in
std
jno
insb
cltd
aam
jbe
inc
out
dec
fwait
xor
pop
in
mov
mull
or
add
rcrw
test
mov
pop
xor
push
cmc
xchg
in
mov
and
dec
pop
outsl
and
out
pop
iret
into
xor
dec
mov
out
fwait
or
dec
loop,pt
mov
xor
mov
sbb
pop
test
fwait
xor
sbb
rclb
in
loope
jnp
pop
shrl
jo
jbe
into
ss
jmp
aaa
jne
js
cltd
sbb
lcall
insb
repnz
in
pop
das
call
and
divb
add
cwtl
push
fcmovnb
insl
add
jle
popf
or
adc
daa
mov
add
in
push
sub
aas
dec
inc
mov
inc
imul
inc
je
jo
push
cmp
mov
jp
pop
loop
jno
fbstp
iret
leave
addw
into
out
inc
lea
aam
aam
mov
testl
cltd
push
add
xor
popa
lret
pop
insb
xchg
or
pop
push
call
xor
lret
pop
shrb
lahf
fld
js
pop
fcmovb
mov
xor
imulb
jp
out
sbb
xchg
adcb
aas
adc
stc
lods
lret
and
addr16
scas
test
fs
inc
mov
xor
pop
orl
loop
int
fldcw
jecxz
incl
inc
mov
add
mov
aam
sub
mov
es
jns
and
enter
sbb
jb
or
dec
inc
fisubs
gs
cmp
xchg
sbb
cs
push
into
ljmp
mov
stos
cmp
mov
jl
mov
stos
adc
mov
cltd
ljmp
insb
je
inc
jo
sbb
in
insb
das
jo
clc
adc
cmc
out
imul
jnp
xorl
push
mov
enter
stc
jl
sbb
mov
xor
xchg
mov
jbe
inc
adc
cli
push
enter
repnz
ret
int3
outsl
aam
sub
mov
jp
mov
jl
cmpsl
stos
in
lds
fs
test
fcmovnbe
ljmp
mov
push
movsb
cwtl
cwtl
call
dec
bound
pop
push
loope
iret
or
cmpl
jb
idivl
out
xlat
xchg
mov
push
fildl
sti
dec
sbb
insb
inc
sbb
aaa
lret
mov
mov
and
repz
or
rorb
cli
xor
decb
neg
mov
mov
push
test
enter
adc
push
imul
gs
data16
scas
adc
aam
ret
fidivs
icebp
std
mov
ret
inc
lock
shrl
sbb
jp
repz
inc
add
xor
cmp
shr
imulb
lret
push
ficoms
mov
mov
mov
mov
add
push
xor
movsb
fs
fldt
xchg
int3
inc
mov
testb
orb
or
cmpl
jmp
mov
inc
mov
mov
es
jo
sarb
popf
pop
mov
mov
xor
mov
dec
jbe
mov
mov
xchg
adc
cmp
cmc
mov
ja
imul
jle
ljmp
rcrl
jo
jecxz
test
jne
popa
fcompl
or
fsubrl
fcos
inc
mov
mov
add
fcoms
insl
pop
adc
lods
std
mov
sbb
daa
sbb
push
shll
ret
add
jg
loope
loop
push
ret
in
xchg
inc
or
mov
dec
sub
cmp
gs
mov
fstl
inc
xchg
push
das
adc
cmpsl
adc
in
in
inc
outsb
jae
stc
ja
in
cmp
repz
cld
cltd
and
xchg
mov
jb
xchg
fs
cmp
push
cwtl
or
arpl
in
dec
rclb
mov
cmp
rorl
pop
inc
xchg
repnz
std
movsl
push
sub
mov
insb
hlt
call
nop
pop
sbb
sbb
out
scas
dec
shlb
ss
in
cs
mov
daa
outsb
pop
test
cmp
addr16
push
and
mov
lahf
adcb
adc
loop
mov
inc
mov
lret
and
or
add
pop
repz
movsl
insb
mov
xor
jecxz
cmp
xchg
mov
cld
enter
fnstenv
xchg
and
addr16
xor
sbb
lea
mov
fimull
jmp
push
out
fsubr
daa
insb
arpl
push
jnp
cmp
adc
sub
adc
fsubrs
jmp
mov
je
xchg
in
cmpl
std
sbb
outsb
hlt
test
pop
mov
inc
sbb
negl
insl
inc
fwait
pop
cltd
pop
mov
xchg
lds
cwtl
jp
push
ljmp
lret
daa
loope
mov
inc
sub
push
add
subb
dec
jae
aad
lds
scas
jp
incb
jb
cmp
mov
sub
sub
scas
cmpsl
add
push
test
cmpsl
aam
into
sbb
adc
lods
and
xor
mov
xchg
sub
xchg
popa
jne
aam
out
mov
push
xchg
cmp
aad
sub
shlb
jo
lea
and
fwait
ret
pushf
mov
loopne
orb
out
sbb
jae
sub
sbb
mov
test
mov
push
xchg
xor
add
pop
jg
subb
lea
push
les
lods
xlat
mov
mov
ficoms
add
jge
sbb
mov
adc
pop
movsl
cmp
js
add
cmp
cmova
jp
ret
or
mov
insl
dec
add
ret
cmc
xchg
lods
clc
xchg
sbb
mov
dec
popa
in
out
push
mov
mov
push
inc
rol
not
push
aas
sub
dec
pushf
add
jno
addr16
push
fbld
hlt
rolb
push
daa
add
lret
cld
pop
loope
jno
pop
and
data16
aam
xchg
call
mov
jle
leave
dec
gs
je
loopne
cmp
and
adc
in
movsl
in
jnp
or
sub
push
test
jns
xchg
call
int3
sbb
jno
aad
jne
mov
ja
mov
mov
sbb
insl
mov
fsubs
lds
test
and
movsl
inc
pusha
lret
adc
cmpsb
sbb
mov
js
daa
test
or
add
jg
jmp
aaa
outsb
or
cmp
push
sbb
call
cmp
or
pop
popf
fisttpll
inc
mov
stc
mov
mov
mov
fcoml
jbe
imul
aam
push
cmp
jbe
movl
xchg
add
cld
mov
or
push
xchg
js
push
movsl
out
movsb
inc
mov
jae
neg
jg
add
or
sbb
leave
or
lods
test
dec
jp
lahf
movl
lea
push
or
mov
mov
dec
adc
in
sub
gs
stos
cmp
jb
push
les
ljmp
imul
sbb
xchg
mov
outsb
jp
sbbl
xchg
stos
pop
cwtl
fnsave
adc
sarb
inc
imul
cmc
icebp
lock
outsl
cli
pop
jmp
jno
fimull
lea
rolb
mov
xor
in
sbb
ror
xchg
pop
xchg
xchg
add
in
popf
cltd
push
mov
or
pop
fwait
daa
mov
data16
addl
cli
inc
ds
scas
fdivrs
inc
cmpsb
inc
popf
dec
shl
ret
lods
jmp
jb
add
dec
icebp
idivb
loope
icebp
outsb
push
pop
imul
call
lds
dec
cmp
jno
push
and
sub
sub
fwait
orl
dec
sub
dec
adc
cld
lcall
cltd
xchg
push
or
and
cli
jbe
sub
decb
push
jmp
int
mov
xor
testl
aad
mov
mov
scas
and
mov
xor
std
xor
push
movsl
std
lods
shlb
lret
loope
add
data16
imulb
mov
cmp
dec
insl
push
and
sbb
aaa
pop
fsubl
out
inc
adc
in
push
jge
push
ss
popf
enter
push
dec
mov
loopne
sbb
inc
dec
cmpb
rcll
enter
mov
mov
fsubrl
fwait
sub
sbb
add
inc
mov
push
inc
or
push
jmp
adc
imul
ffreep
jmp
test
pop
and
pop
in
aam
and
cmp
out
add
cwtl
add
cmp
ljmp
inc
fmuls
test
push
jmp
cli
or
clc
cmp
and
lahf
and
imul
cs
enter
movsb
repnz
dec
fldl
sahf
sarl
dec
fwait
cmp
mov
add
and
pop
cmp
mov
into
lret
cwtl
jmp
and
addb
sbb
mov
fidivrs
jmp
lea
mov
mov
add
add
fistpll
repnz
lret
std
fnstenv
bound
cmp
loopne
out
lods
movsl
enter
test
sub
ret
mov
xchg
jmp
xchg
ljmp
lret
andb
cmc
rorb
push
movb
mov
outsb
xor
sbb
fsubs
jg
xchg
out
sub
xor
lcall
aas
jecxz,pn
out
mov
sbb
or
cwtl
sbbb
cmpsl
sahf
push
mov
decl
sub
adc
dec
icebp
jbe
xchg
cmp
inc
in
inc
test
scas
mov
dec
mov
jl
into
xor
ss
std
sbb
add
aaa
mov
mov
fcoml
xchg
mov
mov
arpl
cmp
cs
cld
js
mov
in
cmp
mov
int3
dec
je
out
sbb
sbb
add
movsb
aas
jg
push
mov
sub
bound
js
jl,pt
addl
mov
and
push
mov
add
push
sub
stos
stc
jns
loop
shlb
inc
mov
movsb
push
mov
mov
stc
cltd
jo
test
mov
sbb
xlat
sub
mov
lock
sarb
sub
push
jecxz
xchg
cmp
xor
adc
in
jg
pop
aas
int3
popa
add
insb
mov
sbb
outsb
sbb
loop
test
push
add
and
mov
stc
ret
fists
inc
lret
test
cli
sub
push
pop
adcl
sbb
mov
test
mov
repz
insl
jb
jnp
stos
gs
push
aam
pop
sbb
dec
and
dec
and
cmp
orb
ret
dec
mov
xchg
mov
fwait
mov
sub
movsl
gs
or
daa
jne
sub
inc
cli
aaa
push
aas
es
mov
cmp
shrl
call
aam
or
xchg
movsl
adc
sub
lret
cld
mov
pusha
cmpsb
mov
and
inc
or
inc
lret
inc
mov
shrd
fsubrl
cmp
fucomi
jle
loope
push
adc
push
push
mov
and
std
pop
pushf
fstps
ret
fldcw
mov
mov
jbe
fmull
push
cmp
pushf
fucomip
nop
jne
int3
cmp
daa
pop
mov
outsl
push
jl
dec
mov
mov
pop
sbb
or
cmpsl
fidivrs
mov
jno
mov
mov
push
mov
ljmp
mov
dec
orb
inc
inc
mov
jbe
insb
nop
and
cmp
xor
jbe
mov
jp
cmc
gs
push
imul
insl
inc
push
sahf
jno
cmp
fildl
or
inc
pop
test
dec
data16
and
dec
sbb
in
leavew
push
lret
ljmp
repnz
nop
jg
sbb
sbb
movsl
das
ss
lret
mov
mov
test
data16
leave
repz
leave
cmp
mov
jb
sbb
or
in
cmp
das
andb
das
pop
xor
cli
test
cwtl
mov
outsl
or
sbb
mov
ja,pt
imulb
loope
push
das
test
jge
movsb
jno
push
pop
cmp
xor
ret
sbb
pushf
sbb
addr16
adc
lahf
pop
jae
inc
mov
int
imul
int3
cmpxchg
or
and
adc
xchg
push
aad
push
sub
adc
push
xlat
lods
inc
inc
pusha
xorb
incb
xchg
xor
jl
clc
clc
xchg
xor
stc
mov
inc
imul
ror
xchg
push
cmpsb
push
xchg
insb
inc
fadd
mov
pop
filds
cmp
add
ror
hlt
cmp
mov
stc
addr16
call
or
scas
mov
xorl
xor
xchg
mov
xchg
int3
iret
inc
into
sbb
push
lea
inc
in
imul
pop
push
ret
xor
xor
dec
aad
xchg
or
das
mov
paddsb
int
stc
push
out
fisubs
add
clc
xorl
jle
xchg
adc
std
sub
mov
adc
cmpb
mov
cmp
cmpsl
push
xor
outsl
stos
xor
adc
insb
fisttpl
add
sti
ja
xchg
push
pop
pop
jmp
lea
mulb
int3
cmp
add
xor
fstpt
push
subb
and
aam
iret
and
test
pushf
repnz
xchg
pop
into
push
and
in
mov
out
add
adc
add
inc
nop
mov
orb
lea
mov
xchg
jns
cmc
ss
cmpb
jl
popf
sar
xlat
ret
popf
lock
dec
dec
jmp
inc
loopne
pop
or
sbb
jnp
sbb
pop
popa
xchg
cbtw
dec
loope
loop
cli
sub
aam
or
lret
jbe
ret
push
lock
mulb
int
mov
and
loop
imul
incb
cltd
scas
int3
subb
jecxz
in
sbb
repz
imul
enter
and
dec
ficompl
xor
mov
and
mov
inc
pop
cmp
cmp
pop
jmp
sub
fadd
outsb
out
repnz
mov
and
ret
call
test
inc
inc
ja
and
js
push
into
int
pop
repnz
shlb
dec
es
mov
mov
je
ret
ss
add
sbbb
jnp
mov
mov
sub
push
int3
jnp
mov
or
aad
imul
mov
and
add
pop
add
out
cmpsl
xlat
add
or
dec
push
sub
push
inc
lret
jg
push
sti
pop
sahf
xchg
sbb
fwait
pop
ja
cmpsl
jb
repz
mov
xchg
add
rcrb
and
pop
adc
mull
and
pop
jecxz
scas
push
push
cmovne
xor
dec
sub
out
add
lods
cmp
mov
outsb
lea
adc
inc
daa
xchg
js
mov
sub
lcall
xchg
sahf
popa
pushf
mov
sub
push
cltd
cmp
pop
aad
bound
and
loope
add
popa
cmp
sbb
daa
cs
sub
and
ja
pop
push
pop
jle
pop
pop
inc
popf
pop
jp
mov
gs
loopne
push
dec
cmc
cld
jle
xchg
lret
push
adc
mov
les
sahf
xor
mov
bound
fmul
xchg
inc
es
jo
add
jne
pop
cltd
std
dec
out
mov
shll
mov
pushf
xor
xchg
jnp
loop
je
ret
and
mov
icebp
fildl
jnp
dec
cltd
sbb
rolb
and
shl
push
jno
jle
jae
stos
mov
and
dec
fst
and
lahf
stos
stc
adcl
jl
gs
mov
mov
pop
in
push
sub
jmp
adc
xchg
cmpsb
and
push
pop
and
aam
or
pop
xchg
mov
sarl
scas
jns
sbb
gs
add
ret
aaa
pop
ret
add
iret
outsb
movsl
fs
adc
std
xchg
ret
fldpi
dec
divl
add
dec
psrlw
js
cmpsb
outsl
subl
dec
popf
rorb
in
sahf
pop
fcoml
arpl
xor
leave
ljmp
mov
cwtl
imul
shll
aam
adc
mov
cli
push
nop
push
cmp
mov
cmp
push
stos
hlt
outsl
push
sub
pusha
cmc
lods
fldenv
fsubrs
push
imul
int
mov
sbb
mov
mov
sub
xor
sub
shrb
ret
pop
push
sbb
ror
xchg
pop
push
in
and
mov
mull
aam
push
cmc
jbe
mov
sbb
aas
sahf
enter
mov
xchg
out
sbbl
jne
mov
lcall
cmp
cltd
stos
xor
cmpb
mov
addb
lret
repnz
stos
out
mov
dec
leave
jo
jg
sahf
xorb
dec
dec
fs
xor
fwait
aas
xchg
cmp
fimuls
out
test
mov
lock
out
sbb
stos
pop
pusha
loop
and
xor
adc
and
xor
mov
pop
loope
xlat
ds
dec
jnp
jmp
lock
jge
dec
clc
jno
rclb
or
in
lds
hlt
and
imulb
jnp
push
xor
adc
xchg
lds
cmp
in
clc
testl
bound
mov
mov
int3
sbb
out
in
add
or
cmpl
fadds
mov
lret
popf
popa
fiaddl
cmp
xchg
lods
cmp
xchg
fbstp
dec
stos
pusha
enter
stos
aaa
fsts
es
icebp
mov
jle
add
mov
std
lcall
mov
dec
test
fcoms
imul
test
mov
out
adc
inc
adc
mov
mov
pop
mov
push
lods
popf
cmpsl
decl
pop
ret
add
das
push
add
xchg
sahf
aas
dec
aad
add
das
or
ljmp
inc
cs
popa
pop
jno
jae
icebp
pop
jo
jnp
out
out
mov
shl
and
push
or
xchg
movsl
lods
sub
inc
nop
mov
mov
clc
dec
add
pop
dec
fldt
and
add
sbb
loope
int
inc
out
loopne
jp
pop
pop
pop
jp
cmp
fimuls
stos
jmp
fimuls
or
dec
out
pop
mov
cmp
dec
clc
dec
and
push
ljmp
dec
pop
or
sarl
std
into
pusha
mov
dec
js
sub
mov
leave
arpl
bound
jmp
lret
sbb
ret
loopne
mov
data16
or
and
out
fldcw
outsb
test
cmp
out
xchg
sarb
in
in
mov
popa
dec
jns
orb
in
add
jns
out
pop
adc
pop
cwtl
loop
push
in
xchg
or
jbe
es
inc
jnp
insb
aaa
loop
push
mov
mov
sub
leave
add
icebp
and
nop
sbb
loop
mov
xor
dec
popa
mov
rcrb
mov
xor
in
aas
stos
movsl
jne
mov
xchg
lret
imul
xor
xchg
dec
xor
inc
repz
add
add
mov
imul
or
js
lods
sbb
out
popa
xchg
and
sub
not
inc
mov
mov
mov
imul
push
lods
xor
pop
or
cmp
movl
imul
jecxz
sbb
fldcw
mov
mov
lahf
mov
out
xor
ljmp
mov
mov
adcl
mov
or
mov
and
push
es
add
or
andb
loopne
cmp
roll
dec
imul
cmp
lds
pop
icebp
xchg
add
xor
lods
and
insb
add
xchg
mov
adc
in
je
push
sbb
inc
lsl
xchg
repz
imul
lcall
dec
sbb
add
lret
jne
shrl
inc
inc
pop
inc
movsb
add
push
rep
test
testb
pusha
popa
outsb
insb
repnz
inc
or
xchg
push
inc
and
or
inc
sahf
nop
push
add
sub
in
adc
sub
out
or
pop
xchg
leave
and
xor
dec
call
inc
sbbb
dec
mov
dec
mov
pop
ret
inc
jbe
ficomps
push
out
cs
dec
jl
lock
out
lahf
or
pushf
mov
lods
es
mov
in
mov
jge
pop
adc
dec
fildl
adc
pop
popa
dec
inc
lea
inc
adc
clc
daa
enter
mov
or
sub
mov
lret
stos
and
sbb
push
gs
push
sbb
insl
loop
iret
adc
and
fistl
push
inc
pop
push
outsb
inc
cmp
ret
cmp
lret
daa
pop
mov
sbb
sbb
gs
lock
icebp
test
pop
mov
cmpsb
pop
sbb
lret
xor
out
jecxz
mov
adc
sub
lods
ja
or
lock
cmp
pop
and
adc
jne
cmc
test
jp
ret
imul
push
cmp
bts
pop
call
pop
mov
aad
into
pusha
ret
inc
xchg
fs
mov
jg
loopne
ret
dec
sbb
push
add
sbb
popf
add
cwtl
mov
push
pop
dec
dec
icebp
xchg
jno
push
dec
adcb
lock
sub
xor
push
pop
loop
jl
stos
cwtl
jmp
jecxz
cmp
negl
out
lahf
add
repnz
pop
pop
and
or
fsubl
or
fnstcw
out
nop
aam
shrb
push
hlt
and
out
or
sahf
xchg
mov
jo
aad
stos
or
in
xor
outsb
lret
in
cmp
adc
sbb
mov
cmp
out
ret
int
in
jmp
into
inc
sbb
out
jb
mov
hlt
cld
pushf
adc
or
inc
mov
push
sub
xor
dec
jb
and
and
es
popa
xchg
nop
pop
outsl
cli
pop
cmpsb
pop
ret
int
fwait
popa
push
mov
pop
ret
imul
loop
add
jecxz
repz
lods
add
jmp
adc
push
sbb
and
andb
mov
push
inc
shl
test
cmpsl
sbb
scas
mov
jne
pop
mov
aad
jge
jg
lds
in
or
aas
lret
inc
inc
xchg
and
add
sbb
je
cmpsb
xchg
data16
mov
jmp
outsb
cmpsb
aaa
xchg
cld
stos
or
mov
sti
hlt
xchg
xor
xchg
cmp
or
insb
rol
cvtps2pi
imul
mov
leave
jmp
ret
ja
or
in
mov
cmp
push
inc
lods
sub
scas
sub
jl
gs
cmpl
cld
aad
cmp
inc
jge
out
xchg
fidivrl
test
fdivrp
mov
mov
out
leave
loopne
mov
sub
xchg
iret
into
push
mov
shlb
push
or
inc
mov
mov
inc
int
cmp
xchg
or
stc
push
sbb
cmp
push
lcall
jecxz
daa
inc
cmpsb
push
push
outsb
sti
aas
mov
pop
fwait
imul
adc
stos
sbb
mov
jge
sbb
inc
and
xchg
pop
addr16
js
jo
jns
aam
lock
dec
repnz
ret
mov
push
inc
fists
cltd
push
dec
aaa
stc
jbe
insl
mov
movsb
xchg
jb
ret
add
mov
enter
idivb
add
sarb
or
mov
push
fs
inc
adc
jb
jb
movsl
or
shl
push
ret
dec
fucomip
sti
mov
add
or
cmp
or
cli
bound
dec
mov
arpl
sbb
and
xlat
in
xchg
ss
in
cmpsl
mov
stos
es
add
pushf
push
fdivrl
cmp
test
sub
cmpsb
push
in
jg
adc
and
adc
and
pop
sahf
iret
jmp
xor
rcr
in
mov
mov
mov
mov
arpl
xor
push
loope
and
insb
lret
pop
and
inc
add
or
pop
lcall
pop
nop
push
addr16
imul
test
repz
sbb
cltd
movsl
or
add
and
das
jb
xor
cmp
push
pop
push
jge
nop
cwtl
mov
or
add
adc
mov
jae
sar
mov
mov
pop
or
mov
sbb
xor
icebp
pop
fs
add
stos
enter
mov
mov
cld
incb
test
movsb
mov
pop
lret
repz
shlb
out
sbb
mov
xchg
mov
jecxz
out
lcall
repz
pusha
inc
pop
lcall
cmp
sti
jne
outsb
jo
mov
mov
sub
in
call
xlat
sbb
les
jecxz
xlat
es
sbb
fiadds
pop
mov
xchg
push
lock
cmp
movsl
in
cs
pop
rcr
or
iret
fnstsw
and
loop
clc
cs
subl
scas
movsb
jae
pop
imul
imull
xchg
test
xchg
mov
adc
xchg
jb
test
push
ret
pop
mov
push
lret
xchg
xchg
jecxz
shrl
subl
adc
mov
daa
pop
jbe
inc
idivl
jae
std
mov
adc
cmp
scas
pop
out
mov
push
movsl
outsb
aam
or
mov
ret
shll
inc
or
cwtl
xchg
imul
movsl
aam
hlt
sub
imul
mov
sbbb
decl
xchg
jne
sbb
cmpsb
testb
dec
iret
subl
sub
pop
pop
cld
push
sub
push
call
out
nop
aaa
adc
fdivl
jmp
or
mov
xchg
cmp
pop
fs
xchg
mov
movsl
clc
push
scas
and
fadds
sub
ljmp
in
mov
repnz
or
inc
adc
push
pusha
add
mov
pop
mov
mov
int3
sub
rclb
fcmovu
fucomip
mov
jne
popfw
call
push
popa
cmp
jge
sub
push
fimull
xchg
bnd
mov
popa
mov
jb
lret
or
jbe
add
xlat
mov
rcl
cmc
int
push
mov
mov
lcall
jae
rolb
ja
ja
ds
ret
push
mov
lret
add
scas
cmp
cwtl
aad
adc
ds
call
cmpsb
into
popf
cli
jle
pop
ss
mov
fnsave
test
pop
rcr
sub
add
mov
or
sbb
sbb
add
xchg
popa
mov
je
fadds
ret
and
mov
jne
mov
mov
in
es
push
mov
pop
outsb
scas
add
jo
push
jle
stos
adc
cli
test
addr16
xor
outsb
xor
mov
insb
and
fiaddl
bnd
mov
scas
mov
aam
fists
aad
stos
popf
push
insb
aad
mov
out
into
add
xchg
cmp
pop
out
rclb
aaa
test
sbb
adc
lcall
adc
xchg
dec
loop
test
in
adc
insb
lds
adcl
sub
pop
push
xchg
mov
inc
sub
xor
pushf
xchg
test
pop
jns
inc
or
dec
popf
sar
das
jl
mov
sbb
adc
xchg
aam
lret
daa
adc
or
cwtl
mov
mov
pop
mov
outsl
sbb
xor
in
mov
shrl
stos
stc
int
mov
rcrb
sahf
push
nop
xchg
pop
fildll
cmp
es
shll
sub
xchg
data16
mov
imul
sub
pop
call
mov
or
test
enter
or
push
push
sub
test
jo
je
and
mov
pop
sbb
sbb
sti
loopne
hlt
sub
mov
jecxz
cltd
mov
adc
cmp
fisttpll
pop
or
ds
dec
mov
ds
pop
cmp
out
push
insl
fsubrs
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
orb
add
bound
sub
nop
cs
aas
je
xor
fsts
pop
push
mov
gs
xlat
in
push
je
sahf
stc
sbb
sbb
gs
xchg
call
jnp
and
cs
mov
jmp
inc
dec
sub
jg
jmp
inc
lods
xorb
enter
pop
cmc
lahf
mov
daa
lret
jo
mov
mov
sbb
and
sub
lahf
jnp
sahf
mov
hlt
test
adc
push
lds
and
cmpsl
into
test
xchg
lret
jne
repnz
aas
enter
adc
cmpsl
out
scas
adc
adc
push
cmc
add
add
add
movsb
int3
cmp
jno
sub
add
xor
add
in
push
shr
xor
in
adc
sbb
jne
stc
sbb
inc
aad
sub
test
fcompl
xor
aas
xor
xor
pusha
mov
mov
or
add
add
jae
or
mov
mov
xchg
aam
add
cmp
or
cmp
jge
jle
daa
push
or
mov
mov
test
push
jecxz
lds
sbb
orl
ss
repnz
in
in
jle
outsl
iret
in
and
das
out
inc
lea
inc
daa
sahf
cwtl
sbb
inc
add
aaa
mov
and
jno
out
and
rorb
test
in
int
fistpll
push
loop
das
aaa
sub
ss
or
lret
pushf
nop
sbb
pop
leave
or
outsl
cmp
cs
mov
aam
test
stos
sahf
cmp
xchg
and
adc
jp
adc
jb
cmp
int
xchg
dec
lret
add
loop
push
js
cld
pop
outsl
cmc
iret
out
jno
subl
popa
cmp
push
add
sbb
push
sbb
fsub
dec
sub
mov
push
icebp
dec
adc
sbb
cld
add
btcl
int
add
pushf
das
cld
imul
jae
push
xchg
sbb
adc
jecxz
or
xor
mov
rcl
pop
mov
sub
arpl
dec
les
das
arpl
mov
xchg
sbb
inc
add
popa
pop
dec
fsubrl
pop
sbb
repnz
cwtl
mov
or
fisubs
mov
mov
mov
mov
mov
push
jmp
and
rorb
cltd
ror
das
xor
movsb
pop
sub
jno
add
or
rorl
gs
jo
outsb
int
shrl
pop
dec
and
push
and
addl
xor
daa
add
or
insb
stos
aam
ja
jnp
push
dec
xchg
pop
xor
xchg
or
push
or
push
jecxz
rolb
mov
jno
fstpt
pushl
int
mull
sub
mov
add
push
push
and
jecxz
push
mov
imul
push
xchg
dec
push
mov
add
daa
jae
ljmp
shlb
repnz
mov
popf
lds
pusha
out
fsubrs
addb
jo
jbe
out
leave
inc
call
cmp
lds
add
fldt
das
cltd
mov
push
xlat
and
or
jns
cmp
into
stos
insb
add
mov
xchg
mov
xor
cmp
add
jo
sub
mov
and
orl
add
jae
add
add
divb
dec
in
dec
test
mov
add
into
aaa
int3
sbb
inc
mov
push
and
mov
xchg
out
das
mov
scas
shl
push
mov
inc
sbb
mov
pop
mov
sahf
enter
cmp
add
popf
orb
sbb
and
lret
mov
adc
stc
mov
inc
pop
or
out
scas
add
movl
xchg
xchg
aad
add
push
addr16
fsubp
jo
call
lahf
pop
jnp
dec
fldenv
mov
cmpsl
xchg
fisubrs
adc
nop
and
jo
stos
mov
inc
mov
mov
adcl
lcall
pop
push
das
shll
loope
pop
mov
mov
in
mov
rol
sbb
ljmp
adc
inc
dec
jb
imul
cmpsl
dec
hlt
pop
add
jp
out
xor
sbb
pop
push
and
add
push
fildl
pushf
sbbl
imul
push
push
aas
stos
mov
xchg
out
or
rcll
xor
add
sub
ret
jbe
mov
mov
inc
cld
popf
jp
test
into
lret
mov
sbb
sarl
and
fucomi
out
imul
push
push
mov
lret
and
jo
and
fwait
sbb
cmc
push
fwait
lock
pop
mov
add
mov
out
sub
and
shll
bound
in
test
sbb
adc
lahf
cmp
sbb
fildl
inc
psubsw
lret
fneni(8087
adc
sub
adc
push
and
and
std
stos
mov
insb
adc
jmp
fisubs
in
ss
in
mov
mov
enter
loope
push
lods
inc
std
gs
fdiv
xor
pushf
out
sbb
in
test
push
xor
and
xor
ficomps
lds
cmpsl
adc
sub
ret
jl
lods
das
jnp
cwtl
cltd
xchg
pop
ret
int
lret
pushf
in
imul
jne
push
push
ret
sahf
dec
div
lds
mov
adcb
jo
enter
movsl
leave
adc
out
lea
and
aaa
pop
pop
mov
mov
jnp
add
lock
int3
and
js
ret
test
rorb
jg
and
pop
sbbb
pop
add
out
mov
push
xor
in
inc
mov
mov
mov
push
out
sbb
jb
js
push
pop
mov
sbb
pop
xchg
in
sub
cmpl
out
call
sahf
es
je
in
mov
fnstenv
je
hlt
inc
sub
fs
adcl
imul
nop
jl
push
into
mov
xor
imul
jne
push
insb
jne
hlt
inc
sti
scas
pop
pushf
xor
arpl
xchg
adc
mov
aam
or
lods
popf
jge
mov
in
push
je
frstor
aaa
pop
cltd
fcmovu
jecxz
inc
adc
dec
mov
push
fndisi(8087
lret
shl
xor
fildll
xor
dec
xchg
cmpsb
fdivr
pop
and
mov
daa
push
sbb
fistpl
lods
into
xchg
loope
aam
repz
mov
leave
jbe
push
lcall
fisubl
push
das
push
sub
pop
sti
xor
test
and
mov
and
dec
mov
fisubrs
xchg
push
adc
jl
movsl
out
or
cli
ret
ljmp
xchg
mov
addr16
jg
sahf
mov
jmp
adc
mov
mov
addr16
inc
push
iret
lcall
out
jno
dec
pop
xor
arpl
adc
jbe
loope
jae
fisubrl
sbb
cld
aas
push
xor
fisttps
clc
and
pop
and
xor
arpl
inc
mov
in
mov
mov
cmp
jle
or
dec
dec
cmpsb
out
push
orl
pop
inc
lds
lock
stos
mov
movsb
enter
mov
push
mov
push
pop
ljmp
loopne
pop
push
and
jg
jb
fisubrl
testb
or
add
test
jmp
repnz
test
inc
xchg
sbb
xor
aas
jg
and
mov
out
push
fsubp
mov
lds
fisttpll
sub
fildl
and
das
iret
adcb
dec
sar
push
pop
inc
pop
inc
mov
pop
inc
sub
jge
in
mov
pop
sbb
mov
mov
loope
shll
sbb
pop
frstor
xor
inc
pop
in
mov
mov
sbb
jmp
mov
pop
ss
loop
fsubs
jae
cmp
lds
xchg
repz
insb
mov
mov
add
jl
adc
ret
mov
xor
adc
or
pop
xlat
test
pop
adc
pusha
orb
push
shlb
inc
mov
jo
pop
xchg
push
ret
adc
push
int3
mov
mov
jmp
sub
xor
repnz
cmp
sub
loopne
addr16
cmp
in
xchg
cmc
xchg
cltd
pushf
and
hlt
sahf
subl
stos
push
test
dec
ss
int
rcr
mov
push
inc
lds
fwait
popa
lds
xchg
in
daa
jns
movsl
adc
mov
ret
pop
push
dec
inc
mov
sti
jae
lods
inc
cmp
inc
push
push
fnsave
pop
pop
icebp
and
insb
lods
inc
mov
jge
xchg
orl
jg
pop
loope
mov
cmpsb
nop
and
popa
jnp
xor
sbb
test
xchg
mov
lods
dec
mov
jbe
inc
add
leave
adc
xlat
nop
sub
push
jb
pop
rcrb
test
popf
shlb
cli
in
out
add
dec
mov
popf
cmpsb
sarl
fwait
jmp
and
stos
imul
cmp
dec
jp
push
pop
cmp
cld
aas
out
orb
aad
sub
push
mov
sub
adc
scas
or
cld
jmp
pop
push
outsl
mov
jmp
je
outsb
xlat
ja
sbb
outsb
aam
mov
cltd
push
jg
push
aas
and
test
inc
into
push
lods
or
pop
xor
fistps
dec
dec
ds
aam
je
jg
adc
nop
in
inc
sbbl
push
iret
lea
or
sub
lret
test
and
pop
sbb
pop
jp
lods
rcl
adc
xchg
push
mov
stos
adc
out
orl
mov
sahf
sub
loop
lods
dec
stos
ss
sub
flds
xor
push
insb
or
cli
scas
lods
mov
add
imul
lds
inc
popf
mov
in
or
jge
jge
sbb
mulb
jb
mov
mov
out
or
dec
fsts
pusha
fadd
jge
int3
add
push
addr16
cmpsl
cmp
xchg
mov
test
push
mov
jge
negl
daa
mov
cltd
push
jns
add
or
lods
xor
scas
mov
pusha
xor
pop
hlt
or
mov
popf
cwtl
into
add
push
mov
test
stc
cmp
sbb
leave
add
popf
mov
cmp
rcrb
in
pop
jno
cmpsb
push
les
aas
jle
nop
and
gs
jns
and
ficomps
test
push
xor
pop
testb
inc
fmuls
xchg
or
mov
sub
fs
dec
add
sub
js
mov
pop
adc
sbb
mov
jbe
xor
sub
pusha
push
adc
or
push
imul
pop
stc
outsl
lea
or
cmp
adc
push
jo
mov
test
mov
lret
divb
das
mov
mov
pop
inc
imul
out
pusha
shlb
jle
imul
fsubrl
adc
shl
movsb
imul
mov
js
mov
in
por
test
iret
imul
or
jl
popa
daa
test
scas
dec
cli
std
adc
push
out
xchg
shrl
add
sub
orb
gs
push
pop
ljmp
das
je
int
int3
dec
inc
mov
shrl
fmul
mov
dec
adc
pop
push
call
rorl
sti
cltd
cli
std
cmpsl
icebp
pop
mov
mov
add
sub
std
pushf
mov
xchg
xor
or
sub
and
dec
cmpsb
enter
lock
push
cmp
movsb
inc
pop
mov
pop
sbb
lret
pop
call
mov
shrb
clc
negb
nop
mov
je
mov
bound
dec
rcr
cmpsl
adc
dec
fistpl
iret
xchg
sbb
call
adc
imul
insb
daa
fidivrl
mov
push
xchg
fwait
addr16
inc
sbb
ss
mov
xchg
aas
cs
cmp
pushf
jge
loope
shll
xchg
loop
fisttps
ret
movsl
loop
mov
stc
leave
cmp
dec
add
clc
push
out
dec
cli
jmp
daa
push
mov
sbb
mov
addr16
clc
scas
dec
lods
xor
testl
mov
jp
inc
fstl
cmc
mov
decb
adc
shrl
add
jae
jbe
sbb
jp
inc
lahf
sar
inc
rcrb
push
jge
xor
mov
add
aam
fildl
mov
or
mov
and
xchg
xchg
loopne
adc
in
push
shlb
stos
divl
sbb
iret
sub
dec
jnp
jbe
loope
jo
push
cmp
xlat
icebp
push
mov
std
mov
and
popf
xor
xchg
clc
mov
lods
dec
adc
xchg
daa
aas
aaa
push
dec
js
imul
leave
or
cmc
aad
inc
repz
rorl
bound
push
stos
pop
jle
dec
stos
in
or
or
adc
fs
mov
js
jecxz
aaa
push
sbb
fmuls
mov
into
sahf
mov
out
ret
shll
adcl
add
jnp
mov
fcoml
test
lods
loopne
pop
sub
add
cmp
cltd
dec
inc
addr16
xchg
xchg
push
cli
fcmovne
das
xchg
or
cmp
shll
insl
in
shll
loop
mov
adc
ds
cwtl
leave
popa
and
cmp
icebp
fmul
outsl
dec
sub
shlb
mov
in
mov
jnp
xchg
aaa
mov
add
out
loop
xchg
movzwl
sahf
call
xor
push
arpl
push
test
fmuls
sbb
leave
ss
jle
jno
call
push
int
inc
mov
mov
xchg
aaa
scas
imul
push
jl
movl
insl
sbb
jge
sbb
mov
pop
pop
xchg
xchg
lods
enter
mov
andb
dec
push
inc
outsl
popa
add
cmp
test
jns
push
movsl
fsubl
repz
outsb
nop
dec
ficomps
add
pusha
je
cmpsb
pop
or
sahf
push
or
arpl
dec
add
jg
cmpsl
cld
xor
out
sub
sub
movsb
fs
cmpsb
int3
xlat
pusha
xor
sti
cmp
sbb
out
and
inc
mov
loopne
leave
jae
cmc
pusha
pop
fdivrl
js
xchg
or
popf
negl
xchg
sbb
in
shlb
outsl
mov
jae
or
jle
pop
jp
leave
inc
pop
sub
inc
cli
push
cmp
fildl
jae
shll
jg
sahf
push
mov
or
shl
adc
in
loopne
das
jbe
in
jecxz
cs
stos
xchg
fdivrp
inc
iret
cmc
pop
xchg
sub
in
and
aad
lock
sub
add
scas
loop
mov
rcll
dec
test
xchg
sub
clc
es
push
fnstenv
lcall
jo
xlat
insb
sbb
sbb
xor
xchg
push
sub
add
xor
jb
lea
sbb
ficoms
inc
cmpsb
add
sbb
fwait
push
enter
ret
data16
pop
mov
les
sub
iret
fwait
andl
sub
daa
dec
jmp
dec
jns
xor
mov
pop
jb
jg
insl
incl
add
push
sub
mov
add
imulb
xchg
ja
mov
scas
leave
negb
xchg
inc
sahf
ljmp
sbbl
dec
inc
ds
nop
sbb
or
lock
adc
test
hlt
xor
cmp
repz
bound
in
push
xchg
ja
fwait
jecxz
jnp
mov
and
inc
sub
pop
les
aaa
xchg
xchg
mov
out
cmp
icebp
jl
push
out
jle
jg
bound
ljmp
xchg
jecxz
push
pop
in
fidivs
push
mov
xorl
push
das
sub
orb
adc
inc
mov
adc
push
jnp
lcall
loopne
das
mov
or
popa
lea
jle
je
es
xor
fldl
pop
cmp
in
xor
xchg
add
pop
das
lea
push
rol
ud1
test
lea
pop
dec
out
jb
xlat
sarb
mov
jecxz
add
dec
loope
adc
mov
dec
sub
jl
rcr
or
arpl
add
dec
jns
inc
in
add
cmpsl
push
fstps
cli
adc
cltd
pusha
ljmp
mov
fisttpl
sbb
and
imul
insl
into
cld
mov
nop
pop
jno
insl
cmc
je
xor
loope
out
xor
push
clc
mov
jmp
icebp
xor
cmpsl
pushw
or
pop
and
sbb
jp
sti
ss
cmp
push
fwait
xchg
repnz
mov
mov
lea
jbe
push
das
fbstp
int
aad
fneni(8087
pop
inc
ss
test
jmp
lea
movsb
mov
or
sbb
cmp
push
je
out
imul
mov
jo
js
pop
inc
cmpsb
enter
cli
add
push
add
jge
call
insb
in
xlat
push
test
pop
dec
xchg
test
fwait
pusha
test
repz
fdivs
dec
push
add
call
lock
popa
xchg
enter
jnp
pusha
sub
mov
lods
lret
pushf
cmpsl
mov
pop
fisubs
into
jl
dec
test
lret
adc
or
pop
sub
fwait
mov
inc
dec
or
cmp
mov
pop
int3
mov
add
jnp
mov
ficomps
cltd
or
test
pop
jno
cmp
xchg
jecxz
mov
lahf
sbb
je
ss
shrl
push
mov
and
push
lret
ret
mov
testl
mov
adc
cli
ds
sub
out
add
out
adc
push
cmp
out
les
mov
sbb
or
and
idivl
cmp
mov
sub
ljmp
dec
sub
sbbb
jae
dec
jge
pop
clc
mov
or
mov
lret
out
mov
pop
xchg
mov
jp
jno
es
dec
das
xor
sbb
aad
out
ljmp
lods
adc
fdivrs
imul
leave
cs
pop
push
adc
and
ljmp
xor
jb
cmc
dec
jbe
mov
aam
jb
mov
loope
mov
jmp
mov
inc
out
xor
mov
fdivl
dec
popf
icebp
pop
lods
cmc
or
inc
int
pop
adc
or
scas
sub
popa
clc
mov
rcrl
xor
add
out
mov
xlat
cmp
cmp
dec
fnstcw
push
adc
mov
dec
sbb
jmp
fidivl
sub
push
subb
mov
adc
mov
idivl
cmp
push
sub
pop
inc
xchg
jns
mov
inc
fnstsw
sub
mov
movsl
in
cmpsl
mov
add
lret
sub
mov
in
push
mov
insl
cmp
mov
inc
jo
addr16
xor
hlt
cmpsl
mov
cs
xor
inc
stos
icebp
and
sub
inc
dec
push
repz
pop
or
mov
movsb
cltd
mov
inc
call
aam
es
into
or
daa
jo
leave
ret
xor
or
in
push
mov
fnstsw
dec
ficoms
push
pop
rorl
push
jl
rol
xor
xor
jbe
pop
dec
xor
inc
fs
push
sub
sahf
lcall
aas
gs
divl
jbe
xchg
lea
mov
imul
adc
jg
add
scas
ret
push
fidivrs
inc
mov
mov
insl
iret
inc
or
shll
jmp
dec
sahf
add
ds
ss
popf
leave
add
lock
test
push
imul
loop
ror
fidivs
imul
scas
movsl
inc
stc
testl
fiadds
push
inc
inc
je
loope
sbb
out
xor
loop
and
inc
sub
mov
jne
xor
or
jns
test
enter
ljmp
arpl
cli
and
outsb
daa
outsl
aam
jg
cmpsb
cmpsl
rorb
popa
mov
push
cmp
inc
dec
and
pop
out
push
jae
push
inc
sbb
dec
fs
or
ret
push
xchg
add
ret
testb
and
xlat
mov
sub
jg
sub
adc
stos
push
inc
cmp
mov
sub
incb
ljmp
push
lret
mov
push
sub
mov
cld
push
ret
jns
mov
outsb
adc
ret
fstpl
and
fidivrl
mov
je
repnz
popa
xchg
jecxz
popa
test
std
loopne
bound
in
adc
jp
lods
test
xchg
sbb
addr16
add
andl
nop
div
and
push
sub
and
mov
inc
jae
movsb
push
mov
add
ret
daa
vaddsubpd
stos
lock
int3
iret
arpl
jb
mov
jns
pop
and
inc
mov
pop
or
pop
pop
dec
je
shrl
jnp
inc
adc
or
sbb
mul
sub
gs
push
xorb
sbb
mov
add
dec
jmp
push
fisttpll
out
cmp
mov
add
cmp
stc
jnp
adc
es
pop
stos
sub
ret
hlt
jae
xor
mov
enter
xchg
mov
pop
xor
fidivrs
into
cmpsl
leave
cmpsb
sub
outsb
or
ret
mov
cltd
xchg
out
push
and
push
es
xor
notl
scas
dec
jge
ret
add
jl
lret
pop
or
push
fists
cmp
iret
repz
pop
int
mov
mov
loop
pop
outsb
das
add
imul
xchg
out
clc
xor
pop
push
addr16
and
std
add
sbb
roll
ficomps
call
jnp
ja
xchg
aas
mov
add
inc
pop
inc
stos
lahf
loopne
xor
lahf
pop
gs
mov
js
push
xchg
pop
xchg
xchg
mov
sbb
inc
jo
out
imul
fisttpll
movsb
fdivl
faddl
popa
call
cmp
lds
cmp
dec
out
push
and
loop
mov
mov
pop
mov
popf
je
pop
sub
cmp
lret
mov
ss
test
mov
sarl
add
outsl
push
mov
push
iret
sarl
and
imul
xchg
int3
add
mov
xchg
mov
lea
dec
sbb
nop
xchg
fsin
scas
lods
cs
cs
mov
adc
je
aad
adcl
jnp
xchg
lods
in
inc
dec
cmp
pop
nop
xlat
int3
cmpsb
repnz
pop
loope
add
jno
cmp
inc
add
adc
jae
fstps
xchg
push
mov
dec
xchg
xchg
fldl
fdivr
notl
imul
lods
incl
ficompl
mov
push
fmul
and
mov
mulb
les
and
xchg
mov
ja
rolb
fiaddl
loop
out
and
or
mov
ret
mov
repz
sbb
xchg
je
pop
jo
mov
xlat
test
je
jmp
mov
sbb
fiaddl
mull
inc
jmp
pop
push
mov
mov
push
dec
jg
dec
scas
dec
jo
ror
pop
out
inc
xor
les
push
mov
mov
cmp
xchg
cmp
xchg
and
xor
insl
jle
inc
pop
adc
loop
mov
and
lds
sub
pop
mov
aad
test
push
sub
adc
sbb
test
sub
xchg
leave
dec
fstl
clc
repnz
cmp
ret
decb
loopne
inc
sub
fwait
jmp
sarb
push
sbb
enter
xchg
in
push
push
add
adc
dec
xchg
lds
cld
aas
xor
sub
xlat
inc
cmc
sti
cmc
add
adc
dec
mov
cmp
sub
in
fwait
mov
add
inc
hlt
jmp
stos
testb
mov
mov
cmc
or
jo
and
add
fiadds
scas
push
or
fisubs
fndisi(8087
pop
int3
or
dec
xor
cld
cmp
adc
out
ja
jge
pop
maskmovq
filds
stos
outsb
test
mov
jecxz
push
xor
dec
mov
dec
jae
sub
jg
sub
cld
lea
movsb
adc
mov
mov
or
or
sti
jo
bound
es
mov
cmp
xor
scas
out
lods
mov
pop
push
je
cwtl
iret
in
mov
mov
and
out
pop
xchg
jl
jp
ret
cli
ss
jecxz
sbb
ret
into
mov
je
addr16
sbb
test
push
fld
push
push
in
xor
nop
cmp
cmp
outsl
imul
ljmp
aam
sbb
dec
out
sub
xor
xchg
xchg
sbb
push
or
insl
das
popa
stc
in
lret
int3
std
arpl
mov
out
jecxz
mov
jbe
call
popf
add
pop
lahf
test
daa
xchg
jno
shlb
mov
repnz
cmp
pop
mov
or
lret
mov
adc
lret
cmp
mov
pop
jo
shlb
int3
lcall
addl
xchg
inc
xlat
sbb
add
pop
jae
sub
outsb
faddl
jb
cmp
or
mov
scas
sbb
mov
and
mov
pop
mov
pop
xor
inc
and
sub
add
stos
mov
lcall
cltd
mov
pop
int
mov
data16
iret
dec
jmp
push
scas
push
dec
fcompl
aaa
or
cmp
mov
mov
jne
add
cld
sub
aad
dec
xor
add
adc
pusha
scas
push
test
mov
mov
mov
mov
inc
test
icebp
ja
xor
cld
inc
lods
xchg
push
add
ss
int3
push
mov
or
cmp
add
pop
cmc
scas
fimull
add
idivl
lds
out
jge
cmp
mov
xchg
ret
gs
roll
or
sar
test
mov
icebp
jle
ret
adc
aam
xchg
lods
xlat
psubw
pop
pop
mov
cmp
popf
jmp
pop
push
inc
cmp
xchg
pop
int3
imul
pop
scas
je
dec
mov
inc
adc
icebp
dec
lds
mov
jo
push
scas
mov
jmp
push
xchg
pop
les
or
xor
inc
je
stc
inc
xor
fildl
adc
push
mov
push
iret
push
lcall
cmc
xchg
lcall
imul
mov
jnp
sub
add
jnp
xor
das
std
mov
mov
mov
mov
and
fmull
push
or
cld
mov
xchg
xchg
pop
test
lret
and
lret
rcrb
jmp
adc
cmp
shrb
addb
add
or
mov
je
push
xchg
push
sti
fs
in
pop
jb
into
fcoms
adc
push
mov
and
clc
pop
mov
lcall
xchg
or
hlt
push
sub
je
in
fisubl
add
loop
pop
push
into
mov
fisubl
out
mov
lret
dec
faddl
jbe
repnz
rorb
fcoml
stc
shrl
repnz
inc
rcrb
fcmovbe
aas
test
orb
test
adc
sub
lock
xor
fisttps
dec
subl
push
mov
inc
sbb
sbb
dec
push
push
and
lods
cmp
push
pusha
icebp
test
test
popa
and
test
and
les
dec
orb
nop
lahf
sahf
or
xor
lret
dec
and
nop
push
add
pop
ljmp
fldcw
adc
push
out
jecxz
loope
int
dec
shrb
lret
fisttpll
jb
cli
or
dec
enter
pop
and
nop
subl
sub
mov
sub
mov
int
push
dec
sbb
sub
in
jmp
shll
daa
pop
cmp
push
mov
imul
popl
loopne
loopne
and
push
push
xchg
xor
bound
push
adc
outsl
outsb
or
jae
jp
inc
mov
pop
repnz
ss
jl
andl
repz
and
loopne
or
mov
mov
xchg
adc
cmc
jge
cmpl
imul
cmp
lret
popf
lods
push
inc
out
and
mov
jmp
cs
loop
mov
pop
jmp
ret
ds
cmp
out
lods
push
jl
and
dec
outsl
push
pop
cmp
in
repnz
jnp
nop
mov
adc
jmp
inc
in
mov
aad
into
fs
stos
fisubrs
je
pusha
mov
repz
fwait
loope
fs
sti
rcrb
lods
xor
jb
cmc
pop
fisubl
cwtl
test
scas
into
or
push
pop
push
pop
push
cmc
les
inc
xchg
scas
test
pop
test
test
jecxz
arpl
xor
sahf
mov
pop
das
js
call
jecxz
rolb
cmp
repz
cmovp
dec
fists
test
fsubl
mov
rcr
dec
fcoml
xchg
sti
sub
xor
sub
mov
jno
scas
jp
mov
in
in
in
push
sti
dec
pop
sub
xlat
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
movsl
mov
int3
add
bound
add
adc
stos
mov
sub
cmp
xor
inc
subl
enter
mov
in
dec
sub
cli
fwait
mov
inc
ficompl
out
outsb
jp
repz
xor
sahf
imulb
and
push
pushf
sbb
adc
cli
xor
xchg
aaa
nop
cmp
fwait
mov
xchg
push
add
add
add
shrl
adc
cmp
out
pop
xchg
push
lahf
int3
add
bound
add
sub
enter
mov
mov
sub
popf
add
mov
xchg
jne
test
sti
hlt
push
jg
stos
mov
adc
mov
mov
jae
es
lds
enter
test
inc
jg
mov
fdivl
insb
jle
dec
fisttpl
push
mov
in
test
mov
xchg
pop
jmp
xchg
xorb
add
sub
sub
addb
int
add
add
add
mov
jle
fadd
xlat
loope
push
in
mov
jge
sub
cwtl
xor
push
add
push
iret
mov
dec
hlt
mov
jle
dec
adcb
repz
andl
stos
jnp
ja
inc
dec
flds
adc
cli
loop
xor
push
loop
fcompl
lea
add
add
add
and
aam
aam
ljmp
je
cmp
add
bound
add
call
popa
out
cmc
sub
push
mov
aam
xor
mov
sarb
int
lock
cmp
cmp
fisttpll
xlat
out
sub
js
cmc
cmp
dec
mov
adc
push
in
lret
inc
xchg
pushf
pop
mov
xor
sbb
js
int3
cmpb
fiaddl
add
add
add
mov
sti
cmpsl
mov
dec
mov
add
add
pop
xchg
lods
data16
jne
inc
or
call
sbb
pop
xlat
roll
pop
sti
lods
jmp
insl
xchg
or
aam
cmpl
int3
out
popa
mov
inc
imul
mov
jnp
jp
push
es
inc
jle
insb
in
xchg
idivl
outsl
aad
imul
mov
les
icebp
insb
mov
adc
add
add
add
out
lods
cmp
stc
stc
jbe
movsl
mov
into
add
bound
add
and
pop
dec
insb
mov
je
nop
pushf
adc
mov
jge
test
dec
mov
mov
mov
adc
mov
adcb
sub
pop
cmp
out
inc
cmpsb
mov
jge
pop
push
pushf
xchg
add
dec
cmp
mov
fcmovbe
adc
add
add
add
push
xor
gs
aaa
push
cmp
bound
add
frstor
icebp
mov
das
ss
ss
add
jns
jmp
out
push
adc
test
hlt
adc
mov
inc
cmove
repnz
jo
popf
mov
xchg
jl
loope
scas
add
loop
int3
pmaxsw
jo
and
push
stc
jno
mov
add
add
add
adc
push
adc
cwtl
out
pop
bound
dec
loope
add
add
cmp
pop
xor
and
sub
clc
sbb
ss
push
mov
dec
lods
and
jne
add
mov
lahf
sub
pop
jmp
imul
or
stos
lods
mov
add
xchg
mov
test
cmp
sbb
outsl
test
leave
xchg
push
pop
cmp
mov
add
add
dec
inc
sub
das
jle
jg
imul
adc
adc
add
add
pop
sti
add
pop
dec
pop
insb
cmc
inc
fmull
es
mov
cmpsb
push
jnp
aam
ret
sbb
cmp
or
decb
sbb
dec
fwait
outsb
ja
sub
daa
push
or
movsb
cs
test
sub
ret
lahf
mov
mov
or
les
mov
add
add
add
addr16
and
mov
mov
dec
outsb
psrad
add
add
arpl
jg
dec
mov
push
dec
decl
fstps
adc
adc
idivb
loop
mov
adc
jae
xchg
lods
test
mov
jg
pushf
jmp
sub
mov
mov
jae
cmp
dec
pop
jbe
add
notl
orb
jge
push
add
add
add
ret
or
ret
lods
sub
mov
iret
jno
add
bound
add
scas
out
push
lock
sbb
pop
and
dec
aaa
push
js
add
dec
jl
ljmp
cld
xchg
jp
lock
sbb
int3
stos
adc
mov
mov
xchg
dec
frstor
gs
out
lods
sahf
punpckhdq
or
lcall
mov
add
fld
add
ror
outsl
clc
rorb
loop
add
add
pop
cwtl
mov
into
sub
add
jmp
push
dec
retw
arpl
xchg
shlb
xchg
lock
lds
mov
lods
push
je
lds
call
sbb
aaa
loope
lcall
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
push
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
lret
add
sbb
outsb
sbb
ficompl
inc
add
inc
add
sbb
pop
sbb
push
sbb
or
mov
inc
add
sbb
mov
inc
add
sbb
cli
sbb
pop
inc
add
sbb
or
inc
add
inc
add
or
or
sbb
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
scas
sbb
adc
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
pop
mov
jg
aad
add
add
lods
dec
xor
fstpt
add
lods
and
or
rcll
out
sub
push
int3
mov
jle
pusha
retw
xor
movsl
bound
xor
xchg
loop
dec
mov
push
xor
repz
scas
fs
scas
jnp
inc
mov
inc
frstor
mov
and
sub
ficompl
add
add
add
sub
cli
jl
xlat
push
fnstenv
pop
xor
add
bound
add
xchg
mov
in
or
push
dec
lods
pop
outsb
or
jg
sahf
das
pop
sub
or
cld
dec
sbb
pop
inc
and
mov
cs
stos
popf
call
push
lahf
mov
ja
repz
fldl
xchg
lret
xchg
push
add
sub
incb
add
add
add
mov
jg
ljmp
push
imul
sub
adc
inc
xor
int
js
dec
scas
push
pop
std
orl
lcall
jle
sbb
mov
inc
cmp
loope
or
sub
jo
orb
ret
xchg
cmpsl
cmpsb
mov
xor
shlb
dec
lret
aam
mov
inc
lcall
add
cmp
in
fimuls
inc
clc
push
cmc
add
bound
add
adcl
and
mov
ss
sub
mov
push
add
inc
ljmp
pop
test
dec
pop
rol
lea
cli
adc
inc
jle
dec
sbb
mov
pop
sbb
adc
ds
test
test
dec
std
sahf
push
aaa
loope
outsl
pop
imul
add
add
add
fnstenv
std
negb
sub
push
ljmp
bound
add
mov
ds
adc
lods
sub
lods
inc
and
push
jne
rorb
fistpl
sti
adc
loop
xor
scas
fcomip
shrb
clc
dec
clc
cmpsb
jbe
push
out
pop
das
xor
imul
mov
mov
ja
dec
arpl
pop
mov
test
je
add
add
add
xor
jb
inc
mov
cmp
add
add
cmpsb
cmp
in
insl
test
outsb
daa
repnz
ss
outsl
idiv
les
stc
dec
jge
push
xchg
testl
jge
scas
cld
dec
cmpsl
gs
jnp
push
pusha
pushf
pop
cli
or
popa
mov
loope
xchg
nop
aad
outsb
loop
ljmp
ljmp
mov
add
add
add
dec
in
fwait
scas
fdiv
pop
sub
push
fadds
add
add
cwtl
ds
or
push
sub
icebp
xchg
dec
popa
fstl
ss
into
mov
adc
sbb
fwait
movsb
aam
rorb
add
dec
pushf
dec
insb
mov
call
dec
ret
lods
dec
aaa
ret
scas
dec
sub
dec
xchg
roll
mov
and
add
add
add
push
add
xor
jb
insl
xor
and
jge
add
bound
add
scas
adc
inc
in
cs
jg
cmp
stc
test
xchg
push
in
mov
loop
lods
xchg
fcmovb
or
sahf
ljmp
ret
rcr
cmpsb
pushf
stos
movsl
call
repnz
in
test
push
dec
popf
pop
fnstsw
mov
ret
orb
jmp
cli
aad
or
add
add
add
cmp
add
mov
out
push
jns
add
bound
add
inc
dec
data16
pop
adc
cwtl
dec
out
je
sub
pop
pop
pop
ljmp
movsb
sar
jp
das
adc
hlt
sahf
lcall
xchg
sub
addl
mov
popf
push
js
jecxz
jno
hlt
mov
cmpsl
mov
fnstenv
inc
hlt
sub
loope
add
add
add
mov
jmp
fimull
fs
sahf
inc
flds
add
add
push
xchg
adc
mov
jnp
mov
lock
pop
lea
xor
rorl
addr16
jnp
ret
and
jge
arpl
ror
pop
movsb
xor
pop
test
sub
push
mov
inc
fnsetpm(287
cmp
fsts
pop
jmp
insb
sbb
mov
add
add
add
pop
inc
pop
iret
pop
aad
ss
dec
cs
pop
fldenv
add
add
or
sti
jbe
jg
jbe
jg
cmpsl
mov
loopne
lret
xlat
pcmpgtb
lods
and
adc
inc
pusha
aad
mov
movsl
or
adc
aaa
dec
jmp
cmp
aam
sbb
in
sub
dec
mov
mov
les
fistpll
mov
into
push
add
add
add
cld
pop
jns
add
bound
add
mov
jbe
aas
push
mov
enter
inc
pop
and
js
aas
jle
iret
adcl
mov
int3
fsubr
es
pusha
jecxz
fwait
lea
cmovge
aaa
jb
xor
lods
cmp
out
xor
add
mov
push
pop
sub
mov
cmp
add
add
add
lock
jle
repz
inc
lcall
add
in
movsl
ret
dec
and
movsl
add
pop
adc
loope
jp
int
stc
xchg
inc
xorb
mov
stos
mov
adc
call
jno
jecxz
paddd
jb
fbstp
sbb
lret
sahf
cmpb
call
xchg
pop
int3
push
add
add
add
cmc
adc
adc
mov
lds
leave
fiaddl
add
add
vprotb
xchg
mov
pop
aas
lret
sti
cmpsb
rcr
ret
lds
jecxz
rol
add
out
or
jmp
jae
outsb
cmpl
mov
lods
mov
mov
xchg
mov
aaa
mov
mov
or
mov
ret
movsl
sbb
push
inc
dec
pop
pop
lcall
or
add
cmp
mov
rclb
cmp
fildl
add
add
movsb
add
arpl
jle
adc
adc
mov
or
sub
pop
ret
xchg
pop
mov
pop
mov
cmpb
pop
sub
lock
data16
and
pop
call
sbb
outsb
imul
xor
mov
jmp
jae
jno
lods
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
mov
fildl
add
add
enter
dec
out
movsl
sub
imul
arpl
movsb
sbb
adc
fdivs
sub
mov
lcall
scas
daa
push
test
in
loopne
push
out
xlat
adc
idivb
sbb
nop
mov
push
faddl
jne
icebp
fisttps
add
add
add
sub
fildll
imul
add
bound
add
cmpsb
xor
jnp
loope
call
dec
mov
sub
dec
xor
add
lods
das
in
mov
scas
or
in
minps
mov
sub
scas
mov
pop
insl
std
dec
jno
je
xchg
cmp
push
xor
and
arpl
xchg
fildl
add
add
add
adc
testl
lea
bound
add
inc
int3
mov
push
push
mov
movsb
dec
sti
sub
mov
out
adc
mov
stos
stos
sub
in
in
les
nop
inc
dec
pop
dec
repz
loop
inc
loop
insl
fsub
sbb
or
fldenv
or
jg
shrl
dec
hlt
push
or
dec
mov
add
add
add
add
jne
jg
clc
cs
push
jmp
add
bound
add
fsubs
push
add
sub
cmp
les
push
sbb
push
lea
and
test
in
lds
adc
test
ss
push
xchg
lods
sbb
cltd
jle
cmp
pop
imulb
stos
push
or
xor
rolb
imul
lea
add
add
add
or
dec
mov
je
lcall
add
bound
add
pushw
je
xchg
fcom
lret
and
xor
fstp
out
or
stos
mov
dec
movsl
fwait
lahf
fisttpll
lods
lods
loope
notb
sbb
dec
xor
jae
pushf
shr
xor
push
push
or
mov
dec
push
nop
data16
pusha
cmc
movhlps
mov
movsb
hlt
and
neg
add
add
add
fists
dec
mov
xchg
adc
int
popf
scas
iret
add
bound
add
imul
cmp
cmp
sub
and
sbb
loope
jne
into
not
inc
shl
jl
dec
push
cli
ljmp
xor
and
mov
test
push
cmp
mov
pop
mov
sbb
jo
push
adc
and
cmp
or
adc
mov
add
xchg
fcmovu
fisttps
push
xchg
or
rolb
add
add
inc
cmp
pusha
fbstp
into
jmp
mov
gs
push
arpl
sub
test
jp
or
ss
stos
jbe
dec
jp
aas
movntps
dec
mov
pushl
ja
shll
push
cmp
imul
les
pushf
sbb
shrb
inc
mov
dec
add
mov
mov
imul
add
add
jle
out
sbb
mov
rolb
add
add
dec
ret
adc
cltd
xchg
std
adc
pop
arpl
enter
sahf
into
adc
fbld
mov
lock
testb
scas
out
xor
sub
lahf
dec
pushf
cmp
icebp
sahf
xchg
lcall
or
inc
in
jno
js
or
int3
call
add
add
add
jo
and
cmp
es
jns
rolb
add
add
push
inc
rolb
lahf
add
xchg
aad
xchg
mov
adc
mov
lcall
ds
sbb
sub
and
lret
stos
jge
out
cwtl
xchg
enter
push
lret
mov
inc
in
bound
fidivrs
stc
push
ret
out
fiadds
add
add
add
xchg
nop
ffree
popf
aam
into
push
mov
roll
add
add
sbb
fmull
lds
inc
and
push
sbb
ja
pop
pushf
ja
sbb
fs
insb
je
jmp
push
push
sti
jp
movsl
adc
lock
in
xor
or
outsl
mov
aam
bnd
xchg
push
hlt
jle
pop
cld
pusha
mov
cmp
arpl
and
pop
add
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
cli
stc
mov
add
add
stc
lds
push
pop
lahf
add
les
jo
cmp
fldenv
push
idiv
add
lret
loop
pop
stos
lret
inc
lea
xorb
mov
mov
js
mov
inc
je
stos
lret
pop
cvtps2pi
jb
sub
loop
shll
aam
xor
gs
lcall
lea
sub
add
add
add
xor
into
mov
sub
out
and
mov
add
add
scas
lcall
fstl
dec
nop
mov
or
enter
gs
dec
sbb
imul
shrb
dec
outsl
stc
mov
fnstenv
lcall
sbb
test
mov
daa
aam
mov
mov
cmp
dec
sub
out
arpl
call
mov
add
add
fucomi
outsb
and
pop
mov
pop
rolb
add
add
adc
pop
cwtl
or
fld
mov
or
sub
rcll
dec
jge
ret
cmpsb
mov
cmp
dec
and
fdivrl
xchg
xchg
pop
aaa
shrl
sbb
scas
pop
call
cs
push
xor
xchg
stc
mov
mov
into
add
test
xor
mov
xor
dec
xor
testl
add
mov
and
cmp
add
add
aas
xorb
add
aaa
in
dec
arpl
mov
testb
mov
jae
aad
and
jle
cwtl
pop
int3
mov
lea
xchg
imul
sti
push
ja
mov
ret
jl
enter
lea
and
xchg
pop
lret
lret
jp
push
repnz
loopne
jp
xchg
imul
add
stc
call
into
inc
mov
es
pop
mov
roll
add
add
jns
nop
js
cmc
and
cmp
es
pop
jmp
push
loop
mov
faddp
jae
push
cmp
push
stos
fwait
call
push
adc
xchg
pop
sbb
lods
cmp
lea
call
sahf
in
in
push
out
in
pop
xchg
int
stos
adc
dec
fdivrs
add
add
sub
sub
in
mov
add
add
repz
and
cmp
add
cwtl
sbb
iret
cmp
aad
popa
ret
or
xchg
mov
sbb
arpl
xchg
out
mov
sbb
inc
add
inc
mov
add
sti
cs
mov
loopne
lea
push
test
fs
xor
inc
out
xor
lcall
dec
aas
int3
sbb
out
loopne
lods
sar
movsl
cmp
roll
add
add
add
xchg
or
loopne
jg
cld
jo
push
mov
or
pop
loope
and
pop
sbb
and
lahf
xor
pushf
inc
add
ds
into
push
xor
leave
jmp
inc
push
xor
int3
jmp
imul
popl
arpl
push
jle
sbb
add
add
add
test
fildll
gs
js
aam
add
add
and
xchg
les
subb
cmp
fwait
scas
add
lea
xlat
pop
cmc
dec
mov
movsb
ret
int3
jg
dec
aam
scas
mov
pusha
dec
mov
in
lds
and
imul
inc
orl
mov
inc
sub
push
sbb
add
add
add
fwait
loope
sub
sarb
add
pop
imulb
add
add
dec
mov
xorb
mov
adc
or
bnd
and
scas
leave
in
adc
test
sbb
pushf
hlt
das
inc
adc
imul
sub
pop
xor
mov
dec
shll
or
mov
add
and
out
sbb
ljmp
add
divl
dec
cmp
dec
dec
div
or
aad
add
add
sbb
shlb
rcr
jecxz
mov
sub
stos
dec
jp
sbb
das
std
jno
mov
repnz
jb
or
lret
in
cmp
xor
xor
psubq
push
fidivrs
adc
cld
jecxz
aam
enter
push
roll
insl
jl
xor
mov
add
add
arpl
jge
mov
daa
mov
sahf
stos
insl
aad
add
add
push
inc
mov
inc
clc
lcall
out
or
out
jmp
inc
adc
xchg
in
pusha
push
inc
xchg
xor
xchg
es
mul
loop
cmpsb
cli
pop
mov
or
and
and
xor
or
xorb
repnz
bound
pushf
mov
sarl
add
add
add
push
imul
enter
mov
add
bound
add
insb
xlat
or
xchg
test
insl
push
xor
movsl
repnz
cs
lods
scas
out
mov
addr16
sub
lods
jg
cwtl
xchg
mov
pop
loope
sbb
rcrb
mov
stc
xorl
jbe
mov
inc
out
dec
das
xor
dec
loopne
or
mov
add
add
add
ss
xor
and
fldcw
bound
add
call
movsb
pop
lret
dec
test
add
xchg
stc
hlt
add
clc
xlat
test
inc
xorb
xchg
jnp
push
icebp
frstor
adc
cs
inc
test
test
ja
mov
mov
lds
jmp
aas
iret
out
sub
jbe
xlat
test
loopne
mov
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
ja
add
bound
add
dec
and
fmull
mov
stc
sub
movsl
scas
roll
jle
xor
mov
push
sub
mov
daa
test
jmp
and
xor
out
sub
mov
add
mov
pop
cmp
dec
jmp
lods
pop
xchg
aad
xor
movsb
outsb
repnz
andl
and
add
add
add
push
aad
out
fucomip
ss
cmp
xor
bound
add
lods
push
iret
push
cmpsl
inc
xor
jmp
mov
aas
test
mov
aam
sub
int3
gs
bound
dec
loop
pop
test
inc
imul
mov
lea
scas
addr16
loope
push
adc
gs
sahf
xor
cmp
xor
pop
in
inc
fisttps
js
push
arpl
jns
test
packuswb
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
cmp
add
bound
add
icebp
sub
mov
shl
jle
out
call
add
mov
scas
icebp
idivb
inc
mov
add
sub
lcall
mov
adc
push
push
pusha
int3
adc
popa
in
scas
jle
sbb
jmp
int
loope
push
mov
add
add
push
les
in
lahf
sti
ja
rcll
push
popf
fiadds
add
add
mov
inc
mov
aaa
hlt
aad
sbb
push
stc
lcall
pop
cs
ret
hlt
sahf
js
pop
imul
mov
cmc
mov
sub
jmp
loopne
movsb
and
adc
sbb
ljmp
or
leave
pushf
fs
mov
lcall
add
xchg
cmpl
push
loopne
lcall
add
bound
add
pop
dec
icebp
fldcw
or
and
jmp
out
push
in
lds
inc
out
fimuls
cmpsb
sbb
mov
mov
out
xchg
cmp
cmp
mov
mov
into
aam
repz
nop
xchg
lret
xor
lock
popa
sub
xchg
mov
and
adc
add
add
add
fincstp
shl
frstor
pop
dec
in
lea
add
add
jmp
fnstenv
scas
push
pop
pop
ds
loopne
addl
cmpsb
add
sti
pop
jmp
pop
repnz
dec
or
xor
call
movsl
lock
add
dec
inc
xchg
iret
and
jnp
int
push
lcall
shrl
clc
jle
rorb
mov
sbb
mov
add
add
add
aam
fnstsw
out
fcmovu
in
stos
push
nop
ret
filds
add
add
aaa
dec
add
scas
lret
sti
lods
out
mov
and
mulb
pop
pop
icebp
cld
xchg
adc
in
fisubrs
xchg
mov
sub
nop
in
ficoml
or
jns
cltd
mull
inc
cld
fldl
fdivp
push
mov
fsubs
mov
cmp
cmp
add
add
add
stc
sbb
inc
jecxz
mov
xor
in
and
add
add
add
xor
jno
dec
push
cwtl
push
adcl
js
jbe
xchg
mov
add
jl
add
push
lea
jl
pop
andb
ja
repnz
js
imul
shr
lea
pop
aas
dec
jmp
fcompl
fs
xchg
cmp
add
mov
mov
icebp
and
xor
loopne
add
add
mov
and
dec
loope
in
xor
xor
aas
mov
sub
mov
mov
popf
pop
mov
aad
cmp
add
movsl
cmp
jp
lcall
sbbl
rorb
jl
aam
mov
iret
outsl
dec
lods
xchg
call
ljmp
mov
add
adc
repz
das
cli
fists
dec
es
jb
loopne
add
add
push
dec
pusha
scas
mov
mov
testb
push
xor
lods
pop
pop
sbb
sub
add
and
ret
dec
cli
ficomps
std
add
loopne
cld
xchg
push
and
or
mov
shl
jbe
test
pop
sbb
mov
jle
xor
shrl
xor
pop
in
adc
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
loop
add
add
add
add
add
add
add
fdivs
add
fdivl
add
loopne
add
daa
mov
add
aaa
add
add
push
outsl
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
