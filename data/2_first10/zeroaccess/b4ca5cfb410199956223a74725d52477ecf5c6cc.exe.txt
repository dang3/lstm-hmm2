add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
cltd
cmp
jle
fidivrl
jle
cmp
fld
ja
or
add
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
cltd
xor
jmp
xchg
loopne
sub
push
or
mov
sbb
mov
pop
pop
sbb
xor
shll
hlt
adc
cmp
or
dec
push
mov
sbb
mov
jg
pop
jbe
mov
adc
sub
xor
mov
or
loope
imul
lahf
adc
jle
xor
lret
addr16
or
shll
das
jbe
sahf
cmpsb
daa
or
adc
pop
movsb
fwait
jmp
movsl
inc
dec
xchg
dec
and
movsb
aaa
add
pop
subl
jle
xchg
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
mov
xchg
imul
jg
jle
mov
daa
mov
jbe
cmp
sub
adc
dec
ljmp
inc
icebp
push
lahf
pop
imul
adc
cmc
sarb
mov
xchg
pop
and
mov
into
ret
or
and
mov
aam
sub
mov
xchg
pop
std
aam
movsb
lock
or
jne
jne
sbb
xor
ret
out
iret
jbe
adcl
push
adc
mov
fs
arpl
jmp
mov
aad
adc
add
in
sub
mov
cmpsb
mov
in
pushl
cmp
pop
lcall
mov
stos
aad
pop
int
push
or
sbbl
push
add
push
push
adc
shrl
xor
cmp
mov
ljmp
test
jae
cld
jmp
add
pop
aaa
cmpsb
mov
mov
pop
pusha
pop
cmp
mov
mov
xchg
jns
fadds
out
outsl
xchg
into
sbb
mov
mov
xor
cmp
cs
sbb
cmp
dec
dec
dec
sub
aad
jb
jae
pop
outsb
mov
jl
arpl
in
sbb
push
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
iret
or
cmpsb
jl
jle
jg
jle
xchg
fcoml
lret
push
and
xor
fs
fdivrp
jmp
mov
sbb
ja
ja
fcomps
dec
aam
scas
in
cwtl
iret
ljmp
mov
cmp
shll
push
stos
and
mov
test
pop
ja
jg
xchg
ret
mov
inc
iret
jae
shr
pop
pop
mov
cmc
push
sbb
in
test
jne
inc
scas
jmp
inc
jmp
pop
and
icebp
je
mov
test
movsb
incl
pop
mov
mov
hlt
rcll
push
sahf
mov
outsb
lds
outsl
aas
sub
aaa
sbb
hlt
xlat
es
adc
xchg
stos
leave
cmp
je
adc
arpl
mov
lahf
mov
ror
bound
xchg
cmpsb
add
lret
push
imul
mov
loop
or
scas
movsl
or
rol
cmp
test
sbb
dec
in
sub
sub
mov
in
lret
xchg
mov
xchg
in
push
add
push
shl
dec
les
cs
test
push
add
sahf
xor
shr
and
scas
imull
outsb
dec
mov
add
movl
add
inc
mov
add
push
add
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
popa
jg
jb
jle
jg
jle
call
sbb
sti
lret
jo
xlat
pop
pop
add
lret
jbe
adc
adc
mov
fdiv
jl
sarb
xchg
nop
lock
and
mov
and
xor
sub
cmp
cs
ds
xchg
popa
jge
std
push
cmpsb
pop
jne
pop
xor
jmp
or
jmp
incl
loopne
fisubrl
fscale
or
lods
dec
mov
int
mov
and
or
sub
add
dec
add
jnp
jno
js
sbb
inc
les
push
push
pop
xchg
aaa
add
sub
sbb
dec
and
mov
repz
aad
mov
enter
and
sbb
pop
xchg
popl
mul
int
pop
cmp
cmp
pop
mov
dec
dec
and
fucomp
outsl
xor
in
addr16
push
pusha
out
aad
in
jle
out
sub
push
stc
push
shr
lods
repz
xchg
and
loope
jo
jecxz
jle
idivl
lahf
xchg
dec
add
xchg
stos
push
add
mov
int
add
push
pushf
lret
sub
push
inc
testl
mov
jmp
fbstp
inc
inc
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
jns
das
xchg
push
gs
add
or
xchg
mov
pop
xor
out
inc
out
jp
into
iret
mov
push
cwtl
repnz
xchg
int3
xchg
and
pop
popa
add
sub
xchg
sbb
cltd
scas
push
cmp
xlat
testb
pop
push
xor
cltd
push
ret
push
scas
ljmp
sbb
jo
push
xchg
fs
fildl
push
and
les
mov
sbb
aaa
fidivrs
xchg
jnp
jbe
push
xor
hlt
push
jbe
inc
xor
mov
aas
xor
cld
mov
sub
xchg
loope
add
adc
inc
hlt
adc
cmpsb
push
fildl
and
enter
mov
das
xor
add
sub
pop
movsl
loop
outsl
nop
stos
jnp
adc
pop
mov
jo
jae
mov
stc
call
loope
adc
insb
std
sbb
adc
xchg
jne
sahf
xlat
sub
cwtl
mov
scas
and
pop
or
dec
pop
dec
xor
push
mov
push
gs
call
pop
xor
push
mov
sti
mov
aaa
aaa
lods
notl
mov
xorl
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
arpl
fidivrl
jle
inc
cmp
cltd
add
push
pop
jbe
test
rcl
push
jo
mov
push
ja
mov
mov
shll
es
jl
mov
cmpsl
sti
pop
scas
mov
imul
insb
loop
out
mov
repnz
aad
stos
shl
decb
out
mov
jno
repnz
lret
je
popa
pop
out
je
rorb
pop
cmp
mov
push
cmpsb
out
outsb
pop
es
sub
cmp
add
fidivrl
pop
mov
mov
sbb
pusha
inc
fisttps
mov
push
fs
cmp
insl
lea
jle
ljmp
xor
fmuls
push
inc
pop
lret
dec
push
mov
lcall
pop
push
popf
lea
and
and
cmp
add
adc
mov
rcrl
mov
xchg
xchg
sbb
and
xchg
adc
sub
sbb
daa
je
sub
xchg
jnp
fdiv
mov
fdivrl
adc
ret
push
inc
je
mov
push
or
adc
icebp
fnsave
aas
into
enter
nop
cmp
scas
jg
mov
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
jns
adc
fidivrl
jle
popa
outsb
arpl
rcrb
lcall
fildl
loope
mov
inc
inc
clc
push
adc
mov
popf
sbb
stos
test
pop
pop
stos
in
rolb
sbb
les
cltd
mov
mov
jno
mov
out
out
and
mov
sub
mov
mov
idivl
insl
xchg
pushf
adc
xchg
mov
mov
push
add
dec
mov
mov
xchg
int3
int3
shlb
xor
les
test
mov
push
decl
xor
add
nop
cltd
rcrb
dec
bound
xchg
pop
rcll
push
cmp
pop
pop
sbb
xchg
mov
pop
jns
jb
jge
xchg
xchg
stos
pop
add
mov
in
mov
mov
add
push
push
pop
rorl
movsl
dec
jge
clc
mov
stos
icebp
mov
insb
push
movsb
jge
aas
push
jp
mov
call
nop
hlt
pop
sahf
popa
je
jnp
or
inc
aam
mov
test
fs
loop
mov
repz
pushf
jecxz
jl
or
pop
push
push
addl
mov
mov
sub
push
add
fucompp
xchg
dec
mov
sub
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
lods
jne
ja
jle
jg
jle
push
pop
mov
add
out
sbb
cmp
scas
mov
push
push
add
push
lea
sarl
adcl
ss
in
aaa
xchg
mov
push
adc
lahf
sahf
lods
daa
lods
ret
mov
mov
les
push
dec
lahf
mov
cmpsb
ds
lock
outsb
inc
inc
sbb
fwait
sub
push
and
ret
jmp
adc
bound
call
call
xchg
enter
push
fnstsw
jne
das
call
in
xchg
adc
mov
xchg
cld
xchg
sti
xor
test
mov
ja
stos
outsb
fs
flds
inc
push
fsts
or
dec
jno
pop
cmp
or
xor
sbb
repz
push
push
sbb
in
adc
mov
nop
lret
lahf
int3
in
jae
sbb
mov
andb
sbb
push
sahf
cli
addr16
lret
aad
xchg
cmpsl
push
mov
dec
dec
push
adc
test
popa
ret
movsb
ret
jo
inc
adc
and
and
mov
add
insl
mov
mov
jo
addr16
repz
jns
push
lock
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
xchg
push
pop
je
jle
jg
jle
mov
push
addb
mov
jb
arpl
mov
cmc
sbb
lret
and
icebp
ror
sbb
push
mov
and
adc
adc
inc
cld
xchg
pop
pop
xor
inc
in
repnz
push
movsl
leave
jno
dec
in
in
xchg
add
jp
shlb
nop
arpl
xor
sbb
pushf
sbb
or
xchg
inc
out
jmp
adc
sbb
les
lods
test
outsb
cmp
fistps
repnz
push
lret
dec
mov
je
adc
idivl
test
mov
fs
xchg
sub
inc
adc
dec
inc
cmp
into
jnp
push
loop
adc
sbb
idivl
mov
xor
pushf
or
js
xor
jmp
mov
dec
roll
inc
les
sbb
and
test
xchg
mov
mov
mov
pop
push
sub
loop
add
lcall
mov
jns
movb
add
push
mov
push
es
sbb
popf
movsl
mov
es
rorl
pop
add
shlb
mov
mov
loop
jne
dec
clc
jmp
sub
into
fstpt
dec
jo
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
inc
dec
stc
cmp
jle
fidivrl
jle
scas
loopne
cld
imul
les
lods
les
inc
xchg
iret
and
sub
xor
imul
repnz
out
xor
imul
sbb
pop
cmp
aam
add
or
movsl
lods
shrb
out
adc
push
gs
and
cmpsb
mov
cmp
int
inc
inc
icebp
push
pushf
imul
mov
in
xor
adc
ja
inc
mov
mov
shll
jp
push
lcall
aaa
cmp
inc
mov
mull
mov
pushf
pop
xchg
adcl
jno
dec
imul
mov
inc
mov
shll
aas
in
pop
mov
mov
test
or
xlat
icebp
lea
pop
mov
cmp
jbe
das
out
cltd
subps
add
fidivs
and
daa
movsb
cli
idivl
push
fucomp
mov
or
idivl
mov
cmpsb
testb
arpl
repz
gs
dec
or
js
iret
imul
mov
lods
xchg
out
sbb
lret
mov
xchg
rclb
inc
jbe
loop
cmp
jmp
imul
fnstenv
cmpsl
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
repz
movsb
lods
xchg
jle
and
jle
adc
jbe
ret
cmp
cmpsb
shlb
dec
nop
stos
lods
cld
mov
mov
in
add
stos
dec
cmovne
fsub
dec
or
out
icebp
mov
sub
dec
pop
lea
icebp
scas
xlat
xchg
out
pop
pushf
test
aad
xchg
cmpsb
das
or
fcompl
lahf
xchg
or
adc
stc
lock
rcll
cmpsb
inc
mov
fisubl
pcmpeqb
ror
mov
adc
std
mov
sub
add
ljmp
mov
mov
push
adc
int
ret
pushf
lds
adc
loop
hlt
ret
cs
jns
inc
sbb
cmp
add
sub
int
fcomps
xchg
xchg
mov
inc
jl
cli
dec
push
jo
aaa
pop
mov
xchg
shl
roll
mov
mov
iret
mov
xchg
adc
xor
test
sub
stos
outsb
cmpsl
pop
mov
mov
add
xchg
add
mov
xchg
movb
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
sub
sub
jle
jg
jle
lcall
dec
std
ret
inc
sti
mov
bound
pop
popa
adc
idivl
jle
xchg
nop
inc
cld
ret
pop
aad
xchg
icebp
or
inc
ret
cmpsb
shl
xchg
lahf
xchg
stos
fnstenv
gs
mov
lret
pusha
out
sub
iret
push
gs
xchg
testb
aas
lret
xchg
dec
cmp
repnz
or
cmp
pop
xchg
add
pop
push
cmc
inc
ljmp
sbb
cmp
and
or
fdivrs
sbbl
dec
jmp
adc
sarb
xor
cltd
aaa
add
mov
pop
test
pop
xchg
jge
fsubp
das
addr16
dec
push
push
enter
sub
out
les
xor
lods
jno
jle
mov
addr16
cmp
js
aas
loop
shl
mov
cmpsl
ds
xor
cwtl
sbb
adc
pop
dec
xchg
sbb
test
out
mov
cmpsb
lods
or
mov
or
mov
xchg
lods
adc
lock
jle
lahf
in
scas
ljmp
adc
mov
inc
jmp
or
mov
or
push
imull
jle
jg
jle
nop
cmp
subl
ja
hlt
sbb
jg
insb
push
aaa
cmp
test
ret
lret
out
adc
in
dec
test
roll
inc
or
lods
fadds
mov
movsl
lock
mov
pop
push
pop
pop
cmp
test
mov
les
call
vpcomud
cvtpi2ps
jge
mov
daa
xchg
insb
or
mov
xorb
push
fldt
xchg
mov
cmpl
subb
les
lds
pop
adc
xchg
xchg
cmp
xchg
mov
insl
iret
dec
rcrl
pop
or
fwait
std
mov
cmp
sub
mov
ss
int
fpatan
xchg
sub
daa
lock
out
paddsw
addl
jns
lret
mov
aas
test
insb
leave
outsb
out
subb
stos
xchg
loope
stos
lods
pop
nop
es
int3
dec
xor
inc
movsb
fsubp
add
mov
popf
ja
push
stos
inc
cld
pop
mov
fidivl
adc
cld
movl
xor
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
lret
and
jle
and
jle
push
adc
arpl
nop
pop
and
cmp
inc
loop
je
and
mov
aaa
pop
push
xor
loopne
leave
and
mov
sahf
mov
pop
fidivl
in
loop
xor
push
fstl
out
mov
mov
cmp
lahf
ja
pushf
movsb
dec
inc
stc
xor
inc
add
inc
out
mov
push
jp
cmp
rorl
or
xchg
test
cs
jae
clc
stc
jb
or
out
popf
cmp
add
push
inc
push
mov
mov
loope
push
xor
cld
call
mov
arpl
inc
pop
sbb
leave
je
leave
in
mov
js
scas
cwtl
shl
push
mov
popa
ds
imulb
inc
adc
or
ljmp
es
imul
mov
ja
sub
push
fidivl
and
je
jmp
scas
push
jg
mov
push
imul
popw
jmp
scas
insl
popa
xchg
je
push
dec
inc
cmp
addl
cmpsl
pop
popf
cmc
xchg
fisubs
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
push
xor
jg
insl
jecxz
or
push
adc
push
rorl
out
clc
lcall
es
fs
jae
testb
mov
lahf
cmpsb
insb
insl
mov
sub
call
call
sbbl
fnstsw
mov
jmp
pop
std
in
jbe
test
inc
xchg
jge
out
cmp
adc
push
mov
cmp
xor
fiadds
mov
xor
sbb
push
and
mov
cmpsb
xchg
int
and
lock
xchg
imul
push
lret
cmp
lahf
call
loope
cmp
cltd
jp
insb
inc
lods
inc
sbbl
popa
sbb
pop
pop
sub
in
mulb
dec
xchg
mov
rolb
mov
xorl
test
cmc
sbb
push
xlat
xor
jnp
xor
mov
jle
sub
mov
dec
fwait
inc
data16
jg
jecxz
scas
jb
mov
rcl
adc
push
decl
add
imul
mov
jmp
jbe
xchg
call
adc
xchg
jmp
or
jle
or
stc
outsb
pop
das
enter
arpl
mov
mov
add
xchg
sub
int
nop
outsb
mov
mov
aaa
adc
mov
and
adc
fsts
pop
cmp
stos
lcall
push
mov
and
gs
adc
je
imulb
mov
lahf
movsb
adc
cld
xor
pop
jb
or
mov
cs
push
cmp
inc
adc
inc
push
push
jae
inc
push
push
pop
addr16
adc
movsl
bound
lds
jmp
mov
in
in
movsb
push
inc
add
pop
sbb
mov
jno
shrb
inc
add
dec
clc
movsl
push
inc
repz
pop
test
insb
fdiv
popf
xchg
in
or
scas
push
movsb
nop
mov
movsb
xor
repnz
or
push
fs
mov
loope
xchg
loope
dec
sbb
inc
addr16
sbb
lods
lcall
and
inc
out
sbb
inc
jae
jb
mov
gs
int
cmp
repnz
mov
jbe
xchg
or
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
ds
cmpsl
inc
add
and
jle
fcmovne
cmp
mov
lcall
inc
pop
js
add
or
pcmpeqd
sbb
push
test
imul
add
xchg
push
imul
repnz
std
inc
int3
imulb
ljmp
ds
pop
pusha
mov
dec
sarl
sti
gs
shlb
and
xchg
xor
or
sbb
dec
pop
data16
out
hlt
out
cmc
xchg
or
and
mov
lcall
imul
movsl
push
jmp
and
fsincos
std
push
mov
mov
pushf
mov
inc
dec
outsl
data16
outsl
test
cmp
adc
loopne
js
adc
mov
mov
movsl
sbb
push
in
cltd
xchg
lret
rolb
inc
sarb
xchg
xchg
shlb
jno
rolb
ret
mov
cmp
inc
test
sub
rcll
push
pushl
adc
dec
xor
and
xor
rcrl
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
fs
jne
jle
and
jle
gs
jns
mov
insl
xor
mov
adc
pop
pop
push
fsubrs
push
pop
cmp
pop
cmp
xchg
or
mov
adc
js
fildl
or
test
jnp
and
mov
inc
dec
addb
push
loopne
xchg
jecxz
lret
std
cltd
add
mulb
jge
pop
mov
push
fcomi
repz
adc
mov
xchg
jno
test
mov
mov
dec
cmp
xor
xor
xchg
daa
jg
lock
loopne
loopne
sbb
xchg
addr16
mov
mov
cmp
jl
aam
sbb
dec
sub
cmpsl
lcall
pop
cmp
xchg
mov
xor
xor
sahf
icebp
clc
push
or
mov
sbb
ja
xchg
adcb
sub
aas
test
pop
inc
fldenv
arpl
aaa
xchg
mul
push
push
mov
mov
divb
stos
add
ret
ret
pop
cmpsb
mov
repnz
cltd
xchg
jbe
and
shr
dec
add
add
sti
mov
stc
repnz
and
jle
jg
jle
loope
popl
jl
xchg
mov
jns
scas
dec
mov
test
sbb
cmp
addr16
inc
popa
addb
mov
adc
cld
dec
sub
orl
rolb
mov
jmp
xorb
or
and
imul
into
sti
lods
adc
iret
andb
cltd
mov
aaa
xchg
mov
mov
inc
cmp
ss
sub
sub
stos
mov
lcall
or
aas
lds
sub
push
xor
je
test
inc
push
popf
clc
sub
jnp
jecxz
das
enter
repnz
jmp
push
pop
push
cmp
sbbl
inc
add
jae
int3
xor
aam
pop
cmpsl
xlat
jle
mov
jecxz
movsb
cs
repz
xor
lret
lea
jo
leave
cmp
or
inc
ficomps
jge
out
add
adc
dec
sub
or
fwait
dec
cmpsl
iret
jns
mov
dec
cmp
sub
or
jle
fsubl
mov
inc
popf
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
xchg
cmp
sub
jns
mov
bound
mov
push
add
dec
mov
mov
es
add
in
ret
xor
add
xchg
push
or
jns
sarl
adc
xchg
dec
sub
fisubs
bound
lods
pop
sub
pop
nop
sbb
clc
aas
ret
jmp
mov
out
jns
leave
in
jl
or
dec
push
addl
sbb
mov
sbbl
into
jo
pop
shll
mov
and
orl
adc
pop
cmp
stos
insb
loope
fldl
hlt
int
pop
pop
mov
mov
insl
add
aad
ds
dec
add
jp
in
subb
std
mov
jge
popa
dec
icebp
or
outsl
mov
and
sub
jnp
xor
jo
mov
outsl
aam
addr16
fmuls
mov
push
xchg
mov
scas
mov
mov
bound
sti
ds
pop
xchg
lcall
xchg
andb
cmp
push
or
hlt
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
xchg
pop
jle
and
jle
push
dec
into
jb
sahf
inc
ret
cld
inc
cli
test
xor
icebp
dec
scas
dec
push
loopne
push
mov
cwtl
jbe
cmp
jb
push
outsb
gs
and
outsl
ret
xlat
testb
addr16
push
push
sar
incl
xor
sti
popf
fs
mov
sbb
dec
mov
adc
and
test
mov
dec
cltd
xor
add
imul
bound
imul
adc
pop
adc
jl
adc
jo
lcall
iret
inc
popa
sbb
and
push
lret
mov
mov
jbe
arpl
push
stos
shlb
dec
jbe
push
rol
dec
es
sbb
aam
sub
sahf
imul
sbb
sbb
mov
jge
xchg
repz
arpl
inc
gs
rclb
aaa
adcb
push
xor
cmp
push
pop
cmp
or
mov
movsl
out
inc
mov
cmpsb
mov
fmuls
shll
xchg
xor
call
in
pop
movsb
inc
mov
jmp
jns
mov
dec
js
movsl
mov
lods
int3
ljmp
jle
cmc
rclb
add
in
dec
and
movsb
xlat
mov
movsl
mov
pop
jne
stc
inc
jl
ljmp
sbb
sub
sbb
jl
sbb
push
mov
mov
cmpsb
fdivrs
jl
or
adc
and
pop
inc
dec
xor
daa
out
pop
push
mov
repnz
xor
adc
es
sbb
push
ret
cmp
mov
lods
dec
rclb
mov
xor
sub
mov
dec
std
lea
fldl
mov
sti
sarb
lret
and
iret
xchg
cltd
scas
jo
adc
fisubrs
scas
xlat
in
or
xchg
mov
xor
cmc
repz
pop
fmul
add
ds
repz
lds
lds
and
and
adc
mov
sahf
add
gs
xor
aam
cmp
xchg
inc
test
mov
dec
test
ficoms
inc
out
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
dec
leave
icebp
cmp
sbb
and
jle
push
test
test
mov
xor
dec
imul
sbb
or
sub
pop
sub
sub
inc
mov
jmp
inc
aaa
iret
loopne
and
mov
xchg
insb
test
push
lods
popf
adc
bnd
data16
and
mov
ss
jno
fidivrs
sub
xchg
cmpsl
sbbb
pop
pop
out
jmp
cmp
clc
mov
scas
subb
inc
aas
sub
and
push
mov
dec
mov
xchg
or
add
jmp
inc
xor
xchg
add
nop
add
sbb
push
jg
inc
xor
pop
dec
jb
mov
int3
pop
cmp
out
jo
sub
push
xor
ret
and
lahf
mov
mov
imul
pop
and
mov
loope
mov
fstpt
daa
rcl
sub
sub
ss
repz
sbb
push
cmp
xchg
pop
xchg
xor
es
or
lret
lahf
shl
adc
add
or
cmpsl
test
int
insb
stos
jp
adc
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
enter
sbb
and
jle
pop
sbb
fidivrs
mov
mov
push
insl
or
cmpsl
enter
out
add
dec
push
jne
and
rcr
sub
or
sub
int
add
testl
mov
adc
pop
mov
loope
mov
iret
mov
jno
jl
cltd
nop
and
mov
xlat
mov
push
jl
shl
clc
cmp
lods
jno
push
add
sub
jl
daa
fsubrs
negb
lods
add
lcall
lret
mov
mov
and
in
dec
jle
xchg
mov
mov
in
jmp
cmc
pop
jnp
movsl
mov
orl
and
push
lcall
rcl
inc
jnp
add
bound
lcall
push
loope
inc
mov
inc
clc
std
pop
inc
pop
sub
dec
out
mov
add
and
xlat
jl
adc
sub
add
push
adc
les
sbb
cs
sub
fcoms
lret
add
jne
jns
repz
sbb
popa
push
mov
add
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
jecxz
clc
sbb
and
jle
push
out
pop
push
pop
push
shl
pop
mov
mov
adc
add
mov
lea
movsl
lds
dec
popf
or
mov
adc
insl
inc
scas
mov
call
imul
sub
fsubs
pushf
xchg
inc
mov
imul
outsb
les
jae
push
pop
aad
sbb
mov
xchg
sub
ss
test
push
pusha
shll
pop
movsb
fdiv
and
ljmp
out
data16
pop
ret
test
int3
xlat
ljmp
sub
and
fdivl
int3
clc
mov
sbb
push
pop
xchg
xchg
stc
and
fisubrl
and
sbbl
in
jecxz
jns
mov
jmp
cli
jne
sbbb
adc
jo
pushf
mov
add
xchg
push
std
sbb
dec
xlat
or
pop
rcrb
or
insl
lret
xchg
pop
fwait
push
mov
jp
test
push
push
add
dec
xor
stos
dec
inc
test
lock
rcrb
rcrb
loop
testl
in
jmp
jb
test
adc
repnz
lods
sbb
jmp
jbe
arpl
pop
shrl
ffreep
hlt
cli
add
insl
push
push
clc
pop
mov
add
jnp
out
iret
out
lock
lea
popa
mov
bnd
xorb
stos
clc
in
shlb
bound
push
xor
sahf
cmc
xchg
ret
faddl
mov
addl
enter
mov
sahf
mov
dec
loope
mov
add
rorl
test
sbb
js
pop
and
clc
aaa
in
andl
fadds
cmp
out
add
and
ror
rclb
sub
and
movsl
cwtl
test
pop
dec
push
test
call
addr16
push
mov
pushf
imul
push
xor
stos
aas
repz
mov
enter
mov
repz
add
inc
adc
insb
mov
sub
jne
mov
mov
adc
mov
leave
sub
sbb
pop
into
clc
inc
mov
jo
dec
shll
cmp
lcall
mov
int
cmp
mov
xchg
mov
inc
and
xor
in
jl
ja
pop
popf
push
sub
loope
or
sbbl
out
mov
xchg
cmpsl
xchg
inc
sbb
jp
adc
and
sbb
jge
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
cmp
add
jmp
aas
push
dec
mov
or
iret
leave
dec
cmp
xor
outsl
pop
out
ss
push
sbb
add
mov
cmpsl
sbb
push
mov
fwait
pop
dec
int3
mov
icebp
cmp
push
pop
shl
int3
dec
dec
test
loope
lods
movl
add
pop
aas
xchg
inc
and
cmp
and
jbe
aad
push
data16
and
gs
sbb
call
clc
insb
out
inc
pop
or
aam
in
jge
mov
mov
jbe
ss
sub
fst
adc
fidivrs
inc
outsb
rcrb
lret
xor
push
aas
cli
je
test
test
loop
mov
enter
movl
sub
fiaddl
js
xchg
enter
and
pop
cmp
ds
adc
fwait
push
jno
sub
adc
pop
stos
pushf
jle
cli
xchg
test
dec
inc
je
jl
sbb
pusha
or
ret
mov
outsb
mov
xor
xchg
jge
pop
xor
in
test
fcomp
xor
add
sar
xor
adc
mov
push
cmp
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
lret
push
out
sbb
xchg
ret
xchg
rcrb
es
loop
push
mov
lods
ret
and
pop
subl
cs
xchg
enter
bound
dec
in
pop
jne
arpl
cmp
test
bound
arpl
pop
or
out
popl
pop
jae
xlat
jbe
pop
jecxz
int3
mov
dec
lea
aas
lods
dec
add
cmp
push
jne
jae
aad
movsb
jle
push
push
mov
mov
jge
jns
in
lgdtl
pop
shlb
out
xchg
jge
fisubrl
mov
pop
imul
cmc
sar
fldenv
mov
sub
bound
pop
inc
arpl
sti
ja
ret
push
loop
daa
imul
test
push
and
xchg
out
xlat
stos
sbb
sbb
xchg
imul
push
xchg
push
jbe
mov
cmc
lahf
aam
incb
mov
cltd
out
mov
leave
rcrl
and
mov
movsl
popa
xor
add
fidivl
sahf
sbb
xchg
cli
in
xorl
loop
out
and
sub
mov
push
and
inc
lods
xchg
bound
push
jno
dec
test
add
imul
jmp
xchg
imul
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
int3
push
jle
jle
jmp
js
mov
sub
out
lahf
outsl
jl
mov
movsb
fsubrs
sub
aam
dec
xchg
jno
mov
adc
out
mov
or
in
xchg
sarl
mov
mov
fdivs
dec
mov
pop
xchg
jbe
or
shll
or
rclb
repnz
sub
scas
add
dec
mov
sar
je
or
outsl
jp
pop
loop
mov
xchg
jl
xchg
repnz
js
push
shl
pop
addr16
and
bound
mov
mov
mov
sbb
jg
ror
andl
jg
popa
ljmp
in
mov
xlat
movsl
les
stos
pop
das
pushf
rclb
call
icebp
mov
test
or
stos
scas
dec
outsb
inc
mov
jne
mov
mov
mov
jns
push
imul
ljmp
inc
jae
cmp
popl
imul
xchg
xchg
xchg
ljmp
adc
cmp
sti
cmp
sbb
jo
fcmovnb
loopne
mov
out
insb
sbb
push
popf
lcall
pop
pusha
inc
lret
mov
push
adc
adc
roll
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
dec
jmp
jg
jle
cmp
scas
and
sbb
sub
sti
add
leave
mov
pop
sbb
scas
test
test
mov
push
push
dec
pop
xor
sub
xor
test
push
push
bound
leave
add
xchg
repnz
add
cli
cmp
imul
in
push
cli
jb
mov
pop
aas
ja
repnz
mov
add
loope
lret
fstps
xchg
into
inc
inc
cmp
jns
and
lcall
push
pause
sub
clc
sub
or
mov
jmp
inc
clc
cld
mov
jp
add
xchg
addr16
pushf
pop
sub
loopne
mov
adc
xor
imul
scas
jbe
or
mov
fstpt
sub
je
arpl
shr
out
repz
mov
inc
roll
fwait
sbb
pop
int
jb
xor
andb
orl
rcll
xor
out
jne
imul
jne
dec
test
cld
in
je
movsb
cmc
inc
pop
int3
xor
and
int3
outsb
shrl
lea
pushf
cltd
sbb
xchg
ror
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
test
jle
fdivrl
jle
mov
daa
das
outsb
add
stc
lds
sbb
jns
pop
pop
movsl
loope
xlat
xor
loope
je
out
imul
in
xchg
push
fisubrl
sub
fcoml
dec
mov
call
xchg
stos
inc
push
imul
inc
xor
scas
in
int
jns
and
pop
mov
jb
out
fcmovnu
lret
enter
xchg
push
sub
ret
popa
mov
sub
rcll
es
adc
cltd
jbe
icebp
loope,pn
mov
rcll
pop
test
fcompl
aas
mov
clc
roll
outsl
repnz
int3
xor
repnz
pusha
mov
adc
mov
pop
inc
or
pop
lods
cmp
and
in
roll
notb
das
inc
and
loopne
mov
mov
sbb
inc
fsts
lret
inc
sbb
xorb
sub
jbe
insl
inc
addb
xor
dec
and
and
gs
sub
mov
dec
js
les
test
push
sub
cmpsl
lods
std
add
mov
inc
jbe
dec
icebp
enter
xchg
aam
xor
add
mov
mov
jmp
and
pop
xchg
adc
arpl
test
xor
sub
jg
jle
pop
fmull
cmpsl
int3
dec
xchg
cmpl
push
or
dec
je
cmc
push
iret
push
in
pop
pop
cmpl
lret
dec
sbb
pop
mov
scas
sub
mov
loop
adc
addr16
cmp
push
pop
sub
pop
push
xor
pop
and
xor
icebp
cmp
lret
mov
pusha
cwtd
push
adc
in
xor
mov
add
pop
out
cmpsl
mov
pop
cmc
mov
cmp
shll
and
fisubl
hlt
repz
sti
arpl
push
sahf
js
shll
fiadds
xchg
or
mulb
data16
cmpsb
stc
lret
dec
cmpsb
sbb
jp
xlat
jle
lcall
push
test
add
sub
sub
sbb
ret
jl
enter
sbb
lret
loopne
mov
shll
adc
jbe
in
clc
into
xor
sub
sub
loop
hlt
pop
hlt
xor
xor
lods
sahf
add
and
ret
inc
int3
aaa
loopne
movsl
je
xor
scas
scas
xor
lahf
push
nop
sbb
ds
lock
pusha
cmp
xlat
push
loop
push
popa
into
rcrb
jmp
cmpsb
jmp
add
xor
add
mov
jmp
mov
jmp
push
gs
movsb
es
jle
fdivrl
jle
and
add
mov
sbb
xchg
jmp
add
nop
and
sbb
dec
jb
inc
ljmp
sbb
cmp
sbb
cli
push
push
subb
into
mov
mov
mov
sti
in
pop
out
inc
pop
adc
mov
or
or
fisubrl
aas
test
jbe
mov
push
sub
pop
jae
dec
inc
roll
outsb
jecxz
push
adcb
push
aam
mov
aad
sbb
push
shlb
inc
and
push
sbb
sbb
mov
push
push
clc
cld
cli
cmp
xchg
movsl
scas
out
sub
push
in
movnti
cmovno
xor
mov
or
jecxz
inc
inc
es
inc
xchg
lods
pop
push
clc
mov
lret
iret
add
push
out
dec
and
stc
ds
push
jmp
jae
hlt
orl
imul
ss
pop
nop
sbb
push
hlt
ret
mov
cwtl
outsl
sbb
adc
loopne
and
inc
dec
add
dec
cs
push
ret
int
push
pop
mov
sar
ja
rcl
out
out
icebp
fimull
jno
pop
sub
into
jl
nop
leave
xchg
push
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
int3
push
popf
push
loope
dec
sbb
sbb
daa
in
lods
jecxz
or
fldt
xchg
loopne
cltd
cli
pop
mov
test
sub
popa
mov
xchg
jno
mov
sub
xor
add
xchg
mov
mov
xchg
leave
dec
xchg
ja
lds
nop
push
repnz
mov
mov
and
jle
imulb
in
mov
loope
subb
andl
pop
xchg
push
push
scas
dec
mov
mov
popf
cld
xchg
int3
cmp
push
les
adc
inc
test
data16
mov
subl
jnp
out
pushf
sub
aad
pop
fnstsw
push
loop
cwtl
xchg
imul
mov
pop
shrl
clc
dec
jge
or
mov
ss
push
jl
sub
push
mov
jb
push
xor
pop
repnz
popa
dec
cmp
or
inc
mov
arpl
cmp
pop
out
jmp
sbb
xchg
push
rorb
inc
and
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
cltd
enter
jle
or
jle
lods
ror
int
pop
push
dec
pop
mov
jbe
add
mov
sbb
imul
xor
fs
xchg
loop
movsl
and
ret
push
mov
pop
jecxz
lahf
ds
pop
aam
fsubs
jns
lods
pop
nop
and
sub
inc
out
jmp
sub
popl
mov
sar
adc
out
pop
shlb
adc
in
xchg
cltd
or
sub
shrb
sti
xchg
mov
or
dec
xchg
lock
mov
movsl
data16
mov
push
and
push
inc
subb
pop
dec
fs
test
mov
sbb
iret
std
dec
fidivs
ficoms
daa
stos
test
sahf
pushf
jge
cmpb
cmpsb
jge
mov
mov
dec
ss
inc
dec
push
pop
sahf
and
hlt
jnp
je
add
repnz
push
rorb
and
dec
rclb
adc
in
ja
mov
and
cmpsb
addr16
push
sti
mov
adc
lods
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
mov
or
or
jle
cmpsb
or
jecxz
and
xor
outsl
adc
push
clc
mov
loope
stos
push
jmp
je
xlat
out
sbb
mov
sbb
fwait
cs
mov
out
cs
sbb
out
push
xchg
xor
mov
mov
dec
out
pop
push
inc
out
mov
and
xor
fcomp
sbb
test
outsl
mov
pop
ds
frstor
gs
cmp
and
nop
icebp
outsl
dec
push
pop
aad
insb
push
movb
jnp
daa
and
sub
lret
movq
std
push
add
cmpsb
mov
xor
cli
cmpsb
lock
fcomps
loopne
mov
movntq
mov
test
mov
test
pop
repz
sbb
aas
jns
xor
pop
or
ficomps
rcrl
sub
fsubp
pop
ret
or
inc
inc
shlb
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
lock
add
jg
jle
into
xchg
jb
ja
mov
call
ret
jl
cmp
pop
jns
cli
and
fstps
cs
popf
mov
jp
js
arpl
sbb
loop
push
fisttpl
xchg
stos
or
cmpsb
or
aas
hlt
jmp
int
mov
test
movl
mov
loop
cmpl
movsb
orl
mov
sub
cmpsl
gs
sub
clc
test
jb
fidivs
or
inc
mov
pop
clc
arpl
adc
pop
dec
jl
cvtps2pd
pop
repz
add
ret
rol
lock
mov
cmc
fsts
mov
cwtl
cmp
xlat
es
in
jg
test
gs
cmp
lret
loop
int3
pop
mov
mov
ret
cmp
mov
add
sub
mov
adc
sub
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
arpl
pushf
daa
adc
jle
or
jle
repz
les
dec
add
dec
shll
inc
aaa
mov
fstpt
lret
std
fwait
insb
int3
fucomp
lahf
mov
int
mov
test
push
xchg
inc
pop
jbe
shlb
push
cmp
cmp
mov
cmp
inc
cmp
and
xchg
pusha
cli
inc
adcl
sbb
leave
fs
clc
movnti
mov
loopne
cwtl
xor
or
out
xor
xchg
popa
movsl
shl
into
shrl
aas
xchg
sti
aaa
idiv
mov
push
and
data16
adc
sub
pop
jecxz
ja
mov
add
int
mov
out
je
xchg
mov
ss
push
dec
movsb
or
jbe
in
push
sbb
jle
loopne
clc
xor
xchg
repnz
sub
and
out
lret
shlb
icebp
cmp
jns
ret
shrb
rclb
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
sbb
sbb
jle,pn
or
jle
cmp
jo
mov
lcall
movsb
cmp
sbb
lea
mov
jge
pushf
addr16
pop
test
ret
mov
andb
mov
test
xor
jo
gs
mov
cli
stos
pop
inc
dec
ret
pop
mov
add
cli
pop
bound
inc
call
dec
sbb
adc
and
mov
sbb
adcl
push
inc
lret
testb
rorb
ret
in
mov
push
inc
cmpsb
out
pop
xor
sbb
fisttpll
mov
add
lods
mov
xor
adc
dec
adc
add
xor
je
sbb
ja
pushf
and
dec
movsl
or
cmpl
xchg
xlat
push
pop
icebp
dec
imul
mov
or
push
add
fsts
test
fdivl
sbb
pop
xor
fcomp
sub
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
out
push
cmp
jle
or
jle
cld
jge
mov
push
push
imul
aad
aam
mov
aam
sbb
fldt
mov
xchg
aaa
stos
add
fsubl
push
mov
inc
loope
nop
add
mov
pop
pop
add
fstps
pop
xor
cwtl
call
shlb
or
sub
mov
outsb
pop
sbb
jmp
lahf
push
loope
mov
loopne
or
int3
sub
jbe
mov
pop
xlat
mov
pop
outsb
lret
clc
cmp
in
mov
cmp
iret
push
fwait
mov
das
das
aaa
cmp
popf
and
dec
mov
jp
push
sbb
mov
push
jge
xchg
adc
adc
jns
fmuls
arpl
mov
rolb
mov
ret
gs
mov
mov
fisttpl
fcmovbe
push
cmp
neg
fs
cmp
or
inc
or
gs
inc
xchg
inc
sahf
fsubs
popf
lcall
add
add
or
imul
pop
daa
xor
jg
jle
add
lock
sub
or
in
movsb
shr
hlt
sbb
ret
sub
test
mov
test
fs
mov
xor
mov
leave
in
adc
iret
adc
push
gs
xchg
call
mov
aad
sub
cmpsb
xchg
adc
sub
lcall
ss
fcmove
mov
xor
stc
push
adc
and
mov
and
fiaddl
cmpsl
mov
popf
ljmp
movb
cmpb
xchg
mov
insb
loopne
clc
adcl
lcall
xchg
pop
ret
lret
mov
mov
scas
jmp
sbb
dec
inc
xchg
movb
lcall
or
cmp
sub
mov
adc
roll
sbb
xor
xchg
push
test
mov
repnz
ret
xchg
inc
or
call
push
ret
pop
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
daa
imul
jle
or
jle
inc
push
in
mov
xor
cmp
jecxz
cmpl
je
xchg
fisubrl
das
test
pop
xlat
rorl
inc
jecxz
sbb
repnz
cmp
mov
inc
jbe
loope
out
add
push
das
les
xchg
scas
push
rol
mov
mov
aas
das
pop
inc
xchg
sub
cltd
int3
dec
addb
out
mov
inc
inc
jle
arpl
rol
sbb
mov
jbe
or
sub
data16
bound
adc
adc
mov
lret
int
data16
imul
filds
int
ja
mov
mov
push
and
sub
pushf
pop
les
daa
add
cmc
icebp
cmpsb
and
cltd
and
out
sub
dec
divb
add
in
mov
pop
jl
jnp
and
cmp
xor
jecxz
loopne
out
repnz
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
sub
and
or
jle
mov
mov
fcomi
cmp
xchg
jmp
add
push
sbb
loopne
sbb
outsl
and
std
pop
or
ja
in
cli
push
sbb
int3
loop
cmpsb
xor
jo
in
lods
sbb
mov
push
pop
fbstp
movsb
pop
sub
push
repz
jmp
fldt
or
mov
lret
mov
ret
test
shll
loop
aam
sbb
imul
fiaddl
adc
xchg
push
test
scas
sub
popa
rcrb
xor
lret
xchg
inc
push
std
sbb
xchg
dec
inc
cmpsb
mov
pusha
and
ss
popa
inc
push
aas
xlat
pop
push
es
jle
movsb
sti
add
inc
or
pusha
xor
cmp
mov
dec
cmp
jg
mov
sbb
adc
mov
sbb
mov
dec
in
mov
and
jmp
in
jle
sub
adcl
loope
push
or
rorl
add
or
inc
std
decl
jmp
or
stc
ret
mov
jle
jg
jle
lock
jge
in
push
outsb
pop
sahf
out
out
icebp
mov
adc
loop
mov
push
cmc
cmp
into
add
rorb
push
test
insb
jns
mov
add
jns
push
jnp
or
dec
or
cmpsl
cmp
push
inc
mov
scas
and
lret
cld
xor
scas
sbb
rorb
incb
adc
mov
mov
icebp
popa
cmc
arpl
jl
mov
call
andb
cmp
rorl
mov
xor
aaa
jns
push
xor
loope
pop
push
adc
loopne
jbe
imul
cld
dec
addr16
test
add
inc
mov
or
into
iret
inc
sbb
int
lahf
pop
gs
push
sbb
sbb
repz
adcl
or
ret
add
cs
or
jle
mov
adc
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
xor
lcall
aam
sub
or
ljmp
lds
add
leave
in
lahf
cmpl
out
mov
in
les
push
std
sub
push
xchg
pop
or
out
faddl
xor
imul
add
cmpsl
add
js
push
andl
daa
and
stos
push
push
scas
cmc
or
adc
jnp
gs
mov
adc
adc
xorl
adc
mov
jmp
es
mov
les
xor
and
cmpb
inc
inc
fsubl
mov
test
js
decb
out
stos
stos
xchg
daa
faddl
out
pop
lea
mov
push
fdivr
mov
repz
fwait
mov
out
fdivrs
rorb
xor
mov
sub
cmp
call
add
shll
bound
pop
test
adc
cld
cs
pop
mov
movsl
rol
es
add
sbb
or
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
xchg
xchg
jg
jle
js
or
cmc
inc
icebp
mov
pop
int
or
cli
aaa
and
add
pushf
jg
dec
scas
lods
mov
cmpsl
pushf
out
in
add
cmpsb
ss
inc
xchg
or
push
movsl
mov
mov
adc
pushl
daa
cmp
lahf
cmp
aam
jp
lock
pop
add
and
int
in
ret
cmp
mov
push
shll
pop
shl
ret
push
add
repnz
inc
mov
cltd
jl
cs
jnp
mov
nop
add
xchg
xlat
xchg
mov
push
bswap
call
lcall
dec
out
repnz
ret
jl
push
mov
test
pushf
mov
repnz
mov
or
jecxz
xor
or
dec
jge
sub
xchg
hlt
addl
inc
mov
stos
cmp
repz
cmp
dec
jmp
mov
pop
addr16
aam
pop
lcall
mov
ljmp
xchg
mull
mov
mov
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
xchg
sbb
mov
jle
push
jg
jle
push
sub
cmc
xor
lods
dec
sub
pusha
xchg
dec
je
jbe
bound
and
fstps
pop
or
in
pop
in
adc
arpl
shrb
dec
das
je
fnstcw
jb
cmp
push
inc
lods
add
loop
aad
push
mov
repz
xor
cmpsl
mov
push
dec
das
in
mov
cs
inc
in
xchg
jmp
movsl
mov
loop
xchg
or
loopne
adc
mov
mov
hlt
out
cmp
jnp
in
sbb
mov
pop
jo,pn
aam
push
std
push
and
jp
mov
push
mov
outsl
jo
or
mov
sbb
push
ds
loope
pop
notl
dec
clc
lock
lret
lds
lcall
lret
cmp
notl
inc
xor
ret
xor
and
scas
repz
mov
out
insb
repz
out
jnp
outsb
andb
fimull
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
stc
insl
daa
jle
push
jg
jle
jl
jg
repz
fisubl
aas
inc
jg
lcall
data16
pusha
enter
aaa
stos
flds
je
inc
pusha
push
in
and
xchg
out
cmpsl
rcrl
cmp
mov
and
stos
sub
orb
cmpsl
jmp
ljmp
fldt
push
fnsave
and
fbld
dec
popf
ds
mov
arpl
adc
cli
ret
push
xchg
rorb
inc
push
movsl
aam
xor
jp
pop
mov
cmp
sarb
and
cmpsb
cmp
repnz
enter
sbbb
fs
psrad
mov
std
xchg
xchg
and
loop
inc
test
add
roll
cmpsl
fcompl
insl
test
xchg
pop
shlb
test
loop
push
imul
ljmp
fs
mov
adcb
jecxz
int
sub
dec
mov
xor
popl
push
movsb
sbb
icebp
cmp
xchg
bound
sbb
push
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
sarb
mov
lds
jle
cmpsb
imulb
loope
jge
adc
cmp
pop
mov
gs
pop
jns
lods
cmpsl
cli
inc
cmc
lods
jecxz
xor
and
les
imul
sub
jno
xlat
fidivl
es
aam
inc
mov
cltd
push
lods
sahf
andl
jl
adc
mov
sbb
sub
frstor
mov
push
lret
divb
mov
cli
mov
jnp
or
adc
fcmovnb
push
mov
mov
inc
sti
xchg
cwtl
inc
mov
cmp
movsb
mov
mov
outsb
out
pop
mov
je
mov
ljmp
enter
daa
lds
dec
test
and
dec
out
js
insb
daa
xlat
das
ss
inc
xchg
mov
mov
add
and
sub
outsl
and
out
movsb
jle
and
cli
pop
push
sub
add
out
je
fiadds
or
movsb
in
js
iret
dec
dec
cmp
xchg
outsl
pop
sti
sahf
popf
and
xchg
faddp
jmp
jne
inc
clc
mov
test
loop
pop
icebp
lcall
mov
aaa
mov
adc
adc
push
jb
cmc
cli
fdiv
mov
js
jns
outsb
adc
gs
inc
jb
daa
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
mov
leave
imul
jg
jle
das
mov
jecxz
pop
insb
mov
adc
jl
pop
jmp
and
pop
and
push
mov
push
jmp
fwait
movsl
pop
bound
testl
cmp
out
jnp
test
or
icebp
pop
in
mov
mov
int3
dec
ret
adc
sub
or
mov
mov
loop
add
hlt
pushf
outsb
sbb
mov
sarl
mov
lret
jae
stos
inc
jecxz
cmp
insl
xor
pop
push
cmpb
addr16
aaa
or
or
push
cld
xorb
xor
in
clc
fldcw
dec
imul
dec
or
nop
out
jbe
pop
cmp
sub
xchg
push
pop
comiss
out
in
pop
jbe
js
xor
jmp
mov
sarb
test
jne
pop
jbe
int3
test
push
ss
movsl
ret
xor
wrmsr
inc
out
mov
inc
stos
orl
mov
jle
sbb
sub
mov
dec
pop
mov
inc
loope
cmp
in
pushf
ds
or
push
pop
into
dec
cmpsl
out
scas
mov
add
mov
dec
xor
xor
add
jmp
jg
add
jns
cmp
call
jle
jg
jle
ret
xchg
stos
ds
or
dec
arpl
xchg
iret
in
fbstp
lea
adc
sub
cmp
jmp
jnp
push
hlt
iret
push
xchg
fldenv
and
test
loope
cmp
in
and
lock
jmp
es
jne
jnp
dec
cld
xor
push
mov
dec
shl
test
and
repz
repnz
cld
mov
cwtl
bound
push
jb
adc
pop
mov
mov
sub
jbe
push
pusha
inc
xor
rol
idivl
inc
sbb
jecxz
aaa
push
test
pop
scas
xchg
imul
insl
jo
lock
push
inc
rcrb
cmp
pusha
popa
and
clc
bound
mov
mov
push
loope
sub
hlt
es
repnz
es
mov
inc
jmp
mov
shl
inc
das
push
clc
or
jns
jns
cmp
and
mov
imul
leave
cmp
adc
cld
lods
std
sub
or
inc
sub
xchg
test
out
xor
xor
sbbb
jl
adc
aad
gs
adc
cmp
sbb
push
sub
xchg
or
and
jg
gs
mov
mov
cli
adc
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
jle
lds
jle
pop
xor
test
jmp
incb
mov
cmovg
ja
or
das
jns
jno
mov
mov
out
int
movsb
pop
test
shrb
pop
push
pop
mov
pushf
in
push
mov
fnstenv
or
aaa
inc
stos
xor
mov
jo
cmp
and
jae,pt
scas
sub
or
fnstenv
test
js
xchg
addb
add
and
add
dec
pop
adc
and
test
scas
mov
and
mov
cli
pop
adc
xchg
imulb
xchg
aaa
enter
jbe
cmp
xchg
jle
pop
adc
aas
sub
sub
push
cld
data16
mov
dec
sti
cmc
ss
mov
push
jecxz
in
xchg
lea
and
push
stos
xchg
outsl
stos
outsb
sarb
int3
add
jmp
fisttps
mov
xchg
leave
stos
iret
or
sbb
call
outsb
cwtl
mov
mov
leave
mov
sub
jb
sub
jp
adc
push
jb
mov
mov
bound
xor
orb
xchg
popf
xchg
and
mov
mov
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
pop
mov
icebp
jle,pt
mov
jle
rorb
stc
cmc
insl
movsb
lret
pop
orb
pushf
lahf
push
enter
lret
adc
jb
xchg
fs
mov
insl
mov
mov
pop
adc
sub
insl
shrb
jmp
ret
hlt
cmp
pop
adc
mov
jg
jg
out
inc
xor
cmp
pop
pop
mov
xchg
cmp
aam
das
inc
stc
mov
push
out
adc
sbb
fcomp
test
mov
das
int
stc
add
aam
ss
jge
push
int
rcll
sbb
push
mov
stos
aam
xor
popa
popf
xlat
int
mov
cmp
sarl
rorb
jae
jae
call
jne
xchg
ja
mov
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
cmp
cs
aas
jle
mov
jle
icebp
inc
add
clc
xchg
sbb
xchg
call
aad
inc
addr16
jae
pop
ret
push
scas
or
shlb
test
cmp
xor
jmp
inc
xor
pop
jo
push
bound
bound
lahf
pop
adc
stc
jl
pop
pop
pop
insl
xor
shr
push
rcl
loope
sub
rclb
imul
mov
and
es
roll
pusha
lret
jbe
xorl
jo
xor
jmp
mov
pop
inc
add
subl
sub
cmp
xor
fs
lds
push
cmc
aad
call
mov
sbb
daa
jg
mov
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
cli
push
pop
add
jle
jle
jle
scas
std
mov
pushf
std
pop
insb
fisubrl
daa
dec
xor
lods
pushf
jnp
les
adc
sub
push
pop
je
gs
addr16
pop
sub
pushf
inc
lods
scas
inc
pushf
inc
fnsave
lods
push
daa
gs
dec
int3
sbb
mov
push
mov
int
jmp
dec
mov
push
adc
int3
in
sub
push
ret
mov
mov
push
pop
xchg
lret
push
sub
jns
fiadds
mov
push
and
fidivrl
mov
ljmp
mov
xchg
and
ss
mov
jle
enter
add
inc
out
call
xchg
or
pop
or
jo
aas
imull
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
fcmovnbe
jl
cmp
jle
jle
jle
mov
das
sub
sbb
jecxz
lcall
ror
add
sub
les
icebp
jae
ljmp
int3
sbb
fdivp
fwait
shl
or
js
and
push
xlat
lods
dec
cmpl
data16
cmpsb
inc
xor
mov
xchg
adc
loop
jmp
cmc
push
daa
pop
stos
out
lret
pop
lcall
outsb
cmp
in
cmp
jge
jecxz
inc
nop
in
pop
jmp
test
lods
mov
mov
xorb
shlb
dec
ds
xchg
sub
mov
aad
mov
fsubrp
mov
mulb
rcll
mov
test
jne
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
push
jp
les
jle
jle
cmpsb
push
test
jb
lock
leave
imul
jbe
and
jne
lcall
nop
mov
sbb
xor
insb
xchg
inc
ss
pop
mov
pop
popa
xchg
xchg
loop
jno
out
adc
aas
or
repz
jmp
push
xchg
ds
movsb
jl
inc
pop
icebp
pop
xlat
pop
out
adc
js
repz
mov
push
leave
inc
cli
jae
divl
std
jbe
jl
mov
fst
pop
aad
lret
adc
sti
or
mov
xor
push
sahf
xchg
imul
fistl
rcrl
push
pushf
jmp
jae
mov
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
lock
adc
xor
mov
jle
pushf
mov
int3
roll
pop
dec
mov
inc
push
mov
test
mov
gs
xchg
dec
mov
mov
sbb
jne
sarl
punpckhdq
dec
repz
xchg
dec
mov
shlb
dec
test
pause
jne
mov
sub
sub
dec
sti
idivb
inc
pop
xor
xchg
enter
inc
mov
adc
lock
movsb
adc
jno
addr16
pop
cmp
or
push
cmpsl
add
push
pop
xchg
imul
mov
lock
sti
int
cmpl
sub
cmc
xor
aas
push
lcall
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
mov
jle
jle
jle
or
dec
or
push
aaa
add
add
mov
mov
rclb
mov
das
mov
push
mov
movsl
xlat
push
mov
pop
pop
icebp
sarb
fwait
add
add
dec
and
rcl
fldenv
lods
sbbl
rcrl
or
jp
lock
and
fs
mov
insb
push
mov
jb
push
lods
pusha
ror
fbld
or
ljmp
dec
leave
push
push
push
or
and
repz
cmp
into
imul
cli
mov
in
xor
inc
cmp
outsl
mov
jo
repnz
pop
jl
add
leave
pop
scas
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
cld
hlt
push
imul
jle
cli
fimuls
movsl
jl
lret
xchg
lea
out
and
cltd
jge
dec
push
hlt
cmp
jne
jno
mov
jl
pop
insl
jnp
adc
test
scas
mov
nop
fidivrl
jne
repz
inc
test
imul
xchg
sub
fcomp
in
jb
fisubl
inc
ljmp
sbb
jno
fsubs
sahf
or
leave
add
in
int
cld
adc
add
test
xchg
popa
xchg
shl
lcall
mov
sub
inc
cltd
lret
dec
in
add
xor
dec
mov
or
cs
fdivrl
shl
jle
aad
mov
loope
data16
scas
mov
push
das
cmp
movsl
lahf
movsb
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
mov
jle
mov
jle
sbb
xchg
divl
dec
out
and
fiaddl
inc
jmp
push
and
jmp
pop
ljmp
stos
repnz
and
pop
mov
inc
movsl
fldl
xchg
mov
dec
repz
fdivrl
out
push
xchg
and
iret
repnz
and
adc
xor
mov
push
sbb
fdivrl
push
imul
lods
sub
hlt
and
subb
fwait
xchg
sahf
adc
mov
cs
mov
enter
pop
mov
test
push
mov
cmp
pop
xchg
mov
sbb
rcrb
xorl
xor
das
xchg
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
rcrl
sarb
jle
mov
jle
mov
jns
or
ds
jae
test
mov
jp
pop
lds
insb
daa
call
inc
gs
mov
xor
inc
ja
gs
mov
sub
fwait
repz
lret
jg
dec
testl
add
sub
movsl
imul
inc
mov
sbb
adc
mov
sbb
fucomp
clc
out
rclb
mull
jnp
push
loope
mov
and
arpl
cld
sub
mov
in
xchg
pop
mov
daa
scas
cmpsl
std
xchg
cmpsl
stos
outsl
test
test
pop
mov
test
imull
addr16
mov
test
popf
mov
pop
ss
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
inc
andl
mov
jle
or
sbb
xor
xlat
jle
cmp
xor
sub
in
int3
daa
outsl
or
lock
in
or
and
aam
inc
lret
push
repnz
lret
add
jl
ss
mov
dec
pop
incl
stos
cmp
sub
xor
scas
xor
movsb
inc
pop
test
and
jae
outsb
mov
pop
xor
das
push
pop
xor
lea
or
out
dec
jnp
pusha
dec
mov
loop
andl
lret
addr16
and
cwtl
sbb
jp
fdivrl
sub
mov
jge
stos
ljmp
das
lods
inc
sbb
es
mov
loop
push
hlt
sub
movsb
xor
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
imul
mov
aaa
jle
mov
jle
jno
das
sahf
add
ret
imul
xchg
or
inc
push
aam
add
cmp
add
lock
mov
mov
jp
xchg
clc
fcomps
mov
mov
add
aas
enter
pop
lret
xor
inc
movsb
xchg
daa
out
sub
pop
pop
lods
int
sbb
and
mov
push
or
mov
push
xchg
add
out
aam
cltd
sub
rcll
aam
nop
in
inc
mov
lret
sbb
adc
das
dec
rcll
jle
dec
stos
cld
adc
push
mov
pop
popa
or
mov
iret
jg
loope
push
pop
outsb
loopne
and
fucompp
push
aas
aad
scas
add
loopne
add
inc
loop
xchg
imul
pop
inc
push
aaa
jle
mov
jle
mov
cmp
sahf
nop
repnz
repz
mov
mov
jp
mov
cmpsb
xlat
fistps
jp
sbb
add
dec
mov
sub
mov
push
inc
andl
mov
or
pop
jl
push
sarl
pop
mov
mov
and
mov
mov
and
add
inc
ljmp
push
hlt
incl
out
mov
roll
icebp
test
pop
test
jl
push
lea
xchg
out
jmp
and
insl
cmp
out
repnz
adc
sbb
stc
insb
cwtl
hlt
adc
icebp
cmp
add
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
cltd
neg
or
mov
jle
sbb
ds
add
push
adc
incl
sarl
add
sahf
push
fcmovbe
push
aas
jmp
fmuls
arpl
jo
cmpsl
xchg
dec
push
mov
bound
incl
sbb
imul
in
inc
test
xor
inc
movsl
popf
popa
scas
or
and
or
in
icebp
push
in
push
loope
push
arpl
pop
test
imulb
dec
cltd
rcrb
stos
loop
shlb
pop
pop
clc
lods
out
outsl
cltd
mov
mov
sbb
inc
or
sub
insl
fs
mov
dec
repz
pop
pusha
xchg
cmpsl
adc
cmp
jb
mov
and
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
inc
or
jle
mov
jle
mov
adc
ja
leave
push
xor
pop
xlat
fidivl
xor
dec
sar
out
leave
add
jle
cmp
cmp
or
test
mov
adc
pop
xor
leave
out
xchg
movl
arpl
in
fstpl
or
add
insb
cmp
mov
add
popf
insl
mov
ja
inc
mov
in
popa
push
inc
mov
clc
mov
je
ds
insb
add
pop
adc
push
jmp
adc
pop
fldln2
pop
jnp
xor
insb
or
pushf
pop
insb
mov
cld
je
jl,pt
dec
scas
jmp
mov
xchg
imul
lahf
add
js
pop
leave
jne
enter
sub
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
scas
cld
sub
scas
xchg
test
outsb
jp
aad
dec
mov
jne
call
pop
mov
and
mov
fisubrl
mov
test
shrb
in
push
scas
add
pop
jno
aas
or
mov
outsl
jl
pop
rolb
leave
vmptrld
cmp
xchg
mov
ss
adc
pop
lock
scas
loop
xlat
cmp
and
psrlq
js
pop
es
ret
out
das
lahf
inc
cld
xor
loop
push
es
sub
dec
add
mov
mov
les
outsb
adc
sub
xchg
lods
dec
inc
push
repz
dec
adc
mov
pushf
and
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
int3
das
int3
adc
mov
jle
imul
pop
aas
ret
pop
decb
or
lret
out
mov
aas
sub
fldcw
pop
pop
push
sbb
insb
add
cli
imul
xor
xor
mov
fdecstp
add
in
mov
mov
das
mov
arpl
cmc
push
iret
sti
adcl
and
fisubl
xor
inc
test
xchg
fsubrl
insb
sub
jge
scas
mov
lock
scas
cli
jmp
pop
dec
pop
jmp
repz
pop
xchg
mov
sbb
shlb
hlt
nop
lock
rcl
sub
pushf
push
dec
push
sbb
imul
xor
jmp
popa
jno
jnp
jnp
or
shlb
dec
lret
jle
mov
jle
cmp
mov
inc
xchg
test
jno
mov
mull
push
lahf
adc
mov
or
sub
add
sub
xor
adc
addb
xlat
aam
mov
jmp
mov
fldenv
adc
push
jno
xor
jo
mov
arpl
pusha
mov
cmp
adc
adc
nop
jne
pop
gs
enter
scas
push
icebp
stos
xchg
xchg
mov
sub
xchg
and
dec
aad
jbe
jl
inc
enter
mov
jo
fldcw
push
xor
fdivrs
push
jo
and
and
dec
test
mov
enter
sbb
cmp
jmp
test
xchg
push
stos
push
push
cmp
jle
mov
jle
insl
fwait
xchg
xor
stos
xor
pop
shlb
pop
scas
mov
xor
out
ja
inc
ljmp
mov
aaa
inc
sbb
pop
sub
bnd
pop
mov
jecxz
add
add
push
add
aad
adc
ljmp
test
mov
push
lea
stos
sti
cld
imul
imul
sbb
idiv
add
pop
sub
mov
lods
or
rorl
add
std
lods
adc
jns
hlt
mov
sbb
pop
int
in
pop
lahf
loope
aad
sbb
jnp
inc
in
ret
push
sub
sbb
xchg
sbb
cli
dec
push
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
inc
or
jle
cs
cmp
sbb
xchg
cld
or
sub
cld
xchg
test
in
xor
mov
ljmp
xchg
xchg
mov
add
sub
or
and
or
adc
dec
loop
aaa
aam
xchg
cwtl
sbb
faddl
cmp
push
inc
dec
mov
pusha
in
jge
iret
dec
mov
mov
cmpsb
mov
out
push
shrb
jae
mov
push
das
daa
imul
sub
sbb
lahf
lock
lcall
mov
stos
inc
mov
fadds
or
and
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
