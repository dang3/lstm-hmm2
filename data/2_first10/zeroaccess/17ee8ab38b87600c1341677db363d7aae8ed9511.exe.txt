push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
add
insb
adc
adc
int
adc
xchg
fwait
shrl
fisttpl
lds
lods
or
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
stc
mov
mull
pop
in
enter
dec
aam
jo
js
jae
cmp
aad
xchg
rclb
jbe
rcrl
adc
sub
push
es
push
push
shlb
jecxz
inc
in
push
mov
lret
or
enter
out
mov
sti
push
pop
rclb
push
mov
jp
cld
mov
push
xchg
aaa
aaa
mov
jnp
loopne
rolb
sbb
push
out
sbb
and
mov
lods
out
into
out
sahf
insb
adc
dec
pop
das
daa
and
xchg
mov
pop
sbb
insb
or
addb
outsl
xchg
sti
add
xlat
pop
jo
add
pop
dec
inc
and
xchg
mov
lea
in
lcall
xchg
pop
popa
lea
mov
sub
icebp
push
addr16
pop
push
dec
mov
pop
push
mov
add
xor
lret
loop
mov
sbb
sub
or
dec
cld
loopne
add
je
out
add
dec
scas
fs
roll
cwtl
xchg
cli
cld
js
addr16
xchg
inc
or
cmp
jnp
jne
sbb
or
mov
add
jno
jg
mov
movsb
add
daa
sub
jns
stos
mov
inc
popf
xchg
es
add
mov
jo
push
dec
xchg
sbb
inc
jnp
xchg
jnp
stos
xchg
pop
pop
mov
cli
push
jo
mov
lret
aad
add
aam
xchg
or
in
inc
mov
in
pop
cmpsb
dec
sbb
imul
push
push
xchg
sub
fldt
sub
xchg
xor
mov
fdivrp
lods
cmc
mov
jg
or
ds
movl
sbb
aam
arpl
cmp
pusha
scas
pusha
inc
cmc
push
cltd
aaa
out
xor
in
addr16
hlt
xchg
jg
data16
cmpsl
out
int3
pop
inc
je
rclb
or
in
fsub
mov
pop
fs
or
dec
sub
and
mov
mov
int3
lds
sti
ret
dec
sub
adc
test
adc
cmp
mov
or
sbb
negl
fsts
mov
nop
cmc
bswap
loopne
adc
cwtl
popa
jno
andl
add
jmp
inc
daa
pop
inc
add
or
and
je
mov
mov
and
subl
xor
test
push
and
mov
inc
pop
addr16
out
pop
loopne
push
popf
xor
push
data16
xchg
xchg
mov
shlb
aas
repz
lods
inc
add
jmp
out
cmp
add
lds
xor
inc
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
xor
int
adc
int
adc
cmp
pop
pushf
lahf
inc
aad
dec
mov
rolb
push
inc
lahf
and
sarb
fdivl
jnp
lret
inc
dec
xor
ja
mov
and
jns
je
add
lret
imul
rcrb
hlt
bound
mov
into
lahf
outsl
mov
call
adc
adc
and
lea
adc
enter
outsb
loop
movsl
pusha
imul
add
arpl
daa
cmpsb
mov
and
aaa
das
cmp
jo
xor
and
mov
xchg
cmc
inc
sahf
mov
sub
dec
pusha
pop
test
pop
mov
popa
pushf
pop
or
push
jmp
fs
dec
pop
stos
movb
fst
jns
insb
int
adc
inc
ljmp
pop
mulb
dec
jmp
mov
movsb
sub
push
push
mov
lret
jecxz
arpl
or
stos
push
test
xchg
add
loop
es
sbb
mov
cmp
clc
icebp
imul
adc
mov
sbb
push
jg
sub
mov
pop
int
push
test
test
jp
mov
adc
movsb
mov
dec
pop
jae
adc
ja
lock
and
mov
pop
pop
ret
out
pop
fnstcw
rorb
sbb
test
pop
icebp
lcall
call
int
mov
hlt
sti
sbb
add
cmp
out
nop
cmp
mov
aas
aaa
sbb
jecxz
xchg
mov
popf
sti
add
cmp
insl
loop
sbb
outsl
and
sar
imul
lcall
out
xchg
jmp
sub
mov
mov
xchg
lcall
xchg
mov
mov
movsb
ja
ljmp
fiaddl
movsl
push
sub
push
mov
xlat
cmp
sahf
scas
sub
sahf
mov
icebp
inc
jnp
jle
jecxz
fsubrs
mov
mov
loope
mov
rcll
add
stos
mov
mov
cmp
add
mov
mov
dec
sbb
push
loop
dec
push
scas
mov
push
lret
xchg
xor
xchg
adc
lods
dec
popa
test
jmp
sahf
xchg
jg
push
out
xchg
or
pop
jne
jae
jp
imul
push
outsl
lods
pop
xor
loope
test
stc
dec
pop
in
insl
shl
jo
pop
push
loop
std
std
stos
bsf
sub
sbb
fmul
inc
rcrl
adc
xor
outsb
mov
cmp
loop
xor
cmp
addr16
sub
lods
ror
outsb
loop
outsb
js
out
dec
sbb
and
les
sub
pop
adc
popf
mov
sar
scas
aaa
rorb
mov
mov
or
enter
dec
shlb
xor
lret
and
cld
jnp
pop
cmp
xchg
xor
int
es
inc
xchg
xchg
into
or
push
jl
dec
xlat
add
test
sahf
sti
mov
sub
movsl
sahf
daa
dec
subl
adc
xchg
push
sbb
pop
out
movsb
flds
jl
in
push
mov
xchg
jp
rclb
pop
or
pop
push
push
aad
ljmp
andl
push
pushf
sahf
loope
aam
adc
cli
xlat
pop
push
and
jp
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
adc
ljmp
int
adc
xlat
in
sbb
in
pushf
dec
pop
cmp
xlat
inc
stos
dec
mov
fs
adc
and
xchg
xchg
lret
inc
test
in
mov
jns
xor
mov
push
test
jge
fwait
mov
fs
mov
sbb
cmp
cmp
dec
ret
push
xchg
mov
cmpsl
daa
iret
outsb
mov
fst
test
push
adc
aaa
scas
jns
push
jle
mov
int
aas
xor
int3
or
lea
inc
pop
icebp
sub
scas
and
shrb
adc
sub
testl
mov
or
outsb
fldl
and
ja
aaa
popf
popf
mull
aaa
mov
orb
or
sahf
ud0
pop
pop
jp
in
mov
fistpll
push
test
pusha
stc
fcomp
std
lods
jg
ret
mov
arpl
lds
cwtl
mov
sarl
aad
add
adc
std
ror
add
enter
fwait
dec
add
les
mov
lods
jle
jno
add
inc
sti
cmp
push
enter
push
cmp
mov
faddl
ss
hlt
mulb
jbe
add
testb
sbb
mov
push
push
sbb
mov
sbb
movsb
in
mov
mov
in
ljmp
rcr
rclb
gs
mov
mov
pop
bound
mov
daa
adc
jge
fmuls
ret
mov
xor
int
jnp
cmp
push
adc
cmp
push
pop
cmp
jecxz
lret
mov
mov
out
mov
out
mov
cmp
push
fsubr
call
icebp
inc
mov
xchg
repnz
mov
add
inc
call
scas
cmc
sub
push
sbb
movmskps
pop
cwtl
add
loopne
loope
mov
push
dec
hlt
leave
test
pop
pushf
and
cltd
aam
xchg
and
movsl
mov
fsubr
pushf
ljmp
mov
mov
pop
push
rcrb
xchg
addl
jnp
cmp
jecxz
ljmp
imul
push
mul
mov
and
clc
cmp
adc
jnp
fs
mov
sub
shlb
stc
test
inc
pop
xlat
fistl
jmp
cmp
fs
xchg
add
call
mov
loop
stos
js
and
inc
mov
cwtl
push
loop
je
movb
mov
or
addr16
pop
aad
clc
cltd
jle
inc
jae
xchg
and
cmp
and
int
mov
mov
inc
pop
int
add
les
jbe
sub
xor
xchg
shll
iret
mov
cwtl
push
popa
hlt
xchg
je
push
es
int3
add
ret
adc
xor
pop
iret
in
and
cmc
sub
xor
mov
repnz
fcomip
shr
push
imul
mov
test
mov
jns
ljmp
push
popf
popfw
add
pop
dec
lods
push
cltd
mov
daa
inc
daa
lods
lock
lcall
test
mov
mov
lret
mov
xchg
jge
das
insl
xchg
rorl
jo
test
jle
cs
adc
or
push
scas
xorl
jg
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
daa
adc
call
cwtl
mov
mov
sbb
dec
xchg
dec
movsl
int
jmp
sbb
repz
adc
pop
and
ja
popf
jbe
jo
mov
cs
fnstsw
sahf
jg
lds
lods
js
push
aad
ret
push
popf
vpshaq
ret
mov
fisubs
mov
pop
fucomp
jle
pop
cld
mov
sbb
addr16
cwtl
rep
jmp
sub
ficoms
push
adc
shrl
cmpsb
int3
sub
insl
mov
pop
ljmp
imul
lods
and
jcxz
out
mov
fistpll
ret
fadd
xchg
fimull
dec
in
shlb
out
mov
add
and
push
mov
cltd
ss
repz
lock
mov
test
dec
inc
mov
cmp
enter
adc
addr16
fstpt
push
int3
dec
clc
outsb
push
aam
das
hlt
cs
repz
aaa
jnp
sbb
inc
or
rcrl
jge
mov
and
push
ljmp
jge
popa
jne
cwtl
mov
lret
and
cltd
fistps
lock
xor
xor
mov
xchg
loop
xchg
movsb
pusha
aas
jnp
push
or
sbb
nop
lret
cmp
dec
cmp
outsb
xchg
aad
mov
int
shl
push
scas
push
pop
hlt
out
dec
xor
insl
pop
cmpsb
popf
mov
aam
mov
insl
sub
inc
lods
ret
pop
cmpsb
das
mov
ss
aas
out
outsl
push
cmp
dec
ljmp
pop
mov
push
dec
and
sarl
mov
mov
mov
orb
pop
inc
add
xor
pop
das
int
xor
push
cmp
out
ret
mov
jne
inc
test
bound
xor
fmull
sbb
out
lret
xor
mov
jno
aaa
or
insl
xor
mov
cmp
pop
jecxz
pop
and
nop
sbb
lret
push
fidivs
mov
aad
dec
add
pop
inc
outsl
subl
jno,pt
jmp
lock
mov
add
push
les
mov
xor
pop
lahf
xchg
cmp
outsb
mov
lcall
pop
fildl
pop
mov
xchg
dec
into
ss
push
mov
subb
int3
rcl
cltd
xor
pusha
inc
lock
into
and
leave
insb
rcl
mov
mov
add
mov
out
daa
ja
sub
inc
jbe
clc
push
js
inc
fsub
jmp
mov
std
cmp
and
popf
gs
dec
pop
or
negl
pop
xchg
mov
xchg
pop
pusha
cmpsb
test
dec
or
add
jecxz
pop
push
or
add
pop
add
cmc
xchg
stos
fstps
into
cmp
and
in
pop
insl
dec
nop
push
inc
pushf
mov
jbe
je
int3
cmp
daa
aad
mov
mov
sbb
push
ret
imul
hlt
clc
xchg
mov
xor
imul
adc
lea
mov
out
outsl
dec
pusha
cltd
into
stos
sub
stos
mov
or
xchg
or
adc
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
add
mov
int
adc
clc
scas
dec
ljmp
cltd
xor
sbb
xchg
ljmp
xor
movsl
cmp
leave
dec
or
cmp
rcl
decb
jge
cmc
mov
pop
xlat
mov
add
fisubrs
or
into
lahf
add
jl
in
fiaddl
mov
scas
xchg
cmp
movsl
test
pop
pop
int
or
sti
add
and
stos
pop
outsl
aas
dec
daa
daa
movsb
mov
jecxz
push
push
jmp
xor
or
lahf
pop
roll
ja
push
xchg
adc
jae
mov
outsb
sub
pop
fdivrl
push
mov
xchg
sbb
dec
bound
sbb
sbb
lahf
inc
adc
int
nop
popa
inc
inc
push
imul
ja
push
enter
js
cmp
imul
add
stos
stc
clc
mov
mov
inc
je
scas
xchg
xchg
sub
pop
rolb
stos
ret
dec
dec
lret
jns
repz
pop
outsl
push
pop
mov
repz
mov
pop
dec
inc
sub
pop
adc
jns
jns
cmp
jbe
mov
jmp
jbe
jno
cmp
nop
hlt
out
pop
movsl
jb
mov
mov
xchg
cmp
cmp
fdivl
js
pop
mov
dec
mov
sbbb
inc
idivl
mov
mov
shl
adc
pop
xchg
popa
test
jp
jnp
out
inc
fldenv
jbe
cmpsb
and
push
scas
adc
push
push
fsubr
cli
sbb
cmp
mov
jecxz
xchg
jp
push
dec
and
clc
sqrtps
aad
popf
movsl
outsl
or
rcrb
push
mov
sub
adc
add
rorb
and
push
inc
insl
imul
pop
fcomp
movb
in
mov
mov
adc
stos
xchg
pop
outsb
and
scas
incb
cmp
sub
lret
cmp
adc
inc
fldcw
lods
mov
mov
mov
dec
and
jecxz
cltd
enter
mov
sub
or
imul
lret
mov
bound
icebp
sbb
mov
loop
push
loope
icebp
sbb
imul
movsb
imul
mov
in
push
mov
pusha
xor
mov
decl
imul
mov
push
rorb
lcall
mov
das
or
outsl
mov
xchg
shrb
nop
xchg
ret
and
xchg
mov
xchg
and
cltd
stc
aaa
adc
pushf
lea
dec
mov
sbbl
mov
dec
cmp
jg
test
cmp
and
test
lcall
loop
sub
push
test
mov
cmc
cltd
pusha
or
jns
lahf
loope
sbb
test
js
js
int
add
mov
cmp
clc
jo
movsl
sub
in
lock
ljmp
xor
fisubrs
out
and
adc
mov
add
ds
jne
cmp
add
in
int
add
push
fstl
jmp
sahf
lret
mov
roll
icebp
jns
cmpsl
test
jnp
mov
addr16
cmp
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
test
out
adc
int
adc
nop
insb
dec
ljmp
sub
pusha
xchg
lods
bound
cmp
inc
pop
cld
mov
mov
fwait
xor
mov
lcall
sti
pop
cmpsl
ret
jne
mov
sarb
jl
and
popa
test
inc
pop
xor
mov
inc
mov
pop
leave
pop
jle
or
scas
inc
std
insb
lods
pusha
shlb
cld
test
clc
ret
mov
dec
fwait
mov
sbb
dec
mov
xorl
int
arpl
out
mov
fs
adc
packuswb
inc
jbe
fcomip
push
fildll
fdivrs
jns
jo
dec
outsb
sbb
push
pop
dec
sub
add
dec
add
push
or
insb
nop
out
gs
adc
lcall
addb
adc
int3
popf
mov
or
pop
loope
outsl
jl
cmp
mov
dec
and
test
outsl
ret
mov
loope
add
mov
out
mov
in
loopne
lods
stos
mov
pop
push
enter
dec
xchg
call
outsb
mov
inc
xor
xor
or
imul
hlt
call
adc
xchg
mov
mov
xchg
add
cmp
cmp
mov
dec
clc
dec
nop
out
insb
clc
mov
not
lods
dec
popf
clc
pop
jg
jbe
adc
js
inc
outsl
dec
dec
and
cmc
nop
pop
inc
lret
inc
adc
xor
stc
pushf
cmc
push
out
orb
jae
dec
dec
aaa
insb
stc
pop
aas
stos
pop
mov
sbb
rorb
pop
fidivs
mov
and
mov
xchg
mov
popa
xorl
push
loopne
popf
in
lret
cmp
mov
lods
in
and
aaa
mov
cld
push
push
add
cmp
mov
pop
sbb
fsubrs
sbb
add
jge
lcall
test
insb
or
pop
fmull
mov
fistpl
xchg
mov
jbe
hlt
sbb
push
push
xor
adc
pop
mov
cmp
stos
jb
fldl2t
push
shlb
mov
int
dec
cltd
push
and
sub
cli
push
insl
cmc
jns
pop
and
or
sbb
lods
les
inc
fucomi
cmp
dec
cs
cmpsb
or
add
jg
mov
mov
in
dec
dec
cmp
std
xlat
push
sub
enter
sbb
leave
dec
movsl
stc
cmpl
in
pushf
lock
mov
pop
int3
add
or
mov
jbe
stos
xor
adc
dec
pop
add
and
dec
push
mov
jecxz
dec
sbb
push
jo
inc
imul
pop
shrb
sbb
std
mov
cmp
imul
jp
jle
nop
in
mov
ljmp
frstor
pushf
push
jle
jge
repz
fmull
test
outsl
or
or
cmpsl
fsts
scas
adc
dec
adc
scas
lods
int3
inc
mov
lret
enter
jns
mov
jp
xchg
cmp
pushf
push
sub
movsl
aam
add
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
test
in
adc
int
adc
xchg
push
in
imul
scas
mov
mov
adc
jle
jnp
in
es
inc
movsl
jae
gs
add
mov
dec
pop
dec
xchg
icebp
negl
sub
push
cmp
mov
add
jmp
mov
or
adc
sub
mov
sahf
adc
stos
xor
ljmp
mov
jge
nop
mov
hlt
sub
into
fldl
cmp
mov
xlat
out
cmp
and
sub
sbb
sub
pop
stc
pop
aas
iret
push
push
les
jno
fistps
hlt
fs
loope
mov
cli
inc
das
imul
push
pop
add
adc
jge
mov
cld
sarl
inc
push
sbb
loop
xorl
adc
cltd
mov
pop
mov
jne
push
int
push
jl
cmc
pop
pusha
jge
cltd
imul
les
sti
sahf
push
cmpsb
test
mov
gs
xlat
and
rcl
outsb
mov
into
negl
mov
imull
outsb
jne
insl
sub
inc
dec
daa
sub
sub
xchg
lret
adc
pop
xchg
add
shr
xor
pop
popf
push
and
mov
sbb
add
nop
push
cwtl
cli
jne
xchg
int3
ficompl
push
push
sub
or
mov
aaa
or
xor
das
mov
daa
push
repz
jae
sub
insb
pushf
or
adc
add
sbb
xchg
push
xor
dec
popf
ds
std
ss
cmovle
xor
pop
xchg
mov
shrb
fs
mov
ret
insl
daa
call
sub
jbe
sub
jns
cli
loop
ret
push
mov
inc
aas
lret
into
xor
aad
out
and
xor
jbe
jo
test
out
sbb
cmp
jb
test
mov
xchg
repz
pop
push
mov
add
in
aam
lods
test
push
std
inc
mov
sub
out
call
bound
dec
pop
test
lahf
sarb
jae
repnz
adc
sub
fldcw
inc
lahf
ret
ljmp
xchg
mov
sub
fiaddl
mov
add
lea
jp
stc
mov
jno
out
rcrl
and
call
jmp
add
enter
cmp
gs
or
test
lods
xchg
jge
shl
dec
insb
xchg
sub
cli
dec
xorl
sub
sub
push
stos
xor
je
pusha
pop
jecxz
fidivrs
lret
add
jae
dec
in
and
and
cld
sub
adc
mov
out
and
arpl
scas
pop
cltd
in
dec
xchg
aas
or
fisubs
hlt
sub
pushf
lea
test
sub
les
ret
jbe
leave
dec
fwait
daa
mov
and
mov
add
aam
xchg
outsl
js
add
jmp
pop
pop
and
lret
mov
xchg
or
leave
mov
add
mov
lods
ret
jne
sbb
or
xchg
xor
adc
lock
push
loope
rcrl
adc
xor
aas
or
cmp
mov
nop
pop
push
out
inc
xor
jns
movsl
mov
sbb
sbb
cli
in
pushf
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
test
jl
adc
adc
int
adc
mov
cmp
insb
xchg
gs
sub
movsb
je
and
arpl
xchg
mov
outsb
push
xor
imul
loopne
mov
xor
out
pusha
mov
xchg
push
adc
pop
hlt
push
ja
mov
fidivs
or
adc
int3
std
inc
pop
xchg
xchg
stos
push
xor
fimuls
enter
lret
aaa
fcmovb
jne
mov
ljmp
loop
mov
adcl
ret
jecxz
mov
cmp
xchg
xor
scas
dec
push
adc
fidivrs
push
and
mov
pop
ja
jbe
fs
pop
add
into
or
mov
or
mov
push
ret
aam
fistl
fdivr
rcrb
cmpsb
jle
jno
test
add
neg
mov
into
mov
je
dec
dec
xchg
jge
movl
lds
mov
dec
cmp
shlb
inc
outsb
xchg
fidivrs
repz
adc
jmp
aam
outsl
cmpsl
push
cltd
pushf
stos
push
jp
pop
les
ja
and
cs
dec
int3
nop
pop
xlat
test
enter
js
outsb
cli
dec
test
and
inc
in
sbb
sbb
xor
pop
adc
inc
sub
sarl
cmp
and
xor
mov
cmp
es
in
sbb
inc
or
adcb
sti
mov
repnz
loopne
xor
mov
and
mov
xchg
add
adc
pop
add
inc
stos
adc
insl
into
sub
mov
adc
test
enter
jge
loop
jg
movsb
fcomps
lahf
repz
dec
xchg
mov
jmp
inc
push
or
pop
add
lcall
add
jl
bound
inc
pop
sbb
loopne
jmp
imul
leave
int3
fisubs
insl
stc
or
xchg
fildl
lods
jmp
or
cmc
mov
pusha
xor
cmp
mov
or
push
mov
xor
mov
sbb
dec
mov
and
dec
xchg
jnp
mov
sbb
cmpb
popf
movsl
mov
out
adc
mov
adc
dec
mov
lds
outsb
insl
cltd
mov
pushf
sbb
jae
cmp
cltd
dec
add
jmp
insb
fimuls
aam
les
mov
add
int3
jbe
hlt
sbb
outsb
inc
in
jg
outsb
add
gs
jb
popa
pusha
test
mov
rorb
mov
loop
cmp
cmpsb
fs
sbb
insl
pop
ret
push
fidivl
xor
xchg
cmp
inc
cmpsl
std
rcl
enter
out
scas
cmp
fsubrs
mov
mov
and
add
xlat
add
or
adc
popf
add
xorl
loope
in
sbb
add
xchg
dec
repnz
inc
mov
aas
fcompl
add
push
mov
inc
push
ljmp
inc
push
adc
dec
mov
cmc
adc
sub
pop
or
jbe
push
js
ret
repz
pusha
push
xchg
in
adc
push
cmpsl
xchg
aas
repnz
popf
jne
or
sub
lds
mov
or
jae
dec
or
popa
int3
imul
int3
in
push
movsl
sbb
xchg
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
mov
push
push
ficoms
adc
adc
adc
sbb
shlb
or
mov
mov
enter
movsb
xchg
pop
cwtl
cwtl
mov
lret
cmp
sub
sbbl
ret
sbb
mov
dec
insb
fsin
and
pminsw
rolb
cwtl
lds
sbb
test
orl
cmp
dec
idivb
lcall
test
mov
jae
movsb
out
lret
outsl
insb
dec
pop
pop
push
jmp
or
mov
xchg
mov
jle
mov
xor
or
repnz
push
lods
inc
imul
shl
push
stc
cmpsl
cs
add
sbb
aad
rcrb
push
cmpsl
shrl
inc
xchg
xchg
mov
and
mov
xor
popa
sbb
lret
jne
xor
xor
xchg
js
repnz
rsm
divl
sub
sbb
in
sub
in
or
leave
std
ja
rcrl
push
mov
pop
movsl
leave
pop
sbb
mov
jecxz
push
lock
inc
and
jns
xor
cwtl
cwtl
test
mov
mov
sbb
test
fstpt
clc
mov
add
call
jle
push
aam
pusha
testl
mov
rclb
sbb
insl
sbb
xchg
shlb
cli
jno
icebp
jmp
sahf
fildl
jmp
mov
pop
movsl
adc
clc
mov
add
xchg
lds
push
cmp
pop
dec
addr16
add
hlt
xchg
inc
jo
les
sub
lahf
stos
mov
ljmp
loope
sbb
imul
cld
jl
sbb
fwait
mov
hlt
and
fldenv
jge
ret
or
mov
sbb
mov
rorb
add
adc
push
and
mov
lcall
mov
jge
add
sub
lea
addl
shrb
inc
imul
or
gs
ds
aaa
aaa
xor
sbb
dec
xchg
push
insb
xor
test
cli
dec
jae
mov
xchg
out
insl
repnz
fcoms
mov
nop
shlb
sbb
sti
fistpll
add
cmp
aaa
push
movl
and
leave
mov
push
pop
test
insb
push
xchg
jl
lods
aam
jnp
mov
and
xor
popa
adc
lret
or
xlat
jne
cld
xchg
or
movsb
outsl
mov
in
sub
insl
jo
jle
and
mov
imul
int
je
sub
in
adc
ficomps
jno
es
addl
dec
adc
pop
jne
ror
jnp
xchg
pop
xor
dec
pushf
jae
push
jl
ja
pop
fldt
sub
xor
cmpsl
xlat
adc
mov
xchg
aad
idivb
cmp
cmpsl
mov
std
out
es
hlt
aaa
push
mov
mov
or
loopne
test
and
int3
in
test
pop
cli
loopne
xchg
xchg
out
dec
jle
movsl
push
rcll
js
cmp
mov
mov
imul
jno
fdivl
cmp
imul
dec
movsl
es
push
lret
es
sar
fadd
mov
jl
test
jne
daa
pop
je
pop
jmp
cmpsb
xchg
pop
imul
loopne
push
in
loope
jmp
fmuls
sbb
or
test
jge
adc
int
adc
cli
aas
mov
popf
arpl
pop
adc
sbb
sbb
shll
inc
data16
ret
mov
mov
cs
xlat
in
test
fwait
and
lds
jbe
pusha
push
outsb
lret
cmpl
nopl
orb
fcmove
repz
dec
push
jl
mov
add
xchg
fidivrs
movsb
dec
mov
cltd
mov
enter
jg
scas
mov
dec
sub
test
icebp
gs
outsl
je
rcrb
mov
adc
mov
adc
in
incl
inc
repz
adc
nop
adc
adc
fwait
sbb
mov
sahf
push
fwait
ljmp
addl
stc
roll
popf
mov
and
inc
jb
mov
repz
sub
and
int
iret
int3
jnp
ss
testb
fdivrl
push
outsb
nop
idiv
add
push
cs
mov
cmp
js
cmp
jbe
and
mov
and
adc
pop
lcall
pop
loopne
lea
stos
fwait
sbb
mov
es
mov
cmp
inc
and
xchg
imul
inc
outsb
sub
sub
jbe
push
lret
cmp
stos
mov
sbb
and
sub
xchg
ds
aam
mul
sqrtps
dec
insl
mov
dec
scas
add
xchg
pop
pop
ljmp
add
and
aad
mov
sbb
dec
pusha
xchg
adc
pop
out
cmp
idiv
and
orl
add
dec
je
or
scas
rorb
ja
lock
jp
pop
pop
dec
mov
push
xor
push
in
ja
pop
adc
fsubrs
push
add
or
dec
cmc
stos
dec
dec
jb
adc
lret
push
pop
into
sar
jno
inc
test
test
jno
inc
push
cmc
and
scas
or
mov
icebp
pop
inc
jno
push
jae
fwait
or
mov
addl
lods
mov
sbb
mov
cmp
in
out
xlat
pop
cmp
dec
cltd
jb
jl
and
in
adc
sarb
stc
add
inc
jge
mov
fisubrs
dec
decl
mov
sbb
out
sub
push
sbb
in
adcl
xchg
sahf
lods
xor
ds
fcmovnb
mov
sbb
sbb
ss
iret
rcrl
and
shlb
cmc
push
push
sub
clc
movsb
cli
test
leave
mov
or
sahf
rcrl
mov
xchg
xor
mov
mov
inc
and
lock
call
jnp
mov
inc
and
test
adc
dec
outsb
iret
sbb
jmp
adc
lds
xchg
icebp
jns
pop
lds
add
pop
push
test
jns
in
cmp
imul
mov
push
mov
enter
xor
xor
pop
mov
xor
mov
or
imul
sub
dec
outsb
sub
add
sub
js
sahf
mov
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
dec
mov
lods
xor
adc
int
adc
cld
xor
int3
fmul
push
out
stos
jl
push
jo
mov
or
mov
imul
shlb
cld
mov
in
dec
sbb
test
push
test
movsb
dec
iret
ja
xor
dec
pop
pushf
lahf
mov
mov
lahf
push
push
mov
sub
mov
add
into
imul
adc
adc
push
or
notb
in
sti
mov
xlat
int
jb
iret
or
aad
mov
xchg
push
sbbl
xchg
mov
mov
in
jnp
mov
and
nop
sub
mov
or
or
xor
pushf
lock
push
pop
add
mov
mov
xchg
adc
push
hlt
ljmp
mov
pop
mull
andl
cltd
push
outsl
jge
add
ljmp
mov
mov
scas
mov
cmpsb
iret
sub
addr16
cmp
add
mov
xchg
cmpsl
sbb
or
fwait
aad
out
div
out
mov
sub
cmp
ret
jo
adc
jmp
loopne
sub
ja
adc
es
xchg
or
push
test
cmp
insb
iret
movsb
fiaddl
cltd
jnp
jl
xorb
incl
pop
arpl
fwait
cmp
or
dec
jne
mov
xor
or
mov
jbe
inc
add
inc
bound
push
jecxz,pt
add
int
jl
ret
gs
andl
jns
xchg
jecxz
scas
mov
xor
pop
mov
nop
int
mov
jg
inc
dec
lds
jae
cltd
movb
or
jae
roll
push
divl
cltd
repz
in
mov
and
xchg
popf
mov
jnp
jl
orb
fs
jecxz
out
xchg
out
sahf
das
push
js
dec
and
cmpsl
sub
mov
notl
and
bound
fnstsw
push
mov
mov
fnsave
xor
sub
imull
cmc
fwait
xchg
mov
sub
pop
shrl
out
xlat
xor
xor
repz
mov
jle
jnp
imul
pushf
lret
imul
cltd
add
nop
aad
xchg
jecxz
xor
sub
mov
push
push
xchg
adcb
mov
add
adc
and
and
or
aam
sub
int3
in
mov
filds
notl
xchg
inc
jmp
test
in
xchg
pushf
and
adc
movsb
xor
push
adc
mov
jae
or
xorb
cltd
sub
push
inc
jno
sti
lods
addl
cmp
xor
push
push
cmpsl
sbb
add
jp
adc
cmp
jae
dec
pop
jbe
repz
jne
sbb
cwtl
lret
aas
in
mov
inc
stos
mov
push
repz
pop
int
jge
push
idivl
mov
mov
arpl
add
mov
imul
xchg
arpl
std
test
fsub
jmp
daa
mov
shll
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
xchg
js
les
adc
adc
adc
and
ffreep
adc
jle
roll
sub
aaa
daa
daa
fs
adc
push
lods
testb
inc
xchg
and
fwait
sub
loopne
cltd
cltd
cwtl
sbb
pop
loopne
test
test
xlat
loop
mov
enter
push
jb
jp
fwait
pop
xchg
std
push
mov
mov
loope
idiv
notb
test
sarb
push
lcall
shrl
cmp
push
add
sbb
cltd
and
movsb
and
insl
dec
dec
add
cmpsb
addr16
cmc
jecxz
mov
sub
inc
fiaddl
mov
adc
out
cs
leave
mov
adc
pop
frstor
nop
jnp
hlt
sbb
adc
pop
push
xchg
mov
jmp
sbb
mov
jno
inc
std
std
jl
push
push
ret
push
fdivl
push
fs
sub
lahf
push
ljmp
call
out
hlt
loopne
jno
pushf
gs
dec
xor
push
out
imul
add
mov
testb
fdivrl
jp
and
mov
stc
xor
dec
mov
fnsave
xchg
popa
ret
add
mov
sbb
adc
mov
xor
aad
les
mov
push
push
cli
push
cmp
rcr
sarl
add
xchg
inc
gs
fiadds
fwait
lret
rcrb
mov
mov
fmuls
mov
xor
push
pushl
dec
filds
sub
roll
ss
stos
fsubrs
mov
or
xchg
out
popa
popa
insb
subl
leave
xchg
test
fbld
rorb
mov
sahf
and
xor
out
mov
data16
jo
stc
imul
mov
aaa
add
xchg
jb
loope
push
push
xchg
mov
stc
cli
test
xchg
mov
lods
ds
pop
adc
stos
popa
lods
or
adcl
icebp
popf
xchg
fldt
cmp
dec
out
sbb
clc
hlt
adc
and
addr16
iret
or
xor
or
das
cmp
dec
xor
sbb
mov
mov
aas
lods
lods
loop
xor
jno
hlt
dec
sti
in
mov
sub
pop
pusha
and
aad
jno
jecxz
xor
fcomps
subl
insl
mov
adc
js
fnop
xor
add
mov
xor
add
cmp
out
mov
aam
lcall
sbb
and
out
std
cltd
ds
or
pop
das
sbb
into
xchg
sub
fcoms
xchg
xchg
cmp
sti
mov
imul
mov
pop
and
xchg
pop
jl
jmp
mov
repz
cmc
lods
sub
push
dec
out
mov
xchg
mov
cmp
cmpsl
fmuls
fldt
js
aad
add
ljmp
push
xor
pushf
int3
mov
pop
inc
daa
js
dec
mov
repnz
or
mov
push
and
inc
inc
sar
lret
sbbl
jle
addl
stos
fdivs
mov
test
pop
xor
mov
lea
and
cmp
ret
push
insb
roll
iret
loopne
aas
push
insl
bound
jae
arpl
dec
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
cmpsb
movsl
sub
fwait
ret
int
adc
and
int3
out
lret
xchg
jecxz
inc
addr16
sbb
into
cltd
shll
cld
pop
test
leave
inc
out
jg
dec
mov
in
inc
mov
push
sbb
dec
fisubl
pop
divb
or
dec
sub
xchg
mov
mov
stos
pop
out
loope
and
sbb
pop
ficompl
cwtl
push
test
pop
lea
fcmovnbe
and
out
loope
xor
xlat
clc
jno
cmp
xor
mov
movsl
out
cmp
sbbb
dec
aad
int
add
mov
testl
daa
jb
mov
adc
or
sub
pushf
das
pushf
jo
sbb
sbb
mov
xor
or
stos
mov
test
push
pop
in
rcrb
cmpsl
push
aas
mov
cltd
inc
or
mov
orb
pusha
ficoms
enter
dec
imul
inc
add
scas
adc
icebp
jnp
pop
mov
add
inc
ljmp
or
ret
xchg
inc
pop
lods
fidivrl
dec
push
cmp
dec
ss
arpl
add
cmp
mov
pop
fcmovb
dec
arpl
mov
aam
test
cmp
and
sbb
add
imul
sbb
outsl
loopne
xchg
ret
push
mov
fmul
mov
mov
push
sahf
push
shlb
or
adc
mov
daa
es
lahf
div
pop
mov
push
xchg
pop
push
dec
into
jo
aas
add
cld
jnp
cmp
jle
push
dec
pop
sbb
or
loopne
push
lret
jno
xchg
mov
add
mov
mov
jmp
push
sbb
imul
je
in
scas
pop
push
mov
xor
insb
mov
xchg
out
call
arpl
mov
imul
mov
inc
push
fistpll
test
lods
bound
sahf
mov
dec
jl
pop
cltd
jne
sti
insb
xchg
sub
inc
pop
int
dec
fs
xchg
push
xchg
pop
cmpsl
ds
lahf
jecxz
inc
pop
push
imul
push
sbb
js
jae
sbb
repnz
xchg
stos
mov
jo
scas
adc
dec
jge
fs
int3
jno
fs
mov
outsb
mov
test
lea
dec
jno
mov
clc
or
mov
xchg
cmp
mov
xchg
repz
rcrb
and
xor
lcall
jge
add
popa
mov
push
inc
or
inc
int
stos
int
pop
mov
mov
mov
jg
in
mov
mov
sbbl
push
fistpl
insl
xchg
pop
sbb
adc
lods
sub
je
push
sub
insl
nop
rcrl
pop
mov
mov
push
mov
or
sub
test
into
xor
xorl
mov
in
addr16
push
jmp
dec
mov
adc
adcl
scas
mov
sub
icebp
and
and
cld
mov
cld
mov
insb
sub
push
test
sub
jge
jge
sysexit
cmp
mov
popa
push
xor
jae
int3
or
push
add
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
sbb
adc
adc
adc
xchg
push
dec
test
pop
int3
roll
jmp
jmp
popa
jae
into
pop
and
xchg
in
xchg
and
clc
mov
sbb
testl
cmp
mov
sbb
xchg
enter
mov
addb
out
scas
mov
jecxz
test
cmp
mov
push
adc
lock
add
ds
jecxz
repnz
cs
cmpsl
sub
mov
fs
sbb
ljmp
dec
lock
orl
push
ret
push
jp
jns
je
movsl
rcl
movsl
cmp
hlt
jnp
xchg
or
fdivrs
push
jne
leave
int3
insl
jo
or
xchg
or
out
xchg
sbb
pop
test
loop
mov
mov
stc
add
in
gs
add
inc
push
aas
dec
adc
outsl
dec
jo
mov
fwait
popa
mov
dec
fimuls
mov
sub
pop
cld
cli
sbbl
aad
scas
adc
ss
test
adc
add
sbb
mov
imul
cmp
mov
subl
out
call
add
inc
jg
add
xor
int3
rorb
ja
leave
stos
cmp
bound
mov
xchg
push
push
nop
insb
pop
mov
xor
shll
lcall
aaa
and
add
jmp
push
out
gs
cmpb
int
mov
aas
sub
out
into
stos
mov
lock
pop
lret
cmpsl
pop
aaa
and
push
cmpsl
leave
lcall
dec
je
movsl
push
fldl
cwtl
mov
stc
mov
xor
in
add
popf
xchg
lret
lea
jmp
lret
je
adcb
xor
mov
or
insl
out
fwait
xorb
inc
rolb
mov
cld
ljmp
shrl
push
sti
in
pop
cmc
mov
or
inc
push
les
ret
mulb
aaa
lock
gs
lock
hlt
sub
mov
dec
pop
popf
jns
jb
les
ja
pop
inc
xlat
pop
push
popf
fldenv
aaa
addr16
or
fcoml
loopne
jecxz
push
mov
sub
jb
movb
call
cmc
mov
ja,pn
gs
int3
mov
daa
imul
xchg
or
test
pop
scas
jge
je
dec
xchg
test
cmpsb
sbb
insb
push
int
outsl
cli
adc
aad
or
sbb
xchg
or
in
inc
ret
arpl
mov
popa
or
sbb
rcll
xor
mov
push
inc
jecxz
cmc
je
sbb
mov
xor
int3
imul
flds
cmp
pusha
rcrl
popf
aad
leave
or
sbb
pop
add
jp
cmp
cld
into
cmp
cwtl
inc
sub
adc
mov
xchg
lds
out
pop
mov
push
test
dec
jle
ljmp
mov
int
push
and
adc
ss
sub
mov
loopne
mov
xor
fdivl
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
insl
xchg
adc
adc
adc
adc
sub
xchg
xor
inc
repz
sub
xor
mov
dec
in
and
and
loopne
popa
pushf
adcl
mov
je
xor
sub
dec
cmp
dec
sbb
clc
movsb
roll
mov
jns
adc
push
imul
lret
int3
mov
rcll
sub
jge
and
mov
shl
jl
nop
cli
cmp
sti
cmp
mov
adc
and
sub
daa
dec
mov
add
mov
mov
lret
push
sub
aad
push
shrl
out
fmull
mov
and
pop
insl
fnsave
add
push
inc
fninit
pop
out
sub
je
dec
mov
lods
std
xchg
rcl
xchg
push
inc
jecxz
hlt
xchg
xchg
push
pop
sbb
outsl
mov
cwtl
cmpsb
incb
pop
push
add
push
mov
insl
popl
cmp
loopne
xor
out
fsubr
imul
jg
sub
inc
dec
push
test
iret
ds
addr16
int
sub
push
or
adcb
xor
movsb
pop
imul
insb
mov
and
sti
cmp
cs
insl
daa
fcmovu
nop
cltd
cmp
ds
cs
repz
ja
ja
push
shlb
cmp
mov
inc
mov
loope
mov
int3
push
and
shll
mov
and
icebp
cmp
add
ficoms
in
mov
cmp
mov
sbb
inc
mov
dec
add
in
jle
dec
pushf
lds
push
pop
icebp
cld
pop
stos
inc
pop
rcr
xor
fs
mov
cmp
int3
dec
mov
addr16
push
out
or
scas
mov
dec
leave
mov
mov
sub
pop
mov
and
sbbl
or
outsb
ja
shlb
mov
fistl
sbb
cld
jge
xchg
fisubrl
stos
cmpsb
fnstcw
or
popf
cwtl
out
imul
mov
mov
adc
cli
insl
test
ret
or
push
iret
mov
sbb
test
aas
xor
lret
xchg
repnz
jae
repnz
push
lock
jo
outsl
fmul
push
repz
mov
loopne
dec
xor
mulb
xorl
fnstenv
jecxz
mov
and
movsl
fcoms
pop
rolb
sbb
xchg
pop
push
ds
xchg
and
cmpsl
sub
cmpsl
cmc
mov
pop
jmp
nop
rolb
mov
inc
enter
lods
lret
gs
fwait
in
in
test
jno
in
ret
mov
in
cmc
mov
push
push
aaa
mov
cmpl
dec
leave
xorb
outsb
imul
push
jmp
int
aam
orb
xchg
push
stos
or
ljmp
cld
pushf
push
dec
loopne
addr16
mov
adc
jo
in
and
cli
loopne
dec
or
jg
cmp
sbb
mov
repz
movsb
inc
dec
sahf
adc
je
movsl
std
pushf
pop
push
pop
mov
lock
pop
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
sbb
js
test
adc
adc
adc
jnp
sbb
mov
jmp
imul
arpl
scas
daa
ljmp
je
nop
sti
fwait
adc
dec
in
outsb
je
mulb
xor
add
mov
icebp
mov
fadd
jp
xor
pushf
and
sub
push
jne
add
push
pop
xchg
lea
loopne
bound
dec
stc
pop
ret
lods
inc
xor
adc
xchg
inc
popa
xchg
inc
rcll
sub
pushl
xor
add
push
in
xchg
or
lahf
addr16
pop
aaa
adc
inc
idiv
push
insb
xchg
out
sarb
xcrypt-cbc
cmpsl
adc
ss
fists
ror
and
pop
insl
cmp
movl
or
push
negl
addr16
shrl
fistl
adc
cld
fcoms
andl
add
rorl
in
xchg
ljmp
cli
fstps
jbe
imul
xchg
sub
addr16
push
jecxz
dec
pop
fsubs
sub
mov
daa
cmp
sbb
cli
adc
mov
and
loop
ja
test
add
shll
push
push
insb
add
lods
pushf
cmp
pop
movsl
pop
jmp
sbb
add
push
mov
insl
sub
mov
mov
cmp
jbe
mov
mov
cmp
inc
scas
mov
fcompl
mov
loop
cld
jbe
jl
mov
js
pusha
clc
cli
lods
fisttps
ficomps
rorl
fnsave
cmp
push
rol
nop
mov
bound
jp
push
test
inc
push
xchg
loop,pt
xchg
rcr
mov
clc
pop
out
and
xchg
pop
pop
in
inc
or
pusha
incl
arpl
mov
cwtl
ficomps
aad
mov
mov
or
test
outsb
aam
dec
push
insb
test
xor
add
int
out
and
cld
fiadds
add
xor
dec
lea
pusha
arpl
pop
fyl2x
cmc
jecxz
fldenv
sub
mov
outsl
and
push
js
and
imul
lds
sarl
cmp
and
sti
pop
pop
and
inc
lcall
rorb
jmp
mov
into
add
idiv
add
outsl
pop
or
repz
stos
popa
sub
clc
jl
lea
mov
xchg
push
dec
dec
cmp
call
adc
pop
pop
xchg
cltd
sbb
cmpsl
test
sub
mov
pop
inc
call
sbb
movsl
test
fisubrl
jle
push
and
sub
xor
cmp
push
inc
mov
decl
push
js
mov
dec
mov
or
push
xchg
pop
pop
inc
adc
push
enter
es
add
fnstsw
lea
in
xchg
inc
and
push
out
out
jnp
sti
dec
and
addr16
sbb
js
jae
lcall
mov
data16
sar
mov
add
sbb
lods
mov
rclb
sbb
mov
xor
adc
fisubs
and
cmp
adc
out
icebp
mov
orl
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
jmp
js
mov
adc
sarl
fs
xlat
add
mov
push
fdivl
mov
mov
int3
or
push
mov
testl
mov
loopne
inc
xchg
test
sbb
test
fcomi
sbb
lahf
daa
lea
xor
mov
cmc
push
jae
push
pusha
mov
cmovge
mov
notl
test
out
mov
lret
adc
xchg
sub
cmc
nop
iret
sub
test
faddl
cmp
pop
push
sub
sub
lods
push
es
out
orl
xchg
dec
or
or
mov
andb
jns
pop
js
arpl
insl
xor
or
push
inc
add
jbe
pop
repnz
mov
cltd
inc
inc
cmp
adc
or
sub
in
or
ljmp
popf
in
mov
sub
out
das
xchg
or
xchg
and
adc
ficomps
mov
jl
xor
rclb
mov
xlat
adc
in
icebp
int3
pushf
mov
jg
cmp
int
pusha
test
cmp
xlat
aas
out
out
xchg
cmp
add
push
sbb
mov
push
scas
notb
imull
xchg
in
pop
pop
dec
test
cli
int
clc
xor
std
add
test
mov
subl
add
test
scas
pushf
insb
repz
jb
pop
cmp
enter
mov
in
jmp
mov
pushf
add
shrl
xchg
xchg
xchg
xor
jns
pop
xchg
stos
mov
xor
cld
add
loopne
jno
jno
call
and
mov
dec
xor
pop
mov
into
push
xlat
lea
cmp
mov
dec
xorl
rcrl
jle
mov
mov
push
cmc
andb
pop
das
and
lea
sbb
dec
xlat
sub
sbb
cltd
sbb
push
xchg
in
int3
outsl
daa
xchg
fwait
or
sbb
xchg
lret
pusha
pop
mov
push
adc
je
in
or
rol
inc
push
repnz
dec
iret
icebp
xor
push
mov
jle
pop
jp
js
dec
pop
cwtl
dec
in
mov
or
imul
arpl
enter
adc
mov
xchg
hlt
push
or
and
roll
fwait
dec
das
sarb
pop
xor
adc
cmpsl
cwtl
jge
leave
cmpsl
adc
mov
sub
cmp
pop
or
sub
rolb
pop
mov
ror
xor
inc
push
push
dec
in
jne
cwtl
add
fistl
das
sbb
pop
test
mov
in
lds
lahf
add
inc
clc
repnz
hlt
and
out
push
dec
cwtl
mov
popf
mov
aas
and
cs
xorb
mov
lock
jae
ret
mov
jne
and
lock
imulb
andl
mov
les
and
inc
mov
adc
sti
repz
cmpsb
push
mov
sbb
pop
ss
push
add
shrl
jle
nop
adc
cmp
jo
jnp
out
jmp
xchg
adc
push
insb
mov
repnz
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
xchg
lret
sahf
adc
int
adc
addr16
inc
xor
mov
pushf
inc
xlat
in
pop
cltd
cmp
xchg
rorb
or
mov
dec
leave
cmp
pop
sbb
push
mov
cmp
lea
hlt
and
aad
fldt
cmp
mov
out
cmpsl
and
xor
or
inc
clc
sub
fidivl
ljmp
flds
and
dec
mov
test
jl
in
ret
test
out
or
dec
cmp
push
jmp
out
lods
outsl
cltd
hlt
xor
or
data16
loopne
mov
mov
aaa
add
jl
in
push
icebp
loopne
call
fmulp
ljmp
lock
clc
cwtl
mov
addr16
cld
divl
es
and
rorb
leave
mov
jo
sbb
pcmpeqb
and
add
inc
xchg
mov
jge
loopne
adc
fucomp
scas
ljmp
pop
or
jnp
lods
out
pop
cmp
loop
mov
cmp
mov
mov
sub
jge
jno
lods
in
xlat
outsl
insb
mov
aaa
or
and
push
jg
dec
ss
cmp
mov
frstor
rcl
mov
insb
dec
xor
outsl
je
sub
add
xor
pusha
xchg
jnp
mov
cmp
pushf
jecxz
out
or
cli
or
push
xchg
fdivl
test
lcall
fs
add
cmc
aas
rcrb
ret
or
dec
insb
std
dec
pop
movsb
mov
stos
mov
sub
adcl
fwait
aad
dec
sarl
clc
mov
lahf
iret
movsl
daa
mov
lods
test
gs
icebp
dec
iret
jno
sbb
neg
fldt
inc
fisubrl
out
cmp
pop
lret
cmova
and
mov
or
outsb
mov
aam
mov
or
call
rolb
and
or
cs
dec
push
fisttpll
jbe
dec
in
cs
out
add
sub
mov
cwtl
rcr
jl
filds
sbb
xchg
push
jbe
pop
test
hlt
inc
dec
pop
insl
in
pop
loopne
in
leave
out
inc
les
ljmp
sti
mov
movsl
add
mov
push
cmc
mov
dec
inc
pop
scas
cmpsb
xchg
in
shll
jge
in
adc
fistl
add
xchg
cmpsb
xchg
pmulhw
mov
cwtl
andl
shlb
sbb
inc
out
xchg
sub
repz
icebp
push
push
pop
shll
cmp
adc
psubq
add
dec
ss
repz
mov
mov
lret
lret
add
sbb
dec
sbb
adc
leave
les
add
repnz
lock
and
sbb
mov
mov
sub
std
pushf
cmp
sbb
dec
and
push
push
xor
and
setl
lods
push
fchs
call
ret
pop
and
jmp
inc
jmp
dec
dec
dec
pop
pop
scas
adc
mov
push
outsl
pop
push
jns
mov
gs
fsubrl
pop
pop
push
jns
add
jecxz
mov
or
adc
jae
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
imul
fdivrl
rorb
mov
rol
jmp
mov
popa
fidivrl
push
and
loopne
fidivrl
dec
pop
icebp
sti
jo
test
insl
in
rcr
iret
imul
in
or
xlat
pop
and
mov
imul
lahf
enter
fidivrl
xchg
das
sub
dec
inc
mov
cld
pop
ret
cmc
lods
and
lds
in
and
push
idivb
mov
lods
out
inc
stos
icebp
test
pop
es
adc
sub
adc
imul
ret
out
push
mov
mov
adc
test
xlat
shlb
jno
cmp
mov
or
les
jmp
ds
mov
imul
mov
lret
gs
pop
ds
sbb
ljmp
xchg
movsl
or
loop
push
movsl
gs
xorb
push
jg
enter
push
push
xchg
dec
sbb
test
or
int
jg
add
aad
dec
xor
jge
sub
mov
lock
js
dec
add
push
stos
add
xor
pop
fistl
movsb
pop
xor
add
push
int3
dec
loope
flds
or
xchg
cmpsl
inc
pop
out
inc
xor
mov
sub
jl
inc
into
cld
jl
ret
jmp
xor
sub
outsl
mov
icebp
sarb
mov
push
ret
lret
or
pop
or
push
cmpsb
rcll
push
fwait
jne
test
push
dec
in
aam
jo
pop
sub
shlb
sbb
dec
outsb
mov
psubb
push
outsl
outsl
dec
leave
cli
mov
into
or
xchg
cld
imul
and
sti
scas
decl
cmp
or
fsubrl
inc
subl
mov
cmp
mov
fsubl
add
mov
jno
mov
mov
push
movsb
mov
jnp
cmc
sbb
dec
push
adc
shrb
sub
pop
shlb
decb
roll
stos
dec
pop
mov
mov
inc
jnp
lret
and
or
xchg
cmp
pop
cmp
lea
popf
cmp
push
fcomi
dec
push
sub
inc
imul
orl
jecxz
xchg
dec
adc
mov
mov
dec
jg
mov
add
mov
rcll
ljmp
jl
addr16
std
movsl
inc
dec
add
mov
out
dec
leave
xor
jns
mov
aad
hlt
xchg
sbb
popa
iret
scas
xor
adc
loope
fidivl
bound
mov
movsb
outsl
xor
insb
mov
cli
cltd
cwtl
test
rorb
dec
dec
lret
or
mov
push
xlat
leave
cmpsl
inc
in
mov
xor
mov
pop
inc
dec
add
popa
fists
sub
testb
sbb
xchg
sub
and
xorb
xchg
pop
insb
mov
test
cmp
daa
cltd
fsubr
dec
js
sbb
mov
ja
je
mov
roll
sti
or
aaa
or
fstps
lods
add
outsl
mov
cmp
sti
mov
cmp
lods
xor
jg
ds
mov
xchg
push
pop
push
sub
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
jo
lcall
adc
popf
fwait
loopne
sbb
adc
mov
mov
leave
fidivrs
or
or
shlb
cld
lret
std
repnz
dec
pop
lret
xchg
pop
aas
or
cwtl
sbb
xor
mov
push
and
sub
pop
pushf
sahf
mov
mov
lock
popf
mul
punpcklbw
cmp
pop
mov
std
imul
outsl
adc
or
aam
cs
mov
jo
and
xor
loop
pop
xchg
das
aaa
test
aaa
in
call
ret
inc
jnp
test
aad
outsl
out
sub
mov
adc
mov
inc
xor
sbb
mov
and
dec
jae
je
stc
inc
mov
mov
shrl
xchg
ret
nop
fcmovnu
popf
lahf
jbe
je
xlat
cmp
pop
push
fildll
shll
enter
xchg
xor
inc
out
mov
lret
stos
jle
and
sbb
add
addl
jmp
movsb
out
test
push
pop
ret
push
popf
enter
dec
or
movsb
lret
lret
mov
push
jno
mov
adc
xchg
cmpsb
push
pop
mov
jge
loopne
out
aad
xchg
popa
mov
jae,pn
and
cmp
adc
mov
arpl
aam
mov
lret
or
or
into
lcall
mov
mov
lret
jno
gs
enter
mov
ret
out
push
orl
cmpsl
jbe
in
jecxz
xor
call
xchg
cmp
sbb
xorl
sbb
leave
pop
xlat
addb
adc
ds
push
loopne
fcoms
adc
cli
out
cmp
sbb
inc
push
lret
cmc
jg
and
imul
sbb
cltd
mov
dec
aas
int
and
add
pop
xchg
pop
sbb
mov
jns
xchg
push
xadd
xlat
jno
hlt
scas
btc
xor
rorl
jle
sub
cmp
js
pop
sub
xor
jp
sbb
lcall
aas
aaa
adc
jno
inc
mov
pop
pop
les
and
scas
push
xchg
pop
mov
nop
rcll
xor
inc
xor
je
sub
xorl
sub
int
xor
es
fiadds
mov
test
jns
mov
push
add
lock
or
mov
xor
popf
dec
add
push
aad
push
sbb
dec
out
and
popa
mov
enter
push
pop
loop
cmp
pop
je
jmp
xchg
seto
xchg
and
pop
inc
lahf
testl
pop
push
je
adc
lahf
fsub
roll
addr16
adc
lock
add
loopne
inc
stos
je
sub
daa
in
je
adc
or
or
jns
and
xchg
fildll
cmpsb
inc
dec
jg
mov
pushf
fistl
icebp
es
pop
cmp
sub
lds
xchg
iret
loopne
dec
mov
sbb
or
push
fstpt
xchg
pop
popa
mov
dec
ss
enter
add
sahf
imul
pop
xchg
sbb
ljmp
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
insb
mov
push
test
adc
adc
adc
in
inc
pmaxsw
pop
inc
sub
push
in
adc
inc
mov
jp
xchg
call
cld
cwtl
cmc
pop
ds
ja
popf
cmp
js
out
test
mov
jecxz
lods
jb
jne
fisubrl
add
fwait
dec
aam
fdivs
idivb
insb
pop
sub
sbb
push
and
add
push
cli
negb
roll
leave
scas
add
pop
or
push
sbb
rcll
sbb
pop
icebp
cmpb
call
call
xor
push
add
lret
outsb
xlat
push
aad
mov
mov
lea
out
test
dec
mov
cmp
add
sbb
data16
leave
lds
loope
xchg
push
mov
fistpll
cmp
or
je
pop
sub
push
dec
dec
movzwl
mov
lods
imul
movsl
or
xchg
push
fiaddl
lods
stos
mov
cmpsl
loope
fwait
shlb
pop
cmp
shll
mov
xchg
jns
data16
daa
aaa
aaa
push
imul
aaa
repnz
inc
imul
push
mov
dec
adc
dec
int
inc
cmp
sbb
mov
cltd
lods
pop
push
test
push
dec
mov
cmp
fistpll
xchg
pop
test
popf
jmp
xchg
ficoml
sub
xor
mov
or
fidivrl
mov
or
into
cwtl
lcall
xchg
adcb
jecxz
cmp
xor
push
jecxz
out
mov
ret
test
popf
jle
scas
add
out
sti
or
add
mov
push
xchg
ss
aam
fwait
jne
repz
xchg
test
add
xchg
clc
and
pusha
pop
pop
inc
test
inc
ret
shlb
xchg
cltd
pushl
pop
xchg
sbb
repnz
or
outsl
shl
test
xor
imul
or
psrad
cmpsb
jo
and
or
xchg
rcrl
orb
cld
loop
jmp
add
mov
sub
and
shlb
xchg
aam
fs
push
inc
rsqrtps
jbe
jne
adc
push
xchg
loop
jge
add
xchg
push
dec
add
cmp
pop
add
imul
mov
out
dec
dec
mov
sbb
mov
movsl
dec
or
jl
loop
repnz
pop
inc
inc
and
xchg
jnp
lods
int
jmp
in
hlt
mov
cmpb
push
sbb
adc
cld
xchg
pop
outsb
cltd
rcrb
or
mov
fs
jae
jns,pn
sbb
mov
and
out
xor
inc
push
stc
into
mov
in
lret
inc
push
daa
dec
out
mov
lods
mov
fsts
cmp
hlt
xchg
add
popa
adc
jns,pt
into
test
xchg
add
sub
sbb
and
and
lods
imul
and
aad
mov
xchg
pop
icebp
orl
sub
xor
lret
nop
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
lods
inc
loopne
push
jl
adc
adc
adc
mov
xchg
ss
loope
rorb
mov
pop
jbe
lret
pop
sbbl
cmp
jb
push
je
je
add
sbb
inc
xor
insb
jo
cltd
dec
jmp
lods
popf
fcompl
adc
hlt
aam
pop
fnstsw
fistl
fists
mov
mov
adc
add
bound
jge
lret
pushf
jg
add
stos
nop
cmp
rclb
ror
mov
adc
mov
mov
outsb
sub
rorb
and
or
pop
inc
cwtl
js
or
jecxz
pop
jecxz
push
add
dec
jle
xchg
lret
jmp
pop
adc
mov
and
jb
mov
test
sbb
dec
mov
add
jl
lods
push
cmp
cmp
jge
fstl
push
xor
out
ss
icebp
mov
xor
sahf
push
in
movsb
xor
sbb
adc
sbb
inc
stos
dec
mov
aam
inc
lock
je
arpl
fucom
push
pop
mov
adc
cwtl
daa
sbb
lcall
inc
and
xlat
stc
scas
or
js
int
mov
sbb
ret
xor
fwait
aas
lds
into
fwait
scas
sub
outsl
inc
cmc
mov
xor
stos
popa
pop
push
imul
or
aad
or
fstps
stos
je
pop
jmp
and
sahf
maskmovq
testl
cli
int
ja
std
sbb
stos
aas
pop
mov
xor
fs
repz
mov
push
testl
fiaddl
scas
movsl
es
sbb
jbe
mov
div
insb
aam
sub
stos
mov
out
adc
aaa
out
fcmovbe
js
xor
dec
ss
lea
mov
inc
fisttpll
movsb
rcrl
push
cmpl
xchg
scas
lods
fwait
cltd
int
or
add
jge
clc
jecxz
cmp
inc
mov
loop
dec
inc
xchg
xchg
pop
push
inc
mov
mov
sbb
inc
cmpsl
addr16
and
xchg
mov
mov
add
mov
sbb
lret
in
stc
dec
dec
mov
inc
fwait
jno
mov
sbb
mov
in
fbstp
fsubrs
cs
push
adc
add
mov
fldcw
dec
test
or
push
aam
sbb
je
add
stc
sub
sbb
in
xor
popa
out
dec
aas
mov
mov
pop
sbb
sub
repz
sub
es
test
xor
push
fstpt
cmpb
mov
push
mov
ds
sbb
sbb
pop
adc
mov
or
mov
jne
lock
xor
push
jecxz
fidivrs
insl
dec
scas
stos
jne
aaa
repnz
loopne
ret
or
fldl
mov
pop
or
or
mov
mov
ljmp
mov
jmp
insl
inc
pop
add
adc
loope
popa
xor
fbstp
cmpb
or
xchg
stos
mov
jns
test
mov
lds
andb
hlt
xchg
lds
cmp
mov
shll
pop
andb
sbb
ja
je
movsb
rcll
sub
sbb
and
dec
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
push
inc
cmpb
adc
adc
popa
loopne
xchg
fisttpll
ljmp
adc
sub
xchg
nop
and
push
cmpsb
xchg
fdivl
popa
repnz
sbb
cmc
adc
or
sahf
mov
in
adc
sbb
loopne
repnz
xchg
push
test
std
repz
mov
rcrb
sub
jecxz
daa
roll
jl
xchg
dec
lods
fstpt
sahf
cmp
xlat
inc
ss
sahf
fcoms
cmp
and
jno
mov
pop
filds
pusha
in
xchg
sbb
mov
lret
xchg
xchg
mulb
popa
mov
fsubl
fadds
sub
aaa
cmp
js
jg
mov
adc
sub
dec
in
in
in
mov
es
mov
xchg
cld
repz
mov
xor
lods
movb
lcall
in
js
pop
adc
mov
dec
outsl
stos
scas
and
int
out
push
ds
adc
test
xchg
inc
push
sub
xchg
addr16
mov
sub
mov
mov
rcrl
ds
pushf
ljmp
clc
repz
loop
jg
mov
adc
add
mov
arpl
mov
andb
mov
lcall
xchg
push
mov
sbb
frstor
mov
loopne
out
daa
sbb
shll
iret
push
lea
mov
aaa
jl
dec
std
js
aad
lds
or
cltd
jge
adc
mov
test
jns
les
xchg
cmpl
gs
add
inc
lcall
inc
adc
or
insb
test
adc
mov
xchg
mov
adc
addb
roll
inc
xor
pushf
cs
dec
add
mov
jg
mov
movsl
lcall
leave
dec
bnd
es
lcall
and
pop
mov
aad
shrb
mov
cs
flds
or
pop
hlt
or
cmp
mov
in
outsb
inc
lret
jo
aas
orb
mov
xor
ret
scas
ljmp
fidivl
les
or
or
cmp
pop
cmpsb
aas
mov
dec
loop
xor
sbb
dec
dec
mov
adc
add
arpl
xor
adc
paddw
mov
adc
cmp
jnp
sbb
ds
dec
mov
sahf
aas
pop
mov
decl
jecxz
daa
cmp
lret
test
sub
mov
js
pop
call
shrl
dec
pop
add
sub
mov
in
sub
sub
adc
or
xchg
fistl
inc
stc
pop
cld
addb
aaa
test
loop
fucomi
jg
addb
xor
cmovl
mov
push
les
dec
or
xor
js
sbb
jmp
inc
out
pop
dec
stc
mov
call
test
jmp
inc
lcall
push
pop
ret
dec
jge
out
mov
cmpsl
push
pop
push
or
gs
add
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
xorl
jno
adc
int
adc
xchg
insl
inc
xor
shrb
insb
daa
jo
jne
xor
imul
jb
pushf
aas
iret
jne
ss
rcrb
lock
jnp
loopne
bound
std
imul
bound
lret
inc
push
or
mov
or
in
pop
jecxz
cmp
jge
and
mov
push
fists
in
mov
push
jp
pop
dec
jbe
push
andb
mull
add
xchg
adc
mov
lock
hlt
addr16
cli
dec
pop
sbb
sbb
mov
fstpl
std
dec
adc
mov
xchg
sbb
pop
mov
xor
or
aas
jnp
les
ss
fstl
subl
xchg
add
add
pop
dec
rcll
fs
cmp
stc
add
jp
shl
push
daa
sbb
fidivs
inc
or
popf
inc
popa
xor
jno
xlat
and
dec
sub
push
into
test
add
jbe
dec
mov
into
push
or
cmovns
dec
int
mov
pop
mov
jne
push
sub
rcl
dec
push
push
aas
shr
frstor
mov
xchg
fstpl
pop
repnz
lea
fistps
cmpl
cs
pop
mov
movsl
adc
cld
int3
sbb
insb
mov
cmpsl
scas
pop
push
mov
arpl
sub
mov
outsl
inc
push
or
jae
jl,pn
addb
adc
mov
cwtl
adc
jne
mov
rcll
adc
jnp
imul
push
xchg
inc
cmp
mov
stc
ds
pushw
sub
pop
daa
adc
and
xchg
rcrb
sahf
gs
push
mov
adc
mov
lea
pop
push
xor
sti
aaa
adc
leavew
out
jmp
mov
test
dec
sub
xchg
mov
sbb
xor
adc
lret
inc
aas
loopne
shld
data16
in
call
jmp
scas
out
in
aas
inc
add
mov
loope
inc
add
loop
ret
adc
leave
and
jbe
pop
fwait
cmp
push
xchg
repz
mov
xor
ja
fwait
add
push
out
test
je
enter
ds
add
loope
shlb
call
mov
lret
push
jl
sbbl
sub
and
int
ljmp
pop
ret
mov
popa
es
fs
rcrb
daa
add
cmp
lcall
insl
xchg
loope
loopne
popf
inc
daa
popf
imul
lock
lods
sbbl
push
bound
clc
lret
mov
insl
jno
sbb
mov
fs
inc
pop
push
iret
jbe
fs
sahf
fsts
add
push
push
mov
and
fcmovnb
mov
imul
pushf
push
cmp
inc
lods
and
fdivs
lret
cmp
sbb
fisubs
mov
outsb
andb
adc
push
out
inc
arpl
aam
daa
out
punpckldq
subb
push
xor
xchg
add
stos
pop
xchg
cltd
clc
call
cmp
and
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
cs
stos
and
adc
int
adc
mov
call
push
pop
cld
inc
sti
mov
dec
je
ret
pop
nop
add
and
xor
mov
in
orb
test
fdivrl
cmc
fnstcw
mov
mov
mov
mov
push
lcall
push
cmp
call
lret
lcall
push
sbb
scas
jmp
or
xchg
adc
jns
call
mov
xlat
mov
and
test
aaa
dec
push
mov
lret
jbe
cmp
mov
rcrl
enter
push
sahf
cmp
mov
dec
cmp
icebp
icebp
test
cmp
cmp
sbb
xchg
arpl
add
or
sbb
xor
inc
push
push
cld
ljmp
dec
test
cmpl
shr
add
mov
dec
xor
cmpsl
sbb
imul
jnp
add
add
cmp
push
xchg
xlat
cld
jp
js,pn
dec
rcrl
xor
and
adc
mov
cmp
dec
mov
mov
jle
inc
out
ret
lret
xlat
inc
cmpsl
jnp
arpl
mov
mov
stc
icebp
pop
inc
cmp
mov
add
aad
mov
cmp
and
mov
sub
addr16
push
pop
test
das
lea
jnp
fsts
adc
outsl
daa
js
lock
fnstcw
pusha
xchg
dec
lock
inc
jne
pusha
adc
scas
or
aas
data16
inc
jne
es
imul
into
stc
outsl
stos
loope
push
in
add
jg
cmp
cmpsl
adc
sub
out
fs
xor
in
push
rcr
lcall
sub
xor
les
mov
negb
rcl
in
gs
jp
mov
popa
mov
xor
or
push
pusha
out
or
jne
subb
iret
subl
lods
ficomps
fcoms
enter
cmp
btc
mov
shll
lcall
pop
fwait
das
xor
mov
dec
cmp
fisubs
je
call
push
cmp
dec
xor
mov
jbe
adc
sti
push
xchg
pop
pop
cli
pop
cmc
dec
cmp
aas
inc
popf
fldt
arpl
mov
orb
les
fdivp
mov
movsl
mov
out
fwait
int3
cmc
jbe
pusha
adc
cmp
dec
sub
inc
jae
xor
or
jecxz
push
outsb
xor
dec
inc
lods
cmp
adc
cltd
mov
push
push
inc
fcomps
mov
test
aad
faddl
dec
mov
vlddqu
cmp
dec
mov
enter
add
repz
adc
roll
fwait
inc
adc
push
cmp
jnp
ret
mov
and
repz
and
mov
add
imul
mov
loop
mov
ja
mov
jg
sbb
jne
pop
xchg
mov
lock
test
cli
fstps
les
data16
xor
leave
mov
fdivl
xorl
inc
scas
mov
int3
adc
pop
cmp
mov
mov
push
fdivs
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
fs
push
bound
adc
adc
sbb
jmp
mov
or
mov
ds
insb
movsb
sar
les
adc
fwait
aad
cltd
sbb
dec
adc
mov
sbb
inc
fcmovnu
sti
seta
cmp
mov
loopne
pop
jmp
adc
mov
xlat
jp
xor
mov
loope
sub
push
or
not
cbtw
push
popf
pop
adc
push
rcrl
jecxz
testl
jecxz
rorl
add
ret
outsl
add
lahf
adc
inc
sub
divb
or
pop
aas
stc
in
or
mov
je
test
mov
sbbb
fnsave
movsb
sub
adc
pop
ds
adc
dec
mov
nop
xor
add
push
dec
data16
push
pusha
es
loop
vmovaps
dec
mov
xchg
xor
add
add
fsub
scas
mov
ret
lahf
out
inc
xor
sarb
sub
in
sub
xor
push
jo
in
push
sbb
stos
xchg
das
dec
loope
mov
or
sbb
popfw
ret
out
add
ret
lahf
mov
jecxz
xor
popa
aam
mov
fldcw
xor
mov
cltd
mov
sar
ret
sbb
icebp
and
cltd
xlat
iret
out
pop
imul
xchg
dec
sti
jecxz
imul
or
jmp
cli
ds
or
fwait
ret
divb
lods
mov
sub
nop
pop
pop
inc
enter
xor
mov
and
xchg
popa
fisubs
cwtl
mov
push
adc
insb
push
mov
fiadds
push
sub
jl
sub
cwtl
jmp
popf
push
push
pop
jns
cs
cwtl
orb
rcrl
push
stc
cmp
loope
or
jns
stos
movsb
divb
and
mov
sub
push
mov
lcall
inc
sub
adc
out
lock
popa
jnp
jge
jo
jecxz
ja
inc
xor
repnz
and
fildl
addr16
xor
xorb
lds
xor
popf
cmpb
pop
insb
nop
fnstsw
fs
out
sbbl
insl
push
mov
repz
mov
mov
cmp
add
addr16
addr16
mov
int
bound
adc
ja
mov
fnsave
push
xchg
dec
push
mov
int3
jae
movsl
mov
pop
sbb
std
jno
sbb
xor
add
dec
test
sti
cmpsl
lea
and
xor
fcoml
stc
pop
inc
add
cltd
xor
cmpsl
pop
shll
test
sbb
sub
push
mov
mov
ja
jno
push
pop
inc
jo
lds
scas
and
sbb
lahf
and
pop
adc
and
addr16
adc
adc
jmp
divl
sahf
stos
or
adc
cmp
sub
hlt
into
jns
movb
pusha
rorl
cmc
xchg
sub
fcoms
mov
or
fiaddl
js
ficoms
enter
mov
or
pop
aad
pop
cpuid
inc
xor
xchg
test
inc
xlat
lahf
inc
dec
imul
std
cmp
loopne
mov
outsb
adc
add
mov
xor
xor
pop
add
data16
inc
push
jg
lahf
ud0
mov
jg
xor
sub
cmp
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
imul
adc
adc
adc
adc
fidivs
push
andl
xchg
enter
sub
nop
out
mov
dec
mov
stos
dec
sti
lea
jecxz
mov
shl
in
add
jl
mov
nop
es
mov
stos
shlb
ffree
ret
mov
xor
les
daa
xchg
jno
daa
cmp
push
fistps
inc
scas
adcl
pop
jns
fsts
mov
add
mov
mov
pop
outsl
jnp
add
sbb
jne
fistpll
push
rolb
push
inc
add
pop
ljmp
mov
movsl
and
adc
ljmp
xor
or
cmp
mov
outsl
pop
scas
ja
dec
cmp
lds
cmp
lret
ficompl
fistps
push
cmp
mov
push
imul
mov
push
fcoms
int
icebp
pushw
mov
push
add
mov
inc
mov
incl
mov
jmp
mov
cmp
cmpsl
repnz
inc
dec
push
add
jbe
sbb
in
gs
dec
fs
inc
and
xor
add
push
arpl
ret
call
stc
sbbl
push
pop
dec
and
pop
fwait
js
or
lcall
je
add
xor
cs
xor
jle
xor
pop
or
sti
les
shl
fdivrp
int
push
mov
mov
and
jmp
fidivl
repz
insl
mov
or
test
dec
adc
xchg
mull
xor
push
xchg
cmpsb
inc
ret
push
adc
ret
sbb
jnp
cli
and
bound
jb
lea
test
sahf
and
and
inc
pushf
mov
imul
jecxz
push
sbb
mov
mov
and
xor
sysenter
dec
push
jnp
push
out
xor
lea
insb
scas
sbb
add
aas
mov
mov
repz
stos
sarl
mov
xlat
or
mov
prefetcht2
mov
cmpb
and
pop
inc
enter
insb
cmp
mov
xchg
fstpl
xor
mov
lret
out
cmp
adc
push
add
or
movsb
mov
jno
mov
movsb
cmp
push
imul
and
and
cmpl
lret
les
popl
inc
dec
in
dec
scas
cmpsl
ret
xchg
push
mov
xor
xor
in
and
mov
test
or
xchg
pop
fcoml
aas
push
pop
pop
dec
sub
in
mov
pop
mov
in
adc
decb
fdivrl
das
aaa
xchg
cld
fabs
out
in
scas
sti
push
sbb
out
or
push
aad
dec
pop
cmc
fwait
aas
adc
iret
in
rorb
xor
or
arpl
push
inc
flds
nop
xchg
jno
push
mov
shll
popa
bound
mov
mov
cmpb
sbb
shlb
sti
push
and
and
aas
jnp
adc
in
shl
rclb
xlat
sub
push
movsb
jg
adc
testb
popf
mov
dec
cmc
adc
push
test
push
lds
sbb
mov
mov
xchg
testb
or
scas
iret
bound
ss
dec
mov
aam
mov
inc
cmpsl
jl
divl
repz
movl
xchg
cwtl
pusha
inc
pop
push
out
inc
pop
insb
push
scas
mov
stc
nop
jg
xlat
jae
push
xor
mov
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
clc
mov
xor
adc
adc
adc
lret
movsb
loop
inc
cmp
aaa
cmovb
push
or
jle
xchg
xor
stos
cwtl
push
adc
shrb
stc
and
cld
or
push
lahf
cld
daa
imulb
inc
aaa
and
ljmp
nop
jmp
jne
and
inc
jg
jg
dec
and
ret
out
inc
and
rol
rolb
ljmp
jne
imul
repz
sbb
mov
pop
aas
xchg
test
cmpsb
add
cltd
jg
push
cs
stos
cli
and
push
test
ds
lock
push
jmp
rorl
cmp
jl
icebp
dec
mov
xchg
sbb
outsl
inc
inc
adc
pop
leave
sub
sbb
fsubrp
ja
lret
jno
mov
lcall
jne
mov
add
push
or
or
repz
sbb
les
mov
add
in
mov
add
scas
sub
adc
jne
dec
shll
fimull
repz
in
lahf
lock
loop
es
clc
inc
sbb
int
push
xchg
or
inc
cmp
mul
pop
mov
inc
jno
lds
sub
push
push
and
loopne
movsl
test
les
gs
pop
lods
sub
jl
lret
xchg
loopne
cli
xor
adc
insb
jo
or
cmp
aas
and
cmc
cmp
add
cmpsb
fisubrs
jo
xor
push
ljmp
andb
add
ja
xchg
cmpl
inc
inc
adc
mov
insb
mov
adcl
shl
jne
mov
xchg
sbb
mov
sarl
inc
icebp
sub
push
es
leave
jp
clc
bound
dec
outsb
jl
lahf
sub
pop
jb
push
iret
js
push
popa
mov
push
scas
dec
jle
inc
jae
xor
into
jle
adc
sahf
loopne
inc
shl
adcl
pop
je
sti
jge
movsl
loop
shlb
dec
add
push
lcall
rcrb
sub
mov
jnp
movsl
addb
stos
cmp
nop
orl
rclb
fsubrp
dec
dec
pop
sbb
mov
dec
inc
je
or
int3
xchg
fmull
js
push
xchg
lret
fists
cmp
jne
mov
push
dec
add
shrl
in
xorl
jns
in
repz
push
std
sahf
loope
cmpsb
rcrb
cmp
aam
cli
loopne
mov
push
push
cmp
jle
fwait
aam
scas
repz
std
stos
aaa
xchg
pop
mov
cmpsl
adc
cli
pop
icebp
stc
das
or
adc
dec
xchg
cmpsb
in
jmp
divb
shlb
cmc
stos
dec
pusha
xchg
cmp
jg
inc
inc
mov
stc
loope
mov
jns
mov
int
mov
add
jbe
cmp
faddp
ja
jns
push
adc
or
and
cmp
lea
pop
jle
xchg
mov
into
jecxz
cmp
cwtl
arpl
rcl
out
ret
imul
cli
xchg
xlat
imul
xor
cli
cmp
data16
std
add
sub
push
insb
in
out
enter
in
outsl
sahf
enterw
dec
dec
mov
xor
push
mov
hlt
pop
fstl
cmpb
pop
mov
push
lods
adc
ja
lea
inc
cmp
sarb
sub
push
sbb
aas
lods
pop
sub
xor
inc
jbe
out
inc
in
xor
call
cmc
jae
pop
addl
je
shll
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
icebp
cmp
dec
adc
xor
adc
fisubrl
out
add
xor
les
cmpsl
lods
adc
pop
or
push
enter
cmp
cmc
lcall
imul
jg
cmp
jl
into
imul
mov
mov
pop
dec
pop
shl
sbb
mov
pop
cwtl
push
mov
outsb
mov
xor
test
inc
adc
xor
push
dec
inc
mov
pop
int3
jne
jecxz
mov
mov
mov
xchg
leave
ja
or
lahf
mov
je
mov
ljmp
popf
outsl
dec
adc
mov
and
arpl
mov
cwtl
jg
add
cmp
mov
leave
dec
insb
xchg
pop
sub
lods
jnp
inc
inc
in
rcrl
xchg
test
or
mov
rol
mov
pop
mov
xchg
inc
xchg
jbe
cmp
mov
fldcw
mov
dec
fidivl
jp
add
test
xchg
lods
loopne
ljmp
nop
xchg
dec
test
dec
mov
notl
mov
cs
into
mov
add
in
js
xchg
loopne
mov
add
cmp
adc
mov
lret
stc
out
jno
repz
mov
imul
lret
pop
xor
dec
dec
movsl
mov
xchg
lahf
push
test
jp
sti
adc
lods
cs
xor
push
mov
mov
mov
call
xchg
cmp
je
inc
sbb
lock
ss
lods
mov
and
add
cmpsb
std
cmc
outsl
mov
push
jp
test
sub
js
ds
pusha
cmp
ss
roll
inc
les
pop
addb
or
in
in
add
and
or
mov
lods
cmp
cmc
push
sbb
or
xchg
pop
aam
dec
imul
and
mov
adc
and
pop
or
xchg
sarb
leave
dec
mov
lods
mov
cs
push
sub
xchg
sbb
pop
jg
sub
push
inc
stc
ss
mov
lea
jecxz
je
mov
insl
sub
dec
sbb
lea
push
push
or
repnz
icebp
sbb
dec
loope
fnstsw
arpl
jle
movsb
push
cmpsl
cmpsl
mov
in
aad
and
mov
sbb
add
adc
mov
out
push
lods
iret
ret
in
cmp
les
mov
push
or
cmp
aam
push
or
jmp
or
je
adc
xchg
pop
cld
test
adc
test
cmp
push
fs
in
mov
adc
adc
dec
arpl
rorl
int
push
or
push
imul
mov
mov
repz
pop
fisttps
das
ficoml
mul
inc
or
ja
sbb
adc
popf
addr16
push
xor
sbb
xchg
xlat
les
push
push
mov
xlat
sbb
test
mov
jecxz
push
popa
jl
or
out
adc
sub
testl
popa
pusha
adc
mov
pop
mov
test
xor
out
cmp
fdivp
test
sub
test
adc
and
push
jns
dec
jmp
xchg
and
movb
mov
stc
fsubl
or
xor
pop
mov
xor
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
jo
cmp
mov
and
dec
cmp
dec
nop
mov
pop
shrl
rcll
jns
inc
jmp
pop
or
testl
mov
push
pushf
or
and
cmp
push
mov
sarl
mov
pushf
xchg
movsb
out
mov
cmp
xor
jae
popf
xor
lds
test
sub
cli
aaa
push
enter
mov
cmp
setl
jl
cmp
adc
and
or
lret
xor
push
push
in
mov
jge
stos
fs
lock
dec
adc
or
insl
out
jge
mov
and
dec
mov
mov
mov
dec
xchg
push
adc
mov
rcrb
add
repz
cmpsb
lret
es
mov
mov
jo
jbe
pop
seta
lcall
cmpl
leave
jns
xor
cmp
push
adc
sar
dec
xchg
add
dec
add
cmpb
adc
clc
adc
out
jno
jle
shll
xor
jl
mov
xorl
dec
jp
pop
retw
lea
ja
jp
sbb
in
pop
fcomps
test
push
sbb
sti
div
sbb
jb
movsl
inc
mov
adc
and
frstor
sarl
xchg
mov
push
aad
test
and
mov
cmpsb
sahf
xchg
shlb
add
pushf
in
lods
out
mov
sbb
dec
nop
mov
jae
add
xchg
imul
mov
in
dec
sahf
cld
inc
pop
xor
jmp
xlat
cmp
sbb
add
scas
pop
cmp
andb
and
push
cmp
iret
push
cltd
into
push
aas
nop
mov
and
and
jp
mov
out
push
mov
pop
shrb
pop
push
push
outsl
xor
fcmovnu
jo
subb
test
xchg
push
test
outsl
nop
pop
push
out
stos
and
cmp
sets
xchg
xchg
push
push
dec
scas
lods
sub
xchg
add
ret
dec
in
jl
push
or
movsb
jle
andl
sbb
js
mov
push
pop
std
fisttpll
mov
mov
test
jo
sbb
negl
mov
and
push
push
sub
aaa
into
dec
fisubrl
fchs
push
imul
insl
shl
shll
lret
lock
mov
dec
xor
repnz
inc
mov
mov
adc
ret
insb
ret
pushf
adc
jle
mov
out
fstl
add
rol
push
testl
inc
push
loope
push
lods
mov
data16
scas
mov
push
push
push
sbbl
xchg
sarl
xor
or
push
loopne
pop
add
inc
into
hlt
xchg
stc
dec
sahf
cmp
mov
mov
arpl
jge
fwait
mov
in
loop
push
icebp
jbe
jp
mov
ss
pop
mov
shll
xchg
enter
je
add
out
or
outsl
scas
cld
jl
addr16
rcll
test
xor
mov
xor
pop
lahf
jbe
mov
repnz
int3
cs
out
mov
rclb
pusha
leave
aam
lahf
jecxz
pop
pop
xchg
sbb
lcall
mov
js
jg,pn
shll
ds
jno
xchg
push
rcrl
add
insb
push
lds
add
call
shll
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
sti
jle
cmp
adc
adc
adc
mov
or
bound
in
ja
aam
repz
sbb
scas
jbe
pop
cmc
mov
mov
lahf
mov
and
ss
stos
aaa
or
in
loopne
xor
xor
test
xchg
rcr
bound
ljmp
lods
mov
in
pop
clc
decb
cmp
add
inc
dec
jp
inc
pop
mov
std
fwait
cmp
fbstp
jmp
cmc
sub
fdivrs
popa
stc
pushw
cmc
mov
call
lods
mov
xlat
std
sub
xchg
jo
jl
pop
cmp
cmp
or
mov
adc
cmpsl
mov
imul
sbb
lods
bound
addr16
outsl
inc
popf
daa
js
enter
mov
xor
adc
adc
aam
jno
mov
imul
add
inc
inc
aas
jecxz
stos
or
xchg
push
xchg
in
xor
push
dec
sbb
popa
adc
mov
sbb
and
ret
dec
cmc
or
dec
mov
push
sub
mov
mov
repnz
lods
xchg
mov
popf
addr16
xor
sub
push
aas
sbb
frstor
stos
jl
mov
insb
cmp
gs
sub
sahf
jmp
ss
mov
dec
std
mov
fisubs
pop
push
pop
icebp
mov
or
sbbb
jl
test
test
hlt
push
jp
push
xchg
cmpsl
pop
push
or
xchg
mov
mov
hlt
movsb
dec
lret
loop
adc
dec
pop
in
rcrb
mov
bound
test
cmc
xorl
bound
xor
fists
pop
stc
adc
pop
loopne
mov
or
jno
inc
divb
lcall
stos
fmuls
add
mov
lret
ret
popf
mov
ret
scas
hlt
xor
push
sub
frstor
cmp
mull
shll
mov
mov
pop
xor
mov
repnz
jno
cmp
sbb
lcall
push
sbb
sub
and
sbb
cmp
xor
pop
inc
add
cmp
test
scas
lret
not
nop
aaa
adc
out
xor
push
out
jae
call
mov
jp
lret
cltd
jecxz
sti
and
sub
xor
popf
nop
inc
sbb
adc
cmp
jge
fldl
jmp
cwtl
mov
imul
add
and
jae
icebp
or
divb
mov
cld
arpl
jb
push
icebp
bound
int
shlb
or
gs
aad
cmp
outsb
stos
idivl
push
pop
xor
pop
call
call
push
or
cmc
test
in
pop
jg
into
mov
mov
push
mov
shll
dec
jp
push
sub
xor
aaa
cmc
test
xchg
and
inc
and
and
add
lahf
das
sbb
push
mov
addr16
jle,pn
scas
mov
out
dec
rcl
jmp
lcall
or
xor
loopne
xchg
ficoml
mov
or
mov
js
cmp
js
mov
add
dec
ds
cltd
arpl
mov
dec
jns
test
jmp
nop
add
add
pop
lret
dec
jns
lret
sbb
faddp
or
push
xor
sub
lcall
lret
sahf
pop
sbbb
cli
and
and
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
repnz
stos
xchg
into
fwait
bndldx
inc
push
sahf
les
outsb
push
rorb
mov
mov
les
and
mov
iret
leave
push
sub
cld
fs
push
test
mov
mov
push
outsl
add
fs
inc
cmc
xor
pop
sub
pushf
push
pop
lret
jg
popl
gs
repz
pop
mov
fcomip
cmp
xlat
cmp
test
out
insl
into
xchg
adc
xchg
mov
loope
cmp
xchg
mov
mov
mov
fmuls
call
lmsw
daa
cli
inc
pop
rolb
into
fsubrs
inc
insb
mov
push
dec
sub
inc
xor
ja
pushl
pop
fadds
xorb
movsb
mov
stc
sbb
daa
xor
or
cmp
dec
stos
xchg
repz
fwait
cmpsl
cmp
inc
adc
shr
cli
push
pop
jl
lea
popa
jne
pop
or
cwtl
push
cs
jns
or
xchg
cld
jnp
sarl
push
sahf
jg
rol
inc
fdiv
iret
lea
lock
into
sarb
mov
repz
xchg
dec
inc
cld
insb
push
in
test
imul
sub
and
inc
out
inc
stc
or
and
fbstp
inc
in
cmp
pop
xchg
xchg
negb
fimuls
push
cmpl
pop
add
sub
inc
push
ret
push
std
pop
mov
jmp
xorl
scas
jno
ds
mov
inc
xchg
cmp
dec
cmp
xchg
lcall
jbe
cmp
push
sub
xchg
mov
iret
push
sarb
int3
ja
call
lcall
mov
aas
dec
push
aad
mov
pop
jne
lea
inc
popf
or
and
mov
lods
jbe
adc
dec
mov
or
mov
hlt
pop
jbe
aas
pop
lahf
pop
push
pop
call
cmpsl
stos
outsb
stos
push
int3
ret
outsb
scas
popa
pop
outsl
mov
and
xchg
mov
cmp
test
mov
mov
pop
jo
imul
scas
jg
hlt
nop
jne
xchg
in
push
xchg
out
pushf
movsb
test
dec
push
or
push
adc
divb
dec
stos
cld
test
jecxz
push
jmp
mov
sub
inc
lret
xchg
sahf
in
xor
shlb
inc
jmp
and
inc
scas
pop
push
and
lock
jae
xchg
aad
insl
cmp
rcrl
adc
jmp
stos
jp
fistpll
je
int
popa
push
xor
outsl
test
test
xchg
cmpb
gs
mov
fbstp
fs
clc
dec
add
jl
xor
dec
add
push
mov
inc
xchg
push
dec
pop
arpl
xlat
jp
imul
mov
pop
adc
scas
lds
arpl
sahf
lret
add
mov
xorl
scas
pop
nop
fstpl
xchg
ja
dec
mov
stos
xlat
adc
loopne
or
insl
popf
xlat
and
xchg
sub
fwait
xor
push
test
dec
jge
inc
push
out
or
stc
mov
hlt
test
pop
std
and
mov
ja
dec
jbe
int
cmp
xchg
and
xor
int3
je
sbb
pop
or
bound
enter
or
adc
fwait
sahf
xor
xchg
and
pop
lock
mov
hlt
inc
xchg
daa
jbe
or
cmp
ret
mov
lret
fiaddl
in
inc
rcrl
repz
mov
mulb
lret
std
xchg
sub
jecxz
jb
lods
mov
shrd
xor
jmp
mov
popa
lcall
sub
lods
scas
sub
adc
adc
adc
xchg
ds
sub
lds
lods
pop
stos
test
pop
test
inc
stc
insl
loop
ds
jp
loop
xchg
fistps
imul
shrl
pop
dec
test
inc
ret
pop
rorl
call
ja
lahf
daa
in
test
mov
xchg
push
rcr
inc
pop
add
std
xchg
jecxz
mov
or
and
popf
sub
cmp
out
pop
jge
xor
xor
xchg
out
pop
stos
mov
loopne
pusha
add
jle
out
and
or
xchg
movsl
adc
xchg
push
adc
aaa
xlat
pop
sub
mov
adc
mov
leave
cltd
push
orl
mov
dec
pop
cmp
jo
nop
stc
ficoms
adcl
mov
out
push
pusha
cli
jmp
add
mov
popf
jo
mov
adc
imul
push
and
aad
fidivl
lds
fdivs
cmp
dec
pop
mov
jmp
pop
xchg
mov
clc
sbb
movsl
cwtl
and
xchg
xor
cs
jge
lret
test
jg
mov
cs
add
xchg
addr16
or
xor
lret
icebp
push
imul
testl
scas
fimuls
sbb
sub
aad
loop
cwtl
nop
dec
add
outsl
fisttpll
jnp
aaa
xor
repnz
mov
jmp
ds
je
cmp
adc
xor
mov
mov
imul
mov
jo
and
dec
jl
ficoml
and
scas
mov
xchg
push
pop
mov
dec
push
gs
jg
or
jecxz
icebp
icebp
aaa
sbb
mov
sbb
and
dec
test
lret
mov
je
mov
leave
in
dec
les
out
fnstenv
scas
lahf
jl
inc
push
or
nop
test
jge
push
lcall
jb
sti
int3
xor
fidivrs
mov
dec
pop
inc
pop
or
sbb
cltd
xchg
jns
mov
mov
aaa
ret
shlb
cwtl
xchg
mov
jbe
add
mov
jnp
sti
call
inc
pusha
int
das
jbe
and
mov
mov
dec
je
lock
aaa
dec
push
fisubl
aas
sahf
loopne
jp
sub
mov
cmc
or
push
jmp
andl
mov
insl
dec
inc
add
cmpb
lods
sahf
arpl
cmp
mov
xor
fs
mov
out
mov
les
lcall
inc
pop
iret
popa
inc
and
inc
or
aad
dec
mov
xorb
jno
rclb
hlt
enter
xlat
add
icebp
fstl
fsubl
test
push
jg
ret
cltd
mov
mov
enter
cmp
mov
mov
mov
adc
outsl
inc
vpmaddwd
push
cmp
sahf
enter
test
mov
and
daa
pop
iret
cs
jno
xor
std
dec
in
imul
loop
test
inc
adc
jg
cltd
push
outsl
test
adc
mov
test
adc
inc
ret
jne
xchg
out
jne
sahf
in
iret
lahf
sub
mov
xorl
inc
add
lret
mov
sbb
sbb
test
jbe
mov
cmp
or
fldt
dec
loope
outsb
add
cmpsl
loope
icebp
pushf
imul
xchg
dec
push
pop
adc
and
cli
adc
jbe
enter
xchg
adcl
lds
and
cmp
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
and
and
adc
movlps
jno
loop
pusha
inc
adc
lahf
cmp
adc
inc
ficoml
mov
xor
bound
xchg
out
mov
sbb
push
enter
push
daa
xor
ret
pop
loopne
in
dec
adc
adc
pop
nop
and
ljmp
mov
ds
jb
mov
mov
add
and
xor
sbbb
cmpsb
sbb
subb
adc
pusha
fs
jp
jo
sbb
xchg
cmpsb
pusha
jle
data16
sub
dec
popf
pop
mov
push
pop
xchg
loopne
push
cmp
mov
mov
xchg
hlt
cmp
xor
bound
xor
sbb
push
jns
mov
in
sub
mov
pushl
push
leave
mov
bnd
ficompl
sub
sar
loope
push
inc
fstps
orl
mov
pop
adc
dec
in
testl
popf
fisttpll
sbb
mov
cmp
rcr
inc
loope
or
repz
push
mov
imul
ljmp
pmaxsw
lock
je
jg
xchg
dec
dec
dec
and
mov
mov
les
dec
and
ds
out
push
popa
push
fdivrl
lods
jl
lods
rclb
int
orb
div
call
xlat
fdivrs
xor
in
inc
fsub
jge
jl
addr16
movsb
je
jp
jbe
addl
enter
ret
cwtl
data16
cmpsl
adc
jge
jl
imul
sbb
imul
xorl
jns
movsl
loopne
xlat
sti
stos
inc
add
jo
mov
add
call
adc
insb
jae
pop
jle
xchg
pop
repnz
imul
push
shll
mov
lea
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
aam
js
sbb
adc
movlps
fimull
fnstcw
cmp
pop
mov
sbb
fldl
adc
loopne
outsb
inc
push
xor
mov
mov
or
call
fxch
add
and
jmp
imul
in
fisttps
outsb
or
call
dec
xchg
xchg
push
mov
sbb
outsb
leave
sub
nop
and
pop
dec
es
jbe
or
jne
inc
loopne
mov
mov
repz
cmp
dec
mov
into
lea
daa
ret
jnp
sar
mov
lock
loop
mov
outsl
adc
push
in
pusha
inc
mov
addr16
adcl
repz
shl
sub
addr16
xchg
outsb
xor
hlt
mov
aaa
xchg
sub
jp
nop
dec
aaa
bound
mov
jmp
fs
int3
mov
jg
cmp
popa
jl
mov
sub
sbbl
jge
std
icebp
hlt
fiadds
xor
cmp
inc
mov
sahf
adc
out
pop
lods
xchg
enter
ja
sub
cltd
and
rorb
insl
hlt
in
pop
fwait
mov
clc
sbb
cltd
xor
mov
jbe
hlt
cltd
sbbb
shlb
ljmp
je
scas
pusha
pop
fs
mull
mul
mov
cmp
jbe
pusha
mov
cmc
jbe
je
addl
dec
test
mov
shl
inc
or
in
cmp
sahf
gs
es
add
and
pusha
or
xchg
xchg
mov
pop
ret
sub
jp
cs
fisubl
and
je
mov
insl
cmp
cmc
in
adc
sbb
mov
mov
mov
and
mov
shl
mov
mov
sbb
or
enter
lds
adc
add
inc
hlt
popa
cmp
lock
inc
cld
stos
and
add
add
add
stc
or
popa
imul
nop
js
cmp
insb
pop
sbb
adc
movlps
adc
enter
xor
mov
mov
lahf
or
sarb
aam
mov
lret
stos
fdivp
jp
pop
jmp
imulb
adc
in
rolb
das
adc
xchg
jae
movb
dec
dec
fidivrs
lods
fldl
jp
lea
xor
dec
mov
int
sub
les
testb
push
mov
jns
sbbb
mov
lret
sub
cs
xchg
aam
dec
push
in
lods
and
pop
int3
jno
mov
jmp
cmp
aas
pusha
adc
pop
enter
cmc
and
sub
movsl
test
lcall
outsl
push
ja
add
sarw
inc
cmpsb
pop
in
lret
and
push
push
or
shrb
aad
jge
adc
out
mov
jns
xlat
dec
sbb
lret
lds
push
fildl
aas
jg
sbbb
cmpsl
das
inc
adc
test
shll
repnz
push
loop
and
scas
repz
cld
mov
dec
xchg
sub
push
lahf
lea
add
xor
inc
mov
jmp
sbb
sbb
outsb
inc
or
aaa
aad
sbb
es
mov
sub
in
fldt
or
cmc
outsb
push
imul
xchg
or
sbb
insl
lods
jmp
xchg
rcrb
adc
and
cli
mov
movsl
jmp
ret
xlat
jb
jnp
xor
xlat
addr16
cld
xchg
fst
dec
pop
dec
nop
enter
fiadds
fstpl
and
dec
scas
or
mov
dec
mov
jb
xor
fcomp
iret
jae
iret
stos
data16
or
andb
push
andb
insl
das
cmp
lcall
addr16
adc
test
lcall
subb
mov
mov
popf
neg
les
imul
ficoml
mov
aad
inc
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
sbb
mov
fmull
adc
cmp
ljmp
mov
sub
sti
xchg
paddusw
leave
push
in
jmp
push
or
cwtl
push
das
add
roll
clc
and
jle
ret
fstpt
lret
sbb
push
popf
jge
jg
andb
decl
mov
jo
inc
lea
cltd
xor
out
lds
jmp
adc
icebp
sbb
push
jbe
pop
fisubrs
xor
push
mov
xorl
js
pop
scas
fs
sti
movsb
int
xor
test
testl
int
in
cmp
arpl
mov
pop
lock
sub
lock
cmp
aaa
jno
jmp
inc
xchg
loopne
mov
roll
fildl
ljmp
into
push
gs
cmp
mov
arpl
push
or
test
mov
mov
setae
int3
fs
push
sub
dec
pop
xchg
add
and
sub
cmpsb
jb
loop
inc
pop
loopne
xor
arpl
push
mov
and
sbb
outsl
dec
lret
mov
fiadds
scas
xchg
enter
outsb
sub
clc
push
inc
mov
shrb
xor
dec
cmp
push
sbb
push
xchg
data16
and
sub
fidivrl
sub
adc
mov
insl
jge
xchg
jbe
hlt
pop
sbb
and
fistps
or
xor
aam
inc
jns
mov
enter
cwtl
mov
sbb
add
js
sti
adc
push
xchg
nop
jno
test
shrb
scas
int3
jecxz
insb
arpl
aad
mov
pop
sub
push
in
dec
test
repz
enter
fs
dec
arpl
movsb
aas
jne
sti
clc
in
test
push
movsb
nop
movsl
cmp
push
int
loop
pushf
dec
movb
ret
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
fwait
idivl
adc
adc
movlps
stc
jnp,pt
cwtl
or
sub
das
adc
mov
idivb
iret
pop
mov
jle
mov
jge
pop
mov
add
push
adc
loop
aam
pop
sub
int3
adcb
add
cmpsl
outsb
loop
sbb
fwait
fwait
sub
mov
pop
in
mov
das
xchg
or
cld
xchg
and
xchg
repnz
mov
push
dec
mov
movsb
test
sti
jo
sub
xchg
sub
mov
mov
jno
fsubrs
cli
add
cmp
push
push
add
cmpb
adc
mov
nop
cltd
xor
loopne
sbb
xor
cmc
dec
stos
dec
adc
jg
arpl
jnp
adc
adc
fsubs
ffree
imul
rcrl
pop
shl
cmpsb
ja
mov
xlat
jno
jmp
clc
mov
cli
call
mov
adc
ret
lds
int3
push
mov
out
mov
aas
pop
adc
insb
adc
sahf
lods
mov
cmp
stos
sub
push
rcll
jo
int3
jb
mov
xchg
mov
in
mov
mov
push
jge
mov
sbb
jne
cmc
push
mov
adc
ret
lea
xor
push
leave
out
xor
mov
scas
js
mov
push
cmp
sub
out
popf
add
jmp
sahf
push
jne
subl
in
lret
imul
in
test
rclb
dec
mov
cmpsb
mov
and
push
loope
inc
test
sti
pop
push
pop
cmp
add
inc
lock
inc
call
dec
pop
jnp
cs
sbbl
in
jp
ret
daa
pop
push
jmp
fisubl
mov
jge
xchg
and
mov
orl
mov
cltd
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
ljmp
out
sahf
add
imul
inc
dec
pop
mov
lcall
pop
scas
push
sbb
leave
cmpsb
add
push
test
jp
test
mov
dec
imul
pop
jle
mov
jo
in
inc
test
cs
dec
leave
jnp
dec
mov
int3
pop
xchg
or
outsb
stc
iret
cmpsl
dec
or
pop
or
adc
aad
ljmp
repz
xor
or
dec
push
ljmp
dec
pop
aad
mov
mov
xor
mov
mov
jmp
into
ret
pop
cmc
push
push
mov
or
add
shlb
sub
xor
imull
fadd
into
inc
popf
out
sub
jg
in
inc
fstpt
cmp
xchg
inc
mov
mov
and
jne
pop
bnd
push
xchg
add
or
lods
jp
je
dec
push
popf
inc
imulb
in
sbb
aad
test
stos
mov
lock
out
out
andl
lret
and
popf
cwtl
adc
jle
stos
aaa
test
adc
shll
xchg
enter
popf
jnp
xchg
push
pop
pop
pop
adc
insl
mov
xchg
enter
shlb
daa
pop
mov
cs
sahf
mov
movsl
cmp
and
jne
repnz
sarl
stc
or
cmp
mov
adcl
mov
xor
fildll
arpl
push
sub
xor
enter
xchg
sbb
xor
sub
pusha
pop
in
xchg
fptan
and
sub
cmpsb
lods
push
fcomps
cmp
push
xchg
pop
push
cltd
insb
cltd
push
or
popf
pop
out
dec
and
jae
scas
popa
sbb
xlat
fadd
out
imul
xor
cs
cmp
adc
pop
push
ret
cmp
ja
enter
mov
fisubrs
shll
xor
add
cltd
dec
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
cmp
jle
adc
fmull
adc
shrl
lcall
xor
mov
test
jno
cmpsb
dec
icebp
ja
pop
repnz
mov
test
push
aaa
pop
sbb
fwait
ja
pop
dec
xchg
xchg
push
inc
xlat
insb
mov
push
mov
cli
push
stos
test
lea
mov
imul
icebp
sahf
popa
movsl
push
pop
mov
sbbl
jnp
mov
mov
jnp
mov
sbb
cmp
js
outsb
pusha
out
fcmove
cltd
jmp
add
stos
sbb
and
fidivl
mov
or
aas
mov
fcoms
arpl
jb
adc
movsb
and
jno
mov
das
jne
mov
push
aam
or
mov
add
jne
icebp
shll
or
stos
push
dec
inc
xor
in
sbb
cli
mov
out
ds
or
andl
jg
stc
cli
pop
cmp
rcr
addl
test
and
fs
adc
lods
test
out
std
and
push
pop
add
std
inc
cmp
clc
rcr
aad
mov
dec
out
test
mov
adc
iret
push
push
insb
jo
outsb
mov
ljmp
adc
mov
fildl
jp
leave
loopne
pop
pop
ret
xor
mov
jg
shl
clc
xchg
cmp
adc
xchg
sbb
sbb
inc
sti
testl
push
xchg
mov
jno
fwait
dec
hlt
inc
add
popf
hlt
bound
mov
inc
xchg
cli
dec
aas
test
jge
les
jbe
in
lock
movsb
aas
sbb
incb
sbb
ss
gs
or
mov
movsb
dec
icebp
scas
sub
rcrl
out
clc
cli
cmp
aad
addr16
enter
pusha
add
scas
pop
icebp
dec
or
and
out
adc
adc
mov
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
rorb
jo
add
pop
inc
push
inc
mull
adc
xlat
pop
subb
sahf
in
rcrl
inc
mov
gs
fwait
aam
ss
jge
mov
jle
add
mov
decl
arpl
lea
sub
bound
xor
imul
lock
clc
pop
or
jae
movl
mov
lcall
dec
leave
scas
out
out
mov
cmpsl
icebp
xchg
add
lcall
mov
test
mov
lret
jne
push
lcall
jecxz
movsb
sub
mov
outsl
pop
xchg
ret
xor
loope
push
push
sub
push
repnz
into
hlt
add
sub
push
dec
test
add
scas
fstpl
ret
pop
xor
pop
mov
fildl
push
in
test
xor
xor
ficomps
xor
leave
and
lods
inc
dec
inc
mov
mov
js
sbb
cmc
jle
jl
fdiv
shr
or
icebp
and
dec
lods
jno
adc
movsl
jb
in
cmp
test
repz
xor
imulb
loop
adc
sub
mov
mov
lods
cmp
pop
lahf
cmp
clc
vmaxpd
cwtl
jns
fwait
movsb
and
mov
adc
data16
cmp
push
fsub
sub
cmp
fs
sbb
push
outsl
out
mov
xor
cmpsb
push
int3
xchg
das
jge,pn
jg
xlat
add
cmp
lret
imul
test
cmp
mov
ljmp
mov
push
pop
loope
push
fdivl
xchg
pushf
cmp
dec
inc
xor
push
mov
mov
or
dec
insb
loopne
inc
enter
adc
mov
mov
mov
fwait
xor
adc
les
ret
dec
jae
or
xchg
cmp
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
fidivl
in
inc
mov
pop
test
add
and
ja
mov
ret
or
mov
aas
dec
mov
xchg
push
xchg
sarl
orl
dec
enter
fnstsw
mov
cwtl
and
push
inc
mov
out
cs
jle
std
add
call
imul
mov
jno
popf
jne
icebp
xchg
adc
push
adc
call
shlb
loope
dec
ret
push
bound
sbb
push
adc
adc
ds
lcall
mov
fistpl
jae
ss
sti
sub
add
popa
mov
sub
cmp
push
scas
test
iret
imull
cmp
mov
leave
pop
test
call
out
loope
addr16
sub
aaa
scas
or
xor
inc
into
and
xchg
jne
and
sub
popa
jnp
nop
in
xchg
insl
repnz
aas
jmp
cwtl
ret
mov
sub
cltd
mov
sahf
push
xor
cltd
adc
inc
dec
mov
mov
inc
xchg
bnd
pusha
call
and
hlt
mov
cmp
lods
push
or
imul
push
inc
lock
jo
push
jbe
lcall
xchg
scas
test
xor
inc
xchg
jae
int
cmp
add
add
mov
je
cmp
cwtl
stc
sarb
jg
loopne
jb
xchg
push
sbb
dec
fcomp
jno
addb
popa
mov
enter
sbb
clc
push
adc
push
mov
rol
aam
lret
or
cmpsl
xchg
repnz
push
inc
stos
test
dec
jnp
leave
movsb
sbb
sub
cmp
out
mov
xor
add
fistps
cs
jb
adc
test
cmp
scas
outsl
test
ljmp
popa
xor
jb
ds
lcall
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
pop
xor
aad
adc
fmull
adc
sub
cmp
sbbb
or
test
sbb
cmpsl
divl
or
dec
fstp
rolb
outsb
xor
push
jmp
xor
pop
nop
pop
mov
jns
cmpsb
in
fidivrl
in
ret
xor
addr16
aaa
inc
lods
cmpsl
push
insb
or
cmpsb
mov
mov
or
xor
push
sbb
mov
das
mov
loope
jae
out
adcb
inc
mov
push
mov
pop
dec
jae
pop
outsb
ret
scas
mov
sub
mov
cmp
pop
loop
enter
loop
or
xor
in
pop
loop
fwait
clc
xor
out
mov
jbe
mov
lret
sarb
jl
test
inc
aas
in
out
je
dec
cwtl
push
inc
test
lods
dec
add
adc
jmp
pop
add
rcl
mov
out
movsl
shll
bnd
sarl
out
pop
sub
sti
pop
outsb
xchg
dec
dec
gs
mov
into
mov
jnp
int3
ret
loop
fisubl
mov
orl
add
shlb
adc
arpl
mov
xor
dec
shll
lods
stos
pop
mov
jg
int3
out
hlt
xchg
or
sub
cmp
movsl
lock
shll
jle
out
popf
or
sub
loope
mov
aam
mov
mov
mov
push
setbe
mov
rorl
cmp
jp
dec
cmp
out
out
sub
mov
mov
adc
sbbl
and
cmp
or
mov
lret
call
jbe
sub
push
jbe
stos
fildll
lods
cmp
lods
pop
cmp
aam
in
jbe
mov
int
lret
cmp
cltd
mov
insl
inc
or
mov
dec
add
cmp
out
jl
js
and
pop
int3
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
in
cmp
stos
popf
cli
adc
fmull
adc
ja
popa
sbb
fwait
sub
pop
in
or
cltd
xchg
pop
out
cs
sub
imul
push
lret
icebp
rcrl
mov
mulb
dec
ljmp
mov
loopne
cmpsb
in
push
stc
aaa
mov
je
jo
sub
cltd
int
sub
sahf
lods
loope
sbb
cmp
lahf
add
mov
cld
cmp
mov
push
xchg
arpl
xchg
push
jnp
xor
xchg
push
jmp
sub
sub
and
push
rol
lret
pop
dec
leave
cmp
lds
sbbl
jnp
aad
test
sub
pop
and
mov
movsl
push
sub
mov
jb
push
mov
out
or
rcr
cmp
sti
add
inc
jo
jge
mov
bound
mov
dec
scas
fs
pop
adc
dec
lea
outsb
adc
aaa
or
cmc
stos
data16
repnz
hlt
xor
xor
enter
ds
js
andl
cmc
jbe
clc
mov
pop
arpl
lcall
filds
mov
mov
xchg
scas
inc
test
inc
push
test
sbb
das
add
imul
nop
lahf
or
inc
and
jl
repnz
in
mov
lahf
jnp
mov
lds
js
add
sub
enter
mov
xor
adc
pop
xlat
movsl
cmp
add
loop
sbb
jl
mov
and
int3
lcall
xor
xchg
inc
cli
pop
inc
lods
push
clc
out
adc
lcall
subb
pusha
sbb
mov
pop
cwtl
inc
hlt
pop
mov
jmp
cmp
fwait
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
xor
notb
adc
movlps
dec
mov
adc
out
mov
xor
popf
and
xchg
cmc
test
mov
jns
cmp
xchg
shl
add
xchg
inc
rorl
mov
cmp
wrmsr
in
js
std
fnstcw
push
fistpl
stc
inc
mov
movsb
std
lahf
adc
push
pop
and
mov
mov
imul
mov
cwtl
stos
mov
test
ret
or
xor
xor
jp
mov
mov
enter
dec
popf
mov
mov
dec
xor
fstps
inc
lds
jecxz
dec
inc
inc
leave
mov
or
out
movsl
rcr
loope
outsl
clc
and
mov
mov
xor
nop
stos
or
and
sbb
pop
cs
push
mov
aas
test
mov
mov
pop
mov
ljmp
inc
insl
jne
loop
dec
nop
ret
scas
sbb
jo
es
aaa
sbb
jle
mull
punpckldq
cmpsb
xchg
xchg
iret
or
xor
and
and
mov
test
sub
clc
aad
sub
sub
jl
stc
mov
pop
icebp
push
push
mov
adc
mov
xchg
adc
imul
sbb
add
ret
sub
xchg
fwait
cmpsl
loop
or
xchg
rorl
push
lods
push
pop
push
cmpsl
dec
jbe
cmpsb
stos
movsl
in
sub
inc
xchg
mov
js
sarl
pop
inc
dec
aad
xor
xchg
mov
sub
inc
and
test
in
jns
popl
or
mov
or
pop
or
fisttpll
push
imul
iret
mov
inc
jmp
push
mov
test
sbb
shrb
loop
mov
clc
dec
mov
jmp
popa
or
fwait
and
test
in
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
xor
push
ficompl
and
shlb
cli
or
jl
mov
insb
shll
cli
dec
lds
mov
ret
pop
cwtl
sbb
fcoml
jns
sub
aad
frstor
sub
jge
pop
loopne
addl
mov
sbb
lods
or
xchg
sbb
pop
or
push
jmp
jns
cli
dec
jg
bound
pop
push
and
jns
scas
mov
jle
mov
sbb
jge
fxtract
inc
ljmp
aaa
stos
dec
sbb
and
xor
inc
xor
add
in
scas
leave
cmp
add
sub
lea
sub
push
rcll
stc
xlat
ja
or
sbb
nop
fs
sti
stos
js
lahf
jmp
add
inc
jae
mov
jmp
scas
mov
sbb
inc
xor
cmpsb
mov
mov
inc
or
lock
cli
pop
add
pop
shl
xchg
inc
pop
movsb
mov
fcmovnu
ss
out
xchg
inc
jae
popf
ret
pop
in
push
rep
mov
dec
jp
cmp
xlat
ds
test
and
fs
jns
idiv
fisubrl
or
repnz
cmpsb
xchg
cmp
add
push
lods
aad
and
dec
shlb
inc
out
nop
mov
and
push
push
jmp
inc
ss
divl
scas
fs
cmp
shrl
xor
pop
push
mov
lret
ja
inc
outsl
rcr
addb
dec
dec
pop
add
repnz
push
pop
fisttpl
nop
push
movsl
dec
or
rcrb
sub
test
xchg
inc
pop
cmp
ficoml
scas
test
and
mov
popf
sub
pop
idiv
xchg
inc
data16
pop
push
movsl
xor
add
pop
or
push
push
or
pusha
scas
in
mov
cltd
std
sti
pop
ret
mov
push
dec
pop
jg
lock
jns
xor
sbb
vpmulhrsw
or
cwtl
out
xorl
xchg
dec
push
jae
mov
scas
lahf
ss
jmp
js
push
sub
ss
xor
das
and
sbb
cld
inc
bound
dec
jb
jae
add
jbe
add
stos
cwtl
ljmp
xor
jecxz
xlat
sbb
dec
xor
movsl
rorb
dec
into
pop
es
pop
test
push
cltd
xlat
mov
and
and
sub
jecxz
les
aaa
push
mov
xchg
mov
pusha
push
shrl
pop
fwait
dec
sbb
sbb
cmp
shr
arpl
mov
test
mov
ror
orb
inc
mov
into
push
lods
mov
xchg
mov
xor
test
dec
and
or
stc
xchg
push
mov
movsb
out
sub
mov
xchg
or
lock
jns
add
jbe
sub
jns
sbb
cmp
dec
pop
sbb
test
jns
xor
and
mov
lea
scas
addl
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
inc
cmpb
adc
adc
or
or
dec
mov
pop
leave
or
mov
jecxz
icebp
test
ljmp
mov
jmp
repz
test
fs
repz
mov
xchg
push
dec
outsl
popf
sbb
cli
popa
icebp
add
iret
xor
jp
cld
mov
jl
lcall
jne
popf
jne
jns
mov
subl
cmpsl
je
mov
scas
mov
and
mov
pop
imul
fdivrs
sbb
mov
daa
fcmovnb
arpl
mov
stos
fwait
mov
out
loop
or
dec
add
add
scas
jne
lret
cs
in
xor
push
mov
xchg
rcl
push
push
insl
sub
xor
loope
mov
push
pusha
xor
jo
jno
push
xor
pcmpeqb
adc
push
mov
dec
arpl
arpl
push
insl
iret
out
mov
xor
int
or
xor
mov
xor
jmp
repz
mov
push
icebp
lcall
in
imul
lods
cmpsl
cmp
call
add
fidivs
sysexit
push
lods
adc
es
mov
dec
jecxz
push
cmpb
push
in
push
mov
or
mov
ficomps
ror
jbe
arpl
pop
dec
push
mov
cltd
leave
mov
popl
push
jbe
jne
lods
xchg
ja
std
pop
mov
dec
imul
xchg
pop
test
add
decl
movsb
stos
xchg
dec
lret
lcall
sub
push
push
adc
pop
xchg
lahf
push
jo
rclb
sbb
mov
pop
and
repnz
sub
xor
sub
bound
stc
inc
add
xchg
adc
in
jb
and
stos
aam
dec
test
fs
arpl
mov
mov
fnsave
or
popf
fwait
or
xchg
or
jge
mov
xchg
mov
mov
fisubl
lahf
int3
dec
dec
call
or
fwait
stos
js
shlb
add
aas
loope
pcmpeqd
jbe
outsl
push
dec
popl
cmpsl
mov
rclb
and
clc
clc
cwtl
sbb
cltd
cmpsl
dec
jbe
dec
sub
push
xchg
pop
or
scas
mov
sub
ja
mov
add
add
add
xchg
xlat
push
aad
and
enter
mov
pop
mov
fsubrp
cmp
adc
je
xor
lock
add
out
lock
cmpsl
popf
fiaddl
dec
hlt
jne
pop
gs
xchg
cmpsb
in
xchg
jne
pop
add
push
fsubs
lds
mov
sbb
movsb
jg
xchg
push
push
sbb
push
loopne
jne
int3
aaa
push
or
xchg
pop
nop
sbb
jp
mov
cmp
or
leave
add
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
loopne
mov
jo
adc
nop
daa
pop
loopne
movsb
mov
and
sbb
or
dec
popa
push
and
cwtl
pop
push
pop
into
hlt
cld
xchg
push
repz
lea
add
popf
or
mov
int
and
inc
cmp
loop
clc
inc
es
aaa
jle
in
ljmp
cmp
inc
push
jae
mov
arpl
fisttpll
mov
in
and
lret
xchg
dec
mov
imul
shl
cmpl
mov
pop
je
xchg
jmp
pop
and
push
sbb
inc
into
add
cmp
movsl
stos
popf
movsl
dec
and
mov
add
pop
ret
cwtl
enter
pop
lds
jnp
in
icebp
jb
call
ss
push
dec
xor
inc
jns
jle
loope
sub
mov
stos
cld
mov
leave
and
sbb
sub
jo
sbb
push
sbb
push
adc
add
sbb
push
push
cmp
xchg
fstl
mov
fdivp
and
add
mov
inc
or
mov
adc
mov
push
fistpl
or
inc
iret
jl
xchg
sub
push
pop
fcompl
cmpsb
lahf
xor
dec
in
fstpt
xchg
sbb
lret
jno
aad
add
repnz
add
mov
pop
cmc
push
lds
pop
xchg
andb
xchg
pop
mov
push
or
insb
sbb
mov
les
push
sbb
testb
push
aas
outsb
adc
imul
pop
popf
cmpsl
jb
and
jge
iretw
mov
lea
and
loope
sti
outsb
or
add
jnp
cwtl
call
sarl
in
dec
ret
inc
mov
fadds
sub
fdiv
stos
push
mov
cwtl
imul
or
xorb
cli
cmpsl
mov
imul
jnp
jne
pop
push
cli
and
fcomps
mov
add
sub
dec
lock
sbb
clc
and
inc
jl
mov
lahf
pop
mov
adc
scas
sub
mov
pop
mov
xor
cmpsb
xchg
xor
mov
xor
imul
mov
xchg
pop
aad
int3
or
aam
mov
or
aad
push
jb
xchg
mov
inc
es
dec
in
push
jl
mov
pop
fists
pusha
arpl
fdivrl
testb
pop
adc
rcll
pop
pop
aaa
in
dec
notl
stos
popa
mov
xor
fstpl
sbb
arpl
dec
ftst
lcall
sub
jmp
inc
adc
imul
test
cmpsl
stc
xchg
cld
jmp
or
cmc
es
scas
in
sbb
inc
push
sub
addb
sbb
sbb
stos
push
or
mov
and
add
push
ljmp
jl
movsl
xor
icebp
out
stos
fisubl
loope
pusha
addb
cmp
jl
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
xor
inc
fstl
adc
adc
mov
or
pushf
jecxz
lret
mov
mov
movb
push
sub
adc
xor
sbb
clc
test
les
pop
popa
mov
mov
and
daa
push
movsl
enter
push
and
jp
outsb
mov
insl
cld
std
jno
repnz
ss
mov
insl
jns
cs
aas
pop
insb
jecxz
iret
sbb
cmp
popf
je
rcrb
pop
or
mov
mov
mov
sbb
addr16
ret
arpl
xchg
ja
mov
dec
mov
dec
xchg
data16
in
dec
ljmp
rcll
insl
jb
pop
sub
adc
into
cmp
sbb
push
push
jbe
nop
push
xlat
rol
jae
jo
pop
push
repz
pop
mov
scas
xor
fiaddl
cmp
out
es
sub
mov
repnz
push
push
mov
ljmp
loope
inc
not
or
add
in
mov
xor
lock
loopne
cmc
push
mov
adc
int
or
call
cld
sbb
sub
cmp
sub
cmp
jl
pop
stc
jno
repnz
clc
mov
lahf
pop
mov
mov
or
stos
sbb
in
insl
xchg
aaa
jmp
out
lcall
push
cmp
ljmp
das
inc
adc
mov
and
imul
ret
aaa
mov
je
shlb
shlb
lods
and
aaa
or
sub
and
push
dec
and
cmp
nop
js
push
stos
out
xor
sub
aad
imul
mov
add
jl
nop
sub
or
fdivrs
cmp
mov
dec
sahf
mov
repnz
or
dec
and
pushf
fisubrl
decl
scas
push
jecxz
jmp
fcoms
ret
out
jns
incb
mov
jle
adc
pop
pop
mov
sti
imull
cmp
sub
aad
xchg
xlat
cs
jl
cld
adc
into
jg
xor
mov
push
shrb
inc
xlat
popa
mov
mov
cltd
mov
cltd
sub
xor
fadd
or
sbb
ret
push
mov
movsl
andl
dec
bound
dec
sarb
cmp
mov
cli
lock
mov
movsl
dec
sbb
hlt
or
jge
or
xor
insl
imul
pop
jmp
add
out
cld
sbb
mov
fildll
dec
pushl
jle
mov
popf
mov
adc
popf
xchg
inc
and
insl
mov
inc
je
inc
mov
scas
jecxz
cmpsl
xchg
sbb
or
adc
dec
sub
cmp
repnz
sbb
aad
mulb
jae
lea
dec
push
stos
mov
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
mov
aad
adc
adc
sub
inc
insb
push
mov
push
mov
std
adc
dec
add
inc
jb
xchg
xchg
mov
hlt
fidivrs
jo
pop
ss
and
addr16
lods
mov
bound
dec
xchg
or
sub
push
rcrb
cwtl
cltd
aas
cmp
repz
push
add
aam
loop
sbb
aad
test
rorl
cmp
jmp
add
repz
imull
xor
xchg
nop
xor
movsb
jo
ficompl
sub
mov
outsb
inc
movsb
cmp
shlb
push
mov
sub
sar
jae
stos
int3
or
idiv
ja
jp
andl
xor
mov
xorb
jae
xchg
jmp
dec
push
and
ror
mov
adc
push
ljmp
sbb
cmp
aad
mov
lret
push
xchg
mov
mov
hlt
insb
add
push
pushf
xor
mov
les
cmp
jbe
outsl
shll
xchg
faddl
test
jmp
mov
stos
fndisi(8087
mov
sahf
dec
cmp
jno
in
inc
cmp
ds
adc
mov
lea
lods
cmp
ss
jno
mov
mov
add
xor
jecxz
push
mov
and
daa
test
test
ljmp
stos
imul
mov
mov
fs
cmpsl
dec
cmpsb
mov
mov
outsl
aad
pop
addr16
and
and
cmp
pop
lcall
repz
ljmp
xor
ss
pop
fadds
out
jg
mov
fcomps
xchg
add
inc
bound
in
xchg
stos
jg
filds
dec
mov
add
arpl
cwtl
fwait
in
lds
adc
xlat
inc
ds
pop
inc
test
fcom
pop
hlt
mov
sbb
adc
push
outsl
xchg
push
jae
xor
mov
out
cmp
lahf
mov
int3
arpl
lahf
add
cmp
xor
imul
mov
imul
xor
jmp
rorb
inc
test
push
fsubs
sbb
fstpl
pushf
or
lods
aam
and
out
int3
mov
xchg
jne
lcall
lods
daa
mov
inc
cmp
mov
in
add
rolb
testl
setae
incl
push
mov
std
mov
sub
icebp
cmp
mov
mov
out
xchg
add
cmp
lock
xchg
and
xor
push
push
fidivl
push
add
mov
sbb
aad
pop
dec
sahf
into
push
fsts
arpl
push
fs
sar
inc
jns
sbb
add
arpl
icebp
jle
test
ret
repz
fadd
scas
pop
sub
inc
cltd
mov
loopne
jne
movl
ss
into
push
mov
xor
rep
mov
inc
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
loop
mov
adc
adc
xor
js
cmpsb
add
mov
and
dec
pop
push
in
sub
adc
pop
ret
xchg
insl
mov
movsl
insb
outsb
adc
shl
outsb
push
adc
cmp
arpl
xor
add
pop
mov
adc
pop
mov
jge
pop
push
xor
scas
mov
pop
lret
xchg
imul
aas
mov
or
ret
nop
sub
sub
sub
stc
popa
adc
adc
cltd
or
std
shlb
xchg
jo
xchg
outsb
les
hlt
inc
fimull
push
push
insl
aas
inc
das
daa
shlb
fcoms
in
push
jbe
popa
inc
enter
add
in
cwtl
ljmp
test
jb
mov
scas
std
cmp
mov
and
je
push
in
inc
fldenv
xchg
movsb
push
mull
push
and
jmp
les
mov
xchg
xchg
insb
mov
mov
fstpt
mov
mov
or
mov
sti
xchg
mov
push
mov
test
inc
mov
push
out
add
test
mov
mov
mov
rorl
repz
xchg
data16
outsb
filds
sahf
rolb
fs
bnd
lea
push
aad
pop
fiadds
inc
or
adc
fwait
in
dec
int3
push
lods
xor
divl
ret
popa
fbstp
mov
aad
fwait
aaa
into
xor
push
les
cmp
rcrl
xor
mov
or
or
xchg
sbb
inc
outsb
mov
imul
dec
or
insl
popf
add
inc
fst
sti
int3
mov
mov
icebp
cmp
pop
out
cmp
inc
sbb
pop
popf
mov
repz
and
and
dec
add
cmp
loop
jecxz
inc
and
mov
in
mov
mov
aaa
and
push
test
jg
jns
leave
sbb
cs
and
imul
sub
out
pop
or
pop
and
frstor
mov
or
xchg
xor
push
or
jmp
push
lods
or
pop
mov
gs
jmp
sbb
xchg
shld
inc
fstpl
and
cltd
out
add
mov
rorb
addb
rolb
sar
arpl
in
aam
sub
sbb
fisttps
dec
inc
insl
stos
int
push
push
pop
repz
stos
inc
cs
cmpsb
inc
xchg
jns
int3
add
mov
aad
das
in
sarb
cmpsl
rorb
dec
xor
or
jecxz
fldcw
cltd
xor
test
ret
cld
ljmp
push
sarb
push
and
fwait
jb
mov
push
pop
outsl
addr16
jnp
cmp
scas
mov
or
outsb
je
push
add
sbb
popa
ret
mov
out
in
test
add
inc
pop
repnz
jnp
jb
or
mov
stc
fisttps
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
inc
addb
call
bound
pushf
arpl
pop
scas
cmp
jnp
leave
sub
ss
add
add
in
movsl
pusha
lods
sahf
ffree
adc
pop
mov
adc
inc
mov
mov
mov
push
lock
mov
not
mov
jns
jg
jb
mov
fisttps
xchg
addr16
imul
repz
cmp
pop
jbe
mov
in
js
pop
cli
dec
inc
cmp
daa
into
push
add
sub
cmp
add
int3
sbb
jne
jp
push
xchg
adc
insl
inc
jmp
cmp
arpl
xchg
mov
cmpsb
xor
inc
dec
or
add
cmp
stos
movsb
in
popa
sub
fldt
jbe
in
and
pop
or
std
not
fsubs
out
out
xchg
sub
mov
xchg
mov
sbb
dec
std
jae
jmp
fldcw
lret
add
jmp
movsb
add
cmp
mov
add
push
xor
repz
mov
mov
and
mov
jns
jecxz,pt
xor
and
add
xchg
jl
lock
sbb
repnz
ljmp
cmpsl
popf
add
data16
sub
push
into
push
movsl
aaa
data16
cld
and
mov
movsb
xlat
insl
jmp
add
inc
gs
ret
ljmp
lret
sub
out
push
mov
push
daa
mov
push
out
xchg
sub
xor
stos
cmpsl
daa
dec
and
xchg
out
jo
jle
inc
test
push
lahf
and
popf
sbb
jne
cmc
pushf
xchg
mov
mov
leave
xchg
out
mov
cmp
jp
pop
pop
and
mov
mov
dec
stc
mov
inc
sub
stos
sub
adc
mov
jle
dec
jge
and
sub
sub
pop
lea
sub
je
jmp
leave
push
repnz
cmp
dec
inc
sbb
and
xor
sub
fadds
notb
popf
xchg
scas
adc
mov
and
sbb
jg
pop
and
shll
xor
push
mov
hlt
mov
or
xchg
rol
mov
mov
sub
pop
movsl
aad
lea
jne
push
imul
pushl
rclb
xchg
stc
push
addb
sahf
lods
dec
jno
mov
stos
and
dec
lcall
into
clc
mov
inc
cwtl
mov
pop
inc
outsb
mov
sub
out
pop
adc
jl
stc
std
int
jb
cmpsb
cwtl
cmpsb
pop
push
push
jne
cli
adc
or
mov
imul
push
cmova
pop
stos
dec
mov
push
lea
dec
imul
add
xorb
mov
popl
xor
stc
pop
std
mov
or
cs
dec
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
push
cmpsl
mov
mov
adc
jo
adc
loopne
mov
out
cltd
daa
mov
add
push
inc
js
and
test
lret
movd
out
andb
xor
in
cmp
bound
push
and
dec
jge
in
cli
ljmp
fsubrs
add
jecxz
dec
ret
jmp
popf
dec
aam
loope
sub
xor
mov
jnp
mov
mov
test
loope
jae
int
mov
daa
addb
lcall
pop
int3
test
pop
mov
call
fsubs
sbb
mov
xchg
pusha
pop
mov
cmp
ret
js
push
inc
add
pop
pop
mov
mov
cltd
pop
ljmp
inc
sub
stc
push
leave
js
sbb
divl
xchg
pop
add
jb
sbb
aas
aas
mov
fstps
adc
scas
dec
mov
dec
or
mov
shl
dec
or
cmp
push
sahf
pusha
xor
into
test
orl
pop
cwtl
jb
outsb
repz
dec
je
xchg
dec
pop
gs
jmp
loop
inc
sti
mov
jecxz
jp
call
stos
xchg
scas
in
xchg
ror
fisttps
fadds
stc
out
daa
cmpsl
cmpsb
in
fs
fimuls
std
push
adc
out
sbb
sbb
pop
stc
add
enter
add
js
xor
daa
fmull
or
xchg
or
call
popf
jmp
jb
jge
pop
scas
dec
jmp
cwtl
xchg
jle
outsl
insb
and
test
mov
rol
inc
hlt
bound
hlt
cmp
ja
push
or
jbe
ret
mov
sarl
inc
lds
adc
js
lahf
outsb
into
xlat
imul
xor
xor
inc
inc
in
pusha
iret
dec
cmpsl
fimuls
rclb
test
push
jnp
movl
lret
add
out
stos
lret
inc
xchg
scas
ret
bound
je
pushf
jno
pushf
add
push
sbb
daa
iret
sbb
stos
fldt
mov
rsqrtps
pop
imul
jecxz
xchg
mov
setle
loop
es
inc
jo
jge
mov
dec
ret
outsl
fbld
dec
push
add
sbb
pop
int
cmovb
mov
lret
push
adcb
mov
cmp
push
hlt
rolb
daa
cmp
ret
jl
cwtl
mov
mov
push
sbb
mov
cmpsl
sub
add
mov
add
lods
es
inc
adc
mov
divb
mov
xchg
jecxz
movsl
xchg
pushf
mov
jg
out
add
ret
adc
mov
lods
mov
mov
xchg
sbbb
aam
jbe
dec
or
lret
jb
push
push
dec
xor
inc
jno
out
fbld
sbb
lret
jb
enter
cld
mov
push
jns
xor
jno
or
in
inc
sub
xlat
movsl
cmp
shrb
imul
enter
adc
loope
icebp
or
mov
or
add
jne
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
and
push
push
mov
adc
adc
sbb
sbb
push
scas
stc
test
stos
scas
mov
fadd
sarb
mov
dec
mov
sub
movsb
or
cmp
mov
out
lds
mov
adc
test
sub
clc
rolb
mull
adc
mul
mov
lods
cmpsl
cmpsb
push
pushf
out
test
sub
dec
mov
mov
popf
sub
fmuls
lods
push
mov
out
pop
fwait
mov
or
sbb
ljmp
daa
test
xor
mov
add
sbb
lods
or
push
pop
xchg
rcrb
sbb
call
shl
daa
adc
jge
out
mov
pop
sub
xchg
addr16
and
push
push
mov
inc
cld
cmp
pop
push
pop
mov
fdivrp
shll
gs
cmpsb
jmp
inc
sar
cmpsl
inc
lds
mov
in
push
stos
mov
into
mov
xor
cltd
cs
cli
add
flds
in
dec
jp
cmp
xchg
mov
enter
icebp
scas
pop
cmpsb
push
sbb
in
and
sbb
fucomp
cltd
and
cld
cmp
ljmp
add
dec
sbb
fisubrl
and
mov
lods
or
jg
xchg
movsl
xchg
subb
lods
sti
cmpsb
imul
push
sub
or
jcxz
outsb
pop
shrl
mov
fildl
cmp
sbb
push
dec
aam
cmpb
jecxz
adc
and
mov
add
dec
fs
push
pop
arpl
mov
cwtl
pop
and
mov
cwtl
mov
inc
pop
mov
cli
lds
mov
leave
cmp
mov
jno
sub
ds
and
test
cmp
fidivrs
mov
pop
adc
jp
add
scas
mov
mov
int3
dec
mov
sti
xchg
or
les
or
std
js
fcoml
mov
inc
test
add
das
push
pop
and
mov
adc
mov
ds
jae
das
jp
lods
shl
xchg
in
inc
ret
push
mov
cmc
cmp
dec
push
je
ss
jnp
cli
push
orb
mov
lds
jo
pusha
push
mov
stos
sub
jmp
push
xchg
add
js
mov
ror
mov
mov
cwtl
imul
jmp
les
leave
sbb
pushf
movsl
adc
sbb
jo
ljmp
rcrl
cmp
repnz
cmp
dec
xor
fildl
mov
jge
fisubl
daa
fmull
cli
pop
and
xchg
iret
sub
mov
mov
in
mov
gs
dec
insl
adc
arpl
mov
cmpsb
or
jnp
aam
sub
xchg
out
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
add
cmp
popf
test
pop
pop
xchg
add
xchg
bnd
push
mov
and
inc
mov
add
fisubrs
lcall
aam
div
pushf
js
pop
scas
mov
sub
jl
jecxz
sub
pop
ret
ds
cltd
pop
xchg
sbbb
repz
test
pop
out
fucomi
outsb
roll
and
xchg
repz
mov
add
loope
mov
jge
pop
dec
test
add
divl
push
imull
push
out
inc
jp
pop
shr
jne
shll
cmpsb
jb
nop
les
add
rcrl
jl
and
sbb
mov
cmp
adc
push
adc
push
loopne
cli
push
lods
pop
icebp
jge
shll
shl
cmp
fstps
jnp
or
adc
cmpb
fldt
ja
fisubs
xchg
fldenv
idivl
or
les
loope
mov
mov
aas
lea
mov
pop
lret
mov
push
lret
push
pop
dec
jmp
shrb
or
adc
dec
out
inc
insb
add
cwtl
in
pop
js
adc
lret
adc
int3
lods
insb
mov
mov
push
xchg
loopne
jbe
inc
pop
adc
fnstsw
lods
adc
jno
out
add
loop
pop
popf
aas
roll
mov
pop
push
adc
or
mov
scas
mov
lret
repz
add
out
xchg
mov
fs
cmp
adc
cltd
mov
fidivrl
push
cld
and
mov
lret
dec
adc
out
lea
iret
ficoml
les
fmull
scas
dec
aaa
mov
xor
out
pop
out
test
mov
mov
cmc
bound
jecxz
xchg
pop
xorl
cmp
jg
adc
jecxz
xchg
in
jb
leave
ljmp
std
sbb
push
cwtl
pop
outsb
mov
inc
loopne
push
loope
inc
maxps
sub
mov
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
pop
dec
mov
stos
movlps
push
call
out
dec
jmp
xchg
sub
add
dec
adc
ljmp
daa
push
push
and
jl
into
mov
sarb
dec
dec
js
out
sub
adc
push
movsl
mov
xchg
sub
or
add
or
jl
and
leave
pop
inc
jl
fcmovnu
or
daa
aas
aam
mov
adc
fwait
pop
xor
pop
ljmp
cld
scas
aas
arpl
jns
xchg
aam
add
cmp
popf
dec
inc
sarb
inc
jb
xlat
ljmp
dec
jno
movsb
add
cwtl
push
ljmp
jbe
mov
dec
sbb
fucomp
int3
xchg
jnp
int
pop
sbb
mov
pop
iret
arpl
mov
pop
imul
stc
mov
push
fnstenv
subb
mul
cmp
lods
jle
adc
sub
xchg
and
mov
mov
mov
mov
lods
daa
lock
mov
mov
mov
nop
xor
jp
xchg
dec
movsl
cmpsb
xor
hlt
leave
inc
xchg
cmp
sarb
fsubr
adc
inc
test
add
adc
jnp
scas
adc
sti
hlt
daa
nop
or
fnstcw
cltd
pushf
stos
aaa
pop
mov
mov
or
shrl
mov
pop
jno
mov
cmp
inc
insl
push
or
sub
add
or
pop
out
pop
xchg
mov
sub
enter
das
xor
mov
and
pushw
popf
xor
in
jle
xor
mov
jle
hlt
movsl
sub
xor
push
sub
sub
clc
mov
shll
ss
or
sbb
std
jmp
add
call
mov
test
sub
cmp
xchg
out
adc
sub
push
fwait
xchg
insb
mov
insl
leave
xor
cmp
pop
cwtl
mov
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
dec
fdivrs
stos
movlps
mov
cli
ljmp
mov
xchg
xor
scas
rclb
in
push
ss
stos
mov
sub
je
add
inc
sbb
push
test
outsb
mov
fisttpl
cwtl
push
xor
cmp
xchg
lods
or
cmpsl
push
lret
push
pop
adc
ja
add
mov
bound
rorl
inc
dec
xchg
mov
sbb
enter
hlt
negb
punpcklbw
adc
sahf
stos
mov
leave
push
add
mov
sub
les
mov
jb
xchg
js
pop
jne
outsl
mov
adc
push
add
mov
popa
lds
jle
inc
cmpsb
sub
ret
mov
bound
xor
clc
xor
out
in
mov
add
mov
or
inc
and
repnz
shrl
jae
imul
mov
push
scas
std
add
jne
jbe
lret
lahf
inc
mov
mov
movsb
scas
inc
das
sbb
dec
psllq
sub
cli
les
subb
cltd
mov
icebp
divl
outsl
sbb
pushf
aaa
push
cmp
and
xor
cmp
cmc
fisubl
and
sub
nop
jb
pop
fisubl
or
or
pop
cwtl
arpl
lret
xchg
les
adc
lock
adc
inc
mov
roll
lock
lods
loopne
pushf
and
fmuls
pop
outsb
pop
sbb
iret
jle
stc
xor
mov
xchg
fwait
aad
sub
add
sbb
mov
mov
sub
test
les
mov
imul
dec
cmp
and
movsl
in
scas
push
stos
iret
jmp
outsl
adc
neg
jmp
fists
jg
je
shrl
lods
fwait
dec
repnz
test
adc
movsl
xchg
cmp
add
mov
push
xchg
sti
push
in
xor
out
stos
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
push
aas
nop
js
mov
adc
icebp
scas
sbb
inc
or
popa
jne
dec
icebp
divb
mov
push
add
push
sbb
inc
push
push
in
jne
mov
test
add
mov
scas
cmp
out
cwtl
mov
jg
rclb
stos
mov
std
inc
push
inc
imul
push
sbb
pop
inc
lret
scas
fcoml
je
mov
test
xor
out
inc
xchg
pop
mov
xor
xorl
mov
push
jne
gs
sub
in
fildl
test
leave
mov
aam
and
mov
roll
push
sbb
dec
and
or
cmp
xchg
jbe
xchg
push
and
cmc
movsb
xchg
ficompl
push
xor
cmpsb
pop
jecxz
xchg
fs
add
pop
out
jb
sub
pop
adc
movsl
xor
hlt
inc
outsl
sbb
jnp
bound
and
fstp
dec
popa
mov
pop
sub
leave
jle
dec
subl
pop
iret
aad
jmp
xchg
pop
xor
mov
mov
cmpsb
fsts
add
fsubrl
push
xchg
jp
fdivs
data16
pop
stos
call
or
aas
or
je
jmp
repnz
mov
adc
push
or
xor
dec
insl
jo
cmpsb
mov
pop
int3
dec
dec
mov
pusha
mov
xor
mov
push
push
dec
xor
dec
dec
cli
insl
cmp
xor
fstp
mov
push
std
lds
movsb
into
mov
jecxz
cmp
outsb
push
fs
out
xchg
or
pop
stos
cmpsb
cmp
and
outsb
sub
repnz
in
fdivrl
push
add
sahf
mov
lahf
sub
jns
test
cmp
mov
add
imul
add
nop
dec
leave
xchg
adc
add
inc
push
das
in
int
into
xchg
jbe
cld
push
or
iret
mov
mov
pop
inc
mov
cmpsl
sub
pop
push
repnz
fsubrp
inc
ds
jecxz
and
mov
push
dec
pop
mov
mov
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
jle
jle,pn
lahf
adc
stos
movlps
roll
out
mov
push
loop
pushf
and
push
test
int3
clc
mov
imul
insl
mov
adc
stos
popa
or
mov
in
mov
mov
add
sbb
imul
mov
pushf
jo
xchg
mov
lods
xchg
sbb
xor
aaa
xchg
push
lahf
lea
cmpl
push
les
faddl
ljmp
jl
push
dec
ds
pop
cmpsb
or
dec
mov
sub
mov
pusha
popa
leave
mov
xchg
and
pop
push
jno
repnz
outsb
in
in
loope
sbb
mov
repz
leave
mov
mov
dec
testb
jmp
addr16
mov
xorl
inc
daa
cmpsb
bound
dec
xor
rcl
es
dec
fisubl
pop
add
nop
pop
stos
sarl
out
in
out
pop
xor
mov
mov
enter
add
mov
repz
inc
mov
or
xchg
push
dec
in
pop
loope
mov
and
xchg
fcmovu
sbb
stos
sub
mov
dec
sbb
cmp
or
adc
out
add
pop
or
jbe
mov
nop
and
jmp
mov
scas
and
jno
xorb
add
xchg
in
jmp
xchg
xchg
int3
aaa
shll
mov
and
lea
dec
lock
sahf
pop
or
push
xchg
add
inc
out
inc
orb
cmp
rol
xchg
mov
imul
andl
xor
test
pop
dec
std
dec
fs
sub
inc
into
xchg
cld
imul
inc
mov
in
mov
push
jecxz
outsl
insl
and
jb
cltd
lret
sub
dec
and
inc
sub
test
fisubrl
lret
mov
lret
pusha
push
cmpsl
fsts
jbe
fs
jg
or
arpl
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
andb
pop
mov
xor
fcom
sbb
dec
adc
lret
push
xchg
xchg
lock
icebp
and
jmp
in
push
rorl
int3
loopne
push
fs
xchg
outsl
sub
xchg
lret
pusha
push
popf
mov
add
in
or
sbb
sarl
mov
aas
add
jg
mov
mov
aas
je
mov
lock
sub
and
mov
dec
out
dec
lods
cmc
leave
cwtl
mov
and
fbld
sbb
or
jp
cmp
cmpb
push
mov
sub
jecxz
push
adc
dec
into
ljmp
and
loope
pop
sti
jmp
push
inc
repnz
dec
jecxz
fldl
push
outsb
sbb
adcb
insb
dec
sbb
ja
mov
xchg
xorb
ds
sub
mov
push
inc
push
push
nop
cmp
dec
stos
gs
ret
and
pop
outsl
inc
rolb
xchg
frstor
add
jle,pn
mov
stos
loop
repz
dec
sbb
dec
es
mov
push
test
sbb
icebp
sarb
sbb
or
ljmp
adc
shrb
adc
les
clc
loopne
xchg
push
pop
or
movsb
jp
and
or
xor
jns
adc
add
loope
or
mov
repz
loop
inc
imull
sbb
dec
mov
xchg
or
imul
mov
cmp
lds
ljmp
and
cmp
add
mov
mov
insb
outsb
std
clc
xlat
or
imul
pop
ret
pmaxub
jecxz
pushl
push
xor
pop
lcall
mull
jnp
scas
or
fbld
mov
adc
fpatan
mov
stc
mov
cmp
jle
lcall
xor
aam
push
fwait
xchg
inc
sub
cmc
push
pop
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
rclb
sub
bnd
mov
xor
test
fistl
std
cmp
cltd
fsts
jae
mov
or
jb
add
mov
jne
ret
outsb
int
test
rorl
sub
lods
push
repnz
test
add
sbb
mov
mov
scas
hlt
jbe
rcll
inc
test
inc
ficoms
mov
int
loopne
int
xor
mov
in
std
xor
ja
pop
push
mov
jb
stos
pop
sub
and
inc
dec
inc
or
or
xchg
lds
addr16
mov
out
and
jns
test
mov
and
leave
popa
cli
imulb
push
aaa
iret
loopne
popa
pop
repnz
jg
mov
outsl
jns
lcall
popa
adc
jnp
pop
loopne
sub
mov
lahf
add
movsl
sub
stos
lcall
insb
repnz
pop
xor
int3
jge
test
adc
imul
fdivl
aam
shlb
in
in
dec
mov
pop
out
imul
push
xchg
jno
and
xchg
sbbl
and
mov
imul
fs
imul
mov
stos
negb
loope
mov
cli
dec
cs
sahf
test
or
jp
pop
mov
and
or
sub
fisubrs
mov
cmpsb
leave
push
push
loopne
sbb
fsub
jp
adc
adc
sbb
les
dec
popa
jne
outsb
xor
movsb
adcb
adc
daa
stos
xor
cmp
mov
mov
into
test
test
cmpb
jl
lock
stc
call
cmc
cmp
mov
orl
iret
pop
orb
inc
test
int
int3
adc
cwtl
xor
xchg
test
sub
dec
daa
into
test
ret
arpl
out
mov
jnp
lret
dec
mov
popa
push
test
sahf
test
les
xor
loope
adc
mov
imul
push
cltd
out
mov
out
sbb
fistl
jo
stos
mov
mov
ret
loopne
lea
mov
jecxz
movsl
cmp
lods
insb
orb
int3
sub
in
test
sbb
leave
sub
push
inc
and
adc
pop
mov
mov
pop
push
or
mov
mov
push
data16
mov
shll
jb
pushf
mov
jg
mov
mov
cli
jmp
pushf
jmp
sbb
iret
aad
push
pop
lcall
addr16
sbb
test
adc
andb
dec
lcall
arpl
sub
or
mov
fists
push
loopne
sub
push
pop
mov
sub
std
pop
mov
daa
ja
pop
test
dec
pop
mov
sbb
inc
cmp
mov
sub
push
gs
in
test
inc
or
xchg
fwait
lock
repnz
and
es
pop
jle
push
lcall
sbb
push
in
xor
out
jnp
call
dec
inc
test
mov
pop
shrb
add
push
ja
data16
test
stc
cld
adc
push
dec
test
mov
cmp
outsl
push
mov
inc
loope
cmpsl
pop
subb
cs
mov
shrb
dec
mov
popf
dec
into
clc
dec
imul
ds
bound
out
ror
dec
adc
cmp
inc
xchg
xorl
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
shlb
pop
adc
adc
test
loope
or
sbb
bound
pop
in
icebp
ss
sbb
mov
cli
lds
inc
sbb
push
lods
fwait
push
mov
mov
decb
pop
and
bound
inc
es
pop
dec
loope
mov
and
lcall
test
sub
pop
jno
jns
cwtl
fstl
fsubrs
or
arpl
adc
arpl
mov
clc
mov
into
and
adc
sub
sarl
push
push
mov
ss
or
pop
push
jmp
push
imul
push
sahf
add
repnz
sbb
or
sub
addr16
jno
into
cmp
xor
sub
xchg
test
jno
jno
sbb
xchg
popf
std
and
fsub
ja
orl
ret
cld
sub
mov
push
xchg
jmp
inc
dec
jb
ret
adc
sti
mov
xchg
dec
lock
mov
inc
decl
mov
dec
jmp
push
ret
les
in
xor
in
shrb
mov
into
dec
or
lods
xchg
shrb
fs
fiadds
cmpsl
xor
xchg
or
lret
pushf
lahf
dec
movsl
std
add
repnz
gs
jb
incb
lea
push
and
adc
or
rcrb
sbb
cmpsl
je
out
jns
lods
jp
xchg
dec
lock
or
faddl
dec
xchg
out
mov
xor
inc
outsb
stc
push
or
cli
cmp
sub
push
add
je
addr16
pop
repnz
inc
xlat
mov
test
mov
subl
into
or
adc
jecxz
push
aad
or
ud0
xor
jp
pop
and
xlat
push
sub
sbb
pop
jmp
xor
movq
cmp
add
rcr
fcoml
jo
and
mov
cmp
fs
jle
push
cs
fwait
int3
shll
push
cmp
mov
je
pusha
mov
mov
cmp
sbb
ljmp
push
add
lahf
aad
js
shlb
add
cld
xchg
test
inc
popa
xchg
mov
xchg
pop
xor
add
movsb
xchg
aam
cmp
stos
stos
mov
mov
jbe
push
les
out
ret
fistps
fcoml
cmpsl
sbb
xor
daa
cli
jnp
icebp
lahf
ja
mov
mov
push
jle
or
fwait
aam
fwait
pop
inc
pusha
int3
xlat
es
mov
addr16
dec
ja
jnp
in
or
cmp
roll
sub
fs
fstpt
xor
andl
pop
mov
imul
adc
add
cmpsl
push
std
sub
jbe
xchg
jnp
fwait
xchg
xor
insl
push
add
sbb
xor
dec
in
sub
movsl
out
fisubrs
ja
adc
inc
fcmovbe
test
ja
sub
das
push
inc
add
loop
sbb
adc
and
stos
lcall
mov
jl
xchg
mov
ror
mov
cltd
xchg
xlat
cmp
xchg
push
incb
push
insl
imul
mov
js
addl
rcrl
jecxz
stos
inc
icebp
dec
mov
adc
imul
adc
jmp
popf
ljmp
arpl
sbb
daa
push
or
jo
xor
hlt
mov
mov
rclb
int
popf
nop
sub
mov
pop
ret
pop
mov
cmp
sbb
inc
pop
jp
in
sahf
sbb
sub
call
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
xor
insb
in
mov
adc
movlps
jb
leave
das
add
dec
mov
imul
sub
dec
rorl
sub
mov
clc
mov
push
fcoml
mov
mov
jmp
lret
fisubrs
rdmsr
and
push
cmpsl
mov
add
push
shr
call
iret
jp
mov
push
sbb
stos
push
out
dec
dec
push
jbe
jecxz
pop
push
xor
rol
mov
int3
pop
scas
popf
dec
sarl
sbb
in
in
mov
ljmp
cmp
cmp
mov
push
pop
or
mov
rclb
mov
ds
icebp
xchg
fidivrl
not
cmc
jae
shrl
pop
out
ss
hlt
cli
pop
lods
cli
lea
test
xor
pop
pop
jecxz
shrl
test
pop
data16
or
and
xor
add
xchg
add
outsl
add
xchg
inc
mov
mov
sub
loope
pop
push
in
mov
mov
movl
call
dec
shr
inc
adc
repz
iret
mov
repz
testb
xlat
mov
jmp
aaa
adc
aam
fldl
es
cmp
push
xchg
push
add
adc
dec
lret
arpl
xlat
loopne
in
add
ljmp
mov
pop
xor
push
aad
add
cs
pop
push
aam
inc
xor
inc
inc
sarl
lock
aaa
aas
sub
add
in
aad
push
sbbb
sub
shrl
repnz
test
loopne
add
scas
cld
xor
push
negb
in
decl
lock
xchg
and
xor
and
cli
aam
das
ds
cmc
add
mov
dec
xor
cwtl
insl
sbb
push
jb
pop
outsb
or
pop
fprem1
fisubrs
inc
fisttpll
lcall
jg
les
push
jle
and
jp
dec
cmc
repz
cs
mov
pop
jecxz
or
nop
adc
test
test
out
shrl
xchg
subl
jmp
das
pop
jns
sti
dec
cmpsl
stc
out
push
mov
cmp
std
mov
dec
jo
xchg
sub
ret
fwait
dec
and
clc
cltd
std
sub
cs
inc
push
scas
out
shrl
xchg
add
add
lods
int3
ljmp
aaa
jno
cs
aad
and
cli
insl
addb
lret
mov
arpl
lods
push
das
lret
jnp
add
push
movsb
push
mov
push
leave
arpl
fiadds
insb
cmpsb
xchg
inc
xchg
pop
jb
leave
loopne
imul
int3
in
daa
call
imul
sub
add
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
leave
imul
int3
shrl
jne
loopne
stos
mov
pop
and
loope
insb
xchg
rcll
cmp
add
add
jnp
or
xchg
push
mov
dec
mov
pop
ficoml
xor
ja
inc
arpl
cmp
pop
sbb
adc
inc
fs
decb
mov
adc
ret
push
outsb
outsl
xchg
and
das
iret
pop
inc
imul
mov
push
rol
push
bound
sahf
and
xor
movsb
mov
mov
mov
and
rcr
lret
out
fisttpll
pop
sub
mov
add
sbb
mov
cmp
cli
stos
imul
dec
dec
dec
shll
mov
insl
push
cmpsl
js
jg
scas
gs
insb
pop
mov
xchg
rorl
cwtl
push
xchg
add
in
mov
pop
jbe
stos
jmp
into
enter
out
das
test
pop
cmpsb
jbe
rorb
in
pop
stc
adc
ret
icebp
jae
stc
ljmp
cltd
fldcw
xchg
popf
sub
les
fidivl
or
pusha
xchg
xor
add
sub
adc
pop
int3
clc
notl
arpl
pop
iret
push
lds
push
jp
cmpsl
cmp
cmp
int
movb
movsl
inc
les
testb
sub
test
aaa
xor
popa
daa
mov
xchg
cmpsl
test
mov
fcoms
icebp
mov
mov
sub
test
and
aaa
dec
daa
ficompl
jmp
enter
pop
sbb
inc
sbbb
shlb
jnp
mov
nop
movsl
js
aad
and
enter
movsl
repnz
xchg
push
sub
cmpsl
lahf
mov
in
inc
shl
xchg
push
movl
mov
xor
mov
jmp
rolb
pop
lret
popa
repz
dec
mov
out
mov
inc
sub
pushf
xor
adc
xchg
push
push
jbe
jmp
jnp
imul
cli
shl
aas
arpl
inc
lret
mov
adc
scas
int3
loopne
fists
stos
pusha
sbb
or
or
cmp
aaa
iret
cmp
sub
out
jnp
cli
inc
mov
daa
not
es
in
mov
mov
pop
jns
lods
cmp
mov
bound
mov
rep
cmp
mov
mov
ret
pusha
insl
lret
jae
push
lret
fmull
pop
call
adc
loopne
mov
aam
stos
ljmp
rclb
fnstcw
or
outsb
pop
sub
sub
insl
call
in
xlat
push
ret
mov
iret
mov
mov
cltd
sbb
jg
add
cmp
loope
cmpsl
loope
and
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
es
jge
adc
movlps
add
jns
cmp
outsb
in
add
outsb
int3
push
cltd
jmp
mov
or
mov
sbb
xchg
repnz
outsb
adc
mov
fsubrs
notb
cmp
add
int
imull
out
adc
nop
add
sbb
les
fildll
loope
xor
sbb
insl
clc
xchg
xchg
sbb
xor
mulb
js
push
xrelease
mov
pop
hlt
call
push
daa
ljmp
xchg
jbe
je
in
imul
push
test
sub
cli
jp
dec
xchg
xchg
xchg
xchg
push
out
pop
or
imul
sub
adc
scas
xlat
test
cli
addr16
xchg
mov
mov
add
and
pop
addb
push
jne
clc
sbb
inc
cmp
out
into
dec
in
sbb
add
or
and
adc
das
test
sub
outsb
aaa
inc
or
push
jge
mov
in
mov
sbb
mov
int3
fisttps
lods
cmp
das
push
mov
test
leave
fstpt
and
inc
stc
cwtl
jae
dec
popf
adcl
sbb
jbe
ja
mov
jne
pop
jne
push
add
jb
int3
rorb
int
inc
inc
gs
xchg
out
xor
mov
mov
sbb
dec
dec
jns
mov
insl
or
repz
lahf
push
jp
int
lahf
cwtl
mov
jbe
xor
jne
out
mov
jg
lea
sbb
aas
aas
mov
shlb
lret
xchg
pusha
pop
jp
out
in
mov
mov
sub
pop
rolb
mov
insb
jp
lods
inc
stos
mov
adc
dec
mov
insl
dec
push
das
push
ret
jp
movsb
test
push
xlat
mov
fadds
fstps
sbb
mov
dec
movsl
or
sub
loop
xchg
inc
repz
xor
movsb
mov
lods
in
mov
inc
stos
stc
jge
adc
rorb
pop
aam
or
cltd
mov
shrb
cmpsl
cmpsb
sbb
sahf
mov
xchg
sub
sub
dec
mov
adc
pop
pop
xor
pop
rcll
inc
je
inc
dec
push
mov
push
cmpsl
movsl
stc
andb
push
mov
stos
and
bound
pop
dec
call
sarl
xor
lea
cmp
fst
int
leave
jo
pop
mov
add
int
lret
and
es
scas
pushf
mov
mov
jb
aaa
inc
or
mov
pop
jp
dec
aam
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
jbe
fdivrs
or
jns
ljmp
mov
mov
sub
in
dec
xchg
sub
js
cmp
push
add
mov
mov
dec
xchg
insb
or
inc
test
pop
jmp
mov
lods
int3
outsb
xchg
orl
and
adc
iret
loope
rorb
es
in
inc
ds
pop
cld
shrb
jl
flds
aaa
xlat
mov
roll
sbb
imul
orl
fsts
aas
popf
rcrb
jbe
adc
pushl
fmul
inc
hlt
mov
cltd
add
movsb
sbb
or
dec
mov
pop
or
daa
inc
cmp
cmpsb
mov
test
xchg
cmp
adcl
sbb
loopne
insl
mov
pusha
sub
pop
hlt
or
std
push
pop
or
or
clc
test
pop
xor
fwait
pop
lahf
add
jg
mov
test
dec
pop
or
mov
dec
int3
test
ret
xchg
sub
fwait
ret
or
dec
pusha
lahf
dec
add
pusha
cmp
aas
dec
cmp
ficomps
jo
in
aad
cmp
jns
inc
or
fnsave
sub
rcrl
inc
xor
jmp
jns
cmp
in
cmp
into
ret
cmpsb
imul
mov
cmpsb
or
call
jl
push
int
add
push
ret
push
shll
mov
sti
in
add
jb
notb
test
cld
rcr
push
call
mov
pop
mov
rcrb
lea
add
mov
in
rcll
mov
ficomps
ljmp
shrb
scas
fcomip
les
mov
mov
hlt
add
xor
xchg
test
out
es
fs
or
and
cld
jle
jge
scas
mov
jnp
pop
shlb
das
aad
push
or
and
mov
ret
cltd
push
push
sbb
cmc
sub
cmp
push
ja
cmc
xor
leave
out
adc
ljmp
mov
or
imul
fnsave
lods
xor
shrb
mov
addr16
getsec
pop
pop
pop
pop
lds
cs
dec
and
mov
push
jns
outsl
mov
jbe
fistps
xlat
mov
popa
arpl
int3
fs
dec
cmpsb
jno
mov
hlt
mov
jne
int3
in
dec
call
repnz
xor
test
xchg
aaa
lret
icebp
jns
push
push
shll
push
sub
out
imul
sub
cmp
jno
cmpsl
mov
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
fdivr
xor
jae
fwait
sti
mov
and
mov
and
sub
add
and
data16
push
or
xlat
mov
cmp
sarb
pop
push
push
in
fcomps
add
push
mov
or
xlat
and
xchg
adc
push
sub
jns
rcrl
insb
lock
daa
movsb
imul
test
sti
cmpl
jle
sbb
test
and
jae
jnp,pt
jbe
jg
cmpsb
push
jecxz
jnp
push
mov
mov
sub
and
mov
in
inc
sarb
lods
fcomi
xchg
adc
imul
add
mov
xchg
xchg
sbb
or
push
cmc
stos
pop
cltd
inc
icebp
mov
out
sbb
pop
fmul
and
xor
sbb
dec
jmp
dec
dec
dec
cli
pusha
popf
cwtl
stos
call
xor
add
dec
push
dec
jo
dec
or
xchg
popf
or
dec
push
lock
popl
dec
jb
and
frstor
leave
jne
aaa
ss
cli
mov
mov
xlat
xchg
push
dec
adc
je
inc
cmp
sub
dec
mov
es
cli
xchg
movsl
mov
popf
call
in
cli
incl
cld
pop
inc
push
mov
cmpsb
shll
jno
jno
xor
inc
adc
cmp
inc
shll
push
outsl
bound
jno
cmp
jb
xchg
lea
xchg
inc
adc
mull
popa
jge
jg
sti
in
xor
push
lahf
outsb
push
fsubs
shr
jae
pushf
lret
sahf
or
loope
cmp
daa
jg
repnz
mov
out
popf
or
or
or
les
shll
inc
cmpsb
lods
pop
push
lock
cmp
ss
add
cli
pop
and
je
cmp
insl
or
push
imull
jb
mov
jle
cmp
xchg
in
std
push
lcall
vminsd
test
mov
mov
mov
inc
pusha
xchg
sarl
cmp
mov
inc
adc
add
negb
loopne
mov
add
dec
iret
add
icebp
mov
repnz
dec
lods
xchg
mov
mov
pop
orb
icebp
push
rcl
xchg
out
lds
cmp
iret
scas
jmp
sbb
mov
xor
pop
add
inc
or
or
rol
fmull
nop
inc
mov
jb
insl
adc
pushf
gs
in
jg
mov
adc
xchg
xchg
sbb
jl
bound
sbbb
cld
jno
iret
jl
xor
mov
cmp
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
dec
loopne
jle
adc
or
sub
scas
adc
jp
pop
pop
enter
pop
negb
stc
jb
clc
enter
push
aam
fwait
push
jle
icebp
outsl
inc
mov
cmp
push
adc
mov
scas
dec
xchg
cli
jge
pop
popa
xchg
pop
jl
out
enter
mov
addr16
leave
aam
adc
iret
out
stos
es
iret
sub
sbb
rcll
xchg
gs
jns
int3
iret
pop
lds
add
loop
test
mov
mov
bound
or
int
adc
js
ret
hlt
pusha
xchg
js
mov
jbe
xor
jle
and
xadd
cmpsb
jl
xor
push
std
and
and
ds
iret
sub
fnstenv
mov
mov
out
stc
aam
lahf
je
add
fsubs
loopne
aas
loop
push
jecxz
lahf
jle
adc
inc
clc
out
iret
jg
dec
sarb
cli
stc
inc
in
test
mulb
mov
and
cmp
fwait
lea
clc
std
and
mov
xchg
xor
js
xchg
mov
add
or
fidivl
cmp
out
insb
pop
shlb
imul
pop
lret
push
pop
sub
or
call
je
mov
lods
xor
sbb
mov
das
jecxz
and
bound
lret
mov
or
jmp
stc
jns
test
jmp
lds
adc
xor
loop
lods
pop
test
fsubs
ss
or
push
leave
int
jmp
shll
cmp
sbb
mov
mov
in
popf
stos
js
in
imul
aad
cvtps2pi
fs
lods
rcr
push
in
pusha
jns
mov
dec
lret
das
fwait
xchg
fstps
pushfw
push
std
dec
or
mov
pop
aad
sbb
fimull
fidivrl
cmovg
int3
sbb
dec
mov
lcall
leave
dec
inc
js
mov
std
das
mov
addb
jns
add
cmp
lods
es
cmc
mov
mov
pushf
dec
scas
mov
popf
mov
mov
scas
or
and
mov
repnz
mov
mov
scas
lods
fcomps
xor
inc
ss
pop
jb
jae
push
adc
mov
xor
push
xchg
push
dec
aas
jg
ffree
sub
cli
or
sahf
test
test
mov
rcrb
mov
pop
push
xor
push
fsubp
mov
mov
sbbl
mov
push
in
mov
or
dec
addr16
in
add
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
inc
sbb
jle
test
adc
inc
inc
stos
lea
inc
scas
and
xor
push
aad
roll
mov
and
or
cmp
dec
mov
jg
pop
adc
mov
sub
fcom
fsubrs
std
push
subl
mov
cmp
mov
xor
out
sub
ljmp
sub
sub
negb
push
dec
int
mov
out
xor
or
addl
mov
out
cwtl
lock
push
jne
nop
fmuls
push
popf
ljmp
jnp
pop
cmpsb
sbb
xchg
stos
inc
adc
push
sub
insb
lahf
shlb
sbb
jbe
shl
cmpsl
adc
pop
push
roll
pop
inc
pop
adc
shll
cmc
pop
vcvtsd2ss
pushf
mov
nop
xchg
ss
cwtl
mov
mov
pop
ljmp
jmp
enter
push
enter
lret
hlt
mov
sbb
cs
and
out
add
fidivrl
push
out
and
dec
xchg
cli
xchg
clc
sbb
inc
xor
cltd
jecxz
mov
jbe
jg
sub
rcrl
sbb
jmp
inc
loopne
test
shrb
or
test
stc
cs
int3
loope
cld
mov
sub
jge
cli
pop
mov
dec
push
ret
mov
shlb
fs
jns
dec
mov
mov
mov
fidivl
inc
jecxz
xor
mov
mov
mov
mov
mov
sub
dec
out
mov
xchg
loop
dec
int
add
mov
cmp
pusha
mov
fucomi
int3
into
mov
fwait
mov
mov
cmp
inc
fildl
test
test
xchg
addr16
or
inc
arpl
dec
adc
push
sbb
inc
mov
xchg
sbb
pop
cmpsl
mov
rolb
mov
or
pushf
sbb
mov
pop
adc
inc
push
aam
stos
add
imul
lds
sub
mov
pop
dec
aad
movsl
popa
fidivl
sub
leave
test
cltd
je
incb
imul
subb
xchg
push
push
dec
xchg
arpl
xor
daa
movsl
jae
push
and
sahf
out
mov
push
in
or
xor
fdivrs
ja
add
cld
pop
mov
imul
xchg
cltd
xchg
mov
aas
out
or
pusha
pop
mov
jp
jo
outsb
fcomps
scas
sbb
ja
dec
test
test
cmp
pop
inc
leave
mov
push
iret
add
insl
and
lret
out
sbb
xchg
or
aam
pop
ds
leave
lcall
xor
pop
das
lret
push
out
les
xor
mov
mov
das
stc
dec
cltd
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
add
lret
pop
adc
jp
adc
cmpsl
sub
xor
jns
fs
cmc
pop
pop
adcl
lock
sar
xchg
popa
inc
mov
xchg
arpl
push
jge
leave
insl
pop
sub
js
fistps
mov
in
pop
or
int
out
outsl
jmp
or
jb
push
aaa
lods
cs
and
into
repnz
cs
mov
rorb
add
rclb
loope
cmp
enter
add
sbb
add
sbb
in
pop
inc
test
sub
nop
lahf
lahf
mov
cmp
mov
mov
cwtl
repz
out
movsb
test
push
mov
xchg
dec
push
push
push
add
pop
mov
sti
cmp
lock
int3
pop
lds
int
adc
call
or
call
add
int
ficoml
out
call
mov
or
dec
adc
inc
push
cmpsl
leave
xor
test
jecxz
cmp
or
xor
jecxz
and
jo
into
mov
mov
dec
and
subl
cs
aaa
xor
loopne
mov
sub
sbb
je
push
mov
lods
xchg
stos
or
ss
add
sbb
leave
ljmp
xchg
jmp
sub
ss
jle
cmc
or
ret
sbb
pop
sub
inc
ljmp
into
xchg
inc
and
sbb
sub
jae
mov
cld
mov
and
outsb
and
inc
mov
mov
cltd
push
cli
xor
xsha256
cmpsb
adc
adc
xor
ljmp
cwtl
scas
cmp
inc
push
xchg
shr
std
jge
mov
dec
cld
xchg
mov
fildl
jb
roll
lds
outsb
adc
insb
dec
pop
xchg
in
shrb
out
dec
cli
cmp
inc
dec
addb
and
cli
push
jle
xor
push
xchg
ljmp
scas
push
add
xor
insb
add
hlt
clc
in
or
or
mov
sub
inc
push
push
in
imulb
pop
scas
mov
aad
sbb
or
cld
das
mov
or
rep
or
cmp
adc
xchg
cmp
adc
out
jecxz
pop
test
dec
jns
sbb
inc
sbb
ret
or
dec
xor
add
call
mov
loope
and
lea
scas
je
les
xchg
fcoml
xchg
mov
dec
hlt
mov
arpl
cmp
or
les
adc
stos
fs
out
push
mov
dec
int3
adc
insb
cs
sub
leave
push
cli
push
mov
xchg
mov
in
inc
test
sub
sbb
or
pop
pop
jmp
jg
push
aaa
jp
xor
mov
sbb
pop
loopne
arpl
xchg
imul
fstpl
sbb
mov
aad
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
cmp
mov
jp
adc
mov
mov
aas
jo
mov
xchg
pushf
lock
imul
and
mov
xchg
jne
out
je
jg
test
negl
dec
movsb
mov
pop
xor
rorl
rorl
push
int3
push
mov
cmp
xchg
imul
arpl
lahf
or
pushw
aad
mov
push
adc
popf
popa
and
push
or
or
jl
adc
fwait
push
cmc
push
loope
sub
pushf
and
sbbl
pushf
nop
push
pop
add
enter
mov
mov
or
pushf
lods
jno
insb
fwait
popf
orb
mov
add
adc
sub
jae
out
in
lcall
mov
fwait
test
jl
imul
fwait
sbb
jno
jae
xchg
jns
mov
dec
inc
dec
xor
sub
sub
popa
mov
mov
icebp
mov
aad
push
std
inc
or
std
jo
into
sbb
fsubp
sti
loop
out
mov
or
fdivs
ljmp
cmp
inc
negl
pop
or
add
out
outsl
in
jl
out
cmc
sub
test
or
pop
sub
jg
scas
insb
mov
mov
mov
xor
bound
sbb
sub
mov
xor
or
push
fldt
xor
jl
popf
add
iret
xor
cmp
rolb
sbb
insl
insb
andb
or
inc
aaa
vmwrite
push
jle
addr16
std
pop
add
and
jp
mov
xorb
inc
addr16
stc
pop
repnz
xor
push
stos
pop
lods
inc
or
movsl
loopne
sub
idivl
jb
and
push
ljmp
fs
out
xchg
pop
jne
xchg
jno
out
and
mov
imul
gs
inc
ret
int3
push
cmpsl
adc
push
mov
pushf
cld
or
ss
dec
mov
inc
mov
filds
push
lret
push
jle
adc
fwait
adc
jp
cmp
pop
push
xchg
test
int
lret
push
push
das
mov
int3
mov
fcomip
xor
inc
xchg
hlt
mov
inc
fcompl
gs
jp
cld
cmc
test
enter
jbe
pushf
sub
adc
jl
imul
pop
cli
insb
aaa
pop
je
cmp
mov
push
in
or
dec
adc
dec
clc
or
xor
mov
dec
jecxz
sbb
jp
js
push
pop
xchg
sub
mov
shll
xor
mov
shl
f2xm1
and
lcallw
mulb
add
adc
cli
cmp
rclb
hlt
mov
add
mov
bound
rcrl
icebp
cmp
out
shlb
sbb
insb
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
push
push
push
adc
jp
adc
stos
fsubs
push
enter
push
rorl
xchg
xchg
inc
jb
clc
jge
or
xchg
mov
scas
mov
cmp
fbstp
jge
popa
sbb
xchg
mov
std
mov
add
cmp
cwtl
and
push
cmpsl
inc
xchg
add
or
and
orb
data16
jle
jo
fidivs
int
or
dec
mov
mov
insl
push
jo
ljmp
icebp
jle
pop
popa
inc
test
pop
rorb
incb
js
ja
dec
jbe
pop
xchg
add
dec
inc
mov
xchg
jp
mov
repz
mov
jle
cmp
rorb
test
push
in
sub
jnp,pn
inc
dec
sub
adc
imul
xor
popf
das
mov
cmc
xor
fucom
into
or
test
adc
and
cmp
dec
mov
outsb
dec
in
mov
lret
jno
and
and
cli
mov
aam
mov
ljmp
mov
cltd
stc
stos
mov
outsb
dec
jp
xor
mov
and
in
test
jb
push
in
adc
cmp
cmp
aas
fisttpl
sub
fldt
sbb
pop
adc
out
outsb
lahf
xchg
mov
cmp
and
insl
pop
xchg
stos
outsb
pop
jmp
jne
icebp
add
out
lock
cmpsl
ret
xor
dec
pusha
pop
inc
hlt
dec
jnp
andl
lds
divl
ficoml
leave
fmulp
repnz
pop
mov
cmc
stos
sahf
pop
adc
adc
pusha
add
fbld
js
mov
mov
lret
dec
jmp
dec
add
inc
pop
repnz
dec
popa
bound
popf
in
jge
daa
fwait
mov
xchg
js
pop
fs
sbb
xchg
jecxz
stc
jl
ja
movsl
cmp
loop
fldz
dec
aaa
sbb
je
idivl
jne
in
ja
ja
pop
add
adc
movsb
ret
add
fwait
daa
mull
test
out
test
and
sahf
adc
cmpsl
push
jg
sub
xor
notl
and
lret
cmp
pop
repz
addr16
jns
push
push
pop
jecxz
inc
mov
jne
mov
daa
cld
repz
les
dec
test
mov
fsubrs
mov
scas
aad
lret
popf
and
fidivrs
call
jmp
in
out
mov
mov
jns
ret
and
adc
stc
mov
mov
out
push
add
xor
popf
int
push
cld
mov
popf
pop
lahf
and
stos
or
push
iret
pushf
mov
xor
mov
jg
call
xchg
push
sbb
inc
and
inc
flds
cli
xchg
sub
adc
arpl
mov
enter
pop
leave
in
mov
jnp
repnz
movsb
adc
cmc
mov
pop
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
rsm
insb
outsb
inc
adc
lea
adc
lcall
cs
imul
jne
pop
adc
dec
loope
mov
dec
xchg
ss
inc
jl
adcb
sarb
test
jge
addr16
ret
sbb
fsubrs
and
fidivs
push
jmp
in
cmp
lods
jge
lods
outsl
lock
cmpsl
adc
lahf
dec
push
jne
push
mov
loop
inc
out
mov
lods
xchg
xor
and
shlb
jne
xor
stc
mov
std
mov
mov
xchg
jge
xor
lods
jecxz
popa
jp
call
push
test
lods
ds
dec
iret
shll
es
sub
sub
jae
jle
xor
cmp
mov
stos
xchg
inc
loope
frstor
xlat
lods
je
aaa
movsl
or
aas
pop
insl
jne
imul
enter
stc
flds
clc
enter
popa
or
cmp
xlat
xchg
mov
push
mov
inc
fisubl
lret
cmp
dec
xchg
push
scas
test
mov
cwtl
in
mov
bound
lds
mov
dec
dec
sbb
inc
dec
jmp
push
sub
push
push
adc
les
mov
std
mov
movsl
jns
mov
mov
and
js
pop
xchg
js
cli
sbb
adc
add
shrb
std
mov
insb
dec
dec
loopne
lret
out
vfrczps
outsl
adc
push
sub
sahf
cmp
mov
mov
ret
in
lds
movsl
les
mov
sbb
dec
andb
cmp
mov
punpcklbw
lahf
pop
jp
sub
push
inc
dec
inc
mov
shrb
dec
ss
push
dec
lret
jmp
lahf
subb
getsec
ds
sub
imul
inc
fwait
mov
lods
sahf
cli
daa
sub
cmp
addr16
xchg
cmp
adc
jl
insb
mov
mov
hlt
shl
adc
and
mov
ja
lods
rcrb
adc
or
lock
rcrb
inc
dec
mov
mov
out
es
and
inc
test
mov
adc
pop
inc
sub
mov
fs
mov
fdivr
bound
cli
xlat
pop
mov
das
cmp
xchg
cmp
pop
ljmp
xchg
sub
inc
pop
mov
sub
icebp
xchg
pop
push
int3
jmp
pop
mov
in
xor
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
sbb
jle
adc
fbld
xchg
mov
gs
std
jo
xor
cli
fnstsw
sub
std
add
aad
daa
sti
popf
xchg
inc
push
inc
rcll
cwtl
in
fimull
mov
push
sbb
js
data16
mov
jb
mov
sub
loopne
call
jb
int3
xchg
and
cld
insl
les
jle
shll
jle
hlt
and
pop
push
adc
adcl
imul
fisubl
add
jo
inc
push
and
mov
and
in
pop
sub
fs
sbb
fisttps
cwtl
fdivrl
xor
aad
mov
sahf
aaa
add
aam
pop
arpl
sbb
sahf
rcll
push
addr16
mov
and
dec
rcll
inc
fisubl
adc
sbb
add
jmp
ret
sub
inc
dec
or
pop
mov
mov
fildll
ret
mov
dec
jne
jae
mov
cmp
mov
lcall
add
dec
jno
stos
call
leave
cmp
pop
adc
fildl
ds
jge
hlt
je
ss
adc
test
insl
jmp
lret
test
test
pop
ja
push
into
out
adc
int
ret
sub
imulb
dec
inc
fstl
mov
in
cmp
jp
push
mov
outsl
xchg
inc
or
fidivrl
rorb
jne
pop
repnz
ret
xchg
inc
cmp
stc
mov
repz
push
iret
sub
aaa
lods
into
ja
movsb
sbbl
push
shlb
fprem
in
add
push
push
sbb
sbb
xchg
cmp
rcl
daa
add
into
push
mov
pause
leave
mov
push
aam
call
adc
cmp
mov
ljmp
and
sub
push
lods
lcall
sti
int3
xchg
pop
call
mov
push
popa
loopne
rcll
adc
xor
arpl
mov
inc
ret
stos
das
adcl
push
cwtl
mov
fsubrl
fstpl
fwait
push
dec
std
repz
imul
leave
outsl
xchg
das
pop
jle
mov
mov
loop
bound
sbb
xchg
repz
sbb
mov
lret
xor
push
stos
dec
sbb
aaa
cmpsl
lock
mov
sub
adcb
xor
imul
jno
insl
push
ret
push
rcll
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
xchg
icebp
loopne
ret
pop
das
jmp
xchg
in
ds
imull
xlat
test
in
mov
flds
out
sub
aad
repz
adcb
bound
push
mov
cltd
int
pop
fildl
xchg
leave
xchg
push
mov
or
mov
mov
ret
or
jnp
cwtl
jg
loop
inc
add
out
push
cmp
add
test
mov
push
lea
mov
rcrb
inc
cmp
cmc
pusha
adc
pop
outsl
mov
pop
cmp
aam
sbb
sbb
ror
call
sti
rcll
sbb
xor
add
xchg
test
sub
imul
lea
movsl
cld
xor
repz
adc
aad
ja
ljmp
sbb
and
ljmp
xchg
clc
push
jns
cmp
mov
mov
andl
mov
mov
addr16
xor
dec
xor
test
cwtl
jl
out
or
cmp
fwait
xor
into
jecxz
push
leave
and
or
scas
addr16
sbb
pop
das
sbb
addr16
jp
imul
aas
add
push
mov
jo
inc
je
inc
xor
lret
or
xor
scas
les
mov
push
jne
ret
push
inc
and
shl
loop
add
sbb
jbe
push
dec
fnstsw
push
jl
mov
sbb
insl
in
testb
sub
jp
fidivrs
adc
outsb
fstps
cmp
xchg
fildll
adc
fxch
xchg
xchg
std
daa
ljmp
jecxz
cmp
adc
pop
or
fdivp
xor
loopne
ss
arpl
or
jge
push
jl
or
cli
push
pop
imul
loopne
xor
adc
roll
push
cltd
xor
adc
imul
scas
xor
aam
and
scas
test
push
sahf
xor
fldt
ret
lds
add
inc
pop
sub
jnp
shlb
inc
pop
and
notb
mov
iret
add
mov
addl
mov
sbb
dec
xor
or
movsl
add
cli
adc
cli
xor
xor
add
push
je
insl
mov
add
adc
stc
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
arpl
jo
lret
aaa
adc
lea
adc
pop
lods
fwait
loopne
sbb
mov
je
jno
pop
jb
ret
jp
arpl
inc
int3
dec
cld
add
arpl
inc
xor
les
cwtl
dec
leave
jns
add
jge
mov
add
dec
jno
xchg
incl
aas
sub
jns
and
imul
sub
movsl
dec
test
test
ja
popf
mov
cld
movsl
mov
mov
add
or
rclb
cmp
mov
xor
cmp
jmp
mov
fistpll
outsl
xor
inc
js
es
pop
push
outsl
ret
adc
out
mov
adc
dec
xor
sti
mov
aas
scas
shrl
xorb
push
rclb
sub
cmc
push
fs
mov
mov
stos
jae
pop
push
int
or
add
lret
int
push
push
push
in
mov
jns
fldl
clc
and
stos
lret
jecxz
clc
jne
sub
xchg
mov
lret
sbb
adc
add
mov
push
pop
xchg
mov
jbe
mov
push
movsl
xchg
mov
add
jecxz
fists
in
jmp
push
lcall
adc
xor
cmp
into
xor
sbb
push
push
sub
add
fiadds
mov
fnstenv
inc
inc
push
dec
cmpsl
scas
or
sbbl
loope
out
cmp
sbb
xchg
pushf
imul
movsl
mov
mov
inc
jbe
sbb
bound
sbb
mov
insl
scas
cmp
int3
xchg
add
stc
jb
jle
sbbb
in
cmpsb
sub
lea
xchg
insl
push
insb
dec
xchg
or
jle
adc
adc
rorb
loopne
xchg
jo
push
cmpb
popa
je
sub
or
sbb
orl
data16
inc
sbb
fnsave
std
mov
sub
mov
lock
sbb
push
cld
push
stc
mov
sub
cltd
cmp
stc
or
das
adc
rcrl
jle
scas
mov
adc
or
sbb
cmpsl
inc
add
clc
sti
xchg
add
cmp
add
scas
or
test
lret
and
inc
or
and
cmpsb
jns
push
pop
mov
fcomps
cmp
push
loope
inc
xchg
jg
inc
push
jnp
hlt
fsubr
loopne
push
dec
cmp
data16
jmp
dec
xor
bound
leave
xor
jp
jecxz
popf
adc
push
outsb
adc
icebp
mov
out
mov
mov
fisubs
jp
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
iret
mov
adc
in
mov
fimull
dec
test
cmp
pop
inc
sub
xor
or
xlat
cmp
mov
mov
insl
fistpl
pop
jecxz
js
and
or
xchg
int
cli
gs
rcr
jmp
mov
rcrb
repnz
and
push
mov
orl
xchg
sub
stos
lret
pop
mov
outsl
fwait
mov
jae
push
jle
inc
loopne
cmp
mov
sub
sbb
mov
out
adc
int
les
pop
xlat
add
cmp
jo
push
cmc
fidivl
jmp
cwtl
push
jno
xor
jp
loop
ret
fisubl
jecxz
ds
ret
notl
push
jnp
shll
mov
cltd
scas
mov
out
cmc
out
push
jbe
xchg
cmp
adc
jecxz
ljmp
xchg
clc
sub
enter
adc
pop
dec
stos
mov
sub
dec
inc
scas
push
jno
arpl
outsb
stos
loope
sar
test
ret
cmp
adc
aad
insl
mov
pop
iret
cli
cmp
sub
gs
sub
lahf
int
inc
mov
into
sub
pop
cli
jns
lret
lds
pushf
mov
mov
xor
mov
lods
cmp
dec
xchg
cltd
dec
test
xor
repnz
or
fidivrl
sbb
sbb
in
or
mov
inc
pop
pop
push
inc
xor
jp
cmp
mov
sti
jmp
xchg
xchg
das
fsts
jbe
shl
add
sarb
sub
ret
and
ja
fbld
lods
sub
or
dec
lods
sbb
dec
adcb
mov
repz
mov
inc
loop
push
push
sar
mov
and
fstpt
out
mov
or
hlt
sub
cwtl
xor
fisttpll
out
clc
inc
or
cmp
sbb
jp
dec
xchg
in
insb
lock
or
aaa
adc
add
pop
out
sbb
fstpt
mov
sarl
shrl
xlat
pop
loope
push
mov
pop
dec
or
mov
fsubs
movsb
push
xchg
dec
add
pop
ss
pop
sti
jae
jo
adc
fsubrl
and
add
mov
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
in
js
sub
adc
sbb
fistps
stos
scas
das
fisubl
cs
negl
outsl
inc
inc
testl
jbe
cmp
push
leave
cmc
cmp
push
test
and
sub
popa
pop
xchg
xor
cmp
out
xlat
outsb
push
fxch
int3
insl
mov
stc
mov
pop
adc
data16
arpl
mov
in
loop
pop
loope
fwait
mov
aas
insl
lods
mov
mov
rcr
int3
cltd
insb
push
lret
xlat
mov
adc
or
adc
xor
ljmp
pop
hlt
mov
mov
daa
sbb
inc
gs
daa
mov
push
out
adc
sub
not
inc
and
dec
in
mov
cwtl
add
imul
decl
push
jbe
add
fsubl
lret
fidivs
insb
sub
pop
shll
push
fimuls
arpl
in
sqrtps
mov
stos
pushf
xchg
cmp
out
das
orb
stc
mov
mov
mov
jmp
xor
icebp
adc
inc
jnp
cmpsl
cld
cmc
fildll
outsl
fldl
shlb
xor
test
pop
data16
dec
mov
sbb
pop
rclb
stc
aaa
sbb
mov
xor
ret
lds
ja
es
dec
xor
scas
data16
test
out
push
xchg
orl
add
sarl
xlat
pop
jg
xchg
int3
add
mov
xchg
xor
cmp
rorl
push
xchg
xchg
sar
test
movsl
inc
mov
add
jbe
adc
jnp
add
popf
jnp
mov
mov
clc
cltd
gs
mov
cmp
mov
pop
out
sub
fisttpl
adc
scas
idiv
pop
test
out
push
int3
stos
aas
pop
xchg
pop
xchg
and
or
imul
out
push
in
jecxz
push
insb
lds
shrl
pushf
jge
lods
xchg
lea
sbb
movsb
sbb
adc
sub
mov
test
pop
sti
movsb
cltd
push
xor
xchg
cmp
fsubrs
xchg
xchg
enter
fisubrs
ljmp
cmp
mov
dec
stos
adc
in
pop
xor
daa
scas
and
ss
movsb
jns
ret
test
ret
mov
inc
nop
add
cmpsb
cmc
movsb
outsb
cmp
test
xchg
adc
sub
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
adc
adc
hlt
repz
mov
stc
mov
out
cli
push
inc
mov
scas
pop
add
adc
and
fcomps
repz
jge
push
dec
adc
ret
jo
loopne
pop
mov
lahf
pop
divl
or
lock
sbb
mov
dec
cmpsb
dec
adc
sbb
add
xor
lcall
cmp
aam
jae
orl
and
rorl
imul
fs
je
cmp
lret
xorl
fwait
mov
pop
lods
mov
cmc
push
imul
stc
outsb
mov
sub
sub
xchg
cmp
sbb
cli
sbb
sbb
rcl
cmpsb
push
cmpsb
jp
inc
xchg
and
jb
pusha
sahf
insb
imul
pop
mov
clc
lods
aad
mov
fldt
jnp
dec
adc
faddl
ja
xchg
mov
and
popf
dec
pop
aaa
jp
movsb
repnz
dec
fidivrs
sbb
push
mov
insl
hlt
nop
imul
inc
es
subb
scas
adcb
stos
or
dec
mov
cmc
idiv
add
inc
in
lret
adc
aas
pop
inc
jo
repnz
inc
adc
stos
pop
inc
rcr
jmp
addl
dec
jae
sbb
js
es
das
and
mov
hlt
add
psubd
inc
cltd
stos
xor
inc
mov
out
jo
dec
jns
std
mov
push
dec
ja
cmp
lcall
xor
iret
popf
aad
pop
rorl
push
mov
sti
add
and
xor
dec
fsubl
xchg
cmc
xlat
imull
addr16
lods
out
sbb
arpl
mul
mov
cmc
add
sub
pop
dec
jb
rorl
jmp
popa
out
sub
push
cmp
filds
inc
mov
in
pop
iret
or
sar
ljmp
cmp
sub
cmp
movsl
push
test
sub
mov
aad
sub
push
mov
jbe
push
xchg
insl
and
cmpsl
bound
mov
ds
push
cmpb
pop
xchg
mov
push
sub
mov
xchg
and
or
cwtl
movsl
cli
lods
push
loopne
iret
fwait
stc
jbe
push
jo
rclb
gs
push
push
sub
mov
std
cmp
lock
push
xchg
dec
stc
sub
out
hlt
in
lods
scas
push
lods
xchg
enter
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
mov
jns
lods
inc
lret
dec
add
mov
lods
xchg
sti
jmp
aas
jl
push
repz
or
jo
xchg
int
or
stc
cltd
shlb
jbe
jb
jo
inc
mov
sbb
imul
ret
sub
mov
movsb
and
mov
add
push
sbb
xor
dec
inc
and
mov
cmpl
sub
fldt
out
cmpsb
aam
cmpb
js
lret
sarl
loop,pn
sahf
sub
ss
jae
repz
push
sti
dec
xor
sahf
push
test
cmp
push
pop
int3
mov
cs
mov
jp
cmc
jo
hlt
jecxz
dec
dec
xchg
xchg
sahf
cld
mov
or
pop
push
and
pop
push
jb
idivb
and
insb
xchg
cmp
mov
pushf
xor
xlat
adc
and
jae
adc
fcoms
daa
lret
pop
pop
testl
arpl
xchg
dec
inc
test
fisttpll
fdivrl
push
sbb
pusha
mov
aam
je
lcall
and
enter
xchg
daa
add
dec
push
cli
push
in
daa
ss
cmp
sbb
adcl
outsb
xor
icebp
in
loope
pop
aad
mov
lea
add
cmc
inc
test
mov
sbb
cmp
mov
or
mov
adc
jp
das
and
fwait
sub
jge
jecxz
scas
repz
inc
mov
adc
push
int3
mov
mov
adc
lret
push
xchg
add
xlat
or
lds
cmp
popa
or
push
cmp
push
and
fsubs
imulb
negb
sub
pop
lret
dec
or
pop
cmp
iret
insl
or
or
or
mov
jle
lret
adc
sub
lret
jle
and
pop
jae
movsl
fucom
in
insb
or
sti
fsubrs
push
xchg
inc
or
push
dec
push
daa
ja
test
jnp
sbb
pop
aas
jle
pop
js
mov
xor
xor
dec
and
hlt
inc
inc
adc
inc
mov
nop
cld
into
inc
in
jmp
imul
push
push
andl
in
decl
lret
push
xchg
jns
jge
stc
cmpsb
pop
cmc
pop
mov
dec
inc
or
sbb
mov
nop
stos
push
add
inc
lcall
sbb
ljmp
clc
inc
outsl
adc
adc
xchg
push
add
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
push
push
sbb
adc
fwait
and
adc
inc
stos
cmp
xchg
adc
cmp
testb
add
xor
mov
ficoml
lcall
lods
pop
mov
std
and
xchg
imul
push
das
xlat
jo
xor
bndstx
and
mov
ss
sbb
enter
jle
mov
push
cmp
mov
mov
ret
cmpb
call
jg
inc
test
test
xchg
lret
push
or
and
push
rorb
cmp
inc
adc
dec
mov
mov
xchg
pop
adc
ss
iret
cwtl
imul
xorl
push
roll
daa
shll
mov
aaa
test
xor
sub
or
outsl
cmp
daa
pusha
lahf
fs
ss
mov
jg
push
fs
mov
sbb
push
in
hlt
jge
pop
mov
icebp
mov
pop
cmc
xor
mov
inc
xlat
daa
fisubl
xchg
outsb
cmpsb
test
scas
mov
push
adc
and
rorl
imul
add
add
jo
push
stos
sbb
testl
into
jae
sbb
jle
sub
mov
mov
sbb
jecxz
mov
lea
mov
in
rcrl
mov
outsb
test
cltd
fstps
push
mov
sub
cmp
xchg
push
xchg
push
xor
inc
mov
arpl
in
mov
adc
jae
scas
xor
push
pop
mov
inc
dec
shrb
and
cltd
inc
dec
lcall
sub
dec
and
loop
dec
and
jnp
jno
cmpsb
lahf
mov
push
out
sbb
pop
loopne
andl
imul
fwait
dec
pop
dec
cmp
iret
mov
cli
jne
mov
insl
testl
pop
xchg
add
fwait
out
or
testb
pusha
aaa
sbb
ss
in
js
imul
and
fisttps
das
mov
lcall
cmp
dec
add
pop
sbb
mov
hlt
and
pop
hlt
out
je
sbb
ljmp
insl
out
ss
repz
insb
lea
fcomps
fiaddl
xchg
ss
pop
and
mov
pop
fs
in
adcb
pop
loop
mov
push
popa
pop
pop
xor
call
in
rclb
push
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
mov
sbb
adc
ffreep
xor
in
mov
cmpsb
lock
push
cmpsl
mov
or
xor
cmp
fmuls
stos
out
inc
xlat
imul
into
pop
mov
pop
scas
mov
pop
insl
add
cmp
stos
lock
sahf
movsl
pop
mov
pop
jne
ret
mov
arpl
imul
negb
addr16
lock
lock
xchg
mov
push
jo
test
hlt
adc
fimull
pop
sbb
adcl
and
jne
xchg
fdivrl
jnp
ja
addr16
loope
fmull
test
fcmovnbe
imulb
ljmp
pushf
or
push
jae
ljmp
push
mov
fstl
jle
push
jmp
data16
in
fmuls
lret
movsl
cmp
xor
pushf
cmpsb
push
cmp
out
sub
push
push
aad
lahf
loope
xchg
or
push
je
lret
cli
enter
movsl
and
mov
jg
in
test
daa
fwait
add
dec
in
enter
mov
lea
add
jecxz
aaa
mov
mov
jp
adc
mov
sub
scas
iret
push
cmp
shll
adc
xchg
imul
pop
push
subb
and
add
xor
rcrl
lds
ret
xorb
arpl
push
lret
pop
pop
and
lock
add
mov
test
inc
mov
mov
mov
out
mov
xchg
jbe
mov
inc
pop
inc
test
in
adc
jbe
stos
icebp
outsb
aam
jno
orb
pop
push
js
mov
jno
push
sahf
outsb
das
mov
jmp
cmp
jecxz
sub
sbb
push
int
imul
cmpsb
mov
aam
xor
dec
sar
icebp
aaa
sahf
cmpsl
push
cmp
pop
jno
test
xor
inc
dec
cmc
and
add
shlb
and
ret
pusha
adc
xor
les
lahf
push
jns
cmc
dec
mov
je
adc
fwait
sub
adc
fs
out
xchg
pop
push
dec
mov
aas
in
dec
aas
mov
and
imul
ficompl
aas
sbb
xchg
fs
dec
xor
roll
gs
sarb
push
lods
cld
in
sbb
pushf
pop
mov
fs
bound
sbb
ret
dec
add
xor
sbbl
mov
mov
nop
xchg
es
in
dec
and
sbb
cmpsb
insb
imul
das
aaa
mov
sbb
xor
leave
xchg
mov
push
icebp
rcll
push
xchg
js
dec
imul
cmp
mov
in
iret
jecxz
in
cld
aaa
ret
setge
push
xlat
dec
xor
push
pop
ljmp
arpl
imul
mov
xchg
jae
insb
sbbl
jbe
push
gs
jnp
cmc
inc
mov
jae
adc
pop
xchg
dec
sahf
xchg
xchg
cmpsl
clc
ret
xchg
cmc
sub
ret
inc
out
jnp
cmp
gs
leave
aad
sbb
loope
dec
iret
and
js
hlt
test
lahf
enter
xchg
pop
add
sahf
jl
rorl
jae
mov
data16
int3
dec
ljmp
inc
cmp
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
jb
mov
mov
jne
ljmp
aaa
sbb
push
xor
dec
outsl
bound
popf
cmp
pop
pop
pop
clc
ror
popl
rcrb
stos
mov
fdivl
cmp
shll
or
mov
int3
sub
enter
icebp
sar
cmpsl
or
daa
stc
push
jl
cmpsb
inc
inc
adc
xor
add
or
add
sarb
mov
pop
xlat
add
jbe
inc
mov
in
and
push
pushf
add
and
fsubl
lods
cmp
dec
mulb
and
inc
fbld
dec
iret
mov
lods
sbb
jbe
lcall
xlat
push
out
xchg
imul
jb
addb
xor
enter
call
fsubr
fsts
insl
js
lret
roll
test
mov
fstpl
xlat
xchg
cmpsb
xor
mov
and
pop
add
sbb
jmp
stc
repnz
add
cmp
cmpsl
cs
xchg
xor
dec
add
push
arpl
je
add
jl
push
pop
and
cmp
adc
sbb
cmpsb
jb
sbb
mov
shlb
icebp
jo
mov
mov
push
arpl
mov
ret
add
fimull
push
mov
int
mov
pop
repz
and
in
mov
cld
adc
xlat
test
clc
mov
xchg
daa
and
inc
pop
mov
lods
sbb
xorl
mov
repz
fistl
mov
dec
pop
fs
pop
stos
int3
xchg
cmpsl
or
jnp
sbb
loope
add
ret
cmp
sbb
xor
addr16
lods
arpl
test
test
dec
repz
add
mov
inc
loop
clc
jno
jge
shll
sub
inc
jbe
shl
or
push
jnp
pop
xchg
jmp
mov
add
add
sbb
pusha
jmp
xchg
mov
ds
push
jo
adc
jnp
or
xor
push
stc
jne,pn
or
jl
jne
xor
cltd
fildl
mov
inc
inc
inc
sbb
adc
repnz
imul
jb
enter
mov
in
dec
sub
jg
jo
pop
dec
mov
adc
fs
inc
filds
mov
mov
cmpb
mov
mov
pop
int
jbe
mov
push
sbb
jns
mov
sbbb
repnz
xor
push
es
add
cmp
mov
or
inc
mov
aas
xor
lods
sbb
fistl
and
pop
ret
fstp
stos
mov
imul
sub
mov
jmp
dec
cmc
and
dec
mov
daa
mov
jns
les
or
sub
lahf
mov
jp
xchg
inc
sbb
or
adc
repnz
xchg
cld
xchg
adc
mov
sbb
jb
aaa
rcrb
add
arpl
fbld
idivl
inc
jp
mov
insl
mov
adc
fisubl
popl
mov
xchg
rclb
add
ja
inc
sub
push
data16
pop
movsl
sbbl
adcl
lock
and
sarl
jne
sbb
scas
les
adc
mov
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
insb
filds
adc
adc
or
popa
mov
cltd
cmp
test
pop
imull
lock
push
sbb
fcoml
shl
dec
into
ror
pop
ror
pushf
jns
insl
outsl
popa
loope
popa
cli
mov
mov
mov
jo
sbb
ss
jmp
daa
shlb
or
js
jae
cmpsl
cltd
fwait
pop
les
dec
cmpsl
inc
xchg
mov
divb
lods
cmp
push
addr16
push
popa
movsl
outsl
xor
int
loope
addr16
push
sub
je
cmp
je
mov
int
aam
ljmp
fistl
loop
xchg
adc
dec
outsb
sahf
push
jns
pop
jnp
insl
addr16
lea
and
cmp
loop
in
fsts
pushf
outsl
mov
jnp
lret
xor
xor
fistps
push
push
cli
in
pop
sub
xchg
movsb
dec
sahf
ss
jl
push
cld
cmpsl
arpl
lahf
adc
xchg
hlt
push
sub
stos
dec
xor
pop
data16
sbb
out
test
cmc
imul
call
mov
xor
xor
jno
pop
fists
jg
mov
jle
adc
or
pushf
fimull
sbb
mulb
or
jne
add
outsl
cld
pop
cmp
cmp
addl
adc
subb
mov
mov
lods
sub
xchg
jne
fidivl
mov
sbb
repz
xlat
xchg
lds
aaa
xchg
cwtl
inc
pop
pop
inc
push
stos
xor
out
mov
ret
xor
xor
scas
test
jno
leave
enter
test
flds
fistpll
sub
mov
cmp
jp
mov
pop
mov
pop
lcall
lock
in
inc
jmp
subl
cmp
ds
fldenv
adc
adc
xchg
adc
int3
cwtl
stc
mov
add
mov
mov
subl
jg
xor
and
sbb
cli
pop
xor
sub
pop
cli
loop
xchg
fdivp
pop
fdiv
xchg
loope
mov
cmpsl
mov
inc
adc
dec
add
pop
test
out
push
jae
out
testl
dec
push
push
jnp
mov
xlat
outsl
jns
hlt
sar
les
mov
shlb
test
aaa
inc
out
xchg
in
ficomps
sbb
pop
add
fdivl
cmpsl
xor
test
sar
cs
fnstsw
add
shrb
sbb
or
pop
fisttpll
fcmovnb
jg
insb
mov
jp
or
cmpsl
mov
mov
icebp
out
xor
fcompl
insb
lretw
ret
daa
sbb
push
mov
imul
std
or
add
in
shrl
shlb
out
jb
fcoml
cmp
jne
iret
cmpsl
cmp
pop
cli
adc
xor
popa
jnp
sbb
push
icebp
outsl
jle
pop
shlb
aaa
sub
ljmp
xchg
sub
out
pop
sahf
bound
addr16
push
xchg
shll
jnp
adc
sarl
in
fadds
push
mov
sahf
jae
or
arpl
inc
add
das
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
jl
push
push
call
adc
xor
orl
stc
xchg
test
pop
xchg
mov
nop
push
rclb
movsl
jecxz
sub
jo
sub
xchg
dec
fstps
inc
int3
cld
push
or
mov
xchg
inc
and
pop
std
push
imul
cmp
iret
adc
cmp
fisubs
or
mov
ss
es
xchg
stc
or
cmpsl
fidivrs
and
inc
rcll
xchg
and
mov
ficoms
dec
icebp
mov
jae
pop
sti
mov
call
bound
or
mov
push
xchg
mov
xchg
enter
sub
sahf
cmp
pop
inc
mov
into
push
lret
xchg
jp
xor
addr16
aad
bswap
adc
or
stos
sub
leave
pop
lar
call
cld
cmpsb
cmp
dec
pop
rcll
xlat
mov
mov
aam
sbb
add
fisubs
xchg
nop
dec
lock
dec
rorl
lret
aad
jns
mov
jae
lea
into
add
xchg
in
test
adc
inc
lds
push
adc
inc
sbb
add
sbb
mov
into
je
dec
mov
shll
lock
outsb
lcall
repz
pop
repnz
jne
ds
cmc
lock
xchg
ss
mov
cli
cld
nop
sub
pop
pop
pop
dec
mov
dec
pop
or
out
test
es
rclb
mov
stos
add
sub
leave
negb
test
sahf
and
push
clc
clc
and
mov
sbb
leave
loope
inc
and
divb
dec
mov
xchg
cmpsb
jne
xor
inc
push
mov
push
pop
outsb
push
xlat
add
push
sbb
sub
iret
and
jne
cmp
adc
js
sub
add
lahf
mov
lock
leave
sbb
fiaddl
jo
incb
popf
in
icebp
cld
pushf
in
fstp
lods
jmp
pop
in
or
das
lahf
out
xchg
bound
sub
add
or
dec
xchg
xor
mov
push
push
pop
in
std
lods
rol
repnz
rol
inc
mov
lods
xchg
push
cmp
xchg
pop
fdivl
or
mov
std
add
popf
jns
push
ret
ret
daa
pop
lods
jle
mov
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
adc
adc
loop
sbb
testl
orl
icebp
xor
mov
loopne
pop
data16
push
out
pushf
into
mov
add
std
leave
jae
sbb
sub
mov
mov
xchg
lret
aaa
imul
mov
imul
and
and
inc
or
jl
jbe
xor
test
arpl
sbb
fsub
pop
push
in
inc
addr16
stos
lods
jge
int3
jp
mov
or
enter
sub
xor
out
and
sbb
sub
mov
dec
in
outsl
push
subb
icebp
and
jae
mov
andl
inc
jp
fistpll
push
fldl
mov
push
and
mov
mov
jae
push
mov
addr16
mov
mov
jno
cmpsl
leave
mov
fmul
test
dec
je
in
dec
rcrl
mov
notl
movsl
sysret
outsl
enter
fcomps
sbb
mov
movsb
sbb
jno
push
mov
and
adc
jae
stos
cmc
pinsrw
and
dec
js
adc
sub
in
sbb
repz
mov
sahf
mov
subb
push
inc
lret
jne
jnp
iret
cmpsb
jle
loop
mov
push
test
or
mov
sbb
xor
mov
push
lret
dec
lods
mov
out
iret
lods
xchg
sbb
aad
mov
mov
fists
cmp
adc
sti
insl
add
mov
mov
shrl
clc
nopl
inc
xor
repnz
adc
out
shlb
jns
mov
cmp
jle
adc
lds
mov
jns
jle
fiadds
data16
xchg
xchg
xor
inc
aas
sahf
ret
push
call
or
mov
notl
pusha
cmpsl
scas
mov
subl
jb
cmp
push
push
hlt
pop
mov
inc
mov
gs
add
mov
cmp
xchg
loope
repnz
idivb
mov
fwait
jmp
insb
pop
das
jae
div
jge
mov
xor
repnz
dec
jge
or
mov
pop
cld
jbe
add
lcall
pop
cltd
fistps
shll
andl
pop
sub
sub
xor
push
call
cmc
test
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
jae
jle
stc
adc
adc
pop
mov
pop
hlt
int3
mov
xchg
push
out
into
movsb
mov
and
mov
into
xchg
inc
stos
or
mov
addr16
ljmp
push
aam
and
inc
add
or
mov
push
aam
jae
sbb
je
aaa
jbe
or
out
dec
out
outsl
add
iret
popa
jne
cmp
dec
daa
in
aaa
lahf
leave
dec
xchg
insl
int3
pop
cmc
setge
mov
scas
sbb
cmp
mov
sub
jp
cmp
bndstx
add
aad
ja
cmp
js
pop
jge
jno
inc
xchg
inc
lea
bndldx
lahf
ss
cld
stos
iret
inc
push
cs
fidivrs
stc
adc
es
scas
stos
jl
xchg
pop
jo
fldl
insb
sub
lcall
xchg
mov
and
xchg
movsb
mov
sti
inc
popf
ficomps
lds
dec
cmpsl
div
imul
pop
jnp
ss
jnp
adc
dec
sbb
lret
nop
xchg
ds
dec
mov
xor
fwait
lds
shrb
sti
add
cmp
out
into
jmp
js
sbb
xchg
lock
xchg
add
inc
or
adc
jecxz
jmp
cmp
jmp
dec
sub
sar
fwait
push
jmp
gs
pop
adc
xchg
jle
jge
test
push
inc
and
arpl
mov
lock
sar
roll
icebp
push
push
popf
sbb
in
fcoms
adc
mov
dec
icebp
mov
xor
test
jno
or
aaa
or
arpl
push
or
daa
sub
fimull
lods
pop
add
in
testb
jnp
or
mov
push
sub
lea
nop
dec
ret
lock
cli
fcmovb
test
or
mov
test
outsb
sub
and
adc
insb
callw
inc
je
ss
arpl
ret
and
pop
inc
adcb
sbb
push
push
fiadds
repnz
push
in
jp
movsl
loope
add
sub
enter
adc
cwtl
ret
and
fiaddl
les
cmc
in
in
scas
mov
sub
das
out
sub
pop
mov
repnz
in
xor
test
mov
mov
mov
and
shr
pop
inc
cmc
xchg
lods
mov
mov
dec
add
and
lds
sbb
add
add
rol
xor
inc
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
data16
push
out
adc
adc
and
sbb
jmp
out
xor
jbe
push
fdivrp
outsl
adc
mov
push
mov
add
ds
lds
js
aad
cmc
inc
aam
mov
adc
cs
and
xchg
loopne
pushf
jnp
lods
ss
iret
test
add
or
push
xor
ss
lret
inc
outsb
jp
xchg
dec
mov
pop
mov
enter
pop
neg
cmp
dec
sub
jg
fldl
scas
movsl
movzwl
cmpsl
dec
sub
sbb
clc
mov
xor
out
dec
sbbl
cmp
mov
sbb
push
out
bound
add
pushf
mov
outsb
fistps
sbb
in
cmp
lea
dec
sbb
add
jecxz
inc
movsb
loope
aaa
xchg
ja
clc
outsb
icebp
lods
push
lret
dec
jns
adc
inc
pop
jecxz
movsb
xor
cwtl
sub
cltd
mov
mov
rorb
fistpl
stc
xor
pop
and
push
push
out
out
mov
push
stos
cmp
cmp
pop
cli
shlb
pop
or
fdivrs
lret
int
xor
mov
scas
outsb
xchg
and
adc
add
js
push
jp
xor
adc
fiaddl
ss
popa
sub
cmp
sbbl
das
mov
cmp
mov
mov
fsubl
inc
adc
imul
dec
sbb
repz
xchg
fs
movsl
test
push
xor
inc
sub
sbb
test
push
xchg
inc
cmp
and
jne
xchg
or
add
ja
insb
inc
ficoms
or
inc
jmp
out
push
adc
cmp
loop
ret
add
push
pop
lods
mov
jne
jo
xchg
leave
jb
add
mov
or
push
scas
pop
and
dec
pop
lea
sbb
fcomps
dec
fs
sub
popa
not
xor
inc
fsubrl
aaa
fs
ja
jecxz
jl
ds
rcrl
mov
mov
jae
dec
sub
mov
movsb
xor
ds
mov
inc
adc
filds
arpl
icebp
jns
adc
mov
add
jp
or
xchg
in
mov
xor
sbb
negb
jns
rcrl
aad
lret
sbb
dec
push
lret
lret
sub
inc
mov
xchg
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
sub
adc
adc
fs
push
push
arpl
pop
fwait
insl
popf
into
mov
sub
sbb
adc
test
dec
push
hlt
hlt
arpl
and
in
sub
jae
cmpsl
mul
insl
rcr
mov
mov
idivb
mov
dec
pop
or
pop
aam
mov
flds
or
sar
ja
lea
outsb
iret
std
dec
xchg
push
mov
sub
popf
test
mov
aam
js
ja
scas
push
inc
enter
mov
js
fstps
mov
ss
ljmp
dec
loop
push
sbb
jnp
cmc
sbb
scas
adc
add
loopne
icebp
sub
lods
sbb
dec
out
shl
mov
cmpsb
or
mov
cmp
mov
lcall
aaa
pop
add
push
pop
xchg
mov
lahf
fisubrs
xchg
sahf
add
sarl
add
pop
or
stos
test
mov
mov
xor
pop
xchg
xchg
push
scas
shrb
jnp
lea
nop
out
pop
popa
pop
and
out
cmp
repnz
into
mov
pop
nop
adcl
cmp
jns
push
test
jp
test
and
shll
and
and
push
pop
adc
push
xchg
stc
add
orl
pop
mov
repz
movsl
sub
iret
setle
aad
scas
mov
fldt
add
outsl
mov
jp
fucomip
std
into
std
punpckhbw
hlt
stos
loope
fwait
out
scas
add
mov
xchg
sahf
mov
push
sbb
jns
rorl
int3
xchg
cmc
adc
xchg
sbb
mov
insl
lcall
dec
jb
ss
push
mov
js
mov
loopne
or
xchg
fcomps
mov
ja
out
cs
inc
xor
mov
out
jb
xchg
push
sbb
jmp
sub
mov
hlt
pop
xor
mov
imul
mov
dec
shlb
push
fcomi
fldl
shll
es
jne
lods
iret
xchg
pandn
sbb
fistpl
es
pusha
cmp
hlt
xor
xchg
cmp
fnstcw
bound
jmp
dec
int3
xor
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
add
sbb
xchg
movlps
xchg
cmp
call
or
xor
mov
aad
xorb
jae
lahf
int
push
mov
add
adc
repnz
mov
xor
pop
cmp
mov
mov
aad
pop
mov
push
stos
cmpsb
pushf
fwait
in
xor
sub
cmp
scas
out
out
push
loop
xor
jg
and
sub
jb
aas
and
or
mov
movsb
inc
cmp
sub
add
jbe
movsb
jge
lret
je
mov
inc
pop
jb
out
test
fmuls
dec
cmp
cltd
or
xorb
add
sub
pop
ffreep
roll
cwtl
test
adc
inc
gs
or
repz
cwtl
arpl
xchg
out
sub
mov
xchg
dec
aaa
inc
in
lds
mov
add
xchg
inc
in
mov
mov
cli
mov
dec
jae
movsl
nop
push
out
mov
fwait
scas
or
xor
xchg
cmp
push
decl
push
dec
sbb
mov
orps
sbb
add
mov
jbe
push
push
sub
int3
jb
mov
push
enter
stc
pusha
mull
and
or
inc
ret
cwtl
jmp
in
lret
add
sub
popf
imul
push
aaa
adc
test
sti
sahf
je
mov
push
adc
mov
jle
test
insb
adc
cltd
xchg
les
adc
stc
add
push
xchg
lret
push
shrl
sbb
inc
sub
xlat
dec
lahf
mov
mov
push
daa
adc
jmp
mov
xchg
add
mov
mov
test
sbb
push
mov
gs
and
and
ja
gs
fs
xor
aaa
cs
mov
cld
push
dec
loop
in
sbb
inc
pop
jmp
insl
xlat
cmpxchg
popa
xor
jnp
clc
loop
das
sti
mov
xor
mov
ret
aad
dec
loope
adc
push
sahf
aas
fucomip
hlt
loope
sti
adc
aad
or
jns
repnz
xchg
sub
loope
in
push
or
dec
pop
mov
pop
pop
xor
bound
push
xchg
xor
ret
or
pop
mov
ja
cmpsb
out
or
push
scas
decl
dec
and
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
outsl
stos
loop
jnp
adc
adc
fistps
mov
repnz
or
and
mov
mov
sub
in
jecxz
in
cmc
rorl
loop
push
fldl
outsl
filds
sbb
imulb
xor
mov
int
dec
stc
push
jb
call
sub
sbb
mov
and
shll
test
push
sub
mov
sub
xchg
cli
dec
mov
mov
and
sub
lea
sub
push
mov
mov
loope
mov
lcall
test
mov
and
inc
sbb
xchg
mov
movsb
out
clc
data16
xor
fisttpl
dec
hlt
sbb
decb
adc
push
add
repz
in
push
mov
and
mov
lcall
jbe
dec
mov
adc
in
stos
lds
push
add
push
fwait
call
ljmp
push
rcrb
jne
sbb
add
into
into
enter
lods
or
ljmp
cli
rcrb
leave
sti
clc
jmp
imul
or
ret
adc
xchg
ss
pushf
jmp
push
dec
loope
dec
sti
inc
and
movsl
jo
xchg
mov
mov
negl
roll
jns
aas
mov
mov
daa
dec
les
mov
pop
subb
ret
sahf
xor
clc
inc
jle
ret
bound
jno
or
mov
jmp
push
out
scas
sub
ss
adcb
fists
jne
fadd
je
mov
inc
lret
test
std
mov
mov
rcrb
adc
sub
shl
gs
xchg
lret
movsl
in
cmc
cmp
sub
movl
or
xchg
mov
adc
ljmp
je
and
cld
or
in
outsl
and
xchg
lahf
loope
mov
lock
imul
pop
pop
pop
cs
icebp
je
mov
imul
imul
scas
cmc
mov
dec
dec
adc
sub
in
xchg
rcrl
enter
jno
jne
sbb
rcrb
shll
div
out
daa
mov
andl
fstps
popf
popa
mov
int3
cmpsl
sub
mov
xor
in
fnstcw
out
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
lods
ficoms
adc
rorl
out
gs
dec
mov
repnz
mov
or
push
ja
jg
mov
int
aam
pop
pop
lods
cmp
inc
cmpsl
pop
sub
ds
pushl
pop
aas
imull
jo
jmp
xor
mov
lea
inc
dec
xchg
jne
lods
xor
push
xor
sbb
mov
cmp
leave
aas
adc
sbb
int
lock
inc
and
mov
rorl
xchg
aad
inc
testl
in
std
xor
adc
xchg
push
push
push
push
shl
rcrl
mov
sbb
jo
push
out
fdivrl
pop
dec
and
rolb
jle
imul
sarl
mov
pop
in
dec
sarb
pushf
cld
outsl
cmp
pop
call
mov
stos
icebp
push
xor
or
cmp
pop
sub
rcrl
adc
shrl
inc
shll
adc
test
inc
xchg
and
sbb
jo
xchg
sub
ret
xor
pop
testl
sbb
sbbl
scas
push
fmull
add
movsl
xor
dec
and
push
call
gs
pop
mov
fnsave
mov
add
test
xchg
outsb
lods
pop
pop
imul
shll
jnp
fcmovu
int3
testl
shlb
lahf
iret
xor
push
stos
mov
push
ficompl
add
repnz
fmuls
sbb
fsubl
pop
sti
fnstsw
pushf
mov
lahf
popa
jnp
xchg
jbe
shr
icebp
lret
mov
mov
and
pop
xchg
imul
pop
fdivs
icebp
popf
add
sbb
mov
mov
sarb
rorl
push
cmp
dec
and
adc
ret
prefetcht2
leave
rorb
pop
adc
or
pop
leave
mov
shll
xor
inc
push
jmp
jle
sbb
into
cli
cmc
add
ljmp
fidivl
iret
jne
inc
inc
xchg
mov
enter
add
cmpsb
pusha
push
adc
cwtl
sub
sbb
dec
or
test
push
inc
pop
jp
mov
adc
in
xor
add
outsl
lcall
out
fldl
or
stos
inc
lods
pop
push
pop
cltd
jb
stc
xor
add
cltd
neg
push
inc
mov
out
sbb
mov
sbb
jp
pusha
xchg
imul
lcall
gs
lods
ja
hlt
cwtl
rclb
mov
or
ds
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
mov
xchg
movlps
mov
mov
mov
aad
andl
bound
mov
cmp
dec
pushf
sub
sbb
leave
lea
add
mov
nop
cwtl
test
jecxz
repz
fcompl
lret
push
pop
out
rclb
ljmp
add
shl
mov
cmp
dec
es
mov
ds
cmpsl
stc
pmulhw
sbb
out
jecxz
js
call
mov
addr16
xor
popf
hlt
mov
ja
adc
push
movsb
xchg
pop
nop
testl
mov
pop
adc
loop
inc
insl
or
cltd
jne
es
in
lret
arpl
mov
ja
loop
mov
and
sub
push
cmovae
mov
inc
xor
jl
dec
nop
in
std
fsts
mov
hlt
out
mov
jns
cli
jmp
sub
cmpsb
cmpsl
or
in
push
xchg
cli
inc
adc
vmptrst
jns
aad
sbb
les
clc
xchg
movl
cmpsb
dec
or
pop
insl
sti
push
inc
pop
dec
pop
dec
mov
mov
ljmp
sahf
pushf
int
js
aas
loope
fbstp
sbb
dec
mov
xor
rorl
xchg
cmp
mov
cli
mov
sbb
push
xchg
fdivr
sub
ja
inc
or
cmc
fldcw
fisubrs
leave
outsb
gs
lock
fdiv
or
push
push
sbb
fsubl
add
dec
mov
test
lods
pop
movsl
imul
lds
mov
xlat
or
dec
dec
fimuls
popa
pushf
fistpll
clc
fwait
mov
push
sahf
cld
fisttpll
movsl
cmp
loopne
xlat
pop
pop
imul
adc
or
mov
adc
mov
push
out
movsb
mov
mov
out
sub
cmp
adc
arpl
fildl
stos
push
dec
into
mov
and
and
jl
push
push
add
es
add
je
pop
inc
xor
das
xor
push
cmp
fldcw
cmp
jns
lret
popf
outsb
gs
das
mov
dec
out
subl
hlt
jmp
pop
inc
mov
repz
jmp
scas
ret
aaa
xchg
iret
jg
mov
rol
mov
ljmp
clc
xor
outsb
les
les
xlat
dec
push
jmp
sbb
lahf
push
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
inc
cmp
adc
pop
mov
push
xchg
out
sub
insb
xlat
xlat
inc
daa
pusha
add
push
pop
or
mov
sub
int
or
dec
add
in
scas
into
testb
ret
mov
mov
lock
dec
jp
imul
cmpsb
mov
outsb
test
imul
pop
sub
test
es
mov
inc
cmp
loope
es
out
cmpsl
setno
mov
pop
mov
add
xchg
mov
fisubs
mov
sub
in
mov
and
inc
orl
test
adc
ret
inc
insb
pushf
enter
jae,pn
rolb
sub
or
cmc
and
jne
into
cltd
and
push
mov
cs
sahf
mov
add
adc
xlat
repnz
int
xchg
fstp
in
and
jg
mov
insb
push
dec
lds
xchg
jge
xor
mov
aam
pop
push
call
shll
into
lcall
call
stos
lea
jp
adc
sub
jae
fwait
adc
or
pop
sub
das
jmp
inc
stos
out
outsb
adc
gs
cmc
test
pop
mov
pop
xchg
mov
fwait
ljmp
jnp
sti
es
mov
out
jno
test
or
repnz
adc
test
fmull
into
sbb
mov
sub
adc
cmc
xchg
fisttpll
cld
xor
mov
and
outsb
and
imul
jmp
push
lahf
sub
push
jp
test
sub
aas
leave
int3
in
sbb
aad
mov
cld
xor
xor
sub
jae
popa
cmp
loope
imul
dec
sbb
sbb
push
out
hlt
jl
out
stos
xchg
push
ficomps
pop
mov
jp
jbe
inc
push
fwait
xor
mov
jae
add
sub
and
push
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
fists
scas
into
adc
adc
sub
nop
mov
mov
daa
jp
jle
mov
out
fisubs
in
mov
sbb
add
mov
gs
mov
pop
fmul
or
idivb
push
pop
stc
ja
testb
adc
push
pop
adc
jl
xor
lahf
push
xchg
outsb
jns
cmp
in
or
add
pop
jae
je
test
pop
shlb
lret
dec
adc
js
fstp
xor
insb
push
jnp
push
sahf
jecxz
pop
cmpsl
lods
sbbb
int
fdivrs
sbb
pusha
ret
sbb
mov
jge
pop
js
mov
xchg
adcl
loope
fnstcw
outsl
adc
mov
imul
das
push
add
pushf
add
inc
addr16
jp
cmp
pop
and
ret
cmp
sub
push
je
push
movsb
push
roll
roll
fists
cwtl
and
data16
dec
push
mov
test
pop
push
fimull
pop
sub
int3
shrb
cld
mov
scas
cmpsb
and
hlt
cwtl
hlt
dec
mov
stos
leave
cmp
fcmovnb
dec
mov
and
cld
out
mov
inc
push
lock
lds
mov
sarl
mov
pop
mov
dec
xor
lods
push
dec
push
bound
sbb
rorl
add
ljmp
pop
mov
jle
jg
adc
push
sub
jp,pn
lahf
mov
cmp
rorb
cmp
sbbb
xor
or
pop
popa
inc
fstl
adc
or
fs
mov
lea
stos
xchg
jge
xor
call
jns
or
call
add
adc
pop
test
mov
mov
or
or
fdivl
mov
xlat
es
repnz
and
addr16
and
ja
adc
lahf
dec
faddl
scas
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
dec
inc
sarb
lret
enter
stc
or
loope
cmp
or
inc
mov
pop
aam
or
jp
mov
pop
dec
pop
in
jno
mov
sbb
jnp
mov
movl
mov
and
lods
jne
and
xchg
aas
loopne
mov
lds
pop
inc
sbb
mov
pop
clc
adc
sub
and
js
jecxz
inc
les
sub
sub
into
pop
pop
xor
pop
sbb
sarb
lret
lea
fmuls
pop
push
xchg
inc
add
popf
cltd
inc
fndisi(8087
out
sbb
inc
jb
mov
outsl
aaa
push
sbb
lods
mov
jge
dec
aam
jae
cmpsl
repnz
inc
jb
mov
and
mov
or
arpl
outsl
inc
out
pop
sub
movsb
push
mov
or
mov
aad
jle
mov
dec
js
mov
nop
lds
jl
mov
lcall
fidivl
loopne
cltd
shrb
mov
sub
and
lret
in
ljmp
les
scas
cmp
pop
jp
mov
adc
dec
inc
pop
repnz
xchg
push
popf
enter
out
mov
aas
mov
aad
fs
test
mov
cli
sbbb
pusha
push
push
jp
stos
stos
je
roll
mov
push
iret
lods
hlt
bound
mov
mov
cmpsb
inc
sub
aaa
sti
or
mov
and
ret
gs
inc
and
push
jno
mov
pop
clc
std
mulps
test
fdivr
push
leave
call
xlat
mov
enter
mov
xchg
xchg
dec
pop
add
in
mov
add
dec
jge
sub
push
cltd
pop
daa
sahf
cmp
mov
lea
bound
imulb
push
mov
and
jmp
scas
stc
sub
pop
inc
notl
sbb
in
mov
lds
jge
mov
add
jno
sbb
out
cli
add
stos
pusha
popa
cmp
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
inc
test
enter
mov
rclb
icebp
pop
outsb
push
loope
sahf
add
mov
xorb
sub
lea
mov
pop
and
push
xchg
xchg
pushf
or
std
jle
inc
xchg
ret
hlt
orl
cwtl
lods
pushf
out
and
xor
idivb
fisubl
sbbl
enter
push
push
mov
push
cmpsb
enter
mov
mov
cmp
into
data16
data16
cmp
das
push
mov
pop
jns
mov
pop
test
jl,pt
inc
pop
fwait
cmp
shrb
jne
sbbl
imul
int
adc
inc
xchg
loop
out
js
and
lahf
pop
movb
scas
jp
mov
mov
leave
add
repnz
data16
daa
flds
inc
lock
sbb
in
lret
loope
push
mov
lcall
repz
jno
sbb
xchg
in
xchg
test
push
inc
scas
push
clc
cmp
fsts
mul
data16
lods
bound
lea
imul
in
clc
ss
inc
mov
nop
test
dec
cmpsl
inc
pop
adc
dec
or
cmp
mov
sbb
test
pop
pusha
jno
xchg
mov
sbb
test
out
or
stos
sbb
inc
mov
in
cmp
ficomps
cld
or
int
sbb
test
dec
and
adc
and
add
and
sbb
shrl
je
out
outsb
sub
popa
push
pop
push
test
mov
dec
cmc
outsl
movhps
aaa
mov
cmp
shlb
arpl
cmp
iret
inc
pop
mov
dec
test
lods
stc
cld
push
stos
data16
push
int
lahf
and
lcall
lods
sti
jecxz
sub
outsl
inc
movsl
mov
xchg
scas
lock
pop
and
mov
outsl
decb
pop
jmp
outsb
mov
mov
xorl
shll
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
nop
mov
adc
movlps
mov
loop
xor
std
sbb
push
push
je
sarb
xor
lahf
and
stos
lret
pop
loope
push
sbb
in
or
in
ret
or
jmp
ja
mov
lea
sbb
sub
cld
call
xchg
push
std
sbb
and
adc
inc
rorb
in
fsubr
fcoml
adc
sbb
and
inc
scas
sti
stc
push
or
push
aas
cli
loopne
cmpsb
mov
popa
cltd
es
pop
and
lods
cmp
add
cmpsb
cmpsb
pop
xchg
sub
pop
dec
fcomps
repnz
sbb
out
push
ret
sub
or
xchg
aad
in
mov
hlt
stos
in
scas
push
lods
std
insb
mov
cmp
loope
sub
ss
adc
shrl
or
insl
insb
loop
jge
jae
mov
cvttps2pi
mov
lcall
ss
jp
adc
inc
or
lods
cmp
push
push
and
adc
pop
push
fwait
mov
inc
sub
std
enter
and
add
cwtl
gs
cmpsb
jnp
xchg
adcl
push
sub
aas
lods
out
test
and
and
push
aad
cld
stos
push
testb
pusha
gs
lcall
test
push
arpl
test
loope
push
push
push
adc
sbb
or
mov
mov
and
add
popa
push
ljmp
neg
jmp
xor
sbb
inc
mov
popf
outsb
sti
ret
in
or
mov
loop
roll
outsl
ljmp
pop
mov
sbb
mov
lahf
cmp
xchg
or
lock
dec
mov
dec
lret
pop
jmp
mov
call
dec
push
mov
aam
lret
stos
sub
rclb
aad
mov
adc
mov
iret
xchg
sbb
dec
and
mov
mov
xor
in
mov
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
jbe
insb
jge
adc
adc
xor
shll
pop
cmpb
jae
push
out
or
jns
cmp
xchg
fistpl
in
stos
or
mov
les
cmp
sbb
mov
mov
push
iret
loope
cmpl
jecxz
cmp
imul
mov
shll
out
pop
jecxz
push
inc
push
mov
jne
lock
xchg
sti
movsl
pcmpeqd
cmpsl
repnz
sbb
jp
cmp
lcall
out
call
stc
test
nop
adc
adc
jno
jmp
and
xor
and
mov
inc
stos
jae
cmpsl
ss
es
dec
notl
lods
imull
push
insb
loope
adc
mov
mov
adc
xlat
jno
and
and
cs
popa
sar
xlat
movsl
sbb
insl
iret
or
loop
stos
lret
aam
and
clc
sti
call
mov
lods
inc
jb
push
mov
add
nop
ror
fidivrl
icebp
sbb
inc
xor
insl
mov
mov
pop
sbb
shll
test
dec
shl
repz
pushf
int
sub
mov
push
clc
sub
jecxz
mov
mov
fistps
lods
shlb
outsb
dec
ss
pop
sbbb
sbb
mov
jmp
mov
outsb
pop
scas
add
inc
push
imul
into
arpl
add
ret
out
sbb
adc
int3
outsl
push
test
loope
push
cvtdq2ps
ds
ljmp
imul
mov
add
mov
push
xor
insb
push
js
scas
xchg
mov
gs
xchg
fdivrs
out
movsl
gs
jge
push
xlat
repz
out
xchg
jmp
sahf
and
xor
inc
dec
sub
xchg
pop
or
fstpl
xchg
mov
test
incl
testb
adc
test
leave
jecxz
add
shl
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
les
enter
xchg
jg
loop
push
sarb
jnp
xor
arpl
nop
rclb
mov
pop
or
push
ds
andl
roll
sarl
popa
mov
adc
enter
xor
jbe
push
pushf
or
scas
xchg
xchg
orl
push
inc
scas
push
pusha
jl
orl
test
cmp
lret
movsb
rorb
mov
add
jle
sti
out
cmp
sub
sbb
mov
sub
dec
call
gs
fildl
out
addb
xor
ret
jmp
out
push
nopl
movsl
mov
fidivl
or
stos
jno
out
lret
xchg
les
mov
int
or
add
sbb
test
cmpsb
ds
cwtl
xor
loope
inc
and
adcb
nop
leave
std
subb
and
cmpsl
std
es
pop
xchg
inc
loop
hlt
mov
in
inc
insl
and
loopne
mov
or
lret
jl
out
outsb
movsb
push
out
adc
dec
pop
loope
xor
pop
xchg
sti
rcl
outsl
arpl
lock
rcl
repz
cld
jmp
dec
arpl
adc
pusha
mov
ret
adc
hlt
les
xor
push
out
add
iret
cmpsb
inc
jg
inc
mov
sbb
lahf
push
imul
xlat
stc
es
cwtl
cld
fcomps
fldln2
hlt
ret
rcrl
push
lcall
orl
cmpsb
dec
into
jmp
mov
movsb
dec
stos
nop
sti
int
fisttpll
data16
mov
mov
iret
mov
in
cmpsb
jo
stos
loopne
addb
jnp
test
sbb
aad
addr16
adc
mov
mov
test
es
lds
out
mov
mov
cmpsl
mov
leave
lds
lea
cmpsb
xchg
jnp
mov
mov
and
ret
mov
bound
xchg
mov
addr16
sub
push
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
data16
out
adc
adc
ljmp
and
divl
mov
nop
jmp
jecxz
xchg
adc
data16
push
dec
test
stos
mov
mov
dec
out
test
lret
xor
xchg
sahf
dec
lods
lods
pop
jl
sahf
addr16
lcall
shr
sub
or
mov
dec
lock
sub
insl
cli
xchg
fwait
sbb
pop
ljmp
aad
cmp
movsl
mov
mov
sbb
cmpsb
sub
sub
mov
dec
push
jl
push
sahf
push
adc
mov
xchg
sarl
mov
sub
sub
movsl
stos
sbbl
mull
adc
and
mov
jns
add
mov
cli
ds
xor
lahf
das
faddl
and
iret
push
idiv
lods
xchg
xor
popa
les
movsb
out
dec
bound
mov
dec
stc
dec
or
in
xor
push
fstps
daa
sbb
jecxz
loop
leave
mov
stc
mov
push
cmp
and
mov
icebp
lcall
cmpsl
leave
jne
xchg
or
sbb
ljmp
les
adc
xor
movsb
add
test
gs
je
lock
jmp
jle
jge
daa
mov
and
arpl
cmp
push
orb
or
imul
dec
out
popf
jle
out
add
movsb
lcall
xchg
mov
push
xor
add
ss
out
stos
jo
pop
pop
out
jle
hlt
adc
xchg
jns
xchg
cmpsl
cmc
mov
cmp
mov
hlt
repz
xchg
jge
adc
test
mov
mov
je
xchg
and
dec
movsl
mov
or
xchg
or
mov
jge
lods
dec
xlat
sbb
shr
push
inc
dec
repnz
jl
pop
std
add
jne
dec
arpl
sbb
aad
pop
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
enter
lcall
adc
subb
jns
sub
lock
cld
mov
jnp
xchg
cwtl
aaa
sbb
aam
mov
ja
or
cmp
push
mov
mov
push
push
jmp
das
insb
rorl
in
mov
xchg
repz
adc
jecxz
adc
mov
mov
scas
xchg
jecxz
or
sbb
xchg
dec
fs
pop
adc
sbb
and
jns
mov
push
popa
dec
mov
rcr
enter
sub
ljmp
in
enter
pop
and
insb
inc
imul
xchg
sub
out
andnps
mov
mov
jae
enter
and
add
sbb
sahf
sti
lock
ret
cld
mov
push
in
xor
fucomp
std
ret
dec
adc
xchg
xor
xlat
pop
jbe
outsb
jb
addr16
sar
fnstsw
cmp
movsb
xor
clc
adc
fildll
pusha
mov
lret
mov
loopne
test
jnp
and
mov
mov
dec
adc
movsl
fstpt
pusha
into
les
dec
ret
ljmp
icebp
xchg
xor
scas
add
rclb
mov
fcoms
jbe
cmpsb
and
fstp
ds
inc
fcoml
fsubrs
imull
xor
test
xchg
stc
dec
addr16
loop
call
call
ret
dec
mov
sub
mov
pop
sarl
mov
pop
and
rcpps
stc
mov
das
xchg
in
jbe
xorb
xlat
stc
sbb
pop
das
jnp
pop
mov
sub
jmp
lods
mov
dec
mov
mov
es
jmp
je
and
fs
in
sarb
push
adc
or
cwtl
xchg
add
movsl
popa
test
dec
outsl
mov
jge
test
jle
lahf
cmpb
movsl
subb
shrl
fs
xor
insb
push
repz
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
cmp
test
dec
test
adc
movlps
mov
mov
mov
mov
lret
mov
dec
and
fidivrs
lea
cs
imul
jnp
add
jno
inc
xor
mov
mov
das
push
nop
push
hlt
xchg
inc
jle
xor
repz
popa
lods
mov
ret
decb
stos
cmp
jg
ret
cmp
insb
add
leave
ret
out
imul
pop
push
mov
jne
es
mov
bnd
aam
popf
clc
iret
sub
pushf
arpl
insl
out
imul
push
mov
sub
aad
lcall
jle
cmp
rcll
sub
xor
std
popa
subb
cmpsb
lcall
jle
inc
cs
lock
rorb
test
outsl
and
jb
js
sbb
leave
test
in
xor
xchg
inc
mov
aas
adc
push
int
cmpsb
or
inc
mov
mov
adc
out
jmp
push
out
aad
xchg
cs
ret
xor
arpl
shl
pslld
enter
sub
js
and
pop
jbe
jo
inc
or
movsl
mov
setl
popf
push
aam
insb
mull
push
sub
pop
decl
cmp
inc
arpl
stos
add
or
ljmp
push
dec
int3
loope
jle
subl
xchg
push
in
sub
jbe
pop
cltd
cmp
push
arpl
rcrl
jne
push
xor
lods
push
pop
adc
mov
pusha
xchg
sahf
wrmsr
xchg
xchg
xchg
scas
movl
outsl
mov
scas
std
test
add
int
xchg
sub
push
in
xor
mov
xchg
dec
xor
mov
rcl
enter
jecxz
sbb
pushf
inc
fnsave
inc
dec
leave
inc
iret
cmc
loope
in
pop
pop
pop
jl
dec
enter
pop
pop
jl
or
fadd
ret
repz
aam
les
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
fwait
sarb
movsb
adc
adc
cmp
loope
movsl
ss
movl
in
pop
and
adc
int3
add
sbb
dec
out
adc
repz
mov
push
nop
and
xor
ljmp
xor
jb
lret
fcoml
sbb
or
test
adc
dec
inc
lock
pushf
insl
add
shl
pop
int3
addr16
push
mov
jno
ss
mov
shr
stc
cwtl
pop
push
imul
hlt
xchg
loope
pop
je
in
movsl
sbb
pop
dec
inc
cwtl
cmp
push
jns
decl
jg
lds
push
pop
mov
adc
xchg
add
cmpsl
mov
notb
jg
adc
and
pop
push
mov
cltd
and
leave
outsb
push
add
mov
jae
push
push
jbe
pop
je
and
hlt
add
push
inc
cmp
inc
sub
mov
insl
negb
loopne
cmp
jmp
mov
call
aad
imul
rcrb
and
rorb
icebp
jns
pop
sbb
cmpsl
jl
loop
jb
mov
std
std
ffreep
pop
int
out
imul
adc
lock
inc
cmpsl
fidivrl
addl
or
jns
push
int
mov
adc
rclb
aaa
je
mov
or
xchg
mov
jbe
movsl
jle
ficoml
pop
mov
or
sbb
jg
stos
inc
fnstsw
test
les
in
imul
test
sub
ss
mov
jnp
imul
int
int
ss
or
mov
sti
cmp
adc
test
repz
loopne
je
or
js
into
outsb
add
jmp
push
shll
cld
dec
sub
push
lret
sti
lods
jb
ss
push
shr
adcl
push
or
aad
insl
xor
xor
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
or
enter
ja
inc
ljmp
dec
adc
or
jecxz
ss
push
mov
push
mov
push
xor
cmpsb
mov
enter
pmulhuw
sub
ret
jns
sub
nop
mov
mov
testl
xchg
push
xor
push
lea
mov
imul
mov
iret
cmpsl
fstpl
repnz
xlat
lcall
rcr
les
sub
data16
movsb
sub
push
lods
das
xchg
fyl2xp1
enter
mov
arpl
pop
xor
and
mov
xchg
pop
xchg
dec
into
inc
loope
in
mov
push
lret
pop
mov
fists
dec
pop
adc
gs
push
pop
jl
cmc
clc
dec
mulb
add
mov
push
loopne
popf
adc
repz
movsl
cli
jbe
loop
fwait
cmp
xor
xchg
adc
inc
call
mov
mov
loopne
repz
push
cwtl
inc
in
xchg
mov
push
add
outsl
mov
pop
dec
and
ja
pushl
xor
daa
inc
sysenter
leave
add
mov
and
cmp
sbb
sbbb
in
xchg
push
mov
cmp
insl
inc
mov
mov
adc
insl
mov
inc
stos
rolb
add
push
cld
data16
cmpsb
inc
rcll
sbb
cmp
ret
mov
std
jmp
lods
jmp
pop
rcrb
icebp
popa
and
or
popf
gs
mov
mov
loop
mov
fldl
scas
jns
xchg
lods
and
cmpsl
adc
popa
loopne
ficomps
out
inc
fsubrl
ficoml
mov
andb
enter
sbb
call
inc
mov
cld
lcall
jmp
inc
fyl2x
mov
js
dec
fists
ds
sub
jmp
in
mov
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
stos
imul
sbb
test
cmp
lds
inc
cld
sbb
push
into
or
mov
push
cmp
xor
and
outsb
push
loopne
mov
into
sub
imulb
or
xchg
cwtl
out
adc
sub
inc
ss
xlat
ljmp
mov
xchg
push
pop
xlat
cmp
dec
int3
enter
and
aaa
mov
scas
repnz
jb
jbe
sbb
cli
lcall
jmp
inc
jl
xchg
hlt
outsb
adc
lahf
test
ds
shlb
sbb
scas
fs
mov
jns
movsb
loopne
or
arpl
cmp
add
jo
out
test
std
or
inc
inc
mov
int3
and
es
mov
outsb
dec
xor
cli
pop
adc
fwait
not
outsb
jns
inc
pop
arpl
adc
sbbl
rolb
loopne
sub
cmp
dec
out
jnp
jmp
lahf
inc
fucomp
sbb
mov
loopne
ja
inc
cmp
aad
dec
addr16
or
into
and
repz
cltd
and
xchg
test
inc
mov
aad
lds
mov
nop
test
lret
jp
outsl
fwait
jns
push
cmpsb
pushf
in
adc
ljmp
insb
dec
jmp
addb
mov
insl
insl
insb
cmp
in
test
loope
add
cwtl
adc
imul
mov
movsl
lods
xchg
xchg
stos
leave
jns
ja
movsl
add
add
js
cmp
inc
lock
mul
jl
fs
daa
inc
mov
divb
out
jne
pushf
insb
bound
stc
adc
sbb
cmp
inc
ficompl
inc
xlat
inc
inc
mov
push
xchg
mov
jno
adc
inc
cmp
and
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
inc
push
push
cwtl
adc
adc
fsubrl
int3
es
and
push
push
cmp
loop
lahf
xor
fbstp
test
or
cli
or
add
adc
xchg
arpl
xchg
cmc
cmp
lea
lods
xorl
and
cmp
sahf
mov
bound
pop
std
pop
or
cmpsb
jo
xor
andl
cmp
push
shrb
lods
and
inc
inc
mov
xor
dec
cli
mov
faddl
mov
outsb
xor
pop
outsb
pop
add
xlat
or
ss
add
mov
xchg
jo
movsb
fwait
lcall
adc
ljmp
popa
stc
shrb
outsl
adc
out
xchg
sub
cmp
stos
add
loope
push
cmpb
pop
add
or
adc
or
stc
push
loope
out
rolb
or
push
shlb
sbb
out
adc
xchg
mov
jge
bound
or
xlat
enter
and
loope
jns
call
popa
and
push
jmp
xchg
and
fs
xor
pop
sub
xor
dec
dec
sarb
lret
in
push
lds
arpl
inc
jo,pt
xchg
mov
cmp
ss
flds
fsubl
dec
jo
fs
jp
cmc
cmp
inc
and
jg
jbe
aaa
out
in
dec
repnz
mov
add
mov
cmpl
sbb
popw
add
subb
pop
mov
shll
push
subb
sarb
jne
aam
and
pop
test
fbld
ss
xor
cs
sub
pop
dec
roll
mov
int3
fimuls
mov
pop
insb
mov
dec
sbb
divl
sbb
mov
scas
lahf
sbb
xchg
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
sub
jle
xchg
adc
adc
xchg
shr
in
push
pusha
mov
adc
xor
aad
aas
and
mov
test
daa
testb
adc
jne
sbb
inc
sbb
mov
or
xchg
imul
stos
lcall
pop
movsw
adc
mov
jno
inc
pop
testb
pop
pop
mov
in
outsb
dec
cld
pop
mov
pop
pop
push
popa
push
cmpsl
fs
lods
lcall
cmp
movsl
xchg
rcll
push
popf
xchg
lods
enter
lock
mov
jg
lods
imul
or
cltd
mov
xor
dec
add
imul
fsubrs
lret
adcb
es
insl
mov
add
orb
jecxz
fildl
into
popf
jae
stos
jl
push
adc
push
leave
push
pop
and
popl
test
mov
sub
inc
xorw
sub
pop
push
notb
test
push
mov
es
mov
push
stos
xchg
lods
and
adc
pop
cmc
loopne
pusha
adc
mov
ret
adc
add
or
stos
sub
dec
mov
inc
fistpll
repnz
jbe
je
dec
lods
out
jmp
fucomi
loope
pop
fisubrs
jmp
sbb
les
adc
pop
icebp
sbb
js
stos
mov
lods
jmp
shll
jo
out
cmp
sub
cwtl
dec
ficomps
dec
lods
scas
in
xchg
cmp
fsubl
jecxz
ja
ljmp
ja
shll
outsb
mov
pop
out
outsl
xor
xchg
adc
ljmp
push
dec
jo
loope
mov
adc
add
pop
js
fsub
jg
sub
jo
mov
inc
mov
int3
inc
fstp
lcall
push
sbb
test
fcomps
pop
fmull
mov
lret
mov
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
rdmsr
stos
xchg
adc
jo
mov
cmp
cmpsl
pop
dec
jnp
in
jo
jecxz
mov
push
in
inc
mov
mov
dec
sarb
adc
or
outsl
push
out
dec
pop
pop
std
jne
jp
xor
sub
mov
jle
aad
jno
cs
adc
sbb
cmp
mov
movsl
and
loopne
inc
ret
mov
dec
mov
inc
jl
cltd
icebp
in
inc
jne
cltd
jo
lock
out
push
mov
das
or
jae,pn
sub
mov
dec
sub
xchg
push
ds
jge
xchg
cmpsl
cmp
outsb
std
adc
inc
out
rclb
cmp
and
popa
mov
test
fs
lahf
in
mov
jns
in
arpl
ret
inc
add
movsb
pop
jno
stos
jge
jne
sbb
ret
jecxz
sbb
mov
fadds
pop
lea
cmpsl
push
mov
adc
xchg
fwait
jae,pn
pop
pop
cmp
lods
adcl
lods
or
ret
xor
xchg
sub
imul
inc
xchg
jnp
mov
rolb
iret
test
pop
repnz
lcall
and
fcom
fisttpll
fistpll
call
xor
adc
scas
stos
pop
pop
lret
shrb
and
mov
insl
ret
mov
arpl
inc
sahf
xchg
aaa
jne
ret
mov
mov
inc
adc
ss
mov
repnz
clc
arpl
out
mov
push
fsts
and
pop
pusha
inc
lds
imul
push
ror
lahf
mov
inc
mov
cld
sub
push
jl
add
dec
call
cmpsb
ja
xchg
ss
fsubrs
aam
add
ret
xor
hlt
mov
jl
sub
cli
loopne
out
ret
out
mov
mov
inc
adc
ret
push
shl
dec
jmp
cmpb
sahf
int3
lret
cwtl
stos
mov
iret
sub
add
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
dec
iret
fidivrl
enter
in
add
jb
sbb
fwait
inc
sub
es
push
arpl
mov
inc
jae
hlt
pushf
dec
sbb
push
sti
rcr
sbb
mov
test
cld
insl
xor
data16
xor
fwait
adc
lret
pop
pop
pushf
lods
in
and
lret
bound
or
mov
inc
jae
cmp
lods
mov
fs
mov
push
xor
enter
int
sub
lcall
mov
push
imul
mov
jne
mov
mov
lret
std
cwtl
add
dec
xor
fdivs
cmp
in
dec
inc
mov
jmp
aad
dec
add
out
push
jg
jno
jb
cld
and
push
cmp
push
lock
dec
sti
push
ret
cmc
fucomip
xor
inc
mov
and
xchg
xchg
sti
cmc
mov
repnz
icebp
ret
loop
js
cltd
sbb
std
mov
pmovmskb
ror
out
mov
xor
sub
dec
cld
in
gs
mov
ret
jle
pop
push
cmp
push
adc
sub
insb
js
adc
inc
or
xor
fcmovu
or
mov
movsl
sub
mov
inc
nop
jne
int
or
mov
lea
out
popf
adc
mov
add
mov
js
aaa
xor
cmp
or
xchg
xor
filds
mov
sbbl
in
imul
in
fldenv
fistpl
test
les
pop
clc
dec
sbb
push
xchg
mov
jo
or
xor
inc
push
jp
loop
out
in
out
pop
mov
mov
seto
fcos
ljmp
xchg
cmp
pop
push
mov
sub
iret
or
adcl
mov
lock
outsb
dec
ja
fidivs
sub
pmullw
lock
lret
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
dec
ljmp
jg
mov
cltd
out
adc
or
xchg
aam
mov
mov
sbb
iret
aaa
js
or
in
and
shll
xchg
or
mov
gs
mov
mov
std
xor
jecxz
clts
fs
mov
popa
sarb
mov
pop
add
push
adc
daa
popf
aam
mov
xchg
clc
fcomp
adcl
jns
or
mov
or
fidivl
jno
loopne
lahf
jp
adc
add
ret
les
in
setge
lea
pop
jl
add
aad
push
jmp
add
jge
pop
xchg
rcr
loop
xor
negb
mov
cwtl
add
movsl
jb,pn
repz
sbb
shlb
repnz
pusha
mov
notl
es
jmp
xor
insl
lret
aaa
jecxz
dec
out
outsb
sub
stos
and
adcl
push
lahf
incb
into
pop
addr16
movsl
sbb
mov
xchg
mov
pushf
mov
test
xlat
sbb
mov
push
mov
cwtl
pop
adc
jg
sti
fbstp
in
xchg
leave
and
ja
cmpsb
lea
xchg
jge
int3
push
rcl
lahf
hlt
pop
pop
pop
addr16
jle
inc
adc
cmp
and
sbb
std
xor
dec
push
es
pushf
popf
cmp
loope
dec
imul
xchg
js
and
jae
not
fucom
xchg
push
xorl
jo
xchg
and
fisubrs
js
cmp
xchg
popw
jnp
lcall
push
push
dec
lret
inc
arpl
mov
das
popa
fdivr
xlat
adc
push
push
adc
fwait
inc
cmp
fdivs
push
rcll
jne
mov
mov
jnp
out
sbb
testl
lcall
add
mov
repz
push
loop
stos
call
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
mov
xchg
adc
pop
inc
and
aad
je
lock
imul
mov
xlat
ret
ss
pop
test
je
dec
xchg
cmpsl
push
adc
cltd
or
test
sub
fs
mov
push
mov
adc
mov
ror
dec
insl
fstps
cwtl
mov
sbb
sub
and
pop
cltd
adc
jle
inc
pop
sbbb
sbb
ror
hlt
lods
jne
push
test
push
xchg
add
adc
mov
je
push
leave
loope
iret
and
clc
or
imul
push
or
cmp
nop
fs
push
cmp
icebp
push
mov
push
jae
test
jl
add
push
mov
push
inc
rol
dec
mov
std
aam
add
in
cmp
stc
adc
cmp
xor
cs
jge
xor
sbb
and
daa
insb
loopne
fcomps
fwait
add
fiaddl
xor
insb
adc
cmp
sbb
pop
loopne
or
add
xchg
dec
ror
mov
mov
fidivl
loop
enter
mov
adc
xor
enter
jmp
inc
sbb
or
mov
pop
push
xor
mov
push
rcr
mov
in
movsw
or
cld
cmp
mov
repnz
sub
push
mov
dec
cmp
add
je
mov
fiaddl
cmp
lods
inc
lods
jb
xchg
sbb
or
xor
in
loopne
inc
mulb
sbb
push
pop
mov
fisubrl
or
push
mov
aad
aad
pop
xor
dec
sub
test
mov
test
jo
rcll
and
je
outsb
lea
cmc
int
pop
in
xor
mov
fimull
movsl
pop
or
daa
xchg
dec
add
xadd
mov
jl
insb
cmp
cmovge
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
adc
adc
movlps
push
hlt
les
int3
into
in
mov
push
sub
loop
xchg
bound
push
int
mov
sbb
push
xor
pop
stc
and
aas
mov
xor
jl
cwtl
out
mov
mov
ror
in
mov
dec
mov
pop
inc
pop
cmp
or
jmp
fwait
movsl
cs
sub
test
ret
aaa
subb
push
cmc
sub
push
mov
ret
pusha
test
xchg
pop
mov
int
dec
sbb
pop
rcr
addr16
pop
pop
adc
test
jle
add
cwtl
cmp
es
push
push
xchg
sbb
xchg
inc
je
jae
mov
scas
ja
ja
pop
add
xor
cld
pop
mov
arpl
filds
mov
adc
fmul
cwtl
push
test
mov
xchg
mov
xor
xlat
ret
bt
gs
dec
ss
pop
mov
in
push
cmp
and
push
dec
xchg
ret
add
cld
movsb
adc
in
inc
jno
lahf
mov
xchg
push
and
test
lods
sbb
aas
lock
in
testb
mov
ficompl
leave
into
pop
and
jo
mov
inc
push
push
adc
movsl
cmpsl
call
add
push
stc
std
fbld
pop
mov
cmpsl
dec
pop
imulb
insl
cmpsl
and
fbld
xor
and
adc
jp
or
sbbb
jnp
imul
mov
sub
lret
xchg
jo
inc
and
or
daa
pushf
rcl
mov
imul
test
repnz
hlt
icebp
clc
dec
sbb
icebp
cmp
push
jge
adc
out
cltd
mov
bound
or
das
in
adc
sar
loopne
cs
dec
fnstsw
push
mov
sbb
xor
jmp
das
cld
mov
mov
mov
decl
decl
cmp
jmp
stos
js
pop
and
mov
xchg
cmp
adc
movlps
dec
aam
xor
push
pushf
adc
add
xor
add
push
shlb
lret
dec
or
mov
and
sub
outsl
sub
xchg
sub
pop
or
idivb
mov
nop
pop
adc
inc
idivl
jbe
int
add
insl
mov
jp
jns
jno
sub
bound
mov
lret
dec
cmp
sbb
jne
jbe
scas
mov
mov
mov
fisubrl
popa
xchg
pop
or
aam
cs
or
scas
jo
pop
inc
xlat
cmp
dec
mov
mov
shl
and
jbe
popa
inc
sbb
mov
pop
les
test
scas
and
cmpsb
lea
xor
outsb
pop
jle
jns
push
lret
xchg
and
bnd
or
xor
sbb
xchg
mov
jle
int3
xchg
dec
out
pop
inc
mov
xor
push
getsec
and
sub
cmpsl
sub
push
xor
sub
sarb
les
aad
pop
test
call
xchg
dec
mov
sub
dec
lcall
call
int3
arpl
nop
push
sbb
xchg
sub
ljmp
movsl
leave
xlat
mov
aas
xor
xchg
fxch
sbb
stc
aad
mov
stos
inc
add
imul
lret
pop
mov
mov
arpl
scas
dec
mov
ret
sub
in
jns
add
fucom
xchg
xor
sub
sbb
arpl
jbe
jmp
inc
int
pusha
cli
int3
ss
add
scas
inc
js
mov
add
scas
or
or
cld
lcall
adc
pop
sahf
aaa
push
mov
pop
sbb
inc
repz
or
jmp
jge
inc
and
outsb
loope
mov
out
pushf
mov
push
outsl
mov
dec
mov
mov
loop
sbb
lock
jb
leave
lds
and
push
mov
inc
or
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
and
mov
enter
aaa
push
test
sbb
and
sbb
inc
push
lds
imul
lret
stos
push
pop
add
shlb
xchg
mov
test
stos
in
lds
lods
add
sbb
xchg
cld
or
inc
sbb
filds
jno
dec
into
maxps
std
xchg
pop
movsl
pop
movsl
mov
cmpsl
pop
cmp
fmull
ljmp
fs
mov
pop
in
xchg
mov
mov
mov
mov
stos
xchg
cmp
cmp
or
inc
lods
fsubrp
sbb
jno
in
sbb
iret
arpl
or
inc
cltd
or
in
jbe
daa
stos
je
call
push
mov
xlat
add
sbb
xor
mov
shrl
xorl
ja
mov
div
mov
jp
xor
jg
test
outsb
jns
xchg
mov
xlat
mov
sti
pop
std
cmpl
lds
lret
fdiv
and
scas
stos
jp
jbe
mov
or
push
jnp
mov
or
or
lret
mov
sarl
test
push
or
inc
pop
test
out
fistl
dec
push
pop
cmpsl
ja
lcall
test
jbe
mov
pop
std
jl
or
test
pop
cltd
rclb
out
fstpt
ljmp
fsubr
xor
mov
xor
data16
xor
outsl
and
push
les
movsb
adc
jno
in
cmc
and
xchg
xchg
inc
pusha
mov
cmc
inc
cmp
push
in
add
icebp
inc
mov
xlat
add
adc
jle
fisubrl
jmp
pop
jbe
ret
sbb
mov
imul
jecxz
popa
pop
sbb
dec
xlat
sbb
outsb
fldenv
outsl
pusha
out
test
cmp
arpl
pop
bound
cltd
je
nop
rorl
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
mov
js
jo
adc
movlps
sbb
loope
adc
mov
pop
aam
cli
mov
test
lret
inc
movsb
bound
js
mov
inc
shlb
push
sti
mov
mov
sbb
clc
in
int3
lret
adc
pop
cltd
pop
cmpsb
call
loope
in
or
lcall
sbb
push
aad
test
loopne
aas
jne
repz
jae
jl
mulb
fs
movsb
push
dec
lods
lret
sub
inc
in
sub
enter
out
popf
xchg
inc
filds
or
mov
ret
push
push
outsb
xor
dec
adc
addr16
cmp
test
popf
add
mov
dec
cmp
orl
inc
aas
pop
das
outsl
mov
add
mov
add
fistpl
push
fwait
xchg
push
movsb
dec
scas
mov
pop
setle
shrl
mov
data16
push
fs
inc
fldenv
in
xchg
cmp
fldl
mov
rorl
je
jp
adcl
pop
sub
repz
xor
popf
lods
cmpsl
std
cli
ljmp
push
or
cltd
dec
or
aas
imul
sbb
pop
inc
mov
push
cli
fwait
sbb
xchg
or
and
ss
sbb
or
std
push
leave
psubusb
mov
push
cmp
xor
mov
inc
test
sbb
cli
jo
pop
fisttpl
jae
push
add
out
pop
and
scas
cmp
dec
lret
ret
aad
mov
sbb
ret
xor
xchg
mov
or
cld
mov
imulb
out
loopne
cmp
bound
inc
dec
stos
fldenv
test
into
enter
jle
cmpsl
sub
lock
pop
mov
cs
stos
xchg
hlt
sbbb
mov
cmpsb
sbb
sti
or
inc
push
inc
fwait
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
fsts
cmc
stos
es
adc
adc
scas
sbb
orb
xor
inc
fidivrs
or
mov
aad
cmp
mov
sahf
or
lahf
imul
rcr
aad
xor
stos
or
mov
cmpl
jbe
cli
pop
movsb
adc
lahf
xchg
pop
and
iret
sbb
lcall
pop
dec
ret
aaa
push
mov
xor
pushf
cmp
mov
push
dec
in
dec
cli
loope
shll
mov
jo
ja
or
loope
mov
cmp
dec
mov
or
add
xor
imul
cmp
inc
mov
roll
push
rclb
es
or
mov
test
cltd
pusha
adc
ret
outsb
push
cs
shll
mov
pop
out
loop
mov
dec
stc
mov
leave
mov
mov
or
std
sbb
js
add
loope
sarl
jmp
push
mov
test
xchg
adc
xchg
jb
adc
xor
imul
add
mov
roll
or
jno
jmp
rcrl
inc
subl
push
push
xchg
add
les
out
mov
push
in
cs
addr16
outsl
icebp
scas
pop
jbe
mov
inc
pop
and
data16
aas
mov
cmp
popf
lods
fstpl
mov
add
pop
daa
push
and
hlt
xchg
mov
cmpsl
bound
push
and
mov
mov
leave
mov
popf
xchg
dec
cs
inc
arpl
xor
call
jo
pop
gs
push
push
lock
orl
xchg
and
mov
in
mov
xor
inc
adc
addr16
push
clc
xor
pop
jge
sub
add
test
lods
rorl
lds
loopne
fistps
jns
rcrb
leave
dec
inc
sti
cmp
add
mov
daa
xchg
dec
lea
leave
data16
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
ret
js
push
adc
mov
sbb
int
jns
inc
xor
cmpsb
jl
push
push
add
sbb
lock
jns
pop
mov
aad
or
xor
arpl
jno
std
movsb
sub
insl
cwtl
loopne
cmpsl
mov
adc
fimuls
aam
dec
pop
mov
das
repnz
jbe
int
sbb
mov
loopne
nop
imul
sbb
jb
pusha
xor
push
xlat
pop
pop
mov
pushf
ret
sarb
lock
fiaddl
jns
sub
ret
in
lcall
add
nop
jns
jmp
cmp
pop
and
cs
jns
gs
mov
ret
mov
mov
jecxz
movsb
ret
rcr
popa
inc
out
or
mov
inc
lcall
jbe
mov
test
pop
out
mov
ret
xchg
xor
cltd
cmpsb
mov
xor
push
cltd
pushf
outsl
push
push
test
lahf
xor
xor
sbb
das
sub
lcall
xchg
mov
inc
ljmp
aas
push
out
lret
cmp
insl
dec
jp
popa
push
dec
lahf
cmpsl
hlt
sub
sub
lds
mov
cmp
imul
lds
push
mov
idivb
inc
xlat
mov
sub
aaa
out
test
fs
fisttps
insl
xor
int
sbb
push
xchg
ja
lods
xchg
cwtl
inc
fsubl
fisubl
scas
rorl
js
lahf
cmc
pop
push
mov
xchg
fs
sbb
das
xchg
cltd
inc
scas
or
nop
stos
les
std
mov
mov
pop
pop
cld
jb
push
stos
and
add
push
ds
add
sub
jnp
bound
data16
test
push
inc
insl
dec
in
xlat
xor
dec
adc
xchg
push
dec
mov
push
fldl
sub
cmp
mov
cmp
dec
mov
fcompl
mov
test
xor
xchg
push
je
dec
daa
add
jmp
cmp
mov
mov
push
pushf
add
and
and
push
dec
jae
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
and
lea
enter
adc
stos
aaa
sbb
mov
popa
sbb
gs
or
int
push
jmp
cmc
dec
push
inc
cmp
cmc
ljmp
andb
rcrb
enter
xor
fsts
and
or
push
inc
jb
sti
add
mov
dec
jge
setae
inc
push
cltd
nop
mov
cmp
add
mov
movsl
sbbl
in
lret
cld
xchg
insb
stos
movsl
inc
xor
clc
jle
popl
mov
and
cmp
lods
inc
cld
scas
fsubr
js
imul
xchg
xor
xchg
lods
and
jb
push
mov
sub
sbb
push
adc
cmp
arpl
movsb
lock
mov
push
sbb
in
mov
and
cltd
cmc
adc
fldl
sbbb
mov
or
fucom
pop
popa
pop
insl
push
icebp
enter
cmp
dec
outsl
cld
sub
xchg
mov
dec
stos
dec
xchg
cltd
loopne
sub
mov
sub
sub
cmpsl
fiaddl
xor
pop
cwtl
inc
ficomps
aad
mov
les
and
or
inc
js
das
mov
scas
push
pop
nop
inc
adc
and
mov
mov
test
loope
out
pop
xor
pop
inc
pop
push
inc
jmp
sahf
mov
popa
loop
mov
fcmovnu
mov
stos
cmp
sbb
mov
fbstp
dec
bound
leave
mov
pop
aam
lods
sub
sti
adc
insb
arpl
jae
xchg
loop
sbb
xchg
int3
jnp
push
cmp
cmc
inc
scas
cmc
lods
jae
add
lock
xchg
in
popa
imul
jno
mov
cmp
jnp
jg
popf
push
add
xchg
cs
in
xor
inc
ljmp
out
push
movl
bound
jo
imul
sub
inc
xchg
addl
mov
sub
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
pop
jne
testl
jg
jecxz
fstpt
jae
inc
clc
mov
mov
pop
pusha
adc
pop
sahf
inc
jl
mov
fmull
jecxz
stos
mov
mull
xchg
pop
push
sbb
xor
stc
xchg
adc
cld
push
in
lock
jg
daa
inc
out
sarb
mov
add
pop
xor
jns
mov
xor
jo
pop
or
cmp
mov
in
std
push
inc
push
add
movsb
das
jno
loope
sarl
mov
add
sahf
into
stos
push
cs
lcall
sub
add
ds
or
mov
dec
and
lods
aas
leave
sub
dec
fsubrl
cmpsl
jne
sbb
fwait
lea
enter
je
jp
ss
rolb
movsl
cli
iret
loope
std
fnstenv
or
std
lcall
mov
aas
icebp
dec
pusha
pop
sub
add
pushf
je
out
mov
and
out
mov
pop
jbe
or
mov
sti
mov
pusha
enter
testb
pop
xchg
or
mov
rcrl
pop
mov
aam
pop
orb
dec
mov
lea
xor
or
stos
fs
add
loopne
mov
add
movsl
sub
pop
cs
sarb
mov
std
rcll
inc
gs
jmp
mov
pop
pushf
or
mov
add
arpl
mov
sbb
sahf
add
push
push
inc
or
cltd
shrb
into
fistl
cmp
xlat
or
mov
xabort
xorb
fdivrs
loop
hlt
rcr
addr16
add
leave
movsb
movsb
xor
cs
fdiv
mov
or
fimuls
xchg
mov
mov
stos
push
fnstenv
in
into
xorb
lcall
or
adc
jne
setns
adc
mov
jge
adc
mov
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
repz
mov
adc
movlps
pop
je
data16
ljmp
xchg
mov
mov
ret
inc
rcll
jns
bound
add
inc
mov
pop
mov
mov
inc
adc
bound
stc
call
pushf
sbb
pusha
add
std
loope
inc
mov
jae
mov
outsl
stos
fnstenv
dec
mov
rcll
ret
cmp
sub
fcompl
adc
cmp
jae
push
pop
mov
xlat
faddl
shlb
cmpsl
das
shlb
es
sbbb
rclb
mov
adc
test
inc
arpl
lods
pop
sub
test
jb
aaa
aaa
stos
pop
adc
xor
sub
dec
xchg
sahf
or
mov
lock
jbe
mov
xor
les
jg
stos
rcrl
int
dec
sub
fstpl
pushf
jb
dec
lret
lea
out
decl
nop
cmc
xchg
cltd
jl
movl
jns
push
xorb
gs
je
ljmp
xchg
aaa
mov
mov
pop
jge
jl
adc
adc
fwait
sbb
in
insl
cltd
adc
data16
scas
leave
xchg
push
add
aam
fstpl
add
adc
mov
fdivl
push
jmp
adc
mov
mov
add
adc
push
cmpl
mov
clc
fidivrs
outsl
cld
dec
out
pop
push
sarb
lock
insb
fnstenv
shlb
rol
lcall
scas
cs
mov
mov
imul
cld
inc
jnp
sbb
gs
xor
std
xorps
jecxz
jp
add
mov
xor
repz
insl
insb
xchg
mov
lods
xchg
je
xchg
lods
inc
jno
mov
fnstenv
test
in
push
push
pop
sub
cwtl
add
cmp
mov
cs
xchg
push
sub
jo
outsl
gs
and
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
or
pop
adc
adc
call
loop
mov
inc
or
inc
cmp
and
push
mov
sbb
pop
push
mov
aas
dec
or
cwtl
push
and
inc
shll
pop
enter
ret
jmp
movsl
mov
add
shrb
insl
and
mov
mov
push
mov
cmp
xchg
fistpll
into
test
push
pop
mov
dec
mov
dec
mov
cwtl
loope
test
or
push
iret
sbb
sub
dec
insl
xchg
mov
fwait
out
lods
mov
call
das
pusha
dec
mov
jmp
inc
loopne
test
rcl
jle
aam
cltd
push
and
mov
shll
out
mov
int3
push
xchg
ljmp
push
sbb
sahf
addr16
inc
xchg
dec
xor
sbb
scas
movsl
stos
mov
bound
sarl
mov
xor
mov
or
and
xchg
push
clc
std
stos
push
ja
sub
scas
fwait
cmp
dec
xor
inc
mov
sub
sub
outsl
jmp
xchg
cmp
and
aam
xchg
in
inc
and
push
cmp
cmp
or
decb
out
xorb
lds
inc
adc
adc
stos
jg
in
loopne
stc
fcmovbe
inc
push
mov
dec
scas
dec
stos
sbb
adc
test
lds
dec
or
mov
adc
add
bound
jmp
sub
inc
and
or
push
addb
popf
les
adc
add
frstor
push
mov
je
test
xor
out
mov
pop
out
jmp
int3
repz
ljmp
sub
sub
movsb
leave
xor
or
orb
dec
scas
sahf
mov
sub
pop
inc
rorl
dec
xchg
sti
xchg
jns
repz
pop
sbb
scas
mov
add
out
nop
into
mov
jns
cmp
cli
or
lods
mul
pop
sbb
decl
mov
mov
icebp
mov
cwtl
in
mov
mov
out
mov
xlat
jmp
jbe
xlat
mov
xchg
xor
inc
insl
xchg
leave
rcrl
in
cmp
sub
addb
inc
mov
pfmin
push
cmpsb
xchg
aas
adc
mov
ret
inc
lods
xchg
jp
jne
cmp
cltd
in
inc
xchg
test
sbb
shlb
xor
in
test
adc
fcmovnb
jle
insl
push
lods
adc
pop
in
jno
mov
adc
mov
in
adc
dec
pusha
pop
xchg
jo
inc
in
pusha
or
faddl
push
and
sbb
mov
mov
xchg
ds
cmp
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
lods
push
adc
adc
or
scas
imul
push
cmpsb
das
fcomps
mov
in
insb
pop
push
pop
movsl
xchg
push
mov
loop
clc
sub
std
scas
arpl
mov
push
adc
mov
push
sbb
arpl
scas
jg
pop
ret
mov
sbb
aaa
movsb
adc
push
push
out
imul
mov
hlt
sub
aaa
xchg
jp
stos
ss
inc
mov
aam
push
fwait
in
inc
std
push
xchg
xchg
cmc
mov
hlt
add
lods
inc
cli
mov
and
sbb
outsl
xlat
push
sbb
jge
push
push
push
push
xlat
inc
pop
xlat
je
les
and
or
or
jle
cmp
sub
lcall
mov
movsl
and
test
adc
ss
in
mov
test
sub
imul
popa
cmp
leave
ds
imul
add
xlat
push
adc
dec
mov
scas
xchg
add
adc
and
add
cmp
aas
stos
icebp
push
std
add
sub
jne
cmp
or
repz
xchg
sub
pop
movsb
call
xchg
cs
mov
insb
test
and
dec
aad
ret
inc
ss
imul
xor
dec
cmpsl
stos
and
xlat
mov
mov
notb
mov
or
mov
jle
sahf
jnp
jl
leave
mov
cltd
pop
and
and
mov
ja
cltd
jns
pop
adc
and
jno
lds
push
xor
popa
out
mov
int
daa
stos
inc
push
add
or
repz
dec
jmp
mul
push
mov
lock
jo
loopne
jbe
cmp
push
xchg
ret
int3
mov
xor
push
sub
push
in
ret
mov
addr16
loopne
xor
not
stc
addl
out
mov
mulb
cwtl
pop
push
or
imul
mov
ret
mov
push
sub
loopne
stos
test
cmpsl
hlt
pop
mov
mov
mov
jecxz
dec
sbb
subl
imul
pop
dec
adc
dec
xchg
fidivl
mov
imul
cmpsl
push
outsb
fstpt
sbb
mov
lahf
dec
mov
in
loop
cmp
xchg
push
bound
out
sti
int
and
ja
pop
fstpt
inc
inc
sbb
xchg
jne
mov
mov
pop
dec
jnp
cmc
inc
ss
jecxz
fs
sub
pop
rorb
nop
or
and
data16
mov
add
cmp
pop
movsb
rorb
aad
mov
push
test
jo
mov
xchg
mov
imul
dec
popf
cmp
test
cs
cmp
mov
cmp
push
cltd
mov
and
sub
xchg
bswap
add
subl
jg
frstor
jl
fwait
hlt
lcall
sbb
fwait
dec
repnz
xchg
lds
subl
mov
fdivr
int
xor
scas
out
push
stos
sub
popa
mov
dec
xchg
sbb
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
