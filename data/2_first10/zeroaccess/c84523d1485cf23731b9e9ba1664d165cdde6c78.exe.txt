push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
mov
sub
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
lret
dec
jle
fldl
pusha
mov
push
popf
das
and
jl
push
xchg
dec
jae
mov
push
stc
and
jb
mov
test
pop
aas
xor
xor
jo
int3
fldt
lds
iret
stc
aad
adc
jmp
push
call
cwtl
dec
test
imul
outsb
push
inc
pop
push
out
ret
loope
xchg
out
loop
jo
out
in
fnstsw
mov
pop
push
aaa
aam
sbb
adc
fcomps
addr16
es
outsb
and
stos
lea
mov
adc
sub
pop
push
cld
push
test
dec
ret
dec
cmpsl
das
inc
jle
nop
inc
std
loop
retw
loopne
xchg
and
scas
pop
sbb
lcall
mov
lea
xchg
fistpl
lods
fwait
lcall
dec
sub
call
scas
dec
das
scas
xchg
xchg
push
pushf
mov
push
ret
pop
iret
xchg
jge
lahf
dec
jle
js
xchg
loope
psrld
dec
cmc
stos
sbb
adc
inc
loop
lcall
lods
mov
jns
dec
mov
jg
jl
mov
fistl
rolb
jl
popf
test
out
push
adc
fbld
add
out
sub
cmp
into
imul
test
insl
xor
jg
icebp
ss
cs
mov
inc
aam
add
pop
pop
je
inc
jp
add
shrl
push
inc
jl
sarb
scas
inc
cmp
push
push
mov
cmp
push
mov
in
insl
fwait
mov
addb
daa
or
cmp
jb
xor
pop
push
shr
sbb
mov
xor
fmul
pushf
push
rcrb
jl
xchg
xor
mov
loopne
sub
in
fs
fsin
pushf
jmp
jp
cmp
lock
xchg
outsb
pop
mov
fcmovne
jne
fisubs
ret
fld
rclb
xchg
jo
sbb
and
loopne
jle
int3
xor
mov
imul
inc
cltd
mov
dec
xchg
repnz
sbb
mov
add
mov
mov
push
popa
clc
cmpb
pop
stc
addr16
fistpll
mov
scas
jle
push
dec
in
pop
adc
in
out
sbb
fiadds
inc
mov
mov
aaa
shlb
pop
jbe
xchg
frstor
aad
xor
add
jo
lods
das
test
push
mov
xchg
sub
imul
js
dec
push
es
loop
adc
inc
and
dec
xor
xchg
dec
add
scas
inc
inc
in
inc
in
mov
push
dec
or
into
jge
mov
daa
push
push
subb
int
dec
dec
xor
les
jb
jp
pushf
adc
je
push
pop
inc
jns
inc
data16
sbb
leave
dec
mov
adc
dec
mov
rolb
and
movsl
pop
mov
ficompl
filds
add
loope
lods
bound
nop
jecxz
fildll
fs
test
sub
test
sub
sub
loop
xchg
adc
ret
jge
rcll
mov
push
inc
mov
xlat
jmp
xchg
and
adc
pop
test
leave
div
push
stc
iret
jb
repz
push
push
lret
jl
push
test
rolb
xchg
enter
aam
or
adc
pop
test
mov
decl
xchg
xchg
jmp
jne
jg
jne
test
pop
xchg
and
xchg
or
stos
xchg
cmp
cld
test
hlt
leave
inc
fs
sbb
addr16
jecxz
js
xchg
cmp
stos
cli
fiaddl
jno
jle
stc
cmp
or
and
inc
sahf
imul
lahf
scas
orb
loop
sbb
es
sub
jg
push
xor
mov
and
ds
push
in
lea
pop
aaa
mov
jo
lahf
inc
dec
add
cmpsb
lret
add
aaa
jg
inc
xor
stos
push
add
lcall
dec
sub
popf
ss
cmpsb
push
add
cli
cmp
rcrb
inc
dec
xchg
bound
out
and
sbb
roll
inc
pop
int3
jl
pushf
pop
pop
cmp
dec
nop
hlt
lahf
xor
leave
addl
add
in
outsb
add
insl
adc
icebp
cmp
lret
loopne
xor
or
idiv
pop
push
repz
inc
je
xchg
hlt
mov
dec
pop
cli
mov
push
lds
push
fwait
icebp
fdivr
and
push
and
iret
ljmp
dec
mov
xor
inc
outsb
cs
js
mov
addb
inc
dec
mov
sub
pushl
mov
in
negb
ret
mov
out
sti
xor
push
and
scas
add
sbb
outsb
pop
in
xor
lds
push
stos
in
cmp
int3
aas
cmp
sahf
call
xor
lcall
push
loop
or
jle
aam
push
push
lcall
fdivs
adc
data16
loop
mov
orb
cld
and
insl
rorl
cmp
mov
pop
gs
scas
sub
xor
mov
push
fcomps
push
jne
test
jmp
imul
mov
and
in
clc
je
lods
imul
mov
mov
fsubrl
std
fdivr
movsl
cs
loope
int
in
jbe
cmp
jge
dec
mov
xor
sahf
push
dec
jbe
ret
adc
lea
in
repz
fbstp
jne
cmc
xchg
fcmovnbe
sub
inc
andb
pop
dec
ja
inc
sub
dec
je
imul
test
test
lods
je
in
pop
pop
lret
and
adc
and
fxch
loop
push
push
cmp
call
sbb
jno
sti
xlat
push
sahf
mov
push
mov
sti
pop
jnp
mov
stos
and
mulb
dec
or
clc
xchg
ficoms
shlb
daa
movsb
mov
ja
xor
out
dec
jge
push
xor
cs
icebp
and
jl
add
imul
std
lea
rcrl
pop
out
std
xchg
sti
ret
inc
push
cmp
lahf
add
nop
mov
mov
inc
pop
mov
cmpsl
shrl
lods
cld
mov
roll
push
or
int3
sti
dec
dec
arpl
fbld
cwtl
stos
fcom
adc
cs
icebp
and
ret
les
xlat
arpl
jmp
push
dec
movsl
mov
push
or
cmp
inc
shrb
mov
in
adc
xor
rcll
test
ljmp
xchg
negl
mov
imulb
jge
daa
xlat
rcrl
insb
sti
jg
je
fnsave
sbb
in
pop
xchg
rolb
cs
mov
out
daa
inc
dec
adc
rcr
pop
push
add
arpl
cmp
mov
jle
cmpb
mov
shlb
mov
pop
cmc
pop
sarb
mov
insb
lods
sbb
push
out
in
sbb
daa
xor
jecxz
lds
inc
gs
mov
mov
xchg
aad
fistl
xor
scas
fistps
je
lcall
or
mov
inc
cmp
cli
fidivrs
in
sar
nop
ja
push
leave
mov
call
pushf
push
mov
sub
or
jae
add
sahf
out
inc
loope
sbb
jecxz
cltd
ret
mov
loopne
adc
out
movsb
lods
shll
aad
cmp
std
mov
jns
enter
xchg
mov
jo,pn
mov
push
mov
jle
xchg
fs
and
nop
pushl
std
inc
add
sbb
dec
out
mov
fcoms
xor
mov
out
mov
mov
mov
in
mov
stc
loopne
or
sti
lcall
pop
icebp
decl
mov
adc
dec
mov
aas
inc
pop
mov
mov
lds
xor
or
jp
lea
shl
mov
push
aam
loop
mov
stos
mov
in
arpl
inc
mov
inc
sbb
pusha
add
mov
cmp
push
mov
jno
ror
dec
dec
dec
fsubrl
xor
pop
out
cmp
lods
xor
mov
add
jo
aaa
mov
jbe
popf
mov
fcmovnb
aad
xchg
sbb
push
xchg
lahf
jl
and
fildl
aam
lcall
fs
mov
and
popf
shlb
and
jge
sub
jp
enter
add
cli
jge
popf
mov
xchg
push
push
bswap
dec
jae
cltd
orl
mov
add
xchg
push
jnp
push
add
int
out
or
push
xchg
add
inc
sbb
push
xlat
cmp
bound
rol
scas
mov
inc
lahf
cmp
leave
lea
int3
call
jecxz
scas
out
push
rclb
xor
and
push
loopne
gs
jl
or
inc
insl
fdivrl
add
cmp
push
mov
lods
adc
bound
fstps
lods
sub
clc
rcr
sbbl
xlat
into
lods
mov
ret
add
je
xor
loope
aam
xor
sub
out
push
pop
push
xor
js
mov
daa
jb
inc
adc
aaa
andb
pop
ret
inc
inc
or
mov
icebp
add
fs
inc
imul
pop
jge
xor
pushf
push
cltd
cmc
cmp
bound
xchg
jle
outsb
test
sub
and
lods
jo
lret
shrl
pop
sbb
jno
cmp
xor
cmp
bound
add
cmp
stc
xor
push
es
pop
je
fdiv
inc
jae
jnp
repz
aas
push
and
mov
imulb
dec
insl
into
mov
mov
or
mov
daa
jle
data16
mov
ror
test
mov
xchg
rcl
ds
dec
lock
jae
stc
lcall
jmp
std
ljmp
sbb
dec
pop
loope
push
sar
imul
std
jp
lods
push
lods
push
xor
pop
push
sbb
dec
or
xchg
add
enter
dec
add
mov
jns
dec
fisubl
ret
iret
jo
jno
sbb
jle
dec
ds
jne
sub
jp
dec
and
xchg
push
sti
stos
dec
lea
je
xchg
push
fsubs
nop
add
jb
scas
mov
dec
cmp
nop
movsl
cmc
jo
jle
xchg
mov
mov
sbb
in
lret
sub
call
add
gs
add
adc
sbb
cmp
sub
mov
out
jmp
inc
insl
pop
lods
sbb
rcrl
jecxz
jo
cmp
cltd
cmp
imul
shll
mov
sar
sbb
popa
push
ds
add
lcall
sbb
mov
std
pop
adc
push
mov
cmp
adc
das
jne
packssdw
cmc
out
aad
stos
jg
and
lock
and
fs
inc
xor
cli
call
ret
mov
or
pop
and
sarb
sub
jb
mov
leave
sub
sarl
jne
dec
inc
rclb
lods
cmpsl
add
xchg
inc
pop
pusha
insl
inc
adc
das
fcmovnu
or
xchg
push
jmp
pop
ss
push
adc
push
add
loopne
push
xchg
jmp
mov
fiaddl
lahf
dec
movsb
je
mov
or
subl
imul
test
dec
mov
into
faddl
aas
xor
cmc
pushf
inc
int
dec
cmpsb
mov
jnp
stos
mov
outsl
mov
or
sbb
clc
sub
test
sub
xor
fcoms
outsb
add
xor
lods
adc
or
mov
jp
mov
pop
popl
cmp
test
cmp
shlb
xor
jle
in
cwtl
push
test
adc
mov
mov
cs
push
out
das
stc
mov
jp
imul
sbb
stos
repz
sahf
pop
mov
adc
pop
icebp
out
stos
sub
loop
push
mov
inc
popa
sub
inc
loope
lret
mov
inc
push
lods
xor
mov
ljmp
mov
cmp
adc
test
xor
ss
inc
hlt
cmpsl
loopne
jmp
push
mov
sbb
imul
add
nop
mov
stos
sbb
or
jae
push
lods
add
bound
dec
ret
sarl
shrb
sbb
jl
dec
inc
adcb
or
jnp
mov
jne
mov
pop
jecxz
mov
cmp
jb
push
push
push
cmp
inc
inc
pop
sbb
xchg
cwtl
mov
stos
aam
fildl
mov
push
out
gs
loope
sub
arpl
jg
enter
repz
addl
divb
out
mov
sbb
das
mov
xor
fldt
pusha
outsb
gs
add
cmp
pop
cld
jmp
xor
adc
pop
lock
dec
in
cmp
insb
pop
xor
sbb
inc
das
nop
gs
xchg
int
cltd
jmp
dec
inc
adc
lcall
repnz
mov
rol
das
cmovo
inc
outsb
push
push
mov
mov
sbb
xchg
rcll
mov
or
dec
jno
vpshldq
mov
test
rorb
popf
addr16
push
mov
into
lock
jno
je
out
mov
add
rcrb
cmp
inc
outsb
lahf
mov
ret
sbb
push
dec
xchg
push
fs
orb
xor
ljmp
xchg
jo
mov
ds
mov
inc
mov
sbb
inc
mov
inc
pop
adc
and
adc
or
add
inc
sahf
test
in
xchg
mov
push
adc
fwait
push
jg
xor
pushf
imul
fs
inc
aad
mov
or
push
es
lret
jns
rcr
add
sub
bound
sub
add
jmp
jp
adc
or
dec
imul
jno
ss
inc
lret
lcall
shr
adc
iret
popa
mov
aam
lahf
ret
popa
dec
mov
and
jno
mov
mov
pop
sub
repnz
sub
fisttpl
sbb
xchg
inc
sbb
stos
imul
enter
popa
mov
loopne
jno
xor
mov
movsl
gs
xchg
loop
test
inc
jns
dec
jne
mov
add
or
mov
out
pop
out
sub
data16
adc
loopne
or
leave
inc
xchg
sbbl
sub
dec
inc
push
pushf
test
addr16
mov
mov
test
cmpb
cs
pusha
jg
cli
negb
adc
repz
popa
fwait
in
lcall
out
xor
pop
arpl
fwait
sub
fs
mov
mov
cmp
out
int
push
jbe
insl
xchg
push
hlt
cmp
xchg
movsb
dec
scas
push
or
xlat
add
imul
cltd
bound
adcl
scas
mov
fistpll
jbe
es
cmp
mov
pusha
or
push
or
sub
mov
in
cs
mov
into
cmp
ja
and
push
aam
xchg
jae
push
push
stc
cmpsl
movsb
sub
fldl2t
and
mov
pop
sahf
filds
cmc
jo,pt
rcll
add
sub
les
xor
xor
out
mov
out
jne
push
test
lahf
rorb
push
repz
mov
jns
mov
imul
inc
mov
inc
inc
leave
pop
fcmovnu
add
js
push
cmp
rorb
sti
repnz
push
test
dec
xchg
sub
mov
dec
and
cld
ds
adc
mov
mov
int
lahf
lock
scas
leave
jmp
fdivl
xor
ja
cmpsb
pop
iret
int
jp
sub
xchg
xchg
adc
pop
xchg
sbb
aad
shll
lcall
cld
mov
hlt
jg
jno
pop
push
jp
adc
mov
pop
cwtl
cmp
xor
mov
mov
or
lock
add
xchg
cmp
inc
cmpsl
xchg
test
dec
lret
out
dec
add
mov
push
adc
xchg
xchg
push
in
and
xor
sub
xlat
decb
cmp
mov
ret
mov
cmpsb
enter
xor
loop
and
push
cmp
dec
and
pop
clc
xchg
jge
add
xchg
cmpsl
inc
jp
addr16
jbe
rcrl
dec
jmp
pushf
cmc
push
ds
ljmp
cmp
lock
xchg
mov
jbe
mov
ret
cmp
inc
sub
add
outsl
in
lock
mov
pushl
sub
sub
test
or
out
sarb
pop
in
cmp
mov
lret
and
mov
mov
adc
dec
mov
fnstenv
iret
test
inc
jb
mov
ficomps
jp
test
es
adc
test
popa
lret
jne
sahf
ret
jo
jle
fsubrp
std
lock
xlat
aaa
mov
push
mov
jp
test
jp
cmp
iret
repz
push
in
cmp
xchg
push
js
and
push
add
test
fwait
xor
adc
or
jmp
push
mov
jne
dec
fmul
push
jo
scas
das
lahf
inc
out
push
sbbb
int3
mov
mov
rolb
cmpsb
outsb
mov
inc
out
push
add
xor
lahf
das
out
cwtl
sbb
addr16
das
cmpsl
mov
pop
jmp
int3
insl
or
xchg
pop
xrelease
xchg
xor
or
fistps
cmpsl
je
out
sub
fsubrs
mov
les
xchg
cmp
movsb
lahf
nop
cmc
pcmpgtb
jno
jne
jmp
das
iret
nop
jl
packssdw
mov
ss
mov
xor
sub
faddl
push
pop
int
dec
cltd
sbb
out
cwtl
push
daa
and
xchg
adc
sub
jp
xchg
subl
xchg
dec
push
fwait
add
in
and
pop
cmp
into
push
cmp
push
xchg
sub
mov
inc
insl
and
push
dec
adc
or
es
test
mov
in
loop
pushf
lret
stos
push
subb
int3
mov
xchg
ds
mov
adc
hlt
ds
xchg
jae
int
mov
pop
pop
xor
xchg
popf
xchg
jge
mov
inc
xchg
dec
inc
xor
mov
jmp
cltd
adcb
subl
sarl
cli
cs
in
pop
add
mov
aam
cmc
xchg
jmp
mov
mov
jg
enter
outsb
dec
les
lods
push
cwtl
daa
sub
rcll
or
inc
into
inc
adc
les
hlt
sub
in
mov
add
mov
lahf
addb
sub
jb
or
std
mov
dec
adc
sub
int3
sbb
sbbb
enter
cs
out
mov
jl
daa
repnz
test
inc
les
and
mov
aas
cmpsl
xor
xor
fildll
xor
pusha
out
mov
sbb
lret
call
repnz
mov
push
add
fsubrl
cs
andb
push
int
jb
mov
gs
sub
movsl
cld
test
pop
mov
leave
sub
cmc
bound
sub
jb
push
or
daa
push
lods
add
adc
ja
and
cmp
xlat
pop
lods
fildll
mov
xchg
adc
aam
inc
decb
orl
sub
mov
js
nop
es
or
xorl
fidivrl
stos
addr16
nop
add
dec
fdivl
incl
roll
mov
ja
or
inc
xor
cmp
or
push
pop
add
loope
pop
ds
xor
jp
cs
nop
or
daa
xor
dec
out
sbb
ja
scas
test
add
arpl
cwtl
inc
roll
adc
inc
sbb
push
and
jo
arpl
rcr
jbe
pop
std
jno
jo
sub
sub
inc
loopne
js
pop
cli
push
leave
or
pushf
xor
xchg
ret
daa
loopne
andl
pushf
ljmp
mov
ss
push
xchg
addb
push
jno
shr
stos
loopne
add
inc
push
sub
loop
mov
test
imul
pop
jnp
les
xchg
push
loopne
call
enter
fldenv
daa
adc
or
inc
xchg
push
jo
or
pop
in
scas
pop
clc
mov
mov
jl
jo
push
in
or
loope
fdivl
mov
cmp
gs
mov
push
mov
bound
jns
mov
mov
xor
movb
cmp
shll
xor
pushf
xchg
push
aas
xor
stos
sahf
xchg
push
jmp
rorb
cmp
cltd
fmull
lahf
iret
adc
push
jbe
pop
popa
cli
dec
pop
and
test
out
fnstenv
cmpsl
mov
adc
xor
sub
fs
cmp
ret
ret
adc
sbb
mov
mov
scas
ljmp
mov
mov
adc
in
sbb
dec
ja
mov
pop
adc
xor
push
adc
xor
bound
and
sbb
fsub
shl
adc
inc
es
mov
jbe
cmc
xor
adc
aaa
out
pop
pop
xchg
mov
pushf
cmp
mov
sub
or
sahf
lods
lahf
les
arpl
add
pop
cs
loopne
jae
cli
hlt
sahf
enter
lods
inc
inc
lret
dec
xchg
mov
sub
jge,pt
mov
xchg
iret
ficoml
dec
outsl
nop
mov
ja
inc
xlat
jg
cld
addr16
stc
lds
fldl
adc
pop
test
leave
jge
pop
push
stos
test
push
add
dec
test
bound
jmp
fiadds
lea
or
stos
loopne
xchg
inc
icebp
arpl
pop
jmp
push
or
mov
rclb
jg
adc
dec
pop
mov
je
or
arpl
jae
mov
ss
std
movsb
aas
cmpb
dec
out
pushf
and
shlb
sbb
cmp
loopne
pop
xor
cmp
jne
mov
add
enter
into
pop
insl
cmp
repnz
cmpl
add
cld
adc
xor
aad
or
mov
cmp
neg
push
and
data16
pop
mov
dec
xchg
mov
or
popf
push
nop
jne
repnz
mov
add
adc
incb
mov
and
imul
sbb
neg
or
push
pop
das
mov
hlt
dec
push
sahf
insl
enter
push
xchg
cmp
rclb
std
aas
test
ss
sub
in
stc
bound
aas
cmp
xchg
and
or
mov
mov
push
inc
sbb
push
int3
or
sbb
mov
push
pop
cmp
xchg
mov
pop
xchg
movsl
lea
push
xor
call
fcomi
pop
imul
inc
mov
add
inc
lds
add
data16
rcll
test
popf
or
add
add
and
xchg
test
and
mov
jp
sbb
sahf
out
push
sub
pop
jmp
leave
mov
cwtl
dec
xlat
mov
outsb
js
cmpsb
fdivrp
xor
dec
xchg
xor
ja
pop
dec
push
pop
dec
push
mov
popf
stos
fistpll
dec
mov
call
sbb
mov
mov
dec
inc
addr16
push
fistpl
rcr
xchg
jecxz
inc
inc
gs
cmc
stos
ds
jge
jp
loopne
cmp
aad
cli
ss
in
dec
dec
xchg
imul
push
jno
popf
hlt
xor
movsl
mov
mov
adc
pop
mov
pop
stos
flds
dec
orl
inc
fwait
icebp
xor
icebp
clc
or
and
dec
push
mov
inc
imul
mov
mov
repnz
inc
jg
sub
pusha
jae
adc
and
add
inc
dec
popa
lods
testl
outsl
adc
push
ljmp
inc
xchg
out
inc
clc
arpl
mov
sbb
dec
mov
je
mov
push
sub
jb
or
mov
bound
push
mov
call
push
mov
sti
dec
cmp
dec
or
mov
inc
enter
std
xchg
mov
jbe
mov
or
in
mov
or
aas
lcall
push
mov
leave
sti
mov
or
jo
mov
jne
inc
stc
lea
test
push
push
dec
inc
test
jo
cmpsl
xor
jno
cmp
cltd
adc
or
xor
mov
mov
repnz
fistpll
add
data16
fs
and
lea
inc
cmp
jnp
pop
lcall
inc
loopne
iret
repnz
jbe
sub
pusha
cld
in
pop
push
lret
sub
dec
and
push
cltd
pop
pop
call
iret
mov
gs
scas
mov
sbb
je,pt
cmpb
shr
adc
pop
mov
hlt
jg
es
sub
shrl
lcall
pop
add
xchg
clc
sbb
repz
push
fs
pop
pusha
mov
decb
sbb
mov
je
out
cld
push
ret
sub
mov
mov
sub
inc
xor
out
sbb
push
neg
inc
add
test
cli
iret
adc
pop
xchg
fdiv
imul
dec
mov
movsl
cmpsb
or
xchg
shl
jae
pop
dec
fcomi
dec
js
xchg
daa
cmpsb
imul
cmp
sbb
or
push
out
ficomps
mov
ja
push
aaa
pop
out
loop
jae
xchg
ljmp
mov
in
jg
mov
xchg
enter
mov
movsb
sbb
jp,pn
insl
out
push
lea
inc
or
adc
dec
cmc
adcl
push
out
imul
ret
scas
aas
or
dec
dec
jg
xor
shrl
jo
fistl
xor
mov
and
pop
int3
mov
mov
cmp
inc
add
lcall
jbe
mov
cli
inc
lds
jp
dec
pop
jbe
push
pusha
push
jno
push
mov
adc
lret
cmc
fmuls
fistpl
sub
cmpsb
cmp
pop
push
pusha
jb
jno
or
shr
mov
arpl
call
sub
jmp
shlb
xchg
std
jo
mov
adc
cmc
jno
shlb
lret
mov
or
mov
dec
mov
idivb
inc
into
xchg
ss
int3
add
or
fstpt
dec
aad
pop
movsl
idiv
dec
out
sub
sbb
mov
and
repz
mov
inc
xor
data16
movsl
subl
out
aam
nop
mov
push
pop
or
xchg
mov
out
nop
cmpsb
gs
adc
add
push
adc
jnp
lahf
lahf
inc
add
rorl
xchg
shlb
aaa
xchg
rclb
mov
fldt
push
ds
jle
dec
pop
ljmp
sub
cmp
or
mov
test
out
xor
fcoml
shlb
int
mov
lods
test
mov
les
jg
sahf
jl
fidivl
inc
xchg
pop
repz
jns
out
fcoms
lea
loopne
es
pop
out
push
into
jl
push
cmp
sub
in
cmp
pop
adc
fnstsw
scas
sti
in
dec
pop
ret
in
cs
push
lds
push
int
movsb
mov
sub
lock
sub
cmpsb
add
xlat
cmp
out
and
pushf
jmp
outsl
or
movsl
mov
fs
imul
out
lret
push
ret
lret
cltd
cmp
jmp
cs
test
dec
stos
test
outsb
mov
adc
adc
jno
shrb
scas
pop
dec
int
hlt
push
cmc
std
loopne
dec
adc
fs
int
aam
cmp
dec
sub
lret
std
imul
lret
ret
ljmp
or
jo
push
sub
inc
and
and
popf
mov
xchg
jmp
sbb
pop
jo
pop
ljmp
test
iret
push
adc
cmc
insl
out
jmp
mov
std
or
ss
jo
mov
xchg
sub
push
cmc
sti
stc
movsl
jns
test
jbe
pop
or
or
xor
sub
cmp
cmpb
enter
jnp
imul
mov
add
mov
sti
sbb
push
inc
movsl
sub
xchg
repz
neg
cmp
push
and
pushf
add
jmp
loop
mov
ljmp
inc
pop
dec
xor
pop
ret
sahf
data16
dec
mov
mov
sbb
xor
xor
and
sub
mov
cld
xchg
ss
ljmp
mov
add
ljmp
repz
mov
repz
movsl
xor
jecxz
sub
sar
out
sub
mov
outsl
sti
xchg
jb
aad
pop
xchg
jno
sbbb
pop
rcrl
xchg
inc
xor
sub
mov
flds
xchg
xorl
mov
dec
mov
xor
cwtl
dec
cmp
push
inc
pushf
mov
and
mov
clc
sbb
cmp
mov
gs
stc
pop
mov
lret
mov
cmp
or
je
mov
cmp
sbb
inc
or
into
test
push
xchg
mov
jno
xor
cmpsb
push
jbe
shlb
rorl
push
add
add
add
imul
add
imul
add
movb
notl
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnsave
pop
addl
stc
addr16
cmp
and
imul
rclb
cs
push
sti
movsb
sub
sub
rcrb
js
mov
insl
pop
adc
movsb
jne
test
pop
sub
push
int3
xchg
pop
cmp
loop
ja
stos
fdivrs
xchg
outsb
out
std
pop
sub
jb
mov
sbb
mov
daa
leave
jge
xlat
lea
cmp
pop
ret
outsl
xchg
aaa
sbb
test
cmpsl
mov
aaa
shrb
inc
fwait
dec
into
mov
dec
mov
pusha
fs
jp
insb
or
mov
cmp
jmp
xchg
les
scas
cmp
pop
aaa
jbe
pop
mov
arpl
std
in
stos
ljmp
popa
xchg
test
fs
pushf
or
scas
push
aas
push
push
ret
mov
subl
call
idivb
js
in
xchg
cmpsl
jnp
fildl
shll
and
xor
fmul
cs
mov
int3
fldcw
dec
push
lahf
push
push
mov
shlb
jmp
dec
or
push
sbb
mov
sarl
dec
pop
mov
repz
int
jmp
dec
aas
xor
lret
cmpsl
sub
push
push
xlat
into
mov
mov
jno
jg
arpl
insb
inc
mov
mov
cmpsl
jnp
inc
or
movsb
xchg
cli
mov
jne
add
sbbl
insb
mov
jecxz
cmp
sbb
xchg
inc
test
lea
mov
dec
push
adc
fisubs
adc
inc
into
dec
rorb
jmp
enter
pop
in
scas
int3
or
lods
mov
push
pusha
sbb
out
sbb
loope
and
or
mov
insl
lods
mov
push
and
sub
mov
cmp
mov
or
insl
out
mov
xor
jp
sub
pop
mov
leave
clc
fcoms
iret
cmp
mov
push
out
cmpb
jo
jg
push
mov
sbb
mov
push
incl
jmp
arpl
pop
jmp
xchg
add
inc
int
mov
incl
icebp
cltd
enter
mull
lds
push
fst
stos
fnstsw
push
cwtl
fwait
int
pushl
ljmp
and
stc
and
ljmp
mov
mov
mov
mov
inc
in
push
mov
sbb
mov
push
mov
lcall
mov
cmp
in
pop
jnp
or
leave
repnz
rclb
inc
clc
pop
pop
sarb
xchg
push
mov
push
daa
in
adc
in
xchg
add
pop
fbstp
lret
lea
inc
pop
cmp
loope
leave
push
push
jmp
in
movsl
pop
mov
cmp
xor
adc
push
mov
scas
adc
lahf
les
imull
cmp
outsl
mov
es
je
ret
adc
adc
fiaddl
daa
lea
je
pop
push
sub
sbb
xor
xor
sub
mov
in
mov
cltd
bound
loope
xchg
ret
aaa
scas
xchg
mov
nop
cmpsl
jno
mov
ficoms
adc
sbb
mov
jae
cmp
dec
nop
mov
xchg
mov
loope
scas
mov
adc
or
clc
dec
test
aad
push
lcall
fisttps
int
xchg
dec
sbb
popa
adc
sahf
dec
movsl
clc
les
lock
movsl
fs
inc
mov
mov
mov
gs
sub
mov
or
xor
fsts
sbb
popa
pop
cmp
mov
iret
dec
jecxz
xlat
movsb
sub
les
jg
daa
mov
xchg
ss
jae
mov
pusha
fwait
insl
in
fs
jle
loope
ret
dec
xor
push
lret
in
ss
and
inc
adc
xor
cmpsb
xor
loopne
xor
adc
aad
xchg
sub
pop
pop
mov
xchg
mov
scas
dec
mov
and
in
es
enter
inc
cmpsl
int3
mov
jl
hlt
or
xlat
adc
fstps
fwait
pop
mov
xor
lret
cmp
fmuls
mov
add
aaa
or
lret
das
loop
fildll
jae
adc
rorl
rcr
xor
loope
sub
jnp
dec
imul
ret
enter
jmp
hlt
insb
sbb
jmp
nop
sbb
push
mov
sbb
pop
sbb
push
das
cltd
icebp
xchg
jg
pop
push
das
daa
loop
pop
fistpl
ja
arpl
mov
lods
inc
mov
dec
lahf
in
adcl
mov
out
fcomps
sbb
aad
in
mov
mov
jae
test
jge
mov
mov
sub
aaa
out
js
subb
cmp
xor
insl
in
mov
pop
and
sbb
mov
mov
and
daa
cmp
push
test
std
cltd
jne
mov
cmpsb
xor
std
inc
sub
out
imul
inc
push
adc
aas
or
rcrl
adc
or
loopne,pn
test
xor
ljmp
aam
push
adc
push
or
in
xor
inc
xchg
cmp
pushf
sub
inc
xchg
cwtl
add
xor
pop
mov
mov
xchg
lea
fistpl
push
shll
rcrl
jb
inc
jns
pushf
aaa
sbb
in
xchg
or
ds
pop
cmp
adc
xor
pushf
fistpl
xor
mov
mov
push
push
xor
pop
or
lods
jno
lret
adc
jge
push
nop
dec
or
int
mov
fists
dec
or
cmp
data16
and
dec
leave
xchg
out
inc
jo
dec
dec
xchg
mov
jle
cmp
shrl
inc
rcrl
mov
dec
adc
ret
cmp
dec
mov
pop
mov
nop
xor
cmpb
and
mov
dec
xchg
fdivr
jmp
das
repnz
pop
xchg
daa
fnstsw
ljmp
pop
mov
rolb
fistpll
pop
imul
inc
adcb
incb
xchg
ret
jmp
test
divl
mov
adc
mov
lock
sahf
xchg
mov
and
xchg
pop
mov
mov
pop
lret
add
dec
xchg
addr16
push
inc
adc
sub
push
mov
mov
mov
pop
loope
jne
lods
movsl
sub
mov
aad
push
mov
mov
sub
adcl
cmpsb
cld
and
adc
icebp
hlt
call
jnp
std
into
je
push
fmuls
xor
sub
pushf
mov
sbbl
sbb
sub
jl
mov
jno
push
lock
das
outsb
sti
cmc
int3
insl
jno
xchg
adc
fdivl
stc
test
xor
clc
lcall
out
push
jg
inc
mov
ds
std
adc
cld
movb
lea
cli
and
cmc
mov
hlt
mov
ljmp
enter
test
in
sub
inc
inc
aam
jle
jb
dec
out
mov
cmp
adc
pop
mov
nop
arpl
jbe
mov
xchg
mov
push
and
lock
in
mov
ret
jns
fisttps
movsb
sbb
add
jl
mov
jo
mov
js
scas
shll
movsbl
fistpl
lret
mov
in
push
xor
test
dec
aas
stc
sti
cmpsl
add
sahf
popf
inc
sub
lahf
cwtl
mov
mov
loop
incb
push
dec
outsb
cmpl
push
lcall
push
push
push
shlb
and
xor
dec
ljmp
fadd
adc
cltd
mov
dec
in
jecxz
jecxz
addr16
and
jg,pt
adc
mov
xchg
and
outsb
imul
push
add
push
mov
lock
in
loop
stos
sub
push
arpl
test
push
push
mov
sub
pusha
hlt
sbbb
imul
jnp
xor
imul
fstpl
fnstenv
add
mov
fmulp
xor
mov
outsb
scas
inc
xchg
jb
sub
in
or
test
pop
mov
dec
lcall
mov
ljmp
cli
js
cmp
cmp
lret
in
mov
or
pop
xchg
pop
insb
dec
addr16
mov
jbe
sub
xor
jns
pop
sbb
loop
push
cld
test
in
sti
fisttps
scas
hlt
sub
out
and
mul
sbbb
push
lret
inc
je
mov
inc
fs
mov
or
jne
inc
xchg
dec
stc
or
outsb
jae
pop
enter
arpl
jns
pop
ret
lods
movsb
cmp
fdivrl
fnstsw
pop
sbb
sub
sub
fcomp
dec
jb
mov
nop
cltd
xchg
and
loopne
testl
pusha
cmpsb
roll
mov
sub
adc
outsl
test
push
addr16
and
push
and
add
subl
push
int
adc
xchg
or
shlb
cmpl
int
cmp
loope
dec
loope
push
mov
xchg
jge
out
sbb
add
push
jno
testl
jmp
cmp
xor
jb
loopne
loope
sub
push
pushf
jne
stc
dec
call
inc
mov
lret
lcall
cmp
test
hlt
mov
jmp
pop
xor
rolb
inc
mov
mov
pop
out
aad
cld
mov
sbb
dec
fbstp
xor
push
test
add
cmp
lds
push
ss
sbb
int3
dec
dec
inc
mov
mov
mov
pop
cmp
push
adc
clc
xchg
hlt
jp
pop
push
and
stc
mov
mov
cli
adc
or
out
jne
jle
idiv
int3
jle
fidivrl
loope
dec
lahf
mull
dec
cmp
and
shlb
and
xchg
sub
dec
pop
enter
aad
dec
cmp
xor
pushf
fnstcw
sbb
xchg
adc
mov
outsb
sbb
repz
push
hlt
xchg
sahf
in
cmp
push
mov
pop
std
out
out
into
push
xor
dec
je
addl
sahf
xchg
out
mov
xor
inc
lock
pop
pop
sahf
pushf
jo
or
out
in
push
cwtl
mov
fimull
xchg
or
jl
add
mov
shr
mov
shrl
icebp
push
fdivrs
nop
xchg
cmp
mov
push
ds
cs
and
cmp
mov
ret
and
test
popf
shr
inc
cmp
jae
rcrl
jbe
pop
jo
shr
pop
mov
mov
push
cmc
cltd
jo
add
dec
ss
das
inc
inc
push
cs
shl
mov
push
xchg
fsubp
push
jge
adc
push
icebp
xchg
adc
repnz
cld
push
ret
mov
lret
sub
sub
inc
shll
jno
shl
mov
cmpsb
xchg
add
fstps
cmp
mov
mov
push
data16
push
fnstenv
cli
sbb
jns
jg
push
sti
jecxz
sbb
xchg
push
jae
test
dec
rep
jb
aaa
jns
pop
jl
lods
nop
pop
mov
xor
xor
rcrl
call
orl
insb
mov
and
pop
imul
test
out
mov
hlt
fadds
mov
adc
mov
jmp
cmp
pop
sub
push
or
popf
lods
lret
inc
hlt
dec
test
mov
fistps
cmp
dec
xor
mov
xchg
in
ror
cmc
cmp
sub
jp
fsubrp
iret
mov
aam
mov
ds
push
pop
popa
xchg
scas
loope
mov
out
or
mov
movsb
std
adc
inc
push
mov
sahf
sahf
pop
das
jmp
or
mov
or
std
pop
arpl
mov
addb
out
test
cwtl
inc
mov
mov
push
mov
lret
cs
cmp
inc
sub
int3
ja
sbb
repz
push
xchg
push
inc
outsl
mov
mov
jnp
cmp
mov
in
lds
mov
pop
mov
fiaddl
icebp
in
xor
leave
stc
sbb
xor
sbb
or
mov
mov
insb
js
mov
pusha
sti
or
inc
mov
add
call
jne
dec
rcrl
lods
mov
ds
xor
adc
xor
push
xor
jns
jne
mov
rcl
and
in
add
jo
mov
jnp
lods
aam
or
mov
jbe
add
push
and
mov
iret
adc
inc
roll
into
roll
sbb
les
leave
lret
or
sahf
mov
loop
pushf
inc
incb
lcall
ds
sub
clc
in
stc
aas
push
mov
fimull
xchg
cmpl
lahf
into
outsb
aas
mov
pop
lods
mov
jge
ja
dec
xchg
imul
dec
ds
push
in
rcrl
dec
dec
das
jmp
adc
cmp
sub
popf
sub
call
scas
sub
xor
std
pop
mov
fs
clc
and
push
adc
bound
es
or
pushf
cld
out
push
push
inc
mov
mov
jns
ret
je
divb
inc
push
and
data16
push
inc
cs
fistps
xchg
mov
repz
sub
jp
hlt
inc
enter
cs
sbb
cs
lcall
push
xchg
cli
es
cmpsl
add
imul
ja
movsl
movsl
mov
and
inc
jo
rclb
cmc
xchg
add
in
jp
pop
sub
ds
outsl
mov
icebp
into
sbb
pop
imul
jne
xlat
daa
iret
movsl
cld
push
outsb
cltd
xchg
jns
mov
mov
js
cmpsb
test
adcb
aad
cs
stos
jns
mov
stos
xor
jl
add
jns
xor
sti
int3
jge
cld
vmptrst
cli
xor
int3
mov
movsl
jg
fwait
aam
fstpl
icebp
mov
lea
enter
cmp
bnd
aas
and
adc
cmpsl
xchg
or
js
jno
sub
add
mov
lea
jmp
or
push
xchg
insb
jmp
mov
rorb
inc
or
mov
ss
jb
dec
cmpsl
popf
in
mov
sahf
xchg
mov
inc
mov
scas
and
push
push
adc
or
dec
inc
jecxz
scas
mov
aam
mov
mov
fldl
gs
dec
mov
xchg
jp
xlat
push
fwait
add
mov
je
cmp
ljmp
cmp
and
pop
aad
imul
nop
cmp
cmp
cli
xchg
lahf
rorb
jle
jg
mov
mov
and
lcall
pop
push
fwait
rolb
pop
push
xlat
add
wbinvd
fsubs
mov
scas
xchg
xlat
or
repnz
push
mov
scas
fcomi
inc
inc
jecxz
mov
and
test
gs
push
into
clc
out
adc
insb
adc
add
into
cmpsb
aaa
test
cmpsb
out
dec
cltd
bound
xchg
mov
movsl
ds
iret
sbb
out
pusha
fwait
lcall
aas
mov
xor
xchg
cwtl
in
dec
fnstenv
jmp
shrb
sahf
or
lds
xor
ss
nop
cld
mull
inc
mov
popa
xor
fiaddl
fstpt
stc
and
test
pop
sub
mov
movlps
jp
push
fs
orb
call
inc
push
mov
lahf
sbb
out
mov
pop
mov
insl
or
mov
and
or
test
sbb
push
dec
push
jecxz
xor
scas
call
sarb
call
mov
sbb
out
loopne
mov
mov
aaa
xchg
jo
mov
ja
pop
jl
rclb
enter
fwait
xchg
lcall
mov
jns
lock
subb
out
jge
mov
xorb
xor
adc
sub
jmp
fmuls
lods
xor
add
mov
outsb
pop
jbe
into
xor
sarb
call
rol
lock
dec
out
and
fdivr
dec
sbb
xchg
out
dec
mov
xchg
pop
adc
mov
adc
imul
cmovb
inc
cld
movsl
sahf
js
inc
les
rolb
aam
jge
mov
dec
shr
mov
sbb
jl
jp
cmpsl
xor
xchg
lea
mov
fsub
xor
xchg
pop
leave
jns
testb
daa
add
rclb
inc
and
je
ljmp
mov
aam
sbb
cmc
cwtl
inc
xchg
enter
inc
fs
loope
arpl
adc
add
mov
clc
inc
sbb
xchg
cmpsb
sub
and
dec
cwtl
enter
xchg
stos
and
mov
jno
movsb
pop
jnp
push
xor
aaa
mulb
pop
out
pop
aad
push
xor
das
fnsave
enter
jo
je
jnp
add
cmp
ret
lock
stos
outsl
dec
into
out
push
mov
pop
ljmp
push
cltd
clc
add
clc
mov
push
push
fbld
fcomip
or
ja
ret
cmp
clc
dec
mov
sub
shrl
cmp
jns
push
test
cmp
sbb
test
fimuls
aas
mov
push
sahf
cmp
lret
enter
cwtl
bound
loopne
ja
and
mov
dec
mov
jbe
lods
enter
aam
push
sub
mov
pusha
icebp
outsl
vandnpd
push
inc
or
inc
cs
or
jg
cmp
movsl
dec
push
fdivl
nop
in
sbb
jbe
arpl
loop
gs
subb
dec
test
loopne
dec
xchg
jns
jno
ffree
sahf
leave
daa
push
dec
jbe
or
adc
movsl
push
pop
popa
xor
stos
mov
pop
jb
sti
scas
sub
mov
inc
and
repz
cld
inc
push
les
pop
pop
mov
test
ret
cmp
push
add
negl
and
out
adc
enter
jl
dec
das
out
rolb
jne
sbb
fldl
pop
aas
adc
pop
mov
pop
mov
imull
add
pop
adc
paddsw
test
loop
pop
cmp
and
jbe
inc
inc
sbb
dec
addr16
pop
fcoms
jg
jle
fcoml
cmp
add
lods
mov
fisttpl
jns
sub
arpl
sarb
addr16
jno
daa
jo
fdivs
or
cmp
negb
test
daa
bound
sbb
dec
mov
mov
jg
xchg
jge
push
shrb
xchg
fldenv
mov
xchg
rorl
sub
xor
cmc
cmpsb
loope
loop
pushf
inc
dec
jo
add
adc
jne
insl
mov
jno
push
leave
fdivl
mov
fwait
or
mov
test
cltd
mov
out
push
cltd
sub
mov
nop
jno
mov
lcall
pop
lcall
or
cmp
push
daa
fucomi
push
mov
adc
jecxz
sahf
sbb
xlat
sbb
aaa
mov
add
sbb
mov
inc
mov
hlt
jae
ret
jmp
lock
add
sub
clc
aaa
adcl
adc
jns
fsubl
fwait
add
ljmp
mov
dec
repz
fwait
mov
mov
adc
pop
or
and
cmp
xor
pop
adc
lret
call
in
adc
or
pop
inc
aad
scas
dec
xchg
jno
mov
pop
mov
test
repnz
push
adc
test
xchg
push
xchg
jge
bound
orl
cltd
push
repnz
cld
mov
pop
mov
repz
xchg
xor
add
jns
icebp
dec
pop
shr
or
dec
pminub
and
pop
icebp
daa
inc
loop
shl
js
mov
xchg
mov
cmp
add
rcrl
xor
popa
fs
adc
data16
mov
push
outsl
aaa
imul
orl
pop
cmpsb
aam
or
paddb
repz
dec
mov
popa
test
mov
push
and
lods
adc
mov
mov
out
pusha
pop
adc
mov
cmpsl
sbb
hlt
sbb
lea
xlat
or
pop
push
cmp
out
test
sbbl
ds
insb
mov
movsb
into
je
add
repz
mov
mov
dec
ss
popf
mov
rorl
loopne
cld
sub
in
fwait
sub
pop
outsl
lea
mov
dec
data16
or
test
xchg
mov
pusha
jno
inc
pushf
xchg
je
popa
icebp
test
pop
and
inc
inc
cmp
sti
popf
cltd
mov
mov
ds
stc
es
dec
flds
adc
mov
enter
ljmp
imul
mov
stos
xchg
popf
jae
push
dec
xchg
mov
cwtl
cmp
and
jno
je
xchg
jg
push
in
inc
loop
cmpb
mov
outsb
lret
mov
stos
mov
or
lret
test
out
lret
inc
dec
and
pop
pop
clc
popf
mov
repnz
push
sub
test
mov
push
out
push
inc
jg
xchg
pop
dec
js
cld
in
sub
test
ret
les
and
out
leave
add
rorl
addb
cmp
xchg
jmp
dec
mov
sub
xorb
jg
insb
pop
enter
cmpsb
xlat
ljmp
repz
lcall
inc
cld
in
fsubrs
and
popf
sti
aas
xlat
jl
and
notl
mov
xchg
add
jecxz
outsl
ljmp
mov
add
mov
cmp
and
in
push
cmp
int
dec
push
iret
cli
sbb
test
cmpsl
lahf
lret
and
jno
das
sahf
xchg
mov
xchg
push
imul
mov
mov
dec
sti
mov
loopne
cmp
jnp
push
sub
icebp
and
call
stos
push
out
std
sahf
mov
and
sub
imul
out
ljmp
sbb
xor
pop
sbb
xchg
and
inc
lods
adc
adc
cmc
jecxz
jne
push
mov
sahf
fistpll
or
lock
insb
arpl
cmp
incl
fcomip
int
jmp
xchg
jp
xor
or
cs
ss
mov
xor
divl
fs
int3
jge
or
push
dec
mov
or
sub
adc
outsb
jg
divl
movaps
nop
movsl
out
mov
xor
mov
popf
scas
xlat
inc
sub
and
dec
and
enter
sub
cmp
mov
subb
fdecstp
jp
fldl
lret
enter
dec
xlat
bound
dec
push
add
les
cmc
addr16
mov
add
dec
xor
inc
test
cltd
lcall
pop
shrl
sbb
dec
and
and
mov
int
pop
pusha
cmp
fisttps
jae
adc
fwait
leave
js
rclb
lret
push
and
pop
push
mov
or
add
test
mov
fbstp
fcmovne
mov
ret
ja
xor
leave
lock
imul
sub
and
gs
inc
adc
test
sub
mov
mov
std
fsub
sub
andl
mov
jnp
sub
out
es
std
lcall
iret
in
sahf
lret
ljmp
movsb
inc
and
repz
mov
or
lea
push
fisubs
loope
lahf
jl
pop
loop
out
call
mov
fwait
add
cmp
into
inc
sarb
fwait
outsl
mov
xchg
mov
rorl
roll
je
dec
add
mov
jp
and
inc
bound
dec
sbb
push
fists
sub
mov
xchg
add
out
mov
cmp
cmc
cmp
cmp
stos
mov
shl
sbb
in
sbb
mov
enter
mov
pop
fdivrl
xchg
out
pop
push
or
adcl
sbb
cs
xchg
cmp
mov
lods
aad
cld
sti
repnz
jecxz
xchg
push
adc
lret
sahf
mov
xchg
pushf
cmp
fwait
cmpsb
call
lock
pop
or
dec
mov
jmp
dec
mov
xchg
xor
xor
rcll
mov
dec
jl
dec
sbb
in
and
mov
adc
sahf
cmp
push
dec
and
sub
ficompl
push
repz
das
sahf
and
fiaddl
mov
xchg
jae
stos
or
cli
ljmp
imull
lret
add
cmp
mov
repz
andb
sub
push
mov
and
adc
add
mov
sub
push
sub
mov
push
xchg
ret
inc
xor
mov
int3
loop
in
inc
dec
jb
xchg
mov
push
xchg
pandn
loop
sbb
pop
repz
leave
sahf
out
clc
or
dec
push
pusha
insb
push
xchg
add
test
sub
das
fsts
ds
lods
cmc
cmp
inc
dec
pop
add
jnp
scas
insl
push
lcall
repnz
loop
lahf
add
mov
ja
imul
lret
sub
jmp
mov
int
jae
ret
pop
testl
negb
in
mov
lret
and
cmpsl
imul
cmp
pop
aad
dec
mov
subb
call
mov
dec
stos
shlb
and
fdivp
mov
enter
rcl
pushf
cmp
sbb
lock
adc
in
fdivrl
nop
mov
iret
stos
out
xchg
les
pop
sub
or
cwtl
inc
mov
sub
mov
mov
gs
mov
sub
jb
or
mov
adc
pop
je
xor
pop
mov
fcomps
aam
dec
mov
and
fcmovne
or
add
fstpt
mov
add
jge
push
gs
xor
scas
notb
mov
mov
xchg
fwait
pcmpgtd
test
dec
pop
sbb
lret
ret
pop
enter
cmp
in
mov
xor
mov
inc
xchg
movsb
fistpll
cmp
out
int
xor
xor
mov
addr16
cs
dec
or
inc
in
flds
add
jne
and
nop
test
inc
mov
cltd
jbe
lock
fistpl
enter
sahf
jmp
or
jle
in
es
loop
xorb
lret
push
movsl
sti
cmpsb
repz
jp
inc
imul
outsl
fisubs
pop
ljmp
inc
sub
int
jp
hlt
dec
sbb
loop
aas
mov
pop
push
xor
xlat
mov
fs
cwtl
mov
and
aam
cwtl
mov
xor
mov
jp
cli
outsl
push
cld
nop
pop
push
push
leave
and
inc
mov
shll
pop
je
pop
mov
and
lret
adcl
pop
test
xlat
in
sbb
sti
test
push
push
or
adc
not
lock
ret
cli
push
rcrb
jle
test
hlt
adc
mov
repnz
stos
sbb
push
xchg
sbb
lcall
xlat
repz
gs
push
mov
adc
scas
fiadds
mov
push
ret
sbb
push
cwtl
jmp
mov
fistpll
or
inc
out
scas
fld
aas
test
ss
mov
xor
xor
adc
adc
sbb
or
mulb
and
test
pop
fistpl
sarl
or
repnz
add
push
dec
mov
movsl
or
std
test
push
dec
cmp
cmp
aaa
cmp
push
movsl
je
lds
fwait
aam
cwtl
jns
stc
sti
mov
sbb
adc
int3
scas
fldcw
fdivrs
pusha
pop
ja
sbb
in
int
test
shl
andl
xchg
inc
cld
mov
pop
or
mov
inc
dec
and
jbe
gs
les
jmp
sub
repz
cld
ret
jg
inc
cmp
mov
jo
rcr
cs
inc
cmc
mov
scas
jo
fildl
fs
cmpsl
push
cmp
and
sahf
and
lret
sbb
mov
adc
vrcpps
in
pop
imul
movsb
xchg
or
sarl
sti
mov
sbb
inc
call
or
sbb
xchg
sbb
cmovno
mov
pop
sti
stc
inc
enter
lods
push
les
push
sti
sbb
sub
call
lcall
add
loope
vpunpcklqdq
insl
jle
mov
dec
pop
js
xchg
or
add
xor
mov
mov
decb
pop
push
insb
int
sbb
fdivrs
adc
outsl
int3
addr16
jle
stc
push
jg
hlt
mov
call
sti
jb
jmp
xchg
bound
data16
xchg
inc
stos
outsb
pusha
sub
jb
pushf
mov
ja
pop
daa
mov
roll
rol
jno
mov
ret
ret
adc
pop
mov
inc
popf
mov
pushf
jecxz
icebp
lcall
dec
ja
xchg
in
xchg
data16
and
std
outsb
push
push
pop
xor
cld
popf
je
ja
bound
pop
and
add
lcall
movsl
cltd
in
int3
addr16
jae
loope
mov
adc
mov
rol
lods
or
xchg
into
mov
push
es
sbb
adc
pop
xor
scas
or
or
mov
bound
cld
lcall
xor
sbbl
popa
loop
lds
mov
call
fstpl
sub
sarl
ret
pop
addl
stos
mov
push
push
dec
mov
pop
loope
dec
add
js
leave
loope
test
movsb
data16
jae
sub
add
icebp
xor
pusha
add
mov
sbb
es
push
dec
hlt
xchg
int
shll
add
cmp
std
test
movb
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
lea
cmp
addl
popf
imul
testl
inc
rcr
adc
cmp
rolb
in
mov
adc
insl
aad
mov
mov
sub
pusha
shrl
mov
mov
mov
dec
inc
jae
sub
jbe
xchg
ljmp
test
nop
dec
je
xor
insb
adc
loopne
data16
inc
lret
mov
test
push
dec
push
mov
adc
dec
xor
aad
mov
mov
into
fs
out
adc
jge
sahf
jmp
clc
mov
inc
add
push
xchg
cmp
mov
adc
jge
cmp
jns
add
int3
xchg
rcr
xor
clc
or
jno
push
inc
inc
push
push
xchg
out
lock
xor
mov
loope
movsl
mov
mov
xchg
add
movsl
arpl
inc
jns
inc
ficomps
dec
jnp
je
inc
mov
dec
and
movsl
mov
or
cmp
sbb
xor
cmp
sub
mov
daa
add
adc
mov
mov
out
cltd
pop
and
test
mov
push
loop
mov
test
or
gs
dec
add
jmp
andb
push
add
arpl
mov
jb
jge
ds
inc
lock
xor
mov
andl
mov
imul
add
out
inc
js
enter
stos
gs
fdivrs
lea
ds
jbe
jg
aaa
mov
inc
pop
jg
ret
fildll
hlt
lds
lds
cmpsb
int
pop
jge
inc
ss
inc
aam
push
dec
cli
mov
in
ds
sbb
mov
xor
loopne,pn
mov
iret
mov
js
out
ficomps
push
and
xor
popa
ds
lock
inc
mov
jmp
mov
faddl
call
sub
cmpsb
mov
jecxz
and
sub
les
mov
or
mov
sbb
adc
stc
out
repnz
push
push
fsts
cmp
push
test
and
mov
rcr
pop
bound
fisubrs
clc
jl
dec
add
insl
sahf
lods
mov
pop
rclb
pop
bound
aam
mov
jae
sahf
mov
xchg
dec
idivl
inc
test
cmp
push
push
lods
jae
dec
out
aam
mov
aas
add
mov
sbb
scas
push
negl
popa
sar
adc
aas
mov
pop
mov
negl
stos
rclb
imul
mov
cltd
sub
test
dec
xchg
pop
decb
lea
push
notb
aaa
orl
inc
out
pushf
sub
mov
add
shll
lods
mov
cmpsb
imul
stc
movsl
pop
dec
push
cmp
jae
mov
mov
mov
inc
test
mov
pusha
push
out
xchg
mov
cmpsl
cmp
pop
test
mov
enter
push
push
daa
xorb
sbb
addr16
push
out
sti
cmp
jecxz
pop
lds
sub
mov
dec
and
cmp
xor
push
mov
and
push
lahf
sbb
rep
mov
rcr
jmp
cmp
lods
js
stos
outsb
popa
and
inc
imulb
push
fidivs
fimull
xchg
aam
add
pop
xchg
aas
out
mov
cltd
rcll
xlat
and
push
mov
xor
adc
mov
int3
adc
mov
add
in
test
cmp
test
push
fwait
test
mov
cld
pop
popf
lret
das
mov
mov
pop
xchg
dec
jle
adcb
ja
loop
mov
mull
out
pop
pop
pusha
dec
outsb
mull
scas
mov
mov
pop
xchg
addr16
sub
push
je
inc
pushf
out
ret
shll
pop
sub
std
arpl
jb
inc
je
sub
cmp
sbb
mov
inc
jb
xchg
stc
xor
inc
data16
shrl
test
pop
lods
add
xchg
cmc
fildll
movsb
inc
sub
cmc
push
sbb
add
rsqrtps
pop
fisubs
cmp
mov
pop
and
dec
adc
aad
xlat
in
arpl
inc
movl
add
jmp
cld
inc
lds
cmc
lcall
push
sub
sub
and
sbb
xchg
add
mov
push
lcall
mov
enter
mov
mov
dec
cmp
fmuls
jecxz
into
push
imul
aaa
or
mov
xor
lret
xor
lods
fwait
call
lock
in
fbld
aam
lea
testb
rcl
lret
inc
pop
lods
in
gs
test
add
pop
sbb
fimuls
ss
aas
pop
int3
cmc
lds
pop
xchg
xchg
cmp
mov
fistpl
or
sub
lea
ljmp
mov
sub
push
and
mov
cmpsb
adc
aas
ljmp
pop
mov
adc
adc
mov
sbb
lock
and
mov
jnp
xchg
dec
pusha
pextrw
mov
das
pop
mov
ss
insb
mov
dec
pusha
icebp
push
inc
lods
mov
fnstenv
xchg
push
jbe
outsb
jp
jb
xchg
shll
jns
subl
pop
jge
mov
or
sub
loop
sbbl
dec
xor
sbb
jg
sub
mov
in
int
je
sbbl
and
add
shlb
bound
push
cmp
add
push
xchg
in
push
ljmp
add
mov
fistps
xchg
sahf
fisttpl
pop
mov
mov
js
mov
fwait
test
and
sub
rcrl
fnstcw
and
mov
xor
fs
push
dec
adc
faddl
in
pusha
push
pop
cmp
jo
jg
jo
sti
hlt
sbbb
push
jp
mov
int
sub
out
arpl
xor
adc
sub
jl
stos
nop
in
push
pop
bnd
jbe
pop
add
repnz
mov
dec
jnp
inc
imul
outsb
out
sbb
out
cli
lds
inc
adc
push
inc
inc
scas
cmpsb
adc
dec
enter
push
sbb
push
rorb
sbb
pop
in
andl
call
sub
xor
divl
popf
ss
es
out
mov
in
repnz
mov
mov
in
dec
stc
push
and
push
adc
adc
sub
mov
sbb
sub
std
sub
dec
mov
add
testb
pop
lock
pop
clc
repnz
push
sbb
lds
cld
and
leave
aam
out
aam
mov
add
cmp
mov
ficompl
inc
shlb
sbb
mov
adc
lds
add
push
dec
sub
in
pop
pushf
jmp
stc
dec
frstor
xchg
lcall
enter
idivb
add
std
sbb
mov
gs
jmp
push
cmp
and
outsl
ljmp
fwait
mov
adcl
movsl
jle
ret
sub
jl
in
test
jle
jb
cmpb
adcl
lcall
out
mov
outsb
adc
fwait
add
dec
gs
out
iret
push
hlt
cmpb
std
or
out
out
mov
fmull
xlat
hlt
dec
in
scas
push
test
call
sbb
pop
push
aam
cmp
iret
rol
xchg
test
add
stc
aam
dec
and
pop
push
frstor
fiadds
pop
inc
cltd
testl
xchg
in
cltd
daa
sub
mov
aas
xchg
leave
test
cmc
sub
testl
js
or
cmpsl
mov
push
sarb
sub
loope
cmpsl
sbb
jno
mov
inc
out
pusha
aam
ljmp
push
and
adc
fwait
std
or
push
xor
mov
push
lcall
sub
mov
dec
push
stc
or
jnp
pusha
inc
stc
cmp
lret
mov
outsb
bnd
jnp
push
and
push
inc
xor
enter
jno
add
sbb
and
sbb
pop
pop
sub
or
fisttpl
shll
int
or
clc
lods
gs
lds
jns
rcrb
js
cmpsl
jmp
imul
lret
xor
xchg
sbb
aam
xlat
adc
ljmp
mov
or
divl
lcall
dec
mov
inc
and
sub
xchg
mov
inc
ljmp
cmp
cmp
sbb
jo
leave
aas
lcall
xchg
mov
adcb
lods
mov
dec
mov
xor
mov
lods
mov
sar
pop
int3
and
test
mov
add
jecxz
in
fisubrl
lock
cwtl
mov
xor
leave
xlat
sub
dec
imul
fdivrs
mov
cmp
sub
clc
lahf
push
jmp
gs
jge
shl
dec
lret
xor
pop
add
jl
adc
leave
inc
pop
loopw
cmc
addr16
xchg
cwtl
inc
push
push
xlat
push
stos
adc
push
jle
in
lahf
pop
out
cli
ret
push
push
push
jl
xchg
push
bound
cli
mov
lods
add
arpl
rclb
jo
adc
and
aas
addb
arpl
adc
fiadds
cs
inc
inc
les
mov
dec
fimull
push
and
pushl
xchg
ret
cmc
mov
mov
lcall
or
cmp
lods
call
cltd
inc
sub
jge
outsl
mov
repz
inc
arpl
sub
add
test
dec
xchg
xchg
push
rcll
xorl
popf
outsb
xchg
pop
sbb
int
in
stc
loope
mov
outsl
out
sbb
lods
sbb
test
fstps
jp
test
pop
mov
lahf
or
js
stos
aaa
repnz
add
sti
pop
mov
jg
adc
adc
cvtps2pi
enter
fadds
ret
test
and
xor
cmp
and
mov
dec
adc
js
mov
out
xchg
and
push
lret
test
out
mov
cmp
xchg
push
test
xchg
repnz
or
cld
mov
adc
insl
or
imul
mov
push
into
and
sub
adc
inc
subl
mov
insb
aaa
sahf
mov
sbb
xchg
jno
jge
sti
fisubrl
add
xor
mov
add
fistl
aam
scas
xor
cmp
pop
push
fstpl
xchg
dec
add
popa
push
pop
lea
sbb
xchg
popf
pop
iret
xor
xor
jmp
sbb
dec
jo
and
mov
loope
push
sub
mov
data16
jmp
add
ljmp
xorl
sbb
ror
pushf
fs
cmpsb
mov
punpckhbw
sahf
shrl
daa
jmp
mov
and
lds
xor
pop
sub
outsb
sub
loop
repnz
ror
push
xor
jo
in
fsubrs
out
mov
adc
push
daa
lret
add
add
ret
adc
cltd
xchg
mov
enter
test
push
or
jb
repnz
sub
leave
insb
les
add
into
fucomp
aaa
sub
mov
jl
ficoml
aad
mov
mov
jne
faddl
pop
mov
cmp
xor
out
test
loope
inc
fbld
dec
add
add
push
and
mov
jmp
or
or
xor
popf
xor
and
pusha
mov
pop
aam
fs
inc
mov
xchg
push
std
push
shrl
lea
sub
jmp
sub
cs
or
jle
test
push
ja
or
es
out
xchg
loopne
inc
push
inc
sub
lahf
or
pop
test
cmp
insl
sub
leave
imul
flds
sub
addr16
jne
repz
ss
mov
lcall
xor
repz
mov
loop
in
dec
add
jl
data16
inc
scas
fsubs
aas
mov
mov
popf
mov
mov
andl
push
js
pop
cltd
cmp
loope
xor
mov
cmp
jg
cmp
mov
mov
pop
ja
jne
sarl
shr
pop
pop
mov
push
xchg
mov
cmp
push
xchg
sbb
cmpl
inc
clc
in
mov
xchg
dec
sar
dec
push
stos
xchg
dec
jg
pop
fistpll
pop
xlat
shll
pop
or
addl
pop
jge
outsw
mov
mov
outsb
adc
call
jge
ds
shlb
pmulhw
jae
fsubp
mov
andl
cmp
xor
lcall
subb
mov
arpl
mov
int
push
loope
cmp
mov
lock
loopne
fcmovne
out
test
add
xor
inc
sub
and
mov
les
shrb
mov
cmp
aas
xor
mov
nop
test
out
inc
loope
and
xchg
ret
mov
cltd
nop
fidivrs
scas
int3
or
in
sbb
dec
lahf
push
imul
lods
ja
jmp
mov
ficomps
push
leave
inc
in
rep
addr16
lods
mov
adc
inc
sbb
push
lahf
xchg
cmp
pop
mov
or
stc
and
jge
push
mov
das
das
mov
jge
jge
jg
jg
push
mov
dec
daa
in
sub
cmpl
push
cmp
adc
cmp
movb
leave
ss
push
cli
lret
clc
fsubl
inc
sub
lock
pop
or
mov
sbb
hlt
shlb
js
mov
cli
add
call
xor
or
mov
in
dec
adc
add
mov
pop
inc
shlb
insl
xlat
iret
lret
repz
mov
ss
inc
cmpsl
xorl
pop
aad
cld
ret
cmp
imul
jmp
cmp
or
or
in
jl
aam
dec
fwait
in
xor
lcall
stos
leave
int
mov
lret
leave
clc
mov
jg
and
sub
popa
incl
jno
dec
jmp
enter
and
loopne
jl
insb
sub
loop
jns
push
rcrl
or
rorb
enter
jmp
sbb
dec
xchg
sbb
rorl
jl
inc
in
lahf
fisubl
cwtl
or
cmpsl
lret
mov
imul
popa
xchg
mov
pushf
mov
xchg
pop
imul
xor
adc
aas
xchg
push
dec
adc
pop
test
mov
test
or
xlat
push
sub
mov
ret
pop
push
xor
mov
lds
sbb
fists
aaa
enter
and
cld
sub
mov
push
imul
dec
vpcomb
pop
mov
inc
outsl
repz
inc
subb
adc
imul
mov
icebp
cmp
cmc
aaa
sbb
pop
test
sarl
fdivr
out
scas
imul
sbb
bound
jg
jle
ret
jmp
aas
idivb
or
sbb
sbb
iret
iret
mov
cs
decl
clc
bound
jmp
sbb
push
cli
jae
xchg
pushf
add
xchg
outsl
out
cltd
mov
rclb
xchg
and
xchg
cltd
scas
int3
mov
gs
fdivl
sub
mov
mov
imul
and
hlt
addl
pop
and
and
test
lcall
mov
jae
inc
jne
iret
dec
xchg
je
lret
into
add
out
or
xor
inc
test
clts
sbb
jb
inc
dec
mov
mov
add
sub
pop
cmpsb
jae
or
ss
xchg
mov
jp
push
std
pop
push
dec
mov
mov
push
in
lods
push
outsl
cli
mov
cld
rorl
dec
sub
push
data16
insl
ror
lahf
or
push
rcrb
std
stos
push
push
xchg
ja
mov
xor
sub
mov
movsl
mov
out
mov
push
movsb
daa
mov
mov
sub
fisttps
jg
pop
stos
rol
jecxz
push
ds
add
cs
jecxz
jecxz
xchg
cmpsl
pop
mov
pop
pop
cmpsl
or
insl
mov
test
xor
adc
lea
sub
push
and
pop
xlat
rclb
cwtl
adc
and
jecxz
push
cmp
les
push
jl
add
hlt
aas
lcall
xor
and
inc
std
push
mov
mov
xchg
das
lea
iret
mov
or
sahf
lea
addr16
negl
mov
lahf
jae
or
or
pop
sub
jns
cmp
cld
mov
jbe
inc
xchg
jae
push
ror
xchg
addr16
push
mov
lahf
mov
aaa
inc
dec
sbb
xchg
bound
push
push
js
xchg
jne
push
add
push
pop
outsb
push
stc
cmp
pusha
dec
lahf
adc
ljmp
bound
popa
adc
fcmovnb
sti
dec
movl
jo
jge
paddsb
mov
lahf
push
cmpsl
ss
imulb
jnp
or
rorb
pop
xor
subb
xchg
push
test
int3
or
test
cmp
rorl
test
pop
dec
or
mov
ret
dec
xchg
fimuls
inc
pop
adc
cwtl
add
lock
push
pop
mov
in
cmp
mov
and
push
adc
mov
xchg
test
ja
pop
pop
stos
movsl
push
fs
test
mov
push
and
or
in
mov
mov
cli
out
adc
jns
es
les
cwtl
mov
dec
add
add
add
inc
ljmp
loope
dec
xchg
mov
cwtl
out
jns
and
adc
shr
es
mov
cli
les
mov
clc
ljmp
shr
dec
jnp
stos
add
bound
inc
andb
xchg
insb
movsb
sbb
outsl
jb
sti
dec
imul
xchg
sub
rorl
xchg
or
loope
push
cmp
jne
pop
js
fistpll
movsl
test
imul
cmp
aad
ss
and
pop
xchg
add
mov
xchg
in
jl
and
aas
inc
mov
mov
cmc
sti
xlat
dec
lahf
nop
fdivrp
adc
inc
pushf
sub
mov
mov
sub
dec
and
movsb
daa
ret
stos
mov
mov
pop
test
ret
mov
mov
xchg
xchg
loopne
push
mov
adc
popa
pop
pop
gs
sub
pop
mov
pop
xorb
cli
inc
call
cmc
xchg
gs
cwtl
lock
aad
inc
sahf
xlat
leavew
stc
push
stos
xchg
rol
scas
lret
pop
push
mov
loope
add
shlb
xor
mov
sbb
mov
cmp
in
ret
adc
pop
lahf
inc
pop
imulb
sbb
jae
lock
lock
mov
hlt
test
loopne
popl
inc
adc
sbbb
leave
dec
dec
or
je
jnp
adc
mov
ret
shll
dec
xchg
mov
in
sbb
mov
push
mov
sub
loopne
out
jnp
xchg
push
scas
xor
shl
scas
dec
fadds
push
clc
lods
mov
jecxz
sbb
subb
xor
ds
sbb
loopne
jp
jg
xchg
pop
mov
jp
xlat
insl
loope
dec
pop
xchg
jge
mov
push
mov
out
fs
xor
inc
or
mov
inc
jns
sbb
loopne
sahf
xor
lods
data16
xor
xchg
in
int
and
stos
mov
addr16
cmp
scas
in
loope
xor
sub
adc
mov
out
add
adc
jge
outsb
inc
orl
xor
ja
push
sbb
pop
cmc
out
adc
xchg
mov
stos
pushf
jecxz
add
nop
xlat
leave
std
sbb
push
negb
and
push
adc
cld
es
dec
pop
dec
mull
jnp
je
in
fwait
jns
jo
shl
out
sub
dec
xchg
addr16
mov
mov
stos
jg
xchg
mov
ret
insl
pop
mov
fstps
pop
or
mov
and
stos
inc
mov
inc
ja
xchg
cmp
jae
mov
ret
cmp
popa
frstor
xrelease
adc
add
mov
test
test
outsl
insb
jnp
xchg
xchg
lods
rol
xchg
data16
loop
sti
cwtl
mov
dec
incl
add
xchg
and
in
loopne
add
hlt
and
into
leave
dec
dec
aad
lret
mov
lods
aas
and
hlt
lods
addb
add
rcrl
mov
mov
and
or
out
das
adc
sahf
scas
mov
mov
push
imul
push
xor
cmc
mov
mov
mov
xor
add
int
ljmp
dec
ljmp
pop
dec
inc
sub
push
ret
out
dec
ja
icebp
sbb
sahf
xchg
imul
fdivl
sti
repnz
cli
sub
dec
mov
sarb
cmp
popa
insb
outsl
adcl
out
ret
push
movsb
out
mov
stos
outsl
mov
insb
push
aad
jp
and
dec
sbb
push
jae
push
xor
mov
aas
das
jnp
jo
pop
mov
adcb
dec
popa
and
pop
out
pop
push
mov
popf
cmp
and
add
xor
test
jmp
stc
mov
jnp
pop
mov
ja
inc
dec
mov
ja
movsl
push
out
adc
sbb
test
fdivrs
cmp
adc
jle
popf
cli
mov
inc
xor
bsf
int
dec
fbld
bound
pop
dec
fucomip
sti
mov
mov
iret
fcomi
xor
and
pop
sub
mov
pop
push
in
add
out
cltd
loope
call
sub
xchg
lret
mov
arpl
jge
sti
and
and
ret
cmp
fucomi
arpl
push
mov
or
nop
rcrl
add
andb
sub
mov
dec
ret
xor
mov
sub
test
or
add
daa
sti
in
pop
sub
imul
mov
mov
push
mov
lcall
sub
call
xchg
push
fidivs
sub
stc
in
xchg
jno
pop
push
push
mov
bound
fisttpll
mov
cs
sub
mov
aad
lret
fcmovbe
loope
xchg
push
sar
mov
mov
sbb
jo
or
dec
out
stos
inc
mov
popf
xor
xor
in
cld
or
pop
fistps
fsts
sbb
arpl
aam
mov
lock
sbb
mul
cmpl
outsb
cld
xchg
repnz
add
mov
into
xor
add
cmpsb
test
es
cmp
imul
mov
jg
movb
in
ror
cmpsl
mov
push
outsb
in
xchg
fwait
push
test
out
sub
mov
pop
or
nop
cmpsl
pushf
inc
xor
jnp
dec
pop
mov
and
inc
fistpll
xor
and
stos
sbb
dec
shll
inc
movsb
push
ds
xchg
sbb
sbb
mov
outsb
ljmp
or
ret
repnz
mov
xor
lret
cmp
pop
loope
je
repz
cld
inc
cmpsl
sub
lcall
dec
mov
popa
push
inc
outsl
push
out
jmp
hlt
fisttpll
int
aaa
pop
fmull
cmp
pop
pop
jmp
outsl
pop
lds
cmp
push
addr16
shlb
jl
push
mov
dec
ror
nop
xlat
mov
pop
andb
test
cmp
pop
push
inc
jmp
js
leave
cmpsl
enter
push
jns,pn
ljmp
and
adc
lea
dec
les
sbbb
cmp
pop
je
cmpsb
fildl
or
ret
adc
xor
sbb
mov
xchg
xor
fldcw
rorl
sub
test
dec
mov
sub
and
popf
cmp
add
in
jg
call
arpl
and
cltd
mov
fistps
js
movsl
sub
lods
lret
ror
mov
push
arpl
test
pop
mov
mov
lods
fsts
loope
sub
cmp
repz
gs
jns
pop
jno
lods
mov
mov
mov
outsb
sub
dec
nop
sub
mov
sbb
fs
ds
pop
jno
popl
mov
arpl
adc
sar
pop
mov
mov
rorb
push
bound
cli
jmp
xchg
mov
enter
and
idivb
sarl
jle
fidivrl
jl
sub
imul
sarl
mov
dec
gs
rclb
test
dec
mov
sub
adc
inc
ret
mov
jbe
mov
adc
movsl
imul
mov
xchg
sbb
out
push
std
mov
and
test
jle
int
push
lret
xor
sub
dec
mov
lds
in
les
iret
or
cltd
sahf
into
pop
sahf
sub
in
jl
fwait
std
imul
xor
and
mov
add
lock
fwait
clc
scas
jno
fcomps
sahf
rcrw
sahf
aad
sarl
or
and
out
push
dec
insl
pop
jg
push
push
shll
outsl
loop
sub
and
adc
call
mov
xor
or
lcall
mov
or
leave
fmull
cmc
popa
adc
mov
dec
rol
adc
or
enter
sbb
ss
dec
mov
test
xchg
leave
flds
scas
in
popl
imul
into
or
cmp
cmp
inc
int
loop
ja
std
push
sbb
mov
insl
inc
xchg
idivl
pop
mov
and
negb
aam
js,pn
mov
loop
cmpsl
adc
ljmp
icebp
lcall
lods
dec
sub
inc
int3
push
mov
xor
xchg
lahf
sbb
sbb
insb
cmp
nop
notl
push
pop
lahf
jbe
sub
sbbl
mov
pusha
pop
sbb
push
movsb
xchg
out
add
movsl
jl
mov
les
xchg
mul
jp
push
mov
gs
add
sub
cwtl
cmpsb
mov
push
aas
mov
scas
bound
push
push
push
imul
fwait
push
outsb
push
add
push
loopne
mov
shll
pusha
in
push
or
loop
stc
mov
mov
nop
cmp
cld
push
cltd
test
test
sbb
xchg
scas
ret
hlt
shll
jo
orl
lock
adc
xor
mov
mov
push
push
repz
adc
cmp
sbbl
or
subb
inc
mov
push
mov
sar
imul
js
add
adcl
gs
push
jge
fisubl
and
xchg
frstor
orl
pop
adc
sub
and
andl
fidivrs
movsb
add
jbe
cmp
dec
push
mov
cs
xchg
scas
fldcw
iret
cld
ss
jg
sbb
adc
xor
cmpsb
clc
xchg
and
xchg
or
fs
movsl
pop
out
and
mov
or
push
mov
rorb
aad
popf
mov
push
cmp
aam
jnp
mov
movsl
sbb
mov
loop
into
jg
push
dec
adc
pop
push
sub
jecxz
push
scas
pop
adc
pop
mov
repz
push
xchg
mov
sbb
sbb
fcmove
fdivr
or
data16
jge
xor
fildl
addr16
mov
lods
cmpl
push
xor
loopne
inc
mov
pushf
add
imul
enter
pop
or
pop
enter
repz
mov
repz
outsl
xor
adc
mov
clc
movsb
sub
adc
push
add
imul
lret
add
mov
fildll
lahf
pop
push
enter
rcr
or
dec
ret
cmp
popa
andb
xchg
mov
stc
fbld
xor
mov
fisttps
in
pop
enter
mov
popa
push
xchg
push
pop
sbb
outsb
cmp
pop
xchg
outsb
lock
xor
orb
mov
repnz
dec
test
outsl
or
or
jns
adc
arpl
into
ja
lods
int3
xchg
sbb
mov
mov
imul
sub
jae
and
icebp
aam
shll
popa
cltd
cmp
out
lods
jg
inc
add
stc
std
je
pop
or
test
lds
mov
aas
and
sbb
sub
adcb
imul
adc
xchg
add
mov
int3
jno,pn
adc
jmp
mov
xor
in
scas
test
adc
das
jae
repz
sbb
std
mov
inc
jecxz
inc
jp
push
repnz
and
pop
cwtl
sbb
pusha
sbb
pop
mov
mov
in
sub
stos
inc
sbb
dec
stos
adc
sub
test
bound
ss
scas
scas
mov
out
adc
sub
in
or
dec
repnz
jle
dec
add
add
aam
inc
test
sarl
adc
sbb
in
add
push
mull
ja
pop
sub
mov
mov
leave
push
sbbl
mov
add
adc
jg
adc
push
pop
repz
cmpsb
test
mov
sub
and
loope
mov
sub
aas
orb
mov
dec
fwait
mov
fs
xchg
and
mov
cmp
sti
xchg
adc
clc
dec
push
jb
and
xchg
orb
out
and
dec
mov
pop
cltd
dec
pop
mov
clc
mov
test
push
stos
pushf
push
outsl
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
pop
test
addl
sub
push
rcr
mov
dec
sub
jmp
gs
jnp
xlat
cmpsb
out
xchg
cmp
icebp
push
cmp
jl,pn
lcall
scas
push
test
dec
test
cltd
stos
jo
pop
sbb
xor
dec
es
xorl
jne
jne
mov
aas
jecxz
lret
xchg
jmp
loopne
fstp
lds
js
shl
loop
inc
ja
fnstenv
lea
stos
sub
add
or
popl
inc
das
xor
and
jle
aas
xlat
xchg
mov
outsl
or
cmpsb
mov
es
rclb
lods
jl
jns
stos
jg
and
mov
sbb
cmc
jne
xor
ljmp
lcall
add
jmp
das
insl
in
cmp
insl
mov
stos
adc
mov
shll
or
push
xchg
test
popl
das
or
push
in
push
cwtl
aad
aam
cmpsb
cmp
lahf
outsl
sarb
mov
psadbw
shll
mov
scas
cmpsl
mov
pop
lods
stc
add
xchg
inc
ret
dec
out
xchg
jnp
jp
push
and
icebp
cmp
lea
mov
je
sbb
cld
mov
or
cmpsb
mov
loopne
xorb
and
cld
cltd
pop
pop
outsl
adc
xor
out
cltd
stos
mov
pop
fs
and
cmp
mov
repz
add
and
mov
repnz
mov
outsb
pop
loopne
xchg
fs
out
clc
pop
jg
xchg
fbstp
shlb
xorl
push
jmp
xchg
push
rol
pop
inc
cmpsb
ja
mov
hlt
sub
test
lea
int3
fwait
cmp
in
in
test
push
scas
mov
scas
stos
pushf
ret
jl
jnp
in
outsb
mov
mov
xor
sub
xchg
xor
out
imul
popf
rolb
dec
pop
mov
inc
movsb
fmull
data16
inc
fdiv
push
fldt
jl
jmp
mov
pusha
jns
or
push
jne
frstor
lahf
shlb
push
push
inc
mov
xchg
pop
sahf
mov
jae
pop
xlat
and
jno
sbb
push
inc
pop
dec
and
jp
incb
inc
movsb
loope
fs
inc
xor
movsl
jnp
mov
pop
cli
xor
fstl
pop
add
xchg
adc
rclb
aas
adc
mov
push
sbb
jl
test
mov
ret
dec
xchg
test
lret
sbb
push
lea
ficomps
stc
or
lcall
pop
out
stc
loop
das
push
jge
mov
clc
aaa
mov
les
jns
sub
mov
ss
push
pop
sti
dec
or
adc
in
or
ret
in
mov
sub
xor
je
flds
mov
mov
mov
adc
arpl
sqrtps
fldcw
sbb
mov
mov
dec
dec
push
and
int
lret
stos
jno
repz
test
mov
sub
adc
clc
hlt
push
fldcw
addl
ret
loopne
and
lds
popf
mov
ljmp
xchg
jmp
divl
or
outsb
addr16
add
pop
xor
or
jae
push
xchg
sbb
and
and
lcall
xor
in
ud1
std
shll
fwait
dec
mov
mov
sbb
lds
scas
or
scas
pushf
push
mov
lea
addl
adc
cmp
mov
mov
push
push
test
xlat
mov
push
xchg
stos
sbb
ror
lcall
ds
dec
push
ljmp
or
push
sub
sti
push
icebp
popf
shrb
xchg
ja
in
push
jge
daa
xchg
sub
push
mov
and
mov
pop
movsb
add
pop
sar
mov
and
mov
jecxz
and
mov
sbb
push
fcompl
leave
in
ret
add
mov
pop
ljmp
pop
js
and
pop
repnz
pop
sbb
imul
arpl
cmpsl
jb
cwtl
scas
fistpl
sahf
mov
pop
sub
mov
push
sub
push
movsl
inc
in
xor
push
rol
jae
jb
fmull
notb
dec
adc
and
imul
inc
add
jecxz
lock
aas
sbb
jmp
ljmp
cmpsl
and
mov
push
mov
out
jnp
xor
jmp
or
dec
pop
adc
cwtl
std
jecxz
inc
xchg
imul
cli
pop
repz
pop
test
lds
mov
sbb
jg
arpl
mov
pop
ds
ror
adc
dec
inc
clc
xor
cmp
fsubrs
clc
dec
int3
push
test
xor
xor
shll
cmp
rcrb
jo
push
dec
xchg
outsb
add
mov
dec
aas
mov
out
mov
out
add
or
es
sbbb
pop
pop
mov
inc
lcall
ss
out
outsb
insl
cmp
push
push
into
dec
es
and
add
pop
mov
xor
les
iret
and
mov
xchg
jmp
sbb
subb
repnz
fistps
jne
out
adc
test
mov
jp
dec
sbb
jno
mov
into
jo
mov
stos
outsb
int
gs
pop
lods
mov
cli
test
xor
call
cmc
movsl
and
inc
in
cmp
mov
icebp
mov
pushf
jmp
inc
outsb
cltd
inc
xchg
sbb
add
mov
out
sbbl
loop
jmp
es
cs
push
cli
adc
ss
dec
pop
imul
mov
es
lock
mov
xchg
loope
inc
stc
scas
and
pop
ret
dec
mov
mov
jns
js
leave
stos
xchg
pop
push
mov
xchg
daa
mov
test
and
gs
andb
call
aaa
stos
test
cwtl
js
xor
add
aam
and
test
movsl
hlt
and
clc
mov
lea
xchg
jg
dec
jbe
mov
mov
or
or
xchg
subl
cmpsb
and
and
imul
daa
push
mov
sub
sbbb
push
xchg
outsl
xchg
dec
icebp
jo
ds
cld
xor
push
js
xchg
jmp
iret
dec
ss
cmp
in
cmp
xchg
int
mulps
jl
ljmp
sbb
dec
cmpsl
bound
adc
sbb
or
hlt
mov
sbb
sub
cmp
dec
mov
push
into
stos
outsl
or
pop
test
out
sub
xlat
sub
or
or
pop
sub
mov
pop
adc
mov
mov
lds
arpl
stc
ficoml
mov
or
adc
inc
mov
sub
jo
jmp
add
cmp
jl
iret
mov
mov
add
out
dec
and
push
sbb
imul
cmp
cmp
mov
pop
push
pop
jbe
dec
mulb
xor
shr
imul
data16
sub
push
mov
pusha
sub
js
cli
ja
mov
pop
jecxz
push
sub
mov
fnstenv
mov
add
test
fdivrs
mov
insl
mov
cmp
stos
inc
inc
mov
outsl
test
add
scas
mov
sarb
adc
jo
out
jmp
mov
lcall
xchg
jge
jecxz
ja
mov
xlat
dec
mov
dec
sub
sbb
dec
clc
adc
loope
ret
ficomps
xor
inc
mov
pop
push
cmp
push
sbb
stc
push
push
cmpb
or
mov
je
sub
xor
sti
adc
andl
pop
ljmp
push
push
outsl
vmovups
xchg
rcrb
adcl
insb
stos
pop
inc
xor
in
xor
mov
popf
clc
outsb
test
push
idivl
imul
xor
cmc
enter
jbe
gs
and
xor
out
testl
jl
add
add
sahf
jl
call
imul
or
and
sti
pop
in
cmp
das
mov
jmp
shll
test
fwait
dec
sub
push
sub
lods
jb
mov
std
js
addb
cld
mov
xor
jl
call
sub
addr16
sbb
lods
xor
imul
adc
push
push
mov
movsb
js
cmp
or
mov
jp
push
inc
mov
mov
nop
jmp
movsb
fdivl
add
push
mov
call
xchg
ret
std
pop
daa
xor
test
pop
xor
mov
jecxz
pop
mov
insb
xor
push
mov
pop
das
aad
lcall
stos
repz
inc
testl
push
lods
sub
popf
andl
jo
or
and
sub
fldt
lcall
jae
mov
jae
shlb
test
adc
or
cmpsl
aad
pop
push
dec
xor
xchg
xlat
add
dec
push
mov
shll
test
cmpsb
or
sahf
jle
pushf
rolb
sbb
mov
adc
test
cmp
pop
xor
xchg
pop
cmpsl
push
ret
mov
mov
aaa
cmc
xchg
test
leave
add
push
jb
inc
add
and
loop
xor
stos
add
movsb
leave
mov
fmull
test
dec
out
dec
cmp
jmp
push
adcl
loop
cmp
in
lods
xor
sbb
test
dec
mov
lahf
adcl
mov
add
jp
mov
scas
cmp
dec
in
push
cli
sub
mov
jge
mov
lock
jmp
dec
fs
cmpsl
loopne
es
mov
xlat
add
mov
daa
data16
aad
adc
adc
test
mov
push
cmp
repnz
mov
lcall
mov
pop
stos
add
icebp
sub
imul
adc
stos
and
pop
cmp
push
mov
mov
xchg
pop
sarb
mov
enter
jg
les
subl
js
call
xchg
jo
outsl
mov
rol
add
fcoms
popf
test
mov
stos
inc
js
push
popa
cmc
mov
adc
out
rcrl
push
lret
mov
jb
repnz
xor
fimuls
jne
cmp
sbb
fcomp
pop
mov
dec
mov
enter
cli
jo
jnp
sub
push
dec
cwtl
into
fnstcw
mov
push
pop
xlat
cmp
mov
adc
sub
jecxz
mov
push
mov
jl
les
repz
nop
pop
xchg
xor
sbb
jg
sbb
adc
ja
adc
test
sub
scas
xchg
pop
ss
xchg
xor
mov
fiadds
sbb
lret
aaa
sub
outsb
mov
push
dec
xor
daa
add
pop
cmp
into
je
hlt
les
push
arpl
lea
std
loope
mov
xor
test
cmpsl
cs
lret
push
jae
mov
nop
inc
and
repnz
call
xchg
aam
mov
shll
xchg
repz
test
enter
sub
sub
sbb
dec
or
and
and
js
aam
mov
xchg
and
sub
adcb
jo
roll
mov
out
dec
daa
rolb
rorb
jge
into
mov
add
out
cmp
xor
cmpsl
add
test
pop
insl
out
push
aad
and
lods
ficoml
xchg
fs
xchg
or
adc
sub
mov
test
mov
cmp
fwait
jo
add
and
or
test
mov
add
push
sub
xor
cmp
push
jmp
xchg
push
mov
pop
test
and
fsub
rcr
or
insb
jo
out
scas
dec
sbb
cltd
mov
pop
mov
inc
fsubl
dec
pop
mov
stc
negl
enter
in
mov
pop
imulb
std
ds
cmpsb
push
jnp
sbb
mov
inc
mov
fimull
jge
fdivrs
scas
jecxz
xchg
lock
orl
and
xor
cmc
fwait
addr16
mov
xlat
cmpb
fdivs
repnz
mov
sbb
inc
dec
fists
shll
sbb
sub
fstl
push
aam
sbb
icebp
outsb
in
in
aam
mov
jbe
imul
mov
sahf
xchg
jb
stc
sbb
push
jnp
out
sbbb
lret
jge
out
test
mov
sub
in
cmp
fdivs
cmp
lahf
mov
sbb
mov
sub
jp
scas
mov
popa
mov
sub
cli
mov
test
lret
rorl
xchg
mov
sbb
cmc
in
sub
jmp
xchg
aad
xorl
cmp
or
inc
inc
mov
mov
cmpxchg
loop
inc
dec
ds
jo
sbb
sbb
mov
fs
arpl
jbe
jns
subl
cmp
insl
stos
pop
pop
loopne
scas
mov
bound
push
or
lcall
icebp
and
mov
sub
adc
push
jnp
jno
add
mov
mov
inc
push
cmp
gs
push
je
push
mov
aas
loopne
jl
mov
xor
in
inc
add
dec
cmp
nop
rcrl
jo
mov
scas
call
push
mov
mov
lea
sub
outsl
push
imul
rorl
dec
fs
mov
fucomi
mov
and
sub
enter
and
pushf
mov
sub
int3
in
jno
test
leave
sub
cmpb
dec
popa
divl
iret
adc
xchg
andb
pop
jecxz
jnp
inc
aas
stos
pop
popf
or
mov
hlt
rcrl
sti
or
lret
scas
subb
and
dec
cld
jmp
mov
xor
push
pop
adc
test
xchg
mov
inc
mov
mov
out
psubusb
and
clc
mov
xor
xor
mov
in
aaa
pop
imul
in
mov
mov
fnstsw
push
out
mov
push
jle
sbb
adc
clc
stos
mov
ds
lods
mov
fstpt
pop
pusha
sub
dec
inc
jmp
test
rolb
add
call
mov
roll
mov
adc
cld
adc
and
popf
sbb
pop
sub
cmp
mov
or
mov
cmp
mov
xchg
out
pop
cmpsl
rcrb
jg
outsb
repnz
sahf
pop
pop
xor
test
mov
cmp
sub
arpl
xchg
dec
scas
insb
mov
mov
cmp
imull
imul
sahf
fstl
add
jbe
dec
jno
or
repnz
add
imul
xlat
mov
loope
adc
and
pushf
scas
je
out
fildl
icebp
test
sub
cmpsl
insl
inc
add
call
mov
xchg
adc
xor
add
adc
test
dec
adc
dec
clc
stc
inc
fucomip
or
cmpsb
xchg
rolb
cli
push
lock
jno
adc
jns
cltd
ljmp
pop
lds
sbb
insb
pop
fcoml
cltd
addb
pop
loop
sub
ljmp
or
push
scas
popf
mov
stos
push
imul
xor
push
cld
stc
rcr
movsb
in
cmpsl
push
popaw
mov
or
and
out
sub
mov
cmpsb
add
push
rcl
int
sbb
push
jbe
push
hlt
in
ret
lret
gs
lret
mov
imul
mov
pop
mov
lcall
inc
jl
pop
dec
stos
mov
pushf
lret
xor
nop
fisttpll
inc
sahf
cmp
sbb
sti
mov
lods
andl
clc
es
mov
cmp
sbb
jmp
int
arpl
mov
lret
dec
jbe
mov
xor
pop
jo
cld
mov
dec
jnp
popf
or
xchg
xchg
and
aam
dec
loope
add
jo
lret
jl
popf
and
mov
pop
xor
imul
add
cltd
xchg
jmp
push
mov
sbb
sub
dec
sub
jmp
mov
xchg
fcomps
lret
xor
sub
and
add
jl
rolb
mov
sbb
lods
xor
adc
sub
shll
pop
cs
stos
loope
rorl
pop
movsl
xor
push
sub
cmpl
mov
std
sub
daa
popa
sbb
loope
xchg
aam
scas
fbstp
or
mov
mov
or
aad
push
mov
push
jb
jle
pusha
push
lds
mov
push
jnp
cmp
mov
cltd
fldl
xchg
lcall
add
xor
jp
inc
add
pop
mov
push
pop
push
bound
insb
adc
fs
jns
fisttpl
stos
push
xor
push
stos
aad
pusha
out
mov
daa
cli
lahf
stos
jp
imul
cmp
add
popa
mov
scas
and
add
mov
inc
lods
pop
inc
lock
lods
mov
xchg
xor
ja
cli
jg
mov
or
cmp
fistpl
jmp
rolb
ficoml
scas
or
and
jo
iret
in
rol
xor
in
inc
sub
ret
std
inc
divb
adc
fcmovu
sub
out
sub
mov
fistpll
stos
sub
xchg
sbb
jo
push
ljmp
icebp
ret
outsb
push
in
xchg
cmp
stc
push
jae
in
dec
mov
pop
sahf
mov
lea
sub
mov
pushf
mov
adc
or
movsb
pop
lea
jno
popf
fbstp
pop
pop
pop
outsl
jo
insl
pop
mov
mov
negl
sub
xlat
lahf
insb
popf
pop
cmp
dec
test
int
add
cs
iret
add
push
shl
mov
cli
mov
push
mov
inc
push
repnz
cli
sub
in
pop
push
cmpb
adc
pop
clc
cmc
hlt
adc
ret
lea
dec
or
jp
stos
inc
leave
adc
das
mov
pusha
lcall
in
aad
incb
and
or
imul
jne
pop
pusha
outsb
add
aad
pop
mov
int3
mov
and
xchg
lods
rol
xlat
sbbl
mov
pop
rcll
inc
jmp
leave
sub
sbb
pop
mov
xchg
xchg
pop
sar
and
inc
sqrtps
jno,pt
mov
dec
dec
int
mov
or
in
faddp
cmp
jbe
test
test
jmp
dec
addr16
call
mov
mov
sub
jno
pop
ficoms
mov
add
mov
xchg
pop
jle
sub
mov
mov
lock
sbb
pop
js
mov
cld
mov
cld
xor
lcall
mov
fwait
int3
movsb
testl
mov
mov
data16
push
test
fs
jg
cmc
push
cmp
ret
out
rep
shrb
add
stc
das
add
in
mov
xor
cmpsl
movsl
push
add
jne
mov
aam
dec
or
data16
std
inc
lret
and
into
push
or
cmp
pusha
add
xchg
sbb
daa
dec
int3
fs
push
dec
push
xchg
push
cmp
cltd
mov
pop
mov
mov
icebp
sbb
pop
or
jb
and
andl
mov
ret
adc
pushf
xchg
sbb
jge
test
dec
fdivr
ds
sbb
sbb
cwtl
xchg
or
push
fmuls
mov
push
mov
sub
jo
xor
outsl
andl
add
or
ds
add
jl
in
sub
fsubs
aaa
insb
jle
xchg
arpl
pusha
in
xchg
arpl
mov
imul
jp
loop
pop
scas
and
mov
jnp
and
jle
test
test
mov
xchg
es
push
adc
jo
or
dec
push
aam
xchg
daa
inc
add
cld
aas
sbb
sbb
iret
das
es
rcl
mov
sub
mov
jae
call
arpl
sub
push
addl
loopne
and
sbb
mov
inc
repz
lock
arpl
inc
add
lahf
mov
xor
nop
out
xchg
shll
cwtl
push
pushf
push
inc
les
jle
mov
iret
pop
xor
data16
sti
lret
cmc
and
stos
jbe
sti
loop
adc
jnp
lods
ret
mov
sahf
push
cmp
cmp
xor
lret
mov
add
cmp
inc
sub
insl
into
xchg
stos
jmp
shl
cltd
pop
call
aas
pusha
lret
cli
dec
xchg
in
mov
cmp
xor
and
mov
aas
push
push
and
or
cmp
jp
jb
push
dec
and
cmp
cmp
iret
sti
lahf
lds
sbb
xorb
xchg
nop
or
arpl
push
push
jae
inc
repz
cld
sbb
lods
addr16
dec
nop
xor
cld
mov
js
push
fildl
adc
xchg
iret
push
push
andb
cmp
xchg
rcl
sbb
iret
js
aad
or
mov
push
insl
inc
rol
push
mov
data16
adc
mov
push
stos
ljmp
subb
mov
mov
lret
cmp
xchg
dec
repz
cli
lds
loop
bswap
adc
mov
xchg
mov
push
push
or
mov
sub
cwtl
das
dec
cmpsb
dec
aad
lret
movsl
insl
js
and
pusha
pop
lds
adc
aas
lock
mov
inc
nop
lret
push
pop
pop
addl
push
lahf
lods
push
or
aad
cmp
jnp
xor
insb
and
repz
fimuls
or
adc
arpl
je
mov
ds
repnz
loope
mov
inc
aad
imull
cmp
rcll
out
lret
xlat
pop
gs
in
jne
xchg
rcrl
jl
fwait
test
aad
sbb
stos
add
arpl
push
mov
xchg
mov
jmp
add
mov
repz
shll
add
mov
mov
aad
scas
test
pop
mov
jp
fcoms
adc
sub
add
and
cmpsl
fcmovnb
sbb
cs
pop
add
es
imul
pop
call
je,pn
push
xchg
sub
cmpl
rcrl
stos
inc
ficomps
jns
cmp
push
out
enter
rolb
popa
jbe
xchg
fidivl
mov
ljmp
push
ja
stos
push
xchg
and
fistpll
mov
jae
cmpl
inc
in
call
dec
mov
subb
fdivs
dec
ljmp
xor
push
nop
clc
es
popf
iret
cmp
or
insb
popa
inc
hlt
fcoml
fwait
out
lret
push
push
int
cli
add
xlat
pop
mov
aaa
adc
push
imul
pop
jmp
ljmp
subb
mov
mov
pop
mov
mov
mov
push
pusha
pop
test
clc
add
or
iret
stos
pop
decb
xchg
cmpsl
cmp
fbstp
nop
push
out
stos
adc
mov
stos
mov
mov
je
sahf
mul
leave
sub
or
jno
das
mov
maskmovq
mull
push
mov
push
mov
aas
adc
xchg
xlat
push
sarl
push
test
movsb
pop
pushf
mov
xchg
int
sti
loop
add
push
and
lret
xchg
mov
push
cmpsl
stos
leave
negl
adc
push
test
pop
pushf
mov
jmp
jne
add
aam
fiadds
add
loope
aad
scas
jnp
inc
loope
or
shrl
and
mov
test
dec
repnz
out
push
mov
mov
incb
pop
or
inc
clts
cwtl
les
xor
xchg
mov
out
xchg
outsb
sbb
mov
dec
cmp
cltd
jmp
pop
jo
mov
xlat
xor
pop
dec
rolb
pushf
popf
mov
inc
js
fidivrl
jl
mov
std
out
fidivl
pop
pop
xor
cmp
adc
push
ror
xor
addl
adc
dec
sub
adc
adc
cwtl
imull
lds
adc
movsb
mov
adcl
sub
cmc
roll
idivb
xor
dec
mov
jg
test
aas
ss
pop
in
or
adc
ret
sbb
ret
xor
int
mov
cmp
daa
mov
jne
push
add
rcll
imul
mov
out
and
loopne
jge
dec
pop
sahf
sub
xor
jne
inc
xor
mov
push
call
imul
xor
xchg
inc
pop
push
mov
and
insl
testb
sub
aaa
stc
loope
and
fstpl
xchg
lcall
add
int
in
and
push
icebp
sar
mov
add
mov
xor
les
mov
pop
lds
dec
push
imul
mov
cmpsb
add
push
repnz
in
out
adc
sub
fimull
arpl
sbbb
in
xor
dec
pop
sbb
aas
je
pop
lcall
inc
xchg
cmp
es
push
mov
insl
push
sahf
lcall
xchg
xor
jle
mov
sbb
adc
fstp
mov
sub
jp
jo
insl
paddsb
repz
dec
out
inc
dec
push
mov
adcl
cmp
cmpsl
pop
test
adc
orb
inc
dec
popa
dec
out
push
movsb
mov
xchg
mov
iret
inc
into
fistl
mov
insb
pop
test
aad
pop
daa
mov
pop
rorb
jl
push
cltd
lret
cli
and
ljmp
mov
xorl
stos
cmpsl
push
outsl
out
fiaddl
and
mov
nop
es
dec
idivl
add
sub
xchg
lock
sbb
hlt
dec
add
ljmp
xor
out
mov
pusha
jnp
fistl
and
mov
adc
cwtl
pop
popf
in
idiv
dec
pop
xor
cmp
rol
push
mov
mov
out
mov
ret
push
dec
int3
xchg
inc
sub
pop
jno
sbb
jb
adc
jbe
int
sub
loope
mov
sbb
and
inc
push
leave
pop
lods
shlb
leave
push
sbb
xchg
icebp
push
mov
adcl
or
mov
mov
mov
test
xchg
lock
xchg
xchg
push
into
mov
sahf
push
in
in
lret
inc
addr16
jge
lcall
out
pop
jo
pop
scas
aas
pop
cltd
loopne
push
cld
add
test
cmp
or
or
leave
outsl
mov
push
sti
lahf
scas
lret
sahf
pop
test
mov
mov
adc
je
cmp
les
jns
in
fs
and
sbb
pop
xchg
fdivrs
sub
sbb
xchg
mov
dec
sbb
and
icebp
push
push
cmp
stc
ss
test
xchg
xchg
push
cmp
out
pop
add
jg
ret
xchg
lcall
dec
push
pop
test
pop
dec
shl
push
and
push
lods
fdiv
inc
cmp
out
leave
shlb
clc
xor
sti
fwait
lock
or
mov
icebp
and
mov
loope,pn
mov
loop
in
xlat
sarl
xchg
lea
cltd
xchg
dec
adc
xor
xorl
decl
mov
inc
or
aas
xor
or
iret
ds
push
mov
imul
and
xor
outsl
cli
dec
fists
xor
icebp
inc
cmpsb
mov
enter
jg
gs
mov
xchg
outsl
jl
jb
pop
in
bound
xchg
imul
outsl
cs
mov
sub
fdivs
hlt
jo
mov
push
fidivl
popa
sbb
push
add
cmp
cmp
in
cmp
test
int3
loopne
pop
hlt
sti
xor
xchg
ss
imul
leave
or
pop
aam
loop
push
addr16
scas
add
push
pop
jmp
mov
jns
pop
gs
negl
dec
xchg
add
or
or
aas
jns
adc
shrl
push
testb
insl
or
cmpsl
mov
pop
adc
in
push
mov
xchg
mov
xor
push
mov
and
imul
pop
xor
adc
mov
xchg
bound
xor
test
dec
sbb
cmc
sub
push
xor
fisubs
test
icebp
mov
les
out
mov
mov
mov
fnstcw
lret
je
cli
jns
frstor
or
pusha
in
arpl
mov
fstp
inc
xchg
daa
inc
jmp
sbb
cwtl
sbb
push
xor
inc
sub
pop
push
outsl
dec
pop
int
cli
jae
inc
ljmp
push
sahf
jnp
push
xchg
jp
sub
out
jnp
xchg
repnz
fwait
fs
fwait
mov
insl
dec
mov
js
rclb
aaa
cs
mov
adc
test
mov
test
xchg
in
mov
das
rcll
sbb
je
rol
mov
sub
push
insb
ljmp
ret
les
das
nop
xchg
dec
lcall
inc
adc
jb
mov
push
aaa
pop
inc
xchg
mov
pop
inc
push
test
aam
mov
les
cmc
dec
push
fstpt
jg
jg
adc
xchg
arpl
mov
sbb
shlb
mov
jno
xor
xor
outsb
mov
adc
push
pop
inc
out
mov
imul
add
fucomi
pop
cmp
push
subl
dec
mov
xor
xchg
mov
jg
push
push
mov
jb
mov
movsb
imul
jl
push
sti
sbb
xor
aad
push
push
adc
jle
stos
or
jae
int3
outsb
jnp
inc
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
data16
shll
jecxz
testb
cwtl
in
outsb
sub
sub
push
cmp
mov
daa
pushf
lods
std
adc
dec
sub
cmp
adc
jb
xor
adc
rolb
jns
outsb
sbb
into
cltd
mov
mov
rolb
and
cmc
in
rcl
test
cltd
sub
or
imul
xor
jb
es
in
jne
ret
inc
mov
dec
xor
jp
sub
mov
mov
push
pusha
add
push
movsb
arpl
in
lods
add
fimuls
jnp
sbb
pushf
mov
pop
add
xor
adcl
es
out
jle
js
dec
add
ds
adc
lea
cs
or
push
pushf
fisubl
pushl
addl
xchg
lret
or
rorb
gs
ret
aas
mov
cmp
sbb
cmp
push
in
mov
mov
loop
push
add
loop
jge
mov
mov
bswap
add
sub
outsl
outsb
jno
addl
fdivrl
push
and
push
xchg
aaa
lcall
aaa
imul
repnz
stc
out
nop
jl
sbbb
divb
stos
cmp
push
mov
or
enter
shl
lret
xchg
xor
dec
pushf
fisubl
mov
and
les
test
mov
call
dec
mov
xchg
dec
jge
xchg
and
std
adc
in
or
xchg
addr16
es
clc
scas
add
mov
shrb
pop
popf
mov
xchg
jl
mov
bound
adcb
mov
dec
in
push
fs
cmp
xchg
std
sbb
call
push
fsubrl
daa
popa
add
out
lock
fcomps
push
and
mov
test
addr16
rorb
je
orb
jmp
into
pop
push
sbb
sub
fmull
xlat
xlat
xor
xchg
aam
sbb
es
add
or
pop
push
loopne
rorb
repnz
xor
mov
out
out
mov
sbb
sbb
add
push
mov
sti
fadd
add
nop
negb
outsb
repz
sub
sub
xor
icebp
inc
jns
jmp
repz
ja
xor
fs
pushf
pop
mov
popf
ret
negl
movsl
push
jecxz
xorl
sub
inc
imul
cs
and
shl
cmp
push
pop
fisttps
inc
mov
ss
mov
mov
test
imul
and
icebp
addl
dec
popf
mov
test
movlps
jp
xchg
cmp
xor
xchg
jmp
mov
add
xor
sbb
and
push
inc
sahf
mov
test
test
adc
ret
fisubrl
add
fstp
call
mov
std
in
sbb
aam
cmp
mov
icebp
inc
jl
push
fisttps
mov
sub
movsb
jne
andb
fldl
dec
inc
rorl
dec
scas
jb
scas
dec
lret
lcall
sub
mov
pop
push
sub
jge
fsts
pop
mov
inc
test
sbb
pop
pusha
addr16
fmul
cmp
mov
scas
loopne
pop
adc
xor
push
clc
rcll
loop
adc
sub
data16
mov
stos
cmpb
cmpsb
or
xchg
icebp
shlb
inc
stc
in
or
xor
std
in
cmp
add
jb
in
and
loop
ljmp
and
jl
jae
outsb
xor
lods
xchg
out
shlb
dec
pop
loope
mov
push
or
fiadds
aad
jo
sahf
aaa
and
outsl
jbe
sub
gs
mov
repnz
xor
cmp
sbb
mov
scas
shlb
xor
mov
adc
cmp
add
dec
and
and
inc
inc
int
mov
sahf
mov
and
divl
sub
mov
dec
push
movsl
mov
push
bound
sbb
mov
stos
inc
rcrb
stos
mov
fcom
jmp
xor
dec
jle
loop
add
inc
jp
aaa
test
jle
fisttps
push
xorl
sbb
push
mov
jb
stos
xor
and
jmp
mov
push
loopne
adc
xchg
mov
cs
sbb
mov
mov
inc
in
jnp
sbb
out
lret
push
repz
push
cld
dec
jns
sub
dec
add
in
aaa
enter
mov
jne
pop
mov
inc
push
cli
sahf
call
jbe
stos
fnstenv
cmp
sub
cwtl
xor
xlat
cmp
es
push
mov
pop
int3
loope
popa
aam
into
and
cmp
outsl
jl
in
sbb
jmp
inc
sub
lods
push
inc
xor
cmc
mov
cmp
xchg
mov
dec
add
in
imul
lds
stc
add
leave
push
adc
inc
xchg
inc
scas
addl
out
enter
dec
dec
in
add
pop
lret
sbb
jp
andb
jne
cmp
imul
test
pop
adc
jbe
lods
rolb
movb
push
xor
or
cmp
push
lods
imul
sub
fiaddl
xlat
pushf
adc
sbb
imul
out
es
shll
xor
mov
mov
jb
fsubl
inc
inc
dec
xor
or
adc
pop
pop
out
movl
sub
sbb
or
jns
push
es
fidivrl
movsb
dec
shl
sbb
adc
jbe
imul
out
push
mov
push
sbb
cmp
test
xchg
mov
pop
xor
insb
jecxz
stos
ljmp
mov
pop
adc
call
ds
mov
lret
mov
mov
lods
xor
repnz
mov
push
into
inc
mov
pop
adc
mov
fwait
fcmove
dec
ljmp
dec
cwtl
jecxz
dec
add
mov
lea
inc
push
inc
out
dec
mov
mov
icebp
xchg
ss
cmp
insb
cmp
dec
cmp
jnp
pop
in
sbb
repnz
cld
sarl
or
xchg
in
repz
shlb
jbe
mov
add
std
in
or
cld
out
subb
sub
fisubrl
aas
jne
je
dec
out
inc
rcrl
test
xorb
push
lcall
and
xchg
inc
mov
adcl
inc
xor
push
shll
dec
mov
jp
and
and
sbb
pop
insb
insb
lcall
xchg
sub
mov
faddl
decb
and
jne
nop
int3
pop
scas
int3
idivl
jae
push
sbb
sbbl
stos
lcall
and
inc
imul
and
pop
mov
sbb
xor
mov
jo
repnz
sub
fsts
clc
stos
fdivs
or
mov
adc
out
int3
lods
imul
or
test
jno
out
jo
popf
mov
cmp
mov
inc
dec
int3
xor
stc
stos
and
cli
add
cmc
xor
rcrl
mov
into
jbe
flds
bound
mul
int
movntps
jg
inc
test
pop
cs
int3
mov
aas
in
add
xchg
cld
xchg
jecxz
imul
cmpsb
jne
sbb
mov
mov
int3
sbb
or
mov
pop
daa
pop
fsts
jnp
lea
into
cmp
fmulp
js
mov
xchg
inc
xor
sbb
mov
cmp
xchg
enter
inc
gs
push
push
imul
out
mov
cli
mov
rcll
faddl
aas
or
test
insl
std
pop
adc
in
cmp
lds
mov
dec
dec
in
jb
pop
adc
test
mov
call
push
clc
jbe
aas
and
aaa
inc
or
xchg
push
leave
pop
xchg
cmpsl
fadd
xor
pop
shll
push
stc
dec
fisttpll
fldl
jecxz
jle
cmpsl
jl
mov
lcall
and
dec
mov
aas
mov
leave
mov
fs
aam
movsl
leave
xor
call
sub
out
ss
lret
and
and
xor
das
gs
dec
pop
popf
mov
push
ja
lcall
mov
mov
and
and
popf
stos
inc
xor
sbb
and
lret
mov
lods
mov
dec
insl
shlb
lret
or
fstpl
and
insl
sub
sarl
fsubr
out
mov
nop
iret
jae
orl
es
int3
jne
movsb
sbb
jl
test
aaa
negl
neg
push
cmpsb
or
in
pop
xor
mov
nop
aas
dec
je
push
das
mov
fisubrl
insb
clc
pop
insb
jbe
mov
and
test
andps
imul
mov
test
sub
xchg
andl
cmp
lock
or
jp
sub
fsubp
pop
adc
sbb
aas
cmpsl
jl
pop
sub
addl
pop
mov
fstl
add
dec
or
loop
pop
mov
lret
inc
add
and
shll
testb
imul
shll
les
addr16
xchg
aad
mov
lahf
and
cmp
sub
sahf
xor
fwait
xchg
dec
fnstsw
inc
pusha
bound
lret
out
mov
xchg
inc
lds
jge
jecxz
add
mov
jno
hlt
ds
popf
pusha
pop
lods
inc
cmp
pop
adc
push
xchg
xchg
add
xchg
dec
shll
mov
push
cltd
fidivl
cmp
mov
lods
mov
ret
les
rorl
bound
cli
xchg
popf
dec
push
dec
roll
mov
pop
roll
inc
xchg
repz
xlat
xor
gs
inc
and
mov
and
scas
or
push
push
add
test
mov
clc
das
into
cs
mov
sbb
aas
mov
jg
mov
add
ret
jl
fisubrs
inc
decb
mov
imul
adc
enter
push
cltd
jmp
pop
int
inc
out
aas
cmp
xor
leave
mov
enter
aas
mov
addb
imul
xor
jmp
shlb
pop
ja
mov
cs
push
sbb
xchg
cwtl
ficoml
into
sub
inc
es
or
loop
pop
xor
jb
cltd
jno
jmp
mov
in
test
mov
loopne
push
mov
loop
mull
push
arpl
pop
lcall
xor
cmp
mov
cmp
mov
arpl
out
stos
lahf
jnp
orl
inc
lods
sbb
mov
jg
jp
add
inc
sub
in
xchg
shlb
gs
aam
pop
xor
lds
lods
std
push
add
sbb
ds
sub
inc
mov
std
sahf
mov
mov
mov
outsb
orb
xlat
mov
jl
ss
cmp
lock
jnp
enter
push
andl
movsl
push
jp
adc
sarl
aam
test
xchg
test
jno
cli
aas
pop
int3
or
rcrb
cltd
sarb
adc
fmull
pushf
and
pop
push
cld
mov
insl
sbb
push
pop
lods
and
dec
xor
pop
xchg
lcall
movb
adc
xor
invd
inc
push
cli
sbb
fcmovu
jne
mov
aad
inc
add
hlt
xchg
mov
cmp
sahf
pop
inc
popf
jnp
push
cmp
lea
add
and
pop
cmp
rcll
dec
mov
addb
rorb
movsl
icebp
add
inc
rolb
push
fld1
lahf
cmp
jecxz,pt
mov
pop
mov
adc
aaa
sbb
test
bound
sub
or
add
mov
in
out
loop
sbb
subb
lret
push
test
int3
jecxz
in
jp
pop
lods
sbb
xchg
mov
dec
and
mov
divl
inc
jae
rcrl
push
js
popf
insl
push
dec
ds
mov
jp
mov
push
movsb
mov
or
hlt
jle
mov
enter
repnz
sub
das
mov
movsb
xchg
mov
sub
push
mov
popa
aas
lcall
add
loope
and
lea
adc
repnz
add
hlt
sbb
movsl
hlt
arpl
pop
cmp
mov
pushf
cs
adc
jl
flds
aaa
add
mov
jae
popa
jl
mov
pop
jl
mov
mov
push
les
xchg
int3
sub
and
jae
pusha
xchg
test
clc
loopne
lret
inc
sbb
adc
ret
cmp
cmp
push
jbe
movsl
sub
mov
or
lods
mov
mov
mov
pop
stos
add
addr16
gs
cmp
sub
cmpsb
sbb
dec
add
mov
inc
lcall
dec
sub
inc
dec
mov
imul
push
and
inc
inc
enter
push
adc
daa
xchg
dec
jnp
addr16
mov
push
or
inc
sub
popf
jge
cmp
pop
enter
icebp
mov
mov
into
les
jg
in
pop
ljmp
call
lret
nop
xor
pop
push
test
shrl
stos
jbe
mov
dec
adc
rol
mov
jae
dec
or
and
cmp
roll
sbbl
jmp
push
fwait
dec
scas
xorb
xchg
push
adc
outsb
cwtl
pusha
inc
je
jecxz
cmpsb
test
jno
mov
loope
aam
clc
cmp
xor
loope
subl
adc
enter
ja
imul
mov
test
cmp
aas
insl
in
fidivs
or
shrl
mov
imul
or
adc
out
sub
xlat
inc
popf
pop
stos
mov
mov
lret
outsl
loopne
rcrb
mov
sub
push
jl
mov
or
mov
inc
cmp
mov
les
mov
or
stos
in
push
add
pop
push
in
add
test
scas
scas
xchg
push
mov
sbb
in
add
push
jbe
fisubrl
mov
mov
fmuls
or
fiadds
ret
sarb
mov
sub
pop
add
stos
fsts
jb
jl
sbb
test
out
int3
or
and
xor
sbb
test
mov
popf
push
fistps
mov
push
or
cmpsl
outsb
je
sub
loop
mov
jnp,pn
mov
and
mov
mov
xor
mov
scas
push
sbb
in
jl
push
and
cwtl
popa
ret
cs
push
dec
in
rep
imulb
dec
in
repnz
out
jg
xchg
into
ljmp
jg
jl
pop
fisttpl
xlat
dec
lods
arpl
test
mov
add
mov
pop
mov
dec
push
clc
std
mov
push
stos
imul
cmp
and
and
add
leave
cmp
test
nop
or
cmp
jecxz
mov
mov
out
or
mov
dec
stos
leave
and
fdivp
mov
dec
push
xchg
add
adc
add
jno
test
sar
sbb
sbb
filds
lret
jecxz
mov
adc
cwtl
rcrl
lcall
sbb
sbb
mov
mov
scas
push
xor
test
rclb
or
ret
jmp
push
cwtl
popa
sbb
xchg
in
fmul
shlb
orb
aaa
shlb
adc
adc
repz
dec
mov
haddps
mov
sub
or
ret
rorb
icebp
mov
mov
lea
outsb
sti
hlt
dec
testb
inc
in
mov
inc
pop
cmp
jecxz
fsubs
mov
stos
cmp
fucomp
mov
push
iret
inc
mov
in
push
cmp
dec
cmp
sti
sahf
lods
jno
mov
pop
cs
xchg
int
test
je
imul
lcall
outsb
jecxz
imul
xor
mov
push
xor
imul
mov
xchg
lock
adc
push
dec
inc
xchg
pop
fmuls
adc
or
insl
cli
stos
mov
cmp
shlb
jnp
and
dec
sbb
fildll
enter
jbe
lds
enter
pop
lret
xor
sub
cwtl
pop
lock
jge
mov
inc
in
push
faddl
mov
or
sbb
and
nop
movsl
jbe
mov
mov
cmp
mov
xchg
mov
sub
jnp
mov
add
add
sahf
sub
out
rorl
mov
mov
or
or
aam
mov
test
push
imul
cwtl
iret
inc
adc
push
mov
ret
mov
adc
out
rorb
js
scas
dec
out
pop
loope
insl
dec
inc
ja
std
ljmp
std
mov
inc
mov
pop
sbb
movsl
xchg
mov
cmpsl
lret
mov
mov
pop
popf
push
dec
mov
xor
sbb
or
mov
stos
inc
decb
movl
xor
xor
ret
gs
inc
aad
push
test
fucom
inc
jg
ds
arpl
or
loop
aad
jb
sbb
pop
mov
sbb
mov
scas
mov
push
rorb
lods
movsb
dec
xchg
mov
cmc
nop
cmp
clc
ret
xorl
out
inc
sub
mov
out
pop
test
incl
xchg
inc
aas
fwait
adcl
lods
ljmp
aas
divl
int
xchg
pop
fs
mov
fwait
mov
mov
fwait
idivl
add
ss
iret
and
nop
mov
ja
sahf
call
imul
xor
cli
mov
loop
or
pop
pop
mov
mov
push
imul
push
aad
ds
jbe
dec
xor
push
fiaddl
pushf
add
daa
xchg
xlat
xor
pop
dec
and
out
in
push
ret
jmp
dec
xor
and
jl
or
test
stos
ret
lds
dec
xor
sub
pop
adc
roll
cwtl
mov
and
fwait
aaa
testb
lds
insb
adc
ja
loop
xlat
js
cmp
mov
xor
outsb
push
movsl
jae
xchg
cmp
jb
inc
xchg
mov
ja
adc
push
mov
adc
adc
jns
inc
xchg
adc
test
icebp
cmc
pop
sti
aam
push
push
sbbl
jp
cwtl
mov
jae
dec
fs
pop
dec
cmc
shll
stos
mov
loopne
adc
jmp
loopne
sbb
shr
cmp
mov
ds
fwait
imull
test
or
push
xchg
push
addr16
inc
fs
mov
sub
out
lret
repz
jle
push
jne
sub
and
and
dec
inc
mov
fsubl
adc
pop
cmp
mov
in
and
lcall
js
outsb
add
ds
and
rcrl
xchg
test
push
arpl
sub
hlt
lods
hlt
mov
shll
mov
popa
pop
push
outsl
fmull
sub
and
jle
xor
mov
test
pop
test
and
xchg
pushf
inc
adc
push
mov
out
pop
mov
or
in
inc
lock
push
and
sahf
in
stc
inc
shlb
out
mov
stos
data16
dec
sub
in
ds
jg
test
push
jae
cld
add
test
sub
mov
jle
push
xor
mov
ljmp
loope
push
loop
out
lret
mov
into
lods
out
jnp
scas
push
xor
push
and
mov
lods
cwtl
dec
push
scas
push
enter
mov
mov
add
ret
mov
lcall
insb
or
into
and
cmp
add
inc
fisubrs
mov
arpl
mov
icebp
and
movsb
insb
jnp
push
mov
fcomps
stos
jb
xchg
subb
mov
pop
xor
or
add
push
dec
stos
test
test
mov
inc
pop
ret
stos
mov
push
mov
jle
dec
pusha
sbb
push
aad
ja
mov
pop
and
push
lret
lret
lock
push
mov
xchg
icebp
cld
xchg
inc
dec
dec
iret
cmc
mov
push
mov
pop
sbb
jmp
pushf
pop
or
out
orl
lods
xor
or
pop
adc
cmp
and
jl
test
mov
jp
push
or
dec
push
and
add
sbb
push
xchg
nop
sbb
cmc
lods
test
mov
out
push
sub
push
fcoml
ror
pop
sbb
mov
dec
stos
aam
aaa
aad
dec
test
cs
xlat
dec
dec
pop
or
or
jge
int
add
inc
test
je
xor
pop
or
int3
mov
or
cmp
mov
aas
cmpsl
push
fstpt
push
addr16
jmp
repnz
iret
inc
push
push
subl
xor
push
int
or
mov
pop
push
pop
je
adc
ret
add
mov
mov
call
dec
mov
aad
adc
mov
aas
xchg
inc
mov
sub
in
es
dec
lret
mov
aam
jno
mull
lock
enter
aas
or
sti
sahf
sbb
clc
jle
or
cwtl
push
sbb
jecxz
outsl
cmp
fwait
pop
adc
mov
ret
or
push
bound
aad
add
insb
or
mov
xchg
xor
mov
mov
clc
and
ds
shl
sahf
out
inc
sahf
mov
mov
jl
repz
push
outsl
sbb
jns
xchg
add
pop
movsb
mov
cmpb
aam
loope
lods
les
lahf
rcrb
cmpsb
mov
icebp
mov
cmpb
ret
cwtl
mov
leave
filds
inc
in
stc
add
int3
mov
cmp
and
mov
push
mov
ret
hlt
adc
mov
push
in
shr
leave
sahf
jno
inc
mov
cmp
loope
xchg
dec
sbb
enter
mov
sub
imull
ss
insb
cli
test
sbb
repz
xchg
std
lea
push
xor
and
ror
dec
rclb
jmp
sub
cmp
outsl
add
lock
fwait
sbb
mov
pop
fwait
gs
fidivs
adc
in
loop
sbb
jmp
xorl
dec
jl
in
inc
sbb
xorl
dec
push
cmp
movsb
and
sbb
mov
xor
inc
xor
stos
scas
xorl
push
pop
mov
pushf
pop
xchg
call
add
or
fsubrs
enter
pusha
hlt
dec
adc
scas
cli
cmc
mov
add
add
push
jns
cwtl
pop
test
mov
mov
cwtl
out
lcall
cwtl
shrl
push
fidivrs
push
mov
adc
sub
add
xor
fs
cld
mov
jbe
xor
lods
push
push
mov
mov
test
pusha
jp
or
imul
dec
cwtl
cmp
xor
sub
xchg
and
mov
movsl
imul
add
insb
pop
lods
inc
mov
mov
dec
decl
and
inc
shrw
test
add
push
repnz
int3
loope
cmc
add
pop
adcl
lds
aam
mov
lcall
push
and
pop
enter
jecxz
dec
or
inc
mov
mov
ja
lods
je
xor
lret
pushl
test
insl
jae
sub
nop
push
cld
cmpsl
daa
insb
lret
xor
xor
jb
cmp
sub
mov
adc
sub
bound
add
xor
xor
add
ljmp
inc
xor
inc
mov
jmp
add
aam
das
addl
push
nop
jbe
inc
cmpsb
mov
push
mov
jp
es
fdiv
or
je
mov
icebp
and
outsl
popa
rclb
jbe
jecxz
movsl
jmp
inc
mov
mov
pop
call
mov
jmp
cwtl
adc
adc
adc
pusha
push
xchg
out
jns
int3
and
adc
popa
mov
sbb
adc
stc
jns
stos
mov
or
popf
fdivr
pop
cmp
ljmp
sub
cmp
cld
movsb
xchg
add
pushf
mov
pusha
cmp
cmpsb
dec
int
out
out
aam
ja
fiaddl
fwait
dec
pop
test
fwait
jb
dec
adc
xchg
ja
shrl
jg
int
test
sub
ljmp
test
inc
xchg
jmp
in
add
cltd
jg
dec
std
into
fcmovnbe
adc
inc
mov
outsb
xor
stos
adc
pop
rcr
leave
cmp
and
mov
ret
shlb
imul
xlat
int
andb
jl
inc
push
inc
and
into
sub
in
jae
mov
mov
in
aas
call
loop
adc
add
cmc
add
fisttps
jge
addr16
daa
xchg
mov
ja
dec
mov
adc
push
mov
es
sub
jo
mov
inc
pop
xor
popa
mov
fbstp
cwtl
fisttpl
mov
add
test
sub
xchg
out
jg
test
cwtl
push
adc
lods
and
stos
xchg
test
in
jge
imul
mov
les
lds
pusha
xchg
and
or
shll
cmc
scas
fnstsw
sub
adc
push
scas
aas
in
pop
xchg
or
fwait
sub
sbbl
inc
xchg
mov
dec
jo
pop
lds
call
jbe
push
or
mov
sbb
mov
or
mov
test
lds
cwtl
cmc
mov
cmp
and
push
dec
sbb
out
aaa
xchg
lret
cmp
pop
pop
dec
cmp
outsb
adc
pushf
ds
repnz
cmpsb
jb
andb
pop
adc
xor
cmc
mov
scas
xchg
xor
inc
xor
je
insb
insl
mov
pop
shrl
mov
xchg
fsubrs
andl
mov
cmp
pop
sbb
xor
fimull
ds
les
mov
or
lods
sbb
das
inc
stos
dec
cmp
pop
fnsave
lret
xor
add
cs
push
add
dec
dec
and
jns
mov
popf
push
push
call
in
xlat
sbb
dec
mov
iret
aas
push
mov
push
push
cld
sbb
lock
push
mov
lea
sahf
mov
push
and
mov
jno
sbb
push
iret
rclb
cmc
lahf
inc
add
xor
and
xorb
in
xor
dec
xchg
arpl
mov
mov
sub
push
int
lds
mov
gs
bound
stc
sti
jb
fwait
add
or
xor
je
mov
mov
xor
and
dec
pop
fwait
jnp
pcmpgtb
adc
adc
loop
cld
sub
adc
test
and
or
push
pop
cmp
shrb
stos
inc
fld
mov
dec
jo
jnp
xchg
push
test
in
and
scas
stos
or
add
movsb
xchg
out
lods
mov
dec
jle
daa
imulb
jg
fmul
xorl
sbb
xor
sti
sbb
ret
xor
push
mov
or
jl
mov
lods
mov
lcall
loope
pop
lock
test
aad
or
cli
lcall
out
push
inc
sahf
ficoml
ljmp
inc
gs
pusha
fistpl
push
and
daa
mov
shll
xchg
xor
ja
jne
mov
cmp
dec
and
mov
jmp
push
negb
pushf
fistl
test
push
cmp
pop
mov
jg
adc
les
stc
dec
jne
xchg
sub
imulb
and
int3
add
bound
jae
jb
gs
jno
cltd
jmp
cwtl
adc
jo
call
mov
mov
mov
inc
negb
mov
push
pop
cmp
mov
mov
mov
lret
mov
mov
and
cmpsb
ret
cmp
inc
push
sub
cli
adc
mov
add
popf
scas
push
jl
ljmp
push
in
movsb
mov
and
sub
push
movb
into
sbb
inc
mov
pop
nop
and
dec
sti
lock
sbb
arpl
stos
cmpsl
imul
ljmp
mov
fwait
jmp
jno
or
sar
pop
xor
call
mov
push
in
fimull
cltd
mov
lds
out
adc
test
loope
sub
das
jb
jno
pop
sbbb
mov
pop
sub
add
and
lods
lahf
mov
fmull
mov
xor
mov
cltd
out
xor
sbb
sub
jmp
mov
sbbl
insb
dec
jle
push
fstpt
xchg
push
pushf
xchg
lahf
xchg
xchg
mov
loopne
push
xchg
jo
fmul
add
pushl
int3
test
lds
fcmovnu
xchg
adc
adc
cmc
push
arpl
mov
or
dec
push
hlt
test
xor
cmpsl
enter
pop
xor
fs
and
xor
inc
xchg
cmpsb
jp
sub
test
pop
cmp
ficoml
addr16
xor
lret
xchg
lods
pushf
xor
nop
sub
adc
call
clc
mov
lods
subl
lods
test
arpl
mov
mov
pop
pushf
cwtl
xchg
test
loop
das
iret
std
lret
sbb
or
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
push
jno
jle
rolb
add
daa
pop
fs
cmp
inc
dec
es
jae
out
shl
aaa
dec
pushf
xor
enter
daa
mov
insl
outsl
stos
and
xchg
mov
rorb
cmp
lret
sub
mov
cmp
insl
xor
push
js
pop
cld
test
or
sti
jp
into
adc
jecxz
mov
lahf
cli
adc
les
cmp
inc
or
jo
mov
jge
add
loopne
fists
repnz
mov
pop
loop
and
jmp
out
ret
push
cmp
mov
sub
fsubrl
and
jno
cwtl
mov
adc
cmp
insl
lcall
scas
movsb
fstp
xchg
sbb
add
daa
cmp
push
sub
mov
mov
jo
pop
mov
and
popa
lret
fmull
xchg
mov
imul
sub
xchg
xlat
add
mov
lcall
int3
inc
sbb
out
mov
jo
inc
add
arpl
lods
pop
ret
xchg
out
pop
pop
das
add
sub
pop
sub
cli
sbbb
iret
xor
mov
jp
lods
cmp
xchg
pop
aas
sti
cmp
fidivrs
loopne
xor
and
mov
sub
pushw
cli
xor
xchg
pop
mov
inc
inc
aad
xor
nop
mov
sub
add
notl
sbb
mov
hlt
xchg
pop
lock
test
cmp
push
pop
or
dec
nop
aam
lcall
sbb
push
add
mov
sbb
xor
test
push
dec
cmpsb
test
stos
std
xchg
ja
mov
in
xchg
loop
or
cmp
sbb
loopne
xor
das
mov
adc
and
mov
xchg
adc
pop
in
fidivrs
in
aad
add
adc
fwait
inc
adc
adc
and
mov
fisubl
jns
arpl
std
adc
mov
iret
mov
sbb
jg
mov
repnz
jae
cmp
insb
cwtl
orl
sbb
mov
stc
mov
or
xor
xchg
push
hlt
sbb
and
in
jg
out
scas
push
pop
mov
and
ficompl
mov
dec
push
test
push
std
fcmovne
scas
shl
roll
popf
sub
adc
lods
cmpsl
arpl
push
clc
inc
jns
mov
fwait
addr16
dec
in
cli
sbb
lcall
pop
out
stos
xchg
xchg
mov
xchg
mov
push
jns
mov
jge
push
cmp
jo
xlat
hlt
sub
in
out
push
mov
mov
inc
insb
mov
jo
xchg
mov
popa
pop
insb
cwtl
imul
loop
mov
add
addr16
mov
jge
and
xor
cltd
out
jnp
out
mov
jns
insl
adc
fwait
add
inc
js
rolb
or
xor
lret
ljmp
sbb
mov
daa
fdivrl
shlb
sub
cli
or
daa
push
andl
arpl
push
sub
cmpsb
adc
cmc
mov
inc
xchg
and
mov
out
or
xchg
xchg
or
daa
push
test
mov
pop
jg
mov
cld
sbb
es
or
dec
call
or
outsl
mov
pop
das
cs
out
std
cmpsl
xchg
lods
pop
dec
je
fcoms
jl
mov
lods
and
adc
hlt
bound
cmp
shrl
into
pop
rcr
push
adc
push
mov
xchg
jp
movl
sbb
scas
cmpsl
xor
push
xchg
cmp
fs
dec
cwtl
add
inc
js
xor
xchg
and
fs
mov
enter
test
inc
cltd
push
mov
cmp
push
neg
aad
pop
push
cmp
ljmp
repz
lret
cltd
shll
lea
pop
dec
xchg
stc
inc
inc
pop
shl
mov
push
data16
sbb
dec
out
imul
fsubs
pop
xchg
and
xchg
xor
inc
and
mov
adc
lds
and
push
jge
negl
push
pop
xchg
shrl
mov
popa
mov
xchg
loop
mov
repz
mov
adc
jl
ljmp
cmova
sbb
out
cmp
sub
cld
std
outsl
adc
push
xor
and
jnp
push
test
add
cmp
cld
mov
dec
fs
mov
sbb
outsl
mov
cmpsl
xchg
or
dec
or
stos
xchg
adc
in
mov
pop
inc
sbb
add
out
das
push
dec
out
cmp
mov
stos
sbb
gs
out
sar
ret
cmp
lds
notl
cmp
ret
push
outsb
std
pop
fwait
in
lds
pop
cmp
ds
scas
aaa
movsl
sub
add
sbb
adc
lcall
mov
xor
in
imul
movsb
inc
mov
add
pop
pop
adcb
ljmp
arpl
xchg
mov
cmp
xor
mov
inc
dec
cmp
mov
add
jb
dec
call
ds
or
cmp
loopne
rclb
mov
jle
or
push
push
or
sub
pop
iret
and
fstl
pop
je
icebp
lods
mov
fistl
jne
mov
or
xchg
es
dec
push
dec
sbb
push
cmp
inc
xchg
in
das
add
test
fbstp
loop
outsl
cld
add
lea
aam
xchg
cltd
outsl
daa
mov
cmp
movsb
or
inc
or
or
jmp
nop
jge
adc
stos
fsubrl
push
scas
pop
pop
mov
pop
cs
push
rol
xchg
nop
out
scas
das
lcall
daa
pushf
cmpsb
adcl
dec
sub
shll
pop
cld
lret
data16
dec
aas
aad
xor
stos
jno
adc
outsl
mov
mov
clc
adc
cld
push
jp
out
out
and
movsl
inc
pop
test
lock
cmp
adc
jmp
cmp
pop
inc
int
dec
jmp
sub
add
rolb
inc
icebp
orb
mov
xchg
mov
push
push
sub
test
xchg
mov
mov
push
lods
nopl
push
in
jb
mov
lods
pushf
sbbl
mov
inc
mov
mov
or
dec
xchg
in
or
xchg
and
es
and
mov
mov
into
roll
pop
mov
push
push
push
mov
or
daa
fcmovu
add
xchg
aaa
into
xchg
mov
cmpsl
cs
loop
out
daa
and
pop
dec
loopne
cmp
in
mov
jecxz
xor
scas
cmp
jmpw
xchg
sbb
cltd
and
ret
jp
nop
jnp
pop
adc
mov
data16
mov
add
das
push
fistpll
jb
fs
dec
mov
aaa
sbb
sub
repz
lret
sbb
je
push
mov
jl
movsb
ret
sbb
mov
fwait
test
mov
add
push
shl
movsb
sbb
cld
daa
adc
popf
call
pop
adcl
lret
jb
lahf
pop
lods
jb
fcom
push
jmp
ret
cmc
push
cmc
jge
out
stos
addb
xor
xor
inc
pop
push
fldt
or
out
lret
xchg
xchg
pop
and
es
lods
mov
in
push
push
or
pop
or
call
leave
ficoml
mov
xor
mov
movsb
lcall
clc
stos
lods
ficoml
or
gs
mov
ss
iret
pop
xchg
repz
outsl
and
jecxz
insl
cltd
add
and
pop
cli
and
mov
push
xorb
adc
imul
push
ds
in
jle
jne
addr16
xorb
mov
and
inc
mov
cmpsl
add
outsl
mov
fdivrs
rcrb
push
sbb
dec
sbb
je
push
mov
mov
mov
xchg
xchg
test
push
lds
jecxz
shl
aam
es
rcrb
push
icebp
hlt
jnp
lods
push
sub
lret
mov
jb
pop
pop
js
sub
push
dec
scas
enter
pop
inc
mov
cmp
or
insl
call
dec
push
xchg
or
cmc
leave
aaa
andl
mov
iret
pop
rol
jecxz
pop
dec
adc
or
loop
push
jl
push
stos
or
shr
push
dec
loop
int3
mov
push
ljmp
in
pop
mov
test
test
fs
popa
jg
xorb
outsl
mov
icebp
movsb
xor
lds
cmp
rcl
cmp
ja
loopne
xchg
dec
xor
icebp
push
lcall
pop
data16
ss
fstpt
and
or
xchg
call
jb
std
cmp
cmp
popa
adc
mov
xorb
clc
call
inc
lds
mov
fidivl
insl
xchg
adc
dec
mov
fs
popa
mov
test
dec
push
adc
psubd
shll
adc
popf
xor
xchg
addl
dec
and
sub
jg
cmpsl
pop
push
outsl
shlb
jb
imul
add
sub
leave
mov
jmp
and
xchg
jl
adc
push
add
das
mov
iret
bound
ss
push
movsl
cltd
dec
cmpsl
xchg
imul
adc
pop
in
mov
push
and
mov
jmp
sub
insb
aam
mov
insl
test
movsb
sarl
jbe
out
xchg
inc
arpl
push
out
xor
pusha
outsb
jns
fdivl
xor
adc
xchg
int
push
lock
xor
or
push
adcb
push
mov
aas
cld
imul
pop
adc
sbb
iret
daa
pushf
ret
dec
xor
scas
xchg
or
cmc
inc
inc
pop
and
xchg
mov
adc
pop
aam
smsw
xor
cltd
sbb
popl
pop
mov
mov
xchg
rcll
xchg
adc
and
imul
add
sbb
adc
movsl
lods
push
insb
adc
xchg
syscall
mov
mov
jno
repz
sbb
ss
sti
inc
lret
mov
ret
icebp
in
pop
jo
outsl
int3
sarb
mov
jmp
push
fsubl
fistpl
mov
mov
mov
push
icebp
adc
rolb
sahf
lcall
adc
mov
jae
ja
mov
add
xor
ret
xor
lock
xchg
cld
jg
das
stos
xchg
cmp
shl
pushf
mov
lock
mov
mov
xchg
jl
movb
jnp
dec
adc
xor
shlb
xchg
ret
adc
dec
adcb
test
add
ret
pushf
test
lods
dec
adc
adc
mov
loopne
pushf
mov
adc
mov
test
mov
and
fnsave
std
sbb
popa
test
ficoml
pushf
dec
fists
out
mov
add
add
mov
into
andb
sbb
fmuls
push
mov
shlb
insl
mov
pop
lods
inc
fldcw
sub
and
and
std
std
jne
adc
and
push
outsl
jmp
or
iret
xchg
fnsave
xchg
push
or
shrl
mov
dec
data16
jecxz
aaa
repz
sti
or
and
pop
xchg
sti
sbb
out
andl
aam
sub
scas
mov
jae
push
lds
pop
das
cmpsl
cltd
push
pop
mov
cmp
pop
cmp
loope
push
mov
jo
pop
movb
cmc
cmp
inc
push
out
xor
mov
jecxz
sbb
cmpsl
mov
or
aam
lret
mov
sarb
mov
jnp
leave
inc
sub
clc
dec
idiv
sti
mov
adc
dec
jecxz
mov
xchg
pop
jmp
js
sbb
fs
ret
xor
mov
sub
mov
fcom
cwtl
push
push
inc
pop
lahf
sbb
into
test
cwtl
pop
in
movsb
cmp
rclb
negb
push
and
jbe
ja
dec
mov
fcom
mov
push
fsubl
test
mov
and
pop
imul
push
outsl
jecxz
push
xchg
mov
push
jecxz
andl
push
push
std
lret
lods
xchg
outsb
or
push
or
lock
sub
jle
lods
imull
repnz
or
mov
mov
testl
shll
std
fsubrs
jg
lods
sbb
inc
xchg
jnp
push
sahf
lods
sti
or
es
fadds
cli
ror
lea
sbb
cmp
mov
ss
cli
stos
push
xor
mov
adc
scas
sbb
shl
sub
xchg
mov
das
sbb
mov
test
push
iret
push
test
stc
cltd
pop
js
lahf
lds
insb
fsub
or
adc
jecxz
adc
push
cmp
stos
in
mov
pop
xchg
dec
add
or
cld
cwtl
push
stos
add
sub
je
lock
int
popl
ljmp
movsb
in
lret
andb
pop
or
fwait
mov
adcb
sbb
ljmp
dec
loopne
push
pop
sbb
and
add
sbb
fstps
pop
mov
jge
ja
and
adcb
call
cmp
shlb
mov
pop
daa
mov
popf
mov
jl
outsb
xor
repz
andb
lcall
mov
pop
pop
jb
adc
cmpsl
mov
inc
or
add
jge
rolb
dec
shrl
ret
je
outsl
in
lret
adcb
xor
sub
subl
out
in
imul
xor
stos
aas
inc
xor
dec
sahf
mov
mov
mov
jg
sbb
das
repnz
ja
sbb
push
scas
or
inc
lahf
adc
sbb
in
inc
mov
sbb
orl
adc
cwtl
in
inc
sub
cld
test
sahf
sub
mov
xor
jbe
shrl
lcall
sarb
inc
pushf
out
cltd
mov
push
pop
xor
shll
into
sub
or
andl
xor
outsb
xor
ljmp
in
sbb
cmp
dec
push
popa
mov
xchg
pop
jo
mov
fs
incb
hlt
fidivl
dec
test
or
imul
push
xor
loop
jnp
stc
into
xchg
test
pop
or
xchg
sbb
sub
subb
stos
mov
adcl
mov
cld
xchg
and
and
sub
dec
pop
mov
ds
mov
push
fisttpll
lock
stos
cmp
dec
jno
into
ror
fldcw
pusha
rorb
adc
cmp
pop
pop
adcl
dec
mov
dec
lods
popf
sub
mov
jbe
jns
and
cs
jg
or
mov
imulb
sarl
hlt
adc
push
mov
mov
push
repnz
or
loop
cmpb
leave
push
push
ret
and
adc
cli
test
mov
sbb
adc
add
popf
sbb
fdivrl
push
int
shrl
aad
sarb
jecxz
std
clc
ja
lds
lcallw
in
lret
push
stos
mov
jbe
into
sub
movsb
add
fmull
jmp
cli
aaa
xchg
xor
pop
jae
lea
icebp
mov
adc
cmp
sbb
jo
outsb
or
into
sub
ja
mov
dec
jecxz
into
imull
hlt
and
cmp
or
sub
rcr
outsl
or
aad
movsb
jne
pop
daa
xorl
mov
outsl
sbb
or
es
es
or
stos
add
push
pushf
das
hlt
dec
cmc
mov
mov
xchg
mov
rorl
or
dec
ja
xor
mov
push
ja
mov
arpl
cmpsl
mull
push
fsts
stos
mov
jnp
push
shrl
xor
sub
fucomp
ja
ret
je
data16
adc
inc
xchg
adc
mov
subl
jne
movsb
lret
sub
pop
mov
cltd
aad
popl
clc
mov
or
cld
sti
mov
pop
jl
pushf
setge
sub
sarb
add
in
les
ret
push
sbb
and
sbb
dec
lds
stos
es
outsl
add
sbb
cli
lret
xor
loopne
lods
push
call
iret
out
dec
mov
xchg
repnz
sub
lcall
fdivrs
rorb
lcall
sbb
jns
mov
sub
jno
jg
cli
gs
dec
stos
pop
push
sbb
push
imul
aam
fiadds
dec
sub
sub
pop
cmp
imul
daa
dec
sub
jnp,pn
mov
nop
das
push
push
jne
out
fdiv
test
mov
adc
fcomps
fistpl
lds
xor
imul
std
or
cmp
dec
cmp
imul
add
cmp
jecxz
loopne
ljmp
inc
xchg
or
rorb
mov
cmp
loopne
push
dec
sbb
mov
ljmp
hlt
and
out
popf
mov
iret
ds
mov
sbb
mov
int3
stos
rol
cld
lods
cmp
cmpsl
adc
dec
rorl
imul
mov
dec
xor
xor
dec
mov
sub
lahf
inc
out
bswap
cwtl
inc
hlt
pop
jae
or
jo
jno
jl
push
lahf
repnz
sub
leave
adc
jmp
cmpsl
pop
sub
xor
or
sbb
push
sbb
mov
push
inc
dec
icebp
shll
and
les
leave
cwtl
stc
jne
stos
sbb
sbb
jne
ljmp
test
scas
add
rcrb
pop
push
out
pop
sub
pushf
add
adc
test
inc
sbb
in
dec
movsl
inc
into
xlat
mov
inc
loopne
cmpsb
push
and
jnp
data16
xor
aam
pop
sbb
insb
sar
jmp
push
fdivl
xchg
dec
and
mov
jecxz
sahf
push
scas
test
xor
push
and
jle
add
push
and
add
stos
jae
or
incb
std
fs
lods
orb
ljmp
out
enter
rdmsr
fcomi
je
movsl
pop
pushf
sahf
pop
outsl
cmpsb
jecxz
rcl
xchg
xchg
movsb
or
les
pop
or
cmp
and
push
add
cmp
shll
inc
jg
insb
js
shlb
xor
ds
jae
dec
xor
pop
fadd
mov
mov
jl
sub
fisubl
int3
loopne
jne
into
ja
test
aas
cmp
adc
js
mov
push
lods
jnp
xchg
adc
xchg
lahf
daa
cmp
in
cmp
pop
adc
or
mov
repz
outsl
cli
in
mov
scas
enter
sbb
daa
xchg
das
stos
fwait
ljmp
mov
loope
mov
mov
iret
push
adc
jae
shrl
pusha
gs
aad
sahf
push
lea
sahf
sub
jg
pop
scas
loop
mov
jae
jb
mov
adc
enter
outsb
jne
cwtl
mov
mov
adc
out
cmp
imul
cmp
cmpsb
xor
mov
and
xor
xor
mov
cmp
mov
mov
outsb
imul
jno
jb
pop
pop
sarl
repnz
lcall
push
xchg
out
and
sub
out
inc
sarl
lods
jae
enter
push
cmpsb
cmpsl
cltd
mov
jmp
sbb
pop
pop
mov
clc
ror
push
or
movl
sub
jb
into
scas
gs
ljmp
pusha
and
mov
enter
push
pcmpeqd
sbb
loop
call
dec
out
mov
fwait
incb
xchg
outsb
mov
test
test
xor
lock
mov
pop
into
dec
push
stos
sub
mov
mov
mov
jns
imul
cwtl
inc
xchg
arpl
mov
lcall
ror
push
fdivp
call
or
in
cmc
stc
cli
push
aas
xlat
sub
lret
inc
out
in
div
loop
pop
mov
in
jle
cmp
adc
jbe
push
insb
or
pop
xchg
jle
fldl
inc
push
andb
rcll
and
jne
daa
out
pop
ret
out
cli
pop
push
sbb
mov
test
jno
adc
add
pop
push
cmp
xor
dec
mov
loope
add
jle
xlat
in
mov
stos
sbb
mov
adc
mov
add
push
loopne
ss
fs
loope
insl
data16
nop
jo
mov
mov
jle
mov
ss
and
in
jbe
pop
cmp
xchg
mov
sarl
addr16
notb
jl
loope
pop
mov
xchg
sbb
adc
int3
xor
pop
and
mov
test
lea
cs
dec
push
dec
dec
and
cmc
arpl
clc
cmp
xor
cmp
and
cltd
mov
inc
les
or
pop
shll
sbb
xchg
jle
cwtl
pop
push
leave
paddd
clc
hlt
shrl
or
fwait
and
daa
loop
shl
or
xchg
adc
mov
ja
daa
jg
jmp
mov
insl
sbb
inc
ljmp
in
ja
inc
lods
fstps
and
jmp
outsl
fildl
push
add
rcrb
imul
dec
jo
mov
add
scas
lods
dec
and
pop
loope
cmp
mov
inc
cs
inc
pop
bswap
mov
mov
jnp
xor
lock
in
fcomi
pop
in
cmp
pop
cmp
int
pop
xlat
push
fdivrl
pop
sbb
xchg
jno
sub
xor
shlb
in
xchg
idivb
out
mov
data16
aam
push
cmp
pushf
test
push
inc
mov
add
std
ljmp
mov
stos
mov
fs
sub
jb
into
pop
mov
mov
js
pop
jno
and
test
aaa
add
sbb
xor
out
popa
test
inc
jns
mov
and
adc
pop
pop
getsec
pop
jnp
xor
push
lea
repz
mov
xchg
push
ret
nop
push
sbb
dec
cwtl
mov
fiaddl
lahf
rcr
faddl
nop
shlb
shrb
enter
sbb
push
inc
dec
xchg
push
fidivrs
test
scas
push
sbb
leave
nop
mov
adc
jl
fs
jae
xor
pop
cmpsl
scas
add
pop
pop
rclb
daa
daa
imul
xor
stos
adc
pop
lret
arpl
inc
jnp
mov
outsb
notb
sub
add
scas
pop
adc
jmp
jo
xchg
add
jne
insb
nop
mov
jecxz
xor
test
icebp
mov
sbb
xor
add
rcr
into
add
mov
les
push
jne
and
cmp
inc
nop
ret
mov
test
in
push
mov
outsb
mov
push
push
xchg
fucomp
imul
mov
pop
pop
adc
and
inc
sbb
pop
addr16
in
stos
jnp
outsb
lods
ret
pop
in
mov
out
jecxz
movsb
enter
and
dec
xchg
fistps
dec
mov
cs
aaa
pop
sbb
cmp
and
pop
fidivrl
scas
mov
test
add
js
cmp
cmp
out
or
mov
add
testb
aas
scas
mov
sub
in
ret
pop
push
or
pop
iret
shlb
xorl
out
insl
lods
sub
mov
cmp
jo
shrl
mov
inc
sbb
jne
lods
add
test
add
xchg
insb
les
in
and
pop
mov
inc
inc
bound
mov
mov
lock
into
adc
daa
jp
jns
sbb
lock
and
stos
mov
fcompl
hlt
movsb
cli
nop
inc
das
pop
lret
and
lret
push
inc
sbb
loop
xor
push
or
adc
in
shll
add
scas
in
scas
mov
adc
sub
lods
and
jnp
cmp
ret
mov
dec
test
add
lret
jb
mov
mov
pop
pusha
daa
inc
xchg
jg
mov
sarl
dec
enter
add
lahf
das
repnz
sti
xor
push
cmp
mov
lods
mov
repnz
push
dec
jns
cmp
dec
orb
xchg
cltd
rclb
sarb
je
mov
lock
test
and
js
fcmove
ret
jg
dec
jns
pop
cs
ret
xchg
cmp
es
push
mov
pushf
prefetch
jecxz
cmpsl
cmp
inc
je
daa
pop
mov
fmull
mov
jl
test
pop
icebp
in
cmp
xor
into
pop
mov
push
dec
mov
adc
imulb
adc
jle
out
sbb
sub
push
mov
push
cmc
pop
cmp
js
movsl
lods
push
push
adc
xor
cli
dec
imul
mov
xor
fcompl
in
popf
add
ret
or
ja
std
fidivl
jns
jb
mov
out
xchg
pop
sub
xchg
stos
mov
mov
pushf
push
pop
js
xchg
inc
sub
movsb
cmp
hlt
mov
icebp
les
push
inc
xchg
mov
pop
test
cltd
movsl
dec
cmp
nop
out
pop
das
cs
mov
mov
push
popa
add
repz
add
dec
xor
pop
sahf
dec
movsb
dec
cmp
hlt
sub
dec
or
stos
add
ja
insl
repnz
xor
lret
push
add
pop
add
sub
jl
cwtl
stos
pop
call
aad
shrl
fwait
leave
jl
shrl
xchg
stc
lods
xchg
and
int
mov
sarb
fstl
jnp
shll
xchg
outsb
push
jne
jl
xor
leave
testl
push
fwait
push
lahf
aaa
xchg
aas
dec
mov
je
in
aaa
mov
imul
cmp
cwtl
sub
sub
xor
cmp
loop
cmp
xor
cs
pop
cmp
pop
loopne
pop
aaa
test
test
je
iret
add
jno
out
loopne
nop
cmpb
or
xchg
iret
jno
dec
js
push
out
mov
outsl
and
aad
repnz
mov
and
gs
mov
shl
inc
xchg
xor
sub
adc
sub
mov
add
xor
push
loop
aaa
in
cli
jno
mov
or
pop
cld
pop
xchg
das
inc
mov
std
aaa
jge
xchg
sub
jnp
adc
orb
add
ficoms
cmp
sub
mov
cltd
or
hlt
pop
loopne
jecxz
and
dec
inc
inc
pop
sub
and
pop
push
push
jg
cmp
xchg
mov
iret
push
adc
and
mov
pushf
and
ss
pop
rcrb
in
inc
cmpsb
call
jne
jecxz
or
cli
push
xchg
js
cmp
xchg
in
test
iret
cmp
loope
fadds
and
pushf
cld
repz
xchg
shrl
or
jb
int
cmp
jo
cmp
push
pop
sub
cmp
es
clc
mov
fldl
pop
xchg
stc
cwtl
aas
clc
pop
cmpsl
and
lods
mov
jmp
sbbb
cli
fnstenv
push
std
dec
cmp
cmc
xchg
shlb
add
cmp
pop
and
ss
mov
jbe
pop
inc
jb
mov
cs
push
dec
sarb
movsl
std
mov
or
data16
cmp
jge
sbb
orl
sbb
aaa
jmp
rorb
call
mov
notb
daa
inc
xchg
dec
les
aam
dec
fs
mov
lret
fcomps
xchg
xchg
xor
jmp
adc
ret
rorl
sub
push
pop
addl
dec
adc
and
sbbl
adc
jl
push
xchg
add
stc
repz
mov
cwtl
mov
adc
call
xor
je
ret
jne
lods
dec
fildl
add
incl
mov
jg
inc
xchg
test
addl
sub
cld
sbb
pop
mov
pop
and
cmp
nop
enter
loopne
and
je
vprotb
add
mov
push
push
lods
push
sub
rcll
lret
push
sbb
dec
mov
mov
adc
jbe
xchg
xchg
xchg
fistpll
pop
xchg
xchg
int
push
xchg
cs
sub
call
pop
cmp
push
jg
xchg
dec
out
lods
adcl
add
add
loopne
je
int3
cmpsb
dec
inc
push
add
and
hlt
add
addr16
xchg
mov
stos
rorl
cmc
mov
sbb
mov
add
repz
jmp
ds
pop
jl
inc
lcall
inc
inc
pop
push
dec
push
lcall
ds
add
push
cld
cmp
push
aad
xchg
int3
notb
lret
xchg
idivl
push
in
and
dec
lret
mov
cld
cmpsl
std
push
sub
or
iret
pop
fwait
pop
das
scas
loop
in
outsb
inc
pop
pusha
sub
jbe
mov
and
mov
scas
loopne
insl
aad
dec
xor
out
cli
dec
jmp
adc
jp
jnp
fcoms
sub
mov
imulb
add
hlt
add
push
pop
ss
add
sbb
pop
lea
pushf
xchg
fcmovnb
push
pop
inc
xchg
daa
jo
mov
testb
jge
or
cmpsl
jno
fidivrl
or
push
shrl
mulb
aaa
test
sub
add
fdivl
lods
addl
mov
std
and
jb
sti
and
fildll
je
cs
mov
imul
xchg
in
test
sbb
in
mov
and
testb
movsb
cs
in
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
lcall
addl
es
jnp
lea
repnz
add
push
xor
sbb
or
popa
pop
sbb
pop
xor
add
xlat
or
subl
cmpsl
push
and
or
je
in
sarb
jns
andb
out
mov
xchg
sbb
and
pop
jmp
int
cltd
das
and
pop
out
call
int
nop
gs
dec
rcrb
inc
ljmp
mov
cmc
std
dec
jge
cmp
push
je
dec
xchg
cld
test
sub
and
adc
hlt
fcomi
mov
push
mov
dec
adc
fcmovnb
inc
add
gs
negl
sub
sbb
movsl
push
mov
negl
inc
mov
lret
sti
ret
mov
stos
push
negl
out
ret
and
cmp
repz
ficompl
loopne
push
push
rol
jle
mov
stos
push
mov
in
push
sbb
mov
mov
cltd
mov
pop
das
inc
jp
push
mov
xlat
add
test
stos
insl
sbb
rcrb
mov
dec
out
mov
cltd
stc
cmp
push
fsub
mov
in
jge,pn
sahf
push
dec
daa
out
mov
lds
icebp
in
add
es
bound
into
sub
sbb
xor
sbb
mov
in
xchg
jo
loopne
cmp
cmp
enter
mov
adc
test
faddl
icebp
scas
repz
mov
repnz
lret
pop
sub
mov
repz
stc
push
or
and
pusha
std
adc
lret
and
insl
stc
test
nop
shll
cmc
rcrl
jno
inc
insb
xchg
xchg
sub
and
int3
xor
push
cli
std
cli
nop
xchg
jle
pop
adc
sbb
pop
mov
xor
push
daa
dec
mov
xlat
std
mov
jp
sbb
sbb
mov
pop
adc
jge
cmp
and
adc
stos
xchg
shll
xor
dec
ret
sub
mov
jg
loop
mov
nop
mov
cwtl
xchg
push
xor
outsb
nop
push
fimuls
sbb
leave
sahf
mov
pushl
repz
adc
iret
mov
call
repz
lret
ret
add
xchg
fwait
or
and
addr16
pusha
mov
xchg
xor
nop
or
mov
addr16
pushf
stos
jmp
cmpps
cmpsl
in
sbb
jne
cld
mov
fisttps
ss
shlb
xor
mov
inc
sahf
bnd
fnstsw
mov
jmp
loope
std
iret
adcb
or
or
test
cltd
adc
std
aam
xor
imul
mov
sbb
pop
addr16
add
mov
js
sbb
out
ror
enter
js
mov
jecxz
movsl
mov
pop
mov
loopne
popa
adc
and
xor
add
add
in
iret
sbb
push
xchg
iret
and
std
enter
cmp
pusha
adc
sbb
je
jle
lahf
adc
inc
push
lods
mov
mov
and
jno
pop
jns
push
xchg
call
mov
or
jmp
sbb
outsb
loope
int
adc
mov
shll
jno
mov
cltd
add
xchg
in
shl
adc
mov
xlat
hlt
pop
std
pop
ss
inc
cs
popa
mov
adc
test
ds
cli
pop
dec
loopne
pop
popf
addr16
in
add
fisubl
or
testl
lahf
inc
push
fldt
gs
sbb
outsb
add
fnstcw
inc
arpl
js
mov
popf
push
fnstenv
jge
insl
pop
pusha
jmp
fstpt
mov
mov
dec
xchg
loop
leave
adc
int
mov
inc
popa
fxch
cmc
sbb
and
pop
loope
adc
insb
dec
pop
mov
sarl
pusha
mov
inc
sub
pop
imul
mov
mov
sub
lock
mov
lea
adc
add
mov
jl
imul
xchg
xor
xor
imul
movsb
mov
mov
cmp
pop
inc
orb
push
push
negb
pop
sub
ret
hlt
add
imul
cmpsb
xor
fcmovu
pop
std
push
pop
mov
jo
jb
or
sti
int3
int3
jg
cltd
mov
or
je
lret
pop
adc
aad
mov
jl
adc
std
inc
stos
gs
pop
lret
idiv
pop
pushf
dec
xchg
enter
add
dec
cmp
mov
push
inc
out
dec
sbb
gs
add
imul
mov
add
out
xchg
mulb
cwtl
pop
add
sbb
js
es
ljmp
cs
dec
jle
dec
or
add
clc
mov
add
mov
jl
cmc
cmpsb
xchg
cmp
leave
xor
dec
mov
lahf
cmp
or
pop
rcrl
mov
sahf
daa
inc
aaa
jb
cltd
and
push
xchg
rolb
scas
sbb
sti
insl
dec
dec
push
jo
mov
mov
std
stos
sub
mov
aaa
movsl
push
insb
int3
or
and
dec
xor
sbb
out
or
lods
test
je
loopne
mov
adcl
or
xchg
push
mov
out
add
inc
sbb
pop
pop
fsubrs
adc
test
gs
xchg
out
sub
dec
outsl
jmp
out
sub
pop
sti
dec
pop
cmp
mov
jp
test
je
inc
cmp
loop
pop
sbb
test
dec
addr16
sub
das
sub
xchg
and
fcoml
push
stos
fbld
popa
inc
lret
mov
ja
mov
dec
lahf
stc
push
mov
clc
or
pop
inc
shl
xchg
push
mov
je
adc
sar
cmc
sbb
popf
mov
xchg
sbb
mov
add
shrl
pushl
mov
lret
mov
insb
pop
mov
lcall
add
clc
dec
dec
and
ja
sbb
xor
or
cmp
pop
lret
xchg
cli
outsb
sub
in
data16
jns
sbb
cmp
mov
sbb
stos
sub
loop,pt
shll
stos
pusha
aam
inc
lods
cmpsl
popf
push
cmpsl
stc
or
popa
pop
andb
outsl
mov
repnz
jmp
scas
inc
test
mov
call
repz
pop
mov
pusha
mov
adc
and
loop
cli
in
push
in
jmp
pop
popf
ljmp
mov
loopne
inc
stos
and
or
inc
xchg
fwait
cmp
inc
lods
sarl
or
push
aas
or
scas
push
or
movsb
sub
sbb
mov
fbld
inc
dec
jp
retw
push
xor
or
push
adc
fisttpl
sbb
dec
test
push
loopne
mov
or
jge
popf
push
push
dec
fwait
cmp
popl
aas
pop
lcall
adc
out
mov
xlat
call
shlb
mov
into
popa
jb
sub
cld
enter
add
dec
iret
andb
pop
or
jne
int3
jns
xchg
outsl
andl
shrl
jl
jno
mov
cld
jmp
mov
dec
jae
bound
xor
sbb
fldl
psubw
sbbl
push
pop
inc
sub
push
rclb
fmuls
inc
lahf
ret
xor
mov
mov
sub
xor
ss
bound
dec
decl
in
xor
es
bound
and
sub
and
mov
xor
xchg
fdiv
push
lahf
movsb
cmpl
cmpsb
outsb
gs
sub
mov
rcr
jp
push
xorl
jmp
addr16
or
cmp
jp
dec
xor
cli
movl
xchg
scas
mov
popa
mov
push
outsl
cmp
pop
cmp
mov
stos
or
jl
in
mov
int
push
xor
xchg
test
push
sbb
je
outsb
push
outsl
cltd
xchg
add
cld
xchg
gs
push
insl
pop
in
or
sti
pop
andl
test
bnd
cwtl
pop
imul
movsl
lea
call
stos
ljmp
pop
xor
mov
adc
inc
xchg
xor
lods
adc
test
enter
inc
loopne
push
xor
mov
lahf
or
pushf
es
roll
movsb
cmpsb
mov
xchg
push
jbe
push
call
inc
call
lea
push
lea
or
fnsave
stos
clc
push
test
notb
jmp
stos
add
cmpsb
mov
adc
xchg
inc
pop
dec
xchg
mov
xchg
ljmp
mov
ja
ret
and
mov
or
inc
mov
xchg
lea
sub
sbb
xor
jg
fwait
into
cmp
leave
mov
mov
int3
lret
shlb
lret
dec
std
enter
rcl
xchg
inc
add
cmp
mov
jp
ja
lods
mov
pop
sbb
icebp
les
mov
push
dec
jnp
mov
test
pop
jg
out
pop
mov
stc
sub
pop
das
sub
fistpl
mov
and
jle
sahf
enter
adc
leave
jmp
xor
mov
repz
or
dec
push
lods
jno
adc
std
adc
dec
adc
icebp
filds
xor
test
sbb
fstpl
cmp
inc
push
sbb
push
mov
sub
push
sub
adc
ss
scas
cmp
pusha
inc
sahf
repnz
mov
xchg
cli
pop
stc
lahf
dec
sti
mov
insb
push
pop
dec
sbb
fucomp
cmp
jge
testl
fs
arpl
jb
lret
insb
shrl
test
push
xchg
bound
pop
cmp
and
test
xchg
and
cmpsb
sub
mov
or
ja
add
fdivrs
sbb
inc
into
push
outsl
xchg
push
jbe
sbb
pusha
scas
lcall
and
enter
in
mov
jmp
scas
jl
lret
or
repz
das
aad
inc
or
pop
out
xor
xchg
sbb
add
mov
jnp
out
movsl
mov
cs
test
pop
out
add
jle
dec
or
outsl
lret
fs
xorb
mov
bound
add
jmp
jp
hlt
int
mov
repz
fdivrs
daa
add
stos
mov
mov
xchg
xor
and
pop
sub
and
pop
lret
push
and
leave
xor
adc
sbb
stc
push
jmp
adc
cmp
in
push
iret
add
jo
je
pop
and
inc
push
movsb
je
ror
mov
cmp
jl
pop
add
sahf
fldenv
sub
mov
jns
ret
scas
inc
xchg
pop
xor
mov
sub
inc
jae
and
pop
fs
cmp
stc
xor
push
inc
add
add
xchg
scas
int3
dec
nop
cmp
dec
fdivrp
loopne
push
es
cwtl
or
incl
ret
lock
jecxz
std
data16
ljmp
pushf
pop
inc
lret
inc
sbb
add
jns
lea
jl
lods
jns
imul
jne
and
mov
mov
xchg
jmp
push
and
dec
movsb
pop
fistpll
pop
cmp
lret
jge
pop
scas
pop
les
lret
roll
es
fists
lea
pop
pushf
mov
into
sbb
mov
sub
stos
shrb
inc
scas
bound
jae
sbb
loopne
jge
outsb
xchg
and
cmp
imul
and
cmp
loop
lcall
sbb
fsubr
std
sbb
sub
les
jo
adc
push
insl
movsl
mov
fcmovb
enter
in
sub
add
mov
sub
test
sti
js
and
or
sbb
mov
int
movsb
inc
div
push
daa
sub
mov
push
mov
es
pop
mov
pop
out
add
outsb
jno
inc
add
loope
stos
mov
cld
mov
mov
movsl
sub
xchg
and
pusha
jno
test
std
in
test
imul
repnz
xor
inc
add
add
sub
add
jge
sub
mov
mov
push
mov
fnstenv
in
jecxz
stos
jp
xor
sahf
inc
aad
std
mov
adc
jge
xor
mov
pop
mov
xchg
int3
lret
xor
or
lods
lock
outsb
andb
pop
add
xchg
in
das
popa
ljmp
in
in
out
mov
mov
xchg
out
rcrl
ljmp
ljmp
out
and
and
in
imulb
jb
push
add
push
adc
xor
adc
xlat
or
mov
jo
lods
pusha
sub
pop
ds
inc
and
pushf
lret
jnp
scas
mov
int
fsubrl
pusha
stc
ret
lret
daa
push
jb
ficompl
adc
xor
sar
mov
fwait
xchg
sbb
inc
ds
mov
imulb
sub
inc
pop
dec
int
mov
cld
fwait
ret
cli
jge
out
sub
mov
and
push
in
mov
nop
lcall
mov
ja
add
test
mov
insl
sub
popa
or
xchg
push
cmpsl
decl
outsb
sarl
jnp
adc
jb
mov
xor
lds
pushf
pop
mov
pop
dec
mov
int
enter
js
mov
adc
mov
mov
pop
xor
xor
or
jp
or
js
cmp
mov
add
jns
jne
inc
inc
ds
into
loop
cmp
mov
inc
or
out
sti
and
aaa
adc
lret
jp
mov
or
mov
add
rol
push
push
sbb
inc
hlt
sbb
mov
jg
xchg
mov
mul
xchg
push
ljmp
mov
push
aam
repz
jne
adc
test
lods
aad
pushf
les
push
mov
les
sahf
inc
pop
aaa
cs
aam
dec
sbb
popa
cmpsl
pop
pop
inc
sub
out
dec
mov
jg
ficoml
mov
inc
mul
rolb
mov
and
adc
insl
pop
out
out
mov
xchg
aas
xor
sbb
in
shll
mov
xchg
push
and
testb
add
or
dec
lcall
cwtl
mov
sbb
adc
dec
mov
lahf
sub
repz
aam
ds
imul
mov
mov
idivl
xchg
dec
mov
xor
jnp
ret
into
inc
add
or
or
sti
xchg
ror
adc
popa
sbb
dec
jg
insl
ret
push
dec
loope
ss
jmp
cmp
int3
dec
loop
lock
lock
ret
rcll
push
ja
in
shll
xor
in
mov
aas
jmp
scas
test
inc
mov
sub
or
js
rclb
adc
mov
mov
cmp
testl
sti
xchg
cld
outsb
es
int
mov
jmp
pusha
rolb
das
sub
jl
sbb
mov
iret
lea
enter
imul
cmp
std
sbb
pop
cmpl
int
xor
mov
add
dec
dec
xor
mov
sbb
pushl
mov
dec
sub
and
mov
test
ss
outsb
push
jl
rorl
mov
push
insl
or
call
inc
imull
pop
pop
mov
adcl
xorb
pop
pop
cmp
jbe
hlt
in
std
stos
xchg
adcl
sub
push
shll
mov
adc
cmp
aaa
sbb
mov
sbb
ss
sbb
xor
fmul
xchg
jmp
cltd
jecxz
xor
aam
inc
add
mov
popa
xor
insl
pushf
pop
add
imul
xchg
out
clc
pop
lods
or
or
lcall
xor
fistpll
hlt
test
xchg
push
xor
inc
mov
scas
repnz
mov
out
inc
xorl
xor
adc
pushf
push
packsswb
xor
inc
test
and
adc
movsb
or
sbb
jmp
push
fiadds
cmp
jle
pop
ret
and
add
enter
mov
cmp
pusha
jae
es
aad
scas
adc
aad
shrl
mov
dec
jmp
xor
or
xlat
mov
pop
xchg
cmp
xchg
xor
movb
sub
sub
popf
adc
imul
xchg
arpl
xchg
inc
jmp
insb
cmp
push
out
xor
jo
cli
or
jg
xchg
cmp
mov
push
inc
cmp
scas
pop
jp
sbb
insb
and
mov
sbb
mov
outsb
push
sahf
mov
sti
imul
stos
mov
adcl
xorl
inc
lcall
push
stos
dec
dec
and
into
jmp
nop
sub
pop
and
or
lods
lods
mov
mov
adc
xlat
push
loop
push
and
ds
fwait
jmp
push
das
mov
hlt
cmp
sub
or
push
push
sti
push
lock
pop
and
pop
mov
adc
fcmovnb
mov
jle
xor
dec
push
dec
adc
add
jg
out
adc
out
stos
cmp
xchg
insl
xchg
bound
into
push
addr16
stos
jle
lea
fdivrl
je
fnstenv
inc
fbstp
movsb
push
inc
jno
and
push
xor
push
sbb
aas
dec
movsb
pop
push
lret
push
ret
dec
mov
inc
sbb
jmp
ret
pop
addr16
jmp
xchg
cmc
iret
inc
xor
and
xor
mov
xchg
and
outsb
aad
data16
xchg
or
adc
xchg
dec
imul
dec
es
dec
ret
and
cmp
inc
mov
aas
push
xchg
out
out
jns
into
adc
call
fldl2e
or
push
mov
mov
lahf
and
ror
iret
cmp
pop
les
adc
fbstp
pop
gs
ret
js
mov
and
push
adcl
adc
sub
pop
dec
jp
loope
dec
mov
ja
adc
bound
ficoms
out
lret
loopne
lahf
sub
cmp
sub
dec
sar
push
jne
cld
inc
iret
std
pop
jbe
xchg
repz
inc
andl
jmp
faddl
loopne
pop
arpl
dec
mov
push
shrb
lahf
shl
inc
add
data16
imul
mov
mov
divl
mov
push
in
jmp
push
pop
and
dec
pop
and
mov
cli
movsb
fistpl
xor
pop
test
sub
adc
gs
mov
shlb
inc
lahf
xor
or
adc
jmp
inc
xchg
mov
xlat
jmp
xor
sbbl
int3
xchg
or
push
cmpsb
out
std
testb
xchg
fmul
cmp
jmp
stos
jmp
aad
xor
in
rcrl
ficoms
dec
imul
xor
mull
testb
push
idivb
rorl
dec
rcrl
pop
enter
movsb
mov
xchg
push
out
pusha
jmp
lock
cmp
jg
push
inc
xor
es
lds
in
jb
gs
neg
and
loopne
mov
push
into
jne
mov
imul
lret
jbe
and
mov
and
xor
dec
hlt
push
add
enter
lods
pop
test
ljmp
pop
inc
push
sub
push
sub
mov
out
mov
lret
xor
cmp
jecxz
lret
repz
fsubs
and
sahf
imul
leave
mov
jnp
shll
xchg
sub
scas
sbb
mov
mov
test
cli
call
jo
cmovno
cmc
subl
add
out
xlat
gs
hlt
pop
xchg
test
enter
out
cltd
mov
push
xor
mov
ret
cmp
and
cmp
lcall
fdivrl
in
push
xor
push
jge
scas
pop
jb
or
sub
ret
mov
mov
push
mov
repz
std
lahf
nop
loopne
inc
js
adc
jge
pop
shl
adcb
xor
inc
loopne
pop
mov
aam
mov
inc
jnp
adcl
nop
push
mov
in
adc
stos
sbb
add
arpl
hlt
inc
fwait
ds
xchg
iret
rorl
cwtl
mov
clc
popa
mov
mov
mov
insb
mov
jnp
ret
inc
fiaddl
repnz
cltd
mov
gs
ret
cmp
pop
out
loope
cmp
dec
inc
ret
data16
mov
jo
rol
rcrl
xor
add
cmp
mov
stos
jge
xor
fldcw
pop
mov
xchg
call
test
es
xchg
stos
inc
dec
jg
insl
sbb
cmp
divl
jecxz
mov
movsl
sarl
mov
aaa
jg
es
xchg
mov
jb
mov
outsl
xchg
pop
fistl
dec
popf
loope
push
loope
lea
mov
inc
push
imul
fdivrl
sbb
and
mov
or
fnstcw
mov
or
dec
ds
mov
push
repnz
add
arpl
pop
inc
popf
jno
hlt
outsl
mov
in
push
and
dec
rol
mov
or
stos
std
scas
les
jbe
inc
push
sbb
mov
ljmp
rcll
fwait
cs
out
subb
lods
out
jne
push
sub
icebp
push
ffreep
mov
pushf
fldl
xchg
cmp
mov
xchg
pop
in
cmp
sarb
imul
jno
stc
sbb
jbe
cltd
sub
dec
xchg
das
bound
inc
fistpl
pop
jge
sbb
fldt
mov
jbe
xchg
rcl
pop
mov
dec
mov
inc
sahf
repz
inc
inc
jp
inc
sbb
xlat
lds
das
int3
mov
jbe
mov
mov
js
dec
sbb
out
imul
cmpsb
push
stos
shlb
push
mov
jnp
inc
outsb
cli
adc
jl
out
and
xor
and
xor
mov
std
push
mov
pop
pop
ret
insb
cltd
jmp
sub
sahf
mov
lea
mov
fiaddl
or
sbb
jne
pop
adc
repz
std
dec
faddl
imul
mov
lcall
cld
mov
mov
repnz
pop
adc
add
xchg
xchg
iret
add
aam
push
pop
daa
test
out
mov
cmp
cmp
outsb
enter
dec
call
adc
mov
lods
and
sub
rol
popa
rorl
iret
and
jno
testl
mov
pop
cmp
mov
jae
mov
repnz
xchg
test
mov
fnstsw
lods
test
aaa
mov
jnp
lods
lods
mov
mov
in
or
push
and
mov
xlat
mov
push
jge
mov
mov
dec
lods
cmp
jns
xchg
add
pop
outsl
add
clc
divb
icebp
scas
jno
addl
lea
push
jb
fs
push
xor
lock
jg
and
ljmp
aam
je
lds
enter
cmpsb
adc
cwtl
iret
pushf
mov
mov
push
xor
mov
lds
jecxz
jo
jg
push
dec
pop
add
adc
push
cmp
cmp
seta
dec
mov
sub
mov
inc
jmp
cmp
fsts
in
lret
cmp
scas
test
mov
inc
adc
lds
ss
or
inc
movsl
inc
pop
pop
jecxz
das
cmp
imul
out
mov
shl
cwtl
xchg
shufps
shlb
pop
mov
pop
imul
xchg
push
shlb
cmc
std
jp
call
and
sbb
in
xorb
xchg
push
repnz
and
pop
lcall
xchg
outsl
sub
repnz
or
adc
lahf
add
arpl
push
cmc
mov
mov
js
xchg
stos
test
sbb
cmpl
imul
ljmp
das
xchg
cld
sbb
add
sti
xor
js
orb
popf
cltd
dec
add
jg
pop
loop
aas
xchg
ja
dec
mov
incb
fldl
hlt
je
mov
and
sub
stos
inc
sti
inc
lret
and
insl
mov
orb
icebp
mov
das
dec
sbb
jno
mov
dec
push
and
js
inc
leave
adc
fcomps
pop
adcb
and
pop
sub
adc
inc
inc
pop
mov
push
adc
xchg
cmp
push
popf
pop
ret
je
addr16
nop
adc
mov
cwtl
lods
or
xor
aaa
and
scas
mov
sub
lcall
pop
push
push
inc
cli
in
std
add
pop
sbb
cmp
adc
jne
dec
sub
sahf
shll
xor
daa
mov
push
pop
daa
movsl
test
push
dec
sti
cmp
push
sub
pop
or
movsl
ss
bound
cli
xchg
out
out
cltd
iret
cld
or
sbb
jno
test
xchg
push
negb
shll
outsb
lea
or
xchg
sub
pop
dec
mov
fwait
jno
cmpsb
push
repz
jo
mov
in
jmp
jb
mov
in
sbb
aad
push
imul
mov
aam
sbb
sub
xchg
pop
rcrb
jbe
push
sub
mov
sbb
aam
faddl
loope
push
dec
adc
insb
lret
dec
pop
int
mov
in
imul
out
and
aas
lea
fwait
add
or
mov
pushf
fisubs
mov
loopne
mov
sarl
enter
leave
mov
mov
sbb
in
pop
icebp
xchg
inc
daa
sub
jnp
jle
or
pop
mov
jae
stos
pop
xchg
mov
pop
incb
rol
in
push
pop
fisubs
cmc
ds
pop
test
mulb
outsb
sbb
jmp
or
js
out
cli
inc
xor
sbb
movsb
cli
mov
dec
push
fucomp
sbb
insb
inc
jae
push
cmp
mov
int
fcomps
loopne
inc
ss
out
gs
test
cwtl
and
sbb
sbb
or
repnz
push
and
xor
int3
or
mov
pop
mov
fstpl
imul
enter
call
add
adc
mov
pop
pop
dec
or
pushf
lods
clc
shrl
or
cmp
mov
fdivs
inc
cmp
in
xchg
cmp
push
lret
movsl
add
dec
cld
xor
push
fs
and
lahf
not
mov
mov
pushf
pop
mov
ret
push
xor
lret
lock
ret
rclb
aad
cmc
push
cwtl
push
not
idivb
nop
loope
dec
cltd
sbb
push
jle
out
and
mov
ficompl
and
mov
pop
mov
stos
cwtl
push
test
int3
sbb
mov
xchg
fdivs
sub
orb
mov
cmp
dec
jmp
in
jno
das
stos
out
inc
rcll
xchg
loopne
bound
ror
sahf
xor
adc
repnz
cmpsb
pop
sub
mov
jno
mov
mov
arpl
dec
enter
cmp
mov
clc
jo
es
pop
xor
es
dec
sub
sub
fadd
aad
sub
popf
sbb
add
ret
and
cld
xchg
mov
fldcw
ljmp
mov
lods
adc
push
add
adc
sbb
ficompl
add
pop
sub
sbb
scas
push
cwtl
in
fisubl
mov
rorl
es
mov
jle
sub
or
faddl
or
cmc
dec
sub
mov
jae
add
lahf
fsubl
popa
or
ds
or
lret
lods
and
push
sub
mov
fisubs
cmp
test
sbb
lea
mov
movb
loope
xor
aam
mov
dec
xchg
mov
rcl
fsubl
mov
add
sub
mov
xchg
inc
int
movsl
xchg
jl
xchg
dec
push
iret
jg
cwtl
mov
sub
iret
out
lods
push
mov
jnp
test
cltd
cs
ljmp
push
dec
test
mov
cwtl
ret
call
push
and
dec
xor
mov
jge
pop
jmp
lods
sbb
pop
cli
leave
out
or
cs
mov
mov
cmpsl
add
mov
cmp
pop
mov
cs
insl
lds
pop
movsl
sbb
outsb
js
cmp
sub
out
push
inc
mov
adc
dec
or
lahf
sbb
or
pushf
xchg
inc
in
push
mov
xor
pop
lahf
jle
xlat
aas
shll
jecxz
xor
lock
lds
fisubl
push
jmp
sub
and
and
xchg
clc
out
lock
fildll
sahf
nop
shrl
jae
test
mov
lods
xor
iret
push
movsl
lcall
mov
pop
sti
and
xchg
les
cmc
sub
sub
loop
mov
test
and
fisttpll
mov
fwait
scas
mov
inc
arpl
dec
push
test
and
lahf
xchg
imul
repz
mov
jp
or
adc
mov
inc
rcll
out
mov
inc
push
stos
add
out
lcall
insb
xchg
mov
icebp
out
dec
adc
data16
enter
mov
and
mov
scas
xor
and
dec
loopne
mov
add
out
das
in
test
imul
jnp
pop
cltd
lahf
adc
stos
lret
dec
jno
loop
iret
bound
push
push
add
xchg
inc
sti
lds
pushf
adc
hlt
and
icebp
fbld
dec
jl
jle
js
jg
inc
mov
jg
mov
arpl
push
dec
dec
aam
lret
xchg
in
sbb
and
xchg
decb
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
cltd
outsb
fldcw
addl
mov
loope
iret
cmp
fs
enter
out
je
lcall
les
insb
cmp
sar
aad
sub
cmp
dec
push
sub
xchg
push
push
and
iret
sbb
inc
sti
cmp
leave
cwtl
jae
pop
pop
outsb
mov
popa
imul
lea
out
xchg
imul
xor
or
push
in
ds
das
jg
and
push
sahf
int
popf
lods
lds
call
adc
addr16
xlat
lret
mov
gs
outsb
push
aas
add
fwait
cmp
sbb
aaa
sbb
inc
mov
sub
or
repz
pop
lahf
cmp
add
subl
in
popa
mov
stos
rcr
and
xor
mov
fstpl
lods
sbb
mov
fwait
cmpsl
movsb
and
movsl
dec
push
stos
and
jo
or
jbe
ret
test
pop
rolb
mov
cltd
cmp
movb
xchg
add
mov
je
cmp
lods
out
or
roll
shr
mov
mull
xchg
jno
dec
shl
adc
mov
add
cld
popf
adc
subb
fisubrs
cmp
lods
lret
mov
shrb
fisubrl
and
fstps
sub
sub
mov
or
test
jl
cmp
in
sbb
mov
nop
imul
mov
or
fld
mov
pop
or
jle
gs
inc
bound
out
xlat
push
aad
ljmp
mov
jle
mov
mulb
sub
ret
hlt
push
xchg
push
pop
insl
rclb
push
pop
or
xchg
adc
repnz
pop
or
sbb
mov
xchg
in
push
and
scas
lcall
mov
in
adc
inc
cmpsb
jb
lods
mov
inc
enter
ljmp
mov
cwtl
pop
lahf
insb
sub
ret
cmp
out
popa
outsl
ss
mulb
or
enter
loop
pop
mov
movsb
push
mov
cmp
mov
add
aad
testb
out
jne
jbe
clc
jecxz
dec
loopne
sbb
jo
add
stc
scas
mov
movsb
cs
push
adc
pop
xchg
in
and
cmp
insl
and
pop
or
push
jmp
xor
mov
pop
mov
dec
dec
insl
adc
dec
inc
mov
out
inc
divb
sbb
mov
jmp
mov
cmp
aaa
xor
dec
xchg
aaa
pop
je
sub
and
jnp
or
mov
mov
cltd
loope
sbb
mov
cs
leave
xchg
push
sub
or
pop
pop
xor
loope
inc
cmp
stos
ror
mov
dec
sub
lret
jmp
nop
sti
jbe
jmp
outsb
popf
push
lcall
xchg
push
fcmovb
das
mov
cld
sbb
movsl
cmpsb
mov
nop
fwait
dec
pop
jl
adc
in
vxorpd
rolb
daa
mov
sbb
mov
js
sub
int
mov
shlb
push
cmp
mov
in
fmul
mov
int
inc
ja
cmpsb
push
popf
dec
push
jge
enter
hlt
mov
xor
xchg
pop
sbb
femms
cmp
gs
and
iret
sub
dec
sbb
pop
mov
cmp
push
fsubs
test
dec
vpmovsqb
cmc
enter
test
fdivl
xchg
cmp
cmc
xor
fsub
sub
adc
xchg
loopne
sub
js
cmp
or
add
xchg
imul
pop
adc
dec
cld
cwtl
in
dec
mov
bound
mov
lea
sub
pop
jbe
add
jmp
sub
jno
mov
cmp
inc
cmpsb
aam
aad
sbb
sub
jmp
inc
pop
lret
inc
mov
mov
cmp
pop
stc
mov
sbb
jnp
outsb
xchg
xchg
dec
jne
and
and
add
sbb
or
int3
sub
clc
push
push
sub
push
mov
int
push
xchg
jbe
mov
das
sti
sbb
int
jnp
cmp
out
xchg
mov
jo
pop
cmp
mov
dec
mov
inc
rcr
test
test
fisubrl
icebp
jb
dec
fwait
mov
in
test
pop
dec
jle
cltd
jne
lea
fidivl
and
pop
aas
and
lret
shll
xor
push
jle
pop
sti
dec
and
fildl
aas
test
push
lods
sub
loopne
and
xchg
jae
mov
push
fdivs
faddl
ret
ds
sahf
mov
test
cmp
inc
loopne
xchg
or
push
lret
cmp
sub
je
pop
mov
pop
aas
sbb
xor
push
call
push
jne
data16
mov
inc
xchg
mov
or
pop
idivb
push
mov
mov
mul
jl
aas
test
push
jo
or
cmc
and
jnp
popa
or
xchg
cwtl
shl
sahf
ret
push
inc
sub
xchg
je
jb
xor
repz
push
adc
mov
lea
fiaddl
mov
lcall
addr16
xor
test
jge
in
mov
mov
mov
and
lret
push
push
adc
push
enter
jge
aaa
pusha
mov
cmc
jnp
sbb
fisubrl
lahf
sbbb
mov
add
sbb
xor
and
adc
fistpll
movntq
data16
arpl
inc
xchg
xchg
sub
push
mov
xor
mov
cmp
sub
lcall
aam
lods
stos
sub
push
lret
pop
adc
jo
call
jg
mov
mov
mov
mov
call
inc
cmp
idivb
jo
sub
sahf
test
cmp
popf
sub
ss
push
test
cwtl
outsb
xlat
mov
cltd
and
ja
push
sub
xor
add
sar
adc
into
jge
mov
adc
arpl
lcall
jmp
add
pop
mov
mov
fnstenv
lahf
add
jmp
mov
stc
jge
pop
push
test
fdivs
push
test
adc
rorb
xor
in
push
dec
xor
mov
cmp
adc
nop
jo
or
sub
inc
mov
ds
adc
outsb
iret
mov
sbb
or
inc
jae
stc
and
lret
jae
shlb
hlt
inc
stos
stos
and
dec
in
je
jnp
sbb
test
mov
jle
ljmp
data16
mov
mov
leave
or
popf
adc
and
mov
lcall
ds
aaa
scas
or
jle
test
popf
cmp
mov
inc
repz
and
imul
sbb
mov
cmc
lock
adc
int3
dec
lock
cmp
jns
movsl
pop
or
mov
ret
cwtl
mov
fninit
aas
jnp
lret
pop
jmp
push
sbb
lcall
dec
jae
dec
neg
mov
arpl
pop
insl
and
jae
lcall
stos
lret
add
adcl
push
mov
cmp
mov
int3
jmp
arpl
jnp
push
ret
lods
pop
cmp
lret
mov
scas
jnp
mov
fsts
cmp
outsl
xchg
pop
xlat
les
ds
or
aam
xchg
ret
cmc
inc
test
cmc
and
sarl
outsb
gs
xlat
push
std
stos
cli
insl
fidivrl
into
cs
xor
jge
mov
sbb
rorl
cmp
dec
inc
cmp
sarb
push
jmp
cmpb
or
xor
leave
dec
imul
xchg
jnp
push
loope
xchg
cmp
xchg
imul
push
adc
and
ds
pshufw
lds
jmp
mov
jp
xor
mov
inc
sub
fistpl
shrb
sub
dec
jl
decl
daa
fwait
in
outsl
jbe
out
mov
pop
inc
mov
adc
adc
push
ss
sbb
clc
jbe
push
dec
sbb
cmpb
pop
into
clc
inc
imul
scas
dec
sub
fimuls
mov
loop
sub
fadd
pushf
test
cmp
mov
andl
push
xorb
in
mov
xor
imul
out
pop
cli
les
dec
test
add
fsubr
mov
cld
mov
adc
dec
imul
rolb
aaa
pusha
push
sbb
add
mov
push
xchg
sub
add
ficomps
add
inc
fwait
or
in
into
mov
mov
mov
adc
adcb
inc
mov
mov
adc
fdivrs
out
push
xor
lret
push
loopne
int3
jl
and
les
cwtl
stos
test
push
pop
jl
add
mov
cwtl
mov
push
stc
hlt
movsl
repz
andb
cmp
dec
mov
push
loopne
cmp
stc
jp
cmp
test
lock
enter
lcall
add
jo
loopne
sub
xchg
repz
cmp
dec
pusha
nop
xor
jbe
loop
mov
inc
mov
jnp
jne
sti
test
sbb
loope
xchg
sub
xlat
cmpxchg
pop
push
lret
clc
or
mul
mov
pop
mov
addr16
pop
repz
jge
orl
aaa
mov
or
clc
push
or
xchg
dec
jge
shll
dec
cltd
pop
xchg
aad
push
andl
jmp
sbb
shrl
cmp
imul
aad
ret
pop
sub
les
mov
out
pushf
mov
lds
mov
jmp
popf
enter
or
out
adc
shr
mov
in
popf
mov
out
jns
sbb
gs
dec
jnp
cmp
mov
mov
mov
mov
adc
and
dec
sub
pop
mov
add
insl
or
sub
test
inc
adc
inc
cwtl
icebp
pop
add
cmpsl
sbb
ja
scas
xchg
insb
mov
pop
notl
jmp
popf
jmp
fmuls
jne
test
je
mov
popa
mov
clc
inc
das
into
inc
nop
stc
adc
test
fsubrp
popa
xchg
mov
lea
adc
sub
mov
dec
jecxz
hlt
fdiv
add
test
push
cmp
mov
daa
scas
out
hlt
cmpsb
jge
rcrl
and
xor
mov
test
inc
mov
cmc
out
dec
sbbb
xchg
call
shll
pop
ror
lds
rcpps
mov
push
cwtl
sbb
imul
lcall
jbe
fnstsw
mov
add
cmpsl
add
cmc
xchg
out
adc
shlb
mov
jecxz
cs
out
inc
mov
and
fsubp
ds
daa
mov
inc
insb
test
pop
in
fcomip
mov
jbe
sbb
insb
inc
inc
rcr
movsl
popa
adc
jge
jmp
xchg
push
jmp
scas
imul
int
in
mov
mov
mov
jecxz
lahf
mov
and
dec
push
imul
loopne
jae
mov
cld
loop
pushf
inc
pop
mov
cmpsl
mov
out
sbb
cmp
xor
dec
jg
aas
and
aas
repz
mov
mov
sbb
mov
jb
test
push
lds
jl
adc
adc
pop
push
adc
dec
pop
lret
je
popf
mov
xchg
mov
pop
insb
jmp
mov
jnp
mov
jecxz
dec
daa
ret
and
lods
jmp
mov
fs
push
repz
push
aad
xchg
add
sbb
mov
mov
cli
aad
stos
hlt
dec
xor
mov
mov
aad
push
mov
dec
out
mov
insl
inc
les
rcrl
sbb
movsl
movb
je
push
jl
repnz
pusha
dec
dec
ja
fsubrl
outsl
add
gs
xchg
inc
rolb
lods
popf
call
ds
xchg
xor
or
mov
pop
jns
fadds
lahf
loop
scas
mov
push
sub
jmp
gs
lahf
loope
sub
adc
add
daa
dec
in
mov
test
jge
loope
jns
mov
int3
cmp
sbb
mov
mov
imul
cltd
cmpsb
insl
pop
lock
loop
cld
ja
popa
sbb
jl
sub
in
clc
sbb
and
xchg
pop
clc
test
ja
outsl
out
mov
jl
outsb
stos
ljmp
inc
mov
sbb
xchg
dec
inc
xlat
repz
loope
decb
push
jne
cmpl
imul
pop
xchg
sbb
jge
add
push
out
push
add
pop
insb
scas
cmp
ljmp
jae
inc
fs
ljmp
rol
rolb
mov
adc
and
fnstcw
aas
pop
inc
rcl
mov
or
mov
hlt
out
pushf
movsb
adc
test
or
lock
mov
pop
pop
rol
ja
pop
dec
fnsave
pop
flds
rcrb
mov
outsb
xor
ljmp
stc
test
pop
popa
enter
daa
sti
out
xchg
pop
fwait
out
sbb
fidivl
scas
xor
cltd
sahf
lds
pop
mov
lret
adc
les
pop
mov
add
lods
jne
outsb
xchg
pop
scas
pop
jne
jno
fstp
in
cmp
mov
inc
fbld
das
pushf
push
lock
xchg
push
sub
out
push
in
mov
je
rolb
dec
xchg
negl
inc
pop
and
out
loop
pop
mov
fdivrl
pop
adc
notb
mov
mov
or
les
and
jne
jge
jge
adc
lcall
out
jnp
test
call
popf
in
insl
push
hlt
push
jo
sbb
add
lds
or
xchg
cs
mov
xor
leave
jo
lds
push
lea
int
dec
popa
add
pop
adc
fistpll
mov
dec
cltd
inc
xchg
aas
out
adc
sub
and
pop
or
ljmp
ret
sub
mov
loope
lcall
jns
or
divl
aam
pop
xchg
sarl
mov
jge
fmul
fcmovbe
les
mov
stos
loope
xchg
dec
xchg
mov
and
add
fsubrl
mov
loope
aas
cmp
sub
data16
sub
sti
test
push
sarb
testb
push
and
repz
sbb
out
cmp
lret
mov
push
test
es
insb
or
add
aam
ret
add
mov
inc
push
push
pop
xchg
push
sub
iret
mov
inc
pop
movsb
popf
jno
das
pop
adc
sbb
dec
sti
jns
cltd
dec
adcb
loope
subl
adc
or
add
rclb
pop
cmpsl
xor
mov
push
mov
and
mov
cmc
sub
scas
call
cs
and
in
dec
sbb
mov
cmp
or
cli
or
ja
cwtl
dec
adc
add
lock
cmp
pop
and
xor
pop
es
les
dec
in
mov
mov
xor
mov
mov
xchg
in
outsb
imul
xor
xor
pop
popa
sbb
jmp
nop
inc
mov
adc
es
movsl
stos
dec
mov
leave
aam
mov
sarl
xchg
cld
pop
and
push
or
enter
pop
outsl
dec
fisttpl
das
push
rcll
pop
leave
aaa
push
arpl
lock
lods
pop
mov
xchg
lods
adc
mov
fsts
mov
hlt
daa
jo
pop
sbb
mov
mov
imul
inc
test
dec
mov
loope
lret
pop
jne
test
js
xor
repz
cmp
dec
and
cmp
dec
js
xchg
fdivs
pushf
jmp
mov
pop
icebp
sbb
fwait
jne
nop
adc
in
cld
loopne
daa
mov
lcall
int3
icebp
add
mov
mov
jnp
and
out
aad
xor
cs
inc
gs
scas
inc
adc
pop
bound
out
fdivr
inc
ret
add
sub
dec
mov
int3
mov
inc
cwtl
lcall
cltd
aaa
mov
dec
iret
call
mov
ljmp
xchg
mov
mov
mov
push
movsl
popf
sbb
jge
into
ficoml
int3
xchg
and
dec
out
movsl
adc
adc
inc
shl
and
adc
dec
mov
daa
fs
xchg
fucomip
notb
adc
and
cmp
jg
mov
pop
cmp
loopne
jnp
jge
fsts
jne
arpl
mov
xor
lock
push
lods
das
push
cli
push
mov
in
or
and
test
and
pop
mov
outsl
push
dec
rcrl
arpl
shll
scas
jle,pn
xor
push
sub
sub
pop
stc
sub
outsl
fwait
out
xor
insl
imul
je
push
push
scas
test
cld
lahf
and
mov
shrb
push
outsb
out
adc
pop
call
dec
xor
in
call
dec
test
dec
push
fiadds
adcb
sahf
cmc
mov
add
push
push
test
test
movsl
fdivs
cli
cli
je
xchg
or
ss
popa
sbb
daa
cltd
repnz
push
daa
stos
fs
cli
les
int
mov
addr16
sbb
in
out
and
inc
ret
jg
push
test
inc
push
call
mov
fldenv
fdiv
and
mov
adc
sbb
cmpsb
mov
mov
dec
in
in
ret
cmpsl
call
mov
daa
jb
mov
mov
testl
jg
hlt
cld
push
es
jns
lahf
in
loop
aam
lret
mov
jmp
adc
push
mov
insb
pop
flds
mov
call
cmp
or
add
movb
pop
cmp
push
pop
cwtl
addb
push
cmp
sub
mov
fisubs
xor
push
out
pop
out
mov
jno
xor
insl
xor
xchg
xchg
out
sub
xor
xchg
aaa
xlat
sbb
push
cli
sbb
cmp
test
xor
sub
dec
loop
int
jne
inc
push
xor
and
mov
fcoms
jl
pop
push
sahf
xchg
jmp
bound
daa
clc
movsl
pop
xor
mov
push
hlt
arpl
sti
movsb
jge
imul
push
icebp
cmp
mov
and
sti
xchg
jecxz
inc
ds
mov
mov
inc
push
push
jecxz
jp
push
add
push
in
pop
mov
inc
mov
lods
arpl
repnz
xor
or
sbb
jecxz
dec
push
or
roll
and
jecxz
int
jl
andb
add
rcrb
and
ret
mov
cmp
call
aam
dec
jae
xchg
pop
push
in
icebp
xchg
mov
filds
push
jns
pop
xchg
push
cltd
daa
lods
iret
inc
mov
insl
outsb
jmp
in
adc
jge
inc
jno
adc
push
out
push
rol
xlat
jl
neg
outsl
es
push
mov
out
or
out
mov
and
dec
or
subb
lcall
outsl
addr16
and
mov
push
adc
dec
in
out
movsl
gs
outsl
repz
lods
xorl
fst
xchg
cmp
movsl
sub
mov
sub
sti
shlb
repnz
inc
aaa
push
push
lock
inc
addr16
sahf
jno
in
fwait
ds
shlb
insb
hlt
mov
or
int3
jb
stc
inc
push
lods
les
lahf
or
sahf
mov
mov
in
in
and
stc
pop
xchg
or
mov
mov
popf
andb
js
or
imul
rol
jge
dec
push
adc
jle
divl
xchg
jmp
mov
das
outsb
dec
lcall
imul
movsb
pop
xlat
sbb
push
push
rol
test
and
ja
popf
pop
aad
addb
add
jl
pop
popa
jl
setle
lret
mov
sub
push
mov
or
mov
adc
dec
adc
mov
inc
push
pop
xchg
push
mov
imul
dec
push
xchg
or
into
fwait
adc
lods
sbb
push
flds
in
inc
cmp
daa
inc
xchg
lcall
loopne
fwait
adc
xor
gs
and
or
push
lods
out
adc
mov
test
arpl
pusha
mov
imul
or
loopne
add
icebp
cmp
out
mov
xchg
in
xor
mov
mov
popl
and
icebp
sahf
push
dec
mov
xor
fyl2xp1
int
test
pop
dec
mov
push
jg
xor
subl
xchg
addr16
test
ret
in
pusha
js
addr16
insl
subl
inc
dec
dec
loopne
adcl
aas
sbb
clc
insb
out
fmulp
add
push
inc
leave
sbb
cmpsl
ja
sub
add
and
int
roll
mov
push
icebp
maxps
inc
push
cmp
mov
push
and
mov
or
scas
movsb
jmp
mull
rolb
mov
aad
mov
and
dec
mov
scas
shlb
sub
std
pop
and
pop
mov
gs
mov
jo
cmp
mov
pop
lods
sub
cltd
pop
pushf
fistpll
add
pop
mov
popf
add
xchg
jmp
jmp
xor
out
arpl
cmp
aad
mov
fidivrs
clc
data16
and
fs
test
lcall
pushf
stos
adc
and
lret
icebp
mov
mov
sbb
or
cmp
lret
dec
mov
add
rorb
or
push
out
cli
push
pop
adc
jge
sarl
mov
jno
pop
xor
lds
xor
int3
push
mov
lods
push
mov
icebp
xchg
fdivs
push
enter
sbbl
mov
pop
clc
in
xor
or
jle
aaa
lods
push
stos
ds
xchg
sub
xchg
adc
xchg
mov
adc
inc
inc
jmp
cmpsb
xor
hlt
jle
nop
lcall
dec
mov
push
mov
pop
push
fldl
js
add
js
fisubrl
or
push
jge
fistpll
or
leave
cli
addr16
xor
test
rorl
mov
leave
and
dec
dec
mov
outsb
and
dec
test
test
cmp
stc
pop
iret
enter
fimuls
mov
xor
call
jmp
cmpsb
xchg
sti
xchg
or
fildll
dec
ror
jno
in
dec
push
or
fmul
cmpsb
insl
test
daa
nop
rol
enter
mov
sbb
lea
xor
ja
mov
sbb
pop
pop
pop
fisttpll
repz
fwait
mov
popa
mov
pop
cmp
leave
jne
pop
mov
mov
xor
bound
loopne
push
clc
shll
push
jle
insl
lret
mov
lret
push
loope
sbb
shrl
cmpsl
dec
call
hlt
std
jb
adc
cmp
pop
scas
sbb
stc
outsb
lock
loopne
mov
cli
xchg
sub
mov
out
add
out
dec
arpl
iret
fsubr
and
mov
jne
cmc
mov
xchg
ss
inc
mov
dec
ret
mov
inc
loop
push
mov
adc
fwait
mov
pop
sbb
rolb
xchg
out
lods
movsl
adc
flds
dec
sbb
xchg
dec
dec
in
clc
loopne
mov
clc
jle
popa
icebp
sub
ret
repnz
sub
enter
adc
js
cmp
add
bound
in
jae
lcall
sbb
jg
cltd
es
sub
inc
cwtl
and
adc
pop
sbb
cs
out
xchg
test
lcall
loope
repnz
fs
fisubrl
sbb
and
push
cmp
fisttpll
pusha
mov
icebp
add
pop
test
push
push
imul
mov
jb
sahf
loopne
leave
lret
xchg
inc
mov
push
mov
call
jne
lahf
ret
and
sub
mov
cmp
popa
data16
dec
xor
xchg
mov
ja
add
shlb
leave
pop
xchg
cmpsl
jge
mov
dec
int
pop
mov
xor
scas
aam
mov
outsb
in
xchg
lods
cmp
lret
sbb
pop
rclb
add
fdivrl
and
push
call
mov
or
dec
lahf
xor
mov
xor
mov
sub
andb
xor
rclb
out
push
pop
arpl
popa
lahf
jl
lods
and
gs
inc
in
sbb
gs
adc
sub
sbbl
xor
cmp
push
fcompl
pop
sahf
pop
xchg
fidivs
or
cli
mov
push
jmp
jl
insb
mov
scas
mov
xchg
dec
mov
sbb
jne
imul
sarl
outsl
adc
pop
lods
mov
mov
popf
aas
test
idivb
xor
pop
lock
dec
xchg
and
pushf
inc
out
add
sbb
movsb
mov
jmp
pop
out
out
xchg
xor
mov
dec
in
lret
sbb
push
popa
jge
jb
jb
out
mov
pop
scas
fistl
cmp
stc
ret
mov
add
ret
loopne
add
lcall
cmp
jge
popf
dec
jmp
test
test
cmpsl
insb
rcrl
dec
fisttps
sahf
xor
cmp
inc
and
push
cmc
push
jno
sbb
aaa
push
xlat
mov
addr16
outsl
ret
repz
cmp
and
outsl
shlb
dec
lahf
shll
jnp
or
mov
fcmovnbe
sbb
sbb
mov
mov
sub
inc
and
adc
hlt
aad
fwait
mov
pop
adc
ret
or
push
movsl
jecxz
cmpsb
add
in
adc
out
aam
fld
add
fbld
add
adc
js
arpl
add
andb
sbb
add
jne
mov
jg
mov
add
xchg
ret
pusha
ss
jecxz
push
fistps
bound
mov
sbb
and
xchg
or
loope
andl
pop
xchg
in
and
dec
push
jns
ds
inc
out
out
fs
leave
jmp
mov
sahf
dec
notl
loop
mov
lcall
pop
and
loopne
lods
jecxz
mov
and
cmp
int3
mov
and
xchg
and
jl
stos
push
xor
push
cmpl
test
jb
xor
in
jecxz
sarl
xor
pop
dec
inc
cs
push
bound
stos
std
pop
loop
add
das
lret
lods
sbb
lcall
cmp
insl
and
nop
popa
or
movsl
ror
mov
or
inc
lret
xor
sub
nop
test
xor
jno
fwait
and
mov
ljmp
pop
mov
test
jne
mov
call
mov
cmpsb
jl
js
adc
arpl
pop
fwait
ja
xchg
dec
dec
adc
popf
int3
insl
cmpsl
xchg
sbb
pop
inc
movsl
jns
in
adc
cmp
push
xchg
vshufps
mov
jns
mov
fcomip
mov
aaa
pushf
loopne
pop
call
sub
cltd
stos
cli
das
rcr
xchg
sti
faddp
jne
adc
jg
stc
mov
dec
mov
xor
sbb
jo
repz
lods
mov
and
add
aam
daa
dec
adc
pop
push
test
out
in
daa
pop
fwait
rcll
xor
in
shl
loope
push
lods
test
loopne
rorb
mov
jne
scas
shlb
sbb
xor
data16
push
dec
cmp
pusha
mov
jecxz
and
gs
outsb
lret
sahf
pop
fldl
sub
nop
icebp
jge
ja
sahf
xor
cltd
mov
pop
add
movsb
mov
stos
inc
add
sub
push
cltd
into
sbb
push
dec
iret
inc
imulb
movsb
scas
push
add
mov
je
push
rcll
dec
decb
push
lcall
int
xchg
test
jne
int
push
ljmp
insb
inc
mov
test
pop
fildl
sub
lods
ret
mov
int3
mov
add
pop
ret
cli
repnz
fsub
adcb
aaa
loop
xor
loopne
dec
add
pushfw
mov
sub
fwait
pop
out
xor
add
mov
adcb
mov
cmp
std
lcall
push
insb
sbb
lods
in
ret
cltd
std
dec
pushf
insb
push
cmp
jno
loopne
cmp
out
lret
jae
mov
push
scas
and
data16
popa
jnp
insb
fstps
push
out
jmp
test
jmp
adc
jg
popf
sbb
mov
cmc
hlt
stos
stos
cmp
stos
and
or
movsb
cmp
ds
mov
push
gs
fs
gs
fdivr
sbb
push
cmp
and
sub
cld
xchg
adc
push
in
out
test
lods
rcrl
inc
mov
xchg
inc
sub
push
mov
lahf
cmp
adc
ret
adc
push
stc
push
daa
scas
fcomi
push
gs
xchg
mov
lret
xorb
dec
add
mov
xchg
jge
ds
test
and
xchg
data16
or
popf
mov
out
mov
cltd
dec
pop
inc
outsb
clc
dec
lock
pop
pop
jno
loope
mov
lds
sbb
jge
ficoml
popa
fisubrs
dec
ljmp
ss
sbb
xchg
in
xor
loop
sub
inc
inc
dec
rcll
xor
sub
inc
dec
mov
subb
rcrl
push
decb
int
mov
lahf
mov
push
cmpsl
jle
cwtl
sub
mov
into
lods
dec
int
xchg
push
cli
lahf
imul
jle
sbb
ja
clc
cmp
popa
and
mov
cltd
xchg
or
jecxz
das
fsts
dec
pushf
movb
idivl
jo
mov
inc
push
pop
loope
cmp
pop
mov
dec
lahf
xor
ljmp
gs
adc
xor
lcall
pop
push
jmp
lret
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
test
mov
jmp
adcl
addl
std
leave
repz
outsb
test
out
jmp
pop
xchg
cltd
sub
or
cmpsb
and
xchg
push
add
jl
xchg
roll
or
in
sbb
outsb
filds
xorb
stc
pop
push
fneni(8087
mov
xchg
xor
ror
iret
xchg
popf
idivl
adc
inc
mov
xor
in
xor
popa
in
and
jp
test
cmp
mov
pop
jle
call
inc
mov
push
add
jbe
ja
push
pop
ds
nopl
jo
lods
ss
int3
cltd
out
mov
enter
jnp
test
stc
lahf
stos
add
test
push
adc
xlat
sub
mov
mov
lret
pop
mov
scas
cli
jmp
loopne
sti
cmp
movsl
jo
popa
mov
add
cwtl
call
popf
jl
pop
xor
scas
arpl
jae
sbb
add
dec
sub
hlt
push
out
mov
ds
and
scas
les
cmp
cmpsl
fdiv
cmc
pop
das
test
xorb
stos
mov
pop
or
cmp
sti
dec
pop
cmp
fiaddl
mov
sahf
fcoms
jo
push
mov
xchg
mov
mov
jo
inc
cmpsb
mov
lcall
and
outsl
popa
je
movsl
inc
inc
imul
cmpsl
xor
mov
aad
cmp
or
sub
or
lahf
xchg
test
jecxz
ret
fisubl
add
pop
out
pop
add
lret
test
subb
cli
call
mov
mov
imul
idivl
jno
and
pusha
adc
xor
pop
add
fstpl
mov
add
mov
lahf
mov
in
scas
leave
ljmp
pushf
or
hlt
lret
mov
pusha
pop
lock
xor
or
inc
imul
jl
popl
bound
and
or
xchg
adc
testb
mov
int
aad
dec
push
jne
outsl
mov
test
lds
mov
or
mov
loopne
repz
sub
out
add
mov
jnp
ja
xor
adc
xor
mov
lds
sbb
dec
dec
clc
test
dec
cli
lcall
sbb
dec
leave
xor
fbstp
lods
test
cvttps2pi
xor
movsb
sbbb
popf
sbb
out
in
push
dec
das
jb
pop
test
notb
sbb
mov
test
subb
fs
lcall
and
adc
aam
int
out
sub
test
push
rolb
ror
pop
or
je
aas
in
ss
mov
push
mov
and
pop
dec
cli
mov
mov
insl
popf
push
sarb
xchg
inc
out
iret
jo
mov
cmp
lcall
incl
add
std
leave
rolb
fidivrl
cmp
loopne
fnstenv
into
mov
mov
push
sub
mov
out
mov
adcb
add
mov
dec
pop
decl
iret
out
push
insl
jecxz
shr
out
pop
mov
leave
xor
or
xchg
mov
lea
jne
mov
loop
popf
jecxz
paddusw
or
mov
xor
nop
jge
lea
sub
gs
sub
pop
mov
cmc
xchg
in
inc
pop
adc
push
add
jecxz
sub
test
xchg
ss
adc
nop
xor
arpl
push
out
or
mov
in
mov
xchg
sbbl
arpl
cmp
mov
leave
sti
sbb
sbb
ret
inc
jns
test
xchg
into
sbb
adc
movsb
daa
xchg
lds
xor
clc
dec
jno
shr
repz
sub
mov
add
pop
int
xchg
sbb
orb
inc
adc
scas
add
fnstenv
xor
aad
xchg
xor
xchg
mov
or
negb
pop
sub
sbb
cmpsb
pop
mov
dec
lods
neg
movsl
cmp
sub
lahf
enter
iret
jl
sarb
jl
push
add
shll
loop
pop
mov
test
push
arpl
das
cmp
lds
ds
int
jno
pop
pushf
mov
fwait
lret
dec
shlb
lahf
mov
inc
gs
sbb
mov
cmc
jle
jne
fcomp
out
rcll
inc
das
cmpsb
inc
out
mov
or
addr16
cld
fimull
repz
out
je
jbe
fs
imul
mov
jl
fcmovne
arpl
adc
dec
jge
pop
sub
mov
mov
mov
xchg
push
cmc
fwait
pop
jae
fwait
nop
sub
mov
in
aaa
jno
dec
mov
and
incb
cmp
xor
mov
mov
bound
xlat
addr16
cmp
fidivl
cmp
cmp
pusha
adc
fs
mov
adc
and
xchg
ret
addr16
testl
mov
test
sub
outsl
out
mov
pop
jle
push
ficoml
aad
sarb
loopne
inc
pop
cs
sub
repnz
inc
sbb
jo
or
xchg
cltd
insw
jbe
imul
pop
roll
push
aam
or
gs
aas
pop
jae
fmuls
mov
dec
and
and
std
mov
push
adc
in
jecxz
inc
fwait
xor
lret
xchg
lea
cmp
cmp
movq
push
mov
push
mov
pop
jge
dec
ret
loope
pop
or
jmp
arpl
push
scas
cmpsl
pop
cmc
in
xorb
mov
dec
adc
and
pop
dec
add
pop
adc
orb
fwait
adc
hlt
mov
mov
mov
jnp
add
xor
rcrb
and
rorl
rorl
mov
push
sub
movsl
pop
and
pop
cmp
movsl
cmp
sub
inc
lret
mov
or
clc
rcrb
mov
daa
jecxz
sbb
xor
imul
loopne
stc
jae
mov
sub
push
sub
jb
sbb
lea
dec
mov
mov
faddl
stc
arpl
es
push
int
int
push
jae
dec
or
fisttpl
jo
lods
bound
or
push
sub
shrb
dec
dec
cmpsb
inc
cmp
popf
pop
fnsave
xchg
je
insb
push
cmc
addr16
xchg
pushf
sub
xchg
test
int
pop
cmp
xchg
xor
imul
lahf
push
pop
and
stc
dec
cmp
pop
xor
into
mov
adc
and
jl
mov
or
mov
cmpsb
cmp
adc
or
dec
sub
mov
xchg
out
pop
loopne
ror
mov
rcr
pop
repz
pusha
sub
and
adc
add
inc
xchg
cmp
mov
jb
imul
nop
stc
js
pop
xchg
fucomip
popf
mov
mov
pop
and
push
mov
mov
jbe
xor
lea
enter
stos
push
es
subb
pop
or
rcl
out
ljmp
mov
clc
jmp
xchg
mov
ret
inc
fadd
andb
mov
dec
push
hlt
ljmp
pop
dec
mov
adc
roll
mov
jbe
es
xor
testb
push
or
or
clc
stos
xor
jno
rorl
lahf
xlat
mov
dec
xchg
bound
in
or
sahf
out
mov
xchg
or
push
shl
out
lcall
lea
fldcw
out
int
sub
mov
mov
subb
adc
push
push
and
lea
call
fs
addr16
mov
jbe
mov
pop
inc
imul
xor
xor
loope
in
push
mov
adc
push
pusha
xor
lcall
pop
out
cmp
out
js
lret
int
fcom
push
mov
repnz
mov
hlt
jge
repnz
fdivl
inc
sarb
popf
add
or
mov
lds
lock
fsubs
fcoml
adc
pop
cmc
xchg
loope
dec
jp
or
ja
cmp
pushf
in
stos
sbb
in
into
addb
fisttpll
pop
lcall
std
sti
mov
xor
or
dec
repz
mov
or
adc
jecxz
pop
cmp
addb
adc
les
mov
ret
jl
mov
jno
mov
jg
mov
fnstsw
push
ljmp
adc
sbb
pop
cwtl
xchg
repnz
mov
repnz
lods
rcl
push
movsb
push
rclb
mov
xor
fcmovnu
sbb
cmp
mov
inc
imul
pop
or
adc
dec
jbe
outsl
fwait
sbb
inc
mov
loopne
pop
lret
cmp
lret
shrl
inc
dec
lods
cmp
add
orb
jg
xchg
das
cmpsl
ljmp
cld
mov
or
pop
stos
fdivl
add
fdivr
jp
ret
call
and
mov
stos
push
mul
pop
out
ss
sahf
out
jae
inc
mov
or
xchg
pop
fidivs
dec
sub
ds
arpl
ljmp
jne
or
add
adc
push
addr16
pushf
xchg
sub
or
add
in
int
mov
adc
divb
cmp
jg
xor
fwait
imul
leave
mov
sub
insb
push
lcall
mov
pop
pop
xor
push
push
divl
inc
add
mov
dec
mov
mov
mov
jns
mov
xchg
cltd
ret
xchg
xchg
xchg
movsl
adc
lret
mov
or
sbb
xchg
cmpsl
adc
jae
cmp
fyl2xp1
mov
mov
push
inc
stos
sbb
call
pop
hlt
scas
pop
mov
mov
out
addl
fwait
sbb
mov
mov
and
jbe
or
pop
stos
jne
ret
cmp
insb
fwait
out
bound
fsubr
nop
inc
mov
mov
enter
lock
xor
jno
push
jmp
ljmp
fcmovnu
and
jno
mov
subb
pusha
and
push
lods
pop
fiaddl
jne
jmp
xchg
clc
stc
shlb
test
lea
xchg
aaa
cmpsb
fistpl
mov
cmc
xchg
jmp
push
cmp
adc
sub
adc
stos
mov
flds
or
adc
ret
test
aaa
cmp
sbb
pop
sub
popf
mov
mov
nop
jle
pop
xchg
or
lea
jge
dec
popf
dec
sub
xchg
dec
inc
in
in
ficomps
in
cltd
sub
sbb
cmp
cmpsb
das
cs
xor
into
clc
push
scas
xor
stos
xor
push
jno
mov
adc
push
mov
and
jns
push
imul
ret
sbb
aaa
pop
popa
or
or
in
adc
mov
pop
jmp
inc
dec
inc
imul
push
scas
mov
push
pop
cmpb
sub
xor
cltd
clc
jns
in
jno
in
mov
cmpl
popf
mov
xchg
jne
sarl
sbb
pop
add
cmp
mov
push
hlt
outsb
add
in
pop
xor
repz
dec
mov
ret
shll
inc
movsl
mov
xor
shrb
sbb
shl
ds
jb
cmpsb
mov
jg
arpl
fwait
and
out
jmp
add
movsb
fstpl
inc
adc
out
jge
push
dec
out
jmp
in
pop
cmp
xor
movsb
movsl
mov
aad
cld
cmpsl
testb
into
lods
mov
loopne
add
inc
mov
xor
push
shll
pop
leave
mov
inc
adc
gs
inc
test
fs
fildll
jo
cmpb
jl
imul
mov
shrb
lcall
sub
lcall
xchg
fsubrs
cmp
ret
push
loop
das
push
sarb
add
leave
mov
and
xchg
pop
sbb
shrl
push
sbb
or
scas
jne
mov
popf
and
leave
or
lea
mov
lcall
in
sbb
daa
push
mov
lret
test
aad
sbb
xor
xor
arpl
jl
mov
hlt
imul
cmpsl
addr16
ja
fs
add
add
inc
mov
fldcw
or
repnz
sti
ja
mov
mov
lret
inc
mov
mov
data16
in
and
xchg
sbbb
shrb
and
dec
push
sbb
lcall
jp
cmp
int
xlat
push
pop
aam
test
js
xor
jecxz
repz
mov
lcall
fistpl
mov
in
add
jl
pop
aad
sbb
idivb
sub
insl
pop
xchg
add
mov
push
stos
jo
push
movzwl
mov
pop
xchg
xchg
push
stos
in
lock
and
jbe
into
test
loope
in
mov
push
lret
nop
xchg
out
or
rolb
ljmp
rolb
xor
cli
fwait
inc
enter
dec
loopne
sbb
inc
sbb
std
fdivrl
lret
inc
outsl
dec
fdivl
test
cmp
faddl
test
adc
fisubrs
aad
add
lcall
bound
cltd
mov
mov
cmp
ljmp
xchg
pop
scas
iret
scas
push
inc
sbb
pop
adc
fnstenv
cmpsb
repz
inc
lods
mov
movsb
shl
mov
shlb
mov
fsub
lcall
test
loopne
or
out
pop
lret
xor
out
decb
or
stc
inc
pop
ficoms
ret
pop
popa
adc
int
out
mov
xchg
hlt
fidivrs
mov
mov
pusha
cmpl
sbb
cmp
dec
mulb
mov
push
lods
imul
pop
push
test
push
pop
js
dec
jnp
xor
push
and
push
stos
movsl
cmp
pop
in
push
sub
sbb
sub
add
push
push
pushf
add
out
out
jge
filds
mov
js
xorl
sbb
push
lahf
ficoms
dec
hlt
loop
mov
and
jns
lock
repnz
cmp
test
mov
ss
roll
mov
xchg
sub
jnp
out
les
ret
and
hlt
cmp
mov
aad
lret
cmp
inc
test
rcrl
pop
and
xor
jo
cmp
ffree
dec
cld
in
lret
fbld
add
jnp
pop
and
cmpsb
and
fst
arpl
add
loopne
pusha
cli
mov
adc
mov
mov
pop
les
mov
or
or
scas
outsb
add
dec
xor
jl
out
xor
and
cld
outsb
cmp
jae
mov
sub
mov
add
pop
dec
jb
sti
out
in
nop
jp
push
shrb
add
jmp
in
cmp
push
mov
mov
xchg
gs
or
sbb
cmp
mov
loopne
pop
outsb
lds
negl
cmp
and
adcb
in
mov
pop
hlt
sub
imul
insb
and
inc
data16
and
push
jns
out
pushf
push
in
cmc
jnp
bound
cmp
adc
lret
divb
fdivp
and
pop
xor
jge
jnp
push
aad
mov
adc
pop
or
orl
mov
sub
sti
cld
fs
push
hlt
repz
ds
jmp
sub
add
dec
daa
nop
arpl
jns
loope
je
ret
rcll
add
xor
cmpsb
pop
cmp
out
mov
loope
inc
adc
rcrb
cltd
cmp
jo
movsl
xchg
movsb
mov
shll
lea
cmc
and
and
add
cmc
clc
pop
add
dec
or
push
fbstp
and
ret
xchg
xor
mov
jmp
sbbl
mov
mov
cmpsl
imul
jne
jns
ss
inc
enter
cmp
mov
stos
mov
in
rcll
movsb
fs
outsb
into
or
push
fists
xchg
mov
movsl
shll
sbb
push
in
mov
and
fnstenv
loopne
or
ss
lret
fistl
lcall
es
pop
and
js
dec
mov
add
sub
and
lock
aad
nop
stc
and
inc
repz
xlat
rorb
cmp
cmp
mov
pop
jge
sub
loop
lods
mov
dec
mov
xor
pop
pop
pop
orl
inc
decl
gs
push
fwait
jb
push
repz
and
aaa
loop
sub
mov
mov
lods
fwait
lea
std
pop
pop
std
sub
push
push
xchg
enter
lahf
cs
jns
int3
insl
aaa
pop
push
loope
cmc
pop
mov
push
dec
loopne
add
dec
inc
inc
not
dec
add
sbb
loop
sub
sbb
and
mov
mov
adc
xchg
clc
mov
repnz
dec
xchg
repz
js
inc
ja
and
cmp
jns
jno
insb
bnd
sbb
sbb
inc
and
out
das
cld
inc
call
in
mul
popa
xlat
subl
add
lock
lret
imulb
ret
sbb
bound
icebp
movsl
jno
inc
std
cltd
clc
shl
pop
dec
push
cmpsl
ljmp
aas
cmp
mov
pop
adc
sbb
xchg
pop
jp
repz
mov
pop
ret
pusha
dec
add
fisubrs
add
cli
shrb
mov
and
scas
dec
adc
jp
xor
test
sub
xchg
mov
ret
pop
inc
mov
rcrb
arpl
rcrb
inc
cli
dec
dec
sbb
out
mov
xchg
pminub
loope
mov
lods
dec
les
arpl
lock
std
popf
sub
fnstenv
shll
inc
jne
inc
lods
sarl
dec
pop
lahf
mov
rorb
xor
test
mov
mov
sbb
xchg
mov
stc
mov
lock
stc
in
sub
cmp
insl
insl
add
xor
sub
push
push
or
adc
pop
sbb
sub
jle
cltd
mov
inc
scas
or
testb
xor
adcb
push
ljmp
test
ficoms
cmpsl
out
xchg
mov
xor
movsl
add
popa
inc
nop
popf
sub
or
pop
and
push
cmp
aas
push
stos
fadds
mov
dec
scas
xor
jl
xchg
imul
pop
mov
jmp
test
dec
jle
sbb
xchg
cwtl
xor
xor
sub
cmp
shl
mov
jg
adcl
shlb
xchg
or
dec
sbb
lcall
sub
mov
and
adcb
rcrb
jo
add
lods
lds
jp
xchg
sub
push
sbb
and
rcr
pusha
lret
test
cwtl
fimuls
ss
repnz
sub
push
and
mov
int
jbe
mov
aas
loop
fnsave
je
lods
cmp
inc
cmp
xor
dec
pop
es
rclb
lea
fidivrs
mov
stos
sbb
push
int3
sbb
decl
push
ret
aaa
out
roll
test
into
and
xor
pusha
mov
dec
push
int
std
dec
mov
push
stos
push
insb
pop
enter
xchg
scas
out
mov
hlt
int3
pminub
out
testb
mov
adc
pop
je
xchg
into
stos
inc
mov
mov
icebp
cmp
sti
mov
mov
dec
lods
lret
push
insl
dec
pop
adc
mov
pop
adc
enter
jge
jo
call
sub
lds
out
ret
test
loope
testb
dec
into
faddl
mov
lea
fstps
hlt
pop
jb
mov
iret
cmp
cmp
lods
scas
push
and
into
addr16
pop
rorl
sbb
jecxz
out
mov
inc
xchg
mov
fdivrs
scas
stos
xchg
and
int3
and
xchg
inc
jl
imul
xchg
out
loopne
jg
or
filds
jns
ss
repnz
adc
ds
lret
xchg
add
lods
fiaddl
dec
or
jo
xor
adc
fwait
mov
or
fwait
sbb
xor
xchg
sbb
loop
test
fistpll
push
lods
and
enter
sub
adc
adc
pop
push
dec
test
and
aam
outsl
push
xchg
mov
outsb
push
mov
inc
cmp
push
sbb
loope
enter
in
insb
sub
ja
stc
fdivr
pop
cmp
push
jmp
imul
btsl
jle
fistps
outsl
and
xlat
pop
out
jp
xchg
sahf
jmp
xchg
mov
jle
sti
popa
add
or
push
cmpsb
out
and
das
sbb
lods
cs
loopne
jns
pop
inc
sahf
mov
mov
sahf
sbb
add
xor
inc
outsb
loop
flds
pushf
test
lcall
sahf
int3
mov
sbb
dec
cmpsl
les
call
inc
push
in
shl
sbb
dec
adc
insl
sub
push
xchg
mov
das
je
fstpl
ljmp
and
pop
fmull
fisubrl
mov
jb
into
testb
sti
ss
inc
or
push
cmpsb
mov
push
mov
sbb
lret
icebp
jl
cli
mov
aad
or
mov
push
jmp
mov
add
mov
jns
mov
pushf
sti
jecxz
cmpsb
ficoms
push
loop
mov
sbb
mov
and
add
js
mov
pop
cs
push
dec
pop
insl
mov
adc
fs
sbb
test
ss
mov
daa
dec
insl
lret
xor
mov
out
sub
cmp
fisubrl
inc
cmp
mov
mov
movsb
ret
mov
mov
xor
sbb
aad
fidivrl
lods
and
dec
in
test
inc
orb
mov
xor
push
les
enter
mov
sub
ret
lcall
in
and
mov
inc
xor
mov
push
or
inc
mov
xor
push
mov
xorb
enter
in
ds
push
inc
inc
or
shlb
popa
test
jo
mov
pop
mov
test
aaa
aad
in
test
adcl
xchg
bound
fsubr
mov
lcall
stos
and
enter
mov
add
add
ja
out
lret
test
and
ud1
inc
popa
cmp
push
dec
out
mov
sbb
repz
mov
and
jnp
xchg
xor
lcall
je
ret
push
inc
sub
aad
mov
popa
out
cltd
jmp
jnp
jge
das
cld
repz
mov
xor
jg
adc
inc
daa
add
es
int3
inc
push
xchg
inc
fdivp
pusha
push
js
mov
mov
inc
movsb
sub
jp
push
mov
add
mov
and
xchg
or
add
mov
fsubs
or
out
mov
push
sbb
fisttps
loop
into
push
daa
sbb
lcall
iret
into
ja
movsb
xor
cltd
jns
outsb
mov
ret
rorb
das
notb
mov
jmp
cmp
inc
addr16
jle
xor
divl
mov
xchg
adc
jg
popf
dec
fistps
mov
bound
xor
or
mov
je
fcompl
jp
mov
jne
sub
es
bound
jmp
jp
jb
cwtl
sbb
into
lret
add
fcmovu
xor
fsubrs
in
aas
scas
sbb
sub
int3
mov
pop
inc
jp
nop
sub
xchg
dec
pop
cmpsb
enter
dec
add
pop
jno
jp
and
mov
jno
xchg
popl
cmp
mov
into
mov
adc
pop
arpl
pusha
enter
jbe
mov
test
sbb
imul
mov
mov
loope
xchg
and
repnz
dec
aam
sahf
inc
getsec
cli
bound
aaa
loope
xchg
daa
lods
xor
ljmp
adc
out
mov
fstpl
pop
sbb
mov
add
inc
mov
inc
mov
repnz
fstpl
mov
xchg
or
es
xchg
mov
cmpsl
or
sub
testl
or
leave
and
adc
test
dec
icebp
cld
int
adc
gs
lcall
shl
repnz
and
sub
xchg
addr16
pop
imul
lea
push
inc
cwtl
repz
sub
cmp
sub
jo
bound
jle
mov
pop
cwtl
xchg
xchg
je
jge
sub
inc
bswap
jo
jp
add
roll
push
jle
ja
cmpsb
into
movsl
pop
dec
in
sbb
adc
enter
aad
data16
xchg
scas
pop
mov
fbld
and
mov
dec
mov
xchg
lcall
cmp
jo
dec
inc
mov
jnp
inc
test
jo
testl
rorl
mov
mov
lds
ret
adc
mov
rcl
sbb
xor
cmp
andl
and
ret
addl
out
and
icebp
mov
pop
in
in
xor
out
sbb
aad
and
sub
cmpsl
leave
xchg
in
scas
fmuls
xor
dec
cmp
add
inc
pushf
dec
rcl
lfs
gs
xchg
jae
dec
incl
fsubrs
and
push
loop
cmp
push
mov
cmc
sbb
mov
inc
add
mov
insb
xchg
inc
jb
inc
inc
jo
stos
sub
std
add
int
jg
mov
out
repz
hlt
les
pop
aad
sbb
sub
dec
xor
mov
adc
pop
cmpl
cmp
lock
jmp
ja
lods
push
in
int
movsl
arpl
popf
push
pop
pop
popf
sub
mov
or
push
xchg
mov
or
movsb
mov
push
jg
xchg
imul
jne
stc
inc
dec
out
nop
int3
xchg
mov
cmp
push
daa
pop
ds
sbb
pop
cli
adc
mov
push
jl
mov
inc
jecxz
adc
das
leave
testb
mov
mov
loopne
adc
out
xchg
test
les
test
lret
dec
loope
push
popa
pushf
inc
dec
pop
lcall
mov
inc
jle
xlat
fldenv
sub
outsl
cmp
insl
pusha
imul
test
xor
push
mov
mov
loopne
or
jno
xchg
jno
sbb
mov
mov
ss
or
mov
push
js
push
xchg
or
lds
jmp
mov
inc
dec
push
add
mov
idivl
test
je
mov
aaa
xchg
jecxz
mov
ret
inc
add
adc
ljmp
pop
mov
lcall
xchg
int3
dec
out
jb
rorb
gs
push
dec
nop
add
das
push
jmp
mov
std
cmp
test
mov
loope
jbe
fldcw
cmp
xchg
and
adc
loope,pn
aaa
arpl
jnp
fnsave
and
adc
movsl
dec
pop
repnz
out
add
mov
lods
add
push
adc
inc
stos
jne
mov
mov
dec
cmpsb
jp
mov
in
movsb
test
das
out
add
jmp
filds
loopne
imul
incl
mov
aad
data16
mov
fs
sahf
sarb
stc
jnp
lock
add
repz
ja
arpl
lds
jl
lds
push
sbb
lods
jns
mov
jne
sub
xor
cltd
add
out
cmp
sahf
adc
stos
insb
adc
fildll
jno
cmp
dec
cmp
dec
addl
fisubs
or
iret
enter
mov
push
lcall
dec
fcomp
sub
addr16
cmpsl
inc
and
or
decl
notl
nop
jmp
iret
pop
jae
xchg
push
jb
push
push
mov
push
sti
mov
out
fildll
sbb
out
jp
adc
lcall
ret
xorl
mov
in
shrl
jo
mov
flds
in
or
or
adc
gs
shll
adc
pop
cmp
adc
leave
xchg
lea
adc
loop
xor
shl
add
fwait
sub
push
insl
aaa
or
test
adcl
popf
sbb
or
jo
fnstcw
add
cmp
inc
int
jbe
jge
jno
mov
mov
and
mov
jnp
rcrl
push
mov
jle
outsl
pop
xchg
mov
mov
imul
fs
std
push
lret
xchg
and
and
xor
lret
fisubl
in
ficoml
and
mov
nop
das
sub
ja
adc
stc
addl
lds
or
or
and
mov
clc
leave
ret
test
and
ficoml
push
adc
cmpsb
cmpsb
xchg
sub
jo
xchg
loop
or
cltd
mov
das
adcb
stc
or
clc
cmp
adc
das
dec
out
mov
xchg
divb
int3
hlt
sub
out
jne
orl
jns
movsb
aas
movsl
shl
and
into
shlb
shrb
lret
jmp
adc
test
lahf
xchg
adc
pop
pop
addl
mov
dec
jge
es
daa
pop
adc
out
xor
sti
add
test
pop
bnd
xchg
push
push
jle
out
jp
data16
cld
pop
add
mov
outsl
sub
test
mov
lret
out
adc
inc
cmpsl
mov
shrb
mov
adc
pop
jae
setge
sbb
ds
in
add
cmp
add
sub
fisubs
jle
arpl
sub
mov
xchg
mov
fs
mov
je
je
cmc
add
ffree
push
jmp
mov
mov
mov
xor
sub
mov
add
test
imul
push
jae
mov
jbe
popf
sub
test
int
xchg
in
lret
push
icebp
imul
jne
mov
fisubrs
popl
bound
lock
popf
mov
sbb
movsl
sub
clc
and
movl
dec
fwait
xor
dec
test
pop
mov
jns
sub
mov
dec
fwait
and
inc
xchg
mov
repz
jge
cltd
andl
xor
nop
cld
and
hlt
xlat
mov
call
add
addb
jbe
shlb
sahf
repnz
and
cmc
dec
jg
xor
popf
aad
pushf
enter
mov
mov
sub
out
out
insb
add
push
ja
loop
mov
sbb
adc
cld
jae
sub
test
leave
cmp
loop
dec
ret
xchg
jmp
add
mov
out
lret
inc
out
pop
adc
pop
shlb
loope
push
bound
insb
leave
cmp
adc
sarl
jge
jl
mov
dec
sub
push
pop
xor
xchg
lods
jae
outsl
aas
mov
mov
nop
ret
push
xor
add
subl
lds
sbb
js
inc
add
add
data16
lods
sbb
lods
push
cmpsl
adc
je
ret
or
adc
inc
stos
ficomps
aas
xchg
adc
mov
jo
inc
jge
lret
cltd
push
xchg
movsl
push
out
push
mov
jnp
jecxz
dec
cltd
mov
clc
fistl
sub
lahf
mov
xchg
sbb
mov
insl
test
mov
cmp
and
pusha
es
jle
ret
mov
and
sbb
aad
mov
fstp
sbb
icebp
fildll
je
mov
aaa
xchg
loop
lock
or
jo
mov
movsb
or
test
shr
add
push
rcrl
loop
jg
mov
je
jns
insb
xchg
fsubs
mull
sub
xchg
out
push
lods
push
dec
fldcw
iret
out
sbb
lock
inc
repz
subb
filds
aas
les
cmp
pop
sub
xchg
jae
mov
mov
out
sbb
mov
or
inc
cltd
jae
in
dec
rol
repz
inc
cwtl
fs
adc
outsb
add
loope
xlat
inc
jns
clc
jo
in
test
imul
inc
mov
adc
aaa
out
cmp
sub
pop
mov
mov
or
addb
cmp
mov
jmp
jl
and
aas
ret
jmp
add
sbb
pop
ficompl
jo
push
data16
or
das
and
jecxz
divb
dec
mov
dec
or
lret
aam
pop
iret
push
jns
xor
mov
jl
cmc
add
mov
out
arpl
pusha
inc
xchg
js
sti
out
lcall
jno
cmpsl
fs
fnsave
dec
sub
inc
jns
mov
addr16
cld
or
test
xchg
jecxz
cwtl
adc
mov
jmp
ficoms
sub
dec
cli
sahf
push
adc
xchg
movl
ljmp
inc
mov
inc
lock
jno
and
inc
out
in
arpl
inc
jnp
pop
mov
and
das
pop
and
xor
or
les
data16
mov
mov
and
sub
fidivrs
lods
fcoms
mov
xor
out
adc
mov
jbe
iret
fildl
cs
xor
sahf
dec
sbb
lahf
insl
fmull
ja
aaa
mov
cwtl
in
loopne
fstpt
ja
loopne
sbb
sahf
imul
scas
mov
jmp
add
push
repz
sub
popf
aaa
cmp
test
jecxz
repnz
sub
xchg
mov
cwtl
sti
push
mov
stos
sbb
scas
mov
mov
fwait
and
negl
sbb
mov
pop
mov
mov
sbbl
inc
gs
sbb
ds
into
jg
adc
push
lds
mov
pop
mov
push
insb
ffreep
cltd
add
fisttpll
stc
ret
sarb
cld
pop
leave
fistl
test
stos
leave
loope
out
fisttps
jge
and
push
and
or
cs
jecxz
jl
xchg
and
xor
cli
push
fdivp
add
pushf
or
cwtl
clc
mov
pusha
gs
cltd
jb
js
or
mov
mov
push
mov
shlb
js
sarl
inc
jb
and
stos
sbb
xor
inc
into
daa
cli
movsb
loope
popf
ror
push
bts
fstpt
es
xchg
add
push
push
cld
insl
and
mov
xchg
daa
insb
sbb
sbb
aaa
sbb
clc
js
cmpsl
push
xchg
ljmp
popa
push
loop
mov
xor
ret
loop
aaa
xor
dec
pop
jle
sbb
sbb
sbb
sub
mov
imul
pop
adc
add
sbb
sbb
cmp
out
mov
cld
mov
jno
in
fs
imul
dec
xor
jbe
jb
pop
mov
test
dec
inc
jno
and
stos
movsl
sub
popf
xor
arpl
pop
jns
loop
outsb
fstps
mov
insb
push
shrl
mov
pop
xor
lods
gs
pop
cmp
incb
mov
push
fldcw
add
add
int
push
mov
mov
int
or
mov
mov
or
dec
mov
cltd
pop
sti
cltd
pushf
add
test
adc
scas
mov
adc
xchg
je
or
push
insl
jo
out
insb
out
insb
shlb
dec
push
mov
icebp
les
sbb
dec
ret
add
in
arpl
cmp
mov
adc
adc
sahf
imul
cmpsb
int
shrl
push
popa
fwait
orl
or
inc
insl
repz
inc
xchg
mov
in
and
dec
xchg
or
cmp
ret
mov
or
push
sahf
out
push
lea
xchg
insb
cs
arpl
sarl
mov
adc
push
cmpsl
cmpsl
adc
imul
cld
add
push
fsts
mov
cmp
xor
dec
fwait
in
sti
pop
aas
sbb
mov
out
ds
xchg
stos
fdivl
negb
arpl
stos
mov
cmp
mov
adc
call
pop
test
sbb
push
sub
mov
ja
ret
clc
cmp
imul
pop
movsb
test
cmp
xor
jecxz
pop
fimuls
scas
ss
scas
and
push
cmp
imul
div
icebp
sahf
inc
insb
mov
test
fwait
push
push
jnp
insl
push
cmp
ret
cmpsl
test
movsb
push
test
cltd
pushl
mov
mov
add
jo
stos
sbb
mov
iret
ds
sub
cmp
pop
out
mov
out
pusha
add
push
jle
test
and
lds
aad
push
aad
xchg
enter
lret
sbb
xchg
call
stos
shlb
push
repz
xor
subw
das
outsb
fwait
and
ficomps
jo
leave
dec
jno
aas
sbb
sti
addr16
ret
xchg
aad
in
sub
mov
fstpt
mov
mov
mov
jle
jl
pop
mov
sahf
sbb
inc
jbe
leavew
scas
jmp
scas
push
mov
jge
out
int3
fldcw
rcrl
add
inc
mov
mov
je
or
sbb
adc
lea
fcomps
cmp
sahf
bound
das
cltd
cltd
push
test
stos
add
or
adc
nop
mov
lods
mov
test
mov
jne
and
cltd
mov
adc
jl
popf
mov
leave
and
paddd
dec
pusha
pop
adc
add
repz
inc
xor
mov
jb
pop
or
insl
insb
into
jnp
push
xchg
outsl
fmuls
xchg
lahf
cwtl
in
call
xchg
adc
mov
lods
daa
loope
and
aad
inc
mov
out
mov
std
dec
subl
dec
adc
dec
adc
inc
cs
mov
imul
out
lods
jo
or
xchg
dec
adc
add
xor
pop
mov
aad
jg
aad
test
push
mov
mov
es
cs
iret
cwtl
cmp
rorb
and
idiv
mov
in
push
sbb
xlat
sub
ret
aaa
out
jge
daa
pushf
test
push
xchg
lret
loope
pop
or
add
xor
xchg
seto
test
xchg
aam
mov
js
stos
dec
inc
out
out
pushf
lahf
pushf
js
int
in
mov
bound
pop
stos
ds
aam
fstp
and
std
ds
mov
rcr
sysenter
jl
jnp
xchg
jo
pushl
mov
push
dec
shlb
mov
in
add
dec
push
sub
imul
out
ljmp
jmp
out
xchg
and
fdivrs
sti
mov
out
rcr
andl
dec
cmp
out
dec
lea
or
mov
mov
mov
fldl
lds
xchg
int3
pcmpgtw
cmp
inc
sub
and
jp
mov
push
cld
jg
jae
cmp
andl
add
add
dec
add
mov
pop
popa
js
aas
stc
clc
out
test
out
xor
mov
or
pop
mov
push
dec
pop
inc
mov
push
stos
das
mov
lock
fstl
xor
push
mov
rcll
ja
loope
mov
fldl
fs
out
push
mov
repz
sub
push
scas
loopne
mov
pushf
push
bound
inc
cmp
stos
adc
cmp
jb
push
mov
inc
adc
leave
rorb
aad
addr16
outsl
imul
nop
adcb
pop
loope
cmc
adc
cwtl
mov
cs
adcl
mov
xchg
outsb
mov
add
sbb
jle
jns
pop
sahf
push
push
pop
inc
xchg
sti
roll
jae
es
inc
arpl
aaa
loop
push
imulb
push
daa
add
xchg
or
data16
add
out
add
mov
cmpsl
cmp
sbb
sbb
cmp
inc
xor
adc
mov
pop
inc
std
andb
incl
inc
stos
inc
test
xlat
push
rolb
xchg
out
jae
cmp
pop
pop
mov
cmp
pop
lds
pop
fstps
mov
inc
loopne
fmull
xchg
pop
and
call
jle
cmc
call
cmp
jns
test
pop
pusha
mov
and
mov
andb
cmpsl
movsb
int3
push
pop
fs
adc
xchg
pop
divb
jne
cmp
mov
or
mov
jle
or
jmp
push
scas
stos
enter
cld
in
daa
pop
mov
popf
test
inc
xor
repnz
out
jb
add
pop
inc
fsubrp
add
shrl
sbb
insb
lods
test
xchg
test
xchg
cli
push
sahf
cmp
xchg
data16
push
dec
cltd
in
shrl
test
test
sbb
nop
cmp
push
repnz
sub
add
paddsb
xor
sbb
or
push
je
pop
test
cltd
mov
pushf
scas
dec
xchg
push
mov
movsl
mov
js
pusha
in
and
icebp
movsb
and
cs
stc
repnz
mov
mov
mov
xor
aad
gs
into
xor
ret
cmpsb
scas
fisubs
insb
rclb
dec
js
scas
rclb
cltd
mov
sbb
adc
lock
mov
or
lret
aas
push
and
shrl
pushf
popf
loop
andl
fcomip
pop
outsb
add
push
repz
pop
sub
adc
je
add
pushf
fwait
mov
sti
dec
enter
xchg
mov
enter
testl
arpl
inc
inc
mov
jg
jnp
cmp
arpl
push
mov
fstp
adc
std
inc
sbb
lret
mov
pop
fwait
loope
es
xor
jmp
test
dec
push
test
fistl
push
jle,pn
pusha
repnz
fldt
xchg
aad
jg
imul
sti
sbb
pop
jge
cltd
lcall
xchg
lcall
fisttpl
xor
and
or
dec
push
push
call
inc
mov
sub
cmp
stos
or
push
push
push
pop
aas
sub
xchg
lods
out
test
repz
xchg
or
test
push
lods
inc
push
xor
xchg
and
imul
aaa
aad
adc
je
mov
xchg
filds
sbb
int
sbb
sahf
jo
dec
dec
push
mov
cmp
sub
repz
pop
iret
and
xchg
iret
add
jmp
into
jl
mov
in
xchg
xlat
xchg
jbe
xlat
inc
add
dec
lcall
jge
pushf
xor
stos
push
into
scas
les
sbb
lock
mov
rcr
xchg
jne
push
ffree
lret
mov
mov
jne
xor
arpl
xchg
jl
mov
cmp
leave
inc
sbb
out
pop
mov
sbb
and
sub
aam
popa
pop
pop
out
inc
les
mov
das
xchg
sbb
loopne
adc
out
mov
inc
jae
movsb
mov
jbe
push
jp
cmp
adc
int3
cwtl
pop
mov
pop
das
xchg
dec
dec
scas
mov
rorl
dec
shlb
pushf
es
jbe
mov
loopne
sbb
cmp
sub
daa
test
lods
pushf
mov
addl
lret
jge
ss
mov
ret
data16
jle
std
push
sub
inc
mov
pop
xchg
divb
rorl
add
sub
aas
sbb
dec
push
in
loop
push
dec
jbe
bnd
jns
jmp
aaa
or
jg
dec
push
fstpl
or
jne
gs
lods
xlat
lea
mov
xchg
push
rorl
xchg
lret
lds
jp
popf
cmp
dec
outsb
jnp
or
jp
pop
aas
mov
sbb
mov
ret
mov
jecxz
arpl
push
xchg
ret
lock
jno
shrl
fdiv
mov
fstpt
jne
push
out
loop
pushf
dec
add
mov
icebp
stos
jmp
and
cmp
pop
addr16
imul
add
xor
mov
push
cmp
add
jge
loop
jne
xchg
add
outsb
mov
or
xlat
fimull
into
push
es
jg
lahf
test
adc
adc
mov
test
sbb
inc
aad
xor
mov
mov
push
pmulhuw
cmp
push
cmc
mov
jge
or
je
mov
pop
mov
test
lea
sub
add
push
ja
pop
cwtl
xchg
fs
test
pop
fs
dec
jmp
jle
mov
pop
add
mov
inc
roll
mov
pop
cs
mov
out
push
inc
lds
cmp
imul
pusha
push
outsl
aaa
stc
mov
xchg
aas
in
rclb
mov
add
push
jle
lahf
mov
mov
bound
test
add
xchg
push
outsl
popa
shrb
xor
in
fisubs
push
xchg
mov
shlb
mov
arpl
jae
rcll
rcll
fsubl
dec
std
adc
push
popa
mov
sahf
jnp
and
data16
sbb
test
fcoms
shl
sbb
sub
addb
shll
repz
xchg
in
stos
shrl
fwait
flds
hlt
ljmp
outsl
mov
add
inc
adc
gs
pop
scas
sbb
popa
lds
rcll
cmp
sub
mov
mov
outsl
pop
pop
sbb
dec
adc
jecxz
push
mov
sub
arpl
std
cmpsb
ljmp
xchg
sbb
xchg
mov
imul
xchg
xorl
adc
inc
push
mov
cmpsl
adc
nop
into
out
lcall
push
bnd
xchg
mov
mov
add
nop
sub
lock
sub
rdpmc
repz
fsubrs
mov
out
jbe
sbb
fwait
bound
loopne
lahf
mov
cwtl
push
fnstcw
xchg
xchg
shl
pusha
pushf
jbe
mov
cld
das
jg
lock
lods
in
mov
mov
sbb
lcall
add
or
adc
orl
xchg
push
xchg
inc
lahf
pop
sbb
in
mov
cmp
ljmp
push
cmp
sahf
and
ss
add
cmpsb
out
add
shr
push
dec
sbbl
inc
jl
not
adc
xchg
sub
xor
cmpsb
nop
test
sub
add
and
mov
or
inc
push
jmp
adc
pop
push
movsb
rcll
sub
push
add
xchg
lcall
sbb
dec
fs
aam
aaa
add
sbb
popa
outsl
dec
jle
xor
in
xlat
xor
jbe
or
jno
inc
cmp
jae
and
push
jp
movsl
mov
and
shlb
cltd
jecxz
insl
dec
lcall
fadds
mov
mov
xchg
jge
dec
jnp
xor
dec
xor
mov
in
xchg
push
lret
scas
push
in
hlt
mov
ja
and
add
push
test
sub
push
cmpsl
xchg
xor
pop
data16
pop
mov
add
mov
mov
mov
dec
outsb
mov
pop
das
int
dec
sub
jecxz
and
pop
stos
sti
mov
ret
int3
adc
sbb
out
hlt
adc
push
xchg
mov
aam
fucomp
inc
enter
jmp
dec
mov
dec
cmp
dec
jp
addb
mov
or
sub
hlt
push
ret
repz
jge
ljmp
adc
lret
test
jo
jg
xlat
cli
or
jnp
jno
mov
adc
inc
or
loopne
ficomps
ss
xchg
scas
out
add
and
xchg
pop
imul
je
xor
xor
iret
jg
mov
xchg
imul
les
sub
stos
cli
push
pop
jae
cmp
aas
xchg
or
idivl
mov
mov
push
scas
dec
movsb
ret
xchg
dec
mov
sti
xchg
xor
xor
xchg
mov
call
xor
jne
pop
or
or
mov
popf
aaa
add
in
pop
push
ret
xor
xchg
push
lcall
xchg
mov
xorl
or
enter
inc
cmp
xchg
repnz
mulb
or
cmp
frstor
lock
and
and
cmp
inc
jae
jg
stos
jge
dec
xchg
cmp
mov
inc
mov
dec
in
add
cmp
dec
adc
inc
jo
sub
pop
adc
adc
xchg
lods
fnstcw
sub
arpl
adc
fisttpl
push
clc
mov
fsubrl
scas
pop
out
sbb
insb
mov
test
or
and
scas
cmpsl
shlb
mov
das
add
pop
sbb
or
popa
xlat
sbb
push
cmp
adc
repnz
iret
arpl
mov
ret
inc
jmp
insb
mov
aas
jecxz
mov
jno
lret
fnsave
movsb
pop
pop
inc
cmp
mov
mov
fdivs
dec
ja
les
mov
loopne
negb
out
mov
in
mov
xor
faddl
xchg
loope
xor
or
scas
cwtl
outsl
pusha
fmull
ret
aad
push
jmp
mov
ss
jnp
je
pop
mov
loopne
loop
insb
repz
test
mov
dec
out
das
pop
or
xchg
fucomi
jo
sbb
mov
ljmp
ds
fldt
inc
jo
mov
xchg
aad
aad
scas
cmp
stc
pop
push
rorb
fcompl
ret
popf
cmp
enter
stos
pop
clc
sbb
mov
jp
fadds
pop
clc
icebp
lahf
xchg
cwtl
jmp
mov
fwait
pop
pop
ret
mov
rol
ds
or
push
jae
cs
int
js
lods
arpl
xchg
push
scas
mov
repnz
mov
mov
push
sub
sub
popa
lods
aaa
jbe
or
ja
jns
dec
inc
repz
push
mov
addr16
cs
pop
add
mov
hlt
mov
repz
movl
arpl
adc
add
lds
xor
pop
int
sti
push
xchg
out
out
sub
das
mov
out
clc
lret
mov
in
mov
push
pop
cmp
mov
xor
data16
mov
mov
mov
ja
data16
cmp
adc
adc
call
sbb
dec
xor
sub
add
push
lock
jb
mov
jns
inc
aad
rcl
mov
dec
ffreep
cmc
movsl
and
mov
fisubl
mov
inc
lods
inc
jno
inc
lods
stos
lahf
mov
xchg
ljmp
imul
dec
mov
xor
or
insl
testb
cltd
fdivl
fidivs
jmp
inc
push
sbb
adc
mov
movsl
shl
fmull
das
lock
aam
mov
loope
inc
push
sub
xchg
inc
sub
push
adcl
xor
lcall
fsubr
subb
sbb
div
fs
arpl
ja
enter
lods
mov
cmp
das
popa
test
popa
push
dec
mov
insl
lods
fs
jl
fldl
out
mov
add
out
xchg
mov
addr16
nop
rorb
aas
inc
fsub
in
fcompl
xor
dec
insl
mov
mov
fiaddl
aad
fs
and
mov
stc
stos
xchg
jecxz
xorl
fsubrl
movsl
iret
jmp
lea
call
adc
add
fwait
xchg
fldcw
add
int3
xlat
pusha
push
cltd
rcrb
inc
incb
pop
mov
add
out
adc
sub
fwait
jle
sti
bound
fwait
or
mov
inc
stos
mov
pop
enter
aas
cltd
inc
aas
or
sub
jecxz
inc
loopne
insb
call
jno
mov
divl
inc
xchg
loop
imul
insl
mov
cmpsl
cmc
cltd
ficompl
cmpsb
sbb
xor
or
notb
ds
fcoml
sub
ds
cmpsl
xor
ja
mov
push
mov
push
std
data16
fstpt
ss
cwtl
dec
mov
clc
and
inc
sub
loope
fimull
out
sub
mov
in
or
stos
js
push
jo
cmc
sub
test
push
pushf
test
sbb
sub
mov
inc
push
and
mov
cmp
xchg
inc
pushf
lret
mov
jle
insb
adcb
stos
push
popf
cmp
jne
jae
push
inc
sub
fadd
mov
mov
sbb
notb
push
popa
cmp
and
ret
push
ja
jecxz
insb
jl
push
xchg
stos
dec
adc
test
repz
mov
pop
sbb
cli
mov
sahf
jle
jae
mov
push
push
stos
pop
push
mov
test
pop
cltd
mov
cmp
fiadds
push
adc
out
jne
out
in
push
push
sub
fadds
pusha
fistps
sub
cmp
mov
jnp
jmp
test
shlb
pop
mov
mov
mov
mov
test
xlat
popf
dec
fidivl
iret
or
sub
sbb
outsl
sbb
mull
rcrl
sbb
fidivrs
or
adc
jg
xchg
dec
push
cmp
mov
jmp
arpl
pushf
pushf
pop
sbb
push
xchg
xchg
push
dec
sbb
inc
and
fidivs
inc
sub
test
out
aaa
jno
loop
scas
jle
jmp
sarl
adc
cmp
jo
sub
add
sub
nop
mov
lcall
loop
jge
pusha
stc
mov
fldcw
jne
cltd
push
sub
icebp
cli
outsb
insl
inc
jg
fisttps
add
cld
loopne
adc
arpl
fbld
cmpsl
in
leave
jbe
xor
in
ffree
fcoms
cmpsb
js
fwait
gs
and
jl
inc
testb
jg
sub
sub
pushf
loope
popf
jo
les
out
add
arpl
mov
mov
pop
xor
out
lods
add
pop
adc
xchg
loopne
test
push
inc
mov
push
push
je
sbb
push
es
imul
notb
out
mov
jle
xchg
shrl
pop
jno
pop
add
jae
dec
leave
mov
imul
sub
sub
mov
scas
mov
into
add
clc
sub
adc
js
dec
bound
out
mov
mov
xchg
adc
xor
cli
arpl
scas
mov
mov
or
shll
mov
mov
insb
mov
int3
mov
fidivs
jle
mov
pop
dec
es
cs
test
movsb
mov
jle
jae
cli
xchg
stc
ljmp
pop
das
add
cmp
push
jl
xor
sbb
jmp
sbb
fmull
xchg
mov
mov
sbb
mov
movsb
int3
push
inc
push
dec
push
insl
lock
stos
jo
jp
or
adc
and
inc
bound
dec
xor
cmp
push
movsl
aas
xchg
xor
ficomps
dec
mov
pop
dec
push
jns
inc
fisttpll
mov
jbe
jbe
out
add
mov
mov
icebp
sbb
or
aas
add
in
pop
xchg
xchg
mov
pusha
cmp
sbb
mov
mov
outsl
popa
leave
hlt
dec
fisttpll
nop
test
loop
adc
ja
scas
xor
push
push
test
mov
bound
jbe
sbb
sub
aam
push
inc
rolb
or
add
addl
sti
scas
nop
sti
insl
mov
sub
inc
pop
cmp
and
cmp
mov
je
jae
into
sbb
xor
cmc
pop
lods
test
out
pop
and
mov
xchg
sbb
mov
add
xor
jmp
inc
or
add
xchg
push
icebp
mov
iret
daa
mov
dec
mov
pop
push
stc
enter
ret
lock
jmp
and
in
ja
push
dec
stos
sti
call
jns
int
xchg
flds
test
xor
mov
push
dec
push
mov
fnstenv
mov
push
stos
xchg
mov
test
xchg
jne
pop
js
out
das
push
loop
fcompl
andl
xor
inc
xchg
incl
mov
pop
xchg
jns
popa
test
add
adc
rorb
inc
mov
cmc
addr16
aaa
inc
imul
nop
insb
adc
mov
into
sbb
pop
addr16
ljmp
test
jae
rcrb
or
aas
pop
std
aam
stos
jae
dec
xor
or
pusha
lock
inc
pop
ret
dec
roll
add
xchg
jnp
loopne
add
push
xchg
push
cli
loope
pop
or
xchg
jbe
faddp
imul
cmp
leave
rcll
imul
xlat
add
jp
ja
adc
or
push
ljmp
lods
and
dec
inc
in
dec
enter
in
addr16
ds
add
mov
lret
aas
pusha
mov
push
xchg
std
or
dec
jnp
sub
cmpxchg
mov
mov
or
nop
fisubrs
cmp
shlb
lds
inc
cs
sbb
jb
pop
add
sub
mov
mov
das
cmp
mov
adc
dec
gs
pop
mov
sub
dec
pop
out
jbe
or
addr16
push
xor
iret
mov
push
outsb
and
jno
pop
add
lcall
stos
imul
int
shrb
icebp
outsl
ja
ret
out
adc
xor
inc
clc
mov
cmp
inc
inc
adc
xlat
pop
cmp
fsubs
and
jae
or
subl
and
push
bound
sub
lds
outsb
sub
fldt
arpl
push
iret
int
repz
cmp
stos
das
xor
cmp
sbb
xchg
fsts
aam
xor
pop
jno
dec
mov
mov
clc
flds
loop
push
jl
imulb
daa
addr16
jne
sbb
inc
inc
repz
out
push
dec
pop
push
mov
dec
push
test
shll
inc
in
mov
xchg
mov
and
mov
and
fwait
mov
popf
adc
push
imul
and
xchg
inc
cmp
int
jne
rorl
call
pop
or
xor
jnp
popa
push
enter
inc
and
and
in
cmp
out
push
je
fildl
push
adcb
outsl
push
inc
outsl
xor
fcomp
daa
push
pop
hlt
pop
pop
jg
mov
adc
outsl
iret
adc
jbe
cmpsl
jne
mov
pop
dec
pop
cmp
test
into
jl
int
dec
popf
xchg
and
dec
mov
or
adc
sbb
shlb
mov
xchg
stos
icebp
jo
add
jg
imull
je
lods
inc
cwtl
jne
adc
loope
mov
cmp
inc
sahf
testl
mov
rorb
mov
lret
mov
test
xchg
loopne
mov
push
inc
nop
sub
cmp
adc
lret
push
dec
pop
lods
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
push
jb
daa
sbb
adcl
addl
adc
dec
xor
jne
mov
adc
ljmp
mov
mov
daa
stc
into
xor
add
mov
push
pop
divb
outsb
test
xor
sub
jnp
fdivr
in
movsl
idivb
getsec
jecxz
imul
aaa
sbb
fwait
popa
adc
xchg
inc
lock
fwait
pop
scas
add
xchg
ljmp
gs
jge
outsb
xor
pop
jne
andl
shr
std
pop
cmp
pop
pop
xor
jmp
je
push
dec
push
test
popa
stos
mov
jno
out
out
pusha
push
andl
pop
lods
push
enter
adc
clc
push
or
xor
popl
mov
pop
inc
lret
andb
dec
jae
orb
mov
jae
push
imul
and
out
fs
pusha
dec
mov
xchg
jns
xor
hlt
and
lods
lea
mov
inc
shlb
pop
xchg
popa
add
divb
std
dec
jo
ljmp
stos
jae
mov
iret
pop
cmp
js
and
dec
xchg
lods
adc
data16
jge
mov
mov
in
out
loope
inc
mov
mov
ret
imul
cmc
js
clc
scas
inc
lds
and
je
ror
inc
xchg
ret
push
push
dec
xlat
arpl
into
add
jl
in
lret
dec
or
pop
inc
push
out
movsl
dec
call
je
pushl
mov
push
rcrb
ljmp
daa
or
mov
fnstenv
les
enter
mov
cmp
dec
pop
rolb
fldenv
out
cmp
mov
imul
pop
mov
movsb
mov
fwait
movsb
push
lods
xchg
iret
jge
sbb
mov
movsl
add
js
jns
scas
push
mov
jno
pop
mov
hlt
mov
jbe
cmpsb
fimull
inc
pop
jb
icebp
pop
mov
jecxz
lcall
xchg
pop
push
stc
stc
xlat
xchg
adc
pop
nop
daa
lds
pop
jno
or
ja
and
cmp
jle
cmp
and
flds
lods
adc
sbb
movsb
iret
cmp
inc
inc
mov
adc
cmp
xchg
and
and
int
aas
push
mov
stos
aas
loop
push
addr16
adc
scas
fnstsw
or
pop
not
cwtl
lret
lds
sub
das
adc
outsb
or
jno
ds
cmp
sarl
clc
ja
xor
push
pop
in
pop
mov
imul
lahf
insl
cld
iret
inc
adc
stc
test
push
fisubs
jecxz
int
cmp
or
das
fisttpll
aas
leave
cmova
jl
push
adc
insl
cwtl
shrl
sub
sbb
std
mov
dec
arpl
push
dec
mov
cwtl
sbb
out
dec
call
scas
mov
shll
nop
pop
test
and
test
push
enter
les
out
cmp
call
mov
lcall
push
xchg
pop
rcrb
cltd
jl
stos
cs
dec
cmp
shrb
inc
sarl
or
xlat
jns
outsl
sub
insl
inc
or
inc
loop
imul
cmpsl
xor
and
mov
adc
lret
iret
xor
lock
xor
cli
fistpll
jge
aam
jne
in
es
fnstcw
adc
mov
xchg
jb
mov
mov
add
ret
enter
push
scas
inc
dec
movsb
test
xchg
dec
cld
scas
in
dec
aas
cmp
mov
add
pop
and
rclb
dec
jns
push
mov
ljmp
int
push
add
jg
out
xchg
sub
and
adc
lret
ja
lods
shll
lcall
push
sub
arpl
xor
movsb
or
dec
mov
je
out
stos
adcb
movsb
jns
sub
cld
xchg
jbe
test
xchg
movsl
jo
dec
push
insb
sub
sbb
scas
cltd
sub
dec
into
je
mov
sub
xchg
xor
inc
push
cmp
and
ljmp
in
xchg
xlat
mov
xor
mov
ret
addl
mov
push
rorb
je
dec
nop
loop
inc
pusha
jp
pop
sub
xchg
cs
inc
sahf
movsl
cmpb
jo
or
mov
and
dec
cmp
push
jp
mov
mov
scas
xchg
jmp
fs
mov
push
push
xchg
pop
push
mov
daa
mov
lret
xor
push
mov
into
lret
hlt
inc
sub
lea
inc
xor
dec
cmpsb
xlat
cmc
mov
stos
in
fcoml
sub
arpl
pop
push
xchg
lcall
mov
cli
dec
cwtl
stos
cltd
inc
cmp
pop
cmp
xchg
lods
xor
je
jle
aas
mov
or
ss
ja
adc
bound
xchg
nop
inc
xchg
daa
jbe
mov
test
sub
xor
out
adc
das
dec
jg
xor
in
push
push
lds
pop
iret
lahf
push
xor
inc
add
iret
adc
jo
loop
sbb
dec
cmp
pop
and
test
rcrb
push
sub
and
loope
inc
test
sbb
fistpll
xor
mov
pop
or
in
les
scas
into
dec
mov
sbb
adc
mov
cmp
popa
sbb
lret
fsubr
cmp
dec
push
aaa
imul
and
xor
xlat
jbe
adc
pop
jno
scas
cmp
inc
bound
fdivl
mov
or
jno
std
sub
fbld
dec
push
out
mov
sub
sub
fsubs
jge
popf
sub
dec
es
fists
push
xchg
lods
sbb
adc
cmpsb
shlb
orb
ret
aam
andb
loope
aad
lret
outsb
add
sub
popa
sub
out
movsb
xchg
out
cvtpi2ps
mov
inc
inc
inc
stos
or
push
arpl
shlb
jge
outsl
xchg
rolb
imul
or
add
push
arpl
jns
add
adc
or
sub
rolb
rol
popf
js
cli
pushf
and
sahf
in
pop
sub
and
fcmove
fistl
aas
xchg
mov
ret
or
aam
into
sub
inc
cmpsb
sbb
mov
out
add
dec
push
leave
xor
mov
ds
cmpsb
pop
cmp
sub
in
mov
shlb
addr16
sbb
das
xchg
pusha
faddp
aas
test
pushf
aam
fwait
xchg
lcall
imul
push
loopne
sbb
fsubr
mov
mov
stos
pop
movsl
xchg
cmp
mov
outsl
and
xor
clc
roll
pop
jmp
sub
nop
fs
andl
sarb
bt
push
arpl
xlat
jno
push
jecxz
or
fmuls
push
mov
xchg
xchg
dec
push
mov
dec
aad
mov
cmp
jae
pop
push
and
aam
ljmp
not
addl
pop
push
xor
add
pop
sub
dec
dec
pop
std
push
sarl
mov
jae
jb
mov
pop
sbbl
push
xor
push
dec
mov
or
jmp
std
gs
jle
dec
loope
insb
fldl
lock
or
jmp
repnz
inc
mov
insl
mov
cwtl
mov
adc
repz
aad
and
inc
sub
lret
lods
loope
test
test
mov
movsb
mov
jnp
pop
xor
inc
xchg
lea
and
loope
xchg
test
movsl
nop
xchg
mov
leave
outsb
testb
xchg
cs
xchg
ja
popa
xchg
cmc
mov
adc
push
push
add
cmp
push
addl
jb
and
int3
test
pop
xor
add
aam
in
rcll
ret
imul
pop
jne
jmp
mov
lcall
aas
lea
test
sub
call
mov
movl
jmp
and
cmpsb
inc
ret
jp
push
loop
xor
imul
mov
inc
test
pcmpeqb
adc
xor
cld
xchg
mov
xor
pushf
inc
jno
jbe
addr16
mov
mov
jp
sub
add
loope
fisubrs
loopne
adc
jo
aad
mov
mov
movsl
inc
xchg
out
jp
dec
pop
adc
add
sub
and
imul
xchg
inc
test
inc
pop
dec
xchg
inc
fs
aad
pop
mov
dec
out
movsl
enter
push
or
jbe
xchg
shl
pop
and
stos
lcall
mov
inc
sbb
and
clc
jno
iret
xor
cmp
xor
pop
ficoml
sub
popa
cs
push
push
loopne
sub
inc
lea
ljmp
adc
sub
arpl
or
sahf
lock
shll
je
mov
pop
aaa
gs
jbe
xlat
imul
push
or
mov
pop
mov
sub
cmp
mov
dec
in
mov
xor
daa
dec
xlat
pop
mov
push
or
pop
rorl
xor
stos
jo
fsubs
mov
loop
stos
lret
lods
and
pop
lret
add
and
sbbb
arpl
and
sub
push
push
sub
sbb
shlb
mov
hlt
in
loopne
mov
xor
inc
out
shll
fs
test
pop
incl
mov
inc
xchg
inc
pop
inc
mov
test
test
popf
in
xchg
cld
out
pop
push
jo
int
push
ret
icebp
das
add
lret
sub
sub
fldlg2
mov
push
mov
mov
push
pop
repz
rcrb
loop
cwtl
fcmove
add
nop
push
adc
pop
in
adc
stos
or
pusha
jo
dec
test
adc
divl
es
lcall
sbb
aam
jmp
lcall
pop
sahf
stos
inc
or
xchg
lock
add
div
outsl
xchg
add
push
and
aas
xchg
inc
dec
outsb
sub
in
pop
push
mov
lret
lds
inc
fdivl
cmpsb
add
mov
jae
ja
xchg
es
bound
push
xchg
ret
sbb
lcall
or
shll
sub
sbb
into
test
aam
inc
lcall
xchg
sahf
sti
outsl
dec
lods
scas
jl
push
xchg
je
inc
loope
add
movsb
sub
call
adc
jno
adc
les
mov
xlat
dec
mov
pop
ret
pusha
imul
lock
mov
jmp
cwtl
sbb
rcll
mov
adc
cld
outsb
dec
mov
ja
push
xchg
push
test
xchg
lret
shll
xor
jno
fiaddl
or
inc
dec
fstl
push
mov
jo
sub
cwtl
in
shlb
adc
enter
inc
sbb
mov
sbb
and
icebp
std
scas
jge
fsubs
jne
jge
add
or
sbb
lcall
mov
fwait
or
stc
push
inc
mov
sbb
movsl
ds
stc
mov
xor
fstpt
call
dec
jbe
lock
push
lods
push
mov
divl
jl
mov
sbb
cmc
mov
cmp
and
fcomps
lret
test
xchg
ret
int
or
movsb
push
insb
mov
sbb
or
sub
xchg
xchg
add
test
sub
mov
pop
loop
cmp
je
bound
clc
push
loopne
xlat
mov
inc
punpckhbw
mov
sbb
jbe
aas
inc
jb
add
mov
cmpb
insb
pusha
and
test
jg
std
mov
jo
sbb
cwtl
rorl
aas
pop
inc
and
je
and
adc
pop
mov
popa
and
add
mov
sbb
out
jle
inc
cmp
test
adc
loopne
sbb
dec
cli
add
xor
mov
jo
and
xchg
fs
inc
jle
xchg
xchg
pusha
or
pop
jne
or
imul
pop
pop
and
dec
repz
nop
xor
push
mov
mov
clc
lcall
jmp
cwtl
jle
dec
pop
js
das
cs
fdivs
mov
scas
push
xchg
imul
cmc
ret
xorl
jmp
and
dec
ret
cmc
arpl
imul
sbbb
push
nop
add
rorl
jns
lahf
add
shlb
mov
sub
and
shrl
idivb
dec
insb
add
mov
adc
aad
add
mov
mov
out
mov
pop
test
ja
in
add
mov
push
aas
cltd
xchg
cltd
sbbl
lods
sbb
pop
push
push
xchg
xchg
adc
sub
mov
out
xor
cmc
adcl
test
sarb
add
fiaddl
pop
jo
lods
xchg
out
stos
jb
lds
dec
adc
cmp
aad
jge
adc
aad
xor
jbe
stos
pop
movsb
inc
and
mov
xchg
iret
ret
mov
in
sbb
xor
lock
out
loop
or
cmc
hlt
jge
stos
fldt
sub
stos
mov
sub
ret
jae
stc
mov
rcrb
adc
mov
cmp
push
mov
cmp
cmc
jne
add
sub
and
inc
push
sub
mov
das
je
cs
inc
push
ror
push
into
sub
push
cmpsl
adc
roll
stos
les
adc
adc
xchg
mov
es
add
and
in
mov
cmp
jl
pop
xor
negl
jno
iretw
inc
push
out
inc
push
pop
jno
loope
and
xor
sub
mov
cwtl
iret
add
cmp
ljmp
rcl
mov
stos
lcall
aad
andl
inc
je
and
ds
addl
dec
xchg
outsb
addb
mov
jbe
dec
dec
flds
xchg
cmpsl
xlat
aaa
pop
cmp
xor
dec
lods
xchg
faddl
mov
enter
loopne
or
fidivrs
pushf
lcall
push
or
inc
inc
aam
loope
inc
push
adc
pop
inc
into
lea
int3
ss
pop
movl
mov
fmulp
fbld
jmp
dec
xchg
push
nop
clc
test
mov
stos
push
test
rolb
dec
add
mov
popa
add
lret
pop
push
loop
jle
cmp
and
fwait
lahf
inc
lcall
fsubr
pop
je
xchg
mov
sub
jne
cltd
sub
and
insl
dec
or
xlat
xor
jl
xor
das
mov
ss
push
adc
dec
add
fstpt
pop
test
xchg
leave
and
es
repnz
and
dec
sbb
ss
cmp
aaa
fmull
out
add
adc
gs
orb
inc
mov
cltd
lcall
sbbl
cmpsl
std
adc
notl
sub
ljmp
ret
mov
icebp
pop
sub
or
jb
dec
mov
or
and
sbb
test
inc
aad
pop
xchg
nop
iret
xor
xchg
aaa
lret
xchg
xor
jne
cmp
and
inc
jns
jnp,pt
popa
testl
adc
jns
dec
add
mov
daa
xor
fisttpl
out
pusha
xor
mov
sbb
adc
sub
pop
and
jecxz
inc
mov
inc
out
adcl
push
sahf
cmp
pop
test
add
sub
cmp
add
into
lahf
cmp
cmp
adc
dec
clc
and
outsl
cmp
or
popa
sbb
dec
int
mov
scas
mov
xchg
sbb
loopne
xchg
out
jp
faddl
adc
mov
or
pop
pop
les
jle
in
adc
cmp
adc
mov
mov
sbb
mov
mov
pop
lahf
xchg
adc
ss
dec
mov
out
sbb
mov
test
sbb
adc
mov
ja
mov
mov
lds
jl
mov
jmp
pop
cld
ret
dec
or
popa
cmp
xor
sbb
leave
mov
stos
in
fcoml
xor
inc
xchg
pop
nop
scas
mov
fsubrs
js
jecxz
sbb
cld
pop
imul
mov
test
loope
in
push
movsb
add
scas
test
out
mov
xchg
dec
lret
test
pop
rcr
int3
inc
mov
cmp
sub
xor
or
leave
imul
lret
jb
imul
bound
xchg
fucomi
call
adc
dec
ret
lcall
push
inc
mov
cmp
cmp
push
into
movsb
fimull
sub
test
cld
cltd
jmp
xor
or
mov
inc
mov
push
std
lea
hlt
gs
jmp
loopne
or
mov
push
adc
rcrl
inc
pop
shrb
sbb
and
adc
mov
in
lods
push
mov
jns
lahf
xchg
test
sbb
xrelease
hlt
push
sbb
arpl
nop
and
and
pop
movsl
mov
les
les
sub
in
cmp
icebp
pop
xchg
outsl
das
stos
cmpsl
dec
jnp
jb
mov
insl
ds
add
mov
inc
outsb
pop
and
outsb
mov
push
adc
fcomp
adc
nop
xor
cmp
fildl
out
test
mov
les
mov
aas
jle
lock
lods
or
jl
lcall
fisttps
push
cmp
mov
cld
dec
pop
cli
adc
inc
dec
xor
xor
jmp
imul
dec
imul
dec
jecxz
sub
adc
xor
mov
xor
lea
sbb
mov
cmp
dec
jnp
les
or
sub
add
div
push
cwtl
fs
add
or
sbb
jnp
inc
sub
push
mov
sahf
and
inc
add
ss
hlt
loope
lret
push
test
in
inc
cmc
jge
sar
mov
jne
daa
movsb
movsb
movsl
inc
pop
push
sub
xlat
test
shr
sbb
aam
frstor
std
adc
std
adc
jo
xor
into
xor
jae
mov
push
cmovne
pop
fstpl
repz
imul
mov
dec
rcl
sbb
xchg
testl
add
mov
mov
adc
pop
jb
pop
pop
fbld
sarl
add
jbe
int3
and
and
es
daa
or
dec
sbb
dec
js
cld
pop
xor
test
sub
cltd
in
repnz
push
movsl
sub
dec
ljmp
dec
fwait
sbb
cmc
sbb
cld
decl
adc
mov
add
push
sub
scas
pop
rcrb
cmp
jge
dec
push
add
call
mov
pop
lret
dec
mov
ror
mov
movsl
stos
xchg
jge
cmp
mov
mov
lods
ret
mov
fimuls
xchg
adc
inc
jo
insb
xchg
add
push
clc
mov
int
jecxz
cwtl
xchg
xchg
adc
int3
dec
and
repnz
out
popa
inc
out
push
xor
fsubrl
std
in
das
lcall
rcl
jg
test
ror
mov
cmpsb
inc
pusha
mov
fcoml
and
movsb
repz
or
ja
mov
aad
cmp
pop
and
add
insl
push
lods
inc
in
gs
jb
push
or
rcll
push
add
mov
add
adc
adc
lods
hlt
lret
pop
add
sbb
ret
jl
or
fists
push
xor
inc
cmp
fdiv
inc
xor
push
out
xor
andb
mov
push
shrl
adc
and
xor
mov
enter
loope
jae
insl
cwtl
cmp
dec
adc
lods
cmp
pop
pusha
jo
hlt
cmp
inc
and
inc
cmp
enter
in
ss
cmp
ret
dec
push
bound
fldl
icebp
sub
inc
out
sbb
sahf
cmp
gs
add
insl
mov
cld
pop
pop
pop
and
mov
std
test
mov
loop
out
stc
push
push
in
outsl
jl
sbb
push
mov
cs
push
mov
addb
roll
lods
add
push
push
push
jnp
mov
pop
pop
push
leave
or
ds
sbb
das
sub
or
sbb
add
sbb
cmp
and
pop
mov
adc
jmp
std
mov
dec
lods
adc
mov
adc
adc
test
leave
mov
mov
or
sub
rcll
data16
cli
dec
adc
add
sbb
testl
fdivl
xor
pop
sbb
fcoml
out
xchg
hlt
ret
loope
mov
test
jnp
mov
int3
or
push
pop
sbb
aaa
cmp
cmc
xchg
cmp
pop
push
scas
in
lock
jo
mov
push
lahf
xlat
gs
push
aaa
outsl
mov
mov
cltd
and
pop
outsb
fildl
out
mov
jg
ret
bound
inc
or
lahf
loop
leave
mov
jge
hlt
xchg
je
xchg
insl
dec
dec
fldl
fcmovnu
mov
push
lds
xor
jno
mov
push
outsb
push
jg
mov
sbb
cmp
mov
xchg
and
push
rcrb
jae
pop
mov
enter
jmp
xchg
xchg
xor
dec
mov
mov
sub
push
sbb
cmpsl
or
cmp
ret
lods
fimull
adc
das
pop
js
jp
cmp
aam
adc
in
push
lock
or
fisubrl
xor
and
mov
dec
jmp
inc
add
aas
les
jmp
and
xorl
xchg
jecxz
mov
js
inc
cld
mov
jns
and
negl
xlat
push
cmc
fildll
cmp
mov
jb
leave
adc
std
aaa
addr16
xor
pushf
sub
jbe
filds
xor
push
into
data16
xchg
cmp
cli
lcall
mov
sub
scas
push
lahf
insb
sbb
xchg
aaa
lds
xor
sti
cmpsl
add
pop
dec
cmp
in
add
and
pop
dec
pop
sub
pushf
ret
add
cld
mov
stos
mov
inc
sub
mov
cli
add
sbb
in
cmp
mov
sbb
adc
add
addl
jae
fsubl
ja
add
lret
cld
xor
in
mov
fidivrs
neg
fcmovu
mov
lods
push
lds
and
push
and
out
mov
push
js
aam
mov
outsl
inc
mov
sbbb
push
ja
inc
cmpsb
mov
fucom
push
jle
xor
mov
jl
mov
cmp
sub
or
jae
push
pop
rorl
lret
xor
cmpsl
hlt
int3
adc
cmp
jne
jae
jns
mov
pushf
cmp
push
insl
push
sahf
cld
out
or
jge
jns
je
jle
adc
mov
aam
cmc
arpl
push
cmp
fmuls
in
imul
cmp
ljmp
pop
cwtl
rclb
jnp
sub
push
push
shll
sub
mov
rorb
adc
jg
bnd
add
rcll
std
cmp
cmp
mov
and
add
inc
sbb
bound
xchg
aad
repnz
stos
jo
xor
imul
inc
test
sub
inc
dec
cmp
ljmp
xor
jbe
push
out
rcl
aam
jle
or
pop
push
repnz
data16
jl
cld
pushf
mov
test
sbb
pop
into
imul
mov
jbe
jne
lods
cmpsb
jg
out
aam
cmpsb
and
fwait
nop
dec
mov
cmp
jo
mov
stc
test
iret
and
xchg
adc
push
or
imul
pop
adc
sub
push
dec
mov
jno
popa
mov
add
clc
push
mov
dec
lea
loopne
rcll
sbb
xchg
in
pushf
mov
jle
jp
jns
clc
pop
mov
cmpsb
push
in
push
pop
in
stc
dec
test
nop
outsb
ffreep
dec
mov
pop
push
cmp
lahf
inc
sti
std
xchg
xchg
jle
mov
and
push
and
inc
scas
add
lods
cld
or
dec
xchg
push
fstpl
ds
cli
filds
fdivr
mov
sahf
xchg
lods
adc
outsl
mov
dec
push
ljmp
aam
xlat
and
sti
cmpsl
subl
add
sub
into
into
sub
push
jmp
mov
sbb
xchg
les
dec
cmp
inc
inc
dec
add
test
pop
sub
loop
xchg
push
loop
daa
push
cmp
mov
ds
mov
adc
cwtl
xlat
jl
stos
ret
jl
int3
in
adc
sub
outsl
fwait
int
cltd
das
test
icebp
xchg
cmp
dec
push
call
push
orb
ret
inc
inc
int3
dec
push
cmp
mov
push
je
cmp
out
jp
arpl
sti
inc
shll
inc
imul
mov
cwtl
inc
xchg
inc
or
mov
and
subb
xchg
out
pop
mov
fisubl
shlb
dec
pop
outsb
lods
push
xchg
dec
cmp
stos
mov
vmovmskps
les
ss
in
cs
clc
les
sub
add
mov
jo
sub
es
jns
push
addr16
std
or
out
pop
adc
add
loope
mov
or
dec
or
cmp
xchg
mov
int
inc
push
out
mov
fiaddl
add
jecxz
and
xor
repz
es
dec
and
cmc
jg
daa
mov
cmpsl
rorl
cltd
adc
popa
js
iret
sbb
cmp
and
scas
clc
mov
mov
jle
or
lcall
aam
sti
std
mov
push
push
inc
xchg
movsl
sbb
mov
pop
sub
sbb
inc
sbb
loop
xlat
mov
or
mov
imul
push
pusha
insl
test
ja
cmp
inc
xlat
sub
jns
test
test
add
xor
inc
seta
in
aam
fisubs
push
faddl
jbe
sbb
sbb
call
mov
sub
mov
scas
cltd
rclb
cmp
or
mov
or
hlt
fadd
or
cli
das
xchg
xchg
mov
dec
push
fcomi
ds
xchg
sub
lret
mov
jne
mov
adc
stos
push
arpl
sahf
dec
mov
dec
popa
fstpt
pop
and
mov
cmp
jb
jge
xchg
mov
inc
call
add
aad
lea
jno
bswap
pop
dec
xchg
jge
ljmp
je
push
pop
xchg
inc
sub
adc
pop
mov
ss
pop
fcompl
loop
xor
in
insl
js
xor
movsl
jg
xchg
xlat
test
push
xor
data16
out
mov
aaa
push
xor
xor
jnp
lds
test
or
lds
xchg
nop
mov
mov
xchg
mov
cltd
dec
fistpll
shll
xor
sub
xor
stos
gs
jns
popa
mov
push
add
pop
aam
jne
and
out
jbe
repnz
xchg
imul
hlt
xchg
lcall
jbe
pop
pop
out
rcrl
add
push
sbb
je
enter
loope
and
pop
les
cmp
arpl
imul
ja
iret
cmpsl
lret
jmp
mov
stos
cmp
cmp
fldl
adc
orl
mov
mov
xchg
jl
mov
decl
push
out
dec
scas
aas
and
cmpsl
cmpsl
cli
push
fbld
lods
pop
ss
filds
ja
dec
dec
mov
mov
dec
cmp
xchg
inc
hlt
jmp
movsb
ret
sbb
mov
jo
push
xchg
loope
divb
jmp
popf
sahf
dec
xor
scas
shrb
test
lods
dec
test
push
add
daa
and
fiadds
imulb
fisttpl
mov
mov
mov
sbbb
sub
bound
pop
xorl
push
xor
cmp
sbb
iret
das
cli
jne
cmpsl
ficoms
mov
push
hlt
ds
loop
mov
rcll
addr16
arpl
scas
rcrl
out
mov
jge
xor
jnp
push
addr16
or
mov
adc
pop
fistps
sub
cmp
icebp
insb
push
add
push
xlat
sub
mov
out
bound
rcrl
jb
pop
imul
lea
push
cli
notl
js
inc
das
xchg
lret
inc
pop
add
jns
loopne
add
inc
jae
sbb
cmp
ja
pop
test
jp
into
sub
lret
int
xor
mov
mov
and
cs
lahf
rorb
mov
dec
lahf
sbb
fildll
pop
das
push
pusha
push
js
push
jmp
fstl
or
inc
movsb
jbe
shrl
pop
jmp
lret
lret
scas
sbb
push
sub
in
cli
jge
stc
rcll
push
adc
and
aad
sbb
mov
div
add
sahf
sub
jecxz
adc
inc
xchg
mov
ljmp
mov
loopne
leave
mov
cmp
mov
add
mov
test
jle
enter
xchg
ret
nopl
jb
in
lret
add
jo
mov
or
fwait
pop
sbb
xlat
mov
jo
fldl
leave
mov
shlb
or
test
dec
push
mov
cld
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rcll
inc
stos
aas
mov
pop
addl
stc
push
int
ljmp
add
es
test
adc
jae
test
xchg
cli
call
enter
aas
xchg
in
imul
cmp
or
popa
jp
dec
call
repz
orb
nop
ret
mov
jl
pop
xchg
data16
xchg
or
cltd
rolb
jecxz
inc
ds
aas
sub
incb
cmp
ret
scas
std
arpl
dec
icebp
lret
add
sbb
iret
arpl
adc
push
arpl
mov
ret
mov
in
or
pop
dec
notl
cmpsb
pop
scas
or
stos
sbb
mov
addr16
jecxz
mov
mov
fsubrl
dec
stos
lcall
ret
lds
in
jmp
lret
pop
aad
mov
inc
dec
pop
out
mov
xchg
sub
mov
iret
dec
ss
cs
jne
fwait
pop
cmp
iret
stos
mov
push
pop
xchg
lcall
cmpl
hlt
jl
add
or
add
inc
fstps
out
jnp
outsl
dec
push
lcall
xlat
imul
xlat
pop
mov
lods
cwtl
insl
inc
loop
outsb
adc
pop
push
or
push
outsl
icebp
pop
dec
add
cld
lret
cmpsb
or
inc
sub
inc
xchg
mov
and
mov
lock
into
sbb
outsb
push
pop
jmp
aas
mov
jp
sbb
loope
push
pop
fs
out
jle
les
mov
cmp
popa
push
pop
fcomps
stc
jecxz
fisubs
adc
cmp
cmc
out
rolb
mov
xchg
and
cwtl
xor
test
fbstp
mov
jns
mov
lret
iret
imul
mov
insl
addr16
test
aas
jecxz
out
or
or
push
movsl
mov
jmp
pop
push
inc
lods
mov
jno
cmpsb
mov
inc
ficoms
add
fwait
cld
xchg
pusha
popf
pushf
pop
pop
xor
push
or
mov
aaa
roll
add
push
jae
push
pop
test
push
sub
outsb
jge
arpl
inc
fld
stos
mov
add
mov
mov
cmp
mov
testl
test
gs
int3
ret
xchg
or
lret
std
pop
xchg
adc
mov
dec
call
mov
lea
inc
popl
in
popa
popf
in
sub
ret
mov
in
jl
addr16
jmp
lock
xchg
loope
push
push
xor
popf
scas
jle
or
test
or
jo
mov
mov
and
arpl
sbb
sahf
adc
sbb
and
jno
into
sub
iret
jns
mov
cmp
cmpb
fcmovnbe
je
cpuid
sbb
dec
loopne
or
imul
fistpll
mov
fdivs
mov
add
cmc
sbb
adc
pop
scas
inc
mov
pop
shlb
icebp
shrl
xor
add
cltd
data16
mov
xchg
lea
outsl
in
mov
inc
je
iret
sarl
add
lea
subl
mov
fneni(8087
xor
lcall
jb
sub
dec
dec
mov
mov
subl
adc
add
test
mov
fbld
loopne
rorb
dec
xor
mov
cwtl
daa
pop
enter
mov
cltd
jbe
adc
and
iret
frstor
lcall
scas
insl
push
cwtl
mov
outsb
loope
jg
add
addr16
pop
mov
adc
push
rorb
incb
in
adc
dec
scas
fistps
stos
pusha
lea
dec
std
das
sbb
repnz
xor
insl
mov
dec
xor
jo
jmp
rcrl
push
pop
mov
jge
sbb
dec
les
mov
cmp
fs
dec
mov
in
mov
fcoml
int
cwtl
mov
cmp
aad
movsb
lea
jae
adc
push
aad
cmp
pop
and
push
outsl
loopne
fadds
add
dec
ret
cltd
dec
jl
dec
push
sub
lcall
pop
jl
mov
test
sbb
stos
mov
jae
int
mov
push
pusha
mov
out
push
fs
fstpt
inc
adc
fimuls
test
add
mov
mov
dec
scas
fists
lcall
mov
push
lea
stos
adc
add
ljmp
sarb
ja
sub
xchg
jnp
add
jmp
fldt
fadds
xor
ficoms
pop
inc
inc
fdivr
clc
pop
push
ret
cmp
shll
aaa
popa
push
mov
mov
out
in
dec
sub
or
mov
mov
test
ljmp
lret
ret
clc
jne
adc
xchg
jns
rorb
cmp
sub
das
std
fwait
js
mov
pusha
inc
cli
out
jg
sahf
add
sbb
add
imul
fsubr
sub
push
test
in
ljmp
push
aam
sahf
jns
repnz
inc
cmp
rol
lods
jp
in
push
xor
push
in
fldl
js
mov
test
jge
scas
or
icebp
test
addb
popa
jl
xorb
jg
xchg
push
add
mov
cwtl
push
dec
add
cmp
cmp
mov
adc
push
test
push
shlb
pop
js
rclb
mov
sbb
inc
adc
push
out
popa
scas
pushf
xchg
aaa
pop
fists
xchg
pop
fists
mov
inc
popa
fwait
es
mull
or
cmp
lds
ficoml
rclb
dec
in
cmpsl
push
xchg
jne
pop
pop
aas
fnsave
dec
cli
cmc
jno
jle
jbe
push
in
ljmp
push
leave
or
movsb
adc
pusha
test
imulb
lods
nop
in
inc
inc
and
outsl
mov
mov
or
int3
xlat
leave
pop
mov
pop
adc
fwait
and
pop
jo
push
mov
testl
sub
push
dec
cmpsb
mov
lods
aam
test
negl
add
push
arpl
aad
or
adc
mov
sub
pusha
in
inc
cmp
cmp
fdivs
xchg
xorl
rclb
enter
or
repz
insl
dec
mov
pop
jg
mov
ficoml
inc
cmpsl
scas
push
lret
jle
mov
cli
int3
enter
adc
mov
add
out
dec
mov
xchg
insl
aam
enter
cmp
in
mov
xchg
xlat
cmp
push
jne
inc
push
cmpsb
adc
add
popf
adc
lock
cli
lahf
scas
pop
in
push
lahf
in
dec
push
push
push
insb
xchg
sub
ja
add
xor
dec
xchg
sbb
mov
aad
pop
int
push
movsb
add
test
cmp
popa
in
mov
xchg
dec
push
push
addr16
pusha
mov
test
imull
cmc
outsl
ficompl
hlt
mov
push
cmp
or
pop
xor
mov
sbb
adc
test
mov
ss
scas
scas
jmp
cmp
inc
cld
lret
push
rclb
sbb
mov
mov
xchg
loope
mov
inc
mov
ret
and
or
jecxz
xor
xchg
cltd
pop
mov
push
dec
outsb
scas
mov
xchg
rorb
ja
dec
testb
dec
leave
mov
std
sti
mov
stos
hlt
imul
in
enter
mov
jp
mov
shrl
cwtl
sub
jne
hlt
push
in
sbb
cmc
loope
cmp
ss
mov
dec
mov
pop
add
in
xor
mov
mov
stos
lret
pusha
bound
pop
xchg
cld
ja
mov
or
sbb
movsl
mov
or
mov
add
ret
push
ret
push
push
dec
add
pop
scas
xchg
dec
dec
mov
mov
pop
jo
xchg
mov
pop
sarl
jmp
decb
clc
cmp
adc
out
add
andl
dec
data16
adc
sub
sbb
dec
mov
inc
insb
bound
out
or
gs
pop
mov
loopne
jbe
call
adc
cmp
cli
inc
xor
idiv
outsl
rcrl
enter
call
incb
adc
xchg
fstpt
xchg
out
in
les
fmuls
cld
cmp
mov
or
push
js
or
xchg
adc
and
and
fldcw
cmp
pop
dec
pop
cld
das
xchg
lcall
pusha
test
in
sbb
sub
xor
out
mov
add
sbb
test
dec
int3
test
xchg
fs
jp
adc
nop
sar
mov
test
dec
mov
pop
ficoml
fstpt
jle
mov
cmp
xchg
lock
bound
dec
jne
pop
in
scas
xor
pop
push
add
cs
or
mov
fs
leave
mov
daa
jbe
mov
fistps
ret
dec
lret
loop
movsl
mov
cmc
and
push
rcll
xchg
repz
fldenv
ret
pushf
leave
pop
or
cmp
xor
adc
rcrb
ss
push
push
nop
xchg
jp
add
das
xorb
add
and
push
sbb
dec
dec
or
ret
mov
jle
aam
or
mov
xchg
jne
pop
pop
or
xchg
cltd
sub
popf
stos
jnp
jbe
sub
js
pop
xor
shrb
inc
sbb
notl
or
or
aas
fdivrl
cli
jge
aaa
outsb
mov
je
hlt
sub
add
jg
push
and
lret
repnz
fsubrl
or
arpl
push
addb
out
sbb
aad
mov
shlb
fldl
fdivl
popa
daa
push
test
cmpsl
je
mov
xchg
add
cmp
or
xchg
xor
lock
stos
shlb
call
pop
in
js,pn
and
inc
mov
sbb
int3
shlb
mov
push
mov
lods
test
jle
enter
or
stos
and
fldcw
in
jnp
and
les
sub
ljmp
cwtl
retw
mov
ss
leave
jmp
out
daa
pop
std
int
bound
mov
mov
jl
push
cld
inc
sbb
mov
pop
mov
fldcw
cmp
adc
mov
mov
and
dec
jns
hlt
lret
push
ds
or
rorl
inc
push
push
stc
jecxz
aam
fcmove
inc
loopne
hlt
or
xor
ja
mov
jmp
inc
test
mov
mov
sti
xchg
mov
mov
mov
sbb
lock
sbb
std
and
add
add
sbb
frstor
xchg
sbb
cmp
std
inc
xor
pop
sub
mov
add
out
adc
mov
jmp
inc
sbb
hlt
jnp
bound
repz
fsubs
icebp
add
hlt
adc
in
cld
xchg
xchg
and
jbe
mov
jae
jecxz
xchg
outsb
outsl
in
inc
sub
insl
jg
dec
int
pop
or
data16
add
push
add
lret
mov
xlat
xor
sub
pop
popf
test
xor
inc
je
jg
mov
inc
repz
movsb
or
stos
cmp
add
scas
add
mov
push
or
add
fisubrl
repnz
scas
jne
mov
adc
lahf
arpl
push
or
mov
pop
cmp
idiv
push
mov
bound
pop
pusha
jp
data16
nop
sbbl
adc
mov
xor
xor
movsl
and
xor
inc
or
roll
xor
into
test
jl
cmc
add
adc
jg
outsl
popf
push
outsl
fsubrs
sub
mov
push
add
ffree
out
sahf
xchg
cmpsl
lcall
push
popa
jg
jno
out
xlat
fistpl
sbb
aam
leave
sub
or
cmpsl
mov
sti
scas
mov
filds
xchg
xchg
data16
fs
mov
movsb
cld
push
out
test
ljmp
lods
nop
lret
or
out
arpl
sbb
ss
jl
fnsave
add
pop
push
mov
xor
cmp
sbb
lret
push
push
cmp
in
jmp
push
or
movsl
cld
push
mov
adc
xchg
or
mov
cmc
xor
sbb
mov
add
aam
and
ret
cli
cmpsl
aam
add
loop
ljmp
dec
xchg
xor
pop
add
mov
push
inc
daa
xor
adc
adc
xor
cwtl
cmpsb
xchg
lahf
push
ret
sub
cmp
adc
inc
push
aas
lods
loop
push
cmpsl
jg
or
mov
hlt
push
push
xchg
je
mov
pop
sub
push
insb
mov
jae
pop
add
pop
mov
jbe
fcmovu
xchg
mov
lea
inc
sahf
jl
and
and
mov
pop
aad
popa
je
xchg
mov
mov
repz
sbb
lahf
mov
add
int
add
xchg
mov
or
pop
sub
jnp
cmp
js
sbb
iret
aas
inc
shr
add
jle
mov
int3
out
sub
jmp
test
jo
pop
icebp
pop
mov
and
jl
fdivrs
and
jmp
push
mov
bound
imul
mov
in
push
mov
repz
adc
fstp
aaa
pop
sahf
and
jbe
js
test
cmp
pushf
cmpsl
xchg
jmp
xchg
hlt
repnz
bndstx
int
inc
push
lods
clc
mov
mov
movsb
inc
movsb
lock
pop
jne
aam
and
mov
sti
leave
and
pop
loopne
iret
int
fists
pop
sbb
mov
lret
jmp
inc
mov
imul
pop
dec
mov
add
xchg
call
jp
fwait
jle
push
lods
dec
dec
cmp
hlt
hlt
mov
nop
out
jp
sub
andb
xor
push
es
or
lods
repnz
or
sahf
xor
mov
sbbb
push
mov
mov
int3
sub
xchg
mov
out
jbe
push
inc
mov
sub
adc
movsl
mov
mov
loope
inc
cmp
call
out
adc
add
mov
jecxz
xchg
rcll
sbb
sub
nop
mov
scas
sbb
jge
pop
mov
lods
adc
ret
push
jne
cmp
adcl
xchg
out
out
pushf
test
add
cmp
fwait
scas
push
and
and
add
test
cmp
aad
imul
cmp
mov
xlat
inc
pop
push
js
cmp
inc
or
xlat
inc
inc
popf
push
adc
mov
pusha
mov
or
mov
stos
push
add
daa
xchg
popa
mov
or
enter
icebp
ret
push
outsb
arpl
insl
and
jmp
outsl
aam
mov
lret
inc
test
ss
in
mov
bound
add
mov
mov
call
aam
pop
dec
cmp
fcomip
push
adc
ja
jl
inc
sbb
and
adc
sub
rcrl
mov
std
js
cltd
les
sub
into
subb
adc
push
fcomi
jno
mov
jmp
ja
add
or
gs
mov
mov
adc
in
sbb
pop
sub
icebp
dec
add
and
adc
or
xor
xchg
fildl
pop
dec
mov
dec
adc
lods
mov
sbb
xor
sbb
ds
mov
push
out
cli
mov
fwait
dec
cmp
dec
add
and
xorb
arpl
pop
push
fs
mov
jl
or
mov
outsb
popa
mov
add
add
mov
mov
push
std
test
call
cmpsl
dec
xchg
testl
inc
sbb
xor
mov
sub
addl
lods
rorb
aad
jae
aad
daa
jmp
xchg
insl
mov
dec
pop
sbbb
cld
jmp
mov
loope
push
lahf
xchg
loopne
data16
ds
jne
imull
stc
xchg
add
sarb
fiadds
imul
mov
dec
sbb
fcomps
pop
cs
cmpsb
push
popa
shrl
imul
push
push
adc
bound
push
movl
fldz
inc
mov
or
test
arpl
and
xorb
or
lods
and
add
cltd
mov
stc
loop
sbb
xor
das
add
cmpsl
lret
jecxz
scas
push
push
xchg
addr16
loope
push
movsl
lret
daa
int
cmp
mov
mov
roll
pusha
stc
iret
aas
in
sti
push
push
dec
cmp
and
xchg
sbb
clc
jb
rcrb
add
mov
pop
insb
test
jb
loop
push
jo
shrb
jl
add
adc
test
jne
pop
add
out
stos
ss
fs
push
addr16
ljmp
jmp
jecxz
sbb
daa
fistl
cmp
dec
lds
cmp
cltd
pusha
xor
repnz
mov
sub
dec
push
pop
pusha
and
pop
cwtl
cs
ficompl
inc
fdivs
xchg
ds
test
pop
mov
insb
sub
daa
sub
lret
lcall
pusha
mov
sbb
inc
fs
pop
jg
clc
mov
popf
repz
xor
pop
outsl
sbb
addr16
mov
cli
bound
push
xchg
popl
adc
mov
xchg
mov
xorl
iret
pushf
adc
enter
ret
push
xchg
fcoms
jp
xchg
movsl
test
xchg
mov
jg
ss
insl
xchg
mov
call
mov
cs
cmp
mov
bound
push
popf
insl
cmp
fdivr
pop
cmpsb
mov
push
sbb
and
lock
dec
mov
jp
clc
in
pop
loope
or
mov
pop
xchg
inc
xchg
inc
fdivrs
lahf
sbb
rcrb
arpl
jecxz
jl
jmp
push
and
iret
icebp
jbe
pop
mov
jo
mov
sub
mov
fldl
adc
pop
lret
out
es
sub
jp
clc
sub
lcall
jecxz
mov
sti
sub
lods
shr
mov
pop
loop
mov
imul
test
lret
mov
xchg
out
and
push
sub
clc
addr16
push
xchg
dec
adc
jge
dec
pop
lds
int3
mov
and
cmp
mov
loopne
fcompl
cmp
push
arpl
and
jmp
dec
and
shr
std
and
outsb
mov
rcll
dec
repnz
jge
adc
cmpsl
dec
in
add
or
mov
mov
xor
jns
shrb
push
repz
mov
cs
cmp
test
movhps
push
sbb
push
push
vmwrite
aam
mov
cwtl
inc
hlt
in
adc
cmpsl
and
push
lds
mov
mov
mov
mov
test
or
scas
std
sti
push
adc
mov
out
repnz
movsl
push
ds
mov
dec
popa
les
lret
cmc
lods
adc
addr16
cmp
hlt
hlt
pushl
or
mov
fxch
xor
mov
test
insb
sbb
xor
xchg
sub
push
inc
or
mov
mov
mov
subl
lcall
loope
and
movsb
data16
sub
or
int
sbbb
jge
pop
mov
inc
push
mov
inc
adc
arpl
xchg
sub
daa
dec
jnp
mov
shlb
and
jl
and
in
cmp
addr16
add
aam
pop
mov
stc
popa
lods
ret
sub
jle
xor
xor
test
or
add
push
cmc
inc
iret
fstps
mov
cmp
loope
addr16
jnp
and
out
dec
dec
leave
add
sbb
xchg
mov
jnp
xchg
daa
push
sub
mov
scas
xchg
nop
lcall
xor
mov
mov
dec
rcll
pop
popf
mov
mov
cmp
mov
outsl
pushl
sub
data16
or
push
into
cmp
aas
in
xchg
cs
pop
stos
inc
inc
fwait
or
pop
or
iret
or
rcrb
adc
mov
push
sahf
dec
negl
popf
push
mov
aaa
aaa
inc
jp
jns
cs
or
lahf
out
and
push
adc
cmp
pop
orb
scas
movsb
dec
jae
je
sar
pop
das
mov
lods
xchg
aad
xor
dec
test
std
sub
inc
cli
add
mov
adc
in
stos
imul
add
movsb
xchg
mov
cli
into
xchg
fsubs
mov
xchg
lret
sub
leave
push
lea
lods
insl
stos
xor
aas
xor
adc
jns
outsl
aas
sbb
cmp
out
and
pop
dec
cmp
ret
les
fwait
cmc
ficompl
pop
data16
mov
adc
test
sti
cmp
inc
mov
jmp
mov
push
push
repz
push
mov
mov
out
lea
add
adcb
lcall
xchg
addr16
and
lcall
jne
xchg
sub
mov
ja
adc
jbe
js
push
insb
fs
lahf
ss
dec
out
ds
pop
xchg
js
mov
daa
sub
sub
lahf
shlb
inc
add
aas
sarb
movsb
ret
cld
jl
stos
js
xor
push
call
and
cmp
xchg
int
cmp
sub
jb
lea
sub
pop
pop
int3
je
or
dec
adc
enter
icebp
pop
cmpsl
cld
call
addb
nop
jo
add
add
inc
mov
push
lods
inc
xor
sbb
out
fistpll
into
nop
sbb
cmp
ja
dec
lret
mov
std
aad
xlat
sahf
in
pop
lret
xor
lea
xchg
scas
outsl
xchg
hlt
cmp
mov
mov
jno
mov
lods
adc
cmp
cmp
ret
push
shufps
fdivs
xlat
cmpl
rolb
movsb
movsb
aad
repnz
lcall
mov
pop
lock
mov
and
adc
repz
les
call
out
add
sub
ja
xchg
fdivs
and
dec
pusha
imul
push
xor
div
aas
bound
add
pop
dec
xchg
pop
je
stc
inc
daa
inc
and
rcrb
pop
mov
inc
adc
andl
cmp
faddp
sti
ror
adc
cmpb
cwtl
ficomps
fldcw
lret
xchg
mov
roll
adc
lcall
inc
stc
fidivl
sbb
test
push
js
mov
les
pop
jae
mov
rol
xchg
mov
ret
pop
or
jl
pusha
dec
out
mov
mov
jge
dec
cmp
hlt
sbb
add
sbb
cmpl
sub
lods
notb
dec
cs
cli
sub
in
adc
lret
cmpsl
mov
in
scas
iret
pop
pop
adc
pop
ss
inc
lret
jmp
cmp
xor
lret
jmp
xchg
movsb
cld
jp
repnz
mov
inc
cld
add
jge
idivl
test
pop
xchg
mov
imul
lahf
xor
dec
shll
lret
or
insb
movaps
push
test
add
fwait
mov
outsl
ficoml
test
xchg
or
test
jns
pop
out
xchg
cmpsl
pop
sub
dec
lret
push
mov
pop
pushf
mov
push
pop
inc
das
inc
dec
pop
sbb
sbb
lret
push
in
gs
test
jmp
jb
cwtl
dec
add
xchg
test
mov
fdivp
xor
mov
fmull
mov
pop
stos
jl
cmp
adc
cmc
inc
sbb
jl
sub
imul
daa
jo
jb
xchg
dec
xor
jmp
xchg
sub
movsb
push
xchg
sub
pusha
sub
arpl
ja
jle
push
pop
push
sahf
xor
jns
cmp
xorl
decb
push
push
aaa
jne
fisubrs
in
rcrl
pop
push
mov
mov
and
add
mov
add
imul
adc
and
hlt
dec
inc
mov
sbb
and
jo
repnz
or
mov
insb
dec
xor
sub
or
push
mov
repnz
jnp
popl
push
pop
cmpsb
xor
iret
fwait
aaa
mov
or
mov
in
mov
or
dec
xchg
testb
jl
cmp
insb
cwtl
pop
cmc
and
lret
lods
fistl
jo
adcb
ss
inc
js
sub
push
inc
fistl
mov
data16
sbb
mov
add
aam
decb
loope
icebp
js
xor
mov
jl
repz
pushf
mov
jge
orb
out
pop
js
rorb
jae
bswap
imul
xchg
pop
lock
sub
mov
repz
out
and
mov
sbb
sbb
cmpsb
idivl
xchg
mov
and
jmp
jecxz
notb
es
fistps
xor
inc
push
cmp
inc
fbld
cltd
sbb
js
pop
sarb
sub
or
push
popf
insb
cwtl
repnz
rcl
cmpsb
int3
and
mov
mov
inc
lahf
aam
repz
pop
mov
psubusb
shlb
cmp
fiaddl
inc
jno
sti
xlat
push
stc
mov
lods
lahf
or
cmpsb
orl
mov
sbb
mov
adc
pop
dec
test
ss
pop
pop
xchg
sub
ficomps
orb
jo
push
adc
stos
hlt
add
xor
ret
cmp
cmp
lods
mov
mov
push
imul
mov
outsl
fildl
mov
and
sub
mov
adc
aas
cmpl
insl
xbegin
mov
fcmovnb
insl
movl
pop
lock
ds
std
add
insb
inc
inc
sbb
orb
ja
fwait
xchg
mov
enter
cmp
hlt
jbe
sub
les
outsl
xchg
mov
int3
mov
fidivrl
js
imull
push
fnsave
push
xor
cmp
int
outsb
pop
pop
popa
scas
xchg
pop
scas
push
pop
dec
stos
push
cmp
cmpsl
inc
push
dec
xchg
inc
mov
pop
in
inc
int3
shll
jns
add
nop
repnz
jp
xor
xchg
jmp
sbb
cmpl
ret
rorb
sub
lds
stos
sub
rorb
cld
cwtl
mov
cmp
stos
xor
inc
ljmp
lcall
add
call
bound
out
rcll
shlb
sbb
daa
lods
push
and
addr16
sbb
jl
loop
aam
ret
or
or
jp
fwait
xor
into
stc
mov
mov
sbb
sub
incl
cmp
jmp
mov
mov
js
lock
in
sbb
pop
inc
sbb
inc
shlb
icebp
xchg
enter
xchg
scas
cwtl
data16
out
imul
jge
xor
xchg
bound
mov
mul
mov
outsl
mov
cmp
xchg
aas
pop
mov
call
mov
lds
add
push
in
movsl
in
je
mov
jl
aaa
sub
cli
add
loope
push
popa
adc
dec
dec
pop
mov
lods
dec
mov
push
mov
out
ss
test
mov
lret
xor
push
rcr
mov
clc
test
or
xchg
cli
xchg
in
pushf
psrad
stos
movsb
adc
out
scas
ljmp
xor
sub
idivl
mov
mov
mov
into
and
push
jb
add
scas
inc
mov
inc
mov
aas
jbe
sub
outsl
jp
jle
pop
sbb
mov
mov
adc
xchg
mov
xchg
or
popa
adc
int
dec
fnsave
mov
rclb
adc
jmp
fldt
fdivp
cmp
pop
pop
mov
cmpsb
mov
add
mov
push
sbb
xchg
mov
cmp
push
jmp
and
pop
sbb
dec
ljmp
pop
pushf
mov
pop
cwtl
pop
loop
mov
jl
lea
outsb
incb
add
push
fsubs
ljmp
mov
push
call
push
ljmp
andb
loop
inc
adc
mov
xor
adc
jge
jnp
movsb
call
sub
jl
sub
sti
outsb
enter
std
pop
lahf
sub
popf
mov
cwtl
mov
mov
jecxz
xchg
push
push
bound
mov
call
cmc
push
mov
aam
test
popl
scas
cmpsl
cmc
push
mov
cmp
fadds
xchg
mov
test
inc
mov
cs
sub
mov
xor
icebp
xor
shl
in
xor
ret
xor
hlt
add
test
adc
xchg
jno
out
push
loop
into
xchg
xchg
ja
mov
es
out
popf
out
sub
ljmp
cmpb
and
jecxz
ds
aaa
scas
out
mov
imul
hlt
xchg
inc
lods
dec
xor
daa
mov
ds
stc
es
fwait
jo
xchg
inc
jo
andl
pop
sbb
push
push
jae
xchg
mov
xchg
outsl
jno
inc
ljmp
sbb
outsb
mov
push
xchg
testl
aad
add
add
rcrl
test
inc
in
es
inc
imul
adc
add
loopne
repnz
jns
xor
iret
mov
jb
push
in
jnp
dec
push
jp
out
jb
push
pop
js
inc
xlat
movsl
xor
test
jne
mov
cwtl
das
mov
nop
hlt
mov
ret
jl
add
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
movsl
lods
outsb
adc
addb
mov
sub
sbb
addr16
shl
inc
push
loopne
jbe
out
ret
sub
in
test
imul
jmp
jmp
je
out
pusha
push
sahf
stc
nop
cmp
xchg
jno
fcoms
cltd
jmp
sbb
pushf
inc
sub
mov
int3
inc
jb
lcall
lcall
add
divb
jo
cmpsl
mov
lea
arpl
testb
add
arpl
adc
sbb
hlt
jle
or
mov
sbb
jle
int
mov
imul
pop
xor
add
in
cmp
push
int
int
fcmovnbe
repnz
fnstcw
jmp
rolb
rcrb
adc
aas
or
movsb
mov
hlt
jg
jmp
dec
js
mov
movsb
pushf
popa
jl
jl
mov
roll
mov
es
bnd
ret
fisttps
sub
and
cmp
mov
pop
and
jle
pop
push
adc
test
test
mov
in
jno
scas
inc
jmp
std
outsb
cmp
cmp
and
cmp
mulb
jmp
dec
cmp
cmp
es
or
cmp
xor
aaa
mov
iret
daa
leave
lea
orl
or
push
pop
adc
or
inc
in
sbb
mov
sub
xchg
fbstp
iret
int3
popa
sahf
dec
test
pop
out
scas
test
pop
cltd
pop
sub
outsb
jge
xchg
aaa
jns
iret
aad
and
or
imul
dec
das
xchg
pop
leave
jo
int
sbb
rorb
pushf
and
sbb
push
dec
mov
stos
sub
cmp
in
sbb
les
mov
loopne
add
sarl
in
incb
mov
mov
pop
xchg
add
ds
nop
dec
jmp
sbb
scas
hlt
jmp
mov
lea
add
adc
or
and
dec
jecxz
int
cmpsb
mov
sbb
inc
xor
mov
rorb
in
jecxz
nop
or
dec
jecxz
sub
mov
cmp
jl
lretw
sbb
out
pop
in
jl
stos
outsl
mov
out
cmpl
cmp
cmp
sarl
shrb
push
mov
popa
xorb
sbb
arpl
stos
out
jge
jbe
or
enter
inc
and
cmp
movsl
stc
gs
sub
in
lcall
adcl
shrb
test
orl
ljmp
mov
in
pop
mov
push
out
rolb
mov
mov
pusha
sub
add
dec
sbb
inc
stc
or
aas
lahf
lret
mov
jae
fwait
sub
dec
mov
jbe
test
out
mov
mov
lds
mov
ds
orl
fcompl
mov
bound
push
jecxz
push
movsb
imul
fdivl
cmp
mov
inc
jbe
cmp
dec
lods
push
test
stc
fsub
sti
int3
in
and
sti
pop
roll
sbb
mov
iret
inc
fistps
push
jecxz
sti
sahf
and
not
adc
sbbl
cmp
je
xchg
jno
or
gs
aaa
jle
dec
sub
push
cld
into
in
push
aaa
or
sub
fidivl
insb
push
bound
fstl
sbb
xchg
cli
inc
adc
aas
fs
aad
push
ss
in
mov
mov
push
inc
mov
jp
addr16
pop
fiadds
cmp
ret
fiaddl
dec
inc
xor
sub
iret
xchg
loop
dec
jae
loop
and
xchg
mov
call
shlb
jg
ds
lcall
inc
into
decb
mov
xchg
inc
scas
push
adc
sub
sub
pop
clc
xchg
inc
imull
push
testl
inc
sub
cli
shr
mov
jno
cmp
mov
jb
scas
push
inc
adc
jecxz
cwtl
mov
das
mov
lret
mov
std
sbb
add
sarl
mov
enter
jb
cmp
mov
and
sti
jp
ljmp
cs
lea
cmp
subl
into
add
and
pushf
sbb
jle
pop
sbb
xor
xchg
xor
divb
outsb
xchg
add
bts
lods
in
movsl
push
out
inc
inc
push
jl
rcr
mov
jecxz
mov
lock
sbb
bound
movsb
sbb
adc
push
push
cmp
mov
inc
sub
in
test
mov
sub
sub
imul
sbb
pop
mov
lahf
pop
jno
es
cmpsl
outsb
pop
or
out
loopne
mov
lret
lods
lret
push
jo
loop
cmc
jo
adc
cmp
xchg
sub
push
xchg
mov
sarl
mov
out
out
sub
aaa
lods
mov
xor
sbb
mov
jns
ljmp
and
imul
fstps
fstpl
fwait
mov
xor
mov
jle
je
add
xor
jbe
mov
icebp
xchg
jmp
lea
mov
xorb
stc
and
jle
adc
or
and
sub
rcrb
xor
mov
inc
icebp
jbe
lahf
and
add
mov
lcall
subb
xor
jg
cmp
dec
jo
fs
lret
cmp
je
add
nop
pushf
sub
xor
cmc
test
popf
fwait
sbb
scas
add
jle
jle
xchg
mov
popl
xor
shlb
pop
dec
divb
dec
fcomi
inc
push
sbb
add
add
ret
addb
jmp
fdivrl
inc
test
clc
test
cmc
sbb
scas
push
pop
std
dec
or
outsl
sub
xchg
cmp
push
push
leave
stc
jl
aad
push
hlt
cmp
mov
ja
mov
mov
jecxz
jno
sbb
jo
je
or
arpl
sub
sub
and
mov
shlb
imul
fdiv
je
out
sub
sbb
faddl
jae
mov
pop
stos
push
pushf
pop
daa
repz
stos
addr16
push
andl
andl
mov
arpl
xchg
xchg
scas
add
xlat
lods
insb
movsl
sub
dec
sbb
mov
out
mov
sti
add
jb
cmp
imul
jmp
mov
das
pop
mov
push
cld
mov
inc
subl
mov
push
loope
mov
jb
mov
inc
push
pop
add
inc
fcomps
testb
xchg
mov
mov
add
notb
arpl
out
mov
andb
lret
in
adc
pop
insl
outsl
out
mov
into
fxch
out
popa
jge
xchg
popf
jle
mov
dec
lds
push
xchg
inc
xchg
add
mov
mov
ss
xchg
cli
inc
adc
repz
jecxz
popf
push
hlt
jo
sbb
fbld
imul
and
mov
ss
xchg
in
add
push
jp
and
dec
arpl
and
out
jp
jo
sbb
xchg
insb
add
sti
sub
adc
daa
ficomps
inc
shrl
movsb
and
or
test
add
int3
mov
adc
std
pop
inc
mov
nop
mov
adc
xlat
stos
fsubs
dec
mov
jne
out
imul
in
cmc
and
or
pop
movsl
push
stos
dec
xor
sbb
and
arpl
jg
mov
in
fwait
ret
loop
inc
pushl
inc
fistps
inc
bnd
mov
mov
pop
test
sub
rcl
movsl
nop
enter
insb
das
cmp
pusha
call
jle
aad
sub
imul
jl
mov
lds
or
int
or
shlb
mov
stos
bound
aaa
pop
fmul
push
sti
xor
shll
mov
sbb
adc
repnz
pop
repz
imul
cld
dec
jge
bound
pop
mov
mov
and
xchg
xchg
imul
mov
addr16
dec
cltd
cwtl
mov
rcrl
mov
daa
jge
add
jle
cmp
mov
inc
sbbl
in
mov
jge
xor
xchg
cmp
ret
dec
sbb
adc
lcall
lret
lret
xchg
aam
movsb
mov
push
iret
sti
in
add
in
sbbb
sbb
aad
cs
in
fsub
lods
lret
jmp
mov
imul
xor
cltd
sub
addl
add
clc
stc
or
inc
bound
daa
mov
mov
in
mov
dec
idivb
notb
nop
call
jp
fildl
clc
popf
mov
mov
mov
pushf
and
mov
and
ljmp
pusha
scas
dec
or
push
inc
shlb
pop
xchg
imul
mov
jb
sub
mov
pop
pop
vsubsd
and
xor
loop
int3
into
popa
inc
push
lret
adc
push
stos
push
jno
out
xchg
push
jbe
shl
ret
inc
mov
pop
sbb
fisttpll
mov
xchg
sarl
or
movsb
sti
lods
rcrl
dec
pusha
sbb
or
lea
and
xor
sarb
icebp
sbb
sti
stos
insl
jns
jecxz
insl
in
jne
out
pop
mov
xor
sub
aam
inc
cmp
jp
pop
loop
push
test
movsb
popf
repnz
ja
aaa
sub
push
call
pop
mov
xor
cltd
clc
sarb
add
sub
cli
test
aad
or
negb
dec
lret
mov
push
and
jle
dec
shlb
bound
and
push
or
stos
lret
and
outsl
mov
sub
icebp
into
into
and
push
cmc
sbb
scas
dec
movl
test
je
dec
mov
mov
arpl
jb
add
sahf
int
sbb
sarb
gs
es
daa
push
fs
sub
inc
pop
out
jo
push
push
lods
sbb
in
cmp
out
pusha
cmp
push
imull
cld
sbb
lret
and
daa
fsts
lea
test
mov
mov
js
push
pop
insb
inc
xor
or
cmp
icebp
push
test
lea
jb
movl
ret
sub
push
inc
shrb
pop
jl
pop
pusha
dec
sbb
mov
arpl
xchg
cli
lods
lcall
jbe
jle
repz
stos
sbb
mov
dec
xchg
les
pop
jae
mov
mov
daa
es
xchg
push
adc
jae
addr16
xchg
and
jns
inc
lret
mov
mov
xor
cld
sarb
xchg
cltd
insb
jle
cmp
xor
out
leave
push
jge
push
std
pop
test
and
cld
icebp
dec
mov
mov
movsl
and
pop
popa
mov
aam
dec
shlb
xor
pop
xorl
jmp
xchg
in
mov
jmp
sbbb
js
inc
in
mov
ret
xor
data16
sarl
int3
jmp
lcall
inc
dec
cmp
xchg
add
stc
dec
pop
xchg
jbe
xchg
adc
xlat
fsub
jnp
xlat
mov
mov
das
or
das
mov
fbstp
xor
or
popf
xchg
cmp
stos
push
loope
mov
nop
add
push
mov
pusha
pandn
mov
lret
xchg
sarl
lds
add
jnp
imul
mov
lods
cmp
repz
imul
into
mov
add
cli
lods
and
jns
xor
mov
add
push
cmc
loop
cmp
xchg
xor
inc
cmp
and
popa
pop
out
jne
jl
dec
xor
mov
es
pusha
mov
loope
cmp
mov
imul
fwait
fs
jge
mov
repnz
daa
sbb
xchg
jns
ljmp
pop
lcall
inc
shll
stc
int3
in
xchg
push
sub
lcall
mov
pop
notb
jge
jmp
push
lock
jg
xorb
jae
imul
push
sbb
cmp
mov
mov
sbb
cmpsb
pop
push
mov
je
dec
xlat
pop
xor
or
adc
mov
jbe
jg
xor
movsb
push
sbb
rorb
fnstsw
mov
fwait
dec
dec
sarl
scas
arpl
out
jmp
sbb
or
lods
mov
out
lret
mov
bound
outsb
jmp
nop
mov
mov
div
cltd
push
add
sub
pop
add
adc
int
mov
lret
jl
scas
mov
add
pop
sub
popf
aas
mov
mov
test
lods
mov
and
inc
jnp
pop
orl
dec
mov
adcl
sub
inc
dec
pusha
pop
sub
mov
push
cld
sub
les
dec
push
sti
sub
xchg
inc
sbb
nop
out
lods
test
jl
insb
insb
aam
and
out
pop
fbstp
lea
enter
lret
mov
pop
and
jecxz
mov
ret
adc
rorl
loop
inc
leave
or
rolb
jecxz
or
sarb
test
inc
add
pop
out
adc
adc
mov
lods
pop
sar
pop
inc
jae
mov
add
sub
test
and
cmp
and
shrl
jns
mov
sbb
lods
insb
mov
fcoms
add
in
mov
mov
xchg
xor
and
imul
jb
subl
sub
lods
or
loopne
push
std
inc
and
and
gs
xor
stos
rorb
insl
or
pop
jle
jo
pop
insl
les
gs
adc
pmaxsw
sbb
jb
push
mull
mov
arpl
add
out
lahf
cwtl
mov
jne
sti
mov
pop
mov
sti
out
test
mov
jmp
xchg
sar
lock
iret
push
popa
loope
iret
cltd
bswap
adc
xor
fcomip
cmp
lret
lock
sub
jno
mov
rcrb
ss
in
in
push
push
sbbb
fsub
out
adc
dec
push
xchg
lods
add
adc
lret
lds
lret
pop
adc
xchg
push
loope
push
stc
fs
aas
push
orl
lcall
scas
cmp
call
xor
repz
fimull
iret
xor
cwtl
cmpsb
nop
inc
xor
mov
fs
xor
push
or
in
mov
cmp
shll
popl
mov
cli
cmp
mov
xlat
mov
push
lds
ret
jmp
outsb
push
jo
sbb
addr16
cld
lods
push
sbb
fcoms
xchg
pushf
and
cli
aam
arpl
ret
push
add
or
icebp
push
into
mov
add
ja
pushf
jp
out
dec
add
sub
andb
rolb
jecxz
adcb
or
scas
jl
clc
jmp
jb
add
pop
jnp
cmpsb
mov
mov
orb
mov
cli
sarb
popa
pop
dec
add
cmpb
ja
fnstcw
xchg
std
dec
mov
lcall
mov
mov
das
xor
aam
lcall
nop
jecxz
clc
loop
in
ficompl
imul
aaa
jmp
pop
shrb
lcall
call
or
and
imul
fisttps
pop
mov
scas
dec
add
push
in
cli
cmpsb
std
subl
dec
data16
and
jle
or
stos
sub
cmp
jmp
mov
push
inc
scas
jnp
inc
push
cmpsb
xchg
push
lahf
mov
imul
jo
fwait
iret
mov
dec
push
loopne
icebp
jbe
movsb
repz
pop
or
mov
push
subl
mov
call
pop
cmc
cltd
enter
in
scas
out
adc
shlb
imul
lret
popf
cmp
jmp
xchg
adc
popf
xor
and
adc
mov
loope
and
sub
pusha
int3
fiaddl
movsl
xchg
and
stos
xchg
repnz
loope
jno
sahf
add
int3
inc
mov
adc
jmp
pop
sahf
sahf
jno
dec
mov
dec
mov
xchg
mov
jle
mov
fisttpll
cmp
ret
jg
mov
dec
xor
push
fcmovnbe
cmp
and
fcomps
mov
fwait
pop
or
fsubl
stc
lods
je
cld
movsl
push
test
dec
das
inc
pushf
pop
fwait
jmp
arpl
pop
movsl
ja
into
or
jp
lret
jp
ljmp
jge
fisttps
subb
xchg
push
aad
cmc
ja
lods
idiv
fwait
sub
pusha
out
jmp
push
xor
mov
pushf
xor
leave
mov
sub
lcall
pop
test
ret
push
push
cmp
and
cmp
jp
in
push
adc
adc
repnz
popa
adc
fstl
adcl
imul
popf
loopne
sbb
cmp
popf
nop
mov
dec
jo
roll
xchg
je
ret
pop
mov
fwait
inc
das
out
sub
adc
call
lods
and
mov
push
dec
pop
pop
xchg
mov
out
sbb
hlt
jp
rcll
rclb
pop
pop
pop
loopne
scas
shll
and
push
push
sbb
sarl
and
cmpsl
ja
pop
sub
dec
mov
or
and
cmp
sbb
pop
mov
inc
lds
xchg
jae
jae
xchg
jno
xor
insb
mov
cmpsl
int3
xchg
push
inc
insb
add
push
or
lods
and
adc
nop
mov
test
notl
repnz
push
stc
jno
sbb
add
or
xchg
mov
adc
or
gs
loop
mov
mov
in
jg
mov
in
cltd
xchg
add
leave
mov
mov
jle
lret
mov
out
rolb
mov
fimuls
popa
sbb
mov
rorb
cmp
jecxz
push
mov
push
mov
cwtl
test
dec
mov
cld
xor
sbb
popa
sub
nop
mov
mov
arpl
addr16
ja
mov
int
out
dec
sub
out
loop
mov
sub
mov
jbe
lods
dec
loopne
mov
mov
jl
std
cmpsb
inc
mov
movsb
jg
pop
push
mov
daa
in
in
lds
mov
int
add
in
jecxz
pusha
and
xor
cmp
jnp
icebp
mov
outsb
add
cli
mov
dec
inc
inc
jno
xor
mov
pop
mov
movzbl
lock
push
xchg
xor
in
push
or
adc
mov
or
or
inc
pop
aad
shll
lods
cmp
dec
or
cld
in
mov
xchg
test
jno
mov
cltd
lret
iret
decb
repz
repz
pop
xor
pop
mov
aas
scas
sbb
xor
mov
pop
out
jmp
and
bound
js
add
inc
lcall
sub
adc
pop
cld
mov
scas
sbb
cmp
or
adc
in
lods
jnp
punpckhdq
test
adc
jmp
dec
or
sbb
movsb
out
jo
leave
pop
xor
xchg
cmpsl
pop
aaa
leave
push
inc
pop
sub
jge
test
jl
enter
out
mov
loopne
xchg
dec
popf
inc
and
dec
push
jmp
icebp
sub
mov
dec
add
mov
xrelease
jecxz
mov
sbb
call
cmpsl
fxam
pusha
dec
push
cmp
enter
out
cwtl
push
jno
mov
call
xor
out
pop
lret
push
lret
mov
repnz
aas
inc
idivb
in
and
cmp
and
fwait
ds
push
popa
in
jb
incl
jg
sub
ret
cs
nopl
in
or
cmp
movsl
pop
ret
fwait
movb
and
das
fildll
inc
push
push
add
mov
int3
inc
ret
sub
mov
mov
test
add
dec
in
xchg
outsb
shlb
lock
outsl
mov
xor
xor
gs
ds
dec
jge
push
mov
add
xchg
loop
cs
pop
mov
jge
pusha
inc
or
les
rclb
movsl
movsb
loope
push
repnz
enter
fidivrs
imul
mov
mov
shrl
xchg
dec
aaa
or
adcb
mov
pop
lock
out
and
addr16
repnz
test
aam
xchg
ss
mov
jo
push
push
lds
ficoms
popa
or
inc
or
fnstenv
adc
insb
mov
outsl
rclb
cld
dec
sub
inc
jg
adc
loop
ret
dec
push
sub
jno
outsl
daa
bound
jmp
sahf
aam
push
pop
std
cmc
cmpsl
into
aad
jnp
addr16
mov
and
jecxz
mov
xchg
push
xor
pop
or
mov
xchg
fdivrs
cmpsl
cmp
fstpt
ss
movsl
jge
cld
rcr
and
ret
fistps
lods
into
leave
xor
dec
inc
gs
cmp
mov
dec
dec
mov
push
das
int3
sub
inc
or
imul
cmp
dec
out
adc
test
in
fmuls
fstps
sti
mov
enter
jne
icebp
cwtl
xor
xchg
mov
or
loopne
in
ja
mov
or
push
or
lock
rcl
fsubs
xchg
lods
sahf
mov
das
imul
out
sub
cli
xchg
inc
jno
adc
sbb
in
jge
lretw
out
pop
stc
xor
adc
xchg
je
lock
test
dec
cwtl
pop
mull
mov
test
push
pop
lods
imul
into
fs
js
cmp
mov
pop
outsb
test
pop
ds
xchg
test
xchg
mov
ret
mov
sub
push
xchg
jge
pop
fcmovu
outsl
sbb
inc
neg
pusha
dec
sti
jge
xchg
lahf
fstpt
mov
outsb
aam
dec
and
cmpsb
fcoms
mov
loope
push
pop
push
adc
testl
aad
dec
dec
or
jno
lahf
pop
xor
cmp
push
sbb
outsl
xchg
push
mov
aam
ds
ja
inc
xchg
xor
fwait
test
push
adc
cmpsb
and
pop
add
pop
frstor
loope
xchg
push
adc
add
aam
cs
stos
movsl
cmp
scas
adc
stc
jg
mov
push
mov
jnp
xchg
mov
sub
push
in
xchg
push
cmp
or
mov
xchg
jge
das
imul
add
insb
insl
mov
js
sub
cwtl
out
repz
or
lret
jns
sahf
movl
test
loope
rorl
mov
mov
loop
cmp
or
mov
out
hlt
mov
mov
inc
push
cmp
sti
mov
adc
xchg
insl
pushf
jecxz
imul
nop
ljmp
fwait
jp
mov
daa
test
xchg
or
cli
adc
jne
bound
mov
pop
dec
pop
cmpsl
dec
ficoms
jl
popf
test
push
popa
dec
stos
fmul
pop
sub
data16
les
dec
gs
mov
test
jge
sbb
pmaddwd
dec
ret
test
cmp
mov
cli
pop
and
adc
fstl
pop
xorb
test
fisttpl
lret
arpl
subb
inc
mov
imul
inc
or
or
pop
int3
in
int
fisubrs
aam
mov
push
lret
cmp
fdivs
ljmp
mov
pop
push
cmp
pop
stos
pop
bound
mov
mov
push
dec
shlb
mov
call
negb
fcmovnbe
adc
outsb
in
mov
pop
and
mov
fwait
mov
adc
adc
push
and
push
push
jne
mov
dec
sub
mov
and
shll
and
fmuls
mov
inc
xchg
pop
pop
repnz
xlat
jle
imul
sbb
fists
mov
fnstcw
mov
clc
mov
pushf
push
enter
movsw
imul
test
addr16
pmaxub
fstpl
cmp
sub
clc
push
cltd
scas
arpl
xchg
ret
xchg
cld
lret
mov
push
in
push
and
add
push
int3
adc
gs
push
rclb
vunpckhpd
std
cmpsl
imul
fldl
pusha
jbe
loope
cs
pop
sahf
jnp
mov
movb
dec
adc
mov
imul
movsb
adc
adc
mov
pop
pop
repnz
mov
xchg
sub
mov
sbbb
push
xchg
data16
dec
mov
pop
test
xchg
pop
mov
pusha
loopne
cmp
outsb
add
jb
dec
out
push
cli
es
test
loope
or
in
push
mov
scas
sbb
shrb
pop
fwait
add
pusha
addr16
arpl
fwait
inc
push
jecxz
out
addr16
addps
insl
xchg
popa
mov
les
mov
js
cmp
pop
push
sbbb
cwtl
bound
and
mov
pop
rcll
iret
sub
or
add
sti
mov
mov
add
xor
mov
add
in
imul
lret
loopne
mov
cmpsb
cld
xchg
pushf
pusha
fs
addb
and
mov
mov
cmpsb
mov
jecxz
xchg
roll
mov
mov
push
or
xchg
cmp
mov
mov
lds
jb
sti
out
rcl
mov
cs
repnz
xchg
stos
pop
lcall
mov
jno
xchg
sbb
scas
loopne
pop
mov
pop
inc
les
sbb
xchg
mov
or
mov
pop
sub
mov
inc
mov
pop
roll
jnp
xchg
nop
cli
ljmp
mov
insl
enter
jbe
fldcw
outsl
jnp
xchg
and
xchg
and
fs
add
icebp
fldcw
mov
push
les
jb
mov
jle
jo
daa
fcoms
push
jae
or
jnp
mov
jo
inc
jge
test
mov
push
and
add
fcompl
fcmovnbe
ficomps
icebp
pop
scas
mov
not
pop
int3
stos
jno
roll
add
out
loop
lds
pop
xchg
mov
scas
and
xor
dec
hlt
ljmp
mov
jbe
mov
fisttpll
sub
popa
shll
mov
gs
sub
or
add
movsl
mov
mov
jle
push
repz
adc
add
rcll
shrl
push
adc
hlt
aam
ljmp
mov
mov
mov
in
popa
mov
fmull
pop
pop
jp
scas
and
ljmp
stos
add
xor
pop
push
stos
arpl
lds
pop
and
test
add
pop
popl
test
popf
mov
jne
sbb
push
in
pop
mov
shll
lds
or
mov
push
add
movsl
jg
mov
int
scas
mov
push
push
pop
je
pop
pop
mov
shl
mov
std
xor
stos
pop
subb
and
pop
pop
bound
mov
stos
sbb
jnp
out
movsb
cmp
es
xor
mov
int
fucomip
push
das
inc
xlat
pop
cmovae
mov
lock
pop
xchg
cmc
xor
outsb
int3
repz
inc
jae
stos
mov
mov
loop
testl
out
push
std
mov
mov
or
popa
icebp
pushf
mov
push
out
xchg
or
decl
dec
orb
out
das
and
and
xrelease
fwait
shrl
lds
jge
jns
ljmp
orl
fwait
dec
iret
pop
les
adc
push
mov
ds
cld
add
fld
or
sub
mov
pop
pusha
push
lods
mov
lods
jne
sub
cmpsb
inc
out
adc
bound
lods
dec
cmpsl
dec
cmp
sbb
rolb
xchg
cmpsl
test
xor
or
inc
jae
addl
in
lret
movq
mov
fnclex
gs
cmp
cmp
fcomps
xchg
fstl
aam
mov
cwtl
sbb
std
and
and
cli
dec
cmp
mov
and
pusha
shrb
and
dec
pop
out
add
fcomps
or
popf
jbe
mov
mov
push
lcall
fnstcw
and
push
test
mov
mov
xor
pop
pop
jns
leave
xchg
gs
add
or
cmc
ljmp
sub
xorl
jp
call
icebp
jmp
aam
repnz
hlt
and
cltd
dec
andb
gs
dec
lcall
xchg
jle
mov
rcrl
sarb
stos
cmp
sbb
jge
int
jge
mov
jbe
fcoms
mov
inc
fidivrl
ja
imul
sbb
adc
xchg
or
movsb
sbbb
shl
sub
movsl
scas
add
pop
fadds
subb
cmp
fwait
xor
dec
ficoms
andl
sub
out
sbb
sbb
mov
inc
add
mov
xchg
pop
popf
imul
xchg
dec
dec
xchg
movsl
int3
or
mov
mov
sub
loope
jle
in
adc
xchg
imul
pop
out
mov
sahf
stos
movsl
mov
inc
loop
lds
mov
jle
repnz
dec
jb
ljmp
sbb
mov
test
into
shlb
pop
mov
pop
or
push
add
push
aaa
lds
dec
mov
pop
cmp
pop
adc
fldcw
xor
fcompl
or
mov
nop
mov
daa
mov
pop
movsl
les
push
mov
movsb
fwait
mov
dec
movsl
jno
jns
xor
xchg
icebp
xchg
dec
push
lahf
stos
jg
xchg
mov
fs
dec
lret
fdivrs
xor
adc
in
mov
popf
stos
test
movsb
jge
fdivl
loop
ret
fstps
pop
cmpsb
aam
or
or
imul
lret
cmp
mov
out
aad
nop
sub
add
icebp
or
mov
add
subl
xchg
sub
lock
dec
adc
sub
sbb
cmp
fsubl
mov
jmp
jno
pop
push
call
fsub
pop
sub
or
add
pop
push
mov
out
sahf
in
fidivrl
push
xchg
dec
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
loope
dec
outsl
mov
addl
addl
dec
jecxz
sbb
add
and
insl
and
push
ret
out
pop
arpl
mov
aas
ret
push
scas
push
je
cli
pushf
sbb
daa
xchg
es
aad
mov
data16
inc
fidivrs
sub
jnp
inc
adc
cmp
sbb
push
movsb
pop
and
mov
sub
pop
sub
out
xor
ficoml
loop
and
xor
cmpsl
and
fidivrs
push
add
xchg
jns
daa
pop
cmp
out
popa
mov
push
mov
push
push
mov
data16
mov
stos
mov
addb
mov
adc
roll
mov
add
inc
mov
jl
lret
push
mov
inc
mov
jne
inc
cltd
jecxz
xchg
cs
and
les
xor
xchg
push
inc
pop
ja
dec
mov
pop
mov
inc
dec
dec
jb
jle
repz
cmp
or
mov
leave
xchg
icebp
imul
dec
jb
add
fdivs
neg
mov
mov
pop
cmpsb
pop
cmp
xor
inc
clc
test
fwait
mov
dec
and
xchg
lods
rorb
mov
outsb
loopne
or
xchg
fdivrl
adc
dec
inc
ljmp
sbb
jmp
shll
sub
ret
jle
jnp
xchg
movsb
nop
rcr
in
cs
and
stos
adc
mov
ljmp
add
in
xor
inc
insb
outsl
pusha
sub
pop
cmpsl
idivl
jb
jmp
dec
test
xor
shlb
dec
enter
loopne
pop
xor
add
mov
setle
cmp
enter
fldl
int3
add
or
add
stos
dec
mov
xchg
negl
push
out
add
test
sbb
negb
lret
sbb
std
xchg
inc
fadds
mov
jecxz
data16
xor
pop
movsb
lods
jg
sti
or
out
xor
test
mov
adc
das
sarb
inc
sub
sbb
push
adc
xchg
insl
ficoml
and
xchg
pop
pop
cmpsl
jg
inc
std
pop
daa
jnp
xchg
dec
fsubr
out
cmpsl
icebp
add
or
mov
dec
mov
es
cmovno
or
push
or
mov
mov
repz
int
in
popf
mov
mov
out
or
ja
mov
ja
dec
mov
arpl
fwait
mov
std
repnz
lret
lret
and
popa
stc
cmpsb
addr16
stos
cmp
jp
push
pop
push
push
inc
push
inc
jge
pop
push
cmp
pop
orl
adc
jb
mov
mov
sbbl
add
or
sti
sbb
pop
mov
rcrb
and
xor
or
inc
test
aas
fucomi
jge
sub
xor
push
call
mov
push
inc
sub
int
dec
xor
cli
lods
stos
and
cld
test
cld
mov
sbb
xchg
add
out
sub
add
enter
cmp
jae
and
mov
adc
lea
dec
sbb
sti
sub
cltd
sub
mov
insl
out
aaa
inc
sub
lock
xchg
lods
repnz
mov
and
xor
inc
push
jg
jle
sti
imull
cmp
xor
xchg
rcl
pusha
int
pop
mov
inc
mov
sbbb
inc
dec
sub
lods
or
lods
or
cmp
xor
pushf
add
adc
sbb
and
and
xchg
dec
das
rol
mov
xor
inc
inc
mov
pusha
loopne
push
nop
lret
data16
mov
sbb
lods
jle
cld
mov
jns
cltd
insb
outsb
jl
dec
push
or
mov
fs
loope
loopne
repnz
cli
sub
imul
mov
cli
out
ja
mov
insl
std
adc
push
movsb
mov
cmp
icebp
jecxz
mov
mov
adc
pop
arpl
out
push
jnp
adc
repz
inc
hlt
sbbl
sub
mov
mov
xchg
sub
xchg
lods
imul
add
lret
and
cmp
jbe
ss
adc
sub
sarl
mov
sbb
sub
iret
and
subb
lret
call
rorb
lods
mov
test
or
fadds
add
lods
stos
movsl
fisubrs
mov
ja
adc
lcall
jae
mov
jbe,pn
test
scas
loope
push
dec
nop
call
ror
push
mov
jp
loope
fists
mov
lea
out
lods
cmp
and
lcall
pop
into
mov
jecxz
imul
movl
push
loope
xchg
mov
fsubr
aad
sbb
mov
jb
popf
pop
add
test
push
sbb
addr16
shr
mov
lods
mov
cld
in
or
ret
fs
andb
adc
inc
dec
cld
pop
js
mov
push
xor
data16
sahf
mov
pop
mov
inc
sbb
mov
insl
notl
lods
push
xchg
cwtl
out
sahf
scas
cmp
dec
adc
dec
imul
adcl
xchg
mov
out
out
ljmp
dec
adc
lea
inc
push
stos
test
inc
xchg
mov
pop
cli
fstpt
mov
ljmp
or
call
iret
fnstcw
ja
push
xor
mov
push
mov
ret
std
outsb
fsts
push
mov
aam
xor
sub
sarb
jecxz
lea
push
jnp
xchg
inc
push
cmp
or
ds
and
xchg
inc
int
jnp
push
data16
cmp
daa
fistps
mov
outsb
arpl
cli
test
xchg
jo
mov
sub
adc
loopne
icebp
sbb
repnz
mov
mov
and
leave
test
push
push
cmp
xor
int3
inc
in
icebp
mov
adc
pop
daa
lahf
pop
and
pushw
mov
jmp
mov
xor
rorb
insl
arpl
enter
xor
dec
lock
xor
sbb
outsl
sub
scas
addr16
jg
and
mov
sbb
jb
leave
add
or
push
fisttpll
insb
lods
daa
pop
xor
mov
mov
popa
repnz
adc
xchg
dec
dec
icebp
add
loope
pop
leave
mov
sbb
cltd
mov
das
cmpl
mov
push
dec
imul
xor
dec
lock
repz
mov
fsubrl
mov
mov
or
fucomi
sub
out
adc
ss
ffreep
xor
mov
dec
pop
mov
iret
es
les
mov
clc
sbb
ja
fildl
adc
sahf
sarl
mov
test
test
mov
mov
out
xor
jno
adc
fs
cld
sub
sbb
inc
sbb
dec
aas
rol
lcall
sbb
lahf
loop
add
pop
lods
dec
jg
cmp
and
jle
gs
pop
lods
mov
out
aad
jae
lods
sti
jmp
mov
adc
fnstcw
pop
sahf
iret
loope
lods
mov
dec
cmovb
nop
and
pop
mov
xor
cwtl
cli
sub
jg
inc
popf
jge
psubusw
add
into
adc
fwait
dec
sbb
xchg
into
clc
stos
push
cmp
or
add
sti
daa
addl
or
ret
mov
jmp
pop
add
xlat
gs
sbb
scas
arpl
xor
scas
or
jns
add
mov
push
push
lahf
int
xlat
jae
lret
pop
cmp
nop
nop
sbb
iret
negl
xor
or
mov
popf
jb
fsubrl
xchg
pop
pop
pusha
jo
test
adc
repz
outsb
jl
or
fcmovnbe
pop
je
xor
stos
aaa
and
xor
lret
leave
sub
faddl
mov
addr16
pop
clc
inc
stos
aad
xchg
inc
jae
ret
inc
pop
mov
mov
out
mov
dec
cmc
cwtl
mov
push
pop
pop
mov
jnp
pop
push
jae
jmp
pop
fnstenv
dec
lds
adc
add
pop
mov
sub
mov
dec
test
fmull
cmp
andb
dec
jg
out
out
outsb
mov
lcall
jmp
test
inc
std
daa
adc
sub
fwait
pop
repz
movsl
popa
sarl
cld
cwtl
cmp
and
ret
lcall
push
outsl
cmc
gs
mov
inc
out
arpl
rcll
out
xor
sbb
outsl
push
bnd
dec
sub
mov
ds
jle
sub
or
mov
mov
xchg
outsl
xlat
data16
cmp
mov
test
mov
test
fidivrl
xorl
js
idiv
add
aaa
fistpl
or
aam
xor
mov
pop
mov
sub
mov
mov
mov
inc
gs
xor
call
sub
outsl
addr16
xchg
divb
mov
or
pop
inc
push
sub
outsb
adcb
cmpsl
mov
ljmp
pop
push
adc
shl
loop
out
test
add
adc
sub
xchg
cmp
or
push
sub
loopne
cmp
mov
cmc
mov
dec
call
mov
lahf
cmp
mov
outsl
dec
mov
adcl
loope
push
hlt
movsb
outsl
je
mov
sub
repz
mov
mov
mov
rolb
inc
push
jne
sbb
mov
pop
xchg
jp
das
or
jle
xchg
adc
mov
fwait
lods
ja
ja
mov
jo
incl
mov
adc
daa
in
ret
fwait
rcrb
inc
pop
jl
jne
fsubl
cld
jmp
js
push
ss
loope
add
jp
xchg
push
jb
lret
sub
and
or
hlt
jle
das
xchg
int3
ss
fdiv
aam
arpl
lods
dec
push
in
cmpl
pop
in
dec
mov
fucomp
jo
icebp
sti
iret
inc
or
addl
loop
lahf
xor
xor
idivl
nop
sbb
mov
lahf
and
cmp
cli
insl
out
jge
inc
mov
mov
mov
xlat
addl
aaa
inc
shlb
dec
stc
push
in
jo
jbe
out
push
jne
outsl
roll
ret
and
out
add
lea
das
lret
inc
arpl
insl
jo
jns
cmpsl
pop
sbb
arpl
push
in
sub
imul
dec
cmp
xor
sbb
mov
sarl
jne
test
psubusw
lret
lret
lcall
sahf
cltd
jno
mov
cmp
stc
adc
xchg
test
arpl
adc
movb
sbb
call
or
mov
lods
xorb
mov
adc
xchg
mov
inc
pop
int3
arpl
sub
leave
lea
sub
push
loope
lock
sub
dec
fmulp
cwtl
dec
test
xchg
lea
lods
negl
repz
sbb
xchg
pop
fmuls
ja
push
sarb
add
mov
xor
sub
int3
or
getsec
out
pusha
ret
clc
into
and
popf
imul
das
cwtl
test
imul
pop
fisubl
scas
lcall
xor
cmp
sti
jae
cltd
leave
sub
inc
pop
mov
cmp
jno
enter
push
call
cmp
leave
test
inc
daa
mov
jno
std
pop
fcmovnb
sub
shrb
push
mov
rclb
insl
mov
adc
add
inc
fistpll
ficoms
mov
adc
loope
ret
jl
hlt
mov
fisttpl
dec
xchg
push
jmp
scas
xchg
test
push
mov
mov
or
mov
or
dec
int3
adc
and
jle
hlt
in
xchg
je
lods
push
xor
and
mov
call
mov
xchg
adc
aam
cli
lret
adc
mov
in
cmp
xlat
mov
sahf
sti
loopne
mov
ss
adc
pop
push
jge
pop
cmp
pop
stc
xlat
shl
adc
inc
ja
mov
mov
push
repnz
push
es
dec
fs
sti
pop
ss
or
mov
add
pop
mov
gs
out
out
repnz
sbb
cltd
loop
adc
daa
add
dec
cmp
pop
xchg
jno
cmp
mov
xchg
add
mov
push
shlb
mov
mov
test
bound
lret
subl
and
dec
or
push
leave
dec
mov
neg
pop
hlt
xchg
mov
movsb
iret
sbb
dec
test
in
lods
int
fiaddl
pop
stos
enter
test
sub
out
jp
push
gs
roll
mov
sub
push
movsb
stos
jle
or
dec
push
mov
mov
aam
dec
push
sarl
ss
jb
mov
xchg
movsb
dec
pop
push
pop
ret
mov
sarl
es
mov
sbb
mov
add
rcrb
mov
cld
shlb
pop
fiaddl
cmc
mov
and
dec
and
pusha
cli
out
hlt
pop
aaa
adc
pop
cmpsb
lret
call
jne
dec
mov
sarl
mov
mov
icebp
cmp
adc
out
roll
mov
jno
gs
or
mov
mov
jb
in
stos
xor
push
jne
mov
jg
aaa
imul
push
cmp
mov
push
rcrb
or
dec
mov
push
push
and
lock
cmpsb
cmpsl
cmpsb
mov
imul
push
mov
push
inc
pop
push
push
push
int3
jge
subl
sub
xor
push
cli
fsubl
jb
pop
popl
jg
jmp
push
mov
orb
mov
adc
pop
sbb
in
sti
loop
test
mov
movsl
and
mov
addr16
std
inc
lahf
out
popf
aaa
adc
bound
daa
cmp
scas
cmp
or
fmul
xor
cmp
scas
push
test
xlat
les
or
add
int3
or
sbb
ds
jmp
adc
out
rcll
inc
cmp
or
xchg
pop
pop
and
mov
push
stos
ja
mov
mov
cmpsb
and
nop
jo
cmp
sahf
and
orl
scas
ret
mov
push
pop
push
scas
dec
sti
movl
lret
addr16
push
loope
and
xchg
pop
dec
push
lds
daa
sarl
dec
ja
outsb
pop
dec
call
and
in
lods
xchg
aas
add
mov
jge
xchg
insb
nop
sub
jnp
mov
pushf
jno
aaa
jns
in
in
loop
hlt
mov
dec
and
cmpsb
imul
jb
mov
outsl
mov
xlat
dec
outsb
hlt
daa
push
cmp
pop
cmpsl
sbb
cmp
pop
cmpsb
shr
mov
or
or
repz
outsb
ss
cmp
shl
rcrl
loopne
les
xlat
inc
lret
std
mov
decl
pop
jle
pop
loopne
sbbl
jbe
adc
mov
mov
pop
sub
repnz
pop
lret
maskmovq
testl
cmp
inc
xchg
aaa
lret
mov
in
mov
cmpsb
hlt
and
fwait
in
pop
pop
outsl
jns
loopne
out
and
or
add
pusha
bound
pusha
add
ss
js
addr16
test
int
std
sbb
mov
scas
int
lret
pop
in
cld
cmpsb
fdivl
dec
sbb
xor
imul
cmp
add
jg
or
daa
cs
popf
mov
push
ljmp
inc
rolb
mov
lock
das
adc
mov
leave
jnp
fcoms
lcall
mov
dec
aad
fdivrl
mov
aas
mov
iret
cmp
je
adc
push
add
xor
add
push
pop
sar
mov
sbb
daa
xchg
incl
outsb
repz
and
fwait
jg
insl
out
pop
fcomp
xchg
das
mov
lcall
loope
leave
mov
sbb
insb
lods
mov
cwtl
cltd
pusha
inc
aam
dec
ret
mov
or
push
xchg
into
cmp
mov
nop
xchg
cli
xor
or
je
xor
inc
jl
mov
sub
out
pop
pop
test
repz
dec
pop
pop
mov
mov
mov
popa
mov
sub
mov
pop
pop
jo
testl
aad
std
repz
push
out
dec
dec
gs
dec
movsb
xchg
cmpsl
adc
aad
out
jge
cmp
das
hlt
push
jo
std
in
xor
sub
bound
or
cmp
xchg
push
add
int
arpl
outsb
out
fcmovnbe
pop
js
daa
rcl
or
sub
xchg
push
or
mov
xchg
sub
pop
imulb
inc
add
or
mov
rorb
inc
lea
jns
roll
mov
out
inc
testb
lret
cmp
rcrb
movsl
out
dec
inc
lcall
or
enter
pop
test
jmp
jecxz
jle
lret
jmp
imul
mov
sarl
fnsave
sbb
cmpsb
jecxz
fdivl
test
fcmovnb
roll
cmp
stos
mov
lret
push
test
movsl
cld
pop
inc
aaa
xor
imul
cmpsl
loopne
fdivrs
add
addr16
cli
inc
and
loop
mov
icebp
dec
mov
sar
or
mov
mov
ret
int
dec
inc
and
xor
jns
mov
mov
sub
shll
inc
pop
jg
mov
test
test
and
mov
jl
pop
scas
ljmp
dec
fs
sbb
and
loop
xchg
adc
aas
jge
sub
push
pop
cmpsl
in
adc
inc
and
mov
ljmp
hlt
cltd
jbe
inc
jg
xor
fidivs
cld
outsl
mov
push
mov
cmp
cmc
dec
test
mov
jge
clc
cmp
push
cmp
aaa
dec
dec
jecxz
pop
jg
mov
xchg
test
jge
addl
out
sub
pop
ss
xchg
pop
pop
add
cmp
mov
cvtps2pd
push
stos
add
xor
pop
cwtl
mov
xlat
ret
sub
adc
aam
mov
cmc
test
shrb
roll
jo
jbe
outsl
imul
rcll
and
sub
cmp
mov
xchg
lret
push
movsb
int
lock
rcrl
gs
sbb
arpl
push
lds
xchg
aad
or
cli
pop
fs
mov
popa
int3
fildll
testb
popa
sub
test
icebp
sbb
cmp
ljmp
stos
cmp
fdivp
mov
fsubs
adc
mov
push
add
in
into
repz
xchg
jmp
jg
mov
sub
lds
mov
shl
aas
push
inc
mov
or
cmpsl
sbb
cmp
cmpsl
push
xchg
lret
cmp
push
das
iret
fsubl
int
xlat
test
dec
mov
push
sbb
outsl
inc
idiv
xchg
aad
aad
mov
xlat
xchg
insl
inc
xor
inc
das
aad
mov
stos
mov
add
inc
jae
ds
xchg
sbb
insl
aaa
mov
jae
push
mov
or
inc
push
rclb
dec
sub
xor
jbe
sub
inc
bound
pop
iret
mov
std
push
mov
mov
cmp
xchg
gs
jmp
mov
sub
mov
jo
dec
shl
push
and
sbb
push
sub
and
icebp
push
dec
push
mov
fwait
jmp
sbb
mov
jno
mov
adc
pop
insl
xchg
pop
pop
into
mov
pop
inc
pop
push
and
cmpsb
mov
mov
into
cmp
lret
sbb
sbb
gs
mov
sbb
jmp
fisttpl
movsl
mov
js
sarb
mov
into
mov
in
outsb
pop
mov
inc
jmp
lock
rcl
call
icebp
fdivl
push
adc
enter
aas
loop
repnz
ljmp
pusha
imul
and
cmp
push
mov
lods
lret
push
sub
div
xchg
pop
andb
dec
rcrl
mov
push
inc
repz
xchg
sbb
mov
push
in
lahf
nop
fcoms
fwait
mov
cwtl
fcoms
cli
dec
iret
lds
sbb
cmpsl
mov
or
pop
add
hlt
add
mov
cli
shr
xor
ret
data16
das
ret
push
mov
outsb
adc
xchg
data16
test
or
sahf
xchg
push
out
popa
sbbl
mov
mov
in
imul
or
jecxz
cmpsb
mov
xchg
jae
xor
add
lods
outsl
fidivs
lds
mov
jae
test
stos
mov
inc
xchg
rcr
sbb
test
mov
jnp
popf
xor
imul
sbb
sbb
out
out
pop
call
jae
daa
push
jnp
inc
and
aad
das
aam
icebp
scas
add
imul
add
fcmovnb
sub
je
adc
psllq
mov
xor
dec
cmpl
jo
ss
adc
leave
cmp
add
jecxz
cmpl
inc
xchg
or
and
dec
xor
mov
in
jecxz
lods
and
xchg
jno
in
mov
imul
mov
push
fsubr
addr16
mov
loopne
popa
cmpsb
inc
into
insl
mov
mov
mov
bound
shlb
pop
mov
inc
jl
jle
std
outsl
cmp
pop
jge
idivb
jle
or
dec
stos
pushf
push
pusha
lcall
sub
push
loopne
jmp
mov
push
shl
cmpsl
cmp
xor
in
cld
jo
ja
scas
and
adc
push
test
or
push
dec
ficomps
int3
clc
in
incl
add
arpl
aas
test
adc
mov
jbe
lahf
sbb
cmp
mov
and
mov
sub
cmp
sub
popa
mov
outsl
fsubrl
mov
lcall
loope
ljmp
pushf
xchg
sarb
xchg
jbe
je
and
cmp
mov
sub
clc
mov
out
mov
sbb
das
mov
push
cmp
xor
adc
dec
or
popf
decb
xchg
nop
nop
int
into
dec
ficoms
xlat
jae
sbb
ret
cld
divb
xchg
inc
xor
xor
push
xor
pop
enter
and
inc
inc
nop
test
repnz
test
xor
aaa
ror
mull
lods
stc
mov
cwtl
test
fists
scas
cmp
cmpsb
add
xor
cs
adc
repz
fisubs
or
xor
ffree
and
mov
fisttps
scas
lret
dec
inc
and
cmp
or
inc
cs
add
pushf
cmp
adcb
movl
or
cmc
and
mov
push
arpl
sub
call
mov
lods
pop
aam
out
jb
or
aad
push
and
icebp
pushf
fisubrl
xchg
or
adc
pushf
in
mov
cmp
push
js
out
ret
fxam
daa
loop
mov
cmpl
sbb
out
out
mov
add
mov
das
cwtl
jmp
pop
test
mov
popa
cs
in
inc
inc
andl
jbe
repnz
sbb
sub
imul
and
int3
inc
jns
dec
lods
cs
jb
insl
out
push
mov
fisubrs
cli
inc
out
pop
lock
sar
xchg
mov
or
xor
or
bound
mov
pop
xlat
jecxz
pop
push
int3
loope
arpl
push
addr16
lahf
xchg
add
std
pusha
clc
in
lahf
fcomip
mov
mov
add
dec
pop
jle
shlb
out
push
xor
sbb
outsb
lret
out
call
jbe
adc
cmp
ffreep
cmp
cmp
loop
std
mov
cltd
fnsave
ficoms
shr
aas
mov
dec
xchg
lds
ret
xchg
stos
daa
mov
pop
and
sarl
scas
cwtl
test
or
out
jg
lds
dec
cli
xchg
adc
clc
inc
or
js
jmp
mov
data16
lret
add
jecxz
pop
dec
and
or
popf
das
inc
rclb
xchg
in
loop
sbb
aaa
daa
repz
adc
enter
cli
cmp
pop
push
push
or
fcoms
std
pusha
mov
adc
call
xchg
pop
in
enterw
pop
xor
ss
cwtl
in
negb
mov
stos
mov
stc
sbb
sbb
clc
shll
jbe
xor
dec
jae
push
pop
inc
jo
and
shlb
lea
scas
pop
loopne
sub
scas
aaa
mov
pop
sbb
cld
inc
xchg
mov
pop
pop
insl
decb
sysexit
in
jle
addr16
pop
repz
xlat
loope
sub
bound
hlt
arpl
scas
insb
or
sub
outsb
test
mov
fbstp
in
stc
lret
mov
mov
pop
inc
faddl
dec
in
sbb
push
mov
or
mov
movsl
addr16
push
outsb
repnz
aas
aam
dec
xchg
inc
pop
sub
out
daa
inc
xchg
ret
out
cltd
pusha
xor
xchg
int
sbb
daa
ss
sub
out
push
xchg
fcoms
ds
in
lret
fiaddl
daa
mov
das
daa
adc
idivl
insl
inc
jmp
jl
or
pop
fistpll
pop
ljmp
sbb
cmp
push
movsl
and
or
mov
ret
test
add
dec
pop
sbb
stos
add
dec
js
dec
or
fcomip
movsb
aaa
jns
mov
pop
pop
mov
lcall
aam
xchg
in
xchg
das
dec
aam
cli
mov
or
popf
add
iret
cmc
lock
fbld
add
pop
sbb
mov
dec
gs
inc
insl
xorb
dec
int
cmp
and
adc
imull
cmp
out
andl
nop
sub
orl
sub
shll
lods
push
cmove
and
inc
sub
imulb
test
jno
mov
push
inc
int3
stos
sbb
dec
and
in
xor
in
lods
outsb
repnz
sbb
scas
jae
movsb
mov
jmp
add
mov
int3
imul
lahf
popf
aam
ljmp
xor
add
pusha
int3
xchg
pop
fstpt
cmc
jecxz
sub
jp
scas
mov
or
jbe
bound
sub
movsb
sub
mov
push
xor
cmpsb
jl
lcall
add
or
mov
adc
pop
lock
cmp
mov
cli
inc
push
test
out
test
addr16
mov
std
mov
movsb
rcrl
and
cmc
aam
sub
cwtl
lret
jbe
jns
mov
scas
sti
je
and
inc
shr
in
dec
shlb
data16
stos
mov
test
or
ret
and
stos
sub
clc
push
and
lret
ljmp
cld
cmpsb
adc
stos
adc
fcmovnu
popa
dec
push
mov
lods
cmpb
inc
dec
and
pop
pop
sarb
int
cmp
out
int3
fldenv
inc
cmp
inc
pop
fcomi
mov
cld
xchg
xchg
rcrl
cltd
sti
dec
xchg
gs
push
daa
jp
ficompl
cmp
loop
mov
sahf
jne
cmp
xor
and
in
mov
int3
push
popf
inc
xorl
mov
sbb
push
mov
jl
mov
dec
outsb
repnz
push
ds
leave
stos
movsb
push
popa
jo
or
and
test
xchg
into
dec
fstps
lcall
jo
pop
aas
xchg
imul
movsl
jns
push
cmc
mov
sarl
jbe
push
xchg
cmc
ja
or
jb
adc
dec
jo
fimull
inc
add
ss
lods
sub
test
cmp
pop
js
pop
xlat
call
ret
das
ja
and
fmul
dec
sbb
sarb
lret
inc
inc
cmpl
xorl
in
or
or
dec
inc
mov
push
out
adc
or
xorb
loope
mov
lcall
out
lahf
and
insl
lods
jle
dec
push
adc
inc
xchg
xchg
movsl
mov
push
pop
xchg
sub
fisubl
xor
push
stc
lret
gs
sbb
pusha
mov
icebp
push
clc
push
in
jns
xchg
sbb
pop
imul
cmp
ret
push
fldl
jb
ds
push
mov
jae
ds
rcll
push
scas
mov
mov
or
fldt
popf
sti
sbb
scas
jg
stc
sub
cmpsl
push
sbb
push
stos
or
icebp
jo
cmp
arpl
push
push
sbb
push
cli
mov
outsl
mov
outsl
inc
pop
push
outsl
nop
int
dec
leave
in
in
jmp
xor
xchg
rcll
jne
mov
lret
and
ret
xchg
scas
lahf
rclb
je
dec
jbe
jno
dec
std
rclb
loop
pop
popa
inc
mov
or
push
sub
fsubrs
repz
mov
mov
xor
push
into
jae
dec
pop
xchg
pop
movsb
jle
and
pushf
lods
mov
ss
mov
mov
add
stos
cld
imulb
bound
fwait
jbe
jno
std
jnp
mov
test
pusha
adc
test
sbb
outsl
addr16
imul
dec
adc
lahf
stc
imul
fisubl
outsl
sub
test
mov
in
mov
xor
ja
repz
pop
leave
lods
outsb
aad
sub
cmp
cmp
hlt
xchg
jg
fyl2x
gs
loope
jg
push
add
push
push
lahf
jmp
add
push
and
aad
mov
rolb
fsts
cwtl
push
repz
mov
mov
push
sti
and
imul
sub
cmp
outsl
test
call
movsl
and
bound
mov
cmp
aad
pop
shlb
dec
imul
fdivrl
jns
mov
mov
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
clc
rcll
jb
cmp
mov
mov
stos
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
