push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
scas
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
icebp
cs
sub
add
rorl
xchg
mov
jno
test
jge
psubusb
mov
movsb
push
outsb
clc
das
aas
dec
xor
mov
jns
insl
or
mov
mov
jg
and
jns
aaa
cwtl
lods
dec
pop
push
adc
and
mov
dec
jo
cmp
mov
adc
lahf
sub
fisubrl
jmp
call
adc
cmc
std
fmuls
sub
mov
xchg
hlt
arpl
mov
inc
jmp
mov
sbb
mov
loope
scas
push
into
sti
call
insb
cmp
pop
mov
out
out
mov
insb
cld
sbb
xchg
mov
movsb
stos
inc
rcr
mov
fistpll
fmulp
sbb
insl
sbbb
or
out
cmp
or
lods
sbb
gs
dec
jae
jle
dec
mov
cwtl
arpl
cmpsb
and
and
cmp
mov
in
mov
loope
pop
hlt
aas
bnd
mov
mov
inc
jmp
jns
fs
in
repz
cmp
cmc
out
xor
int3
stos
jp
xchg
push
jno
xor
pop
stos
mov
jp
sub
push
xchg
orl
out
pushf
push
push
jle
inc
aas
data16
xor
test
data16
leave
sbb
push
push
sarb
push
dec
lods
add
pop
pop
mov
inc
out
push
mov
add
jne
mov
in
push
add
fstl
ss
test
jno
pop
andb
fadds
dec
inc
dec
pop
dec
add
adc
arpl
cmpsb
jmp
repnz
push
lcall
mov
cmpsb
lds
movsl
pop
xchg
jo
lret
dec
rorl
insl
and
inc
pop
in
insl
ja
arpl
aam
sbbl
hlt
sahf
mov
or
adc
dec
aaa
sbb
jnp
out
loopne
fld1
mov
or
mov
jno
testb
dec
sbb
inc
rcrl
iret
pop
inc
jo
jne
pinsrw
adc
push
test
cmpl
xchg
pop
xor
cwtl
inc
add
xor
cmpsl
std
push
xchg
sbb
cs
iret
loop
xchg
mov
add
xor
dec
scas
add
cmpsl
loop
pusha
xlat
mov
mov
sub
xor
cmpsb
gs
lods
cmp
inc
mov
iret
sarl
gs
inc
mov
data16
dec
subl
imulb
cli
int3
pushf
xor
push
imul
fidivrs
or
and
pop
dec
stc
mov
or
pop
sbb
xchg
mov
sbb
adc
mov
xchg
xor
nop
cmp
mov
aad
ja
popa
xchg
adc
outsb
es
std
pop
bound
xor
vcvttss2si
out
out
idiv
adc
imul
fwait
ljmp
inc
mov
fs
dec
jne
adc
call
xor
push
je
mov
bound
and
and
cld
lret
inc
dec
add
in
jno
pushf
or
push
fidivrl
loope
pop
fsubp
lods
movsb
xchg
outsl
sahf
js
push
outsb
mov
clc
lea
pop
add
into
iret
cmp
negb
stc
loop
add
xchg
xor
jmp
inc
enter
data16
xor
bound
shll
inc
aaa
mov
or
inc
adc
pusha
xor
dec
mov
ret
cmp
aas
adc
stos
pushl
std
int3
lods
scas
mov
cmp
lods
pop
push
out
mov
bound
cmpsb
dec
xor
test
and
mov
ror
fsubs
test
pusha
loope
insl
mov
inc
xchg
push
pop
repz
mull
and
insb
ljmp
sub
inc
ss
adc
in
ffreep
xor
pop
loop
pop
jno
out
lret
xor
test
mov
call
out
dec
adc
jmp
jns
or
sub
push
pop
cmc
nop
mov
clc
jg
int3
xchg
loope
fidivs
pop
push
test
mov
das
jo
push
push
aas
pop
cmp
ljmp
pusha
test
test
inc
rcr
push
fimull
aas
and
fs
bound
testb
pop
dec
aad
aas
cmp
test
inc
test
fnstcw
test
adc
movsb
dec
aam
mov
and
adc
add
shrl
dec
jl
mov
imul
ret
mov
in
mov
xchg
in
push
out
add
inc
sbb
push
aaa
cmp
stc
jae
dec
inc
xor
imul
jo
jcxz
sub
add
ret
push
and
test
aas
arpl
adc
in
ja
push
cmp
fcmovbe
roll
pop
movsb
sub
mov
pop
xor
sub
push
adc
jg
repnz
and
insl
or
sub
jae
icebp
sub
dec
adc
sbb
movsl
mov
fs
add
push
sub
mov
ret
sbb
adc
cltd
leave
push
dec
fdiv
jl
mov
enter
cli
sbb
leave
movsl
add
shlb
sub
enter
fcomps
adc
icebp
ja
notl
adc
xchg
cltd
js
pushf
adc
mov
pushf
pusha
andl
aaa
shr
cmp
jle
std
dec
insl
mov
mov
loopne
lea
fsubp
cmp
xor
pop
repz
nop
mov
in
test
xchg
xchg
cmp
cs
adc
or
add
lds
pop
and
fdivrl
daa
fldt
repz
popa
sub
in
sbb
pop
loop
stos
jno
jecxz
pop
inc
or
mov
shl
jmp
paddsb
mov
shll
push
out
movsb
jne
mov
mull
push
cli
or
add
mov
sub
fstpt
sub
jecxz
lods
das
cmpsb
sbb
jecxz
jbe
dec
jae
pop
xchg
sahf
mov
adc
mov
ret
or
jns
out
rcr
fs
fdiv
add
imul
inc
test
mov
movsl
xor
ret
or
xchg
jmp
mov
mov
mov
dec
pop
int
inc
push
adc
inc
test
pop
pushl
jle
sahf
mov
and
mov
jmp
xchg
aam
cmpsb
rcr
imul
mov
sbb
xchg
sahf
lods
rcrl
int3
jns
out
push
stos
mov
sahf
imul
leave
lods
jno
mov
xor
jl
push
call
sahf
sti
add
dec
pop
repnz
shlb
mov
cli
imul
jle
scas
or
call
cltd
imul
ss
inc
inc
inc
pop
adc
adc
pop
fldl
sub
pop
xor
cmp
call
mov
out
mov
cmpsb
stos
jle
push
xor
cli
loopne
dec
scas
clc
shrl
or
in
imul
push
stc
jns
call
lea
call
push
xor
adc
inc
aaa
data16
fistl
lret
add
mov
sbb
xor
sub
ffreep
lret
push
rclb
cmpsb
pcmpeqb
cli
je
adc
pushf
imulb
jp
imul
mov
cmp
dec
lds
xchg
cmp
push
addr16
in
mov
mov
pop
movsl
xor
cmp
inc
jae
gs
or
push
lea
testb
push
jle
inc
xchg
or
lret
icebp
das
pop
sub
sbbb
pop
imul
or
dec
adc
cwtl
mov
add
aaa
cmpsb
mov
add
jnp
rol
xchg
inc
mov
ficompl
xor
insb
imul
loope
dec
xchg
inc
gs
xchg
jmp
mov
pop
out
pop
dec
mov
push
sahf
or
pop
aas
mov
sub
int
pop
jne
sub
mulb
call
cli
ss
xchg
fdivr
mov
roll
jle
filds
sub
fsubl
inc
jbe
sbb
pop
fistl
jbe
and
xchg
loope
rcll
xor
mov
repz
clc
inc
cmc
repnz
adc
dec
cmpsl
hlt
push
jmp
pusha
jp
movsl
cwtl
loopne
clc
sub
and
cld
stc
jne
hlt
ss
pop
cmp
sub
aas
inc
mov
aam
jge
dec
lods
ret
pop
daa
adc
call
les
call
and
mov
mov
iret
mov
inc
inc
js
stc
push
jne
cmp
push
std
adc
std
call
pop
push
lret
daa
or
jno
adcl
das
cwtl
push
jmp
shlb
lds
mov
leave
arpl
inc
scas
daa
ja
add
popf
popl
out
xchg
inc
inc
shl
cmp
dec
push
lods
xchg
js
sbb
lock
pushf
out
fmull
sub
xchg
inc
rcl
sub
out
push
jmp
add
mov
mov
int
notl
cmpsb
push
pop
add
call
mov
pop
in
loopne
int
xchg
inc
mov
out
divb
fwait
xor
pop
ret
bnd
pushf
mov
pop
or
icebp
scas
lds
dec
or
int3
xor
pop
push
inc
pop
push
and
jge
and
les
cmp
sbb
sub
je
in
xchg
xor
push
mov
mov
mov
xlat
mov
cmpsl
test
test
mov
mulb
sub
mov
mov
mov
aam
mov
pop
das
mov
adcb
jge
add
sub
or
mov
rep
imul
int3
cmpsb
cmpsl
nop
fcmovne
pop
sbb
pop
push
outsl
hlt
mov
inc
add
or
aam
jne
and
test
mov
pusha
loop
outsl
lods
cmc
cmpl
or
jbe
imul
leave
adc
ret
imulb
divl
push
mov
lea
dec
cmp
add
cmp
jecxz
push
outsl
pop
jo
push
push
enter
mov
call
adc
push
jno
mov
lods
jg
in
add
cmc
add
jmp
loope
call
fstp
jb
outsl
cmpl
sbb
jmp
testb
sbb
jecxz
aaa
ror
or
scas
in
xor
xchg
stos
jecxz
mov
push
mov
aad
popl
les
in
mov
dec
ja
mov
in
gs
push
and
out
dec
or
cld
push
jbe
outsb
lds
stos
dec
in
adc
sbb
adc
in
repz
div
sbb
sub
xchg
jmp
ret
sbb
xor
jmp
mov
jmp
jl
loopne
push
imul
adc
arpl
push
push
xchg
and
imul
lods
movsl
ja
jne
cld
jmp
das
sub
mov
sbb
jge
cltd
mov
mov
fwait
push
inc
outsb
mov
addl
lret
mov
aaa
ret
sbb
cmpsl
iret
push
pop
aam
mov
iret
or
mov
lods
movsb
sub
or
mov
xchg
imul
decl
mov
cltd
ret
test
into
dec
lea
xchg
jb
lock
in
gs
sti
shlb
call
mov
lret
cwtl
pop
push
mov
ret
filds
or
sti
das
xor
lds
or
push
xor
push
lret
sarb
inc
das
popa
movsl
dec
hlt
sbb
xchg
inc
nop
in
sub
movsb
lds
les
hlt
popf
aad
das
mov
xor
mov
popl
loopne
call
jmp
pop
pop
push
mov
int
cmp
test
sbb
sub
pop
inc
incl
lcall
imul
insb
push
mov
add
sub
mov
sti
hlt
cmp
lods
scas
and
or
or
push
jbe
pop
ljmp
out
jae
icebp
ss
cmp
pop
lret
popa
mov
out
cwtl
xchg
xor
out
jmp
cmpsb
mov
mov
imul
sub
mov
std
cltd
filds
inc
outsb
repz
clc
cmp
sub
imul
sbb
xlat
fmuls
sti
xlat
jns
and
arpl
cmpsb
xchg
cmp
leave
push
iret
lahf
mov
dec
pop
inc
mov
mov
jns
adc
in
mov
mov
cmp
push
pop
cmp
imul
jp
dec
call
adc
mov
mov
repz
push
xor
test
xchg
pusha
mov
les
push
and
push
mov
add
lahf
imul
add
orb
inc
ljmp
iret
sbb
xor
test
pop
inc
rcl
or
in
subl
insb
out
ror
js
pop
inc
mov
pop
stc
add
sub
scas
es
fnstcw
mov
mov
xchg
inc
les
push
xchg
enter
pushf
ss
pop
xchg
mov
mov
cs
iret
inc
jb
pop
test
jbe
in
inc
aam
pop
pop
fistps
leave
xchg
gs
dec
insb
cmp
scas
andl
rclb
sbb
lea
in
mov
mov
xor
inc
push
adc
or
in
dec
dec
inc
out
adc
xchg
mov
push
loop
or
cmp
inc
push
dec
jecxz
jecxz
or
mov
scas
add
shl
in
adc
sahf
push
mov
pop
and
idiv
pop
mov
jae
daa
pusha
dec
popf
mov
fnstsw
cs
test
movsb
sub
or
cmp
add
ret
sti
sub
test
jmp
sub
xchg
cltd
inc
sbb
lret
adc
fdivs
test
push
call
inc
imul
push
push
scas
in
int3
sbb
jne
dec
cltd
jbe
inc
add
push
sti
in
push
mov
pop
cmp
mov
imul
iret
add
std
jge
jg
aad
mov
pop
pushl
addr16
add
pop
mov
add
sbb
pusha
subb
mov
aam
jmp
xchg
mov
mov
ds
ret
or
sbb
pushf
xchg
in
jo
ret
stc
pop
cs
xor
mov
arpl
sarl
sub
lcall
sti
ret
insb
and
sbb
arpl
aas
add
adc
outsb
inc
mov
dec
or
pop
stc
call
mov
jle
pop
mov
and
roll
sbb
lret
mov
mov
xchg
les
mov
xchg
sbbl
rolb
pop
mov
adc
fwait
cmp
popa
inc
xchg
add
fcomp
and
push
ja
sub
push
lret
jle
out
push
neg
mov
repz
sbb
xor
insb
jno
mov
xor
pop
shlb
cwtl
push
lcall
test
shlb
push
xor
jmp
iret
dec
pop
sub
pop
dec
mov
jecxz
push
adc
pop
leave
aas
and
xchg
jle
aad
cmpsb
inc
sbbb
out
adc
mov
adc
cmp
cli
lock
icebp
imul
icebp
xor
das
js
fldt
sub
add
cmpsb
fsubrp
sbbl
mov
aas
ret
adc
mov
mov
mov
je
or
jno
jno
out
test
decl
les
pop
arpl
mul
sti
leave
push
push
and
push
in
sbb
dec
mov
movsl
std
dec
jl
and
ffree
arpl
push
lds
lret
cmp
mov
jae
jno
aas
add
jne
mov
xchg
sub
test
movsl
or
jb
push
sbb
pop
jno
dec
push
in
push
or
push
xchg
sbb
fnsave
jmp
mov
dec
aam
idivl
insl
jle
je
push
xor
out
mov
out
sub
insb
push
sbb
pop
or
mov
cld
cltd
inc
aas
dec
jb
dec
pop
mov
lock
movsl
movsb
cmp
inc
aaa
sbb
sub
leave
icebp
fs
shr
lret
adc
and
pushl
sarl
and
inc
mov
inc
mov
xlat
stos
sub
adc
negb
pop
es
cli
mov
cld
inc
insl
mov
sbb
out
dec
outsl
or
dec
movsb
pushf
orl
push
popa
movsl
or
mov
xchg
sub
push
hlt
cmp
cmp
pop
fsubr
lods
jge
mov
out
pop
jb
jnp
and
cld
push
and
jmp
adc
pop
push
cmp
push
ja
jae
xor
push
sub
pop
jmp
repnz
dec
or
std
divb
divl
sti
cs
rcl
mov
dec
jecxz
or
pop
imul
ret
inc
xor
int3
clc
faddl
pop
xchg
push
adc
lods
sub
imul
mov
stos
lret
xor
gs
jp
fwait
xor
rcrl
loopne
pop
leave
sub
pop
orl
ret
fs
mov
call
mov
mov
push
mov
mov
push
and
mov
and
fisttps
mov
push
jne
jg
and
cmpsl
xchg
adc
clc
aad
xchg
xchg
add
pushf
je
adc
sub
cwtl
cmp
xchg
mov
ds
out
fistpll
cmc
mov
sub
fsubl
aad
dec
sar
sub
or
mov
and
das
inc
fwait
pop
inc
fisttps
pop
xor
add
pop
sarb
sbb
flds
and
add
fbstp
adc
in
sub
mov
pop
pushf
push
les
push
pop
jge
shr
and
shrb
test
sbb
push
xchg
mov
in
cmpb
call
in
inc
mov
ret
cld
mov
mov
mov
xchg
or
hlt
mov
cmpsl
sbb
pop
icebp
int3
push
outsl
jno
sbb
xchg
add
mov
add
lods
fwait
jne
adc
inc
dec
std
adc
mov
imul
insl
jecxz
mov
and
lret
and
cltd
jmp
js
xor
push
or
stos
lcall
vmovups
roll
or
add
mov
mov
push
aaa
push
lds
loope
pop
in
sbb
sub
daa
adc
mov
mov
in
or
adc
ss
xor
js
adc
test
jno
and
mov
loope
sbb
fsubl
push
inc
insl
pop
inc
push
inc
or
scas
pop
shll
dec
jecxz
lods
orl
jne
pop
mov
and
mov
sbb
mov
inc
sub
ret
push
push
cli
int3
cs
sbb
jmp
jmp
mov
jmp
cmp
jns
push
mov
mov
mov
dec
inc
addr16
mov
fwait
mov
stos
adc
mov
loop
lret
mov
repnz
ror
rcll
out
out
insl
or
popa
xor
xor
mov
cmpsl
mov
mov
jb
dec
out
fdivr
popf
adc
and
pop
cmpsb
cs
jne
inc
jo
cmpsl
aas
and
sbb
mov
jmp
aaa
lahf
pop
xchg
jno
cmp
loopne
lea
cmp
or
frstor
inc
in
lret
fs
jmp
lea
sbb
mov
xlat
ja
es
and
xadd
lea
adc
cmp
shlb
ja
jne
clc
arpl
mov
push
test
inc
decb
sbb
arpl
mov
push
loop
rorl
inc
jle
sbb
mov
rclb
nop
je
mov
addb
dec
in
je
icebp
shl
sub
pop
rcrl
inc
sarb
add
dec
rcrl
int3
inc
pop
mov
fnstcw
or
lret
jecxz
es
and
mov
cmc
cmpsl
cmp
cmpsl
jge
mov
sbb
pushl
mov
movsl
sub
dec
test
std
fists
jbe
mov
mov
sub
push
loope
or
les
pop
andb
add
push
js
arpl
imul
scas
icebp
out
loope
mov
mov
mov
xorb
test
aaa
fwait
out
sahf
mov
add
xchg
sub
dec
out
ja
xchg
jle
xor
inc
fs
jge
call
test
xor
mov
sti
jae
jg
xor
and
dec
xchg
pop
add
jge
int3
lcall
mov
dec
sbb
lods
clc
lock
mov
in
out
pop
or
scas
pop
insb
nop
fisttpll
cmc
cmp
aad
mov
ja
or
xchg
std
cmp
inc
mov
and
lods
into
pop
lods
xor
out
dec
out
mov
adc
data16
mov
xor
jmp
shrb
scas
sahf
add
dec
or
test
out
mov
divl
xchg
and
jmp
cmc
cwtl
out
rcrl
mov
icebp
jmp
inc
movsl
fs
jne
lea
test
dec
into
call
jle
xchg
neg
add
mov
xchg
xor
add
mov
pop
mov
mov
xchg
xchg
lret
adc
jmp
insl
in
js
jge
xchg
enter
jno
jbe
push
and
push
inc
lahf
sub
ss
gs
aad
push
decl
js
aam
pop
div
imul
adc
xorl
mov
dec
push
and
jno
lcall
inc
add
or
shll
inc
stc
or
pop
test
loopne
adc
cmp
stos
movsb
cmp
mov
dec
cmp
sub
sarl
rolb
cltd
xchg
xchg
cmpsb
push
cltd
loop
movsl
push
sti
xchg
fs
sbb
or
fcom
lahf
push
in
imul
xchg
rcrl
jae
push
mov
mov
cmp
std
fldenv
lret
ret
and
adc
push
incb
add
sub
fstpt
mov
or
pop
or
adc
push
mov
sbb
or
es
xchg
ljmp
cmpsb
jp
jle
and
xlat
sub
imul
aas
adc
push
fidivl
sbb
or
cmp
and
pop
jns
lret
repz
fldl
inc
fwait
inc
lea
jl
xor
add
mov
mov
shlb
jae
sub
frstor
sub
mov
out
jb
loope
pop
mov
in
xchg
addl
jl
inc
je
mov
pop
or
in
lock
mov
ljmp
jo
cmp
mov
inc
push
in
xchg
jnp
pushf
fs
add
xor
loope
pop
subl
jb
repnz
fisubs
ret
jmp
jo
jecxz
bound
add
jae
adc
inc
cmp
ftst
dec
fimull
cmp
cmp
sbb
jo
xor
jmp
sahf
in
inc
sub
les
sub
movsb
sarb
mov
or
mov
or
push
add
fs
rolb
mov
popf
lds
nop
push
dec
imul
mov
push
mov
sbb
adc
pop
aas
xor
xor
sub
jle
cmpb
mov
xchg
mov
sbb
mov
cmpsl
mov
mov
xor
or
sub
cmpsb
xchg
imulb
jl
or
loopne
push
lret
loope
and
neg
ret
xor
mov
fs
hlt
cmc
lcall
mov
icebp
mov
xchg
fldl
jecxz
int
cmpl
cmp
xor
and
mov
mov
test
mov
les
repz
stc
daa
and
pop
sbb
pop
scas
popa
xchg
pop
rorb
sbb
and
dec
fstpl
jno
sbb
pop
inc
cmpsl
jo
mov
dec
lods
mov
je
push
insl
rolb
iret
jbe,pn
ja
in
lea
daa
pop
sbb
add
pop
mov
sub
stc
or
pop
pop
rorb
add
or
pushf
fstpl
fstps
out
cmpsl
and
mov
or
imul
mov
jae
mov
pop
cmp
lds
and
inc
and
fildl
test
push
in
fistl
cwtl
add
jecxz
mov
inc
dec
outsb
mov
les
int
mov
mov
push
int3
mov
mov
mov
fsubrs
lret
mov
and
es
mov
dec
adc
push
fiaddl
and
pop
xchg
or
pop
xor
icebp
xchg
pop
mov
xchg
jle
or
daa
daa
lds
adc
mov
lret
push
not
jle
test
jge
jmp
int3
jge
lea
pop
xor
dec
sub
js
pop
cmp
or
jno
and
xchg
xchg
in
fdivl
mov
pop
and
jne
inc
fmuls
std
sbb
int
shll
or
aas
sbb
adc
cmp
fs
jle
inc
adc
iret
dec
lea
jae
pop
ja
mulb
sti
dec
dec
mov
int3
cmp
arpl
mov
in
xor
mov
push
out
jne
in
or
xchg
xlat
lods
pop
jo
test
push
adc
pop
mov
jmp
cmc
clc
ja
int
cmp
xor
out
into
les
jae
sbb
mov
sub
mov
lret
mov
lret
out
xlat
mov
xchg
jmp
bound
adc
and
nop
pop
aad
sbb
pop
cli
sub
mov
pop
test
ss
es
and
loop
outsb
dec
imul
xchg
sbb
lods
pop
cmpsl
fistpll
sbb
cmp
xchg
icebp
leave
pop
adc
negb
xor
xor
icebp
jae
repnz
inc
loope
lock
xor
leave
adc
xchg
into
aas
clc
mov
pop
mov
arpl
xor
or
push
and
pop
repz
push
stos
orl
aam
adc
adc
sbb
xor
int3
push
cmp
inc
xchg
xor
or
repnz
movsl
push
hlt
fcompl
jno
int
inc
mov
lret
adc
or
mov
jae
push
adc
xor
lods
test
mov
and
mov
xor
stc
pop
lahf
add
pop
and
arpl
popf
aad
jae
scas
pop
das
pop
popa
push
pop
shr
or
aaa
arpl
sahf
jae
daa
popa
rcrb
pop
gs
push
and
or
sub
mull
rcr
sub
jmp
and
dec
jae
fstpt
sbb
stos
jmp
mov
mov
dec
jbe
mov
jle
je
iret
xor
mov
mov
enter
lock
push
or
jno
and
rolb
fsts
jmp
dec
cmp
cmp
jno
int
adc
std
arpl
push
rol
or
fcomi
stos
std
bound
pop
cmp
jo
insb
in
popa
mov
inc
sti
mov
cmpsl
fmuls
add
dec
out
sbb
out
hlt
loop
push
cmpsl
out
flds
das
push
rolb
mov
jecxz
xchg
sub
mov
stos
std
js
or
in
loopne
add
pop
cmpb
dec
xor
das
pop
sbb
neg
inc
int3
push
jge
jg
sbbl
dec
in
scas
mov
xchg
call
and
nop
xchg
add
sbb
stos
insb
sbb
mov
jl
dec
xchg
dec
js
adc
xchg
mov
jo
in
xlat
stos
ds
shll
cmp
cmp
pop
loope
movsl
ret
push
fimuls
push
or
sub
jno
cs
fwait
ret
or
mov
xorl
in
sub
xchg
sbb
and
jp
mov
mov
or
repz
and
mov
mov
and
push
xchg
ret
fbstp
mov
ljmp
jp
aaa
into
cmpsb
push
loop
jae
pop
sub
popa
lret
mov
push
pop
mov
and
das
and
adc
cmp
icebp
mov
scas
xchg
push
cmp
aad
aas
cmpl
jne
mov
adc
das
pop
fbstp
fdivl
fcoms
mov
push
stos
xchg
fstpt
stos
clc
fnsave
fucomi
dec
xor
or
inc
push
mov
jae
enter
mov
jmp
fs
push
jmp
scas
and
push
sti
call
push
mov
adc
shll
test
inc
jge
cmp
dec
addr16
popf
rorl
push
stos
xchg
and
xor
imul
sub
sbb
sbb
sub
dec
imul
xchg
sbb
stc
mov
mov
cmc
mov
cli
shrl
insb
mov
dec
inc
push
push
mov
adc
push
jo
jo
sub
jns
adc
push
int
xor
jnp
push
inc
and
ret
mov
xchg
xchg
jg
push
jp
ret
sub
ret
lock
and
shl
add
push
fwait
mov
mov
jecxz
lcall
insl
mov
jo
loopne
add
inc
seto
lods
cli
mov
lea
int3
jg
jmp
rol
les
pop
stc
movsl
or
repnz
adc
xchg
ficomps
push
dec
mov
js
shl
inc
push
pop
sub
lret
inc
aam
cli
test
stc
icebp
test
push
cmpsb
int
cwtl
notl
push
icebp
dec
out
ss
stos
dec
in
jge
fistpl
pop
in
xchg
xchg
push
ficomps
out
das
fs
arpl
daa
stos
pusha
sbb
pop
leave
dec
inc
fabs
add
std
addr16
jle
jmp
dec
add
add
cmp
lret
adc
xchg
imul
idivl
push
sub
mov
movb
add
into
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
out
test
hlt
pushf
jnp
hlt
pushf
jnp
lods
ret
enter
rcll
test
mov
xlat
scas
push
xchg
lret
xor
fdivs
scas
fldl
jge
mov
mov
jp
pop
jp
pop
out
int3
push
lods
lcall
xchg
sub
das
mov
insb
lea
lock
mov
repnz
lods
jb
adc
push
inc
dec
aaa
lret
mov
shlb
lock
push
mov
fcoml
jb
test
jb
insb
frstor
push
icebp
mov
mov
jecxz
xchg
mov
lods
jmp
push
pop
dec
gs
in
fnstsw
ficompl
dec
js
je
push
pop
or
outsl
mov
arpl
lds
ret
mov
push
sbbl
jns
leave
nop
xlat
les
mov
mov
mov
jmp
sub
xchg
dec
push
and
popa
mov
pushf
or
ret
sbb
stos
sahf
int3
test
xor
jns
inc
add
loopne
loopne
sbb
pop
adc
popf
call
mov
xor
pop
shr
push
xchg
arpl
lret
test
dec
test
into
aad
mov
out
in
and
jb
push
add
jl
shrb
push
popa
adc
out
inc
and
cs
xchg
lods
sbb
jmp
insb
sub
pop
lcall
mov
scas
flds
mov
jmp
lods
inc
cmp
mov
pop
dec
cmp
mov
lret
icebp
repnz
jp
mov
mov
lahf
adc
push
xchg
jge
mov
inc
push
jle
cmc
mov
cmp
std
int
adc
mov
mov
add
cld
shlb
sti
jmp
in
mov
bound
in
sbb
aas
cltd
jae
cmp
lods
fdivl
push
and
nop
mov
shlb
fsts
jno
push
mov
jge
sub
xchg
lods
repz
jb
popa
jg
xorb
lret
cmpps
or
mov
clc
xchg
sub
in
aas
add
imul
adc
loop
shll
mov
sub
jge
dec
arpl
lods
push
xor
scas
mov
add
push
or
std
je
push
dec
mov
push
push
test
push
mov
adcl
imul
xchg
xor
pop
inc
fildll
scas
pop
fstpl
je
shll
mov
inc
mov
sbb
jo
mov
mov
mov
cwtl
adc
push
mov
cmp
movsl
push
mov
jns
push
insl
jp
out
jbe
aas
aad
cltd
test
out
pop
cmc
les
dec
adc
push
test
or
jmp
ret
rcll
push
mov
jge
lcall
rol
and
sub
jae
push
or
loope
xchg
cs
fwait
repz
stos
fsubs
loop
sti
daa
sbb
pop
pushf
add
fsubrp
lds
or
fstpl
sbb
mov
cmp
adc
adc
adc
loope
aaa
lret
pop
dec
into
aad
test
inc
sbb
xor
add
jl
imul
lret
jb
jbe
mov
add
push
xchg
stc
aas
orl
mov
jle
popf
daa
pop
lods
or
in
imul
jmp
inc
scas
inc
jo
jnp
scas
imul
push
push
mov
dec
jg
into
jge
repnz
ja
mov
insb
scas
cmpsl
movsl
lock
fisubrs
jb
pop
sbb
sbb
stc
icebp
push
xchg
jne
xor
repnz
inc
jle
fs
test
inc
and
rclb
dec
push
flds
stos
test
fwait
dec
push
or
xor
fildll
call
cmp
arpl
out
sub
shrl
aam
dec
imul
and
inc
call
mov
jne
fcoml
stc
adc
mov
nop
mov
lods
sub
out
bound
sahf
pop
add
push
pop
pusha
addb
add
das
or
mov
adc
add
fstl
movsb
and
cmpsb
bound
push
loope
enter
jmp
decb
xor
or
xorb
in
xlat
lcall
mov
sbb
and
push
jl
adc
pop
xchg
mov
ret
push
xchg
cmp
int3
ljmp
cld
sbb
aas
mov
pop
mov
jns
shl
add
dec
add
xchg
mov
fdivrl
imul
jb,pn
mov
lods
nop
and
fcmove
scas
pushf
out
int
or
data16
lock
out
pop
ja
mov
fwait
or
jl
in
sbbb
xchg
leave
sub
outsb
cmc
mov
and
fdivl
dec
imul
enter
shlb
inc
add
aad
pop
aad
movsl
and
loop
mov
inc
jge
mov
leave
mov
enter
daa
pop
imul
subl
jmp
sub
mov
outsb
sub
aaa
ja
fldt
mov
movsl
mov
jo
hlt
movsb
lds
mov
gs
sbb
sbb
mov
in
movl
push
ss
test
mov
mov
iret
xchg
sub
mov
cmp
xchg
popl
push
aad
aad
mov
es
iret
fstpt
testl
dec
lret
pop
ds
xor
jl
shl
sti
cmpl
sar
jbe
sti
scas
mov
cmpsl
push
jnp
cmp
mov
fsubr
outsb
movb
jl
xchg
jmp
test
xor
call
ds
sbb
pop
pusha
loopne
jg
movsl
pop
mov
push
xor
lcall
inc
lahf
push
push
jns
add
inc
push
dec
dec
inc
dec
or
popf
aad
lods
xchg
lods
xor
pop
push
popa
ss
mov
sti
xchg
shrl
push
data16
mov
pop
inc
mov
test
or
cmp
add
adc
add
lods
repnz
sub
fcmove
pop
sti
inc
pop
add
out
popa
push
outsl
inc
and
mov
xchg
daa
rorb
adc
add
pop
cmpsl
insl
pusha
jb
pop
sub
jns
sahf
adc
aam
aaa
xor
mov
mov
sub
lahf
out
jl
and
or
lret
sub
outsb
out
pop
pusha
inc
scas
cmp
enter
mov
mov
cli
fwait
rorl
mov
push
cmp
test
or
lcall
mov
in
inc
or
push
scas
xor
popf
cmp
js
lods
rcrl
add
xor
mov
cld
fdivs
push
popa
xchg
mov
flds
sub
pop
inc
mov
sub
and
and
add
out
out
xor
filds
push
insl
fiaddl
pop
out
pop
xchg
sub
mov
popf
aad
cmpsb
add
aas
dec
push
jg
movsl
xor
dec
daa
xchg
sbb
imul
andl
in
js
rcrb
cmpsl
loope
hlt
mov
ret
jne
in
cwtl
cmp
out
enter
cltd
and
jmp
iret
mov
dec
icebp
and
dec
cld
mov
jp
inc
mov
cmp
adc
dec
les
mov
cmp
mov
mov
mov
into
cmpsb
in
test
outsl
push
jmp
sub
push
loop
mov
sbb
push
ljmp
pushf
cmp
std
push
imul
lock
pop
mov
push
das
insl
repz
roll
stos
and
mov
or
mov
lea
lea
imul
mov
shll
or
and
mov
jle
adc
pushf
mov
pop
test
std
scas
gs
dec
ret
cmpsb
roll
aam
push
in
mov
mov
adc
inc
mov
cmp
and
stc
or
addr16
push
pop
mov
repz
sub
scas
mov
xlat
stos
fidivl
mov
xor
mov
movsb
lret
mov
adc
pop
mov
jbe
cmp
cmp
sbb
sbb
cmpsb
or
pop
pop
lcall
mov
or
pop
aaa
sub
stc
les
pop
int
inc
call
mov
mov
cld
inc
ja
je
movsl
mov
jp
push
imul
cmp
stos
or
jmp
xor
test
cmp
mov
mov
fs
mov
pop
push
aam
pop
lret
xor
fucomi
insl
sub
xchg
lods
cwtl
push
jbe
movsl
pop
es
push
ja
xlat
dec
cwtl
pop
adc
xchg
jnp
or
lahf
in
mov
ret
sbb
push
add
loope
int3
xchg
imul
mov
test
addr16
sub
and
xchg
adc
cmp
out
sbb
sbb
xchg
xchg
adc
sti
imul
add
xchg
cli
lock
adc
into
imul
push
andb
push
dec
inc
in
push
pop
adc
rol
fmul
insl
xor
fldt
mov
push
out
cmp
outsb
imul
mov
mov
push
cmp
movsl
xchg
mov
push
mov
lahf
push
leave
lret
pop
ret
and
ljmp
mov
push
insb
ror
popf
jg
sbb
jle
sahf
adc
movl
ficoms
cs
sbb
outsb
nop
sarl
decl
stos
lret
sahf
sahf
adc
stos
push
and
aam
popf
clc
sti
aam
insb
data16
loope
sbb
rcll
xchg
int3
int
fs
push
in
mov
push
mov
pop
cmp
fdivs
punpcklbw
call
sbbb
out
ja
sbb
add
xor
push
dec
xchg
lods
jg
sbb
sbb
lret
lea
mov
xchg
jg
pushf
call
in
std
mov
int
and
movsl
clc
lods
aam
stc
movb
pop
hlt
pop
xchg
xor
inc
movsl
into
sti
push
xchg
addr16
and
sbb
or
xchg
xchg
subl
sub
mov
lds
xor
roll
mov
mov
pop
gs
mov
mov
repnz
icebp
xchg
sbb
repz
push
jo
outsb
jl
or
dec
jns
data16
adc
xchg
test
aad
fdivp
hlt
ds
sub
pushf
xchg
cmpsl
or
adc
loop
rcr
movswl
cwtl
xor
cmp
gs
fld
pop
insb
jge
bnd
mov
flds
movsb
mov
pop
jl
sub
lret
pusha
mov
adc
mov
ds
sbb
dec
cmpsb
lcall
jp
ficompl
and
sbb
push
dec
pop
mov
mov
in
jae
dec
sub
or
jle
arpl
push
dec
jns
movsl
sahf
adc
push
rcll
or
decl
je
call
mov
nop
and
es
sbb
adc
sbb
mov
mov
xchg
push
test
out
outsl
and
jmp
mov
dec
mov
adc
nop
add
and
fidivrs
test
cli
rclb
into
mov
jne
cltd
mov
maskmovq
fs
filds
inc
out
mov
movsb
ror
lds
jne
add
xor
xlat
adc
xchg
mov
cmp
imul
andl
mov
scas
stc
or
loope
sub
inc
rolb
inc
dec
in
mov
jb
cmp
repz
sub
aas
sub
xchg
repz
add
mov
js
push
mov
jg
or
out
mov
imul
leave
xchg
stc
pop
das
cmp
jecxz
lea
mov
ds
and
sbb
pop
push
mov
in
push
pop
stos
push
jecxz
mov
mov
push
and
imul
dec
xchg
adc
cmp
jnp
out
daa
mov
popf
outsl
dec
ljmp
aam
int3
cmpsb
push
mov
jle
and
adc
jb
daa
out
ret
pop
inc
icebp
shrb
cmp
adc
xchg
das
mov
cmp
sub
jnp
insl
push
xlat
and
je
add
inc
sub
fstpt
sbb
xchg
cmp
pop
nop
stos
push
jecxz
les
mov
notb
out
icebp
or
das
push
jmp
cmpsl
jne
mov
xor
sbb
mov
addr16
int3
jb
xchg
sbb
xchg
fwait
adc
mov
xchg
js
xor
xchg
xor
inc
and
test
adc
ret
test
sti
sub
int
test
mulb
call
stos
push
add
pop
notl
ja
iret
outsl
rcr
jne
rep
loopne
jg
mov
adc
mov
inc
mov
cmp
push
jno
fmul
into
notl
dec
std
daa
cmpsb
jmp
test
sbb
push
sub
fucomip
add
lret
nop
es
cmp
mov
in
das
pushf
stc
mov
dec
lock
aaa
out
cmp
hlt
mov
dec
jne
xchg
imul
imul
incb
jg
je
xchg
jo
rcll
push
adc
or
mov
lods
xchg
adcb
dec
or
rclb
nop
push
inc
lahf
mov
dec
push
sbb
nop
outsl
cwtl
jno
push
mov
dec
int3
push
or
je
stos
sbb
cmp
jb
xchg
push
pop
mov
sub
push
cli
dec
cld
notl
sub
inc
mov
adc
sub
jo
or
xchg
and
lret
mov
and
or
test
push
dec
xchg
mov
inc
jg
iret
sub
and
push
xchg
ss
sub
insl
cmp
or
inc
loop
loope
dec
pop
adc
sbb
sarl
movsl
mov
jl
int
fidivs
pop
outsl
shrb
jg
adc
jne
dec
sti
movsb
jl
mov
mov
fsubl
mov
cmpl
push
sbb
insl
in
faddl
lahf
push
jno
xor
jne
adc
lret
outsl
mov
in
ss
xor
inc
xor
xor
out
dec
mov
repz
cmp
leave
jnp
sbb
xchg
adc
adc
push
mov
addr16
enter
adc
dec
mov
sar
jle
fsubrs
jno
fadds
addb
hlt
jle
mov
scas
mov
test
mov
test
mov
mov
dec
push
or
pushf
xlat
cmpsl
sahf
or
xor
mov
mov
mov
dec
jg
out
push
int
xchg
adc
fisttps
mov
push
cmp
xchg
sbb
pusha
sbb
out
push
out
arpl
in
ret
insl
jmp
fidivl
inc
dec
dec
popa
cmpsb
pop
repz
xor
jg
incb
add
std
mov
out
dec
or
pop
dec
test
lahf
inc
pop
cld
or
imulb
sbb
or
outsl
je
sbb
inc
adc
aam
jge
arpl
js
push
movsb
iret
hlt
jne
clc
leave
aam
std
out
push
jg
stos
mov
jne
inc
jns
pop
push
rcr
sbb
xchg
data16
mov
pop
xchg
or
mov
stos
out
dec
imul
in
xor
hlt
cltd
test
cmp
xor
push
jno
fwait
test
push
mov
xchg
xor
negb
sub
aaa
adc
xchg
cmp
mov
jl
ss
jg
xor
mov
aad
adcb
test
test
pop
add
loop
push
loope
push
jns
cli
dec
push
jecxz
jmp
fxch
icebp
in
scas
fstl
push
call
das
repnz
call
fwait
inc
push
cmp
mov
and
ret
test
popf
pop
mov
test
loope
bound
shr
mov
cmc
loope
jp
cmpsb
xor
cli
sbb
outsb
call
adc
fiaddl
push
popa
add
subb
leave
ret
iret
jle
lcall
mov
call
xor
aam
outsb
sbb
add
sub
jae
pop
dec
test
pop
xchg
inc
xchg
xchg
inc
sbb
sarl
add
into
out
jl
dec
and
scas
in
sti
pusha
shlb
push
jne
mov
jno
lods
cmp
addr16
stos
and
scas
push
adc
xlat
lock
cld
enter
push
and
ror
fwait
push
lahf
das
insl
push
xor
sbb
dec
iret
xchg
cmpsb
inc
cmpsl
add
push
nop
xor
ret
jecxz
shlb
jae
fisubs
xchg
mov
inc
out
cld
inc
pushf
mov
jp
sahf
stos
adc
or
fisubl
jae
test
or
ss
dec
jbe
loope
jmp
mov
dec
rol
jb
mov
cmc
push
lret
xor
cmp
xchg
xchg
jp
adc
dec
fbstp
out
xchg
mov
repz
dec
daa
ret
rorb
xchg
pushf
mov
pusha
out
mov
dec
hlt
das
cmp
outsb
scas
test
mov
imul
mov
or
push
add
mov
mov
add
cmp
sub
add
jp
addb
adc
arpl
xchg
mov
lahf
sti
adc
push
cltd
bound
negb
xchg
lret
js
pop
mov
xchg
out
mov
sub
stos
or
sub
xor
or
adc
push
rol
out
fcomp
add
dec
jmp
pushf
cmp
inc
add
inc
sub
push
insl
mov
xchg
xchg
mov
enter
dec
cmp
mov
xchg
dec
xchg
outsb
and
xchg
mov
fidivrs
inc
sub
or
push
cmpsb
sub
lahf
sar
fmul
push
xchg
mov
jb
sbb
cli
and
and
or
sbb
imul
es
xchg
fisttpll
inc
mov
adc
scas
inc
pop
xchg
fists
push
dec
mov
jl
stos
mov
and
addr16
ja
imul
scas
pushf
rorl
pusha
cmp
sbb
cmp
shl
test
lds
cs
pop
push
popf
pushf
lds
push
lret
dec
repnz
mov
xlat
push
mov
cli
dec
and
pop
insb
jecxz
jne
xchg
std
jp
pop
cmp
cld
ja
stos
movsl
js
xor
inc
addr16
jecxz
je
lock
pop
cwtl
inc
mov
mov
call
jbe
mov
sbb
inc
ret
stc
repnz
jo
and
pop
xor
jl
cmp
adc
stc
fimull
ja
pop
loopne
shll
pop
inc
sbb
jbe
add
xchg
push
jle
sbb
pop
stc
in
sbb
inc
mov
pop
ljmp
adcl
push
js
inc
lret
cmp
jnp
push
inc
push
fidivrs
nop
or
inc
cld
dec
jnp
mov
fisubrl
pop
jge
cmp
ds
push
jae
mov
mov
pop
jne
jl
mov
mov
movsl
shrl
imul
jno
repnz
mov
adc
sbb
xchg
jge
inc
dec
ja
fwait
and
shll
fxch
sub
and
cli
mov
xchg
cmp
mov
push
jmp
cmp
pop
fs
xor
hlt
jl
fdivl
inc
repnz
scas
repz
fstpl
adc
xchg
mov
jge
aad
leave
loop
sbb
lahf
das
pop
aaa
aam
and
or
sbb
inc
cwtl
out
into
in
call
daa
mov
xor
sbb
js
jl
mov
outsl
arpl
les
inc
adc
jl
or
cwtl
pop
inc
cwtl
popa
into
sub
sub
arpl
xchg
cmp
fcoml
mov
in
ret
clc
lret
cmp
push
iret
pop
cltd
data16
call
popf
dec
in
xor
pop
sbb
and
gs
jmp
xchg
mov
push
lods
jns
xchg
or
add
lret
sub
insl
add
nop
stc
adc
and
fnstcw
ds
pop
nop
pop
xchg
repz
adc
sbb
les
je
out
xor
mov
insb
inc
loope
movl
sub
insl
test
jg
iret
subl
push
xlat
call
mov
iret
icebp
sbbl
mov
enter
jmp
add
sub
out
xor
ret
test
mov
add
cmp
xchg
scas
xchg
jb
imul
push
jmp
adc
out
pop
lock
adc
and
mov
xchg
inc
and
and
jb
pop
dec
push
loop
imul
cltd
fcompl
adc
xor
hlt
mov
pop
mov
mov
cmpsb
xorb
out
cmp
out
clc
inc
dec
sub
mov
test
pop
sbbl
pop
lds
jo
xchg
cmpsb
fbld
enter
stos
clc
pop
dec
dec
mov
cmpsb
inc
dec
or
push
mov
xor
popf
es
shlb
aas
cmp
fiadds
and
jae
lcall
cld
dec
add
sahf
subl
out
and
mov
mull
mov
add
cmp
mov
insb
xor
xchg
insl
mov
cwtl
lret
arpl
fcmovnu
pop
xor
rcrl
pop
js
push
test
jl
push
jb
fistpl
and
inc
mov
lcall
cmc
arpl
jmp
jns
xor
pop
mov
pop
sbb
fs
into
sub
rcrl
lea
add
test
sub
pop
adc
mov
mov
xchg
mov
dec
decb
popa
jmp
sbb
and
jno
xchg
and
lret
adc
mov
pop
xchg
sub
jmp
movsb
dec
fldl
dec
push
xchg
fnstcw
ja
xor
aas
arpl
sub
test
cwtl
pop
mov
fidivrs
fsubl
data16
inc
stos
stos
mov
es
shll
imulb
in
aas
pop
mov
pop
xor
sbb
xchg
cmp
fisubrs
push
fisubrl
jmp
call
dec
push
dec
add
js
or
sub
cmpsl
push
dec
inc
in
scas
les
popa
dec
push
loop
sbb
or
mov
ds
mov
add
push
xor
es
cld
add
add
push
jmp
int
mov
cmc
add
hlt
jb
cmp
adcb
shll
inc
mov
push
lret
dec
adc
and
lret
sbb
xchg
pop
xchg
fcompl
lods
outsl
jno
insl
add
cmp
adc
jge
inc
mov
cmc
xor
stos
inc
push
mov
aaa
shlb
mov
and
and
pop
jae
pop
insb
inc
cmp
addr16
mul
loopne
jnp
and
mov
mov
lret
push
push
jbe
mov
out
mov
pop
cli
push
scas
lcall
xor
inc
mov
pop
cwtl
rorb
mov
sub
psllq
das
inc
int
push
jg
shlb
sub
push
lods
and
into
cmp
cltd
push
insl
and
xor
xchg
pop
dec
xor
push
adc
push
dec
jecxz
push
pop
imul
cwtl
and
ljmp
jl
imul
lods
aaa
loop
cmc
mov
std
mov
out
xchg
icebp
jnp
sbb
cmp
cmpsb
lock
pop
sbb
jmp
mov
jge
sbb
bound
pop
add
and
nop
enter
mov
jne
and
out
inc
xor
sbb
mov
loop
jmp
cld
mov
jmp
ret
mov
andl
xlat
std
mov
pop
add
adc
lock
lods
stos
inc
lret
repz
rcll
pop
enter
dec
xor
jl
xor
in
dec
cmp
xor
stc
add
cmp
fwait
shll
pop
ljmp
fcmovne
jb
push
sub
leave
inc
repz
scas
ljmp
in
into
mov
in
outsl
out
shrl
mov
pop
aad
cmpsb
mov
jp
sbb
and
xchg
shrl
test
pop
sbb
xor
cmp
hlt
cmp
enter
adc
xchg
jae
lds
outsl
out
xchg
or
shlb
repnz
shll
push
dec
clc
out
or
imul
leave
dec
mov
dec
fs
cwtl
clc
inc
jae
dec
je
xchg
ja
jg
sbb
sub
or
sbb
test
shr
mov
cmovle
push
cmp
cmp
xlat
cwtl
push
stc
hlt
push
pop
sbb
dec
or
movsl
push
pop
xorl
rclb
aas
gs
mov
add
sbbl
sbb
sbb
dec
mov
cltd
jg
jne
xor
mov
lods
pop
pop
movsb
flds
push
int3
xchg
stos
mov
loopne
icebp
mov
xchg
sub
iret
dec
or
outsb
bound
std
add
xor
out
aad
xchg
shlb
mov
data16
fsubl
mov
int3
out
lret
ret
push
or
scas
lea
jecxz
cmp
and
sub
insb
pop
and
ljmp
pop
sbb
loopne
in
inc
gs
jo
sub
jge
mov
insb
push
dec
stos
push
dec
mov
inc
inc
mov
mov
movl
scas
adc
adc
mov
insl
fistl
enter
repnz
lods
pop
mov
jno
aad
sbb
dec
inc
shll
or
inc
mov
fistps
mov
fdivrl
push
jge
bswap
call
movsl
mov
psrlw
loopne
adc
or
nop
lcall
jg
daa
popa
mov
or
fistl
ret
jmp
inc
cmp
hlt
mov
fnstcw
mov
jge
and
push
jp
arpl
pop
xchg
sub
gs
call
jg
jge
sahf
push
addb
adc
ret
inc
ljmp
lock
xor
jp
cltd
adcl
pop
jmp
test
sub
test
cmp
fs
subl
mov
ljmp
addb
xchg
daa
adc
push
mov
sub
mov
int3
cmp
clc
std
xorl
testl
jbe
popf
lcall
aaa
fcoms
data16
jp
in
or
cmpsb
inc
adc
repz
add
sbb
or
into
popf
cs
mov
imul
fnstenv
lea
jmp
insb
arpl
std
dec
mov
ret
aad
pop
inc
mov
jp
scas
insb
push
mov
mov
push
and
std
adc
jnp
jg
loop
mov
xchg
fdiv
and
pop
xlat
add
mov
jl
sbb
adc
sbb
lods
jmp
lods
mov
mov
ret
sbb
or
ret
scas
cmp
pop
test
xchg
orb
dec
mov
es
mov
xor
inc
rcrb
ljmp
mov
loope
cmc
aad
aam
inc
push
dec
and
movsl
pop
jno
xchg
aaa
add
xchg
movsb
mov
in
clc
mov
push
lea
and
aaa
ss
aad
sbb
jno
fisubs
test
addr16
dec
cmpsl
or
repnz
xchg
mov
adc
sahf
sarl
pop
in
sub
push
in
insb
mov
or
xchg
jg
notb
cmpsb
cmp
fistps
inc
leave
insl
xchg
pop
add
dec
add
cld
nop
and
mov
sub
movb
push
cmpsb
popa
push
test
xchg
outsl
xor
dec
fadds
jmp
je
scas
or
adc
jb
sbb
xchg
adc
inc
mov
xchg
sbb
test
pop
or
lret
adc
gs
popa
jle
cmpb
xchg
test
xchg
iret
int3
enter
cmp
mov
lgs
cwtl
add
or
movsl
imul
jecxz
test
mov
mov
imul
dec
or
stc
sarl
mov
ljmp
jns
sub
data16
inc
in
cld
ljmp
xlat
fnstsw
mov
or
mov
test
sbb
inc
mov
not
jno
in
ffree
aad
sarl
xorl
rcr
inc
in
jb
fistpll
cmp
arpl
rclb
xchg
out
adc
sahf
jno
ret
ss
xor
cmc
js
daa
es
jo
lcall
pop
adc
push
leave
sub
je
insb
xchg
adc
dec
cmp
xchg
ljmp
jecxz
xor
es
mov
fsubs
lret
scas
and
mov
cwtl
xchg
adc
push
dec
mov
pop
or
and
adc
xchg
add
mov
cli
xchg
inc
jmp
out
and
mov
adcl
test
roll
pushf
fbstp
aaa
jns
stos
xchg
sbb
add
bound
ljmp
enter
add
jo
mov
xchg
mov
sub
cmp
inc
popa
mov
out
scas
adc
sbb
call
cmpsb
jg
scas
add
lods
aad
sahf
add
push
xor
int
cs
in
imul
adc
inc
or
les
gs
xor
movsl
into
cmpsb
lcall
dec
insl
xchg
mov
push
int
cli
rcll
insl
inc
and
insl
mov
fcomps
insl
inc
xchg
xorb
pop
js
enter
in
mov
adc
out
test
or
cmp
xchg
mov
xchg
pop
xchg
jae
orb
add
popf
jb
mov
xor
inc
mov
rcrl
and
mov
xor
jnp
jo
cmp
or
xchg
loop
and
fwait
int3
call
inc
out
cwtl
sbb
push
sbb
movsl
add
outsl
or
push
jns
into
out
popf
int3
xor
lret
pop
fstp
jecxz
cmc
imul
push
mov
sbb
sbb
adc
ljmp
adc
mov
push
cmp
ficompl
push
sbb
loope
fs
insb
popa
aad
nop
cmpsb
sub
xchg
psrld
mov
mov
mov
addb
nop
or
and
or
mov
inc
aam
inc
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
aaa
repz
hlt
pushf
jnp
mov
mov
pushf
xchg
pop
scas
add
cwtl
mov
sub
jge
das
ss
cmp
or
lcall
xchg
hlt
mov
enter
pop
sub
cld
inc
push
setnp
or
mov
clc
inc
mov
pop
push
and
cwtl
dec
lods
sub
rcll
cmc
sbb
pop
aaa
loop
int3
cmpsb
dec
pop
fwait
loopne
sub
in
jecxz
test
iret
add
mov
out
fidivrs
out
stos
aaa
inc
sbb
cwtl
mov
std
movsl
movl
pushf
mov
inc
mov
movsl
sbb
mov
andl
jmp
ljmp
sub
and
orb
mov
xor
lahf
pop
and
jo
cltd
imul
fistl
mov
ds
pop
das
test
xchg
mov
cwtl
test
xchg
imul
lds
pop
lds
mov
or
js
sarl
aas
xchg
jo
mov
test
or
pushf
repz
lods
pop
add
sub
lea
cmpsl
daa
pop
cmc
rorb
ja
sbb
xor
pop
mov
cmp
cwtl
pop
mov
imul
in
push
fcmovnu
dec
jmp
ss
jecxz
mov
lret
outsl
mov
push
xchg
div
ds
jb
imul
inc
cmp
add
int
inc
daa
addr16
ds
mov
add
push
call
lock
pop
shl
sub
nop
push
aas
push
nop
adc
aas
mov
mov
adc
sub
shrb
jle
inc
stc
test
sub
pop
sbb
inc
scas
add
push
sbb
fs
ljmp
out
jge
pop
cwtl
jns
add
out
adc
stc
subl
cmp
jp
xor
in
popf
mov
bound
aaa
add
sub
aad
pop
mov
sub
pusha
mov
lcall
sbb
add
or
movsl
sbbb
rorb
test
out
repnz
inc
fwait
and
push
scas
clc
jl
pop
repnz
les
fs
js
mov
mov
jg
orl
and
push
cli
jae
adcl
imul
test
xor
pop
fs
test
loop
pop
xchg
inc
add
pop
xchg
fdivl
mov
mov
pop
mov
push
je
add
mov
xchg
aad
shld
add
dec
inc
and
mov
add
rcl
popf
or
ljmp
sub
ret
or
fs
dec
push
aam
mov
out
repz
mov
push
dec
mov
dec
icebp
or
imul
mov
mov
cmp
pop
mov
or
cltd
mov
in
fadds
out
icebp
fsubl
xor
mov
jb
pop
fldl
sbb
shl
or
fiaddl
add
mov
push
dec
sub
sbb
mov
lds
mov
pop
into
push
push
adc
fisubrl
push
xchg
push
xchg
mov
fidivl
pop
jge
dec
popa
jno
pop
pop
arpl
aam
adc
lret
jp
test
jo
je
sbb
sti
pusha
out
cmpsb
test
pushf
in
fldenv
addr16
aaa
jge
arpl
ljmp
xchg
aad
sub
dec
sub
push
inc
imul
out
sbb
lcall
lods
out
enter
and
push
movsb
test
fmull
pop
movsb
mov
add
xlat
es
jle
mov
mov
jae
ss
into
je
add
dec
cltd
popa
mov
repz
jo
cmp
cwtl
push
stc
mov
movsb
mov
push
sbb
ja
mov
js
iret
ja
jle
mov
mov
lahf
inc
and
mov
clc
insb
lret
xor
and
arpl
xchg
adc
or
push
xchg
in
mov
pop
adc
or
decl
stos
xchg
loopne
push
or
add
push
mov
add
outsb
ss
jb
out
dec
ljmp
subb
sub
movsb
shrb
jnp
js
mov
push
lds
stos
loopne
out
cmp
loope
pop
add
jecxz
shrl
sub
test
sbbl
xlat
sbb
lock
push
xchg
ljmp
pop
insb
jb
push
loope
jae
dec
clc
mov
push
adc
or
jbe
sbb
in
inc
sti
testb
pop
aam
imul
arpl
xor
cmc
push
mov
jmp
dec
fdivp
push
popl
jae
cmp
pop
or
out
test
and
dec
movsb
inc
cltd
jge
xchg
shll
dec
sti
push
add
xchg
mov
loope
lret
pop
es
rcrl
das
mov
mov
mov
loope
pop
cmc
test
mov
xchg
out
xchg
js
adc
inc
adc
mov
je
xor
adc
add
mov
addr16
push
xor
dec
js
cmp
shlb
xchg
bound
aad
psrld
mov
xor
mov
mov
sbb
and
mov
out
pop
dec
adc
repnz
fnstsw
dec
jmp
push
ja
add
pop
add
dec
add
pop
call
icebp
ds
repnz
cwtl
in
out
xchg
shlb
std
or
adcb
mov
mov
jns
pop
out
mov
push
scas
mov
mov
sub
ret
mov
cmc
add
dec
cmp
mov
dec
push
sub
dec
xchg
xor
faddl
adc
inc
xchg
int3
outsl
and
sbb
sti
es
jle
and
rclb
mov
sub
mov
movsb
adc
xchg
push
stc
inc
lea
rorb
fwait
sub
jle
jle
lds
xchg
mov
cwtl
add
sub
aaa
pushf
ja
jae
bound
insb
xchg
adc
mov
xorb
mov
adc
ja
insb
xor
mov
mov
cmpsb
pop
movsl
fs
shll
in
dec
out
shll
mov
test
sbb
call
and
adcl
fmuls
scas
sub
int
sar
dec
jge
xchg
popf
mov
and
int3
je
pop
aad
mov
loop
mov
fdivs
cmc
jno
push
sbb
iret
cmp
adc
cs
repz
add
push
gs
mov
xchg
stc
or
xchg
test
add
xabort
sbb
out
fwait
dec
jg
xor
das
add
lock
cmp
icebp
jnp
sub
jae
push
into
mov
dec
cli
lcall
daa
jne
push
subl
adc
mov
push
and
nop
nop
rclb
push
push
cltd
cmp
fisttpll
pusha
and
xor
out
and
pop
mov
hlt
xor
sarl
andl
pop
dec
out
movsb
cmp
xchg
cltd
push
xlat
and
cli
das
lcall
movsl
xchg
in
lods
push
stos
jmp
call
aam
sub
xchg
dec
out
adc
sub
jmp
ja
and
std
ljmp
adc
mov
adc
movsb
mov
je
out
rolb
xchg
dec
push
dec
pop
lret
add
ret
inc
mov
pop
jnp
xchg
jmp
pop
jno
jnp
push
cmp
loop
push
pop
mov
mov
divl
aad
scas
mov
clc
cmpb
pop
dec
dec
fdivrs
mov
in
imul
movsl
sbbl
mov
insb
and
mov
fmuls
add
pop
cmp
xchg
in
pop
data16
inc
nop
push
aaa
jle
xorb
push
mov
xor
cmp
cld
mov
fstp
dec
test
je
or
adc
mov
mov
rol
pop
lret
les
push
ds
pop
push
mov
iret
inc
inc
dec
add
or
mov
push
lret
pop
jmp
insb
pop
inc
xchg
stc
and
push
iret
inc
add
jge
fisubs
add
out
and
lods
dec
fadds
push
aaa
cmp
pop
ret
js
dec
into
arpl
sarb
and
lods
cld
jnp
int
aam
add
cmc
shrl
das
pop
mov
mov
fcmove
jg
ljmp
add
int
adc
jne
lcall
jecxz
loope
adc
cmp
cmpsb
and
and
addr16
je
andb
lods
iret
adc
andl
repnz
stc
data16
js
mov
arpl
jl
push
xor
subl
mov
out
cwtl
mov
dec
fisubrl
pop
add
in
adc
icebp
scas
mov
cmpsb
mov
leave
mov
jp
sub
cld
mov
shll
push
mov
fsubrl
sarl
imul
popa
sub
scas
push
int3
xor
inc
adc
fisubl
push
mov
cli
add
dec
nop
fisubrs
icebp
call
dec
hlt
or
scas
xchg
mov
out
aaa
dec
insl
daa
arpl
jo
in
movsl
jo
adc
fld
inc
add
jo
and
sub
frstor
xchg
push
lcall
sub
mov
pop
pop
jae
jnp
sahf
sub
or
jae
imul
sub
mov
cwtl
bound
lret
fldpi
ja
test
and
lock
rolb
imul
test
stos
jnp
jo
or
adc
xchg
pop
int3
push
pop
jnp
dec
in
inc
insl
cmpsl
mov
je
call
push
hlt
cmpsb
mov
mov
je
lods
movsl
int3
lret
mov
xlat
out
mov
inc
adc
leave
pop
mov
jno
fmulp
lret
push
xchg
and
icebp
outsl
sbb
mov
push
shl
push
jge
xchg
out
dec
bound
mov
andb
dec
mov
adc
in
scas
fadd
push
mov
rcll
pop
mov
pushf
cmpsb
out
cltd
shrl
xor
lret
sub
jno
pop
test
or
sbb
cwtl
sub
shrb
cltd
mov
jg
dec
dec
popa
mov
add
les
sbbb
in
dec
in
xchg
adc
adc
jp
cmc
dec
mov
sub
in
dec
dec
pop
cs
mov
mov
pop
xor
popa
cmp
imul
or
out
test
movsb
shl
ret
ds
add
mov
add
or
push
int3
jmp
push
fs
lods
bound
in
je
int3
mov
ret
mov
inc
gs
in
fdiv
fidivrs
mov
sbb
fwait
sub
movsl
jns
xor
addb
xchg
mov
xchg
scas
jg
flds
or
mov
adc
call
out
and
jo
jg
push
gs
and
mov
push
imul
decl
in
xchg
aas
sub
sbb
pop
adc
imul
cmp
push
je
jb
mov
cmp
mov
aaa
or
fs
xchg
jle
fsts
outsl
test
inc
ljmp
cmp
inc
and
and
or
orl
mov
push
pop
mov
pop
popa
jns
cld
mov
push
inc
jno
xor
dec
add
push
sahf
addr16
popa
jne
dec
scas
aas
xchg
cmp
push
jb
test
ljmp
cld
sti
sar
int
cmp
decl
cmp
mov
sub
pop
cltd
sbb
add
ficomps
enter
inc
pfrcpit2
dec
dec
add
dec
movsl
mov
nop
adc
add
jbe
xor
icebp
jns
xlat
mov
dec
xchg
cli
aam
mov
mov
xor
ljmp
ret
mov
jmp
jno
mov
popl
cmp
aam
sbb
outsb
cld
sub
sbb
cmp
jne
mov
push
mov
ljmp
cmp
hlt
aam
in
pop
adc
mov
xchg
hlt
mov
in
ds
jns
mov
subl
sub
mov
xor
das
push
cmp
bound
push
scas
lock
hlt
pop
and
imul
xchg
movsl
call
stos
add
out
push
jle
inc
ret
pop
cltd
stos
insl
mov
and
sbb
add
or
xchg
pushf
ffree
xchg
xchg
xchg
outsl
sbb
pop
test
mov
jecxz
mov
in
addb
sub
scas
push
xor
and
mov
mov
mov
push
jge
jo
push
das
imul
adc
in
in
iret
sbb
sar
mov
sbb
cmp
jns
xchg
pop
mov
inc
xor
dec
rcrl
scas
pop
dec
xchg
and
pop
push
sahf
leave
mov
sub
inc
outsb
sub
ret
dec
negl
int3
std
xor
clc
fildl
fs
cld
sub
std
rorb
and
insb
add
das
enter
lahf
jecxz
add
ds
int3
sarb
mov
inc
in
mov
sbb
jle
or
xchg
adc
shlb
add
sti
xchg
dec
fildll
pop
mov
aas
inc
inc
pop
mov
iret
push
dec
sbb
sub
jns
loopne
push
fnstsw
mov
clc
dec
mov
xchg
mov
pop
jl
and
sub
sub
pop
mov
andb
sbb
pop
cmpsb
and
sbbb
jl
mov
test
push
mov
adc
mov
jmp
int
push
sub
cmp
mov
hlt
mov
jb
inc
xlat
push
adc
out
adc
jno
out
cmp
cwtl
mov
fcoms
jl
icebp
les
enter
pop
dec
mov
rcrb
mov
sub
pop
inc
bound
push
xchg
lcall
movsl
xchg
mov
push
jnp
into
jl
pop
mov
leave
cmpsl
xor
push
xor
xchg
into
sarb
jecxz
movsl
mov
mov
mov
add
test
mov
mov
xor
push
jmp
push
jns
ds
cmp
ret
ljmp
jl
mov
clc
jnp
and
loope
xor
xor
jbe
xchg
mov
inc
ss
xchg
dec
stos
hlt
jns
mov
mov
fsub
ret
lods
bound
sahf
xchg
push
and
pop
jmp
jno
inc
gs
add
mov
fidivs
rcl
addr16
pop
fdivs
jns
sbb
xor
in
mov
mov
enter
decb
cmp
mov
mov
dec
mov
or
aas
mov
xor
les
xchg
push
into
lret
mov
sbb
inc
mov
stos
lods
inc
dec
dec
dec
rcrb
leave
pop
mov
jmp
mov
cld
cmp
xor
jne
sbb
inc
fldcw
shlb
insb
insb
pop
incl
addb
xor
in
in
xchg
push
adc
lods
sbb
out
mov
and
mov
or
lods
pop
test
xchg
add
inc
mov
icebp
addr16
dec
mov
xchg
nop
movsl
outsl
lea
js
stos
incl
mov
or
mov
out
jmp
sub
stos
cld
cld
insb
sbb
add
cmc
adc
jl
mov
dec
jb
and
sarb
out
xchg
jo
mov
and
out
inc
add
fldl
repz
es
push
ljmp
aaa
aad
jp
cmc
push
pop
add
scas
sbb
mov
mov
add
pop
jns
sbb
test
jnp
test
addl
cmp
or
cmp
imull
sbb
push
sbb
pop
dec
insb
loop
sub
enter
insb
jbe
aad
sub
lods
cmp
xchg
sbb
xchg
aad
pop
shll
mov
inc
add
pop
cmp
adc
loope
lahf
ret
push
push
dec
mov
mov
aaa
xlat
mov
jmp
mov
int
insb
lahf
int
fimull
or
inc
sub
mov
push
prefetch
or
clc
pop
mov
jo
jne
fwait
xchg
xchg
push
pop
adc
jl
je
enter
cli
adcl
out
adc
mov
std
jecxz
clc
jo
sbb
cmp
repz
sub
into
mov
cmp
mov
jbe
fldt
sahf
aaa
mov
xlat
stos
call
mov
les
pop
add
xor
popf
jle
jle
push
xchg
popf
jb
fbld
adc
xchg
pop
fbld
imul
inc
jle
sub
mov
add
jnp
xchg
cwtl
lods
imul
or
daa
loop
mov
test
push
mov
stos
adcl
jne
and
or
cmp
sub
out
mov
fadds
mov
xchg
out
jge
sbb
cmp
shlb
sub
call
dec
inc
add
into
std
dec
jl,pn
and
aas
mov
popf
mov
push
dec
fcmovu
push
push
lds
xchg
call
mov
push
ficompl
stc
cmp
jnp
clc
mov
cmp
adc
ja
sub
xor
push
cltd
xchg
stc
jp
add
insb
jecxz
arpl
lret
xchg
jle
jp
stos
mov
pop
movsl
pop
pop
pop
dec
call
dec
push
arpl
adc
cltd
xchg
pop
mov
inc
or
mov
mov
sub
enter
loope
pop
push
sbb
dec
icebp
lret
das
aam
sub
ret
mov
scas
adc
addr16
insb
sub
xchg
xchg
add
add
aaa
mov
push
je
cmpsb
pop
enter
in
mov
fildl
sbb
mov
mov
loop
test
dec
jg
mov
test
mov
clc
mov
idivl
and
and
add
outsb
test
das
or
mov
push
mov
mov
sub
sbb
xor
pop
sub
xchg
movsb
shl
cltd
mov
or
out
push
push
jl
daa
je
cmc
lods
fdivr
pop
loop
andl
pop
out
cmp
cmpsl
mov
arpl
sub
xor
sbb
test
data16
mov
or
jg,pt
pop
dec
jae
push
cmpsl
and
imul
outsb
outsl
mov
dec
pusha
dec
popf
push
push
mov
enter
dec
jbe
lods
jb
xchg
pop
dec
pop
sbb
dec
sbb
jne
xor
push
sarl
inc
bound
push
and
jae
pop
jge
inc
or
mov
cli
enter
add
fbld
enter
add
mov
int3
push
test
mov
mov
pop
insb
mov
out
ret
mov
xchg
mov
ja
aam
or
iret
lds
test
test
sbb
aas
sbbb
mov
mov
out
repz
mov
jle
adc
out
popf
and
inc
in
inc
aad
repz
and
movsb
nop
mov
cmpsb
out
repz
adc
jl
mov
mov
xor
jle
int
icebp
in
call
mov
mov
dec
lahf
dec
add
arpl
adc
add
push
pop
xchg
and
leave
dec
dec
xor
inc
xchg
adc
test
cmp
insb
sub
icebp
or
pop
hlt
aad
fisttpll
adc
inc
or
filds
divl
stos
loope
fsts
pusha
inc
mov
lahf
lea
push
sbb
sub
fcmovu
mov
push
stc
dec
sbb
mov
nop
and
push
sbb
cmp
or
jge
mov
mov
mov
scas
and
aad
push
jmp
and
dec
aas
shlb
cmp
add
inc
dec
ss
pop
or
or
shlb
mov
scas
or
das
shrl
xchg
xor
xor
int
stc
jne
push
pusha
ret
jge
cmpsl
sbb
or
addb
sub
sbb
jecxz
rol
out
push
mov
xchg
sbb
xor
leave
cli
fwait
ss
xlat
cmp
sub
push
hlt
cwtl
int
mov
nop
lret
cwtl
lods
push
jnp
lret
test
sub
lret
push
sti
fisttpl
ja
addr16
xor
out
loopne
cwtl
push
fs
jle
mov
roll
stos
xchg
push
mov
inc
out
xor
jmp
pop
in
adc
fisttpll
push
push
outsl
mov
push
xor
call
js
test
and
jae
mov
inc
ja
iret
mov
sti
fisttps
pop
ret
clc
subb
fisubl
inc
inc
mov
mov
xor
pop
cltd
sub
adc
sub
sahf
inc
mov
popl
popf
sbb
lcall
je
push
add
sub
je
jnp
sbb
iret
repz
mov
mov
loopne
sbb
dec
loopne
stos
cmc
cwtl
sub
stos
sti
mov
jae
adc
push
mov
in
add
fdivrs
ljmp
jmp
jo
rcll
inc
lahf
cmp
cmc
int3
in
or
push
js
push
and
and
fwait
insl
in
jnp
add
sbb
pushf
add
push
and
mov
stos
popa
dec
mov
adc
pop
add
es
add
xor
xchg
sub
leave
loopne
clc
sarb
enter
sahf
and
add
pop
leave
mov
test
loopne
dec
xor
fcomps
loopne
mov
dec
insb
push
jb
ljmp
pop
dec
fstp
cmp
cmpsl
xlat
sub
out
out
mov
xorb
je
out
dec
sbb
mov
ret
sarl
fistps
out
mov
dec
sub
fwait
iret
pop
jge
xor
and
mov
dec
fstps
and
mov
les
sub
lods
mov
adc
xlat
shrl
pusha
jg
fldenv
xor
das
lods
mov
dec
nop
and
cmp
xor
aaa
js
and
sub
jb
fstpt
inc
sahf
mov
dec
into
das
inc
inc
outsb
in
rcl
mov
xchg
sbb
mov
movsb
aaa
aad
pop
xlat
movsb
cmp
and
sahf
ljmp
sbb
iret
fidivs
push
or
stc
out
fnstenv
xchg
adc
std
mov
imul
mov
xchg
xor
loope
movsb
mov
and
sub
in
or
lock
jmp
pop
inc
adc
push
subb
jl
out
cli
inc
jmp
mov
xchg
insb
pop
mov
or
sarl
cmp
push
mov
outsl
add
cmp
cmp
in
mov
mov
and
and
cli
outsl
pop
mov
jg
ja
popf
adc
xchg
mov
das
dec
lea
pop
shlb
jp
lret
loopne
stc
xlat
in
and
out
cltd
add
aam
loopne
insl
in
xchg
test
cmc
dec
xchg
cs
inc
int
je
or
push
and
adc
mov
fwait
mov
pop
int3
xchg
movsl
mov
test
mov
mov
pop
andl
hlt
hlt
pop
rcrb
pop
movsb
repnz
lret
jecxz
or
testb
js
push
movsb
sub
mov
je
jns
dec
or
or
movsb
lock
mov
pop
bound
fisubl
loopne
cmp
jae
add
test
sub
xchg
popf
and
add
inc
lea
lcall
scas
adc
dec
mov
xor
xor
and
cmp
jns
test
test
shl
xchg
jne
bnd
je
jg
pop
push
and
rcrl
jmp
sub
movsl
movsb
mov
ja
data16
xor
pop
dec
rcrb
negb
enter
adc
or
sub
je
lcall
mov
push
adc
cmc
push
ljmp
inc
test
mov
in
dec
and
jp
or
mov
pop
mull
mov
cmp
mov
jnp
mov
pushf
xor
mov
fstps
inc
into
dec
ja
mov
cmpsl
and
mov
fdivp
add
dec
inc
push
pop
mov
inc
movsb
jns
push
outsb
clc
scas
jecxz
je
sub
imull
mov
sub
adc
xchg
icebp
adc
cmp
push
fidivrl
push
dec
push
stc
dec
push
negl
and
mov
int3
and
mov
xchg
mov
push
sub
xchg
pop
cmp
mov
adc
sbb
repz
and
sbb
popl
addl
dec
xchg
push
cltd
data16
sub
fs
xchg
xchg
mov
loopne
push
out
inc
mov
scas
iret
movsb
cmp
sub
loop
pop
push
adc
fs
or
shll
fsubrs
xlat
lods
aad
push
sbb
fs
ret
mov
imul
nop
js
sub
mov
fists
sbb
xchg
inc
adc
lahf
sub
mov
and
push
in
add
mov
lea
add
aam
fisubrs
xchg
xor
jnp
test
enter
shl
ror
js
in
lret
mull
xchg
test
fxch
xor
insl
ret
and
pop
inc
testl
ljmp
and
jle
fsubrl
popf
lods
testb
jne
cmc
sub
xchg
jns
sbb
ret
jno
ret
iret
out
or
adc
xchg
scas
inc
cld
in
inc
outsb
mov
aad
mov
icebp
movsl
xor
push
adc
pop
andl
push
fnstsw
ljmp
es
enter
aaa
sahf
lock
insl
inc
es
ret
inc
mov
loope
sbb
sbb
adc
leave
test
cmp
rorb
pop
addr16
xorb
sbb
imul
stos
js
pop
leave
adc
lods
push
les
xchg
frstpm(287
jecxz
bound
add
ljmp
pop
in
sbb
sti
or
sbb
xor
jb
iret
in
addr16
fistpl
add
sbb
push
cltd
dec
daa
sbb
jecxz
pop
mov
fdiv
imul
pop
shlb
shll
jbe
bswap
mov
or
jbe
cmp
jns
mov
xchg
jmp
insb
and
add
test
xchg
cld
call
adc
mov
inc
lahf
mov
aad
mov
fnstenv
and
jmp
sub
xor
adc
mov
and
jo
or
mov
xchg
je
iret
mov
xlat
push
mov
fcomip
fsubs
and
push
loop
mov
cmp
or
or
clc
pop
jns
test
jmp
mov
sbb
inc
test
push
ss
cmp
fstpt
mov
fstps
aad
xorb
ret
jno
add
cmp
mov
insl
cmpsb
nop
adc
loop
push
cmp
repz
xchg
pop
inc
sbb
mov
cmp
das
jae
movsl
dec
addr16
jno
ljmp
inc
es
and
mov
outsl
test
ret
inc
nop
pop
xchg
adc
bound
push
lds
lods
mov
add
push
xchg
or
push
jno
adc
mov
xor
inc
adc
sub
mov
cli
adc
popa
sbb
pop
dec
in
or
testl
push
sub
std
xchg
loope
insb
dec
xlat
fdivrl
mov
push
jne
fsubs
insl
lahf
lock
push
mov
out
dec
cmp
lret
mov
lret
cmp
mov
pop
pop
sbb
aam
sub
lcall
ds
in
int3
mov
daa
icebp
jns
and
movsb
scas
loopne
sbb
adc
ljmp
jp
cmc
dec
cmp
mov
mov
and
fdivrl
and
or
aaa
je
or
cmp
adcb
cmpsw
hlt
pop
ss
into
xchg
das
mov
js
dec
sbbb
or
test
xchg
and
sub
xchg
pop
mov
xchg
sbb
cmp
jg
lock
lahf
xchg
pop
adc
lods
and
xor
stos
pop
mov
dec
xchg
jo
xchg
int3
je
or
jecxz
cmp
adc
push
dec
adc
push
gs
jne
jae
jb
pop
cltd
cmp
push
pop
cmp
mov
inc
jg
lock
rcr
sub
or
dec
test
arpl
mov
stos
push
in
loop
lods
les
call
movsl
shll
pop
pop
jmp
rclb
pop
lea
xor
stos
dec
out
push
push
std
add
sub
dec
subb
int
roll
inc
into
leave
in
xchg
pop
pop
jbe
sbb
out
dec
cmpb
push
or
cld
and
push
jnp
add
nop
push
bnd
cmp
ret
xchg
jp
cwtl
std
scas
iret
mov
arpl
fs
xlat
cld
xor
shlb
mov
scas
cmp
jg
cli
bound
add
inc
adc
sti
mov
int
xchg
xor
jns
fists
dec
lcall
push
sbb
orl
push
ss
jg
ds
inc
test
lock
fists
stos
add
xlat
inc
jge
mov
ss
xor
jno
push
loope
pusha
dec
cmpps
sbbl
or
das
mov
inc
inc
je
ljmp
sub
into
divb
insl
pop
out
mov
sbb
add
idiv
fdivrs
icebp
xchg
mov
hlt
mov
insl
popa
mov
loop
or
clc
xor
push
inc
cmp
adcb
nop
mov
mov
gs
jo
push
gs
adc
movsb
outsb
movsl
mov
adc
mov
jae
mov
ds
mov
push
stc
sti
pop
sub
jne
mov
push
push
xchg
sub
push
cli
cmpsl
daa
mov
xor
add
dec
je
pop
inc
lahf
jnp
jno
add
imul
dec
and
or
mov
push
hlt
inc
mov
popf
insb
je
arpl
pop
pop
je
in
lret
movsb
mov
rcl
sbb
mov
and
insl
popa
push
in
mov
mov
in
scas
idiv
int3
dec
mov
jo
push
sbb
outsl
lods
adcl
orb
inc
decl
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
sub
jnp
pushf
jnp
dec
pop
push
movsb
rcr
ss
push
mov
jl
fsub
push
cmpsb
out
in
stos
mov
add
in
jns
rcl
sarl
inc
push
aad
testb
mov
cmp
out
jg
shlb
xchg
xchg
and
shrb
inc
into
and
mov
sub
cmp
loope
shrl
xor
fsts
xor
imul
out
jmp
xor
test
idiv
aas
icebp
adc
mov
cmp
insb
mov
loop
imul
push
jmp
and
sub
in
ret
std
cmp
push
aam
in
sub
decl
xor
stos
mov
sbb
aas
movb
fmul
and
sbb
int
nop
mov
push
popf
fadds
inc
cmpsl
cmpsb
loop
pusha
dec
nop
cmpsl
sarb
adcl
data16
push
xchg
inc
movsb
out
out
adc
mov
test
aam
jno
ja
mov
cmpsb
inc
call
sub
pop
mov
adc
dec
test
jne
xchg
mov
push
ja
icebp
jne
fnsave
jl
loop
xchg
out
or
enter
insb
mov
cmc
mov
jmp
sbb
push
sub
lret
sti
jmp
and
pop
pusha
ror
ficompl
or
xlat
cmp
and
shrb
fnstenv
xchg
mov
sub
xchg
rcl
mov
push
nop
sahf
idivl
scas
push
push
gs
insb
adc
daa
push
cmpsb
add
and
mov
pop
rep
loop
pop
data16
jge
out
add
nop
aam
adc
repz
xchg
or
fwait
or
inc
mov
fs
shrl
jmp
pushaw
mov
push
push
mov
daa
pushf
jp
and
movsb
xor
pop
test
leave
ret
in
mov
add
sarb
in
test
jmp
scas
scas
lahf
sbb
or
arpl
popa
outsl
aas
mov
fstl
dec
cmp
sub
ret
rol
mov
int3
xchg
cmc
cmc
mov
add
mov
sub
outsl
xchg
aaa
loopne
add
call
cs
mov
clc
inc
mov
mov
or
jmp
or
adc
orb
sub
sbb
lods
mov
mov
adc
in
push
mov
int
fwait
pop
dec
icebp
pop
sbb
not
xchg
push
sbb
cmc
pop
loopne
icebp
mov
add
sub
adc
dec
push
push
cmpb
das
dec
pop
cli
dec
and
xor
adcl
dec
addl
push
into
mov
pop
into
fsubrl
xor
aas
add
cmpsb
dec
xchg
stos
adc
lods
xor
daa
dec
mov
cmp
movsb
shl
mov
ret
pop
fsubs
jp
test
add
xchg
pop
test
jne
xor
lea
sahf
cmpsl
xchg
sbb
int3
xor
dec
rcrb
fucomp
sbb
add
nop
or
fsubrs
fstpl
pushf
std
and
mov
xor
dec
or
pusha
lods
mov
sub
mov
push
in
mov
popa
xchg
daa
aaa
mov
mov
cmc
movsb
mov
and
cmp
loop
ja
shrb
push
or
in
inc
cmpsl
jle
sbb
push
lock
cmp
adc
lods
xor
jmp
aaa
mov
jecxz
hlt
test
dec
jge
js
inc
mov
and
sub
or
mov
or
xchg
popa
cwtl
dec
pop
pop
aad
or
mov
lds
or
ret
insb
sub
mov
pop
dec
in
fists
mov
pusha
inc
loopne
xchg
inc
into
gs
in
pop
jp
sub
mov
sub
inc
test
cltd
nop
xor
dec
push
inc
in
sahf
pop
adc
fcmovnb
mov
inc
imul
out
in
cmp
push
xchg
js
ja
mov
xor
jmp
arpl
sahf
inc
int3
or
in
loop
js
lret
push
mov
loope
mov
mov
jno
sub
lret
mov
xchg
push
mov
inc
adc
gs
add
in
out
add
icebp
or
jbe
fwait
dec
lds
mov
xchg
fdivrs
rorb
xor
push
inc
sahf
sbb
xorl
lock
and
fsubrl
or
imul
mov
push
stc
je
or
dec
add
movsl
push
dec
add
add
test
out
dec
ds
pop
lcall
movsb
mov
push
mov
adc
sbb
fucom
gs
mov
rclb
push
push
dec
in
add
jbe
adc
nop
inc
mov
pop
leave
loopne
and
inc
dec
ret
out
dec
jecxz
inc
xchg
lds
mov
sahf
mov
and
push
mov
jmp
in
inc
push
mov
in
xor
popf
imull
pop
insl
push
inc
xchg
cmp
mov
pop
mov
sti
ss
xchg
xor
call
xchg
mov
adc
mov
movsl
cmpl
mov
push
movsl
int3
out
adc
int
sub
add
mov
lret
jb
jl
in
test
xchg
enter
aam
push
inc
push
fmul
push
push
add
jbe
outsl
cmp
mov
stos
mov
sub
cwtl
push
push
lods
add
aas
cmc
xor
sbb
mov
dec
mov
inc
cmc
inc
loope
push
hlt
aam
sbb
jg
fcmovb
dec
push
popf
xlat
xchg
mov
or
out
inc
fcoml
inc
and
adc
jns
xor
hlt
xor
inc
dec
gs
movntps
cmp
lea
inc
or
lret
stc
aaa
jp
sbb
fcoms
adc
add
cwtl
add
mov
push
int
dec
sub
jl
insl
sbb
mov
enter
hlt
jle
or
ds
pop
ret
movsl
sub
sbb
push
js,pn
data16
mov
adc
out
xor
into
sub
popa
xor
sbb
xor
cld
test
push
loopne
and
es
imul
lods
stos
mov
mov
push
mov
sbb
inc
add
add
out
sbb
inc
cmpsl
leave
outsl
test
ret
out
inc
jne
xchg
ret
sub
dec
hlt
daa
repz
ffree
pop
repz
gs
repz
aas
sub
aaa
in
fwait
in
push
sbbb
mov
dec
mov
or
sbb
das
or
daa
push
out
mov
cmp
xchg
push
pop
xor
push
and
pop
shrb
push
lea
mov
ja
dec
push
inc
pushf
movsl
dec
sub
xor
cmp
and
jne
push
inc
adcb
shrl
xchg
lds
xor
pop
inc
jecxz
xchg
outsl
test
dec
sbb
cmp
lret
movsl
lock
add
jbe
xchg
xchg
mov
sub
fcmovu
xor
or
incl
or
push
dec
sahf
fwait
sti
dec
stc
push
stos
enter
sarl
xorb
es
jp
filds
es
fimull
mov
jl
cwtl
insl
push
dec
call
insl
repz
xchg
mov
inc
jne
adc
jecxz
push
dec
in
cmc
data16
push
xchg
lcall
xor
mov
fsts
in
sbb
ljmp
cmp
sub
nop
or
adc
lds
push
into
stos
and
loop
add
xorl
push
mov
inc
das
hlt
jne
pop
push
enter
je
aas
lret
test
repnz
repnz
rcr
push
orb
mov
ficoms
clc
push
inc
aam
inc
loope
inc
daa
or
out
rorl
and
jnp
cs
mov
mov
push
dec
jbe
and
dec
mov
pop
stos
scas
xchg
shlb
or
cmp
jnp
jge
inc
dec
lret
pop
inc
lret
jo
jecxz
and
int
and
int3
cld
subl
sarb
pop
fwait
lahf
idivl
xchg
mov
cmp
repz
xchg
in
xchg
dec
data16
dec
jmp
push
jp
add
stos
and
or
in
ds
sbb
je
stc
dec
cmp
jge
mov
aad
mov
and
sarb
and
jae
fcompl
mov
pop
hlt
mov
inc
fmulp
in
leave
mov
movsb
jno
mov
mov
pop
mov
sti
in
jge
packssdw
cmpsl
aaa
je
mov
dec
sbb
jmp
imul
pop
cwtl
testb
sub
ljmp
js
je
jl
call
clc
nop
add
xchg
and
xchg
mov
jo
aad
pop
pop
mov
pop
repnz
add
jae
cmpl
cwtl
jmp
fdivr
lahf
imul
mov
in
addr16
fists
andl
mov
ja
xchg
cmpsl
sub
mov
pop
mov
or
and
fcmovnbe
cli
call
inc
pop
push
stos
or
mov
pop
shll
fldl
mov
movsb
and
std
icebp
dec
fmul
mov
sub
les
mov
out
pushf
ds
pop
ret
out
jmp
es
inc
fbld
imul
add
add
dec
outsb
mov
daa
pop
fst
mov
pop
shrb
stos
outsl
sbb
repnz
mov
cs
inc
outsb
push
in
cs
push
ret
or
mov
std
andb
or
outsb
fiaddl
sarb
repnz
sbb
and
push
int
and
mov
cmp
imul
mov
into
daa
ljmp
lock
popa
das
pop
pusha
cmp
xchg
cmpsb
add
sub
adc
shrb
out
dec
nop
xchg
leave
test
fistps
add
or
repnz
call
aas
lds
sti
test
jmp
filds
mov
dec
jno
and
pop
add
and
loope
shrl
jge
xchg
cmc
cltd
xor
push
scas
jo
xchg
cmp
pushf
adc
hlt
xor
sbb
pop
bnd
call
pop
jo
mov
push
or
jno
orl
pop
fisubl
jge
push
inc
pushf
and
inc
jno
adc
dec
cltd
jo
hlt
in
in
cmp
xchg
cmp
and
jns
sbb
xchg
push
mov
es
cltd
test
pop
xlat
pop
xchg
dec
mov
mov
xchg
pop
aad
stos
push
jb
mov
push
test
icebp
es
shl
mov
cli
repz
fnstcw
fistps
lds
ljmp
shlb
and
adc
adc
pop
int
subb
dec
pop
lock
cwtl
push
repnz
xchg
sub
or
outsl
out
push
out
pop
and
and
mov
mov
jnp
cli
xchg
repnz
xor
sub
jp
out
sub
inc
sarl
in
imul
adc
test
dec
xchg
pop
add
xchg
xor
aaa
clc
clc
push
xchg
in
jl
inc
adc
push
ret
dec
push
add
xorb
push
inc
sbb
lea
jne
repz
mov
pusha
jbe
push
jmp
stos
jae
gs
mov
sub
pusha
push
adc
fadd
outsl
stos
push
inc
fnstcw
subl
sbb
jl
js
dec
pop
repz
jnp
rorl
jl
rolb
mov
push
pushf
negb
sub
std
jmp
lea
cmp
mov
mov
ret
data16
add
jle
jl
cli
shll
mov
lods
addr16
sahf
jnp
cmp
inc
xor
fisttpl
lret
data16
repnz
pop
mov
out
jecxz,pn
call
push
dec
mov
or
jg
popa
in
xor
outsl
push
out
sbb
push
pop
mov
in
aaa
lret
jb
sub
insl
dec
push
iret
xchg
mov
test
push
sbb
dec
push
leave
xchg
xchg
mov
ja
loop
mov
sub
jg
lahf
js
and
or
fcmovb
pop
imul
mov
lret
mov
mov
enter
push
daa
aad
fwait
cmp
push
and
pop
loop
dec
pop
xor
adc
sbbl
add
mov
jns
xlat
movsb
es
dec
and
mov
andl
and
and
adcl
imull
inc
mov
shll
push
ds
cs
adc
and
lret
mov
insl
push
xchg
rorl
out
mov
jns
jl
lret
nop
out
movsb
cwtl
popa
addr16
push
pusha
cmp
pop
jecxz
jl
add
cmc
fucomp
xchg
or
test
xchg
aam
push
subb
ja
repz
test
mov
fsts
rclb
xchg
sub
xchg
sbb
mov
imul
stos
pop
ja
loop
lret
fucomi
pop
into
into
lahf
or
inc
sahf
jecxz
movsb
jl
inc
xchg
sbb
add
cmc
pop
sub
mov
orb
sub
jno
dec
in
mov
sub
stc
mov
out
cmp
std
cmp
mov
add
jne
mov
inc
and
push
int3
mov
int3
test
mov
roll
jg
cli
add
push
xor
jb
dec
add
bound
sub
sbb
rclb
cmp
mov
mov
xchg
lahf
repz
cwtl
ss
dec
xor
sub
add
add
fucompp
push
arpl
cmp
shrl
sbb
popa
loopne
stos
jl
xlat
shll
xchg
xchg
lods
out
lret
outsl
push
or
push
loopne
sbb
lock
sbb
inc
lods
stc
mov
cmp
mov
ljmp
loop
push
lahf
pop
aaa
mov
es
inc
jmp
xor
mov
dec
lea
cmp
das
mov
cltd
pop
mov
sub
jne
adc
jno
push
cld
imul
and
jle
add
dec
jp
xchg
xor
mov
cmp
mov
out
iret
stc
stc
pop
outsb
shrb
mov
mov
mov
push
inc
inc
aam
mov
sbb
pop
dec
push
and
loope
inc
lock
out
xor
xlat
sbbl
movsb
push
adc
mov
out
cmpsl
cmpsl
xchg
inc
scas
adc
rol
fiaddl
mov
imul
inc
repnz
push
inc
ss
jae
push
push
daa
adc
push
cmpsb
pop
imul
daa
inc
mov
pop
cmp
ficompl
daa
icebp
pop
push
pop
scas
xchg
mov
push
or
loop
sbb
add
sub
scas
out
and
aaa
lret
jmp
push
cmp
int3
lods
cli
lock
xor
and
xchg
add
int3
rolb
repnz
xchg
xchg
sbb
loop
pop
xchg
dec
fstps
ficomps
inc
dec
icebp
adcb
and
int3
mov
cmp
lret
shrl
jp
imul
shl
and
jge
jbe
push
mov
push
jns
xor
cld
in
mov
cmp
movsl
imul
in
icebp
shlb
test
fwait
jecxz
inc
inc
pop
in
inc
add
adc
cwtl
push
je
or
cmpsl
movsb
cmp
pop
sbb
mov
outsb
sbb
cmp
aas
sub
add
subl
push
push
inc
shrl
fists
je
xchg
xchg
mov
mov
add
jbe
mov
push
xchg
out
add
cmpsl
andl
mov
decb
add
aam
xor
fidivrl
das
xchg
push
sahf
dec
daa
xor
popf
sub
add
mov
sbb
in
fcom
insl
xchg
xchg
ss
inc
lahf
andb
push
xlat
or
push
movsl
jno
push
sahf
sbb
jb
aas
ss
inc
loope
sbb
test
sub
les
arpl
mov
jne
add
ds
es
mov
cmpsl
lret
jecxz
and
sbb
xor
cli
cwtl
mov
jmp
rclb
and
cmpsl
stc
xchg
cmp
jae
jo
repz
push
pop
ja
xor
jbe
int3
or
pop
dec
lods
push
cmc
jge
mov
call
fwait
int3
mov
adc
push
aaa
lcall
sarb
add
lods
push
and
shlb
arpl
xor
jne
sub
sub
jmp
sub
insb
sub
cmp
push
test
push
mov
adc
fistpl
and
sub
sbb
aam
cmp
das
movsb
mov
js
orl
cmpsl
adc
mov
xchg
dec
pop
int3
inc
mov
out
jmp
mov
mov
sti
sub
xchg
ror
scas
or
add
je
ds
jae
cld
loop
out
mov
and
test
jge
and
bnd
repz
roll
jecxz
xlat
jmp
bound
aaa
and
add
jae
sub
and
pop
cmp
mull
push
aas
movsb
dec
mov
mov
into
push
fiaddl
pop
ss
test
xchg
hlt
mov
insl
dec
xchg
or
rolb
sub
loop
jecxz
pop
push
mov
les
jne
scas
fcoms
push
inc
les
or
lahf
mov
jmp
mov
pop
cmc
jp
push
orl
pop
fbld
loope
sub
push
cmp
ja
adc
in
stos
mov
or
fwait
add
aaa
push
call
insl
pop
add
lods
aam
das
inc
imul
or
inc
stc
push
repnz
mov
push
jl
mov
xor
outsl
inc
ljmp
sub
push
sti
pushf
and
pop
out
subl
mov
imul
adc
sub
xchg
outsb
adc
push
or
pop
movsl
dec
sub
pushf
and
enter
scas
adc
cmp
insl
xlat
or
jb
inc
lret
arpl
mov
test
in
cmp
dec
scas
bnd
lea
mov
push
adc
outsb
sahf
cld
in
mov
add
add
add
rol
push
scas
clc
jno
jo
fsubp
lea
push
push
mov
rcrb
inc
dec
add
push
jl
sahf
or
adc
mov
adc
add
adc
stos
sbb
add
leave
shll
insb
mov
jne
dec
or
jge
cltd
test
push
mov
cmpl
mov
inc
mov
out
rorb
pop
adc
cli
push
imul
loope
stc
test
dec
push
je
in
cli
repnz
and
dec
shrb
cli
or
push
pop
xorb
adc
or
inc
xor
loop
shlb
push
mov
sub
xor
sbb
xchg
sbbb
cmp
fstpl
cmp
shrl
pushf
andl
pop
dec
js
xchg
loopne
adc
shrl
add
inc
imul
testb
das
notb
cmc
pop
stos
jp
in
cli
xchg
push
mov
sbb
negl
shrd
daa
pushf
mov
imul
cli
fcmovb
xchg
cmovnp
sbb
iret
sbb
jns
adc
int
fsts
xchg
in
inc
outsb
sbb
shlb
lahf
sarl
fisttpl
sub
sub
cmp
and
jb
jle
mov
xchg
je
sbb
adc
cmpsb
pop
negl
sbb
mov
or
push
jecxz
pop
jg
cltd
mov
imul
mov
fwait
add
push
icebp
or
scas
push
dec
sar
push
in
addr16
stos
or
add
pop
jo
shrb
cld
add
xchg
pop
js
bound
push
xchg
cmpsl
loop
mov
add
pop
repz
stc
stos
loope
fs
push
gs
in
jg,pn
jmp
mov
adc
es
pop
imul
aas
sbb
cli
jns
rclb
adcl
or
je
cwtl
ret
sbb
or
ja
pusha
push
sbb
and
lcall
xchg
repz
aaa
or
enter
mov
xor
lret
mov
and
pop
repz
ret
aas
aas
and
add
mov
gs
adc
jg
in
cmc
inc
and
inc
scas
stc
lds
cmp
xor
sbb
adc
fcomps
fstl
push
mov
jae
arpl
cltd
pop
rcl
inc
xchg
sbb
sbb
imul
lock
into
popf
ss
pop
mov
out
sbb
pushf
ss
into
andl
outsb
xchg
test
mov
mov
pop
repz
pop
cmp
xor
cmpl
test
push
jb
sbb
sarl
inc
lock
ds
sbb
sarb
jno
shl
xor
loopne
rorl
xor
pop
std
mov
pop
rcr
mov
or
scas
jle
adc
int
and
or
pop
mov
push
or
adc
pop
nop
in
clc
call
popf
cmp
xchg
push
repz
jmp
in
std
fs
fadd
dec
xor
jmp
sub
lock
adc
cmpsl
scas
xor
mov
or
add
inc
push
fwait
stos
pop
fucom
in
popf
jne
cmc
cmp
cs
in
and
cld
std
in
inc
or
add
sti
and
pop
dec
jno
cmp
pop
jge
test
mov
jnp
pop
mov
push
sbb
cmp
leave
fldz
out
outsl
test
push
mov
jecxz
pushl
dec
int3
loopne
mov
jns
push
push
icebp
push
subb
int3
cmpsl
mov
mov
sti
cmp
es
test
hlt
pop
inc
sub
lock
negl
mov
insb
cltd
shl
iret
xlat
insb
fisttps
mov
xchg
mov
jne
push
inc
add
gs
adc
or
das
adc
lcall
hlt
mov
notl
xchg
cmpsb
incb
lcall
lods
lret
in
mov
cltd
add
out
data16
lahf
mov
mov
mov
ljmp
jo
inc
pop
cmpb
xor
test
sahf
outsb
cmp
mov
fdivp
inc
add
pop
stos
adc
rcrb
rcl
js
push
inc
jo
mull
call
pop
pop
jp
leave
inc
iret
and
leave
rcr
fwait
leave
mov
pop
dec
fstpt
clc
mov
ret
ljmp
mov
out
shrb
lahf
pop
xor
lea
test
aad
mov
mov
in
sbb
and
scas
dec
into
sbb
mov
pop
inc
pop
cltd
push
cmp
mov
fnsave
push
cli
repnz
mov
loop
or
pop
cmpsb
or
jge
es
clc
xor
in
fadd
push
add
lret
xor
push
dec
iret
add
push
cld
insb
xchg
xchg
in
arpl
in
adc
in
in
sub
sbb
movsl
lahf
sub
and
ds
xor
lahf
cmp
or
int
nop
out
dec
sub
mov
mov
jecxz
xorb
dec
add
jnp
jnp
lcall
das
cmp
and
cmpsl
and
inc
outsl
inc
dec
bound
pop
sahf
shll
inc
call
seta
js
xor
add
push
sub
test
roll
js
push
daa
test
iret
hlt
xor
orl
cmp
aad
insl
jne
push
rorl
ds
test
cmp
xor
popa
inc
enter
pop
dec
test
lods
mov
sahf
xchg
push
or
or
push
loope
jl
ja
les
push
mov
stos
test
pushf
arpl
pop
xchg
sub
in
dec
jb
push
sysret
push
push
mov
push
mov
xor
xor
int3
outsb
in
in
push
int
push
and
sti
mov
popf
sti
xchg
addr16
imul
arpl
lret
std
pop
cmp
mov
mov
xor
dec
push
jns
mov
mov
test
neg
push
pop
jp
add
icebp
subl
dec
mov
mov
push
or
pop
icebp
mov
mov
add
popf
xchg
and
and
xor
jbe
into
pop
loope
dec
jo
cmpsb
xorl
subl
pop
lret
cli
pop
aam
mov
jecxz
lods
test
movsb
in
ret
pop
push
fadd
xchg
mov
out
pop
loop
adc
or
mov
push
int
leave
xchg
daa
cmpsb
mov
aam
divb
add
int
cmp
add
pop
or
leave
cmp
xor
jb
or
sar
pop
dec
pop
cmp
aad
pop
jne
xchg
push
xchg
sub
pop
ret
int
add
jbe
jecxz
fstps
cwtl
inc
imul
pop
les
mov
testl
mov
mov
and
cmpsb
mov
scas
mov
push
cmp
decl
pusha
lock
push
loope
xor
jle
std
sub
inc
insl
mov
testl
pop
dec
jl
mov
jle
dec
stos
popa
out
mov
scas
adc
testb
sbbl
jb
divl
js
neg
add
or
ds
mov
sub
cli
xchg
inc
jge
jg
jae
pop
leave
stos
mov
fwait
pop
out
outsb
sub
mov
cmpsb
outsb
in
mov
in
and
sbb
iret
xor
scas
inc
mov
pop
push
and
fimull
dec
jbe
pop
or
lods
mov
xor
xor
push
adc
fcmovbe
lea
lcall
mov
mov
dec
mov
sahf
test
jecxz
out
mov
push
in
inc
xchg
test
in
lock
sbb
sbb
push
loopne
cs
aaa
arpl
pop
sbb
or
xchg
push
sbb
roll
in
mov
dec
lahf
popf
gs
xor
int
je
xor
jecxz
enter
fadds
mov
mov
xchg
fs
sbb
scas
aad
outsl
sbb
add
mov
or
out
repz
add
subl
xchg
add
mov
out
pop
cmp
push
cltd
jne
rclb
addr16
sahf
aaa
xor
into
adc
xor
pop
daa
cwtl
shll
loope
jns
lock
rol
ja
xchg
or
sbb
mov
bsf
rorl
std
pop
jns
sub
in
jno
xchg
lret
xorb
mov
xlat
inc
fldl
icebp
xlat
pop
enter
fstpt
jne
iret
mov
call
dec
test
adc
fmull
jae
fidivl
jle
outsb
sbb
cmp
shl
sbb
outsl
mov
idivl
fstl
mov
mov
or
aam
lods
fcomps
dec
push
jp
js
mov
cwtl
and
mov
je
fadd
pop
aad
mov
js
unpckhps
cmp
mov
xchg
pop
jno
lock
dec
cmpl
mov
xchg
lods
mov
shll
push
inc
push
fmull
loopew
popf
adc
mov
adc
out
ds
pushf
mov
jmp
xor
sbb
mov
clc
lds
sbbl
mov
pop
cmp
shll
jle
mov
lock
bound
mov
xchg
mov
lea
xchg
sbb
sbb
fistps
fs
cmpsb
fcompl
adc
addr16
mov
in
add
and
loope
sbb
bound
add
inc
stos
stos
push
push
sub
pop
lds
add
inc
xor
in
rcr
sub
add
in
mov
sub
movsl
ret
mov
out
jg
cmpsb
jbe
mov
imul
rolb
mov
sarb
and
neg
aaa
mov
loopne
stc
xor
in
sbb
pop
dec
cmp
dec
lods
pop
arpl
fwait
clc
fnstsw
mov
int3
xchg
cmp
mov
cmp
cmp
add
call
cmp
push
sti
dec
xchg
mov
adc
mov
mov
lea
dec
push
push
push
imul
fstps
ljmp
loope
pusha
cmp
cmp
pop
lods
in
outsl
sub
cli
inc
inc
or
dec
in
lea
pop
adc
pop
inc
movsl
cltd
movsb
inc
cmpb
daa
and
loope
incl
out
test
inc
nop
inc
inc
push
in
cmp
ljmp
insb
in
arpl
es
and
ja
xchg
dec
data16
adc
outsl
es
movsl
sar
dec
pusha
movsb
nop
mov
aaa
xchg
nop
xchg
dec
jl
mov
pop
push
icebp
jle
dec
xchg
mov
scas
mov
rorb
cltd
test
movsb
adc
les
out
and
ficoml
ja
mov
pop
pop
popf
hlt
xor
data16
xchg
xchg
fstp
mov
cs
cmp
cmp
std
jg
repnz
scas
jo
dec
fisttpl
rcll
mov
add
xchg
stc
fidivs
or
cmpsb
pop
movsb
daa
js
mov
push
mov
in
and
sbb
loope
sub
or
test
mov
jle
sbb
jb
das
rolb
jno
push
push
int
xchg
aam
fcmovnbe
cmp
jl
mov
push
std
mov
cwtl
mov
mov
add
mov
mov
push
mov
or
dec
push
xchg
into
movsb
icebp
cs
xrelease
ljmp
outsb
inc
adc
xchg
sahf
push
mov
xchg
mov
fimuls
dec
push
push
lods
mov
aad
sub
mov
sub
cmp
arpl
jmp
xchg
xorl
sbb
cs
movsb
cmp
mov
xchg
adc
sub
imul
jb
nop
das
jle
jmp
or
add
push
dec
mov
inc
into
xchg
dec
sarl
popf
arpl
inc
lret
lods
sti
insb
fstp
adc
je
jae
shll
jmp
fbld
fldt
ret
push
clc
pop
mov
add
adc
mov
dec
in
in
dec
xchg
subl
loopne
mov
pushf
ljmp
fiadds
xchg
gs
loop
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
cli
fadds
pushf
jnp
pushw
jnp
cld
lea
fstl
hlt
cmpl
xchg
cmp
dec
test
xchg
xchg
adc
mov
or
inc
dec
jnp
push
inc
stc
cmc
or
fwait
mov
scas
xor
outsl
lock
clc
lock
xor
or
repz
xor
lret
test
add
int3
imulb
mov
dec
xlat
cli
fldt
cmp
das
ret
mov
loop
push
outsl
daa
add
lods
jg
and
lret
jns,pn
xchg
jno
mov
push
movsb
and
and
inc
movsl
and
jg
in
inc
mov
aam
xchg
jne
cmp
xchg
iret
pop
lahf
subl
jno
jb
dec
rcl
sahf
xchg
cli
lods
or
xor
ja
cmc
test
sub
repnz
adc
pop
cmp
inc
sbb
inc
hlt
enter
adc
jo
js
push
sbb
pop
cld
jnp
int
clc
inc
fs
sbb
mov
mov
adc
pop
loop
xchg
lahf
mov
call
addr16
mov
fnstsw
push
lahf
add
mov
clc
cmp
push
call
add
add
dec
xchg
cmp
jl
cmpb
pop
xchg
js
inc
cmpsl
or
inc
jo
aaa
xor
lds
and
mov
fadd
inc
lods
mov
add
mov
ds
xor
into
sbbl
fdivl
shl
xor
and
sarl
in
out
adc
insl
sti
sub
hlt
fld
mov
xchg
movsl
stos
pop
shll
sbb
gs
js
pop
test
push
pop
sti
je
pop
and
or
pop
mov
sub
or
lret
cmp
roll
scas
push
jp
fcomps
add
adc
jge
mov
pop
into
cmp
lea
loopne
fnstenv
or
fsubrl
in
adc
or
repz
outsb
or
dec
push
insl
or
or
int3
ja
ss
pushf
out
in
sbbl
cmpsb
out
xchg
sub
mov
mov
fwait
out
sub
loopne
test
out
mov
jle
mov
mov
daa
mov
cs
mov
inc
ret
mov
ljmp
iret
ret
imull
repnz
jecxz
aad
push
out
aas
sub
mov
lods
xchg
dec
jecxz
jge
push
add
sub
sarl
jge
mov
jno
push
repz
idiv
out
in
test
aas
mov
pusha
lret
clc
jns
xchg
outsl
xchg
insb
pop
jne
lods
or
testb
ljmp
std
sbb
in
sbb
imul
out
or
add
add
cmp
sbb
pop
mov
fisttps
jg
inc
insl
jno
push
mov
jne
loop
xchg
push
inc
sub
push
xor
jb
rorl
cmp
aad
dec
ffree
and
push
sub
ret
out
movsb
sub
pushf
aam
mov
cmp
cmp
repnz
in
les
mov
ds
or
int
adc
and
mov
lret
pushf
pop
dec
sub
adc
add
dec
adc
test
add
fildl
pop
lock
add
jmp
scas
pop
push
add
xor
out
fldcw
sub
int3
lret
adc
sbb
lcall
mov
ret
push
jns
mov
push
inc
outsb
adc
lock
mov
cmp
jmp
mov
dec
push
mov
jbe
mov
mov
lds
data16
inc
mov
insb
ljmp
sub
arpl
sub
out
cli
scas
cmpsb
mov
ret
mov
into
lret
sarl
fstps
loop
lret
aam
xor
adc
sbb
pop
cmpsl
xchg
scas
push
pop
pop
push
loope
sub
adc
inc
es
cld
mov
sub
xor
sub
push
ljmp
es
loope
push
testb
clc
insl
xor
and
mov
sub
mov
jns
icebp
adc
xchg
hlt
push
imul
mov
fmuls
movsb
xor
jmp
sbb
dec
sub
sub
outsb
insb
push
and
rolb
sarb
xor
shrb
pushf
lret
inc
dec
je
cmp
andb
lahf
mov
jne
hlt
pop
fstpl
cmp
cwtl
push
jae
push
jmp
popf
aam
enter
push
xchg
push
dec
sub
fistpl
scas
rclb
or
adcl
in
aam
push
mov
pop
add
cmpsb
lods
rcl
aam
jo
lret
jae
mov
bound
std
sbb
std
int
sbb
add
fwait
aaa
push
or
out
push
in
ret
subb
pminsw
pop
sbb
push
pop
and
jb
mov
add
pop
pop
inc
int
pop
sahf
dec
mov
adc
into
sub
arpl
add
jns
jne
fmull
mov
insb
mov
testl
xchg
xchg
inc
mov
stos
shr
mov
jle
shrb
inc
popf
arpl
shrb
cmp
pushf
ret
pop
sbb
xchg
sti
mov
movsb
inc
sar
sub
sbb
cmp
mov
sub
mov
pop
mov
inc
idivb
cmpsl
mov
add
sbb
lock
loop
xchg
cmp
jecxz
cmpsb
aam
push
loope
xchg
aas
and
inc
mov
bnd
int
xor
das
int
std
lods
adc
pop
pop
lock
mov
sub
out
ja
outsb
imul
sub
das
es
mov
dec
andb
and
nop
gs
lods
inc
shrb
int3
mov
les
scas
dec
sbb
jns
xor
xor
xchg
jae
cmpsl
mov
vpmacsdqh
imul
xlat
outsb
fstps
enter
dec
fucom
jnp
test
ror
adc
jno
pop
jb
sbb
xchg
in
cld
mov
lods
leave
add
push
pop
push
xchg
mov
cmpsb
mov
ja
pop
mov
add
inc
sub
pop
stos
push
fstpt
dec
out
jo
sahf
outsb
sbb
in
add
sbb
stc
push
js
cwtl
pop
iret
into
stos
in
mov
ss
imul
add
pop
test
in
pushf
sbb
mov
xchg
push
push
movsl
jmp
push
ds
cmp
push
or
ljmp
adc
push
fwait
mov
add
xor
divl
fdivl
aam
and
iret
mov
xor
int3
lcall
jp
xor
push
mov
adc
inc
roll
lcall
mov
je
dec
rorb
inc
pusha
xor
addr16
out
xor
dec
xor
sub
incl
push
test
mov
test
mov
xchg
xor
pop
data16
sub
into
push
xchg
pop
mov
int3
xchg
imul
arpl
jle
aam
int
js
inc
inc
xchg
bound
in
jno
inc
or
out
arpl
xchg
out
pop
lods
mov
and
mov
fnsave
in
push
notl
cli
shrb
fisubrs
je
fildl
cld
in
fidivrl
cmpb
push
je
test
xchg
inc
jmp
ret
clc
and
push
push
xorl
out
jmp
and
push
mov
sbb
or
jl
sub
or
mov
lods
adc
jge
in
lods
sub
daa
push
lret
jg
xchg
sub
fwait
rcrb
stos
cmp
or
pushf
or
aam
push
xor
and
stc
cmpsb
shll
sub
jnp
cmp
in
jle
mov
push
mov
jno
push
and
in
mov
jns
std
insl
mov
stos
push
pop
scas
shrb
movsl
or
xchg
outsb
leave
les
dec
pusha
adc
pop
cmp
mov
mov
fnsave
cmp
lcall
shrl
inc
filds
shlb
adc
cmp
pop
or
inc
imul
loopne
sub
cmp
cmc
cmp
mov
rorl
adc
rcl
mov
adc
daa
cmpsl
aaa
sbb
add
and
mov
aam
scas
and
lahf
dec
push
test
push
pushf
out
add
aas
mov
jnp
mov
inc
and
mov
mov
fbld
cmp
xor
xor
xchg
mov
xor
jbe
sub
dec
pop
mov
repnz
bound
aas
sub
call
cmc
mov
sbb
pop
push
shrl
sbb
inc
and
sbb
inc
push
dec
rorb
enter
cmp
jmp
lods
lock
scas
mov
lods
push
push
prefetch
or
inc
push
push
pmulhuw
addr16
sub
sbb
adc
or
mov
xchg
inc
push
cmp
dec
pop
rcrb
pop
hlt
lahf
push
adc
shlb
sub
js
jle
sbb
pmaddwd
insl
fiadds
movl
sbbl
mov
dec
adcl
adc
xor
fdivs
enter
add
push
push
jne
and
icebp
pop
add
xor
aad
sub
xchg
push
mov
cld
pop
fisubl
sahf
sbb
jg
lcall
int3
data16
and
pusha
out
gs
and
push
xchg
ret
lahf
mov
mov
jl
dec
mov
adc
shrl
leave
out
dec
out
mov
mov
add
push
xor
xchg
sbb
dec
push
jge
inc
add
push
add
mov
lret
arpl
push
mov
xchg
scas
cmp
lcall
jnp
hlt
dec
cmc
mov
mov
lock
jp
fdivrl
in
mov
jecxz
int3
sbb
sbb
pop
pop
xchg
mov
xchg
bound
sub
enter
push
xorl
push
sub
cltd
out
fsubrl
and
mov
inc
scas
sbb
xchg
sbb
push
gs
sub
xor
xor
dec
icebp
xchg
mov
pop
outsl
push
data16
push
lds
sub
inc
sbb
iret
scas
repz
mov
dec
lods
inc
out
shrd
jmp
ljmp
dec
xchg
notb
loope
push
test
icebp
movsb
inc
ljmp
outsl
outsl
push
jmp
cmc
popf
dec
mov
imul
adc
sbb
mov
sbb
shl
jge
xorb
les
pop
push
dec
pushf
pop
pop
aas
cmpsl
insb
pop
ud1
mov
and
mov
mov
jp
mov
inc
xor
inc
pop
shl
jge
mov
in
out
and
orb
push
pop
data16
push
and
into
xchg
icebp
mov
loop
outsl
loopne
leave
notb
fwait
jne
hlt
adc
push
loope
xor
xor
les
repz
lea
or
aam
push
and
xlat
in
jmp
push
das
lock
orb
mov
repnz
mov
jg
ret
in
popf
pop
popa
in
lea
xchg
cmpsb
push
push
dec
lds
in
ljmp
lods
sub
push
jg
xchg
stc
cmp
cmp
dec
daa
iret
push
add
je
pop
adc
shlb
faddl
sbb
pop
aam
xchg
cmc
and
imul
pop
cs
test
into
fsts
test
mov
jne
jmp
or
mov
adc
jp
adc
dec
lcall
pop
mov
test
movsl
test
xchg
insb
gs
xlat
lds
call
xchg
jne
pop
xor
mov
push
int3
int3
inc
or
out
inc
push
inc
cmp
dec
xor
roll
int
cld
xchg
add
cmp
mov
inc
xchg
add
sbb
inc
lock
scas
xchg
rcrl
call
imul
jmp
add
cmc
lea
lret
or
pusha
out
add
std
pop
test
and
mov
or
stos
mov
icebp
sub
inc
mov
inc
xor
jo
jo
mov
in
mov
decl
aaa
lret
loope
xor
mov
shll
xchg
push
inc
ret
inc
cmc
sbb
cmp
out
push
lret
mov
xchg
cmp
js
jp
bound
fsubrs
add
or
fdivl
jnp
outsb
lods
mov
aaa
mov
sub
add
xor
adc
push
pushf
dec
mov
pop
jo
or
sti
ret
js
xchg
sar
std
mov
cmp
test
xchg
outsb
rcrb
jecxz
dec
test
bound
fwait
call
je
push
pop
pop
pop
pop
mov
fucomi
push
lahf
aaa
test
jb
shll
mov
cmp
mov
cmpsb
sub
add
out
dec
out
cmp
xchg
dec
js
cmp
sub
test
lcall
xchg
pop
aad
or
sub
icebp
and
dec
insl
mov
jnp
dec
ffree
dec
cs
pop
dec
js
dec
cmp
mov
pop
xchg
adc
sbb
adc
jb
cmpsb
jne
inc
or
or
shl
cmp
imul
add
mov
lea
sub
push
cld
arpl
rorb
push
cli
sarb
push
hlt
andl
ljmp
xchg
inc
das
push
jp
pop
fs
into
pop
daa
and
cld
lcall
loope
es
popf
aad
cmpsb
ljmp
jmp
lods
fucomp
ret
jns
or
jo
add
xor
cwtl
xchg
scas
lds
jns
mov
mov
outsl
mov
pop
int
or
sti
mov
sub
adc
das
enter
fisubl
fwait
scas
mov
sbb
add
sub
mov
cmp
test
pop
sbb
sbb
daa
lea
mov
stc
adc
dec
mov
lods
mov
into
pop
lret
imul
sub
xchg
dec
mov
xchg
mov
xlat
cmp
dec
popf
mov
repnz
sbb
out
dec
mov
loop
and
rclb
cmp
adc
ljmp
add
sub
in
pop
fiaddl
arpl
popf
out
ds
cltd
js
packuswb
jmp
ror
adc
test
dec
ss
pop
mov
aad
mov
cltd
movsb
add
push
das
sub
fwait
push
pop
out
or
fadds
lcall
or
mov
lods
jg
xor
lahf
cmp
cmpsb
aad
mov
ja
mov
insb
in
sbb
dec
imul
orb
loope
repnz
into
lahf
cmp
aad
jne
jle
dec
aad
mov
nop
sub
lea
xchg
test
cld
add
inc
das
enter
jo
push
in
loope
or
cmp
rorl
clc
adc
or
jle
adc
test
aas
mov
lret
jns
push
mul
mov
mov
cmp
test
es
orl
aas
xchg
jle
movsb
outsb
jl
loopne
les
fwait
xchg
loopne
push
hlt
lret
stos
cld
push
mov
cmp
mov
lahf
ja
pop
xchg
test
sbb
cmp
test
or
aaa
mov
push
into
xor
das
mov
push
outsb
mov
fsub
jp
ret
xbegin
jnp
pop
callw
cmpsl
fwait
stos
xor
mov
ss
into
xlat
cmp
mov
icebp
add
pop
pop
sbb
mov
int3
inc
cmc
sbb
adc
in
mov
nop
pop
pop
pushf
or
adc
or
popf
push
scas
rcrb
or
stos
mov
or
stos
sub
lahf
push
gs
xor
enter
cmp
shll
jge
push
movsl
or
into
jge
mov
mov
adc
pop
push
push
enter
or
repnz
push
lock
std
jns
jbe
and
jbe
push
mov
lcall
mov
mov
pop
xchg
or
xor
jno
jp
xchg
je
inc
sarl
cmp
cmp
inc
test
dec
mov
imul
push
sub
fwait
repnz
call
and
mov
scas
rcrl
mov
fstpt
loope
neg
pushf
imul
lret
adc
mov
cmpsb
outsl
js
add
dec
mov
pushf
rorl
cmp
int3
imul
cltd
or
inc
mov
lods
push
stc
sbb
and
push
lahf
lods
cmc
or
fcos
add
pop
rcll
jnp
or
scas
ret
and
int
cmp
jge
iret
rcrb
push
arpl
dec
pop
scas
icebp
and
fadds
enter
std
ret
int
in
jae
inc
add
inc
sarb
es
pusha
lret
pop
int3
xchg
shl
push
pop
xchg
add
dec
xacquire
mov
movsb
notl
data16
into
jl
fwait
xlat
mov
iret
popa
repnz
push
xchg
adc
in
sub
jmp
sbb
lcall
jno
test
dec
jmp
neg
pop
adc
repz
jle
mov
fcom
push
inc
add
repnz
sub
je
enter
adc
test
call
dec
negb
ret
icebp
xchg
das
mov
mov
js
les
xor
and
stos
mov
daa
jecxz
mov
dec
and
rcrb
xchg
je
pop
sarl
repnz
mov
add
xchg
mov
dec
xchg
mov
enter
repnz
sbb
mov
pop
pop
adc
cwtl
mov
outsb
jp
pop
mov
loope
cmp
mov
jge
or
rclb
cmp
enter
dec
and
data16
cmp
and
jmp
mov
pusha
arpl
push
adc
and
scas
test
mov
pop
fsubrl
xchg
mov
and
test
adc
sub
add
mov
and
jge
fistps
insl
jmp
and
pusha
ret
push
inc
dec
dec
mov
cmp
mov
in
gs
js
mov
dec
imul
dec
xor
pop
out
cmpl
gs
mov
fisttpl
mov
scas
mov
movsb
insb
in
or
xchg
mov
and
lods
mov
insb
add
mov
lcall
dec
pusha
nop
jmp
sub
fsubl
fbld
sub
cmp
cwtl
outsb
xchg
and
popa
dec
cmp
insb
pop
negb
sub
incl
push
imul
xorl
sti
push
std
out
fwait
mov
sbb
sarb
jbe
jmp
jmp
or
bound
js
jne
lods
sub
cmpsb
mov
and
pushf
sbb
push
or
pop
sbb
inc
fisttpll
cmp
mov
cmpb
mov
mov
scas
and
orb
je
stos
js
adc
mov
aas
repnz
adc
insl
popf
sub
jp
pop
stc
or
inc
movsl
push
jb
inc
aaa
pop
xchg
mov
aad
test
fcompl
aas
arpl
sbb
mov
hlt
dec
push
sbb
push
fcompl
movsb
lds
sbbb
mov
call
in
jo
rcrb
cld
sbb
mov
adc
push
xlat
pop
adc
push
nop
notl
mov
xor
mov
mov
jle
xor
in
les
push
in
pop
or
lods
sub
add
jmp
cmc
data16
cmp
mov
xchg
ret
mov
movsl
fisubrl
pushf
jl
sahf
insb
push
add
out
lea
push
loope
das
stc
icebp
add
out
pop
test
cmp
ret
in
aas
mov
add
jge
int3
movsb
inc
pop
sti
xchg
icebp
jmp
mov
adc
pushf
ja
xor
jle
fisubl
enter
popa
sub
pop
test
xchg
mov
mov
add
and
push
jns
mov
inc
lcall
sub
mov
cmc
xchg
fsub
mov
and
mov
test
pop
xchg
outsl
pop
dec
sahf
lock
inc
sbb
pop
fnstcw
rorb
out
mov
sbb
hlt
iret
adc
ds
lahf
adc
ljmp
test
arpl
and
lods
es
fisubs
jg
sub
mov
inc
jae
pop
and
xchg
aas
add
push
add
jge
fs
jmp
out
dec
loop
xchg
stc
mov
mov
push
sub
jge
in
mov
outsb
mov
outsl
or
dec
cwtl
out
dec
inc
das
xlat
pushf
out
mov
sbb
cmp
push
adc
jge
cld
inc
push
sbb
ljmp
ds
fnstcw
adc
pop
mov
pushf
add
out
or
ret
cmp
sbb
add
ljmp
and
pop
jo
dec
add
insl
ja
aaa
sbb
inc
pop
jmp
mov
call
insb
xor
mov
adc
mov
and
iret
mov
pop
scas
and
cmp
decl
call
add
test
out
push
push
pop
mov
xchg
repz
mov
sarb
mov
cld
inc
mov
pop
xchg
xchg
dec
and
mov
sub
lahf
push
mov
outsb
js
jne
jnp
xor
jecxz
repz
hlt
shl
pop
jns
jmp
mov
mov
jae
daa
gs
xor
jb
lods
je
xchg
mov
jnp
ret
add
push
lret
pop
xor
dec
dec
or
push
or
jae
pop
sarl
lods
ret
je
lahf
jnp
fcomps
mov
cmp
lret
jbe
jg
xchg
mov
pop
add
xor
push
mov
add
push
sbb
inc
jns
xor
cltd
fs
xchg
addb
adc
ljmp
ja
mov
int3
adc
arpl
lods
mov
sbb
rcl
adc
add
aad
mov
mov
mov
xor
out
pop
fsubl
mov
and
add
pop
ss
jae
sbb
pop
xor
sub
fadd
add
or
inc
xor
lea
out
pop
bound
in
sti
xchg
arpl
push
and
jp
adc
cwtl
xor
pop
je
adc
int
sub
lods
mov
cmpsl
or
dec
push
dec
mov
xchg
cmp
wbinvd
cmp
rorl
in
or
xor
jne
out
popa
test
addb
fcmovnb
push
hlt
push
into
jns
popf
loopew
mov
imul
outsb
dec
fimuls
loope
jo
xor
adc
push
scas
insb
pop
out
dec
push
jp
xchg
inc
jecxz
lcall
iret
notl
pop
lds
xchg
test
loopne
lods
mov
xchg
shl
xchg
sti
mov
sbb
insl
add
daa
and
inc
pop
js
push
mov
pusha
in
mov
and
dec
sbb
popa
test
clc
rcrl
ret
or
inc
lahf
push
inc
clc
int
inc
cmp
lods
jnp
jns
iret
data16
xchg
sbb
cmp
inc
or
mov
xchg
and
adc
rclb
in
sub
and
jae
cltd
into
outsl
and
cmp
push
xchg
fiaddl
pushf
cmpsl
sbb
in
inc
enter
inc
mov
out
fprem
push
ja
imulb
icebp
jb
add
xor
xchg
cmp
mov
rcrl
shlb
xchg
aas
sub
cld
iret
push
int
adc
sub
adc
data16
icebp
and
dec
dec
and
and
addr16
sbb
pusha
mov
cwtl
repnz
add
adc
xchg
lcall
jmp
push
outsl
fcomps
cmp
mov
xor
int
out
xchg
call
rcl
xchg
or
loope
jns
fildl
lahf
dec
jg
fidivrl
cmp
test
daa
sbb
xlat
inc
icebp
adc
call
ficoms
rol
xchg
inc
fdivp
pop
out
je
fst
jp
loopne
sti
jecxz
cmc
mov
adc
mov
jg
icebp
sar
mov
push
daa
add
loop
fiadds
scas
jg
add
xchg
fwait
sub
jbe
mov
insb
or
jnp
inc
mov
movsl
outsl
dec
pop
jo
xchg
adc
sbb
xchg
mov
test
mov
fisttps
lret
pop
cmp
dec
cmc
stos
or
push
in
lock
sub
ljmp
loopne
dec
repz
fisttps
xchg
test
roll
cltd
jns
jp
lods
cmpb
jne
mov
mov
imul
pop
xor
stos
shl
lret
js
or
or
bnd
and
hlt
mov
cli
cmpsl
and
jge
jmp
cs
rcl
pop
popf
mov
lods
add
in
add
lock
jmp
xchg
cmpsb
es
mov
fs
out
push
test
repz
push
daa
test
pushl
in
inc
outsl
les
ret
xor
inc
fsubr
std
and
loop
bound
jmp
aaa
in
pop
aas
movsl
cmpsl
mov
sbb
pop
xchg
lcall
jl
xor
mov
fnsave
das
test
cmp
scas
daa
jo
xor
lret
fsubrl
call
daa
aaa
xor
fwait
es
mov
mov
xchg
and
sub
movsl
inc
nop
add
lea
inc
in
jo
push
aad
imul
mov
xor
jbe
push
fldt
and
push
in
mov
je
imul
mov
les
sub
mov
sbb
add
jo
lds
mov
mov
add
aad
pop
mov
mov
nop
dec
arpl
or
cmp
dec
in
pop
repnz
addr16
pop
sahf
xchg
inc
out
push
pushf
xor
cs
adc
and
inc
hlt
push
repz
or
xchg
xchg
leave
lahf
xchg
mov
aas
xlat
xchg
push
fstpt
inc
cmc
sbb
or
inc
andb
or
mov
addb
fisubrs
in
sub
les
inc
mov
xchg
mov
gs
jbe
mov
paddq
sbb
fs
mov
lret
jp
mov
out
pop
lret
pop
scas
mov
sub
sbb
push
test
pop
inc
push
mov
lods
jb
pop
mov
ds
pop
ret
sub
sbb
sbb
vpmacsdd
jp
daa
adc
pop
mov
icebp
push
jmp
push
pop
hlt
ss
sub
imul
nop
das
pushf
lods
ret
adc
inc
lock
jne
and
pop
push
adc
fdivrl
rcl
inc
outsb
iret
rcrb
cmpl
test
xor
and
das
jbe
into
cmpsl
das
in
sub
pop
push
sub
push
pop
xchg
imul
aad
leave
mov
cmpsl
xor
xchg
in
out
inc
jno
mov
hlt
pop
arpl
out
aas
cmpsb
rorl
mov
mov
sub
xchg
mov
clc
test
fimull
cmp
jbe
stc
andl
pop
shrl
std
jl
aam
imul
data16
pusha
xor
call
bound
cmc
mov
shrb
ljmp
test
adc
and
inc
push
notl
push
mov
mov
add
mov
cmpsb
test
add
adc
scas
test
xchg
lds
stc
aas
mov
std
adc
mov
and
int
into
sub
ficoms
movsl
je
cs
mov
in
add
xlat
in
int3
rorl
mov
pop
or
das
xchg
cwtl
cs
push
cmc
shll
cmp
pop
xchg
xor
ss
sbb
ss
stos
mov
ja
loop
mov
fstl
data16
test
hlt
mov
test
mov
mov
scas
inc
inc
lret
mov
js
movsb
std
add
and
test
xchg
sub
repz
lcall
mov
push
stc
shlb
push
xchg
stos
gs
jns
aas
pop
out
outsl
dec
push
imul
and
inc
dec
in
std
call
sti
scas
ljmp
push
xor
jne
adc
and
scas
pop
mov
sub
cwtl
aad
mov
adc
ret
push
bound
sbb
push
mov
dec
add
fdivrs
pop
test
dec
mov
notb
shll
ja
outsb
push
ret
push
mov
adc
loop
lea
stos
push
in
orb
iret
mov
mov
jb
popf
ds
clc
mov
mov
push
lahf
enter
cmp
pop
inc
mov
xchg
pop
dec
push
jmp
inc
pop
lds
cmp
mov
sub
mov
xor
xor
xchg
jle
jmp
cli
test
addb
pop
movsb
fwait
jmp
arpl
push
xchg
pop
cmp
dec
inc
adc
icebp
adc
or
movsl
pop
js
rep
fiaddl
ss
je
pop
adc
push
mov
ljmp
mov
sub
rclb
xor
int3
ret
mov
lock
lods
outsl
imul
fdivl
or
ljmp
pop
outsb
pop
cli
cmp
sub
adc
in
inc
mov
rcrb
movb
imul
dec
mov
mov
insl
push
mov
out
pop
nop
mov
adc
inc
push
inc
dec
jl
jge
cld
and
data16
pushf
mov
add
sahf
sbb
xor
inc
insb
inc
cmpsb
or
sub
mov
cli
scas
aas
test
pop
out
xchg
test
cmp
xor
jg
cmp
add
jb
xchg
orb
aas
jb
cmp
sarl
das
sbb
aad
outsb
jne
je
pop
sub
outsl
xor
jg
sbb
fcmovb
adc
pop
cwtl
push
push
jg
add
lods
xlat
lods
cs
iret
jg
mov
mov
clc
mov
ror
inc
xchg
dec
shrl
pop
dec
mov
cmp
or
jle
sahf
add
pop
hlt
mulb
xchg
jae
or
out
lods
mov
dec
cmpsb
sti
lock
dec
sti
cmp
add
xor
adc
into
out
sbb
shrb
loope
mov
leave
ds
add
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
inc
cmp
jnp
pushf
jnp
pop
add
sub
fisttpll
sarl
jg
jo
in
xchg
mov
fsts
mov
jle
pop
movsl
or
and
ffree
mov
mov
adc
ret
das
and
sbb
and
mov
sub
sti
add
cmp
arpl
cmp
pop
inc
cmpsl
jno
aad
xchg
inc
hlt
rcll
lret
por
dec
call
icebp
sbb
and
push
mov
mov
into
cmp
es
shll
and
test
cmc
repz
xor
in
dec
dec
sub
imul
test
pop
jnp
and
mov
incl
push
mov
pop
hlt
popl
and
cmc
or
add
jmp
sub
pop
xchg
add
pop
lahf
sub
or
pop
pop
or
or
push
frstor
xchg
xchg
push
mov
lcall
xlat
cmp
ss
cmp
sub
inc
sub
mov
outsl
mov
xchg
out
insb
xor
jbe
stos
and
jb
pop
loopne
jle
pop
pop
jl
inc
in
dec
push
dec
in
jb
jle
xor
in
pop
xchg
dec
test
fldenv
push
mov
xchg
sbb
xorb
and
and
lahf
xchg
inc
mov
xor
insb
mov
sub
pop
inc
inc
stos
outsl
stc
push
ret
jo
scas
adc
lcall
dec
push
loope
test
dec
jnp
and
repz
mov
fwait
jmp
add
jecxz
mov
ja
push
mov
std
fsubrl
out
add
outsb
push
sbb
jbe
cmpsl
push
adc
fidivs
jg
mov
lods
pop
js
fcompl
in
ljmp
lods
jle
adc
dec
shrl
scas
fs
adcl
cmp
rol
nop
addl
movsb
pop
daa
mov
les
xor
js
mov
imul
cmp
xchg
sbb
sbbl
pushf
xor
pop
call
andb
fnstcw
jle
cmp
cmp
xor
pop
dec
cmp
lods
xor
in
xchg
add
pop
and
insb
sub
jg
xor
pop
sub
mov
test
cwtl
inc
test
test
popa
xor
inc
jge
inc
jb
cmp
shl
or
gs
subb
dec
sbb
and
mov
cmpsl
mov
imul
and
out
cmp
pop
xchg
je
mov
sbb
hlt
lock
hlt
dec
mov
mov
test
sub
ds
adc
cmc
jge
repnz
popa
into
cmp
jmp
pop
xorl
insb
sub
xor
fcompl
daa
inc
out
aaa
les
clc
in
js
clc
std
cmp
test
pushf
cmp
imul
cmp
out
ficomps
into
push
push
xchg
fnsave
shl
rclb
mov
adc
mov
shll
sbbl
lret
mov
mov
push
test
fldt
add
ror
lods
dec
mov
fimuls
xor
xor
and
jmp
dec
leave
jne
mov
and
xchg
test
out
push
enter
dec
idivb
sub
mov
std
dec
mov
daa
in
les
cwtl
fisubl
pop
clc
addl
out
fisttpll
jp
les
jnp
fidivl
mov
das
data16
mov
lahf
push
lcall
sarl
nop
lcall
test
pop
sbb
sbb
sbb
stos
cmp
rorb
sti
fsubrl
mov
pusha
jg
pop
insl
add
inc
xchg
or
in
mov
xchg
add
push
jmp
andb
scas
xchg
sub
mov
call
mov
push
push
lcall
js
into
cmc
daa
sbb
pushf
fisttps
fnstcw
xor
sahf
daa
add
lods
cld
lods
push
inc
or
imul
or
gs
add
xchg
jne
addr16
ret
push
lret
inc
fstpl
popf
adc
fimull
movsl
mov
nop
rclb
push
int
loop
sahf
inc
push
std
pop
jns
in
enter
push
jne
into
fistl
inc
das
test
insb
lea
mov
sti
mov
pop
cmp
aas
or
inc
pop
out
mov
fcompl
inc
nop
dec
sub
xchg
repz
xor
lods
xor
mov
mov
test
pop
nop
push
add
aad
mov
push
mov
movsb
sbb
jle
test
loope
ja
cli
popa
inc
jle
jo
mov
pop
ja
xor
fs
cmp
fdivrs
xor
cwtl
lods
imul
dec
cld
push
mov
fisubl
jmp
aaa
sbb
xlat
in
leave
xlat
or
pushf
aad
ficoml
xchg
orl
sbbl
inc
inc
pop
fistpl
xlat
fs
cmpsl
pop
add
aam
inc
insl
sbbl
ja
cmp
pop
jne
aas
jp
subb
fisttpll
orb
mov
cli
mov
mov
jo
divl
mov
cmp
test
scas
sub
out
sub
addps
movsl
daa
pop
mov
push
icebp
shr
call
iret
pop
insl
int
pop
or
ljmp
mov
jmp
lods
adc
out
ja
sbb
mov
push
mov
add
aam
test
stos
lea
imul
pop
rolb
inc
mov
stos
pop
test
aaa
pusha
jo
pushf
mov
pop
aas
jmp
movsl
pop
and
loope
cmp
xor
push
outsl
rcr
fmuls
test
jge
mov
sbb
jno
lock
popa
int3
clc
or
cmp
movsl
push
js
pusha
or
adc
xor
imull
jb
adc
jae
xor
lods
outsl
fisttpl
mov
push
cmc
jb
int
dec
jb
jmp
xchg
mov
iret
je
rol
mov
jmp
pushf
push
sti
mov
in
adc
xchg
push
pusha
xchg
popf
sbb
jnp
xchg
mov
mov
push
jnp
jecxz
sbb
pop
fldcw
fdivl
jecxz
sahf
pop
and
pop
jge
fisttpl
daa
sub
pop
sbb
divb
inc
push
and
pushf
data16
jg
sbb
ljmp
xchg
sbb
bound
push
fsubp
mov
sub
sub
xor
adc
in
inc
sbb
mov
sub
fwait
outsb
jbe
clc
pop
shlb
jb
mov
sub
jb
ss
push
scas
pop
inc
insb
sub
add
jmp
inc
cltd
stc
sub
jae
in
lahf
ds
mov
adc
lea
and
push
rclb
inc
mov
rorl
inc
ret
sbb
shll
xchg
add
mov
pushw
cmp
andb
push
sub
movsb
cmp
jp
xchg
xchg
inc
xchg
inc
ficoms
pop
mov
pusha
push
outsw
out
cmp
aas
out
mov
out
xor
cmpsb
rolb
scas
fs
fmuls
mov
mov
icebp
inc
aaa
cltd
test
std
jp
pop
daa
and
sti
mov
or
and
push
xor
mov
xor
and
imul
js
mov
data16
mov
out
test
lods
in
insb
mov
jmp
mov
test
mov
push
rcrl
jp
mov
xchg
sbb
cli
or
jbe
cmpsb
mov
push
sahf
pop
sbb
outsl
call
or
jmp
add
imul
sub
out
insb
shll
mov
or
dec
ret
loope
mov
fxch
cwtl
leave
mov
cmp
lds
jp
lret
xchg
adc
xchg
pop
lods
inc
pop
adc
or
push
or
cld
push
dec
or
mov
lds
xor
cmpsl
lret
push
or
imul
lds
xor
mov
cmp
ret
insl
xor
divb
mov
add
test
data16
pcmpeqb
fmull
inc
cmp
mov
cmc
rclb
stos
cmc
iret
std
mov
ret
stc
adc
mov
fwait
or
pop
call
cmc
add
test
xor
fwait
repz
mov
xorb
inc
mov
out
outsl
fs
push
dec
in
pop
stos
rcll
sub
and
adc
mov
daa
sub
scas
and
mov
testb
into
cltd
xchg
test
rcl
fwait
jmp
gs
orb
jb
add
fsubs
inc
stos
cmc
loopne
jle
sbb
ljmp
and
testl
push
pop
arpl
mov
or
ds
jbe
sbb
adc
push
push
dec
sub
or
pushf
jns
popa
inc
inc
fists
cltd
stc
xchg
push
sub
aam
imul
loopw
and
test
loopne
and
mov
lahf
cld
mov
cmovb
cmpsl
in
sbb
pop
enter
xor
pop
ficoml
xchg
add
stos
sbb
xchg
mov
stos
loop
pop
jp
in
jo
sub
cmp
mov
les
xor
cmc
dec
mov
out
xor
es
cmp
cli
mov
test
xadd
data16
adc
ljmp
push
ret
adc
mov
or
mov
inc
mov
jae
add
and
pop
pusha
ja
lahf
inc
mov
jp
loopne
in
or
xchg
outsl
clc
mov
mov
repnz
pop
add
clc
ficoms
es
fisubrl
dec
push
fdivr
cmc
decl
int3
xchg
cmc
xchg
xchg
inc
subl
cmovbe
mov
testl
jp
insb
out
mov
ret
cmp
inc
dec
pop
pop
jg
faddl
fsubs
data16
push
or
setne
adc
aaa
jb
jnp
fildll
and
xchg
les
push
mov
xlat
pusha
enter
popa
mov
jb
cltd
jmp
push
fs
and
scas
dec
aas
movsl
cwtl
pushf
lock
popa
stos
mov
lods
sbb
insl
push
lahf
imul
fldcw
xchg
lea
inc
cmp
xchg
mov
mov
fst
pushf
scas
mov
mov
add
pop
push
imul
rcrl
fwait
mov
push
xor
xlat
cmp
mov
cmp
rcrb
mov
cli
lock
adc
sbb
cmp
sub
dec
and
push
jb
popl
xchg
jg
dec
xchg
lahf
mov
mov
cmc
clc
lahf
fcoml
cltd
pop
cmc
insb
mov
xor
cltd
aam
dec
or
lds
push
fs
je
sub
or
push
pop
enter
sub
es
movb
or
mov
popf
sti
movsb
fwait
sub
pusha
xchg
push
push
adc
xchg
mov
push
dec
and
dec
pusha
movl
pop
push
repnz
test
fwait
les
aad
xchg
cmp
cli
mov
ret
sub
or
and
xor
add
xor
int
stos
cmpsl
mov
xchg
stc
sbb
fists
arpl
loope
mov
jb
pop
out
scas
pop
and
jnp
push
pop
movsb
cmpsl
je
addl
repz
sbb
roll
pop
mov
push
xorb
sbb
cltd
gs
jne
scas
loopne
pop
stc
jp
xchg
das
inc
cmpsl
adc
out
xorl
sahf
add
int3
and
movsl
je,pn
popa
push
imul
jmp
fsts
sbb
jmp
push
and
push
pop
fs
cmp
xchg
subl
add
insb
or
jb
sbb
in
or
inc
pop
adc
mov
mov
push
mov
cmpsb
addr16
push
xchg
pop
mov
pop
inc
fisttps
cwtl
jle
sbb
sub
mov
push
jmp
mov
idivl
pop
js
pop
in
nop
movsb
and
sbb
mov
aam
xor
dec
xchg
cmc
shll
je
xchg
out
movsb
test
xchg
push
out
push
sub
inc
cmp
fsubrl
and
addl
adcl
adc
dec
bound
push
test
std
scas
aad
icebp
jge
sahf
pop
mov
test
adc
push
xchg
rcrl
scas
pushf
lea
lahf
mov
repz
jnp
mov
adc
shrb
fs
or
or
push
inc
out
inc
dec
outsl
sub
cmp
push
repnz
or
out
or
push
adc
scas
sub
cmp
adc
cs
std
outsb
popl
fsubs
stc
ljmp
fisttpl
test
sbb
ds
xchg
mul
sti
xchg
lcall
mov
in
pop
adc
leave
pushf
mov
sub
mov
leave
ja
lds
or
int
push
pusha
aas
cmp
cld
pop
subb
xor
xchg
pushf
fcmovu
dec
insl
adc
cmp
adc
rcll
xor
xchg
lods
lea
cmpsb
sub
ja
sbb
pusha
cld
imul
ja
rorl
dec
mov
aas
mov
dec
movsb
push
loopne
inc
cmovae
jnp
mov
cmpsl
xor
stos
popa
out
push
js
movsbl
mov
popf
mov
lods
out
cmp
stc
sub
js
je
jb
enter
push
push
and
cmp
pop
mov
inc
inc
fstpl
pop
repz
int
es
lods
or
push
fwait
add
cmpsb
stos
ss
inc
inc
icebp
pop
add
or
jg
stos
sbb
dec
jg
insl
ljmp
xchg
jge
aas
sti
pop
inc
push
sar
xchg
dec
xchg
sub
sbb
jp
addb
pop
scas
or
inc
mov
pusha
sbb
call
cmpsl
sbb
cs
repz
cmp
mov
lcall
pop
in
fs
inc
cmc
aam
pop
mov
push
mov
or
test
jge
push
mov
or
in
gs
test
scas
fstp
paddw
out
dec
psubq
inc
jns
repnz
ficoms
clc
inc
lock
dec
lods
mov
pop
sub
test
pop
and
sub
cmp
mov
sbb
pusha
dec
pop
mov
pop
adc
lods
mov
push
add
fdivrs
cltd
loopne
scas
push
push
push
mov
lcall
xchg
lods
add
push
out
into
xlat
push
adc
rcrl
adc
add
jmp
or
iret
int
xchg
inc
fdecstp
jg
add
je
push
adc
clc
dec
imul
lea
fistl
fisubrl
jbe
loopne
gs
inc
jb
jge
call
repnz
loopne
jno
ffree
push
lret
scas
loope
ss
cli
and
xor
cld
in
ds
sbb
inc
add
pushf
sbb
xchg
fcom
enter
cmpsb
add
gs
sahf
ds
test
iret
mov
pop
xchg
and
dec
push
lds
aam
cmp
out
out
incl
rclb
aad
or
ja
sub
adc
shll
dec
nop
lock
enter
lods
pop
dec
out
bound
adc
pop
loope
sub
loop
cld
movsb
mov
sub
mov
fsts
cs
push
shll
and
out
cmc
je
dec
call
out
and
mov
mov
xchg
ds
and
fsubs
sti
mov
imulb
test
mov
out
insb
xchg
test
lods
rcrl
pushf
and
loopne
and
sbb
das
mov
pop
int3
les
and
in
mov
rclb
je
jne
xchg
cmp
push
andb
fstpt
hlt
push
out
mov
xor
push
scas
in
mov
cs
or
cwtl
dec
sbb
push
aad
mov
lahf
shll
xchg
jg
popf
push
es
pop
into
pop
push
dec
pop
enter
dec
xor
jg
ds
mov
mov
sub
adc
lcall
js
pop
mov
xlat
dec
mov
push
sti
dec
test
repz
mov
mov
pusha
sbb
pop
jle
sub
ficompl
scas
xchg
cld
loopne
sbb
push
and
repnz
ret
in
loop
ficomps
jp
pop
test
add
scas
daa
sahf
cmpsl
roll
xor
adc
mov
mov
rcl
push
loope
or
jp
dec
cmp
and
add
pop
cli
movsb
aad
jo
cmp
cld
les
or
call
jb
test
and
xchg
mov
push
leave
push
push
or
orb
jecxz
popa
mov
ljmp
xchg
mov
rcll
or
push
dec
mov
jo
push
outsl
out
sbb
push
xchg
imul
in
fmuls
lods
jbe
xor
fdivs
pushf
inc
popf
or
jg
jl
lret
out
xor
mov
test
xor
pop
stos
inc
mov
dec
push
inc
push
cmc
ljmp
cld
fnsave
movsb
xor
arpl
movsb
insl
inc
pop
sbb
pushf
iret
cmp
adc
adc
or
add
movsb
xchg
adc
shrl
jb
lods
loop
stos
xlat
ret
jo
mov
cli
push
pop
aaa
cmp
sbb
imul
jl
cmp
stc
cmp
jl
mov
mov
jns
les
fdivl
pop
mov
mov
aaa
outsb
daa
movntq
out
fnstcw
mov
mov
jmp
lds
mov
push
cmp
addr16
xchg
lcall
mov
out
rclb
pop
repnz
sub
mov
nop
pop
xchg
iret
xchg
xor
xor
mov
lock
fimull
stos
mov
repz
and
jnp
dec
hlt
sub
jo
ds
lret
jecxz
mov
jle
push
stc
mov
std
xor
mov
test
lcall
xor
lock
xchg
push
mov
push
in
mov
dec
sub
nop
inc
mov
sub
cmp
imul
push
js
lock
jae
fisubrs
cmpsb
enter
mov
test
pop
shlb
xchg
xchg
or
fcoml
and
or
out
and
pop
loopne
faddp
xchg
adc
cmpsb
sbb
sti
decl
pushf
sbb
push
push
or
hlt
cmp
fbstp
scas
sti
pop
jle
push
pop
lds
add
cmp
outsl
fdivrl
in
sbb
fcoms
cmp
arpl
fistps
mov
adc
push
ljmp
push
sbb
stos
dec
sti
pop
cld
push
test
or
pop
or
out
adc
xor
inc
and
pop
arpl
inc
xchg
pop
xchg
mov
in
repnz
mov
or
sbb
out
mov
cmp
xchg
imul
into
add
and
add
mov
adc
test
adc
inc
jg
xor
xchg
data16
sub
xchg
jp,pn
push
pushf
loop
pop
movsl
push
cmp
or
add
or
and
aas
push
testb
daa
cmp
movsl
stc
jne
add
cmp
cs
adc
and
pop
das
bound
stos
jmp
adc
lea
add
pop
jmp
popf
jb
xchg
or
sub
popa
inc
and
outsb
test
imul
shrb
cmp
pop
mov
add
mov
sub
jo
in
fs
gs
stos
popa
xchg
cmp
dec
imul
push
jmp
mov
mov
xchg
mov
sub
xor
or
cltd
dec
xchg
cmp
int
sub
lods
aam
popf
in
inc
and
stos
out
mov
mov
sub
and
inc
enter
lods
sbb
cmp
in
mov
test
xor
or
pushf
hlt
adc
jp
xchg
and
mov
movsl
xor
add
mov
adc
subb
adc
push
mov
aaa
fidivs
pop
mov
scas
xchg
ljmp
loopne
out
cwtl
enter
or
inc
mov
mov
lret
mov
xor
push
xor
sub
jno
push
stc
push
dec
pop
add
andl
inc
mov
mov
lds
cmpsb
cltd
push
insl
inc
notl
sbb
andb
inc
inc
mov
repnz
jbe
stos
je
js
mov
cmp
rcr
sbb
nop
jle
mov
lahf
iret
push
and
xor
mov
lahf
jmp
mov
inc
cmp
add
pop
out
ficoml
loopne
jb
cmc
jo
jae
sahf
in
xor
push
aas
dec
out
int3
fistpll
push
or
xchg
jno
adc
xor
popa
inc
jne
push
add
mov
xor
ret
cmp
push
xchg
mov
faddp
outsb
aas
mov
xor
clc
lock
pop
dec
mov
sbb
sbbl
aaa
stc
adc
mov
pop
shll
iret
hlt
std
xchg
mov
flds
or
loopne
fwait
je
mov
lock
shrl
daa
jno
adc
sub
subl
sub
loop
mov
mov
push
imul
xorb
fs
cltd
les
shlb
pop
inc
int
dec
je
stc
sub
dec
out
fcomi
loopne
or
lock
nop
mov
pop
jmp
imul
in
add
adc
call
rolb
cwtl
jae
mov
lret
ds
into
andb
outsl
pop
cmpsb
lea
aas
dec
inc
cltd
dec
push
outsl
ret
sub
jle
int3
or
fwait
and
inc
ja
daa
pop
jnp
popa
push
jb
inc
test
fadd
pop
ljmp
sarl
enter
and
xchg
mov
out
jle
dec
movb
enter
push
mov
add
cmp
rcr
xor
ret
xchg
sub
or
lahf
jb
sub
fs
mov
aad
arpl
sub
inc
add
xchg
nop
stc
and
inc
data16
ja
or
mov
pop
out
ja
ljmp
or
imul
scas
xor
es
adc
sub
or
stos
push
imul
cmc
inc
mov
dec
cmpsl
sar
adc
fsubl
inc
pushf
icebp
cmp
dec
ljmp
push
dec
pop
mov
pop
rcrl
cli
push
ja
jg
jmp
icebp
lcall
dec
cmp
push
stos
lods
jnp
in
fadd
adc
ret
aam
js
and
push
je
xchg
mov
sbb
pop
cmc
mov
jge
inc
pop
bound
movsb
inc
push
jnp
pop
adc
sbb
fstl
inc
and
jmp
lcall
inc
fisubl
test
cmovp
dec
push
pop
repz
push
es
pop
cltd
lret
lret
imul
loop
or
icebp
faddl
push
es
fs
jae
aam
add
imul
cmpsb
mov
imull
fldl2t
push
lret
cmpsl
push
cwtl
int
in
mov
jmp
add
jns
jecxz
push
lock
mov
dec
and
lret
mov
in
sbb
popl
idivl
fwait
xchg
rcrb
out
movsl
orl
mov
inc
out
push
pop
shlb
sbb
cmp
enter
aad
mov
xor
or
pop
aaa
xchg
sti
mov
ss
add
jl
int
pop
cwtl
faddl
mov
jg
stos
adc
push
push
mov
jecxz
fstpl
jmp
sti
adc
mov
out
push
sbb
loopne
sbb
ja
inc
fidivl
cmovle
jge
outsb
adc
pop
and
test
shlb
out
repnz
xchg
ret
mov
or
dec
imul
shll
or
push
andl
int
xor
pop
jne
jbe
xchg
add
jae
mov
es
mov
cmp
in
fmulp
out
mov
mov
scas
mov
xchg
fstps
pusha
les
ss
pop
add
jo
dec
cwtl
dec
out
rorl
cld
xor
sub
cli
push
js
fnsetpm(287
sbb
jns
add
lods
repz
sub
sub
leave
and
mov
push
pop
jge
ss
cld
dec
lret
adc
stc
scas
into
inc
out
mov
add
pusha
cmc
fiadds
aaa
repnz
and
xchg
cmp
mov
mov
cld
lods
add
lcall
mov
adc
out
fsubs
lds
lea
push
push
mov
std
dec
jne
jns
js
ret
mov
aaa
pop
test
mov
sti
fidivrs
cmp
pop
ja
call
movsl
sbb
xchg
in
mov
jmp
adc
inc
push
lret
jo
push
addr16
out
into
push
imul
lock
gs
inc
dec
movsl
lcall
jbe
loope
mov
stos
push
push
test
repnz
adc
sar
scas
jne
mov
xchg
push
xchg
ret
out
xor
sbb
mov
jecxz
movq
add
xchg
pop
sub
sub
or
and
movsl
cmp
dec
inc
cmpsb
lahf
xor
lret
or
cs
es
dec
dec
dec
inc
inc
repnz
dec
out
ror
negl
rcll
jmp
mov
push
jp
aad
pop
xor
xchg
cmp
movsb
in
adc
cmpsb
inc
ret
fs
inc
xchg
xchg
xchg
test
jne
nop
test
and
insb
idivb
sahf
pop
mov
loop
stc
or
dec
pop
dec
xchg
lock
cltd
sub
jmp
jecxz
inc
fadd
dec
fidivrs
js
loop
mov
mov
pusha
or
outsb
arpl
lea
out
addr16
mov
outsb
jb
sbb
mov
pop
addr16
and
sahf
push
cmp
fcomps
fs
ja
pushf
push
mov
inc
push
clc
je
push
js
jo
xorb
cwtl
sbb
cmpsb
cmp
iret
adcl
test
fiaddl
push
xlat
and
add
mov
cwtl
fcomps
pop
adc
and
adc
cmc
fwait
test
add
fsubr
ds
repnz
nop
pop
add
fs
iret
popa
sbb
es
mov
pushf
stos
out
insb
xchg
int
mov
pushf
pop
clc
lcall
dec
cli
lcall
sub
movsb
xor
negb
and
bnd
mov
cmpsl
mov
or
stos
int3
cld
and
ss
xor
mov
xchg
mov
shlb
adc
mov
inc
and
mov
add
jp
gs
andl
cmpsl
ja
adc
es
jp
cs
sbb
ljmp
dec
jns
imul
lahf
mov
xchg
cmpsl
or
mov
aam
mov
push
insl
cmpsb
int3
les
jmp
add
icebp
cmpl
sbb
push
movsb
sub
xchg
push
sub
mov
cmp
int
fcmovnu
cmp
cmpsb
mov
jge
hlt
pop
in
movsl
pop
cmc
mov
movlps
jne
outsl
mov
rep
mov
mov
insb
cmp
xor
sbbl
ss
mov
or
aam
gs
aam
test
addr16
out
or
shll
sti
sbb
dec
or
popf
dec
loop
jge
jns
push
mov
std
cmp
push
dec
lds
shlb
gs
mov
imul
add
pop
rcl
aas
test
inc
inc
arpl
int
dec
mov
call
or
mov
and
dec
fmuls
mov
ss
cmpsl
in
ljmp
in
push
jnp
or
enter
orb
pop
insl
call
xchg
pop
adc
pushf
sbb
fwait
stos
aam
adcb
xor
ds
in
push
pop
rclb
lahf
dec
push
push
fdivrs
les
fists
stos
pop
jo
mov
add
hlt
aam
jb
dec
notb
mov
int
lea
push
inc
adc
push
decl
inc
xchg
into
xchg
xor
and
and
jmp
imul
out
test
mov
adc
test
push
hlt
mov
ret
int
clc
ret
int
xor
mov
addr16
ss
pop
fstps
cltd
clc
or
inc
adc
outsl
mov
and
das
adc
shrl
jmp
adcl
cli
js
cmc
sahf
inc
ret
fisubrs
xor
cwtl
sahf
rep
cmc
out
cwtl
sahf
sub
xchg
sub
ffreep
jg
roll
test
sbb
ljmp
cmpsl
cltd
xchg
jae
shrl
push
aam
mov
and
sub
xor
cmp
cmp
ds
push
cmp
loope
add
sti
add
mov
pop
fisttps
fs
jl
imul
push
jne
pusha
add
bound
lret
into
dec
mov
sub
inc
sbbl
pop
push
pop
or
popa
mov
xor
pop
aas
pop
jl
dec
pop
lahf
adc
pop
mov
mov
fs
rcll
imul
data16
faddl
addr16
mov
in
stc
aaa
dec
add
int
jg
sahf
out
std
xchg
mov
or
cs
xchg
inc
lods
cmpsb
stos
mov
jle
cmc
clc
dec
ja
push
lods
ds
call
shll
xor
mov
ja
stos
cs
push
dec
xor
pop
sub
in
imul
mov
rcll
popa
push
pop
push
cmp
aam
xchg
dec
popa
cmp
sub
inc
inc
xchg
mov
xchg
sub
push
repnz
in
lret
add
and
pop
gs
fwait
call
jnp
and
adc
popa
mov
scas
mov
sub
gs
push
lret
mov
sub
jle
sti
add
bound
sarl
xorb
jo
push
sub
add
pop
roll
loopne
jge
push
jmp
ds
mov
sahf
xor
inc
mov
cwtl
icebp
cmpsl
fs
sbb
cmp
ljmp
rcr
sub
cli
popa
xchg
inc
add
and
inc
lret
and
aaa
push
cmp
shlb
mov
daa
gs
dec
xchg
push
mov
add
add
scas
lea
mov
idivl
xchg
ds
pop
xchg
mov
xlat
movsb
lock
and
test
stos
dec
adc
mov
insl
int3
jne
cmp
pop
mov
movsl
addb
lods
or
or
imul
cltd
add
fdivs
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
or
push
jbe
stos
daa
dec
jmp
cmp
lret
dec
mov
aas
jb
xchg
mov
dec
adc
iret
filds
xchg
push
fdiv
or
pop
xor
sbb
push
ret
inc
hlt
out
adc
cmp
aas
jo
fiaddl
loope
enter
push
repz
xchg
ret
xor
lods
fwait
rolb
scas
inc
add
fisttpl
and
add
jg
adc
push
test
fldl
in
or
mov
popf
and
dec
pop
outsb
sub
jb
inc
and
jnp
nop
push
sbb
adc
jnp
int
add
adc
enter
addr16
jle
mov
gs
daa
mov
cld
jl
mov
mov
repnz
std
imul
push
lods
pop
adc
fildl
stos
or
pop
daa
add
push
add
push
out
jp
xchg
aas
gs
mov
mov
out
lods
or
test
ja
mov
jecxz
aam
popa
cwtl
pop
inc
xor
cmp
dec
ss
add
inc
popa
xchg
mov
or
jns
xchg
cmp
sti
jns
push
stc
subb
andb
outsb
push
imul
xchg
pop
adc
mov
mov
rcrb
dec
daa
xchg
xchg
ss
dec
sub
adc
insb
mov
shl
dec
outsb
leave
outsl
mov
xchg
jns
xchg
jo
sbb
insl
stos
cmp
xchg
mov
or
data16
mov
mov
ss
test
es
dec
dec
add
inc
and
ljmp
jge
loope
aad
jae
jl
push
clc
xchg
mov
xchg
ja
jmp
mov
stos
add
xchg
or
inc
sub
lcall
mov
or
sub
sub
lret
inc
push
stc
adc
adc
insl
mov
nop
lds
and
js
movhps
fwait
sbb
push
shlb
out
icebp
xchg
jne
push
mov
push
mov
sbb
push
adc
pop
daa
mov
or
rcll
aaa
mov
shrl
in
inc
aad
je
push
push
cld
shll
out
mov
jno
loope
xchg
outsl
adc
pop
sub
into
loope
mov
rcrb
dec
add
or
das
paddusb
sbb
ss
add
inc
imul
jg
ja
and
xchg
std
or
rolb
sbb
sbb
ja
mov
mov
int3
std
push
sub
xor
mov
sahf
int3
mov
imul
mov
in
sub
js
pop
jmp
jo
repz
ljmp
adc
pop
cmp
cmp
in
jecxz
jnp
roll
lahf
fwait
pushf
outsl
mov
and
sbb
ret
lods
adc
mov
sbb
lods
dec
inc
insl
loope
or
pop
jae
mov
and
faddl
mov
mov
xchg
adc
mov
pcmpeqw
mov
push
sbb
movsl
mov
inc
adc
lea
cmp
push
sbb
pusha
and
les
sbb
cltd
and
ljmp
lock
enter
popa
jo
mov
fsts
inc
pop
lahf
dec
xchg
dec
pop
icebp
insb
fdivs
ret
inc
adc
push
ror
insb
hlt
adc
or
shl
scas
movsl
dec
inc
sub
aad
add
ja
adcb
scas
push
mov
xchg
xchg
loop
lock
xor
movsl
mov
and
bound
test
dec
sub
push
es
shrl
mov
std
inc
add
push
shll
imul
mov
sbb
sub
or
stc
iret
push
xor
xlat
pop
or
insb
seta
mov
sti
ss
fiaddl
imul
pop
lea
lods
arpl
mov
add
js
adc
cs
aas
iret
ljmp
jle
add
je
fs
cmpsb
fs
mov
adc
mov
and
add
or
xchg
aaa
pop
fstpl
and
jmp
xchg
jmp
cmp
dec
sti
ja
fdivrl
and
mov
sahf
mov
les
loope
addr16
ss
adc
mov
fwait
movsl
rol
push
lret
adc
pop
mov
mov
sbb
notl
pop
sub
lods
and
pop
inc
stos
push
mov
mov
lahf
nop
pop
mov
popf
mov
in
je
cmp
xchg
or
inc
dec
repnz
jmp
mov
insb
push
cwtl
push
repnz
jcxz
fst
inc
jmp
popf
dec
push
test
stos
mov
out
adc
cltd
adc
or
add
stc
jae
scas
jae
dec
add
gs
push
divl
stc
aaa
in
int
into
push
outsl
hlt
ljmp
push
orb
jp
lahf
shr
ljmp
or
loopne
inc
adc
mov
jle
icebp
jne
and
and
jb
mov
cmc
sahf
or
ljmp
in
in
dec
mov
mov
hlt
sbb
and
mov
int3
fadd
in
imul
lods
movl
jae
lahf
mov
cmpsl
out
sub
dec
jo
xor
mov
test
sar
outsb
dec
adc
xchg
cld
cmp
mov
nop
stos
xchg
jbe
in
xlat
cld
sbb
and
mov
xlat
mov
ds
xchg
jp
adcb
fldcw
bound
insl
sbb
mov
ds
cwtl
cmp
push
loopne
push
fstps
das
jg
enter
pop
out
dec
jb
je
jb
dec
pop
in
int3
jmp
and
into
mov
call
in
sti
fistl
jo
pushf
bound
lahf
inc
lea
in
or
sbb
imul
jae
loope
arpl
sar
clc
jmp
fisttpll
mov
lret
iret
popa
mov
lea
add
sahf
shrb
in
sbb
addr16
cmp
xchg
jmp
jl
cs
arpl
pop
incl
mov
cmp
add
clc
push
test
sbb
ss
lods
frstor
cmp
addr16
mov
call
mov
lcall
out
add
imul
ret
push
inc
mov
mov
insl
test
mov
sahf
outsb
negb
xor
xlat
pop
adc
dec
fisubrs
xchg
ljmp
aad
pop
popa
lds
mov
pop
jo
cmp
push
mov
repz
insl
sub
icebp
repz
jmp
add
dec
lock
lds
daa
pop
mov
imul
inc
adc
xchg
fistps
mov
pushf
lock
repz
enter
ret
push
scas
in
leave
orb
clc
dec
iret
jbe
pop
inc
dec
and
outsb
jnp
cmpsl
and
jmp
ljmp
pop
adc
es
cs
clc
sbb
mov
inc
or
mov
pop
jnp
xchg
mov
sbb
shld
xor
cmp
xchg
pop
out
enter
fwait
jmp
pop
mov
out
xchg
lods
ret
add
xlat
jae
mov
sub
xchg
push
stc
in
push
or
push
and
pop
xchg
out
jl
mov
nop
mov
or
test
mov
mov
out
cmpsb
jne
mov
pop
cmp
gs
mov
and
pop
sar
int3
add
sbbb
sbb
inc
mov
roll
scas
sbb
dec
xchg
xor
ret
bts
rcr
xor
rol
shrb
push
push
lret
out
gs
adc
clc
les
movsl
push
or
das
ficoml
cmpsb
test
bound
daa
sub
lcall
sub
outsl
sub
cmpsl
imul
or
push
outsb
divb
imul
jmp
mov
jb
pop
jmp
insb
aas
jnp
fwait
inc
sbb
mov
lahf
adc
jo
call
outsl
ja
in
adc
nop
lret
add
sbb
push
cmp
loope
jmp
jo
ret
jbe
push
sbb
and
mov
rol
mov
cmp
pop
clc
stc
inc
mov
loopne
pop
in
cmp
sbb
dec
out
mov
cmp
sbb
xchg
xchg
pop
jne
mov
adc
aaa
dec
imul
adc
jl
or
jge
shlb
cltd
mov
subl
pop
into
cltd
fwait
sbb
push
fisubrl
dec
sub
xchg
cmp
pop
mov
rclb
xor
cmp
loope
rol
pop
mov
fisttpl
popa
insl
shr
mov
dec
nop
jmp
fwait
adc
inc
out
jecxz
stc
inc
arpl
mov
enter
add
mov
adc
lret
add
clc
cmp
push
sbb
lods
sub
inc
pop
fmul
out
xlat
out
out
and
jae
jl
shl
jg
hlt
mov
loop
in
inc
and
sub
jne
div
dec
xchg
int3
scas
adc
int
movsl
sbb
fcmovbe
mov
and
cli
mov
push
movsl
fcmovb
xchg
cmp
in
add
scas
call
xchg
sahf
fldt
or
dec
jb
test
xchg
inc
push
fadd
jo
dec
loop
int
fdivrl
cmp
inc
push
nop
xchg
int
icebp
sbb
mov
std
lahf
nop
repz
call
insb
repnz
jp
jne
loope
add
xchg
cmp
dec
in
sbb
add
and
fisttpl
ret
add
std
aaa
or
mov
dec
adc
stc
mov
popa
call
lea
mov
aas
jo
icebp
repz
xchg
xorb
ret
sub
xor
pop
ss
or
cmp
push
jb
xchg
imul
loopne
sbb
lods
adc
dec
int3
loop
xchg
pusha
mov
mov
in
test
test
js
mov
dec
sbb
xchg
sbb
mov
adc
pop
ja
or
inc
push
ret
push
loop
fnstenv
aam
aaa
mov
lret
in
imul
lcall
daa
sub
test
sti
push
iret
jnp
cli
jp
push
cmp
int3
pop
cmp
cld
adc
ficoml
add
cld
mov
nop
lcall
jge
mov
out
cmpsl
mov
divl
js
stos
pop
mov
dec
stos
and
js
or
add
scas
repz
and
arpl
adcl
aad
fsub
iret
loopne
or
jo
inc
xchg
cmp
mov
sti
sbb
mov
lret
add
gs
inc
dec
inc
cli
mov
outsb
jg
jno
xchg
shrl
enter
mov
test
xor
push
mov
loopne
jmp
xchg
ret
cld
test
dec
jle
idivb
dec
arpl
sub
mov
les
inc
mov
repz
incl
and
mov
aas
xchg
mov
aas
mov
repnz
xchg
sbb
push
jmp
mov
and
or
std
xor
fs
sub
mov
pop
push
fwait
pusha
dec
xchg
adc
adcl
movl
inc
mov
mov
sbb
jnp
adc
loop
test
push
sbb
add
fs
jl
dec
js
cmp
insb
push
inc
jge
mov
iret
sbb
repnz
data16
std
sub
dec
stos
mov
movsb
add
test
ret
rolb
aam
enter
inc
sbb
fnstcw
fadds
cmpb
xchg
xchg
popl
or
or
adc
dec
fwait
scas
iret
mulb
mov
arpl
ret
outsb
loope
repnz
arpl
xchg
daa
mov
dec
sub
dec
sbb
mov
ret
cmp
in
call
addr16
xor
clc
adc
xor
shl
sbb
push
mov
lock
out
push
mov
loopne
mov
adc
lret
mov
in
xlat
pop
sahf
insb
adcl
aam
push
loope
popf
fdivrs
test
sbbl
lret
dec
add
insb
mov
pop
xor
dec
push
ret
push
jo
and
cmp
out
ss
iret
icebp
sub
mov
aad
jb
cli
xor
cmp
cwtl
icebp
fistpll
add
sbb
lea
mov
push
xor
sbb
rorb
xchg
mov
sub
xor
shlb
add
mov
fcmovbe
mov
inc
imul
pop
fs
ja
cmp
mov
outsl
ror
add
push
and
mov
add
addps
fcoms
cmp
imul
or
cmp
mov
add
stc
mov
fistps
add
int3
lret
and
aad
pop
adc
mov
mov
out
bound
and
and
or
shl
push
sarb
sub
mov
data16
jecxz
and
movsb
rcll
arpl
sbb
xor
cmp
push
inc
movsl
and
incb
das
xor
push
cs
jmp
loopne
push
roll
repnz
push
push
aam
mov
pop
popf
lret
pop
sarb
xchg
xor
lret
lods
arpl
push
test
fsubl
fcomip
xchg
lahf
loop
clc
adc
sbb
scas
mov
sub
lret
fcomip
dec
divb
loop
dec
jno
push
inc
cmp
scas
mov
mov
inc
jge
xor
jnp
cmp
repnz
div
push
add
jns
jae
pop
icebp
or
popl
or
sub
add
int3
insb
xchg
shrb
stos
int3
dec
or
fcompl
lods
mov
mov
add
mov
in
sbbl
inc
cld
and
repz
sbb
xor
adc
push
daa
addr16
repnz
lods
in
add
mov
xor
imul
cmp
add
cmp
push
pop
fldl
push
inc
sbb
sar
fsub
out
ds
inc
xchg
sbb
mov
cmp
jns
sbb
add
mov
inc
ds
mov
fs
ret
int
icebp
cmp
cmpsb
sbb
cmp
movb
mov
incl
xor
jno
das
inc
int3
jo
jbe
in
inc
cmp
shll
cmp
gs
dec
data16
cmpsb
pop
mov
inc
mov
std
aad
sarb
imul
mov
xor
pop
mov
xchg
inc
test
cmp
add
xchg
sub
and
xchg
dec
sahf
or
sbb
mov
arpl
cwtl
mov
adc
out
adc
or
out
arpl
mov
xlat
ljmp
mov
ret
dec
movsb
or
push
xchg
mov
fbstp
mov
cmpb
hlt
jecxz
dec
jecxz
jae
add
xlat
sbb
loop
pop
mov
push
fs
ljmp
cltd
out
dec
push
test
mov
push
xchg
imull
addl
rcll
or
inc
sub
orb
dec
mov
cld
mov
pop
hlt
icebp
push
in
mov
dec
push
and
pop
mov
jno
add
jb
dec
push
fcoms
ret
shrl
xchg
lahf
sar
lock
push
sar
sub
sub
xchg
je
flds
lcall
cs
sub
xor
hlt
rcrl
sarb
loopne
dec
out
xor
dec
sbb
inc
inc
mov
frstor
adc
xor
add
scas
mov
stos
sbb
into
mov
sub
stos
jge
push
pop
movsb
push
mov
lcall
mov
xchg
jbe
std
pop
in
in
adcl
and
loop
jg
imul
pop
or
mov
add
clc
push
pusha
imul
rcll
pop
enter
sti
xor
adc
xchg
or
aas
shlb
sub
ljmp
call
jle
ret
jno
mov
mov
call
orb
mov
xchg
jae
in
inc
hlt
inc
shr
or
and
pop
jb
call
in
and
pop
jae
scas
movsb
pop
lods
negl
and
mov
dec
movsl
std
add
mov
cmp
in
out
xor
iret
sbb
adc
cmp
cmp
aad
add
mov
shl
fildll
aam
lret
dec
dec
mov
stos
mov
adc
cmc
out
push
fistpl
inc
mov
cmc
jmp
mov
add
adc
mov
dec
jb
rol
dec
mov
and
pop
mov
adc
insb
aas
js
adc
je
push
dec
inc
enter
pop
inc
push
das
fbstp
jle
mov
push
adc
push
scas
add
dec
jge
ss
leave
jge
pop
lcall
xor
jnp
ffreep
cmpsl
hlt
dec
mov
insb
lret
jp
aad
inc
push
loop
xchg
adc
adc
repz
sub
dec
pop
push
pop
xor
aas
pop
jecxz
inc
add
pop
into
jge
cwtl
xchg
push
imul
inc
notl
and
push
outsl
test
testl
bound
inc
xlat
xor
sub
cmp
clc
out
inc
lret
cmpb
out
rorl
inc
cmpsl
add
jbe
or
bound
and
js
nop
shl
out
cmpsl
dec
cmpb
stos
adc
imul
pop
in
ss
sti
nop
jne
push
out
test
xor
xchg
rolb
cld
sub
lods
and
sbbb
jno
cmp
cmc
das
dec
movsb
push
movsl
cwtl
divb
mov
or
push
or
pop
pusha
addr16
flds
pop
fwait
ret
pusha
mov
and
sbb
lret
popf
mov
call
insb
in
imul
arpl
out
add
or
jnp
lock
mov
ds
add
lock
data16
in
add
pop
adc
mov
push
xor
arpl
jbe
sarl
insl
ret
mov
insl
pop
arpl
mov
call
push
pop
pop
gs
out
push
dec
lahf
sbbl
enter
iret
jl
scas
xor
aas
nop
fmul
mov
aam
dec
mov
xchg
and
add
dec
pop
mov
popa
jmp
push
xor
mov
scas
sub
icebp
xchg
sub
lret
cmp
ret
dec
test
mov
popf
dec
or
adc
and
and
cwtl
cmc
imul
inc
jb
out
dec
sub
scas
bound
test
push
push
aaa
fdivr
push
push
adcb
lret
sbb
jnp
in
jb
mov
ljmp
out
xchg
orb
and
fsubp
popl
sahf
insb
sbb
push
adc
dec
shlb
fmul
inc
adc
xlat
test
lret
xchg
xchg
aaa
pop
xchg
lahf
or
cltd
and
dec
enter
insl
jle
add
mov
inc
ja
adc
scas
mov
imul
ja
test
es
loopne
prefetch
lcall
jge
xchg
push
mov
and
xor
xchg
movsb
ror
fs
out
aas
ret
inc
and
mov
sub
jle
loop
sub
and
sbb
cli
jns
xor
outsl
lds
mov
out
lock
inc
imul
dec
iret
iret
lret
cmp
std
insl
pop
or
adc
cmpsl
jmp
jae
insb
daa
push
cmpsl
rcll
in
lcall
xchg
sub
sbb
jnp
sub
stos
in
or
cli
divl
std
leave
lods
sarb
dec
test
out
loope
lahf
sahf
cli
inc
stos
push
dec
dec
mov
ds
ret
mov
aad
mov
cmc
inc
jb
int
push
ljmp
cltd
add
test
mov
jmp
incl
fildl
sti
sbb
rcrl
mov
repz
add
movsl
cmp
or
jmp
outsb
arpl
hlt
sub
push
popf
sbb
or
add
pop
inc
into
lods
jno
mov
jo
out
test
mov
arpl
jg
loope
pop
add
jae
nop
sub
jnp
lock
cmpl
push
jb
dec
stos
fstpl
push
leave
cmp
xor
xlat
sbb
out
mov
es
xlat
test
roll
inc
out
movsl
cmp
mov
sbb
jmp
cmp
mov
jae
push
loopne
ret
jne
shrb
fidivl
roll
dec
loopne
out
sub
lods
std
xor
lods
push
inc
call
add
mov
mov
cmpsb
call
insl
inc
data16
xor
xchg
and
lret
jo
sub
cwtl
add
push
js
dec
cmp
ret
rorl
bnd
mov
xchg
mov
mov
cwtl
in
push
xlat
sarl
inc
and
jae
lahf
rcr
insb
adc
lods
inc
push
loopne
ret
and
jp
gs
ja
aas
lahf
fildl
jl
jg
ficoms
aas
lock
or
int3
adc
pop
jo
lahf
das
mov
lret
js
pop
mov
adc
fildll
xchg
or
pop
mov
mov
inc
and
cld
stos
jb
or
iret
mov
dec
lods
aas
and
in
push
gs
out
clc
loope
arpl
ret
dec
popf
pop
iret
jg
out
inc
neg
jl
sbb
inc
pushf
lods
mov
jne
rcrl
shll
nop
sbb
jb
stc
ficomps
sarl
xor
add
sub
mov
or
fisttpll
sbb
adc
or
sub
cli
xchg
adc
popf
rcr
pusha
stos
iret
fidivrl
lret
mov
pop
inc
xchg
add
xchg
xchg
jmp
scas
xlat
aas
sbb
test
shrb
push
int
mov
leave
adc
arpl
divl
sahf
sub
cmpsl
mov
adc
jge
jle
or
cli
ficoms
xor
xor
int3
and
jecxz
popa
test
jmp
int
cwtl
pop
in
push
nop
iret
imul
dec
dec
xor
jg
dec
xor
test
dec
jmp
stc
cmc
inc
or
adc
add
loopne
xor
pop
pop
xchg
sub
inc
push
out
push
jne
lret
cmp
and
mov
outsb
jo
into
mov
sub
push
jae
xchg
add
into
push
xchg
mov
xor
jmp
xchg
xor
stos
lea
jp
imul
aaa
imul
movsb
sub
xchg
lods
aad
mov
dec
adcl
push
les
push
adc
pop
mov
out
jg
inc
leave
lret
and
icebp
iret
test
ja
mov
sbb
sub
fs
stos
outsl
pop
push
mov
xlat
ljmp
and
sub
mov
push
sti
xchg
sbb
and
in
xchg
pop
sub
pop
das
sbb
or
push
xchg
fs
xchg
inc
or
cmp
sbb
inc
and
push
mov
jne
adc
movsl
jge
mov
mov
cmp
or
adc
outsl
rcll
xchg
push
xchg
outsb
add
lcall
sub
lods
ljmp
adc
adc
insb
mov
pop
adc
cmpsb
stos
ss
xor
lods
addb
push
and
mov
arpl
popa
popf
andb
mov
or
pushf
pop
lea
mov
pop
stos
jmp
jge
mov
xchg
mov
out
and
adc
add
jg
sarl
dec
ret
sarb
inc
cmpsb
adc
shll
mov
lods
mov
add
cmp
cwtl
dec
add
bound
xchg
jno
push
mov
xor
sub
xchg
pop
sar
int
out
jp
daa
test
in
xchg
xlat
jo
mov
adc
mov
sbb
gs
icebp
shll
add
dec
push
xor
std
cmp
pop
pop
sbb
or
pop
pop
jge
xor
mov
adc
popa
rolb
push
mov
lods
ret
fisubs
mov
mov
mov
out
mov
ffreep
dec
in
out
in
rorl
aad
pop
or
cli
dec
imull
addr16
movsl
sbb
fidivrl
ss
repnz
adc
insb
jp
push
jge
push
xchg
test
sub
adc
stc
cmpsb
popa
addb
dec
push
enter
xchg
add
nop
push
pop
shll
mov
std
fldl
jp,pt
shlb
inc
sub
jg
jb
das
repnz
rcrb
jmp
addb
loope
xlat
jb
mov
cmp
add
loopne
daa
loop
in
sbb
pop
mov
test
jge
cmpsb
or
push
cmc
mov
add
in
jnp
dec
mov
sahf
loope
in
icebp
imul
test
fstpl
xor
sbb
xchg
xchg
cmp
rcrl
push
cmp
mov
insl
dec
xor
and
fwait
jmp
popf
jmp
jne
cmpsl
aas
outsl
outsb
xchg
arpl
mov
fcoms
adc
insb
negl
xor
int
adc
aam
inc
pop
ret
inc
pop
stc
enter
inc
popf
int3
scas
ljmp
sbb
push
lea
sbb
or
popf
sti
mov
mov
negl
ljmp
cltd
and
or
cli
jno
inc
ja
jnp
or
jno
lret
or
jmp
jge
jp
jbe
adc
mov
rcr
incb
je
mov
mov
dec
arpl
xchg
or
jg
cmp
jo
jge
data16
imul
xchg
leave
std
sub
daa
fdivrp
adc
mov
rol
jbe
add
fistpl
jae
push
cmp
ja
mov
fsubs
jecxz
test
cmc
pusha
jo
mov
out
and
movsl
xor
dec
mov
pop
push
into
mov
je
xchg
adc
in
mov
cmpb
inc
mov
sbb
jge
mov
or
mov
jbe
test
xor
loope
in
push
jne
ficoms
ss
mov
rolb
nop
test
inc
mov
and
mov
les
xor
jecxz
and
mov
notb
imul
mov
inc
cli
push
stos
inc
rolb
cli
rorb
addr16
int3
mov
adc
adc
imul
mov
imul
lcall
aam
repz
test
pop
repz
pusha
in
mov
testl
xchg
pop
clc
mov
mov
xchg
sete
cmp
imul
outsb
loop
out
add
mov
xlat
fs
jo
scas
mov
and
cld
dec
and
mov
stc
jmp
out
inc
insb
icebp
fisubs
mov
popf
movsl
mov
sub
jge
movb
inc
sahf
popf
sub
xor
aam
insb
icebp
fisttpll
sahf
xchg
xchg
test
cli
xchg
mov
insb
or
movsb
mov
gs
or
popa
and
xor
mov
leave
loopne
in
inc
outsl
lret
mov
pop
xchg
push
scas
iret
xchg
js
leave
xlat
test
mov
ljmp
jmp
xchg
pop
and
dec
jmp
inc
insb
and
rorb
add
jne
add
test
sbb
jno
rorb
pop
jne
jge
and
addr16
mov
shll
xor
mov
mov
cmpsl
lcall
push
mov
or
xor
push
pop
push
jg
pop
adc
idivb
jge
xchg
xorb
or
cmove
jb
xor
sarb
sub
mov
lcall
pushf
adc
out
fisttpll
lret
rcr
cmp
imul
rcrl
jnp
adc
arpl
loopne
mov
xor
cmp
out
xchg
les
cmpsl
addl
popf
mov
lds
fcompl
mov
js
adc
shl
or
sub
jbe
shll
mov
pop
jl
fists
data16
jns
daa
sbb
xchg
mov
and
popf
jae
fimuls
stos
addr16
rcl
aas
push
add
jge
push
fcoml
scas
call
daa
xor
pop
call
inc
jno
mov
loop
adc
and
call
inc
fcoms
mov
mov
stc
int
jl
cmp
push
mov
and
cli
in
hlt
push
popf
lret
or
sbbb
add
aas
mov
filds
cwtl
lret
sub
mov
test
cmpsb
ret
data16
out
mov
jle
mov
jns
ja
cmpsl
jnp
xlat
mov
mov
mov
push
mov
div
inc
xchg
jmp
loop
mov
jae
or
dec
or
sub
ret
mov
inc
dec
dec
cmp
out
and
pushl
jb
movb
cmp
stc
mov
pop
pushf
testb
xchg
scas
push
mov
sub
test
shrb
jno
stos
cmpsb
addr16
fadds
mov
or
das
mov
rcr
cwtl
fists
es
cli
stos
cmpsl
mov
sub
in
popa
rolb
mov
or
jae
sub
and
ficomps
mov
test
je
add
cmp
xor
or
push
lods
lods
push
mov
daa
pushf
lahf
stos
inc
xor
clc
inc
mov
rcll
or
lods
scas
xchg
xor
gs
jno
mov
into
pop
cli
pusha
mov
lcall
pop
cmp
loope
into
pop
xchg
mov
dec
std
bnd
pop
repz
cmp
pushf
cmp
add
loope
ljmp
pop
out
add
scas
icebp
popf
in
xchg
dec
lret
rcll
ret
pop
or
leave
cld
imul
cltd
lds
push
inc
push
js
push
cmp
dec
jecxz
mov
pop
mov
idiv
shlb
test
leave
xchg
divps
cmp
push
add
and
jg
hlt
dec
xchg
add
insb
out
sti
xor
fldt
jmp
mov
push
xor
rclb
mov
inc
dec
enter
push
insb
sbb
cmp
cmpsb
sub
andb
and
push
test
orb
sti
xchg
js
sub
in
fsubrl
jmp
enter
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
adc
mov
jnp
ret
jne
cmpsl
mov
add
jmp
std
xchg
pushl
arpl
sub
sbb
add
and
lock
jo
inc
jle
inc
std
movsb
cmpsl
shrb
lock
push
test
icebp
mov
jae
mov
xchg
pushf
addr16
jmp
in
push
cs
rol
rcrl
xor
xchg
rcrb
inc
mov
loop
xchg
neg
sbb
sbb
je
imul
dec
inc
bound
stc
adcb
mov
out
push
cmc
out
pop
xchg
fistps
imul
lcall
adc
in
js
mov
mov
pop
sub
cmp
push
ficoml
js
sbb
add
mov
dec
lods
dec
test
jns
push
bts
jb
mov
cmp
in
xor
test
icebp
mov
push
jns
sub
ljmp
psrad
sbb
cmp
pop
dec
scas
jae
aas
push
fs
jecxz
data16
cmp
xchg
in
push
cs
mov
iret
movsl
data16
pusha
repnz
sahf
jp
inc
push
mov
cmpb
lods
xchg
sti
outsb
jecxz
jbe
push
and
mov
and
pop
xor
mov
jecxz
aas
jecxz
fimuls
cltd
push
ja
in
xchg
fmuls
movsl
movsb
into
xchg
push
rorl
xor
test
mov
mov
sub
es
fisttpll
push
mov
lods
inc
pop
orb
std
mov
inc
ds
test
mov
aad
lahf
inc
adc
mov
popf
out
sub
cmc
adc
ret
mull
xchg
ss
test
push
mov
loope
sahf
xchg
jbe
fsubrs
loope
jmp
sub
or
movsb
push
imul
mov
pop
std
data16
sub
jb
sub
sbb
lods
mov
aad
aad
dec
dec
push
aam
repnz
cwtl
mov
add
lret
pusha
mov
jbe
adc
sub
outsb
mov
imul
loopne
cmp
inc
mov
ficoms
lret
bound
les
cmp
pushf
scas
xlat
fldcw
lea
loop
cmp
cld
jne
or
and
int3
lock
call
stos
mov
xchg
loopne
dec
mov
arpl
es
and
push
push
outsl
cld
lods
mov
pusha
xor
pop
repz
pop
addb
and
mov
rclb
scas
adc
cld
movsb
mov
jp
xor
mov
push
cltd
jle
add
jmp
mov
lret
pusha
xlat
sbb
adc
and
nop
fstp
clc
dec
mov
stos
sahf
jb
mov
imul
mov
fwait
lahf
mov
fwait
add
adc
pop
psubusb
std
push
imul
jae
lods
dec
xchg
adc
and
cmpsl
inc
or
cwtl
xor
out
aam
int3
rcrb
test
sub
adc
dec
mov
test
inc
push
filds
push
stos
lahf
pop
mov
xchg
mov
add
dec
mov
insl
mov
scas
enter
xor
add
int
inc
enter
out
mov
cmp
mov
jbe
xchg
mov
push
mov
add
sub
divl
aad
sbb
mov
flds
sbb
sub
sahf
pushf
mov
adc
mov
mov
xlat
xchg
sub
stc
sahf
rcll
jae
jl
sarb
mov
mov
stos
inc
jecxz
inc
mov
dec
cwtl
aad
add
jnp
mov
inc
and
ljmp
divb
cmp
lds
lahf
popa
imul
ss
pop
jo
ret
dec
sbb
pop
ds
mov
shl
inc
mov
jae
sbb
cmp
gs
fdivrs
fs
call
pusha
ficoml
jne
and
shll
das
mov
push
sub
xor
cmpsl
mov
cmp
out
pop
divl
shrb
jo
jmp
aad
out
std
movsb
lock
sbb
in
jae
xchg
in
xchg
pop
cmp
mov
test
lock
dec
mov
insb
sub
imul
lods
mov
loop
fisttpll
ljmp
add
sbb
mov
and
adc
dec
stos
in
adc
ljmp
dec
cmpsb
mov
sbb
add
mov
cwtl
cmp
js
psrlq
fnsave
inc
movsb
and
jecxz
testl
out
mov
pop
cwtl
jno
xchg
adc
jmp
imul
lds
loope
xchg
dec
pop
or
daa
mov
mov
jp
xor
stos
aas
stos
add
rcr
jle
fs
push
wbinvd
push
test
jmp
add
aad
out
add
mov
mov
push
or
movsb
sub
mov
dec
xor
mov
lahf
push
stc
lds
imul
jge
xor
mov
push
fimuls
shlb
lock
mov
push
pusha
cmp
inc
jmp
xchg
iret
push
bound
push
adc
push
into
mov
scas
add
lods
out
mov
sub
fnstcw
lret
mov
xchg
ret
orb
pop
lret
cltd
mov
sti
xchg
fdivs
insl
iret
in
add
mov
sbb
mov
cmpsb
pushl
shrl
aaa
pop
loopne
pop
fnstsw
scas
mov
cld
in
pusha
je
lods
imul
push
mov
sub
jp
bound
mov
out
jae
sub
pop
loop
xchg
dec
sbbb
clc
shll
into
inc
cmpb
aaa
fists
fcoml
lods
jl
cmp
xor
in
mov
sbb
enter
xchg
xor
push
or
or
cs
xchg
mov
cmpsb
cmp
je
mov
or
mov
adc
fbld
pop
jge
xchg
dec
iret
jo
fsubrl
add
in
fsubrs
ljmpw
out
test
pop
dec
push
das
divl
ret
pop
enter
add
jg
int3
rclb
jg
mov
bnd
inc
mov
mov
popa
sub
bnd
inc
gs
jnp
xchg
jecxz
pop
stos
inc
out
cmp
inc
add
imul
pop
jbe
and
sbb
xor
jnp
fiaddl
call
cmp
popf
lea
jp
adc
filds
hlt
jge
jl
jno
outsb
mov
push
lret
mov
mov
loop
adc
mov
psubsw
mov
or
arpl
cmc
mov
and
sub
xor
inc
jns
and
movsb
adc
sub
lsl
and
scas
int
lret
iret
sbb
adc
add
repz
stos
push
sbb
aaa
pushf
test
dec
lods
test
lcall
mov
fnstsw
mov
or
cmpsl
popa
int
dec
pop
or
or
ss
scas
jmp
xor
orb
xor
jae
icebp
jge
scas
push
popa
js,pn
add
mov
xchg
jno
mov
hlt
add
cltd
imul
xor
add
stc
mov
push
frstor
leave
sub
fisubrl
pop
jnp
add
into
xchg
jecxz
arpl
rcl
jnp
aaa
adc
stc
clc
sbb
lods
cld
fwait
pop
xlat
into
sbbb
scas
cmc
jns
mov
push
je
sar
add
stos
fbld
and
jno
mov
data16
push
inc
cmp
inc
repnz
icebp
aam
lods
adc
jbe
dec
bound
jo,pt
int
mov
ja
or
movsb
fcmovnb
mov
mov
xlat
out
mov
das
iret
and
ficoml
dec
cmp
jmp
xchg
fisubl
pop
mov
jmp
or
push
mov
ret
shl
lret
ljmp
int3
mov
dec
bnd
mov
lds
test
sti
pop
cmp
cmpb
aam
pop
aaa
cwtl
mov
push
inc
xchg
xor
insb
dec
adc
xor
mov
cmp
leave
sub
lret
mov
cmp
es
push
sbb
cmp
cmp
pop
hlt
mov
sbb
dec
xor
int
fwait
sarb
xor
lret
sbb
cltd
add
dec
sbb
out
mov
jle
adc
decl
pop
int
js
movsl
push
push
jnp
lea
inc
addl
pusha
cwtl
ss
adc
dec
dec
fwait
adc
cltd
imul
test
fisubs
dec
pop
sahf
popa
jle
mov
sub
cwtl
inc
dec
xor
mov
pop
add
mov
mov
fldl
push
cmp
js
mov
shll
fmuls
out
inc
or
lret
jge
sbb
into
cwtl
sub
fwait
jo
das
push
fidivrl
inc
outsl
mov
xchg
pop
pop
adcl
mov
dec
lahf
mov
sahf
daa
push
or
lcall
xlat
mov
xchg
sahf
mov
das
adc
lret
pop
push
scas
cmp
jne
jp
loopne
mov
pop
fs
sbb
ret
adc
lock
or
inc
sarl
mov
pop
out
mov
idivb
inc
push
pop
push
lods
rcr
ds
negb
push
push
xlat
cmp
iret
imul
hlt
or
push
jns
add
movl
inc
adc
ret
mov
jne
or
or
add
adc
adc
mov
or
aaa
inc
jae
dec
pushf
jg
adc
repnz
fimull
test
jae
mov
cmpsl
lods
xchg
addr16
cmpsb
and
adc
push
push
mov
bound
and
sbb
pushf
sarl
cli
adc
cld
xor
pop
xchg
ja
mov
movsl
pop
cmp
push
outsl
sub
out
cmp
push
dec
iret
push
ja
jecxz
jl
or
imul
xchg
push
pop
add
mov
je
mov
cmpsb
andb
sbb
sub
fsub
cmp
mov
xlat
insb
call
or
xorl
and
mov
repnz
or
cli
add
push
lods
mov
stos
pop
adc
mov
sub
out
push
stos
cs
xchg
out
and
sar
les
jb
mov
popf
test
fwait
cmpsl
pop
pop
fbstp
jecxz
push
fisubrs
mov
fsubs
test
jne
lds
pusha
cmpsb
sub
xchg
in
and
testl
cwtl
jns
pop
mov
rolb
fcompl
inc
inc
push
loope
aaa
cmp
push
test
dec
sub
jo
push
js
pop
mov
andl
popf
jne
mov
adc
insb
je
mov
cmpsl
mov
mov
test
mov
mov
pop
leave
jp
push
repnz
stos
lret
imul
cmp
movsb
cltd
sub
mov
and
mov
hlt
pop
and
jnp
mov
push
xor
loope
sbb
lock
mov
mov
lret
insl
imul
sub
or
inc
jae
inc
jl
sub
push
das
xor
jb
push
push
rolb
mov
clc
cmpsb
ret
mov
sub
dec
or
into
xchg
dec
pop
fsubs
push
cmc
dec
jg
cwtl
ret
test
adc
push
sbb
xlat
jge
scas
mov
mov
imul
mov
dec
pop
pop
das
lds
es
mov
fdivs
mov
cmp
out
xchg
cltd
push
lods
mov
rorl
test
test
jp
jnp
andb
push
xchg
dec
fiaddl
insl
daa
inc
outsl
out
or
or
fs
cli
cmpb
cli
push
das
popf
pusha
mov
xor
mov
xchg
in
jnp
leave
adc
sbb
inc
scas
mov
mov
fdivl
shr
rolb
icebp
out
push
fsubrp
mov
cltd
dec
dec
mov
ret
cmp
pop
dec
pop
clc
xchg
ret
scas
mov
xchg
jo
sbb
xor
out
cwtl
pop
xchg
add
out
pop
jl
add
rcrl
sahf
out
jecxz
sarl
and
fildll
dec
push
cs
cmp
xchg
push
xchg
xchg
insl
push
jbe
xchg
lock
cmp
dec
rcrl
xchg
mov
stos
nop
ret
scas
std
inc
sahf
pop
pop
ret
dec
jne
sub
loope
sub
dec
or
mov
xchg
xlat
fwait
mov
xchg
xor
inc
xchg
test
mov
psubusb
movsb
cmp
cli
xchg
fwait
push
es
sub
pop
movsb
dec
repz
cld
nop
shlb
sbb
xor
cs
lea
sbb
je
push
or
or
jnp
cmp
mov
in
fcmove
xchg
ja
adc
daa
testb
and
ret
mov
push
sub
push
fcoml
jl
and
hlt
cmpb
cltd
inc
mov
dec
call
xorb
push
enter
stos
pop
test
mov
fwait
ja
xor
cmpsl
xchg
jnp
mov
mov
leave
test
insl
mov
pop
ftst
xor
mov
cs
call
cmp
adc
sti
and
and
mov
adc
out
aaa
xchg
mov
sbb
jae
adc
sub
sbb
clc
push
sbb
out
cmp
pop
adc
das
dec
out
imul
int
mov
loope
popa
inc
into
dec
pushf
mov
movsl
loopne
shll
jg
imul
pusha
add
aaa
inc
mov
adc
dec
and
push
dec
mov
mov
jne
cmp
jne
dec
out
aad
in
cli
pop
pop
insl
fiaddl
out
xchg
ja
pop
rcr
jle
push
fbld
loop
test
in
scas
sbb
lahf
insb
cmp
lcall
mov
pushw
inc
mov
inc
clc
aaa
lea
add
mov
pop
mov
and
mov
enter
sbb
and
sub
mov
rcrl
mov
cld
std
xchg
rcl
cmc
lds
std
or
xlat
shll
sbb
pop
or
lods
std
pop
dec
add
jl
push
test
jns
xchg
bound
xchg
sub
fwait
pop
jno
sub
sub
mov
cmovno
mov
insl
xlat
jae
xchg
dec
aad
jecxz
movsb
aam
shr
rcrl
rcrb
jp
fcomip
push
and
movsb
mov
cmp
fidivl
pusha
and
loope
sub
js
push
dec
insl
sti
lret
xchg
and
xor
sub
hlt
stc
shlb
das
push
or
mov
mov
inc
fadd
inc
pop
imul
mov
mov
sbb
mov
sahf
lds
and
inc
data16
imul
adc
data16
cwtl
dec
mov
inc
test
aad
xor
lds
fdivs
pop
adc
add
mov
or
mov
lods
push
scas
ljmp
jbe
pop
out
add
roll
lret
lahf
cltd
add
ret
cmp
push
jecxz
sub
xchg
xor
jnp
test
lods
aaa
std
sbb
loop
inc
dec
pop
shrb
sbb
jb
es
dec
mov
inc
ja
fucom
test
push
mov
push
sbb
lcall
xor
pusha
cli
mov
or
lods
push
rcrb
sbb
mov
mov
dec
mov
cmpl
push
bound
aas
pop
mov
loop
enter
es
stc
mov
jnp
xchg
imulb
setne
pop
xchg
add
or
push
les
inc
int3
mov
inc
mov
ja
aas
fwait
push
ror
pop
lahf
mov
outsl
in
mov
xor
in
stos
xchg
jge
ljmp
iret
les
fs
lods
xor
mov
push
andb
inc
into
filds
xorl
mov
mov
loopne
push
jns
cmp
pop
xchg
push
dec
arpl
in
je
repz
sub
sbb
roll
sbb
jne
dec
pop
adc
pop
sub
rcrb
add
push
loope
xchg
aaa
loopne
jb
lds
jmp
add
pop
fdivrs
aam
sarl
call
into
rorl
add
mov
enter
cli
jnp
jnp
xchg
pop
mov
stc
test
sbb
push
jbe
stc
je
stc
btr
cmp
fwait
negb
mov
dec
int
in
lret
inc
sub
jae
xor
push
push
icebp
push
cmp
scas
sbb
adc
in
cmp
push
xchg
xchg
int
repnz
dec
pop
lods
outsl
popa
inc
adc
inc
imul
inc
cmp
add
add
gs
imul
imul
sbb
push
repz
sar
pop
in
je,pn
sbb
xchg
push
adc
pop
push
adc
push
sub
lods
dec
cmp
jge
orb
test
and
enter
cs
test
ss
sub
stc
lods
dec
fbstp
push
adc
cmp
mov
jb
adc
cs
scas
adc
xorb
mov
adc
cmpsb
test
sbb
mov
test
jbe
mov
hlt
push
sbb
imul
sub
push
cld
shr
lcall
pop
dec
mov
push
insl
jno,pt
shlb
cmpsl
push
orb
aad
out
stc
pop
movl
test
jl
in
int
mov
outsb
xor
fisubl
aaa
add
and
mov
das
stos
arpl
and
inc
dec
imul
push
push
imul
push
xor
xor
mov
movsb
pop
loop
xchg
pop
sub
add
loopne
jle
in
mov
negl
les
sbb
in
cmp
hlt
push
ds
inc
pop
jns
ror
fnsave
es
repnz
aas
mov
add
and
jle
jecxz
sti
mov
cwtl
dec
imul
push
jae
pop
mov
jb
je
mov
xor
mov
cmpsl
nop
movsl
or
repnz
lahf
faddl
pop
lcall
lcall
stos
int3
cwtl
and
popa
and
adc
adc
mov
sbb
push
rcll
std
pop
shrl
push
cmp
ret
mov
mov
in
addr16
call
sbb
push
lds
sahf
ret
jge
dec
add
jns
pop
rorl
push
dec
fistpl
xor
ret
lods
mov
inc
and
aas
cli
mov
sar
xchg
addr16
std
gs
jge
call
push
xchg
mov
in
add
movsl
xchg
sbb
inc
popf
xor
mov
ljmp
adc
divb
or
bswap
es
push
in
jno
xchg
ret
sbb
sub
inc
jle
inc
push
xor
mov
push
lea
nop
jl
mov
push
jg
cmc
lods
arpl
aas
das
mov
or
lds
or
lds
inc
daa
mov
push
aad
repz
stos
pop
jl
cmp
shrl
nop
into
ja
sahf
add
popf
jns
fs
adc
mul
push
mov
test
pop
clc
out
ret
cli
inc
test
fisttpll
loopne
cli
dec
adc
fucomp
aad
inc
fisttps
or
adc
mov
fsubr
cld
mov
xchg
arpl
jb
jo
imul
cmp
imul
imul
xor
and
mov
add
pop
add
and
jb,pn
cmp
xchg
cmpsl
jno
enter
sub
out
iret
int
or
ror
add
lahf
popf
fbstp
lret
fucom
lahf
sbb
stos
adc
mov
jecxz
lock
pusha
arpl
mov
sub
mov
ss
xor
cmp
loopne
test
lods
stos
add
mov
popa
or
xor
jbe
mov
dec
add
jbe
stos
fistpl
dec
or
sub
mov
imul
mov
das
fsub
aaa
xlat
rcrb
and
insl
and
aam
pop
mov
jge
and
nop
adc
ja
imul
inc
popf
or
push
lret
add
pop
mov
cmp
orb
xchg
in
repz
pop
repz
outsl
jmp
xor
dec
cld
loopne
shl
add
scas
stos
sarl
or
scas
add
rcrb
mov
cmpsl
jno
jnp
jne
int
dec
repz
push
lea
mov
xor
adc
push
notb
aam
lret
lcall
cld
fimuls
adc
and
cmp
inc
sub
push
xchg
push
add
inc
sub
jne
arpl
jo
sahf
rol
sbb
leave
xor
jle
adc
pop
cmp
ds
mov
in
test
mov
cltd
out
lods
arpl
push
sahf
in
cmpsl
jmp
cmp
add
inc
push
lds
push
or
push
decb
inc
push
dec
out
imul
or
rolb
rcrl
xor
sub
mov
mov
pop
inc
ret
pop
daa
inc
adc
sbb
or
sbb
or
cmp
mov
call
rcll
dec
and
loope
adc
mov
scas
clc
mov
loope
xor
outsb
pop
pop
push
cmp
decl
and
sub
push
rcll
mov
xchg
lret
leave
pop
cs
xor
xor
dec
rolb
loopne
mov
mov
inc
adc
mul
mov
imul
out
xor
cmpsl
sub
cs
repnz
adcb
ss
and
roll
cmpsl
loop
sbb
in
add
jae
fmuls
cs
and
movsb
dec
sub
inc
jl
cmpsl
dec
pusha
test
cmp
dec
shlb
lret
in
mov
sbb
sahf
in
mov
sarl
gs
push
mov
mov
insl
adc
push
cmp
inc
adc
mov
addb
mov
inc
or
xchg
adc
hlt
shrl
loop
inc
sbb
hlt
aam
sbb
in
js
xchg
shlb
sahf
lods
push
and
fadds
aam
and
cmp
aas
andl
jmp
push
inc
add
add
sbb
xchg
jp
adc
es
bnd
sub
jmp
dec
fcmovnb
movl
sahf
mov
mov
and
lods
push
mov
sub
std
sub
test
pop
sub
jbe
and
lret
mov
add
jns
jo
fsub
leave
imul
jmp
xor
in
popa
xor
mov
jns
inc
cltd
mov
in
and
cs
and
leave
adcb
dec
clc
mov
cwtl
mov
add
icebp
outsb
push
fbld
jmp
movl
cmpsb
dec
mov
cmp
dec
imul
negl
adcb
out
shr
popl
mov
out
or
sub
mov
icebp
lret
inc
in
fidivrs
ds
sbb
imul
mov
aad
inc
xchg
add
jle
or
cmpsl
or
leave
xor
lahf
pop
clc
jmp
xor
mov
inc
jl
cmp
imul
pushf
cmp
insl
addb
lret
pop
sbb
out
scas
mov
pop
andl
leave
lock
movsl
jbe
cs
sub
mov
add
cmp
pop
adc
loopne
outsb
std
add
inc
dec
clc
test
xor
insl
ret
std
sbb
mov
repnz
bound
roll
insl
pusha
sub
fsubrl
xchg
sbb
inc
adcl
ret
sub
stc
inc
pop
fcomps
shlb
mov
scas
cmp
fwait
cmp
xor
mov
cmp
out
fs
add
fnstsw
pop
mov
mov
push
cmp
sti
fwait
mov
ljmp
lock
and
cmpl
cltd
adc
dec
je
xchg
cmp
inc
mov
add
das
repnz
ljmp
mov
mov
mov
cli
jecxz
pushf
cmc
cmc
lcall
xchg
add
sbb
fildll
popa
insb
mov
aaa
in
test
lods
sub
stos
adc
cmpsb
dec
cmp
mov
movsl
mov
imul
in
into
aad
lahf
mov
insl
les
xor
push
das
inc
jg,pt
into
cmp
mov
push
jno
mov
push
push
push
jl
add
add
sub
cmp
leave
cmp
loop
rclb
cmp
in
sub
add
into
xor
int3
das
mov
aas
out
sub
mov
and
sti
aam
int3
jl
lahf
or
dec
xor
ret
jle
xlat
push
data16
scas
out
rcrl
stos
push
fmull
sub
jmp
lret
insb
dec
insb
pushf
ljmp
adc
mov
cmpb
mov
fwait
in
xchg
into
sub
sbbl
sbbl
jg
icebp
sbb
mov
test
xor
dec
inc
ljmp
push
jns
xchg
and
or
add
lods
jns
mov
mov
mov
in
xor
aas
sub
pop
jae
mov
push
adc
and
jbe
lods
out
lret
out
leave
and
loop
or
adc
or
out
int
out
inc
pop
sbb
mov
pop
pop
push
xor
jae
out
xchg
adc
jl
popa
ja
fwait
dec
cmp
cmpsl
je
movl
mov
fsubrl
jns
nop
mov
or
scas
mov
out
mov
xchg
shll
and
lea
sub
and
pop
popa
psllw
leave
sbb
sub
pop
stc
std
xor
idiv
movsl
subb
iret
add
fldcw
dec
jo
and
pusha
sbb
cld
into
push
add
jbe
in
xchg
jl
mov
insl
cmpsb
add
or
mov
cltd
int
jmp
popf
mov
int3
into
mov
add
hlt
cmp
insl
into
data16
adcb
xor
fdivl
push
ret
add
std
iret
aad
popa
jno
enter
mov
xor
or
fimull
xor
sbb
push
xor
lret
insb
xor
lret
outsl
cmp
shlb
jne
sbb
jg,pt
das
cs
mov
movlhps
fisubrs
pop
cld
add
into
sub
add
cmp
je
lahf
out
fs
cmp
mov
in
fdivs
mov
mov
addr16
ljmp
lret
pusha
sti
mov
cli
adc
push
scas
xchg
cmpl
aad
int3
xor
jnp
cmp
cmp
movsb
jmp
and
sahf
dec
jmp
adc
aad
mov
call
add
out
ja
sahf
mov
mov
js
mov
rcr
sub
push
cli
cmp
sub
test
sub
or
out
ficomps
out
adc
test
or
add
pop
jno
push
mov
xchg
dec
insl
es
pop
xchg
mov
pop
inc
fisttpll
out
mov
ds
pop
add
cwtl
clc
dec
mov
ret
jns
push
dec
pop
out
pop
inc
or
outsb
adc
mov
pop
iret
es
jb
add
pop
and
test
pop
or
shrb
and
ror
mov
cltd
ret
mov
bound
mov
mov
jae
rcrl
sub
bound
std
jg
or
outsl
sbb
or
out
mov
lds
ret
adcl
cmp
lods
push
aam
test
or
dec
test
xchg
ja
bound
mov
push
cmp
rcrl
jp
cmp
push
jno
jl
xor
repnz
repnz
sar
pop
leave
fucom
xor
js
xor
cmp
sub
leave
ds
into
test
jmp
movsb
shrl
andl
js
dec
lds
push
std
push
cmp
stc
clc
out
daa
stos
xor
push
mov
bswap
mov
lods
add
jge
jmp
aaa
or
dec
aaa
bound
aaa
mov
iret
arpl
mov
xchg
scas
sahf
jg
inc
sub
dec
jo
and
jo
cmp
cmp
jl
aas
stos
and
mov
cmpsb
lret
mov
sbb
pop
xor
add
push
mov
bound
or
std
xor
dec
xchg
jno
push
ljmp
xchg
insb
addr16
mov
push
mov
inc
sbb
mov
insb
sub
xor
test
adc
pop
das
test
lock
stos
sbb
mov
stc
dec
xchg
push
and
pop
sub
add
lcall
mov
aas
lock
push
mov
or
in
fwait
les
repnz
adc
push
out
cwtl
lea
jnp
ret
loop
xor
xchg
sub
in
imul
test
or
pop
mov
push
or
mov
and
mov
jle
xor
xor
push
mov
push
lea
test
jecxz
xchg
mov
loopne
imulb
mov
and
jmp
mov
out
call
cs
xchg
outsb
cmp
loope
cli
sbb
gs
shlb
hlt
repz
xlat
mov
sbbl
adc
add
lods
add
or
ljmp
aad
adc
sbb
ret
mov
pop
mov
and
and
or
xchg
and
xchg
out
mov
test
adc
repz
pop
sub
les
mov
int
jbe
sbb
jp
insb
or
mov
pusha
ja
mov
adc
fsub
mov
bound
mov
push
negl
mov
sub
idivb
xchg
jmp
inc
inc
call
cmpsb
outsl
and
jae
dec
int3
les
icebp
push
lcall
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
pop
adc
jnp
pushf
jnp
mov
push
add
mov
bound
out
lock
test
fldt
lahf
lea
pop
adc
test
pop
sbb
scas
repnz
add
lods
mov
fidivrs
arpl
leave
hlt
les
cwtl
or
fs
repnz
mov
jo
fbstp
adc
icebp
jmp
adc
shl
sbb
xchg
lcall
adc
mov
outsl
push
pop
std
xor
jo
dec
xor
cmp
data16
aad
ljmp
pop
xchg
test
xor
add
in
out
leave
adc
out
je
dec
cmpsb
adc
bswap
adc
in
es
insb
mov
adc
pop
inc
scas
xchg
imulb
and
sbb
scas
jecxz
fldcw
arpl
jae
in
push
xchg
inc
sub
push
loop
mov
adc
jnp
sarl
or
lcall
dec
stos
mov
int
popa
xchg
or
ret
xor
xor
pop
mov
divb
adc
jbe
adc
movsb
test
insb
mov
enter
nop
sbb
shrb
lods
pop
jne
sub
test
push
and
mov
inc
sub
mov
lds
xchg
mov
mov
xchg
in
mov
inc
xor
call
popf
and
xchg
sbb
dec
cmpsl
fnstcw
jg
test
out
lock
test
sbb
popa
push
xchg
xor
icebp
push
lods
push
lahf
loopne
xor
jge
push
ficoms
and
cmp
subb
jb
adc
sub
dec
push
fsubrl
rcr
iret
xchg
adc
inc
xor
rolb
fdivr
mov
bound
jmp
data16
inc
test
xchg
sahf
and
xor
out
lods
in
mov
cmp
push
out
jmp
inc
cmp
dec
xchg
aad
pop
dec
mov
and
jb
pop
mov
xchg
imul
rcrl
inc
sub
inc
xor
out
add
mov
sbb
imul
gs
push
ffree
ret
fldt
adc
pop
insl
addl
aad
mov
lds
pop
and
cmp
pop
std
call
xchg
mov
dec
out
fisttpl
je
in
and
ret
mov
lds
fs
icebp
inc
adc
cmp
je
adc
out
inc
lret
fsubl
jno
push
and
mov
xor
mov
imul
insl
rcr
xchg
icebp
mov
outsb
in
iret
and
idivb
and
and
pop
lods
repz
ljmp
fcomps
in
fucomi
xor
enter
xchg
loop
lea
pop
and
sbb
mov
cmpsl
sub
cli
cmpl
jbe
xor
stc
xchg
adcb
fucomip
mov
pushf
movsb
mov
pop
lcall
push
cmp
xlat
or
dec
movsl
and
repz
inc
test
rcl
add
lcall
add
aad
lret
jp
sub
fidivs
sti
cmovge
je
mov
leave
ret
pop
xor
sub
cmp
add
adc
call
fdivrl
sbb
dec
and
rcrl
dec
xchg
repnz
or
sub
pop
lret
mov
xchg
cs
xor
or
cmpsl
add
stos
int3
cmpsb
push
jb
or
rorl
aam
cltd
daa
gs
insb
add
jecxz
push
inc
xor
jl
fstl
xchg
enter
sub
jbe
or
repz
xor
mov
xchg
mov
xchg
sub
out
xor
or
gs
push
jne
bnd
jbe
fs
test
fistl
scas
ret
daa
repnz
cwtl
test
daa
mov
adcl
pop
or
aad
out
pop
in
xchg
mov
mov
push
pop
or
jmp
outsl
mov
scas
stos
pop
subl
push
dec
pop
mov
sbb
pop
out
mov
cmp
adc
mov
pop
mov
adc
pop
xchg
lret
lods
je
push
mov
dec
scas
in
out
adc
jb
fwait
mov
outsl
mov
cmpsb
push
mov
jg
das
dec
pop
orl
data16
es
repz
add
pushf
imull
push
xlat
adc
and
js
pop
push
mov
insb
sub
push
mov
push
ds
push
lcall
iret
pop
adc
mov
cmp
aad
inc
popw
stos
cmp
and
or
pop
xchg
lea
pop
test
pop
outsl
xor
inc
push
pop
int
inc
adc
mov
and
lods
mov
jb
rcrb
adc
jo
stos
xchg
mov
imul
cmp
push
orl
repnz
pop
mov
fisubrs
rcrb
sub
insb
stos
popa
xchg
xchg
gs
xchg
xor
imul
push
shrl
cltd
rolb
push
jle
andb
adc
cmc
push
insl
sub
cmpxchg
imull
xlat
jne
cmp
pusha
loope
lcall
and
lcall
adc
sbb
jmp
xchg
mov
or
pop
into
jmp
mov
insb
into
insl
mov
lea
hlt
sub
shrl
pushf
cmpsl
in
pop
dec
inc
adc
inc
daa
push
dec
jl
inc
mov
inc
mov
cmpsl
push
sub
push
mov
adc
add
lock
xorl
jnp
pop
aam
mov
and
repnz
cwtl
stos
pop
out
outsl
sti
push
sti
pop
adc
mov
in
sti
lret
pop
aaa
mov
call
lret
pop
ficompl
call
inc
xchg
dec
dec
inc
adc
xor
and
mov
adc
ds
orl
js
stos
lea
mov
je
bound
mov
lea
mov
mov
fldcw
out
xchg
cltd
cmp
mov
aas
cmp
add
mov
dec
cmp
mov
lret
push
stos
push
out
push
out
lods
daa
sbb
mov
in
jecxz
mov
add
sbb
and
cmp
ktestw
stc
push
or
hlt
and
dec
sub
data16
cs
js
sub
lahf
ret
mov
cmp
js
clc
fmuls
insb
jae
push
fs
mov
into
loop
and
fwait
xor
out
push
or
into
jle
and
sbb
push
lcall
or
sbb
cmp
or
adc
std
movsb
movsb
frstor
xor
jns
cmp
dec
fisubrl
add
dec
cmp
fdiv
shl
loopne
push
jge
inc
adcb
test
ja
in
adc
and
lea
ljmp
mov
addr16
es
or
das
push
add
out
or
mov
xor
jnp
adc
inc
insl
add
rcll
outsl
mov
fisttpll
jb
push
mov
adcb
clc
imull
mov
stos
mov
or
fcoms
ljmp
sub
addr16
xchg
add
mov
push
mov
push
mov
stos
sub
lcall
jnp
inc
cmp
lahf
mull
fists
add
js
cmp
jg
mov
cmp
jmp
cbtw
icebp
dec
je
or
and
xchg
pop
popf
aam
test
iret
imul
lea
cmc
popf
sbb
mov
shrl
push
mov
push
or
push
aaa
mov
pop
jnp
xchg
aaa
out
je
push
stos
push
and
rcll
dec
neg
dec
dec
inc
pusha
and
loop
sbb
hlt
pop
icebp
inc
sbb
int
push
sub
ret
pop
std
xchg
lds
das
sarb
popf
orl
xchg
leave
popa
adc
pop
pop
jmp
pop
stos
and
hlt
sbb
popf
mov
push
cwtl
arpl
outsl
lock
sbb
mov
xorl
addr16
cmpsl
sbb
jle
in
jbe
inc
lret
lds
add
mov
hlt
lods
mov
add
push
or
cmpsl
pop
pop
subb
enter
gs
das
push
movsb
jmp
in
mov
inc
push
js
insl
rcr
testl
jbe
jg
push
mov
fdivrl
sub
sbb
lods
mov
rorl
mov
mov
mov
and
inc
rol
addr16
push
lods
arpl
dec
add
call
loop
cli
insl
mov
mov
or
xor
mov
in
pop
push
mov
iret
icebp
jecxz
jns
and
sbb
sbb
jns
shl
pop
pusha
out
cmp
outsl
inc
and
inc
push
fwait
sub
adc
test
inc
mov
jecxz
sbb
adcl
mov
hlt
mov
sbb
xor
mov
stos
imul
lock
call
mov
xchg
ja
or
push
xchg
mov
jbe
pop
add
leave
loopne
jl
mov
movsl
sbb
shr
push
xor
mov
in
insl
xlat
pop
hlt
mov
mov
sub
mov
movsb
dec
sbb
mov
and
rorb
decl
cmp
xchg
pop
repz
inc
push
lret
fs
dec
rcr
push
inc
pop
mov
or
rorl
rorl
inc
xor
xchg
jg
adc
sbb
mov
je
mov
test
inc
jmp
inc
mov
jb
int3
push
xor
push
jns
fisubrs
pushf
in
lods
stos
adc
aas
arpl
rcrl
jp
mov
movsb
test
hlt
sbb
mov
movsb
and
cmp
xchg
in
jo
mov
add
mov
iret
pop
ljmp
pop
adcl
sub
sub
out
inc
frstor
in
js
out
cltd
pop
fwait
in
ret
hlt
and
adc
dec
xor
cld
push
xor
mov
shl
or
or
shlb
sbb
test
cmpsl
inc
mov
loope
sub
sbb
xchg
push
push
jge
push
pop
pop
mov
push
mov
xchg
xorb
cmp
inc
adc
in
push
and
mov
loop
ficoms
push
lret
mov
ror
xor
xor
push
add
mov
inc
iret
and
lods
inc
xchg
jns
xchg
inc
cmp
mov
pop
iret
insb
or
lret
stos
push
mov
mov
outsb
shlb
mov
aaa
mov
xor
rorb
movsb
imul
adc
push
cmp
mov
cmpsl
arpl
icebp
shrl
pusha
roll
fistl
xchg
mov
shll
mov
jns
lahf
sbb
xchg
das
xor
rclb
cmp
jp
es
aaa
and
outsl
inc
jne
popl
sti
fs
mov
leave
dec
lods
in
out
gs
ds
sbb
push
xchg
push
push
inc
stos
shrb
push
ss
cmp
pushl
test
push
push
or
cmp
leave
push
cmpsl
movsl
cmpsl
sub
neg
int
loopne
mov
mov
push
mov
jae
arpl
bound
jno
adc
fsubl
jo
rorb
mov
dec
aas
mov
cmp
dec
stos
fisubs
test
nop
rcl
pop
mov
dec
add
pop
xor
add
xlat
je
inc
div
mov
jb
subl
leave
je
orl
shll
sub
and
inc
lods
dec
fsubr
int
xchg
insb
mov
xor
rcr
xadd
dec
scas
sbb
dec
es
fadd
sbb
fucomi
inc
data16
push
cs
inc
roll
addr16
lret
ljmp
mov
mov
out
push
push
jb
inc
add
and
inc
addb
sbb
sub
in
out
mov
xor
mov
es
mov
shll
or
mov
sub
and
mov
cmp
in
and
sub
xor
sbb
jne
out
ficomps
push
xlat
mov
sti
push
add
jno
jo
xchg
jns
cli
or
es
xlat
dec
inc
outsb
mov
out
xor
sti
cmpsl
add
push
cli
inc
cmp
jmp
cmp
jb
push
ss
or
out
jae
pop
sbbl
popf
mov
dec
sbb
push
stos
or
xor
aad
add
jnp,pt
fcompl
ret
ja
lret
loopne
or
lahf
or
or
adc
mov
mov
mov
sub
jmp
shll
lahf
int3
add
in
push
ja
pop
push
fadds
repnz
das
out
daa
test
xor
adc
pop
mov
adc
ret
test
sub
mov
inc
js
pop
pop
mov
push
ds
addr16
adc
cwtl
ljmp
xchg
cld
bound
lock
test
lock
dec
lahf
sub
gs
lock
jne
out
lea
sbb
fisubs
mov
push
mov
rcr
andb
dec
mov
push
sarl
mov
lods
dec
push
stc
xchg
in
fs
add
or
loopne
add
inc
push
push
scas
push
fwait
adc
pop
mov
les
mov
xchg
test
stos
nop
out
in
jae
lods
leave
mov
and
std
jecxz
jno
add
daa
stos
adc
sub
daa
xchg
pop
lock
and
jl
arpl
rorl
loope
in
lods
xchg
sub
fiaddl
out
mov
daa
lret
dec
dec
in
xchg
divl
mov
pusha
jecxz
lret
ds
mov
in
sub
fs
pop
out
push
dec
mov
inc
arpl
push
and
xchg
xor
aas
call
scas
fucomip
out
or
mov
aad
cwtl
xor
adc
std
rorl
out
sub
cmp
inc
notl
gs
mov
es
cli
inc
mov
stos
std
jae
ret
mov
lret
adc
mov
rcrl
xchg
lret
cmp
int
pop
mov
sti
mov
push
pusha
and
repz
mov
mov
pop
or
mov
idivl
stos
fs
loope
popf
push
xorl
call
aas
sti
pop
fistps
mov
aam
pop
and
sub
repnz
ja
inc
aaa
stc
xor
cmpsb
pop
jb
jnp
pusha
push
loop
or
ja
lds
test
cmpsl
and
mov
test
dec
pushf
jle
loope
out
jle
jb
outsl
mull
arpl
sbb
iret
in
pop
jl
aaa
out
addr16
xor
repz
in
repz
mov
jmp
sti
scas
inc
jnp
negl
jmp
mov
repnz
test
shrb
cmpsb
jmp
arpl
cmp
outsl
sahf
pop
inc
mov
or
sahf
jne
add
inc
daa
les
mov
sub
xchg
pop
outsb
fsubrs
test
xchg
in
into
popf
mov
repnz
push
add
and
fcoms
adc
insb
push
and
pop
in
clc
mov
pusha
in
test
stos
fsts
inc
adc
ja
adc
cmp
ja
outsb
enter
jno
or
int3
xor
cwtl
or
mov
pop
pusha
fsts
daa
push
pop
cli
bound
les
das
lcall
add
xor
hlt
or
dec
call
cmp
pop
int3
lret
push
add
xchg
mov
jl
push
adc
push
push
push
sub
pop
push
mov
jg
insl
outsb
xchg
lret
jns
mov
hlt
loopne
clc
jle
xor
dec
lods
adc
xor
std
sub
test
pop
jno
mov
bound
outsb
lahf
cmp
push
or
xchg
add
cmpsb
jnp
cmp
inc
push
dec
xchg
popf
fcompl
out
add
dec
js
aaa
mov
movb
out
pusha
xor
sub
xchg
lock
popa
cwtl
sub
in
xor
or
push
push
xor
mov
xchg
sahf
call
arpl
shlb
jp
jne
mov
inc
sbb
test
jb
pop
aas
popl
pop
cmp
pop
pop
sub
and
iret
pop
mov
rcrb
xchg
sub
inc
add
rsm
fsts
ja
pop
push
sub
scas
stc
mulb
sub
sahf
push
cltd
nop
sar
lret
mov
subb
out
mov
test
sub
lret
add
fsubrl
out
outsb
imul
mov
repz
mov
mov
cmpsl
ljmp
add
mov
pop
push
or
mov
push
jle
in
aas
mov
cmp
cmp
stc
dec
repz
mov
sbb
mov
lock
iret
add
adc
imul
popa
xor
sbb
dec
dec
out
and
mov
add
fldenv
imul
ss
push
pop
out
or
lods
fsubr
in
jne
shl
jne
xor
aam
movb
cli
mul
iret
ds
nop
test
outsb
mov
sbb
sbb
or
jle
or
sub
sub
dec
jae
cld
lods
shll
outsb
dec
test
add
cmp
das
pop
scas
pop
jns
loopne
cwtl
sti
jl
sar
cmp
rorb
mov
std
pop
clc
rol
movsl
and
rcr
sub
cmp
es
sub
cmp
jl
pop
nop
dec
mov
testb
mov
adcb
addr16
xchg
sahf
mov
jmp
jl
outsl
sub
in
in
xchg
mov
fimuls
lds
cwtl
into
inc
adc
loope
mov
adc
adc
xchg
stos
sbb
pop
sub
shll
flds
and
andb
or
mov
mulb
jns
push
xchg
jecxz
iret
push
or
add
fisttps
xchg
push
and
sub
les
scas
in
sbb
cld
call
push
hlt
sub
in
imul
test
jns
add
push
dec
aam
leave
or
pop
hlt
cmp
xchg
jmp
bound
mov
cld
push
jbe
testl
cwtl
iret
sarb
loop
push
loop
fwait
jle
testb
and
jecxz
stos
inc
add
cmpsb
ret
mov
shr
inc
xlat
out
ljmp
mov
and
and
popa
lods
jecxz
push
sbb
adc
cmp
repz
xchg
and
outsl
mov
subl
mov
ljmp
jl
ja
pop
jmp
loop
rcr
add
pop
dec
sbb
mov
movsl
push
aas
adc
pusha
lods
mov
jg
std
sub
pop
push
jns
mull
inc
add
cmpsl
mov
xchg
mov
pop
sti
inc
inc
pop
adc
dec
shlb
jg
imul
adc
lods
push
lods
pop
in
in
mov
sbb
sub
jge
out
aad
addl
je
js
sbb
dec
and
jae
out
jno
movsl
out
mov
dec
or
add
jae
dec
ljmp
fwait
jmp
inc
xlat
sbb
jge
pop
cld
das
jb
xor
push
decb
push
hlt
ds
fildll
hlt
push
scas
push
push
dec
push
lods
leave
add
jle
stos
mov
xchg
lcall
mov
push
cmp
pop
cmp
jmp
push
movsb
push
cmp
push
outsl
outsb
xor
jnp
lock
cmp
mov
ud0
push
jne
adc
mov
sub
test
xchg
xchg
jp
jne
sahf
movsl
daa
xchg
sub
popa
dec
adc
jbe
and
shlb
and
mov
mov
add
int3
or
xchg
lcall
popf
jo
movsb
xor
fisttps
xchg
out
call
enter
orb
loopne
mov
repz
mov
stos
jl
and
dec
bound
in
jnp
cs
mov
cwtl
outsl
jbe
mov
jg
dec
sub
pop
jo
xor
in
inc
mov
daa
or
daa
xchg
push
movsl
popa
mov
stc
cwtl
sub
xchg
mov
push
mov
push
push
mov
mov
add
aas
cmp
sub
imul
outsb
and
pop
dec
aad
pop
loop
in
ret
vprotw
outsl
sub
xor
sub
test
popa
icebp
pushf
in
in
call
aaa
notb
pop
les
cmp
call
mov
ret
and
jg
pop
mov
push
mov
push
aam
mov
jl
cmpsb
mov
push
push
xchg
pop
adc
stos
cmc
nop
dec
cmc
sub
inc
jg
sub
test
mov
push
xor
or
mov
xlat
aas
gs
cmp
sarb
daa
xchg
outsl
pop
jne
cmp
int
adc
shl
lods
stos
push
mov
out
testb
cmp
xchg
mov
mov
out
mov
add
or
fstpl
lods
ja
sbb
fmuls
xor
outsl
lods
mov
rclb
loop
adcb
negl
repz
test
push
add
fsubl
inc
sbb
lahf
pop
mov
mov
pop
addr16
mov
mulb
aad
sub
mov
dec
mov
push
jl
js
popf
mov
pop
clc
ret
sahf
cld
subl
xchg
mov
sub
out
mov
les
dec
xchg
imul
addr16
jns
cmc
test
xor
inc
cmpsl
add
test
mov
push
jle
jp
jecxz
mov
paddusw
lock
data16
rcrl
jle
sub
rorl
lahf
mov
push
mov
mov
jle
das
sub
pop
pop
dec
imull
sub
sub
add
test
aas
test
outsb
or
sub
jg
mov
pop
subb
stos
xor
add
sub
cmpb
mov
add
ficompl
jne
sbb
xlat
fadds
jo
sbb
sbb
or
cmpsl
jl
jmp
mov
ja
push
int3
test
jmp
xorl
mov
sub
jno
repnz
std
ja
lods
mov
push
es
add
inc
sub
jo
fcom
and
and
cmp
jmp
nop
sub
adc
mov
insb
sbb
jnp
mov
fwait
xlat
mov
pushf
pop
ss
pop
add
adc
rol
lock
pop
push
lcall
or
sbb
mov
and
pop
add
push
mov
data16
mov
lods
pop
jne
inc
adc
and
lahf
test
out
aam
fsubp
imul
stc
dec
insb
in
lods
inc
cld
xchg
mov
iret
lds
push
and
fwait
call
push
mov
adc
fimuls
mov
mov
hlt
add
cmp
and
dec
outsl
add
fucom
xchg
cmc
aam
pop
test
hlt
inc
mov
icebp
adc
bound
inc
enter
pushf
shr
add
or
ljmp
outsb
popf
testl
mov
jmp
xchg
in
stos
fwait
aaa
lds
mov
sub
dec
push
movsl
pop
sub
and
cwtl
data16
dec
pop
adc
pop
pop
cmp
lods
rolb
push
and
inc
jb
mov
lret
add
cmpsl
jmp
jb
inc
xor
scas
sub
cmp
jne
jae
stos
mov
dec
mov
idivb
dec
call
addr16
mov
cli
xchg
lods
inc
cs
sub
daa
outsl
out
cmpsb
and
inc
insl
push
mov
movsb
pushf
mov
xchg
arpl
std
cmp
jl
xchg
mov
fmuls
inc
and
repz
mov
pop
cwtl
mov
xor
gs
bound
sbbb
mov
xchg
pop
add
pushaw
js
push
ja
lds
pop
dec
dec
into
xor
push
sub
js
lods
addr16
dec
xor
fldenv
push
idivb
add
je
push
adc
dec
aad
rcll
sbb
pushf
mov
sbb
mov
jl
sub
lock
stos
movl
and
testb
lea
adc
xchg
fmull
inc
fbld
popa
ds
stos
jb
pop
pushf
shl
inc
bound
xor
fwait
pop
imul
mov
sbb
inc
jl
or
icebp
aaa
fs
and
dec
mov
scas
fs
pop
outsb
push
dec
fcompl
mov
mov
and
or
mov
xlat
pop
xchg
push
sbbl
inc
mov
dec
mov
stc
fidivl
icebp
jp
stc
xor
inc
and
loop
ds
mov
mov
or
stc
adcl
dec
mov
loopne
pop
cmp
jecxz
add
lds
ret
xchg
xchg
bnd
jg
fs
ja
ja
mov
mov
jg
out
scas
movsl
sub
in
imul
dec
sbb
scas
adc
pop
mov
cmpsb
cmpb
cmp
pop
or
jle
call
mov
and
pusha
jecxz
adc
out
adcl
daa
pop
adc
jne
mov
and
fstps
out
xchg
test
pop
and
fistps
in
cmpsl
adc
jl
enter
arpl
stc
and
icebp
cmc
xor
mov
icebp
mov
call
in
pop
ret
decb
cld
xor
cmp
xor
icebp
loopne
loopne
inc
addl
mov
cmp
in
mov
sub
arpl
shrb
or
push
xlat
in
loope
mov
jo
dec
mov
adc
inc
xchg
mov
inc
jl
push
pop
data16
cmp
sub
xor
or
jb
rclb
out
lret
fcoms
je
push
fcoms
mov
adc
imul
adc
mov
adc
outsb
es
shlb
adc
xchg
xor
push
xchg
xor
test
iret
mov
icebp
push
mov
shrl
cli
call
mov
dec
sbbl
pop
mov
push
xchg
jl
aam
cmp
mov
mov
popf
and
mov
outsl
fstpt
mov
nop
or
cmp
mov
push
pop
sub
cmpsl
enter
inc
cltd
jg
push
out
mov
cmpsl
jge
push
push
popf
ret
push
movsb
scas
out
scas
cli
jg
cs
shll
sub
jmp
xchg
in
les
push
and
sbb
lret
aas
adc
mov
popa
lods
dec
push
cmp
movsb
xor
insb
adc
std
jl
jbe
pop
leave
push
mov
stos
int3
aas
jns
jle
and
jmp
push
inc
ja
subb
jbe
les
mov
les
loopne
subps
cli
pop
jb
andb
iret
outsb
cmp
insb
sti
aam
fwait
mov
jge
pop
adc
and
mov
and
inc
dec
mov
jbe
int
shl
push
or
xchg
pushf
cld
xchg
dec
jecxz
pop
xor
inc
int
aad
mov
mov
pop
or
mov
mov
sub
lods
xchg
stc
dec
out
push
out
adc
pop
xor
xchg
sti
incb
sub
pop
mov
dec
stos
dec
add
xor
jno
cmp
inc
push
js
data16
cmpsb
ja
sub
lret
in
test
loop
or
xchg
push
xlat
jle
in
sub
and
aam
rol
lock
mov
mov
inc
outsl
dec
dec
loop
imul
push
mov
sub
loopne
dec
xor
or
ror
and
test
or
popf
and
cltd
dec
pop
lods
insl
lods
leave
stc
add
imul
jecxz
dec
inc
adc
xchg
xor
xor
add
pop
xchg
push
shr
cmp
adc
jle
cmp
inc
es
pop
scas
mov
hlt
push
rolb
test
test
mov
inc
ja
ret
or
mov
imul
add
into
adc
xchg
mov
dec
push
xlat
dec
sub
xor
pop
jbe
sub
out
data16
loope
adc
int3
cmc
xor
pop
sahf
mov
sahf
push
pop
cmp
pushf
pop
and
cltd
js
inc
mov
dec
mov
fnstcw
int
inc
jno
lods
pop
add
mov
sub
lret
jge
or
mov
out
mov
ss
xor
dec
fwait
push
and
test
shl
mov
mov
iret
and
and
loop
mov
cmpb
scas
inc
sbb
xchg
popf
adc
xchg
sub
push
out
in
out
aad
xchg
aad
inc
or
repz
sbb
push
in
pusha
pop
int
pushf
pop
jns
dec
mov
adc
jo
aas
decl
inc
sti
out
lock
pushf
fsubrl
ljmp
adc
scas
pop
dec
jl
repz
pop
adc
fistps
sub
dec
nop
movsb
ficomps
mov
int3
int
cmp
pop
mov
mov
sbbb
mov
outsl
pop
hlt
adcb
dec
mov
jae
sub
mov
in
pop
shl
cld
jns
or
xchg
ret
test
mov
js
sbb
and
subb
sub
jl
leave
xchg
pop
jne
xchg
in
add
bound
pop
pop
nop
xchg
push
adc
xor
xchg
lods
xchg
lret
adc
mov
out
jae
xchg
scas
sbb
dec
or
mov
xchg
dec
inc
cmp
dec
jmp
cmp
cmp
jge,pn
push
push
sbb
sub
rcr
add
inc
addr16
inc
inc
jg
cmpl
adc
movsb
fsubrs
cmpsb
insl
push
push
lods
jecxz
pop
push
xor
mov
shrb
adc
inc
imul
xor
ja
sub
arpl
xor
cmpsl
pop
push
fnsave
cmpsl
fnsetpm(287
dec
cld
lea
jo
je
inc
xor
jnp
push
imul
or
and
cmp
sub
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
push
test
jnp
divl
or
movsl
adc
enter
clc
icebp
xchg
xchg
testl
and
ficomps
jecxz
popa
test
jae
adc
adc
shrl
or
jb
rcrb
lret
xchg
mov
cmp
xor
mov
xor
xchg
iret
ljmp
jno
lret
cmp
out
loope
lahf
mov
adc
testb
adc
push
xor
aad
stc
jl
xchg
jl
enter
mov
xor
stos
pop
stos
or
cmc
cltd
sbb
pop
lds
pop
and
ret
xorl
cmpsb
add
mov
mov
cmc
arpl
or
add
rcr
jge
aad
or
lret
int3
insb
insb
mov
jns
mov
xchg
imul
pop
xchg
fstps
dec
das
mov
aas
dec
mov
xchg
cltd
xor
push
aam
in
and
sarl
sub
mov
std
add
dec
movsl
jo
insl
popa
inc
mov
mov
mov
es
cmpsl
lret
enter
and
mov
sbb
push
in
pop
and
loop
test
bound
shlb
jo
cmp
push
in
cmp
push
push
imul
ror
testb
arpl
and
dec
lods
stos
sti
rcrb
lock
std
inc
imull
lods
xlat
test
es
ds
sbbb
imul
add
filds
out
jo
shlb
mov
loopne
in
mov
push
cld
adc
fbld
xor
pushf
push
jp
adc
int
cltd
xchg
movsl
mov
mov
into
xchg
xchg
dec
popa
adc
jle
iret
mov
jno
bound
cmp
enter
mov
sbb
out
adc
xchg
lahf
js
jb
jge
xlat
daa
sbb
jo
pop
jmp
adc
push
and
data16
mov
pop
test
nop
mov
frstor
aas
popf
aad
cmp
test
cli
push
stos
movsb
mov
inc
mov
ljmpw
jp
mov
js
jns
mov
xlat
mov
cmp
dec
lret
sub
cltd
push
aas
mov
loop
std
mov
xlat
push
out
push
lods
dec
jne
mov
negb
fidivl
ds
mulb
andb
mov
cmp
adc
ret
adc
out
popa
sbb
fsts
or
fimull
mov
xchg
fldenv
xor
adc
movl
sarl
dec
les
lods
pop
rclb
std
xchg
dec
loopne
bnd
fucom
cld
jge
sbb
or
enter
mov
pop
sub
repnz
std
je
out
xchg
inc
shrl
sbb
ss
cld
sub
sahf
sub
mov
adc
subb
jae
movsb
pop
push
sbb
pop
push
fadds
xor
adc
jl
add
cmpsl
jne
ret
sub
mov
lds
icebp
pushf
insl
pop
and
mov
and
mov
in
mov
jecxz
sarl
xchg
adc
cmp
cmp
scas
mulb
jl
test
fdivr
mov
int3
jl
enter
and
push
scas
pop
in
push
roll
cmp
cmp
adc
add
nop
pop
cli
subl
jb
add
xor
mov
pop
sarb
mov
sbb
sbb
andl
insl
aas
lret
mov
fabs
mov
sbb
mov
test
jae
jo
sbb
mov
mov
inc
xor
or
outsb
scas
sahf
mov
xlat
int3
adc
imul
or
fisubs
xlat
mov
jmp
in
les
adc
addr16
sub
jge
jle
shlb
inc
test
bound
ret
push
int
loope
fwait
jbe
add
xor
mov
inc
aam
mull
and
stos
loop
pop
andb
das
cmp
pop
push
push
or
add
enter
sbb
pop
jno
jno
mov
sbb
push
add
adc
icebp
sbb
fstl
inc
cmpb
lds
cwtl
fwait
xchg
and
sbb
dec
add
idivl
scas
mov
dec
xor
or
dec
stos
es
subb
test
pop
push
rcll
mov
mov
inc
test
xchg
cmp
test
push
mov
sub
xor
fimuls
pop
js
jno
jmp
push
iret
jg
enter
dec
lahf
sub
adc
xor
adc
push
pop
mov
mov
xlat
add
dec
add
shl
sbb
mov
ret
cmc
orb
sub
ret
mov
int3
hlt
pop
adc
gs
fcomps
lea
ret
cmp
fs
jns
mov
leave
repnz
aaa
sarb
mov
rclb
mov
rclb
and
sti
mov
lahf
mov
inc
jp
sub
sub
in
push
mov
movsl
mov
jge
sub
pushf
cli
pop
jecxz
ja
nop
into
or
fisubrs
hlt
and
aam
push
mov
fsubrl
sub
lea
lock
sbb
pop
add
fs
fmull
movb
xchg
and
jno
pop
pushf
aad
mov
xchg
lret
jmp
out
imul
or
lret
dec
shrb
cld
sbb
push
leave
lret
cmc
adc
mov
lods
and
mov
xchg
push
stos
adcb
inc
pop
cs
in
mov
stos
and
outsl
adc
mov
cmp
lods
scas
push
sbb
js
scas
and
clc
mov
imull
pusha
popa
pop
cmc
insl
lret
ficoms
pop
mov
cwtl
jmp
mov
ficomps
addr16
mov
test
xor
fistpl
and
jmp
jns
inc
sub
mov
push
insl
push
mov
or
in
cmp
popa
mov
dec
and
decl
or
mov
pop
cmp
mov
jp
mov
jecxz
loopne
cmp
sub
inc
mov
sub
loop
mov
in
inc
jge
sbb
dec
bound
jl
stos
mov
sub
xchg
jmp
imul
jle
pushf
add
sahf
pusha
sti
dec
sbb
dec
sub
and
mov
movsb
les
in
es
dec
loope
adc
mov
dec
fimuls
dec
mov
and
lods
xor
sbb
mov
cmp
in
aad
jp
fiadds
fnstsw
mov
jo
mov
lret
push
inc
movsb
xor
xchg
mov
add
aam
out
data16
shll
cmp
mov
daa
xor
mov
fidivrs
scas
mov
xor
test
xor
fadds
mov
aas
orl
fcmovnb
mov
add
jl
mov
out
jb
jl
xor
int3
jmp
sub
gs
cli
sarb
jecxz
add
jge
outsb
gs
lcall
mov
dec
add
es
inc
test
cltd
test
roll
mov
sub
cmp
or
dec
jge
sti
out
gs
xchg
gs
pusha
xorl
dec
xor
lods
pop
push
jae
sub
ret
xchg
cld
out
inc
and
push
inc
or
jb
mov
xchg
xchg
jo
movsl
in
jbe
daa
add
sbb
mov
ja
clc
imul
sbb
lds
mov
mov
lahf
mov
punpckhbw
sbb
mov
ss
pop
pop
sbb
cmp
sub
in
bound
add
xchg
ficompl
xor
mov
gs
xchg
xor
stc
mov
mov
decb
add
jp
js
shl
inc
xchg
scas
lea
cmp
fsubrs
movsl
orl
lods
xchg
movsb
aad
xchg
jp
ret
fbstp
mov
lahf
mov
shrl
ret
or
lock
stos
push
adc
fisttpl
ret
into
xor
sbb
ss
adcl
push
fldl
pushf
and
push
addr16
add
dec
stc
lret
sbb
repnz
or
fsubl
outsb
es
pop
mov
fildl
push
mov
lods
xchg
pop
inc
in
inc
int3
or
lods
add
faddl
sbb
push
loop
ds
loop
notb
ja
jae
or
movsl
mov
jbe
mov
les
xor
add
loop
pop
adc
or
inc
das
outsl
mov
mov
pop
test
pop
inc
hlt
or
adc
sub
sbb
adc
cli
mov
ret
leave
shl
and
add
cmp
pushf
lret
leave
lock
lds
and
push
pop
or
das
fchs
adc
clc
mov
adc
out
inc
xor
adc
add
mov
cmp
sbb
leave
add
leave
jo
mov
sti
dec
jl
and
jmp
mov
test
aam
jp
pop
sub
repz
mov
cmpsb
dec
jno
ss
mov
pop
dec
inc
or
inc
inc
test
jl
leave
mov
rcl
je
mov
or
jle
mov
dec
ds
or
add
jecxz
xchg
rol
test
push
out
jo
nop
nop
lock
loop
aaa
mov
rep
mov
pop
ss
lea
cmp
sti
lcall
pushf
movsl
or
loopne
pushf
xchg
cmp
jge
ucomiss
inc
jo
in
arpl
pushl
outsl
arpl
repnz
adc
inc
mov
movsb
ljmp
aas
xor
fisttpl
stc
pop
enter
mov
add
jb
adc
fsubl
enter
mov
insl
jmp
popf
sub
ret
jmp
mov
popa
mov
fwait
in
rorb
push
data16
adc
jge
sub
aaa
repnz
mov
jp
cmp
sbb
gs
pusha
push
js
mov
imul
adc
lea
int
fbstp
mov
lret
mov
adc
stos
or
rclb
sbb
cltd
fs
xor
inc
jecxz
fmul
adc
add
fstps
xchg
enter
pushf
out
jecxz
jmp
mov
jae
dec
fsubrl
pop
add
cmc
add
pop
ret
daa
xor
insb
outsl
ds
mov
cmp
repz
ss
add
lock
ds
cmp
mov
xor
pop
pop
xor
movsb
sahf
mov
cmc
mov
and
jno
roll
push
ja
insl
mov
cmpsl
or
sub
setl
xchg
pop
dec
js
mov
mov
rcll
dec
sti
jnp
pop
in
sbb
sti
fs
loopne
call
push
sarb
int3
out
icebp
je
inc
fidivs
mov
jnp
jmp
cmpb
jmp
std
push
call
dec
pop
les
pop
jno
push
pusha
aaa
data16
rorl
movsb
aaa
xchg
cmpsb
inc
jge
inc
pop
cmp
lret
daa
push
scas
icebp
mov
stos
pushf
sahf
test
pop
adc
jmp
jo
bound
adc
xor
test
add
mov
insb
in
xorb
outsl
xchg
add
movb
movsl
ret
dec
out
cmp
push
cmp
sbb
and
push
call
dec
xor
pop
fdivl
ljmp
xchg
pop
xchg
notl
outsb
nop
bound
add
sarl
out
movsb
loope
rcrb
inc
insl
test
hlt
repz
sti
adc
sbb
rcrb
rorl
jle
mov
ret
loopne
ljmp
repnz
xor
cmp
xchg
ja
cwtl
xor
ret
xor
cmp
les
or
fimull
out
push
or
sub
and
hlt
adc
jo
insl
sti
mov
xlat
mov
ljmp
es
adc
test
jmp
mov
xor
sbb
into
pop
jle
lret
rcl
cmc
iret
jae
movsl
jb
loopne
mov
jo
or
mov
inc
shll
xchg
lods
cltd
addr16
insl
mov
mov
in
fstsw
int3
ja,pn
das
add
sti
xor
cmp
jb
jns
and
add
cmpsl
or
movsl
xchg
sbb
pop
hlt
inc
scas
imul
push
mov
decb
adc
xchg
sub
adc
stos
insl
mov
ret
cmpsb
xchg
addr16
cmc
cmp
shrb
sub
ss
add
jo
inc
es
xor
lcall
call
xor
outsl
pop
rcrl
inc
bound
aas
lahf
xchg
xchg
sbb
fnstsw
jge
adc
mov
es
aaa
std
fsubrs
sub
call
into
jns
pop
jns
aad
fisttpl
fisubrs
outsl
sbb
jmp
xchg
dec
cmpsl
mov
mov
out
shrl
inc
std
repnz
xor
jne
jb
in
xchg
pop
imul
outsl
scas
das
lods
pop
daa
push
adc
pop
test
cwtl
sahf
test
fistpll
adc
push
aas
test
nop
jle
jle
pop
xor
stos
jo
and
and
xchg
loope
push
enter
test
jno
imul
jae
adc
in
mov
mov
mov
out
xor
mov
jmp
pop
push
insb
adc
push
sbb
or
and
ret
lea
cli
xchg
dec
repnz
dec
aad
fldl
sbb
popf
fadds
and
cmp
outsb
repnz
les
and
arpl
mov
scas
lret
push
xor
mov
frstor
sbb
into
fiaddl
mov
popa
sbb
dec
push
mov
in
jmp
adc
dec
pop
or
or
aas
movsl
call
jmp
lock
int3
fs
inc
iret
andb
std
add
movb
pop
ret
out
iret
mov
xor
adcb
add
mov
adc
imul
pop
or
mov
mov
mov
data16
sbb
mov
inc
clc
dec
shll
push
hlt
pop
rcrl
jle
sbb
fdivp
xor
push
mov
gs
aas
cld
pop
inc
mov
mov
insb
mov
shll
test
lock
subb
cwtl
add
mov
out
cmpsl
ss
divl
cwtl
fxch
fdivp
out
ror
push
ret
push
cmp
mov
popa
xchg
in
mov
inc
or
xor
push
mov
fs
pop
in
dec
daa
mov
ds
sbbl
out
rcrb
xor
add
dec
mov
std
jg
cmp
and
inc
sub
inc
mov
es
push
inc
std
jbe
jno
adc
cmp
sub
pop
outsb
loop
sub
inc
in
testb
test
jp
leave
lahf
ret
cmp
dec
cmp
pop
mov
mov
cs
cli
icebp
mov
push
xor
jne
xchg
pusha
das
add
fldt
xchg
pop
movsb
add
mov
in
lods
pushf
mov
mov
cmpsl
sbb
jmp
repz
sub
fnstsw
xor
cmp
cltd
je
icebp
push
jmp
scas
aad
pop
cmp
push
leave
mov
dec
cwtl
paddusb
movsb
pop
pop
loopne
mov
bound
dec
int3
push
pop
fsubrp
idivb
idivb
sub
mov
shll
push
stos
fs
repz
lahf
sbb
fisttpll
and
shll
cmp
xor
fsubrl
lcall
lcall
jp
call
sub
clc
lahf
in
bswap
fcmovb
out
add
push
jo
dec
sub
push
push
jl
popf
frstor
loop
add
divl
pop
cmp
test
xchg
pop
into
inc
cmc
mov
fdivs
je
inc
pop
adc
inc
push
push
jle
mov
notb
and
nop
int3
gs
in
lods
adc
sti
mov
mov
push
mov
or
dec
jno
test
sbb
int
rolb
push
jle
cld
or
xchg
cmpsb
mov
mov
adc
pusha
mov
add
or
mov
in
add
test
xchg
scas
cli
pushf
cltd
ja
dec
push
scas
adc
mov
mov
pop
inc
into
mov
mov
fidivrs
notl
cmp
dec
jmp
icebp
jecxz
lret
movsl
dec
cltd
inc
push
xchg
push
mov
inc
pushf
leave
cs
cmpsb
xor
add
loop
lods
xor
inc
aad
int3
push
jns
fdivrs
push
fucompp
dec
and
cmp
jmp
lahf
pop
add
sbb
cltd
mov
xor
cli
jo
rcrl
popf
fadds
ret
cmpsb
iret
xor
outsb
in
ja
aas
test
mov
lods
inc
rclb
sub
shrl
addl
inc
push
mull
lahf
popw
xchg
xor
ja
jmp
gs
xor
add
or
icebp
pop
xchg
pop
rol
fwait
jmp
adc
add
in
sbb
out
rcrl
imul
aam
insl
and
jno
push
call
jae,pt
enter
out
imulb
pop
movsl
sub
dec
pop
mull
inc
mov
enter
int
aad
sub
xchg
lods
cmpsl
push
push
out
inc
fldl
daa
dec
iret
push
or
xchg
xchg
mov
in
push
inc
inc
add
pop
dec
sub
ss
jns
xchg
hlt
fstps
mov
pop
lahf
or
xor
push
jns
mov
sbb
xor
jg
xchg
jg
push
movsb
add
mov
orl
pop
aad
add
and
inc
rcll
and
xor
in
and
adc
shll
inc
push
lock
adc
push
jnp
xchg
sbb
pop
inc
into
and
and
test
loop
push
bound
xor
push
dec
cli
pop
iret
mov
ja
pop
jo
insb
addb
and
out
lock
frstor
inc
movsl
sub
out
jb
dec
push
jecxz
mov
cld
aaa
push
pop
mov
mov
test
scas
mov
dec
sbb
std
push
jle
out
adcl
loopne
ds
jecxz
enter
jl
lret
movsl
sbb
jg
cmpsb
in
push
adc
imul
aas
aad
or
mov
jno
mov
aaa
int
jecxz
push
iret
mov
jmp
pop
rol
and
mov
or
mov
mov
cmp
ljmp
jo
sbb
xchg
loopne
stos
sub
cmp
dec
mov
into
pop
testb
jnp
call
mov
or
jnp
subl
dec
inc
lret
or
loopne
out
and
xchg
pop
add
test
sbb
popa
jne
jbe
stos
pushf
js
sbb
xchg
jno
inc
hlt
test
push
loope
subl
jb
adc
mov
lds
out
and
pushf
inc
pop
cmp
push
lcall
lods
stos
pop
lods
adc
xlat
jne
stc
pop
dec
mov
jp
test
inc
mov
ja
sub
shl
and
push
xor
aam
xchg
out
mov
mov
icebp
sbb
cmp
jnp
xor
popf
lsl
fcoms
and
into
loope
sarl
dec
cld
adc
push
push
cmp
xor
sbb
scas
std
faddl
inc
or
dec
mov
cmp
inc
cli
sub
push
out
cmc
inc
jae
cmp
iret
testl
pop
pop
xchg
aam
pop
fs
sub
out
subb
mov
repnz
cmc
daa
loope
sahf
mov
xor
xchg
out
int
jmp
repnz
jge
xchg
notb
push
sub
cmp
mov
inc
aam
gs
sub
jae
fldl
push
lret
addr16
loop
push
xlat
cmp
pop
dec
cwtl
mov
adc
mov
lock
shlb
adc
aad
push
jl
cmpsb
or
insb
cmpsb
mov
mov
dec
stos
or
es
xlat
pop
cmp
andb
xlat
pusha
data16
cmp
push
and
and
lret
mov
inc
aas
es
movsl
mov
sub
dec
iret
aaa
jnp
mov
or
push
sarb
rorl
or
xorl
cmpsl
xchg
scas
les
xorl
inc
imul
in
bound
cmp
push
cmp
call
sbb
outsb
cld
stos
mov
xchg
push
pop
inc
xchg
ret
dec
ljmp
inc
push
inc
fs
push
negl
mov
loop
and
fdivp
lret
aam
adc
xchg
sbb
sub
add
pop
jns
mov
call
cmc
popf
cmp
add
jns
and
testl
pop
sahf
pop
mov
sub
mov
hlt
or
sbb
sub
inc
mov
mov
mov
sub
jecxz
call
xchg
jno
jle
jno
aaa
shl
jp
dec
jmp
adc
inc
insb
shl
xchg
outsl
and
inc
mov
jmp
in
hlt
inc
repz
pop
inc
pop
in
jge
sbb
push
dec
xchg
jbe
push
sub
sbb
inc
lret
mov
cmp
or
in
cmpsl
outsb
add
push
add
int3
adc
pop
mov
adcl
push
stc
orb
fldt
cmc
mov
push
jmp
outsl
faddl
jb
adc
pop
lods
ret
mov
out
out
loop
out
fisubs
out
xor
ficomps
jo
aad
jo
call
dec
mov
es
xchg
les
into
jae
rclb
and
dec
test
sub
xchg
jecxz
test
xchg
push
inc
cmpsb
cmpsl
cmp
jnp
inc
subb
ss
cmp
testl
in
inc
mov
sub
add
mov
js
or
mov
inc
imul
mov
mov
pop
je
ficomps
sbbl
push
test
mov
rol
rcrb
repz
xchg
pop
movsb
or
jae
ret
hlt
imul
xchg
out
xchg
cmpsl
jecxz
aam
mov
stos
sbb
dec
xor
ss
dec
mov
scas
inc
pop
stos
repnz
bound
fldcw
int
inc
inc
and
cmpsb
insl
and
xchg
les
mov
and
mov
jne
push
jnp
xchg
js
leave
cltd
dec
in
dec
es
xor
incl
mov
sbb
lods
lds
je
inc
int3
or
daa
pop
pop
jmp
aad
stos
or
ja
out
in
mov
out
dec
iret
cmp
push
xchg
lret
cmp
push
mov
insl
mov
in
push
sub
xchg
mov
insb
mov
stc
int3
test
cmpsb
sub
pop
add
outsl
test
mov
mov
add
xor
jge
lret
popa
fsubl
test
pop
testl
sbb
jne
adc
packssdw
stos
ljmp
into
push
mul
add
xor
mov
cmpsb
adc
daa
xchg
mov
jp
ret
fwait
mov
adc
aaa
xor
mov
lods
or
inc
enter
mov
stos
rclb
cmp
xlat
or
mov
or
mov
sub
stc
cmp
mov
fwait
lock
dec
cli
xchg
shl
sbb
ljmp
mov
imul
shlb
pop
mov
add
adc
sbb
pop
jg
lea
sahf
mov
adc
or
jle
dec
movsl
mov
mov
jmp
dec
adc
repz
out
inc
mov
std
int
sbb
jbe
popf
mov
push
das
xor
out
enter
lods
mov
jmp
jp
int
mov
sbb
push
jecxz
inc
xchg
mov
push
testb
xor
push
add
loopne
sahf
jae
xchg
scas
test
repnz
aaa
ret
sti
pop
hlt
add
add
push
inc
dec
div
fildll
dec
popa
enter
xor
in
mov
xor
mov
dec
push
popl
mov
sti
subl
sti
dec
jge
xchg
inc
dec
aam
jo
test
ja
stos
lahf
jnp
mov
int3
das
ljmp
cmp
mov
sbb
je
daa
cmp
sub
mov
loop
lock
lahf
inc
hlt
inc
lods
xor
ljmp
inc
push
sbb
fdivrl
add
inc
mov
and
push
push
fisubs
in
js
jg
add
dec
push
inc
pop
cwtl
pop
dec
popa
test
je
add
loopne
mov
movsl
push
adc
mov
clc
mov
mov
call
and
and
and
in
jne
cmp
lahf
jl
les
pop
dec
mov
or
sub
aaa
adc
fisttpl
ret
fwait
das
sbb
inc
aad
push
in
xor
sbb
push
sti
pop
ficomps
push
push
lea
int3
mov
push
mul
xor
cmp
aam
call
dec
add
sub
jp
cmp
sbbb
add
popa
mov
popfw
aam
adc
cmp
bnd
jo
scas
mov
orl
xorl
rclb
mov
push
add
push
adc
xor
jecxz
fldcw
xor
ss
insb
out
movsb
imul
cmp
outsb
mov
jecxz
sbbl
repz
add
push
out
dec
fdivs
jno
mov
dec
aas
pusha
les
orb
lahf
ds
xchg
mov
popf
nop
scas
sbb
pop
sbb
jo
das
jmp
call
adc
pop
call
std
leave
add
fdivrp
pop
imul
and
jge
fmuls
adc
add
pop
arpl
bound
lcall
xor
mov
cmp
or
repnz
inc
lcall
ss
dec
xor
adc
push
outsl
bound
sub
subl
and
arpl
xor
and
xchg
and
push
push
add
pushf
aas
or
cwtl
add
mov
adc
insl
dec
mov
push
or
cs
in
aaa
cmpsb
adc
aas
xor
cmc
mov
or
push
add
in
iret
push
adc
dec
test
push
add
mov
xorl
in
je
push
imul
xor
and
jp
jns
sbb
shlb
testl
ret
mov
popl
lcall
cmp
or
dec
cli
imul
pop
sti
lea
mov
fisttpl
int
popa
mov
clc
call
out
in
or
add
call
shlb
mov
imull
jo
mov
lea
cmc
dec
addl
sub
sbb
mov
fdivs
jecxz
test
or
dec
idivl
fwait
inc
mov
mov
into
push
rcrb
lret
mov
mov
jo
addr16
pop
dec
repnz
mov
movsb
xor
dec
cmp
sbb
sbb
adc
xchg
aad
sub
push
adcb
sahf
lcall
repnz
movsb
fmull
sahf
jmp
repz
add
pushf
xchg
cmp
or
sub
icebp
rcll
mov
dec
xlat
scas
scas
mov
fidivrs
sbb
lahf
or
sti
movsb
cwtl
lahf
fcomi
or
xor
sub
sub
push
enter
xor
sti
jp
mov
out
into
inc
cli
clc
cmp
adc
cmp
mov
pop
es
jnp
adc
xchg
cmp
mov
enter
dec
push
out
mov
jnp
gs
sbb
scas
scas
sti
call
leave
lock
bts
xchg
into
pop
jg
inc
in
push
jo
cli
imul
shll
in
movsb
ficompl
jae
sbb
cmp
sahf
dec
sbb
or
pop
addb
xchg
pop
dec
mov
mov
inc
ss
aad
clc
push
lret
fnsave
sub
push
push
jmp
sbb
pop
or
mov
inc
or
push
sbb
out
mov
push
pop
inc
push
stc
pop
add
js
in
insb
and
and
sub
jnp
add
pop
aaa
pop
or
xchg
ljmp
aaa
add
scas
loopne
arpl
sub
jno
out
add
gs
dec
inc
scas
pop
movl
out
pop
add
outsl
dec
push
mov
push
add
lea
dec
in
cmpsl
adc
jae
mov
outsl
shl
jle
push
cmp
fbld
sbb
pop
das
das
faddl
in
sbb
imul
addb
nop
xchg
adc
mov
or
imul
out
xor
enter
mov
jno
cmp
xchg
mov
push
jae
es
scas
fwait
xchg
movsl
loopne
pop
lahf
dec
addr16
cmc
xchg
jo
lods
aad
pop
bound
pusha
movaps
inc
incb
mov
fs
jae
jbe
stos
insb
mov
ja
cmc
mov
call
repz
xchg
outsb
rcrl
testl
cmp
mov
fld1
adc
pop
out
mov
iret
cld
lcall
pop
divb
std
mov
inc
aaa
in
mov
lcall
dec
lock
or
xchg
iret
push
push
fnstsw
dec
push
jle
dec
mov
sub
ficompl
jle
sbb
or
je
sbb
ret
mov
shlb
arpl
out
xchg
pushf
aaa
sbb
pop
and
adc
inc
mov
stos
jp
aas
mov
xchg
add
cmc
mov
loope
sahf
jp
sbb
cmpsb
lock
out
imul
mov
dec
push
dec
jp
and
mov
into
or
imul
repz
mov
or
leave
lret
cmp
lcall
sub
inc
int3
mov
scas
cltd
adc
jp
cmp
mov
xor
nop
mov
push
push
inc
fidivrl
insb
in
push
push
inc
shlw
mov
add
test
sub
shll
lea
bound
push
xor
jmp
mov
mov
xor
sbb
daa
xchg
cmpsl
in
xor
mov
lcall
lret
dec
fistps
dec
mov
sub
loopne
aam
mov
mov
cmp
out
lret
cs
cmp
cmp
sub
jne
cmp
push
lret
or
es
jg
lret
mov
jge
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
lret
daa
cmc
fnstsw
call
les
pusha
push
out
sbbb
adcl
leave
cltd
xchg
fwait
je
in
pop
shrl
inc
xchg
out
xor
jecxz
shl
in
pop
andb
or
cli
dec
jbe
xor
push
insl
fisttpll
lret
pop
push
not
xor
jno
sub
adc
push
ss
pop
icebp
pop
sahf
arpl
popa
xor
sub
lahf
push
cmc
dec
popa
adc
mov
sub
cmp
fiaddl
jne
fucomi
mov
outsl
filds
pop
cmp
cli
ret
pop
insl
imul
sahf
mov
cmpsl
fidivs
xor
sbb
sub
in
pop
mov
lea
rcrb
adc
aas
lds
mov
mov
es
xchg
xchg
lret
adc
mov
rcr
fsubl
loopne
push
fldenv
push
hlt
xchg
test
push
inc
inc
xor
stc
and
imul
and
mov
mov
popf
aas
mov
fnstsw
mov
loop
push
mov
bound
je
rcr
xor
pop
bound
aam
fisubrs
push
aas
pop
and
and
ret
ljmp
dec
sbb
xchg
loopne
sti
fdivrl
out
sub
sub
pop
adc
mov
pop
ds
mov
stos
jb
sub
inc
fiaddl
cmc
punpcklwd
jp
fwait
and
cmp
jo
dec
dec
push
xchg
xor
cmp
or
adc
cmc
cltd
push
and
jo
jno
inc
pop
pop
lret
inc
cs
inc
add
inc
pop
mov
push
push
xor
cmp
insl
mov
shlb
dec
inc
mov
jle
sub
std
xor
fwait
adc
pushf
xor
mov
xor
jae
or
sti
roll
xchg
dec
mov
fdivrl
xor
sub
push
push
icebp
pop
adc
push
push
in
or
cli
mov
cmp
mov
outsb
push
xor
push
sbb
mov
psllq
dec
xchg
dec
movsb
xlat
loope
xor
and
jmp
frstor
imul
adc
cmpsl
inc
sbb
and
leave
arpl
mov
daa
inc
js
pop
clc
add
jp
or
jb
std
loop
mov
and
lret
addr16
jno
int3
int3
dec
popa
loop
arpl
mov
clc
in
ret
add
je
mov
jl
out
jnp
and
mov
inc
sub
pop
and
jp
xchg
adc
push
fistpl
cmp
fildl
enter
mov
out
mov
adc
bound
mov
or
es
lcall
andl
cltd
outsl
out
inc
mov
lahf
ljmp
adc
or
add
push
cmp
nop
mov
repz
xchg
ret
push
aam
insb
les
or
es
cmc
mov
loop
cmp
ss
sbb
sub
push
aaa
scas
mov
xchg
popf
inc
out
lahf
and
popf
scas
cs
pop
pop
pushf
jp
jle
test
sub
out
sbb
push
pop
xor
repnz
and
mov
xchg
mov
iret
icebp
pop
inc
push
xchg
repnz
into
lahf
push
push
sahf
xchg
push
into
dec
mov
sub
les
pop
xlat
in
loop
or
cmpsb
ficompl
movsb
mov
cli
lds
xchg
mov
jecxz
push
dec
sub
fistps
and
sbb
push
pop
repnz
mov
ds
cld
jnp
dec
lahf
fisubrl
enter
data16
popf
lods
push
std
and
xchg
inc
gs
and
cmp
sub
addr16
jle
adc
daa
cltd
loope
fiaddl
lret
rclb
jb
pop
xchg
lds
ficoms
or
cmp
and
cmpsl
jo
fwait
ret
mov
push
fsts
push
cld
cmc
outsl
sbb
test
mov
jnp
mov
aam
jb
ja
out
std
jecxz
or
unpckhps
sahf
cmp
in
leave
sarl
imul
dec
sbb
dec
mov
push
or
pop
sub
mov
jmp
mov
movsb
sub
out
add
sbb
fists
xor
or
push
movb
adc
mov
pop
push
shll
and
int
jecxz
fcomps
and
and
loop
cwtl
dec
stos
jecxz
xchg
notb
xchg
sbb
and
pop
data16
sti
and
xchg
in
js
add
inc
jnp
and
pop
popf
pop
daa
pop
mov
and
xchg
ret
xor
loopne
push
dec
jno,pt
adc
jge
xor
sub
movsw
movsb
filds
adc
ljmp
pop
pusha
mov
js
adc
lahf
sbb
js
sub
add
jno
movsb
pop
dec
push
inc
mov
push
push
jp
hlt
insl
sub
add
fadds
pop
pop
fdivl
xor
pop
test
insb
jge
aas
mov
mov
ret
xchg
push
dec
repz
mov
xchg
xor
pop
sbb
and
mov
jmp
cli
cmp
dec
dec
pop
add
inc
enter
addr16
shrb
pop
ret
xlat
sahf
std
push
push
mov
xor
fnstcw
sbb
inc
xchg
jp
xor
int3
cmp
inc
push
movsl
test
pop
daa
idivb
rcl
mov
jbe
mov
cmp
scas
mov
xchg
and
inc
sub
adc
fldcw
call
and
out
jl
pop
push
outsb
cltd
mov
jno
and
push
xchg
test
scas
add
jmp
jecxz
add
xchg
js
and
mov
cltd
js
mov
and
xchg
cmp
pop
std
cld
in
xlat
test
cmp
adc
outsb
movsl
into
push
fbstp
imul
pop
ds
jno
mov
jmp
jo
or
lahf
shll
cmpsl
add
push
fmuls
cmp
or
sbb
dec
sub
loope
call
js
jg
mov
test
sbb
xor
cli
loopne
inc
adc
lret
jecxz
inc
xchg
sbb
xor
popf
mov
scas
sarb
cli
in
stc
jnp
jle
lret
push
mov
fld
out
jge
xor
scas
add
sahf
fidivl
and
cmp
mov
or
loop
mov
scas
and
pop
daa
inc
out
cs
in
xchg
stc
mov
cmpsl
xorb
enter
cmp
aad
imul
xor
add
or
enter
into
push
outsl
fdivrs
mov
lock
push
mov
jle
test
stos
mov
jne
jns
addr16
pop
mov
popf
push
xlat
hlt
mov
jae
cmp
lds
mov
xor
pop
ljmp
pop
mov
sarl
scas
xor
loope
lret
mov
in
add
movb
das
faddl
dec
in
lock
rorb
shll
jo
mov
scas
sbb
xor
nop
ffreep
cmp
repz
mov
push
arpl
orb
mov
fistpll
xchg
jno
insb
and
jmp
pop
pop
pop
or
arpl
imul
bound
and
inc
xor
xlat
mov
cmp
sbb
jns
cmpl
ret
lret
jo
inc
or
pusha
mov
pop
jae
cmp
insb
or
sbb
adc
push
fbstp
cmp
negb
aas
int3
daa
sbb
cmp
call
lret
imul
aad
insb
inc
sub
lcall
inc
aad
mov
inc
mov
sti
mov
xchg
pop
mov
sub
cmp
xchg
jnp
imul
repz
mov
call
push
inc
jns
cmc
fmuls
adc
std
sub
rclb
hlt
xchg
and
fs
fisubrs
mov
push
jl
arpl
clc
inc
add
adc
push
ror
jmp
pusha
cmp
xchg
jae
sbb
sbb
pop
sarl
add
les
xor
inc
inc
loopne
inc
push
mov
jae
and
inc
ss
std
ljmp
adc
mov
shlb
cld
dec
jg
and
adcl
jl
push
js
popf
leave
jb
pop
es
cmp
mov
ret
leave
cmc
mov
out
xor
or
mov
adc
loope
lock
push
insl
jne
add
cmp
cmpsb
adc
ja
or
nop
mov
sub
int3
xchg
mov
mov
dec
sbb
cmpsb
aaa
mov
mov
sub
push
inc
pop
test
iret
jne
cmc
pop
js
mov
cmp
gs
ret
or
mov
addb
scas
fs
test
in
aad
adc
addl
fidivs
inc
add
outsl
scas
pop
jne
sbb
aas
mov
xchg
adc
test
aaa
rep
aad
push
dec
bound
iret
neg
pop
mov
insb
ds
push
aaa
lds
gs
xor
bound
cmp
popf
fadds
lahf
mov
leave
dec
or
push
shlb
sbb
imulb
ret
xchg
stos
mov
lret
out
mov
imul
std
mov
subl
mov
clc
xor
mov
push
inc
negl
stos
inc
inc
xchg
dec
pop
mov
xchg
cli
jnp
add
xchg
mov
jmp
outsb
loope
mov
lods
add
repnz
mov
cmp
fs
push
pop
in
repz
inc
sbbl
stc
mov
inc
out
or
jle
and
pusha
mov
xor
and
mov
loope
sbb
fisttpl
and
int3
xchg
leave
fs
insb
ljmp
push
lock
call
or
adc
jg
addl
inc
ds
hlt
lret
push
leave
stos
ljmp
or
mov
mov
ret
inc
adc
aad
scas
jae
pop
xor
pop
repnz
jmp
add
mov
and
jle
sbb
shll
xor
pop
sub
leave
and
xchg
jnp
jo
or
pop
mov
in
pop
adcb
jmp
adc
cltd
fwait
adc
test
cmc
out
in
push
mov
iret
adc
ret
dec
xchg
push
mov
or
movsb
gs
fmuls
pop
fs
rorb
jge
hlt
inc
xchg
loope
jb
pop
mov
mov
sahf
dec
repz
jecxz
push
mov
mov
adc
cmpb
rorb
xchg
iret
icebp
dec
cmp
pop
cmpl
je
add
loope
push
dec
and
insl
in
mov
out
push
imul
cmp
push
ret
neg
lret
jb
xlat
outsb
jmp
movsb
movsl
xchg
aam
fdivrs
cmp
lods
cmp
clc
jg
mov
icebp
ds
pop
sbb
dec
mov
das
sti
or
test
cltd
mov
cmp
test
or
loope
push
cmpsb
push
jo
hlt
fsts
in
hlt
out
inc
js
addr16
xchg
xchg
cltd
movsb
lret
testl
sub
in
xchg
mov
cmpsl
aad
cs
adc
fisubrl
pop
jo
adc
stos
or
add
dec
add
sub
orb
and
mov
mov
repnz
js
pop
dec
jge
inc
arpl
rcrl
cwtl
js
shlb
push
sub
adc
dec
pop
cmpsl
sbb
in
rcll
out
inc
sub
push
jno
cld
jae
js
mov
aad
xor
subl
or
scas
dec
inc
out
sub
add
jnp
or
addr16
addr16
lods
out
inc
xor
mov
lods
loop
mov
sub
push
inc
test
fisubl
xchg
les
inc
jbe
add
mov
jo
push
js
ljmp
ficoml
mov
or
inc
maxps
in
imull
aaa
pop
jecxz
xlat
test
jecxz
call
sbb
sub
test
mov
sbb
add
mov
ds
imul
out
and
jge
out
fsubrs
lods
mov
xor
movzbl
fmull
or
ret
mov
dec
push
inc
sbb
xchg
cltd
add
mov
out
jno
lods
jecxz
and
inc
lahf
lock
mov
sbb
sbb
adc
fisubrl
push
jge
mov
xlat
sub
xchg
pusha
mov
or
push
add
popf
pushf
movsl
or
addr16
andb
fcmovnb
popf
cmp
xchg
rclb
fldt
xor
or
es
fisubrs
lea
test
jno
mov
xor
adc
sarl
sti
jo
fs
pop
adc
push
xchg
cmpsb
sti
in
aaa
jge
cmpsl
imul
add
inc
xchg
ljmp
sub
cmp
jno
outsl
in
das
fnsave
ret
sbb
aad
push
sbb
sti
dec
notb
add
jmp
push
scas
test
repz
mov
outsl
jmp
pushf
movb
push
sbb
push
mov
sti
mov
stc
jbe
std
into
sbb
cli
clc
shll
mov
hlt
filds
jae
pusha
call
inc
repnz
in
dec
jbe
fs
test
ret
int
mov
insb
mov
lret
out
cltd
xchg
rolb
ficoms
popf
fists
pop
push
es
push
loopne
mov
pop
aam
test
data16
call
addr16
inc
push
aas
aad
mov
xchg
jge
lcall
ret
xor
mov
pusha
mov
dec
aam
cmp
or
imull
mov
mov
scas
ret
test
inc
sbb
out
dec
scas
cmp
popa
inc
js
jmp
rclb
jno,pn
jp
or
or
mov
mov
add
push
out
mov
cmp
inc
aam
inc
pop
mov
mov
jg
rcrl
cmp
push
dec
dec
enter
dec
jae
inc
jae
mov
xchg
dec
movsb
sbb
adc
pop
sub
add
mov
jno
pop
test
movsb
mov
insb
push
or
fldcw
mov
imul
test
scas
leave
lds
int3
jge
decl
insl
adc
lret
or
lods
mov
mov
leave
decl
xchg
jge
into
lods
lcall
jg
je
inc
pop
jecxz
jns
mov
out
add
test
xchg
outsb
sti
xor
xchg
sub
mov
outsl
aam
js
mov
stos
rcl
push
push
sub
xor
sbb
test
cmp
in
push
lea
pop
mov
fimull
subb
or
add
jle
sub
sub
in
sub
push
push
shl
add
ljmp
sub
push
inc
mov
xor
cmc
rcll
add
daa
shr
push
sbb
mov
xor
jne
lods
scas
mov
mov
jmp
push
cmp
rcrl
xor
xchg
lea
xchg
movsb
cmpsb
cmpsl
les
int3
test
gs
leave
jno
into
xor
fdivrl
ret
mov
push
cmp
imul
fstps
sbb
xchg
leave
mov
ljmp
popa
jb
pop
add
sbb
jl
and
lcall
cmp
hlt
in
jno
rclb
gs
inc
cmp
ret
fnstcw
call
fiaddl
jbe
stc
jns
adc
loope
fwait
int
cmpsb
push
jecxz
rorl
mov
jg
ds
sub
sbb
orb
sbb
divl
xor
enter
mov
pop
fs
cmc
sub
lcall
in
gs
jecxz
jo
sbb
nop
sub
mov
addb
cmc
push
mov
cwtl
test
xor
imul
cli
push
mov
add
arpl
or
sub
mov
movsl
or
mov
jle
popa
push
or
repnz
push
shll
add
xchg
inc
add
fbstp
mov
xchg
sti
inc
xchg
idivb
push
dec
lods
cmp
cmpl
xlat
mov
out
adc
loopne
outsb
scas
cmpsb
sub
movsl
pop
inc
or
add
and
pop
sarl
insl
fcmovbe
fimull
mov
loopne
sub
rorl
add
test
jl,pn
xor
not
mov
fdivl
daa
loope
stos
mov
divb
addl
loop
add
jmp
je
jb
insl
sub
je
mov
push
andb
mov
icebp
adcb
in
mov
inc
ret
test
pop
pop
orl
jl
xlat
cmpsb
nop
cmp
into
ja
idivb
add
sbbl
es
jecxz
pop
ja
and
fcoms
ret
loop
bound
ret
arpl
cmp
daa
push
or
fwait
pop
or
push
push
push
ret
loope
or
test
divb
int3
sti
mov
leave
test
xor
cmp
out
scas
fs
xor
dec
push
lret
xchg
xchg
xchg
cli
push
cmpsb
and
test
jmp
push
pop
repz
imul
and
sbb
cmp
xor
sbb
sub
mov
push
mov
loope
sbb
inc
scas
jle
xchg
xchg
subb
sbb
js
jp
decb
cmp
lds
jmp
mov
add
jns
cmp
mov
cmp
push
sahf
aam
sbb
push
xchg
mov
mov
addr16
pop
mov
icebp
fmul
push
add
xor
mov
fistpll
add
kmovb
jo
mov
jb
mov
push
mov
iret
add
aam
jae
negl
lods
mov
mov
dec
ja
fldenv
pop
sub
inc
xchg
mov
jbe
push
lds
aam
shrb
cmp
dec
xor
in
pop
adc
fiadds
shll
leave
mov
scas
shlb
jge
mov
jnp
pop
loop
pop
xor
sbb
sub
das
push
jo
dec
scas
int
mov
scas
sub
and
push
sbb
xchg
push
rorl
push
lret
add
sbb
xchg
or
dec
mov
mov
lods
data16
mov
pop
mov
push
imul
sti
jg
push
mov
popf
std
xchg
mov
imul
cltd
ljmp
lock
push
inc
or
repnz
jge
dec
clc
jne
push
pop
mov
leave
push
add
cmp
mov
cmp
sub
enter
shl
mov
xchg
rcr
pop
sub
adc
movsl
repz
mov
inc
xor
cmp
jge
test
popa
jle
and
ret
std
aaa
or
cs
sub
int
in
mov
mov
bound
js
mov
ja
addr16
lcall
in
aam
sub
pop
aas
and
adc
sti
xchg
out
cmpsb
sbb
scas
jg
mov
dec
add
stos
push
push
pop
sub
lret
mov
dec
fsubr
aad
jno
pushf
xor
test
lods
sahf
mov
mulb
add
lock
fisubl
jno
and
sbb
hlt
lahf
add
sbb
rorl
inc
and
ret
jmp
add
mov
sarb
inc
lret
outsb
enter
pop
ja
add
sti
mov
jge
dec
movsl
jne
adc
jne
sub
or
jg
icebp
pusha
mov
jo
outsl
sbb
movsl
push
mov
test
xor
loope
outsl
mov
mov
call
icebp
sbb
add
push
ret
add
add
nop
jo
mov
repz
cmp
fdivp
mov
jne
fsub
jo
aam
bound
aam
pop
or
mov
lods
out
mov
data16
push
es
stos
cmp
fidivrs
or
pop
cmp
lods
popa
inc
out
shll
push
inc
sub
sub
stc
test
adc
fwait
lret
fcom
push
loopne
scas
jmp
xchg
xchg
mov
orl
data16
jbe
inc
and
adc
xlat
sar
pop
in
sbb
repz
movsl
daa
jge
es
or
popl
jecxz
imul
fnstcw
orl
orb
xor
mov
cmpsl
mov
add
hlt
stos
sub
sti
inc
icebp
mov
ret
mov
cld
push
xor
cmpsb
cltd
scas
in
sbb
cmpsl
shr
sub
mov
aad
cmpsb
pop
in
add
sbb
pushf
cmp
cltd
jecxz
or
inc
scas
mov
fnstenv
scas
pop
movsl
mov
mov
fsincos
mov
inc
repz
ficoms
insl
sbb
std
mov
adc
pushf
dec
mov
or
push
clc
lret
adc
push
xchg
cwtl
mov
mov
adc
mov
and
hlt
pop
dec
mov
pushf
sbb
and
or
scas
cmp
stc
cmc
loop
add
test
nop
sub
dec
pop
mov
mov
jmp
into
aad
xchg
dec
mov
pop
loope
lods
add
and
mov
dec
bound
add
fsubrs
mov
icebp
add
push
aaa
sub
fwait
jbe
lock
or
sbb
arpl
xchg
lock
xor
mov
sti
cmp
push
popa
add
xchg
jne
loopne
jae
jnp
mov
jno
mov
int
ret
popf
mov
mov
mov
cmp
je
jmp
inc
and
sbb
lret
xchg
pop
jno
fcoml
mov
aas
jns
pop
xchg
out
cmc
pop
filds
jge
fwait
daa
cmp
mov
mov
cli
out
mov
dec
mov
push
pop
cwtl
sbb
mov
pop
cmp
loope
lcall
adc
mov
push
pop
arpl
cmp
push
lea
xchg
les
jo
pop
paddsw
xor
and
mov
testl
xchg
xor
sub
mov
sub
ss
cltd
ds
ja
sbb
ds
cmp
lods
cmp
mov
or
dec
daa
xlat
inc
inc
jl
loopne
jle
pusha
mov
insl
cld
and
fisubrs
inc
push
cs
jmp
es
or
lock
dec
mov
repz
mov
repnz
and
jge
dec
xchg
mov
wrmsr
mov
and
paddsb
movsb
push
mov
pop
cs
mov
cmp
push
jg
pusha
jne
jne
pop
pop
js
push
mov
cmp
insl
add
std
into
dec
mov
push
repnz
lods
shrb
mov
mov
mov
jmp
pop
ficoml
adc
or
xchg
push
cli
adc
ficoms
sbb
cmpsl
mov
jle
add
mov
loope
andb
mov
scas
inc
hlt
add
outsl
iret
push
ds
movsl
jge
pop
mov
movsl
pop
and
mov
cld
sub
push
jb
jge
lods
mov
adc
lods
push
je
jo
sub
mov
jnp
or
lods
pop
sbb
cmpsb
jl
aad
xor
popa
repz
and
adc
das
push
mov
inc
jns
push
add
lea
sbb
pop
ret
mov
sbb
out
out
imul
cmpsl
outsb
test
in
pop
push
pop
ljmp
xorl
addb
arpl
pushf
leave
out
roll
and
xor
and
mov
pop
and
mov
or
test
stc
mov
cmpsl
or
rcrl
push
shrl
bound
mov
repnz
cmp
or
stos
sub
iret
in
insb
pop
xchg
imulb
and
bound
push
rorb
lods
xchg
nop
nop
dec
pushl
sar
das
aaa
call
sub
push
inc
inc
mov
sub
sbb
orl
push
ss
or
sub
loop
or
cli
sub
mov
out
cmpsl
pop
pop
and
dec
or
mov
je
test
inc
std
or
loop
fisubs
shrb
xchg
pop
movsl
frstor
aaa
mov
and
and
pop
pop
sbb
test
test
shrb
orl
ss
in
mov
and
and
or
pop
cmc
inc
or
gs
add
xchg
sub
jo
or
fdivl
pop
mov
mov
sbb
sub
or
add
daa
mov
repnz
dec
aas
fmulp
lahf
lret
or
int
pop
in
xchg
cmp
jnp
mov
or
push
test
mov
xchg
dec
loopne
loopne
std
cmpb
nop
push
or
adc
xor
push
pop
pop
loopne
call
jno
or
loope
mov
movdqu
repnz
push
mov
or
mov
pop
push
nop
push
in
mov
mov
sub
js
aaa
bound
dec
sub
inc
cld
or
je
push
sahf
movsb
shl
push
dec
subb
cmpsb
push
test
aad
movsb
mov
push
push
aam
or
lods
sub
test
test
xlat
push
xchg
stos
sbb
mov
or
mov
sti
push
fistpl
sbb
into
les
scas
adc
pushf
cld
notl
addr16
inc
sets
xlat
or
mov
sub
popl
movsl
mov
in
push
jno
dec
pusha
add
in
xchg
jmp
push
movsl
iret
xchg
scas
jns
sbb
stc
fcoms
shlb
sahf
enter
pop
inc
xchg
sahf
add
or
scas
in
lcall
push
in
in
icebp
sbb
xchg
inc
out
mov
mov
mov
mov
and
add
push
stos
std
mov
sti
stos
pop
cmpsb
pop
lea
or
mov
into
mov
in
or
mov
hlt
jns
jns
out
push
aam
rol
jns
mov
adc
js
jg
inc
iret
mov
jmp
and
adc
ret
add
pop
ret
dec
data16
jp
in
cli
movsb
jno
jle
mov
mov
adc
rorb
jb
icebp
inc
out
out
jnp
dec
push
into
xlat
popa
jne
cltd
inc
test
jle
adc
xchg
inc
aas
repz
pop
sub
push
pop
popa
inc
stos
adc
push
and
pop
cmc
repz
sub
mov
cltd
mov
cmp
pop
bswap
or
push
mov
add
pop
outsl
das
addr16
adc
pop
jmp
mov
dec
loope
lods
push
jno
inc
inc
and
push
lock
mov
je
sbb
dec
lcall
dec
jnp
adc
out
jns
push
dec
cmpsl
testb
xor
mov
adc
mov
mov
mov
mov
xor
cwtl
popa
jge
jmp
add
fcmovu
sbbb
in
flds
daa
adc
xor
in
ret
test
or
push
sbb
repnz
roll
push
mov
outsb
lods
mov
inc
push
xchg
int
mov
sub
fisttpll
push
or
pop
ficoms
arpl
pop
inc
sbb
pop
data16
cwtl
lods
jne
loopne
hlt
cltd
inc
xchg
jp
lahf
in
repz
arpl
into
dec
pop
inc
pop
test
xchg
jns
jbe
sub
mov
iret
data16
fisttps
xchg
lods
cs
cmpsb
imul
dec
mov
cmp
adc
xor
adc
mov
push
repz
lods
adc
xchg
mov
xchg
dec
xchg
dec
push
cmp
sub
mov
jnp
sbb
or
movsb
xchg
fstpt
test
add
sub
iret
cmp
movsl
xor
cmp
bound
es
roll
rclb
jle
mov
xchg
adc
jnp
roll
or
mov
xchg
pop
xchg
mov
adc
mov
popf
or
outsb
popa
into
paddq
inc
inc
ss
cmpsl
movsb
ss
xchg
or
pop
dec
xchg
out
or
ss
mov
shl
xchg
mov
ret
stos
lods
iret
movsl
incl
dec
cld
mov
movsl
dec
dec
loope
sbb
sbb
ja
inc
xor
pop
jb
sbb
add
clc
push
cs
mov
mov
in
sub
push
imul
inc
call
popa
cmp
add
outsl
push
and
and
push
sbb
xacquire
insb
call
test
add
enter
pop
loopne
cmp
dec
popf
daa
push
mov
mov
xchg
mov
xchg
mov
jae
in
adc
stc
push
aam
je
jmp
imul
loopne
mov
cmpsl
pop
in
xlat
lret
inc
sahf
std
pushf
inc
lret
aaa
insb
xor
add
jae
pop
lea
mov
cmp
popf
and
sub
adc
fimuls
xor
mov
push
test
pop
jg
out
dec
jle
out
in
lret
mov
icebp
push
pop
dec
adc
mov
cmp
mov
or
jo
jne
jp
test
xor
idivl
out
push
js
nop
ss
popa
inc
ljmp
iret
push
mov
lods
mov
jg
add
mov
xor
cmp
ret
xchg
push
cltd
dec
and
in
xor
icebp
mov
sbb
test
fwait
movsl
and
rorb
push
inc
sti
push
in
lods
repnz
in
popa
cmp
imul
inc
mov
pop
inc
and
rcrl
jg
cmp
sbb
mov
xor
fsubrs
xchg
push
xchg
nop
jle
add
inc
cli
add
cmpb
insb
fisubrs
jae
cmc
cmpsl
sti
shlb
test
push
int3
push
sub
jo
and
movsb
jb
push
dec
in
dec
sar
adc
xchg
cmp
insb
bnd
and
jns
lods
inc
cmp
scas
xchg
cmp
jg
movsb
sbb
inc
sub
push
sub
mov
sub
imul
push
dec
pop
and
sub
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
pop
or
jp
rcrl
lods
insb
lahf
cltd
test
data16
and
sbb
or
xor
insb
and
sbb
test
cld
scas
sbb
aad
mov
sub
xchg
xchg
adc
dec
cmp
add
jno
jle
dec
cmpsl
and
add
test
ja
jg
fdivrl
push
xchg
inc
fisubrl
aam
roll
xorl
loope
fs
inc
test
dec
xor
or
add
xchg
dec
imul
in
mov
fimuls
loopne
sbb
push
mov
push
lds
es
cmc
aad
inc
jecxz
mov
push
cwtl
jle
sub
ss
xor
not
inc
fldenv
fidivrs
or
imul
rorb
cmp
cmpsl
imul
iret
pop
aam
or
mov
repz
pop
inc
inc
fisubl
int3
sub
push
xor
es
cwtl
adc
sbb
movsb
imul
out
jno
dec
inc
lods
into
mov
jno
fdiv
mov
adc
xchg
mov
fsubl
icebp
push
add
pop
cmp
pop
cwtl
fidivl
loop
ret
ds
cmpsb
jp
cmp
es
dec
push
fcompl
ficoms
pop
sbb
sub
or
dec
sbb
cwtl
popa
add
js
movsb
jp
js
push
sahf
adc
sub
mov
out
pushf
fsubr
fldl
shlb
xlat
movsb
test
cli
mov
mov
shll
sub
pop
repnz
js
fsubl
inc
fcmovnu
in
mov
ds
push
cmpsl
push
mov
pop
fildll
popa
pushf
imul
or
cmpsb
sbb
push
push
outsl
pop
clc
push
hlt
int
and
in
les
sub
mov
iret
adc
in
mov
jnp
jo
out
jb
cmc
cwtl
mov
dec
cli
cmp
ror
movsl
scas
or
or
ljmp
shl
inc
inc
out
nop
stos
rcll
aaa
vpextrw
lds
xchg
xchg
mov
subb
arpl
adc
cltd
pop
xchg
xor
mov
pop
addr16
lahf
test
lods
and
pop
adc
out
cmp
adc
xor
or
subl
cmp
mulb
sub
fdivrs
in
xchg
mov
jae
movsb
test
and
shrl
rcrb
clc
out
into
iret
mov
aaa
js
cmpsl
push
repz
gs
out
leave
rorl
mov
ljmp
decb
fwait
pmaxub
rcr
pop
cmc
jg
jne
xchg
clc
mov
cld
hlt
ret
xchg
mov
int3
test
sub
and
imul
imul
push
lret
popa
add
mov
mov
loopne
aas
xor
insb
push
icebp
mov
or
clc
in
cmp
lods
or
xor
cmpsl
stos
movsb
mov
pop
cmc
cltd
ss
lea
push
push
ljmp
cmp
push
dec
sbb
pop
ja
inc
js
jno
push
cmpsb
test
fbld
into
cmp
pop
and
std
cwtl
inc
sbb
loop
xor
dec
loop
mov
pop
dec
cmp
jle
xchg
dec
add
sub
sbb
test
rclb
je
repz
gs
mov
xchg
insl
data16
mov
mov
xor
pushf
adc
jno
cmpsl
js
xor
les
sub
dec
ret
pop
sub
sbb
jno
insl
add
xlat
es
imul
outsl
sarl
cmc
push
adc
fstl
shl
mov
mov
js
adc
daa
call
clc
xchg
les
stos
in
sahf
popa
ljmp
inc
ljmp
fwait
leave
stc
pop
movsb
sbb
cmpl
dec
pushf
cmp
mov
inc
bound
int
mov
pop
pop
jb
mov
jnp
jb
ljmp
inc
cmc
incb
pop
mov
out
inc
std
xchg
ja
js
xchg
sbb
aaa
sahf
and
rorb
mov
xchg
xor
ret
hlt
arpl
ljmpw
cmpsl
rep
shlb
sub
fmulp
jle
mov
mov
and
andl
jns
mov
addr16
pop
jns
mov
sub
jecxz
rolb
add
push
repnz
pop
sub
ja
aam
mov
enter
or
jecxz
xchg
add
sbb
into
sub
inc
mov
stos
js
or
jno
sub
sbb
xor
dec
call
inc
and
pop
push
mov
cltd
mov
sbb
jns
pop
and
mov
int3
into
pop
movsl
pop
jno
imul
fcmovnb
jg
lock
mov
jl
jns
inc
insb
mov
icebp
icebp
movsl
pop
or
roll
sbb
test
lahf
icebp
adc
outsb
sub
inc
daa
pop
movsb
mov
xchg
and
cmp
sub
movsl
push
call
jle
add
mov
mov
jmp
stos
outsl
add
pushf
sbb
push
mov
lds
fstpt
mov
les
sbb
push
cltd
jle
cvttps2pi
sub
gs
loopne
mov
dec
or
adc
push
out
mov
leave
mov
loop
jne
lret
sti
xchg
cmpsb
stos
jbe
jle
push
repnz
daa
out
jp
cmp
jecxz
cwtl
cmp
or
cmp
ret
std
nop
jae
and
in
cmc
insl
out
enter
fwait
std
inc
adc
cmp
into
xchg
add
cmp
push
adc
jnp
je
pop
or
or
jmp
cmp
pop
mov
fnstsw
cwtl
mov
mov
ret
mov
sbb
sub
out
mov
add
lcall
add
test
jmp
and
ret
sbb
imul
dec
mov
insl
icebp
mov
inc
pop
jno
add
push
or
push
jmp
repnz
aas
mov
sbb
mov
mov
addr16
scas
pop
sub
xor
adc
sbb
loope
es
cmc
or
dec
mov
ljmp
test
out
gs
dec
sahf
push
xchg
add
mov
popf
cli
add
call
shr
cmp
pop
into
sub
cmpsb
adc
pop
roll
filds
adc
push
dec
mov
fnstcw
add
and
lock
int3
push
dec
jle
or
or
add
fwait
rol
cmp
pop
xchg
mov
jmp
stos
xor
adc
fsubrl
cmp
mov
icebp
adc
pushf
mov
cltd
push
push
add
ficomps
or
loope
and
aad
and
daa
mov
mov
fisubrl
cmp
and
repz
repnz
xchg
jge
sbb
xor
repz
ja
inc
mov
xchg
mov
push
mov
popa
push
lock
xor
push
xchg
fldcw
or
pop
fldl
adc
or
inc
push
jns
loopne
in
iret
iret
into
sarb
cmp
je
cmpsb
sbb
mov
sbb
mov
dec
scas
add
ds
pop
repz
pop
pusha
insb
imul
add
shl
call
sub
cwtl
mov
add
pusha
icebp
pop
bound
outsb
pop
adc
enter
push
fcoml
scas
jbe
dec
sub
fcompl
stos
jne
in
icebp
into
jbe
mov
sbb
rorb
pop
sbb
mov
test
les
ds
popfw
insb
jns
push
or
outsb
jb
stos
scas
scas
arpl
push
mov
add
xor
push
push
sbb
xchg
in
repnz
dec
icebp
mov
test
sub
ret
fs
loop
jmp
xlat
pop
push
add
and
ja
aam
or
lahf
rcrb
test
adc
mov
out
or
gs
sbb
bound
sub
lret
adc
insl
jne
mov
ljmp
mov
insb
sbb
dec
xor
or
stos
das
push
les
int
sarl
mov
push
pop
sbb
dec
lahf
ficoms
jle
inc
lcall
jbe
or
movsb
add
jns
adc
aad
cmp
addr16
push
rorb
jae
sbb
jbe
inc
fcompl
fwait
cmp
imul
or
sbb
push
fucom
mov
insl
sti
xchg
mov
cmp
add
mov
arpl
test
or
dec
xchg
sar
pop
jns
push
outsl
push
addr16
dec
test
and
fimuls
pop
leave
mov
push
add
adc
pop
adc
mov
fstp
es
lcall
cmpsl
pop
lea
sbb
cmc
inc
push
cmp
cwtl
daa
mov
mov
clc
pop
int3
mov
movsl
movsl
lret
lret
outsl
imul
push
cmc
pusha
das
mov
inc
shll
add
shll
mov
aam
repnz
add
addr16
mov
dec
xor
jge
push
in
or
call
jge
aad
jmp
ds
adc
mov
insl
hlt
cs
rcrb
call
popa
cmc
sbb
jmp
sub
cmc
sbb
push
push
mov
gs
jmp
clc
dec
mov
leave
xchg
and
ret
insl
push
jmp
daa
in
cmpxchg
in
outsb
sub
scas
ja
pop
addr16
imul
addr16
int3
out
cmc
loop
rclb
xlat
lret
insl
xchg
jl
inc
mov
push
in
icebp
pusha
mov
jo
fprem
nop
frstor
fiaddl
cmpsl
push
negb
insb
stos
lahf
mov
clc
adc
stos
test
inc
aas
rcrl
cmp
out
and
dec
and
repz
mov
cltd
out
stos
call
das
adc
inc
lahf
lea
pop
addb
xchg
mov
scas
xor
or
mov
scas
std
adc
mov
int
decb
punpcklwd
shlb
ljmp
cmp
fldt
loope
int3
push
in
xchg
mov
bound
cmpsl
in
jb
rolb
outsb
mov
cmpsl
cs
mov
arpl
cwtl
ret
clc
jbe
and
sbb
cmc
mov
add
std
pop
aaa
mov
jmp
rcrb
add
pop
int3
xchg
adc
int
shll
lods
jmp
pop
roll
ja
xor
std
ret
cmpsb
xor
or
test
fsubr
inc
sarl
outsl
iret
sbb
adc
xor
out
scas
jmp
mov
call
pop
addl
out
xor
jb
loope
roll
in
repz
nop
fldt
popa
fidivrs
pop
sahf
repnz
pop
cmp
call
jmp
rcrb
movsl
push
xor
push
xchg
jb
aaa
push
cltd
stos
stc
adc
ror
push
xorl
stc
or
outsl
xchg
xchg
insb
mov
sub
jb
or
cmpsl
fimull
jo
pop
stos
inc
mov
ljmp
test
inc
ret
dec
jp,pt
dec
mov
push
sbb
sbb
das
aad
mov
xor
leave
lock
ss
ficompl
stos
inc
push
sbb
and
adc
push
push
jns
mov
testb
lcall
insb
mov
js
push
adc
enter
nop
mov
lcall
jg
inc
cmp
out
mov
pop
and
sti
push
es
scas
push
loope
mov
cmpsb
cmovg
pop
out
repz
rcrl
adc
pop
adc
push
loop
pop
icebp
jne
jmp
jb
orl
push
fmull
lahf
and
mov
popf
fstl
ss
jecxz
pushf
mov
or
cmp
sub
std
addr16
add
xchg
mov
lods
mov
jae
les
mov
or
jno
movsl
and
dec
enter
push
int
dec
insb
add
into
aaa
out
repz
add
xor
inc
jmp
xchg
lret
test
jne
add
adc
out
int3
sub
dec
jp
out
push
out
push
addr16
or
sub
pop
adcb
cmp
mov
popa
adc
adc
addr16
cltd
dec
xchg
rol
je
cwtl
pop
call
outsl
cmc
or
lahf
push
add
mov
test
sub
push
xchg
jecxz
adc
mov
mov
notl
xchg
dec
jg
idivb
cmpb
pop
xor
and
std
js
push
jns
into
push
sbb
inc
loopne
mov
xorb
sbb
or
dec
iretw
test
js
jnp
movsb
bound
cmpsl
or
push
sbb
push
popf
enter
mov
sbb
xchg
and
lock
push
mov
jns
add
insb
cmp
movsl
cld
cmp
imul
fbld
mov
xchg
cmp
push
imul
shll
mov
jae
xor
xchg
lods
sti
filds
cmpb
out
pop
xor
sub
push
cli
int3
add
jge
or
scas
insl
mov
inc
cmp
stc
dec
test
sbb
mov
scas
clc
cmc
jecxz
pushf
mov
out
mov
inc
jmp
and
es
mov
mov
dec
mov
dec
mov
adc
lods
sbb
call
fsubs
addr16
ljmp
sub
cmp
jmp
fsubr
pop
ss
movsl
loope
dec
sbb
je
jno
cwtl
test
insl
sub
mov
decb
cld
std
and
ss
cmpsb
cmc
lods
mov
fincstp
pop
cmp
add
mov
ss
dec
push
sbb
lock
jle
cmpsb
jg
jg
push
sub
cmpsl
out
imul
cli
into
int3
repz
scas
push
cmpsb
popa
je
add
mov
fcomps
jmpw
add
roll
push
pop
pop
adc
in
add
in
pop
push
xor
ja
dec
and
xchg
mov
mov
adc
pop
outsl
dec
jge
adc
and
dec
aaa
push
mov
aas
pop
movsl
or
bound
lret
jbe
push
lret
sahf
into
mov
aam
iret
push
es
lock
push
mov
stos
outsl
push
js
mov
ret
xchg
into
push
divb
movsl
cmp
sub
mov
adc
lret
addr16
scas
sub
out
jg
dec
cmp
inc
out
rcll
fdivs
sbb
inc
cmp
adc
xlat
rorl
xorl
and
xchg
out
xor
sub
das
push
lods
mov
outsb
aad
std
xor
ja
subl
xchg
adc
pop
fs
insb
test
adc
in
jb
pop
jecxz
xor
data16
bound
push
mov
sbb
shlb
test
in
rcll
mov
arpl
pop
movsb
cli
out
or
mov
repnz
lods
push
gs
cmc
fdivrs
xchg
test
jecxz
outsl
push
add
sahf
scas
cli
or
loope
fs
mov
pop
dec
cmp
mov
arpl
sub
and
fwait
jae
cltd
xchg
repz
lods
jmp
scas
loope
aaa
arpl
out
pop
in
add
push
cs
xchg
jo
mov
sub
lods
push
and
mov
adc
enter
push
inc
loope
sub
pop
out
cmp
loope
aas
ror
daa
mov
mov
daa
lcall
jg
cltd
xor
cwtl
adc
mov
jmp
in
dec
pop
loopne
popa
shll
inc
push
inc
mov
sub
xchg
xchg
jb
jge
scas
rorb
out
and
adcb
inc
hlt
xchg
cmpsl
stos
mov
xchg
leave
shlb
inc
dec
mov
mov
push
mov
pop
jp
test
cld
inc
and
idivl
cmpsl
jae
adc
push
enter
and
rolb
jo
or
subl
aad
jae
jp
je
cmpsb
pop
sbb
sbb
cwtl
jp
mov
popf
fidivl
loope
insl
stc
pmaxub
dec
repz
ja
inc
repz
xchg
dec
pop
jb
or
xor
adc
mov
movsl
repz
adc
inc
xchg
into
lret
jle
mov
mov
stc
mov
pop
mov
jmp
mov
mov
repnz
cli
adc
cmpsl
or
inc
std
lds
xchg
sbb
jp
movsl
jnp
inc
mov
add
dec
push
stos
adc
rolb
or
lret
mov
cmpb
ret
xor
pop
cmp
imulb
icebp
jge
mov
sbb
jae
cmp
jne
mov
jo
or
dec
xchg
jle
lods
dec
sarb
insl
mov
jbe
add
or
jne
adc
sbb
mov
push
push
ljmp
insb
shrb
add
mov
ja
arpl
adc
mov
ss
test
inc
shlb
sub
jo
scas
sub
out
xor
iret
js
add
scas
xor
cld
sarb
std
inc
dec
adc
es
insb
arpl
or
and
adc
and
xlat
rcrb
js
sahf
rcrl
adc
sbb
mov
inc
jle
or
aaa
test
mov
mov
into
stos
add
fcomip
or
add
xor
pop
push
sub
pop
add
adc
shlb
orl
xlat
mov
adc
test
hlt
and
ljmp
repz
imul
sub
mov
je
sahf
xlat
or
add
jae
adc
xchg
and
scas
and
leave
stos
cs
insl
sub
mov
mov
cmp
sti
push
and
pop
pop
mov
aaa
pop
loop
test
setge
cwtl
or
arpl
mov
test
icebp
push
dec
cs
in
mov
jmp
push
sarb
push
ret
pop
add
cmp
adcb
ljmp
jbe
mov
mov
xor
xchg
jge
add
in
mov
inc
xor
or
mov
jae
inc
sbb
jp
je
cltd
jg
pop
lods
mov
add
fisubrl
daa
stc
stc
sti
sti
call
xchg
adc
mov
cmpsb
addr16
pop
xor
add
mov
or
sbb
jno
fsub
sbb
pop
xchg
push
int3
ret
push
out
fs
xor
daa
inc
mov
or
loopne
lret
imul
inc
or
outsl
scas
mov
lret
xchg
xor
sub
gs
add
sbb
stc
outsl
jbe
loop
mov
daa
mov
imul
jecxz
inc
cmc
jb
xor
or
pop
fwait
testb
lret
xchg
insl
push
mov
std
jbe
adc
lret
popf
imul
add
lods
mov
fidivl
arpl
adc
aaa
jge
outsl
xchg
and
lock
pop
es
in
js
mov
jge
xchg
movsb
mov
jmp
xchg
and
imul
adc
mov
lods
pop
aam
xor
jae
nop
inc
cld
popa
sbb
bound
dec
xchg
loopne
sar
pop
sub
das
cmp
in
pop
popf
pop
and
fistl
sahf
add
iret
push
mov
je
data16
mov
jge
add
or
test
xchg
roll
xorb
pop
dec
aad
orb
mov
pusha
test
mov
aad
ffreep
jnp
orb
cltd
cmpl
cmpsl
stc
and
cmp
adc
loopne
cltd
test
lret
cld
adc
or
sub
mov
sbb
ljmp
mov
xchg
xchg
cmp
stos
and
cs
fdivrl
kxnorw
dec
lret
imul
cmp
xor
lods
icebp
xchg
repz
arpl
jo
push
jbe
repnz
out
pop
sub
cmp
cmp
test
xor
mov
inc
std
leave
loopne
sbb
push
mov
out
fs
xchg
cmp
in
hlt
popf
sar
loopne
arpl
out
nop
mov
out
imul
ret
cmp
cwtl
pop
mov
and
aaa
push
fiadds
mov
cmpsb
cs
push
dec
scas
outsl
imul
fwait
xchg
scas
sbb
push
cwtl
mov
lea
hlt
scas
dec
mov
mov
xchg
insb
movsb
clc
outsb
cmp
xchg
mov
popa
out
cmpsb
mov
cmpsb
outsb
out
popf
push
mov
stos
xchg
adc
push
ret
mov
lea
xor
cs
cmp
cltd
fstl
rcrl
and
cli
repz
out
pop
rorb
cmp
fimuls
add
hlt
inc
mov
or
movsb
lea
and
daa
jle
ss
push
insb
pusha
push
dec
xchg
call
stc
leave
inc
in
cmpsl
jne
cmc
in
inc
arpl
test
push
int
xchg
push
jnp
rcll
xor
or
loopne
inc
mov
push
mov
xchg
mov
inc
mov
and
ret
sar
xchg
jno
test
or
test
push
mov
sub
loope
sbb
daa
xchg
adc
cmp
sbb
shrl
xchg
addr16
out
xchg
lods
push
outsl
lret
mov
mov
scas
scas
fmuls
pop
adc
cmpl
cmpsl
mov
repz
add
or
pusha
sti
scas
cmpl
daa
cmpsl
jo
pop
push
sub
shll
xor
cmp
mov
dec
fnstenv
adc
cmp
mov
sahf
outsl
and
sub
mov
xchg
dec
call
sub
cmpsb
out
in
sbb
scas
jle
mov
mov
add
dec
mov
mov
decb
hlt
pop
aad
stos
pop
gs
popf
inc
sub
ds
sbb
pusha
inc
cmc
cmpsb
mov
or
mov
pusha
pop
xchg
push
jb
into
dec
cli
push
sub
movsl
test
aad
ljmp
sti
push
add
sar
in
xchg
arpl
out
and
fs
in
out
jae
or
daa
cmp
testl
mov
insl
aaa
enter
out
fstp
fisttps
out
and
aad
test
mov
aas
testb
lods
fucomi
xchg
add
fucomi
orb
lcall
pop
mov
mov
xor
cmp
into
gs
orb
hlt
jp
aas
mull
xor
mov
inc
mov
or
and
pop
dec
jnp
aam
xchg
inc
mov
movsl
pushf
add
pop
cli
lods
sbbl
adc
cld
out
mov
xchg
jp
aam
aam
xchg
mov
push
inc
cmpsb
out
inc
xchg
xor
ret
push
jg
xchg
jnp
push
dec
inc
mov
addr16
pop
ss
movsb
mov
jge
cmpsb
jne
inc
ret
sbb
xor
lock
popf
or
iret
lds
div
mov
sahf
popa
sub
mov
xchg
push
push
ror
mov
out
push
mov
mov
mov
push
dec
repnz
std
testb
and
stc
outsl
xchg
mov
mov
popf
stos
push
mov
mov
jge
daa
jbe
jbe
inc
in
adc
or
cs
sahf
js
sbb
mov
data16
xor
nop
push
push
inc
std
xchg
nop
mov
dec
int3
lahf
cmp
leave
or
adc
add
cmp
gs
jge
cmpsb
pop
hlt
enter
fsubrs
mov
pop
test
ficomps
xor
mov
dec
mov
jle
pop
shll
shrb
outsb
lods
pop
shrl
leave
fdivrs
jnp
and
data16
fsubl
out
xor
mov
gs
push
jecxz
test
pop
scas
xlat
mov
mov
xchg
cmpsb
lods
aam
add
push
out
or
flds
dec
xchg
lock
pop
ja
pop
das
ficoms
sub
dec
dec
mov
cmpsl
add
adc
dec
or
xor
xchg
sub
nop
adc
inc
fldenv
inc
pop
mov
pop
les
sbbb
sbb
pop
jp
repnz
pop
jp
cmp
sti
mov
cmp
into
mov
jnp
xchg
lea
pop
je
repz
lret
orb
push
pop
adc
scas
das
movsb
mov
xchg
or
iret
jo
mov
loopne
sti
aaa
push
mov
jb
jl
mov
xor
cmp
rorb
jne
xor
jmp
inc
int
lea
sub
pop
xor
sbb
sbb
test
sub
pop
cs
loope
ljmp
push
xchg
xchg
mov
xor
inc
pop
cmc
sar
mov
lret
js
lret
push
es
popl
pop
mov
sbb
dec
ficoml
flds
icebp
shl
jl
dec
xchg
mov
sbb
pop
dec
dec
cmpsl
daa
pop
int
and
cltd
int3
test
mov
cwtl
xchg
call
inc
mov
int3
popf
test
daa
pop
push
cmpl
aam
movsl
xchg
lds
xor
fsts
push
mov
sbb
sub
cmpl
int3
lcall
movsl
jae
popf
mov
add
arpl
pop
sahf
popf
mov
out
jb
clc
mov
idivb
test
sub
xchg
lcall
pop
pop
loope
jle
in
cmp
daa
clc
pop
or
test
leave
and
xchg
daa
lods
xor
mov
aad
jl
pop
movsl
nop
das
adcb
mov
out
sub
outsb
inc
popf
inc
push
inc
inc
add
je
or
xor
out
out
dec
jge
xchg
enter
loop
rcrb
outsl
pop
dec
mov
out
fwait
mov
jg
enter
jo
inc
xchg
das
mov
dec
lods
imul
ljmp
push
scas
dec
lds
hlt
xor
mov
mov
mov
xchg
in
stc
aas
stos
dec
jmp
dec
ret
test
mov
dec
popa
pusha
pop
loopne
or
mov
out
jge
push
popf
subb
rorb
push
add
mov
add
aas
add
push
jl
mov
cmc
stos
lcall
adc
test
xor
add
mov
xorb
mov
loope
gs
fidivrl
push
insl
cmp
dec
lss
ret
push
cmpsl
rol
lods
test
lods
dec
js
sbbl
std
lahf
ficoms
movsb
lock
jae
popf
or
lock
jae
data16
lods
movl
fs
hlt
jno
in
dec
mov
sub
dec
clc
xor
nop
test
ss
or
dec
or
loop
mov
push
cwtl
inc
push
mov
sub
imul
push
xor
sub
mov
mov
xor
and
nop
mov
pusha
adc
outsb
iret
cmpsb
sub
add
mov
sti
xor
outsl
rol
mov
frstor
clc
or
movl
sbb
or
shrl
cmp
cmp
movsl
movsl
sub
inc
push
negl
cmp
xchg
adc
cmp
fsubl
outsl
or
lock
mov
adc
and
lea
lret
or
sti
divb
mov
mov
jge
or
jmp
scas
jecxz
cmp
sbb
push
ljmp
mov
scas
pop
test
and
imul
pop
pop
clc
or
inc
sub
fs
ljmp
cmpsl
cmpsl
ret
adc
bound
dec
inc
xor
iret
adcb
and
pop
or
aam
cmp
add
dec
je
nop
int
and
fcomi
xor
out
les
or
pop
xchg
scas
add
das
lods
loopne
stos
arpl
xchg
daa
and
cs
testb
mov
js
loope
icebp
int
cmpsb
jl
mov
or
cli
cmp
sti
sub
adc
dec
dec
insb
addr16
enter
cmp
mov
mov
dec
inc
pusha
enter
rclb
sub
cwtl
add
dec
mov
inc
out
push
popf
xor
sbb
pop
and
mov
mov
and
add
add
imul
std
fisttpll
out
fimuls
ds
in
sbb
repz
dec
and
sti
sbb
pop
jl
xor
push
fmuls
pushf
jg
ja
xchg
cmp
jno
xchg
movsl
cmc
jo
pop
scas
rcr
jb
xchg
push
push
pushf
mov
push
ss
ret
mov
nop
mov
das
mov
mull
in
jns
xor
xchg
packuswb
adc
popf
add
cmc
mov
adc
adc
testb
in
mov
or
test
inc
xchg
loop
sub
mov
jns
in
mov
jae
leave
jp
enter
aaa
imul
shl
push
andl
icebp
inc
orb
sbb
jae
jl
dec
jp
mov
int3
xchg
mov
push
mov
gs
cmp
jns
ret
cs
fwait
clc
cld
push
daa
in
sub
add
xchg
add
jp
jns
iret
loopne
add
fldenv
add
xchg
repz
out
rclb
mov
cmovb
add
ds
into
dec
mov
cmpsb
cld
xor
int3
fisubs
cmp
iret
pop
xor
stos
sti
pop
ret
sub
stos
pop
cli
imul
into
repz
daa
push
xlat
cmp
data16
ss
divb
les
int3
lret
ficompl
xor
dec
sbb
arpl
lods
push
fnstsw
dec
xor
repz
out
pop
xchg
loop
inc
push
push
leave
cmc
test
push
out
stc
and
ja
adc
pop
outsb
mov
add
bound
fdivl
xchg
pop
stos
fwait
sub
int3
decb
adc
pop
lods
jne
sub
rcll
cmpsb
adc
push
and
idivl
adc
xchg
sbb
dec
repnz
imul
mov
scas
stos
imul
fwait
std
sub
xor
fldenv
adc
mov
xor
push
adc
aaa
mov
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
jl
jle
jo
pop
inc
mov
dec
dec
cmp
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
