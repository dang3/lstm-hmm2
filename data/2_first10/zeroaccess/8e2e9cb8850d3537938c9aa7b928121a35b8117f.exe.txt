push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
pushf
test
adc
adc
int
adc
stc
cmp
mov
stos
cmpsb
imul
js
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
test
mov
push
test
out
dec
inc
aad
icebp
or
sub
ret
mov
sbb
hlt
les
insb
mov
mov
fucomp
fdivr
pop
mov
pop
out
ret
pop
xchg
push
daa
push
hlt
adcb
mov
cwtl
nop
fildll
in
add
std
mov
popf
imul
jbe
lret
mov
jb
jl
es
xchg
xor
lret
cmpsb
cmpsb
mov
jbe
scas
fsubp
jg
packsswb
pop
mov
popa
bound
divl
adcb
mov
pop
mov
mov
push
mov
mov
movsl
pushf
mov
jecxz
leave
mov
or
je
lcall
xchg
lcall
ret
imull
shrl
push
adc
mov
or
ljmp
pop
adc
in
lods
aam
or
stc
stc
or
outsl
mov
pop
out
dec
insb
mov
aad
arpl
xor
dec
rorb
pop
fistpl
push
dec
lcall
push
add
push
loopw
fs
lea
out
movsl
cmp
xchg
fsts
lods
cmp
adc
dec
stos
mov
data16
scas
jp
mov
xorl
push
bound
stos
jge
into
roll
sbb
inc
cld
adc
jecxz
pop
ds
rorl
adc
xor
aas
mov
jno
addl
test
aad
iret
dec
adc
sbb
pop
cmpsb
outsl
les
sub
out
outsb
dec
inc
sub
dec
movsl
aam
mov
stos
push
clc
fisubrl
cli
bound
lea
aad
mov
sbb
jecxz
or
xchg
cmpsl
sub
incb
mov
or
pushf
pushf
adc
inc
push
stos
jbe
aad
ret
push
ljmp
dec
pushf
add
add
out
mov
push
mov
sahf
push
sbb
cmc
push
xchg
cli
adc
adc
cs
mov
out
icebp
inc
sub
jp
mov
rcrl
jo
sbbl
jmp
out
jecxz
out
dec
pop
pop
pop
mov
incl
pop
stos
cli
adc
adc
hlt
mov
dec
sbb
aad
push
or
mov
mov
es
cwtl
inc
push
aam
js
scas
xchg
fnstsw
dec
add
insl
icebp
sub
fadd
sbb
lods
test
out
pop
jecxz
and
dec
shrb
js
sbb
jbe
int
pop
and
or
hlt
cmp
pop
insb
pop
test
mov
or
jmp
mul
add
inc
pop
andb
lahf
sbb
dec
add
rcll
cmp
daa
popf
add
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
jns
push
adc
adc
adc
adc
shrl
push
in
xlat
and
and
inc
popl
cld
test
sub
dec
popw
repnz
add
daa
jl
jmp
je
inc
inc
sbb
pop
mov
subl
mov
mov
dec
fildll
mov
jno
mov
or
push
sub
in
hlt
fsubrl
pop
push
dec
js
jne
roll
lret
daa
adc
cmc
xchg
and
xor
sub
das
cmp
sti
xchg
sbb
add
movsl
pop
add
cmp
or
mov
add
sbb
mov
lahf
dec
pop
aam
mov
mov
ja
pop
das
push
imul
sahf
pop
ficomps
push
scas
sub
mov
push
jge
iret
push
les
mov
sti
loope
sarl
loope
pop
arpl
addb
das
insl
or
and
sahf
xchg
mov
filds
cmp
add
aas
test
xlat
ficompl
xor
cli
and
int
std
mov
pusha
push
xchg
mov
xor
push
add
pushf
cs
sbb
xor
mov
mov
enter
mov
lods
notb
mov
cmpsb
mov
test
imulb
lea
cmp
add
cld
sbb
dec
imul
subb
xchg
ficompl
ja
mov
aas
push
adc
pusha
xlat
sbbl
shll
hlt
or
adc
icebp
imul
jmp
add
fsub
hlt
push
test
loope
add
jge
daa
mov
bound
nop
hlt
enter
cmp
aam
popf
call
sbbb
daa
rcrl
inc
lds
pop
sbb
sub
sbb
sub
lcall
mov
call
jne
ds
cltd
pop
fwait
xor
aam
inc
push
inc
loope
xor
fcompl
jg
sbb
outsl
push
shlb
pop
loopne
xchg
add
mov
push
fnstsw
call
mov
dec
pop
mov
cmp
xchg
fcomps
xchg
call
mov
jmp
test
jae
stos
inc
int
icebp
ja
icebp
stos
pop
pop
inc
mov
movsb
dec
push
int3
mov
cmpsl
and
addr16
lret
nop
nop
arpl
pop
rcrb
xor
lods
jmp
outsl
dec
add
sti
jp
xchg
adc
xchg
push
xor
adc
imul
jg
cmpsb
std
aad
xor
xchg
lods
mov
outsb
movzbl
stos
fwait
mov
cvtdq2ps
cmp
int3
adc
xlat
push
jmp
adc
cmp
test
jle
ljmp
jmp
fdivrs
outsl
jecxz
mov
xchg
lahf
xor
push
cmpl
and
in
aad
cltd
roll
cld
mov
xchg
scas
divl
xchg
push
aaa
pop
pop
aas
js
lods
cmpsl
dec
call
and
arpl
imul
loop
popa
push
sbb
jmp
jp
out
mov
movsb
popf
mov
pop
mov
jo
xchg
ds
out
scas
adc
aad
pop
sub
xlat
hlt
cmpsb
mov
orl
test
mov
mov
cld
mov
out
gs
xlat
xor
inc
xchg
lods
add
into
pusha
insb
sub
inc
or
dec
cltd
mov
push
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
repnz
jle
or
adc
adc
adc
shl
mov
sbb
lea
lock
gs
add
jg
sbb
push
je
int3
inc
mov
clc
lds
jns
lret
test
notl
mov
xchg
cmpb
subb
into
in
cmp
push
cmc
jne
inc
cltd
fmull
mov
add
sub
adc
ret
xchg
shrl
aam
test
aas
fdivl
mov
in
xchg
lahf
dec
inc
inc
shlb
add
shl
pop
in
fisubrs
lock
pop
adc
sahf
jg
and
jo
cmpsb
cmp
negb
add
mov
adcl
dec
psadbw
nop
cmc
jno
mov
outsb
jb
sbb
xchg
aam
dec
movsl
rorw
je
lods
not
movsb
sbb
mov
inc
out
out
push
hlt
cwtl
das
mov
mov
push
jnp
pop
mov
jp
ja
push
imul
jp
pop
rorb
lahf
sbb
fs
movsb
push
jo
jl
push
cli
pop
pminub
sahf
lods
jnp
hlt
mov
fnstenv
inc
push
movb
dec
repnz
add
dec
inc
jnp
mov
dec
popa
add
jne
xchg
scas
pop
dec
pop
loop
shrb
xor
xor
sub
dec
test
das
adc
xchg
mov
jmp
bswap
mov
imul
std
cli
jae
repnz
repz
push
sahf
das
rcll
out
jb
jae
popa
dec
ret
movsl
arpl
in
jnp
pop
dec
fs
shlb
mov
sub
mov
push
bound
adc
cmp
adc
outsb
mov
push
xor
push
xor
dec
push
mov
repz
testl
leave
jmp
or
adc
daa
jns
ss
sbb
rcrb
loop
cmc
insl
and
pop
clc
or
cmp
stc
adc
mov
adc
ds
cmp
or
cmpsb
data16
push
cmc
popw
sub
cld
xchg
in
mov
jbe
pop
mov
xlat
mov
test
daa
adc
inc
xchg
orl
pop
mov
xorb
cs
aaa
aaa
out
inc
roll
push
ljmp
mov
fdivr
in
test
and
stos
notl
push
xchg
bound
fbld
xlat
nop
icebp
sbb
xchg
enter
lea
dec
adc
xchg
lods
sub
pop
mov
mov
fs
gs
sub
in
pop
add
and
loop
jns
push
push
iret
fisubrs
cmpsl
sub
inc
mov
cmpb
or
gs
loopne
out
pop
decl
mov
pop
inc
out
push
pop
jo
mov
enter
dec
cmp
mov
mov
lock
es
cwtl
or
scas
int
shr
imulb
push
jne
jmp
pop
mov
jne
adc
dec
dec
icebp
sbb
gs
das
dec
int3
cmp
test
orl
test
sub
pop
arpl
loopne
lcall
in
add
jl
hlt
movsl
inc
jns
mov
sub
outsl
cmpsl
mov
jae
nop
adc
cld
xchg
add
jmp
push
in
loope
push
mov
iret
cmp
inc
loopne
dec
adcl
in
add
movsl
icebp
adc
cs
decl
jno
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
clc
push
insl
loopne
adc
push
push
mov
fstps
sbb
push
lods
push
jns
ds
loopne
xor
dec
popa
mov
dec
jae
aaa
push
xchg
sbb
inc
dec
cmp
cli
xchg
add
dec
mov
les
mov
mov
es
xchg
cmp
jmp
mov
inc
icebp
loopne
ret
test
jnp
cld
insl
ss
stc
push
aad
js
xor
scas
ss
repz
sub
dec
push
imul
prefetch
mov
or
pushf
nop
adc
xor
xchg
inc
sbbl
mov
sub
lret
sti
dec
lret
dec
mov
roll
push
loop
inc
xchg
fdivrs
push
pop
repz
in
ret
gs
ret
sbb
cwtl
mov
pop
sub
pop
xor
adc
pusha
mov
jmp
jmp
movb
inc
fwait
mov
or
xchg
xchg
add
popf
mov
jmp
adc
enter
repz
arpl
dec
or
in
jecxz
out
xchg
sahf
cmpsl
xor
pop
inc
sbb
inc
dec
pusha
lret
movsl
and
lret
cli
sbb
pop
int
mov
inc
xor
sub
pop
enter
movsb
cmp
cmp
loope
in
sub
scas
sub
pop
pop
mov
lahf
aas
test
dec
ljmp
sub
add
mov
cmp
call
pop
jle
jnp
fsubs
bound
or
sub
out
test
call
test
insb
bound
daa
jecxz
outsl
xor
pop
sbb
mov
xor
dec
jle
inc
popa
je
inc
rol
push
lret
cmp
mov
jmp
and
jge
pop
fs
sub
daa
fildll
clc
aad
push
aas
and
roll
pop
enter
out
shlb
rcr
or
mov
jg
loop
cli
daa
popf
xchg
adc
call
mov
mov
fucomp
dec
cs
pop
andl
add
inc
scas
xor
push
cmc
push
fisubl
sbb
pop
or
arpl
loopne
ja
lea
xor
nop
push
jp
repz
out
leave
and
push
pop
rorb
push
jg
push
bound
and
out
popw
cmp
cltd
add
ljmp
sbb
add
mov
test
mov
pop
mov
outsl
xchg
and
shr
out
dec
pop
mov
jg
xchg
sbb
and
sbb
mov
mov
jecxz
cmpb
cltd
hlt
pushf
je
js
pop
ret
dec
cmp
adc
jbe
test
icebp
sbb
mov
mov
test
mov
test
addr16
push
adc
rcrl
add
jb
sbb
mov
movsl
push
sub
les
push
add
sub
adcl
stos
push
in
sti
test
ret
or
shll
aad
inc
mov
adc
lret
and
cmp
scas
loop
adc
dec
adcl
scas
push
xchg
in
movsl
mov
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
aaa
fdivrl
int
adc
xor
push
ljmp
cwtl
mov
shl
imul
scas
ret
pop
sub
or
sbb
out
xchg
movsl
ds
cwtl
int3
das
rcrl
leave
mov
jnp
fndisi(8087
or
movsb
push
pop
adc
jecxz
dec
or
cwtl
fdivrs
cmp
aaa
jg
sub
popf
jge
push
push
push
mov
sub
nop
fbstp
mov
in
or
push
fwait
mov
or
sbb
bound
rcr
sbb
and
inc
xlat
test
mov
frstor
mov
popa
mov
push
jl
out
dec
out
lea
push
test
jno
add
mov
insl
pop
mov
bound
mov
cmp
out
daa
dec
leave
inc
loopne
dec
mov
int
push
cmc
sub
lcall
add
mov
sbb
out
popa
push
mov
jl
fimull
adc
loope
cmp
das
mov
pusha
mov
scas
js
push
in
rclb
std
mov
sub
sub
inc
cmp
adc
xor
sub
mov
and
mov
xchg
push
ljmp
cmpsl
sbb
push
jge
jle
lret
das
sbb
jno
arpl
ret
or
repnz
ja
in
stc
and
mov
inc
icebp
mov
inc
ret
or
mov
xorl
push
leavew
mov
jns
in
lods
mov
or
mov
faddl
ret
ja
dec
sub
popa
into
push
or
and
daa
imul
mov
rolb
mov
pusha
and
test
fstl
js
pop
sbb
jle
clc
fsts
iret
push
std
int3
faddp
imul
es
mov
push
loope
outsl
bound
lods
jp
push
dec
jne
xchg
xlat
pop
inc
mov
and
loop
mov
add
sub
test
sbb
pop
fdivrs
aaa
and
jne
cwtl
pop
out
fs
add
lods
fcomip
lret
aam
inc
jp
push
sarl
sbb
pop
cmc
inc
push
lods
and
and
std
jne
sarb
and
dec
shlb
add
jp
cwtl
call
adc
push
mov
and
ja
xchg
mov
in
cwtl
adc
xchg
dec
xchg
mov
add
lret
fdivrs
xchg
adc
cmp
es
movsb
test
sub
inc
cli
inc
cwtl
mov
int
push
cmpsb
cmp
lods
and
iret
pop
scas
sbb
xor
mov
fmul
push
lcall
sahf
sub
xchg
popa
xor
push
gs
loop
and
rol
add
scas
scas
enter
outsb
xchg
or
inc
les
repnz
add
std
adc
pop
in
lods
mov
push
lds
pop
add
pop
or
cmpsb
ds
mov
loope
mov
or
jle
shll
iret
andb
decl
add
shrl
aaa
push
jbe
fldt
and
push
cmp
les
scas
stos
xchg
pop
mov
leave
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
cmp
sub
out
adc
int
adc
shlb
out
daa
stc
test
notb
aas
outsl
sar
mov
sbb
shll
divl
jmp
jle
ljmp
add
mov
out
aad
xor
add
add
enter
js
loope
cmpsl
pop
in
lret
xchg
inc
xor
cmp
jb
fdivrs
or
xchg
sbb
shrb
xorl
mov
and
xlat
sub
arpl
loop
mov
mov
imul
out
push
cmpsl
outsb
sbb
lcall
inc
push
notb
ss
ds
repnz
pushf
std
xchg
ret
sub
in
es
insb
sti
sub
mov
cltd
mov
inc
jo
std
mov
cmp
int
jbe
xchg
lret
adc
xlat
into
call
mov
and
lcall
rclb
aas
xchg
jae
into
stos
and
das
pop
mov
pop
push
pop
add
add
push
lcall
orl
or
mov
xor
daa
jbe
js
jmp
jecxz
and
orb
sbb
gs
imulb
mov
pop
test
outsb
lret
mov
flds
xor
jb
es
adc
mov
jg
loopne
push
xor
je
std
mov
jmp
test
push
clc
repnz
jmp
insl
mov
jp
jle
sbb
cs
jb
icebp
cs
mov
leave
mov
mov
loopne
sahf
jns
or
loope
pop
dec
xchg
repnz
in
sub
js
mov
ljmp
idiv
div
mov
push
pop
xchg
xor
mov
inc
push
jecxz
xor
repnz
push
sbb
insb
fdivs
xchg
mov
cmp
lds
xor
iret
add
lea
nop
cmp
pop
movaps
stos
into
es
lahf
and
clc
dec
or
cmp
gs
clc
sbb
mov
movb
dec
les
mov
insl
sub
pop
nop
cmpsb
xlat
jmp
mov
test
sbb
xor
outsl
mov
lea
fnstsw
sahf
pop
fs
dec
iret
sub
push
jnp
in
push
jae
mov
or
leave
dec
test
xchg
xchg
shlb
or
dec
inc
jbe
addb
adc
in
std
xchg
xor
cmp
cmpl
icebp
xchg
sbb
dec
jno
mov
cmp
jb
subb
fildl
mov
ljmp
in
out
ss
mov
shrb
das
xchg
sub
shr
jl
add
add
mov
lret
std
inc
in
sub
push
inc
mov
xorl
mov
fs
push
mov
cmp
sbb
ljmp
pop
inc
pop
mov
add
cmp
aam
int
repz
pop
fsubs
mov
shl
inc
nop
bound
jle
lods
xor
or
bound
jp
cmpsb
bound
inc
xor
ficoml
and
or
sub
daa
movsb
sahf
outsl
pop
ficomps
repz
or
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
inc
out
mov
int
adc
pop
lea
jl
fdivrp
lahf
les
dec
imul
xchg
and
out
cmpsb
test
call
mov
cmp
in
add
cwtl
icebp
jmp
dec
jmp
or
scas
jns
or
in
sub
cmp
add
pop
mov
test
sbb
mov
mov
aaa
pcmpeqd
xor
cmc
aas
lods
gs
lods
adc
inc
test
ljmp
mov
mov
je
jmp
mov
popa
jns
jl
out
lret
fs
inc
sbb
jno
adc
fcomps
nop
out
mov
test
dec
cwtl
push
fst
dec
int3
imulb
out
addr16
and
jmp
rorb
mov
cmc
push
pop
aas
xchg
push
out
setp
push
ret
cmpsl
jl
pop
xorb
les
mov
or
push
inc
dec
jmp
sbb
dec
mov
aad
ljmp
mov
imul
mov
pop
adc
js
xlat
jb
sub
ret
cmp
xorb
mov
sahf
mov
jg
jnp
gs
dec
mov
mov
jnp
inc
insb
pop
add
push
xor
ret
mov
clc
nop
sahf
lods
fcomi
sub
or
mov
sar
je
and
mov
test
dec
adc
or
mov
imul
push
or
cmpsb
push
dec
jg
jns
inc
add
dec
inc
mov
ret
pop
xchg
mov
mov
sbb
fiaddl
xchg
push
cltd
js
add
cmc
adc
sub
mov
movsb
scas
imull
inc
push
jbe
dec
popf
and
enter
test
stos
cmp
push
mov
sbbl
xor
and
push
stos
loope
push
and
sahf
xor
lods
sti
setns
stos
fiadds
mov
push
jmp
cli
adc
insl
imul
dec
dec
pop
pusha
faddp
push
xor
mov
push
cli
mov
xchg
stos
xor
dec
scas
dec
sub
movsl
icebp
out
fstps
add
jae
aad
aam
shl
call
inc
leave
mov
jae
cwtl
das
pop
outsb
mov
lds
sbb
push
and
dec
daa
xor
ja
out
roll
es
les
fidivl
in
mov
push
sub
pusha
or
and
scas
mov
aaa
pop
cmpb
mov
test
cmp
lret
sub
hlt
and
in
imul
pusha
inc
jl
inc
stc
stos
dec
adc
add
xor
shlb
into
daa
or
or
adc
add
mov
sahf
dec
cmp
sbb
jno
cmp
and
pop
ror
adc
and
sbb
dec
jnp
movsl
enter
jae
sti
pop
lret
out
popa
and
mov
mov
insb
mov
inc
andl
jo
push
repz
out
outsb
data16
add
icebp
pop
leave
add
test
inc
iret
pop
fdivrl
dec
cmp
sahf
mov
in
sub
subps
xchg
xor
call
negb
push
testb
mov
mov
and
mov
ret
insl
je
fcompl
aas
rol
in
cmp
cltd
mov
loope
or
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
stos
subb
out
adc
adc
adc
shrl
mov
sub
jmp
mov
and
push
popf
stc
es
inc
cmpsl
mov
fs
popf
pop
cwtl
mov
imul
sub
popa
int
sbb
pushf
inc
adc
imul
inc
bound
push
cs
add
or
add
xor
ret
and
adc
lea
cltd
jge
jge
jp
mov
pop
xor
mov
jne
adc
pop
cmp
daa
in
cmp
pop
dec
xorb
test
dec
fidivrl
push
inc
pop
jle
and
xchg
ss
leave
xor
sbb
xchg
xchg
push
xchg
dec
fs
jl
faddl
imul
inc
pushf
icebp
add
cmpsb
xor
mov
leave
pop
orb
sahf
cmc
loop
sbb
mov
rclb
cwtl
jmp
fwait
push
ljmp
sbb
cmpsl
sub
test
mov
out
in
cmp
icebp
shlb
out
mov
lret
ret
xchg
xchg
and
hlt
in
pop
cmpsb
jnp
xchg
and
xor
out
mov
jecxz
int
or
je
leave
xchg
jle
pushf
pop
xchg
inc
out
inc
stc
or
ffree
mov
add
xor
orb
push
int3
lock
ret
add
dec
dec
insl
push
stc
mov
movsl
pop
fisubs
jecxz
dec
data16
dec
add
ds
call
push
xchg
cmp
adc
mov
std
call
xor
dec
leave
dec
test
inc
xchg
pop
push
xor
sbbl
cli
fs
ret
mov
rclb
fsts
push
cmp
and
inc
lahf
rcrb
pop
dec
or
sahf
sahf
pop
or
ss
and
rolb
sbb
je
ss
mov
in
mov
xor
inc
insb
mov
mov
sub
mov
pop
ret
int3
cmp
jne
fisubrl
test
jg
fidivrs
or
mov
repz
sbb
data16
sbb
arpl
rorb
aam
fcoml
jbe
das
scas
mov
pushf
fwait
jl
aas
pushf
std
xlat
in
xlat
add
sub
loop
cld
negl
incb
out
std
pop
cmp
push
daa
daa
loope
or
daa
mov
leave
std
push
lock
or
jbe
cmc
push
cmp
jo
imulb
xchg
add
inc
push
sbbb
and
or
lods
sub
ret
xchg
or
pop
int3
add
inc
pop
xchg
dec
adc
add
mov
sub
movb
mov
sub
mov
inc
or
stc
mov
lods
pushf
out
xchg
adc
ss
std
pushf
push
jne
fmuls
and
cmp
adc
cwtl
mov
sbb
int
out
push
jno
test
ret
dec
leave
pop
inc
mov
pop
insb
or
xor
push
and
pop
fstpl
pushf
add
decb
pop
sbb
xchg
int
lods
call
dec
sti
stc
push
add
pop
mov
mov
and
cmpsb
cli
movsb
and
aas
fisubrl
sbb
adc
sbb
jecxz
ja
xor
pop
imul
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
sub
insb
ficoms
adc
adc
adc
jg
lea
mov
idiv
ljmp
mov
mov
jle
out
daa
jmp
dec
clc
in
pop
icebp
lds
xor
sbb
xor
pop
xor
sub
loop
getsec
sub
shll
mov
lods
mov
xlat
add
mov
adc
jbe
ja
push
xchg
aaa
xor
xor
inc
scas
stc
andb
jp
mov
sbb
xchg
push
cmp
xchg
pop
xchg
add
sub
push
mov
push
mov
in
add
pop
and
and
pop
sbb
clc
mov
mov
pop
pop
cmp
arpl
cmp
pop
mov
xor
in
fwait
mov
xchg
in
lret
outsb
fbstp
inc
jbe
dec
in
cmp
imul
dec
stos
xchg
cmpsl
scas
pop
xor
outsb
xchg
and
jecxz
jp
dec
mov
cli
lahf
mov
xchg
pusha
and
adcl
adc
and
push
mov
addl
nop
add
mov
mov
aaa
negb
pop
xor
shlb
xor
pop
jle
dec
mov
jecxz
lcall
inc
or
sub
jae
loop
push
lea
and
je
aas
push
popa
inc
push
adc
jmp
and
aad
mov
out
data16
std
ds
dec
scas
std
mov
repz
xchg
jb
add
pop
gs
addr16
sbb
cmp
lods
dec
test
ljmp
out
in
mov
lock
nop
pop
mov
xchg
leave
dec
inc
push
test
imul
push
andb
xchg
rolb
lea
xor
addr16
stos
fistps
aas
xchg
inc
cld
std
sbb
xchg
mov
lret
and
or
add
add
sub
fwait
xchg
clc
sub
bound
xor
mov
fs
fndisi(8087
loopne
sub
aad
mov
loopne
icebp
into
mov
aam
dec
push
push
leave
cmp
sahf
clc
ret
retw
imul
mov
lcall
ljmp
jmp
hlt
pop
decb
cmpsl
mov
cmc
jo
jbe
mov
cs
add
adc
stos
bnd
pop
aad
and
push
jg
das
mov
dec
out
sbb
push
fcompl
push
fidivs
or
xor
das
jbe
addr16
in
xor
inc
gs
arpl
fst
lcall
or
push
adc
fnstcw
fsubrp
cmp
cld
mov
cmp
lret
shl
ljmp
sub
dec
xchg
mov
shlb
pop
xchg
xor
cwtl
xor
adc
xor
outsb
stos
inc
mov
insl
roll
mov
and
jg
inc
dec
scas
loope
mov
mov
jp
ljmp
std
cmp
jecxz
test
call
xor
pop
ja
dec
inc
lock
pop
aam
mov
add
mov
flds
enter
sbb
ds
or
or
cmpsb
outsl
and
mov
arpl
mov
jmp
imul
enter
adc
jmp
mov
shl
jmp
fmuls
sbb
jno
mov
jge
adc
int
adc
outsl
push
sahf
loop
sub
xor
fwait
mov
lds
mov
jne
repnz
cld
repnz
xchg
and
stos
and
sub
in
je
inc
in
dec
sub
or
adc
push
mov
add
mov
add
jae
ss
sub
push
dec
in
cli
lock
mov
ljmp
shlb
dec
inc
mov
sti
adc
sub
xchg
xor
jb
xor
push
or
pop
jbe
and
xchg
jne
out
mov
popf
pop
xlat
fists
cmpl
add
or
xchg
stos
pop
or
xchg
mov
fs
out
mov
daa
xor
in
xchg
sarl
xchg
fadds
loope
inc
jp
add
mov
push
das
add
rsqrtps
aad
jmp
loopne
popa
sbb
cmp
pop
pop
cmpb
out
test
or
mov
pop
out
into
and
pusha
pop
dec
sbb
pop
xchg
popf
pop
faddp
clc
pop
mov
stos
jae
sub
jmp
mov
aaa
ljmp
popa
push
pop
jmp
pop
mov
gs
mov
xor
jle
mov
mov
data16
or
cmp
mov
adc
inc
fiaddl
in
or
inc
stc
dec
sub
jo
in
dec
popf
popf
les
in
sbb
push
mov
sbb
sbb
mov
xlat
sub
push
push
xchg
fldenv
in
lret
call
or
imul
stc
ret
movsb
mov
test
mov
jp
ret
subb
and
stos
xchg
stos
stos
jne
cli
cmp
out
and
out
xchg
stc
push
jle
call
cwtl
mov
cld
mov
idivb
inc
and
in
cld
mov
adc
add
adc
cmp
enter
add
inc
ret
push
movsb
mov
sbb
mov
out
rclb
sarb
js
std
imul
adcl
sti
adc
mov
push
or
es
mov
push
dec
adcw
nop
sbb
or
sbb
orb
sub
in
xor
bound
mov
and
dec
xor
mov
sbb
xchg
ret
push
pushf
and
daa
or
inc
xchg
shlb
es
je
popf
cmp
mov
xchg
es
adc
jge
sbb
sbb
dec
fdivs
or
loopne
lahf
sub
pop
add
negl
adc
push
fsubs
mov
jl
inc
into
fwait
adc
adc
jmp
push
shlb
xor
hlt
jns
push
and
scas
or
lcall
cmp
inc
xchg
add
ficoms
cmp
rorb
inc
pop
dec
sbb
push
cmp
dec
or
gs
add
xlat
call
cmpsb
add
and
sbb
gs
loop
or
test
jmp
lret
enter
imul
jge
and
mulps
nop
xor
inc
gs
jo
decb
call
test
sahf
cmpsb
pop
push
les
mov
fsubs
rolb
jae
stos
push
ds
cli
fbstp
dec
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
or
int3
adc
int
adc
add
aas
xor
sub
pushf
scas
xor
dec
inc
adc
mov
stc
cltd
xor
pop
sbb
inc
out
cltd
adc
inc
push
fldcw
push
test
iret
add
sbb
lcall
lret
pushf
pushf
int
and
add
fcmovu
adc
aad
lods
and
popa
pop
notl
insl
lea
jo
push
mov
pop
in
mov
jo
sbb
imull
push
jp
mov
mov
scas
fidivrs
aad
shl
mov
cmp
mov
pop
in
add
rep
setnp
fdivs
ss
or
or
lret
ja
ja
movsl
test
imul
nop
lods
push
and
jo
or
dec
push
rolb
jle
bound
sahf
loopne
and
int
ret
xor
xchg
pop
cmp
push
and
push
inc
rcrb
lock
or
lea
inc
sbb
sbb
test
test
movsb
sub
xor
xchg
into
aam
outsl
fdivrl
pop
testl
pop
addb
sarb
jnp
xor
addr16
js
cs
xchg
fsubrs
inc
cmp
xchg
es
popf
test
fldenv
ret
flds
stos
stos
push
cmp
mov
movsl
inc
int
pop
mov
mov
pushf
mov
in
int3
mov
mov
sub
scas
loop
mov
sbb
inc
je
iret
imul
push
movsb
mov
jmp
adc
dec
sbb
fistl
dec
push
imul
sarb
je
sbb
adc
push
jl
inc
inc
sub
sbb
repnz
xchg
jns
jg
add
jmp
jp
sbb
popa
jecxz
nop
repz
mov
fucomp
cli
mov
pushf
dec
cltd
mov
adc
push
sbb
fwait
repnz
xlat
lahf
pop
xchg
and
call
mov
stc
dec
mov
test
xchg
daa
mov
flds
xchg
and
je
test
adc
add
in
fsts
mov
mov
lret
pop
insl
pop
pusha
adc
push
mov
ss
mov
jl
out
hlt
fcoms
and
cmp
mov
loope
in
push
les
out
fimuls
pop
jbe
shll
popf
lret
outsl
das
jg
jmp
adc
xchg
mov
and
mov
fprem
cwtl
movsl
inc
adc
gs
mov
dec
insb
outsl
pop
sub
jl
icebp
test
sbb
mov
xlat
andb
test
inc
int
seto
les
loope
aam
mov
mov
xorl
jecxz
ljmp
push
xor
sub
jecxz,pn
cmp
loopne
mov
sub
inc
pop
sbb
lea
scas
loopne
test
cmp
adcl
sub
into
jno
dec
mov
fs
outsl
pop
cmp
cmpb
shrb
arpl
and
pop
lahf
inc
jmp
or
psrlq
aas
mov
inc
jmp
sub
cmpsb
xor
mov
sub
xchg
jbe
in
jecxz,pn
sbbb
add
adc
rorb
ret
cld
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
cmp
les
adc
adc
adc
dec
popa
sbb
roll
fistpll
fs
adc
test
les
jmp
test
xchg
sarl
xor
inc
and
sbb
iret
jnp
test
xchg
sbb
sub
push
sbb
repz
mov
xor
jo
mov
pop
xchg
cs
cmp
mov
jp
nop
sbb
push
adc
mov
dec
test
adc
in
movups
mov
or
mov
movl
sub
xchg
push
pop
mov
sub
cmc
rorb
mov
inc
int3
lea
cmpsb
fisubrl
inc
ljmp
mov
lock
loop
adc
sarl
fstpt
lods
mov
test
inc
test
cmp
mov
pop
dec
fnstsw
repz
loopne
std
aaa
mov
repz
inc
pop
sub
into
inc
inc
adc
and
xor
data16
inc
shl
jg
jmp
push
mov
into
jle
movsb
jns
int3
lock
cmpl
lock
lods
sub
jg
dec
fimull
icebp
sub
add
popf
mov
or
sub
decb
outsl
mov
sbb
insl
rcll
stos
ds
negl
mov
sar
pop
mov
fsubrs
inc
ucomiss
push
sti
inc
or
fwait
in
mov
push
or
sub
data16
fs
pop
jecxz
adc
cmc
inc
sub
cmp
insb
xchg
fwait
insl
mov
clc
mov
xchg
call
daa
aas
inc
push
mov
loop
jnp
and
cli
scas
ss
dec
jl
mov
pop
push
lock
mov
fists
mov
or
ljmp
mov
adc
jmp
adc
insl
cli
mov
dec
imul
outsb
test
jne
jae
push
xchg
into
jl
mov
xchg
dec
es
fmul
iret
hlt
sbb
mov
mov
and
mov
call
dec
jne,pt
fwait
jne
dec
mov
addr16
pop
mov
xchg
xlat
sbb
and
test
and
mov
out
push
sbb
cmpl
pop
xor
shr
or
fildll
pop
incb
pop
pop
push
filds
notb
rol
sbb
orb
jl
adc
sub
jle
xchg
and
popa
dec
cmp
mov
out
xchg
je
popa
add
sti
movsl
mov
cld
push
push
iret
dec
ds
icebp
gs
decb
dec
stos
pop
inc
insl
mov
jb
and
hlt
xchg
in
lods
je
into
cmp
dec
inc
adc
lahf
aam
inc
sahf
mov
adc
ds
or
sub
cltd
jo
enter
les
sahf
ror
dec
out
push
lcall
lcall
arpl
inc
mov
shll
fiadds
testb
sti
push
xor
xor
sbb
xor
insb
cmp
les
int3
mov
rorl
mov
push
nop
in
sbb
outsb
cmpsb
arpl
adc
xor
xor
push
sbb
mov
and
pop
test
push
sub
dec
adc
in
stos
into
aaa
stc
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
imul
adc
adc
adc
push
or
sub
nop
aas
jae
push
dec
sub
xor
shll
ljmp
in
sub
enter
movsl
iret
push
add
filds
ljmp
mov
add
push
mov
nop
loope
mov
xchg
insl
jmp
sub
mov
mov
aad
stos
push
cmp
xchg
push
ret
push
js
push
sbb
xchg
dec
pop
lahf
push
push
pop
mov
out
cld
mov
scas
xor
in
subl
jno
cltd
sub
jmp
aaa
test
dec
lock
test
mov
mov
or
addl
push
aam
andb
sbbl
jo
insb
outsl
or
mov
nop
out
mov
add
or
dec
fucompp
hlt
jg
std
pushf
in
dec
orb
dec
cmp
jnp
mov
mov
and
stos
popf
lds
shl
and
jmp
ret
dec
in
jge
and
mov
jae
addr16
adc
xor
mov
mov
std
out
mov
cmp
xchg
xor
popa
subl
dec
call
or
inc
jecxz
movsb
mov
movsl
in
jne
aam
fsubr
cmp
cli
jmp
xor
adc
inc
stc
outsl
push
cmp
loopne
and
inc
jnp
ret
dec
cmp
testb
jl
pop
clc
das
mov
repnz
outsb
stc
in
lret
fucomip
or
ss
movsb
push
jecxz
test
test
xor
xchg
nop
loop
add
jb
mov
jl
test
and
cmp
leave
push
lock
es
lcall
popa
mov
test
inc
mov
icebp
shll
idivb
cld
ficompl
lds
in
lods
push
ds
sbbl
xchg
movsl
inc
pop
xor
clc
mov
pop
mov
dec
or
popf
nop
inc
add
mov
test
scas
aaa
pop
xchg
dec
out
dec
int
sbbl
movsl
mov
data16
and
xchg
fistl
data16
lahf
mov
xor
pop
test
mov
xchg
inc
mov
pop
sbb
mov
lahf
jp
scas
popf
dec
pop
daa
fwait
icebp
sbb
sub
and
loopne
out
jae
dec
stos
int
sti
jmp
jp
lea
fcmove
push
lods
pop
mov
jb
xor
jecxz
or
mov
in
lds
fistl
fs
sub
mov
mov
jge
inc
adc
repz
test
sub
mov
lods
jb
pop
fildll
push
push
lods
sub
mov
fcoml
mov
mov
loopne
xchg
insb
adc
pop
adc
jno
push
xchg
cmp
shlb
dec
shl
xchg
push
ror
pop
pop
pop
push
iret
add
popa
mov
subl
push
out
mov
sti
mov
xchg
cmc
dec
mull
and
sbb
roll
adc
mov
js
out
mov
and
add
aad
das
xchg
in
xchg
add
push
test
inc
xchg
in
lret
pop
inc
sub
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
out
js
mov
adc
cmp
dec
and
sub
and
insl
and
rol
mov
jmp
adc
xchg
push
fwait
lds
test
and
cltd
xchg
jl
hlt
dec
addb
aad
push
mov
insb
mov
sbb
pop
pushf
inc
mov
xor
lds
add
jl,pt
ret
icebp
sbb
push
rcl
xor
into
jge
test
add
sbb
mov
ja
clc
sbb
jmp
cmc
pushf
xchg
or
in
jne
push
lock
aas
imul
scas
insl
push
or
int
lahf
and
push
aas
pushf
clc
ja,pn
inc
xor
dec
addr16
sub
push
es
int
fldt
jnp
push
movsb
mov
xchg
repz
les
mov
add
out
roll
pop
pop
add
push
loopne
push
adc
cmp
mov
gs
or
std
aad
sub
lret
fisttpl
add
lret
jg
sub
mov
ljmp
pop
add
jnp
mov
mov
add
icebp
test
dec
push
into
or
sbb
movsl
mov
mov
jecxz
hlt
enter
rcll
pop
xor
hlt
cmp
push
sbb
adc
and
mov
fidivrl
xchg
jg
cmp
dec
push
into
push
mov
add
pop
jae
in
pop
and
clc
pop
fisubrs
les
pop
shlb
push
and
in
push
leave
popf
adc
lods
fildll
push
je
jle
add
test
ja
out
repz
jno
pop
dec
push
mov
mov
fcompl
js
fcompl
and
lods
lds
testb
sbb
std
add
jno
loopne
lock
sub
push
sub
outsl
dec
push
imul
push
fs
insb
ret
stc
out
repz
or
shr
adc
aas
sbb
adc
lea
fbstp
sub
shrb
sub
and
xchg
cmp
jae
sbb
jns
negb
data16
cs
movsb
dec
call
stos
bound
and
mov
add
cmp
cmp
pop
or
push
sub
sub
xor
inc
xor
shl
sbb
and
adc
pop
mov
adc
sub
xor
sahf
mov
mov
push
iret
mov
mov
movsl
pop
pushf
and
lods
sub
sbb
das
mov
adcb
mov
out
inc
push
or
cltd
imul
jmp
nop
cmpsl
pop
dec
adc
jns
loope
push
xchg
and
xor
mov
fcmovb
incl
add
lret
inc
lods
outsl
mov
lock
out
dec
pop
pop
hlt
lea
xchg
mov
test
add
inc
pusha
ljmp
pop
xchg
xchg
aas
loopne
nop
enter
into
sti
stos
popa
cmp
xor
hlt
lea
xor
sub
jns
out
call
add
loopne
ja
cmp
je
mov
xchg
lds
add
inc
xchg
loope
and
mov
cmpsb
outsb
roll
pop
sbbb
scas
add
aad
shrb
movl
mov
dec
adc
mov
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
loope
idivl
mov
adc
adc
adc
or
jmp
cmpl
loopne
mov
ret
add
ret
lods
fnsave
clc
pop
mov
sbb
adc
or
push
jle
inc
jno
outsl
gs
ret
xchg
into
pop
pop
pop
xlat
xchg
pop
lds
cmp
mov
daa
xor
jg
outsb
sbb
mov
push
fwait
cmp
mov
imul
inc
call
sbb
cmpsl
add
in
pusha
arpl
js
xor
dec
adc
cltd
pop
pop
inc
imul
xor
mov
fbstp
mov
stos
adc
rorl
inc
pop
cli
lds
fldenv
or
add
rorl
out
adc
lea
lods
and
sub
nop
sub
and
int3
xlat
xor
push
push
cmp
mov
xor
test
iret
mov
xor
std
jecxz
sbb
aam
and
jns
test
or
pop
test
imull
jl
cmovo
xor
mov
nop
fcomps
sbb
xchg
lcall
xor
adc
dec
and
mov
out
sub
push
std
loopne
push
movsl
fwait
hlt
lds
xchg
dec
jp
and
mov
adc
test
jo
inc
or
arpl
sbb
push
loop
jbe
mov
pushf
dec
test
add
jmp
push
push
jmp
jne
test
adc
loopne
in
add
push
or
dec
mov
sub
sub
in
xlat
pushf
daa
sub
sbb
adc
scas
mov
xor
fnstenv
mov
or
xchg
mov
imul
lea
jecxz
call
fadds
mov
jmp
mov
and
jg
stc
movb
push
cmp
repz
cld
loopne
clc
daa
ret
mov
inc
add
jecxz
xchg
stc
cwtl
mov
jle
insb
xlat
jns
push
mov
mov
pop
dec
or
jg
imul
mov
insb
add
jbe
pop
lods
aaa
sbb
add
jmp
leave
mov
mov
int
mov
add
ret
xor
int
cmp
xchg
lods
sub
rcrl
sbb
adc
in
inc
out
dec
inc
rcrl
sahf
and
int3
xor
mov
add
fsubr
das
sbb
ret
and
fucomip
cs
call
flds
imul
cmp
cmc
and
rcl
dec
outsb
xor
ss
cmp
jmp
insb
pop
ja
fwait
rorl
cmp
jbe
inc
pop
dec
imul
adc
cmp
jle
roll
cmp
cmp
sub
aad
mov
ja
movsl
sbb
cmc
sub
js
mov
lds
jge
sub
dec
test
loope
xchg
fcmovnbe
sbb
sbb
mov
sbb
loopne
cs
aam
sub
cmp
clc
repz
lods
out
mov
or
clc
rol
subb
cld
arpl
aam
mov
stos
or
fs
cs
push
les
mov
and
pop
aad
jecxz
jo
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
jl
jle
test
adc
adc
adc
push
or
add
cmp
out
inc
cmp
jp
mov
mov
jnp
mov
scas
lret
fdivs
lcall
xor
outsb
sti
pop
push
sub
ret
adc
adc
hlt
sbb
arpl
push
cwtl
inc
sbb
sahf
arpl
lcall
mov
xor
sub
add
inc
in
or
adc
or
sbb
mov
xchg
fldenv
push
cmp
and
pop
imul
dec
mov
popf
push
jo
adc
cs
mov
dec
dec
mov
add
add
adc
push
and
sub
xchg
sbbl
repnz
mov
xlat
push
in
imul
lds
dec
stos
out
outsl
scas
pop
inc
lret
ja
inc
pop
push
imul
test
mov
movsl
push
mov
add
pop
adc
add
cmp
pop
lcall
add
jmp
pop
in
int3
dec
test
fwait
xor
add
lods
mov
dec
ja
ja
sbb
cmc
out
cmp
jns
mov
xchg
xchg
sub
testb
lods
push
rcrl
pop
pop
repz
imul
leave
adc
ja
mov
out
sahf
mov
pop
out
cs
notb
icebp
call
xlat
mov
test
cmpsl
popa
and
adc
int3
fsts
sbb
stc
dec
shr
adc
xor
cmpb
mov
mov
sbb
jbe
add
aam
inc
insb
push
loope
gs
inc
pop
pop
mov
jo
dec
and
outsl
repnz
bndldx
shlb
jae
dec
jl
imul
or
test
cmp
lcall
cmp
sub
idivl
lahf
jp
add
sti
xor
push
pop
mov
inc
je
pop
repnz
stc
xchg
mov
or
mov
mov
scas
jns
xchg
mov
sbb
sub
adc
and
xor
add
mov
mov
pop
ffree
js
push
mov
mov
lock
mov
int3
popf
dec
out
pop
lcall
jmp
push
xchg
mov
inc
int3
scas
fistps
push
icebp
movsb
xor
popl
clc
pop
call
lahf
cmc
cmp
xchg
jmp
dec
xchg
mov
pop
insl
xor
rclb
add
arpl
loope
cld
test
stc
push
and
xchg
mov
mov
ss
dec
sbb
clc
pop
mov
cmp
pop
out
out
into
xchg
dec
repz
adc
popf
pop
gs
cmp
cmp
adc
inc
repz
or
js
lcall
mov
mov
fs
xorl
es
pushf
pop
das
fsubr
addr16
jo
ss
inc
and
dec
sub
mov
fsubrs
dec
nop
xchg
add
lcall
addr16
mov
aas
inc
insl
cmp
xor
mov
in
and
or
lahf
das
insl
inc
mov
es
iret
sub
fstl
xchg
cmp
es
fucomp
jmp
iret
push
and
and
stc
mov
jmp
cmp
xchg
pop
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
rcrl
stos
je
adc
int
adc
fsubrs
pop
sbb
mov
ret
jbe
test
adc
imul
daa
or
push
lock
iret
cltd
rcrb
ljmp
jecxz
cmpsl
xlat
std
push
xchg
mov
sub
mov
pop
orl
ds
lock
or
lods
xor
sub
outsb
inc
int
repnz
mov
cmp
cli
int3
loopne
int
push
mov
shll
mov
sbb
pop
mov
fdivl
mov
out
ret
jb
daa
sub
lods
xchg
adcb
adc
or
gs
hlt
push
dec
icebp
daa
mov
leave
sub
add
repnz
iret
and
mov
pushf
sbb
cmovae
outsl
mov
pop
inc
test
lods
push
int
loopne
fistpl
test
xchg
call
push
shll
push
imull
hlt
ja
dec
movnti
gs
daa
ffreep
lods
scas
scas
xchg
add
sarb
xor
sub
std
jp
inc
nop
sahf
dec
lods
push
stos
mov
test
dec
mov
in
mul
xor
dec
mov
and
lsl
xlat
cwtl
adc
and
push
pop
mov
xchg
cmp
movsb
mov
mov
imul
or
aaa
fwait
xchg
packssdw
jns
mov
sahf
aad
mov
sbb
cmp
call
lcall
sti
sbb
or
cld
movsl
lcall
xchg
fidivl
pop
push
scas
lcall
inc
in
mov
push
stos
adc
jp
mov
inc
sar
sahf
mov
out
jmp
test
jbe
divps
mov
sbb
mov
aas
xlat
mov
rcl
ja
scas
mov
and
fnsave
dec
dec
scas
jecxz
pop
pop
xchg
fwait
xchg
stos
inc
into
mov
ret
or
out
pop
int3
stc
push
inc
dec
dec
ret
inc
nop
pusha
arpl
sub
dec
test
xchg
xchg
pop
jns
inc
mov
or
mov
dec
inc
adc
xor
xlat
xor
and
push
js
mov
out
inc
daa
addr16
out
aas
or
and
inc
int
xchg
sub
std
mov
and
jno
fucomi
xor
mov
dec
and
mov
es
and
imul
cli
cmp
push
inc
jp
popf
mov
or
movsb
inc
scas
out
push
mov
push
scas
add
sub
xor
hlt
jge
ret
rcr
cmpsb
mov
push
fcom
and
das
pop
repnz
mov
test
xchg
fsubr
dec
pop
loop
leave
ds
hlt
int
fldcw
jnp
or
imul
lcall
ret
dec
popf
les
das
arpl
pushf
mov
dec
repnz
int3
mov
add
push
push
pop
icebp
je
sub
mov
adc
outsb
in
je
popf
ds
pop
out
test
mov
in
sbb
iret
and
sbb
shr
sub
add
insb
or
mov
arpl
sbb
push
mov
mov
push
and
gs
nop
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
fistpll
push
rcrb
mov
pop
xchg
cld
adc
adc
fs
es
cmp
pop
lret
pop
shll
ljmp
inc
outsl
and
mov
fdiv
mov
xchg
je
cmpsb
or
and
dec
lods
ljmp
pop
push
mov
pop
pop
fistpl
iret
lret
imul
mov
out
dec
aaa
outsb
mov
dec
es
cmpsl
adc
push
add
mov
cmp
fs
mov
fdivrp
xchg
andb
or
int
lret
lock
cltd
ret
ret
jae
mov
insb
xchg
inc
fwait
andl
pop
stos
mov
mov
andl
out
lcall
jno
or
mov
add
inc
mov
mov
in
mov
icebp
test
dec
loop
and
pop
inc
movsb
inc
xchg
mov
adc
icebp
add
sub
cmp
pop
sub
pop
inc
jmp
mov
sbb
sub
pop
push
mov
lea
jl
mov
mov
jg
mov
mov
dec
inc
out
add
cmp
andl
shr
xor
pop
test
mov
mov
mov
or
arpl
push
push
mov
ds
push
adc
clc
repnz
xchg
inc
inc
and
jbe
testb
pusha
insb
sbb
adc
out
adc
xor
orl
and
sbb
lahf
iret
pop
jge
repz
pop
aad
pop
cmp
adc
add
mov
push
pop
in
xchg
xor
and
je
cltd
shrb
fidivs
cwtl
inc
ret
cltd
ret
outsl
stos
fwait
pop
stos
ss
mov
lret
pop
jmp
flds
fsubs
inc
js
dec
adc
push
sub
adc
jg
into
lods
xchg
fs
dec
ficoml
dec
das
stos
fs
sarb
mov
mov
jb
add
inc
cmpsl
mov
add
aam
jl
lahf
andb
js
add
and
add
fldcw
insl
and
aam
outsb
push
and
sbb
inc
dec
dec
imul
int3
inc
test
sub
lock
mov
sub
lret
xchg
fwait
mov
shrl
dec
jo
out
adc
mov
rcrl
add
pop
dec
xchg
lods
jne
pop
cmpsb
pop
inc
fimuls
xchg
clc
and
add
jle
sbbl
cmp
loop
lcall
into
mov
lahf
shl
cmc
iret
mov
rcrb
mov
mov
and
inc
pusha
xchg
or
adc
push
mov
xchg
out
hlt
mov
and
enter
mov
mov
fsubrs
pop
decb
add
sub
mull
int3
mov
mov
mov
arpl
orb
mov
cltd
imul
test
in
insl
or
test
sub
cmp
jmp
dec
mov
mov
xor
loopne
jbe
push
loope
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
rcrl
push
adc
nop
dec
sub
push
sbb
mov
xchg
outsb
cld
or
mov
or
movsl
fmul
jle
cwtl
mov
cmp
xchg
inc
data16
pop
test
sbb
lret
loop
inc
pop
mov
lret
fxtract
out
sbb
push
push
adc
xor
lds
mov
xlat
pop
mov
push
push
lcall
aas
mov
sbb
inc
inc
stc
pop
mov
xor
pop
fwait
cmp
mov
ret
dec
lods
out
movsl
aad
xor
rol
lahf
fldl
std
adc
nop
mov
xor
call
in
lcall
popf
dec
ds
mov
fwait
lret
clc
lahf
in
and
and
and
movsb
or
push
lock
and
insl
push
xchg
push
bound
dec
arpl
stos
lret
jl
shlb
mov
sar
cmp
or
pop
and
int
dec
and
popaw
or
mov
scas
mov
lahf
test
pop
fwait
inc
mov
mov
pop
inc
sbb
movsb
push
mov
aaa
gs
cmpsl
mov
push
mov
filds
out
fidivrl
adc
push
xchg
push
les
push
out
popa
cmp
pop
sub
adc
outsb
and
jbe
pop
jbe
jne
sahf
stos
aam
mov
pusha
mov
popa
out
cmpsl
jl
pop
sub
cltd
fcomps
jae
mov
ja
cld
mov
inc
jecxz
popf
inc
inc
fdivrl
fadds
mov
test
and
negb
mov
gs
adc
es
inc
adc
ljmp
arpl
lods
leave
adc
daa
pop
push
and
push
fimuls
dec
loope
push
lcall
pop
adc
sbb
int3
inc
dec
mov
xor
pushl
je
cmpsb
sbb
mov
mov
sub
fiadds
xchg
mov
xchg
push
les
jns
popf
out
xlat
inc
fwait
sbb
fidivl
test
inc
jp
dec
adcb
arpl
and
push
push
dec
xor
xlat
sub
sti
mov
cmp
imul
mov
pop
dec
addr16
or
shl
jb
subl
int
cmp
pop
popa
jmp
inc
ljmp
into
aad
sub
jo
xor
pushl
or
loop
jno
pop
mov
in
fsubl
cmpsl
pop
jge
cmp
cmpsl
mov
pop
inc
push
mov
lods
mov
dec
daa
mov
jecxz
sbb
push
imulb
movsb
xchg
pop
in
xchg
jb
shrl
xchg
mov
icebp
aam
cmp
subl
ljmp
aas
push
insl
std
inc
insl
leave
mov
in
insb
cmp
push
test
loope
pop
jnp
aad
in
xor
in
jae
int
sub
js
jne
sti
shr
mov
pop
xor
popf
shll
test
das
xor
adc
je
mov
out
into
jnp
xor
dec
push
lret
das
imul
push
out
pop
in
fyl2x
add
nop
lock
mov
xchg
cmc
repz
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
inc
stos
lcall
adc
cmp
std
dec
xchg
cmp
and
out
adc
mov
insl
imul
inc
push
inc
sbb
enter
mov
sti
scas
out
mov
out
cli
pop
mov
xlat
into
pusha
xchg
mov
push
push
movsl
and
dec
lods
repnz
shll
ret
call
aas
call
into
or
cmpsl
cmp
mov
mov
mov
jp
cmp
sbb
test
std
out
mov
mov
fisubl
das
fcmovu
rcl
das
mov
jns
aaa
stos
xchg
fcomip
mov
xor
pop
cmp
pusha
inc
add
push
inc
bnd
adc
adc
push
hlt
cmp
insl
mov
scas
test
outsl
les
xchg
fwait
aaa
stos
clc
push
mov
xchg
sbb
pop
scas
outsb
cmp
outsb
shlb
push
push
mov
loop
sbb
or
cltd
dec
xchg
and
cmp
inc
mov
dec
mov
out
js
sub
outsl
sub
sub
jmp
in
pop
shrb
loope
xchg
push
xchg
cld
loope
les
pop
add
mov
sti
lods
out
adc
mov
pop
xor
leave
out
and
lcall
ljmp
xor
jecxz
inc
cmp
push
sub
test
aad
jge
pop
pop
dec
xor
xchg
mov
dec
cli
mov
sub
sahf
inc
push
lds
and
add
mov
scas
push
lods
mov
mov
inc
stc
addb
in
inc
sbb
int3
inc
jge
imul
pop
arpl
xor
imulb
lea
test
inc
js
in
insb
mov
cmp
lcall
sarb
inc
test
inc
mov
outsb
sbb
repz
add
xor
movsl
and
push
pusha
mov
push
cwtl
fiadds
fdivrs
pusha
add
xchg
jbe
add
ret
cmp
add
shl
fdivs
in
inc
sub
mov
xchg
outsb
jg
popa
dec
imul
enter
ficoml
xor
jmp
lret
mov
cs
xchg
pop
inc
inc
dec
gs
add
stc
test
dec
sub
out
mov
fld
inc
push
mov
xor
sbbl
fcmovu
jnp
add
les
fadds
sbb
iret
loop
jbe
xchg
lahf
cli
adc
mov
pop
xor
icebp
cli
jne
nop
jnp
pop
orb
lahf
mov
lahf
lods
mov
jge
xorl
loopne
es
pusha
sub
cmpsl
insb
ss
jge
adc
outsl
cmp
push
shrl
rcr
sbb
fildll
mov
rclb
iret
addl
movsb
pushf
dec
or
movsb
ds
xor
fs
in
loopne
stc
push
int3
jge
sub
mov
dec
and
mov
int
test
in
jg
add
dec
mov
dec
push
lahf
sbbl
repnz
out
xchg
int3
call
mov
mov
add
push
mov
mov
bound
mov
outsb
imul
ret
int3
cmp
jp
lods
mov
sbb
clc
mov
jmp
adc
jne
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
mov
push
dec
test
adc
adc
adc
shrl
push
ret
loopne
popa
aad
in
mov
add
xlat
pop
ret
sarl
fsubl
cld
nop
ds
sahf
push
mov
lcall
cmp
xlat
pop
loopne
mov
imull
sbb
mov
pop
lahf
in
sub
pop
jns
pop
movsl
scas
je
xchg
loop
pushf
in
sub
pop
bt
hlt
lcall
add
inc
filds
xor
lahf
and
out
sbb
movsb
jnp
loopne
jae
call
inc
xor
push
and
das
mov
mov
mov
icebp
jno
dec
ljmp
enter
adc
xchg
add
pop
outsb
test
sbb
pop
xchg
call
push
cmp
xchg
jl
mov
sti
fiadds
push
movsl
setne
adc
orl
cli
scas
dec
pop
jg
mov
mov
jmp
xchg
aam
push
push
dec
ss
daa
dec
mov
dec
xchg
orb
cwtl
iret
out
ficoms
cmp
push
push
sbb
fdivs
decl
sbb
sub
push
pop
mov
hlt
sbb
aaa
and
out
lcall
inc
lea
add
ja
gs
and
out
fists
test
lret
scas
inc
dec
fcmovnb
outsb
mov
fisttpl
je
mov
mov
jl
add
cmp
loopne
js
cmpsb
les
xorl
inc
sub
dec
inc
mov
inc
and
jp
dec
shl
dec
push
ss
cld
pop
add
repnz
test
pop
fisubrs
icebp
arpl
lret
inc
jb
jo
push
jmp
out
icebp
movsb
into
mov
xchg
movsb
cmp
daa
push
cmp
adc
mov
sbb
testb
sti
sbb
adc
imul
or
mov
inc
dec
rclb
add
ja
das
adc
loop
adc
cmpsb
dec
roll
jno
inc
imul
or
mov
in
subb
sub
hlt
sti
inc
jns
sbb
out
insl
fwait
movsb
pop
sbb
and
nop
push
mov
and
popf
and
rcl
or
subb
aaa
ss
lret
je
movsb
jno
pop
out
or
mov
hlt
pop
aad
xor
mov
test
dec
push
adc
lret
fcompl
int3
dec
imul
shll
dec
sub
sarl
cltd
add
pop
inc
pop
inc
mov
xchg
adc
jg
fildll
add
jl
or
mov
mov
jl
fucomp
xchg
psrld
popaw
mov
ror
pop
and
popf
fs
out
jmp
ss
jp
xor
pop
xor
or
push
dec
cmp
mov
mov
inc
icebp
cmp
dec
lods
pusha
sbb
in
hlt
cmc
dec
cmp
mov
or
ds
inc
stos
jle
push
lret
aam
cltd
icebp
jbe
inc
rcrb
test
jecxz
mov
test
cltd
fs
xchg
pop
mov
ret
jne
jp
jmp
add
ret
xchg
ljmp
lds
pop
jecxz
pop
call
pop
mov
inc
std
add
and
inc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
mov
jl
adc
adc
adc
push
das
push
pusha
and
and
dec
lds
inc
adc
pop
movsl
dec
dec
mov
ss
jecxz
pop
inc
dec
aam
int
bound
or
push
pop
jmp
xchg
fwait
scas
test
pop
push
fimull
and
mov
xchg
out
fstpt
das
or
imul
xorl
sub
xchg
cwtl
sbb
dec
outsl
icebp
dec
sub
cmc
dec
inc
imulb
xchg
pop
mov
outsl
out
and
pop
and
ret
push
mov
in
mov
lds
jo
add
into
mov
xchg
roll
xchg
sub
and
cmpsb
iret
xor
sar
js
iret
daa
sub
mov
cmp
imulb
cs
gs
std
jg
ret
and
div
adc
sti
mov
stc
mov
cmp
mov
lock
adc
lahf
inc
adc
pop
push
pop
xor
popf
test
enter
rorl
mov
xor
xchg
enter
cmpsb
aas
in
lcall
cmpsl
shl
cwtl
in
sbb
movsb
ret
and
jg
jl
lahf
cmp
lods
aam
sbb
test
test
and
dec
pop
dec
cld
and
and
add
nop
fisubl
into
inc
push
leave
mov
and
xor
mov
lods
pop
jle
stos
iret
mov
cmpl
or
dec
ljmp
jge
stos
push
out
scas
dec
scas
std
jp
adc
jg
xchg
fiadds
aaa
or
aam
aam
or
push
inc
aad
add
xchg
mov
lcall
add
inc
pop
in
call
push
sbb
fbld
stc
xchg
sti
and
mov
jb
cmp
fldl
popa
pop
jb
lcall
out
icebp
pop
mov
mov
adc
imulb
testl
jne
xor
xlat
into
jns
scas
dec
ja
xchg
mov
xor
iret
in
shll
and
mov
xchg
jmp
mov
fucom
push
sahf
jmp
jl
adc
call
out
sub
shlb
mov
mov
punpcklbw
dec
pop
mov
jbe
rcrl
or
sbb
andl
xchg
loop
jno
fwait
push
enter
cmp
fcom
xorb
xor
mov
xor
xor
or
xchg
repz
xchg
stc
dec
ljmp
push
in
jg
pushf
insl
ds
jnp
xchg
sahf
fidivrs
sar
in
sub
outsb
mov
dec
mov
xchg
or
xor
outsb
xchg
shrl
lea
mov
dec
cltd
xchg
pop
inc
xchg
jle
arpl
xchg
and
or
test
mov
hlt
sbb
mov
mov
rcrb
xor
mul
stos
loopne
sbb
pop
mov
rcrl
dec
aas
cmp
inc
mov
shl
dec
inc
pusha
jnp
repz
aam
call
mov
repz
cli
xchg
stos
lret
cwtl
push
or
pop
lea
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
xor
adc
int
adc
jb
jnp
in
and
aad
mov
inc
sbb
xor
pop
adc
ret
stc
stos
fs
jmp
and
pop
or
cmp
sub
in
lods
push
sub
push
and
js
icebp
xchg
sub
pop
sub
lahf
add
dec
ds
test
rdpmc
mov
mov
inc
rolb
xlat
aam
pop
inc
pop
sar
push
jl
cltd
xlat
ljmp
loope
stos
xchg
fisttpll
enter
shll
mov
imul
jmp
or
in
push
and
push
xchg
mov
dec
aas
push
fldcw
or
lock
cmc
out
and
adc
xchg
add
push
outsb
hlt
adc
lock
mov
sub
dec
xor
lcall
or
std
jecxz
in
push
sub
neg
addr16
jle
push
nop
mov
xchg
jmp
cmp
mov
or
call
mov
enter
fcompl
xchg
pop
mov
ja
dec
das
cmpsl
arpl
add
jp
xchg
or
mov
sbb
mov
add
stc
and
add
repz
popa
push
mov
jp
jo
lret
dec
cmc
lock
clc
pop
mov
pop
xor
ljmp
jmp
rcl
fcomps
pushf
and
outsl
jo
out
lahf
push
loopne
int
insb
dec
movsb
ficompl
push
mov
mov
int
cmp
add
sbb
lds
movsb
xchg
mov
fcmovb
mov
mov
mov
adc
add
fwait
lret
lods
xor
pushfw
in
adc
ds
sub
icebp
out
add
sbb
es
inc
push
rcl
test
dec
test
mov
xchg
outsl
lock
sbb
jmp
std
pop
ljmp
sbb
pushf
xchg
std
lock
nop
or
mov
test
in
mov
imul
mov
aas
xchg
xor
push
int3
pop
mov
or
sbb
lods
pusha
and
cltd
sub
xor
cmpsl
fnstenv
push
lret
and
imul
scas
or
dec
addb
das
jne
inc
adc
std
mov
lock
incl
inc
mov
jb
push
rolb
pop
dec
mov
pop
cs
lea
mov
dec
mov
rcrb
mov
test
adc
mov
or
lds
xor
es
xchg
dec
sbb
sbb
stos
fldenv
ds
xlat
pusha
xor
jle
shll
stos
pop
cmp
pop
jg
xor
imul
push
sbb
out
sbb
inc
leave
xor
mov
xchg
rcll
rcr
iret
or
push
scas
mov
fdivl
notb
pop
mov
push
aas
add
sti
das
stos
loope
fsubr
in
movsl
movsb
mov
stos
cmp
and
mov
dec
xchg
add
mov
ss
add
pop
inc
sbb
aad
in
ds
movsl
cwtl
sub
ret
sbb
je
imulb
mov
gs
shrd
jmp
ja
jle
sub
xchg
mov
mov
jb
adc
adc
adc
pop
ret
out
push
or
pop
sub
test
orb
add
mov
popa
mov
mov
daa
xchg
shl
push
mov
divb
mov
mov
iret
pop
lds
nop
rolb
xchg
mov
dec
ret
jnp
jo
jl
dec
or
mov
or
xchg
mov
dec
dec
cwtl
pop
adc
sbb
sub
mov
lcall
push
and
test
hlt
sub
add
sbb
mov
inc
outsl
sbb
cmp
mov
movsb
adc
push
out
adc
dec
testb
jp
daa
adc
das
rcr
shlb
mov
lock
dec
aaa
push
mov
mov
daa
mov
xchg
mov
aas
pop
decb
adc
jb
in
out
dec
push
cmp
cmp
mov
rorb
ret
dec
sbb
clc
dec
les
out
mov
bound
adc
std
dec
js
or
mull
or
pop
push
sbb
clc
fsubl
out
shr
insl
jecxz
mov
jbe
lret
incl
xor
push
test
or
popf
sbb
adc
test
jns
or
pop
and
fdivl
cmp
addb
outsl
aas
pop
movsb
fst
idivl
and
clc
pushf
call
push
fidivrl
loope
insb
mov
xchg
adc
xchg
jmp
mov
cmpsb
lea
mov
mov
test
je
repz
rclb
and
mov
stos
mov
out
out
call
pop
mov
dec
push
xchg
add
mov
add
pop
es
lods
xchg
int3
or
es
or
divl
ret
add
jno
roll
and
orl
aas
out
lcall
mov
rol
fbld
fwait
adc
jae
popa
test
mov
fisubs
xor
lods
out
call
jp
sahf
lock
mov
jmp
imul
fistps
dec
pop
add
in
add
arpl
add
push
xor
cmpsb
aaa
pop
cmc
imul
mov
shl
int3
sbb
inc
dec
fistpll
jge
das
lcall
or
insl
outsb
push
cli
scas
xor
sbb
repnz
enter
aam
pop
adc
and
ds
push
sti
fnstsw
andb
leave
xchg
inc
movb
sub
shll
cmp
inc
scas
mov
mov
mov
push
xchg
push
orl
cmp
rcrl
sbb
jmp
mov
mov
loopne
mov
pop
mov
pop
mov
insb
adc
loope
jae,pn
mov
in
push
and
or
lret
mov
and
xor
ja
xchg
in
sahf
push
jae
fdivrl
sbb
test
xchg
test
insb
xorb
fwait
das
stos
lock
sbbb
push
mov
loop
add
sti
and
and
push
lret
lods
adc
icebp
mov
idivl
std
in
jno
mov
pop
int
cli
dec
ja
out
cmp
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
xor
sahf
lods
and
adc
int
adc
pop
rcll
and
dec
mov
pop
mov
addr16
mov
sbbl
movsl
pushf
xorb
inc
outsl
cld
cli
out
mov
nop
add
push
popa
shrl
pop
adc
sbb
jp
mov
jg
imul
add
sub
dec
adc
sbb
jnp
jb
sahf
lds
pop
out
pop
pop
out
xlat
xorl
push
push
mov
push
sbb
add
xlat
enter
xchg
shll
cs
sub
or
cmc
dec
fldl
inc
jb
sub
or
xchg
cwtl
lds
imul
pop
add
push
push
dec
push
testb
ret
test
lcall
mov
ret
inc
negb
lock
mov
les
inc
lret
iret
mov
and
orb
mov
ret
lcall
adc
repnz
es
jge
ret
xor
jno
jp
dec
add
cmp
popf
call
insb
std
clc
jne
sub
cltd
xchg
sbb
cld
push
andb
gs
sub
sbbb
loope
fnstcw
aaa
pop
sahf
jge
sub
fidivrs
int3
ret
addr16
mov
roll
rcrb
insb
xchg
xor
data16
sbb
test
clc
popf
xchg
add
dec
mov
std
xchg
push
fneni(8087
inc
repnz
cmpsl
shlb
mov
aas
adc
push
call
loop
sarb
xchg
adc
aas
ja,pn
add
bound
nop
cld
les
aas
sub
cmp
inc
test
dec
into
mov
jae
cmp
fsubrs
mov
adcb
popf
mov
int3
call
imul
dec
and
fnstsw
das
in
into
lock
out
add
and
push
push
stc
push
sub
jb
push
pop
sbb
pop
sub
leave
cmp
bound
xchg
call
mov
sub
mov
push
movsl
inc
adc
imul
mov
sahf
add
addr16
and
sub
cmp
fwait
mov
rolb
sti
insb
jp
js
sbb
cmpsl
add
cmp
ficompl
jmp
push
inc
jns
call
inc
lret
pop
fnstenv
jmp
inc
inc
add
jg
inc
outsl
cmp
rolb
pop
test
mov
nop
ljmp
or
xchg
mov
mov
ljmp
add
test
xor
cmp
xchg
scas
outsl
xor
pop
insb
inc
mov
js
insl
inc
lret
lcall
aam
mov
push
scas
sarb
ljmp
lods
mov
pop
xor
icebp
mov
add
test
movsl
arpl
rol
pop
jns
lahf
inc
test
daa
imul
shlb
dec
imul
dec
out
fbld
sub
dec
fadds
xchg
subb
fld
jecxz
int3
pop
jno
or
push
pop
adc
jl
inc
lock
or
notl
xchg
ljmp
and
dec
movsb
sub
mov
pusha
mov
mov
je
add
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
jle
scas
insb
fisubs
adc
adc
rcrl
adc
enter
xor
not
mov
enter
and
das
push
adc
hlt
pop
xchg
cmp
clc
jno
jno
jecxz
jle
es
es
xchg
decw
test
xor
ljmp
int
add
pop
adc
arpl
fwait
jp
cmpsw
dec
push
cli
pusha
pop
cmp
test
repnz
sbbb
adcl
aas
into
loope
or
dec
jbe
dec
dec
mov
pop
xor
lea
mov
sbbl
and
pop
push
and
mov
shl
pop
pop
mov
mov
jno
shll
inc
jg
pop
int
jno
inc
jne
inc
test
shl
dec
mov
lock
sbb
xor
fldenv
lahf
movsl
in
mov
push
stos
in
repnz
add
mov
in
pop
jne
loop
and
movsb
or
pop
subb
adc
pop
pop
fs
inc
in
ficoml
adc
mov
jl
outsl
push
and
cmpsb
loop
push
in
repnz
mov
xor
mov
push
ljmp
out
stos
lret
cmpsb
mov
inc
dec
inc
ss
xchg
cmp
pop
jae
cmp
jp
jmp
icebp
jge
testl
adc
stc
jo
or
cwtl
xor
xor
sbb
call
and
inc
in
add
inc
xor
ret
dec
pusha
inc
aas
les
negl
adc
xor
in
xchg
cmp
lcall
xor
fxam
mov
jnp
aam
call
jb
loope
popf
inc
test
fwait
push
push
jae,pt
test
testl
lret
in
xor
xchg
bndstx
ret
push
popa
mov
mov
cltd
push
jbe
orl
bound
pop
fstp
xlat
ljmp
jge
cmc
cmp
or
xchg
loope
fs
fstpl
in
lds
sbb
test
icebp
jle
cmp
add
cwtl
int3
fisubrs
fmuls
and
fwait
unpcklps
xor
jl
movsl
dec
rolb
adc
fldl
xor
or
ja
repz
mov
iret
xor
mov
daa
push
jge
mov
jl
movsl
stos
fldcw
icebp
fs
cmc
inc
mov
inc
scas
loop
xchg
mov
movsb
minps
dec
test
ror
or
pusha
or
ret
adc
outsl
push
and
popfw
adc
mov
inc
fdivs
cli
clc
push
ret
mov
jne
je
cmpsl
aam
int3
jo
pop
cs
pop
stc
xorb
repnz
out
test
jbe
dec
scas
jno
pop
mov
dec
aas
push
mov
dec
fadds
std
cmpsb
and
in
and
out
int3
ret
sub
xchg
aaa
repnz
xchg
mov
stc
jl
mov
mov
popa
push
cmp
movups
and
out
popa
and
push
mov
std
out
ror
cmp
jnp
lcall
repz
mov
addr16
das
jnp
push
mov
stos
pop
pop
sbb
enter
gs
unpcklps
push
fisubs
inc
inc
cmpsl
enter
lods
inc
pop
mov
push
popa
orb
inc
mov
jecxz
dec
push
loopne
xor
cmp
jbe
bound
lret
mov
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
cltd
dec
add
xor
adc
push
or
and
pop
sub
fists
test
mov
aad
adc
jecxz
mov
add
ror
daa
cltd
adc
pop
mov
sub
aas
sti
pusha
repz
mov
push
mov
filds
adc
les
les
pop
loop
pop
shll
int
mov
inc
inc
push
inc
outsb
fsubs
sub
xor
shrb
dec
inc
xchg
or
lods
je
jns
jae
xchg
inc
cli
dec
and
jne
inc
push
xacquire
das
lods
cmp
and
fsubs
cld
pop
imul
repnz
sub
fadds
into
jns
aam
cmp
outsb
mov
or
ficoml
cs
out
in
in
outsb
and
cmp
inc
dec
gs
out
daa
mov
sbb
sbb
push
xchg
cmp
inc
and
lea
sbb
jecxz
mov
int
sti
jle
lock
cld
mov
in
loope
mov
shrb
in
push
xchg
outsb
push
pop
mov
jmp
aam
gs
mov
pop
jmp
test
lds
add
fcomip
into
or
jns
pop
ss
js
jnp
loopne
push
arpl
pop
int3
test
push
dec
in
bound
mov
cmc
jle
jno
roll
clc
fsubs
mov
push
sub
mov
cmp
outsl
push
mov
mov
mov
fs
insb
mulb
adc
and
pop
dec
xor
lret
xor
pop
sub
pop
push
mov
fsubrl
daa
xor
dec
icebp
loopne
xlat
mov
xor
mov
popf
sub
adc
iret
test
mov
sbb
sahf
jnp
or
jge
scas
xor
sub
pop
jge
mov
sub
sub
lahf
in
and
popf
sub
cmp
inc
rcr
mov
lret
testl
loope
pop
and
mov
push
aas
insl
xlat
mov
and
test
sbb
push
mov
cwtl
pushf
jg
mov
ja
pop
into
movsb
dec
push
fdivp
and
xor
xorl
xchg
out
test
mov
add
loop
xchg
xchg
jbe
xor
out
std
pop
rcrl
xlat
pop
jnp,pn
adc
inc
movsl
adc
inc
icebp
pop
pop
jb
loop
sti
movsb
xor
mov
dec
mov
xor
add
or
jbe
push
xor
sub
push
or
in
inc
xchg
js
shl
pop
sahf
leave
call
jb
jecxz
test
sub
stos
aam
mov
cmp
popf
cmp
jp
sbb
and
test
fcomp
cmp
rcll
push
push
scas
lods
add
repz
divb
loop
scas
sbb
imul
pop
je
rorb
sahf
dec
iret
in
push
and
dec
imul
faddp
sarl
sti
cmp
jle
xchg
int
bound
push
pop
push
in
imul
xchg
and
das
dec
jnp
popa
add
add
cmp
xor
xchg
fisttpll
stc
pop
mov
jne
out
mov
incl
popa
dec
andl
les
jle
outsb
inc
lds
adc
aad
pop
jmp
pop
in
xor
sbb
call
jno
xor
cwtl
pop
test
xor
or
cmpsb
xchg
nop
adc
iret
sbb
data16
movsb
loopne
std
rcr
es
call
mov
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
mov
adc
adc
adc
adc
jmp
loopne
push
cs
std
mov
adc
cmp
jmp
insb
or
cmpsb
dec
int
add
dec
sbb
fldcw
data16
lods
imul
fscale
mov
fadd
sub
pop
xchg
cs
inc
mov
in
cs
cmp
int3
iret
mov
pushf
sbb
insb
in
xchg
inc
adc
add
sbb
mov
or
inc
dec
pop
and
sub
orl
div
inc
outsl
shlb
push
test
je
lret
inc
mov
mov
mov
or
in
imul
or
jmp
and
mov
adc
sbbb
jbe
or
sub
imul
add
cmp
xor
cmp
in
xor
nop
push
mov
pop
fwait
push
pop
mov
shll
out
pop
cmc
loope
pop
lret
and
mov
sahf
xor
ret
mov
jno
fwait
imul
sar
or
push
pop
add
sbb
push
not
sti
jl
stc
imul
mov
push
fbstp
ja
pop
mov
ret
iret
sbb
mov
lea
inc
mov
lcall
fdivrl
xlat
mov
jno
jp
outsl
pop
stc
aad
sbb
cs
icebp
lret
popl
jecxz
das
sbb
es
pop
aad
mov
push
loope
inc
push
es
sub
sub
push
mov
push
sub
jbe
les
inc
inc
fld
xchg
jmp
push
lds
mov
cmc
cwtl
int
into
mov
nop
push
pop
jo
je
sub
mov
jmp
push
xor
jmp
outsb
dec
fistps
jno
repz
js
or
xchg
push
and
lret
pusha
insl
idiv
push
jl
dec
xor
pop
xlat
or
pop
jecxz
sub
xorb
push
cmp
cmp
mov
scas
aas
push
daa
inc
rep
xor
fsubrl
sub
pop
jo
pusha
das
mov
xchg
mov
mov
sub
mov
or
shll
stos
int3
mov
mov
cmc
fbstp
sbb
cwtl
push
aas
mov
dec
adc
js
push
inc
iret
repnz
mov
jmp
test
fnstcw
mov
lcall
int
jno
sbb
sbb
stos
sbb
mov
dec
dec
sbb
out
fists
or
insb
jl
pusha
adc
or
icebp
add
mov
xchg
push
jae
cmp
data16
lcall
mov
les
testb
clc
fcoms
mov
icebp
sbb
es
mov
out
stos
cmp
data16
lock
or
pusha
rol
pusha
jne
inc
sub
sub
sbb
cmp
sub
mov
stos
xchg
adc
jne
out
or
xchg
xchg
pop
nop
pop
cmc
fidivl
lcall
mov
test
cmpsl
jbe
adc
sbb
cmp
lock
dec
dec
adc
push
mov
or
pop
ret
dec
mov
or
pmullw
or
mov
xchg
fmull
inc
xlat
rorb
inc
test
fidivrl
or
icebp
push
jns
jge
gs
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
push
push
dec
adc
xor
adc
imul
repnz
push
stc
push
andl
popf
outsl
push
adc
in
test
dec
imul
xchg
in
sbb
nop
push
pop
fildl
jae
lods
insb
sub
jo
and
ret
ret
loopne
mov
popf
ror
push
mov
jle
or
loopne
xchg
pusha
js
push
xchg
dec
rol
orl
jo
iret
ret
push
cltd
test
mov
adc
add
shlb
cmpsb
in
mov
cwtl
inc
pop
in
sub
jle
in
imul
mov
sbb
test
pushf
mov
fisttpll
dec
lahf
jecxz
mov
cmp
sub
pop
arpl
adc
pop
xorl
jnp
lods
or
jae
lcall
mov
cs
or
mov
cmp
push
adc
sbb
out
cli
cmp
cmp
mov
xor
jb
or
lea
je
add
mov
scas
gs
cmp
add
in
dec
cmp
lret
insb
push
jb
or
call
sub
xchg
jg
mov
mov
cmpsl
out
mov
adc
adc
sub
xchg
mov
mov
jp
out
arpl
ret
fmull
xchg
pop
mov
scas
mov
and
loop
and
pop
test
push
lea
sub
mov
in
push
mov
andb
and
push
xor
add
arpl
xor
cmp
ret
call
pop
add
repz
jbe
loop
mov
sbb
mov
push
scas
xchg
int3
clc
rcrl
fs
cmp
cmpsb
leave
push
cli
add
lods
xor
xor
test
lea
stos
add
jp
shlb
imul
fisubl
lea
push
xchg
xchg
mov
pop
mov
adc
xchg
or
pop
fisttpll
popa
test
push
mov
mov
and
push
inc
sbb
and
jge
imulb
add
in
rcrl
shll
sub
jge
addb
lahf
jns
mov
mov
cmp
pop
jbe
enter
popa
daa
jo
test
les
sti
loop
sbb
push
cmp
iret
dec
cmp
outsb
adc
lret
mov
mov
movsl
cmpsl
out
sbb
iret
ficoms
imul
jp
das
jae
mov
jnp
jbe
popf
inc
xlat
dec
rcl
push
push
mov
inc
rcrb
and
cmpb
gs
push
push
insl
aad
lret
ja
pop
les
mov
jne
les
addr16
mov
aas
add
ljmp
daa
test
xchg
rcrl
add
testb
outsb
mov
pop
decb
outsl
pop
movsb
mov
icebp
cmpsb
jne
enter
sub
mov
lock
cmpl
inc
leave
pop
test
imul
sti
clc
pop
push
ss
lret
add
cmp
cmp
sbb
mov
mov
dec
push
adc
cltd
ret
lods
movsb
imul
sub
xlat
call
insl
mov
mov
push
mov
loopne
jae
push
repnz
add
xchg
push
push
jnp
int3
jne
ret
out
enter
or
shrb
dec
jge
inc
out
xchg
push
int3
lods
shll
sbb
jae
add
jne
stc
mov
xchg
and
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
jns
mov
cmp
cwtl
pop
jne
xor
jns
adc
cmc
add
push
xor
outsb
push
test
sbb
test
dec
cmp
sbb
out
cmpsl
js
cmc
shll
xchg
push
jns
shrb
adc
xchg
dec
mov
pushf
test
ds
mov
push
out
xchg
loop
testb
mov
xchg
ljmp
mov
sub
scas
loope
cwtl
pop
outsl
popf
dec
adc
fmuls
mov
loop
pop
mov
mov
mov
pop
movsb
pop
xchg
repz
inc
add
jnp
pop
lret
out
mov
aaa
aas
out
aad
icebp
and
icebp
leave
imul
add
fsubrl
fstp
push
loope
adc
adc
enter
addr16
ja
mov
psraw
mov
mov
add
sti
loope
and
in
es
cmp
adc
sub
or
inc
iret
daa
fwait
popa
sub
mov
fldcw
push
jae
scas
insl
arpl
in
int3
test
sahf
loop
es
int3
push
cmpsb
push
sbb
xorl
push
lahf
xchg
and
jne
stos
push
mov
mulb
ret
repnz
ret
movsb
mov
pop
mov
les
ret
jl
add
mov
jmp
fs
in
and
inc
loope
and
cltd
sbb
cmpsl
sbb
roll
orb
mov
push
sub
pop
xchg
out
pop
jns
mov
popf
sar
out
cmpb
and
push
dec
gs
sub
add
pushf
cmp
adc
es
leave
inc
add
insl
movsb
stc
enter
pop
stos
add
movsl
aaa
dec
adc
inc
add
pushf
push
pop
pushf
leave
or
push
sbb
sub
mov
js
sti
adc
test
fmul
inc
pop
mov
sub
fdivr
dec
ret
jnp
out
out
xor
inc
inc
add
mov
shll
aam
repnz
loop
movsl
or
inc
out
das
sti
mov
xor
orb
mul
sti
sbb
mov
outsl
fnstsw
popa
scas
sbb
mov
fs
insl
mov
js
popf
clc
test
mov
lods
inc
push
xchg
pop
outsb
test
sub
xchg
mov
cmovle
mov
ja
ds
movsl
push
loope
dec
ficompl
out
sbb
jmp
mov
dec
mov
inc
inc
jne
sahf
jo
push
xchg
fildl
xor
scas
jle
inc
mov
js
pop
dec
mov
cmpsl
add
pop
mov
push
push
outsb
xor
dec
insl
js
or
jl
ret
outsb
insb
xchg
jle
lods
mov
test
in
inc
inc
cmp
imul
push
add
mov
jmp
add
jns
ret
sarl
shl
cld
mov
lods
dec
mov
xchg
adc
adc
jbe
leave
mov
fidivrs
sbbl
clc
and
leave
mov
lret
xor
sbb
stc
loopne
push
mov
js
xor
sub
sahf
testb
enter
test
mulb
sbb
rcl
test
jmp
lods
jle
push
sahf
sub
mov
loope
xchg
ljmp
bound
daa
adc
scas
sbb
mov
xor
sbb
sbb
outsl
pusha
inc
call
daa
aaa
pop
mov
push
popf
inc
repz
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
inc
stos
jnp
adc
xor
adc
iret
lods
push
cltd
lds
xchg
insb
movsb
int3
pop
mov
mov
xlat
xchg
stos
add
imul
dec
pushf
xchg
xor
push
fbstp
sub
push
push
sub
add
imul
cmp
adc
inc
cmp
daa
aad
cwtl
sub
adc
subb
incl
and
fimuls
fcoml
repnz
sub
xchg
scas
fimuls
loopne
jnp
sub
into
xor
fdivr
pusha
dec
cmc
ljmp
es
mov
cld
iret
cltd
pop
pop
insl
xor
lret
adc
mov
push
mov
arpl
out
mov
mov
fsubl
jb
or
xchg
jbe
pusha
loope
dec
cmp
mov
adc
outsl
std
mov
icebp
fsub
imul
test
and
and
and
push
mov
or
ret
fnstsw
lret
jno
inc
insl
fwait
iret
stc
xchg
in
mov
aas
sub
fcomps
cwtl
movsb
xor
push
xchg
and
daa
sbb
push
and
enter
inc
les
stos
fcompl
fists
pop
inc
and
lock
mov
fs
or
arpl
inc
data16
sti
or
mov
jge
add
jle
push
sbb
push
adc
mov
and
xor
lret
sbb
ss
aaa
sub
rclb
mov
lods
mov
icebp
xchg
aaa
ljmp
dec
imul
sbb
nop
and
push
outsb
inc
push
mov
ds
lcall
movsl
dec
ret
push
lock
clc
pop
lods
int
add
xorb
pop
pop
adc
mov
pop
daa
in
inc
pop
adc
mov
adc
pushf
add
xchg
adc
sti
iret
lahf
ficompl
jo
insl
sbb
mov
stc
pop
jecxz
sub
iret
mov
pushf
js
pop
lods
or
xchg
mov
dec
sbb
into
das
push
into
mov
xchg
cwtl
adc
loopne
cld
add
imulb
test
out
dec
mov
pushf
mov
dec
jecxz
or
aaa
test
sub
push
jo
dec
dec
xlat
push
push
cltd
js
negb
mov
jbe
popa
jno
iret
and
cmp
fsubrl
mov
dec
dec
popf
pusha
cmp
push
sti
outsl
mov
divl
fisubrl
faddl
outsl
push
call
cmc
iret
inc
inc
xchg
push
sbb
mov
add
stc
add
cwtl
out
cmpsl
fwait
jl
ljmp
jbe
pop
jle
mov
jne
cld
fs
lods
mov
leave
push
jge
pop
pop
fcmovnu
jns
imul
and
outsb
inc
add
test
repnz
jbe
pop
pop
js
js
fsubr
rolb
mov
mov
add
loopne
xlat
jnp
ror
inc
arpl
stc
mov
pop
adc
test
ret
or
inc
sub
cmp
mov
jb
lahf
xchg
add
cld
icebp
stc
pop
cmp
mov
add
into
mov
jns
daa
aad
dec
or
es
jl
repz
fadd
pop
rolb
ss
xor
scas
leave
jno
ret
mov
ja
cld
nop
xchg
adc
cltd
ljmp
mov
cmpsb
dec
adc
mov
fisubrs
shl
pop
cmp
lret
out
cld
push
xchg
sbb
pop
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
push
push
call
subb
mov
add
fdivs
jns
dec
push
and
sarl
js
sbb
insl
and
push
mov
imulb
clc
iret
je
roll
fists
in
or
mov
mov
sti
adc
outsb
out
mov
inc
add
fisttpll
mov
push
mov
push
lret
xor
xchg
adc
sbb
int3
dec
out
bound
loop
sti
sub
cmp
xlat
loope
aam
jne
ja
into
cmp
sbb
movsb
jns
xchg
push
jmp
pop
je
cwtl
in
out
loopne
sub
into
jno
out
das
add
cmp
jbe
into
pop
adc
fsubr
xor
cmpb
mov
movsb
or
push
ret
jle
xchg
inc
mov
inc
ret
inc
xchg
cmp
xchg
lea
mov
int3
fwait
dec
in
sbb
or
mov
icebp
iret
xchg
pop
inc
sub
mov
loopne
scas
sbb
movl
daa
mov
push
rclb
pusha
clc
cltd
mov
xchg
fstpl
add
iret
mov
push
js
inc
lds
lea
mov
inc
dec
ret
cli
adc
sbb
fwait
sbb
adc
sbb
pusha
std
shll
std
push
movsb
jns
jnp
sub
jecxz
fnstenv
bswap
inc
enter
int3
push
shrl
jp
dec
scas
push
dec
in
les
cmp
roll
test
outsl
enter
nop
mov
popa
adc
adc
dec
les
jp
outsl
movl
mov
push
scas
lahf
pop
shlb
fmul
mov
push
loop
xchg
mov
fs
pusha
pop
loope
fcomps
inc
mov
adc
xchg
addr16
popa
push
add
and
bound
lcall
mov
addb
jnp
sbb
mov
or
mov
pop
cmpsl
js
out
call
jl
adc
sub
xchg
dec
in
mov
cmc
shll
jae
mov
scas
jl
sahf
test
or
test
add
cmc
add
pop
and
insb
push
and
repnz
sbb
cmp
push
sub
push
aaa
enter
push
aam
pop
push
and
mov
sarl
mov
dec
add
dec
shll
xchg
xchg
mov
ret
sub
ret
jae
push
cbtw
push
xchg
mov
aam
adc
sbb
lods
pushf
jb
inc
add
and
stos
xor
jbe
loop
sbb
aad
pop
pusha
inc
outsl
jae
adc
shll
dec
adc
xchg
mov
sub
int3
xchg
mov
hlt
push
jl
inc
es
sub
push
fisubs
jp
lea
addr16
lcall
cmpsl
jns
icebp
sbb
inc
mov
xchg
add
jns
out
xchg
std
mov
out
jne
pop
jl
push
and
out
into
les
ret
lods
mov
das
inc
add
shrb
mov
stos
or
fistl
and
sub
mov
repnz
outsl
push
adc
rolb
clc
sub
pop
and
push
shlb
pushf
push
icebp
push
xor
fstps
addr16
add
jg
mov
adc
xlat
scas
es
pop
add
dec
imul
mov
adc
mov
roll
shrd
xor
jmp
mov
popa
lcall
mov
scas
sub
adc
adc
adc
push
movsl
loopne
xchg
mov
ljmp
mov
stos
stos
jecxz
xor
add
xchg
or
inc
les
xor
add
pop
jbe
sbb
jns
inc
push
ss
popa
test
xor
sbb
js
lahf
mov
call
push
add
aam
jmp
inc
arpl
jne
inc
enter
fs
sub
inc
shl
ljmp
sub
jbe
lea
push
insl
cmc
out
cwtl
cmpsb
push
test
xor
shll
add
outsl
sub
jecxz
fldl
das
bswap
mov
add
cmc
fisubl
xlat
jl
jbe
fsubr
shr
inc
mov
push
cmpsl
sub
pop
lds
mov
test
xchg
orl
mov
and
lret
lret
jmp
jp
xlat
dec
adc
loope
sbb
pusha
mov
or
mov
or
dec
sbbl
cmp
push
shlb
loopne
xor
add
jge
and
jg
popa
dec
sbb
sbb
and
cmp
mov
jg
pop
adc
jne
fnstenv
mov
push
push
push
adc
mov
setge
pop
push
call
mov
in
jbe
outsb
call
jecxz
pop
test
lods
repnz
mov
push
icebp
cmp
arpl
cmp
jecxz
push
fldln2
jne
fstpt
es
in
popa
ja
jae
inc
xchg
and
gs
stos
xchg
cmp
xchg
lret
es
scas
sbb
fiadds
xchg
in
jns
leave
int
jbe
jae
cmp
sub
stos
xor
mov
mov
in
lcall
lret
mov
push
dec
daa
lret
dec
mov
in
ret
jno
pop
and
adc
jecxz
push
out
pushf
cmp
inc
aaa
mov
push
movsl
jl
cmp
shlb
push
fisubs
insl
fiaddl
stos
in
inc
fld1
push
fidivs
hlt
dec
xchg
or
lret
push
cmpsb
fldenv
test
rolb
or
mov
pop
stc
negl
xor
pop
dec
mov
mov
sub
push
jns
cmc
sarl
repz
and
ret
cli
and
sub
icebp
adc
inc
and
push
leave
mov
and
or
sub
xor
enter
ss
dec
pop
stos
shrl
aaa
les
mov
inc
orl
pop
testl
sbb
dec
jo
loopne
jo
fsub
mov
push
frstpm(287
sub
pop
js
imul
lds
cmp
cmp
cli
mov
push
mov
inc
in
and
and
gs
jns
inc
rcrl
or
push
push
mov
mov
addr16
orl
push
in
sub
repnz
adc
aad
lcall
push
lahf
adc
icebp
daa
cmp
pushf
leave
clc
mov
fstpt
or
or
lods
and
dec
mov
clc
xchg
mov
mov
xor
mov
ja
jecxz
dec
into
sub
iret
xor
ja
je
lret
lahf
xchg
cmp
jb
and
cmpsl
sahf
daa
repz
xor
adc
movsb
sbb
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
sbb
push
and
adc
movlps
push
push
sbb
rolb
jle
xchg
pop
mov
jb
xchg
cmp
mov
or
in
scas
scas
mov
data16
jae
test
jbe
push
mov
adc
mov
shlb
adc
lock
push
insb
movsb
sbb
push
adc
xlat
loopne
loope
sarb
test
adc
dec
sbb
inc
das
jp
sub
xor
xor
iret
jb
mov
or
bound
or
jno
dec
scas
pop
cmp
ficomps
xchg
aam
fisubrs
or
mov
or
inc
jb
sbb
mov
xchg
shlb
scas
jne
xchg
mov
mov
pusha
cmpsl
testb
mov
mov
jg
add
and
add
sub
mov
testb
in
clc
orl
sbb
xor
push
ss
jae
addr16
in
sub
cmp
jle
mov
rcrl
ljmp
mov
sub
outsb
scas
in
push
adc
lods
jle
inc
jno
loop
aam
cld
fistl
push
movsb
icebp
push
xchg
cmc
mov
negb
pop
or
in
push
or
pop
clc
mov
jmp
mov
and
sbb
cmp
adc
pop
stc
xor
push
pop
inc
and
and
and
push
in
mov
lds
jge
dec
sub
pop
cwtl
ds
lret
cmp
into
xchg
fcomp
aas
push
or
ret
out
inc
rorl
cmp
js
movsl
test
out
or
xor
dec
dec
pushf
test
jb
imul
push
pop
and
jmp
pop
mov
out
mov
ror
jmp
add
ret
clc
addr16
fs
adc
movsl
incl
inc
xor
adc
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
ret
pusha
fidivrl
fmull
adc
cwtl
sub
ljmp
cmpb
and
push
jl
push
loop
cmp
lods
xchg
mov
cld
stos
loope
mov
jb
xor
idivb
sub
pushf
add
rolb
leave
mov
lock
mull
push
rcrl
cmp
mov
and
adc
pusha
fimull
out
jle
fs
xor
push
gs
dec
pop
sbb
jle
cmpsl
inc
add
push
sti
cmpsb
test
fsubr
jns
jno,pn
mov
mov
inc
cmc
adc
jne
adc
xchg
shl
sbb
adc
xchg
insl
xchg
adc
push
pop
mov
xor
push
addr16
mov
or
imul
adc
dec
enter
cmp
mov
lds
add
dec
adc
xchg
cmp
push
cmovne
mov
cmp
ss
sahf
dec
push
sub
dec
icebp
mov
lret
mov
seto
scas
adc
orb
sbb
cs
jg
jnp
push
les
mov
ss
sbb
andb
mov
mov
mov
std
push
pop
cmc
mov
inc
not
imull
adc
xor
pop
mov
bound
pop
mov
into
popf
movsb
mov
rclb
fcmove
mov
push
pop
loop
push
test
lret
pop
xchg
or
fisttpl
xor
int3
pop
and
inc
xor
lods
and
push
out
add
fmull
adc
jne
adc
int3
mov
cltd
sti
stos
loopne
sub
push
sahf
enter
decb
xchg
mov
or
fimuls
mov
jl
fstl
push
test
cmpsl
test
fldl
mov
mov
push
sbb
jbe
or
xor
add
add
sub
and
imull
dec
ljmp
stos
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
or
adc
movlps
pop
pushl
push
ds
rol
mov
scas
jne
shlb
mov
push
lods
mov
sahf
cmp
inc
or
pop
push
xchg
loope
push
pusha
insb
and
jno
and
add
or
enter
movsb
xor
xchg
stos
stos
outsl
pop
mov
hlt
cmp
push
dec
clc
fadds
es
pop
push
and
xchg
call
pop
jle
flds
cmp
xchg
sub
add
decb
or
sub
push
sbb
sbb
mov
mov
cmp
add
mov
push
fwait
mov
fisttpll
lds
sbb
jl
add
push
andl
cli
xor
push
fisubrl
jo
or
sbb
fcomi
aam
dec
mov
push
lret
push
enter
jae
test
jne
inc
imul
mov
ret
adc
fcoms
jnp
iret
mov
xor
call
test
out
repz
test
xor
cwtl
inc
ret
pop
sub
and
xor
push
sbb
inc
cmp
rcrl
mov
jnp
in
adc
stc
push
stc
arpl
add
inc
int
lea
push
add
jg
xchg
lret
les
dec
pushf
into
mov
imull
ret
or
hlt
cltd
jmp
lock
push
ret
scas
pop
xchg
pushf
pop
les
cmp
in
cmp
cltd
inc
cltd
push
sarl
xchg
ja
int
cmp
rcrl
cmp
and
ficompl
out
mov
stos
sub
insb
test
movsl
cmp
and
out
into
cli
mov
lds
lods
popf
rorl
lea
pop
loopne
fisubl
xor
ja
arpl
in
inc
mov
hlt
xlat
iret
mov
pop
rcrl
push
rorl
xorb
push
lcall
les
mov
imul
shll
sbb
in
and
add
push
ret
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
and
adc
adc
movlps
xchg
xor
push
and
rcrl
push
ja
je
lea
cld
gs
jns
sbb
sub
jnp
inc
inc
xchg
xor
iret
fidivrs
lahf
negb
out
add
in
sub
inc
cmp
int
push
stc
cmp
xor
movsl
movsb
or
inc
xor
jge
fsubs
lcall
pop
clc
mov
dec
push
mov
mull
cli
fs
mov
xchg
scas
cli
jbe
pop
dec
xchg
dec
mov
add
sahf
mov
mov
fucomip
push
xor
mov
shrb
push
orb
mov
mov
and
stos
js
stos
xorb
addb
and
pop
xor
jecxz
fnstenv
lcall
mov
xchg
and
push
sti
cmpb
inc
in
movsl
and
daa
jns
xlat
fcomps
rcrb
push
and
jns
cmc
xchg
aas
stc
adc
sub
inc
popf
jmp
test
mov
dec
xchg
inc
and
test
hlt
push
or
cmpsb
cmp
popa
and
jns
mov
fists
rolb
dec
mov
stos
dec
xor
out
fisttpl
pop
add
insb
int3
pop
sub
imul
stos
insl
aam
dec
cmp
adc
inc
pop
jecxz
push
adc
ja
cli
popa
data16
pusha
adc
jmp
fwait
adc
pushf
ja
mov
sbb
pusha
test
sbb
push
out
cmpsb
add
sbb
sbb
shll
inc
dec
pusha
push
lea
icebp
in
ret
inc
lahf
mov
sub
sub
dec
je
je
or
adc
clc
mov
aam
dec
pop
xchg
push
xchg
xor
push
movsb
adc
adc
mov
mov
scas
mov
rorb
lock
add
add
fcoms
dec
gs
fildl
or
sbb
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
dec
mov
adc
movlps
cmp
xorb
push
int3
adc
cmp
cvttps2pi
jge
aas
aas
dec
xchg
leave
rcrb
repz
push
fsubrl
lea
mov
decl
pop
lahf
cmp
push
stc
mov
fsubrl
cs
sbb
inc
imul
push
ret
cld
push
sub
push
inc
psubq
inc
sbbb
dec
sub
pop
dec
movsl
push
inc
jle
lea
adc
add
imul
cli
shll
jle
das
les
nop
adc
shll
shl
jno
mov
xor
pop
sub
mov
cmpsl
cmp
or
mov
dec
sub
ljmp
pop
jle
stos
pop
add
pop
add
push
and
cmp
shl
insb
cmp
push
stos
jns
push
push
shl
cmc
ja
push
addr16
sub
test
sti
dec
mov
das
loopne
out
xor
lds
rcrb
notl
ret
out
add
dec
pop
lcall
pop
jg
pop
dec
bound
scas
ret
dec
xchg
sbb
jnp
aam
scas
cmp
mov
and
iret
sarb
inc
xor
inc
pop
push
je
mov
mov
jl
xchg
jbe
scas
vpaddd
jns
lcall
push
and
addr16
adc
scas
adc
sub
dec
xor
sbb
mov
xchg
or
rorl
pop
push
mov
mov
add
jne
mov
pop
push
sbb
fcoms
into
test
pop
js
shlb
aaa
lcall
xor
and
sub
outsl
and
mov
pop
lods
into
je
adc
push
pop
mov
pop
sbb
movsl
cwtl
insl
jp
jb
xchg
mov
sahf
xor
fidivl
and
ret
std
std
addr16
cmp
clc
cmpsb
lret
or
sub
movsb
inc
out
xor
daa
sbb
mov
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
pop
inc
cli
ljmp
or
addr16
mov
and
push
push
sub
or
arpl
jle
aaa
ss
push
cmp
sbb
add
push
lods
mov
dec
popf
mov
je
pop
mov
sbbb
xor
inc
and
mov
jae
lock
sub
jbe
cmpsb
jecxz
test
sbb
jmp
dec
std
ja
mov
adc
cld
test
mov
lds
das
hlt
fisubs
pop
jle
loope
dec
lahf
stos
pusha
in
icebp
dec
mov
push
movsb
and
lret
or
cs
lret
adc
dec
repz
bound
adc
xchg
mov
mov
and
xchg
mov
dec
inc
add
ficompl
jl
pop
aas
lea
test
adcb
cwtl
mov
stc
sbb
adc
stos
stc
rolb
out
sbb
out
inc
adc
sbb
pop
jne
mov
dec
out
add
in
sbb
xor
jl
inc
bswap
je
scas
push
test
and
ffreep
mov
lock
test
jl
xor
mov
aas
aam
cmp
cmp
out
mov
sbb
mov
pop
cwtl
or
cmp
ja
daa
inc
cmp
aaa
mov
sbb
fsubs
dec
push
sbbl
test
fnstsw
ja
cld
pusha
cmpl
insb
cmpsl
cmpsb
dec
or
mov
pop
fidivrl
sbb
pop
or
ja
lcall
xlat
fld
push
pop
rorl
add
mov
push
jae
inc
loop
and
scas
orb
pop
lahf
adc
and
mov
push
pusha
scas
ja
sbb
cld
or
mov
lcall
cmp
lock
lock
repz
push
pop
movsl
icebp
mov
inc
rcl
push
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
sub
push
or
adc
movlps
push
jl
sbb
in
test
mov
stos
xor
fwait
dec
mov
jnp
add
adc
pushf
lea
scas
rep
imul
xorb
pop
pop
xor
int3
in
mov
or
jnp
pop
fbstp
loope
pop
stc
mov
fs
jbe
cmp
adc
in
daa
fwait
push
adc
sbb
dec
adcl
andl
lods
mov
xor
mov
daa
mov
push
or
push
inc
push
data16
jmp
inc
adc
outsb
pop
pop
test
xchg
jae
scas
aam
in
jnp
aas
bound
movsb
sar
repz
dec
cmovle
inc
sbb
jge
fstpl
in
fldenv
push
je
fcompl
rcr
dec
inc
sahf
icebp
and
int
popf
mov
xor
movsb
add
jnp
inc
sbb
or
hlt
daa
iret
out
dec
lock
aaa
sar
in
push
jmp
xchg
xor
sahf
lcall
sub
out
and
dec
test
sub
lea
xor
mov
imul
push
cmp
xor
bt
add
add
xchg
pop
or
daa
lock
idiv
dec
sbb
or
mov
pop
jbe
je
jecxz
dec
loopne
sub
xchg
stc
cld
scas
cmp
push
inc
sbb
ret
clc
pusha
mov
adc
mov
or
jmp
out
push
cmpsb
mov
mov
enter
aam
shrl
push
ret
imulb
insb
pop
cwtl
pop
call
rcll
dec
aam
scas
and
jbe
sbb
stos
cmp
and
jge
test
xor
dec
stos
mov
jnp
cmp
mov
mov
add
pop
dec
xor
in
shrl
xor
sbbb
mov
cmp
and
mov
popf
iret
mov
bound
add
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
rcrl
mov
movsl
adc
jbe
lock
pop
int3
lods
sub
jne
lahf
xchg
adc
faddl
das
sbbb
inc
cmp
int
or
cwtl
mov
add
scas
data16
out
out
idivb
divps
cmp
xchg
xor
dec
push
outsb
mov
mov
lea
sti
sub
test
jo
insl
ret
push
je
neg
cltd
js
loope
and
jns
sbb
push
pop
sbb
lods
push
nop
in
cmp
cmp
lock
xchg
inc
push
push
cmp
inc
lods
dec
and
std
insb
jns
out
pushf
arpl
sub
int3
adc
adc
inc
xchg
mov
mov
inc
leave
push
dec
negb
movsb
adc
in
sti
stos
or
test
nop
pop
jbe
shll
popf
inc
sahf
sbb
out
out
sbb
in
xchg
dec
out
jle
jmp
push
xchg
fs
mov
in
mov
mov
je
aas
xor
out
mov
sbb
sbb
out
jp
mov
cmp
jne
je
cld
mov
adc
push
jle
mov
push
sbb
clc
xlat
iret
mov
shrb
rolb
xor
inc
aam
in
fnstsw
in
push
jge
adc
pusha
test
xor
mov
imul
int
jmp
arpl
pop
pop
loopne
in
adc
jle
and
push
add
aad
cmp
addr16
inc
jae
cli
cli
mov
and
or
adc
das
fiadds
jmp
push
jbe
popf
adcl
daa
push
cmpsl
xchg
mov
cli
dec
lahf
imul
sar
mov
into
lahf
test
cmp
iret
rcll
les
lods
inc
cli
mov
shll
xchg
dec
adc
jecxz
dec
cmpsb
push
outsb
aam
lret
repz
cltd
sti
aad
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
mov
dec
ljmp
adc
stos
outsb
aas
in
mov
enter
jmp
cmp
jne
jecxz
add
jecxz
aam
and
mov
and
lcall
lock
and
xor
push
xorl
mov
iret
push
cmc
flds
jmp
pop
pop
adc
push
jns
repz
pop
add
repnz
mov
dec
adc
or
outsb
arpl
pop
mov
mov
mov
test
push
nop
adc
sbb
and
jns
cmp
fsubr
sub
js
mov
inc
sub
rolb
inc
repz
nop
sbb
dec
and
enter
negl
or
push
xchg
mov
fcmovbe
push
insl
and
mov
mov
and
fistl
stc
push
das
cmp
push
in
or
push
int3
aad
xor
inc
sub
bound
lods
pop
in
cli
mov
xchg
xor
pop
test
adc
pop
lods
jg
push
mov
and
push
in
pop
icebp
out
test
add
iret
aas
subb
dec
or
jmp
dec
test
xchg
data16
aad
mov
mov
pop
xor
cmp
xchg
adc
aaa
dec
pop
in
xor
and
popa
mov
pop
data16
push
insl
sbb
add
adc
xor
sbb
mov
dec
mov
jge
data16
mov
je
mov
push
dec
adc
or
pop
dec
pop
dec
stos
pop
push
loop
xor
xor
sub
call
insb
and
hlt
cmpb
inc
subl
fcompl
fisttpl
ret
mov
leave
std
xchg
and
sbb
test
mov
jo
cld
mov
cwtl
push
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
outsl
jo
stos
aad
adc
fmull
adc
insl
push
dec
std
sbb
mov
dec
sbb
imul
push
and
jge
mov
push
movsb
inc
adc
pushf
popa
mov
xchg
jbe
repz
ljmp
imul
fcomi
in
mov
aam
mov
stos
sub
lods
leave
lret
push
and
xchg
push
inc
imull
xchg
or
sbb
sbb
add
xchg
adc
in
imul
mov
cwtl
ret
dec
adc
fidivs
je
add
rcrl
dec
test
mov
pop
inc
pop
rcrb
sub
jo
inc
int3
in
inc
pop
add
in
jae
ja
xchg
out
or
jns
inc
mov
leave
fwait
cmpsl
loopne
in
or
jo
sbb
dec
and
and
fwait
pop
adc
cwtl
in
int3
es
mov
xlat
sub
push
bnd
cs
mov
lret
push
ljmp
add
add
jmp
ss
andb
std
jns
fisttpl
jns
lds
mov
das
jb
cmp
adc
in
out
jge
clc
sbb
sahf
cmc
mov
clc
mov
jmp
dec
int3
ss
cltd
addr16
xor
testl
lahf
xchg
cmc
in
and
pop
call
addl
sbb
jne
bound
add
pop
jae
les
fs
fwait
cmp
aam
test
mov
jb
bound
add
test
push
and
pop
stos
lods
rcrl
pop
mov
xchg
aaa
sub
rcll
in
add
loop
fmuls
fsub
mov
addr16
sbb
cmp
and
daa
or
cmp
ja
in
jge
inc
xchg
adc
xchg
pop
inc
rcl
xor
popa
fldt
sub
dec
push
bnd
loope
add
mov
sub
push
mov
jbe
ret
add
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
aam
scas
insb
popf
cli
adc
fmull
adc
fcmovu
xor
sbb
out
pop
xchg
jmp
ss
ds
pop
jle
push
test
and
jecxz
jo
out
mov
or
xchg
sub
je
cltd
repz
dec
cmc
xchg
loop
jp
mov
add
mov
sbb
lods
sti
cmc
add
mov
clc
sti
orb
adc
andl
lcall
and
push
pop
in
push
or
std
out
or
xor
xor
sti
add
sub
mov
movsl
sti
jno
add
adc
pusha
lock
pop
stc
fidivs
cltd
out
cmp
or
movsb
jl
jnp
mov
mov
outsl
ljmp
stos
mov
ret
push
pop
and
testl
inc
jns
cmc
ret
push
sub
mov
loopne
pop
sub
lcall
xor
or
pop
sahf
jmp
sub
stc
aaa
push
pop
pop
jno
fcoml
sahf
xor
popa
xchg
and
jle
dec
hlt
sti
cmpsb
scas
pop
inc
out
jbe
std
test
mov
icebp
push
cld
mov
mov
imul
mov
arpl
inc
push
fadds
push
cmc
ds
test
adc
add
lds
add
xor
dec
sub
negb
pop
pusha
dec
and
ret
jno
mov
or
xchg
inc
pop
inc
jno
fsubrp
fs
loopne
dec
mov
xchg
push
cltd
push
pop
cmp
bound
out
cmp
xchg
fcompl
mov
inc
mov
mov
xchg
mov
add
sbb
add
in
or
cwtl
shll
xchg
imul
jbe
lret
jne
pusha
icebp
jo
cmp
xor
gs
jecxz
mov
lahf
mov
insb
pop
xor
lods
mov
popa
mov
cmp
inc
loope
jge
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
xor
sahf
lods
notb
adc
movlps
jo
adc
xor
and
daa
leave
pop
clc
mov
jns
loope
adc
jo
movsb
mov
imul
movsl
test
sub
mov
fwait
cmp
out
pushf
mov
les
fincstp
mov
pop
stos
cmp
adc
popa
jb
ljmp
out
scas
cltd
fisttps
jb
repnz
inc
inc
dec
lds
fucomip
iret
rol
add
jb
mov
and
mov
or
sbb
dec
jns
lea
pop
mov
push
xchg
lds
std
lods
daa
mov
and
orl
xor
xchg
out
add
fdivrs
jge
cmpsl
add
lds
lods
outsb
sub
pop
mov
dec
or
mov
push
dec
cmp
xor
notb
jmp
mov
add
repz
popa
enter
cli
lea
jp
test
stos
sub
ret
loop
fstpl
mov
out
shrb
std
push
pop
clc
jnp
fcomps
xchg
xchg
inc
lcall
add
test
movsb
mov
stos
or
shrl
cmp
dec
push
adc
and
xchg
loopne
pop
pop
bound
adc
stc
sbb
loopne
push
pop
jbe
divl
mov
sub
fisubrl
jg
jmp
jne
add
lods
loop
jb,pn
mov
cs
pop
push
cmc
adc
and
xchg
xorl
rcrb
and
push
pop
inc
xchg
xor
test
pop
mov
je
sahf
insb
leave
pop
mov
sub
lahf
push
lahf
mov
lret
fsts
dec
add
notb
add
xchg
or
xchg
fdiv
out
into
nop
add
cmp
scas
sbb
iret
or
rolb
in
imul
dec
pop
add
dec
xchg
icebp
and
adcb
sbb
test
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
jbe
int
push
xor
and
out
fistl
enter
pop
rcrb
hlt
rorl
sahf
in
movsl
pop
xchg
add
rcl
js
pushf
lcall
clc
jge
icebp
jl
mov
cmp
adc
sbb
or
jo
mov
jle
aaa
mov
sbb
imul
jl
lods
jle
or
sub
cld
pop
mov
mov
dec
into
out
sbb
lcall
mov
lret
arpl
rcl
mov
mov
mov
dec
pop
add
add
sti
psubusb
mov
lds
jg
addr16
faddl
je
sbb
inc
xchg
xchg
sbb
pop
jno
test
data16
adc
js
bound
cld
pop
jbe
xchg
cmp
push
mov
jl
inc
inc
call
cltd
mov
jmp
jo
jecxz
aaa
jl
jb
jmp
cltd
jbe
inc
cmp
jae
cltd
or
jle
and
push
or
jb
das
clc
or
popa
inc
push
mov
loop
jno
mov
idiv
xchg
ja
divb
mov
pop
insl
mov
push
sub
jge
jmp
pop
gs
ret
sbb
adc
pop
and
rclb
cmp
jge
xchg
dec
push
and
sub
aaa
push
push
push
add
out
sbb
stos
mov
ja
sbb
cld
aaa
push
pop
xor
push
mov
adcb
loope
push
int
mov
xchg
stos
fsubs
sub
mov
daa
mov
dec
xor
mov
adc
add
cmp
in
mov
push
push
mov
aaa
xchg
repnz
pop
bound
stos
xchg
xchg
and
adc
loope
loopne
mov
ds
sub
xor
outsb
and
jg
add
cltd
adc
mov
dec
ficompl
cltd
adc
cli
pop
aas
enter
dec
repnz
cmpsb
or
jo
loop
pop
aas
push
fldenv
cmp
adc
cltd
cmp
repnz
sub
orb
sbb
sti
pop
outsl
cmpl
sub
loop
adc
mov
repz
dec
mov
pop
adc
cs
leave
inc
sbb
icebp
cmp
addr16
mov
xchg
mov
sub
loope
ficompl
push
fucomip
js
jne
jo
out
pop
cwtl
and
mov
inc
cs
mov
or
arpl
movl
cmc
xchg
pop
faddl
add
call
clc
mov
aam
retw
repnz
test
stc
or
jg
push
push
leave
mov
lds
sbb
mov
insb
loop
mov
lret
flds
xchg
in
clc
inc
call
dec
cli
int3
jp
inc
push
into
popf
mov
xchg
js
cmp
fistps
or
hlt
jno
push
imul
jnp
fdivs
cmp
jbe
aaa
adc
mov
imul
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
inc
xchg
js
jmp
adc
roll
and
repnz
addr16
push
sub
xor
shlb
push
inc
mov
xor
call
lea
movsb
rolb
fidivrs
cld
mov
lahf
sbb
cmp
movsl
repz
mov
pop
push
pop
xchg
aaa
lea
ja
mov
addb
sub
mov
xchg
lcall
in
mov
fisttps
sahf
adc
sub
lret
sarl
bound
jo
xorl
jle
test
mov
int3
lret
xchg
das
enter
and
pop
or
push
in
push
lods
mov
mov
jecxz
and
scas
or
ret
lock
rorl
popl
inc
mov
int3
ret
dec
jno
insl
push
cmp
dec
xlat
cmpsl
in
stos
push
inc
stc
cmc
shll
addb
mov
push
add
in
dec
out
pop
lods
je
adc
push
pop
decb
mov
pop
popw
cmp
mov
out
inc
and
pushw
dec
iret
dec
lret
mov
mov
out
or
pop
sti
jno
repnz
pop
clc
add
push
rorl
adc
push
or
ret
sub
mov
stos
fiadds
push
and
cmp
sahf
xor
aam
sub
mov
mov
add
popf
outsb
xor
push
push
mov
push
xor
cltd
js
xchg
sub
pop
shlb
and
sbb
sub
pushf
xchg
add
cmc
subl
or
mov
cmp
lock
jo
sub
aam
popa
inc
xor
lds
inc
in
aas
cmp
mov
mov
shll
inc
aaa
jae
inc
mov
jno
pop
pop
hlt
idivl
mov
add
shrb
adc
sarl
insl
adcl
divl
repz
out
pop
aas
js
shlb
pop
gs
sbb
sahf
imul
lds
pusha
aaa
mov
xchg
data16
out
aad
fisttpll
subb
jl
cli
call
aam
cmpsl
pop
aad
cmp
pop
push
hlt
push
aam
jmp
sbb
adc
push
mov
mov
ja
les
test
je
xchg
push
cmp
push
mov
imul
jne
push
push
icebp
outsl
and
mov
mov
mov
pushf
scas
in
loopne
add
adc
orb
scas
aam
idivl
test
test
int
dec
adc
shl
ffree
rol
pop
jno
lret
sbb
adc
or
push
decl
or
stos
sbb
xor
pop
pop
adc
ss
sbb
xor
mov
or
sti
cld
gs
mov
or
inc
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
xchg
jle
fists
adc
adc
ljmp
jmp
shlb
jp
jns
pop
mov
cmpb
out
push
jnp
clc
add
push
adc
int3
orl
cmp
mov
push
insl
add
jno
jle
dec
pusha
call
cmpb
sbb
leave
cmp
pop
and
pop
xchg
sbb
jl
lea
in
shlb
hlt
adc
xor
mov
xor
in
push
pop
pop
adc
push
int3
out
jle
push
cmp
addr16
jns
adc
adc
aam
mov
push
mov
xchg
push
repz
xchg
inc
or
hlt
mov
lea
scas
and
inc
cmc
or
gs
sbb
sbb
pusha
imul
adc
adc
mov
adc
lret
jb
gs
add
inc
or
out
cmp
fisttpll
xor
push
mov
not
mov
enter
hlt
pop
popa
push
dec
lock
mov
mov
pop
leave
pop
jmp
sbb
lock
mov
push
lcall
outsl
xchg
sarb
dec
fs
in
mov
filds
jne
mov
add
lods
out
and
jg
fisubl
add
dec
inc
push
fldenv
sub
inc
mov
leave
jae
loop
mov
stos
jno
mov
xor
adc
push
mov
enter
imul
fimull
push
or
pop
and
xchg
fidivs
or
adc
add
inc
ljmp
add
sub
lods
int3
fists
test
loope
es
sti
fnstcw
fs
test
xchg
fistl
jecxz
dec
movl
cmpsb
lret
lods
dec
pop
in
iret
xchg
rclb
xchg
sbb
mov
push
out
mov
imull
inc
mov
ljmp
insb
inc
fisubs
cmp
insl
int3
mov
bound
inc
insb
inc
pop
jae
dec
sbb
xchg
mov
mov
repz
repnz
je
sti
push
daa
mov
pop
mov
xor
repz
popf
aaa
push
jl
xor
stc
jo
cmpsb
mov
fucomip
sub
sahf
ret
inc
into
mov
popf
cld
nop
icebp
push
mov
dec
and
imul
mov
jno
cmp
int
insb
xor
adc
mov
add
mov
enter
cmc
popa
js
inc
std
arpl
cmp
fwait
sbb
dec
outsl
mov
pop
pop
imul
adc
inc
push
mov
jg
in
repz
loop
push
mov
imul
pop
hlt
lret
dec
scas
pop
xchg
cli
cmp
inc
es
jmp
xchg
adc
adc
xchg
cld
mov
test
movsl
and
mov
iret
mov
mov
leave
sahf
gs
jge
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
inc
std
jle
fstl
adc
adc
mov
stc
dec
adc
test
fsub
cmp
add
cs
or
add
pop
sbb
push
sbb
and
jmp
xlat
loop
jp
arpl
add
pminub
jbe
inc
mov
fstpt
push
jo
lcall
sub
inc
cmp
movsb
pushf
xchg
enter
fwait
pop
ja
test
inc
ficoml
aad
aad
add
jecxz
insl
pop
pusha
imul
mov
out
cltd
daa
pop
sbb
aad
xchg
pop
mov
inc
push
aas
add
xchg
jmp
dec
shlb
and
lock
or
outsb
lret
jg
xor
dec
mov
int3
sar
out
dec
xor
jl
push
xchg
mov
adc
les
cmp
roll
add
sahf
pop
rcr
mov
fwait
push
push
je
cmp
sar
push
cmp
bts
and
int
adc
addr16
jnp
loopne
outsb
push
jge
add
ficomps
or
cmp
es
test
pop
dec
ror
js
pop
pop
in
and
inc
sub
addr16
in
in
lea
sti
add
and
or
pop
add
jb
mov
jne
lods
jbe
adc
data16
inc
push
jp
cs
sub
pop
mov
pop
out
xor
inc
int
mov
inc
mov
adc
xchg
xchg
or
sarb
pop
xor
sub
add
or
pop
aam
bound
dec
and
push
push
adc
lods
dec
scas
addr16
hlt
cmp
jmp
sbb
sub
loope
repnz
mov
inc
lds
int
cld
jne
push
repnz
nop
fwait
inc
xor
dec
push
loop
sub
push
aas
xchg
xchg
push
xor
jbe,pt
mov
movsl
and
rol
daa
cmp
dec
push
jb
dec
imul
lods
cmp
sub
xrelease
sahf
aam
sbb
stos
les
into
mov
call
push
xor
lahf
mov
stc
add
or
sub
mov
mov
movsb
repnz
mov
add
shl
pop
inc
popa
lret
dec
imul
test
int
fld
xchg
lret
pop
cmp
mov
mov
inc
lahf
int
jae
pop
mov
sbb
xor
inc
lods
xor
adc
xchg
punpckhdq
leave
fistpl
cmp
mov
sub
in
lret
repz
mov
test
into
mov
pop
fmuls
or
push
adc
sbb
pop
cmp
xor
dec
movsl
jae
adc
pushf
cmpb
mov
sahf
push
imul
push
rolb
sbb
dec
test
add
cli
push
jo
cmpsb
sbb
into
neg
fadd
dec
sub
jmp
out
xchg
pop
dec
enter
cwtl
jnp
lods
xchg
pop
xor
xchg
dec
inc
les
stos
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
sbb
adc
jo
adc
push
cs
mov
call
xchg
or
ljmp
jge
scas
inc
sbb
or
clc
lret
out
push
and
mov
add
add
hlt
mov
out
pcmpgtb
addr16
mov
jnp
mov
out
test
mov
icebp
in
xchg
loop
cmp
gs
push
icebp
cmpsl
fmuls
adc
pushf
fdiv
sub
add
or
js
dec
pop
jmp
cmp
dec
sbb
inc
adc
or
out
je
rcl
sub
lds
inc
pusha
xchg
mov
es
sbb
lret
jb
js
nop
mov
pop
mov
fwait
push
add
sbb
mov
push
pushf
in
icebp
dec
into
pusha
jnp
dec
sbb
rcrl
or
push
xchg
push
push
cmp
iret
cmp
adc
mov
into
adc
lock
cmpsb
mov
inc
testl
stos
loope
int
jle
aaa
xchg
nop
pop
sti
ja
sbb
sahf
ja
movb
fmull
pop
xor
jmp
insl
jae
cltd
aam
gs
fs
xor
frstor
dec
scas
ficomps
das
sarl
jp
mov
fmuls
loope
adc
popa
sbb
jae
pop
pushf
popa
cmp
scas
ljmp
scas
push
cltd
add
add
mov
mov
jl
xchg
xor
ret
adc
repnz
push
mov
push
notb
loope
cmp
movsl
je
jb
lret
aas
aaa
mov
add
xchg
add
fiadds
inc
lea
add
mov
lret
jns
std
fucomp
cmp
push
jp
push
shrl
add
jg
out
roll
inc
sub
add
cmpsb
pusha
pop
sbb
push
jno
inc
imul
movsl
sbb
test
xchg
mov
xchg
dec
ljmp
and
mov
in
scas
data16
nop
push
pop
call
jne
push
dec
adc
imul
mov
and
dec
jae
lcall
cmc
inc
adc
jge
lock
in
in
cmpsb
add
inc
movsb
scas
mov
xchg
xchg
cld
cmc
in
cmp
bnd
cmc
inc
pop
and
adc
or
cld
push
xchg
outsb
lret
nop
pop
bound
fwait
insl
pop
outsl
and
test
arpl
aaa
mov
fdivl
out
mov
and
lds
mov
inc
divps
xchg
mov
pop
push
andb
adc
mov
into
cmp
cwtl
add
notl
ja
out
jno
push
clc
xor
lods
popa
mov
push
sub
sbb
inc
ss
xchg
or
fildll
sbb
movl
inc
mov
ficoml
mov
xchg
push
sub
les
lods
and
xchg
pusha
jp
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
inc
mov
adc
jo
adc
stos
shlb
loope
jg
and
mov
or
cs
push
or
pushf
jns
mov
xchg
aam
sub
dec
movsl
je
jg
dec
ror
lock
pop
in
sub
scas
cmp
mov
loopne
in
pop
xor
and
iret
xlat
sub
dec
inc
leave
jmp
jbe
mov
into
or
loope
and
push
push
shrl
dec
and
sbb
inc
push
stos
int3
mov
jle
notb
loopne
test
lret
sub
xchg
or
int3
and
pop
ljmp
nop
pushf
or
sub
sarb
sbb
lock
adc
jg
aaa
sub
push
push
imul
cmpb
mov
xor
loopne
jecxz
fisubs
rorb
dec
mov
pop
mov
xchg
push
jno
inc
cmpsb
in
jb
lds
loopne
loope
icebp
fsts
aad
int
sbb
nop
lret
in
aas
mov
or
fwait
sti
xlat
mov
addl
pop
dec
sbb
xchg
push
inc
test
inc
lret
lret
xchg
iret
pop
sbb
jne
push
jle
add
shlb
push
xor
mov
scas
and
xchg
imul
or
loope
andl
arpl
cmc
sub
lock
mov
push
jnp
mov
call
cmp
inc
jp
cli
sti
das
sub
imul
xor
into
mov
test
inc
mov
and
aas
neg
jnp
arpl
xchg
sub
inc
lret
sar
lods
icebp
movsl
aam
jae
pop
aam
pop
fimuls
dec
xor
andl
and
xor
test
push
loopne
fxtract
stos
mov
push
inc
sub
inc
xor
nop
cmp
mov
adc
pushaw
enter
xchg
jmp
scas
out
jmp
mov
jmp
inc
xor
adc
jne
push
cmc
mov
jecxz
and
mov
imul
xchg
fbld
aas
inc
xor
sub
inc
out
jae
mov
ljmp
xchg
push
js
out
or
outsb
ds
jecxz
jae
adc
push
insb
adc
shll
mov
mov
add
fcmovb
pop
aad
dec
adc
pushf
jge
in
mov
add
jno
add
test
dec
pusha
jnp
mov
rcrl
jno
jbe
inc
pop
popf
mov
loop
dec
adc
cmp
lcall
mov
mov
push
mov
lea
push
std
xchg
test
adc
lock
jne
loop
mov
mov
aad
and
repnz
movsl
sub
pop
mov
dec
jecxz
jp
push
xchg
in
icebp
cmpl
add
sub
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
inc
aam
loop
movsb
ljmp
push
sbb
outsl
inc
push
iret
dec
mov
pop
push
lods
jmp
pop
mov
add
push
pop
scas
or
cltd
ret
les
ljmp
scas
jle
into
stos
xchg
mov
mov
fsubrl
lahf
or
movsb
cmp
std
push
jno
cmp
das
fdivrs
sti
cmpsb
xchg
and
iret
inc
mov
jle
mov
xchg
repnz
cs
inc
addb
or
ljmp
das
adc
xchg
test
ret
xor
int3
pop
jne
cltd
andb
dec
or
sti
dec
xchg
sbb
insb
pop
out
push
mov
enter
fiadds
scas
aaa
clc
mov
jl
loop
add
dec
cwtl
xchg
icebp
aas
js
lods
fisttpl
pop
push
dec
add
push
jl
xchg
dec
pop
enter
add
bnd
add
pushf
inc
push
or
inc
cmpsl
mov
push
ds
frstor
shlb
dec
inc
movsl
mov
push
pop
push
jecxz
jb
aad
adc
rorl
cmpsb
pop
decl
imul
rcl
cmp
popf
mov
dec
ds
add
pop
mov
push
xchg
push
inc
jp
out
addb
out
jmp
js
xorl
fcoms
cmp
push
nop
in
sub
sbbb
push
inc
aam
stos
test
sarb
out
sbb
or
cmp
mov
jb
jp
dec
je
mov
notb
test
lods
mov
push
jb
fwait
shrb
lds
jnp
scas
cmc
or
pop
mov
loope
jge
clc
adc
enter
insl
jno
cmp
dec
xor
out
movsl
imulb
andb
mov
fildll
sub
lds
sub
shl
xchg
fmull
movsl
addps
xor
stos
adc
stc
sub
pop
imul
iret
mov
lods
xor
xor
lret
or
test
pusha
pop
mov
mov
addr16
adc
mov
add
test
iret
aad
and
jl
or
fimull
repz
in
inc
lea
or
shlb
in
sub
cld
xchg
out
pop
and
add
out
into
add
pop
out
repnz
pop
push
mov
jns
rol
push
mov
add
out
lret
fidivl
add
jle
xchg
pop
mov
or
xlat
jbe
leave
mov
aam
fsubrs
or
repz
adc
pop
mov
jnp
pop
lret
xchg
rcrb
cmp
pop
xor
enter
pop
icebp
scas
xor
xor
mov
sub
adc
dec
pusha
xchg
imul
fistps
xchg
pop
sbb
sub
out
fsubs
nop
cmpb
adc
ja
mov
mov
jp
xor
out
scas
test
shrb
psllw
jb
cmc
inc
imul
add
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
mov
rcll
jo
adc
rcl
call
add
jmp
inc
sbb
fcoms
dec
cmp
adc
into
aas
fucomp
out
pop
in
jb
fnsave
fidivl
hlt
es
icebp
mov
cld
adc
out
xchg
pop
lahf
xchg
cmp
pop
jge
inc
jnp
fnstcw
jnp
scas
jecxz
xor
int
mov
aam
pop
xorl
mov
or
add
push
js
mov
dec
fmull
jle
scas
rcll
repnz
jo
idiv
pop
and
jg
adc
insb
mov
push
jg
sbbb
lahf
cmc
or
mov
xor
xchg
or
es
aam
cmp
jmp
push
add
push
insl
xchg
mov
inc
sbb
push
sbbb
daa
lds
imul
faddp
push
cmp
push
scas
popa
inc
ret
shl
dec
adc
inc
stos
jns
push
mov
flds
xor
pop
add
dec
push
mov
jbe
xchg
and
cwtl
xchg
es
cmc
out
movsl
mov
and
xchg
push
sub
dec
sub
shr
dec
addl
mov
add
lcall
test
sbb
js
je
ficoml
iret
inc
mov
sahf
idivb
cmp
rcll
cld
jge
add
ja
push
jmp
sarl
jp
pop
lcall
cmp
fidivl
loope
mov
enter
bound
add
fisttpl
inc
fcoms
cmp
call
sub
sti
lret
sbb
sub
into
mov
and
xchg
sahf
pop
idivl
fsts
bound
xor
push
loope
mov
or
sar
lret
fisubl
or
inc
decb
and
xchg
out
push
cs
mov
ds
inc
scas
sahf
dec
cmp
mov
loopne
xchg
nop
push
xchg
fdivrp
mov
jle
cmp
test
nop
mov
cld
adc
cli
push
gs
push
and
loopne
je
out
leave
sbb
pop
das
aad
pop
jb
xchg
adc
and
push
and
and
addr16
dec
subb
aas
lods
loopne
sbb
push
jg
push
insb
sbb
test
add
sti
sbb
xor
dec
mov
sub
sahf
movsb
jmp
fcoms
xchg
xchg
mov
or
and
in
pop
popa
pop
repz
test
jp
mov
xorl
mov
push
mov
or
jecxz
icebp
or
add
jb
and
cmp
pop
push
testb
push
shlb
pop
sub
push
jno
sub
mov
push
add
sbb
jno
dec
inc
insb
adc
mov
roll
testl
push
not
mov
add
cmp
adc
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
in
adc
mov
adc
adc
andl
mov
fistl
add
and
or
mov
hlt
in
roll
xchg
cmp
adc
aas
inc
pusha
test
call
sbb
add
xchg
jp
inc
xor
inc
xlat
test
xor
xchg
pop
js
inc
daa
xor
push
pop
loopne
mov
addr16
pop
in
rolb
pop
into
in
stc
call
ja
loope
dec
decl
lret
xchg
push
mov
and
fdivrs
lods
push
inc
stos
add
inc
or
dec
dec
ljmp
data16
rclb
add
ret
gs
pop
cmp
pop
fsubrs
adcb
repnz
jb
enter
cmp
jno
push
jle
or
mov
mov
mov
sbb
xchg
mov
clc
add
adc
negl
aam
push
in
pop
imulb
mov
jae
dec
push
xor
jae
jbe
fldt
into
inc
mov
scas
stos
mov
xor
cmp
mov
mov
inc
mov
addr16
movsb
pop
imul
cmp
or
lock
cmp
push
xor
not
clc
nop
xor
fcoms
sub
pop
mov
mov
mov
outsl
inc
add
xor
sahf
dec
bound
ror
sub
out
sbb
insl
insl
push
mov
int
cmpsl
cmp
cltd
jbe
lds
xlat
mov
push
fyl2xp1
sbbl
mov
and
xchg
repz
std
or
mov
cli
cmp
lds
shlb
roll
lahf
mov
sbb
sub
ljmp
stc
add
ja
cs
popf
xor
loope
xchg
add
rorb
and
mov
mov
inc
jno
xor
xchg
add
insl
imulb
mov
testl
punpckhwd
shlb
adc
fidivs
mov
jae
inc
movsb
outsl
or
dec
cmp
js
or
cmp
mov
insl
mov
aas
ljmp
int3
cltd
lret
scas
xchg
xchg
mov
xor
push
in
push
jge
sub
aaa
icebp
insl
mov
add
test
in
mov
pushf
pop
test
adc
mov
adc
sti
lahf
stc
rcrb
clc
dec
adc
rolb
loopne
fimull
test
addr16
jb
cld
jno
jl
mov
lds
loop
cmp
cli
icebp
ss
pop
or
lret
fwait
lcall
cmp
mov
stc
andl
add
pop
add
popa
dec
jmp
stos
outsl
dec
jo
daa
fsts
xchg
push
jmp
cmp
pop
pop
repz
push
sarl
mov
lock
lret
pop
sub
pop
enter
imul
mov
gs
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
in
add
aas
lcall
movsl
nop
dec
popa
push
loope
test
rorb
aas
call
sbb
adc
or
jl
sub
and
test
ja
cmp
rclb
lret
mov
or
jmp
repz
std
cmp
outsb
mov
cmp
sbb
fisttpl
imul
and
adc
push
js
inc
or
in
into
xchg
aad
xor
push
shll
cmp
sahf
mov
xchg
mov
jmp
inc
fs
je
jmp
xchg
and
int3
mov
xchg
pop
pop
push
test
jbe
xchg
outsl
outsl
cmpl
and
jns
xor
out
fs
aad
xchg
mov
inc
dec
or
or
cmc
lcall
sub
test
es
inc
jle
push
scas
xchg
xchg
mov
mov
add
pop
jns
cltd
or
ja
sar
mov
icebp
mov
lods
daa
xchg
jg
rcrl
fisttps
and
xor
lahf
fisubrs
cmp
clc
sbb
or
jecxz
adc
scas
fdivr
dec
fcmovu
ss
xorl
add
xchg
pushf
test
mov
or
fildll
jl
lahf
mov
push
inc
addr16
aaa
scas
mov
stos
dec
cmp
dec
inc
test
xchg
imul
jmp
push
fwait
out
mov
mov
fidivrl
adc
or
es
mov
pop
cmpsb
movsl
mov
adc
test
test
in
mov
bound
xor
xchg
ds
pop
sbb
mov
xor
dec
ja
push
fsubl
and
xchg
push
or
or
aam
mov
push
dec
xchg
sti
testl
mov
notb
les
add
in
rorl
push
add
push
jmp
push
pop
push
js
inc
ljmp
stos
movlps
push
add
lods
xchg
lahf
imul
cs
jmp
imul
popf
out
or
cmp
push
arpl
mov
push
push
sub
aam
xor
ja
lea
inc
and
and
jo
jne
pop
and
add
or
loope
ss
cld
dec
inc
test
dec
insb
cmp
xor
mov
jb
outsb
outsb
pop
pop
or
idivl
jle
icebp
sub
shr
aaa
pop
sbb
aad
and
mov
or
xor
push
mov
dec
mov
mov
cmpsb
rorl
pop
xor
pop
ja
enter
mov
pop
popa
xorb
sbb
test
lret
test
enter
inc
jno
cli
dec
inc
mov
cld
js
imul
sbb
imul
jae,pt
int
sti
fistps
pushf
rcrl
adc
dec
xchg
rorl
mulb
cmpsl
mov
inc
movsb
add
pop
mov
stc
sub
push
xchg
enter
scas
mov
test
gs
dec
scas
mov
pop
jnp
arpl
mov
inc
mov
jp
mov
adc
stos
or
jno
push
movsl
mov
mov
mov
rorl
lret
out
push
jg
xchg
addr16
mov
lea
jecxz
push
in
lret
data16
sub
lret
cltd
cld
add
jns
inc
jmp
sub
xor
xchg
mov
movsl
mov
mov
aaa
ret
iret
inc
inc
int3
mov
rcll
lret
and
ds
and
cmp
inc
inc
inc
test
out
mov
pop
cmp
mov
xor
lahf
and
xchg
js
pop
pop
cmp
aas
out
xchg
test
pop
mov
mov
jp
stos
cmp
inc
jae
aaa
xor
or
inc
mov
out
mov
cld
stos
aam
popf
jge
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
mov
adc
in
mov
and
and
jmp
jg
lods
jl
es
or
aaa
add
jecxz
mov
mov
fisttpll
pop
fisubl
mov
fs
ret
adc
int3
sti
add
xchg
fwait
push
lret
ss
fs
and
jl
lds
push
push
pop
mov
icebp
test
xor
aaa
aad
xorl
clc
bound
lcall
cli
popf
inc
jmp
mov
iret
imul
mov
add
lahf
stos
jmp
es
pop
mov
ja
ljmp
repnz
out
mov
jns
jg
jmp
lea
out
fisttps
push
shlb
in
enter
int
mov
xchg
jecxz
push
mov
inc
inc
outsb
xor
mov
scas
fs
and
cmp
out
hlt
imul
and
and
fwait
outsl
inc
sub
jae
test
je
mov
stos
aaa
mov
mov
and
push
and
repnz
shl
les
loop
mov
fistpll
cwtl
movsl
lods
into
cmc
cmp
insl
sbb
scas
sub
sbb
push
out
sub
mov
xchg
pop
dec
repz
mov
pop
out
xchg
sub
hlt
clc
mov
ret
push
cmp
inc
addr16
shl
pop
or
ficoms
subl
lcall
dec
outsb
shrb
adc
cmpsb
ljmp
in
jmp
jge
repz
push
gs
adc
inc
dec
mov
jne
out
mov
xchg
aam
push
stos
sub
lret
inc
adc
jg
xchg
xchg
div
xchg
inc
or
in
or
xor
pop
add
add
push
cmp
outsl
pop
leave
enter
test
mov
xor
lds
push
aaa
mov
and
int3
call
push
fistps
cwtl
fcompl
add
or
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
pushf
rcrb
sbb
adc
stos
movlps
cmp
push
sub
inc
es
cmc
push
call
imul
jmp
push
ds
mov
lcall
xor
push
sub
add
out
cmc
add
test
mov
sbb
or
xchg
push
mov
push
loop
call
test
std
call
mov
jecxz
or
mov
ret
mov
jbe
bound
or
test
mov
in
in
repnz
hlt
adc
js
sbb
mov
sub
inc
sub
or
add
dec
jle
jge
lret
mov
xchg
push
xchg
or
jl
stc
adc
mov
aas
pop
in
inc
lods
popf
jmp
icebp
xchg
mov
sti
xor
jl
push
and
int3
mov
dec
jns
dec
xchg
cmpsl
xchg
mov
and
pop
sbb
mov
cmp
test
cmc
pusha
push
inc
ljmp
sub
cmc
pop
repz
mov
pop
xor
fildll
add
pop
pop
icebp
fldcw
mov
test
std
test
dec
test
cmpsb
sbb
pop
xor
ss
arpl
jo
ljmp
add
sbb
add
or
addr16
ret
jle
sbb
sub
in
scas
in
jmp
xor
add
out
mov
hlt
in
inc
or
jne
aam
cmovns
cmp
inc
mov
adc
out
push
pop
rorl
pop
xchg
lret
loopne
mov
jno
pop
movsb
mov
cs
ret
adc
dec
xchg
dec
loopne
jge
repz
imul
aas
xor
xor
push
pop
pop
jae
mov
loope
xor
mov
dec
xchg
and
and
jp
adcl
dec
sbb
xchg
insb
add
mov
add
cmp
pop
xlat
hlt
inc
into
pop
xchg
fistps
mov
xchg
sbb
xchg
push
or
lea
les
out
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
ja
mov
adc
push
loopne
call
fidivl
into
xorl
sub
jbe
jl
xor
lcall
jmp
movsb
mov
popa
daa
mov
adc
stos
ds
lret
hlt
jecxz
orb
add
xor
js
divb
push
sbb
in
jnp
inc
mov
in
pop
stos
fidivrs
sub
std
cmp
lret
add
mov
push
cltd
jge
sbb
mov
mov
scas
lret
je
jmp
stos
mov
mov
mov
push
add
lds
pushfw
push
pop
jle
mov
sbb
ss
jne
aad
ljmp
push
jno
pop
leave
test
dec
sub
inc
pop
cmp
xor
pop
xchg
mov
add
mov
cmp
ss
shlb
iret
xchg
mov
adc
jmp
imul
fadds
inc
pop
fdivrl
stc
jl
daa
out
fdiv
sub
push
into
popa
sbbb
inc
sub
js
xor
sbbb
jns
xor
cmc
icebp
lret
ret
nop
decb
lcall
or
jb
add
and
das
scas
bound
ds
filds
hlt
in
pop
mov
pop
mov
or
js
push
call
sbb
cmp
testb
in
lods
mov
dec
xchg
out
cmp
std
xchg
adc
jmp
push
pop
mov
lcall
push
daa
lock
addr16
lcall
loop
sub
cmp
fwait
test
cs
ret
or
xchg
sarb
mov
and
int
mov
inc
xchg
adc
subl
sbb
mov
or
cmp
adc
pop
repnz
sub
call
stc
enter
lret
push
or
imul
mov
outsl
in
scas
into
push
dec
js
fildll
sub
sbb
sbb
mov
aam
mov
enter
push
into
jp
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
sbbl
ds
xor
stc
add
or
jns
outsl
mov
sub
xor
xor
cld
jne
xor
sbb
xchg
fstps
loope
pop
icebp
out
lahf
or
mov
xor
cs
sbb
dec
xchg
leave
add
and
jecxz
sbb
or
lret
cmp
cmp
imul
mov
rol
xor
xor
xor
mov
cmp
imul
dec
outsb
add
nop
lods
repz
js
js
test
insl
or
test
bound
stc
cwtl
adc
xor
adc
sub
fdivp
pop
dec
add
xchg
xor
inc
out
ja
jl
or
fldenv
cmc
mov
fwait
lret
mov
ljmp
xchg
sbb
movsl
lock
and
or
stc
test
mov
push
lcall
in
sub
addr16
xchg
push
jne
cltd
lods
data16
mov
jmp
add
pusha
sub
sub
out
ret
not
adc
fcompl
mov
cmpsb
insb
xchg
dec
icebp
inc
gs
in
dec
xor
cltd
lds
out
ljmp
hlt
jns
jb
popl
stos
repz
inc
stos
js
add
fdivrl
pop
addb
mov
jnp
xchg
pop
popf
pop
insl
repnz
jg
or
ret
lret
mov
mov
repnz
mov
pop
into
xchg
add
jno
jp
lock
mov
pushf
ss
pop
sbb
aam
outsl
sub
cs
push
push
sahf
xor
lcall
orb
dec
dec
mov
out
jl
ret
xor
pop
aaa
mov
cs
mov
jmp
push
lods
lcall
cld
xchg
shll
test
sbb
nop
sahf
mov
push
iret
adc
inc
lret
movsl
dec
enter
xchg
cld
push
iret
js
inc
fnstcw
stos
mov
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
pop
jae
inc
orl
lods
pop
out
shlb
into
fldl2e
das
push
jl
ljmp
mov
in
jmp
leave
cs
pop
add
sahf
mov
andb
imul
xchg
js
out
lods
fbld
mov
dec
add
xlat
jnp
mov
mov
in
outsb
adc
cmp
xchg
mov
hlt
xchg
das
mov
cmp
outsb
imul
ret
dec
lcall
pop
and
sub
add
mov
js
xorl
xchg
mov
add
dec
ret
int3
clc
jne
push
and
call
fwait
enter
push
test
stc
mov
jb
cmp
inc
mov
lret
mov
push
lcall
jne
roll
add
ret
mov
fisttpl
enter
shl
dec
lods
fidivrl
bound
adc
mov
rorb
sbb
addb
sbb
dec
into
pop
inc
insb
testb
movsb
loopne
sti
clc
xchg
or
and
popa
stos
sahf
mov
lret
stos
or
inc
mov
sbb
xchg
loopne
fldt
and
jp
xor
mov
xor
test
mov
aad
fldenv
pusha
repz
fistps
mov
fnstenv
leave
mov
pop
jo
scas
mov
inc
jb
int3
mov
test
push
mov
mov
dec
mov
xchg
test
adc
jbe
shll
cmp
and
pop
jecxz
roll
lret
test
adc
and
push
xchg
or
lcall
movsb
cmp
xor
xchg
pop
push
mov
fmuls
mov
mov
insb
jno
js
add
sub
ret
mov
filds
cmp
inc
popf
repnz
xor
push
mov
int
or
or
push
std
in
sub
xchg
mov
and
cli
popa
push
pop
xchg
mov
dec
loop
aam
js
add
inc
sbb
out
sub
add
pop
pinsrw
ljmp
enter
cmc
xor
shr
inc
in
and
cmp
adc
nop
cmpsl
imul
fiaddl
lds
pop
pop
frstor
out
lcall
sbb
scas
ljmp
pop
inc
fcoml
push
push
sub
pop
sub
nop
sbb
nop
loope
and
lahf
clc
or
jg
fcoms
jno
mov
orb
les
cmp
aad
cmp
push
adc
lcall
pop
pop
mov
das
jle
les
outsb
test
sbb
and
out
int
dec
or
and
cwtl
cli
pop
icebp
mov
pop
lahf
ja
lahf
ljmp
lcall
hlt
inc
sbb
mov
test
cld
imul
divps
xchg
jnp
jno,pt
mov
rcll
ffree
jae
pop
jmp
mov
jb
inc
popf
cltd
xor
push
insb
ds
sbb
and
pop
movsl
mov
or
xchg
add
aad
pop
pop
jmp
fsubs
lret
mov
lods
cmp
xor
jno
sbb
mov
cmp
add
pushf
shrb
cmpsb
xchg
sbb
push
stos
loope
sub
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
pushf
sub
xchg
adc
pop
adc
adc
cmp
out
mov
and
jge
pop
lret
aam
jmp
movl
imul
fisubl
cs
pop
repz
cmp
cmpsl
inc
pop
fwait
jecxz
cmp
mov
inc
sbb
sbb
mov
mov
jns
push
or
mov
adc
mov
aas
subl
mov
enter
pop
loope
call
lods
adcl
ret
push
adc
jnp
fxch
rorl
sahf
cs
pop
insl
repnz
test
adc
ret
loope
cmp
sbb
pop
icebp
xchg
loop
cmpl
dec
add
bound
and
xchg
xor
or
clc
outsl
ja
loop
test
aam
shl
adc
adc
scas
sahf
cwtl
out
inc
das
int3
lock
dec
mov
jg
jl
inc
mov
popf
xchg
sub
dec
xchg
nop
or
cmp
add
push
mov
dec
push
movsb
push
mov
pop
cmpsl
cwtl
adc
add
mov
lods
pcmpgtd
rorl
cmc
mov
push
pushf
xchg
test
movsl
dec
push
add
in
imul
cmpsb
xor
lret
lcall
jnp
sub
ja
out
jmp
sahf
je
push
lret
sbb
sahf
jl
scas
lcall
shl
push
divl
into
mov
and
cmp
jge
push
jmp
inc
pusha
mov
push
adc
cmpsb
sbb
jae
insl
pop
icebp
sbb
in
lret
mov
mov
fwait
aam
dec
ja
mov
daa
xchg
cmp
jl
sub
inc
lods
pop
mov
sub
call
xorb
xchg
cmp
mov
insb
pop
pop
shrl
stos
sti
add
inc
lret
rcl
aaa
mov
push
jbe
fmuls
jle
inc
out
es
mov
jmp
cmp
adc
mov
mov
sbb
incb
xor
cmp
sahf
mov
bound
fs
loopne
mov
icebp
adc
insl
das
dec
icebp
cld
stos
mov
cmpl
test
xchg
mov
mov
mov
pop
lcall
mov
jo
stos
sub
sbb
xchg
outsb
popa
mov
mov
push
push
or
xor
sbb
xchg
sub
push
inc
push
mov
ja
dec
lahf
gs
jmp
and
sbb
inc
and
or
dec
xchg
cwtl
or
negb
sub
out
cmp
daa
sti
or
sub
add
sti
les
pop
add
lret
insb
das
fstpl
add
push
add
lret
dec
add
aas
mov
call
fidivs
lahf
adc
mov
add
cmp
in
lahf
jge
adcb
pop
rolb
outsl
and
adc
rcll
push
mov
xchg
jo
divl
in
or
cmp
mov
xchg
arpl
dec
push
lods
int3
mov
mov
push
jp
cld
xor
aaa
iret
icebp
jmp
xchg
mov
push
mov
std
loop
mov
xchg
mov
std
mov
scas
sti
psubq
cmpsb
inc
sub
je
cs
cltd
push
ds
xchg
pop
mov
inc
sub
test
mov
mov
adc
leave
gs
cli
and
lea
mov
call
loop
sub
insb
mov
adc
xorl
pop
fistpl
fs
xchg
scas
adc
inc
xor
filds
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
insb
nop
js
in
mov
adc
movlps
jns
jns
mov
sub
data16
jl
mov
add
jl
or
shlb
jmp
push
mov
dec
pop
cmp
js
dec
cli
cmp
pop
jno
les
xor
ret
push
adc
enter
out
jns
daa
test
sti
movsl
xor
or
cmp
icebp
xor
sub
jae
mov
mov
flds
adc
nop
scas
adc
or
icebp
fidivl
jne
sahf
adc
add
and
jne
inc
movsl
inc
imul
xor
sub
cmpsl
cmp
jge
pop
mov
dec
popa
or
movsb
xor
dec
aam
int
jbe
mov
push
lea
adc
out
insl
xchg
pop
add
out
sub
push
mov
pop
jbe
jne
mov
cmc
and
push
mov
mov
cmp
push
cmp
arpl
inc
arpl
inc
insb
aad
push
nop
lock
ret
fisubrs
xchg
loopne
and
push
jl
dec
pop
jns
jno
add
pop
jbe
add
adc
or
pop
mov
shll
xor
test
or
fwait
or
movsl
inc
cmp
mov
cmp
mov
ret
cltd
stos
ret
test
fwait
jl
adc
and
out
fisttpll
psllq
mov
enter
sbb
xchg
cwtl
clc
into
and
lds
mov
push
mov
mov
xchg
or
sarb
dec
mov
push
ds
pusha
dec
mov
xor
push
cld
aam
mov
mov
cmpb
in
inc
cmp
mov
cmpsl
aas
xor
outsl
cmpsl
cs
mov
inc
mov
insl
mov
xchg
popa
add
push
loop,pt
cmp
pop
out
das
movsb
sarl
and
sbbl
fcmovne
adc
push
or
mov
out
subl
cmp
jmp
adc
pop
push
mov
sti
mov
xchg
sti
pusha
aam
sub
pop
into
mov
dec
mov
movsb
js
lods
outsl
popa
cmp
cmp
lock
fcmovnbe
lods
sub
lds
les
push
stc
in
push
fwait
gs
jg
mov
sub
js
xchg
add
pop
lcall
ret
cmp
push
shlb
out
insb
iret
mov
iret
shlb
cmp
dec
dec
jne
inc
addr16
add
adc
jl
xchg
push
add
out
adc
mov
scas
jns
jns
mov
add
bound
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
add
push
testl
fs
push
xor
adc
notb
psrld
and
notb
xor
cmpsl
add
and
mov
or
out
jg
sub
mov
xchg
add
jp,pt
adc
aas
fsubl
inc
mov
cmp
pop
sub
or
xchg
shll
xchg
aad
ret
iret
repnz
dec
test
cmc
out
cmp
lds
sbb
fimuls
aas
or
insl
mov
push
out
negl
xor
fstpt
jns
sub
daa
dec
inc
pop
mov
inc
popf
or
enter
cwtl
push
sti
pop
push
inc
push
adc
and
fs
pop
inc
out
imull
ss
mov
adcb
in
or
inc
mov
or
push
popa
push
jb
mov
stos
mov
mov
rol
rcr
xchg
and
adc
aam
inc
pop
mov
subb
dec
idivl
out
subb
enter
das
mov
mov
sahf
cltd
fistpll
mov
xchg
mov
ds
jae
or
adc
enter
sahf
inc
loope
or
fs
iret
dec
and
jmp
cli
fwait
out
loopne
dec
and
int3
sti
pop
adc
ss
or
pushl
sbb
ret
in
xchg
adc
push
cli
dec
je
cmpsl
mov
dec
fcomps
int
mov
sarb
xor
leave
test
push
xor
xlat
jne
mov
psubq
xchg
mov
cmp
movsb
enter
aaa
adc
in
push
push
icebp
add
lods
test
pop
xchg
cwtl
mov
shr
xchg
outsl
adc
loop
call
add
sub
fcoml
pop
rcl
mov
jno
ds
xor
into
jbe
adc
roll
mov
and
cli
clc
sbb
and
fwait
add
outsb
aaa
mov
bound
loop
outsl
fnstcw
shlb
adcb
lea
js
and
fmull
push
shl
ds
push
out
mov
xor
es
push
cmp
sbb
push
jae
scas
mov
insb
lret
daa
test
jg
mov
ret
dec
and
dec
mov
sub
scas
dec
aam
mov
idivl
adc
xor
xchg
xor
sbb
shrl
mov
fisttpl
mov
adc
mov
mov
pop
aad
jne
jns
and
cmp
nop
cmp
test
insl
mov
mov
cmpsb
xlat
sbb
cmp
push
shr
sti
xchg
jecxz
lahf
imul
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
adc
jge
adc
movlps
lcall
xchg
fnclex
pusha
mov
pop
int3
pop
push
jmp
and
inc
cmp
jo
pop
mov
push
push
pop
in
push
and
testl
sub
aaa
mov
out
pop
mov
jge
icebp
mov
loop
outsl
je
mov
loope
sbb
stc
repnz
sub
cmp
xor
jno
fwait
test
xchg
xor
mov
mov
mov
xor
loope
scas
fldenv
mov
inc
and
mov
inc
inc
xchg
jecxz
xchg
ss
pop
es
cmp
jg
xchg
imul
mov
mov
adc
mov
inc
sub
mov
fisubrs
inc
mov
mov
pop
lods
jp
stos
sbb
inc
fwait
sbb
pusha
arpl
push
out
out
pop
dec
add
xchg
mov
insl
stos
rorl
leave
push
mov
mov
jnp
jge
pushf
popf
add
xchg
xor
int
iret
leave
nop
fstl
sbb
jecxz
subl
cmp
notb
sub
add
add
js
mov
push
fwait
es
mov
imul
data16
enter
push
push
enter
push
call
inc
add
mov
pop
jge
push
sbb
adc
pusha
js
sbb
dec
jmp
icebp
mov
jae
fiaddl
inc
or
jecxz
jno
mov
sbb
repnz
je
push
fmul
mov
inc
stos
int3
adc
mov
fisubl
adc
adc
and
in
xchg
or
cmp
shlb
pop
adc
flds
xchg
mov
dec
dec
push
aaa
or
mov
js
pop
jbe
loopne
pusha
xchg
sub
mov
xchg
fstps
push
cwtl
fsub
xor
mov
ljmp
dec
fisubrs
ret
in
and
cmp
xchg
js
sub
mov
movsb
lret
hlt
aam
fnstsw
pop
lret
out
arpl
or
xorps
fxch
push
ret
rcrl
mov
sub
je
js
mov
mov
dec
dec
mov
shlb
adc
or
push
inc
cli
pop
out
dec
jl
xchg
dec
clc
xchg
cmp
fisubl
inc
scas
sbb
jbe
ljmp
out
add
jg
aas
clc
mov
sti
out
cltd
pop
push
aaa
pop
clc
xlat
sbb
fdivrs
mov
test
fstpt
adc
sarb
out
pop
mov
add
aaa
insl
xor
iret
lret
decb
jge
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
nop
vmovd
jae
adc
mov
iret
popf
mov
iret
sub
and
fisttpl
pop
jne
pop
add
or
test
pop
in
test
mov
sbb
ror
enter
dec
das
sti
mov
shrl
sub
mov
cmpsb
mov
cs
out
adc
int3
push
ret
scas
fwait
add
dec
js
dec
inc
and
test
inc
xchg
aas
outsl
inc
jnp
push
mov
pop
test
insl
xchg
into
jecxz
pop
push
pop
sbb
scas
and
cmp
mov
inc
and
lret
ja
sub
pop
in
cmp
jnp
jecxz
shr
add
mov
cmpsb
jno
in
into
and
popf
aam
mov
push
mov
add
fimull
rcll
sbb
in
lds
dec
fsubr
mov
cld
pop
in
and
push
rcll
test
rorb
loope
jge
pop
mov
nop
sub
pop
mov
out
mov
mov
outsb
jmp
push
call
xchg
in
sahf
out
fwait
in
inc
inc
dec
stos
add
xor
wrmsr
loope
std
lret
push
cli
scas
jb
or
add
add
mov
fsubs
hlt
sbb
mov
push
pop
je
push
inc
push
cmpsl
push
fadds
test
mov
mov
enter
sbb
inc
fsubrs
or
sub
pop
lret
in
rcrl
lds
push
jae
push
mov
xor
stos
xlat
adc
call
jo
add
jnp
dec
jmp
cmp
inc
jae
push
xor
jp
pop
pusha
fcmovnbe
push
xor
inc
adc
aas
outsb
mov
enter
cld
lcall
sbb
inc
xor
sub
lahf
push
jl
mov
xchg
pop
bound
dec
jbe
xchg
or
pop
pop
push
dec
mov
inc
mov
stc
cmp
mov
ja
and
mov
adc
mov
dec
mov
loopne
movsl
xlat
sbb
loop
hlt
cmpsl
push
jl
push
ljmp
pop
scas
test
idivl
dec
fisubrs
and
movsl
push
psubd
test
sbb
dec
pop
dec
in
clc
ja
xchg
loope
sub
clc
jae
dec
pop
cld
loopne
adc
sub
outsb
push
leave
stos
in
outsl
sbb
jmp
loopne
or
repnz
sahf
imul
mov
cmpsb
and
mov
dec
jp
pushw
push
jmp
push
xor
dec
inc
mov
nop
daa
fwait
xor
xchg
mov
rorl
daa
pop
add
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
xchg
add
std
dec
mov
ds
fcompl
sub
ret
lcall
mov
push
mov
stc
outsb
sahf
xor
sti
push
pop
imul
mov
push
ud0
pop
out
jnp
jmp
xorl
push
fcompl
adc
cli
add
pop
mov
shlb
in
stc
mov
cmpl
xchg
insb
cmp
cmp
sub
stos
lds
test
mov
cmp
ss
inc
pop
cs
scas
jae
pushf
pop
int
add
cmp
aas
lods
fildl
in
fcoml
pop
loopne
lods
ljmp
insb
sub
jne
cmp
call
dec
icebp
addr16
iret
inc
shrl
ret
movsb
cmp
dec
xchg
sbb
fsub
movsl
mov
stos
and
test
jbe
push
inc
or
dec
das
popa
loop
mov
adc
and
and
test
arpl
mov
aam
subl
and
mov
aam
cmp
mov
mov
push
inc
iret
xor
xor
ljmp
sbb
cmpsb
popf
lcall
mov
jo
sbb
lahf
and
add
movsl
xchg
push
rcr
pushf
inc
fisubrs
stos
frstor
arpl
xchg
test
cmpsl
push
mov
cli
add
pop
pop
or
out
mov
mov
sbbl
popf
rorl
gs
add
or
outsl
imul
fwait
adc
or
pop
mov
mov
adc
mov
sub
jmp
jmp
sbb
pop
shlb
dec
aam
scas
mov
sarb
mov
xchg
or
mov
jbe
rorl
inc
sub
and
pop
jge
push
xor
inc
mov
dec
xchg
push
add
fldl
push
dec
pushf
pop
jno
lods
dec
jnp
mov
cmp
mov
dec
sti
cmp
mov
movsl
pop
cmp
sub
pop
adc
or
sub
jnp
test
ja
icebp
push
lods
gs
fdivrs
imul
mov
push
cmpsl
push
sarl
mov
and
lods
in
rcrb
out
inc
in
es
mov
add
pop
fcompl
nop
xor
mov
imul
xchg
push
xor
pop
loopne
xchg
fsubs
xchg
pop
push
adc
jle
push
push
js
insb
dec
imul
inc
xor
sub
sub
cmp
loope
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
add
jb
repz
or
or
loopne
popa
stc
cmp
inc
cmp
adc
sbb
mov
cltd
pop
jo
fcomip
or
lret
fwait
rolb
cltd
rcrb
adc
xor
ss
std
cmpsl
lods
mov
idivl
scas
xchg
cmp
das
xor
loopne
pushf
aas
mov
rcr
adc
fstps
push
inc
fsts
mov
xor
lcall
pop
stos
int3
clc
out
inc
dec
cmp
sbb
cmp
mov
cwtl
mov
mov
cld
jp
add
fwait
push
push
outsl
mov
sarl
dec
int
sbb
sub
xchg
dec
into
add
aad
cmpsl
push
dec
mov
xchg
or
divb
in
add
iret
enter
popw
pusha
sbb
dec
call
jns
pop
xor
cmp
inc
sbb
xor
push
scas
fcomi
enter
push
adc
lcall
pop
lea
push
mov
or
and
cli
rcr
push
fildll
xor
or
lea
dec
movsb
andb
pop
xchg
pop
jae
pop
push
jge
or
es
je
imul
outsl
push
faddl
push
sub
push
jge
mov
outsb
xor
and
cmp
cmp
xor
loopne
sti
jbe
jg
fstpt
outsl
fadds
mov
jbe
imul
cli
mov
les
mov
sub
xor
push
mov
in
cmpsb
inc
push
loope
add
add
inc
repz
pop
ss
sbb
repz
loopne
dec
xchg
mov
push
push
cmp
xor
inc
pop
repnz
int3
and
pop
mov
inc
xorb
mov
ljmp
ss
bound
jbe
ret
dec
addr16
and
xchg
int
mov
sub
call
add
scas
movsl
sub
cmp
mov
lods
lds
push
sub
and
xor
inc
mov
jne
adc
xchg
leave
fdiv
mov
fs
daa
xor
inc
lods
mov
xchg
lods
xor
push
or
inc
bound
jmp
repz
mov
jo
stos
mov
insl
cmp
mov
imul
xor
fcomps
ljmp
into
icebp
sbb
daa
mov
mov
mov
jo
jns
fwait
mov
je
paddsb
iret
mov
ficompl
pop
add
movsb
push
pusha
jbe
insl
and
and
ljmp
pop
fnstcw
xor
gs
inc
jp
aaa
andb
xchg
arpl
nop
push
jp
mov
push
std
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
jns
mov
stos
movsl
xor
inc
sub
dec
mov
adc
sbb
push
lea
xor
jnp
cmpsl
mov
sub
addl
or
cltd
cmp
push
leave
xchg
fcomi
daa
or
shl
sbb
push
movsl
fistl
out
sub
cwtl
add
lock
movsb
daa
jns
lret
xchg
xchg
stc
mov
mov
cwtl
mov
dec
xchg
repnz
or
les
out
inc
outsl
add
sahf
and
nop
je
aaa
je
mov
pushf
cmp
mov
outsb
jns
scas
hlt
popf
adc
mov
xor
mov
xchg
add
aam
fstpl
incl
sub
ret
jnp
into
test
divl
mov
clc
mov
and
sbb
cmpsb
push
and
int
mov
jne
jb
xchg
dec
xchg
pop
push
imul
and
cmp
pop
pop
mov
insb
lea
pop
cmp
lea
jo
addb
test
pop
mov
xchg
mov
jo
repz
pop
out
in
pusha
out
je
pop
out
dec
jo
adc
xor
frstor
pop
das
jl
adc
pusha
add
xor
dec
loop
test
outsb
add
xchg
into
pinsrw
das
push
or
out
cmpsb
mov
and
cmp
add
sbbl
imul
jae
mov
loopne
insb
lret
mov
xchg
popf
sbb
inc
sub
sbb
push
mov
xor
cs
das
shrb
sbb
and
cmp
and
push
pop
pop
leave
mov
dec
pop
ret
jecxz
rclb
cmpsl
mov
fcmovnu
lods
dec
sahf
dec
cmpl
cli
lret
lock
and
push
stos
xchg
js
xor
jge
sarb
fs
sub
ja
dec
push
dec
aas
in
inc
sbb
out
xor
push
out
or
cmp
ljmp
xchg
add
xlat
cmp
stc
call
push
push
es
in
mov
shl
iret
jge
jae
cmp
adc
movsl
pop
imul
aaa
fnsave
and
sti
mov
add
into
rolb
pop
mov
das
jl
jge
stos
push
xor
es
pop
or
mov
sub
ret
pop
jnp
mov
mov
andl
stc
sbbl
adc
sub
jge
jnp
mov
mov
mov
sub
mov
pop
cmpsb
insl
xor
lahf
ja
jl
imul
sti
and
lret
mov
cmp
repnz
or
mov
cltd
aad
inc
or
fidivs
dec
shl
inc
sub
icebp
ror
mov
sbb
push
cmpsl
sub
or
push
jecxz
cmpsl
xchg
cltd
lods
push
add
xchg
je
pop
sub
clc
je
mov
fxch
mov
xor
es
adc
cli
lock
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
cld
pop
in
jle
pop
adc
jp
adc
mov
adc
pop
cli
out
pop
cmp
and
iret
push
stos
pop
std
mov
cmp
scas
cwtl
popa
jb
jmp
sub
mov
or
mov
pop
adc
cmpb
insl
cmp
subl
adc
mov
push
sbb
es
pop
call
rcrl
mov
lock
mov
out
inc
jbe
int
jle
cmp
pop
ja
pop
jmp
sub
and
aas
rorb
jbe
fmul
fld1
and
out
mov
shl
sbb
jns
ret
leave
sub
shrb
pop
jo
jno
sub
lock
sbb
out
out
mov
mulb
ljmp
mov
sbb
scas
loop
push
sahf
jle
dec
sub
fprem1
and
stos
mov
mov
xor
xchg
mov
cmpsl
push
mov
sbb
mov
adc
jg
dec
push
and
push
mov
cmp
xlat
sahf
nop
xorl
call
jno
cmc
lret
pop
das
xchg
insb
loopne
cmpsl
lds
mov
repnz
pop
mov
mov
lea
pushf
loopne
xor
push
mov
outsl
gs
inc
pop
ret
push
dec
stc
test
and
add
into
mov
sub
fadds
ja
or
fimull
fwait
add
int3
sub
mov
inc
divb
xchg
fisubrs
clc
cmp
sbb
test
test
xor
sahf
sub
mov
sub
pushf
aaa
jmp
cmp
mov
and
or
dec
dec
ss
hlt
sbb
xlat
and
inc
orb
inc
outsl
iret
push
jl
stos
out
movsb
mov
ret
in
lahf
xor
adc
or
lds
imul
ret
jb
mov
cmp
orb
mov
push
and
inc
fsubr
or
fadd
sub
xor
addl
iret
cmp
rorl
sahf
jnp
mov
or
and
dec
mov
adc
mov
aaa
jg
cmpsb
xor
pop
lret
fidivs
insl
jo
push
cld
fmull
push
pop
fcomi
pop
aas
lds
inc
sub
repnz
lods
xor
lret
ror
jns
mov
das
bound
mov
in
loop
xor
mov
out
and
es
xor
int
dec
pop
xchg
mov
loop
in
movsb
mov
lcall
insl
insl
inc
imul
mov
int3
add
fwait
or
jl
cwtl
jo
xor
lret
adc
fdivrs
mov
call
mulb
add
sbb
mov
add
mov
shlb
mov
jle
js
insb
popa
adc
pop
js
add
rcrl
adc
fistl
jmp
dec
xchg
test
mov
mov
mov
movsb
scas
andl
aam
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
pop
inc
add
jp
adc
aaa
mov
sbb
inc
push
push
adc
adc
dec
xlat
and
lods
into
int
push
inc
sub
aas
mov
pop
mov
pop
lock
push
cmp
mov
push
stos
push
jne
pop
andl
mov
fistpll
sub
test
call
aad
aas
cs
addr16
cmpsl
mov
test
inc
in
jp
movsb
lahf
in
xchg
jo
lahf
sub
outsl
fldcw
pop
jle
ffreep
insb
ficoml
pop
sbb
scas
dec
mov
jnp
pop
add
xor
andnps
mov
push
fbstp
pop
andb
and
jl
scas
inc
clc
das
xor
mov
out
fistpll
sarl
leave
xchg
out
fs
faddl
shll
scas
pop
lahf
and
mov
adc
or
enter
in
test
xor
jbe
leave
sub
pop
fbld
lcall
das
adc
sub
mov
adc
stos
bound
mov
cmp
into
repz
call
jecxz
mov
cmpsb
mov
inc
cmp
xor
into
inc
jae
addr16
fmuls
iret
xor
inc
jmp
dec
mov
jl
sub
dec
push
aam
adc
jle
push
ja
adc
xor
ss
mov
dec
jo
hlt
scas
pop
xchg
mov
cwtl
push
negb
int3
or
xchg
cmp
stc
mov
cli
pop
cs
cmc
bnd
mov
sbb
xchg
adc
stc
into
add
add
jns
inc
lock
mov
inc
inc
and
outsl
xor
xor
mov
xchg
xlat
inc
test
enter
mov
repnz
out
insl
cmp
or
dec
push
fs
jle
nop
gs
and
cltd
mov
cmp
imulb
mov
xor
fs
adc
lea
xchg
test
jbe
das
lahf
mov
imul
fucom
fisubl
cmp
roll
out
jge
or
stos
cs
outsl
lds
push
pop
outsl
ja
inc
cmpsb
pop
clc
aad
inc
jbe
inc
add
imul
sbb
sub
std
jae
aam
lahf
ret
push
outsl
jecxz
mov
adc
push
jecxz
lcall
pop
filds
jnp
lock
cmpsl
data16
lds
gs
ja
adc
fidivs
pop
cmp
pushf
mov
je
add
out
sarb
jge
sub
jb
mov
jecxz
and
mov
loope
mov
jb
mov
sti
out
or
adc
ss
and
int3
push
xor
xchg
aad
and
sahf
cmp
daa
lahf
push
ljmp
repz
push
loope
mov
ret
and
mov
adc
and
push
js
hlt
test
or
mov
push
imul
into
pop
es
lahf
sub
adc
adc
lcall
inc
sti
dec
testl
and
fnsave
jne
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
push
push
push
adc
jp
adc
lcall
sub
call
imul
sbb
adc
jnp
fistl
mov
js
xchg
inc
jbe
add
cmp
push
hlt
jnp
les
pop
mov
cli
in
in
aas
inc
and
mov
lret
mov
loope
mov
pop
jp
lock
mov
scas
aas
ljmp
lret
out
jle
jbe
dec
xor
js
orl
mov
and
pop
dec
and
addr16
lds
ficomps
mov
js
add
mov
aaa
jne
dec
rorl
dec
in
xchg
add
dec
xchg
out
mov
mov
sub
clc
adc
and
cwtl
jmp
xchg
fmull
pop
xchg
ret
mov
push
and
sti
mov
add
addr16
mov
sar
fcompl
pop
sbb
lret
sbb
add
cltd
pusha
jae
stc
inc
pop
or
sbb
mov
std
pop
out
fsubl
ret
mov
pop
cwtl
jnp
shr
push
mov
addr16
xchg
inc
mov
js
repz
mov
sbb
jg
push
mov
push
enter
pusha
fnstcw
lock
out
jmp
and
pop
mov
jnp
scas
movsl
adc
add
rcll
lods
addr16
cmp
testl
hlt
mov
jnp
clc
je
repnz
mov
cli
xchg
stos
icebp
cli
sbb
imul
fmull
and
jns
inc
in
sti
mov
cld
shl
aas
and
and
jnp
subl
sub
inc
sub
pop
pop
push
stc
cli
cltd
addr16
sub
and
cld
sbb
push
pop
mov
lods
das
repnz
mov
pop
cmpsl
push
js
cmpsb
mov
xor
mov
dec
adc
push
and
out
dec
adc
pop
sbb
loop
xor
daa
dec
mov
dec
pusha
lock
mov
adc
push
dec
adc
out
fidivs
test
ret
das
jns
xchg
jns
pop
pushf
xlat
ja
push
shrl
adc
mov
cli
repz
mov
daa
push
ja
jb
rolb
cmp
sub
sbb
pop
cmp
sub
fdivrs
or
cmp
sub
sbb
cld
sbb
adc
std
xchg
repnz
adc
xchg
cmp
pop
jbe
jge
outsb
sub
fcmovnbe
jae
inc
jl
dec
sbb
das
jmp
pop
stc
sbb
enter
mov
mov
mov
pop
sahf
inc
in
add
sub
icebp
cmp
outsb
cmp
pop
subb
push
lods
push
iret
mov
fdivp
std
int3
outsb
mov
push
popf
push
jae
mov
sub
lods
mov
rorb
push
arpl
pop
and
sbb
gs
inc
pop
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
hlt
mov
movlps
adc
xor
ja
or
pop
out
pusha
fcom
stos
pushf
stos
repnz
fadd
enter
jbe
lahf
dec
mov
outsl
and
and
cmp
sbb
imul
mov
lods
popa
loop
sti
faddl
or
les
loope
or
mov
lcall
popf
lods
ljmp
push
fidivrs
and
push
aam
fisubrs
int
cmp
pushl
insl
loope
lahf
popa
outsl
shlb
repnz
push
cmp
jo
fcompl
das
std
orb
lea
or
hlt
jmp
xor
dec
jbe
out
fst
mov
int
enter
mov
int3
pop
sub
ret
pusha
or
mov
int3
mov
dec
dec
ljmp
stc
neg
loope
outsl
adc
cmc
cmp
or
and
cmp
jecxz
out
and
hlt
mov
inc
lea
ret
dec
popa
repz
ret
sbb
push
imul
xorb
pop
addr16
aas
mov
pop
pop
fsubp
mov
sub
gs
mov
cmp
push
out
cwtl
sbb
sbb
jmp
or
jno
inc
sahf
loope
xchg
push
xor
lahf
test
aas
insb
andl
pop
ror
mov
lods
pop
lods
jl
mov
call
fstp
jge
xchg
notl
add
test
mov
inc
mov
cld
repnz
push
pop
dec
lock
jne
mov
adc
lcall
lahf
test
or
lock
popa
sarb
xor
pop
rolb
mov
outsb
jge
lds
rorl
dec
cmp
xor
add
jg
dec
leave
or
dec
popa
call
dec
add
loopne
xchg
mov
ds
sbb
jle
out
jg
inc
mov
iret
push
fcompl
push
cmpsl
nop
int3
out
in
push
dec
lods
jmp
addb
mov
and
lock
push
sahf
lret
es
rclb
nop
insb
mov
push
leave
popa
pop
inc
ds
sbb
jle
mov
hlt
test
clc
addr16
pop
xor
or
icebp
rcrb
sub
lods
add
jecxz
push
jae
lret
mov
add
in
in
lret
and
ja
add
or
in
adc
loope
ret
mov
dec
shl
dec
cmp
or
pop
fcmovnbe
test
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
and
push
call
ss
pop
fiaddl
jbe
xchg
sbb
popf
cmp
jmp
push
add
push
push
cli
cmp
mov
jnp
outsb
pop
mov
out
and
icebp
fldl
cltd
lahf
xchg
divl
scas
popf
jecxz
or
xchg
daa
sub
xchg
test
cmp
in
sbb
imul
sbbl
push
test
ret
scas
mov
sbb
shrl
cmpsl
pop
jg
xchg
jmp
xchg
inc
addl
xchg
mov
push
repnz
in
jl
jns
dec
cld
pop
mov
data16
jbe
inc
fisttpll
or
outsb
and
repnz
push
and
sub
or
sub
shrl
inc
nop
aas
push
ret
xchg
cmpsl
adc
sbb
iret
sub
sti
mov
mov
jp
jge
arpl
inc
adc
cmp
aad
sub
push
add
js
xchg
lods
enter
dec
loope
jne
jmp
lods
lret
mov
and
inc
mov
mov
test
push
add
popf
push
inc
daa
jmp
cmp
rol
into
leave
cwtl
fst
cli
shrl
movb
popf
imul
stos
test
inc
jnp
bnd
lret
or
sub
or
aas
jle
adc
jmp
repnz
test
movsb
into
cmp
xchg
jmp
push
push
pxor
sbbl
sub
insb
adc
repnz
pushf
add
fisubl
push
push
or
lea
xor
ja
movsl
ja
sub
jb
ficompl
enter
jmp
push
std
add
lea
test
cld
pop
sbb
add
aas
dec
dec
mov
mov
sbb
rorb
loopne
and
int
inc
cmp
pop
push
outsb
call
out
lods
das
mov
jns
cmpsb
and
adc
sbb
mov
pushf
fisubs
jne
mov
hlt
aaa
cmpsb
adc
lcall
flds
enter
dec
adc
push
adc
cmp
cmp
cltd
cmp
xor
push
cmp
mov
mov
ja
insl
lcall
mov
jp
bound
pushf
xchg
or
jno
loop
xor
sbb
xor
mov
lcall
nop
shrl
pop
or
push
mov
jecxz
fsubrs
cmpsb
adc
jge
mov
jecxz
add
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
cmp
pushf
sbb
insb
divl
fmul
fisubrl
jle
sbb
mov
loop
push
inc
leave
inc
pop
xor
adc
add
pop
or
int
cmp
lret
dec
adc
fistl
mov
and
imul
mov
jl
js
jp
hlt
inc
push
push
and
push
cmpsl
jl
push
push
lds
scas
xor
or
mov
std
fadd
fstpt
mov
xor
iret
mov
mov
inc
icebp
clc
int
call
or
lods
adc
scas
add
or
dec
mov
hlt
push
ret
loop
fisttpll
fwait
call
aas
add
adc
ja
in
mov
inc
scas
cmp
push
das
mov
rcrl
adc
arpl
inc
in
cmp
outsb
js
es
or
sahf
cs
dec
mov
add
aas
dec
loope
inc
mov
das
movsl
imul
stos
xor
fucomp
push
jb
lret
jg
das
into
hlt
repz
stos
mov
arpl
jecxz
dec
xor
dec
or
setbe
outsl
sbb
fwait
ljmp
or
ret
sahf
stc
jge
int3
cmp
inc
lahf
xor
lds
push
adc
jbe
call
mov
lret
inc
testb
stc
rcrl
cmp
fwait
mov
inc
nop
jp
cli
adc
jae
or
pushf
sub
xacquire
xor
insb
mov
iret
xor
xchg
popa
aam
add
xlat
xchg
mov
dec
arpl
cli
or
ss
cld
dec
stos
sub
popa
jne
sub
fdivrs
mov
ss
or
cmpsb
mov
cs
cmp
xor
lods
xchg
jo
fidivrl
lock
xchg
or
add
jne
jg
dec
jae
and
push
mov
push
cmp
icebp
pop
hlt
int
hlt
mov
lret
xchg
pusha
cmp
lds
and
in
jb
mov
ljmp
das
pop
and
cmp
xlat
jno
movsb
std
cli
mov
imul
jbe
test
add
or
mov
mov
cmp
test
sub
mov
js
imul
pop
into
cmp
repz
test
ret
mov
stos
aad
inc
out
test
dec
neg
stc
pop
das
aad
aas
or
xorl
xchg
sub
rorl
out
add
enter
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
insl
or
lea
adc
mov
roll
iret
jae
sub
gs
push
fcmovnbe
mov
outsb
pop
mov
xchg
div
sahf
popf
jne
jne
ds
fdivrl
icebp
aas
jnp
xchg
lret
lods
rcll
jbe
hlt
insb
loop
shll
movsb
cmpsb
test
test
lds
mov
shll
rol
test
ret
lock
hlt
lea
gs
js
sti
adc
in
sub
push
jo
mov
fcomps
jg
shlb
fidivl
cli
je
xchg
xor
mov
push
inc
outsb
icebp
and
aaa
or
pop
cmpsl
add
jp
es
stos
xor
mov
push
inc
or
repz
push
xchg
nop
in
imul
sub
ror
out
add
stc
cmp
stc
cmpsb
cltd
inc
cmp
mov
sbb
dec
call
push
psrlw
gs
lcall
xor
cltd
fidivrl
adc
inc
fbstp
out
loope
inc
push
sub
clc
mov
les
jge
and
es
mov
stos
jae
mov
and
xchg
dec
dec
fisubs
rcrl
cmp
mov
xlat
jo
shrb
pop
cmc
and
cmp
insb
xor
adc
ss
icebp
jnp
xchg
or
mov
ror
cmp
xchg
arpl
cmc
mov
or
dec
clc
subb
mov
adc
sub
pop
cmp
adc
mov
mov
lret
mov
cbtw
js
daa
inc
push
roll
lock
test
lods
loop
jmp
xor
sbb
mov
mov
and
add
rcrl
subb
movsl
and
adc
imul
xor
sbb
sti
jo
and
xchg
or
outsb
add
sub
ret
push
mov
lea
daa
and
sbb
lret
stos
cld
lret
cwtl
fildl
sbb
arpl
roll
jnp
ret
arpl
push
jl
scas
mov
je
and
fstpl
adcb
jle
cmp
mov
loope
mov
jae
jno
ds
inc
inc
sub
aam
js
popa
push
cs
adc
lock
call
sbb
or
ss
pop
push
daa
xchg
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
jp
insb
inc
xor
adc
add
xchg
das
xchg
dec
call
leave
stos
cmp
dec
dec
daa
mov
ds
call
mov
jo
cmp
sub
dec
and
fisubrl
pop
jne
daa
mov
mov
sub
xor
inc
popa
xchg
ss
mov
xchg
dec
ss
push
stos
xchg
ss
call
lea
inc
leave
inc
mov
pop
dec
add
dec
pushf
imulb
es
and
adc
fistpl
jo
mov
or
pop
out
add
in
les
test
or
jle
pop
inc
xchg
and
push
mov
mov
ljmp
sub
pop
inc
mov
addr16
stc
jns
dec
and
or
mov
xor
mov
inc
jo
stos
ja
subl
es
lret
mov
iret
mov
xchg
pop
inc
ja
mov
inc
movsl
repz
mov
and
sahf
dec
sub
daa
testb
jne
mov
mov
add
mov
mov
pop
fsincos
cli
iret
movsl
sub
adc
das
js
fildl
jns
iret
inc
rol
movsl
nop
cmp
sbb
jnp
lods
daa
or
lea
xchg
jae
testb
jne
push
xchg
in
xor
inc
adcl
jle
sarl
das
repnz
aam
mov
sub
fs
scas
setle
sbb
or
pop
xchg
dec
push
mov
jnp
and
sub
xchg
or
jno
xor
lret
daa
std
inc
dec
cmp
pop
pop
dec
mov
orb
mov
push
mov
xor
fwait
jns
popa
cmp
jp
fwait
adc
mov
sub
or
dec
loop
mov
mov
lds
inc
add
fucomp
mov
test
insb
add
push
cli
xchg
lea
lods
mov
mov
sahf
in
push
xor
xchg
jbe
and
adc
loop
pop
sub
ja
paddw
mov
cld
jnp
jle
mov
addr16
cmp
bnd
push
mov
ljmp
xor
mov
pop
fs
push
mov
mov
imul
inc
dec
and
pop
mov
adc
outsl
cmpsl
mov
cs
xorl
aam
in
xor
fidivrs
pop
sahf
jp
sbb
loop
data16
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
test
lods
mov
movlps
rorb
fldl
push
mov
and
data16
or
repz
or
inc
xlat
ds
scas
jne
sub
filds
dec
fisubs
mov
xlat
loope
clc
ss
or
jle
jne
fld
add
mov
movsb
in
mov
ficoml
sub
aas
pop
sub
andb
inc
pop
xchg
roll
ret
jmp
scas
mov
jnp
insl
jmp
inc
mov
ret
shlb
pop
push
lea
sbb
movsb
dec
jnp
or
repz
test
scas
mov
jbe
fistl
lods
shlb
dec
inc
sub
jns
lcall
adc
out
addr16
xchg
ss
fs
and
test
xor
add
fildll
daa
cmpl
imul
cli
pop
or
movsb
jne
jp
pop
push
adc
es
icebp
test
sbb
bound
dec
xor
inc
push
std
add
lods
popa
ljmp
in
lods
test
mov
mov
in
testb
and
scas
cmp
mov
scas
data16
aad
int3
cmp
outsb
pop
inc
sub
mov
in
sti
notb
pop
pop
jecxz
jno
xchg
or
mov
mov
jae
sub
mov
or
imul
aad
ss
push
mov
daa
pop
out
test
cmpsl
inc
in
out
cmc
mov
pop
xchg
mov
addr16
cmp
loop
sbb
sbb
jo
pop
sbb
test
pop
mov
push
nop
pop
push
push
push
inc
xor
mov
push
xchg
sub
inc
mov
mov
in
sahf
sub
cmp
mov
adc
jne
xchg
dec
sbb
stos
inc
mov
jno
jp
js
shrb
and
and
pop
mov
ret
cmp
cld
lret
push
or
int3
inc
dec
pop
cmp
adc
hlt
rcr
imul
imul
int
scas
aam
fldcw
in
movsl
cmp
lea
mov
mov
mov
cwtl
into
xchg
repnz
lahf
and
test
jg
mov
pop
popf
leave
jg
jge
lahf
push
out
test
add
insl
cli
aas
in
fimull
mov
sub
xchg
cmc
lahf
fs
fs
mov
dec
repnz
xchg
adc
or
xor
or
push
add
jmp
and
lods
and
js
lock
mov
lea
adc
packuswb
jb
jno
inc
hlt
sub
inc
cli
push
cmp
jmp
out
outsl
dec
test
xor
push
mov
test
lret
sbb
cmp
pop
inc
xchg
xchg
bound
add
aas
dec
insl
popa
jl
ds
mov
flds
negl
xor
pop
insl
lret
movsl
pop
xchg
push
pop
fwait
lds
imul
and
push
cmp
jae
sti
nop
pop
rorb
rcll
imul
pop
inc
cmpsl
pop
mov
inc
ljmp
imul
mov
mov
jmp
push
out
insl
and
scas
jne
lcall
lcall
mov
xchg
fcoms
mov
xchg
adc
push
inc
bound
sbb
in
xchg
or
xchg
lods
and
cmpsl
mov
loop
jmp
xchg
jmp
mov
enter
idiv
jne
xor
out
cli
int
push
add
stc
and
xchg
add
mov
jmp
jnp
in
out
dec
pusha
or
repnz
mov
insl
xor
outsb
pushf
fldln2
js
mov
sar
cmp
js
call
dec
xchg
ds
lahf
mov
sbb
and
xchg
xchg
dec
std
movsl
cli
sti
mov
push
and
cmp
test
cmp
dec
push
cmp
adc
aaa
mov
pop
inc
mov
jns
mov
mov
popf
mov
cmpsb
into
sti
mov
lods
nop
mov
fs
pop
pushf
call
imul
push
fisubl
cmp
or
lret
and
mov
dec
loop
mov
lock
fildl
outsb
dec
shrl
ja
inc
push
xchg
int3
pop
mov
cld
sahf
push
pop
stos
into
push
xchg
mov
mov
jl
test
cltd
je
jp
fiadds
jbe
add
lods
inc
jle
sub
ljmp
add
stos
or
dec
xchg
ret
xchg
mov
ds
jle
adc
push
out
test
aaa
mov
mov
jne
mov
adc
inc
outsb
cvttps2pi
test
mov
or
aaa
pusha
popa
pop
dec
sbb
repz
insb
add
xchg
xor
aam
jno
mov
insl
int
xor
jle
repz
cmpsb
mov
add
mov
int3
xor
cmpsl
pop
or
inc
mov
in
jle
mov
sbb
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
dec
shr
fistps
sti
leave
add
inc
mov
push
loop
and
ss
or
xor
jb
std
sti
push
inc
lods
aaa
cmp
cmpsb
fs
xlat
pop
ret
lcall
add
jb
or
mov
dec
adc
daa
xchg
aad
pop
xchg
pop
and
or
cwtl
popw
mov
pop
popa
mov
test
aad
pop
loope
aad
fldt
std
add
or
xlat
and
iret
jae
scas
lods
inc
loope
cwtl
mov
and
out
push
lods
adc
insb
loope
subb
idivl
pop
jge
mov
es
mov
jecxz
mov
lock
mov
rol
in
mulb
inc
dec
inc
cmp
stc
push
sub
repz
loop
or
cmp
adc
add
inc
mov
mov
xchg
out
or
push
sbb
out
insl
cmpl
insb
test
imul
or
pop
mov
cmp
ds
add
jns
pop
xor
xchg
sbb
xor
inc
xchg
mov
mov
and
stc
dec
daa
fsubrs
xchg
pop
arpl
in
mov
in
hlt
stos
dec
lds
sbb
jl
push
daa
inc
in
adc
adc
call
jle
inc
cmpsb
lods
arpl
dec
mov
and
shrl
or
jnp
pop
int3
mov
mov
sbb
xor
pop
jle
mov
mov
loope
movsb
mov
mov
shll
jno
xor
outsb
push
mov
mov
fistps
dec
in
or
mov
pop
ret
lret
dec
cmc
mov
xor
or
sub
mov
cmp
adc
dec
cmp
out
push
scas
aad
sbb
test
pop
mov
xchg
push
jno
rcrb
or
mov
fsubr
xor
xchg
mov
mov
and
or
adc
pop
lods
loop
cmp
pushf
pop
stc
lods
or
popa
pop
jmp
pop
mov
ss
ss
add
push
lock
and
out
sub
push
cmp
push
ljmp
pusha
js
enter
dec
sbb
inc
add
push
sbb
mov
sbb
push
push
pop
pop
push
pop
inc
repz
dec
rolb
pop
nop
out
in
lock
inc
sbbl
enter
and
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
std
jle
sbb
adc
out
xchg
jmp
mov
aam
out
add
sub
pop
call
mov
imulb
lock
sbb
lcall
popa
jne
xchg
or
and
cmp
int
fnsave
out
or
rclb
push
xor
test
cltd
loop
imul
push
cld
nop
jbe
jg
push
mov
js
sarb
inc
gs
int3
mov
shrb
sbb
mov
clc
iret
dec
es
lahf
in
out
mov
sahf
pop
ret
jp
jno
push
cmp
in
dec
sti
push
in
and
lds
mov
cld
mov
ja
into
xchg
aaa
jne
sahf
mov
loope
xlat
vpacksswb
popa
shrl
fwait
jmp
dec
enter
outsl
add
into
push
cmc
jne
xchg
adc
repz
push
lock
repnz
sub
imul
inc
popf
lahf
pop
loopne
inc
mov
jmp
jb
dec
imull
ret
push
jo
lahf
push
scas
lahf
pop
lret
ljmp
inc
mov
mov
jmp
loope
sbb
addr16
jmp
loopw
push
addb
call
dec
rcll
bound
sbb
xchg
or
test
ja
ja
lret
idivl
mov
mov
aas
and
or
out
ret
dec
xchg
jae
xchg
inc
bnd
jno
pop
sbb
por
lahf
sbb
jns
add
xlat
xor
insl
xchg
call
roll
out
movsl
inc
testb
mov
cmp
pop
pop
out
cmc
popa
inc
mov
shrb
or
cmc
int
inc
and
mov
aam
imul
ss
les
call
test
push
pop
cltd
add
in
std
jae
sub
and
in
std
xor
movsl
mov
iret
fadds
push
jno
jge
jle
sub
inc
lods
push
das
loop
idivb
scas
sbb
pop
adc
xor
out
and
les
es
les
push
lret
mov
mov
jo
movsb
mov
lods
cld
mov
mov
mov
sbb
or
arpl
jle
adc
movsb
mov
int
sbb
cmpsb
stos
loope
xlat
mov
push
inc
jge
test
insb
int
stos
sbb
mov
fwait
xor
mov
xchg
or
jb
and
add
sti
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
push
push
push
sbb
adc
or
or
pop
adc
jb
leave
in
imul
sub
push
scas
int
sbb
adc
mov
cmp
dec
loop
lret
lock
gs
cmpsl
adc
lods
aad
stos
or
cmp
push
cmp
mov
pop
shll
fbld
add
mov
sbb
in
aaa
xor
xchg
stc
aad
out
or
shlb
add
cmp
test
inc
stc
test
xor
cmp
xor
add
lcall
enter
jns
scas
push
sbb
outsl
jp
scas
pop
ficoms
insb
add
cmpsb
xor
adc
in
popa
mov
popf
frstor
daa
loop
fimuls
xchg
bound
js
mov
out
decb
adc
cmp
scas
push
jmp
mov
xor
cmp
call
imul
fmull
and
dec
movsb
push
pop
mov
outsb
shll
inc
xlat
or
push
sbb
jnp
lahf
ror
jae
inc
orl
sbb
nop
jl
push
mov
rol
mov
insl
push
pushf
pushf
aam
mov
icebp
sub
push
clc
push
xchg
mov
ljmp
pop
mov
lock
dec
leave
cmp
mov
sub
inc
cmpl
and
icebp
xor
dec
sarl
stos
ds
push
aad
lret
push
mov
scas
adc
psubsb
into
dec
cmp
aad
mov
adc
in
mov
mov
sbb
call
fidivrl
out
sbb
mov
mov
push
or
enter
xchg
sarb
imulb
push
movsl
mov
sbb
fcomps
jo
ja
dec
fildl
or
xchg
es
pushf
fs
push
fistps
andb
pop
cmp
repz
scas
mov
jmp
in
outsb
insl
mov
movsl
daa
mov
cmp
hlt
dec
daa
xchg
add
mov
andb
mov
scas
push
stos
int
sarl
imul
inc
adc
lock
lods
sub
fistps
mov
int3
push
sbbb
ds
xorl
mov
test
pop
xchg
mov
fs
ret
pop
inc
mov
sbb
and
or
pop
movsl
bound
push
rorb
push
add
sbb
movl
shlb
in
inc
dec
mov
pop
push
xchg
adc
add
sub
mov
std
cs
out
addr16
jae
mov
mov
in
mov
mov
outsb
xchg
movsl
mov
add
xchg
orb
lods
push
mov
jo
jno
aad
sub
pop
out
repz
andb
stos
mov
sbb
xchg
cmp
cmp
loop
clc
xchg
imul
repz
push
lret
mov
add
adc
jmp
ja
call
jl
in
fcmovb
nop
or
scas
push
xchg
hlt
fsts
lea
call
ja
mov
inc
test
out
lods
out
cwtl
mov
cli
push
jmp
or
push
xchg
jno
jp
push
push
subps
jo
lret
cwtl
cmp
inc
add
or
into
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
pop
movsb
js
unpckhps
mov
cmp
loope
mov
and
aam
mov
xor
aas
shr
xchg
loop
inc
jl
push
add
inc
lret
add
outsb
jo
push
jbe
push
jg
mov
incb
adc
pop
mov
sub
and
mov
mov
cmp
mov
fcompl
cmp
sbb
popf
lea
incb
jae
pusha
add
mov
push
mov
jecxz
inc
mov
and
filds
push
xchg
mov
lret
inc
movsb
sbb
jb
mov
sbbl
les
and
pop
mov
into
sbb
popa
jns
pushf
sahf
rorb
and
xlat
mov
cmp
sub
scas
cltd
fidivl
sbb
xchg
insl
sub
cmp
loope
mov
push
stc
call
add
into
mov
shrl
mov
stc
pop
aas
mov
cltd
pop
sbb
lds
adc
test
or
imul
push
mov
jb
xor
out
stc
scas
inc
es
push
inc
inc
dec
in
jle
sub
insl
arpl
push
jl
mov
das
or
mov
cli
jmp
loope
sub
pop
in
push
stc
stos
loope
repz
leave
imul
nop
test
add
shl
xorb
insb
push
xchg
daa
sub
jo
push
mov
enter
jno
and
jmp
subb
sub
sub
rcrl
add
add
mov
inc
dec
int3
mov
xchg
popa
int
jecxz
ds
and
and
and
mov
arpl
shlb
xor
aas
fdivl
aaa
inc
mov
inc
mov
dec
jecxz
movsl
sub
lcall
pminub
dec
imul
add
sarl
test
leave
inc
into
mov
and
cmp
push
cli
cltd
cmp
repz
mov
scas
cmc
pop
cli
sub
pop
mov
mov
mov
out
in
js
or
mov
push
jbe
fwait
leave
shl
dec
insl
pop
outsl
xchg
addb
les
lcall
jmp
push
pushf
ret
fildl
dec
or
ds
mov
inc
mov
inc
mov
mov
jbe
inc
sub
pop
test
dec
mov
add
sbb
xor
clc
leave
adc
push
adc
push
mov
pop
ljmp
xor
icebp
mov
stos
add
sbb
lea
fldl
ljmp
mov
sbb
push
sbb
mov
sbb
push
jle
mov
jmp
orl
test
loopne
mov
shlb
mov
in
in
push
xchg
adc
and
and
jae
cmpl
pop
rcrb
jl
into
or
mov
imul
idivl
xor
xchg
or
or
cmp
call
jo
ret
lods
test
repnz
pop
or
add
xor
subl
cmpsl
fst
scas
push
gs
or
push
ss
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
sub
loop
jns
inc
dec
es
lcall
dec
iret
rcrl
out
and
cltd
dec
idivb
and
pop
mov
incl
sbbl
shlb
inc
test
xor
roll
iret
arpl
jecxz
test
adc
ror
mov
call
add
dec
and
sub
mov
dec
pop
lods
in
fisttps
not
jp
loopne
or
ja
pop
fnstenv
in
out
push
sub
push
push
testl
scas
pop
and
ret
test
sbb
out
xor
push
lea
jecxz
fidivrs
inc
mov
mov
cmp
sbb
test
xor
setp
inc
outsb
and
fldenv
jno
xchg
in
jns
aam
mov
mov
and
and
push
push
xor
das
adc
lock
sub
lods
jl
int
xchg
cmp
data16
scas
testl
incl
loope
xor
jns
and
lea
out
xor
fiaddl
cmp
mov
fildl
rclb
aam
xor
test
adc
stos
cld
push
ficompl
cmpsb
cmpsl
sbb
mov
inc
stos
fmuls
push
add
adc
fsubrp
cmc
shll
rorb
xchg
inc
mov
insl
outsl
fisttpll
adc
fistpll
into
inc
push
fdivrs
pusha
inc
xchg
push
mov
stos
mov
js
imul
fcmovnbe
test
inc
aad
pop
push
in
cli
inc
and
ja
cmp
add
addr16
dec
repnz
scas
jmp
test
popf
mov
lea
in
jp
lods
ret
movsl
icebp
test
stc
icebp
push
push
bswap
insb
mov
xorl
ds
xor
adc
nop
scas
push
mov
lret
mov
in
push
sub
dec
mov
mov
or
pop
adc
sahf
cs
addr16
mov
adc
cmc
in
loop
lret
cmpsl
inc
aas
jbe
lahf
rcrb
insl
sub
pop
mov
jecxz
xor
rol
sub
adc
pop
fildl
gs
mov
ljmp
mov
in
jg
sbbb
add
dec
jne
pop
mov
mov
mulb
sub
mov
push
cmp
data16
faddl
stc
lea
cmp
scas
pop
rcl
push
cwtl
cmp
cltd
xchg
xor
sub
out
dec
in
mov
sbb
mov
cmp
mov
addb
nop
pop
jnp
mov
rcll
pop
jg
xchg
sti
pop
test
lods
and
icebp
enter
xor
aam
ljmp
fiaddl
iret
push
out
in
aam
sub
mov
xchg
inc
je
mov
ja
daa
mov
jae
mov
test
int
mov
fmull
pop
in
adc
adc
mov
ret
js
dec
das
cmpsl
outsb
and
mov
push
pop
adc
xchg
ret
scas
iret
push
dec
fsts
push
repz
imul
sbb
nop
shrl
stc
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
xor
stc
jle
call
adc
sub
cwtl
dec
xchg
xor
ss
mov
mov
and
shlb
push
shl
in
xlat
out
ficompl
cmp
fcomps
ljmp
mov
data16
inc
shll
in
xchg
xchg
cmp
repz
jge
jb
pop
into
cltd
out
aas
xorb
or
imul
mov
les
rol
popa
mov
outsl
out
inc
push
mov
lcall
cmp
xchg
sbb
mov
jl
loop
dec
idivb
push
loop
inc
inc
lds
mov
ret
inc
jbe
aad
aam
data16
sub
mov
dec
jno
int
adc
out
add
jp
pop
stos
push
sub
rorb
insb
xchg
sub
inc
in
rcll
leave
daa
cli
pop
xchg
es
scas
ret
flds
mov
or
rorl
insb
ret
in
dec
fisubrs
in
mov
push
pop
sti
xchg
mov
shl
mov
aad
dec
mov
dec
dec
sub
negl
incb
ja
pop
push
lcall
cltd
cld
xor
pop
adc
cmpsl
mov
ds
jle
mov
enter
mov
xchg
xchg
mov
dec
std
sar
or
out
mov
scas
scas
cld
sbb
out
mov
pop
loop
shrl
jno
push
rcrl
shlb
and
in
test
pushf
sti
mov
out
mov
mov
les
and
cld
xor
gs
cmp
shl
jns
aas
faddp
mov
shll
adc
sub
xchg
push
inc
xchg
adc
test
addr16
jmp
ficoml
push
inc
mov
cmp
rcrl
mov
test
loop
pushf
repnz
xlat
xor
sahf
lcall
cltd
ret
jnp
pusha
inc
stos
mov
in
sbb
int
xchg
sbb
mov
inc
iret
aad
pop
add
cltd
fidivrs
push
mov
jp
dec
push
shll
inc
leave
mov
jne
xchg
dec
movsb
in
jns
stc
and
adc
push
xchg
repnz
or
mov
xor
fisubrl
sub
mov
out
sahf
inc
shrb
mov
pushl
pop
cs
rorl
inc
les
inc
pop
push
add
push
lds
scas
xor
sub
stos
xlat
andb
and
mov
sarl
jg
mov
arpl
bnd
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
mov
adc
adc
aam
sbb
xor
inc
mov
out
mov
addr16
adc
xor
dec
std
pop
adc
jne
mov
es
dec
dec
sti
loope
sbbb
jae
call
cmpsb
xchg
int
xorb
jl
dec
inc
inc
data16
xchg
testl
inc
addr16
add
jno
shll
sbb
or
mov
movsb
out
pop
add
jbe
add
mov
ss
inc
leave
mov
pop
int
call
sti
xor
push
stc
fstps
cwtl
sarb
insb
cltd
pop
xor
mov
and
sti
sti
mov
or
adc
repz
test
outsb
dec
inc
divb
popf
or
cmp
jo
call
add
jno
xchg
add
lods
jb
lods
jnp
movsl
test
mov
or
fisttps
js
mov
js
decl
fpatan
push
mov
dec
cmp
aam
stc
call
cmp
xorl
mov
cmp
stos
mov
iret
sahf
push
stc
cmpb
stos
xchg
loop
mov
sbb
xor
push
mov
inc
lsl
jbe
pop
pusha
xorb
mov
lcall
mov
sbb
pushf
inc
mov
jns
mov
push
jns
or
mov
adc
cmp
sbb
cli
and
mov
xchg
add
test
shrl
ret
ljmp
ds
pop
scas
sub
fldcw
dec
test
mov
lahf
adc
jb
shl
push
cmpsb
and
fidivs
aad
aas
mov
lock
xor
int3
pop
cmp
lods
lret
dec
mov
push
bound
jmp
nop
leave
out
jmp
inc
aas
sbb
andb
pop
sbb
pop
sub
adc
adc
xor
add
mov
pop
sarb
aas
shlb
inc
mov
in
test
add
in
mov
rolb
insl
mov
sub
mov
mov
outsb
mov
fstl
into
fwait
iret
lret
adcb
xchg
xlat
lret
ret
xchg
and
sahf
enter
mov
sbb
fiaddl
add
push
js
popa
lea
push
rcrl
test
cmp
sub
or
bound
adc
call
fiaddl
sub
aam
or
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
lea
adc
push
add
ja
out
lret
inc
loop
rorl
adc
xor
test
fcoms
sub
or
stc
xchg
xchg
adc
ljmp
xchg
mov
xchg
xorb
pop
jbe
jbe
fst
mov
sub
inc
adc
inc
movsl
mov
mov
fisttpll
and
nop
mov
cmp
sarb
sahf
mov
rol
out
adc
sbbb
jmp
ficoml
xchg
sub
xchg
addr16
xchg
stos
ljmp
insl
push
cmp
sub
sub
add
mov
sahf
outsl
stc
mov
aam
imul
out
js
aas
mov
pusha
js
stos
scas
arpl
fstps
jne
sbb
pop
inc
sbb
shl
pushf
into
inc
pop
ficompl
sbb
push
insl
jnp
jnp
rcr
jbe
adc
shll
lea
adc
iret
mov
pop
and
out
out
popa
sbb
pushf
jbe,pn
lods
jbe
sahf
out
aaa
mov
mov
add
cmpsl
js
adc
xor
xchg
add
jnp
stc
adc
movsb
imul
push
mov
inc
or
xchg
push
dec
inc
and
icebp
lcall
adc
mov
xchg
out
sahf
jns
pop
mov
inc
jmp
sub
outsb
movsb
hlt
iret
lock
sbbl
xchg
mov
flds
and
cmp
add
xchg
jo
scas
jae
sub
into
aas
mov
sub
pop
cmp
xor
cmp
inc
push
lods
lret
icebp
pushf
in
or
sarb
mov
cmp
stc
jbe
shll
test
push
inc
js
xchg
lods
repnz
aaa
jb
mov
pop
push
ja
sbb
into
ret
dec
mov
jns
out
mov
aam
lds
add
leave
lods
adc
clc
data16
pop
icebp
mov
pop
call
dec
pop
out
mov
or
mov
inc
cld
pop
ja
mov
cltd
iret
jle
add
movsl
mov
popa
popa
fidivl
in
in
aas
arpl
adc
sbb
movb
cli
mov
cmpsb
pop
iret
and
sbb
adc
stc
iret
dec
pop
jns
mov
mov
add
ljmp
sbb
les
adc
mov
ret
pop
add
daa
jmp
enter
push
insl
fucom
adc
repnz
lods
xor
jp
push
aaa
xor
loopne
or
push
idivl
ret
add
mov
add
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
jge
mov
xchg
movlps
js
mov
sbbl
xchg
mov
mov
pop
mov
movsl
sbb
push
out
lret
adc
jae
add
cld
iret
or
shll
mov
pop
shr
enter
adc
aad
es
push
int
pop
bnd
or
lcall
ja
insl
jg
dec
shlb
lock
inc
pop
filds
fcmovu
aaa
cmpl
out
aas
pop
sub
sbb
jae
lcall
outsl
push
lods
add
insl
out
dec
add
sub
or
lcall
mov
mov
outsl
xchg
push
aad
pushf
and
xchg
xor
sbb
mov
push
sbb
ret
add
dec
stc
push
adc
js
lea
cmpsb
cmp
cli
xor
push
in
and
or
test
jnp
xchg
adc
push
add
inc
adcb
jno
xchg
scas
mov
sbb
test
cmpsl
push
xchg
fcoml
lds
mov
xchg
and
dec
test
pop
test
aas
jbe
cmp
in
sub
pop
xor
xlat
mov
scas
or
std
shlb
add
div
mov
sbb
xchg
stos
aad
ss
mov
push
push
mov
adc
jle
cmp
mov
and
inc
mov
xchg
cmp
and
repz
mov
add
imul
xchg
and
test
fdivrs
fadds
test
jmp
mov
aad
dec
imul
mov
aad
punpcklwd
lds
inc
add
jbe
test
addr16
fcompl
and
push
std
cmp
ss
sub
mov
test
out
mov
loop
pushf
loope
adc
push
pushl
shl
xchg
jmp
cmpsb
sub
push
xor
pop
dec
lods
out
sub
nop
adc
and
shrl
jbe
inc
jecxz
xor
mov
insb
add
mov
lods
pushf
ljmp
fidivrs
lret
sub
popa
movsb
mov
mov
xor
fstpt
jnp
loope
and
add
mov
in
and
or
in
or
in
or
cmp
cmpsl
out
lret
sbbl
mov
pop
cmp
idivb
xor
cli
popf
jnp
cs
xchg
sbb
mov
xchg
inc
jbe
mov
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
or
adc
adc
sbb
sub
dec
js
sub
lods
js
scas
adc
add
shrl
movsl
or
jb
andb
pop
xchg
sahf
test
push
daa
sbb
add
push
fisttpll
inc
out
addl
xor
mov
jmp
push
xor
mov
add
push
imul
xchg
hlt
xor
mov
subl
and
adc
clc
and
out
pop
js
stc
adcb
aaa
nop
or
xor
lahf
insl
jle
test
testb
jge
lret
sub
cli
jnp
testl
andb
push
push
add
jp
and
cmp
or
shlb
or
cmp
sub
mov
jo
xchg
out
xor
pusha
jl
push
mov
inc
je
mov
and
add
xor
scas
ja
adc
mov
movsl
push
js
lds
sbb
jle
aam
stos
out
int
pop
into
insb
xchg
shll
sbb
aaa
icebp
mov
arpl
jle
or
cs
das
add
pushf
pop
dec
aam
ja
das
bound
xchg
pop
xchg
dec
inc
lock
adc
out
icebp
fwait
push
adc
sbb
mov
aad
lcall
sbb
les
jne
rcr
mov
icebp
rcl
test
or
daa
sbb
gs
push
arpl
hlt
fnstenv
sbb
shll
sti
and
jb
and
int3
pop
sahf
xor
push
repz
xlat
ja
mov
rcll
outsb
int3
aaa
push
inc
xor
jle
push
or
mov
inc
mov
xchg
jnp
add
cmp
fidivrs
push
push
jns
jg
ficoml
mov
adc
xchg
mov
cmp
mov
test
mov
ja
mov
cmpl
inc
add
inc
outsl
cmpsb
cmp
imul
inc
push
leave
inc
popf
jo
and
fists
repnz
push
adc
dec
pusha
xor
popa
or
or
mov
test
adc
sarl
rcl
aaa
in
arpl
mov
pop
sahf
push
adc
jge
clc
inc
fadd
movsb
pop
cmp
mov
int3
and
ljmp
jo
jge
push
sbb
jns
sarb
fsubs
sub
inc
pop
xor
pop
push
enter
stos
outsl
push
mov
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
repz
push
in
adc
out
and
push
fiaddl
sub
and
xchg
arpl
mov
andl
cmp
fst
cmpsb
aaa
fwait
test
xor
inc
arpl
pop
jle
xor
sahf
aas
cmpsb
mov
rcll
pop
xchg
add
or
fnstcw
fimull
mov
mov
xor
test
arpl
jp
hlt
jg
inc
adc
sub
sbb
sar
test
push
cmpsb
mov
sbb
jge
repz
xorl
pop
aaa
cmc
dec
and
pop
xor
jle
jecxz
lret
xchg
adc
sub
jne
ret
into
or
testb
add
sub
push
dec
nop
cli
jl
or
pop
lock
adc
inc
push
leave
clc
les
sub
inc
ds
add
test
imul
dec
dec
fildll
or
mov
and
ror
ljmp
fimuls
adc
js
fstpt
or
mov
lcall
mov
lods
or
rclb
mov
sbb
scas
inc
mov
pop
jno
or
lock
mov
sub
dec
jns
sarl
daa
inc
movsb
mov
das
pop
pop
xchg
lret
out
sbb
iret
cmp
jo
add
faddl
sub
xchg
clc
stos
into
push
sti
jne
rcrl
or
cmpsb
dec
pop
movsl
cmp
sub
bound
les
jmp
push
mov
adc
jnp
out
insl
fcmove
xchg
and
sahf
xchg
cmpsb
dec
dec
test
lret
hlt
sbb
adc
ror
mov
add
repz
aam
dec
inc
inc
xor
mov
fmuls
daa
dec
jns
stc
xchg
loopne
adcl
stos
imul
xor
pop
lock
mov
ljmp
push
xchg
inc
or
shlb
and
arpl
pop
jmp
inc
icebp
cmp
fnstsw
pop
cwtl
sub
mov
mov
andl
and
dec
shll
in
scas
out
insb
cltd
or
sbb
adc
call
es
fdivrl
adc
mov
dec
das
popf
sbb
shl
fisubrs
cli
xchg
dec
sub
pop
leave
and
adc
lods
enter
jg
lods
out
stc
xchg
aad
test
mov
mov
dec
fidivl
adc
mov
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
mov
loopne
adc
mov
loope
dec
repz
pop
scas
or
adcb
arpl
xchg
cmp
cwtl
dec
imul
push
and
sub
xorb
movsb
fs
jmp
fsubrs
push
adc
mov
arpl
fsubrs
dec
or
mov
jno
stc
lds
cmp
mov
jle
add
push
dec
sbb
or
popf
cmpsb
jl
mov
mov
push
dec
sti
sbb
bound
sub
repz
cmp
push
cmp
xchg
cmp
je
mov
test
fs
adcb
jbe
cld
xor
mov
cli
pop
mov
push
js
ljmp
jmp
das
add
ss
popa
in
loop
int
insb
xchg
int3
lods
test
lcall
pop
and
jno
inc
movsl
gs
sbb
sub
jmp
jle
or
hlt
sub
adc
xlat
stos
pop
pop
mov
xchg
sahf
push
fbstp
notb
fwait
inc
mov
out
pop
mov
mov
aaa
es
out
aas
xor
cmp
inc
loopne
aam
jle
insl
mov
jmp
test
push
pusha
or
pop
pop
xchg
lock
data16
xchg
push
ds
addr16
and
jno
lds
xchg
subl
fisttps
push
or
cmp
fstpt
outsl
sbbw
dec
inc
mov
push
rorb
pop
movsb
sub
mov
jno
test
and
mov
in
ss
call
adc
and
insl
inc
imul
lahf
cld
xchg
pop
cmpsb
aas
divb
int3
fildl
and
ret
sub
push
xchg
xor
rol
sti
shlb
lahf
sub
jo
insb
push
adc
test
jne
inc
rcrl
push
and
sbb
iret
cmp
dec
rcr
add
outsb
or
mov
stos
insb
mov
nop
push
sbb
notb
mov
divl
cmp
xchg
cmp
jp
jle
movsb
hlt
test
xor
out
mov
scas
adc
inc
popf
bound
inc
aad
in
xor
outsb
in
jle
mov
cwtl
mov
int
jg
jmp
push
mov
inc
lods
ss
daa
pusha
mov
mov
shrl
sbb
dec
xchg
adc
ja
out
pop
push
test
push
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
inc
lahf
xchg
stos
jmp
addr16
outsl
and
test
jecxz
je
xchg
cld
pop
lret
cmc
stos
outsb
call
sbb
xor
push
enter
mov
mov
movsl
add
popf
insb
imul
jp
cmp
popf
jecxz
test
icebp
push
sti
adc
mov
xchg
leave
loopne
sahf
or
and
leave
sbb
cmp
adc
insb
jnp
outsb
dec
inc
cmp
mov
cmpsl
xor
xchg
pop
mov
jmp
fwait
insl
test
lret
popf
aas
leave
pop
mov
rclb
and
cmp
addr16
adc
cmc
mov
sub
xor
lock
xchg
stos
ror
iret
rcr
fsubl
lods
mov
dec
pop
mov
cmp
and
repz
stos
add
fs
fidivs
fcoms
mov
inc
in
lret
inc
sbb
pop
sbb
clc
out
bound
bound
mov
xchg
sti
or
xor
les
mov
push
jle
and
and
mov
jbe
cmp
shll
xchg
out
mov
dec
pop
fwait
or
rcll
les
fldcw
jl
fdivp
scas
loopne
push
test
adc
inc
pop
mov
cmc
pop
sub
xchg
xor
sbb
xchg
pusha
or
std
xor
sub
dec
or
xchg
into
insb
addr16
pop
mov
fmuls
int3
add
sub
call
push
test
subb
push
aad
orl
and
outsl
mov
out
sbb
xchg
in
dec
pop
push
jo
cmp
xor
inc
imul
cmpsb
test
js
or
add
lcall
adc
pusha
out
jl
int3
cltd
lea
xchg
ja
or
ljmp
ja
rcrb
clc
incb
add
or
adc
sub
test
xchg
mov
jns
add
pop
pop
test
inc
je
in
outsb
popa
pop
mov
shll
in
scas
and
aam
jmp
adc
movb
or
mov
adc
arpl
inc
jg
data16
div
lret
mov
push
ss
loop
or
xchg
sub
scas
cld
fidivrs
dec
lea
adc
mov
repnz
popa
sub
repnz
ret
je
adc
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
mov
aam
adc
dec
repnz
out
mov
inc
outsl
push
ljmp
lret
inc
push
jae
pop
or
xor
lcall
repnz
mov
jo
adc
mov
lret
add
cmp
sbb
fcmovu
pop
adc
jae
movsb
in
inc
rcll
ror
in
sbb
push
jg
adc
pushf
push
in
ljmp
nop
push
cmp
jp
mov
or
xor
xchg
insl
or
loopne
mov
mov
notl
xchg
mov
cmp
je
cli
nop
filds
mov
in
sbb
aam
stc
int3
adc
dec
push
push
daa
add
enter
jo
mov
jmp
rcll
lods
das
loop
pushf
cmpsb
shll
or
pusha
in
std
sbb
pop
add
pop
orl
rclb
mov
test
aas
mov
add
push
cld
fdivrp
push
ss
sub
ret
push
lock
hlt
ja
inc
idivb
lahf
rclb
test
fdivr
lret
sbb
push
call
mov
ret
sub
adc
lock
cmp
and
cmpsb
mov
push
sti
jp
and
sbb
in
or
repnz
mov
loope
mov
or
dec
sarb
sahf
xor
call
or
aam
enter
mov
mov
xchg
pop
sub
jae
daa
fildll
jns
ljmp
inc
sub
sti
sub
mov
sbbb
mov
fwait
inc
fsubs
mov
mov
pusha
xchg
loopne
dec
jl
aad
xor
jle
int
lahf
pushf
and
xchg
push
and
mov
sbb
movsb
out
mov
xor
ljmp
xchg
adc
aad
lock
mov
les
jg
pop
xorb
popa
lock
insl
jmp
outsl
clc
jnp
in
in
ret
pop
jg
push
test
addr16
jg
imul
jg
pushl
cltd
out
repz
out
arpl
or
pop
std
rcrb
dec
loop
pusha
in
clc
test
jmp
adc
pop
jae
mov
mov
shll
xor
add
aaa
xchg
arpl
int
inc
mov
inc
xchg
scas
xchg
loope
or
enter
push
and
or
popf
imul
aam
mov
mov
inc
clc
jae
int3
push
imul
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
js
jae
inc
cmp
inc
and
mov
adc
sub
push
add
inc
les
ret
pop
stos
sti
fistpl
add
xor
inc
mov
push
imul
add
test
xchg
orl
fisttpll
sbb
fdivl
push
or
dec
out
xchg
pushf
scas
movsb
jae
adc
add
inc
sahf
rcrb
sub
mov
loop
aad
ja
test
mov
aaa
cmp
stos
mov
jno
dec
stc
push
and
jmp
fimull
mov
es
gs
sar
mov
sub
in
fiaddl
push
sbb
aad
jge
inc
into
mov
int
aas
scas
pop
sbb
testb
xchg
call
imul
cmc
outsb
cwtl
test
dec
pop
inc
fs
jns
shlb
mov
jge
cmp
into
xchg
push
js
add
mov
xchg
adc
mov
sbb
divb
jp
fstpl
sbb
ret
or
fimull
or
xor
mov
adc
cmc
and
and
insl
ss
mov
or
clc
int
lret
push
aaa
dec
into
mov
dec
psadbw
mov
and
push
mov
sub
ja
je
inc
pop
popf
inc
push
mov
xchg
xchg
adc
and
scas
push
mov
cmp
or
pop
mov
fnsave
dec
jl
or
pop
aaa
jbe
ljmp
xchg
das
int
stc
out
mov
mov
mov
dec
ss
pop
lods
lods
inc
je
xchg
cld
std
mov
insl
stc
in
pop
clc
mov
mov
call
xor
sub
popa
mov
jg
orb
mov
pop
adc
insl
mov
jp
insb
je
aas
mov
cmpsl
push
push
xor
mov
mov
lret
icebp
into
adc
inc
je
add
incl
add
call
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
movsb
lret
into
adc
adc
outsb
jns
movsb
or
mov
mov
cmpsl
push
inc
mov
pushf
mov
sub
dec
and
dec
ret
dec
in
cmpsb
add
xor
inc
ret
cmpsb
out
mov
mov
das
daa
adcl
sti
cld
rclb
fisttpl
pop
mov
mov
icebp
xchg
push
iret
mov
mov
dec
xchg
mov
nop
int3
pop
xchg
ljmp
jo
jns
pop
cmp
das
add
loope
dec
insb
pop
add
jo
cli
mov
push
popf
test
push
in
imul
shr
push
mov
gs
xchg
in
jno
fdivs
jo
in
xlat
movsb
or
je
dec
dec
xchg
xchg
ret
add
mov
xchg
add
inc
add
xchg
lock
nop
es
cltd
sub
rcl
leave
jecxz
jnp
loopne
ja
gs
movsb
fprem
jecxz
sub
and
movsb
fmulp
sub
xchg
or
add
and
push
lea
lods
popf
sarb
lods
and
imul
enter
fldenv
lret
or
cli
xchg
inc
adcl
mov
out
push
jmp
cld
fstpl
and
inc
pop
xchg
jge
cmp
scas
or
adc
add
push
push
das
mov
aas
fdivr
rcrl
jne
insl
popl
push
fbld
out
sub
push
jns
jmp
add
pop
arpl
loopne
roll
lcall
shlb
out
jae
leave
leave
mov
xlat
mov
push
cmp
xchg
repnz
js
cltd
in
adc
dec
sub
lret
push
mov
xor
jae
jae
addr16
imul
repz
arpl
add
mov
lahf
clc
test
jg
data16
inc
mov
iret
sbb
data16
or
fs
dec
fisubl
stc
dec
lcall
cwtl
add
mov
or
shll
test
inc
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
in
push
push
lret
enter
sbb
iret
ret
sarl
rcrl
incb
cltd
jl
cs
pushf
ja
jno
mov
or
mov
sbb
cmpsl
xor
nop
icebp
cmp
jns
jo
xchg
icebp
mov
and
mov
sbb
cwtl
add
pop
xor
pop
hlt
popa
shlb
iret
jae
mov
imul
cmp
xchg
pop
dec
pop
insl
cs
xchg
out
inc
dec
mulb
lea
push
dec
or
cmpsl
mov
add
mov
mov
jo
out
jmp
push
xchg
mov
fnstenv
test
add
jmp
fdivs
pop
mov
nop
cmp
mov
mov
stos
sub
sub
rolb
jg
cltd
xorl
bound
and
mov
pop
add
jle
mov
sub
int
lret
dec
or
jnp
mov
or
pop
inc
in
insl
fwait
nop
mov
cld
xchg
gs
repnz
xor
adc
fnstsw
jp
jno
scas
fmull
push
sbb
mov
repnz
mov
in
xchg
inc
mov
frstor
jae
ret
or
stos
stc
pop
xchg
cmp
shl
mov
dec
imul
pusha
aad
test
enter
icebp
loop
mov
jl
dec
jg
movsb
js
mov
stos
int3
or
cmp
jmp
out
adcl
adc
sub
sbb
adcl
pop
mov
xchg
pop
das
test
lcall
test
mov
out
xor
push
lret
gs
mov
xchg
mov
mov
xchg
aas
sbb
jo
jecxz
and
cmp
inc
dec
xchg
jg
dec
sub
mov
xchg
imul
pop
xor
sub
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
push
mov
enter
pop
xchg
stc
call
mov
push
repz
jecxz
pop
js
mov
xor
int3
loop
jnp
add
xor
or
cmp
xchg
data16
sbb
mov
lds
mov
adc
dec
ret
imul
in
dec
mov
mov
fbstp
lcall
mov
or
or
lcall
repz
insb
repz
xchg
psubq
jno
mov
sub
jb
mov
imul
mov
or
adc
jl
or
ljmp
adc
rolb
push
mov
sbb
add
sbb
outsb
bound
shlb
mov
push
lret
gs
inc
xor
fistps
push
push
jbe
and
mov
push
xor
dec
and
xchg
aam
push
push
mov
imul
daa
loopne
jno
data16
mov
mov
test
inc
fwait
pusha
ljmp
repnz
cmpsl
xchg
or
push
enter
inc
ret
fldenv
sub
stc
lea
in
lret
pop
aaa
lock
imul
adc
lahf
test
shrl
push
cmp
lcall
push
mov
jge
jge
pop
sub
ds
jne
test
mov
fwait
lods
push
xchg
dec
push
subl
mov
aaa
mov
orb
enter
add
lcall
inc
push
movsb
out
dec
aas
pop
es
daa
adc
inc
out
lods
jno
push
les
ds
shrl
lods
inc
add
rcrl
cmp
or
inc
sub
inc
repnz
ffree
dec
jo
xchg
xor
clc
bound
push
sti
out
dec
or
or
repz
loope
aas
and
scas
push
ffree
jnp
leave
aaa
jnp
xlat
lods
sbb
xor
mov
les
inc
lcall
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
add
jle
ret
enter
jb
nop
out
sbb
mov
pusha
cmpb
in
das
pop
xchg
adc
mov
mov
leave
scas
mov
cmc
cmp
pop
les
pusha
pop
mov
sub
and
xor
xor
cmpl
push
mov
pop
xor
adc
xchg
lret
outsl
xchg
jmp
movsl
pushf
inc
imul
cmp
cmc
test
xchg
bound
repnz
or
jbe
sahf
test
data16
cltd
and
jae
int
or
dec
mov
pop
mov
out
loopne
cmp
mov
add
mov
adc
inc
loop
lret
xchg
add
pop
aaa
add
push
mov
mov
add
jl
in
mov
xchg
jmp
jge
mov
popa
jae
mov
jge
pop
out
jo
mov
or
mov
cmp
inc
loope
xchg
repz
cmpl
dec
out
cwtl
push
fstps
iret
inc
xorl
pop
or
test
movsl
cmpsl
lret
fcom
jle
popa
enter
add
insl
cmp
sbb
iret
nop
pushl
lock
scas
popf
movsb
cmp
jnp
sbb
jnp
mov
leave
dec
cs
loopne
xchg
dec
adc
hlt
add
out
in
push
mov
cmp
iret
xchg
pop
cmc
pop
mov
cmpsl
movsb
and
cs
imul
mov
and
negb
pop
shll
cmpsb
sub
adc
arpl
xchg
shl
addb
sbb
inc
pop
add
cs
sbb
cld
push
dec
jo
sbb
push
pop
cmc
pushf
imul
dec
xchg
adc
nop
sbb
fcmovnu
mov
jae
or
dec
mov
leave
out
pop
stos
loop
mov
out
mov
clc
xor
pop
cmp
push
cmp
lret
jl
repnz
repz
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
rcrl
mov
adc
mov
add
and
lods
xor
pusha
sar
shll
popa
pop
xchg
jb
outsb
fs
int
push
sti
mov
fucom
movsl
das
fcomi
add
inc
xor
fiaddl
mov
cmp
inc
lds
setb
sbb
je
orb
jnp
mov
jmp
mov
ja
sti
and
fisttps
mov
mov
gs
sarb
cmp
pop
fmull
push
pop
rorb
out
insb
gs
xor
ljmp
scas
cwtl
adc
lods
fs
mov
fists
mov
pop
leave
jnp
jl
or
fnstcw
sbb
add
cs
es
cmp
jmp
pop
clc
xchg
das
mov
imul
cli
in
popf
mov
in
fcmovbe
inc
out
out
test
cmp
mov
cmp
dec
adcl
jnp
xchg
pop
hlt
lret
mov
or
and
pop
mov
fbld
sub
lods
push
imul
aaa
inc
mov
pop
mov
mov
push
call
dec
out
test
data16
shlb
inc
or
loope
xor
mov
fldt
ljmp
ljmp
xor
xor
xor
sub
and
jg
daa
mov
sub
dec
repz
repz
cmp
repnz
add
pop
sarb
js
pushf
xchg
cwtl
dec
mov
push
into
jae
sub
ljmp
movsl
and
mov
ljmp
mov
dec
sbb
push
sahf
jmp
pop
pop
shll
xor
sub
cmp
daa
shrl
jmp
icebp
xchg
sahf
pop
imul
popf
xchg
push
sub
incl
testb
adc
test
cltd
out
add
mov
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
ss
xor
adc
xchg
mov
xchg
cmpsb
cmc
loop
aad
and
rcrb
mov
sti
and
repz
jne
in
scas
push
es
lods
push
outsl
mov
js
pop
mov
jnp
bound
xchg
sti
jo
cwtl
loope
leave
mov
mov
lds
push
push
fnstenv
cmp
in
ret
sarl
repnz
rclb
push
ds
mov
fadd
sahf
sbb
sbb
xor
bound
push
mov
sbb
dec
push
or
gs
insl
mov
sti
rorl
mov
push
lahf
scas
jle
sub
or
adc
mov
stc
or
int
stos
cwtd
jmp
aam
push
in
pushf
aaa
data16
scas
es
push
dec
js
stos
xor
xchg
mov
push
iret
xchg
inc
push
xchg
icebp
xor
fnsave
nop
fiadds
dec
lret
inc
aam
dec
cmpsb
int
sub
dec
cmp
push
mov
lods
mov
xchg
aas
rcl
test
mov
cmp
jbe
mov
in
repz
stos
flds
pop
mov
xchg
stc
pop
or
ret
loopne
adc
adc
fisubrs
fnstsw
pop
arpl
add
pusha
mov
xor
in
outsb
sbbb
clc
in
jnp
or
mov
int
rcll
scas
or
scas
inc
xchg
pop
sub
cs
push
cmpb
lea
and
mov
sar
sub
pop
push
insb
xor
dec
sub
out
push
dec
pop
outsl
fisubrl
fcoms
aas
add
pop
cwtl
arpl
aad
mov
out
and
adc
mov
roll
sbb
mov
out
pop
lods
jae
add
inc
icebp
fidivrl
and
cwtl
adc
test
mov
push
testl
lret
add
shr
and
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
enter
jns
jmp
aam
dec
sbb
push
or
insl
popf
xchg
fcoms
notl
jmp
sub
xor
lods
out
xchg
xchg
shll
stos
mov
push
jl
mov
cld
lock
in
lret
dec
fistpll
xor
lahf
jle
clc
cmp
imul
or
test
lret
mov
add
fs
daa
fstps
push
sbbl
sbb
xchg
addr16
xor
dec
mov
pop
ret
xchg
jmp
cmpsl
popf
xchg
fisttpl
sbb
ja
xor
xor
ror
mov
enter
dec
jp
jg
and
xchg
mov
dec
enter
inc
sarb
rclb
popf
popa
inc
hlt
outsb
aas
outsb
pop
bound
xchg
jno
or
pushf
call
pop
repz
adcl
lahf
dec
inc
lret
sbb
bound
mov
and
in
stc
add
jne
and
mov
js
push
fs
xor
ret
adc
cmp
mov
dec
dec
fistpll
data16
aad
sbb
mov
psubsw
movsl
adc
ljmp
xor
mov
rol
cld
andl
int
jno
sub
dec
pop
stos
sub
ss
sbb
mov
pushf
adc
push
shll
xchg
xlat
or
adc
xchg
mov
jns
jno
cwtl
and
adc
xchg
fs
mov
mov
pop
add
fwait
int
xchg
imul
pop
es
popf
mov
into
xorb
cmp
sbb
stc
mov
mov
cmp
lahf
scas
cli
mov
adc
push
pop
stos
fiaddl
sub
or
daa
test
imul
jae
jmp
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
flds
adc
adc
mov
add
stc
lahf
rcr
sbb
outsl
add
sbb
xorb
adc
xor
pop
mov
push
xchg
flds
cmpl
or
adc
mov
out
pop
dec
ror
mov
push
in
js
insl
loop
cmpsb
or
cmp
dec
scas
test
icebp
test
popa
or
push
insb
xor
lcall
dec
loopne
xor
dec
adc
pusha
pop
test
inc
popa
cmp
mov
imul
mov
data16
pusha
sbb
mov
jmp
jge
jg
enter
aaa
mov
fcoms
and
or
movsb
inc
ret
push
lret
leave
pop
negl
pop
popa
jbe
scas
sbb
and
mov
lahf
mov
xor
mov
fstps
adc
ret
shrl
inc
ret
inc
je
jg
xchg
mov
inc
pop
lcall
popl
jns
jecxz
and
aaa
sbb
jne
sub
repz
and
jbe
ffree
shr
je
aad
inc
jl
xchg
xor
ret
test
jno
xchg
leave
push
sti
aaa
dec
shlb
push
in
call
rol
sbb
lret
inc
mov
mov
rolb
inc
sahf
sahf
or
cmp
mov
ljmp
sbb
jo
mov
cld
jmp
mov
mov
repnz
or
jg
psadbw
roll
inc
cs
push
jae
push
xchg
push
les
inc
mov
push
fcmovb
jecxz
mov
bound
in
enter
sub
push
jns
shrl
jae
add
das
sub
mov
daa
cmpsb
and
pushf
icebp
jge
push
mov
out
cmp
sbb
xor
cs
jmp
hlt
stos
inc
push
mov
mov
xchg
push
nop
test
mov
cmpsb
jns
fimuls
fwait
shrb
lahf
xchg
scas
adc
test
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
mov
test
adc
movlps
xor
pop
add
mov
mov
mov
dec
std
pop
cmp
add
rorb
repz
das
xlat
add
push
mov
pop
mov
lret
dec
test
movsb
scas
loop
pop
sub
mov
push
pop
push
cmp
rorb
loopne
lea
add
aad
aas
xchg
fs
mov
test
dec
jge
xchg
mov
sbb
cmpb
icebp
or
sub
js
outsb
imul
hlt
pop
aas
jns
jnp
dec
mov
pop
inc
iret
cs
mov
loop
and
aam
jno
rorl
nop
dec
jbe
mov
lahf
mov
idiv
pop
mov
dec
or
sub
loopne
jns
push
mov
enter
inc
xor
repz
mov
or
jne
gs
adc
ds
sbb
adc
sahf
push
enter
maxps
fs
cmpb
int
dec
lcall
pop
lret
bound
cmp
sbb
sub
push
push
mov
icebp
jae
or
aas
daa
or
mov
push
mov
jno
scas
push
lahf
sub
push
adc
pusha
lret
mov
decb
js
mov
cmp
pusha
cmp
jmp
test
movsl
into
cmpsl
cmp
pop
mov
jns
rcl
inc
push
pop
pop
testb
shll
sbb
lods
mov
cs
pop
xchg
seto
dec
lret
jmp
mov
inc
ret
xor
sub
loop
dec
lods
cli
negb
cs
into
cmp
mov
aad
mov
xchg
dec
or
jnp
aam
mov
iret
mov
mov
pop
cs
nop
int
cmp
nop
jg
push
pop
add
lods
mov
cld
jae
mov
scas
adc
mov
fsubrl
sbb
jo
jp
add
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
lods
enter
adc
adc
jp
xor
or
sti
or
mov
jg
lods
sbb
out
xchg
cmpl
sahf
rclb
mov
cmp
inc
push
arpl
arpl
daa
add
mov
push
push
ret
or
jb
in
xchg
mov
shlb
pusha
mov
xlat
mov
or
or
scas
iret
daa
push
xchg
shl
xor
jle
inc
mov
outsl
fdiv
push
inc
sbbl
gs
xor
test
aam
int3
jbe
sub
dec
repnz
daa
xchg
or
jl
add
mov
stos
xor
cmp
dec
xchg
cmp
or
mov
push
stos
mov
cmpsb
insl
imul
xchg
stos
mov
cs
xchg
xchg
ljmp
adc
andb
sub
inc
adc
sarb
or
pop
lds
lcall
outsb
aam
fdivrs
jmp
fwait
in
fdivrs
aaa
and
mov
in
insb
dec
xchg
dec
mov
xor
lret
push
sub
cmpsb
mov
inc
scas
pop
cs
bound
sub
nop
xchg
xchg
sbb
leave
into
jb
adc
cmpb
and
out
mov
xchg
xchg
inc
inc
js
mov
sahf
jb
add
fwait
dec
mov
lods
cli
aas
cli
jmp
loop
add
faddp
xchg
cmp
jmp
or
jno
daa
fldenv
dec
and
scas
ja
arpl
add
xor
out
and
das
xchg
jbe
mov
xchg
adc
mov
mov
cwtl
sbb
dec
shrb
loope
push
xchg
pop
push
fprem
test
push
fldcw
and
shl
mov
jle
pop
sbb
sbb
out
or
enter
dec
adc
outsl
fnstenv
mov
pop
sbb
je
call
loopne
sbb
movl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
aaa
idivl
mov
adc
adc
jge
xchg
dec
cltd
mov
xchg
ret
lods
idiv
stc
addr16
fcoml
gs
outsl
cli
fldl
imulb
nop
xor
fidivrs
in
and
sbb
fs
push
xlat
out
push
cmp
xlat
jmp
push
test
mov
mov
push
jo
add
in
fmull
ret
test
cltd
xor
inc
mov
pop
push
xor
int3
dec
iret
mov
sub
cmp
sbb
sti
js
imul
push
push
shlb
aaa
aas
pop
out
jle
sahf
and
gs
jnp
push
push
and
pop
divps
subb
xor
sbb
push
mov
xor
gs
sti
adc
mov
adc
clc
mov
lods
add
clc
test
bound
insb
adc
ret
push
rolb
lret
stos
ds
pushf
xor
pop
rcl
arpl
loopne
inc
push
icebp
push
cmp
add
adc
loop
jmp
repz
lds
sub
sub
fwait
push
roll
rol
lock
push
and
aas
sub
push
pop
xchg
push
mov
insl
push
repz
add
dec
mov
stos
cs
xchg
fs
jmp
jo
fsubl
xchg
push
or
lea
andl
dec
pop
add
push
in
shll
fwait
rclb
pusha
sbb
nop
mov
jg
pop
popa
push
divl
pop
pop
nop
xor
jno
iret
fstpl
jmp
mov
jae
pusha
movsl
fistl
dec
sbb
daa
xor
repnz
mov
pop
enter
and
cmpsb
mov
mov
xchg
jg
xlat
lods
push
fcomi
dec
fs
out
mov
mov
aad
pop
mov
xlat
mov
add
jno
sarl
inc
push
cltd
sub
xchg
fwait
out
push
xchg
push
std
inc
push
sti
repz
loopne
int3
out
xchg
pop
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
mov
enter
rcl
loopne
push
push
and
mov
dec
mov
mov
xor
dec
cli
adc
pop
rolw
sbb
add
notb
cmp
imul
or
and
jge
cld
rclb
sbb
mov
js
push
dec
mov
sbbl
dec
je
xor
push
test
cmpsb
out
mov
lea
outsl
gs
cmp
or
xor
mov
push
or
sti
mov
pusha
mov
fs
add
fiaddl
movsb
or
imul
lcall
xchg
sub
mov
jecxz
mov
dec
jecxz
je
inc
xchg
rcr
dec
adc
pop
iret
xchg
xor
sub
cmpsb
iret
cmp
inc
adc
gs
das
or
add
and
xchg
cltd
je
inc
xor
popa
in
arpl
lock
lahf
out
sbb
sub
lret
enter
and
inc
jo
movsb
movsl
and
sub
enter
mov
andb
orb
hlt
sahf
jne
xor
jg
pop
pushf
pop
and
adc
push
loopne
jle
mov
cltd
dec
and
or
imul
iret
popa
bound
insl
sbb
jmp
cmp
mov
mov
aam
dec
into
add
rolb
sbb
xchg
cmpsb
dec
ret
ds
mov
xchg
ljmp
lret
xor
push
lcall
cmpl
jns
mov
dec
insl
and
xor
mov
mov
xchg
lret
iret
sbb
xor
or
std
or
push
sbb
cwtl
icebp
call
jne
mov
pop
push
insl
not
aas
adc
enter
mov
xlat
lods
inc
les
xor
inc
aam
outsl
mov
outsl
sub
adc
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
mov
enter
imul
aad
std
aam
int3
imul
lcall
aas
movsb
jmp
or
push
jnp
or
jbe
cli
mov
xlat
mov
xchg
cli
pop
push
shlb
adc
push
lods
xchg
mov
insb
out
cli
jne
jl
xchg
aaa
testw
cwtl
xchg
pop
inc
ret
xor
leave
pusha
int3
jp
sbb
popf
ret
cld
test
imul
fwait
mov
pop
add
inc
in
mov
nop
mov
shl
mov
aam
insb
mov
fistpl
mov
jle
xchg
in
xchg
pop
sti
lret
roll
sub
out
pushf
ret
lahf
pop
out
pushfw
insl
mov
jo
cmpsb
loope
call
test
rol
adc
std
lods
xorl
in
jge
dec
lea
xlat
lahf
pop
xchg
out
push
sub
sbb
leave
arpl
mov
leave
ds
fs
inc
sub
jne
mov
icebp
xchg
test
jp
incl
xchg
and
fldenv
push
stos
lret
xchg
ss
xchg
sarl
xorb
das
ret
xchg
rorl
cld
xor
lcall
in
rcr
xchg
mov
cmpsb
mov
lods
out
cmpsl
push
push
push
lock
fwait
popf
lods
mov
jb
test
and
pop
lahf
or
xchg
cmp
push
daa
int
mov
inc
or
scas
pop
in
into
push
outsb
cmpsl
mov
mov
inc
push
jmp
push
xor
mov
sbb
je
xor
inc
pushl
mov
cmp
jbe
cmp
mov
rcr
idivl
dec
rorb
into
pusha
sbb
pop
xchg
sbb
push
ret
insl
std
or
js
xchg
lcall
int3
and
jb
movsb
inc
lcall
mov
mov
mov
dec
pop
cmpsl
mov
loop
pop
add
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
sbb
adc
movlps
mov
loopne
pop
ds
orl
hlt
aam
popa
scas
ds
cmpsl
sbb
fistl
ljmp
sub
imul
push
out
shl
rorl
les
xchg
ja
insl
inc
std
fcom
and
mov
xchg
arpl
sysenter
dec
or
mov
incb
ljmp
adc
out
shlb
mov
pushf
adc
scas
sahf
add
inc
lods
add
push
lcall
adc
inc
test
jno
sub
daa
xor
jge
ss
cmp
sahf
add
insb
icebp
jmp
cmpl
mov
call
adc
xor
cmpsb
stos
mov
repz
xchg
insb
push
xor
and
stc
shr
inc
xchg
xlat
push
inc
pop
into
mov
idivl
push
sub
cwtl
ret
fsubs
inc
fisubl
fwait
shr
mov
lods
mov
jno
out
fcoml
in
mov
loope
adc
adc
pop
dec
les
sub
mov
out
les
inc
mov
cltd
mov
fbld
outsb
scas
pop
adc
xor
xchg
mov
xchg
pop
push
or
test
xchg
popf
ss
jg
aas
pushf
in
int
sti
scas
jecxz
push
or
mov
inc
mov
push
cmp
inc
fs
popa
loop
inc
jmp
std
jge
cltd
fdivrs
mov
xchg
ja
jne,pn
mov
movsl
stos
lock
loop
sti
mov
add
jle
or
rcrb
and
and
pop
sahf
arpl
scas
sub
ja
lret
call
rcrl
imul
pop
pop
adc
daa
lcall
hlt
mov
dec
insl
loope
out
lea
push
insb
push
jp
pop
dec
dec
mov
repnz
fs
xchg
lcall
hlt
lea
pop
test
adc
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
loop
stos
xchg
adc
push
daa
mov
mov
repnz
repz
mov
call
stos
jp
mov
push
mov
pop
xchg
push
xchg
mov
outsb
or
jl
dec
ret
popa
in
pop
mov
imul
int3
inc
aaa
xchg
jno
or
jle
dec
cmp
in
insl
and
mov
add
push
popf
cmp
jno
push
mov
sub
lods
and
cmp
mov
lret
movsl
pop
inc
lahf
shlb
lcall
jo
popa
fs
pop
xlat
jg
mov
inc
push
cmp
and
in
push
sub
push
dec
stc
xor
cmp
imul
mov
lock
inc
out
jle
daa
aaa
adc
cmpsb
mov
inc
rcrb
scas
iret
add
jl
lds
mov
jns
insb
hlt
gs
jns
in
lret
cltd
xchg
loop
fsubs
jge
mov
sbb
jno
or
enter
imul
add
jle
fiadds
scas
xchg
testl
mov
outsb
sbb
sub
rclb
cs
mov
cmp
xor
mov
das
cmpsl
aas
jo
insb
sahf
sahf
dec
pop
test
mov
jne
jge
idivb
out
ficompl
mov
cs
dec
frstor
out
addr16
cli
dec
pop
jno
or
dec
and
sub
add
pop
lods
cld
adc
push
xchg
add
sub
jle
push
cwtl
and
test
cmp
cld
jne
sbb
es
sub
add
sbb
add
sbbl
pop
mov
pop
pusha
xchg
push
mov
fists
lret
dec
lods
push
add
mov
rcrb
sbb
xlat
dec
jecxz,pn
mov
inc
mov
dec
xchg
jge
lds
mov
pop
lods
movsb
daa
nop
or
lds
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
add
adc
adc
cmpsb
and
push
nop
cmpsl
lret
cmp
mov
mov
cmp
mov
push
jnp
jle
jmp
sbb
push
int3
mov
in
movsb
xchg
loop
flds
mov
xchg
or
cmp
or
dec
fcoms
jge
add
xchg
imulb
mov
lock
dec
push
sbb
cmp
insl
sub
cmp
lock
into
das
das
andb
shl
jo
push
inc
sub
jnp
push
push
mov
and
jae
mov
in
mov
mov
mov
imul
jl
add
sarl
repnz
inc
cwtl
dec
mov
scas
ds
sbb
xor
les
jae
and
inc
ja
test
mov
adc
jp
clc
pop
or
jge
xor
xchg
mov
rcl
mov
loope
push
jp
mov
stc
sbb
stos
pop
mov
ret
push
sti
jbe
out
mov
sbb
adc
mov
addl
jnp
mov
pop
mov
roll
not
loop
sub
filds
ss
int
ret
adc
out
sbb
sub
ret
bound
sbb
mov
or
sub
pop
cmpsb
sbb
xor
cmp
cld
jno
subb
push
ljmp
sahf
fnstcw
pop
and
cmp
in
xor
adc
rclb
cli
imul
adc
pop
pushf
jle
jg
in
sub
icebp
adc
mov
js
inc
pusha
fsubs
sub
arpl
xlat
push
xorl
add
in
out
repz
fisubs
daa
dec
cmpsl
adc
into
jl
cmpsb
or
cmpsl
aas
fs
sub
pop
adc
xchg
inc
pop
sbb
mov
out
xchg
leave
cmp
push
add
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
lcall
cs
lea
push
jl
adc
cmp
push
cmp
push
mov
push
insl
in
jne
adc
jg
dec
adc
out
jl
add
stc
icebp
fdiv
loop
mov
nop
sbb
es
repz
and
cmp
testb
push
scas
push
pop
shrb
dec
in
repz
scas
scas
or
ror
pop
cvtps2pi
decb
into
sbb
xchg
xchg
and
sbb
jns
adc
mov
dec
inc
cmove
push
cmp
movsb
push
add
adc
mov
fwait
test
daa
sahf
insl
cld
rcrl
and
xchg
incb
sub
dec
mov
add
jne
mov
mov
loopne
test
notb
jb
stos
mov
call
leave
aad
out
out
jbe
and
inc
popf
sbb
xor
push
cmp
mov
add
mov
or
dec
sbb
pop
mov
mov
dec
mov
add
shrb
or
push
imul
out
shl
cmc
in
jp
add
push
inc
lock
outsl
daa
pop
mov
test
push
jle
ljmp
ficompl
imulb
stc
int
mov
jb
imul
jno
js
pop
loop
xor
dec
xchg
in
xor
cmp
in
jae
xchg
sub
decl
cmp
sub
pop
popf
andb
out
sti
rcll
cmp
sahf
mov
sbb
aad
loope
mov
push
stc
cmp
bsr
push
lods
pop
sbb
and
repnz
push
sub
testl
push
mov
jp
xor
jecxz
js
int3
and
rcl
popf
or
inc
call
aam
xor
mov
aas
push
sub
ds
xchg
into
stc
test
pop
mov
xor
fldcw
repz
mov
lret
jo
jp
mov
pop
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
fmuls
insb
mov
movlps
dec
call
or
into
cmp
cwtl
sbb
adc
fidivrl
scas
mov
jbe
int3
push
jecxz
das
in
xor
jo
scas
pop
cltd
dec
or
repnz
sbb
stos
push
push
negb
sbb
push
and
push
adc
push
push
mov
cli
xchg
xlat
xor
and
add
imul
loop
sbb
loope
adc
dec
fisubrs
aad
cmp
aaa
lds
cmp
imulb
ds
push
std
enter
aaa
bound
mov
fisttps
push
push
mov
xchg
dec
mov
cmpsb
sbb
aad
in
xchg
aad
and
jae
js
sti
mov
add
out
mov
xchg
scas
shll
sub
les
cmp
ljmp
lock
cmp
pop
adc
ret
fldcw
cmp
sub
push
lea
add
movl
and
dec
add
add
dec
popf
adc
xor
sbb
pop
imul
daa
popf
pop
in
cld
cli
xlat
jecxz
inc
mov
adc
hlt
insb
cli
sub
in
and
js
mov
mov
stos
and
inc
jb
lret
ljmp
ss
je
adc
je
push
pusha
sbb
mov
push
fidivl
les
xchg
sbbl
std
inc
outsb
pop
incb
xorl
aas
out
jmp
ret
and
inc
push
mov
out
pushf
sub
jo
fmull
jmp
clc
mov
inc
enter
cmp
pushf
mov
in
mov
and
jae
pusha
dec
xchg
inc
jmp
lahf
movsb
scas
xchg
adc
cli
inc
clts
cs
sbb
movsb
sub
jmp
ljmp
leave
testb
test
std
outsb
out
lods
inc
or
sbb
rcrb
pop
push
adc
daa
push
imul
insb
xorl
pop
punpckhdq
adc
int3
push
ds
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
jecxz
mov
enter
push
adcb
popa
sbb
pop
in
fldcw
cs
out
sub
add
cmpsl
lds
sub
or
inc
pop
js
or
mov
cmp
lcall
je
xchg
fwait
sti
xchg
sbb
int
in
push
or
fcmovb
rcr
jl
and
mov
hlt
test
dec
movsl
add
mov
test
cwtl
add
cmp
and
push
imul
cld
pop
test
test
sahf
dec
dec
out
pushf
cmp
ss
imul
out
cpuid
ret
hlt
xor
pop
mov
mov
mov
xor
and
sub
mov
pop
mov
pop
in
dec
sbb
cmp
cmp
adc
inc
shll
jmp
fs
push
fsubrl
push
ret
pop
fstpt
rorb
sbb
adc
mov
fisttpll
daa
test
inc
outsl
pop
pop
call
or
call
int3
push
mov
movsb
jge
daa
push
mov
ficoms
fcomps
cmp
sub
cwtl
mov
scas
fisttps
xor
dec
clc
mov
jmp
lahf
lds
ret
add
mov
test
or
pop
loopne
iret
pushf
xor
cltd
ds
push
sub
xchg
dec
and
in
pop
aam
loopne
xor
push
adc
sub
and
cmpsb
orl
andl
and
push
ds
mov
push
push
adc
js
je
push
popf
pop
xor
cli
movsl
loop
cmp
mov
in
mov
icebp
fisttpll
scas
xlat
shll
cmp
popa
adc
into
aam
add
cli
lea
and
dec
dec
shl
mov
shrl
jnp,pn
adc
xor
or
xchg
sarl
aad
inc
loopne
ljmp
test
imul
sub
mov
mov
mov
ret
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
or
mov
enter
adc
adc
lods
imul
in
xor
pop
es
dec
inc
inc
ja
xchg
add
jecxz
ss
or
sbb
xchg
dec
in
inc
movl
xor
and
ss
push
daa
outsb
add
fcmovu
lods
pop
xchg
dec
adc
loope
inc
xor
lahf
add
mov
das
fisttps
loope
mov
and
cmp
jbe
lods
cmp
call
mov
fidivrs
test
rorl
int
scas
xchg
pop
aam
iret
push
insl
and
ss
bound
dec
xchg
lcall
repnz
dec
stc
ret
jbe
hlt
jecxz
fs
xor
xchg
test
fdivrs
mov
mov
fs
in
add
roll
js
in
repz
sar
test
inc
repnz
inc
mov
rep
icebp
mov
cmp
fdivl
xchg
dec
adc
lret
loopne
cmp
loop
andl
repnz
sbb
cmp
and
pop
mov
test
dec
mov
xor
dec
in
test
or
rcrb
adc
aam
cwtl
lret
pop
movl
mov
ret
int3
inc
filds
and
add
cmp
inc
add
push
mov
mov
sahf
xchg
xchg
and
shrw
ffree
outsl
push
sub
pop
movl
enter
or
mov
dec
shrl
add
pop
lods
outsb
rcr
push
testb
pop
aaa
mov
hlt
lods
or
sub
lods
mov
and
mov
xlat
cmc
cmp
out
xchg
add
mov
repz
push
mov
iret
mov
inc
popf
mov
out
cmp
mov
lods
outsb
stos
mov
pop
cli
pcmpeqb
out
dec
mov
xchg
dec
adc
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
dec
pusha
js
je
adc
movlps
push
or
fistps
fucomip
in
pop
mov
push
jecxz
mov
adc
cmpsl
iret
out
arpl
mov
inc
cmp
add
je
gs
push
fdivs
outsl
fcmovb
adc
sbb
clc
mov
push
sahf
dec
mov
fstp
xchg
cmp
sub
adc
sub
cmp
inc
aas
mov
add
stc
mov
in
dec
adc
loope
test
mov
imul
shlb
nop
dec
call
or
and
mov
adc
push
cwtl
cmc
push
cmpsb
or
mov
roll
shll
in
push
mov
enter
sub
mov
pop
adc
divl
fsubrs
jb
into
out
pop
mov
jno
pop
bound
xchg
inc
xchg
pop
mov
iret
and
cmp
fwait
stos
sbbl
sub
push
popf
iret
add
out
inc
dec
adc
stos
xchg
or
pop
pusha
sbb
push
add
jns
xor
movl
cs
xchg
dec
push
test
push
shrb
or
fsts
mov
xchg
sbb
js
xchg
repz
enter
mov
xchg
pushf
repz
les
sub
adc
dec
xchg
pop
cmp
sbb
test
push
and
jnp
aad
and
mov
fs
dec
test
ljmp
cmp
pop
jnp
cltd
lret
push
cmp
lea
jo
jno
shl
pop
into
ds
movsl
lock
xlat
xor
jl
lock
push
ss
hlt
pushf
xchg
xchg
insb
cmp
pop
push
inc
lea
fstps
clc
int
add
mov
stos
cmovl
push
sub
dec
leave
je
xor
cmpsb
scas
sbb
xor
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
pop
inc
stos
jb
adc
adc
or
sbb
mov
bound
cmp
ss
sub
stc
jo
mov
cmp
fstpt
inc
lahf
repz
sub
adc
std
sub
xorl
sub
mov
sub
push
push
xchg
std
frstor
ret
jo
cmp
push
sub
cltd
jo
loop
scas
or
inc
xorb
cmpsb
orb
inc
repz
adc
adc
sbb
ljmp
cmp
mov
push
cmpsb
push
push
push
fidivrs
mov
ficoms
dec
cmp
dec
ffreep
lock
sub
mov
out
jp
aam
in
cmp
push
jmp
fstpt
outsl
aad
push
cs
out
mov
int3
add
aam
mov
imul
xchg
iret
outsl
mov
hlt
sahf
adc
dec
aas
pop
jmp
sarl
sbb
adc
shlb
idivb
push
mov
adc
push
xchg
mov
or
outsb
mov
and
sbb
loop
lahf
fsubrl
shrb
sbb
pop
jne
clc
std
fdivrl
jns
xor
and
in
mov
dec
mov
mov
cmp
cli
xchg
cmp
jae
jmp
jmp
push
or
lret
dec
jge
int
cmp
inc
mov
xchg
inc
mov
fisubrs
sub
jp
std
scas
jecxz
stos
stos
jb
inc
jns
cmpsb
inc
leave
cmp
enter
lods
adc
js
mov
pusha
adc
rcll
add
push
jne
sti
and
enter
mov
xchg
mov
cs
add
xorl
pop
sub
jno
mov
jo
call
pop
inc
pop
pop
std
lcall
cmc
mov
imul
ja
popf
cs
add
imul
pop
sub
ljmp
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
in
lret
insb
adc
adc
fwait
inc
xor
mov
mov
push
subb
sub
mov
hlt
imul
add
in
rclb
lret
test
iret
jne
and
pusha
jo
adc
je
ret
add
data16
jl
jno
js
jnp
pop
into
push
jns
imul
jbe
jo
cmpsl
ja
addr16
icebp
pop
loopne
or
jmp
mov
data16
aas
cmc
lret
mov
dec
pop
sub
repnz
mov
andb
cwtl
out
sbbb
in
mov
loopne
pop
and
xor
les
roll
add
cmpb
lea
sti
pop
pusha
cmpsl
inc
arpl
dec
dec
add
xor
sbb
jbe
inc
mov
xchg
dec
in
mov
sub
fcmovb
add
sahf
cltd
jg
jnp
test
jb
int
push
sub
lds
mov
scas
mov
fdivrl
xlat
jbe
mov
pop
inc
mov
aam
out
sub
lahf
push
jb
lds
gs
inc
dec
xchg
aad
pop
rcrb
pop
pop
mov
pop
mov
or
mov
adc
in
popa
outsb
hlt
xchg
roll
rorb
xor
nop
adc
into
adc
pop
push
and
decl
pop
mov
xchg
testl
clc
mov
pop
ret
jb
pop
inc
movsl
imul
pop
dec
adc
mov
stc
inc
dec
test
or
or
dec
add
pop
mov
adc
out
inc
in
loope
imul
in
pop
fucomip
mov
into
xchg
cmp
pop
xor
mov
xchg
xchg
faddl
lcall
lods
mov
test
lods
fisttps
mov
in
nop
jmp
adc
push
mov
popa
mov
daa
in
xchg
fisubrs
nop
jo
xchg
pushf
imul
cli
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
dec
xlat
lods
insb
fldcw
adc
movlps
add
xor
addb
lret
cld
cld
addr16
ds
bound
pop
lock
push
push
dec
dec
popf
je
sbb
xchg
cmovge
call
fildl
addr16
inc
xchg
pushf
in
push
mov
sub
leave
sub
jecxz
loop
jl
sub
jb
xchg
xor
mov
test
mov
and
or
movsl
pop
sub
xor
imul
outsb
addr16
xor
loop
loope
inc
sub
dec
outsl
data16
in
sar
inc
add
sahf
call
jbe
lahf
popfw
and
popf
in
fidivrs
movsl
cld
or
or
add
push
cli
jne
movsl
insb
jg
nop
xchg
push
test
push
fwait
xor
hlt
mov
flds
jge
test
push
sbb
sub
xchg
xor
popf
mov
dec
pop
jnp
mov
and
test
mov
rclb
add
dec
xlat
shr
insb
mov
popf
icebp
aas
and
shlb
xor
test
testl
dec
outsl
jb
jne
xor
mov
sbb
nop
dec
out
das
stc
inc
jge
pop
arpl
sbb
ljmp
iret
sub
sub
mov
sbb
cmp
mov
iret
xchg
jp
test
sbbb
jns
pushf
pop
pop
sbb
inc
push
jbe
push
dec
inc
out
cmpsl
loop
mov
enter
mov
aaa
and
ret
adc
inc
aas
in
add
cli
lret
adc
mov
ljmp
jecxz,pt
adc
idivl
aas
stos
mov
cmp
fcmovb
je
data16
adc
aad
inc
xchg
and
stos
cltd
xchg
pop
jmp
lcall
popf
cmp
jne
aad
out
in
pop
cmpsl
mov
ret
loopne
adcl
ss
outsl
xchg
or
mov
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
jl
lea
enter
inc
hlt
xchg
dec
or
add
loope
lods
arpl
test
push
xor
test
mov
sti
sbb
cmp
dec
jnp
imulb
cwtl
idivb
dec
inc
jo
xor
test
dec
scas
xchg
pop
lea
add
sub
fs
and
pop
adc
add
addr16
push
or
test
pop
pop
add
mov
int
out
fcmove
dec
jge
clc
cmp
mov
and
cwtl
sahf
sbb
inc
insl
cmp
pop
mov
dec
jge
inc
jmp
iret
lds
aad
pushf
push
data16
adc
add
enter
inc
mov
js
fnstsw
icebp
sbb
jge
cwtl
add
in
ljmp
movsl
insl
pushf
sbb
sub
mov
stc
fiaddl
daa
mov
and
and
sbb
mov
pop
xor
xor
lcall
dec
pop
sbb
call
adc
stc
add
jl
daa
push
sbb
fwait
add
nop
ss
or
sub
mov
clc
loopne
xor
mov
mov
jg
not
dec
jle
add
push
cmpsl
jge
jnp
jae
ds
cmp
xlat
cld
xchg
mov
jo
or
cld
sbb
xchg
push
je
cltd
push
and
inc
ljmp
mov
dec
cmp
or
push
in
jb
divl
in
jno
frstor
mov
push
pushf
add
out
jbe
les
mull
lahf
and
sarb
xlat
cld
sbb
sbb
out
testb
add
inc
mov
popf
dec
pusha
mov
jg
xor
jg
clc
cmp
mov
mov
or
incl
movsb
dec
mov
repnz
or
inc
inc
jne
cltd
and
pop
and
in
mov
fs
sub
push
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
inc
das
nop
loope
mov
rorl
inc
pop
add
scas
repz
sub
js
in
xchg
pushf
xchg
daa
mov
aaa
or
mov
sbb
jo
jge
rorb
mov
fimull
mov
lea
addr16
jb
stos
stc
dec
cmc
inc
lret
xchg
jns
cwtl
jbe
cmp
xchg
fisubl
flds
inc
movsb
test
inc
add
jns
dec
es
xchg
clc
into
mov
sub
pop
adc
out
mov
cmp
scas
adc
loopne
inc
pop
test
lret
xor
divb
fcomps
xlat
inc
ja
push
jl
repnz
cmp
shll
imul
roll
cli
fwait
insb
inc
and
jp
lahf
enter
sbb
call
add
sub
addr16
mov
mov
adc
fists
hlt
test
sbb
push
in
movsb
andl
jge
jmp
xchg
sti
mov
loop
mov
mov
ljmp
xchg
pcmpeqd
ret
push
test
xorb
xchg
repnz
scas
out
mov
pop
mov
pop
testl
mov
mov
call
arpl
pop
cltd
or
xchg
jmp
int3
or
mov
sbb
lods
jns
pop
jp
das
ret
lods
add
lcall
push
jbe
and
in
xchg
ja
mov
cs
imul
pop
pushf
dec
sub
scas
and
xchg
mov
mov
outsb
jbe
in
sub
sarl
divl
es
inc
fs
and
aad
pop
push
imul
bound
test
sahf
sbb
xchg
int
in
ja
jb
aaa
or
mov
int3
mulb
mov
sbb
lds
mov
int
dec
cmc
dec
daa
dec
push
and
sub
dec
sbb
dec
cltd
sar
rclb
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
adc
js
pop
adc
adc
sbb
fildll
jno
hlt
mov
cmc
inc
sti
nop
mov
sub
stos
insl
loope
punpckhbw
push
dec
mov
scas
call
je
inc
dec
cli
call
lcall
aad
jnp
in
dec
rclb
jp
cmpsl
jle
ret
xor
push
les
lret
or
aad
dec
and
andb
fdivp
add
adc
push
jge
xor
inc
std
outsl
jo
dec
mov
push
sti
decl
in
adc
fidivl
testb
hlt
fdivrs
je
insb
cltd
mov
lods
xchg
movsb
pop
movsl
jne
xchg
xor
inc
cmp
inc
into
lcall
in
outsl
popf
mov
gs
xor
aam
xchg
or
or
jo
xchg
sbb
xlat
xchg
test
leave
xor
aas
cmp
aam
insl
push
mov
or
cwtl
push
mov
push
inc
lahf
in
push
and
lods
hlt
leave
jg
sub
mov
sub
pop
pop
push
add
dec
mov
popf
out
inc
ljmp
scas
mov
dec
fdiv
cmc
cmp
pushf
push
lock
shll
lods
cmp
cmp
pusha
ret
sarl
or
aad
xor
test
dec
nop
add
lcall
pushf
jge
nop
mov
movsb
bound
into
cld
sar
mov
in
mov
ja
imul
cmp
out
loope
cmp
jb
push
mov
xchg
mov
in
dec
push
or
add
fucomi
mov
adc
js
or
adc
cwtl
mov
push
das
cmpb
push
aad
jecxz
mov
pushf
mov
insb
xor
push
pop
cmc
movsl
test
cwtl
dec
pop
test
mov
mov
imul
sub
jo
stos
insl
test
test
sbb
inc
sbb
push
imul
inc
cwtl
and
jbe
out
jne
inc
push
insl
dec
xchg
scas
insl
and
roll
xchg
sbb
rolb
jns
lods
cmp
jb
push
inc
out
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
cld
bound
stos
pop
adc
adc
push
xchg
test
cld
mov
inc
insb
aas
bnd
test
test
mov
ja
lahf
sub
sar
pop
test
vandnps
push
rolb
mov
in
pushf
jnp
mov
dec
outsb
call
test
mov
icebp
mov
pushl
ss
mov
addr16
jne
fisubrs
imul
jmp
mov
mov
stos
imul
mov
lea
iret
add
pop
pop
stc
es
sbb
pop
mov
jg
scas
dec
aam
orl
into
divl
dec
dec
jp
pop
mov
adcl
pop
pop
dec
mov
pusha
movsl
pushf
pushf
enter
enter
push
sbb
out
inc
out
push
popf
sbb
out
xorb
mov
loope
decb
and
xchg
out
mov
ficomps
pop
inc
push
push
cmp
xchg
sbb
dec
dec
jecxz
push
fdivs
mov
dec
int
pop
lock
loop
in
dec
sti
arpl
mov
test
or
ret
add
fisubrs
out
pop
sub
adc
sbb
push
in
jmp
mov
in
icebp
lods
orb
xchg
inc
movsb
dec
js
in
push
and
jae
cli
jge
cmc
sbb
call
mov
mov
or
data16
ds
cmp
jne
and
inc
sbb
dec
ljmp
push
sbb
xlat
dec
fisttpll
cltd
xchg
ja
test
xchg
outsl
cmpb
outsl
int
mov
fwait
cs
mov
mov
arpl
xor
jae
fnsave
call
sti
mov
js
cs
shll
bound
hlt
adc
pop
decb
fmuls
xchg
mov
sub
inc
inc
insb
push
lds
xchg
add
jge
push
ja
cmpsl
sbb
push
pop
mov
ljmp
lods
or
repz
xchg
jl
push
lret
insl
inc
push
mov
lods
gs
pop
and
pop
fnstenv
push
xchg
mov
xor
fcmovbe
aam
rcrb
nop
mov
pop
fldenv
aaa
and
bound
in
fs
sahf
cmp
bound
or
xchg
jmp
call
jne
push
cmp
and
sub
jecxz
cmp
aaa
pop
std
int
dec
outsl
ds
push
add
scas
xor
icebp
dec
inc
popa
push
cltd
loope
jl
roll
ja
movsb
cmp
mov
or
dec
push
loop
xor
dec
cs
mov
xor
xor
ret
add
insl
mov
sub
aad
test
dec
test
movb
cltd
cld
lea
push
stc
inc
jne
xchg
cmp
hlt
not
lcall
push
sub
dec
popa
rol
sbb
pop
ret
adcl
rol
shl
add
adc
add
test
add
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
mov
adc
adc
add
test
push
push
jno
sub
xor
and
xor
hlt
sub
cmp
push
out
adcb
jb
lods
adc
cmpsb
daa
popa
mov
cli
fwait
ret
iret
cli
pop
aas
lret
pop
dec
adc
pop
sbb
dec
push
movsl
mov
adc
jne
fldenv
shlb
mov
xchg
clc
xchg
lea
xchg
cld
movsl
movaps
dec
inc
stc
roll
adc
jmp
mov
loopne
fsub
shrb
mov
cmp
je
ds
jge
mov
jmp
mov
or
push
push
out
test
ret
mov
scas
xchg
cmp
in
lahf
es
pop
lock
xchg
icebp
mov
hlt
adc
orb
push
jecxz
xchg
bound
mov
cli
pop
adc
xor
dec
push
jl
sbb
lahf
xchg
fs
subb
xor
and
out
inc
or
jecxz
lcall
cld
repz
andb
xorb
pop
mov
cltd
cmpsl
jb
and
or
push
mov
sub
pop
aam
fbld
mov
cmp
imul
sub
das
lods
sub
cli
lock
push
mov
in
xor
push
add
cwtl
pop
mov
xor
aas
fcoms
inc
push
icebp
and
cmp
cmp
rcrb
stc
push
jg
repnz
loop
mov
jbe
xchg
jbe
ret
inc
sarb
in
xchg
pop
lcall
scas
xor
rol
nop
fwait
pop
xor
fcmovu
fsubrs
out
clc
push
jae
dec
push
xor
or
jne
fcmovbe
adc
pop
call
in
repz
in
xchg
jb
popf
call
cli
adcb
jge
int
jnp,pn
in
adc
xchg
push
mov
test
mov
and
mov
stos
and
fildll
pop
cmp
and
sbb
aaa
mov
sarb
cs
dec
sub
mov
ror
jmp
cmp
pop
iret
mov
jmp
cmpsb
shlb
adcb
shrl
ret
xor
test
movsl
pop
fldenv
addr16
mov
les
notl
dec
fcmovbe
leave
call
lret
cmp
inc
addr16
in
dec
xchg
inc
popf
shlb
dec
inc
mov
cwtl
cltd
out
movsb
icebp
xchg
xor
jbe
mov
cmp
pop
mov
das
mov
dec
jae
out
pop
inc
adc
mov
push
es
push
insb
daa
mov
ret
ret
mov
adc
stos
cmc
xchg
xor
push
add
cmp
mov
in
aaa
xchg
pop
cmpsl
ret
adc
loopne
movsb
xor
mov
pop
clc
fs
lds
sub
adc
popf
push
sub
xor
les
pop
out
inc
pop
test
push
mov
adc
adc
xchg
mov
pop
jnp
sbb
add
dec
xor
pop
ds
add
fwait
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
