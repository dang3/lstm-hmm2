push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
push
pop
add
bound
fstpl
bound
sub
pop
add
pop
jne
xor
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
les
add
jle
stos
fs
repz
jp
mov
cli
lret
cmp
sub
push
shl
test
xor
loope
repnz
test
xor
push
push
mov
xchg
ret
xor
inc
cmpb
lds
in
rorb
lea
outsl
jno
jle
ljmp
or
or
cld
mov
mov
push
les
dec
adc
jo
lcall
ljmp
push
mov
jge
mov
roll
xchg
imul
data16
es
push
aaa
add
lret
pop
lods
subl
mov
lcall
lock
jle
les
lods
xor
pop
leave
mov
mov
adcb
shll
std
and
pop
aas
mov
add
lock
mov
push
jmp
dec
cmp
lahf
pusha
push
insl
scas
repz
ret
loop
mov
stos
pop
jo
imul
int
int
xor
or
fs
push
icebp
xchg
or
inc
sbb
dec
push
fcompl
cltd
jecxz
cmp
mov
mov
out
push
pop
pop
sti
data16
pop
add
daa
xchg
push
aad
in
mov
jg
cli
xor
out
pushf
xor
or
mov
das
stc
enter
fldl
lcall
and
std
and
sub
movsb
dec
lea
clc
xor
pop
ja
inc
sahf
add
jecxz
jg
cli
mov
into
stos
add
scas
loop
es
lahf
dec
mov
call
or
test
jnp
scas
mov
or
push
adc
push
popa
jns
jmp
cmp
ret
push
cmovle
push
mov
xchg
addl
out
test
xchg
and
je
arpl
adc
iretw
xor
dec
imul
or
lcall
push
cmc
rol
loopne
xor
shl
jge
pop
dec
adc
adc
and
rorb
sub
icebp
iret
xchg
imul
aas
push
imul
and
lea
aaa
xchg
sti
call
js
mov
cld
xorl
mov
jl
dec
xchg
in
es
xorb
arpl
call
aas
and
and
add
mov
xchg
mov
sbb
fistpl
das
cmp
sarl
pop
mov
add
fwait
jecxz
sbb
jl
out
pop
das
xlat
cmp
sbb
fdivr
and
cmp
inc
pushf
inc
push
xor
loope
dec
push
mov
xor
sub
sub
push
jbe
adc
dec
ret
sbb
dec
mov
mov
mov
js
sbb
push
mov
cmp
cmc
ret
xchg
mov
inc
pop
sbb
adc
or
mov
jmp
sti
movsb
lods
mov
fmull
xchg
jne
mov
mov
loope
mov
test
sub
add
inc
mov
mov
jmp
and
push
mov
loope
jge
jp
push
push
scas
dec
add
leave
dec
push
outsl
cmp
popf
mov
jg
mov
stc
ljmp
out
je
fldcw
jno
test
and
gs
fildll
and
xor
mov
mov
ljmp
lods
ja
sahf
jmp
mov
dec
mov
out
cmp
shlb
fistps
ljmp
add
iret
adc
pop
cmp
lahf
cs
lea
sbb
stc
sub
lods
cs
lret
dec
jecxz
popf
lock
ja
xchg
xchg
into
xchg
shl
lret
int3
fstpl
icebp
cmp
rcrb
jle
xor
mov
dec
stc
push
push
add
iret
ljmp
loope
dec
pop
inc
xchg
xchg
inc
push
and
fadd
and
pop
jo
inc
sub
cmp
cmpsb
jb
stos
sbb
push
push
rorl
push
roll
mov
adc
xchg
inc
dec
add
iret
adc
cld
mov
adc
jae
xchg
pop
fwait
pop
sub
lahf
imul
stc
add
hlt
add
stos
jnp
bound
mov
lds
dec
cmp
inc
int
inc
sbb
lock
lret
sub
dec
es
shlb
mov
sub
ss
jp
std
mov
adc
inc
jnp
lahf
mov
push
xor
incl
mov
imul
xchg
cmp
adc
xor
sarl
sub
cmp
and
and
cmpsb
pop
push
notb
hlt
adc
adc
or
add
ret
xchg
out
mov
loop
inc
and
leave
jl
cmp
lds
push
xchg
mov
cmpl
sbb
sbb
push
jnp
mov
inc
mov
adc
xchg
sub
pop
ret
xor
inc
ss
lock
xchg
test
xor
lret
stos
cmp
scas
aam
push
lea
fdivs
loope
push
out
add
outsl
mov
lods
adc
je
loope
or
or
aad
sub
das
ss
icebp
mov
scas
adc
xor
lret
cmpsl
pop
test
xor
fnstsw
mov
jl
xchg
jp
aas
ret
jns
das
inc
mov
addb
add
jbe
sub
push
imul
mov
lret
cltd
addb
fidivrl
out
adc
mov
and
adc
loopne
xlat
test
cld
mov
jno
push
inc
std
fiadds
call
adc
cmpsb
mov
aad
pop
cmpsl
add
add
xchg
fwait
scas
add
xchg
mov
out
xchg
mov
mov
jp
push
mov
and
inc
lods
aad
jb
mov
mov
pop
flds
cmp
jnp
movl
dec
dec
push
jns
sbb
out
mov
mov
adc
mov
mov
rcr
sbb
mov
sti
shrb
mov
add
dec
out
and
clc
incl
mov
pushf
cwtl
mov
mov
movsl
lcall
sub
popa
ficompl
or
dec
adc
aad
loope
dec
pop
dec
mov
mov
ret
lcall
cli
or
cmp
orl
sbb
xchg
pop
shrb
jae
addl
dec
jae
jo
push
mov
inc
sbb
mov
lret
insb
mov
ja
add
scas
leave
pop
cmpsb
in
xchg
fbstp
and
push
pop
xchg
mov
lahf
inc
push
push
mov
bound
cmp
or
push
push
dec
mov
push
cmp
push
rolb
dec
aam
movsb
dec
dec
add
xor
inc
stos
fwait
pop
ficoml
pop
add
fcmovnb
js
fs
std
into
or
sbb
test
cmp
mov
fdivrl
jle
ds
pop
repnz
movsb
sbb
mov
outsl
mov
test
dec
xchg
xor
in
ret
inc
xchg
or
adc
mov
mov
xor
fbstp
pusha
or
ret
js
push
add
test
sub
fcmove
add
ja
dec
jecxz
pop
fsubrl
les
lods
cmp
loope
popa
or
jge
inc
and
mov
in
dec
int
mov
push
leave
dec
mov
adc
stos
push
mov
fwait
out
pop
imul
repnz
stos
xchg
std
mov
xor
std
loopne
addr16
jecxz
mov
mov
inc
sub
add
mov
jb
bound
out
mov
xchg
cltd
sbbl
cld
mov
mov
ljmp
cmpb
or
shlb
iret
repz
or
aas
xchg
movb
mov
mov
mov
push
xor
movsl
repnz
mov
lds
cmp
bound
ret
notb
add
and
adc
mov
and
lock
sbb
bound
mov
jge
mov
pop
mov
push
jecxz
dec
push
mov
mov
sarl
testb
icebp
fidivrs
cmp
push
add
xchg
mov
scas
hlt
push
push
xchg
pop
or
negl
jmp
mov
inc
push
ret
pop
ret
dec
push
imul
lahf
inc
mov
push
dec
div
gs
cs
into
movsl
sar
outsl
jb
xlat
mov
dec
xchg
fwait
or
in
jmp
mov
add
das
adc
lock
addr16
lock
mov
stos
sti
xlat
fisttpll
scas
adc
dec
icebp
jb
xchg
fdivs
pop
xchg
sbb
push
arpl
xchg
jg
orb
mov
and
dec
icebp
lcall
mov
add
push
jp
fcompl
in
and
fisttpl
insb
out
add
ljmp
std
push
mov
adc
fstl
int
push
cli
sbb
sub
cmp
popa
fmull
int
adc
mov
in
adc
mov
push
sub
ss
call
repz
lock
in
mov
std
rcr
fsubl
outsb
push
addr16
lea
sub
pop
ds
das
pushl
mov
mov
mov
movsl
jns
scas
out
movsb
mov
xchg
fadd
pop
xchg
mov
sub
mov
xor
inc
sub
sbb
add
jne
mov
dec
sbb
pop
outsl
cmp
sub
mov
adc
loop
mov
arpl
mov
cs
shll
lds
inc
popa
xchg
xor
lds
divl
pop
ds
idivb
ss
mov
or
cld
pop
pop
insl
ret
outsb
inc
xchg
inc
sti
outsl
pushf
mov
adc
insl
cld
or
jne
dec
dec
sahf
lds
inc
andl
push
push
fdivrs
xchg
fs
ja
cmpsb
mov
sub
stc
jbe
out
mov
lods
loop
mov
and
inc
mov
mov
jne
xchg
sbb
mov
and
fmuls
leave
lret
cmp
mov
xor
or
fidivs
xlat
jmp
lods
out
fs
sbb
in
sarb
shrl
pop
add
adc
and
into
rolb
jns
inc
mov
cld
daa
lret
sarb
cli
adc
mov
sub
cmpb
arpl
push
and
cmp
dec
mov
or
test
addl
push
scas
mov
into
push
xchg
shl
out
stc
rorb
sarb
cmp
sarb
scas
cmp
xchg
and
mov
mov
or
sahf
aad
je
jge
jo
cmpsl
ret
int3
lahf
mov
arpl
xchg
negl
inc
clc
ja
aad
pop
daa
sbb
sub
dec
arpl
and
jo
jp
pop
dec
pop
dec
mov
insl
mov
sbb
es
out
test
jbe
imul
cwtl
sbb
mov
insl
pushf
jnp
mov
fdivp
jg
mov
pop
sub
adc
popa
cmp
pop
sbbl
add
icebp
fcomps
sbb
scas
daa
push
inc
imull
dec
sbb
jnp,pn
adc
jnp
rolb
jmp
dec
jno
ljmp
pop
xchg
mov
cld
cmpsb
xlat
repnz
loop
cmpsb
popf
adc
push
xchg
sbb
subb
push
xorb
call
rcll
sub
int3
aas
inc
incb
cmp
inc
hlt
iret
popa
push
pop
mov
sbb
fxch
mov
inc
nop
push
in
iret
seto
mov
sub
push
dec
mov
bound
pop
std
jns
mov
add
mov
sbb
imulb
lods
loope
xor
out
xchg
cs
lcall
cwtl
sub
mov
push
dec
jne
movsl
in
adc
mov
ljmp
mov
sbb
mov
xor
int
lcall
leave
inc
cltd
cmp
es
iret
adc
fcmovnu
shrb
lds
pop
movsl
out
mov
mov
scas
xorl
mov
pop
ljmp
movsl
cmc
jnp,pt
mov
push
pop
aad
pop
lock
stos
or
adc
xacquire
jb
test
mov
mov
dec
inc
cmp
sbb
pmulhuw
aaa
mov
pop
xor
outsb
push
lds
js
cltd
outsl
adc
inc
mov
jp
rol
pop
mov
sbb
outsb
repnz
nop
cmp
dec
mov
xchg
cmp
mov
fisttpl
push
popf
fsub
loopne
inc
cmp
cwtl
daa
sub
outsb
iret
push
lods
into
dec
loopne
shr
sub
fstpt
fimuls
push
xchg
mov
sub
push
aam
out
lcall
ljmp
inc
clc
rcrl
imul
call
jmp
lret
mov
adc
outsb
lods
and
mov
pop
testl
or
pusha
stos
mov
mov
jae
sti
push
jno
outsb
inc
test
xchg
adc
aaa
pusha
jmp
push
sahf
cld
lock
mov
or
fnsave
ret
repz
cmp
ja
or
sbb
sbb
pop
hlt
aaa
lock
xchg
cmp
into
lods
mov
push
scas
int
aaa
bound
mov
xor
icebp
lret
cmp
andl
mov
sahf
pop
movsb
push
mov
daa
gs
sub
je
lock
adc
insb
mov
fdivrl
dec
je
and
stos
imul
pop
jnp
leave
mov
out
mov
lock
jns
adc
movsl
adc
xor
pop
pop
mov
dec
outsb
and
aad
lcall
jmp
add
in
mov
loop
aad
ret
mov
les
pop
call
sub
insb
cltd
mov
add
in
subb
cli
sbb
in
js
stc
pop
push
stc
je
pop
push
and
iret
icebp
mov
lret
call
fdivrs
xchg
xor
jg
jae
add
or
out
rcll
repz
gs
jl
pop
mov
es
inc
jg
scas
lcall
mov
inc
add
jb
add
jne
test
outsl
ljmp
outsl
pop
rep
push
mov
push
pop
cltd
pop
adc
fs
or
loope
loop
fdivrl
mov
icebp
negb
dec
add
jmp
mov
or
pop
pushf
xchg
or
js
sbb
push
out
call
or
xchg
dec
ror
clc
bound
movsb
dec
icebp
jo
mul
mov
add
sbb
jo
jnp
ror
dec
repz
jp
pop
jo
jge
or
faddl
stos
mov
push
ror
push
add
sub
pop
lds
push
int
loopne
jmp
lahf
scas
sahf
nop
push
into
jne
out
fs
adc
mov
lret
dec
roll
cmp
mov
scas
and
call
cmp
pop
addb
mov
mov
jb
mov
js
sub
fwait
and
pusha
scas
decl
mov
lds
pop
gs
loope
cmp
data16
adc
dec
inc
mov
daa
lret
cwtl
xor
jle
imul
test
push
pop
or
add
push
sub
int3
sbb
push
dec
and
pop
orb
jae
cltd
xchg
call
pop
cmp
xor
ja
flds
add
mov
push
mov
adcb
mov
cmpsl
adc
or
jp
dec
mov
push
out
in
ss
xor
fdivrl
popf
mov
int
add
push
cmpsb
int3
or
inc
addb
mov
addl
repz
daa
push
mov
loope
and
ret
out
and
cmp
rep
orl
push
ficomps
and
dec
xlat
cmpl
push
mov
and
lret
sarl
jle
stos
out
jl
sub
ficoms
aas
cmp
out
pushw
inc
mov
lcall
sub
movsb
xor
ret
iret
sbb
sar
out
std
in
mov
mov
lods
adc
jp
xchg
test
out
jle
icebp
jle
fmull
xchg
jb
int3
je
arpl
cmc
addr16
int3
adcl
repnz
adc
into
sbb
pushf
cli
xlat
push
cmp
dec
enter
mov
fists
mov
fstpt
cmp
ljmp
cld
add
push
cmp
sub
imul
mov
xchg
mov
fisubs
sti
lea
popf
in
or
cmpsb
mov
adc
repz
and
dec
pushf
ficoml
xor
push
push
lods
inc
mov
xor
movsl
out
sub
out
aam
dec
push
jg
in
scas
movsb
add
push
mov
sbb
or
enter
shl
mov
fstps
scas
adc
dec
addr16
inc
ds
cmp
wrmsr
jmp
pushw
sbb
int3
xchg
adc
cmpsl
js
popa
loop
ljmp
adc
stc
mov
pop
pop
or
test
xor
lcall
lret
xor
and
mov
stc
aad
arpl
pop
fists
xchg
pop
inc
mov
test
sbb
imul
add
test
cmpsl
cmp
bound
mov
hlt
jecxz
mov
cmpsb
pop
sbb
jge
xor
das
iret
aad
adc
sbbl
icebp
mov
mov
push
mov
sahf
inc
xchg
or
shrb
aaa
das
dec
int3
lea
jo
movsl
in
sti
jbe
icebp
int3
or
sub
push
fldl2e
jne
mov
js
push
movsl
jp
xchg
xchg
jecxz
mov
enter
jnp
sub
xlat
jbe
mov
pop
xlat
int3
fs
jg
cltd
aam
and
icebp
jb
int
cwtl
add
lds
jge
aad
fcomps
jmp
mov
mov
dec
vprotd
adc
stos
pop
hlt
adc
push
les
pop
push
pavgb
adc
push
ret
fwait
or
fisttpll
es
ret
xchg
jb
daa
pop
pop
push
dec
jbe
mov
addl
pusha
mov
rcrl
out
jb
into
mov
xchg
xchg
add
hlt
or
je
fmul
aad
js
popa
adc
test
jmp
mov
jl
outsb
divb
mov
insl
add
bound
pop
xchg
imulb
cmp
movsb
inc
jp
mov
push
pop
add
sub
int
test
out
push
dec
es
push
stos
dec
pop
dec
mov
ror
sbb
dec
fstl
pop
sub
pop
aam
pop
aad
push
and
pop
sti
inc
jns
lea
ficomps
add
xchg
sub
and
mov
push
dec
and
push
imul
pop
sbb
mov
fwait
push
and
fisubrl
sbb
sti
pop
push
sti
cmp
adc
cli
mov
inc
lahf
fdivrl
push
xchg
inc
cltd
mov
cmp
int
das
daa
inc
xchg
mov
adc
inc
cmp
stos
out
and
filds
push
test
ja
mov
pop
pop
cmpsl
and
ss
lret
loope
adc
mov
push
dec
mov
sbb
or
ret
mov
adc
mov
scas
mov
stos
and
push
mov
cli
fwait
jo
xlat
popf
js
stc
mov
jle
test
mov
mov
push
or
test
cmp
add
mov
ret
jbe
and
and
cld
fs
in
sbb
fstpl
stos
sub
lahf
leave
xchg
lea
lahf
in
imul
pusha
pop
mov
loopne
aad
cmp
popf
sub
sbb
sbb
mov
mov
mov
fnsave
es
push
ljmp
lea
xor
dec
adc
add
dec
jns
jae
popf
lret
add
push
test
xlat
in
pusha
lahf
jle
or
push
int3
or
out
aas
cmp
jb
fwait
loope
jae
pop
fcompl
mov
xor
xor
sub
aam
sub
popa
clc
cmp
and
testb
ja
filds
or
mov
cmp
cmpb
jmp
mov
jo
jg
mov
insb
xchg
add
xlat
ret
or
loopne
enter
addl
dec
or
call
and
mov
popa
cli
inc
inc
cmp
mov
sbb
fcmovne
popf
cwtl
cwtl
cmp
imul
or
aaa
decb
fidivl
and
stos
push
push
outsb
pop
pop
lss
mov
fmuls
jecxz
adc
push
fyl2xp1
pop
mov
cmp
jmp
xchg
js
add
cli
pop
jmp
repz
dec
jo
mov
stc
push
lds
jmp
dec
add
lea
dec
push
stc
aam
stos
decb
out
pop
inc
pop
cmpsl
movsb
add
mov
xchg
xchg
jl
sahf
cmpsb
ret
push
loopne
std
shrb
pop
incb
ds
aad
js
bts
jnp
ds
xchg
xchg
xchg
cld
jge
test
jbe
or
inc
repnz
movsb
mov
lcall
xchg
adc
or
cmp
popa
pop
mov
leave
nop
mov
out
fisubrs
add
std
test
outsl
aas
loope
mov
push
stos
push
push
or
repz
into
nop
faddl
adcb
test
cmp
dec
nop
pop
pop
pop
mov
outsb
adc
push
out
inc
and
cwtl
daa
stc
pop
cwtl
or
movsl
jb
es
mov
js
inc
push
push
mov
adc
insl
ss
push
das
arpl
fsubl
popa
push
sub
in
mov
xchg
or
nop
in
cwtl
lret
jge
push
inc
or
cld
jg
push
repz
add
fdivp
aad
shrl
mov
adc
in
insb
mov
push
fdiv
pop
mov
mov
pop
xchg
ret
lret
add
sub
lret
push
cltd
pusha
cmp
pop
aas
lret
scas
mov
pop
xchg
push
mov
imul
mov
ds
ret
inc
push
insb
mov
push
mov
adc
aam
imul
add
lret
xor
lret
adc
xor
cmpsb
sbb
push
push
push
cwtl
scas
iret
jb
not
and
push
dec
jo
loope
popf
sbb
aad
inc
mov
test
gs
jns
int
jbe
sbb
iret
movsb
sti
pop
call
mov
lock
outsb
dec
imul
pop
and
mov
js
push
jmp
mov
or
addr16
arpl
or
dec
push
cmp
add
out
popf
mov
dec
into
ja
push
mov
xchg
stc
lcall
imul
gs
sbb
mov
sbb
int
insb
and
mov
imul
cmp
into
lods
cld
fimull
mov
xchg
cwtl
and
adc
outsl
push
arpl
cwtl
add
mov
dec
scas
jmp
pushf
stc
in
and
clc
xchg
dec
cli
out
xchg
inc
insl
jae
out
mov
pop
mov
or
mov
les
lret
mov
aaa
push
dec
scas
scas
repz
imul
pop
push
adc
push
or
adc
push
out
dec
in
jge
movsb
xor
test
xchg
jmp
mov
aad
and
sbb
push
adc
scas
ja
adc
xchg
xchg
xor
cli
test
cmp
add
or
outsl
filds
fmull
cmpsl
fsubrl
popf
idivl
xchg
popf
test
sbb
push
andb
mov
jecxz
pop
dec
dec
pop
call
sbb
xchg
loopne
cltd
daa
jne
push
jo
adc
mov
popa
scas
adc
insl
into
sbb
daa
jl
jl
out
cs
sub
or
cmp
in
js
into
aad
loope
xchg
stos
or
jne
jbe
pop
cmp
dec
lds
jp
gs
in
cmpsb
pop
imul
stos
stos
add
or
in
sub
popa
pop
mov
or
pop
outsl
sbb
cmc
sti
outsb
arpl
inc
iret
xlat
popa
pop
outsb
dec
out
mov
mov
orl
imul
lods
inc
and
jb
movsl
mov
sub
int
aaa
es
inc
int
xchg
leave
aas
mov
clc
xchg
dec
jle
cli
or
fs
loopne
cs
push
int
jmp
xchg
ljmp
mov
lret
mov
jl
or
adc
adc
cli
bound
pop
stc
sahf
shrb
cmp
lea
stos
adc
cmpl
addb
push
enter
sub
pop
arpl
fsub
bound
in
das
cmp
inc
aas
add
pushf
fs
adc
push
xchg
cmp
pop
outsl
mov
sub
adc
pop
outsb
insb
pop
lods
outsl
dec
popa
out
adc
xchg
jae
dec
sub
and
jle
rcr
pop
mov
push
dec
repnz
mov
fwait
cmp
push
jmp
and
popf
xor
jns
or
jae
outsb
mov
test
addr16
fisttpll
subl
ds
xchg
mov
mov
sbbb
int
imul
inc
out
sarl
or
adc
sar
cmpsl
and
cmp
sbb
pushf
aad
xchg
jp
jecxz
push
push
jmp
fcomp
enter
orb
fsts
push
movsl
hlt
dec
push
popf
cs
loopne
sub
and
jae
fisttps
pop
sbb
adc
inc
xchg
add
adc
fildll
push
ljmp
repnz
push
jl
mov
mov
pop
adc
les
sub
jge
or
inc
xor
outsl
jb
out
add
sub
test
aaa
cmpl
xor
adc
int
pop
push
mov
xchg
pop
push
xchg
inc
adc
iret
inc
mov
adc
roll
arpl
mov
xor
ss
pop
hlt
clc
push
xlat
sub
lret
adc
dec
daa
loope
fs
cmpb
movsl
jg
out
out
jp
dec
jp
adc
adc
rcrb
lock
negl
push
sti
roll
cltd
pop
adc
test
sbb
jb
pop
add
int3
lahf
test
push
and
js
and
cmpsl
pop
or
dec
sub
cmc
pop
pop
cmpsb
mov
shr
rorl
dec
and
das
cwtl
adc
sti
aas
stos
nop
add
mov
sbb
lods
ret
xor
insb
sub
mov
jge
test
cli
adc
fidivrl
add
cmp
in
pop
xor
dec
pop
lret
adc
pop
pushf
test
das
les
push
cmpsl
mov
cmc
clc
sub
ret
pop
adcb
sbb
mov
adc
mov
inc
adc
adc
sbb
sub
mov
rorb
test
xchg
sbb
jae
mov
cmp
test
arpl
jp
push
jno
nop
mov
addb
sub
test
mov
pusha
cmp
adc
and
js
lret
add
fiadds
cmp
pop
int
int3
dec
mov
stos
repnz
push
xchg
mov
dec
cmp
lock
push
fistpl
aad
sbb
inc
outsb
fwait
push
dec
rol
cmp
push
xchg
or
daa
aaa
sti
mov
rcr
inc
add
cmp
mov
popa
mov
and
orb
fwait
and
push
insl
test
mov
int
mov
sub
shll
push
rorl
mov
mov
bound
aaa
movsb
dec
sbb
adc
pop
sarl
mov
insl
imul
lret
cs
fldenv
fdecstp
pop
cmp
repz
mov
and
ret
outsb
push
iret
dec
and
popa
push
lahf
mov
in
and
insb
inc
jnp
xorb
adc
mov
mov
pusha
std
and
or
loopne
inc
push
push
push
sbb
push
inc
or
iret
mulb
jecxz
ljmp
std
mov
pushf
adc
jo
pop
jae
push
mov
int
lods
test
and
adcl
add
icebp
aas
imul
dec
imul
aad
fcomps
fmuls
lcall
inc
jo
nop
sbb
add
mov
outsb
out
xor
xor
jnp
fadd
into
shrb
daa
gs
inc
gs
xchg
outsb
jbe
add
inc
mov
mov
fldenv
mov
mov
lret
inc
add
icebp
outsl
push
or
jne
dec
adc
xor
dec
jmp
pop
mov
inc
xor
movsl
cmp
movsl
leave
pop
lods
out
sub
mov
pop
mov
pushf
aaa
mov
xchg
inc
daa
call
testl
andb
mov
int
jle
cltd
lock
es
cmp
or
lret
leave
lock
inc
push
mov
mov
cmpsb
sbb
pop
mov
cs
and
push
or
push
xor
dec
pop
inc
sbb
xor
xchg
mov
jle
shll
test
mov
mov
mov
lds
xor
pop
sbb
and
inc
leave
and
popf
scas
or
xor
ret
loopne
mov
mov
mov
push
add
fwait
adc
dec
mov
push
aas
addr16
hlt
rcrb
roll
mov
outsl
xchg
xchg
mov
mov
mov
insl
cmp
jno
inc
push
popf
xlat
adc
addb
mov
ret
pop
pop
push
cmp
into
adc
mov
mov
mov
decb
iret
outsb
fsubl
imul
adc
shll
xchg
lret
push
je
clc
jecxz
stos
inc
inc
dec
adc
mov
sbb
mov
xor
jl
xchg
adc
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fdivl
popf
mov
fstpl
fstpl
bound
in
pushf
arpl
add
popa
xchg
mov
xor
aad
xchg
inc
outsl
push
inc
outsb
inc
sub
std
pop
ds
sub
movsb
sti
daa
frstor
je
pop
dec
stos
cmp
mov
in
cmp
inc
and
out
jg
lret
xchg
icebp
jne
in
leave
repnz
dec
cmp
or
inc
inc
imul
mov
or
lret
cmp
lret
sub
lret
or
xor
cmp
dec
fcoml
mov
rcll
in
and
movsl
or
mov
fistpl
inc
aad
sbb
jno
mov
mov
inc
pop
mov
mov
xchg
pop
jl
sub
movsl
sbb
xor
in
xor
jge
repz
aas
stos
cmp
pop
cmp
out
iret
mov
xor
or
ss
push
lds
lock
pop
test
mov
xor
mov
daa
push
mov
sbb
jp
pop
sub
arpl
jnp
mov
mov
fbld
push
shrb
cs
int
pop
lret
ror
xchg
cmpsl
int
int
ja
jg
pushf
xchg
or
inc
inc
jne
and
out
aam
or
pushf
rcrl
shrb
jns
mov
aaa
out
clc
mov
xor
in
shl
fnstsw
loope
movsl
andl
fidivl
pop
add
jge
jne
fcomps
clc
out
mov
enter
xchg
pop
cmc
adc
test
loop
shlb
jne
pushf
aad
inc
cmp
andl
or
mov
mov
mov
imul
mov
or
xchg
push
push
dec
mov
adc
idiv
enter
outsb
dec
lea
int
imul
inc
mov
dec
lods
cli
cs
cwtl
daa
pop
out
test
mov
lret
adc
jo
inc
jge
adc
sbb
fimull
arpl
fdivrl
mov
shl
fstp
cmp
sbb
loope
xor
repz
mov
cmp
loop
fadd
in
lret
push
add
mov
mov
fwait
mov
jge
ret
mov
or
mov
test
std
imul
scas
stc
stos
pop
inc
iret
gs
add
mov
leave
push
xchg
mov
jne
out
std
or
mov
dec
cmp
test
dec
mov
imul
repnz
inc
loope
lcall
shrl
mov
cmp
fs
jbe
mov
xchg
pop
call
inc
pop
push
or
inc
cmp
into
daa
stc
xchg
and
jle
dec
ja
out
jns
dec
cmp
sub
fcmove
adc
aad
arpl
repz
or
pop
mov
sub
rolb
roll
xor
mov
sbb
js
mov
cmp
push
sbb
fs
test
pop
or
mov
jle
test
push
push
xchg
stos
jecxz
stos
rolb
daa
mov
mov
xchg
jbe
cli
aaa
push
cld
adc
mov
pop
lcall
in
jo
sti
int3
sub
xor
push
int
mov
sub
enter
push
sbb
subb
cltd
push
push
and
xor
cmp
jns
loopne
or
cmp
stc
cmp
lods
clc
bound
sbb
cmpsb
xor
push
insb
mov
push
mov
fidivl
cmp
dec
inc
rorb
scas
xchg
cld
and
outsl
adc
mov
idivl
test
mov
mov
push
cmpsb
test
push
mov
subb
push
dec
ret
movsl
and
data16
and
pop
sub
loopne
dec
stos
lea
jp
mov
xor
and
ret
sub
xchg
sbb
jae
adc
push
orb
cmp
aam
pop
or
out
mov
shrb
fidivrl
xor
push
xor
mov
sub
insl
and
in
or
cwtl
jmp
xchg
xchg
cmp
fidivl
push
push
test
dec
ja
stc
stc
mov
inc
xor
inc
jne
xchg
es
pop
subb
dec
rcrb
test
std
dec
nop
les
pop
notl
pop
shr
lock
mov
mov
or
movsb
inc
adc
mov
sbb
pop
and
mov
push
adc
mov
pop
jmp
and
in
jne
sbb
les
push
push
outsl
aaa
sub
arpl
lods
and
loop
pop
and
out
cmp
mov
popa
jecxz
mov
xchg
xchg
mov
pop
dec
jne
fsubl
outsb
mov
lret
mov
iret
sbb
lock
stc
loope
jns
sarb
outsl
and
mov
or
aaa
loope
push
fildll
inc
pop
and
pop
xlat
cmp
mov
or
sub
lea
or
dec
adc
hlt
nop
loope
xchg
repz
xchg
xlat
pushf
push
and
adc
pushf
cmp
push
mov
jo
jp
mov
and
push
orl
cmp
out
pop
or
or
xor
jl
inc
lcall
in
outsb
gs
ljmp
push
leave
in
dec
aaa
mov
dec
push
int
imul
jb
xchg
mov
and
mov
cmovae
and
jno
mov
mov
push
inc
jne
cmp
movl
movsl
or
or
call
mov
stc
fwait
xchg
lret
sti
jb
cmp
sbb
mov
xchg
loop
pop
div
lahf
test
xor
jle
ret
loop
pushf
imul
lahf
mov
pop
xlat
fildl
jae
mov
jbe
xor
cmp
push
push
and
addr16
add
out
std
lret
ja
sbb
pop
push
add
aaa
sub
aaa
xchg
pop
push
cmp
stc
xchg
xchg
lock
or
push
pusha
sbb
sbb
fadds
shrl
mov
ret
fimull
js
lods
pop
in
xchg
xchg
push
insl
sub
aas
mov
xchg
mov
xchg
imul
fwait
push
icebp
jnp
jnp
and
jl
pop
or
xchg
jo
xor
ja
or
das
test
loopne
addr16
lock
mov
mov
xchg
pop
stos
sbb
push
cmpsl
push
stc
adc
mov
mov
ljmp
dec
icebp
jmp
inc
dec
mov
test
sbb
in
pop
imul
mov
outsb
mov
cmp
mov
insb
hlt
pop
fadds
inc
inc
or
push
testb
pop
mov
imul
std
sbb
pop
loope
mov
ret
test
xchg
fcompl
ja
es
aam
pushf
mov
mov
inc
mulps
push
repnz
outsl
out
notb
jns
xchg
xchg
mov
bound
pop
mov
sub
loope
mov
xchg
inc
movsl
adc
and
pusha
jecxz
cmp
cmp
add
mov
jne
fnstcw
movsl
std
xchg
mov
repz
sbb
xlat
adc
mov
mov
mov
add
rolb
aad
pop
and
pop
sti
les
sub
hlt
jle
ret
xor
idiv
pop
pop
into
in
and
adc
adc
and
mov
mov
sbb
lahf
xchg
sub
xor
xor
mov
test
cmc
cld
and
aas
scas
fnstsw
inc
rcrb
cmp
add
mov
hlt
adc
inc
in
or
fld
bound
mov
imul
sub
inc
dec
aad
dec
or
bound
int
jle
je
adc
loop
jmp
lock
test
stos
stc
les
movsl
push
movsl
shll
gs
add
lret
cmp
xchg
cltd
cwtl
pusha
mov
inc
adcl
jmp
push
cmc
cwtl
push
fnstcw
mov
xchg
and
inc
pusha
push
lock
jnp
or
mov
xorb
mov
mov
jg
subb
mov
jp
and
ret
into
cmp
out
push
jmp
mov
popf
lods
mov
dec
mov
cmc
jbe
clc
and
pop
adc
mov
adc
andb
xchg
and
push
dec
cmpl
sahf
dec
xchg
or
rorl
mov
pop
mov
pusha
push
aad
mov
mov
cmc
push
push
push
inc
pop
mull
bound
addl
pop
mov
ljmp
test
push
xor
loope
out
lea
cmpsb
mov
outsb
cmpl
repz
stos
or
mov
call
dec
fidivrl
mov
mov
fidivrl
js
ret
outsb
dec
lods
jae
pminub
gs
cs
adc
pop
outsl
mov
pop
loope
mov
sbb
cmp
add
add
adc
outsl
inc
lock
fcmove
push
shlb
sbb
das
and
pop
mov
les
adc
out
pop
push
cmpsb
push
aad
adc
mov
movsl
sub
ja
cli
icebp
and
ret
jno
push
mov
ss
cmpsb
scas
repnz
mov
je
fcoml
jl
and
sub
out
dec
cmp
fs
or
xor
shl
cltd
mov
xor
jns
leave
in
leave
inc
pusha
push
dec
rolb
pop
jne
or
sbb
push
lock
fldenv
mov
ret
into
ret
sahf
inc
xchg
mov
pop
inc
and
fwait
out
test
inc
divl
scas
imul
or
in
int
xchg
ja
fcmove
pop
fistps
cmp
mov
mov
sbb
leave
andb
dec
pop
aam
into
fisttpll
xor
pop
int3
sbb
adc
xor
stos
cltd
mov
mov
pop
pop
cmp
cltd
andl
or
mov
adc
imul
mov
jb
hlt
mov
xchg
inc
js
and
test
push
pop
inc
scas
push
or
push
mov
push
mov
rclb
outsb
inc
jne
xor
push
lea
fnsave
and
ret
das
dec
nop
enter
shll
xchg
jl
xor
lock
std
push
daa
push
push
push
je
sbb
adc
fwait
sahf
inc
pop
hlt
decl
ja
push
lcall
xor
aad
out
xor
sbb
pop
xor
lock
cmp
push
adc
aas
loop
imul
jb
adc
push
lea
xchg
loope
mov
pop
pop
adc
sti
xor
addr16
or
mov
sub
cmp
cld
fisttpll
repz
lret
cmpsb
xor
adc
mov
clc
leave
stos
jecxz
inc
and
xorl
jl
jns
and
ret
pop
jno
sbb
shlb
mov
cmpsb
rcrb
out
pop
and
test
mov
sub
xor
sbb
sub
dec
push
into
repz
lods
stos
dec
inc
or
imul
sub
dec
push
xchg
mov
or
pop
es
jge
stos
or
faddl
dec
mov
adc
and
mov
jae
lods
cwtl
push
out
ss
in
sahf
aad
mov
sarl
jg
mov
popa
xor
inc
sbb
fistl
adc
mov
push
add
jae
mov
test
loope
xor
mov
data16
cmp
leave
lea
xor
popf
test
jae
xchg
fmull
pop
cld
jne
int
mul
into
int3
sub
movsb
pop
scas
cmc
sbb
xchg
cmc
pushf
rcrb
sbb
loope
loop
mov
loope
mov
add
inc
mov
sub
repnz
shrb
outsl
mov
cltd
xchg
cltd
insl
cmp
adc
mov
adcb
dec
cmpsl
lods
cmpsb
test
xor
sbb
aam
xchg
cwtl
jne
fwait
dec
pop
adc
jecxz
popa
cmp
pop
popa
test
cmpsl
insb
lock
sbbb
pusha
sbb
xchg
sbb
in
stos
es
idivb
push
add
gs
vmread
inc
in
enter
cmp
ret
inc
and
or
push
lcall
cmpsb
das
lret
jnp
ret
push
sbb
cmp
mov
in
aam
mov
inc
jg
bound
sbb
sbb
rcrb
pop
les
sbb
jbe
or
cwtl
test
stc
jge
xchg
andb
xchg
in
int3
mov
or
xor
xor
rorb
inc
cmp
sbb
leave
icebp
frstor
cmp
cmp
push
mov
in
add
test
in
mov
fdivrl
shld
lea
ds
push
test
or
push
mov
or
fidivrs
ss
aad
pop
xor
dec
fmul
outsb
cmp
enter
jne
mov
push
add
int3
test
xor
lds
inc
mov
movsb
jno
or
inc
sahf
pop
and
mov
fnstenv
cmp
test
out
mov
scas
lahf
adc
das
pop
mov
mov
sbb
outsb
int
and
addr16
push
xchg
adc
insl
or
fs
and
addr16
in
mov
je
mov
aas
mov
subb
movsb
add
sbb
fsubrl
insl
mov
push
sub
push
push
jl
cmpsb
stc
sbb
ret
movl
mov
dec
mov
clc
mov
in
movsb
jp
jne
repnz
mov
xor
imull
push
fdiv
fbstp
xchg
dec
sub
popf
jns
jmp
sbb
rcr
mov
call
sub
mov
or
inc
xor
imul
cmp
and
sbb
stos
sbb
test
rorb
ljmp
adc
mov
jg
ds
dec
movb
sbb
lret
pop
imul
fs
jae
sub
dec
shlb
pusha
xchg
dec
push
cmpsl
push
dec
cmp
dec
ffreep
jle
add
cmpb
ficompl
in
xlat
or
cmp
cmc
mov
push
xchg
out
add
ret
jmp
jmp
add
adc
in
push
inc
shll
lods
jbe
aad
out
pop
pop
mov
lea
das
sbb
in
daa
jae
adc
mov
add
sbb
shlb
xor
xchg
in
mov
jl
push
inc
leave
add
jle
push
pop
xchg
mov
scas
pop
jmp
xor
ja
push
adc
inc
xchg
lcall
cs
push
push
shrb
sti
imul
jg
aaa
daa
adc
xor
lahf
cmp
fldcw
jmp
pop
mov
mov
outsl
sbb
inc
mov
lods
daa
loop
push
mov
mov
shl
sub
jns
add
push
lcall
jo
lahf
dec
shl
adc
shll
xchg
cmp
je
xchg
ss
mov
ja
sub
outsl
add
jno
clc
xchg
lcall
cmp
mull
fisttpl
setnp
adc
push
fnstenv
lea
adc
orb
in
les
mov
and
pop
xchg
mov
add
roll
and
mov
xchg
jle
mov
addr16
mov
fiadds
xorl
insl
mov
ficomps
or
lcall
shl
shlb
dec
clc
xchg
add
mov
push
sbb
rcrb
clc
inc
and
loopne
jns
sub
cmp
in
adc
ljmp
fnstenv
inc
mov
cmc
inc
mov
or
call
fs
mov
or
push
jmp
insb
call
push
cmp
dec
push
sbb
jmp
or
or
adc
call
popa
mov
and
scas
sbb
jmp
jle
mov
sbb
shr
push
and
aas
add
movsl
in
cmp
faddp
rorl
imul
paddq
or
mov
insb
js
jecxz
mov
loopne
rolb
out
cmp
mov
or
jle
ds
mov
pop
add
and
sub
mov
insl
push
movsb
dec
pop
es
mov
inc
fs
sbb
push
shr
gs
hlt
stos
cmpsb
dec
jp
adc
xchg
movsl
lods
btc
lods
mov
aam
lahf
adcb
inc
out
dec
shrl
mov
mov
movb
into
sbbl
aas
es
inc
psrad
mov
inc
fistpll
mov
lock
lcall
lock
out
dec
pusha
fiadds
push
jmp
pushf
pop
movsl
daa
add
sbb
ret
test
insb
jp
in
js
rolb
inc
and
arpl
mov
lea
adc
cmp
outsl
inc
mov
data16
jno
mov
clc
jae
xchg
xchg
aad
xchg
es
dec
scas
lock
push
lods
jne
lods
xor
mov
jmp
xor
adc
fsubrp
cmp
dec
mov
outsb
or
dec
mov
fwait
cwtl
mov
jb
loop
inc
cmp
js
sub
das
jnp
sub
pusha
push
push
sbb
fbld
fwait
movsl
aaa
dec
lods
lock
jns
jns
dec
adc
inc
sub
add
arpl
push
xchg
in
iret
lahf
daa
or
pop
les
mov
insl
push
cwtl
jno
out
loope
mov
ret
cld
repnz
and
pop
push
push
sahf
inc
inc
cmp
pop
mov
sarl
mov
jge
mov
movsb
lret
add
test
sub
xchg
mov
mov
sbb
inc
std
aas
js
xor
cmp
clc
out
lods
dec
xchg
jle
and
pop
stc
mov
mov
sbb
notb
add
in
je
into
jne
movsb
jbe
loope
sub
fsubp
fwait
test
jno
cmp
pop
jnp
sbb
iret
pop
aaa
pop
or
fwait
inc
inc
loop
ljmp
dec
stc
clc
cmc
cli
pop
jl
test
testb
addb
xchg
dec
aas
jl
mov
out
iret
pop
into
inc
sbb
pop
add
outsb
mov
mov
icebp
and
jg
lock
or
lret
fnstenv
imul
pop
pop
movsb
jae
movsb
lcall
push
sub
in
test
pop
push
dec
cmp
mov
adc
xchg
movsl
or
aam
dec
mov
in
mov
pop
and
or
adc
pop
fwait
insb
push
push
cmc
xchg
addl
push
sub
mov
out
xor
xor
mov
cli
fidivs
add
inc
and
aaa
pop
jno
cmpsb
aaa
xor
xor
dec
arpl
pop
mov
lods
sbb
in
add
orl
add
sbb
dec
mov
mov
cltd
lods
addb
into
andb
pop
inc
jecxz
pop
lock
dec
lock
push
sub
sub
mov
daa
sbb
nop
mov
inc
cmp
test
shl
and
sub
and
and
add
inc
repz
or
ja
sbb
mov
cmpsb
dec
fcomip
lret
pop
or
sar
insb
lea
mov
aad
or
adc
jge
out
enter
stos
rorl
dec
xor
pop
aam
out
mov
mov
loopne
jge
cmp
mov
fidivl
pop
lods
mul
cmp
push
pusha
mov
imul
scas
cli
xor
xchg
sub
js
mov
dec
mov
enter
sbb
xchg
movsb
imul
adc
sbb
lea
movsb
std
xchg
inc
movsb
cmpsb
repz
loop
mov
adc
out
mov
xorb
enter
sbb
sub
jo
int3
add
jne
or
sbb
jnp
xchg
and
push
sbb
sub
jmp
adc
ficompl
add
iret
inc
mov
mov
rcll
mov
dec
ret
mov
notb
rolb
adc
into
pop
sbb
repz
inc
sti
fimuls
fldl
add
mov
adc
mov
xor
jb
notb
lea
lea
mov
inc
lret
jmp
and
mov
cmc
stos
mov
sbb
cmp
cwtl
xchg
push
and
mov
lahf
cmpsb
arpl
sbb
and
push
insl
pushf
test
cmp
sarl
sbb
xchg
xchg
xchg
mov
scas
sbb
addr16
sub
mov
xchg
mov
xchg
stc
jecxz
dec
lahf
adc
push
jno,pn
inc
xchg
lods
rcrb
adc
xchg
cmpsl
sbbl
add
mov
inc
mov
andb
sti
pop
cld
push
or
pause
ds
jbe
sbb
orb
sar
dec
aas
lock
push
sub
jp
push
popw
imul
fs
lods
xchg
mov
loopne
add
repnz
into
sbb
clc
inc
insl
and
repnz
jns
sbb
test
pop
in
mov
mov
pushl
jmp
stc
fs
cli
aam
repnz
mov
push
mov
imul
or
xchg
mov
leave
sbb
out
or
sbb
mov
dec
lahf
xchg
xorb
push
sahf
mov
imul
scas
xchg
jbe
loope
jae
dec
mov
xlat
sub
stc
inc
stos
mov
lea
mov
mov
out
arpl
test
mov
pushl
and
lret
xlat
jecxz
in
xchg
or
inc
cmpsl
lahf
lahf
sub
inc
cld
mov
sbb
fbstp
aam
and
inc
sub
mov
sbb
dec
push
in
mov
mov
sti
cmpsb
push
ftst
decb
xchg
xchg
sahf
mov
data16
data16
imul
inc
xor
dec
jbe
std
mov
cmpsl
data16
lods
shrb
sub
movsb
mov
mov
add
inc
sbb
pop
clc
out
xchg
dec
mov
mov
mov
pop
xchg
sbb
cmp
cmp
pushf
out
aad
push
dec
mov
lods
addr16
lea
push
loope
cmp
repnz
stc
and
pusha
push
aaa
hlt
jecxz
bound
push
xchg
push
adc
popa
roll
repnz
les
jle
jecxz
lods
addr16
repz
jg
mov
popf
cmp
mov
cmp
es
outsb
cmpb
or
je
mov
xor
mov
movsl
cltd
pop
clc
fcmovne
mov
outsl
in
pop
cmc
scas
push
ja
rol
fildll
dec
in
icebp
dec
loop
hlt
or
outsl
jbe
ja
dec
repnz
subb
dec
fwait
aam
mov
filds
xchg
ds
push
pop
popa
loope
fs
scas
mov
add
imul
stos
sbb
cmpl
xchg
adc
lcall
negl
aaa
pop
mov
inc
cmp
cli
iret
in
add
pushf
pop
shr
xchg
fcomps
or
fdivl
mov
dec
mov
jno
les
mov
pop
pop
xor
mov
in
pop
std
dec
push
rcr
dec
dec
addl
dec
sub
jmp
enter
sub
inc
lods
fsts
jbe
sar
mov
popa
add
adc
push
jmp
push
rcrl
shlb
iret
jae
cmp
call
xchg
mov
and
and
dec
mov
jecxz
jo
fsubrs
sbb
stos
xor
cmp
and
shl
fdiv
rcll
cltd
sbb
xor
std
inc
and
sbb
and
mov
outsl
ficoml
add
dec
mov
inc
lods
jle
decb
lea
push
pop
and
subb
addr16
repnz
mov
sar
loopne
mov
or
out
xchg
cmpsl
push
jnp
inc
repnz
lcall
cmp
pop
insb
add
std
cmp
lods
push
adc
sbb
cs
push
ss
pushf
jl
inc
hlt
xchg
xchg
xchg
push
rorl
subb
mov
mov
jo
xor
aad
je
pop
test
ss
icebp
add
dec
mov
sbb
sti
mov
lahf
mov
imulb
shlb
xchg
iret
data16
flds
shll
dec
das
sub
mov
cmp
cli
lods
fiaddl
ljmp
add
outsb
jecxz
int3
sub
out
ds
cmpsl
jmp
sub
adc
push
das
imul
dec
mov
dec
jg
cmc
pop
mov
mov
ret
test
mov
mov
xchg
gs
ret
sbb
inc
arpl
push
mov
inc
xor
adc
adcb
and
mov
movsl
shll
sub
loope
jae
xchg
enter
mov
xlat
addr16
lods
arpl
jmp
jmp
xchg
lea
fcmovnb
add
jnp
scas
shl
mov
add
push
icebp
dec
mov
in
adc
push
out
insb
xchg
mov
ja
inc
mov
sbb
mov
mov
inc
fnop
cmp
lods
and
sub
ret
mov
icebp
insb
xor
ja
out
add
mov
out
pop
jae
jle
mov
test
mov
mov
mov
in
fldcw
pushl
sbb
adc
enter
mov
sub
sarl
pusha
jno
lds
lods
ret
adc
repnz
sbb
addr16
aas
test
leave
lea
lret
cmp
in
dec
sub
push
outsl
je
fldl
xchg
push
mov
cld
in
pmaxsw
popf
scas
mov
fsubrs
sub
sub
pop
ljmp
es
imul
in
jns
movsl
mov
fildll
pop
clc
into
sub
xchg
adc
sbb
and
repz
mov
cli
push
dec
add
push
or
setle
dec
pop
scas
adc
mov
cmp
jno
outsb
test
sti
fcompl
mov
out
sbb
xchg
fdivl
fdivs
hlt
or
aad
clc
bound
add
into
and
insb
sub
mov
cld
or
sub
mov
inc
ret
cmp
scas
fldcw
sti
mov
fisttps
sub
clc
push
ficomps
stos
cld
cmpsb
outsb
shlb
mov
sub
daa
or
jp
xchg
repnz
sbbb
xchg
data16
fcomp
rcl
imul
outsb
cwtl
xchg
pop
pop
in
jne
xchg
ret
es
jbe
xchg
punpckldq
sbb
xchg
adc
mov
insl
xchg
mov
xchg
sbb
sbb
sbb
add
push
jecxz
jp
js
xchg
adc
leave
or
add
xchg
movsb
insl
sahf
ja
pop
and
jne
jbe
clc
sarl
mov
adc
push
lret
nop
sub
push
loopne
mov
lahf
push
adc
and
mov
or
fcmovnbe
dec
sbbl
pushf
adc
xchg
mov
insb
cmp
test
mov
add
icebp
pop
adc
inc
lahf
push
mov
jmp
jns
push
pop
into
repz
push
imul
adc
ss
cltd
mov
in
mov
xchg
jns
cmpsl
sub
out
mov
adc
ljmp
sub
repz
push
fists
mov
mov
sbb
inc
add
push
sbb
inc
and
sbb
pop
icebp
test
mov
cwtl
xor
mov
test
pop
arpl
clc
jns
cmp
inc
lds
jae
hlt
shrb
ljmp
mov
and
fs
into
shr
dec
rcr
xor
xchg
loope
notl
or
xchg
adc
js
jg
roll
sbb
pop
push
loopne
divb
sub
jmp
mov
cmpsl
outsl
test
shll
jo
lock
pop
xor
fsubl
or
cmpsl
shr
dec
sar
jne
adc
xchg
push
dec
loopne
xchg
cltd
push
push
fimull
out
and
ret
das
fistl
clc
push
insb
and
dec
or
mov
stos
add
das
pop
xchg
fldcw
repz
dec
xor
pop
int3
loop
inc
stos
in
ret
dec
fisubs
cmp
inc
mov
scas
push
fistps
js
dec
leave
sbb
jb
add
mov
add
or
in
fwait
inc
loope
and
add
loop
adc
xor
sti
std
in
cmc
insl
pop
adc
movsl
dec
xor
mov
push
pop
ret
cmp
fdivrs
icebp
adc
inc
lcall
dec
int
mov
pop
rolb
and
iret
push
jl
ds
repz
and
int3
push
arpl
stos
xchg
xchg
mov
adc
mov
in
pop
dec
mov
lret
adc
mov
adc
cmp
loope
and
imull
outsb
pushf
pop
out
inc
lcall
push
pop
das
outsb
cli
and
loopne
ss
or
sub
insb
aad
or
jns
cmc
outsl
test
pop
daa
inc
jnp
lcall
repz
mov
fcomi
into
inc
in
cmpsl
cmc
jmp
in
js
cld
lcall
daa
fwait
fwait
repnz
int3
enter
dec
add
nop
pop
repz
sub
push
fildll
mov
aaa
cmp
xchg
inc
and
jbe
dec
xor
repnz
sub
jnp
test
xor
call
aas
aam
sbb
push
insl
jae
out
inc
pushf
out
push
xor
push
ja
psllw
xor
fimuls
mov
fwait
popa
dec
popf
ss
dec
out
ss
popl
push
push
or
call
sbb
pop
pop
ja
imul
ror
jnp
xor
or
imul
call
bound
call
mov
arpl
inc
pop
imul
das
repz
aas
adc
mov
mull
adc
rcrb
mov
push
inc
inc
clc
xor
movsl
mov
mov
adc
xchg
cmp
sub
xchg
iret
xchg
les
stos
mov
xchg
aad
das
repz
scas
and
mov
add
and
or
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
dec
mov
push
cmp
bound
pop
bound
dec
jno
inc
arpl
fstpt
lahf
xlat
push
mov
fcmovb
cmpsl
pop
int3
sbb
xchg
xor
push
leave
push
jmp
outsb
push
xchg
xchg
incb
aaa
es
cltd
push
data16
fdivl
bound
lods
dec
test
enter
stos
decb
add
cmp
sbb
cmp
sub
out
xchg
lds
jge
add
loop
and
adc
sub
add
sub
pop
fwait
mov
ret
mov
adc
jle
pop
mov
pop
vmread
std
insb
fidivs
out
inc
in
pop
jle
or
adc
pop
aaa
inc
mov
add
mov
mov
decb
sahf
aam
and
ss
sub
imul
shl
jp
sbb
test
lods
or
mov
mov
push
mov
repnz
cmp
mov
jmp
cmp
xchg
lods
scas
mov
and
jecxz
out
in
sub
add
mov
fcmovbe
pushf
cmpb
xchg
cmpsb
sub
cmpsl
fwait
rclb
xchg
adc
sbb
enter
cmc
icebp
lcall
and
aaa
sub
ret
add
push
mov
sbb
adc
push
lcall
or
add
sbb
lret
inc
jl
jno
inc
daa
mov
mov
jge
or
cli
cmc
xchg
jbe
adc
xchg
xchg
inc
inc
mov
pop
stos
jae
pop
sbb
mov
cltd
shl
xchg
sub
xor
leave
sbb
push
push
frstor
sahf
dec
cmpsl
add
cli
lahf
jmp
adc
and
sbb
adc
mov
loopne
or
and
mov
mov
cli
imulb
leave
cmp
xchg
pushf
or
cld
pop
sub
and
jmp
pop
insb
call
cmc
imul
inc
mov
jno
mov
movsb
addl
mov
stos
push
xchg
push
scas
cmp
lret
push
rorl
repz
xor
sub
je
icebp
leave
addb
xchg
xchg
xor
call
add
jne
aad
mov
mov
rep
inc
push
sbb
neg
fidivl
jo
lret
mov
cli
jbe
jbe
push
jns
sub
adc
ds
fidivrl
sbb
stos
fs
ljmp
sbb
ljmp
rcl
mov
lret
nop
mov
push
mov
xchg
sahf
jnp
jg
xor
mov
vmovq
mov
mov
sbbl
cmovo
push
push
dec
popf
lcall
adc
or
pop
hlt
jbe
lods
mov
pop
gs
inc
popa
cmp
stos
leave
push
in
mov
sbb
mov
sub
jb
test
xor
sub
push
cmpsb
mov
dec
xchg
jae,pt
xor
movl
pop
int3
imul
mov
xchg
dec
test
lea
xor
negb
loopne
push
push
roll
stos
pop
xor
cs
int
and
inc
out
popf
dec
je
mov
outsl
iret
jle
in
int3
repz
enter
lds
ffreep
sbb
pop
push
popa
movsl
inc
mov
jns
xchg
es
out
dec
push
xchg
iret
mov
enter
jecxz
mov
in
in
movsl
or
jae
test
sbb
xor
in
imul
aad
mov
test
into
aaa
push
gs
push
jae
mov
jecxz
lea
mov
pop
pusha
or
push
ror
sbb
jle
sub
out
xor
mov
roll
ljmp
test
add
sbb
fstpl
mov
fucompp
add
pop
popf
aam
mov
into
movsb
xchg
subl
sub
cmc
xor
arpl
aaa
outsb
testb
mov
sbb
or
mov
imul
push
dec
jp
jb
scas
sahf
int
pop
mov
sub
mov
fwait
ja
xchg
pusha
inc
jmp
movsl
gs
jnp
cltd
sub
inc
add
andl
inc
sbb
sbb
add
push
dec
push
stc
xchg
dec
jle
sbb
sbb
in
sbb
out
mov
inc
das
inc
xchg
fldl
dec
xlat
adc
ds
xchg
jb
jns
xchg
pop
xlat
mov
and
mov
gs
xchg
mov
jmp
lret
call
test
xlat
sti
cwtl
jae
ss
mov
sbb
adc
mov
or
mov
dec
loope
xor
cmp
dec
das
xchg
push
xor
xchg
sbb
cwtl
add
xlat
fs
jbe
fldcw
ljmp
dec
js
inc
les
jo
lahf
inc
js
inc
mov
outsl
mov
inc
or
sub
test
es
fldenv
sub
mov
xchg
aam
ret
xor
xor
jns
push
mov
adc
inc
out
hlt
movsl
leave
jg
cmpsb
add
cmpsl
in
daa
and
mov
mov
je
or
test
xchg
das
push
test
daa
mov
jno
xchg
stos
mov
xchg
hlt
ja
and
lahf
inc
loope
pop
in
ja
jp
pop
lea
repz
cmp
jae
mov
sub
pop
mov
sahf
dec
sti
arpl
setae
aad
fistps
dec
dec
ss
adc
adc
adc
mov
loopne
cmp
mov
add
inc
stos
mov
sbb
and
aas
aas
je
test
out
pop
sarl
leave
imul
ficoml
repnz
xchg
mov
call
sub
fimull
push
mov
add
mov
jbe
or
xchg
pop
stc
push
xchg
xchg
and
incb
add
sahf
jge
xchg
aaa
and
out
sarb
sub
popf
in
pop
fsts
mov
sub
mov
cmpsb
pushf
mov
int3
push
mov
ja
ja
jp
add
xor
or
mov
pushf
mov
mov
call
icebp
cli
filds
mov
mov
stc
sahf
push
imul
cs
or
insb
sbb
dec
aaa
ss
fdivl
add
leave
pop
pop
inc
clc
push
gs
fwait
inc
loop
pop
push
cmpsl
in
mov
test
add
xchg
std
scas
arpl
and
jnp
out
xchg
add
sbb
outsb
sbb
cli
cmp
cmp
je
jo
xchg
inc
shll
loopne
lret
arpl
mov
call
fcoml
into
movsb
aas
xor
mov
xlat
lahf
add
inc
adc
and
fwait
adc
outsl
jge
pop
inc
call
mov
adc
dec
xor
jmp
aad
in
sbb
push
bound
and
pop
push
jle
add
pop
scas
xor
xchg
out
lods
stc
ret
xchg
js
pushf
adc
cmp
or
icebp
test
mov
fidivrs
adc
dec
inc
lods
xor
jnp
in
inc
push
test
xchg
push
cmp
mov
stos
pop
sbb
cmp
and
adc
adc
xchg
fwait
stc
lods
or
data16
imul
inc
fisubrs
cmp
mov
xor
pop
rcrb
xchg
mov
pusha
and
push
push
jg
pop
pop
out
mov
sbb
inc
int3
jne
cmp
xchg
sti
into
mov
loop
push
push
pop
mov
xchg
and
insb
dec
add
ret
xor
mov
das
pop
xlat
adcb
in
movb
cmp
push
bound
push
jle
sbb
vdivsd
fimuls
cmpsl
mov
or
daa
mov
movlps
inc
mov
adc
add
clc
hlt
pusha
aam
jp
insl
decb
xchg
push
in
dec
leave
loop
lret
inc
imul
arpl
mov
xchg
mov
aam
mov
repnz
nop
mov
and
inc
cmp
scas
movsl
stc
pop
jecxz
add
cmp
sub
xchg
sub
inc
mov
and
xchg
popf
push
sbb
push
mov
negb
ret
and
adcb
cmp
fisubrl
rclb
cmp
xor
inc
sbb
shrl
rcrb
test
xchg
js
mov
dec
xorl
pusha
je
ja
dec
testl
jns
mov
pop
or
dec
in
enter
insb
push
mov
int3
insl
xorl
sub
jge
in
adc
and
ret
or
enter
test
and
add
ljmp
mov
sub
jns
out
xor
push
fsubrl
xchg
lcall
pop
into
stos
mov
lret
xchg
imul
rorb
lods
sahf
push
test
inc
jge
aas
lcall
cmp
mov
mov
inc
cs
ficompl
arpl
in
rcrl
stc
push
loope
push
out
testb
loopne
gs
cld
mov
mov
cmc
lods
jnp
cld
cmpsb
in
movsl
out
arpl
test
ljmp
hlt
subl
mov
lods
xor
leave
out
xor
das
push
es
and
adc
sub
aam
xchg
lret
hlt
mov
cmp
test
sbb
xor
push
mov
nop
aas
ret
mov
jg
xchg
jae
jb
es
push
add
xchg
mov
xchg
push
loopne
push
jecxz
and
ret
loop
aaa
cmpsl
sar
lock
jae
inc
aam
jecxz
dec
jl
pusha
adc
fmull
aad
into
adc
repnz
jno
jo
mov
push
lcall
in
inc
mov
loopne
aad
fisubl
mov
cmc
gs
inc
arpl
and
jp
pop
leave
inc
mov
lahf
lahf
arpl
inc
push
int
fnstcw
sbb
cwtl
shlb
fmull
push
jno
push
mov
pop
adc
loopne
cmp
push
cwtl
out
scas
cs
ret
cmpsb
lods
fidivrs
dec
xor
pop
dec
test
sbb
lds
mov
cmp
lcall
sahf
and
pop
adc
loopne
lds
dec
mov
pop
lret
adc
fistpl
dec
xchg
sub
xor
push
jp
jae
mov
in
mov
in
push
ja
sub
pop
scas
adc
lds
cs
or
xor
push
movsl
in
push
daa
scas
aas
push
pop
pop
xchg
std
inc
and
mov
xor
popf
sarb
xchg
je
pop
mov
mov
inc
add
push
inc
test
lea
addl
xchg
and
dec
pop
test
aam
push
inc
stos
dec
dec
mov
cwtl
jp
insl
xchg
and
mov
mov
adc
sbb
mull
add
xchg
push
dec
bnd
outsl
adc
jne
jecxz
inc
or
mov
sbb
roll
xchg
mov
push
inc
jp
repz
pop
adc
push
fstpl
lock
pop
into
scas
int3
nop
lcall
cmp
adc
sti
mov
mov
js
out
popa
cmp
aam
jle
scas
mov
mov
lds
mov
arpl
sub
lock
push
jg
int
push
mov
or
or
in
cltd
int
and
xchg
lahf
jp
fidivrs
shr
mov
lods
mov
out
outsb
out
mov
adc
mov
rcr
lods
fdivrs
repnz
mov
sbb
iret
and
cmp
fidivl
sub
and
sub
or
int3
lock
shrl
cmp
cmp
popf
imul
test
and
rcl
mov
sarl
sbb
lahf
xorl
lock
xor
mov
or
mov
stc
push
repnz
and
in
fisttpll
mov
sbb
xor
ja
mov
cli
mov
add
or
push
test
ljmp
int
mov
stos
sbb
cmp
cmp
fisttps
scas
cmp
lods
jae
out
or
test
out
pop
es
xchg
sbb
or
jge
pushf
xlat
shr
push
sub
ss
fwait
push
dec
gs
xchg
and
jecxz
and
lea
insl
mov
adc
xlat
ficomps
jmp
clc
mov
fs
adc
sbb
xor
mov
mov
pop
xlat
xor
cmp
xchg
sar
or
push
je
inc
cs
pop
testb
xor
or
es
pop
mov
inc
jnp
ljmp
mov
cmp
ret
das
xchg
push
add
sbb
dec
pop
int3
and
cwtl
cmc
jge
inc
imul
sub
aam
dec
fs
subb
aam
push
pop
fs
and
stos
jne
das
jno
sbb
shr
leave
adc
sub
ret
fldcw
out
lods
in
movsb
leave
loope
adc
int3
loopne
icebp
mov
cmpsb
imul
jmp
adc
lods
jle
xchg
cld
mov
inc
dec
inc
cmp
rcll
pop
aad
es
pop
ficomps
mov
cmpl
es
fiaddl
enter
dec
aas
mov
jp
adc
or
mov
loopne
int
les
or
fldl
cltd
dec
or
jmp
imulb
iret
xor
nop
and
test
decb
aam
adc
lea
loop
negl
lock
sub
imul
lods
push
leave
rcll
cld
sti
mov
jno
cmp
jp
xchg
jmp
fld
outsl
pop
or
popf
push
cli
fadd
cmp
pop
push
xor
push
cmp
fists
xor
mov
sbb
jnp
hlt
jb
lahf
repnz
mov
push
pop
insl
adc
pop
stos
push
push
cli
aad
pop
mov
movsb
dec
addb
pop
cli
gs
mov
cmp
mov
mov
mov
push
scas
outsl
insl
fiadds
fmulp
cmp
mov
xchg
movsl
scas
mov
pop
push
les
jl
out
jo
adc
mov
nop
push
xlat
vmptrst
mov
push
loopne
clc
adc
cmp
jns
shll
cmpl
popa
pop
cmp
push
xchg
fsubs
xor
ror
dec
jno
out
sbbl
out
ljmp
push
pushf
outsl
mov
or
call
std
add
aad
into
ja
cmpsb
jp
lea
xchg
ss
arpl
pop
popa
data16
mov
add
cmc
rcl
mov
pop
mov
fwait
jmp
aas
adc
dec
movsb
scas
xchg
popf
sarb
and
sbb
mov
adc
add
orl
leave
xchg
cmp
into
jne
mov
push
dec
sbb
adc
icebp
adc
into
pop
xchg
fs
mov
outsb
xor
xchg
call
jae
lea
dec
nop
cs
mov
mov
or
mov
jge
out
idivb
pushfw
dec
and
ja
aam
inc
rolb
xchg
jns
push
pop
fucomip
sahf
sub
jl
or
leave
pop
pop
out
lret
out
fnsave
dec
cld
mov
mov
add
cmc
xor
xor
test
and
ret
fstpt
sub
mov
lcall
push
out
xchg
pop
jo
dec
cltd
adc
mov
xchg
repz
xor
mov
or
lcall
jcxz
sub
cmp
mov
sti
mov
adc
mov
push
add
stc
mov
inc
jae
ficompl
mov
imul
ja
pop
xor
cmp
jns
sub
jbe
dec
mov
inc
enter
cmp
inc
or
das
dec
fnsave
rcrb
dec
cld
jle
jmp
jns
mov
std
xor
int3
repnz
repnz
cmp
psubusw
xchg
and
add
inc
ja
dec
add
adc
push
xor
push
sti
out
mov
mov
arpl
imul
and
clc
addr16
loopne
test
pusha
aaa
jg
pop
movsl
adc
jecxz
or
push
hlt
cmp
ljmp
outsl
lock
test
int3
sahf
ficoms
sub
out
inc
sub
and
mov
jle
add
aad
enter
test
jns
sbb
jae
notl
sub
cs
lods
stos
sbb
inc
movsb
mov
or
les
icebp
add
data16
fidivl
pop
add
stos
in
clc
cld
pushf
nop
leave
sti
push
fwait
loopne
ss
mov
lcall
pop
mov
es
mov
mov
lods
push
jle
xchg
ss
insb
enter
dec
cmp
push
mov
scas
push
sbb
aad
movsb
mov
mov
mov
jmp
shl
mov
xchg
stos
jne
mov
xchg
mov
cli
adc
rcrl
xchg
mov
sub
jae
push
outsb
adc
dec
inc
enter
sbb
imul
xor
jne
les
jp
loope
aaa
push
adc
pop
jl
dec
adc
mov
int3
js
jae
sbb
sub
lcall
sbb
sbb
inc
xlat
imul
push
inc
out
leave
add
stos
or
mov
out
cmp
shl
mov
mov
sbb
jae
adc
xchg
lds
je
dec
add
jno
pushf
bound
mov
jmp
sbb
mov
inc
mov
ret
loop
push
popa
mov
inc
inc
xchg
mov
ss
lahf
pop
repnz
scas
ljmp
and
jno
push
adc
sbbl
ss
xor
cwtl
jl,pt
inc
bsr
sbb
shlb
push
daa
jno
aas
call
stos
jge
dec
push
mov
xchg
push
inc
repnz
movsl
dec
cmp
mov
sub
cmc
adc
cwtl
es
clc
stos
negb
push
xor
cmpsl
lods
fcoms
cmpl
test
and
mov
pop
shl
repnz
lahf
rcrb
loopne
cmp
sarl
scas
pop
push
mov
adc
aaa
pop
leave
push
dec
add
es
dec
in
aaa
xchg
push
jae
out
add
icebp
sub
loopne,pt
aaa
jb
add
mov
jne
mov
inc
add
push
popa
xchg
cwtl
fcomps
sub
je
imul
rcrb
inc
test
dec
sbb
loopne
mov
lcall
ret
ret
clc
xor
dec
dec
or
adc
push
dec
pop
adc
repnz
or
sbb
lock
cmpsl
mov
orb
jecxz
pop
aam
scas
leave
adcl
insb
int
es
push
sub
add
pop
dec
pop
mov
bound
inc
xlat
movsl
je
fiadds
sub
and
jle
outsl
mov
dec
clc
sti
mov
mov
adc
push
xchg
gs
push
inc
inc
popa
mov
mov
xchg
cwtl
xchg
adc
addr16
sub
inc
lods
push
icebp
scas
popf
jle
ss
mov
push
mov
xor
add
and
dec
out
and
push
aas
sbb
test
js
jmp
movsl
sbb
les
pop
jge
pop
push
out
sbb
adc
popf
sti
cmp
pop
popf
shlb
xor
lods
mov
inc
pushf
lock
pop
fsub
or
push
jbe
mov
add
mov
or
jecxz
stos
mov
xorl
scas
sub
cltd
sbb
mov
cmp
jne
out
jmp
mov
je
inc
insl
aaa
cmpsl
push
xor
push
jb
fs
imulb
sbb
sub
divb
daa
lret
add
test
test
fcmovbe
and
in
or
add
imul
outsl
test
divb
mov
sbb
imul
lcall
add
add
enter
push
mov
neg
cmp
in
mov
movsb
popa
mov
sahf
loopne
lret
mov
cmc
pop
sarl
cltd
push
neg
cmp
add
int3
cmp
test
lahf
mov
mov
jns
data16
mov
jns
mov
mov
loopne
cmp
scas
lods
arpl
dec
in
mov
paddd
shrl
dec
lods
leave
sub
cmp
mov
loope
ss
adcl
xor
xrelease
das
adc
pop
xor
dec
push
fcomip
jno
sbb
fsub
fists
mov
and
lods
inc
mov
in
popa
cmp
inc
fdivs
ja
fstl
mov
mov
jno
and
inc
xchg
sub
fwait
rcrb
dec
iret
adc
cmp
mov
nop
pop
fsts
push
fdivp
rcr
popa
mov
jp
jge
adcb
jmp
outsl
mov
enter
sbb
out
stos
sarl
push
jmp
out
inc
cmpl
jp
cld
call
adc
cltd
push
ret
movsl
add
mov
icebp
push
sub
mov
movsl
cmp
into
adc
dec
or
or
xchg
mov
aaa
shrl
mov
mov
push
int
pop
sub
and
in
push
mov
mov
jecxz
adc
lock
jmp
dec
pop
mov
push
rcr
dec
shlb
imul
inc
xchg
rcrb
xor
sub
add
loopne
in
xor
mov
rcll
sub
xchg
xchg
lcall
daa
aad
and
sar
jnp
mov
es
test
cmp
inc
xor
enter
dec
popa
loop
call
xor
out
pop
sbb
jns
jecxz
add
push
jne
fimuls
lods
ljmp
arpl
cs
inc
sub
dec
mov
cmp
jle
push
shrb
cmp
sub
inc
vcvtsd2ss
mov
mov
jbe
cmpl
xchg
test
sbb
push
xchg
out
adcb
aas
test
aaa
jg
out
mov
adc
scas
inc
fdivr
fstps
fdivs
aam
push
inc
push
sbb
sub
push
sub
inc
xlat
bound
sbbb
cltd
daa
imul
jo
les
mov
pop
idiv
hlt
dec
stos
lahf
daa
inc
pop
jnp
cld
outsl
adc
xchg
dec
popf
jb
mull
cmpsl
or
add
das
ret
insl
push
or
out
fs
daa
pminub
subb
sub
pop
pushf
pop
xchg
push
cmp
bound
sbb
dec
nop
shlb
cmp
mov
mov
pop
inc
adc
cmp
outsl
shll
pop
insl
dec
test
in
sbb
movsb
xchg
subl
fucom
xchg
lret
adc
or
mov
jo
fcmovne
and
push
in
ja
push
ss
jae
jmp
ja
push
stos
in
mov
mov
jecxz
dec
test
add
rorb
js
jo
movsb
inc
push
mov
movsl
int3
js
mov
xor
xor
and
sub
cmp
mov
scas
jns
dec
mov
leave
loope
cmp
mov
ja
sbb
sbb
insl
enter
lret
loop
imul
fwait
js
shlb
popf
test
sub
dec
xchg
xchg
out
jmp
loopne
lods
xor
popf
xchg
or
test
fdivrs
std
add
xchg
jbe
or
mov
out
hlt
pop
mov
cmp
pop
mov
push
test
mov
je
jne
stc
lea
and
int
ds
out
xor
inc
clc
into
adc
cmp
in
mov
mov
mov
or
push
or
xchg
test
pop
xchg
es
testl
xor
arpl
pop
push
push
push
daa
or
stc
cmp
push
xchg
pop
int
push
rclb
xor
popa
push
mov
rorb
es
dec
xlat
sbb
mov
mov
push
popa
shr
dec
subl
test
xor
mov
into
jb
fdivrl
cmp
cli
daa
stc
xchg
popa
popf
mov
divl
xchg
leave
into
insl
mov
push
je
jge
ret
lret
mov
stc
adc
push
clc
cwtl
test
push
ljmp
inc
dec
adc
or
mov
movsb
outsl
cld
xchg
pop
sub
imul
adc
movsl
lock
sub
adc
mov
inc
ret
or
xor
add
sub
jg
outsb
jge
adc
clc
sbb
popa
dec
cli
ljmp
push
int
jp
aas
das
cmc
push
jae
hlt
outsb
cmp
add
push
xor
push
popa
mov
push
xchg
sub
es
sub
adc
pop
mov
shll
sbb
mov
mov
hlt
out
sub
clc
cmp
xor
xor
pop
fwait
mov
out
clc
movsb
mov
xchg
push
and
dec
add
sbbl
or
push
mov
lods
in
test
mov
jg
cmpsb
push
mov
pusha
dec
xor
cmp
fsts
xor
add
ds
jbe
sub
inc
mov
xor
xchg
int
sbb
or
xor
shll
lods
cwtl
dec
shll
ret
dec
xlat
fisttpll
xchg
xchg
sti
or
dec
mov
or
or
int
and
mov
lods
dec
dec
xor
sub
lahf
test
stos
mov
xlat
mov
cmp
adc
cmc
insl
jae
sbb
mov
cltd
leave
cmp
aas
cmp
lret
cmp
call
popa
cmp
mov
jnp
xor
pop
test
cwtl
out
sbb
adc
pop
inc
or
cwtl
jo
mov
lods
pop
cmp
pushf
sub
adc
test
push
pushf
pop
insb
xlat
test
mov
sahf
sbb
mov
dec
push
daa
out
fldl
iret
cs
in
dec
ss
insl
scas
mov
nop
fimuls
push
jns
xchg
mov
cmp
jnp
or
insb
add
enter
xchg
fildll
inc
pop
jns
repz
pop
jecxz
subl
pop
jg
mov
fwait
and
cmp
mov
xchg
mov
inc
out
xchg
xchg
push
ljmp
push
arpl
pop
add
je
mov
fcoms
lds
ret
and
imul
out
dec
pushf
and
rolb
ffree
cli
lock
hlt
push
shl
sbb
cs
mov
iretw
xchg
mov
or
fnstenv
xchg
mov
sub
mov
add
lea
adc
stos
sti
out
sub
push
out
repz
movsl
cmp
int3
leave
push
js
insb
pop
bound
xchg
xchg
inc
mov
or
jg
and
lea
lret
sarb
mov
rcrb
or
test
or
pushf
jb
mov
pop
mov
pop
outsl
ja
inc
insl
out
mov
fisubs
daa
push
jp
cmp
xlat
add
test
ficomps
lods
leave
jmp
and
ret
out
xor
js
sbb
mov
pop
jne
cmp
cs
sbb
mov
out
insl
mov
pop
cmp
add
test
xchg
out
jp
aaa
adc
push
jp
test
mov
dec
std
loope
mov
sbb
loope
mov
in
out
ss
insl
ljmp
cmp
push
aad
pop
sahf
jae
cmp
std
sub
push
shl
xchg
pop
dec
dec
cltd
stos
cmpsl
jb
pop
sahf
stos
xchg
add
je
pop
lret
sub
sahf
ds
sub
cli
out
jle
ficoms
push
mov
push
test
add
jb
xchg
jmp
mov
mov
lods
repz
lea
jle
inc
fldcw
enter
sbb
pop
in
mov
negb
adc
mov
and
shlb
and
rcll
jo
js
inc
jae
mov
inc
jnp
loopne
add
mov
shll
adc
xor
sub
mov
mov
je
pop
fcomp
arpl
inc
push
and
xchg
mov
fwait
xor
orl
sbb
es
lds
testb
xchg
push
xchg
ret
aas
clc
inc
stc
mov
pop
dec
dec
cmpsb
popl
or
xchg
push
xor
in
xchg
push
xor
mov
fisubrl
sub
ret
fsubrs
dec
sbb
xchg
sbb
jl
adc
dec
movl
dec
xchg
movsl
mov
cwtl
fstpt
pop
fchs
flds
xor
ds
sbb
mov
add
daa
das
arpl
sahf
xchg
jecxz
cmpsl
aam
jno
dec
ret
mov
push
adc
jb
in
adc
pop
ljmp
push
add
add
inc
imul
xor
scas
push
cltd
stc
filds
cmp
test
movsl
jno
sbb
inc
call
inc
xchg
and
ror
and
scas
adc
xchg
pop
inc
sbb
or
dec
mov
popa
mov
nop
pop
add
mov
dec
ljmp
xchg
xchg
mov
int
stc
mov
mov
faddl
stc
fstp
mov
pop
in
cmp
xor
les
xor
mov
or
dec
orb
fwait
sbb
pop
cmc
sbb
movsl
sub
adc
mov
xchg
in
call
dec
mov
mov
pop
pushl
call
in
fbstp
jp
jns
pushf
push
mov
fdivs
push
in
pop
sbb
rcrb
inc
out
adc
in
mov
roll
mull
adc
mov
sti
mov
lret
add
int3
test
dec
aas
and
int
pop
dec
aam
ffree
or
mov
pop
cmpsl
mov
add
aas
jl
ss
sub
std
lahf
add
and
mov
and
shl
movsl
cmpb
je
scas
inc
inc
inc
repz
xchg
push
mov
insb
std
fldl
adc
dec
dec
jmp
push
in
popf
xor
insl
sub
sti
mov
push
add
jg
pop
ret
mov
int
cli
jae
mov
dec
mov
mov
pop
imul
add
mov
xchg
and
loop
jb
pop
hlt
les
mov
jbe
insl
or
mov
xor
push
jle
das
jecxz
push
sbb
pop
mov
shll
in
movsl
std
xor
inc
ret
test
fisttps
cld
aad
js
mov
jge
movsl
fildl
test
into
xchg
jns
cmp
cld
imul
cwtl
mull
add
add
rcrb
ret
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
movsb
mov
cmp
or
and
add
fsubr
mov
jns
and
add
cmpsl
ret
adc
imul
das
movsb
gs
fwait
mov
scas
xchg
je
xchg
sbb
mov
pop
ret
pop
mov
push
mov
pop
testb
pop
dec
pusha
mov
js
loopne
inc
sub
sub
cmp
iret
mov
push
imul
daa
lods
push
das
cltd
xchg
std
adc
cltd
lods
jmp
rclb
es
ficoms
mov
jnp
push
mov
rclb
xchg
xor
xor
inc
sbb
les
push
cmp
mov
cmpsb
stos
ljmp
cltd
scas
pop
dec
testl
xchg
outsb
pop
push
mov
sti
pop
lods
add
cmp
pop
rcrl
adc
and
push
fucomi
dec
loop
jmp
xchg
jmp
inc
xor
shl
inc
mul
adc
test
add
cli
js
jmp
inc
into
gs
mov
leave
push
imul
mov
jmp
stos
cmpsb
outsl
dec
mov
enter
dec
jecxz
stc
loopne
cmp
fidivs
flds
mov
mov
lgdtl
or
sub
sub
pushl
mov
std
jl
add
pushf
pcmpeqd
xchg
adc
lods
sbb
pop
mov
cwtl
adc
cmp
mov
fldl
enter
mov
arpl
add
jge
pop
sbb
xchg
dec
arpl
or
imul
cmpsb
xchg
fsubl
xor
sbb
mov
enter
and
clc
shlb
daa
mov
hlt
arpl
clc
mov
cmp
out
popa
mov
leave
sub
test
shlb
xchg
sbbb
lods
push
mov
dec
add
addr16
inc
ds
dec
mov
push
add
faddl
jp
std
xchg
mov
sub
push
sbb
js
mov
adc
or
jno
mov
mov
adc
push
adc
dec
add
mov
or
shl
dec
mov
lds
cmc
jg
js
xchg
sbb
out
iret
pop
add
cmp
push
adc
sub
or
inc
dec
std
push
out
xchg
mov
jl
das
xor
fisttps
fnsave
mov
and
push
and
jle
sub
mov
push
icebp
stos
push
call
lcall
out
pop
mov
je
cmpsl
adc
in
out
imul
adc
dec
add
cmpsb
xchg
push
out
mov
outsl
orl
movb
leave
adc
xchg
inc
jo
out
fwait
pop
mov
nop
pop
add
push
js
fnstcw
adc
jecxz
sub
sub
jb
in
outsb
ss
pop
xchg
ret
pop
adc
sbb
inc
sbbb
mov
negb
inc
lods
dec
cmp
in
outsl
add
fidivrs
sub
stc
inc
fmul
sbb
xorb
insl
subb
push
repnz
mov
insb
push
xchg
cmp
dec
jle
mov
and
or
mov
dec
cmpl
cli
xlat
andb
xchg
notb
lret
or
outsb
pop
mov
dec
push
add
sahf
jns
pop
hlt
stos
scas
ret
adc
pop
pusha
add
nop
mov
xchg
icebp
mov
rcrl
add
sarb
cltd
cmp
bound
xor
addr16
xlat
loope
les
test
sbb
or
push
inc
mov
mov
mov
jae
dec
jge
scas
sbb
pushf
or
cld
push
out
nop
add
cmc
pop
mov
sbb
dec
push
sub
mov
test
xor
enter
fmul
loop
push
loopne
jnp
cmpsl
out
mov
imul
outsb
lods
xchg
adc
sbb
subb
xor
int3
fnstenv
int
movsb
loopne
into
push
sbb
and
cmc
cs
push
stc
xor
xor
lret
inc
movsl
adc
add
cmp
push
ficoms
jb
fildll
and
hlt
cli
push
add
xchg
iret
dec
sub
cld
cmp
outsl
add
jb
sbb
stos
orl
add
push
push
decb
movsb
jg
mov
pop
or
add
scas
cld
add
sbb
cli
xchg
cltd
pop
sbb
std
je
add
add
inc
sbbl
sub
and
cltd
jnp,pt
jle
into
std
in
xchg
aad
or
mov
lods
pop
add
lcall
mov
test
jbe
adc
mov
mov
push
dec
cmpsb
data16
daa
dec
rorl
pop
inc
lret
ss
pop
cmp
pop
pop
aam
scas
mov
stos
cmp
jb
loope
cld
pusha
sub
dec
dec
sbb
push
pop
and
add
or
loopne
and
xchg
les
into
push
mov
inc
xorl
add
stos
and
outsb
orl
ja
xor
daa
out
adc
add
test
lods
cmp
or
adc
paddsb
push
fisubrs
imul
lds
xor
inc
popf
inc
pop
push
inc
in
into
jecxz
push
fdivl
xor
fs
sub
outsb
push
mov
and
xor
shrl
ljmp
mov
mov
mov
xchg
xorb
mov
add
movsb
or
mov
rolb
pop
jb
addr16
add
in
rorb
vmovapd
dec
xor
int3
jmp
dec
mov
sub
add
push
cwtl
jmp
sbb
jne
repz
or
pop
sub
rcl
lock
mov
shll
push
sbb
ret
mov
shrl
sti
push
iret
inc
aad
or
inc
lods
prefetchw
jmp
push
movl
inc
fs
sbb
add
adc
pop
pop
fiadds
sbb
xlat
push
mov
jb
adc
lret
xor
dec
add
rorl
mov
jno
fcomps
imul
leave
lcall
add
stc
fistpll
jle
ds
dec
outsb
bound
push
clc
ret
mov
dec
xor
cmp
sub
hlt
es
clc
add
push
mov
scas
andl
js
in
int3
dec
stc
sbb
sub
pop
add
lods
mov
jmp
pop
push
nop
jae
test
daa
call
xor
dec
sarb
ds
push
test
sub
lds
cmpsb
fsubs
mov
push
loope
xchg
sub
mov
std
jecxz
lds
pop
sahf
jmp
inc
xchg
js
xor
or
push
lock
test
shll
dec
fidivl
adc
sbb
dec
sti
xor
jnp
cmpsb
jnp
pop
jmp
mov
cmp
add
push
cmp
push
xlat
jo,pn
xchg
mov
xor
out
lret
jb
jnp
mov
xlat
mov
pop
pop
popa
mov
pushf
sbb
inc
cld
test
lret
or
lods
out
rolb
stos
arpl
mov
mov
les
popf
inc
adcb
adcl
imul
popf
lock
sbb
mov
les
xlat
mov
xchg
xor
addb
repnz
aas
sbb
xchg
and
sbb
and
shll
insl
dec
cwtl
jo
mov
out
imul
hlt
mov
scas
lahf
fcomip
clc
sbb
stc
push
decl
push
out
sub
out
test
lods
js
mov
int3
mov
insb
xor
outsl
inc
push
dec
mov
push
mov
jbe
mov
adc
testb
daa
push
xchg
push
xor
cmp
rcrl
int
mov
sahf
add
jge
movsl
jne
fbstp
xlat
out
jmp
cwtl
cwtl
xor
psrlq
mov
fildll
dec
insl
loop
mov
push
dec
push
inc
test
or
fs
pop
add
push
jo
ds
and
pop
repz
mov
ds
and
inc
fidivrl
arpl
push
mov
std
mov
pop
and
pop
and
dec
sub
movsl
mov
pop
inc
pop
mov
test
cmp
int3
and
js
push
icebp
int3
jmp
jge
popf
pop
rolb
cmp
sbb
cwtl
jne
fnstsw
push
ds
sbb
dec
sbb
frstor
mov
xchg
frstor
dec
push
jbe
pop
orb
sub
adc
pusha
mov
xlat
pop
jle
dec
add
and
dec
hlt
fwait
sub
add
scas
out
and
fwait
jno
inc
repnz
mov
lods
mov
xor
xchg
xor
inc
sbb
addr16
outsb
xchg
sub
mov
pop
xlat
sub
mov
xchg
push
ja
test
push
pop
faddl
fcompl
add
je
or
sub
test
ss
cmp
cs
lret
cmpsl
or
shll
sub
test
fistpll
mov
int
out
rorb
movsl
sub
push
fwait
lret
xor
mov
scas
int3
mov
jecxz
lds
sbb
cmp
ljmp
adc
dec
adc
jle
aaa
xchg
test
dec
dec
add
mov
adc
gs
push
jg
aaa
add
icebp
dec
adc
or
xchg
enter
repnz
push
jne
inc
dec
shll
or
xor
call
fwait
in
aam
jecxz
mov
ljmp
mov
les
mov
adc
push
pop
push
adc
sbb
jp
adc
stos
sbb
ror
pop
rclb
daa
js
sub
mov
inc
lea
notb
out
xchg
sbb
jg
inc
inc
addl
fimuls
rcrl
pop
push
sub
stc
test
push
cmpsl
call
cld
mov
out
loopne
test
pop
rorb
push
cli
and
push
pop
dec
mov
xchg
sbb
dec
nop
je
sbb
or
push
outsb
xorb
imul
idivb
sahf
adc
push
movsb
jmp
pop
cs
fisttps
push
shlb
add
jne
lock
pop
test
pop
mov
lret
mov
sub
sbb
pop
xchg
push
mov
orl
dec
xchg
cmp
add
aam
jae
outsl
lcall
icebp
sbb
inc
lret
push
sahf
fists
pop
add
movsb
and
xchg
mov
out
data16
in
stos
pop
fmul
pop
push
lret
mov
jb
mov
jmp
xchg
jecxz
mov
imul
push
test
or
push
mov
fcomp
or
mov
mov
xchg
or
leave
mov
rolb
mov
cmp
mov
mov
push
sub
dec
push
lret
test
mov
dec
xchg
xor
and
imul
sbb
lahf
arpl
sbb
pusha
enter
ret
adcl
mov
sub
push
jle
clc
movsb
xchg
dec
in
cmp
and
dec
out
ret
fildll
cwtl
test
or
test
pop
push
push
call
dec
inc
fists
push
fmuls
daa
sbb
test
inc
shll
aaa
inc
xor
xchg
sub
jle
or
imulb
mov
aaa
lock
sub
inc
push
push
mov
lods
push
ret
aas
movsl
sbb
int3
inc
in
sbb
dec
jl
xorb
fnsave
out
sbb
std
sbb
cmp
push
ja
mov
test
or
xchg
xorl
int3
dec
mov
jns
lods
repz
or
lods
xor
aaa
xor
int3
pop
jl
sbb
mov
jmp
sub
dec
cmp
fld
fcompl
lret
fnstenv
in
dec
test
push
loopne
test
cmpsb
push
pop
mov
mov
sarl
out
out
inc
and
mov
dec
push
cmp
or
dec
xchg
jmp
push
jecxz
mov
aas
les
mov
nop
rol
les
mov
adc
and
push
push
outsl
das
xor
xor
pop
add
push
push
mov
out
iret
xchg
dec
scas
xchg
mov
je
sti
push
pop
add
inc
enter
dec
or
nop
roll
fcom
dec
and
leave
clc
sahf
xor
not
mov
cmp
jmp
and
adc
in
rclb
sub
mov
imul
xbegin
test
or
shlb
jne
icebp
and
cmp
pop
cmc
add
mov
xor
cmp
cli
outsl
jo
pusha
and
dec
sub
mov
add
nop
pop
aam
inc
pop
jnp
mov
cmp
stc
nop
pop
mov
add
xchg
mov
loopne
mov
mov
sbb
cli
jbe
add
ss
mov
push
les
stos
jl
inc
dec
mov
sub
inc
out
arpl
or
pop
adc
data16
loope
push
jnp
xchg
cmpsl
insw
scas
imul
mov
fnsave
mov
mov
addr16
std
cmp
and
clc
push
push
inc
addl
out
dec
cmp
xor
ljmp
mov
push
sub
xor
mov
scas
jp
mov
mov
or
jecxz
add
fucomi
jno
sti
xor
sbbl
xchg
lret
push
clc
mov
and
and
push
scas
mov
testb
inc
jecxz
lret
and
and
and
xor
cmp
pop
popf
dec
sub
xchg
daa
dec
inc
ljmp
and
mov
sbb
jg
lods
jmp
jae
pushf
cwtl
mov
inc
ret
ds
js
sbb
pop
aaa
mov
decl
fs
enter
mov
scas
dec
xchg
out
inc
push
divb
cli
xor
sub
fstpl
adcb
sbb
lods
xor
int3
inc
cld
test
jle
xor
push
outsb
insb
cmp
or
out
imul
lcall
xchg
in
and
test
sbb
test
xor
mov
xorl
mov
pop
xchg
mov
sub
mov
filds
lods
fidivs
insb
and
and
jo
mov
inc
aad
aad
and
ja
mov
sbb
push
stos
or
jne
sub
sarl
cltd
cmpsl
jl,pt
test
mov
mov
adc
fs
cmpsl
pop
and
in
out
adc
push
add
aas
inc
notb
jmp
add
dec
jp
mov
je
and
shlb
push
xchg
mov
insl
push
fwait
jnp
cmc
mov
ja
lcall
sub
cmp
sbb
movsb
inc
aam
dec
cmp
mov
je
adc
and
jecxz
dec
into
shll
pusha
mov
sub
jnp
ret
adc
dec
imul
sub
inc
hlt
pushf
mov
push
popa
fnsave
xlat
adc
adc
or
jecxz
repnz
pop
addr16
sub
loope
jbe
jns
mov
inc
out
movsl
and
mov
sub
push
sarb
ljmp
int3
push
std
test
stos
insb
cmp
addl
pop
iret
mov
mov
cmpsb
jmp
jg
loopne
aam
sub
pop
and
push
daa
int
fwait
dec
mov
shrl
jb
sub
call
dec
daa
mov
enter
shll
ret
xchg
mov
xchg
repnz
adc
imul
ljmp
iret
add
jns
pushf
push
aaa
pushf
mov
in
icebp
xchg
jle
adc
cmp
stos
and
push
xlat
jl
cli
push
mov
mov
push
dec
inc
mov
stc
out
push
push
das
sbb
inc
jl
adc
xlat
mov
loopne
dec
fst
in
inc
std
inc
inc
es
popf
push
sub
mov
cld
sbb
je
insl
push
jg
sub
adc
scas
test
xchg
cs
xor
xor
stos
mov
fiaddl
jo
rsqrtps
cld
dec
loopne
mov
xchg
stos
sbb
pop
lock
jo
cltd
pop
mov
aam
xchg
and
pop
jb
mov
cmp
jns
gs
lock
push
cmpsb
mov
inc
push
leave
popf
popf
or
xor
sbb
test
loop
fnstcw
cmp
xchg
pushf
shrb
out
xchg
arpl
leave
dec
enter
fsubl
out
incb
fmul
data16
shrb
mov
les
or
mov
sub
xchg
jb
jl
out
xchg
movsb
sub
add
popf
orl
fsts
jp
int3
stos
mov
push
jne
pop
push
ljmp
mov
and
and
shll
imul
int
lcall
cmp
inc
out
rol
in
aas
fmull
dec
mov
lcall
push
cwtl
repz
dec
pop
xchg
xor
xor
lods
into
adc
js
and
out
ret
inc
ds
sub
push
pop
pop
mov
jo
addr16
lcall
scas
mov
clc
or
sbb
ja
cwtl
xchg
daa
adc
jno
outsl
iret
pop
in
push
sub
fstpl
iret
and
inc
pushf
pop
xlat
pushf
sub
or
sbb
test
stos
cld
push
nop
pop
push
scas
das
rorl
xchg
cmp
xchg
sub
aaa
pop
ljmp
pop
sarb
mov
out
int
xor
cmp
and
sub
clc
or
mov
jge
push
dec
pop
push
add
aaa
stos
and
add
shrl
cmp
pop
sbb
stos
call
dec
es
cmpsl
arpl
jmp
sti
dec
int
sub
xor
and
lds
xlat
test
sbb
lret
inc
dec
fwait
sbb
jno
hlt
ljmp
hlt
jp
xchg
dec
xor
adc
repz
fadds
inc
sahf
rorb
mov
cmp
std
jns
scas
into
pop
inc
lret
addl
or
lret
scas
pop
call
adc
jbe
loopne
mov
fwait
xor
pop
shl
sub
popa
mov
inc
aas
imul
sbb
push
xor
iret
dec
mov
cwtl
xchg
subl
mov
push
sbb
cmp
pop
xlat
mov
mov
ljmp
push
inc
mov
xchg
push
shl
push
inc
in
stos
add
popa
mov
adc
out
or
aas
mov
out
sar
dec
data16
inc
cmp
aam
sahf
fildl
jl
lret
dec
ret
addr16
pusha
mov
fwait
out
pop
in
cmpsl
shrb
sbb
movsl
xchg
pop
cmp
mov
add
adc
mov
loopne
mov
fldpi
fcom
sbb
jb
push
adc
add
push
scas
shlb
mov
mov
hlt
xor
jl
rcl
arpl
push
pushf
cmpl
dec
rorl
js
xor
dec
sbb
mov
adc
xchg
in
loopne
add
jecxz
gs
xchg
shll
dec
jno
xchg
sbb
jnp
pop
push
test
mov
push
fdivrl
xor
test
push
lock
push
mov
jno
add
negb
in
xor
mov
and
add
or
adc
cs
fs
add
ss
nop
jl
push
idivb
xchg
mov
pushf
out
es
jo
push
push
and
sub
xlat
outsl
or
data16
cmc
aaa
mov
dec
push
rclb
repz
shlb
rcll
mov
data16
jp
xor
daa
jg
scas
rorb
mov
xchg
inc
mov
lret
mov
push
inc
adc
shlb
cmp
mov
adc
mov
add
cmc
and
cli
pop
bound
and
sbbb
and
outsl
adc
mov
fistl
fdivp
mov
cmp
cmp
out
out
xor
and
popa
or
xor
clc
loope
add
adc
clc
add
adc
and
sub
sbb
lock
and
lret
pop
push
push
rolb
addb
ds
pusha
stc
cli
jb
rcl
loop
lahf
xchg
repz
jnp
sub
mov
cmp
or
add
cwtl
sub
imul
scas
cltd
or
add
cltd
das
adc
dec
test
ds
lock
fidivs
cld
or
sbb
adc
ss
xchg
xchg
push
xorl
addb
ja
jg
cmp
out
pop
lret
stc
sbb
cmp
cld
mov
adc
enter
dec
adc
fnstcw
ja
lahf
sbb
repnz
int3
popa
jnp
daa
fdivs
sub
dec
imul
insb
imul
push
inc
push
fs
jp
inc
movsl
pop
push
push
or
shlb
sbb
pushf
lahf
inc
movl
cmp
xchg
pop
sub
stc
scas
dec
js
icebp
xchg
repnz
lods
push
into
push
dec
xor
addb
and
fsub
and
xor
mov
xchg
popf
xchg
jnp
mov
lea
imul
insb
int
icebp
mov
inc
or
push
pop
lea
call
and
jns
filds
adc
sub
mov
sub
pop
nop
lock
mov
cmpsb
cwtl
mov
or
adc
fbstp
mov
push
cltd
jle
adc
xchg
repz
in
push
push
test
push
pop
incl
and
push
sahf
pop
sarb
test
and
cmp
rcrb
inc
inc
jbe
aas
bound
aas
test
cs
imul
and
shlb
out
fisubs
mov
mov
mov
or
ljmp
arpl
xchg
cmpsb
repz
and
push
hlt
lods
cmp
pushf
rorb
cld
iret
loopne
cmp
inc
mov
std
adc
inc
roll
dec
mov
sbb
inc
mov
jmp
inc
sub
loope
mov
jl
in
pushl
dec
and
pop
popa
cmp
add
fstpl
fstpl
sbb
or
test
mov
fistps
imul
dec
sbb
sbb
jp
add
cmp
cli
pusha
inc
or
fcmovb
call
and
jbe
flds
mov
push
pop
inc
fldl2e
pop
sub
and
xchg
popa
lret
jnp
dec
imul
jae
pusha
or
sub
fdivs
mov
ja
push
sti
dec
xchg
sub
push
mov
mov
out
in
jno
sub
mov
xchg
popf
inc
add
push
addr16
fnsave
push
pop
fldl
and
xchg
shll
and
cld
fwait
mov
jae
jnp
lea
pop
test
cwtl
pop
fiadds
inc
xchg
lret
add
and
into
cld
push
dec
popa
adc
aam
and
push
inc
jg
clc
test
push
add
jmp
imul
mov
mov
xchg
and
cli
lock
jecxz
jns
mov
pop
cmp
adc
cwtl
dec
sbb
mov
insl
jns
outsb
sbb
shrb
out
lahf
xor
pop
sbb
int3
push
add
mov
xchg
sbb
add
sbb
ja
push
and
mov
test
fistl
jl,pn
push
nop
imul
jns
std
in
outsb
push
mov
and
inc
aad
mov
imul
add
nop
add
lods
in
fcomp
out
mov
cmc
mov
out
out
jns
lock
adc
nop
out
and
push
xor
in
loope
push
xor
xor
xchg
push
adc
arpl
loop
inc
lahf
leave
adc
out
cmp
test
das
mov
andb
adc
jmp
cmp
jecxz
add
out
mov
pushf
imul
scas
jno
sahf
iret
sahf
adc
cmpl
inc
cmp
sarl
push
xchg
sarl
push
std
int3
fisubs
out
push
jae
sahf
mov
jbe
pop
xor
pop
repnz
and
mov
pop
clc
xchg
xor
fcomps
in
cmpsb
into
xlat
adc
scas
cmp
gs
mov
das
sub
gs
fstpt
gs
adc
ja
insl
jecxz
jns
rorb
mov
lret
mov
push
jo
jne
inc
pop
rolw
xchg
mov
push
mov
inc
sysexit
icebp
rorb
loopne
dec
lcall
int3
push
cmpsb
ds
ja
mov
movsb
jb
fisubrs
mov
xlat
adc
mov
sub
rcll
xchg
out
scas
mov
and
out
xchg
loop
das
mov
int3
rorl
push
mov
xorb
rcrl
aaa
lods
xchg
mov
hlt
and
int3
push
into
xchg
sar
sub
out
mov
mov
clc
pop
push
sti
loope
dec
je
jge
cmp
rcr
fs
mov
dec
cs
sub
cmp
lahf
dec
fdivp
faddp
test
mov
xchg
pusha
push
ja
or
sub
and
jne
and
jbe
inc
xchg
pop
rolb
adc
es
push
pop
js
mov
jbe
mov
xor
add
fcompl
out
repz
rorl
subl
daa
inc
jl
xchg
jg
subl
fdivs
push
icebp
mov
xchg
lea
loop
pop
fwait
dec
das
inc
lret
jnp
inc
xchg
push
movsb
pop
and
xchg
cmp
add
fwait
test
mov
xchg
gs
xor
js
sub
aas
xchg
adc
jl
cmp
pop
pushf
jnp
pushf
ljmp
jno
fwait
inc
mov
lcall
inc
movsl
mov
and
jg
enter
cmp
int3
sub
mov
xchg
mov
pushf
lock
shrl
cld
int3
imul
cmpsb
aaa
adc
sub
push
jbe
sub
mov
add
pop
lahf
movsb
jo
jecxz
xor
loope
dec
mov
leave
inc
mov
popa
push
cmp
fnstcw
adc
shll
or
cmpsl
fidivl
and
mov
mov
cltd
jge
repnz
stc
sbb
push
mov
pop
cmp
loopne
out
imul
dec
and
mov
jne
movhps
jmp
int
mov
jae
sub
cmp
inc
shrl
jle
hlt
fwait
sub
arpl
xor
xorl
mov
xor
mov
mov
jns
cld
cmp
fcoms
mov
jno
es
int
aam
lcall
sti
daa
insb
pop
in
fcmovnbe
mov
pushw
and
ficoms
cmp
mov
fmulp
sub
roll
or
iret
push
jb
scas
sar
into
push
jge
push
jne
xor
mov
mov
imul
imul
sbb
enter
sub
test
mov
xchg
add
aam
xor
iret
je
outsb
inc
pop
and
jno
sub
je
push
xlat
add
daa
mov
lret
rorb
inc
mov
les
xchg
fs
aaa
push
mov
outsb
rcrb
int
call
es
outsl
fidivl
jb
xchg
into
mov
sub
cmp
clc
scas
popa
jmp
test
lock
ljmp
inc
loop
movd
test
aaa
pop
adc
rorb
inc
adc
xchg
fcoml
xor
popa
mov
lods
push
lea
movl
mov
into
cmpsb
xchg
cmp
add
push
rcr
mov
add
stc
out
xchg
pop
add
pop
mov
xchg
dec
inc
gs
adc
dec
xchg
fs
xlat
cs
cmp
mov
in
jo
iret
push
subl
ljmp
ja
pushf
or
mov
rorl
jmp
or
and
cltd
in
out
in
jmp
push
nop
xor
lock
pop
dec
push
insb
and
int3
push
cmp
loop
adc
jb
and
ss
xor
test
inc
jbe
dec
test
sti
in
aad
inc
outsb
and
cmp
sbb
pop
rolb
pop
jne
jecxz
adc
adc
movsl
lock
loope
mov
mov
sbb
aas
cmp
ljmp
jg
sub
lea
lcall
inc
jp
test
gs
out
jle
sbb
adc
fs
mov
test
bsf
out
mov
add
lcall
sahf
jle
scas
push
mov
sub
cmp
int
pop
mov
add
shrb
pop
add
xor
adc
or
or
sbb
rcrb
sub
fldt
int3
scas
or
xchg
xchg
mov
mov
jnp
cld
les
dec
pop
cmp
stos
pop
fidivl
sbb
mov
pop
imul
pop
sub
add
adc
repnz
sarb
iret
cwtl
mov
mov
dec
sub
mov
add
mov
outsb
sub
jecxz
jnp
pushf
cmp
mov
push
fisubrs
loopne
inc
mov
lods
mov
int
ds
movsl
inc
fstp
test
and
mov
arpl
fcomi
pop
pusha
xchg
mov
mov
jae
sbb
cld
push
mov
xchg
enter
std
ss
lods
cmp
xor
push
aaa
add
xor
in
inc
inc
push
dec
into
test
dec
stc
insl
and
out
loop
cmpsb
push
int
mov
pusha
xchg
xchg
mov
mov
xchg
outsl
jnp
das
les
push
push
pusha
stc
lock
cmp
rolb
cmp
cmp
out
popf
push
cli
andb
scas
cwtl
loope
mov
pop
lret
push
jnp
lcall
jecxz
sub
xor
cmpsb
push
pop
pop
pop
cmp
mov
je
xlat
dec
mulb
push
pop
mov
add
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
loopne
hlt
bound
pop
bound
adcb
jl
lea
lret
and
bound
cmp
cld
jne
loop
mov
push
add
push
shll
fs
mov
mov
or
int
enter
and
mov
ret
es
mov
or
inc
lahf
cmpl
insb
lock
or
imul
pop
scas
rorb
lret
hlt
leave
loope
pusha
int
rcrb
out
add
mov
sbb
push
or
xchg
dec
call
popa
jecxz
jp
iret
lods
jne
aad
push
test
sub
movsl
inc
dec
stc
rcrl
in
dec
jb
std
and
lea
fstpt
arpl
push
and
pop
bsr
filds
aad
shlb
in
ret
push
dec
sbb
incb
fnstenv
lea
stos
popf
jmp
mov
xchg
fadds
and
pop
rcrl
hlt
dec
adc
pop
jo
popf
xor
ja
push
xorl
sti
jle
mov
pusha
pusha
fwait
adc
pop
mov
xor
jp
cmp
bound
cltd
test
shrb
ljmp
mov
dec
mov
adc
and
mov
lret
push
dec
mov
dec
rcrb
sbb
mov
lret
jge
pop
push
int3
mov
aad
and
fs
pop
scas
lods
push
orl
popa
push
push
loopne
sahf
add
mov
xlat
push
push
push
incl
sti
cltd
cmp
test
aas
push
mov
outsl
jle
stc
int3
mov
fs
sbb
add
mov
jecxz
aad
cld
or
inc
call
and
mov
pop
popa
push
ret
into
ret
jmp
popa
dec
xchg
bound
aaa
outsb
mov
nop
out
mov
into
lret
lret
mov
scas
mov
mov
push
adcl
sbb
fcmovnbe
and
movsl
dec
cmc
jae
push
mov
push
test
adc
pusha
fnsave
xchg
fs
and
xor
loop
pushf
add
imul
cli
xor
enter
mov
mov
and
mov
pop
cmp
pop
push
cmp
adc
mov
mov
mov
cs
push
jb
subl
loope
sub
lret
jnp
les
icebp
mov
push
rolb
aam
popa
rep
push
or
add
inc
scas
je
roll
roll
pmulhw
jns
xor
xchg
lcall
sahf
xchg
dec
cmp
outsb
push
cli
jp
repnz
hlt
scas
aaa
cmp
loopne
or
mov
leave
push
push
or
inc
jg
mov
adc
mov
push
lock
movsb
pop
imul
add
rcll
and
icebp
scas
cltd
sbb
push
repz
fsubr
popf
inc
aaa
cmp
mov
outsl
test
gs
call
or
adc
lods
pop
aam
inc
push
cmc
aam
xor
arpl
adc
data16
lods
cmpsl
jge
out
add
fidivs
lds
add
push
xorl
lret
and
adc
xchg
and
pop
jno
ljmp
aam
imul
push
mov
loop
pop
push
fsubr
xchg
push
push
mov
hlt
out
out
push
scas
dec
loope
repz
push
arpl
cltd
into
dec
loope
mov
btr
xor
mov
test
popa
pusha
mov
adc
scas
mov
stos
or
int3
lods
jae
dec
mov
inc
xchg
dec
lock
sbb
popl
loop
inc
cmpsl
xchg
icebp
lret
and
scas
arpl
or
inc
cmp
fdivrl
loop
aas
xchg
out
int
mov
in
stc
ficoml
pop
mov
iret
and
push
pop
jl
and
nop
out
pop
jge
cmp
add
aaa
cmpl
mull
push
repz
push
inc
jl
inc
pop
pop
sub
aam
cld
sti
adc
ret
mov
cltd
or
js
test
cwtl
adc
sar
push
fmull
outsb
clc
stos
sbb
or
adc
xchg
in
lahf
pop
xor
jbe
xchg
outsb
sbb
sbb
add
sahf
adc
pop
xchg
xor
adc
test
inc
testl
push
test
enter
fadd
sbb
aam
xorl
xlat
stos
mov
push
bound
adc
mov
movsb
imul
add
lret
scas
ljmp
cltd
cmc
ja
or
jo
jo
xor
jmp
rorb
repnz
dec
dec
lret
add
sub
inc
sub
sub
loopne
test
and
mov
cmp
into
mov
subb
out
insb
ret
scas
arpl
inc
xchg
mov
xor
push
push
in
pushf
xor
adc
mov
mov
cmp
dec
pop
push
fs
add
fistl
inc
jp
test
add
push
mov
sarl
jnp
fildll
test
cmpl
icebp
out
mov
hlt
movsl
fwait
jle
loopne
cmpsl
add
push
push
dec
fistl
inc
dec
jmp
inc
inc
pop
mov
jmp
dec
sbb
test
xchg
xor
sbb
jbe
push
and
ret
sbb
into
lock
lret
sahf
bnd
adc
addr16
and
loope
imul
insl
or
test
mov
shll
ljmp
popa
mov
lret
jbe
loope
sti
mov
push
cmp
ds
and
sub
dec
imul
adc
or
lods
mov
inc
fs
jbe
mov
pop
iret
cld
test
xchg
arpl
hlt
push
jg
outsb
mov
mov
mov
lods
out
add
mov
rcll
cmp
and
adcb
dec
jmp
xor
xor
aaa
fistpll
or
clc
fs
xor
pop
pop
or
je
shlb
adc
rcll
sub
out
and
daa
out
cs
and
push
icebp
push
xchg
jl
pop
jae
in
xchg
mov
xor
adc
push
outsb
repnz
mov
adc
shlb
aam
dec
mov
push
jge
call
pop
in
ds
sub
mov
fisubrs
lret
xor
aam
xorb
sbb
mov
ror
adc
shll
add
fildll
mov
fldt
sahf
stos
inc
adcb
outsb
bound
fists
mov
dec
ljmp
addr16
mov
jge
lahf
cmp
fsubl
fwait
or
mov
pushf
adcl
in
pop
popf
ss
fstpl
sub
xor
mov
dec
addr16
mov
jo
lods
adc
es
cmp
out
inc
push
ret
jbe
mov
imul
mov
push
les
ds
insl
mov
str
or
fldenv
shll
stc
sub
jg
ljmp
adc
cld
adc
fs
or
xchg
add
pushf
or
jns
scas
aad
insb
pop
mov
mov
cmp
mov
and
xor
push
ljmp
xchg
or
mov
sbb
stos
dec
jns
frstor
movsl
xor
inc
push
outsl
enter
mov
dec
cmp
sarb
fimuls
fimull
movsl
dec
adc
dec
lahf
add
sub
fldpi
sbb
fs
or
push
popa
ret
jb
xlat
pushf
mov
xchg
js
or
sahf
mov
adc
sbb
mov
push
int3
or
mov
rcr
test
subl
or
jmp
enter
fmuls
pop
mov
dec
mov
xchg
in
aam
cmp
xchg
inc
sub
mov
adc
cli
push
dec
jl
push
je
and
dec
push
mov
data16
ss
and
iret
popl
cli
pop
out
cld
fcompl
xchg
pop
mov
sub
lea
xor
or
and
ret
mov
fiadds
es
inc
pop
cmp
aam
or
int3
lea
clc
adc
ds
inc
test
lds
insb
jns
jle
es
dec
add
sbb
jle
pop
pop
push
mov
mov
pop
dec
cmp
lahf
ret
mov
add
xor
insl
mov
das
cmpsl
adc
lods
cmp
stos
mov
mov
addr16
add
mov
cmpsb
xchg
std
pusha
cmpsb
xor
je
fsubs
push
call
int3
daa
int3
mov
loopne
shl
push
jge
xchg
imul
inc
or
shl
mov
es
nop
fcoms
xchg
ret
jne
imul
dec
mov
idivb
fidivrs
lahf
mov
xchg
mov
mov
sub
jbe
enter
je
leave
xchg
xor
mov
cmc
repz
add
xchg
mov
imul
push
outsl
mov
outsb
or
aas
loopne
out
sti
outsb
test
xor
insl
aaa
roll
mov
sbb
in
jp
xchg
les
xor
cmp
sarl
push
adc
rcrb
adcl
popf
ret
or
sub
imul
mov
jnp
pop
mov
adc
in
stos
dec
push
or
data16
lret
push
mov
sbb
add
mov
insb
xchg
mov
push
std
loopne
cmpsb
lods
pop
sbb
cmc
pop
push
push
js
xchg
adc
cli
xor
movsl
cwtl
jl
dec
lods
rclb
pop
jmp
loopne
aam
les
mov
mov
roll
pusha
fldl
leave
cmp
sub
xchg
scas
dec
in
dec
mov
sub
sbb
in
xor
push
out
xor
hlt
enter
mov
adc
add
ljmp
scas
daa
stc
mov
jecxz
jle
fwait
lret
shrl
popf
mov
mov
int3
popa
sbb
sarl
xor
insl
addr16
sbb
aas
cmpsb
mov
ds
adc
adc
add
push
mov
sbb
xchg
shll
push
mull
mov
lods
or
adc
inc
stos
cmpsl
in
mov
mov
roll
mov
jmp
das
adc
nop
jecxz
std
cmp
cmp
loopew
mov
pop
mov
cmp
loope
out
mov
xor
jae
mov
in
xchg
shll
or
cmpsl
cltd
pop
push
jl
xchg
and
sti
cwtl
das
push
movsb
dec
jmp
nop
gs
lret
shrb
inc
pop
lods
push
or
test
lock
jno
leave
int
fldt
aam
jl
push
cmpsb
mov
leave
pop
add
rcrb
lret
lea
shrl
sbb
mov
sbb
iret
or
stc
inc
ljmp
push
jmp
rep
add
or
push
je
xchg
mov
movsl
movsb
xchg
sbb
and
xchg
movl
or
mov
js
es
and
insb
push
xor
lret
inc
fidivs
push
in
outsb
ret
xor
pop
loope
aas
inc
int
cltd
fimull
dec
stos
in
push
stos
movsl
add
inc
jg
mov
pop
and
jmp
out
pop
sbb
out
pop
mov
sbbb
aad
pop
jno
jb
pop
xor
add
xor
das
xor
push
mov
sub
xor
pop
xchg
pop
in
jns
fdivr
dec
in
std
divb
pop
adc
int3
inc
adc
addl
adc
mov
pushf
fnstenv
call
fs
js
sahf
push
jno
or
push
push
clc
xor
push
push
insb
mov
les
cltd
inc
lahf
xor
dec
sbbb
fstp
jb
insl
in
and
sub
fwait
or
andnps
aam
outsl
call
pop
or
outsl
mov
ret
popf
pop
cmp
shrb
dec
sub
mov
sub
and
xor
stc
fdivr
mov
out
incb
push
into
sbbb
sub
jb
jmp
dec
jge
xor
xor
inc
mov
cmp
jecxz
jmp
sbb
xor
dec
insb
xlat
jmp
adc
sbb
ss
imull
js
jl
fs
sahf
and
push
outsl
dec
push
xor
mov
int
mov
popf
test
mov
pusha
pop
inc
sbb
or
xchg
mov
sbb
shll
ja,pt
imul
je
jmp
add
sub
insl
xchg
hlt
mov
pop
sub
jge
call
aaa
loopne
cmpsl
push
loope
jl
aas
pop
mov
aaa
daa
pushl
loopne
sub
add
fxch
arpl
out
sbb
dec
pusha
pop
imul
pop
sbb
std
lret
adc
pop
loop
inc
pop
sbb
cmp
fstpt
cli
mov
imul
jno
mov
outsl
repnz
jecxz
jb
lret
ljmp
inc
mov
push
pop
sbb
mov
mov
xlat
jle
ret
mov
xchg
xor
push
cld
cs
leave
mov
lahf
xchg
enter
outsl
xor
mov
imul
sbbl
inc
adc
xchg
xor
mov
imul
std
inc
mov
aaa
xchg
mov
push
jo
lods
ds
insl
mov
mov
sbb
xor
mov
sub
push
repnz
mov
test
adcl
cs
sub
rcrb
sbb
gs
jns
mov
jp
dec
push
cwtl
inc
add
ret
insl
xor
arpl
and
mov
inc
in
cmp
lods
outsb
jecxz
push
mov
nop
add
mov
inc
mov
add
sbb
daa
call
and
cmpb
xchg
in
shlb
sbb
insl
mov
sub
fdivl
data16
push
jp
xchg
dec
mov
push
jg
and
mov
dec
xor
loope
sub
jle
fbld
mov
jge
mov
out
dec
adc
int
clc
mov
pop
inc
pop
sbb
rcll
xor
std
pop
mov
mov
pop
mov
clc
test
and
cmp
jle
jne
rcl
push
outsb
push
xor
arpl
enter
rorb
and
imul
arpl
mov
push
adc
push
adc
adc
bound
dec
fimull
pop
fmuls
lods
int
add
adc
jbe
cld
cmp
sub
jo
jae
out
out
fwait
jb
xor
mov
popa
dec
dec
xchg
add
push
mov
mov
pop
cld
sub
ljmp
mulb
mov
call
call
or
enter
dec
iret
adc
insl
mov
inc
shrb
sbb
scas
or
pop
xchg
sahf
xchg
popl
movsb
push
aaa
dec
sub
ficomps
xor
xchg
push
decb
xchg
js
inc
pusha
jns
jae
xor
pop
imulb
in
push
jno
or
in
and
cmpsb
xchg
sub
mov
cmc
hlt
jno
scas
aad
aam
push
int3
test
negl
push
call
dec
push
rcr
repz
add
push
imulb
and
lea
aas
dec
push
clc
inc
arpl
cmpsl
pop
mov
xchg
push
int3
inc
dec
sti
data16
js
addr16
fwait
sti
and
outsl
in
push
inc
in
adc
rcr
fwait
shll
mov
adc
jp
loope
arpl
jl
bnd
cmc
push
movsl
test
cmp
sti
pop
jns
add
adc
mov
cmp
xchg
clc
test
inc
clc
sbb
shrb
xlat
fdivr
mov
or
je
in
jl
push
pop
mov
xchg
push
out
sbb
scas
dec
test
push
cltd
add
test
shll
mov
push
loopne
xchg
stc
idiv
ja
aaa
sahf
clc
push
cwtl
daa
inc
xchg
jecxz
add
add
decb
mov
cmp
push
cwtl
mov
js
add
stos
leave
aad
jno
or
fdivs
in
xchg
lret
or
xor
pusha
imul
scas
pop
xchg
push
cmp
and
xchg
jge
sbb
or
es
push
xor
repnz
mov
clc
cmp
dec
outsl
or
lahf
or
xor
std
lea
inc
dec
leave
leave
or
dec
adc
into
cmp
mov
or
push
jmp
stos
arpl
adc
pop
leave
cmp
xor
scas
xchg
stos
lods
pop
ret
pusha
xchg
in
adc
mov
adc
in
jno
pop
fidivrl
or
rcrl
vcvtss2si
roll
add
stc
dec
jbe
pop
cmp
stos
pop
inc
test
push
add
rorb
sbb
adc
pop
out
cmp
sub
jle
test
mov
mov
cmp
cwtl
and
mov
loope
test
mull
xor
mov
clc
push
dec
pop
inc
jae
vminps
adc
jae
add
mov
pop
mov
gs
or
sub
imul
daa
xchg
pop
dec
adc
adc
ret
arpl
cld
jno
leave
lds
inc
xor
dec
add
mov
movsb
sti
mov
mov
jecxz
daa
push
push
sub
fdivrl
outsl
imul
mov
inc
push
inc
push
cli
xchg
jns
jg
imul
arpl
repnz
negb
rolb
add
cwtl
orb
sbb
jge
mov
movl
inc
das
mov
rcrb
pop
jecxz
outsl
cs
mov
xlat
popa
inc
xchg
xchg
imulb
xor
jmp
fimuls
bound
and
xchg
inc
adc
and
movsb
add
imul
popa
sti
sbb
ret
cld
shl
push
mov
or
or
cmpsb
outsl
std
rcll
mov
push
adc
pminsw
xchg
mov
cmp
mov
nop
cs
repz
loop
test
pop
dec
ljmp
out
les
dec
push
jl
add
lahf
aaa
xchg
nop
inc
sbb
aas
xor
dec
adc
shll
fcomps
negb
jmp
das
jno
aad
loop
cs
push
push
or
dec
stos
mov
jae
into
lods
fdiv
test
jg
lods
vsqrtps
pop
pop
xor
adc
adcl
int
and
push
cwtl
and
and
push
ret
or
and
dec
push
or
mov
and
mov
mov
push
push
or
fmulp
sub
push
jle
sbb
popa
out
xchg
sbb
iret
addb
and
or
or
imul
mov
jmp
sti
inc
and
mov
iret
iret
inc
add
pop
add
bound
dec
push
sbb
mov
sub
dec
mov
cmp
fs
leave
sub
lret
repz
mov
add
dec
ss
loope
inc
mov
movsb
fcmovu
fldl
cld
xchg
fcoms
pop
out
jae
cmp
or
push
mov
and
add
jb
ror
fcomps
sub
and
lds
imul
jne
sbb
scas
inc
mov
fnstsw
adc
mov
push
xchg
xchg
xchg
and
or
mov
addl
jge
das
adc
sbb
dec
popa
fists
push
or
lea
out
aas
push
cld
mov
push
dec
shrb
mull
in
scas
adc
jb
cli
subb
ret
pop
jl
fnstcw
jno
adc
test
jge
cwtl
pop
mov
push
sbbb
in
mov
das
mov
mov
in
jmp
loope
sbb
movsl
repz
mov
dec
cmp
pop
xchg
lds
inc
inc
and
enter
push
shrl
cmp
xchg
add
xchg
jno
and
cmp
lret
sub
xor
xchg
jno
sbb
pop
mov
js
lea
shlb
fcoms
push
and
mov
push
mov
push
fwait
outsb
dec
xor
ljmp
push
cmp
add
and
mov
rcr
loop
mov
mov
xchg
cmp
mov
jge
xchg
or
addr16
out
mov
and
sbb
sbb
loop
mov
mov
repz
adc
push
loopne
and
mov
stos
lods
inc
pop
mov
add
or
icebp
aaa
add
xlat
mov
cmp
jae
adc
mov
lods
dec
sub
jo
push
mov
add
dec
pop
outsl
inc
lods
dec
jbe
stos
repnz
sbb
out
hlt
daa
jge
mov
push
bound
mov
gs
popf
mov
test
out
push
or
adc
jle
or
xchg
sti
js
and
sarl
in
scas
mov
imul
adc
mov
add
jmp
push
cmp
pop
sub
les
mov
add
mov
cwtl
mov
push
adc
sub
stc
js
cmp
icebp
inc
popa
jnp
push
dec
inc
jl
xchg
cmp
xchg
das
cli
inc
dec
inc
sub
dec
dec
mov
and
pop
ficoms
in
adc
stc
adc
inc
xchg
mov
mov
outsl
jnp
inc
out
or
mov
bound
and
adc
inc
lgs
pop
adc
inc
fcmovu
arpl
sub
jle
xchg
xor
pop
stos
fdivrs
enter
xchg
call
or
xlat
lahf
sbb
or
push
rcrb
mov
movsl
test
and
outsl
data16
and
lock
xchg
insl
dec
outsb
orb
rcll
fstl
push
in
dec
mov
cld
lock
arpl
je
ljmp
inc
outsl
call
xor
stos
xchg
mov
mov
fld1
ret
fwait
or
hlt
test
loop
shrb
gs
and
and
pop
sbb
incl
mov
mov
inc
sub
push
push
bound
mov
dec
es
rcrb
sbb
inc
sbb
iret
adc
adc
pop
sbb
daa
or
inc
lods
jmp
mov
inc
add
mov
outsb
movsb
ret
in
xorl
int3
sbb
mov
fs
mov
xor
int
clc
mov
int3
out
mov
stos
push
fcoml
push
movsl
jp
add
mov
xlat
sti
dec
imul
andb
insl
aam
out
xchg
fisubs
orl
jmp
jne
popa
cmp
out
loop
divb
ljmp
sarb
cwtl
pop
dec
test
out
arpl
adc
mov
ret
icebp
jmp
and
aad
aas
push
cmp
or
mov
cli
lods
cmp
mov
fimull
sub
jne
int
mov
cld
repz
and
xchg
sub
test
aad
pop
lret
pop
std
mov
xor
jmp
ficoml
push
jae
iret
mov
add
cmpsb
jnp
std
jns
cli
mov
push
cmpsb
xchg
outsl
shll
aad
lock
xor
push
in
push
inc
movsb
mov
xchg
or
in
or
inc
sahf
push
enter
out
push
xorb
and
ljmp
push
dec
push
sbb
jl
mov
mov
bound
push
push
in
std
push
repnz
cmpsb
out
cmp
push
mov
add
sub
adcb
or
cmp
xor
sti
add
jmp
shll
sub
jge
pop
pusha
mulb
push
mov
mov
inc
movsb
add
jl
mov
or
test
dec
jmp
jg
shrl
push
clc
sub
cmp
ror
xchg
xchg
fidivrs
in
xor
push
pushf
mov
imul
sub
int3
cmpl
jg
test
nop
push
mov
ja
cmpsb
mov
iret
aad
xchg
xchg
out
das
pop
add
enter
gs
pop
adc
addb
popf
int3
cmc
push
mov
sahf
inc
data16
inc
mov
out
jmp
pop
xor
cwtl
pop
add
xor
gs
sub
lcall
scas
push
mov
mov
sbb
es
push
maxps
push
shll
je
loopne
jle
sbb
xor
dec
sbb
jmp
roll
sarb
das
add
push
pop
fwait
pop
jns
test
ret
sub
fucomip
sti
push
or
in
mov
test
pop
icebp
outsl
cmpb
jne
out
xor
pop
cld
jg
xorb
fcmove
dec
xchg
cmc
aam
stos
mov
jo
mov
inc
ret
loop
push
mov
fs
cli
sub
aam
push
xchg
cmp
jo
out
mov
test
outsl
js
cmpsl
popf
mov
mov
sub
test
push
mov
push
je
and
or
loop
dec
sbb
mov
jbe
push
int3
ja
pop
addr16
xor
insl
mov
dec
into
in
cmp
pop
lret
enter
and
inc
add
xor
fisttpl
sbb
insl
dec
popa
mov
scas
frstor
xchg
dec
cmp
mov
push
push
movb
push
jg
xchg
fucomi
mov
xchg
sub
jge
adc
lods
mov
mov
out
loope
inc
mov
jnp
mov
inc
insb
mov
jno
clc
idiv
nop
sub
mov
jo
out
in
lahf
or
dec
mov
inc
adc
mov
test
and
jl
cmp
out
repnz
xchg
pop
pusha
mov
fnstcw
lret
cwtl
out
jge
scas
xor
fadd
rcll
mov
cmpsb
gs
push
or
adc
inc
dec
loope
sub
int3
leave
shlb
sbb
mov
inc
mov
mov
add
xor
cmp
mov
inc
mov
jg
mov
and
cltd
pop
dec
dec
xchg
or
sub
stos
sub
adc
cwtl
adc
enter
dec
inc
or
xchg
jno
test
sbb
mov
es
inc
dec
pop
rorb
add
push
sbb
lcall
loop
loop
adc
cmpsl
pop
addr16
jecxz
hlt
icebp
jo
test
fisttpll
popa
pop
jns
add
in
fmull
clc
popf
push
jle
xor
loope
mov
sub
mov
data16
push
data16
xchg
add
and
sbb
mov
insb
mull
push
mov
xor
mov
mov
insl
imul
xchg
scas
push
dec
cs
hlt
or
or
sub
jecxz
ja
bound
icebp
hlt
lea
pop
inc
xor
insb
aaa
xor
jg
outsl
ja
push
cs
ja
push
mov
inc
lods
icebp
adc
xchg
jns
xor
imul
jno
jmp
fisubs
das
roll
sbb
in
or
sbb
xchg
sub
movsl
call
xor
mov
pop
popl
xor
inc
pop
fucomi
lods
pop
and
xor
shr
pop
sbb
test
out
pop
negb
add
repnz
cmp
dec
test
inc
jnp
or
jmp
frstor
ret
and
push
ss
inc
mov
fwait
loope
fnstsw
out
mov
cmp
test
ljmp
mov
stos
sbb
lea
dec
push
push
rorl
pop
dec
cwtl
add
out
xchg
test
adc
xchg
out
cmp
sub
jle
dec
scas
cmpsl
fidivrl
lret
aas
mov
and
insl
int
fst
pop
dec
xchg
ror
dec
mov
xor
cmp
enter
sbb
fisttpll
jb,pt
adc
loopne
jns
xchg
out
loope
xor
out
ss
stc
int3
rcrb
push
xchg
sbb
pop
mov
add
and
lahf
stc
das
sub
cltd
mov
dec
lret
aaa
mov
cs
enter
push
sub
outsl
push
arpl
push
fstpl
in
pop
pusha
andb
fistpll
in
repnz
das
push
and
adc
xor
jg
cmp
sbbb
jle
mov
mov
mov
xor
cmp
lcall
loop
js
mov
cmp
mov
imul
jb
or
mov
out
insb
sti
or
aad
fisttps
subb
mov
lret
lret
mov
mov
test
jge
add
mov
inc
xor
rep
sti
pop
push
fdivrs
mov
loope
jecxz
addl
mov
sbb
insl
fldl
adc
push
xchg
loope
sbb
scas
sub
lcall
scas
push
cmc
xor
into
jnp
iret
clc
lods
jo
mov
fmulp
repnz
add
outsl
xchg
fs
xor
out
push
inc
int
sti
orb
and
std
mov
xor
enter
pop
pop
cmp
nop
leave
popf
add
arpl
mov
icebp
es
ja
mov
jle
xor
fldl
test
add
lock
adc
ljmp
dec
std
aad
loopne
outsl
xchg
sbb
cmp
bound
mov
mov
int
inc
jne
loopne
addb
push
lahf
insl
cmpsl
bound
pop
fs
adcb
fs
clc
loopne
sub
jb
loop
dec
shll
repnz
roll
fldenv
dec
mov
enter
cld
jo
shr
movsb
sahf
les
cmp
mov
xchg
mov
mov
inc
sub
sub
mov
in
movb
xchg
sti
cmpsb
vhaddpd
jmp
adc
aas
xchg
inc
lcall
scas
mov
mov
lds
xor
dec
cmp
lock
dec
bound
cmc
scas
leave
ret
mov
jb
adc
stos
leave
jnp
rcll
jno
ret
lea
pop
xorl
mov
loope
shrb
repz
shll
add
and
push
int3
mov
test
push
mov
mov
inc
cmp
fcmovnu
cmpsb
cmpsb
je
int3
xchg
shlb
je
stos
xor
sub
pop
push
outsl
inc
leave
outsb
pushf
mov
adc
or
int
dec
imull
sarl
and
int3
sbb
or
loope
stos
mov
xorb
sar
or
scas
loop
push
int
and
ret
push
add
shl
mov
icebp
xchg
outsb
ds
push
mov
das
mov
mov
sub
mov
fildl
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
mov
insl
out
ret
jmp
bound
addr16
shlb
fnstcw
outsb
loope
inc
cld
jnp
cltd
enter
jmp
sarl
out
mov
mov
aaa
in
sti
lock
insb
iret
xchg
mov
sbb
popl
jp
daa
ret
stos
push
lds
js
or
sbb
pop
sub
mov
push
psllq
mov
fs
hlt
push
mov
xchg
out
loopne
mov
stos
das
mov
inc
push
repz
lret
ret
xchg
jnp
add
mov
clc
out
push
adc
pop
cwtl
and
fimuls
dec
inc
pop
fistl
test
adc
mov
mov
insl
sti
add
jg
scas
push
xchg
aad
in
imul
movsl
jle
mov
dec
push
sub
and
ds
or
pop
inc
iret
xor
aas
push
mov
mov
sub
mov
lock
push
fwait
inc
mov
jo
xor
push
mov
add
jae
mov
lods
dec
int3
and
xchg
push
ja
scas
mov
sahf
outsl
test
sub
cmp
xchg
mov
movsl
daa
lret
inc
jb
push
stos
mov
sbb
jno
rorl
jp
xchg
jg
jg,pt
mov
sub
test
add
sub
sub
and
fs
enter
nop
fsubr
pop
popf
in
ss
sbb
inc
mov
bound
sarl
insl
dec
dec
xchg
leave
adc
and
cmp
inc
cmp
icebp
xchg
jnp
fiadds
mov
push
in
inc
jle
dec
fwait
lods
fiadds
jl
push
mull
and
test
add
xor
mov
pop
jno
add
mov
mov
pop
adc
xchg
jns
push
jo
rorb
xchg
jl
jno
adc
ret
jmp
ret
mov
and
adc
adc
jg
push
jmp
dec
aad
outsb
les
jnp
sbb
loop
and
pop
jp
fwait
popf
dec
sbb
pop
outsl
dec
inc
and
pop
pop
cld
in
jge
mov
sub
xor
mov
cmp
and
and
dec
mov
leave
enter
sahf
loopne
xchg
mov
mov
xor
sub
rorb
das
je
dec
mov
xlat
outsl
ret
jmp
imul
mov
xor
dec
rclb
notl
lock
shlb
pop
xchg
addb
inc
xor
and
insl
fisttps
push
and
inc
outsb
rorl
xchg
loop,pt
ror
mov
pop
mov
out
sbb
enter
rcll
cmp
sub
mov
pusha
popf
cmc
mov
ds
pop
iret
jg
xchg
rol
shl
in
sub
imul
pop
jg
xor
pop
hlt
adc
pop
xor
mov
jno
jno
mov
cli
adc
jbe
xchg
mov
lods
fs
mov
push
inc
sub
inc
mov
pop
lret
sbb
xor
aam
jne
xchg
cmp
lea
sbb
dec
rcl
add
fs
jbe
sbb
pushf
packssdw
inc
jno
add
shl
mov
call
pop
out
sub
or
std
cs
pop
int3
ljmp
pop
js
mov
in
cs
jbe
pop
dec
xchg
ja
pop
fistl
les
pop
mov
jmp
mov
add
pop
cli
aam
pop
jns
addr16
leave
sbb
adc
xchg
sarb
push
sub
popa
jg
loop
divb
cmp
pop
test
pop
jno
int3
adc
pushf
imul
mov
cmc
sbb
dec
pop
movsl
shll
dec
and
or
into
loope
inc
cs
psubusb
cmp
inc
repz
cltd
push
inc
xor
sbb
cmp
dec
mov
push
xor
lods
icebp
pop
push
cwtl
xchg
xchg
and
pop
in
rolb
add
daa
std
shl
dec
xchg
cli
sbb
push
add
pop
or
pop
add
jns
imul
mov
sub
cmc
add
loopne
ret
mov
je
pop
lods
les
push
and
int
adc
or
mov
fnstenv
ret
mov
jl
hlt
sbb
loop
cmp
mov
das
sarl
movl
out
jno
loope
pop
loopne
jns
adc
jle
push
inc
adc
enter
or
popa
jb
push
pop
jno
das
cmpsl
xor
mov
data16
shl
mov
call
jno
mov
std
mov
jle
in
cmpsb
out
jno
sarl
push
pop
push
adc
or
test
arpl
cmp
or
sbb
sbb
subb
cmp
hlt
mov
cmp
nop
and
sbb
and
sub
loope
push
jae
push
sub
repz
inc
fs
mov
add
dec
mov
mov
push
lods
in
xor
out
mov
add
std
insb
shrb
sub
adc
pusha
or
das
cmpl
int3
ja
xchg
loopne
pop
lret
inc
fisubl
fistps
pop
test
or
idivl
xchg
adc
in
out
shll
sbb
jecxz
les
inc
adc
pop
jbe
aad
aas
and
or
cmc
jo
add
gs
punpckhbw
negb
dec
push
fwait
and
or
or
lahf
mov
inc
test
sub
dec
scas
push
not
push
loop
insl
and
cwtl
mov
push
adc
iret
fsubrs
arpl
outsl
jno
jp
rcl
js
fidivrl
xchg
in
loopne
cmp
xchg
pop
cmc
sub
cmp
or
dec
mov
scas
dec
mov
cmpsl
das
ret
iret
sub
pop
sub
fwait
push
test
lret
gs
adcl
jmp
popf
sub
pop
push
cmp
repnz
ljmp
cmp
dec
or
jmp
jmp
lret
dec
adc
mov
adc
inc
scas
or
mov
cmp
sbb
out
sub
jnp
sbb
push
fdivs
inc
repz
aaa
bound
adc
and
movhps
xor
add
push
cli
in
hlt
sub
stc
out
out
or
inc
jecxz
xor
mov
push
lcall
pop
in
iret
push
out
mov
mov
in
xchg
stc
cmp
mov
cmovle
and
mov
mov
push
nop
jae
hlt
adc
push
or
adc
add
sub
les
aam
and
stc
pop
cmpsb
leave
xor
mov
mull
ret
jbe
insl
and
call
sarl
mov
call
cmp
inc
fdivs
pop
cli
popa
nop
jecxz
sbb
jmp
jb
ja
adc
test
cmpsb
mov
inc
into
or
inc
cmp
gs
sub
pop
or
cltd
icebp
lret
or
addr16
popf
inc
mov
divb
pop
fildl
in
push
cmp
sahf
add
push
xchg
rcll
mul
dec
mov
and
xchg
push
pop
sub
mov
add
out
jne
punpcklwd
insl
or
push
mov
mov
lock
dec
add
scas
fcoml
cmpl
popa
jge
pop
lds
lret
out
xor
sub
movsb
xchg
push
jmp
fistl
xchg
dec
fcompl
or
stc
addr16
sbb
sub
lret
adc
lods
add
sub
sbb
leave
cmc
xchg
inc
push
inc
sbb
mov
jg
lret
sub
jmp
sub
xor
aam
data16
or
or
int
pop
int3
or
outsl
adc
dec
ljmp
xor
mov
bndstx
icebp
pop
or
pop
or
mov
std
sbb
testb
push
and
into
push
insb
add
xchg
adc
inc
jae
mov
cmp
jl
clts
test
xchg
and
sbb
ljmp
ret
or
and
in
test
dec
push
cmc
mov
ret
or
lret
jmp
out
sbb
jae
sbb
pop
dec
call
loopne
mov
lahf
push
add
mov
and
scas
clc
cmp
pop
int3
sub
imul
jne
idivl
xor
sub
pop
out
mov
pop
std
fidivrs
jge
lock
loop
in
jnp
or
data16
cmpl
enter
cmp
in
mov
mov
cs
mov
cmp
xor
mov
loopne
dec
out
insl
orl
cmpsl
fwait
stc
mov
fistps
push
loopne
nop
pusha
dec
mov
add
inc
and
xor
enter
and
add
or
imul
test
or
jmp
adc
hlt
xor
shlb
mov
fnstsw
jns
add
roll
out
mov
mov
push
and
xchg
test
insb
testb
jbe
mov
mov
imulb
std
int
push
and
loope
imul
test
mov
mov
insl
rclb
fs
stc
push
push
ljmp
mov
lods
push
out
inc
mov
jo
iret
mov
xor
xchg
fld1
mov
mov
and
mov
imul
inc
out
or
mov
int3
or
decb
shl
aad
push
cmp
enter
jmp
insl
jno
sbb
pop
cmpsb
aad
in
dec
jae
jb
lret
int
fdiv
nop
subb
jns
jbe
daa
sub
faddl
pop
cmp
adc
dec
std
add
loopne
xchg
dec
mov
scas
mov
sub
xchg
and
push
test
push
sub
jne
jns
repz
leave
or
jl
popf
dec
outsb
push
fisttpl
test
sbb
pop
popa
stos
mov
mov
or
inc
sbbb
push
push
outsl
outsb
mov
iret
lret
ss
enter
cld
mov
sub
mov
movsl
aam
xorb
inc
stos
lahf
movsb
mov
cmp
shll
push
xor
das
out
jnp
cltd
sub
add
nop
lods
push
fcompl
lds
add
bound
in
cmp
test
mov
cltd
dec
loopne
test
outsb
dec
pop
and
mov
inc
dec
push
in
rclb
loopne
fwait
xor
xor
das
insl
arpl
jmp
mov
pop
test
ljmp
xor
cmp
and
fsubp
ss
inc
and
cmp
ret
lock
add
mov
inc
cbtw
inc
add
inc
int3
out
int3
dec
fxch
movl
push
push
subl
mov
mov
sbb
ret
push
xor
int3
xlat
outsb
sbb
sbb
mov
dec
inc
aas
cmpsl
adc
push
sbb
mov
pop
pop
cmp
lahf
int
aaa
mov
fisubs
and
ret
loope
jecxz
enter
aam
sbb
cwtl
cmp
fsubrs
sbb
dec
jp
push
fucomp
fnstenv
and
inc
into
pop
inc
add
outsl
mov
xchg
add
inc
sbb
xchg
jmp
lcall
shr
mov
stos
sbb
outsl
xchg
hlt
inc
into
jle
dec
mov
mov
stos
jecxz
xchg
sbb
dec
cmpb
adc
pop
or
jmp
aam
xchg
mov
push
add
jg
mov
mov
pusha
ficoms
push
xor
aaa
cmp
js
mov
xchg
pop
push
fs
xchg
inc
and
xchg
outsl
mov
jg
or
push
cmp
xlat
adc
or
aam
mov
push
cmpsl
fwait
mov
movsb
xor
xor
leave
lcall
shlb
sti
pop
ds
mov
inc
xor
in
adc
mov
sbb
gs
mov
inc
adc
les
repnz
fsubs
mov
or
add
xchg
lods
ljmpw
mov
dec
fnstenv
ja
fldenv
fbld
imul
in
mov
leave
mov
or
in
xlat
cmc
xchg
test
sbb
insb
mov
cwtl
xlat
loope
cwtl
add
pop
mov
hlt
imul
rcr
inc
lock
ljmp
jbe
jecxz
rorl
into
mov
in
inc
add
mov
jmp
fidivrl
inc
sarb
data16
scas
xor
pop
aad
out
or
pop
mov
inc
arpl
fsub
dec
push
insl
push
cmc
dec
jmp
push
sbb
add
out
mov
lods
outsl
lret
cwtl
dec
or
xchg
mov
stos
mov
out
jnp
push
xor
mov
mov
xchg
jno
cmp
mov
mov
mull
push
jl
xor
and
ss
aad
push
cmpsl
xlat
jne
mov
pop
popf
adc
fcomps
insl
pop
cmpsl
sbb
in
fldl
sbbb
push
inc
sbb
inc
cmp
stos
xchg
int
and
sub
rol
fisubrl
rcr
mov
or
inc
mov
cli
adc
mov
repz
mov
stos
arpl
js
fdivs
iret
mov
push
xchg
xchg
sbb
sahf
mov
ljmp
je
push
pop
jmp
xchg
jg
cmp
cwtl
imul
or
push
or
pushf
sub
mov
mov
cmp
push
lock
lock
cs
test
lahf
push
fisubs
xchg
and
sub
push
mov
push
and
lahf
ret
mov
sub
sbb
add
cmp
je
enter
xchg
cld
je
test
jnp
and
sti
jecxz
fxch
fmuls
jle
rcl
push
data16
lock
loope
xchg
xor
sbb
jnp
push
mov
popf
je
mov
push
or
ja
or
cmpsb
inc
call
inc
or
ss
mov
pop
push
cwtl
inc
add
mov
andb
fyl2x
lods
sub
or
dec
rorb
cld
cmp
ficoms
inc
mov
dec
cwtl
movsb
sbb
pop
xlat
mov
add
mov
adc
test
cli
inc
fistps
call
xchg
aam
add
jecxz
jle
leave
mov
flds
loopne
int
leave
and
daa
push
in
pop
inc
sub
pop
cmc
std
mov
imul
xor
out
outsl
cld
insb
push
push
xchg
std
mov
jne
add
gs
icebp
ja
fdivrl
pop
pop
jecxz
push
xchg
lcall
inc
gs
ja
add
gs
inc
sbb
sahf
imul
inc
lock
jne
push
cmp
fadd
fcomps
mov
cmp
stos
rcrb
fmulp
xor
scas
imul
dec
hlt
mov
in
jne
cmp
icebp
pop
inc
pop
rol
andb
loop
jp
pop
adc
push
cmc
xchg
xchg
xchg
xor
and
ds
std
dec
xchg
mov
cs
lcall
mov
cmc
sbb
cld
sub
jmp
push
cmp
lahf
mov
jle
dec
mov
dec
imul
xor
call
insb
mov
fnstsw
adc
xor
rep
es
pop
test
and
pop
subb
int
aaa
adc
fstl
loope
sbb
sbb
push
int
xchg
and
cmp
cmp
inc
hlt
in
xor
push
pop
decl
cmp
or
clc
shrl
inc
fcoml
outsl
les
pop
and
or
inc
and
inc
sbb
cs
push
add
iret
push
cs
movsl
push
daa
cmp
inc
mov
ja
pop
xlat
or
fucom
cmpl
dec
test
mov
dec
scas
out
sub
mov
dec
pop
stos
clc
pop
mov
imul
int
push
xchg
inc
jae
rolb
jl
xchg
fmull
aad
enterw
pushf
xchg
dec
jns
ljmp
repnz
out
adc
negl
push
in
icebp
add
mov
lea
out
cmp
ja
loopne
shrb
xchg
dec
mov
imul
mov
push
cmp
ja
outsl
jae
or
lahf
xor
popf
or
xor
xchg
ficompl
jmp
sbb
arpl
sub
xchg
cmp
inc
in
outsl
add
aas
cmp
scas
mov
xor
movsb
push
test
adc
xchg
aaa
and
test
fcomip
add
aaa
fwait
xchg
mov
test
lahf
in
outsl
mov
mov
push
pop
and
leave
arpl
out
mov
movsl
outsl
xadd
xchg
pop
lret
test
pop
add
addl
inc
push
xchg
fwait
pop
sub
lret
scas
xchg
xchg
cmp
mov
xchg
fdivp
movsl
xor
jnp
sbb
add
in
sub
sti
lods
pop
sbb
jle
and
inc
mov
xor
and
fbstp
inc
mov
sub
stos
rorl
push
out
daa
jno
sahf
addr16
hlt
popa
mov
push
xor
fwait
jo
idivl
pop
lods
mov
addl
adc
ss
das
test
fbld
stos
jp
pop
lret
xor
scas
ja
movsb
xchg
inc
or
xor
dec
inc
sbbl
mov
dec
adc
popa
sub
int3
enter
xor
adc
sbb
out
std
enter
fstpl
mov
cmp
xor
dec
popa
sbb
cmp
add
xchg
int3
xchg
inc
adc
pop
mov
mov
aam
clc
jp
cmp
mov
cmc
xor
stos
lock
xchg
push
inc
cs
lds
and
andb
and
rcll
or
out
xchg
xchg
sahf
enter
repnz
loopne
xor
pop
hlt
mov
sub
scas
add
rcrb
andl
mov
mov
in
cmpl
fidivrl
iret
dec
xor
fnstenv
xchg
icebp
js
add
inc
mov
lds
dec
xchg
data16
cmpsl
mov
nop
xchg
push
sti
fs
and
mov
mov
cs
ja
adc
cld
mov
xchg
mov
idivl
inc
ss
dec
roll
testb
pop
sub
jecxz
or
fisttps
mov
aam
pop
sbb
xor
inc
mov
add
shlb
ljmp
jp
stos
movsl
aam
sbb
ficomps
inc
and
jo
fucomi
fucomip
out
loope
jne
add
mov
mov
in
sarb
pop
lods
xor
or
jb
add
push
orb
enter
xor
into
mov
mov
fdivr
ss
sti
and
xchg
out
fnstcw
mov
xchg
mov
aas
fwait
sub
adc
test
adc
dec
clc
or
mov
xchg
xor
insl
cmp
jmp
insb
pushf
shrl
cld
fs
movsb
mov
rorb
test
rcrl
add
jmp
pop
adc
addr16
sub
sub
mov
pop
push
and
jle
push
sub
lahf
dec
das
mov
sub
je
es
dec
cmp
fcomps
andb
mov
roll
inc
ja
mov
mov
jmp
stc
mov
mov
xchg
insb
push
dec
jne
jnp
popa
and
sti
mov
movsl
adc
mov
pop
jmp
push
jae
push
sbb
mov
mov
lahf
stc
out
inc
xchg
cld
out
push
aaa
sub
xchg
xchg
addr16
sub
cmp
into
jne
ret
lret
inc
mov
add
xchg
sub
frstor
imul
xchg
sub
orb
or
dec
mov
jg
movsb
aas
sub
and
movsb
hlt
mov
cld
cmpsl
daa
mov
cmpsb
arpl
lret
daa
ja
mov
dec
jge
inc
ljmp
pop
fcomps
xor
test
adc
cwtl
fstpt
aam
push
mov
push
push
dec
fsubr
mov
bound
lret
jge
pop
push
nop
lods
mov
fcmovnu
push
cmp
outsl
and
add
pushf
mov
or
xchg
mov
pop
or
popl
sbb
jno
inc
mov
popf
std
call
add
push
dec
lds
xchg
and
xchg
in
pop
push
xor
fisubl
lea
in
mov
or
fsub
repz
xor
arpl
lret
lahf
aaa
out
nop
mov
sbb
movsb
mov
pop
push
mov
lods
mov
cmpsl
inc
out
inc
pmulhw
adc
pop
scas
addb
push
orl
out
std
and
int
call
ss
mov
jl
cmp
add
jns
mov
mov
subb
fwait
sahf
add
movsl
rclb
insb
mov
imul
inc
jo
scas
mov
out
add
push
pop
ja
sub
cmp
pop
mov
sbb
imul
add
push
loope
xchg
mov
mov
dec
imul
xor
mov
mov
daa
mov
adc
fld
hlt
cs
sub
mov
hlt
lcall
stos
mov
aam
and
add
mov
xor
lcall
addr16
ret
dec
std
stos
add
ret
push
jb
mov
mov
sbb
cld
add
into
cmpsb
pop
repnz
lret
sbb
mov
enter
dec
repnz
cwtl
call
ljmp
cmp
jae
les
add
and
push
test
mov
sbb
push
or
ljmp
sub
test
pop
or
cmc
pop
push
pop
bound
dec
jecxz
subb
out
stos
pop
in
or
sub
mov
loopne
pop
push
add
jmp
js
leave
dec
and
push
jg
lods
sbb
push
bound
cmpb
cmp
in
add
xchg
sahf
mov
sub
sahf
mov
fldl
xchg
repz
dec
leave
push
lret
adc
stos
dec
fldt
push
into
movsb
filds
sbb
fsts
push
xchg
enter
loop
dec
sahf
mov
ss
scas
scas
cmp
bound
je
cmp
sbbb
sbb
stos
xor
mov
mov
jo
callw
push
or
jl
xchg
pop
rclb
pop
jmp
inc
jmp
add
push
xlat
ja
stos
mov
fidivrs
shlb
and
call
inc
mov
je
sub
or
dec
enter
pop
jle
lret
std
pushf
add
mov
jmp
jp
faddp
xchg
into
pop
inc
inc
jo
int3
cltd
les
std
adc
inc
jg
cmp
insl
out
inc
jnp
icebp
outsl
out
jge
insb
lods
ja
mov
jnp
test
sbb
xchg
pop
test
nop
cmp
and
dec
mov
pusha
mov
stos
cmpsb
iret
movsb
jae
pop
pop
data16
test
mov
jne
lods
push
add
sub
mov
lds
push
xchg
sbb
mov
mov
fists
in
into
sub
adc
mov
jp
add
xor
xor
rcrl
fbld
xor
clc
inc
cmp
mov
add
mov
es
or
mull
pop
mov
dec
aam
fcom
popa
jmp
adc
hlt
pop
cmpsl
scas
adc
fisttps
popa
shrb
sahf
call
ds
mov
and
jne
xchg
inc
outsl
stos
add
xchg
aam
jmp
pushf
sbb
lahf
mov
or
jno
cwtl
mov
adc
test
pop
movsb
rcrb
xor
filds
lods
aaa
push
pop
out
subb
cmpsb
jne
push
push
or
mov
lret
lret
lcall
dec
adc
mov
hlt
movsl
rolb
cmp
mov
mov
sub
cmp
mov
xor
icebp
and
inc
dec
jge
mov
xchg
fimull
cmc
pop
adc
or
jo
out
dec
cmp
adc
in
cmp
aaa
sbb
inc
pop
imul
mov
js
jmp
roll
scas
and
movsbl
sub
push
mov
cmp
arpl
shrb
mov
sbb
movsb
mov
mov
xor
rorb
outsl
pop
test
jae
enter
out
inc
mov
mov
sub
sub
cmp
pop
repnz
dec
cmp
stos
arpl
sub
fwait
sahf
popa
aam
jge
jmp
out
mov
jae
scas
cmp
adc
pop
xor
outsb
mov
ret
jmp
xchg
loopne
mov
movsb
repnz
inc
sub
push
inc
stc
cmp
mov
movsb
dec
push
sahf
jbe
mov
jg
pop
add
add
push
pop
repz
aas
aaa
pop
cld
loope
inc
iret
fdivr
cmp
push
fstpl
test
mov
xchg
xchg
imul
enter
dec
sahf
out
mov
dec
mov
xor
test
les
mov
lods
lcall
jns
in
rcll
stos
jecxz
push
test
arpl
and
push
pop
adc
mov
fs
pop
jp
mov
jns
sub
xchg
iret
leave
jl
pushf
pop
fwait
push
scas
inc
ret
mov
pop
je
push
into
lret
xchg
aam
sub
adc
mov
nop
mov
pop
sahf
in
sub
inc
cli
cld
pop
xchg
sbb
mov
divb
mov
jns
dec
icebp
mov
mov
lahf
addr16
jbe
add
xchg
mov
mov
cmc
scas
dec
mov
fscale
and
add
add
std
cmp
aam
jnp
lahf
xchg
pushf
fbld
out
imul
sub
xor
add
scas
imull
mov
mov
fcmovu
adc
push
pop
popf
loope
pop
xchg
scas
add
leave
cmp
iret
push
and
xchg
jecxz
lcall
lods
or
imul
cmpsb
adc
lcall
push
in
xchg
dec
mov
xor
inc
jnp
scas
sbb
and
pop
sbb
or
out
aad
ret
mov
lea
dec
or
mov
cmc
xchg
cmp
mov
jae
lds
xor
fs
lret
inc
roll
jl
fbstp
fwait
jne
adc
add
bsf
mov
iret
dec
mov
pop
mov
data16
jne
mov
repnz
pop
ret
fcomps
or
rolb
jbe
xor
jle
cwtl
insl
fs
inc
movl
sbb
sbb
pushf
mov
movsb
lods
push
xchg
sar
icebp
sbb
lret
or
pop
fwait
cmpl
jne
adc
nop
insb
jnp
xchg
jno
popa
mov
sarl
mov
pop
je
cs
cs
inc
aad
jne
je
pop
fwait
ret
jge
scas
cmp
dec
in
mov
fildll
jne
fisttpll
clc
jns
jae
aas
adc
xor
pop
pusha
daa
push
je
lret
aam
sbb
clc
les
int
dec
mov
popf
ret
gs
icebp
xor
cmp
jl
popa
gs
cli
cmpsl
mov
xchg
mov
jle
jle
mov
jecxz
outsb
out
or
sbb
ds
or
cmp
fs
int
dec
fldenv
fs
sahf
xchg
bound
clc
dec
or
xchg
fadds
push
dec
xchg
mov
mov
mov
or
scas
out
xor
std
sbb
mov
sub
push
leave
mov
sbb
lds
push
dec
dec
inc
cltd
mov
jno
push
push
sbb
pop
cmc
xchg
dec
dec
int
enter
sahf
inc
mov
aad
out
lods
arpl
inc
lods
xor
xor
imul
iret
std
push
mov
sbb
push
jnp
int
stc
in
imulb
rorl
xor
xchg
or
cli
or
dec
sub
sbb
push
out
jecxz
push
adcb
cmp
push
xchg
sub
lods
or
ljmp
outsl
aad
arpl
in
or
add
xlat
dec
pop
pop
jae
adc
mov
jmp
sbb
sbb
loopne
sub
mov
mov
mov
push
in
add
iret
jnp
imul
lods
dec
hlt
iret
cld
sti
inc
cwtl
xchg
pop
int
in
mov
pop
popf
adc
fidivl
sub
ja
fcomps
repnz
pop
mov
xor
test
mov
lcall
mov
stos
jae
arpl
and
sub
lahf
dec
inc
fsubrl
xchg
mov
pop
jb
ds
rep
pop
in
iret
test
mov
in
add
pop
dec
pop
xchg
scas
aas
cs
fwait
adc
les
and
loope
iret
enter
xchg
mov
in
pop
jmp
jle
inc
vhaddps
xor
sahf
divl
movsb
test
sbb
jl
in
outsb
xchg
dec
jb
imul
shr
fmull
mov
repz
out
stos
sbb
bound
out
jb
frstor
mov
push
xchg
push
fdivs
in
push
jecxz
fcmove
test
jno
repz
pop
dec
pop
sub
mov
mov
and
mov
mov
leave
and
je
and
inc
mov
push
in
push
js
ljmp
sbb
jge
scas
pop
mov
in
ja
mov
pushf
dec
dec
cld
dec
xchg
fstp
lcall
pop
cmp
aad
lods
pop
or
inc
cmp
cmp
jle
xor
cmp
lds
mov
push
or
jge
aam
iret
ds
inc
cmp
ljmp
xor
out
ss
dec
sub
sti
jbe
fidivl
or
js
add
mov
movsl
ss
sbb
push
xchg
cmp
sbb
test
cmp
cmp
xchg
scas
movsb
push
rorl
fidivrs
push
outsl
sbb
cmp
icebp
pop
or
sarb
pop
push
out
sti
xor
pop
movsb
mov
adc
push
into
cmpsb
pusha
mov
inc
xchg
jae
inc
negl
dec
arpl
sub
jl,pn
sbb
icebp
int3
push
adc
mov
cmp
sbb
sbb
cli
push
push
out
stos
push
xchg
pop
sub
mov
dec
push
bound
dec
or
pop
dec
lahf
lahf
xor
int
rorl
addb
ret
jmp
repz
adc
add
xor
rcrb
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
in
pop
pop
dec
lea
jmp
bound
out
cmpsl
pop
sbb
js
inc
sub
xchg
addr16
mov
adc
loop
movsb
sbbl
cmpsl
mov
mov
xor
add
stc
shr
jne
cwtl
xchg
nop
push
stc
es
and
ss
sbb
test
mov
andb
xor
jge
fisubs
call
std
or
test
xor
inc
push
xor
inc
fstps
mov
cmpsl
mov
mov
aas
push
fisttpll
cld
xchg
sub
jecxz
push
js
jmp
int
mov
enter
movb
xor
lods
jno
add
or
xchg
xchg
or
pop
mov
dec
mov
std
fsts
insb
pop
lcall
mov
pop
push
scas
xlat
and
hlt
shlb
pop
lds
dec
mov
das
ret
or
mov
cmpsb
push
in
and
out
dec
sub
add
xchg
sbb
daa
adc
mov
cmp
add
mov
pop
pop
lret
dec
lahf
lret
dec
xchg
ss
cmp
sarb
ror
subb
mov
mov
pop
lea
mov
dec
cmp
and
and
add
mov
xchg
sub
repnz
fwait
sbb
mov
sbb
xor
sub
and
subl
pop
jmp
xchg
insb
data16
inc
mov
iret
sub
mov
test
adc
ja
stc
pop
pop
or
cmp
push
lds
mov
inc
add
cltd
or
jmp
push
mov
mov
cmpb
sti
fwait
repnz
mov
pop
dec
push
inc
push
out
imul
cmp
sbb
mov
dec
mov
in
loope
or
out
jo
xchg
loopne
bound
inc
mov
out
lock
insb
dec
orl
and
orl
clc
jl
fimull
lock
jno
mov
cs
movntps
jns
mov
scas
mov
in
cltd
js
pop
cmpb
cmp
adc
dec
fstps
aaa
mov
inc
or
and
mov
das
std
pop
daa
das
dec
sbb
test
fdivrl
pop
clc
arpl
adc
pop
aad
jmp
and
pusha
call
sub
push
xor
pop
inc
fcompl
push
ret
call
shl
xor
adc
ja
adc
jle
push
loope
fs
stc
sbb
sarl
out
out
dec
adc
dec
sub
addr16
push
mov
jb
or
xchg
cmp
ds
push
dec
popf
push
sarb
jo
movsb
ret
out
sbb
pop
and
cs
stos
xchg
loopne
loope
sti
mov
insb
sub
xor
xchg
cmp
pop
jae
mov
fbld
fcomps
adc
outsl
jmp
filds
jns
cwtl
pop
or
jne
xor
addr16
sti
push
int3
and
aas
push
mov
inc
pusha
shlb
pop
mov
mov
sbb
cmpsl
out
and
pop
inc
adc
out
fstps
movsb
xorb
subb
and
iret
and
incl
and
jle
push
and
clc
xchg
inc
pop
jmp
ss
cmp
sbb
mov
adc
cmpb
sub
cwtl
test
fildl
pushf
push
jbe
xchg
int
cmp
mov
pushf
add
inc
push
fisubs
mov
push
fisubl
mov
mov
lock
jb
sub
jp
pop
repnz
outsb
adc
cmp
arpl
dec
jbe
adc
mov
jle
je
out
mov
xchg
jo
xor
enter
lcall
push
inc
mov
jno
jle
shrb
lods
inc
sbb
imull
dec
and
mov
xor
xchg
je
lods
stos
bound
ffree
mov
pop
lahf
loop
add
ss
mov
loopne
ret
adc
mov
cmp
mov
xor
cmc
inc
xchg
mov
and
arpl
dec
jmp
jmp
je
fcomip
sub
mov
loop
pop
aaa
jae
sbb
jo
xor
sbb
pop
jae
mov
mov
dec
jno
sub
aas
and
mov
push
add
xorb
xchg
mov
mov
adc
sbb
xchg
sbb
mov
pusha
daa
lea
cmp
xchg
pushw
outsb
fcmovnu
int
add
cmpsl
popf
movsb
jb
mov
or
shlb
call
das
pop
lret
push
sbb
sub
out
sub
push
cmp
or
xchg
mov
push
xorl
mov
sbb
jne
test
fcmovne
cltd
shl
jbe
jg
adc
mov
test
ljmp
push
int3
push
and
loope
sbb
insb
ss
pop
stc
mov
popa
or
and
jmp
ds
xchg
mov
jb
call
pop
mov
negl
pop
mov
jne
movsl
and
arpl
inc
and
frstor
stc
and
daa
jae
jae
and
iret
out
and
pop
test
sub
mull
mov
mov
xlat
unpckhps
lret
lods
jg
imul
int
jo
out
std
push
or
aam
loopne
xor
nop
test
pop
stc
adc
dec
imul
pop
aad
fimull
movb
cmp
mov
fwait
dec
lret
loop
out
pusha
movsl
add
iret
shrb
out
jl
les
jle
fisttpll
pop
pop
jns
aas
or
inc
shlb
test
icebp
jl
sbb
int
mov
mov
outsb
jecxz
push
aaa
jmp
dec
pop
xchg
mov
icebp
int3
subb
or
xor
arpl
inc
mov
sahf
call
pop
das
es
add
mov
inc
mov
xor
cmp
stos
outsb
jo
mov
mov
cld
jmp
mov
inc
pop
cmp
mov
mov
mov
jecxz
stc
mov
repz
loope
sbb
jmp
push
mov
popa
xchg
mov
jecxz
pop
sub
js
sahf
mov
ret
adc
lret
mov
xchg
stos
and
sub
lods
popf
lods
jecxz
das
enter
inc
xchg
rorb
outsb
je
movsl
xor
mov
push
mov
cld
sbb
js
inc
xchg
mov
inc
loop
xor
sbb
xor
xchg
inc
cmp
push
cmp
jb
fsubrs
sub
es
pushf
cld
in
mov
fbld
ss
jne
adc
mov
out
pop
mov
adc
jo
imul
in
rcrl
mov
dec
loop
push
ja
and
movsb
jbe
out
sbb
lds
sub
insb
in
mov
lods
xchg
and
sub
enter
jecxz
pusha
push
add
rcrl
pop
dec
jbe
push
cmp
adc
pop
inc
loop
lret
jge
addr16
cs
pop
fdecstp
mov
lods
jb
add
push
aad
mov
mov
xchg
pop
push
or
roll
pop
add
stos
push
lds
test
stc
xchg
outsb
inc
mov
scas
mov
arpl
lods
add
popa
popf
pushf
les
push
xor
dec
xchg
insl
mov
dec
add
loope
mull
lods
test
push
repnz
mul
xchg
out
test
pop
out
test
pop
pop
lock
mov
pop
clc
sub
adc
mov
mov
mov
negb
adc
rcr
mov
lock
or
sbb
sub
shlb
stos
lods
enter
mov
dec
mov
fwait
divb
sub
xchg
xor
movsl
add
repnz
mov
ret
orl
enter
iret
scas
adcb
loopne
mov
mov
aaa
cwtl
nop
xchg
xchg
sbb
fsubrl
sub
adc
mov
out
xor
dec
xor
das
lret
push
lcall
sub
or
pushl
dec
adc
xor
lock
mov
inc
pop
pop
push
inc
xchg
jle
mov
and
ljmp
stos
je
mov
adc
push
repz
popa
jecxz
dec
outsb
ret
mov
adc
mov
adc
xchg
fldenv
mov
and
dec
dec
imul
pop
popl
fld
inc
mov
push
xchg
sbb
cwtl
jge
fmull
loope
xchg
pop
cltd
mov
je
ror
cmp
push
push
mov
movsb
and
pop
mov
gs
insl
sarb
out
sahf
push
scas
or
jo
mov
lods
sub
int3
dec
popf
imul
hlt
xor
mov
xchg
loop
daa
lds
cwtl
dec
adc
cmpsb
test
jle
adc
cmp
mov
mov
imul
sbb
mov
or
into
outsl
rorl
test
cmpsb
subl
dec
mov
jg
imul
inc
out
and
sub
mov
xor
jo
cs
sbb
stc
sar
xchg
cmpsl
imul
insb
push
inc
repz
adc
sbb
xor
inc
mov
push
inc
xor
and
mov
mov
sub
pop
and
adc
pop
sub
outsb
push
mov
mov
int3
sti
ds
fcmovbe
add
dec
sbb
lret
movsb
adc
push
mov
cmpsl
or
cmpsb
fadd
das
ss
xor
dec
lock
stc
pop
xchg
inc
out
mov
out
xor
mov
add
es
into
adc
shl
xchg
add
cltd
sbb
add
mov
add
xor
push
out
inc
jle
push
push
jb
popf
sti
dec
clc
push
sbb
xchg
cwtl
pusha
xor
aam
call
add
mov
push
bound
mov
mov
or
mov
movsl
popa
dec
push
push
loopne
pop
sub
cmc
push
and
sub
test
fstps
in
adc
add
push
inc
movsl
pop
and
dec
add
arpl
gs
sete
in
pop
push
aaa
idiv
xor
jl
cmp
or
fwait
pop
push
mov
pop
and
cmp
mov
jp
aaa
sub
push
push
pop
sbb
sti
xor
xchg
dec
cmp
dec
notb
testb
std
push
out
sub
movsl
pop
push
fsubs
inc
out
shlb
cmp
pusha
adc
in
jge
push
sub
ljmp
pop
ret
loop
mov
repz
adc
and
loop
insl
imul
sbbl
jmp
pop
test
mov
stos
repz
negl
adcb
adcl
fisttpll
hlt
mov
cmc
roll
fdiv
push
cmp
les
stos
pop
push
rclb
icebp
push
in
jg
push
xchg
mov
dec
inc
push
sub
daa
scas
cmpsl
fwait
mov
mov
mov
xchg
sbb
dec
sbb
xchg
jbe
jb
outsl
pop
mov
push
fs
das
call
fstl
mov
cmp
sbb
in
js
fcomp
cld
mov
add
daa
mov
xchg
pop
lcallw
out
cmp
mov
insl
push
push
sbb
push
sbb
push
xor
leave
rcrb
outsb
push
push
add
lahf
push
in
clc
shll
and
bound
xchg
repz
lods
mov
in
fdivl
xor
inc
xorl
jge
enter
or
cmp
mov
stos
xchg
pop
or
sub
jg
jecxz
xor
popa
push
sahf
std
icebp
test
pop
push
mov
imul
shlb
sahf
stos
lcall
shll
insb
push
inc
push
and
pusha
cmpsl
andl
out
test
sar
adc
test
or
push
andb
mov
gs
js
xlat
inc
mov
cwtl
mov
mov
fldcw
push
sahf
test
sub
leave
cltd
sub
fsubl
mov
call
push
jge
and
out
rol
cmp
xchg
dec
sbb
or
fnstenv
jge
insb
aad
fs
out
imul
pop
movsb
bnd
mov
popf
fists
popf
fs
and
dec
add
stos
mov
cmc
fs
push
iret
push
cltd
cmp
aad
inc
cmp
pop
lahf
lods
fs
add
scas
into
pop
int3
mov
cwtl
mov
adc
jl
je
lds
adc
mov
mov
and
mov
je
cmpsb
icebp
jmp
dec
popl
xchg
orb
je
xchg
adc
sarb
pop
outsl
pusha
fldenv
mov
pop
cltd
fsubrl
andb
cmp
jnp
sti
mov
pop
lea
mov
xchg
jae
push
mov
shll
xchg
push
stos
push
or
pop
pop
and
stos
inc
cwtl
jg
aam
rcr
mov
lds
and
es
in
inc
and
sbb
pop
jbe
outsl
cmc
add
into
sbb
xchg
mov
aas
mov
cmc
dec
lcall
int
push
push
or
imulb
dec
jne
xor
inc
pop
or
mov
inc
outsl
mov
push
jb
hlt
xchg
mov
add
fidivrs
add
je
std
mov
pop
sub
adc
or
jo
outsb
dec
lcall
ror
push
xchg
jmp
aad
jno
dec
mov
or
test
mov
and
xor
mov
jns
and
sub
mov
and
xchg
testb
fiadds
add
daa
add
in
adc
into
mov
cwtl
inc
mov
mov
sti
mov
fistps
scas
jbe
push
xchg
outsl
out
lods
pop
out
pmaddwd
subl
mov
cmp
into
and
mov
cmpsb
xor
sub
sub
inc
push
mov
repz
ficompl
orb
add
and
jle
mov
adc
pushf
les
rolb
mov
orb
clc
fsubs
lret
rcl
call
sub
cmpsl
popa
mov
push
jno
sbb
out
orl
jo
inc
iret
sbb
lahf
push
push
or
jno
and
mov
subl
stc
add
sbb
cmp
lret
or
xlat
lea
cmp
es
mov
test
fnstenv
ja
jno
push
sbb
iret
aas
sbb
int
pop
or
push
pop
xchg
inc
mov
pop
ja
iret
dec
les
pop
addb
psubsw
in
data16
lds
xor
outsl
les
pushf
inc
add
cmp
pop
jmp
int
mov
dec
xchg
cmp
test
aad
insb
jns
mov
cmp
xor
js
xor
out
jg
inc
sbb
ss
cld
dec
pop
hlt
jmp
xor
adc
jl
sbb
xchg
push
pop
push
mov
mov
cmc
out
rorl
mov
enter
repnz
mov
sbb
mov
adc
cs
adc
jmp
sarl
dec
mov
jnp
stos
jge
jbe
push
inc
mov
lods
shlb
pop
add
shl
mov
shr
add
push
xchg
loopne
in
stos
ja
stos
dec
arpl
dec
jae
xchg
fwait
xchg
ljmp
and
fbld
fcompl
adc
sahf
cmc
dec
lret
int
inc
int
xchg
pop
pop
mov
out
pop
and
mov
xchg
inc
jo
push
clc
dec
sub
fsubrl
sbb
mov
inc
push
adc
push
push
movsl
push
sbb
add
push
popa
out
or
in
jmp
add
cmpsb
pop
pop
and
movsb
stc
cmp
xchg
out
aaa
lret
mov
pop
adc
gs
call
adc
push
push
sub
arpl
sub
fcmovnb
push
imul
dec
out
jb
call
adc
cmp
mov
dec
ror
fstpt
pop
xchg
and
cli
pusha
in
or
lret
jo
jp
or
push
adc
cwtl
lret
mov
push
mov
push
and
or
xorl
adc
das
daa
jne
xchg
shrl
sub
out
cwtl
icebp
adc
lods
push
dec
sub
mov
jo
movaps
test
call
rolb
jge
cltd
bound
dec
xchg
div
scas
aad
cwtl
inc
pop
lcall
dec
inc
mov
inc
pushf
and
or
subb
pop
jmp
pop
imul
push
push
dec
dec
sub
das
pusha
cltd
dec
out
push
std
inc
lret
sbb
pop
sub
and
dec
fdivs
jns
sbb
inc
xor
jo
mov
push
or
sbb
nop
and
jns
sub
mov
cmp
sub
xchg
xor
pop
into
mov
leave
divb
into
jle
mov
sbb
cmp
mov
add
shll
sub
cmc
fs
add
cmp
pusha
lods
cwtl
pop
notb
or
insl
mov
adc
lahf
fs
sub
add
pop
mov
inc
gs
test
les
or
xor
inc
pop
mov
mov
xchg
int3
test
pushf
cmpb
movl
dec
xor
jno
xchg
lret
pusha
lock
arpl
ret
push
fucomi
mov
mov
adc
lret
cmp
inc
jnp
cmp
fidivrl
cmp
pop
mov
bnd
lock
sub
in
or
jne
dec
sbb
push
dec
stos
call
lods
jo
popa
pop
mov
sub
jl
cmp
movsb
add
jno
or
mov
xchg
cli
rorl
fimuls
test
and
leave
jge
lock
sarb
mov
xchg
xchg
and
rcrb
xor
add
pop
aas
nop
testl
adc
repnz
sbb
push
sub
andl
inc
cwtl
cmpsl
cltd
sahf
mov
rorl
mov
popf
fcompl
sahf
mov
negb
test
mov
sub
dec
out
lods
sbb
jno
xchg
mov
dec
mov
sbb
fsubr
mov
out
dec
popf
mov
dec
inc
push
lods
xor
test
xchg
out
jno
cmc
les
sahf
sar
dec
push
stos
shll
or
adc
push
bound
cwtl
lcall
cmp
subl
nop
aam
sbb
dec
or
lods
mov
push
jbe
scas
fs
or
gs
xor
xchg
mov
or
mov
into
iret
inc
ret
js
popa
mov
pop
inc
or
sbb
dec
test
int
push
sub
out
call
rclb
movsb
repnz
insl
shl
inc
push
test
aaa
push
in
jmp
xchg
push
cmp
shl
mov
outsl
sahf
scas
rep
jo
mov
cmp
xor
dec
jmp
pop
xor
in
fdivl
xchg
test
jae
in
in
scas
sarl
inc
leave
loop
xchg
mov
dec
jg
xor
mov
adc
jecxz
loope
adc
aam
jbe
repz
mov
xchg
dec
insb
pop
push
pop
loope
jg
lock
and
insl
mov
pop
push
jecxz
inc
jo
dec
arpl
addr16
mov
andl
sbb
or
aad
mov
nop
fstp
call
xchg
sbb
roll
mov
and
or
pop
mov
mov
into
fcompl
xchg
push
inc
adc
mov
lods
pop
leave
and
clc
mov
sbb
sbb
mov
jno
push
mov
push
fs
ja
mov
cmp
repz
mov
les
les
pop
dec
cs
xchg
pop
xchg
mov
pop
pop
stc
add
or
std
lea
leave
inc
sub
push
dec
rolb
mov
pop
out
call
std
test
pop
inc
out
cmp
int
and
add
pop
setle
cmp
cwtl
out
leave
sarb
mov
adc
cwtl
js
mov
ret
popf
xchg
add
scas
fcomip
test
stos
imul
xor
jns
cmpsl
xchg
xchg
xchg
cli
stos
sbb
and
lock
cli
push
std
sub
add
arpl
ljmp
mov
fwait
out
outsb
je
inc
xchg
in
cs
and
mov
in
dec
cmpsl
or
sbb
jmp
addb
in
andb
mov
mov
dec
in
sub
lods
xchg
pushf
jo
imul
loopne
xchg
in
aad
test
out
jp
dec
cltd
lods
add
insb
inc
adc
std
jge
fimuls
jmp
jae
jbe
push
or
add
mov
push
movsb
fs
mov
lea
imul
xchg
pop
sub
shll
dec
push
loope
or
dec
mov
mov
xchg
movsl
pop
dec
xchg
mov
insb
or
or
test
add
lret
xor
popf
sbb
sahf
sbb
loop
cmp
sbb
mov
xchg
in
sbb
jns
cli
add
js
xchg
aaa
xchg
popl
js
mov
in
popa
daa
pop
xchg
clc
jne
fwait
test
pop
push
hlt
add
inc
cmp
pop
xchg
xchg
inc
and
fwait
adc
popa
fiadds
cmpsb
insl
push
sub
hlt
and
adc
mov
iret
ficompl
pop
mov
xchg
fcmove
stc
outsl
fimuls
mov
and
adc
mov
jle
out
in
inc
xchg
test
stos
les
hlt
or
xchg
sub
mov
mov
lahf
cmp
jbe
push
gs
inc
lahf
jno
xor
pop
xchg
addr16
cltd
adc
push
test
fs
dec
adc
imul
xchg
lods
jnp,pt
cwtl
into
insl
outsb
insl
push
adc
push
movsl
jae
repz
inc
outsl
popa
pop
dec
push
push
ficompl
push
xor
push
dec
and
fimull
bound
xchg
rcr
xor
out
cmc
fld
fildl
cmc
cmpxchg
mov
jno
and
xchg
pop
ret
cmc
nop
movsb
lret
adc
cmp
sbb
mov
roll
mov
sbb
sarb
add
mov
mov
pop
out
repnz
scas
pop
lahf
dec
mov
sbb
js
xchg
fistps
outsb
inc
andb
xchg
insl
clc
inc
aad
repnz
inc
jmp
hlt
adc
hlt
pushf
push
pushf
outsb
mov
loop
stc
cmp
stos
mov
std
xchg
dec
popf
lds
cwtl
push
push
push
into
mov
hlt
or
and
pop
cld
cmp
mov
fildll
out
xchg
imul
xor
daa
std
je
inc
adc
aad
xchg
cmp
adcb
and
inc
aad
pop
test
add
lods
fcmove
push
test
and
lcall
inc
pop
mov
jnp
inc
pop
mov
fs
mov
aam
arpl
cmc
jle
cmp
add
jne
mov
in
inc
insb
mov
inc
push
sbb
mov
and
jnp
xchg
nop
add
loopne
pop
test
cwtl
lret
jno
sbb
rcll
jl
jae
jge
fwait
mov
mov
mov
test
sub
add
stos
cli
lea
frstor
mov
xor
sbb
popf
das
out
push
mov
fs
add
rorb
scas
jo
jle
fiadds
xchg
sbb
xchg
push
dec
jecxz
jecxz
cmpb
push
mov
jge
sbb
std
inc
int
sub
push
jae
adc
jecxz
outsl
xchg
inc
mov
test
xchg
xor
je
iret
movsb
in
jmp
arpl
add
inc
jb
jne
jmp
insl
push
sbbb
out
stc
lret
fucomi
pusha
lcall
sub
shll
dec
test
ljmp
adc
aam
outsl
xchg
push
xor
jbe
cmp
test
dec
fisubrs
or
ljmp
rorb
jg
bound
push
sar
cmpsb
xor
shll
sbb
cld
pop
mov
xchg
rcrb
jnp
jle
lods
cmp
push
mov
orl
push
ret
fisubl
mov
ds
sbb
sub
inc
sbb
lods
cmc
and
ss
loope
repnz
xor
cmp
loopne
lods
adc
lock
jle
xor
xor
imul
dec
negb
xchg
sbb
lds
insl
fidivs
fldcw
call
cltd
cmp
insl
std
jnp
mov
xchg
push
loopne
jo
and
xchg
xorb
sub
aam
dec
fadd
adcl
pusha
out
bound
jne
fs
jge
mov
push
rcll
mov
pop
adc
cld
cmc
mov
cld
in
pop
out
pushf
xor
cmp
into
repnz
int3
imul
ror
icebp
sbb
adc
sahf
push
fld
jp
test
fists
scas
fs
aam
sbb
sbb
mov
mov
sbb
mov
mov
fbld
bound
stos
shl
mov
hlt
xlat
jo
data16
push
and
push
push
add
inc
sub
cmp
mov
aas
les
jb
cltd
dec
jg
pop
cmp
push
mov
inc
iret
nop
pop
sbb
xchg
push
test
aaa
xchg
imul
and
cmc
mov
les
loop
add
dec
jmp
dec
adc
and
pop
arpl
movsl
loopne
fiadds
mov
ret
scas
nop
push
pusha
cmp
repz
adc
jns
and
sbb
sbb
arpl
mov
sbb
int3
je
ficomps
or
sbb
push
mov
aad
dec
lcall
mov
rep
and
repz
sahf
adc
scas
arpl
lahf
push
push
daa
jmp
jnp
movsl
je
push
aaa
push
inc
jbe
adc
inc
jb
sahf
push
leave
jae
add
sbbl
cltd
sub
mov
outsl
out
pop
mov
daa
pop
adc
mov
adcl
sahf
movl
jmp
ret
aad
xor
mov
push
pop
cs
dec
test
leave
push
and
rcl
mov
and
add
sub
loope
add
sub
nop
jo
out
and
test
or
pop
add
rorl
mov
jbe
lret
daa
mov
rcrl
xor
jnp
xor
cwtl
insb
icebp
push
vmovlps
and
call
shll
lret
sbb
stos
pop
and
aaa
push
addr16
jae
aas
cmpsb
ret
ret
push
jae
add
andl
je
xchg
fsts
cmp
add
ss
fsubrs
sbb
aam
xor
mov
xchg
lret
xor
jne
nop
xor
or
in
nop
push
sti
inc
push
jmp
lds
mov
xchg
in
bound
lds
and
xchg
adc
enter
adc
shl
mov
js
mov
mov
stos
outsl
mov
xor
xchg
mov
mov
out
loop
add
test
adc
aas
icebp
scas
adc
xchg
adc
mov
ret
mov
scas
push
ja
mov
inc
hlt
shr
and
pusha
mov
jne
inc
sbb
mov
icebp
lds
cs
loopne
xchg
mov
shlb
cmc
adc
xchg
or
lahf
pop
push
in
jge
ret
scas
pushf
dec
push
inc
pop
cmpsl
out
std
iret
les
orb
push
sub
dec
adc
add
clc
add
movsb
pusha
outsb
fdivp
xor
fwait
mov
adc
dec
pop
mov
adc
lahf
push
inc
or
outsb
fildll
push
jbe
inc
push
sub
adc
pop
xchg
sbb
divl
mov
pop
mov
xchg
inc
clc
dec
push
ret
xchg
ds
aaa
push
sbb
dec
lea
jle
mov
mov
sbb
cmp
pop
and
mov
and
out
pushf
or
lods
and
mov
xchg
or
or
test
adc
add
push
push
daa
adc
jle
pop
js
xor
inc
cmp
cmp
add
testb
int3
fmull
or
inc
ret
adc
popf
ffreep
lods
roll
mov
test
adc
leave
xor
push
mov
clc
popa
push
es
inc
aaa
imul
adc
and
jae
cmp
mov
repnz
ret
and
pop
stos
sbb
mov
rolb
shl
inc
pushf
jg
cmp
push
ret
adc
pop
test
pop
cld
cmpb
lock
sub
hlt
xchg
mov
jg
mov
out
fiaddl
insl
mov
xor
insl
or
mov
idivb
push
cmp
dec
cmpsb
daa
and
or
repnz
icebp
xchg
cltd
dec
push
xchg
jp
loope
es
test
xchg
shrb
hlt
inc
test
xorl
dec
aaa
mov
ficoms
pusha
data16
pop
stos
push
xor
mov
rcr
ljmp
clc
scas
int3
leave
ds
cli
inc
mov
dec
push
fs
je
loopne
stc
inc
daa
js
insb
out
sahf
leave
sahf
int
loopne
es
mov
inc
xor
mov
jl
into
ss
mov
cmp
or
addb
pusha
mov
icebp
jae
xor
pop
stos
mov
movb
jle
pop
push
xchg
inc
push
jno
mov
push
push
int
insl
cld
cwtl
test
add
inc
jbe
pop
cltd
push
pop
fsubrl
leave
jp
sub
push
in
mov
rcrl
jo
gs
out
jb
lock
sub
call
and
or
ret
xor
push
pushf
xorb
cmpb
hlt
mov
mov
dec
inc
jecxz
nop
into
out
mov
sub
mov
aam
pop
jbe
stos
push
nop
and
xchg
call
sar
or
aaa
sahf
jns
adc
cmpsb
dec
loop
stos
and
pop
bound
das
pop
mov
xor
shll
mov
and
sub
cwtl
xchg
enter
cmp
outsb
push
add
dec
lods
adc
call
sbb
hlt
push
jb
xchg
adcb
inc
mov
cmpsl
mov
jnp
and
stc
pop
cmc
fs
sub
or
sbb
adc
rorb
inc
cmp
xchg
xor
jno
add
xlat
mov
mov
mov
lods
fimuls
cmpsl
add
mov
in
dec
xlat
add
into
test
or
push
int
int
mov
dec
xchg
dec
repz
mov
hlt
inc
pop
insb
andl
scas
insb
mov
sub
bsr
jg
inc
jns
aam
aas
shlb
fildl
icebp
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
xor
hlt
push
jmp
bound
loopne
or
inc
ja
loopne
and
icebp
jne
rolb
std
iret
das
add
mov
dec
in
xchg
sarb
lret
insl
pop
sti
fs
test
pop
jb
aam
outsl
test
push
cs
daa
adc
add
dec
jmp
sarb
cmp
push
movsb
sbb
sahf
add
mov
mov
mov
xchg
mov
mov
xchg
xchg
ficoms
push
ret
push
rcll
add
hlt
sub
rcl
scas
scas
imul
test
mov
mov
or
je
dec
xchg
cwtl
xchg
in
outsb
int
xlat
clc
xchg
outsb
sub
jns
lahf
mov
cmpb
pop
sub
out
mov
inc
sub
cwtl
in
mov
jno
or
xchg
lahf
cmpsl
ret
mov
lea
stos
sti
test
lods
push
out
and
jo
lods
mov
xchg
imul
mov
mov
sahf
in
imul
adc
xor
mov
shl
push
adc
andb
in
xchg
and
dec
xchg
je
mov
or
dec
ret
adc
fidivrs
loop
call
xor
jbe
jecxz
push
lock
inc
inc
cmp
pop
lock
lret
lock
cmp
in
js
lock
sub
cwtl
dec
mov
sub
leave
ja
adc
or
test
adc
aad
fldenv
inc
dec
std
div
daa
add
ja
jb
jb
dec
push
insb
mov
jle
xor
fiadds
xor
pop
jg
add
jae
clc
ds
xchg
outsb
into
imul
jle
pop
popf
xchg
mov
push
push
fcoms
hlt
add
xchg
mov
xor
push
mov
in
ffreep
lahf
adc
push
ja
inc
sbb
negl
cld
adc
adc
xchg
pop
adcl
jmp
fs
repz
cmpsb
iret
insb
xchg
shl
hlt
ret
arpl
enter
stos
adc
out
add
test
xor
arpl
inc
add
int
or
in
fimull
push
jp
into
outsl
fdiv
mov
repz
test
ret
aam
adc
cmpsl
rol
adc
test
cmpsl
pushf
lods
push
test
inc
add
xlat
outsb
js
and
test
mov
adc
jae
int
decb
sbb
add
xor
bound
mov
sub
test
fildll
adc
push
mov
pop
fbld
cld
out
push
jmp
or
sbb
dec
lds
xchg
mov
leave
lcall
sti
inc
push
dec
std
mov
ret
out
in
dec
add
sbb
push
or
push
adc
mov
jp
pushl
or
pop
jecxz
test
dec
and
scas
add
xlat
mov
pop
cmpsl
push
dec
pushf
sarl
les
or
pop
adc
loope
jns
xchg
xchg
add
out
inc
adc
jmp
adc
push
lods
xorb
mov
inc
mov
fildll
out
mov
daa
dec
pop
mov
cmc
jecxz
stc
lods
out
fdivs
int
aaa
dec
or
sbb
jle
add
icebp
and
cmp
dec
mov
insb
inc
push
sahf
add
loopne
imul
cmp
xchg
inc
cmp
jl
in
pop
or
and
movsl
cmp
insb
xchg
sti
xchg
lods
lock
push
or
pop
add
int3
outsb
push
xor
jp
adc
aas
loopne
addr16
or
mov
mov
add
jecxz
adc
push
loop
mov
xor
jecxz
and
leave
or
pop
xchg
fs
int3
mov
inc
ja
incb
mov
adc
scas
xchg
sbb
jge
stos
aaa
jg
and
nop
fldl
xor
les
filds
in
out
scas
popa
jno
mov
test
mov
outsb
inc
mov
ret
cmp
and
xor
pushf
fists
jle
lahf
xchg
lret
xchg
push
jne
inc
add
adc
and
jae
and
imul
xor
mov
fcomps
loopne
adc
shll
cltd
mov
mov
push
dec
push
in
or
cmp
jnp
jnp
xor
mov
jns
and
stos
xchg
in
pop
pop
xchg
leave
ds
ljmp
mov
iret
cmpsb
loope
cld
scas
mov
shrd
dec
sti
adc
mov
mov
jne
lcall
and
or
pop
jle
mov
stos
mov
test
adc
adc
push
lahf
adc
adcl
shll
cmpsl
mov
mov
or
ret
fcompl
and
or
push
data16
mov
inc
out
or
or
icebp
ret
lods
fidivrl
or
test
fidivrs
rolb
lret
pop
es
or
lds
out
icebp
ret
adc
jno
jnp
push
aas
pop
pop
sbb
mov
mov
pop
test
imul
mov
aas
cltd
or
xor
xlat
mov
out
cs
cltd
push
leave
jp
clc
sti
data16
push
scas
mov
xchg
in
xchg
stc
fisubrl
cmp
fcompl
shlb
leave
inc
insb
adc
mov
ret
clc
inc
scas
mov
jnp
or
adc
es
cmp
bound
xchg
out
mov
das
pop
icebp
cwtl
ljmp
inc
sbb
test
mov
and
xor
add
fnstsw
mov
jl
cmp
stos
sti
or
sbb
jns
mov
sbb
ja
daa
iret
push
idivb
pop
jle
stc
stos
std
xor
jl
jbe
fdiv
leave
clc
call
cmp
dec
cmp
sub
add
mov
rcrb
movsb
push
leave
push
cmp
in
add
sbb
dec
enter
bound
out
js
xchg
fwait
adc
jnp
bound
cmp
gs
sbb
pop
jo
cmp
pop
stos
test
cmpl
or
push
sub
or
sbb
xchg
adc
popf
jg
mov
dec
mov
xchg
push
dec
test
movsl
subl
push
xor
inc
popf
pop
fstl
add
mov
loop
test
ss
mov
sbbb
xchg
addr16
fstl
xchg
aad
xor
sbb
ret
out
in
sbb
loop
pop
push
imull
stos
int
aas
and
xor
ds
cmpsl
lret
pop
lret
jno
int
lods
dec
movsl
jns
dec
jae
sub
sub
decb
fistpll
cmpsb
cmpsl
jg
scas
xor
or
add
inc
popf
xor
cmp
xor
lods
out
mov
loopne
inc
or
scas
push
addb
lds
lock
dec
je
mov
cmp
insb
sub
into
test
fsubrl
cld
cmp
cli
popa
in
dec
jb
out
lock
loopne
pushl
inc
insb
aad
imul
push
sub
rol
inc
into
inc
cmp
aam
push
xchg
jmp
mov
mov
stos
dec
mov
push
les
rcrl
cmpsb
jbe
push
popw
popa
or
push
insb
lret
mov
dec
pop
mulb
sub
mov
inc
lcall
push
add
xor
in
or
mov
mov
jo
xchg
sub
adc
pop
cltd
mov
dec
adc
inc
scas
push
mov
and
fs
loope
int3
mov
mov
inc
jle
pop
xchg
scas
adc
fildll
lret
xchg
xor
mov
cmp
xchg
cmpb
jp
mov
pop
nop
mov
sbb
stos
fiaddl
mov
mov
out
in
xchg
out
lret
jae
pop
pop
popa
mov
dec
jbe
test
inc
jne
and
jb
lret
ds
mov
fs
enter
jnp
cmp
push
inc
push
not
pop
lods
xor
sahf
sbb
xchg
lods
mov
adc
cmpl
cmp
daa
shlb
or
or
aad
in
in
inc
fldt
or
cmp
test
cld
addl
dec
dec
imul
je
push
cltd
insb
jmp
push
pushf
pop
stos
pushf
addr16
pop
cmp
add
pop
mov
scas
rclb
out
sbb
cmp
enter
xor
lods
sbb
sbb
jg
dec
imul
add
inc
mov
pop
iret
dec
fcmovb
rcll
pop
cmp
outsb
mov
in
in
mov
stc
das
aam
stos
inc
pop
xor
mov
xchg
fmul
push
jno
mov
mov
lock
jnp
mov
xor
ja
mov
adc
sbb
sbb
xlat
dec
mov
cmp
in
aad
jl
fstpt
fs
dec
inc
and
xor
dec
into
dec
mov
add
jne
jp
bound
nop
push
inc
cmp
add
test
cli
in
mov
xor
insl
inc
cmc
jle
add
mov
push
roll
mov
xor
out
shl
dec
inc
ja
mov
loop
push
xchg
fdivrs
pusha
pop
adc
loop
stos
add
int
mov
pop
push
loope
test
loopne
mov
xchg
sti
xor
cmp
mov
fs
pop
mov
call
xor
inc
push
jns
ret
inc
add
inc
mov
xchg
out
lahf
lds
inc
lea
sbb
sbb
jg
adc
aad
iret
scas
jecxz
repz
insb
pop
adc
push
fistl
in
bound
mov
aad
pop
cmp
fildll
inc
inc
pop
cli
cmpsb
scas
inc
xchg
mov
mov
sarl
data16
cmp
clc
int3
push
inc
aaa
mov
mov
scas
lcall
sub
cld
vfrczps
dec
mov
jb
mov
pop
rolb
pushf
fstl
and
imul
out
inc
mov
jo
pop
stc
pusha
lcall
jge
dec
fsubrl
or
aas
inc
mov
call
mov
insl
push
insl
inc
inc
and
mov
mov
je
orb
inc
or
pop
or
and
xchg
xor
mov
fistl
jne
jns
mov
inc
jb
icebp
mov
lock
sub
pop
stos
cmpsl
adc
mov
push
inc
stos
int
push
pop
out
mov
daa
rcrb
mov
push
fldcw
orl
lods
mov
push
mov
out
lea
imul
or
inc
and
add
iret
inc
or
xor
dec
jne
dec
xchg
stos
mov
rclb
cmp
data16
xor
and
push
cltd
lods
pop
cli
and
gs
mov
xor
jo
out
cmp
cld
xchg
popf
mov
je
mov
std
add
sub
jecxz
sub
andb
add
or
or
xchg
cmp
lods
subl
sbb
push
inc
das
test
iret
cmp
mov
cmc
es
sbb
jb
shll
xchg
cmp
mov
shr
push
test
mov
cld
dec
inc
mov
out
pop
fldcw
mov
mov
movsl
jnp
ret
jp
sbb
sub
fildl
push
fbstp
dec
popa
inc
adc
movsb
jne
jmp
test
cs
mov
adc
gs
mov
lea
inc
lods
inc
mov
lods
sub
rolb
mov
jecxz
aas
sub
dec
fisttps
mov
pushf
push
pop
fcoml
jp
mov
push
ds
jb
jnp
popf
push
sbb
fiadds
into
dec
mov
es
lret
jge,pn
pop
adc
stos
cli
pop
je
sarb
mov
aaa
loope
imul
int
icebp
xor
push
daa
loope
stc
xor
sub
mov
sbb
pop
jge
jno
add
sub
push
ret
and
xchg
jl
push
movsb
mov
int3
xor
lods
pop
lock
loope
push
insb
pop
dec
sbb
out
fistpll
cmc
push
loope
lock
mov
push
ret
sub
in
fwait
or
test
push
addr16
jb
rcrl
add
adc
rorb
mov
mov
add
sahf
push
or
mov
xor
in
sub
xchg
stos
jp
pushf
cmc
cs
jae
out
dec
shl
mov
or
jl
cmpsb
popf
stc
hlt
repnz
push
loope
hlt
sar
lods
inc
and
push
loope
xchg
insb
decb
mov
xor
push
push
movb
or
daa
jl
aad
mov
push
testb
mov
cmc
or
pop
adc
and
sbb
call
daa
cwtl
mov
sarl
filds
xor
mov
jge
mov
iret
aas
xchg
fnstsw
in
loopne
sbb
xor
leave
lahf
loope
ret
lods
dec
xchg
mov
divl
push
jecxz
dec
sub
mov
xchg
jbe
pop
inc
or
xor
in
lcall
xchg
test
pop
or
iret
ljmp
jmp
lods
xchg
lods
jle
dec
mov
sahf
int
add
mov
rorb
in
or
xor
mov
inc
xor
pop
add
std
jmp
push
jg
in
inc
cmp
movsb
adc
push
ss
mov
daa
in
insb
sbb
push
sahf
repnz
test
dec
in
jge
dec
xchg
ret
xor
adcl
lods
sti
push
ficomps
sub
pop
lds
fwait
pop
add
ret
out
pushf
jne
push
lea
insl
and
mov
mov
stos
addr16
daa
imulb
jbe
mov
push
xchg
movb
fisttpll
fildll
sbb
popf
pop
rorb
popf
xor
xorl
andb
imul
add
pop
int
out
add
aam
fists
pop
out
stos
mov
sarl
inc
stos
pop
jecxz
fs
push
fildll
aas
std
dec
ja
bound
xor
movsb
mov
mov
xchg
fistpl
inc
cmp
aam
lahf
cmp
stc
mov
dec
inc
icebp
xlat
adcb
out
movsl
cli
push
xchg
and
mov
repz
and
lock
xchg
pop
loope
mov
rorb
jbe
push
outsb
mov
cmp
jp
pusha
sub
dec
pop
and
sub
nop
aaa
jg
add
xor
lret
fistps
push
or
adc
jno
pop
mov
cli
mov
mov
loopne
cmp
mov
ret
test
sub
mov
enter
xor
imul
fnstenv
lret
and
and
ss
sub
lods
mov
mov
inc
hlt
adc
mov
lret
out
cmpsl
mov
out
cmp
jmp
dec
or
push
inc
ds
sub
out
or
and
aam
loopne
sub
dec
or
push
fistpl
mov
push
cld
shll
fdiv
inc
xor
ret
jne
mov
rclb
cltd
cwtl
inc
dec
mov
pusha
test
mov
pushf
dec
fs
ljmp
jg
or
inc
pop
movsb
adc
les
mov
imul
data16
cmp
mov
mov
mov
mov
int
roll
mov
adc
ds
fisttps
adc
cmp
xor
cmc
dec
cmp
popa
adc
rorb
push
xor
imul
adc
cmp
adc
cmpsl
test
js
cmp
mov
lods
dec
lds
mov
lds
out
mul
les
loope
pop
xor
pop
lcall
fsubp
inc
xchg
es
mov
and
lds
jb
hlt
leave
lock
daa
movsb
leave
movsl
mov
xlat
adc
lret
fs
push
gs
cmp
rclb
or
pop
psadbw
mov
shl
call
fnstsw
inc
test
inc
cs
aaa
inc
jg
std
lahf
je
ljmp
lahf
mov
bound
xlat
cmp
aas
lods
cmp
lcall
stos
jne
xor
pusha
pop
fdivrp
sbb
adc
fidivs
mov
sbb
xchg
dec
loopne
xor
mov
adc
nop
mov
dec
adc
cmpsb
das
or
je
xor
loopne
or
cwtl
mov
or
cmp
xor
es
stos
or
clc
addr16
jbe
add
lds
add
mov
movsl
mov
jae
and
add
cmp
sub
adc
shll
sub
mov
mov
orl
imul
pop
int
mov
mov
jae
inc
sub
xor
push
or
push
and
mov
sar
into
int
aam
sti
mov
fscale
aaa
mov
pop
push
test
and
mov
int
cwtl
test
int3
shl
enter
jl
push
jmp
push
inc
add
inc
loope
ljmp
pop
xor
xchg
dec
sub
lahf
xor
push
call
push
pusha
jl
push
jne
add
adc
rolb
arpl
mov
jns
out
sub
mov
out
jns
rcrb
lock
icebp
or
loop
dec
cmp
and
ljmp
movsl
fcomi
sbb
mov
cli
mov
push
mov
in
repnz
add
mov
pop
call
and
cmp
out
push
cmp
aad
sarb
push
push
arpl
cmpsl
mov
nop
inc
imul
aad
sarl
push
ja
aam
push
incb
mov
mov
pop
jg
pop
pop
leave
adc
call
adc
add
mov
inc
dec
xchg
mov
fmull
push
cs
lahf
or
jg
movsl
lret
repz
stc
cltd
incb
out
jns
mov
sub
test
leave
sub
cmp
jo
test
enter
lret
addr16
stc
xchg
add
add
fldcw
dec
mov
clc
add
icebp
mov
pop
xchg
out
push
mov
ret
sub
sti
xchg
lahf
pop
nop
outsl
leave
jp
lret
lret
mov
jne
jmp
push
adc
test
popa
pop
fimull
out
loop
fmul
and
pop
jae
orl
and
mov
pop
ss
out
sbb
gs
fcom
pop
scas
lods
stc
mov
out
ret
lret
sbb
test
mov
xchg
cs
repnz
aam
xor
jmp
cld
or
movsl
mov
cmp
mov
xchg
cmp
loopne
mov
mov
daa
and
fisttpl
clc
outsl
cmp
jno
cltd
repz
mov
add
outsb
loopne
or
and
mov
push
sub
test
ds
fdivr
push
sub
cltd
add
std
scas
test
icebp
pop
repnz
gs
out
add
lock
aaa
push
and
push
dec
loope
and
sub
adc
pop
add
xchg
ffree
xchg
popf
cmp
sub
fildl
insb
pop
test
push
movsl
leave
lret
push
call
rolb
out
fstps
bswap
enter
aad
adc
das
xchg
push
gs
int
mov
fildl
add
rcrl
adc
jg
sub
out
dec
cmc
inc
push
sub
pop
mov
cmp
jge
and
mov
pop
pop
push
add
das
or
inc
or
and
in
fmull
jle
push
inc
xorb
dec
lret
stos
loopne
mov
lods
pop
mov
clc
or
sbb
mov
pop
mov
js
sarl
sub
aad
sub
push
rolb
arpl
int
mov
into
dec
xlat
sub
fmull
sub
jl
xor
fiaddl
mov
hlt
test
out
movsl
push
lds
lahf
or
and
fwait
add
mov
add
cli
ret
and
mov
je
inc
out
into
pop
cmp
adc
xchg
mov
cltd
repnz
decl
xchg
rcr
or
inc
test
cltd
cmc
sbb
fsubrs
dec
cmp
xchg
cld
sarl
test
jns
cli
sbb
dec
loopne
mov
aas
add
cli
jo
push
mov
xor
add
dec
mov
aam
hlt
jno
xorb
jne
jp
pop
fmull
adc
hlt
mov
add
cmc
cld
pop
icebp
xor
add
sbbl
sub
mov
iret
mov
hlt
lods
test
mov
lcall
mulb
mov
test
xchg
mov
dec
cltd
mov
sbb
xchg
ret
mov
push
mov
adc
fidivs
adc
mov
sub
lods
aas
mov
adc
aam
adc
cmpb
adc
ss
inc
repz
xor
mov
stos
push
loopne
adc
clc
loop
leave
das
sub
daa
sbb
jle
xchg
push
add
jo
clc
js
jl
mov
mov
adc
mov
aam
and
adc
sarb
push
inc
xorl
mov
popa
movl
imul
popa
mov
out
cmpsl
aam
jmp
pop
lods
inc
bnd
jne
xchg
mov
addr16
outsl
mov
push
arpl
mov
push
rclb
popf
adc
mov
cmpsl
xchg
dec
fwait
push
shlb
jb
mov
es
mov
mov
mov
dec
xchg
fimuls
out
mov
jo
mov
and
jbe
jne
cmp
in
mov
daa
imul
pop
xlat
fists
cmp
ficomps
outsb
xchg
cmpsl
js
sbb
mov
in
and
sub
insl
fisubl
jge
sub
push
jmp
inc
jmp
cltd
repnz
jp
test
nop
xchg
movsb
pusha
in
out
call
stos
push
dec
sbb
ljmp
jnp
sub
dec
call
adc
enter
icebp
push
aaa
ret
adc
xorl
arpl
or
lcall
sub
test
in
push
ljmp
mov
mov
ds
mov
xchg
test
ljmp
nop
arpl
pop
cli
aam
fsubs
int
jb
mov
pop
push
mov
je
mov
sub
les
std
xchg
imul
push
adc
mov
pop
push
call
and
ss
cmp
or
out
das
out
out
xchg
add
stos
lret
bound
dec
dec
fisubs
aad
sub
sbb
jnp
xchg
xor
fcmovb
shrb
sub
cmp
repz
sbbl
ror
imul
shrl
inc
mov
inc
adc
push
sti
pop
test
jg
ret
mov
out
subl
push
cmp
mov
mov
lods
orb
and
inc
mov
dec
mov
sti
pop
andb
xor
fstl
jmp
mov
leave
loopne
jno
movsb
fs
movsl
andb
aas
sbb
pop
jno
jns
std
add
xchg
lea
in
jnp
xor
xor
inc
fdivp
popf
sbb
push
jg
xor
negb
push
in
mov
sbb
and
mov
out
pop
pop
outsb
or
add
sub
add
imul
xchg
iret
or
sbb
or
shlb
adc
imul
clc
push
mov
jno
jb
jno
movl
nop
xlat
aam
cltd
or
negl
add
orl
pop
pusha
ja
fists
xlat
cli
sbb
and
cltd
inc
xchg
mov
or
adc
js
push
add
in
dec
stos
pusha
lock
loop
or
jmp
push
xor
dec
push
movsl
fsts
cltd
sub
xor
xor
xchg
xor
xchg
std
cld
mov
pop
lahf
in
int
or
daa
sbbl
push
jns
jne
inc
push
dec
xchg
xorl
mov
repnz
mov
mov
cmovno
andl
lods
jmp
pushf
shl
xchg
gs
add
outsl
outsl
pop
inc
insb
push
lock
out
pop
jb
adc
jmp
push
add
xchg
xor
sub
cmp
sub
dec
es
test
sbbl
mov
or
push
out
addr16
imul
xor
push
xor
pop
jbe
push
pop
mov
sbb
mov
pop
sbbb
pushf
dec
pop
add
cmp
mov
pop
rcrb
sbb
jne
add
add
jb
dec
cmp
push
lret
xchg
mov
lea
mov
and
jns
xor
rorb
mov
or
out
and
xchg
out
frstor
lcall
scas
fbstp
leave
andl
rcrb
and
push
int
adc
mov
pop
and
push
popf
dec
js
shll
jb
test
insb
sarb
xchg
jge
aaa
push
roll
jb
dec
push
lea
dec
mov
dec
orb
lahf
out
repnz
fwait
outsb
xor
dec
adc
mov
in
sub
push
jmp
in
mov
xchg
cld
ljmp
inc
out
jno
decb
lcall
xchg
aas
sub
pop
ds
xor
ds
negl
mov
cmp
sbb
jl
mov
push
sub
sub
pop
insl
inc
push
and
scas
in
or
scas
sub
jl
repnz
addr16
cmpl
adc
mov
imul
ret
bound
movl
in
repnz
mov
out
icebp
cmc
into
pusha
mov
or
add
fidivrs
andb
rorl
cmp
icebp
fcomip
jbe
and
and
cmpsl
mov
mov
ret
sub
dec
ds
sbb
dec
mov
sub
stos
push
mov
jb
addb
int3
clc
jns
aam
xchg
inc
push
xchg
mov
shlb
mov
lret
and
pop
fidivs
jmp
out
orb
jb
clc
dec
sbb
and
pusha
out
and
xor
xchg
sti
mov
sbb
fldenv
inc
cmpb
xor
inc
adc
mov
sub
and
out
lcall
mov
jmp
jb
dec
jbe
add
inc
iret
or
test
int3
mov
sub
icebp
popa
int3
add
movsb
add
mov
mov
push
testb
inc
add
push
lods
dec
in
insl
mov
push
or
popa
pop
jp
addr16
push
jp
add
and
fimull
test
mov
mov
dec
loop
push
aad
mov
loope
cmp
push
sbbb
rcl
xlat
insb
adc
cmp
mov
int3
sti
icebp
int3
sub
inc
fstp
insl
rorb
mov
test
scas
push
cs
add
mov
fnstenv
ja
lcall
lret
shl
mov
dec
lret
inc
dec
shlb
dec
in
sahf
or
xlat
add
fxch
mov
inc
xor
xor
sub
imul
arpl
outsl
out
pop
roll
out
aad
mov
es
int3
jge
outsb
pop
es
cmpsb
inc
aam
sbb
sub
sbb
mov
mov
sub
jmp
lods
mov
fdivr
les
pop
sarl
sub
inc
or
movsl
out
test
stc
add
leave
nop
xor
clc
xchg
sub
imul
or
int
inc
shld
mov
arpl
inc
jle
js
mov
or
fwait
ror
jmp
clc
movsl
add
mov
nop
std
into
jo
adc
or
push
inc
orb
sub
int
int
xor
scas
lds
fnstenv
dec
into
in
mov
mov
mov
fdiv
and
pop
mov
pop
pusha
sahf
lds
in
sub
ds
pop
push
adcl
and
movl
addl
mov
jno
adc
xor
or
push
in
adc
add
fmuls
inc
jo
ja
sbb
iret
mov
test
pop
xchg
mov
xchg
scas
cmpsl
iret
mov
nop
and
mov
adc
and
enter
inc
xor
adc
les
pop
lock
mov
push
jno
dec
nop
je
mov
xchg
aam
aad
fcoml
adc
int3
dec
cltd
in
mov
adc
add
push
sub
orb
lret
shll
adc
xchg
out
mov
sbb
nop
cmp
aas
sbb
inc
sub
xchg
je
js
pop
jo
hlt
push
aaa
rorl
jg
xchg
or
dec
rcrb
or
hlt
and
clc
cld
push
sbb
push
movsl
das
sub
or
cmp
adc
lods
sub
jp
xor
adc
mov
inc
push
insb
xchg
addr16
out
jno
and
ds
adc
jno
fsubl
pop
sub
inc
xlat
mov
xor
inc
outsb
popf
scas
pop
xchg
fxch
pushf
cmp
dec
jno
lds
fistpll
or
jae
jns
popf
mov
insl
ficoml
mov
xor
xor
push
inc
int
outsb
ljmp
les
cs
das
lock
sub
push
inc
and
popf
scas
loope
xchg
fldenv
pop
cmpsb
inc
movsb
pop
pop
mov
sbb
push
lods
jb
je
sub
push
cmp
jo
cld
pop
test
cli
movsl
mov
pop
jge
shrl
and
das
in
sub
pushf
out
jmp
inc
addr16
in
clc
xchg
dec
int
int3
sbb
jp
push
and
sbb
stos
mov
push
cmp
subl
shl
mov
inc
jp
sarb
in
nop
aam
repnz
enter
aam
cld
fildl
mov
dec
push
mov
mov
lret
dec
adc
sbbb
sbb
cmp
pop
push
imulb
in
mov
mov
mov
sti
cmc
movsb
cld
xsavec
sbb
rcrb
ret
aad
sbb
mov
adc
or
dec
sub
outsl
push
test
pop
sub
xlat
pushl
rolb
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
dec
dec
push
rcrb
rol
pusha
and
das
setbe
mov
mov
aad
gs
adc
jge
adc
sbb
push
cmpb
adc
gs
push
push
mov
mov
aaa
int3
dec
outsb
mov
dec
xchg
jbe
scas
mov
sbb
sub
lahf
lahf
jg
aam
push
andl
mov
mov
cmpb
repnz
call
add
mov
push
or
and
mov
xor
push
test
inc
sub
or
sbb
lret
into
in
pop
dec
fs
mov
cltd
xchg
pop
jbe
inc
inc
cmpsb
sub
notl
dec
inc
data16
cmp
in
clc
aas
into
js
mov
into
repnz
subl
pop
gs
push
sti
jle
pushf
push
ret
push
mov
das
stos
mov
mov
xor
icebp
cmpsl
xor
cld
data16
call
icebp
jp
js
dec
push
mov
or
pop
or
test
mov
cmpsl
dec
lahf
jns
jno
cmp
loopne
or
rorl
std
dec
mov
jae
pop
arpl
push
jmp
outsl
pop
push
mov
shrl
test
cmp
shrb
mov
dec
push
stos
lahf
cmpsb
ss
fcoml
xor
and
sar
mov
mov
daa
mov
jae
mov
push
in
xor
shlb
lods
inc
and
and
filds
xchg
cmp
mov
hlt
xchg
out
pushf
ja
push
cmp
sbb
stc
xchg
jge
cmpsl
mov
gs
jg
ret
inc
sbb
sub
iret
subb
push
jge
icebp
insb
pop
lret
cmpsl
test
nop
loope
pushf
addb
lea
dec
adc
imul
xchg
push
xchg
call
jbe
fcmovnb
lahf
mov
sbb
fwait
sbb
out
roll
mov
jbe
sbb
cld
jb
sbb
jo
subl
fildl
push
nop
inc
imul
std
insl
mov
fyl2x
add
int3
fisubrs
sub
xchg
out
add
imul
loop
mov
inc
xchg
and
mov
ret
sti
test
sbb
fcompl
cltd
out
mov
mov
inc
mov
cmp
dec
dec
pop
push
in
sub
or
and
stc
loop
pushw
or
xor
push
push
lods
sub
adc
cmp
scas
dec
sub
pop
pop
into
sub
mov
loope
mov
aam
in
dec
xchg
mov
int3
xor
or
jle
scas
push
dec
in
mov
dec
stc
pop
sbb
or
push
jbe
cltd
dec
neg
gs
movsl
push
dec
test
or
enter
sbb
out
rorb
or
inc
cmp
aaa
mov
lock
pusha
enter
in
push
aaa
jle
ret
stc
inc
fstps
movsb
mov
sub
push
pop
lock
push
add
insl
outsb
jns
adc
sub
fsubrl
rcrb
mov
stos
xchg
mov
inc
in
pop
cs
xor
push
movsb
subl
in
bound
mov
loopne
sbb
or
mov
sbb
ficompl
mov
adc
call
test
adc
add
jns
das
and
imul
pop
lcall
mov
sbb
aas
mov
push
push
mov
pop
dec
mov
push
mov
test
int3
into
push
xlat
int
dec
dec
push
xchg
sbb
movsb
popa
xor
and
cmp
andb
insl
lods
int3
bound
push
adcl
and
and
or
jne
lea
push
andl
movsl
push
dec
out
fisubrl
sti
adc
adc
es
out
rcll
loope
inc
in
or
adc
mov
cltd
js
or
push
push
sbb
fbstp
sub
mull
dec
dec
je
fildll
push
xchg
fimuls
aad
daa
scas
test
xor
out
clc
and
mov
cs
adc
adc
int
jne
push
mulb
mov
cmp
adc
inc
jl
xor
adc
in
or
jp
rorl
or
lret
bound
ss
jge
mov
out
test
call
flds
mov
inc
sub
data16
jne
jo
and
movsl
test
ljmp
push
mov
ficoms
jmp
cmp
dec
les
jo
cmpsb
mov
pop
xchg
cltd
clc
gs
addb
imul
xchg
pusha
inc
ds
pop
ret
or
xor
xchg
mov
pop
lret
fmull
jmp
jmp
fbstp
xchg
sbb
dec
sti
mov
bound
mov
push
dec
mov
sub
xor
fsubrs
mov
adc
dec
sub
cmp
mov
mov
cmc
cmp
mov
jns
inc
or
ret
adc
add
or
xor
mov
mov
ret
cwtl
mull
dec
sbb
fwait
je
mov
iret
adc
mov
or
pop
iret
aas
ss
mov
jle
jmp
stc
jecxz
xlat
scas
test
xchg
mov
andl
pop
fsts
push
push
std
jo
adc
test
xor
sti
lea
lock
jne
mov
xchg
jecxz
test
aas
lret
jne
inc
fldt
jmp
push
xchg
leave
cmp
sbb
push
test
inc
mov
push
mov
repz
popf
inc
ljmp
std
cmp
aaa
dec
not
fmulp
cmpsl
addl
aad
jp
jmp
fsubr
add
sbb
hlt
inc
bound
xchg
pop
daa
lods
pop
inc
mov
add
fwait
jno
mov
jbe
pop
gs
jl
jge
push
push
xchg
jae
inc
stc
lods
lcall
push
xor
scas
notb
adc
jae
scas
sbb
in
sub
add
cld
pop
xor
int
mov
inc
pop
dec
adc
fstpl
xor
fimuls
pop
test
pusha
cmp
in
shrl
leave
pop
cmc
pusha
xchg
stos
fidivl
aas
adc
lods
jbe
xor
ret
mov
jecxz
loop
pop
xor
jae
push
fdivrl
call
add
inc
ror
pop
mov
jmp
out
add
int3
and
imul
and
sub
fldt
adc
mov
pop
xchg
or
pop
rolb
mov
xchg
jecxz
mov
insl
jecxz
cmc
mov
xchg
jbe
lret
xchg
rol
repz
vpshlq
daa
or
xchg
xor
xchg
or
mov
or
aam
bound
ss
sti
mov
aas
inc
filds
push
and
inc
pop
push
stos
sahf
popl
nop
jg
inc
adc
sub
jecxz
cmc
pop
movsl
adc
jecxz,pn
fisttps
loopne
mov
jno
xor
jae
push
repz
mov
mov
fists
inc
sub
xor
lds
ljmp
fnsave
mov
adc
mov
loope
pop
fwait
stos
jge
sbb
mov
cmc
es
mov
mov
mov
push
lds
adc
sub
cltd
daa
mov
dec
dec
dec
rcrl
mov
popf
fnstenv
out
adc
or
mov
inc
ja
mov
xor
rol
ja
leave
xlat
mov
mov
mov
scas
adcl
push
and
and
jp
mov
pushf
dec
mov
jge
in
jge
fsubr
fcomps
imul
jl
pushf
push
push
mov
mov
iret
shl
or
repnz
push
dec
gs
sub
xchg
cmpsl
int3
push
andl
ljmp
mov
sbb
adc
hlt
cli
pop
push
mov
and
sbb
or
jle
fidivs
adc
or
notb
ja
or
mov
imul
xchg
adc
es
inc
lcall
push
hlt
inc
cmp
cmpsb
xor
jae
fmull
sub
mov
test
inc
test
dec
lods
cmp
mov
out
mov
cmpsl
js
xchg
cld
imulb
icebp
mov
movsb
or
inc
push
cld
loopne
rorl
jecxz
aam
inc
inc
lcall
cmp
mov
shlb
in
test
cmp
out
cmp
mov
and
das
fucomi
add
mov
xchg
xchg
cmp
and
mov
enter
mov
jns
jo
push
dec
dec
mov
push
sub
xchg
int3
imul
mov
test
or
leave
inc
cmp
inc
mov
mov
movsb
into
mul
testb
pop
int
dec
jne
fdivrl
xor
vphaddbd
fcomps
ljmp
mov
or
xor
out
jno
aad
ficompl
data16
sub
out
or
xorl
sbb
sahf
frstor
fistps
bound
push
pop
shll
popf
mov
xor
mov
dec
cli
rcr
loope
cmp
in
jle
std
ss
push
mov
out
fwait
mov
adc
icebp
dec
mov
rorb
notb
nop
xchg
sbb
loop
jmp
adc
pop
ja
mov
out
test
mov
mov
mov
dec
nop
test
jge
jg
ret
pop
push
push
cmpsb
sub
mov
sbb
out
push
in
xchg
in
push
shll
bound
popl
loopne
and
add
xchg
rcrb
or
daa
pop
dec
mov
cmp
pop
pop
inc
cltd
dec
pop
lods
fcomi
push
lock
int3
hlt
adc
into
pushf
mov
jbe
mov
insb
lahf
or
push
aam
sti
jbe
loopne
push
xor
sub
test
mov
adc
mov
ud0
or
jne
rol
adc
mov
div
jne
lods
add
pop
repnz
ja
adc
inc
xlat
pop
aam
int3
push
pusha
sbb
push
mov
and
hlt
mov
inc
divb
sbb
pop
dec
in
ret
ret
movsb
mov
loop
imul
adc
cmp
out
std
sbb
pop
cltd
push
xchg
outsb
fnstenv
pop
xchg
inc
jne
cwtl
xchg
dec
sbb
push
push
lahf
sub
fsubp
pusha
mov
test
or
ss
sbb
dec
add
jge
fmul
outsb
out
test
adc
cmpsb
fcmove
movsl
fimull
xor
mov
inc
jne
fadd
mulb
mov
test
and
mov
pop
add
push
lea
jg
insl
dec
cmp
mov
push
subl
mov
jb
sbb
dec
daa
rcr
add
jbe
rcl
jae
stos
mov
push
outsl
sub
jmp
jge
xchg
adc
cld
pusha
adc
test
or
pop
fldl
pop
xchg
stc
push
inc
add
push
imul
jae
sbb
gs
dec
adc
frstor
mov
call
adc
imul
jo
sti
mov
out
pop
sbb
and
rcll
data16
lods
dec
mov
jb
dec
inc
fcoms
sub
in
js
negl
push
shl
stos
scas
dec
pop
sub
mov
sbb
repnz
or
sub
cmpsb
xchg
xorb
fidivrl
mov
lea
push
xchg
inc
mov
mov
imul
ret
popa
and
lods
dec
cld
mov
mov
leave
push
push
enter
cmp
xor
mov
lea
aaa
shrb
popa
xchg
push
addr16
jp
leave
fnsave
je
inc
push
leave
arpl
int
mov
xlat
out
mul
stos
into
test
pop
mov
push
dec
cld
cmovs
imul
dec
add
adc
add
arpl
xor
mov
xor
sub
addl
ljmp
ja
movsb
mov
ret
ja
mov
xor
mov
sahf
loope
jne
dec
enter
jo
mov
fisttpll
push
inc
xor
cmp
and
scas
dec
pop
xor
jno
xchg
inc
cmp
iret
mov
xchg
mov
outsb
or
mov
push
dec
aam
lods
fcmovnb
xchg
push
or
or
movsl
leave
cltd
dec
jo
in
aad
cmp
clc
imul
imul
mov
lret
jge
leave
xchg
mov
test
mov
mov
aam
jge
pop
jg
stc
or
dec
and
imul
out
jg
out
pop
popf
jl
ss
or
xchg
xchg
and
gs
repnz
push
ljmp
mov
pop
test
lret
aad
add
push
mov
orl
pusha
jne
xor
or
lods
test
push
movsb
push
out
jg
sahf
loope
out
xor
pop
mov
andb
fsts
bswap
push
mov
das
daa
jle
arpl
dec
and
addb
enter
sbb
repnz
test
lcall
mov
jbe
sarl
mov
cli
pop
xor
lods
lds
add
loop
lea
stc
testb
sarl
popa
rclb
sbb
ret
out
addl
mov
test
sub
hlt
loope
pop
aad
pop
push
sub
fidivrl
and
jle
mov
int3
sbb
mov
sub
ds
pop
lret
push
btr
and
lock
lret
leave
scas
je
int
subb
lret
bound
dec
xchg
std
lds
repnz
mov
pop
push
ret
test
inc
xor
adc
mov
shll
ret
cltd
add
repnz
push
push
cli
mov
loop
repnz
and
push
pop
xchg
mov
sarb
inc
out
pop
fldt
aaa
pop
cmp
jmp
cmp
stos
jg
popa
mov
and
and
dec
clc
mov
int
lret
pop
inc
adc
cmp
shll
mov
inc
je
push
mov
mov
xlat
in
mov
and
outsb
clc
incb
pushl
ret
mov
xchg
xchg
sub
jecxz
xlat
pop
pop
fisubs
stos
pop
ds
pop
mov
jl
sub
xor
enter
mov
inc
push
cmc
pop
xor
mov
cmpl
mov
addr16
inc
xlat
in
cmp
push
jne
xchg
dec
and
mov
ret
femms
or
insl
addr16
in
mov
mov
pusha
sub
push
loopne
adc
cmp
orb
mov
ret
popa
dec
ds
out
jnp
imul
mull
inc
icebp
cmp
std
roll
push
int3
sub
jne
mov
adcl
lret
xor
jp
mov
cmp
sar
mov
xchg
ja
dec
add
pop
and
jne
add
adc
xor
mov
dec
xchg
lods
nop
mov
in
movsb
into
insb
scas
loop
lret
testb
add
sbb
inc
idiv
sub
mov
or
mov
outsl
push
jg
mov
xchg
out
cmp
test
mov
pop
xchg
test
repz
mov
or
addl
inc
adc
jb
shll
clc
aam
mov
lods
adc
test
insb
je
lea
xlat
sbbl
push
mov
dec
adc
rcrb
add
sub
shrb
aad
add
cmp
aam
divb
push
daa
jmp
idivl
inc
lahf
pusha
sarb
add
lock
test
xchg
daa
xchg
stc
ficoml
cmp
sbb
or
int
cmc
leave
push
pushf
jmp
mov
inc
imul
outsl
xchg
icebp
adc
lods
pop
adc
cmpsb
add
pop
leave
adc
mov
push
fmull
test
dec
inc
add
add
rcrb
cmp
scas
sub
enter
inc
add
jmp
sbb
jle
and
inc
arpl
and
leave
mov
and
and
fiaddl
ret
incl
pop
lret
and
subl
sub
adc
movsl
mov
mov
frstor
loop
sets
inc
in
mov
das
adc
fidivrs
sti
fdivrs
jecxz
xchg
mov
xor
cmc
data16
outsl
int3
and
xchg
add
lea
add
cmp
mov
dec
mov
aad
or
push
add
xlat
jmp
xlat
inc
int
xchg
call
mov
jno
hlt
movsl
gs
mov
pop
das
hlt
xor
jecxz
push
bound
add
int3
lret
outsb
pop
repnz
inc
ret
insb
and
pusha
popa
mov
icebp
lret
push
push
jb
sbbb
mov
and
repz
ret
ja
add
mov
push
pop
adc
call
iret
pop
data16
adc
dec
rorb
movsl
cwtl
popa
nop
push
call
mov
repnz
not
inc
rolb
testb
cmpsb
push
add
loopne
mov
jno
xchg
fisubrs
loope
test
mov
fnstenv
push
test
add
jge
clc
mov
daa
sbb
sub
loop
nop
dec
addb
and
fucom
inc
shrb
aad
mov
sbb
les
lods
mov
dec
cs
cmp
adc
sbb
dec
jmp
fcmovu
dec
dec
jecxz
pop
mov
pop
arpl
pop
mov
rorl
ds
aad
push
mov
pusha
daa
in
cltd
jecxz
out
ljmp
push
mov
sub
bound
xor
lds
add
mov
mov
cltd
add
mov
or
mov
or
pushf
addr16
push
daa
jae
lcall
pop
mov
mov
mov
jb
lret
cmp
adc
push
xorl
jmp
pop
add
movsl
xchg
mov
clc
dec
dec
adc
dec
jg
repnz
jmp
in
mov
xor
fdivs
test
stc
add
dec
roll
lods
push
pop
or
stc
fbstp
test
cmp
dec
jnp
mov
ret
or
pusha
outsb
and
lods
fiadds
add
pop
dec
into
cmc
xor
adc
std
add
inc
popa
insb
inc
inc
adc
mov
adc
sub
cs
mov
cld
popf
or
add
adc
insb
les
adcl
push
cmp
repnz
mov
cld
mov
jb
and
inc
rcrl
xchg
call
mov
shl
mov
in
shl
cmc
popa
mov
mul
and
cmp
sbb
or
mov
jmp
lret
pop
test
adc
dec
lcall
and
jmp
mov
xchg
push
jp
xchg
xchg
mov
xor
std
ja
cmp
aad
sub
aas
jl
repz
test
and
sbbb
jp
ret
dec
xchg
das
cli
cli
or
sahf
mov
or
inc
mov
nop
xor
push
stos
ljmp
mov
cmc
jo
je
push
sbb
sub
aas
push
xchg
cmp
sar
loopne
sub
fwait
xor
pop
sbbb
call
daa
mov
jnp
dec
or
pushf
dec
hlt
std
sbb
pop
addr16
jns
add
fdivrs
and
fdivrl
dec
sub
sub
jbe
or
jo
push
mov
xchg
insl
mov
mov
pop
pop
enter
push
cmpsl
aad
push
jmp
inc
jp
mov
daa
xadd
mov
lock
loope
push
adc
add
mov
jmp
and
push
cwtl
ja
into
arpl
lods
sub
jo
jbe
sub
mov
lcall
rorl
cmp
arpl
push
in
ficompl
jl
inc
hlt
mov
pop
jge
popa
cmc
xchg
out
imul
sbb
addl
fwait
xchg
jne
or
mov
pop
jmp
mov
in
sbb
pop
sti
out
fldt
repnz
xlat
ljmp
sbb
mov
pop
jle
push
cmpsb
push
cmp
sub
and
or
and
add
inc
sbb
push
cs
or
cltd
mov
test
out
js
test
xchg
cmp
gs
aad
mov
mov
ja
pop
jo
cmpl
sti
push
jae
pop
pop
jae
cs
jne
mov
scas
notl
cs
cld
sbb
xor
inc
pop
je
cltd
dec
push
sub
lea
jbe
jbe
loopew
fiadds
inc
iret
pop
fildl
ret
rorb
aam
pop
jge
lcall
in
in
adc
cmp
mov
jmp
packuswb
iret
fwait
sub
ja
jnp
xor
pop
push
pop
fdivr
mov
jnp
repz
sub
in
xchg
aas
mov
xchg
mov
mov
mov
arpl
outsl
jno
and
jb
adc
imul
jl
int3
test
and
pop
sti
mov
xchg
movsl
or
sub
add
or
mov
lea
jmp
sbb
outsb
aas
xchg
push
call
ds
xchg
dec
cs
sahf
mov
push
dec
mov
xorb
shlb
add
xchg
popa
adc
lcall
jbe
jno
rcl
popf
cwtl
sbb
int
cmp
mov
xchg
inc
repz
add
inc
jno
dec
pop
jno
cwtl
push
cld
lcall
sbb
xlat
fildl
pop
fstl
jl
inc
and
in
shlb
push
xor
cmp
jb
dec
je
mov
pop
es
sub
or
and
scas
mov
lret
and
cmpsl
out
jle
ljmp
and
or
sub
pusha
inc
lds
pop
clc
push
add
outsl
xor
mov
fs
and
out
sti
pop
mov
mov
jo
test
arpl
mov
and
enter
mov
ljmp
pop
push
mov
xor
push
pop
mov
ret
add
in
lcall
jecxz
xchg
xlat
stos
pop
push
mov
les
roll
mov
pcmpgtb
out
dec
and
jb
sbb
mov
xor
stos
push
stc
shlb
jnp
negb
movq
mov
popl
arpl
mov
scas
inc
and
adc
mov
lods
ret
push
jmp
xor
push
dec
mov
scas
cmp
filds
aaa
jo
push
repnz
pusha
push
and
inc
push
mov
ljmp
test
lahf
testb
movsb
outsl
jmp
or
push
jmp
cmc
scas
pop
cmpsl
je
mov
das
movsbl
mov
sub
bound
add
fisttpl
mov
test
popf
ret
out
mov
test
call
sbb
stos
js
scas
imul
ficompl
popf
and
repnz
mov
cmpb
xor
lds
test
dec
ficoml
sbb
fcmovu
mov
sbb
cmpsl
cvtps2pi
imul
xor
decb
jp
push
lods
sti
fsincos
pop
es
fldt
scas
lea
cmpsl
and
or
lock
dec
jg
push
and
popa
push
push
popa
pop
aam
arpl
in
sbb
xor
ljmp
cmp
mov
lds
hlt
popa
js
sahf
std
add
adc
jnp
imul
aaa
inc
shll
arpl
popa
push
pop
or
xor
or
das
ja
push
out
lahf
cs
jbe
xchg
cmp
dec
adc
push
jle
xchg
cltd
ficompl
mov
aad
int
pusha
sub
xchg
pop
mov
jns
jl
cmp
enter
test
and
xchg
and
xor
and
inc
je
pmulhuw
call
test
mov
scas
in
testb
fcmovne
bound
push
ljmp
test
mov
lea
xchg
in
sub
loope
and
rolb
add
mov
mov
loop
lds
xor
in
rcl
rolb
xor
fimuls
xor
test
add
mov
mov
inc
cmpsb
push
inc
stos
pop
add
push
sbb
adc
mov
add
mov
fists
cwtl
add
scas
in
jnp
je
jno
push
sbb
pop
daa
mov
jg
popf
lods
orb
mov
xorl
sub
dec
jnp
fsub
imul
adc
lods
dec
xchg
pop
xchg
mov
scas
stc
jae
pusha
fwait
cli
ret
jg
or
sbb
outsb
mov
jmp
sbb
addr16
lea
out
sub
dec
stos
dec
lods
shr
xchg
dec
lods
loop
mov
andl
jmp
xor
fwait
push
push
nop
adc
adc
ret
cmp
cmpsb
jmp
jb
imul
fwait
mov
pop
xchg
cli
or
mov
jnp
ss
mov
fisttpl
jns
mov
add
sbb
xchg
in
adc
in
fcompl
aad
jbe,pt
sub
or
adc
sahf
adc
dec
xchg
in
jmp
and
ja
shll
and
je
jne
fsub
xchg
xchg
movsb
outsl
cmp
xchg
sbb
scas
lods
je
fldcw
mov
pop
mov
aad
mov
and
lcall
or
out
enter
push
xor
lahf
repz
adc
inc
jg
mov
out
cmp
das
js
xchg
fwait
pop
into
adc
xchg
lock
dec
scas
stos
notb
cmp
push
adcl
dec
xchg
out
and
fmul
push
lea
sub
sub
inc
das
add
lahf
nop
add
pop
cmpsb
add
mov
jp
mov
insl
or
adc
mov
stos
adc
jno
jg
mov
pop
sub
add
in
loop
je
pusha
cld
lcall
aam
pop
adc
jne
add
fxch
movsb
mov
pop
mov
xor
or
or
repnz
aam
f2xm1
inc
push
jmp
and
ss
and
lock
ds
jmp
lret
mov
xlat
movl
push
jl
das
cwtl
or
mov
cmpsl
cmpl
or
cld
jle
outsl
jecxz
std
and
lret
mov
test
insb
insb
out
stos
das
lahf
xor
sarl
mov
movsb
daa
or
jo
pop
fdivs
mov
das
ljmp
or
pop
add
pop
iret
test
cmc
addb
js
test
jns
and
and
movsb
or
adc
andb
ds
out
xor
lret
push
ljmp
sbb
sub
jae
mov
xor
add
dec
adc
push
ss
sbb
gs
pop
pop
adc
sbb
sti
and
adc
push
inc
pop
jecxz
cmpsb
and
push
stos
push
ret
push
or
call
cmp
mov
and
mov
jo
mov
fmull
and
jbe
mov
faddl
and
mov
pop
dec
push
lods
pop
mov
jmp
dec
inc
dec
xor
subb
test
outsl
popa
mov
jno
lds
stos
divl
bound
pop
pop
shll
stos
movzbl
dec
pop
mov
adc
mov
loop
sti
sbb
add
daa
rcl
pusha
in
cmp
push
mov
or
lods
push
xor
fwait
cmp
pop
faddl
pop
addb
xor
cmpl
in
int
daa
ret
test
cmp
xor
cmp
scas
in
aam
ja
aaa
in
adc
inc
mov
fsubl
xor
shlb
and
cmp
adc
xchg
mov
mov
push
mov
xor
add
ss
mov
and
mov
xor
xchg
mov
xor
int3
pop
cmpsl
sbb
adc
mov
jbe
popa
mov
mov
pushf
es
out
adc
dec
iret
subb
insb
xchg
loop
push
fwait
jne
pop
lock
rolb
push
scas
and
push
mov
push
cmpb
push
std
lahf
pop
adc
sub
iret
jecxz
pop
test
mov
jno
fucomp
loope
add
jnp
std
add
sahf
sbb
inc
push
pop
xor
dec
pop
inc
sar
lahf
bound
xchg
mov
rcll
pop
bound
xchg
clc
call
dec
push
lock
shlb
in
or
cmovg
mov
pushf
scas
mov
sbbl
out
sub
pushf
addb
push
cmp
inc
sbb
addr16
cmp
push
cli
cmp
orl
push
fdiv
test
dec
inc
fiadds
push
stos
neg
outsb
mov
mov
xlat
dec
loope
movsl
jnp
pop
lret
inc
das
xchg
mov
cmp
out
jb
inc
jbe
movsb
and
add
rcrl
inc
std
jge
rorl
shlb
pop
dec
lock
sbb
mov
mov
add
inc
add
inc
aam
stc
test
mov
ljmp
std
jp
jmp
mov
dec
dec
pop
insl
inc
xchg
movsl
lods
push
pop
xchg
xlat
test
arpl
faddp
mov
add
cmp
jle
cmp
push
lret
adc
dec
inc
fs
cli
cmp
fnstcw
sti
dec
sahf
daa
ljmp
adc
sub
mov
test
adc
mov
fsubl
scas
mov
ds
imul
cmpsl
push
xchg
adc
sub
mov
mov
adc
js
xchg
inc
mov
insb
popa
jnp
mov
shll
nop
out
sbb
je
cmc
stos
bound
popf
scas
dec
dec
cmp
popa
arpl
or
orl
adc
es
daa
fsubs
inc
inc
sub
xor
dec
sub
dec
dec
add
clc
ds
cmpsl
sahf
lods
xchg
add
dec
repz
mov
insl
mov
les
outsl
int
test
arpl
push
mov
cwtl
call
mov
jne
push
movsb
mov
fbstp
hlt
xlat
jmp
xor
lds
scas
cmpsl
sbb
sub
dec
jmp
and
insl
push
add
test
sbb
imul
add
jnp
or
and
enter
inc
push
test
daa
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
sbb
scas
push
xor
stos
fwait
lret
stc
stos
cltd
cmp
ret
leave
pushfw
sub
testb
neg
daa
lcall
cmp
xchg
jmp
in
push
jmp
frstor
flds
dec
adc
sbb
scas
mov
mov
lret
ret
xchg
shrb
jbe
aam
mov
xor
stos
repnz
repz
pop
data16
shlb
into
mov
arpl
xchg
add
cwtl
imul
pop
rcll
lock
mov
mov
pop
sub
fdiv
inc
push
ficomps
xor
fistpl
stos
mov
mov
or
push
insl
xchg
incl
push
insl
aad
js
ljmp
outsb
test
mov
push
cltd
scas
fisttpll
test
fiadds
test
dec
cld
adc
cmp
aas
ret
sbb
xchg
cmp
push
test
add
nop
push
add
inc
sbb
cmp
mov
shr
repnz
insb
mov
fsubs
scas
aam
std
jecxz
xor
mov
ret
pop
sub
and
divl
pop
jae
jns
scas
lcall
js
push
in
out
ret
clc
cli
pop
orl
testl
fsubs
lret
mov
incl
push
push
jae
ficomps
notl
mov
xchg
cmp
outsl
mov
out
and
std
fwait
jge
or
pop
insb
or
mov
loop
inc
dec
ret
stc
jecxz
cmp
cmc
mov
les
imul
insb
mov
nop
ret
pop
stos
mov
mov
lods
gs
dec
push
sbb
xchg
shlb
dec
daa
ror
xchg
sbbb
pop
ss
inc
cmp
add
adc
push
test
push
xor
inc
sbb
mov
dec
and
out
bound
and
push
ja
jp
adc
sub
pop
out
pop
aad
mov
inc
mov
stos
jnp
jb
xchg
xor
inc
push
dec
push
in
jmp
stc
outsb
out
pushf
call
jb
lret
sbbb
mov
xchg
ds
push
imul
mov
mov
dec
pusha
pop
fdivl
add
mov
adc
divb
nop
jge
outsl
and
xchg
stc
les
outsl
inc
inc
mov
xor
pop
aas
push
in
fnstsw
inc
sbb
leave
adc
mov
cmp
lds
xchg
das
fiadds
cmp
stos
les
cwtl
xchg
mov
xor
and
xor
dec
movsl
orb
pop
incw
mov
loope
inc
pusha
shrl
sub
sub
lea
sbb
and
int3
add
or
movsb
sub
inc
and
jmp
movsb
jmp
lds
mov
sub
mov
out
stos
scas
cmp
jle
jmp
out
xchg
mov
insl
insb
aad
xchg
push
je
jb
jne
es
sbb
jl
mov
xor
cli
mov
leave
loopne
dec
xor
shrb
add
loop
and
cli
or
sbb
nop
xorl
loopne
adc
outsl
xor
cmp
addr16
mov
ret
mov
push
js
mov
xchg
mov
sub
jno
out
aam
std
daa
and
push
je
ljmp
rcrl
into
lods
sbb
iret
shll
data16
not
and
out
ret
or
lret
cmpsl
cmp
mov
js
sub
scas
mov
mov
pusha
xchg
pop
xchg
mov
sbb
lret
addr16
and
push
call
jnp
fwait
js
and
lods
aas
push
hlt
and
pop
jno
adc
outsb
cs
and
adc
mov
test
fs
pop
mov
sbb
data16
adc
sub
dec
xlat
cmpsl
jne
mov
fcomps
lea
xor
mov
xorl
dec
pop
mov
xchg
idivb
sbb
mov
jp
xor
jle
push
shlb
outsb
enter
dec
loope
mov
hlt
cli
adc
ret
mov
xor
fstpl
in
push
jle
ret
inc
mov
fdivl
mov
cmp
mov
mov
push
clc
push
xchg
cld
hlt
cmp
data16
fsubs
out
xlat
mov
xchg
add
sbb
and
lea
inc
adc
and
cmp
call
enter
fisttpll
std
popf
aaa
push
jo
jle
xchg
scas
stc
jo
add
sbb
dec
bound
mov
and
mov
push
mov
lods
imul
xor
sub
lock
xchg
repnz
xchg
into
bound
test
xchg
mov
lret
push
ja
pop
popf
pop
and
push
fidivs
add
into
ret
jno
xchg
call
mov
add
jns
add
std
push
push
out
cmp
push
outsb
movsl
pusha
add
sahf
outsb
js
ljmp
bound
stos
rcr
jecxz
add
mov
out
imul
push
dec
mov
pop
loope
lret
sbb
lock
xor
cmpl
into
jae
pop
inc
test
mov
jge
popa
add
push
cmp
aad
repnz
xor
adc
mov
in
lock
enter
xor
adc
call
xor
inc
lods
fsub
mov
inc
and
nop
push
enter
mov
in
or
sarb
ret
imul
jnp
add
mov
push
jge
lahf
adc
daa
popf
outsl
and
in
sbb
mov
add
ja
dec
or
sbb
cltd
hlt
sub
pop
out
movsb
or
sbb
lods
adc
cmp
adc
mov
lcall
cld
push
icebp
lcall
lock
cmpsb
fildl
xchg
pop
test
jne
clc
mov
ret
loop
std
inc
inc
movsb
data16
arpl
mov
adc
loop
movsb
push
popa
fidivl
or
loope
jns
ret
fldl
dec
jge
xorb
and
mov
gs
push
nop
add
add
dec
xor
icebp
andb
test
push
jns
aam
inc
loopne
and
xchg
pop
out
adc
jcxz
sbb
aaa
iret
cmp
lods
jae
sbb
xor
xchg
jg
bound
fcompl
or
es
xor
in
int
int
shlb
or
leave
xchg
hlt
lret
jmp
lods
or
jnp
loop
ja
push
scas
int
sbb
js
jmp
pop
lahf
mov
xor
arpl
sub
fmull
ret
inc
roll
fcmovnu
xchg
xor
lret
divl
adc
popa
scas
xchg
push
jmp
add
das
cmp
xchg
fcmovnu
mov
lahf
cmp
in
pop
mov
mov
stc
xor
aam
imull
out
xor
sbb
dec
or
das
sub
lea
test
aad
fdivrs
imul
adc
ret
movsl
ds
scas
std
insb
cmp
xchg
ljmp
xor
lea
mov
pop
test
fsubl
bnd
lods
fimull
ficoml
cmp
mov
jno
int
out
xchg
mov
outsb
adc
mov
aam
xchg
adc
je
ljmp
jnp
cmc
fwait
stos
push
fnsetpm(287
lcall
inc
loop
mov
cwtl
jo
mov
aam
je
adc
ret
sub
pop
test
cld
adc
mov
sti
ja
cmp
dec
or
cld
push
bound
or
push
mov
xor
sti
aas
mov
stos
cli
mov
fld
loopne
mov
dec
fisubs
movsl
mov
mov
adc
jae
xchg
iret
xchg
and
lahf
push
unpcklps
xlat
pop
mov
jno
add
xchg
push
fwait
sub
nop
pop
jle
push
inc
std
roll
lahf
sub
mov
imul
int
mov
mov
lods
pusha
popf
add
mov
popf
jmp
pop
aas
sbb
sub
pop
lret
lods
mov
and
cmpsb
out
in
ljmp
pop
xchg
push
jbe
in
lret
sbb
cwtl
out
stos
iret
and
mov
add
xchg
xchg
repz
fstpl
sub
lock
dec
lret
in
and
mov
insl
sub
clc
sbb
in
sub
mov
mov
and
js
dec
adc
andl
out
imul
mov
loop
xchg
and
push
iret
roll
or
cmp
and
and
pop
int
jo
adc
into
xchg
push
bound
nop
stos
mov
stos
lea
adc
or
cwtl
adc
sub
push
add
pusha
insb
cmpsb
adc
cmp
shlb
and
daa
and
loop
lcall
and
insl
xchg
repz
or
jg
mov
pop
mov
out
cmp
loopne
dec
les
cmp
popa
lret
jl
les
sub
or
ret
bound
mov
mov
fwait
in
xchg
mov
rcrb
inc
mov
dec
sub
leave
js
popl
xor
fstp
mov
dec
aad
xor
fwait
rorb
and
add
mov
and
jnp
loop
das
mov
jecxz
in
inc
mov
aam
jae
xor
mov
and
mov
sbb
sbb
xor
insb
mov
sarb
mov
xor
pop
jo
mov
xor
lret
cmp
mov
cltd
sub
iret
rcll
ja
insl
lock
jnp
dec
mov
fmull
in
xchg
add
jp
sub
bound
add
repnz
push
sub
xchg
outsl
cld
sarl
cmp
sbb
inc
frstor
and
fisubl
jl
sub
dec
or
jae
mov
outsb
movsl
scas
jmp
push
cmp
fwait
scas
fcompl
mov
jae
js
jo
enter
out
cmp
lock
out
push
push
pop
or
or
adc
icebp
pop
into
inc
and
imul
inc
pop
jno
mov
mov
imulb
leave
inc
das
out
xor
adcb
and
imul
push
sub
xor
pop
sub
mov
in
cmpsl
mov
roll
das
clc
dec
jne
ret
cs
xchg
mov
int3
decb
mov
cmp
mov
push
xor
jb
lods
sub
add
aad
fninit
adc
scas
test
push
pop
mov
pop
imulb
aaa
popf
push
fwait
inc
dec
aam
imull
ss
lock
dec
ss
lock
loop
adc
xor
inc
mov
addl
xchg
xchg
scas
fbstp
repz
push
mov
xor
bound
push
push
mov
dec
xchg
iret
out
std
clc
mov
mov
out
inc
fs
push
fs
clc
inc
in
sbb
or
xchg
or
lret
fs
or
cmpb
sub
xchg
sub
insb
mov
je
push
loopne
faddl
add
hlt
cld
jecxz
jb
jo
call
mov
pusha
jbe
hlt
popa
push
inc
jbe
pushl
loop
jnp
mov
loope
movsl
adc
add
push
push
jns
into
pop
dec
push
add
movsb
cmp
mov
add
mov
mov
enter
jbe
mov
leave
push
fwait
pop
imul
push
jecxz
adc
mov
repz
mov
add
popf
repz
cmp
pop
ret
push
bound
loope
fwait
mov
dec
xchg
adc
mov
adc
xchg
pop
cmp
add
jae
push
xchg
xor
or
lret
fs
insl
push
in
movsl
xchg
push
test
jne
sub
es
stos
cmp
jmp
mov
ret
push
jno
xchg
dec
fcmovb
mov
pop
sbbl
enter
in
loopne
xor
xchg
xchg
pop
pop
mov
jmp
mov
lret
sbb
sbb
and
mov
jg
imul
and
loopne
in
and
ja
pop
test
adc
lods
xchg
repz
insb
inc
int
shrb
inc
mov
mov
test
test
test
sarb
push
inc
cld
call
push
iret
pop
aas
lods
adc
pop
fisttpl
mov
popa
addr16
mov
mov
rcrl
out
mov
cmp
adcb
cmc
mov
cmp
push
jl
mov
cmp
jo
jge
dec
push
xor
push
add
sub
mov
lods
pop
jae
popf
cmp
sub
fimull
mov
add
fidivrl
addl
mov
sub
testl
mov
shll
aaa
xchg
scas
push
cmp
dec
cmc
add
push
inc
lods
addr16
pop
sbb
xchg
and
jns
xor
iret
mov
mov
dec
or
sahf
cld
lea
pop
jns
pop
rolb
and
or
stc
add
push
pop
mov
mov
fwait
mov
cmp
ja
mov
popf
ljmp
sbb
in
xorl
push
dec
loop
jne
cmpsb
xor
sbb
mov
rclb
sbbl
int
popf
mov
cmovne
or
out
pop
xchg
mov
sub
push
jae
cmp
test
cmp
cmpsb
lods
insb
movsl
test
imul
inc
mov
cli
mov
clc
std
push
movsb
mov
lahf
xor
out
stos
test
jns
ficoms
aad
mov
adc
mov
sbb
dec
and
or
ss
xor
cmp
sub
xchg
push
fsubs
cmp
jne
lret
nop
or
insl
push
sub
adc
enter
in
leave
stos
push
imull
cmp
mov
lret
fstl
lds
mov
cwtl
mov
xchg
in
xchg
xor
cmc
shlb
adc
pavgb
add
out
test
ficompl
fmull
dec
jno
pop
loop
mov
in
mov
in
ljmp
clc
mov
xor
pop
jp
xchg
inc
les
add
arpl
fdivl
icebp
stos
xchg
xchg
lock
jo
push
stos
pop
pop
repnz
mov
stos
mov
inc
ret
xchg
mov
stc
jmp
xchg
and
jg
hlt
je
inc
inc
ja
adc
dec
xchg
xor
hlt
jg
jp
fisubl
clc
lcall
mov
imul
xchg
cs
mov
cmpsl
jge
fdivl
ja
fistpl
add
cmp
and
ss
es
loope
push
and
not
mov
inc
lock
lahf
cmpsl
sub
arpl
ja
add
fs
fdivrl
in
loop
inc
mov
inc
aaa
das
mov
jmp
lcall
dec
adcl
xor
inc
adc
pop
icebp
mov
push
mov
ret
fyl2x
rclb
cmpsl
mov
sbb
push
xchg
push
scas
jne
fsubrl
fisttpll
inc
into
pop
xchg
pop
mov
sbb
cmp
ret
ljmp
int
jmp
js
adc
push
loop
ret
mov
fldenv
lea
jmp
movsb
jb
test
xor
scas
sub
push
cmc
adc
jne
repnz
stos
in
cmc
loopne
xchg
dec
shrb
add
add
and
lods
inc
push
sub
and
ss
leave
repz
or
hlt
das
arpl
ds
fwait
in
into
pop
xchg
cmp
sub
inc
aad
popa
int
inc
pop
xchg
sahf
outsb
xchg
nop
int
jae
pop
dec
xor
jae
inc
xchg
push
popl
imul
add
mov
mov
in
mov
jecxz
sbb
rcl
lret
leave
out
pop
scas
mov
jle
sub
imul
das
pop
and
mov
divl
scas
jp
lret
jo
push
mov
out
repnz
imul
pusha
scas
mov
or
jnp
test
xchg
push
cmp
arpl
pop
sub
rcrb
cwtl
ds
insl
hlt
sbb
gs
jns
mov
cmpsb
mov
rcl
addr16
loope
ss
mov
cltd
push
pushf
jg
add
popf
cwtl
hlt
jnp
mov
pushf
in
enter
cmp
pop
push
loopne
repz
out
jb
jle
mov
pop
out
sbb
insb
fidivrl
push
notb
cmpsl
inc
push
dec
jae
mov
jb
lret
in
test
adc
mov
push
roll
jmp
test
mov
pusha
icebp
xchg
push
push
jecxz
jmp
hlt
mov
ret
addl
mov
mov
les
dec
push
clc
lds
pusha
nop
xlat
push
mov
shll
loop
test
movsl
icebp
icebp
cs
jg
inc
push
cmp
ds
ret
pop
insb
adc
lret
icebp
xchg
push
adc
cld
jmp
mov
mov
imull
cmp
icebp
mov
lods
sahf
lcall
sarb
jnp
test
cmpsl
inc
jle
aas
cwtl
cmp
mov
dec
std
into
push
xchg
daa
add
xchg
dec
xchg
ljmp
lock
xchg
mov
es
xchg
imul
fwait
push
adc
fistl
nop
xor
mov
mov
in
mov
jp
into
mov
movsl
sbb
or
xchg
jmp
pop
fstps
popf
jle
cmp
push
mov
jecxz
jge
std
cld
out
imul
int
or
leave
js
mov
mov
xor
pop
repnz
pop
sub
js
xchg
xlat
int3
in
cmp
mov
and
jp
insb
push
cli
iret
pmuludq
mov
xchg
add
lea
sbb
sahf
sub
pop
aaa
into
js
mov
fwait
scas
es
in
ret
pop
scas
rcr
mov
fs
fisttpll
and
data16
push
xchg
call
xchg
movsb
lods
movl
jbe
cmp
inc
in
xchg
bound
negl
arpl
add
mov
pop
adc
add
rorl
pop
std
xchg
jle
insb
xor
jle
push
mov
xchg
test
mov
pop
call
inc
jmp
lods
orl
pop
dec
pusha
mov
sbb
adc
or
sti
jmp
xor
jbe
jmp
push
ret
ret
pop
add
mov
leave
outsb
mov
pushf
outsl
xchg
or
clc
cmp
repnz
fldt
dec
cmp
mov
and
sub
rorl
gs
ljmp
lret
rcll
lret
inc
mov
mov
or
mov
test
push
sub
adc
call
sub
in
sahf
pop
ds
flds
js
push
sbb
divl
pop
jbe
push
mov
out
shr
mov
lahf
loop
adc
stc
shlb
data16
xor
fcompl
into
pop
repz
xchg
gs
inc
in
cmpsl
xchg
adc
or
sbb
mov
cs
jmp
cmpl
or
in
insb
dec
fidivrs
or
mov
arpl
mov
sbb
cmpsb
decl
nop
sbb
xor
jae
pop
fists
jb
pop
cwtl
add
xchg
xchg
cwtl
cmp
sbb
fidivrs
push
sti
add
dec
pop
jnp
xchg
in
adc
mov
popf
mov
insb
xor
iret
cmp
sar
enter
cmp
xor
mov
std
pop
sbb
cmp
and
and
inc
shl
addr16
xor
xor
mov
ss
jno
sub
aaa
mov
pop
dec
mov
adc
out
push
xorb
inc
xchg
or
inc
mov
sub
mov
daa
int3
outsb
stc
jns
fistpl
jmp
movsl
inc
push
mov
jno
push
dec
lahf
inc
jae
push
js
add
mov
negl
loop
xchg
out
sahf
xor
push
cmc
mov
gs
das
mov
das
xor
fcomps
xchg
xchg
cmpsl
popf
fstpl
push
and
pop
lcall
addl
dec
mov
je
ret
sar
stos
inc
cmp
mov
negb
repz
fwait
popf
out
sub
dec
pop
in
movsl
mov
divl
mov
mov
pop
imul
or
and
in
je
xlat
pop
test
push
mov
jmp
adc
rorl
ja
sbb
popa
cs
es
xchg
orl
lock
popf
pop
mov
inc
push
insb
mov
cld
fstl
aaa
dec
push
mov
inc
scas
mov
lahf
mov
adc
in
push
push
jne
mov
xor
enter
mov
push
je
sub
in
add
call
in
pop
repz
scas
ret
fxch
nop
add
imul
fdivrl
cmp
int
sub
push
dec
mov
sahf
lahf
outsb
nop
cmp
xchg
das
pushf
jno
pop
mulb
mov
cwtl
xor
out
sbb
xor
aad
sarb
loope
gs
test
imul
arpl
mov
sub
nop
movsl
sbb
jg
sbb
jbe
sub
mov
out
jecxz
cmpl
ss
jg
fistpl
loope
sbb
inc
inc
add
mov
addb
bound
cld
mov
cmc
add
push
in
movsl
push
outsl
cmp
mul
nop
or
add
test
nop
add
inc
add
push
aas
dec
fwait
rcll
cmp
jle
add
xor
add
push
jo
cmp
movsb
pop
loope
dec
dec
lock
cltd
bound
andl
lret
jecxz
push
iret
paddsb
pop
inc
inc
lahf
dec
push
inc
addr16
int
pop
push
xor
jns
das
and
fs
adc
pusha
repnz
insl
jno
add
subb
fldenv
mov
xchg
jne
pushf
aas
fcoms
in
dec
das
in
stos
jns
loop
addr16
pop
xchg
xor
lds
dec
sahf
pop
mov
ljmp
lods
inc
adc
in
test
cwtl
pusha
sbb
and
imul
sbb
jmp
push
add
gs
mov
jp
mov
outsb
xchg
mov
icebp
clc
jecxz
outsb
and
jmp
movsb
jmp
adcl
push
push
movsb
pop
sbb
loop
aad
mov
fldcw
imul
sbb
adcb
or
fstl
push
mov
imull
ret
sbb
or
mov
adc
out
sarb
test
push
push
sbb
fs
lret
insb
mov
jp
in
mov
int
xor
cmpsl
sbb
movsb
pop
mov
loop
test
pop
rcll
adcb
pop
fs
scas
xor
mov
push
popa
data16
push
jns
xor
add
js
inc
push
xchg
je
movsl
xor
sbb
mov
inc
fcomp
mov
mov
pop
adc
xor
ljmp
push
fidivrs
notb
addl
decl
adc
cmpsl
pop
xchg
imul
shlb
je
test
mov
mov
iret
mov
and
and
outsl
jl
dec
flds
jb
cmp
mov
cmp
testl
or
pusha
shlb
sbb
dec
xchg
ret
sub
sarl
fadds
xor
add
mov
gs
lret
and
cs
jle
xchg
out
aas
xor
or
das
mov
repnz
mov
push
add
mov
xor
and
mov
xchg
xor
cmp
ja
xchg
into
movsb
test
incl
xor
pop
mov
inc
scas
int3
js
int3
mov
das
pop
inc
out
out
scas
je
adc
aad
xor
repz
fwait
std
jg
stos
aam
jae
or
jbe
and
pushw
adc
jg
cwtl
sbb
add
sub
sub
cmc
popf
mov
imul
lds
insl
dec
scas
and
sbb
nop
cltd
negb
outsl
or
popa
jp
dec
xchg
negb
mov
adc
dec
adc
sti
daa
inc
test
sub
xor
shrl
or
imul
mov
mov
and
lret
xchg
repnz
sbb
xchg
jge
addb
xchg
test
pop
dec
fsub
jmp
pop
xor
fisttpl
mov
add
rcll
and
push
enter
mov
cmpsb
xchg
sub
or
lds
je
addr16
sbb
dec
sbb
jnp
pop
arpl
lret
push
xchg
lahf
arpl
cmpsl
mov
notb
lret
call
mov
outsb
ja
xor
cwtl
pop
cwtl
mov
cwtl
mov
or
out
or
and
or
cmp
out
iret
clc
sbb
add
jbe
mov
jne
in
cs
push
push
add
insb
add
lock
out
dec
stos
push
sbb
or
sbb
daa
shrl
out
popa
lock
cmovp
sbb
negl
mov
pop
sarb
mov
xchg
xchg
enter
and
add
mov
xchg
jnp
jp
fnclex
pop
inc
sbb
aaa
xchg
imul
and
ja
jno
lods
mov
or
pop
mov
jo
and
mov
dec
arpl
mov
cmc
jmp
leave
fdiv
inc
xor
fldenv
jns
loopne
xor
and
cmp
or
in
fldl
dec
dec
outsl
es
pop
xchg
mov
cmp
movsb
sub
std
out
inc
test
inc
aam
sub
nop
movsb
cmpsl
cmpsl
aaa
xchg
jb
sub
xchg
mov
in
adc
fcoms
fstpt
fs
mov
roll
jnp
cmp
push
mov
xchg
imul
sub
mov
andl
daa
mov
mov
pop
test
jle
mov
jle
sbb
jmp
jp
dec
mov
fstpt
jo
cmp
add
pop
or
sahf
sbb
int
aas
scas
rorl
outsl
xchg
sbb
add
movsb
scas
sahf
add
cmp
ud2
hlt
andl
mov
test
xor
fs
xchg
push
push
pop
mov
hlt
cld
mov
cmp
je
nop
cli
in
out
enter
mov
dec
call
adc
adc
xorb
mov
and
jmp
dec
xchg
mov
scas
cmp
popa
aaa
enter
cltd
jecxz
adc
mov
cmp
shlb
rclb
sub
adc
dec
decl
fwait
lret
sbb
inc
adc
sbb
stc
out
fnstenv
sarl
cmp
mov
lret
push
imul
mov
mov
jns
hlt
xor
data16
cmp
sub
adc
mov
push
cld
aaa
pop
fnop
lods
mov
jg
pop
jecxz
enter
cmp
cs
mov
jp
in
add
ds
inc
sbb
xlat
in
pop
xor
pop
adc
adc
xchg
sub
les
pop
test
or
inc
jnp
iret
cltd
aad
inc
cmp
test
int
sbb
pop
push
cwtl
push
add
hlt
push
test
movsb
mov
lret
jno
lret
mov
sub
stos
push
ja
imul
xchg
push
and
scas
xor
das
push
jns
in
jnp
pop
out
lea
fwait
cmp
enter
test
inc
pop
lock
lahf
imul
adc
leave
not
push
mov
xchg
fst
xchg
pop
cld
lods
movsb
hlt
add
shr
push
cmc
xchg
mov
enter
mov
imul
stos
stc
or
jl
sti
push
sbb
pop
mov
dec
dec
and
jge
xchg
mov
inc
fdivs
dec
gs
and
rorb
fs
ljmp
jns
outsb
out
divb
sub
imul
iret
mov
inc
ret
add
stos
movsb
and
inc
mov
pop
mov
push
add
ss
xchg
push
push
jl
movsb
fbld
scas
or
arpl
stos
rcll
jb
push
push
dec
sub
fadds
jnp
repnz
pop
fstpt
xchg
sub
sti
orb
minps
fs
cmc
cmp
adc
dec
fildl
sbb
mov
popa
or
outsl
out
mov
sbb
sbb
fwait
je
cmp
pop
lock
out
cmp
jge
xchg
add
scas
lcall
pop
jbe
or
mov
add
js
or
scas
ret
adc
push
xchg
inc
pop
stos
dec
or
push
cmc
jb
fnstsw
pop
repz
cmp
outsl
push
ljmp
pushf
sub
lds
cmp
lods
mov
clc
imul
loopne
lods
or
mov
inc
out
shl
hlt
push
mov
jno
and
test
movsb
mov
lods
scas
xchg
push
mov
push
add
cmp
cmp
push
add
jns
into
test
sub
in
pop
std
adc
xchg
cmp
mov
mov
lret
cmp
out
movsb
cmp
push
jge
aaa
rorl
xchg
std
xchg
xchg
xor
pop
inc
sbb
inc
popf
leave
sbb
out
inc
mov
add
cmpsb
pop
into
sahf
xor
cmp
adc
out
or
lds
sbb
testb
jle
fldl
ja
dec
xchg
popa
ja
test
fistpl
jno
ret
lret
dec
outsl
cld
in
mov
lock
js
rcrb
cmp
fstpt
ret
roll
fistl
xor
outsb
out
repnz
lods
mov
das
push
inc
into
dec
inc
sub
xchg
sub
cmp
fwait
adc
subl
mov
cld
mov
ljmp
out
fs
lcall
movsl
jp
lret
mov
scas
sub
jg
cmpl
mov
out
rcrb
das
adc
je
push
loopne
jno
and
dec
test
enter
int
pop
popa
addr16
loop
ljmp
shll
lods
sti
cs
sub
test
mov
push
sbb
or
add
dec
push
xchg
push
shll
pop
addl
sub
daa
pop
adc
and
scas
jns
fsubs
and
push
pop
adc
mov
lcall
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
cld
jae
out
cmp
popa
rcrb
jg
les
ret
dec
test
bound
mov
xor
inc
inc
push
jns
aam
xlat
rorb
lods
sbb
xchg
ss
adc
dec
andb
loopne
lret
xor
add
inc
xlat
inc
outsl
pop
jo
in
push
scas
imul
or
cmp
or
sbb
dec
xor
popl
mov
dec
and
cli
sahf
mov
or
push
cld
nop
ror
fisttpl
mov
jecxz
xor
push
adc
mov
adc
cld
xor
add
fadds
and
pop
push
cld
sub
add
jbe
mov
scas
fistps
and
jle
jle
daa
cmp
mov
cmp
push
gs
mov
mov
test
in
popa
fwait
shrl
jbe
mov
mov
push
enter
stos
adc
aad
xchg
aaa
loope
test
xchg
jae
push
jne
push
out
xlat
xor
or
sti
and
sbb
syscall
test
roll
je
add
mov
dec
ss
popa
xchg
scas
cmpsl
stos
ss
out
pusha
lret
nop
add
aas
lods
mov
push
lea
cmpsl
jnp
stos
sub
rolb
lret
xchg
clc
xor
lret
pop
and
iret
adc
mov
mov
mov
inc
sbb
stc
jl
push
push
lods
ret
ss
add
mov
jno
mov
aam
stos
cmc
pop
sarb
lock
dec
add
ds
lret
and
lea
jmp
lahf
fs
add
mov
lret
mov
loopne
xor
shrb
jge
rorl
mov
jmp
add
xor
mov
xchg
sub
adcb
and
add
jb
das
xor
adc
pushf
cmp
insl
loop
shrb
mov
mov
lahf
dec
loope
ja
sbb
or
iret
pop
gs
addr16
or
xchg
jbe
xor
arpl
xchg
mov
mov
jbe
arpl
cmp
mov
jge
pop
dec
ficoms
mov
cmp
sub
xchg
pop
std
int3
movd
subb
cmp
push
shrb
das
inc
clc
lret
mov
lret
xchg
dec
cli
icebp
inc
aas
pop
sub
icebp
sub
clc
rcrb
mov
xor
inc
fs
loop
and
call
outsb
sti
jbe
inc
mov
test
mov
mov
inc
xorb
popf
dec
lods
es
mov
ljmp
xchg
in
mov
jbe
mov
mov
sub
mov
pop
popa
mov
pushf
shl
jle
mov
hlt
lods
pop
jge
mov
mov
cmp
neg
mov
jmp
mov
cmc
xchg
xchg
mov
fs
ljmp
pop
mov
push
xchg
arpl
pop
sub
or
fistps
jns
or
aaa
ret
fsubr
cld
and
pusha
cld
in
mov
iret
inc
fcos
lds
movb
addr16
pop
popa
loop
ror
inc
xor
mov
xor
shll
std
aas
cli
xor
and
xchg
hlt
std
sahf
push
cmp
call
clc
comiss
repz
or
adc
icebp
rolb
movsb
faddl
aad
or
push
push
sub
sbb
jl
ss
mov
sbb
not
adc
fidivs
bound
jne
and
mov
mov
aam
mov
repz
int
xchg
rcll
xor
adc
aaa
out
lods
adc
imul
fmull
and
sti
sbb
or
into
fnstenv
xor
imul
stc
push
out
push
jl
aaa
sbbl
add
xlat
mov
lret
jge
nop
loopne
mov
outsl
push
sub
aas
xchg
push
and
fldt
cs
stc
sarl
mov
xchg
into
ljmp
pop
or
fs
sub
pop
dec
cltd
dec
in
dec
xchg
outsl
fisttpll
jbe
mov
iret
add
cmp
je
test
orb
pop
std
adc
mov
movsb
push
sbb
adc
gs
adc
pop
dec
movsl
push
jb
insl
cli
push
push
ja,pn
gs
xchg
aaa
mov
mov
mov
adc
mov
add
xchg
xchg
fstl
xor
in
adc
lods
out
out
je
int3
and
cmp
push
inc
stos
cmp
cmp
loope
out
movsl
ss
lods
push
lret
incl
xchg
ds
in
scas
dec
dec
stos
or
cmp
lods
ret
daa
movl
cmpl
loop
jb
stos
lcall
icebp
dec
adc
push
xchg
xor
jl
cmpsl
mov
sbb
gs
sti
pop
aaa
movsl
lahf
insl
mov
mov
sbb
aad
and
push
dec
fs
leave
pop
or
dec
stc
test
adc
xchg
lret
or
sbb
inc
push
add
fwait
out
adc
lcall
cmp
dec
add
mov
pop
clc
ss
jg
adc
stc
push
adc
jns
adc
dec
clc
xchg
adc
aaa
jmp
xor
dec
sbb
imul
pop
sub
orl
in
inc
cmp
mov
mov
sbb
cmp
adc
jo
out
mov
cmp
mov
je
jg
das
pop
dec
add
jg
xchg
or
mov
mov
bound
sub
mov
sbb
sbb
loope
jno
int
sbb
add
orl
icebp
cs
sub
and
iret
sbb
jbe
movsl
popa
jo
jmp
decb
xchg
cmp
sbb
sbb
lret
std
mov
sbb
dec
mov
xor
popf
push
jge
cli
xchg
pop
add
push
fidivrl
std
sbb
pop
inc
xor
dec
je
dec
pop
paddusb
or
rcl
inc
dec
imul
cs
inc
or
mov
jne
xchg
push
je
xor
shll
stos
outsl
jge
push
cmp
outsb
jle
ret
dec
stos
adc
cs
jl
adc
sbb
sub
mov
cmp
sbb
in
sub
lods
mov
inc
pushl
inc
jnp
in
pop
mov
pop
stos
aad
bound
bnd
lods
std
shll
rorl
xor
xor
rorl
arpl
jnp
add
jo
inc
mov
jg
mov
sbb
adc
mov
repnz
adc
out
jge
pop
imul
stos
adcl
into
shll
insl
sbb
inc
mov
subb
ret
pusha
shr
aaa
pop
sbb
addb
insb
cmpsb
cmp
push
add
xchg
out
xor
or
pop
mov
aas
sub
decb
lea
jp
jno
inc
cmp
cld
in
jp
notl
push
hlt
fwait
pop
push
notl
insl
jp
inc
addb
and
pop
out
addr16
pop
or
mov
inc
mov
pslld
cli
movups
mov
pushf
adc
mov
pushl
ret
jne
mov
adc
pop
dec
rolb
movsb
xlat
mov
inc
cwtl
fldcw
jl
sbb
lods
adc
or
inc
xchg
fisttps
pusha
jne
fistl
daa
fs
lret
xchg
pop
leave
or
add
cmp
push
or
or
sbb
cmpsb
or
sub
mov
xchg
testb
sub
fmul
mull
bound
decl
sbb
scas
pop
xchg
decl
out
mov
sub
call
jg
pop
data16
push
cmpsb
sub
scas
movsb
sti
cmp
dec
mov
mov
mov
and
push
push
adc
and
cmp
fidivrl
dec
ss
andl
lods
mov
pop
or
mov
arpl
lahf
in
xchg
stos
ljmp
lret
cmp
in
iret
scas
lahf
jecxz
mov
inc
push
int3
aam
mov
sbb
scas
bnd
cmpsb
sub
push
jb
mov
pusha
les
mov
cwtl
fwait
mov
icebp
lods
sti
scas
push
xor
pop
out
and
les
jecxz
mov
out
cld
ds
pop
push
mov
cs
sub
adc
jl
orl
jb
xchg
xchg
data16
mov
fsubrl
inc
cwtl
adc
or
mov
mov
int
adc
xchg
or
movsl
push
movsl
inc
and
or
andb
sub
push
push
pop
mov
jo
pop
iret
pop
mov
clc
and
hlt
imul
cli
xor
jae
mov
xlat
mov
pop
ficoms
imul
cli
xor
xchg
mov
stos
into
sti
cld
lret
int
jmp
icebp
rcr
jmp
xor
mov
fdiv
ja
lret
repz
inc
push
mov
and
pop
notb
adc
inc
out
add
out
loopne
jle
pop
andb
lods
arpl
pop
jecxz
jg
mov
sbb
test
lods
dec
xchg
sbb
mov
or
fwait
sti
fstp
and
stos
cmp
cli
scas
sub
xchg
daa
sbb
xor
aam
in
cltd
fcmovb
push
enter
or
insl
jle
repnz
mov
lods
fucom
sub
pop
jns
movsb
and
xchg
js
arpl
sti
icebp
lods
clc
push
xchg
dec
push
or
mov
popf
mov
roll
or
cmpsl
icebp
or
addb
ja
xlat
shrl
ffreep
mov
stos
int3
sbb
xor
ret
mov
ljmp
mov
jp
fldenv
and
mov
jo
sbb
mov
dec
dec
mov
faddl
repnz
push
imul
icebp
dec
mov
fbstp
jle
mov
mov
cmp
xchg
in
shlb
push
imul
xchg
lods
adc
pop
addr16
mov
or
loop
xor
call
ja
push
inc
int
imul
jno
inc
divb
cmp
stc
mov
push
lods
inc
mov
sub
loopne
push
mov
lock
jbe
dec
insl
jp
pop
insb
sbb
fsubrl
push
arpl
xor
lret
mov
fsubl
mov
lret
sahf
movsl
jmp
pop
inc
daa
movsl
in
pop
in
add
lds
daa
data16
popf
pop
cmp
mov
and
imul
cmp
jle
incl
and
pop
outsl
imul
out
jno
popa
pop
mov
ja
loopne
sarl
jne
outsb
mov
xor
sbb
xor
xlat
adc
inc
or
pop
out
inc
pop
mov
mov
push
daa
jg
xlat
pop
in
mov
xor
ficoms
xchg
dec
xor
pop
and
pop
in
jns
dec
xorb
push
bnd
cmp
jg
xchg
imul
ret
ds
and
mov
stos
pop
mov
push
xor
imul
enter
enter
add
sbb
je
xchg
or
mov
dec
push
pop
inc
adc
sub
sarb
dec
pop
loopne
fwait
fwait
hlt
fnsetpm(287
cmp
data16
dec
test
cli
inc
dec
iret
movsb
adc
fdivl
or
xlat
xchg
push
adc
add
adc
and
inc
gs
pop
adc
sub
dec
xchg
cwtl
into
insl
jp
aaa
push
imulb
and
inc
les
ljmp
outsl
mov
jmp
or
jno
jo
pop
dec
dec
mov
dec
es
xor
mov
mov
jno
inc
sbb
push
loop
add
loope
cwtl
add
and
jp
pop
ror
push
cs
pop
xor
adc
loope,pt
gs
sub
mov
outsl
cli
cmpsl
inc
mov
adc
outsl
jnp
add
mov
xlat
sub
jmp
inc
add
dec
iret
mov
out
sub
aad
push
test
jecxz
lcall
cltd
add
push
imul
lcall
fsubrs
inc
data16
ds
popa
int3
push
xchg
and
inc
xor
ficomps
outsb
jne
pop
pop
mov
add
pop
cmpsl
jo
xor
out
adc
mov
add
mov
inc
sbbl
cmpsl
push
mov
and
add
push
push
fcompl
rorb
mov
add
lret
xor
inc
push
adc
in
imul
dec
mov
icebp
out
js
xchg
mov
fiadds
into
pushf
outsb
pop
movsl
sub
pop
test
pop
ret
lahf
fwait
jns
cmp
arpl
fst
gs
insb
sbb
mov
iret
inc
dec
cmc
jge
in
pop
fdivs
pop
rcl
imul
sub
ljmp
idivl
mov
inc
test
xor
push
mov
sub
test
icebp
sti
rol
cmpsl
jmp
jno
mov
scas
stos
push
mov
xor
sub
jae
xchg
stc
inc
lock
hlt
add
divl
aam
ds
fdivrl
jg
cs
popa
push
popa
cltd
mov
or
xor
lahf
pmulhuw
adc
lods
mov
lahf
inc
decb
dec
jne
xchg
and
ja
fnstsw
and
lahf
mov
movsl
in
fcompl
adc
and
sub
inc
out
adc
jae
fisttpl
sbb
xor
mov
add
sub
aam
xor
lcall
inc
jns
mov
test
dec
sbb
ljmp
xor
add
add
mull
mov
jmp
jecxz
mull
je
loopne
out
mov
jo
stos
jp
mov
jns
inc
sub
jge
dec
rcrl
mov
push
or
dec
aad
test
popf
jo
fcomps
pop
mov
ja
or
pop
or
outsl
sub
mov
inc
xchg
mov
mov
arpl
sbb
mov
mov
lcall
int
mov
dec
xchg
xchg
int3
ljmp
dec
add
int3
mov
stos
sbb
test
fldenv
loop
cmp
inc
mov
pop
cmp
lcall
mov
dec
jecxz
cmp
mov
call
fbstp
test
cs
sub
mov
jb
lcall
and
imul
gs
fsts
sbb
cmp
mov
mov
pop
add
inc
stc
into
mov
sub
es
negl
call
lcall
lods
test
pop
jnp
outsb
add
mov
inc
cli
in
xchg
cmp
scas
jae
outsb
jg
ror
sbb
dec
das
ret
mov
ds
push
sub
push
or
jmp
xor
cmp
sahf
test
dec
xor
sub
xlat
push
lock
imul
pop
mov
ss
mov
mov
nop
fnstenv
or
push
cmpsb
push
mov
mov
test
setb
dec
arpl
insl
in
ds
inc
or
pushf
popf
movsl
xchg
xchg
bnd
pop
imul
mov
sub
cmp
testb
dec
lock
divl
data16
cmpsl
add
lea
test
hlt
xchg
pop
das
filds
cmp
lahf
inc
inc
cmp
js
cmp
or
sbb
add
push
mov
repnz
out
cmc
rcll
mov
adc
fwait
cs
lret
sahf
in
pop
jno
mov
cmp
sbb
lods
scas
cli
and
enter
jle
dec
in
pop
and
jmp
push
fstl
lret
aad
fbstp
cmc
and
cmpsb
push
jmp
mov
cmp
inc
mov
fnsetpm(287
mov
jbe
loopne
jl
cmp
sub
bound
jnp
lds
rorb
pop
dec
leave
mov
mov
or
xlat
jne
push
aad
test
push
pop
in
xchg
sahf
fs
pusha
push
adc
push
fiaddl
jle
test
adc
in
push
adc
dec
pop
xchg
ret
and
push
pop
adc
hlt
or
or
mov
lds
sub
mov
lods
into
push
outsb
xor
test
mov
adc
shrl
fsubrs
fdivp
rorb
fwait
push
xchg
add
js
jne
adc
cmp
test
sti
sub
and
imul
enter
jno
rolb
outsl
mov
dec
jl
jne
insb
aam
ja
hlt
scas
xchg
popa
test
pop
popf
test
push
out
sub
rcll
out
cmp
dec
ja
stos
push
push
ret
sbb
faddl
repnz
mov
mov
adc
dec
loope
js
into
pusha
lahf
push
enter
inc
mov
cmp
stos
sub
xchg
mov
sub
imul
movsb
je
daa
sbb
sub
pop
xor
adc
fbstp
push
js
sbb
repnz
pop
jnp
xor
scas
ja
or
outsl
fs
xchg
mov
ret
mov
push
dec
sub
add
pop
negl
jae
pusha
dec
std
mov
nop
mov
xchg
ja
daa
adc
add
popa
mov
sub
arpl
jl
vcvttps2dq
dec
pop
mov
or
in
jbe
add
or
xchg
int
and
in
mov
out
dec
enter
mov
call
sbbb
lock
xchg
data16
scas
pop
dec
push
push
daa
call
mov
fs
dec
jae
lods
pop
mov
xchg
stos
jo
pop
mov
adc
outsl
sub
inc
in
movsl
pop
insb
mov
sub
jae
test
loopne
pop
movsb
pop
push
rcrb
inc
lock
jae
imul
lret
les
pop
inc
inc
sahf
movsl
fistpll
cmp
xchg
mov
and
jno
jp
push
loope
jle
xchg
push
shl
lcall
pusha
inc
or
outsb
sub
sub
xchg
add
inc
int3
jae
mov
call
lret
sub
lods
out
stos
jle
xor
or
hlt
stos
or
icebp
sbb
add
inc
xlat
push
cmpsb
mov
mov
mov
or
mov
lock
xor
xorl
hlt
mov
adcb
dec
cmp
outsl
ds
and
add
mov
add
sub
std
lahf
lret
lea
or
push
mov
ret
push
dec
cld
xchg
jbe
add
popa
mov
arpl
frstor
ret
jne
ds
inc
test
stos
inc
daa
rcrl
or
cs
sub
insb
mov
dec
lret
cmc
or
add
add
adc
jg
sub
in
pop
jmp
cwtl
sub
jo
testb
gs
loopne
xlat
pop
sub
or
dec
xor
in
enter
push
repnz
dec
int
clc
xor
mov
mov
dec
push
pop
scas
dec
cld
mov
mov
lods
jns
nop
add
pop
cmpsb
lods
add
lahf
dec
push
popf
lcall
test
xchg
lods
mov
sbb
jb
mov
lock
xchg
sbbl
jo
call
xchg
mov
push
push
daa
pop
in
mov
test
aam
ret
es
and
call
or
lods
addr16
xor
in
cmp
sub
out
daa
sub
arpl
push
int3
dec
loope
mov
or
lds
insb
outsl
js
call
jp
sbb
sub
push
add
in
pushf
xchg
adc
push
rcrb
movsl
add
pop
cmp
cmp
jecxz
cltd
mov
mov
int3
jg
cwtl
mov
aad
pop
rorb
xchg
jecxz
and
fcompl
ljmp
jmp
sbb
mov
rol
insl
xchg
mov
dec
mov
std
xchg
vmwrite
cmpsl
cmp
cli
or
sbb
add
fwait
cmc
inc
jo
or
or
xchg
pushf
fnstsw
pop
int3
xchg
xchg
push
xchg
mov
add
sub
and
sub
mov
jge
jle
lahf
gs
push
cmpsl
and
repz
mov
rep
mov
andb
test
inc
dec
xor
cmp
cmc
jns
mov
push
fwait
or
adc
xlat
inc
dec
cli
int3
bswap
xor
imul
xor
mov
testb
jg
dec
mov
fists
jne
ret
sbb
adc
lods
sub
mov
stos
or
das
inc
mov
cld
sub
and
and
jne
rcr
mov
loop
mov
dec
sub
movsb
shll
mov
incb
into
jp
pushf
mov
push
imul
sub
adc
aas
nop
sbb
cltd
pop
fnsave
lret
add
nop
push
or
imul
adc
add
jecxz
mov
test
pop
outsb
xor
cmpsl
imul
cmc
pushf
das
popa
jecxz
mov
jno
repnz
pop
mov
jp
pop
fcoms
call
cmpl
jno
sub
push
cltd
mov
jns
addl
enter
fnsave
mov
outsb
repz
sub
mov
xor
ds
dec
xchg
fs
in
push
test
mov
mov
scas
pop
scas
cmpsb
mov
popf
push
pop
jns
test
cmpsw
add
cmp
mov
cs
das
add
mov
xchg
push
loopne
test
jns
test
adc
mov
andb
mov
xchg
jnp
jg
loope
outsb
push
add
fimull
sbb
fisttps
data16
sub
push
loope
in
imul
xchg
adc
test
mov
pushf
ret
sbb
subb
in
xor
mov
dec
cmc
sbb
xchg
xchg
mov
sbb
jae
loop
jg
cltd
xor
js
mov
sbb
cmpsb
test
std
scas
add
ret
cmc
mov
lahf
mov
xor
push
call
popf
sarb
mov
add
mov
mov
inc
outsb
jbe
idiv
sarl
add
dec
shl
inc
mov
sub
jle
cmc
mov
adc
nop
sbb
repnz
rclb
stos
lock
lock
fwait
stos
lahf
loopne
int
sub
loope
imull
in
outsl
jae
xchg
out
or
push
lret
xor
fcmovne
movsb
lcall
jg
lock
mov
ss
dec
xchg
addr16
mov
les
sub
jae
ss
mov
aaa
mov
dec
jo
test
xchg
cmp
rcr
push
push
je
xor
sahf
movl
push
cmp
cli
repnz
lret
mov
dec
xchg
std
lods
and
mov
sub
xor
mov
cmpsb
inc
arpl
pushf
or
lahf
fbstp
repz
sub
fnstsw
mov
xchg
xchg
jl
push
lods
adc
lret
cmp
pop
xor
lds
dec
loopne
mov
jnp
lcall
jp
imul
mov
sub
fwait
xor
inc
inc
pop
adc
mov
cs
dec
pop
xchg
mov
pop
push
inc
addr16
jmp
or
and
jecxz
stos
imul
enter
add
dec
fists
popf
das
lea
adc
std
out
out
lahf
in
adc
pop
movzbl
inc
cmp
jne
xchg
dec
arpl
pop
test
xor
arpl
mov
add
push
mov
sub
rcr
loope
enter
lahf
jne
cwtl
test
mov
jnp
fxch
mov
lea
test
xchg
cmp
xchg
hlt
xlat
lods
sub
and
test
push
ljmp
or
mov
and
jns
sub
xorb
cltd
dec
adc
sub
sarl
push
jnp
xchg
or
fldenv
sub
clc
inc
mov
pop
or
mov
dec
daa
jge
mov
jl
dec
int3
push
inc
mov
or
test
imul
gs
mov
or
lods
fwait
lahf
sbb
xor
out
jecxz
mov
add
fsts
ljmp
and
jmp
pop
testl
jle
xorl
sub
pop
or
adc
inc
mov
dec
in
int3
pop
and
or
subl
jnp
pop
scas
or
jae
mov
test
add
push
add
mov
jne
or
cmovbe
je
addl
outsl
fiadds
popa
stos
lea
push
loope
mov
data16
inc
mov
pop
jno
jecxz
push
lds
cmp
mov
loopne
inc
cmpsb
aaa
or
inc
mov
mov
mov
xchg
in
mov
xor
mov
xor
daa
lock
mov
cmp
movsb
cltd
sti
pop
ret
js
rorb
test
mov
xchg
dec
mov
inc
mov
arpl
jle
sub
stc
lds
lods
sub
ljmp
pushf
or
imul
fdivp
mov
mov
jecxz
mov
mov
roll
mov
jecxz
sub
es
or
gs
aam
push
clc
mov
push
insb
aad
dec
scas
cwtl
ds
sub
cmp
push
dec
cmp
inc
xchg
adc
push
pop
cmp
sti
scas
and
aas
in
ss
adc
mov
enter
and
adc
fisttpll
addr16
adc
cmp
bound
xchg
call
ds
mov
and
jmp
stc
lcall
and
iret
cli
lds
jae
lods
pop
fcomps
in
adc
in
dec
sub
xchg
adc
inc
mov
and
inc
add
cmc
and
add
mov
test
pop
shlb
mov
cmp
add
add
xchg
xchg
addr16
xchg
jle
inc
stc
and
sbb
mov
fwait
ficoml
out
loop
int3
test
bound
ja
shlb
cmp
lea
and
jge
pop
popf
out
adc
lret
inc
mov
int3
and
jne
stos
loop
inc
in
inc
movsb
loopne
xchg
std
adc
ja
push
and
mov
mov
push
mov
cmpsb
out
pop
stos
pop
xor
push
aas
add
lret
xchg
sbb
xchg
xchg
pop
fwait
dec
pop
jge
pop
imul
pushf
out
pushf
rclb
or
arpl
stos
call
icebp
sbbl
mov
push
nop
pop
iret
rcr
inc
imul
mov
sahf
inc
xlat
mov
loope
lock
adc
pop
sub
stos
sti
or
dec
out
push
jmp
add
notb
fdivrs
rolb
sbb
test
iret
orb
mov
ficoml
lods
scas
push
push
mov
fsts
mov
movsl
movsl
pop
addr16
pop
lock
dec
sub
lcall
stos
out
or
sar
ja
fcomip
leave
imul
pop
sub
dec
or
mov
fimuls
dec
xor
mov
dec
fistps
in
xchg
imul
push
lahf
inc
repnz
bound
jae
imull
stos
stos
test
imul
fstpl
mov
pusha
sub
mov
outsb
push
fidivs
push
inc
pushf
lods
pop
adc
ret
jmp
mov
jg
js
mov
repz
jae
lret
cld
test
fbstp
inc
daa
mov
jno
mov
xchg
mov
push
out
lea
jns
fdivl
les
mov
push
push
arpl
sub
cmp
xchg
sub
inc
jae
lcall
notb
arpl
adc
daa
imul
adc
popf
in
js
cli
pop
dec
shrb
mov
cmpsl
xor
decb
jl
and
pop
cwtl
std
push
pop
sub
or
sub
xor
push
inc
sti
out
clc
pop
pop
inc
cmc
jbe
call
push
mov
out
jae
jl
cmpsl
negb
or
cmovge
mov
adc
rol
jmp
fidivrl
xor
mov
xchg
imul
adc
loop
adc
call
mov
dec
enter
or
push
jmp
stos
and
jne
dec
mov
jmp
roll
incl
pop
int3
lret
out
sbbl
ret
scas
lea
lds
lcall
add
jle
cmp
sahf
orb
mov
stos
mov
dec
call
lods
or
icebp
testl
xchg
xchg
pop
cwtl
fisttpl
int
push
mov
popa
test
imul
outsl
or
jmp
int
jle
sahf
dec
bound
xor
int3
mov
and
mov
mov
xor
pop
pop
in
scas
jae
add
std
cmp
and
mov
gs
inc
push
iret
sub
dec
addb
out
or
gs
mov
enter
sbb
push
cli
add
mov
and
movsb
xor
fistpll
repz
jg
xchg
push
sbb
adc
jle
movsb
mov
pop
jbe
jne
xor
lock
movsl
xor
pop
push
xor
arpl
jbe
das
mov
dec
mov
lock
fiaddl
add
loope
mov
sub
in
in
adc
mov
sub
sub
jle
cmp
enter
and
mov
or
pop
outsb
xchg
sub
clc
push
mov
sub
sbb
movb
push
sub
push
lock
sub
mov
sahf
sahf
mov
dec
lods
pop
stos
test
and
mov
mov
cmp
pusha
or
fstps
scas
jbe
jecxz,pn
rol
mov
jae
repz
mov
sahf
sahf
popa
sub
stos
or
test
loop
lods
xor
pop
sub
pop
inc
aad
scas
popa
dec
jg
outsb
insl
sbb
sbb
push
daa
imull
ss
jmp
aam
inc
or
cmp
add
cmp
sbb
enter
xchg
pop
and
dec
push
subl
and
and
jecxz
fnstsw
push
adc
aam
jg
cmp
mov
mov
and
enter
int
xor
in
lret
mov
add
cmp
xchg
mov
jmp
fwait
sahf
lret
dec
imul
movaps
repz
mov
inc
orl
into
xchg
jnp
loop
dec
mov
jno
xchg
mov
in
mov
xchg
aas
jecxz
inc
mov
out
mov
add
add
fwait
lods
or
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
adc
fstl
pop
bound
sub
jo
lahf
or
je
adcb
fildl
jns
cmp
dec
out
dec
roll
xor
aam
clc
aaa
clc
negb
iret
mov
push
xchg
jns
into
ret
jbe
lods
cmp
int
add
jnp
aam
mov
push
aas
adc
rorb
orb
sbb
mov
jnp
hlt
push
or
cmp
into
iret
pop
xchg
ret
xor
leave
mov
addr16
xor
aaa
dec
pop
xchg
mov
dec
sub
cs
test
imul
xchg
add
dec
popf
je
lods
scas
jmp
dec
mov
jmp
xchg
and
out
fimuls
dec
stc
leave
xchg
dec
cltd
mov
leave
cs
add
les
fbld
push
outsl
pushf
adc
leave
push
cmp
push
test
add
sbb
enter
cmp
ret
jb
mov
es
sub
push
pop
fdivl
popf
scas
shll
iret
andb
or
xor
add
pop
repz
cmpsb
and
leave
xchg
cltd
cmpsb
sti
dec
jnp
sarb
adc
adc
outsb
jno
inc
scas
icebp
jo
xor
addr16
cmp
mov
or
sub
mov
inc
loop
not
inc
push
xor
jno
jmp
sbb
test
or
pop
and
aaa
or
loope
add
inc
fsubrs
cmc
and
out
add
loop
getsec
jg
rol
xor
pop
cmp
sti
cli
std
inc
jae
adc
addb
xor
pop
add
int3
cmpsl
push
xchg
ss
adc
jmp
cmp
cmp
push
or
in
lods
jbe
xchg
shrb
in
rclb
mov
fdivr
jb
mov
jae
icebp
sbb
jbe
add
jecxz
jno
mov
fs
mov
mov
rcrb
lret
cmpsb
retw
mov
jbe
inc
stos
sub
outsl
pushf
mov
mov
xchg
push
dec
in
add
outsl
das
fs
inc
dec
mov
cmp
mov
inc
sbb
cmp
daa
outsb
in
scas
mov
sbb
adc
add
clc
jo
mov
adcb
xchg
mov
xlat
shll
mov
hlt
mov
imul
mov
add
xchg
or
loope
adc
arpl
add
jb
cli
xchg
aas
dec
in
clc
jb
cmp
jae
xorl
insl
lahf
or
adc
out
jecxz
in
mov
push
adc
dec
cltd
jnp
daa
gs
int3
dec
fnsave
and
out
and
jno
cmp
mov
cmpsl
outsl
dec
xor
adc
out
je
push
and
sbb
adc
mov
stc
push
aas
faddl
mov
inc
pop
sub
jb
movsb
mov
ss
add
adc
add
fmul
sti
shll
adc
inc
ljmp
insb
out
in
mov
mov
or
xchg
std
adc
push
int3
out
sbb
xor
mov
dec
out
repz
xchg
mov
ret
push
rcrl
lods
test
push
cmp
cmp
nop
mov
dec
mov
repnz
inc
test
arpl
and
jp
sbb
cmp
or
inc
in
pop
addr16
loopne
scas
or
and
aad
pop
lcall
aam
shr
push
sti
xchg
xchg
pop
adc
mov
and
stos
fmul
into
dec
xchg
cs
jno
out
in
cmc
push
xor
pop
mov
test
in
addr16
mov
pusha
sub
and
lcall
push
sbb
mov
jae
cmpsb
jl
insb
mov
das
hlt
add
popf
sub
out
mov
fdivl
xchg
sarb
push
fsubl
pushf
aaa
ficoms
leave
movsb
repnz
dec
add
gs
in
lea
out
dec
mov
shr
in
adc
mov
mov
adc
mov
inc
pop
pop
aad
adc
dec
sub
test
fdivrl
jnp
dec
and
xchg
fldcw
enter
xlat
dec
mov
mov
jnp
pop
jno
es
inc
out
inc
decl
shl
mov
xchg
push
inc
mov
inc
test
mov
or
pusha
jb
pusha
fstl
xor
dec
bound
outsl
pop
push
cmp
mov
insl
lcall
inc
inc
mov
imul
insl
andb
mov
mul
fwait
mov
je
outsb
push
call
inc
pop
pushf
or
lahf
push
adc
lcall
jp
mov
xor
cmpsb
mov
int
push
outsb
leave
xchg
aad
sub
addl
cmpsl
pop
in
fdivrp
gs
insb
push
mov
inc
mov
or
shrl
push
pop
xchg
xchg
insb
pusha
mov
inc
mov
out
pop
cmp
int3
push
enter
bound
call
lea
xchg
inc
and
arpl
mov
in
cmp
fidivl
and
cmp
xor
cltd
mov
faddl
fists
stos
xor
test
int
daa
mov
and
cmp
shl
shl
rorl
dec
scas
dec
aam
rcrl
fwait
cld
outsb
cmp
or
dec
pushl
pop
and
and
add
xor
inc
movsb
in
fwait
jae
mov
lret
inc
loopne
mov
cmpsl
shl
loop
pop
push
test
cltd
clc
imul
pop
adc
mov
out
add
sbb
enter
lahf
iret
addl
cs
push
mov
push
pop
rep
push
mov
dec
lods
push
push
add
ficoml
movsb
outsl
add
push
call
icebp
xor
aad
out
xor
insb
sub
jo
mov
mov
cmpsb
stos
sub
jg
add
outsl
mov
add
fstpl
mov
aaa
addl
mov
xlat
scas
jp
mov
push
or
cmp
cmpsb
arpl
mov
sub
inc
cmpsb
aad
cmp
daa
sub
cmp
xchg
repnz
in
lcall
xor
add
pop
cmc
sbb
inc
xchg
gs
adc
add
push
je
sbb
ret
xor
or
loop
mov
jge
adc
insl
jle
cmpl
pushf
lcall
js
repz
jg
or
sbb
rorl
into
mov
and
pop
sub
mov
aas
cmpsl
xor
testb
cmp
mov
mov
add
xchg
push
xor
sbb
inc
inc
xchg
pop
je
xor
cmc
scas
cmp
jb
cs
imulb
xchg
push
repz
fadds
push
stos
icebp
repnz
cld
dec
or
out
movsb
pop
bound
cmp
mov
in
stos
test
movsb
cmc
pop
mov
xor
ljmp
std
xchg
mov
dec
mov
xchg
push
fisubrs
dec
cmp
test
inc
insb
enter
iret
jbe
mov
stos
stc
dec
add
les
jecxz
dec
in
xchg
mov
inc
outsl
adc
imul
mov
xor
stos
lret
shlb
mov
ds
sti
dec
jmp
push
cs
outsb
repnz
xorl
mov
mov
cli
sbb
jmp
in
aam
mov
mov
mov
sub
add
ss
dec
lods
icebp
ficoms
pushf
repz
push
rcl
mov
in
add
lock
mov
inc
mov
add
cmc
orl
xor
push
sub
mov
arpl
jp
and
mov
push
push
pusha
and
adcb
sub
repz
out
test
out
hlt
faddl
in
shlb
xlat
ds
mulb
inc
push
jno
in
fldcw
inc
pop
push
inc
xor
fucomip
pop
push
mov
lock
mov
mov
int3
cmovno
insl
dec
push
int3
ds
scas
push
inc
or
mov
pusha
xlat
jmp
push
daa
scas
imul
lahf
test
cmpsb
test
xchg
sti
movsb
pop
arpl
popa
or
mov
jle
arpl
add
inc
or
das
in
cmp
push
jne
daa
mov
outsl
insb
std
jb
adc
mov
std
xor
or
in
ret
mov
movsb
outsb
shll
and
rcrl
push
sbb
mov
add
or
mov
xchg
fisubs
push
and
xchg
or
cwtl
inc
push
jnp
rorb
in
out
push
cltd
sbb
outsl
aaa
in
rclb
and
mov
push
and
cmc
addl
jnp
pop
sbb
out
incl
vmulss
push
decl
jo
leave
ja
and
cli
aad
mov
jbe
adc
xor
inc
jns
pop
or
push
test
imul
movaps
jmp
sub
inc
and
insl
sahf
aad
ljmp
jne
push
bound
lds
push
and
jle
dec
cwtl
push
pop
sub
repz
cvtdq2ps
push
loop
push
ja
leave
popf
inc
push
sbb
bswap
sbb
dec
cmp
pop
or
sbb
imul
mov
outsb
sbb
sahf
push
mov
out
adc
jg
mov
pop
pop
outsb
dec
jge
inc
sbb
repz
and
and
xorl
push
stos
inc
xor
xchg
inc
fldcw
jnp
shrb
fidivl
or
pop
ret
mov
push
jl
push
and
adc
xchg
cltd
pop
lcall
dec
out
imull
ljmp
inc
iret
cmp
or
and
jb,pn
je
bswap
arpl
xor
xchg
sub
xor
jmp
mov
cmp
or
aas
jae
scas
fstl
inc
stc
jno
ret
in
adc
pop
testl
and
push
mov
mov
or
cmpsb
ret
adc
int3
sbb
xor
imul
lahf
test
sbb
jno
aaa
and
scas
mov
xchg
sysenter
adc
ret
out
mov
aas
sar
popf
sub
out
imul
int
jne
jae
out
call
popf
mov
xor
cli
rclb
jbe
pusha
inc
or
shll
pop
fmul
xor
adc
pushf
mov
or
pushw
jnp
add
ficompl
cmp
aas
cmpsl
cmpl
imul
hlt
dec
mov
data16
stc
lret
stos
mull
stos
int3
pop
mov
jns
pop
icebp
mov
pusha
inc
leave
and
xor
lods
jne
pop
ret
addl
pop
mov
addr16
in
xorl
fdivs
mov
js
outsb
ss
mov
add
mov
roll
mov
stc
push
lds
adc
je
scas
push
loope
cmp
sub
shr
rolb
dec
aas
movl
pushf
xchg
cli
xor
pop
jnp
pop
jne
scas
aam
push
jmp
inc
mov
gs
jae
mov
jnp
mov
mov
fcompl
scas
movsb
hlt
jns
or
jb
scas
cld
dec
jle
adc
jge
jle
adc
mov
ret
or
sub
inc
cmp
sahf
pop
dec
xor
pop
fsubp
jmp
jnp
pop
sbb
dec
pop
pop
ljmp
xchg
movsl
pinsrw
test
xchg
sub
sbb
inc
andl
cmp
sbb
aaa
mov
mov
movsl
inc
push
lock
out
jmp
xchg
sub
leave
dec
repz
lea
nop
sub
push
mov
mov
lods
pop
stc
es
cmp
xchg
clc
push
andb
insl
mov
mov
dec
pop
xor
or
movsb
lcall
int
scas
pop
ss
ds
cmp
xor
sub
decb
icebp
ror
cmc
mov
add
pop
xchg
clc
sbb
mov
es
jmp
mov
js
pop
inc
add
dec
dec
dec
cmp
ljmp
mov
dec
cmpsb
pop
fildll
movsl
shrl
outsb
fldl
jmp
jbe
out
sub
es
mov
lcall
pop
push
movsl
pop
and
fwait
sbb
push
add
out
pop
mov
adc
fisttpl
or
mov
or
sub
aam
cmp
jb
dec
fwait
inc
aad
outsl
xchg
mov
lcall
pop
clc
and
mov
xlat
dec
test
repnz
jle
in
xchg
adc
or
popa
jle
popf
outsb
push
mov
jae
jae
or
fnsave
imulb
movsl
pop
mov
mov
jo
jle
pop
mov
and
add
push
xlat
dec
fisubrs
pop
stos
and
les
into
inc
ljmp
in
insl
sub
das
mov
enter
pop
mov
cmp
scas
scas
jbe
hlt
ret
inc
cmovns
les
lock
lods
loope
adc
in
xchg
movsl
jnp
jmp
inc
push
ror
lds
inc
notl
or
push
or
cmp
in
cs
mov
mov
in
daa
mov
or
sbb
aad
dec
mov
jnp
and
inc
pop
lods
sub
mov
loop,pn
cli
sbb
sar
or
mov
sbbb
lret
wrmsr
push
aas
sub
xchg
mov
inc
xor
mulb
es
fxch
sub
add
rcll
xorb
xchg
mov
inc
sbb
addl
loope
push
loope
push
push
mov
stos
inc
jnp
int3
lds
ja
and
ffree
into
subb
jbe
pop
roll
cld
and
lahf
cli
cli
hlt
outsb
gs
into
cmp
fs
arpl
mov
aam
out
sub
into
mov
insl
es
pop
es
rep
aam
cmp
rol
test
push
inc
xor
sbb
les
fldl
icebp
mov
test
mov
pop
repz
push
pop
lcall
mov
push
test
or
or
sub
lods
pop
insb
loop
out
or
jae
out
pop
js
lods
pop
in
int
fsubr
cmp
mov
lods
js
pop
jge
pop
hlt
inc
pop
sarl
jg
arpl
mov
mov
adc
or
mov
inc
pop
mov
stos
dec
jb
je
in
mov
pop
mov
popf
rcll
inc
mov
mov
jl
cmp
inc
lea
mov
xchg
fmul
jmp
xchg
les
jb
jnp
dec
mov
adc
aaa
push
icebp
cmp
xchg
pop
fnstsw
das
mov
xchg
push
xor
mov
ljmp
scas
rolb
test
pop
cmp
mov
outsb
xchg
cmp
pop
in
clc
dec
out
and
push
mov
test
rcll
pop
dec
xchg
push
push
rorb
int
sub
xchg
sbb
imul
sbb
movsl
decl
push
mov
lret
inc
imull
jmp
xor
cmp
mov
mov
adc
icebp
pushf
repz
jb
dec
pop
das
cmp
xrelease
cltd
dec
ss
test
mov
popl
jnp
pop
testb
xor
pop
xor
xor
xlat
clc
mov
out
int3
lods
adcl
push
cmp
sti
xchg
cmp
xchg
mov
popa
push
jno
push
mov
dec
sti
xchg
pop
mov
fldl
sub
jmp
mov
inc
scas
popf
mov
sub
fwait
lea
add
lret
pop
cmpsl
xor
mov
inc
lock
js
xor
mov
jmp
mov
out
dec
mov
ret
aas
mov
mov
adc
xor
inc
pop
or
lods
mov
adc
das
sub
mov
icebp
cmp
testb
sbb
fstl
lods
mov
push
cmp
jns
testb
mov
xlat
or
jno
loope
test
ret
inc
scas
pop
jne
push
test
jnp
aam
iret
dec
int
lods
dec
mov
xchg
es
dec
fnstsw
out
and
ljmp
cltd
cmp
or
and
ljmp
imul
pop
mov
loop
inc
mov
sbb
outsb
sbb
mov
and
cld
lock
filds
in
dec
cli
push
push
jnp
ud0
inc
cmpsl
dec
mov
mov
mov
sbb
dec
jo
es
mov
notb
xor
mov
push
cltd
daa
lods
push
int3
mov
js
dec
fstl
ss
je
shrb
addr16
inc
sarl
lods
ret
hlt
mov
lea
jo
sbb
push
sbb
inc
dec
pop
cmp
scas
jne
fisttps
int
lret
dec
clc
pop
sarb
mov
fidivrs
pop
adc
pop
cld
fmulp
aas
js
lahf
bound
sti
loopne
cmc
je
arpl
mov
shlb
dec
adc
test
sub
inc
mov
mov
and
pop
out
stos
dec
jl
jge
fnstsw
mov
adc
daa
jnp
xchg
jbe
lret
out
scas
cmpsb
stc
pop
aaa
cmp
cmpsl
rcl
lret
out
cmpsb
xorb
in
cwtl
ja
imul
pop
ja
pop
inc
btc
loop
mov
call
sub
mov
cld
fists
jge
xor
mov
push
jb
adc
aad
push
fdivrp
xchg
lds
lods
dec
xor
fistl
imul
inc
xchg
sub
ja
fs
imul
add
arpl
lcall
inc
stc
inc
sub
pop
xchg
or
xor
inc
lock
and
cmpsl
enter
pop
sub
pop
jmp
push
jmp
jbe
popl
jg
mov
dec
inc
div
pop
ja
in
add
sub
int
mov
insl
jae
xor
mov
adc
jmp
outsl
es
arpl
mov
notl
iret
xchg
xchg
icebp
insl
test
imul
fwait
bnd
cli
addr16
inc
out
xchg
bound
adc
mov
pop
out
xor
adc
sarl
decl
lock
jle
icebp
xor
movsl
leave
jg
mov
and
pop
push
mov
mov
in
inc
lods
cmc
mov
cmpb
xor
or
loopne
dec
in
popa
push
pop
mov
adc
fsubrs
lea
daa
es
hlt
popa
ds
stos
or
call
sbb
push
sub
js
adc
jae
push
aaa
sub
push
dec
add
mov
cmp
out
pushf
mov
mov
test
adc
or
mov
test
xchg
jge
inc
incb
cltd
mov
jbe
mov
gs
divb
sti
dec
imul
and
shl
pop
scas
mov
test
in
mov
adc
cltd
mov
xlat
out
fiadds
cmc
cmp
push
adc
and
add
std
sbb
fisttpl
sub
xchg
mov
arpl
in
andps
mov
and
cmp
inc
add
test
adc
pop
pop
xor
sbb
ds
imull
cmp
jle
sahf
push
rolb
xchg
daa
nop
inc
les
push
jbe
xchg
mov
xor
call
lret
sub
out
negl
cmp
jae
movsb
push
mov
cmp
es
push
jne
mov
call
mov
cmc
mov
loopne
and
gs
xchg
dec
rcll
std
in
insb
inc
std
or
lds
sbb
dec
and
cmp
ficompl
in
sahf
push
jno
adc
int3
mov
or
xchg
xchg
insl
xchg
mov
mov
loope
loopne
mov
loope
fdivrs
hlt
xchg
je
inc
or
cs
pop
test
cli
bound
mov
or
sub
mov
jae
cmp
andb
test
or
push
sub
mov
jl
pop
sub
ficompl
sbb
dec
xor
in
add
add
inc
fisubrl
popf
pusha
pop
jnp
push
push
xor
sahf
fstpt
xchg
aad
sub
mov
adc
lea
dec
adc
xchg
and
cmpsl
into
pop
testl
jne,pn
int3
mov
xchg
jae
test
push
cmpsl
lods
ficompl
sbb
mov
cmp
pop
mov
cmp
and
inc
pop
sub
mov
jae
mov
adc
out
cli
in
xchg
mov
rolb
test
jno
int3
mov
jbe
and
fsubs
fwait
add
or
jge
xor
arpl
push
cwtl
lds
fistpll
popl
jbe
push
lret
or
xchg
pop
inc
sub
hlt
daa
sub
ljmp
jb
stc
pushf
popa
outsl
mov
or
xor
scas
int3
xor
nop
mov
adc
outsb
test
push
pop
insb
pop
dec
push
xor
xchg
sbb
lret
or
and
fimuls
sbbb
xor
cltd
in
pop
or
das
jp
adc
enter
orl
cmp
lock
fcoml
popa
fcmovnbe
roll
mov
enter
mull
lds
aad
push
add
lahf
rolb
fsubs
in
inc
inc
test
mov
jo
adc
and
jno
nop
rcr
inc
push
int3
mov
add
dec
and
loopne
cmpsb
adc
dec
jbe
dec
addl
inc
cli
sbb
mov
and
in
xchg
pop
mov
out
inc
loop
lahf
mov
pop
test
adc
mov
xor
or
xchg
lahf
or
mov
sbb
pop
mov
mov
dec
adc
mov
mov
arpl
in
fnclex
test
cmpsb
aad
mov
cmpsb
dec
int
sti
mov
add
sahf
ja
fucom
pop
sub
loopne
repz
mov
sbb
cmp
fisttpl
subb
jg
adc
dec
cmp
xor
pop
mov
out
pop
bound
jmp
cmp
arpl
int3
flds
mov
sub
jno
xchg
scas
push
outsl
jne
lcall
cltd
xchg
cmpsl
xor
inc
or
xor
in
xchg
fnsave
loopne
stos
out
stos
int3
mov
mov
push
rol
stos
ss
sbb
dec
fdivrl
adc
dec
stos
or
mov
jecxz
xchg
ret
lea
pop
out
xor
push
cmp
lret
data16
iret
andl
cli
mov
rcrb
xor
dec
push
sti
cwtl
cmpsl
imul
stos
jmp
xor
insl
push
cmp
sub
fwait
cld
add
out
mov
mov
fdivrs
nop
cltd
enter
rep
je
push
ret
repnz
sbb
and
adc
inc
mov
scas
cmc
test
mov
sub
cwtl
outsb
jo
adc
sub
nop
int3
lea
cmp
dec
aaa
mov
scas
sbb
xchg
in
lcall
sarb
inc
int
mov
insl
mov
dec
xchg
sbb
stos
jge
inc
or
in
dec
js
pop
negl
outsb
cmp
inc
xchg
mov
ljmp
int3
or
inc
jns
inc
movsb
pusha
mov
pop
ja
call
test
pop
inc
outsl
add
ja
stos
and
fidivrs
inc
push
xor
pop
lahf
push
test
lcall
mov
lret
sbb
lahf
xchg
test
cmp
lds
mov
mov
mov
adc
mov
mov
xlat
xchg
hlt
movsl
ficoml
mov
xchg
inc
out
mov
popa
mov
sbb
clc
add
inc
xor
in
dec
adc
loope
and
sbb
push
dec
bound
fidivl
pop
push
ds
mov
sbb
out
and
pop
out
add
sbb
dec
sub
or
dec
cmp
pop
nop
adc
sahf
mov
rorb
lock
decl
dec
mov
jo
ljmp
stos
je
mov
mov
push
addr16
outsl
movsb
imul
cmc
add
pusha
cmpxchg
dec
test
and
aaa
lret
ds
in
test
pop
cmp
aam
add
jmp
lcall
lea
xor
int
add
push
daa
jle
push
mov
add
jmp
repz
cvtpi2ps
adc
cmp
int3
fcos
in
fwait
and
sar
dec
xchg
mov
add
les
mov
repnz
pop
xchg
lcall
cli
cmp
into
pop
and
fwait
adc
imul
addr16
pop
int
and
dec
mov
mov
das
enter
push
xor
ds
dec
adc
inc
xlat
dec
mov
xchg
sbb
stos
sbb
pop
andb
pop
inc
mov
nop
das
pop
cli
inc
adc
cmpsl
push
lods
das
inc
and
int
in
inc
test
cli
insb
les
fadds
or
sbb
outsb
mov
xchg
leave
push
inc
clc
and
adc
xlat
iret
insl
mov
inc
pop
fnsave
adc
xor
inc
mov
mov
mov
pop
outsl
xchg
mov
loop
push
cli
cld
or
dec
cld
jle,pn
repz
xchg
add
inc
push
sub
xor
idivb
aaa
jp
int3
sbb
hlt
mov
xchg
cmp
sbb
stc
cmp
pop
idivb
pop
aas
out
cld
sti
dec
cmpsb
inc
inc
mov
outsl
js
and
jmp
jle
adc
mov
mov
scas
ret
inc
int3
push
movsl
push
ret
and
in
push
xor
aam
pop
jg
out
inc
aaa
addb
insl
or
stos
fildl
ss
push
mov
dec
push
nop
into
inc
out
jmp
push
mov
xchg
repnz
dec
out
and
ficompl
jnp
or
xchg
xchg
insb
jmp
lret
js
pop
in
insb
pop
negl
call
loop
push
cmp
jno
das
xor
aas
lds
xchg
cmp
adc
or
ja
iret
sarb
sub
clc
clc
sub
aam
lret
repnz
inc
jne
push
push
addr16
push
cmpsb
adc
mov
sbbb
add
enter
lock
dec
push
push
je
pop
je
lods
xor
xor
sbb
aaa
sub
fsub
ja
add
cmp
jnp
lea
inc
dec
icebp
fimuls
pop
cmp
or
fisubs
movsb
ret
xchg
dec
adc
ficompl
pushf
stc
pmulhw
sub
sub
icebp
dec
sub
jns
add
pushf
data16
xor
inc
clc
shlb
adc
ds
mov
outsl
mov
cmp
imul
lcall
in
jecxz
pop
mov
movl
jo
mov
mov
adc
sub
out
aam
mov
mov
xchg
aaa
sti
pop
sbb
jbe
push
xor
aam
add
mov
adc
cli
inc
jmp
push
pop
adc
cmp
aad
lods
movsb
fisttpl
inc
dec
jecxz
sub
sub
dec
jo
je
pop
adc
loope
popf
pop
or
cmc
adc
repz
ljmp
and
add
mov
inc
cmpsl
movsl
mov
and
jb
js
sub
je
inc
mov
or
push
jne
popa
xorb
lods
popa
shl
sbb
sub
dec
je
inc
shr
stos
in
lock
js
adc
clc
push
hlt
xor
sub
adc
xchg
xchg
jle
sub
mov
das
jae
out
sbbl
ds
push
mov
test
mov
rcll
cmc
xchg
jl
xor
ljmp
jle
into
lea
mov
add
adc
mov
jne
ds
imul
cmp
clc
xor
jmp
aam
daa
and
dec
pop
rclb
stos
jecxz,pn
xlat
mov
xor
imul
cmp
or
orb
loopne
sub
out
xchg
xchg
adc
shl
xchg
add
and
jae
xor
cmp
fisubs
xchg
dec
cmpsl
mov
fistpll
mov
imul
xchg
jnp
inc
cmp
mov
sbb
lea
mov
sub
cmp
push
imul
cmp
stos
xlat
femms
jmp
push
sbb
inc
rcrl
std
sbb
out
std
inc
cwtl
aad
jns
pop
dec
push
rolb
mov
mov
cmc
scas
sbb
in
pop
mov
adc
cmp
int
daa
ss
pop
sbb
cmp
cmp
pushf
and
sub
ret
cmp
pop
popf
je
and
push
lea
loop
mov
aaa
fsts
daa
inc
cltd
lahf
or
ljmp
ffreep
outsb
cmc
fsubrp
add
loop
sti
adc
xchg
andl
clc
jae
push
adc
pop
mov
shlb
test
xchg
jnp
mov
pushf
enter
insl
sbb
mov
test
hlt
daa
push
int3
pushf
dec
jmp
in
sub
or
roll
das
lods
or
aas
mov
lock
ds
or
jns
aad
push
out
cmp
xchg
sub
addr16
ficompl
ret
mov
inc
pop
enter
mov
jns
jg
xchg
imul
jbe
test
into
lret
aam
fcmovu
in
insl
and
adc
fdivl
orb
dec
dec
dec
call
pop
cmp
xchg
add
add
flds
ljmp
mov
in
lock
data16
add
sbb
mov
pop
xor
fwait
xor
repnz
mov
xchg
or
xor
dec
shll
inc
adc
outsl
cmp
jecxz
das
lahf
test
movsb
out
pop
stos
pop
adc
loop
mov
cmp
jg
jp
inc
cltd
lret
mov
jne
mov
mov
les
in
cmp
mov
test
pop
dec
out
dec
sbb
push
pushf
sbb
mov
mov
inc
js
hlt
les
sbb
addr16
mov
popa
cwtl
jmp
jecxz
xor
outsl
adc
xor
xor
ja
bound
sbb
push
cmp
sarl
xor
daa
jg
pop
add
mov
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
cmp
push
fsubs
cmp
bound
rcl
mov
sub
insl
mov
jb
mov
outsb
cmp
add
je
cld
mov
jl
or
inc
inc
mov
adc
sahf
ja
lcall
lahf
xchg
lds
xor
sbb
jl
ljmp
sub
inc
or
stos
dec
mov
mov
test
test
jb
mov
gs
mov
and
cmpsb
dec
or
inc
les
add
mov
mov
xchg
mov
jae
sbb
outsl
movsl
adc
testl
scas
adc
testb
fisttps
addr16
aas
incl
pop
pop
cmp
jg
push
filds
test
adc
mov
xlat
inc
adc
xchg
rep
sub
lret
cli
xor
dec
cmp
loope
xchg
jle
push
enter
ret
adc
jmp
adc
xchg
push
jge
loope
mov
xchg
sbb
push
andl
cmp
aas
stos
fistpl
mov
cmp
jno
stos
add
fldcw
clc
out
hlt
inc
insl
pop
push
inc
or
add
cmp
mov
pop
testb
pop
inc
stos
pusha
call
jnp
mov
ljmp
sub
lods
xchg
adc
enter
jb
xlat
cmpl
repnz
inc
lock
jg
pop
xor
mov
add
stos
adc
addr16
ds
aad
mov
xchg
fidivs
imulb
aas
test
inc
jmp
les
add
xchg
loop
fsubrl
inc
mov
cmp
outsb
jge
mov
pop
jg
ljmp
mov
jb
fwait
xor
or
repnz
test
outsb
lods
out
cmpsl
xor
add
jmp
setno
add
loop
adc
cmp
lock
cmc
movsb
mov
mov
rorl
fsts
dec
gs
sbb
dec
sbb
xchg
aam
xchg
sbb
and
lcall
jl
jb
jp
cmp
lret
dec
mov
fbstp
cmc
pop
xlat
or
sbb
fildl
add
int3
repz
sahf
loop
int
mov
in
inc
xchg
jmp
fiadds
jne
adc
cmp
push
mov
cmpsb
push
add
sub
cld
aam
arpl
test
jnp
into
stos
sarb
xor
jmp
jo
and
xor
fucomp
or
sub
clc
xor
in
pop
clc
fsubl
mov
ret
daa
insl
sbb
lock
jge
mov
and
mov
fisttps
lock
adc
sbb
out
sub
mov
adc
cmp
adc
int3
pop
aas
nop
fwait
into
lock
out
sahf
mov
rolb
mov
xchg
lret
clc
cmp
call
mov
icebp
fs
into
inc
and
daa
imul
loop
data16
and
xchg
jns
iret
jne
hlt
jg
std
scas
lods
ss
fiaddl
mov
pop
xor
xchg
or
ret
jno
add
inc
loope
inc
roll
add
jle
mov
pop
inc
ret
sarb
gs
add
leave
mov
stc
sbb
pop
xchg
nop
adc
push
mov
push
cmp
mov
je
outsl
out
mov
mov
pop
stos
mov
cmp
repnz
inc
clc
stos
mov
cmp
cmpsb
fsubr
mov
lods
es
cwtl
sub
adc
sub
movaps
pop
mov
xor
out
pop
enter
push
nop
divl
dec
popl
dec
jbe
cli
add
mov
popf
fbstp
cld
into
movsb
and
dec
cmp
lock
mov
cmp
pop
xchg
adc
jmp
pop
sub
dec
push
jns
jl
aad
mov
data16
xor
es
add
push
pop
xorb
pop
xchg
neg
sbb
add
imul
orl
jae
cltd
pop
les
in
push
mov
cmp
or
inc
inc
xchg
lea
mov
shll
pop
add
ja
insb
adc
jns
and
sub
cmp
mov
push
mov
int
mov
add
popf
cmc
sub
sbb
stc
mov
inc
stos
dec
repz
jge
sbb
test
f2xm1
xchg
das
xchg
xor
jmp
lret
cmp
inc
in
mov
xor
or
xlat
jg
rclb
inc
xchg
ret
xlat
pop
fwait
xchg
nop
ss
mov
fcmovnu
imul
cmp
sarl
jmp
xor
ja
nop
outsb
xchg
jle
ret
pcmpeqw
mov
xor
add
and
xor
and
shlb
adc
js
mov
mov
xchg
mov
test
pop
push
das
mov
popf
movsl
mov
lock
mov
ja
and
push
adc
mov
dec
scas
lock
lcall
or
inc
inc
pop
popa
out
std
movsb
dec
mov
inc
loopne
sub
pop
insb
inc
xor
sti
sbb
cs
stos
dec
mov
xchg
das
pusha
ja
xchg
xchg
pop
mov
roll
or
pop
pop
pusha
es
sarb
sub
scas
add
lods
or
cli
xlat
add
xchg
ds
test
rdtsc
popa
addr16
pushf
adcl
pop
push
cli
fimuls
mov
and
andb
xor
push
out
pop
pop
mov
mov
mov
lods
loopne
inc
or
and
cmpsl
stos
mov
mov
dec
or
add
inc
sbb
mov
cmp
jg
fcmovne
mov
mov
shrl
sarb
jae
jp
xor
adc
popf
or
adc
mov
leave
lcall
mov
sub
lock
in
lret
push
and
fucomp
pop
jb
jae
mov
xor
mov
outsb
call
cmp
mov
mov
xchg
xchg
js
test
mov
rolb
fcoml
movsl
mov
fucomip
ja
push
test
mov
gs
in
popa
addl
test
pusha
cmpsl
rcr
fwait
cmp
fiadds
and
push
add
push
test
test
pop
push
mov
fistl
mov
lods
fbstp
shlb
out
je
xor
in
test
cmp
cltd
bound
les
mov
pop
fs
mov
inc
lahf
or
inc
imul
gs
sub
mov
scas
pop
and
jle
lds
loopne
add
sub
leave
sbb
push
stc
das
hlt
outsb
mov
arpl
cwtl
xchg
stc
push
cmp
fistps
int
fs
mov
add
push
jmp
dec
jo
movsl
inc
jo
dec
fsubl
aas
mov
jl
cmp
xchg
nop
fsubs
aad
push
sub
add
and
and
mov
cmp
mov
mov
sarb
xor
xor
sti
cmp
sub
cmp
push
jecxz
clc
inc
xchg
adc
stos
lcall
inc
cmpsl
push
inc
je
push
mov
lcall
push
jp
out
or
xor
xor
mov
jge
iret
push
insl
ljmp
mov
ljmp
cwtl
mov
push
testb
push
sbb
jae
divl
push
mov
mov
jnp
mov
cli
pop
jge
inc
add
cmpsl
daa
shrd
xchg
jo
iret
loope
lea
mov
xchg
nop
fmulp
hlt
fwait
bound
test
rcll
xchg
out
mov
in
std
mov
mov
in
loop
out
xchg
pop
lock
stos
dec
stc
rolb
cmp
cmp
arpl
adc
popf
push
dec
pop
repnz
cmpsb
inc
xchg
push
addl
jb
pop
mov
mov
iret
xor
dec
push
inc
push
dec
rcll
push
out
cmp
lock
insb
sahf
stos
sti
mov
enter
jp
daa
xchg
jmp
dec
dec
divb
sub
orb
mov
outsb
int
jecxz
sub
mov
shrb
mov
lods
cmp
call
xchg
stos
loopne
outsb
int3
fcmovb
xchg
cmp
mov
aam
or
pop
or
xchg
cmp
lret
jecxz
inc
in
mov
fldenv
loop
push
mov
addr16
aaa
sub
out
repz
mov
loopne
lret
jmp
loopne
adc
jb
mov
in
pop
pop
mov
adc
jp,pt
mov
or
pop
or
adc
xchg
out
or
pop
dec
into
xor
sub
lods
movsl
pop
jbe
out
imul
sub
loop
xor
fists
outsl
push
fdiv
mov
inc
repz
aaa
or
negb
stos
and
jae
cmp
mov
mov
xorl
push
xchg
pop
lahf
lea
add
fs
xchg
fnsave
arpl
push
pop
jne
clc
loope
cs
loope
jnp
cmp
out
push
pop
dec
orl
xchg
ret
fwait
mov
mov
rcrb
lods
lds
xor
cld
movnti
dec
push
jmp
cmp
mov
jp
lods
xchg
jg
or
inc
cmp
pop
outsl
fldt
sti
pop
lahf
mov
ss
cli
adc
nop
out
xchg
sub
push
ja
pushf
insl
lret
jno
push
pop
aas
mov
repnz
mov
flds
int
cmp
mov
fmulp
push
cwtl
addl
jg
or
fdivrl
ljmp
pop
cmpsb
mov
sub
jbe
pop
fbld
fistps
fs
and
inc
pop
xor
addl
mov
test
orl
cmp
mov
int3
push
or
inc
in
mov
push
mov
dec
mov
insl
mov
mov
cmp
inc
aas
cmp
stc
mov
xor
in
and
xlat
adc
mov
cs
push
jecxz
pop
or
icebp
push
je
movsb
xchg
aam
jge
or
std
mov
outsl
cs
pop
or
xorl
rorb
dec
fstps
out
lret
sarb
insl
push
xchg
pop
jl
cmp
add
sbb
lahf
inc
test
inc
jo
pop
push
loope
dec
fs
xchg
adc
fcomps
std
adc
jmp
sub
or
xor
ret
ss
fidivl
fwait
popf
sub
fidivrs
repz
into
add
ljmp
jnp
jge
lea
push
divb
ret
mov
xchg
andb
test
mov
out
je
sbb
sub
inc
repnz
stc
push
notb
sahf
and
gs
aaa
loope
outsb
mov
insb
daa
pop
int3
jl
dec
stos
adc
mov
fcmovnb
push
mov
or
cmp
ss
nop
orb
xlat
mov
sarl
cmpsl
addr16
add
xchg
sub
pop
in
xchg
mov
dec
and
inc
push
les
jnp
dec
and
pop
mov
mov
and
inc
mov
cmp
xor
or
lret
loopne
sub
sub
or
push
movsl
dec
ljmp
sub
mov
xor
cmpsb
mov
popa
and
mov
test
add
dec
xor
mov
mov
pop
add
loop
inc
jno
imul
mov
jmp
lahf
cltd
fwait
call
dec
cli
mov
sub
mov
clc
scas
pop
xor
mov
icebp
lods
lods
mov
in
add
shrb
pop
push
pop
mov
ja
mov
mov
stc
add
pop
jle
pusha
ja
andl
mov
push
xor
divb
lock
dec
cmp
mov
loop
mov
xor
sub
outsb
inc
jno
mov
mov
testb
lock
in
or
mov
cmp
outsl
jae
out
test
lods
jecxz
inc
or
jnp
movsb
mov
test
jns
push
sub
or
lds
dec
loopne
or
pusha
and
aas
stos
fcmovbe
cmp
mov
and
xchg
loop
inc
ret
mov
lods
outsl
jecxz
cmc
hlt
in
pusha
lock
cmp
aas
jae
dec
dec
or
mov
push
outsl
mov
test
bound
mov
test
push
jne
mov
sti
cmpb
dec
pop
lds
mov
mov
xor
rolb
jae
ret
xchg
push
ds
add
mov
pushf
push
jb
lea
mov
cli
push
repnz
and
js
nop
inc
xchg
sbb
cs
shl
cmp
subb
sbb
pop
mov
pop
ret
sbb
inc
lcall
pusha
dec
pushl
rol
pushf
notl
push
fistl
add
std
mov
daa
push
mov
dec
cmp
imul
nop
fistps
cli
xchg
cmp
pop
push
jb
int
lods
jle
cld
clc
cmpsb
rorb
xchg
add
pop
xchg
dec
shlb
fcoml
mov
fsub
lods
add
mov
iret
repz
pop
lock
ret
xor
dec
pop
mov
push
inc
aad
ret
cltd
cmp
pop
andl
pop
pusha
or
es
add
mov
pop
bound
push
fstpt
mov
fidivl
vdivps
mov
jae
cmpsb
ljmp
js
outsl
imul
mov
lock
iret
ja
ja
mov
imul
pop
mov
adc
push
lret
clc
icebp
or
mov
mulb
hlt
and
sarl
mov
adc
jmp
sub
test
xchg
mov
adc
dec
cmp
pusha
xchg
or
inc
or
imul
inc
or
arpl
into
push
push
je
outsb
cmp
sub
in
hlt
nop
add
lret
lods
loope
mov
jle
in
fnsetpm(287
dec
mov
movsl
es
and
pusha
xor
push
nop
popf
movsb
dec
pop
std
hlt
mov
out
push
bound
mov
jp
xor
or
aam
dec
fwait
mov
and
xchg
pop
xchg
xor
sarl
lods
adc
jmp
or
movsb
imul
nop
nop
mov
add
ljmp
pop
inc
xchg
sub
inc
sbb
fwait
lret
pusha
xchg
pop
idivb
scas
adc
mov
arpl
outsb
mov
out
jnp
iret
clc
daa
fists
mov
jge
sbb
or
add
aam
sbb
or
insl
jno
arpl
pushf
mov
fs
inc
xor
push
sub
mov
mov
mov
sti
and
cmpsl
push
mov
popf
mov
jne
dec
pop
test
fldt
xor
dec
sub
push
mov
push
rcrb
int
cmp
out
mov
xchg
xorl
cmc
leave
cmp
jmp
jg
push
lods
lock
mov
in
push
cli
xor
sbb
aas
test
push
jb
out
push
inc
mov
pushf
dec
inc
lahf
and
imul
and
mov
dec
loopne
sbb
incl
icebp
into
arpl
sub
cli
and
jns
inc
jne
int3
movsl
and
addb
leave
or
push
aam
fstps
push
push
std
out
ds
or
movsb
fbstp
mov
mov
push
sbb
int
mov
push
mov
fnstcw
pop
inc
enter
jno
sarb
negb
push
scas
add
outsl
repz
push
into
mov
mov
andl
adcb
sti
sub
jcxz
or
push
mov
sbb
cli
lcall
pop
cmp
add
das
jge
lcall
pop
scas
insl
shrl
mov
shll
sub
adc
xchg
aad
add
pop
xchg
adc
dec
add
mov
inc
pop
in
sub
mov
in
xchg
jmp
int
pusha
pop
out
sub
push
sbb
aaa
aaa
mov
jb
pop
mov
push
arpl
pop
mov
scas
mulb
testl
fdivs
arpl
shlb
pavgusb
stc
mov
mov
in
out
addr16
xor
mov
enter
xchg
fistpl
fwait
das
fsubrl
loopne
pushf
and
mov
sbb
add
xchg
cli
outsb
dec
adc
jge
negb
xor
pop
repnz
sbb
jmp
xor
jl
stos
dec
inc
sbb
lea
xchg
push
call
movsb
cwtl
ficomps
arpl
xor
push
testb
adc
jne
mov
imul
push
mov
dec
pop
sub
in
and
cmpsb
and
fs
jbe
cmpsl
mov
incb
add
adc
and
scas
loop
dec
pop
xchg
repnz
test
lock
icebp
gs
sub
xchg
ss
mov
mov
dec
sub
mov
inc
xchg
aaa
cmp
adc
add
lcall
push
push
cmp
addr16
lock
ljmp
sahf
and
insl
mov
loopne
pusha
sub
jg
mov
int3
pop
aad
sbb
add
test
jb
test
add
cli
xchg
inc
sbb
decb
outsb
xor
push
or
popf
fmull
mov
push
mov
dec
adc
pop
imul
xchg
adc
or
xor
scas
es
mov
fwait
cmp
jmp
es
sub
imul
test
fdiv
sub
push
loopne
add
lcall
xchg
adc
xlat
xor
jmp
mov
pop
and
mov
ja
mov
xchg
and
mov
mov
shll
stos
test
test
or
xchg
stos
adc
inc
repz
pop
push
mov
sbb
test
xchg
mov
pusha
adc
jo
sub
cmc
in
imul
mov
pop
sbb
loop
sub
sub
vmovups
rcrl
pop
imul
jae
push
rcr
jp
dec
mov
dec
pop
ffreep
cli
addl
push
sbb
dec
test
pop
enter
incb
push
mov
jb
cli
mov
push
frstor
fs
mov
int3
jnp
loopne
mov
loope
lods
lods
and
fwait
lods
mov
dec
pop
aas
mov
cmc
xor
mov
rclb
and
push
sti
xchg
pop
sub
and
out
cli
adc
rorl
and
inc
loop
push
pop
fldcw
lcall
dec
add
push
pop
inc
jg
in
pusha
data16
lcall
mov
out
mov
or
pop
push
adc
mov
push
xchg
push
xor
xchg
call
loopne
sub
lea
adc
push
mov
mov
in
mov
das
xor
lcall
and
jae
xchg
mov
push
js
popf
or
jecxz
movsb
das
cwtl
jno
pop
jg
ss
pop
mov
test
fsubp
pop
cmp
add
adc
or
imul
aas
push
push
sarl
punpckhdq
ret
mov
mov
fistpll
inc
cmp
nop
jb
cld
or
pop
cmp
adc
inc
fldl
dec
push
aas
stos
ljmp
dec
arpl
lock
bound
jge
sbb
jns
dec
sbb
xchg
cltd
inc
pop
and
nop
aaa
das
shll
jmp
out
lcall
sbb
cmp
cs
fisubl
cmp
xor
adc
testl
ja
shl
insb
in
mov
clc
cmp
lds
mov
mov
add
addb
xchg
setns
in
int3
movsb
arpl
rcrb
mov
mov
into
repnz
sbb
dec
movsl
jne
push
xor
icebp
repnz
fisubrl
mull
mov
add
pop
movsl
pop
cmp
xor
mov
cld
fdivr
sbb
pop
dec
inc
sarb
cmp
mov
dec
test
shr
lods
out
jo
lock
mov
sub
adc
jae
cmp
fnstsw
ljmp
call
rcll
xchg
sub
sbb
xlat
loope
sbb
fcomps
pop
mov
and
xchg
adc
pop
scas
in
mov
jbe
lret
mov
out
dec
pop
pushf
cltd
shrb
and
lds
sub
dec
push
jge
rorl
int
jl
adc
dec
mov
push
jbe
pcmpeqb
xor
dec
cmpsl
rcrb
mov
mov
hlt
xchg
shl
popl
iret
cmp
push
sahf
lea
dec
mov
or
das
repnz
adcb
jno
adc
cltd
push
adc
mov
adc
pop
sbb
dec
dec
mov
mov
test
arpl
data16
pop
and
pop
nop
es
stos
hlt
xchg
xor
mov
push
cmovne
test
fwait
add
jb
mov
popa
addr16
jg
dec
insl
lds
sbbl
lret
push
add
shlb
push
push
cmp
mov
inc
cs
imul
jns
sbb
pushl
pop
andb
rcl
push
stc
xchg
push
inc
pop
out
data16
test
dec
pop
lods
outsl
cli
ss
jbe
pop
fs
out
adc
push
fcomps
loop
int
add
jo
ret
jle
pushf
mov
jle
lahf
cmp
mov
loope
sub
out
das
lods
mov
and
in
adc
fidivrs
cmp
incb
mov
mov
clc
ljmp
dec
pop
jo
testb
xor
lea
mov
sbb
fistpll
inc
mov
xchg
out
not
rcrl
mov
and
divl
pop
sub
rclb
inc
push
dec
push
sub
outsb
pop
inc
das
mov
repnz
push
es
jne
xor
fists
inc
adc
cltd
leave
jge
lods
arpl
ds
cwtl
mov
ret
test
ljmp
int3
jae
jge
inc
jne
lds
icebp
inc
repnz
mov
mov
pop
pop
ret
outsl
inc
out
push
pop
dec
dec
or
xor
int
mov
xor
in
mov
out
icebp
sub
and
xchg
jecxz
mov
sbb
pop
sub
sub
or
push
out
and
test
sub
pop
adc
sti
cmp
cmp
fdivrs
fwait
out
pop
cmpsb
cmp
or
add
adc
or
pusha
ja
mov
int3
dec
fisttpll
sbb
inc
fisubrs
xor
adc
lret
divb
data16
int
push
adc
ss
push
mov
xchg
mov
scas
clc
outsl
add
movsl
mov
pop
mov
push
jle
fsts
adc
std
clc
lret
fisttps
cmp
mov
cmp
call
mov
add
movsl
add
repz
pop
enter
mov
sbb
cmp
mov
mov
add
push
push
xchg
jae
xlat
insb
sub
int
iret
fistl
jne
mov
bound
jecxz
sub
int
nop
adc
push
testl
dec
mov
daa
movsb
daa
dec
lret
loopne
jb
mov
cltd
shl
scas
sbb
sub
test
pop
andl
or
loope
cmp
ljmp
cmp
adc
jecxz
cmc
mov
cmp
dec
jno
push
add
xchg
jns
pop
iret
insb
test
inc
in
dec
jae
cs
pop
divl
push
push
dec
pop
mov
pop
or
jecxz
addr16
pop
adc
xchg
int
fnstenv
loop
ds
repnz
cmpsl
mov
outsb
mov
xchg
mov
push
pop
mov
cmp
out
mov
pop
xor
sbb
stos
fldt
jbe
roll
test
and
ret
push
repnz
sbb
xchg
cmp
xchg
test
pusha
hlt
icebp
test
mov
jae
push
sahf
lcall
ret
out
test
jne
fisttpll
xchg
leave
pop
in
andb
nop
loope
mov
mov
dec
loopne
pop
ja
ret
mov
mov
aas
jg
xor
sub
cld
data16
in
sarl
shll
push
jp
sti
insb
push
add
mov
xor
dec
cli
inc
lret
incl
or
mov
std
push
jle
popa
dec
dec
mov
xchg
jne
aaa
jno
xor
cs
or
dec
jecxz
jnp
cli
fisubl
hlt
or
aaa
bound
cwtl
mov
adc
xchg
mov
pop
fs
jns
add
mov
pop
push
fisttpll
inc
add
sbb
inc
jnp
jb
call
lods
xchg
mov
cmpsb
scas
add
shrb
cld
sahf
push
repz
lds
arpl
in
test
xchg
cmp
push
jno
push
dec
lock
fcomps
xor
pop
fisttpll
out
andb
adc
dec
dec
xchg
inc
mov
ja
xor
pop
push
jmp
or
dec
cmc
pop
mov
popf
or
and
imulb
dec
in
sahf
lock
jno
mov
mov
lret
lock
fsubrs
daa
adc
out
dec
jns
outsl
test
cmpsb
ret
dec
rcrl
hlt
and
mov
lret
pop
insb
mov
cmpsb
imul
cmc
add
pusha
and
pop
iret
cltd
or
pop
and
adc
mov
inc
inc
add
mov
xor
adc
dec
or
dec
call
xchg
mov
pop
xchg
pop
xorl
sub
cld
fiadds
cmp
xlat
xchg
dec
add
mov
enter
sbb
sbb
cmpsb
subb
pop
push
add
inc
and
jecxz
lahf
xlat
inc
pop
mov
adc
push
enter
popf
mov
ret
pop
pop
adc
ja
xchg
lock
mov
pop
mov
pop
adc
cli
fstpl
mov
jg
xor
pop
icebp
sub
mov
pop
push
dec
hlt
hlt
push
and
int
out
adc
scas
jmp
mov
sub
adcb
out
and
adc
fwait
and
adc
ss
xchg
push
lcall
shl
xchg
dec
mov
xchg
sub
pop
cmc
adc
movsl
lock
js
imul
and
movsl
in
pop
push
inc
xchg
notb
mov
fimuls
adc
lahf
jmp
pop
xchg
lcall
je
push
sub
in
jl
test
add
ss
sbb
mov
rclb
bound
inc
std
movsl
mov
inc
mov
cwtl
inc
cmp
pop
fcomps
pop
je
cltd
dec
es
cwtl
loopne
movsl
aaa
xor
adc
fisttps
dec
enter
sti
mov
inc
mov
clc
pop
and
mov
mov
adc
sub
imul
and
test
in
aas
sbb
sbb
xchg
loope
mov
aad
lds
pop
ds
push
lods
push
insb
imul
lods
sahf
xorl
sbb
ret
mov
sti
mov
sbb
iret
dec
push
inc
cltd
mov
dec
aad
add
subb
mov
arpl
pop
dec
cmpb
nop
mov
pop
ror
push
cmp
pop
test
jb
sbb
js
ret
cmpsl
fs
and
cmc
jo
out
out
ret
shr
push
sbb
push
scas
ret
test
pop
dec
movsl
lea
mov
push
and
loope
les
mov
xchg
mov
and
jns
mov
pusha
xchg
adc
stos
lcall
mov
jecxz
cmp
xorl
add
jmp
cltd
push
cmpsl
add
jno
xchg
sbb
loop
into
lds
test
adc
test
pavgw
cmp
subb
mov
imul
or
dec
ret
in
add
enter
or
imul
sbb
and
dec
jns
add
out
or
sub
fsub
mov
adc
jecxz
sbb
inc
push
cmp
fcomip
and
jg
call
into
inc
mov
mov
push
fstpl
cmp
pop
and
cwtl
pop
fstp
xchg
mov
clc
jp
add
sbb
add
sub
mov
outsl
aam
fneni(8087
jnp
loope
popf
int
cmp
ja
movsb
lods
cmc
mov
dec
inc
insb
and
notl
loopne
jle
adc
add
xor
jnp
je
fistps
jg
clc
mov
add
inc
mov
add
addb
jbe
repz
xor
fnstsw
insl
lret
repnz
iret
gs
fucomp
sub
and
xchg
sahf
cmc
mov
ret
or
jle
in
mov
xchg
add
cmp
inc
cs
imul
shll
or
push
push
jge
xorl
push
mov
shrl
leave
testb
dec
dec
mov
adc
xchg
dec
sbb
loope
pop
in
repnz
insb
and
cmp
pop
lods
and
add
lea
fiadds
jg
mov
jb
fwait
subl
andl
dec
orl
insb
lods
dec
rcrb
lret
outsb
cmpsb
ret
sub
insl
mov
jle
ljmp
or
mov
sti
mov
into
aad
cmp
xor
mov
cwtl
mov
xor
fxam
xor
pop
ret
and
add
ficoms
ss
scas
in
loop
imul
cli
jp
jmp
dec
and
stos
stos
dec
dec
push
hlt
das
pop
mov
fmul
sbb
mov
das
mov
dec
xchg
xchg
mov
sbb
pop
add
sbb
or
nop
xchg
push
cmpsl
or
push
cmp
push
insb
jl
scas
rorb
add
fstl
pop
in
hlt
not
xchg
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
and
add
add
outsl
jg
or
cmp
push
cli
pusha
jbe
popa
xchg
mov
mov
adc
xchg
lods
fidivrl
test
pushf
fisubl
imul
in
pop
and
gs
sub
lea
dec
ja
lods
adc
and
jae
inc
ljmp
cmpl
cmp
and
add
add
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
psrld
mov
fdivl
sub
mov
or
out
sub
bound
bound
test
sub
inc
pop
mov
mov
popa
xlat
jo
xchg
dec
clc
movsb
outsb
icebp
add
sbb
test
aas
loope
inc
mov
scas
inc
mov
inc
cld
popf
lds
add
add
add
sub
sub
addb
into
add
bound
add
andb
mov
jg
icebp
mov
or
insl
hlt
mov
outsl
lock
and
jecxz
inc
fucomip
test
sbb
pop
cmp
dec
fnop
out
inc
cmpb
mov
fdivrs
adc
scas
mov
js
push
jecxz
in
pop
jp
aaa
in
std
and
mov
add
das
and
aam
aam
ljmp
je
or
into
add
bound
add
cmc
sbb
jbe
pop
sarb
adc
xlat
and
adc
movsl
add
mov
lea
sbb
adc
mov
xchg
sub
sub
sarb
test
orl
mov
mov
lods
jmp
adc
in
int3
pop
pop
jo
ud0
adc
and
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
pop
pop
push
inc
int3
or
inc
mov
jno
mov
dec
subl
inc
xor
adc
jl
loope
lods
sub
shrl
jge
aad
inc
mov
in
xchg
std
mov
pop
popa
push
xchg
jno
mov
or
inc
and
and
inc
and
inc
sub
jnp
add
add
add
out
lods
cmp
stc
stc
lret
imul
add
add
setle
mov
icebp
fimuls
cltd
xorl
dec
mov
push
or
mov
mov
sbb
call
loop
xchg
push
call
xor
adc
jb
xor
mov
mov
ret
xchg
cmp
pop
gs
mov
insl
iret
mov
pop
add
add
add
push
xor
gs
aaa
push
nop
mov
iret
add
bound
add
mov
inc
popa
add
jmp
test
dec
das
in
gs
mov
in
nop
xor
sbb
ret
adcl
pop
mov
xor
stos
lret
add
test
adc
sub
or
pop
repz
andl
hlt
test
das
add
add
add
adc
push
adc
cwtl
out
pop
push
mov
bound
add
loop
loopne
js
adc
clc
jmp
in
mov
ds
jmp
pop
push
addr16
jge
add
dec
loop
or
mov
int3
mov
mov
arpl
int
lock
xchg
pop
scas
cltd
je
out
cmp
bnd
aas
push
cmp
xor
mov
lods
and
push
js
add
add
add
dec
inc
sub
das
jle
jg
imul
ss
or
add
add
aaa
mov
gs
sub
enter
mov
adc
push
jnp
outsl
pop
pop
xor
mov
int
dec
xchg
jnp
inc
sbb
xor
inc
sub
and
xor
mov
mov
pop
idivl
cmp
mov
out
dec
fldt
in
inc
add
lcall
add
add
add
addr16
and
mov
mov
xchg
add
jecxz
add
add
aam
jge
mov
je
jb
outsb
jle
pop
out
and
xchg
mov
scas
int3
movsb
fwait
js
js
syscall
aaa
sbb
pop
bound
mov
mov
or
std
push
mov
jbe
or
xlat
sub
lahf
lret
stos
lea
mov
push
rcrb
lock
xor
rolb
add
ret
or
ret
lods
sub
mov
leave
stos
jecxz
add
add
imul
scas
mov
push
adc
ja
imul
xchg
aam
insb
xchg
fdiv
cmpl
dec
test
and
jbe
sub
cmp
in
or
into
xchg
cmp
or
out
pop
add
outsb
adc
adc
aas
dec
ja
js
push
lcall
lds
push
pop
xchg
add
add
add
fld
add
ror
outsl
clc
shr
xor
or
add
add
cld
adc
dec
push
sbb
orl
aad
imul
jae
pop
hlt
aad
loop
lahf
aad
std
loop
and
mov
fs
cmpl
cmp
cltd
in
pop
mov
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficomps
inc
add
sbb
add
sbb
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
cs
inc
add
test
loop
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
into
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
ret
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
data16
inc
sbb
xlat
add
bound
add
jp
in
adc
repz
sub
mov
out
shrl
inc
cwtl
mov
and
xor
shll
rcr
dec
push
in
test
mov
movl
push
lods
addr16
cmpsl
insl
mov
jb
into
aam
inc
in
nop
adc
cs
xlat
add
add
add
sub
cli
jl
xlat
push
test
ds
add
dec
dec
aaa
xchg
adc
cmp
fidivl
jl
xor
or
imul
dec
cmpsb
lret
punpcklbw
popa
pop
cmp
sbb
cmp
xor
mov
pop
cmpl
in
sbb
and
ljmp
mov
icebp
in
sub
pop
xor
push
inc
xlat
mov
jle
mov
sahf
add
add
add
mov
jg
ljmp
push
and
xlat
add
bound
add
ljmp
mov
sub
xchg
add
fcmovnu
pop
inc
mov
rcll
and
out
xor
xor
add
js
jo
and
xchg
in
sbb
aam
jp
xor
mov
mov
xchg
adc
jp
push
add
rol
push
int3
stc
jae
lret
add
add
add
cmp
cmp
in
fimuls
fisubrl
das
fadds
add
add
je
aam
mov
jns
push
cs
lahf
pop
jle
and
mov
jg
std
push
jb
lret
test
mov
mov
js
sbb
dec
xchg
adc
int
orb
add
xlat
rcr
mov
mov
mov
mov
xor
loopne
nop
ja
add
add
add
mov
sbb
std
negb
sub
inc
jb
xchg
xchg
fadds
add
add
mov
dec
flds
mov
push
mov
inc
pushf
lds
outsl
repnz
jmp
push
iret
sarb
lret
mov
arpl
pop
in
inc
sarb
je
inc
jns
xchg
inc
ds
aas
jo
xor
in
push
mov
xchg
nop
pop
push
sbb
fdivs
clc
mov
pop
insl
sub
mov
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
repz
add
add
adc
xor
xor
mov
xchg
les
repnz
pusha
jbe
push
push
mov
push
jnp
or
iret
popa
pop
aas
xor
pusha
cmpsb
push
imul
call
mov
sahf
sub
jecxz
or
icebp
jg
data16
mov
fildll
std
add
dec
out
or
xchg
add
add
add
add
pop
sub
enter
add
add
inc
fistpl
push
mov
mov
and
mov
xchg
es
sub
inc
push
ljmp
mov
jo
jb
int3
push
sbb
push
in
outsb
into
jnp
test
sbb
jp
daa
loop
push
and
mov
rclb
rorl
mov
pop
test
add
add
add
push
add
xor
jb
insl
xor
and
mov
add
bound
add
and
rclb
movsl
pusha
xchg
and
or
dec
pop
and
scas
int3
roll
in
repnz
jmp
mov
aad
cmp
fucom
sub
or
cmp
fisttps
push
ficomps
mov
dec
fcoms
cmp
add
bound
in
or
add
add
add
push
add
mov
out
or
sbb
add
bound
add
aam
sbb
shr
xchg
mov
outsb
pop
test
imul
jge
ss
fidivl
test
mov
push
pop
sub
lcall
rorb
int
roll
das
mov
push
jmp
stc
js
mov
stc
insl
mov
jb
sbb
inc
jecxz
sbb
add
add
add
mov
jmp
fimull
cmp
add
bound
add
jl
jns
or
add
ret
pusha
mov
add
das
mov
lret
icebp
iret
mov
mov
mov
mov
ss
inc
shl
sbb
jecxz
loopne
pop
mov
push
inc
sub
inc
into
movsb
cmp
nop
in
or
imul
push
stos
mov
inc
dec
add
add
add
pop
inc
pop
iret
pop
aad
ss
dec
cmp
adc
fstp
add
bound
add
jbe
rolb
stos
xor
pop
push
dec
and
in
dec
gs
fwait
jle
adcb
xchg
shlb
inc
out
scas
mov
pop
inc
cmc
xor
or
xchg
aad
cmp
dec
ret
pop
std
adc
loopne
xchg
inc
push
in
inc
xchg
pop
cmpsl
push
sarl
add
sar
inc
pop
dec
jle
adc
add
fwait
test
jg
aaa
pop
add
add
bound
add
mov
pop
add
mov
xor
mov
pop
sbb
sbb
dec
dec
imul
into
mov
ficoml
cs
sbb
movsl
or
mov
push
dec
bound
lret
fs
mov
and
mov
add
lods
mov
insl
imul
jbe
cmpsl
icebp
inc
test
add
add
add
outsb
jae
lret
jle
repz
stc
leave
mov
add
add
movsb
cmp
xor
jns
and
das
cmp
adc
lods
add
mov
xchg
sbb
dec
into
and
imul
cmp
insl
jp
mov
xlat
dec
int
ret
add
cs
mov
sbb
decl
jmp
sti
mov
and
push
mov
add
add
add
add
adc
adc
mov
lds
add
add
bound
add
inc
loope
scas
mov
sbb
cmc
sbb
pop
lahf
jmp
rorl
dec
data16
insl
mov
fldl
notl
and
enter
jo
fidivl
cmp
mov
mov
jle
and
daa
sbb
es
lcall
jb
mov
push
rcrb
add
add
add
mov
lock
mov
rcrb
cs
add
add
sarl
dec
jecxz
lret
add
pop
shll
imulb
rorb
jae
push
out
in
not
sbb
out
sbb
arpl
adc
pop
jae
into
pop
inc
adc
subb
movb
mov
jmp
fcmovne
stos
fistps
daa
frstor
xor
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
cmp
add
bound
add
sub
mov
fldl
adc
mov
mov
sahf
fbstp
leave
push
jbe
dec
adc
hlt
mov
pop
inc
sub
into
mov
jge,pn
dec
sub
stc
fnstsw
test
mov
mov
insl
lea
in
xchg
jne
nop
pop
add
add
add
int
xchg
inc
cmc
sti
fildll
hlt
push
daa
xor
fldl
add
add
xchg
push
push
mov
nop
mov
add
sbb
lods
sbb
out
sahf
sti
rcrb
gs
jge
adc
or
sbb
lods
xchg
add
dec
adc
jno
fcoms
push
cmp
fnstsw
aam
and
pop
shrb
xor
push
in
setbe
add
add
add
fs
testl
sub
add
add
jnp
sbb
push
mov
dec
pop
aas
inc
ret
cmp
pop
dec
stos
aaa
not
jb
subb
ds
das
jge
and
js
idivl
test
es
jne
push
test
xchg
int3
shrb
adc
inc
loop
push
int
mov
xor
bsf
cwtl
sub
mov
sub
out
aaa
or
fs
imul
add
add
add
jne
jg
clc
cs
push
and
add
add
mov
cmpsb
fmuls
push
std
mov
push
arpl
ss
aam
scas
je
sbb
lock
xchg
sbb
sbb
mov
dec
pop
lods
aad
jo
jmp
push
out
and
out
shr
rcrl
push
scas
out
pop
arpl
imulb
std
dec
pushf
or
push
outsl
or
mov
mov
push
dec
repnz
add
add
add
or
dec
mov
je
lcall
add
bound
add
mov
push
dec
cmpb
lcall
inc
call
and
dec
xchg
mov
dec
mov
pop
inc
pause
push
mov
fdivrp
cli
mov
mov
int3
lds
inc
ss
xor
out
fdivrs
repnz
in
sbb
sbbl
outsl
xor
add
add
add
fists
dec
mov
xchg
adc
decl
add
add
pushf
mov
jecxz
nopl
sti
fsubl
sti
cmpsl
cmc
out
shrl
inc
movsl
jmp
loopne
shl
popf
pushf
mov
in
push
adc
sub
jae
or
dec
mov
xchg
lock
lcall
adc
fdiv
and
inc
ds
xor
adc
hlt
and
test
add
add
add
xchg
fcmovu
fisttps
push
mov
roll
add
add
and
shrl
loopne
sbb
jg
sbbb
jmp
scas
fstpl
pop
ljmp
shll
lahf
sbb
push
adc
lret
ret
xchg
jne
add
pop
sub
fadd
jbe
iret
and
std
mov
fs
add
int3
icebp
lds
fildll
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
mov
sbb
and
lcall
xor
sub
adc
ds
out
and
mov
shl
loop
xchg
xchg
mov
call
mov
or
jecxz
adc
das
xchg
data16
xchg
xor
cmpsb
cmp
mov
dec
insb
arpl
fmulp
lds
test
xor
add
add
add
and
cmp
sbb
psrld
add
add
push
dec
fwait
and
leave
cmp
rcll
pop
or
jmp
cmc
sub
fstl
adc
sub
xor
jp
push
xor
xchg
add
lea
lret
or
and
and
mov
sub
adc
jbe
ret
add
inc
cmp
and
cli
sub
pop
fcoms
add
add
add
xchg
nop
ffree
popf
aam
cmc
or
jno
add
bound
add
aad
mov
push
cmp
pop
mov
das
sub
dec
cwtl
xlat
mov
lea
cmp
sbb
xchg
cli
repz
mov
and
sub
orl
fmull
movb
arpl
rcll
sbb
rol
mov
xor
into
pushf
adcl
add
add
mov
jbe
hlt
mov
and
cmpsb
cmpsb
ljmp
bound
add
inc
push
or
and
lods
lds
fistpll
adc
xchg
incl
scas
test
aaa
xchg
add
les
cmc
dec
mov
mov
xor
aad
sbb
enter
cmp
xchg
sub
adc
cs
xchg
or
dec
inc
push
stos
test
arpl
lds
pop
xor
std
clc
inc
push
add
add
add
xor
into
mov
sub
out
dec
outsl
push
xor
add
add
pop
jmp
inc
int3
fisubrl
in
mov
xor
cmp
loop
mov
xor
jne
or
in
add
jmp
sbb
mov
jbe
add
and
scas
adc
sub
fucom
jo
mov
push
ss
jg
test
xor
das
cwtl
sahf
shl
xchg
add
add
add
fucomi
outsb
and
pop
mov
xchg
roll
add
add
and
rorl
test
sub
cs
insb
pop
xor
out
sbb
lahf
mov
sub
sbb
ljmp
adc
aaa
sub
mov
jle
jp
xchg
cmp
push
jmp
ljmp
or
mov
pushf
inc
rorl
push
pop
dec
adc
add
add
add
mov
and
inc
stc
roll
add
add
rclb
mov
and
xchg
mov
xchg
out
cs
dec
xor
out
pop
sbb
sarb
lret
ds
jne
sub
xchg
into
cltd
mov
xchg
mov
mov
movsl
pop
mov
add
jmp
inc
pop
daa
outsb
xor
std
mov
jne
ds
cmp
cs
insb
jns
pop
out
add
add
add
mov
and
jg
call
into
inc
mov
gs
mov
add
bound
add
inc
mov
xor
insb
mov
hlt
pop
jg
sub
aas
pushf
jbe
push
adc
mov
push
push
ficoml
xor
sti
cmp
jl
outsb
mov
lret
sbb
popa
mov
cmp
jbe
je
sbb
adc
out
adc
push
scas
dec
pop
scas
add
and
add
add
add
sub
sub
stos
xchg
bound
add
pop
shlb
out
int3
fistps
sbb
fnstenv
sub
jne
sub
in
jb
xor
fdiv
aad
mov
les
fcmovnb
loop
xchg
inc
inc
sub
or
cmp
pop
mov
fdivr
stos
cmp
mov
js
or
mov
ret
push
push
jg
add
add
add
dec
aas
int3
sbb
out
loopne
lods
and
add
add
hlt
mov
imul
outsb
sub
in
dec
jns
sbb
add
adc
dec
test
loopne
adc
jbe
mov
dec
out
data16
ret
les
push
push
ljmp
inc
fistpl
inc
jnp
ljmp
mov
out
imul
xlat
inc
xorb
fidivrs
add
fsubl
popl
add
add
add
test
fildll
test
add
bound
add
mov
jmp
lods
push
iret
xchg
imul
cmc
xchg
iret
jno
xchg
lea
inc
je
push
mov
jne
popf
and
push
shl
mov
mov
jecxz
bound
mov
enter
jg
push
out
fcoms
or
std
leave
adc
lret
sub
addr16
sahf
fisubrl
adc
add
fwait
loope
sub
sarb
add
aad
add
add
dec
mov
cli
xor
into
lret
sbb
ret
lods
mov
cmp
adc
add
aad
jg
mov
xchg
stos
xor
js
xchg
mov
int3
scas
fadd
shll
xor
sub
in
imul
test
in
cmpsb
push
cmpl
add
add
or
ja
dec
cmp
dec
push
add
bound
add
stos
cmp
shrb
push
dec
fldcw
sub
sahf
mov
stc
mov
lods
xchg
dec
and
cmp
lds
ja
mov
add
push
test
in
xor
pusha
push
and
xor
or
push
in
xchg
fs
nop
mulb
divl
mov
add
arpl
jge
mov
daa
gs
mov
add
bound
add
and
push
mov
js
aad
inc
cmpsb
adc
mov
mov
push
mov
data16
sub
jo
cmpsb
xor
ljmp
outsl
ds
add
xor
dec
mov
adc
jbe
aaa
bound
es
out
xlat
cmp
repnz
hlt
lods
dec
mov
add
add
add
push
imul
andb
in
fldl
add
add
xchg
and
cmc
mov
loopne
clc
dec
aad
dec
insb
ljmp
imul
pop
adc
dec
loopne
push
pop
shl
push
add
mov
icebp
mov
pop
repz
or
testb
lock
lds
movsl
inc
xchg
out
xchg
repnz
mov
shlb
das
mov
lret
add
add
add
daa
ss
xor
and
push
jg
fiadds
add
add
pusha
xor
icebp
dec
jmp
or
nop
adc
iret
lcall
mov
and
out
rclb
repz
cmpsb
jle
movsl
push
cwtl
leave
push
cwtl
jno
ds
pop
cmp
lods
outsb
sarl
test
outsl
in
xchg
xchg
inc
mov
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
out
dec
cmp
fisttpl
insl
scas
sbb
and
mov
lds
dec
fcompp
push
pop
dec
push
ret
clc
mov
cmp
inc
adc
push
xor
inc
add
xor
test
dec
cmp
mov
js
outsb
xor
xor
cmp
cli
mov
add
add
add
push
aad
out
fucomip
ss
cmp
push
cmp
filds
add
add
jl
and
adc
mov
movsl
and
inc
adc
repnz
jg
mov
mov
mov
mov
shll
aam
mov
or
in
inc
adc
fs
sti
gs
scas
adc
movsb
jge
jmp
mov
imull
and
mov
shl
dec
push
aaa
stos
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
sar
inc
inc
sbb
into
xor
xchg
and
ja
fldl
mov
shll
ss
push
pop
push
rcll
dec
mov
mov
cwtl
push
cmp
xchg
loop
or
push
adc
or
xchg
addr16
roll
in
or
add
add
add
push
les
in
lahf
sti
ja
rcll
loop
filds
add
add
cmpsb
or
or
jl
mov
dec
cld
cmp
push
ret
and
and
test
cmp
and
jbe
imul
call
lcall
jns
inc
push
cs
jge
xor
js
scas
mov
ja
pusha
push
mov
mov
jb
add
add
add
jle
call
cli
lcall
add
bound
add
ret
addr16
mov
push
xchg
ds
cmp
sub
adc
call
push
add
jp
mov
ss
aad
es
inc
movsl
xor
inc
xor
ljmp
jge
push
in
push
inc
mov
outsb
inc
stc
and
or
mov
xchg
add
add
add
test
and
pop
dec
adc
shrl
loopne
add
add
cmp
cmp
sub
jg
stc
mov
movsb
cmp
jo
or
mov
test
pop
mov
insb
lods
popa
mov
ret
adc
mov
adc
jne
ja
imul
fldl
and
or
femms
fcmovnb
or
rorl
lret
mov
enter
add
add
outsl
mov
jmp
push
fcmovu
in
mov
add
bound
add
scas
and
ds
popa
imul
fldt
add
sub
ss
mov
push
or
gs
mov
outsl
insb
push
std
pushf
xor
nop
lahf
popa
push
scas
shrl
lds
push
xor
jp
fwait
adc
dec
cmpsb
js
in
xor
jle
xor
cmc
shll
jmp
incb
add
add
add
sbb
inc
jecxz
mov
roll
add
bound
add
mov
mov
imul
sahf
mov
pop
cmp
pushf
xchg
jp
jmp
sbb
pusha
xchg
lock
jnp
mov
jmp
mov
push
cmp
mov
stos
cs
int
sbb
jl
ja
nop
cmc
stos
cwtl
dec
or
cld
pop
in
add
add
add
mov
mov
icebp
and
std
and
loope
add
add
daa
lods
aam
fs
push
adc
insl
fsubrs
xchg
push
mov
add
pop
stos
dec
test
loopne
gs
enter
or
add
sub
out
cld
xchg
cmpsl
gs
clc
adc
or
rorl
and
pop
pop
mov
lea
add
leave
mov
cmp
jle
and
into
es
add
add
add
adc
repz
das
cli
fists
dec
es
leave
add
add
add
insb
insl
imul
push
cmp
stos
push
lea
lea
cmp
loope
mov
push
pushf
adc
cmp
repz
jno
adc
mov
push
mov
push
cs
lock
jle
mov
xor
mov
pop
adc
fiadds
mov
imul
inc
enter
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
add
add
add
add
add
add
add
add
clc
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
