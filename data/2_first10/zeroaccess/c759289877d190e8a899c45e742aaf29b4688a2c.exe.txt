push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
xor
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
cli
adc
nop
std
dec
xlat
sbb
shr
cmp
ret
cmp
insb
shl
mov
add
inc
repz
ja
mov
iret
push
mov
negb
es
sbb
sti
dec
cmp
dec
xchg
lock
or
pop
cmp
cmp
cmp
cmpsl
cmpsl
push
cmpb
fstpt
mov
rcrb
shl
adc
add
jae
and
loopne
xor
inc
rcr
mov
test
lahf
lret
lds
aaa
dec
arpl
jae
pop
paddsw
mov
popa
push
ret
sbb
add
shlb
jg
hlt
inc
insl
call
push
out
frstor
jmp
jb
mov
aas
hlt
repz
hlt
mov
mov
xchg
lods
sub
jmp
mov
pop
mov
xchg
push
pop
fwait
mov
add
jecxz
test
mov
jbe
mov
outsb
loop
sarl
mov
cld
shlb
sbb
mov
mov
sbb
mov
sbb
ret
mov
bound
cmp
mov
pop
popf
scas
test
sub
das
lock
rorb
mov
rcrb
outsl
dec
mov
adcl
add
cmp
adc
cld
insb
mov
dec
add
xchg
shll
scas
cmpsl
sti
ret
cltd
aad
ret
and
enter
mov
mov
cli
or
dec
and
inc
add
loopne
sarb
mov
stos
jp
add
fidivl
jb
pop
push
das
pop
out
inc
sub
push
iret
sub
mov
cmpsb
xor
aam
inc
cld
mov
lret
dec
push
pop
adc
or
mov
cwtl
test
inc
xor
cltd
popf
jbe
icebp
lret
lahf
mov
pop
fst
mov
pop
push
stos
in
xchg
xchg
and
and
mov
sar
aad
filds
das
mov
test
xor
cmpsl
idivl
adc
cli
dec
mov
jbe
mov
dec
nop
dec
sub
shrb
das
pop
cmp
dec
mov
add
inc
cld
subb
adc
jae
xchg
mov
cli
inc
add
lods
fistps
pop
dec
mov
insb
sbb
pop
jle
inc
push
aaa
int
cmp
cltd
pinsrw
mov
xchg
sbb
dec
xor
test
jle
pop
pop
jg
pop
pop
arpl
decl
sbbl
sti
lods
cmp
pop
lods
std
xlat
push
repnz
std
inc
clc
cs
imul
add
mov
stc
xchg
inc
aam
inc
mov
scas
test
pop
out
imul
mov
push
pop
test
loopne
pop
pop
rcrl
lret
xlat
sbb
test
mov
lods
mov
stos
sahf
sub
ficoms
shll
pushl
push
xor
push
xchg
mov
shl
push
outsb
shr
sbb
dec
mov
pushf
pop
and
inc
sub
mov
cmc
xchg
daa
add
cmc
mov
mov
cmp
dec
and
leave
cmp
jnp
jb
xor
test
cld
lods
mov
jb
or
leave
and
scas
inc
movsb
lods
mov
pop
push
xor
inc
and
hlt
mov
ret
in
or
inc
insl
enter
je
ja
lret
popf
adc
ljmp
dec
scas
mov
fistpll
push
cmp
das
xorl
adcb
mov
nop
push
call
mov
mov
mov
lds
adc
add
mov
pop
adc
pop
jo
popf
sub
leave
es
mov
xchg
cltd
mov
xchg
cmp
and
or
mov
push
cltd
xchg
imul
sbb
inc
in
out
ds
push
add
repnz
lods
jg
jp
cmpsb
fsubs
data16
mov
xchg
jo
fnstsw
fmulp
fnop
in
pop
leave
imulb
clc
lock
adc
sub
pop
lcall
jbe
test
jge
fistps
cwtl
lret
fistpll
adcb
mov
push
cs
and
aas
mov
sbb
mov
sub
lds
adc
jbe
cli
jbe
arpl
lds
mov
in
lahf
jnp
pushf
push
lahf
jecxz
popf
icebp
add
jne
push
into
adc
les
adc
outsb
mov
enter
loopne
mov
jne
aaa
rcrl
es
jl
push
lcall
pop
aad
sub
pop
inc
mov
cmp
mov
cmc
lcall
lds
dec
jge,pn
push
xor
movsb
cmp
and
mov
cltd
inc
jp
sbb
mov
push
mov
hlt
les
pop
jmp
popf
dec
push
xor
ds
stos
movlps
and
xchg
movsb
lods
gs
enter
aad
and
das
cli
jo
test
shl
lret
arpl
mov
addr16
out
jnp
xchg
mov
call
or
or
and
cmp
mov
mov
cli
push
enter
jne
fs
jmp
push
dec
inc
mov
jle
mov
mov
stc
popf
lret
imull
stos
inc
jmp
shrb
lahf
lea
lret
add
outsb
mov
sbb
pop
mov
xchg
pop
cmpsb
push
xor
sbb
xchg
mov
popf
call
and
loop
push
pop
fs
mov
xchg
mov
out
das
insb
pop
outsb
mov
and
popa
loop
mov
adc
fisubs
insl
popf
hlt
dec
xchg
push
stos
xor
xchg
push
test
test
enter
out
inc
xlat
or
jp
add
push
adc
pop
pop
in
cmpb
iret
mov
push
mov
sbb
mov
mov
popa
insl
xor
xchg
mov
jae
fs
mull
jmp
xor
xrelease
xchg
mov
ds
lods
push
int
lret
es
repz
jnp
sti
xchg
outsb
sti
nop
jmp
add
adc
popf
shlb
aas
and
inc
fwait
push
cmp
or
add
subb
pop
lret
and
dec
or
adc
lods
jecxz
push
cmpl
enter
sahf
pop
int3
out
inc
mov
lea
xchg
xlat
sub
jb
je
inc
push
shl
sub
fs
lds
jae
fs
mov
into
out
xchg
cmp
xchg
call
xchg
into
sbb
or
mov
fmul
mov
adc
popf
clc
decl
push
mov
pop
dec
aas
loopne
sub
mov
mov
jae
shll
fwait
cmp
mov
add
pop
mov
xor
aad
add
roll
mov
fbstp
fdivrl
sbb
mov
in
jnp
aas
ss
xchg
std
inc
pop
mov
push
mov
lahf
and
scas
xchg
mov
sbb
add
pop
pop
js
jno
mov
sub
mov
add
xchg
push
mov
mov
pop
imul
xor
mov
mov
push
cmc
dec
rclb
push
scas
add
push
jb
inc
xor
popa
repnz
sbb
mov
push
test
sbb
stc
mov
xor
fs
push
xor
jmp
or
xlat
xchg
scas
lods
ret
push
add
clc
dec
scas
adc
pop
mov
repz
loope
xchg
mov
es
push
das
out
jecxz
cld
push
addr16
mov
stos
and
testb
movsb
scas
pop
mov
lods
ficomps
mov
mov
jb
sub
cmpsl
pop
movsl
mov
lret
adc
adc
repnz
mov
in
test
mov
mov
or
fidivrl
sub
lds
das
sub
jae
mov
rcll
sbbl
je
cmp
lods
icebp
stos
adc
jno
pusha
cvtps2pd
sub
cmp
sti
sar
roll
ret
fimuls
dec
imul
adcl
ret
mov
shrl
jmp
addb
out
test
sub
or
insb
dec
xchg
mov
xchg
in
xchg
outsb
aas
inc
mov
lret
movsb
xorb
mov
or
adc
sub
push
jmp
cli
cli
jmp
push
mov
jbe
js
std
push
test
cmp
jge
insb
orl
xchg
lcall
dec
mov
lahf
dec
pop
mov
mov
pop
shll
and
shll
jecxz
and
aaa
mov
pop
inc
aad
icebp
push
adc
ficoml
in
sub
mov
jecxz
shl
inc
shrl
les
push
pop
xchg
add
inc
rorb
push
xor
xchg
add
adc
cltd
mov
and
orl
movsl
lods
mov
jmp
mov
rorl
cmpsb
lret
pop
arpl
repz
test
bound
lcall
ret
mov
xlat
inc
xlat
pop
mov
inc
or
sub
sahf
inc
push
xchg
sar
pop
or
jnp
xchg
hlt
mov
pop
jp
cmp
ss
jno
mov
mov
sub
xor
ret
or
mov
pop
xor
mov
stc
mov
adc
push
inc
mov
mov
insb
pop
out
cmpsb
ret
dec
xor
arpl
adc
cwtl
xor
aaa
xchg
in
push
jmp
divb
mov
cli
arpl
in
or
dec
inc
sub
out
sbb
lahf
ds
dec
pop
sub
lock
adc
or
mov
or
lret
sbb
sti
and
test
or
jecxz
xchg
mov
jle
mov
repz
in
ret
inc
mov
push
lahf
fnstcw
shlb
mov
ficompl
dec
sbb
sub
mov
hlt
and
daa
inc
push
or
dec
repz
cmp
lea
jmp
pop
outsl
push
mov
dec
cmp
imul
push
fldcw
sub
mov
mov
sub
push
mov
into
xor
sbb
stc
subb
and
in
xor
add
adc
pop
inc
xorb
fs
cmp
shll
add
loope
insl
inc
fsub
adc
cmp
daa
xor
clc
movsb
lcall
push
inc
add
adcb
popa
subl
in
cwtl
add
out
xchg
or
jbe
sbb
dec
stos
jns
mov
aam
test
cmp
lret
mov
jne
nop
lret
and
je
mov
test
gs
mov
dec
imul
mov
push
cmp
sub
aam
daa
ficoml
aas
dec
cmp
sub
mov
inc
mov
mov
shrb
aam
out
push
js
cmp
adc
roll
dec
je
jbe
and
sti
mov
mov
dec
ja
and
inc
jae
inc
dec
fiadds
stc
lods
addr16
test
xor
pop
pop
mov
fwait
lret
iret
push
pop
cmpsb
loope
pusha
and
out
jns
mov
mov
mov
cmpsb
subl
or
pop
in
cli
out
repz
sub
xor
outsb
scas
mov
cli
mov
test
jo
push
inc
jmp
adc
test
int
stos
stc
ja
jns
icebp
dec
lods
das
das
mov
outsl
inc
aaa
and
pop
es
lcall
push
or
dec
mov
mov
xchg
jns
jle
xchg
out
dec
xor
mov
mov
arpl
lret
loop
cmp
sub
sbb
xor
std
xchg
adcb
movsb
sbb
notl
fnstsw
je
mov
or
dec
cmp
sbbb
aad
or
into
aas
pop
stc
inc
daa
sbb
mov
fstpt
stc
cmp
mov
les
pop
imul
xchg
std
rclb
adc
jl
outsb
push
pop
adc
in
insl
dec
ds
out
or
clc
fnstenv
xor
push
add
pushf
or
sbb
jle
jo
imul
jns
push
in
jge
jne
arpl
inc
test
fs
push
pop
icebp
mov
pop
or
push
aaa
jmp
ficomps
mov
xchg
lea
xchg
sub
stc
cmpsb
push
shlb
push
and
stc
mov
add
mov
jg
sub
aad
adc
or
jmp
notl
adc
js
mov
dec
in
and
out
or
mov
cmp
lods
mov
outsl
push
inc
dec
mov
dec
bound
mov
xchg
cmp
and
sub
repz
xorb
or
outsb
mov
movsl
or
or
xor
push
lods
xchg
inc
int3
js
inc
xlat
pop
xor
ss
loope
lret
jmp
adc
rcrb
mov
fisubrl
lea
jnp
test
cmc
and
imul
insb
lret
inc
sub
push
mov
pop
or
sahf
sub
dec
or
aam
outsb
data16
mov
adc
cmpsb
loopne
iret
rcl
cli
inc
inc
push
or
lret
movsb
iret
or
inc
cs
dec
popa
jo
in
out
outsl
cld
mov
divl
mov
xor
xchg
mov
cmp
out
inc
cwtl
push
add
stos
xor
dec
lea
aaa
loopne
arpl
and
sub
mov
push
push
adcl
jg
fadds
lret
mov
adc
dec
icebp
je
cmp
jne
test
mov
sarl
push
push
add
sbb
xor
adc
inc
lock
mov
adc
push
xchg
lret
push
and
stc
jg
scas
xor
es
ds
cltd
orl
fistl
xor
stos
push
xchg
mov
iret
xchg
mov
add
push
insb
jp
add
lahf
cmpsb
inc
sub
sti
loop
les
add
test
jno
popa
jnp
bnd
cmp
xor
add
sub
sub
mov
push
fisttpll
sarb
ret
cmpsb
sbb
cmp
mov
insb
mov
mov
and
sbb
call
out
or
hlt
popa
outsb
pop
leave
inc
out
push
test
cmc
fidivrl
mov
push
sub
daa
movsb
dec
out
cmp
ljmp
test
adc
jl
mov
inc
lods
aad
push
icebp
mov
cmpsl
xor
cmp
mull
jecxz
pop
outsl
cmc
inc
enter
dec
loope
sbb
idivb
outsb
jnp
mov
enter
jl
xlat
adc
jnp
push
insl
into
mov
and
fmulp
mov
mov
pop
dec
or
sbb
insb
push
shrl
leave
inc
push
fcomp
dec
pop
sbb
or
adc
imulb
pop
lods
inc
mov
inc
dec
hlt
mov
lds
sbbb
imul
popf
jae
lahf
cmp
fdivs
add
das
mul
test
or
dec
xchg
in
fwait
push
aaa
mov
iret
inc
dec
jl
jbe
das
fadd
fldcw
pop
push
mov
nop
scas
mov
dec
pop
mov
mov
mov
cmc
scas
lods
adc
cmc
scas
arpl
mov
cwtl
lcall
out
push
jns
leave
adc
aaa
int
loopne
inc
out
add
lcall
aad
sbb
sbb
jl
daa
mov
es
dec
aaa
sbb
jge
lea
in
push
add
xchg
or
xor
fbld
mov
stc
in
test
loope
scas
jp
sahf
inc
xchg
adc
mov
sub
lret
jbe
xchg
ja
xchg
outsl
lahf
ret
subl
daa
ja
jl
out
xchg
popa
in
cmp
loopne
cmp
pop
push
inc
mov
cmpsb
cmp
sbb
inc
jnp
push
push
push
daa
mov
cmp
into
scas
jecxz
and
cs
or
jns
sbbl
push
popf
inc
shl
cmp
adc
push
aas
stos
divb
jae
mov
movsl
pop
push
dec
jno
pop
jne
pop
int
out
mov
call
cmpl
mov
jg
and
ljmp
or
in
ja
lcall
sahf
ret
dec
add
dec
mov
lret
mov
jno
add
and
pop
jnp
jnp
push
sub
cmp
mov
push
sbb
jle
cmp
and
inc
cltd
inc
imul
sub
lods
mov
cmpsb
orb
std
inc
pop
mov
movsl
xor
les
mov
in
inc
cmc
xor
xor
clc
mov
sub
adc
dec
or
rcr
mov
jo
hlt
sub
or
clc
clc
dec
xor
or
mov
cmc
hlt
in
push
pop
bound
pop
adc
pop
movsl
bound
xor
push
scas
cwtl
les
clc
pop
cmp
inc
pushf
mov
popa
dec
cmp
mov
push
xchg
or
lret
popf
das
push
adcl
setno
jo
cmp
xor
jp
push
push
xchg
jge
out
aas
aad
popa
jo
aaa
jl
mov
xor
cltd
mov
jae
push
jge
push
fsub
cmp
inc
push
cmp
shll
in
dec
fwait
pop
xchg
cmp
and
pop
mov
ljmp
daa
mov
call
int
test
fisubrl
inc
jae,pn
out
or
lods
xchg
testb
mov
sub
outsb
mov
fimull
push
add
nop
mov
sub
xor
mov
lea
shlb
in
jbe
mov
insb
incb
movsb
subb
fmul
or
sbb
test
pop
stos
stos
es
shll
pushf
shll
fcom
jge
inc
movsb
iret
jne
adc
mov
add
mov
push
out
adcb
push
jno
inc
scas
out
sbb
mov
into
jp
cmp
mov
and
in
push
mov
enter
insb
cmc
pop
adc
and
std
cmp
lahf
aam
lods
cltd
ret
jnp
xor
jnp
inc
repnz
pop
mov
cwtl
test
divl
or
out
rcr
test
push
negb
mov
fsubs
mov
adc
inc
cmpsb
loopne
mov
out
inc
push
pop
push
in
mov
jbe
sbb
lock
mov
adc
jb
push
xor
sti
mov
add
inc
sti
sub
xlat
push
push
xchg
mov
mov
dec
pop
xchg
rorl
mov
icebp
scas
adc
pop
jne
call
mov
mov
shrb
pop
enter
je
xchg
xor
push
iret
fsubr
es
fcoms
lea
lret
sub
adc
js
sub
dec
inc
lar
push
xor
sub
les
add
icebp
sbb
sbb
lods
dec
loopne
in
addr16
lahf
mov
ret
mov
divb
jne
inc
pop
imul
sub
in
push
shlb
ficomps
adc
jne
mov
mov
fwait
xor
popa
xor
movl
bndldx
flds
push
aas
imul
bound
mov
jnp
es
jnp
lods
jns
cmp
xchg
mov
movsl
ja
shlb
jecxz
insb
outsb
ret
xlat
push
pop
ds
cmpl
mov
out
inc
data16
jp
adc
movsb
shll
add
add
stos
and
les
divl
and
enter
cmp
loope
mov
cmp
repnz
mov
mov
rol
mov
pop
or
sbb
imul
and
icebp
mov
test
mov
fsubr
out
push
sbb
into
enter
mov
in
test
sbb
pop
stc
push
push
jmp
test
and
xor
inc
mov
mov
pop
xchg
sbb
inc
insb
xlat
icebp
ss
sbb
adc
cmpb
cmp
rorl
cmpb
mov
push
dec
jnp
aad
and
cmp
jmp
jbe
mov
fxch
and
sti
xor
enter
outsl
mov
jecxz
and
cmp
iret
add
jge
mov
testb
les
or
jnp
and
push
jno
xor
clc
clc
jg
mov
dec
sub
mov
sub
xlat
repz
ds
mov
repz
push
cmpsb
sub
test
or
push
dec
add
jne
jnp
mov
jmp
ficoml
pop
fwait
xlat
pusha
andl
push
pop
pop
mov
and
int3
cwtl
push
mov
and
pop
jb
push
aas
sub
and
mov
mov
xlat
fmull
pop
adc
xchg
les
lods
mov
mov
mov
mov
or
shl
into
or
cli
mov
xchg
stos
inc
cmc
xchg
enter
test
shlb
call
mov
mov
push
fsub
mov
sub
jno
pop
bound
dec
mov
adc
int
xchg
std
mov
outsb
fsubs
cld
push
mov
daa
cld
sub
sahf
push
inc
lret
jns
imul
mov
xchg
sub
repz
inc
push
aaa
push
sbb
pop
add
jns
mov
ljmp
fmull
arpl
bound
outsl
push
push
adc
lods
pop
in
pop
dec
test
fnstsw
mov
mov
cmp
ja
in
insl
mov
mov
mov
insb
movsb
xchg
stos
add
jle
inc
add
ret
lea
ret
or
cmovne
inc
cmp
das
popf
xchg
pop
loope
and
nop
pop
stos
xor
inc
ss
movsb
mov
inc
and
fsts
mov
and
bound
or
mov
mov
sbb
popf
and
jle
clc
jno
xchg
fnstcw
mov
in
out
cltd
mov
add
xchg
xor
mov
cmp
hlt
or
in
lods
ds
sahf
cmp
jb
es
mov
mov
add
ficoml
aaa
jl
xor
inc
call
testl
int
mov
sbb
cmp
shll
and
cltd
jg
cmp
cmpsl
incb
sub
xchg
out
adc
mov
adc
add
dec
mov
jae
jge
sbb
lds
adcl
les
adc
jmp
push
mov
add
fmuls
mov
add
lret
filds
cmp
fnop
icebp
cmp
sbb
call
shl
jb
jnp
js
test
hlt
loopne
jp
xor
push
mov
loop
jno
lret
ds
lds
cmp
or
xchg
ds
pop
jbe
mov
ja
js
cmp
sbb
cwtl
xchg
jmp
shll
into
in
pop
sbb
sarl
mov
pop
hlt
jmp
cmp
adc
mov
scas
jle
add
lods
adc
test
pop
les
jnp
sub
pop
push
lods
int3
sub
adc
mov
lods
in
ljmp
les
mov
fs
fsts
mov
push
push
shrl
loope
in
int3
mov
mov
jb
out
pop
mov
mov
popf
jl
push
mov
into
cmp
enter
and
sub
mov
cltd
or
mov
stos
or
ret
adc
push
dec
dec
cmc
fistps
int3
ljmp
and
aam
xor
loop
imul
scas
mov
lahf
test
rol
fucom
js
jne
out
and
aad
pop
sarb
lds
popa
into
leave
jns
sbb
jge
mov
outsb
aam
sub
or
adc
mov
adc
xchg
lret
mov
mov
jp
dec
mov
cmp
inc
inc
call
mov
jno
into
adc
pop
repnz
aad
dec
inc
or
adc
add
add
push
push
fildl
ret
cwtl
inc
adc
cmpsl
addr16
pop
xor
xchg
push
jmp
subb
testb
lret
xor
cmc
push
outsl
adc
fwait
testb
popa
or
add
add
pop
lret
jnp
jns
outsl
inc
lret
mov
sub
xor
and
jp
cmpl
test
mov
leave
jbe
rorl
sub
test
add
mov
popf
cwtl
xchg
mov
adc
cwtl
xchg
push
sbb
popa
add
js
sub
pop
mov
enter
jp
in
jae
mov
stos
or
call
mov
shll
mov
jl
or
in
pop
pop
roll
mov
out
mov
mov
jo
fidivrl
sbb
pop
adc
cltd
cmpsl
out
data16
out
pop
and
cmp
popa
xor
push
push
icebp
shlb
mov
sbb
xchg
push
add
in
std
test
aad
stc
fiaddl
shlb
cld
xor
xchg
dec
mov
int
add
movsl
cli
mov
or
scas
mov
mov
sti
cmp
push
cltd
inc
test
cmp
mov
pop
add
mov
xchg
xor
pop
rdmsr
adc
fistps
movsb
movsl
push
shll
jle
nop
xchg
mov
dec
roll
add
dec
mov
xor
mov
push
adc
shl
faddp
out
adc
inc
test
aad
mov
imul
xchg
enter
mov
test
push
inc
sbb
xor
jno
stc
lret
add
add
lock
das
aad
js
lock
sbb
jp
popa
icebp
sbb
pop
xor
shll
pop
mov
dec
mov
and
push
ret
inc
push
test
adc
div
adc
xor
test
sahf
insl
mov
decl
sbb
jle
push
inc
push
jne
dec
sbb
push
jbe
out
jnp
out
adc
call
push
dec
push
inc
imul
into
jl
cmp
or
cwtl
dec
stos
enter
sbb
mov
ds
loop
xor
adc
cli
mov
cmp
cli
testb
inc
cmpsl
inc
or
adc
out
push
or
sbb
push
mov
loopne
outsb
sub
addr16
les
or
fwait
sbb
cmp
int
mov
out
addr16
addr16
adc
nop
cmp
mov
inc
sbb
je
aad
fnstcw
daa
mov
leave
cmpsb
fwait
or
iret
aaa
mov
fcoml
jl
dec
xlat
jmp
dec
sub
fdivs
daa
lahf
or
adc
and
fisttpl
cmp
xor
adc
mov
mov
inc
push
fiadds
mov
idivb
cmp
cmp
and
imul
aam
sub
ljmp
cmp
jbe
or
cld
ja
mov
cmpsl
push
mov
in
sbb
push
aaa
outsl
xor
pushf
adcl
mov
cmpsl
pop
mov
out
sub
mov
out
adc
bound
fldl
inc
xlat
jge
jge
mov
mov
mov
sub
mov
enter
imul
and
insb
in
push
sub
xchg
xchg
lcall
aam
pop
rcrb
pop
xchg
fs
int3
jo
xchg
imul
jno
fimull
sub
push
mov
ret
cltd
push
jae
dec
mov
pushf
stc
push
ljmp
jecxz
mov
daa
and
pop
xchg
enter
es
jb
adc
push
pop
add
out
cld
push
notl
scas
in
fwait
inc
xchg
lods
xor
lods
mov
loope
insl
out
cmp
aad
xchg
push
mov
jg
outsl
xchg
daa
rorl
lea
xchg
and
add
mov
sub
fsubl
call
mov
je
aaa
mov
out
outsb
push
sar
adcb
ss
or
mov
mov
scas
hlt
cmp
out
cmp
pop
push
mov
pop
outsb
and
push
sbb
fcmovbe
sub
dec
push
dec
lods
pop
jbe
imul
fcom
mov
dec
ret
mov
xchg
mov
inc
outsl
negl
or
pushf
dec
mov
xchg
fs
and
push
jnp
mov
lea
jbe
adc
sub
addr16
bound
jp
xchg
sub
lcall
adc
cmp
push
or
inc
enter
andb
lea
enter
mov
dec
test
lahf
and
add
jmp
sub
cmp
inc
repnz
cmp
push
mov
mov
dec
gs
negl
dec
enter
xchg
xlat
sti
fcoms
jb
in
push
out
in
dec
mov
inc
ret
jle
lds
mov
sub
inc
popf
shl
pop
inc
bound
shlb
cwtl
pop
mov
out
stos
mov
or
mov
inc
pop
in
std
mov
add
rcr
dec
insl
sub
sbb
fcomps
mov
hlt
mov
fwait
push
or
cmp
repnz
inc
cmp
aas
jbe
sahf
inc
dec
repz
fiaddl
adc
xchg
jg
add
pop
mov
xchg
inc
mov
cmc
out
jg
push
mov
xchg
jbe
cltd
sbb
lods
push
sbb
push
xor
das
inc
adc
lods
xchg
jnp
je
and
mov
into
mov
lods
stos
hlt
ret
push
pop
sbb
test
mov
movsl
and
popa
in
inc
sbb
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fstpl
mov
imul
pop
addl
mov
imul
arpl
sub
shrb
cld
lcall
inc
inc
mov
outsb
dec
cmpsl
cmc
mov
mov
and
nop
into
inc
sar
sbb
xor
add
in
in
push
lret
pop
jmp
push
lcall
inc
mov
repz
jmp
out
arpl
dec
inc
pop
pop
mov
imull
dec
stos
pop
mov
aam
lock
arpl
and
stos
cld
adc
adc
inc
xor
xlat
fdivr
lods
sti
cmp
jb
or
adc
in
loopne
lret
and
dec
mov
arpl
idivl
lcall
mov
mov
xchg
xlat
push
mov
outsb
and
rcll
repnz
je
cld
iret
aaa
or
xor
add
sub
addr16
mov
dec
adc
inc
and
pop
jno
dec
xchg
adc
xchg
cmc
js
dec
mov
ret
push
adc
aam
mov
test
sarl
push
or
cli
call
aam
cmpsl
pop
mov
inc
inc
pop
xchg
fbstp
into
fwait
add
xor
sbb
aad
leave
pop
push
or
inc
and
xor
daa
into
sub
lahf
push
add
push
mov
inc
aas
jp
jb
xorb
into
cmp
test
stc
imul
out
xchg
push
rcl
stos
add
lods
cmpsb
test
xchg
aad
psrad
pop
int3
cs
movsb
sbb
lods
pusha
mov
add
or
jns
rorl
adc
lods
xor
pop
movsl
leave
test
shll
and
xchg
in
dec
ljmp
xchg
xchg
aam
pop
leave
loop
sub
mov
adc
and
push
or
icebp
mov
test
push
into
xchg
pop
or
mov
mov
adc
pop
pop
cmp
test
cld
and
popa
push
repz
jle
mov
sbb
test
dec
aad
inc
arpl
push
lcall
inc
inc
mov
shrl
nop
inc
outsl
xchg
jne
iret
sbb
jne
adc
mov
and
dec
fldenv
dec
test
loopne
andl
xchg
dec
popa
adc
mov
sbb
std
in
jmp
sti
push
push
mov
enter
adc
aaa
pop
xor
xchg
push
test
scas
sbb
rcl
and
mov
fs
or
xor
pop
mov
push
call
lret
in
fnstenv
rcl
pop
cwtl
mov
mov
push
rorl
aam
ret
pop
imul
sub
sub
dec
sub
xor
rorb
jge
dec
jo
mov
xchg
es
xchg
dec
das
lret
push
or
cltd
add
rcrb
dec
mov
icebp
daa
or
sbb
ljmp
fildl
lret
cwtl
sbb
cmp
mov
add
sbb
pusha
call
sbb
fucomip
mov
fs
xchg
sbb
or
ss
pop
mov
cmp
imul
pop
push
ljmp
mov
mov
jl
push
movsb
and
pop
push
jno
xchg
repnz
cli
arpl
leave
imul
cwtl
push
inc
imul
in
push
push
dec
leave
sahf
std
cmp
inc
mov
popa
sbb
add
cs
xchg
popf
stc
outsl
in
or
sbb
jno
ret
cmp
mov
add
sti
push
xchg
scas
aam
testl
mov
mov
int
mov
sub
pushf
inc
loope
fimull
pop
in
mov
outsl
or
or
imul
pop
call
push
xor
pop
call
cmpsb
mov
in
and
xchg
cmp
fcoml
sub
gs
dec
mov
in
cmp
sbb
xorb
dec
dec
xor
mov
inc
aas
add
enter
icebp
xchg
mov
jnp
js
xor
mov
fsubs
jge
aam
xlat
lock
push
jge
incb
or
mov
xor
scas
mov
addl
push
mov
or
and
or
lds
dec
lods
adc
imul
mov
dec
push
imul
mov
sub
rolb
repnz
dec
xchg
insl
imul
and
divb
mov
pop
cmp
add
sbb
repz
pusha
inc
mov
mov
scas
icebp
or
repz
pop
sbb
lds
in
clc
pop
daa
sahf
outsl
adc
cmp
sub
cs
cmp
outsb
jo
xchg
xor
insb
dec
inc
popa
lds
add
clc
cltd
mov
inc
lahf
or
jne
fstpl
xchg
sub
loope
inc
add
jl
shlb
sub
mov
pop
adc
movsb
fstps
std
loope
js
sahf
bound
and
rolb
test
insb
bound
pushf
lods
shll
and
jge
adc
aaa
fldcw
jne
cltd
add
movsb
pop
out
das
pusha
popa
ja
ljmp
loop
out
jecxz
pop
enter
xchg
xchg
or
cltd
lods
ja
cli
mov
ljmp
jae
cld
setle
xor
loopne
out
loope
cmp
mov
jo
jecxz
mov
fists
and
ja
or
addr16
mov
jbe
lret
mov
cltd
data16
mov
in
lret
loopne
lcall
ficoms
cmc
sbb
mov
pushf
pop
in
sub
dec
repz
add
adc
mov
shll
lea
movsb
shll
push
or
add
pop
mov
pusha
mov
in
repnz
sti
cli
mov
loope
sbb
int
repnz
sub
pop
lods
cmpsl
sbb
ja
test
cmp
pop
lret
out
into
add
lock
mov
sub
add
mov
pop
paddw
dec
xorl
mov
sahf
int3
and
jbe
insl
test
pusha
shlb
sbb
inc
fidivl
mov
sbb
fs
jg
aas
lahf
scas
mov
daa
test
nop
or
icebp
sub
ja
in
push
xor
inc
les
inc
mov
iret
or
dec
scas
add
in
pop
mov
ljmp
mov
jmp
or
cld
dec
cltd
xchg
sahf
test
cmp
xchg
into
stos
pop
inc
fcoml
enter
cld
notb
mov
andb
push
xchg
pop
xor
cwtl
addl
pop
add
jl
ret
in
stos
add
adc
cmp
lret
popa
inc
dec
cld
push
les
arpl
mov
xor
mov
pop
jmp
std
or
add
rcrl
cld
rcll
inc
insb
jae
xorl
adc
ja
cli
sbb
call
mov
dec
mov
xor
inc
loope
pop
movntps
pop
lcall
cli
in
sbb
int3
ds
mov
out
push
jb
xchg
adc
inc
arpl
lcall
fldcw
dec
popf
jo
pop
cmpsb
sbb
gs
subb
in
xchg
and
ljmp
pop
mov
xor
pop
jnp
and
iret
adc
xchg
les
pop
jnp
mov
pop
pop
mov
jns
xor
xor
std
cs
xchg
sub
xchg
arpl
pop
and
nop
sbb
cmp
ja
ljmp
jne
push
pmaddwd
push
cmp
cmp
and
jle
xchg
mov
aad
or
in
lods
cs
iret
pop
scas
mov
cmpsl
cmp
xchg
int
and
lock
std
fwait
sub
das
lds
loop
pop
divb
push
jns
dec
adc
jmp
mov
jecxz
add
adc
mov
mov
in
cmp
shrb
cmp
cs
rcrl
lcall
mov
push
dec
hlt
jb
mov
loope
mov
lods
xlat
ja
inc
cwtl
sbb
and
xor
scas
aam
or
adc
adc
filds
stos
jge
add
or
popa
xchg
ja
fiaddl
rsqrtps
sti
add
orl
shlb
sbb
shrl
pop
sbb
imul
push
js
ljmp
or
sbb
popa
jecxz
sub
inc
mov
mov
mov
dec
lock
mov
jp
dec
cmp
xor
add
cvtpi2ps
cmp
andl
pop
and
ja
rclb
mov
push
xor
pop
dec
testb
jl
insl
sub
or
ss
shrb
pop
xchg
jnp
movsb
adc
cs
inc
push
and
cmpsb
imul
outsl
xchg
popa
icebp
loopne
jae
jns
add
inc
cmp
popf
xchg
imul
xchg
mov
sub
jbe
mov
mov
sub
in
out
inc
push
dec
pushf
cltd
nop
inc
out
inc
mov
nop
pop
aad
popa
or
imul
test
push
jge
pop
mov
sbb
shlb
aam
sbb
mov
and
cmpsl
sub
pusha
sbb
lds
sub
xor
sbb
xor
inc
dec
loop
sahf
addr16
xlat
dec
aam
push
out
add
rolb
cld
and
adc
adc
mov
stos
push
iret
jae
sbb
gs
and
dec
dec
lahf
cmpsl
add
or
inc
mov
push
jmp
mov
dec
cmp
push
int3
jecxz
mov
dec
je
in
icebp
push
xchg
fcoml
jo
rcll
xor
jle
int
fcoml
aaa
jne
xchg
ja
faddp
in
stos
pop
into
add
inc
dec
inc
push
mov
jns
arpl
push
jle
mov
fs
adc
adc
or
lahf
push
movsl
mov
fs
call
shrb
push
ret
xor
mov
je
and
cwtl
jmp
arpl
mov
adc
and
leave
pushf
mov
sbb
jl
mov
xchg
sub
or
aaa
bnd
rol
adc
mov
jnp
xchg
out
pusha
sub
mov
sub
pop
les
xchg
shll
mov
jge
daa
scas
inc
call
pop
push
sub
pop
fstpt
push
testl
mov
pop
jmp
xor
mov
dec
outsb
inc
mov
jno
ds
lods
lret
mov
das
faddl
pop
mov
ret
mov
push
sub
xchg
pusha
or
cmp
lret
add
std
dec
xor
jae
das
mov
push
xchg
cli
fidivrl
sbb
je
data16
push
daa
inc
sbb
insb
xor
das
repz
cli
mov
xor
xor
pusha
adc
adc
or
pop
cmp
mov
push
jns
cwtl
xchg
mov
mov
push
lahf
ret
sub
cmc
loope
rorb
jmp
rcrb
and
xchg
fcomi
movsb
in
xchg
cli
sub
cmp
fwait
mov
cli
mov
sub
mov
cmpsl
sub
cli
sar
decb
add
cmp
mov
mov
add
ficoms
dec
popa
filds
cltd
fdivrl
jbe
fiadds
adc
and
push
pop
mov
mov
ja
in
jge
jl
push
cmc
or
pop
icebp
outsl
push
pop
add
pop
cli
mov
sahf
sbb
jns
xor
or
dec
outsl
das
jl
or
push
es
stos
mov
cwtl
imul
hlt
jnp
fdivr
cmpb
cmp
test
fisubl
sub
cld
mov
mov
fisubs
xor
cwtl
call
loopne
ret
mov
sahf
stos
test
jns
or
lret
test
add
sti
pop
mov
fidivl
mov
aam
orb
cld
in
stos
sbb
imul
movsb
aas
push
mov
push
cmp
jge
ret
loopne
sub
clc
out
shrb
clc
repz
add
imul
inc
sbb
pusha
push
push
inc
fildl
mov
in
js
inc
sbb
xor
pop
add
pop
fwait
push
mov
push
stos
mov
nopl
and
mov
pop
scas
fs
sub
cli
in
jo
nop
testb
lahf
rcll
xor
sub
add
mov
dec
cmp
inc
int3
std
dec
hlt
sub
jmp
lods
idiv
test
popf
iret
hlt
pop
jns
mov
pop
lret
push
sahf
shrl
lods
xchg
inc
rorb
popf
mov
lods
cs
adc
mov
flds
jge
in
sub
scas
jb
mov
aad
xchg
jb
sbb
adc
stos
dec
call
lcall
push
nop
les
pop
xchg
lods
in
iret
cmpb
push
xor
and
push
outsb
mov
jbe
push
cmp
push
ret
scas
cmpsb
push
push
int
out
test
mov
int3
mov
mov
jecxz
mov
pop
push
call
cmp
xchg
loop
mov
sub
and
push
imul
dec
xor
cmpsl
add
push
out
aaa
mov
xchg
ljmp
test
or
xor
push
lock
sahf
inc
mov
lret
pop
mov
pop
cmpsb
popa
xor
fistps
mov
insb
gs
sbb
push
fwait
stos
xchg
int3
jle
mov
sub
xchg
js
push
loopne
sub
lds
loop
sqrtps
xchg
aaa
pop
inc
inc
xchg
test
or
xchg
pusha
shll
or
bnd
sti
bound
out
mov
sub
mov
rolb
aaa
nop
mov
into
out
mov
push
lahf
push
mov
and
mov
push
aam
adcl
das
jno
push
loop
push
cmpsl
imul
pop
cmp
call
sbb
cmp
neg
faddl
popa
testl
mov
pop
push
dec
jae
pusha
jbe
mov
out
sub
es
mov
arpl
lcall
adc
pop
sahf
call
mov
sbb
testl
add
dec
lcall
dec
into
push
sti
je
fsubl
shll
xor
xor
fiaddl
sbb
sbb
ja
inc
and
cli
dec
inc
jle
je
mov
push
mov
js
scas
inc
das
jbe
sub
ror
cmpb
outsb
jecxz
adc
mov
mov
push
rorb
xchg
adc
pandn
jle
fcoml
xchg
popa
jnp
cmpsb
sub
xor
js
inc
sub
push
adc
mov
xchg
mov
jne
cwtl
mov
insl
loope
imul
lods
sub
xchg
iret
scas
sub
cmp
js
lret
xor
xor
pop
dec
mov
jne
stc
jmp
ret
cmpsb
dec
es
sbb
ja
add
gs
inc
inc
xchg
push
ss
xor
mov
leave
push
xor
pop
jo
lretw
test
ljmp
xor
imul
jmp
int3
jl
pop
adc
sti
fldcw
xor
jne
xchg
dec
and
jbe
stc
pop
xchg
lds
push
and
ss
mov
mov
xor
jmp
pop
sbb
rclb
int
call
lcall
fdivl
test
pop
xor
test
pop
mov
pop
sub
cs
lods
sub
pop
and
lahf
cld
sbb
rcl
cwtl
add
pop
dec
pop
push
xor
sbb
test
sub
aas
mov
mov
inc
lock
insl
loopne
mov
xchg
cmp
cltd
and
add
rclb
dec
mov
mov
sbb
push
mov
rcpps
mov
int3
jge
lcall
dec
fstps
arpl
push
movsb
ret
pop
imul
lds
add
pop
jge
add
mov
pop
ds
insl
lea
xor
mov
pop
mov
pop
xor
test
icebp
xor
js
push
add
or
or
xor
mov
inc
into
lret
mov
cmc
imul
loop
addb
popf
xor
jge
int3
frstor
hlt
xchg
cld
int
mov
movsb
mov
mov
push
lret
mov
out
addr16
jbe
or
adc
jmp
shlb
insl
pusha
dec
sub
mov
mov
inc
xor
push
hlt
lea
notb
aas
les
or
mov
or
jmp
pop
jns
adc
push
inc
ja
cmp
pop
sbb
cmp
sbb
mov
movsb
xchg
lcall
adc
sub
jmp
call
popf
and
mov
xchg
lret
sub
sarb
mov
es
lea
xchg
adc
imul
pushf
fisttps
pop
insl
das
lret
push
sub
divl
sub
inc
aaa
sub
repnz
sbbl
aaa
loop
or
mov
ja
pop
je
xchg
jae
shl
das
sbb
call
adc
arpl
mull
jp
jecxz
mov
imul
cmc
out
xor
mov
jns
and
mov
mov
cld
into
mov
stos
inc
cld
stos
popa
stos
inc
ret
jmp
outsl
pusha
popa
and
inc
shr
je
inc
insl
sbb
mov
aam
enter
sub
pop
andl
sbb
shll
jp
adc
pop
ss
mov
enter
sbb
xor
xor
bound
std
cmpsb
out
ss
cmpsb
adc
push
push
sbbl
daa
cmp
and
and
jp
pop
xchg
addr16
mov
pusha
add
push
shl
dec
dec
mov
push
popf
repnz
cwtl
xorl
mov
fsubl
pop
add
and
push
cmp
pop
add
push
xchg
xchg
xor
mov
nop
pop
int
adcb
fcoml
push
push
rcr
jb
std
pop
mov
hlt
inc
sub
dec
xchg
fadd
hlt
inc
test
jge
or
test
push
jne
aas
xor
movsl
mov
mov
xchg
or
rcrb
in
adc
inc
mov
lea
add
sub
cmp
repnz
enter
pop
adc
out
jl
stc
xor
sti
pop
push
int3
inc
cltd
xlat
dec
push
xorb
mov
adc
inc
sarl
sti
mov
pop
mov
insb
mov
or
add
cmpl
xchg
sub
mov
imul
addr16
ja
sub
sub
ss
aaa
push
xor
mov
leave
mov
ret
xor
repz
sbb
push
or
pop
leave
lahf
add
sahf
les
or
adc
push
loopne
jge
cltd
cmc
adc
shrb
pop
jae
cld
hlt
lock
leave
pop
loope
aaa
insb
stc
mov
fistps
adc
xchg
mov
leave
fs
orl
or
aad
jmp
push
xor
mov
and
inc
je
xor
test
loopne
push
scas
mov
adc
xchg
mov
pop
cmc
stos
lds
mov
movb
and
xchg
push
out
aad
mov
inc
mov
push
inc
fistps
imul
lea
inc
movsl
sbb
sub
and
repz
out
lret
sub
push
pop
shl
push
outsb
mov
add
dec
dec
loop
jmp
fsubl
cwtl
rcrb
cmpsb
xlat
or
mov
shlb
leave
mov
push
and
ret
scas
pop
push
mov
leave
iret
lret
mov
les
inc
lret
jecxz
into
notl
or
xchg
lods
jl
out
aad
insb
clc
les
iret
push
out
fwait
mov
std
js
mov
outsl
jb
dec
xor
and
das
ds
jo
dec
xor
and
out
scas
mov
jb
test
sahf
mov
test
imul
xchg
xchg
mov
out
leave
fistps
bound
inc
xor
sbb
call
mov
sbb
push
leave
js
aaa
fsubl
adc
push
roll
iret
dec
sub
test
or
mov
stos
inc
jle
xchg
or
pop
out
cmp
pop
ja
xchg
sub
pop
ficoms
sahf
push
imul
sub
repz
dec
sub
inc
cmp
in
inc
fnstsw
xlat
outsb
mov
add
xchg
insl
push
stc
cli
inc
dec
adc
and
out
dec
sub
jo
and
inc
or
dec
lcall
aas
xchg
push
jnp
add
xchg
and
jg
mov
shlb
jb
sbb
inc
push
mov
arpl
mov
popa
ficoms
data16
ss
mov
sti
and
cmpsl
in
cmp
test
fmuls
scas
push
cmp
pop
out
jmp
and
mov
adcl
mov
test
sbb
pop
ja
inc
mov
dec
sarl
lret
jle
mov
idivl
dec
mov
push
mov
or
aas
jle
add
jae
aad
sti
xor
cmp
mov
push
inc
inc
lods
and
cmpsl
sahf
incb
arpl
xchg
mov
xchg
addr16
cld
outsl
sahf
fsubl
adc
orl
repz
mov
sbb
push
mov
aas
out
xchg
aad
inc
adc
mov
popf
pushf
jg
sbb
popf
aas
adc
mov
fwait
loopne
jmp
std
leave
iret
movsl
and
push
cmp
int
cmp
push
insb
sti
test
icebp
sbb
dec
aam
add
push
out
outsb
arpl
adc
mov
lahf
lods
mov
ljmp
aaa
push
test
enter
fcomi
push
xchg
jmp
in
xchg
mov
imul
testl
int
shlb
or
dec
ret
mov
sbb
dec
adc
mov
xchg
mov
ja
fwait
imulb
fidivs
push
lea
or
and
push
pop
gs
xor
lea
data16
or
divb
loopne
pop
cmp
imul
ds
xchg
jno
push
decl
push
hlt
testb
insl
adc
test
mov
into
pop
mov
sahf
mov
add
push
add
pcmpgtd
lcall
pop
mov
cmp
mov
mov
out
mov
adc
outsl
mov
xchg
push
and
sbb
pop
or
mov
add
cltd
sub
clc
rcl
in
cmpsb
daa
int3
inc
mov
out
jae
jno
and
fcoml
and
cmp
dec
fcomps
xchg
bound
jns
repz
mov
mov
ljmp
lds
out
xor
data16
test
jns
das
jne
or
push
push
sub
mov
cmp
insb
xchg
mov
mov
adc
es
insb
repz
inc
movsb
scas
and
inc
cmp
in
xor
xorl
ret
sti
sbb
mov
cmp
sbb
pop
jnp
aaa
cwtl
call
rorb
cmpl
xchg
dec
mov
push
xchg
pop
mov
aaa
mov
repz
mov
daa
cltd
xchg
inc
inc
inc
inc
popf
fdiv
pusha
rorl
dec
mov
add
aad
and
adc
lcall
sub
pop
scas
and
popa
pop
adc
sbb
mov
sbb
dec
adc
movsb
mov
pop
rol
push
popa
mov
mov
and
inc
jmp
pop
bound
xor
mov
pop
cmc
arpl
ret
jns
and
mov
xor
in
jmp
dec
mov
or
out
out
add
mov
jp
pop
xlat
mov
add
in
pop
or
push
jg
add
jae
leave
pop
or
aam
xchg
aad
lock
xor
sub
dec
les
sahf
adc
add
icebp
cmp
xchg
fsubrp
sub
ljmp
in
cld
ss
pop
push
jnp
inc
mov
in
sahf
in
fld
inc
or
lock
fs
clc
insb
inc
mov
add
dec
jnp
cmp
iret
jp
jg
push
fistpll
push
int
or
stc
into
xchg
mov
pop
mov
icebp
jle
jg
jb
mov
mov
adc
sub
sub
mov
push
jmp
inc
xor
popa
inc
das
or
mov
mov
adc
fs
das
jl
push
adc
sbb
jbe
inc
cmp
cmp
leavew
test
fiaddl
mov
dec
ret
mov
xor
push
ds
sbb
and
cmpsl
insb
lret
cli
and
add
daa
fisttpll
in
mov
xchg
mov
sub
jge
adc
push
pop
xchg
lret
lcall
xchg
shl
insb
fnsave
inc
lahf
jo
pop
movsb
xchg
sahf
ret
ret
mov
sbb
pop
fimuls
aas
out
adc
out
dec
xchg
mov
pop
out
jecxz
cli
stc
pop
insl
cmp
push
cmp
sbb
test
push
idivb
adc
stos
cmpsb
aad
test
lds
mov
cmp
out
xchg
aad
out
shrb
mov
sahf
add
dec
inc
push
push
idivb
adc
testl
call
pop
in
push
faddl
clc
leave
jle
xor
mov
lea
add
test
loopne
lea
aad
mov
pop
jo
push
dec
ljmp
or
sub
mov
pop
pop
mov
xchg
add
mov
fnsave
in
pop
mov
push
jmp
mov
sub
pop
dec
mov
ret
push
outsl
push
fsubp
je
pop
das
mov
xor
lds
mov
in
inc
mov
insl
outsb
cmp
ljmp
xor
mov
inc
jo
popa
xchg
aas
and
inc
adc
mov
adc
mov
notl
pop
mov
inc
out
sub
sbb
xor
fldt
icebp
fnsave
jno
cmp
inc
push
lods
lret
fldcw
imul
mov
sbb
std
jae
inc
pop
sbb
inc
mov
push
lods
xor
dec
mov
jnp
fldcw
fiadds
mov
lahf
test
jge
das
dec
lahf
mov
sub
xchg
mov
fdivrl
push
lock
or
rol
popa
testl
ss
imul
aad
cli
btr
and
mov
ljmp
stc
pop
jae
lea
xchg
lods
xor
pop
cld
data16
mov
pop
test
pmuludq
mov
sub
xchg
ret
ja
shll
jle
fidivrs
sahf
adc
loope,pt
call
std
imul
sub
jne
jbe
sbb
cmpsb
ret
or
mov
inc
xchg
ja
lds
mov
mov
test
mov
xchg
loop
xor
test
in
adc
in
mov
sbb
insb
adc
pop
cmp
add
push
fcompl
scas
adc
or
imul
add
xchg
cmp
int
pop
cmp
dec
jge
aas
cmc
jecxz
jg
popa
das
cs
nop
lahf
sbb
adc
es
gs
stc
std
stos
dec
sti
jne
mov
or
jae
jb
mov
pop
sbb
mulb
je
out
push
mov
repz
insb
push
mov
xor
push
add
inc
sub
outsb
insb
add
inc
pop
jle
cmp
cmp
jge
test
clc
cmp
sahf
lea
popl
fistpl
lret
mov
jb
cmp
icebp
leave
or
leave
dec
adc
mov
sbb
pop
lcall
push
lock
sbb
or
rcr
cli
mov
scas
xchg
sub
pop
mov
cmp
sub
inc
testb
int
mov
fwait
out
add
out
mov
xlat
and
cmp
sbb
mov
out
int3
dec
inc
or
es
sub
mov
mov
and
cwtl
dec
push
icebp
xchg
cli
pop
imul
scas
cmp
pop
inc
cmc
xchg
std
mov
nop
lret
dec
mov
ficoms
sub
insl
xchg
repz
add
daa
roll
mov
push
xor
bnd
add
inc
cmpsb
rcrl
cmp
mov
push
mov
jne
push
ss
stos
in
inc
mov
xor
mov
negb
push
xchg
in
xor
pop
jp
ret
pop
add
fmuls
xor
inc
mov
negb
push
push
loope
mov
outsl
xor
in
fwait
pop
test
inc
loopew
lds
mov
inc
mov
mov
cmp
sahf
jge
gs
mov
add
loop
sbb
and
loop
fstl
data16
mov
and
fistps
or
jb
daa
push
mov
lret
xor
movsl
inc
mov
or
xor
dec
ja
faddl
cmp
mov
or
dec
and
xchg
scas
frstor
dec
sbb
loope
dec
jmp
test
inc
jae
cmp
or
mov
insb
jmp
imulb
rolb
sub
lcall
push
call
shrb
ds
add
dec
push
dec
loope
loope
out
and
xor
or
in
fisttpll
aaa
ljmp
int3
shlb
lods
push
mov
fldenv
push
pop
mov
mov
rolb
mov
mov
adc
jns
xlat
xor
jae
fs
cmp
sbb
jge
fdivrl
sbb
ss
or
popa
push
jecxz
cs
push
sub
cld
test
xor
in
insl
mov
cltd
mov
flds
mov
cmc
fs
mov
mov
out
mov
add
in
loope
pusha
mov
lods
pop
adc
xchg
mov
xorb
lods
out
add
sar
ss
je
cmpsl
cmp
and
rcrl
addr16
cmp
jne
fldcw
pop
dec
lahf
inc
pop
mov
cwtl
pushf
dec
dec
cmpsb
idiv
in
push
ret
cmpsl
out
xchg
cli
loop
in
jmp
push
sbb
mov
inc
data16
mov
clc
test
mov
sbb
ss
iret
xorl
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
xchg
jae
sub
cmp
cmpl
lods
pop
mov
sbb
in
mov
in
clc
in
mov
xchg
ja
sbb
adc
sub
rcrl
cmp
mov
mov
dec
fldl
ds
cmp
cmpsb
xor
sub
jnp
cli
popa
jmp
into
inc
test
iret
sar
push
push
pop
add
sbb
dec
lock
xor
lcall
dec
xchg
or
aam
lret
mov
inc
in
pop
jmp
push
repnz
jo
cmpsb
imul
rcrb
xchg
lcall
mov
inc
sbb
addl
movsl
mov
lahf
movsb
rol
and
mov
ss
and
test
scas
add
movsl
hlt
push
addr16
xlat
shr
pusha
cmp
jno
and
jns
mov
mov
push
shlb
pop
mov
data16
mov
fnstsw
xor
mov
or
test
test
dec
and
ja
mov
or
and
cmpsl
push
jecxz
aas
fmull
push
inc
mov
or
fistpl
shlb
adc
push
lret
std
cmpsl
scas
into
pushl
mov
inc
cmp
pop
push
incl
das
mov
cmpb
sub
fsubs
test
mov
and
and
pop
cwtl
sub
or
sub
push
xchg
dec
inc
out
ss
mov
sub
and
icebp
addl
xchg
xchg
inc
scas
xchg
dec
scas
in
jno
push
mov
push
push
mov
mov
pop
pop
stos
sbb
fldt
jp
mov
sbb
adc
es
push
sarb
inc
adc
or
cmp
fimull
shll
rcrb
imul
jmp
dec
adc
jle
dec
mov
mov
das
add
add
and
cmc
lock
jle
pop
mov
scas
subl
and
sbb
clc
sbb
add
inc
xchg
inc
insb
cmp
add
dec
into
push
cmp
fists
push
inc
idivb
jp
push
scas
mov
movsb
push
sbb
inc
mulb
sbb
mov
mov
scas
fimull
rol
lds
jge
fldlg2
ljmp
push
mov
xchg
inc
addr16
mov
dec
pop
pop
and
inc
cmp
xor
jo
push
push
cmpsl
test
rorl
or
hlt
cmp
sbb
sbb
jge
leave
inc
cld
out
add
int3
loope
or
in
in
repz
lock
mov
out
out
hlt
add
sahf
je
mov
inc
shll
mov
repz
jg
and
fs
mov
mov
push
in
ror
xchg
ret
mov
lcall
sbb
rcr
push
and
das
mov
test
jmp
sahf
pop
shrl
adc
and
dec
mov
mov
inc
mov
enter
sar
sahf
divl
pop
outsl
push
xchg
cmp
pusha
lcall
insb
fisttpll
shlb
daa
out
and
mov
popa
ss
bound
adc
stc
imul
sub
push
mov
mov
dec
outsl
daa
jge
fldt
sbb
adc
hlt
arpl
mov
ret
pop
jg
test
push
sub
adc
cmpb
in
or
enter
and
imul
lahf
mov
xor
fiaddl
xorl
inc
xchg
popf
aaa
dec
fmuls
ja
mov
mov
out
or
push
adc
push
push
in
xlat
pop
fpatan
and
jg
ret
inc
xchg
inc
add
pusha
aaa
pusha
rclb
mov
lods
cltd
clc
cwtl
mov
movsl
xchg
shlb
loope
pusha
pusha
jo
cmp
sub
std
aad
sub
jbe
lret
xchg
push
mov
jmp
lcall
scas
aas
and
fs
mov
lcall
lcall
test
inc
mov
imul
fbld
lcall
pop
inc
mov
adc
add
add
stos
test
std
jb
adc
lret
xchg
pop
addr16
dec
dec
mov
sub
pop
insl
lock
push
in
pop
nop
mov
iret
pop
cs
mov
je
lret
rcrb
adc
cmp
add
sahf
pop
lods
aas
mull
imul
in
xlat
mov
xor
push
cmp
divb
fs
lret
loop
inc
and
rcl
cli
cmc
je
ja
lret
and
push
pop
fwait
ds
jmp
scas
and
xlat
mov
pop
shll
clc
sbb
xor
iret
sub
std
js
mov
orb
inc
das
hlt
out
js
add
arpl
cltd
pop
movsb
mov
filds
sbb
out
cs
fucom
adc
jg
nop
mov
xchg
add
cmp
lods
jb
adc
jmp
jbe
inc
inc
xor
xor
dec
inc
imul
mov
sub
pop
aas
rol
ljmp
lcall
cld
mov
aas
mov
mov
sbb
xor
adc
mov
mov
das
aas
mov
repnz
test
adc
pushf
movsb
icebp
mov
enter
cmp
add
fs
iret
pushf
inc
ljmp
cltd
add
xchg
lret
push
aad
add
mov
arpl
mov
outsl
cmpsb
and
xor
cmp
movsl
xchg
movl
shrl
xchg
insl
mov
jne
xchg
sbb
leave
xchg
inc
jns
enter
aam
add
in
sahf
out
outsb
bound
jnp
sbb
loop
dec
lahf
sub
fisttpll
out
bound
das
lds
and
pop
pop
and
shrb
pushf
loope
pop
jbe
pop
sub
loopne
dec
mov
das
cmp
adc
xchg
xor
enter
movsb
idivb
pop
inc
loopne
cwtl
mov
xor
dec
jle
rol
jmp
inc
outsl
push
daa
or
mov
pop
pop
or
andl
pop
pusha
movsl
lods
and
imul
jmp
push
aas
incb
xchg
ds
dec
cmovne
sbb
rcll
push
adc
and
scas
adc
mov
popa
sub
push
movb
popa
push
imul
jecxz
popl
push
stos
xchg
adc
sub
jp
jae
and
or
sub
push
mov
es
imulb
pop
lea
cmp
lahf
rcrb
xlat
daa
jge
cmp
int
into
jb
scas
jmp
out
in
dec
out
fcomps
inc
and
arpl
push
stos
jne
mov
movsl
inc
jmp
inc
pop
lea
xchg
mov
pushf
dec
clc
pop
xchg
pop
bound
pop
inc
sbb
xchg
xchg
sbb
ja
sbb
sbb
jne
sbb
fwait
mov
lret
ds
popa
fs
adc
aaa
jae
addr16
pushf
xchg
inc
mov
mov
lret
loopne
shll
outsl
leave
div
mov
rorl
cltd
jo
aaa
out
int
dec
pop
aas
fadds
jle
dec
fwait
jl
sub
lret
jl
sbb
mov
aas
and
insl
add
xchg
xor
lea
loopne
popa
jmp
inc
and
out
out
rorb
cld
ljmp
dec
mov
dec
xor
sub
fimull
and
pop
es
aad
jmp
out
icebp
or
bound
xlat
mov
mov
pop
sub
imul
ficoms
mov
loope
add
addr16
pop
pop
jle
outsb
fcoml
sahf
movsl
adc
inc
jne
loopne
and
inc
rol
push
xor
stc
and
push
gs
jl
lods
fsubrs
and
inc
jmp
fisubrl
ret
cmp
outsl
into
jae
mov
icebp
adc
aas
pop
mov
in
fisubrl
iret
cmp
jecxz
mov
dec
sbb
dec
aaa
push
insl
or
xchg
mov
cmp
mov
fldln2
xor
mov
ret
and
cld
aad
mov
dec
cmp
std
arpl
shlb
fistl
mov
repz
adc
clc
xorl
outsl
sub
adc
sub
lock
outsl
cmp
pushf
mov
xchg
sub
mov
xor
pop
ljmp
shll
lea
sub
mov
in
shll
iret
dec
rcr
mov
addl
mov
shll
jae
stos
imul
lea
pop
lods
or
int
outsb
lret
popa
std
xor
cmp
xchg
lcall
xchg
push
test
scas
outsb
and
dec
rorb
and
mov
mov
ret
inc
pop
in
fsub
sbb
pop
mov
clc
mov
enter
mov
xchg
les
or
jns
mov
dec
icebp
jb
and
add
and
test
sbb
call
mov
cmp
je
xchg
sub
mov
mov
or
xchg
scas
aad
push
pop
dec
push
mov
vaddpd
test
fs
popa
lret
lock
iret
xor
arpl
das
cwtl
pop
add
dec
sti
or
xchg
or
jae,pt
loopne
stc
sub
fmul
jne
divb
jle
lods
push
out
out
pop
mov
mov
cld
xchg
and
push
aas
mov
sub
mul
push
arpl
push
in
mov
add
pop
or
popa
dec
mov
ficoml
aam
inc
das
jnp
pop
mov
fildl
or
cmp
cmp
jae
stos
inc
scas
ljmp
sbb
push
lds
sarb
movsl
cmp
popl
cmp
xchg
cmpsb
out
cmp
dec
fidivrs
xchg
mov
aas
adc
add
add
popf
sbb
dec
xchg
inc
sti
loope
pushf
movsl
adc
mov
mov
inc
jp
jl
fisttps
loop
ljmp
iret
lret
cmp
jbe
or
mov
rcl
xchg
xor
sbb
sbbl
jb
xchg
test
sti
jge
out
stos
adc
inc
sbb
test
cmpl
adc
xchg
shrl
lcall
adc
dec
lds
mov
sarb
out
cmp
mov
int3
jmp
into
imul
je
in
loope
cs
loop
inc
pop
fnstcw
pop
jg
adc
inc
cmpl
cmpsl
push
sub
std
fisubl
dec
and
dec
and
xchg
jle
testb
int
cwtl
inc
adc
mov
loopne
clc
push
mov
inc
jne
rcrb
shl
mov
lret
push
lret
dec
pop
dec
cmc
or
sbb
out
frstor
insl
add
mov
fisttpl
xor
out
repz
dec
pop
sbb
pushf
ds
inc
xchg
or
inc
sub
loop
sbb
mov
adcb
mov
mov
not
lcall
fnstcw
pop
and
cmp
fildll
mov
in
insl
push
mov
pminub
addb
jmp
dec
push
cmpsb
mov
xor
mov
cmpsl
lahf
dec
push
ds
sbb
xor
std
mov
add
out
cmp
or
xchg
rcrb
fisubl
in
inc
mov
cwtl
addr16
push
lret
fdiv
ret
inc
push
pop
sub
xchg
sbb
push
mov
cmpl
sti
cmpsb
sub
aaa
ljmp
mov
incl
jns
aad
shlb
or
xor
es
mov
inc
fsubr
cmp
inc
jne
mov
popa
scas
jno
and
xchg
xlat
sti
test
std
pusha
xor
lret
imul
mov
push
inc
or
or
or
sbb
lods
insb
in
fdiv
adc
cs
adcl
stos
cwtl
inc
sub
cmp
out
adc
jbe
cld
inc
out
lods
repz
dec
incl
les
sarl
xchg
xchg
xor
mov
je
push
and
push
cmpsl
test
push
loope
mov
leave
mov
pusha
mov
in
lret
mov
leave
and
leave
inc
inc
aad
pop
xor
fimull
xlat
push
add
mov
mov
pop
rorb
pop
mov
mov
repz
lahf
test
dec
js
rorb
bound
out
jno
jmp
adc
push
icebp
fwait
adc
and
sub
cmpsl
sbb
sbb
dec
jge
xor
push
frstor
push
pop
add
nop
jo,pt
sub
ja
fwait
repz
gs
mov
cs
ja
cmpsb
insl
lret
test
push
pop
mov
adc
out
inc
daa
mov
cmp
and
sar
jb
loop
jmp
daa
inc
sub
add
and
jecxz
rcrl
aas
bound
dec
push
es
fiadds
xchg
and
or
lcall
inc
mov
mov
lock
add
popa
dec
jl
jp
inc
mov
inc
mov
mov
xchg
add
sbb
sub
rorl
ljmp
cmp
adc
xlat
das
sub
and
mov
push
fldt
movl
mov
and
ljmp
ja
jmp
add
pushf
fiaddl
jge
or
aas
sti
insl
mov
fadd
rcrb
cmp
sbb
sbb
sahf
push
into
shl
call
sti
mov
or
pslld
rorl
mov
stc
add
mov
and
lret
fidivl
adc
and
and
pop
cli
mov
fisubrs
test
ja
movl
aam
aad
shlb
mov
lret
xchg
cmp
shlb
jl,pn
stc
aaa
jl
mov
mov
fisttps
les
pop
xor
sbb
cli
sub
jle
std
cs
mov
jle
jbe
xchg
jo
xchg
and
clc
loopne
loope
sbb
cmpsb
mov
mov
int
fiaddl
in
adc
inc
push
push
aaa
fs
in
into
inc
jnp
ja
add
push
or
xchg
mov
pop
movsl
ds
out
mov
adc
mov
or
dec
adc
clc
popf
nop
or
lcall
addl
pop
lret
sar
pop
add
push
xor
push
dec
sbb
sbb
xor
cmp
mov
push
aam
lcall
pop
mov
lods
dec
inc
add
fbstp
sbb
popa
sub
stos
cmc
pop
hlt
add
inc
iret
or
sbb
pop
movsb
jl
test
jl
cltd
push
inc
push
push
sbb
add
sbb
mov
jle
std
and
xchg
in
mov
sarb
sub
mov
pusha
mov
subb
adc
rcrb
push
fdiv
xor
mov
inc
jg
sti
jg
jne
test
out
xchg
adc
mov
jmp
jae
add
add
inc
in
adc
call
insl
adc
outsl
adc
and
fimull
ja
xchg
rcl
lret
lock
add
divb
jo
adc
mov
dec
mov
or
fprem1
rcr
sti
jae
mov
out
mov
js
out
jg
fiaddl
jp
jmp
or
dec
pop
add
and
adc
imul
test
xlat
cmc
ljmp
shlb
mov
pop
lods
mov
sbb
jo
loope
pcmpgtd
jge
inc
pop
nop
or
out
lods
aam
scas
jno
jl
sbb
pushf
pop
or
xchg
sbb
or
inc
or
adc
in
cmc
movl
lret
shll
in
mov
and
in
icebp
mov
dec
mov
loope
push
xor
mov
inc
adc
pop
pop
mov
inc
cld
adc
leave
popa
add
cmc
jno
adc
pop
outsb
jae
and
push
int3
push
sub
push
scas
mov
inc
data16
fbld
adc
mov
cmp
jl
pop
icebp
idiv
outsl
test
or
push
neg
daa
scas
sub
loop
insb
sti
out
add
pop
and
js
arpl
dec
aad
and
mov
mov
sti
rcll
inc
cli
nop
movsb
adcl
lods
loopne
test
push
int
pop
mov
inc
int
add
movsl
push
jb
stos
xchg
jle
jbe
cmpsb
jge
orb
fmul
pushf
cmp
or
addl
aam
mov
cmpb
call
sbb
mov
lret
sub
cli
sbb
inc
lret
movl
xor
xchg
push
imul
stos
rcll
inc
inc
scas
fwait
xor
inc
lods
repnz
les
fists
push
xor
push
cmp
dec
nop
mov
push
dec
cs
cmp
jno
mov
lods
fidivl
fs
adc
mov
movaps
jae
aas
pushw
inc
mov
push
movsl
push
les
push
hlt
and
add
mov
xchg
movsb
dec
clc
movsl
or
pop
adc
jecxz
and
cs
pop
sbb
cld
pop
jne
jo
mov
dec
inc
fldl2t
xchg
scas
cltd
stos
xchg
pop
or
iret
mov
cmp
fnstsw
aad
fistps
xor
gs
outsb
enter
cltd
cmpsl
rcrb
push
cmp
xchg
sbb
sbb
push
pop
jg
mov
popa
add
mov
sbb
sti
icebp
jae
pop
aas
xchg
mov
in
sti
fucomip
clc
jmp
xor
sub
adc
jecxz
inc
xchg
dec
roll
jecxz,pt
test
xchg
shlb
pop
mov
test
mov
cmp
movsb
aas
fists
int
pop
iret
or
xor
or
jp
and
repz
dec
mov
cs
outsb
and
pusha
xchg
mov
mov
enter
addl
sbb
cld
adc
les
mov
popl
inc
mov
jg
dec
bswap
jb
repnz
fisubs
arpl
sarb
xchg
shlb
inc
mov
xchg
push
mov
addr16
sbb
cltd
sub
sbb
clc
or
rolb
pop
push
xor
jg
idiv
xchg
cmc
lret
mov
mov
xchg
pop
mov
xorl
push
adc
or
mov
mov
adc
pusha
fidivrs
outsb
add
int
shr
out
mov
and
inc
bnd
insl
fiadds
test
jg
dec
daa
es
fcoms
lods
std
cmpsb
out
fistpll
stos
mov
jns
mov
ljmp
popf
xor
sbb
jns
push
movsl
test
clc
jp
shlb
sub
frstor
push
cmc
sbb
mov
leave
inc
sub
sarl
dec
add
pop
pop
mov
lods
adc
or
imul
mov
sbb
jle
test
mov
fdivs
jecxz
roll
pop
push
imul
mov
inc
test
push
cmpsb
xor
ja
lcall
js
or
sahf
insb
imul
pop
mov
ljmp
mov
jg
cli
insl
add
outsl
sub
push
sbbl
jl
or
mov
jle
xchg
sarl
xor
test
mov
jnp
testl
aaa
cs
stos
imul
and
out
xchg
aad
and
jg
push
movsb
aaa
sbb
or
mov
inc
xchg
add
arpl
fidivrs
jmp
mov
mov
xor
cmp
dec
adc
mov
push
ss
stc
mov
ret
xchg
loope
push
mov
flds
and
fmull
outsb
int
pmaxub
pop
push
orb
jae
mov
pop
add
dec
add
jl
loope
dec
test
jae
dec
pop
popf
scas
pop
cmpl
lds
pop
jns
push
sub
add
mov
data16
mov
out
xchg
mull
lock
add
sar
repz
testb
mull
and
inc
push
stc
ror
lock
out
xor
xor
punpcklbw
mov
lods
frstor
lock
pop
sub
cmp
and
cmp
in
jne
inc
cs
and
inc
xchg
or
call
and
jne
fiaddl
xchg
repnz
fcompl
xchg
cmp
push
inc
mov
xor
lret
dec
in
jecxz
or
clc
test
pop
test
lds
lcall
clc
test
mov
mov
mov
jbe
xorl
enter
pushf
pop
into
add
and
cmc
jg
pop
and
mov
out
icebp
scas
xchg
cs
pop
stos
pop
ds
xor
fcoml
jl
pushf
cmpl
mov
and
lcall
mov
sbb
imul
pop
jns
mov
movl
mov
loopne
shlb
pop
fstpl
cltd
insl
std
fimuls
ljmp
mov
in
adc
mov
pop
mov
push
loope
xor
fcmovb
or
out
push
xchg
sbb
repnz
fildll
cmp
ret
sub
adc
mov
jno
das
loop
imul
jne
scas
or
push
repnz
and
mov
pop
adc
addr16
mov
push
and
ds
idiv
lret
xchg
push
mov
or
sub
clc
pop
jg
pop
pop
imul
scas
in
mov
or
es
mov
loopne
inc
add
pop
push
mov
popa
cmp
sti
imul
xchg
pop
mov
jae
push
loop
mov
arpl
cli
lret
mov
adc
ds
std
push
mov
xor
hlt
inc
iret
icebp
cmp
and
orb
popf
mov
inc
jns
xor
ljmp
call
imul
xchg
arpl
mov
xchg
fisubrs
int
cmp
dec
mov
cs
xor
sbb
enter
push
dec
loopne
imul
daa
xor
out
outsb
or
xchg
stos
les
rcrl
pushf
fistpll
xchg
pop
pop
fcomi
dec
or
cmovne
jp
sub
ds
mov
and
testb
movsl
xchg
rcll
mov
sub
add
jmp
lds
inc
arpl
mov
xorb
ds
leave
test
xchg
xchg
xchg
mov
mov
aam
cmc
cld
dec
cli
jb
aad
add
cmp
push
dec
mov
sub
jbe
dec
leave
sub
out
cmc
stos
sbb
stos
and
mov
mov
cs
jle
into
in
js
sub
jnp
cmc
xor
nop
xchg
icebp
or
add
lods
adc
jbe
sbb
mov
std
out
pop
push
mov
push
inc
aad
push
pushf
pop
adc
xchg
jae
std
hlt
clc
push
cmp
inc
sub
xor
xchg
scas
repz
cmpsl
xchg
test
push
into
sub
in
and
jb
or
sahf
or
adc
cwtl
data16
jnp
or
and
int
push
xlat
and
jne
jmp
dec
xor
push
arpl
test
dec
push
lds
sub
add
idivb
in
push
cmpsb
outsl
jmp
pop
insl
pop
sub
xchg
push
int3
mov
xchg
rolb
sbb
xchg
out
mov
jo
cld
adcl
movsl
mov
sti
jge
mov
jle
repnz
insl
fdivrl
jecxz
push
in
shlb
jmp
ret
cs
psrld
xchg
scas
jbe
cwtl
inc
pop
xor
imul
adc
jbe
mov
ficoml
out
clc
mov
sub
mov
out
add
retw
pop
out
push
jmp
sbb
xor
mov
dec
aas
push
pop
in
adc
cwtl
subb
shlb
mov
jp
sub
setne
icebp
rcrl
sbb
sub
int3
daa
fdivr
xlat
push
jns
mov
push
clc
shll
mov
in
mov
ja
xchg
fwait
aad
sub
inc
sbb
leave
sub
sbb
sub
sbb
es
pop
push
fcomip
sbb
and
ljmp
stos
in
adc
outsb
rcl
punpckhwd
mov
test
mov
imul
sub
es
out
lods
push
sarb
push
jp
jns
gs
add
divb
incb
sahf
stos
test
cmpsb
iret
add
pop
adc
fs
dec
insb
add
fndisi(8087
lret
sti
push
inc
adc
sarl
stos
sahf
cwtl
shrl
and
xlat
dec
fildll
inc
std
or
pop
stos
or
jp
fs
int3
sbb
rcll
pop
adc
cmpb
jno
lock
pop
ret
cmp
mov
shll
scas
add
xchg
mov
mov
push
aad
bound
movsl
push
mov
repz
out
jmp
outsl
xor
pop
cmp
or
fcmove
dec
arpl
jmp
es
sbb
ljmp
cmp
pushf
sub
movsb
lds
push
xchg
out
outsl
cmp
xchg
add
int
inc
jnp
add
call
inc
jae
cli
jbe
jp
scas
ss
aam
insl
idivl
and
dec
pop
mov
adc
jecxz
and
pop
mov
pop
inc
mov
cmpsb
fwait
hlt
sub
icebp
and
pop
je
xsha256
cmpsb
aad
pop
or
push
fs
xchg
bound
push
mov
js
mov
xor
sub
push
jbe
adc
inc
cvtps2pi
lret
xchg
test
jge
pusha
and
add
out
push
in
mov
pop
inc
mov
lds
enter
imul
test
roll
cmp
fistl
mov
xor
repz
fsubs
pop
add
dec
inc
test
shlb
leave
das
dec
shlb
add
enter
out
xchg
fwait
dec
add
pusha
pop
add
fdivrs
bound
xor
mov
dec
call
jns
inc
push
inc
dec
lcall
push
sbb
or
push
xchg
cmp
jge
adc
test
outsb
shlb
mov
or
repnz
cld
xlat
add
frstpm(287
lcall
jo
movsl
std
ljmp
mov
das
dec
and
out
mov
cmp
xlat
sbb
das
ret
leave
mov
lods
adc
ficompl
adc
push
xchg
or
es
out
cmpsb
mov
sbb
sbb
jmp
mov
push
cs
cmpb
addr16
adc
fsub
gs
xchg
jge
lock
push
add
jge
adc
es
add
or
adc
jecxz
mov
sbb
adc
hlt
xchg
mov
pop
jle
je
jo
xorl
enter
movsl
or
or
dec
xorb
mov
cltd
add
clc
xchg
dec
and
addr16
je
enter
jecxz
jnp
push
mov
xor
push
ljmp
jns
mov
iret
xor
test
dec
sbb
sub
lret
enter
lea
in
jns
popf
outsb
dec
xchg
sbb
inc
inc
jb
mov
push
sub
lods
jl
int
lods
xor
mov
aas
fidivrl
mov
add
mov
das
xor
dec
inc
dec
jo
mov
inc
sbb
popl
insl
je
jmp
out
xchg
mov
ror
mov
repnz
lock
and
notb
push
clc
mov
mov
movsl
adc
out
xorl
repz
jns
mov
xor
pushf
push
dec
inc
test
xor
jne
imul
push
xchg
bound
jno
pop
sbb
fmuls
pop
and
cmpsl
jg
add
cwtl
sbb
jno
outsl
xchg
xchg
cmp
xor
add
add
mov
cmp
fildll
mov
jl
or
imul
xlat
pop
xor
adc
lcall
ss
adc
js
cmpsb
hlt
pop
or
sub
push
pushf
or
outsb
dec
sub
lahf
rorb
add
inc
loope
jg
xchg
lds
cmpb
cmp
mov
mov
mov
aas
inc
insb
loop
jecxz
xchg
insb
mov
cltd
jecxz
add
push
mov
jbe
decb
mov
shll
sahf
add
lret
push
jle
stos
xchg
jne
imul
cmp
mov
xchg
sub
shr
mov
pop
imul
and
inc
pop
mov
dec
mov
pop
lds
cs
test
stos
or
jge
push
ja
bound
jp
inc
lahf
add
xor
or
dec
xchg
adc
hlt
sbb
cmpl
inc
mov
mov
sub
cmpsb
cmp
xchg
rorl
mov
xor
push
jo
pop
add
sub
sub
sub
and
push
cltd
lcall
sbb
or
scas
sahf
jecxz
insl
jnp
xchg
mov
and
dec
adc
in
ja
repnz
or
aas
mov
pop
mov
je
movsb
cld
adc
movsb
dec
sbb
jl
stc
sub
mov
jmp
pusha
pop
idivl
lret
lcall
dec
addb
int
jno
push
mov
mov
mov
lret
stos
mov
out
sarl
lods
mov
pop
imul
inc
cwtl
cmp
sahf
lea
cmp
cwtl
xchg
add
xchg
and
cmp
lcall
push
xchg
movsb
mov
xchg
scas
ret
inc
les
inc
mov
pop
jle
test
data16
push
ret
pop
push
test
pop
add
sahf
cmc
std
dec
pop
xor
xor
sub
ds
sbb
inc
mov
mov
add
sbb
loopne
daa
sub
jae
or
cmp
jb
mov
gs
shr
loopne
rcrl
notl
stos
fistl
push
pop
ljmp
pop
mov
xor
addr16
into
dec
mov
jecxz
pop
cs
add
and
pop
mov
fisttpl
iret
add
popf
cld
ret
add
mov
call
movsl
aas
loopne
mov
loope
das
loop
and
xor
xchg
cmpsb
jb
mov
scas
popf
aad
mov
jecxz
or
inc
dec
or
xchg
js
lret
pop
test
xorb
sbb
fdivs
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
addl
xchg
mov
outsb
push
push
xchg
loop
xchg
adc
inc
loopw
or
cmc
js
adc
pusha
testl
mov
sahf
fs
int
xlat
and
movsb
arpl
lret
bswap
dec
xor
xchg
cmp
xchg
jle
add
jo
and
xchg
sub
and
xchg
adc
test
repz
push
in
daa
adc
mov
xchg
and
sarb
mov
fldenv
dec
mov
jb
andl
les
nop
fsts
xor
push
lock
xlat
into
xchg
out
push
jo
dec
enter
jb
jp
dec
mov
push
fldt
sbb
push
cmp
sahf
loope
jnp
rclb
addr16
pop
lret
mov
movsl
popf
rcll
mov
std
lret
mov
jl
stos
loope
sbb
jge
aam
cmp
sbb
test
push
and
pop
out
pop
mov
jb
cli
add
vunpckhps
in
insb
sbb
std
push
xchg
mov
jp
dec
ja
mov
jecxz
mov
sbb
jecxz
nop
ss
mov
mov
cld
popf
std
pushl
pop
fsubrl
aaa
out
pop
mov
dec
push
jb
rcl
pop
enter
pop
imul
push
sub
out
sub
stc
movsb
lock
shlb
test
mov
pop
sub
sti
mov
loope
addb
ret
adc
cmp
mov
xor
sbb
test
aad
das
shrb
pop
cli
out
aaa
or
lods
lds
insl
xor
ret
cwtl
popf
imul
shll
repz
cld
adc
and
std
adc
mov
into
push
imul
push
sbbl
pop
enter
js
pop
lahf
sub
sahf
aaa
loopne
add
adc
nop
or
aam
les
out
push
xchg
pop
repz
test
iret
push
bnd
lret
add
sub
inc
mov
adc
fdivrl
xlat
insb
jno
inc
subl
lea
mov
cmpsb
xchg
or
imul
mov
out
dec
mov
pushf
mov
enter
mov
cmpsb
enter
arpl
outsl
inc
ret
lret
cmp
push
add
dec
mov
testb
rep
sub
dec
xchg
xorb
stos
lea
mov
int
mov
repz
jp
sarb
insl
addr16
mov
sbb
xor
inc
cwtl
xchg
out
xlat
test
repnz
inc
pop
mov
lret
xchg
aas
jg
push
test
icebp
cltd
cmp
aas
push
sub
inc
lahf
mov
out
outsb
xchg
mov
out
mov
pusha
cmpsl
repnz
jne
outsl
jne
clc
jge
mov
sub
call
nop
mov
int3
jae
out
xchg
ljmp
shlb
mov
in
int
into
lret
mov
pusha
stos
sti
mov
fs
in
mov
fcoms
dec
mov
fstpt
mov
iret
movsb
mov
mov
cmpsl
aaa
arpl
insb
dec
aam
cmp
jecxz
stos
add
mov
dec
js
xlat
dec
dec
or
push
pop
scas
push
test
fidivs
invd
push
xchg
jb
sbb
ret
xor
icebp
xor
push
mov
mov
mov
pop
test
xor
sub
jae
xor
sub
adc
xor
jno
cmp
ret
cs
dec
in
and
out
pop
shll
sub
sar
fdivrl
popf
sub
add
mov
fistpll
cmp
loope
jns
sbb
aam
hlt
dec
cltd
lock
das
mov
arpl
jne
push
push
mov
aas
pop
orb
or
xchg
icebp
push
pop
mov
xor
xchg
testl
jae
imul
lret
and
push
gs
dec
std
cwtl
scas
adcb
inc
lcall
ret
jo
fwait
test
xchg
ret
out
hlt
mov
xor
bound
adc
clc
lcall
dec
dec
push
dec
fdivr
jo
jecxz
xor
popf
adc
aaa
mov
jne
dec
add
stc
test
inc
mov
ret
imul
push
jmp
pop
mov
scas
xor
int
and
dec
add
sbb
fxam
lea
inc
lcall
aam
mov
jae
in
aam
dec
sub
pop
jecxz
mov
add
icebp
out
jle
out
fdivrl
sub
repnz
pushf
jle
sbb
add
mov
add
fstpl
popl
fbld
cltd
icebp
add
popa
data16
outsl
dec
mov
mov
aam
loop
pop
dec
xchg
cmc
cmp
imul
jbe
mov
push
push
inc
scas
mov
adcb
das
sarl
push
test
add
push
pusha
push
stos
and
stc
push
dec
mov
fs
mov
in
jg
jmp
adc
mov
sub
sbbl
clc
inc
lcall
test
push
push
das
and
or
ja
pop
add
in
jecxz
xor
scas
adc
xor
popa
push
lods
or
inc
mov
flds
inc
jno
std
inc
bound
scas
outsb
mov
lea
aas
ret
setge
movsb
inc
cmp
jp
into
push
mov
cltd
stos
loop
repz
or
fistpll
cmp
xor
sbbb
add
jns
or
adc
popf
cmp
dec
dec
cmc
or
cmp
rcll
and
popf
ds
pop
xor
aaa
jbe
stos
stos
fists
xor
fcmove
and
repnz
lock
mov
inc
jns
xlat
stos
lahf
fucomi
call
xor
or
push
addr16
in
rolb
and
aaa
test
movsl
inc
push
test
loope
or
fadds
pop
or
adc
cmp
data16
jne
or
push
jge
or
mov
pop
or
into
or
test
jae
mov
mov
xor
cmp
dec
add
cmpsl
jge
jl
gs
inc
idivb
inc
sbb
jge
xchg
xor
or
in
nop
stc
xchg
cwtl
into
mov
jge
sub
fcoms
popa
lret
jecxz
jmp
fdivrl
repnz
insl
xchg
mov
mov
mov
xor
xchg
stos
xlat
inc
inc
cmpsl
mov
cli
add
inc
cmpsb
test
mov
cmp
int
pop
or
test
in
leave
mov
or
mov
mov
sarb
mov
stos
imul
cmpsb
dec
xor
shlb
or
mov
sub
ss
mov
xchg
fdivr
pop
sarl
cmp
dec
lret
cmc
inc
jle
sub
mov
sahf
aas
xchg
negl
outsl
jae
out
pop
xchg
push
jge
sub
mov
mov
pop
add
xchg
cmpl
imul
jo
jge
adc
cmp
lcall
movsl
lahf
cmp
je
jle
lock
adc
int
mov
push
cmp
sbbb
push
mov
and
mov
pop
mov
stos
fisttpl
xor
sub
movsb
out
jo
jo
pop
iret
push
push
jno
inc
mov
shrb
rclb
imul
imul
push
xor
mov
std
push
movsb
outsb
frstor
hlt
stos
mov
sub
fwait
lret
sub
es
jle
dec
ret
imul
test
aam
inc
xlat
push
xchg
sbbl
xchg
jl
pop
shl
outsl
adcb
out
pushf
xchg
dec
fisubrs
call
fbld
add
adc
inc
icebp
test
fmul
and
xchg
jnp
cmpsl
jecxz
xlat
cmpsl
cmc
mov
xor
gs
jmp
xchg
andb
push
lods
das
jg
dec
rorb
mov
pop
cmpsl
aam
and
xchg
testl
push
outsb
xchg
mov
pop
mov
inc
imul
test
adc
loopne
inc
mov
fldl
in
mov
cmc
xchg
in
xor
test
xchg
arpl
sbb
cmc
mov
shrl
xlat
cmpsb
push
idivb
fmull
jno
gs
cmpsb
lret
mov
cmp
sub
xchg
cmp
clc
jo
dec
and
mov
and
xchg
lret
fwait
in
mov
nop
adc
call
pop
cmp
cmp
outsb
push
mov
fistpll
loopne
add
xor
cwtl
addr16
pop
scas
icebp
mov
imul
and
xor
icebp
mov
push
out
sub
jl
add
sub
loopne
fcmovne
pop
pop
fsub
mov
iret
leave
fimuls
push
cli
fs
xchg
out
push
shrl
push
jmp
or
sub
sarl
xchg
nop
arpl
repz
add
addr16
mov
pop
icebp
out
roll
andl
adc
push
lods
cmpsl
dec
out
mov
addr16
add
push
cmp
lea
adc
lcall
adc
cwtl
cmp
mov
mov
andl
xor
orb
jmp
xchg
xor
push
mov
cmp
push
out
mov
cmp
sub
sbbl
rorb
out
add
ss
inc
outsb
jno
mov
pop
jns
out
sub
inc
xchg
cmp
and
mov
test
pop
in
pop
jb
pop
push
cmp
sti
pushf
jecxz
and
jbe
or
test
divb
cmp
mov
xor
jmp
stos
push
sarb
je
nop
mov
je
push
mov
mov
or
or
push
mov
cmp
insb
int3
pusha
pop
pop
fadds
test
cmp
bnd
mov
push
jg
xchg
sbb
pop
sahf
jae
cmp
add
push
jg
or
xchg
stos
pop
pop
inc
xchg
ficoml
jb
xor
cmpsb
cltd
jae
cmp
pop
adc
and
mov
inc
das
xchg
or
xchg
outsb
sbbl
shrl
pop
into
xor
push
dec
scas
cmp
cwtl
xchg
xor
lcall
lods
ret
adc
fisubrs
js
int
jo
or
xchg
lret
push
mov
mov
adc
add
mov
or
nop
jmp
mov
std
and
iret
inc
mov
gs
test
push
call
int3
faddl
mov
add
xor
push
push
pop
mov
adc
popf
pop
cmp
loope
adc
loope
test
xchg
pop
out
pop
xchg
adc
mov
test
add
sbb
add
cmp
call
ds
pop
cmp
imul
ret
and
inc
ss
xchg
sarb
jb
insb
orl
cmp
push
inc
int
fs
daa
push
jl
ficoms
test
mov
pop
mov
xchg
mov
movb
movsl
jle
push
pop
cmp
test
xchg
push
mov
cmp
inc
pusha
fisttpl
mov
lahf
xor
jp
pop
sub
insb
push
mov
insl
cmp
rcr
xchg
mov
mov
pop
ja
cmp
or
pop
test
movsb
jns
aas
cmp
xchg
dec
xchg
loopne
dec
cmpsb
jns
mov
lock
mov
mov
sub
repnz
enter
inc
lods
ret
xchg
lret
sub
scas
cmpsl
iret
fwait
inc
xor
shrb
cltd
popf
jle
or
and
ret
mov
and
push
divb
dec
mov
or
sub
insb
test
pop
icebp
cld
xlat
sub
icebp
cmp
test
into
mov
stos
mov
add
pop
xorl
loope,pn
les
mov
mov
cmpsl
jp
fists
jo
jl
push
pop
mov
sub
fldenv
stc
dec
sar
mov
xchg
imul
repz
lret
add
or
mov
adc
mov
cmc
popa
sbb
sub
out
repnz
inc
pop
into
xchg
and
cmp
xchg
xor
aam
pushf
or
roll
stos
into
cmp
fs
stos
das
and
andl
fwait
cwtl
cmp
add
scas
lahf
dec
fistl
inc
jne
cmp
mov
inc
push
mov
movsb
mov
aas
jl
sbbb
shlb
xchg
push
jno
daa
pop
adc
lods
sub
fimull
ljmp
inc
in
jnp
dec
les
movsb
sti
lea
shlb
loope
mov
push
push
es
popa
test
push
and
mov
js
mov
movsl
push
lcall
jbe
pop
mov
sti
test
dec
lahf
xchg
mull
incl
insb
cmp
sbb
sub
cmpsb
mov
stos
mov
sbb
xor
nop
inc
ja
jno
sti
mov
sub
das
popl
popf
push
repz
dec
ljmp
mov
fldenv
mov
repnz
into
or
push
jmp
icebp
sbb
mov
fs
mov
sbb
lret
out
rcll
sarb
test
test
loop
lock
cld
out
pop
sub
lahf
enter
adc
xor
cmp
dec
les
iret
sbb
mov
aaa
lcall
and
xor
imul
ffreep
lahf
pop
outsb
repnz
xor
xchg
rorb
dec
fstpt
imul
jns
fistl
shl
add
pop
fadd
inc
or
xchg
fisttpll
dec
loop
xchg
cmp
mov
or
lods
ret
jo
dec
js
mov
xchg
sbb
iret
js
xchg
jl
sbb
pusha
das
arpl
lret
dec
pop
mov
and
mov
fistl
daa
xor
xor
add
daa
orl
daa
mov
loop
es
mov
test
xchg
push
jge
test
jp
fwait
push
fiadds
xchg
add
jne
cmp
or
jns
cmpsl
cmp
stos
and
std
push
mov
and
or
sbb
dec
outsl
mov
xchg
movsb
xchg
das
cltd
pop
les
pop
xor
fists
jno
bound
bound
xor
adcb
inc
les
aad
xchg
add
push
mov
inc
mov
test
push
xchg
sub
mov
jae
pop
popf
xchg
pop
dec
sub
lret
inc
xchg
push
out
lea
fyl2xp1
push
mov
das
frstor
sahf
daa
fs
mov
bound
dec
outsl
add
pop
sbb
dec
popa
fsubrs
lods
add
or
and
xchg
sub
aad
les
inc
jge
mov
mov
pop
loopne
jbe
in
adc
and
inc
inc
xor
scas
sbb
jb
outsb
pop
push
dec
mov
call
orl
popf
outsb
int
or
mov
lret
jno
mov
insb
fs
das
insb
es
mov
les
jp
inc
or
sbb
fidivs
scas
jp
sti
cmp
xchg
pop
cli
mov
arpl
outsl
inc
icebp
popf
pop
adc
push
cli
and
mov
xor
or
or
lds
push
jne
fmuls
jnp
jb
mov
lret
out
sbb
std
out
and
pop
ret
push
test
icebp
xchg
inc
sahf
pop
fisubrs
jp
mov
push
data16
push
mov
and
call
stc
stc
mov
ret
mov
pop
pop
lcall
negb
cmpsl
popa
mov
mov
sub
mov
call
inc
test
imul
stos
dec
inc
xor
mov
adc
les
int3
cmp
xchg
or
mov
stos
int3
add
je
mov
or
pusha
je
outsb
insb
fsts
mov
add
fistpl
sbb
imul
jmp
jle
sbbb
cmpb
push
adc
pusha
leave
lcall
xor
push
mov
mov
add
fwait
icebp
push
aad
fsubrl
test
call
jg
mov
xchg
or
pop
push
push
and
dec
sub
pop
test
iret
sbb
sub
shrb
inc
push
out
sub
mov
push
pop
std
mov
rclb
scas
mov
push
pop
imul
hlt
push
cmpsl
push
pusha
enter
decb
rolb
mov
mov
mov
sub
aaa
xchg
and
aas
je
repnz
mov
mov
xchg
fistps
lods
sbb
test
sub
jle
test
stos
add
js
inc
fisubs
mov
fdivs
dec
aas
and
mov
mov
mov
bound
push
mov
popa
sahf
sar
sub
pushl
into
pop
shlb
out
loope
dec
cwtl
sbb
ljmp
cli
sti
mov
push
jl
xor
cmp
add
sbb
push
movsb
or
cmp
shlb
lret
xchg
mov
mov
popf
gs
push
mov
adc
adc
mov
scas
ljmp
dec
push
push
dec
dec
ffreep
imul
sbb
or
rol
cmc
pop
mov
repnz
arpl
cmp
push
icebp
in
adc
jo
aas
jb
push
cli
dec
insl
lcall
aam
mov
mov
addl
jecxz
daa
nop
push
fs
cmpsl
dec
mov
mov
shrl
fs
pop
mov
in
icebp
add
and
jns
fists
xrelease
nop
test
aam
jae
cmpsl
jbe
adc
cld
out
ljmp
mov
in
fbld
push
mov
and
leave
mov
add
fcomip
add
pushf
push
push
inc
xchg
pop
mov
popf
and
xchg
or
pusha
cmp
outsl
pop
lock
xor
jmp
fwait
jne
mov
cmpsl
repz
stc
cltd
fcomi
mov
xchg
push
mov
pop
mov
daa
nop
sub
push
loope
stos
push
inc
xchg
notl
rcrb
inc
push
popf
mov
mov
out
sub
aam
push
insl
daa
cld
out
in
xchg
test
dec
and
pusha
stos
pop
insb
mov
jecxz
pand
push
in
aam
lgs
mov
gs
add
inc
sbb
cmpsl
insb
in
hlt
lret
inc
jno
sbb
pop
pop
xchg
std
jne
mov
jno
adc
dec
jp
or
xchg
dec
leave
cwtl
sbbl
pop
cmpsb
dec
jmp
test
out
jo
or
popa
cmpsb
cltd
adc
andb
cld
loope
orl
daa
dec
dec
imul
adc
idiv
mov
or
mov
inc
or
push
xorb
test
test
sub
pusha
or
fldl
push
cmp
inc
sub
shl
xorl
mov
sbb
dec
sbb
pop
cmp
adc
dec
pushf
popf
dec
in
std
repz
jl
add
clc
cwtl
decl
mov
add
call
push
rorl
xor
in
mov
stc
gs
dec
cmp
idivb
out
mov
bound
jnp
jb
lret
pusha
push
xchg
mov
je
stos
and
cmpsl
imul
aas
and
fcomi
or
pop
and
or
outsl
aaa
inc
mov
sbb
xor
jo
fld
add
mov
mov
dec
jle
cmp
scas
fimuls
dec
jp
clc
sahf
jns
jns
push
clc
insb
nop
rolb
pop
leave
xor
ljmp
or
in
dec
mov
imul
pusha
pop
sbb
push
inc
xchg
mov
xor
lds
rclb
imul
sbb
and
jg
add
xchg
add
movsb
fcmovnu
mov
jle
xchg
or
int3
rcll
loope
mov
rcrl
sbb
jb
push
mov
je
aam
int
shlb
imul
mov
and
arpl
das
jno
js
push
sbb
push
inc
test
sbb
push
push
sbbb
rcrl
inc
jne
repz
sub
call
mov
andl
sarb
jno
mov
push
jno
xchg
sbb
mov
xchg
addr16
int3
adc
xor
mov
mov
add
mov
jg
xor
fdivrp
pop
jg
pop
push
push
xchg
jge
pop
push
fldenv
push
lcall
jo
mov
jp
orb
fidivrs
enter
sub
clc
aas
notl
xchg
pushf
adc
out
arpl
jp
das
add
sub
pushf
push
imul
aad
shl
sahf
xlat
int3
mov
in
sub
pop
ja
mov
fs
or
aad
mov
sub
in
dec
lods
mov
arpl
sti
pop
sbb
push
inc
out
mov
sbb
icebp
push
dec
xchg
clc
movsb
jo
outsb
loopne
cli
push
inc
adc
loope
mov
and
push
jo
pop
dec
stos
ljmp
cli
shrl
pop
dec
xor
lods
dec
shr
adc
out
adc
mov
lods
xchg
jns
dec
mov
mov
adc
repz
xor
iret
sti
rorb
ret
xor
adc
aam
or
leave
aad
sbb
std
hlt
pop
aad
push
aad
loop
add
test
inc
je
inc
icebp
lods
push
pop
jg
mov
cmc
negb
ja
insl
imul
shlb
sbb
andl
xor
pop
pusha
and
inc
aaa
ds
out
sbb
mov
jl
sub
sub
jge
xchg
ret
orb
ret
je
adc
inc
pop
outsl
mov
inc
xchg
lcall
gs
mov
pop
pushf
jbe
add
fnstenv
and
clc
hlt
fnstenv
adc
icebp
fildll
dec
pusha
mov
aad
out
xor
popa
mov
dec
cmp
fwait
inc
xlat
and
jg
ss
imul
aam
xorl
lret
add
movsl
mov
mov
mov
pop
outsb
ret
inc
cmp
pop
pusha
sub
jecxz
sbb
loop
xchg
pop
in
out
mov
mov
mov
adc
sub
jne
test
sbb
test
dec
pop
orb
push
mov
jnp
adc
in
lods
dec
mov
fdivr
inc
dec
mov
cmp
mov
jne
and
mov
pop
or
jb
rep
ret
inc
push
inc
mov
add
loope
jbe
xlat
hlt
pop
push
std
dec
mov
cli
dec
xchg
iret
sbb
clc
fs
jecxz
lock
pop
aaa
repz
dec
jecxz
ficomps
lods
pop
mov
pusha
pop
sbb
rorl
adcb
cmpl
mov
jmp
clc
lea
imul
pop
push
std
repnz
into
inc
aam
adc
add
xchg
jo
jbe
mov
lret
cmp
stc
lcall
push
push
inc
pusha
imul
js
jmp
arpl
mov
leave
pusha
aas
stc
insl
adc
and
in
jge
ja
notb
inc
xchg
das
or
ja
push
cmp
lock
loop
sub
push
mov
in
adc
imul
scas
icebp
pop
testl
add
add
jne
test
xchg
cmpsb
scas
scas
ss
lea
xor
pop
sub
jae
fs
lock
pop
xchg
cmp
mov
mov
or
insb
ret
lods
cwtl
sbb
jnp
cltd
cmpb
mov
lods
pop
jl
ds
and
mov
test
xor
mov
aam
jnp
xchg
dec
adc
jecxz
fsub
adc
lods
leave
push
jo
je
mov
xor
cmp
pop
loop
inc
and
mov
sub
mov
cmp
push
jl
lahf
dec
inc
add
mov
jnp
mov
sbb
mov
mov
leave
clc
lods
sbb
fdiv
pop
xchg
popa
mov
lahf
bnd
aas
push
in
repz
je
arpl
out
cwtl
cli
add
and
mov
loopne
xor
nop
popf
icebp
cmp
enter
stc
test
lret
jg
popa
xchg
pop
aad
cmpb
push
xchg
xchg
add
aad
push
movsb
mov
lds
aas
mov
sub
jo
dec
sbb
inc
cld
daa
fdivrs
dec
arpl
adc
push
jno
mov
rcrl
loopne
insl
das
call
mov
popa
add
jo
push
mov
fcmovnb
daa
cwtl
ja
hlt
movsl
mov
fsub
mov
push
xchg
mov
jo
pop
test
or
adc
xchg
mov
cmp
aad
shrd
dec
inc
aad
ja
test
sub
push
movsb
mov
mov
sub
aas
dec
scas
pushf
fwait
xorb
dec
aad
mov
jae
jge
fidivrs
push
mov
dec
fistpll
aas
int3
push
pop
repz
sub
aad
pop
xor
xlat
fcmovne
les
pushf
push
js
cmp
cmc
mov
testl
mov
add
insl
pop
inc
cld
push
jo
jl
sub
push
addb
call
sbbl
insl
scas
imul
sub
cltd
sbb
loop
test
fisttps
mov
popa
pop
sbb
lahf
fistps
sbb
cmp
sarb
jecxz
push
jo
xchg
push
push
mov
int
scas
popf
stos
lds
rorb
sbb
fists
xor
leave
and
xchg
lods
pop
sahf
jne
cltd
jne
xor
cmp
gs
jge
cmp
add
je
mov
mov
add
loop
sbb
cld
xchg
lods
sbb
insl
icebp
add
sbb
add
sbb
inc
sbb
push
jge
not
nop
std
mov
in
dec
dec
pop
test
stc
jecxz
out
insl
daa
or
outsl
sbb
not
push
jmp
shrb
test
cld
and
push
outsl
sarb
mov
lret
dec
inc
test
lods
jmp
jle
nop
ret
js
sbb
lea
rclb
cwtl
xchg
pop
inc
dec
lea
hlt
adc
stos
cmp
push
adc
sti
mov
repnz
fsub
or
xor
mov
dec
adc
mov
sub
scas
int
int
ja
inc
mov
rcl
sub
and
into
pop
sbb
inc
outsb
sub
mov
test
int3
cmp
fwait
lock
inc
xchg
lds
shll
sub
inc
pop
stos
pop
cmp
cmp
and
repnz
sub
cmovp
in
out
inc
sbb
add
test
xchg
or
ljmp
xchg
adc
xchg
scas
jl
push
or
mov
sbb
in
pop
inc
sub
push
sbb
jle
in
scas
movsb
cmc
jmp
repnz
lret
jb
or
xor
fstps
and
jbe
add
push
jbe
sub
bound
jmp
mov
xor
insl
push
sbb
fcoms
mov
cmpsb
divl
jle
add
dec
mov
or
xor
cld
xchg
hlt
jo
popa
sub
mov
push
sbb
sbb
in
orl
adc
inc
aad
and
push
adc
xlat
in
int
mov
nop
mov
mov
movsl
cmpsb
lea
sub
dec
pop
daa
jne
test
and
cli
pop
mov
pop
push
xlat
out
dec
dec
sub
or
dec
add
and
shrl
inc
mov
sub
pop
mov
adc
cmp
jge
pop
iret
scas
add
popa
scas
in
mov
lret
add
fldenv
xor
clc
bnd
push
shll
loope
mov
sub
lods
fsubrs
lock
pop
fisubrs
and
pop
into
cmpsl
sub
cmp
repz
in
test
aam
es
addr16
jl
mov
fisubs
jne
lods
mov
push
cltd
sub
std
mov
rcll
sbb
or
xor
pop
pop
and
int3
cld
xor
pushf
fiadds
daa
jp
cmp
dec
pop
loopne
pop
fildl
sbb
xchg
inc
clc
sahf
mov
pop
inc
pop
xor
push
adcb
out
in
lahf
fistpll
and
inc
test
or
xor
sub
decb
xchg
scas
scas
sahf
mov
jo
xor
xor
int3
sbb
cld
pop
dec
mov
sub
add
aam
test
sub
out
pop
in
hlt
and
add
push
sub
repz
fwait
test
dec
in
lods
xorw
or
push
xorb
sub
mov
fidivl
add
jg
and
push
in
jge
daa
je
cmp
push
pop
mov
sbb
mov
int
cmp
push
mov
fdivrl
sti
cmc
cmp
repnz
cmc
jbe,pn
pop
stos
out
out
push
sub
xchg
in
xchg
push
jp
cmc
ficompl
outsb
add
repz
adc
pop
leave
mov
leave
xchg
cltd
shll
sub
adc
add
pop
inc
lock
loope
pop
cmp
push
cmp
aas
in
and
lock
sti
outsl
cmp
scas
movsb
cmpsb
sub
insb
pushl
ss
jns
je
jle
int3
xor
xor
in
je
sub
mov
sub
ret
xchg
aas
dec
mov
mov
test
inc
mov
pop
fiadds
std
cmc
sbb
sub
andl
in
pop
cwtl
mov
in
or
out
sti
arpl
test
dec
mov
fsub
imul
test
xor
xchg
push
mov
sti
and
movsl
xchg
fcom
cltd
or
sbbb
inc
fbld
fs
cltd
mov
scas
add
cmpsb
push
adc
mov
jno
loope
loope
push
insl
xor
loopne
dec
and
aas
stc
or
cld
outsl
es
sub
mov
jle
pop
movsb
aam
mov
out
sahf
fwait
mov
or
xor
cmp
ret
mov
push
mov
into
int3
aas
xchg
sbb
out
in
mov
cli
pop
xchg
push
push
fs
jno
movsl
pushf
aaa
jno
insl
inc
add
jae
add
mov
fildll
jmp
xchg
jmp
in
inc
push
jge
sarl
adc
mov
lods
fcompl
xchg
push
aam
aam
cwtl
mov
or
xor
mov
and
lahf
adc
mov
adc
sbb
int
lret
pop
cwtl
ds
pop
aad
fpatan
push
add
mov
add
adc
cmp
movsb
dec
mov
jno
push
cmc
xor
mov
repnz
and
mov
mov
dec
sbb
mov
xor
push
jns
adc
dec
nop
aam
inc
es
or
push
and
pop
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
mov
xchg
mov
cwtl
roll
jno
out
mov
cmp
inc
xchg
iret
jge
stc
xor
fsubrl
jnp
adc
or
pop
es
jg
sub
mov
in
adc
mov
jb
mov
ljmp
adc
mov
push
pop
or
push
jne
pop
mov
loope
pushf
pop
hlt
out
loop
loope
mov
mov
stc
xchg
adc
xchg
loopne
pop
mov
aaa
cmp
sti
xchg
ffree
mov
lods
or
or
dec
push
idivl
es
stc
mov
xor
mov
sahf
ljmp
mov
jns
shll
xor
adc
xchg
mov
fwait
lods
and
sbb
fdivl
lret
insl
mov
jl
movsl
jmp
jae
daa
pop
or
addr16
xor
mov
xchg
xchg
imul
add
sbb
jne
mov
frstor
iret
int3
int
dec
lea
cmpsb
or
cld
sub
insb
pushw
inc
add
adc
mov
ds
lods
in
das
jmp
jg
clc
movsb
lods
lock
cmpl
fbstp
adc
rorl
push
mov
pushf
dec
fs
mull
xorb
addr16
or
cli
mov
mov
cmc
daa
outsl
addr16
cmp
xchg
aam
icebp
stos
flds
ficoml
mov
fcompl
xor
jle
dec
mov
sub
dec
sbb
loope
rcrl
dec
aam
cmp
push
in
mov
aaa
int
sbb
inc
pop
lcall
popf
push
cmc
sarl
jecxz
pop
cmpsb
jg
movsb
inc
sbbl
fcomps
mov
clc
bound
pusha
sub
push
das
xor
mov
in
xchg
sub
out
mov
xchg
mov
adc
inc
sub
inc
lea
sub
stos
jnp
in
jbe
sub
flds
imul
hlt
je
mov
xchg
popf
cs
daa
pusha
inc
aam
sbb
xor
iret
stos
xchg
or
nop
xlat
daa
popa
test
sbb
aaa
dec
mov
xor
sarb
jg
mov
out
dec
nop
jno
daa
in
pushf
add
dec
loop
cs
pop
xor
or
ljmp
xchg
xchg
mov
push
jmp
or
xorl
cmp
mov
loopne
sbb
fisubs
inc
mov
pop
mov
xchg
mov
test
or
push
add
pusha
mov
and
int3
outsb
mov
mov
mov
add
stc
jo
push
sub
add
cmp
outsl
lds
mov
out
mov
sarl
cltd
push
xor
aam
inc
movups
rorb
xchg
adc
and
repz
clc
fwait
jne
sub
adc
push
cmp
jae
stos
outsl
xchg
sub
sarb
push
sbb
cwtl
or
push
gs
mov
dec
int
movb
sub
pusha
dec
hlt
push
push
pop
dec
clc
mov
mov
stc
pop
xor
loopne
and
inc
xchg
in
test
xlat
mov
pmulhuw
nop
jo
jmp
xchg
jg
pop
dec
rcrl
xor
fwait
call
add
leave
movsl
cmp
mov
stc
leave
test
dec
xor
dec
xchg
cmp
xchg
pop
cmpsl
inc
cmp
mov
sub
std
push
inc
mov
pop
adc
rorl
cmp
mov
clc
pop
sub
dec
repnz
pop
sub
out
sub
in
smsw
mov
mov
scas
or
leave
sbb
jnp
inc
mov
xchg
pop
pop
or
clc
outsb
shl
test
je
sbb
stc
sbb
ret
dec
sahf
daa
pop
add
xor
lods
mov
dec
cmp
cmpsb
enter
sub
and
mov
mov
sub
jno
mov
ds
push
int3
push
mov
jmp
cld
fiaddl
jge
push
je
insl
mov
push
cmp
pop
arpl
dec
cmp
and
sub
jbe
xor
enter
loop
mov
clc
cld
xchg
xor
sub
push
xor
sbb
stos
aaa
jecxz
xchg
cmc
mov
out
push
cltd
or
cltd
insb
xor
pop
push
sahf
xlat
and
in
idivb
dec
or
inc
test
in
fwait
pop
push
js
aas
cmp
mov
clc
xchg
fcoms
mov
pop
sti
inc
adc
xor
popf
jmp
cltd
aad
inc
push
mov
and
or
inc
pop
out
hlt
inc
std
add
leave
sub
and
stos
mov
adc
cwtl
lds
inc
cmp
ja
jl
jl
push
lock
fldl
aam
loope
mov
scas
xchg
sub
ss
movsl
int
ljmp
adc
repnz
js
loop
lods
add
pop
adc
xchg
inc
mov
xchg
sub
add
mov
pushl
dec
int
xchg
insb
mov
pop
mov
lret
mov
int
sub
mov
inc
or
outsl
loop
dec
iret
mov
mov
insl
xchg
inc
js
fstps
jae
ficompl
gs
pop
mov
push
sti
orl
popl
popa
mov
cmp
movsb
push
cwtl
cmc
outsl
xlat
add
dec
adc
xchg
test
popa
inc
mov
mov
xor
fidivs
das
mov
stos
push
lock
mov
push
stos
xor
xchg
loopne
jecxz
ljmp
sub
sbb
jne
test
or
data16
and
std
mov
mov
out
nop
test
mov
std
out
ret
mov
xor
movsl
push
enter
jmp
sbb
ss
icebp
testb
jmp
in
or
mov
sahf
jnp
jmp
gs
das
push
lods
ret
orb
mov
iret
mov
repz
gs
xchg
orl
fistl
xchg
pop
jnp
mov
push
in
std
mov
cltd
dec
inc
mov
mov
jns
fimull
mov
fmull
mov
nop
mov
lea
sub
enter
sub
push
push
loop
sahf
into
push
std
jae
outsb
xor
arpl
ds
mov
jo
lds
cmp
mov
mov
jmp
mov
cs
pop
push
bound
hlt
js
popf
add
push
mov
dec
or
ror
jbe
jbe,pt
cmp
lret
and
cmc
sbb
pop
dec
test
clc
outsl
cmpsl
sarl
jecxz
hlt
sti
scas
or
xor
insb
shrl
je
test
fcoms
inc
and
int3
fdivrp
test
cmpl
and
jp
jne
popf
add
cld
pop
dec
notl
or
mov
add
xchg
mov
scas
enter
mov
lcall
add
scas
inc
cmpsl
adc
ss
aam
dec
aad
pop
test
lods
cmp
adc
cmpsl
arpl
std
popa
push
test
push
mov
idivl
lret
popl
dec
repz
jae
hlt
and
sahf
cmpsb
movsl
xchg
adc
xor
and
mov
push
fs
loope
adc
lcall
imul
test
outsl
cmp
push
enter
faddp
cmp
mov
mov
and
incb
test
xor
pushf
pop
shlb
pop
pop
fldl2e
gs
test
mov
mov
or
jne
out
cmp
and
mov
sub
loope
dec
jmp
mov
xor
mov
sub
negl
cmp
fwait
push
test
xchg
xchg
loopne
iret
push
stc
es
xchg
sbb
cmp
jo
bound
dec
cld
lods
iret
pop
shlb
cmpsb
scas
push
dec
clc
nop
fdivl
cmpsb
loopne
dec
das
sbb
scas
jmp
loope
jnp
mov
in
dec
xchg
scas
in
imul
popf
dec
jg
int3
jmp
ja
popf
mov
cmp
jno
cwtl
lea
xchg
push
xor
jno
and
repz
cmp
mov
jg
add
mov
or
jl
lds
jg
lahf
test
push
mov
mov
repz
push
adc
xchg
mov
or
popf
mov
sbb
pop
imul
pop
ljmp
pop
sub
pop
loopne
sbb
aam
xchg
jns
bnd
add
pop
fidivl
lds
and
and
stc
cmp
mov
sbb
cmpsb
mov
push
ds
fwait
push
sbb
mov
dec
xor
cmp
ja
cmp
insb
add
scas
lock
sahf
xchg
addr16
in
inc
xchg
lret
adc
nop
negb
xchg
push
push
xchg
loop
mov
xor
mov
mov
lds
lret
das
adc
cmp
add
add
pmaddwd
fsubs
sub
jae
or
inc
xchg
inc
cld
inc
insl
xlat
dec
and
or
cmpb
stos
pop
fcoms
cmp
xor
imul
mov
mov
enter
mov
test
jge
xchg
xchg
gs
cmp
jg
cmp
dec
inc
push
mov
out
jno
inc
and
pop
dec
cmp
mov
mov
sub
stos
cmc
fscale
into
jbe
adc
das
test
push
dec
or
leave
or
and
cmp
mov
inc
out
jno
mov
ds
ret
mov
sub
cmpl
fidivl
xor
fimuls
inc
in
dec
sbb
dec
sbb
rol
xchg
ja
dec
mov
pop
pop
jns
sub
mov
jne
mov
push
jge
sbb
add
jnp
sti
pop
push
ljmp
stc
xchg
and
mov
rolb
mov
out
es
inc
xchg
std
test
add
cmpsb
push
mov
cmp
mov
test
cmc
into
pushf
cmp
pushf
rorl
xchg
das
cmp
inc
mov
cmpb
es
mov
nop
repz
sbb
mov
jecxz
xchg
ret
inc
out
mov
sub
ljmp
dec
pop
popa
lock
ljmp
bound
out
add
mov
seta
and
int3
mov
stc
mov
xchg
xchg
popl
jp
xor
xchg
push
mov
adc
jecxz
idiv
jns
mov
jg
mov
mov
add
enter
or
lds
aas
in
fsub
scas
testb
pop
aaa
or
popf
and
lret
lds
cmp
inc
mov
pop
push
inc
cmp
jns
or
mov
jge
outsl
mov
cld
sub
orl
push
ret
or
test
jne
lret
mov
mov
loop
dec
int3
adc
out
lods
push
push
lea
imul
adc
sub
test
sbb
or
roll
ds
xor
aaa
push
insl
stc
jb
test
aam
mov
bound
mov
aas
bound
cmp
adc
ficoms
and
sub
sbb
xchg
fmulp
inc
lock
cmpsl
aad
mov
dec
enter
pop
and
int3
adc
aaa
dec
adc
cmpsb
jl
adc
js
mov
jmp
add
in
mov
outsl
xor
cmpsb
push
mov
sti
and
jae
mov
push
nop
xlat
cld
cmp
add
aad
dec
inc
enter
loope
mov
mov
xor
adc
xor
jno
and
addr16
lcall
jmp
inc
jg
shrl
sub
vcvtdq2ps
mov
inc
in
testl
sub
pop
ret
jle
movsb
lea
ja
xor
stc
popa
jae
js
std
add
nopl
sahf
cmc
in
cltd
inc
sti
aad
int3
in
popl
add
cmpsl
loopne
fldcw
push
dec
cltd
push
sbb
imul
scas
add
cltd
xchg
inc
in
leave
in
ljmp
iret
bound
jp
and
mov
loope
xchg
jl
shl
mov
loopne
and
mov
outsb
fs
pop
lahf
test
aas
sar
insb
fucomip
aas
inc
push
icebp
jno
adcl
jmp
push
xchg
es
mov
inc
jae
inc
add
mov
mov
pushf
xchg
lods
dec
popa
sub
push
sub
sub
cmp
in
out
jae
mov
xchg
or
cli
insl
imul
clc
decb
ret
stc
lods
adc
dec
jle
adc
repnz
dec
in
aad
pusha
jmp
xchg
out
fisttps
test
xchg
push
jmp
dec
pop
jge
push
mov
in
cmc
add
or
jno
cmpsb
xchg
and
push
dec
dec
imulb
rcrl
sbbb
sub
mov
mov
mov
fistl
pop
sti
cmpsb
leave
jp
les
les
push
push
add
xor
pop
inc
xchg
lar
push
jno
hlt
sbb
xor
mov
test
sti
shr
adc
jl
dec
fidivrs
fwait
aad
push
or
or
call
mov
insb
xor
cli
jmp
or
xchg
divl
loop
push
mov
jmp
sub
out
ret
shrb
push
add
xor
imul
push
stos
shlb
and
lea
jb
mov
test
decb
jecxz
mov
testl
leave
xchg
out
jbe
lret
mov
xor
dec
mov
or
movsb
mov
add
aaa
mov
daa
testb
push
jmp
inc
out
mov
and
int
or
into
lret
or
hlt
xchg
or
pop
cmp
lock
pop
fisubs
enter
stc
ljmp
pusha
push
lods
add
leave
or
jae
lea
addb
and
push
adc
cmp
pop
lods
dec
or
aam
negl
imull
negb
dec
add
out
addr16
cmpsl
addl
and
inc
arpl
ljmp
jne
cmp
jbe
mov
les
mov
cmpsb
shll
sarl
rcl
mov
adc
testb
scas
and
push
je
lret
adc
adc
cmc
orl
leave
fistps
push
mov
in
pop
add
testb
push
cmpl
or
or
shll
clc
pop
dec
jo
out
adc
cmp
push
jnp
mov
rorl
sahf
mov
push
dec
aas
test
xchg
dec
adc
inc
push
mov
cmpl
sarb
dec
sar
mov
or
dec
sti
xchg
or
mov
rcrl
and
loopne
jg
ljmp
test
pop
daa
sbb
insb
sbb
push
pop
xchg
jp
cs
add
popf
ret
lock
sahf
es
aaa
fcmove
aad
adc
pop
ds
sti
mov
in
xor
ret
imul
jo
mov
xchg
mov
movsb
out
sbb
enter
pop
fwait
std
mov
sub
stc
push
push
mov
pop
lret
mov
mov
aad
mov
stc
or
pop
sub
ss
xor
lret
aaa
imul
adc
cmp
mov
pushl
fmuls
mov
cld
mov
cmp
xchg
ss
sbb
rcll
fsubs
in
mov
xchg
icebp
insl
inc
cmp
xor
push
pop
push
faddl
mov
ss
xchg
dec
aam
inc
jmp
cs
fistps
xchg
sbb
rol
jbe
popf
push
cmpl
aad
mov
aaa
icebp
mov
ss
push
push
rcrl
fwait
and
sub
outsb
movsb
push
pop
jmp
dec
cmp
loopne
enter
pop
loope
shll
jmp
and
in
pop
sub
cwtl
loopne
push
les
int3
out
ret
repnz
adc
je
sbb
xchg
or
sti
adc
pop
fists
lret
sbb
dec
mov
outsl
leave
push
xor
jp
pop
cwtl
ss
cmp
andl
mov
xchg
or
addr16
inc
outsb
jns
je
pusha
stc
inc
xlat
inc
jecxz
mov
in
push
xchg
fdivrl
loop
mov
loop
or
pop
mov
pop
or
push
inc
data16
pushf
jecxz
lahf
cmpsl
sbb
dec
nop
xor
inc
push
jge
movsl
xor
lahf
aad
mov
sahf
lret
mov
negb
stos
int
cmpsb
xor
dec
add
or
fxtract
fs
fisubrl
test
out
addr16
and
bsr
movsb
imul
lret
aas
insl
sbb
aas
ss
mov
cld
rcr
js
pop
mov
sub
and
test
mov
nopl
stos
xchg
arpl
mov
sub
pop
push
into
xor
jno
scas
sub
leave
stc
hlt
movl
outsb
mov
push
jg
jge
testb
dec
rcl
stc
mov
insb
push
add
pop
loopne
shrb
enter
sub
dec
lea
nop
sub
push
insb
fsubs
inc
jg
xlat
dec
push
mov
pop
out
or
push
fcoml
lcallw
lret
mov
add
pushf
adcb
pop
inc
dec
popf
inc
dec
or
push
out
mov
out
dec
sbb
addr16
jbe
adc
outsb
popa
lds
pop
push
rcll
sbb
xchg
pop
out
cmp
adc
addr16
pop
cs
cmpsl
push
test
fisubl
stos
push
es
dec
movsl
xchg
fs
loopne
mov
mul
stos
or
push
jnp
push
mov
xor
pop
jg
xor
pop
mov
and
dec
fwait
mul
cmp
js
lcall
test
imul
sub
ret
adc
fldl
fmull
hlt
mov
out
jnp
mov
jecxz
pop
int3
pusha
mov
andb
fwait
mov
sbb
lret
scas
ret
add
cmpsb
and
cmp
cwtl
in
cld
sub
jge
test
ja
adc
xchg
or
and
shll
test
add
lret
mov
jb
aad
xor
cmp
adc
xchg
add
jnp
movsl
and
cmpsl
adc
dec
cltd
jle
sub
mov
fs
stos
mov
add
fs
pop
and
push
decl
push
mov
sub
sub
jge
lcall
push
mov
xor
imul
iret
aam
and
jmp
jo
ret
dec
jle
loopne
mov
cmp
cmp
loop
adc
shr
dec
sub
pop
and
mov
call
fcoml
inc
mov
cltd
das
jb
sub
ficompl
jmp
out
movsl
shll
jmp
adc
cmp
mov
pop
mov
cli
sub
popa
add
pop
fistpll
cmp
jo
sbb
bound
add
iret
or
sbb
popa
mov
out
int
add
or
pusha
outsb
sti
jmp
cmp
in
inc
lahf
fstpl
std
dec
insl
xchg
and
xlat
add
out
jbe
adc
lods
fbstp
jne
subb
cld
push
in
sbb
dec
out
and
daa
push
and
mov
jb
mov
xchg
inc
shll
pop
xchg
fwait
inc
push
cmp
xchg
ss
mov
daa
aas
fnsave
xlat
mov
mov
xor
add
in
aaa
xchg
rcr
ja
sub
lock
xchg
aas
inc
xor
ret
scas
addl
or
outsl
xor
imul
jg
push
mov
sub
dec
fnstcw
popf
stos
js
jns
mov
jnp
sbbb
mov
push
pushw
jo
aas
test
iret
mov
jle
adc
outsb
push
pusha
lret
mov
aas
add
jmp
dec
mov
push
mov
movsl
add
adc
xor
cmp
arpl
pop
movsb
test
mov
jle
pmulhw
ror
stos
jo
push
fcoml
xor
inc
mov
daa
xchg
lahf
outsb
inc
xor
addl
cltd
mov
loopne
test
xor
or
inc
shrl
push
jge
cmpsb
xor
mov
clc
into
jb
jp
push
xor
push
rorl
pop
lret
sbb
push
bound
out
mov
xchg
mov
inc
insl
cmp
adc
pop
cmp
jecxz
push
add
pop
pop
push
dec
inc
push
stos
xchg
push
inc
mov
punpckldq
popf
jp
jg
in
xor
outsl
clc
mov
cwtl
arpl
add
xor
popa
jae
pop
sbb
jne
iret
push
add
pop
add
ja
mov
ret
mov
inc
fstpl
les
dec
jg
lcall
insb
fisubrl
mov
or
cmp
and
mov
mov
mov
mov
push
mov
imul
pop
dec
es
in
movsl
sbb
pop
xchg
pop
psubusw
mov
pusha
movsl
idivb
dec
xchg
push
inc
xchg
adc
xor
outsb
inc
loop
les
sub
pop
lods
loope
pop
xchg
mov
push
xchg
cs
mov
or
div
fs
andb
jp
movl
xlat
frstor
aad
stc
push
shlb
sarb
imul
add
lea
test
pop
stos
shlb
das
shrl
popf
sbb
jne
fstps
adcl
lcall
cld
inc
add
shll
jns
add
into
movsl
xchg
movsb
nop
in
xor
cmpsb
loop
inc
or
add
pop
cmp
sub
xchg
es
push
cmpsb
clc
idiv
mov
ljmp
dec
int3
push
sbb
stos
test
push
xchg
arpl
nop
stos
popa
add
popa
js
outsb
js
cmc
mov
and
xchg
repnz
andl
xlat
mov
scas
push
imul
add
iret
adc
cmp
lcall
add
out
outsb
adc
xor
jno
push
cmpsb
xor
or
sbb
push
cmpsl
or
jnp
pop
and
jp
lahf
or
rcrl
jp
add
ffree
pop
add
push
sbb
dec
fdivr
or
scas
push
mov
inc
pop
xor
insl
inc
mov
leave
lock
rcrl
push
jb
xchg
xor
jnp
lcall
mov
mov
jb
addr16
jecxz
push
mov
iret
cmp
out
loopne
lods
loope
add
or
stos
cld
pop
pop
clc
sbb
stc
repnz
and
fisttpl
mov
imul
outsb
mov
nop
or
test
addr16
fcmovbe
xor
out
test
adc
int3
lods
inc
push
xchg
add
ja
dec
xor
mov
fldt
xchg
sbb
mov
es
imul
mov
add
sarb
sbb
mov
sub
arpl
sub
inc
cmp
out
dec
js
pop
push
pop
leave
ret
push
and
fwait
push
hlt
xor
mov
lcall
add
adc
xchg
mov
pop
xor
adc
and
cwtl
ljmp
jno
dec
sbb
push
gs
and
sbb
dec
outsl
mov
je
js
pop
xor
dec
mov
pop
push
gs
dec
mov
adc
dec
hlt
leave
das
jg
pop
fdiv
dec
dec
aaa
mov
xor
jl
ds
xor
div
lods
mov
add
clc
movsb
lea
xor
add
jp
xor
mov
mov
hlt
push
pop
fisttps
add
dec
adc
sbb
cmp
stos
repnz
fildll
test
jmp
cmp
mov
xchg
and
adc
xor
dec
xchg
inc
std
adc
adc
adcl
xor
xchg
out
popf
fwait
inc
nop
mov
lahf
push
dec
push
mov
je
lahf
sbb
leave
jg
jp
stc
aaa
ljmp
pushf
sbb
imul
in
lahf
mov
fisubrs
jo
push
iret
cmpl
sbb
add
divb
mov
mov
addb
cmp
shr
ret
lock
ss
jne
mov
mov
inc
out
arpl
fs
jne
lahf
sahf
jns
bound
inc
or
lock
mov
int
outsb
mov
mov
shll
jl
mov
mov
fdivp
mov
mov
and
and
pop
mov
bound
mov
out
outsb
mov
test
aaa
jnp
std
cmpsl
shlb
xor
adc
mul
and
stos
push
aas
fimuls
xchg
pop
testl
rep
mov
shll
neg
in
cmpb
xchg
out
mov
or
jge
mov
or
shrl
out
sti
jle
pushf
insl
cmp
out
enter
jae
aas
sbb
test
lock
retw
lods
adc
imul
jl
scas
lret
das
adc
int
scas
out
jno
outsb
shlb
dec
aaa
int3
in
dec
adc
cmp
test
insb
push
inc
lds
xor
cwtl
mov
inc
inc
inc
stos
cmp
scas
gs
icebp
shr
fistpl
push
das
mov
sub
xchg
ret
inc
mov
cli
int3
xor
shlb
fsubl
loope
pop
xor
jmp
jle
cmp
stos
cmp
adc
mov
roll
fbld
xchg
adc
leave
fwait
inc
aas
jnp
or
cmp
pushl
inc
divl
xchg
inc
sbb
dec
add
push
dec
push
test
inc
add
mov
icebp
dec
pop
jmp
ja
mov
cmpsb
sbb
dec
jb
dec
ret
xor
pusha
cmp
and
in
push
pop
push
out
inc
addr16
nop
in
cmc
in
icebp
loop
lods
ljmp
shll
and
gs
jl
or
insl
xchg
daa
imul
gs
outsb
clc
push
and
imul
pushf
pushf
icebp
inc
mov
scas
lods
push
or
xchg
push
sbb
pushf
test
and
fs
push
or
jnp
cld
dec
insb
mov
scas
es
insb
cmpsl
sbb
cmc
or
js
cwtl
mov
repnz
dec
xchg
add
mov
in
arpl
pop
ret
jb
shrl
rcl
push
dec
pop
test
jl
xchg
test
loop
sbb
popa
xor
and
psrad
xlat
xor
adcb
push
inc
sti
ret
repz
aad
or
repnz
pop
call
andl
fstpl
in
mov
mov
add
pop
fldl
xchg
adc
jne
hlt
and
or
jno
add
sub
clc
xor
dec
lret
add
addr16
pop
cmp
sbb
es
push
icebp
das
lods
cmc
push
mov
rol
mov
lods
ret
outsb
xor
mov
ret
stos
mov
jbe
in
ret
jecxz
cmpsl
mov
ljmp
inc
es
pop
arpl
jecxz
dec
push
cmpsl
insl
lods
shlb
dec
cmp
xor
mov
pusha
mov
mov
notb
cmpsb
fsubl
into
dec
call
stos
pop
sti
lret
roll
mov
lret
rcll
fcoml
mov
repnz
iret
push
gs
sbb
arpl
jnp
cmp
jne
jns
fwait
mov
xchg
dec
cmp
and
fmuls
or
push
cmp
add
mov
cmc
repz
dec
xchg
push
adc
xor
push
aaa
cmpsb
push
lcall
push
jnp
lret
icebp
push
mov
dec
sbb
push
add
add
lcall
xlat
pop
sub
mov
iret
or
loope
mov
dec
adc
scas
mov
ret
xor
jle
and
adc
adc
int
mov
mov
mov
pop
xor
push
imul
dec
sbbl
lretw
mov
and
and
and
std
mul
daa
lahf
ret
sbb
movsl
or
fimuls
or
leave
ret
cmp
fsubrs
jne
out
push
cwtl
imul
cmpsb
gs
inc
or
inc
sub
mov
pop
mov
add
lea
jl
lea
pusha
aas
dec
cmp
lds
repz
sti
mov
inc
jne
lea
cltd
cmc
mov
cltd
mov
mov
fsubrl
or
jecxz
mov
clc
push
fs
fnstsw
pop
adc
lahf
cmp
push
movsb
mulb
movsl
loop
pop
andl
rolb
fdivs
jecxz
lods
mov
adc
pop
mov
xchg
sub
es
in
jno
ret
mov
or
sub
in
rclb
pop
or
xor
mov
mov
push
jmp
mov
pop
lds
out
push
inc
or
adc
and
nop
jmp
das
dec
ds
jmp
mov
lret
push
mov
jmp
sub
sbb
sub
add
sbb
enter
rolb
js
xchg
or
mov
jae
imul
in
fmulp
xlat
add
mov
xor
ret
pop
dec
or
push
push
fsubr
mov
repnz
xor
ljmp
adc
cmp
inc
ret
push
jge
je
and
dec
je
int
les
in
lcall
xor
rcrb
rolb
cltd
lea
jne
dec
sbb
testl
pop
xor
fwait
test
mov
mov
lods
sub
gs
rclb
or
stos
cmpsb
stos
sahf
sub
lret
or
jg
pop
or
mov
andb
push
mov
das
push
out
mov
ret
into
rcl
xchg
test
test
sub
lds
outsl
cmp
sbb
xor
mov
push
sbb
lods
ja
lret
sub
mov
es
or
lret
das
xchg
add
cli
mov
inc
lcall
dec
xchg
ret
sub
push
push
cmc
jg
adc
sarl
inc
mov
inc
loop
fwait
pop
or
bndldx
xor
cmp
ljmp
xor
nop
jo
sbb
cld
ret
add
gs
push
sub
icebp
rorb
movsl
addl
lds
jge
lret
lds
push
dec
out
mov
or
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
mov
rolb
orl
mov
pop
cmp
push
pushf
jae
ljmp
cmp
call
ljmp
insb
jns
movsl
xchg
sbb
iret
mov
adc
dec
testb
loop
push
mov
jno
inc
insb
xorl
gs
dec
jp
xor
iret
andb
xchg
loope
dec
add
inc
mov
mov
inc
mov
dec
sbb
aas
mov
repnz
dec
addb
mov
fisubs
push
push
xchg
stos
xchg
sbb
mov
or
pop
in
or
sbb
or
ds
fs
inc
jno
jp
pop
fucomi
xchg
xlat
ja
icebp
movsl
inc
nop
and
lahf
out
or
mov
sbbb
xor
xor
pushf
push
jo
jbe
loope
mov
jge
or
sbbl
out
js
push
test
push
mov
sub
idiv
cmp
push
mov
pop
enter
fcomp
add
ljmp
lret
jnp
mov
fmull
movsb
cmpb
add
pop
push
sarb
pop
xchg
push
mov
adc
mov
jecxz
divl
jb
mov
cmc
mov
fs
xchg
rcrb
pushl
iret
loop
je
pop
pusha
xor
mov
lds
lea
mov
call
mov
jge
rorl
repz
mov
pop
mov
imul
fsts
cmp
lea
or
xor
xchg
and
jne
aaa
stos
cmpsb
dec
mov
inc
xchg
mov
xchg
arpl
cltd
es
fdivr
daa
stos
mov
das
mov
out
lods
shll
push
lock
arpl
out
jns
dec
inc
push
fistl
add
int
nop
cmpsb
repz
ss
inc
inc
or
loope
adc
lods
jne
mov
mov
pop
cli
insl
mov
clc
inc
mov
enter
inc
cmp
push
jg
es
xchg
lahf
jae
dec
popa
xor
movsb
xchg
outsl
mov
and
jo
sti
fldcw
dec
clc
repnz
fisttpll
imul
inc
adc
xchg
popa
push
ja
pop
add
inc
leave
iret
loop
pop
add
inc
data16
insl
arpl
sbb
mov
inc
or
adc
and
mov
fisubl
shlb
sbb
fadds
mov
xchg
adc
sarb
lods
test
stos
les
rorl
ds
xchg
lahf
fwait
or
stc
push
xchg
loopne
out
xor
movb
or
out
inc
mov
xchg
mov
data16
ret
movsl
int3
xor
sbb
xchg
and
xchg
push
jp
mov
sub
pusha
int3
shlb
push
mov
shlb
lods
sbb
adcl
pop
mov
dec
cs
xor
sub
imul
mov
jae
inc
pop
sub
sub
pop
xchg
add
test
inc
fldcw
in
icebp
lods
pop
popf
test
stos
je
jl
sbb
scas
mov
lods
pop
jb
push
les
cmpsb
shlb
loopne
lea
adc
cld
sub
fucomp
mov
movsb
fs
lea
ror
rcrl
mov
adc
sub
repz
icebp
dec
sub
jae
xchg
sub
sbb
mov
int
mov
fistpl
or
xor
stc
hlt
push
repnz
mov
daa
frstor
in
inc
sub
pop
jmp
inc
add
mull
jl
and
jns
mov
sbb
xor
pusha
and
adc
jge
js
adc
shrl
pop
aas
cmc
js
lods
mov
leave
mov
xchg
add
dec
icebp
mov
lret
dec
pushf
lcall
and
sub
cmp
test
notb
jecxz
lret
fcmovnu
or
filds
adc
xchg
popf
xchg
add
pop
pop
movsb
push
cs
mov
pop
sti
inc
cmp
lds
xchg
mov
in
mov
insl
xor
cmpsb
and
inc
scas
hlt
adc
cmpsl
cmp
and
xorl
pusha
xchg
pop
testb
rcl
out
sbb
gs
aas
push
mov
repz
push
xchg
dec
xor
aad
loopne
or
dec
repz
enter
and
dec
addb
sti
arpl
inc
jp
fisttpl
pop
imul
xor
mov
or
cmove
adc
sub
push
jmp
rcrb
nop
jmp
dec
pop
jle
cld
js
es
and
mov
idiv
mov
ficoml
mov
notb
mov
enter
mov
xchg
jne
call
sahf
out
lret
mov
pushf
dec
push
ret
pusha
in
xor
jle
inc
inc
jne
mov
sub
or
js
mov
or
fbstp
xchg
movsb
jnp
pop
cld
iret
adc
popa
and
cmp
fwait
and
dec
or
sti
mov
je
ja
or
in
xor
enter
lahf
adc
clc
lods
fstl
into
and
stos
mov
xor
jmp
push
test
xchg
jl
jae
or
jg
loope
mov
rol
fs
xor
push
fdiv
movhps
add
jg
inc
pop
push
push
pusha
aad
out
pop
sarb
mov
repz
subb
stos
insl
aaa
pushf
dec
test
out
add
xor
ret
je
mov
gs
pop
in
mov
loopne
push
dec
pop
mov
stc
mov
xor
sbb
jle
push
fldcw
pop
ja
inc
mov
mov
stos
inc
outsl
cmpsb
insl
int
mov
les
mov
mov
daa
push
and
call
adc
shlb
push
push
mov
popa
lret
push
push
loopne
daa
in
out
mov
daa
enter
pushf
mov
mov
adc
les
jno
popl
adc
xor
push
jb
xor
fs
lock
insl
cmpsl
sahf
xchg
movsb
lret
cmp
push
xchg
cld
mov
mov
inc
test
fbstp
fld
js
je
fwait
hlt
inc
gs
jae
cmpsb
jae
add
jmp
inc
jmp
cld
fwait
mov
cmp
dec
mov
lods
dec
adc
mov
adc
and
add
inc
aam
inc
dec
push
dec
xorps
mov
push
push
lock
adc
std
leave
push
movsl
imul
lret
insb
shll
sub
dec
jbe
imul
in
sti
in
jle
imul
out
mov
or
adc
es
push
add
out
cmp
jbe
jl
push
adcb
and
lret
mov
cmpb
je
movl
and
je
fadd
mov
divl
inc
mov
xchg
cmc
je
scas
pop
xchg
insl
int3
mov
shl
xchg
sbb
ret
loopne
push
in
adc
adc
xchg
or
int
sub
or
jo
pop
dec
sbb
pop
sbb
loop
in
adc
mov
mov
int3
test
out
add
sarl
pushf
fadd
push
push
mov
cli
and
jnp
push
jl
aaa
das
cmp
inc
xor
out
inc
jecxz
xchg
xor
scas
or
or
jmp
jl
addr16
inc
test
repz
add
stos
mov
bound
rcll
push
fidivs
ja
pop
jb
inc
xchg
mov
repnz
push
mov
fbstp
mulb
jp
std
arpl
mov
inc
es
inc
cmp
aaa
pop
jne
into
inc
xor
inc
inc
sub
pop
mov
push
xchg
xchg
lret
call
jae
rorl
cmp
jp
movsl
sbb
inc
xacquire
xchg
mov
pusha
scas
push
push
shll
fcoml
lods
lock
sub
push
push
add
add
je
mov
das
xchg
jnp
jne
aaa
jbe
iret
mov
jl
das
add
pusha
loopne
ret
int
pop
sbb
mov
mov
push
sbb
pop
aad
cmpsb
xor
or
cmpsl
cmp
sub
lock
cld
out
xchg
mov
jbe
rcrb
mov
sub
pop
and
stc
add
xchg
mov
pushf
int
xlat
push
xchg
adc
int3
push
mov
stc
testl
mov
cmp
mov
mov
scas
push
movsb
stos
inc
repnz
mov
fnsave
frstor
das
addr16
aaa
mov
nop
loopne
test
adc
or
sahf
jp
ljmp
es
push
xchg
mov
mov
decb
shrb
jmp
jnp
or
jle
add
add
pop
out
xchg
jb
sbb
addr16
jl
arpl
mov
pop
lahf
sbb
add
rcrb
mov
dec
pop
mov
inc
les
rolb
iret
cli
repnz
pop
lcall
sub
push
scas
mov
cli
or
mov
jns
movsb
mov
and
je
push
mov
add
xchg
jnp
mov
fisubrl
cmp
ljmp
jecxz
test
pop
fs
in
addr16
call
cltd
scas
popf
incb
insb
cwtl
jl
and
xchg
popf
rorb
arpl
les
stos
add
cmp
rcrb
ret
roll
fidivrs
fs
inc
movsl
inc
cmc
sbb
sbb
outsb
pop
jo
ja
cmpsl
test
cmp
inc
sbb
sub
mov
in
adc
cmp
mov
sti
jb
xor
out
pushf
pop
mov
imul
jl
mov
or
or
sbb
add
push
pop
fadds
cwtl
add
push
rol
repnz
movb
insl
dec
sbb
ds
rorb
xchg
lret
shll
fcoml
scas
jl
cmp
push
loop
stc
in
xchg
xchg
inc
out
xchg
push
sbb
pop
dec
lods
scas
std
movsl
mov
imul
hlt
fwait
cmp
mov
push
cmp
jb
pop
lret
sahf
pushl
imul
cs
stc
push
jecxz
arpl
ljmp
outsb
sahf
sub
addr16
jg
jg
xchg
pop
lret
adc
arpl
pop
jns
icebp
sub
inc
pusha
outsb
cmp
clc
movsl
add
fs
lea
js
mov
and
test
outsl
mov
iret
std
in
jns
enter
shl
inc
xchg
xor
cltd
adc
daa
mov
or
mov
sub
fisubrs
js
out
jg
jne
xor
inc
fldcw
ja
rcrl
sbb
sbb
scas
jb
ret
rcrb
stos
ljmp
dec
sub
dec
sub
push
pop
loop
pmulhw
xor
int
gs
sbb
sahf
cmp
pusha
pop
mov
inc
test
mov
xor
add
rclb
pop
pushf
jo
lds
adc
xorl
mov
dec
sub
fnsave
iret
scas
daa
jnp
sub
push
in
scas
iret
mov
mov
repz
sub
add
daa
loop
cmpsl
xchg
cmpb
daa
sarl
scas
xor
inc
jl
pop
mov
inc
fmull
xchg
neg
scas
and
cmp
div
flds
push
lods
bnd
jge
mov
cltd
loope
mov
iret
xlat
sarb
mov
cwtl
add
lods
fs
xorb
dec
sbb
pop
xor
pop
cli
add
lret
fdivrl
mov
pusha
roll
fcmovb
fld1
dec
mov
pushf
int
sbb
jb
fistps
jecxz
add
dec
add
loope
and
mov
imul
fildl
js
test
push
xchg
pusha
or
mov
push
push
pop
xor
aad
dec
lahf
and
xlat
rcll
popa
imul
xchg
outsl
cmp
sahf
out
jmp
popf
test
push
sbb
and
jb
pop
arpl
dec
stos
cltd
push
mov
jle
adcl
cmp
or
dec
mov
hlt
leave
sub
xchg
pop
push
ja
pop
adc
inc
loope
sub
xor
mov
dec
mov
lea
mov
subb
hlt
ss
enter
shlb
inc
fnstcw
or
sbb
mov
movsl
jp
mov
leave
aam
dec
cmc
pushf
add
lods
sahf
xor
or
sahf
mov
jmp
add
jae
jecxz
adc
add
sbb
fwait
outsl
or
sub
pop
clc
mov
dec
cld
sbb
cli
idiv
xchg
sbb
jnp
inc
or
push
push
orl
cmpsl
xor
mov
js
push
aaa
mov
mov
pushf
dec
add
cltd
jbe
cmp
pop
mov
ljmp
movsl
ja
xor
xchg
sub
pop
push
js
icebp
cwtl
xlat
test
jo
popa
jle
insb
ja
pushf
and
xchg
xor
enter
mov
gs
pusha
mov
jle
loop
clc
mov
in
fs
and
dec
out
popf
cmp
cmpsl
mov
mov
inc
jo
or
fldt
lahf
sub
add
je
addr16
bound
std
push
mov
nop
fstpl
sbb
bound
cmp
sbb
xor
cmp
stc
and
sbb
cmp
fistpll
xorb
sarl
lods
fsubs
or
mov
cwtl
cmp
jno
sbb
cmp
popf
clc
insl
cmc
shll
jle
dec
repz
dec
sbb
inc
aas
jp
mov
outsb
dec
daa
inc
das
cmp
les
jle
lahf
icebp
ret
into
xchg
bound
lret
mov
mov
ja
xor
rcll
outsl
sub
pop
pop
lret
jecxz
sub
rcl
push
ror
lods
dec
lods
inc
push
mov
dec
push
in
inc
mov
into
sub
daa
xchg
cmpsb
out
dec
sub
xlat
subl
test
fwait
jbe
mov
lret
aam
cwtl
ja
jmp
movsl
rcll
outsl
xchg
popa
repz
add
pop
push
jne
out
ret
pop
aam
clc
adc
sub
and
sub
lds
inc
sti
or
popf
inc
lcall
fidivrl
outsb
lock
inc
sbb
aam
cmp
ja
cltd
orl
mov
push
adc
xor
cli
sbb
add
insb
push
incb
lds
push
mov
fmuls
sbb
push
push
int3
sub
scas
shrb
test
aam
test
addr16
mov
imul
jne
mov
fidivrs
xlat
ja
mov
je
dec
fbstp
xchg
push
jb
dec
sbb
xchg
shl
enter
outsb
in
stos
cmpsb
mov
xchg
rorl
pop
filds
lods
rolb
shrb
push
mov
dec
int
cmc
mov
aaa
cmpsb
loope
sahf
adc
lcall
push
dec
or
lret
or
cwtl
out
inc
fidivrs
mov
pop
xlat
cmp
xlat
jbe
xorl
call
inc
sbb
in
add
es
orl
ds
dec
sub
mov
sbb
mov
cmp
push
fldl2t
cli
ret
jnp
push
mov
fbld
inc
sub
jnp
repnz
inc
movsb
addr16
xor
dec
jecxz
jmp
dec
sub
xchg
pop
push
subl
mov
lret
mov
leave
mov
push
pop
aad
cmpsl
decl
pop
divl
mov
add
rcll
mov
movsl
lds
cmc
xchg
dec
sub
lea
lret
scas
ss
lret
adc
in
sarb
or
cmp
test
fs
loope
mov
pop
imul
mov
out
and
fldenv
sbb
dec
xchg
test
push
jns
sub
jnp
mov
lock
jb
xchg
neg
add
fwait
stc
xor
push
lcall
cmp
ret
add
sbb
cltd
sub
stc
mov
pop
lcall
js
outsl
jo
add
sub
es
cmpsb
or
mov
push
mov
mov
or
popf
and
mov
test
leave
mov
pushf
sbb
mov
sub
mov
fidivrs
lea
cs
add
mov
test
or
nop
pop
xchg
imul
and
shll
push
fimuls
int3
js
xchg
add
dec
push
jns
imul
iret
mov
loop
xchg
jae
jne
sti
xor
mov
mov
mov
ss
jecxz
add
mov
xchg
sahf
xchg
je
cmpsb
inc
lock
cmpsl
mov
ljmp
sbbb
add
mov
test
push
adc
adc
mov
xor
repnz
push
fcompl
push
mov
mov
frstor
jmp
add
out
adc
add
gs
inc
jecxz
out
jae
dec
pop
mov
lock
mov
ljmp
test
dec
lcall
adc
adc
cmp
adc
pop
jne
jg
jnp
adc
xchg
cmpsb
pop
sub
adc
out
loopne
add
mov
xor
cmpsl
pop
push
add
in
sub
iret
enter
sbb
pop
cltd
inc
test
mov
in
sub
add
mov
pushf
xor
dec
lock
jno
inc
mov
push
push
test
dec
lahf
mov
dec
mov
sbb
ljmp
jl
dec
gs
ret
rorl
pushf
call
mov
jg
pusha
xor
fcomps
xor
repz
das
cmp
and
pop
push
sbb
xor
mov
jge
stos
popa
fdivrl
es
push
gs
jo
push
cmpsl
jmp
add
dec
in
rcrl
pop
negl
fwait
into
fbstp
jg
pop
pop
aas
inc
test
mov
mov
dec
outsb
lret
cmc
shrb
out
fwait
xchg
dec
pop
pop
pop
stos
das
cs
std
aaa
push
pop
jp
mov
mov
jns
ja
pop
inc
push
lods
dec
jl
cmp
xchg
in
dec
cli
das
inc
test
add
xor
bound
dec
roll
aam
es
or
adcl
dec
jb
mov
repz
es
mov
aas
cbtw
sahf
xchg
xor
lods
pop
out
fldcw
mov
fldt
sub
pop
movsb
scas
mov
mov
popf
push
clc
out
imul
test
add
inc
mov
sbb
sti
popa
lea
sub
mov
push
adc
repnz
aad
shlb
push
lret
dec
dec
lret
lock
enter
xor
sbb
int3
inc
sub
jge
adc
xlat
mov
fstpt
push
iret
push
das
shufps
or
push
lret
mov
jp
repz
repnz
xchg
outsb
iret
addr16
aas
push
call
dec
call
sbb
idivb
shl
push
push
mov
test
test
sub
rclb
xor
pop
push
mov
movsl
jae
mov
push
add
push
loope
loope
jo
loopne
jne
sbb
outsl
adc
movsb
int3
jnp
jnp
pop
pop
sub
inc
inc
cmp
cli
scas
loope
sub
dec
enter
pop
add
das
jnp
mov
fildl
mov
gs
pop
jge
js
fs
and
mov
insl
ret
jo
add
dec
mov
movups
lods
int3
js
mov
mov
ja
xor
mov
pop
mov
push
loopne
ficoms
daa
push
popa
xchg
imul
inc
mov
and
inc
call
loope
repz
pop
imulb
stos
int3
jb
scas
insl
idiv
pop
pop
fnstenv
test
addl
sub
mov
stc
and
xor
fwait
aaa
dec
add
xchg
sbb
xchg
je
add
aas
mov
push
jge
das
mov
xchg
or
and
fwait
cmp
cwtl
rcrb
or
xchg
and
sub
popa
xlat
rol
inc
aad
out
inc
jno
adc
push
sbb
lret
and
or
leave
or
mov
std
bound
lcall
out
popa
cmp
push
push
cmp
clc
mov
jbe
test
push
rorl
mov
out
inc
mov
ds
mov
mov
mov
sub
cmp
fwait
test
rcrw
movsl
mov
loopne
push
imul
cwtl
sub
cmp
push
out
dec
xor
sub
cmp
push
pop
pop
add
cs
or
push
cmp
negb
lahf
mov
xor
sbb
xchg
sbb
loopne
inc
lods
ljmp
pop
filds
pop
nop
cmp
jo
movsb
nop
xchg
fnstcw
loop
out
test
nop
jnp
fimull
cltd
mov
fsubs
xor
cmc
idivb
push
dec
out
adc
mov
pop
fxch
adc
sbb
lods
or
push
mov
iret
xchg
dec
call
cmpsl
test
xchg
cmpsl
test
cs
jge
xchg
mov
dec
pop
and
xchg
ret
lahf
dec
in
sahf
or
and
pop
sti
push
cmp
and
xchg
stos
cmpl
push
aas
clc
mov
out
mov
jle
or
cmp
aaa
push
aas
insb
repnz
pop
arpl
pcmpgtw
test
stos
sbb
fwait
pop
mov
mov
ljmp
icebp
insl
cmp
sti
fsubs
jo
shlb
add
pop
dec
push
xchg
add
add
inc
add
pushf
mov
jl
jne
and
lock
push
iret
xor
rorb
xlat
xlat
cmp
or
mov
in
and
xchg
cmp
pop
sub
sub
subb
jl
sbb
add
scas
nop
fists
add
test
adc
or
xor
push
add
nop
and
adc
or
pop
cld
jno
xchg
arpl
sbb
repnz
jne
sub
or
dec
add
ja
das
es
inc
or
sub
fcmovu
sub
lcall
lods
jmp
mov
scas
out
jnp
mov
pop
xchg
jno
adc
mov
divl
cltd
mov
das
dec
jl
imul
jnp
pop
dec
icebp
addb
data16
rep
and
flds
adc
xor
push
inc
popf
cli
pop
cmpsl
scas
sub
mov
push
push
jns
dec
movsl
iret
cmpsl
rcrb
gs
xor
cmp
xchg
gs
mov
jnp
ja
mov
scas
pop
sbb
orb
iret
jecxz
jne
dec
outsb
es
xchg
bound
cwtl
mov
mov
mov
sti
stc
daa
fimull
fbstp
cmp
xchg
mov
outsb
rcrl
push
inc
sbb
in
jg
sub
sar
out
popa
daa
and
and
out
mov
iret
lods
adc
and
movb
popa
jae
mov
inc
into
movsl
mov
mov
mov
lock
push
ret
inc
xchg
je
ljmp
xor
iret
push
dec
push
jne
fs
push
mov
data16
cmp
call
push
je
sub
jge
movsl
jnp
push
in
mov
jmp
inc
push
cli
jbe
cmpl
sbb
insb
lahf
sti
lds
mov
rcll
dec
mov
clc
xchg
ja
lcall
xor
or
loope
ds
in
jbe
and
jbe
imul
or
or
push
push
fcoml
mov
lock
or
mov
adc
cmp
mov
lock
packsswb
ds
sub
xchg
adcb
cs
pusha
xchg
fadds
sub
pop
jo
lods
pushf
mov
imul
popf
loope
rcrb
or
nop
lds
mov
ret
roll
cwtl
das
cmp
push
cmp
aam
out
popa
loop
out
xor
fs
push
psubb
xor
nop
call
pop
jmp
fildll
cli
dec
movsb
jge
fsubrp
fsubrp
out
mov
icebp
and
xchg
mov
pop
or
cmpsb
in
mov
dec
fcoms
lea
stc
add
movl
and
das
xor
iret
inc
nop
lods
jecxz
out
lcall
into
xchg
push
into
mov
jmp
mov
add
shlb
jge
xchg
sbb
aad
mov
test
mov
ljmp
and
jns
jb
mov
in
int3
xchg
call
stc
cmp
mov
dec
sahf
mov
dec
repz
dec
push
push
hlt
cmp
ljmp
gs
push
iret
lret
or
in
out
pop
mov
mov
dec
sub
push
div
push
mov
negb
sub
push
sbb
lahf
imul
je
mov
loopnew
mov
push
mov
daa
xor
sub
fcomps
push
mov
mov
cltd
sub
or
andl
pop
sub
pop
loop
scas
xchg
push
mov
imul
lds
ds
sbb
sub
lock
sti
push
mov
push
mov
pop
aad
add
aaa
std
in
in
mov
pop
fdivl
adc
add
xchg
addr16
cs
jne
insl
ror
mov
push
repnz
insb
mov
cmpsb
xor
out
sub
shrb
shll
imul
stc
in
int3
jle
xchg
xor
ror
and
std
out
push
fsubs
xlat
xchg
cmp
mov
push
cmp
cmpsl
xor
cmp
imull
sbb
xchg
das
pop
dec
inc
push
adc
sub
inc
jno
ss
imul
push
mov
sbb
sbb
jl
jl
xor
rclb
xchg
jl
jmp
and
les
jne
mov
fisttpl
call
js
out
sub
fadds
imul
cmp
insl
aam
adc
cmp
sub
xchg
xchg
cmp
addr16
pop
out
xor
push
mov
jne
jno
sahf
cmp
pop
std
add
out
jl
popa
and
mov
aad
and
xchg
leave
jecxz
push
fadd
rcrl
inc
fmuls
cs
lods
shlb
les
sbb
sbb
nop
mov
lahf
sbb
negb
cmpsb
push
cmpsb
sti
push
fdivrs
dec
lret
jmp
pop
jp
or
lds
sub
outsl
arpl
sbb
gs
cmpsl
shlb
adc
and
divb
cmc
ret
mov
mov
sub
xor
mov
dec
adc
lds
mov
jle
dec
cmp
mov
in
loopne
push
or
gs
or
loop
xorb
sub
adc
hlt
cwtl
adc
sub
mov
lods
pop
icebp
movsb
cmp
sbb
xor
enter
inc
mov
outsl
push
jp
test
mov
xchg
pop
cmp
out
xor
insl
pop
add
fwait
ret
iret
cmpsl
addr16
cmp
mov
mov
xchg
xchg
loopne
mov
hlt
xor
loop
cli
mov
xchg
cmpb
insl
clc
mov
inc
fprem1
jns
dec
mov
pop
fs
xchg
xchg
push
dec
es
cmc
les
cmpsb
popf
outsl
nopl
idiv
sub
lret
cmc
cltd
popa
jno
xor
dec
les
xor
mov
stc
xorb
fiaddl
aam
mov
inc
dec
jmp
lods
rorl
ss
pop
mov
fldl
scas
cld
jns
jge
negl
xchg
lods
jo
pop
insb
add
in
mov
cld
and
clc
popa
faddl
or
mov
pop
sbb
inc
inc
inc
push
cltd
mov
loope
xor
inc
test
or
sub
ljmp
push
xchg
inc
mov
xchg
add
and
adc
push
in
sbb
ljmp
paddusb
repz
xor
push
pop
lea
add
int
lods
or
pop
cli
push
cmp
daa
or
xchg
inc
inc
cmp
gs
cmp
lea
xchg
in
pop
ja
lret
loop
in
insl
adc
in
lahf
inc
jnp
mov
orl
or
dec
les
clc
cmp
lds
mov
sub
iret
lret
in
cwtl
aas
pop
mov
mov
jl
test
aaa
push
mov
loope
mov
movsl
frndint
ret
inc
mov
daa
mov
insb
int
mov
xchg
ret
inc
cmp
inc
std
sbb
fisttpl
add
or
fnstcw
pop
pusha
jmp
jae
je
inc
jecxz
push
stos
mov
and
mov
rcll
leave
scas
pop
or
xor
add
outsl
mov
inc
test
xchg
pop
sbb
out
test
test
out
mov
faddl
rcrb
nop
sub
sub
fidivl
jae
iret
sti
stos
jmp
dec
test
mov
je
cs
push
icebp
scas
scas
fwait
push
xor
addr16
sti
loope
xchg
insb
add
dec
push
adc
cmpsl
leave
or
cmp
dec
mov
enter
fisubrs
dec
and
hlt
adc
pop
adc
std
imul
add
mov
push
out
cwtl
xchg
loope
and
and
push
xchg
in
out
mov
stos
mov
ss
shll
sbb
push
mov
adc
pop
stos
stos
and
hlt
sarb
cltd
jne
lahf
pushf
mov
mov
fwait
jo
inc
in
scas
adc
data16
fstps
sub
pushf
inc
mov
lret
push
test
iret
inc
sbbb
in
xchg
sbb
addl
test
sbb
and
fistps
fdivr
pop
ret
jecxz
clc
aas
rol
imul
xor
xlat
mov
jb
push
cltd
jge
ret
xchg
mov
mov
outsb
xor
jbe
out
pop
inc
sbb
repnz
xor
stos
push
cmpsb
jae
data16
cmp
fsubr
icebp
clc
dec
or
jb
push
mov
mov
dec
jo
adc
out
sbb
push
cmp
pop
xchg
rcrb
or
shr
or
repnz
xor
lods
xchg
setbe
sbb
loop
in
testb
cmpsb
xor
int3
jbe
or
dec
enter
push
cmc
or
dec
mov
pop
jle
push
popf
icebp
leave
mov
loope
pop
sahf
es
gs
mov
aaa
sbb
pop
dec
mov
hlt
mov
leave
sbb
push
nop
and
push
arpl
call
ret
and
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
movb
addl
mov
sub
out
push
fisubrl
mov
jae
add
xchg
adc
push
push
dec
add
insl
ds
pop
lock
inc
sub
xor
das
out
mov
fs
xor
popl
or
mov
loop
xor
sti
mov
cmp
adc
repnz
inc
push
mov
add
adc
je
push
adc
jnp
adc
push
fistps
mov
lock
add
call
in
int
loop
outsb
jge
cmp
jns
inc
mov
out
inc
cmp
cmp
xor
and
lds
add
mov
lahf
mov
enter
push
mov
mov
mov
add
mov
stc
cld
sbb
jge
loop
push
pop
adc
or
into
out
std
lock
inc
ss
and
std
mov
push
das
xchg
xor
add
js
pusha
fcoms
or
inc
jecxz
inc
mov
fists
sbb
cwtl
xor
xchg
les
xchg
dec
call
push
fcomps
xchg
inc
lea
shrb
cwtl
jne
data16
repnz
pop
cwtl
mov
jp
out
jg
sub
xchg
xor
mov
xchg
jl
movsl
pop
jecxz
lods
xchg
cmp
cwtl
scas
js
mov
jbe
orl
sbb
and
loopne
in
mov
dec
out
lods
mov
ljmp
nop
shrb
scas
stc
test
scas
test
jmp
fsubrl
inc
sbb
in
and
fwait
or
outsb
hlt
mov
in
loope
inc
jp
outsb
mov
jmp
add
out
mov
or
call
js
add
stos
stos
add
je
xlat
pushf
jecxz
ret
adc
movsb
out
enter
and
aad
les
xor
inc
inc
ss
fsts
fdivr
dec
cmpb
cmp
and
push
fsubl
jg
lods
cmc
leave
std
jo
xor
cmp
shl
cld
lea
cmp
xchg
cwtl
sub
mov
mov
ljmp
or
xchg
mov
fcmovbe
aam
cmp
or
ss
and
mov
clc
or
adc
push
je
leave
dec
test
arpl
stc
mov
adc
pop
std
jecxz
in
lcall
jg
scas
and
lods
add
cmp
fcomps
adc
mov
shl
cld
xor
popa
or
test
movsb
push
test
sti
push
test
nop
fbstp
dec
jns
fidivrs
push
mov
jo
shlb
cmp
icebp
in
cltd
clc
push
sbb
jle
popa
and
in
pop
pop
aad
cmp
rorb
jb
mov
dec
pushf
mov
and
in
mov
xchg
clc
in
xor
repnz
push
iret
cmp
xor
sub
jne
leave
jg
mov
stos
mov
fdivl
xchg
xlat
mull
xchg
out
out
fildl
mov
hlt
mov
push
mov
aaa
pcmpeqb
cmp
xchg
mov
sbb
int3
nop
sub
xchg
insl
bound
mov
icebp
mov
adc
lret
pop
bnd
add
mov
push
movsb
cmp
outsb
clc
inc
aas
mov
decl
movb
mov
mov
push
lock
jg
int
xchg
inc
add
pop
movsb
imul
pop
xor
push
xchg
scas
pop
movsb
jmp
dec
xchg
lods
sbb
sub
and
dec
into
push
sub
inc
xchg
inc
hlt
sahf
xchg
lock
mov
cmpsb
adc
xlat
sub
pop
mov
pop
nop
mov
add
daa
jae
fxam
and
lret
inc
sbb
or
aas
jl
scas
fs
imul
jmp
sbb
popl
pusha
int3
andb
rclb
mulb
mov
xor
es
jo
daa
mov
fcmovnbe
and
outsl
stos
mov
fsubl
jno
push
mov
sub
pop
sbb
inc
out
mov
inc
push
and
insb
mov
jns
jmp
ds
mov
lret
and
bound
xchg
push
out
inc
loop
dec
sbb
xor
pushf
push
add
inc
mov
or
shl
dec
out
movsb
jmp
push
dec
jmp
push
pop
cli
mov
cmp
push
aad
repnz
mov
imul
in
or
shlb
daa
out
hlt
scas
mov
cmpb
jns
out
lret
sub
enter
pushf
mov
das
jb
add
dec
and
xchg
jb
xor
fldenv
add
jle
ljmp
jne
sub
xchg
es
xchg
ljmp
pop
xchg
ret
lret
add
and
pop
and
mov
mov
xchg
mov
sarb
test
sub
je
xlat
adc
test
adc
je
inc
out
xor
ud2
jmp
into
fdivrs
mov
ljmp
loop
scas
cmp
loope
mov
dec
sti
in
pop
fidivs
add
mov
lahf
push
loopne
sub
pop
divb
pop
sarb
mov
sahf
xor
pop
pop
popa
mov
fisubs
push
cmp
orl
in
popa
cmp
xchg
dec
pop
push
fld
inc
mov
lea
data16
subl
je
xor
sti
xchg
inc
pop
das
jmp
jbe
or
js
cwtl
fsubrs
mov
aad
test
push
mov
mov
and
and
push
out
cmpl
jnp
dec
lds
sub
nop
call
lea
and
stos
gs
mov
aaa
sbbb
xchg
int
mov
dec
cld
aam
sbb
lea
or
fdivrs
sub
mov
jb
lods
dec
and
and
inc
jmp
cmp
sbb
shll
cld
hlt
call
jg
add
xchg
loop
mov
add
inc
sbb
pop
in
mov
jb
mov
gs
sub
jl
and
sar
sbb
jo
outsb
inc
push
mov
sahf
push
dec
cmc
push
int
and
mull
jmp
xor
jnp
inc
das
leave
jbe
xor
rorl
popf
and
enter
lods
add
jl
aam
fldcw
mov
mov
jnp
mov
dec
fistl
xchg
call
std
mov
mov
xlat
pop
xor
inc
push
je
dec
sub
mov
mov
out
nop
mov
iret
mov
mov
lds
enter
insl
mov
mov
xchg
fisubrl
add
pop
pop
jl
jnp
mov
push
mov
jg
insb
pop
lods
insl
mov
mov
adc
fldln2
sahf
ljmp
in
fiadds
jecxz
inc
or
or
cmp
pop
mov
push
pop
adc
jmp
xchg
jno
adc
into
mov
jle
mov
divb
jmp
test
lock
pushf
clc
sub
jo
push
int
inc
sub
pop
stos
inc
adc
mov
or
sub
shrl
push
andl
repnz
mov
or
jecxz
lods
push
mov
mov
pop
or
popa
jbe
push
mov
dec
loopne
cmp
xor
outsl
xor
test
xor
lds
sbb
inc
ret
push
cmc
cwtl
mov
mov
outsl
push
sbb
push
adc
in
aam
jge
scas
js
and
aam
jmp
push
icebp
mov
scas
sbb
sbb
movsb
mov
cmp
repnz
or
cmp
out
inc
std
mov
fildl
jecxz
or
iret
mov
inc
bound
int3
jb
pop
fisttpl
roll
leave
jle
mov
add
rcr
mov
push
cmp
adc
imul
jns
jb
pop
popa
pop
popf
sahf
or
sub
insb
aam
arpl
xchg
inc
fmulp
mov
int
xor
dec
test
lds
fimuls
aam
inc
test
in
adc
aad
outsl
jp
jns
jnp
fpatan
jmp
inc
adc
data16
arpl
mov
and
out
lea
mov
aas
out
idivb
xchg
cmp
test
leave
hlt
jb
loope
jbe
mov
xchg
mov
mov
inc
loopne
mov
fcomp
xchg
loopne
insb
test
dec
mov
test
sbb
inc
adc
push
rolb
adc
mov
and
jo
or
aaa
testl
mov
repz
xlat
jmp
mov
and
insl
aad
mov
in
cmpsl
push
mov
pushf
add
pop
mov
cli
call
pop
mov
pop
xchg
test
ret
and
sub
mov
sub
cmpsb
mov
or
push
push
mov
sub
sub
movsb
and
out
mov
push
fcompl
fbld
repnz
sahf
lcall
sahf
jo
data16
pop
cmp
addl
and
out
adc
push
leave
sub
gs
push
sub
hlt
mov
mulb
notl
push
test
adc
ret
add
out
push
ds
add
ss
xor
push
arpl
clc
sbb
pop
rcr
sub
inc
jno
jge
xchg
sub
lods
jb
xchg
push
cli
lock
cmp
or
scas
stos
or
lods
xchg
or
addr16
mov
or
nop
mov
sti
push
js,pn
ljmp
lcall
xor
aaa
pop
adc
mov
adc
lods
add
mov
cmp
cmp
jmp
lods
insl
loope
pusha
jbe
mov
enter
std
sahf
movsl
loopne
inc
xchg
in
mov
jle
cli
imull
mov
adc
popa
and
es
cli
and
js
cs
aam
iret
push
repnz
andb
cmpsl
mov
xchg
pop
subl
addr16
add
mov
test
pop
mov
aaa
arpl
in
mov
js
fnstcw
add
mov
mov
cmpsl
cwtl
shll
jns
movsl
inc
sarl
mov
mov
dec
loop
jo
or
push
in
mov
roll
dec
rcr
sub
push
push
cmp
jo
mov
or
pop
rcr
sarl
push
or
xchg
ljmp
faddp
cmpl
adc
add
push
mov
lret
cmpsl
ret
jmp
cmp
jl
inc
mov
das
push
mov
cmp
icebp
popf
sub
bound
jmp
ret
movsb
push
mov
fnstcw
ret
mov
push
stos
dec
fs
adc
lods
pop
jl
rcr
push
mov
sti
aas
nop
push
dec
es
insl
pop
fstps
test
ret
cltd
jge
cmc
jbe
insl
cmp
pop
enter
out
push
sub
pop
mov
loop
xchg
mov
and
add
shrb
xor
pop
fldt
lods
fcom
cmp
sub
lret
add
cltd
and
mov
adcb
cmp
mov
mov
adc
dec
cmc
and
sarl
push
jb
out
out
fadd
loop
lea
jp
mov
iret
ja
sub
adc
cwtl
xchg
leave
stc
seta
mov
push
adc
sahf
inc
fs
out
icebp
pop
dec
add
addl
push
inc
jbe
inc
xchg
fistpll
xchg
dec
mov
je
mov
in
stc
mov
mov
outsl
inc
xchg
sub
sbb
mov
xchg
cmp
std
loope
add
dec
add
or
xor
mov
jnp
mov
jb
aam
sti
mov
adc
lock
mov
lock
les
in
and
push
aam
push
test
in
xchg
iret
scas
imul
and
jne
mov
push
outsb
jg
jne
and
lods
inc
orl
jle
sub
mov
decb
stos
jge
int3
dec
cmpsl
cmp
push
fmull
int3
adc
push
cmc
stos
sahf
pop
orl
xchg
jmp
lret
dec
pop
inc
fdivp
or
push
push
stos
out
or
outsb
fcomps
cmp
out
push
lret
fwait
pop
mov
cmp
sub
mov
mov
xchg
int
out
and
cmpsb
xor
xor
dec
and
outsb
sub
sbb
lcall
in
mov
fisubrl
bound
ja
repz
dec
orl
arpl
and
outsl
and
mov
hlt
shll
cmp
push
xor
scas
push
clc
jbe
les
sub
mov
test
test
cmp
pop
faddp
jge
cmp
mov
cmp
mov
mov
ss
adc
xor
loopne
push
jbe
fwait
and
or
mov
add
push
loopne
mov
outsb
add
inc
or
dec
pop
adc
jns
xchg
xchg
pop
adc
rol
insl
xchg
jge
dec
cmpsb
enter
lahf
push
fcmovnu
push
in
mov
mov
nop
test
adc
stos
mov
push
xchg
sub
jle
movsb
aaa
rcrb
int
sub
mov
mov
sbb
popl
aaa
cmp
adc
fwait
imul
fstpl
xlat
int3
xor
push
fcompl
jbe
pop
inc
test
pop
mov
add
mul
les
loop
push
jns
out
enter
icebp
fisubl
and
mov
jle
cmp
not
mov
into
and
inc
inc
scas
dec
mov
call
cmp
push
dec
in
scas
nop
cmp
loope
bound
lds
scas
ss
lock
je
or
jmp
andl
sbb
and
test
idiv
pop
cmc
and
add
push
add
loope
shll
inc
insb
aam
add
shrl
mov
stos
stos
nop
daa
push
fbld
sub
lods
loopne
ss
sbb
sbb
sub
loope
push
xor
sbb
adc
loop
push
inc
mov
fs
cli
add
push
stos
pop
adc
ss
add
insb
call
test
cmp
xchg
mov
or
loopne
jnp
mov
push
pop
shl
sbb
mov
dec
in
jo
pop
pop
adc
xor
test
dec
fs
mov
fstps
jl
iret
outsl
addr16
or
stc
leave
stos
jge
mov
in
movsl
inc
aas
inc
mov
pusha
lahf
cld
pop
mov
sar
push
mov
xor
push
loopne
mov
leave
inc
int3
bound
mov
popa
push
rclb
cmp
mov
cli
cmpsb
out
and
addr16
cld
lret
aad
or
lds
mov
jbe
imul
cwtl
ljmp
test
ss
movsb
push
adc
dec
gs
mov
sub
sti
mov
adc
mov
xchg
std
int3
xor
jmp
pushf
pop
jae
lret
rcrb
push
mov
ljmp
fistpll
push
fs
jns
add
push
addr16
cmpsb
sahf
adc
add
arpl
jp
jecxz
enter
popf
dec
sbb
and
je
enter
dec
add
cmp
or
ja
movsl
repnz
inc
stos
inc
mov
lea
and
test
aaa
cli
push
mov
mov
xchg
in
add
popf
popf
pop
imul
mov
inc
gs
and
bound
fcomps
add
pop
dec
jbe
jae
subl
ret
jge
mov
xchg
mov
out
fistl
and
das
xchg
mov
pop
cmp
leave
mov
enter
push
ljmp
cwtl
jne
stos
mov
pop
andl
and
lcall
loopnew
adc
cmpsb
in
adc
jne
push
pusha
test
cmp
sub
insl
xlat
fildll
lods
scas
ljmp
call
jecxz
cmp
pusha
jns
mov
pop
out
loopne
jmp
int
push
pop
jle
sbb
add
out
xchg
push
scas
int
sbb
mov
push
mul
les
cltd
shrl
mov
insl
cmp
mulb
xor
adc
xlat
icebp
in
enter
adc
lock
pop
pop
cmp
lret
nop
dec
xchg
arpl
xor
jecxz
xchg
push
sarl
sbb
jecxz
gs
scas
mov
dec
jne
mov
arpl
push
cmp
xchg
das
loopne
push
jle
mov
push
or
mov
lahf
pop
inc
inc
mov
pusha
jge
pop
ficompl
sar
fildll
and
test
hlt
pop
ss
pop
dec
mov
cmp
jle
sbb
adcb
inc
inc
daa
inc
ja
sbb
sbb
cmp
dec
sbb
insl
dec
into
stc
mov
jns
fistps
and
arpl
arpl
inc
or
repnz
loop
loop
nop
mov
shll
mov
popf
and
movsb
cmp
lret
in
test
xor
add
xchg
sub
inc
and
xchg
nop
ljmp
jns
adc
scas
sub
add
push
or
xor
sbb
imul
push
rol
inc
adc
xchg
adc
aas
sub
jbe
mov
ret
mov
pop
cltd
and
popa
sub
dec
mov
push
jle
and
leave
faddl
ror
push
insl
push
insb
mov
cmp
mov
adc
out
sbb
mov
hlt
adc
das
lock
fs
std
or
inc
ds
mov
hlt
or
push
cli
pop
xchg
xor
mov
fisttps
xchg
clc
mov
xchg
jno
inc
stos
xchg
lahf
jle
cmp
es
sub
mov
jbe
xchg
cltd
xor
xchg
test
scas
lcall
sbb
movsl
push
sahf
loope
mov
mov
arpl
adc
jns
adc
push
insl
pop
pop
leave
daa
jno
inc
push
lock
ret
in
dec
call
fstpt
push
mov
push
push
mov
addl
aaa
in
and
add
adc
jns
fcom
xchg
pop
cmpsb
adc
sbb
and
leave
stos
mov
cmpsb
xor
andb
dec
push
popl
movsb
xor
rclb
sbb
sbb
sti
aam
mov
jecxz
and
xchg
pop
loopne
push
call
cmp
mov
sbb
xor
fidivs
fisttpll
shlb
lock
int3
sub
mov
or
jne
sub
add
nop
or
inc
test
dec
test
add
daa
imul
push
fldt
mov
test
inc
cmp
adc
repz
dec
add
fisubrs
out
adc
xchg
pop
add
fisttpl
rorl
xchg
out
pop
mov
bound
jb
call
roll
fs
mov
ret
loope
decb
or
jne
add
push
jae
sbb
adc
daa
ja
arpl
movsb
or
jecxz
adc
sbb
lahf
mov
ss
push
pusha
fwait
or
adc
dec
jns
add
sub
enter
cmc
clc
xlat
mov
jmp
push
xor
push
repnz
test
xchg
fcompl
and
adcb
push
jmp
jb
out
dec
xchg
ret
mov
xchg
fwait
iret
sub
mov
sti
inc
les
push
pop
nop
ja
mov
xor
adc
xchg
cmp
in
sbb
push
sarl
jp
rorl
mov
pop
or
sub
repnz
cs
adc
and
xchg
cli
pop
shrl
shlb
xchg
enter
cmc
add
pop
lds
pop
adc
clc
sub
les
sbb
push
pop
stos
xor
mov
cmp
push
leave
pop
cmpsl
adc
xor
or
out
jecxz
sbb
fs
repz
pop
jno
out
xor
push
xchg
enter
fadd
push
ja
lds
add
mov
in
sbb
inc
sbb
inc
dec
mov
add
add
fdivrl
dec
push
std
dec
push
dec
mov
repnz
out
add
cmp
jnp
or
out
cmp
jle
clc
cltd
lods
xchg
mov
movsb
out
push
in
cmpsl
fcoms
insl
cmpsl
jle
mov
pop
pop
push
in
js
jg
test
dec
stc
or
gs
addr16
repz
test
xorl
sbb
jns
out
sub
pop
iret
xor
shlb
arpl
xor
sbb
jnp
stos
fxch
clc
rcr
test
cmc
aad
push
lcall
movsl
fucomi
sti
xor
and
insl
fucomp
pop
js
lret
xchg
in
cld
lret
mov
mov
inc
ja
mov
pushf
mov
xor
xor
inc
push
lret
aaa
in
mov
jmp
ret
insl
mov
xchg
cmpsl
aaa
and
test
std
sti
pop
add
scas
mov
dec
cwtl
lcall
xor
xorl
out
and
lahf
es
sbb
aad
call
jno
push
cwtl
outsb
or
aaa
outsl
xor
arpl
xor
in
and
xchg
lds
mov
and
loope
loope
push
xor
add
in
lock
sbb
dec
push
jae
pop
fwait
fs
xchg
insb
dec
add
call
rcl
insb
orb
scas
jnp
sub
sbb
xchg
push
xchg
sub
add
dec
xor
daa
jg
push
out
mov
or
ret
lods
mov
out
sub
mov
or
jl
lret
leave
adc
mov
ret
inc
in
fcomps
inc
adc
dec
mov
mov
push
popf
ljmp
insb
into
popa
sbb
push
pop
add
cmpsl
dec
jp
fistpl
cmpsl
das
jge
pop
clc
and
das
fstpl
or
xlat
mov
mov
sbb
ja
pop
lret
push
test
sub
mov
popf
or
outsl
mov
lock
test
inc
cmp
lods
mov
idivb
jbe
or
out
enter
push
mov
or
loope
adc
orl
outsb
sbb
push
xor
and
sbbl
scas
scas
sbb
out
bound
cmp
pop
adc
pop
dec
xchg
inc
sub
pop
andl
out
ret
pusha
das
hlt
sbb
add
mov
or
mov
or
loopne
inc
and
mov
outsb
mov
imul
and
ss
lret
mov
cmpsb
sub
cmpb
lahf
arpl
or
shl
xchg
sbb
outsb
cmp
cmpsl
jmp
jl
add
xchg
pop
cld
xchg
jle
jno
dec
je
mov
cmp
jge
sbb
cmp
pop
mov
or
mov
lret
lahf
inc
int
jle
inc
or
pusha
jmp
or
ret
or
popf
pop
aam
into
fs
sbb
lods
fimuls
pop
jmp
mov
dec
xor
jo
add
jecxz
or
xchg
testl
and
outsb
push
ja
add
fldl
pop
and
mov
loope
or
add
fs
movsb
imul
into
mov
inc
repz
adc
sbb
push
add
push
push
inc
pusha
imul
loop
add
jg
mov
mov
jge
test
inc
or
insb
fdivrp
push
adc
xchg
cwtl
or
or
pop
shl
jl
jno
insb
into
mov
sbb
pop
aaa
cs
xor
mov
out
movsb
add
lcall
pop
inc
std
push
lgdtl
sti
fnstcw
fsubp
push
into
cmp
aad
mov
sbbl
movsl
test
aam
pop
cmpsl
repnz
out
into
imul
testl
or
gs
mov
mov
jp
add
shlb
jle
inc
xlat
popa
stc
dec
into
mov
negl
inc
fldcw
aam
inc
inc
add
pop
loop
clc
fsubrs
fwait
xchg
inc
cmp
sub
sbb
xor
jo
setle
inc
mov
or
repnz
rolb
mov
dec
aad
test
cmovbe
sahf
and
cwtl
pop
mov
jno
push
stos
lds
cld
add
mov
mov
xor
xchg
test
in
hlt
in
xchg
outsl
mov
inc
out
or
cld
pop
pop
pop
lahf
jno
dec
test
sbb
xchg
incb
sti
pushl
add
add
mov
xchg
negl
add
or
fnstenv
xor
out
loope
mov
orb
or
xchg
pop
out
push
ret
push
mov
push
push
leave
sbb
js
lds
std
push
lret
int3
xor
negb
jb
sub
ret
fistl
bound
cmpb
cmp
mov
js
xlat
push
xchg
xchg
jns
call
mov
mov
fwait
jns
and
ficoms
outsl
mov
mov
cmp
pop
push
stos
jp
add
sub
aad
mov
or
cs
shlb
adc
rep
pop
rolb
loopne
push
jo
push
xchg
in
jg
cmp
adc
mov
lods
jmp
out
std
sub
xchg
repnz
fisubs
mov
pushf
xchg
mov
sahf
jo
jb
jne
adc
roll
jne
lods
sub
iret
push
jge
sarb
xor
push
jns
imul
test
add
iret
fwait
repz
in
push
xor
inc
mov
sti
lock
mov
dec
jo
xor
rol
cwtl
dec
and
pop
fnsave
test
push
les
and
xor
xchg
loope
jl
xor
or
push
jp
nop
pushf
repnz
shl
inc
jno
cmp
mov
sbb
inc
or
xchg
js
int
xchg
xchg
sbb
pop
ljmp
mov
cmp
adc
jnp
pop
test
std
loop
add
ss
jo
push
lods
jb
or
jmp
cmp
mov
dec
push
aas
dec
push
outsb
int3
xchg
test
add
test
xchg
sub
xor
mov
clc
inc
cmp
or
jnp
push
popf
setno
pop
out
aad
call
and
insb
iret
mov
outsb
jmp
mov
movsb
pop
lret
inc
mov
fiaddl
push
xor
xor
inc
xor
in
iret
dec
enter
outsb
fiaddl
rclb
xlat
mov
pop
xchg
push
add
mov
jo
sbb
aaa
jns
daa
loop
mov
js
es
daa
scas
repz
add
inc
adc
bound
xor
lods
in
xor
fstpt
data16
ret
dec
xchg
cmc
cmp
insl
mov
lfs
jp
adc
lods
dec
jp
popa
jle
fildll
in
lcall
into
mov
jae
aaa
xchg
push
out
movsb
sub
lock
push
test
xchg
pop
pop
jmp
mov
es
mov
lea
jmp
xchg
addb
adc
sbb
push
ds
mov
leave
imul
xchg
jnp
les
int3
sarb
mov
or
arpl
pop
pop
shll
sbb
sbb
pop
mov
lds
push
pushf
push
dec
add
imul
xor
rcrb
mov
inc
push
clc
fdivr
sbb
dec
fs
sti
lods
cli
ljmp
jne
int3
xchg
test
es
push
mov
dec
adc
sbb
movsb
sahf
cld
jge
adc
pushf
inc
push
jecxz
jnp
mov
add
pusha
lahf
enter
push
or
dec
xchg
xchg
fcoms
lret
ljmp
negl
call
aaa
or
lahf
mov
lret
mov
push
push
les
clc
or
fbstp
hlt
jns
clc
sbb
in
clc
mov
pop
cmpsb
das
mov
inc
sbb
bound
dec
xchg
pushf
repz
jnp,pt
push
out
cwtl
icebp
int3
rcrb
cmpsb
fcmovbe
jns
cld
or
pop
sar
cmp
les
movsl
arpl
test
push
pxor
pop
fsubs
or
loope
pop
push
test
mov
cmp
imul
incl
fdivrp
mov
xchg
pop
pop
pop
js
popa
cmpsl
insw
test
adc
mov
hlt
xor
add
and
aas
lds
test
gs
adc
mov
not
jno
push
ja
and
inc
push
sarb
daa
in
dec
pop
push
pop
std
jl
addr16
stos
mov
mov
clc
and
test
adc
test
inc
orl
jl
cs
gs
lds
iret
push
inc
shlb
dec
sub
pop
inc
xor
cmpsb
or
or
ss
mov
mov
dec
outsb
inc
call
mull
add
bound
dec
dec
xchg
sub
lock
icebp
cli
pop
sarl
arpl
jnp
ss
imul
ss
cld
in
js
jb
dec
cmp
pop
addr16
int3
sbb
mov
mov
fnsave
in
jae
sbbl
push
jnp
popa
cli
cmp
ja
mov
cwtl
fisubrs
sub
push
mov
mov
imul
pusha
push
ljmp
add
std
pop
mov
lods
icebp
mov
push
fsubs
push
sub
or
adc
lods
mov
pop
sub
pop
ljmp
stos
arpl
jnp
adc
sub
jo
sub
cmp
std
sbb
push
sub
popf
mov
or
out
mov
sub
push
fwait
jae
or
test
sbb
out
or
jecxz
push
xor
icebp
fiadds
aad
inc
xchg
jns
sarb
imul
fmuls
addb
es
cmc
sub
pop
xor
scas
fcompp
mov
cmp
fsubrs
add
mov
scas
push
hlt
or
jmp
xor
jo
out
sub
jecxz
jecxz
cmp
push
sub
je
lods
fisubl
mov
cltd
aam
push
icebp
inc
jae
sbb
and
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
jg
imul
cmpl
sbb
jo
test
popa
jnp
movsl
repnz
stos
or
jne
int
sub
outsb
pop
sbb
cmc
test
mov
adc
pop
xlat
push
push
mov
mov
data16
mov
inc
mov
pusha
jp
in
outsl
pop
lret
frstor
fistl
ret
mov
mov
pop
pusha
ror
shl
loopne
arpl
mov
leave
mov
scas
dec
dec
jp
and
mov
mov
add
fcoms
nop
adc
scas
dec
pop
xlat
fstpt
je
dec
ss
or
dec
jb
aaa
pop
pop
fcompl
filds
mov
mov
lret
std
fsubrl
jae
mov
mov
lret
test
inc
cmp
pusha
or
shrb
dec
push
adc
addr16
bnd
mov
aas
cltd
xor
fsubrs
xchg
dec
aad
fcmovne
and
jb
insl
repz
movsl
dec
jb
inc
jbe
out
cmc
mov
call
out
sub
movsb
jg
cmp
inc
jl
sbb
outsb
pop
fimuls
fstl
jg
les
int
aas
or
lahf
test
cld
cmc
xchg
int
or
test
outsl
mov
and
lret
jmp
xor
pop
lret
sbb
jno
adc
pop
pop
xchg
or
mov
mov
pop
pop
pop
mov
hlt
sub
mov
outsl
pop
mov
sahf
xchg
pop
fdivs
ret
fstl
jne
cmp
and
loop
mov
or
fidivrl
leave
inc
mov
out
sahf
sarb
sub
orb
and
aaa
add
cwtl
int3
call
pop
fbstp
and
and
jb
push
or
or
push
es
enter
faddp
cltd
sub
rolb
dec
inc
xchg
ds
aas
pop
sub
into
cld
movb
stos
cmpsl
movswl
mov
adc
sub
sub
xchg
jge
xchg
cli
xor
in
push
pop
xchg
test
fldenv
and
push
or
jb
jns
sub
xor
cmp
ja
inc
xchg
mov
and
in
lock
inc
hlt
icebp
je
inc
movsl
loop
dec
icebp
addr16
cwtl
lea
mov
xor
xchg
adc
adc
gs
push
jne
clc
test
movsb
push
xor
int
mov
jnp
mov
pop
xor
leave
in
sub
test
mov
cmpsl
xchg
orb
ret
adc
mov
adc
dec
add
jne
jmp
in
loope
rolb
stc
xchg
add
and
dec
add
sarb
into
sub
mov
dec
jno
cwtl
push
scas
and
js
mov
lcall
sub
mov
popf
loop
insl
ss
mov
mov
loop
or
pop
push
push
test
push
ret
mov
fildl
lds
gs
adc
cmp
jle
cltd
dec
push
sub
jo
or
aad
shll
imul
test
push
sub
arpl
push
and
sub
pop
cmpl
pushf
daa
ds
xchg
cmp
rcll
jns
es
mov
ret
test
fisubs
dec
push
jmp
lods
push
aam
fldcw
xchg
lock
int3
pop
mov
mov
cmp
repz
jae
sbb
mov
sti
adc
fsts
sbb
adc
fwait
clc
sub
xor
sub
or
dec
aam
stc
mov
pusha
xchg
jge
xchg
pop
jmp
and
repz
or
mov
daa
push
popa
and
xchg
ret
or
into
stos
mov
mov
cmpsl
jnp
clc
ja
add
mov
fdivrl
rol
mov
xor
jae
cmp
pop
ss
xor
mov
sbb
decl
push
pusha
imul
mov
sbb
sbb
pop
push
inc
subl
sahf
xchg
or
xor
movsb
pushf
test
sahf
icebp
add
data16
add
sbb
mov
scas
cli
dec
inc
adc
sbb
jbe
cmp
sbb
jns
xchg
adc
adc
dec
outsl
jb
in
pop
inc
cmp
cmc
loopne
nop
cmp
push
add
and
xchg
cmpsb
mov
xchg
jae
sub
fcmovu
pop
in
xor
xchg
fcomps
mov
lret
sbb
push
pushf
inc
mov
clc
test
cwtl
pop
xlat
jnp
repz
fcompp
pusha
neg
daa
push
int
imul
repnz
shl
mov
pop
mov
sbb
mov
pusha
lea
dec
movsb
jb
cmpsb
ret
shll
cld
nop
test
mov
or
jecxz
jg
jmp
jbe
mov
mov
sbb
in
stos
ss
sub
or
sti
lret
jns
sub
mov
push
cltd
orb
pop
cmp
xor
pushf
std
adc
ljmp
pop
sub
mov
outsb
testb
fwait
and
cmp
sub
into
mov
mov
push
xchg
sbb
adc
xor
cmpsb
jb
dec
sahf
dec
mov
mov
mov
dec
push
in
xchg
cmp
or
adc
cmp
je
sbb
aaa
and
xchg
xchg
stos
sbb
xlat
pop
lea
add
xchg
shl
xchg
sub
jo
fiaddl
andb
jge
push
sbb
push
push
arpl
outsb
fwait
in
lds
lock
push
mov
mov
arpl
in
push
mov
dec
aad
push
ficomps
jecxz
mov
fisubl
data16
sbb
xchg
add
mov
or
ret
stos
add
out
inc
ja
ret
insl
aam
inc
das
scas
push
orb
jae
xchg
jns
sbb
pop
neg
xor
sahf
insl
xlat
je
add
or
or
xchg
lret
adc
push
cmp
mov
lahf
jecxz
dec
lea
sbb
fnstenv
mov
aas
cltd
xor
push
and
jge
fldenv
clc
jle
sub
popf
adc
dec
call
in
pop
int
and
test
mov
push
psubb
pop
pop
mov
add
push
in
fldcw
lods
and
jp
movsl
cmpsb
out
mov
cltd
ss
rorb
cmp
cld
xchg
test
xchg
inc
out
mov
divb
imul
xor
mov
mov
out
pop
pop
inc
push
cs
push
jnp
into
xor
jno
ljmp
clc
es
cmpb
cmp
mov
sbb
cmc
aad
sbb
sub
jecxz
or
mov
dec
sbb
sbb
movsl
or
out
push
fsubs
ret
push
pusha
pop
es
data16
pushf
movsb
jnp
push
push
or
adc
pop
pop
push
insb
adc
dec
xchg
xchg
in
dec
mov
cmp
test
and
or
cli
xchg
lods
aaa
shll
hlt
shll
test
sub
adc
inc
push
loope
and
jne
das
fwait
push
in
int3
inc
jl
nop
int3
sub
xor
in
adc
fwait
or
xor
and
cmp
sbb
outsl
mov
sub
xchg
cmp
clc
inc
stc
pop
jo
test
lock
push
push
dec
xchg
cmp
daa
cmpsl
cmp
jecxz
push
push
popa
adc
lods
inc
or
and
icebp
les
mov
add
sbb
lret
xchg
push
lcall
lret
decl
push
ljmp
mov
cmp
jl
call
jg
or
push
add
mov
or
clc
enter
mov
mov
xchg
mov
test
mov
jle
lea
pop
pop
mov
ret
cmp
xor
and
lret
lret
popf
mov
mov
adcl
or
mov
pop
stos
jae
in
es
add
xchg
cltd
xor
mov
out
outsb
push
sub
aam
dec
xchg
or
cmp
push
stc
and
inc
jmp
cmc
movsb
repz
loopne
mov
es
mov
xor
pop
jae
insl
pop
scas
mov
mov
sbbl
iret
or
mov
adc
ror
out
jecxz
pusha
dec
jge
cli
out
bound
xchg
adc
jb
inc
mov
mov
push
sub
jle
jno
ss
in
xchg
andb
cmp
addr16
in
inc
mov
jnp
rcrb
movsl
inc
fdivrl
mov
mov
sub
dec
sbb
cld
ret
sub
or
jmp
es
loope
fisttps
adcb
push
or
movsl
test
xchg
sti
aad
stos
sub
dec
pop
pop
out
sub
jne
or
loop
std
stos
repz
jb
jge
pop
push
add
pop
cli
sti
jmp
jno
add
sbb
xchg
icebp
xor
push
into
add
std
cmp
jp
into
scas
leave
js
outsb
cmpsb
or
loopne
addr16
fs
rcr
pop
repz
cmpsb
push
inc
jmp
into
lods
adcl
scas
push
gs
hlt
push
loope
pop
pop
mov
mov
lods
test
or
dec
adc
adc
call
mov
repnz
and
test
lods
jbe
cli
adc
out
xor
sbb
xor
adc
push
insl
fstl
xor
cwtl
pop
cli
int
xor
sub
cmpsl
inc
sub
or
add
mov
insb
pop
push
cmp
je
out
sahf
or
hlt
call
dec
lcall
gs
inc
pop
push
inc
dec
lcall
ljmp
pushf
sub
insb
rcl
pop
bound
fistpl
push
stos
sub
enter
cltd
fcmovnu
jb
imul
lods
push
and
aad
fiadds
inc
mov
dec
fisttps
nop
jl
mov
xor
loop
push
inc
mov
int
int
je
loope
das
lret
scas
lret
shlb
lret
mov
sbb
sub
repz
pushf
lods
nop
push
in
lods
outsb
outsb
jle
pusha
xchg
cwtl
jecxz
faddp
pop
out
js
popa
pop
sbb
out
mov
test
push
xchg
shrl
add
in
push
cltd
xchg
cmp
sub
inc
test
popa
jecxz
lahf
xchg
add
push
mov
add
sbb
jne
loope
lock
fwait
psubw
inc
xchg
mov
dec
sahf
jg
xor
and
mov
xchg
push
add
aas
jbe
cmp
xchg
cmp
xor
add
fcomps
rol
push
sub
scas
push
mov
cmp
or
mov
jne
stos
dec
inc
xor
jno
hlt
into
out
mov
and
fisttpl
mov
lahf
push
test
adc
lds
ljmp
cmc
dec
mov
push
mov
jo
xchg
push
and
inc
out
roll
dec
mov
mov
mov
adc
cmp
roll
mov
addr16
mov
dec
jne
sub
mov
fwait
inc
fcompl
cld
and
jne
mov
mov
stos
mov
movsb
or
sbb
push
shr
jle
cwtl
test
dec
cwtl
xchg
movsb
mov
pop
cmp
sub
testl
jle
sbb
mov
mov
les
cmp
sub
roll
in
loop
out
dec
mov
sub
je
jne
xor
xchg
dec
mov
out
aas
cwtl
push
iret
mov
addr16
inc
add
pop
sti
sbb
in
mov
loop
cmp
aas
aaa
inc
inc
sbb
mov
movsb
ficoms
clc
or
loop
popf
pop
mov
jp
xchg
sbbb
adc
xor
dec
sub
movsb
add
add
fildll
mov
cmp
jecxz
sub
pop
jb
jmp
loope
or
stos
cld
ljmp
pop
mov
out
ja
push
pop
cmp
xor
popf
repnz
mov
push
loope
cmp
repnz
mov
icebp
stos
adc
mov
fldz
xchg
mov
cmp
mov
push
xor
or
test
lret
jbe
jg
pop
mov
popf
mov
sub
pop
mov
sbb
imul
or
jle
fnstsw
push
js
popf
add
test
push
ret
loop
mov
push
lock
add
sub
call
idiv
jb
xchg
sub
xchg
fwait
pop
add
in
popa
loop
mov
shrl
and
cltd
mov
pushf
lods
inc
or
aad
jp
inc
lahf
mov
mov
and
mov
iret
xor
leave
daa
push
nop
push
stc
std
xchg
and
rorb
mov
mov
xchg
mov
sub
and
dec
mov
jg
popa
lahf
cld
cmp
jb
mov
mov
mov
or
lahf
subl
jmp
add
jmp
hlt
sub
shll
xchg
out
je
sbb
mov
test
repnz
lock
into
stc
pop
fdivrs
test
or
bound
cmc
arpl
insb
clc
dec
jbe
daa
inc
push
or
movsl
loop
stos
aas
ljmp
std
jnp
mov
or
inc
jg
mov
cs
adc
addr16
pop
mov
fisubs
les
inc
loopne
dec
pop
ret
pop
jmp
cmpb
dec
loop
dec
cmpsb
loop
xchg
arpl
fsubl
push
sub
cmp
aad
xchg
out
jg
xor
sahf
mov
push
sbb
and
pusha
cmpsl
sti
xchg
cmp
pop
mov
jo
cmp
ja
pushf
push
adc
in
adc
popa
fildl
iret
fldl
jo
in
xchg
int3
xlat
mov
in
mov
xorl
or
inc
sbb
std
roll
pop
loopne
fwait
roll
lods
pusha
mov
cmp
cmp
lock
mov
addr16
mov
inc
subl
in
and
roll
aam
movb
mov
xor
jge
mov
xchg
jae
add
scas
sub
rcll
pop
arpl
rclb
pop
ss
aaa
mov
jmp
mov
aaa
push
inc
lods
cmp
pop
xchg
test
adc
stc
xor
mov
mov
aaa
fldt
add
cmpsb
arpl
arpl
sbb
push
lea
cld
lods
pop
imul
ret
aad
xchg
inc
sub
jp
dec
xor
mov
xor
and
roll
push
mov
pop
mov
jp
in
sbb
mov
pop
lret
out
rcrl
pop
xchg
dec
cmp
cmp
out
rcrl
xchg
mov
push
push
xchg
cmpsl
pop
cmp
sahf
pop
add
mov
mov
int
xor
or
leave
push
mov
and
sub
jl
push
cli
jns
push
fistpl
cs
aad
mov
push
jge
add
sbb
andl
gs
enter
sbb
adc
enter
arpl
movsl
fistpl
bound
push
push
pushf
pop
arpl
sub
testl
lahf
jbe
mov
pop
pushf
popf
roll
mov
sub
jl
xor
inc
push
xor
adc
xchg
std
mov
fdiv
stc
dec
sub
gs
or
enter
test
pushl
add
and
shrb
push
mov
dec
mov
movsb
mov
dec
lret
sbb
sub
fwait
into
sbbb
mov
jg
dec
sarb
mov
fidivs
mov
xlat
pop
pop
out
add
fstpl
or
pop
jl
jge
bound
lcall
js
lods
dec
mov
fistps
xor
arpl
sbb
cmp
jecxz
pop
cld
jmp
xor
iret
mov
mov
or
subb
mov
adc
scas
mov
mov
mov
outsl
lret
push
xchg
pusha
jns
repz
out
movsb
test
cmpsl
mov
bound
ret
mov
in
cltd
cli
xchg
adc
or
lea
sbb
divb
sbb
loop
or
outsb
mov
or
pop
pop
cltd
movsb
into
add
shll
push
jbe
lock
icebp
adc
sub
pop
cwtl
mov
add
pop
aad
jae
pushf
adc
cltd
xchg
rcl
cs
pop
gs
dec
jo
fcoml
lahf
xchg
and
jbe
es
fwait
mov
jnp
stos
mov
out
add
add
lret
pushf
add
scas
or
roll
xlat
and
arpl
in
or
stos
add
into
adc
stc
jne
mov
gs
dec
nop
std
ljmp
mov
movsl
xchg
rcr
test
jne
je
hlt
nop
fidivl
and
es
mov
xor
xchg
rolb
xchg
imul
jo
cld
mov
loopne
mov
jae
jle
cli
adc
jle
aas
and
mov
ljmp
cltd
sbb
push
pop
adc
dec
and
xor
sar
mov
cmp
sub
or
push
xlat
mov
fnstcw
fs
loop
lcall
push
add
pusha
jmp
rorb
jbe
jl
jns
movl
push
lea
daa
frstor
mov
jle
jns
or
dec
ja
push
cwtl
dec
add
enter
adc
jl
mov
mov
mov
sub
mov
cmp
andb
cmpsb
movsb
icebp
ret
push
adc
in
jae
mov
test
scas
loope
dec
imull
cld
mov
push
pop
mov
inc
jbe
jle
andl
nop
and
test
pop
push
add
dec
jnp
mov
xchg
aad
int
roll
clc
or
out
and
dec
xor
aas
test
shrl
mov
or
sbb
sbb
and
jb
int3
arpl
mov
pushf
or
jecxz
and
push
cmp
and
inc
sbb
lahf
js
insb
cmpsb
jne
or
lods
shll
jno
ljmp
jg
jg
jecxz
mov
add
rorb
mov
mov
inc
pusha
xchg
sahf
inc
test
push
jg
jg
rolb
or
ljmp
mov
jo
ds
dec
sub
and
pop
into
jns
loope
pushf
xchg
mov
and
push
jle
test
sub
stos
je
lods
jo
push
and
adc
sbb
repnz
and
movsl
jp
mov
xor
pop
pop
jbe
push
rol
push
cmpb
mov
ret
inc
in
test
stc
pusha
rcrl
mov
pop
daa
mov
mov
fistpl
and
add
push
movsl
ret
ficoms
inc
enter
adc
aam
xchg
or
push
into
xchg
push
jmp
lret
lods
or
mov
call
test
jne
mov
stos
mov
xchg
adc
fs
inc
div
xor
pop
jns
movsl
and
xchg
sub
test
cmp
mov
arpl
inc
divps
loope
aad
insb
push
adc
dec
inc
mov
shrl
mov
jp
pop
push
pop
jecxz
imul
jp
push
lret
test
insl
cmp
lods
pop
jg
lahf
jo
sub
jmp
nopl
sub
scas
popf
incl
lods
dec
scas
out
movnti
push
repnz
pop
push
xchg
sub
ds
sub
xlat
sbb
addr16
sbb
push
adc
mov
fistps
mov
jmp
add
sahf
mov
xchg
stos
aam
adc
cmp
push
adc
mov
pusha
pop
xchg
rcl
and
jae
mov
sbb
xchg
dec
add
add
sbb
mov
cmpsb
sub
movsl
out
dec
fists
jb
hlt
sub
sbb
sti
es
adcb
jmp
push
nop
pop
je
aas
dec
pop
std
out
ret
test
or
div
imul
push
into
dec
push
sub
sub
adc
fcomip
dec
lods
xchg
clc
mov
ljmpw
jmp
pop
inc
fnsave
or
mov
push
insb
insb
xorl
push
dec
jle
out
cmp
movsl
or
or
insl
filds
lret
add
popf
in
lods
outsl
mov
cmp
adc
xor
ss
leave
xchg
xchg
push
fdivr
gs
scas
inc
push
in
fdivr
xchg
imul
int3
outsb
repnz
and
xchg
pop
pop
jb
lcall
daa
pop
stos
out
inc
dec
outsl
in
and
fdivrs
fimuls
push
push
rcrb
clc
adc
inc
cmpsl
jnp
add
icebp
jne
sub
int
das
mov
aaa
mov
dec
adc
and
pop
aad
or
mov
mov
pushf
adc
push
xlat
icebp
lcall
div
js
jp
xor
xchg
pusha
pusha
pop
xor
dec
add
sub
shlb
imul
dec
add
popa
imul
negl
mov
pushf
sbb
pushf
or
dec
or
pop
fucomip
das
arpl
or
out
repnz
sbb
leave
push
push
dec
imul
mov
hlt
push
lea
scas
push
and
inc
fisubrs
mov
mov
loop
jecxz
dec
inc
pop
dec
adc
dec
add
cmpsb
cmpb
mov
inc
inc
mov
fcmovbe
outsb
fs
cwtl
inc
mov
insb
xchg
xor
fsubrs
jnp
lods
outsl
lret
call
outsb
cmc
push
sbb
sbb
add
sbb
repnz
leave
sub
xor
pop
test
mov
testb
ret
outsb
je
mov
iret
and
pop
jnp
scas
call
popa
test
aas
add
xchg
stos
enter
and
shlb
lods
enter
inc
xchg
xlat
add
fdivs
ss
jp
out
xor
rcll
mov
lds
cmpb
mov
outsl
mov
js
mov
xchg
mov
adc
lret
xor
fldz
loop
xor
xor
movsb
adc
jno
mov
les
adc
test
es
xor
adc
sbb
jecxz
cld
rolb
jecxz
out
sbb
push
sbb
fildll
or
mov
imul
cli
fimuls
xor
and
fwait
in
jge
add
pop
pop
in
mov
bound
xchg
xor
cmpb
push
add
mov
jge
sahf
jp
jmp
popa
fistl
inc
inc
shll
out
insb
or
push
cmp
dec
jae
iret
push
les
popl
jae
pusha
xchg
dec
xchg
xlat
mov
repz
pop
adc
sub
movsb
jge
and
sub
sar
mov
outsb
cld
cs
das
dec
jb
lock
cmp
jnp
inc
test
lds
add
stos
mov
imulb
unpcklps
mov
fisubrs
bound
pop
negl
dec
and
pop
in
mov
mov
xchg
inc
cmpsb
enter
cmp
fdivrp
jnp
inc
add
dec
ja
cwtl
call
mov
loope
test
pushf
jge
inc
cmp
mov
call
enter
xor
cmp
mov
inc
and
mov
sbb
jbe
jnp
mov
fs
inc
cld
or
dec
adc
pop
lock
push
dec
mov
inc
test
inc
cld
int3
mov
out
mov
test
xchg
pop
add
mov
test
loope
or
ljmp
push
mov
cmp
jl
dec
push
dec
in
push
xor
lds
or
sbb
cs
jp
sub
outsb
mov
js
pusha
xor
sub
push
mov
xchg
mov
dec
pop
in
mov
mov
fistps
nop
xlat
jecxz
int
push
xchg
ret
mov
out
ret
insl
andl
ss
sub
testl
lahf
ret
mov
push
mov
subb
pop
in
popl
fdivrs
fsubrl
or
out
cmp
out
int3
mov
pushf
test
bound
ds
lods
pop
repz
jp
pushf
jp
arpl
icebp
das
insb
xchg
out
sub
mov
push
mov
mov
add
inc
pop
sbb
pop
jecxz
sahf
cmp
cmp
add
sbb
test
popf
cmp
sar
sub
mov
xorl
imul
ret
subl
mov
or
lea
xchg
or
dec
notl
cmp
cmp
sbb
pop
rcll
jne
nop
leave
xchg
push
movsb
fbstp
mov
mov
adcl
jp
jge
cwtl
pop
jge
cmp
mov
aas
sub
mov
std
fcmovb
sub
jnp
or
jnp
xchg
add
clc
push
sti
cmpsl
sbb
pop
pop
jo
xchg
loopne
test
mov
mov
loop
cmp
imulb
xchg
mov
aam
jp
jb
jl
jae
lret
aam
push
cmc
lahf
rcl
inc
inc
or
dec
loop
jge
sbb
nop
or
pop
pop
fdiv
push
inc
xchg
in
jmp
xchg
jle
es
inc
icebp
dec
xchg
imulb
push
or
ret
xchg
out
stc
cmpsl
lea
mov
cmpb
mov
in
das
jnp
or
cltd
in
les
out
in
test
push
shrb
test
es
mov
fcmovu
js
dec
fwait
adc
inc
repz
test
mov
das
cmp
adc
movsl
lret
incb
pusha
fmull
mov
cmp
sti
outsl
ss
and
pop
xor
ja
fdivrl
xchg
lret
scas
lahf
inc
outsl
push
out
lret
lods
mov
js
jns
push
jbe
rcll
and
in
and
aaa
add
mov
inc
mov
and
mov
imul
mov
xorb
adc
aad
mov
in
lcall
in
fdivrs
mov
insb
mov
rol
cli
arpl
std
mov
in
test
lea
mov
dec
and
sub
nop
sahf
push
adc
in
fiadds
out
inc
call
push
lods
xchg
jne
fabs
push
out
xadd
push
dec
adc
divb
xchg
sub
imul
inc
jb
push
xchg
out
rclb
imul
sahf
and
lret
cld
push
or
jne
test
adc
into
movsb
add
movsb
int3
call
adc
and
loope
inc
pop
jp
out
aaa
in
idivb
dec
sbb
add
mov
or
sbb
std
fucomi
or
adc
mov
arpl
test
ret
rolb
mov
mov
mov
rclb
aad
jb
mov
push
mov
mov
dec
jl
pop
hlt
fstpl
mov
aaa
aam
pop
lret
hlt
xchg
jo
dec
mov
lcall
ret
cmpsl
jo
sub
sub
dec
enter
add
jle
mov
loopne
xlat
push
jb
or
dec
add
mov
xchg
scas
in
sbb
test
jmp
mov
fucomp
fcomp
aam
lcall
ror
pop
pop
daa
lcall
test
push
push
in
outsl
and
dec
push
stos
cli
daa
pop
nop
pop
sbb
insb
inc
ficompl
push
xchg
into
fucomi
mov
xchg
cmc
bound
push
mov
in
test
sub
fcomp
jecxz
cmp
inc
sub
enter
movsl
inc
outsl
out
jl
out
outsl
arpl
sbb
dec
mov
andb
notb
xchg
outsb
jl
loopne
inc
lcall
xchg
cltd
cmpsb
insl
mov
cmp
cwtl
lcall
mov
fnsave
hlt
mov
rcl
rolb
nop
mov
push
xchg
dec
pop
add
jecxz
xchg
movsl
inc
test
jl
int3
cmpsl
lretw
aas
leave
aam
xorb
mov
jmp
jmp
pop
imul
or
mov
loop
insb
mov
sub
clc
testl
jne
rorl
cs
inc
test
lcall
loopne
xor
sub
gs
insb
mov
stos
push
movzwl
mov
es
add
test
jecxz
fs
jmp
mov
adc
xchg
sti
xchg
add
pop
adc
andl
mov
dec
xchg
hlt
lds
cmp
clc
fs
push
scas
xchg
in
push
pop
gs
inc
lret
lret
sarb
stos
mov
adc
sbb
push
fwait
std
es
adc
out
stos
push
mov
inc
mov
lds
out
sbb
push
adc
scas
pop
loop
imul
fildll
mov
xchg
sbb
lods
pop
inc
jbe
out
xchg
cmp
adc
sub
inc
gs
jnp
mull
push
sbb
fstpl
lret
call
lds
scas
xchg
fistl
hlt
insb
jne
inc
inc
outsb
dec
mov
call
adc
ds
jge
sbb
das
add
inc
out
ror
and
pop
into
stos
push
inc
jle
add
mov
cmp
dec
pop
cwtl
inc
lret
les
mov
push
cmp
cli
mov
lods
cwtl
and
jmp
rorl
inc
add
sub
mov
in
mov
mov
mov
imull
mov
cmc
push
adc
jmp
and
mov
push
gs
push
inc
sbb
ret
jl
mov
int
or
jmp
mov
jg
xchg
fdivl
jge
mov
cmp
pop
sbb
pusha
dec
test
mull
outsl
mov
dec
lds
in
sub
int
xor
bound
add
push
mov
imul
mov
aad
jp
mov
sarb
icebp
xor
rcrl
in
push
lar
cmp
ljmp
lods
mov
mov
mov
mov
outsb
add
jge
sbb
stos
popf
popf
lds
out
push
adcb
iret
shr
inc
mov
outsl
push
gs
inc
jle
lahf
sahf
add
mov
push
insb
cmovl
xor
sub
data16
or
pop
ror
inc
push
fisttps
mov
fsubr
clc
pop
shll
push
aas
test
dec
shr
or
outsl
test
adc
add
mov
and
jmp
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
std
out
mov
pop
pop
addl
out
scas
mov
xor
mov
dec
mov
in
sti
in
push
xchg
insl
enter
push
ret
push
shlb
or
cmpl
sub
mov
mov
fucomip
xchg
sahf
push
dec
data16
ss
call
mov
pop
lods
xchg
outsb
stos
aad
cmp
mov
cmpsb
fwait
ret
adc
mov
xor
inc
mov
inc
adc
andl
mov
push
cli
aad
sub
inc
add
cmc
and
shr
jne
jg
xchg
jne
je
cmp
inc
pop
pop
cmp
push
movsl
insb
mov
movsb
jbe
sub
lods
flds
sbb
cld
adc
sbb
sub
inc
sub
and
inc
rclb
lods
dec
sahf
loop
sbb
rclb
test
jbe
mov
push
lahf
push
jl
lea
jmp
mov
cltd
pop
xchg
outsb
mov
jle
mov
jbe
mov
inc
sub
pushf
mov
sbb
xlat
jb
mov
test
push
xlat
mov
pop
lock
aas
mov
frstor
push
dec
inc
and
mov
scas
or
std
jae
test
jg
pop
out
sbb
mov
orl
mov
pop
jecxz
stc
mov
in
js
adc
mov
adc
popf
cmc
mov
mov
xchg
push
call
or
mov
cwtl
jle
xor
lahf
push
pusha
test
lret
cmpl
adc
xor
add
into
lea
fdivp
cmpb
arpl
mov
loopne
and
mov
fistpl
in
inc
and
stc
adc
cmpsb
cs
test
xor
mov
pop
inc
sub
std
push
js
or
sbb
add
cli
rolb
adcl
push
pop
mov
cwtl
xor
jl
mov
mov
mov
inc
flds
ja
push
aam
mov
lcall
in
stc
shrl
in
ja
or
stos
and
add
add
cmp
inc
test
sub
sbb
das
jne
mov
imul
fisubs
sub
ds
ret
xor
imul
int
hlt
inc
fs
shr
pop
mov
fs
sbb
in
jnp
fsub
jl
stc
and
push
ret
les
push
inc
adc
dec
aam
or
xchg
fwait
cli
sbb
lret
adc
roll
popf
xchg
lds
inc
enter
mov
xlat
out
test
push
mov
clc
ret
xchg
into
jmp
jbe
je
inc
dec
mov
bsf
das
xor
mov
push
dec
fs
ljmp
test
test
jmp
ficoms
cmp
cmp
push
dec
add
inc
and
test
xlat
push
out
cmc
shlb
cmp
lret
mov
mov
mov
out
inc
pop
inc
popa
xorl
and
mov
inc
maxps
push
or
mov
sbb
test
out
inc
in
add
movsl
cmp
jb
aas
xchg
ud1
ret
pop
mov
mov
jge
sub
hlt
pop
fwait
pop
cs
jbe
ds
addr16
fisubrs
gs
loop
clc
xchg
push
std
test
inc
lcall
add
cmp
xor
mov
pop
out
or
xor
or
rolb
and
lea
sbb
inc
dec
ret
ficompl
arpl
cs
lods
cmp
andl
les
les
xor
shrl
push
movsl
or
into
sub
sti
jae
and
and
push
mov
mov
sti
setne
icebp
shufps
cltd
inc
sarl
jecxz
imul
addr16
lods
push
adc
fs
aad
and
xor
xchg
push
roll
add
sub
dec
sub
negb
lret
sahf
cli
sub
in
lea
mov
insl
in
mov
orl
ret
push
ret
insl
cld
or
in
jmp
clc
pop
testl
and
sub
add
xchg
sub
jnp
fildll
outsl
mov
repnz
dec
rcll
aas
xchg
jl
std
out
jae
fcomp
xchg
pushf
sarb
fisubrl
lret
out
cmp
lret
inc
adc
dec
xor
out
mov
shll
pop
inc
sbb
add
dec
inc
std
fmull
mov
sbb
call
jg
mov
or
and
adc
or
xchg
das
jae
movsl
fdivs
iret
inc
fucomp
outsb
in
lret
imulb
jns
cmp
cmp
je
mov
xor
or
xor
pop
inc
jne
sub
insl
imul
stos
and
mov
das
pop
xchg
loope
mov
out
roll
jne
push
adc
mov
add
ljmp
aaa
cs
push
mov
lock
out
lods
stos
pop
mov
add
push
push
push
cmpsl
icebp
add
mov
movsb
out
lcall
insl
jle
push
xchg
call
test
xchg
inc
ret
fisubl
nop
push
dec
xor
int
cmp
loope
cmp
adc
mov
push
mov
pop
js
mov
ret
jmp
dec
cmc
or
leave
xchg
inc
mov
push
lret
fistpll
ds
lcall
jno
sahf
aas
jge
iret
aam
sbb
sub
or
ljmp
adc
cli
pop
and
stos
imul
iret
sbbb
xchg
inc
sbbl
aaa
push
xor
mov
nop
fidivrs
push
pusha
adc
dec
jns
adc
les
fcompl
lock
push
ret
rorl
dec
cmp
push
mov
push
lcall
sbb
popa
stos
arpl
and
jle
mov
cmp
stos
sarl
loopne
xchg
or
lock
daa
loop
adc
mov
stc
dec
jnp
stos
loop
inc
sub
and
cmp
sub
test
into
scas
mov
outsl
mov
xchg
jne
add
xorb
xchg
loope
lods
iret
push
lods
arpl
add
call
imul
test
jecxz
or
data16
and
sub
inc
sbb
mov
sbb
repz
pop
mov
rcrl
push
gs
jnp
push
es
fs
or
fdivrp
jno
jle
rcr
xlat
test
adc
inc
pop
ficoms
aam
inc
mov
lea
pop
outsl
out
jb
pop
dec
add
add
pop
flds
int
inc
ljmp
mov
xchg
cwtl
scas
mov
out
lock
jle
sbb
int3
mov
mov
lods
pop
aaa
daa
aad
cmp
js
push
data16
jns
xchg
xchg
cmpl
mov
lds
sbb
jmp
inc
xor
pop
adc
add
or
add
subb
in
aaa
xor
lret
xor
cmpsb
dec
pushf
sahf
in
je
int
mov
jle
jns
sbb
sti
mov
divl
adcb
fcoms
and
ja
insb
bnd
nop
dec
test
addr16
fiaddl
sub
push
ds
fisubrs
ljmp
pop
out
fwait
gs
mov
subl
sbb
xchg
rclb
mov
lds
mov
jbe
repnz
dec
leave
movl
mov
outsl
fs
xchg
fs
shrb
push
dec
jo
and
into
test
cwtl
stc
dec
mov
mov
inc
cli
push
jnp
call
sahf
adc
inc
out
push
popf
adc
fimull
inc
mov
arpl
jno
or
and
rclb
into
mov
push
outsl
out
inc
mov
or
sbbl
ret
aas
daa
push
cmp
scas
and
fldl
adc
dec
pop
mov
push
repnz
inc
dec
sbb
push
push
push
xor
push
insb
jo
test
fsts
mov
ror
jge
mov
adc
pushf
jmp
pop
insl
jg
cli
adc
aas
add
xor
cwtl
je
xor
jecxz
or
push
sti
pop
icebp
into
push
loope
push
test
xchg
adc
das
or
jecxz
pop
pop
lcall
movsb
std
or
cltd
loop
loope
dec
rcrb
or
cmpsl
shll
adc
stos
xor
stos
inc
jo
pop
or
test
xchg
push
movsb
lahf
sbb
jnp
repz
push
mov
repz
enter
stc
mov
insl
mov
pop
mov
add
das
fnstcw
xchg
stos
cs
out
pushf
mov
cs
subb
roll
loop
mov
aam
jecxz
xchg
inc
xchg
jb
mov
mov
inc
ljmp
jnp
std
pop
cs
fistpll
fwait
test
pop
mov
scas
js
add
aas
das
out
adc
push
repz
insb
sub
mov
cli
lea
fsubs
cmp
mov
push
out
mov
and
sbb
mov
mov
in
icebp
std
stc
pop
pop
xchg
or
jnp
jne
xchg
out
mov
push
shrl
push
sbb
xchg
push
sti
cld
add
jb
mov
sub
inc
enter
sub
add
int3
mov
cltd
popa
jmp
fnstsw
imul
jnp
stc
loopne
fsubrl
push
mov
inc
aas
adc
inc
sub
inc
mov
xor
in
sub
cmp
imul
fisubrs
lock
inc
or
je
leave
fdivrl
jl
dec
sub
shlb
out
sub
cmc
cmp
jge
faddl
pop
push
arpl
leave
xchg
cmp
xor
push
lock
and
mov
xchg
mov
xor
sub
mov
mov
ficompl
add
movsl
scas
fisubl
insl
pusha
push
jmp
gs
inc
loope
add
add
lock
test
adc
in
jge
aaa
lods
shll
adc
fwait
insb
aaa
fs
and
fsts
xchg
pusha
jno
dec
jnp
pop
xor
fwait
mov
outsl
daa
push
add
pop
add
xchg
fimuls
je
cmpsl
pop
xor
pop
xchg
sub
test
aad
push
and
jbe
je
imul
push
sbb
adc
fstpt
adc
pop
xchg
or
xchg
inc
inc
cmp
mov
out
in
inc
cld
loope
push
das
test
data16
push
addr16
push
add
or
inc
out
imul
test
lahf
cmp
jp
jbe
jge
ljmp
xor
cmp
mov
shr
pop
jg
mov
test
aas
sbb
push
sti
mov
and
mulb
ror
jge
addb
or
or
mov
pop
sub
mov
int3
mov
xor
imul
xchg
and
xchg
sti
inc
aaa
xchg
ja
sbb
adc
push
lret
sub
in
jo
lds
imul
jl
add
dec
scas
adc
ret
std
sub
andl
test
ljmp
xor
test
scas
xor
lret
mov
ds
movb
add
jne
fstp
mov
mov
and
popf
test
jecxz
jle
lahf
das
mov
dec
pop
pop
imul
fistl
data16
sub
pop
mov
mov
push
int
ficomps
mov
add
sbb
lock
and
imul
in
inc
cmp
jle
divl
dec
icebp
push
aaa
or
xchg
ret
mov
stc
xlat
pop
jge
mov
push
adc
in
scas
xchg
push
stos
imul
jle
sbb
lret
call
and
cmp
std
inc
lock
pop
rcl
jl
es
cmp
pop
andl
repnz
sub
ja
push
and
pop
test
inc
add
push
xor
pop
pop
adc
es
inc
cmp
push
pop
dec
in
inc
adc
mov
cmc
dec
and
mov
mov
call
mov
xchg
inc
and
xchg
push
pop
push
aas
stos
mov
mov
xor
fsubs
ljmp
sahf
and
insb
xor
dec
sbb
jbe
test
cmc
fildll
in
jmp
je
push
movsl
sahf
iret
aas
rcl
mov
bound
sub
aaa
bound
test
mov
cltd
cmpsl
xchg
jo
loope
les
push
sbb
push
or
xchg
lret
daa
push
out
scas
addr16
sub
pop
xor
mov
pop
out
bound
mov
add
aas
pushf
lahf
loope
arpl
mov
jecxz,pn
xchg
popa
adc
cld
shrb
jle
xchg
jl
lea
out
xchg
inc
flds
sti
mov
pop
addr16
pushf
lahf
ficoml
xor
ret
test
test
dec
pop
les
cs
cmp
adc
movsb
sti
mov
xor
stos
scas
movsl
inc
push
dec
jmp
scas
xor
and
enter
adc
aam
adc
pop
sbb
sbb
repnz
out
xchg
cmp
push
or
cmpsl
daa
imul
sub
inc
test
inc
and
push
jg
push
jno
add
sub
or
movsb
scas
aas
jne
inc
outsl
in
xor
ffreep
mov
ret
add
test
test
pusha
lds
xor
xchg
adc
add
jmp
mov
cld
mov
and
fnstenv
jecxz
mov
aaa
fisubl
adc
repnz
lahf
subb
aad
test
cltd
pop
pusha
pop
mov
test
inc
jnp
mov
push
adc
les
mov
jl
cmp
mov
add
sub
loop
stc
xor
jb
adc
or
dec
sarl
and
lret
xchg
lret
mov
repz
or
xchg
or
xor
push
inc
cld
mov
cwtl
jecxz
aam
ja
shll
insb
imul
lock
add
ror
xchg
xlat
cmp
shlb
imul
mov
faddp
cli
aaa
int3
lea
xor
movsl
push
test
xchg
aas
and
jmp
into
fnstsw
imul
mov
xor
push
xchg
insl
sbb
add
loope
lods
ss
add
xchg
or
jp
cmp
cli
loope
in
sub
aas
add
lods
pop
xchg
mov
xchg
jbe
lods
mov
mov
cmc
cmpsl
push
inc
ljmp
call
mov
rcr
pusha
lods
shlb
xchg
or
ja
sbb
cmpsl
add
aaa
insl
mov
mov
push
xchg
jnp
stos
add
data16
push
out
mov
sbb
dec
gs
fadds
mov
mov
pop
ret
mov
jno
out
jno
ljmp
xor
mov
cmpsl
fimull
xor
clc
xchg
stos
adcl
and
mov
sub
xchg
add
xchg
adc
psllw
xlat
and
cmp
lock
imul
inc
lea
inc
hlt
cmp
shll
dec
adc
sbb
dec
cmpl
sbb
out
lods
ljmp
sbbl
cmpsl
pushl
cld
sahf
scas
scas
or
fs
mov
sub
xlat
xchg
shll
addr16
sbb
sbb
andl
decb
test
shll
les
xor
adc
imul
lods
xor
movsb
push
nop
jl
jmp
jae
aaa
stos
mov
insl
cmp
fmuls
push
jo
mov
sbb
dec
ret
gs
push
scas
mov
dec
scas
es
in
fisubl
negb
push
mov
push
rcl
fdivl
out
jle
cwtl
ds
push
test
inc
out
stc
mov
pop
inc
sarl
jb
pop
mov
loopne
adc
nop
or
aam
aad
insl
xor
mov
pushf
mov
adc
fsubrl
lret
sub
shll
jbe
mov
cmp
ja
punpckldq
add
fisubl
add
daa
cmp
mov
out
pop
xchg
xchg
sbb
aam
idivb
push
sarb
jle
stos
or
or
aad
adc
push
je
dec
or
scas
aad
lret
inc
xor
and
popf
ljmp
mov
pop
adc
mov
sub
insb
call
inc
rcll
cwtl
cmpsb
mov
or
or
dec
lcall
sub
adc
scas
sub
mov
shlb
cmp
insb
inc
mov
test
xchg
cmp
mov
outsb
inc
pop
outsl
cmpl
pop
pop
inc
add
jo
mov
or
xor
ljmp
cmpsl
xor
push
sahf
dec
sub
test
lret
sub
lret
cmp
stos
mov
sub
inc
mov
add
cmpsl
in
cli
movsl
mov
lret
push
push
sbb
lods
test
in
sub
sub
loope
cmc
lret
add
notb
call
hlt
xchg
neg
jle
lcall
sbb
jo
dec
push
adc
mov
test
scas
in
pusha
lcall
hlt
jnp
push
pop
and
dec
or
inc
jge
xchg
push
pushf
icebp
jb
push
cwtl
lcall
sub
test
xchg
inc
and
popf
or
cmpsb
or
cs
cmpsb
dec
imulb
sbb
in
ds
push
mov
aam
xor
call
cli
in
and
orb
scas
xlat
sbb
push
sahf
push
daa
sub
add
fnstsw
push
or
iret
cmpsb
add
in
fisubrl
adc
push
jns
aas
dec
es
cmp
add
jns
aaa
inc
fwait
loopne
dec
repz
cmp
ret
mov
adc
sbb
push
call
iret
lock
xchg
xchg
mov
sub
out
and
push
mov
fprem
mov
test
inc
push
dec
aas
fsubs
jnp
mov
rcll
popf
ljmp
jo
sbb
adc
mov
bound
out
pushf
push
cltd
push
out
push
xchg
xor
mov
iret
add
insl
loope
insb
lcall
and
lea
pop
dec
sub
adc
enter
test
cltd
push
gs
fwait
testl
rolb
outsb
push
inc
pop
pop
pop
lret
add
sub
jnp
shrb
jmp
fldt
out
sub
pop
loopne
push
fwait
jae
cmp
and
test
add
rcrb
scas
add
scas
inc
mov
and
inc
push
adc
stos
inc
loope
lods
pop
dec
fiaddl
jg
push
xchg
sub
sbb
out
fs
out
mov
fmull
sahf
xor
xor
xchg
adc
loop
inc
mull
je
mov
lock
in
loopne
stc
push
xor
jecxz
stos
mov
cli
cmpsb
cmp
ret
stos
fdivl
popa
sub
je
or
call
adc
adc
xchg
dec
mov
mov
dec
push
pop
jmp
test
jp
cmp
mov
into
scas
call
lods
xchg
rcrl
push
loopne
and
add
pop
test
jne
mov
jo
mov
adc
loopne
das
mov
in
xor
jl
repz
andb
iret
cs
lret
in
mov
xor
outsb
out
stc
lahf
or
jl
jl
fnsave
mov
loopne
enterw
inc
je
mov
sbb
sub
popf
and
mov
push
mov
in
mov
fsubp
scas
mov
data16
jecxz
lods
mov
iret
lds
adc
push
mov
ret
inc
adc
ja
pop
lods
mov
mov
cltd
pop
jno
sub
ret
aaa
out
out
aas
nop
arpl
pop
mov
icebp
mov
inc
dec
cmpsb
mov
push
test
insl
or
shl
xchg
sbb
lock
dec
jno
cmp
inc
jle
inc
dec
cmp
add
outsb
outsb
pop
cmp
jnp
xchg
repz
dec
repnz
jo
adc
mov
outsl
pop
pop
xor
adc
mov
aam
sbb
xchg
jmp
push
ds
lds
out
adc
mov
sbb
xchg
test
push
dec
jle
scas
ds
pop
pop
fnsave
jge
lahf
jbe,pn
push
pop
sbb
inc
sub
ret
mov
out
in
loope
push
pop
xchg
inc
jle
ret
pop
cmp
push
cli
xchg
test
mov
jnp
pop
lds
repz
dec
inc
pop
mov
mov
roll
mov
test
test
mov
mov
rclb
cltd
xchg
rcll
or
cltd
out
int3
push
aam
lods
lds
mov
inc
mov
xor
scas
fldl
leave
es
push
cld
stos
ljmp
xor
jge
orl
cwtl
shlb
inc
ja
dec
add
mov
jp
fwait
lods
inc
add
xchg
mov
orl
jb
cld
and
cmp
cmp
stos
nop
push
xor
fdivrp
pop
dec
cmp
pop
dec
insl
sbb
loopne
sahf
add
ja
or
mov
pop
scas
and
cmpl
es
test
mov
hlt
scas
out
pop
jg
cmp
addr16
in
sbb
shrl
push
push
xchg
jmp
mov
je
addr16
add
lds
push
or
and
sbbb
xchg
fwait
mov
lret
mov
fdivrl
sbb
lods
or
sarl
lea
xlat
loope
ss
movl
xor
push
roll
adc
jge
dec
mov
cmpsl
mov
cld
lods
fbld
inc
sub
dec
outsl
xchg
xchg
pop
ret
sub
xchg
add
outsl
sub
fimull
inc
sub
adcb
jmp
push
loopne
dec
mov
je
xlat
cltd
sub
jnp
leave
sub
cmp
jmp
push
cmpb
lea
outsb
sahf
test
push
xchg
inc
into
cli
pop
out
inc
movsb
sub
pushf
outsl
sub
fs
sbb
jg
jnp
mov
lfs
or
out
call
imul
jo
mov
xor
mov
cmp
aam
xchg
sbb
sub
aaa
cwtl
push
sub
insl
rcll
sbb
push
shlb
in
sub
or
inc
pop
push
cmpsl
inc
mov
lods
pushl
mov
xor
jo
inc
aaa
xor
movsb
int
jecxz
dec
push
adc
and
mov
add
cmp
lods
cmp
fsubrl
mov
pushf
mov
xor
lods
shlb
fwait
push
add
jns
sti
sbbb
jb
ret
xchg
or
push
bound
into
mov
aaa
push
jle
add
mov
data16
jb
std
add
out
cld
jmp
adc
inc
xchg
mov
pop
das
out
cmp
iret
testb
shll
pop
pop
dec
in
in
mov
leave
push
mov
jmp
fdivrs
mov
mov
stos
inc
cmp
rcrb
lcall
test
es
pop
adc
dec
mov
push
fistpl
push
adc
data16
push
js
push
jb
or
or
or
lods
mov
fiadds
sub
loop
or
jo
jp
lret
push
pop
out
pop
outsb
cmpsb
xchg
pop
nop
cmp
jae
ret
sti
pop
mov
ds
pop
inc
pop
into
mov
insb
sub
lret
inc
xor
adc
xchg
xchg
cmp
xchg
aas
push
lahf
jg
push
and
jns
cltd
or
dec
insb
testb
pop
push
add
outsl
movsb
or
movsl
es
xchg
fninit
inc
inc
inc
ficoml
cli
mov
mov
cmp
aam
sarl
mov
mov
push
xchg
or
sbb
out
mul
sub
jl
cs
cmp
rcll
jne
jbe
loope
mov
lods
inc
adc
lret
push
mov
xchg
or
cs
jmp
inc
mov
xor
fcmovu
sub
xchg
and
lret
out
icebp
push
test
mov
popf
adc
xchg
in
jno
mov
subb
iret
pop
push
stc
add
rorl
push
pop
mov
int
inc
stos
push
arpl
jle
mov
and
out
jle
and
notb
mov
sub
mov
push
ss
movsb
dec
sub
daa
imul
lods
push
sub
add
xor
mov
add
lds
and
aad
sub
aaa
jno
pop
mov
stos
jecxz
sub
mov
push
adc
sub
data16
mov
in
nop
mov
mov
insl
xchg
jge
inc
mov
scas
mov
mov
cli
arpl
rcrl
pop
andl
and
dec
mov
scas
bound
sbb
xchg
movsl
orl
mov
xchg
andb
fs
add
cmp
lock
lahf
mov
fbld
inc
mov
pop
and
mov
ljmp
jnp
out
sbb
xchg
ret
testl
out
sub
xor
mov
imul
jo
test
mov
mov
push
xchg
fcompl
loopne
push
inc
mov
loope
push
movsbl
mov
fsts
andb
cwtl
adc
ret
mov
lcall
mov
ds
xchg
mov
sahf
and
sbb
stos
mov
push
lods
mov
mov
xchg
test
inc
add
lds
xchg
mov
popa
xchg
xor
dec
sarl
cmc
lods
ds
fiadds
aaa
jbe
std
cmpsb
add
xlat
sub
dec
pusha
jecxz
shl
xor
out
push
push
int
sub
sahf
ficoms
das
sti
hlt
mov
imul
vpunpcklqdq
outsb
into
jnp
into
mov
test
xor
dec
fcompl
cs
dec
outsl
icebp
mov
push
xor
sbb
mov
pop
mov
test
mov
repz
or
mov
cmpsb
add
xor
sub
jno
pop
inc
ljmp
aaa
mov
jo
outsl
lock
mulb
into
loop
sbb
lock
jg
clc
call
xor
lods
mov
push
xchg
push
in
sub
push
mov
das
fdivrl
dec
xchg
adc
pop
loop
xor
scas
fs
leave
sub
add
adc
insl
pop
lods
dec
pop
mov
int3
shlb
adc
adc
pop
dec
xor
out
ljmp
repnz
push
roll
imul
mov
enter
and
pop
inc
jns
sbb
call
shrb
iret
or
insb
pusha
lret
lret
aas
lock
mov
xchg
mov
and
dec
jns
aaa
jge
sbb
push
xchg
cltd
data16
sbb
leave
mov
cmp
imul
loop
xor
clc
mov
insb
call
mov
call
sub
or
rorb
jb
js
add
dec
xchg
movsb
or
push
add
adc
ds
jle
cmpsl
stos
lds
stos
data16
icebp
mov
cmpsb
push
or
sbb
in
jb
mov
in
lret
xor
xor
cmpsb
add
pop
dec
lcall
fldcw
bound
jl
scas
scas
mov
mov
pop
add
cli
jne
pop
js
stc
stos
dec
nop
data16
cmpsl
sbb
cmpl
and
out
outsb
into
xor
daa
and
inc
jo
jecxz
sahf
and
fwait
loopne
icebp
adc
pusha
jl
push
pushf
insl
push
ja
into
jge
jne
jge
mov
lret
hlt
xor
enter
mov
cwtl
sbb
or
ret
lret
and
cli
pop
in
jae
sub
daa
je
mov
cmpsl
add
dec
jb
push
add
cltd
xchg
and
cmp
sti
cmc
mov
or
rolb
ljmp
mov
add
sub
xor
cmpsl
cmpsb
insb
in
call
aas
rolb
jl
push
xor
xlat
out
leave
and
es
push
sbb
es
pop
mov
mov
inc
sub
and
pop
lret
push
jl
scas
dec
mov
testl
in
cmp
jp
mov
stc
pop
dec
mov
inc
sub
imul
cli
filds
test
mov
sub
mov
lea
jge
enter
cmpsl
icebp
or
lcall
stos
fldz
mov
data16
popa
or
push
enter
mov
pop
mov
mov
mov
xchg
mov
popf
or
fisttps
xchg
mov
pop
push
or
mov
lea
xchg
lahf
ret
mov
push
adc
xchg
int
push
test
dec
gs
jo
push
cmp
add
int
pop
cmp
push
mov
loop
popa
in
addb
rolb
test
jae
push
xor
xor
jae
in
stc
mov
add
clc
outsl
push
jge
mov
sbb
repnz
or
mov
fs
rcl
xchg
fiadds
lods
mov
insb
xchg
cltd
repnz
imul
rorl
arpl
mov
popf
cmp
fs
xor
rorb
xchg
add
dec
jno
sbbl
scas
mov
add
mov
mov
adc
adc
lods
loop
int
leave
xor
inc
pop
fsubr
sub
cmpsb
dec
mov
mov
and
pusha
push
sbb
mov
xor
ds
fwait
lret
sti
jmp
inc
jp
cmpsb
outsl
xchg
arpl
inc
xor
add
add
jge
adc
push
ret
loopne
ficoml
cmp
add
subl
sub
mov
add
fucomi
jg
or
mov
mov
ret
aaa
cmp
repnz
or
fs
out
test
imul
and
xchg
pop
aaa
push
imul
les
je
mov
js
push
hlt
dec
lret
inc
sbb
lret
cmp
lret
jmp
adc
test
xorl
addb
xchg
outsb
lods
or
icebp
jg
mov
pop
icebp
sti
shrl
lret
jae
xor
push
push
fdivrs
adc
pop
mov
lret
fmuls
inc
push
adc
and
movsl
jno
or
adc
mul
mov
mov
sbbl
movsl
leave
mov
imul
lds
nop
test
sahf
cmp
sub
gs
adc
mov
inc
addb
sub
lds
pop
jmp
andl
fildl
ret
push
stos
jnp
mov
ljmp
push
icebp
leave
sbb
or
sub
sbb
cli
xor
dec
xchg
movsb
test
jl
sub
push
mov
mov
inc
jle
in
outsb
sub
cmp
lret
negl
jmp
out
mov
push
js
bound
in
sub
das
sub
add
les
pop
imul
sub
frstor
es
cmp
bound
push
loop
xor
mov
mov
and
push
xor
xchg
mov
loopne
xorb
or
cwtl
shll
daa
cld
inc
pop
jns
inc
dec
jno
mov
call
icebp
sbb
test
pop
lods
jge
mov
lods
test
pushl
daa
sub
xchg
pop
mov
scas
adc
dec
sbb
mov
orb
cmpsb
sub
mov
fldenv
test
out
aam
dec
add
jns
dec
sbb
rcrl
sbb
mov
or
jb
jecxz
arpl
push
loope
lahf
push
xchg
pop
loope
push
aam
mov
adc
pop
enter
aas
mov
add
adc
movsl
jno
cmp
fdivrp
shrb
outsl
dec
test
pop
cmp
je
jb
mov
js,pn
cmc
cmp
loopne
stos
fs
inc
and
cltd
mov
and
in
jae
dec
js
outsb
mov
rcrl
es
in
arpl
subb
mov
sub
cmp
js
fyl2xp1
enter
sub
push
leave
or
add
add
shlb
scas
xor
cmpsb
xchg
ss
aam
loopne
sti
insl
pushf
lret
sbb
push
push
ficoml
sar
dec
jno
xchg
jnp
sahf
clc
out
push
call
xchg
clc
popf
pop
stc
sbb
cmp
mov
dec
add
imul
mov
mov
repnz
pop
daa
aad
sbbb
ret
mov
jae
daa
xchg
jno
lock
mov
xor
mov
rolb
mov
sti
mov
dec
jo
pop
out
mov
mov
jmp
mov
mov
dec
pop
daa
jle
jl
lret
push
push
cmp
mov
jne
or
in
sbb
mov
inc
stos
mov
cmp
insl
lret
lcall
inc
loope
jne
mov
cmpl
dec
adc
fs
gs
je
sub
je
sub
stc
mov
xchg
cmp
push
and
lahf
push
pop
add
or
mov
sbb
dec
pop
je
or
mov
xchg
xchg
dec
add
fwait
adc
mov
fsubs
xor
jnp
xchg
lret
jae
or
popf
imul
bound
cmp
ds
gs
int
jg
int
push
xlat
es
xlat
mov
test
and
test
inc
push
stos
addr16
lahf
rolb
or
cli
mov
pop
scas
pop
mov
add
jge
lods
cmpsl
xchg
and
xchg
inc
xor
jno
add
inc
mov
mov
dec
rcrb
nop
inc
out
cmp
jo
xchg
mov
aas
inc
pop
fdivl
ret
sbb
pop
inc
pop
pushf
pop
mov
dec
cmp
loope
push
lods
test
pop
adc
mov
push
loope
lea
ret
adc
imul
mov
sub
imul
sarl
test
pusha
loope
aad
mov
stos
xor
xlat
call
jl
add
mov
clc
gs
xor
push
jno
dec
addb
fnstsw
sub
fwait
insb
mov
sbb
fcmovnbe
inc
pop
in
into
in
sbb
jnp
sub
dec
data16
lret
cmp
mov
jge
xor
jecxz,pn
xchg
stos
addl
mov
mov
rol
push
lds
test
and
pushf
sub
xchg
aad
lods
push
pop
mov
mov
faddl
adc
and
mov
js
sub
lahf
xchg
and
scas
adc
jno
adc
jl
sub
jge
mov
mov
xor
fwait
jbe
mov
in
punpckhwd
mov
mov
mov
add
mov
lret
mov
push
lcall
and
imul
pushf
pop
cli
jb
fcoms
inc
je
pop
inc
into
dec
ret
mov
inc
xor
inc
gs
jnp
push
ret
or
xor
fs
inc
dec
or
mov
into
lret
mov
orb
loope
or
decl
jbe
cli
jbe
or
pop
stos
and
mov
scas
xor
add
add
fimuls
mov
sbb
push
add
enter
jne
mov
push
adc
adcb
adc
xchg
std
iret
je
lods
mov
stos
and
push
xor
rcr
aam
pushf
fcompl
ret
inc
mov
jnp
fildll
push
or
push
pop
mov
or
scas
cmpsl
mov
jno
adc
jecxz
leave
imul
add
clc
inc
dec
stos
mov
xchg
and
sbb
jg
mov
cs
lahf
imul
dec
sbb
xchg
jl
dec
mov
arpl
jg
push
jmp
test
lret
inc
xor
mov
cmp
xor
mov
sub
sbb
test
cmp
pop
in
cmpsl
pop
mul
cmp
jge
sub
jo
xchg
sub
xchg
dec
in
inc
nop
lahf
fwait
inc
or
pop
inc
adc
sub
sub
stos
xor
sbb
mov
add
jle
dec
hlt
cmp
repnz
sub
jb
cli
insl
jb
push
in
in
sbb
mov
ljmp
out
jo
xor
sbb
add
dec
sbb
aaa
and
mov
jg
xor
fsubl
sbb
jne
jo
cmp
daa
push
push
aaa
stc
gs
pop
add
pop
mov
popf
orb
jnp
into
adc
les
push
nop
aaa
and
int
adc
push
vmread
mov
and
roll
les
insb
aas
push
jno
pop
jecxz
adcb
jb
add
sbb
movsl
jae
mov
nop
dec
xchg
clflush
add
jno
jns
push
and
in
in
mov
subl
shlb
add
mov
sub
int
add
ljmp
add
mov
xor
sub
mov
push
je
inc
test
pop
sub
sbb
sub
sarb
clc
insb
or
push
lods
xchg
imull
adc
mov
push
in
add
jbe
lock
shlb
int
sub
xchg
lods
clc
cwtl
inc
mov
add
xor
cmpb
mov
dec
or
fdivrs
xchg
arpl
test
es
sub
pop
mov
insl
dec
test
sbb
xlat
movsb
movsl
loope
sub
rol
inc
pushf
and
adc
lock
cld
je
sub
outsl
jne
fidivrl
das
lret
pop
test
xchg
pop
dec
sbb
and
dec
scas
inc
dec
mov
cmp
mov
push
loope
movsb
xlat
push
sar
shll
push
sub
cli
xchg
fadd
popa
pop
dec
jle
fdivr
pop
js
fxtract
push
or
xorb
push
cmpsl
jl
movsb
fstpt
mov
mov
je
loopne
push
mov
nop
outsl
imul
dec
mov
sbb
mov
jmp
loop
jbe
and
rorb
leave
cwtl
je
sbb
inc
push
lcall
ja
lock
cmp
aas
jge
cs
es
push
cmp
lds
addr16
addr16
loop
sub
ficompl
adc
leave
cmp
shll
roll
sub
add
mov
mov
push
push
lods
and
jle
jmp
and
sub
dec
lea
vpmullw
fwait
bound
pushf
out
xchg
test
sbb
or
pop
xchg
mov
jno
or
mov
add
sub
xor
stos
mov
test
jne
push
outsl
xchg
pop
fists
and
call
sbb
out
or
inc
mov
pop
inc
pop
sbb
popf
imul
add
les
mov
lret
repz
mov
sub
mov
mov
out
lret
mov
rcl
ret
jne
aas
inc
in
test
mov
xchg
aad
orl
sub
cmp
push
push
inc
or
pop
mov
mov
cs
mov
ss
mov
and
jbe
push
sbb
jp
dec
outsl
push
out
subb
pop
mov
jb
sti
inc
fcomps
mov
rorb
mov
mov
clc
imul
dec
sarb
xor
cmp
and
mov
scas
mov
repnz
inc
jb
xchg
add
sub
cmp
push
or
or
stos
movsb
mov
fcomp
stos
mov
mov
pop
fnsave
jo
imul
mov
aas
pop
push
jmp
int
insl
sub
pushl
jns
pop
jo
and
or
jge
mov
xchg
fdivs
and
sbb
insl
ljmp
push
out
outsl
into
outsb
cwtl
std
lods
adc
hlt
mov
fsub
add
pushf
stos
das
scas
leave
sbb
daa
cld
nop
mov
jbe
dec
imul
xor
xchg
xorb
inc
xor
or
jge,pn
ret
scas
daa
jecxz
leave
aaa
outsb
loope
jp
sub
xlat
cmp
outsl
sub
and
add
lods
addr16
push
aas
and
lds
push
jge
insb
ret
arpl
mov
iret
fadds
decl
jnp
mov
repnz
jo
loop
xchg
fsubrl
movsb
test
add
xorl
out
and
addr16
imul
icebp
jg
popf
dec
aam
cltd
xlat
lods
mov
lock
cmp
mov
shrl
lcall
or
out
jle
inc
ss
mov
clc
aad
into
add
sbb
in
lret
in
rclb
icebp
hlt
cmp
addr16
inc
mov
les
test
cmp
fldenv
packsswb
sub
jae
mov
gs
add
jl
outsb
adc
sub
add
call
stos
and
add
inc
mov
mov
sub
nop
lock
ja
xchg
movsl
push
scas
dec
pop
imul
dec
adc
shrl
inc
xchg
decb
mov
ret
jno
jb
and
mov
popf
mov
jge
out
ja
stos
inc
pop
and
mov
ret
nop
xchg
and
dec
add
js
inc
pushf
push
xor
mov
cmpsl
or
movsb
or
lds
xchg
xchg
and
sub
mov
lret
addb
mov
xchg
inc
insl
aad
dec
mov
test
cwtl
pop
popa
mov
lret
ss
sub
addr16
in
xlat
test
sbb
test
jl
pop
testb
jecxz
fwait
xchg
xor
ja
lret
dec
test
inc
fs
repnz
inc
jl
fcoms
inc
rolb
jge
jno
lods
sbb
adcb
call
cld
cmpsb
push
lock
mov
jmp
or
or
mov
or
pop
aam
hlt
sbb
movsl
shll
inc
int3
das
adc
push
push
add
ffree
jmp
stos
test
stos
les
dec
lcall
xchg
xor
cmp
enter
pop
les
mov
pop
iret
dec
clc
or
jmp
mov
fxam
mov
push
test
sub
leave
arpl
cmp
mov
sahf
xchg
sub
orb
and
push
fldcw
xchg
jne
inc
dec
cmp
shll
pop
test
mov
test
or
mov
dec
fnstenv
fs
les
shrl
cmpsb
cmp
loop
pop
dec
push
loopne
xchg
dec
daa
mov
movl
mov
jle
push
aaa
or
mov
addl
jnp
push
mov
stc
cltd
and
xor
scas
mov
repnz
xor
jl
jns
mov
fbstp
mov
in
add
mov
popf
data16
stos
enter
int3
mov
loop
int
dec
adc
push
sub
cwtl
adc
xchg
js
sub
lret
mov
lcall
inc
shlb
and
shll
popf
mov
aas
mov
shlb
xor
ret
jg
and
add
inc
loop
pop
rorb
test
movsb
cmp
push
xchg
loopne
lcall
xchg
arpl
jno
fcmovb
xor
jb
mov
lds
lods
mov
adc
dec
iret
xchg
push
xadd
jle
xchg
int
ja
sbb
lods
and
std
cwtl
mov
je
enter
mov
js
xchg
pop
pushf
push
in
adc
test
jl
icebp
mov
mov
xchg
cltd
int
gs
imul
xchg
push
lret
lods
pop
jge
xor
cmp
mov
jmp
dec
pop
je
aad
test
adc
cld
sbb
add
in
stos
pop
mov
xchg
scas
jmp
push
xchg
push
nop
xor
xchg
stos
shll
insb
jbe
out
mov
ja
lret
popf
sahf
inc
cwtl
addr16
das
data16
out
lods
push
dec
and
shll
push
add
sbb
push
ret
inc
inc
jns
fdivp
data16
push
jnp
jbe
call
mov
pop
mov
clc
cltd
adc
pop
mov
sbb
addb
xor
dec
mov
and
mov
daa
sbb
mov
ss
dec
or
mov
jbe
pop
cltd
mov
pushf
aam
push
xchg
cmp
pop
or
std
xor
xor
and
add
cmpsb
jno
cmpb
or
xchg
test
jge
xchg
in
mov
test
jg
adc
push
dec
push
rep
jae
and
and
addl
xor
adc
and
inc
pop
cmc
sub
lock
outsb
mov
lds
outsl
mov
aaa
mov
push
popa
stos
movb
insb
outsl
sbb
mov
mov
hlt
or
inc
push
shl
mov
mov
xor
pop
sbb
rolb
sub
mov
jmp
push
fs
mov
inc
xor
imul
mov
and
jo
or
in
int3
dec
inc
out
lods
test
scas
dec
mov
jge
jge
js
add
sbb
pusha
push
push
dec
xor
sbb
pop
ja
lcall
mov
dec
bound
add
jg
incl
lds
cmp
xchg
jmp
mov
orb
sbb
jbe
js
stc
mov
and
mov
pop
xor
cmp
das
sbb
in
rorb
inc
push
mov
dec
pusha
dec
add
subb
aam
adc
mov
push
mov
stos
jae
dec
jns
test
jne
jbe
jno
jle
jl
cmc
mov
out
ss
insb
mov
stc
xchg
fsts
inc
loope
xor
push
inc
mov
daa
jl
fnstsw
test
mov
cmp
mov
cmpsl
pusha
imul
inc
sub
sub
jecxz
cli
cmp
add
sbb
cmp
pop
xor
inc
or
mov
movsb
je
outsl
mov
dec
sbb
cmpsb
sub
mov
dec
xchg
sbb
pop
sar
nop
or
adc
mov
push
in
xor
xor
ja
leave
jge
jg
sub
int
mov
mov
cmc
outsb
xchg
push
jo
sti
lds
fnstsw
adc
cmc
cmp
sarl
add
mov
mulb
lods
pop
icebp
lcall
sbb
icebp
outsb
push
jmp
pusha
xchg
push
dec
lock
pop
jge
or
call
dec
pop
inc
fdiv
loope
sbb
les
cmp
popf
add
and
insb
mov
pop
xchg
mov
mov
jo
jb
jb
stc
adc
jg
inc
xor
mov
in
rorb
and
subb
arpl
jo
mov
dec
or
sahf
mov
lock
or
cs
outsb
mov
mov
ljmp
std
pop
mov
int
lock
mov
xchg
jae
dec
mov
arpl
sub
popa
ljmp
imul
mov
xchg
sub
pop
cmp
test
pop
icebp
mov
pop
addl
in
add
mov
mov
sbb
fildl
ljmp
popa
mov
jecxz
loope
das
and
adc
fcmovnbe
push
sub
sbb
dec
xchg
in
ljmp
sub
xchg
subl
mov
mov
lret
push
int
push
mov
mov
cld
loopne
jb
mov
es
imul
pop
sub
pop
add
sbbb
xchg
and
rdrand
xor
stos
outsl
stc
movsb
push
pop
insl
cwtl
call
lea
es
mov
imul
lds
xchg
sub
cmp
mov
mov
imulb
xchg
push
sti
mov
rolb
aaa
lock
adc
mov
mov
push
dec
sub
push
pop
sub
jb
jg
int
insl
add
cmpsb
lret
popa
test
and
jbe
stos
dec
stos
sub
pusha
cmpsb
js
inc
adc
test
add
add
mov
xor
adc
pop
es
mov
xchg
pop
orb
mov
ret
mov
and
loopne
les
cmc
data16
jge
sbb
ds
repnz
inc
mov
inc
repz
push
in
jg
jl
scas
and
in
andb
js
enter
lahf
sbb
fidivl
sub
and
unpcklps
rolb
cltd
ds
arpl
aam
xchg
add
inc
mov
cmp
cltd
mov
mov
in
push
fstl
or
insl
lds
jb
imul
and
and
popl
hlt
or
jo
lock
cmp
int
repz
notl
je
push
aam
add
dec
xor
xchg
call
push
aad
sub
sahf
xor
test
mov
push
mov
mov
mov
xor
xor
scas
mov
das
int
cs
test
mov
test
jbe
inc
cltd
mov
cmp
fistpl
sti
xor
sbb
adc
aam
fidivl
shll
in
and
icebp
mov
push
or
outsb
outsl
scas
imull
push
xor
cmp
xor
push
scas
aas
inc
pop
and
add
and
dec
test
imul
loopne
cmc
lods
addr16
scas
lcall
movsl
int
cld
and
je
push
outsl
movsb
jecxz
or
fwait
push
mov
bound
jns
or
sub
push
cmc
or
mov
inc
mov
sbb
enter
xchg
icebp
add
stos
pop
das
into
cmp
and
pushf
sub
mov
jnp
ss
or
sub
hlt
nop
fcomip
mov
push
and
sbbb
sbb
stos
idivl
cmp
push
push
adc
data16
loopne
pushf
scas
pop
fwait
pop
stos
inc
stc
push
loop
int3
test
jns
cld
adc
push
cs
add
jbe
fcomps
out
inc
sbb
cltd
ljmp
fsubrl
xlat
or
roll
std
pop
call
xor
stos
in
addr16
jmp
ret
ds
cmp
xchg
push
rclb
pop
aaa
adc
inc
insl
dec
aam
test
mov
repz
mov
lcall
xlat
iret
mov
insb
cli
mov
mov
and
mov
xor
and
andl
xchg
xor
xor
jl
jb
and
or
adc
inc
idiv
ret
mov
mov
js
mov
xchg
jge
shr
inc
sub
dec
xchg
push
push
lods
repz
cmpsb
fwait
push
adcl
mov
sahf
out
sbb
cmpsl
cmp
sahf
mov
sbb
out
xor
sbb
mov
add
lahf
mov
jmp
mov
in
jb
sub
dec
repz
outsl
xchg
stc
mov
shll
cmp
cmp
inc
test
icebp
pusha
in
push
adc
sub
loop
rclb
mov
push
cmp
lods
std
rcr
lea
lcall
dec
test
popa
fst
loopne
nop
shr
repnz
das
cld
mov
xchg
bound
sahf
push
sub
or
scas
insb
test
push
cs
pop
pushf
push
inc
cmp
rclb
pop
and
cmp
sub
xsaves
lods
shll
insb
ja
cmpsb
add
mov
xchg
loop
jmp
jo
neg
fwait
loopne
mov
mov
je
inc
cmp
rorl
jmp
inc
loopne
clc
aam
adc
xor
and
insl
sbb
inc
loopne
and
popf
cwtl
or
nop
insb
pop
xor
sbb
outsl
aad
das
push
inc
adc
mov
enter
pop
sbb
arpl
ret
std
add
bound
cltd
xchg
sub
cmp
jo
cs
lock
jmp
mov
dec
imul
xchg
jg
outsb
xchg
lcall
push
sub
clc
je
roll
or
adc
sbb
cmp
dec
jmp
or
mov
lds
xor
fiadds
pusha
test
in
jmp
je
mov
daa
repnz
test
jno
fnsave
mov
mov
dec
and
pusha
xor
sub
hlt
jmp
xor
pop
inc
and
add
pop
inc
inc
xor
jge
inc
fsubrl
jo
fsubr
fldt
mov
addl
xor
ret
out
dec
xor
inc
incl
sti
inc
out
cmpsb
jns
mov
lds
iret
aam
mov
shr
adc
jecxz
fisubrl
ret
mov
cs
fnstsw
cltd
dec
out
and
incl
aas
xchg
in
jecxz
imul
mov
xchg
es
movsb
cmovp
jns
loopne
dec
iret
std
pop
lret
idivl
arpl
fstps
mov
out
or
and
xchg
xor
repnz
or
jne
or
hlt
or
call
loop
loop
insb
aas
lock
fists
sbb
jp
and
popa
pop
movsb
dec
sbb
shrl
or
pop
push
push
jnp
xor
mov
inc
sbb
mov
into
stos
stc
or
or
leave
xor
inc
sbb
hlt
fidivrl
mov
xchg
mov
jg
cmp
xchg
dec
cwtd
into
sub
and
pop
fs
cmp
mov
mov
adc
stc
in
xchg
lret
cmp
shr
push
test
xchg
inc
mov
xchg
shl
rcrl
mov
pop
insl
mov
roll
fldcw
push
mov
cltd
ret
mov
adc
xchg
das
popf
and
mov
push
stos
aad
dec
sahf
gs
or
pop
lahf
and
sbb
sbb
lahf
iret
je
cmp
pop
repz
out
loope
addr16
icebp
repnz
lods
mov
lods
push
loopne
and
jnp
sbb
lock
cmp
mov
dec
hlt
out
fildl
jg
xchg
sub
lret
jb
fs
shlb
ljmp
mov
cld
iret
adc
xor
aad
fimuls
aas
inc
subb
cs
add
popf
hlt
adc
jl
mov
mov
lret
pop
fxch
add
repnz
add
sub
adc
inc
cmpsb
cmp
xchg
sub
adcl
repz
ret
iret
fcompl
inc
or
mov
mov
dec
mov
lcall
sub
inc
js
pop
sbb
mov
mov
icebp
sbb
in
mov
jp
inc
mov
nop
pop
push
xchg
imulb
jge
sahf
cmc
std
test
ret
mov
or
shlb
mov
test
clc
adc
lret
movsl
pop
sbb
ljmp
mov
jp
or
das
push
xor
movsl
pop
mov
pop
mov
jo
js
xlat
pop
xchg
mov
dec
add
jmp
in
push
fs
xchg
adc
push
mov
mov
adc
push
call
mov
dec
xchg
cs
cld
add
cltd
mov
es
lods
out
leave
jge
add
dec
stos
daa
jmp
dec
jmp
test
pop
test
insb
repz
lods
xchg
es
and
out
div
les
pop
sub
aas
and
pop
adc
lods
push
dec
fs
xchg
in
jns
jle
and
xor
int
xlat
xchg
es
sub
sub
sbb
movsl
shlb
subl
push
scas
out
scas
hlt
jp
in
xchg
mov
lret
jge
inc
bound
jge
mov
ss
pop
repnz
jae
fdivr
cmp
add
pop
cmc
inc
dec
inc
cltd
test
xrelease
mov
and
mov
orb
jns
loop
and
aam
sarb
and
inc
mov
adc
xor
ss
jle
jl
in
mov
add
jbe
or
les
jne
imul
mov
iret
sbb
jle
jo
bts
es
imul
mov
jbe
push
adc
data16
jle
and
incl
andl
icebp
pop
mov
cmc
inc
add
adc
xchg
rolb
inc
inc
sahf
xor
call
cmpb
sbb
cmp
out
sahf
jg
lods
in
andb
push
xor
mov
jns
mov
divl
dec
jnp
test
xchg
iret
add
js
adcb
mov
push
ret
imul
lock
in
data16
movsb
sub
sbb
cld
or
lret
call
sub
outsb
jg
push
es
and
or
pop
xor
mov
movsl
jnp
sub
mov
and
dec
scas
mov
jle
mov
out
repnz
cmp
iret
pop
stos
popf
or
and
das
inc
arpl
or
xor
sbb
add
dec
xchg
xchg
lds
adc
pop
pop
sarb
outsl
test
jl
xor
xor
out
repnz
dec
std
call
dec
jecxz
xchg
clc
loop
sti
sbbl
add
push
xchg
mov
int3
cld
adc
mov
ret
or
je
sub
lret
jns
jnp
in
out
pop
in
ret
mov
addr16
cli
imul
dec
and
fcmovu
lcall
icebp
xchg
lcall
mov
stc
mulb
sbb
cld
sbb
int3
pop
mov
rorl
lods
sarl
sbb
push
popf
sarb
pop
lret
xchg
rcl
insl
lock
mov
test
jle
mov
mov
fxch
enter
aam
leave
movsl
into
xor
jle
inc
push
arpl
incb
insl
jnp
cld
lods
pop
mov
stos
ret
dec
mov
push
mov
jbe
ret
pop
aas
mov
rcll
bound
push
push
xchg
fsubl
aam
inc
push
test
jbe
jle
shrb
cld
cs
mov
push
sbb
scas
and
jb
inc
xchg
iret
mov
xlat
dec
push
addb
js
add
loope
movb
mov
into
addl
jp
leave
push
and
cmpxchg
jg
cmp
ljmp
dec
jb
jae
xor
cmp
pop
std
add
insl
dec
push
xor
jne
mov
or
push
mov
scas
pusha
fwait
mov
xor
cmp
shrl
jnp
or
lea
test
enter
dec
clc
xchg
jnp
in
xor
push
movsl
cltd
lahf
fidivs
shrl
push
into
pop
outsl
scas
je
fs
dec
fists
cvtps2pd
daa
dec
cwtl
test
sub
sub
xchg
aaa
pop
lds
and
mov
mov
jb
fcmove
sbb
js
cld
hlt
cmpsb
sahf
sub
sub
daa
test
jae
inc
push
cwtl
pop
and
faddl
ja
or
out
decb
and
test
lcall
xchg
add
or
ret
sbb
mov
dec
ret
loope
sub
sub
lea
jp
add
test
call
lods
ret
aaa
out
dec
es
push
icebp
jae
adc
and
and
mov
and
sbb
ja
and
sbb
pop
or
hlt
fnstsw
cmp
mul
test
mov
decl
data16
arpl
sub
xchg
adc
xchg
dec
mov
sub
cmpsb
cltd
call
pop
rcrb
dec
dec
adc
je
mov
push
push
dec
std
jge
pop
sub
sub
sbb
sbb
ds
aad
or
sti
add
pop
and
dec
shll
pop
hlt
mov
push
int3
or
add
rcrb
push
les
adc
ds
adc
mov
jb
push
sub
inc
inc
int3
and
movsl
sub
cmpsb
mov
lcall
sbb
xor
mov
into
jmp
inc
lea
pushf
sbb
adc
sbbl
rcr
sbb
jp
push
rcl
sub
jne
sbb
mov
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
sbb
adcl
addl
shlb
dec
push
ffree
sub
fcomp
loop
mov
stos
dec
xor
sbb
cmp
cmc
mov
push
fbld
push
fs
adc
sbb
insl
clc
mov
or
mul
mov
loopne
or
jbe
idivb
mov
daa
imul
mov
or
aad
push
inc
and
into
xchg
or
jno
test
mov
repz
inc
mov
mov
lock
jg
aaa
and
xor
jae
mov
das
xchg
pop
fwait
ljmp
skinit
mov
icebp
sub
adc
mov
mull
inc
push
xlat
xlat
das
jmp
enter
outsb
bound
or
adc
push
enter
push
push
inc
cmp
inc
mov
inc
xchg
nop
sub
jge
sub
fldt
lock
add
inc
testl
aas
fstps
test
jg
icebp
mov
mov
imul
and
and
dec
cmp
mov
xor
xlat
mov
xor
inc
cmp
xor
out
stos
adc
fcmovbe
shr
daa
jl
and
pop
push
sub
popl
push
jb
and
sbb
pop
mov
dec
and
xlat
sub
icebp
lds
and
jbe
lret
push
sahf
iret
sbb
scas
mov
sub
jl
cmp
rcll
mov
aad
jmp
icebp
push
mov
fwait
mov
or
mov
aas
push
pushf
adc
addr16
pop
lea
fldl
movsb
cmp
movsl
push
push
pop
xlat
sbb
movsl
sti
daa
mov
repz
out
push
lock
mov
ss
jns
jnp
movsb
and
pop
loop
mov
jbe,pn
xor
lcall
or
jne
jb
mov
sub
jmp
test
ret
sarb
scas
icebp
push
popf
mov
push
fisttpl
jp
int
pop
mov
bound
call
subl
mov
mov
addr16
and
fsubl
pop
cwtl
loopne
ja
mov
shrb
or
lret
adc
and
cltd
cmp
jg
or
mov
ja
xor
sbb
dec
gs
xchg
lcall
xor
push
push
les
fcmovu
mov
call
cmpb
or
sbb
cltd
sarl
cmpl
jbe
leave
xor
mov
and
jge
cmp
and
mov
add
jge
mov
sbb
mov
in
stos
sub
push
loop
pop
inc
mov
adc
mov
push
leave
icebp
mov
sbb
nop
lret
xchg
fcomp
mov
fstcw
dec
test
fists
inc
adc
shlb
jmp
mov
addr16
sub
popf
or
jg
dec
adc
mov
dec
push
add
inc
mov
nop
inc
sub
sbb
xor
orb
repz
int
ret
xchg
pop
in
loope
lcall
stos
into
mov
rclb
xor
in
inc
jl
loope
lods
test
pushf
mov
ret
lock
jl
std
icebp
repz
push
jmp
or
sbb
in
in
loop
std
and
rcrb
es
jl
cmp
push
xchg
imul
mov
cmc
jae
sbb
jmp
int
ja
xchg
aaa
es
mov
mov
rclb
add
adc
popf
mov
push
push
adc
xchg
mov
lods
sahf
xorl
adc
imul
daa
leave
jbe
sbbl
repz
imul
dec
pop
pushf
xchg
stc
sbbb
into
out
jle
xchg
enter
int
fwait
or
add
mov
jae
push
ss
dec
xchg
inc
inc
int3
jae
adc
lea
pop
enter
mov
ss
push
xor
js
gs
imul
or
mov
adc
std
cmp
loopne
fxch
xchg
pop
lock
stc
xchg
add
movsb
iret
pop
push
ljmp
xlat
mov
add
inc
out
jb
or
jecxz
mov
bound
fsubrp
stos
sbb
and
adc
sbb
sbb
stos
fimull
in
jns
fistl
cmp
adc
sub
jae
mov
ud1
mov
mov
test
lcall
sbb
fwait
sub
and
adc
outsb
mov
ja
and
into
add
add
jg
adc
iret
lcall
and
sbb
push
and
test
bound
push
popa
popf
addr16
imul
leave
outsb
inc
and
mov
add
ds
std
push
mov
mov
dec
sbb
sub
inc
popa
shrb
cs
es
pop
ljmp
cmpsb
dec
cmp
loopne
nop
mov
in
fsubs
mov
cmp
test
das
adcb
movsb
fiadds
in
jae
nop
dec
aad
push
stos
insl
or
push
ss
rcl
nop
or
fwait
lret
inc
jae
lret
sub
xor
scas
pop
mov
adc
aam
fwait
inc
and
loopne
mov
sub
xchg
sub
clc
inc
ret
or
dec
aam
dec
xchg
jge
adc
inc
lret
out
or
loop
sub
sub
jno
cmc
or
frstor
sti
test
test
jp
and
jmp
adc
pusha
adc
cmp
leave
loope
ret
and
dec
mov
sbb
in
das
imulb
pop
push
fbld
sub
fdivs
xchg
inc
arpl
fwait
lods
dec
xchg
outsb
enter
push
add
out
pop
push
mov
lods
xchg
add
mov
lcall
sahf
loopne
mov
xor
sub
sbb
cmp
lcall
mov
mov
xor
add
daa
jo
popa
lcall
or
sub
xor
popf
pop
push
mov
enter
or
cmpb
lret
push
adc
dec
add
fmul
iret
iret
inc
fcomi
insb
repz
inc
sub
and
setbe
movsl
mov
mov
sbb
push
pop
pop
aas
mov
sub
inc
fs
clc
lcall
aaa
sub
ss
out
cmpsl
cmp
push
shll
or
jno
xchg
cli
lcall
ret
mov
dec
dec
hlt
cwtl
sbb
jo
jnp
mov
sub
in
test
inc
pop
lods
jns
test
add
adc
test
jno
pop
roll
push
jmp
sub
lcall
loopne
add
sub
outsb
cmp
int
sbbl
jne
xchg
xchg
push
imul
ret
sub
fldcw
sub
fs
leave
pop
mov
mov
test
fcoms
das
mov
leave
mov
test
lret
jge
and
dec
jbe
and
mov
sub
iret
mov
mov
arpl
and
pusha
mov
push
cmp
movsl
sbbb
pop
add
cltd
sub
ds
das
xlat
test
adc
or
enter
mov
nop
jmp
test
mov
cmp
pop
fsts
mov
xchg
je
les
push
test
adc
dec
mov
pusha
outsb
adc
jge
rorl
repz
arpl
or
decl
lods
push
fnstsw
gs
mov
jae
pushf
add
and
pop
xor
inc
jns
les
ret
sbb
pushf
xchg
mov
fdivl
mov
pop
inc
es
stc
mov
imul
add
sub
or
sbb
inc
loop
or
xorb
cmp
inc
mov
lods
rcrb
mov
xchg
movsb
shll
dec
xor
mov
xchg
adc
fisubl
icebp
loop
adc
loope
inc
nop
adc
scas
fsubrs
cmp
sbb
das
das
loopne
jl
sub
pushf
push
int3
mov
std
testb
fs
sbb
and
mov
add
adc
push
es
cli
adc
pusha
fldcw
je
rclb
mov
imull
cmpsb
push
inc
fidivs
sbb
push
jmp
mov
pushw
pop
push
and
stc
add
add
mov
inc
mov
mov
cmpsl
mov
lods
sbb
push
mov
adc
lret
mov
mov
mov
js
repnz
insl
mov
in
out
in
stc
je
loope
cmp
jp
data16
dec
popa
push
xchg
fwait
sub
push
cmp
idivb
hlt
clc
out
popa
cmp
inc
xlat
or
orl
pop
mov
push
sbb
ja
imul
movsl
subl
inc
sub
mov
into
pop
addr16
push
out
xor
pop
std
inc
and
mov
jge
in
cs
shll
xchg
imulb
mov
sbb
push
mov
loopne
push
add
mov
popf
xor
or
ds
cs
pop
mov
lds
daa
shrl
push
test
xchg
movsb
aam
dec
roll
and
adc
lock
cld
pusha
sbb
in
sub
add
mov
pushf
les
popa
add
push
xor
mov
loop
xchg
outsb
daa
imulb
sbb
rclb
jmp
dec
scas
orb
push
and
into
push
jae
pop
icebp
add
mov
pop
inc
das
xor
lret
mov
or
data16
insb
test
mov
push
out
pop
cmc
xchg
addr16
inc
mov
mov
xchg
dec
pusha
mov
cli
adc
push
cmpsl
xchg
stos
ret
cli
out
or
pop
mov
movsl
sub
in
inc
lds
jge
dec
in
xorl
jo
call
sub
and
lds
sub
lret
cmp
fs
sub
out
push
and
setb
inc
cmp
imul
push
sub
dec
jp
jb
mov
jmp
or
adc
adc
out
inc
push
mov
fs
add
mov
and
mov
arpl
add
sahf
cmc
rclb
sbb
scas
std
inc
and
sub
dec
cmp
loopne
mov
shr
lds
adc
sub
pushf
push
adc
mov
xchg
mov
in
mov
ficomps
dec
push
fs
mov
inc
jae
inc
push
cwtl
pop
dec
gs
fidivrl
xor
shrl
inc
jb
adc
add
xor
dec
mov
dec
pop
sbb
aaa
push
mov
sar
jno
icebp
lahf
sti
add
mov
and
inc
sbb
sbb
into
int3
sbb
into
ds
inc
lret
rclb
and
lds
fmulp
jne
shll
testl
pop
mov
mov
pop
insb
add
shll
out
cs
into
out
cmc
jp
sub
push
ja
xor
test
push
loop
outsl
xor
lret
jmp
add
add
jnp
push
pop
aad
adc
jo
scas
int
mov
sbb
mov
in
sub
inc
shlb
ucomiss
or
cmp
push
mov
or
es
orb
ds
xlat
in
pop
pop
scas
pop
js
int
jo
fnstcw
test
insl
dec
dec
inc
sbb
popf
pop
mov
out
xchg
rcl
jb
ret
mov
das
sub
sub
test
ds
jmp
inc
mov
pop
movlps
fildl
fs
in
xor
and
test
push
mov
stos
inc
les
mov
xchg
hlt
cmpsb
fidivs
or
mov
lock
js
cmp
jno
xor
out
and
push
je
ror
repnz
in
adc
jge
and
cmpsl
sti
add
jbe
cwtl
xchg
cmp
mov
jmp
cwtl
scas
cmc
pop
ja
repz
mov
movsl
inc
sbb
jl
inc
iret
and
sarb
ret
xchg
ret
out
and
cmp
jb
lahf
int3
test
int3
insb
mov
push
fstp
lock
jle
cmp
sub
push
fstp
and
sahf
stos
sbb
xchg
dec
xor
aam
int
lcall
push
js
repnz
push
inc
adc
xlat
or
xor
inc
pop
jge
push
out
add
int3
sub
js
and
or
in
mov
out
imul
sub
jl
push
nop
fisubrl
out
mov
sub
pop
sbb
cmp
or
pop
or
test
nop
jg
mov
sbb
dec
and
sub
stos
sub
icebp
xlat
mov
sbb
sar
mov
cli
push
rorb
add
out
loopne
xorb
sub
dec
adc
or
call
loopne
sub
and
or
fcomip
ror
aam
mov
push
mov
ds
or
stc
das
sbb
jle
xchg
fs
mov
lret
sbb
je
dec
pop
mov
fisubs
mov
cmp
push
jmp
cmp
ljmp
jo
mov
enter
dec
in
scas
add
dec
mov
aaa
mov
adc
ja
lds
data16
dec
fwait
xchg
xchg
push
les
dec
popa
decl
cmp
ljmp
test
push
ret
pop
fs
xchg
sbb
and
dec
aaa
adc
adc
dec
cwtl
cmp
xor
icebp
mov
test
push
test
xchg
inc
stos
jo
inc
push
add
lock
push
repnz
sbb
sub
fcoms
push
inc
enter
add
imul
sbb
cmp
sub
sbb
bswap
lret
sub
cmpsb
stos
mov
lret
or
popf
and
movsb
jnp
sbb
pop
mov
aad
sub
ja
jno
sub
mov
pop
imul
sarl
out
cmp
cmp
sub
mov
outsb
fldt
in
repz
or
xlat
adc
mov
sbb
push
mov
and
fucomi
mov
movsl
cld
stc
sbb
lret
enter
jp
cmp
cld
pop
mov
outsb
sub
xor
repz
les
cmp
lods
mov
mov
mov
dec
ja
jb
jb
int3
sbb
and
or
int3
out
outsl
jb
pop
fidivl
pop
movsb
test
mov
in
clc
inc
jmp
int3
adc
icebp
imul
shrb
fs
push
dec
jns
cltd
notb
testl
xor
push
xchg
jbe
dec
push
mov
je
les
fldenv
or
xchg
mov
cmp
or
stos
aam
das
lods
mov
fwait
adc
out
add
push
js
sub
sub
push
pop
in
inc
mov
insl
imul
outsl
out
orl
fiadds
stos
in
jo
lcall
pop
imull
mov
mov
fistps
mov
fwait
aas
and
push
es
push
dec
fstpl
push
outsb
mov
add
jecxz
jp
xchg
mov
add
das
aas
or
push
add
mov
add
mov
stc
pop
sub
ss
push
xchg
popf
faddp
xlat
add
jecxz
jo
fwait
adc
movq
mov
test
sub
fwait
jnp
imul
mov
and
cmp
mov
inc
rclb
jns
jnp
arpl
jge
jg
cltd
xor
movsb
cmp
inc
mov
mov
add
sbb
cmpsb
sbb
jbe
ret
inc
xor
lods
inc
and
repnz
in
add
pop
adc
lahf
and
call
mov
dec
cmc
movsl
cmp
fildl
mov
cli
fistpll
or
xchg
negb
subb
sub
xchg
lret
mov
pop
out
and
push
out
in
test
push
aam
mov
push
aad
jl
ficompl
add
jne
idivl
insl
inc
mov
mov
add
ljmp
lar
xlat
dec
xchg
pop
aaa
lret
fmuls
decl
or
mov
inc
pop
xchg
push
cmp
inc
push
test
cli
mov
lahf
loope
ret
js
mov
mov
loop
push
outsb
into
push
and
sti
cmp
add
cmpsb
rcrl
add
cmp
mov
aaa
ret
popa
stc
pop
push
inc
push
ret
movsl
cltd
sub
in
jno
pop
xchg
shrb
jp
ss
mov
fidivs
adc
sbb
mov
jno
insl
and
pop
imul
cmp
into
rcrl
xchg
imul
dec
xchg
jns
jo
les
pop
dec
dec
and
xor
mov
cmp
lcall
push
sarl
pop
nop
ret
orl
adc
jl
rcl
push
aad
mov
jle
lcall
into
add
mov
sbb
mov
sbb
adc
imul
jae
test
mov
scas
adc
out
arpl
dec
shll
sub
mov
mov
out
enter
cmp
add
and
mov
lods
cmp
push
scas
sbb
stos
pop
imul
dec
dec
and
lret
insl
inc
imul
mov
jno
iret
sbb
cmpb
dec
mov
dec
and
adc
xchg
repnz
int3
sub
fwait
sub
scas
fistps
mov
mov
mov
dec
divb
and
mov
stos
sub
in
xchg
movsb
xlat
mov
push
sub
cmp
mov
add
aad
and
jge
cli
jae
adc
push
sarb
push
es
out
sub
mov
jecxz
mov
xchg
xchg
inc
and
outsb
xchg
outsl
insl
dec
jns
lcall
jne
ficoml
push
imul
jo
es
cmc
dec
imul
scas
mov
push
out
jno
xlat
mov
and
cwtl
shrl
xor
daa
xor
dec
or
pushf
sarb
lods
sub
jno
lods
aam
test
pop
push
sbb
jne
inc
add
scas
adc
mov
out
scas
ss
pop
push
sbb
scas
dec
pop
xchg
jle
sub
xlat
aam
cmp
das
mov
into
push
pop
in
sub
and
shrb
test
test
adc
mov
sbb
pop
and
sub
fidivs
mov
mov
cltd
popf
mov
cmp
fbstp
mov
jmp
jmp
je
ds
shrb
push
stos
lcall
jne
mov
in
adc
sbb
rcr
imul
sub
xchg
test
jne
and
stos
inc
lret
pusha
push
mov
popa
out
mov
aam
scas
jmp
mov
lds
pushf
out
push
jbe
pusha
pop
mov
or
in
test
in
call
jbe
lock
push
or
mov
cmc
jbe
pop
fdivrs
and
and
hlt
mov
test
daa
mov
inc
push
mov
cmpsl
xorl
jns
xchg
fucomi
cmpb
mov
and
fsubrl
mov
out
stc
rcr
pushw
out
rcll
xor
test
inc
cmp
cmp
filds
in
stos
mov
mov
sbb
add
insl
dec
adc
ret
xchg
and
adc
ret
inc
xlat
inc
jecxz
dec
push
pop
jg
cld
jmp
dec
or
cmpb
push
sub
fpatan
js
cli
and
push
add
jnp
xor
out
rcr
mov
scas
sti
mov
sbb
loopne
js
shll
mov
imul
sub
adcl
cltd
add
or
sbb
gs
gs
pop
cmp
out
adc
xor
adc
dec
mov
mov
xor
xchg
push
inc
mov
xor
fldl
adc
inc
cmpsl
mov
rcl
imul
push
arpl
mov
cld
jne
sub
sub
pop
lret
mov
jo
inc
sbb
adc
inc
out
jg
and
mov
enter
cld
and
mov
sbb
xchg
repz
int3
dec
jecxz
add
int3
xchg
frstor
jo
lcall
fnstenv
dec
idivl
push
push
inc
aas
rcrl
inc
pushl
test
add
fists
gs
xorb
daa
jle
cmp
sbb
mov
cmp
sti
xchg
adc
and
scas
int3
sub
fisttpll
add
push
lods
stc
adc
mov
push
insb
cwtl
pop
push
inc
outsb
mov
sahf
adc
xor
jp
and
xor
or
cmp
lock
fstpt
jbe
lods
push
sbb
xchg
cltd
mov
sti
cmp
popa
dec
xchg
inc
mov
dec
push
pop
inc
es
pop
mov
cs
popa
out
jnp
push
push
hlt
mov
dec
jo
jle
mov
icebp
mov
xor
xor
adc
into
xor
out
in
sbb
dec
xchg
sub
in
mov
loope
inc
hlt
add
jnp
inc
insl
fdivrs
mov
lods
std
lods
fmull
inc
notb
lahf
enter
adc
sub
out
leave
mov
lcall
sarl
pop
movsl
in
jge
mov
out
rorb
jg
rcl
mov
sub
fsubr
ret
mov
sbb
mov
leave
dec
mov
mov
mov
repz
in
add
xchg
add
aad
movsb
push
xchg
lcall
or
pop
movsl
call
pop
mov
mov
mov
adc
jge
in
adc
popf
stos
cmp
jnp
stos
push
xchg
out
push
scas
js
loop
mov
sub
shl
pop
add
mov
and
mov
dec
in
cltd
mov
repz
loopne
push
add
jns
add
notl
and
cmp
lock
push
icebp
inc
sti
popa
cmpsb
and
push
push
mov
or
data16
jg
icebp
dec
and
push
jg
mov
adc
jbe
rorb
shrl
movsl
jae
sbbl
movsb
mov
test
jmp
jle
test
cld
jl
ja
or
imul
xor
push
fisttpll
mov
loop
mov
dec
hlt
pop
or
fwait
jne
cli
setne
cmp
mov
into
inc
lods
imul
adc
push
pop
or
jnp
fistl
mov
out
push
loope
push
test
adc
or
or
aaa
xchg
cmc
movsb
in
xor
mov
cld
sub
out
lock
jmp
mov
sub
pop
mov
and
loop
enter
std
addb
mov
pop
les
rcl
out
and
cmp
addr16
sub
fnsetpm(287
cwtl
sub
add
aad
pushf
cmpsl
inc
je
inc
imul
jae
fldenv
sub
mov
rorl
in
xchg
out
mov
cmp
xchg
rcrb
ds
mov
imul
xor
les
push
jb
call
incb
cmc
inc
aas
mov
jnp
push
sbbl
cmpsl
pop
loope
mov
cmp
call
mov
jge
gs
lods
xchg
cmp
cltd
ret
and
mov
movsl
xchg
data16
mov
add
push
xor
xor
adcl
inc
lea
sbb
lods
add
pusha
xor
fwait
lock
shll
or
or
pop
sbb
std
imul
push
das
add
rorl
adc
pop
mov
jbe
mov
inc
pusha
inc
sub
std
jge
push
loope
mov
divb
in
bound
jle
popa
movsl
das
popf
adc
clc
out
push
stos
movsl
ret
cmpsb
jne
hlt
sarb
mov
icebp
sbb
adc
int
cmpsb
jbe
movsb
orb
xlat
int
out
gs
js
mov
or
mov
sub
xchg
sbb
jmp
push
lahf
sbb
mov
dec
ja
push
pandn
inc
scas
xor
push
cld
dec
aad
cmp
or
add
lahf
out
sqrtps
repz
stos
mov
sub
sub
shrl
and
jnp
xor
xchg
call
cltd
loope
lret
stos
mov
xor
lahf
mov
cmpsl
orb
and
shlb
ret
scas
ds
in
pop
xor
aam
or
mov
mov
adc
fs
bound
dec
sub
dec
inc
sbb
and
ds
movups
dec
in
imul
sahf
inc
xor
pop
std
mov
icebp
nop
lcall
aaa
and
leave
push
mov
fstpt
mov
inc
jmp
cmp
shr
jge
mov
fildll
pop
push
cltd
adc
clc
jg
mov
test
cmp
rorl
fistpl
ss
arpl
ss
dec
pop
jp
pop
imul
jecxz
popa
push
cmpsl
jno
xchg
push
add
cmp
loop
js
jmp
stc
jae
aaa
cltd
movsl
inc
lods
sub
ret
insl
popa
sub
es
daa
mov
cmp
repnz
and
dec
fsubp
sub
push
adc
sti
loop
pop
out
xlat
je
adc
fs
hlt
jae
rorl
js
mov
pop
mov
lret
fistl
and
mov
mov
push
inc
int
loop
lgs
inc
fadd
test
insl
push
or
dec
push
pop
xchg
inc
call
cli
lahf
test
test
in
lods
xchg
sahf
loope
fsubs
lahf
fisttpll
dec
mov
nop
inc
xchg
imul
jmp
fwait
lcall
inc
test
mov
cmp
pop
sub
mov
push
dec
in
inc
sbb
rcrb
xor
jg
add
push
xchg
add
mov
pop
xor
int
imul
stos
imul
loop
mov
js
cld
repnz
mov
pop
add
sub
adc
repz
in
cld
mov
pop
sbb
xchg
xchg
icebp
push
sahf
pop
jne
aas
sbbl
xor
aam
call
or
add
and
mov
imul
roll
in
mov
je
insl
fcoml
stc
imul
dec
repnz
loop
xor
mov
repz
adc
adc
dec
add
pop
pushf
into
shr
adc
fidivrs
mov
sbb
jmp
rorl
sar
xchg
test
fstp
mov
xchg
andb
incl
fdivl
dec
lcall
xchg
pushf
std
sbb
and
test
mov
add
inc
dec
pop
out
cltd
fld
arpl
ss
fcompl
cltd
ljmp
sbb
lds
fstpl
pop
dec
das
negl
inc
shl
in
xor
fstps
mov
dec
sarb
es
mov
cmp
add
mov
add
adc
out
dec
and
ds
mov
in
es
xchg
and
jne
mov
lock
sbb
mov
sti
ss
pop
sub
lret
into
enter
outsl
fmul
jb
fucomip
arpl
sub
nop
andl
rcll
addb
dec
sbb
test
sahf
aaa
into
push
jae
clc
cmp
mov
xor
jge
mov
sbb
jne
add
dec
xchg
dec
sub
aas
int3
sbb
pusha
daa
jle
dec
imul
imull
inc
xchg
and
aam
ljmp
xchg
mulb
stc
bound
fiadds
xchg
xchg
rcrl
je
pop
inc
jecxz
dec
mov
sarb
mov
mov
mov
bnd
jb
mov
int3
addr16
cmp
sahf
mov
adc
mov
inc
clc
pusha
jg
mov
mov
add
mov
cmp
clc
repnz
and
ja
cmp
pop
cmc
mov
movsb
ret
and
pop
sbb
je
push
pop
xchg
jno
ret
push
subl
push
mov
pop
jns
sbb
hlt
cmc
sub
mov
rcll
push
push
stos
test
cwtl
cmp
fstpt
mov
cmp
fwait
leave
adc
call
xchg
popa
mov
data16
loope
cmp
xchg
jmp
and
popf
mov
stos
and
jb
pop
jmp
daa
popf
jle
xor
push
pushfw
push
push
into
mov
aam
sub
mov
sbb
push
pop
fsubl
sub
xor
jmp
add
xor
out
pop
stos
push
fsts
test
jge
pop
int
nop
push
pop
js
xchg
add
mov
add
jae
mov
and
mov
jnp
mov
push
fists
cmp
push
xor
je
push
andl
ds
mov
xlat
divb
cmp
pusha
jge
daa
sub
lods
sub
mov
pop
jp
cmp
call
in
pop
push
push
out
xchg
sahf
sbb
icebp
mov
jae
adc
cmpsb
mov
fucomip
mov
push
loope
popa
xchg
push
add
adc
push
push
test
fdivp
lret
ds
insl
push
mov
pop
cmp
push
int3
ret
imulb
stc
stc
cmc
mov
cmp
xor
jae
jo
lahf
out
dec
and
pop
pop
sbb
in
lahf
dec
test
jno
dec
adcl
xor
xchg
lock
into
inc
in
imul
mov
or
lahf
sbb
lahf
jbe
or
jmp
xorb
mov
mov
stos
ss
lds
aaa
inc
pop
mov
mov
nop
pop
movsb
imul
fdiv
inc
rclb
dec
jg
fstpt
daa
pop
addl
adc
jne
and
xchg
psadbw
mov
arpl
out
and
lods
adc
xor
pop
mov
subb
test
fistps
cmp
xchg
sub
sahf
jae
and
inc
aas
lods
decl
int
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
xchg
fstps
inc
loop
push
push
and
mov
mov
lds
fadd
repnz
repz
int3
or
sahf
ds
push
jo
xor
and
cld
mov
pop
sbb
scas
xor
fsubrs
dec
sbb
lods
lret
or
xor
testl
jl
outsb
sahf
xchg
test
aas
das
pop
cltd
stos
lcall
cmp
xor
or
xor
mov
sarb
popa
sub
xor
outsl
jnp
cmp
jbe
dec
sbb
out
jmp
sbb
inc
jecxz
in
loope
ret
xor
fsubrp
fdivr
mov
lea
les
add
cmpsl
jge
push
cmp
dec
scas
sub
or
mov
scas
sahf
mov
lret
inc
data16
lods
fstp
cmpb
icebp
call
push
sbb
outsb
insb
std
testl
push
cmp
push
dec
mov
sbb
xchg
pop
aad
push
lods
mov
adc
dec
dec
enter
test
mov
out
les
incl
cmpsl
or
dec
sub
inc
je
mov
or
test
xchg
pusha
mov
jg
mov
mov
mov
pop
xchg
sbb
xchg
js
jl
pushf
scas
and
sub
inc
addr16
push
cmpsb
cmpsl
xchg
xorl
and
push
pop
mov
nop
outsb
ret
in
mov
inc
aaa
push
aaa
inc
sbb
pusha
push
fimuls
sbb
neg
jge
dec
shrb
ja
cmc
dec
sbb
jne
xor
shrl
jno
in
xor
dec
mov
pop
hlt
bound
dec
jg
sti
mov
and
std
cli
stos
mov
and
push
call
pop
mov
cltd
inc
mov
loope
add
jae
push
jne
and
mov
or
pop
or
sbb
stc
pusha
fwait
dec
scas
push
mov
lcall
mov
and
pop
sub
inc
js
push
seta
bnd
mov
ss
lret
inc
jle
xchg
sub
xor
jmp
mov
int
push
outsl
jo
leave
mov
jg
lock
push
fdivrl
push
jne
repz
test
sub
xchg
xchg
insb
icebp
shrb
sbb
addl
scas
testb
adcl
sub
ds
xor
ffreep
data16
lods
fildl
mov
fs
xchg
jmp
jle
cmpsb
pop
sbb
es
or
pushf
roll
dec
lods
js
jnp
pop
repz
mov
sbb
sub
and
int
xchg
aam
sub
inc
mov
icebp
jecxz
gs
cmc
mov
sti
es
pop
cmp
movsl
lock
inc
xchg
pop
mov
jb
push
sub
pop
pushf
mov
mov
call
push
outsl
loop
add
bound
dec
inc
hlt
cmp
cmc
pop
lahf
jae
into
sbb
dec
enter
imull
pop
in
aam
mov
mov
shrl
sbb
movl
mov
sub
int3
lds
scas
sub
out
das
push
xchg
sbb
or
xchg
scas
mov
or
cs
push
and
sbb
xor
mov
daa
mov
sbb
mov
out
arpl
pop
fldt
lret
in
in
test
xor
add
fldcw
xchg
test
scas
imul
sbb
test
add
push
pop
mov
add
push
lds
sub
push
push
xor
popf
aas
cmpsb
mov
jg
hlt
rclb
mov
sbb
out
jecxz
imul
pop
sub
icebp
lods
push
jns
add
sbb
rcrb
xor
jo
mov
in
aaa
mov
mov
adc
mov
sub
jae
inc
lcall
out
movsb
pop
push
outsl
or
jg
and
bound
fwait
ss
add
dec
stc
mov
arpl
cmpsl
push
jno
insl
ret
xchg
pop
pushf
xchg
mov
cmp
jb
adc
repnz
stos
cwtl
mov
rolb
mov
or
mov
inc
icebp
xor
jg
imul
insl
scas
add
cli
mov
cltd
xchg
jno
xchg
sahf
xchg
cmp
shll
and
ljmp
sbb
jno
mov
inc
or
sti
lcall
xchg
add
enter
fnsave
or
sti
sbb
jae
mov
inc
lret
mov
sbbb
adc
push
dec
add
add
sbb
lret
mov
outsl
pusha
lahf
ret
hlt
lds
push
outsb
lods
shlb
mull
xor
xlat
mov
fs
sti
shrl
mov
mov
std
ja
mov
dec
inc
inc
adc
dec
and
and
fidivrl
icebp
xchg
pop
inc
mov
push
into
sahf
dec
faddl
sahf
push
jne
adc
or
fiadds
push
arpl
push
ljmp
xchg
cli
mov
lods
jno
and
dec
loop
mov
inc
aas
insb
fldlg2
in
int3
outsl
dec
push
cltd
scas
rcrb
fistl
inc
call
jne
repz
jg
ja
xchg
xor
push
or
pop
loop
cld
mov
inc
mov
fidivs
fldenv
cmp
sbb
adc
dec
stos
int3
xor
aas
push
popf
gs
inc
xchg
pop
pop
imull
fisubs
fcoml
daa
das
ret
add
add
movsbl
imulb
inc
jle
and
lock
jno
shll
and
cltd
test
xchg
ljmp
sbb
ret
jnp
sahf
divl
pushf
cmp
cld
lret
dec
insb
lret
aas
adcb
pusha
pop
adc
dec
jo
cmp
outsb
fisttpll
cmc
push
cs
dec
test
push
jp
mov
mov
in
push
mov
rclb
and
xor
pushl
xchg
ret
push
inc
sub
orl
push
popf
xchg
dec
adc
inc
popa
inc
jmp
mov
mov
stos
push
fstps
cltd
dec
lods
sub
and
ret
xchg
mov
test
in
fbstp
lret
ss
enter
test
sub
mov
cld
cmpsl
sarl
decl
mov
jno
sub
dec
sbb
cmc
es
stc
movsb
push
adc
sub
movsl
mov
cmpsl
in
cli
adc
sar
xorb
loop
mov
mov
mov
sub
repz
lret
daa
mov
push
cmpsl
push
clc
loope
pop
lods
xchg
pop
adc
and
cld
rep
dec
rorl
je
mov
int3
pop
lret
jge
push
clc
sub
jae
or
mov
dec
popa
or
cmpsl
call
lcall
out
add
out
fdivr
sub
and
hlt
pop
jnp
ret
fcmovnb
icebp
lahf
push
sub
mov
cltd
and
inc
push
xchg
call
dec
out
dec
les
dec
pop
inc
dec
and
clc
sub
pop
or
xlat
push
sub
cmp
mov
imull
mov
scas
or
cmp
icebp
or
mov
in
fisttpl
mov
add
jno
push
insb
mov
cli
jmp
ljmp
mov
testl
loop
daa
jle
sub
repnz
jno
cmp
xchg
in
icebp
loopne
icebp
pop
arpl
sbb
pop
lahf
mov
movsb
jno
push
psrld
rorb
inc
out
dec
mov
mov
and
fimull
push
iret
aas
pop
pop
xchg
mov
outsb
es
inc
mov
ja
mov
stos
and
push
mov
mov
les
xchg
xorl
shrb
mov
std
test
popa
shl
mov
insl
movsb
xchg
rolb
add
pushf
clc
aaa
outsl
decb
jmp
inc
popf
js
mov
mov
xchg
adc
mov
add
sahf
add
int3
xor
lods
xor
mov
std
adc
xchg
push
stos
ljmp
orl
mov
add
and
stos
shr
pusha
xchg
mov
ds
jns
push
imull
adc
outsb
leave
jns,pt
idivl
sbb
out
push
dec
aam
pop
jbe
xorb
push
addb
adc
pusha
xchg
fmuls
imul
push
jmp
inc
mov
call
mov
and
repnz
movswl
xchg
bound
clc
outsl
dec
stos
mov
mov
xchg
movsl
scas
adc
jl
icebp
push
jne
pop
dec
daa
jmp
sbb
ljmp
dec
pop
inc
sub
rol
inc
inc
jmp
mov
or
ficoml
jae
lods
jno
shll
movsb
test
xor
xchg
lahf
arpl
dec
mov
or
rcrl
mov
fldz
xlat
mov
mov
dec
pop
icebp
cmp
cwtl
mov
jp
pop
inc
nop
mov
and
faddl
out
mov
stc
ret
jl
test
pusha
add
jge
push
lds
jns
cmp
push
pop
jb
shrl
xchg
cmpsl
lret
aaa
jb
sbb
pop
jg
andl
test
fstpt
pop
mul
sub
pop
inc
adc
int3
hlt
out
push
mov
std
cmpsb
int3
mov
ret
popf
jmp
imul
dec
lods
dec
cmp
add
pusha
out
mov
jo
repz
fsubrl
iret
hlt
add
dec
jae
fnsave
lea
jl
mov
ret
lahf
in
fcoms
lcall
cmp
aam
test
inc
or
mov
inc
adc
mov
mov
repz
and
pop
fcomps
cli
pop
mov
or
cmc
in
das
clc
adc
add
push
int
push
pop
ja
or
cld
mov
push
ja
xchg
inc
add
aaa
push
xchg
mov
inc
nop
mov
pop
mov
mov
lock
adc
arpl
sub
stos
xor
faddp
ror
js
jg
xchg
hlt
pop
mov
xor
sub
adc
cmp
insb
andb
sbb
test
jg
mov
lcall
sahf
inc
sub
xchg
je
or
xchg
cltd
lods
je
mov
in
daa
inc
and
mov
push
jl
imull
out
sub
mov
lahf
inc
mov
ret
dec
outsl
cmp
pop
test
xchg
sbb
mov
mov
push
pop
icebp
test
sti
dec
adc
jo
mov
add
xchg
push
lods
insl
in
mov
jecxz
pop
sbb
into
push
lds
movsl
inc
movsb
pop
stos
mov
and
or
je
inc
pop
xchg
adc
rcr
mov
push
inc
gs
inc
subb
and
xlat
subb
jbe
pop
out
or
cmpsb
dec
cmp
jns
or
mov
insl
out
out
mov
fwait
mov
mov
mov
jge
mov
sti
xchg
xor
les
dec
jns
aam
ret
fs
sarb
mov
mov
and
jnp
repnz
inc
sub
das
imul
lret
mov
stos
out
jge
mov
inc
imul
push
fidivrs
push
sarb
cmc
or
push
jge
popf
dec
stos
pop
mov
lods
lods
sbb
je
mov
ljmp
xor
filds
cli
adc
mov
or
add
shll
cmc
inc
xor
xchg
lsl
jae
push
xor
push
das
stc
push
jnp
cli
or
xchg
fdivrl
cmp
inc
mov
test
stc
fwait
in
mov
cmp
cmp
push
shlb
inc
pop
insb
dec
nop
pusha
loopne
and
mov
cli
stos
dec
bound
out
or
out
arpl
mov
fildl
ja
mov
scas
add
push
leave
out
repnz
jmp
push
test
fnstsw
enter
sti
in
pop
fdivr
mov
xchg
sbb
jae
outsb
mov
cmpsb
cmpsb
incb
lods
xor
test
sahf
adc
mov
sbb
aaa
popa
notl
inc
jns
xchg
outsb
mov
adc
call
sbb
hlt
into
dec
pushf
pop
or
add
lcall
scas
mov
jle
lcall
dec
push
mov
frstor
int
dec
test
sahf
pop
mov
dec
xchg
cltd
mov
xor
dec
ss
mov
inc
lock
and
dec
out
xor
lods
bound
push
roll
decl
xor
out
fs
roll
mov
jo
inc
or
mov
xor
sahf
js
lock
loope
testl
and
je
jne
mov
and
jae
mov
xchg
addl
lods
mov
or
lods
xchg
pop
lods
ja
fistps
mov
call
and
lcall
xchg
mov
pop
ja
inc
mov
shlb
xor
mov
ret
jge
in
sbbb
mov
adcl
mov
pop
data16
inc
aad
jno
lods
imul
lods
xchg
or
insb
icebp
mov
dec
lods
adc
in
inc
inc
add
cmp
aaa
sbb
xor
ja
sbb
mov
lcall
das
ds
jne
cmp
leave
cmp
adc
push
ret
lahf
out
sub
fsts
sarb
imul
add
arpl
sub
dec
mov
mov
xor
int3
test
mov
loop
sub
dec
mov
rorb
xchg
cmpsl
imul
and
in
call
mov
cwtl
fs
fldl
dec
mov
cmp
je
out
jle
mov
test
inc
adc
pop
push
lahf
imull
jno
or
dec
inc
xor
movsb
and
imul
insl
sbb
stos
cmp
cmp
push
mov
adc
sarl
ret
arpl
fs
icebp
mul
pop
mov
mov
pushl
arpl
sti
jg
cmp
dec
jmp
inc
push
mov
push
dec
fcompl
test
mov
adc
gs
push
jp
jp
push
adc
dec
cmpsb
pushf
or
inc
daa
rol
arpl
es
outsb
mov
fidivrs
int3
ficompl
pop
scas
mov
rcrl
xor
xor
inc
and
jne
aad
or
push
and
nop
jl
aam
stc
imul
mov
ljmp
push
sub
add
aad
push
lea
xorb
push
in
les
jmp
fldpi
lock
pop
cmpsl
bound
loope
mov
push
mov
push
mov
addr16
subb
cld
gs
lret
xor
pop
xchg
jmp
dec
xor
add
mov
fists
push
jl
mov
cmp
xchg
sbb
lods
out
mov
shlb
mov
sbb
sub
addl
lret
popf
adc
lods
in
popa
sbb
jl
xchg
mov
jecxz
call
jp
xor
js
stos
push
rolb
arpl
mov
mov
iret
pop
cmp
lods
cmp
lds
xchg
mov
add
jno
test
aad
sbb
std
inc
daa
fisubrs
loopne
add
xchg
or
cmp
outsb
mov
into
xor
cmp
das
pusha
or
mov
in
adc
mov
scas
mov
test
mov
clc
lahf
add
and
das
cmp
aas
mov
dec
jge
fdivrs
xor
sub
adc
nop
fiaddl
mov
add
loope
faddl
sbb
push
mov
sub
cmp
fisttpll
cmp
nop
mov
and
daa
mov
cs
scas
fildl
outsb
xor
dec
or
cmp
inc
cwtl
xchg
fsubrl
dec
ret
jg
lock
mov
cltd
das
jl
cmc
push
and
aam
push
jno
jno
push
mov
fldl2e
and
mov
mov
mov
orb
pusha
shlb
add
cmpsb
xchg
insl
cmp
js
aaa
xchg
or
jo
pop
push
sarb
mov
sub
dec
cmp
inc
push
ret
sub
push
jne
test
mov
out
pop
push
cld
add
push
sub
int3
pop
or
negl
hlt
imul
ds
stc
sbb
call
sub
jle
jnp
in
mov
or
rcrl
jmp
pop
clc
push
mov
leave
pop
andb
mov
out
add
xchg
cmc
lahf
xchg
divl
xor
xchg
cmp
stc
mov
aam
inc
mov
sti
in
jle
dec
push
or
ret
cmp
into
mov
aas
add
fwait
push
data16
sub
ret
sbb
bound
lret
sub
mov
pop
xor
jp
jbe
js
nop
outsl
jge
sbb
cmpsb
adcl
cld
cmp
cmc
cli
lock
in
add
xchg
inc
dec
lret
aam
fs
pop
sub
imul
cmp
lahf
pop
adc
mov
mov
adc
inc
sti
jae
js
jp
jg
ja
fs
xchg
mov
add
mov
jecxz
pushf
push
jno
adcl
dec
ffreep
adc
in
sarb
sbb
ljmp
ret
in
das
jmp
mov
pop
insl
outsl
into
call
jne
pop
outsb
add
fs
mov
xorl
fwait
testb
xchg
or
or
cmp
add
xchg
es
inc
push
xor
in
sbb
sbb
in
call
rolb
sub
or
pop
jae
fld
dec
dec
or
xor
shll
push
int
xchg
scas
ret
lods
and
xchg
test
arpl
or
jbe
cli
pop
push
mov
push
xchg
cld
and
loopne
mov
cmp
popf
dec
xchg
cltd
hlt
js
dec
mov
fcomps
cmp
int
pop
mov
push
scas
and
sub
xor
or
dec
and
xor
call
rorb
mov
xor
leave
jmp
jbe
enter
enter
call
jbe
out
loope
xor
cs
push
xchg
add
cld
pop
fistpll
or
ret
pop
decl
aam
int3
test
nop
jae
jnp
scas
jo
and
sub
push
sub
mov
popl
mov
push
mov
lea
or
and
subb
pop
sub
mov
inc
xor
inc
and
iret
das
jbe
sbb
iret
test
dec
lds
add
jbe
iret
and
out
push
scas
dec
xor
jle
jp
dec
inc
mov
inc
sete
pop
push
sub
sub
xor
movsb
jno
je
add
stos
enter
sahf
aaa
push
shrl
fwait
add
pusha
jne
mov
cmpsb
push
sub
or
xchg
jmp
adc
jge
or
sbb
sub
and
in
xor
push
sbb
shlb
push
dec
stos
leave
add
popa
mov
int3
sub
in
mov
jo
mov
pusha
imul
pushf
bound
rolb
call
jo
movsl
addr16
adc
jp
xor
adc
lds
cmp
les
aas
xchg
das
aas
lods
fdivr
ret
popa
fdivl
fcoml
rcl
outsb
lock
ficoml
cmc
das
lahf
ss
jne
or
shl
mov
leave
insb
test
mov
xor
jl
cmp
subb
stc
test
adc
repnz
in
adc
imul
shr
jae
hlt
jbe
push
gs
jmp
aam
mov
dec
lods
mov
jmp
mov
shrl
loop
xchg
pop
sub
mov
jp
ret
xor
frstor
fs
adc
push
aaa
notl
jno
add
in
xchg
insl
xchg
int3
add
push
cmp
dec
sub
push
enter
outsb
inc
pop
int
faddl
and
sub
stos
adc
aam
out
push
fsubrs
shl
outsb
pop
andl
jp
insl
jp
mov
dec
sub
inc
mov
je
aas
iret
bound
jmp
push
ss
lea
rolb
push
ds
pop
daa
std
cwtl
popa
add
lea
dec
iret
fdivs
lahf
cmp
popf
jb
cltd
lds
loop
lret
sbb
mov
mov
push
pusha
xchg
loop
and
sbb
loopne
insb
movsb
cmp
mov
xor
pop
jbe
adc
test
aaa
lds
loop
stc
add
imul
dec
fs
inc
andl
stos
sub
jne
add
arpl
lea
xchg
pop
pop
test
sub
pop
fldt
mov
pop
arpl
mov
dec
pop
shll
add
lds
jg
mov
push
sub
xor
rorl
shrl
mov
sarb
rorl
xor
dec
cmp
xor
xor
xchg
lret
lret
or
adc
jns
mov
nop
cs
adc
aad
stos
mov
inc
push
mov
les
cmpl
lods
jo
fcmovb
stos
sbb
adc
cmp
add
and
out
jmp
mov
push
outsl
fisttpll
xchg
dec
mov
pop
pop
sub
movsb
sti
addr16
pop
push
xchg
lods
ds
add
je
fimull
inc
cmp
mov
popa
dec
pop
or
movb
push
jge
loop
mov
pop
enter
js
rolb
icebp
and
xor
mov
lods
dec
repz
les
dec
aas
jns
out
sub
xchg
icebp
dec
in
cmp
sub
fldenv
shll
lret
pop
int3
iret
loopne
mov
lea
out
or
add
fbld
outsb
mov
xchg
cmp
add
sti
mov
rcrb
pop
or
insb
fs
cmp
inc
jecxz
xchg
pop
arpl
les
shll
xor
into
jo
jg
loope
enter
stos
gs
cmpsb
je
jle
xchg
mov
push
mov
adc
cwtl
jne
add
sub
jno
mov
xor
xchg
jge
xchg
inc
and
int3
leave
xchg
call
loope
xlat
mov
ds
ret
loop
pushf
aad
xchg
shrl
cmp
add
into
jl
out
pop
int3
mov
mov
xchg
inc
jl
rcl
fwait
shl
adc
cmp
dec
ljmp
fadds
dec
inc
mov
idivb
mov
xor
sub
pop
lock
imulb
lods
push
push
push
push
lds
scas
mov
adc
cmp
push
clc
add
push
stos
out
ret
pop
sbb
pop
push
outsb
sti
dec
mov
xor
into
pop
xchg
mov
inc
iret
mov
push
shrl
aaa
outsb
out
aaa
sti
or
inc
and
inc
lods
cmp
stos
movsl
mov
add
aad
and
insb
jecxz
push
sbb
xchg
cmp
dec
add
pop
lds
arpl
lods
call
jnp
jg
and
sub
clc
bound
sbb
push
scas
outsb
adc
stos
fildll
fsubrl
shrb
xor
add
ja
rorl
push
mov
int
dec
in
inc
or
mov
inc
decb
dec
push
enter
outsl
xlat
cwtl
pop
pusha
mov
scas
or
lcall
or
mov
das
arpl
in
pusha
sbb
insl
lods
out
push
movsl
insb
into
rcrb
cmpsl
data16
out
sub
sarb
vcvtpd2dqy
and
into
lahf
mov
pop
dec
dec
jnp
mov
scas
popf
popa
lret
addl
jo
cld
aad
add
inc
mov
imul
pop
jns
mov
pop
fs
ror
mov
xchg
gs
inc
mov
pop
and
add
push
int
mov
push
pop
pop
outsb
mov
mov
pushf
stos
aad
test
sbb
sub
cltd
jg
jle
addr16
ret
into
cmp
lahf
cmpsb
sbb
ja
cmp
lock
cmpsl
aad
outsl
adc
sahf
inc
imul
popf
lds
mov
cmpsl
jo
jg
mov
je
sub
adc
out
idivb
xchg
mov
enter
jge
loopne
dec
pop
or
cmp
adc
dec
movsl
ljmp
movsl
pop
and
inc
and
or
inc
iret
or
push
lret
inc
into
xchg
bound
stc
sti
inc
cwtl
mov
push
repz
in
mov
into
xchg
jae
xor
pop
sub
push
in
jne
dec
fdivs
pusha
xchg
adc
aas
sub
sub
test
cli
jp
mov
mov
rcrl
test
lcall
ret
pop
shrl
popa
js
mov
and
das
stc
inc
imul
enter
aam
iret
or
das
xor
sub
ret
add
testl
fwait
aas
inc
cmp
jnp
cld
cmpsl
nop
cwtl
leave
push
jo
stc
loop
scas
out
pop
aaa
or
fnsave
add
xorb
mov
aad
test
scas
inc
pop
mov
mov
subb
mov
mov
mov
pop
mov
mov
lcall
movsl
inc
sti
mov
xor
out
popf
jbe
in
or
jo
in
js
sbb
adc
xchg
mov
sbb
movsb
push
dec
cmpsb
add
nop
inc
lcall
mov
or
lea
arpl
addr16
mov
aas
shrb
mov
adc
inc
mov
mov
inc
or
out
test
cli
push
inc
test
push
in
jbe
mov
lea
outsl
xchg
push
xlat
lods
outsb
shlb
sbb
add
scas
js
dec
out
sbb
pop
jb
test
xlat
jne
jmp
aam
sti
lea
pop
mov
fcom
divl
mov
popl
jmp
sbb
fisttps
or
push
pop
push
jge
imull
mov
sbb
mov
scas
arpl
adc
sbb
in
hlt
dec
mov
fbld
and
lods
into
mov
insl
int
xor
inc
outsl
and
push
jl
adc
xorb
ds
stos
cmc
lea
cltd
outsb
bound
out
aam
mov
inc
testl
inc
daa
mov
sub
cs
pop
xchg
lahf
xor
roll
mov
cs
push
into
xchg
fsts
mov
sub
cmp
adc
mov
mov
out
popa
in
imull
into
add
xor
arpl
insl
jb
ret
dec
insb
xchg
mov
cmpb
inc
js
add
lret
mov
into
add
cmp
mov
xchg
inc
jbe
fs
mov
jns
inc
mulb
call
out
cmp
pop
fdivl
sbbb
sub
dec
loopne
or
xor
in
jle
icebp
inc
sbb
jle
adc
xchg
je
or
lods
xor
push
jno
arpl
xor
mov
rclb
inc
and
je
enter
test
shlb
jmp
fidivrl
xor
mov
sub
popf
jge
and
jbe
cmc
jo
xor
sbb
cwtl
inc
and
jl
sbb
ss
movsb
addb
and
jmp
push
pop
jmp
loopne
inc
sets
out
xchg
popa
adc
sti
roll
mov
dec
movl
mov
pop
jnp
ficompl
push
aaa
sti
mov
nop
dec
jb
dec
outsl
jno
add
pusha
or
mov
movntq
enter
cwtl
jmp
arpl
outsb
jae
inc
mov
cmc
loop
mov
sahf
add
xor
push
icebp
sub
cmp
dec
sbbl
roll
imul
test
cmp
pusha
push
push
sbb
dec
fistl
jecxz
cld
sub
jbe
ja
gs
fwait
xor
int3
sub
adc
or
push
inc
mov
pop
dec
fmul
dec
adc
sarb
pop
mov
mov
sbb
mov
inc
pop
cld
xlat
lahf
mov
push
dec
inc
int
cwtl
sarl
sbb
in
out
imul
dec
jp
xchg
in
xlat
popf
stc
lds
inc
int3
hlt
cli
in
nop
lcall
inc
cmp
sarb
sub
push
hlt
fidivrs
cs
lahf
orl
add
rcrl
add
cmpsb
test
pop
mov
ja
add
push
xchg
mov
sub
adc
mov
ss
inc
push
loope
jp
push
clc
aad
jmp
xchg
push
es
jge
in
outsb
jbe
js
test
imul
jp
test
rcr
out
sub
push
sub
dec
mov
jb
cmpsl
jmp
pop
ret
mov
mov
cmp
ds
adc
inc
or
leave
jp
mov
pop
fwait
sti
or
push
scas
loope
inc
xor
rcl
and
adc
inc
enter
out
xor
sub
pcmpgtb
sub
dec
sbb
pusha
and
cmp
iret
jge
out
movsl
lds
es
aas
lahf
js
movsb
push
sti
inc
xchg
mov
cmp
in
mov
fwait
lods
xor
ljmp
idivl
lret
jae
test
dec
jnp
jno
cli
mov
aas
inc
sbb
aas
mov
jge
add
pop
ficoml
or
outsb
mov
jbe
xor
mov
rep
sub
xchg
loopne
ror
cmpsb
icebp
xchg
cmc
pusha
mov
mov
mov
loopne
or
jb
stos
mov
inc
add
repz
push
mov
sbb
xchg
sbb
rorl
shlb
ss
fs
into
les
xor
or
push
daa
cmp
adc
aaa
jo
push
cmc
sbb
sarl
mov
test
subl
mov
mov
in
testb
mov
push
sub
xchg
iret
faddl
imul
stc
cwtl
out
sub
xchg
lds
pop
fstpt
cmpsb
notb
inc
mov
flds
mov
mov
mull
movsl
adc
inc
fmulp
and
push
xor
xchg
pop
pushf
sbb
test
add
jnp
pop
xchg
inc
xchg
dec
jle
gs
add
cld
stos
ror
or
je
mov
pusha
xor
inc
push
xor
push
mov
sub
cmp
out
cs
ret
leave
sub
sarb
bound
jl
sahf
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
sbbl
fstps
addr16
fmull
daa
fldcw
clc
lock
aad
into
mov
loope
inc
cmpsl
movsb
pop
je
dec
mov
xor
test
pushf
into
lock
popl
add
and
push
inc
sbbl
inc
sub
hlt
add
shll
push
aaa
xchg
cmp
mov
sbb
outsb
and
daa
out
sbb
or
xor
ret
dec
mov
pop
test
and
clc
mov
adc
push
gs
insb
fldenv
cli
pop
sub
cmpsl
sbb
jnp
sub
push
stos
mov
adc
aam
inc
sbb
test
daa
fdivs
fs
mov
pop
jnp
subl
pushf
xor
pop
sub
xchg
and
test
imulb
adc
arpl
dec
fwait
test
cld
xchg
pusha
lret
sar
push
pushf
arpl
mov
cltd
push
aaa
mov
adc
push
lods
fnsave
orl
test
out
xchg
cmc
xchg
mov
lahf
cltd
dec
and
push
add
or
sub
ret
and
sbb
xor
adc
jg
js
icebp
aad
xchg
add
cwtl
and
mov
iret
mov
xor
cmp
inc
jmp
inc
xchg
test
lock
pushf
push
dec
scas
mov
cmp
mov
push
daa
movb
or
inc
data16
mov
imul
mov
sbbb
push
arpl
cmp
lds
inc
in
lods
jnp
jae
inc
xchg
rol
and
stos
aam
dec
sti
repz
fwait
jl
aaa
call
mov
call
push
lods
adc
jmp
push
sbb
pop
mov
loopne
cmp
ljmp
dec
or
adc
scas
mov
repz
pushf
mov
pushw
out
cltd
sbbl
cmp
mov
frstor
inc
sbb
aam
mov
or
mov
in
xor
mov
aam
xor
mov
call
xor
jmp
roll
mov
inc
xchg
int3
jo
mov
leave
in
cmp
lcall
inc
iret
cmp
movsl
dec
sbb
dec
push
fistpl
pop
sub
lahf
mov
mov
push
ja
repnz
add
jecxz
int
mov
dec
or
movsl
popw
data16
fs
addr16
int
fsts
test
sbb
dec
jns
lcall
xor
xchg
inc
push
add
mov
pop
jns
stc
pop
outsl
out
outsb
inc
mov
push
test
adc
xchg
cltd
mov
repz
xor
scas
mov
insb
dec
xor
test
fbstp
xchg
lcall
aas
pop
cmp
imul
adc
es
or
incl
arpl
jg
jmp
lahf
lret
dec
fists
loope
push
popf
sbb
lock
or
pop
in
scas
and
stc
push
sub
inc
rorb
sbb
cmc
jns
dec
jge,pt
and
add
push
pop
mov
inc
insl
cmpsb
repz
and
dec
out
pop
push
or
adc
int
incl
sub
sbb
repnz
push
pavgw
or
out
pop
popf
inc
fnsave
loope
cmp
loope
leave
das
xor
pop
out
dec
je
pusha
sbb
cmp
bound
adc
sbb
sti
sbb
sbb
add
les
aad
sbb
push
mov
test
shrl
cmp
das
mov
or
shrb
pop
sbb
cmp
mov
xchg
ffree
out
cmp
icebp
jmp
icebp
pop
clc
push
add
lds
jo
jo
lahf
notl
test
lds
add
mov
cltd
rcpps
aaa
sub
lcall
jno
xchg
fstl
add
lds
in
push
hlt
rorb
jbe
hlt
cld
dec
mov
mov
movl
repnz
dec
out
adc
lods
jl
insb
aas
out
cmp
ja
cmp
sbb
push
je
sub
and
pop
insb
or
sub
aas
imul
movsb
sub
dec
sbb
mov
sub
mov
jne
push
gs
jmp
jmp
int3
ret
fistpl
pushl
dec
push
lret
inc
cmp
int
ljmp
pop
cmpsb
cmc
jb
dec
push
rclb
adc
inc
cmp
fnstsw
push
dec
cmp
stc
push
and
fisttpll
mov
inc
dec
mov
cmc
negl
xchg
adc
subl
mov
out
fmull
mov
mov
mov
pop
mov
ljmp
rolb
lods
test
stos
in
jo
out
xchg
popa
shl
jmp
pop
addr16
add
jae
mov
fcoms
mov
xor
ja
dec
and
jmp
and
pop
not
mov
addr16
bound
pop
pop
xor
inc
adc
xor
adc
mov
pop
outsb
xchg
enter
cmc
sbb
cmp
lahf
add
pop
pop
cltd
mov
jge
movsb
dec
jne
loop
test
push
pop
out
jns
pop
push
fcmovb
es
ja
mov
mov
aad
shr
or
push
adc
les
pop
test
push
sbb
mov
ret
push
jl
lcall
jno
add
daa
jmpw
add
xchg
mov
hlt
xchg
loope
imul
aaa
mov
fdivrs
jnp
shll
cmpl
hlt
pop
push
mov
sub
shlb
jecxz
enter
in
ja
mov
mov
ret
cmp
cmp
push
mov
stos
push
jae
lret
cmovge
mov
pop
stos
xor
push
push
push
insb
loopne
leave
xor
clc
pop
dec
pushf
jp
mov
jbe
mov
or
call
scas
arpl
push
mov
push
xor
daa
test
mov
ret
mov
lret
into
dec
adc
jl
pop
inc
add
dec
mov
cmp
push
lret
cld
lret
push
es
in
lcall
or
or
stc
xlat
dec
stos
mov
mov
enter
dec
mov
fwait
clc
pop
cmpsl
sub
std
mov
pop
repnz
and
andps
push
adc
cmp
scas
test
stos
cmp
mov
repnz
movsl
or
xchg
push
and
call
inc
sub
mov
adc
sub
jbe
rcrl
xor
icebp
mov
and
imulb
mov
popf
movsl
xchg
movsl
sub
adc
clc
daa
in
cmp
and
push
ljmp
flds
or
lcall
xchg
mov
idivl
xorb
ss
cmp
cmp
outsl
call
mov
and
pop
mov
jbe
pop
lret
dec
lahf
pop
loop
and
pusha
jecxz
ljmp
jl
rcll
decl
push
dec
cmpsl
arpl
sbb
aaa
cmp
or
cmpsb
lret
mov
sahf
shl
xor
push
dec
jp
lods
shlb
jmp
cltd
dec
sub
pop
int3
xor
pop
icebp
fidivrs
ret
mov
mov
pop
test
outsl
ret
lea
pusha
push
and
lret
outsb
aaa
xor
push
xor
int
pop
push
cmp
lret
dec
pop
imul
cmp
pop
push
pop
fmuls
fs
scas
sbb
outsb
outsb
les
jl
inc
cs
divb
test
adc
mov
mov
imul
std
adc
rol
jg
mov
imul
stos
jbe
dec
sub
jl
inc
sub
add
cmp
ret
mov
mov
dec
adc
in
pop
in
pop
mov
inc
sub
sub
or
and
cmp
or
ret
repz
jae
aam
xchg
pushf
mov
add
mov
in
loop
pop
movsb
mov
sbb
mov
mov
cltd
push
jns
nop
movsb
mov
or
pusha
mov
inc
fdiv
stos
mov
sbb
mov
fistpl
loop
int3
popa
fcoms
lret
or
pop
rolb
stos
jne
mov
xchg
inc
jbe
jno
andl
icebp
dec
call
mov
test
in
push
mov
sbb
mov
int
mov
fdivs
icebp
arpl
addr16
mov
cmc
pusha
mov
dec
xor
dec
stos
pop
mov
out
aas
or
iret
push
and
add
pop
lahf
xor
lret
push
xor
push
cmp
aas
nop
push
push
mov
imul
push
cmc
fdivl
popa
cmp
das
add
repnz
sbbl
roll
icebp
fdivl
pop
xchg
xor
out
call
pop
push
sbb
jne
das
pop
mov
sbb
loopne
inc
inc
aas
repnz
push
sbb
rcl
xchg
inc
lods
gs
xchg
xchg
push
ret
push
jbe
push
jae
jg
test
cmp
scas
push
ja
push
sbb
xchg
jns
repnz
mov
aaa
and
arpl
mov
push
jnp
sbb
and
stos
mov
roll
ret
imul
mov
jg
push
imul
push
iret
or
adc
repnz
test
jle
sbb
and
leave
add
mov
add
or
gs
mov
adc
dec
cmp
cltd
cs
test
jecxz
fadd
mov
test
pop
lock
push
std
or
lret
into
imul
push
inc
mov
inc
scas
sub
loopne
rorb
outsl
mov
dec
pop
mov
jo
cmc
push
insl
jbe
dec
jge
enter
jnp
rcrb
cmp
bound
push
jg
xchg
pop
cmp
test
sbb
adc
call
cmpsb
imul
sbb
decb
outsl
bound
leave
into
add
mov
movl
das
sub
add
test
add
jo
shll
inc
sbb
fcomi
pushf
and
or
mov
lods
xchg
adc
std
out
mov
ficoml
das
ret
jbe
out
mov
lock
push
or
mov
mov
and
mov
pusha
dec
out
in
or
add
notl
sub
xchg
or
inc
and
xchg
mov
scas
nop
sbb
jno
cwtl
dec
scas
cltd
sub
push
mov
iret
xchg
add
push
xlat
lock
cmp
iret
mov
adc
aaa
pop
aaa
clc
mov
jmp
imul
test
mov
int
incb
test
adc
into
daa
or
mov
lret
lock
cmpsl
dec
dec
dec
lcall
repnz
lock
fistl
sbb
leave
fwait
sahf
outsb
test
lahf
lret
das
mov
sbb
sahf
and
pop
lods
mov
repnz
dec
sbb
pop
cmp
or
ss
pop
sub
lock
shlb
cmpsb
mov
add
cmpsl
mov
ret
adc
out
mov
lods
mov
add
leave
inc
xchg
ljmp
shl
iret
jge
out
inc
mov
popf
inc
add
jmp
movsb
ja
mov
jg
out
xor
fcompl
nop
xchg
lret
mov
and
push
movsb
add
not
fcmovb
rorb
inc
cmp
flds
in
mov
jo
ret
push
inc
push
push
fwait
aad
push
jno
dec
mov
pop
or
mov
mov
shrl
add
popa
cmpsb
pop
adc
dec
xchg
xchg
and
push
sub
adc
cmp
mov
jg
push
inc
mov
pop
enter
jge
push
jb
imul
adcl
sub
out
adc
into
outsl
fld
add
or
cwtl
add
mov
idivb
lods
jmp
out
push
or
cmp
and
je
outsb
rcr
out
jns
dec
cmp
or
hlt
mov
push
mov
adc
repz
mov
dec
mov
jo
sbb
xchg
inc
push
mov
adc
adc
inc
sbb
jb
clc
sub
and
fs
cmp
pushf
pusha
lret
sub
dec
imul
jb
cmp
adc
rclb
lds
xor
insb
inc
dec
mov
stos
jno
jmp
dec
adc
xchg
and
or
scas
testb
jb
jg
pop
ficoms
testb
jl
std
add
mov
ss
xor
mov
sbb
rcl
orb
sub
jmp
jbe
xchg
xor
dec
sub
mov
cli
out
push
aas
xlat
mov
cmp
aaa
loope
mov
cs
stos
jbe
imul
bound
inc
fnstcw
mov
fs
ds
out
iret
cld
movsb
sbb
cwtl
mov
stc
lea
imul
rcl
mov
lds
sbb
mov
mov
push
push
clc
sub
push
mov
es
adc
xchg
das
call
sahf
push
mov
xor
neg
jb
jmp
mov
cwtl
cmp
xor
fwait
xchg
in
lret
insb
nop
lods
push
sub
das
out
es
scas
mov
imul
dec
inc
fdivl
aas
nop
fldt
mov
xor
sbb
adc
or
dec
pop
pop
or
cmp
stos
or
jmp
movl
outsb
jne,pt
xchg
out
sub
es
cmp
cmp
pop
fistl
movsb
inc
xor
mov
lods
and
sti
stos
cli
rol
insb
shlb
in
pushf
fdivl
push
add
adc
pop
out
pop
sub
inc
mov
pop
mov
icebp
jle
iret
bound
jae
xchg
outsl
inc
sub
add
adc
pop
gs
pop
stos
push
cwtl
jl
sub
inc
les
jno
std
mov
leave
mov
ljmp
iret
mov
mov
int
ror
xchg
inc
stos
ffree
outsb
cmpsl
inc
leave
repz
bound
inc
test
mov
cmp
jne
loope
and
jl
lods
sub
stos
mov
inc
push
aaa
mov
dec
movsb
pop
jmp
ljmp
fsub
add
adc
bound
cli
dec
and
or
mov
and
push
pop
xchg
xchg
push
mov
xor
sub
mov
cltd
loope
and
dec
xor
ffreep
ds
sub
push
lret
mov
nop
jecxz
or
or
sub
mov
ror
rolb
sub
std
push
cmp
out
ja
repz
jg
sarl
movsl
ja
pop
jns
or
push
adc
adc
xchg
push
outsl
inc
jl
sbb
mov
inc
insl
and
inc
mov
cmc
cmp
movsb
mov
movsl
dec
push
movsb
dec
daa
call
jl
imul
or
enter
sub
inc
pop
inc
pop
mov
aas
inc
cmpb
aam
mov
std
into
mov
jno
jnp
adc
lret
and
rclb
inc
jp
sub
aam
xlat
shlb
xchg
sub
cld
rclb
xchg
xchg
sbb
xchg
or
mov
stc
dec
aas
mov
popf
and
jg
aaa
jl
lock
mov
std
notb
stos
mov
mov
pop
mov
je
pop
sbb
xor
jae
iret
and
pop
mov
sub
repnz
inc
es
cmp
or
mov
xchg
andl
sub
scas
mov
or
xor
or
jbe
out
mov
mov
jmp
ret
ss
dec
push
xor
push
and
pop
pop
inc
stos
pop
mov
sbb
sbb
xchg
xor
pop
mov
add
mov
shlb
in
cmp
jl
icebp
in
orb
pushl
or
dec
push
inc
icebp
divl
sub
mov
mov
pop
shll
sbb
or
xlat
sbb
imul
inc
jne
pop
popf
and
xlat
lahf
rcrl
fsubrl
int3
cmp
xchg
fwait
add
add
fistps
pop
in
das
dec
inc
push
pusha
outsb
cltd
add
push
and
cmovo
xor
es
cltd
mov
je
lds
sbb
mov
adc
pop
mov
fwait
mov
push
lret
cltd
shlb
aas
ret
pop
jns
cltd
cmpsl
push
incl
xor
repz
sub
out
mov
or
inc
mov
repnz
cmpb
out
shlb
adc
insl
mov
shlb
jns
xchg
loopne
xchg
and
add
clc
dec
sub
icebp
aad
xchg
xchg
popa
jmp
and
push
mov
or
sbb
xor
push
sbb
aad
cmp
mov
pushf
lock
mov
pop
in
jb
add
xchg
arpl
js
lock
ficoms
ja
call
mov
pop
pop
stos
pop
push
ud0
dec
sahf
cmp
je
daa
xor
jl
mov
jmp
pushf
xchg
outsb
mov
push
mov
ljmp
cmp
popf
pop
inc
insb
filds
push
mov
loopne
pop
adc
lret
enter
pop
icebp
and
aas
into
pop
sbb
popf
test
mov
inc
lcall
mov
lret
xchg
mov
sbb
outsl
das
cmpsl
lcall
rorl
mov
pop
sbb
call
mov
cld
pop
cmp
mov
add
sarl
pushf
les
cmp
jl
jae
or
pop
mov
jne
insb
cltd
outsb
test
or
cmp
fsubrl
mov
fs
jg
ss
aam
inc
mov
dec
stos
sub
shrl
rorb
push
xchg
stos
stos
popa
push
push
out
fstl
mov
movsb
loopne
and
orl
jnp
enter
push
pop
loop
mov
and
nop
scas
popf
das
shll
jg
test
sub
cmp
sti
add
dec
lods
test
add
mov
scas
outsb
push
jo
push
push
inc
icebp
popf
test
or
mov
idivl
mov
xchg
mov
movsl
es
negl
aaa
mov
mov
pushf
lds
mov
sub
jmp
popa
lahf
aad
xchg
cwtl
dec
loopne
mov
inc
mov
test
ss
xchg
in
and
or
js
subb
pusha
and
imul
xchg
call
xchg
test
cld
inc
lods
test
in
push
cli
xlat
shrl
icebp
mov
outsl
push
fnsave
push
stc
js
xchg
pop
repnz
lret
mov
js
push
jmp
ret
aaa
sub
mov
push
pusha
pop
sbb
testb
divl
jmp
push
cmp
mov
pusha
outsb
fldt
mov
stos
arpl
ja
adc
lret
addr16
ret
and
pop
fldl
add
jp
imul
add
or
aam
sarb
push
jbe
aad
fildl
push
dec
add
mov
mov
adc
xor
imul
mov
adc
and
ja
mov
pop
out
adc
xlat
pop
aam
inc
call
aad
andl
outsb
cli
fisubrs
lea
sub
inc
jle
xchg
jne
jb
jno
mov
fstpt
idivl
shl
je
fs
arpl
mov
pop
notl
sub
jb
pop
icebp
mov
push
iret
xchg
fmul
rol
imul
in
cmp
jnp
mov
xor
mov
mull
movsb
cltd
ficoml
adc
repnz
sub
fimull
sbb
jg
xchg
and
xchg
lods
movsb
fsubrl
jp
sub
xchg
sbb
xor
pop
test
mov
add
sbb
push
or
xchg
arpl
in
mov
xchg
or
pusha
sar
movsl
push
fistps
xor
mov
fnstcw
push
stc
hlt
ret
mov
ret
jle
mov
fstpl
mov
jns
out
pop
outsb
add
or
sub
nop
loop
enter
mov
icebp
lds
push
push
xor
or
pop
inc
out
dec
call
fs
insl
jb
mov
mov
push
dec
mov
bound
xor
loopne
jno
and
mov
push
mov
sub
or
rcr
and
sbb
inc
in
call
and
pushf
jecxz
sub
xor
push
mov
mov
cmpb
sbb
insb
pop
fistl
xchg
jl
inc
pop
repnz
lods
ss
add
xor
lret
inc
jmp
mov
and
dec
pop
insl
xchg
xor
xor
dec
sbb
bound
in
add
xor
call
mov
push
mov
lret
lahf
lea
popa
lret
mov
pop
insb
dec
xor
xchg
push
dec
pop
cmp
dec
cli
lods
lods
mov
push
clc
or
cmp
pop
xlat
js
or
out
xchg
jnp
dec
xchg
mov
push
inc
ss
mov
call
std
jecxz
jnp
add
xor
mov
sarl
inc
mull
jae
xchg
or
out
xchg
data16
push
pushw
fwait
fwait
mov
int3
imul
jp
arpl
fsubr
stc
ret
or
sub
jge
fsts
mov
or
pop
xchg
cmpsb
stc
in
sub
cs
loope
shlb
mov
mov
mov
arpl
fnstenv
cmp
adc
andl
and
addr16
bound
mov
outsb
int
arpl
cs
mov
js
nop
xor
in
ret
pop
outsl
sbbl
sub
inc
fwait
lock
js
hlt
or
shlb
cmp
jge
inc
push
jno
xorl
fisttpl
jns
cmp
aaa
subb
sbb
xchg
ss
lret
imul
test
inc
sti
cmpsb
cmpb
loopne
mov
lods
in
lock
daa
xor
sbb
scas
push
js
mov
dec
call
data16
fucomp
scas
push
or
push
sub
adc
or
jmp
rolb
and
cmp
rcrb
nop
and
stc
sub
mov
lds
outsl
jns
daa
inc
lods
jmp
jg
test
fmuls
inc
pop
sbb
pop
test
mov
cltd
loop
sbb
inc
rcrb
mov
fsub
roll
xchg
pop
sbb
adc
mov
repnz
jmp
pop
stos
pop
sbb
xor
ss
mov
ret
jb
add
and
sub
imull
sbb
add
sbb
cltd
std
sub
cmp
push
mov
push
dec
mov
outsb
subl
jle
into
outsl
xchg
fdiv
popa
scas
int
icebp
sub
adc
push
jb
adc
stc
lds
subb
push
sahf
push
addr16
xchg
cmpb
push
lds
cmp
int
data16
jg
dec
xor
mov
mov
sbb
rcr
test
xor
mov
inc
dec
inc
mov
cli
stc
sti
cmp
lock
popl
adc
scas
imul
sbb
cwtl
xor
sbb
addb
and
inc
mov
add
pushf
adc
iret
stos
mov
pop
xor
test
xchg
xchg
lods
jl
jb
test
mov
dec
dec
pusha
add
jp
mov
cmp
xor
ror
outsb
pop
push
pop
mov
fistpl
xchg
or
imul
push
jmp
sbb
test
mov
jecxz
jbe
and
push
in
lahf
lcall
fisubl
icebp
and
mov
pop
rcr
clc
aad
sbb
shrb
push
dec
jge
pop
add
shll
push
adc
xlat
out
push
rclb
flds
mov
leave
das
pop
inc
add
addr16
setle
push
out
sbb
xchg
rolb
jmp
in
cmpsl
ds
inc
aam
jg
out
stos
cmc
repnz
inc
out
mov
add
cmp
jno
test
or
inc
arpl
adc
test
call
sub
jmp
jo
sub
push
jb
xorb
std
gs
out
push
dec
mov
lret
repz
lret
push
fcompl
xchg
daa
jns
pop
addb
loope
sbb
xchg
rorb
adc
xor
and
xchg
inc
push
mov
std
idivl
or
or
and
cwtl
inc
sbb
mov
pop
fcoml
xchg
jns
cs
je
pop
mov
aas
xchg
leave
fstps
push
sti
jmp
or
outsb
cmc
rcr
mov
out
mov
pop
inc
stos
sbb
dec
sbb
xchg
jle
pushf
out
int
sbb
mov
cli
stos
xchg
xor
push
pop
sub
sub
xor
dec
test
mov
and
sbb
fcom
mulb
aas
sbb
push
xlat
xchg
xchg
sub
shr
divl
mov
ret
nop
ljmp
inc
test
test
xchg
shr
mov
addr16
shll
stos
push
call
jecxz
xlat
sahf
cmp
mov
mov
in
jmp
adc
inc
mov
ret
push
stc
push
in
or
lret
loop
js
jnp
inc
loopne
jb
imul
mov
cmp
inc
pop
adc
dec
out
sub
in
push
sub
popf
xor
and
and
or
shl
fs
sbb
and
pusha
mov
jne
in
jo
xchg
add
arpl
dec
jb
sub
jle
testb
loope
or
jae
orb
xor
pop
inc
xchg
lcall
pushf
fwait
and
or
cmc
mov
mov
and
negl
icebp
inc
and
cmp
xchg
xor
add
mov
cmpb
hlt
xor
ret
xor
pop
fisttpl
mov
sbb
adc
pop
or
cmp
pop
lret
out
ret
movl
cltd
les
mov
pushf
dec
outsl
push
inc
pop
lock
cmc
test
adc
add
and
idivl
xchg
push
and
and
shlb
scas
xchg
ja
dec
xor
iret
scas
imul
cli
mov
jge
loop
push
xor
sbb
clc
sbb
inc
mov
xchg
ret
and
sub
dec
sub
mov
lcall
xchg
stos
and
hlt
lret
das
in
xor
lahf
sbb
pop
xchg
fcmovnu
nop
les
test
sbb
dec
push
scas
add
lcall
xchg
xchg
sub
pop
cld
xor
icebp
cmp
nop
aas
jge
mov
sti
and
or
xchg
pop
int3
int3
mov
adc
enter
test
cmpsb
fildl
leave
loope
inc
push
mov
sub
push
clc
push
sbb
push
sbbl
push
inc
cmp
inc
pop
rcr
mov
mov
pop
push
sub
das
add
insl
or
sub
push
insb
fistl
sub
call
dec
and
jecxz
dec
jae
call
in
cmp
lds
mov
sub
lret
sub
or
pop
xchg
mov
add
mov
add
call
cs
popa
mov
cmp
sub
dec
xchg
xlat
and
aam
cmp
inc
mov
push
sub
mov
lret
aas
mov
cmp
dec
cmp
out
push
inc
ljmp
cmc
loop
inc
in
push
pushf
sbb
call
cmc
cmp
sbb
sub
mov
cmp
mov
test
dec
dec
shrl
aam
mov
ds
xor
out
fs
out
ss
in
dec
pop
popa
pop
loopne
dec
lods
and
int
xchg
mov
sub
push
mov
out
fldenv
loop
out
pop
mov
mov
jl
movsb
and
into
xor
mov
int
pop
add
jne
inc
sub
imul
fs
pop
insl
inc
push
push
imul
mov
mov
or
hlt
repnz
or
xor
adc
rorb
push
dec
xchg
xchg
insl
pop
pop
adc
mull
cmp
mov
mov
int3
bound
pop
inc
outsl
mov
dec
push
cli
inc
aad
shll
dec
enter
push
jno
pop
push
xchg
aad
add
or
xor
movsb
sti
inc
jle
mov
shlb
rcrb
or
loope
mov
ds
mov
push
imul
rcrb
fisubrl
jb
push
inc
fs
jl
testb
xor
mov
xor
and
sahf
or
pop
cmc
ret
sbb
lretw
cmp
push
aam
sub
incl
mov
arpl
add
outsl
sbb
ds
push
lcall
rorb
or
jb
push
mov
mov
lods
pop
mov
xor
imul
dec
add
js
add
push
adc
mov
xchg
xor
xor
push
pop
cli
je
add
out
cmpsl
jle
pop
call
push
cld
push
fwait
std
idiv
pop
cmp
xor
inc
stc
jb
stc
cmpb
xchg
mov
ljmp
aas
movsb
mov
rolb
js
sub
lahf
adc
or
pop
pop
and
repz
jp
insb
ret
rolb
cwtl
pop
lods
movsb
sbb
sets
js
or
lret
andb
add
dec
js
push
xchg
loope
ret
dec
sub
sbb
sbb
dec
rorb
cld
xlat
scas
pusha
jmp
das
jb
aas
push
jnp
jbe
mov
mov
add
in
fstpt
add
sbb
into
dec
frndint
jg,pt
scas
jb
pusha
aad
or
sub
insb
mov
cwtl
in
cmp
std
xchg
mov
fisttpll
adc
loope
loope
in
sbb
andl
push
sub
and
fdivl
pop
cmp
mov
pushw
pop
nop
test
mov
jle
pop
sbb
cli
sbb
pop
fisttpll
adc
fstl
insl
add
xor
movl
bound
dec
adc
in
jecxz
inc
adcb
lret
pop
xor
push
mov
ljmp
lret
jp
mov
cli
jo
inc
loop
hlt
inc
out
push
mov
daa
adcl
pop
in
adc
sub
divl
mov
cmpsl
mov
mov
add
movsl
ljmp
outsb
mov
mov
xlat
fbstp
jecxz
imulb
adc
jl
xchg
out
xchg
inc
xchg
es
sub
call
insb
cmp
dec
test
mov
or
cld
aas
loop
inc
in
cmp
fwait
lahf
xchg
lret
dec
cmp
push
inc
mov
movsl
mov
lds
mov
in
je
cli
push
insb
push
mov
jmp
fcompl
sbb
gs
sti
arpl
mov
insb
cmp
add
std
fstpt
xchg
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
cs
imul
pop
addl
cmp
mov
mov
mov
push
xchg
and
pop
pop
aaa
aad
mov
outsb
xchg
test
int
cmpsb
pop
xor
mov
ds
aaa
dec
jecxz
loopne
pop
jb
xor
iret
lret
lcall
lock
xor
dec
stc
mov
cwtl
jl
stos
xchg
and
jge
daa
enter
mov
add
sbb
aas
or
adc
lcall
push
cld
xor
lret
pop
inc
push
decb
mov
dec
ljmp
dec
xchg
sbb
movsl
icebp
jns
es
mov
fcoms
cmp
jge
xchg
ret
ja
addr16
mov
jb
fdivrs
xor
jnp
sbb
scas
lret
gs
inc
push
iret
rcll
insb
xchg
mov
and
jge
sbb
inc
push
inc
jnp
jno
call
sbb
clc
cmp
jns
dec
push
repnz
mov
fadds
outsb
ret
mov
mov
xchg
adc
movsl
and
cwtl
cmp
inc
push
dec
pop
push
js
icebp
in
loopne
out
roll
mov
cmp
lods
adcb
scas
roll
pop
sub
addr16
lods
adc
out
cmp
aad
xor
and
xor
dec
xor
in
mov
cmp
loope
mov
aam
dec
cmpsb
push
jmp
stos
inc
test
rorb
inc
fldenv
lods
add
lds
jbe
inc
add
and
or
fnstcw
loop
jl
xchg
lock
fwait
cld
xchg
clc
scas
testb
jge
cld
roll
in
imul
push
stos
vphadduwq
loope
and
sbb
push
sbb
fmull
scas
das
pop
push
inc
clc
int3
in
orl
jg
sbb
adc
mov
dec
mov
out
dec
dec
lods
in
adcb
jp
or
sub
add
add
pop
call
cmp
je
bound
or
js
pop
pop
out
ljmp
mov
xor
sub
jns
fwait
and
mov
imul
add
mov
sub
cltd
mov
clc
inc
out
pop
xchg
repz
test
insb
mov
int3
and
xor
xchg
push
in
in
das
push
mov
bswap
shll
jae
mov
int
arpl
sub
cltd
outsb
jge
jno
or
scas
stc
jl
js
mov
inc
push
repnz
mov
add
lock
inc
aas
fdivrl
and
push
pop
in
lret
es
rcl
mov
xchg
mov
inc
es
push
imul
cmp
frstor
adc
mov
add
cmpsl
outsb
push
mov
loop
cld
lods
mov
xor
in
adc
pop
dec
jo
xchg
adc
push
cmp
out
jno
cs
inc
fldl
sub
cltd
cmp
mov
rcrl
and
jno
int
mov
sbb
jo
neg
adc
sub
or
testb
pop
adc
adc
inc
out
push
jg
je
jge
jmp
xor
aas
cmp
inc
jns
inc
aas
push
jb
xor
insb
add
mov
sti
nop
dec
mov
lahf
out
xorb
imul
dec
ret
stos
addr16
push
xor
outsb
xlat
mov
stos
mov
loop
mov
roll
insl
jp
push
inc
mov
xor
ljmp
mov
fldl
leave
movsb
fnstsw
cmp
xchg
fwait
outsb
push
xchg
pop
jno
mov
ds
in
lods
mov
push
cld
movsb
mov
out
dec
xchg
cld
push
int3
sub
loop
ljmp
push
mov
jb
fcompl
shll
pop
imul
sub
sahf
mov
mov
cmc
push
add
or
adc
outsl
pop
jno
jb
sbb
fdivs
add
insb
ja
jnp
aam
data16
lock
icebp
adc
cmpsb
jmp
test
and
mov
dec
movsb
mov
lret
sub
xor
dec
pop
fisubrl
pop
dec
cmp
cs
mov
mov
lods
xchg
add
bound
jecxz
add
dec
xor
out
dec
fwait
inc
cmp
dec
cmp
leave
rcrb
cli
xchg
inc
cltd
jmp
dec
jae
and
or
das
mov
dec
inc
mov
pop
lcall
mov
hlt
mov
jae
adc
xor
stc
divb
fwait
mov
arpl
stos
jb
push
aas
cltd
lahf
add
icebp
dec
xorb
repnz
scas
ffreep
out
fs
pop
push
loopne
enter
sar
cltd
aam
ljmp
xor
sub
pop
pop
push
adc
adc
push
pop
xor
cmp
es
lahf
scas
add
jbe
xor
sbb
mov
out
lret
arpl
add
jle
mov
fisttpll
pushf
xlat
jmp
imulb
cltd
fdivs
dec
jno
out
sub
stos
mov
mov
mov
lret
xchg
dec
fcmovbe
mov
cld
shrl
sub
jo
push
insb
or
jle
mov
jno
std
xor
push
mov
cltd
dec
cmp
gs
or
out
xchg
or
mov
push
mov
cmp
push
outsl
into
imul
pop
xlat
lods
rolb
xor
cmpsb
stc
lods
pop
out
push
adcb
cmc
pop
adc
js
lds
arpl
jne
add
cld
cmp
cmp
ljmp
jmp
pop
jle
mov
testl
cwtl
add
add
fs
jge
sub
push
data16
add
sti
fs
lahf
cli
cmp
inc
iret
adc
lcall
mov
dec
inc
nop
test
jge
dec
shlb
fmul
lahf
pop
lds
or
dec
mov
test
add
push
or
sub
cmp
hlt
cmp
sbb
ss
mov
mov
inc
mov
mov
dec
jne
mov
shll
bound
jl
pop
lds
inc
push
repnz
lret
xor
lds
jmp
mov
jmp
sarl
jno
fstpt
dec
xchg
cmp
mov
in
xchg
and
lds
or
dec
out
lods
sbb
lret
push
sub
cwtl
ja
inc
lock
cmpsl
ds
stos
add
pop
jbe
xor
imul
pop
mov
sbb
pop
dec
stos
flds
lret
lock
push
dec
leave
xchg
negl
movsb
out
addb
enter
mov
outsl
fstpl
inc
subb
push
add
sbb
and
test
push
movsl
nop
fcmovnb
out
jl
push
pop
int
fistpll
inc
mov
cwtl
adc
scas
ss
shr
cmpsl
loope
call
fcomps
cmp
and
jp
movsl
xor
repz
outsl
sub
pop
xchg
adc
adc
inc
lock
std
int3
mov
stos
pop
sarb
or
mov
add
xor
push
sbb
cmp
lds
jecxz
push
pop
cmp
movlps
pop
mov
cmp
xlat
pop
sub
jg
dec
int
popl
add
repz
mov
out
sbb
test
adc
inc
xlat
fisubrl
sar
or
pop
fsubs
mov
subb
jo
popf
mov
mov
stc
mov
insb
lock
sub
lock
les
mov
push
xchg
and
ds
nop
dec
pop
scas
pop
cmp
dec
jl
jp
lods
mov
mov
mov
mov
das
push
cmp
aas
xchg
lret
push
sub
ja
cli
sahf
cmp
test
in
adc
gs
out
inc
jno
mov
pushf
fldl
push
imul
cmp
out
mov
push
fwait
popa
cltd
loop
and
insl
inc
or
incb
pusha
pop
adc
sub
mov
inc
pop
xchg
popa
pop
fdivr
ljmp
fincstp
ficoms
mov
sub
and
push
testl
pop
lcall
inc
push
mov
sbb
sti
stos
mov
and
inc
sub
jne
jle
and
sti
push
adc
xchg
pop
ljmp
xchg
fwait
jle
fsubl
in
fisubrs
and
xor
mov
xor
sub
cs
cmpsb
cmpsl
fists
mov
lahf
dec
pop
fcmovnbe
or
xchg
adc
mov
pop
hlt
xor
icebp
sub
xchg
dec
mov
sti
cmp
aas
iret
repz
add
mov
jns
mov
test
ret
daa
and
inc
arpl
movsb
cld
stos
cmp
xchg
subl
dec
out
pop
mov
adc
mov
inc
mov
or
jbe
or
mov
mov
in
mov
adc
or
xor
push
cmp
mov
cmp
mov
mov
mov
in
push
cmp
or
stos
pop
cli
lods
inc
fdivl
mov
inc
jo
mov
das
roll
enter
in
cmp
jg
xor
pop
popf
fs
sub
push
jl
out
aad
in
xchg
push
inc
sub
adc
gs
xor
mov
mov
mov
xor
sbb
gs
movsl
in
jecxz
and
cmc
out
mov
daa
in
repnz
sbb
leave
mov
roll
dec
dec
dec
dec
jno
nop
in
lods
mov
mov
mov
rcrb
movsl
hlt
and
mov
fldl
xor
jnp
adc
mov
dec
push
adc
add
inc
test
add
push
add
jge
out
mov
adc
dec
push
pop
leave
es
sbb
ljmp
xchg
imul
je
sbb
jp
mov
sbb
sbb
or
scas
mov
mov
pop
test
shr
push
popf
dec
adcl
sbb
jnp
sbb
mov
cmpsl
dec
ja
lcall
pop
mov
cmp
sbbb
mov
enter
push
cmp
pop
imul
push
inc
lahf
mov
sbb
or
push
push
mov
testb
pop
adc
gs
mov
insl
scas
xchg
movsl
stos
fwait
aaa
rol
loope
and
adc
shrl
jmp
js
pop
add
rolb
icebp
cmc
cltd
out
lds
scas
sub
or
cld
xchg
sub
xlat
xchg
or
repnz
push
loop
jmp
sub
mov
outsb
jb
or
mov
pop
mov
dec
pop
sbb
sbb
mov
xor
dec
lods
stc
or
mov
xchg
mov
mov
sahf
mov
test
loopne
or
add
xchg
inc
or
and
sbb
out
popa
int3
aad
aas
jge
outsb
bound
mov
add
pop
xrelease
out
dec
ljmp
add
push
mov
cmp
sub
idivl
sbb
lahf
insl
sti
push
mov
jno
andb
mov
xorb
inc
int3
movsl
xchg
popa
xacquire
daa
xlat
pop
xor
or
popf
push
outsb
sub
push
testb
sub
sti
jo
addr16
add
inc
rclb
cwtl
pop
add
adcl
in
mov
jo
rolb
mov
add
push
adc
popf
clc
adc
sbb
cmc
aas
add
js
dec
je
mov
ljmp
ljmp
ret
mov
mov
ret
push
mov
in
xor
cmp
movb
shlb
nop
aas
inc
aaa
mov
cmp
cmc
jne
sbb
je
push
clc
fs
iret
fs
cmc
push
xor
jg
fbld
fsubrs
adc
pop
cmp
movsl
pop
or
add
icebp
cmp
mov
cld
out
fidivrs
popf
bound
into
xchg
push
sub
cwtl
pop
xchg
cmpsb
aam
inc
mov
adc
lcall
cltd
sub
jle
and
and
mov
das
mov
cmp
decl
inc
les
xor
rcrb
xor
fcmovnu
imul
addl
xor
mov
cs
into
je
xor
inc
xor
aam
call
jge
aaa
push
add
rol
movsl
mov
out
repnz
add
fdivrl
cltd
enter
outsl
test
sbb
test
push
jne
cltd
inc
test
or
mov
outsb
pop
mov
or
xor
sbb
push
mov
sub
jmp
out
ja
cltd
repz
push
xchg
xchg
mov
xchg
or
mov
out
cmp
loop,pn
stos
leave
sub
outsl
inc
mov
std
cltd
repz
adc
out
xlat
xchg
cmp
aam
sub
mov
push
pop
fimull
jb
imul
inc
or
arpl
inc
ficoms
xor
scas
inc
leave
pop
mov
das
cmp
leave
enter
fimull
adc
mov
cwtl
aaa
sbb
inc
test
stc
pop
test
repnz
mov
sub
and
pop
add
es
scas
movsl
push
sub
es
pop
ja
or
jae
pusha
sarl
outsl
adc
adc
push
mov
mov
add
out
jg
sbb
mov
pop
mov
stos
imul
push
xor
jg
daa
dec
lds
outsb
lahf
adc
jmp
lods
mov
stc
mov
test
mov
repz
clc
rcrb
pop
es
fwait
cmpsb
jbe
test
rclb
cmc
mov
push
jo
pop
add
in
sti
mov
sbb
or
sub
sub
push
ds
repz
imul
add
into
push
and
insb
pop
setb
pop
insb
or
sbb
notl
dec
mov
xor
pop
inc
mov
mov
outsl
ret
add
xor
cmpsb
xchg
fcoms
insb
push
pop
xor
mov
pusha
jae
mov
mov
pop
cmp
pop
cmp
xchg
inc
es
push
push
or
pop
push
mov
ret
adcl
sub
sbbb
xor
jmp
mov
jo
pop
cmovl
xchg
jae
decl
dec
jmp
jo
xchg
pop
sti
std
ds
out
xchg
inc
out
xchg
adc
aam
add
out
push
fwait
out
lods
xchg
cmp
daa
or
imul
mov
dec
popa
sbb
bnd
adc
jg
xchg
outsl
fistps
mov
popa
sbb
jbe
xchg
xchg
out
sar
dec
lahf
or
repnz
or
rol
pop
cmpsl
sbb
scas
mov
divb
leave
adc
sub
mov
inc
adcl
dec
mov
imulb
notb
dec
cltd
mov
sbb
cmp
mov
int
ljmp
movsb
and
cli
push
subl
xchg
inc
test
xchg
clc
addr16
jecxz
testl
mov
sbb
test
ljmp
xchg
mov
imull
xor
rcrl
xchg
loop
rorb
int3
pusha
push
lods
push
nop
jmp
mov
jl
mov
inc
dec
xchg
aaa
or
shl
aad
cmp
pusha
dec
hlt
cwtl
mov
pop
packssdw
loopne
or
mov
xor
pop
jl
orb
les
nop
fstpl
in
fcomip
cmpsl
ljmp
bound
pop
mov
sti
sbb
ret
dec
jl
or
js
shl
arpl
jl
mov
xchg
leave
add
dec
jmp
mov
in
mov
push
enter
test
xorb
xor
add
xor
pop
out
fadd
dec
push
cmp
inc
jg
das
stos
adc
adc
movsb
adc
mov
pop
gs
push
mov
ret
fcom
sub
fadd
cmp
dec
xor
xlat
int
mov
imul
arpl
adc
dec
enter
mov
mov
pop
nop
jecxz
xchg
outsl
xchg
dec
fistps
xchg
ret
xlat
loope
push
in
movsl
push
mov
pop
cmp
pop
xchg
aas
daa
iret
pusha
xchg
adcb
pushf
popf
push
pop
inc
xor
and
mov
repnz
mov
lods
mov
cmp
jns
shrb
adc
push
dec
jecxz
sub
dec
and
clc
inc
cmc
sbb
and
mov
sbb
in
mov
movsl
fimull
imul
pop
fnstcw
push
xor
xor
push
aad
fisttpl
insl
dec
jb
or
push
js
or
pop
mov
xor
push
xor
jp
mov
mov
lret
movsl
clc
incb
into
xlat
pop
orl
pop
inc
and
sti
gs
jecxz
pop
mov
into
fadds
add
into
cwtl
pop
adc
xchg
dec
sahf
mov
sti
repnz
jne
push
aaa
test
pop
adcl
xor
fstl
and
adcl
push
pop
jl
mov
xchg
add
stos
push
and
out
or
insl
dec
fldpi
pushf
dec
mov
push
lds
jecxz
mov
add
push
push
mov
mov
imul
out
sbbb
movsb
into
into
popa
loopne
or
es
loop
mov
mov
fld
js
aas
mov
loope
xlat
cmc
pushl
shll
mov
mov
sbb
or
outsb
add
pop
inc
jo
lods
pop
jbe
fs
lds
cmc
xchg
ljmp
push
rorl
pop
jno
es
stos
sub
push
mov
mov
dec
in
and
add
dec
fdivs
push
sbb
loop
inc
sbb
push
out
mov
or
jl
sub
icebp
cli
sbb
lret
lock
adc
mov
cmp
push
les
fiadds
fcoml
push
in
ljmp
jmp
cmc
imul
mov
adc
ffree
pop
cmpsb
and
sub
pusha
cmp
fisttpll
cltd
jae
scas
sbb
fwait
and
clc
std
pop
add
mov
pop
cmp
adc
addr16
fcmovnbe
in
add
inc
inc
jo
dec
adc
push
sti
dec
popa
sub
xchg
or
mov
jbe
shll
jl
mov
pushf
jns
das
je
into
arpl
lcall
lret
xor
cmp
mov
fs
in
push
inc
rol
xchg
add
int
dec
rol
adc
aad
xor
adc
push
fs
inc
adc
sub
leave
test
movsl
xorb
mov
dec
xchg
stos
inc
sbb
lret
cmc
fwait
scas
add
mov
fucomip
pop
mov
es
shll
lock
xchg
icebp
fnstcw
push
xor
dec
add
pop
xchg
repnz
mov
mov
movsb
aas
xor
adc
push
sub
push
int
xchg
cmp
dec
in
cltd
psrad
mov
orb
inc
out
ja
push
inc
pop
arpl
and
sbb
imul
mov
imul
lahf
lcall
movsb
add
cmp
pop
sub
popa
popf
mov
fmull
mov
out
in
lret
adc
add
fbstp
add
xchg
and
lret
pop
iret
data16
cmp
in
iret
inc
das
les
testl
inc
cmp
cmpsb
std
dec
or
fstl
outsl
dec
test
mov
pop
es
push
and
lcall
out
push
sbb
fwait
ret
xor
cli
mov
adc
cmc
push
stos
daa
jg
jns
scas
ret
leave
out
das
mov
outsb
icebp
rolb
repnz
sbb
push
jae
and
push
mov
xor
in
jle
push
and
adc
lcall
mov
and
orl
andl
clc
cli
lods
sbb
das
xchg
movsb
cli
das
scas
sbb
adc
insl
sbb
xchg
out
aam
lock
hlt
out
jge
fistps
test
xlat
es
and
fxtract
or
cld
adcl
sti
mov
aad
mov
adc
pop
hlt
pop
cmp
and
hlt
jp
and
sahf
repnz
jle
mov
push
jnp
xchg
push
sbb
popa
adc
aam
fidivs
and
lret
pop
mov
iret
loopne
jg
nop
notl
add
rclb
das
into
imul
push
popf
adc
and
sub
pop
jle
cmp
inc
dec
mov
jns
and
mov
aas
lds
push
aam
rolb
test
push
cmp
sub
imul
jge
pop
mov
pop
fwait
adc
rorl
xor
push
in
lods
aam
cmpsb
add
mov
push
testl
xchg
js
and
pop
or
icebp
repz
mov
lock
and
stos
repnz
cltd
arpl
insb
nop
or
aaa
pusha
pop
cld
aas
mov
test
stos
dec
jns
xchg
mov
insb
jne,pt
nop
mov
jne
adc
les
ja
enter
or
into
mov
outsl
ljmp
adc
movsl
scas
cmp
or
adc
mov
push
pop
push
sbb
ljmp
or
xchg
fcom
hlt
pop
cmp
inc
cld
mov
jo
pusha
test
sub
xchg
inc
outsl
pop
lret
movsl
push
xor
pop
jp
js
mov
xchg
lcall
jns
les
clc
dec
push
es
cltd
mov
push
mov
call
xor
arpl
mov
sbb
push
pushf
int
aam
jp
orb
mov
pop
jp
or
les
xchg
mov
pop
xor
popw
or
jne
lea
ss
lea
mov
xchg
inc
fidivrl
xor
jae
fiaddl
fdivrl
dec
push
sbb
in
nop
pop
and
mov
cs
dec
int3
push
adc
repz
mov
insl
cltd
lret
scas
das
xchg
insl
out
cmc
and
in
loopne
add
aam
mov
adc
leave
nop
xchg
iret
fmul
xchg
daa
dec
loope
popf
xchg
cmp
sub
mov
mov
cwtl
inc
mov
xchg
inc
xchg
push
push
cmpsl
lds
daa
push
jne
inc
jae
in
dec
cmp
lea
cmp
mov
pop
out
sbb
dec
out
movsl
cmp
adc
aas
mov
es
imul
movsl
leave
cmp
mov
das
xor
pop
dec
bound
lret
dec
mulb
sub
push
mov
inc
sbb
sub
outsl
mov
mov
jmp
push
mov
xlat
mov
ss
pop
in
test
pop
loope
pop
xchg
jo
adc
jmp
mov
daa
bound
gs
or
pop
pop
jecxz
or
in
int3
xchg
test
or
fs
es
or
mov
loop
mov
mov
lahf
push
cmpsb
daa
xchg
idivb
mov
test
cmc
sub
cmpsl
sbb
or
lods
ss
xor
xlat
add
or
mov
or
xchg
push
fcoml
lods
xchg
jns
fwait
push
mov
add
cmp
dec
sub
or
gs
dec
or
cmpsb
je
push
lock
lods
hlt
lds
xchg
jmp
out
das
xor
shl
inc
mov
insl
push
sub
data16
inc
out
data16
pop
xor
jb
push
mov
xchg
fs
inc
mov
mov
ljmp
lret
pop
fsubrp
jecxz
add
add
mov
fwait
jne
shll
das
and
cmp
add
xlat
aad
cmpsl
inc
jo
jns
fnstsw
leave
push
mov
and
pop
cs
nop
cs
mov
fs
jle
push
cltd
push
sahf
and
sbb
sbbl
ljmp
ss
jno
int3
mov
pushf
cmp
jae
inc
loop
insb
or
xchg
push
and
into
sti
adc
mov
sti
outsb
inc
cmpsb
bnd
popf
sbb
jl
ret
fmul
pop
fisttps
xchg
mov
and
pop
push
push
fcoml
inc
shlb
into
test
push
sub
hlt
scas
js
push
fldt
jnp
shlb
fs
stos
jecxz
fildl
jo
sub
setp
clc
arpl
mov
pop
xor
pop
mov
fldt
xchg
xchg
fst
adc
in
andl
inc
lret
adc
cmpl
adc
mov
and
lods
dec
cltd
cmp
mov
pop
pusha
jmp
xchg
sahf
aaa
adc
incb
sbbb
mov
int
ljmp
push
mov
es
rsm
adc
mov
pop
lret
and
mov
mov
mov
aas
mov
les
push
dec
pop
ja
jns
push
int3
sbb
mov
test
xor
add
push
or
sbb
pop
and
das
xor
loop
stos
fcompl
push
jae
sub
pop
imul
xchg
and
out
mov
adcl
push
dec
xchg
mov
mov
sbb
xchg
and
or
push
mov
jp
push
dec
adc
xor
cmp
lahf
cwtl
jmp
jno
daa
push
sbb
test
mov
mov
leave
adc
sbb
sti
pop
ds
push
cli
cmp
adc
insb
les
add
inc
or
repnz
rcrb
pop
rorb
cwtl
enter
ret
into
mov
rolb
pushf
test
mov
lahf
andb
mov
aam
mov
and
js
fisttpll
mov
in
add
push
xchg
mov
aam
mov
mov
xchg
hlt
inc
imul
mov
and
fidivs
jp
cld
out
or
mov
fcmovb
popf
shlb
popa
aad
push
xor
mov
cmc
mul
mov
or
and
into
jg
pop
daa
mov
out
mov
out
sub
sbb
pop
mov
sbb
fbstp
rorl
push
jae
ret
cltd
outsb
test
das
lea
add
test
cwtl
dec
mov
jno
fsts
xchg
mov
ja,pt
loop,pn
sbb
xor
popa
xchg
jl
or
out
int3
test
jl
repnz
dec
aad
push
pusha
shlb
cwtl
stos
push
pusha
mov
fmull
popf
and
movl
arpl
outsl
das
addr16
lahf
fstpt
cltd
jo
xor
aaa
inc
xor
and
sub
fnstcw
mov
push
popa
pop
cmp
insl
lahf
push
adc
repnz
ja
sahf
mov
jp
jno
mov
mov
push
adc
lcall
mov
push
mov
add
xchg
jmp
and
mov
push
repz
xchg
jge
xchg
pop
aad
cmpl
out
jae
arpl
cmp
xor
sbb
push
mov
or
ljmp
cmpsb
shrb
cmc
inc
dec
divl
lock
mov
idivl
out
test
scas
mov
test
adc
pop
ja
shlb
mov
xor
cmp
or
je
shlb
js
std
imul
push
pop
mov
dec
jmp
sti
xchg
jp
fwait
cli
mov
xchg
mov
fimuls
or
mov
fstps
fcomps
jbe
mov
in
lcall
cltd
in
cli
stos
push
or
stos
mov
lahf
out
mov
mov
enter
push
push
xor
mov
pop
and
inc
fs
or
pop
sub
enter
data16
xor
loop
aam
cltd
call
mov
faddp
push
loop
ja
fs
xor
in
aaa
dec
jp
roll
jmp
into
mov
xchg
push
jle
jmp
mov
or
in
outsb
andb
mov
cmp
mov
adc
leave
mov
shll
aaa
ja
inc
sbb
xchg
enter
clc
lods
push
ljmp
pushl
fldcw
push
and
cmp
fidivrs
shr
xchg
mov
jnp
dec
push
rcl
daa
gs
dec
inc
or
push
loope
sub
xchg
rcrb
and
cld
mov
mov
xor
cmp
sti
leave
xchg
mov
cmpsl
cmp
or
pusha
test
gs
fwait
push
fs
push
mov
int3
cmp
and
push
movsb
mov
or
xchg
das
jl
or
push
loop
sub
andb
mov
test
xor
cltd
push
xor
cmpsl
and
cmpsb
cmp
jb
lods
je
stos
jmp
push
xor
cmp
out
mov
clc
push
pop
xor
lods
inc
jecxz
repnz
mov
push
outsb
fisttpll
push
fisubrl
aam
jmp
mov
and
outsb
push
jbe
mov
test
je
ja
loopne
sbb
pop
xchg
dec
push
or
mov
fsubp
sub
inc
test
les
mov
mov
push
lret
loope
inc
and
and
sub
dec
inc
xor
sub
add
adc
lods
loop
jp
pop
jecxz
mov
jg
jae
int
mov
stos
mov
add
dec
lods
push
inc
dec
sub
imul
mov
sahf
adc
fistps
push
mov
ds
rol
icebp
mov
sub
int
pop
jno
push
mov
add
cmp
jnp
add
pop
repz
lret
sbb
mov
dec
xor
mov
insb
jne
add
cmp
fisubrl
loope
sbb
ret
ret
mov
push
lret
loopne
pop
mov
sbb
in
xor
pop
xorb
aaa
mov
insb
fnsetpm(287
inc
jecxz
mov
mov
out
je
sahf
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
xchg
test
cld
or
sahf
dec
stos
std
xor
or
dec
xor
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
