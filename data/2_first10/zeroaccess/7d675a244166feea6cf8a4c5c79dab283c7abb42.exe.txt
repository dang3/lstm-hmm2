push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
in
nop
mov
in
jo
rcl
aad
ror
rol
pop
push
add
iret
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
int
push
test
mov
loope
leave
loopne
adc
push
cmpsl
jge
loope
int3
lcall
bound
gs
repnz
pop
cli
push
jbe
xchg
popf
cmp
jno
jnp
aam
popf
dec
add
mov
push
scas
add
inc
std
mov
mov
lods
and
lcall
xor
or
insl
sub
int
mov
fistpl
push
push
mov
inc
pop
dec
mov
je
rcl
pushf
ljmp
cld
mov
push
out
fdiv
jle
cmp
jbe
cltd
or
mov
aam
adc
dec
xchg
adc
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
cmpsl
sub
sbb
aas
cmpsl
inc
push
int3
pop
rorb
inc
stos
mov
out
movsl
movsl
lea
orl
or
jns
jge
dec
iret
pop
inc
xchg
in
scas
jbe
cli
or
pop
loopne
aas
mov
hlt
sti
push
lcall
push
adc
or
pop
cmpsl
cmpsl
std
mov
ret
adc
pop
sub
jno
adc
ds
cmp
adc
scas
shr
and
lds
lock
pop
ret
idivb
xchg
and
outsl
cwtl
and
shlb
and
insl
shll
sbb
loopne
pop
push
call
fucom
shl
and
dec
sub
cmpsb
fnstsw
das
adc
add
sub
xchg
xchg
in
mov
arpl
sbb
ret
mov
aam
and
mov
xor
mov
leave
xor
mov
sbb
test
and
sub
mov
repz
mov
lods
into
pop
lcall
test
mov
cli
add
repz
out
call
aad
repz
mov
push
mov
cmp
mov
mov
in
adc
sbb
lret
js
sub
push
sbb
stc
lahf
sub
pop
xchg
mov
aaa
xchg
icebp
shlb
add
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
ret
or
in
jo
pop
arpl
hlt
xor
inc
jo
jae
mov
or
jno
mov
sbb
pushf
sbb
cmp
filds
and
pop
dec
stos
pop
adc
xchg
adc
test
cmp
add
mov
cmp
mov
jl
xchg
sub
aam
fucomp
daa
fwait
sub
add
jb
jp
sarb
jle
sub
arpl
pop
mov
scas
cmp
add
repz
aam
mov
clc
lods
ret
sub
mov
jns
push
jb
and
inc
imul
sbb
add
mov
push
dec
mov
mov
sub
in
aas
aas
add
iret
test
sbb
mov
push
repnz
and
xor
or
add
add
cmp
shll
adc
mov
pop
dec
pop
out
idivl
inc
ja
dec
pop
dec
sub
cmc
jbe
sbb
and
cmp
pop
pop
mov
or
inc
iret
xor
cmp
stos
mov
mov
xlat
mov
sbbb
call
pushl
adc
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
mov
jl
jo
jg
jo
sti
imul
bound
cmc
outsb
push
mov
aad
rorb
shlb
je
cld
push
xchg
je
push
lds
shll
mov
movsl
call
scas
faddl
push
jle
sbb
fidivrs
stos
mov
dec
fdivs
or
test
mov
fisubrl
mov
or
in
xor
jno
dec
xor
mov
cmp
pop
sti
and
in
das
ljmp
aas
clc
addr16
mov
test
or
popa
cmp
ja
shrb
out
mov
push
imul
push
jns
push
ficompl
lret
xor
loop
jo
ror
mov
shrl
sti
add
and
loop
push
mov
movsb
filds
sti
test
jb
xlat
mov
xor
and
push
aas
push
popa
mov
aam
pop
dec
sub
jnp
mov
sbb
push
cmpsl
aaa
xchg
dec
mov
cli
iret
add
ret
mov
pop
icebp
dec
es
aam
call
xlat
aaa
inc
in
mov
push
cmp
popa
enter
dec
movsl
and
xchg
cmpsb
mov
mov
cld
and
cmp
push
push
sub
adc
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
mov
sbb
xchg
jge
jo
fldl
push
nop
std
mov
lods
mov
cmpsl
adc
ficompl
call
je
mov
xchg
xor
in
sub
test
subb
and
cmpsl
in
pop
jnp
sbb
aad
fdivl
outsb
inc
loopne
xor
inc
cli
cs
mov
mov
xchg
rorl
data16
cmp
or
lds
xchg
aam
sti
jne
sub
mov
mov
std
or
mov
cmp
lock
lods
sarb
leave
jg
mov
mov
popl
mov
ja
adc
popf
jns
icebp
sub
mov
fisubrl
push
lcall
pop
clc
xchg
lahf
push
test
xor
cmp
cwtl
cwtl
push
fimuls
adc
loop
dec
insb
or
add
das
mov
push
jno
mov
bound
jle
add
mov
cmpsb
pop
imul
mov
xor
imul
pop
and
or
andl
mov
jnp
mov
push
mov
mov
dec
dec
arpl
jecxz
mov
je
or
jne
incb
addl
mov
xchg
inc
jg
fwait
sahf
out
mov
sbb
repnz
test
add
mov
jp
xor
stc
xchg
lods
repz
xchg
pop
inc
pop
and
mov
dec
jae
jns
test
aas
inc
jmp
xchg
adc
mov
push
int3
mov
cmc
in
ja
pop
or
mov
popa
lods
pop
scas
imul
fidivs
icebp
cltd
sbb
dec
cmc
or
test
sbb
jecxz
out
jno
pop
fisttpll
decb
fisttpl
xchg
addr16
stos
lret
dec
movsl
sarl
pop
in
xchg
aam
or
sub
icebp
jl
das
jle
lods
lock
lcall
les
jecxz
pop
aaa
ds
ja
add
pop
outsw
pop
push
hlt
sub
mov
dec
mov
jmp
aaa
movsl
xor
push
stos
jb
and
xchg
dec
les
lcall
and
fstps
xorl
or
std
inc
cmp
sbb
bound
push
jge
mov
sub
jo
in
pop
inc
pop
mov
xor
ss
repz
fldenv
int
mov
out
pop
icebp
sbb
cltd
inc
lret
imul
inc
sahf
call
shll
icebp
dec
adc
mov
pop
divb
loop
outsb
fwait
adc
pop
int
clc
mov
fldcw
or
jnp
sub
nop
mov
cwtl
dec
pop
add
test
sbb
repnz
add
clc
inc
xor
mov
mov
xlat
mov
xor
in
dec
add
cmp
fmull
fdivrs
shll
imul
xchg
jns
or
addl
mov
insl
jmp
shl
adc
fs
pop
mov
and
nop
daa
push
ljmp
lds
je
imul
repnz
jp
dec
sub
rorb
xor
std
sbb
inc
test
jae
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
pop
data16
cmp
jo
xchg
jge
jo
clc
mov
mov
dec
ja
and
push
mov
sar
test
das
xor
sti
xchg
outsl
push
out
arpl
jmp
mov
xchg
jo
fisttpll
cmp
sti
rcrl
cmc
stc
gs
hlt
loope
icebp
out
jns
push
jne
mov
leave
sub
inc
mov
jbe
cmp
test
dec
insl
xor
aaa
pop
mov
dec
das
xlat
and
cli
fldcw
mov
inc
xchg
cmp
push
cmp
iret
adc
add
or
xor
outsl
pusha
loopne
imull
cmp
add
adc
movsb
js
and
std
insb
fsubl
adc
inc
pop
jnp
int3
lods
pop
xor
xor
pushf
pop
xchg
leave
sub
add
fistpll
jl
and
inc
and
dec
ds
xor
inc
adc
sub
mov
insl
js
pop
push
jo
mov
test
jp
subb
in
adc
insl
cltd
pop
pop
popa
mov
sub
push
into
or
loopne
movsl
subb
jp
lret
insl
push
int
xlat
jmp
xchg
orb
xchg
scas
sub
push
and
in
push
pop
cmp
fisttpll
jnp
sub
add
push
adc
pop
lds
test
pop
sarb
lahf
lds
nop
sub
fistpll
ja
xchg
sub
jne
ret
sbb
jmp
pushf
dec
sub
mov
in
cmp
hlt
inc
in
mov
adc
icebp
and
mov
testl
fincstp
orl
push
xchg
jge
mov
pop
dec
je
add
fimull
pop
dec
push
test
mov
ficomps
push
jl
pop
dec
stos
mov
test
jmp
mov
out
out
sar
insb
xor
cmp
out
and
jo
inc
pop
add
outsl
ds
mov
das
jo
jo
mov
push
aad
lods
or
lret
jge
arpl
inc
jl
cmp
cmp
jbe
inc
gs
add
push
loope
sbbb
ds
dec
adc
dec
push
pop
mov
rol
data16
mov
mov
bound
pop
xor
add
outsl
leave
and
xchg
mov
and
scas
xchg
xor
push
stos
jg
sub
xor
jnp
lock
dec
dec
mov
into
inc
call
lahf
adc
dec
aas
dec
xchg
or
jmp
addr16
jmp
ljmp
popa
pop
and
mov
outsl
cltd
mov
and
dec
cmpsb
ja
addl
dec
or
mull
inc
enter
popf
mov
xor
stos
or
sbb
jecxz
cmpsb
call
int3
imul
push
inc
xor
dec
mov
mov
punpckhwd
test
lds
dec
mov
stc
sbb
cwtl
out
jmp
xchg
cmc
pop
mov
lods
test
xchg
push
pop
cmovnp
sub
push
xchg
pop
in
movsl
add
add
rolb
jmp
int3
push
mov
pusha
mov
es
scas
xchg
add
dec
adc
movsl
or
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
inc
dec
mov
push
add
jo
jge
jo
gs
ss
and
bound
or
mov
adc
mov
out
inc
sub
pop
pop
mov
popa
adc
mov
pop
push
cmc
pusha
mov
lock
fwait
and
adc
jno
iret
mov
jbe
scas
and
fdivrl
hlt
and
mov
outsl
mov
adc
mov
popa
inc
push
outsl
xor
and
in
sub
loope
scas
add
dec
testl
pop
xlat
fs
inc
mov
loope
xor
jecxz
in
int
and
add
test
jecxz
cmpsl
xchg
mov
add
mov
or
sbb
or
push
push
adc
xor
inc
pop
in
pop
movsl
jnp
mov
mov
enter
jmp
adc
mov
push
sti
clc
dec
in
pop
repz
fwait
sbbl
push
jmp
gs
inc
xor
adc
adc
sub
sbb
data16
int3
mov
out
fcomps
or
jbe
scas
out
xchg
stos
or
xchg
aam
sarl
sahf
test
mov
out
inc
xchg
dec
jns
scas
pushf
in
inc
test
dec
push
clc
stos
or
pop
movsl
jmp
stos
icebp
xor
divb
popf
add
movsl
lods
mov
addb
popf
test
xor
in
stos
jne
mov
add
sub
pop
xlat
mov
test
inc
insl
stos
lds
mov
in
pop
add
jnp
xor
nop
pop
add
mov
xchg
push
mov
pop
sti
shlb
cmp
stc
insb
cli
stc
pop
stos
mov
or
xor
push
aaa
sahf
sbbl
cmc
jo
bnd
cmp
xor
jo
int
sub
sub
add
mov
sub
jbe
adc
js
jecxz
dec
pushf
add
sub
out
sbb
sbb
daa
test
imul
cmpsb
gs
push
hlt
lds
clc
fldenv
test
mov
enter
addb
stos
call
inc
out
jbe
int3
cld
call
and
push
movsl
adc
repnz
in
mov
xchg
popw
sub
int3
mov
daa
and
jg
into
mov
add
sub
jge
sbb
nop
shll
dec
cmp
fimull
adc
jno
mov
adc
pop
dec
xchg
in
dec
int
aaa
pop
mov
jne
or
push
test
scas
std
pop
jmp
sahf
lds
push
int
out
mov
add
dec
dec
sar
mov
cmp
sbb
xor
ja
cmp
mov
lahf
or
imul
bound
jp
xlat
popa
pop
push
cltd
lret
cltd
popa
ret
hlt
mov
sub
lods
xchg
stc
sbb
jp
jno
ret
repz
cmp
inc
and
mov
imul
popf
sbb
push
int
dec
loopne
push
ds
test
add
sbb
mov
add
mov
sbb
movl
pusha
enter
push
insb
xorb
push
clc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
mov
dec
jmp
jge
jo
mov
dec
mov
jo
and
sub
mov
jne
fcoml
fistpl
or
push
add
mov
iret
adc
inc
ret
loope
jmp
mov
adc
icebp
movsl
jge
inc
or
jl
filds
or
mov
cltd
jne
sbb
mov
mov
int3
xchg
mov
pop
push
sub
imul
mov
cs
js
or
std
imul
into
repnz
ja
cs
stos
fcoms
pop
adc
or
jbe
mov
outsl
rol
fnstenv
xchg
adc
in
in
cmp
pushf
loope
or
inc
fistpl
subb
add
xchg
out
sbb
dec
sahf
andb
push
inc
ss
outsb
jb
dec
cs
inc
xor
outsb
jle
adc
fcomip
pop
imul
pop
xlat
push
dec
xchg
leave
shlb
arpl
fsubl
jb
push
int3
rcrl
scas
jge
sub
pushf
loop
mov
pop
out
and
imul
aam
scas
jns
sbb
fistps
or
or
ret
cli
ret
pop
repz
dec
pop
pusha
sbb
and
hlt
imul
fcoms
das
sub
and
add
mov
mov
sub
sbb
in
cmp
call
push
sbbb
jmp
mov
add
jge
pusha
ja
shl
pop
pusha
xchg
jno
or
add
mov
pusha
gs
iret
push
sbb
in
mov
mov
inc
xor
adc
stc
inc
cs
inc
loopne
and
xor
hlt
call
aaa
ret
inc
js
and
xor
dec
pushf
xchg
push
popa
cmp
and
inc
outsl
xchg
out
dec
test
and
pop
jb
out
or
sbb
insb
cltd
or
jae
repnz
rolb
mov
push
xor
popf
push
dec
ret
cmp
shl
push
mov
outsl
jnp
pop
mov
mov
push
jno
movsb
sub
scas
aaa
and
out
in
adc
mov
push
xchg
push
outsl
pop
jle
xor
push
icebp
adc
sub
add
sub
ret
fdivl
mov
scas
cmp
aam
repz
fdivrl
aad
jbe
pop
push
test
insb
outsl
cmpsb
out
inc
fcompl
ficompl
or
sub
shl
xor
cld
repz
xchg
jge
cmc
inc
mov
add
aas
jg
loop
cs
mov
push
pop
aad
lods
fcmove
fimuls
mov
popa
lea
push
es
lahf
jo
xor
pop
sti
movsb
sub
or
pop
cwtl
ja
and
fwait
jmp
cmpsb
cltd
js
mov
jo
in
test
aaa
mov
dec
out
push
ja
lret
fs
js
mov
mov
sbb
call
add
push
movl
sub
jbe
iret
loopne
xlat
cs
push
fcmovbe
test
in
bnd
mov
insb
xchg
mov
mov
mov
xor
mov
pop
and
mov
pop
test
and
fistl
or
stc
sbb
ficoms
mov
daa
pusha
hlt
and
cmp
cli
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
mov
add
jo
jge
jo
loop
icebp
mov
sbb
lcall
xor
jp
dec
or
mov
adc
pop
and
hlt
in
inc
rcrb
cltd
cmc
popa
popa
lea
divl
gs
es
shll
sbb
cmp
out
cmp
and
cmc
jecxz
imul
fdivs
clc
std
sub
adc
mov
cmc
ret
std
cmp
lcall
enter
sbb
test
xlat
add
in
shrl
sbb
inc
fucomp
or
das
idivb
jle
subl
imul
out
jnp
jecxz
in
hlt
jno
mov
pop
std
rorb
pop
rorb
bound
mov
test
mov
push
in
in
scas
mov
shll
in
pop
push
cmp
push
push
fildll
xchg
in
int
inc
lret
mov
mov
push
scas
scas
and
out
xor
xchg
push
jbe
pop
push
cmp
or
js
inc
dec
jnp
lods
sbb
imul
ffreep
fdivr
jp
xchg
pop
xchg
fcomip
popf
xchg
mov
fdivr
loopne
daa
dec
mov
outsl
lds
sarb
inc
aam
mov
pop
enter
jbe
es
xchg
mov
pop
and
push
mov
sbb
leave
dec
pop
out
jo
push
int3
pusha
sub
add
mov
push
test
shlb
hlt
and
jns
cwtl
dec
add
lcall
add
xorb
xor
or
inc
adc
sbbb
inc
xor
or
pusha
pop
iret
cmp
xor
addl
test
mov
jo
mov
stos
xor
fcmovnbe
cmp
ficomps
mov
xchg
dec
fyl2x
sub
cmpb
mov
enter
and
jmp
cmpsb
dec
mov
jb
cmp
das
or
xchg
popa
in
sbb
pop
lret
sbb
xchg
or
fsubr
mov
fisubrs
fcompl
mov
and
and
push
lea
sub
xor
insl
or
dec
mov
shrb
jo
xor
mov
iret
jmp
mov
jo
adc
cmc
loop
add
call
fcoms
movsb
dec
xchg
xor
in
jle
or
popa
idivb
iret
push
in
lock
ljmp
dec
ror
cld
mov
jno
mov
ja
stos
fldenv
dec
xchg
xchg
push
inc
sbb
add
push
mov
ds
gs
xchg
push
addl
push
push
popf
cmp
xchg
xchg
daa
cmp
mov
iret
sub
adc
js
pop
push
repnz
mov
cld
mov
inc
pop
hlt
ret
push
push
fs
push
jne
mov
fnstenv
loope
outsb
shl
sub
mov
mov
dec
arpl
add
xchg
xchg
jns
mov
loop
or
xchg
jge
js
iret
jno
fiaddl
int
jge
jmp
cs
loopne
in
jnp
jmp
jbe
fdiv
cmpsl
or
xchg
jge
jo
stos
ds
and
mov
shll
in
lret
jecxz
shll
pop
inc
iret
notl
mov
add
movsl
add
aad
adc
test
mov
lods
int
js
int
ds
push
and
mov
in
cwtl
loope
test
incb
or
dec
jmp
daa
ds
or
mov
testb
ficompl
rol
adc
mov
jmp
add
add
mov
adc
or
mov
xchg
dec
shld
int3
in
push
or
add
lds
jp
mov
movsl
inc
mov
pop
xchg
repnz
cwtl
ror
mov
cmpsl
dec
push
lock
ljmp
lahf
mov
bound
dec
shlb
pop
jmp
rcl
pusha
cmpsb
push
dec
mov
test
sbb
inc
or
push
jo
mov
ret
lods
jle
add
fwait
in
xchg
push
pop
add
xchg
aas
cli
push
jo
pop
pop
idivl
push
jmp
das
dec
lds
outsb
push
out
lahf
xchg
lds
outsb
jb
in
jns
shr
mov
outsl
scas
mov
jecxz
adc
mov
out
pop
sbb
sbb
dec
aaa
in
cmc
inc
fistpll
fs
popf
mov
scas
pop
sbbl
mov
cmp
in
fildl
jb
add
mov
dec
inc
pop
cmc
mov
out
adc
aam
mov
cmc
xchg
arpl
incb
and
repz
ja
cmc
pop
sbb
out
xchg
lahf
loope
ret
add
push
cmp
loopne
loope
loope
hlt
xor
or
mov
test
mov
jge
pop
int3
sbbb
cmp
add
pop
and
jbe
mov
mov
xor
sahf
lahf
push
mov
cmp
aaa
xor
cmp
loope
cmpsl
pop
xor
push
dec
jg
pop
jp
cld
inc
pusha
imul
rorb
popf
mov
jp
ret
movups
xor
mov
loope
mov
sahf
add
vorps
outsb
subb
adc
inc
mov
inc
sahf
xchg
cmp
sub
pusha
out
adc
jg
jo
nop
and
roll
push
or
fwait
pop
test
sub
leave
out
or
adc
sbbl
sub
or
std
xor
xchg
xchg
imul
inc
inc
add
xchg
in
es
push
mov
add
add
out
cmp
aas
add
out
lock
loopne
cwtl
jnp
out
stos
in
in
sbb
imul
aam
xor
call
stc
and
mov
sbb
inc
and
ds
repnz
aam
cmp
mov
cmc
into
insl
xchg
addl
test
filds
add
mov
lea
cmp
outsl
ret
mov
adc
cmp
fstl
inc
sar
inc
stc
fucomi
mov
mov
js
push
mov
shll
cmp
xchg
mov
les
ja
call
mov
leave
mov
sbb
xchg
scas
dec
adc
es
data16
mov
sub
stc
jmp
data16
in
int3
jne
popa
jno
imul
dec
ds
jo
mov
inc
lds
aas
xchg
jns
popa
inc
cmpsl
cmp
or
cmp
das
lahf
movsl
bound
jo
les
inc
sahf
adc
test
mov
mov
repz
aam
stc
cmp
test
pop
daa
push
stos
mov
dec
cmp
lcall
js
push
jo
add
lock
cmp
push
jnp
out
cmpsl
sbb
mov
enterw
xchg
jb
sbb
rcrb
leave
xchg
lret
jle
jmp
popa
pop
aaa
sbb
imul
mov
add
cmpsl
repz
xchg
shrl
push
and
out
roll
pop
arpl
inc
js
jbe
movsl
xchg
xchg
xor
icebp
xchg
mov
dec
cwtl
jle
bound
fistpll
inc
iret
and
les
rolb
push
sbb
or
ds
sub
cmp
rclb
ljmp
cmc
pop
cld
sbb
sub
aaa
pusha
gs
add
or
sbb
and
stos
filds
dec
and
inc
ljmp
rcr
inc
pop
lret
xchg
dec
jno
orl
in
daa
fwait
and
pop
sub
orl
daa
push
fwait
or
test
enter
arpl
mov
frstor
xchg
aaa
jg
lds
or
lret
push
inc
sbb
mov
js
fcoml
mov
xor
out
out
jnp
aas
pop
add
dec
cli
das
and
mov
test
or
mov
bound
cmp
rolb
cmpsb
xor
mov
or
mov
adc
xlat
clc
daa
push
int3
mov
lret
out
loop
add
test
lods
inc
mov
imulb
pop
push
pusha
mov
cmp
mov
sbb
test
or
testl
sbb
jge
stos
sub
adc
insb
push
icebp
outsb
cvttps2pi
fidivl
and
mov
jo
add
test
mov
das
push
repz
test
push
scas
ljmp
sub
mov
sub
jle,pt
sub
dec
fldl
outsb
xchg
cmp
jecxz
pop
outsb
xchg
xor
lods
inc
dec
xor
mov
in
adc
cmc
es
repnz
aam
mov
inc
in
stos
cmc
mov
cmc
or
leave
push
cmp
aam
ds
shl
sbb
xor
in
outsl
fdecstp
stos
lea
xor
mov
cmp
adc
mov
in
inc
jo
ret
and
jmp
inc
xchg
imul
lret
mov
or
lret
inc
int3
push
cwtl
and
rorl
inc
inc
cli
stos
nop
pop
or
popf
iret
jmp
dec
and
out
aaa
orl
stos
mov
rolb
sbb
pop
addr16
add
lahf
cmpsb
push
or
or
mov
or
or
rorb
and
inc
repnz
pop
xor
and
cs
jbe
inc
sahf
push
aad
enter
out
xchg
dec
push
sbb
enter
ljmp
jno
lock
and
stos
jl
rolb
cmpsl
je
icebp
icebp
jl
std
cmp
cmpsl
cwtl
jg
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
ds
push
adc
xchg
jge
jo
jne
adc
dec
mov
lret
pop
btr
std
mov
mov
js
shlb
sub
push
and
out
test
out
pop
jl
mov
jmp
sub
adc
bound
push
test
mov
aad
mov
popf
sub
movsb
cwtl
pop
mov
push
xlat
xor
aaa
lret
lcall
mov
cld
mov
daa
sahf
pop
xchg
daa
loopne
jecxz
cwtl
mov
jns
jecxz
fbstp
das
jns
int
xrelease
fs
sbb
dec
pop
xchg
mov
push
jns
in
or
out
loopne
mov
cltd
adc
dec
mov
cmp
ret
lahf
push
cmp
jge
pop
sub
push
jg
push
mov
pop
outsl
inc
xchg
sub
dec
int3
aad
dec
xchg
rolb
scas
xchg
adc
movsb
lret
sub
pop
fstpl
push
mov
ds
mov
jp
mov
pushf
clc
in
add
or
push
sub
dec
imul
outsl
lret
mov
mov
leave
les
arpl
test
jp
push
out
int3
rorl
sub
cli
mov
cwtl
dec
and
mov
mov
int3
out
out
stos
dec
dec
test
pop
popf
int
insl
cmpsb
mov
dec
shlb
test
scas
push
sahf
pop
mov
or
or
and
push
mov
mov
push
mov
pop
pop
fidivrl
add
fdivr
add
or
in
push
xchg
call
mov
xorb
fistl
pop
mov
cmp
push
push
stos
jp
add
faddp
mov
inc
clc
lods
stos
mov
jno
adc
push
inc
jge
rcl
inc
lds
icebp
mov
addb
icebp
jb
or
mov
je
orl
add
sbb
ljmp
xor
sub
aam
xchg
in
imul
xchg
dec
data16
das
outsb
xor
push
jb
imul
call
jae
mov
mov
xrelease
add
dec
jns
fsubr
xor
mov
sbb
ja
les
shl
mov
mulb
inc
inc
sub
jno
or
shrl
insl
cmp
sub
push
xor
mov
adc
sub
cld
jne
jp
jmp
cltd
hlt
mov
sub
and
cmp
xchg
and
or
pop
inc
adc
mov
xlat
imul
xor
test
push
les
add
jmp
sub
hlt
out
addr16
adc
negb
cmpsl
mov
jno
in
adc
cmpsb
jno
inc
or
jae,pn
mov
inc
clc
inc
aad
movb
lret
ja
testb
es
add
sub
sbbl
lea
mov
dec
mov
fwait
xor
jecxz
fwait
aam
lock
pushl
or
fdivr
in
loope
jno
lock
sti
and
push
mov
xlat
addr16
roll
or
fs
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
test
in
push
jo
sbb
jo
push
fwait
pop
sbb
insl
in
lfs
cmp
inc
mov
sbb
adc
pushf
enter
xchg
cmpsb
int3
pop
cmp
sbbl
ljmp
and
jle
sbb
inc
mov
cmpb
mov
mov
fistps
leave
imul
ret
inc
sti
mov
and
push
fisubs
add
push
shl
jmp
popf
lods
lret
inc
movsb
jecxz
ret
or
xlat
jne
or
jecxz
mov
dec
mov
push
ret
push
jp
xchg
add
xor
aas
fmul
jecxz
jg
cmc
int
inc
push
andl
jne
jo
das
push
inc
mov
sub
test
push
mov
in
mov
mov
jl
pop
jmp
int3
aam
dec
in
sbb
push
sub
das
lret
test
imul
pop
dec
sahf
pop
cmp
cltd
jecxz
pop
js
pusha
dec
not
mov
cmp
mov
mov
dec
movsb
test
mov
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
inc
xchg
sbb
jo
mov
or
sti
xorl
or
mov
push
arpl
fs
xchg
xchg
fcomps
repz
outsb
arpl
call
daa
jne
cmp
fwait
aas
cmp
test
adc
mov
fstl
or
pop
ljmp
popf
movl
fldenv
and
and
pop
leave
mov
or
mov
cmp
xor
jge
cmp
cld
cltd
dec
dec
fmull
addr16
add
dec
in
stos
aas
cli
mov
btc
clc
jns
nop
push
lret
mov
das
fldenv
pop
jbe
leave
bound
sti
pushf
in
sub
sub
sbb
push
cmpsb
and
pop
cmp
mov
aaa
pusha
sbb
out
popf
daa
sbb
gs
jle
sub
jae
add
mov
shrl
ljmp
shl
jg
icebp
jnp
stc
push
loop
aaa
dec
movsl
stos
adc
xchg
imul
push
jno
mov
dec
xor
pop
sahf
sub
mov
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
jo
sbb
jo
test
pop
dec
jbe
xchg
cmp
mov
jmp
xchg
mov
ja
ds
sti
dec
pop
rcrb
aam
cmc
adc
cmp
or
add
fnstsw
mov
push
sbb
xor
xlat
sub
xor
repz
push
cmp
dec
and
dec
es
sub
xlat
dec
mov
cmc
lods
adc
loop
xor
ret
lret
pop
mov
arpl
pushf
inc
popa
dec
roll
and
ret
sbb
and
das
push
xchg
push
pop
adc
pop
fneni(8087
std
push
inc
push
xor
aam
lret
jp
cmc
push
sub
xchg
mov
push
in
loop
enter
enter
data16
push
dec
pop
jnp
rol
aam
cmp
mov
cli
push
jnp
cmp
cwtl
cwtl
sahf
ja
xchg
fistl
push
pop
insl
xor
push
shr
xor
cmp
rorl
aaa
mov
jo
filds
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
mov
sbb
sbb
jo
sub
and
inc
loop
enter
pop
jbe
mov
jl
and
fsubrp
sbb
fisttps
cmp
inc
lret
scas
gs
and
mov
hlt
imull
loop
sbb
enter
and
scas
int3
sbb
and
push
out
scas
and
out
and
outsb
push
cmp
in
jne
lret
pushf
test
xchg
sub
pop
pusha
icebp
cmp
inc
cwtl
stc
stos
and
push
repnz
jns
xor
sbb
jns
int
push
mov
inc
leave
dec
ret
int
add
lret
push
xchg
push
test
test
jns
mov
je,pn
jmp
in
adc
in
or
cmpsl
out
xchg
popa
mov
das
or
xor
pop
adc
popa
cs
out
sub
xor
or
pop
push
push
mov
pop
mov
daa
mov
imul
jb
xor
sub
lea
and
cltd
daa
inc
pop
pop
hlt
mov
cmp
sti
xchg
add
int
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
lret
xchg
mov
pop
sbb
fistl
adc
and
rorl
jo
repz
xor
loop
mov
mov
push
xchg
xchg
inc
jmp
imul
cltd
out
into
and
push
mov
jbe
push
rorb
aam
adc
gs
lahf
sbb
cmp
cmp
mov
fdivrs
rorl
and
in
pop
cmp
ljmp
loopne
mov
aam
insl
les
inc
in
stos
movsb
outsl
xchg
jne
mov
or
lcall
mov
sbb
dec
adc
sbb
hlt
icebp
inc
insb
sub
mulb
jnp
pop
sahf
subl
or
call
jns
sbb
jno
mov
fwait
vpaddusw
pop
popa
data16
in
call
imul
add
xchg
cwtl
adc
scas
frstpm(287
jp
subl
push
call
in
jbe
andb
mov
mov
xor
add
jmp
ffree
adcb
mov
mov
jo
sbb
jo
cmp
subb
pop
pushf
flds
cmp
inc
pop
mov
mov
add
mov
pop
fbld
cmp
in
push
mov
lods
and
adc
xchg
div
push
lahf
mov
push
das
sbb
adc
xor
sub
adc
xchg
xor
push
jbe
int
adc
push
outsl
and
adc
cmp
scas
fwait
out
and
fcoms
and
mov
iret
xchg
std
scas
xor
cmp
jl
sub
cmpsl
mov
xor
push
dec
inc
scas
stos
cltd
aad
imul
loopne
sbb
inc
ffreep
in
jl
movb
or
push
call
testl
pop
pop
or
add
idivl
shll
adc
nop
shll
push
xchg
andl
jg
sbb
mov
or
insb
cwtl
sbb
stos
xor
dec
fwait
or
add
pop
cld
jnp
andl
add
add
fucom
sub
mov
inc
or
add
cmp
je
mov
mov
jmp
scas
or
repz
test
shrl
inc
daa
jo
sbb
jo
movsl
iret
sbb
push
subb
daa
clc
lret
xchg
pop
fnstenv
into
out
jo
cld
dec
ja
js
sbb
inc
mov
int3
mov
mov
subb
cmp
mov
push
es
push
push
xor
loope
mov
cmp
pop
jnp
cmp
xchg
ret
xor
sahf
pop
inc
dec
jge
xchg
mov
and
or
sbb
xor
adc
shr
arpl
jl
mov
adc
outsl
adc
in
dec
mov
jno
test
or
jb
sti
aaa
in
jmp
inc
sub
outsb
into
test
shl
mov
jmp
cmp
mov
mov
sti
jle
pop
mov
loopne
pop
lret
fildll
fmuls
cs
xchg
shlb
pop
cmp
mov
out
es
adc
testb
sbb
pop
add
inc
inc
fisubrs
sub
fs
test
pop
mov
notb
imul
add
test
pop
add
mov
jmp
dec
push
test
xor
popa
jns
sti
lods
adc
jo
mov
sbb
xchg
jmp
and
inc
lret
imul
fsts
pop
inc
mov
dec
jo
adc
call
fwait
aam
and
mov
and
push
stos
add
in
mov
push
cmpsl
movsb
scas
icebp
dec
lret
ljmp
push
cld
loop
xor
and
adc
pop
hlt
sub
pop
mov
inc
jae
adc
cmp
lds
sub
shlb
out
lret
pushl
sbb
shlb
cmp
lahf
jmp
scas
cld
pop
adc
pop
loope
ret
mov
jne
dec
lcall
pop
popa
jge
iret
imul
or
push
insl
nop
aas
enter
or
fcmovu
ficomps
gs
add
es
or
sub
rcrb
mov
std
mov
pop
mov
in
add
mov
mov
lret
pop
imul
push
aad
sub
mov
lods
mov
popf
clc
mov
mov
movsbl
xor
add
cmp
jmp
mov
gs
nop
sbb
push
aas
lods
and
jo
popa
pop
les
cltd
and
mulb
dec
inc
loopne
mov
mov
js
pop
jl
std
cld
mov
mov
push
and
cmp
cli
daa
sbb
lret
sti
inc
mov
mov
adc
and
cs
or
jnp
enter
repnz
in
sbb
mov
or
xor
ja
cmpsl
push
lahf
xlat
ja
data16
mov
sahf
add
push
jmp
or
lea
popa
lods
pop
xlat
add
and
sbb
and
push
arpl
jb
out
sub
push
popa
cmp
add
cmp
movsl
pop
cmpsb
mov
sub
sbb
lods
movsb
fmuls
xor
hlt
stc
sbbb
dec
and
movsb
xchg
lods
sub
cmc
sub
fsts
clc
mov
pusha
pop
shr
clc
call
pop
lret
cli
cmp
cltd
mov
mov
xchg
das
sub
pop
mov
lahf
mov
push
push
out
mov
das
adc
decb
shll
mov
repz
cmpsb
xchg
dec
mov
jmp
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
xor
and
jo
jg
jo
mov
dec
loop
in
insb
add
jp
shll
mov
nop
addr16
sar
mov
inc
xchg
inc
movsb
popa
dec
enter
inc
xchg
mov
mov
mov
sbb
adc
ss
inc
mov
inc
test
cmp
jl
test
push
mov
jmp
test
pop
int
cltd
fcom
cmp
inc
outsb
or
ret
sbb
leave
aaa
mov
mov
mov
mov
pop
mov
popf
push
shlb
out
fidivs
in
test
pop
push
cli
pop
cmc
loop
or
jecxz
cmpsb
loop
jecxz
xchg
stos
pushf
push
pop
cmp
mov
inc
repz
xchg
adc
popf
int3
lcall
xor
jnp
push
in
mov
std
add
mov
mov
cmpl
loope
push
fidivrl
rclb
push
cmpsb
mov
lock
pop
nop
jae
test
mov
sahf
dec
jae
es
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
cwtl
push
inc
subb
push
pusha
leave
popf
xchg
out
push
shll
ja
fstpt
inc
xchg
outsl
lret
cmp
inc
mov
sub
add
data16
mov
add
lea
addr16
xor
bound
lret
data16
and
popf
test
inc
pushf
das
push
push
jnp
sbb
mov
stc
push
push
addb
pop
mov
xor
sub
pop
inc
jl
out
lods
jne
test
mov
xchg
dec
pop
push
lds
xor
sub
push
jne
ja
push
xlat
add
cmp
sbb
inc
fidivrl
rcrb
pop
add
xor
loop
jns
mov
fldenv
sub
push
xchg
lock
mov
xchg
mov
sbb
jbe
ret
jecxz
push
ret
loopne
jno
jnp
out
add
dec
iret
int
mov
pushf
jg
adc
stos
and
add
jge
xchg
push
insl
into
icebp
push
pop
xorb
pop
push
mov
aad
mov
xchg
and
in
cmc
insl
xor
mov
jmp
jmp
cmp
xor
sarl
cld
stos
or
inc
and
jo
sbb
jo
lods
rol
clc
std
xchg
or
xor
pop
push
xor
int
mov
jmp
out
jnp
fsubl
pushf
mov
mov
aas
orl
in
mov
jge
cmp
pushf
jle
sub
mov
jge
fstp
popf
aas
jbe
popf
nop
pop
sarb
loop
lea
xchg
and
xor
lea
lret
scas
xchg
or
ds
ficomps
push
stos
or
aam
pop
pop
and
push
push
push
stos
push
adc
aam
out
ficompl
loop
jge
add
test
pop
push
pushw
or
into
cmpsl
pushf
call
ds
push
sbb
cmpsl
imul
orl
cmp
adc
dec
pop
nop
imul
push
insb
mov
insl
std
aad
adc
lds
sbb
cmpsb
ret
in
fldenv
repz
mov
xchg
jle
jns
and
scas
sub
mov
cmp
aad
arpl
push
icebp
mov
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
lcall
popf
jnp
add
enter
pusha
gs
xor
xlat
cmp
sub
inc
or
out
fimuls
jne
mov
sbb
stos
fmull
ror
push
and
sahf
jle
nop
and
pop
popa
test
aad
lock
push
lock
xor
dec
mov
mov
int
ljmp
cmp
lret
loope
inc
jecxz
test
adc
out
fs
cmp
ss
lcall
stos
or
les
data16
inc
insl
adc
lods
into
ds
and
roll
add
shlb
shl
sbb
loopne
inc
push
push
stc
lds
and
lahf
lods
jno
or
inc
fcoms
xor
cmp
push
in
icebp
fcom
xchg
movsl
popf
xchg
cmp
and
loop
mov
js
into
fisttps
dec
xchg
push
add
test
cmp
subl
sub
xchg
jns
loop
inc
fsubrl
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
sbb
pop
hlt
das
jo
fnstcw
jo
sub
movsb
xlat
lahf
ret
imull
aad
data16
daa
sub
xlat
aas
movsb
test
and
movsl
sbb
cli
cld
and
cmpsb
sub
inc
jo
mov
xor
rcrl
jns
push
mov
sbb
rolb
repnz
ja
jecxz
add
out
mov
and
mov
sub
mov
fimuls
arpl
rorb
or
cmp
mov
scas
add
andb
lahf
adcb
js
add
lock
ds
aam
lods
adc
in
das
cmp
mov
and
or
in
je
int
jb
hlt
fsubr
add
sahf
sbb
scas
mov
fnstsw
mov
jb
in
push
inc
jnp
xchg
mov
icebp
cmp
and
xchg
loopne
or
jae
sub
mov
pop
in
adc
sub
aas
dec
xor
dec
adc
ds
mov
mov
or
or
fldcw
push
and
xor
mov
lods
cmc
mov
cmpl
adc
inc
pop
scas
outsb
mov
pop
les
bound
jo
idivl
aaa
mov
mov
lahf
jae
stc
ds
push
add
shlb
and
pop
dec
lahf
fnstenv
jecxz
xchg
and
adc
arpl
mov
add
out
sub
mov
cmp
fadd
sbb
mov
ljmp
in
mov
iret
add
pop
cwtl
loop
xor
test
sub
jmp
scas
data16
aad
test
lods
and
sub
ljmp
xchg
xchg
lods
or
pop
scas
dec
mov
add
pop
xor
pusha
int
xchg
mov
push
mov
sub
fisubl
push
shlb
fmuls
sub
call
test
inc
sarl
and
adc
jp
xor
inc
jae
push
fisubs
sub
in
int
mov
push
aas
jp
imul
jnp
repnz
jp
adc
outsb
arpl
loope
data16
je
adc
rolb
dec
mov
mov
icebp
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
xchg
push
scas
pop
sub
jo
mov
cmp
in
int3
int
mov
dec
and
fimuls
pop
call
psrlq
imul
add
xchg
or
lods
pushf
inc
push
add
ret
adc
fmulp
iret
adc
pop
loope,pt
jae
imul
ss
jg
mov
stos
test
idivb
aaa
repz
mov
iret
mov
lahf
mov
or
mov
gs
push
aaa
clc
in
lret
xor
add
jne
mov
xor
ljmp
mov
xchg
cmp
inc
nop
push
lods
inc
call
jecxz
insl
pop
cwtl
stc
cmpsl
lds
pop
bound
cmp
xor
cmpsl
movb
aaa
adc
insb
cmp
cwtl
jae
loop
push
push
mov
adc
imul
scas
adcb
loopne
mov
call
fiaddl
inc
fdivr
sbb
mul
sub
and
add
dec
bound
movsb
mov
xlat
aas
push
inc
sete
test
mov
scas
add
or
es
out
scas
mov
lock
xlat
mov
xchg
ss
ds
xchg
push
sub
add
scas
ja
outsl
xchg
incb
push
pop
and
pop
sub
in
iret
shl
int3
mov
push
fildl
popf
xchg
cmp
add
pop
adc
test
xchg
mov
jne
cmpsb
cli
xchg
pop
call
mov
enter
cmp
cmp
xor
fwait
pop
ret
ficompl
shlb
push
int3
fstps
int
xor
das
or
or
stos
adc
or
sbb
lods
imul
cli
insb
and
imul
dec
push
xor
dec
xchg
jp
add
mov
inc
xor
shr
add
adc
scas
and
pop
fistps
ret
xor
xchg
stos
test
sub
pusha
sbb
das
sbbl
pop
loopne
add
call
xor
test
xor
les
out
sub
push
sbb
cmpsl
idivl
jns
dec
stos
push
xchg
mov
movsb
adc
bound
dec
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
and
sub
fnstcw
jo
scas
adcb
dec
lret
jb
xchg
xor
pushf
pop
xchg
adc
cltd
jo
push
sub
push
out
outsb
test
xchg
xor
stos
or
stos
push
push
decb
cmp
mov
cmpsb
cmp
std
in
dec
xchg
mov
shl
mov
loop
ds
add
sbb
loop
fistpl
cmp
inc
add
pop
inc
add
add
clc
mov
iret
andl
push
cmp
scas
sbb
insl
jne
out
mov
push
push
out
testl
outsl
sti
mov
call
mov
dec
movb
and
sub
in
inc
aas
xor
xor
cs
mov
mov
insl
mov
add
xchg
scas
xchg
mov
jle
les
lock
inc
divl
or
in
xor
shrl
xor
jb
mov
insb
mov
dec
rolb
scas
pop
movq
iret
add
push
cmpsb
or
enter
out
shlb
pop
mov
pop
sbb
andb
or
les
stc
lods
mov
jo
data16
das
addl
add
fisubrl
lahf
sub
pop
aas
push
pop
push
repnz
into
popf
sbb
jno
js
add
clc
push
cmpsb
std
jnp
sub
jmp
sub
in
imul
cmp
xchg
data16
loope
xor
leave
pop
cltd
lahf
mov
pop
mov
push
fldcw
pop
xor
push
cmc
repz
sbb
xor
cmp
lea
mov
push
data16
out
cmp
daa
es
cmc
push
inc
repnz
jecxz
mov
imul
mov
leave
xchg
dec
int
inc
or
add
addb
xchg
lock
push
mov
jp
movl
inc
rcrb
and
nop
mov
daa
stos
nop
imul
mov
sbb
test
bnd
pusha
shlb
pop
mov
mov
outsl
incb
sbbb
enter
cld
cmp
dec
lcall
hlt
fisttps
dec
sbb
add
fcoms
fisubrl
bound
sub
xlat
mov
pop
movb
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
scas
sub
les
jo
lahf
jb
mov
or
lret
pop
and
jecxz
xchg
mov
movsl
sahf
cmpsl
sbb
lea
or
mov
in
add
push
shlb
cltd
add
test
push
and
push
jle
testl
clc
insl
cmpsl
and
cli
jno
cmp
lret
add
sbb
gs
push
push
cmp
cmpsl
cld
ficompl
add
push
jns
xchg
rorl
jg
add
mov
lcall
cmpsl
in
xchg
add
mov
mov
repz
pop
mov
test
nop
sbb
jno
sbb
mov
fadds
mov
int3
inc
scas
out
fsubr
mov
je
and
xor
add
cmp
ds
cld
pop
inc
jp
faddl
mov
addr16
inc
outsb
push
cmpsl
fs
pop
xchg
xchg
add
pop
dec
mov
and
add
jae
mov
push
mov
mov
xlat
leave
in
mov
pop
insl
mov
mov
insb
aad
out
ret
outsl
sbb
dec
arpl
xchg
cwtl
dec
fdivrs
mov
jb
stos
into
sbb
jns
rcrl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
sub
cmpsb
jae
jo
les
jo
pop
mov
cli
pop
xchg
insl
inc
fisubrs
pop
pushf
daa
stos
push
out
aad
dec
pop
xchg
sbb
in
and
pushf
ja
imul
push
cmp
outsl
pop
and
and
mov
pop
and
push
jne
and
jnp
repz
sub
jnp
call
addr16
shr
add
and
pop
inc
sbb
pop
into
push
xchg
adc
and
mov
or
mov
inc
and
fsub
sbb
sub
popa
out
and
mov
inc
jnp
pop
mov
jl
and
and
lock
inc
lods
sub
sub
fiaddl
jge
jbe
inc
fwait
jecxz
lds
lea
test
out
hlt
scas
jl
test
lock
jnp,pt
jp
mov
scas
or
sbb
les
mov
cmpxchg
mov
xor
int3
xorl
mov
jbe
aaa
in
xor
pop
push
push
mov
inc
gs
rcl
jbe
sbb
push
and
jecxz
dec
adc
xchg
cmp
cmpsl
xor
loope
cmc
mov
push
xor
jle
scas
mov
out
add
nop
mov
xor
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
out
xor
jo
sbb
lret
fisubrs
dec
inc
push
fxch
cmpsb
xchg
stc
lret
inc
push
scas
or
andb
aas
xor
jo
xchg
pop
mov
gs
mov
out
jp
jbe
cmp
popf
sub
fisttpll
or
inc
nop
shll
mov
ret
cmpsb
stc
mov
xor
cmp
popa
sti
in
mov
and
les
xchg
fildll
pop
leave
or
fiadds
aam
and
icebp
adc
dec
adc
and
inc
dec
sti
mov
jp
mov
inc
and
cmc
int3
push
and
mov
loop
popf
cmpb
dec
cmp
mov
pop
fdivrs
rol
mov
outsb
or
pusha
out
push
inc
pushf
and
in
dec
popa
jmp
and
fcmove
je
rolb
mov
adc
lds
xchg
test
fwait
andb
jnp
loope
js
or
aas
ret
movsl
mov
xor
jnp
or
pop
inc
fisttps
xchg
pop
push
aad
xchg
push
mov
icebp
loop
sbb
cmp
cld
hlt
pop
aad
fidivs
incl
xchg
nop
pusha
scas
sbb
inc
sahf
mov
mov
add
cmc
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
fidivl
mov
jo
jge
jo
push
jne
adc
idivl
fdivl
movsb
ret
and
jmp
outsb
mov
addr16
xor
jns
pop
outsl
mov
dec
js
mov
mov
sarl
inc
sbb
add
jo
sub
std
xor
mov
in
xchg
adc
fstl
pop
sbb
fs
sub
xor
push
jl
outsb
test
inc
jmp
insl
push
push
in
push
ds
xchg
pop
lods
js
pop
shlb
aam
push
cmp
and
mov
aam
shl
pop
jge
ss
cli
or
daa
adc
sub
aaa
insb
push
fisttpl
inc
mov
inc
mov
cltd
fisttps
jnp
imul
add
pop
jecxz
inc
enter
lahf
add
xchg
rcl
jl
int3
imul
cmc
popa
call
or
lret
jle
popf
xor
hlt
dec
nop
out
aas
aad
push
inc
push
adcb
jmp
xchg
popf
jb
lret
and
xchg
or
jnp
jnp
sub
bound
inc
xchg
vmovdqu64
fmul
push
and
inc
jmp
sub
cmp
pop
xor
dec
add
inc
vfmsub231pd
pop
xlat
dec
setge
xor
adc
mov
xor
adc
add
ret
mov
call
mov
pushf
popf
mov
or
and
sub
sub
cmp
push
jle
aaa
outsb
call
ret
mov
xchg
insb
pop
sbb
push
rcll
enter
or
shlb
pop
or
data16
jns
mov
cvtps2pd
loop
push
into
inc
xchg
jecxz
out
push
mov
lds
lods
mov
repnz
int
mov
mov
movb
out
mov
out
sbb
adc
dec
pop
and
pop
adc
cmp
rcr
add
push
mov
lahf
je
insb
jmp
sbb
lret
inc
subl
das
cmpsl
or
stc
lea
add
add
aam
mov
mov
push
std
xchg
adc
pop
add
scas
push
test
mov
adc
rcl
bound
jb
dec
divl
sbb
fisubrs
push
cmp
pop
std
and
xor
pop
xor
add
dec
loopne
fbstp
rclb
insb
call
mov
lahf
out
test
cmp
pop
addr16
push
aaa
adc
sub
inc
insl
dec
daa
aad
fcomps
data16
test
add
in
daa
push
jge
je
rorb
jecxz
insl
xor
fadds
pusha
in
scas
ffree
mov
jbe
xor
stos
je
ja
and
adc
loopne
es
inc
inc
enter
jle
dec
mov
or
pop
xor
cmp
xor
and
mov
mov
popf
shl
xchg
inc
push
je
jbe
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
push
icebp
lahf
mov
jge
jo
ret
pop
push
jne
sub
xchg
ss
mov
and
push
push
xlat
test
add
xchg
cld
xchg
pop
cld
and
cmp
jl
clc
jmp
rclb
mov
xor
data16
mov
pop
jo
aaa
and
movb
jbe
cmpsl
adc
adc
jl
popa
jg
sbb
stc
push
nop
movsl
out
cltd
ret
es
fisubrs
xor
xchg
sub
out
add
and
and
or
mov
or
xchg
push
pop
mov
imul
and
out
loopne
neg
hlt
add
daa
fstl
dec
or
mov
mov
push
test
scas
adc
and
cwtl
mov
cmpsl
or
bound
sub
add
mov
jp
sub
add
xor
repnz
scas
rolb
push
std
pop
pop
jno
scas
cmc
es
arpl
xchg
cli
pop
repz
dec
xor
xlat
idiv
sbbl
scas
es
in
cmovae
bnd
fmuls
cld
fwait
in
lea
pop
lret
outsl
loope
stos
clc
jecxz
push
mov
cld
movsb
ja
jmp
jo
imul
jnp
shlb
jb
and
fistps
mov
xorl
jbe
inc
xor
jmp
in
icebp
cs
lahf
stc
aad
xchg
hlt
movsl
lcall
adc
cmp
mov
mov
sub
xor
or
cmp
in
jle
xor
mov
jp
jo
cmp
lahf
sti
push
fists
int
cmp
lods
lahf
lcall
jmp
int
or
mov
sbb
fsts
xchg
sub
inc
loop
cmp
jae
in
ja
jle
ffreep
jecxz
mov
es
pop
jp
cli
outsl
xchg
data16
push
cld
or
jbe
jnp
jne
jns
rolb
jne
pop
subl
mov
fwait
jp
js
jno
ds
repz
dec
push
flds
cli
jle
in
in
scas
inc
sbb
rorb
stos
push
xchg
jnp
fmuls
rorb
jl
insl
cmp
rcll
add
lahf
shl
push
add
movsb
xchg
fwait
mov
xchg
testl
push
adc
aaa
xor
adc
data16
xchg
pusha
fdivs
xlat
sbb
sbb
fdivrs
pop
ret
lcall
enter
xor
cli
test
xor
popf
rclb
or
out
andb
pop
jne
mov
mov
inc
aad
outsb
shr
out
stos
jmp
mov
sbb
cmc
in
ja
into
pop
ficoml
loope
insb
xchg
pop
lret
lahf
mov
xor
jb
ljmp
xchg
ja
clc
int
inc
lret
xor
or
in
cmovbe
push
call
shll
mov
sbb
jns
adc
test
inc
lods
addr16
mov
and
lcall
inc
inc
add
and
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fists
xchg
dec
mov
jo
and
jo
inc
orb
dec
mov
test
jl
or
inc
es
cmpsl
shrb
jl
push
inc
lds
ja
mov
push
and
jg
int3
lods
jns
adc
adc
aaa
xchg
nop
adc
mov
add
cli
subb
add
loope
out
inc
out
jp
and
push
not
xchg
nop
cmp
xchg
cmpb
xchg
addb
add
rcl
hlt
dec
push
lock
iret
add
sub
in
in
test
sbbb
inc
divb
or
jecxz
leave
fwait
insb
fldcw
lcall
sbb
or
push
mov
push
test
ds
dec
inc
sub
and
mov
mov
cltd
in
inc
pushf
test
jb
pop
leave
adc
pop
fistl
mov
mov
adc
ds
js
popf
test
sbb
aas
mov
push
push
pop
push
popf
jbe
cwtl
inc
dec
sub
sar
push
mov
call
xor
jp
adc
mov
lret
sbb
adc
aam
push
je
mov
subb
fwait
dec
inc
sbb
xchg
jno
fadds
sbb
movsl
sbb
pop
sub
push
daa
pop
mov
inc
pusha
in
mov
push
pushf
loop
ja
xchg
shlb
pop
cmp
add
hlt
adcl
lods
adcb
jmp
xor
fdivr
add
jecxz
out
es
push
nop
cmp
into
dec
pop
out
enter
stos
fcmovne
push
add
popa
aam
lods
jecxz
out
sbb
add
push
jo
loope
imul
sub
xor
gs
out
push
shr
mov
scas
push
pop
sti
cmp
pop
std
adc
inc
or
mov
adc
and
imul
inc
xchg
lea
test
andl
mov
xchg
pop
fidivrs
pop
js
cmpsb
insb
hlt
lock
movsb
lods
gs
adc
popf
arpl
or
imul
pop
push
or
int
add
ret
jmp
dec
inc
and
or
dec
sarl
inc
xor
aam
leave
push
popf
in
je
xchg
rcrb
push
add
aas
mull
xchg
cld
jge
push
mov
push
mov
mov
enter
cmp
insl
and
pop
jg
add
aad
inc
imul
aad
stos
jne
jl
mov
es
cli
shr
pushf
cs
lret
decl
pusha
data16
shll
push
or
xchg
jns
lds
jno
xchg
adc
xchg
packsswb
lar
sbb
dec
or
xchg
nop
clc
pop
push
or
jg
inc
jge
dec
xchg
cmc
jge
mov
scas
jl
mov
push
loop
push
movsl
data16
pop
test
movl
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
fstpt
jo
and
jo
and
push
std
sbb
test
mov
or
push
push
pop
in
les
mov
mov
fistpl
push
and
fidivrl
jno
cmpsb
stc
out
std
out
mov
push
add
push
cld
push
jl
js
imul
mov
jecxz
dec
inc
dec
mov
pop
pop
cld
mov
xor
pop
and
movsl
or
adc
movsb
mov
movsb
rclb
aas
jo
ss
sbb
mov
loop
add
push
lods
notl
xchg
cmp
mov
xor
andb
fwait
hlt
js
lods
xchg
cmp
cmpl
cmpsb
rclb
adc
cld
call
clc
mov
and
jnp
into
xchg
xchg
imul
fisttps
loope
ljmp
or
pop
sub
mov
out
push
fistl
out
shl
mov
xor
dec
pusha
inc
adc
lret
loop
fisttps
test
cmpsb
add
imul
mov
mov
sbb
or
or
in
xchg
mov
cmp
lret
sub
and
int3
lea
and
cmp
jecxz
aas
and
aam
mov
icebp
inc
xchg
enter
inc
mov
or
xor
inc
push
push
push
push
sub
cmp
mov
call
push
stc
jnp
orl
cmp
xlat
out
jbe
xor
stc
outsl
cmp
stos
ds
jge
inc
push
test
and
adc
push
les
push
adc
sub
jns
das
push
lods
adcl
add
lock
ljmp
cmpsl
int
cmpsb
decl
in
lock
and
dec
inc
jnp
lds
push
lds
inc
mov
mov
cwtl
stos
mov
jmp
or
lds
daa
jns
mov
stos
insb
popa
in
sbb
out
fiaddl
test
xor
in
adc
jle
xrelease
insl
cmp
lods
nop
subl
push
pusha
js
sbb
mov
jbe
sarb
rorl
or
jnp
adcb
sub
sub
aad
or
mov
dec
add
cmp
inc
or
sbbl
dec
jo
sbb
les
lret
inc
aaa
ficomps
dec
test
icebp
fcmovnbe
imul
pop
stc
mov
clc
fsubrl
mov
push
cmp
mov
hlt
sti
fs
jae
sbb
jle
pop
inc
mov
std
sarb
inc
dec
iret
or
iret
pop
xor
leave
fsubr
xchg
scas
sbb
cwtl
insb
call
outsl
mov
out
cmc
fldcw
add
or
jl
data16
mov
roll
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
test
jo
jge
jo
fsub
jmp
cwtl
int
mov
iret
and
ds
sub
inc
xor
in
xor
jl
das
int3
jmp
push
mov
mov
mov
mov
lock
sbb
push
lds
popf
imul
orl
jg
mov
pusha
or
mov
dec
mov
mov
stos
dec
lahf
in
jns
fidivrl
mov
fs
repz
mov
les
popa
sbb
pushf
test
and
sbb
mov
cmp
ret
int3
pop
sbb
inc
xchg
lea
inc
pop
aaa
mov
xor
fldt
adcl
jl
mov
addr16
cmpsb
push
and
dec
xor
push
cvtpi2ps
lock
fdivs
addr16
or
and
in
push
mov
inc
lret
cmpsl
pop
sti
fiaddl
adc
mov
mov
push
aad
add
sub
stos
xchg
or
xor
dec
adc
lods
ss
jnp
rcl
mov
xor
push
xchg
sahf
lahf
mov
fiadds
mov
cli
pop
jns
adc
mov
into
xchg
clc
cmpsl
mov
ret
sub
rcr
ja
push
into
sub
or
push
aam
imul
jmp
dec
mov
adc
add
inc
into
cmpl
lods
mov
insb
sti
xchg
loopne
je,pt
into
adc
jmp
in
mov
hlt
insb
lds
sti
es
dec
jb
test
sub
jp
insl
shrb
jnp
mov
cmp
or
icebp
push
xchg
pop
xchg
pop
sbb
loop
xchg
inc
xchg
and
pushf
dec
jg
mov
jbe
lahf
sahf
push
pop
mov
frstor
and
sub
das
and
rol
jbe
fisubrs
aas
nop
out
stc
es
mov
pop
in
and
icebp
dec
hlt
test
cmp
les
adc
xchg
sub
sub
mov
loop
insb
sti
mov
mov
mov
xchg
push
dec
in
loopne
adcb
push
push
mov
loop
cli
mov
movsb
xchg
cmc
cmpsl
dec
or
outsb
fimuls
sub
lds
pop
xchg
pop
mov
lret
adc
cmp
mov
cmp
push
mov
incl
psubb
and
loop
lret
mov
cmp
fs
shrb
icebp
fdivrp
mov
leave
or
popa
cmp
shrl
rclb
xor
aam
clc
xchg
xlat
aad
fiaddl
je
mov
popa
popa
dec
add
loop
movsb
je
jmp
dec
out
sbb
pop
push
pop
lret
adc
xchg
add
jge
mov
or
insl
das
in
std
cmpl
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
mov
cs
cmp
inc
and
hlt
xor
jne
inc
xor
mov
push
lds
faddl
cmpb
xchg
mov
pusha
xchg
cmc
jg
jge
xchg
insb
sbb
test
sub
lret
cmpsb
pusha
xchg
adc
xor
sub
or
jmp
pop
js
fwait
sbb
dec
pop
bnd
sub
lcall
out
inc
push
sarb
cs
fildl
sub
push
frstor
mov
and
mov
pusha
dec
xchg
xor
aad
xor
aas
popa
jbe
jne
pop
pop
in
addb
scas
je
lret
mov
add
je
xor
and
mov
xchg
add
fimuls
dec
inc
push
sub
pop
xchg
bound
lods
cld
dec
mov
xchg
mov
dec
movsl
mov
pop
add
jno
or
repnz
outsb
fimull
jle
cs
and
mov
push
ret
jl
inc
fwait
xchg
mov
fadds
jae
lret
pop
mov
xchg
pop
mov
stos
es
push
stc
cs
jmp
divl
jno
mov
jb
insb
push
xor
repz
jnp
in
adc
ds
mov
ret
push
or
test
mov
in
call
stc
sbb
or
cmp
scas
jne
mov
jl
pushf
pop
cs
inc
mov
dec
test
or
stc
fwait
lret
jg
and
xchg
jge
push
lret
in
pop
and
pushf
sub
and
pop
adcl
xor
dec
xor
or
adc
cwtl
arpl
pop
fs
dec
jbe
and
xchg
hlt
or
cmp
data16
icebp
sub
mov
loop
mov
jns
pushf
in
loopne
pop
xchg
adc
jle
xchg
add
xchg
mov
sub
dec
fnsave
xlat
xchg
push
add
inc
sub
in
out
bnd
fistpl
jle
xchg
add
xor
and
sub
xchg
ret
sbb
xchg
inc
jb
popf
sbb
cwtl
out
and
inc
cmpsb
clc
fisttpl
ljmp
in
fildl
lock
mov
sti
clts
xor
cmpsl
xlat
mov
aad
mov
mov
ja
sub
jb
inc
mov
insb
loop
lcall
xor
test
icebp
lcall
leave
pcmpeqw
mov
addb
push
in
aaa
and
outsb
dec
cmp
lock
loop
nop
frstor
fsubs
mov
sbb
xor
fildl
mov
mov
dec
cmp
imul
or
xor
push
jge
insl
sahf
jns
out
pop
ljmp
outsl
mov
stos
sub
insb
icebp
xor
out
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
in
sahf
mov
jge
jo
or
or
outsl
test
xchg
or
add
mov
add
adc
add
outsl
imul
dec
clc
lret
mov
push
mov
fists
push
ljmp
sub
arpl
leave
testl
out
push
dec
dec
push
sub
ret
pop
xchg
cmp
movsl
add
stos
cmp
mov
sbb
popf
ret
pop
mov
cld
sub
add
push
out
and
xor
xchg
and
stos
pop
or
lds
call
mov
pop
pop
test
lcall
add
scas
or
jmp
pop
xchg
dec
mov
xorl
pop
cmc
sbb
js
jnp
dec
cmp
add
cltd
in
mov
mov
push
fildl
adc
shrb
imulb
sbb
aad
push
mov
xor
push
push
sub
jno
mov
mov
fcom
pop
leave
adc
divb
push
mov
add
mov
cmp
lret
aad
xchg
test
mov
mov
xchg
rcrl
cltd
sub
test
push
and
test
ss
loop
sub
repnz
jb
jge
mov
pushf
inc
pop
stos
lret
ret
das
imul
stos
jmp
xlat
xchg
movsl
fnstcw
adc
fnsave
in
or
jecxz
pop
jae
and
and
add
sub
fcmovbe
arpl
jl
rcrb
push
dec
xchg
mov
bound
sti
in
test
cmpsl
cmp
outsl
out
ret
sbb
lret
dec
xor
lahf
push
jge
in
push
jl
cmpsb
push
push
loop
loop
fbstp
out
add
jne
jns
insl
fstps
test
inc
sbb
jae
xlat
test
insl
repz
sub
mov
fistl
addl
xchg
fldenv
push
call
js
jne
pop
movsb
hlt
and
mov
mov
aam
sub
jge
dec
popa
lods
xor
lret
scas
mov
jae
lods
mov
testl
cmpb
rolb
repz
xchg
mov
cli
jnp
mov
push
mov
stc
cli
mov
and
add
fnsave
sub
mov
dec
xchg
dec
mov
cmp
out
vmread
mov
mov
mov
mov
pusha
aaa
sbb
scas
push
inc
or
rolb
pop
lcall
mov
mov
scas
inc
popf
test
sbb
xchg
les
cmp
pop
cmp
sub
xchg
mov
mov
push
pop
mov
sbb
mov
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
mov
cmc
pop
into
jo
imul
push
add
cmp
push
adcb
pop
es
jmp
jbe
repnz
mov
push
push
pop
insb
mov
insb
popa
aam
mov
pop
push
or
add
es
iret
sbb
sub
outsl
bound
add
pop
dec
loope
ja
inc
xor
inc
pop
mov
xor
mov
xor
push
repz
push
movsb
cmp
inc
aam
or
add
push
push
popf
sub
add
lods
mov
or
inc
and
sbb
mov
adc
scas
hlt
mov
fisubl
fstl
stos
push
shrl
or
push
out
in
xchg
xor
pop
xor
pop
das
add
std
cs
loop
dec
sub
jnp
mov
dec
sahf
roll
pop
es
mov
pushf
pop
cltd
fildll
sub
inc
outsb
jmp
dec
xchg
lcall
xor
fisttpl
or
mov
pop
mov
mov
ja
shlb
push
add
mov
xor
repnz
adc
andl
mov
sbb
je
pop
sbbb
xor
enter
lock
jae
inc
inc
je
rcrl
add
jmp
hlt
push
jo
je
pop
mov
les
dec
ret
push
adc
xor
lods
jecxz
lods
xchg
int
lods
jmp
arpl
imul
pop
mov
icebp
call
cltd
je
mov
in
pusha
loop
and
push
xor
mov
lea
and
in
mov
ljmp
outsl
test
cmp
sub
sbb
pushf
mov
mov
movsb
push
iret
mov
push
fwait
aas
and
add
pop
xlat
mov
pop
fdivs
push
cmc
mov
stc
adcb
jo
aas
movl
add
movl
mov
sub
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
mov
imul
shrl
fidivs
out
fstl
ds
mov
repnz
jnp
cld
fidivrl
add
std
xcrypt-ofb
cmpsl
out
push
add
ret
pop
sbb
loop
mov
lahf
test
xor
pop
sub
sbb
inc
jo
arpl
inc
add
xor
mov
add
push
scas
adc
sub
pop
add
addr16
mov
push
stos
test
in
rcll
and
mov
movsb
adc
sbb
push
xchg
les
pushl
loop
outsl
mov
cmp
sbb
sti
fistps
push
stos
push
push
shrb
xchg
lds
fisubs
jl
lcall
cltd
lea
imul
sbb
jp
rorl
insl
push
jmp
bound
sbb
lds
out
push
add
scas
popaw
jnp
pop
fwait
xor
jle
ja
or
pop
xchg
mov
cmp
sub
bound
pushl
and
jg
xchg
push
jle
or
fcom
mov
pusha
mov
push
or
hlt
add
mov
lea
xor
jae
inc
jmp
pop
je
mov
scas
rcll
lcall
xor
push
push
xchg
mov
sbb
je
or
sub
mov
xor
sub
bnd
popa
inc
cld
pop
mov
into
pmuludq
push
fisubs
fs
cmp
push
and
dec
pop
mov
pop
inc
repnz
ja
jns
push
test
or
xchg
int
nop
enter
inc
xor
cmpsb
or
xor
arpl
xchg
inc
mov
xchg
pop
scas
pop
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
sub
jo
imul
shlb
push
or
adc
and
cli
adc
or
imulb
add
dec
daa
sub
scas
mov
pop
int
pop
lods
lcall
call
pop
and
mov
int3
and
scas
add
fnstenv
stos
xchg
fisttps
cmp
push
jnp
sbb
mov
or
xchg
push
sbb
inc
into
sti
pop
sub
insl
test
iret
dec
cmp
jle
int
bound
into
sti
js
or
in
out
lods
lods
push
mov
test
mov
lods
mov
adc
loope
jl
arpl
cmp
out
jmp
mov
aam
pusha
mov
pop
adc
dec
jo
ret
daa
lods
pop
mov
rcll
sbb
xlat
lret
inc
inc
lea
add
mov
xchg
cmpsl
scas
mov
pusha
adc
insb
cli
stos
add
aad
mov
js
ljmp
aam
jbe
pop
jmp
stc
sbbl
arpl
jp
test
inc
mov
cmp
sbb
cmpb
cld
out
xchg
les
xchg
push
lds
dec
daa
popa
and
pop
fdivl
dec
repnz
xor
cmp
shlb
adc
or
cmp
jecxz
jbe
js
in
movsl
push
cmpsb
xchg
xor
movsl
pop
adc
xacquire
pop
test
sbb
xor
inc
add
fmulp
rorw
loope
es
outsl
push
add
sub
stos
push
cld
mov
dec
fisttps
mov
sub
inc
scas
xor
incl
mov
inc
repz
push
add
mov
fcomp
sarb
lahf
call
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
push
enter
jg
jo
push
imul
imul
mov
jno
insl
sbb
nop
mov
jle
es
ror
lret
inc
mov
cld
aaa
lahf
push
flds
jp
sarb
nop
add
mov
faddl
fnstenv
in
cmp
js
mov
cmp
int3
push
mov
jbe
sub
jmp
adcl
lahf
mov
stc
cmp
lea
jle
jge
xor
add
fprem1
dec
lea
mov
test
xor
dec
in
inc
sub
mov
ror
lahf
insl
sub
subb
pushf
push
mov
xchg
fs
add
in
adc
or
fstpt
mov
pop
in
xor
pop
jo
or
add
stc
popa
les
dec
adc
dec
sub
push
repz
scas
adc
sti
jbe
cmp
or
imul
pushl
pusha
jl
shll
lcall
adc
sub
lret
push
rorb
lods
or
popa
ss
sub
adc
cs
in
shr
outsl
jge
bound
sbb
fs
pushf
js
xor
jp
cmp
mov
mov
mov
sub
sub
repnz
push
je
add
mov
fmuls
jae
push
int3
or
mov
dec
xor
xchg
orl
aas
sub
cmp
fcmovbe
inc
cmp
or
es
std
cmp
inc
jecxz
in
cld
insb
or
test
insl
or
imul
jbe
call
cmp
cli
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
xchg
stos
ja
jo
imul
divb
xchg
add
mov
lds
mov
cmp
cmp
imul
mov
xchg
inc
into
mov
ffreep
mov
das
add
jns
inc
es
iret
movsl
negb
stos
pop
lcall
sahf
outsb
stos
daa
jmp
dec
loop
jb
fwait
lds
fimull
xchg
out
je
fisubrs
mov
int3
and
fs
out
push
mov
dec
pusha
ds
ss
lcall
scas
cli
push
or
or
rolb
jle
adc
pusha
std
adc
addb
mov
jo
adc
sahf
and
imul
sbb
mov
aas
repz
fstl
sti
fcompl
stc
sub
fdivrs
lret
in
xchg
test
add
adc
jg
adc
pop
addb
sar
mov
lret
mov
mov
movsl
adc
mov
pop
pop
add
mov
dec
pop
xor
jo
mov
das
icebp
lea
arpl
aad
pusha
lds
jns
inc
mov
fdivrs
int
daa
cli
xor
ret
xchg
mov
aaa
pusha
xor
lea
and
cmp
out
rorl
pop
into
fistps
xorb
fldl
stos
xor
mov
cs
push
int3
out
fldenv
ljmp
sti
cli
nop
pop
sti
jmp
dec
mov
lahf
xor
jae
push
jnp
jmp
decb
popf
sti
mov
stc
pop
xchg
xchg
mov
jnp
imul
and
pushl
push
lret
sbb
mov
or
inc
fcoms
pop
call
lcall
imul
fadds
add
sub
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
das
and
test
jo
imul
outsb
lock
and
xchg
push
cwtl
in
mov
inc
ljmp
pop
sub
repz
lret
js
mov
jb
subl
sbb
pop
pop
inc
lock
cld
ret
rcr
popf
push
add
jmp
movsl
push
gs
ret
faddl
cmc
jne
mov
jle
and
or
sub
xor
vmovupd
jns
int
push
pop
xchg
mov
mov
aam
cmc
outsb
ret
sbb
mov
xchg
ljmp
shll
mov
sub
cli
fstpl
cwtl
cmp
int3
mov
repnz
mov
inc
or
add
mov
insb
pop
push
or
test
xchg
lock
clc
xor
dec
frstor
push
or
xchg
dec
js
rorl
xchg
dec
jge
in
addl
cmpsb
repz
sub
xchg
jb
das
mov
std
negl
push
mov
inc
mov
rcr
dec
mov
outsb
cwtl
ficoml
and
inc
int
and
flds
mov
mov
add
jne
and
subl
pop
rcll
shlb
addb
xchg
ror
inc
or
aas
pop
scas
rcrb
adc
adc
adc
xchg
dec
mov
cs
pushf
sbb
jle
mov
daa
jl
in
adc
jae
enter
push
pop
cs
or
loope
fcoms
add
outsl
loop
lods
lret
js
or
cld
xchg
fucomip
xchg
ret
addr16
mov
pop
fs
lods
mov
pop
mov
cmp
xchg
or
add
push
xor
in
inc
dec
xchg
dec
sbb
or
jae
sub
in
arpl
clc
cmp
fdivrl
mov
loope
jnp
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
adc
jg
jo
mov
leave
sahf
and
mov
and
xchg
push
and
notl
movsl
push
push
int3
or
lcall
add
jo
jae
aad
sarb
mov
pop
dec
inc
xor
inc
and
lea
mov
dec
push
mov
in
push
xor
jp
mov
jge
pop
arpl
mov
sbb
mov
xor
scas
imul
mov
sub
rcrb
xchg
mov
push
ret
sbb
jb
sbb
hlt
or
scas
inc
cli
fildll
pop
jne,pn
add
lods
ret
aam
clc
push
movsb
cmpsb
jl
pusha
cmp
xchg
sbb
mov
mov
ljmp
gs
pop
dec
out
sub
jge
xor
adc
dec
pusha
mov
movsb
jle
shll
pushf
cmp
neg
cmp
insl
div
adc
add
fnstenv
xor
adc
add
or
pusha
insl
out
and
xor
dec
stos
inc
xchg
movsb
jb
les
or
mov
fildll
icebp
push
pop
inc
mov
ljmp
xor
mov
js
jp
push
cmpsb
xchg
in
cmpsd
test
rclb
shlb
xchg
stos
mov
cmp
mov
notb
out
dec
nop
sbbb
inc
mov
xor
ret
push
fnstsw
cmp
out
addl
test
inc
push
mov
add
rorl
cmpsl
cmpsl
lods
imul
lcall
call
jae
mov
xor
or
insb
xor
sarl
or
jp
and
add
or
inc
push
and
sub
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
inc
lods
and
imul
fisubrs
xor
or
adcb
fldenv
inc
sub
rorl
ret
call
or
lock
leave
lcall
cmp
in
int
shl
mov
xchg
xchg
repz
in
outsl
movsb
mov
aam
inc
and
push
jo
subl
push
xlat
leave
jge
aas
pop
jl
iret
fmulp
pop
or
cmp
push
adc
fists
push
jns
inc
push
je
stos
mulb
push
subl
adc
xor
mov
popf
andl
clc
std
gs
dec
and
aad
fs
ret
shll
sti
pop
xor
cwtl
lods
in
dec
into
jns
lret
xchg
or
sbb
pusha
int3
mov
sarb
idivl
shr
push
in
and
adc
int3
jne
dec
shl
pop
movsb
stos
xchg
out
cmp
mull
pop
stos
mov
xor
push
push
shl
xorl
mov
mov
scas
pushf
mov
sbb
je
cmp
ds
insl
push
xor
je
lcall
jecxz
push
push
rcl
int
shll
push
xchg
xchg
mov
xchg
repz
jecxz
stc
mov
xchg
test
cmp
mov
sub
or
testl
faddl
out
sub
mulb
es
xchg
iret
pop
cmp
mov
ljmp
imul
push
gs
loope
lret
outsl
sbb
shr
dec
stc
pusha
das
mov
add
and
fsubrl
lea
jno
xor
mov
mov
lret
cltd
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
in
mov
jo
jg
jo
ret
adc
fidivrs
xchg
add
add
jp
sarb
pop
dec
xchg
inc
data16
out
dec
and
sbbl
xchg
inc
dec
mov
jns
rorb
out
dec
inc
inc
mov
cmp
sub
push
insb
push
inc
mov
scas
lahf
adc
jmp
stc
or
jbe
sub
test
jae
fst
pop
or
add
mov
inc
xchg
adc
stc
lret
adc
out
ret
fdivl
adc
jle
push
xchg
fmull
imul
or
lock
test
lea
cmpsl
leave
push
inc
dec
fldl
adc
int
pop
jp
push
repz
push
jge
out
lds
aas
adc
xor
pop
testl
xchg
out
in
dec
xchg
pop
sbb
jge
outsl
fwait
lahf
pop
mov
jnp
rolb
push
incb
stos
cs
push
jb
fs
jecxz
mov
xlat
rorb
sbb
xor
pop
mov
lods
mov
loopne
ja
lret
xlat
sub
loopne
outsl
rolb
inc
stos
lods
sub
pop
bnd
dec
jbe
pop
cwtl
inc
xchg
pop
ja
test
jb
xchg
aas
mov
scas
pop
rorb
and
mov
mov
imul
adc
jmp
push
pop
jae
push
mov
jg
cltd
lret
in
fldt
fmull
sahf
fisttpl
int3
inc
adc
mov
jb
fildll
mov
addr16
in
test
mov
inc
mov
outsl
jecxz
or
cmp
nop
nop
xor
in
sub
or
cltd
fstpl
sub
jne
push
jge
loopne
testl
imul
out
jle
lret
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
dec
cmp
mov
imul
and
scas
arpl
inc
xchg
push
xlat
dec
mov
enter
dec
cmp
mov
rorb
repnz
add
xor
push
mov
jnp
ret
push
dec
cmp
add
insl
or
jmp
cld
or
enter
cmp
movsl
clc
fwait
pop
xchg
enter
div
adc
int
arpl
xchg
lock
inc
pusha
ret
fisubrl
idivl
mov
pop
notb
popf
push
xlat
jmp
stos
subb
jp
pop
adc
jno
mov
cli
add
cs
add
xchg
mov
mov
dec
inc
sbb
sti
jbe
outsb
stos
xchg
loopne
jae
xchg
in
negl
xchg
and
daa
add
adc
pop
test
xchg
adc
push
jle
ret
shlw
in
adc
mov
fld
xlat
sbb
leave
xchg
data16
loopne
mov
inc
fisubs
jge
test
cli
adc
leave
fistpll
rclb
jg
mov
imul
add
clc
push
fildll
or
imul
add
push
xor
mov
sarl
lret
andnps
lock
loop
jo
cmp
push
mov
pop
pop
fabs
xor
jae
xchg
test
loope
je
sub
leave
test
xchg
cli
out
add
and
dec
pop
add
stos
mov
push
lods
jns
adcl
ficompl
pusha
outsb
fs
add
cmp
jno
jne
pop
into
je
and
mov
ja
lret
dec
into
paddb
cmp
inc
xchg
test
je
or
out
dec
fbstp
stos
out
push
sarb
sub
add
jmp
sbbb
cltd
js
mov
out
das
mov
imul
adc
fwait
sbb
data16
sbb
add
mov
cmp
dec
cmp
stc
mov
inc
cmpsb
push
shr
jecxz
aad
repnz
add
loope
xchg
adc
inc
xchg
aaa
repnz
popl
repz
inc
cmpsl
xorl
adc
or
icebp
movsb
pop
mov
outsl
rcrb
mov
pop
adc
shll
pop
mov
icebp
into
inc
pop
mov
inc
push
roll
cwtl
imul
or
add
daa
rolw
pusha
icebp
in
push
sarl
inc
sub
sub
add
push
jecxz
out
std
push
jo
in
sbb
inc
xor
mov
pop
lret
mov
pop
outsl
testb
bound
lcall
sbb
pusha
add
outsl
mov
mov
xor
daa
xor
gs
mov
pop
dec
mov
into
popa
adc
test
imul
movsl
out
das
adc
jle
incb
mov
test
push
fsts
push
mov
cmp
int3
cmpsb
or
lds
jecxz
and
and
into
inc
adcl
and
ffreep
dec
stc
popl
out
sub
dec
jl
mov
scas
ljmp
sub
stos
jg
int3
mov
aas
jae
sbb
ja
mov
jb
pop
jns
cmp
mov
shrb
xchg
pop
icebp
sbb
mov
xor
xchg
sub
lea
cltd
ljmp
shl
std
ljmp
push
sub
movsb
cmpsl
pop
jecxz
mov
sbb
testl
int3
loope
jb
test
pop
fiaddl
shr
aam
rcll
jnp
scas
xlat
jmp
clc
icebp
mov
icebp
ficompl
jmp
jo
jg
jo
push
imul
xchg
mov
andb
and
pop
mov
inc
ljmp
loopne
push
rcl
cmpsl
mov
mov
addr16
xchg
jb
adc
sbbb
bound
incl
call
int
sbb
stos
negl
les
popf
in
fucomip
lods
add
filds
inc
mov
inc
fs
sub
scas
jns
mov
loope
repnz
imul
pushf
pop
xor
ljmp
mov
mov
xor
ficoml
mov
rcr
sbb
or
in
cmp
mov
mulb
sti
mov
enter
mov
sub
arpl
pop
faddl
mov
cli
rcll
mov
cmc
cmp
add
pop
imul
mov
push
stos
fwait
out
sbb
and
nop
fsubr
inc
jecxz
mov
icebp
xlat
enter
negl
xchg
pop
ret
sub
push
xchg
cmpsl
xchg
sub
or
sahf
xor
dec
ror
in
jbe
mov
xchg
push
cmp
es
inc
dec
test
sbb
push
lods
mov
ss
cmp
fisubs
mov
sub
lahf
sti
jae
inc
jne
subl
sbb
inc
or
jo
jmp
dec
adc
xor
imul
jmp
lret
lret
fsubrs
sub
mov
jmp
fisubs
add
mov
pop
aas
pop
lods
ficomps
mov
shll
stc
pop
daa
adc
lahf
dec
pop
or
enter
loope
sbb
js
or
pop
in
mov
pop
sub
rcrb
ja
mov
add
mov
push
mov
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
xor
jo
imul
adc
bound
das
repz
jmp
pop
cs
adc
add
test
adc
arpl
adcl
and
pop
or
lock
jle
sbbb
dec
inc
es
xor
dec
sarl
jae
fbstp
sub
xchg
sbb
push
xor
pop
and
mov
mov
repz
add
or
outsl
inc
lods
inc
ja
fildl
mov
jbe
inc
mov
adc
sub
fs
loop
adc
pop
inc
popa
adc
pushf
data16
outsl
dec
lcallw
scas
mov
nop
mov
ds
push
cmp
sub
inc
push
jo
sub
repz
xchg
inc
ds
pop
not
scas
imul
mov
and
mov
icebp
pop
in
sub
pusha
sahf
push
adc
jmp
cmpsb
pop
cmp
loope
repnz
dec
xacquire
add
cmp
dec
mov
jb
mov
and
and
xchg
adc
push
dec
fcompl
bound
and
add
fwait
jl
ja
test
iret
std
scas
sbb
mov
jl
jns
enter
adc
roll
es
call
push
push
jle
leave
xchg
add
mov
pop
daa
cmpsl
movsb
jo
mov
rorb
xchg
lret
xchg
inc
mov
pop
sub
and
out
stos
lea
sbb
adc
aad
shl
push
jmp
mov
xchg
sub
lretw
push
stos
sbb
scas
or
jl
loop
nop
fsubl
mov
adc
or
decb
mov
pop
cmp
addb
ss
cmp
insb
ja
mov
les
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
cmc
repz
jo
imul
xor
pop
jge
sub
dec
xor
sarl
sub
inc
jmp
inc
push
in
lret
ja
xchg
mov
imul
pop
mov
in
cmp
cmc
ja
addb
and
sbb
sub
push
lahf
out
lods
and
imul
push
iret
cwtl
imul
fldl
inc
shlb
mov
dec
cli
shll
dec
nop
stos
inc
jb
dec
and
xor
xor
stos
subl
inc
daa
xor
xor
mov
mov
daa
outsl
adc
xor
mov
inc
push
cmp
sti
ret
xchg
push
add
insb
jo
repz
sbb
pushf
ss
sbb
sbb
mov
cs
adc
or
pop
cmp
fldcw
mov
mov
and
pop
adc
sti
add
mov
lock
xor
iret
sbb
jo
roll
pop
clc
xor
ljmp
shrl
movsb
aas
insb
jmp
xchg
call
ret
das
and
mov
idivb
pop
pop
jle
pushf
test
out
mov
jmp
xchg
adc
or
push
ret
and
or
lcall
or
lea
pushf
jns
int3
call
aam
pop
sahf
jp
lcall
cli
out
and
mov
lcall
mov
jecxz
jae
enter
mov
mov
adcb
dec
xchg
push
ret
cmp
sbb
lret
jmp
jno
xor
sbb
push
push
mov
repz
and
stos
xchg
js
push
shl
pushf
lret
jo
xor
in
jns
dec
test
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
cmp
fcmovu
loop
jo
jg
jo
shll
mov
ret
stos
push
xor
inc
frstor
inc
xor
pop
outsb
pop
xlat
jb
xchg
rcrl
jae
push
ds
call
outsl
out
aaa
aam
xchg
test
jg
sbb
stos
outsl
pusha
clc
or
adc
mov
sbb
jne
mov
outsb
and
or
sbb
or
mov
sub
add
cwtl
or
xor
popa
mov
negb
pop
dec
xchg
mov
rorb
insb
dec
jae
jmp
test
xor
inc
jmp
mov
jp
push
or
mov
lods
push
std
clc
loopne
outsl
es
pushf
mov
lcall
mov
stos
iret
shlb
sbb
mov
inc
push
mov
je
repnz
ret
mov
jge
inc
stc
sbb
inc
ljmp
imul
out
ret
inc
ljmp
xor
adc
pushf
dec
outsl
les
pop
mov
ds
lds
popa
and
ja
add
mov
test
or
and
mov
adc
mov
out
mov
or
or
lds
mov
push
sub
pop
add
cmpb
movsb
jl
lods
sub
xchg
arpl
push
and
cltd
call
int
lods
xchg
data16
cmpsl
push
scas
dec
jns
and
inc
pop
lods
inc
bound
mov
and
loopne
test
js
mov
ret
lret
popf
rclb
xchg
int3
mov
cmp
jle
testl
scas
outsb
cmc
pushf
cmp
xchg
mov
fs
int
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
fwait
pop
ret
loopne
jo
jg
jo
sbb
and
int
repz
mov
fmul
push
mov
adc
pop
mov
inc
sub
push
nop
xor
movsb
sub
enter
jl
fiadds
pop
xchg
or
push
mov
aaa
and
jns
fsubs
cmp
sub
and
dec
out
inc
jns
xchg
into
sub
add
mov
les
scas
std
jno
jg
out
fwait
xchg
cli
popf
loop
push
cmpsb
or
inc
cmp
inc
test
mov
sub
pushf
ljmp
mov
scas
or
dec
and
pop
add
arpl
adc
mov
icebp
pop
jmp
sub
mov
popa
in
outsl
jge
pop
repz
fwait
cmpb
sub
mov
gs
mov
xchg
scas
dec
dec
fcmove
fucomp
xchg
lahf
dec
pop
rcrl
call
inc
insl
push
sbb
xor
shrb
test
pop
rclb
xor
sbb
push
jge
clc
pop
loop
hlt
xchg
push
sbb
cmp
popa
sub
fwait
mov
pop
jb
sbb
adcb
ja
mov
icebp
cwtl
inc
pop
add
nop
mov
push
lahf
lods
imul
jbe
mov
imul
add
and
inc
add
pop
xor
decl
push
fadd
loope
jne
dec
imul
mov
test
xor
mov
jo
ficomps
cmp
sbb
fwait
push
jmp
mov
jae
jno
mov
hlt
or
pusha
arpl
jo
xchg
jg
jo
movsb
and
xchg
push
sbb
mov
hlt
sub
push
iret
std
jnp
adc
cmp
jns
cmp
ja
pandn
pop
sti
scas
ljmp
pop
data16
add
popl
mov
sub
dec
jl
arpl
loopne
lods
lret
add
test
lret
mov
sarb
rcl
cmp
imul
movsl
push
testl
clc
jmp
dec
dec
sbb
aad
in
cmp
and
sahf
data16
cmc
stos
outsb
xor
cmp
or
push
sub
test
fs
dec
loop
jns
scas
mov
sub
mov
test
out
or
push
and
mov
out
icebp
addl
mov
popa
or
xor
repz
shrl
mov
scas
scas
or
hlt
jno
test
scas
jb
pop
insb
out
and
hlt
movsb
lret
aas
jmp
or
lcall
add
and
adc
mov
rorl
jnp
xor
not
test
push
add
mov
ja
cmpsl
faddp
in
add
clc
sahf
mov
cs
jl
nop
in
dec
xchg
bound
hlt
xchg
insl
jmp
fsubr
int3
arpl
mov
cld
lods
adc
ficoml
test
dec
xchg
jnp
add
fcomi
lret
repnz
int3
inc
ljmp
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
lea
mov
jo
xchg
jg
jo
adc
dec
pushf
push
sbb
int3
aad
inc
sub
nop
in
ja
mov
dec
jmp
inc
stc
pop
sub
xchg
sbb
push
gs
lods
roll
add
or
lret
sbb
sub
cmpb
xchg
cmp
push
mov
jmp
cmp
push
mov
int3
add
out
test
es
sub
jg
and
inc
inc
test
add
test
enter
push
jb
mov
cld
xchg
iret
pop
and
dec
or
mov
adc
inc
mov
dec
fstpl
cmpsl
dec
jb
mov
or
lcall
int
sbb
cmp
sbb
adc
pop
cmp
adc
outsl
adc
test
movb
pop
das
jg
sub
test
xor
mov
push
leave
push
lods
sub
fidivs
stos
push
sahf
call
pusha
lock
xchg
push
mov
test
repnz
mov
jle
dec
or
dec
insl
cmp
je
negb
loopne
cltd
xor
scas
sub
cmpsb
xchg
pushf
inc
add
pop
imulb
outsl
div
out
lock
dec
xchg
mov
jge
gs
popf
push
mov
jmp
inc
adc
cwtl
cs
sub
add
add
lods
pushf
sub
cmpsb
mov
push
cmp
aaa
sbb
daa
mov
ja
and
mov
cmovp
repz
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
lahf
cli
sbb
xchg
jg
jo
repnz
adc
insl
inc
std
cwtl
dec
sub
pop
inc
movsb
mov
xor
in
std
dec
lret
mov
test
cltd
cmpsl
adc
je
sbb
jle
sub
outsb
mov
mov
mov
cmp
rorb
and
ljmp
inc
repnz
je
sub
mov
pop
push
jle
fwait
out
dec
push
fucomp
mov
sub
mov
fistpll
in
lea
shl
adc
xlat
and
lods
enter
inc
inc
aas
push
imul
sbb
sub
inc
cmp
mov
fld
fisubs
imull
push
cmpsl
iret
lret
das
mov
xchg
mov
sub
loope
test
into
jno
fisttpll
and
outsb
ret
push
adc
ror
aad
sbb
lret
lcall
outsb
pop
mov
lcall
loope
mov
ret
loope
adc
push
out
xchg
fisttps
jmp
out
jnp
pop
daa
pop
adc
das
or
sub
lds
cmp
addb
fimuls
cwtl
cmp
iret
jl
xchg
lahf
loop
cmp
and
insl
dec
cmova
movhps
adc
adc
frstor
push
test
inc
lret
inc
adc
adc
rcl
ljmp
in
ret
test
incl
xlat
mov
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
ja
xor
jo
xchg
jg
jo
movsl
icebp
sub
je
dec
inc
dec
push
xchg
bound
jb
sub
lcall
jo
notb
mov
xchg
inc
bound
lock
addb
insb
or
mov
std
or
jo
loope
popf
mov
stos
or
xchg
std
sub
push
in
ds
je
mov
fadds
push
cltd
std
aam
jmp
sbbb
mov
mov
gs
add
adc
jle
cltd
in
sbb
mov
bound
xor
jl
ret
inc
pop
mov
push
es
inc
adc
push
sub
ja
sahf
out
adc
leave
cmp
cmp
call
inc
test
mov
notb
nop
in
or
or
je
outsl
cmpsb
cmp
in
nop
or
sbb
sbb
daa
mov
dec
cltd
outsb
bound
mov
xor
stc
pop
leave
rdpmc
inc
sbb
jo
jo
rol
cwtl
sbb
sarb
imul
add
vpslld
mov
es
push
cli
push
mov
imul
pushf
xchg
xor
cmpsb
stos
ret
mov
rcrl
aaa
push
adc
jne
das
sub
cmpsb
adc
push
push
pop
movsb
jne
jg
aad
ja
addl
jne
pop
inc
mov
mov
sub
outsl
mov
add
movsl
or
push
ret
frstor
xorl
push
adc
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
mov
mov
jo
jg
jo
push
aad
jbe
cli
mov
mov
movsl
es
fiadds
mov
popa
test
cld
popa
jno
xlat
popf
stc
sbb
les
out
popf
cwtl
jnp
out
cld
or
lods
mov
or
add
cld
xchg
test
inc
pushf
xor
push
and
setl
call
mov
xorb
xchg
lods
or
clc
and
sarl
sub
lret
xor
and
int3
push
mov
pop
je
pushl
repz
dec
pop
mov
fimuls
ret
sbb
in
insl
pop
int3
inc
add
fdivrp
dec
jbe
pop
push
es
pushf
xchg
in
mov
test
lahf
mov
pop
cmp
dec
add
cmovle
cmp
cs
cmp
inc
push
popf
sbb
insb
jle
cmp
test
mov
cmp
aaa
mov
lret
fidivl
push
cmp
adc
push
or
sbb
inc
arpl
mov
mov
sti
jle
fldcw
jbe
and
inc
ss
adc
orb
int
ljmp
testb
jne
loope
pusha
aas
test
mov
jo
mov
adc
or
loope
dec
cli
sbb
xor
cli
int
pop
fstps
test
or
data16
xchg
mov
inc
fsubr
mov
add
mov
icebp
in
icebp
mov
push
add
sub
jo
xchg
jg
jo
add
sbb
jo
rorb
adc
fldl
repz
xor
dec
dec
mov
dec
adc
call
mov
addb
stc
addr16
xchg
push
dec
push
mov
cmp
in
push
sub
push
mov
jp
pop
les
and
add
cli
cmp
inc
mov
cli
movsb
jmp
fxtract
mov
sbbb
xchg
cmc
cld
jnp
mov
mov
xchg
fsubr
aam
ret
iret
int3
push
testl
addr16
incl
sub
clc
mov
int3
mov
sub
add
movsl
nop
fs
mov
xchg
mov
cltd
mov
shrl
xor
lea
mov
popf
pusha
dec
aaa
rorb
aam
aam
dec
out
and
mov
fmull
cltd
xchg
js
sbbb
xor
aaa
out
js
mov
pop
loope
pop
mov
or
and
enter
add
gs
fnstsw
idivb
enter
pop
jecxz
xchg
aaa
inc
call
enter
fs
dec
test
mov
sarb
sbb
cmp
insb
cld
xor
or
inc
movsb
dec
addr16
jae
mov
in
sub
leave
popf
sub
or
dec
es
lock
icebp
aam
push
mov
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
or
xor
jg
jo
das
xor
orb
jg
shll
fisttps
test
test
cmp
in
cltd
push
fwait
lods
dec
icebp
xchg
xchg
mov
test
out
sbb
stc
insl
pop
add
mov
addb
and
cmp
dec
or
add
mov
aaa
loopne
frstpm(287
out
fwait
xchg
aas
or
or
out
fidivl
inc
stos
aas
test
fisttps
xchg
push
hlt
dec
add
pop
add
std
pop
xchg
mov
sub
dec
xchg
fisubs
and
dec
pop
notl
jo
mov
jb
lods
leave
sbb
push
mov
std
stos
dec
scas
jns
add
out
inc
fsts
loop
inc
icebp
add
int3
je
adc
inc
movsl
out
cmp
dec
adc
cmp
or
ja
sbb
push
outsl
or
les
mov
popf
mov
jb
pusha
xchg
pop
jl
lods
sub
sbb
or
loopne
inc
dec
je
jmp
dec
fcmovnb
pop
inc
pop
jae
mov
es
ja
movsl
ret
cmc
xchg
rolb
sbb
movb
int
mov
xor
pusha
pusha
inc
dec
dec
jmp
pop
sub
insb
sub
and
jb
pop
add
mov
les
inc
add
test
lea
lock
ss
mov
mov
jmp
frndint
std
imul
mov
xor
repz
xchg
jg
jo
sub
test
lea
pop
mov
inc
adc
dec
lods
xchg
xchg
sbb
bound
aaa
cld
stos
sbb
dec
leave
ljmp
sbb
lods
aam
adc
adc
dec
out
shr
and
sub
xlat
iret
adc
xlat
or
push
mov
push
mov
dec
dec
and
sbb
sub
or
pop
data16
add
pusha
jmp
or
jo
mov
jmp
pushf
mov
dec
mov
mov
sahf
loope
gs
adc
push
outsb
sbb
xor
jmp
pop
xchg
adc
out
push
dec
or
inc
pop
jmp
or
xchg
out
cmp
and
int
outsl
mov
push
aad
xor
dec
nop
stos
mov
das
int3
xchg
and
or
loopne
or
cli
xchg
mov
inc
adc
mov
jle
mov
vsqrtss
int3
cmp
addl
fs
cmp
push
scas
inc
or
pop
mov
cltd
enter
sub
jle
adc
xchg
xor
aad
cmpsl
inc
mov
cmp
pop
aam
push
sub
hlt
es
jne
mov
daa
push
scas
add
mov
dec
mov
dec
arpl
scas
sub
jno
or
push
stc
sbb
lock
inc
xchg
or
pop
mov
dec
ds
test
pushf
addr16
sub
hlt
fimull
or
mov
bound
sahf
mov
pop
mov
cltd
ficompl
push
mov
add
jmp
hlt
sbb
rep
cmp
aaa
dec
sub
cmovg
jo
xchg
jg
jo
hlt
xor
xchg
or
mov
hlt
pop
jge
push
pop
jnp
fstps
xor
push
and
stc
push
ret
test
pop
add
scas
jmp
rorl
mov
mov
lahf
arpl
pop
and
xor
cmp
sub
and
push
dec
repz
lret
mov
sub
adc
jmp
cmp
sub
adc
xchg
mov
add
loopne
pop
xchg
nop
jne
in
fimull
gs
mov
pusha
in
mov
sbb
xchg
mov
cld
dec
jne
cmc
repnz
or
jnp
imul
adcl
sub
add
pop
push
xor
add
dec
or
popa
call
sbb
sub
mov
and
loopne
aad
push
inc
adc
scas
mov
sbb
sub
std
mov
mov
or
mov
lods
test
cld
and
xchg
js
call
std
lea
pushf
imul
outsl
gs
loope
or
scas
cmp
jae
and
sbb
or
fsubr
add
adc
sbb
cmp
js
cli
sahf
outsl
lahf
sub
mov
jg
enter
cmp
incb
daa
bound
push
call
lds
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
dec
adc
lock
xchg
jg
jo
cmp
sub
mov
inc
xlat
ds
cli
ret
stos
add
stos
lds
adc
xor
add
cmpsl
inc
aam
cmp
out
xchg
les
cmpsb
dec
daa
pop
xor
aaa
sti
lds
mov
std
insl
inc
pop
cmp
dec
push
mov
xchg
cmp
add
test
and
icebp
pop
loopne
dec
out
test
pop
out
cmp
add
mov
jl
imul
and
push
sbb
in
movsb
jb
mov
push
xorb
scas
scas
mov
push
xchg
pushl
addb
ret
jge
stos
mov
imul
aas
push
push
dec
push
mov
pop
pop
test
js
call
dec
cmp
sub
xor
cs
mov
xchg
stc
imul
cmpsb
inc
inc
shrb
pop
hlt
nop
repz
test
imul
outsl
movsb
leave
pop
out
cli
out
fdivs
add
jo
lods
mov
popa
fisubrl
cmp
lcall
clc
scas
outsl
rcrl
mov
jae
rolb
enter
inc
xor
cmp
add
push
aam
les
pop
cld
sub
push
and
inc
mov
mov
test
push
je
push
int
lahf
sbb
adc
push
stos
xor
mov
daa
push
fcmovbe
dec
stc
jae
mov
in
fldcw
inc
nop
sub
xchg
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
mov
rcll
cmp
pop
sbb
mov
dec
jae
lret
sub
movsb
jns
fstpt
popf
jge
cwtl
cmpsb
push
in
jecxz
arpl
pop
or
sbb
cmp
or
iret
imul
or
xlat
test
and
dec
movsb
pop
int
aad
cs
pop
sub
or
fs
xor
jg
xchg
shrb
imull
xchg
int3
mov
imul
jae
ret
jns
jg
mov
and
jg
push
popl
test
adc
sub
test
push
add
lcall
or
push
sub
inc
jns
subl
mov
and
out
cld
cmp
mov
jg
cmp
add
xchg
iret
xchg
mov
in
fs
push
push
jle
cmp
testw
andl
iret
imul
les
cmp
jnp
adc
into
testl
add
jae
sub
ficoms
xchg
in
jnp
lods
std
lds
push
mov
dec
dec
xchg
cmp
adc
lock
scas
sbb
movsl
cmp
dec
inc
iret
daa
pushf
and
jnp
mov
jmp
outsb
xor
sub
xlat
mov
or
push
inc
and
jbe
pop
xlat
xorb
pop
cmp
mov
lods
xor
test
test
shrb
cmpsb
jae
mull
stc
pop
jle
iret
add
test
cmp
mov
inc
pop
mov
clc
adc
aas
pop
add
mov
push
mov
inc
xchg
dec
and
mov
arpl
aad
psllq
cmp
dec
add
addr16
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
jae
sbb
cld
jo
jb
jo
pop
push
lock
fistpl
movb
bound
push
out
int
rclb
xor
icebp
mov
orb
das
mov
inc
out
dec
andl
xor
mov
lods
fstpl
insb
cmp
fs
push
sti
xor
fdiv
jle
mov
and
addr16
push
das
push
sub
sub
bound
lea
sbb
fidivrl
sti
lods
inc
inc
adc
mov
stos
jb
and
jp
popl
jge
incl
lea
push
addr16
or
sbb
test
sar
into
out
push
lods
test
out
adc
cli
mov
imul
stos
adc
sub
je
mov
imul
ret
lret
gs
fcoml
lods
sbb
xlat
xlat
in
jge
cltd
dec
mov
pop
pusha
push
xchg
leave
sahf
mov
leave
xchg
cmpsl
sbb
repz
push
xchg
mov
mov
mov
jg
repz
mov
into
sti
mov
add
stos
sub
inc
cwtl
and
jge
out
lods
ljmp
loopne
sub
pop
and
rclb
push
gs
js
push
es
xor
scas
sub
cli
xchg
jno
stos
and
in
push
mov
xor
arpl
mov
loope
imul
or
into
enter
int3
das
cwtl
stos
scas
xor
shlb
in
pusha
scas
cmp
fwait
mov
es
push
lret
scas
dec
sub
imul
pop
cmova
mulb
mov
push
test
lock
adc
add
jno
call
aas
xor
cmp
dec
cli
sub
nop
jp
add
pop
xchg
jb
add
shr
add
add
cmpsl
push
in
gs
arpl
push
jo
jg
jo
mov
mov
jg
mov
nop
jnp
fsubl
mov
xchg
fdivl
xor
sti
sarb
int
mov
jne
push
leave
pop
mov
shr
mov
mov
push
push
add
pusha
mov
fldcw
lea
pop
xchg
xchg
mov
sbb
fs
cmp
in
repnz
jbe
aas
mov
rcrl
or
mov
xchg
xchg
mov
daa
dec
std
adc
adc
test
adc
daa
or
in
cs
inc
negl
movsb
in
mov
mov
mov
cmp
adc
inc
adc
mov
ror
mov
je
xor
pop
or
pop
rol
mov
add
lret
cmpsl
fisttpll
xor
out
cld
movsl
xor
bound
mov
jb
dec
lret
sahf
insb
pushl
jns
iret
call
sbb
outsb
pop
ja
adc
adc
stos
test
xchg
stos
arpl
fcmovne
into
mov
test
pusha
xchg
sub
cmp
test
xchg
ffreep
sbb
fdivrl
xor
push
or
xor
int
imul
sub
cmp
push
ds
movsb
and
movsl
lock
rcl
mov
xlat
pop
movsl
mov
jmp
xor
aas
push
xlat
cmpsl
and
jae
pop
loopne
repnz
popa
xchg
adc
xor
sti
scas
push
cmpl
mov
roll
pop
xor
mov
sub
testl
pop
movsl
and
push
mov
jo
mov
sbb
sub
mov
push
or
or
mov
into
fldcw
mov
aaa
loope
mov
xchg
mov
push
fstpl
insb
cwtl
mov
sbb
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
popf
adc
jo
jg
jo
ljmp
sbb
sbb
arpl
fstpl
hlt
xchg
or
aad
lret
insb
cmp
or
jne
add
data16
push
movzwl
sub
sbbl
and
xchg
fsubrs
shlb
sarl
ds
pop
pushf
mov
xorl
mov
push
push
xchg
jnp
jmp
and
and
lret
or
push
hlt
lret
int
add
js
lods
js
lds
ljmp
out
inc
jmp
add
cmpsb
dec
pop
dec
push
jg
scas
add
jg
push
aaa
jno
movsl
repz
imul
xchg
pop
in
mov
sbb
mov
push
imul
xchg
cs
pushf
cmp
inc
jnp
out
or
loopne
jecxz
je
idiv
jecxz
xor
idivb
inc
sbb
enter
mov
or
jecxz
insb
dec
inc
std
dec
xlat
leave
popf
cmp
jge
mov
dec
mov
das
test
jo
mov
lods
xor
divb
out
sahf
data16
jge
mov
jbe
jge
cmc
push
into
rorl
mov
add
rclb
popa
mov
pop
xchg
imul
aas
jnp
filds
push
add
pop
mov
pop
pop
lds
adc
add
sub
fnstcw
mov
xor
mov
sbb
sub
inc
hlt
sbb
xchg
hlt
iret
pop
call
add
xchg
testb
dec
mov
jae
push
jns
and
mov
xor
xchg
pop
repnz
out
out
leave
add
inc
hlt
aaa
sub
cmc
xchg
or
cli
rcrl
leave
int3
out
lods
out
cmp
lock
fidivrs
push
outsb
addr16
push
dec
and
mov
add
and
jmp
jnp
xchg
les
sub
std
inc
mov
jo
jg
jo
jmp
test
push
icebp
loope
mov
jecxz
rol
push
sbb
push
je
ja
loop
xchg
or
sahf
jbe
xor
imul
dec
insl
fcoms
sbb
outsl
sbb
adc
je
jmp
imul
in
xchg
rcll
insl
inc
dec
push
pop
rolw
in
push
ficompl
add
out
sbb
std
adc
adcb
mov
mov
int3
call
ja
xor
movsb
lcall
ret
mov
cli
push
scas
xchg
or
xor
push
fists
pop
call
xchg
iret
sbb
sahf
es
test
xchg
jmp
sbb
mov
lods
dec
dec
push
mov
jp
scas
mov
and
icebp
xchg
gs
jle
ljmp
jecxz
sbb
in
add
or
push
mov
insb
mov
mov
add
or
cmp
sti
mov
frstor
imul
xchg
shlb
add
add
or
into
sub
mov
jmp
or
mov
ja
pop
cmp
push
out
movsb
daa
xchg
xchg
dec
sti
in
jecxz
mov
sub
push
repnz
cmp
out
sub
shll
lods
std
insb
cmp
fs
scas
daa
roll
outsb
add
insb
cltd
cli
dec
xchg
xchg
mov
loopne
xchg
fs
mov
jle
push
scas
loop
mov
iret
dec
push
popf
in
add
cld
push
hlt
xor
sahf
sbb
fidivl
out
inc
push
add
jmp
sti
jg
into
aad
sbb
aad
fsubrl
mov
int3
stos
xchg
push
jecxz
xchg
sbb
stos
int3
mov
mov
mov
call
jne
enter
sbb
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
shll
lret
jo
leave
jle
jo
xchg
xor
pusha
dec
cmc
cld
sbb
adc
lods
inc
xchg
arpl
xchg
arpl
leave
adc
push
adc
fldenv
stos
sahf
add
jge
leave
xchg
pop
js
cmp
cmpb
cmpsl
imul
fldl
dec
or
test
sbb
add
aam
sti
push
mov
mov
or
imul
dec
sub
inc
push
xor
mov
mov
gs
loopw
test
mov
jne
cltd
xor
xchg
cmc
pop
cld
add
xchg
inc
dec
pop
xchg
shlb
push
cmp
repz
jnp
test
mov
imul
mov
sub
mov
inc
and
xlat
cmp
inc
nop
cltd
int
pop
mov
or
adc
sbb
adc
mov
nop
adc
loop
add
cmpsl
sarb
lret
adc
xchg
push
out
pop
and
gs
push
dec
cwtl
mov
mov
cmpl
xlat
das
cmp
sub
pop
mov
xchg
sahf
mov
imul
mov
pop
popf
xchg
adc
add
jns
cmp
pusha
pop
sbb
pop
pop
loope
pop
fnstcw
or
inc
repz
fsubl
push
jbe
jo
ja
sub
nop
icebp
sbb
aad
call
jmp
pop
sub
dec
je
xchg
jbe
xchg
or
jbe
xor
xlat
mov
mov
push
xor
insb
jns
dec
dec
sub
hlt
das
cmp
jo
cmpsb
imul
jecxz
imul
fdiv
pop
jno
test
or
mov
jmp
push
mov
cld
adc
jbe
lahf
cwtl
inc
fldl2t
gs
push
bound
sbbl
cmp
push
add
push
pusha
pop
sahf
in
decb
cmp
js
out
mov
and
mov
pop
jge
movsb
outsb
mov
pop
sbb
dec
rcrl
fs
dec
and
sub
mov
push
fdivrl
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
fs
sahf
int3
xorb
jle
jo
lahf
clc
mov
sahf
les
fcomi
sub
fsubrs
lret
jle
imul
mov
shll
dec
jo
add
orb
stc
call
jns
pop
push
sbb
sub
mov
orl
into
aam
test
ret
sub
jp
xchg
pop
jge
mov
call
insl
xchg
xchg
adc
sub
ljmp
and
mov
lods
and
jo
pop
adc
mov
sub
xlat
push
jg
in
fwait
aad
pop
push
icebp
inc
jnp
lahf
mov
dec
pushf
sahf
in
xchg
call
arpl
cltd
sub
test
dec
out
scas
mov
add
mov
inc
adc
jno
jmp
jmp
add
ss
adc
push
mov
inc
shlb
pop
sbb
fdivl
in
enter
xor
scas
pop
fisubl
imul
mov
in
cmp
test
ss
jecxz
xlat
les
mov
mov
in
dec
int
jo
ficomps
leave
sub
lea
pop
pop
mov
and
in
call
fwait
insb
inc
rcll
mov
outsb
das
add
jmp
push
dec
sbb
cmp
sbb
movl
jg
gs
adc
icebp
inc
shlb
rolb
dec
cmpsb
or
jns
mov
xlat
push
pop
cmp
jg
push
pop
sbb
sbb
push
vmovups
stos
add
mov
xor
inc
ja
aas
inc
xor
adc
cs
bound
mov
jbe
inc
xor
outsb
or
popf
push
cmp
push
pop
dec
jecxz
int3
loope
or
jg
sarb
loopne
popa
mov
out
add
xchg
inc
push
lods
mov
repnz
gs
sbb
xor
test
sbb
sbb
mov
insl
fstpl
lock
or
jge
jne
cmp
dec
dec
jp
sub
ret
add
add
and
dec
xchg
shl
movsl
xorb
jle
jo
add
sbb
jb
cmp
cmp
cmpsl
xor
or
icebp
rorl
push
subb
cmove
adc
divb
rclb
jle
ret
cmp
cmp
cli
jl
mov
xchg
cwtl
xor
adc
jle
pop
xor
cli
popa
arpl
mov
outsb
mov
xchg
mov
jmp
fstpl
or
ja
lock
jns
es
push
imul
rcrb
mov
xor
dec
fldl2e
mov
fwait
xchg
fsubrl
ss
stos
add
lock
lods
dec
inc
mov
std
aad
fwait
inc
xchg
bound
jge
mov
nop
cmp
iret
dec
outsb
adc
ljmp
fisttpll
lds
notl
fsts
js
testb
js
mov
lods
xchg
outsl
pop
mov
mov
lea
add
fyl2x
sbb
movsl
adc
loope
sarl
sbb
sub
test
mov
clc
cmpsb
xor
in
test
je
mov
inc
test
lds
mov
push
aaa
cmp
inc
mov
ret
mov
sub
and
lahf
dec
jns
add
or
or
pop
sbbl
shr
nop
push
push
ds
cmp
icebp
push
fisubrl
test
push
js
test
jp
insb
gs
enter
mov
jne
pop
push
mov
lock
adc
jl
imul
ret
stc
jl
cmpsb
sbb
outsb
dec
mov
daa
fisubrl
xor
cmp
insl
mov
adc
test
outsb
dec
mov
or
jp
mov
push
sbb
add
or
cmp
push
sub
cli
sbb
mov
jb
es
add
outsb
push
push
add
pushf
sub
jne
mov
insl
xchg
sar
or
sbb
jg
dec
inc
fs
lahf
mov
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
sbb
jle
jo
dec
jge
jo
stos
lds
sbb
pop
loop
dec
pushf
es
lahf
xchg
pusha
or
in
les
iret
imul
inc
dec
xchg
sbb
xor
in
xchg
enter
mov
fmull
and
std
dec
das
push
mov
xor
push
and
sbb
sarb
repz
rcr
int
xor
cmp
xchg
add
int3
test
push
jnp
mov
push
inc
repz
js
hlt
sub
cld
imul
push
test
fidivs
sub
arpl
clc
inc
jb
ljmp
lods
inc
lods
test
out
les
int
xchg
pushl
cmpsl
pop
and
push
faddl
bound
and
push
pop
mov
jl
mov
and
sub
in
push
push
icebp
jg
push
xchg
popa
setge
mov
or
and
popf
mov
jg
pop
in
inc
mov
arpl
data16
stos
ficompl
or
call
movsl
jns
stos
xor
xor
push
jo
sti
adc
mov
je
addr16
pusha
mov
repnz
lahf
popl
lea
xchg
adc
rolb
sahf
push
cs
mov
nop
nop
test
gs
lods
jl
push
sti
les
add
arpl
or
repz
jae
ljmp
mov
push
pusha
and
lret
out
jb
mov
lock
rcl
mov
adc
into
lret
insl
popf
pop
popa
gs
sub
ljmp
sbb
cvtpi2ps
in
dec
call
jne
push
lods
repz
or
lods
pop
lahf
in
stos
push
jp
lcall
fsubl
or
mov
leave
and
mov
loop
loop
stos
mov
sahf
mov
adc
xor
push
nop
inc
leave
jp
in
out
sub
test
lret
push
cmp
pop
push
stos
cltd
xor
jle
ss
mov
mov
xchg
and
mov
hlt
shrl
test
dec
ljmp
sbb
mov
cmp
pop
jmp
mov
movsb
inc
repz
imul
jb
or
cmp
lods
push
adc
mov
mov
int
sub
scas
adc
testb
pop
idivl
push
sub
cltd
fiaddl
test
aad
xchg
mov
ljmp
lret
insb
andl
int
mov
inc
movsb
mov
pop
imul
in
mov
cltd
icebp
rcrl
dec
pop
jg
lock
rorb
xor
xchg
mov
inc
cmp
pop
ljmp
fnstenv
lahf
push
jns
cmp
cmpsl
icebp
nop
movsl
cmp
pop
or
popa
arpl
xor
jne
ja
adcb
xor
lods
lret
stc
mov
mov
or
fistpl
popa
fwait
ret
dec
xchg
rcrl
sub
outsb
lret
pop
nop
call
and
xchg
and
xchg
and
xchg
mov
cmp
iret
jecxz
inc
sub
outsb
sub
jg
pop
fistpll
jbe
xor
cmp
cld
js
dec
cli
xchg
pop
inc
push
ss
xor
pop
cmp
inc
leave
lea
aas
pop
inc
jle
cmp
ss
lods
inc
mulb
jne
lret
or
add
shl
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
xor
jo
dec
jge
jo
or
push
je
cmp
cmpsb
jmp
ja
jbe
xor
in
mov
mov
popa
xchg
aaa
mov
repnz
cs
pop
push
aam
int3
mov
testb
inc
bound
je
test
cmp
xor
aam
xchg
pop
adc
loope
rorb
rcrl
ret
xchg
jns
add
lods
cmp
sbb
jae
out
sub
cmp
cmp
mov
lcall
leave
cmc
sahf
test
sahf
adc
fwait
pop
pop
mov
enter
je
mov
loop
cli
in
cmpsb
clc
idivb
cmp
adc
rcl
inc
jo
jmp
in
xchg
cld
xchg
aam
xorb
jno
das
fadd
inc
lods
mov
pop
mov
adc
fiadds
pushf
arpl
cmc
cmpsb
sti
out
cmp
cltd
movsb
fdivrs
fsubr
push
dec
jg
xchg
imull
sbb
sub
arpl
mov
dec
test
mov
xchg
aas
sti
sub
push
in
mov
or
sub
lret
xchg
cmp
mov
push
jae
mov
inc
jle
dec
cmp
xor
adc
cmp
inc
in
jo
dec
lods
ja
or
add
out
push
mov
jecxz
subb
cmp
xchg
mov
pop
jne
movsb
lock
adc
or
clc
xchg
imul
mov
jp
xor
mov
movsl
or
sub
mov
in
cmp
lods
mov
jbe
daa
std
xor
mov
mov
sbb
inc
xchg
pop
daa
subb
push
cmp
sbb
insl
fcoml
xor
rol
mov
lcall
stos
jp
sbb
bound
push
xor
test
aaa
addr16
jecxz
aam
xchg
push
rol
push
xor
iret
aaa
and
mov
ja
mov
pop
addr16
mov
xor
popa
jne
xchg
adc
lret
dec
or
shr
cmp
xchg
cwtl
popf
xchg
shlb
fwait
into
and
sbb
out
adc
cwtl
push
loope
lcall
adc
iret
outsb
add
mov
hlt
mov
push
sti
loop
fcoms
xchg
add
jge
pop
cmc
push
sub
sbb
fisubs
dec
mov
out
bound
in
data16
adc
js
cld
mov
xchg
push
push
negb
sbb
cmpsb
adc
mov
jno
and
stos
mov
ljmp
xchg
lods
lods
jb
enter
test
jae
xchg
and
pop
jg
mov
push
sub
shl
xchg
test
dec
push
mov
je
mov
fnsave
cmp
or
xor
sub
mov
mov
xchg
pop
and
inc
jo
push
out
aad
insl
push
pop
sti
rcr
pop
push
pop
inc
jmp
jno
push
jns
movsb
sub
jg
push
mov
icebp
test
jecxz
and
lods
mov
push
xchg
leave
fcoms
jmp
addr16
mov
sti
movl
aam
add
rol
cmp
in
dec
mov
in
shl
andl
insl
push
std
aaa
leave
jmp
repnz
pop
ret
push
mov
int3
and
popf
cwtl
imul
int3
xor
mov
loope
mov
out
ret
test
aas
mov
jg
xchg
jb
fisubrs
xchg
mov
jge
jnp
pop
imul
and
lds
lcall
sub
add
clc
and
inc
add
enter
add
mov
iret
mov
out
fs
loopne
mov
jge
jo
sub
in
clc
xor
add
into
mov
xor
lods
add
pop
mov
mov
mov
sahf
pop
push
sbb
fwait
or
rclb
pop
push
jecxz
and
pop
nop
hlt
jge
sub
add
mov
inc
aad
pushf
jb
popf
adc
xchg
and
and
leave
pop
sahf
or
int
cmpsl
cwtl
adc
xchg
sbb
lods
push
cltd
fmuls
out
mov
andb
ficoml
dec
mov
popf
mov
push
testb
or
mov
add
jecxz
das
pop
jg
in
das
pop
into
xchg
test
bound
loop
lret
xchg
nopl
cli
sahf
fmul
les
xchg
jo
loope
sti
adc
and
arpl
jb
sub
mov
mov
jno
push
push
aaa
in
gs
cmp
push
xorb
xchg
loop
fwait
or
aam
pushf
mov
cmp
jne
ret
sbbb
jne
adc
daa
jns
fs
sbb
mov
sub
add
aam
dec
inc
out
jg
out
cmp
or
dec
lret
add
sbb
lock
ds
in
jbe
lret
pop
sbb
inc
inc
out
xor
jecxz
clc
and
pop
jae
je
inc
cmp
addr16
in
adc
adc
fsubs
mov
sub
ss
enter
incl
sbb
repz
and
mov
add
lods
push
pop
add
or
es
test
repz
adc
in
mov
ret
jge
mov
add
lods
jns
dec
dec
data16
add
or
and
cmp
push
dec
xorl
popf
ficomps
mov
inc
pushf
iret
xchg
jno
mov
and
imul
out
rclb
mov
mov
cltd
xchg
lahf
das
pop
repnz
cli
call
stos
xor
cltd
repnz
cmpsl
or
mov
mov
mov
pop
xchg
clc
dec
jge
xor
repz
insb
cwtl
sahf
fnstcw
dec
addb
or
adc
xchg
jno
jno
adc
out
sbb
xor
xchg
inc
or
mov
or
movsl
pop
mov
mov
data16
clc
jge
ljmp
stos
xchg
mov
bound
lcall
leave
into
add
xlat
dec
cmpsb
sub
pop
popa
lret
ljmp
adc
fisubrl
mov
pop
cltd
in
push
add
pop
sbbb
pop
ret
xchg
in
cmc
sub
mov
sbb
outsl
jmp
mov
push
inc
push
movsb
cmpsl
cmp
lahf
out
pushf
jae
adc
add
sub
sbb
popa
arpl
lcall
jo
mov
xor
popf
pop
lret
push
scas
inc
mov
pusha
pop
and
out
xor
movsl
test
enter
in
leave
push
negl
jge
adc
mov
aad
sbbl
mov
inc
outsb
fisttpll
add
std
cmp
mov
mov
aad
sbb
pop
xlat
loop
das
jb
xchg
shr
jecxz
imul
push
mov
int3
stos
fidivrs
mov
lods
sbbl
nop
xor
jbe
adcl
push
inc
testb
push
pusha
push
mov
jbe
lahf
gs
leave
mov
pusha
sbb
mov
sub
cld
mov
inc
rcrb
jb
xchg
fdivs
jnp
push
pop
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
cmpsl
mov
xchg
jo
dec
jge
jo
cmp
sub
jmp
cwtl
sub
xor
or
push
shrb
insl
jno
fidivrl
popa
cmp
dec
jl
mov
shr
mov
adc
movsl
sub
jle
push
xor
das
mov
push
or
xchg
cmp
adc
repz
lea
je
jo
lea
stos
jnp
hlt
mov
iret
lods
and
fidivs
hlt
push
test
lret
dec
fwait
rorl
xor
incb
movsbl
out
dec
xor
repz
insl
cmp
mov
mov
push
fcmovb
push
jl
xor
movsl
outsb
mov
pop
outsb
inc
push
pushf
das
push
xchg
enter
daa
mov
push
data16
ja
pushf
jno
rcrb
pop
rcll
fldt
aas
mov
in
inc
jmp
add
mov
ljmp
inc
mov
std
jo
pop
das
popa
xlat
aam
and
enter
and
daa
in
cmpsl
jo
mov
mov
lds
inc
mov
add
ds
or
fldl
mov
push
xor
jne
and
add
mov
pop
cli
sbbl
sub
add
fimull
fs
push
push
mov
add
pop
dec
scas
mov
cltd
adc
std
adc
xor
mov
adc
or
inc
sarb
iret
jne
sub
loope
xor
and
mov
jb
popf
stc
sbb
out
xor
ja
mov
dec
sti
fwait
into
pop
xchg
lret
fs
lret
xor
orl
shll
xor
push
jne
sti
add
mull
ljmp
dec
fwait
cmp
lea
inc
push
jecxz
test
outsl
jb
imul
stc
mov
adc
nop
or
pop
mov
movaps
call
pop
jns
pop
dec
adc
add
or
cs
dec
pusha
clc
push
adc
int
xchg
ficompl
mov
shlb
pop
add
jmp
xor
dec
push
les
mov
xchg
xchg
jb
imul
int3
imul
sahf
mull
fldl
aam
xchg
pop
adc
mov
stos
dec
inc
mov
das
push
mov
sbb
sub
mov
pop
xlat
xor
jle
jae
cli
ret
cmp
jg
addb
pop
mov
jp
push
jle
ja
mov
xchg
jae
lock
pop
insl
stos
jno
push
xchg
stos
jp
and
cmp
mov
dec
push
cmpsl
pop
ret
mov
leave
jecxz
fisttpll
dec
imul
jge
outsb
mov
pop
ret
jo
cmpsl
jl
push
dec
sahf
push
iret
sti
and
cmp
push
ds
cld
jb
push
pusha
outsb
cmp
mov
mov
push
or
add
movsb
jnp
repz
daa
xor
xor
imul
lahf
jnp
xchg
pop
add
jecxz
xlat
ss
cmpsl
icebp
or
inc
xor
mov
push
pop
sbb
mov
mov
rolb
fdivrs
lods
fcmovne
ficomps
in
not
lea
mov
push
mov
push
mov
shr
add
clc
push
cmpsl
notb
xor
sbb
test
or
mov
lea
insb
cmp
stos
fisttpl
cmpsb
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
jecxz
aad
rcrb
jo
adc
adc
pop
xor
shll
fs
and
icebp
movsl
mov
rorb
cltd
nop
lret
inc
and
pop
jo
addl
push
pop
mov
loopne
sahf
pop
inc
or
mov
pop
rorb
xchg
add
push
cwtl
ljmp
jno
cmp
loopne
fists
jno
cltd
cmp
mov
mov
sbb
popf
out
repnz
mov
lds
jmp
push
push
add
jnp
shrl
mov
fisttpl
xor
sbb
push
cmp
sbb
and
sbb
mov
lock
jbe
pop
in
mov
add
xlat
xchg
cwtl
and
int3
popa
dec
sbb
sbb
xor
jae
fcoml
fs
jae
sbb
nop
mov
fcmovnb
jge
ja
pop
cld
jg
call
in
dec
mov
adc
addb
jmp
push
inc
arpl
dec
test
stc
cmp
xor
in
cltd
mov
mov
jo
lock
push
sti
stos
push
and
or
lret
in
cmp
ss
in
enter
or
ret
sti
jns
imul
and
outsl
sbb
push
or
lods
cs
pop
fcoml
test
jnp
cs
mov
mov
int
pop
push
cmpsb
mov
xchg
push
andl
shll
push
push
cmc
inc
sahf
pop
xchg
popa
mov
pop
inc
jmp
gs
aas
lods
addr16
xchg
xor
lds
faddl
stc
mov
es
sbb
xor
in
inc
pop
ret
scas
dec
mov
or
push
test
sub
push
add
test
gs
mov
xor
in
jg
sub
sbb
sbb
iret
or
push
and
fs
icebp
std
sbb
inc
adc
outsl
mov
push
mov
fwait
xor
repz
xor
ffree
mull
push
pop
lea
scas
mov
enter
test
sahf
rolb
push
sbb
cwtl
pop
push
jne
cli
mov
movsb
inc
hlt
int3
inc
adc
mov
or
sbb
and
or
pop
xchg
gs
mov
sub
movsb
push
inc
shlb
divl
imul
mov
mov
adc
cld
push
imul
int3
call
mov
mov
leave
rcl
mov
jmp
pop
addb
push
jge
movsb
pop
mov
lcall
in
dec
cmp
mov
movsb
decb
mov
cmp
pop
ljmp
sub
mov
lods
leave
sarb
jo
das
sahf
adc
lds
or
daa
mov
jmp
lods
mov
mov
pop
or
outsl
push
aad
dec
shl
mov
xor
idivb
imul
sbb
xchg
lcall
inc
aaa
mov
pop
inc
lahf
inc
xchg
test
or
add
test
mov
cmpsb
adc
movsl
imul
outsl
mov
jle
and
xor
lret
push
push
mov
jae
sbb
imul
push
stos
loop
dec
mov
das
cmc
sbb
pop
movsl
inc
shll
mov
mov
out
sbb
lcall
mov
imul
cmpsl
push
or
and
mov
leave
mov
dec
push
lock
stc
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fisubl
jo
dec
jge
jo
fstl
out
pop
jmp
xchg
aas
sbb
cmpsb
hlt
pop
push
cmp
mov
cwtd
ljmp
sbb
adc
lcall
sub
in
lret
inc
orl
enter
sub
add
int3
or
xchg
test
sbb
or
arpl
pushl
lret
push
lret
cmp
xchg
and
inc
adc
les
cmpsb
cmp
ret
inc
repz
testb
xorb
sub
or
imul
gs
mov
pusha
jae
and
inc
imul
pop
lea
push
jb
insl
call
je
push
sahf
and
outsb
in
inc
loope
cmc
mov
lret
mov
push
and
imul
push
mov
jo
xchg
call
jno
into
bound
add
xor
inc
add
les
cmpsl
mov
imul
adcl
sbb
mov
repz
decl
or
movsl
mov
cmp
movhps
pop
aaa
xor
dec
lret
enter
sub
sbb
das
stc
addr16
pop
dec
sbb
movsl
out
push
movsl
out
mov
js
jnp
mov
jns
push
pop
arpl
popf
fcmovne
sbb
pop
dec
lahf
jl
mov
jl
fmul
icebp
jmp
fsubp
add
aam
mov
dec
push
or
aas
xor
pop
mull
sbb
cwtl
pop
push
movsl
sub
xor
imul
int
sub
in
push
in
lahf
decb
push
pusha
lods
shl
and
nop
int3
stos
pop
sbb
add
rcll
ret
outsb
jb
test
jecxz
idivl
push
add
push
add
out
mov
pop
pop
std
mov
rorl
sarl
pusha
jns
int3
lds
iret
rorl
lea
test
dec
int
xchg
add
xor
pop
add
sbb
movsl
divb
arpl
and
jbe
jecxz
shl
lahf
xor
lcall
js
inc
iret
cmovo
imul
or
out
adc
cmp
das
mov
cmp
add
cld
lret
test
orb
mov
into
stos
mov
push
std
in
push
adc
cmp
scas
iret
sbb
in
xor
out
mov
and
push
sbb
inc
mov
sub
mov
clc
mov
lret
ljmp
subb
push
push
sbbl
cmc
jl
adc
lahf
pop
lcall
xchg
push
mov
popa
out
aam
ja
push
outsl
inc
add
lock
dec
xchg
jb
or
lahf
mov
cmp
mov
nop
scas
jns
jno
faddl
mov
jg
cmp
insb
mov
dec
rcll
xor
mov
scas
cmpsl
adc
sbb
popa
mov
sbb
or
sub
lcall
push
shlb
sbb
or
or
cmpsl
stc
fcmovne
adc
gs
scas
inc
dec
add
stos
push
hlt
cmp
sbb
dec
jle
imul
clc
or
pop
mov
dec
rcll
pusha
push
mov
cmpsl
fimuls
shrl
rcrb
in
fildll
dec
insb
push
loop
arpl
and
jno
mov
cs
push
scas
dec
lods
es
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
test
jo
dec
jge
jo
or
xor
movsb
movsl
je
arpl
aaa
int3
pop
dec
mov
jmp
sbb
fbstp
adc
adc
sub
inc
xor
push
fwait
popl
sbb
xchg
sub
mov
outsl
pop
mov
mov
cmp
xchg
mov
xor
test
and
adcb
cli
pop
and
ja
sub
js
imul
xor
loope
aad
pop
fcomps
int
outsl
xchg
loope
loope
inc
rorl
movsl
mov
movsb
dec
and
icebp
sbb
jnp
or
and
jne
cmp
fcompl
push
loop
and
pop
leave
xor
clc
pushfw
mov
pop
add
inc
out
mov
cmc
jno
add
mov
mov
ss
insl
xor
dec
push
out
jns
pop
and
in
xor
ljmp
mov
add
sub
jle
out
leave
imul
fwait
mov
pop
out
mov
mov
ds
lds
outsb
dec
sub
jbe
adc
adc
mov
and
mov
ja
scas
bound
jbe
mov
and
or
mov
arpl
push
out
aaa
cmpsl
cmpsl
cltd
in
push
in
in
add
push
pusha
loope
or
dec
loop
dec
inc
fucomip
bound
jbe
push
jne
idivb
out
cmp
and
bswap
imul
push
nop
mov
xor
push
int3
add
push
jb
bound
push
jge
jnp
out
mov
dec
pop
xchg
mov
add
add
mov
sahf
mov
fwait
or
push
xchg
push
inc
dec
outsl
cmc
adc
testl
cmp
cmpsb
mov
cwtl
push
push
cmpsl
push
out
es
dec
int3
jae
xchg
sbb
inc
or
cmpsl
aas
dec
push
xorl
insb
and
lret
notl
loop
push
cmp
test
aam
and
lret
into
inc
sub
or
imul
cmp
adcb
inc
sub
dec
test
lods
int3
mov
jecxz
push
xchg
cmp
dec
adcb
mov
sbb
aam
inc
es
fisubs
add
fs
jne
outsl
dec
sub
mov
xorl
mov
mov
iret
and
sbb
ffreep
in
sarl
xor
inc
xor
sbb
add
add
scas
mov
lock
ja
aad
jns
pop
pusha
es
jnp
sti
fsubrl
rcr
pop
imul
stos
sub
in
bound
pop
push
mov
sarl
push
lock
mov
inc
lods
in
jnp
popa
adc
jl
jno
and
adc
xor
push
xor
loop
popa
fcoms
fcmovne
popl
sbb
sub
leave
mov
pusha
jne
cltd
pop
or
data16
xor
xchg
mov
mov
add
es
dec
jg
inc
lods
xor
lret
xor
test
push
pop
movsb
sub
movl
mov
pop
test
jecxz
xor
jecxz
mov
fimuls
nop
repnz
xor
add
lds
out
dec
test
xlat
imul
lahf
icebp
bound
movsb
aam
fs
and
mov
lret
sbb
xchg
mov
das
sbb
jecxz
mov
push
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
insb
inc
ss
mov
jo
push
add
lds
fsubrs
add
inc
in
and
sahf
mov
sti
mov
mov
pop
scas
insl
int
fsubr
sbb
imul
adc
lea
nop
cmp
sub
cmp
sub
mov
and
cmp
sbb
push
dec
mov
sub
mov
mov
push
pop
jbe
out
xchg
adc
gs
lds
and
or
scas
xchg
fdivrl
mov
in
sbb
sub
pusha
test
xchg
jnp
ret
inc
jl
sar
sub
jmp
mov
and
in
cmp
pop
fscale
inc
sbb
push
xchg
cmp
outsb
jl
rcrb
mov
cmpsb
or
jns
daa
jns
mov
push
cmpsb
insb
mov
add
xchg
fistpl
sbb
add
loopne
cmp
aas
mov
sarb
xchg
add
push
add
mov
sub
xor
gs
cld
je
mov
stos
repz
or
jns
mov
adc
xor
repnz
or
fimull
push
lret
lods
xor
in
mov
lret
mov
and
ss
sub
xchg
pop
mov
adc
sub
pushf
push
xor
xchg
cmc
fstpl
xor
add
sub
imul
mov
fcomp
push
jae
and
mov
outsb
popa
xchg
scas
psubd
jmp
movl
sti
dec
pop
scas
mov
mov
sub
shrb
pushf
cwtl
insl
movsb
pop
xor
movsb
or
andl
mov
orl
mov
data16
xor
outsl
out
mov
out
stos
inc
ficoms
sbb
inc
fwait
pop
jecxz
aad
mov
dec
or
adc
jp
mov
and
test
scas
into
les
jbe
mov
dec
test
xchg
sub
jae
sub
jl
inc
test
jmp
pop
dec
jmp
push
mov
mov
dec
insl
jmp
call
fsubrs
inc
loopne
mov
lcall
popf
add
arpl
out
xor
imul
pop
out
lret
idiv
loope
test
add
mov
push
adc
sahf
cmp
stos
outsl
sub
pmovmskb
pop
xchg
sub
xlat
pushf
sub
dec
pop
jp
mov
sub
notl
sbb
push
inc
les
push
addb
push
cmpl
cmpsb
adc
jb
lcall
pop
hlt
push
data16
and
dec
es
mov
add
imul
jb
fucompp
mov
push
mov
gs
mov
lahf
pushaw
insl
push
pusha
sub
leave
fimull
mov
jl
in
sub
lods
jne
aas
jg
in
or
cmp
dec
clc
bswap
add
out
rcl
shll
pop
jbe
jmp
or
push
inc
loope
push
sarb
fiadds
js
icebp
jg
sarb
pop
adc
xor
mov
lock
movsl
sub
in
in
insl
inc
lds
cmpsl
bound
test
enter
jnp
xchg
cmc
jnp
inc
mov
pop
sub
mov
cmpsl
and
jnp
jle
xchg
lods
push
inc
cli
or
fisubl
fwait
loopne
adc
sub
jmp
sub
mov
mov
mov
cld
cmp
les
xor
jns
pop
dec
addr16
mov
sub
addr16
jg
xchg
pop
incb
test
movsl
repz
testb
jmp
sbb
sarl
lahf
popa
sti
arpl
scas
jo
dec
jge
jo
inc
xchg
orl
mov
inc
es
popa
loop
adc
mov
mov
jle
jecxz
rcr
jle
add
jecxz
jl
mov
push
or
mov
xor
mov
roll
and
cwtl
pushf
cmpsb
sub
popf
and
inc
add
data16
mov
daa
pop
mov
and
dec
je
xor
divl
and
stc
or
adc
shrb
jae
mov
inc
pop
aaa
or
or
sbb
mov
scas
inc
push
cli
jae
stos
jecxz
jo
jb
fidivrl
push
mov
lods
cmp
pop
sbb
shll
aas
sub
jl
adc
mov
and
jbe
cmp
outsl
hlt
xor
inc
xchg
or
mov
or
xchg
mov
pop
or
or
nop
mov
into
sub
mov
nop
addl
dec
movl
jecxz
arpl
mov
inc
jb
inc
leave
fiaddl
and
xor
jle
jbe
pop
dec
xchg
ret
sbb
nop
xor
ja
shl
decb
sbb
inc
mov
push
scas
jl
inc
aad
stc
xor
dec
mov
pop
xchg
call
ret
rep
enter
fdivl
sbb
sub
cmc
sbb
stos
and
pushf
xchg
daa
cmp
jle
mov
sbb
ficoms
sub
sub
movsb
push
fstl
pop
push
dec
inc
cld
pusha
add
outsl
sbb
lods
xor
cmpsl
mov
dec
push
and
mov
add
jbe
push
loope
pop
jl
sub
iret
popa
test
cmp
xchg
jbe
mov
lea
test
mov
sbb
xchg
lods
mov
aas
push
mov
push
inc
cltd
jl
xor
enter
or
xchg
push
lock
push
jne
sahf
mov
clc
sub
inc
mov
pusha
std
sbb
xchg
dec
add
sbb
mov
pop
xchg
inc
push
or
int3
sub
aaa
std
push
push
push
shlb
jle
call
lods
in
nop
add
jno
loop
mov
dec
data16
outsb
sub
mov
adc
mov
push
loop
cltd
pop
pop
mov
and
and
mov
movsb
pop
push
sti
std
lods
sahf
dec
ds
ret
movsb
cli
cmc
pop
pop
in
ret
les
pop
sbb
push
mov
sbb
faddl
jp
dec
enter
mov
sub
jno
aas
stos
stc
les
rcrl
sbb
fsubrl
jecxz
xchg
out
je
stc
mov
iret
mov
sbb
test
jnp
or
les
loope
push
mov
js
int3
test
hlt
cli
repnz
ja
pop
pop
jb
ret
orb
mov
mov
int
jle
outsb
lods
xor
sbb
jmp
nop
cld
mov
and
jp
mov
iret
jbe
icebp
cmp
or
shll
inc
test
std
in
ss
lods
add
movmskps
jge
jbe
xchg
inc
pop
mov
out
jmp
in
push
out
inc
mov
inc
hlt
icebp
mov
adc
ja
hlt
pusha
mov
fdivl
call
rcll
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
sbb
out
mov
jge
jo
add
es
cmp
adc
xchg
sahf
inc
fldt
cmp
negl
shl
je
daa
stc
shrl
mov
out
daa
inc
cmpsl
sub
cmp
mov
daa
jne
mov
ss
test
sub
jp
ja
sbb
sbb
repnz
imul
mov
xor
cmp
out
lods
adc
data16
add
clc
fdivrl
int3
sub
mov
pushf
fs
lods
pop
out
xor
add
popa
test
nop
push
cmpsb
fld
and
mov
add
leave
inc
dec
pop
xor
imul
xor
in
shrl
movsl
ds
repnz
xor
mul
push
xchg
adc
stc
mov
inc
inc
sahf
push
adc
das
sub
or
pusha
jbe
ja
sbb
repz
test
mov
lock
push
inc
jb
repnz
movsl
int3
dec
fnstcw
loopne
daa
jp
inc
push
in
mov
aad
stos
jnp
rcl
xor
cmpsb
imul
adc
lods
test
in
lock
push
shlb
rcll
ret
pmulhw
pop
dec
or
or
mov
loopne
xor
call
jge,pt
sub
sub
les
popa
pop
xor
adc
call
shll
mov
adc
add
fidivrl
loop
sbb
sub
xchg
lds
mov
lret
pop
pop
arpl
jle
scas
nop
push
or
popa
aad
arpl
sbb
ret
add
sahf
push
cmpsb
mov
in
out
notl
sub
xchg
and
test
dec
cmc
mov
push
mov
inc
stc
popl
fwait
jae
xor
push
insb
cmp
adc
clc
adc
mov
push
data16
xchg
cmp
sti
lods
mov
std
adc
push
sbb
scas
fnstsw
out
insl
mov
movsl
jg
shlb
xor
fcomip
out
sub
add
cmp
adc
jmp
adc
fs
cli
mov
adc
sub
add
mov
dec
pop
pop
add
gs
mov
push
jnp
cmp
test
cmp
sub
cmp
xor
fistpl
pop
ljmp
mov
stc
leave
mov
pop
mulb
sbb
test
add
inc
hlt
sub
and
in
inc
mov
add
mov
sub
dec
in
shrl
std
add
cmovns
jbe
fadds
push
int3
in
mov
lcall
mov
mov
sub
adc
jle
and
pop
std
mov
or
sti
jp
push
jnp
jns
mov
dec
cmc
nop
cmp
outsl
mov
push
ss
push
stos
xchg
cwtl
hlt
addr16
push
mov
push
add
movsl
adc
cld
mov
cmp
lcall
xchg
mov
cmc
pop
or
add
inc
add
push
add
sbb
mov
dec
and
dec
sbb
das
neg
mov
leave
lods
inc
sahf
test
mov
pop
mov
shll
mov
popa
jnp
and
add
inc
repnz
mov
jmp
cmp
mov
shrl
xchg
xchg
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
roll
fdivs
jo
sbb
xor
mov
in
xchg
fmull
jmp
sahf
gs
icebp
pop
mov
sub
addb
xor
dec
loopew
pop
sub
add
out
addr16
imul
scas
or
aas
mov
stos
cltd
xlat
cltd
in
push
lds
shrb
sbb
xor
xor
fistpll
insb
testl
std
inc
mov
aas
jg
adc
xor
insb
sub
imul
mov
cmpsl
push
mov
inc
rdmsr
sarl
push
push
outsl
sub
xchg
add
mov
incl
jmp
adcb
shlb
insl
pop
imul
xchg
jle
pop
movsl
adc
mov
adc
lods
aad
jl
mov
mov
bound
push
push
xchg
insl
inc
xchg
sbb
test
add
sar
fwait
idiv
rol
ja
adc
dec
cli
xchg
mov
mov
inc
das
jmp
andl
pop
test
push
and
add
icebp
jmp
cmp
mov
je
or
sub
rclb
fwait
xchg
les
push
stos
adc
mov
lods
into
test
and
fwait
mov
jg
negb
imul
pop
jge
aaa
outsb
insb
mov
push
mov
push
outsb
dec
push
out
ljmp
push
repz
and
movsl
test
dec
or
sahf
push
mov
scas
in
jp
add
inc
pop
cmp
test
imul
lock
pop
adc
data16
inc
pop
sbb
mov
jmp
mov
out
test
popf
or
lock
sbb
mov
sbb
pop
xchg
sbb
shlb
lret
pop
rcrb
sbb
and
ds
and
ljmp
leave
gs
in
fildll
and
fisubrl
pop
das
push
mov
mov
xor
lret
insb
fld
aas
ret
in
dec
add
sahf
push
gs
mov
arpl
lock
jne
push
bound
in
pop
or
inc
leave
pop
push
xorb
mov
orl
outsb
aad
dec
push
nop
push
lods
rorb
and
push
dec
jg
fsubr
popa
lods
jo
mov
jne
xor
mov
pop
adc
dec
adc
out
cmp
xorb
movsb
loop
mov
pop
mov
lods
bound
lods
sti
mov
or
cmp
out
mov
pushf
xor
scas
push
fbstp
insl
add
inc
into
cmpsl
mov
aam
fldcw
push
repz
sub
repz
out
jecxz
outsl
jns
test
inc
ss
stos
clc
das
xchg
sbb
mov
pop
lods
fldcw
mov
lcall
jb
cmpsl
push
mov
dec
cs
jae,pn
clc
jo
push
in
mov
mov
inc
jbe
pop
shll
sti
mov
loop
loop
repz
dec
mul
push
or
cmc
or
rorb
aad
testb
fdivs
pushf
cmp
iret
xor
pusha
add
inc
sarl
loop
pop
pop
mov
add
fnstenv
inc
sbb
adc
cmp
cmp
xor
sbb
insl
fisttpl
xchg
cwtl
jae
orb
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
into
clc
xchg
jns
mov
jo
jge
jo
lahf
jo
into
mov
cs
test
stos
cmp
sti
xchg
push
add
dec
gs
dec
jae
int3
mov
inc
mov
jnp
inc
mov
or
iret
push
jl
int
add
push
pop
inc
dec
inc
mov
orl
iret
scas
popa
mov
stc
loope
daa
add
xchg
adc
xchg
cmp
mov
ljmp
dec
mov
test
jno
xlat
aam
ljmp
stos
mov
push
or
inc
cwtl
lret
inc
add
scas
xchg
jge
ds
icebp
lahf
sub
into
int
add
pusha
sarb
mov
les
jge
dec
mov
xchg
push
and
ror
push
mov
cmp
daa
lcall
gs
pop
push
in
inc
push
adc
inc
call
ljmp
xchg
add
decl
in
mov
pop
nop
dec
push
sti
jle
repnz
pop
xchg
mov
fmuls
leave
mov
repnz
mov
enter
pop
outsl
fstp
mov
sub
in
adc
call
popf
stos
inc
xchg
mov
sbb
mov
jno
es
arpl
pusha
ret
sahf
das
aas
push
sbb
addr16
add
stc
cli
mov
mov
xchg
test
push
cwtl
addl
jecxz
mov
mov
xorl
dec
jbe
adc
stos
out
push
add
lods
push
pop
push
int
mov
rclb
sub
push
push
jmp
add
xchg
add
lock
sub
cli
sub
movsb
es
adcb
xor
test
push
into
int3
clc
mov
insb
imul
insl
add
jmp
js
lods
repnz
in
push
lahf
lret
cmpsb
fisubrl
cvtps2pd
movsl
mov
and
ret
and
cmp
jmp
pop
adc
push
pop
sub
dec
stos
push
adc
mov
sti
clc
pop
mov
pop
dec
addr16
inc
jge
push
inc
sbb
or
xlat
cli
push
dec
sub
lock
imul
ja
jno
sti
shlb
jecxz
insl
pop
and
cmp
pop
lret
jns
sbb
cmp
push
pop
or
cmp
pop
xchg
in
nop
cld
fldenv
push
loope
decl
sarb
mov
mov
sti
push
int
mov
jnp
daa
mov
sub
mov
jmp
cmp
sbb
inc
mov
pop
loope
cmp
mov
rcrl
aaa
xor
mov
add
pop
dec
clc
jmp
js
adc
popf
mov
and
or
mov
push
cli
in
xor
in
push
imull
ja
inc
in
adc
rcrl
add
stos
push
das
and
jne
scas
sub
scas
mov
pop
loop
push
je
push
push
xlat
mov
dec
jp
stc
fldt
push
jo
mov
mov
mov
inc
scas
loope
cmc
lcall
mov
push
mov
shrl
cmc
test
ficomps
jmp
dec
push
sub
scas
hlt
lea
xor
pushf
sbb
out
dec
sub
sub
out
scas
not
popa
xchg
mov
stos
inc
cmp
cmp
int
lret
push
clc
mov
iret
test
test
jne
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
test
jo
dec
jge
jo
mov
movsl
mov
adc
mov
in
in
jbe
mov
fbld
enter
mov
add
lret
mov
sbb
fsubrs
jae
rclb
sub
sbb
test
lret
in
pop
xchg
jno
dec
das
rcl
lods
add
out
push
psubsw
addl
daa
inc
xchg
add
sbb
cmp
fisubl
pop
push
or
jl
daa
rcl
or
imul
fstpl
lods
int3
insl
je
lret
dec
jno
push
push
lods
rcrl
adc
push
xor
fdivr
ret
xor
subl
insl
or
mov
int3
cli
xchg
popf
das
fisubrs
lahf
cmc
pop
adc
leave
inc
pop
lret
push
adc
xchg
pop
outsl
notb
rclb
mov
aam
aad
xor
adc
gs
mov
and
push
mov
adc
xchg
ret
scas
sbb
fs
cld
mov
seto
insl
jbe
xchg
and
pop
into
jno
iret
out
xor
add
mov
pop
popf
dec
cs
push
scas
sub
test
les
in
aad
xor
add
cmp
adc
jg
inc
imul
in
push
lea
ds
add
inc
xchg
lret
cmp
add
ret
and
pusha
mov
pop
lods
aad
add
fmul
fimull
adc
cmp
sub
jp
pop
popa
inc
dec
in
iret
add
dec
or
fdivr
mov
mov
add
sub
mov
lds
cmp
xor
pop
test
fsubs
cli
dec
cwtl
incl
sbb
in
sub
sub
bnd
cmp
imul
cmpsl
notl
shl
cmp
fcmovnbe
sahf
shll
sarb
mov
insb
sbb
repnz
mov
les
push
scas
sbb
adc
inc
and
jg
inc
out
xlat
inc
sub
les
inc
dec
lcall
add
in
roll
adc
lahf
cmpb
xor
not
jp
sub
loope
and
xor
test
pop
stos
fs
cli
mov
mov
inc
test
ss
adc
js
xor
lcall
xchg
mov
loop
sub
push
xor
or
xchg
mov
shrb
adc
lret
fdiv
mov
sbb
add
pop
fiadds
clc
sbb
cmpl
pop
push
adc
mov
inc
idivb
dec
fcomi
cmp
sub
sar
fsubrs
xor
mov
jmp
pushf
lcall
fs
imul
imul
push
push
sbb
push
mov
mov
ljmp
hlt
adc
out
fcompl
jo
frstor
mov
clc
jle
sub
lahf
aaa
add
xchg
lret
stos
loop
das
out
insb
jnp
fstpl
sarb
iret
rolb
or
pop
dec
adc
xor
adc
xchg
cmp
mov
dec
sub
or
jb
inc
shr
sub
stc
aam
or
sub
push
fwait
leave
pop
mov
pop
add
push
ds
add
into
repz
mov
into
out
cmp
aad
or
mov
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
push
mov
jo
jge
jo
mov
mov
dec
popa
in
ja
or
ret
pop
xor
dec
idivb
mov
jle
mov
and
push
lahf
shl
jnp
fisttpll
insl
jp
ffreep
fistl
loope
ficomps
jmp
and
mov
leave
clc
xor
dec
or
sbbl
dec
jl
psrad
jmp
shlb
lods
xchg
mov
dec
fcmovb
pop
push
and
push
and
jae
movsb
aaa
pusha
into
ljmp
mov
ret
insb
jns
mov
jmp
lahf
sbb
inc
cmp
cltd
dec
aaa
loop
outsb
xchg
mov
mov
mov
mov
add
sub
ljmp
push
sub
sub
and
or
sbb
inc
cmp
or
mov
clc
adc
aad
int3
push
jne
mov
inc
stos
xor
cmp
add
cmp
mov
out
das
loope
fildl
jo
loopne
outsb
sbb
xchg
fdivs
mov
push
jno
push
rclb
aam
int
hlt
jne
outsl
xchg
in
pop
xchg
dec
sahf
fildl
repnz
jle
and
out
jmp
xchg
jge
xor
jl
and
sub
or
test
pop
xchg
mov
lock
sbb
cld
sbb
sub
notl
insl
daa
push
adc
xor
mov
jno
mov
xchg
mov
sub
push
mov
xchg
push
scas
icebp
imul
cltd
adc
inc
inc
pop
clc
das
jle
addr16
fldl
mov
out
push
test
sarb
out
fnsave
test
sbbl
add
or
xlat
loopne
mov
stos
adc
jns
fldcw
fcomi
fcmovnbe
mov
in
mov
mov
movl
jno
or
pusha
repz
inc
insl
insl
jl
sbb
test
xor
mov
test
sahf
and
add
ja
cmpsl
jbe
out
add
xchg
pop
outsl
xchg
cmp
cmp
call
test
rclb
sbb
insb
xor
cltd
loop
cmpsl
bound
aam
pop
fiaddl
dec
lret
inc
stos
aas
mov
aam
push
ds
mov
jl
mov
jno
movsb
aas
mov
jmp
pushf
in
push
jmp
sbb
fcomp
into
int
lret
xchg
inc
stos
xchg
rcrb
mov
mov
cld
xor
xchg
push
push
sbb
push
inc
dec
jbe
jg
inc
stos
mov
inc
push
pop
mov
movsl
into
mov
mov
pusha
jbe
sub
cmpsl
and
aam
daa
cmpsl
fsts
arpl
pusha
cmp
jae
imul
cmp
nop
adc
inc
int
jbe
fcoml
inc
xchg
cmp
sub
pop
jl
jne
rcrb
inc
sbb
aaa
sar
xchg
rcrb
pop
popa
mov
icebp
and
in
imul
orb
sbb
mov
mov
in
mov
xor
faddl
dec
mov
rorb
adc
push
push
xor
aad
loopne
push
pusha
xor
mov
xor
cmp
push
jmp
test
dec
subb
pop
loopne
ljmp
shll
xor
or
out
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
outsl
pop
leave
cmp
lock
pop
dec
jne
je
inc
shr
cmp
lods
mov
jmp
insb
jle
stc
push
or
jge
jg
sbb
jl
aam
cmp
pop
add
sbb
aas
lods
sbbl
add
xorb
sub
and
fs
outsb
pop
imul
or
sbb
jecxz
add
stc
sbb
ss
lret
push
or
mov
imul
xor
jmp
pop
stc
dec
ret
xchg
fstpl
lea
mov
imul
mov
fisttpll
das
pop
push
sti
sbb
aaa
mov
stos
push
icebp
lods
negl
push
js
fisubl
sbb
popa
mov
outsb
and
push
lds
test
addr16
nop
and
dec
jge
aam
dec
mov
cwtl
xor
rcrb
cli
gs
push
push
push
xor
pop
leave
jl
sbb
stos
aad
jp
jbe
mov
add
test
movsb
inc
movsb
rcrl
xorl
add
xor
push
adc
mov
mov
ja
enter
xor
daa
fsubl
mov
push
or
push
dec
xor
pop
repnz
pop
rcrb
jns
mov
aaa
or
sub
or
aam
test
jecxz
dec
out
insb
sub
or
stos
ret
push
xchg
stos
mov
aaa
out
dec
and
sub
add
pop
imul
call
sar
sub
subb
jns
in
sbb
fsubrp
aad
out
movsb
outsb
sar
lods
mov
jle
sub
push
lods
mov
les
cs
sbb
dec
and
mov
cmp
gs
push
mov
cmp
dec
adc
in
add
test
pop
push
pop
adc
mov
cmp
rcll
adc
out
mov
shlb
jnp
pop
lcall
pop
ret
out
popf
idivb
daa
jnp
arpl
xchg
add
mov
add
push
mov
cvtdq2ps
jbe,pt
insb
cmp
xchg
push
out
xchg
sarl
sbb
inc
pop
xor
or
add
and
xchg
mov
js
aaa
fs
lods
jl
jno
mov
and
leave
fwait
push
sub
pop
push
fidivrl
aas
cmp
cmp
cmp
rorb
mov
sub
push
cmp
mov
nop
adcl
dec
mov
xchg
rclb
cmpsl
je
scas
popa
xor
into
shrl
lahf
cmp
fwait
outsl
in
fadd
fnstcw
mov
mov
jno
js
push
add
orl
cmp
sub
loope
mov
mov
inc
xor
pushf
loop
sub
add
jnp
push
pushf
std
int3
ret
pop
push
loopne
adc
xchg
cld
push
lcall
sbb
push
iret
adc
sub
ret
mov
test
and
test
dec
sbb
out
fisubl
setge
test
jbe
inc
jg
sbb
xor
xor
lods
data16
pushf
out
mov
stos
int3
inc
pop
cmp
popa
movl
pop
hlt
sbb
adc
mov
movsl
and
adc
and
mov
addr16
fisttpl
and
inc
test
mov
and
sbb
jl
push
insb
in
imul
pop
js
repnz
bound
aaa
sub
rorl
add
call
add
jae
roll
adc
mov
jge
jo
sbb
and
xchg
mov
scas
xlat
call
pop
lods
sarl
popa
dec
cmp
scas
inc
push
ret
cli
or
sbb
jnp
fnstenv
and
cmp
out
cli
bound
out
mov
xchg
in
push
xor
fistpl
popf
icebp
jg
push
sub
pop
cs
add
dec
test
imul
push
xchg
cmp
imul
aad
push
imul
lcall
add
sub
aam
adc
xchg
orb
pop
adc
and
out
lret
jle
inc
sbb
xor
mov
inc
sub
and
jmp
test
dec
out
inc
stc
push
mov
lock
pop
adc
aaa
das
pop
popa
and
gs
push
pop
inc
dec
cld
sahf
pop
jno
in
fiaddl
out
int
mov
pop
ficompl
push
push
cmc
lods
sbb
test
sbb
cmc
insl
xchg
imul
pop
aam
mov
jae
pop
xrelease
inc
pop
xchg
icebp
enter
loopne
pop
mov
add
adc
adc
cld
pop
cmp
ret
xchg
pop
mov
arpl
shl
xor
insl
mov
cmpsl
into
sbb
popf
add
sbb
cvtdq2ps
icebp
cmp
cmpb
pop
xchg
add
dec
ss
inc
inc
fst
xchg
mov
xchg
and
subb
mov
push
cmp
arpl
push
daa
cmc
pop
sub
cmp
inc
inc
int
lds
sub
mov
pop
jo
jmp
sbb
out
and
dec
mov
pusha
xor
mov
add
mov
scas
out
push
cmp
sti
shr
aas
sub
mov
add
mov
call
and
dec
and
es
stos
push
dec
and
leave
xorl
daa
xor
or
mov
cmp
sbb
push
cmc
push
dec
dec
jb
push
in
pop
mov
inc
into
rcr
mov
or
inc
sub
pop
lcall
jo
arpl
inc
cltd
fsubrl
shll
pop
mov
sub
insl
pop
sub
rorl
arpl
inc
shrl
movsl
inc
adc
shl
ljmp
sbb
mov
into
mov
mov
jns
xchg
inc
popf
adc
mov
and
lods
pop
outsb
pop
pop
or
insl
in
repnz
pop
inc
inc
push
adc
push
in
mov
xchg
mov
xor
sub
add
jp
fsubrs
jae
es
addl
into
xchg
addr16
or
sbb
xor
sbb
loope
and
jmp
test
or
cmc
dec
xchg
movsb
pop
xchg
lds
jbe
jns
addl
icebp
ss
xor
jno
inc
lds
push
sbb
xlat
pop
sbb
xchg
push
outsb
push
mov
fs
pop
nop
sbb
mov
and
hlt
imul
and
dec
insl
jecxz
dec
test
sbb
sahf
or
call
mov
cmp
add
sbb
fstpt
scas
mov
push
or
sbb
pop
ret
popf
jp
arpl
mov
mov
repnz
fidivl
bnd
hlt
addr16
shll
loopne
dec
scas
rcr
sahf
mov
repz
aam
sbb
adc
pop
sub
out
adc
sbb
pop
jnp
cmpsl
mov
dec
or
push
adc
roll
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
inc
jo
dec
jge
jo
into
pop
push
mov
cmpb
sbb
nop
scas
sbb
and
adc
push
xchg
movsb
and
cmp
mov
or
xlat
jle
sbb
cld
insl
dec
mov
jmp
fwait
rorl
or
jmp
jae
insl
lcall
mov
fstps
iret
addr16
ja
pop
cli
lcall
mov
cmpb
std
je
stos
cmc
les
cmp
jnp
pop
cli
lea
addr16
sbb
mov
and
or
xor
pop
inc
sub
mov
inc
cltd
dec
pop
mov
in
dec
inc
pop
fidivl
les
mov
jns
shrl
push
test
cs
pop
popa
ja
test
push
lcall
adc
adc
hlt
sbb
jl
lock
or
ja
inc
mov
sub
sbb
pop
xor
sbbb
dec
adc
lods
mov
das
sar
std
push
push
or
call
push
cmp
or
mov
mov
aas
fbld
lahf
sahf
je
and
jae
out
jb
enter
shll
jne
imull
jecxz
repnz
mov
ja
push
icebp
aaa
sub
je
mov
ljmp
pop
testb
xchg
enter
adc
sar
aaa
dec
jmp
sti
addr16
xchg
repnz
roll
shlb
dec
aam
out
scas
push
int
cmpsb
sbbl
sub
in
mov
jno
mov
repz
push
jge
icebp
jp
repnz
inc
mov
in
mov
sub
jle
push
aam
ret
xchg
shll
xor
mov
aad
in
jns
daa
inc
fcoms
repnz
sbb
addr16
das
fiadds
pusha
dec
mov
adc
arpl
dec
popf
mov
ret
add
ja
dec
orl
iret
outsb
icebp
dec
mov
adc
addr16
mov
jne
push
leave
cmp
inc
leave
or
push
and
sbb
dec
mov
cmpsl
pop
sbb
xor
movsl
or
and
jae
in
rcrl
mov
loopne
pop
cmp
dec
push
ret
adc
cmp
cli
out
arpl
mov
inc
sbb
and
push
mov
mov
mov
jmp
lahf
sub
jl
pop
lds
sub
jg
call
jle
lea
rclb
addr16
mov
popf
mov
cmp
sbb
sub
dec
imul
stos
mov
repnz
fadds
cltd
xor
rolb
dec
ds
dec
ds
push
jo
mov
xchg
mov
ds
push
out
in
add
add
out
sub
sub
mov
imulb
dec
sbb
xor
nop
xor
sbb
or
outsl
stos
sti
sub
lock
mov
push
jge
pusha
pop
movsb
jno
jnp
adc
movsl
into
in
sub
gs
ret
mov
mov
je
inc
jns
push
adc
jmp
inc
jno
inc
mov
flds
xor
mov
sbbb
push
dec
push
addr16
sti
dec
in
aam
dec
pop
jae
dec
mov
push
mov
jo
sahf
stc
fnstsw
dec
push
mov
ss
inc
addr16
jo
mov
jnp
pop
xchg
push
xor
mov
xor
sub
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
data16
dec
jo
dec
jge
jo
xlat
movsl
xor
fsubs
lea
mov
pop
aas
lock
adc
rcll
iret
pop
mov
xorb
cmc
dec
clc
ss
fdivrp
adc
adc
jbe
add
xor
push
mov
mov
mov
cmp
popf
andl
mov
cmpsl
jp
insb
jle
cs
mov
cmp
pop
fsubp
sbb
xchg
dec
sub
ja
lret
mov
jbe
xor
jnp
fstpl
jno
pop
or
xchg
or
fimuls
sub
inc
fmuls
pop
je
arpl
test
test
faddl
imul
mov
and
lods
adc
adc
imul
push
int3
mulb
cmpsb
mov
xchg
cs
or
popa
pusha
xor
sub
loop
xchg
out
push
jg
cltd
add
sub
or
sbb
inc
js
cmp
jmp
cmovo
push
sub
ljmp
pop
inc
inc
fwait
push
clc
xchg
push
inc
jl
lea
outsl
sub
or
or
xchg
leave
inc
push
inc
add
jo
add
pusha
dec
jo
push
xchg
test
mov
sub
jo
mov
aad
cld
add
enter
repnz
roll
or
gs
fidivrl
inc
in
jg
jo
and
xor
sub
xchg
mov
lret
push
push
mov
out
pop
mov
xor
mov
in
pop
xlat
lret
fldcw
clc
imul
mov
push
inc
inc
js
popf
fiadds
cmpsl
imul
ret
insl
push
nop
jmp
pop
leave
or
or
ja
sti
ret
sub
sti
xor
incb
and
pushf
mov
stos
or
cmpsl
add
mov
mov
push
out
cs
mov
rorl
adc
pop
scas
push
addl
jge
scas
stos
mov
hlt
rcrl
das
in
mov
roll
imul
push
pop
mov
add
mov
or
ss
mov
push
and
pop
aam
daa
test
aad
rclb
cmp
cltd
and
or
in
loop
cmp
sub
ror
adc
loopne
fidivl
fcmovb
jmp
add
repz
jmp
bound
sbb
push
jle
or
fidivs
mov
jb
les
mov
adc
dec
jbe
xchg
loop
sbb
mov
mov
mov
iret
and
test
mov
sbb
imul
jae
jb
ss
sahf
pop
aam
mov
ja
mov
jle
jno
mov
xchg
sbb
jecxz
outsl
das
fwait
inc
pop
sbb
sbb
mov
dec
mov
loop
push
enter
sub
fsubp
fcmovbe
ja
jno
arpl
or
sub
cmpsl
xchg
xchg
inc
icebp
rcll
ret
test
mov
cmp
in
data16
inc
data16
test
pop
push
dec
mov
push
ror
rolb
clc
jbe
test
inc
popf
xchg
aas
clc
lods
lock
xor
jl
mov
jbe
adc
cmpsb
mov
add
outsl
sti
addr16
jae
lock
pusha
sub
out
push
mov
push
cmp
sub
sti
xor
add
fildl
lret
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
dec
rolb
dec
jo
dec
jge
jo
mov
jnp
and
xlat
sub
mov
sbb
inc
sub
push
inc
ja
stc
imull
movsb
adcb
arpl
imul
loopne
fistps
in
cmp
push
jb
flds
mov
jae
jmp
pop
mov
xor
shl
pop
das
mov
fsts
lret
sbb
cmp
mov
adc
inc
das
dec
adc
out
push
xchg
repz
in
xchg
or
cmp
sub
fcomip
lret
mov
mov
sub
loope
xor
imul
bound
adc
mov
leave
jge
jmp
adc
ja
inc
pop
or
mov
adc
cltd
stc
rcrl
mov
cmp
sbb
in
mov
adc
shrb
clc
lock
ds
js
clc
dec
mov
std
pop
cmp
xchg
dec
jle
repnz
fnstcw
jb
pop
pop
dec
movzbl
mov
pushf
les
and
and
in
outsb
popa
es
and
and
lods
or
dec
loop
xor
iret
mov
add
mov
xlat
std
xchg
fstpl
push
inc
divb
das
add
sbb
clc
mov
fildll
mov
popf
pop
mov
adc
lds
fistpl
jnp
mov
clc
mov
loopne
es
pop
ja
imul
inc
add
add
lods
adc
jns
adc
fistl
insl
out
out
xchg
mov
inc
xor
cmp
add
test
out
sub
clc
hlt
sbb
outsl
out
imul
ja
loopne
jl
mov
int3
mov
fsubrl
in
and
fwait
push
push
repnz
cmp
mov
scas
out
cmp
cwtl
stos
ret
push
filds
push
sbbl
and
push
mov
daa
jecxz
push
imul
bound
mov
dec
lret
inc
fwait
sbb
daa
inc
adc
fnstenv
movsl
push
clc
cmp
clc
cltd
cmp
adc
jo
pop
jmp
inc
sti
mov
shll
mov
jbe
sub
daa
adc
or
mov
adc
scas
hlt
pop
call
inc
movsl
pop
loope
or
imul
lahf
push
jb
cmp
jne
add
in
div
cmpb
ljmp
add
adc
insl
pusha
dec
sbb
xchg
lock
imulb
out
ljmp
sti
pop
ja
in
xchg
data16
pop
fsubrl
andb
mov
pop
shlb
inc
pand
and
movsl
sbb
fndisi(8087
adc
pusha
jo
push
hlt
sbb
sbb
xor
sub
dec
call
push
icebp
lret
jecxz
pop
dec
arpl
push
sbbb
xor
das
shr
push
and
mov
mov
imul
xor
ja
aad
dec
sbb
jbe
sbb
dec
mov
xchg
fcmovnb
xor
push
pushf
lahf
cli
jp
mov
aad
dec
push
xor
mov
xor
pop
cltd
shl
in
inc
inc
aam
out
outsb
test
xchg
pop
mov
sbb
xlat
push
sub
adc
sti
cltd
sub
add
fcmovnu
cmp
sbbb
cmp
inc
ja
loope
rorl
mov
pop
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
