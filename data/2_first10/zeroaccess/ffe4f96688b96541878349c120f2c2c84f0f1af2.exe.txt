push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
icebp
out
inc
je
jp
jp
pop
jp
and
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
test
fld
or
dec
mov
jl
filds
adc
mov
mov
dec
dec
in
bound
jae
mov
dec
lock
dec
dec
mov
inc
add
pop
jg
cmc
fwait
push
cwtl
testb
out
sti
dec
xor
bound
mov
out
xchg
push
push
push
mov
mov
and
mov
imul
std
sbb
mov
push
loop
data16
setae
pusha
test
gs
push
pop
sbb
lds
xchg
push
popa
cmp
jno
sahf
icebp
mov
lahf
jg
sub
or
repnz
ds
mov
orb
mov
test
add
pop
cmp
jmp
mov
jg
push
shl
jae
xor
test
stos
mov
out
fwait
xlat
add
imul
ret
mov
loop
loopne
sub
sub
popa
mov
test
aad
add
pop
push
insb
loope
fwait
push
adc
xor
jno
int3
or
adc
mov
sahf
mov
popa
lds
jnp
inc
fists
or
mov
push
jle
sub
jb
fs
jae
xchg
jp
push
xchg
jne
scas
xlat
cmp
movsb
rorb
sbb
out
jnp
push
dec
xor
fidivrs
aam
arpl
nop
insl
xchg
dec
ret
xchg
push
ss
and
push
movsl
test
stos
movsb
cmovge
xchg
lret
shlb
ss
gs
dec
mov
pop
xchg
mov
lea
fs
in
add
cmpsb
and
mov
call
mov
mov
cld
add
add
out
or
les
dec
fcmovnu
gs
dec
mov
das
scas
fs
jge
push
mov
out
testl
ss
mov
iret
add
xchg
pop
imul
mov
fs
jns
test
cld
lret
add
xchg
push
xlat
lret
gs
jle
cli
fmull
lret
int3
push
mov
mov
lcall
xchg
pop
pusha
jg
pop
cs
inc
cmp
test
pop
push
mov
push
ficoms
xchg
movsl
ret
adc
fists
or
jecxz
xchg
xchg
in
mov
idiv
xor
movsl
xor
lahf
mov
push
push
xchg
mov
sti
push
pop
faddl
jg
dec
sub
sub
mov
and
pop
adc
adc
ljmp
mov
xor
dec
subb
pop
sbb
cmp
ljmp
add
mov
sbb
es
mov
loope
add
mov
xchg
sbb
adc
enter
ja
fiadds
jle
pop
scas
or
xor
push
insl
fistpll
test
adc
and
jle
dec
dec
jecxz
sbb
xor
or
cmpsl
pop
dec
jl
scas
sbb
and
xchg
test
jg
rcr
pop
inc
mov
xchg
call
inc
cmpl
xor
je
shlb
mov
das
in
scas
mov
imul
repnz
cmc
test
pop
pop
cmp
or
mov
lea
lods
xor
out
call
push
add
pop
loop
add
mov
mov
xor
sbb
sub
xchg
lods
pop
orl
movl
adc
mov
leave
jnp
je
push
mul
dec
xchg
and
jnp
mov
loope
adcb
cmp
rol
jae
cmp
pop
enter
inc
cli
hlt
daa
jp
adc
jno
add
cmp
movsb
push
imul
add
adc
inc
test
mov
jo
sbb
jo
sarl
xchg
js
int
pop
mov
sub
insb
dec
lcall
mov
inc
mov
and
xor
adc
icebp
fisttpll
push
inc
out
test
fnsave
push
pop
dec
ljmp
push
pusha
fimull
xor
insl
ja
xchg
jl
lods
push
movsl
add
bound
js
xorb
cmpsb
jbe
and
xor
xor
or
sbb
shlb
push
cmc
or
outsb
sbb
jp
adc
sub
addr16
popf
xchg
dec
in
daa
pop
lds
sub
aas
fnstsw
jno
pop
dec
fwait
loopne
jp
dec
ljmp
push
hlt
aad
jp
jbe
or
mov
and
out
xor
cld
repz
push
adc
pop
or
push
fwait
movsb
pop
sarl
add
outsb
dec
adc
jbe
clc
in
scas
fbstp
mov
aam
shl
shl
fmul
cmc
ja
mov
lret
addb
adc
leave
mov
xchg
outsl
mov
mov
es
sbbl
xchg
sbb
jg
fstpt
pop
inc
test
ret
pop
ret
jmp
push
or
lock
imul
adc
pushl
xchg
jle
out
adcl
lret
out
sub
adc
pop
sub
js
fsubs
in
inc
cmp
mov
cmp
push
arpl
js
addb
mov
gs
xor
cmc
fwait
mov
js
loop
rorb
ds
mov
mov
gs
clc
and
jmp
pop
mov
cli
pop
loopne
push
int3
mov
mov
adc
adc
fs
pusha
sub
fs
out
incl
aam
nop
stc
pushf
adc
mov
add
add
movl
add
mov
pop
mov
adc
lock
pop
inc
lcall
rcl
dec
mov
sub
divb
sbb
xor
sub
int
inc
xor
dec
add
xchg
inc
cld
insl
push
adc
lret
gs
add
loop
dec
jle
and
mov
int3
roll
xacquire
pop
or
xchg
popf
popa
add
cwtl
jecxz
sub
mov
add
mov
mov
fs
mov
jae
dec
imul
gs
sub
lock
mov
cwtl
mov
je
out
iret
test
icebp
sub
dec
addb
sub
or
aas
imul
ja
mov
cmpsl
ja
xchg
test
movsb
push
pop
scas
dec
push
loop
jne
iret
cmp
aad
stos
pop
and
aam
lea
cmp
mov
mov
cmp
sbb
mov
bound
mov
dec
daa
js
nop
sub
addr16
push
out
frstor
push
sbb
rol
and
call
xor
adcb
shlb
les
daa
mov
cmpsb
lods
sbb
sbb
stos
decb
sti
add
rorb
stos
mov
mov
in
or
outsb
add
fmull
adc
lcall
fsubrp
add
enter
mov
shl
push
adc
test
mov
lea
adc
add
rcrb
pop
out
cmp
loopne
mov
mov
aaa
cmp
movsl
sbb
inc
sub
in
sbb
sub
bound
and
mov
lods
enter
xchg
and
add
clc
popl
mov
sti
dec
mov
jnp
rolb
pushf
data16
sub
out
push
les
or
inc
add
xchg
movsl
imul
cmpb
jb
xor
scas
test
jo
adc
pop
inc
and
fildll
mov
cwtl
cli
repnz
mov
mov
outsb
fldcw
xchg
cmp
adc
out
loop
jecxz
mov
inc
aas
les
xorl
in
or
jno
mov
xchg
es
add
jnp
sbb
rolb
push
movsb
xor
fwait
insb
adcl
aas
mov
hlt
pop
call
aas
pop
das
lahf
mov
pop
popa
shrl
and
mov
movsl
in
jmp
jae
rol
mov
dec
ss
mov
push
push
shrb
and
leave
dec
inc
lock
rcll
fstpt
ljmp
shr
inc
add
lea
mov
cmp
mov
xor
fistps
icebp
sub
cmp
pop
jmp
cmpsl
mov
mov
sbbl
test
call
out
xor
add
ret
jno
inc
mov
dec
inc
ja
push
lods
inc
sarl
and
dec
xchg
push
xchg
mov
or
in
ss
mov
data16
xor
addr16
fwait
mov
and
inc
jge
pop
cmp
mov
add
xchg
pop
rcrl
aam
arpl
dec
sahf
or
inc
clc
movsb
sbb
ljmp
add
mov
pop
rcll
int3
inc
scas
ret
pop
subl
arpl
imul
movsl
mov
mov
or
cmpsl
xchg
sti
mov
push
loopne
xor
mov
and
adc
inc
add
xor
pushf
inc
nop
mov
test
addr16
push
xchg
jae
jo
into
stc
lods
ret
or
xchg
ds
test
imull
lret
bound
cwtl
dec
dec
frstor
adc
mov
inc
ljmp
negl
mov
push
push
subl
test
scas
fistps
lcall
adc
mov
repnz
loope
sub
mov
fisttpll
mov
adc
cmc
imul
rorl
popf
in
dec
pop
add
not
adc
repz
mov
ja
push
or
in
call
adc
xchg
inc
arpl
mov
jae
inc
stc
xchg
or
fdivp
test
xchg
adc
out
cmp
lcall
xchg
adc
jl
fcmovb
test
adc
loop
xchg
push
and
jle
les
sub
mov
cltd
out
into
lret
loope
xor
add
jmp
jmp
mov
mov
faddl
in
sbb
es
push
jb
stos
adc
or
sub
inc
andl
xlat
fsts
lret
shl
je
rcrl
sbb
test
sti
inc
push
scas
shlb
inc
in
push
aas
adc
jnp
and
fistpll
das
jle
xchg
fistpll
and
mov
rorb
repz
xor
adc
sbb
arpl
je
lahf
jle
jo
xchg
adc
test
cmp
shlb
mov
xchg
inc
mov
out
ds
sahf
xchg
sub
adc
xlat
mov
in
dec
sub
es
sub
sbb
inc
mov
rcrl
mov
xor
cmp
rolb
ja
repz
xor
sub
loopne
ror
sti
dec
addl
leave
icebp
std
adc
sub
fists
nop
test
iret
push
sbb
daa
cmp
mov
into
add
movsl
sbb
mov
and
xlat
push
jno
or
jne
lahf
adcl
out
stc
mov
stc
mov
jne
loop
cmp
notl
push
fucomi
jbe
xor
stos
sbb
test
push
imul
stc
scas
cmpsb
pop
lock
fistps
sbb
cwtl
dec
pop
dec
enter
and
sbb
mov
out
jmp
inc
rolb
outsb
or
inc
leave
push
add
xchg
pop
lret
xchg
addr16
mov
mov
std
iretw
lods
dec
and
leave
ficoml
ret
pop
roll
mov
or
jge
cmc
testl
xor
jmp
pop
lds
mov
sahf
ror
fdivrp
and
push
insl
cwtl
xor
mov
call
pushf
xor
and
push
call
xor
out
jg
mov
sbb
push
xchg
out
ds
cwtl
in
and
dec
scas
pop
daa
mov
sbb
jp
push
lret
xchg
mov
inc
adc
jbe
mov
mov
dec
add
lds
xchg
stos
mov
or
mov
push
paddq
cmp
sbb
inc
mov
test
movsl
shll
sub
popa
insb
push
adc
ljmp
push
push
in
gs
sahf
idivb
ljmp
mov
mov
das
cmp
and
lods
push
mov
lds
or
js
and
cmp
mov
leave
int3
movsw
cmpsb
cs
filds
xchg
mov
sub
lret
mov
and
push
into
xlat
jecxz
fnstsw
and
push
adc
call
shll
scas
lds
inc
and
les
jg
pop
jg
lret
pop
insb
rcrb
or
push
mov
sbb
or
pop
pop
jae
cmc
adc
dec
test
jle
inc
xor
add
loop
cmpsl
sbb
out
push
or
xchg
mov
roll
and
movsl
loop
imull
arpl
inc
mov
repz
in
ds
push
push
mov
outsl
jge
lcall
andl
cmpl
int
mov
testl
inc
stos
dec
and
adcl
mov
xchg
jge
cmpsb
es
jge
sub
ret
in
dec
lods
jmp
mov
xchg
gs
push
dec
out
mov
push
jnp,pn
mov
flds
push
sarl
push
int
mov
pusha
or
jo
mov
lods
movsb
popf
sub
dec
out
jl
cmp
scas
callw
xchg
test
aas
loope
cwtl
sarb
stos
or
mov
ds
faddl
cmp
add
or
jo
sbb
push
addb
stos
pop
call
sbb
popa
or
sub
js
mov
sarl
out
stc
int
cmpsb
insb
sub
pop
addr16
rorl
imul
fistps
push
divb
cwtl
aas
lret
jl
popf
and
add
or
mov
loop
cli
mov
xor
cmp
sarb
movsl
cmpsb
jecxz
jmp
sahf
pop
js
xorb
xor
inc
outsl
outsb
js
and
mov
add
cld
dec
loope
addb
jl
orb
mov
dec
lahf
jne
ljmp
or
add
outsl
lret
mov
roll
mov
pushl
sbbl
pop
mov
sub
jo
xor
mov
loope
lods
sub
adc
enter
iret
aam
mov
ljmp
dec
stos
jnp
popa
pushf
sub
stc
movups
mov
cmp
stc
xor
pop
ficompl
pushf
cmp
adc
add
cmpsl
std
pop
daa
xchg
cmpsl
sub
insl
scas
dec
and
jle
pop
sbb
pop
cs
lock
mov
xchg
in
inc
add
pop
sbb
mov
jl
sbb
cmpsb
faddl
and
mov
xlat
out
mov
sbb
add
outsl
jno
push
inc
dec
mov
push
pop
fstl
das
dec
jnp
jb
dec
daa
ficoms
adc
cmp
popf
insb
or
and
movsb
lret
js
loope
mov
mov
iret
sahf
dec
xor
inc
push
jo
incl
add
xchg
adc
popa
and
inc
in
outsl
mov
add
test
and
push
call
ret
daa
and
add
data16
mov
fsts
pop
daa
push
loop
cmpsl
loop
sbb
push
fldcw
ret
sbb
andb
sub
stos
imul
ret
pop
add
aas
mov
mov
mov
add
arpl
or
pop
lock
hlt
arpl
mov
inc
out
call
inc
pop
mov
fiaddl
xchg
push
inc
out
das
adc
fsubl
movsb
frstor
sbb
sahf
dec
xor
mov
mov
mov
mov
and
data16
push
mov
in
xlat
and
xor
ds
mov
test
rol
cmp
inc
iret
testb
ror
jo
jno
cmp
jl
mov
orb
xor
test
push
jl
gs
ds
sbb
adc
xor
cmp
add
pop
nop
inc
dec
mov
push
rclb
push
mov
mov
push
add
outsl
das
fdivp
enter
jns
pop
mov
push
into
dec
pop
sub
lock
push
mov
in
rclb
inc
test
popa
sub
add
idivb
je
mov
icebp
call
ds
lahf
mov
test
lcall
dec
pop
test
push
xor
xchg
out
ss
xor
cli
sahf
push
mov
jnp
mov
inc
movsb
ja
mov
pop
sbb
inc
lea
sbb
int
mov
popf
scas
test
cmp
insb
jne
mov
insl
lret
adc
scas
add
fistps
mov
cmpsb
decl
or
lret
out
pop
inc
mov
push
adc
aad
insb
cmp
movsl
pop
dec
imul
movsb
fcoms
or
xchg
stos
sub
daa
pop
sbb
into
adc
mov
mov
call
xlat
cmp
repnz
out
push
jne
pop
adc
or
shrl
pop
lods
fsubr
ret
cmpsb
lods
cmpb
ja
outsb
jmp
sbb
pop
ja
lds
inc
add
mov
inc
movsl
jmp
lods
add
mov
cs
data16
cs
shll
or
cmpsb
push
jb
notb
xchg
stc
mov
adc
push
push
jge
cmc
iret
sub
xor
out
jbe
loop
pushf
insb
mov
inc
rcrb
push
pushf
lahf
out
push
add
dec
enter
call
movsb
aas
mov
pop
jg
mov
iret
insl
adc
pop
pop
fcmovnbe
xor
inc
cmc
lret
pop
cmpsb
ja
mov
jmp
sub
jle
cmpsl
cmp
mov
je
shl
and
push
mov
bound
fs
aas
icebp
pusha
inc
push
pop
cltd
mov
and
jmp
jmp
pop
mov
nop
cmp
mov
ds
push
popa
mov
mov
mov
xor
cmc
movsl
push
xchg
push
dec
insl
jmp
push
inc
cmp
xchg
fsubl
repz
inc
mov
in
adc
arpl
ss
push
out
jge
and
mov
push
dec
cmpsl
pop
popa
cli
pushl
lcall
imul
mov
hlt
lcall
daa
cmpsb
mov
bnd
mov
adc
movsb
or
nop
mov
movl
add
push
mov
dec
push
dec
lock
out
popf
xor
and
rclb
mov
ss
int
imul
dec
dec
cmp
test
repz
daa
shlb
addr16
popa
repz
push
xor
movd
loopne
hlt
lds
test
pop
test
inc
sbb
mov
push
and
out
push
out
adc
ret
test
pop
dec
pop
movsl
aas
sarb
push
push
cmp
jl
and
mov
push
push
jne
inc
pop
cmp
and
in
mov
dec
subl
push
loopne
push
inc
xchg
js
pop
scas
jl
inc
das
adc
pop
and
pop
ss
shrl
xor
loope
fwait
or
popf
jp
xlat
out
or
dec
aas
pop
xor
sbb
sub
adc
fidivrs
mov
icebp
fnstcw
gs
loope
mov
fsubrs
test
dec
sbb
mov
fsubs
mov
mov
jae
mov
xchg
xchg
je
or
repnz
push
xor
inc
xor
push
sarl
fs
fwait
gs
jge
xchg
mov
adc
mov
or
pop
add
sub
mov
les
sub
popf
push
mov
push
xchg
jae
insb
loop
mov
cmp
mov
fsubrl
ja
mov
sub
fistl
or
clc
xor
dec
mov
cli
call
mov
mov
cwtl
icebp
cltd
jmp
dec
xchg
sub
or
rcrl
inc
sbb
std
das
add
cwtl
in
adc
clc
pusha
push
stos
mulb
dec
je
push
mov
sbb
add
fcompl
or
cld
mov
fnstenv
rclb
mov
xchg
scas
and
xor
cmp
mov
in
cmc
fisttpll
push
into
fs
mov
mov
pop
loope
inc
and
xchg
jmp
aam
push
dec
mov
stos
mov
in
dec
imul
sarb
out
lahf
nop
cmp
and
sbb
or
rorl
data16
add
or
push
push
push
sub
outsb
jae
iret
xchg
inc
cmp
push
mov
jo
call
jmp
loop
inc
xor
cmp
int
jo
mov
xchg
push
adc
iret
lcall
ljmp
test
insb
insl
sub
and
inc
or
jnp
push
mov
and
sbb
mov
and
cltd
xchg
jmp
lcall
xlat
xchg
mov
or
push
pop
jmp
sbb
lcall
in
jp
sub
lcall
sti
rcrb
jecxz
xchg
jnp
dec
test
call
jne
or
cmp
xor
fwait
ret
test
xchg
mov
movb
push
adc
movsb
scas
mov
pop
imul
js
inc
aaa
cld
cmp
pop
mov
into
push
mov
loope
sbb
ret
sbb
dec
mov
jo
sbb
popa
repz
repz
adcb
aam
push
xor
lahf
cmpl
scas
add
imul
div
outsl
fistpll
push
or
jmp
dec
push
cmpsb
xchg
test
ds
and
or
sub
sub
mov
mov
jge
cld
lahf
icebp
addl
xor
sub
sbb
lock
sahf
mov
add
aad
bnd
jns
jl
fsubs
mov
shll
adc
adc
mov
xor
push
xchg
xlat
mov
sbb
gs
mov
jp
jnp
repnz
pop
out
cmp
xchg
cmp
push
sbb
jne
scas
jae
lds
mov
push
adc
out
xor
jnp
mov
add
or
fnstsw
or
sub
push
sub
lods
out
inc
sub
leave
add
test
dec
lock
stos
mov
xor
cld
jg
dec
sbb
pop
and
nop
inc
scas
or
adc
xchg
shlb
push
mov
xchg
mov
xlat
aaa
pop
into
sub
mov
dec
repnz
xchg
lods
sbb
iret
leave
loop
lods
shl
pop
mov
push
and
pop
dec
cmp
xor
mov
inc
mov
mov
pop
aaa
pop
push
movsb
sub
push
test
fwait
in
inc
aas
inc
mov
cltd
xchg
cmp
mov
push
lcall
add
mull
scas
in
or
adc
inc
push
int3
lods
xchg
sbb
out
aaa
daa
sbb
repnz
add
lods
nop
ljmp
loop
push
in
mov
aam
cmc
imul
and
and
outsl
icebp
in
sbb
loope
and
mov
in
sbb
xor
out
mov
je
aaa
fldenv
jmp
sub
int3
imul
lret
pop
mov
jp
jmp
jnp
daa
xchg
mov
sbb
add
fwait
mov
out
mov
xor
pop
lds
or
mov
sahf
cs
xlat
jbe
mov
out
add
cmp
fsts
pop
xchg
or
pop
xchg
in
push
aaa
inc
mov
or
mov
popa
dec
inc
or
std
mov
push
or
mov
in
pusha
dec
cmp
stos
jne
lods
arpl
test
sbb
insb
leave
aaa
call
mov
fwait
xorb
push
aaa
dec
xchg
dec
cli
movsb
jbe
sbb
lahf
xor
scas
xorl
stos
dec
xchg
inc
jno
sti
pop
mov
push
hlt
push
pop
cltd
adc
cli
pushf
push
ret
rclb
out
push
filds
in
dec
mov
in
mov
scas
addl
notb
pushf
imulb
fldcw
sti
jno
xor
test
lods
loopne
cmp
xchg
add
mov
add
insl
pushw
mov
mov
mov
pop
insb
jle
shrl
mov
popa
or
out
and
cmp
nop
sub
fldcw
xchg
into
sbb
cmp
out
rcrl
aas
jmp
repz
jge
add
push
inc
movsl
pop
and
popf
stos
call
mov
aam
xor
or
roll
mov
ljmp
pop
inc
roll
mov
fs
lds
ja
movsb
cmpsb
lahf
lret
hlt
imul
pop
pop
in
add
cwtl
add
lahf
xor
mov
adc
dec
mov
jae
push
lahf
das
ret
cld
out
es
pop
pushl
mov
push
lahf
fnstenv
loopne
lods
or
inc
add
and
mov
lock
xor
shlb
out
xchg
sbb
mov
inc
sub
xchg
lcall
das
jnp
and
into
xlat
mov
jmp
and
jmp
mov
pop
scas
adcb
movsb
mov
mov
pop
xor
scas
jnp
mov
adc
inc
sbb
sub
mov
mov
pushf
jne
mov
and
cs
clc
push
out
call
or
or
push
cmpsb
push
add
jge
inc
add
loopne
jns
cwtl
inc
cmc
mov
xchg
lds
in
jle
fdiv
cmp
enter
outsl
loop
aam
rorb
in
jns
rcll
mov
and
push
push
jge
inc
pop
add
dec
jecxz
mov
ss
jae
testl
test
mov
fwait
ss
ret
sbb
dec
jl
aas
inc
repz
adc
popf
into
inc
and
cmp
mov
and
or
call
or
mov
pop
and
lret
and
test
mov
popa
mov
paddusb
sub
inc
mov
dec
es
lcall
fwait
push
sbb
mov
pop
jno
pop
mov
ja
mov
insb
out
xchg
and
shlb
cmp
mov
mov
jl
int
sbb
stos
test
aaa
cmp
test
jne
fists
faddl
mov
fwait
ja
cltd
adc
pop
loopne
mov
pop
aad
fdiv
or
mov
jmp
mov
popa
cwtl
xchg
negl
xchg
inc
mov
fs
mov
fnclex
lods
dec
mov
pop
push
fildl
xor
outsl
movsb
mov
outsl
fidivl
test
sub
adc
dec
ret
sub
out
fcomps
pop
sbb
movsl
or
add
mov
leave
cltd
rcr
dec
mov
xchg
aad
sbb
dec
xor
cmpsl
fwait
sbb
cmp
pop
fdivrp
or
pop
and
out
movsl
jnp
sbb
xor
sarb
jns
ficompl
mov
cmc
mov
mov
dec
jl
push
outsb
pop
cmp
mov
push
or
mov
xchg
movsb
jle
adc
and
leave
cmp
xor
es
add
jp
cmpxchg
aam
sbb
test
repnz
aas
pop
sub
out
pop
bound
negl
aad
cmpsb
add
les
cld
mov
negl
icebp
xchg
or
xchg
out
ror
sbb
add
insl
into
cltd
repz
jae
pop
jne
jge
jns
inc
sahf
faddl
sahf
movsl
push
sub
loopne
ret
add
push
mov
mov
mov
cmc
jle
push
jbe
add
mov
push
pop
and
dec
jne
mov
mov
pop
cmp
mov
lds
in
mov
and
or
imul
xchg
mov
lods
add
push
stos
push
xchg
inc
jg
push
jp
pop
xor
dec
cmp
jge
xor
or
outsl
push
adc
es
push
cmpl
in
add
sbb
aam
incl
mov
mov
in
es
cmpsl
xchg
jmp
shrl
cld
and
pop
adc
fldcw
into
or
sbb
cld
dec
out
sbb
shrb
sbb
jnp
mov
xor
cmpl
test
push
ror
inc
jbe
out
in
iret
inc
jg
test
pop
mov
push
jmp
pushf
jae
cmp
cmpsl
call
outsl
jae
out
dec
cs
mov
sub
xchg
insl
pop
mov
inc
push
dec
insl
jge
mov
iret
mov
mov
mov
testl
and
adc
add
sub
xor
or
adc
mov
addb
cli
dec
pop
daa
or
outsl
lahf
and
out
xchg
icebp
mov
andl
loopne
jecxz
adc
aas
push
rcll
sbb
in
push
mov
mov
adc
lods
xlat
cmp
and
mov
jmp
push
addr16
je
sahf
mov
dec
sarl
add
in
insb
mov
insl
adcl
dec
mov
mov
or
fdivrl
jl
mov
adc
add
dec
mov
das
jg
adc
daa
jnp
pop
dec
xor
mov
cwtl
push
inc
pop
iret
push
pop
xchg
cltd
jb
cmp
ss
xor
add
mov
mov
inc
roll
shll
jp
test
mov
es
xor
lea
daa
aas
insl
dec
xchg
adc
scas
and
sbbl
lods
ds
or
cmpsb
insl
xchg
jg
fimull
inc
push
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
insb
daa
scas
aam
inc
out
cwtl
push
pop
pushl
mov
jmp
insl
mov
inc
cwtl
out
push
push
jne
and
and
mov
sbb
mov
lods
insl
jb
xorps
pushf
fwait
pusha
and
jno
xchg
mov
lds
jne
xchg
xor
mov
dec
lock
outsl
mov
dec
mov
push
jle
ss
pop
inc
scas
mov
rolb
mov
hlt
scas
jns
xor
cmpb
rcr
fists
testl
mov
dec
les
and
in
cmc
stc
lret
test
mov
add
cmpsl
and
clc
daa
cs
mov
mov
iret
cmc
adc
mov
inc
add
inc
bound
add
test
mov
jp
ret
repz
mov
xchg
xchg
lahf
pop
mov
repz
pop
sbb
nop
pop
fldcw
arpl
mov
je
mov
iret
incl
outsl
mov
mov
imul
and
cwtl
rcr
push
sbb
pushl
js
inc
dec
insb
stos
int
cmp
pusha
aad
je
imull
aas
insb
push
xor
cmc
fisttpl
js
int
push
call
pop
sub
jbe
ja
sub
pop
push
adc
sbb
sub
dec
aad
loopne
mov
popf
or
xor
rorb
jne
addb
adc
shl
arpl
addr16
cmp
subb
icebp
lret
cmp
dec
xor
enter
or
pushf
in
stc
fimull
push
addr16
jle
addr16
xchg
call
aaa
fadds
mov
hlt
adcl
push
ret
push
add
push
stos
mov
es
cs
cmp
jno
rcrb
gs
fcompl
push
and
mov
stos
imul
loop
imul
ror
nop
xchg
mov
gs
mov
push
mov
and
bound
sub
and
jae
aam
imul
js
push
movsb
mov
cmp
arpl
and
cmp
pop
sbb
outsl
clc
shl
mov
cmp
movsb
mov
xor
test
outsl
ljmp
ficompl
push
mov
or
mov
inc
or
push
push
cmp
outsb
xchg
mov
jmp
mov
mov
push
addl
xor
add
hlt
addr16
xor
hlt
lock
cmp
in
notb
cmpsb
mov
push
mov
outsl
mov
mov
xor
in
pop
dec
cwtl
ret
xor
dec
xchg
push
scas
cld
cmc
pop
xor
mov
push
sti
je
jnp
stos
cmp
xchg
icebp
int
stos
clc
mov
ja
negl
clc
pop
ljmp
push
xor
xchg
xchg
andl
push
sbb
cmpsb
add
adc
inc
cmp
add
adcb
jecxz
scas
pusha
insb
push
aam
sub
and
inc
ljmp
repnz
test
inc
mov
jp
sub
sub
mov
cmpsb
mov
dec
insl
jmp
sets
lock
aas
push
add
popa
flds
insl
mov
mov
fcoml
out
push
fsub
xchg
daa
jmp
out
ljmp
and
mov
addl
das
mov
jmp
push
pop
inc
pop
xchg
push
cmpsb
enter
insl
rcll
lods
jge
cmp
test
insl
xchg
fidivs
daa
pop
pop
sub
mov
stos
push
int3
xchg
aad
pop
push
pop
mov
fisubl
and
mov
dec
jnp
sub
xchg
cli
mov
lods
sub
inc
inc
inc
fldenv
and
sub
in
xchg
jae
addb
adc
out
or
fistl
fstpl
add
inc
std
dec
aad
inc
mov
je
or
mov
popf
sub
faddl
mov
push
xchg
popa
sarb
cmp
aad
sbb
sub
xchg
sarl
or
jo
stos
jb
xchg
or
in
inc
lahf
add
lock
testl
jb
jae
cmp
pop
lcall
cli
inc
jl
sub
pushf
pop
aad
int
or
cmp
inc
adc
cmp
add
sbb
pop
cmp
int
or
int
mov
jle
inc
pop
push
cmp
xor
sti
pop
in
and
xor
in
rcrb
jo
jne
mov
lods
cmc
fsts
mov
mov
pop
pop
out
mov
sbb
mov
outsb
xchg
add
push
call
push
cwtl
or
fwait
sysret
jnp
xchg
cwtl
mov
push
fistpll
sbb
xorb
fildll
jns
and
popf
hlt
imul
nop
popa
sbb
outsl
jle
push
xchg
dec
xchg
cli
adc
adc
call
inc
fldenv
je
xor
bnd
mov
add
mov
mov
push
adc
shr
fdivl
sub
aaa
sub
mov
jg
lret
in
sbb
scas
sbb
dec
mov
lds
inc
and
adc
mov
cmp
cli
shll
pushl
push
rcrl
scas
cmp
add
push
mov
aaa
xor
les
sbb
shll
pop
mov
aas
cmpsb
aas
in
mov
sbb
clc
in
xor
xor
or
lea
inc
out
push
sbb
mov
out
cli
xor
and
jns
movb
mov
pop
inc
negl
ja
mov
stos
push
pop
outsb
mov
pushf
mov
cmp
imul
in
addb
push
cltd
test
add
clc
and
incb
scas
inc
movsl
imul
dec
lods
pop
add
clc
enter
pop
xchg
fwait
icebp
inc
je
or
lret
sahf
je
cmc
sahf
lds
and
es
jp
test
push
pop
sahf
mov
outsl
cmp
adc
out
popa
dec
sub
movsb
aaa
push
mov
inc
faddp
dec
scas
xchg
enter
jp
fdivrl
sbb
punpckldq
scas
mov
mov
daa
mov
mov
cmp
movsl
push
pop
sub
pop
pop
inc
lea
sub
push
jo
adc
sbb
sbb
or
nop
and
dec
mov
or
jl
or
jmp
pop
xor
bound
cmp
sub
iret
loopne
sub
adc
sub
jecxz
pop
pop
mov
pop
push
imul
jp
sbb
enter
incb
xor
push
sbb
cmp
fcomps
insb
insl
daa
jecxz
mov
push
mov
test
cmpsb
add
int
jae
fsub
xchg
inc
xchg
jne
dec
jmp
jo
cld
lret
pop
imull
mov
in
xchg
sbb
mov
aas
inc
xor
cmp
dec
sbb
mov
nop
mov
xor
cmp
xchg
scas
adc
fwait
in
cmp
xor
push
pop
aaa
pop
lahf
out
pusha
es
adc
in
sahf
mov
xchg
jp
cmpsb
jp
sbb
dec
lcall
mov
cs
adc
cmp
pop
lret
inc
movsl
jb
or
rclb
aam
dec
sub
pop
jne
xchg
insb
xchg
or
cmpsl
or
fcompl
cmp
sub
push
lods
jmp
mov
shrl
inc
iretw
les
cmpsb
cli
jg
ret
or
mov
jmp
adc
nop
out
xor
sbb
cmp
mov
or
adcl
clc
fsubs
jo
jecxz
mov
push
jno
jl
jp
cs
cwtl
jle
add
out
call
or
mov
rcll
dec
mov
mov
hlt
pop
xor
insl
xor
add
faddp
loope
adc
in
mov
and
adc
xor
les
sti
adc
sbb
ja
rolb
pop
jae,pt
mov
jae
fs
mov
and
fyl2x
cmc
in
push
sbb
sub
mov
xor
mov
lahf
rcrb
inc
movsb
call
pop
jp
fdiv
jecxz
cmpsb
or
and
ss
je
xchg
mov
add
fwait
repz
pushf
mov
xor
movsl
out
mov
mov
jmp
pop
or
add
call
dec
sbb
inc
nop
add
push
out
leave
mov
dec
std
jle
fstpt
inc
dec
ja
unpckhps
lret
jl
or
xchg
jecxz
and
imul
cmp
adc
xor
popa
pop
xchg
adc
sahf
cs
inc
xor
sub
lahf
hlt
pop
jne
pop
adc
xlat
ret
add
ficoml
fwait
pop
mov
outsb
test
pop
push
xlat
sub
gs
ret
jg
push
fcompl
pop
push
add
loopne
mov
js
sti
push
mov
mov
daa
jno
arpl
ss
xor
call
mov
and
adc
cli
inc
ja
xchg
mov
jp
addr16
aaa
cmpsb
arpl
dec
or
and
test
push
lock
aad
nop
adc
outsb
and
pusha
fs
add
and
mov
cwtl
mov
mov
add
sti
dec
in
in
ficoml
arpl
lods
cli
stos
into
xchg
mov
sub
xor
jl
mov
iret
and
add
jb
cmp
pop
mov
and
sbb
in
cli
mov
imull
inc
sub
cmc
lock
out
or
out
outsl
dec
pop
sub
hlt
loop
aas
push
stos
clc
mov
popa
or
popf
clc
aaa
sbb
in
cmp
inc
inc
shll
pushf
inc
aaa
dec
pop
push
inc
jmp
lret
lret
rol
pop
subl
mov
mov
xchg
mov
xchg
fisttpll
and
push
xchg
gs
pop
xchg
imul
arpl
in
cmp
cmp
mov
mov
ret
lahf
fcomp
dec
sbb
add
loop
mov
fs
jecxz
dec
or
cmp
mov
stc
inc
notb
loope
cmp
add
dec
push
dec
cli
push
imulb
sub
cmpsb
and
inc
and
jno
or
in
fsubr
cmp
rcrl
jle
jbe,pn
pop
cmc
ljmp
daa
out
sarb
movsb
cmp
adc
push
pushf
or
rcl
cmp
sbb
cmp
inc
mov
gs
pop
dec
les
jnp
mov
mov
jmp
test
cmpsb
sub
add
add
je
push
pop
or
dec
xor
sub
sub
xor
jns
fldcw
jl
stos
insb
pop
mov
sub
bound
sub
or
scas
jnp
ror
inc
sti
rcrb
insl
mov
push
les
xchg
mov
outsl
cmc
fidivl
cmp
mov
stos
xor
sub
push
lock
mov
cld
pop
pop
cmpsl
out
adc
lods
push
iret
leave
xchg
in
fldt
inc
sbb
jge
and
jecxz
xorb
mov
mov
cmpsb
imul
test
icebp
and
cmp
std
push
and
sub
pop
loope
das
sbb
cmp
fisttps
and
subb
test
or
stos
xor
movsl
repnz
push
xchg
push
or
sbb
outsl
mov
mov
pop
in
lcall
nop
test
cmp
scas
mov
sub
sbb
leave
push
mov
cmp
out
ret
mov
pusha
ret
push
popa
out
pushf
mov
call
push
mov
shr
lock
mov
popf
pusha
loop
movsl
out
dec
xor
es
aam
gs
subl
mov
dec
mov
pop
ret
test
or
pop
add
fs
loop
inc
sub
icebp
sbbl
sbb
mov
imul
nop
sbb
sbb
sub
push
xchg
sti
jbe
fisttpl
or
inc
ja
cmp
mov
sbb
nop
pop
scas
aam
leave
and
testb
pop
cmp
inc
and
aam
xchg
mov
adc
push
sarb
orb
xlat
loope
insl
test
dec
xor
je
jnp
push
ss
bound
lds
jg
xlat
scas
mov
outsl
push
pop
sub
adc
jp
jle
pop
dec
pusha
jge
push
pop
pop
jle
icebp
lods
push
shrl
add
ret
cmc
movsb
pop
pop
ret
fisttpll
ror
test
repnz
dec
shr
mov
dec
enter
cmpsb
jae
cwtl
mov
jecxz
xor
movsl
dec
ja
rcl
negb
sub
popf
je
xchg
push
xorb
lea
int
mov
mov
repnz
push
lret
and
movsb
mov
pop
pop
ds
pand
adc
xchg
mov
and
sub
push
hlt
mov
jp,pt
jnp
dec
or
aaa
pop
push
xchg
inc
or
ja
sbb
jge
ret
pop
jmp
in
and
orl
test
push
jmp
insb
jns
jns
push
jbe
test
cld
cld
add
lock
dec
pop
fucomip
cmp
mov
and
mov
sbb
and
daa
cltd
mov
aas
insb
dec
shrl
gs
adc
int
gs
pop
clc
test
jle
jge
cmp
jg
cmp
cmpsl
scas
stos
dec
in
es
pop
pop
aaa
push
mov
mov
fsubrl
test
int3
cli
jns
addl
push
ficoms
sub
clc
sub
fs
mov
xchg
hlt
push
pop
sbb
lock
mov
and
or
mov
sbb
jge
mov
xchg
icebp
inc
int
cld
cld
das
pop
call
clc
inc
loope
sbbl
and
jns
out
cmp
dec
fdivrs
daa
fdivrl
xor
lods
adc
gs
test
cmp
lret
lea
xchg
push
jg
xchg
ret
imul
jae
lret
leave
push
idiv
xchg
add
sub
pop
add
hlt
pop
mov
lret
inc
insb
pop
repz
pminsw
cmp
mov
jbe
or
xlat
jb
add
ret
and
jle
and
dec
enter
mov
mov
sbb
es
jo
jae
loope
mov
fidivs
cwtl
xchg
mov
fs
xor
mov
push
push
mov
and
sbb
inc
ja
scas
adc
in
push
adc
inc
rcrb
mov
lods
fldl
push
les
popa
imul
mov
dec
pop
mov
adc
jecxz
lods
pop
adc
imulb
ljmp
fidivrl
mov
mov
push
push
call
cs
and
cmpsb
dec
jo
les
out
cs
inc
add
mov
das
add
fnstcw
sub
cs
clc
daa
std
jecxz
out
mov
adc
push
pop
xchg
cli
xchg
or
out
add
xchg
addr16
ds
pushf
fwait
inc
repnz
pop
mov
mov
or
push
sub
fwait
cmp
dec
and
jl
cld
xor
lahf
xchg
fcomps
cmpsl
push
aad
sub
lret
pop
add
sarl
popa
stc
data16
test
icebp
inc
xchg
add
nop
int3
gs
fcos
pop
mov
or
out
mov
out
fstl
sbb
mov
mov
iret
jns
mov
push
scas
sahf
push
ljmp
inc
or
cmp
inc
ljmp
in
add
inc
movsl
arpl
lods
xor
out
cmp
sub
lds
dec
mov
and
mov
adc
sbb
imul
ja
jno
test
pop
and
loopne
mov
adc
xchg
int3
dec
push
fstpl
mov
inc
add
fadds
movsb
fdivrs
leave
sub
xchg
xor
insl
adc
or
cmp
xor
jp
mov
pushf
sbb
pop
jmp
lahf
and
ljmp
ljmp
sahf
mov
jno
test
pusha
and
adc
xor
or
jecxz
push
shrb
in
clc
outsb
pop
fiadds
fidivl
mov
dec
mov
push
scas
divb
cmp
push
mov
fdivs
pop
je
xor
fs
xor
ds
fcom
orb
xchg
sbb
aaa
xor
hlt
push
jecxz
popf
pop
fsubrl
push
test
outsl
cmp
pop
lea
data16
dec
mov
inc
fcomps
jge
xor
dec
push
in
cld
cli
rorl
daa
cmc
sub
repz
or
stos
sbb
mov
sbb
sub
arpl
sub
outsb
das
movsl
fnstenv
fsubrp
sbb
push
xchg
cmp
bound
inc
jmp
ds
andnps
in
cmp
ret
cmpsb
pop
jge
push
xchg
jae
repz
idivl
leave
testb
div
mov
cmc
jge
mov
sub
mov
add
push
sbb
int
sbb
xchg
shll
adc
movsl
scas
jmp
cmpsb
mull
mov
and
int3
inc
test
sbb
sbbb
sti
mov
ss
loopne
sbb
cmpsl
xor
fmull
mov
pop
jle
nop
sbb
ret
imul
std
shll
push
fs
data16
sub
dec
dec
sub
fimull
dec
push
cs
cld
push
mov
insl
dec
in
lcall
roll
pop
mov
jp
add
sub
addr16
sahf
bound
xchg
ret
mov
hlt
stos
in
shlb
fildll
cmpsb
mov
hlt
xchg
mov
add
xchg
sub
xchg
pop
inc
push
jnp
ja
fnstsw
rorl
lods
and
rorl
cmpsb
aaa
ret
imul
xor
jp
test
pop
jno
daa
push
cmpsl
mov
jno
sti
outsl
iret
ret
daa
and
or
xchg
xor
and
fwait
cli
xor
nop
xchg
xchg
jle
movl
push
loope
xlat
insb
push
nop
add
nop
jo
or
iret
imul
adc
repnz
mov
lock
dec
negl
popf
enter
movsb
cmpsb
cmp
push
jle
lea
jb
ja
jp
lods
out
push
pusha
scas
sbb
add
cmp
push
loop
shll
out
xor
out
and
test
push
fildll
sbb
jl
bound
mov
xchg
js
mov
je
incl
jecxz
and
jle
ja
incb
lret
dec
xorb
add
push
xchg
dec
shll
imul
and
stos
sub
test
push
sahf
mov
sbb
pop
lea
mov
mov
xor
push
insb
clc
or
call
jbe
mov
cs
dec
jmp
fmuls
dec
mov
je
or
sarb
push
cmp
mov
mov
add
cmp
das
cwtl
popa
lret
sub
mov
repnz
cmc
and
movsb
int
lods
pop
xchg
popa
sub
mov
sbb
data16
mov
ds
mov
dec
mov
aas
sub
jg
cmp
gs
dec
sahf
pusha
cmc
cmp
jae
xchg
push
clc
sar
leave
das
insb
jbe
push
mov
mov
push
sub
fs
push
iret
push
mov
push
add
mov
inc
ret
gs
mov
imul
repnz
filds
jecxz
mov
icebp
add
xchg
outsl
and
mov
ss
movsb
cmp
mov
daa
push
aas
daa
popf
inc
dec
pop
outsl
mov
ret
leave
xchg
xor
repz
movsb
adc
fidivl
mov
aaa
mov
les
cmp
test
or
jne
shl
stc
push
fsts
sub
pushf
fwait
add
xor
mov
inc
fwait
jecxz
adc
mov
aaa
xor
and
mov
jg
inc
jo
add
adc
xchg
jae
dec
cwtl
mov
mov
lcall
cmp
arpl
mov
fistpll
xchg
mov
mov
adc
movsl
jnp
idivl
xor
dec
sbb
jns
cmp
mov
push
pop
stos
sbb
push
movsb
popa
in
xchg
test
cmp
pop
dec
jecxz
sub
jo
jmp
dec
push
push
mov
imul
mov
mov
leave
loopne
loope
scas
push
sub
adc
jo
fisubs
jmp
cmp
aas
cmp
jmp
pop
mov
out
xor
push
adc
jmp
sub
int3
insl
xor
mov
inc
jns
ja
fdivl
sub
jno
lock
dec
nop
push
mov
gs
int3
je
inc
push
ljmp
out
out
mov
and
outsl
lret
and
pop
int3
imul
ret
jle
pop
xchg
movsl
or
mov
es
push
push
ret
pop
into
das
lock
in
xchg
out
pop
data16
js
stc
or
add
mov
shlb
inc
sti
psubb
movsl
mov
scas
arpl
andl
scas
push
jecxz
add
cmp
sub
or
or
cmp
in
subb
rorl
xor
es
imul
sarb
out
pushl
adc
cmp
popf
and
cltd
sub
lea
and
add
and
xchg
stos
popfw
add
fdivrs
leave
fst
movsb
dec
sbb
or
insl
and
outsb
mov
iret
push
ljmp
pop
inc
movsb
sbb
inc
jne
insb
ret
push
pop
push
xor
mov
mov
rorb
into
mov
test
sbb
ds
cmp
mov
push
pop
cmp
les
test
shl
pop
inc
movsb
xchg
push
mov
lock
jmp
sbb
dec
pusha
call
or
pop
dec
pop
test
test
xchg
add
or
jo
sub
neg
popa
xchg
inc
mov
dec
xchg
mov
adc
loope
adc
out
enter
loope
in
jmp
dec
and
in
loop
mov
in
rorb
fwait
ljmp
pop
insb
std
lcall
add
xchg
aad
test
adc
in
cli
in
mov
shrl
mov
ds
push
test
xor
insb
or
sahf
loope
push
gs
lahf
pop
loope
jae
ret
xor
push
dec
paddsw
inc
or
mov
arpl
mov
mov
pop
mov
pop
fisttpl
pop
xchg
mov
popf
or
jae
xchg
cmp
xchg
stos
pusha
les
xor
and
push
mov
sarl
fmuls
arpl
pop
test
inc
lods
stos
iret
cmpsl
mov
in
cmp
lods
neg
sub
mov
xlat
shll
inc
adc
xor
aam
add
test
push
or
xchg
nop
pop
mov
push
lods
or
sbb
push
lods
mov
push
lock
and
inc
mov
dec
outsb
mov
mov
popa
push
pusha
icebp
in
push
xor
xchg
cmp
push
add
mov
adc
or
inc
sbb
xchg
sbb
mov
push
xlat
sbb
cwtl
pop
sub
cmpb
loop
hlt
mov
cmpsl
and
and
inc
push
dec
jno
xor
shrl
xchg
stos
jecxz
or
ret
cmp
ret
pop
cmp
shrb
cltd
adc
mov
xchg
pop
daa
xor
pop
jne
or
lock
add
ja
sub
lret
adcb
jmp
jne
fsubl
adc
int3
sub
pop
pop
mov
adc
sar
lods
mov
mov
jge
pop
pop
imul
stos
jecxz
push
pushf
inc
or
rorb
ja
push
lret
dec
cmp
mov
dec
movsl
les
push
jno
jnp
aad
mov
cmp
sarl
shll
inc
bound
in
data16
pop
dec
fcompp
mov
push
mov
add
fisttps
inc
jl
mov
cmpl
push
inc
adcb
cs
mov
test
xchg
or
or
adc
adc
mov
decl
in
pop
pop
test
mov
inc
adc
rcll
pusha
xchg
ror
jbe
cltd
or
inc
cmp
lods
jp
and
fldenv
out
in
or
lret
mov
lahf
and
rcrl
test
in
enter
xchg
pop
and
dec
mov
xor
test
outsl
adcb
jne
scas
lcall
jl
ret
shlb
jmp
popa
adc
cmp
or
dec
clc
pop
lods
pop
mov
js,pt
push
push
xor
out
jb
mov
xchg
mov
sub
pop
add
aam
mov
xchg
jb
mov
dec
sub
ljmp
mov
sbb
negb
push
pop
jne
mov
mov
imul
push
push
jnp
imul
push
dec
stos
decl
out
sahf
stc
jmp
inc
jmp
inc
jbe
lods
dec
cmp
roll
push
pop
adc
ret
jmp
loope
cmc
sub
mov
ja
add
inc
fcmovnb
ss
mov
adc
inc
mov
je
mov
scas
xor
mov
xchg
cwtl
pushf
mov
and
mov
ficomps
push
outsb
sbb
jl
mov
repnz
add
pop
or
add
sub
sbb
jo
fldt
sub
jae
fs
int
sub
jecxz
rcll
imul
lods
je
out
xchg
xchg
mov
mov
jae
arpl
mov
xor
mov
mov
aam
jne
outsl
jne
sbb
bound
push
jge
int
xchg
xchg
mov
xor
xchg
dec
pop
mov
mov
jnp
push
push
mov
dec
push
adc
mov
jp
into
cltd
sbb
jp
int
pop
in
movsl
add
mov
lret
adc
push
and
push
jo
pop
add
add
das
adc
push
push
jecxz
jmp
subl
ret
xchg
data16
inc
hlt
jle
jnp
xchg
pop
inc
sub
fstps
dec
scas
lret
sub
cmp
push
mov
sarb
add
jae
dec
fs
add
stc
clc
repz
mov
jbe
data16
stc
inc
jle
nop
cmp
cli
xchg
sub
loopne
pop
scas
ljmp
out
push
push
into
adc
xor
loop
xor
mov
orb
inc
out
push
push
push
mov
mov
push
push
dec
loope
pop
dec
mov
mov
xlat
adc
xchg
xchg
jnp
and
mulb
inc
mov
mov
test
ds
mov
add
cmp
mov
rclb
adc
push
push
rcrl
ficomps
daa
addb
aad
fisubrl
pushf
inc
sbb
outsb
jl
push
cmp
mov
xorb
mov
dec
jno
jge,pn
adc
sbb
xchg
sbb
icebp
xor
shll
adc
orl
mov
push
lea
mov
mov
add
sub
push
pushf
and
pop
iret
pop
in
je
mov
pop
cmp
cmp
out
lret
pop
cld
push
jmp
add
aaa
in
and
mov
imul
inc
loope
sarl
push
flds
and
and
push
sub
and
xchg
jl
mov
mov
or
jecxz
xorb
adc
stos
push
in
sub
jbe,pn
jnp
xchg
jmp
sti
adc
and
jge
jle
repz
xchg
xor
mov
movsb
and
sub
loopne
leave
adcb
mov
fsts
js
mov
repz
clc
mov
sahf
imul
sub
or
lods
repz
arpl
sahf
inc
imul
mov
roll
and
lds
and
adc
aad
sti
jo
fistpll
out
leave
pop
jmp
addb
and
incl
add
xchg
aas
ficoms
push
test
stos
dec
int3
in
aas
jle
lret
add
cwtl
clc
fadds
jge
incb
aad
push
mov
fadds
xchg
shl
sbb
outsb
scas
pusha
or
adc
adc
pop
test
into
enter
fistps
fbld
add
movsb
sar
add
repnz
sub
inc
and
cs
fstl
hlt
int3
and
push
add
inc
mov
aas
call
lds
and
mov
xor
jns
cltd
shrl
pop
jae
dec
inc
mov
cmp
adc
add
xchg
jmp
fwait
xchg
cmp
mov
ficoml
jo
clc
and
cmp
fcoml
mov
mov
call
sarl
jl
dec
hlt
test
int
xchg
std
adc
xchg
lds
pusha
xchg
xorl
add
xchg
lods
sar
xchg
int3
cmpsb
xchg
stc
lods
sbb
mov
in
in
mov
popf
cltd
xchg
cltd
sbb
sbb
mov
int
shll
leave
lcall
rclb
mov
dec
mov
inc
sub
cmp
ja
in
repz
neg
arpl
push
jmp
inc
movsb
inc
out
mov
mov
cmpsl
inc
and
dec
pop
xor
fs
aas
out
getsec
fcomi
popf
call
push
mov
ss
add
jle
cmp
pop
dec
mov
addr16
cli
imul
mov
les
cmpsb
sbb
pushaw
hlt
inc
out
inc
fildll
call
cmp
mov
cmp
test
inc
shrb
or
in
insl
jg
xchg
xchg
push
or
movsl
cltd
jo
xor
xchg
testl
pop
sbb
lock
xchg
jg
aam
cmpsb
out
mov
stos
sub
xor
mov
jmp
ljmp
popl
insl
mov
test
mov
sbb
ror
pushf
in
push
cltd
xchg
jecxz
or
stos
push
xor
mov
insb
cmp
lret
push
pushf
dec
sbb
dec
clc
cmp
test
outsb
and
dec
pop
push
push
enter
sub
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
fisubs
in
cmp
jp
fstpl
jp
leave
push
dec
mov
aad
pop
xor
iret
inc
pop
and
or
adc
mov
stos
test
das
and
cwtl
inc
int3
stos
cmpsb
and
mov
push
sbb
pop
xor
test
adcl
jg
xor
sub
jno
pop
and
fcmovne
into
push
lods
mov
pop
data16
call
pop
aad
sarb
xchg
inc
lods
cmp
and
mov
cs
ljmp
sahf
mov
push
aaa
add
sbb
mov
popl
adc
loopne
sbb
je
lret
test
pop
push
pop
adc
repnz
mov
stc
movsb
test
xor
bound
and
mov
mov
mov
xor
fcom
or
outsl
mov
loope
shll
inc
sti
ja
sub
pop
bound
sbb
int3
in
jl
cwtl
in
rcrb
fldenv
pop
mov
int3
and
push
fstps
sahf
mov
sbb
pushf
pusha
inc
or
sbb
std
jns
outsb
icebp
lret
adc
mov
icebp
add
rorb
jl
jl
outsl
ror
sbb
bound
sbb
sahf
push
pop
shll
in
mov
jmp
pop
nop
sub
mov
cmp
stos
xchg
repz
ljmp
sahf
outsb
sub
add
out
xor
mov
andb
insb
jp
mov
jle
sbb
out
xor
mov
enter
repz
rclb
mov
arpl
dec
pop
out
mov
aad
jmp
call
clc
js
cli
ficoml
add
cmpsl
out
sbb
pop
mov
arpl
jb
xchg
dec
hlt
out
or
rcr
xor
imul
push
xor
insb
fs
push
inc
xchg
and
mov
roll
iret
or
fsubrs
fcmovnb
jl
lods
inc
add
push
movaps
jl
pop
out
movsl
dec
or
pop
fs
push
jecxz
xchg
push
push
arpl
and
add
sbb
xchg
pop
das
push
aaa
or
stc
test
xchg
adc
xor
pop
mov
xchg
mov
adc
lcall
dec
push
es
mov
jmp
scas
xchg
add
subb
cmpl
aas
fcmovnu
mov
arpl
cmp
nop
push
movsl
lahf
gs
inc
inc
mov
mov
xor
insl
leave
adc
loop
scas
fs
fidivs
in
insl
nop
or
aad
rorl
mov
jns
xor
jmp
gs
fildl
xchg
pop
enter
mov
rolb
adc
pop
jg
aaa
pop
mov
pop
sbb
inc
mov
sub
mov
jge
or
arpl
lods
sbb
inc
xchg
push
xorb
pusha
jle
leave
dec
and
jge
dec
cmp
test
jmp
rorb
mov
loope
fidivrl
daa
push
std
stos
jne
addr16
loop
jmp
adc
jnp
push
aam
sti
xor
dec
mov
fcomps
fildll
pop
loope
xor
or
cmp
mov
lret
and
xchg
xor
jne
xlat
mov
inc
sbb
out
popa
stos
es
pop
mov
push
adc
push
icebp
mov
insb
cltd
sub
xchg
jne
pop
mov
and
dec
mov
aad
shr
sub
pop
inc
dec
inc
and
mov
outsb
jle
mov
sbb
jnp
mov
inc
sbb
jp
mov
ljmp
add
cmp
adc
clc
insl
cmp
fnstsw
mov
fidivrl
es
or
out
fwait
mul
mov
adc
cmp
push
cmp
cmpsb
or
cmp
out
pop
mov
mov
shlb
sub
pop
sahf
int
maskmovq
notl
aas
mov
pop
icebp
or
and
lods
decl
xchg
push
cltd
das
jne
add
cli
cmp
inc
rolb
cmp
ret
dec
in
in
and
pop
push
cmp
shr
and
andl
xchg
lret
daa
loopne
or
mov
cmc
je
test
xor
insb
mov
xchg
and
inc
cmp
imul
insb
mov
pop
in
sbb
mov
loopne
nop
mov
lcall
or
mov
mov
lcall
lods
and
loope
and
negb
xchg
pushf
xor
mov
xor
cmpsl
mov
xor
inc
dec
push
add
cmp
testb
add
fmull
mov
xchg
loopne
pop
test
fwait
sti
fwait
jge
into
nop
ss
notb
es
in
ja
jle
outsb
jge
add
push
add
jp
jp
inc
sbb
pop
lds
aad
outsl
and
xchg
test
repz
sub
mov
or
push
das
popl
jl
mov
inc
in
adc
sub
insl
mov
imul
int
les
mov
xor
inc
sahf
fnstcw
arpl
in
shll
lret
inc
aaa
jecxz
dec
push
mov
xor
into
ret
sbb
sub
mov
mov
mov
imul
xchg
inc
stc
dec
sub
out
xchg
xchg
sarl
lahf
jmp
les
clc
xor
shrl
mov
push
or
push
jae
loope
cltd
insb
mov
sub
pop
mov
cmp
add
int3
jnp
enter
adc
call
xor
jl
dec
or
mov
in
jl
mov
mov
aam
and
cmp
dec
std
cmp
pop
xor
inc
jbe
lahf
xorb
and
lock
cmpsb
insb
and
movsb
xor
push
inc
stos
adcb
push
addr16
leave
subl
int
adc
mov
push
sti
outsl
mov
jns
mov
mov
and
testb
pushf
xor
int
aad
movsb
and
lods
roll
add
icebp
icebp
cmp
push
sub
mov
fcoml
lock
and
pop
inc
inc
fwait
in
mov
movsb
push
mov
ja
fcomps
loopne
leave
adc
test
int3
push
jecxz
pop
loope
call
sub
dec
and
mov
fs
pushf
cmp
movb
cmp
les
xor
push
pop
and
cld
push
out
nop
or
cs
mov
adc
mov
jl
mov
and
cmp
mov
hlt
fmuls
imul
inc
xor
mov
arpl
push
lcall
lods
push
xchg
pop
adc
loop
mov
sub
sbb
rolb
cwtl
iret
scas
loop
movsl
or
sti
xchg
addr16
xchg
jmp
inc
inc
and
cmp
xor
cmp
mov
lds
mov
pop
push
push
cmp
cmc
dec
push
loope
int
pushf
push
push
and
scas
ja
lahf
pusha
dec
sbb
addr16
dec
test
insl
outsl
loopne
or
imul
jo
lcall
push
lret
sbb
xchg
xor
cli
jmp
mov
mov
fiaddl
imul
insb
les
adc
jl
xchg
ljmp
sub
xchg
in
cs
and
cmpsl
shr
pop
mov
push
adc
lods
mov
xchg
xchg
and
inc
jae
mov
mov
icebp
ja
dec
cmp
shlb
xchg
hlt
mov
cmp
pop
adc
data16
fs
scas
and
scas
mov
adc
int
cld
add
dec
mov
lods
insl
lret
psllq
inc
push
pop
scas
lcall
repz
mov
aad
jbe
pusha
jmp
imul
push
and
lcall
mov
and
adcb
xchg
test
inc
lret
cli
inc
mov
push
mov
clc
or
outsl
test
cli
mov
mov
scas
push
push
cltd
push
pop
xchg
jge
jns
xor
and
cmp
jb
mov
ljmp
test
mov
outsb
sbb
aas
add
lods
daa
ret
mov
pusha
scas
out
mov
mov
rolb
cmp
add
pop
imul
mov
insl
fs
rclb
xchg
movsl
shlb
test
lahf
push
cmp
pushf
rcrl
fsubrs
mov
xor
jecxz
cltd
sahf
fsubl
xor
mov
test
addr16
rcrl
lahf
jp
lds
and
ret
sbb
das
xor
mov
popl
fwait
test
cmp
push
jp
dec
push
insb
movsl
push
out
add
add
scas
stc
adc
movsb
in
repz
xor
imul
jnp
jae
add
enter
push
mov
dec
xchg
sti
mov
insb
xchg
jnp
sbb
mov
push
xchg
push
arpl
mov
inc
jb
imul
and
and
or
mov
es
jg
mov
mov
shll
test
sbb
xchg
adc
lret
xor
aas
into
dec
xor
sarl
ljmpw
cmpsb
jmp
push
xor
xor
fmull
jb
std
insb
cmp
push
lods
inc
and
push
enter
inc
xchg
adc
lcall
sub
inc
movsb
mov
loope
icebp
aaa
shl
fbld
adc
gs
icebp
or
mov
cmp
andl
mov
out
out
and
cld
aaa
repz
xchg
rcrb
mov
insb
cltd
repz
mov
inc
int
ret
mov
stos
or
pop
lods
push
jnp
push
icebp
pop
or
mov
leave
cmp
sub
out
fildl
push
fldl
in
ljmp
out
pop
cmpsb
insb
xchg
sbb
add
mov
out
push
adc
push
jl
pop
loopne
sbb
mov
xchg
loope
lock
xor
ja
into
pop
jp
push
ficoms
das
dec
and
push
mov
jmp
and
adc
scas
xor
cli
das
cwtl
adc
lock
ss
mov
imul
push
loopne
pushf
mov
jmp
aaa
mov
adc
nop
push
not
jg
mov
cmpsl
fs
mov
pop
lcall
das
or
cmpsl
insl
cwtl
jle
sub
mov
cmc
pop
popf
fldpi
sbb
cwtl
add
xchg
mov
sti
pop
lock
lcall
sbb
imul
cmpsb
stos
outsb
aad
or
push
stc
out
data16
movsb
push
cwtl
std
sbb
cmp
mov
addb
pop
push
push
imul
imul
push
nop
inc
sub
and
fcmovnu
mov
pop
mov
push
shll
mov
dec
testl
dec
inc
lret
addr16
xchg
cltd
mov
movsb
push
sbb
push
xor
push
pop
lods
repz
xorl
pop
xchg
out
stos
outsl
push
add
in
lret
mov
mov
and
cmp
mov
xchg
mov
int3
add
jge
js
sbb
loop
mov
bound
push
imul
pop
xchg
out
arpl
cmp
addr16
mov
mov
sbb
stc
repz
add
pop
jnp
inc
adc
cltd
dec
cmp
lret
xor
jmp
data16
mov
mov
mov
daa
test
hlt
and
cmp
loop
pop
in
jg
push
inc
movsl
push
add
cmp
mov
lret
pop
mov
dec
mov
add
jns
lea
aam
xor
insl
jae
push
ds
mov
lea
sub
pop
cmpsl
leave
or
movsb
dec
cmp
cmpsb
sbb
add
ss
imul
sub
sbb
jb
mov
adc
dec
xor
cmpsb
mov
js
rcrl
push
ljmp
adc
aam
test
movsl
xor
lret
cmp
divb
dec
aam
aam
lods
in
xchg
shrl
jp
ret
out
push
fst
loope
cmp
pusha
mov
cli
rorb
mov
loope
mov
adc
xlat
jl
loop
add
pop
dec
sbbl
pop
aaa
sbb
cltd
paddb
adc
push
scas
jns
scas
sbb
loop
cmp
mov
pusha
stos
cmc
push
sarl
mov
inc
xchg
inc
sbb
out
sbb
mov
mov
or
cs
xor
test
push
or
popf
sub
mov
mov
in
mov
shl
movsb
xor
stos
fidivrl
addl
ja
ret
mov
in
xor
ror
insl
and
jmp
outsl
inc
call
push
aas
mov
xchg
insl
mov
add
loop
sbb
loope
in
popf
mov
clc
not
xor
jmp
popa
sub
cmp
sub
xchg
les
imul
mov
or
adc
sahf
sub
cmc
xchg
cmp
loop
pop
aas
cmp
mov
subb
jle
enter
fdivrl
es
sbb
or
push
lret
jl
lods
adcl
add
mov
jbe
mov
jl
cmc
lret
sti
mov
pop
call
sbb
sbb
pminsw
lcall
pusha
loop
shlb
in
xor
sub
inc
mov
movsb
scas
mov
inc
mov
cmpsb
scas
mov
jle
cmpsb
jne
outsb
aad
mov
scas
rclb
jg
cmp
mov
insb
xchg
movsb
or
jmp
aad
test
int3
icebp
fldcw
sbb
iret
pop
lea
jecxz
adc
xchg
adc
xchg
nop
jp
and
dec
sbb
int
and
mov
lcall
fnstcw
push
sbb
rcr
sub
dec
xchg
mov
test
dec
mov
push
inc
jns
lods
xor
leave
loope
std
pop
push
cmp
push
sti
mov
bnd
adc
push
jl
mov
leave
shlb
cli
bound
sbb
mov
std
or
sbb
icebp
lds
sahf
mov
mov
addr16
jecxz
cs
adc
mov
testb
jmp
pop
cmp
mov
or
aam
out
dec
mulb
decl
xor
pop
push
fisubl
push
in
scas
out
fmul
rclb
repz
pop
inc
cltd
pop
fwait
xchg
pusha
repz
jo
cs
sbb
push
pop
push
jne
adc
push
mov
inc
or
popl
popf
cmp
xorb
sbb
stos
mov
cltd
scas
mov
es
push
xchg
enter
mov
jae
bswap
cld
mov
push
rcrl
wrmsr
xchg
add
pusha
xchg
mov
sbb
mov
xor
jbe
xchg
popa
leave
inc
xor
insl
cwtl
lcall
repnz
lcall
into
call
xor
push
add
out
mov
dec
repz
enter
adc
popaw
mov
jg
dec
and
xchg
or
xchg
and
mov
xor
xchg
dec
xlat
mov
xchg
sub
adc
lea
inc
mov
mov
rcr
lea
out
repz
test
es
add
xor
in
inc
add
xorl
fwait
xchg
aas
cmp
sub
jnp
int
imul
or
add
jns
add
xlat
insb
iret
imul
sbb
adc
adc
mov
jne
jno
xor
mov
dec
and
insl
je
push
dec
fimull
in
jne
shlb
or
xchg
cmp
inc
sbb
jle
loopne
idiv
adc
jns
insb
add
xor
and
test
call
cmp
insb
jns
xor
dec
enter
ss
sub
loope
xchg
in
std
push
insl
adc
and
stos
xchg
lret
pop
or
js
jns
sub
arpl
fucom
out
fsts
xlat
sti
fldenv
aas
push
xor
add
call
dec
and
and
and
pushf
jno
lret
xorb
fs
lea
sbb
clc
inc
stos
mulb
movsl
push
divl
xchg
xor
pop
imul
jmp
js
pop
inc
out
lods
jg
inc
adc
dec
ret
dec
mov
xchg
xchg
data16
xchg
push
dec
mov
loope
jne
sbbl
jmp
xchg
ror
fdivs
in
xchg
testl
push
mov
mov
dec
cmp
dec
aad
sub
fidivrs
das
pop
fs
mov
mov
mov
lock
jb
aad
inc
stc
and
or
enter
cmp
adc
push
mov
xor
xlat
test
ficoml
mov
xchg
mov
lahf
ret
xchg
push
insb
sbb
popf
pusha
mov
sbb
inc
loopne
cs
dec
dec
xchg
sarl
mov
mov
mov
orb
mov
test
lods
and
hlt
stos
mov
adc
fadd
scas
call
sbb
mov
sbb
jb
sub
insb
dec
test
clc
cmp
int3
cmp
dec
nop
mov
and
enter
mov
xchg
scas
inc
scas
mov
pop
inc
mov
adc
mov
into
addr16
sbb
adc
cli
pop
out
push
lods
arpl
loopne
pop
cmp
jmp
and
pusha
cmpsl
mov
mov
sbb
aam
xor
and
cmp
imul
xor
out
push
lods
sbb
shrl
pop
shlb
mov
dec
sbb
push
mov
mov
mov
aad
pusha
daa
ret
pop
in
push
ret
cs
xchg
ja
push
and
sahf
mov
je,pn
dec
test
call
adc
push
fsubl
adc
out
cmp
lcall
mov
dec
inc
adc
lcall
hlt
add
and
clc
push
lahf
sbb
daa
inc
scas
and
push
fbstp
aad
push
lret
in
xchg
loopne
jmp
xor
insl
cs
jb
out
fildll
sbbb
xchg
subb
fdivrs
leave
xor
lcall
imul
sub
sbb
jmp
dec
jne
test
addr16
jnp
ds
inc
call
mov
jnp
stos
addl
dec
pop
scas
lcall
fs
xlat
cmpsb
xor
insl
adc
sbbl
sub
movsl
lock
xchg
or
mov
cmc
mov
push
push
cld
and
xchg
dec
or
mov
mov
sbb
gs
sub
push
and
push
mov
mov
xchg
arpl
cmp
cwtl
adc
shr
enter
fwait
lret
sbb
xchg
jno
mov
les
gs
mov
mov
mov
test
and
mov
ljmp
cmp
mov
add
hlt
enter
loop
fwait
push
sbb
sub
js
fidivs
adc
fidivrl
or
cmp
mov
jo
fwait
inc
shll
dec
fdivrl
lods
ret
data16
xchg
test
imul
push
in
sbb
and
pop
sbb
idiv
movsl
xor
cltd
dec
jp
add
movsl
xchg
add
pop
leave
adc
add
push
inc
js
xor
cmp
cmc
adc
mov
outsl
push
psubq
push
int3
les
fsubl
push
leave
inc
movsb
push
and
ljmp
xor
mov
inc
lds
fidivrs
sti
inc
mov
add
cmp
sub
dec
repnz
out
fdivr
cmp
aam
mov
sub
jp
inc
push
movsl
fstpt
adc
adc
inc
cmp
lock
inc
hlt
mov
push
inc
sbb
sahf
fstps
mov
in
adc
pop
pop
and
xchg
and
mov
or
jbe
lds
cltd
repz
aas
loopne
dec
pop
add
test
mov
lret
arpl
inc
mov
pop
push
dec
stc
shrl
popf
out
ficoms
jno
lret
shll
lds
fs
andb
imul
lret
and
jg
pop
mov
adcb
dec
mov
jmp
mov
jb
lret
pop
int
push
mov
stc
fnstsw
sub
jmp
cmc
mov
outsb
and
ja
fs
and
imul
std
loopne
ljmp
testb
sbb
mov
mov
jp
push
pop
mov
cmp
popa
cmp
imul
outsl
es
sbb
mov
jmp
scas
movsl
in
inc
pavgw
aad
shll
jno
mov
int3
int3
sub
dec
adc
push
sbb
loope
hlt
push
pop
inc
in
test
fsubrl
daa
sub
sub
inc
ds
xchg
dec
mov
les
jno
not
mov
lret
shll
lock
adc
insl
push
mov
jne
jge
or
pop
shrb
xchg
insl
repnz
jge
pop
jmp
clc
xchg
xor
or
add
ret
testb
adc
lret
pop
xor
leave
daa
arpl
push
scas
bound
std
ficomps
mov
pushf
pop
out
mov
jge
cld
or
jl
lods
ja
cli
push
in
cmp
xor
inc
xor
dec
push
sub
sbb
xor
enter
hlt
pusha
sub
push
sbb
add
inc
sbb
cmc
sbb
out
or
scas
jl
aam
ja
or
stos
sbb
insb
adcb
pop
cmpsl
mov
add
in
int
inc
jno
cmc
nop
popf
test
push
das
fsts
neg
mov
xor
scas
lods
lea
sbb
push
xchg
push
xchg
nop
cmp
lock
sub
xchg
fsubl
mov
or
fdivrs
lcall
dec
jns
fs
int3
xor
mov
push
inc
out
imul
xor
mov
das
and
ljmp
int
imul
mov
lahf
aam
xchg
test
pusha
imul
dec
cmc
outsb
mov
push
dec
mov
pop
push
sti
mov
arpl
iret
mov
dec
fnstenv
xor
mov
in
mov
pusha
inc
push
mov
and
leave
dec
or
mov
out
je
inc
cld
ret
sbbb
adc
out
and
popf
jge
and
es
pop
imul
jg
adc
test
mov
push
fiaddl
mov
pop
xchg
mov
or
ss
pop
ret
dec
fldl2e
jge
jl
pop
xor
rorb
xlat
cmp
xchg
jp
adc
or
xchg
and
js
mov
in
pop
outsl
pop
pop
add
mov
add
and
sti
sub
adc
enter
or
pop
push
imulb
test
test
out
dec
ror
das
cmp
arpl
sub
rclb
jecxz
inc
pop
jae
mov
shll
sub
push
test
or
add
cmp
mov
push
dec
mov
repz
xor
outsl
rclb
push
jg
mov
jp
test
icebp
dec
pushf
dec
mov
les
leave
push
jl
pop
dec
dec
sbb
popf
pop
test
mov
and
divb
fisttpll
sub
je
std
sbb
push
sub
notb
popa
push
shlb
mov
mov
mov
xchg
mov
sbb
lret
mov
mov
xchg
sahf
xorl
mov
push
test
shrb
es
inc
and
mov
adc
mov
cmp
nop
fsubl
pop
jge
addr16
clc
pop
pop
cltd
loopne
add
sbb
shl
xchg
push
icebp
dec
fwait
cltd
add
adc
cmp
mov
out
jge
sub
xchg
adc
cwtl
daa
addb
movsl
and
leave
and
addb
mov
mov
jmp
push
ja
add
adc
into
mov
sub
ljmp
pop
push
cltd
push
nop
adc
hlt
in
iret
movsl
pop
mov
nop
mov
loope
adc
fimuls
adc
push
shlb
jae
shlb
addr16
mov
push
mov
out
in
dec
scas
hlt
mov
jmp
mov
add
mov
imul
push
mov
jecxz
idivb
push
xor
in
sbb
js
and
loope
pusha
cmp
loop
iret
scas
lock
pop
adcl
rcll
insb
push
lcall
pop
int
shl
ljmp
push
aaa
dec
sub
lea
lea
xchg
push
sbb
sbb
ja
mov
dec
ljmp
in
das
lods
fsub
and
mov
popf
fs
mov
test
adc
int
aad
push
mov
shll
fmul
mov
jnp
lahf
mov
ret
add
test
sti
imul
fisttpll
xchg
ret
pop
cmp
shl
pop
mov
mov
insl
cli
inc
dec
shll
int
pop
pop
roll
ljmp
js
inc
iret
xchg
cmp
jns
or
or
ret
jnp
xchg
popf
mov
test
lock
jb
inc
adc
arpl
xchg
add
mov
inc
lahf
cwtl
and
fs
shrb
notb
mov
rolb
pushf
add
out
add
dec
pop
imul
idivb
mov
std
fcmovnb
adcb
jg
adc
jns
xor
daa
adcb
cmp
ret
dec
or
mov
mov
shr
fistl
jl
rclb
cmp
ds
mov
xor
jb
std
or
outsl
mov
addr16
call
lret
mov
scas
enter
jg
lea
pop
sbb
xchg
push
pusha
stos
xchg
sarw
sbb
loopne
lods
in
idiv
ret
movsl
stos
inc
stc
in
cmpsb
insl
add
aam
pop
lcall
bound
pushf
or
loope
ficomps
sub
test
insl
stos
mov
xor
sti
popa
or
push
lods
mov
sub
sbb
lea
enter
aad
jecxz
pop
push
jmp
je
mov
xlat
xor
ds
bound
mov
cs
mov
cmp
out
pop
sbb
in
inc
adc
pop
outsl
bound
jl
imul
ret
mov
inc
mov
in
rcrb
add
shl
imul
jno
mov
push
mov
mov
and
das
mov
loope
mov
faddl
pop
fdivl
xchg
lock
mov
mov
mov
add
gs
dec
pop
in
lahf
push
push
push
add
mov
test
jmp
lahf
cmc
xor
lret
xor
xchg
les
insl
jns
mov
mov
xchg
jno
int
lock
xor
cmp
push
jp
add
shll
test
fldl
repnz
push
rep
lds
push
out
push
jge
adc
aam
xchg
out
imulb
xor
xchg
test
push
or
loop
repnz
in
push
sbb
fcmovnbe
dec
mov
daa
cwtl
adc
mov
sub
sahf
mov
outsb
lods
enter
mov
ret
mov
out
scas
sbb
sub
addl
dec
popf
out
ret
xchg
add
lcall
push
mov
adc
dec
fistps
adc
aad
std
mov
pushf
adc
inc
cmpsl
rcrl
inc
mov
pop
lret
cmpsb
into
sbb
sbb
sbb
cwtl
sbb
mov
loope
sub
lret
xchg
sub
daa
jp
add
shrd
fidivrl
lods
pop
lea
rcr
sub
jge
sbb
shll
pop
sub
stc
dec
fcmovnb
jo
rclb
pop
lock
xchg
enter
cmc
nop
cmp
out
inc
je
add
mov
mov
in
jnp
stc
lret
movsb
repnz
loop
add
lahf
inc
push
stc
mov
dec
subb
iret
sahf
add
mov
inc
std
add
fwait
pop
mov
outsl
mov
mov
aam
mov
or
cmp
clc
mov
sub
xor
daa
lods
xchg
clc
hlt
mov
dec
push
xor
xor
push
mov
iret
call
outsl
jmp
mov
adc
dec
push
mov
lea
mov
add
mov
shlb
hlt
movb
hlt
sbb
insb
rcr
js
push
out
and
mov
adc
xor
xor
mov
mov
cmpsl
and
adc
imul
or
das
stos
mov
imul
mov
dec
pop
mov
xchg
movsl
mov
push
mov
addb
xor
not
lcall
pop
cltd
xor
sti
mov
pop
dec
pop
add
rcrl
dec
int3
or
push
xor
pop
lret
or
dec
sbb
push
andb
nop
das
test
les
or
sti
sbb
jnp
mov
xchg
aad
mov
cmp
das
xor
dec
scas
mov
shll
sub
scas
fstpl
inc
mov
jae
sub
es
sbb
mov
rorl
mov
ret
call
test
add
jo
mov
mov
cmp
in
clc
daa
mov
lea
jmp
test
push
pop
dec
mov
pop
sub
cmp
cld
pop
push
in
lahf
sub
mov
cwtl
les
dec
pop
insb
mov
sti
clc
pop
notl
mov
shrb
cs
int
push
cmp
lock
jecxz
mov
mov
inc
xchg
call
lahf
inc
add
adc
mulb
xchg
or
or
adcl
mov
lds
mov
iret
push
add
pop
das
xchg
mov
jl
dec
sbb
mov
mov
fisttpl
dec
scas
jns
pop
mov
ds
pop
lahf
sbb
out
cld
jecxz
cmp
add
mov
jge
and
fsubrp
add
pop
hlt
cmp
and
shlb
lret
es
es
mov
and
ficoml
testl
sti
jl
pop
push
lcall
ljmp
shr
sldt
add
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
push
sbb
pop
jp
push
lret
xlat
pop
cmp
lcall
inc
and
add
adc
or
push
mov
and
pop
add
lret
loop
sbb
repnz
push
daa
clc
push
scas
add
mov
sbb
mov
int
or
cld
ss
aam
out
mov
mull
mov
lock
mov
push
js
in
dec
cmp
xchg
xor
aas
lcall
inc
lcall
xchg
mov
pop
cmc
sbb
inc
xor
cmp
mov
loopne
in
mov
imul
js
mov
jge
jbe
or
xor
jmp
mov
stc
adc
sbb
add
xchg
mov
mov
xchg
add
ljmp
dec
or
movsl
daa
icebp
shrb
pop
stos
arpl
leave
mov
fmull
xchg
xor
push
ljmp
mov
test
pop
bound
stos
jle
sub
mov
lods
stc
out
dec
mov
sbb
dec
cmp
or
cld
mov
call
inc
dec
rclb
dec
test
mov
inc
scas
cltd
adc
cltd
jne
sub
add
mov
lahf
inc
shl
mov
out
xchg
push
aad
mov
mov
outsb
imul
mov
test
mov
ja
imul
dec
cmp
daa
mov
jle
lods
xchg
aaa
lcall
mov
shl
add
pop
inc
add
mov
and
aas
push
push
outsb
mov
pop
dec
sarb
leave
shrl
stc
into
fcomps
xor
adc
push
ljmpw
push
lds
mov
imul
jnp
in
jno
pop
ljmp
and
sub
lds
push
xchg
jge
sahf
jle
lret
hlt
scas
mov
aam
sbb
cmc
les
shrl
pop
shrl
inc
aam
push
mov
cmp
or
and
fs
pop
and
mov
loopne
out
int
aas
test
sbb
shl
xor
mov
lods
js
ret
push
test
xlat
mov
insl
push
xor
and
cmp
mov
adc
stc
xchg
pop
push
mov
inc
mov
in
leave
outsl
test
inc
adc
sbb
xchg
push
dec
mov
mov
sub
aam
inc
xor
xor
xlat
xchg
fiadds
cmpb
and
pop
and
pop
test
sbb
mov
mov
and
movsl
bound
push
jmp
aad
push
push
mov
inc
mov
mov
pop
mov
mov
mov
jae
dec
popf
adc
jb
fimull
pop
mov
ljmp
xor
add
dec
hlt
add
rcrb
shrb
call
dec
xor
inc
mov
cmp
xchg
jbe
sbb
jg
push
jecxz
stos
ficoms
loopne
jge
mov
push
push
mov
mov
faddl
loope
ret
xlat
test
test
movsl
and
imul
push
pop
gs
xor
xchg
rorl
outsl
ret
mov
jbe
xorl
stos
sarl
push
jecxz
inc
mov
xchg
aas
sbb
mov
mov
cmp
cmc
lcall
mov
test
cmpsl
xchg
and
push
mov
imul
daa
add
sbb
ficompl
sbbb
aaa
xchg
pop
mov
scas
imul
xlat
adc
adc
hlt
push
roll
fwait
mov
popa
or
dec
imul
mov
lea
add
or
jl
push
outsl
loop
push
xor
jmp
sbb
dec
xchg
pop
sub
mov
test
in
dec
enterw
xor
data16
pop
aad
imul
mov
inc
cmpsl
jae
cmp
cwtl
int
inc
cmp
insl
mov
jle
and
xchg
repz
jle
adc
cmpsl
pop
mov
lahf
insl
xor
cmp
enter
in
frstor
ss
insb
xchg
or
cmp
sub
push
lcall
icebp
arpl
in
faddp
mov
lods
ret
sub
sbbb
push
nop
push
jae
mov
inc
mov
imul
loope
addl
aas
mov
andl
dec
dec
test
clc
fistl
inc
iret
rcl
adc
and
mov
and
pop
cs
sbb
jmp
loopne
fsqrt
jmp
in
ss
movsb
ficoms
mov
pop
ds
movsl
cmp
std
and
subl
cmp
bound
dec
cmp
xor
ss
into
jbe
sbb
xchg
sbb
inc
cvtps2pd
dec
lahf
dec
inc
xor
hlt
shrb
mov
icebp
push
inc
hlt
fcompl
rcl
icebp
dec
outsl
roll
sarl
shlb
jns
rorb
sti
fwait
dec
mov
push
pushf
mov
jg
std
and
push
insl
mov
lods
add
dec
adc
das
cmp
sub
jno
dec
sbb
pushf
cltd
ret
in
xchg
fdivrs
stc
aaa
add
mov
pop
shl
jl
sbb
sbb
mov
hlt
mov
cmpb
pop
fnsave
jmp
jbe
dec
mov
lret
pop
pop
dec
mov
mov
mov
pop
into
setle
popf
hlt
stos
jno
lret
ret
mov
sbb
pop
xor
nop
push
cltd
pop
test
push
pop
sahf
dec
ror
scas
stc
int
in
xlat
ja
jecxz
pop
mov
pushf
orb
jg
loopne
fildl
lods
dec
notb
sbb
out
imul
push
cmc
out
lds
dec
mov
and
mov
mov
mov
push
dec
nop
jno
fdivl
push
or
rolb
les
dec
sahf
add
jp
clc
sbb
aaa
cmp
mov
adc
dec
push
loope
xchg
cmpsl
and
pushf
and
fstpl
arpl
push
push
int
mov
sub
mov
push
pop
es
cmpsl
inc
cwtl
mov
aaa
lret
in
icebp
call
stos
push
adcb
lret
cld
inc
icebp
pop
test
loope
mov
ret
test
ret
rolb
js
push
push
leave
and
xor
insl
ljmp
hlt
test
mov
xchg
outsb
push
pop
mov
fbld
insb
scas
inc
pop
pop
mov
movsl
imul
clc
push
lret
mov
imul
test
mov
mov
dec
popa
cmpl
and
push
pop
into
scas
and
rorl
in
stos
cmp
xchg
adc
fldl
lret
adc
mov
inc
test
loopnew
movq
nop
xchg
stc
and
clc
xor
jbe
dec
jae
cmp
fwait
repz
sarb
rcrb
dec
insb
icebp
mov
lods
nop
jp
dec
ficompl
repnz
dec
xchg
lahf
das
mov
cmc
es
sahf
and
mov
in
fimuls
rcrb
push
or
sbb
mul
js
adc
add
mov
pop
flds
mov
sbb
enter
leave
lahf
sbb
add
dec
cmp
sub
jle
dec
and
cmpsl
mov
scas
adc
cltd
es
ja
lds
cltd
nop
mov
mov
nop
fsubs
push
aam
ss
xchg
addr16
sbb
iret
jmp
jne
jno
and
fisttpll
vshufps
xor
scas
or
push
mov
ss
incb
rorb
xchg
push
fcoml
mov
adc
add
ret
scas
rcll
jmp
stos
fsubs
orb
in
xor
test
mov
mov
xlat
pop
out
aaa
ffree
inc
add
adc
les
notl
sbb
fsubl
and
shlb
aad
lods
ret
test
mov
clc
mov
push
mov
pop
jo
dec
jae
inc
jp
ja
cltd
pop
aam
jns
push
mov
jecxz
ljmp
inc
cmp
pop
sbb
imul
jno
jnp
movsl
push
mov
mov
fnstsw
mov
ss
shrl
pop
ret
sbb
pop
pop
jbe
xchg
sbb
sbb
ss
pop
xor
mov
xor
dec
cmpsb
sahf
push
push
pop
xor
or
jg
push
lahf
cmp
mov
stos
jo
xorb
sub
and
stos
mov
cmpsb
pop
scas
jns
or
dec
pop
xchg
nop
ljmp
out
scas
std
out
xchg
jmp
and
scas
ja
rorb
pop
sub
add
push
or
ljmp
fdivs
dec
ja
aam
jge,pt
sbb
data16
inc
mov
dec
stc
cli
sahf
stos
jp
aaa
fs
push
adc
cwtl
push
cmp
jnp
mov
arpl
test
pop
xchg
lcall
ljmp
cmpsl
and
xor
loopne
push
mov
ja
cmp
xchg
push
inc
or
aaa
idiv
pusha
lcall
push
enter
mov
sbb
add
xorb
cmpsb
push
mov
mov
nop
out
cltd
jmp
push
adc
test
stos
mov
scas
sahf
into
xchg
add
test
mov
mov
mov
mov
xor
xchg
or
xchg
cwtl
add
sahf
or
outsb
repnz
pop
lret
outsb
sub
push
pushf
mov
sbb
jae
cwtl
push
cmpsl
call
out
pop
pop
outsl
cmc
xorb
imull
insl
shlb
inc
notl
popa
adc
std
andl
rcrl
xchg
in
lcall
push
sub
scas
faddl
sbb
popa
mov
repnz
cmp
jbe
shlb
pop
mov
out
push
push
mov
mov
dec
ja
mov
pop
cmp
sbb
cmp
fistpll
sub
inc
fiaddl
and
sbb
loope,pn
lahf
sahf
mov
xor
cmpsl
fwait
pop
sbb
xchg
bound
push
into
js
mov
hlt
enter
xor
aad
jp
shlb
loope
dec
inc
or
in
pop
addb
insb
mov
dec
mov
mov
sbb
arpl
jle
loopne
shlb
popa
hlt
ds
cltd
cs
dec
sub
nop
lods
jl
xor
add
lret
jae
pop
push
or
sbb
fwait
repz
mov
adc
adc
bound
push
fldcw
push
test
mov
cmpsl
mov
add
mov
cltd
or
jge
imul
adcb
jb
mov
push
pop
add
dec
sub
xor
movsb
lahf
xor
dec
pop
add
push
push
fistpl
aas
pop
mov
ljmp
negb
adc
mov
stc
mov
imul
mov
pop
or
inc
scas
fxch
xor
lock
lock
loopne
push
cmp
or
mov
dec
xchg
push
pop
filds
cmpsb
addb
rolb
adc
sbb
outsb
xchg
xlat
xor
fwait
xchg
cmp
inc
push
jae
mov
cmpb
xchg
rcll
lods
adc
xor
cwtl
je
cmp
add
sub
jecxz
push
pop
sbb
sbb
dec
ret
mov
and
fcomp
jg
dec
add
test
jp
jo
jle
dec
cmp
int3
mov
xor
outsb
imul
sub
push
xor
mov
inc
test
xlat
mov
jg
test
std
sti
push
je
scas
das
add
stos
sbb
mov
pop
and
roll
mov
cmc
or
std
mov
xor
in
outsb
push
enter
js
scas
nop
mov
sub
xchg
pushf
pop
mov
nop
imul
int
mov
add
adc
add
mov
pop
scas
iret
jnp
dec
mov
leave
shlb
ret
pushf
popf
cs
nop
add
gs
jne
rol
pop
xor
mov
pop
out
andl
push
jge
or
mov
adc
mov
aam
cmp
adc
jp
aad
add
ss
rcr
imul
push
pusha
sub
sub
shl
inc
adc
xchg
sub
adc
xchg
fistpll
dec
incl
ljmp
fmul
in
and
popa
in
add
mov
shll
cmp
pop
push
fldt
das
push
fmul
cs
dec
imul
lahf
adc
or
push
or
dec
xchg
xchg
gs
call
mov
mov
fiadds
xor
lods
mov
pop
pop
dec
imul
imul
aas
lock
dec
inc
mov
dec
and
jne
into
jp
push
push
rcll
mov
mov
pusha
in
test
mov
in
mov
bound
xchg
mov
push
xchg
dec
arpl
notl
or
mov
int3
ret
lcall
mov
mov
das
xor
push
pop
daa
pop
xor
mov
jno
cmp
outsl
mov
loope
stos
xor
xchg
adc
lock
dec
mov
cmp
rorl
sbb
sub
adc
pop
cld
push
xor
sbb
fisubrs
or
mov
retw
push
mov
or
and
xor
lods
sbb
or
jo
xor
stos
int3
outsb
push
pop
rcll
loopne
push
cmp
mov
xor
nop
mov
lods
daa
cmpsb
and
cmpsl
mov
or
xchg
sbb
mov
mov
push
xor
lahf
jae
add
mov
mov
adc
dec
int3
nop
mov
out
fstps
mov
inc
ljmp
in
xlat
push
je
cvtps2pd
in
dec
int
mov
or
add
xchg
pop
sbb
xorb
in
js
lret
loope
out
cmp
and
sub
dec
loope
out
icebp
sbb
pop
push
jg
imul
test
lcall
imul
xor
pop
push
sbb
cmp
fstpt
pop
jnp
out
lods
cmp
mov
push
dec
cmpsb
mov
sub
xchg
push
cli
loop
push
inc
repnz
jb
das
jb
fsubp
mov
push
adc
sbb
dec
lret
dec
inc
inc
pop
cmp
add
nop
adc
pop
add
movsb
lcall
push
dec
cmp
pusha
sbb
fmull
adc
or
pop
js
pop
in
dec
pop
sub
inc
arpl
xor
sbb
test
dec
jl
push
leave
addl
out
xor
je
inc
cmp
inc
pop
pop
leave
dec
mov
mov
hlt
imul
push
mov
fmull
mov
in
xchg
xchg
pop
test
add
jnp
cltd
push
dec
pop
push
ror
jl
or
repz
mov
mov
in
test
or
mov
scas
or
test
inc
and
sbb
add
or
scas
arpl
pop
sbb
dec
mov
arpl
ret
imul
mov
sti
mov
and
fs
cs
pop
outsb
adc
cmp
fildl
jle
jmp
cmpsb
mov
mov
sbb
xchg
push
jo
lret
mov
in
mov
mov
inc
pop
fimuls
movsb
outsb
fs
lods
into
addl
sub
lock
repz
pusha
jp
ss
mov
leave
sub
jmp
jp
repz
mov
bound
jbe
stos
mov
mov
in
xor
sbb
and
jecxz
mov
mov
mov
hlt
insb
stc
xlat
lret
inc
adc
sahf
push
enter
adc
sbb
mov
xchg
cwtl
lar
call
sbb
aas
jge
xchg
cmp
sbbb
dec
jecxz
xchg
push
push
or
xchg
mov
add
pop
or
test
dec
dec
cmp
call
in
and
sahf
sub
pop
lds
inc
dec
sti
dec
push
inc
shrl
hlt
xor
fcmovbe
enter
aam
mov
ficoms
ds
or
mov
iret
add
adcl
push
je
test
stos
xchg
xor
inc
loopne
lock
out
dec
sbb
mov
mov
jp
sbb
jnp
cwtl
ljmp
in
iret
mov
bound
daa
cmpsl
and
add
daa
mov
and
aas
add
jl
test
shlb
sbb
out
sbb
test
cmp
push
aam
cs
jg
jns
cltd
cmpsl
xor
lret
mov
mov
repnz
pop
loop
jmp
lea
loop
and
inc
mov
mov
mov
cmp
fldt
ret
cmpsl
frstor
sti
hlt
dec
lods
hlt
enter
cmp
push
xchg
mov
cmp
xchg
sub
mov
mov
test
test
lds
cmc
and
addr16
fs
addl
roll
dec
fimull
aas
notl
ljmp
cwtl
mov
mov
arpl
jmp
mov
inc
jne
fisttpl
shrb
cld
cwtl
mov
jp
cmpsb
adc
stos
pop
add
outsb
mov
and
rcrl
int
mov
lods
jnp
rcrl
jns
lret
std
mov
rcrl
push
sahf
test
sub
lret
dec
dec
leave
icebp
xchg
dec
cmpsb
push
in
dec
push
aad
jno
and
outsb
cltd
and
push
xchg
push
inc
test
mov
xchg
xchg
pushf
and
or
out
fmul
jmp
mov
push
jbe
push
sbb
xor
scas
fsub
adc
in
cltd
in
jae
mov
mul
sbb
dec
les
inc
ljmp
sub
fcoms
or
pop
pop
popa
std
test
mov
xor
inc
cld
insl
sbbb
push
xchg
out
scas
movsb
inc
add
stos
in
add
jmp
sbb
and
call
lcall
pop
jmp
sti
addr16
xchg
in
fsubs
add
xchg
cmpsb
push
cmc
inc
xchg
inc
cmc
ret
cltd
icebp
js
or
jmp
rolb
ret
int3
push
cmp
sbb
push
int
pop
push
and
pop
jg
sub
and
out
icebp
and
jmp
add
fdivr
outsb
fs
repz
fmuls
stc
and
into
push
push
sub
bound
adc
push
std
pop
popf
push
cmp
aas
xchg
js
in
cmpsl
sub
pop
ja
test
test
cmpsb
cwtl
mov
mov
cmp
pop
mov
test
fsubr
mov
inc
lahf
xor
sbbl
add
lock
addr16
add
inc
enter
and
popl
pop
jg
popa
jbe
sbb
mov
test
sahf
out
dec
call
push
cmp
stc
test
pop
mov
push
inc
jo
sbbb
jg
adc
in
mov
fdivl
fists
jnp
and
mov
cltd
push
mov
mov
push
loop
jne
mov
inc
fstps
push
mov
ret
mov
popf
jno
xor
fsubrs
repnz
test
xchg
movsb
jmp
jae
repnz
mov
jae
pop
jno
daa
pop
mov
nop
stos
rcr
in
adc
test
movsb
and
test
jmp
jg
push
and
mov
pop
outsb
add
aas
movb
adc
es
lock
adcl
pop
popa
pop
sahf
imul
jp
jmp
fst
pop
pop
aam
pop
stos
mov
aad
add
inc
xor
xor
lods
pop
es
or
pop
imul
push
adc
sbb
cmp
movb
lods
ja
xchg
hlt
cmp
xchg
cmp
shl
fcompl
jg
cmpsl
dec
sahf
mov
xchg
jb
and
mov
lcall
les
push
fstps
adc
aas
inc
cld
dec
ret
and
aas
pop
das
sbb
shlb
adc
xor
inc
jae
xlat
mov
in
add
pop
fwait
lcall
push
mov
mov
fistpl
aas
in
mov
popa
pop
ret
sbb
fiaddl
jmp
lds
lret
cs
or
aas
and
adc
mov
sbb
or
movsl
icebp
bound
mov
das
dec
decl
mov
or
hlt
dec
jp
loopne
enter
add
add
repnz
outsl
or
xlat
jg
and
jg
leave
ret
popa
in
rorb
inc
test
or
fidivrl
movsb
inc
mov
nop
adc
je
inc
push
cmp
sbb
push
mov
sbb
dec
clc
pop
out
xchg
pop
es
sbb
sub
cwtl
or
fsubrs
or
mov
dec
xchg
mov
arpl
mov
mov
std
add
sbb
xchg
cmp
push
aad
or
dec
dec
gs
xor
xchg
xchg
cwtl
dec
fisubl
iret
pop
lods
jmp
add
cltd
jle
gs
add
adc
rcl
dec
sbb
xor
mov
dec
push
outsb
dec
cmp
andb
push
cmp
cs
fsubr
mov
sbb
jne
mov
daa
xchg
fadds
or
scas
inc
cmpsl
or
lock
outsb
adc
push
mov
test
or
arpl
sti
ljmp
adc
add
mov
xor
fwait
pop
jp
push
jle
mov
and
ss
inc
jecxz
sbb
clc
dec
aam
neg
add
inc
out
mov
cmpsb
cmp
inc
jnp
imull
in
or
repz
cmp
insb
je
sti
and
test
xchg
rcll
fs
sub
fdiv
pop
pusha
lret
xor
adc
iret
inc
lcall
mov
inc
pusha
rcrb
and
sub
cltd
sub
fiadds
mov
enter
stos
jb
push
jo
sub
pusha
clc
xchg
xor
imul
mov
fldl
aad
mov
jo
dec
mov
aad
popa
ja
add
mov
aas
cld
fcoms
mov
imul
lods
sbb
xor
mov
in
push
pop
and
pop
repz
sarl
xchg
outsl
dec
and
mov
xor
movsl
cwtl
sbb
jl
std
stos
jmp
ret
or
push
inc
jle
pop
cli
cltd
dec
jmp
dec
daa
iret
inc
mov
orb
add
ljmp
or
mov
mov
test
jne
jb
aaa
adcb
mov
xorl
mov
mov
push
dec
mov
addl
inc
loopne
xchg
test
lods
push
cmc
jbe
test
mov
faddl
pop
or
push
scas
mov
mov
in
xchg
je
pop
arpl
or
test
mov
fsubrs
negl
imul
or
in
push
inc
and
sub
hlt
and
lcall
idivb
sbb
ret
fisubrl
pop
adc
lret
fwait
and
ds
or
pusha
adc
jae
mov
jg
ljmp
add
xchg
adc
mov
lods
jnp
mov
pop
rol
sbbb
cmpsb
sub
cmpsb
pop
pop
inc
imul
imul
js
jecxz
add
popa
je
fwait
je
mov
xchg
push
popf
push
sub
cs
xchg
mov
pop
jbe
hlt
sub
ret
sub
and
sub
shrb
daa
or
je
jbe
fcmovne
jne
and
mov
push
imul
push
stos
mov
data16
inc
js
andl
cld
mov
mov
or
call
xchg
and
add
add
ss
mov
and
xor
sub
add
pop
movsb
testb
adc
fistl
lods
js
fisubs
js
lcall
and
adc
cmpsb
mov
repnz
cld
mov
cmp
cmp
adc
pop
fs
rclb
mov
mov
push
inc
jb
inc
fistps
xchg
rcrl
push
mov
push
test
pop
xor
xlat
scas
frstor
out
add
roll
push
cmp
pop
test
mov
mov
pop
pop
popf
or
movsl
xchg
in
loop
cmp
ret
lock
mov
cmp
dec
mov
popf
and
add
aam
push
int3
sbb
xor
shrb
sub
lret
nop
push
sub
test
dec
das
rclb
adc
push
sbb
cmpsl
add
cmpsb
dec
cli
push
cli
subl
mov
push
mov
jno
shlb
lret
movsb
cmp
aam
inc
xlat
add
fs
inc
dec
and
cld
push
push
lret
or
in
mov
pop
xor
jp
mov
mov
in
les
testb
jb
icebp
aam
jl
insb
sub
iret
mov
sbb
outsb
lods
pop
cld
push
shll
or
ljmp
cmpsl
cmp
cltd
add
cmp
cmp
jb
arpl
sub
xor
call
shrl
or
sub
push
xor
push
ds
fadds
popf
mov
rcr
dec
ja
cmp
jbe
push
loop
popf
mov
pop
sub
stc
mov
ja
xchg
fwait
push
push
rcr
das
jae
cmpsb
fstpt
xchg
push
lret
inc
test
adc
lahf
inc
or
test
inc
js
sub
add
ds
ss
paddsb
sub
inc
ret
out
lahf
jno
pop
mov
movsb
sub
test
out
jo
xchg
and
imul
stos
jmp
cmpsl
cld
xlat
lret
das
pop
jne
jns
dec
push
mov
or
pushf
jg
outsl
dec
mov
clc
shrb
ja
rcrb
add
jnp
out
push
jge
jb
inc
out
cmp
inc
in
xchg
test
out
mov
jecxz
pop
call
cmp
popf
or
push
sub
mov
push
jecxz
int3
sti
loopne
incl
or
stos
test
aaa
movsl
mov
cmp
mov
js
and
hlt
addr16
mov
or
cmp
mov
and
cmc
rcll
in
out
aaa
or
lcall
xor
cwtl
imul
repz
lea
divb
dec
imul
cltd
jge
push
dec
xchg
fidivl
rolb
lea
adc
and
mov
int3
mov
ss
mov
mov
ljmp
fadds
push
jecxz
xchg
xor
mov
and
mov
scas
mov
loop
in
aam
dec
lods
mov
f2xm1
push
or
add
mov
pop
aad
push
out
fwait
pop
pop
and
aad
inc
mov
inc
maxps
mov
add
dec
mov
adc
add
jmp
jecxz
jne
sub
lahf
inc
std
mov
stc
sub
enter
aam
jmp
jno
and
loop
pop
dec
mov
xor
mov
and
adc
stos
out
lahf
and
mov
cltd
xor
mov
sbb
addr16
lcall
mov
mov
mov
jnp
repz
sbb
inc
imul
add
push
mov
jae
adc
movsl
rclb
sbb
pop
jge
popa
pop
cld
cmp
push
out
xchg
mov
mov
lret
jae
dec
sub
cli
aad
mov
xchg
and
ds
cmpsl
mov
lds
mov
adc
lods
or
orl
pop
insl
movsb
cmovbe
pop
xchg
mov
int3
push
repnz
daa
mov
in
hlt
orl
cmp
out
cltd
inc
lods
daa
sub
dec
imul
mov
xchg
out
scas
mov
jns
push
in
mov
push
mov
sbb
inc
xor
pop
mov
push
pop
cmp
dec
mov
out
test
cld
testb
push
out
inc
pop
jb
cmpsl
or
ret
sbb
cmp
pop
scas
dec
sbb
outsl
mov
enter
sarl
lret
cwtl
cmc
xchg
mov
sub
pop
push
jmp
xchg
mov
pop
enter
sub
out
nop
lock
enter
adc
mov
dec
mov
lret
loop
jecxz
xor
cli
pop
mov
xchg
daa
mov
xor
xchg
shll
dec
pop
pop
rcll
or
jp
stos
ret
mov
arpl
pop
mov
or
movsb
mov
push
ss
imul
clc
pop
inc
lods
arpl
jb
jg
sub
cmc
push
push
jg
sub
push
dec
pop
hlt
daa
in
inc
mov
lods
mov
inc
dec
and
jmp
push
xor
cld
test
dec
dec
push
jno
dec
push
pusha
shrb
clc
cmp
stos
dec
push
pop
xorl
mov
stos
xor
mov
dec
mov
adc
in
xchg
dec
stos
mov
jecxz
sti
lahf
mul
sbb
xchg
and
xlat
jae
outsl
and
pusha
pop
pop
stos
outsl
push
insb
sahf
sti
push
jecxz
xchg
cmpsb
jno
test
dec
mov
insb
mov
dec
imul
ss
xchg
xor
mov
sbb
pusha
jp
xchg
mov
movsl
jl
cli
jb
mov
lcall
dec
repnz
inc
popf
dec
les
popf
addl
inc
jno
movsb
xchg
ds
mov
loopne
add
jle
aad
test
fs
mov
fucom
push
adc
mov
iret
scas
inc
cmpsl
out
bound
pop
push
pop
inc
sbb
pop
push
mov
and
movsb
out
nop
loopne
std
sar
sub
test
mov
daa
push
out
ret
mov
outsl
mov
sbb
mov
popf
mov
add
and
mov
fildll
mov
outsl
push
pop
lods
jmp
shl
or
notb
fs
jbe
pop
jnp
add
mov
lret
imul
mov
and
lods
mov
enter
test
test
fldt
sub
push
xchg
jo
xchg
push
pusha
jne
mov
lods
ja
mov
fildl
aaa
scas
mov
sbb
cmp
hlt
inc
es
inc
add
in
inc
mov
shl
shlb
mov
pop
dec
iret
daa
stc
push
push
lea
sbb
outsl
or
popf
fsub
aas
movsl
sbbb
pop
sub
std
std
cmpsb
jbe
pop
leave
mov
out
pop
insb
call
jg
popf
inc
lret
pop
pop
pop
inc
je
xchg
cmpl
push
cmp
inc
or
add
sbb
add
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
inc
add
jp
pop
jp
inc
leave
scas
out
into
jmp
or
pusha
sub
jle
addr16
sti
inc
std
mov
pop
push
movsl
inc
mov
push
je
movsb
add
mov
add
into
adc
push
mov
cli
cmp
sub
push
and
in
xor
sbb
out
negb
test
push
inc
pop
out
adc
ret
mov
add
cs
pop
scas
push
mov
movsl
arpl
adc
das
jle
repz
jb
lods
dec
xchg
xlat
pop
sub
and
pop
scas
fstpt
cmp
pop
dec
mov
imul
cs
jge
or
push
jmp
jmp
adc
aam
xor
lods
out
xchg
or
in
adc
push
push
adc
aad
aaa
push
fwait
mov
daa
ds
stc
ficoms
in
fadds
stos
adc
sbb
inc
and
ltr
out
scas
sbb
into
stos
idivl
sbb
cs
insb
shrb
pushf
cmp
je
mov
pop
das
loop
lcall
dec
iret
add
scas
adc
ss
dec
lret
and
repnz
mov
dec
fisubs
movl
aas
ficoms
mov
les
pop
int3
mov
sub
xchg
pop
fcom
int
cltd
sub
pop
out
ret
in
inc
mov
mov
rorb
aad
push
push
pop
dec
ret
in
lcall
leave
xchg
data16
inc
cmp
repz
scas
inc
iret
and
cmpsb
or
es
ret
dec
mov
xor
xchg
lret
fcoms
faddl
cs
rorl
ss
inc
mov
cmp
cs
cmp
dec
cld
adc
dec
cmp
xchg
mov
inc
dec
repz
xlat
sbb
les
and
dec
xlat
out
lds
sbb
jmp
xchg
xchg
jns
mov
and
or
and
mov
sbb
dec
inc
hlt
add
or
xor
sbb
xchg
cmp
push
inc
aad
sub
ja
pop
sti
xchg
cmp
push
in
dec
jle
cs
cmp
out
dec
gs
adc
dec
mov
or
adc
negb
jp
push
cmpsl
xlat
jle
and
sbb
gs
repz
in
mov
test
test
in
loop
not
xchg
test
outsb
es
leave
xchg
push
nop
bsf
inc
clc
ss
jp
pop
and
andl
sub
push
clc
pop
outsl
xchg
jp
xchg
cmp
enter
mov
adc
xor
gs
add
repnz
lret
push
gs
mov
rol
add
iret
add
aaa
jecxz
fsubl
scas
ja
cmp
cmpsl
int3
pusha
imul
push
and
pop
emms
sti
sub
movsl
cmp
out
mov
insb
xor
cwtl
popf
lds
out
movl
inc
pusha
out
fbld
jno
pop
or
jp
sti
adc
jle
or
inc
mov
call
sbb
testl
dec
mov
pop
clc
xor
add
add
or
int
xor
addl
fs
jmp
and
sub
add
xlat
lock
mov
dec
xchg
and
adc
repz
dec
inc
loope
pop
insb
test
cwtl
fcmovbe
shll
jno
and
push
and
adc
mov
jns
sub
int3
scas
sbbb
inc
icebp
ss
in
jg
xchg
xor
or
fldcw
or
rorl
mov
pop
sbb
xchg
addr16
jns
mov
into
adc
fcmovnbe
std
mov
cltd
xchg
mov
xchg
and
dec
notl
mov
jnp
add
fsubs
sbb
mov
cli
add
lcall
dec
imul
lods
bound
inc
xchg
add
lock
xchg
cmp
dec
and
pushf
mov
mov
jecxz
sub
cmp
stc
sbb
sub
jb
mov
inc
sub
jno
jo
loopne
cmp
adc
lods
sub
lret
dec
ja
pop
lods
test
mov
mov
mov
stos
pop
aam
loop
icebp
sub
or
fdivs
add
int3
mov
cli
dec
fwait
call
enter
dec
enter
sub
inc
inc
lock
popf
shrb
std
scas
sub
xchg
cmpl
dec
shrb
cmpsl
add
pop
sub
xor
or
daa
xor
pop
aas
mov
fwait
dec
ds
pushf
popa
adc
lret
out
sbb
nop
aas
arpl
push
lret
inc
mov
jne
mov
sub
push
imull
mov
daa
pushl
pcmpeqb
jle
add
adc
cltd
lcall
xchg
adc
mov
stc
or
ret
or
icebp
jae
dec
mov
and
jns
or
mov
int
ret
mov
loopne
in
jp
ja
sbb
insb
repnz
or
out
and
mov
loope
sti
mov
sub
adc
ja
jno
mov
xchg
push
into
mov
push
cli
push
movsl
xchg
es
ret
js
lods
push
fsubl
sbbb
sti
push
or
adc
out
dec
xchg
or
insl
rcrl
dec
call
outsl
lds
push
mov
xorb
xchg
pusha
icebp
insl
pop
nop
test
mov
dec
mov
cltd
mov
cmc
icebp
in
xchg
adc
in
adc
inc
push
cmp
cmpsb
and
sti
mov
or
test
fcomip
dec
data16
or
and
jle
or
pop
sahf
test
cld
imul
lret
add
push
inc
lret
mov
push
js
pop
leave
and
scas
cmp
cmp
mov
inc
popa
or
popf
stos
push
sbb
pop
lea
imul
fistl
stc
movsl
ss
ret
and
dec
repnz
std
stos
jae
cmp
cmc
loope
outsb
and
add
pop
je
xor
inc
ljmp
xor
sub
pop
in
mov
inc
lahf
fisubs
incl
xchg
add
push
pop
pop
jb
lret
jecxz
lods
or
ss
inc
cmp
cmp
je
dec
inc
add
jmp
and
xor
pop
adc
ds
dec
mov
inc
add
popa
out
sbb
hlt
out
adc
dec
popa
sub
mov
inc
call
movsb
mul
mov
push
dec
add
jmp
adc
pop
or
push
pop
int3
rcr
lcall
test
scas
push
jecxz
xchg
xor
sbb
les
cltd
shl
mov
andl
cmc
int3
mov
sbb
pop
lret
nop
cwtl
leave
pop
loope,pn
or
and
cmp
test
jno
lds
cmp
shl
mov
je
cmpsb
outsb
cs
and
testb
outsl
xor
nop
int3
dec
mov
add
dec
test
cmp
cwtl
loop
mov
mov
mov
mov
cld
dec
cmpsl
and
hlt
aas
or
push
or
pop
or
ljmp
push
aam
mov
repz
stos
add
adc
sub
addr16
mov
or
mov
xchg
divb
fcmovnu
mov
or
stos
jnp
xor
test
pop
fwait
mov
push
pusha
pop
decb
dec
xor
mov
pop
xor
cs
jne
push
adc
bnd
ret
mov
pusha
pushf
punpckldq
aad
jo
inc
inc
pop
cmp
xchg
jmp
jg
into
cmc
jle
ficoms
sub
xchg
mov
dec
push
addl
jno
aas
out
insb
push
imul
xchg
or
jl
bnd
and
pop
ds
cmp
iret
dec
jns
mov
pop
jle
inc
inc
or
inc
push
and
sbb
add
pop
imul
mov
push
fstpt
push
push
add
cmp
ret
sbb
inc
mov
cmp
pop
cwtl
mov
rcll
cmc
mov
xor
cmpsb
push
rol
lret
mov
cld
mov
scas
ss
arpl
je
rcll
leave
test
pusha
or
sub
int
inc
loop
mov
and
inc
negw
mov
mov
call
les
decl
fnstsw
sub
les
jmp
mov
ds
insb
adc
into
pop
gs
lahf
int
nop
ret
add
or
pushf
mov
dec
sahf
lock
dec
and
cmpsl
jbe
xchg
pop
xor
ret
aad
and
push
shr
sbb
cmc
jg
xchg
nop
pop
aas
cmp
push
ds
mov
std
dec
movsb
sti
cmp
repz
cli
fldl
sahf
ficomps
dec
and
and
repnz
shl
push
jmp
fisubrs
and
push
scas
je
shll
scas
stos
mov
jecxz
jbe
das
cwtl
dec
push
pop
dec
xchg
nop
pop
repnz
jns
sub
mov
cmpb
pop
das
daa
jge
mov
dec
decl
pop
shrb
lock
mov
push
fsubp
adc
xor
pop
enter
xlat
out
and
push
leave
jp
inc
sahf
daa
pop
xchg
push
shlb
mov
adc
add
mov
aas
sti
in
test
stos
cwtl
xchg
inc
jg
lock
outsl
lods
ja
sarb
jp
iret
rorb
jmp
leave
lock
adc
dec
xchg
ret
insl
ljmp
clc
add
mov
das
cmp
or
fidivl
fs
fucom
aas
adc
or
push
ds
inc
stos
mov
mov
adc
in
jbe
jmp
sub
dec
dec
icebp
mov
test
sub
iret
das
xor
and
mov
stos
pop
aad
je
out
xor
push
fwait
in
sbb
je
mov
gs
mov
aad
scas
mov
lock
xor
int
arpl
xchg
das
mov
sahf
jge
fmul
jns,pt
andl
fmuls
mov
pushf
dec
jle
xchg
addr16
cmc
loopne
loope
bt
or
xor
jbe
in
add
push
mov
jae
xor
xor
ss
pushf
popa
and
cmpsl
jl
mov
mov
test
daa
cmc
and
imul
hlt
mov
pop
jmp
pop
in
in
in
pop
clc
mov
ffree
mov
mov
imul
mov
aaa
outsw
lds
pop
jp
fnsave
scas
or
orl
cmp
call
xor
adc
xchg
sub
pop
jl
adc
ret
notl
fisubl
cmp
out
sahf
int
cmp
aad
int
scas
inc
mov
into
mov
int3
mov
push
dec
mov
cs
push
jbe
fwait
stos
push
call
inc
jmp
adc
ret
sbb
out
add
pop
mov
dec
push
mov
adc
loope
sbb
cmpsl
mov
mov
xchg
ds
int3
mov
repnz
ret
repz
and
or
out
jo
pop
bound
jl
test
loopne
std
scas
push
loop
jl
les
lods
jae
ror
lahf
fcomps
aas
and
pop
ljmp
cmp
daa
jne
jmp
mov
flds
scas
mov
pop
mov
dec
fndisi(8087
mov
push
xor
xor
pop
push
xchg
out
push
inc
ss
fs
lahf
xchg
sub
sahf
jmp
cwtl
jge
fidivrs
xor
pushl
cmpl
cmp
decl
repnz
xor
mov
cli
adc
imul
outsb
xlat
mov
ret
sub
jle
jp
push
cmc
push
outsl
repz
inc
inc
sbb
mov
push
cmpsl
cmp
mov
pop
add
sarl
pusha
add
lods
test
pop
or
int
jl
mov
add
jge
jne
xchg
subl
cmp
imul
and
aaa
cmp
mov
xor
insl
dec
movsb
pop
jb
pop
scas
es
lods
push
or
clc
mov
ss
xchg
xchg
out
jo
sbb
in
cmp
popf
fldenv
mov
aaa
adc
jo
lcall
push
add
cwtl
cmp
pusha
test
xchg
mov
xchg
jmp
adc
fs
xor
mov
adc
or
add
mov
sub
std
add
dec
mov
mov
lock
pop
push
mov
bound
mov
sub
sub
out
push
in
das
or
xlat
push
or
or
push
ja
sbb
jae
lret
sub
out
repnz
xor
rclb
mov
sbb
push
cmp
mov
pushf
push
mov
sbb
loop
lret
aam
jg
jl
fwait
xlat
xor
xor
rclb
push
bnd
mov
mov
pushf
test
cmp
jle
call
xchg
xchg
jo
cmpl
pop
pop
lahf
xchg
jno
add
clc
ds
and
add
or
mov
icebp
or
popa
into
adc
flds
loope
add
jne
inc
fsubs
out
fistpl
sub
mov
insl
imul
sub
outsl
cmp
dec
scas
sub
cmpsb
leave
mov
addl
mov
mov
inc
adc
jns
mov
push
xorb
scas
jl
imul
mov
ds
mov
out
dec
into
xlat
sbb
aas
loopne
frstor
jbe
icebp
xchg
bound
popf
das
std
lds
in
mov
sbb
push
cmp
pop
xor
sub
inc
ljmp
mov
add
adc
mov
mov
add
jmp
aas
jecxz
mov
lahf
pop
xlat
fcompl
mov
dec
nop
jmp
hlt
inc
cmp
dec
outsl
cs
int3
outsb
add
je
ds
lds
mov
cmp
ficoms
test
negl
lahf
jge
xchg
add
dec
xor
xor
xchg
rclb
sbbb
pop
movsl
lahf
mov
imul
xchg
push
mov
jo
jne
lret
pusha
adc
stc
sbb
xchg
xchg
push
ja
mov
sarl
loop
popa
cld
lcall
add
or
sbb
setle
inc
xor
sahf
fiaddl
adc
fmul
cmpsb
jbe
or
lea
test
popf
subl
mov
cli
xchg
inc
jle
aas
rdpmc
stos
sub
lock
mov
rcll
sub
fsubp
pop
imul
pop
adc
inc
sub
cmp
arpl
sbb
int
arpl
pop
inc
enter
add
jg
or
mov
mov
xchg
and
bound
fidivs
push
sahf
cmp
ret
mov
data16
and
dec
or
mov
inc
sbb
sub
add
sbb
xchg
xor
cli
enter
cmc
roll
stos
shlb
mov
push
xor
add
out
hlt
enter
out
mov
test
cmc
jl
xor
push
nop
jns
sbb
push
add
icebp
cwtl
push
pushf
call
scas
in
xchg
fldenv
dec
pminub
in
data16
add
fsts
mov
fwait
adc
mov
fsubrl
cli
or
aam
cmpsb
iret
dec
in
cmp
sbb
pop
insb
inc
ficomps
mov
mov
loopne
pop
fisubrs
scas
mov
ret
fmul
fidivrs
dec
pop
pop
jns
push
cmp
lret
push
jno
mov
cltd
mov
cmc
xchg
jle
test
mov
loopne
adc
ficompl
sar
sbb
cmpsl
adcl
adc
add
cmp
ss
xchg
stos
mov
scas
mov
testl
and
xor
pop
daa
jb
iret
push
ror
pop
cmp
mov
loopne
aam
repnz
test
add
mov
jo
ret
cmc
or
ret
fbld
ljmp
inc
jb
push
pop
andl
mov
shlb
pop
xchg
loop
sub
leave
sbb
mov
dec
das
pop
inc
xlat
int3
cwtl
fnstsw
pop
test
dec
xchg
and
cmp
arpl
mov
repz
je
iret
imul
mov
aaa
add
je
or
push
jle
rol
push
xor
xor
sar
fistpll
add
int3
enter
xchg
repz
jno
push
jp
or
inc
dec
inc
outsb
or
pop
mov
pop
inc
pop
sbb
push
adc
xor
pop
dec
adc
mov
xchg
inc
scas
mov
es
test
pusha
gs
lahf
sbb
fcmovnbe
cmpsb
xor
mov
sub
and
call
outsb
popf
hlt
push
out
adc
cs
test
xchg
iret
lock
aam
gs
jo
stc
mov
xor
rcrl
das
pop
jle
pop
test
aaa
outsb
cmpsl
pop
cmpsl
je
setle
and
cmpsb
mov
lods
sub
pusha
ficoml
push
popf
or
imul
bnd
into
insl
enter
sub
adc
aam
loope
aam
loope
arpl
cmp
icebp
fsubl
movsb
int
jmp
das
std
pop
andl
into
mov
push
dec
pushf
fbld
mov
xor
sub
jle
inc
or
and
js
xor
xor
sti
call
or
sbb
data16
dec
pop
aad
lds
push
testb
icebp
loopne
sbb
flds
mov
xchg
sbb
adc
push
in
inc
sub
stc
push
mov
jnp
lret
push
adc
or
add
iret
test
pop
mov
dec
jp
mov
loop
xchg
rolb
test
add
jecxz
xchg
mov
cli
cmp
andb
push
das
aam
hlt
cmpsl
add
in
daa
jmp
in
call
cltd
sbb
jno
repz
cli
fcmovb
fcmovnbe
int3
ror
xchg
inc
scas
xchg
sbb
jo
cltd
movsl
add
std
xor
xchg
cmp
pop
or
into
or
sub
addr16
xor
push
lret
sub
cmp
out
popf
sahf
dec
shl
lods
pop
lahf
xor
psubusw
mov
stc
in
inc
mov
mov
push
pop
repnz
imul
pushf
test
fmul
add
dec
xchg
ffree
call
add
dec
out
mov
shll
xlat
enter
decb
stc
mov
fistpl
or
adc
sub
cltd
mov
aaa
call
cmc
jge
cltd
js
mov
lods
adc
out
popf
dec
cs
adcl
scas
and
test
pop
push
dec
cmp
add
pop
adc
outsb
jge
cmp
lea
sub
xor
inc
test
pop
cmp
or
mov
stos
dec
mov
push
cmp
push
fst
pop
inc
lods
ss
xor
ljmp
lock
mov
jle
insb
out
lret
push
adc
sub
mov
in
leave
jp
jns
jge
in
cld
stc
mov
pop
lret
outsb
mov
xchg
add
sbb
cld
scas
add
sub
push
inc
xor
ret
or
adc
sub
xchg
std
mov
xor
mov
aaa
or
jo
in
add
mov
int
mov
add
or
dec
sbb
loopne
inc
out
std
roll
leave
adc
add
scas
push
dec
and
stc
dec
add
fwait
mov
inc
jge
int
outsl
inc
mov
scas
stos
cmp
push
lods
out
dec
fildll
fs
outsl
dec
mov
cmp
pop
xor
mov
mov
rolb
fstl
sub
dec
movsl
xchg
sub
test
pop
pop
jne
jae
push
push
sub
pushf
inc
ja
les
sbb
pusha
sub
cmp
xor
imulb
mov
cli
enter
dec
stos
mov
stc
loope
dec
sbbl
lahf
rcl
je
mov
cmp
ret
testb
xor
fsubrp
jl
push
pop
mov
and
pop
pop
xor
push
dec
jp
mov
cmpsb
jne
fsubrl
sarb
adc
pop
test
push
aad
adc
fisubrl
sub
dec
sbb
repnz
shll
lods
sbb
and
repz
jb
sbb
shr
push
add
out
ds
push
adc
mov
mov
sbb
push
loop
shll
ficompl
mov
lds
das
mov
jmp
jge
pop
call
pop
imul
flds
pop
add
jmp
jns
add
cmp
inc
cmc
cs
lahf
mov
fs
mov
leave
xor
mov
add
sbb
cmp
in
mov
pop
xchg
ror
fpatan
pop
cli
pop
sbb
insl
pop
adc
out
enter
ds
mov
mov
sub
cs
xor
inc
add
push
pop
cmp
and
push
xor
mov
xchg
fiadds
fs
icebp
xor
add
fstpl
xor
pop
jge
mov
mov
jns
ret
into
sub
ljmp
push
or
adc
xchg
push
stos
sub
je
pop
dec
or
lock
xorb
mov
push
test
into
xlat
pop
dec
in
push
mov
fcoms
or
xchg
out
iret
xor
sub
icebp
add
and
pusha
mov
lret
enter
push
push
stc
add
lods
pop
iret
pusha
in
and
and
mov
rcl
pop
jmp
xchg
xchg
pop
mov
add
xchg
cmpsl
cmpl
mov
xchg
mov
fadds
lods
mov
fs
mov
test
pop
subb
test
cmp
adc
cmp
repz
in
push
push
loope
addl
or
test
or
es
jae
pop
inc
adc
jmp
aam
and
les
imul
lea
aaa
insb
lea
enter
mov
dec
add
fistpll
add
leave
push
xlat
inc
in
gs
cmp
adc
inc
loop
nop
push
inc
jae
lcall
push
inc
xchg
push
aas
and
les
xchg
inc
shlb
ret
inc
and
mov
ficoml
adc
sub
xchg
sub
jns
lret
andb
mov
or
mov
xor
cli
aam
dec
outsb
dec
sub
mov
lock
mov
lods
sbb
lods
add
enter
mov
inc
push
sahf
pushf
int3
inc
lds
dec
test
jecxz
in
sub
lods
mov
repnz
mov
cmc
dec
cmp
jp
mov
je
enter
bound
ficoms
mov
jae
and
lods
out
arpl
mov
and
movsb
subl
cmc
cmpsb
mov
rep
xchg
pop
push
fisubrl
xchg
fisubrl
mov
or
and
stos
in
pop
xlat
jo
cwtl
cmpb
inc
xchg
jno
mov
sbb
sbb
pop
inc
es
and
jg
or
popf
stos
inc
scas
shlb
aas
mov
aam
lret
inc
lret
adc
cmpsb
arpl
adc
ret
pop
or
add
daa
inc
stos
mov
cmpsl
inc
fldt
nop
xor
fidivl
fmuls
sbb
das
xchg
in
ds
in
sub
cmpl
pop
cld
xor
pop
lahf
pop
loopne
or
pop
fwait
xor
mov
shlb
jae
int
repnz
cmp
hlt
movsl
arpl
jne
scas
push
mov
addb
scas
cld
xchg
jp
dec
orb
pop
cmc
mov
nop
push
sbb
xchg
dec
and
push
lods
dec
xchg
into
pop
pusha
adcb
mov
incb
dec
and
jbe
clc
mov
mov
add
in
adc
clc
add
leave
es
mov
sahf
add
mov
sub
call
shrb
cmp
jge
leave
add
iret
mov
dec
sub
loope
add
pop
jbe
fs
ss
dec
fsubs
mov
and
das
sub
push
mov
sbb
test
adc
je
jl
mov
mov
testb
aad
adc
repnz
cs
dec
xchg
jecxz
inc
mov
xor
loope
dec
sbb
ret
xlat
adc
xor
jmp
jmp
mov
sub
iret
add
add
loopne
mov
xlat
mov
inc
mov
gs
insb
cmp
pop
cmpsl
call
les
enter
cltd
fs
mov
mov
jno
enter
jns
sbbb
xchg
add
int3
cmp
aaa
dec
add
dec
or
push
push
dec
mov
es
push
xchg
icebp
fstl
xor
int3
adc
pop
mov
xchg
inc
dec
mov
xchg
dec
dec
xchg
xchg
ja
lods
lock
scas
addb
lods
outsb
pop
scas
rorl
xchg
and
xchg
int
js
push
xor
jns
lret
xchg
test
out
in
jmp
push
in
loopne
mov
xchg
add
push
leave
outsb
xlat
cwtl
sub
lods
jns
leave
stos
push
inc
push
mov
lods
clc
dec
add
mov
test
or
mov
pop
mov
jmp
jne
push
or
pop
out
dec
push
test
mov
sub
das
imul
je
mov
mov
jns
mov
cmpsl
loope
lods
into
xor
jnp
jnp
or
mov
sbb
xchg
pusha
and
cmp
fmulp
insl
sbb
mov
mov
pop
outsl
xchg
pushf
xchg
adc
imul
xorl
jae
push
iret
shr
inc
mov
movsl
ret
es
es
adc
sti
jge
or
mov
mov
adc
mov
scas
mov
cwtl
fdivr
fwait
stos
adc
ret
in
mov
nop
insb
add
jnp
xor
daa
mov
stos
inc
sti
scas
push
iret
push
xorl
xchg
adc
mov
xchg
add
shl
mull
loopne
rcl
add
popf
adc
and
lcall
inc
ficomps
shl
mov
dec
repnz
xchg
inc
adc
adc
push
xlat
xor
loopne
fnsave
add
mov
xchg
xchg
cli
lahf
std
xchg
rcll
cltd
or
jns
out
mov
add
inc
pushf
sbb
fdivrl
lret
adc
push
sbb
pop
pop
fadds
frstor
pop
cmpl
mov
fidivrl
aas
and
pushf
daa
or
add
jl
sbb
mov
mov
aas
loope
cmpl
div
and
loop
scas
int
or
imull
ss
fisttpll
or
adc
dec
jle
lret
in
mov
sub
mov
movsl
pop
lods
or
loope
outsb
pop
enter
inc
add
pop
sarl
or
in
cmp
outsl
dec
mov
imull
mov
xchg
jno
ss
sti
stos
lcall
push
leave
push
jae
jae
xor
pop
fsubr
sbb
in
test
mov
mov
cmp
notb
mov
mov
or
sbb
jmp
mov
push
mov
in
xlat
dec
ret
cs
rcrl
dec
push
jns
sbb
lret
or
add
pushf
rcrb
shrb
movsb
test
out
out
movsb
in
inc
icebp
mov
addr16
call
sbb
loop
imul
cmc
push
jg
dec
into
sbb
add
push
cs
andnps
mov
sti
insb
xor
mov
xor
ja
std
insb
subl
aas
dec
push
aaa
cmpsl
sub
loopne
jae
out
mov
jo
sub
outsb
push
inc
lds
iret
xor
add
arpl
mov
es
sbb
pushf
loopne,pt
jns
aad
out
shl
aad
leave
and
cld
test
push
push
dec
pusha
ljmp
mov
out
cs
fildll
xchg
mov
insb
sub
cmc
or
xor
mov
bound
cs
inc
jnp
test
dec
pushl
dec
rolb
sub
scas
lret
loopew
dec
rol
sbb
sbb
cmp
jmp
dec
cmp
loop
mov
cmp
arpl
lock
mov
adc
nop
inc
out
loop
mov
sbbb
lahf
in
aad
inc
arpl
roll
push
jecxz
or
or
imul
movb
pop
and
xor
arpl
ret
imul
in
mov
jno
add
cmp
add
xor
fsubrl
scas
adc
enter
dec
aaa
jo
xchg
xor
bound
push
sti
xchg
mov
sbb
enter
int3
jb
in
into
movsb
mov
in
out
jecxz
out
sub
in
dec
test
xchg
sbb
dec
stos
ror
adc
inc
inc
dec
xchg
mov
push
xchg
mov
push
cmpl
std
xor
push
xchg
cmp
cmp
int
fldl
push
pop
inc
jo
es
mov
sbb
pop
mov
shlb
mov
push
cltd
aad
in
mov
xchg
dec
stc
cmc
hlt
xchg
lcall
cs
movsb
xor
mov
adc
jmp
ss
inc
xchg
out
stc
inc
xor
sbb
adc
adc
shlb
xchg
clc
cmp
jge
cltd
nop
sarl
lock
daa
sti
xlat
inc
cld
aas
inc
test
and
iret
mov
mov
cmp
lds
sub
insb
push
ljmp
enter
scas
clc
inc
jge
je
shlb
out
push
adcl
mov
mov
jmp
mov
jge
out
adc
adc
cmp
repnz
xchg
lock
jecxz
xor
push
push
test
lcall
fstl
call
imul
adc
mov
ret
inc
cmp
or
push
outsl
jg
in
add
std
rolb
push
push
movsb
testl
mov
xchg
sbb
add
rcrl
ret
mov
cld
xchg
stos
arpl
mov
cltd
or
pushf
mov
xchg
add
xchg
in
mov
xchg
movsl
cs
fistpll
lock
sbb
and
les
je
xchg
fwait
pop
push
lret
test
mov
mov
les
repnz
std
iret
fwait
and
jb
add
jg
add
mov
add
inc
add
std
lods
int
jp
pop
jp
jno
or
sbb
call
and
lahf
and
push
stc
jl
fnstenv
adc
lea
jb
ret
xchg
and
inc
add
leave
pop
stos
cmp
xor
sbb
clc
inc
lods
ds
aam
and
mov
jb
adc
sahf
repz
lods
bndstx
arpl
jp
sub
sahf
jns
lahf
add
sbb
js
add
xor
or
and
dec
jmp
mov
ja
cwtl
push
xchg
outsb
cmc
mov
mov
shrb
pop
pop
scas
fildl
push
pop
push
dec
fs
add
push
stos
test
mov
fistl
aaa
out
push
cltd
push
pop
insl
fisubrl
loopne
loop
repz
movsb
in
sub
sub
mov
sub
jb
xchg
and
insl
roll
and
mov
jp
loop
xchg
xchg
sarl
jb
push
fisubrs
loope
mov
pusha
aas
add
mov
push
hlt
push
js
push
xchg
adc
imulb
lods
cmp
movsl
jp
xor
inc
mov
sub
xor
pop
xchg
aaa
cs
insl
push
popf
cs
jbe
lods
dec
push
jecxz
mov
mov
cmp
imul
aam
loopne
out
push
xor
xor
pushf
lods
inc
add
push
leave
jns
lods
push
mov
mov
std
loopne
push
dec
cmp
pop
push
addb
mov
mov
daa
icebp
cwtl
xor
dec
and
and
imul
dec
xlat
ja
or
les
iret
or
bound
shll
mov
test
ret
pop
push
jg
scas
aad
fcmovnbe
and
lds
push
scas
mov
push
and
adc
dec
mov
cltd
push
jge
cs
xlat
jbe
push
adcb
fwait
xchg
int
mov
int
xchg
sbb
adc
das
mov
and
sub
xchg
jne
data16
sub
push
mov
ja
fwait
pxor
push
cmp
sub
dec
insb
inc
push
icebp
push
daa
adc
das
hlt
cmp
sbb
mov
jmp
int3
sbb
mov
arpl
cwtl
and
adc
sub
stc
jge
je
jmp
cmp
fstp
out
xor
xor
mov
loopne
sub
add
mov
and
jl
xchg
adc
lahf
cld
testl
out
movsl
popf
mov
pop
xor
or
or
jae
aaa
and
and
xor
pop
mov
or
call
xor
xchg
aas
adc
add
cltd
inc
shll
mov
aam
test
inc
insl
pop
xor
pop
cld
jmp
inc
jb
jp
mov
nop
adc
stos
sbb
mov
cld
popa
int
fistps
or
in
inc
insb
add
into
es
sbb
fs
or
cwtl
daa
dec
lods
adc
pop
push
data16
leave
adc
int3
sbb
cmp
sbb
aad
jne
loop
fwait
or
aas
out
mov
loopne
sub
inc
insl
das
and
xchg
pop
mov
out
jmp
cmp
pop
mov
ret
pop
adc
xor
mov
call
pop
pop
adc
enter
std
ss
mov
push
mov
pusha
std
movsb
cltd
push
add
test
pop
and
mov
cwtl
paddq
inc
jnp
sbb
sti
jbe
jle
mov
adc
popf
insl
or
insb
shrb
icebp
arpl
adc
inc
ss
loopne
mov
inc
aam
divb
jmp
jecxz
inc
dec
lahf
push
aad
xchg
lods
adc
repnz
fldt
sub
fsubrl
scas
shlb
rcll
mov
pop
ret
sub
sbb
lea
inc
orl
pop
dec
push
in
rcrb
fdivl
loope
xor
inc
inc
stos
in
pop
bound
sbb
jo
xchg
aas
sti
mov
mov
or
mov
jns
testb
mov
dec
sti
add
adc
mov
bsr
xchg
pop
jmp
push
lea
frstor
imul
in
and
and
jecxz
out
scas
sub
pop
adc
sbb
mov
data16
mov
jmp
pop
xchg
frstor
pop
jno
push
pop
inc
loopew
adc
in
mov
sbb
jl
mov
push
push
ror
xchg
add
fsubl
sti
sbb
xchg
mov
add
pop
add
mov
jmp
je
stc
sbb
lea
push
lret
aam
nop
sub
xchg
shll
inc
hlt
mov
add
xchg
js
pop
fwait
xchg
sub
inc
jbe
sub
inc
or
mov
loop
lahf
pop
cmp
adc
sub
jge
inc
aam
add
fidivs
test
aad
xor
mov
jecxz
mov
lret
xchg
cwtl
adc
nop
inc
mov
or
mov
clc
mov
std
lds
jge
loope
test
push
push
pop
cmp
insl
xor
adc
rol
push
cs
gs
mov
xor
cmp
mov
add
mov
pop
xchg
imul
scas
imull
dec
clc
out
dec
insl
jge
cmpsb
push
mov
mov
sahf
adc
mov
inc
jne
mov
mov
call
out
es
ret
sbbl
sub
adc
cli
lock
push
mov
mov
mov
inc
jno
fs
pop
and
push
les
push
mov
xor
shl
fisttpll
fcoml
inc
push
xchg
inc
popf
outsl
sbb
mov
leave
sti
mov
mov
mov
aaa
movsb
mov
imul
lds
in
mov
dec
xor
loope
icebp
daa
movsb
enter
jb
mov
ljmp
mov
test
aas
push
idivl
in
sub
jns
cld
ds
or
push
lods
sub
testl
jne
lods
dec
mull
pop
daa
ljmp
mov
inc
dec
push
jno
int
ds
xor
or
jecxz
mov
ret
scas
sbb
leave
cmp
mov
mov
inc
xor
push
add
dec
sbb
fidivrl
or
cmp
cld
mul
jecxz
push
ret
ss
xor
jp
pushf
ljmp
sti
enter
lods
data16
inc
das
rclb
add
mov
jno
ds
mov
loop
xor
andl
adcb
bound
pop
dec
out
lock
pop
cmpsb
andb
nop
popa
movsl
fistps
dec
sbb
dec
divl
add
or
xchg
inc
and
push
data16
mov
push
cmp
xchg
cltd
adc
divb
mov
stos
push
movsl
push
cmc
fnstenv
or
aas
xchg
inc
aam
nop
dec
mov
jo
and
mov
pop
mov
pop
pushf
adc
sbb
cli
mov
scas
clc
movups
dec
stc
sarl
pop
jp
sbb
dec
clc
jbe
imul
adc
sbb
mov
ret
jo
hlt
stos
je
loopne
incl
hlt
add
cld
mov
xchg
sbb
mov
inc
pop
shlb
sbb
in
fldl
lahf
lods
xchg
add
jmp
jo
icebp
jg
dec
fs
mov
flds
fcompl
test
dec
dec
cs
inc
mov
sbb
fnsave
out
iret
mov
jmp
insb
mov
dec
cmp
leave
lea
aas
lock
push
and
cmp
fistpll
rcll
cwtl
shl
inc
mov
jmp
mov
lret
mov
fildl
cmpsb
daa
call
stc
push
xlat
jle
jo
les
repz
movd
arpl
inc
enter
add
mov
pop
pop
inc
xchg
mov
cs
outsl
pop
xchg
add
or
xor
lcall
loop
nop
ds
mov
dec
aam
jge
popf
pand
sbb
and
dec
ret
fwait
sub
pop
mov
xor
loop
aad
cmpsb
add
sbb
and
imul
add
add
push
pushf
aam
ds
fwait
xor
sbb
mov
mov
xchg
mov
lahf
push
pushf
pushf
or
sahf
sti
jo
xor
sub
dec
xor
inc
mov
cmp
mov
push
dec
mov
mov
icebp
jle
hlt
xlat
sbb
mov
roll
outsb
xchg
push
aam
or
les
lret
in
loope
out
out
sbb
jl
fs
not
jnp
fnstcw
outsl
adc
xchg
outsb
xchg
popa
arpl
xor
daa
mov
dec
enter
mov
xchg
jne
cs
xchg
clc
pop
xchg
xor
rorb
out
lcall
test
xor
pop
cmp
dec
in
dec
add
xchg
lock
fdivl
popf
cld
push
shll
int3
xor
popa
orl
and
or
mov
hlt
xor
imul
jmp
push
and
mov
xchg
rorb
push
incl
div
aaa
int3
xchg
inc
jae
mov
and
movsl
out
jne
sarl
out
sahf
rcrl
sbb
mov
cli
daa
test
stc
lea
out
sub
inc
fbld
jg
inc
insb
hlt
loop
lods
and
lcall
inc
in
or
ja
sub
stos
or
aad
cmc
cmp
mov
mov
xor
iret
lcall
imul
pop
mov
pusha
shll
aaa
les
lahf
and
push
ret
lret
dec
aad
movsb
dec
clc
jp
adc
pop
sub
stos
cmp
pop
add
or
imull
xchg
push
push
dec
push
sahf
mov
test
ficoml
push
inc
xchg
test
cltd
dec
lcall
loope
cltd
and
lret
pop
ja
stos
movsb
sbb
cmc
add
popf
dec
cmpsb
adc
sub
icebp
xor
nop
dec
lds
inc
adc
xchg
aaa
push
js
insl
push
push
shrb
fidivrs
les
fsub
cs
aas
leave
lret
int
lcall
jmp
adc
or
dec
cmc
xchg
cmp
insl
insb
adc
aaa
loope
mov
outsb
scas
or
or
mov
iret
inc
aaa
es
imul
dec
inc
js
add
add
ja
mov
jne
ds
out
js
iret
pop
rcrl
cwtl
pop
and
adc
or
jno
mov
and
and
fidivs
lods
mov
mov
imull
mov
or
idiv
cltd
mov
mov
lret
mov
sub
adc
xchg
xor
pop
mov
push
sub
jo
add
sbb
imul
lods
or
into
out
push
lcall
cmp
dec
dec
adc
orl
aad
sti
inc
push
add
mov
jnp
nop
scas
sub
insl
filds
mov
orb
cltd
inc
dec
xchg
add
push
lods
push
gs
out
dec
mov
mov
repnz
xor
xchg
std
push
stos
aam
clc
or
sahf
insb
dec
out
sbb
fstps
cmpsb
mov
clc
push
aas
dec
outsl
arpl
test
fxch
xor
arpl
lock
mov
and
push
mov
shll
fstpl
mov
repz
add
outsb
cmpsb
pop
or
push
pop
sahf
sahf
imul
jno
mov
xor
bound
push
xor
fs
push
sub
fidivs
outsb
and
and
ds
push
addb
bsr
cs
les
inc
add
push
paddsb
xchg
push
icebp
cli
and
or
xchg
pop
xchg
mov
call
mov
out
inc
mov
mov
cmp
lahf
xchg
in
jae
push
add
pop
mov
pop
movsl
xor
enter
ljmp
push
repnz
mov
mov
pop
dec
jl
ret
push
or
add
adc
jnp
mov
aas
mov
dec
push
notb
mov
daa
sbb
arpl
insl
xchg
gs
lods
cli
roll
xchg
jb
push
cmp
mov
inc
dec
ja
mov
mov
frstor
mov
std
es
test
imul
imul
stos
in
and
mov
sub
pop
lods
jo
lock
fdivs
scas
xchg
add
xor
or
cmp
dec
test
insl
push
xchg
or
loopne
xor
sbb
add
test
mov
xchg
sub
xchg
fstp
xchg
pop
jecxz
mov
mov
imul
sbb
jnp
in
push
inc
push
jg
iret
adc
scas
mov
sub
insb
or
xor
cmp
push
mov
add
xchg
sub
xchg
xchg
test
pop
into
pop
cmp
pop
fstps
cmp
mov
test
sbb
add
xchg
mov
adc
cs
push
xor
sbb
or
cmc
iret
fsubs
pop
cmp
xchg
jg
dec
sti
dec
jnp
inc
es
pop
addr16
popa
inc
test
outsl
out
xchg
test
int
in
stos
pop
mov
xchg
and
or
iret
jge
test
inc
incl
jnp
cmp
je
das
mov
out
int
or
push
sbb
ja
fcmovb
in
imul
lret
mov
into
notl
mov
or
dec
jle
mov
dec
lret
inc
sar
cmpsl
mov
es
out
jecxz
les
adc
lahf
cmpsl
mov
lea
test
inc
push
mov
jg
enter
push
xchg
mov
push
add
fadds
add
push
pop
test
orl
repz
mov
mov
jno
mov
dec
xor
inc
cmc
or
mov
clc
sub
fs
xor
bound
fnstenv
adc
mov
cli
adc
cmc
or
adc
mov
js
adc
mov
add
fstpt
mov
or
push
pop
outsl
sahf
jno
orb
pop
mov
xor
in
andl
cs
adc
scas
shrb
push
pop
or
loopne
add
mov
loopne
and
sub
xchg
cld
mov
mov
and
rorl
inc
subl
mov
push
xor
sbb
adc
dec
fcoml
jbe
popf
loop
xor
in
mov
sbb
icebp
stos
add
jne
mov
fimull
mov
mov
push
lds
rclb
mov
xlat
inc
dec
out
in
arpl
out
sbb
lret
jns
xchg
ss
cmp
imul
xchg
mov
fucomip
xchg
mov
int3
shll
jb
mov
jecxz
lret
mov
aam
add
mov
cld
je
les
adc
decb
testb
stc
jmp
pushf
andl
push
punpckhbw
sub
fdivrs
iret
push
mov
ss
dec
xchg
push
cmp
imul
jp
arpl
popf
sub
jle
movlhps
pop
mov
inc
jmp
movsb
ret
dec
xchg
mov
adc
roll
xor
mov
inc
in
mov
gs
and
dec
pop
fstpl
js
inc
add
enter
mov
lahf
mov
jg
jbe
fildl
add
and
push
cld
lahf
xor
stos
test
sti
lods
mov
and
pop
push
in
aaa
push
shlb
mov
dec
or
sbb
push
fdivrl
lods
pusha
ja
mov
jb
jae
jmp
mov
jae
push
inc
mov
lods
jno
push
adc
cmp
insb
out
mov
nop
mov
sub
in
xchg
xchg
mov
fs
rcl
or
popa
lds
leave
or
call
aas
push
jo
aas
xor
bound
and
insb
or
fisubrl
sarb
imul
std
and
leave
xor
cmp
dec
xchg
jne
xor
gs
mov
push
stos
mov
movsb
xchg
add
inc
dec
fmull
shll
cld
pop
aaa
test
pushf
fwait
xchg
popf
push
test
pop
daa
push
pop
rclb
add
xchg
pop
push
and
or
mov
pop
adc
in
dec
imul
fsubrl
xor
xchg
cmc
and
cmp
mov
jmp
mov
xchg
pmulhuw
pop
out
pop
push
daa
insl
cmpsb
sahf
pop
shrl
sahf
andl
mov
lods
xorb
test
push
adc
aaa
mov
adc
lds
dec
mov
divb
jae
add
hlt
lods
lret
lea
push
das
push
and
sbb
mov
xor
mov
sub
fdivr
mov
mov
test
sbb
pop
sub
push
fldl
inc
adc
push
jle
insb
sub
inc
push
cmc
push
push
test
push
sub
cmpsb
rcll
inc
or
and
outsb
es
mov
std
and
push
xchg
test
mov
out
mov
add
scas
fwait
and
gs
dec
adc
add
pop
lahf
dec
cltd
jns
sbb
jg
adc
in
scas
jo
divl
cmc
pop
add
inc
jo
test
into
std
mov
in
pushf
jmp
stos
cmp
sete
shll
insl
xchg
fs
cwtl
jne
jge
add
jmp
dec
inc
xchg
sarl
daa
mov
in
bnd
sbb
test
rcrb
movsb
lds
push
iret
imul
lock
mov
inc
inc
cmc
push
negl
fisttpll
test
xchg
dec
lods
lret
cmp
or
rcrb
in
imul
leave
test
cmpsb
mov
fldenv
xor
fldcw
arpl
pop
jmp
pushf
pop
nop
js
cmp
cmp
adc
inc
jecxz
std
lds
jp
cmpsb
cltd
pop
leave
leave
addr16
mov
xor
daa
nop
mov
or
cmp
out
xchg
sbb
movsb
test
xchg
xor
das
pop
cmp
push
add
fstl
sub
and
pop
mov
pop
inc
hlt
or
xor
mov
add
stos
aam
lcall
iret
ljmp
cmp
pop
mov
pop
inc
fisubrl
aas
bound
adc
nop
lcall
jno
pusha
clc
xor
fisubl
fisttps
loopne
inc
cs
push
jnp
roll
cmp
cmpb
fdiv
add
push
lret
adc
scas
dec
add
pop
lods
jmp
out
push
in
mov
xor
in
pop
ljmp
dec
dec
movsl
and
jmp
push
imul
and
pop
lahf
movsl
add
add
rol
rorb
mov
cmpsb
clc
sub
pushf
cmc
imul
jl
out
adc
fwait
cld
push
and
jmp
pop
xchg
repnz
inc
mov
outsb
mov
mov
sbb
or
xchg
rcrl
in
cmp
arpl
hlt
repnz
nop
out
sub
sbb
popf
fdivs
aam
or
and
sub
fstps
adc
or
test
addl
sbb
xchg
pop
imul
or
hlt
fwait
push
pop
jae
mov
pop
adc
scas
lds
inc
push
fidivrl
icebp
dec
mov
lds
stos
pop
xchg
and
fidivrl
push
rcll
cltd
cmp
mov
mov
movsl
and
inc
xchg
dec
jge
je
call
jo
mov
push
clc
call
lret
push
cs
dec
sbb
enter
cltd
cmp
inc
out
cmc
out
shll
repnz
mov
xor
dec
dec
ret
dec
lea
rcl
add
popf
mov
jg
inc
out
sub
test
adc
inc
jae
xchg
and
mov
out
insl
pop
ret
ret
decb
push
push
push
rcl
test
push
adc
pop
repz
dec
jle
pop
fsubr
pop
mov
xor
xor
daa
xchg
fwait
movsl
stos
arpl
cmpsl
das
mov
push
fsin
fisttpll
pop
aam
in
nop
andb
xorb
in
mov
jg
mov
add
lret
lcall
add
mov
dec
adc
add
mov
ficomps
sbb
xor
ret
mov
ljmp
xor
push
das
das
or
rorl
xor
xchg
hlt
push
inc
mov
xor
xchg
jo
mov
pop
pop
fstps
dec
leave
outsb
clc
jl
cmpsl
jl
lret
dec
lods
pop
not
adcb
pop
mov
mov
adc
inc
mov
mov
insl
mov
ds
in
fucomip
aas
push
stos
cwtl
pop
out
movsb
shrl
cmp
aaa
hlt
into
les
jp
repnz
in
loope
outsl
arpl
adc
add
dec
mov
jle
fmuls
stos
sbb
pop
cmp
das
cmp
insb
or
int
stos
testb
inc
xorl
cmp
add
sbb
int3
cmp
cmp
mov
mov
sarl
lret
test
inc
push
cmc
push
cltd
sub
or
mov
sarl
mov
xchg
jg
cmp
aam
out
int
cmpsl
xor
dec
mov
cmp
jno
mov
test
cmp
ret
xor
xor
adc
mov
add
pop
adc
pop
mov
addl
xchg
sbb
ss
inc
jnp
outsb
cs
in
cmova
pusha
inc
push
in
cmpb
jnp
scas
movsb
das
ds
iret
cltd
testb
cmp
adc
mov
xchg
orl
xorl
enter
mov
dec
test
testb
stos
add
sti
cmp
divl
movhps
jno
mov
mov
in
pusha
stos
pop
mov
push
pop
shl
rorl
lret
xor
jl
cmp
call
mov
iret
and
aam
lahf
mov
std
aad
test
jge
push
cltd
in
jmp
jge
int3
mov
test
insb
stos
pop
push
aas
mov
mov
dec
jecxz
jnp
out
cli
lock
inc
add
pop
jne
mov
scas
sub
inc
shll
andl
mov
xlat
pop
sbb
fmuls
add
push
dec
mov
mov
xchg
xchg
fwait
inc
mov
and
insb
arpl
aad
clc
cmp
stos
shll
lret
stos
lcall
outsb
adc
fs
mov
cli
mov
arpl
and
xor
push
xor
fstpl
mov
ljmp
xor
pop
int
xchg
cmpsb
mov
and
std
movsb
int3
loopne
xor
pusha
or
or
xlat
push
pop
scas
add
mov
pop
sahf
ja
pop
outsb
jbe
mov
hlt
or
jo
dec
sbb
into
dec
lcall
xor
cmp
ds
and
bound
in
stos
ficompl
or
jge
stos
imul
bound
lods
sub
fldcw
inc
popa
xchg
dec
std
sub
clc
test
mov
lods
sub
mov
imul
push
hlt
inc
int3
sbb
es
mov
inc
out
in
adc
fs
mov
cwtl
adc
fcoms
push
inc
cmp
std
mov
cmp
dec
movsl
push
and
inc
sbb
fldt
sbb
push
and
dec
inc
dec
cmp
pop
xchg
pop
xchg
push
cmpsl
dec
fsubl
mov
cmp
clc
mov
loope
fiaddl
jmp
sub
das
push
mov
inc
inc
mov
jbe
xchg
add
xor
cs
mov
mov
xchg
pop
xlat
ja
mov
jae
cmp
test
shll
das
mov
addr16
repnz
outsl
icebp
stc
insl
adc
lahf
sbb
pop
cmc
ret
mov
cltd
bnd
movsb
data16
ljmp
sub
rep
mov
std
pop
pop
rolb
cmc
mov
arpl
pop
aad
jle
add
out
incl
add
sbb
push
pop
jnp
cmc
pop
push
mov
out
pop
lds
push
mov
shlb
inc
xlat
add
and
lods
fisttpll
popf
jle
out
gs
cmp
les
jge
insb
push
pop
ficompl
and
mov
cmp
mov
and
mov
sub
stos
incl
and
lahf
jmp
lea
xlat
cwtl
iret
pop
out
mov
sbb
and
icebp
popf
xor
inc
sub
ja
adc
mov
addb
xchg
add
cmpsb
int3
dec
mov
xor
mov
push
xchg
mov
adc
arpl
shrb
sbb
pop
fcoms
arpl
lods
mov
or
jno
pop
adc
es
stos
pop
mov
push
nop
xor
xor
xchg
mov
sub
in
sbb
push
mov
loopne
stos
jnp
insb
push
push
fxch
push
xorb
pusha
fwait
add
scas
fnstenv
xchg
add
mul
rep
mov
push
pop
aaa
mov
xchg
sti
orl
jge
push
pop
or
cmpl
or
or
xchg
mov
cltd
push
cs
out
pop
shrb
jne
pop
cmp
leave
fwait
out
sbb
lds
or
outsb
cs
stc
popf
popa
pop
push
adc
mov
test
mov
push
pop
xchg
jne
sub
adc
jnp
cltd
xchg
push
call
add
inc
sarl
gs
mov
push
in
jbe
mov
fisttpl
repz
push
cli
mov
inc
out
jp
add
or
sbb
mov
push
xchg
movsl
xorl
adc
mov
inc
aas
nop
lcall
les
mov
mov
xor
aad
dec
xor
fs
out
lock
sbb
jl
aas
adc
and
clc
stos
sbb
cld
scas
scas
movsb
inc
xchg
push
add
in
aad
adc
mov
and
add
fiadds
lds
add
fisubrs
fsubrs
xor
add
movsb
jp
enter
sbb
mov
xor
insl
mov
rcrb
shl
sbb
bnd
inc
inc
or
pop
rorb
ret
adc
sbb
and
dec
mov
adc
adc
inc
out
add
adc
jle
mov
pop
shrb
mov
aad
fsubs
dec
sub
jmp
jg
and
push
addr16
int
filds
cli
es
mov
lock
inc
leave
sarl
dec
adc
pop
mov
inc
add
sub
insl
add
push
testb
cmpsl
dec
imulb
shll
jns
mov
movsl
pop
fisubrl
stc
int3
push
inc
aad
cmp
cwtl
mov
les
je
and
sub
jg
mov
fs
mov
cs
in
or
jae
inc
sarb
sbb
popf
andb
into
cmp
popf
jo
lahf
xchg
jl
push
push
js
repnz
dec
jo
pushf
mov
push
test
jg
testl
adc
movsl
fstpt
cmc
lods
inc
lcall
stos
jb
lods
daa
jbe
ljmp
xchg
movsl
popa
xchg
lea
cmp
lods
scas
and
and
loopne
push
mov
outsb
dec
ljmp
cmp
sub
mov
push
rcl
js
pop
inc
push
mov
fbld
mov
cmc
adc
pop
or
pop
push
push
add
adc
add
or
cli
gs
cmovbe
and
jl
out
sti
loop
or
dec
sub
sti
ja
loop
fmuls
loop
sub
mov
mov
mov
pushl
pop
jo
jno
pushf
jecxz
mov
adc
call
pop
dec
stos
adcl
popl
cs
cmp
ficoms
jno
push
inc
pop
or
dec
push
sbb
sbb
adc
test
push
les
ret
test
cmc
mov
arpl
mov
insl
movsb
cwtl
inc
inc
jmp
leave
cmp
pop
mov
cmp
sbb
push
xlat
sub
cs
imul
loope
pop
fwait
lods
js
outsb
inc
sti
push
sub
jns
and
ds
cmpl
aaa
or
cmp
test
push
jle
dec
inc
fwait
dec
mov
mov
repnz
xlat
push
jne
push
popa
or
sbb
std
mov
push
or
add
cs
sarl
jecxz
imul
pop
iret
aam
clc
mov
cmpl
push
sbb
jecxz
fadd
loop
mov
or
ds
movsl
push
dec
xor
jle
xor
sbb
xchg
adcb
out
pushl
cmp
cmp
xor
lcall
mov
add
in
push
mov
in
mov
xchg
adc
or
mov
cmp
sbb
pop
xchg
xor
in
fisubrs
scas
and
rol
loop
cmp
and
dec
loopne
mov
xor
mov
ret
mov
insl
or
imul
loope
lods
cs
sbb
dec
hlt
shll
push
lret
cmp
sbb
incl
mov
cli
jle
xchg
dec
fdivs
push
push
adc
xchg
mov
or
outsl
fcom
pop
test
push
lahf
mov
push
fisubrs
out
bound
subl
push
inc
push
roll
xchg
sbb
xor
outsb
loopne
lock
jl
dec
xchg
test
sub
inc
aas
mov
aaa
dec
imul
arpl
ja
scas
outsl
aad
scas
icebp
mov
jl
lea
lock
test
enter
outsl
inc
inc
hlt
mov
and
push
insb
call
xchg
mov
out
aad
bound
xlat
test
scas
jp
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
push
lds
mov
jp
enter
pop
adc
xlat
inc
mov
imul
and
pop
and
ficomps
call
das
cmpsb
xor
not
xor
jae
and
cmpsb
popf
movsl
fisubl
subl
xlat
push
test
dec
in
rolb
xor
push
leave
ljmp
aad
sbb
lahf
testl
mov
mov
adc
pop
fdivrl
cmp
push
aas
adc
aam
scas
sahf
lods
xlat
add
mov
in
mov
adcb
stc
mov
scas
or
add
jo
sbb
sbb
cmp
subb
out
cmp
lock
xor
popa
jmp
adc
jb
pop
pop
push
or
mov
cli
call
pop
inc
pop
cpuid
xor
jg,pn
jle
shlb
push
enter
push
mov
jp
dec
pop
cmc
mov
roll
xchg
cld
mov
xchg
xchg
insb
aad
lahf
jle
xchg
xor
in
cmp
xchg
into
pop
mov
xchg
or
les
test
out
ds
mov
fwait
rolb
jge
imul
adc
lret
cmp
jmp
push
xchg
iret
inc
mov
push
fidivrs
in
imul
mov
outsb
in
lret
sub
jmp
imul
out
push
cld
dec
pop
jno
and
cmpsb
jle
cmpsl
adc
inc
jb
pop
push
sbb
jl
dec
nop
and
addb
cltd
mov
sub
push
xor
gs
sub
and
test
or
dec
in
lock
sti
bound
adc
movsb
mov
jns
mov
data16
mov
xchg
lcall
pushf
adc
scas
lods
stos
stos
jnp
sub
sbb
sub
and
push
mov
adcb
test
sub
fwait
lods
jnp
or
sarb
mov
mov
in
testl
cmc
jp
adc
fistps
lea
mov
mov
pop
or
clc
xchg
dec
pop
icebp
imul
and
sti
mov
sbb
cmp
pop
add
ljmp
scas
fstpl
fdivp
aas
insl
pop
out
lret
mov
sbb
popa
sub
jno
add
into
adc
mov
mov
test
push
loop
cmc
add
fstp
dec
or
dec
pop
jecxz
dec
arpl
sbb
jne
lods
aas
jle
or
dec
mov
and
mov
jle
in
cli
inc
jge
push
stos
rcr
or
add
adc
push
dec
test
add
fldenv
popf
rorl
aaa
inc
mov
jl
lahf
lea
aad
mov
inc
imul
lods
xchg
cltd
ret
mov
push
xchg
movsl
stos
add
push
sub
xchg
jbe
leave
bts
fcompl
sub
ret
push
cwtl
dec
cwtl
flds
pop
loopne
jne
or
pusha
jg
insb
test
imul
inc
add
cmp
shr
nop
jne
jecxz
sbb
add
aad
jno
rolb
dec
add
not
fistps
lea
push
outsb
lock
inc
sarb
lock
and
push
iret
dec
fldl
imulb
aad
mov
jno
nop
jle
test
aas
pop
and
cmpsl
adc
xchg
jg
jbe
cs
mov
pop
ficomps
rcl
arpl
dec
inc
loop
repz
jecxz
frstor
gs
movsl
xchg
shrd
aas
imul
jg
inc
inc
and
pushf
cmp
xor
push
lahf
in
or
movsl
inc
fisttpl
mov
repz
xchg
stos
xchg
lcall
lods
icebp
mov
repz
sbb
jecxz
xor
and
or
cwtl
mov
dec
cwtl
pop
fidivl
iret
movsl
jmp
bound
roll
cld
fbld
in
add
out
adc
pushl
xchg
xchg
pop
int
sbb
aad
out
and
push
and
cmp
lods
jno
xchg
jne
mov
cmp
dec
jle
inc
aaa
pop
jmp
mov
subb
pop
mov
cmp
mov
cld
test
icebp
sarb
lahf
jb
nop
test
mov
jmp
jmp
das
stos
xor
sub
cld
pop
xorl
mov
inc
xor
mov
jmp
push
pusha
in
fisttpl
pop
mov
std
and
cmp
in
iret
push
mov
cli
and
sbb
xchg
add
std
push
gs
xlat
daa
pop
xchg
lea
dec
outsb
mov
sub
arpl
jo
mov
dec
aad
cmp
aaa
push
ret
or
sbb
mov
test
pop
or
popa
je
imul
ds
fs
inc
testl
or
je
iret
icebp
dec
push
mov
jl
xchg
pop
mov
xor
xlat
dec
xchg
sbb
ljmp
subl
popa
in
in
int
push
aas
sbb
add
dec
aaa
insb
cmp
je
shrl
mov
fwait
daa
dec
sbb
aam
adc
inc
cmp
cmp
inc
in
loopne
in
push
sbb
in
test
pop
loope
pop
int3
cwtl
mov
fstpt
or
xorl
lret
loope
mov
jp
pop
pop
inc
push
imul
es
push
or
dec
mov
add
mov
insb
jp
cmp
mov
adc
enter
jae
js
cmp
repnz
cmp
insl
testl
xor
push
push
mov
js
add
arpl
je
orb
adc
das
xcrypt-ctr
cmpsl
sahf
in
adc
lcall
addr16
pop
dec
lds
inc
push
dec
sar
inc
loop
add
shlb
sar
or
jge
mov
adc
jne
js
leave
xlat
mov
adc
or
clc
rcrb
and
cltd
pop
clc
sbb
jg
cmp
out
mov
xor
test
inc
adc
insb
leave
add
ljmp
loopne
insl
xor
mov
mov
and
cltd
cltd
icebp
bound
in
pop
stc
test
jae
es
xchg
push
cli
pop
sub
es
sub
gs
aaa
repnz
aad
lret
arpl
mov
xor
jmp
out
pop
sti
imul
and
and
sub
in
push
jl
fcmovne
lahf
mov
mov
insl
xor
das
jge
xchg
out
fistps
cmpsb
js
aad
std
jge
std
aaa
out
cmc
fldcw
jnp
lods
sbb
jle
pop
ficoml
cmpsl
mov
or
sti
cmp
mov
loop
jecxz
jg
repnz
stos
or
cmc
iret
adc
mov
lock
and
mov
mov
hlt
cwtl
sbb
movsl
in
test
rorb
cli
pushf
mov
jg
shlb
cwtl
sbb
sbb
push
fsub
or
inc
in
jge
cmp
std
mov
sub
jo
div
xchg
sahf
push
inc
setnp
les
dec
adc
out
scas
lock
push
gs
and
and
cwtl
std
sbb
bound
jne
jl
inc
add
and
add
in
lret
adc
mov
push
clc
out
xchg
push
xor
push
in
xchg
mov
dec
dec
mov
ds
scas
test
ret
in
jl
jb
mov
jns
les
loop
add
and
push
xchg
sbb
pop
pop
mov
jb
lret
adc
jne
gs
cld
cmp
lea
push
fisttpl
stos
pop
repz
stc
std
jo,pt
mov
push
repz
icebp
mov
in
xor
lds
mov
cmp
arpl
xchg
push
fdivrs
out
push
push
or
inc
mov
jbe
xchg
sub
push
cltd
les
xchg
iret
mov
clc
jo
jle
aad
adc
cmpsl
and
mov
dec
add
aaa
bnd
inc
jno
ljmp
test
pop
sbb
sub
popa
cmp
jne
add
mov
mov
lea
push
xchg
sti
lret
jle
and
push
sub
pop
shrb
add
rorl
fsubrl
push
mov
sbb
jl
and
daa
leave
fstps
xchg
jbe
inc
int
push
into
mov
movl
jno
out
cwtl
stos
add
cmp
push
push
mov
and
dec
in
pop
pop
adc
lea
sbb
shll
pop
mov
add
add
out
std
mov
mov
into
sbbb
push
in
xlat
jle
iret
mov
mov
cltd
cli
push
push
adc
mov
cltd
in
bound
fists
stos
ret
fistpl
add
add
aad
icebp
out
mov
push
ret
push
add
popa
push
fcoms
dec
fisubrs
out
xchg
jg
cmc
cmp
out
and
and
hlt
repz
in
mov
and
ljmp
rcrb
push
dec
or
ftst
das
or
ds
adc
sbb
dec
and
push
adc
out
push
jne
fxch
sbb
dec
cmp
scas
push
jp
mov
fbstp
adc
js
jnp
mov
pop
push
fnsave
inc
and
stos
rorb
sub
popa
and
push
xor
loope
fimuls
mov
mov
loope
clc
pop
icebp
ss
sbb
cmp
repz
sti
or
lcall
jle
sub
mov
addr16
xor
repnz
pop
sub
ds
stos
cmpsl
jns
jb
dec
push
pushf
jne
sbb
sbb
repz
ret
mov
sub
cltd
dec
lahf
dec
pop
add
stos
test
sub
es
dec
mov
push
roll
iret
add
divl
mov
pop
aas
push
add
xchg
pop
cld
jg
mov
jge
jae
sub
icebp
mov
pop
jmp
jmp
fildll
rcl
inc
adc
pop
cli
cs
js
pop
enter
sbb
stos
out
cmpsl
xchg
pop
std
scas
jae
or
cmpsl
scas
aas
mov
push
scas
jmp
jno
mov
popa
out
push
filds
addr16
rcl
repz
or
sub
push
aad
push
xchg
movsb
sbb
mov
xor
adc
mull
ljmp
cmc
dec
inc
adc
int3
hlt
sub
xlat
adc
xchg
dec
movsl
popa
pop
leave
or
adc
jecxz
jecxz
sti
xchg
mov
mov
popf
adc
dec
add
mov
mov
push
xor
adc
insl
mov
sub
mov
mov
popf
cmpsl
scas
stos
sbbl
push
adc
dec
mov
xchg
and
cltd
pop
aad
cmp
jl
repnz
popf
push
jecxz
jmp
cwtl
pop
adc
push
mov
aam
pop
in
stc
cmp
lods
add
adc
fdiv
movsb
jg
mov
stos
push
cld
jmp
mov
pop
pop
or
adc
mov
popa
gs
jmp
push
fnclex
popf
vandnps
xchg
add
sub
add
test
mov
xchg
ja
sub
sub
int3
out
dec
push
imul
test
decb
push
aas
ja
mov
mov
push
pop
sahf
push
adc
push
clc
out
pop
lods
dec
mov
xor
ja
dec
in
mov
sbb
xor
gs
and
cmc
mov
mov
enter
lods
test
out
cmp
cmp
imul
out
pop
xor
or
push
push
pop
rclb
jge
ljmp
xchg
mov
dec
cld
call
notb
jbe
into
push
arpl
in
in
fstpt
shl
lahf
jne,pt
push
int
ror
mov
xchg
fwait
idivb
jbe,pt
jle
or
popa
fdivl
jo
pushf
push
sbb
notb
js
leave
add
sbb
add
dec
push
leave
xor
fdivrl
in
lock
mov
sub
pop
cmpsb
in
cmp
mov
jne
mov
sbb
inc
addr16
in
sub
jb
add
push
adc
dec
jp
shll
jns
mov
pop
and
push
push
repnz
in
mov
jo
mov
in
sarl
ret
push
jmp
leave
vunpckhps
adc
arpl
adc
ds
sahf
and
rcrl
cmpsb
push
mov
mov
paddsb
sub
gs
mov
push
mov
mov
addr16
adc
inc
inc
cmpsb
movsl
xchg
cld
xor
and
dec
fwait
adc
sahf
outsl
dec
cmpl
std
imul
inc
jo
jmp
je
or
data16
sub
addr16
out
xchg
inc
movsl
cmp
add
sbbb
inc
divl
inc
add
scas
pop
jl
inc
push
pop
pop
fcoms
mov
cli
sub
pop
push
jno
pusha
mov
into
rcrl
cmpsl
lahf
outsl
out
lods
out
hlt
icebp
popa
rclb
inc
hlt
cmp
mov
lret
fmul
subb
movsb
std
mov
adc
lret
ja
cmp
cmpsb
fsubr
xor
fldenv
jl
stc
fsubr
ljmp
dec
and
jno
pop
hlt
repz
ds
adc
cmpsl
test
rorb
cmpsb
shll
leave
roll
mov
daa
ret
jne
repnz
xor
or
jae
cmpsb
pop
inc
aaa
cwtl
ljmp
inc
add
mov
pop
sub
xor
bound
add
push
sub
fwait
xchg
jmp
push
pusha
and
and
ret
sbb
outsl
add
mov
nop
push
push
lds
sub
repz
sbb
iret
ret
cmpsb
sahf
cmpsb
jns
jmp
lcall
imul
jnp
push
dec
lods
movsb
xor
pop
imul
dec
out
aam
pop
jmp
mov
xor
mov
test
cmp
lahf
rcll
mov
xor
jmp
sub
mov
sub
rcll
test
mov
repnz
inc
ror
popf
xchg
sbb
in
jbe
in
xchg
test
xor
or
int
sub
ret
jp
push
cmp
adc
jae
fdivrs
mov
divl
mov
inc
sub
into
pop
ret
sbb
sar
cmp
dec
inc
mov
pushf
sbb
adc
mov
fisubl
rclb
roll
mov
xchg
ja
xor
iret
cmpsl
cmp
sarl
bnd
dec
aas
lds
fwait
mov
xchg
mov
fdiv
imul
sub
ds
inc
mov
jmp
adc
aas
jle
test
lods
shll
cmp
push
push
pop
pop
mov
dec
push
test
sar
stos
arpl
and
lock
filds
mov
cmp
movsb
repnz
xchg
fwait
mov
dec
add
lret
stc
xchg
push
fldcw
inc
xor
lea
jge
roll
in
lret
mov
les
jns
dec
call
insb
je
dec
mov
call
inc
mov
sahf
inc
xorb
mov
shl
fidivs
roll
adcb
xlat
push
repz
jns
es
and
mov
sub
sub
aad
das
dec
sbb
xor
movl
pxor
lods
add
push
outsb
inc
dec
fisttpll
cli
and
pop
xor
sbb
and
jns
add
mov
sub
stc
inc
int3
lret
add
mov
ficoml
or
jo
push
fwait
orl
pop
insl
daa
or
insl
mov
xor
shrb
test
pop
pop
jp
inc
pop
arpl
insb
pop
mov
jl
aad
iret
mov
int3
xchg
test
ret
push
or
mov
and
aam
mov
test
lock
and
mov
lds
sarl
sub
adc
add
mov
dec
xorl
mov
xor
pop
xlat
jle
lret
fstl
and
out
sbb
push
lret
ljmp
dec
inc
push
aas
mov
cmpsl
adc
xor
pop
call
dec
push
bound
je
fsubrs
ret
enter
call
mov
jae
aam
adc
pusha
push
sar
ljmp
or
mov
sbb
inc
rolb
mov
fbstp
addl
orl
in
imul
mov
out
mov
stc
jnp
dec
rolb
outsl
mov
cmpsl
pop
inc
test
aam
push
pop
jg
insb
loope
xchg
roll
das
lds
addl
pop
out
mov
cmp
test
and
mov
push
or
cmc
mov
add
pusha
dec
add
idiv
jb
push
pop
sub
dec
sbb
mov
lret
push
inc
mov
lds
out
js
cltd
test
decl
lahf
sbb
fcomps
in
add
into
mov
mov
clc
jno
or
xor
jb
ja
adc
jp
cli
xor
cmp
iret
xchg
int
dec
and
movsb
fdivr
bound
std
rorb
lock
push
jne
push
out
mov
in
xchg
cwtl
sbb
imul
mov
lods
or
nop
sbb
gs
ds
jl
outsb
das
mov
mov
lods
shrl
push
adcl
mov
mov
adc
popf
jae
pop
xchg
stc
dec
test
int
xchg
or
adc
fidivl
or
mov
lret
hlt
jo
int
jo
sets
or
dec
sbb
mov
cmp
iret
lds
rolb
roll
push
loope
and
jg
lea
mov
rorb
or
fxch
in
pop
dec
jecxz
pushf
fldcw
cmp
dec
mov
fmuls
adc
jmp
je
add
in
insl
jbe
cmp
insb
sbb
es
mov
dec
and
rclb
pop
add
inc
ret
add
add
cmc
jecxz,pt
push
clc
cmpsl
movl
enter
xor
adc
jle
mov
mov
push
pop
shrl
cli
fstpt
cmp
inc
sub
mov
pop
lret
mov
js
gs
int3
push
decb
sub
inc
fistl
rcll
dec
out
adc
jne
daa
lret
div
or
lock
mov
adc
push
xchg
stc
cltd
mov
pop
into
aas
cmpsl
lea
cmp
fdiv
push
icebp
and
je
add
inc
rcll
mov
mov
push
jo
lahf
outsl
cmpsb
xchg
sahf
subl
or
ds
push
add
xor
faddp
aaa
jl
stc
dec
aaa
or
subl
dec
ja
shlb
mov
xor
mov
loopne
pop
cmpsb
pusha
test
mov
jae
push
sbb
das
push
mov
mov
popf
mov
sbb
mov
xchg
jl
mov
and
lahf
aam
adc
cmp
pop
aas
push
jbe
fidivrs
popf
ret
jecxz
aad
cmp
add
xlat
or
jle
fimull
lea
xorl
out
or
push
or
mov
stos
cmp
cltd
popa
xor
out
inc
or
inc
jb
mov
pop
push
scas
mov
mov
out
icebp
dec
sub
pusha
lea
dec
sub
adcb
xchg
cld
lret
cli
mov
push
inc
add
jmp
push
xchg
rcll
insl
movsb
mov
jae
fsts
aad
cmp
lds
sbb
mov
les
stos
push
xchg
ljmp
adc
stos
sbb
push
and
insl
jae
mov
cli
out
dec
gs
jnp
mov
lret
and
dec
mov
push
mov
dec
cld
and
test
js
icebp
pop
or
dec
lock
and
push
and
inc
sbb
mov
in
mov
dec
xlat
xor
jo
mov
and
mov
pop
sti
cmp
inc
jnp
into
jl
push
sbb
outsl
jl
loope
push
cmc
xor
not
and
dec
sbb
inc
pop
pop
push
scas
pop
xchg
pop
test
or
loope
iret
les
outsl
int3
pop
jbe
jae
sti
pop
add
movsb
push
leave
imul
adc
jbe
scas
sbb
lahf
push
test
mov
sahf
adc
sbb
dec
lcall
pop
call
fcoms
cwtl
jno
cmc
in
sahf
mov
test
lcall
push
mov
psubq
repz
push
bound
jns
iret
push
jecxz
lret
cmp
dec
pop
push
clc
outsb
pop
inc
lods
dec
sahf
bound
cmp
bound
ret
movsl
ljmp
scas
imul
inc
das
push
xor
movsb
xchg
jb
push
test
sub
repnz
int3
rcll
shll
mov
into
outsl
mull
cmp
aas
jg
xchg
movsb
jo
and
push
xchg
and
rclb
cmp
addr16
cltd
jl
sub
cmpsl
cmpl
stos
or
jmp
aam
sbb
in
dec
cmc
filds
dec
fs
pushf
dec
jge
mov
cld
pop
cmc
pop
xor
scas
scas
mov
mov
jmp
add
scas
in
pop
imul
popf
push
cmpb
cmpsl
jne
daa
pop
data16
or
mov
jo
push
xor
pusha
ficoml
je
push
iret
loop
insl
jbe
flds
xor
xchg
push
adc
inc
push
ds
iret
fistpl
sbb
and
shrl
or
push
push
std
pop
inc
jno
inc
or
and
jo
mov
pop
and
mov
pop
mov
jmp
cmp
mov
pop
mov
cmp
inc
dec
iret
sub
mov
scas
inc
stos
dec
pop
idiv
mov
movsb
add
ja
and
jne
push
std
cmp
sahf
scas
enter
loop
and
adc
popa
mov
scas
decb
jnp
fidivrl
mov
ss
dec
icebp
ret
hlt
and
lods
cmp
cmpsb
pop
mov
jne
xor
jb
inc
ljmp
jnp
mov
ja
add
cmpsb
push
pop
sbb
daa
dec
fiadds
push
test
repz
mov
jne
add
push
les
sub
jns
les
movsl
dec
dec
addr16
icebp
mov
cltd
jne
out
out
fsubr
shlb
adc
adc
jne
sub
dec
mov
popa
mov
add
or
mov
mov
lods
and
and
in
je
into
ret
int
mov
sbb
jns
mov
cmp
push
jl
out
sub
inc
ljmp
in
mov
and
adc
push
cltd
fdivrl
xchg
adc
xchg
in
inc
mov
cltd
jne
loope
fnstcw
lret
not
xor
or
add
mov
icebp
push
popf
xor
dec
mov
cmp
cld
pop
dec
mov
movsl
adc
jb
pop
jae
mov
data16
bound
mov
repz
aas
fisttpll
dec
xchg
pop
xlat
xchg
push
jae,pt
testl
loop
jp
fists
imul
sbb
mov
out
mov
loope
jp
dec
ficomps
mov
in
sbb
fisubrl
movsl
imul
inc
cmp
and
or
push
adc
loop
dec
pop
add
out
cmp
pushf
mov
shll
push
dec
outsl
js
sub
pushf
sbb
out
movsb
ds
cmp
repnz
andb
push
ljmp
pop
push
mov
int
and
push
aas
lods
out
jno
ljmp
sub
int
pop
scas
mov
pop
inc
mov
fadd
ds
inc
and
cmp
ret
rcr
inc
xchg
adc
aaa
out
pop
and
push
clc
ss
rorb
lods
pavgb
or
add
into
sbb
leave
popf
aas
outsb
adc
imull
shll
lds
and
jae
repz
and
jbe
popf
xor
ja
cld
aam
xchg
sub
in
jge
dec
ja
mov
push
mov
cmp
push
inc
mov
aaa
sbb
hlt
icebp
out
pop
push
jecxz
aam
ss
test
sbb
xor
inc
and
mov
lds
jp
adc
sub
jo
inc
push
lods
cmp
inc
xor
fadds
ret
loope
outsl
enter
pushf
popf
rcll
popf
add
jb
jns
mov
pop
rorl
popf
call
scas
int
xor
dec
aaa
adc
xchg
fwait
push
mov
jno
test
push
pop
jle
stos
out
je
in
insl
sbb
jmp
das
test
mov
outsl
jl
push
int3
pop
or
cmpsb
je
ficoml
jo
xchg
or
roll
mov
pop
lea
out
mov
test
mov
mov
sbb
dec
inc
js
scas
sbb
inc
push
and
add
sub
add
aaa
cmp
xchg
sbb
gs
add
sti
xor
cmp
mov
les
pop
and
mov
ficomps
mov
vandnpd
mov
cmpsb
lahf
jns
popa
sbbb
mov
mov
mov
lods
outsb
fisubrs
mov
mov
pop
icebp
ds
cld
jno
dec
pop
lds
jl
mov
arpl
ficoml
add
inc
pop
data16
hlt
pusha
mov
std
dec
dec
adc
or
pop
pop
aaa
lret
subl
movsb
or
popa
xchg
daa
pusha
cmp
imul
dec
xchg
dec
ror
sub
pop
ficoml
add
mov
inc
cmp
aaa
test
dec
data16
fcoml
ffree
inc
pop
scas
mov
dec
mov
xlat
inc
pop
sub
jb
push
bound
inc
mov
cmc
mov
js
test
and
cmc
cmp
mul
mov
or
insb
push
sub
fwait
jge
sbb
test
mov
out
jb
push
jnp
xor
sbb
mov
sub
mov
mov
jmp
sub
bound
mov
cmp
fcoml
jne
stos
pushf
cmp
std
mov
jns
cli
mov
loope
or
inc
sub
xchg
xor
xchg
mov
addl
xchg
cmp
cld
push
mov
fld
sbb
mov
loope
faddl
lea
js
inc
sbb
lret
aas
sub
lret
ds
pop
lea
pop
test
ficompl
adc
push
movsl
dec
xor
fidivrs
cmp
nop
jo
pop
je
cmc
fidivl
int3
repnz
fstpl
divl
cmpsl
pop
enter
cmpsb
pop
mov
jmp
sbb
sbb
mov
jge
lods
lods
xchg
lahf
ret
sbb
repnz
inc
inc
cmp
inc
mov
outsl
aas
dec
loope
mov
outsb
test
push
push
inc
and
or
outsl
sahf
imul
inc
leave
pushf
jmp
enter
and
dec
fisubrl
mov
enter
sbb
ds
xchg
push
dec
ret
or
fnstcw
outsb
xlat
pop
ss
mov
mov
xlat
int
je
add
fisttpll
xchg
jb
daa
jne
cli
pop
push
mov
mov
andl
add
jne
inc
xor
fnstenv
inc
mov
pop
lods
and
in
mov
in
lret
sbb
repz
lea
popf
call
cmp
stos
ja
lock
pop
inc
xor
sub
int
cmc
and
lret
sub
sbb
aam
and
add
mov
ds
cmp
xlat
addr16
outsb
js
int3
aas
ss
mov
sti
jne
stos
fistps
fisttps
call
and
js
add
popa
mov
rolb
dec
jp
repnz
les
push
ficompl
addl
arpl
ss
psubb
dec
push
in
sti
out
jae
sub
pop
mov
cltd
mov
out
mov
rorl
inc
popa
xchg
std
in
les
lods
in
mov
aas
cmpsl
xor
cmp
data16
add
xchg
dec
sub
shrb
xor
push
push
fwait
xor
insl
sbb
cs
scas
dec
push
push
test
cmp
cmc
cmp
xchg
mov
dec
cmpsl
into
hlt
inc
inc
movsb
iret
adc
daa
push
mov
mov
ss
pop
lock
mov
leave
push
adc
cmp
in
pop
pop
inc
and
xchg
jne
adc
mov
test
mov
jge
push
fmuls
movsl
test
jmp
aaa
jae
pop
shl
in
jle
jb
fsubl
jl
push
out
inc
pushl
mov
xor
jecxz
push
push
jge
decb
mov
addr16
shl
cmpsb
test
cmp
inc
push
or
sub
push
scas
jo
fildll
jae
ret
fistps
push
roll
mov
xor
roll
inc
mov
sub
xor
in
pop
adc
faddp
ds
sub
mov
pushf
pop
push
xlat
fs
xor
adc
stos
xchg
push
es
hlt
jo
outsl
orb
push
mov
popf
testb
jne
cmp
add
sbbb
mov
shrl
push
xchg
push
jnp
in
call
addr16
movb
movsl
dec
test
sbb
andb
je
mov
jnp
gs
cmpsl
jmp
sbb
lahf
ss
jg
test
or
add
dec
add
stos
fidivrl
ljmp
mov
rcr
roll
filds
adc
ror
pop
arpl
dec
cltd
add
je
aas
sub
fisubrs
insb
xchg
das
movsl
fdivs
repz
test
inc
je
imul
mov
push
and
add
orb
xorb
jecxz,pn
in
sbbl
jne
lret
mov
jb
dec
addr16
ret
movsl
pop
fmuls
repnz
pop
push
sti
scas
add
mov
inc
add
mov
stc
rorb
insb
repz
jg
jecxz
sbb
inc
pushf
mov
loope
add
sub
lret
adc
addr16
dec
xchg
pushf
jnp
inc
mov
xchg
xchg
pop
dec
fsubrp
mov
push
mov
outsl
ds
xor
xchg
xor
lcall
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
jbe
and
cmpb
pop
jp
cmp
popa
popa
mov
sub
in
lahf
cmp
std
insl
fmuls
push
mov
sbb
enter
adc
imul
add
jecxz
sub
sbb
enter
fidivl
sbb
rol
fisubrl
repnz
xchg
or
ja
lret
add
and
xchg
jo
call
pop
call
xor
cltd
xor
sub
jle
sbb
jbe
and
imul
sbb
pop
test
addr16
imul
push
mov
movsb
cmpsl
rcll
mov
dec
insl
ja
cmp
fs
dec
hlt
cmp
inc
or
imul
xor
int3
and
sbb
cs
add
xchg
and
lea
jns
adc
lret
sbb
repz
repz
add
into
jp
insl
xor
fcompl
fdivl
push
test
mov
sub
sub
in
sbb
ja
ljmp
and
inc
pop
or
push
mov
loopne
les
mov
mov
gs
jo
pop
and
jne
ret
loopne
and
xor
aad
cmp
mov
xchg
adc
scas
fisttpll
and
loop
call
cltd
mov
add
bound
dec
pop
pop
int
mov
cwtl
fnstsw
jns
pushf
cmpsl
lock
movsl
shrb
push
sub
nop
xchg
fidivrs
jle
mov
data16
mov
cmp
inc
inc
mov
fsub
cmp
add
pop
dec
sbb
mov
scas
pushf
mov
pop
lahf
pop
es
das
loopne
adc
or
dec
mov
fsubr
push
popa
push
adc
inc
push
shll
idivl
fs
loop
mov
fwait
dec
inc
xor
pusha
or
xor
cld
das
cmpsl
ja
test
jmp
aam
shll
xchg
mov
jecxz
pop
sub
es
pop
and
add
or
jb
jl
loopne
int
movsl
adc
jo
inc
jmp
out
gs
and
pop
xor
repz
std
ljmp
add
jb
xchg
insl
ss
idiv
loop
cmp
aas
hlt
and
sbb
ds
out
out
mov
das
xchg
and
lds
dec
xor
mov
mov
and
adc
cs
or
push
sub
stos
pop
in
lds
bound
mov
ja
pusha
sbb
mov
fwait
xchg
push
xchg
or
push
xor
ret
iret
test
stos
fidivl
sub
lahf
xchg
loop
fldz
cld
jp
daa
adcb
pushl
int
pop
inc
push
sub
mov
or
push
insl
jecxz
test
mov
adc
push
lahf
xchg
dec
cld
push
ss
push
orb
sbb
stos
inc
dec
sti
mov
out
loopne
mov
jl
ret
jno
shrl
cmp
pop
fwait
test
pop
sete
mov
xor
mov
cmp
aam
add
js
repnz
mov
and
mov
pusha
pop
xchg
mov
cmc
in
lods
inc
aaa
fnsave
aam
mov
leave
dec
mov
or
testb
xchg
in
movsl
stos
jae
and
dec
cs
push
or
and
in
lcall
or
test
add
push
mov
pop
pop
das
clc
xor
add
jno
repz
ret
shrl
xor
push
push
repz
push
xor
adc
push
xchg
loop
adc
and
out
adc
jo
lret
dec
daa
out
add
jno
hlt
sbb
jno
loop
lahf
xor
cmp
sbb
sti
negl
lock
fistpl
lods
xorl
and
outsb
xchg
fwait
mov
outsb
mov
push
loopne,pt
pop
es
dec
mov
xchg
or
aam
in
leave
sub
cmc
jb
int3
icebp
cmp
sbb
int
fmull
shll
test
cli
ficoml
lret
jle
dec
pmaxsw
rcll
movsl
jbe
pop
pop
xchg
inc
jo
add
insb
add
xor
test
fs
imull
mov
inc
clc
fdivr
lcall
test
ret
sbb
pop
jmp
iret
push
pop
dec
xchg
jae
mov
ret
xchg
mov
jnp
inc
dec
ss
add
movsb
into
adc
push
clc
xchg
mov
lods
scas
js
sbb
lret
popf
lock
xor
sub
adc
mov
testl
clc
faddl
sbb
add
cli
fcompl
mov
jmp
loope
mov
fimull
xchg
lret
mov
pop
xchg
cld
js
outsb
pusha
add
sahf
push
sub
mov
sub
dec
mov
push
scas
out
ja
in
out
adc
cmp
scas
and
aad
adc
addb
loop
adc
xor
pusha
movsb
arpl
pop
sub
mov
and
pop
inc
data16
jge
xorb
ret
roll
sbbl
shrl
sub
cmp
movsb
and
jno
in
pop
call
fsubrs
jae
push
xchg
pop
jno
test
test
dec
sbb
adc
cltd
sub
or
gs
mov
loope
push
mov
aad
inc
push
sbb
push
push
sbb
out
lds
pop
inc
xchg
sub
push
out
scas
fnstcw
dec
fdivrs
fwait
cld
xor
clc
cmp
mov
jns
gs
ficomps
lods
stos
lods
push
aaa
das
xchg
dec
adc
sbb
outsl
jecxz
pop
mov
inc
cld
data16
cs
icebp
jne
js
push
shrb
pop
clc
fdivrl
outsb
xor
pop
push
mov
xorb
push
xchg
inc
xor
mov
cmp
stos
pushf
int
stos
stos
movsb
insb
in
cwtl
mov
pop
divl
dec
loopne
cmp
push
movsb
sbb
jo
aam
pop
fcomps
lret
subl
xchg
pop
pushf
insl
stos
fsts
jb
dec
jb
test
insb
in
ss
mov
push
scas
xchg
xchg
ja
mov
pop
fisubrl
in
cmpb
test
and
js
js
cmpsb
mov
lds
mov
xchg
xor
or
movsl
and
push
aam
daa
sahf
push
or
jnp
pop
ja
mov
mov
or
loopne
xchg
loope
mov
daa
jae
or
je
fadds
out
sbbl
int3
loop
loope
ret
jo
mov
cmp
arpl
adc
faddl
mov
jl
sbb
daa
decb
or
add
add
lods
addr16
mov
enter
jg
and
add
jbe
bound
mov
lea
sahf
xor
enter
jp
mov
pop
and
mov
or
xor
and
or
in
out
hlt
pop
daa
scas
cmp
popa
cmp
in
idiv
push
add
insl
sbb
dec
jmp
imul
and
jg
das
rcrl
and
push
fnstsw
int
imul
mov
rclb
loop
movsl
mov
or
outsl
xlat
es
push
ficomps
out
leave
stos
jns
push
fcmovne
gs
xor
push
in
call
jns
sub
cs
rcl
out
mov
scas
ret
in
and
sub
inc
mov
push
jb
fnsave
adcl
adc
xorb
lds
and
test
mov
mov
add
mov
push
cmp
xor
out
mov
fs
subl
mov
and
pop
in
mov
ja
lock
or
sub
push
dec
pop
iret
lea
mov
repz
arpl
and
dec
cs
push
popl
push
jecxz
or
nop
and
pop
scas
xor
ret
mov
lret
pop
mov
xchg
xlat
sub
jg
pop
inc
cli
adc
mov
push
popa
jnp
cmp
addr16
push
ljmp
mov
cld
rorb
mov
popf
inc
icebp
test
pop
pop
in
inc
stos
fidivs
mov
std
sub
inc
jns
sarb
push
movups
imul
out
push
push
xchg
pusha
xchg
jle
movsl
leave
mov
nop
int3
popa
arpl
repz
out
out
dec
pop
mov
inc
popf
xchg
lret
mov
scas
mov
daa
push
sub
sarb
pop
insb
in
leave
jecxz
add
adc
pop
jecxz
xor
nop
sub
push
pop
sti
push
pushf
xchg
std
sub
es
xchg
popf
cmc
mov
ret
jbe
xchg
push
nop
jne
cmp
and
xor
mov
mov
sbbl
mov
add
mov
jns
movsl
jo
mov
stos
jg
push
fnstcw
pop
mov
sub
cli
add
push
add
mov
jmp
lods
add
pop
jmp
adc
jge
mov
hlt
fadds
sub
cmp
mov
aam
shlb
xor
or
out
cltd
sahf
imul
xor
sub
jmp
repz
push
jo
xchg
and
rcrl
je
fnstcw
and
xor
mov
inc
cmpb
xor
push
int3
cmpsl
jge
sub
enter
lods
lds
sahf
pop
ljmp
xor
in
ja
lahf
fsubrl
xor
sbb
mov
sub
or
jp
pop
aam
xor
fdivrl
test
add
lahf
insl
xchg
popl
xor
mov
pushf
dec
ss
ss
and
dec
sbb
xchg
stos
outsl
sub
mov
jnp
test
jb
fisttpl
jne
das
jl
pop
mov
movsl
push
xor
divb
mov
or
add
inc
push
outsl
rcr
cmpsl
cmp
add
pop
and
jnp
cmp
out
add
mov
scas
leave
jp
xchg
sbb
in
xchg
dec
repnz
movsb
lahf
fmulp
push
lds
aas
jo
sbb
bound
sahf
fistpl
mov
pop
leave
mov
mov
and
jno
jle
and
and
icebp
and
and
sbb
mov
mov
sub
dec
inc
shll
push
jecxz
push
cmp
dec
add
fldcw
in
daa
fcompl
pop
push
jne
xor
push
sub
ja
mov
jge
sub
popf
clc
mov
push
push
loope
cmp
iret
mov
pop
stos
rsm
cmp
mov
mov
lcall
test
mov
xor
sbb
jo
int
ffree
dec
addr16
or
cmpsb
imul
lahf
cld
pop
and
ljmp
loop
mov
je
or
in
push
jmp
pop
cmc
mov
or
mov
and
fldenv
mov
jp
adc
nop
mov
sub
or
and
mov
fwait
pop
out
sbb
leave
sub
inc
mov
adc
addl
mov
icebp
dec
push
and
scas
lcall
inc
xor
jg
dec
jbe
test
mov
adc
mov
clc
out
arpl
out
or
je
in
outsb
add
adc
pop
mov
xchg
inc
pop
adc
cmpsb
sbb
sub
rcrl
cmp
sahf
shl
sub
sbb
int
add
mov
add
ds
leave
pop
rcrl
push
or
and
inc
loopne
xchg
lods
xchg
add
fidivl
and
es
sub
cltd
mov
lods
jmp
rorb
scas
sub
mov
jo
stos
push
addl
sbb
shrl
dec
sbb
out
push
aad
fdivp
xor
fwait
push
enter
mov
loopne
inc
in
xchg
adc
xor
dec
outsb
imul
aaa
cltd
or
stc
add
pop
sbb
inc
ja
sarb
data16
inc
adc
jp
out
stc
mov
push
imul
inc
dec
jg
bound
pop
mov
aam
push
fcom
adc
mov
pop
sti
jne
jmp
imul
out
rcrl
cmc
in
lods
fisubl
push
punpckhbw
sub
xchg
xchg
mov
cmpl
jmp
loope
pop
pop
adc
jp
out
sbb
sub
out
sbb
mov
in
jl
sub
movsl
fistps
in
cmpsb
xor
imul
or
and
aaa
or
adc
xchg
into
in
xor
mov
loope
pop
and
scas
dec
jo
imul
mov
mov
pop
adc
ljmp
arpl
xchg
test
lea
sti
pop
pushf
jmp
mov
ret
in
jnp
jne
xchg
lahf
shrl
std
adc
jnp
ret
or
mov
or
adc
sbb
repz
out
pop
pop
mov
test
fiadds
jp
fucomip
xor
in
push
shll
or
dec
psubusb
int3
xlat
mov
xor
cmpsb
inc
dec
daa
imul
or
mov
test
push
jnp
or
or
ds
fneni(8087
xlat
xchg
int
scas
out
add
negl
pop
repz
arpl
pop
leave
popa
adc
jecxz
jecxz
int3
or
repz
lret
inc
in
test
dec
cld
mov
es
mov
stos
fwait
push
sbbl
les
push
bound
mov
jne
repz
lahf
decl
inc
sbb
data16
or
sti
inc
shrl
pop
dec
les
sbb
pop
push
subb
int
and
adc
jmp
ljmp
adcb
inc
inc
push
addr16
test
jl
std
outsb
imul
mov
dec
mov
adc
unpckhps
ds
mov
orl
mov
cmpsl
sbb
das
push
push
out
cmp
add
stos
ret
lret
fwait
push
mov
shr
sbb
movsb
lds
aam
sub
test
les
scas
pop
adc
in
pop
aas
insl
lock
lds
push
mov
scas
outsb
mov
je
cli
pop
add
dec
dec
into
in
cmpsl
mov
bound
xlat
mov
mov
fcmovbe
repz
adc
cmp
xchg
repz
shlb
sarb
inc
mov
movaps
xchg
imul
mov
jp
push
iret
xchg
in
leave
xchg
inc
sbb
pop
and
stos
inc
add
roll
push
lock
sub
aad
inc
fisttpll
punpcklbw
ret
sbb
pop
push
mov
cwtl
gs
inc
mov
into
ds
incb
int3
pop
push
aam
inc
in
imul
jmp
std
pop
sbb
mov
mov
loop
mov
cwtl
data16
clc
in
push
and
xchg
xlat
mov
xchg
jp
pop
clc
pop
sbb
and
lcall
mov
dec
push
pop
das
adc
jb
dec
mov
fsubrs
cmpsl
pop
jmp
into
jp
repz
cmp
jmp
sub
or
xchg
sub
lahf
push
mov
in
dec
pop
mov
and
cld
pop
icebp
jp
inc
cmpb
clc
test
sbb
jbe
xchg
nop
pusha
jp
or
cmp
sub
push
sbb
fcomi
mov
add
pop
xor
adc
sub
ljmp
clc
lods
pop
lods
enter
mov
mov
or
xchg
es
cmpsb
mov
sub
push
xchg
fs
adc
lea
mov
mov
sbb
pop
dec
jg
push
scas
pusha
push
loopne
pop
idivb
addr16
cs
psrld
mov
and
sahf
mov
lds
or
xchg
int3
or
int3
cmp
xchg
cwtl
mov
in
je
test
jge
jno
imul
lods
jb
stos
mov
pusha
popa
ret
add
sbb
adc
cmp
inc
push
jbe
stos
mov
out
pop
xchg
roll
or
movsb
nop
fldl
adc
sub
cmp
mov
cmpl
std
jle
xchg
pop
out
dec
in
mov
stc
and
dec
adc
popf
lret
inc
shll
mov
pop
push
cmp
cmc
in
scas
xor
divl
dec
cmpsl
jmp
add
in
outsl
in
add
mov
push
adc
cli
out
fisubrs
mov
mov
mov
ljmp
aaa
lret
fmull
pop
push
jmp
jnp
mov
ficoml
ljmp
add
bound
cmp
xor
mov
ret
xlat
and
dec
sbb
or
movsl
fsubrl
and
pushf
in
imul
iret
insl
insb
cli
add
outsl
push
adc
test
mov
test
int
pop
adc
jb
mov
and
dec
addl
xchg
in
mov
sti
xlat
bnd
out
xchg
enter
inc
xor
adc
sbb
movsl
sub
sahf
rclb
push
icebp
mov
mov
inc
lret
pcmpgtb
inc
xlat
out
adc
push
mov
pop
lret
ret
shrb
hlt
sub
dec
jne
mov
pop
repnz
popf
out
mov
popa
cli
mov
or
push
xor
xchg
dec
fwait
mov
test
outsb
pop
cmp
sahf
mov
jno
cmp
fwait
or
cmp
mov
aas
test
rcrb
ret
iret
leave
outsb
mov
or
cltd
add
mov
adc
dec
jmp
jnp
xlat
negl
icebp
in
and
sub
ss
cltd
addr16
les
sbb
lods
pop
mov
jns
insl
fidivl
sbb
mov
lahf
adc
mov
cld
mov
mov
xchg
sbb
and
adc
leave
insl
imul
in
mov
mov
call
mov
push
add
inc
xchg
ret
rcrb
movsb
sub
pusha
or
mov
cmp
outsb
dec
outsb
mov
cmc
and
push
mov
pop
inc
shr
jecxz
jae
or
stos
dec
cmp
cmp
cltd
inc
cwtl
repz
outsl
stc
sbb
and
lahf
pop
in
int
mov
cmp
lods
addb
ljmp
jns
jne
test
icebp
enter
pop
cmpxchg
fidivrl
arpl
mov
out
into
cmpsb
pop
mov
push
cld
es
pop
pop
pop
mull
mov
sbb
xchg
in
xchg
push
ds
rorb
std
movsl
cvtdq2ps
inc
lods
xchg
out
shl
fdivl
mov
sub
vmovd
out
out
push
or
mov
popa
out
xchg
ret
mov
cmp
bound
mov
in
ja
pop
daa
notl
and
int
xchg
or
pop
cmp
arpl
addl
mov
mov
add
fnstenv
insb
mov
xchg
addl
or
mov
mov
repnz
pusha
ret
aas
jo
or
loopne
add
add
pop
pop
popf
ljmp
jbe
ficompl
mov
stc
add
jb
leave
jl
mov
pop
push
cltd
inc
not
mov
jno
loopne
xchg
popf
jge
xchg
nop
aaa
ret
mov
push
mov
xchg
inc
xor
out
popa
pop
pop
mov
shrl
jbe
hlt
stos
mov
sub
test
rcrb
subl
incl
xor
fistpl
xor
pop
lods
addb
mov
lods
iret
pushf
mov
add
call
or
jg
cmp
shl
add
hlt
jns
sbb
hlt
out
jne
inc
or
mov
ljmp
mov
lds
or
jb
or
cmp
adc
nopl
ss
mov
push
jg
call
mov
pop
inc
ds
test
into
lahf
out
cmp
lret
loopne
testl
sbb
dec
pop
imul
insb
lret
pop
lea
xor
jg
shufps
or
andl
mov
mov
adc
lret
push
mov
push
push
lods
lahf
loope
andb
pop
and
mov
shll
dec
push
and
aas
xchg
inc
mov
add
in
sbb
in
jns
fcmovne
mov
sbb
popf
push
fs
push
xchg
pop
adc
pop
push
mov
shll
int
mov
hlt
mov
push
pop
push
stc
or
in
adc
sub
fcmove
ljmp
push
sbb
incb
enter
adc
leave
test
cmp
push
je
fwait
les
pop
mov
sub
mov
xchg
push
mov
dec
mov
call
sub
mov
jmp
jns
in
jb
daa
mov
xchg
shl
pop
insb
jle
inc
in
xor
pop
xchg
cwtl
mov
jno
jae
inc
mov
ss
mov
pop
inc
out
shrb
add
aas
jae
xor
and
pop
pop
gs
sbb
aaa
mov
bound
dec
mov
pop
lods
mov
inc
int3
or
mov
dec
adc
dec
mov
push
rolb
push
jo
mov
cmpsl
pop
popf
nop
jmp
in
jecxz
mov
mov
jo
mov
cmp
outsl
adc
adc
jge
cmpsl
sbb
push
sub
push
mov
fimull
ffreep
mov
sub
popf
pop
xor
std
jp
cmp
cmp
stos
flds
cld
gs
pop
push
push
mov
idiv
add
icebp
xchg
mov
adc
mov
subl
mov
push
mov
jecxz
mov
mov
incb
lahf
in
lods
in
ss
mov
or
and
ja
pop
insl
cmp
mov
dec
xchg
pop
lods
and
movsl
mov
inc
rclb
lods
aas
aaa
lock
add
pop
jae
popw
popw
mov
cmp
adcl
xor
jo
mov
mov
and
inc
shlb
repz
jae
mov
add
mov
cli
mov
xorl
cmp
jnp
mov
xchg
lds
lods
jae
mov
dec
inc
cmp
sahf
push
fs
sub
xchg
loope
adc
cmp
dec
jae
mov
rcrl
lcall
pusha
adc
iret
inc
push
inc
in
scas
and
iret
or
xchg
dec
sbb
pop
leave
movsb
subb
aad
leave
lea
das
cli
fdivs
jle
sub
aam
loopne
xchg
movsb
xchg
pop
pop
mov
sahf
push
out
rcl
cmp
adc
fs
movsl
inc
iret
mov
aas
adc
adc
add
mov
dec
push
cmp
icebp
cmpsl
xchg
inc
mov
xor
add
sti
pusha
dec
repz
in
xchg
fldl
inc
mov
enter
cmp
lea
xor
push
adc
mov
sub
xor
xor
rolb
jg
sub
lret
cmc
aam
push
lret
pop
dec
pop
xorb
jle
or
xchg
js
cs
popf
sbb
aas
add
rcll
add
in
pusha
in
enter
mov
add
mov
lahf
leave
jge
cmp
xchg
pop
jmp
loop
mov
mov
cwtl
inc
data16
sbb
mov
bswap
lds
inc
mov
or
xchg
test
cmp
sti
stc
mov
sbb
shlb
pop
rorb
cmpsb
bound
sub
mov
cwtl
and
test
jbe
mov
popf
mov
mov
cwtl
lds
stos
sbb
mov
sub
hlt
xchg
scas
testb
pop
iret
in
xchg
cld
xchg
push
mov
mov
xor
lret
movsb
jecxz
test
or
or
inc
arpl
fisttps
inc
and
mov
ds
test
lret
subl
xchg
jnp
push
adc
sbb
adc
test
mov
push
sahf
shlb
pop
or
outsl
jle
mov
xchg
dec
mov
shll
xchg
sbb
les
fcom
inc
pop
mov
jp
cmp
scas
sbb
adc
fcoml
mov
insb
add
mov
inc
arpl
cld
push
xor
cmp
popf
cwtl
pop
sahf
aam
loopne
pop
popf
inc
mov
imul
adc
enter
jl
cmpsl
lods
fmuls
stos
sbb
js
mov
xchg
and
cmp
or
aaa
cltd
lret
out
in
rorl
mov
loope
cmp
cmp
scas
mov
dec
mov
adc
jno
cmc
mov
dec
nop
jno
leave
dec
cmp
jmp
cli
push
sub
cmp
rclb
mov
mov
mov
lret
adc
addl
xor
mov
leave
xchg
sub
adc
add
and
rolb
es
mov
push
cltd
sub
push
ret
pop
pushf
in
pop
cmp
sub
movb
mov
adc
push
jns
mov
pop
lock
ret
xchg
insb
test
pop
ret
sbb
lret
adc
rcll
inc
xchg
xchg
das
in
dec
pop
orb
xor
loop
jbe
cwtl
inc
add
cmp
mov
clc
xchg
xchg
ss
adc
mov
pop
add
mov
rorl
invd
and
lods
push
test
pusha
rcl
sub
in
adc
inc
xchg
test
sarl
mov
ss
sbb
inc
ss
repnz
or
sub
inc
push
xchg
rcrb
jo
sub
imul
mov
rcrb
test
mov
int
jbe
jae
jle
jb
mov
push
jbe
ljmp
bound
lcall
mov
outsb
pop
dec
test
adc
inc
and
sti
mov
imul
jg
stos
push
outsl
icebp
pop
sbb
in
mov
js
ljmp
xchg
out
add
fsubl
mov
fs
mov
or
cmp
int
add
rcr
out
lahf
outsl
jp
mov
ret
lcall
pop
xlat
jge
xchg
xchg
add
sarl
xchg
gs
mov
fbstp
adc
sub
sub
push
mov
imul
lret
sbb
jo
repz
pop
cmp
scas
and
inc
pusha
cmp
icebp
inc
in
push
mov
js
cmp
aam
push
pop
stos
jo
cmp
insb
mov
addb
inc
stos
fdivp
pushf
iret
icebp
cs
sbb
jne
mov
movsb
sub
cmp
pop
call
punpckldq
js
jg
lods
add
ljmp
dec
les
sub
loope,pt
sub
icebp
and
mov
fnsave
push
cmp
sub
xchg
pop
movsl
cwtl
imul
movsl
dec
sub
push
ficomps
mov
pusha
push
cld
and
and
mov
mov
fcomi
mov
nop
inc
push
outsb
divb
or
dec
aam
jae
adc
adc
mov
xchg
jmp
lret
insb
int
xchg
xchg
pop
in
push
into
xchg
shll
add
ret
jne
jge
mov
sar
lods
xchg
pop
xchg
lods
pop
das
cmpsl
xor
sbb
inc
sub
mov
sub
scas
sbb
jg
sbb
jb
xchg
fadd
cmp
into
addr16
fdiv
push
loopne
repz
rcr
cmp
jl
mov
dec
mov
js
add
jb
adc
push
out
pop
mov
addb
cwtl
add
out
add
cmp
test
insb
pop
scas
lods
pop
sub
and
and
xor
repnz
sub
gs
or
mov
lods
leave
jp
ror
ret
arpl
ds
ds
dec
int3
adc
mov
mov
lds
xor
add
adc
rcrb
mov
xchg
outsb
xor
jne
rclb
iret
popf
clc
aas
insl
lods
jecxz
dec
sbb
lds
ret
push
inc
adc
cmp
out
inc
sub
or
out
adc
fmull
push
outsb
rorb
in
js
mov
sbb
push
test
lret
mov
jbe
jno
movsl
cmpsb
mov
push
movsb
in
jnp
ret
mov
xlat
daa
xor
rcll
or
in
leave
jge
popa
jg
xchg
cwtl
jno
inc
jae
xchg
sbb
hlt
into
fwait
std
lods
imul
or
jg
inc
je
cltd
push
push
call
fs
push
in
imul
sub
faddl
xchg
sub
addl
gs
mov
adc
out
inc
push
mov
pushf
xchg
repnz
push
sbb
push
dec
mov
sbb
nop
lcall
xor
shrb
lods
pop
mov
xchg
mov
xchg
lock
lcall
adc
add
sti
inc
jg
cmp
fldcw
mov
pop
pop
inc
cli
stc
pop
mov
push
cwtl
ds
sbb
jg
clc
push
dec
scas
xor
orb
lods
lods
cmp
dec
faddp
aam
clc
repnz
cmp
dec
adc
dec
lock
adc
out
mov
out
outsl
outsl
lea
insl
mov
roll
pop
xchg
das
fstpl
push
shlb
imul
sbb
add
push
sub
sbb
popf
in
nop
sbbb
sbb
lock
mulb
ljmp
lods
fwait
ss
sbb
andb
pop
lret
int
add
in
and
xlat
hlt
jg
dec
rcrl
pop
cmc
xchg
pop
pop
mov
jo
or
add
or
jge
cld
lea
adc
cltd
ds
cmpsl
pop
lret
xlat
ljmp
mov
in
jbe
pop
lret
dec
popa
mov
cwtl
fwait
out
aad
out
stc
xchg
aas
inc
data16
push
mov
jne
adc
xchg
jne
sahf
mov
mov
cmp
insb
psubd
mov
lods
call
fcoml
inc
popf
push
mov
lahf
sbb
pop
jle
in
mov
mov
pop
cmp
adc
or
cltd
mov
push
mov
mov
out
add
mov
popa
lgs
mov
xchg
ret
js
rcpps
mov
xor
in
scas
push
mov
pop
addr16
addr16
sub
sbb
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
rcrl
jge
pop
jp
pusha
cwtl
in
mov
notl
dec
insl
pop
aaa
cld
push
rolb
inc
push
inc
push
addr16
clc
xor
popa
dec
cmp
mov
jbe
insl
sar
push
jge
cmp
sbb
mov
fmull
cld
jmp
inc
dec
xchg
pop
mov
aad
cltd
and
xchg
or
fcoml
outsl
enter
push
and
pop
xor
popf
out
jae
stc
jno
xchg
aad
or
clc
push
leave
adcl
aam
shl
dec
nop
nop
movsl
out
push
lea
andb
imul
push
sub
cmpsb
inc
std
mov
stos
dec
or
scas
outsl
adc
mov
adc
dec
or
jne
ds
pop
add
xchg
movsb
sti
sarl
push
loope
inc
and
mov
sbb
mov
in
es
lock
rclb
pop
push
imul
push
xor
repnz
int3
loopne
cmp
push
dec
xchg
push
cmpsl
jns
cmp
pop
jbe
inc
cmp
ss
push
or
sub
mov
out
negb
enter
sbb
pop
xchg
mov
xchg
leave
popf
stos
xor
and
loop
jbe
pop
push
cli
scas
jge
test
pop
arpl
xchg
or
mov
push
jno
mov
mov
stos
lcall
and
icebp
mov
scas
push
pop
fmul
mov
mov
sub
inc
loopne
mov
and
push
loopne
ror
nop
dec
cltd
mov
mov
push
in
and
sti
mov
cs
pop
sub
sbb
ret
pop
idivl
push
jmp
and
xchg
lea
adc
aas
xor
mov
in
int
cmpb
mov
fisubrs
sbb
mov
je
push
je
pop
aaa
int3
movsl
pop
pop
and
push
shll
jae
cli
ficomps
bound
pop
ror
cmp
dec
xor
loop
outsl
mul
repnz
pusha
or
cmp
das
cmp
push
pop
bound
and
ret
xor
or
iret
pop
xchg
cmpsl
mov
xor
xchg
mov
adc
lods
push
sbb
adc
sbb
shrl
mov
test
or
popf
fmuls
loopne
sti
jb
mov
addb
mov
push
fsubs
xor
dec
std
mov
or
mov
fsubl
pop
cmp
add
push
and
xchg
negl
fwait
or
inc
sbb
sub
dec
aas
dec
and
sbb
mov
dec
add
cmpsl
test
dec
adc
xchg
jl
scas
jmp
scas
add
pop
movsb
jecxz
mov
pop
mov
movsl
repnz
ds
and
repnz
nop
fadd
cmp
loopne
jo
inc
add
jae
xor
popf
sub
jno
sbb
xor
sti
scas
jmp
insb
lds
subl
add
es
popa
lahf
movsl
push
xchg
inc
lret
dec
in
pusha
es
push
imul
jl
fildll
imul
jle
inc
and
or
xlat
sub
xor
add
cltd
jb
orl
mov
add
js
cmc
push
les
mov
jle
popa
inc
push
daa
add
mov
lods
mov
and
pop
add
pop
fyl2x
jmp
sbb
mov
xchg
mov
mov
jp
popa
in
mov
in
pop
fs
lds
mov
adc
mov
loope
js
and
cmp
push
push
sbb
jmp
ss
pop
lret
pop
gs
mov
scas
mov
push
or
fwait
popf
test
mov
rolb
pusha
loop
test
roll
daa
jmp
test
push
mov
insb
sub
repz
fistps
gs
inc
adc
lods
push
pop
mov
movsl
addb
out
mov
pop
jbe
dec
cmpsb
movsb
mov
push
roll
and
insl
cmp
sbb
mov
mov
sbb
ret
dec
cmp
add
loopne
mov
push
adc
sub
sahf
fwait
iret
lret
lea
ljmp
gs
cmc
dec
das
stos
cli
ja
cmp
loope
cld
sbbb
les
arpl
rorb
mov
pop
xchg
cmpsl
out
mov
xor
aaa
in
stos
push
xor
xchg
aaa
xchg
xor
lcall
mov
xor
mull
xchg
mov
xor
inc
subb
mov
pop
cli
and
mov
xchg
pop
faddp
mov
push
jbe
and
loop
loopne
push
mov
adc
or
xor
push
cld
out
add
xchg
outsl
inc
dec
cmc
inc
sahf
dec
add
lds
cmp
cltd
xchg
rcrb
jp
in
mov
fisttpll
les
lret
dec
mov
xlat
cmc
pop
ss
out
xor
loope
cmp
adc
and
dec
push
cmp
out
mov
je
jge
xchg
add
add
adc
call
mov
fnsave
scas
pop
cld
cwtl
mov
pop
cmp
ficomps
insb
push
jle
loopne
jecxz
sahf
imul
repz
pop
fwait
jp
sub
cld
mov
lahf
adc
lret
mov
xor
dec
add
cmpb
push
sbb
mov
push
aas
sbb
jecxz
mov
push
mov
jl
pop
push
sbb
push
hlt
cmp
inc
data16
sbb
fidivl
jne
and
jno
loope
sti
add
sub
out
mov
pop
mov
scas
testb
repz
sbb
xor
add
cmp
clc
jns
jge
sub
jg
dec
cmp
push
aas
sub
mov
mov
cli
std
xchg
icebp
push
pop
cmp
cld
scas
call
and
loopne
adc
cmp
outsb
inc
adc
pushf
sub
dec
icebp
push
or
or
bound
andl
mov
pushf
bound
push
cmp
fldl
int
mov
sub
or
test
cld
xchg
pop
sti
cmpsb
clc
sbb
add
ffreep
cmc
inc
aad
lock
xchg
iret
jecxz
or
mov
adcl
popw
nop
in
inc
push
mov
cltd
dec
cmpsb
pop
sub
xor
lret
hlt
loopne
jmp
mov
dec
sub
sub
mov
mov
aaa
rol
or
cmp
clc
or
scas
jae
jns
and
mov
or
repz
pusha
mov
inc
pop
mov
xor
mov
adc
daa
sub
sbb
ljmp
or
testl
std
inc
pop
push
sub
xor
mov
xchg
push
inc
je
testb
cld
mov
inc
jno
out
jne
push
and
flds
add
mov
into
cmp
mov
xor
dec
outsb
sti
xor
shlb
sti
mov
out
sub
jle
adc
sbb
subb
mov
dec
xchg
jmp
call
push
getsec
out
jp
lret
ss
addl
scas
sar
mov
add
mov
sahf
dec
arpl
mov
scas
pop
pop
pop
adc
rcll
or
test
popf
sub
xor
xor
dec
lahf
adc
bound
push
xor
push
and
sbb
jo
mov
sbb
scas
stc
sarb
dec
incl
mov
dec
inc
sub
test
mov
repnz
push
pushf
outsb
inc
mov
popf
adc
in
ret
int
pop
mov
mov
inc
sahf
sbb
bound
fidivl
loope
xchg
xchg
jg
cwtl
inc
cltd
jge
xor
mov
adc
sahf
ljmp
add
or
jmp
and
mov
push
push
es
imul
cmpsl
in
or
xchg
hlt
lret
adc
enter
sbb
jp
cs
and
call
data16
pushf
or
xchg
add
daa
cmp
ret
add
loope
push
pushf
ds
mov
and
dec
mov
popa
stos
cmc
sub
pushf
push
add
lahf
cld
mov
cltd
loopne
rcrb
addr16
jl
dec
sub
inc
mov
imul
add
mov
faddp
jbe
mov
arpl
mov
mov
aaa
mov
xor
sti
cmpsl
push
dec
dec
xchg
das
mov
enter
mov
add
hlt
cwtl
add
jns
test
add
inc
imul
xor
imul
jmp
std
sahf
ret
xchg
out
jo
pushf
sub
push
movsl
les
clc
lods
inc
es
mov
inc
rolb
sbb
enter
sbb
ss
roll
movl
sub
cwtl
imul
mov
inc
fwait
jle
and
push
inc
cs
fs
fstpl
ret
pop
sbb
xchg
mov
fwait
jmp
and
test
test
flds
sub
test
pop
gs
push
jle
idivl
pop
jnp
or
sbb
inc
mov
pop
hlt
outsl
xchg
or
xor
add
mov
fxtract
clc
jb
push
js
call
sub
inc
out
bound
lret
xchg
in
outsb
arpl
ds
dec
jmp
movsb
push
movsl
xor
or
dec
cmp
cwtl
mov
hlt
lret
add
rcr
pop
addr16
xchg
lea
ds
inc
adc
leave
pop
add
aas
xor
pop
dec
mov
mov
jae
mov
xor
cmp
ret
fnstcw
testb
pop
mov
sub
add
sbb
jb
xor
sbb
outsl
scas
dec
jbe
in
inc
shlb
xlat
adc
cmp
pop
enter
and
jae
dec
xchg
sbb
cs
mov
sub
cmp
scas
sar
mov
mov
adc
ss
and
pop
push
jle
push
pop
in
jecxz
mov
loopne
fiadds
jae
jbe
sub
ja
push
and
adc
leave
push
jge
insb
xchg
stos
inc
cmp
pop
pop
popa
jnp
inc
fimull
cmc
or
outsb
pmaddwd
mov
xor
into
ljmp
shrb
sub
out
mov
dec
cmc
sbbb
and
mov
add
pop
jb
inc
mov
loope
or
mov
int
iret
xchg
fprem
out
idivl
and
or
mov
jge
push
lods
aad
roll
sub
sahf
clc
fimull
sbb
jns
sub
push
push
push
add
dec
ljmp
rcrb
xchg
push
pop
push
mov
xlat
cld
ja
fs
and
add
lret
sbb
inc
rcll
push
sub
pop
movsl
and
and
fmull
mov
jp
xchg
sbb
aad
icebp
jl
icebp
xchg
mov
xor
mov
sahf
pop
push
enter
mov
fwait
out
cli
adc
dec
fists
push
cmp
fstp
or
and
xor
aad
aaa
lcall
aas
cmpsl
mov
jl
and
pusha
ret
inc
cmp
in
push
jae
mov
push
push
and
cltd
fnstenv
roll
mov
or
sbb
mov
mov
dec
sub
mov
fidivs
add
dec
inc
sbbb
mov
mov
ljmp
xchg
negl
ljmp
pop
in
or
pop
and
std
mov
xchg
push
add
notw
inc
jp
jae
faddl
mov
out
pop
int
scas
xchg
fsubrp
iret
fwait
ja
mov
jno
jp
mov
dec
fstl
bound
or
nop
push
sti
dec
aas
mov
push
pushf
int3
adc
jp
xor
aaa
sbb
ss
out
dec
leave
aas
cmp
movb
clc
add
in
push
clc
out
adc
rol
in
lods
test
roll
mov
jecxz
shlb
out
arpl
mov
movsb
scas
cmp
test
add
movsb
add
daa
push
mov
ret
or
cld
fs
pop
gs
adc
testb
lds
sarb
mov
into
xchg
ja
mov
std
pop
push
and
daa
push
lea
adc
cmpl
pop
dec
cli
pop
add
adc
repnz
stos
cs
daa
xlat
aaa
fisubl
pop
mov
add
add
mov
mov
and
sti
jecxz
add
sbb
xchg
lods
mov
aaa
sbb
pop
inc
push
imul
mov
aas
test
cmpsl
mov
nop
add
mov
rcl
pop
and
scas
push
addb
inc
pop
pop
insl
or
mov
cmp
mov
mov
and
jmp
push
fildll
jge
shrl
mov
add
jnp
push
xor
push
dec
push
cltd
push
data16
outsb
push
call
repz
and
cmp
mov
bndstx
sub
out
or
cmp
test
adc
inc
or
add
pop
movsl
movsb
or
fnsave
jl
sub
adc
inc
lods
test
pop
cmp
jmp
fbstp
mov
mov
pushf
imul
into
outsl
lcall
fcmovu
xchg
dec
movsl
push
dec
lahf
lret
mov
push
inc
mov
rolb
push
js
rcrb
push
fisubl
enter
or
fimull
ds
xor
insb
popf
dec
sbb
aam
or
in
inc
in
xor
ss
adc
movsl
aam
dec
ljmp
sub
stos
lods
cmp
push
cld
mov
xchg
fxch
xchg
adc
mov
add
lret
pop
cs
stc
test
lea
in
pop
nop
adc
enter
das
stos
cmpsl
ret
loope
lock
cltd
vpcmpgtw
mov
pushf
fadd
orb
fstpl
jle
jge
pop
cmpsb
jg
add
movsl
movsb
jecxz
adc
pop
shl
pop
dec
test
pop
sahf
cmp
pushf
enter
js
xchg
mov
cmp
push
aad
popf
adc
sbb
bound
fisttps
int
lret
sbb
xchg
cmpsl
fistps
dec
lea
dec
jle
daa
xor
push
jnp
sbb
ds
pop
ds
pusha
inc
popf
dec
sub
into
mov
xor
adc
cmp
lods
add
std
or
add
popf
mul
push
outsl
rorl
mov
fcmovnb
push
ficomps
insb
adc
mov
mov
fldenv
in
out
test
repnz
gs
jo
pop
imul
sbb
lods
push
inc
sub
xor
lret
loope
add
lea
rcl
jae
mov
jle
movsb
push
sbb
ljmp
fisubrl
aam
and
push
xor
fmull
jnp
dec
mov
mov
xchg
in
test
outsb
repz
out
ss
int
imul
ljmp
push
jno
jnp
outsb
cmp
and
cmp
xor
mov
or
pop
sbb
add
sbb
and
inc
xchg
mov
xor
xorl
stos
adc
incb
js
jmp
imul
mov
cmp
data16
sub
shll
out
scas
sbb
sti
adc
push
inc
add
jne
aas
push
pusha
cwtl
cwtl
fcmovnb
cmp
outsl
pop
ljmp
xchg
flds
loope
test
or
lahf
mov
pop
out
jmp
out
mov
pop
mov
jb
dec
sbb
mov
test
mov
mov
jg
cwtl
adc
shrl
adc
iret
jecxz
cmp
lret
push
vmovhlps
sub
cmpsl
mov
push
fadds
daa
jg
jne
stos
or
adc
pop
mov
int
cli
xor
pusha
repnz
sub
mov
adc
pop
inc
pop
lret
mov
cmp
daa
sub
or
jmp
push
insl
cli
popa
add
ljmp
iret
cmc
adc
and
add
or
lahf
lds
testb
ret
xor
sbb
mov
daa
pop
sbb
mov
dec
in
pop
aaa
or
mov
add
cmp
xchg
pusha
pushf
lock
mov
xchg
pushf
out
push
fadds
scas
je
cwtl
outsb
mov
stos
loopne
pusha
xchg
jp
push
inc
shr
pop
sbb
push
adc
mov
icebp
or
jge
jo
cld
or
xchg
mov
scas
sbb
lock
imul
sbb
ds
xor
ret
sbb
fdivrl
xor
pop
xor
add
popf
lods
sbb
mov
push
fstpl
mov
dec
cmp
cmp
rcrb
jno
sbb
fmul
scas
cmp
mov
out
popa
cltd
xchg
repz
sub
fdivl
ret
xchg
or
in
mov
xor
cmpsb
test
jmp
outsb
aaa
mov
xchg
out
fs
xor
sahf
push
popf
movsb
mov
faddp
cmp
cmp
pop
out
pop
dec
loopne
and
lret
add
and
sbb
mov
out
fisubs
sbb
imul
adc
xor
outsl
mov
push
dec
and
mov
push
sub
jno
xchg
rorb
sub
pop
jns
pop
push
icebp
xchg
add
xchg
xor
xor
fwait
outsl
sbb
les
cmp
add
sbb
out
cs
cmp
push
jno
cmp
lret
lods
out
cmpl
cvttps2pi
inc
test
mov
sti
jmp
aas
mov
push
cld
lods
repnz
subb
fwait
addr16
insb
and
loope
sub
cmpl
movsb
sbb
popa
ds
or
inc
xor
lret
pop
out
ljmp
daa
or
mov
or
xchg
cmp
data16
movsb
xor
jmp
repnz
popa
pop
xor
pop
test
or
dec
jb
les
push
lret
test
sbb
dec
dec
test
pop
push
insl
add
cmp
jge
add
pushf
and
pop
loopne
addr16
das
lea
mov
mov
lock
mov
imul
int
loop
push
shlb
xchg
mov
mov
es
loope
mov
imul
int3
adc
mov
lock
pop
ds
out
mov
sub
jp
or
cmp
pop
shlb
arpl
mov
jmp
in
push
neg
mov
leave
push
popa
shl
mov
sti
pop
pop
push
jecxz
xchg
insl
xchg
sub
mov
or
loope
push
inc
sbb
inc
clc
dec
imul
ljmp
fwait
mov
imul
dec
arpl
add
cmc
in
iret
jp
cmp
fidivrl
xor
pop
stos
ret
lods
mov
pop
add
fisubs
sbb
push
add
dec
ret
mov
pop
ds
xlat
pop
push
inc
and
cltd
push
into
mov
jp
pop
add
jle
dec
imul
out
push
jmp
or
cwtl
push
mov
dec
sbbb
sub
ds
pop
pop
dec
and
sbb
out
cli
lret
mov
pop
fldcw
add
test
mov
mov
les
or
aam
xchg
and
mov
in
cmp
mov
sbb
xor
insb
xchg
cmp
test
add
stos
or
mov
call
imul
jmp
cmp
enter
imul
jae
je
ficoml
mov
mov
imul
mov
int
xchg
movsl
pop
dec
sahf
push
hlt
cltd
in
mov
push
push
xchg
cmp
xor
lods
pop
jnp
pop
mov
jmp
rcrl
mov
mov
inc
mov
lods
push
ret
clc
add
sub
cmp
test
mov
or
and
adc
aad
xchg
lods
xchg
leave
inc
fiadds
mov
fwait
call
and
stos
imul
test
hlt
jne
je
mov
stos
mov
daa
aaa
or
fadds
sub
pop
cs
sbb
xor
rclb
pusha
mov
in
sub
xchg
je
out
insb
add
jbe
xor
and
int3
mov
cld
aam
or
cli
inc
gs
or
stc
loope
and
scas
adc
lcall
xor
push
ljmp
je
jno
in
inc
cmp
cwtl
pop
shlb
stos
jne
fists
inc
jg
jno
and
lock
push
jae
jle
sahf
pop
loope
push
loope
bound
sbb
add
mov
or
scas
loop
aas
xor
jnp
dec
lds
push
sub
cs
adc
jle
std
push
sub
push
ret
pop
loope
mov
and
mov
cmp
movsl
cmp
and
pop
jo,pn
inc
inc
mov
pop
dec
xchg
sbb
pop
push
and
rcll
scas
push
xor
jp
xchg
pusha
push
sti
lret
insl
cmpl
dec
jmp
xchg
lods
lcall
shlb
or
imul
ds
jmp
stc
lods
data16
shll
repz
lods
jmp
out
ljmp
mov
dec
fimuls
push
jle
lds
pop
les
sub
aam
sbb
jg
clc
mov
mov
lret
mov
in
add
ja
xor
mov
sbb
mov
mov
les
dec
in
sbb
sbb
push
push
fiadds
leave
sbb
adc
pop
inc
ds
jo
pop
lods
mov
je
movsb
mov
int
out
mov
test
ja
scas
clc
je
lahf
cli
xor
mov
scas
imul
out
sub
movsl
mov
lret
mov
lahf
push
fldz
insl
cmc
mov
icebp
enter
pop
cmp
xlat
inc
pop
push
jecxz
lods
inc
adc
adc
lock
pop
sbb
cmp
sub
lret
rcl
adc
scas
dec
mov
adc
mov
mul
daa
or
push
into
popf
or
xchg
imul
cltd
cltd
sbb
xlat
dec
sbb
daa
scas
add
jne
aaa
adc
xorl
pop
rcrb
mov
rorb
testl
push
mov
mov
mov
cmp
js
add
add
cltd
lods
std
fnsave
dec
sub
psubw
push
repz
sbb
push
add
in
mov
ret
pop
xchg
icebp
mov
push
jmp
or
push
dec
ss
outsb
orl
mov
or
jbe
cmpsb
in
xchg
fimuls
sbb
fisttpl
cmpsb
cmpsb
add
sahf
pop
pop
repnz
add
out
fnstsw
nop
fistpll
push
mov
sbb
outsb
push
cmp
and
pushf
mov
hlt
xchg
bnd
adc
xchg
popa
pop
push
xchg
movsl
stos
lea
rolb
and
dec
xchg
jmp
fdivl
stos
push
or
pop
jmp
inc
cmpsb
fs
bound
stc
push
xchg
cmpsl
inc
shrl
rolb
lea
mov
sub
push
dec
inc
enter
xor
es
mov
loope
dec
sbbb
ss
jae
adc
ds
pop
mov
and
hlt
xchg
mov
adc
test
cld
out
shrl
pop
lcall
aad
sub
int3
lcall
jmp
popa
in
gs
mov
mov
jp
mov
jo
into
mov
and
test
outsb
dec
xor
in
xchg
mov
push
loopne
into
xchg
or
inc
andb
js
mov
adc
out
mov
mov
data16
loopne
scas
addl
xchg
jno
lock
popl
cmc
xlat
lahf
add
loop
sahf
pop
mov
mov
fwait
xorl
push
dec
sbb
jbe
lret
loopne
test
test
mov
jno
and
jnp
xor
mov
dec
jbe
test
daa
inc
sbb
inc
mov
lods
loop
arpl
cwtl
jl
fldt
push
xor
jnp
xchg
mov
fdiv
js
push
adc
pop
inc
pop
mov
push
inc
popa
or
lods
hlt
outsl
and
adc
fs
add
and
xor
sbb
cli
mov
scas
adcb
enter
jecxz
jg
dec
push
loope
enter
xchg
pop
enter
adc
mov
pop
cmp
pop
mov
cmp
xchg
add
inc
sub
push
sub
ret
push
push
adc
cmp
shr
popa
shl
test
out
and
adc
dec
and
mov
mov
or
or
aas
repz
lods
push
fmull
push
in
and
dec
mov
sahf
inc
stos
cmp
jg
fcomps
sahf
sbb
popf
cmp
out
jp
insl
std
add
jbe
cs
mov
mov
xor
sahf
shrb
imul
out
xor
insl
imul
cwtl
push
popf
push
popa
lahf
push
mov
push
aas
xor
insb
inc
das
pusha
test
das
ss
add
fs
ja
orb
fwait
and
cmpsl
cmpsl
or
js
push
fcom
out
sub
pop
mov
int3
incl
or
pusha
cmp
mov
dec
scas
aad
loopne
xchg
push
mov
mov
rcl
mov
mov
je
sahf
in
lahf
stc
enter
daa
mov
shr
out
shlb
xor
push
aaa
push
xor
jp
and
add
ss
jle
adc
mov
add
sarb
inc
mov
push
std
inc
ret
dec
jb
dec
loope
mov
popa
jecxz
jne
cmc
iret
pushf
xchg
jge
scas
sub
push
xchg
shll
test
and
stos
sub
pop
data16
ljmp
adcl
ljmp
je
mov
adc
das
adc
jno
dec
loopne
ss
push
das
mov
addr16
adc
mov
and
push
xor
cltd
pop
xchg
jg
push
or
mov
cmp
js
mov
jecxz
push
ficomps
cmp
shrl
loope
mov
mov
xor
xchg
iret
jge
jne
in
mov
icebp
nop
std
mov
les
fs
rclb
in
or
inc
xchg
roll
or
sbb
push
jns
jle
adc
mov
leave
mov
pop
imul
push
fucomip
jae
push
repnz
frstor
mov
out
lds
and
mov
xchg
adcl
jno
or
es
xlat
lods
jmp
subl
in
insl
cli
aad
arpl
inc
jmp
imul
add
mov
fiadds
jae
inc
or
xor
shl
jne
push
cmc
cmp
and
fidivrs
gs
mov
les
adc
pop
adc
fiaddl
loopne
out
inc
lds
mov
loop
inc
dec
test
into
sbb
icebp
repz
cld
sub
repz
cli
in
mov
lock
push
mov
xchg
out
lds
rcl
push
popa
repnz
push
movsb
je
or
pop
insb
add
add
cwtl
sub
sahf
pop
mov
jecxz
lcall
xchg
rorb
mov
and
lret
cmp
mov
cmpl
repz
nop
push
pop
hlt
mov
jbe
stc
xchg
ret
in
mov
cmp
push
inc
clc
ja
sbb
fdivrl
mov
subl
pop
imul
sbb
cmpsb
rolb
popa
loop
pop
js
xchg
sbb
cmp
jnp
out
pushf
push
or
sbbl
mov
idivl
gs
movsb
sbb
jge
rclb
mov
int
fs
mov
fadds
imul
jo
xchg
xlat
push
mov
xchg
dec
mov
hlt
mov
imul
cmp
inc
daa
enter
jb
dec
adc
int
jae
or
xchg
in
lret
imul
into
ljmp
sub
lds
repz
mov
lahf
sets
lods
mov
xchg
pop
pop
lock
push
scas
sub
ljmp
cltd
and
lcall
xor
test
scas
insb
sahf
cmp
sub
inc
xor
movsl
pop
mov
arpl
iret
andb
ja
or
scas
add
mov
inc
xchg
aas
js
scas
fwait
outsb
xchg
in
push
cmp
cmpsl
xchg
popa
lcall
pop
in
adc
scas
mov
dec
loop
jp
out
imul
sbb
call
push
daa
pop
int3
int3
mov
pushf
sub
lret
enter
cld
add
push
pusha
pop
daa
cmp
jno
in
xchg
add
out
mov
bound
scas
xor
aaa
ret
cmp
xchg
mov
jnp
xchg
pushf
ljmp
push
cmp
sahf
loope
dec
xlat
hlt
adc
test
add
idivl
insl
xchg
enter
jno
int
fs
pop
pop
nop
pop
orl
and
cmp
es
lock
push
shlb
pop
shrb
and
mull
imul
in
iret
test
stos
fldenv
push
fsts
arpl
fdivr
incb
mov
mov
mov
dec
mov
ss
sarl
test
imul
xchg
mov
fwait
inc
sbb
push
pop
repz
fidivrs
f2xm1
leave
mov
jmp
adc
shrl
cmp
inc
dec
scas
hlt
cltd
pop
xor
or
xor
mov
pop
jne
dec
cmpb
jo
loop
jns
aad
push
bound
ret
lds
int3
movsl
cmp
jae
and
ds
push
pop
pop
scas
aam
and
fcmovnb
hlt
mov
jp
xchg
xchg
or
mov
daa
or
lods
cli
add
jle
mov
xchg
inc
cltd
sbb
lcall
nop
xor
aaa
fimuls
out
in
push
mov
popa
loope
clc
jl
add
sub
out
push
mov
mov
cli
insb
call
cmp
add
cld
sub
push
test
push
or
xchg
clc
add
rorl
or
pushf
and
add
stos
cwtl
jnp
inc
jns
in
fistpl
push
jecxz
mov
pop
jp
xor
or
adcl
clc
ret
add
int3
inc
xor
je
sub
scas
push
and
rcrl
mul
cmp
mov
rorb
into
mov
and
sbb
xor
stc
inc
or
icebp
movsb
ret
add
call
xor
xor
xor
cli
mov
insl
inc
push
cmp
enter
add
jl
mov
xlat
xlat
not
in
jnp
cmp
fstl
mov
repz
add
mul
inc
das
xlat
fwait
inc
jmp
jmp
or
push
ret
bound
outsl
enter
push
dec
pop
int3
sar
stc
pop
dec
pusha
pop
decl
push
push
bound
push
cmp
cmp
sti
xchg
outsl
sbb
push
addr16
and
jo
fiaddl
stos
pop
inc
xor
lahf
les
pop
pop
insl
or
add
cwtl
iret
or
xchg
push
adc
mov
sahf
jae
call
fwait
jo
fistl
push
ja
fbld
aas
push
mov
xchg
addl
int
mov
dec
ret
pop
notl
dec
adc
sub
fs
mov
or
inc
shrl
jns
popf
iret
xor
pop
inc
ficomps
lret
lahf
arpl
dec
add
mov
xor
in
inc
stos
repnz
inc
inc
pop
mov
mov
rcl
adc
and
outsb
in
fcmovbe
push
cmp
inc
fs
mov
mov
or
daa
lret
jb
sbb
push
cltd
jns
mov
ja
es
aaa
pop
cli
pusha
xchg
rol
lods
cld
jge
fdivs
pop
xchg
mov
ret
jb
out
pop
jge
mov
outsb
pop
std
and
xchg
mov
loopne
aas
out
jmp
inc
arpl
cli
lahf
int
and
lcall
dec
lods
clc
and
pusha
call
add
out
pusha
pop
ds
sbb
bound
test
das
or
int3
pop
jo
loope
cs
out
mov
sub
ficoml
test
cmp
or
inc
daa
scas
bnd
cmp
fldl
add
leave
dec
sbb
es
push
popf
ja
jns
leave
mov
insb
lock
add
jp
mov
pop
aam
mov
xor
add
icebp
pop
xor
inc
arpl
lea
cmp
cwtl
ja
jp
mov
hlt
sti
mov
repnz
in
or
ljmp
sbb
mov
cs
test
cmp
cwtl
jo
dec
scas
sbb
mov
xor
sub
test
cs
dec
into
lret
mov
nop
cld
insb
enter
loop
or
loope
popa
stos
mov
push
pop
adc
test
add
mov
call
fcmovnbe
sbb
adc
add
push
cli
sbb
daa
outsb
jmp
loop
loop
lret
jne
mov
and
jle
or
pop
jb
sbb
out
pop
push
xchg
push
and
loopne
adc
xor
idivl
dec
xor
and
leave
scas
lock
mov
jl
add
mov
or
popa
hlt
xor
ljmp
mov
mov
sub
mov
adc
cmp
mov
dec
ds
mov
sub
loopne
cwtl
icebp
leave
mov
jno
lea
and
aas
dec
cli
xchg
add
xchg
pusha
clc
test
push
mov
incb
mov
jmp
ja
insb
push
in
mov
mov
cmpsl
inc
ret
lahf
dec
xor
xor
push
imul
push
imul
lds
insl
adc
lods
test
test
hlt
sub
pop
pop
les
add
sbb
int3
pop
sbb
push
xchg
roll
mov
jmp
sti
add
enter
lahf
and
adc
pop
push
sub
push
inc
and
mov
mov
fidivrs
gs
mov
jge
xchg
movsl
cmp
jl
push
iret
add
bound
in
out
int
in
mov
pop
jg
cwtl
xor
aaa
incl
mov
stos
rorb
and
cmp
dec
ljmp
lret
hlt
mov
dec
push
dec
frstor
mov
outsl
mov
loopne
sub
jge
call
cmpsl
scas
imull
loop
cmp
test
les
lcall
xor
inc
push
cmp
aaa
pop
cs
push
loop
xchg
or
out
dec
pop
and
addr16
subb
loope
sub
and
adc
rclb
call
sti
push
pop
rol
inc
push
push
sti
gs
add
movsb
shll
lcall
add
cltd
xchg
dec
mov
in
lret
aad
lods
pop
sbb
outsb
movsb
stos
mov
inc
iret
mov
pop
sti
call
je
xchg
sbb
icebp
xchg
movsl
testl
fwait
push
sbb
lods
sub
xlat
addl
mov
stos
mov
dec
addl
mov
cli
aam
add
in
mov
add
and
orl
insl
jns
cld
ret
push
mov
mov
add
pop
cmp
ja
dec
cmp
cld
mov
aaa
shll
xlat
es
imul
mov
imul
cmp
out
mov
movnti
scas
xor
stos
jl
jno
mov
xchg
rol
icebp
ja
data16
sub
and
push
xor
mov
xor
js
adc
jl
js
fnstcw
push
mov
and
inc
pop
icebp
std
sbb
and
lahf
cltd
push
sbb
mov
inc
xor
call
jle
popf
or
pop
mov
xchg
addr16
in
stos
cmp
lea
int
into
test
mov
pop
mov
rcrb
scas
pmaxsw
mov
mov
out
gs
jge
shlb
ljmp
shr
fwait
lock
push
in
xchg
or
mov
push
icebp
repnz
dec
mov
lods
push
adc
xchg
and
stc
xor
xor
popf
out
cwtl
and
push
hlt
test
xor
sbb
dec
mov
push
int
popa
rcll
out
mov
mov
adc
popf
inc
sbb
std
add
into
xchg
aas
roll
shll
mov
sbb
add
loop
cmp
movl
adc
clc
sbb
jecxz
and
mov
mov
outsb
fs
adc
push
inc
bound
or
int
xchg
rcrb
cwtl
mov
call
mov
lret
mov
notl
scas
dec
add
adc
imul
add
lods
inc
sahf
add
setae
aaa
insl
movsb
add
ds
pop
mov
mov
icebp
sahf
ret
ficoml
push
pop
push
xchg
mov
xchg
out
xorb
in
loope
push
sub
cmp
jnp
push
inc
mov
jb
xor
lea
and
xchg
test
rcrl
push
add
movsb
stos
push
adc
out
or
addr16
ja
xchg
lods
pop
xor
fnstcw
jae
lret
and
popf
push
sub
pop
lds
and
mov
fidivrs
push
jle
cltd
lcall
dec
xchg
aam
sub
xchg
icebp
ret
xor
and
mov
adc
cwtl
in
in
out
pop
add
rcr
ret
xchg
out
subl
jne
mov
out
scas
mov
insl
mov
fcoms
and
in
sub
pop
push
lods
dec
divl
sahf
pop
ljmp
enter
inc
push
xor
andb
pop
shll
sbb
inc
movsb
jecxz
fcoml
push
aaa
out
add
movsb
xchg
arpl
jmp
rolb
jnp
push
jnp
adc
addr16
lock
aaa
fldl
loope
cli
cli
andb
dec
cmpsl
shll
dec
pop
cmp
xor
in
js
xchg
hlt
pop
pop
arpl
pop
loope
and
jo
mov
rcrl
jp
xor
mov
clts
and
dec
adc
stc
lds
push
cli
test
gs
aas
xchg
dec
out
sbb
imul
js
nop
decb
aas
loop
lea
xlat
rorb
mov
add
out
out
in
and
fcmovb
sub
int
push
xchg
xchg
dec
or
in
push
pop
jo
mov
iret
mull
lea
xchg
cmp
or
call
or
add
sbb
and
scas
xchg
ret
adc
dec
sub
bnd
push
xor
push
imulb
icebp
fsubrl
js
pusha
sub
clc
stos
and
adc
lock
repnz
ja
lret
and
mov
dec
test
inc
pop
sub
jge
out
pop
fistps
push
xor
int
dec
sbb
jne
pop
clc
push
and
out
in
push
xor
mov
inc
stos
mov
in
mov
push
xorl
cmp
pop
fbld
lahf
mov
popa
inc
shl
test
or
in
es
add
scas
xchg
xchg
pop
and
jmp
inc
movsl
out
xor
cmp
mov
xchg
and
jae
inc
sbb
dec
push
enter
lret
xchg
adc
sbb
push
sub
int3
or
subl
in
cmpsb
push
hlt
movsl
mov
enter
stos
jno
add
jmp
cmp
dec
sbb
jmp
and
mov
imul
out
sti
mov
mov
xchg
jns
int
adc
outsl
and
push
xor
lret
test
testl
push
stc
pop
shll
pop
ret
mov
lods
and
lea
sub
inc
mov
push
cli
jne
js
sub
mov
aaa
xor
test
fs
add
inc
jle
imul
ss
aas
les
xchg
mov
or
scas
xor
fmul
in
jbe
mov
mov
fiaddl
insb
mov
dec
dec
ficoms
mov
pop
lods
cmpl
pop
or
mov
dec
xor
jl
sub
push
imul
hlt
adc
mov
add
testl
lods
cmpsb
xor
and
mov
arpl
mov
icebp
jnp
in
fbstp
sub
push
xchg
addr16
popl
cmpsl
and
mov
mov
push
mov
cmp
jmp
jge
pop
dec
push
lret
dec
pop
test
xor
out
add
movsb
mov
dec
ret
ljmp
sbb
mov
xorl
bound
aam
out
cmp
bswap
in
jp
pop
xchg
rcrb
sub
frstor
test
xchg
test
nop
push
das
and
inc
daa
loopne
lret
shl
cmp
scas
push
or
sub
add
lods
or
dec
or
addr16
or
cmc
cli
xor
sub
xchg
and
mov
sbb
in
mov
cmp
push
fldl
movsl
dec
call
jl
jb
cwtl
inc
add
ss
inc
aam
xchg
insl
mov
adc
push
shrb
push
subb
movsb
in
cmp
inc
lret
aad
mov
dec
fldz
or
jb
test
xor
shlb
xchg
aad
adc
or
pmaxub
in
cld
xchg
aam
inc
cmpsl
and
mov
adc
pop
je
xchg
jo
inc
push
mov
nop
mov
pop
inc
add
push
es
lds
scas
bound
loope
loop
loopne
movsb
das
ljmp
out
fildl
mov
sti
lods
pop
lahf
inc
cmc
cmp
add
mov
adc
incl
or
jno
rcll
inc
stos
sbb
roll
mov
dec
push
dec
push
xchg
mov
add
stc
test
push
mov
mov
cwtl
inc
sbb
adc
push
cltd
jns
push
mov
or
test
mov
mov
dec
mull
les
mov
xchg
test
push
xchg
ret
jne
push
in
mov
sbb
inc
mov
dec
xchg
push
data16
es
add
pusha
mov
cmp
mov
xor
decb
pop
pop
mov
and
mov
loopne
xchg
lcall
cltd
dec
inc
xchg
xchg
xor
or
into
jbe
pop
sub
scas
push
cmpsb
pop
dec
mov
xlat
push
fwait
jb
iret
nop
popa
push
sbbb
arpl
imul
and
push
lds
sbb
push
add
test
aas
gs
inc
lock
adc
mov
shlb
cmpsb
rcll
sbb
popf
jecxz
add
jg
and
mov
mov
mov
shlb
jno
lret
adc
lahf
lods
daa
mov
fdivrp
sbb
add
stc
jp
roll
cltd
arpl
jb
xchg
mov
mov
js
ss
pop
xor
xchg
inc
sbb
jmp
jge
int3
adc
mov
ljmp
inc
mov
pop
decb
gs
into
add
imul
pushf
mov
sahf
test
insl
mov
imul
cld
shlb
out
pop
push
xor
arpl
xchg
xor
sti
jge
dec
in
mov
mov
scas
or
aas
xor
and
scas
movsb
inc
adc
inc
shlb
shlb
cmp
add
in
push
or
dec
rep
lock
cmp
push
enter
xchg
out
insb
mov
jecxz
mov
dec
lea
popf
push
mov
popf
mov
in
sbb
incb
pop
fsubrs
push
fs
mov
and
lea
cltd
in
into
jp
aaa
inc
and
pop
imul
stc
imul
out
out
out
sub
cmp
xchg
repnz
and
pop
mov
mov
sub
ffree
sub
pop
ret
cmp
mov
in
jb
mov
sub
pop
cwtl
xor
and
sub
outsl
or
xor
test
lock
call
lcall
icebp
xor
pusha
cs
sbb
push
push
inc
jnp
inc
pop
hlt
inc
movsb
mov
je
pop
outsb
loopne
pop
sub
fnstcw
popf
jp
in
outsl
test
rcrb
cmc
add
popf
xchg
add
xchg
sub
popf
xchg
scas
sub
xchg
shrl
mov
adc
mov
jno
enter
inc
dec
mov
roll
mov
mov
int
inc
jp
mov
fsubs
arpl
lret
adcl
lods
mov
xor
iret
lods
fildl
mov
shll
xorb
adc
out
mov
imul
rolb
sti
insl
data16
pop
cmp
ljmp
or
movsl
notb
es
clc
aas
je
mov
stos
push
movsb
jb
xorl
aas
fsubl
jmp
mov
lret
ss
dec
inc
dec
aaa
fs
push
sbb
pop
inc
push
clc
ficoml
xor
sbb
sbb
cltd
fadd
hlt
xchg
push
lret
mov
inc
sbb
movsl
pop
dec
push
popa
cmp
call
mov
stos
adc
lods
rcl
cs
les
leave
loop
stc
push
repz
sarl
out
mov
jnp
lock
roll
cltd
xor
std
xchg
pop
mov
inc
and
mov
adc
sub
lea
and
and
pop
pushw
in
dec
xchg
insl
rcll
pop
lods
icebp
lret
mov
jb
rcll
aas
dec
lds
outsb
mov
jae
adc
add
ljmp
mov
lret
push
dec
jo
outsl
pop
outsl
sub
sbb
xchg
cmp
pop
push
fisttpll
stos
jmp
push
test
push
xchg
or
xchg
xchg
and
cld
out
stc
inc
int3
lret
out
add
insb
stc
xchg
andl
out
pop
scas
sbb
out
jns
jge
stc
add
stos
fsubrp
mov
pop
xchg
andb
jae
movsl
add
jp
xor
xchg
xor
mov
push
scas
out
pop
lcall
gs
test
int3
xchg
adc
cltd
dec
in
cmc
fisubrl
push
mov
aaa
iret
push
imul
push
adcb
ljmp
outsl
adc
cltd
mov
cmpsl
cli
outsb
in
sub
push
and
dec
jmp
cwtl
loop
loopne
push
push
bswap
ret
lcall
adc
test
xchg
into
popa
jmp
std
mov
inc
push
inc
mov
inc
inc
xor
ja
pushf
cmpl
xchg
enter
test
sbb
sahf
outsl
cmpsb
fsts
pop
mov
stos
and
push
push
push
fcomip
pop
jmp
data16
mov
pop
pop
movsb
or
int
insb
outsb
mov
pop
leave
push
add
pop
mov
or
jg
cmpsb
xchg
rcr
les
pop
jl
stos
scas
scas
dec
mov
pop
mov
mov
and
lahf
loope
mov
in
push
adc
mov
fiaddl
inc
sbb
mov
cmp
cli
pushf
xchg
mov
jb
ficompl
inc
jle
dec
lods
movsb
mov
sub
bound
movsl
sti
aas
cmp
insl
aam
loope
jle
add
mov
jg
mov
or
dec
adc
insb
dec
in
push
pop
xor
lea
pop
test
xor
xor
and
jne
shll
aam
dec
idivb
cmpsl
sti
cmc
imul
and
push
push
mov
cmc
pop
int3
adc
dec
jno
and
scas
inc
ss
out
sub
inc
pop
push
add
dec
iret
nop
data16
cmp
mov
mov
push
mov
addr16
cmpsb
sbb
test
inc
lods
jp
xchg
out
and
rolb
jmp
into
add
jmp
inc
fistps
inc
mov
sub
jne
inc
push
jae
fwait
jnp
push
mov
dec
mov
mov
or
lock
outsb
sahf
mov
mov
in
push
jo
rol
shlb
aaa
mov
aas
and
jb
dec
or
sub
mov
xchg
test
xor
ret
push
inc
test
ret
in
mov
inc
sysexit
jno
scas
dec
out
lods
leave
dec
daa
xor
mov
mov
ja
jo
mov
aam
idivl
mov
mov
mov
sub
repnz
daa
mov
sbbl
add
inc
imul
inc
mov
inc
mov
pop
jno
lods
jb
jge
jno
dec
dec
inc
gs
aaa
push
mov
push
aaa
jno
mov
cmp
in
mov
not
out
push
mov
stos
fnstsw
imul
lahf
cltd
sbb
inc
and
add
or
jb
xor
cmc
es
pop
fstl
fstpt
xchg
push
stos
loope
imul
sub
xchg
out
out
sub
xchg
lret
pop
pushf
jo
jbe
pop
and
leave
movsb
mov
outsl
xchg
decb
out
popa
out
mov
aam
cmp
aas
pusha
and
fmull
mov
mov
push
xchg
add
add
mov
outsb
dec
ret
pop
adc
dec
mov
push
inc
xor
fildl
xchg
fistpl
dec
cwtl
outsb
adc
arpl
fidivl
mov
imul
lret
pop
repnz
push
subb
mov
and
sti
pop
push
int3
in
and
inc
repnz
xorl
push
inc
popf
push
jns
or
mov
aam
push
and
mov
pop
std
pushf
jmp
xchg
sbb
stos
add
loopne
cld
and
add
rorl
push
mov
xchg
cmp
and
mov
lods
sbb
jbe
fisubs
jns
jmp
aam
mov
adc
mov
add
xorl
dec
xor
sahf
stos
cs
lcall
test
fistps
mov
arpl
mov
mov
cmp
mov
cmp
idivl
mov
cmpsb
fs
test
inc
lahf
xor
les
xchg
pop
push
jbe
sbb
mov
sub
dec
pop
mov
test
xchg
or
das
imul
arpl
and
or
cmp
pop
sbb
int
enter
cmp
sbb
clc
and
sub
sub
cmpsl
pop
push
cmpsl
lret
and
jne
dec
add
filds
xchg
fs
ret
lea
or
outsb
push
xor
fnsave
push
and
push
imul
adc
sbb
mov
cmp
pushf
call
adcb
xor
outsl
jg
jae
lret
repz
mov
in
add
xchg
adc
xchg
and
scas
mov
adc
divb
adc
adc
mov
sbb
ja
or
push
adc
sub
test
push
fwait
mov
xor
or
mov
jno
gs
rcrb
xor
adc
cmp
inc
mov
flds
mov
out
jge
lods
scas
mov
loopne
and
inc
mov
scas
arpl
or
dec
push
pop
cwtl
movsb
out
sti
inc
and
outsl
jle
movsl
pop
cld
lret
adc
mov
stc
sbb
mov
jge
iret
outsl
cld
xor
repnz
dec
imul
add
push
ljmp
lret
ja
xchg
rcrb
push
or
or
rcll
fistl
clc
cmp
jb
jmp
xchg
adc
aas
cwtl
jne
push
inc
ret
push
pop
xchg
aad
add
or
repnz
ds
pop
mov
addr16
aaa
push
or
scas
loope
sarb
insb
pop
add
push
mov
lods
inc
cmpsl
jo
or
sub
mov
add
aad
js
jmp
out
cld
fsts
fisttpl
imul
jecxz
aam
int
and
imul
add
xor
shlb
add
stos
clc
pxor
dec
mov
sub
ret
stos
in
mov
cmpsl
je
popa
jmp
ja
xor
inc
cmp
xchg
jg
scas
daa
movsb
sbb
xchg
cmpsb
push
lret
jge
mov
movsl
sahf
lods
push
in
frstor
or
xchg
outsb
stc
decl
dec
and
xchg
dec
jbe
and
pop
cltd
out
mov
test
inc
dec
divb
xchg
jns
or
cli
jge
dec
dec
cmp
or
lcall
add
and
bound
fnstcw
rclb
adc
popf
mov
jno
pop
data16
dec
loope
add
push
adc
xchg
cli
movsl
mov
int
out
gs
push
or
xchg
push
cwtl
je
dec
fildl
mov
mov
ret
test
rorl
jl
jl
mov
push
icebp
pusha
clc
je
and
pop
aaa
mov
push
rol
fisubrs
into
rcll
popa
iret
pop
inc
enter
loope
inc
loopne
xor
jge
inc
mov
and
int
shr
lcall
hlt
add
int3
mov
lret
pop
xor
leave
jne
mov
enter
lods
sbb
cld
dec
adc
inc
adc
scas
or
mov
push
lcall
addr16
in
and
xor
iret
adc
sarb
repnz
imul
cmp
mov
movsl
add
jb
cmp
fs
lret
aam
stos
sbb
popa
or
adc
inc
aad
push
adc
mov
pusha
jb
mov
mulb
xchg
dec
fadds
fnstsw
pop
lock
jbe
arpl
call
call
insl
sbb
mov
cmp
jae
and
inc
fwait
lods
jecxz
pop
cwtl
rcl
cmp
push
repz
pop
dec
and
sti
repnz
jge
inc
sub
imul
es
jae
test
or
pop
js
loopne
mov
lcall
pop
or
push
insl
in
enter
jmp
mov
cltd
sub
jb
xlat
and
jmp
pop
xchg
inc
mov
mov
pop
stos
jno
xor
add
aam
das
add
xchg
ss
mov
scas
es
pop
jo
xor
add
rep
mov
or
or
shll
jl
mov
cmp
sbbb
popf
shll
xchg
cmpsl
pop
in
rclb
iret
hlt
lock
pop
out
fisttps
aaa
xchg
outsl
pop
in
sbb
lret
xchg
or
in
or
jae
jl
mov
add
xchg
shll
jle
dec
out
lods
push
sbb
push
xchg
sub
sbb
fs
xor
xchg
mov
xor
popa
lcall
xchg
fmull
mov
mov
out
dec
addr16
dec
push
jp
test
push
out
cs
inc
mov
lods
insl
outsl
or
inc
test
xchg
outsl
lds
inc
int
mov
mov
lret
sbb
mov
dec
in
jmp
insb
sub
xor
shlb
stc
mov
sbb
int3
adc
jg
xchg
dec
xchg
pop
push
and
imul
dec
and
fsubl
lods
adc
js
clc
and
jb
shlb
subb
in
in
xchg
mov
sub
cmp
mov
cmp
add
popf
mov
je
sbb
out
inc
arpl
lods
cmp
dec
sub
sbb
mov
or
pop
aad
jp
out
repz
sub
sbb
jbe
test
xor
pop
sbb
outsb
pop
jp
jecxz
mov
cmp
in
rcl
and
cltd
pop
negl
notb
mov
inc
pop
movaps
mov
ja
push
adc
dec
mov
xor
dec
push
pusha
push
or
aas
push
ja
int3
pop
fstps
mov
xor
fldl
lahf
add
and
mov
ss
push
stos
cmp
out
xchg
or
xchg
sbb
adc
add
movsl
jle
jmp
mov
dec
stos
test
mov
aad
mov
pop
or
dec
int
or
inc
fsubs
xchg
cmp
std
xor
xor
dec
lret
in
repz
xchg
sub
inc
rolb
inc
mov
cmp
jle
imul
adc
mov
lret
loopne
shll
mov
pop
mov
cmp
add
lret
pop
jbe
mov
pushf
test
jbe
sub
insl
jp
mov
sub
aam
add
sub
mov
push
test
add
cli
sbb
cmp
cli
push
pop
jne
jge
mov
sub
sbbb
dec
pop
sub
cwtl
lods
dec
add
pop
mov
into
push
mov
pop
push
jle
shrl
mov
gs
movsl
nop
in
add
xchg
cltd
sbb
aas
enter
xchg
int
adc
adcb
sub
mov
je
cmp
mov
stc
out
jno
fnstenv
je
aaa
inc
imul
lret
fnstcw
push
pop
pop
fisttpl
lret
mov
insb
mov
cmpsb
inc
pusha
pop
out
jns
loope
and
push
xchg
scas
add
push
mov
pop
das
mul
sbb
test
dec
mov
jae
or
insl
jo
out
ss
mov
sub
sub
gs
mov
jb
xlat
leave
sbb
cld
sub
js
dec
imul
adc
pop
or
stos
icebp
out
fpatan
sahf
jp
xlat
add
jge
pop
sti
inc
js
divl
idivl
bound
pop
pop
sahf
and
jl
call
in
movsb
sbb
ljmp
push
push
sub
xor
sub
rclb
adc
lea
dec
xchg
xchg
cmpsl
pop
test
add
jno
sbb
cmc
lea
mov
rorl
push
fldl
leave
ds
xchg
sub
lret
sbb
popf
jo
mov
add
rorb
add
popa
sub
sahf
dec
adcb
push
dec
adc
push
add
icebp
stos
hlt
and
ret
das
std
in
pop
fxch
and
repz
cld
ss
adc
jb
orb
jle
jp
mov
cltd
mov
out
add
push
mov
icebp
iret
cmp
rcr
fwait
pop
outsl
insb
xor
adc
mov
cmp
fnstsw
mov
enter
mov
clc
in
test
adc
ljmp
out
aaa
shlb
int
dec
xchg
mov
jne
cmp
sti
cld
adc
inc
jge
call
insl
xchg
imul
adc
sbb
testb
arpl
scas
inc
pop
inc
xor
negl
movsb
add
cmp
adc
in
push
sbb
dec
fldcw
xchg
dec
shrl
xor
or
sbb
xchg
ret
or
inc
mov
xchg
jbe
add
lcall
clc
sbb
popa
mov
mov
popf
lahf
hlt
and
aam
in
pop
loop
mov
lret
call
push
push
jl
fisttpl
js
das
sti
and
in
mov
fmuls
and
jle
rol
adc
nop
push
test
test
mov
mov
mov
jae
cltd
daa
addb
fistpll
inc
mov
inc
mov
mov
in
ds
fsqrt
mov
pushf
and
sarb
sub
push
aam
scas
and
sub
and
shlb
pushf
pushf
js
mov
xor
adc
enter
js
out
test
inc
lods
pop
inc
stos
sbb
xlat
scas
add
add
movsb
xlat
les
cmpsl
mov
aaa
sti
pop
aam
enter
push
inc
mov
xchg
je
push
cmp
cltd
xchg
hlt
pushf
dec
mov
sub
imul
mov
xchg
mov
mov
in
inc
js
call
popf
fwait
movsl
mov
sbb
insl
and
rcrl
hlt
mov
jl
sahf
inc
add
dec
lock
negl
imull
jmp
aaa
push
mov
mov
outsb
iret
bound
mov
out
xchg
inc
sarl
push
outsl
mov
mov
xchg
cli
aad
inc
adc
cmc
pop
dec
movsb
js
lcall
mov
add
sub
sub
jge
leave
enter
inc
push
add
mov
mov
xchg
loope
std
gs
inc
into
adc
mov
cmp
or
mov
xchg
jno
jmp
pusha
mov
in
dec
xor
mov
pop
sub
or
fsub
scas
and
sub
pop
mov
adc
in
push
inc
bound
jae
cmpl
fidivrs
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
fs
jge
pop
jp
out
mov
mov
arpl
sbb
iret
in
lods
cmc
sbb
jb
mov
mov
pop
out
xor
add
dec
insl
add
sbb
imul
mov
lea
xor
pop
int
in
ret
xor
lret
ds
arpl
add
sarl
enter
ljmp
cmpsb
shll
ret
mov
das
ljmp
repz
lahf
xor
scas
cmc
pop
push
in
jne
loopne
add
xor
bound
movsl
and
fcompl
psubd
lock
push
das
icebp
sti
inc
cs
jg
jbe
xchg
mov
cs
pop
dec
imul
inc
xchg
lods
cmpsl
sub
rolb
pop
popa
adc
aad
mov
jno
sbb
ss
and
xchg
pop
or
cmp
movsb
and
cltd
leave
xchg
rcrb
pusha
pusha
adc
decl
add
sti
sbb
adc
je
or
and
scas
cli
fwait
jns
mov
adc
jae
ret
enter
inc
lcall
dec
loopne
sti
ss
idivb
ss
gs
sti
cmp
je
js
int
sahf
scas
ds
push
movsl
int3
xor
les
outsb
xchg
out
shl
and
notb
jp
loope
xor
ds
cs
pop
mov
pop
movsb
cwtl
or
inc
iret
add
fcompl
pushf
aad
inc
pusha
push
les
jl
mov
insb
rolb
clc
out
mov
movsl
ljmp
scas
adc
rol
gs
fcoms
mov
mov
cmpsl
cmc
mov
das
inc
adc
add
sbb
mov
push
sub
dec
stos
inc
add
cmp
out
or
mov
cmp
adc
and
push
jp
and
or
lock
mov
xor
icebp
mov
bound
stos
push
hlt
sbb
add
push
jmp
push
lahf
ret
fld
and
lcall
jg
pop
jecxz
ds
pop
stos
xor
mov
pop
or
push
test
scas
mov
stos
inc
leave
jl
or
repnz
sbb
pop
mov
sbb
inc
les
fcoml
sub
lods
testl
leave
aad
enter
jbe
fdivl
scas
mov
pushf
jae
mov
rorb
pop
add
push
mov
leave
gs
mov
fdiv
mov
mov
mov
clc
testl
hlt
mov
push
adc
and
mov
xor
mov
daa
and
push
stos
inc
jecxz
sbb
jecxz
std
push
pop
cwtl
ret
dec
pop
mov
mov
push
pop
dec
inc
imul
mov
and
add
out
add
cwtl
scas
shll
out
sbb
mov
and
arpl
lret
mov
cmovb
push
sub
mov
imul
mov
jmp
push
mov
add
add
sarl
xchg
mov
push
dec
in
adc
sbb
xchg
inc
pop
orl
sahf
or
add
cmc
inc
rcr
in
adc
lds
sub
jb
pop
test
sub
cmp
dec
mov
sbbl
pop
cwtl
repz
mov
xchg
xchg
pop
sti
mov
cmp
adc
pop
and
cmp
outsl
add
jmp
sarb
test
and
repnz
mulb
fisttpl
pop
xchg
mov
outsl
cs
pop
orl
sub
std
iret
lods
pusha
add
sub
test
leave
gs
mov
pop
and
push
dec
mov
jge
cmp
lea
pop
in
call
mov
adc
nop
out
inc
rcrb
std
jle
lods
mov
enter
movsb
push
push
sbb
dec
sub
jo
xchg
jle
adc
push
dec
cmpsb
fs
sar
ss
push
call
sbb
loop
imul
xorb
lods
mov
loope
imulb
jbe
outsl
adc
push
cmpsl
movsl
cmc
mov
cltd
xor
clc
sub
cmp
shl
popa
push
pushf
push
out
daa
and
adc
hlt
movsl
out
sbb
jp
jle
mov
les
xorb
loopne
stos
pop
cmc
jl
or
lcall
mov
test
dec
and
mov
cwtl
pop
cmp
adc
arpl
movsb
pushf
rcll
loope
fmuls
fisubs
ret
jno
mov
imul
mov
vpackssdw
inc
inc
adc
sub
mov
rep
push
push
mov
dec
xor
pop
cmp
cmp
pop
out
stc
jns
sbb
xchg
jp
lahf
mov
mov
and
jge
mov
fimuls
push
clc
jo
xchg
sub
sbb
jmp
orl
adc
into
test
pop
rcll
aaa
or
inc
cmp
push
repnz
pop
push
jecxz
push
cmp
sub
imul
cmc
push
test
cwtl
icebp
and
shll
sarl
dec
repnz
iret
std
in
xlat
mov
out
or
popf
fnsave
test
adc
arpl
or
dec
jno
rol
nop
or
jbe
ret
or
lock
lea
data16
xchg
jnp
jns
lret
arpl
xor
das
mov
xchg
dec
xchg
jecxz
cmp
xor
int3
mov
xchg
sub
je
repnz
addr16
pop
mov
lahf
cmpsb
push
mov
mov
adc
push
sbb
mov
inc
dec
gs
cmpsl
mov
addr16
mov
sbb
imul
cltd
lds
lds
pslld
dec
cmp
adc
sub
repz
xchg
out
repnz
sbb
add
imul
jo
jle
cmp
add
jg
in
inc
sar
insl
lock
jno
mov
je
sub
add
and
dec
and
dec
lods
sub
sahf
icebp
or
ss
and
es
je
ret
adc
lock
push
xchg
lret
mov
mov
int
leave
xor
shl
cmpsl
cmp
mov
push
xor
inc
push
push
loop
cmpsb
out
xchg
test
fistl
movsb
sub
fldlg2
jmp
into
mov
push
int3
outsl
in
sub
adc
in
adc
push
bswap
pop
les
mov
addr16
fwait
pop
lcall
cs
cmp
rclb
imul
mov
test
sbb
stc
jb
call
addb
cmpsl
fnstsw
and
out
ret
pop
shll
mov
xor
and
dec
mov
sub
sbb
xchg
mov
and
js
add
pop
rorb
neg
lret
push
and
subl
call
mov
xchg
push
push
lahf
pop
inc
inc
xchg
mov
fs
pop
daa
push
ds
pop
scas
and
notb
xchg
mov
stc
lea
push
test
mov
sbb
insb
or
push
leave
lcall
scas
xor
imul
rcrl
sbb
call
pop
out
or
dec
or
iret
psrlw
push
pop
mov
stos
js
mov
das
pop
inc
cmc
fadd
dec
dec
daa
mov
mov
jne
and
xchg
dec
mov
dec
movsb
imul
lahf
and
stos
outsb
dec
push
sub
sti
pop
out
loop
mov
out
gs
sqrtps
ljmp
incb
sub
push
mov
mov
dec
xor
cmpsl
xchg
lea
dec
push
mov
sub
gs
loopnew
pop
popf
mov
lea
sbb
fs
lds
sbb
insb
push
jae
nop
iret
imull
push
dec
std
add
outsl
adc
add
icebp
cmpsb
mov
fstps
out
and
test
jb
aad
jg
inc
lcall
push
cli
daa
cltd
bswap
xor
shrb
imull
int
mov
insl
in
shlb
adc
sbb
jns
or
sub
lds
das
xor
lahf
fmull
repz
add
addr16
mov
daa
mov
pop
or
sub
dec
test
mov
shl
in
jno
inc
mov
lea
lcall
mov
sar
dec
sub
jo
pop
les
jl
leave
daa
push
inc
inc
into
push
in
mov
das
popf
pop
pusha
fcoml
adc
xchg
push
ror
in
jg
dec
push
pop
ficomps
iret
jmp
int
jne
bts
mov
push
push
mov
imul
jl
dec
mov
and
fucom
adc
pop
and
cmp
hlt
pop
push
pusha
push
or
push
jns
inc
out
mov
pop
call
xchg
test
jge
dec
insb
shlb
out
mov
ja
adc
xchg
in
mov
xor
lahf
jl
push
call
rolb
jmp
mov
mov
jns
bound
fstl
xor
movsl
sbb
leave
mov
xchg
pop
push
cmc
lcall
xor
sbb
scas
scas
or
xchg
inc
call
push
sub
into
hlt
addr16
push
mov
ret
aas
jg
cmpsl
ja
ret
into
hlt
push
jb
or
mov
add
popf
mov
in
xchg
call
aas
scas
xchg
dec
mov
jbe
cmp
fildl
ret
dec
add
lds
push
leave
jbe,pn
leave
mov
xor
decb
test
cmpsl
leave
xchg
cmp
push
lods
pop
mov
inc
jo
lds
addr16
inc
fwait
out
jg
inc
push
in
imul
sahf
mov
lcall
or
xchg
push
leave
dec
dec
jge
inc
test
incl
pop
loope
xrelease
ss
aaa
pop
inc
inc
cmp
fistl
insb
lods
adc
lcall
sub
pop
hlt
push
das
inc
mov
shl
pop
or
sarb
imul
push
es
shrl
jle
adc
xor
sarl
mov
jo
fwait
dec
pop
dec
cwtl
outsb
arpl
xchg
stos
adc
iret
ficomps
mov
sub
gs
mov
rcll
ds
jmp
xor
inc
mov
jmp
insl
sbb
push
insb
xchg
or
cli
jmp
lds
std
decb
lret
aas
outsb
lock
mov
pop
pop
cmp
jge
mov
fwait
repnz
mov
sbb
or
rorl
pop
sub
fwait
pop
sti
scas
push
cltd
test
add
jbe
xor
enter
cmc
lahf
dec
sub
cmp
pop
out
icebp
addr16
jbe
mov
sub
pop
mov
xchg
dec
out
mov
mov
inc
loopne
out
loope
dec
loopne
jg
ret
sbb
sbb
lahf
and
mov
les
insb
icebp
xchg
mov
imul
out
nop
xchg
in
andl
xorl
jo
fwait
cmp
scas
xor
lea
xchg
ss
push
push
inc
jmp
lock
lcall
cmp
xor
jnp
sub
or
sub
mov
dec
mov
dec
mov
fnstenv
inc
scas
sbb
je
test
int
clc
mov
test
mov
testb
lock
fcmovne
inc
xchg
xchg
xchg
sub
pop
or
pusha
inc
cld
repnz
adc
adc
enter
repz
push
jmp
loopne
jle
pop
enter
and
push
lods
std
aam
cmp
or
push
xor
dec
int
add
xchg
lds
out
cmp
and
jae
mov
mov
jno
sub
loopne
xor
lcall
ret
stos
pop
push
jl
or
orl
rorl
divl
xchg
fsubl
in
lods
sub
or
jno
xor
lahf
popa
lock
xor
sub
and
inc
ret
inc
or
jbe
push
xor
pmulhuw
sbb
inc
inc
jae
xor
fwait
in
das
push
add
push
jo
push
jno
mov
lea
call
xchg
mov
aad
js
jno
test
mov
outsl
repz
or
xor
popf
adc
loop
enter
sub
adc
dec
lret
stos
jmp
ljmp
shll
jbe
jecxz
or
fs
ss
adc
inc
or
dec
rcr
mov
leave
movsb
pop
xor
sbb
aas
add
inc
cmp
loop
das
xor
hlt
js
stos
mov
test
aam
not
push
les
adcl
xchg
js
mov
popa
clc
ret
in
mov
sub
rcrb
jne
addr16
adc
jae
pop
add
rorl
inc
xor
imul
addr16
leave
scas
xor
lcall
mov
push
xor
lcall
jns
xlat
mov
in
mov
and
mov
sbb
xor
les
and
sarl
fnsave
nop
push
cmc
adcl
cmp
jecxz
fisubrl
push
xchg
lods
mov
sub
pop
scas
jns
pop
mov
arpl
sahf
xchg
jbe
sbb
mov
jae
aam
insl
stos
jle
push
lds
xchg
ds
dec
xchg
les
sbb
cli
fcomps
jns
jg
sub
jg
ds
mov
lret
sarl
fistl
push
out
lods
arpl
mov
lock
cmp
fbld
sbb
cmpsb
das
mov
lret
jb
jb
pop
vpmovzxwd
adc
movsl
mov
push
mov
mulb
jle
push
adc
jl
fdivrl
xchg
inc
sub
fs
pop
hlt
push
rclb
jecxz
inc
movsl
fnsave
std
and
xchg
ds
add
xor
jp
mov
dec
inc
or
jecxz
push
es
mov
push
mov
je
jecxz
cltd
mov
xchg
adc
pop
sarl
adc
add
adcb
push
mov
sahf
enter
cmp
nop
or
jmp
add
sarb
jp
insb
js
in
add
fsub
sbb
and
inc
xor
scas
cmp
add
mov
je
lods
fcomip
out
into
in
fisttpll
es
inc
sti
inc
test
ss
sar
call
faddp
lods
scas
mov
xlat
cs
rcrl
test
jae
clc
push
inc
repz
outsl
ret
sbb
insl
out
mov
dec
psubusb
dec
into
dec
push
addr16
xor
andb
inc
nop
inc
jge
js
xchg
fdivr
fstpt
mov
and
sbb
jge
push
inc
neg
loope
jbe
push
roll
shlb
sbb
das
lock
jo
push
xchg
subl
cmp
fldt
insb
fisubrs
cmc
out
fstpl
add
mov
mov
outsb
stos
mov
ret
insl
imul
scas
pop
aaa
mov
loopne
fdivrl
xor
xchg
out
std
daa
push
lods
jne
xchg
sbb
cmp
or
dec
fnstenv
imulb
cltd
sub
popa
das
push
in
mov
jmp
lret
and
xchg
in
mov
pushf
mov
shl
cli
add
test
aas
int3
mov
fwait
les
cli
in
das
jecxz
js
jmp
loop
aas
test
sbb
ficoms
inc
push
scas
jmp
les
in
sub
jne
loopne
dec
shll
icebp
mov
sahf
imul
shl
ljmp
fsubl
xor
pop
xchg
stos
iret
push
pop
jmp
int
mov
es
adc
mov
cmp
enter
push
mov
mov
xor
or
xchg
xor
test
and
movl
xchg
push
lea
jge
imul
lods
mov
test
jge,pn
ret
pop
xchg
jb
out
and
jnp
sbb
shll
mov
fstl
cmp
les
jle
into
jmp
jecxz
inc
cld
adc
rolb
test
into
popa
cld
int
fldt
push
jmp
xchg
inc
ja
outsb
dec
addr16
enter
mov
push
subl
outsb
les
ss
xorb
xor
mov
adcb
bound
pop
xchg
push
jb
pop
xor
dec
jmp
mov
cld
jne
jge
fwait
push
xchg
loop
xor
jle
pop
out
xchg
cli
mov
daa
inc
xchg
rorl
lods
or
cmp
enter
test
imul
aam
sbb
cmp
stos
mov
pop
xor
or
or
scas
bound
inc
pop
in
sbb
add
aam
xor
cmpsl
lcall
dec
jl
inc
sahf
call
mov
fwait
dec
cld
mov
pop
jae
jg
sub
sub
ficomps
lret
sub
push
leave
pushf
add
lods
dec
pop
int
mov
xchg
nop
jecxz
lret
sti
cmp
ja
clc
negl
pop
pop
shrl
daa
xor
adc
pop
jo
lret
dec
lea
pop
xor
mov
fs
lods
mov
lock
shrl
rclb
lods
js
movsl
mov
fcmovu
in
inc
mov
mov
imul
dec
aaa
aad
into
ds
test
jno,pt
je
rcrb
popf
lret
jnp
and
test
movsl
mov
inc
stc
cmp
jbe
or
cmp
pop
sub
cli
imul
sub
movsl
jecxz
xor
sub
sub
imull
push
stos
push
dec
sub
sbb
js
pop
jbe
leave
xchg
cmp
cmp
mov
pop
aaa
jle
subb
inc
jbe
push
cli
xor
nop
or
mov
cs
cmp
shrb
pop
push
or
ds
or
cld
jl
mov
push
lea
popa
sub
mov
and
cmc
stos
mov
pop
mov
lret
sub
lds
mov
mov
lret
push
stos
in
xchg
loope
jns
repz
fs
dec
mov
jnp
mov
sbb
lods
shlb
dec
sbb
mov
lahf
pusha
sbb
push
and
pop
add
jp
dec
push
loop
adc
cli
iret
mov
lock
rcrb
cltd
ds
push
pop
mov
mov
pushf
fldl
shrb
negl
fnstcw
push
pushf
inc
sub
popw
lods
out
xor
and
loopne
xchg
mov
mov
enter
push
jns
int3
pop
mov
jmp
pop
mov
fdivrp
pop
jg
inc
sbb
jno
mov
and
jge
lret
mov
aaa
adc
jp
sbb
repnz
mov
mov
jg
cmp
mov
in
add
dec
xchg
jbe
push
mov
cmc
into
movsl
cmp
mov
sbb
out
jae
dec
icebp
jecxz
push
jle
aad
daa
sub
je
and
test
xor
pusha
lcall
mov
int
lods
data16
das
mov
lods
sub
jp
ret
adc
inc
lods
mov
dec
cmp
cmp
and
xor
inc
jecxz
sti
pop
cmp
mov
xchg
pop
addr16
lock
inc
adc
dec
in
outsb
and
sbb
mov
or
in
test
mov
mov
out
ljmp
sub
lcall
mov
mov
das
nop
out
cmp
xor
xor
outsl
add
push
mov
cmp
jecxz
mov
push
mov
sar
mov
ret
jge
test
push
dec
cli
into
stc
push
dec
push
lods
test
inc
out
pop
insb
std
dec
or
shlb
inc
push
psubusb
clc
fsubr
xchg
cmpsl
push
mov
call
push
cli
daa
popf
sbb
sub
les
nop
add
fcoms
dec
es
add
loope
xor
sub
hlt
jle
inc
aad
inc
inc
or
pop
in
iret
push
push
xchg
cwtl
cmp
xlat
xor
sub
inc
jl
fildl
or
pushf
out
cltd
aas
push
mov
repz
fidivl
pop
push
jbe
into
fnstsw
js
dec
xchg
cli
or
ret
icebp
push
dec
push
fsts
or
out
les
ja
add
sub
mov
movsl
and
je
and
push
push
cld
adc
int3
mov
lods
sub
lcall
xor
mov
cli
mov
mov
inc
cmp
enter
lret
sar
repnz
mov
sbb
jnp
ret
mov
pop
xor
fisubl
adc
xbegin
gs
insl
in
pop
mull
xchg
lret
mov
sub
sub
sub
sahf
push
jge
test
adc
data16
mov
adc
shll
lods
clc
and
je
mov
jl
imul
fldenv
pop
xchg
cmp
xor
inc
ficoms
movsb
test
mov
arpl
xchg
out
aaa
dec
mov
loopne
and
enter
adc
inc
push
addl
mov
add
mov
test
popa
cld
add
mov
rcrl
lea
xchg
pusha
cli
mov
push
push
mov
clc
pop
pusha
and
mov
pop
sbb
adcl
test
mov
add
fistpll
pop
jl
push
xorb
or
sbb
jne
out
mov
or
fbstp
mov
jnp
pushl
jbe
ljmp
mov
push
arpl
jno
push
roll
scas
flds
je
xchg
hlt
mov
sbb
loope
sbb
xchg
bound
xchg
jno
push
mov
lahf
lahf
js
fldt
xor
fcompl
push
adc
lret
stc
mov
fcmovnbe
inc
call
fsubr
pushf
mov
cmpsl
cmp
and
in
cmp
jo
sbb
rol
sub
sbb
test
xor
xchg
icebp
push
loop
pushf
in
js
dec
dec
sub
stos
aas
icebp
jg
repnz
pop
std
lods
addr16
sbb
push
mov
subl
in
cmp
lret
fs
cli
lcall
mov
pushf
addr16
leave
dec
cli
mov
xchg
cmp
mov
icebp
loop
test
jns
addr16
fnstenv
sbb
jnp
loop
xor
adc
xchg
ss
dec
sbb
sbb
aam
pusha
xor
cwtl
push
mov
jl
cmp
in
or
stc
sbb
roll
dec
cmpsl
jbe
in
xor
les
pop
push
in
subl
xor
jg
clc
call
lahf
jmp
pop
dec
or
or
stos
mov
dec
mov
cmc
stos
movsb
jbe
ja
in
stc
fcomps
inc
call
clc
push
jnp
lods
stos
es
inc
and
dec
gs
ljmp
insl
jno
sub
jl
fwait
scas
popf
in
mov
cmp
sbb
xchg
jp
pop
decb
cmp
mov
mov
lahf
aad
lods
lea
int3
mov
push
push
or
ljmp
mov
sub
bound
sti
call
pop
inc
ret
or
xchg
fwait
popa
jns
add
cwtl
and
lds
xchg
or
dec
les
jl
mov
decb
aas
mov
xor
movsl
mov
xlat
jbe
stc
pop
cli
roll
and
leave
xchg
icebp
xchg
loopne
push
orl
iret
inc
jno
ret
sahf
pop
pop
cmpsl
std
rolb
mov
mov
dec
pop
inc
xchg
testl
outsb
adc
ror
pusha
pop
test
mov
gs
mov
push
mov
pop
das
outsl
pop
adc
xchg
out
imul
xchg
ja
dec
xchg
inc
lock
into
rorl
iret
push
or
inc
mov
cmp
add
in
sbb
cltd
ret
mov
imul
nop
mov
sub
push
mov
lea
ds
mov
pop
in
adc
jne
ds
mov
lahf
imul
das
stos
ss
repnz
jecxz
pushf
incl
mov
push
push
popf
mov
imul
mov
pop
shlb
mov
sub
lahf
shlb
inc
xchg
jo
addl
add
push
sub
lahf
rcrl
lret
and
aaa
xchg
jp
and
in
xor
lcall
mov
push
mov
xchg
cwtl
jae
sub
jnp
icebp
es
dec
xchg
subb
sub
scas
xchg
dec
bnd
frstor
push
adc
lret
mov
movsb
ret
je
loope
cmpsl
and
sahf
jmp
loop
sbb
fsub
cwtl
jno
xchg
and
leave
ljmp
ja
add
insb
scas
add
cwtl
jle
loopne
std
pushf
fimuls
fistpl
addl
ja
jbe
pusha
or
shr
daa
jbe
inc
shlb
adc
out
sub
insb
test
jne
jb
adc
mov
das
repnz
decb
xchg
dec
arpl
loope
test
jle
mov
xchg
in
stc
cmp
aad
mov
add
sub
popf
pop
dec
getsec
xor
jae
jns
arpl
pop
fnstsw
dec
ret
call
mov
sbb
adc
jmp
push
adc
cmpsl
inc
sbb
fisttps
pop
push
filds
adcl
sbb
outsl
out
pop
popa
push
or
xchg
scas
push
daa
das
cli
or
testb
cmp
or
pusha
orl
sbb
mov
cmp
sub
and
mov
ret
inc
push
xor
out
cs
push
std
sti
imul
jno
insl
and
ja
push
inc
pushf
or
dec
test
push
jmp
negl
and
and
pop
rorb
pop
dec
add
enter
testl
loopne
and
sub
mov
xchg
cmp
add
pop
push
lcall
ret
test
pop
sbb
inc
jl
jnp
jns
and
rep
mov
aad
xchg
xor
das
dec
jmp
inc
outsl
das
xor
pop
test
enter
lret
nop
dec
push
jp
cwtl
jg
mov
mov
jnp
cmp
fs
lods
cmpsl
cltd
sub
pop
pop
loop
rcl
pusha
test
int
mov
dec
test
ret
out
or
mov
inc
test
push
movsb
nop
pushf
lds
js,pt
bound
push
mov
fwait
je
xchg
mov
push
jae
aam
rclb
mov
dec
push
movsl
lret
adc
adc
out
and
out
xchg
loope
popl
in
and
hlt
jmp
cmpsl
mov
pop
mov
sub
and
dec
ljmp
push
shl
jg
mov
mov
sbb
int3
pop
mov
stc
ret
sbb
mov
lret
mov
inc
adc
mov
push
loope
jns
mov
clc
pushf
push
outsl
fimull
mov
scas
dec
fst
clc
shll
fcmovb
sbb
loope
xchg
jecxz
and
inc
or
xchg
jno
shlb
push
lds
dec
test
mov
jo
add
insl
aad
hlt
test
cmp
xchg
mov
rorl
add
inc
xchg
movsb
ds
mov
mov
rolb
out
flds
dec
push
and
popa
xlat
push
xor
ret
dec
data16
jns
sbb
lahf
push
push
iret
mov
sub
in
aam
aad
sub
popf
rorb
pop
daa
adc
push
adc
mov
cmp
mov
outsb
sbb
and
xchg
xlat
loop
pop
adc
push
testb
xor
shl
jp
std
xor
xor
or
push
sub
cmp
imul
pop
outsl
pop
push
add
test
popa
pop
mov
adc
jp
jo
aas
push
jne
cmp
add
push
pop
sub
cmp
adc
fidivs
bound
mov
xchg
dec
sub
push
test
mov
xchg
xchg
dec
inc
imul
mov
push
fdivl
cmp
popa
push
rorb
and
mov
cmp
inc
sub
xor
adc
and
call
std
out
xor
dec
push
test
push
sahf
mov
sub
dec
or
rolb
adc
mov
sub
scas
mov
jecxz
push
addr16
fisttpll
shll
sub
stos
negl
sbb
ret
fnstsw
fstl
icebp
out
cmp
fnstsw
jp
adc
sub
pop
xor
adc
out
clc
adc
lock
daa
int3
sub
cs
sahf
mov
insl
sbb
ss
xchg
cmpsb
push
xchg
shll
sahf
out
push
add
sub
pop
sub
sarl
popf
lret
cmpsb
test
filds
pop
fildl
xor
popa
enter
outsl
inc
stc
mov
cmp
shrl
jg
shr
pop
fildl
sbb
sbb
cmp
stc
je
xchg
aas
insb
mov
roll
out
andl
stos
insl
scas
gs
cmp
popa
add
xchg
push
cmp
cmp
loopne
and
mov
sbb
push
stc
ja
add
jbe
rcr
inc
scas
out
fiaddl
dec
cmp
mov
or
jb
or
std
fdivrl
pop
mov
scas
out
shl
mov
cwtl
xor
enter
out
and
lret
icebp
in
dec
jbe
or
push
adc
pop
sbb
outsl
repz
repz
roll
mov
jne
push
sub
or
jmp
mov
sti
xor
pop
fucomi
pop
sbb
addr16
push
or
xchg
cmc
mov
scas
mov
or
dec
ljmp
cmpsl
ds
inc
sbb
call
es
roll
insb
sub
int3
cmc
aam
mov
xor
jnp
out
sbb
sahf
fiaddl
fs
push
pop
mov
adc
insl
out
xchg
bound
jmp
mov
jb
scas
xor
pop
jg
test
jg
ds
fs
and
adc
test
cwtl
movb
js
push
pop
inc
arpl
or
mov
outsb
push
fldcw
pop
lret
mov
jb
rclb
std
sahf
lret
pop
shll
xor
dec
aad
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
addr16
mov
decb
pop
jbe
inc
xchg
push
mov
mov
fidivrs
lods
js
pop
mov
inc
cmp
mov
arpl
jo
mov
xchg
lds
aam
pop
cwtl
xchg
push
push
jno
mov
in
xchg
shlb
gs
cmp
sahf
stc
insb
test
pop
in
inc
stos
popa
stos
lock
inc
mov
inc
inc
rclb
lret
push
mov
lahf
out
ljmp
subl
fbld
inc
add
lds
loope
cmpsb
mov
clc
outsb
dec
cld
fcmovnbe
in
or
xchg
pop
push
out
sahf
pop
jbe
mov
jle
mov
mov
cld
cmpsb
in
cmp
insl
adc
mov
test
mov
idivb
pushf
xchg
inc
fldl
lods
add
and
cmc
and
fldl
dec
xor
lcall
in
subb
pop
jg
xor
jp
lret
xor
xor
out
jle
and
movsl
inc
cmp
mov
js
sub
push
and
inc
imul
call
xchg
insl
sub
push
mov
dec
jg
cld
lcall
inc
aas
rcr
test
or
lods
cmpsl
add
inc
mov
clc
pop
push
fcmovu
push
cmp
repz
push
stc
std
push
je
data16
pop
test
cmp
mov
inc
in
adc
mov
xchg
jg
insb
ret
lods
popa
sbbl
and
scas
xchg
out
push
lds
in
and
mov
jmp
xchg
pop
stos
adc
cli
movsl
dec
pop
mov
stos
inc
out
pop
mov
inc
pop
int
aad
clc
lds
insl
fidivrs
mov
jmp
cmc
shlb
cmp
cmp
adc
inc
decl
mov
jmp
xor
movsl
data16
xchg
call
add
add
jge
xchg
lahf
imul
mov
addr16
fisubrs
cmp
fldcw
jbe
push
outsl
in
or
jg
mov
fdiv
test
rorb
movsl
xchg
xor
mov
inc
out
out
cwtl
and
dec
xchg
aad
inc
inc
insb
mov
sub
add
inc
sbb
xor
xchg
push
cmp
push
and
cltd
mov
or
pop
jmp
jno
mov
insb
push
repnz
jbe
xor
aas
call
mov
cmpsl
xor
repz
lock
xor
inc
inc
jno
xchg
cmp
stos
pop
pop
pop
and
test
xlat
adc
fistpl
test
inc
cwtl
mov
inc
sub
xor
insl
inc
sti
int
and
or
push
test
sub
icebp
cmpsb
mov
sbb
xchg
movsb
sbb
test
dec
pop
ss
fidivs
inc
push
test
sbb
sbb
pop
jmp
push
aad
jmp
push
sbb
test
cmpsl
mov
mov
int3
cs
mov
jbe
sbb
stc
es
out
inc
adc
pusha
adc
mov
mov
mov
js
or
inc
lock
fwait
clc
mov
add
jns
adc
sub
lds
jg
xlat
jns
or
pop
push
ja
fs
shrb
sub
ret
mov
idivl
sub
mov
fptan
pop
jmp
rorb
test
loop
ljmp
movsb
dec
ss
scas
sbb
gs
xor
les
push
or
push
test
rcr
pop
outsl
fbstp
xor
jecxz
mov
jle
sub
cmp
pop
mov
xchg
addr16
sub
sbb
sahf
in
lret
aaa
or
invd
cmp
in
out
add
popa
jl
out
mov
fidivs
mov
lret
shlb
dec
loopne
ljmp
dec
test
mov
std
sti
add
fidivl
cmp
scas
stc
push
mov
cltd
jp
and
rorb
filds
rolb
push
idivl
mov
popa
je
lahf
sbb
or
icebp
or
pushf
pop
lahf
loope
clc
mov
fidivs
xchg
rcrl
and
inc
test
loope
push
cli
cld
add
cwtl
sahf
adc
dec
in
pop
push
and
jge
gs
mov
cmpsl
jae
jbe
lret
sbb
jbe
xchg
sbb
sbb
and
bound
push
test
mov
dec
cmp
out
mov
idiv
xor
cmp
xor
das
jno
inc
mov
jmp
loope
test
pop
std
mulb
jecxz
cmpsb
or
outsb
fidivl
fidivl
inc
inc
outsb
add
test
clc
xchg
or
dec
jnp
cmpsb
movsl
dec
add
shlb
dec
jge
sub
jno
dec
mov
or
push
repz
xchg
in
mov
push
inc
js
cmp
ror
in
mov
pop
jae
xor
fnstsw
test
pushf
push
pop
das
mov
mov
pop
pop
mov
outsl
dec
cld
jno
and
test
jp
fwait
insb
mov
out
adcl
imul
push
fcompl
push
iret
mov
les
xor
add
sbb
clc
sbb
daa
testl
and
add
xchg
jg
push
xchg
cli
add
sbb
les
xor
fdivrp
and
mov
jge
imull
mov
xor
sarb
lret
cld
xor
rcll
add
imul
fisubs
pop
mov
sub
out
rcrb
fs
jg
or
nop
mov
aam
and
lea
mov
or
lods
push
pop
popa
psadbw
push
in
lahf
popf
pop
mov
ret
ja
pop
sarl
sub
leave
rol
into
mov
ljmp
sarb
mov
sub
and
test
pop
pushf
dec
bound
imul
cmpsl
inc
ljmp
movsl
sbb
lret
fcmove
mov
leave
popa
popa
inc
sbb
push
jbe
data16
pop
mov
add
aam
mov
mov
lret
mov
xlat
and
lods
jl
nop
fstpt
xlat
and
ret
loope
xor
jb
rol
cmpsb
push
jnp
popf
sbb
push
pop
pushf
popf
push
lea
and
jmp
mov
aam
cmp
cmp
jnp
add
and
mov
mov
popf
jmp
imul
mov
xor
mov
fsubrl
inc
push
xor
mov
imul
lret
xchg
mov
aaa
and
iret
movsl
insl
add
gs
pop
jb
imul
xchg
scas
loope
xchg
jbe
cwtl
stos
xor
test
lock
jmp
ret
sub
mov
outsb
rcrb
cmc
cmp
outsb
inc
inc
mov
jmp
jl
jns
dec
pop
outsb
imul
lahf
hlt
sbb
dec
mov
sub
cmpsl
sbb
adc
out
fistpl
jecxz
mov
in
mov
xchg
in
movsb
and
jge
pop
lahf
jmp
imul
sub
dec
leave
push
adc
jl
sub
jo
jb
aaa
les
jae
mov
stc
divl
cli
out
and
outsl
faddl
sti
fcmovbe
cmpsb
sub
test
and
loopne
xchg
popf
mov
ds
or
and
ds
sub
jge
and
imul
lods
arpl
test
cmc
mov
xchg
or
push
test
push
lcall
testl
pop
or
scas
sbb
addr16
ret
mov
in
jg
cwtl
mov
mov
scas
lods
xor
ljmp
mov
ljmp
adc
xchg
push
sub
hlt
mov
mov
cmp
jecxz
cltd
outsl
sti
push
aaa
mov
inc
xchg
xchg
outsl
jmp
jbe
les
xchg
xchg
adc
ds
mov
jne
imull
add
or
test
aaa
pop
pop
gs
jmp
ss
sub
out
inc
std
pop
mov
pop
cmp
clc
lcall
or
mov
sbb
outsl
out
fisubrs
icebp
xor
cwtl
mov
jne
addr16
mov
lock
stos
jl
pop
mov
or
and
cld
adc
cmpsl
inc
testl
xor
shrb
imulb
push
jno
sub
mov
jbe
xor
jnp
mov
add
inc
mov
aad
negb
xchg
xor
mov
lcall
adc
jg
lods
mov
enter
pop
or
in
ljmp
loop
mov
repnz
add
es
pop
or
mov
sub
mov
fs
cmp
jbe
lahf
in
mov
jno
push
aas
enter
pop
jg
dec
mov
and
in
jp
cmp
mov
sti
orl
mov
jle
jns
jns
repnz
pop
les
test
sbb
ljmp
pop
int
das
mov
je
dec
mov
mov
je
inc
test
or
loop
cmpsl
int3
mov
and
push
cmp
shl
mov
sub
cmc
or
sbb
add
in
adc
xor
daa
das
sbb
inc
pusha
lods
push
cmp
push
mov
mov
lds
cmpsb
loope
xor
jge
test
ret
mov
xchg
adc
pop
pop
dec
xor
jecxz
in
pop
loopne
int3
pop
shrb
xor
and
adc
pop
test
insb
jg
push
and
jmp
add
push
add
cmp
push
dec
dec
fst
sbb
stc
lods
jmp
mov
movsl
and
pop
mov
mov
adc
mov
shrl
jns
and
add
jno
cmpb
add
mov
push
cmp
jl
out
lods
out
rorb
bound
inc
fldenv
sbb
pushf
pop
pop
subb
lods
mov
orb
adc
cmp
push
push
push
repnz
jecxz
cmpsl
sub
add
rorb
mov
loopw
and
mov
add
add
inc
je
data16
stc
and
pop
cmp
ficoml
fwait
pop
jnp
imul
fs
or
int3
sub
mov
je
int
dec
push
icebp
jb
cmp
fistl
fistpl
pop
pop
push
inc
movl
pop
xor
pop
cltd
data16
jno
mov
pop
filds
pop
add
cmp
mov
loop
push
dec
jmp
outsb
inc
mov
dec
orb
jmp
mov
mov
mov
movsl
inc
adc
add
ljmp
dec
pushf
mov
lods
dec
addl
cmp
cld
adc
lahf
setns
lcall
push
mov
adc
sbb
jmp
dec
add
loope
in
lds
inc
pop
mov
pop
inc
mov
cs
sub
stos
lea
stos
sbb
xor
sub
jmp
movsl
das
mov
gs
jnp
mov
or
enter
sbb
and
sbb
ret
outsl
jae
je
test
push
out
mov
dec
insl
fdivs
fcmove
popa
jne
dec
xchg
js
fucomip
data16
je
cmp
push
sahf
push
lahf
nop
and
adc
xchg
popa
mov
xor
mov
sbbb
test
mov
sub
fdivrs
test
in
mov
shl
inc
loopne
call
lods
ja
mov
push
xor
jmp
xchg
dec
sbb
loopne
jg
pop
add
sbb
sub
adc
mov
popf
xchg
xchg
sub
ret
div
imul
into
pop
cmp
ljmp
inc
xor
inc
int3
jg
addl
lret
dec
arpl
jb
int3
or
sub
cmp
flds
or
call
pusha
shl
mov
jae
and
js
int
cmpl
xor
sarl
add
or
std
bound
cmp
mov
push
cmp
cld
cmp
outsb
mov
lea
aam
xchg
xchg
ss
mov
nop
mov
mov
push
lcall
sti
es
loopne
je
test
int
adc
cmp
xchg
adcl
cmc
js
fdivrl
outsl
adc
dec
xchg
stos
jge
dec
adc
sbb
icebp
movsb
dec
fbld
enterw
inc
scas
mov
push
sub
mov
cmp
out
hlt
leave
lret
test
bound
and
pusha
hlt
scas
or
push
and
xor
push
sbbb
sbb
aas
mov
in
pop
push
xlat
ja
mov
jne
push
call
push
out
add
jecxz
in
jmp
jge
shrb
mov
lret
divl
sbb
sub
popf
inc
cwtl
fistps
ret
add
inc
pushf
and
dec
mov
stos
fstps
lret
and
dec
push
mov
pop
lret
stos
jge
ja
out
or
add
and
fwait
adc
cli
adc
xchg
pop
sub
pop
mov
xor
cltd
insb
test
hlt
sti
lret
enter
rorl
lods
fimuls
cmp
addr16
mov
mov
dec
mov
push
loopne
fadds
into
sbb
call
xchg
stc
push
jge
inc
inc
clc
pop
add
and
out
arpl
mov
cmp
and
test
outsb
jecxz
cmp
and
xor
lods
jb
int
loope
dec
fmuls
mov
push
nop
sbb
push
or
test
push
rorl
andl
cmpb
movsb
xor
mov
inc
lods
scas
xchg
test
pop
inc
out
mov
dec
cltd
rolb
mov
dec
aas
jne
iret
popf
cmp
fs
xchg
scas
mov
mov
dec
xor
repz
xlat
jnp
jno
rcrb
and
lods
and
pop
mov
and
and
pushf
lea
cli
mov
gs
lahf
loop
lcall
xor
cmp
in
adc
push
pop
daa
xchg
std
mov
sbb
sti
pop
jno
or
mov
std
xor
dec
push
mov
cmpsl
or
in
lret
mov
repz
sbb
push
out
out
sub
dec
daa
daa
mov
icebp
scas
pop
popf
insb
or
popa
arpl
fildll
xchg
in
xor
js
sbb
sar
les
sahf
xor
andb
je
sub
mov
fwait
popa
pushf
push
push
pop
cmp
insl
xor
lcall
or
xlat
scas
cmp
lret
inc
andl
dec
mov
xor
mov
mov
scas
stos
and
dec
or
enter
pop
stos
into
dec
mov
push
lret
stc
roll
fisttps
inc
sbb
xorb
out
pop
mov
xchg
dec
jns
cltd
cmp
mov
xor
or
dec
pop
mov
mov
int
push
inc
jbe
push
test
repnz
adc
movsl
jne
xor
add
or
test
push
sbbb
cmp
inc
adc
mov
xchg
call
shll
xor
add
jne
xor
ds
jo
dec
add
jnp
sbb
mov
mov
enter
outsb
pop
xorl
xlat
dec
addr16
add
and
and
in
jl
popa
faddl
idiv
dec
out
aam
pop
or
div
dec
pop
push
movsl
push
dec
cmp
push
std
or
sbb
out
jo
clc
sub
jecxz
push
scas
dec
xor
daa
call
pop
push
mov
or
loop
add
push
push
xchg
sti
sbb
inc
xor
push
mov
inc
les
mov
cld
je
jmp
xor
inc
dec
jecxz
ret
jo
aaa
mov
xor
sbb
lret
xchg
xor
mov
mov
inc
mov
fistl
test
jbe
mov
jecxz
sbbl
xor
in
ss
nop
xchg
mov
sub
daa
loop
pop
add
xor
mov
push
xchg
jg
dec
es
enter
jae
icebp
aad
mov
jecxz
sbb
jb
lods
notl
cmp
icebp
into
mov
mov
xchg
cmp
sub
sub
mov
lret
cli
pop
and
jne
jbe
dec
pushf
mov
or
add
push
jbe
test
das
sahf
cmp
mov
cmpb
fdivrs
popf
and
xlat
sbb
mov
inc
out
shrb
aas
dec
pushf
jae
int
jae
cmp
lock
inc
xchg
or
lods
push
push
sub
dec
ret
sbb
pop
sub
xor
out
es
jl
mov
and
daa
fs
xchg
lcall
int3
xor
mov
and
push
lds
xchg
xchg
popa
ds
cmc
out
add
mov
sub
xchg
in
pop
sub
mov
stos
lahf
enter
add
pop
jo
test
fs
add
add
add
popa
sub
and
rcrb
push
mov
fucomi
push
cmp
sbb
lods
xchg
cmc
cmc
stos
jns
mov
dec
adc
push
mov
xor
cmc
leave
das
stos
sbbb
xchg
sub
mov
rcrb
mov
shll
cmp
ja
fucomp
outsb
mov
arpl
cmp
mov
xor
aaa
xlat
push
pushf
fcmovu
push
and
add
jbe
xchg
jge
jl
out
test
jmp
or
sahf
sbb
movsl
subl
sbb
add
pushf
orl
ljmp
in
adc
ds
testb
fs
andl
cmpsb
cmpsl
test
out
adc
aad
and
adc
lahf
inc
pushf
and
or
or
bound
jge
dec
sub
ficomps
mov
or
xor
loopne
pop
mov
dec
inc
clc
jge
or
sbb
cmc
inc
fistpl
stc
aam
dec
pop
stos
pop
sbb
push
and
mov
sub
loopne
mov
loop
push
lds
and
xor
xorl
cld
mov
aas
cmp
bound
adc
rep
xchg
pusha
jp
fwait
inc
push
push
rcll
in
test
in
xchg
fadds
mov
pop
and
ret
xchg
xchg
rclb
mov
mov
xor
clc
call
and
negb
mov
xchg
push
cmc
movsl
cmpb
or
sub
cltd
dec
or
ret
cmp
outsb
pop
pop
outsl
ret
or
mov
popf
lret
cmpsl
es
push
outsb
aad
fcmove
cld
mov
mov
dec
lods
rclb
cmp
inc
xchg
dec
inc
pop
jbe
jns
dec
cmpsl
sahf
jno
xor
mov
cmpb
nop
aad
loop
xchg
and
fisubl
fcmovne
scas
and
sbb
mov
jl
daa
es
pop
loop
mov
fnstsw
lods
sbb
mov
mov
mov
sbb
xor
or
and
push
ss
lret
fstp
dec
mov
dec
fwait
xor
cmp
cmp
mov
dec
or
cmp
xchg
inc
testb
int
call
in
orb
loop
roll
push
pushf
out
fstl
movsb
addr16
mov
mov
stos
sahf
sbb
xlat
mov
scas
aam
push
sahf
clc
mov
enter
sar
std
in
push
loopne
inc
sarl
xlat
xor
arpl
hlt
scas
out
mov
xlat
js
mov
daa
fistpl
sub
insb
mov
jmp
std
add
xlat
and
mov
push
pop
imul
and
into
adc
loope
insl
aaa
das
xor
cmc
icebp
icebp
clc
jae
adc
mov
aam
out
xlat
test
sub
add
sbb
mov
xchg
std
sub
add
push
lret
icebp
pop
std
into
sub
cmp
mov
int
cmp
adc
mov
xchg
shrl
sbb
mov
dec
fstpl
ret
in
dec
add
jge
decb
pop
xorb
movsb
aaa
push
aas
cld
je
cwtl
or
ja
jo
cld
xchg
xchg
aaa
push
xchg
xor
sti
std
jno
cmp
inc
sub
sbb
sti
add
push
pop
push
sbb
xchg
or
adc
fs
je
int3
imul
es
cmp
xor
push
cld
cmp
mov
movsl
cld
push
pop
popf
pop
xor
xor
stos
and
sahf
negl
and
into
sub
push
cmc
and
sub
das
jmp
mov
xchg
push
push
repz
xor
ss
fcoms
xchg
js
xchg
xchg
mov
aad
sbb
insb
xor
fisubrs
lcall
aad
dec
inc
cmp
xor
movsl
div
mov
adc
fdiv
xchg
inc
fcoms
mov
dec
cmpsb
dec
jns,pn
push
push
mov
cmp
push
pop
imul
jecxz
sbb
and
insb
xchg
lret
cmp
out
mov
and
cmc
sbb
add
fwait
or
sbb
xchg
inc
add
and
fisttps
dec
dec
loope
popa
fabs
jae
mov
pushf
xor
stos
aad
pop
hlt
loop
aas
add
stos
xchg
lahf
xchg
fsubl
mov
adc
loop
scas
aam
xlat
mov
jb
ror
mov
lds
jmp
sub
mov
sbb
clc
adc
cmp
rclb
mov
cmp
idivb
dec
out
insb
das
add
test
and
xchg
cmpsb
fisubrs
andb
mov
xlat
mov
mov
or
push
out
xchg
mov
dec
and
scas
adc
rcrl
repnz
push
lcall
fcom
sbbl
movsb
pop
insb
gs
fsubrs
cmova
mov
ret
aam
xchg
add
mov
mov
push
push
int3
sbb
into
clc
jne
jno
jb
cmp
mov
dec
pop
push
orb
sub
push
fldcw
sti
mov
mov
imul
jns
incl
outsb
insl
dec
inc
imul
jecxz
lret
gs
loopne
mov
cmpsb
std
xor
clc
hlt
and
xorl
pop
fs
sbb
and
in
mov
lea
sbbl
fistl
iret
ja
insl
lods
mov
sub
pop
and
scas
inc
mov
pop
sub
leave
add
cltd
lea
int
outsl
mov
fisttps
push
and
pop
pop
in
xchg
leave
and
out
popa
ljmp
aad
test
cmp
jns
sbb
loopne
scas
call
mov
jbe
pop
btr
ret
arpl
popf
mov
jb
dec
leave
outsb
cmc
nop
cmp
js
push
popa
xchg
js
xor
jnp
mov
xor
and
mov
or
and
inc
mov
adcl
in
movsb
cmp
jmp
xchg
loop
imul
or
mov
out
xor
ja
mov
lret
dec
dec
jge
aad
loop
aas
jnp
push
mov
xchg
fsubrs
push
sbb
or
test
leave
arpl
push
lahf
mov
and
adc
fsub
movsl
xor
es
xor
add
fscale
inc
dec
lahf
mov
movsb
gs
dec
stos
sbbl
pop
push
leave
xor
lds
pop
push
push
cmp
arpl
daa
ret
lcall
notl
mov
clc
lea
fucomp
hlt
imul
inc
jno
je
test
popa
fistl
and
loop
lods
mov
movsl
push
imul
loop
cmp
jecxz
xchg
or
rcrl
fistps
mov
adc
lods
add
scas
dec
mov
and
daa
jno
mov
sbb
inc
mov
dec
rcrb
outsb
jmp
xchg
jns
vpsadbw
mov
push
rcrl
add
cld
js
aad
push
cmp
pop
xchg
sbb
test
imul
xchg
sbb
dec
repnz
mov
clc
mov
push
lea
imul
cmp
add
mov
xchg
add
frstor
push
adc
mov
cmp
sub
sbb
xlat
or
lea
adc
jl
imul
dec
xlat
js
js
shrl
mov
aad
mov
adc
xor
les
ficoms
xor
es
imul
jne
fists
adc
mov
and
leave
aad
mul
push
scas
sahf
jne
orl
dec
mov
xor
int
mov
and
icebp
push
das
mov
adc
inc
sub
lret
aam
xchg
aad
dec
scas
xchg
mov
sub
xchg
in
mov
in
adcb
adc
out
add
mov
arpl
js
push
add
stos
inc
fadd
repnz
mov
jecxz
sti
sahf
and
or
xor
or
fimuls
push
jae
shr
dec
mov
das
out
and
popa
push
aad
hlt
push
mov
jne
xor
push
pop
imul
outsb
stos
es
xlat
arpl
xchg
jbe
inc
insb
and
js
into
push
push
ficomps
pop
test
push
cmp
mov
in
inc
add
lods
stc
fidivrs
sub
cmpsl
jmp
mov
pop
and
dec
mov
jmp
ret
mov
xor
clc
daa
idiv
jne
sub
test
sbb
les
dec
and
addr16
mov
rcrl
cmp
mov
mov
inc
aad
arpl
dec
add
xor
pop
cltd
mov
xchg
lret
push
aaa
cltd
or
inc
and
fwait
push
jecxz
cmp
ret
pop
call
push
cmp
push
nop
negb
mov
icebp
or
push
icebp
stos
stos
mov
aaa
dec
xchg
cmpsl
mov
sbb
setle
xor
rorl
sbb
cmp
ret
push
ljmp
and
dec
jnp
negb
pop
lds
adc
lock
xchg
or
in
cmpsl
push
inc
inc
fldl
cmpsb
scas
js
pop
stc
mov
out
or
cmp
sub
xor
lods
enter
fwait
xor
ljmp
aam
lfs
mov
pop
scas
lret
out
push
lods
cmp
mov
fcmovbe
adc
mov
sarb
ficoml
pop
push
nop
mov
jae
inc
jle
add
jbe
jecxz
jle
and
fstpt
push
outsb
and
cli
mulb
rorl
push
mov
sbb
and
cmc
stos
mov
int3
and
jno
lock
jbe
call
lods
mov
imul
fcmovb
xchg
fidivl
push
popf
bound
ja
orl
and
ja
sbb
xchg
xchg
loope
jae
in
iret
mov
enter
lcall
xor
stos
and
repz
cld
sti
dec
insb
loope
adc
pushf
dec
insl
cmpsb
out
sub
stos
out
fmull
pop
popf
sbb
add
mov
mov
jns
pop
out
mov
xchg
sub
test
hlt
xchg
jl
outsl
pop
jo
ja
push
xchg
lret
adc
js
shrb
xchg
jb
jae
mov
out
xor
daa
aad
jle
sbb
sbb
shll
push
dec
jne
dec
xchg
out
loopne
popf
dec
xchg
jmp
sbb
mov
xor
mov
pop
adc
inc
mov
shlb
or
out
jnp
fbld
cmpsb
mov
cwtl
leave
sub
jbe
xlat
pop
mov
aam
adc
daa
dec
adc
push
mov
or
into
lds
pushf
jns
sub
pushf
pop
arpl
addr16
and
adc
and
or
pusha
cmp
add
push
mov
in
mov
dec
inc
mov
pop
cmpb
notl
nop
mov
ljmp
fsubrp
sbb
lock
mov
testl
sbb
cmp
outsl
jl
pop
les
push
push
jmp
jmp
call
aad
lods
loop
cmp
sbb
lock
cmp
pop
lret
dec
cs
add
sarb
mov
stos
dec
mov
sub
je
jae
loop
jbe
jne
mov
mov
mov
mov
jns
jae
jp
mov
mov
or
xchg
jmp
outsb
andl
mov
repnz
jl
ja
aaa
repnz
bound
mov
mov
js
sahf
fs
jno
mul
shrl
notb
je
fdivl
clc
stos
cltd
data16
sub
adc
xchg
sbb
sbb
fildl
negl
xlat
ret
fdiv
adc
cmp
pop
jnp
in
sub
sub
out
mov
mov
xor
mov
xchg
push
jmp
leave
mov
xor
xchg
xor
mov
pop
jle
mov
sahf
jb
mov
outsb
pop
ja
pop
clc
cmp
cmp
cmp
outsb
add
repz
and
cltd
mov
inc
clc
ljmp
cld
mov
add
out
addr16
test
push
mov
into
daa
nop
sbb
sub
xchg
mov
sahf
or
jmp
mov
pop
or
data16
push
xchg
jbe
insb
fadds
cmp
mov
test
int
mov
jo,pt
or
pop
push
jo
jae
xor
inc
mov
add
insl
enter
push
pop
cmp
cwtl
mov
or
inc
ljmp
pop
mov
clc
or
fisubs
enter
repnz
mov
mov
push
pop
popf
arpl
cmp
cmp
out
cltd
scas
sahf
add
sbb
or
jle
pop
ficoml
xchg
sub
mov
xor
jl
jmp
xor
adc
adc
icebp
dec
rcrb
mov
cli
fs
scas
sbb
xchg
test
fstl
std
stos
lock
push
pusha
shll
stos
loop
mov
xchg
aas
and
mov
filds
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
ret
popf
xor
aam
jp
pop
jp
clc
mov
and
aam
int3
imul
xchg
inc
mov
int
imul
push
mov
xchg
nop
popf
insb
frstor
adc
adc
arpl
and
adc
mov
push
mov
xor
adc
xchg
mov
test
arpl
push
xor
out
fildll
jg
inc
push
dec
xlat
xor
in
jbe
push
add
sbb
shll
xchg
add
mov
push
push
sub
and
int3
dec
mov
dec
cmpsl
rsm
mov
addb
xchg
mov
push
and
cmc
push
dec
sbb
adc
lods
loope
xchg
dec
test
shrb
sub
cmpsl
std
sub
xlat
les
stos
aad
hlt
idivb
lock
bound
aam
sub
test
cmp
scas
leave
fstpt
sbb
popf
mov
imul
fdivl
xchg
je
push
and
push
nop
mov
and
jbe
add
dec
xlat
in
pop
inc
mov
or
push
in
push
negl
loop
push
and
or
lcall
xor
dec
xor
cmpsb
sbbl
dec
test
mov
jbe
fisubl
sbb
jns
ds
mov
aaa
cltd
add
or
lret
movsl
jb
cmp
and
lcall
jns
and
test
fcmovnb
mov
sub
adc
lods
jecxz
sarb
cld
int
inc
lcall
jbe
and
pop
add
stos
pop
mov
push
xor
and
pmaddwd
mov
in
ret
inc
sub
aaa
or
mov
push
data16
mov
mov
xchg
xchg
push
xchg
jp
cmpl
xchg
and
inc
xchg
jb
setae
ds
mov
bnd
xchg
fwait
dec
pop
mov
enter
pop
shll
or
test
mov
mov
int
jb
cld
and
and
mov
popf
loop
jp
mov
scas
jo
out
mov
mov
int
and
arpl
mov
jo
test
in
or
mov
cmp
push
fdivr
xor
jecxz
dec
pop
cmp
cmp
push
aam
mov
and
push
sub
lods
stos
movsl
test
sub
and
jmp
jmp
or
adc
push
add
sbb
and
dec
jb
jnp
xlat
jae
pop
arpl
rorb
or
mov
add
xchg
xor
and
add
sub
add
mov
call
mov
cs
inc
clc
xor
fisubrs
nop
into
push
mov
push
push
mov
inc
stos
icebp
out
or
or
cmc
add
push
testl
push
pop
repz
rep
fcmovnbe
cld
aaa
call
fbld
icebp
push
cmp
ja
cmpsl
push
inc
inc
fcmovbe
aaa
sarl
jns
insb
push
sbb
push
insb
xchg
fcomps
into
mov
pushf
cld
xor
sub
dec
xchg
push
stos
scas
adc
sub
adc
pop
push
rcll
xor
fisttpl
push
jbe
jnp
shrl
stc
xor
cmp
aam
xor
lahf
das
in
sub
add
mov
fldt
xchg
push
rorl
xchg
sarb
mov
lret
es
btc
movlps
adc
or
insb
pusha
jns
jecxz
mov
in
fs
imul
xchg
pop
xchg
aam
loope
fucomip
adc
fldcw
pop
imul
imull
out
adc
mov
dec
sbb
jge,pn
xor
xchg
mov
lcall
subb
mov
jge
adc
jmp
jno
mov
frstor
mov
pop
jle
les
roll
or
xor
pop
and
adc
cmc
mov
xchg
push
jecxz
or
pop
imul
lods
insl
mov
fwait
rorl
es
je
pop
roll
stc
jne
int3
lock
jecxz
or
pop
pop
xchg
jl
fldl
loope
mov
mov
fidivrs
dec
adc
es
clc
or
dec
repz
add
les
into
adc
loopne
ljmp
mov
pop
cmp
cld
inc
and
repnz
sarl
jecxz
and
test
xor
jnp
fldl
lea
xchg
icebp
adc
sbb
ret
test
xor
mov
filds
push
mov
push
rol
nop
add
and
pop
mov
int3
mov
dec
inc
aas
mov
scas
idiv
notb
cmpsl
out
sarl
popa
popa
cwtl
xchg
mov
in
xor
sbb
or
jne
jno
incl
movsb
mov
sbb
pop
scas
scas
scas
cmc
xor
xor
add
imul
lcall
lods
call
pop
add
clc
scas
mov
ja
sub
adc
jg
nop
sbb
aam
lea
xor
jge
or
add
movsb
jb
add
lea
dec
popf
shll
lods
or
mov
mov
mov
movsb
call
js
aas
dec
out
outsl
fdivl
mov
fwait
cld
inc
std
cmp
mov
imul
mov
pop
ds
sahf
xor
or
shll
cmpsb
xchg
xor
push
mov
test
xchg
sbb
lods
jbe
mov
dec
jmp
decl
in
jno
and
fimuls
add
nop
mov
shlb
add
loop
and
xor
sbb
lods
cmp
je
mov
cmp
jns
cmp
cs
push
sbb
aad
leave
aad
andl
aaa
cmp
dec
out
aad
fsubs
push
push
test
ficomps
ds
repz
fistl
daa
hlt
test
sbb
stc
and
sbb
xor
jecxz
stos
test
xchg
movsl
loop
jecxz
mov
mov
add
sub
cmp
mov
repnz
insl
cmpsb
mov
or
xchg
push
scas
jp
ret
push
xchg
add
cmp
int
popa
insb
dec
ss
aam
jns
add
repz
xor
adc
pop
pop
push
and
sahf
pushf
outsb
cmpsb
jb
lods
sbb
fwait
jae
adc
wrmsr
pop
pop
inc
push
out
dec
cwtl
call
cmc
in
and
ss
in
shll
int3
dec
sbb
loop
ret
sbb
das
push
and
mov
gs
out
fldl
mov
adc
push
repz
es
push
push
iret
fs
out
jae
decl
push
or
or
cmp
sbb
lret
lahf
add
inc
ficomps
jno
push
xchg
xor
mov
push
fdivrl
ret
cmp
push
and
dec
stos
xchg
mov
test
mov
fwait
daa
jo
ret
stc
imul
mov
stos
mov
popf
sbb
insb
inc
movsb
pop
xchg
leave
imul
cwtl
scas
hlt
insl
icebp
lds
sbb
add
fwait
jae
rolb
movsb
shrl
mov
mov
insl
mov
out
pusha
mul
jno
fidivl
inc
pop
xor
xchg
jnp
out
lds
pop
je
outsb
dec
arpl
cmp
mov
daa
xor
mov
mov
je
jns
addb
addr16
mov
sub
imulw
out
sub
lcall
in
cld
pop
sbb
leave
push
sbb
mov
push
sub
mov
xchg
adc
ss
out
inc
ret
cltd
mov
or
push
dec
daa
jp
inc
jb
xor
pop
or
fldt
mov
loopne
cltd
call
movsb
jne
sbb
cmp
add
ret
cli
stos
lds
cmp
add
and
mov
add
pushf
or
push
arpl
inc
movsl
js
push
pop
add
or
addl
or
adc
lret
outsl
push
les
idivl
into
movsb
data16
loop
push
inc
in
clc
sub
out
fwait
leave
div
push
fs
orl
or
das
aas
sar
outsb
dec
jnp
aad
cmp
xchg
clc
dec
pop
and
push
mov
sub
enter
rcrl
mov
cltd
push
frstor
or
jns
stos
ret
inc
movsb
xchg
in
gs
push
adc
dec
shll
loopne
ret
arpl
outsl
xchg
mov
sbb
fbstp
shlb
pushf
loop
pop
add
push
addb
add
push
pop
rcrb
enter
mov
repnz
cli
push
jne
pusha
cwtl
ds
adc
loopne
xchg
imul
dec
xor
jg
out
add
call
pop
imul
adcb
ret
and
xor
xor
fsubrl
lcall
xchg
cs
cmp
cwtl
ljmp
jno
addr16
insb
lds
xchg
fdivl
dec
push
fmul
mov
sahf
adc
negb
lods
dec
sub
leave
and
cltd
out
jecxz
mov
xor
pushf
dec
adc
sbb
push
sahf
xor
mov
daa
mov
sub
xchg
dec
addr16
push
mov
cmp
shrl
fcomps
sub
add
out
mov
or
xlat
add
neg
int3
xor
insl
lds
fnsave
cmp
pop
ss
clc
loope
xchg
or
ja
enter
imul
and
scas
stos
ret
arpl
adc
ja
add
dec
cmp
adc
test
test
mov
xchg
xchg
sahf
mov
jae
inc
xchg
and
cmp
fsubrp
das
pop
mov
into
leave
xchg
sub
insl
leave
lods
lea
dec
mov
xor
mov
mov
ljmp
imul
adc
jg
addr16
stc
fiadds
lcall
mov
nop
pop
jae
mov
or
push
sub
mov
xchg
xchg
mov
fists
pop
add
cmp
push
decb
hlt
add
aaa
mull
movb
dec
call
lds
pop
mov
daa
inc
sub
sti
mov
je
lret
sbb
jmp
fldl2t
imul
mov
daa
in
or
adc
nop
rolb
pop
cmp
and
fidivrl
pop
push
jbe
lods
mov
cmc
push
xor
imul
bound
outsl
in
inc
mov
imul
push
out
insb
lcall
lds
xchg
leave
adc
aam
xor
pop
mov
sub
push
cmp
mov
call
enter
je
sub
cmp
mov
pop
mov
cmpsb
ret
loope
stos
mov
cmp
push
iret
push
in
pushf
movsl
arpl
mov
dec
xchg
cmp
mov
push
mov
mov
mov
push
aas
xor
das
mov
jne
mov
jl
xchg
mov
add
xchg
into
sti
addr16
push
add
popf
enter
xchg
cmp
mov
pusha
dec
ret
test
insl
mov
lahf
dec
pop
sbb
repnz
daa
jnp
pop
ljmp
dec
jp
lcall
rcrl
imul
mov
adc
out
mov
pop
jae
in
outsb
pop
push
cmpb
cli
mov
outsb
pop
std
lret
and
add
popf
outsb
fcomps
addr16
movsl
xor
add
pop
adc
mov
adc
pop
das
stc
popf
dec
inc
push
mov
mov
insb
imul
mov
inc
jle
std
cmc
fwait
cmp
loop
push
int
cmp
xchg
xor
call
mov
loopne
adc
push
enter
in
inc
arpl
in
repnz
and
and
inc
in
fmuls
dec
adc
jecxz
pop
iret
mov
pop
lcall
push
dec
stc
cwtl
je
cmp
das
test
jbe
or
decl
or
rol
ljmp
testl
dec
pop
cmp
xchg
das
addb
adcl
sbb
lods
mov
pop
outsl
jnp
lahf
jns
ds
jbe
jbe
pop
sub
into
or
sahf
mov
cmp
xchg
in
pushf
mov
or
push
fbld
aam
xor
lea
adc
sub
mov
iret
jecxz
inc
lret
pop
mov
mulb
push
fisttpl
hlt
dec
pop
adc
cmpsl
cwtl
push
mov
add
jp
xchg
jle
sub
popa
cmc
repnz
test
cmp
push
inc
faddl
es
cmpsb
dec
pusha
adc
in
dec
dec
cmp
inc
int3
jb
dec
clc
ret
lods
jae
pop
sbb
lret
ljmp
imull
pop
call
shrb
das
dec
fs
jnp
ficoml
sub
ror
nop
je
push
loop
cld
jb
and
pop
aas
pop
fs
ss
mov
pop
in
push
xchg
jo
push
into
push
icebp
popf
sarb
pop
xor
mov
test
xchg
xor
pop
sub
cmp
jge
sub
incb
mov
cmp
clc
inc
bound
ret
inc
daa
jnp
pop
loopne
pushf
xchg
shr
inc
push
fisubrl
das
loopne
iret
scas
xchg
scas
push
ret
pop
pop
or
jg
sti
mov
sub
jns
mov
add
mov
outsb
mov
out
jbe
pop
in
xchg
mov
out
mov
aaa
mov
xchg
and
aaa
leave
sbb
mov
mov
or
push
sub
inc
pop
int
xchg
and
push
pop
test
mov
add
rcll
xchg
outsb
fcompl
inc
push
sub
jns
pop
call
addr16
sub
ss
imul
push
push
push
inc
cmp
dec
pop
cmp
fildll
lahf
push
mov
sub
pop
rcl
dec
and
jae
pop
mov
pop
cmp
push
jnp
mov
sti
aaa
push
fwait
or
sahf
xchg
dec
mov
ds
and
lcall
insl
push
ds
cmp
js
enter
fidivs
mov
sti
pop
or
sub
mov
das
pop
inc
sbb
data16
mov
pusha
enter
mov
fldenv
push
add
or
xor
pop
outsb
cmp
ret
inc
pushf
add
repz
cmp
push
mov
xchg
xchg
sahf
aam
push
xor
jo
mov
stos
aad
cli
mov
adc
push
addl
aad
fsubs
push
inc
sarb
pop
inc
jae
popa
jns
hlt
xor
dec
xlat
ret
add
cli
testl
dec
cs
and
fwait
mov
xchg
adc
add
mov
lea
dec
xchg
pop
mov
shlb
aad
sbb
pop
loop
pop
inc
adc
in
ja
lcall
mov
and
arpl
roll
faddl
ficoms
out
fsub
mov
cli
or
jne
es
pop
pop
or
lahf
rorb
and
std
push
or
dec
in
ret
ss
inc
xlat
iret
lahf
scas
aam
cmp
xor
lods
js
aad
sub
je
inc
sbb
pushf
fisttpll
sti
xor
movsb
lret
mov
or
mov
enter
fwait
sbb
rorl
pop
cmp
cmp
outsb
das
mov
cmp
pop
shl
test
mov
les
and
lods
or
and
dec
lds
stc
ds
jns
loopne
fnstcw
ds
call
testl
jge
xchg
ret
dec
pop
sub
scas
divl
cmp
sti
mov
mov
int
cmc
aam
mov
orl
adc
incb
xchg
pop
fsubp
add
dec
mov
aad
mov
fisubs
sahf
jle
sbb
iret
mov
mov
sbbl
sub
rcll
jo
aaa
and
insb
mov
xor
cmpsl
xchg
inc
xor
mov
leave
pusha
imul
ljmp
jle
shlb
mov
loopne
hlt
outsb
lret
das
and
or
pop
xchg
sub
push
sbb
enter
sub
daa
cli
mov
xchg
cmc
ss
cmp
in
in
pop
mov
iret
sbb
scas
inc
jne
or
mov
shr
clc
sbb
ss
into
testl
inc
sbb
imul
push
sub
hlt
je
pop
jno
repnz
push
add
enter
add
stos
pop
std
xchg
pop
scas
sub
int3
xchg
mov
inc
arpl
mov
or
add
scas
nop
stc
pushf
lret
fimuls
adc
in
add
outsl
xor
cmpsl
movsb
mov
adc
mov
pop
das
or
aam
hlt
test
mov
adc
decl
add
push
in
pop
test
fisttpl
sbb
and
js
cmp
aad
lock
mov
adc
out
jnp
xchg
fstpl
aad
inc
cmp
sbb
inc
cmp
pop
movsb
dec
es
adc
inc
sub
push
sub
add
gs
stc
cmp
clc
shrl
sti
mov
pop
movsl
xor
jno
aaa
setae
sbb
rorb
and
jle
xchg
movsb
mov
pop
lds
add
pop
push
pop
rcrl
pop
xchg
inc
sbbb
mov
in
inc
mov
test
leave
xor
fstpl
js
cld
mov
cmp
jmp
sti
cmpsl
xor
mul
jno
insb
dec
mov
mov
jns
and
jg
cmp
addl
loopne
pushf
and
mov
pop
frstor
cmp
jbe
push
js
imul
add
xchg
sub
dec
aad
bound
mov
pop
lods
pop
fstl
xorb
push
mov
pop
mov
shr
rol
popf
ds
cltd
dec
test
mov
add
imull
push
js
fcom
mov
mov
jb
mov
stos
rcll
and
daa
lcall
scas
loopne
mov
cmpsb
andl
test
iret
test
sbb
or
xchg
sub
stos
lods
cmp
fldt
lret
cld
dec
jmp
jmp
ficompl
jne
shrb
scas
lock
jb
sarb
xor
fisubrl
lret
in
les
loop
jns
sub
loope
push
frndint
pop
fistps
lcall
popf
aas
cmp
inc
or
adc
rcl
or
sbb
sub
xchg
outsb
test
popa
loop
xchg
mov
or
arpl
test
lret
jge
sub
fs
sub
or
mov
notb
mov
adcl
jae
mov
sub
fwait
cmp
sub
cld
outsb
sbb
popf
test
les
sbb
loope
adc
pop
sbb
call
aam
sub
push
inc
enter
mov
call
inc
mov
adc
jne
movsl
outsl
mov
cli
inc
insb
adc
or
leave
dec
xchg
popf
pushf
sub
and
or
andl
addr16
test
mov
sub
imul
insl
xor
into
pop
cmp
dec
cmp
addr16
mov
mov
or
mov
jnp
dec
cmp
cmp
sbb
or
popa
js
mov
loop
scas
dec
pusha
dec
jmp
lods
pop
or
fxch
cltd
xor
push
cltd
inc
sbb
mov
fwait
pusha
inc
iret
fstpt
rolb
cmc
repz
mov
scas
or
insb
fbld
popf
inc
icebp
test
dec
mov
in
add
les
inc
test
push
insb
dec
aad
adc
fcomps
push
packssdw
jp
jne
insb
outsb
outsb
ret
sub
adc
test
lds
mov
bound
push
test
jno
push
rcrb
pusha
push
icebp
data16
sub
or
pushf
test
ss
test
out
out
inc
aaa
fxch
pop
push
mov
mov
lret
out
jp
testl
in
lea
sbb
movsb
mov
mov
sti
sub
cmp
aaa
mov
and
mov
shlw
stos
loopne
add
pop
clc
shr
mov
jmp
dec
pop
fisttps
pop
or
or
in
mov
repz
ret
pop
pushf
cmpsb
ret
mov
call
pop
ret
or
ret
inc
mov
repnz
or
loopne
jge
arpl
inc
rcr
cmp
jno
arpl
push
lahf
mov
out
xor
inc
pop
push
subl
inc
fists
xchg
cmpxchg
mov
pop
cmc
std
jmp
or
stos
dec
mov
lahf
pop
jnp
sahf
movsb
mov
sbb
cli
lds
scas
rolb
dec
movsb
or
lret
pop
cmp
idivl
add
dec
inc
jno
jbe
out
movsl
mov
imulb
cs
add
mov
sbb
push
push
push
xor
lahf
mov
cmp
out
mov
nop
push
aam
ficoml
das
inc
mov
jnp
push
pop
add
aas
nop
clc
jns
jecxz
dec
dec
adc
cmpsl
dec
ds
mov
mov
add
lahf
mov
xchg
xchg
push
data16
andl
adc
ret
or
out
cmp
mov
negl
frstor
or
push
adc
sub
add
jg
or
out
xchg
mov
bnd
mov
cmp
ds
xor
mov
cwtl
xor
ret
sbb
pop
fiadds
xchg
outsb
xor
and
cmp
cmp
cli
ja
mov
sub
jecxz
jle
and
lret
std
fsubrs
call
loope
mov
jge
lret
jge
xor
or
cmp
sbb
shlb
mov
or
mov
ret
shlb
out
mov
stos
bound
push
sub
fnsave
lods
inc
js
notb
pop
ljmp
fs
test
xor
sbb
scas
mov
aas
sbb
xchg
lods
scas
adcb
out
mov
mov
cmpsl
xchg
or
fwait
mov
lret
push
xor
xchg
imul
shr
xchg
dec
nop
or
pop
sbb
sbb
leave
sub
movsb
xor
add
lret
gs
cld
mov
fwait
nop
in
inc
mov
repz
lods
movsb
cld
lock
test
add
xchg
xor
fldenv
sbb
dec
stos
push
ret
sub
pop
stos
push
mov
jecxz
lea
adc
es
jb
mov
arpl
popa
or
pop
xchg
mov
lcall
and
stc
and
xor
ss
cs
data16
sbb
jo
xor
inc
cmpsb
add
ljmp
scas
pushf
mov
aas
outsl
pop
adc
fs
cmp
xchg
stc
and
ret
mov
xor
and
in
test
pop
push
popf
push
imul
xor
scas
xchg
pop
aas
imul
clc
gs
mov
add
incl
repz
cltd
in
rolb
js
mov
push
jecxz
and
or
stc
jno
enter
xchg
fiadds
sbb
inc
add
lods
shlb
movsl
inc
jb
xlat
into
arpl
push
cmp
jmp
and
lods
in
bnd
movsl
cmp
mov
push
push
sbb
in
cmpsl
push
movsb
push
lahf
rcl
push
les
jg
nop
inc
daa
insl
or
jnp
repz
in
inc
jno
push
inc
xor
mov
fs
add
dec
pop
outsb
pop
mov
stos
xor
nop
leave
aas
adc
dec
cmp
pop
jle
dec
mov
jmp
fistps
pushf
cmpsl
rorl
mov
sub
adc
jne
push
xchg
rclb
dec
insl
les
sub
sarl
std
sti
inc
push
addr16
xor
sbb
ds
arpl
inc
xor
sub
adc
int3
push
data16
icebp
in
das
cmpsl
ret
in
testl
jl
loopne
inc
out
dec
jbe
xchg
loopne
ljmp
add
xchg
leave
xor
adc
outsb
hlt
bound
rcr
push
inc
cmp
sarb
les
and
out
outsb
clc
inc
add
push
ds
pop
dec
testb
xchg
iret
pop
ljmp
cltd
pop
mov
dec
push
outsl
cmp
ja
xor
adc
xchg
push
vmwrite
fisttpl
and
sbb
jge
push
test
push
push
mov
mov
cmp
add
ret
cmc
jbe
pop
shrb
mov
mov
nopl
insb
stos
cmpl
ret
popa
cmp
shrl
into
or
repnz
xlat
jg
pop
add
inc
insb
jge
icebp
divl
pop
pop
in
jnp
cmp
shlb
std
mov
jge
pop
mov
out
lock
jmp
mov
out
dec
xchg
sbb
popf
pop
popf
lds
shl
in
fidivl
mov
sahf
adc
cmp
ret
jle
dec
inc
pop
fdivr
movsl
jg
imul
shll
popa
movb
popf
lret
aas
and
cmp
lret
mov
ret
popa
mov
and
lock
mov
aam
test
data16
pop
xor
call
mov
ja
add
jnp
mov
cmpsl
cwtl
pop
mov
inc
xchg
mov
fists
xchg
inc
xchg
aas
out
push
mov
xchg
sbb
sub
arpl
cmp
cmp
push
pop
jae
sub
push
clc
xchg
push
mov
push
mov
in
mov
push
in
jle
xchg
sahf
or
mov
xor
cmpsb
jbe
and
lods
mov
clc
xchg
iret
fcoml
aaa
hlt
test
dec
xor
pop
mov
decl
daa
mov
xor
sub
cmp
mov
mov
repnz
scas
jne
loopne
xor
in
push
outsb
mov
dec
nop/reserved
imul
mov
ret
and
xchg
adc
mov
mov
out
ljmp
subb
cmp
ss
cmp
in
enter
clc
inc
and
pop
mov
mov
mov
dec
xchg
test
inc
incb
mov
mov
sub
add
push
cmp
fs
out
movsb
shlb
ja
xor
xor
mov
lret
and
scas
into
ror
hlt
mov
cmpsl
mov
xchg
fmulp
ja,pn
es
inc
mov
cwtl
or
fbstp
nop
and
sub
aaa
out
dec
sbb
xor
jnp
cli
ret
cltd
ds
inc
mov
or
lahf
mov
hlt
jge
or
imul
sub
fisttpl
mov
je
pop
lea
pop
in
sti
xor
xchg
mov
pop
addr16
cmpsl
sarl
iret
adc
sub
repnz
rorl
pop
imul
xchg
lds
sub
dec
pop
inc
inc
sbb
loope
ss
xor
nop
pop
cwtl
sbb
inc
adc
push
inc
cs
bound
fistl
push
push
jbe
imul
dec
in
adc
icebp
jl
ljmp
push
scas
cwtl
mov
push
dec
inc
mov
inc
or
push
pop
mov
or
adc
cmp
push
jle
xchg
dec
cmpsb
or
xchg
push
mov
aad
orb
add
mov
ljmp
into
xchg
mov
sarb
mov
mov
push
jg
jp
mov
sub
out
sub
aas
mov
test
fsubp
push
jb
cli
ucomiss
sub
and
push
lgs
or
pusha
imul
sbb
aaa
shlb
sub
adc
data16
mov
bt
pop
out
xchg
mov
mov
test
pop
mov
fisubs
stos
out
cmpl
cmpsl
dec
jp
pop
and
cli
dec
sbb
pop
mov
cmp
out
inc
jmp
cmc
clc
adc
fdivrs
adc
cld
add
aaa
gs
mov
jns
cmp
jl
sub
pop
cli
push
ja
xchg
push
dec
ret
andb
fwait
cld
scas
sahf
or
push
in
pop
shlb
repz
jecxz
sub
popa
push
xor
aam
aas
pusha
inc
test
imul
rclb
movsl
add
dec
das
loopne
mov
mov
scas
xchg
xor
sbb
das
add
ja
imul
fadds
sar
popf
scas
xor
xor
and
sbb
xchg
cltd
or
and
jge
ret
insl
adc
fdivrs
loope
leave
inc
jno
subl
mull
ss
inc
shll
pop
repnz
aam
adc
xor
dec
mov
shlb
lods
xchg
out
cmp
inc
stos
pop
cmp
hlt
int3
jle
mov
xchg
cltd
mov
adc
loope
icebp
test
lock
pop
dec
jo
sub
push
xchg
cmc
subb
daa
mov
rolb
scas
xchg
inc
push
in
pop
xor
dec
mov
ss
sub
arpl
leave
jl
subl
repz
cmp
shll
fsub
shrb
int3
pop
mov
out
inc
cmp
sub
out
cltd
or
cmp
movb
sbb
insb
pusha
jb
cmp
stos
add
push
jge
add
xchg
imul
jbe
sbb
inc
ljmp
scas
add
sub
popf
test
lea
sahf
dec
push
mov
daa
dec
push
lods
ret
arpl
dec
sbb
jle
sbb
popa
mov
andl
gs
bound
ret
sub
daa
xor
fsubr
ret
xlat
shrl
sbb
cmpsb
es
ss
jle
das
movsb
push
mov
jo
out
cli
sbb
and
xchg
test
mov
aam
insl
jbe
xor
out
jl
mov
arpl
inc
push
cmp
push
repz
mov
add
out
test
lret
sub
imul
mov
push
xor
repz
push
imul
add
sti
xacquire
negb
enter
or
pop
gs
cltd
test
add
mov
adc
sbb
call
das
outsb
inc
loopne
mov
shlb
aas
xor
xor
mov
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
pop
test
aas
pop
jp
xchg
test
lcall
push
cs
lds
mov
adc
xchg
cs
and
scas
loope
xchg
insb
cmp
data16
cmp
sbb
js
mov
mov
add
into
push
roll
les
jb
fs
ror
loopne
pop
subb
scas
jae
cld
loopne
or
cwtl
cmpxchg
pop
addr16
jno
aaa
enter
ja
push
pop
movsb
fimuls
push
xchg
pop
and
shlb
sub
xchg
and
push
in
sarb
int
dec
sub
rcrb
cmp
bound
js
inc
xchg
sub
lds
lret
adcl
pop
mov
dec
adc
testl
cltd
xchg
in
push
jge
inc
or
nop
ret
or
sbb
jmp
jmp
pop
aas
shlb
fadd
pop
push
add
into
mov
xchg
dec
aad
gs
repz
repnz
inc
cmpsl
mov
pop
cmpsb
or
sbb
push
aas
enterw
mov
loope
loope
push
scas
sub
test
iret
jl
ret
in
addr16
stc
mov
adc
and
push
addb
sbbb
stc
fnstcw
rorb
mov
leave
push
lock
pop
fsub
jle
cmp
inc
sbb
or
and
orl
jl
sub
jl
sarb
lcall
mov
mov
imul
and
sarb
daa
nop
lcall
mov
fwait
adc
out
and
xchg
and
les
fwait
dec
cmp
pusha
fcmovne
push
cld
mov
lret
das
sti
mov
dec
pop
push
popa
adc
inc
jo
fstpl
pop
icebp
into
pushf
std
pop
mov
stos
push
xlat
push
in
add
mov
sub
fs
add
jb
xchg
mov
iret
loopne
negl
xor
scas
or
imul
add
mov
push
lds
jg
lahf
shll
fsubp
xchg
outsb
dec
xchg
add
cmpsb
nop
fsubs
sub
dec
imulb
jnp
cmpsb
pop
cltd
add
mov
mov
stos
iret
int3
jecxz
add
xor
mov
xor
pushf
and
xchg
loope
cmp
pop
outsl
inc
or
mov
or
movsl
pop
push
rclb
gs
inc
js
mov
add
cmp
filds
aam
hlt
hlt
add
jp
xor
xchg
loope
push
jb
lret
js
hlt
stc
push
xor
ljmp
push
sub
dec
jecxz
adc
or
and
js
push
dec
xor
loopne
js
popa
in
jae
aam
jmp
push
mov
or
test
or
push
sub
mov
inc
jne
inc
sub
mov
rorb
cmc
cmp
mov
push
sub
aaa
je
mov
mov
add
push
pop
pop
inc
or
orb
mov
hlt
add
fs
lret
insb
ret
mov
stc
xchg
cli
test
lods
sahf
aas
dec
rcll
pop
sub
push
and
sub
scas
add
into
mov
jg
mov
aam
sbb
aas
imul
sbb
test
mov
cmp
rcrb
stc
loop
push
loope
rorb
andl
arpl
addr16
pop
rolb
xchg
mov
decb
push
roll
mov
mov
repnz
inc
out
add
jno
mov
mov
sahf
push
cmp
pop
jns
jecxz
popa
dec
int3
enter
pop
sbb
xchg
out
jns
pop
jbe
repz
xchg
lock
fnstenv
in
mov
sub
hlt
ds
jmp
or
inc
shll
and
test
and
push
shlb
orb
dec
or
pop
xchg
adc
inc
xchg
mov
inc
xor
sbb
test
push
xchg
xchg
xlat
xchg
sub
xchg
movsb
lock
mov
aam
sbb
out
aas
xchg
in
add
ljmp
push
sub
out
popa
dec
and
dec
pop
pop
mov
mov
mov
push
dec
rcrl
test
in
scas
gs
add
and
scas
mov
mulb
jae
out
fistpll
sbb
sub
sub
xor
fildl
mov
jp
dec
hlt
sti
xor
and
aas
in
movsl
out
and
sbb
sbb
into
pop
fldl
imul
movsl
in
inc
push
xor
inc
sbb
leave
popl
inc
stos
pop
push
sbb
in
mov
pop
inc
aam
push
dec
jmp
sub
aad
mov
adc
lret
sbb
sub
mov
arpl
ss
pop
test
push
daa
lcall
lcall
out
rcl
nop
adc
or
sbb
xor
andl
jl
mov
stc
loop
pop
leave
mov
and
jl
jecxz
sbb
mov
xor
add
mov
stc
aaa
lea
push
roll
cld
dec
sbb
mov
imul
push
loopne
xor
adc
sub
pop
sbbl
mov
pop
das
mov
and
int3
loop
jo
sbb
sahf
or
mov
cld
ds
loopne
ljmp
jnp
push
xchg
dec
push
pop
adc
dec
nop
sub
int3
lret
sbb
push
sti
mov
leave
sub
outsl
inc
ljmp
jnp
mov
fcompl
rcrl
data16
inc
push
addb
dec
shlb
mov
cld
rclb
xchg
inc
adc
adc
adc
push
ret
push
sbb
pop
mov
push
push
push
xchg
jg
pop
mov
xchg
xor
cmc
xor
movsl
mov
sbb
push
push
loop
fbld
movsl
in
gs
lcall
dec
pop
out
lods
mov
sbb
dec
adc
ss
pop
fwait
dec
std
ss
scas
push
mov
mov
sub
lods
shr
imulb
push
pop
clc
xchg
in
push
popa
add
and
or
test
add
fucomi
sbb
xchg
push
adc
rclb
lahf
es
hlt
aam
mov
shl
sub
push
push
xor
ljmp
out
pop
mov
mov
inc
cwtl
data16
cmpsb
cltd
hlt
xchg
loop,pn
sbb
movsl
cli
out
push
js
jmp
push
pusha
jb
psubd
adc
addr16
mov
add
outsl
ss
fsubs
sbb
out
sub
iret
flds
shl
gs
sbb
stos
mov
cmpsb
sbb
ret
out
imul
bound
cwtl
ljmp
lcall
jmp
mov
lds
xchg
lcall
mov
inc
and
cmp
fcomps
jl
mov
push
fbstp
mov
pmaxsw
enter
mov
push
je
stc
loop
stc
les
jns
mov
les
out
test
enter
adc
push
ret
nop
popl
or
xor
stc
mov
cs
into
mov
adc
mov
fs
xchg
inc
adc
into
ror
adc
rcrl
insl
dec
outsl
lock
cmp
imul
imul
jmp
cmp
shrb
ljmp
insl
xor
or
cli
test
shll
ljmp
pop
fcmovbe
fcom
push
enter
sbbb
popf
das
mov
jo
insl
rcrl
sub
fdiv
mov
cmpsb
fisubl
mov
cld
cltd
xor
mov
ja
add
pop
cmp
mov
rep
popf
or
cmp
dec
cwtl
fstpl
adc
xchg
rcll
in
movsl
dec
jl
jle
pop
movsl
sbb
mov
cmp
sbb
dec
mov
mov
xchg
repz
icebp
fsubl
pusha
xchg
lods
popf
or
nop
xlat
out
or
push
dec
stos
movl
aaa
fs
mov
adc
bound
popa
xor
xlat
loop
fsubr
aam
add
and
repnz
in
je
es
mov
xchg
jne
add
bound
pushf
shll
push
mov
sub
arpl
push
arpl
je
jl
test
ss
or
pop
jnp
ljmp
insl
xchg
adc
out
dec
adc
and
pop
mov
in
in
xor
sbb
xchg
push
pop
mov
cld
cmp
repz
es
nop
das
dec
repnz
pop
xchg
insl
fcom
add
insl
push
in
aaa
jmp
jno
loop
lahf
push
cltd
xchg
mov
or
push
adc
mov
call
subb
in
push
aam
outsb
lret
and
pop
jl
jecxz
mov
jb
ds
aaa
leave
mov
or
push
notb
pop
sub
scas
jecxz
push
pop
lock
ja
mov
imul
jmp
mov
jno
call
xchg
xchg
sub
stc
or
clc
jbe
fistpl
fiadds
pop
and
pop
es
fisubrs
xor
push
orl
push
jbe
loopew
adc
ds
jns
cmpsl
adc
inc
mov
repz
scas
arpl
sahf
xchg
push
inc
sti
lds
mov
sahf
cmp
gs
adc
add
sti
and
shll
push
pop
cltd
es
pop
xor
fstl
mov
out
inc
loopne
ds
push
or
fsub
or
sub
fwait
ja
mov
mov
sbb
loopne
cmpsl
std
xor
sub
mov
iret
push
xor
pop
inc
int3
jmp
xlat
sbb
sbb
sub
sub
mov
inc
or
add
movsl
xor
pop
dec
test
push
cltd
dec
int3
loop
inc
stos
dec
stos
das
adc
ret
mov
push
lret
cmp
mov
test
sub
bound
mov
mov
rcll
sbb
ficomps
ret
fwait
data16
outsl
test
and
int
in
test
jp
outsb
add
lods
or
iret
or
lret
scas
ja
lcall
das
dec
popf
xor
hlt
icebp
xor
ja
sahf
clc
lods
cmpsl
in
lea
sub
in
in
ds
and
push
orl
sbb
test
mov
add
adc
shrb
dec
mov
adc
pop
icebp
iret
sub
pusha
stc
es
leave
addr16
xchg
ljmp
cltd
das
dec
adc
xor
test
bound
test
cmpsb
mov
or
or
outsb
loop
cmp
mov
je
push
cmpsb
cmp
jb
pop
inc
add
add
or
int
into
cmp
in
jne
inc
jl
push
xlat
push
inc
inc
xchg
mov
xlat
addr16
enter
sbb
pop
insl
inc
stc
rorb
pop
xchg
stc
xor
orl
test
mov
mov
adc
push
mov
adc
lret
aam
or
push
mov
pop
sub
mov
fucomi
es
adc
cwtl
cmpsl
in
je
jnp,pn
and
mov
cmpsb
push
arpl
xchg
dec
test
les
xchg
cmp
jo
repnz
sub
xlat
nop
inc
std
dec
dec
mov
sbb
jne
pop
push
xlat
pop
add
cmc
mov
inc
push
repnz
pop
mov
mov
jecxz
adc
xchg
sbb
cwtl
addl
adc
popa
gs
mov
lret
mov
sbb
lods
outsl
out
lcall
sbb
insl
js
insl
ret
stc
dec
mov
and
in
or
xor
call
lods
pop
sub
out
add
or
pop
or
imulb
xchg
mov
jle
xor
lret
outsb
cli
in
push
roll
sahf
jns
ds
add
enter
sbb
jns
mov
ss
mov
aaa
pop
sahf
hlt
sub
xchg
cmp
scas
xchg
pop
scas
clc
fisubrl
loope
sub
cmp
in
test
ljmp
call
shrl
lds
jecxz
mov
xor
fsubl
inc
bound
bound
pop
aam
and
popf
lahf
enter
mov
xor
insl
mov
dec
push
mov
mov
sub
fucomi
jecxz
lods
mov
jecxz,pt
test
cld
into
adc
ja
pop
hlt
es
xor
mov
mov
pop
mov
lcall
mov
xchg
mov
dec
ja
sbb
out
shlb
iret
testb
push
inc
jg
aad
add
lret
stc
mov
sahf
int
mov
nop
dec
and
sub
push
jp
add
cmp
daa
iret
or
xorb
xor
imul
sar
dec
nop
inc
and
push
mov
outsl
cs
shlb
loop
xor
or
out
sbb
sub
fstpt
pop
ja
xlat
negl
fst
fstpl
jns
push
test
jns
mov
jnp
xchg
and
mov
mov
add
mov
aaa
mov
sti
jl
push
pop
daa
pop
cmpsl
mov
imul
rolb
inc
dec
xchg
dec
cmp
jg
ret
push
das
stos
dec
xchg
psraw
in
popf
enter
pcmpeqw
mov
js
sbb
sti
lods
out
cli
adc
pop
add
mov
cmpsl
jg
dec
mov
xor
sub
incb
xchg
movsb
pop
nop
mov
ret
out
call
cltd
jg
sub
ljmp
pop
mov
jge
pop
seta
adc
cmp
push
dec
pop
pop
or
jae
inc
outsb
add
scas
dec
stos
mov
cmp
out
movsl
cli
movsl
mov
cmc
ds
fs
pop
je
cs
push
jp
add
push
xor
aam
frstor
leave
mov
leave
out
sbb
xorl
xchg
sub
insl
cmc
lcall
or
pusha
dec
inc
aad
mov
inc
mov
push
fiadds
sti
popf
mov
jle
push
and
cwtl
adc
out
stos
stc
and
divb
xor
mov
aaa
jne
dec
sub
and
push
pusha
jb
jno
pop
nop
cmp
loope
pop
add
dec
jno
cmp
mov
push
xor
lahf
jno
mov
fnstcw
sub
mov
sbb
sbb
std
out
push
push
pop
mov
push
nop
lahf
movsl
pop
sbbl
enter
popa
pop
insl
lods
adc
adc
mov
sub
push
jo
jnp
sbb
pop
hlt
incl
pop
outsl
push
divl
sbb
cli
js
push
mov
fld
data16
xor
fistl
mov
sbb
push
adc
sbb
mov
aad
loope
or
inc
dec
fisttpll
and
lods
xor
pop
and
out
fisttps
jbe
xchg
and
pop
cmp
push
jb
dec
jb
pushf
testb
pop
imul
push
fnstenv
jecxz
jle
adc
xchg
nop
mov
je
call
and
xchg
mov
in
imul
cltd
testl
repnz
jae
dec
mov
std
cmp
cmpsl
dec
nop
mov
scas
adc
pop
add
jns
mov
xor
mov
add
cmc
fistps
adc
mov
push
int3
mov
mov
rolb
jo
add
test
dec
aas
in
inc
xor
lds
add
or
xor
aaa
inc
xor
sub
xor
sub
popa
push
fld
push
adc
inc
dec
inc
cmpsl
push
sahf
xchg
fldenv
sti
into
xchg
dec
mov
gs
ret
add
lret
lds
jecxz
cmp
lahf
ret
mov
out
std
pop
shrl
popf
jge
call
sub
xchg
adc
dec
pusha
push
insb
push
data16
mov
loop
mov
sti
mov
xor
scas
or
mov
ret
add
adc
jecxz
nop
scas
inc
imul
js
das
dec
cmc
mov
dec
mov
hlt
loop
out
sarl
xchg
lods
shl
mov
push
lods
out
stos
mov
mov
mov
ret
repnz
jmp
incb
xor
cltd
mov
lock
jmp
pop
aas
scas
int3
jecxz
ljmp
scas
cmp
lret
lcall
mov
ss
adc
aam
or
mov
insb
cmc
mov
jae
and
mov
je
jg
cmp
cmpl
xor
pop
sub
mov
xchg
mov
mov
or
jg
jg
pop
cld
add
and
pop
sbb
out
xor
aad
test
lods
push
jns
out
call
jns
inc
idivb
das
out
mov
xchg
lcall
std
xor
bound
popa
enter
mov
lret
and
dec
adc
dec
movsb
lock
dec
rcll
jns
pop
mov
cs
inc
mov
inc
mov
fwait
push
adc
cmc
mov
das
aaa
lds
or
aaa
fildll
dec
cmp
fwait
xchg
lahf
loop
or
pop
and
ljmp
jp
out
fisttps
lea
sub
mov
jb
mov
and
dec
and
xor
inc
and
out
out
popa
xchg
and
arpl
aam
aad
mov
inc
adc
xor
ret
cs
xchg
jbe
fmuls
xchg
or
xor
mov
gs
jp
shrl
inc
imul
or
in
add
in
adc
or
xchg
pop
jp
mov
dec
adc
lods
inc
push
ret
fsub
ljmp
push
fisubrl
sub
add
fwait
stos
jnp
cmp
mov
adcb
mov
mov
fidivl
xchg
loopne
xchg
sbb
sub
or
test
push
js
mov
xchg
or
adc
shl
js
mov
or
ja
sub
mov
aam
ret
lods
gs
stc
mov
pop
xchg
in
imul
cmc
mov
or
sub
mov
inc
push
mov
mov
lret
push
scas
mov
sahf
mov
dec
mov
out
arpl
aam
std
sub
mov
mov
nop
or
push
xchg
repnz
stc
insl
inc
addr16
imul
icebp
pushf
mov
push
add
in
xchg
adc
mov
mov
cmp
inc
sahf
cs
add
sbb
stos
push
test
insb
dec
xchg
in
xchg
cs
fadd
iret
sbb
nop
push
jo
ss
call
jbe
xchg
xor
js
and
push
stc
cmp
fnsave
inc
jmp
popa
icebp
fsubl
scas
into
adc
mov
pop
shl
fldl
sar
adc
cmp
stos
das
ret
xchg
mov
movsb
enter
mov
cld
adc
cmpsb
mov
loopne
dec
dec
mov
les
test
xchg
mov
out
imulb
lret
and
not
and
push
jnp
xorb
push
shl
mov
imul
aaa
loop
stos
ljmp
test
pop
enter
mov
pushl
mov
dec
insl
repz
and
je
daa
inc
faddl
loop
mov
mov
rcl
dec
xor
repz
js
into
and
pop
mov
fsubrl
xor
cmp
inc
cmpb
inc
jnp
and
and
aam
repz
jle
cmp
push
enter
iret
sub
add
daa
jge
pop
addr16
cli
sti
xchg
add
jno
mov
mov
fiaddl
sbb
mov
mov
push
sbb
clc
ret
add
lahf
outsl
xlat
push
arpl
fs
shr
and
lea
cs
xor
rclb
or
mov
sub
jns
cmp
pop
xor
sub
mov
add
outsb
das
push
push
jne
dec
sbb
ret
push
ficoms
cvtss2si
lds
decb
jl
lods
imul
sbb
std
insl
push
xchg
xchg
nop
repz
fbld
or
ds
dec
repz
fs
xor
adcl
test
pop
sbb
adcl
in
and
pop
xchg
icebp
out
leave
testl
and
or
fisttpl
cmp
pop
fwait
les
add
int
and
out
xor
lods
cli
and
ljmp
sbb
xchg
jae
loop
es
sbb
push
pusha
cmp
aad
mov
ljmp
sub
pop
scas
imul
and
icebp
dec
push
pop
mov
mov
ljmp
outsl
dec
rcll
mov
adc
bound
mov
pop
jmp
push
and
sarl
mov
and
popf
sub
ret
cmpl
sbb
andl
fs
scas
pop
mov
xor
ds
out
scas
movl
pop
fdiv
pop
les
enter
jp
fidivl
dec
int
inc
inc
das
in
jecxz
xchg
xchg
push
xor
loop
aaa
dec
lods
mov
sub
stos
flds
mov
mov
adc
lea
xor
inc
pop
inc
cmc
push
mov
imul
in
add
xlat
push
stos
call
xor
lea
xchg
stc
or
aas
call
leave
dec
inc
insb
pusha
loop
stos
xchg
cmp
sbb
mov
iret
das
stc
mov
and
adc
hlt
leave
jne
lods
insl
xchg
sbb
lret
xchg
call
pop
stos
inc
insb
sub
mov
mov
loope
xchg
sbb
es
mov
movsb
jnp
aaa
push
pop
push
rcl
pop
mov
ds
stos
xor
pop
subb
into
andl
pop
movl
mov
divl
fisttpl
cmpsb
dec
test
xor
inc
inc
pop
aad
or
cmp
fdiv
mov
ljmp
stc
xor
scas
cmpb
xchg
nop
sub
pop
andb
jnp
test
iret
cmp
pop
test
call
call
scas
add
xorl
or
or
cmp
fildl
dec
mov
and
xor
jbe
or
sbb
sbb
mov
scas
sub
imull
xchg
scas
fisttpll
sbb
scas
adc
nop
movsl
mov
cwtl
push
in
arpl
aaa
cltd
fmul
lock
xchg
test
push
dec
shll
pop
sub
mov
push
mov
jnp
xchg
test
pop
fsubrl
or
fsts
in
loop
dec
shl
xchg
enter
xchg
shll
aad
xchg
repz
je
movntq
xor
push
add
imul
dec
in
cmp
push
or
and
push
stc
or
fstl
mov
mov
xlat
ret
jge
xlat
push
aas
ja
ret
jl
gs
mov
in
mov
fsubr
stc
adcl
lds
pushf
int3
and
mov
test
jecxz
lock
mov
mov
add
sbb
clc
sbb
aaa
fstpt
inc
or
aas
call
mov
inc
jp
js
push
cli
mov
sub
inc
cmp
xor
mov
mov
lock
stos
and
es
fcmove
fidivs
in
pop
lcall
pop
mov
dec
cmp
repnz
mov
testl
mov
fsts
in
jo
nop
in
push
data16
aad
fnstcw
sbb
in
sarb
cmp
dec
or
push
out
mov
cltd
scas
xchg
mov
imul
cmp
inc
popf
jge,pn
mov
je
inc
lds
push
dec
push
je
and
inc
push
sahf
jae
ret
or
or
loop
in
lock
mov
adc
mov
gs
xlat
fidivl
mov
hlt
lods
aad
xor
fmuls
cmpsl
jns
sub
test
lds
sub
mov
adc
adc
test
lea
shlb
mov
inc
int3
push
mov
push
adc
std
mov
das
sbb
rorl
fldl
xchg
dec
dec
xchg
iret
xchg
clc
cs
negl
xor
cmc
aaa
insl
push
stos
sub
or
addr16
bswap
mov
xchg
mov
xor
daa
rolb
mov
jb
xchg
xchg
add
pop
dec
test
xor
shl
stos
xlat
insb
mov
or
adc
xchg
imul
sbb
dec
or
and
inc
mov
mov
in
mov
xor
arpl
aaa
mov
lods
pop
xchg
sbb
arpl
dec
data16
fstpt
test
jnp
push
out
jg
pop
test
inc
imul
shlb
mov
jecxz
add
ret
mov
test
test
fisttpl
int
adc
pop
sbb
inc
jne
out
dec
pop
mov
movsl
cmp
lds
add
aaa
cmp
cmp
mov
xlat
mov
dec
add
pop
mov
stc
jbe
mov
add
mov
cmpsl
pop
mov
jle
cmp
mov
sahf
mov
jmp
outsl
dec
adc
in
jns
mov
push
test
xchg
repz
inc
mov
aaa
nop
lods
mov
ds
jmp
mov
xor
pop
sub
sbb
popa
push
scas
cmp
pop
xor
jl
add
push
inc
pushf
xor
imul
icebp
jmp
test
mov
leave
xlat
int3
test
fs
jo
repz
inc
and
fs
cmp
lret
dec
sub
adc
repz
imul
out
xor
add
les
mov
and
and
pop
lea
int3
iret
sbb
mov
mov
cmp
ret
adc
test
nop
ss
aad
in
ja
fstp
mov
test
lods
mov
sbb
and
lcall
cmp
lods
sahf
xor
jno
outsl
mov
mov
lods
adc
in
xchg
xchg
cmp
sbb
xchg
aad
addr16
xor
stos
adcb
xor
loop
ljmp
inc
adc
dec
fcmovu
xchg
inc
subl
jl
fwait
cs
pop
pusha
mov
push
scas
in
adc
push
mov
fidivl
js
pop
and
stos
mov
add
xor
inc
scas
cmc
pop
sub
sub
jnp
imul
inc
push
leave
test
cmp
std
scas
cmp
or
pop
and
fwait
push
loop
incl
hlt
cli
mov
adc
mov
mov
mov
pop
stc
jo
insb
add
sbb
test
mov
xchg
or
xor
inc
scas
mov
cs
inc
xchg
and
sbb
fwait
pop
aaa
lock
mov
inc
dec
mov
dec
add
xchg
aad
and
dec
mov
inc
loope
inc
and
mov
loopne
or
mov
sahf
fcmove
or
mov
mov
je
rorb
inc
xchg
loope
inc
pop
in
pop
dec
cmp
push
add
cld
loop
je
mov
cmc
loopne
pop
nop
imulb
mov
rorl
lods
add
pop
or
fbstp
outsw
pop
mull
jo
popa
sbb
clc
mov
jns
fldl
ds
xchg
lcall
adc
das
or
scas
std
outsl
stc
ret
int3
add
movb
rcrl
sub
jecxz
data16
or
pop
div
cltd
sbb
xchg
jns
aam
adc
mov
cld
mov
arpl
pusha
scas
dec
scas
adc
push
add
stos
adc
xchg
pop
add
fsubp
sub
pop
xor
das
lods
cmp
dec
mov
push
jecxz
scas
call
jge
ret
pop
or
pop
dec
xchg
stos
mov
or
popf
add
dec
xor
ja
xchg
push
pop
jno
stc
mov
mulb
sbb
stos
xor
xchg
insb
jb
cmc
cmp
addr16
push
imul
movsb
out
inc
push
aaa
cld
sub
adc
ja
xchg
and
sbb
adc
xchg
dec
pop
ss
dec
dec
sub
lods
fmulp
mov
repnz
enter
inc
movsl
mov
loope
inc
adc
roll
ficompl
and
lahf
insl
das
fistl
in
xor
cs
add
cmc
mov
mov
data16
loopne
mov
xor
dec
dec
in
push
lods
fimull
out
sub
lret
sahf
pop
mov
sub
xchg
dec
inc
insl
xchg
adc
xchg
shll
add
mov
scas
sub
mov
sub
cmpsb
xchg
fsubr
mov
inc
and
lods
movsl
cltd
sti
pusha
mov
jb
mov
add
ja
addr16
push
xchg
inc
je
cwtl
out
das
in
mul
fidivl
in
mov
push
adc
fnstenv
ret
fbld
mov
adc
arpl
adc
into
xor
lds
jmp
adc
loopne
xor
call
js
adc
mov
scas
mov
fs
mov
jae
stos
or
add
insb
sarl
pop
cltd
mov
pop
incb
mov
rcl
inc
cmc
js
add
loope
sub
cmp
xor
push
in
jg
mov
sub
ljmp
adc
cmc
jge
adcb
mov
mov
inc
lock
sub
rorl
int
sub
sub
adc
dec
inc
or
out
cmpsl
jp
aad
inc
dec
out
push
sbb
xor
adc
jmp
mov
cmpsl
and
pop
dec
xchg
ja,pt
xchg
jns
xlat
cmpb
stos
dec
adc
dec
pop
hlt
mov
jl
in
mov
sub
adc
pushf
mov
mov
outsb
ja
out
cld
xchg
add
mov
xchg
fmul
mov
inc
jp
movsl
int3
cmc
pop
add
sub
jae
and
add
stos
cs
mov
testb
mov
int3
jns
xchg
jae
daa
imul
bound
cmp
push
ljmp
adc
pop
in
and
inc
test
and
lcall
les
cld
jo
push
xchg
xor
xlat
jne
jecxz
and
fisubrl
xchg
nop
push
inc
inc
and
ja
out
inc
and
out
xchg
test
ret
pop
pushl
pushl
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
notb
mov
add
jp
push
mov
mov
dec
rolb
xor
pop
inc
stos
in
frstor
pushf
pop
xchg
mov
das
xor
inc
adc
test
pop
mov
aaa
sub
lods
mov
jmp
popa
adc
test
dec
sub
movsl
xchg
jb
mov
mov
dec
fildl
jnp
stc
fs
nop
movsb
jb
outsl
xchg
ds
ret
inc
fdiv
xlat
adc
mov
ret
and
sub
xchg
insw
mov
imul
outsl
mov
imul
lcall
sbb
push
clc
jo
fisttpl
xchg
inc
fistpll
pop
movsl
add
loop
mov
adc
fsubs
out
ljmp
inc
jbe
clc
push
add
dec
dec
cmp
cmp
loope
sbb
nop
enter
and
loopne
cmc
cld
xor
inc
xchg
shl
pop
mull
in
mov
sbb
jb
push
lds
les
mov
add
loop
les
sbbb
dec
push
jo
outsb
and
nop
ljmp
outsl
pop
cmpsb
push
mov
push
mov
mov
dec
bound
cmpsl
push
in
test
push
mov
shl
push
add
in
mov
push
movsl
ja
shr
mov
xchg
mov
lds
mov
or
cwtl
cmp
mov
aam
pop
jp
shlb
cmp
stos
fstps
hlt
adcl
push
sbb
inc
mov
cli
xchg
stos
inc
sbb
bound
or
jns
sbb
cmp
push
pop
xor
xchg
out
sbbl
fists
inc
addr16
push
fsubr
mov
fistpl
lods
lcall
and
sbb
repnz
push
mov
mov
lods
sub
cmp
mov
pop
sbb
lcall
fidivs
push
jp
inc
repnz
mov
dec
dec
mov
aaa
ret
jecxz
faddl
jge
inc
cltd
pusha
mov
popa
cmp
in
in
les
cmc
xlat
js
sbb
pusha
test
push
cmc
pusha
mov
sbb
scas
iret
cmp
ljmp
arpl
loope
sbb
mov
fs
mov
repz
je
fsubr
sti
jg
shlb
sub
fildll
clc
xor
mov
inc
in
sbb
ja
mov
sub
repnz
stos
into
std
shll
jl
push
inc
fldenv
xor
imul
mov
sub
sti
mov
in
xor
iret
outsb
jnp
jle
mov
jbe
push
cmp
jge
stos
mov
push
pushf
pop
mov
push
sub
iret
pushf
dec
or
jmp
gs
cmp
out
or
inc
testb
jnp
push
push
mov
int
shlb
les
arpl
movsb
cmp
gs
ss
push
daa
das
outsl
mov
jb
sub
nop
into
addb
icebp
rolb
push
lock
pop
xchg
out
cli
xchg
jns
mov
pop
lds
pop
test
in
mov
ja
xchg
aas
fldt
out
and
mov
add
cmpsb
ja
xlat
pop
arpl
sbb
dec
cld
jae
push
nop
add
iret
or
aam
mov
in
aad
jl
sbb
mov
inc
mov
mov
imul
xor
adc
cmpsb
or
fisubrs
sub
jecxz
imul
sub
push
test
cmp
insl
and
call
imul
in
test
xchg
xchg
ret
mov
inc
jbe
test
in
sbb
mov
outsl
aam
mov
ret
push
dec
fcomps
inc
out
jo
xor
jg
pop
jae
arpl
aad
jmp
popf
lahf
push
dec
mov
or
xchg
test
add
fidivrl
cmpsb
inc
mov
data16
mov
add
pop
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
add
add
add
add
add
add
adc
add
add
add
push
push
inc
push
sti
insb
repnz
movsb
jo
fstl
inc
cmp
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
