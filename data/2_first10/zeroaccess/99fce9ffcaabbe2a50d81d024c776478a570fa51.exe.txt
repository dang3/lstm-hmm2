push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
and
mov
ja
push
ret
out
xchg
mov
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
fisubs
jnp
cmp
jle
pop
push
lcall
sbb
mov
in
sbb
shll
xor
inc
jecxz
mov
mov
mov
cmp
and
test
push
adcb
and
sub
mov
movsl
mov
push
es
hlt
loop
mov
loope
xor
and
jle
sub
mov
and
dec
sub
dec
lock
mov
push
aad
cmpsb
ret
mov
cmc
ficoms
or
mov
mov
popa
mov
mov
add
xchg
xor
stos
andb
nop
mov
push
mov
je
pop
adc
std
popa
lret
repnz
lods
cld
shl
subl
push
pop
stos
fbstp
xor
mov
cmp
cmp
enter
in
dec
inc
xchg
in
dec
mov
shlb
scas
ljmp
mov
insb
pop
ret
mov
fndisi(8087
rcrl
adc
mov
mov
cmp
mov
adc
iret
mov
rolb
dec
push
loope
push
aam
cld
rcrl
adc
mov
mov
mov
mov
pushf
fistpll
je
add
mov
outsb
loop
xchg
ja
push
aad
sti
orl
pop
jecxz
ljmp
adc
jp
enter
mov
inc
sub
adc
mov
mov
pop
dec
push
sub
pop
sub
pop
sbb
or
data16
scas
aaa
push
insl
pushf
mov
lret
gs
push
push
pop
daa
xchg
adc
je
stos
cs
add
mov
andb
jae
dec
loopne
out
pop
cmc
jg
ss
incl
push
cmc
dec
outsb
pop
add
and
xchg
mulb
rolb
or
xchg
lahf
movsb
jmp
gs
icebp
jle
movsl
inc
test
push
addr16
xor
test
adc
ds
mov
repz
mov
mov
push
push
stos
popa
lret
cmp
lea
pushf
add
lret
adcl
sbb
sarb
xor
add
outsl
lds
insb
int
adc
sub
pop
jmp
pop
mov
fidivrs
loopne
in
mov
cmp
or
jo
mov
pop
and
insl
pop
sbb
les
and
pop
cmc
test
fs
out
xor
xor
addb
xor
loopne
jl
fildll
pop
aaa
pop
call
insb
aad
jae
addr16
pop
shr
add
aad
pop
faddp
or
loope
or
mov
jg
adc
loope
mov
cmp
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
loope
mov
jmp
add
iret
pop
inc
cmp
scas
dec
aas
lcall
push
mov
movsl
pusha
xor
test
mov
rcrb
add
pop
or
or
jns
flds
cmpsl
adc
je
add
xor
lret
fldenv
mov
lods
fiaddl
movsb
xor
aas
hlt
and
in
out
div
sub
mov
mov
mov
mov
adc
push
aam
repz
imul
push
loop
mov
test
movsb
xchg
dec
sub
mov
enter
jnp
sbb
xchg
pop
add
out
dec
xchg
mov
insb
push
iret
psubb
lods
andl
fdivrl
pushf
sbb
jg
ret
adc
adc
jmp
mov
push
outsb
push
inc
push
sub
and
mov
mov
mov
xor
rorl
stos
popa
fsubl
ljmp
push
movsb
add
popa
jp
pushl
pop
pop
lret
ja
mov
movsb
rorb
lret
sub
loopne
addr16
mov
popf
lret
jbe
test
clc
sub
mov
adc
inc
clc
imul
pushf
add
xor
jnp
test
mov
int3
rcrb
leave
gs
jb
dec
cwtl
lahf
test
repz
cmp
shll
xor
and
mov
inc
mov
jle
mov
pusha
dec
xchg
jnp
xor
dec
mov
or
and
mov
lods
add
repz
inc
pop
sbb
movsb
in
lds
jecxz
xchg
lahf
pushf
xorl
cmpsl
sbb
fldl
shlb
xlat
xchg
sub
push
lcall
push
out
mov
ret
add
and
dec
aad
push
xchg
ja
sub
xchg
pop
clc
adc
stos
push
inc
pop
push
pop
outsb
mov
inc
sbb
add
push
fidivrs
out
dec
fidivs
out
scas
pop
out
mov
lret
ret
xlat
xor
lods
cmpsl
or
ret
popa
ss
pop
in
dec
mov
test
sbb
sbb
test
lcall
addr16
or
pop
ja
faddl
out
or
push
test
clc
inc
mov
shl
fstpl
dec
pop
adc
dec
dec
mov
dec
xorb
xchg
ja
mov
rorb
or
mov
sub
loopne
mov
cli
and
cwtl
dec
push
lods
inc
mov
lods
jp
jp
xchg
imul
data16
jne
mov
fsubrs
jns
dec
jge
xchg
jb
test
loopne
std
mov
sbb
jnp
test
cmp
and
pop
sub
orb
xchg
cmpsl
inc
loop
pop
cmp
flds
in
jb
dec
lods
out
leave
or
push
mov
cmp
mov
arpl
jnp
fisttps
push
cmp
aaa
cmp
cmp
jbe
js
mov
out
fisttpll
and
lds
push
les
in
pusha
push
cmp
inc
sub
adc
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
jecxz
int3
mov
mov
roll
xor
mov
outsb
sub
push
mov
lock
daa
and
outsb
pop
es
movsl
rcrl
sub
jle
push
jl
xchg
sub
mov
negb
push
adc
dec
popa
cs
pop
xor
xchg
dec
clc
push
neg
ret
in
movsl
cwtl
fbld
push
je
add
or
cltd
dec
int3
push
shl
adc
scas
xor
js
das
pop
aad
lods
push
adc
divb
xchg
and
cld
pusha
sbb
es
push
pop
movsb
sub
cmp
in
mov
cltd
mov
sbb
sub
stc
lahf
test
mov
repz
das
arpl
loopne
jnp
aad
mov
dec
ljmp
dec
lret
xor
arpl
sub
push
pushf
flds
loopne
adc
or
mov
xchg
scas
outsb
pop
cmp
cmp
daa
fistpl
int
sbb
push
test
cmp
icebp
pop
sbb
xchg
repnz
popa
push
add
jecxz
test
sbb
mov
inc
cmp
lea
insl
insb
ret
fwait
cs
xor
xor
dec
xchg
push
aam
mov
cmc
dec
idiv
add
and
and
push
jp
mov
adc
inc
test
mov
dec
sub
jmp
sahf
stos
aaa
inc
out
lock
dec
inc
andl
out
mov
shl
jmp
dec
aaa
loop
ljmp
pop
add
cmp
pop
pop
pop
push
cmp
ljmp
mov
mov
ret
cmc
out
sarl
mov
mov
das
enter
or
push
test
mov
into
jno
xor
gs
fmuls
mov
shl
movsb
jne
jne
mov
pop
lock
aad
lock
faddl
enter
in
xchg
sbb
xchg
ds
push
mov
fisubs
into
loopne
sub
cwtl
push
fbstp
mov
push
lret
mov
cmp
mov
addr16
outsb
mov
imul
mov
cmp
les
fdivrs
or
or
jl
mov
jg
xor
sub
rolb
and
xchg
or
jge
insl
inc
push
test
dec
cmpsl
inc
and
sub
xor
int
out
inc
fisubrl
jne
xchg
push
pop
pusha
arpl
in
inc
or
pop
jbe
cwtl
mov
cmpsl
pop
je
test
inc
scas
arpl
loopne
out
cmp
popf
fsubrs
xor
mov
pushf
sahf
rolb
push
repnz
call
cmp
jmp
fs
xchg
test
jecxz
fsubrl
stos
aam
insb
push
faddl
mov
lock
mov
mov
add
xlat
sbb
mov
ret
ja
dec
xchg
inc
dec
fdivr
lahf
cmpps
sar
out
in
lds
adc
mov
push
adc
jge
or
clc
shlb
mov
adc
out
cmpsl
stos
sub
cmp
rol
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
cmp
sarb
mov
lahf
push
add
lods
dec
sub
or
lods
clc
and
inc
ljmp
and
mov
sbb
gs
cmp
xor
lock
jp
das
push
push
cltd
mov
pop
icebp
fldl
or
or
testl
or
jmp
add
sbb
mov
push
xchg
pusha
add
shr
xor
mov
cmpsl
test
std
incb
test
mov
shrl
mov
movsb
bnd
imul
daa
fmuls
out
ss
inc
mov
out
xchg
sub
or
pop
mov
inc
gs
push
lret
aam
add
mov
sbb
dec
sahf
mov
in
outsl
inc
pusha
in
push
jmp
int3
push
lahf
fwait
lret
int
lds
arpl
sbb
clc
cmp
int3
xchg
int
pop
xchg
or
pusha
stos
iret
ljmp
stc
xchg
adc
jbe
cmc
sbb
mov
jmp
sub
or
cltd
jl
nop
cmp
dec
lret
mov
sbb
scas
jns
jno
mov
dec
cwtl
movsb
clc
push
cmp
in
icebp
push
push
mov
out
mov
adc
sbb
std
jns
xchg
xchg
push
aad
mov
stc
scas
test
fistps
pop
pop
push
xor
fiaddl
push
jmp
add
pop
pop
pusha
mov
pop
les
xor
das
and
movsl
sub
cmp
mov
adc
adc
imul
fdivrs
or
sub
xor
and
pop
adc
pop
addb
cmc
xor
mov
jne
pop
push
fdivs
sbb
icebp
jae
lds
adc
xchg
cli
cmc
xchg
lret
and
in
stc
sub
or
test
sbb
cmpsl
add
sbb
and
mov
inc
rcrb
movsl
mov
mov
scas
add
dec
push
jne
fbld
mov
call
aad
push
int
inc
inc
and
mov
rcll
sub
sub
push
jge
loopnew
sub
xchg
cltd
arpl
mov
jmp
or
cmp
and
push
cmpl
push
inc
jnp
jb
mov
or
adc
sbb
loopne
mov
into
add
pop
int3
jmp
jg
cmp
push
push
pop
rorl
scas
inc
leave
lods
test
add
js
pop
xor
fs
stos
mov
push
inc
mov
fstpt
data16
mov
jle
test
xchg
add
dec
or
sub
xchg
jl
fdivl
shl
cmp
stos
xchg
punpcklbw
aas
leave
rorl
push
pushf
pop
data16
mov
mov
sti
pusha
in
rorb
insb
xchg
push
int3
add
and
jp
push
cmp
push
imul
fisttpl
std
testb
lret
flds
push
loop
and
cli
jle
mov
push
push
fbld
test
stc
movsl
in
mov
add
add
inc
add
pop
incb
add
dec
test
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
pop
popa
mov
les
xchg
int
ret
cmc
imul
mov
mov
lds
cmpb
adc
xchg
xlat
cmp
aas
pop
ds
jae
in
mov
mov
push
lahf
cmp
cld
imul
cmc
scas
jmp
hlt
pop
jge
cwtl
sub
sbb
dec
lea
aad
ret
jle
cmp
cmp
sub
cltd
push
aad
aaa
push
in
mov
or
addl
jmp
jae
xchg
in
inc
sbb
lahf
dec
movb
clc
push
or
dec
lods
loop
mov
jae
jbe
push
out
roll
mov
xor
push
enter
fistpl
sub
stc
cmc
sbb
push
mov
jmp
scas
cmp
movsb
mov
push
mov
cltd
outsl
dec
dec
add
movsb
cmp
xchg
fs
add
cld
sahf
shlb
arpl
pxor
int3
push
jmp
jnp
sbb
sub
and
jmp
pushl
jnp
jle
std
lss
xor
inc
mov
push
out
mov
icebp
hlt
pop
push
das
arpl
lods
ret
stc
inc
bound
mov
sub
in
mov
jo
jo
lds
std
add
out
or
je
jbe
mov
shlb
cmp
jle
shl
jno
lahf
pop
lret
dec
in
test
fwait
fwait
xchg
addr16
inc
andl
fiadds
scas
and
mov
xor
cmp
fs
push
ja
jecxz
mov
dec
leave
sub
ds
ficoml
push
scas
jb
or
inc
rclb
daa
lret
lret
adc
mov
clc
jno,pt
mov
adcb
int
ret
cmp
mull
sahf
sub
cld
dec
andl
dec
mov
and
cmp
jae
cli
outsb
fdivl
sub
mov
div
loope
xor
dec
loope
xchg
or
int
cmp
xchg
in
sub
addl
dec
mov
fldl
scas
xor
fsubl
cmpsl
push
iret
outsb
xor
mov
push
push
adcb
out
stc
mov
mov
adcl
mov
sbb
lods
sub
adc
mov
sub
sub
and
adc
shll
es
loop
xlat
js
cmc
in
stos
push
adc
out
repz
cs
ja
xlat
std
int
sub
mov
push
mov
lods
push
enter
xchg
pop
cs
mov
cmp
mov
rcr
roll
repnz
clc
xor
subl
aas
fdivrl
ror
shrl
mov
push
loop
pop
xor
pop
xor
lahf
mov
mov
xor
or
and
jl
sar
pop
test
jne
std
inc
pop
test
test
addr16
dec
push
loop
xchg
scas
cmp
cmp
lea
dec
in
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
stos
clc
movsb
mov
les
xchg
lret
mov
push
xor
idivb
jle
lea
mov
aam
push
hlt
cltd
mov
ror
jl
pop
xor
popa
pop
inc
cmp
or
ds
pop
out
push
popa
icebp
sbbl
dec
jmp
cmp
push
push
push
inc
inc
jp
std
inc
cmp
add
out
or
rcll
mov
mov
add
ret
lahf
jb
movsb
outsl
mov
sub
pop
insb
push
add
dec
clc
inc
dec
mov
xchg
sti
ds
test
pop
or
mov
stc
xor
inc
inc
pop
push
add
adc
or
mov
test
mov
fadds
hlt
ret
inc
sub
std
push
lods
dec
popa
push
pop
push
cmp
out
les
fs
push
mov
cltd
pop
xor
clc
jge
mov
orb
lret
iret
aam
mov
movsb
rcr
xchg
stos
out
mov
push
mov
push
and
xchg
lock
and
mov
xchg
mov
push
xor
jecxz
insb
in
pop
fistps
stc
mov
arpl
cmpsb
mov
bound
dec
xor
fistl
js
sarl
jae
pop
sarb
cltd
sbb
jo
or
xchg
add
inc
stos
cmpsb
mov
sub
shl
xor
pop
dec
sbbl
push
fsub
pop
adc
jle
or
cmp
loop
scas
mov
test
out
adc
mov
loope
lods
sarl
mov
xlat
lahf
hlt
adc
rep
or
mov
mov
pop
cmp
scas
and
test
div
push
jns
mov
inc
cmp
movsl
out
mov
cmp
cmp
stos
mov
pushf
adc
jecxz
sub
jge
push
xchg
mov
cmpsl
add
aaa
loope
push
cmp
dec
ljmp
inc
mov
subl
sbb
pusha
inc
mov
dec
xchg
aaa
aas
rcrb
xor
sub
mov
push
push
in
jno
inc
in
scas
sbb
jp
inc
xor
dec
lea
sub
cmp
test
popf
push
call
cli
sbb
inc
jecxz
fsubrl
xchg
mov
xchg
push
jp
stc
xor
jne
lcall
dec
jle
pushf
in
mov
and
mov
inc
xor
jle
cld
lods
sub
cmp
push
popf
mov
shrb
xchg
jecxz
jb
out
addr16
sub
test
rcrb
enter
cs
pop
in
mov
loopne
mov
test
cmpsb
pop
mov
test
loope
insl
xor
add
addr16
lret
lods
jl
scas
ds
or
mov
gs
push
jne
and
ret
cld
leave
sbb
jne
xchg
shrl
gs
in
ret
cmc
mov
xchg
cmp
and
out
out
lret
adc
loop
loopne
adc
mov
icebp
mov
xchg
add
and
pop
sbb
in
push
xchg
fldcw
inc
cli
jle
dec
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fstpl
scas
iret
mov
les
ror
ds
mov
mov
idivl
cmp
mov
pop
inc
xlat
adc
ret
cmpsb
aaa
dec
jge
or
in
xor
jecxz
mov
cs
adc
mov
in
insb
incl
dec
pop
or
and
inc
and
jbe
adc
jecxz
inc
je
cld
push
sahf
jae
cwtl
dec
jmp
xor
mov
imul
xor
hlt
pop
cld
scas
fadd
mov
loop
jge
dec
inc
and
sbb
fisubrs
clc
jne
adc
loope
jg
pop
mov
xor
testb
push
adc
lret
sbb
adc
mov
xor
fstpt
scas
pop
mov
aad
imul
add
sbb
fcomps
shl
push
icebp
repz
and
cmp
cs
and
imul
push
int
insb
xchg
cmp
inc
mov
fs
or
mov
inc
add
out
sbb
push
enter
mov
jmp
xchg
and
cmp
mov
xchg
lods
repz
xor
jno
sub
repz
mov
mov
push
imulb
and
outsb
aad
lods
push
out
add
das
mov
mov
adc
shl
push
xchg
jmp
sbb
jmp
cmpsb
dec
mov
xchg
adc
frstor
movsb
cmp
enter
rcl
in
test
mov
popa
cmpsb
ficomps
add
mov
inc
movb
je
mov
out
jae
pop
cltd
jo
or
dec
cltd
ss
adc
out
cmp
jp
std
pop
add
push
je
enter
sbb
jl
xlat
sbb
xorb
shrb
pop
and
fildl
dec
fsubl
ret
jae
xchg
aad
pop
inc
xchg
addr16
repz
jb
adc
fs
xchg
adc
hlt
ja
shl
cmpsl
or
cmp
cli
mov
mov
out
inc
stos
mov
inc
sbb
push
dec
xchg
sbb
adc
outsb
mov
fsub
cmp
mov
inc
sbb
push
fmull
pop
xor
call
xor
mov
adc
jmp
xor
fucomp
add
push
sbb
sub
xor
push
out
bound
jo
shlb
xchg
outsl
xorl
push
cmp
gs
sahf
orl
inc
lret
xchg
popf
imulb
sub
mov
sbbl
cwtl
outsb
out
add
fisubrl
cmpsb
dec
push
dec
pop
imul
popa
pop
stos
fs
cmp
movsl
dec
xchg
add
pop
cld
cmp
cmp
dec
xchg
mov
dec
and
xor
pop
lcall
mov
loop
jmp
dec
fwait
sub
ret
jo
call
pop
lcall
or
in
loop
mov
aad
cli
jnp
xor
mov
adc
lds
jbe
std
movsb
jge
cmp
sub
jae
leave
test
cmp
cwtl
loop
pop
shrd
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
icebp
add
sub
xor
mov
pop
addr16
pop
call
es
les
popa
cmp
sub
testl
fcoms
loop
lea
adc
cld
and
fnstsw
xorb
mov
xchg
jb,pt
sbb
or
divb
cwtl
sub
lret
or
pop
adc
or
mov
fldenv
into
leave
dec
jg
and
mov
aam
xchg
cld
shll
mov
nop
aaa
movsb
push
add
push
lahf
lods
dec
test
cld
mov
repz
pop
pop
pop
dec
mov
cmp
inc
lock
ds
insb
push
cmp
ror
adc
imul
jns
jle
mov
sti
mov
sbb
and
push
sarl
add
mov
ja
stc
xlat
imul
jecxz
dec
and
mov
sbb
scas
mov
inc
rol
shlb
push
push
orl
rorb
push
bound
pop
aas
jg
es
sahf
mov
or
inc
lock
cltd
ret
movsl
or
add
cmc
imull
push
sti
rcrl
adc
push
push
int
push
jno
test
xchg
sub
add
push
mov
cmpsl
imul
ret
jnp
ds
sub
lret
js
xchg
mov
add
rcr
test
lahf
mov
dec
xor
inc
imul
pop
jp
jp
out
aam
pop
sbb
out
sbb
dec
dec
cld
jbe
call
inc
test
jne
xchg
pop
xchg
inc
cmpsb
int
sub
xor
imulb
je
not
inc
pop
call
lret
cmpsb
pop
sub
inc
fdiv
xchg
xchg
testb
jns
pop
std
imul
out
and
lret
rcl
mov
lods
imul
ror
inc
pop
mov
ret
cmp
cli
es
test
stos
mov
scas
icebp
or
add
inc
sbb
sarb
mov
sub
mov
lea
and
sub
mov
xor
add
cld
push
xchg
push
les
cmp
jo
movsl
mov
pop
outsb
icebp
or
and
int3
in
adc
repnz
xor
and
cld
push
cmp
lods
mov
imul
sub
in
mov
mov
xor
add
flds
call
scas
cld
jae
sbb
addl
ret
les
dec
pop
lret
sub
fisubrl
daa
xchg
sub
mov
push
iret
je
jno
pop
int
dec
jbe
cmpsl
xlat
sarb
les
test
xlat
wbinvd
mull
mov
push
xchg
rolb
out
adc
lret
fsubl
test
pop
movsb
jno
stc
nop
sub
fsubr
in
xchg
testb
jbe
add
leave
es
push
add
aam
cwtl
or
in
or
mov
jmp
sub
popa
aaa
lret
inc
pop
dec
mov
xchg
mov
aas
test
addl
or
mov
add
addl
push
sbb
cmp
add
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
rcll
cmc
mov
mov
mov
and
ret
dec
mov
test
mov
mov
jb
cmp
inc
xor
mov
and
lock
adc
rcr
subl
xor
adc
jae
mov
mov
shr
xlat
outsl
and
pop
shll
orl
aad
xchg
into
cmp
push
mov
jne
push
push
test
call
xor
fidivl
sbb
inc
xor
repnz
inc
rcrl
notb
xor
roll
rcr
int
mov
fcoml
fsubs
ficoml
sub
fdivrs
lea
lret
hlt
adc
repnz
rcrl
mov
data16
dec
pop
ds
mov
pushf
dec
dec
xchg
addb
add
lods
adc
cmc
cmc
je
mov
out
sub
cmpsb
add
out
xchg
lods
pop
loop
and
ret
ja
mov
inc
sub
loope
xchg
fildl
pop
jp
xchg
call
adc
aam
test
popf
pop
or
add
sub
and
das
imul
sahf
lods
mov
mov
dec
push
adc
jns
xlat
cmp
jmp
jbe
pusha
andb
sub
fwait
push
test
add
jo
ja
and
fisubs
nop
ljmp
int
cmpsb
mov
das
cmp
test
shrl
cmpsl
cmp
push
sbb
std
pop
pop
mov
scas
fisttps
aaa
pusha
or
stos
sbb
pop
es
ss
pop
sbb
cmpsb
daa
push
je
out
xlat
pop
insl
fcomip
mov
fdivrp
jae
mov
loopne
sbb
and
push
subb
or
mov
and
or
pop
ficoml
fidivrs
outsl
xor
mov
fisubl
lods
and
sbb
sub
fsubs
nop
push
out
mov
lds
fisttps
push
outsb
mov
jmp
sti
add
fisttpl
mov
das
nop
cmp
inc
pop
cli
cltd
cltd
xchg
cmp
pop
pop
imul
jl
jl
inc
pop
or
cwtl
dec
fwait
je
jne
pop
outsb
lcall
jno
scas
add
ret
xchg
adc
push
pop
jl
add
mov
nop
mov
test
repnz
adc
scas
shll
fwait
outsb
cmp
sbb
cmc
add
jge
jo
int
pop
stos
pop
jecxz
fisttps
es
xchg
gs
cmp
xchg
mov
sub
in
sar
mov
pslld
fistl
cli
pop
pop
fldt
iret
rolb
xor
aad
jno
loop
inc
sub
and
dec
cltd
scas
popf
pushf
push
aad
sbb
rcrb
clc
inc
mov
adc
pop
imul
out
movsb
repz
int3
push
dec
cmp
popf
xchg
push
out
mov
call
dec
jl
adcb
cltd
pop
mov
jnp
std
lods
clc
fmulp
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
push
jb
sbb
xchg
or
dec
push
inc
push
push
in
sti
sub
or
scas
test
dec
jb
ss
xchg
lret
xchg
jne
xchg
scas
jae
lea
jno
dec
xchg
push
cli
pop
and
movsl
test
shl
xor
scas
lds
xchg
loop
call
rorl
dec
scas
cwtl
ret
ljmp
xor
mov
imul
push
push
movsl
dec
fidivl
sbb
aad
cltd
push
iret
mov
adc
or
scas
adc
and
pop
sbb
test
mov
pop
fwait
or
xor
mov
lock
cmc
aaa
addr16
cmp
inc
push
loop
je
xor
test
cmp
mov
push
pop
push
and
xorb
mov
xchg
pushf
std
push
dec
clc
xlat
add
cli
dec
mov
xor
pop
mov
cmp
xor
xchg
xchg
push
xor
fldt
mov
jmp
and
jg
out
or
adc
rclb
jo
inc
or
fdivrs
pop
imul
fs
push
jecxz
add
jg
cwtl
pop
push
aad
negb
mov
mov
adc
hlt
inc
js
mov
sbb
int
push
push
ffreep
lds
xchg
jmp
cli
push
cmp
jbe
pushf
shll
insb
subl
aas
call
inc
or
push
fadds
jp
push
lods
push
sub
cs
std
mov
xchg
shll
es
adcb
sub
jns
xor
lret
xchg
arpl
repz
in
cwtl
inc
mov
pop
arpl
add
xchg
sub
or
sbb
mov
loop
mov
sahf
insl
xchg
jp
jbe
mov
loope
mov
push
dec
mov
cmp
es
xor
add
jae
mov
mov
inc
xor
xor
lods
xor
dec
fstpt
sub
cmc
mov
lret
and
mov
push
lar
add
repz
or
aam
sub
rclb
cmc
out
push
mov
ljmp
mov
jg
xchg
add
js
ret
int3
and
aas
jmp
xor
sub
subl
mov
jbe
inc
xor
cld
mov
sub
mov
inc
imul
aad
sbb
mov
fistl
aad
stos
and
and
loop
adc
cmp
jns
and
pop
aaa
jae
jno
icebp
ret
out
bound
jg
fists
shrl
mov
mov
cmc
cmp
pop
mov
xor
in
jo
lret
sti
mov
jl
mov
nop
test
mov
dec
cli
pextrw
mov
ficomps
xchg
pop
cmp
and
jnp
sub
ret
add
mov
flds
orl
shrb
mov
sub
inc
cmpsb
rcl
mov
pop
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
sbb
mov
mov
movsb
pop
adc
pusha
xlat
cmp
add
jo
jmp
ret
popa
fcomps
jo
and
sbb
adc
je
loopne
inc
push
adc
mov
dec
lcall
xor
lock
cmc
jg
inc
js
lods
sahf
ret
test
js
inc
adc
cmp
dec
addb
paddd
pop
dec
pop
ljmp
jns
and
mov
inc
jno
inc
inc
lea
cmp
out
mov
movsb
das
mov
mov
ja
data16
add
aaa
push
xchg
insb
jmp
xchg
nop
push
inc
fcmovnu
es
out
add
jb
sbb
add
mov
adc
popa
mov
inc
cwtl
push
xchg
out
test
cs
aaa
ja
out
movsl
enter
out
mul
in
inc
dec
loopne
mov
inc
jne
inc
pop
ror
ds
test
or
in
pop
dec
gs
lahf
mov
pmaxub
mov
aaa
repnz
or
pop
cmp
outsl
cmp
mov
pop
nop
push
push
adc
shrb
arpl
jbe
rorl
or
xor
into
push
xor
push
lcall
adc
pop
scas
pushf
and
in
rclb
sarl
popf
cmp
outsl
sbb
mov
push
mov
xchg
mov
dec
mov
adc
gs
testb
or
call
dec
pop
clc
std
push
or
xor
mov
and
imul
mov
mov
rcrb
scas
xor
pop
mov
cmp
xchg
mov
popf
fisttps
mov
cmpsb
loop
in
jle
jle
in
cmc
inc
mov
dec
jmp
mov
subb
outsb
imul
dec
loope
xchg
cli
adc
cmp
inc
sahf
mov
flds
xor
div
mov
and
jns
lahf
push
jecxz
or
jb
setnp
aaa
or
loope
jo
into
movsb
jl
movsl
pop
nopl
mov
adc
imul
jno
iret
imul
ret
xor
mul
pop
sbb
mov
cmp
sbb
or
jns
stos
inc
ljmp
jb
orl
xchg
xchg
jo
pusha
push
pop
push
sub
mov
cmc
mov
and
add
cmpsb
dec
xlat
push
fdivl
les
xchg
into
adc
lock
leave
mov
mov
xor
xor
xlat
enter
adc
add
loopne
fcoml
bound
shll
test
sub
cmp
pop
dec
or
inc
dec
cmpsl
mov
loopne
imul
rol
push
fistpl
shrl
and
sti
out
mov
cs
test
fidivrs
sbb
cwtl
mov
sub
sbb
aaa
mov
adc
das
sti
xorl
dec
fdivr
jmp
out
adc
fisubrs
push
repnz
mull
test
and
inc
jnp
push
mov
xor
cmpsb
test
pop
lahf
add
push
cltd
cli
pop
mov
xlat
cmp
pop
mov
inc
icebp
sbb
pop
outsl
fwait
movb
mov
xchg
cmp
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
add
or
mov
jae,pn
ds
or
push
fidivl
push
push
mov
push
pop
sbb
nop
idivb
dec
add
push
pop
dec
inc
int
outsl
fwait
sbb
or
inc
push
pop
mov
fsubl
jge
mov
mov
push
dec
cmp
imul
mov
pop
cltd
mov
fidivrl
mov
iret
inc
test
sub
data16
shll
ss
movsl
into
mov
mov
nop
pop
cmpsl
dec
mov
sbb
jae
hlt
lods
pop
sbb
popa
mov
sub
loope
xlat
outsb
in
loopne
sbb
ffree
cmp
cmp
cmpsb
data16
js
inc
aam
fsubs
dec
push
and
addr16
dec
neg
mov
into
hlt
loop
aad
scas
mov
loopne
jnp
push
sbb
data16
jb
outsb
mov
xchg
and
push
jmp
test
jne
mov
cltd
and
inc
int
adc
sti
cmp
or
stc
aaa
sub
push
mov
push
sub
sbb
lods
lock
lret
add
sti
and
repz
pop
sti
adc
mov
aad
xor
int3
jne
cmpb
jnp
adc
dec
inc
mov
mov
outsl
leave
mov
xor
in
sub
and
inc
mov
or
jle
mov
inc
inc
jle
cmp
pop
ficoms
aas
dec
xor
jmp
or
push
inc
add
add
in
xlat
call
mov
movsb
daa
inc
popf
and
and
rcll
fwait
lods
fiadds
sbb
lret
enter
mov
add
jno
push
jns
shll
inc
adcl
imul
cwtl
and
lods
adc
jne
dec
xor
loope
or
pushf
jo
pop
iret
lds
pusha
dec
mov
cmpsl
xchg
jecxz
lock
sub
loope
push
dec
sysexit
bound
lret
mov
into
lea
mov
lret
sbb
cmpsl
test
int
gs
sbb
jmp
movsl
repz
push
mov
cwtl
mov
leave
jp
xchg
loop
jae
xor
imul
fidivs
in
sbb
mov
adc
adc
orb
lock
gs
scas
ficomps
and
mov
sub
mov
out
fwait
xchg
jp
push
push
shrb
rolb
xor
xlat
cmpsl
adc
aaa
lcall
xchg
dec
sbb
adc
sti
lcall
xchg
data16
out
inc
mov
pop
xlat
es
sbb
mov
mov
pop
push
testl
shll
fisttpl
loop
and
cmp
xchg
pushl
fwait
cmp
int
sahf
push
data16
jl
dec
sub
xor
icebp
push
arpl
jnp
jp
outsl
pop
cmc
leave
sub
push
sub
push
arpl
sahf
mov
orb
sub
pop
jg
lock
jnp
mov
ja
movsb
sub
ss
inc
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
lods
leave
movsb
mov
les
xchg
pop
mov
mov
pop
scas
rorl
and
enter
inc
aaa
rorl
stc
ret
fcoms
fidivrl
shrb
and
jne
mov
xchg
jge
adc
popa
lock
outsb
push
cmpsl
adc
inc
popa
mov
stc
lahf
sub
add
aaa
and
and
inc
and
divl
notb
clc
jbe
mov
inc
das
cmc
and
ljmp
iret
pop
pop
repz
inc
pop
mov
jmp
xlat
imul
jo
mov
add
cmp
xchg
or
cltd
repz
movsl
pusha
js
jno
bound
rcrb
mov
sub
dec
repnz
xchg
mov
jo
shr
dec
movsl
mov
outsl
xor
pop
xchg
add
sub
or
xlat
test
lods
lea
jle
lcall
sub
scas
cli
jno
stc
sbb
xlat
fmuls
adc
fimuls
push
mov
sti
add
mov
jmp
shr
fs
scas
and
xchg
int
das
int3
sub
pushf
sbb
xor
fadds
add
cmpsl
inc
incl
lds
mov
jns
in
xor
xchg
cmc
repz
cmc
dec
call
mov
stos
js
add
loope
lcall
into
mov
sub
push
movsl
push
push
xchg
inc
je
shr
sbb
jb
test
push
adc
jae
test
sbb
pop
push
cmp
or
sbb
fimuls
dec
shrb
mov
fisubrs
lods
enter
push
call
icebp
lock
pop
fiadds
xchg
imul
xchg
adc
popf
mov
adc
outsb
mov
in
and
add
test
ret
aad
inc
aad
xor
and
fldt
mov
push
mov
sbb
xchg
xchg
rcr
pop
or
inc
adc
xor
fstpt
sub
mov
cmp
jns
mov
les
inc
jae
aas
sub
jmp
mov
aaa
inc
and
out
cmp
psubq
or
rcrb
in
cltd
pop
add
pop
arpl
shlb
cli
xor
or
push
add
push
ljmp
xor
daa
cli
mov
pop
mov
data16
leave
arpl
pop
mov
pusha
cmp
cli
pop
adc
fwait
mov
jle
bound
xchg
cmp
lahf
add
outsb
mov
fsubs
arpl
and
mov
inc
mov
hlt
push
cld
cmp
repz
sub
rclb
outsl
push
js
and
cwtl
inc
mov
inc
mov
jmp
mov
inc
decl
push
push
mov
adc
jbe
shll
or
dec
adc
push
fbstp
in
je
out
std
xchg
cmp
jg
lods
mov
xlat
adc
and
imul
in
enter
aad
insl
outsl
sbb
inc
adc
fdivrl
cmp
inc
jb
test
or
sbb
call
enter
add
loopne
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
sbb
lcall
les
xchg
bound
mov
pop
les
daa
add
adcl
mov
inc
inc
cmp
jbe
push
mov
cwtl
or
jne
pop
add
cmp
and
push
mov
aas
inc
ret
pop
ljmp
pop
mov
push
push
add
inc
inc
push
ret
out
mov
sti
xchg
xor
fildll
fdivr
mov
insl
jl
mov
in
mov
les
orl
call
mov
cmp
inc
mov
dec
pop
mov
xchg
mov
push
in
int
std
repz
cmp
jne
jnp
and
jnp
popa
mov
addr16
xor
jns
stos
aas
adc
pop
xchg
test
adc
in
out
sbb
sbb
out
sbbl
out
stos
sti
jns
mov
sbb
daa
call
loop
cmc
sbbb
arpl
mov
jge
fidivl
push
jne
sub
mov
aad
or
inc
jo
or
push
sbb
cmp
outsb
mov
es
jb
and
xchg
push
jo
aas
cld
pop
mov
mov
cltd
or
orl
pop
arpl
jmp
xor
das
or
cmp
jns
dec
mov
shr
mov
lret
fisttps
adc
mov
pop
int
push
subb
popf
sub
pop
add
lds
das
imul
jg
hlt
cli
scas
ret
or
bound
inc
jmp
mov
rcl
mov
jp
movsl
es
pusha
rcr
int
push
icebp
push
adc
sbb
mov
sbb
mov
out
mov
push
adc
loop
pop
in
mov
xchg
pop
push
in
out
rclb
or
push
int3
pop
iret
std
outsb
data16
adc
ds
ljmp
notb
xchg
xchg
lahf
and
pop
repz
and
and
push
rolb
fdivrs
mov
imul
mov
add
fadds
sbb
nop
rcrl
outsb
cmp
push
daa
outsb
jbe
dec
fldenv
popa
sti
pop
cmpsl
add
jmp
mov
aam
jns
test
and
or
mov
in
sbb
loope
pop
mov
loope
pop
movsb
add
stos
mov
inc
es
int3
xor
cli
mov
iret
and
mov
adc
mov
stos
or
or
jne
mov
dec
cmp
movl
mov
dec
in
scas
xchg
push
push
push
jl
inc
lock
pop
jecxz
sub
mov
addr16
push
push
cld
imul
pop
aam
fbstp
xor
cli
dec
addr16
js
pop
ror
sub
daa
mov
pop
mov
cmp
dec
push
lret
jnp
cmp
xchg
sbb
cmp
pop
lock
cmc
adc
mov
jl
mov
in
jae
inc
rorb
cmp
push
sub
mov
fnstcw
cmp
dec
sub
dec
mov
jns
jecxz
in
in
ret
lods
lea
pop
popf
int3
dec
add
push
cld
dec
not
jmp
int
mov
sbb
mov
rcll
or
xchg
mov
les
fdivl
push
lock
jbe
cmpsl
jecxz
mov
call
push
dec
push
inc
movsl
and
xchg
and
idivl
add
fnstsw
aas
out
inc
aad
loope
xchg
repz
sbbl
bt
aas
outsb
loope
enter
mov
xchg
and
mov
add
lods
xor
fcomip
adc
in
add
jmp
sahf
pop
inc
push
mov
jg
inc
lret
fimuls
shrl
subb
adc
out
dec
push
xchg
in
enter
stos
es
sub
lds
push
cmp
xor
dec
imul
adc
aam
push
fwait
dec
jbe
mov
or
inc
ss
push
je
out
loopne
jge
mov
aaa
sarb
mov
test
insb
fs
fnstcw
movsl
and
repnz
pop
inc
insl
lds
ds
clc
cmp
cmc
movsb
adcb
inc
popf
push
adc
fwait
inc
repz
sar
push
fdivrl
inc
dec
lcall
sti
andb
xor
enter
dec
cmp
xchg
xchg
pop
aam
and
sub
imul
enter
scas
sbb
inc
pop
lahf
mov
push
cmp
idivl
icebp
lea
addr16
sub
scas
sub
lahf
add
jle
clc
fdivrs
out
test
int3
incl
cmpsb
add
cmp
out
jno
mov
mov
out
movsb
ds
pop
xor
gs
xor
xchg
xlat
adcl
notl
sbb
in
or
aaa
es
jns
cli
add
cwtl
add
or
dec
mov
mov
or
in
cmp
mov
rcrl
in
fildl
popf
fs
lea
mov
mov
adc
ret
cmc
aam
ret
movsl
test
mov
sub
loop
ljmp
push
push
mov
inc
jl
icebp
insb
xor
repz
mov
push
std
lahf
cmp
nop
btr
mov
inc
adc
xchg
and
daa
sahf
push
cld
push
scas
sbb
mov
out
cmpsb
stos
testb
or
sbb
jmp
sub
bound
push
test
das
mov
inc
xorb
cs
cmp
in
add
mov
mov
aam
cli
iret
hlt
cmp
rclb
dec
nop
rcl
adc
dec
mov
jle
mov
mov
cmp
jno
faddp
sub
cs
sbb
scas
push
push
in
pop
cli
pushf
mov
stos
dec
aam
jb
mov
std
and
push
stos
and
sub
aad
sahf
pop
insl
or
cmp
pop
iret
xor
inc
push
jecxz
leave
lahf
inc
pop
mov
insl
xor
lds
stc
xchg
je
mov
push
dec
adc
or
rcrb
mov
mov
and
stc
inc
popf
loope
pop
test
arpl
test
cmp
cmp
gs
out
rclb
and
ret
cmp
iret
xchg
dec
or
inc
push
ret
ljmp
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
shrl
mov
mov
icebp
dec
ds
xchg
fwait
arpl
loopne
jnp
push
mov
fucomip
aam
adc
dec
xchg
mov
inc
xor
lret
sub
cmp
adc
pop
sub
ficoms
mov
cwtl
fwait
loopne
fs
xchg
inc
push
cmp
mov
xchg
scas
xchg
lahf
fimull
cmp
aam
pop
dec
xlat
pushf
push
jl
dec
das
xor
xor
cmc
sub
ret
data16
jb
jle
std
jae
pop
jns
outsl
push
adc
inc
cld
pop
fs
push
xchg
cmp
lcall
mov
adc
sbb
aam
pop
push
jg
sti
pop
fstpl
loop
repz
les
insl
sbb
cld
jno
jg
bound
test
xor
and
add
sub
leave
fcomp
mov
or
mov
push
sub
sub
sub
push
sub
dec
icebp
add
jp
sub
sbbl
push
mov
lods
dec
imul
into
or
das
pop
xchg
int3
out
mov
sahf
jl
sbb
inc
pop
aam
mov
addr16
mov
jns
sub
lret
jb
mov
jnp
ret
push
js
outsl
insb
or
aad
sbb
aaa
stos
pop
push
imul
arpl
mov
gs
xchg
out
xor
mov
jo
push
bound
lahf
arpl
mov
mov
fs
in
sub
mov
cmp
leave
es
push
inc
jbe
imul
fs
outsl
rcll
xchg
xlat
inc
cli
in
scas
inc
cmp
es
pop
inc
cmpb
stos
std
mov
repnz
push
xchg
sbb
mov
push
shll
stc
push
pop
pop
push
insl
in
add
lcall
cli
in
sbb
gs
cmp
fidivs
je
movsb
ret
xor
add
sbb
mov
or
sub
jae
jg
adc
call
pop
jae
fcom
into
rclb
sbb
fsubrp
int
cmp
test
push
cmp
test
mov
jo
adc
jae
mov
jbe
cmpsb
mov
lret
sbb
jno
push
mov
mov
mov
mov
out
or
push
in
pop
xlat
mov
shrb
nop
hlt
add
xor
ss
inc
dec
fsubl
lods
lret
fdivr
lahf
inc
mov
push
pop
inc
push
aad
push
add
stos
and
jg
ficomps
fisubs
or
loopne
aam
mov
mov
sbb
mov
sbb
mov
adc
jnp
sar
xor
repnz
out
push
inc
adc
mov
cs
sbb
pop
pusha
and
mov
fdivr
mov
sbb
add
sysexit
cwtl
sbb
push
dec
repnz
adc
int
fists
pusha
cmp
push
add
lret
ud1
aaa
inc
jge
in
mov
cmp
and
adc
mov
push
popf
xchg
fadds
daa
sbb
sti
movsb
rclb
dec
jno
or
hlt
pop
fwait
rolb
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
frstor
mov
mov
pop
mov
and
mov
loop
faddl
inc
jb
cmpsb
sub
flds
xchg
insl
lahf
jmp
push
jno
push
push
add
ljmp
dec
ljmp
cmp
dec
pop
dec
mov
jmp
gs
jge
push
sbb
cmp
cli
sbb
lock
sti
sub
cmpsb
sar
and
call
aaa
mov
or
int3
jp
mov
cli
insl
and
ja
nop
mov
adc
cmp
and
cmpsb
dec
clc
mov
pop
ljmp
xchg
inc
ljmp
xchg
inc
pop
ss
xchg
mov
rorb
rclb
scas
cmc
push
mov
xchg
repnz
inc
fiadds
xchg
iret
movsl
sbb
insb
sahf
leave
adc
imul
in
loop
lea
mov
outsl
pop
push
int
add
push
pop
jmp
sub
pop
sbb
frndint
xchg
stos
adc
mov
sub
pop
insb
nop
pop
out
out
pop
xchg
mov
stc
cmp
sub
subb
pop
idivl
ja
push
imul
jge
mov
mov
inc
mov
or
mov
cmp
ret
out
sub
dec
dec
arpl
fidivl
inc
out
pop
pop
test
pop
das
mov
lds
enter
cmpsb
pop
mov
add
pop
jp
dec
jmp
jns
loope
aas
std
out
stos
fistl
insl
xor
ljmp
leave
push
jno
dec
mov
insb
dec
fisttpl
std
pop
insl
jle
inc
jle
in
cmpsb
push
setle
out
enter
int3
int3
cmpsb
pop
ret
sbb
pop
adc
mov
mov
clc
and
in
lea
js
cmp
pop
and
in
insl
dec
fidivrs
adc
pop
stos
pop
scas
movsb
add
insb
mov
mov
sbb
test
test
mov
xlat
js
jecxz
xchg
repz
jmp
fwait
stos
mov
inc
scas
push
shll
mov
aam
or
xchg
das
mov
pop
jns,pt
lds
or
cli
out
push
mov
into
cs
xchg
sbb
adc
pop
jge
mov
out
insb
test
shlb
mov
mov
outsw
adc
dec
mov
jo
jbe
int
mov
aaa
lods
push
fisttps
sar
pop
add
mov
ficoms
pop
push
fcmovbe
in
inc
xchg
or
pop
mov
adc
mov
xor
out
jo
push
mov
push
push
inc
mov
pop
aad
insb
dec
test
mov
shll
add
xor
push
push
mov
mov
rcrl
pop
sahf
loopne
inc
push
repz
sbb
inc
sub
popf
push
int
xchg
jns
or
and
mov
mov
fst
hlt
mov
mov
std
out
pop
add
ja
push
push
pop
cmp
xor
xor
pop
mov
mov
js
test
add
lret
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
xlat
and
mov
les
fcmovbe
ljmp
std
cmpsl
scas
xchg
cmp
pop
inc
or
repz
jle
popa
pop
dec
pop
dec
mov
mov
inc
pop
daa
inc
and
cmp
push
test
bound
push
jecxz
cltd
mov
fs
sbb
pop
cmp
sub
or
movsb
mov
cmp
cwtl
andl
lock
incb
clc
xchg
inc
sbb
sub
jg
jbe
bnd
ljmp
arpl
hlt
sbb
incb
int3
popa
fsubrs
jecxz
aam
jecxz
mov
xor
loop
idivb
push
test
ljmp
stos
sbb
mov
stos
sbb
add
divl
andl
sub
sbb
test
imul
fiadds
je
fwait
push
loop
shrl
jae
jp
fcomip
outsl
scas
arpl
fisttpll
xor
push
shll
aad
loope
jae
sbb
push
adc
sbb
push
ds
cli
scas
and
scas
in
jnp
xor
jbe
sbb
cmc
les
jl
pop
aam
ret
jo
pop
or
or
testb
iret
scas
mov
das
add
loopne
ret
addr16
stos
push
jne
add
add
out
mov
xor
dec
push
sub
mov
sub
dec
fwait
cmp
jbe
pop
xchg
adc
adc
inc
fdivp
rcll
popf
cmp
push
scas
jb
cmp
dec
or
out
push
daa
or
xchg
dec
movsl
outsl
les
popf
xor
mov
xor
xchg
mov
xchg
lahf
push
movsb
and
jae
sti
fsub
ljmp
add
push
or
inc
push
sarb
inc
jg
out
cmp
pushf
testl
cmpsl
mov
stos
mov
out
das
push
lods
sbb
fnstcw
hlt
xor
iret
in
rcrl
sub
jo
xor
rcrl
pushf
xchg
cmpsb
shl
les
add
rcrb
dec
sub
shl
jle
sbb
push
icebp
push
popf
jae
sahf
sbb
pop
shll
and
xor
shrl
scas
cmp
out
jns
out
pop
aam
mov
decl
jbe
mov
nop
pop
nop
push
out
int3
in
dec
push
push
mov
gs
mov
mov
test
xchg
mov
out
adc
out
ret
add
enter
fidivl
cmp
nop
leave
cmc
mov
jnp
inc
or
push
in
aaa
clc
sub
mov
cmp
push
push
repz
repnz
xor
jbe
xor
cwtl
ret
mov
mov
inc
into
sbb
stos
out
iret
jge
and
push
adc
dec
imul
xchg
ret
imul
frstor
repz
adc
xlat
xchg
fistpl
mov
jg
popa
or
sbb
hlt
insl
cmc
mov
popa
lock
into
and
lret
dec
xchg
adc
cmpsb
out
adc
mov
lret
pop
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
mulb
les
xchg
mov
jmp
xchg
movsl
dec
divb
add
jle
int3
dec
mov
cmp
jbe
cmp
nop
add
int
shl
clc
xchg
fsub
pop
mov
and
xor
repz
add
lcall
lcall
icebp
ljmp
in
push
mov
mov
and
inc
jae
cs
mov
popl
push
sbb
pop
pop
lret
pop
push
js
ss
aaa
call
lods
mov
dec
sbb
jp
ss
fiadds
pop
push
sub
sti
and
fwait
orb
fmuls
outsl
imul
stc
rcrb
xlat
sar
lods
jp
push
test
xchg
decl
pop
or
idiv
imul
es
jle
adc
pop
xor
das
mov
pop
hlt
and
cltd
adc
int3
sub
or
adc
daa
mov
pop
int3
push
test
lods
sbb
cld
dec
jb
sbbl
or
push
mov
dec
sub
ficoml
mov
cs
lea
mov
add
sbb
xor
popf
out
cmpsb
addr16
movups
mov
cmc
or
pop
sub
rcrl
mov
push
out
fs
dec
leave
rol
scas
sbb
mov
out
and
mov
cmp
dec
and
or
pop
xlat
mov
leave
das
sbb
cmpsb
rcrl
pop
or
xor
jae
out
add
push
mov
push
ss
inc
sti
push
addr16
dec
inc
les
mov
ror
cmovne
ss
int3
jmp
xchg
mov
jno
jmp
test
ja
xchg
xor
xchg
push
xor
dec
fstpl
fistl
sti
mov
inc
mov
mov
pop
mov
stc
inc
imul
out
les
dec
mov
dec
fs
pushf
pop
mov
jns
adc
lahf
add
push
cmpsb
cli
mov
xchg
mov
loop
add
push
inc
sti
pusha
nop
dec
xor
ret
jb
sub
xchg
mov
and
jae
sbb
push
stos
dec
mov
in
out
aad
stos
inc
xchg
xor
mov
pop
frstor
and
in
and
rcr
dec
xchg
int3
xchg
push
inc
dec
jne
fnstenv
outsl
mov
or
iret
cmp
dec
daa
jo
or
enter
xor
cli
bound
mov
insb
and
dec
inc
jne
outsb
cmp
xchg
outsb
or
inc
cmp
inc
jle
call
aad
mov
fs
data16
xchg
dec
andb
cmp
aaa
inc
adc
dec
xchg
dec
stos
lret
sbb
pop
push
movsl
cmpsl
imul
movsl
xchg
xor
push
mov
and
pop
lods
xor
jecxz
cmp
out
jp
cmp
adc
xchg
xchg
cli
mov
cmp
pushf
scas
mov
sub
fcmove
inc
mov
push
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
fisttpll
sarl
les
insl
js
push
enter
fldenv
mov
dec
jb
lret
lret
dec
ss
cmp
xchg
push
pop
loop
divl
push
outsl
ds
xchg
xor
ficoms
xor
stos
inc
and
out
dec
mov
pop
cld
mov
test
mov
int
or
adc
dec
dec
cltd
in
clc
mov
hlt
ss
fidivs
insl
call
xchg
mov
push
inc
scas
push
negb
cs
mov
cmp
dec
jno
or
arpl
adc
lods
jp
sbb
addr16
loop
arpl
mov
adc
cmp
lcall
inc
adcl
mov
jecxz
dec
inc
xor
aam
push
stos
push
jmp
dec
insb
sti
push
sbb
pop
push
xchg
mov
mov
xchg
inc
mov
dec
mov
dec
ss
aas
stos
inc
adcl
push
or
repz
loop
cs
fnstcw
cs
adc
test
jecxz
or
push
pop
ret
cmp
xchg
ret
daa
divb
data16
mov
xor
xchg
cs
mov
movsb
jb
and
xchg
loope
fbld
add
dec
inc
mov
pop
cmpsl
dec
or
aad
sbb
xchg
sbb
sub
sub
ret
shlb
mov
inc
push
fdivrp
inc
mov
xor
adc
mov
shrl
jge
test
or
xchg
inc
rcr
jmp
dec
lcall
cmp
push
mov
push
cmpsb
jmp
dec
sbb
ss
lea
pop
xor
jge
lds
sahf
adc
int3
add
enterw
movsb
xchg
cmpsb
pop
push
pop
es
cmp
or
inc
add
and
xchg
inc
loope
pop
xor
in
data16
push
dec
add
and
xor
push
mov
xchg
gs
dec
inc
movsl
addr16
push
cmp
jne
loope
cmp
xchg
test
jmp
bound
push
jno
mov
mov
cs
jp
lret
jp
jb
push
shl
lret
add
addr16
pop
sbb
pop
pop
movsl
adc
stos
cmp
xchg
push
nop
push
push
lods
and
sub
cmp
filds
lret
adc
loop
dec
inc
mov
scas
cmp
dec
sub
push
ja
push
inc
push
xor
mov
in
cltd
ret
mov
out
fistpl
sbb
inc
push
push
pusha
js
out
loop
std
dec
iret
lcall
js
int3
cld
sbb
push
and
inc
jbe
lret
push
sbb
iret
into
jo
inc
sub
cmp
adc
sub
dec
sub
mov
and
notb
cwtl
mov
push
repnz
pop
jnp
int3
push
loopne
and
cmp
fisttpl
mov
sub
cmpb
sarb
push
adc
dec
mov
inc
pusha
mov
adc
jp
cmpsl
cwtl
in
jp
jno
mov
sti
xchg
xlat
xchg
cli
das
pop
jo
ja
scas
push
jle
add
xchg
xchg
mov
pop
mov
in
dec
lret
shll
icebp
cmp
push
adc
mov
lret
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
jb
push
mov
mov
call
pop
pop
sarl
push
xor
js
cs
xorl
pop
inc
inc
mov
push
push
sarb
mov
imul
dec
aam
repz
or
mov
mov
cmp
arpl
inc
jo
bswap
movsl
mov
cmp
scas
dec
loop
loop
pop
loopne
ja
fmull
in
cmp
push
and
dec
cltd
iret
pop
lods
jmp
and
mov
jbe
les
cmpsl
mov
add
mov
aaa
stos
xor
cmp
test
scas
xchg
out
cmp
sbb
pop
xchg
imul
push
xor
sbb
mov
adcl
ficomps
jmp
fdivrl
loopne
and
mov
mov
inc
rcl
add
mov
mov
jb
addl
leave
xor
adc
imul
sub
fs
pop
gs
or
mov
adc
out
sub
and
jg
clc
push
in
and
xor
sub
xor
sbb
adc
xchg
add
cmp
sbb
daa
or
cmp
pop
xor
adc
pop
jbe
lds
mov
adc
daa
push
cwtl
fs
rcrl
jp
xorl
in
or
adc
xor
xorb
sub
or
push
mov
pusha
scas
sub
shll
shlb
add
cmp
mov
jne
push
shll
pop
and
test
and
push
mov
cmc
push
or
dec
idivb
mov
inc
cwtl
jne
mov
aam
fstl
inc
dec
mov
cmpsl
push
aam
enter
pop
dec
inc
inc
xchg
test
jb
lock
mov
jl
sub
ss
repnz
sahf
mov
dec
and
and
adc
ja
mov
es
lcall
fdivs
adc
popf
fwait
lea
inc
mov
jae
popf
xor
xor
in
shlb
insb
imul
rcll
push
jl
pop
mov
in
xchg
add
or
adc
dec
mov
js
cmpsl
ljmp
lahf
iret
mov
decl
sbb
test
pop
mov
stos
or
mov
and
in
sub
push
repz
xor
lret
loopne
xorl
mov
push
cmp
lds
sbb
mov
insb
aam
mov
gs
mov
mov
adc
rorl
iret
xor
repnz
push
not
scas
orl
pop
xchg
xor
nop
xchg
xorb
jnp
cmpsb
bound
xor
cmp
push
imul
bound
test
cmovle
xchg
test
imul
adc
and
test
test
repz
cmp
ljmp
cltd
adc
push
inc
ds
hlt
mov
xchg
and
cltd
insl
jo
mull
mov
mov
div
into
adc
jmp
sti
repz
lea
sub
ud2
jecxz
outsl
sub
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
jl
sarl
les
fistpl
in
push
lds
mov
mov
test
lock
leave
ja
inc
push
subl
adc
cmpsl
fidivl
adc
inc
add
mov
cli
sbb
mov
aam
jecxz
add
pusha
cs
mov
shrb
or
les
and
vmovhps
adc
add
mov
mov
mov
stc
outsl
daa
stc
lret
shl
aam
pop
test
jno
call
popf
in
cmc
int
xor
mov
vsubsd
pop
mov
pand
les
les
push
jbe
add
aad
mov
dec
sbb
pop
inc
inc
cmp
mov
add
insb
adc
mov
cmp
repz
jmp
xchg
je
or
push
addr16
adc
movsl
jnp
push
inc
dec
sub
sbbl
or
jle
jmp
mov
push
mov
outsl
stc
jae
xchg
mov
mov
stos
jp
arpl
andb
xchg
mov
jge
enter
add
mov
sbb
test
imul
push
sti
imul
xchg
cld
cs
jb
dec
rorb
add
scas
mov
mov
dec
fwait
jb
lret
xchg
cmpsb
int
les
hlt
fstps
cld
sar
call
test
mov
cmpsl
and
mov
xchg
xchg
mov
jl
in
dec
and
mov
jp
push
loop
pop
arpl
fwait
xchg
shr
fs
outsl
cmp
test
stos
ljmp
shlb
or
pop
push
ret
es
sub
push
mov
sub
das
out
adc
push
add
or
in
add
mov
and
adc
mov
ja
in
sub
mov
inc
pop
incb
mulw
fldl
cmpb
dec
leave
loop
nop
inc
mov
stc
test
pusha
adc
lock
mov
inc
jnp
cmp
out
out
ss
jbe
out
xchg
xor
xor
in
pop
xchg
mov
out
movsb
pop
insb
pop
jg
jbe
ja
test
decb
stc
jl
aaa
and
push
jge
xor
push
jbe
or
test
and
mov
mov
push
and
mov
pop
push
mov
jne
fs
lret
lds
sbb
push
pop
scas
fiadds
and
insb
xchg
xor
push
sbb
mov
mov
iret
pushf
xchg
punpcklbw
lret
test
cmp
mov
xor
ja
adc
idiv
mov
icebp
lea
xor
cwtl
les
pushf
sbb
mov
mov
loopnew
cwtl
push
aas
mov
and
mov
cwtl
fsubp
inc
js
xor
add
cmp
fdivl
pop
arpl
pop
mov
fsubrl
or
inc
push
mov
sbb
inc
sar
inc
adc
jp
imull
cmp
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fldl
push
mov
mov
inc
cmpsl
adc
mov
add
sbb
lock
loope
scas
ficompl
xchg
xchg
ljmp
inc
sbb
mov
mov
lea
pop
pop
pop
cli
movsl
push
divl
pushf
sub
imul
cmpl
cmp
sub
js
mov
xor
xor
mov
mov
inc
cld
or
daa
cmp
jge
xchg
les
leave
xchg
and
daa
xor
mov
orb
cmp
leave
xchg
icebp
cmpsb
xchg
mov
and
imul
movsl
xchg
jae
sarl
leave
jae
and
js
xor
xchg
xor
cmp
mov
pushf
mov
insb
and
scas
inc
jne
hlt
lea
sub
es
adc
pop
and
inc
dec
mov
int3
popa
xchg
out
aad
or
xor
cmpsl
sti
icebp
push
subl
jge
sbb
aam
bound
rolb
cmp
dec
cmp
and
mov
repnz
lea
outsb
or
or
inc
pop
cmp
dec
mov
arpl
add
xchg
mov
mov
shlb
add
sbb
xchg
dec
inc
xchg
cmp
je
and
outsl
xor
push
jns
cmc
fwait
idiv
ds
adc
lret
pop
cwtl
shl
adc
js
jae
icebp
push
or
push
push
mov
fbstp
lods
inc
nop
repnz
shrl
sub
push
iret
mov
jge
pop
scas
int3
and
and
jnp
jecxz
pop
sub
push
fcomip
inc
fnsave
fwait
popw
xchg
testl
ja
jl
mov
add
insb
call
add
xorb
test
push
enter
fcomp
in
int3
pusha
push
rorl
loopne
sub
dec
aaa
daa
clc
sub
loop
mov
jle
mov
cmpsl
or
mov
ja
int
scas
dec
pop
call
inc
mov
mov
jb
cmp
pop
mull
jg
xor
push
cmp
shlb
mov
divl
sti
dec
scas
lcall
jl
jl
dec
mov
add
and
and
inc
int
push
imul
in
adc
test
jb
sub
test
sbb
mov
scas
dec
pop
outsl
sbb
cmp
and
int3
pop
movsl
add
lock
popa
lcall
sub
insl
sarb
xchg
dec
fs
in
lret
jp
aam
dec
xlat
jge
push
sub
add
mov
mov
mov
mov
dec
or
or
jmp
enter
mov
dec
xchg
fisubs
movsl
jp
stos
pop
call
jne
dec
in
pop
mov
cmp
jne
ret
dec
incl
push
pop
pop
sahf
sbb
cmc
mov
cld
inc
jno
sub
cld
repnz
popa
sbb
inc
jmp
mov
call
jns
xchg
and
dec
pop
popa
adc
addb
iret
pop
repnz
lea
pop
sti
sub
scas
push
or
orl
scas
adc
push
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
testb
sahf
mov
les
mov
inc
fisttpll
sub
pusha
in
inc
cmc
stc
jne
shrl
mov
mov
xchg
cmpb
jns
push
and
inc
addl
scas
js
lods
int
int
fucomp
fucomip
inc
ficoms
push
jae
test
adc
stc
dec
rcll
clc
rcrb
pop
dec
pop
jb
and
mov
or
test
sysenter
cmp
sahf
notrack
xor
mov
dec
int3
jbe
push
rolb
loop
xor
lret
inc
push
cmp
push
jmp
add
adc
pop
out
cltd
sub
in
pop
fst
or
call
jns
je
mov
testl
dec
or
lea
test
ror
in
cmpsl
cmovne
inc
dec
in
into
and
push
mov
pop
iret
lret
push
iret
cmp
pop
sub
mov
lret
std
sbb
out
xlat
imul
scas
pusha
pop
test
shll
test
and
lcall
or
lahf
sub
jbe
les
dec
mov
mov
lock
popa
mov
clc
cmp
sbb
pusha
cs
notl
arpl
mov
jge
enter
fwait
pop
lcall
repnz
dec
in
int
stc
add
lock
daa
sub
push
xchg
pop
cltd
in
jnp
xchg
lcall
test
pop
fsub
add
pop
stos
sub
sub
push
sarl
xchg
sbb
frstor
out
xor
stos
sbb
jb
or
push
aas
and
lcall
jg
mov
adc
mov
pop
loope
lods
dec
mov
or
adc
jle
insl
sub
push
andb
or
jg
dec
xchg
xchg
sub
movsb
sbb
mov
scas
je
rol
cs
enter
aaa
mov
scas
outsl
mov
mov
stos
push
pop
mov
int
ss
cmpsb
les
dec
shll
jns
cmp
xor
rorl
ret
mov
dec
push
inc
jg
cmpl
outsb
and
mov
dec
cmp
cmp
ret
push
and
ret
xor
stc
jl
dec
mov
aaa
push
popf
cmc
xchg
sub
aam
cld
jo
push
lods
xor
inc
pop
pop
add
loope
mov
jp
jg
inc
stc
or
adc
pop
xchg
loop,pn
shrl
pop
js
xor
sub
pushw
xor
pop
sbb
arpl
test
push
dec
lcall
int3
pop
fsubrs
int
cmp
dec
fwait
pop
dec
jb
or
and
ret
or
or
icebp
pop
sbb
mov
and
es
xor
and
xor
cmc
aaa
orb
inc
lea
and
daa
xchg
push
cmp
fnstsw
inc
mov
fiadds
out
nop
jge
pusha
cmp
test
fcmovbe
ljmp
sub
rcrb
mov
jmp
out
fsubl
test
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
push
jecxz
gs
mov
mov
lahf
not
and
cmp
notl
sbb
inc
jmp
iret
jl
les
mov
mov
and
jns
pop
mov
fs
jae
ret
mov
pop
add
ja
je
fwait
inc
cmp
or
pop
rcrb
add
mov
fistps
fisttpl
ds
stos
dec
lods
push
jle
negl
aam
jne
mov
aam
add
test
sbb
shll
sbb
xor
imul
mov
xchg
aam
stos
push
mov
popf
or
mov
les
sbb
push
out
aad
jp
mov
inc
movsb
jecxz
and
shrl
xchg
popa
push
and
jecxz
dec
outsl
iret
mov
lahf
pop
xchg
xchg
cmpsb
push
cwtl
repnz
es
and
push
jmp
mov
loop
movb
pushf
and
test
mov
gs
daa
or
dec
and
push
add
xchg
outsb
in
pop
insb
cmpsl
imul
push
lods
jne
jmp
fs
adc
xchg
daa
fwait
je
cltd
cmc
inc
fdivr
xor
pop
jb
xor
out
pop
das
sarb
push
sub
jl
orb
dec
cmpsl
stc
stos
push
mov
stos
mov
mov
lcall
incb
cmpsl
jp
add
imul
lret
mov
adc
mov
fiaddl
and
xor
js
xor
dec
and
add
lcall
cld
or
mov
js
mov
mov
nop
cltd
or
jg
sub
lods
add
dec
xchg
add
fdiv
imul
enter
xor
sub
push
popf
xchg
sub
repz
dec
xchg
test
aas
lcall
scas
adc
call
cltd
cld
add
or
mov
adcl
out
daa
dec
les
xor
cs
test
pushf
sbb
sarl
jnp
scas
ja,pt
push
data16
sub
adc
mov
in
roll
fidivrs
adc
data16
ficompl
sti
add
stc
jb
repnz
insb
cli
sbb
fistl
movsl
jnp
add
jb
ret
in
push
xchg
jae
fxch
and
xchg
lds
pop
outsl
subb
les
out
push
sub
xchg
fwait
push
shlb
mov
and
aad
mov
aam
xchg
insb
cld
andl
rolb
in
xor
test
std
lcall
aam
xor
leave
shrb
sub
adc
cmp
jnp
fcoms
cwtl
sarb
int
push
xor
add
mov
sbb
pusha
arpl
dec
xchg
lcall
gs
aaa
lret
jp
inc
jge
movsb
and
mov
fcomps
shl
and
adc
in
mov
push
clc
xorl
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
rsm
jo
mov
les
mov
mov
pop
nop
push
test
jnp
pop
pop
cmp
enter
daa
nop
and
mov
clc
movsl
push
rcl
pop
jae
pop
mov
adc
push
cmc
aas
pop
xor
addb
std
cmp
gs
add
dec
sti
xchg
ret
inc
adc
cmp
jbe
inc
and
add
mov
pop
push
call
fldcw
pop
xchg
jge
xor
push
iret
push
notl
repz
clc
test
out
test
or
idiv
outsb
mov
inc
nop
aam
jne
or
xor
jmp
mov
cmp
dec
add
fwait
sub
sti
movsl
imul
sbb
lret
mov
mov
or
dec
jg
jo
jmp
cmp
inc
movsl
cmp
and
pop
jecxz
xor
push
xchg
cmp
dec
jne
dec
sub
add
outsl
dec
movsl
out
movsb
mov
ds
mov
rcrl
sub
sbb
mov
cmpsb
push
lods
out
and
cmp
mov
fstpt
mov
aas
lods
cld
jl
and
xor
mov
out
xor
xchg
repnz
sub
notl
in
mov
xor
ds
add
sub
into
ret
movl
cltd
lock
cmpsb
push
movsl
jb
cmp
ficomps
cmp
sub
adc
sbb
and
rcl
mov
pop
add
push
adc
cli
ja
mov
adc
int
data16
out
popf
mov
jne
add
or
pop
lret
dec
scas
lock
mov
in
xchg
push
push
and
push
scas
mov
fwait
and
add
ds
rol
xor
into
push
cli
push
xor
xchg
jo
shr
in
inc
es
les
add
add
mov
xchg
cmpl
scas
inc
sbb
cmc
lahf
inc
cmp
add
pop
pushf
lock
inc
cmpsb
mov
push
adc
adc
jl
push
xor
sbb
xor
int3
in
sbb
mov
fs
jb
shr
mov
jecxz
jno
or
call
inc
pusha
mov
loope
jp
adc
cld
pop
ret
jmp
loopne
in
add
jns
frstor
aad
xor
mov
pop
dec
mov
and
lcall
iret
sub
and
call
sbbl
clc
mov
pushf
incb
stos
jle
cmp
and
cmp
repnz
movsb
mov
add
or
sbbl
sub
repnz
sub
mov
adc
int
jge
in
shr
lock
or
mov
movsb
xchg
nop
fsubr
ss
inc
int
fldcw
gs
xlat
lret
xchg
and
jp
sarb
sahf
xor
mull
push
cli
xchg
mov
jns
push
ljmp
xor
aaa
fs
mov
adc
lret
inc
xchg
dec
push
add
and
scas
xor
adc
rep
add
xor
dec
notb
mov
sbb
dec
xchg
push
mov
cwtl
jno
cmp
sub
add
inc
adc
jmp
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
lods
dec
xchg
nop
mov
les
ret
bound
cmpsl
sub
addr16
stos
pop
pop
dec
lret
jle
push
jbe,pn
mov
pushl
adc
push
and
lret
flds
push
fisubrs
push
sarl
and
mov
add
jmp
or
fnstsw
inc
outsl
loope
popa
add
aaa
dec
loopne
mov
pop
dec
pop
xor
test
scas
and
movsb
test
rcrb
pop
inc
iret
jnp
in
dec
cmp
and
cmp
cld
out
xchg
mov
xor
adc
push
pushf
out
in
mov
pop
cmp
xor
jecxz
dec
fdivl
push
or
jns
cmpsb
test
jecxz
mov
fidivrl
movsl
push
aaa
sub
cltd
test
add
std
loop
xchg
xchg
ja
mov
dec
cmp
sbb
lcall
fldz
cs
mov
xchg
movsl
push
lret
sahf
lea
enter
sarb
xlat
xor
lret
and
out
adc
push
mov
inc
pop
imul
lcall
aas
mov
out
vmread
pop
mov
mov
cmpsb
xor
stos
inc
mov
iret
adc
cmc
add
push
ds
xchg
ds
mov
popf
or
or
mov
movaps
sbb
insb
cmp
dec
pop
push
ret
popf
vpmulhuw
addr16
nop
cmp
sub
adc
inc
lahf
cmpsb
xchg
stos
xor
adc
mov
sub
add
lea
outsl
jecxz
mov
add
xchg
outsl
sub
lds
pop
push
mov
insb
sub
push
pop
add
sub
inc
sub
out
imulb
dec
and
mov
out
jle
jmp
data16
jp
aaa
ucomiss
lret
dec
sub
xor
mov
and
cmp
pushf
mov
push
jmp
cmpsb
cmpsl
push
mov
add
jnp
out
ss
cmp
add
and
push
das
pushf
adc
lds
lahf
enter
xchg
jno
in
inc
jecxz
push
cmp
pop
or
cmp
dec
mov
ds
xchg
fdivr
ret
cmp
dec
xlat
test
cmpsb
mov
fbstp
test
sahf
sbb
pop
and
add
pop
fldcw
dec
int3
aaa
out
push
loop
popf
pop
adc
call
bound
insl
and
xor
inc
test
int
xchg
adc
into
ret
and
insb
loope
cmpsb
aas
mov
out
mov
jnp
fsubs
mov
add
push
dec
sub
jecxz
lahf
and
jg
in
cmp
jp
aad
or
sbb
cmp
cmp
cld
pop
inc
test
push
mov
rol
add
lods
sub
mov
sub
or
pop
fs
pop
incl
loop
xchg
leave
fistl
push
add
and
and
mov
xchg
divb
inc
add
sub
stos
mov
inc
or
rorb
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
icebp
lahf
xchg
nop
mov
ret
dec
jae
ret
adcb
cmpsb
ret
mov
xchg
inc
sbb
cld
mov
inc
and
or
call
popf
sbb
xchg
ss
lds
mov
dec
sbbl
push
sahf
dec
scas
pop
cmp
lcall
pushf
pop
mov
pop
push
cmp
aas
push
sbb
sub
push
push
pop
add
enter
mov
out
and
push
mov
xor
pop
dec
mov
les
mov
jge
mov
mov
xlat
push
fwait
lret
cmpsl
mov
es
out
push
popa
add
pop
push
stos
fists
movsb
int
xchg
imul
push
inc
adc
arpl
mov
stc
jge
divb
mov
add
test
mov
pusha
mov
pcmpgtb
in
mov
shll
lock
pushf
xchg
or
mov
xchg
xchg
test
push
mov
sbb
xchg
cld
aam
dec
inc
or
aam
cmpsl
icebp
jge
out
push
add
popl
insl
push
add
jbe
pop
insl
cwtl
fcoms
fsubl
pushf
sub
adc
cmp
and
in
in
sahf
xchg
ljmp
shrl
cmpsb
lock
mov
inc
ds
mov
into
mov
and
xor
mov
xchg
cmp
pusha
xor
movsl
enter
pop
push
pop
sarb
repz
aam
imul
aad
rol
mov
and
jmp
cmp
ret
je
pop
sub
outsl
add
push
call
pushf
in
aaa
push
stos
imul
pop
incl
sti
push
or
call
test
stc
out
pop
in
mov
ficomps
jmp
adcb
cwtl
jle
out
mov
cmp
pop
hlt
stos
nop
pop
jno
adc
fdivrp
in
jge
lret
jg
xor
xor
cmovl
sbb
fwait
push
inc
nop
sub
js
mov
mov
cwtl
pop
mov
je
test
jge
and
fucomp
add
push
stos
jns
inc
xor
sub
movl
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
pop
sbb
movsb
jp
mov
mov
mov
jb
jnp
sub
outsl
add
xor
sbb
sbb
test
popf
lds
jmp
les
loop
dec
iret
test
in
jbe
adc
mov
int
ss
ret
imul
jne
cli
mov
leave
pop
xchg
fcmovu
insb
int3
sub
sahf
es
pop
std
test
adc
inc
inc
xchg
cmp
cmpsb
xor
rclb
cmp
lret
add
movsl
xchg
or
scas
and
in
sub
pop
or
lcall
out
dec
adc
mov
and
repz
sub
pop
icebp
fmull
push
aaa
mov
nop
jle
xchg
nop
movsl
shll
mov
sub
xchg
mov
lcall
pop
and
cmp
sub
outsl
test
xchg
addw
sbb
inc
push
jne
dec
dec
and
cmc
xchg
mov
mov
mov
adc
xor
or
sahf
pop
scas
pop
mov
pop
push
or
imul
dec
sub
add
imul
dec
popf
add
imulb
add
rcrb
sub
inc
inc
insb
fimull
dec
and
ja
pop
shlb
xor
outsb
dec
rol
dec
sbb
pop
out
sti
push
inc
cwtl
and
loop
iret
fldl
or
push
stos
scas
xchg
dec
cmpsb
fsub
fdivrs
stc
cs
mov
je
cmpsl
sbb
lcall
divl
lret
jb
dec
fidivrs
push
push
out
test
dec
mov
mov
iret
cld
fisubrs
jo
popa
pop
mov
into
pushf
xor
mov
sti
jne
xor
jno
popa
shll
movsl
cmp
gs
mov
mov
add
sub
or
ljmp
mov
out
std
fistps
ds
cmc
xor
cmp
mov
mov
pop
push
je
mov
pop
sub
cltd
sbbb
out
das
movsb
stos
aas
fstpt
fldt
and
add
fwait
pop
mov
pushf
das
jb
mov
xchg
repnz
and
mov
cmp
jb
jns
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
insl
mov
mov
mov
push
das
adcl
inc
pop
jp
movsl
push
pop
rol
aas
test
es
add
or
cs
xchg
stos
rol
ret
sub
adc
inc
es
inc
mov
mov
out
mov
das
push
mov
and
push
sti
cmc
lret
pusha
cmp
jmp
xor
loopne
fcomp
adc
bound
pop
push
cmc
cmp
cs
xor
add
sbb
inc
dec
test
xorl
fisubrs
popa
sub
inc
fstl
inc
sar
mov
push
inc
mov
bound
test
xor
test
incl
in
xor
cli
outsl
hlt
icebp
iret
daa
mov
add
out
les
scas
xchg
lret
mov
or
cmp
jb
outsb
jmp
push
adc
fimuls
push
out
andl
sbb
out
sub
mov
in
pushf
pop
push
addr16
in
xchg
cmp
rcrb
in
jle
pop
stc
dec
negb
into
addl
xchg
pop
push
outsb
and
mov
dec
popf
jo
divb
dec
dec
or
jmp
adc
nop
inc
mov
mov
nop
xchg
jmp
inc
sub
inc
or
stos
cmp
dec
sub
cmp
xchg
xor
sbb
jae
jmp
mov
scas
cmp
jge
mov
cmp
or
lahf
pop
sub
mov
ds
and
and
xor
fwait
pop
xrelease
mov
sbb
insl
push
out
les
push
in
xchg
mov
addr16
pop
lock
adc
in
pop
jo
scas
push
xor
xchg
jb
xchg
scas
xor
mov
push
enter
insl
lcall
mov
pop
cld
sub
jbe
cs
cmpsb
add
clc
call
sbb
push
out
sti
xchg
mov
loope
outsb
lods
daa
ror
jl
mov
mov
popf
jge
movsl
and
jl
dec
inc
dec
cmc
clc
jb
push
mov
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
and
shl
xchg
mov
loopne
xchg
sahf
lret
pop
lock
or
or
or
cs
out
aam
dec
aaa
pop
inc
cmpl
jns
fcmovne
mov
dec
sahf
lret
fmulp
add
repnz
and
cmpsl
mov
and
sti
aaa
fists
pop
lock
insl
adc
fwait
int3
xchg
mov
fisubrl
es
dec
ret
lahf
jp
lret
lock
mov
sbb
dec
push
cld
jbe
pop
fsub
mov
mov
push
add
adc
xor
js
mov
push
mov
adc
mov
mov
mov
test
cmpl
or
cmpsl
or
mov
aas
xchg
push
mov
xchg
dec
adc
mov
nop
mov
insb
or
xor
cmc
ljmp
sahf
push
adc
add
test
je
popa
inc
xchg
adc
lret
push
ror
mov
mul
sbb
mul
xchg
arpl
cmp
mov
sbb
jb
dec
mov
push
cltd
pop
outsb
data16
cs
test
adc
cmp
cmp
cmp
xor
clc
mov
addr16
in
into
mov
jb
xor
repnz
test
sbb
dec
in
outsl
sbb
js
xor
xchg
div
lret
testb
mov
mov
hlt
icebp
aam
mov
wbinvd
inc
fdivs
std
popa
jge
incl
pop
cwtl
insl
nop
mov
push
jg
xor
pop
clc
mov
push
scas
adc
lret
ljmp
add
mov
push
xchg
push
adc
jmp
dec
or
insl
js
mov
hlt
sbb
adc
mov
pop
inc
pop
lds
hlt
mov
lds
push
inc
jle
xor
or
fimull
jecxz
push
sarb
push
cmpsl
rclb
repnz
ret
rcrl
jecxz
push
sarb
sub
arpl
add
jl
pop
scas
lret
movsb
cld
xchg
addr16
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
xchg
mov
scas
mov
mov
mov
enter
je
outsb
pop
ret
inc
sub
dec
test
jnp
jno
xor
push
cld
cwtl
jb
xchg
mov
lods
push
int3
sahf
stc
insb
dec
std
mov
ja
mov
inc
lcall
pop
test
repnz
add
popa
dec
xchg
push
cmc
fcmovnbe
inc
xchg
int
inc
js
fdivrs
int
jg
in
or
mov
iret
mov
shll
popf
movsb
into
push
and
ss
mov
pop
mov
loop
imul
arpl
lods
aad
insl
inc
mov
adc
pushf
scas
in
mov
je
pushl
fninit
adcl
leave
ret
lods
cmp
pop
gs
push
or
mov
es
mov
sub
sub
xor
inc
and
inc
add
mov
inc
aas
jno
adc
mov
inc
popa
sti
std
pop
xor
push
outsb
imul
xchg
test
xor
xlat
fbld
jbe
jmp
mov
shlb
push
cmovl
xchg
jnp
pop
lock
lcall
xor
test
fisttps
mov
pop
add
xchg
push
fmul
cmp
mov
push
mov
fistpl
dec
inc
or
repnz
xlat
sbb
jmp
fnsave
sbb
sub
pop
xchg
pop
call
dec
incb
xchg
orl
fwait
int
sbb
aaa
dec
movsb
jle
pop
popa
jl
lods
xor
mov
sbb
insb
inc
adc
dec
add
sub
into
sti
jns
divl
sahf
into
push
push
xchg
and
pop
dec
pop
out
pushf
stc
mov
push
cld
xor
mov
add
mov
and
mov
xor
in
loope
int3
push
arpl
inc
add
loop
outsl
xchg
lahf
mov
out
mov
ficoms
pop
push
sub
pop
pop
je
sub
inc
out
push
jnp
popa
aas
push
aad
mov
push
popa
pop
and
sahf
enter
pop
cmp
int
idivl
cli
je
xchg
push
iret
jge
js
imul
push
xorl
sbb
sub
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
mov
imul
mov
imul
dec
lock
outsb
dec
xchg
out
das
leave
pop
int
dec
push
loopne
in
aaa
adc
push
or
out
fwait
mov
shrl
call
sbb
lret
pop
insl
mov
and
push
adc
mov
push
push
pop
jg
inc
gs
xor
mov
adc
ljmp
scas
cmp
inc
sbb
stos
add
aad
les
push
pop
or
mov
dec
scas
sti
filds
push
adc
cmp
push
cmp
dec
outsb
pop
cltd
pop
lds
loopne
and
icebp
inc
ret
mov
sub
pusha
pop
sbb
push
leave
addr16
cmc
packsswb
test
test
pushf
roll
or
mov
shll
pop
push
mov
ret
sbb
lea
jl
xchg
jo
fwait
sbb
data16
jmp
pop
dec
shrb
shrb
pop
cmc
orb
jmp
xchg
jg
or
cmpb
sub
add
lea
cmp
inc
mov
loopne
in
inc
mov
int3
addr16
mov
sub
outsb
dec
sbb
sbb
pop
push
movsb
nop
insl
hlt
or
push
iret
cltd
push
mov
adc
sub
rorl
rorb
mov
in
cli
push
or
cmpsb
cmpsb
adc
es
gs
sti
call
mov
dec
outsl
jo
and
sub
out
scas
repz
xchg
and
sbb
cmp
mov
push
movb
movsb
out
rorb
out
pusha
lods
es
leave
dec
rcl
cmc
imul
insl
xchg
lret
add
rclb
or
es
jns
inc
aam
int
push
jbe
mov
sahf
repz
jge
lahf
mov
ja
or
es
iret
dec
clc
call
cmp
ss
ljmp
lret
addr16
fcmovnb
or
popf
mov
test
push
push
aas
dec
lret
rorl
xchg
imul
cmpsb
pushf
dec
stos
rolb
sahf
sbb
jno
ss
and
pop
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
ret
es
mov
mov
pop
iret
cs
cmpl
pop
fsubrp
cmp
pop
sub
mov
daa
ja
pop
hlt
mov
mov
jnp
and
imul
imul
ss
mov
push
push
test
subb
out
cmp
pop
dec
dec
cli
aas
insb
jg
fsubl
lahf
sub
ficompl
std
test
in
call
sbb
push
add
adc
stc
dec
insb
and
fimuls
adc
rorl
outsl
jmp
or
pop
gs
mov
sub
ss
loop
mov
arpl
clc
mov
pop
ss
scas
push
push
dec
push
jge
push
mov
jb
mov
test
and
fnsave
pop
mov
faddp
push
fidivrl
pop
xchg
rorb
cmp
cmpsb
mov
xor
jecxz
mov
sub
in
xchg
mov
cmp
dec
sti
jecxz
lret
aas
sub
mov
pop
jo
push
lret
imul
mov
outsb
aam
inc
and
push
mov
push
movsl
inc
scas
xor
and
add
xor
push
cmp
movsb
cmpsb
add
add
leave
mov
lods
mull
cmp
pop
lds
lds
inc
jg
shrb
jo
scas
leave
push
mov
aas
movsl
xor
subl
fsubrl
aam
jl
or
std
ja
cmpl
jo
fcomps
push
jae
add
mov
adc
hlt
mov
scas
pop
js
stos
in
fwait
jecxz
xchg
mov
cmpsb
out
mov
adc
popf
fldt
insb
xor
xor
or
jbe
shrl
push
mov
lods
xchg
mov
inc
jp
notb
jo
aaa
in
sar
jmp
divb
movsb
insb
outsb
mov
mov
jmp
loope
stos
jecxz
sar
sbb
push
jb
outsl
jl
test
stc
incl
and
mov
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
xor
jle
adc
mov
shr
dec
pop
mov
or
je
iret
xchg
pop
shll
jle
cmp
or
repz
test
outsl
es
inc
shlb
shrb
test
mov
shr
sbb
insl
icebp
xor
outsl
xchg
push
jnp
push
push
repz
fisttpl
in
icebp
incb
dec
jle
xchg
fcmovbe
call
and
or
arpl
in
cmp
out
loope
xchg
jecxz
insl
jno
cmp
shl
cmp
js
cli
push
jmp
xor
mov
jl
sti
xor
scas
xorl
fwait
aam
in
sub
xor
pop
ljmp
adc
push
jp
dec
sarb
test
mov
stos
xchg
orb
mov
bound
or
push
leave
out
sub
std
and
add
add
inc
addr16
nop
hlt
cmp
in
adc
loope
push
mov
mov
cmp
pop
xor
jmp
or
popl
push
inc
add
je
and
rorl
push
jle
bound
leave
int3
es
adc
xchg
dec
inc
jl
xor
ljmp
shll
sti
push
dec
mov
push
out
and
clc
push
shrb
pop
jmp
lods
cmp
xsavec
js
and
inc
push
mov
mov
and
inc
lret
jmp
pop
dec
sahf
imul
shlb
xchg
repz
test
fcmovne
mov
outsl
jle
pop
mov
jge
in
popa
jp
add
dec
add
add
xchg
xchg
iret
ucomiss
dec
das
insb
push
push
dec
js
negb
fidivrs
lock
mov
movsb
test
mov
fst
sahf
xchg
and
xchg
sbb
ret
daa
add
inc
mov
lods
int3
mov
rolb
push
ljmp
push
or
xorb
cwtl
xor
or
sub
jb
and
enter
outsb
ja
xchg
mov
shll
pop
call
int
cwtl
inc
dec
xchg
in
stos
inc
push
pop
push
es
xchg
jnp
arpl
fildll
mov
and
lret
rorb
pop
call
jbe
add
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
pop
sub
iret
lahf
mov
mov
out
mov
xor
lds
loop
rcll
push
std
hlt
nop
loopne
mov
test
lock
jg
lcall
mov
int3
adcl
mov
addb
lahf
stos
dec
rclb
loope
mov
int3
data16
cs
sub
sbb
out
xchg
cmpb
add
scas
xchg
inc
pop
fiaddl
mov
fisttpl
jmp
stos
jno
xor
loop
dec
loopne
pop
cmp
sub
or
imul
pop
lods
jns
push
mov
xchg
sbb
cmp
and
loop
xchg
imul
sub
pushf
xor
call
enter
jo
cmpsb
sbb
std
xlat
aad
jge
sti
cmp
mov
pop
lret
xor
cmp
imul
mov
add
rol
inc
add
xor
js
hlt
push
popa
dec
mov
fldenv
sub
pop
adc
orl
push
insl
daa
shll
xor
insb
push
stos
xchg
dec
pop
sbb
and
mov
lock
xor
push
push
aam
daa
jno
cmp
cwtl
mov
je
xchg
pop
xchg
scas
fcoml
ds
adc
fwait
ljmp
aam
jl
push
cmpb
xchg
dec
xchg
mov
jmp
addl
add
fucomp
jnp
mov
inc
push
push
mov
xlat
ficoml
pusha
cli
xor
xor
in
in
mov
repz
mov
sbb
push
je
push
mov
dec
call
aaa
inc
and
lret
inc
int
add
or
aam
jo
pop
cmp
push
xchg
pop
addr16
das
pop
std
add
mov
in
inc
xchg
jnp
inc
addr16
sub
in
hlt
mov
test
xor
add
mov
mov
movsl
pop
or
mov
sbb
jle
xchg
scas
int
fwait
subb
add
push
xor
jmp
xchg
int3
adc
scas
pop
icebp
ror
icebp
ficomps
shrb
cmp
ss
fs
cwtl
push
movsb
cs
xlat
jno
out
add
xchg
mov
movsb
push
mov
shl
idivb
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
icebp
adc
fucomp
movsl
mov
mov
insb
pop
movsl
dec
mov
js
and
mov
rorb
xchg
test
aaa
je
aas
dec
push
and
pop
push
jne
inc
nop
mov
stos
xor
lock
repnz
jmp
stc
xor
dec
sbb
mov
pop
sbb
test
fisttps
popa
dec
adc
fs
sbb
hlt
dec
scas
xorl
ret
mov
loop
add
xchg
jnp
and
or
dec
mov
mov
jo
mov
jno
sub
pop
pushfw
pop
inc
inc
lock
inc
dec
mov
imul
mov
sbb
outsb
xlat
shrb
inc
fs
aad
bswap
cmovae
xlat
adc
sahf
lahf
shrl
xor
sbb
in
xor
cli
dec
and
pusha
xchg
dec
lret
pop
and
test
aad
std
loope
adc
jge
test
test
and
xor
push
pop
lods
test
mov
mov
mov
pop
push
iret
pop
mov
iret
mov
incb
icebp
int
and
push
hlt
pop
jo
icebp
aas
testb
sub
mov
push
inc
call
or
or
push
pushf
enter
leave
imul
pop
cmp
xchg
adc
mov
lods
sub
les
call
push
rcll
out
adc
add
out
adc
jp
iret
or
dec
pop
imul
mov
jb
cwtl
int3
xchg
fldt
xchg
scas
pop
jb
fstpt
dec
js
and
andb
inc
int
inc
es
je
push
shlb
imul
test
xchg
xchg
data16
fwait
pop
push
add
fimull
mov
repz
mov
and
mov
ja,pn
mov
sub
sub
mov
into
repz
xchg
add
lods
pop
fs
out
sbb
je
jne
pop
xchg
jecxz
jo
jg
xchg
sub
sub
shrb
imul
mov
mov
pop
jge
dec
add
add
inc
jecxz
xchg
fsubrl
addr16
fcoml
mov
ret
outsl
xor
pop
pop
add
in
inc
iret
push
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
movsb
aad
mov
mov
push
xchg
cmp
aad
gs
mov
mov
push
popa
mov
scas
iret
xor
dec
xchg
outsl
repnz
jae
pushf
lahf
mov
aam
arpl
jne
mov
bound
or
outsb
push
dec
sbb
jnp
fs
test
jecxz
sahf
gs
or
push
add
dec
push
insb
xlat
test
jb
push
movsl
lea
popa
push
mov
and
inc
lret
push
adc
cmc
jae
jbe
not
rcll
mov
mov
ss
mov
and
xor
leave
sbb
iret
out
push
ss
in
mov
fnstenv
adc
popf
popf
xor
sbbl
add
cwtl
pop
push
fwait
popa
mov
inc
jns
pop
push
je
dec
jb
mov
mov
lock
es
lea
mov
cs
ljmp
ffree
stos
and
mov
ret
mov
jns
mov
jecxz
enter
adc
ror
jbe
lods
out
mov
fldcw
hlt
loop
pop
cmc
sbb
enter
jo
out
mov
ja
test
jne
ds
popa
popf
mov
pop
dec
aas
push
xchg
mov
sbb
cmp
dec
push
add
in
loopne
fisubl
mov
xor
lret
xchg
or
adc
jno
test
mov
and
fwait
testb
clc
orl
pop
pop
in
int3
test
jno
addr16
sub
clc
cltd
fsubr
push
sti
sbb
outsb
jae
ss
fidivrl
jle
push
pop
repz
and
das
out
lcall
or
sub
clc
dec
repnz
mov
or
mov
pop
out
mov
cs
push
jmp
orl
imul
jle
sbb
mov
pop
aas
fld
cmp
xchg
mov
dec
mov
mov
mov
shl
cmp
lret
mov
xor
daa
jmp
sbb
shl
pop
sub
cmp
cwtl
shl
xchg
and
hlt
test
inc
stc
or
cwtl
dec
data16
cmovle
sbb
lods
jnp
adc
push
sub
bound
pop
dec
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fisttpll
jmp
rol
scas
mov
mov
addl
inc
es
inc
xchg
jae
out
pop
test
arpl
inc
sbb
into
sub
mov
testb
pop
insb
out
mov
aam
lret
push
in
cli
fiadds
cmp
and
ret
int
dec
mov
cs
mov
les
dec
mov
data16
jb
mov
adc
lret
sbb
in
out
sarl
iret
pop
shll
cltd
lret
roll
insb
sbb
out
shl
jno
mull
fmull
and
les
aaa
test
sub
xor
in
stos
test
dec
sub
mov
xor
movntps
add
jg
mov
cld
mov
mov
xchg
push
adc
ds
lahf
inc
push
in
xor
aad
adc
pop
mov
mov
into
shlb
fcompl
mov
push
imul
aas
enter
push
add
xlat
ret
aam
xlat
lods
pop
and
es
ja
int3
pop
add
sub
mov
outsb
cwtl
rolb
imul
divl
push
out
dec
mov
call
cs
mov
cmc
gs
xor
sbb
mov
shll
icebp
cmp
dec
dec
xor
imul
rclb
xchg
mov
test
insl
dec
cmp
into
gs
xor
shrb
jns
enter
cmpsl
dec
aas
mov
and
fisubrs
mov
xchg
fmull
mov
scas
movsl
je
pop
mov
aam
orl
loope
cld
sub
add
into
fstpl
adc
int
xorl
xor
addr16
inc
add
sti
jg
mov
adc
popa
pop
sub
mov
xchg
xlat
add
pop
adc
jbe
das
je
push
in
ret
iret
jo
std
clc
movsl
das
xchg
std
pop
mov
ljmp
outsl
mov
mov
xor
in
mov
lock
sarb
sub
imul
dec
push
dec
push
mov
lock
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
movsb
sub
mov
mov
jne
mov
sub
outsl
movsb
jle
sbb
mov
fiadds
xchg
mov
lods
mov
xchg
fdecstp
std
or
push
test
xor
dec
test
push
daa
xchg
mov
mov
add
jge
xor
dec
repz
xor
popa
push
pop
cmp
jmp
xor
or
mov
mov
aas
jg
xchg
lds
and
push
mov
inc
inc
mov
push
lds
mov
or
jmp
fstp
ret
hlt
outsb
adc
out
mov
sbb
xor
pop
mov
popa
mov
ljmp
mov
gs
inc
int
mov
scas
stos
out
mov
insb
les
inc
or
lret
out
cmp
sbb
loope
ret
in
xor
aaa
mov
push
mov
push
ret
or
movsb
movsl
sub
push
xchg
dec
bound
into
jl
adc
jbe
scas
data16
aam
push
push
lock
sahf
jle
and
sub
dec
int3
cmp
inc
hlt
cmp
xor
mov
dec
movsb
pop
das
lcall
rorl
or
pushf
dec
loop
iret
adc
mov
pop
lcall
test
ss
js
bound
inc
pop
add
lret
pop
scas
sti
gs
mov
jle
divb
popa
scas
into
enter
rorb
push
sbb
cmp
cmp
xor
das
dec
pushf
pop
bnd
mov
stc
cltd
std
pop
hlt
dec
fsubrs
je
pushf
dec
pop
les
jmp
and
push
sbbl
mov
mov
loopne
cmp
out
push
popa
pop
out
or
icebp
sbb
enter
imul
sub
out
adc
enter
js
xlat
movsb
aaa
and
push
fdivrp
pop
mov
incb
test
arpl
push
incl
cwtl
sbb
fnstsw
cmp
enter
sbb
push
lods
out
jo
push
pop
mov
fildl
imul
inc
mov
subl
jmp
jmp
pop
dec
push
shlb
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
xor
lcall
mov
dec
test
cmpsl
push
jg
dec
xchg
and
pop
loope
inc
inc
xchg
xchg
aas
mov
out
dec
andb
lods
gs
sub
jmp
mov
push
cs
inc
insl
xchg
push
push
loope
xlat
pop
jp
jl
xchg
sub
add
js
mul
pop
popa
lahf
mov
push
aam
icebp
jbe
sub
scas
push
push
pop
sbb
add
mov
and
insl
adcl
call
mov
adc
jecxz
test
repnz
sbb
dec
xchg
mov
sbbb
pop
inc
arpl
xor
int
inc
fcomps
mov
jle
sbb
pop
push
or
in
lret
jb
mov
popl
jbe
mov
ss
jne
mov
mov
and
in
cmc
loopne
dec
popa
mov
push
and
data16
shll
nop
sub
push
int
mov
xchg
ret
in
sbb
sbb
test
push
mov
lahf
mov
jo
push
mov
jle
pushf
adc
push
ret
sbb
shrl
adc
mov
aas
inc
jns
loop
sub
pushf
adc
xchg
jns
xor
push
inc
jp
imul
fcomip
jecxz
add
shl
shll
adc
cmp
iret
adc
sub
mov
or
shll
push
aas
mov
cmpsb
push
pop
pop
xlat
mov
xchg
jno
jge
cli
pop
rcrl
adc
addr16
fscale
fs
into
and
xor
xorl
or
xchg
pop
scas
and
fldenv
rorl
mov
pop
outsb
jge
les
xchg
push
mov
push
stos
dec
inc
js
xchg
inc
pop
jo
cmp
xchg
pop
mov
fisubl
lea
and
int3
in
out
lods
scas
mov
xor
cmp
inc
xchg
adc
fisttpl
test
insb
movsl
mov
dec
loopne
inc
jne
mov
aad
push
andl
sar
xor
jmp
inc
out
add
sarl
xchg
fs
inc
pushf
cld
ja
rcrl
jno
sbb
into
pop
xor
pop
pop
in
icebp
add
fcompl
adc
pop
cltd
dec
jg
lret
mov
orb
push
add
stos
xor
sub
aad
adc
or
mov
test
and
or
and
inc
loop
push
inc
pop
lds
fmul
into
fisttpl
xlat
inc
and
or
cmp
and
imul
lods
movsl
add
dec
jg
push
sti
pop
dec
dec
or
push
int
sub
xor
sbb
dec
bound
xor
pop
sahf
ret
mov
iret
adc
or
test
xchg
addr16
pop
jge
mov
into
xchg
and
repz
loope
mov
inc
jg
xchg
loop
sahf
jmp
stos
dec
mov
aas
scas
jae
pop
jge
jb
stos
cltd
or
pusha
or
or
pop
add
sub
popf
add
sub
mov
mov
inc
mov
jmp
pusha
lods
add
and
daa
sbb
xchg
inc
fmuls
xchg
ficoms
and
mov
pusha
shlb
push
mov
ss
push
ja
dec
ds
test
call
jle
mov
sub
xor
lret
jno
and
mov
in
cmp
mov
std
cmpsl
or
jge
rcl
jae
inc
pop
std
sub
in
mov
xchg
mov
jmp
adc
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
repz
inc
mov
mov
mov
test
jbe
orb
loopne
dec
inc
xor
dec
in
lock
jle
outsl
fists
fs
out
adc
or
lret
shrb
mov
cmc
loopne
mov
sbb
sbb
xchg
mov
popa
lcall
icebp
jnp
mov
ror
lret
pop
add
cmpsl
cmp
gs
push
lods
push
or
imul
mov
mov
push
cltd
sub
and
or
jbe
call
sbb
pop
xchg
push
xchg
sub
mov
xchg
xor
jg
scas
sbb
fwait
loopne
testl
fsin
test
mov
cld
xor
cli
lea
cmp
icebp
mov
pushf
call
xchg
rorb
xchg
shrl
xorb
push
or
mov
xor
adc
fidivs
aaa
cmp
or
mov
jne
adc
jl
shlb
dec
mov
pusha
aas
dec
movsl
mov
sub
jo
push
imul
cmpsl
or
adc
cmp
into
hlt
adc
xchg
xchg
add
lahf
adc
orl
xlat
mov
pop
stos
popf
xchg
mov
mov
jmp
mov
and
fs
cmpsb
push
fsubl
shr
inc
aam
add
cs
insb
sahf
into
or
aaa
pop
les
inc
out
jns
jnp
cmc
insl
add
es
adc
ret
mov
mov
or
cmc
jge
sub
cmp
jle
push
dec
push
cmpsb
ss
stos
fadds
and
aas
popa
lods
data16
loope
inc
pop
cmp
fidivrs
dec
scas
pop
pop
std
add
sar
in
test
loope
test
mov
loope
in
mov
hlt
and
adc
sahf
push
add
jg
imull
pop
push
pop
sbbb
pop
xor
dec
jl
mov
lods
sbb
mov
cmpb
ja
les
adc
cmpsl
pop
loope
aad
xchg
mov
adc
ret
incl
mov
xchg
add
or
xor
lods
xor
dec
in
xorl
add
cmp
test
pop
dec
xchg
mov
push
adc
stc
sti
je
sahf
loopne
inc
imul
arpl
mov
jo
sbb
add
mov
pmulhuw
xchg
cli
fstpl
test
hlt
je
push
xor
mov
cmpsl
jne
mov
pop
lahf
add
rcl
xchg
sbb
call
lods
loop
sub
pop
sbb
ret
add
mov
clc
cmp
adc
jmp
das
cmpsb
add
inc
mov
cmpsl
jno
inc
or
int
mov
xor
push
pop
mov
xchg
sub
dec
loopne
fwait
xchg
sahf
call
aam
adc
je
lcall
js
adc
push
mov
xchg
cmp
divb
icebp
pop
cs
xchg
sbb
add
add
fcompl
cmpsl
dec
idivb
bound
mov
dec
in
pushl
adc
pop
es
cmp
imul
mov
push
inc
pop
imul
pop
test
mov
dec
daa
daa
and
xchg
lret
clc
leave
push
dec
in
fs
jnp
push
dec
icebp
jno
cmpsl
inc
in
subb
call
push
sbb
push
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
jecxz
mov
mov
addr16
and
mov
xor
shlb
into
test
pusha
push
das
and
gs
mov
lcall
adc
or
mov
mov
dec
sub
arpl
push
mov
cmp
lock
and
int
loop
repz
addr16
repnz
sub
push
jl
lock
mov
pop
mov
pop
add
xchg
ror
pop
inc
ss
lret
hlt
imulb
cltd
sbb
fmuls
roll
stos
fstpt
cli
cmpsl
sbbl
cmp
scas
and
xor
lea
popa
addb
lret
pop
movlps
pop
inc
inc
gs
jae
dec
push
in
outsl
push
mov
inc
fcompl
fcmovb
dec
out
sbb
sbb
mov
sti
idivb
jnp
xchg
mov
sub
pushf
sub
stos
inc
outsb
aad
cmp
pop
xchg
jne
adc
test
mov
std
sub
fnsave
adc
pop
lds
dec
idiv
lods
cmpsl
xor
cwtl
jnp
inc
sti
je
cmp
adcl
cli
lods
mov
imul
or
insb
out
in
or
bnd
mov
int3
fdivrl
stc
add
xchg
test
in
scas
jmp
jnp
mov
sub
test
shlb
sbb
sbbb
in
mov
xchg
jecxz
lret
mov
adc
xor
cmpsb
fbld
std
js
lcall
data16
loope
lods
push
inc
xor
fadds
mov
fldl
scas
sub
inc
mov
sbb
icebp
aas
int
movsb
int3
mov
addl
jnp
inc
js
shlb
pop
imul
adc
outsb
sahf
out
rclb
repnz
inc
cmp
add
mov
dec
stos
mov
push
lods
mov
out
jo
adc
scas
out
mov
sbb
fcmovne
in
das
pop
insl
add
dec
sti
shll
stc
dec
insl
sub
jmp
push
scas
sarl
adc
mov
lods
lea
stc
xlat
test
jp
xor
sbb
lds
stc
jmp
xor
pop
jge
repnz
leave
jne
sub
jecxz
add
leave
sarl
cmc
ffree
mov
fistl
mov
cld
pushf
mov
sbb
lcall
xor
mov
popf
mov
out
sub
bound
pop
jl
inc
xchg
pop
clc
pop
dec
mov
xchg
popa
lods
push
loopne
push
jne
xlat
or
mov
fiaddl
outsb
and
xlat
loop
mov
jle
mov
fisubl
cli
cld
pusha
std
adc
mov
mov
cld
pusha
out
push
pop
push
fistps
insb
pop
movsb
cmp
jl
mov
and
jne
mov
popf
and
mov
mov
daa
xchg
cmp
dec
ja
mov
jge
in
push
lods
out
icebp
inc
pop
dec
add
nop
cmpl
sub
mov
das
pop
mov
clc
mov
inc
dec
push
mov
aad
cmp
cmp
test
hlt
outsl
cmp
sbb
mov
int3
imul
dec
and
inc
pop
data16
jg
nop
pop
xchg
xlat
es
test
in
addb
sub
xchg
daa
dec
dec
data16
cmp
or
adc
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
rcll
iret
mov
mov
mov
ds
mov
mull
das
and
mov
add
mov
out
movsl
es
cs
std
or
lods
adcb
daa
push
mov
push
add
sbb
ljmp
stos
in
or
pop
in
inc
fs
xor
xchg
in
int3
out
scas
lcall
add
dec
addb
das
cmpsb
aas
sub
rolb
addr16
outsl
cmpsb
sbb
mov
cvttps2pi
aas
out
std
xor
dec
outsl
xor
stc
imul
mov
loope
divb
mov
pop
inc
adc
and
adc
mov
cmpsb
rcr
ret
inc
sbb
cmpl
sub
mov
push
jge
jnp
mov
outsl
jnp
or
gs
pcmpeqb
stos
inc
mov
jp
les
inc
cmp
pop
mov
fcmovnbe
sbb
dec
ret
cmp
mov
test
sbb
mov
sub
and
mov
scas
sub
pop
inc
ficomps
xchg
test
shl
flds
xchg
cmp
int3
test
les
dec
xorb
adc
mov
push
or
sahf
stos
es
cmp
sahf
pushf
add
mov
inc
or
popf
sbb
sbb
daa
rorl
fstl
aam
sahf
popf
test
test
loopne
pop
or
pop
or
pop
mov
mov
sub
mov
or
xchg
fmulp
sub
jbe
and
adc
sbb
test
add
ret
jg
jne
or
push
int
psrlw
fld
out
shlb
xchg
jecxz
inc
lret
lret
dec
ret
aam
mov
push
stos
add
add
repz
jle
jne
inc
jl
mov
addr16
stos
mov
hlt
das
push
mov
je
mov
inc
jg
sub
gs
push
dec
out
adc
lods
enter
push
push
out
je
ljmp
dec
and
dec
ds
fcomps
outsl
xor
xor
out
sbbb
lea
xchg
jle
mov
push
xor
mov
scas
in
push
in
pop
jge
jne
mov
dec
je
fimull
sarl
not
cmc
ds
fcomps
mov
push
add
inc
inc
add
js
loopne
or
sti
push
or
pop
mov
dec
jecxz
cs
jecxz
jmp
or
sub
cmp
or
rcrl
mov
rcll
aad
mov
cmp
xchg
jle,pt
mov
gs
lds
jmp
xor
jp
ja
sub
out
mov
es
test
dec
insb
lcall
ljmp
adc
sbb
adc
das
loope
out
jbe
cwtl
dec
cmc
enter
xor
xor
cwtl
or
aam
js
jno
ret
or
test
pusha
add
mov
repz
std
and
imul
inc
mov
mov
out
add
pop
pop
arpl
fmull
js
je
in
pmaxub
mov
inc
push
fiadds
js
sbb
js
cmp
add
mov
out
fstpl
shll
push
jecxz
adc
hlt
es
icebp
push
enter
shll
add
pop
jmp
jmp
testl
notl
andl
scas
mov
mulb
fldt
cmp
push
xchg
dec
lods
sahf
sbb
movl
movl
mov
jmp
fisubrl
mov
or
aad
jmp
les
xchg
xchg
sbb
pop
xchg
lcall
loope
dec
lret
mov
jl
sahf
jb
gs
add
test
popl
scas
stos
out
scas
jb
shrb
mov
mov
jb
cmp
es
test
imul
dec
add
mov
push
rcrb
sub
fdivrs
daa
in
out
inc
fisttps
jle,pn
andl
jbe
xor
out
fidivs
add
repz
xchg
pop
push
gs
sar
and
adc
scas
xchg
cmp
or
lds
mov
jg
xor
dec
repnz
movsl
in
sub
inc
js
test
icebp
arpl
cwtl
pop
add
in
test
pop
sub
sbb
scas
test
icebp
pop
sbb
mov
inc
inc
lahf
jl
push
adcb
and
xor
push
add
call
and
inc
sbbl
sbb
andb
mov
cmp
adc
enter
gs
inc
add
and
sahf
or
xlat
dec
into
inc
mov
pop
mov
cmp
xor
ret
sbb
mov
movsl
test
jnp
jb
or
pusha
ret
adc
adc
rcrl
movsl
adc
xchg
xor
mov
cmp
popa
data16
loop
dec
pusha
jp
in
mov
out
rclb
jns
js
sti
fcmovbe
shlb
push
fstps
jae
add
test
and
stos
mov
repnz
idivb
pop
or
inc
xlat
nop
movsl
add
xchg
jns
addl
dec
jle
shr
and
push
jae
cwtl
push
js
cmp
jg
stc
xchg
into
and
inc
and
stos
mov
mov
xchg
stc
mov
shlb
pop
mov
div
je
push
sti
mov
inc
popf
les
test
lock
enter
mov
mov
add
mov
inc
mov
movsb
outsb
popa
mov
daa
outsl
mov
in
or
icebp
sub
loopne
pop
xor
sub
jnp
dec
dec
fiaddl
sarb
mov
and
fisubl
pop
loopne
adcl
insl
pop
and
cmp
jmp
gs
push
loope
roll
sbb
cwtl
call
xchg
mov
loop
or
add
add
mov
filds
shr
or
repnz
push
dec
push
aad
outsl
sbb
add
mov
lret
daa
ret
jp
and
inc
jb
mov
shrb
ret
and
lock
jmp
xchg
xor
cld
push
xchg
scas
fisttpll
and
pop
adc
push
push
cs
or
add
ss
adc
lock
popf
inc
data16
iret
lahf
daa
int3
push
lahf
xlat
push
pop
and
rcrb
cwtl
enter
addr16
pushf
mov
push
and
adcb
scas
push
movsl
sub
mov
icebp
fcomps
pop
xchg
cmp
movsb
jo
ret
ror
add
fwait
mov
enter
ret
mov
dec
xchg
dec
fsubp
sub
jb
jecxz
and
out
addr16
mov
or
mov
movsl
aaa
mov
loope
push
insl
add
xrelease
test
xor
loope
stos
flds
and
lods
adc
stos
push
pop
test
cmp
in
xor
das
jge
pop
clc
call
push
jle
push
adc
fisttps
or
inc
push
mov
mov
cmpb
and
repnz
push
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
mov
mov
mov
divl
jle
mov
push
xchg
lret
aad
lds
lret
in
divb
insb
jl
xor
jge
fwait
iret
nop
ss
inc
mov
xchg
js
inc
mov
mov
pop
fildll
test
stos
inc
jl
mov
jecxz
xchg
sub
stos
call
lcall
cmp
repnz
mov
push
popa
push
cmp
fstpt
daa
mov
fdiv
xchg
pop
and
mov
imul
inc
pop
pop
xchg
ret
into
mov
outsb
test
andb
jge
sarb
frstor
and
shl
mov
les
and
lods
das
decb
les
imul
xor
pop
icebp
lock
fidivrs
and
out
out
push
jns
not
out
dec
inc
xchg
mov
addb
negl
ja
fs
mov
std
loopne
addb
loope
pop
add
imul
jp
aam
push
adc
xor
sti
sub
sbb
adc
dec
cltd
lods
push
push
jl
jecxz
pusha
in
cmpb
inc
lret
pop
lcall
jnp
inc
ret
push
push
ror
mov
inc
or
movhps
jb
push
cmp
fists
pop
push
cmpsl
enter
xchg
push
stos
popa
dec
mov
lea
push
lahf
xchg
add
out
mov
dec
out
fcomps
jbe
loope
mov
sbb
fwait
push
pop
sti
aad
adc
ret
std
popa
imul
je
aam
ret
out
push
lret
out
movsl
mov
add
fnstsw
call
mov
fdivl
and
push
push
sbb
ret
mull
insl
jno
cmc
icebp
into
and
divl
and
cmp
shl
jbe
jmp
or
push
cmp
aaa
fidivrs
test
pusha
lahf
dec
adc
and
jl
icebp
push
xchg
lcall
cmpsb
cmpsb
loop
jecxz
sub
add
loop,pn
dec
lahf
xchg
aam
mov
xchg
lds
in
mov
fldenv
cmp
cs
cmp
mov
xchg
jbe
push
mov
data16
and
call
jb
out
into
xchg
cli
push
mov
mov
add
mov
rclb
je
push
jp
cld
mov
push
dec
mov
mov
out
cmp
jmp
pop
ja
cmp
fcmovbe
mov
mov
xlat
push
imull
mov
cmp
lods
daa
dec
frstor
dec
sbb
addr16
adc
sbb
in
mov
mov
cmp
outsl
and
mov
add
sub
and
int3
jnp
inc
repz
mov
ret
xchg
cltd
mov
jnp
sarl
shrl
xor
mov
loope
pop
mov
into
lods
pop
in
test
incb
dec
mov
xchg
jb
fs
das
sub
daa
jo
xor
and
cmp
push
xchg
pop
sub
push
inc
push
int
ljmp
fidivl
jno
fcmovb
std
shll
orl
stos
push
cld
push
out
call
fidivl
test
adc
inc
shll
push
jl
popf
mov
pop
aaa
stos
adc
fmull
das
dec
mov
lcall
mov
mov
inc
pop
adc
or
popf
mov
xchg
in
popf
lods
gs
adc
dec
ror
sahf
rolb
sbb
repz
pop
jmp
lods
pop
and
pop
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
fldenv
mov
mov
inc
inc
cmpsb
xchg
repz
std
mov
ficoml
cmp
inc
mov
cmp
push
xlat
mov
leave
pop
std
decb
adc
pop
popa
sbb
mov
stos
add
mov
cmpl
mov
call
jb
fcomp
push
push
leave
or
mov
mov
stos
jnp
adc
push
fs
sbb
jns
and
repnz
fstpt
out
movsb
inc
sti
fsubs
mov
mov
mov
push
add
xcrypt-cfb
cmpsl
fsubrs
test
jmp
outsl
mov
mov
dec
insl
addr16
xor
imul
popa
scas
push
fwait
sub
lret
mov
ret
outsl
dec
sub
push
lds
xchg
pop
daa
lahf
jns
sub
pop
and
scas
mov
sub
lods
not
push
dec
scas
inc
jno
sti
outsl
pop
mov
mov
sahf
xor
ss
and
and
jae
into
mov
sbb
push
xor
mov
shlb
ret
dec
adc
fmuls
out
or
mov
loope
sub
repz
out
jmp
ret
fs
sbb
or
das
sbb
sbb
xchg
mov
int
test
js
and
inc
jle
lock
add
shlb
adc
xor
xchg
test
mov
rcl
lret
pop
add
into
dec
xchg
push
push
lret
cmp
in
inc
pushl
dec
sub
and
dec
dec
lret
mov
lcall
sbb
cli
mov
fs
inc
adc
pop
or
es
push
xchg
mov
fcompl
mov
mov
and
or
sbbb
mov
das
popf
push
dec
xor
mov
mov
insb
push
add
push
dec
imul
pop
sbb
das
repnz
fisubl
lahf
shl
mov
scas
push
pop
mov
cmp
pop
sbb
jbe
xchg
sarl
flds
in
jmp
in
int
push
mov
or
adc
jge
lods
jbe
popa
sub
aad
mov
mov
push
rorb
mov
jo
hlt
and
test
pop
mov
call
push
sub
cmp
loopne
aad
adc
hlt
xor
pop
jmp
test
stos
lcall
adc
aas
jp
sbb
mov
sbb
insl
iret
stc
movsb
push
mov
inc
dec
bound
stos
fisubs
leave
aam
fwait
xor
push
outsl
xchg
add
xchg
imul
xorb
icebp
inc
sbb
push
pop
cmp
xchg
cmp
jbe
cmp
test
movsl
cmp
daa
xor
stc
xor
sti
sbb
scas
sbb
dec
in
sarb
sub
aaa
xor
cmp
dec
test
movsb
adc
cmp
bound
pop
xor
loopne
sbb
mov
jbe
testb
xchg
lret
or
out
stos
insb
adc
jns
mov
jo
add
mov
add
out
and
push
fistpl
cmc
stos
jnp
lods
jne
cmp
and
cmp
fistpll
ret
sub
sbbb
pop
in
xchg
cli
dec
jne
pop
inc
add
fs
lret
daa
pop
pop
mov
push
nop
icebp
hlt
ds
mov
in
or
hlt
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
xor
jecxz
gs
mov
mov
imul
rorl
and
mov
leave
dec
fisttpl
clc
inc
mov
jne
add
jecxz
das
mov
outsl
stos
hlt
xorl
cli
shll
push
adc
decl
push
adcb
mov
les
inc
dec
jmp
sub
lret
dec
js
adc
hlt
jnp
push
mov
imul
repnz
xchg
push
mov
adc
push
and
inc
sbb
or
pop
into
shlb
pushf
fmull
sub
sub
push
pushf
push
cmp
or
leave
sbb
mov
test
push
sbb
xor
lahf
adc
hlt
ljmp
fld
loope
gs
ret
pop
push
push
add
sbb
bound
pusha
ss
jp
lock
test
loop
out
mov
stos
std
mov
leave
add
es
test
mov
mov
cs
aad
out
xchg
mov
hlt
imul
out
push
dec
imul
mov
mov
sbb
sbb
add
out
hlt
push
ljmp
rcrl
cmp
dec
mov
scas
aaa
icebp
std
jecxz
data16
scas
cmp
rcrb
imull
pusha
sub
inc
mov
add
adc
stos
repz
lcall
add
addr16
cmp
and
jle
push
jb
mov
jb
add
lea
mov
stos
inc
xchg
pushf
jp
bound
arpl
fistpl
inc
fadds
test
mov
sub
pop
xchg
sbb
and
aas
cmp
cmp
pop
mov
xchg
sub
mov
pop
add
mov
pusha
cmc
addl
pop
xchg
stc
xor
mov
mov
adc
popf
les
sub
or
mov
mov
dec
movsl
sbb
mov
sbb
cmp
cmp
into
sbb
stos
ret
or
outsl
add
test
jno
sti
xchg
jg
xchg
fisubl
fnstenv
xchg
xor
jmp
or
ret
in
xchg
or
lods
mov
sub
add
mov
pop
and
pop
or
fisttpl
jno
enter
or
lret
fsubs
mov
inc
sar
int
dec
adc
sbb
or
push
jge
fs
gs
sub
mov
lret
xchg
cmp
sub
je
loop
cltd
arpl
int
shll
xorl
repnz
cld
pop
pop
pop
pop
pop
xchg
pushf
mov
mov
dec
loop
dec
fidivrl
aad
insb
js
push
scas
mov
sti
jecxz
cltd
push
mov
xchg
in
les
mov
imul
jbe
shlb
push
outsb
inc
jmp
iret
int3
ljmp
or
gs
aad
jl
push
sahf
or
lahf
mov
jmp
mov
jno
mov
out
xchg
into
xchg
sub
aam
lcall
into
push
push
in
fcoms
ret
loope
push
mov
inc
std
push
iret
leave
mov
loopne
add
stos
popa
cmpsb
push
adc
mov
inc
mov
test
cmp
xchg
and
jae
xchg
aam
inc
push
mov
and
movlps
ror
nop
fnsave
or
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
shl
leave
push
sarl
clc
mov
mov
fistps
out
xlat
jbe
xorl
adc
cmp
cli
add
lahf
notb
sbb
dec
dec
xor
jne
pop
pushf
adc
push
mov
sub
or
outsl
or
fsub
lret
out
ds
scas
ljmp
xor
jb
add
add
xor
and
pop
lea
inc
inc
sub
push
cmp
inc
push
fwait
and
mov
lods
mov
nop
xor
sbb
ret
or
adcb
jecxz
into
pop
push
scas
arpl
not
push
xchg
inc
sbb
mov
xchg
dec
mov
xlat
xor
cmp
in
addl
dec
mov
inc
dec
sbb
mov
movsb
pop
testl
jno
outsb
dec
std
jno
cmp
xchg
repnz
inc
cmp
out
cmp
mov
rcrb
loop
pop
daa
icebp
pop
call
sub
cmc
stos
rclb
dec
jae
mov
and
cld
cmp
insb
adc
push
in
xlat
adc
ja
out
jecxz
add
shll
jle
fisttpl
iret
xchg
mov
stos
lock
push
xchg
decb
xchg
mull
cmp
aaa
leave
lahf
mov
mov
arpl
mov
aas
mov
mov
orl
mov
push
mov
jb
or
addr16
or
sbbl
sbb
inc
aaa
in
sub
or
cwtl
xor
dec
shll
xor
mov
popa
jg
mov
arpl
pushf
push
pop
fld
jp
mov
cs
mov
inc
and
pop
repnz
mov
popa
movsl
pushf
add
inc
or
or
and
lret
push
push
sbb
fsubrs
add
push
je
imul
jp
xchg
push
idivb
pop
cmp
test
dec
aad
xor
xor
mov
mov
mov
inc
test
and
stos
dec
mov
adc
repnz
pop
and
mov
aas
push
inc
mov
mov
std
mov
test
xor
xor
inc
call
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
in
add
mov
mov
or
dec
dec
xor
mov
sub
jl
mov
call
mov
shll
xor
lahf
or
jns
mov
sbb
mov
jmp
bnd
mov
daa
mov
mov
mov
hlt
push
das
loopne
xchg
jecxz
jae
cmpsb
mov
fwait
sti
mov
ret
xchg
pop
pop
popf
lds
aam
ret
fdivl
sbb
insl
dec
scas
push
out
xor
or
mov
test
dec
lret
out
mov
xor
jp
or
mov
in
iret
sub
enter
lds
mov
mov
fcoml
fwait
mov
inc
push
sbb
test
fs
in
hlt
inc
cld
inc
lods
int
jbe
fwait
pop
stos
add
cld
js
lret
adc
sti
jecxz
and
pop
test
scas
popf
jb
mov
push
add
add
inc
mov
adc
mov
icebp
push
sub
repz
in
add
push
loop
mov
imul
icebp
mov
loope
cltd
lret
clc
or
jne
sub
leave
sub
dec
and
jge
sub
sbb
in
stc
out
mov
lcall
sub
mov
out
sti
inc
ss
inc
inc
or
adc
test
lret
push
lock
lcall
stos
mov
test
es
sti
or
cmp
ss
icebp
jge
cwtl
out
fisttpl
inc
aas
lods
jp
dec
xor
lock
aaa
sahf
iret
out
arpl
pop
imul
mov
fs
jg
shlb
mov
mov
adc
or
or
sbb
push
xlat
out
out
out
int
push
jb
add
outsl
test
jbe
and
loopne
mov
mov
lret
int3
jge
inc
int
sub
rclb
shr
adcb
loopne
jnp
xchg
adc
mov
addb
in
aam
cwtl
xchg
or
add
push
mov
pop
inc
dec
imul
cmp
xchg
mov
lods
aaa
sar
inc
push
ljmp
pop
jne
negl
cs
mov
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
fwait
mov
mov
mov
cmc
jo
xor
add
addb
cwtl
push
add
add
mov
ss
push
icebp
daa
jge
enter
inc
cmp
pop
pop
adc
repz
mov
sbbb
mov
in
push
xchg
jp
mov
fsubrp
push
jle
mov
sahf
xchg
in
mov
rorl
pop
rcrl
pop
xchg
push
in
outsl
adc
faddl
push
inc
addr16
xchg
ficompl
scas
repz
sbb
repnz
cmp
adc
aaa
adc
pop
push
test
int3
pop
cmp
add
in
mov
pop
out
cmp
mov
fwait
jmp
lret
ds
jle
push
imul
loopne
mov
sub
xchg
push
mov
scas
and
loop
cmp
jg
fcompl
dec
stos
mov
fsubrs
lcall
arpl
jmp
push
in
and
push
shlb
mov
je
fnstsw
mov
jecxz
xchg
dec
insb
in
clc
loopne
mov
je
dec
dec
mov
push
push
push
push
int3
pop
xor
popf
mov
xchg
cmp
add
lods
xchg
add
negb
cli
rcr
in
cmpsl
xchg
xor
adc
push
into
jmp
adc
mov
inc
jg
xor
push
cltd
cmc
mov
shlb
push
mov
dec
scas
xchg
ljmp
jns
shlb
and
aaa
in
push
call
js
or
push
push
add
das
cmp
mov
or
xchg
xchg
xchg
mov
add
out
movsl
scas
call
scas
sbb
sbb
cwtl
push
jmp
scas
xchg
cmpsb
pusha
fsubrl
aaa
ss
inc
jg
dec
dec
mov
inc
outsl
mov
scas
pop
jle
and
pop
out
mov
stos
inc
bound
lret
sbb
std
dec
adc
mov
jb
nop
pop
sub
shl
xor
and
jo
movsl
stos
mov
jnp
rcrl
xor
sbb
dec
pop
lods
aaa
push
push
rolb
and
mov
add
orb
xor
adc
xchg
mov
sbb
insb
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fstl
outsb
push
mov
mov
in
pop
push
ds
jle
inc
inc
pop
push
icebp
cmpb
add
push
sahf
dec
mov
mov
fs
pop
ja
push
fists
pop
in
dec
jo
and
dec
and
push
cli
xchg
stos
push
pop
enter
push
cli
push
pushf
sahf
mov
sbb
test
rolb
testb
dec
xor
in
pop
jbe
xchg
xchg
repz
into
cmp
mov
inc
cmpsb
pushf
in
int
cmp
xchg
enter
xchg
aas
push
sarb
add
sbb
pop
adc
lea
pop
stc
jmp
aad
lods
add
or
je
pusha
inc
add
popa
add
arpl
xchg
push
xchg
out
int
call
popl
je
icebp
movsl
xchg
pmulhuw
pop
pop
cmp
cltd
and
cmc
cmpb
fnstsw
cwtl
cmp
add
push
inc
imulb
dec
lds
aad
jns
mov
jmp
xor
rorl
mov
or
cmp
xor
mov
jnp
das
popf
loop
outsb
adc
adc
mov
clc
mov
popa
jnp
hlt
xchg
and
scas
jp
cmp
xchg
push
push
add
ficoms
fcoml
jle
push
daa
arpl
imul
lret
rcl
sarl
test
add
and
in
jno
inc
jno
pop
imul
iret
xchg
jae
cs
mov
sbb
mov
lods
in
xchg
push
sub
sbb
addl
ss
mov
add
push
pop
dec
pusha
dec
ret
rclb
adc
rcrl
cwtl
cmp
lret
enter
xor
leave
push
dec
sub
mov
ljmp
dec
or
mov
cmpsl
in
pop
mov
jbe
popa
repz
loopne
jmp
bnd
mov
sbb
sbb
out
negl
int
dec
leave
mov
xchg
mov
subb
xor
mov
pop
mov
lret
jg
cld
sbb
or
xchg
roll
add
mov
sub
lock
stos
xchg
cmp
int3
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
iret
stos
or
mov
into
xlat
jno
mov
loopne
push
pop
les
cmp
daa
rol
pushf
je
ss
and
es
iret
mov
mov
lret
and
add
pop
xchg
sbb
jns
adc
icebp
xor
negl
arpl
push
mov
bound
out
addl
test
or
xchg
in
inc
in
push
mov
pop
movsl
xor
mov
fwait
or
pop
and
xchg
inc
inc
clc
dec
sahf
xor
mov
fistl
push
and
xlat
cltd
fidivrs
sbb
loope
shl
imul
and
scas
sbb
fidivl
sub
fstpl
int3
inc
dec
jl
std
push
pop
aad
mov
mov
pop
cwtl
std
nop
repz
push
jno
sbb
test
xchg
jg
flds
loop
mov
out
loop
pop
les
add
mov
cmp
popf
adc
sbb
aam
xchg
push
fprem
xchg
inc
sbb
movsl
mov
xchg
pop
xchg
cwtl
je
cmc
aaa
or
ret
jle
rorb
pop
js
xchg
push
mov
ret
aam
adcb
mov
lcall
popf
ret
inc
mov
fwait
xor
sub
cld
rcr
mov
mov
sub
sahf
sbb
xor
jg
test
gs
inc
dec
sub
cwtl
data16
leave
les
mov
mov
pop
sub
lret
leave
pusha
shlb
imul
dec
xchg
aam
sbbl
out
xchg
mov
sar
and
js
icebp
addr16
test
ja
outsb
repz
xor
dec
test
enter
or
mov
sub
scas
out
outsb
cmpsl
lock
and
dec
sub
mov
pop
jecxz
or
jmp
cmc
popf
into
pop
dec
pushf
mov
cmp
aad
inc
lock
inc
fidivl
rol
insl
in
nop
jg
pop
sub
pop
data16
insl
enter
jno
pop
mov
cmpsb
roll
fbld
mov
and
inc
pop
cmp
jg,pn
inc
aas
imul
or
xchg
push
stos
lret
pushf
dec
daa
push
pop
xchg
pop
movb
xchg
in
push
or
lahf
pop
int
sub
ucomiss
daa
sti
sub
jp
cmp
dec
fistl
pop
dec
roll
popf
jo
inc
shlb
repnz
js
call
dec
sbb
lea
divl
xchg
xor
outsb
ljmp
pop
rorl
mov
ret
add
inc
cltd
into
popa
arpl
add
mov
in
mov
inc
dec
into
pop
mov
scas
or
fwait
pop
ljmp
mov
sub
pop
mov
cmpb
xchg
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
addl
sahf
in
adc
mov
inc
adc
mov
rorl
push
xchg
jle
mov
cmc
popa
sbb
and
test
pushf
inc
jle
mov
ds
loopne
out
adc
scas
pop
push
icebp
imul
je
mov
rcrb
rol
flds
clc
xor
mov
xchg
mov
mov
add
and
push
or
pop
es
sub
or
pushf
dec
mov
mov
add
aas
aaa
in
push
cmpsb
mov
sbb
lcall
test
fmuls
cmpsb
push
loop
test
and
inc
loopne
shlb
lock
es
popf
cmc
outsl
in
and
jl
and
aad
rorb
testl
mov
mov
mov
fld
cmp
addr16
mov
sbb
push
xor
inc
mov
adc
sbb
cwtl
in
cmp
ljmp
or
inc
mov
push
test
sub
sbb
push
push
rcll
popf
dec
mov
inc
out
mov
mov
xor
in
stc
dec
lcall
push
in
in
xchg
fcmove
or
add
cmp
inc
or
push
fsubrs
push
xor
fadd
push
jb
pop
popa
cs
repz
push
jae
xchg
xor
sbb
xlat
add
pop
clc
popf
xchg
hlt
hlt
aam
aaa
cs
mov
xor
scas
mov
ja
jmp
mov
fbstp
and
fmull
jb
stos
push
ret
cs
jns
inc
jl
xchg
xchg
adc
cmpsl
push
es
fldenv
jnp
cmp
iret
std
push
adc
mov
sahf
decb
imul
xor
fiadds
int
sbb
loop
movsb
sbb
int
cltd
dec
sbb
lods
push
xchg
rorb
and
lods
in
js
aam
sbb
bnd
cmp
mov
aaa
and
xchg
out
xlat
jg
addr16
pop
testb
pop
lock
icebp
push
dec
push
cs
mov
lds
inc
sub
xchg
out
jns
cmpsl
arpl
dec
xchg
sub
mov
mov
pop
lea
push
push
inc
pop
cmc
cmp
in
jne
add
and
imul
in
sub
jmp
mov
xchg
jle
mov
int
je
imul
inc
mov
dec
les
shr
inc
in
pop
pusha
xor
loope
mov
lret
mov
sbb
arpl
cld
mov
xchg
inc
rcrl
xchg
jne
lret
push
inc
into
loop
rcrb
repnz
fistps
pop
ljmp
lods
rolb
mul
loope
aad
loop
mov
or
dec
mov
sbb
add
add
add
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
pop
jb
xor
mov
mov
in
ficompl
mov
jecxz
shll
mov
cwtl
pop
sbb
loopne
pop
inc
sub
or
ret
stc
je
sub
mov
mov
push
ret
lret
cmp
mov
lahf
dec
in
mov
inc
notl
test
pop
jp
dec
or
mov
jecxz
inc
push
xor
pop
inc
mov
xacquire
add
jp
ja
adc
pushf
inc
movsb
sub
or
cmp
test
push
mov
jecxz
test
push
callw
inc
popf
add
sub
cmc
fnsave
mov
insb
push
or
inc
pusha
xchg
jp
jae
add
dec
jnp
push
lods
outsb
lods
ret
and
dec
sub
push
adc
loopne
adc
inc
js
sub
pop
movl
gs
or
outsb
jp
fcoml
loope
insl
push
adc
mov
mov
inc
cs
mulb
xchg
jns
adc
in
mov
rcrl
jmp
mov
pop
mov
pop
jnp
rorb
call
jno
xor
sahf
into
flds
ds
testb
ret
mov
test
jmp
xchg
pushf
or
inc
or
in
jns
fdivrs
xorl
or
xor
outsb
xor
mov
or
mov
popf
cmp
loopne
mov
and
aaa
mov
lods
jb
lcall
insb
xor
psubusw
pop
icebp
jl
in
jns
cmp
test
std
popa
add
lahf
cmc
ljmp
bound
xchg
fnstcw
jb
cmp
sarb
outsl
orb
ja
add
pop
add
and
jle
xor
or
add
or
in
call
push
into
jp
mov
mov
sahf
loope
and
rorl
pusha
jo
cmp
cwtl
pop
ss
loope
shrl
or
dec
lods
jo
sahf
loopne
xor
ds
pop
call
or
sub
lea
push
insl
cld
and
sti
in
sbb
pusha
jno
mov
xor
xchg
mov
mov
scas
movsb
xchg
fstl
pushf
int
rclb
shlb
cmp
pop
jle
mov
mov
aas
xorl
pop
jb
daa
sbb
lock
inc
inc
aad
hlt
dec
idivb
jmp
in
add
and
dec
pop
jmp
adc
xchg
subb
xchg
push
mov
jb
fwait
add
inc
dec
pop
mov
cmp
and
mov
mov
or
mov
jge
rolb
insl
popa
in
sahf
push
pop
dec
shrl
loope
std
xchg
xchg
inc
jnp
push
pusha
insb
dec
jge
jns
xchg
outsb
lcall
push
hlt
std
aam
dec
stc
and
movl
decb
jae
hlt
shrb
andb
ljmp
adc
adcl
movsl
jg
rol
mov
lret
cmp
rcll
adc
lret
aas
xor
xchg
inc
test
xor
add
inc
lods
mov
inc
mov
dec
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
push
cli
fninit
pop
push
mov
mov
push
outsb
mov
and
inc
push
test
push
add
cmp
shrb
lods
shl
lods
jge
and
ja
call
xchg
mov
sbb
fwait
mov
arpl
lods
pop
dec
pop
test
xor
stos
pop
and
not
leave
subl
andl
jne
sub
push
lock
push
dec
subl
movsb
xchg
or
in
test
pop
mov
jp
and
mov
lods
shlb
dec
xchg
xchg
push
mov
jne
pop
repz
stos
fxch
and
lahf
lret
outsb
pop
sbb
xchg
and
popf
jo
in
orl
push
push
push
in
add
cmp
fnstsw
cmp
rcr
lret
jle
in
imul
xchg
mov
or
mov
movsl
push
jno
mov
repz
add
lea
push
lock
cmp
out
or
dec
pop
sahf
inc
and
sbb
cld
icebp
push
mov
movb
lock
and
dec
rolb
popa
cs
xchg
xor
cltd
sbb
xor
clc
adc
aad
xchg
aaa
cmp
aam
jo
pop
icebp
push
dec
jno
rol
cmpsl
jns
cwtl
sbb
inc
nop
cmpsl
lods
out
popa
inc
icebp
or
out
mov
sbb
cmpl
inc
mov
push
sub
sub
push
dec
int3
sar
leave
pop
adc
mov
pop
ror
addb
adc
fisubl
push
and
aam
cs
inc
out
dec
mov
daa
pop
aas
jmp
clc
adc
jmp
cld
pop
mov
mov
pop
mov
mov
dec
iret
cli
subb
es
shr
lret
bound
fcomi
sub
js
add
xchg
shlb
mov
shr
dec
ret
mov
xchg
jle
pop
jecxz
repnz
push
or
shll
insl
or
sbb
loop
cld
xchg
push
add
fiaddl
stos
cs
xrelease
insl
fisttpl
inc
fadds
jo
cmp
push
hlt
sbb
sarb
ret
orb
and
out
roll
sbb
and
dec
jae
inc
mov
or
loope
mov
test
ljmp
roll
or
mov
cmp
fwait
into
sub
fisttpll
movsl
mov
xor
icebp
mov
hlt
call
cwtl
and
lahf
aad
aam
add
or
pop
jo
jo
frstor
push
ja
aaa
mov
xchg
test
jne
pusha
lds
fimuls
icebp
mov
arpl
call
shll
mov
movl
lds
jne
or
xor
insl
rorb
les
stc
mov
mov
andb
xchg
jmp
mov
nop
sbb
xor
out
jmp
data16
push
js
inc
pop
mov
aam
jge
xchg
aad
test
sub
mov
and
out
mov
xor
cmp
sbb
andl
fisttpll
outsl
stc
pop
mov
arpl
cmpsl
push
subl
jbe
mov
sbb
jmp
jmp
jmp
cmp
sub
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
pop
mov
nop
jge
mov
mov
pop
stc
sbb
lret
pushf
cli
mov
or
lea
inc
faddp
pop
ret
xor
pop
movsb
lds
xchg
inc
inc
pop
sub
in
xchg
out
push
xchg
je
add
fucomi
pop
scas
js
adc
sti
mov
lret
orb
adc
sbb
out
and
cmp
test
push
ss
fsubl
and
and
sub
sub
testl
jno
xchg
aaa
test
call
arpl
jne
out
cwtl
andl
das
dec
dec
mov
popf
add
cmp
fwait
iret
jl
scas
psllw
inc
es
loop
cmpsl
mov
je
adc
dec
aad
inc
push
ljmp
ljmp
dec
lahf
stos
in
pop
mov
andb
inc
mov
xchg
dec
shlb
mov
sbb
add
cmp
aad
roll
ret
icebp
push
xorb
test
in
mov
sti
leave
mov
add
adc
jmp
movsl
mov
mov
loop
call
add
push
push
es
push
mov
jns
js
rcll
outsl
inc
fisttpl
mov
and
cmp
xchg
adc
pop
jb
jnp
or
adc
lret
pop
and
pusha
adc
popa
shr
test
mov
int3
jns
push
sti
into
inc
inc
lods
pop
dec
ret
aas
cmpsl
cld
ljmp
xor
jecxz
push
cmp
push
dec
jg
xchg
push
inc
lods
jb
insl
add
sub
outsb
dec
dec
dec
ss
push
dec
lea
jo
dec
imul
xchg
js
inc
jo
mov
and
shlb
pop
and
mov
adcl
dec
insb
out
push
popf
lds
cmp
inc
les
dec
in
dec
dec
iret
mov
es
mov
fldt
cltd
adcb
movsb
adc
bound
addr16
and
js
enter
inc
xor
adc
push
fdivrl
iret
and
or
or
xor
inc
std
inc
jecxz
push
mov
sti
push
sbb
push
mov
push
lahf
jmp
mov
push
sub
pop
jmp
int
add
imul
dec
add
and
lods
les
test
sbb
adc
push
lret
push
movb
sahf
icebp
in
sub
je
mov
loopne
lock
insl
icebp
jbe
out
out
mov
and
jmp
outsl
aaa
divl
aam
sbb
add
ds
or
mov
pusha
and
mov
xor
xchg
add
notl
add
ret
jbe
fdivs
arpl
out
test
aad
test
pop
pop
xlat
ret
sub
sbb
aaa
in
cli
fsubrs
add
xor
and
ds
lods
mov
xor
push
xchg
sub
inc
stos
outsl
mov
sub
stos
push
xchg
xor
je
fwait
testb
insb
shrl
sbb
jns
jl
repz
cld
imul
scas
pop
sbb
js
sbb
call
ja
std
je
rorl
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
outsl
pusha
sahf
movsb
sub
mov
das
mov
mov
into
mov
sub
add
jo
sahf
or
imul
imull
ret
inc
pop
mov
and
and
cs
fs
xchg
sbb
stos
orl
or
mov
pop
arpl
xor
sub
rclb
dec
inc
xor
add
mov
cld
inc
cmp
mov
push
and
nop
ds
pusha
mov
push
daa
in
repz
xor
mov
insb
sbb
mov
mov
mov
clc
call
fldl
fstl
mov
filds
push
push
jecxz
dec
bound
data16
jg
mov
outsb
fadds
repnz
inc
ficomps
dec
mov
cs
leave
mov
sub
sub
dec
pop
push
xchg
stos
push
xor
pop
scas
xor
popf
xchg
test
nop
std
andl
xchg
out
fcomip
adc
dec
mov
sub
loope
and
add
mov
lods
arpl
lock
aaa
ljmp
sbb
sbb
mov
cwtl
je
add
inc
ds
addr16
gs
aad
adc
arpl
into
cmpl
xchg
push
shlb
or
pop
pop
enter
push
mov
int
call
mov
loope
or
call
push
in
inc
add
pop
mov
xlat
inc
fmuls
xor
push
mov
aam
icebp
ret
enter
jmp
sub
pop
daa
insl
push
shr
out
mov
out
jg
xorl
pop
call
cmc
dec
lock
fdivrl
iret
xchg
std
scas
push
add
dec
mov
gs
mov
xor
mov
pop
das
jl
test
jb
loopne
mov
inc
test
testl
shrb
xor
out
add
mov
movsb
cmpsb
out
cmp
jmp
inc
push
xchg
call
cmc
mov
sbb
jno
in
inc
ja
lods
jne
xchg
cwtl
dec
jle
loopne
out
mov
mov
sar
lret
and
clc
jecxz
mov
ja
repnz
adcl
nop
subl
and
adc
dec
dec
cmc
and
aad
loopne
xor
jbe
lahf
fsts
mov
das
xor
rorl
data16
scas
stos
iret
test
inc
sub
aaa
arpl
icebp
and
push
stos
mov
jle
xor
scas
clc
out
push
mov
dec
and
mov
in
cltd
popf
or
decl
jge
adc
push
push
dec
cmp
sub
inc
lahf
adc
mov
add
test
fwait
dec
dec
mov
inc
and
lea
jmp
pop
adc
ss
and
jmp
stc
loop
fdivrl
into
icebp
dec
pop
scas
xlat
test
shll
and
pop
mov
fdiv
pop
clc
mov
mov
bound
aas
nop
ficompl
ja
push
out
mov
loopne
mov
sti
test
adcb
add
add
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
mov
mov
mov
push
cmp
ret
sub
out
repz
rcll
data16
pop
xor
shr
dec
add
push
push
sub
jns
cmp
repnz
mov
mul
push
aas
cmp
out
adc
addr16
clc
out
sar
enter
fistps
cmp
mov
push
mov
pop
outsl
mov
jecxz
mov
adc
xor
pop
cld
dec
test
fisubrl
xchg
std
lds
lahf
xor
lods
inc
in
cmc
or
push
shrl
aas
cli
pop
push
or
sbb
sbb
psubq
outsl
xchg
push
xor
and
lea
push
cmpsb
xchg
sub
push
xchg
pop
or
pop
adc
ds
cld
mov
push
and
and
jg
mov
cs
mov
xlat
jb
rorb
seta
jp
jge,pn
imul
popf
pop
lret
mov
adc
sbbb
inc
rorb
or
mov
ds
sbb
xchg
out
push
cmpsb
sub
scas
lds
pop
push
iret
fs
pusha
lret
je
push
jge
mov
sub
xchg
xor
pop
mov
test
mov
dec
lods
pop
in
mulb
cmp
enter
mov
ffree
ss
push
and
sub
adcl
jns
call
dec
js
inc
jo
xchg
hlt
push
xchg
nop
fwait
mov
adc
fwait
mov
popa
jo
jno
imul
xor
stos
nop
clc
or
dec
bound
fisubl
jnp
and
pop
mov
or
dec
popa
inc
decl
iret
inc
add
mov
mov
cmc
mov
or
cli
sarl
in
dec
addl
pop
ret
das
inc
push
pop
or
out
add
pusha
loope
mov
loop
mov
cmp
push
jno
xor
popa
js
fcompl
jnp
idivl
or
test
mov
sbb
addr16
je
sbb
push
lea
enter
mov
cmp
mov
filds
xchg
lds
test
gs
repz
jg
dec
icebp
pop
pusha
arpl
lret
adc
in
xchg
cmpsb
iret
mov
adc
dec
sar
loope
andb
push
xor
notb
bound
mov
xchg
mov
dec
orb
add
add
cwtl
or
mov
pop
dec
imul
mov
dec
and
popa
jae
lret
outsl
in
sub
stos
cmp
xor
aaa
cli
mov
and
jl
movsl
adc
push
mov
jg
fucomp
repnz
jbe
rol
repnz
xchg
rcl
es
push
sub
mov
fcom
xchg
jg
mov
add
std
push
mov
push
adc
push
push
jecxz
dec
xlat
push
lods
cmp
cmc
push
mov
pushf
std
rcr
jns
dec
lcall
stc
mov
lahf
inc
push
jge
adc
push
iret
add
jge
pop
loop
int
filds
lret
movsl
mov
push
inc
aas
or
sub
inc
jge
ret
inc
mov
lret
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fstl
pop
sahf
out
cmp
mov
sarb
mov
andb
sti
inc
pop
mov
cli
aad
sbb
lret
cmp
scas
pop
repnz
xchg
imul
add
je
or
outsb
dec
mov
lret
mov
cmp
and
or
jno
insb
jbe
inc
xorb
jae
lods
mov
fisubrs
xor
mov
inc
sbb
mov
fcomp
idivb
fsubs
xchg
jmp
scas
es
xor
mov
sti
pop
leave
in
leave
ss
hlt
iret
inc
andb
xchg
arpl
pop
pop
inc
idivb
dec
ficompl
adc
mov
pop
add
mov
jmp
shll
ljmp
sub
and
and
stc
xchg
push
jle
mov
adc
jne
movsb
shlb
inc
data16
inc
jae
xchg
lret
inc
mov
cs
out
enter
cli
rorl
lock
adc
movsb
sbb
inc
jb
jns
roll
pop
mov
mov
enter
push
scas
out
in
mov
test
mov
push
cltd
mov
jae
pop
cmp
add
lret
xor
cltd
fwait
mov
push
lea
cld
xchg
and
sbbl
cmp
mov
mov
cmpsl
jno
cld
xor
xor
sub
add
pop
mov
mov
jmp
or
sub
jl
stos
pop
mov
dec
rcrl
xchg
pushf
jno
ljmp
jbe
pop
fs
mov
insb
inc
and
pop
imul
pop
in
xor
jae
es
stos
sbb
mov
jo
or
sbb
sbb
xchg
loop
sub
push
mov
adcl
fwait
mov
insb
xchg
stc
sbb
sbb
or
lods
lret
fsub
or
lcall
call
test
jle
dec
scas
int3
popf
adc
cld
sub
mov
pop
cmp
lea
adc
mov
divl
mov
xchg
jo
aas
rorl
or
or
sahf
cmp
jo
mov
pop
xchg
das
cmp
cmp
negb
pushl
ja
in
std
sarb
ljmp
insb
rcll
les
pop
pusha
push
call
or
pop
jg
faddl
lcall
push
and
mov
out
aad
lods
mov
shl
iret
inc
sbb
add
daa
jne
pushf
pop
int3
adc
add
sti
inc
lret
int
sbb
push
cmp
lret
add
lret
inc
mov
enter
adc
inc
ss
and
sbb
dec
arpl
mov
jno
sarb
repnz
in
fs
mov
rolb
jo
test
stc
pushf
cmpl
pop
sarl
xor
mov
jne
xor
scas
cmp
or
push
sbb
inc
outsl
std
xchg
imul
jb
insb
add
lcall
subl
insl
in
in
arpl
gs
cmpsl
xchg
std
insb
push
pop
dec
ret
pop
out
xchg
mov
sub
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
iret
push
inc
mov
mov
popa
mov
popa
popl
div
cs
lcall
scas
cltd
and
sti
jp
adc
into
sbb
dec
outsb
loop
adc
jne
sarb
rcrb
and
mov
notb
lds
daa
pop
jbe
ljmp
insl
sbb
and
push
dec
lcall
outsl
idivb
cmc
ljmp
ret
hlt
verr
cmp
nop
fidivl
stos
add
mov
jle
rorl
insl
cmpsl
jne
in
pushf
push
or
sub
fsts
nop
sti
cmp
sahf
sub
loopne
cmp
std
fsubl
neg
add
cmpsb
fs
dec
push
dec
mov
lods
cmp
pop
ror
paddb
ja
iret
adc
and
push
adc
lcall
xor
or
out
push
and
je
pop
cli
insb
fwait
pop
lret
fmull
pop
cwtl
into
and
je
jbe
pop
leave
shlb
incl
out
pop
popa
cmp
sbb
mov
xchg
mov
fnstcw
jo
ret
jp
loope
ja
jae
ret
mov
test
roll
push
sbb
push
cmp
push
jge
or
aam
stc
and
pop
mull
pop
fs
mov
insl
push
pop
ja
outsb
iret
mov
ljmp
push
inc
sti
push
sub
xor
rcll
push
sub
lcall
jge
gs
jp
repnz
je
mov
push
push
cmp
fwait
xchg
fiaddl
dec
xchg
lahf
cld
aam
notl
and
sbb
div
imul
mov
into
and
daa
lods
clc
aas
je
xchg
pop
jge
xchg
data16
jmp
jne
xchg
lret
add
add
jae
sbb
ret
test
call
xor
in
fs
cmpb
aam
push
sub
dec
popa
lods
and
test
imul
push
pop
fdivrl
pop
dec
add
xchg
repz
ljmp
dec
hlt
jl
sarb
leave
pop
ret
mov
lock
fldcw
jo
popf
mov
lret
ljmp
xlat
mov
lods
lods
or
dec
cmpsb
xchg
push
test
mov
movsb
jo
sub
paddq
and
imul
inc
stc
gs
cmpsb
jmp
mov
shrl
leave
mov
inc
xchg
lods
daa
push
jg
mov
inc
sub
loopne
mov
shrb
cwtl
mov
and
ret
and
test
add
lahf
adc
stos
loop
dec
jmp
mov
insb
inc
jmp
cmpsb
aas
add
jmp
icebp
lahf
xor
ret
pop
lcall
sub
ljmp
call
inc
imul
or
sbb
or
and
mov
mov
popl
mov
jp
lcall
outsb
cli
mov
push
inc
sub
pop
es
fistps
cmpsb
sub
stos
int3
or
sbb
inc
xchg
cmp
xchg
xchg
negl
ret
mov
xchg
pop
test
push
jae
jo
sbb
jns
test
shr
loop
cmpl
adc
jecxz
out
push
add
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
jmp
pop
cli
jbe
jne
movsb
iret
adc
aaa
cli
add
xlat
jb
dec
or
imul
sar
fildll
adc
adc
and
adc
push
mov
inc
insb
inc
in
xor
mov
xchg
sbb
xchg
sub
sahf
mov
jns
mov
and
imull
mov
movsl
scas
mov
loope
rolb
dec
push
stos
push
icebp
lea
jp
pushw
sbb
xchg
hlt
loopne
outsb
shll
lret
rolb
pop
mov
mov
inc
jnp
pop
adc
std
clc
and
stos
xchg
mov
lds
jp
subl
sbb
add
dec
mov
in
hlt
dec
cld
sbb
inc
add
nop
decl
test
inc
xor
xor
cmp
mov
aas
adc
loope
inc
xchg
mov
push
repnz
push
dec
imul
daa
repnz
andb
mov
push
bound
dec
stc
imul
in
pushl
inc
and
mov
adc
out
jle
and
lahf
ret
jp
pop
pop
mov
dec
push
cmpsb
stos
sbb
sbb
sbb
loope
cld
mov
aam
mov
pop
mov
xor
mov
jo
data16
std
cmp
pushf
inc
xchg
add
mov
popl
sarb
out
mov
cmp
mov
add
sarl
out
mov
fwait
cmpsl
fsub
jg
adc
testb
mov
push
push
fwait
ljmp
push
test
vucomiss
into
js
cs
pop
sbb
adc
sahf
inc
outsl
inc
pop
cltd
jg
push
cli
incb
cwtl
mov
mov
fildl
fldt
imul
pop
mov
inc
pop
mov
mov
roll
dec
imul
mov
inc
sbb
or
sub
mov
stc
inc
pop
mov
or
aam
pop
int3
add
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
cld
mov
sahf
or
mov
pusha
popl
mov
and
ret
pop
cmp
sub
in
adc
out
hlt
pop
fldl
xor
jl
popa
adc
mov
cmpsl
aam
dec
adc
inc
xor
mov
repz
stc
sarb
mov
dec
mov
pop
mov
xor
jp
call
dec
jae
push
mov
int
mov
jl
mov
pop
add
push
ja
jmp
jp
rcrl
jmp
or
or
pushf
popf
inc
pusha
je
and
dec
sbb
xor
jmp
loop
mov
test
jecxz
adc
cld
xor
and
dec
mov
gs
addl
in
call
cmp
outsl
lods
jno
call
pop
add
popa
dec
inc
js
ja
mov
aam
jae
cmp
and
int
fildll
cs
adc
push
and
xchg
lods
pop
add
jns
sbb
imul
push
test
sub
push
xchg
jbe
fcomps
mov
sub
in
idiv
pop
xchg
xor
sbb
jne
repnz
jmp
hlt
mov
cmp
call
push
out
in
fdivrs
mov
cli
cwtl
das
pop
outsb
xor
xor
xchg
imull
aam
mov
or
pop
or
fs
push
insl
pop
dec
aaa
mov
addr16
sbb
dec
mov
pop
fistpll
and
mov
fnstsw
xchg
sub
repnz
fsubrs
stos
mov
loop
lods
inc
cli
loopne
add
xchg
sti
dec
inc
cmp
lea
bound
or
sub
mov
scas
inc
xlat
mov
jne
rclb
in
loopne
adc
scas
add
or
sti
sub
hlt
xchg
xchg
into
popf
jo
cmpb
sub
inc
sbb
inc
jmp
repz
scas
ja
xor
jbe
or
lahf
cmp
inc
push
out
iret
dec
and
es
jmp
js
or
in
stos
nop
leave
add
cmp
mov
jl
cli
ljmp
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
dec
jg
xchg
aam
mov
mov
int
repnz
and
test
push
add
inc
mov
mov
pop
call
shr
mov
aaa
aad
push
and
xchg
sub
stc
mov
popf
stc
inc
aas
jg
push
mov
mov
mov
subl
das
mov
pusha
enter
in
mov
or
sbb
lret
xchg
mov
mov
and
lods
xchg
fucomi
jne
add
inc
cmc
or
icebp
mov
scas
lods
adc
or
dec
ret
std
push
repnz
push
xchg
or
xchg
pushf
adc
out
cmpsb
sbb
imul
adc
test
mov
icebp
fiadds
pushf
imul
pop
sub
fsubs
xchg
cwtl
add
xor
inc
out
adc
adc
hlt
dec
dec
repz
pop
push
mov
cmpsb
adc
xor
int3
insb
rclb
push
aas
das
scas
cmp
mov
mov
in
pusha
sub
mov
cmc
pop
stos
push
mov
push
adc
and
fcomp
adc
mov
insl
fs
jl
data16
scas
dec
jns
mov
out
gs
shll
clc
inc
call
pop
dec
adc
push
push
addr16
inc
jg
cmp
sbb
stc
jns
mov
fdivl
push
mov
add
insb
cmpsb
dec
pop
adc
out
inc
out
fnstenv
movb
loopne
xor
adc
sub
sub
aad
stos
in
push
jg
test
insb
pop
lret
fs
les
inc
bswap
imul
inc
outsb
sti
jno
mov
inc
push
cmpl
jecxz
and
test
arpl
adc
jb
push
push
ljmp
and
adc
mov
stos
cmpsb
fmulp
ret
xor
das
in
mov
int3
xchg
mov
jmp
call
add
mov
pop
inc
icebp
fnsave
outsb
es
jmp
xchg
popf
imul
mov
dec
add
popf
stos
xor
push
add
mov
cli
cmc
leave
out
cmp
test
ss
jne
sar
out
in
jg
std
jb
push
push
cmc
xor
bound
xor
jg
sbb
movsb
insb
shrb
into
ret
cmpsb
mov
scas
out
out
cmp
stos
xor
scas
test
jo
roll
jge
out
cmp
mov
cmpsl
mov
sub
mov
push
sub
sbb
and
and
add
or
movsl
clc
inc
mov
push
aam
sbb
add
cmp
inc
mov
mov
xchg
sbb
in
inc
sahf
push
mov
loop
jge
inc
xchg
push
sbb
int3
lods
cwtl
fwait
sub
jg
addr16
outsl
push
arpl
das
mov
outsb
jno
arpl
test
bound
rcrb
inc
adc
rep
mov
or
adc
pop
lret
imul
mov
or
inc
jbe
jo
into
mov
das
test
loopne,pt
xor
sbb
loopne
push
das
pop
icebp
adc
popf
xor
sbb
mov
add
xlat
xchg
push
lcall
fists
nop
scas
pop
mov
mov
aas
pop
fidivrl
jo
in
loopne
add
fwait
xor
inc
insb
lret
mov
push
insb
clc
xchg
insb
in
push
in
cmp
pop
popf
mov
jecxz
repz
mov
xchg
push
cwtl
mov
mov
or
neg
cmp
and
scas
jmp
jae
cltd
movsb
fsubrs
scas
test
in
cmp
addr16
icebp
out
incb
lahf
aas
adc
mov
test
add
arpl
adc
inc
mov
popa
dec
iret
aad
sbbb
adc
mov
dec
inc
cmp
cmp
cmp
push
pop
pop
in
adc
jne
test
xor
xor
xchg
fnstcw
adc
js
and
inc
mov
pop
mov
or
leave
cmp
imul
jle
stc
test
xchg
gs
jne
xor
cs
outsl
dec
fcmovnb
inc
and
mov
mov
testl
cs
adc
out
imul
pop
cmp
cmp
test
movsl
add
inc
and
pop
int3
fildl
xchg
add
popa
mov
mov
jge
loop,pn
test
mov
mov
cmpsl
push
inc
jb
add
repnz
push
lcall
sub
movups
movsb
mov
dec
jl
jne
pop
dec
mov
pop
in
add
hlt
push
arpl
pop
dec
aad
stos
pop
sub
testl
xchg
cmp
scas
mov
adc
imul
test
push
in
dec
inc
jg
dec
cmpsb
xchg
sub
jno
cli
push
xor
push
mov
dec
das
and
xor
mov
push
ret
mov
leave
test
pop
or
hlt
ret
xchg
sub
ja
push
inc
stc
outsb
enter
and
jae
cmp
pop
imul
jle
les
or
pop
xor
scas
imul
ja
addr16
loop
fcmovnu
test
shrl
pop
dec
jg
or
into
and
xor
xor
jb
xchg
out
mov
fcomip
mov
scas
add
into
dec
mov
pop
icebp
sbb
add
ret
or
mov
andb
cld
rolb
push
test
mov
cmpb
mov
pop
sub
je
mov
add
dec
stc
in
push
movsl
cmp
jecxz
into
sbb
cmp
cmp
push
sti
hlt
mov
ss
adc
sbb
lods
dec
xor
fwait
inc
push
cmc
xadd
in
lret
loop
xor
test
adc
clc
mov
in
nopl
inc
adc
mov
lods
sbb
fisubrl
cld
inc
shld
mov
pop
push
out
pushf
add
repz
js
mov
lret
out
aad
dec
push
mov
repz
movsb
pop
cmc
mov
push
mov
stos
mov
jmp
test
aas
push
loop
mov
add
pop
sub
jbe
pop
jb
dec
in
pop
fmuls
sbb
rcrl
fsubrl
jge
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
lods
fucompp
jecxz
pusha
mov
mov
je
adc
dec
dec
dec
das
xor
fistpl
jge
push
imul
xchg
xor
and
test
repz
frstor
push
sti
pop
scas
in
cwtl
aaa
hlt
mov
jl
mov
pop
pop
xchg
mov
enter
pop
add
mov
dec
cmp
cmp
cmp
pop
rcll
mov
cmp
aam
jae
jge
jg
test
in
xchg
sbb
add
adc
push
mov
fyl2x
lods
mov
mov
xchg
pop
addb
lahf
leave
push
lahf
push
mov
test
andb
mov
inc
sbb
cli
inc
sbb
repz
and
loopne
test
pop
cmpsb
fisttpl
adc
pop
adc
repz
xor
pop
add
outsl
xchg
ret
cli
loopne
cmp
inc
inc
mov
insb
lock
mov
lret
cmp
dec
dec
daa
int3
adc
dec
in
jnp
out
mov
mov
bound
push
xchg
rorb
inc
cmpsl
jae
je
andl
pushl
or
cmp
repz
fs
imul
loope
iret
push
pop
clc
gs
in
test
dec
xchg
test
clc
out
push
xor
scas
mov
lds
in
call
orl
and
push
sub
adc
cld
jle
lds
inc
mov
dec
adc
loop
mov
fsubrl
cmp
xor
dec
aad
cs
in
je
push
call
pop
icebp
ret
jmp
dec
jle
imul
repz
aaa
xor
popf
mov
jb
mov
ffreep
imul
lret
shll
out
mov
ret
pusha
movsl
or
js
sbb
push
les
push
les
lcall
cmp
fsubs
js
or
xchg
add
sub
aad
stos
mov
mov
adcl
and
sbb
insl
xor
xor
adc
call
mov
mov
mov
pop
or
std
push
lock
lcall
orl
sub
aam
out
xor
pop
lea
sub
sbb
dec
sbbb
cmp
popa
loop
cmp
fucomi
roll
mov
fucomp
ljmp
imul
cmp
icebp
ret
cwtl
rorb
addb
lods
xor
out
dec
icebp
sti
rcll
repz
gs
sbb
out
punpcklbw
xchg
xor
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
sbb
mov
mov
jnp
add
cld
lods
stc
les
ss
mov
xchg
cmp
leave
push
cld
out
in
sub
xchg
out
cwtl
ret
cli
mov
aaa
cmp
mov
dec
pop
pop
les
inc
sub
cwtl
jne
movsl
push
pop
bound
and
push
mov
imul
data16
pop
sub
leave
pop
xchg
imul
dec
sbb
pop
test
mov
inc
les
mov
lahf
lods
fs
adc
rclb
add
addl
or
aaa
dec
gs
or
addr16
mov
iret
insb
cmpsl
and
or
out
int3
test
mov
rep
pop
les
icebp
sub
ret
and
xor
mov
cmp
adc
fwait
adc
test
add
fsub
jecxz
fsubr
sub
mov
lea
bound
xchg
mov
mov
addl
fucomp
fistps
or
in
push
or
cmpsb
pop
out
mov
and
cmp
push
mov
dec
clc
es
int3
push
sub
jbe
popf
ds
cmpl
push
je
cmc
sub
mov
jmp
mov
bnd
mov
pop
pushf
xchg
dec
mov
js
pusha
in
popf
adc
adc
loope
jae
mov
dec
push
xor
aas
cmpsb
addb
mov
sbb
mov
inc
or
loope
sahf
mov
in
mov
adc
mov
stc
inc
pop
hlt
hlt
push
adc
mov
pusha
dec
jnp
jo
dec
pop
jb
loope
inc
jbe
cs
fs
dec
int3
push
push
lcall
fwait
mov
daa
dec
rcl
fsubs
es
loopne
and
cmp
or
jp
sub
js
lahf
outsb
mov
mov
in
inc
mov
mov
xor
addr16
test
sub
ja
xor
cs
clc
inc
out
rolb
std
dec
lds
idivb
cltd
xchg
jmp
fstps
movsb
xor
add
stc
lock
adc
push
push
push
mov
pop
out
int
mov
xchg
shl
or
jnp
decl
les
fs
mov
pop
push
stos
inc
movsb
add
cmp
and
imul
shll
stc
fucom
jmp
mov
or
gs
psubq
mov
aas
mov
callw
mov
sti
popa
push
repnz
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
and
movsb
sub
mov
mov
mov
mov
mov
xor
sub
pop
xchg
jg
mov
dec
ret
or
cmp
mov
sbb
sbb
test
sar
lret
clc
push
sub
dec
movlps
jle
xchg
cwtl
dec
dec
inc
mov
cvtps2pd
sti
out
cld
adc
cmpb
xchg
bnd
shlb
shlb
cltd
jecxz
es
and
in
push
push
adc
sarb
mov
mull
xchg
xchg
cmc
shrb
arpl
mov
cmp
dec
jmp
xchg
int
inc
xor
scas
les
fistpl
xorb
test
adc
xor
push
fstl
pop
sub
or
mov
mov
pop
adc
lods
movsl
loop
inc
or
xchg
inc
pop
mov
in
adc
adc
push
push
movsb
push
stc
mov
fsubs
sbb
cmp
push
or
stos
aam
sbb
fs
dec
push
jns
mov
das
rolb
in
test
mov
or
shlb
test
stos
mov
jge
vunpckhps
pop
ret
fisubl
push
mov
lret
arpl
int3
test
xlat
mov
popf
je
inc
inc
btc
or
pop
js
add
push
push
aad
cmp
daa
movsb
je
mov
push
push
loope
dec
xchg
insb
lods
rcrb
xchg
popf
fildll
inc
mov
pop
test
js
xor
pop
inc
jb
mov
cltd
arpl
mov
mov
imul
mov
pop
cmpsb
lret
movsl
std
sbb
jmp
pop
xchg
je
adc
jmp
sub
xrelease
and
add
jmp
movsb
dec
ret
sbb
sub
xor
mov
jbe
dec
xchg
sbb
sbb
add
and
cwtl
inc
xchg
aas
lcall
jne
cmp
aam
faddl
xor
testl
add
in
loope
or
ss
xchg
jae
pop
xchg
insb
lods
cld
mov
mov
pop
ljmp
cmpsb
iret
xchg
dec
shl
andb
aas
cmp
jg
push
bound
pop
rorb
hlt
push
sbb
xor
xchg
push
xchg
xor
pop
push
dec
in
movsb
ss
or
ffree
mov
mov
std
dec
inc
sbb
push
lcall
inc
call
pop
cmpsb
dec
jnp
ljmp
sbb
dec
and
xchg
imul
scas
sbbl
mov
xchg
mov
mov
or
iret
repnz
xor
push
shll
in
inc
pop
add
xlat
push
pop
mov
popa
push
rcll
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
jl
pop
jb
mov
shlb
mov
dec
pop
daa
ss
repnz
mov
mov
adc
icebp
mov
lret
pop
lret
loopne
pop
dec
adcb
stos
push
mov
mov
jle
fsubrl
sbb
mov
pop
dec
mov
call
sub
call
xchg
insb
adc
sbb
popa
out
gs
jmp
outsb
mov
scas
xor
jecxz
mov
ljmp
jmp
call
loop
sbb
and
adc
js
jno
out
fisubl
fcoms
mov
cmp
and
jo,pn
jp
frstor
sub
sub
arpl
and
jmp
inc
shll
shl
sbbb
jmp
cli
shrb
fwait
cmp
out
add
scas
addb
jb
and
js
pop
leave
dec
push
mov
push
push
rcrl
shlb
in
sub
jge
leave
push
jmp
test
iret
cltd
mov
mov
sbb
lds
inc
aam
sahf
cmp
mov
sbb
insl
sub
cmp
adc
movsl
dec
xchg
pop
mov
in
mov
sub
rcl
adc
pop
dec
fbld
and
sub
jg
and
les
adc
cmp
xlat
add
pushf
sahf
jmp
dec
fsubrs
loope
repnz
jae
xchg
or
fsubrp
sbb
es
xchg
cmpsb
icebp
sbb
scas
mov
push
out
jne
repz
xchg
imul
add
cltd
cmp
ss
mov
call
or
mov
pop
daa
dec
pop
call
repz
ret
jae
sub
or
mov
dec
xchg
xchg
cmp
cs
sbb
and
jbe
hlt
test
dec
sbb
lods
scas
icebp
pop
stc
adc
lea
inc
mov
ret
rcr
xchg
fisubrs
adc
call
add
xor
jo
lret
jg
lock
add
fsubs
adc
ret
sbb
mov
lods
xchg
lahf
in
adcb
pop
stos
mov
push
out
rcr
mov
mov
and
and
pop
pop
push
repnz
push
pop
in
lret
jle
mov
sub
f2xm1
jge
ss
mov
lcall
popa
mov
jg
mov
fcompl
cmp
adc
les
push
sbb
adc
mov
inc
pushf
or
pop
mov
clc
xchg
shl
nop
dec
sarb
inc
aaa
cltd
insb
push
mov
shl
and
pop
insb
sahf
shlb
jb
dec
inc
mov
insl
push
fcoms
shrb
push
mov
outsl
jle
push
insl
pop
sbb
fs
aad
fwait
and
sub
ja
out
std
shlb
in
lods
in
add
mov
add
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
aaa
insl
add
cs
mov
test
push
lahf
cwtl
insb
sub
ret
mov
push
std
imul
loope
inc
rolb
or
push
mov
clc
hlt
pusha
test
sbb
sub
cltd
arpl
inc
dec
ss
sub
jle
inc
jne
push
sbb
shlb
dec
cmc
ret
add
sti
or
test
in
inc
mov
aad
inc
adc
test
dec
and
gs
bnd
sub
sbb
out
xor
das
push
mov
orl
addl
cmp
imul
jle
ror
jg
rolb
xor
nop
flds
inc
cmc
shll
stos
pusha
xlat
ret
dec
dec
je
pop
into
ret
add
xchg
mov
pop
in
mov
shl
push
jmp
ds
ljmp
fwait
mov
rclb
jmp
outsb
push
aad
cli
sub
test
out
pop
fdivs
adc
or
pop
mov
std
loopne
insb
fwait
mov
leave
sbb
int3
mov
jae
mov
push
jo
pop
add
xorb
les
push
jnp
movsl
data16
nop
push
or
aad
insb
aas
push
xchg
aam
lock
and
in
addr16
or
xchg
jle
inc
js
sub
pop
aas
jge
nop
loopne
xchg
xchg
rorb
mov
sub
xor
adc
pusha
ss
mov
or
rcll
push
sbb
aaa
push
test
sbb
scas
sub
fcom
inc
cltd
mov
adc
cld
mov
sub
xor
out
outsl
jge
push
aas
xor
rcrb
lret
test
addr16
outsl
jae
mov
test
cmp
jae
lahf
movsb
lds
imul
mov
fwait
or
pop
xchg
adc
in
push
andl
push
sahf
cmp
sub
dec
push
sub
pop
iret
push
xor
mov
test
imul
jns
pop
scas
xchg
mov
mov
jne
aam
lea
push
out
in
aam
loop
or
into
mov
adc
or
test
pop
xchg
rcrl
pop
jge
outsb
mov
inc
inc
sub
mov
add
pushf
sub
mov
cmp
mov
aam
aad
adc
jge
cmpsb
idivb
shrl
pop
xchg
pop
sbb
xchg
shll
inc
push
stos
pop
add
jecxz
cwtl
icebp
xchg
jb
jbe
repnz
sbb
addr16
movsl
test
mov
sub
nop
sub
clc
addr16
imul
push
cltd
fldenv
push
mov
mov
add
xchg
aam
filds
call
in
enter
add
fisubs
rclb
das
mov
into
or
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
jns
lods
jecxz
jle
mov
data16
outsb
xchg
loop
pusha
stos
imul
mov
ret
dec
xchg
in
jg
sub
cmpsb
cmp
sbb
mov
sub
xor
bound
lcall
cmp
lahf
shll
int3
xchg
xchg
gs
ljmp
jmp
pop
pop
xchg
jne
jns
xor
lret
cmp
push
fsubrl
lods
inc
dec
dec
outsl
inc
add
or
loop
pushf
out
mov
cmc
cmpl
sub
adc
lret
lret
mov
addl
ret
jge
jnp
xchg
rcrl
cmc
cmpsl
mov
sub
and
add
les
mov
test
mov
cmpsl
icebp
subb
in
fisttpll
test
addr16
sub
int
call
imul
test
pop
cmc
repz
aam
in
outsl
mov
and
in
fadds
jo
sbb
call
jb
jnp
js
add
fmuls
inc
les
cmpsb
hlt
aad
in
cld
or
and
aas
test
push
and
cmp
xchg
xchg
push
ret
fiadds
xchg
push
jno
lock
pushf
pop
pushl
pop
test
mov
nop
xor
hlt
in
aaa
adc
pop
mov
mov
es
scas
rcr
cld
push
addr16
aas
icebp
or
aam
sub
ljmp
aas
loopne
mov
imul
imul
nop
lret
add
cmp
clc
stos
pop
dec
iret
xchg
jmp
jl
xchg
lret
ret
pop
sub
loopne
sbb
mov
negl
mov
dec
insb
scas
stos
addb
sub
xchg
pop
adc
adc
pop
pop
sbb
sbb
int
adc
xor
and
cmp
hlt
mov
xchg
xlat
daa
xor
pop
adc
outsb
xchg
orl
repz
and
inc
cli
aam
cli
jo
int3
insb
rcr
adc
cmp
leave
sbb
test
mov
dec
jo
and
push
adc
pop
test
ficomps
ljmp
imul
pop
popa
stos
push
dec
repz
ret
fimuls
popl
adc
cmp
pop
popf
pop
or
inc
push
call
movsb
jo
outsb
push
mov
jl
ficoms
data16
in
ljmp
in
outsb
in
push
pop
hlt
into
pop
mov
adc
fnsave
das
mov
pop
roll
pop
pushf
bound
add
adcb
mov
popa
inc
jle
jmp
push
outsb
xchg
jmp
lods
xorl
add
or
push
xorps
sbb
inc
fcoms
aad
xchg
mov
and
roll
add
add
or
add
mov
dec
addl
flds
add
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
and
sahf
in
xchg
mov
pusha
cld
gs
out
xchg
or
jg
dec
cwtl
push
int3
mov
outsb
xor
in
movsl
push
xor
loop
mov
repz
adc
mov
push
cmpsb
sub
and
xchg
loop
xchg
in
aaa
decb
icebp
daa
icebp
dec
test
call
push
add
sbb
scas
mov
jecxz
sub
sbb
lret
stos
fistpl
push
loop
in
jle
aam
mov
in
aad
jns
cmp
mov
ss
add
clc
ret
lahf
pop
lea
imul
inc
mov
lea
ret
neg
mov
les
mov
in
loopne
pop
mov
fcomps
push
push
pop
fcmovb
arpl
cmpsb
aam
arpl
iret
jb
pop
bswap
cmpsl
push
jnp
stos
movsl
lahf
sbb
dec
in
inc
movsb
cmpl
daa
sub
mov
mov
addr16
mov
std
or
rcrl
iret
mov
xlat
ret
pop
hlt
mov
std
inc
lcall
mov
aam
sub
scas
fnstsw
ljmp
jmp
mov
push
rorl
clc
inc
ret
daa
stc
clc
lea
int3
xchg
popa
adc
out
test
sub
test
xchg
pop
daa
test
cmpsl
adc
dec
test
jbe
std
xchg
bound
and
cmp
in
cmpsb
lcall
test
loop
ds
out
mov
fsub
xchg
or
pop
adc
sbb
mov
cs
xor
sub
xchg
pop
xchg
ja,pn
sub
jle
iret
js
push
mov
fnsave
cwtl
aam
sbb
inc
out
jle
push
dec
or
and
in
jecxz
outsl
xchg
cmpsl
aad
sub
outsb
rclb
mov
and
dec
sbbb
inc
stos
mov
mov
aad
lret
fs
cmp
fdivs
movaps
adc
pop
enter
inc
std
jbe
movsb
andb
mov
imul
push
adcb
mov
scas
adc
pushf
out
xlat
mov
dec
in
sbb
xchg
add
js
fildll
fisubrs
add
push
or
sbb
adc
sub
dec
pop
jmp
sbb
loope
xor
imul
jle
push
rcll
fnstcw
xorl
sbb
es
popa
xchg
and
jnp
push
stc
movsl
push
mov
xchg
icebp
sahf
std
sbb
je
jnp
icebp
xchg
xchg
adc
sti
cwtl
daa
jns
test
jg
ret
roll
in
push
or
sbbb
or
jle
mov
jge
push
stos
pop
cmp
pop
and
xor
cwtl
test
cmp
fsubs
inc
sub
psrad
fmull
and
jns
lcall
icebp
fimuls
and
pop
int
inc
adc
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
scas
iret
sbb
mov
mov
push
pop
loope
mov
idivl
cmc
nop
add
clc
sub
iret
or
shll
je
and
in
push
pop
fimull
mov
jg
loop
int3
xchg
clc
sub
mov
mov
xchg
fnstcw
mov
icebp
ljmp
mov
nop
xchg
and
inc
cs
or
ret
mov
and
int3
mov
jle
aas
add
jp
push
jmp
mov
mov
sti
mov
push
syscall
jmp
out
dec
inc
jecxz
lcall
dec
inc
movsl
lcall
dec
scas
jns
xchg
xchg
inc
mov
jne
fidivl
out
xor
arpl
inc
por
popf
into
je
fildll
xor
mov
adc
mov
jecxz
es
mov
outsl
sbb
ja
mov
subb
sbb
jmp
push
test
cmp
imul
xchg
shlb
push
lds
mov
or
cmp
xor
icebp
lds
daa
dec
jg
adc
sbb
pushw
mov
mov
imul
mov
xchg
push
push
mov
mov
sub
adc
out
lds
movsb
pop
mov
orl
sub
daa
outsl
dec
adc
dec
rcrb
movsb
sbb
lods
cmc
mov
clc
dec
sbb
dec
movsb
xchg
xchg
pop
into
test
sub
sub
xor
mov
dec
jns
fldenv
mov
imul
dec
movsb
add
lcall
addr16
or
cmpsl
rolb
add
repz
out
lahf
loop
into
sbb
mov
out
movsb
mov
mov
add
movzwl
lods
leave
pop
adc
pushw
imul
mov
fmul
loop
cmp
push
push
fadd
xor
jmp
sar
xchg
and
cwtl
roll
inc
push
jae
jnp
popf
ret
cmp
xor
sbb
leave
iret
sub
and
faddl
fstps
mov
or
std
sbb
mov
cmp
sti
fsubl
inc
mov
adcb
std
mov
in
sbb
push
cwtl
mov
mov
ds
add
imul
test
repz
gs
adc
add
cmp
into
sbb
mov
in
adc
add
sti
pop
insb
mov
add
add
cmp
or
mov
pop
pop
outsb
mov
cmp
in
sti
arpl
xchg
addr16
mov
movsl
inc
mov
xchg
xor
cmp
dec
gs
sarl
xchg
adc
repz
adcb
add
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
nop
nop
dec
xchg
mov
mov
dec
dec
xchg
cwtl
or
jmp
into
mov
pop
adc
out
push
xchg
rclb
mov
subb
add
xor
sbb
imul
lds
imul
cmpsl
roll
repnz
les
mulb
leave
and
sbb
gs
pop
inc
cmp
and
jne
fwait
xchg
das
add
outsb
cwtl
cli
jne
rorl
fs
aad
lods
lret
add
push
addr16
xchg
test
jmp
sub
cli
movsb
cltd
leave
jle
out
shrl
cmpsb
pushf
test
std
mov
out
push
loop
jecxz
or
clc
mov
mov
mov
test
es
sub
xor
xchg
cmpl
push
pop
ljmp
inc
xor
mov
cmp
das
push
xchg
mov
movsl
aad
xchg
nop
xchg
cmpsl
dec
adc
mov
repnz
push
mov
movnti
cmp
loope
cwtl
push
mov
fiadds
pop
inc
icebp
push
push
mov
add
push
pop
xor
addr16
xor
jle
repz
por
inc
ss
cmc
out
xchg
bound
scas
inc
inc
ret
add
cmp
roll
xlat
inc
mov
push
les
cli
xor
sbb
add
pop
cmp
mov
cmp
jne
lds
and
add
sub
inc
sbb
into
rorl
cmp
push
in
dec
cwtd
add
test
mov
mov
lock
jne
cmp
icebp
sub
ja
popa
mov
mov
jge
xchg
psubq
inc
xor
shrl
es
pop
mov
inc
outsb
outsb
push
cld
add
or
shld
jle
imul
loop
and
push
stos
cmp
push
stos
add
std
cmp
add
add
cmovne
leave
push
mov
lret
imul
iret
push
push
test
fldcw
inc
jl
sbb
in
mov
jmp
ret
int3
aaa
fdivrl
mov
out
ljmp
cmpsb
rcrb
in
pop
cmpsl
dec
fsubrl
ret
arpl
push
lock
movsb
icebp
mov
push
out
mov
xchg
cmp
mov
lret
push
push
stos
enter
aaa
les
mov
sbb
mov
cmpb
lcall
push
push
and
or
adc
nop
std
pop
scas
jb
xor
adc
jle
lods
enter
mov
pop
in
dec
ja
jg
and
push
pushf
aad
loopne
add
mov
push
jle
adc
push
mov
mov
push
test
add
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
sbb
mov
mov
inc
out
dec
arpl
and
inc
ljmp
fdivr
jmp
hlt
sub
loopne
jno
cmc
mov
inc
test
in
xor
rorl
lea
push
or
stc
pop
fistps
jb
cmp
push
push
xchg
adcb
daa
xchg
inc
mov
lret
scas
das
jl
icebp
fst
mov
push
mov
lds
out
fnstsw
xchg
xchg
fnstcw
fldl
adc
and
aas
inc
sti
inc
mov
jmp
je
adc
test
or
sahf
jno
pop
lret
aad
sbb
adc
jb
jge
lret
das
cmp
sub
inc
daa
pushf
cmp
jne
subb
popf
das
sbb
das
xor
adc
sbb
mov
into
mov
ljmp
mov
xorb
and
mov
or
mov
sbb
xchg
arpl
cli
testb
out
add
ret
xor
cmp
add
pushf
and
and
jo
push
adc
mov
test
movsb
imul
and
inc
sbb
push
jns
inc
test
fistps
push
bound
pop
jecxz
imul
sarb
in
jecxz
cmp
sub
sbb
mov
leave
mov
mov
pop
in
jns
movsl
enter
pop
add
stos
cli
test
add
pop
rclb
ror
sub
push
mov
cmp
lods
sti
jbe
xchg
cmc
les
adc
or
or
jg
sbb
dec
out
jbe
fcmovne
jge
jge
fstl
cmp
js
scas
scas
out
popf
scas
push
xor
stos
dec
xor
fists
push
xchg
pusha
in
xor
mov
mov
cmc
int
sahf
push
loop
cld
in
jle
call
repnz
push
inc
push
gs
in
or
daa
jmp
adc
jb
icebp
ret
sar
mov
vpshaw
ss
jo
add
add
ds
sbb
out
push
inc
mov
in
movb
cltd
pop
pop
pop
sbb
jns
adc
in
xchg
sbb
scas
jp
mov
stc
inc
push
leave
stos
jp
mov
movsb
shrl
mov
pusha
pop
jns
jns
iret
cltd
nop
cmp
test
dec
mov
cmp
inc
sbb
jmp
lods
xlat
je
inc
test
test
movsb
ficoms
lock
pop
rclb
outsl
popl
divb
sub
mov
nop
or
mov
out
mov
jnp
sbb
xchg
mov
and
pop
dec
dec
faddl
sti
cmp
lock
hlt
fimuls
adc
fisttpl
lret
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
out
iret
stos
sahf
mov
mov
push
cmp
mov
xrelease
ret
sbb
rclb
dec
jns
imul
push
dec
xchg
dec
jns
les
jg
adc
push
pop
sub
test
shl
out
loope
cld
outsl
jge
dec
pop
test
adc
hlt
in
into
sub
pop
adcb
cli
fidivrl
lret
pop
push
pop
lock
and
add
clc
mov
popa
flds
cmp
shll
sahf
iret
lds
mull
ljmp
push
and
arpl
inc
adc
jecxz
cmp
add
test
cmpsb
jno
inc
sbb
push
cli
mov
in
icebp
mov
xchg
in
imul
sbb
dec
push
push
les
or
cmp
dec
movsl
test
xchg
push
mov
sub
mov
in
and
mov
pop
or
xchg
jp
adc
test
and
ret
stos
aas
repnz
mov
mov
scas
gs
cli
sub
test
and
add
push
sub
movsb
lahf
fcmovnu
int3
inc
in
xor
addr16
mov
call
xor
xchg
sub
xchg
push
mov
sti
mov
andb
fsubl
stos
es
mov
dec
lock
fsubrl
mov
call
xchg
imul
cmp
jge
xchg
stos
xor
js
jl
aam
cmp
fs
das
stos
pop
es
push
lea
mov
mov
in
and
adc
test
push
stos
pop
imul
aas
cmp
or
adc
jecxz
inc
sub
inc
jl
fadd
mov
dec
add
or
push
outsl
push
push
push
dec
push
icebp
adc
sub
pusha
mov
dec
lock
out
movsl
test
inc
scas
push
jbe
inc
int
adc
or
dec
or
or
xor
sub
jne
test
mov
ret
cli
scas
loopne,pn
add
pop
xlat
mov
push
test
fwait
nop
sbb
ds
sub
popa
cltd
int
fsubrl
sti
in
cmp
xchg
icebp
and
mov
adc
js
adc
cmc
std
addr16
fildl
in
mov
popa
jge
das
pop
test
sbb
out
aas
or
xchg
jb
mov
stos
cmp
mov
push
sbb
and
gs
or
rcrl
shll
and
cmpsb
scas
leave
sbb
or
mov
les
push
xchg
fidivl
scas
sbb
movsl
adc
pop
and
shlb
cmpsb
jg
js
pop
and
add
arpl
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
cli
test
mov
aam
mov
or
fs
push
inc
push
loopne
dec
xchg
mov
mov
add
std
and
jle
adc
cmpsl
lock
sbbb
mov
fistpll
cs
push
pushf
cwtl
or
mov
in
ss
lcall
dec
iret
les
sbb
adc
mov
shll
mov
jge
inc
ret
dec
xor
cmp
jbe
fidivs
in
lods
test
in
subl
cltd
outsb
out
xor
gs
repnz
inc
js
xor
dec
imul
push
sbb
lods
inc
ret
pop
mov
cmp
or
pop
cld
jp
mov
aam
stos
movsl
sub
sbb
cmc
mov
xor
and
mov
cmp
call
mov
ficoml
loop
pusha
or
mov
dec
je
hlt
and
repz
push
outsl
pushf
jne
jle
cli
shlb
test
stc
in
dec
movsl
inc
lea
and
xor
je
insl
mov
popf
test
fiadds
test
outsb
sbb
push
mov
pop
dec
mov
jb
aas
aaa
out
rcll
insl
lods
pop
daa
and
outsl
xor
jge
mov
xor
or
mov
icebp
call
inc
fwait
jge
inc
inc
roll
jl
inc
flds
aad
fimull
dec
test
pop
ret
lret
cmp
lret
xchg
lock
leave
add
loop
pop
out
std
out
imul
bound
sbb
stos
jmp
enter
and
inc
jnp
out
xchg
jmp
mov
sub
jle
sub
pop
sub
imul
jg
or
cli
mov
arpl
jle
cmp
ret
imul
xchg
rorb
xchg
decl
lahf
jo
mov
jg
hlt
inc
movsb
dec
pop
in
cli
pop
mov
int
adc
stc
pop
mov
in
stos
repnz
dec
mov
idivl
jo
inc
mov
mov
sbb
scas
mov
jne
ljmp
xchg
xchg
movsl
cmp
test
fadds
aam
xor
jg
dec
shr
inc
push
push
cmpsl
cmp
int3
and
mov
clc
push
out
not
imul
mov
and
rcrl
lret
repz
mov
shl
add
icebp
inc
xor
adc
xor
mov
in
sub
cmc
mov
mov
jb
adc
popl
or
loope
nop
jo
sahf
inc
push
cltd
jp
imul
and
popa
xlat
nop
outsl
mov
lret
sbb
push
mov
push
mov
jge
lcall
loope
fs
in
aam
push
sbb
mov
add
add
add
sub
sahf
in
arpl
jecxz
stos
mov
mov
enter
imul
mov
push
testb
or
rcrl
cwtl
cs
xchg
stos
inc
iret
insl
push
xlat
fsubs
icebp
insb
jbe
inc
mov
sub
dec
push
lds
lods
rorl
fstl
xor
mov
test
aas
push
fsubrl
pop
sbb
cmp
xchg
in
mov
insl
fmul
sbb
stos
ja
shrl
xor
fcoml
push
repz
fwait
mov
jbe
jmp
test
jge
and
movsl
mov
hlt
out
adc
cmp
sub
imul
sbb
jl
jmp
test
sbb
andb
call
addr16
adc
test
xchg
jecxz
push
aas
or
dec
std
cmp
inc
or
shll
adc
aaa
clc
ret
xchg
push
movswl
vpsubd
sahf
repnz
push
into
popf
out
imul
gs
iret
mov
xchg
ljmp
jge
pop
push
dec
fwait
jg
dec
inc
jmp
sbbb
dec
fwait
xchg
jmp
mov
or
cmp
adc
lcall
icebp
lahf
gs
and
orps
jae
in
xor
push
mov
ss
cld
sub
mov
cli
sbb
lret
dec
popf
daa
aaa
push
cld
dec
faddp
pop
repz
fwait
push
sbbl
inc
inc
mov
insb
outsl
mov
insl
shll
test
in
cwtl
or
insl
dec
sub
shll
jns
test
xor
mov
stos
lahf
mov
push
jl
pop
mov
add
jp
inc
decb
jle
fcompl
ljmp
pop
cmpsl
mov
pop
cmp
cmc
es
fwait
in
popa
jns
adcb
sti
and
les
xor
inc
jno,pn
cmp
stc
sbb
cmpb
out
pop
std
lds
jmp
ficoms
inc
icebp
popf
xorb
out
ja
adc
rcll
xor
out
in
test
mov
cmc
aad
stos
push
jg
adc
mov
dec
lcall
dec
jp
pop
gs
flds
jo
mov
in
xor
dec
mov
rorl
test
pop
jge
fsubrs
pop
test
pop
add
jl
or
mov
lret
pop
nop
repz
add
add
pop
or
shrb
js
sbb
xchg
sbb
inc
mov
data16
repz
dec
sahf
dec
inc
add
push
mov
and
adc
loopne
scas
dec
mov
testb
dec
push
mov
out
jns
mov
xor
clc
mov
nop
jl
sub
jne
push
inc
les
test
inc
call
mov
xor
test
jmp
jno
mov
fs
sub
xchg
pop
push
jb
cmp
mov
mov
mov
mov
mov
dec
lahf
add
aad
sti
in
aad
jnp
cmp
shll
fs
mov
mov
jecxz
and
stos
mov
sarl
cld
sub
sub
sbb
adc
cmp
and
shll
inc
rcrl
test
pop
fs
mov
or
jecxz
arpl
aas
sbb
and
bound
sarb
in
in
jp
jmp
mov
jl
pop
lcall
out
lods
jb
xchg
inc
into
mov
int3
mov
rcrb
roll
sbb
mov
mov
sbb
xchg
mov
lods
adc
push
nop
and
mov
pop
pop
divl
adc
test
lock
jno
fs
ljmp
sbb
iret
add
dec
jp
xlat
jg
inc
enter
xor
or
jne
jne
incl
jnp
mov
pusha
sub
sub
mov
scas
jl
data16
ret
imulb
sub
cmp
rcrb
push
testl
lock
repz
push
std
lods
xor
out
iret
xchg
pop
xchg
pop
adc
push
fcoms
xor
jae
push
pop
cmp
popf
pop
mov
mov
dec
daa
sbb
add
shrb
lods
cmp
sar
adc
cltd
mov
andb
outsl
jo
xchg
or
or
xchg
aam
idiv
add
pop
adc
cmpsb
imul
sti
push
fistl
aam
xor
add
lret
push
pop
subl
jge
lcall
mov
and
sub
ret
test
lahf
iret
cmpsb
out
std
cmp
cmp
mov
pusha
js
pop
out
or
adc
push
xchg
push
das
lock
js
sub
push
xchg
test
adcl
loope
negb
pushw
push
jb
lret
and
cmpsl
sbb
test
adc
adc
jnp
xor
pushf
and
cltd
add
into
lods
mov
lds
loop
push
mov
or
jecxz
jb
jmp
jle
push
add
xchg
push
lods
push
andl
lods
add
adc
adc
jno
mov
lock
daa
sbb
out
jecxz
cmp
subb
or
int3
loopne
push
sbb
or
pusha
fwait
pop
mov
xor
mov
aaa
pop
rorb
scas
cmp
loopne
in
scas
imul
dec
ss
jne
sbb
outsb
or
sbb
mov
loopne
and
pop
cmp
mov
or
leave
xchg
rolb
rcr
and
sub
loopne
jp
inc
mov
inc
out
pop
repnz
outsl
cli
rorl
lret
lret
jb
shrl
add
mov
test
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fisttpll
mov
mov
daa
loope
ficompl
xor
adc
testb
enter
leave
mov
adc
mov
push
out
arpl
into
xchg
les
push
add
or
cwtl
or
mov
sahf
jge
adc
mov
test
jo
sub
push
aas
mov
inc
add
mov
outsl
mov
add
loop
and
movsb
mov
sti
pop
jo
adc
ret
cmp
or
ret
dec
push
mov
out
sarb
push
addr16
push
rcl
jge
int3
fnsave
lods
mov
scas
stc
hlt
outsl
ja
out
nop
mov
fnstsw
repnz
scas
jno
xor
push
data16
mov
mov
mov
shlb
mov
and
fadds
test
mov
push
mov
pop
push
pop
test
adc
fadds
test
or
pop
pushl
ds
push
neg
fsubs
and
sbb
mov
sbb
push
cmp
and
xor
scas
mov
das
and
fiaddl
or
pop
data16
int3
bound
inc
lret
sub
stc
sub
xchg
fistps
in
into
jl
cmp
div
gs
mov
out
cli
out
sub
ret
jecxz
sbb
and
pop
mov
aad
daa
push
test
or
bound
clc
or
xchg
gs
xchg
aas
outsb
ficomps
mov
test
sbb
xchg
outsb
inc
xchg
mov
lds
imul
jmp
fmuls
or
fmull
pop
or
mov
jne
sbb
xchg
mov
nop
push
sbb
shufps
inc
push
sub
movsl
inc
fildl
mov
pushf
lea
in
fnstenv
mov
xchg
dec
dec
adc
fcomps
es
xchg
les
outsl
add
mov
fwait
test
in
mov
push
shr
repnz
pushf
popa
leave
jno
daa
insb
xchg
leave
test
xchg
push
les
dec
notl
push
add
addr16
out
xchg
fildll
mov
jnp
xchg
cwtl
xchg
sti
dec
outsb
add
iret
mov
mov
test
sub
jg
pusha
inc
insl
fwait
imul
dec
xchg
lahf
lods
clc
aas
bound
pusha
jns
pusha
adc
jb
cmpsb
mov
sbb
xchg
xrelease
pop
pop
lods
movsl
pop
cli
sub
scas
shlb
pop
enter
mov
and
push
xchg
sbb
icebp
dec
dec
mov
ret
xor
cmpb
gs
cmc
cli
int
cld
popf
mov
mov
mov
sub
push
lahf
testb
push
mov
sub
cmp
fimull
cmc
sub
pop
cmp
or
pop
adc
hlt
adc
inc
jo
mov
xchg
adc
sub
cmp
cmpl
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
iret
pushf
mov
mov
ret
repz
push
sub
into
adc
dec
hlt
jnp
orb
mov
mov
and
sbb
and
add
mov
leave
pop
loope
clc
pop
and
rol
lods
jb
cmp
jo
aas
xor
xor
xlat
dec
scas
ss
sbb
stc
je
jecxz
xor
push
xchg
leave
pop
push
mov
pusha
movsl
stc
push
fidivrl
cwtl
jae
xor
and
in
sbb
mov
aaa
pop
mov
adc
mov
add
testl
ret
sub
pusha
push
aam
dec
or
iret
add
xchg
mov
xor
stos
shlb
fistpl
jp
and
fsubr
push
xchg
jae
jg
subb
popa
and
and
shlb
out
xchg
or
jb
decb
cltd
cli
mov
fbld
repnz
out
xchg
out
or
push
sahf
cmp
inc
inc
cmp
mov
mov
lahf
jl
cmp
loop
loop
adc
lds
dec
fmul
data16
bound
cltd
leave
push
bound
add
inc
cld
lahf
and
ficompl
stc
addl
jo
jbe
mov
jo
aam
dec
dec
mov
loope
pop
daa
xchg
add
add
fistpll
mov
aaa
pop
movsl
lock
mov
add
mov
or
jno
mov
aam
jne
jnp
and
inc
mov
into
add
out
movb
xchg
lds
push
xor
jecxz
testl
negb
out
sub
adc
fidivrs
mov
aam
fs
add
lock
jns
es
aas
test
fadds
xchg
xchg
aaa
xrelease
insb
mov
daa
mov
xor
js
adc
mov
mov
test
sub
ja
jp
inc
clc
adc
mov
sbb
test
addb
int3
xor
sbbl
mov
loope
fwait
xor
add
addb
inc
inc
pop
jecxz
arpl
pop
jo
pop
xor
ret
add
jne
adcl
out
jmp
mov
shll
add
fcomps
nop
pop
out
movsl
cmp
sub
add
in
mov
lcall
mov
das
cld
and
xchg
xor
sar
cmp
inc
lahf
xor
mov
inc
inc
xchg
mov
fisubrs
jbe
jbe
xchg
sbb
dec
outsl
stos
pop
ret
mov
dec
xchg
mov
cli
leave
movb
lods
and
xchg
data16
add
mov
adc
mov
imul
mov
and
add
movsb
sub
inc
das
dec
jge
and
adc
sbb
mov
bound
data16
pushl
std
pop
fsubr
mov
shll
xchg
popa
aam
sbb
cli
mov
mov
mov
aad
xor
divl
insl
arpl
cli
movsb
fs
fstl
pop
insl
mov
mov
rorl
into
out
aas
mov
mov
mov
push
sbb
or
sti
adc
cmc
jge
or
mov
es
or
stos
outsl
loopne
pop
andb
jo
sub
jecxz
push
pop
push
mov
add
mov
and
xchg
loopne
jmp
call
andl
lret
or
mov
fdivrl
push
lods
sbb
faddl
stc
subb
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
iret
insb
sarb
out
ret
cmp
mov
push
fstp
xor
fcompl
in
sub
popa
jp
nop
lods
out
cld
test
mov
and
xchg
sub
stos
dec
sub
xchg
jae
mov
lret
add
ficompl
adc
std
ja
sub
dec
mov
xor
imul
jbe
jp
sub
sbb
inc
dec
adc
pop
jp
xchg
in
repnz
xchg
jbe
jp
jle
js
pop
inc
addr16
aad
pop
and
leave
dec
aam
lahf
nop
ljmp
outsl
nop
iret
add
testl
andl
adc
mov
push
lret
inc
xchg
add
aas
inc
cld
mov
cmc
stc
addr16
xchg
mov
mov
and
inc
movsb
or
push
stc
shlb
rorb
enter
cwtl
cmp
ret
mov
movsb
lret
xchg
sbb
adc
js
stos
or
test
int
mov
std
mov
sub
shl
mov
fisttpl
adc
sbb
dec
inc
pop
scas
pop
neg
mov
ds
xor
pop
inc
push
xor
sub
jbe
and
cmp
cwtl
mov
pop
fsubrl
in
cmp
es
mov
je
add
lahf
ds
scas
pop
mov
test
adc
sub
lahf
dec
shlb
or
push
lahf
jae
pop
lcall
sbb
pop
flds
rcrl
xchg
pop
xor
jo
sar
dec
mov
sub
inc
sub
xor
aam
outsb
clc
sahf
jp
push
rolb
aam
lock
adc
mov
int3
fwait
cltd
sbb
dec
xchg
in
scas
imul
in
xor
es
cmp
inc
call
add
fwait
jecxz,pn
into
iret
lock
inc
cmc
fidivs
aas
nop
mov
mov
push
jle
push
adc
rolb
add
sbb
les
inc
xor
push
sub
mov
lret
dec
mov
mov
mov
pop
or
lods
scas
pushf
hlt
pop
or
mov
ds
xchg
dec
inc
cli
fsubrl
cmp
in
mov
std
dec
jecxz
add
pop
addb
inc
rclb
add
mov
mov
push
and
jnp
ja
stc
ret
andl
jns
and
inc
mov
pop
jo
sub
xor
movsl
push
fmull
mov
fld
fldcw
push
sbb
adc
das
jg
xchg
push
adc
and
daa
cmpsb
xor
loopne
dec
add
inc
mov
dec
mov
jnp
adc
add
dec
cwtl
lret
pop
lret
loop
and
lret
jne
sbb
or
push
test
mov
cmp
lods
sub
fisttpll
or
mov
pop
lret
pop
divb
push
pop
mov
imul
mov
push
push
inc
fcmovbe
xor
fbld
jge
xchg
rorl
lfs
push
sub
xchg
jne
jl
xor
add
pop
xchg
pushf
insl
popf
shll
addr16
adc
push
enter
xchg
add
iret
xchg
jo
pusha
jl
cltd
xor
je
pop
adc
cmpb
mov
ds
pushf
add
and
pop
cmp
pop
mov
mov
out
into
pop
pop
jne
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
in
pusha
mov
mov
pop
je
ret
jmp
xchg
loope
les
lcall
js
adc
aam
sbb
orb
jge
or
add
xchg
ja
into
inc
dec
mov
xor
xor
mov
pop
push
out
jb
loopne
or
nop
mov
cmc
xor
xchg
das
fidivl
xchg
push
test
push
ja
or
xchg
and
xor
leave
sbb
jl
lock
jle
data16
sub
xchg
and
mov
test
and
popa
test
lcall
jnp
cs
mov
sbb
jecxz
xchg
dec
ds
mov
add
jle
jmp
ficomps
das
push
outsl
sbb
fisttpll
icebp
hlt
push
lods
xchg
test
and
insl
bound
jae
pop
or
aad
iret
testl
out
fnstsw
xchg
imul
xor
push
xchg
aad
mov
aaa
and
popf
fwait
leave
stos
jbe
jg
subb
sbb
aad
xor
jg
lea
mov
shrl
rolb
daa
and
mov
xchg
push
mov
sub
mov
xchg
sub
cs
mov
pop
dec
lds
sub
sbb
pop
adc
out
pop
push
shl
xchg
pop
test
cmp
jns
stos
cmc
jl
cmp
push
xchg
jns
inc
push
or
enter
dec
add
push
xor
addb
fistps
out
push
cmp
mov
pop
pusha
in
jne
jle
mov
xchg
jle
jg
sti
addr16
addb
in
filds
mov
push
and
inc
add
jg
cmc
mov
sub
dec
stc
mov
inc
jl
sar
pusha
jp
in
cmpsb
push
inc
hlt
mov
or
push
out
and
sub
push
outsl
inc
aad
test
insl
jmp
lcall
test
push
mov
dec
daa
adc
pop
cmp
pop
cmp
mov
cli
mov
test
sub
cmp
outsl
repz
xor
lods
adc
add
add
mov
insl
pop
loopne
movsb
sbbb
insl
jb
ds
dec
lcall
popa
mov
in
jo
out
cmpsb
or
dec
jp
stc
sbb
jle
aam
xor
mov
and
hlt
adc
cmc
cmpsb
fsubr
xchg
mov
aaa
enter
call
call
or
in
add
mov
xchg
pop
mov
insb
rorb
dec
sbb
inc
call
clc
negl
decl
pushf
jl
jle
sar
mov
orb
and
dec
add
add
cmpsb
mov
mov
mov
test
xor
xchg
insb
mov
or
fnstcw
dec
xchg
js
adc
pop
jae
mov
scas
fildl
enter
pop
pushf
popa
mov
push
sahf
pop
mov
mov
rcrb
cmc
mov
mov
and
mov
mov
jne
rorl
pushl
pop
rclb
lret
ret
push
fildll
mov
mov
pop
fucomi
popa
lret
push
leave
pop
mov
rorl
pop
xchg
fstp
loop
xlat
movsb
dec
dec
or
stos
repnz
pushl
mov
xor
nop
jmp
std
mov
and
or
mov
mov
sub
insl
lock
or
jg
jl
jmp
mov
inc
sbb
rcr
and
jbe
or
inc
xchg
js
cmp
push
add
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
movb
mov
cmp
test
pop
push
ja
xchg
cmp
jo
icebp
std
sbb
std
jno
and
jae
add
leave
ret
jp
out
cmp
push
sbb
push
or
push
hlt
jecxz
jno
jne
push
dec
mov
mov
jne
inc
xor
es
push
cmp
pop
add
and
dec
sbbl
sbb
hlt
mov
out
out
push
sub
adc
in
rcll
xchg
insl
inc
fcoml
sti
lret
hlt
or
jmp
pop
pop
mov
mov
inc
xchg
add
xor
out
jne
insb
xlat
repz
and
dec
xchg
in
test
call
adc
push
jle
adc
mov
and
pop
xchg
jecxz
mov
aad
sbb
test
addr16
xlat
mov
pop
inc
xchg
nop
test
push
test
aas
xlat
push
or
cli
out
sub
in
cmp
sti
pop
xchg
add
int
leave
pop
mov
negl
or
dec
in
loop
call
loope
je
loope
imul
in
push
lret
fwait
jnp
jns
in
add
push
sub
movsl
stos
pop
lea
xor
lret
repz
dec
dec
cmpb
in
mov
lods
jnp
cmp
ds
cmpsb
in
xchg
js
adc
shlb
fdivl
fsubrl
mov
fstpt
push
xor
loop
cwtl
or
or
cmp
pop
mov
ror
or
je
lahf
dec
mov
fidivs
cs
movlps
xchg
hlt
ret
out
out
cmp
dec
sub
push
adc
shlb
iret
out
mov
adcl
and
js
cli
mov
ret
push
adc
push
in
dec
xchg
fisttpll
mov
mov
mov
xor
jae
cmp
sub
dec
mov
sbbl
arpl
rcrb
lds
mov
fwait
gs
ss
stc
cmp
inc
and
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
xchg
hlt
iret
test
sarb
pop
pop
stos
int
jns
je
std
sbb
fnstcw
enter
ja
inc
dec
mov
int3
jge
adc
mov
sub
shrb
mov
inc
mov
popf
push
insb
das
mov
cld
inc
enter
push
or
sar
mov
inc
cmp
mov
movl
repnz
push
pop
xor
push
popa
lahf
xchg
in
ss
fadds
jns
push
jae
sub
sub
jg
add
stos
mov
notb
inc
jl
mov
hlt
mov
mov
mov
test
stos
int
sub
mov
lret
lock
iret
sub
cmpsl
xchg
xchg
xorb
fwait
xchg
sbb
adc
cmp
lds
fwait
inc
xchg
add
ret
ffree
mov
xchg
mov
sbb
sub
lret
fs
inc
cmc
out
flds
lods
xor
push
dec
sbb
push
mov
fildl
sahf
bswap
movsl
loopne
aam
jmp
int3
jl
mov
dec
xchg
repnz
adc
push
pop
in
addr16
push
aam
fidivrs
bound
dec
ljmp
mov
mov
and
dec
scas
js
test
mov
jbe
insb
cmpsl
in
sahf
and
fldcw
fs
hlt
sbb
popa
sub
jg
jno
shufps
inc
adc
push
cmp
cmp
mov
push
mov
cmpsb
fwait
out
nop
scas
cld
sbb
sbbb
lcall
les
loopne
outsl
aam
sbb
popa
and
scas
stos
dec
xchg
fwait
in
daa
xor
add
or
add
push
dec
shl
lret
imul
push
jg
xor
or
and
je
insb
xchg
push
lahf
or
cmp
mov
sub
nop
fistpll
adc
pop
loope
pop
fldt
push
sbb
lcall
pop
int
push
jb
mov
sarb
pusha
dec
lds
out
add
lea
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
sbb
faddp
mov
xchg
dec
jb
das
loopne
mov
les
lds
mov
mov
push
cmp
mov
push
stc
mov
push
fucomp
jne
jno
mov
mov
cmp
jnp
sub
gs
aad
sti
pop
loopne
and
shlb
pusha
bound
xchg
push
test
sub
bound
sub
push
adc
vandnpd
add
shll
ret
fildll
fwait
and
inc
jnp
sub
std
mov
and
dec
xchg
or
pop
cmpsl
fmull
dec
xor
es
dec
imul
mov
cmpsl
invd
adc
xchg
fs
add
jle
cwtl
notb
jo
and
sbb
notl
lret
and
cld
xchg
push
inc
mov
xchg
aas
cmp
ret
jbe
or
mov
rcrl
inc
mov
cmp
push
in
std
aam
inc
sahf
ds
mov
jg
jl
enter
mov
dec
adc
jl
xchg
mov
fadd
adc
mov
jbe
data16
xchg
mov
aad
jg
loope
jbe
add
mov
and
mov
sub
mov
imul
mov
jns
cs
and
lock
cmp
mov
fld
cld
mov
pop
mov
dec
sbbb
mov
mov
xchg
push
jp
push
cmpsb
pop
popa
cmp
les
pop
shll
pop
lods
mov
or
inc
loopne
inc
in
jmp
or
xlat
or
xchg
mov
jle
roll
inc
lods
dec
jne
xchg
jecxz
cmpsb
sbb
mov
pop
stc
in
or
loope
sub
xchg
addr16
je
je
ds
push
rcll
cwtl
mov
pop
pop
test
fisttpl
or
mov
rcrl
stc
das
jl
cmpsb
ja,pn
leave
inc
mov
inc
in
push
sub
dec
in
push
jg
and
push
sub
sbb
add
inc
add
pop
add
add
add
xchg
jecxz
mov
jb
sahf
nop
adc
or
loop
mov
into
mov
dec
bnd
add
dec
fldlg2
mov
push
cmpsl
mov
out
pushl
mov
jl
jbe
mov
pop
jns
cld
xchg
dec
cmpsl
ret
daa
inc
and
cmpsl
jno
mov
outsl
sub
mov
inc
out
js
pop
inc
repz
ss
dec
aad
pop
pop
lea
inc
pop
push
ljmp
data16
dec
adc
ja
add
insb
mov
cwtl
sub
gs
xchg
and
shrl
out
mov
rclb
lds
pop
and
into
mov
xchg
divb
aas
in
fidivrl
gs
push
dec
cmp
fldenv
or
cmp
out
insb
pop
arpl
push
sbb
push
and
out
cmp
xor
add
mov
inc
xor
mov
cmpsb
inc
outsb
ret
lds
add
nop
fildll
js
cmp
jl
xor
fcoms
fisttpl
in
sbb
push
sub
xchg
dec
hlt
and
lods
dec
cmc
dec
adc
idiv
and
shrl
into
xor
ss
add
mov
mov
jbe
jnp
or
mov
lea
sub
bound
jae
mov
cmpsb
popf
cld
inc
mov
and
data16
mov
mov
jmp
push
pop
les
xor
and
mov
adc
ja
pop
jge
fsubrl
inc
shll
ss
mov
sbb
fcoms
add
jle
clc
out
sbb
xchg
out
testb
sbb
sbb
pusha
adc
loope
sbb
push
popa
int3
jp
sub
xchg
pop
das
stos
mov
loop
jg
dec
movsb
out
int
lods
in
sbb
mov
lret
push
push
mov
xor
mov
push
mov
test
rolb
push
outsl
negb
fisttpll
pop
jo
insl
mov
or
add
mov
jb
jae
sti
cs
adc
pop
mov
es
inc
aam
out
xor
pop
fnsave
inc
pop
jle
mov
cli
xor
jp
je
sbb
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
push
sarb
push
inc
mov
shrl
jg
pushf
fbld
outsl
and
xchg
repz
icebp
popa
lds
cwtl
addr16
cmc
mov
mull
fisttps
inc
mov
dec
cltd
mov
sub
and
adc
sahf
push
test
ret
movsl
inc
dec
inc
das
or
imul
orb
je
jl
mov
out
inc
pop
movaps
movsl
call
pop
push
arpl
jne
jge
jae
cli
push
negb
enter
arpl
faddl
mov
xor
repnz
and
push
mov
sub
in
inc
imulb
outsl
mov
jno
cmpsb
cmpsb
frstor
pop
ja
mov
or
mov
leave
and
push
and
pop
xchg
inc
sbbb
dec
jg
scas
fbld
outsl
cmp
pop
test
cmp
xchg
cmp
orb
add
lea
pop
and
add
jle
dec
mov
repnz
scas
fimull
rol
pop
jle
xchg
push
adc
into
lods
sbbl
pop
push
jnp
lcall
or
test
stos
lcall
push
push
add
pop
clc
in
mov
mov
aaa
lcall
sbb
in
out
fst
push
inc
mov
scas
push
push
dec
mov
insb
popf
jmp
jnp
cmpsb
iret
mov
sbb
sub
push
mov
clc
pop
push
xor
fnstenv
sub
cld
sub
jae
mov
in
adc
adc
inc
add
jnp
out
ret
mov
inc
cwtl
insl
mov
xchg
and
mov
add
arpl
sub
or
or
mov
jle
ja
lods
mov
fld
lods
les
imul
dec
loop
mov
xor
filds
hlt
sbb
fdivrp
or
mov
fcoml
cwtl
add
add
add
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
mov
xchg
fs
fsubrs
fcoml
jae
iret
push
loop
mov
cld
xchg
add
int3
and
add
add
repnz
loopne
test
sbb
and
gs
and
ret
sub
stc
mov
dec
popf
add
test
sbb
dec
cmp
and
sub
jg
insl
insb
aad
int
fs
leave
pop
fstl
lret
test
loop
jo
shlb
shll
bound
std
push
ds
jo
mov
mov
jbe
sub
jle
sahf
dec
dec
ret
gs
jbe
jns
pop
icebp
enter
mov
in
out
dec
xor
xchg
fs
cltd
pop
inc
iret
jo
jl
subl
and
add
adc
or
mov
shr
test
add
mov
inc
fldt
xorl
dec
fcompl
int
jb
xor
or
cmp
push
in
fdivs
in
gs
or
sbb
jg
call
add
jnp
fdivr
in
lea
pusha
add
out
inc
add
test
in
xchg
add
ja
dec
fcmovnbe
cs
pop
loop
mov
ret
addb
inc
adc
cmc
jge
in
sahf
mov
sbb
adc
sarl
adcb
les
loop
iret
insl
or
sub
or
adc
or
stos
ficomps
jno
xor
roll
mov
dec
les
stos
or
inc
int
xor
cmp
sub
jbe
imul
xchg
arpl
hlt
dec
mov
jae
pushf
lods
jmp
iret
popa
push
fucomip
cmpsl
pop
sar
xchg
push
mov
mov
and
adc
or
and
xchg
stc
aas
mov
sbb
ss
and
jp
lods
dec
out
call
inc
pop
into
sarb
aad
in
pop
xchg
out
adc
mov
dec
mov
cmc
pusha
cmp
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
nop
fsubr
sarb
outsl
dec
ret
mov
jge
loope
xchg
mov
hlt
mov
stc
inc
add
add
les
pusha
decl
inc
pop
jp
mov
ss
xor
dec
out
xchg
mov
inc
in
jno
jno
pop
test
ret
cmc
xor
xor
lcall
pop
jno
clc
dec
aas
cwtl
rclb
cmp
mov
sub
sbbl
cmp
xchg
inc
mov
pop
dec
insl
pop
cld
and
jl
rcll
jo
fdivrs
push
dec
loopne
outsl
arpl
adcb
ss
mov
int3
bound
clc
or
dec
stos
mov
out
addr16
jmp
outsb
das
add
sahf
icebp
daa
movsl
push
cmove
aas
insb
mov
push
cltd
dec
jmp
adc
adc
adc
in
int
mov
jmp
sbbl
add
mov
test
or
stos
inc
lcall
jb
and
cmpsb
repnz
xor
and
cmp
imul
xchg
pop
je
sti
push
and
cmp
adcl
lret
out
dec
sub
push
inc
xchg
push
mov
addr16
jle,pt
xchg
pop
and
mov
fs
leave
popa
and
sahf
mov
scas
or
cli
sti
mov
ljmp
sbb
out
outsl
test
xor
fists
sub
mov
fbld
bound
pop
xchg
sarb
xor
or
cli
notl
cmc
pop
push
je
pushf
in
sbb
push
ret
or
test
inc
scas
push
ds
mov
idiv
lahf
hlt
pop
iret
enter
sub
add
jle
aam
jnp
mov
fidivrs
pop
sbb
or
dec
dec
popa
rorl
mov
mov
sub
dec
xchg
sub
test
iret
xchg
jo
cltd
adc
xor
push
movsl
outsb
jp
es
in
cmp
jo
adc
adc
ljmp
in
test
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
nop
push
repz
incb
mov
dec
add
push
adc
add
fs
push
jae
scas
xchg
xlat
and
popa
je
dec
mov
fwait
cld
inc
ss
popf
mov
clc
into
pop
addr16
mov
dec
push
mov
les
pop
arpl
test
std
mov
fdivl
js
insl
insb
movsl
cmc
jge
scas
xor
js
push
iret
lahf
jnp
fs
shll
bound
lahf
es
cwtl
daa
lcall
ja
push
rcr
dec
rorl
pop
fcomp
dec
outsl
in
arpl
inc
xchg
negl
adc
jae
sbb
movsb
mov
mov
iret
lock
not
pop
cli
dec
outsb
or
add
out
aas
gs
adcb
aaa
or
lock
int
or
out
imul
push
mov
or
or
sbb
lret
icebp
bound
stc
cwtl
aad
and
ds
jmp
fwait
rorl
mov
stos
adc
lods
mov
rol
pop
push
rorl
mov
and
adc
inc
enter
addr16
jmp
push
mov
dec
or
jnp
rol
xor
movsl
loope
adc
enter
daa
pusha
orb
or
out
add
jg
rcr
xor
pop
cmp
lock
dec
aam
je
inc
mov
fwait
mov
push
jecxz
push
out
pop
or
sub
mov
fmul
mov
xchg
je
pop
push
push
xor
ljmp
je
fs
loope
mov
cli
adc
out
mov
imul
clc
add
pop
daa
add
add
cli
inc
repnz
jg
insl
loope
pop
loopne
lret
sub
shl
lret
add
aas
in
mov
shl
adc
cli
lods
es
sub
scas
leave
cmp
sub
orl
cli
lret
nop
mov
idivb
ljmp
cld
fs
das
enter
or
adc
mov
or
sti
outsl
dec
xchg
les
pcmpgtd
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
xor
sarb
pop
mov
adc
js
mov
jmp
lahf
sbb
jbe
or
xor
push
or
sbb
dec
sbb
mov
jge
ficomps
mov
lods
mov
xor
ret
jge
sub
mov
inc
or
lds
jno
adc
iret
iret
xor
pop
xor
mov
or
mov
pushf
add
dec
jne
fisttpll
ja
mov
pusha
push
inc
push
push
and
xchg
insl
mov
jno
nop
out
inc
adc
mov
aas
call
jp
push
stos
pop
sub
mulb
js
ret
rcrl
and
fldenv
fistpll
in
lret
xor
in
jo
xchg
push
insb
sahf
and
push
mov
sbbb
sbb
or
addr16
lods
scas
pop
mov
rcll
push
icebp
inc
sbb
and
sti
and
ret
lret
inc
jl
movsl
mov
pop
popa
push
sub
push
into
jg
aas
jno
xlat
call
mov
fldcw
frstor
mov
sbb
push
cmp
call
jle
pop
std
bound
xchg
xor
test
bound
sbb
popf
popa
mov
test
es
subl
pop
add
mov
cmpsl
jecxz
out
in
aam
sarl
enter
mov
jnp
inc
aad
xor
add
test
push
repnz
mov
cmp
nop
call
xchg
bnd
int
push
or
xchg
in
sahf
xchg
jb
cmp
or
lcall
inc
jl
xlat
cmp
lods
xchg
push
test
movsb
inc
xor
xor
mov
xchg
lds
addr16
cmpsl
jbe
leave
sti
lret
flds
bound
dec
cltd
aam
push
sub
jmp
mov
adc
mov
ficoml
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
fldl
mov
xchg
fisttpl
ljmp
sarl
fisubl
and
pop
test
cmpsb
jae
push
adc
lds
lods
in
pop
scas
jp
or
into
ret
scas
aam
iret
repz
dec
fwait
push
xchg
out
mov
pop
pop
sub
and
mov
jl
mov
das
push
sarb
xor
pop
cmpsl
popf
xchg
aaa
je
cwtl
or
es
adc
mov
in
pop
xchg
test
sub
push
test
cmp
cmp
sar
dec
loopne
cmp
imul
out
cmp
dec
sbb
clc
insl
out
dec
dec
dec
out
cld
mov
push
and
sub
push
xchg
aam
shlb
or
xor
pop
cwtl
aam
dec
or
loop
call
adc
mov
ss
insb
sti
cmpxchg
cltd
ds
jb
inc
or
inc
push
int
sbb
ficoml
fs
and
xchg
in
movsl
jns
fldl
mov
ljmp
sub
cwtl
and
sarl
iret
push
cmp
lds
outsb
cld
int3
add
imul
sub
and
ret
movsb
loopne
pop
mov
cmp
ficoms
inc
sub
fs
negl
es
dec
inc
cmpsb
sbb
mov
insw
xchg
lret
dec
push
mov
add
pusha
das
push
shll
jecxz
mov
out
adc
sti
mov
adc
push
sub
sbb
sbb
xor
cmpsb
stos
cmp
jl
pop
cmp
sbb
filds
fistpll
jae
mov
sbb
or
inc
bound
push
aad
adc
cmp
in
jne
sarb
pop
dec
pop
push
jns
or
imul
mov
xor
les
and
xlat
lret
jmp
pop
push
lret
testb
push
leave
dec
inc
mov
daa
dec
icebp
sahf
nop
les
pushf
and
add
add
enter
add
add
fimull
test
sbb
add
push
and
xor
shld
jmp
lret
repnz
xchg
xor
jb
rcll
xor
cmpsb
adc
jp
inc
mov
aad
mov
aam
js
fwait
dec
jecxz
xlat
outsl
pusha
fsts
lock
lods
jge
loop
mov
mov
leave
sti
test
sti
sub
and
test
xchg
pusha
inc
jae
mov
xor
jge
mov
mov
cmp
sub
int
xchg
les
sahf
add
xor
xchg
adc
xchg
popa
adc
push
popf
jle
push
jns
and
sahf
pop
popa
jbe
insb
jne
rorl
mov
or
insl
test
add
movsl
push
inc
sub
pop
xlat
lret
jns
push
das
inc
dec
enter
mov
icebp
std
test
mov
pushf
imul
xor
icebp
shl
pop
add
fistpl
lcall
lea
adc
daa
cmp
jge
adc
dec
inc
repz
adc
adc
lods
out
je
cmp
sub
fisttpl
or
pop
mov
xchg
std
mov
addb
push
aaa
mov
rcrl
xchg
scas
arpl
lret
dec
cmp
cmp
xchg
and
sub
cmc
xor
mov
scas
clc
or
fdivrl
add
loopne
jno
aam
ret
push
dec
lret
fs
mov
sub
sbb
andl
xor
mov
push
sarb
repz
movsl
jecxz
shlb
cmpsb
mov
movsb
dec
mov
sub
out
sub
fistpll
xor
ss
movsb
adc
fcompl
add
fiaddl
cwtl
fwait
cmp
sbb
add
popa
add
frstor
sbb
mov
xlat
dec
lret
add
leave
fwait
icebp
pop
pop
ror
mov
les
jmp
push
in
rorl
xchg
adc
in
xchg
push
dec
dec
in
mov
inc
adc
dec
adc
mov
call
test
jbe
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
pop
jae
xchg
xor
mov
fisubl
jmp
pop
aad
fbstp
xlat
fcmovne
lea
cli
add
fs
movsb
out
std
repz
fwait
loop
pop
clc
xor
jecxz
enter
icebp
in
std
sbb
ret
xor
cmp
xchg
leave
arpl
dec
mov
lret
push
int
jno
push
sarb
sbb
xor
es
sub
jle
mov
int3
dec
sahf
sbb
pop
mov
fiadds
push
mov
int3
fprem1
push
push
cmc
movsl
push
ss
je
imul
or
rorb
push
pop
cmp
push
out
add
mov
mov
insb
and
xor
push
fiadds
iret
sbb
int
cld
adc
dec
scas
push
lods
mov
dec
mov
shll
adc
pop
test
xor
imul
cmp
or
lock
mov
dec
mov
subl
push
stc
dec
add
mov
inc
xchg
mov
popf
mov
xchg
or
adc
outsb
je
or
popf
lods
nop
sbb
out
add
adc
divb
call
pop
into
mov
cwtl
rep
sbb
mov
push
lcall
sub
pop
cltd
or
or
and
hlt
and
and
push
push
mov
mov
and
add
sbb
arpl
xor
pushf
mov
int3
ret
adc
mov
push
dec
push
sbb
jne
das
mov
xchg
or
sub
mov
push
adc
shrl
loope
adc
push
fists
repnz
jns
xchg
push
test
fisubrl
sbb
pop
arpl
sub
adc
mov
imul
aas
popa
mov
fnsave
dec
leave
adc
shll
mov
ds
xchg
pop
orl
mov
rclb
call
arpl
push
mov
add
ljmp
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
xlat
lcall
xor
pop
jns
stos
outsb
push
repz
lcall
pop
or
lcall
pop
sbb
mulb
imul
es
popf
xchg
push
sahf
das
sahf
aad
xor
dec
ret
mov
ret
and
mov
int
jae
sub
pop
or
jnp
dec
pop
or
mov
jp
xchg
dec
iret
stos
fld
mov
xor
inc
fadds
int
out
sbb
in
jae
push
adc
lds
addb
inc
inc
jne
mov
addr16
or
xor
fmuls
dec
inc
popf
jl
mov
jo
mov
insl
adc
pop
dec
pop
cmc
xchg
mov
mov
clc
divl
gs
jge
mov
sub
outsl
pop
jbe
and
jb
xchg
std
sbb
movsl
cmp
jnp
fldl
jnp
dec
arpl
cltd
cld
inc
pushf
add
outsb
test
cmp
sti
dec
cltd
jp
xchg
repz
aaa
sbb
dec
arpl
xchg
jae
daa
and
push
sub
xlat
out
jo
sub
das
adc
lods
js
mov
fcmovnu
int3
mov
push
inc
addr16
push
jl
cmp
ss
jecxz
mov
clc
aas
and
sbb
loop
fimull
inc
cmp
mov
mov
mov
push
lock
pop
jne
sub
or
ja
stc
ficoms
shlb
sub
push
ljmp
cltd
stos
nop
in
js
pop
pop
push
rolb
cmpsl
outsb
scas
sbb
add
mov
cmpsb
ss
push
ljmp
cmp
mov
insb
pop
scas
in
fisubs
sub
sar
les
aaa
ljmp
add
jo
sbb
stos
into
dec
sbb
push
lcall
in
mov
out
outsb
fmuls
loop
hlt
mov
push
xor
sub
xlat
test
dec
fadd
pop
test
ss
iret
dec
dec
sub
imul
push
jmp
shlb
dec
mov
pop
and
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
push
push
push
sahf
and
sarb
sub
mov
xlat
jmp
mov
and
lds
lea
jo
nop
fbstp
lret
cmc
add
test
pusha
xor
add
mov
cmp
leave
pop
fs
pop
mov
les
inc
inc
mov
popa
inc
data16
insl
sbb
out
xchg
addb
xchg
lods
mov
rcr
push
add
neg
fisubrs
mov
je
mov
idivl
jge
fsubl
and
lock
sahf
and
mov
and
sbb
lods
rol
and
in
aam
movsb
pop
inc
dec
rol
out
adc
test
pop
or
das
fadds
sub
jg
or
mov
mov
jne
dec
insb
xor
lock
imul
icebp
jo
orl
rcll
into
dec
mov
xor
and
jb
xchg
jae
cmp
rcrb
xchg
mov
push
mov
mov
jne
push
or
mov
push
xchg
iret
ror
add
insb
push
fstl
cmp
sub
xchg
pushf
icebp
aad
mov
int3
add
ljmp
lods
pop
lods
xchg
push
movsb
dec
xchg
pop
and
lcall
mov
popa
jnp
test
aam
mov
pop
sbb
testl
sub
dec
add
mov
cwtl
ficompl
repz
push
pop
lea
push
mov
push
pusha
xor
jns
sbb
stos
insb
icebp
das
cmpsl
jmp
into
pop
test
in
mov
xor
stos
cltd
push
push
and
cmc
inc
jl
jl
push
adc
mov
andb
jns
add
mov
xlat
in
out
les
mov
mov
jne
insl
mov
negl
cltd
xor
xlat
adcl
xchg
lret
mov
in
jge
mov
fistpl
popl
xchg
pop
fnclex
jbe
adc
icebp
fidivs
rcll
xor
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
cltd
cli
out
iret
pushf
adc
mov
out
test
das
ds
iret
sahf
mov
lock
jp
outsb
enter
mov
mov
pop
mov
cmp
dec
push
sub
inc
inc
push
and
getsec
stc
dec
mov
cmpsl
imul
loopne
jp
stos
into
insl
out
mov
cmp
bound
push
addb
bound
hlt
std
mov
jp
shrl
xor
fs
out
movsb
xor
stos
in
inc
pop
in
daa
sub
out
loope
fwait
int
xchg
mov
adc
inc
out
jne
or
cmp
lret
sub
and
pop
scas
outsb
sbb
jae
sbb
xchg
dec
cwtl
js
and
xchg
jb
and
xchg
das
stos
jb
mov
cmp
out
std
aas
cmp
cli
cli
mov
pop
les
ret
sub
xchg
xchg
sub
jle
mov
mov
jp
inc
mov
cmp
mov
lret
dec
cmp
pop
in
das
out
mov
enter
mov
push
es
mov
pop
fisttpll
cwtl
fs
jae
rorb
cwtl
fimull
mov
pushf
xchg
jbe
jb
cltd
or
jnp
sahf
mov
in
jle
in
xchg
fdivl
lahf
mov
lahf
jnp
xorl
loopne
or
push
lcall
xor
jnp
in
cmp
xchg
pusha
clc
mov
je
mov
pop
rolb
pop
lret
imul
push
xchg
testb
dec
out
and
sub
pop
xchg
xchg
cmp
pop
pop
pop
dec
jg
lcall
jnp
sub
int3
mov
sub
mov
mov
je
jne
mov
xchg
rdmsr
mov
inc
cmp
or
dec
push
inc
xchg
fstpt
mov
add
mov
sub
sbb
mov
data16
push
dec
push
push
test
imul
out
or
test
add
mov
sub
loopw
mov
sbb
scas
cmc
or
js
push
loop
iret
mov
push
and
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
ffree
frstor
adc
sarb
jl
mov
idivl
shlb
fstl
fcoml
dec
pop
sbb
fisttps
sbb
sti
pushf
mov
imul
mov
lods
aas
xor
cld
xchg
push
inc
push
pop
and
cli
sbb
and
loop
sub
repz
ja
shl
fstps
cmpsl
ds
push
cmpsl
inc
addr16
push
fs
dec
cmp
pop
xchg
inc
out
sbb
jbe
mov
cmp
test
push
adc
sub
sub
ljmp
scas
arpl
cltd
dec
jno
pop
mov
dec
in
inc
test
pop
movb
and
mov
jae
add
mov
fbld
imul
mov
lret
sahf
mov
sub
jno
repz
and
push
cmp
sub
sbb
icebp
mov
and
xchg
idiv
jmp
gs
in
inc
push
js
and
jmp
adc
stc
and
mov
xchg
in
xchg
cmp
or
push
add
mov
ds
mov
or
sti
fcompl
jno
mov
mov
leave
inc
mov
movsl
jnp
adc
cmpsb
or
sbb
mov
xor
pop
sahf
pop
outsb
out
sub
push
enter
cmp
dec
lds
jb
push
jecxz
test
push
lahf
dec
cs
push
push
pop
inc
jns
lods
es
stc
push
jmp
in
enter
cmpsb
hlt
outsb
jne
movsb
push
scas
cli
cltd
imul
push
adc
mov
or
pushf
add
cmpb
pop
inc
repz
ljmp
cli
sub
test
and
pop
cli
mov
fldl
xchg
or
adc
pop
add
mov
rcll
ror
inc
jmp
xor
movsb
pop
arpl
out
and
repnz
bound
outsb
nop
xor
fstpt
rcrb
fsts
movsb
mov
mov
xor
dec
sbbl
adc
inc
or
jbe
jle
pop
sub
add
lods
roll
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
sarl
sarb
data16
sub
jmp
pop
jbe
stos
loopne
insl
xchg
ret
hlt
inc
mov
sub
je
lock
xchg
jbe
xchg
shrb
and
xchg
fildl
lods
out
mov
ljmp
repz
ds
mov
cwtl
and
adc
int3
aas
in
xchg
lea
push
loopne
xchg
nop
jmp
push
cmc
movsb
xchg
out
repz
mulb
or
jae
lret
outsl
scas
pop
in
std
out
scas
push
sti
cmp
push
adcl
or
cmp
fcomps
ja
push
lcall
jae
mov
push
and
in
jnp
iret
clc
mov
icebp
out
add
mov
inc
lahf
ficomps
movsb
xor
incb
imul
dec
cltd
xor
push
outsl
mov
jns
xlat
add
idivl
add
sahf
inc
inc
in
cmp
into
pop
push
push
enter
inc
enter
int
cs
popf
mov
mov
repz
stos
js
daa
shl
sbbb
mov
repz
dec
push
mul
xchg
sbb
cmp
iret
data16
dec
aas
sub
or
pop
xchg
clc
icebp
rorb
pushl
mov
or
fbld
dec
rcrl
add
lret
push
add
sbb
aas
js
rcrl
adc
xor
mov
jge
mov
cmp
push
fs
inc
push
push
icebp
movsl
push
stc
test
sbbl
and
sarl
sbb
add
leave
fldenv
cwtl
jmp
insb
outsl
es
enter
decl
lds
xchg
lea
adc
popl
fs
and
jle
aam
cs
push
push
in
shll
mov
xor
sub
scas
aam
push
scas
clc
loopne
cs
mov
decb
movsl
add
adc
adc
jecxz
test
dec
hlt
in
mov
cmp
jmp
iret
pushf
push
gs
sub
cld
mov
xor
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
cmp
xchg
add
sarb
fbstp
mov
fcomps
pop
sbb
jmp
ja
mov
rorl
pop
pop
jl
jns
ret
pop
mov
sub
faddl
inc
jbe
adc
into
and
cmc
and
mov
ja
xor
sbb
push
push
sti
pop
mov
adc
shr
leave
out
dec
sub
lcall
aam
in
mov
jns
sti
or
xor
outsl
jmp
lea
add
push
xor
outsl
push
or
mov
xlat
sbb
cmp
mov
add
loope
mov
xchg
sub
mov
or
push
lahf
dec
xor
inc
aad
mov
pop
pushl
sbb
hlt
inc
push
and
ds
cmp
pop
rcll
mov
sti
scas
std
dec
ljmp
out
les
mov
sbb
test
ss
orl
scas
lock
pop
inc
pop
sbbb
push
and
jne
mov
jg
and
inc
gs
jbe
add
scas
das
and
mov
loopne
jns
mov
jg
xchg
movsl
jge
or
inc
xchg
in
mov
mov
inc
clc
ds
mov
sbb
adc
sarl
mov
jmp
dec
shrl
int3
in
add
sub
rcr
pop
dec
mov
jg
pop
adc
adc
xor
push
sub
jne
ljmp
push
push
stos
shrl
push
inc
inc
push
in
jp
inc
test
test
mov
aam
sarb
or
push
and
insl
rorl
cmp
dec
xchg
int3
popa
mov
sub
jg
test
int3
iret
mov
sub
cld
je
cmp
sub
push
fmull
add
cmpsl
hlt
sbb
mov
in
test
notb
or
aam
ds
aam
cltd
cwtl
lcall
jbe
std
sbb
iret
xlat
jg
xor
pop
push
pop
add
je
bnd
xor
add
xchg
fisubs
jle
fisttpl
sbb
lods
roll
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
inc
js
sahf
jl
sarb
mov
mov
mov
popa
outsb
sarb
repz
data16
rol
je
xor
test
fmulp
popf
mov
jo
sub
mov
mov
hlt
bound
rolb
push
in
idiv
mov
cs
shlb
pop
pop
lret
cmp
lods
bound
in
and
fildl
push
cmpsl
ljmp
pop
addr16
jnp
dec
loop
pushf
out
sub
mov
jnp
inc
pop
push
push
or
pop
xor
pop
cmp
fidivs
sbb
dec
dec
or
add
mov
jno
outsb
mov
stos
xor
sarl
xchg
xchg
lea
and
das
sub
iret
xor
push
std
icebp
in
ror
xor
or
cwtl
push
shl
loop
repz
fwait
add
cltd
or
inc
or
mov
and
stos
sub
les
jmp
xchg
push
inc
mov
loopne
stc
cmp
insb
cmp
push
in
xor
out
pop
or
cmc
pop
xchg
gs
pop
lret
mov
sbb
cmc
pop
push
add
mov
addr16
lahf
sub
jne
xchg
cld
ljmp
add
or
sbb
inc
orl
dec
stos
incl
or
mov
adc
mov
pop
test
js
lcall
mov
dec
xchg
mov
cmp
push
js
or
xor
or
pop
and
sbb
jae
sbb
push
xorb
shl
push
pop
jo
sahf
xor
insb
in
lock
sti
fsts
mov
cmpsl
xor
ret
fidivl
add
mov
mov
repz
pop
lahf
das
dec
or
clc
and
jl
xor
stos
mov
movsb
mov
cmp
inc
loopne
bound
jmp
add
sti
rcl
cmc
scas
loop
lahf
cmp
sar
shl
xchg
sbb
fadds
mov
inc
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
mov
mov
dec
cmp
ret
cmp
outsb
out
jbe
ret
push
xchg
movsl
call
cld
push
and
and
sub
loop
out
je
pop
sub
pop
shrb
popf
sti
dec
shlb
decb
inc
stc
add
cmpsl
stc
sbb
iret
sbb
or
lea
insb
fs
hlt
xchg
xchg
sbb
in
jecxz
in
sub
push
inc
cmp
push
xchg
adc
pop
addr16
stos
fistpll
adc
rcrl
and
jno
imul
mov
pop
out
mov
pop
hlt
adc
adc
jle
mov
fnstsw
movsl
daa
in
outsl
stos
fnsave
push
adc
loop
pop
out
or
dec
fs
push
insb
stos
jbe
leave
xor
push
sub
xlat
mov
xchg
push
mov
sub
fisubrs
push
stos
out
ja
mov
mov
push
push
ljmp
movsb
adc
xor
in
lods
fldl
ja
mov
shll
faddp
sbb
rcl
inc
xchg
jle
inc
lods
xchg
subb
xchg
mov
push
bswap
add
pop
or
fisttpll
mov
mov
sub
mov
icebp
mov
mov
cmpsb
mov
nop
fs
sub
cld
push
mov
outsl
add
sub
mov
adc
bound
sahf
xor
sbb
xor
xchg
and
movsl
scas
pop
pop
dec
out
outsb
loopne
sbb
pop
lods
push
lea
imul
mov
inc
bound
mov
psubsb
inc
ds
xchg
in
jp
and
and
and
rorb
andb
adc
sub
test
xchg
add
test
flds
inc
lahf
repz
push
or
xor
outsl
add
add
push
dec
ds
pop
dec
es
mov
xchg
mov
jmp
loopne
fcomip
mov
in
jg
arpl
stc
sbb
and
add
and
jmp
xor
frstor
test
mov
sbb
imul
mov
adc
jle
mov
sbb
stos
inc
iret
push
arpl
lods
adc
inc
cmp
xor
bound
pop
xor
pmulhuw
or
push
add
jne
xchg
sbb
adc
lahf
and
mov
ss
imul
adcb
cmp
mov
icebp
out
pushf
mov
outsb
aad
mov
xchg
dec
or
pop
push
lahf
sbb
adc
inc
inc
push
pop
and
addr16
and
clc
push
dec
aaa
add
lods
lahf
outsb
inc
cwtl
adc
icebp
xor
pop
aad
loop
imul
cwtl
out
jmp
fists
shll
adc
arpl
xchg
andl
out
and
adc
mov
xor
or
xchg
into
cmc
jo
addr16
outsl
or
fimull
repz
mov
xchg
iret
rorb
sti
mov
inc
push
cmp
nop
mov
jmp
jnp
sub
sbb
inc
mov
jg
test
cmpsl
fsubp
adc
mov
inc
lods
fcomps
sbb
lcall
jle
xchg
mov
or
std
inc
lods
or
lahf
inc
add
dec
cmp
jae
add
xchg
in
pop
push
mov
sub
call
rorl
pushf
adc
sbb
stos
out
adc
aas
xor
hlt
push
xor
adc
out
inc
jg
stos
inc
int3
sub
scas
out
mov
and
xchg
mov
pop
xor
pop
push
xor
int
xor
rorb
push
ret
iret
xor
cmpsl
xor
xor
and
nop
cmp
pop
cmp
push
mov
shrb
aaa
adc
in
mov
int
test
negl
xor
out
in
jno
rcl
jge
sub
aam
ds
rorl
dec
bound
xor
jmp
sub
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
rol
movsb
jecxz
sarb
sub
xchg
fmuls
lds
mov
lret
inc
rcll
sbbb
cmpsl
mov
scas
jge
inc
adc
add
or
rol
enter
pop
jl
je
inc
iret
pushf
mov
jns
mov
jns
sbb
leave
fisubrl
sahf
out
pop
sub
data16
add
ret
push
outsl
push
pushf
xchg
cltd
shrb
xchg
pop
cli
jo
movsl
push
inc
insl
xlat
jmp
xor
in
jae
or
jnp
sub
dec
int3
sub
lods
sti
xlat
cmovns
mov
pop
cmp
cmp
imul
imul
xchg
push
mov
dec
dec
ret
into
add
sahf
dec
addr16
mov
fists
jg
scas
dec
cmp
imul
ficoml
ret
dec
dec
cmp
das
ja
and
push
pause
pop
int
repnz
xchg
cld
dec
mov
lret
cmp
mov
shll
dec
ss
mov
xor
push
xchg
negl
cmp
test
ficoms
outsb
ror
cli
sbb
mov
mov
cmp
insb
cmp
roll
adc
stos
jae
inc
sarb
pusha
add
mov
pop
and
push
sub
lds
pop
aaa
imul
inc
mov
mov
sbb
jmp
fcompl
ret
xor
xor
inc
adc
lahf
sar
xorl
loope
or
outsl
dec
addr16
inc
test
imulb
adc
mov
jns
mov
repnz
bound
push
cmp
dec
jmp
mov
popf
mov
pop
or
sti
mov
fsubp
pop
inc
leave
or
push
sub
mov
add
mov
imul
and
lock
outsb
fdivrs
sbb
rol
fidivs
insl
or
xchg
dec
rcll
push
dec
fldcw
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
sub
xor
mov
mov
imul
aas
out
inc
jne
sub
jmp
das
mov
mov
push
pop
insl
repnz
or
imul
imul
push
call
adc
iret
jb
fs
mov
jne
scas
fbstp
faddl
adc
leave
mov
sbb
ret
pop
xchg
xchg
mov
mov
mov
push
or
testl
in
in
lds
cmp
jbe
stc
sbbl
inc
test
leave
loope
movsl
add
push
inc
mov
pop
xor
clc
ficompl
mov
sub
push
or
pop
mov
lcall
js
insl
cmp
pusha
pop
scas
fmul
lahf
cmpsl
fwait
dec
mov
insb
stos
je
movsb
popw
adc
xor
adc
cmp
incb
fst
or
aam
dec
xchg
in
lret
cmpsl
xchg
fisttpll
fwait
scas
and
cmc
mov
lahf
add
xor
in
pushf
push
or
cmp
shlb
mov
cltd
adc
or
stos
mov
add
mov
sti
and
addr16
scas
cs
fcompl
fwait
adc
mov
push
dec
mov
outsl
add
sti
sbb
test
je
scas
sbb
sahf
stos
pushf
in
push
xor
push
add
xor
mov
les
bound
dec
xchg
lods
xor
ret
loop
mov
lods
cmpsl
sbb
xor
xlat
sarl
push
cmp
arpl
inc
test
into
push
call
inc
add
out
add
fidivrl
adc
pop
fbld
bound
testl
sti
and
js
mov
out
out
insb
mov
cmpsb
mov
or
dec
ljmp
test
sub
out
in
out
lahf
iret
jl
push
adc
push
push
int3
ror
xor
or
enter
in
add
mov
or
loope
mov
inc
int3
std
inc
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
nop
aam
sarb
mov
inc
shlb
mov
push
enter
adc
arpl
loop
lcall
inc
and
push
cwtl
mov
xor
xchg
jnp
cld
xor
xchg
rol
push
xchg
adc
int
cmp
push
faddl
jg
bound
shrl
jnp
stos
inc
sub
pop
mov
leave
dec
xor
decb
cld
cmpsl
lret
push
outsb
push
in
fdivr
cwtl
fcompl
jge
jp
jno
jmp
les
setns
sub
ret
fwait
sub
dec
fstl
and
jp
outsl
fwait
inc
push
cmp
jno
imul
stos
call
sub
inc
mov
test
push
repnz
aam
lea
mov
fistps
movl
inc
leave
cmp
stc
lods
lcall
push
pushf
sub
cmpl
lods
xchg
xor
jge
dec
repnz
pusha
mov
lahf
mov
imul
add
or
test
adc
repnz
int3
and
mov
in
push
mov
mov
jmp
jnp
test
arpl
andb
cli
jnp
xor
clc
xchg
mov
jns
and
ss
dec
push
mov
mov
stc
jg
jno
sub
push
jle
push
insb
call
mov
sub
pop
rol
cmp
stos
sahf
dec
push
loope
xchg
int
cmp
fmulp
push
shll
mov
daa
sub
push
je
call
sbb
jl
aas
and
enter
inc
icebp
xchg
popf
mov
add
mov
xor
xchg
mov
xchg
push
cmp
pop
lcall
mov
sub
or
aaa
xchg
bound
jecxz
inc
push
adc
popf
mov
sub
sar
dec
add
outsb
jb
sbb
arpl
es
push
cld
add
dec
xchg
mov
pop
insb
js
in
pop
sub
or
jl
adc
mov
xchg
out
je
push
sbb
mov
cmpsb
pushf
sar
repnz
cmp
mov
ret
leave
sbb
jo
scas
jb
lcall
lret
xchg
jp
adc
gs
ljmp
ret
lea
mov
insl
stos
rorl
push
dec
iret
cmp
sub
mov
imul
rcrl
sbb
fisubl
cmpsb
stos
insb
adc
je
icebp
cwtl
mov
call
in
xchg
stos
sbb
scas
loopne
and
scas
jbe
stos
push
push
mov
scas
adc
das
mov
outsl
dec
in
ret
mov
dec
push
pop
jae
ds
shl
jno
ss
add
pop
jne
cmc
out
jle
mov
adc
mov
jb
adc
and
xchg
lock
or
iret
std
ficoml
subl
fidivl
pop
test
and
subb
pop
push
insl
shl
push
pop
add
sbb
jp
arpl
mov
int
or
out
xor
jbe
out
aad
in
movsl
sub
jns
pop
jno
fldenv
out
jo
adc
hlt
mov
add
aas
sbb
loopne
lods
xor
dec
push
sbb
and
xchg
lret
stc
xor
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
mov
adc
dec
les
mov
and
xchg
and
mov
fcoml
jl
mov
lods
add
ss
sub
pop
xchg
hlt
xchg
cli
cmpsl
lret
mov
jbe
out
push
adc
add
incb
mov
lahf
rorl
int
pop
mov
out
mov
mov
sub
or
pop
jb
pop
cmpsb
jle
sahf
add
push
js
add
xchg
fidivl
sahf
dec
or
dec
or
fs
pop
arpl
lods
mov
push
notl
popa
scas
test
and
lahf
std
mov
mov
loop
xlat
test
jae
xor
jns
mov
fcmovu
mov
sahf
lds
cld
sbb
jg
loopne
jno
lahf
push
adcl
rcrb
push
xor
pop
ds
cmp
pop
cmp
jmp
lods
rcrl
das
jno
mov
pop
cmp
rclb
inc
xchg
out
lcall
in
lret
cltd
std
jg
scas
adc
aas
pop
push
out
faddl
cltd
lahf
dec
jl
mull
push
jbe
into
jbe
xchg
aaa
negl
mov
fstps
sub
mov
outsb
jp
orb
mov
add
imul
jno
sahf
xchg
mov
mov
mov
adc
aad
and
cltd
xor
test
pop
rcl
loope
fistpll
lcall
add
aas
mov
sbb
sub
iret
fstpt
inc
add
mov
popa
pop
jns
ljmp
xchg
mov
mov
cltd
and
and
das
imul
mov
shr
ret
test
sbbb
pusha
and
xchg
lock
enter
mov
mov
js
add
sarl
addb
push
inc
loop
fucomp
addr16
sahf
clc
jmp
shll
push
push
popa
aam
jne
push
nop
jnp
mov
jl
movsl
dec
mov
adc
shrb
mov
cmpsb
push
dec
loop
pop
xchg
and
add
cmpsb
out
pop
pop
fisubrl
mov
fnstcw
cmpsb
out
stos
lret
mov
outsb
jmp
sti
mov
cltd
xlat
sti
lcall
sub
nop
out
sub
pop
movsl
sub
or
test
fcoms
pop
xchg
dec
test
push
jb
sub
data16
mov
xlat
xchg
jmp
nop
cmc
in
add
jo
push
fiaddl
xchg
popa
call
cmp
xchg
hlt
cwtl
pop
rorb
inc
stos
popf
add
mov
bnd
sub
scas
mov
push
push
cmpsb
sbb
cwtl
stc
mov
add
pop
mov
xchg
int
mov
jge
je
mov
test
lock
sub
into
addr16
mov
cmc
mov
hlt
sti
stc
jmp
mov
mov
sbb
int3
jp
fidivl
dec
rcll
test
mov
or
sbb
sbb
inc
popa
jbe
xchg
pop
adc
out
push
icebp
nop
clc
test
mov
jae
sub
xor
ja
xor
inc
je
mov
jnp
das
scas
cmp
in
push
inc
cltd
mov
scas
jo
pop
es
push
cmp
pop
sbb
mov
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
jp
movsb
jmp
sarb
mov
xchg
int3
mov
test
repnz
into
push
or
leave
in
add
repnz
fildll
cli
shl
insb
mov
or
sbb
out
mov
shrb
push
in
mov
mov
dec
cmova
adc
pop
js
idivb
mov
es
push
mov
lcall
outsl
xor
test
stos
cmpb
inc
subl
push
and
adc
test
mov
jg
in
pushf
and
pusha
mov
pop
jbe,pt
mov
test
clc
insl
adc
lea
mov
fwait
shrl
or
aaa
inc
fwait
sub
mov
jnp
cld
and
iret
inc
sub
out
xchg
push
in
jecxz
test
sub
dec
sar
mov
loopne
fdivs
jmp
sbb
add
cmpsl
fs
pop
cltd
fsts
or
gs
jo
inc
lret
mov
lds
and
or
push
mov
clc
sbb
sbb
aad
push
icebp
mov
shr
mov
jo
jg
in
xor
fsts
or
jns
ret
repnz
rcrb
mov
fwait
inc
mov
adc
sbb
lret
mov
cli
aaa
dec
sbb
inc
cld
adc
jmp
dec
stc
inc
mov
push
daa
mov
loopne
data16
or
fldl
mov
leave
outsb
sbb
test
sti
into
mov
pop
xor
sbb
hlt
loopne
mov
in
out
cld
outsl
decl
shl
xchg
inc
mov
push
fadds
push
out
rclb
repz
add
cltd
bound
enter
push
jp
bound
pushf
icebp
push
lret
cld
or
push
sbb
xor
rol
sub
aam
inc
mov
or
sub
sbb
pop
inc
mov
push
mov
push
cmp
inc
push
daa
mov
pop
ss
jb
push
and
das
mov
lea
sti
pop
les
jo
lds
repz
xor
loop
mov
out
jmp
cmp
mov
pushl
cmp
and
mov
add
sti
push
inc
int3
in
add
add
loope
fnstcw
in
push
inc
pop
popa
sbb
or
xor
insb
cmp
adc
cmpsb
xor
push
popa
mov
mov
mov
insb
fisttpl
jecxz
imul
dec
and
mov
dec
roll
loopne
push
or
loop
push
aam
xor
pusha
lahf
call
or
mov
mov
or
xor
in
lock
mov
orl
fnsave
xchg
divb
push
mov
adc
popa
mov
sub
data16
orb
sub
sub
push
dec
push
fists
nop
stos
cltd
lret
cmp
and
jle
outsb
cld
mov
adcl
imul
mov
xlat
insb
ror
call
and
roll
mov
pop
lock
mov
sub
mov
xchg
ds
mov
mov
xor
arpl
in
lahf
pop
shld
call
xchg
je
in
xchg
pushf
xor
out
jbe
mov
jne
mov
movl
xor
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
test
les
pusha
push
sahf
adc
adc
mov
jb
cmpsl
push
cmp
jne
into
data16
mov
push
push
je
dec
dec
loop
mov
int
or
daa
and
dec
test
fcmovne
jnp
cmc
pop
imul
test
mov
aaa
movsl
scas
clc
aad
mov
out
fmull
ss
mov
or
out
negb
mov
stos
loope
mov
xchg
or
pop
xchg
dec
jns
push
adc
jge
xor
pop
mov
movsb
test
data16
sub
cmp
dec
mov
inc
sti
sub
out
cmp
out
sbbb
add
fisttps
mov
jne
cs
sub
test
pop
inc
jno
ja
pop
rclb
and
xchg
push
push
cld
mov
in
push
xor
mov
xor
orb
shl
lea
movsl
int3
push
or
movsl
jecxz
in
loopne
pop
popf
and
pop
cmp
inc
cmp
xchg
xchg
push
fcomip
jbe
adc
add
add
shr
jp
testb
sub
pop
push
xor
jmp
sbb
sub
out
mov
sub
scas
jns
data16
fstpt
mov
inc
adc
lret
fwait
daa
loop
xchg
repnz
out
jl
jae
jo
dec
outsb
mov
mov
push
repz
in
xchg
int
or
fsubs
add
cmpsl
ret
stos
dec
testl
pop
icebp
sbb
and
ljmp
sub
lds
sbb
dec
aam
roll
inc
xor
dec
lahf
inc
sbb
xor
mov
outsb
jbe
ljmp
mov
mov
and
xchg
adc
adc
jg
or
dec
sete
lea
cmp
push
repz
cltd
cmp
cli
enter
xchg
cmp
mov
mov
xchg
arpl
xor
pop
dec
sbb
inc
mov
shll
movsb
scas
sub
ss
mov
cwtl
cmp
jecxz
push
sub
jae
fldl
or
mov
add
out
jg
fcmovbe
xchg
mov
outsl
ret
hlt
cmp
adc
adc
mov
pop
add
rolb
mov
mov
push
pusha
repz
and
jg
pop
fstl
gs
jecxz
dec
inc
add
cmp
xlat
scas
add
sbb
push
mov
cmpsb
mov
add
lds
mov
in
es
icebp
jno
js
dec
sahf
clc
mov
stos
pushf
sbb
push
pop
sbb
cmp
sub
aas
ret
cmp
xor
jecxz,pt
popa
flds
es
lock
fcompl
add
xchg
inc
add
stos
dec
cwtl
in
std
inc
arpl
sbb
sub
es
adc
ljmp
movsl
or
push
ret
jecxz
mov
nop
add
aam
xchg
jno
cli
fcmovnbe
and
cmpsb
gs
dec
pop
dec
leave
add
mov
push
xchg
mov
lret
scas
es
test
mov
mov
jg
sbb
jl
das
fists
mov
jne
cmp
test
cs
mov
inc
shl
adc
bound
pop
sbb
iret
in
dec
add
inc
mov
jno
and
mov
dec
mov
jns
lock
mov
xor
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
int3
and
add
mov
and
fcoml
mov
sbb
jp
sub
pminub
cmp
adcb
sub
test
lcall
fcmovb
shll
xor
movsl
xchg
pop
sub
dec
push
inc
into
je
sub
insl
daa
orl
mov
xor
std
push
cld
icebp
or
lsl
out
adc
mov
cmp
jb
push
mov
mov
sbb
cmc
xor
xor
arpl
pop
push
shlb
lcall
push
in
or
minps
mul
scas
add
jbe
xor
adc
nop
icebp
or
cmpsl
mov
cli
aam
xchg
jge
xor
mov
cmc
fnstenv
or
fs
imul
dec
xchg
pop
adc
and
adc
mov
pop
sbb
xor
or
pop
jo
push
fdivrl
push
or
cmp
lahf
push
into
cmp
jle
mov
mov
test
adc
cwtl
ds
dec
sbb
jae
es
les
inc
cli
jge
xchg
cmp
lods
mov
shrl
aad
or
repz
cmpl
mov
insb
and
bound
push
cmp
mov
mov
icebp
and
mov
mov
out
ss
fisttpl
xor
lcall
loope
inc
cmpsb
xor
inc
push
js
test
cld
test
pop
lret
xor
out
insb
in
popf
pop
mov
jne
mov
adc
mov
jg
loope
clc
imul
ja
addr16
xor
cltd
bound
xchg
aad
xor
and
jmp
mov
clc
ror
jnp
xchg
rol
jb
and
dec
mov
loop
jge
push
push
into
lock
sbb
and
in
and
cmp
test
dec
lret
std
scas
xor
push
jg
jmp
popf
jmp
cmpsl
and
sahf
mov
ds
jns
ror
jle
pop
jecxz
adcl
add
lods
idivl
lods
xor
pop
cs
or
popf
push
nop
test
add
push
or
aaa
dec
in
movsb
sub
pop
push
cmp
inc
adc
cli
mov
scas
in
xor
daa
mov
rol
int
push
xchg
faddl
dec
sub
ficoml
imul
mov
pushf
rcrl
ret
jg
sub
or
sbb
adc
mov
dec
imul
xchg
dec
ds
mov
int
adc
ret
dec
mov
adc
mov
clc
cmc
dec
out
mov
jno
aas
into
dec
fdivl
mov
fistl
mov
scas
int
mov
jmp
mov
mov
or
xlat
add
lds
jno
pop
dec
adc
movsb
xlat
add
test
mov
test
xchg
outsl
data16
dec
inc
xchg
test
push
test
dec
adc
test
je
push
add
lahf
repnz
sahf
jecxz
lcall
ss
bound
mov
loopne
fsts
mov
sub
in
jg
paddb
test
cltd
lock
rclb
sar
mov
nop
aaa
and
push
and
jb
mov
int
and
dec
lds
in
fmull
xor
sbb
repnz
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
stc
adc
dec
les
ret
cmpsl
jbe
adc
pop
and
mov
rcll
inc
lds
xchg
pop
mov
sbb
daa
pop
xchg
les
pop
repz
add
jecxz
lahf
mov
js
pop
addr16
mov
xchg
icebp
or
mov
ret
xor
cmp
push
into
sbb
and
cmpsb
jg
dec
jae
jno
icebp
cmpsl
push
sbb
loopne
bound
enter
mov
mov
cmp
sub
push
xlat
xchg
into
inc
test
pop
adc
pop
pop
push
mov
push
movsb
push
pushf
inc
adc
add
mov
scas
clc
shr
jl
dec
int
int
sbb
push
outsb
fsubrp
rcll
test
mov
data16
iret
or
pusha
stos
pop
fcmovu
mov
xor
jmp
lret
xor
test
inc
mov
inc
insl
lods
lret
into
push
jp
jle
xchg
push
leave
stc
xlat
cmp
xchg
add
or
sub
cs
hlt
test
sbb
out
ret
push
loope
pop
pop
imulb
jo
xchg
xlat
mov
inc
movsb
adc
in
in
and
sbb
and
nop
cmp
adcb
stc
clc
iret
sub
jbe
pop
jle
push
cli
adc
mov
ret
and
push
mov
mov
jb
jno
or
mov
push
mov
dec
add
jne
ficomps
sub
and
xchg
pop
mov
ja
cld
imul
fwait
inc
mov
push
stc
jbe
inc
lea
gs
or
sub
fcoml
adc
pop
int
mov
cmp
pop
pop
test
inc
bound
fistl
inc
aas
cmc
movl
pop
dec
adc
add
push
lods
lock
lret
insl
inc
fmul
arpl
lahf
xor
mov
mov
dec
pop
xchg
ss
lahf
movsb
sti
daa
jp
cld
pushf
cmpsb
test
mov
sbb
jecxz
mov
ljmp
push
xor
xchg
pop
lcall
push
scas
pop
cmp
mov
popf
push
fsts
adc
pop
jle
jge
add
aam
push
mov
cmpl
pop
pop
inc
test
arpl
enter
fcomip
jns,pn
xlat
and
inc
dec
sbb
pop
jl
add
fsubrs
xor
dec
imul
aad
and
add
adc
test
lahf
and
cmpsb
addr16
xchg
pop
xor
xchg
loop
xor
pop
lea
fwait
sti
shrl
pop
and
sbb
jb
mov
inc
ficoms
pop
pop
jle
mov
sbb
xchg
or
cltd
inc
insl
mov
add
push
lock
int3
adc
icebp
xor
mov
cli
xchg
test
pop
aaa
fs
dec
mov
sti
cmp
pop
jne
pop
jo
divl
movsb
rcl
cmc
jl
icebp
mov
adc
xchg
call
xchg
mov
lds
sbb
fisubl
mov
movsb
dec
hlt
fdivr
je
xchg
push
inc
inc
pop
mov
daa
mov
pop
jno
lcall
cmpb
or
repnz
fsubrs
add
insl
aam
inc
or
mov
pusha
mov
cld
dec
pop
aam
jo
jl
mov
rorl
dec
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
pop
dec
outsb
fstpl
sarb
xchg
fstps
lods
icebp
add
add
mov
xchg
sbb
lahf
ljmp
xchg
sbb
out
repnz
scas
call
je,pn
mov
and
les
push
add
adc
sbb
dec
loopew
aad
adc
test
xor
dec
xchg
sub
mov
sahf
loopne
sub
mov
pop
mov
and
xor
xchg
leave
in
call
dec
call
sub
in
jmp
xorb
int
mov
gs
jg
xchg
inc
or
out
add
orb
hlt
fisubl
out
jno
incb
popf
push
leave
or
cmp
fwait
or
adc
push
add
jo
repz
xchg
inc
pop
or
aam
sub
scas
ds
pushf
movsb
jb
js
cs
inc
cmp
bound
jle
add
ja
or
mov
cwtl
pop
xlat
jbe
xor
sub
cmp
and
sarl
jne
loopne
pushf
adc
shrb
sub
test
add
out
mov
mov
cmp
inc
movsl
sub
add
sbb
stc
insl
fstps
jge
ficomps
add
fs
int3
insl
cmp
nop
negl
adc
lds
in
test
inc
imul
shrb
es
addr16
jno
lock
hlt
fiaddl
test
jo
inc
fidivrs
add
pop
mov
pop
aad
cmp
stos
dec
xor
add
inc
push
push
imul
cmp
and
nop
cmc
and
cmpsb
cmc
je
test
dec
or
dec
push
scas
hlt
cs
imul
jl
test
mov
popa
jle
adc
mov
faddl
or
data16
pop
dec
into
call
out
and
add
or
repnz
xor
inc
jge
push
jge
and
int
adc
pop
sub
add
inc
in
and
xor
jge
dec
ds
xchg
cmp
mov
cmp
ljmp
mul
int3
fs
pop
jle
movsl
sub
fs
inc
ret
int
xor
ffreep
fistl
shrl
jmp
jecxz
push
push
pop
mov
or
dec
mov
mov
ljmp
test
addr16
movsl
test
push
into
mov
stos
out
sbb
mov
out
add
fs
pop
repz
add
pusha
leave
xchg
or
xchg
inc
jecxz
adc
ret
inc
inc
xor
insl
sbb
jbe
outsb
hlt
pop
pop
sub
push
cs
test
dec
pop
lcall
add
jle
idiv
xor
fbld
add
jmp
push
addr16
out
sbb
int3
mov
nopl
fs
xor
mov
dec
jp
outsl
in
sysenter
xacquire
pushf
mov
lds
xchg
incb
out
jno
mov
mov
and
idivl
adc
mov
lcall
ljmp
xor
jne
lock
aas
or
push
push
sub
sbb
in
arpl
xlat
ret
repz
js
loopne
data16
nop
out
cmpsl
sub
add
jmp
mov
xchg
or
jl
test
in
test
mov
orb
cmp
loopne
cmp
and
call
mov
cmp
jmp
mov
xor
mov
mov
nop
sub
fs
cmpsl
outsl
sarb
daa
push
mov
jae
and
cwtl
fistps
cwtd
imull
mov
loopne
jecxz
enter
push
push
mov
mov
rolb
mov
rcl
lret
mov
adc
ja
fwait
icebp
sti
or
loopne
clc
xchg
loop
cmp
hlt
mov
xlat
pop
ja
jns
mov
es
inc
push
lods
fs
inc
movsb
call
popf
adc
push
mov
adc
push
fsubs
mov
mov
ljmp
sbb
inc
jl
inc
fs
cs
data16
mov
inc
imulb
pop
mov
dec
mov
mov
pop
idivl
xchg
iret
aaa
cli
loopne
push
or
and
mov
cmp
imul
adc
mov
shr
iret
lret
sbb
ficoml
je
adc
cmpsl
shlb
pop
jne
aaa
outsl
add
std
sub
push
xchg
das
ss
mov
imul
lods
pop
adc
add
aas
ja
imul
mov
sti
mov
in
adc
aas
pop
icebp
ficoms
xor
mov
mov
pcmpeqd
or
mov
int
jle
push
fwait
mov
jmp
adcl
ficoms
cmp
cmp
sbbb
adc
and
mov
push
mov
cmp
add
sbb
dec
arpl
fcomp
pop
xchg
imul
stos
jae
lock
dec
inc
adcl
or
hlt
mov
sbb
mov
stc
pop
fbld
cmc
pop
cmp
dec
fbld
mov
push
dec
cmp
pop
inc
inc
ljmp
ret
pop
mov
imul
adc
mov
cmp
insb
fadd
cmp
fnstenv
dec
mov
fmul
add
add
push
cmp
push
pusha
into
xchg
test
das
adc
xchg
and
jno
mov
push
icebp
dec
or
dec
mov
icebp
sub
cmp
mov
or
xchg
pusha
pop
mov
leave
or
push
insb
push
push
push
push
nop
loopne
pusha
aad
pusha
and
in
pop
add
push
inc
into
pop
je
and
xor
scas
pop
xchg
adc
leave
ljmp
fwait
call
out
ja
push
pslld
mov
test
sbb
sub
or
add
push
mov
jb
lret
push
push
jae
lods
xor
adc
sub
arpl
lcall
xchg
test
or
ret
enter
push
and
loopne
xor
sti
pop
cmc
das
lods
add
cmc
mov
adc
xchg
push
mov
out
sbb
dec
movsb
jecxz
xor
cmp
movsb
js
jb
adc
fmulp
xchg
sbb
and
hlt
pushf
loop
cmp
jns
fidivs
movsb
or
jns
movsb
mov
testl
bound
xlat
hlt
lds
and
push
popa
cmpsb
mov
push
cli
leave
adc
xor
cmpsl
clc
mov
push
test
out
ja
cli
mov
mov
rcrb
insl
dec
lock
outsl
add
lds
jp
rolb
js
pop
push
xchg
jne
repz
inc
add
xchg
test
mov
xchg
data16
shlb
and
cwtl
adc
xchg
cmp
loope
iret
lret
pop
dec
adc
cltd
dec
mov
inc
pop
push
ss
pop
and
call
xchg
jo
inc
test
mov
add
mov
jmp
cld
sbb
mov
sahf
mov
fnsave
ja
mov
dec
orl
mov
sub
mov
scas
hlt
adc
adc
in
hlt
mov
popf
je
lcall
jb
shl
add
add
and
nop
inc
aam
cmp
xor
or
add
pop
addr16
sarl
cmp
repz
jae
clc
push
dec
mov
addr16
sbb
inc
hlt
mov
enter
stos
and
imul
into
push
push
push
jle
mov
or
imul
xchg
aaa
sbb
push
in
pop
test
mov
adc
pop
cmp
cld
mov
pop
mov
jge
sahf
in
cwtl
pop
andb
jp
push
and
mov
pop
push
sub
lods
add
mov
cmp
in
pop
inc
adc
sar
int3
mov
xchg
inc
xchg
push
dec
cmp
movsl
pushf
mov
lret
inc
pop
les
jo
lock
mov
int
mov
icebp
cmp
push
jl
jb
mov
jmp
sub
aam
pop
scas
rcrl
pop
sbb
lahf
fidivs
sbb
fwait
loope
add
mov
push
mov
les
shlb
insl
push
inc
inc
insb
fisttpll
jbe
mov
inc
or
lcall
sub
fsubs
lods
fstpl
cmp
pop
fmuls
cs
fld
push
daa
xor
xor
test
fs
outsl
aam
cmp
js
sub
mov
xchg
mov
mov
inc
repnz
cmp
cld
mov
inc
stc
sbb
add
lea
outsb
nop
dec
scas
jno
sub
cmpsl
cs
sub
or
sub
lods
inc
xchg
rcrb
data16
dec
js
outsl
in
data16
orb
jle
jecxz
lods
movsl
call
out
divl
bound
cmp
push
out
gs
lea
inc
sbb
pop
test
fistpl
add
inc
mov
and
fstpl
dec
push
in
aad
push
cmp
inc
outsl
jle
xor
test
dec
mov
mov
mov
mov
jle
pop
adc
movl
int3
rorb
xchg
dec
adc
je
xor
mov
loope
repnz
mov
mov
mov
jbe
mov
movl
mov
pop
mov
xor
out
push
subb
std
out
lods
cmp
jecxz
sub
jo
add
ja
pop
xor
sub
das
add
mov
sbb
sti
daa
mov
jbe
push
movsl
test
inc
cs
sub
pop
cmp
es
cmp
and
ret
sub
enter
jb
cmpsl
or
std
icebp
xor
sub
ret
push
dec
cwtl
or
pop
scas
jnp
addr16
sbb
cmp
sub
inc
or
push
dec
loop
xchg
mov
jge
imul
push
in
push
ret
and
lock
lahf
cltd
adc
push
lea
add
iret
mov
push
and
mov
call
movsb
addr16
mov
jbe
sbb
es
pop
xchg
cmp
or
lds
pop
out
pop
add
and
data16
fmul
insl
inc
cwtl
aas
mov
mov
pop
aam
lcall
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
jecxz
repnz
sarb
dec
les
ret
dec
lret
mov
ljmp
inc
stos
scas
in
sar
adc
fistl
add
mov
outsb
sbb
loopne
mov
or
adc
push
sbb
jmp
xor
inc
lret
and
in
inc
imul
inc
pop
push
stc
inc
popa
inc
cvttps2pi
ljmp
sub
enter
or
dec
pop
push
pop
insl
aad
push
xchg
sarb
daa
shrl
lods
jbe
and
push
mov
jg
push
jne
xchg
sahf
xor
out
adc
cmpsb
jl
pop
das
add
test
xchg
ffreep
mov
popa
sbb
and
mov
mov
fnstcw
jp
lcall
jp
and
xor
add
insl
pop
or
jns
push
sbb
add
lds
add
cmp
icebp
lret
inc
pop
inc
mov
jg
pop
pop
test
call
push
xchg
mov
lods
xchg
imul
in
sbb
mov
push
pop
aas
clc
jge
ret
dec
push
lods
pop
int3
fdivrl
xor
roll
outsb
test
test
aam
repnz
xlat
popa
and
bt
test
dec
out
or
mov
lahf
test
lock
mov
xchg
cli
jne
icebp
cmp
js
loop
add
js
test
cs
cmp
sti
pop
jns
sahf
jno
mov
shrb
clc
jge
mov
pop
out
jecxz
mov
das
stos
js
pop
mov
jecxz
call
in
call
sarl
jns
or
adc
ss
sbb
icebp
push
filds
ficoms
js
addr16
dec
test
and
mov
fsts
sbb
cld
jmp
jl
fildl
in
bound
test
scas
or
sbb
aam
pop
mov
out
push
mov
ja
jbe
cmp
sub
xchg
mov
xor
dec
mov
cmp
jo
mov
push
outsl
adc
call
movsb
adc
jl
add
pop
cmpl
stos
push
dec
jg
pop
sahf
adc
dec
insb
mov
hlt
lret
push
push
or
loopne
sbb
adc
mov
scas
and
je
dec
rcr
movsb
inc
cmpsl
mov
mov
out
push
in
add
pop
xchg
push
mov
sarb
mov
mov
pop
xchg
sub
sub
jp
fsubrl
dec
adc
push
ret
bound
push
lret
pusha
jg
fdiv
out
test
dec
jmp
xchg
minps
dec
cld
push
out
push
pop
dec
mov
add
and
and
orb
jne
das
imul
cmpsb
addr16
std
stos
dec
push
pusha
out
inc
jmp
add
mov
dec
cmpsl
inc
jno
daa
leave
lds
out
jge
and
fsubl
call
dec
lock
adc
xchg
fwait
xchg
adc
mov
xchg
pop
test
sbb
ret
ret
cmp
lea
mov
movsb
aas
cmp
pop
arpl
insl
mov
sub
jmp
ljmpw
adc
gs
aad
inc
jns
bound
sbb
pop
add
aas
icebp
std
jo
adc
pop
test
pop
pop
jecxz
aaa
add
fxch
push
std
inc
mov
and
imul
xor
jp
js
push
add
and
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
stos
dec
xchg
les
xchg
pop
sub
or
mov
stc
arpl
xor
mov
in
inc
dec
clc
mov
pop
sub
cld
sub
stos
mov
test
lds
mov
adc
test
jnp
mov
mov
gs
jno
adc
ljmp
and
pop
mov
push
jecxz
cmpsb
std
pusha
leave
das
jnp
mov
sbb
cmp
fldenv
and
movb
sbb
outsl
jnp
and
sub
pop
testb
push
out
jnp
dec
rcrl
mov
dec
ret
sbb
inc
scas
sarb
adcl
outsl
lahf
mov
or
daa
cmpb
test
test
or
jl
out
add
mov
mov
negb
fmull
jecxz
or
jbe
jbe
int
ljmp
push
push
push
xchg
push
jecxz
or
or
out
lea
pop
cs
movsb
mov
icebp
jge
adc
stos
cmpb
push
cmpsl
cs
subb
movsb
mov
jge
scas
cmp
iret
cmpl
push
sbb
adc
xlat
mov
adc
add
add
and
pop
cmp
pop
sub
loope
xchg
dec
les
jmp
add
jp
enter
popa
lods
stc
mov
sub
jecxz
sbb
push
xchg
add
jne
jbe
push
sti
push
pop
mov
cli
std
out
and
dec
daa
jecxz
aam
sub
jbe
sbb
repz
into
dec
stos
enter
aam
mov
and
scas
adcb
sbb
xor
hlt
test
sub
cmc
iret
idivb
mov
imul
inc
cmpsl
test
jmp
mov
dec
lods
inc
sahf
mov
inc
nop
mov
push
mov
inc
sub
sbb
mov
hlt
add
xchg
xor
aaa
add
testl
xlat
aad
push
iret
int
adcb
mov
fs
xchg
push
jbe
mov
rorb
adc
xchg
push
in
dec
inc
pusha
push
fldenv
push
or
lock
mov
loop
jne
imul
xor
scas
jg
inc
popf
pop
stos
rcrl
test
dec
shlb
lcall
les
loope
or
inc
inc
lods
jb
sub
aad
call
dec
jno
mov
push
add
aaa
mov
pop
jns
xor
and
mov
xor
cmp
test
out
lock
and
add
mov
movsb
or
ds
es
jae
jo
or
aad
sub
out
and
dec
fwait
imul
shll
mov
inc
sub
push
jl
pop
ret
dec
sub
xchg
mov
dec
push
jns
pop
fiadds
imul
lock
pop
dec
aad
subb
clc
mov
xchg
jmp
bnd
jge
in
push
and
ss
mov
inc
add
loop
jae
lahf
in
mov
inc
sub
jbe
mov
outsb
out
test
stc
jne
mov
cltd
xchg
cmc
adc
mov
mov
inc
push
rol
cmp
lods
mov
sbb
iret
push
mov
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
adc
sarb
cld
mov
mov
push
push
cwtl
lahf
xchg
dec
lret
fs
mov
fmul
fstl
jb
fs
mov
lds
fadds
adc
adc
and
push
cmp
sub
dec
push
outsl
sbb
call
push
xor
imul
imulb
adc
xchg
scas
popa
xor
fnstcw
cld
in
lahf
rol
push
push
lock
ja
dec
push
inc
shll
subb
or
loope
int3
repnz
stc
push
or
xchg
rol
xchg
adc
push
push
pop
out
push
push
les
mov
psubusb
mov
imul
das
and
add
and
and
mov
in
in
ret
push
jecxz
pop
dec
push
mov
sbb
sbb
lods
mov
pop
jns
mov
xchg
sahf
or
sub
outsl
shrl
hlt
inc
ljmp
sti
aam
xchg
mov
cmp
pusha
pop
roll
dec
out
push
test
lea
cmc
dec
pop
int3
inc
imul
daa
sti
cmp
int
mov
or
testb
enter
jo
jge
sti
stos
nop
cmp
inc
jp
fisubrs
ret
movsl
push
cmp
dec
lods
repz
add
movsb
push
fstps
bound
shl
cmp
mov
loopne
pusha
and
mov
dec
mov
adc
subb
xor
add
int3
leave
cmc
mov
shlb
icebp
mov
push
fdivrl
push
mov
jo
push
push
push
ja
mov
mov
xchg
es
sub
jp
mulb
leave
dec
push
add
xchg
mov
testb
pusha
inc
into
add
inc
xchg
inc
xchg
mov
arpl
ror
hlt
shlb
mov
mov
xlat
xchg
push
pop
xchg
aad
sbb
lret
test
enter
xor
rorl
fcoms
lds
push
dec
dec
mov
bound
mov
push
xchg
stos
push
es
sub
cmp
je
cmp
loopne
fs
aam
fisubs
aam
lcall
ljmp
xor
and
jns
xor
cmp
ja
cmp
or
pop
cmp
sbb
test
mov
add
jmp
out
jp
shl
leave
je
jnp
shlb
stos
cmp
test
sahf
sub
decb
bnd
xchg
jbe
pop
pop
xor
fcomip
lods
ss
jle
or
call
ss
mov
xchg
mov
outsl
push
sub
cwtl
xor
dec
adc
or
and
xor
cmc
cld
add
and
sbb
cmp
xlat
cltd
sbb
add
mov
addr16
xor
or
dec
cmp
icebp
ds
xchg
popf
add
push
adc
cld
jo
inc
push
test
gs
cli
and
subb
movsl
fwait
stc
lret
movsb
js
iret
cli
fadds
int3
jle
xor
nop
sub
ljmp
lock
fsts
mov
jg
jge
divl
shrb
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
loop
push
shll
sarb
add
flds
inc
dec
adc
mov
xchg
and
and
int
xchg
sahf
pop
loopne
stc
mov
or
mov
xchg
adc
mov
iret
jbe,pn
lcall
insl
rorl
and
enter
lcall
lahf
mov
scas
dec
mov
cmpb
aad
and
inc
test
pop
mov
sub
jp
loop
jmp
daa
loope
xchg
mov
pop
sbb
lea
cmp
or
sti
fstpl
pop
mov
inc
int
lcall
or
scas
lcall
shrb
lcall
popl
fisubrl
jg
loope
sbb
cmpsb
rolb
push
push
jle
aad
adc
jecxz,pn
jg
jmp
insb
outsl
lret
shlb
pop
xchg
mov
add
and
xor
and
loope
jns
mov
std
hlt
inc
inc
sbb
icebp
adc
dec
pusha
and
pop
imul
add
popa
insb
dec
icebp
push
imulb
mov
cwtl
ss
insl
decl
jecxz
and
out
xchg
decb
adc
sbb
jae
xlat
lds
or
adc
add
aad
pop
cld
stos
rorl
es
icebp
sti
push
arpl
das
insl
out
adc
shlb
lcall
mov
xlat
or
mov
cmp
test
pop
scas
ja
pop
and
xchg
jb
stos
icebp
jmp
cmp
sub
inc
xor
mov
clc
mov
fisubs
fldcw
nop
cmpsl
sbb
and
pop
mov
sbb
loope
adc
xchg
orl
test
jno
push
loop
fstp
in
iretw
unpcklps
jns
mov
addb
sbb
dec
inc
xchg
stos
lcall
std
cmpsl
push
inc
ret
pop
pushf
push
lcall
data16
mov
and
daa
popl
in
or
scas
cmp
or
sahf
jb
sbb
out
pop
les
fwait
jp
jmp
out
insb
inc
leave
lahf
dec
jbe
xchg
dec
fyl2x
mov
daa
lock
xor
test
pop
add
fwait
loope
leave
cmc
and
call
stos
bound
pop
cmp
test
insb
or
sbb
clc
loop
pop
fnstcw
sbb
les
dec
push
push
mov
scas
sbb
xchg
mov
fucom
popa
and
xor
jge
sbb
sar
loop
pop
lret
fcompl
out
outsl
push
daa
add
sub
sbb
or
jge
outsb
daa
jae
push
sbb
add
ror
jo
out
ds
jge
xchg
shr
iret
add
je
push
aad
nop
inc
outsb
push
push
xor
jbe
xchg
in
mov
imul
icebp
inc
inc
arpl
sbb
invd
stc
sbb
imul
add
jbe
adc
fldenv
sub
inc
sbb
push
or
xor
adc
ja
xor
daa
cmp
pop
xor
jg
lahf
dec
and
dec
push
push
shrl
lods
pop
push
push
push
mov
pop
dec
pop
lds
lahf
jg
jns
in
push
add
xchg
shll
sbb
lods
sub
loopne
ja
or
and
es
movsb
push
mov
cmc
pop
sbb
stc
xchg
es
sub
test
stc
mov
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
stc
or
out
popf
sarb
aam
fdivrl
push
mov
push
cmp
xchg
into
pop
scas
out
jne
adc
dec
xchg
mov
popa
sbb
arpl
and
jb
mov
das
test
adc
xor
push
jo
aam
ret
ficoml
sbb
jmp
pop
pop
repnz
popa
mov
es
sahf
test
out
in
scas
inc
inc
adc
in
xchg
jg
xchg
lret
in
sarl
mov
pavgb
sbb
push
incb
inc
cli
and
sub
mov
aam
fwait
jp
movsb
pop
outsb
mov
aam
xchg
ss
popf
adc
outsl
inc
es
xor
ret
mov
pushf
xlat
test
ljmp
int
xor
xchg
pop
sbb
out
pop
pop
enter
mov
jle
jo
test
call
nop
or
insb
push
pop
jge
sti
jne
sub
push
add
mov
adc
daa
stos
lods
push
pushf
pushf
mov
sub
rcll
cmp
stos
fimull
rcll
cmpsl
ret
pop
mov
enter
pop
cld
aam
xor
jne
push
mov
and
std
test
push
cs
and
stc
dec
fidivl
std
pop
push
push
rorl
mov
sbb
outsl
dec
sbb
loopne
ffreep
push
pop
cmp
sub
movsb
adc
or
scas
dec
or
inc
dec
negb
inc
push
fldenv
lahf
icebp
pop
mov
push
jb
test
adc
movsb
xor
sub
dec
sarl
pmuludq
jecxz
fmull
jg
notl
push
insb
cmp
pop
dec
pop
lcall
rcll
fdivrl
lret
dec
dec
push
pop
pop
cmpb
xchg
sar
push
xchg
movups
mov
insb
inc
fiaddl
push
inc
xchg
or
add
add
push
pop
push
cld
pop
push
push
sbb
lods
push
nop
notl
aad
sbbl
subl
loope
and
inc
mov
enter
imul
out
and
test
mov
pop
testb
aas
rcrl
repz
insl
dec
sbb
lret
cs
mov
sbb
mov
sbbl
test
adc
das
out
lret
ja
frstor
imul
jns
xchg
fidivrl
jl
lea
fstpl
sbb
and
add
shr
leavew
les
xchg
push
outsl
test
adcb
sub
push
js
jb
mov
pop
dec
sbb
adc
jne
mov
xchg
ds
hlt
mov
xchg
jmp
enter
fwait
divl
lds
call
xor
jg
outsl
insb
leave
fidivs
enter
leave
pop
les
or
add
divb
cmp
inc
mov
jmp
xchg
or
xlat
jmp
push
push
iret
dec
es
adc
sbb
mov
or
fwait
lret
insl
ss
lea
jl
rorl
out
pop
dec
adc
outsb
aam
push
push
fld
dec
out
icebp
xchg
scas
jl
xor
daa
fiadds
aam
pushf
insl
xor
pop
test
outsl
pushl
xchg
mov
cs
lods
test
faddl
das
ret
in
push
xchg
cmp
xor
xor
and
xor
fwait
imul
inc
aaa
into
das
mov
sbb
cltd
cmp
xchg
xchg
rclb
and
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
sub
sarl
mov
movsl
dec
fs
rclb
dec
dec
lret
fildl
ret
mov
cwtl
cmpsb
push
into
jp
and
mov
test
movsb
stos
dec
push
jmp
cld
lahf
mov
mov
xchg
lods
jge
jecxz
pop
andl
lds
xor
insb
inc
cmp
pop
jle
adc
dec
outsb
cmp
cmp
addr16
add
popa
jne
popf
lcall
and
das
cltd
aas
out
xchg
hlt
jno
xchg
pop
jmp
fisubrl
std
sbb
mov
lea
mov
jo
call
std
xorl
nop
push
popa
movsl
popa
in
int3
popf
cmp
and
xor
add
push
sbb
inc
inc
jb
in
addl
cmp
jge
nopl
sbb
sub
dec
aad
ret
out
push
push
dec
mov
inc
testl
add
jl
mov
rcrb
out
ds
xchg
test
pop
loop
jb
jge
cltd
mov
mov
or
jae
cmc
sub
outsb
inc
out
and
cmp
stc
add
push
mov
fwait
pop
sub
or
insl
ret
sub
sbb
aad
into
fistl
outsb
inc
sub
mov
call
inc
popf
inc
in
pop
push
mov
fidivrl
fstps
aas
push
jecxz
or
es
jmp
adc
add
jb
xchg
sti
push
leave
addr16
daa
jne
or
jmp
lock
cmp
sub
shrl
frstor
dec
pop
adc
adc
push
gs
test
ss
call
cmpsb
push
iret
xor
cmp
add
mov
push
xor
xchg
xchg
mov
mov
sbb
inc
mov
aaa
arpl
lcallw
mov
scas
adc
pop
xchg
jge
in
cwtl
push
cld
cmp
jae
xor
push
push
mov
subl
pop
mov
pop
pushl
cmp
push
mov
jge
fucomip
pop
jge
lret
xchg
pop
scas
fsubr
in
ret
sub
push
pop
mov
cmpsb
mov
cmp
call
mov
xchg
testl
cmpsb
adcl
xor
mov
mov
inc
lods
out
lods
and
shll
sub
cmp
pusha
cs
test
loop
pop
gs
out
daa
dec
stos
out
sbb
shlb
out
jle
sub
mov
cli
push
jge
hlt
int3
add
addr16
pop
dec
add
adc
cmp
loope
mov
xor
push
jmp
sbb
sbb
xchg
test
push
mov
sbb
leave
inc
xor
add
subl
mov
cmp
lds
inc
or
popa
shlb
push
inc
add
hlt
add
push
mov
and
pop
repz
cmp
or
mov
push
adc
sub
cmp
test
add
mov
pop
and
xchg
ja
mov
dec
sar
in
andb
xchg
add
mov
hlt
xchg
mov
dec
sar
nop
stos
lods
data16
out
pop
add
jnp
mov
addb
je
cmp
mov
dec
decl
sub
push
mov
imul
insl
pop
stos
jp
sbb
dec
jno
and
sbb
mov
out
or
or
frstpm(287
add
test
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
loop
fsubrl
push
inc
jbe
and
orb
dec
adc
outsb
shrb
inc
jge
sub
xor
dec
and
xchg
fdivs
inc
xor
xchg
int
loope
push
addr16
dec
es
stos
push
icebp
outsl
cltd
push
cs
pop
or
or
push
sbb
test
mov
mov
jle
jecxz
ljmp
or
inc
lods
pop
mov
cmp
xor
push
and
push
dec
xchg
fisubl
and
jnp
pop
push
mov
mov
inc
xor
push
imul
add
xor
scas
fwait
stos
xchg
imul
add
stc
mov
xor
inc
adc
xor
xchg
pusha
fstl
mov
ja
inc
jbe
int3
dec
mov
mov
cmp
jne
xor
push
and
mov
jge
outsb
adc
les
ffree
gs
lods
jne
shll
enter
xor
jl
fstpt
dec
jns
lods
addb
sbb
std
aaa
lea
mov
inc
arpl
inc
iret
pop
add
fucomip
push
xor
call
jle
jnp
cmp
or
inc
mov
rclb
clc
pop
hlt
fwait
push
fwait
jns
test
jp
push
mov
add
test
push
sbb
stc
cmp
inc
loope
jbe
jp
ja
flds
mov
sub
adc
mov
pop
dec
and
stc
call
pop
or
mov
stos
add
push
add
inc
out
std
jbe
mov
movsl
stos
test
pop
mov
imul
nop
ljmp
pop
fstps
cltd
inc
test
cmp
fnstsw
ljmp
mov
pop
ss
inc
in
xchg
pop
cwtl
aam
pop
mov
cmp
fmulp
decl
xchg
adc
xchg
shrl
dec
push
test
push
inc
ss
stc
popf
or
cmpsb
das
cli
cmpsb
addb
cli
dec
fcomps
push
mov
jecxz
or
mov
test
out
lahf
test
xor
or
ds
ret
testb
or
xor
or
and
push
dec
push
hlt
xorl
xlat
sbb
mulb
jae
out
push
pop
pop
loope
push
mov
jns
mov
add
nop
xlat
dec
dec
lods
pminub
repz
pusha
sahf
rcrl
or
fwait
shll
xchg
outsb
pushf
inc
push
jle
lock
repz
test
sub
jmp
cmp
mov
sar
and
test
pop
pop
sub
jbe
fninit
cmp
gs
adc
fistpl
push
jns
dec
daa
mov
lahf
mov
jg
xrelease
loope
xor
mov
ljmp
popa
sbb
sbb
lds
repnz
call
mov
mov
push
sub
lods
or
cmp
pop
add
push
push
mov
test
jnp
int
adc
push
fmull
dec
std
adc
les
ss
xchg
lahf
xchg
push
sub
rcl
push
mov
aam
xchg
push
popa
or
mov
fidivs
aaa
adc
pop
scas
push
cltd
dec
jge
cli
sub
test
adc
add
decl
or
adc
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
test
jmp
mov
std
push
jne
ja
aad
ficompl
mov
lods
and
es
jns
and
mov
imul
mov
fildl
stos
dec
lds
or
adcl
repnz
mov
insb
and
mov
push
inc
jns
jnp
mov
and
push
insl
gs
movsb
pop
push
shlb
unpcklps
add
cmp
popa
dec
add
jg
inc
aad
xlat
jne
ret
mov
lds
fsubrl
sti
scas
or
xchg
sbbb
jecxz
or
push
imul
sub
mov
std
mov
das
inc
test
adc
fwait
jg
push
add
push
insb
mov
cli
sbb
leave
lahf
pop
mov
cmp
pop
push
daa
push
inc
add
fwait
sbb
int3
or
dec
out
call
cmp
clc
xor
js
and
in
call
pop
mov
adc
dec
xchg
pushf
push
mov
jmp
imul
into
sub
pop
cs
xchg
cmpsb
in
cwtl
pop
xor
nop
pusha
sub
add
daa
push
add
adc
dec
sbb
jne
sbb
add
cmpsb
push
pop
sbb
cmp
lds
inc
imul
jge
call
pushf
mov
or
mov
loop
lods
insl
cmp
lock
jg
test
aam
mov
outsb
enter
hlt
rolb
mov
aas
repz
rcrl
add
dec
out
stc
data16
lods
jbe
lods
popa
push
fs
xor
lret
daa
lret
rcr
iret
icebp
jge
lock
lds
fucomip
pop
in
popa
loope
mov
jmp
lock
call
xor
inc
pop
hlt
push
add
lcall
xchg
leave
push
pop
movsb
cmpsb
fwait
adc
dec
iret
loopne
addb
fisubl
lcall
imul
rclb
add
or
jmp
xchg
enter
popf
mov
inc
xchg
pop
mov
sbb
push
dec
sbb
mov
incb
into
lods
push
sub
push
shrb
push
loopne
jle
add
xchg
movsl
sub
fnstenv
push
nop
adc
cs
add
sti
ficoml
sti
xchg
inc
pop
nop
mov
nop
test
fistpl
vmovshdup
arpl
push
cmpsb
jo
sub
jmp
sahf
popa
sti
lret
cmp
add
xor
test
and
repz
mov
dec
pop
inc
lret
mov
lea
rclb
adc
fstl
lods
mov
cmp
mov
or
jg
adc
jnp
inc
ret
dec
inc
enter
dec
je
fbstp
ficompl
dec
jmp
sbb
jecxz
rcl
hlt
ret
cmc
mov
jl
jmp
outsl
pop
push
dec
imul
ret
ja
out
lods
cs
cmp
sti
mov
testl
pop
neg
inc
fimull
mov
xchg
mov
xchg
fnsave
mov
imul
fwait
inc
mov
lds
mov
incl
inc
and
mov
or
xchg
jmp
imul
adc
sbb
stos
fwait
lds
mov
xor
sub
fdivr
rcrl
pop
cmc
imulb
xchg
pop
pop
cmp
dec
or
and
fidivl
inc
jbe
mov
cltd
out
inc
mov
lcall
dec
jno
fmul
imul
pushf
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
dec
clc
insb
rcrl
mov
mov
fnstenv
push
aaa
clc
mov
out
pop
cmp
loope
clc
icebp
sub
cmp
hlt
int
imul
pop
je
sbb
pop
mov
jae
inc
pop
sbb
loope
das
pushl
cmp
xor
cmp
xchg
pop
mov
ljmp
sti
fwait
push
movsl
es
sub
cmp
lcall
push
call
imul
xor
or
call
jnp
fcomp
loop
fldt
mov
dec
aas
mov
movsl
insb
pushl
mov
xchg
cmp
outsl
pop
adc
dec
stos
in
subb
out
data16
or
lea
pop
sbb
push
add
sti
stc
ret
add
fidivl
test
outsb
shrl
pushl
out
adc
xor
or
or
sub
push
xchg
adc
addr16
adc
mov
mov
cli
stos
int
push
mov
cli
insl
and
cld
mov
add
mov
loop
jne
push
lea
sub
fwait
dec
fimuls
leave
inc
add
pusha
pop
shl
fidivrs
rcll
pop
dec
test
and
mov
lcall
fwait
add
push
cld
mov
mov
je
insl
sbb
aaa
xchg
ret
in
pop
jo
push
loopne
push
jp
orl
pop
sub
xor
outsl
mov
sti
insb
jb
inc
scas
adc
lea
sub
ljmp
mov
xor
jle
add
push
mov
add
add
xor
jnp
std
test
xchg
das
xor
push
fdivrl
mov
pop
mov
xorb
js
clc
int
pop
inc
mov
in
mov
dec
addr16
dec
pushf
or
inc
iret
push
jnp
xchg
ss
mov
mov
push
test
adc
fldcw
pusha
xor
cmp
mov
fisubrs
sbb
sub
rcrl
dec
or
mov
cmpsl
pop
sub
inc
lds
insl
mov
inc
enter
pop
loopne
jne
flds
mov
pushf
pop
add
movsb
inc
jno
jge
and
adcb
in
imul
aam
xor
and
sahf
dec
call
mov
mov
cmp
sti
scas
xor
mov
jl
xchg
icebp
call
stc
rcr
cmp
loopne
cmpsb
dec
mov
popa
push
shrb
hlt
inc
ljmp
mov
cltd
jne
mov
mov
mov
sbb
lret
aas
or
push
das
or
lock
std
rorl
dec
cmp
mov
int
lret
push
xor
cltd
lock
sub
jp
cmp
ds
sub
std
or
test
xchg
loope
push
mov
xor
adc
pop
inc
add
sahf
push
aaa
pop
filds
push
mov
xchg
mov
sbb
push
aam
fbstp
fisttps
mov
shll
lds
mov
jecxz
repnz
jb
iret
dec
xchg
cmpb
inc
adc
add
inc
add
das
dec
push
rcrl
adcl
or
pop
adcl
jl
or
jne
adc
inc
mov
add
aas
jns
or
pop
mov
mov
jns
cmpb
idivl
sub
adc
pop
loop
xchg
adc
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
cmp
sarb
decl
nop
add
sub
js
inc
push
lret
mov
les
lods
mov
pusha
jb
call
sub
jbe
xor
inc
lods
aam
dec
scas
into
scas
sbb
xchg
lret
pop
cltd
pop
int
notl
add
in
cmp
out
and
fldenv
add
test
add
or
mov
mov
push
pop
lcall
insl
lods
sub
mov
ret
or
mov
inc
fsubr
stos
dec
jnp
xbegin
fstpt
lahf
je
or
stos
pop
jp
subb
inc
and
lahf
into
cmpsb
mov
pop
pop
inc
inc
sbb
mov
inc
cmp
lret
xor
gs
xchg
rolb
sub
add
subl
jmp
push
fistl
dec
add
inc
shlb
cmp
mov
nop
popf
fucompp
fwait
test
push
xchg
pop
or
sbb
stos
mov
mov
shll
or
ds
out
dec
and
ficoml
and
jns
testl
test
mov
dec
xor
and
mov
or
sub
dec
adc
adc
push
mov
and
setle
rcl
inc
inc
push
arpl
pop
jmp
push
subl
bound
push
out
divb
cmp
xchg
leave
movb
mov
repnz
jp
ljmp
shll
mov
dec
mull
adc
sbb
rclb
aad
mov
imul
add
cmp
mov
cmp
pop
xlat
lock
pop
inc
push
out
xchg
sub
into
mov
daa
aas
movsl
and
bound
clc
xor
mov
icebp
inc
fwait
adc
cwtl
mov
xlat
push
aaa
fbld
lret
xchg
add
jb
jp
push
sbb
jnp
es
or
repnz
xlat
and
xor
mov
dec
mov
dec
or
add
sub
lock
aas
mov
test
jmp
cmp
jmp
scas
mov
inc
js
inc
cwtl
xchg
xchg
adc
pop
aad
sarl
mov
outsb
in
sub
and
cmp
mov
mov
sarl
mov
and
jmp
cmp
shll
daa
inc
stos
enter
or
pop
imul
cld
xor
aas
nop
outsb
addr16
dec
arpl
out
sbb
jle
xchg
jecxz
xor
xor
sub
insl
aam
lahf
or
or
mov
dec
jg
outsl
cmpsb
and
xchg
loop
mov
or
push
mov
dec
mov
sub
insb
dec
sub
cltd
mov
jl
sbb
mov
pop
mov
pop
jg
xor
sbb
xlat
in
xchg
jecxz
ja
mov
jg
mov
adc
lods
add
inc
in
dec
ja
test
jno
cmp
or
fisubrl
mov
push
push
pop
or
shlb
cs
or
adc
push
mov
add
dec
cmp
aad
jae
mov
lret
test
mov
in
mov
jne
aam
mov
mov
aam
fistpl
add
std
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
insb
sarl
leave
sarb
sbb
hlt
and
orl
inc
add
jle
popf
test
push
jle
data16
mov
and
int
fcompl
mov
xor
adc
mov
lock
sbb
sahf
jno
addr16
xor
push
scas
mov
push
es
orl
fldl
sub
sbb
mov
mov
subb
mov
jne
cld
int
lret
shlb
imul
jae
std
loop
inc
js
lods
andb
pop
mov
cld
dec
cwtl
lods
orb
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
int3
and
add
gs
arpl
push
outsl
inc
jne
jae
jb
push
and
add
add
add
adc
inc
add
sub
shlb
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
andb
add
inc
add
inc
add
jle
add
addl
or
inc
add
add
inc
add
sub
fsubl
inc
add
push
movsl
scas
or
inc
add
inc
add
add
inc
add
inc
add
daa
inc
add
add
daa
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
add
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
je
inc
add
inc
add
push
movsl
cmp
xlat
movsl
dec
add
jo
inc
add
inc
sbb
hlt
stc
sarb
inc
pop
jg
add
add
add
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
add
test
or
test
adc
test
sbb
test
and
test
sub
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
add
jle
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
mov
inc
add
test
roll
leave
test
int
inc
add
test
aad
inc
add
test
fldl
add
test
jmp
test
icebp
test
xlat
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
inc
sub
mov
add
add
xor
add
add
add
add
add
add
add
adc
add
add
add
add
add
push
mov
add
mov
add
add
pop
mov
add
add
jle
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
add
adc
add
mov
add
mov
add
add
add
pusha
mov
add
add
orb
add
mov
add
add
fimull
add
clc
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
add
mov
add
test
add
rorb
add
hlt
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
outsb
mov
add
mov
add
add
les
add
mov
add
mov
add
lea
add
add
lea
add
add
push
lea
add
add
jp
add
xchg
add
mov
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
and
add
xor
add
push
mov
add
add
jp
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
adc
add
inc
popl
add
add
popl
add
add
mov
add
mov
popl
add
popl
add
popl
add
popl
add
nop
add
sbb
add
cmp
add
bound
add
xchg
nop
add
cmpsb
nop
add
mov
nop
add
ficoms
add
cld
nop
add
or
add
cs
add
ds
add
dec
xchg
add
pusha
xchg
add
outsb
xchg
add
jp
add
mov
add
mov
add
xchg
add
rclb
add
in
xchg
add
cli
xchg
add
push
xchg
add
sbb
add
cmp
add
pop
xchg
add
outsb
xchg
add
add
add
xchg
add
cmpsb
xchg
add
mov
xchg
add
loop
add
cld
xchg
add
or
add
push
xchg
add
sub
add
push
xchg
add
pusha
xchg
add
jo
add
adcb
add
xchg
add
ret
add
xchg
add
in
xchg
add
add
add
xchg
add
xor
add
inc
xchg
add
bound
add
xchg
add
mov
add
lret
add
xchg
add
lock
add
add
add
and
add
inc
xchg
add
push
xchg
add
insb
xchg
add
jl
add
xchg
xchg
add
pushf
xchg
add
scas
xchg
add
mov
xchg
add
loop
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
data16
add
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
