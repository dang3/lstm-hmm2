add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
inc
mov
jle
jle
jg
jle
cmp
fld
ja
or
bound
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
loope
inc
pop
push
pushf
daa
pop
push
cmpsb
test
es
lea
movsl
lods
push
outsl
js
aaa
or
cmp
sti
repz
in
dec
sbb
sahf
and
xor
jne
xchg
cmp
icebp
xchg
push
inc
sub
imul
mov
jle
jb
and
push
push
add
add
jecxz
push
hlt
movsl
mov
insb
int
sub
rcl
pop
int3
movsb
pop
das
repnz
dec
aad
mov
hlt
inc
int
inc
xor
mov
inc
sti
adc
mov
adc
ret
xchg
stc
mov
scas
test
das
lods
push
test
sbb
push
jle
add
movb
lret
xor
add
add
adc
and
scas
pop
addr16
popf
lds
fidivrl
jle
ljmp
cli
mov
sti
push
out
rclb
cmpsl
fnsave
pop
add
fcompl
scas
jbe
mulb
adc
cmp
sbb
and
cwtl
out
call
in
jp
pop
pushf
into
sub
add
dec
in
ret
jno
sbb
push
mov
mov
cmpsl
and
jecxz
pop
mov
jae
imul
dec
out
sub
rcl
mov
pop
cmp
sbbb
push
sbb
mov
in
pusha
shrl
stos
xorb
jmp
mov
mov
mov
fcoms
in
js
cmc
loopne
and
and
cld
cwtl
pushf
xchg
stos
rolb
cltd
cs
rcrl
mov
ret
sub
testl
jnp
loop
mov
test
cld
stos
push
fmuls
sbb
cmc
insb
int3
sbb
mov
imul
sub
mov
jo
lock
xor
jge
es
lahf
push
div
fldenv
lahf
jo
pop
add
into
push
cwtl
mull
lods
pushf
scas
shll
jle
and
xor
xchg
lea
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
xlat
adcl
fidivrl
jle
aad
subb
pop
lret
mov
dec
sub
jge
push
jnp
out
xorb
fmull
movsb
sbbb
sbb
sub
popa
jae
notb
push
add
iret
and
in
adc
sub
lret
test
andl
cmp
cld
mov
pop
cmp
sbb
inc
push
pop
xchg
arpl
fildl
push
mov
pop
repnz
inc
sbb
or
fcompl
dec
lds
daa
dec
or
add
jecxz
clc
fistpll
mov
hlt
jle
mov
or
dec
or
jge
jb
push
int
lea
outsl
xchg
pop
fsubr
mov
mov
adc
repz
xchg
jnp
xor
jnp
fnsave
mov
adc
into
call
imul
filds
loop
rclb
fwait
push
repz
test
pushf
adc
vpcmpgtd
sub
clc
pop
out
jno
xor
ret
pop
cmp
out
mov
aam
shlb
inc
jo
jo
or
sbb
ret
arpl
mov
inc
in
dec
jecxz
movsl
mov
cli
ja
push
mov
lahf
push
test
mov
les
add
mov
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
push
mov
jle
jg
jle
mov
dec
orl
xchg
pop
leave
shlb
and
in
jno
aas
sbb
xchg
shrb
ret
das
pusha
movsb
rorb
jl
dec
outsb
js
mov
mov
jg
jns
in
nop
pop
sbb
jle
and
fiaddl
pop
mov
sti
sub
daa
add
mov
xchg
lods
cmpsl
in
adc
fs
aad
sub
ss
mov
sub
ja
mov
pop
xchg
in
in
jge
icebp
arpl
jl
xchg
xor
movsl
sub
sbb
insl
mov
nop
stc
adc
mov
fucomp
cmc
jb
fisttpll
loope
jbe
outsl
aas
pop
movl
insl
lds
mov
pop
xor
add
aad
sbb
cs
or
add
mov
mov
fistl
sbb
sub
sub
ja
lods
mov
mov
or
xchg
jo
jmp
orl
xor
jl
subl
adc
sbb
movsl
cmp
js
lret
inc
xor
cmp
xor
mov
dec
sbb
mov
sub
inc
iret
push
call
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
sbb
int3
push
ja
mov
shlb
shrl
mov
cli
dec
nop
dec
fdivrl
repnz
adc
lea
pop
pop
outsl
ljmp
dec
jle
imull
add
mov
ds
sub
in
test
addr16
movsb
xadd
push
cmpsb
lcall
imul
mov
push
sahf
cmp
jno
hlt
popa
add
fisubl
hlt
sbb
or
dec
sahf
cmp
or
and
jecxz
or
mov
and
sbb
mov
jmp
xchg
pop
add
repz
mov
nop
cmp
stos
iret
cld
cltd
repz
fistpl
rcrb
mov
ss
or
mov
sub
mov
lret
jno
push
test
shlb
js
outsb
adc
lock
lods
xchg
xchg
rcrb
inc
jge
push
into
inc
jo
incl
fiadds
cli
mov
sub
and
push
lods
idivl
movsl
pop
sbb
in
gs
mov
add
xlat
xor
popa
das
mov
adc
jae
cli
and
mov
pop
mov
movsl
sub
gs
scas
cmpsb
jbe
pusha
add
or
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
out
mov
fidivrl
jle
wbinvd
adc
loope
sbb
fdivrl
inc
data16
popa
dec
sub
sbb
out
fimuls
pushf
cmp
inc
and
xchg
js
sub
mov
dec
in
into
cmpsl
push
xor
adc
out
pop
push
cmp
fisubrl
lds
push
pop
jmp
sbb
mov
loop
pop
arpl
push
scas
lret
fwait
and
dec
sub
int
mov
mov
popf
lahf
sahf
mov
adc
cmp
cmp
sarl
pcmpgtd
sti
aaa
bound
ret
lcall
cmpsb
cmpsl
pop
outsb
cmp
movsb
lahf
lret
cmp
in
jns
bnd
pop
roll
out
popf
sub
pusha
mov
pop
lds
mov
popa
iret
xor
and
in
cld
sbb
icebp
cmp
or
int3
and
jne
xor
xchg
and
fildl
mov
cmp
outsb
add
lods
mov
xchg
sbb
jnp
sub
test
movsl
int3
insb
es
inc
mov
clc
repz
ja
xor
pop
sub
xchg
cli
or
push
out
ljmp
sarb
int3
rcrb
and
xchg
mov
adc
int
sub
mov
add
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
out
stos
rcll
jbe
jle
jg
jle
test
jns
sbb
aaa
mov
sbbb
scas
pusha
into
push
out
xor
adc
dec
jns,pt
aam
xor
mov
dec
adc
das
xchg
jb
cmpb
aam
movsb
int3
xchg
push
cmp
mov
test
fwait
or
fadds
out
push
std
cltd
inc
in
push
jb
mov
stc
in
das
sub
sub
cwtl
lea
sbb
lock
inc
inc
sub
lods
cld
xlat
insb
inc
or
outsl
mov
add
mov
iret
mov
push
sub
push
push
andb
jge
sbb
mov
mov
inc
jmp
div
xor
cli
mov
mov
mov
cltd
dec
das
jp
xlat
inc
dec
pop
mov
out
sub
mov
dec
loopne
dec
mov
mov
jae
inc
sub
push
inc
shl
jmp
jecxz
lods
inc
lcall
stc
jbe
xchg
out
into
cmpsb
icebp
imul
inc
out
jmp
dec
dec
adc
sub
out
sbb
cmp
fnstenv
mov
adc
jne
imul
rorb
push
adcl
mov
jne
or
xchg
mov
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
pushf
push
ja
jle
jg
jle
je
xchg
into
cmpsl
xchg
cmpsb
cli
sbb
movsl
sub
cmpsl
cmp
lahf
rol
inc
mov
repz
push
push
mulb
mov
repz
pcmpeqd
cwtl
repnz
cld
push
jp
les
shll
imulb
cltd
xchg
jle
gs
sbb
aas
xchg
scas
int
pusha
out
push
in
clc
and
fimull
decb
push
push
icebp
dec
or
push
ror
nop
fisubrs
xor
testl
loopew
mov
js
sub
mov
call
mov
sbb
lods
out
mov
cmpsb
mov
cltd
sub
ja
repz
js
inc
push
mov
jbe
nop
test
push
sbb
cmp
test
mov
lret
pop
mov
pushf
push
mov
das
shrb
pop
lcall
ret
rcrl
jmp
sub
bound
cmp
push
xchg
hlt
int
push
push
popf
repz
add
push
sbb
add
mov
or
adc
and
decl
lret
xchg
xchg
xorb
dec
out
mov
clc
aaa
cmpsb
fcomi
add
adc
or
ds
push
adc
mov
xchg
mov
lret
out
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
flds
jle
fidivrl
jle
xlat
add
outsb
iret
cwtl
stos
pop
cmpsl
aaa
sub
inc
aas
xchg
addb
pop
pop
and
dec
fildl
data16
aaa
ss
sub
cmp
daa
dec
sub
push
jb
xchg
add
cmpsb
sub
lcall
cvttps2pi
loopne
push
mov
xchg
lods
dec
and
fxch
mov
dec
push
adc
xor
sbb
test
jl
lret
fneni(8087
and
jno
outsb
insl
inc
stos
inc
sbb
lcall
insb
inc
sahf
out
mov
fcoms
sub
in
mov
cmp
and
ja
cmp
sub
jge
sub
sti
cwtl
movb
aad
stc
pop
mov
adc
pushf
shrb
mov
mov
mov
sub
repz
stos
loop
dec
fcompl
insl
data16
sbb
fmuls
push
mov
add
and
insl
cmp
lcall
sub
insl
es
mov
mov
sbb
push
mov
push
aas
mov
lds
or
data16
movsl
jg
inc
mov
aas
cmovge
scas
mov
push
mov
jp
pop
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
adc
sbb
or
fidivrl
jle
inc
add
pop
push
push
pop
pop
call
addr16
stos
test
nop
inc
icebp
and
aaa
fbstp
jmp
jae
call
cwtl
push
inc
mov
hlt
xchg
aaa
push
xchg
pop
inc
mov
push
push
jl
cltd
sbb
mov
sub
inc
addr16
mov
xchg
mov
jg
pop
adc
mov
xor
in
xor
loopne
and
add
cmpsl
mov
testb
lcall
jae
add
add
sahf
push
test
or
jecxz
dec
ret
xor
xchg
sbb
xchg
sbbl
mov
mov
stos
adc
into
int
fnsetpm(287
pop
pop
xchg
mov
call
or
out
add
sbb
dec
repnz
insl
jle
ds
fs
repnz
sti
cwtl
inc
imul
xor
or
cmp
add
push
adc
lcall
xor
in
pop
mov
js
dec
les
sbb
add
std
bnd
and
xchg
or
jbe
outsb
clc
adc
inc
push
ficoms
mov
inc
ret
jae
mov
or
or
je
mov
or
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
lret
jbe
jg
jle
xlat
cld
add
adc
mov
push
jb
sub
cmpsb
aad
mov
sub
pop
movsb
sahf
jns
jmp
loopne
xchg
cmp
paddd
xchg
push
test
imul
adc
push
out
imul
loope
shl
je
sub
insb
ja
enter
into
insl
out
in
cld
push
pop
bound
loop
cmc
test
aad
xchg
or
xorl
mov
xchg
cld
out
mov
adc
mov
push
xchg
mov
xchg
fldcw
pop
addr16
adcl
mov
dec
divps
mov
lds
sub
sti
jp
mov
fwait
sub
pop
jg
dec
insb
sbb
cmp
jge
ljmp
push
mov
jge
es
jno
fnstsw
dec
int
adc
or
jae
imul
mov
cmc
sbb
aaa
test
mov
test
aam
jne
mov
movsb
jge
aam
shl
in
pop
and
push
mov
cltd
adc
mov
jecxz
push
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
jle
and
jle
mov
push
push
sbb
add
ljmp
pusha
push
dec
push
sahf
dec
jmp
mov
fisttpll
xor
clc
adc
test
call
leave
adc
fistpl
jns
popf
pop
js
lds
in
rep
dec
cltd
aam
pop
lods
xor
jle
mov
sub
cltd
mov
jnp
les
shufps
mov
mov
mov
mov
das
jnp
sbb
mov
adc
push
and
sbb
cmp
in
int3
lret
cli
jecxz
pop
and
jo
rcrb
jo
pop
sbb
daa
cmp
sbbb
lods
insl
push
sbb
ret
pop
mov
repnz
outsl
mov
pop
dec
in
lods
dec
repz
imul
xor
mov
repnz
pusha
js
loop
xchg
and
out
in
imul
mov
push
pop
dec
popa
insb
punpcklbw
xchg
cs
jo
jmp
mov
adc
iret
movsl
dec
dec
mov
inc
push
repz
jecxz
ljmp
lods
loopne
cwtl
add
push
or
jmp
or
mov
or
mov
jl
jle
and
jle
adc
cmpsb
adc
mov
lea
leave
mov
dec
ds
jl
jne
rclb
hlt
sarl
leave
adc
loope
lcall
dec
mov
ja
mov
das
rcr
cmp
enter
clc
jno
jo
mov
inc
cs
fnstenv
sahf
mov
pop
popa
push
test
mov
pop
fildl
or
daa
push
mov
dec
mov
cli
xor
push
or
sbb
out
or
pop
iret
in
xor
sbb
outsb
mov
jno
adc
or
jg
scas
jmp
in
mov
jbe
fsubrl
lods
mov
int
dec
mov
cmp
jl
leave
and
jl
mov
lahf
ljmp
jo
mov
or
popa
std
sub
sbb
add
push
aad
mov
add
push
sbb
sahf
addr16
iret
mov
add
je
add
dec
push
jae
sbb
adc
or
jecxz
xor
test
jmp
xor
inc
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
or
icebp
and
jle
and
jle
out
in
sub
xchg
lahf
add
fwait
pusha
daa
cmp
movsl
push
cwtl
inc
mov
pushf
xlat
mov
int
or
lret
enter
jb
add
push
dec
mov
xlat
out
fs
fistpll
mov
xor
loope
dec
mov
in
push
out
cmpb
add
xchg
jae
wrmsr
xor
pop
mov
loopne
es
mov
mul
out
inc
fcoms
psubusw
or
add
inc
pop
fs
rcrl
sub
fmull
fsubrs
scas
stc
add
xchg
sahf
addr16
jge
sbb
je
inc
pusha
mov
and
popf
adc
mov
jge
mov
sti
mov
or
inc
pop
idiv
push
jp
addr16
sub
jb
xchg
aam
pushf
pusha
orl
aaa
les
cmp
insb
xchg
lock
inc
xchg
pop
dec
mov
jb
daa
lods
or
repnz
mov
shll
addr16
cmp
outsb
dec
adc
jo
movsl
push
in
mov
lds
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
push
or
xchg
sbbl
xchg
push
scas
push
cltd
arpl
jbe
fiadds
les
lds
cmpsl
sbb
mull
jp
mov
push
xor
cmpsb
insl
sub
add
andl
sub
inc
bound
in
cmp
scas
imul
mov
ljmp
aas
cmp
jbe
pop
nop
test
and
xchg
mov
cli
ljmp
test
mov
xchg
mov
call
jno
lods
jp
cmc
jns
cmp
lahf
test
inc
pop
insl
ljmp
sub
xchg
shrl
inc
pop
fstp
mov
sahf
xchg
and
add
mov
or
xchg
call
inc
inc
pop
stc
leave
lahf
ficoml
mov
dec
inc
in
mov
inc
stc
fwait
pop
repz
sbb
fcoms
std
sub
pop
sub
int3
xor
cmp
cli
xchg
mov
fcmovne
inc
lods
jns
in
xchg
pusha
fnstenv
clc
add
add
imul
mov
jmp
jbe
xchg
call
adc
dec
stos
lahf
or
jle
mov
sbb
mov
cmp
push
jecxz
outsb
and
notl
es
test
std
jbe
pop
test
inc
inc
fstpt
shr
scas
test
xor
ss
pop
loop
jno
js
cmp
sti
cmpsb
pop
pop
push
leave
popf
inc
out
pop
int
into
ss
std
ja
inc
imul
std
mov
test
mov
mov
dec
add
jecxz
mov
pop
shrb
or
fimull
out
pop
sub
les
in
mov
loope
dec
xchg
cs
jp
xlat
repnz
test
jmp
adc
imul
stos
add
mov
dec
adc
jae
dec
scas
cmp
or
clc
rorl
rol
sbb
xor
subb
lods
xchg
sbb
jecxz
push
iret
fldl
ja
xor
push
push
jle
fsub
in
jl
dec
dec
sahf
es
cmpsl
imull
cs
subl
outsl
jle
xor
push
insb
mov
aad
and
push
ret
xchg
push
adc
imull
push
mov
loop
ljmp
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
mov
cltd
bound
jle
and
jle
pop
push
mov
mov
imull
in
mov
xor
mov
cmp
lcall
fdivrp
clc
loope
jnp
mull
mov
lcall
dec
cmpsl
sbbb
ret
cmpsb
cmpsl
mov
call
pop
stc
adc
jmp
les
mov
cmpsl
cltd
sbb
test
adc
inc
push
xor
mov
test
pop
rcr
mov
cmpb
pop
testb
cmp
or
sbb
adc
scas
cmpsl
mov
adc
insl
mov
sahf
test
and
lods
and
out
cmp
mov
aaa
jle
pop
adc
sub
rcrb
ds
mov
js
cmp
movsb
add
out
inc
sbb
pop
mov
divl
and
das
fcmove
lea
mov
cmpsb
pop
push
xor
test
push
xchg
inc
inc
sub
int
jecxz
xchg
test
subb
cmp
mov
cmc
xchg
insb
mov
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
insb
adc
jle
jg
jle
cmp
pushf
sti
lea
push
ljmp
ljmp
or
movsl
and
scas
jo
icebp
pop
push
js
sub
adc
xchg
inc
into
or
adc
mov
rolb
gs
ljmp
pushf
mov
jg
pop
adc
sbb
stos
aad
jno
sbb
cwtl
xchg
es
or
sbb
test
popl
mov
movsb
mov
xor
adcb
int
fwait
rol
clc
add
cmp
addr16
cli
inc
and
jo
lahf
adc
fxch
outsb
or
movsl
pop
movsb
es
mov
inc
cmc
dec
or
fsubs
movsl
jae
test
mov
adc
sbb
lahf
dec
faddl
hlt
ds
and
mov
and
pop
sbb
popl
dec
mov
mov
push
mulb
mov
movsl
push
movsl
push
mov
loope
and
pop
scas
fists
inc
aam
lock
or
mov
mov
dec
add
add
sti
mov
stc
repnz
lds
add
and
jle
mov
add
push
clc
or
pop
or
push
xchg
dec
inc
je
das
in
rcrb
cmp
push
dec
pop
mov
or
loope
adc
into
das
outsl
es
add
aaa
push
push
fidivrs
and
popa
fsts
mov
xchg
xchg
xchg
imul
div
test
xchg
add
leave
adc
clc
scas
sub
stc
jle
icebp
dec
xchg
cli
mov
outsb
shlb
aas
jnp
aaa
dec
clc
or
or
imul
or
mov
mov
dec
and
iret
sub
insl
jns
mov
jo
mov
stc
mov
or
stos
movsb
bound
mov
cmp
adc
mov
mov
aas
adc
adc
enter
ret
mov
in
pop
push
adc
out
ds
daa
push
xorl
inc
sbb
pop
data16
incb
inc
push
cs
inc
jae
pop
addr16
jmp
jns
push
or
scas
ret
loop
mov
xchg
cmp
xor
subb
sbbl
loop
pop
test
cltd
jle
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
fwait
xlat
outsl
adc
int
inc
outsb
ret
outsl
xchg
shrb
inc
addr16
or
dec
lahf
ja
pop
push
out
inc
dec
repz
xor
in
addr16
js
inc
leave
jns
cmp
je
jg
loopne
aad
push
out
stos
xor
inc
enter
jne
push
enter
aad
pop
fildl
inc
and
mov
cmp
adc
and
in
daa
or
mov
mov
add
cltd
cmp
add
sub
xchg
jl
sub
rcll
fiadds
cltd
test
lock
cmp
cmp
dec
outsb
jne
dec
sahf
pop
rolb
inc
outsl
dec
outsl
sub
rorl
push
mov
std
mov
xchg
jl
out
xchg
sub
xor
dec
push
divl
addr16
stos
push
pop
xor
mov
pop
movsb
inc
cmp
aam
mov
outsb
mov
xchg
jbe
call
push
test
repnz
arpl
jno
sarb
rorl
pop
mov
push
adcl
xor
xchg
cmp
push
or
hlt
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
push
xchg
pop
jle
and
jle
prefetchnta
push
adcb
inc
out
in
pop
clc
pop
jnp
sbb
dec
popa
mov
dec
std
mov
imul
js
mov
movsl
mov
test
sub
gs
dec
aaa
pop
pushf
movl
lret
xchg
loope
dec
call
mov
mov
xchg
xor
lea
mov
cmpsb
jge
xor
rcrl
in
cwtl
adc
in
out
push
repnz
mov
push
sub
pop
lahf
sub
rcrb
sbb
and
cmp
in
cmp
mov
add
pop
out
je
jbe
and
call
xchg
and
cltd
call
scas
insb
testb
adc
stos
les
xor
movnti
xchg
loop
int
fmull
sbb
inc
enter
push
sbb
mov
insb
mov
push
cld
jmp
xor
call
popf
scas
pop
mov
movsl
push
and
pushf
pop
inc
out
inc
ja
or
inc
popfw
insl
ss
cmp
fcompl
add
js
xchg
pop
lahf
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
sub
mov
jle
jg
jle
xchg
pushf
fwait
shrb
jns
jnp
shlb
push
scas
nop
adc
push
xchg
sub
and
test
popf
jbe
ss
pop
push
scas
ss
addr16
jp
cmc
cmpsb
pop
mov
sbb
dec
ret
in
mov
es
mov
scas
or
mov
dec
iret
sub
jnp
icebp
jb
jge
xlat
or
inc
mov
jb
jae
push
icebp
loop
jl
jp
sbb
mov
movsb
inc
outsb
push
add
fcmove
adc
repz
gs
mov
adc
dec
gs
imul
lret
lahf
cltd
in
mov
cs
cmpb
lea
push
push
aad
lret
bound
das
xchg
xchg
push
daa
push
jl
sub
mov
or
shrl
insb
negl
sub
mov
xor
sub
mov
ficoms
jns
insl
push
cmp
cli
fdivr
lds
hlt
int3
stc
sub
cli
xor
push
or
clc
cmp
pop
sub
xor
push
inc
test
int3
add
repnz
jge
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
sub
push
jmp
and
jle
rorl
mov
pop
in
iret
arpl
or
lret
push
sti
mov
lods
xor
fdivrl
addb
and
arpl
shr
test
clc
xchg
xor
fadds
js
test
pop
nop
xchg
out
xchg
loope
xor
mov
insl
cld
add
out
cmp
sahf
jge
je
sub
je
out
loopne
enter
jno
icebp
xor
je
test
sbb
push
outsb
ret
adcl
mov
add
test
stos
dec
leave
jp
inc
fnstcw
push
cmp
mov
push
flds
rcr
enter
mov
call
shrb
lock
fisubl
call
mov
xchg
xchg
jg
cwtl
fstpt
mov
push
mov
incb
stos
sub
inc
loope
in
adc
dec
adc
pop
mov
arpl
sub
fwait
adcl
lds
mov
not
cmpsl
cwtl
jo
cwtl
out
shrl
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
repz
mov
and
jle
stos
xchg
pushl
movsl
shll
mov
aas
push
cmp
addr16
dec
push
dec
cmp
popa
fs
or
sbb
cwtl
push
mov
mov
pop
lods
movzwl
sub
inc
mov
push
mov
mov
push
xchg
aaa
adc
insl
test
loope
stos
jnp
jecxz
sar
push
enter
xor
add
scas
lds
lahf
push
repz
adc
mov
adc
jo
inc
mov
aad
bound
mov
and
jmp
mov
lcall
cltd
aas
in
out
add
mov
push
push
sub
pslld
push
jae
add
insl
test
lcall
scas
ds
fmul
xchg
notl
jns
lcall
sub
sbb
daa
lock
xor
stos
out
rolb
cli
popf
push
fidivrl
insl
lcall
sarb
lds
mov
test
or
std
movsb
and
ficoms
fdivl
push
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
xchg
and
jle
sbb
cmp
aas
in
cmpsl
call
sub
arpl
nop
lods
ss
jbe
adc
repnz
push
or
cmpsb
mov
fisttpll
or
cmp
les
xchg
mov
dec
pop
mov
cmpsb
dec
addr16
mov
dec
mov
iret
nop
jmp
sahf
sbb
adc
lcall
es
push
inc
inc
mov
les
and
xchg
test
mov
sarl
sbb
and
jmp
enter
xchg
mov
hlt
cmp
ret
and
sub
cmp
add
cmpsl
mov
adcb
das
test
fstpt
or
movb
ret
lods
mov
mov
and
cmp
mov
sub
ss
mov
addl
jp
add
imul
mov
adc
outsl
inc
xchg
imul
xchg
mov
push
lahf
add
hlt
jnp
pop
jb
jecxz
sbb
rclb
cmpsb
dec
lods
push
daa
mov
pop
leave
ret
push
mov
jmp
jb
test
adc
push
adc
jg
jle
in
es
and
icebp
mov
int3
mov
jl
dec
add
ds
popf
dec
test
cmp
addr16
scas
push
outsb
std
lock
fcoms
mov
adc
add
ds
inc
lock
in
cmp
xor
adc
orl
in
push
leave
pusha
out
jge
mov
rorl
out
fmul
aas
sbb
cmpsb
xor
mov
rolb
xchg
push
mov
pop
dec
addb
and
fdivr
cli
fwait
ret
fidivrs
ljmp
sbb
ljmp
pop
mov
mov
push
lock
xchg
gs
gs
fistps
sbb
xor
add
out
dec
jge
push
mov
sbb
sti
shrb
roll
adc
jae
sub
popa
test
xor
jns
dec
or
push
xchg
iret
lahf
xor
xlat
stos
loop
mov
insl
mov
in
daa
mov
and
enter
lea
dec
push
dec
lea
add
jnp
js
xchg
pop
out
mov
adc
out
int3
jmp
add
xchg
shrb
or
or
and
cs
mov
inc
int3
pmaxub
pop
add
inc
sub
xlat
sub
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
push
rcrl
jle
jg
jle
or
jbe
dec
and
pop
cwtl
cmpxchg
jb
xlat
sbb
pusha
lcall
cmpl
fs
in
xchg
mov
sbb
jmp
pushf
loop
lret
push
pop
divb
loopne
loop
outsb
cwtl
push
cltd
mov
into
add
psrad
sbb
leave
mov
outsb
xor
xchg
xchg
jmp
mov
inc
js
outsb
aaa
jmp
orb
divb
adc
pop
mov
xchg
pop
jle
pop
arpl
cmp
aaa
jno
into
dec
enter
adcb
mov
rcl
adc
cmp
jns
and
movsl
xlat
std
jns
in
movsb
mov
pop
xchg
adc
cmp
sbb
cmpl
frstor
das
test
sbbb
fwait
bound
pop
xchg
leave
aad
out
inc
pop
pop
fcmovb
pusha
mov
rcrb
jae
fsts
rolb
stos
pop
add
movsb
jne
hlt
clc
jp
das
cmp
sub
push
out
stos
repz
repnz
pop
xchg
mov
pop
sub
std
enter
mov
xchg
pop
lock
neg
push
pop
xchg
dec
mov
mov
jecxz
mov
movsl
push
inc
pop
lods
fdivrs
mov
mov
cld
rcr
xchg
sub
inc
out
insl
sub
dec
push
clc
dec
test
enter
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
sbb
xor
cmp
mov
comiss
loop
inc
enter
xchg
movsl
aad
stc
mov
jmp
scas
jecxz
pop
adc
add
outsb
xchg
fcmovnb
lds
jno
or
imul
or
pop
or
cmc
adc
xchg
add
dec
call
push
mov
mov
push
mov
mov
sbb
jb
nop
ffreep
dec
mov
pop
and
ss
fisubrl
jno
into
fsts
in
cld
or
cmp
arpl
ret
scas
mov
xor
fistpl
xorb
inc
into
int
aam
xchg
or
dec
subb
rol
jnp
pusha
int3
adc
lret
mov
cld
ficoms
fnstenv
mov
cltd
adc
into
stc
test
jecxz
mov
and
insb
and
jl
mov
je,pt
xchg
push
sbb
shlb
insl
fs
add
and
push
sahf
aaa
cli
jo
sbb
rcll
and
mov
shl
daa
mov
mov
mov
fcmove
lcall
sub
push
and
jne
mov
scas
rcrb
fmull
cld
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
pop
jle
jle
jmp
cmc
jo
imulb
and
mov
adc
pop
ret
leave
repnz
push
push
sbb
shlb
mov
shr
stos
jb
icebp
mov
cmp
lret
or
or
shl
popa
mov
imul
cmp
aad
xchg
jle
inc
cmpsl
add
or
and
loop
mov
in
mov
mov
sub
xor
add
shll
cmpsl
insb
aam
into
out
jl
lcall
popa
popa
rcl
xor
push
mov
insb
les
out
mov
imul
mov
mov
mov
xchg
pop
ss
or
and
jbe
jns
mov
dec
mov
inc
inc
cld
mov
push
or
rcl
test
adc
int
mov
jmp
xchg
inc
add
xchg
pop
rclb
es
repnz
push
sub
or
mov
xchg
ss
jmp
loopne
dec
fisttps
cmp
or
inc
add
mov
mov
xor
addr16
jne
lea
insl
mov
lret
cld
decl
cmpsl
pusha
push
inc
push
insb
add
arpl
xchg
into
or
and
test
mov
out
call
int3
decl
scas
pop
jg
ja
sub
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
jle
jg
jle
mov
fldl
cmp
shl
aad
inc
call
dec
arpl
stos
sub
outsb
jae
out
daa
rol
sub
jne
xchg
popa
test
insb
push
stos
sbb
mov
inc
push
jmp
ds
aas
sub
inc
je
push
jle
andb
aas
xor
xor
and
lods
cmc
cmp
mov
dec
test
enter
push
jg
mov
in
sti
cmc
cmp
lcall
xchg
lods
or
push
call
cltd
fwait
mov
stos
lds
dec
mov
adcb
mov
lret
sbb
aam
pop
sub
dec
lret
call
xchg
xchg
lods
stos
mov
sbb
out
cmp
dec
mov
jb
lret
pop
sbb
rep
cs
jecxz
mov
xchg
mov
push
outsb
fmull
jo
sti
mov
ret
aas
popf
adc
xor
jl
scas
js
push
addr16
adc
cmp
xchg
push
stos
stos
iret
xchg
popf
cmp
jo
test
inc
lret
test
xor
add
sub
test
or
dec
pop
imul
leave
jne
fwait
test
stos
stos
stos
mov
lahf
pop
outsb
in
xchg
push
push
loopne
adc
scas
insl
xchg
repnz
adc
jl
mov
loop
inc
add
inc
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
cmp
out
dec
adc
fdivrl
jle
dec
fcomps
dec
ja
or
test
add
jnp
inc
jg
push
stos
xor
cmp
in
divb
lods
dec
sbb
sub
and
test
filds
hlt
popa
data16
call
imul
addr16
jae
nop
jno
jecxz
mov
les
sbbb
sub
and
xchg
push
jae
lcall
mov
fimull
data16
cmp
idivl
jb
mov
add
stos
loop
outsb
mov
stos
in
mov
fldcw
ljmp
scas
mov
xchg
pop
dec
mov
xchg
xchg
into
stos
mov
inc
fbstp
in
out
inc
loopne
fstpl
xchg
adc
mov
push
das
xor
mov
mov
mov
add
mov
pop
push
pushf
push
pushf
in
and
sbb
push
aaa
jg
pushf
clc
fistpll
jl
icebp
push
lods
lods
cmc
add
subl
arpl
pop
mov
sub
xchg
sbb
arpl
jns
pop
shl
pop
push
adc
mov
lock
inc
ss
mov
cli
adcb
test
jno
aas
enter
mov
mov
jne
dec
sub
mov
pop
mov
pop
xor
add
mov
mov
jmp
and
pop
xchg
adc
arpl
scas
rorl
mov
fdivrl
jle
test
repz
lods
loope
out
mov
shll
pop
or
into
pop
aas
out
sub
sarl
mov
les
sub
push
into
add
mov
fcmovu
xor
dec
xchg
repz
das
nop
dec
pop
mov
test
leave
shld
sbb
enter
push
sbb
ficoml
popf
xorl
lahf
mov
sahf
xchg
sub
mov
cmp
incl
cmc
inc
pop
inc
jnp
fildl
dec
fsubr
repnz
mov
pop
or
mov
jl
or
pop
jmp
mov
ljmp
or
mov
std
int3
jo
xchg
cmp
je
pop
adc
push
jnp
xlat
xor
jae
nop
lods
pop
sub
mov
sub
jnp
xor
mov
sbb
loope
push
mov
rcrl
loop
xlat
inc
xor
leave
arpl
mov
mov
inc
dec
lock
enter
arpl
cmpsl
lea
mov
mov
sbb
adc
aam
sbbb
stc
adc
cmpsl
cmp
adcl
adc
imul
sub
push
ljmp
nop
outsl
mov
daa
mov
lret
pop
das
xor
add
mov
jmp
mov
jmp
push
gs
movsb
es
lods
and
jg
jle
adc
pusha
inc
std
cmpsl
sub
jp
jecxz
addr16
sbb
repz
sub
sub
push
das
or
es
push
test
pop
icebp
jecxz
xchg
test
dec
test
call
jp
mov
ljmp
xor
xchg
cld
cmpb
jge
xchg
cmpsb
fildll
imul
xlat
jo
add
lcall
dec
mov
lcall
loopne
aad
jg
dec
fs
das
lcall
adc
fisttpl
xor
xor
es
leave
sub
mov
insl
pop
mov
loope
jae
jl
gs
xchg
js
aam
subb
into
jle
xchg
cltd
faddl
jb
push
scas
imul
scas
in
jbe
push
test
shlb
pop
leave
inc
fistps
cltd
call
fcomps
inc
jp
mov
xor
mov
jle
dec
call
dec
mov
gs
rclb
hlt
insb
or
inc
std
fwait
mov
xchg
enter
adc
mov
loopne
pusha
outsl
loope
sub
cmc
or
leave
fs
mov
lcall
jnp
cmp
in
call
add
sar
jb,pt
loopne
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
and
push
push
lret
jns
test
mov
lock
in
enter
lds
in
cmp
mov
pop
aaa
mov
cmpsl
sub
xchg
mov
mov
add
loopne
adc
addr16
ja
jnp
fidivl
mov
sbb
push
push
aam
mov
xchg
insl
lods
ja
sbb
shl
sbbl
rorl
fisubrl
sbb
fisubl
dec
pop
leave
icebp
outsb
and
mov
sbb
and
inc
sbb
arpl
push
fwait
int
data16
cltd
xchg
aad
loope
jg
xchg
pop
and
scas
cbtw
inc
movsb
mov
dec
outsl
mov
daa
cmp
push
mov
lds
mov
out
lock
mov
movsl
add
and
inc
xorl
sub
xchg
cwtl
mov
stc
cwtl
pusha
sbb
cmpb
lods
jg
pushf
imul
lods
adc
das
ss
lock
and
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
xchg
and
sub
or
jle
mov
mov
push
popa
gs
cwtl
test
fstpt
cmp
mov
lahf
js
cmp
outsb
dec
push
sub
cli
in
or
adc
cmpsl
fldcw
push
inc
inc
push
pop
aam
in
cltd
das
leave
lahf
jg
dec
in
loope
leave
int3
lahf
inc
imul
movsb
into
mov
mov
jge
test
lea
add
pop
pushf
int3
stc
iret
ret
jmp
mov
lock
mov
mov
xchg
push
out
xchg
mov
jl
or
mov
fldenv
movsb
xor
jl
cmp
pop
imul
mov
pushf
mov
test
into
je
inc
xchg
jb
jmp
lods
test
inc
pop
repz
xchg
and
in
or
pop
outsl
push
pop
jecxz
mov
mov
mov
xchg
roll
lods
add
push
or
loop
cli
shlb
mov
adc
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fimull
mov
or
jle
or
jle
push
imul
or
test
sbb
or
jb
pop
sbb
cmpsl
sub
cld
out
sub
or
sahf
jbe
xor
bound
cmp
out
add
cmp
call
xor
add
adc
cmp
inc
push
fnsave
fs
mov
dec
mov
in
stos
js
mov
stos
jle
mov
stos
inc
addl
int
or
fdivrl
xchg
push
jecxz
negl
inc
loopne
pop
pop
in
jl
add
cmpsl
lret
sub
and
cmp
sub
nop
das
jns,pn
pop
adc
fstpt
fildl
lods
pop
xchg
sbb
int3
icebp
fsubs
lahf
dec
ja
imul
xlat
mov
rep
sbb
sub
xor
jbe
jbe
shll
xchg
xor
inc
sub
cmp
or
outsl
scas
adc
aad
inc
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
xchg
lret
dec
add
jg
jle
and
mov
or
mov
and
call
jp
inc
pop
and
int
jmp
xchg
pop
cmp
xchg
sarl
adc
scas
in
dec
cmpsl
mov
push
ror
pop
mov
leave
inc
insl
roll
xchg
orl
gs
ja
imul
xchg
mov
jge
mov
xor
push
aad
mov
out
xchg
ret
fwait
mov
dec
jg
mov
sbb
mov
stos
es
push
ds
int
std
aam
add
popf
mov
jecxz
popa
dec
arpl
cmp
fbstp
loope
pushf
lret
in
idivl
subl
hlt
push
je
lcall
repz
fldenv
push
or
cmp
mov
rcrl
ret
iret
mov
into
adc
add
push
pop
fwait
loop
lock
jae
stc
mov
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
xchg
jns
imul
jle
or
jle
sbb
push
jns
iret
cmp
sub
mov
sbb
sub
andl
lret
in
movb
outsl
decb
push
loop
mov
mov
xor
mov
jns
mov
cmpsb
inc
cmc
std
in
js
jmp
pop
imul
repnz
call
xchg
out
lods
jecxz
xchg
cwtl
mov
rcll
clc
dec
ljmp
push
cmc
cwtl
ljmp
mov
shlb
jb
enter
repnz
arpl
add
xchg
arpl
or
movsb
inc
mov
loop
insl
sub
pop
aas
out
aas
or
mov
xlat
or
imul
mov
xlat
inc
lea
jae
add
inc
pop
js
jg
lods
cmpsl
add
push
fldenv
adc
pop
sub
jnp
or
fucomip
loop
mov
je
mov
cltd
aam
mov
push
leave
cld
jns
xchg
aad
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
push
pop
lds
jg
jle
mov
cmp
hlt
jge
lea
lock
xor
push
and
aad
imul
xchg
sbb
cmp
mov
mov
lods
push
in
or
aad
inc
jmp
dec
subl
or
cmp
pop
in
ret
pop
cmp
inc
mov
push
sbb
je
xchg
enter
cwtl
or
sub
add
xchg
pop
sub
or
ret
mov
scas
jl
jecxz
fildll
mov
out
iret
and
add
ljmp
lret
pop
imul
loope
add
mov
bound
mov
push
call
and
iret
aad
daa
bound
fmuls
mov
cli
clc
pop
cmp
rcrb
imul
movsb
jmp
call
jb
arpl
cli
adc
nop
push
add
popa
in
mov
add
aad
xor
mov
dec
xorb
add
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
jo
jle
jg
jle
dec
and
cmpsl
fstpl
mov
stos
push
push
jp
or
jmp
mov
jl
sub
loope
push
shrb
fsts
xchg
mov
dec
mov
jno
inc
pop
xchg
outsb
loope
inc
jge
repnz
test
rcll
test
jecxz
xchg
sub
push
dec
sub
pop
and
xchg
test
mov
cmp
out
pop
push
sbb
or
adc
dec
popf
and
pop
outsb
inc
jno
jne
add
outsl
jns
ret
cmc
jne
sarl
mov
bound
xchg
popf
xor
lods
mov
mov
pop
or
mov
mov
mov
inc
and
jecxz
pop
fsubs
clc
mov
ds
ss
fs
ljmp
mov
dec
rorb
mov
dec
in
dec
jb
add
iret
adc
mov
jmp
dec
sub
lock
add
xor
jg
jle
dec
sarb
push
je
in
xorb
ret
in
mov
xor
enter
xor
xchg
and
rcrb
and
fstps
sbb
mov
dec
jne
out
jl
fstps
subb
out
imul
jecxz
test
push
jle
lods
mov
cmp
shl
and
pusha
js
insl
ja
cwtl
push
sub
add
and
pusha
jmp
loope
push
mov
subl
int3
push
ds
popf
cmp
pop
xor
xchg
sub
pop
mov
cmc
and
out
and
test
or
mov
push
or
xchg
sub
pop
xor
pop
lds
jl
lret
xor
sarb
mov
xchg
add
add
or
and
scas
and
push
mov
shlb
cmpb
cmovle
insb
aam
cmp
push
pop
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
sahf
sub
sub
jle
xchg
in
lret
push
loopne
sti
lret
mov
sbbb
and
popf
js
jp
int
mov
or
out
or
scas
rcll
out
dec
cmc
out
lcall
mov
mov
mov
mov
jg
mov
xchg
inc
and
xor
push
pop
outsl
mov
pop
push
ds
jmp
clc
add
cltd
mov
pop
pushf
repnz
xchg
inc
insb
jmp
xchg
xor
int3
inc
add
lret
mov
call
sbb
aaa
jle
mov
pop
test
add
loopne
test
dec
mov
test
mov
lods
dec
xchg
ljmp
sub
rorb
sbb
mov
sub
fcoml
sub
test
jmp
inc
lahf
xchg
stc
jo
xor
mov
out
in
iret
dec
js
mov
lcall
test
pop
jmp
mov
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
ss
push
and
or
jle
push
xor
and
xchg
int3
jnp
or
loope
lds
pop
jmp
push
xchg
mov
push
pop
in
call
jmp
sub
lret
aad
push
popf
divl
xchg
cld
test
sbb
mov
std
or
sarb
into
cltd
sbb
bound
and
fdivs
repz
jle
add
jns
add
mov
pop
sti
or
mov
pop
cltd
clc
mov
into
mov
sub
mov
pushl
dec
cmp
dec
xchg
dec
inc
and
add
inc
pop
hlt
or
daa
in
lea
orl
sbb
mov
mov
pop
xor
stos
jge
fcmovnb
inc
idivb
out
sbb
cmp
and
cwtl
incl
push
mov
aas
sub
aam
sub
data16
fsubr
sbb
dec
lcall
pop
lods
ret
out
int
or
icebp
mov
xorl
cmp
push
mov
xor
in
cmp
iret
hlt
test
xor
jnp
adcb
insl
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
hlt
stc
mov
and
or
jle
jo
xlat
and
dec
stos
shr
pop
sub
push
int
imul
arpl
scas
test
sarl
lock
dec
in
lret
inc
cmp
sub
repnz
fwait
cwtl
add
mov
aam
movb
filds
sbb
arpl
arpl
and
push
popa
aam
lods
jl
in
dec
and
inc
ret
popa
insb
mov
sub
dec
xchg
pushf
les
xor
pop
cli
push
jbe
insb
lods
popf
mov
sub
test
test
mov
cmp
rclb
or
pushf
xor
xchg
dec
xchg
stos
dec
xor
push
sbb
sub
int
and
pushf
cmp
or
rcrb
cmpsb
std
push
and
adc
or
jecxz
cmpb
pop
je
sub
std
sarw
ficomps
and
or
mov
imul
jne
dec
xor
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
push
cld
mov
imul
jecxz
into
scas
daa
lods
jnp
je
jg
dec
lea
andb
xchg
xor
stc
push
imul
mov
xchg
sub
fstpt
scas
test
inc
adcl
ds
xlat
xchg
add
cmpsl
sbb
push
jns
mov
cmp
cmpsb
pop
and
in
aas
adc
jo
xor
mov
jmp
jb
adc
adc
test
add
daa
aad
scas
and
hlt
jo
push
dec
int
xor
add
mov
mov
mov
mov
jmp
es
mov
les
xor
push
jle
jle
jle
lods
fldl
jle
or
jbe
mov
xchg
addr16
mov
push
dec
lahf
daa
lea
push
popf
imul
cltd
lret
cs
cmpsl
xor
enter
sub
or
pop
mov
dec
fs
add
lods
pmulhuw
aaa
xchg
sub
sbb
adc
mov
imul
jnp
data16
cltd
unpcklps
mov
jb
cmpsl
ljmp
sub
adc
cmc
loop
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
ds
ficompl
jg
jle
test
imulb
arpl
or
cmp
pop
loop
cld
popa
or
jle
jnp
and
inc
pop
inc
ret
mov
or
lods
bound
sbb
fdivrs
jb
stc
cmp
jg
dec
lret
fnstsw
push
cli
mov
push
cmpsl
push
xchg
dec
cmp
loope
add
lock
push
cmpl
scas
sub
jns
sub
xchg
xchg
mov
test
adc
and
lds
stos
mov
cmp
jae
push
xchg
test
stos
roll
rcrl
out
xchg
and
pop
call
sbb
lods
loope
sub
mov
cmc
sub
out
jg
lods
jo
mov
mov
adc
lock
adc
aam
lcall
add
lods
xchg
addl
xor
das
mov
movsl
dec
push
mov
cltd
iret
mov
fs
leave
aam
insb
rcl
mov
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
jne
mov
jle
push
jg
jle
hlt
jle
lds
mov
adc
xor
sub
push
mov
dec
je
inc
jge
sahf
mov
adc
and
jo
add
test
dec
test
cs
adc
jg
mov
cld
adc
je
fdivr
rol
mov
cltd
add
sti
ss
scas
repz
daa
xor
mov
pop
mov
cmc
stos
sbb
xchg
cmp
mov
je
out
or
daa
mov
sub
movsb
xchg
push
jg
inc
das
add
push
clc
pushf
imul
or
aas
jb
jp
and
cmp
cld
iret
pop
pushf
out
repnz
cmp
iret
sbb
and
pop
push
jno
aam
dec
fisubs
int
imul
cld
das
push
fcmovnu
insb
jp
jns
push
ljmp
push
fiadds
iret
iret
inc
xchg
aaa
fisttpll
jp
lret
hlt
jmp
shrb
push
pop
sarl
push
jmp
and
pop
dec
push
out
jp
fdivrs
sub
daa
or
idiv
test
movsl
dec
mov
fstps
add
inc
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
pop
insl
daa
jle
push
jg
jle
cmp
test
dec
adc
bnd
xchg
repz
or
dec
jne
stc
leave
out
adc
cs
add
adcb
js
icebp
xchg
call
sub
or
push
test
xlat
stos
js
inc
fstpt
cltd
and
push
mov
or
mov
fiadds
ficomps
popf
ljmp
pusha
sub
xor
inc
sbb
push
jbe
vhsubpd
or
jl
fcmovb
push
add
outsl
sarb
or
push
sbb
mov
lea
test
cmp
inc
insb
add
pop
enter
push
cmp
fildl
test
jecxz
jnp
add
pop
pop
int
pop
in
out
cmc
xor
incl
shlb
or
adc
test
cli
cli
sbb
cltd
es
push
movsb
mov
hlt
pop
mov
pop
sbb
lahf
adc
ljmp
pop
aaa
add
les
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
and
jecxz
and
jle
pusha
jp
sub
xor
xor
lret
iret
xor
ljmp
jecxz
cmp
das
mov
mov
jle
pop
dec
outsl
sahf
hlt
fstpt
lret
imul
pusha
mov
sbb
mov
insl
jecxz
mov
rcr
xchg
nop
mov
in
cmp
jae
out
push
fildl
outsl
cvtdq2ps
sti
ss
sarb
sahf
mov
leave
aam
andnps
into
mov
xchg
cs
in
loopne
bound
or
pop
inc
scas
add
std
pop
aaa
inc
ret
mov
cld
fsubr
pop
fidivrs
jae
cmp
pop
jnp
mov
into
in
adc
fwait
pop
fwait
repz
lock
out
mov
je
cmovbe
jg
push
xor
push
xchg
mov
push
cmp
lea
icebp
ror
inc
fiadds
dec
jno
aad
mov
xchg
cmp
dec
dec
cld
shlb
movzwl
test
jge
stc
aam
cltd
lock
sub
fistl
push
cmp
xchg
jno
pop
push
sbb
bound
xchg
jg
add
pop
imul
xchg
jmp
fists
xchg
in
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
add
xchg
cmp
lds
jle
jnp
cltd
fildll
cmp
and
and
cmp
xor
lcall
dec
lret
pop
pop
mov
in
int
inc
pop
mov
sarl
push
mov
data16
lock
jb
sahf
cmc
mov
mov
adc
mov
pop
add
mov
mov
out
xchg
mov
popf
jmp
std
jmp
mov
fsubrl
and
incb
jo
xchg
jge
cld
xor
inc
stc
jmp
aaa
mov
ret
or
jb
dec
cmp
pop
aas
sti
repnz
cmpb
repz
aad
popf
outsb
leave
jne
sbb
fldcw
test
jae
addr16
inc
push
push
movsb
movl
push
into
and
loope
loop
cmp
shlb
pop
test
cmpb
xor
sub
hlt
xlat
jp
iret
push
movsl
cltd
test
xor
mov
loopne
mov
push
cmp
mov
cmpsl
bound
mov
sub
inc
jne
imul
or
jp
mov
pop
fildll
xor
decl
jecxz
ret
add
jmp
jg
add
jns
cmp
ret
cmp
lds
jle
ss
fnstsw
mov
sub
push
lcall
nop
aas
lea
pushf
push
gs
cmpsl
add
hlt
push
xchg
adc
nop
mov
fistl
clc
ja
or
cmc
out
enter
fdivr
test
out
pop
popf
jns
mov
dec
mov
shr
leave
adc
cmc
stc
es
cmpsl
fsts
dec
cmpsb
or
cmp
and
int3
push
andb
add
pop
fsubrs
int3
sub
lods
sub
or
es
add
subb
shrb
adc
jecxz
pop
pop
loop
dec
dec
dec
out
jns
movsb
pop
jmp
lahf
ret
or
sbb
pop
cmp
mov
and
fdivl
lock
repz
nop
or
pusha
shrb
jns
hlt
pop
cmpsb
enter
sahf
comiss
adc
mov
adc
mov
ror
or
push
inc
lds
fwait
pushf
mov
xchg
movsl
jg
or
cwtl
aas
fimull
or
jg
inc
call
pusha
xor
pushf
lock
mov
sti
pop
mov
or
mulb
loop
cwtl
jo
fwait
sub
lods
dec
mov
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
xchg
fisubs
cmp
lds
jle
fldt
popf
dec
lret
stos
ss
sbb
in
mov
gs
in
cmp
jb
push
bound
aas
adc
pop
cs
aas
jae
sbb
push
pop
pop
xchg
pusha
data16
ja
pop
hlt
lods
push
daa
sbb
dec
pusha
cmpsl
and
inc
sbb
cmpb
dec
mov
popf
scas
push
cld
cwtl
cmp
imul
mov
jl
xor
or
stc
pop
cmp
pushf
popa
in
jp
sbb
xor
ret
mov
pop
push
inc
mov
rcr
xchg
adc
int
mov
mov
out
mov
xchg
add
xchg
cmp
in
adc
loopne
popa
adc
mov
cmp
jo
xor
and
cwtl
fidivrl
inc
stos
pop
add
or
push
mov
lock
movsl
inc
mov
sbb
pop
mov
test
iret
ljmp
std
add
notb
pop
xorl
aad
or
sub
and
pop
in
mov
pop
push
addb
test
fimull
int
xor
mov
mov
xchg
and
fwait
mov
pop
leave
mov
pushf
xor
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
xchg
mov
jle
jle
jle
mov
dec
xlat
push
insl
popa
mov
xchg
in
stos
es
adc
adc
mov
push
icebp
in
notb
inc
andb
rcll
outsb
mov
lea
lahf
sbb
rol
xlat
inc
xchg
aam
adc
stos
pushf
pop
enter
mov
add
adc
fsubrs
popf
sbb
cwtl
and
movsb
or
lcall
push
xor
xor
dec
into
xor
mov
or
or
sub
mov
add
mov
sub
sbb
adc
push
enter
fsub
sub
jne
mov
into
mov
cltd
add
xor
mov
clc
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
and
jle
jle
jle
clc
lea
inc
nop
ret
mov
lods
subl
mov
pop
mov
xchg
aas
inc
lea
sahf
rcll
repz
lcall
adc
icebp
jecxz
mov
fsubrp
xor
call
mov
mov
mov
xchg
mov
ret
cmp
rclb
xlat
pop
out
xchg
outsl
in
insb
xor
xchg
mov
pop
or
stos
cmovg
and
add
adc
aas
mov
mov
mov
aad
sbb
pushf
das
push
sub
dec
iret
sbb
inc
push
sbb
pop
dec
addr16
mov
pop
inc
pop
out
sarb
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
and
jle
mov
jle
je
leave
push
leave
andb
xor
scas
cmp
lcall
addr16
in
and
jmp
in
xor
add
sbb
out
fdiv
dec
adc
lods
sbb
mov
arpl
popa
pop
stos
mov
cmpsl
pop
cmpsl
inc
loopne
rcl
repz
ljmp
mov
ss
push
xor
test
in
lret
push
mov
sub
jbe
mov
push
and
aas
and
mov
add
dec
ds
das
enter
sub
pop
dec
testl
std
sbbw
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
or
lret
jle
mov
jle
shll
xor
jne
into
jecxz
xchg
inc
adc
sti
ljmp
bound
hlt
cmp
lock
jo
xor
enter
push
push
cmp
dec
add
xchg
movsl
mov
addr16
xchg
and
enter
push
pop
rol
loope
pop
fisubrs
add
mov
cmc
push
mov
fimuls
push
dec
aad
arpl
mov
xchg
call
mov
mov
aam
inc
lea
lods
in
add
ret
movsl
lock
xlat
sbb
inc
dec
add
fs
cmpl
add
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
cmpl
xchg
cmp
jle
xor
mov
inc
push
add
cwtl
and
xchg
or
into
das
cmpsl
or
inc
popf
and
aam
inc
sbb
lea
dec
mov
push
pop
icebp
dec
mov
into
adc
cmpsl
scas
jb
add
stos
jns
inc
shl
xlat
shrl
pop
ss
ret
xor
int
gs
movsl
add
cmp
xor
fidivrs
inc
stos
add
push
out
pause
sahf
xor
xchg
addr16
int3
pushf
mov
out
arpl
sbb
push
into
shll
arpl
out
mov
add
std
cmpsb
cmp
repnz
sbb
xor
jecxz
jbe
cwtl
mov
lods
test
pop
xlat
sbb
sub
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
xchg
notb
mov
jle
sahf
pop
jge
mov
mov
shrl
xchg
add
jge
adc
sub
ret
les
adc
adc
mov
or
scas
leave
jle
mov
addr16
inc
xchg
repnz
mov
fs
shlb
jmp
xchg
xorl
daa
out
loope
cwtl
mov
scas
leave
ja
jb
dec
cs
push
or
insl
sbb
mov
xchg
shrl
xchg
push
aas
ja
or
out
pop
sti
mov
jnp
and
mov
rcl
aad
inc
nop
imulb
test
xchg
mov
pop
pop
popf
inc
outsl
lcall
adc
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
push
and
jle
mov
jle
cmp
mov
pusha
aad
andb
inc
mov
or
jge
rolb
jecxz
imul
mov
pop
cltd
sbb
out
sbb
dec
inc
addr16
std
xchg
cmc
das
arpl
ljmp
cld
xlat
push
out
fucom
ja
jmp
jo
mov
mov
sbbb
inc
mov
bnd
lret
mov
lret
inc
cmp
dec
rcrb
pusha
mov
adc
ss
push
lods
mov
mov
lret
movsb
xor
mov
dec
xor
push
shlb
dec
pop
lret
mov
out
pop
or
dec
push
push
inc
dec
mov
fsubrs
and
mov
adcb
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
fdivrl
jle
mov
jle
jmp
push
dec
outsl
or
xor
lret
pop
inc
cld
xchg
or
hlt
xor
dec
cmp
cwtl
flds
sbb
outsl
pop
test
loopne
shlb
lds
xor
pop
aad
mov
cld
fdivrs
xchg
hlt
fmull
outsl
outsb
hlt
pop
fs
subb
mov
mov
push
sahf
sub
dec
out
leave
xlat
mov
das
fistpl
adc
inc
mov
rclb
pusha
xor
mov
sub
mov
stos
adc
cmp
fbld
cmp
cmpsl
aaa
jle
popa
push
jae
js
shrb
cmp
lret
lea
lcall
int3
jae
cltd
pop
rcll
sbb
xor
dec
rclb
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
pusha
arpl
mov
jle
mov
jle
cmp
mov
call
xchg
fsts
jg
out
pop
and
add
lods
mov
aam
popf
testl
xchg
jbe
dec
adc
in
sahf
and
je
and
rcr
loope
aam
jmp
fwait
jp
mov
js
ss
mov
add
mov
addr16
in
sbb
mov
stos
add
mov
sbb
adc
inc
into
sbb
adc
sub
sbb
dec
pop
ja
adc
cmp
call
movsl
in
test
add
lahf
je
mov
stos
adc
adc
aas
cli
dec
call
cmp
add
testb
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
jo
mov
jle
jle
jle
fs
fstpt
push
test
or
daa
popl
sub
insl
pop
dec
xchg
and
lea
pop
shr
orl
cs
push
adc
out
scas
add
nop
inc
movsb
push
int
mov
cmpsb
iret
jbe
pop
dec
sbb
xchg
xor
ret
sbb
xchg
xchg
lret
xor
insl
sbbl
lcall
scas
lret
sub
add
xchg
mov
movsl
push
mov
loopne
jl
and
adc
xlat
mov
fwait
pop
and
cld
xchg
pop
xor
sbb
inc
and
adc
inc
mov
das
jecxz
push
sub
sub
xor
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
push
pusha
rcl
shll
jle
jle
jle
mov
call
call
xchg
mov
jl
lods
fadds
or
and
xor
or
and
dec
daa
invd
and
in
je
call
sbb
push
scas
das
data16
pop
mov
jp
push
jnp
out
call
xchg
imul
xchg
add
subb
inc
adc
lock
xor
das
gs
loope
cmp
pop
shrl
js
pand
orb
add
inc
mov
dec
mov
push
lock
sbb
dec
cmp
pop
or
xor
out
xchg
dec
sub
push
jae
xchg
push
sbb
or
rclb
lahf
jb
add
ret
or
add
mov
jmp
decl
xchg
xor
jle
jle
jle
mov
mov
gs
jns
jnp
adc
ret
shlb
test
jmp
sbb
xor
mov
mov
add
aad
sub
mov
loopne
incb
push
sahf
add
or
xor
adc
jae
sub
fsubs
mov
mov
push
inc
arpl
mov
mov
imull
mov
sbb
je
jne
es
jp
push
stos
pop
lea
js
scas
mov
xor
mov
mov
inc
sub
lret
int
mov
add
push
daa
fdivr
lods
and
cmp
fistpll
insl
fs
stos
pop
imul
jmp
inc
loop
xchg
imul
mov
jle
jle
jle
xor
xchg
in
rcll
jge
lret
ljmp
add
call
mov
ret
movsb
push
enter
jnp
add
xchg
add
imul
jno
jns
mov
jecxz
fimuls
movsb
add
enter
outsb
insb
xlat
movsb
ret
mov
lcall
sbb
xor
adc
dec
add
xchg
xor
xchg
stos
pushf
cli
in
je
cmpsl
push
jns
pop
cmp
lock
mov
repz
push
mov
mov
push
mov
rorl
or
call
lods
outsl
add
dec
imul
and
xorl
pushf
sbb
lret
jmp
rorl
or
enter
add
add
or
addb
add
add
sub
sub
jne
stos
jp
fisttpl
test
jle
jle
pop
adc
jecxz
dec
adc
inc
repz
sbb
orb
stos
dec
push
in
filds
in
push
push
pop
jl
out
popf
stos
scas
xchg
fidivl
roll
pop
cmp
outsl
js
pop
lcall
es
nop
pop
enter
es
int
loop
push
push
fadds
mov
add
dec
nop
sahf
mov
xlat
stos
sub
push
pushf
mov
jle
bound
jb
fucom
fs
add
cmp
arpl
aas
pushf
push
aad
rorb
adc
int3
ss
sahf
loopne
pop
sbb
ljmp
sbb
dec
push
add
je
mov
mov
outsb
shrd
xlat
and
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
jmp
xor
jle
mov
lret
fistpl
dec
test
and
lods
mov
xorb
push
mov
pop
cmpsb
add
xchg
sbb
pop
pop
ret
addr16
arpl
or
cmpsl
jmp
and
sub
push
cmp
leavew
jmp
cmp
repz
ret
add
enter
imul
sub
ljmp
addl
sub
inc
stos
sub
jb
sub
jns
xchg
aas
pop
fwait
outsl
jns
mov
sbb
cmp
out
push
jg
seta
sub
or
push
ds
imul
add
sbb
pop
mov
cld
movsl
cmp
cmpsb
dec
mov
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
addr16
movsb
push
jnp
mov
jbe
daa
mov
lahf
mov
movsb
mov
or
mov
enter
pop
icebp
insb
jmp
clc
sub
mov
dec
inc
sbb
push
mov
dec
cwtl
shrl
shl
bound
rolb
fistpl
mov
mov
cmp
mov
and
js
mov
pop
cmpsb
mov
push
dec
adc
sbb
testb
mov
push
pop
insb
sbb
data16
into
stc
inc
jo
enter
in
lods
adc
fsubl
loope
xor
lret
sbb
lcall
cmp
cld
and
out
int
lock
sub
out
mov
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
sbb
adc
mov
jle
dec
sub
push
inc
jo
sbb
loop
cmp
and
repnz
xor
mov
xor
adc
fbld
idivb
jb
out
lods
loope
or
jge
xchg
and
inc
sti
nopl
push
fmuls
mov
stos
out
call
xlat
inc
nop
pminub
mov
mov
andb
and
je
xor
jge
and
in
jno
std
or
mov
shl
pop
xchg
mov
lea
sub
sub
or
xor
cmc
popa
ds
mov
lea
arpl
lcall
int
sbb
bound
outsl
push
or
fucomi
loopne
add
popa
jno
jnp
jnp
or
inc
daa
fwait
dec
lret
jle
mov
jle
mov
shll
push
lods
adc
xlat
mov
idivl
testb
xlat
xchg
jo
popa
push
dec
popf
mov
xor
dec
xlat
outsl
repnz
int3
shr
cmpsb
cwtl
xor
mov
iret
mov
andl
pushl
inc
mov
or
lods
cwtl
cwtl
add
xor
sub
test
or
icebp
call
dec
lahf
aam
outsb
repz
jle
out
add
xlat
mov
xchg
adc
mov
notb
and
jmp
out
shl
aaa
cs
xor
lods
cmp
pop
inc
sbb
arpl
pop
shlb
lahf
loop
add
or
imul
adc
loopne
add
test
xchg
push
stos
push
push
gs
inc
adc
mov
jle
fistl
cmp
daa
pusha
mov
aam
jg
mov
push
leave
jmp
in
movsl
cltd
fidivs
ret
sbb
and
mov
add
sbb
push
and
pushf
testl
cmp
and
pop
xor
and
pop
aad
sti
push
xchg
hlt
fisubrs
test
stos
push
xchg
jp
ljmp
xchg
add
repz
dec
call
mov
pop
mov
cld
pusha
aam
xor
fxch
flds
adc
push
jae
cmp
cs
shrb
mov
pushf
movsb
rcrl
push
adc
mov
imul
add
jb
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
test
rolb
lret
inc
daa
aam
mov
test
jg
mov
sbb
pushf
jne,pt
notl
pop
cmp
out
push
sarl
or
xor
dec
dec
fstpt
mov
and
out
inc
sbb
fcoms
pop
cmp
cwtl
ss
mov
mov
shll
sbb
xchg
mov
push
aad
movsb
arpl
mov
aam
adc
repz
mov
movsl
scas
sbb
movsl
insb
dec
cmp
jae
adcb
and
and
jns
fcmovnbe
mov
hlt
into
mov
and
sub
pop
inc
mov
enter
pop
and
loopne
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
