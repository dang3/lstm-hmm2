push
mov
sub
mov
jmp
incl
shlb
fs
cmpb
jle
jg
jle
xlat
cmp
ror
pop
add
packsswb
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
das
fcoml
pop
jmp
adc
es
fimull
das
push
hlt
loope
mov
push
xor
insl
xor
dec
std
call
scas
test
jg
add
xchg
mov
mov
mov
stos
fstpt
pop
add
cmp
add
push
sbb
stos
cmpsl
and
mov
in
sub
jo
dec
push
fidivrl
mov
movsl
or
out
in
scas
xor
divl
and
clc
mov
jbe
imul
je
dec
sbb
leave
pop
bound
pop
inc
lea
dec
or
mov
dec
cmp
es
add
adc
xor
jns
mov
or
imul
rcll
daa
aam
add
inc
sub
icebp
out
divl
sub
data16
jbe
mov
adc
test
cs
adc
lods
xor
mov
mov
movl
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
aaa
jge
xchg
push
xor
and
xor
scas
imul
ret
pop
imul
sbbl
sbb
iret
dec
sbb
mulb
xor
xchg
push
sub
jnp
pop
mov
shl
inc
push
or
xchg
setbe
fcmovnbe
jnp
mov
xor
xor
lahf
pop
mov
mov
add
xorb
es
mov
nop
addr16
cmpl
and
mov
jmp
mov
lds
cmp
inc
clc
stos
mov
mov
lea
fiaddl
lahf
xchg
cwtl
popa
sbb
mov
call
call
cwtl
test
mov
addr16
out
push
adc
rcrb
add
xchg
push
or
mov
push
cmpsb
dec
pop
and
stos
stc
adc
les
mov
aam
pop
test
mov
jo
int
or
jb
mov
sarb
js
add
rol
mov
out
jae
cmpsl
daa
arpl
push
adc
and
in
cmpsl
rclb
lcall
cmpsl
dec
cmp
fcompl
adc
icebp
or
imul
sbb
popa
mov
dec
push
inc
rol
jl
mov
incl
imul
mov
aaa
js
lock
cmpsb
and
mov
enter
add
in
cmpb
adc
cmp
add
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
jb
ret
jle
jg
jle
pop
sub
mov
and
sbb
inc
fildl
enter
imulb
push
xchg
cld
sbb
or
inc
sbb
fcmovne
out
adc
jbe
xor
ljmp
inc
fdivrp
xorb
adc
mov
xchg
inc
adc
sbb
rcrl
jg
or
xchg
mov
scas
js
sub
bound
or
lea
outsl
xor
xchg
in
ja
pop
sti
jne,pt
mov
sub
fs
pop
and
or
mov
cli
aad
lahf
xor
dec
and
pop
mov
icebp
roll
popf
xlat
fstpt
test
adc
mov
jne
arpl
ret
aas
mov
shrl
push
addr16
sub
mov
push
add
sbbl
mov
push
push
mov
outsb
adc
aas
popa
sub
pop
stc
or
hlt
mov
and
pop
adc
xor
js
lock
sub
repnz
push
or
jmp
cmp
or
mov
les
sub
loope
ja
push
sub
loope
ficompl
mov
and
div
jp
sbb
jbe
dec
addr16
inc
adc
mov
js
lahf
jns
mov
fstps
sub
fldl
aas
mov
xchg
clc
dec
sub
adc
imulb
or
aas
jo
out
or
jmp
push
and
pop
xor
jno
cmpsl
cmp
loopne
dec
fs
jp
jle
jg
jle
mov
adc
dec
dec
movsb
cld
out
and
jmp
xchg
sbb
stc
cmpsl
push
das
je
popl
mov
pop
cmp
iret
stos
xor
add
xor
push
dec
shlb
sbb
ret
lahf
scas
mov
je
gs
jbe
stos
mov
pop
loop
mov
cmp
mov
pop
cmpsl
jae
push
or
xor
movsl
int
loope
lcall
jmp
or
adc
stos
aas
push
dec
sub
icebp
or
loop
ret
test
decb
dec
test
addl
mov
fsubr
loope
jae
jecxz
cmp
sub
sbb
add
push
pusha
xchg
imul
jbe
push
lods
cmpb
inc
and
insb
test
or
pushfw
test
lea
push
popa
xchg
dec
add
add
cmc
mov
fldcw
push
inc
xor
in
xchg
mov
add
imul
and
mov
fwait
lock
pop
jge
fwait
xchg
xor
sub
repz
add
cmp
test
xor
pushl
sbb
das
imul
loope
pop
ficompl
mov
inc
push
in
jo
imul
outsb
pop
pusha
adc
push
ret
pop
xchg
cltd
pusha
scas
xchg
pop
cmp
push
aad
ja
sbb
inc
in
sahf
push
jmp
mov
push
inc
insb
jo
mov
jne
jae
jne
sub
jg
cmp
mov
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
jmp
xchg
fdivrp
add
xabort
push
add
xchg
out
nop
jp
jno
clc
or
popf
xchg
xchg
jle
mov
xor
sbb
imul
test
js
cwtl
imul
xor
inc
xchg
shlb
adc
mov
jecxz
nop
lret
pop
pop
pop
stc
mov
cmc
pop
bound
lret
cli
mov
popa
and
loope
inc
movsl
int
rorl
jnp
ret
rorb
cmp
dec
mov
ljmp
dec
shll
push
xor
sub
insb
mov
aam
add
mov
stc
mov
jae
movsb
in
cmpb
test
lcall
insl
aad
out
popa
sbb
push
fs
outsb
dec
sub
mov
lcall
jg
cwtl
sbb
out
psllw
mov
push
nop
fcomi
jl
add
cmp
test
mov
sub
test
inc
xchg
push
xchg
mov
es
sub
mov
aam
sub
sbb
push
inc
pop
jnp
arpl
test
stos
test
push
popf
mov
jo
leave
fisubs
test
rclb
loopne
andb
mov
jl
jns
insl
cmp
imul
in
outsl
rcll
ds
inc
jecxz
mov
ss
fimuls
jmp
adc
or
xor
lret
inc
es
xchg
lds
js
inc
hlt
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
add
jle
jg
jle
push
jg
mov
push
outsb
mov
inc
pop
lods
sbb
pop
int
aad
push
inc
adc
nop
jo
mov
jb
xchg
sbb
loop
cmc
es
rcl
pushf
inc
sub
mov
pop
add
mov
mov
push
notb
sbb
cld
sub
aad
movsb
add
and
sub
adc
gs
lea
push
add
int
xchg
xchg
cwtl
js
xcrypt-cbc
cmpsl
xchg
and
or
jne
jl
adc
orl
and
lret
xchg
mov
sbb
inc
sub
xlat
test
mov
xchg
cld
popf
in
test
fisubrl
ficoml
dec
popf
stc
push
popa
mov
lahf
fisubrs
sbb
lods
in
out
add
pop
xchg
test
mov
pop
cmp
sub
lea
pop
xchg
pop
loopne
repnz
sub
les
in
pop
sar
dec
das
cmp
push
sub
cltd
shrb
into
adc
repnz
imul
push
jecxz
and
pop
or
pcmpeqd
xlat
pop
js
mov
aas
sarl
push
xchg
and
jge
add
inc
and
jmp
sub
lret
jno
fnstenv
pop
pushfw
mov
jmp
sub
sub
push
addr16
adc
sub
inc
or
push
testb
lea
jg
out
xchg
test
lods
jle
scas
push
jbe
inc
cld
mov
pop
in
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
jae
cmpsl
rcrl
jle
cwtl
jg
jle
mov
push
mov
lret
xchg
jge
lret
mov
clc
sub
mov
stos
imul
mov
mov
xor
jae
shlb
adc
repz
scas
push
mov
dec
jno
sub
dec
mov
jo
dec
mov
dec
adc
push
add
pushl
jo
lea
ret
loopne
psllw
and
jae
cltd
daa
mov
outsb
rcll
fsubl
and
mov
xchg
push
push
mov
xlat
dec
in
fwait
cmp
leave
imul
insb
ds
lods
adc
cltd
sbb
sbb
ret
js
into
push
and
ja
jg
outsl
lcall
cwtl
sub
add
ss
pop
adc
std
mov
sub
cmp
sub
roll
sub
and
bound
int3
xor
ljmp
xlat
jno
add
int3
mov
inc
push
push
dec
inc
jecxz
in
and
scas
stos
sbb
inc
out
push
es
adc
and
shll
push
fdivrl
jecxz
jb
push
inc
mov
nop
add
cmovnp
inc
add
lock
mov
flds
xorl
jae
push
mov
and
inc
mov
xlat
mov
cmp
or
inc
xor
mov
nop
sbb
mov
mov
mov
adc
ret
incl
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
push
add
jle
pop
fadds
sahf
dec
jg
push
push
lret
fcmovnb
mov
in
mov
movsb
pushf
out
push
scas
jp
je
sbb
ret
js
jae
add
loope
dec
xlat
sub
mov
mov
sub
pop
or
jl
js
lcall
aaa
jno
fsubr
mov
insb
dec
in
pushf
jg
inc
sub
or
push
or
fstps
adc
cmp
mov
push
mov
movsb
mov
movsl
mov
mov
movsl
lods
or
fmuls
das
fbstp
insb
or
test
dec
inc
ja
cltd
jbe
inc
das
xlat
dec
bound
fisubrs
sbb
scas
push
jle
in
aas
sub
xchg
cmp
neg
mov
pushf
insb
in
mov
cwtl
je
mov
inc
mov
cwtl
or
sbb
stos
fldl
pop
pop
pop
mov
jne
cmpsb
dec
sub
dec
test
jb
shl
ret
dec
and
xor
daa
stos
test
rcrb
xor
nop
mov
and
les
jp
sahf
test
outsl
mov
cmp
popa
int
fs
sub
enter
and
sub
out
enter
aaa
das
out
mov
in
out
mov
jle
xchg
or
jmp
cli
fisttpll
in
sbb
cmp
cli
aam
cltd
or
mov
pop
adc
incl
rorl
mov
mov
mov
inc
jge
xor
xchg
stc
jae
imul
fnsave
in
pop
xchg
cltd
scas
adc
push
call
insb
pop
cli
mov
lret
hlt
push
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
push
sbb
jle
push
jg
jle
xchg
das
dec
push
mov
mov
rcrb
sub
fs
scas
mov
imull
stos
popf
fdivrs
adc
xchg
mov
and
mov
call
or
std
enter
push
cmp
cwtl
cs
sbb
sti
inc
clc
iret
pop
jmp
and
dec
mov
mov
pop
rcl
mov
and
xor
fwait
cmp
cmp
mov
cmc
scas
sbb
addr16
notb
test
sub
adc
jmp
mov
decl
and
xor
mov
sti
or
subl
fsubs
jae
inc
jge
pop
test
ret
hlt
and
test
ljmp
sbb
pop
movsb
cmp
aad
call
jb
cld
inc
xlat
cltd
and
jmp
mov
leave
and
sahf
popf
and
xor
insl
dec
test
jbe
pop
testb
or
jecxz
sbb
sub
jno
shlb
fs
sarl
xor
popa
jge
or
cmp
fiadds
push
adc
imul
repnz
int
sbb
xlat
cli
test
xchg
jne
jns
push
ss
out
push
outsl
out
in
cs
jp
aas
xchg
testb
imull
pop
xor
dec
jle
mov
fwait
mov
fwait
or
imul
test
jg
jmp
cmpsb
nop
xor
jecxz
or
xchg
push
jge
iret
dec
pop
dec
popa
movsb
cmp
push
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
lcall
jle
push
jg
jle
test
les
cmpsb
mul
ja
dec
cmp
mov
pop
pop
cwtl
pop
jle
inc
xor
mov
ret
jb
sbb
pop
adcb
or
mov
mov
xor
shl
sbb
xchg
mov
nop
dec
js
and
out
xchg
mov
je
xchg
mov
popf
mov
cmp
fcomp
xor
and
push
push
push
dec
bound
in
out
jno
adc
shrl
inc
dec
or
mov
jg
pop
cli
dec
or
sbb
mov
jne
fadds
ja
leave
loope
loope
leave
cwtl
mov
mov
pop
adc
xchg
xchg
aas
sbb
arpl
daa
mov
out
xchg
jb
repnz
cmpb
xchg
lock
add
shll
int
and
sbb
adc
and
push
adc
repnz
jne
xchg
inc
push
lods
or
adc
xor
les
sub
add
jae
or
int3
or
pop
daa
mov
xchg
fistps
subb
jb
js
add
push
jge
test
sbbb
mov
xor
mov
or
inc
and
mov
jge
adc
les
sbb
icebp
js
xchg
leave
call
popf
mov
sahf
fisttpll
mov
push
mov
jecxz
jbe
jmp
andb
and
pop
ret
cmp
clc
iret
repnz
push
lret
dec
inc
add
js
add
pop
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
movd
jg
jle
mov
in
insl
xchg
pop
xor
mov
lret
nop
mov
inc
adc
test
cmp
mov
push
shrb
xchg
cmc
mov
jecxz
out
and
or
or
mov
je
idivb
add
sub
or
into
in
mov
cli
sbb
cmpsl
stos
mov
pop
pop
lds
je
xchg
ds
movsb
mov
test
fidivrl
lea
aas
mov
mov
in
xchg
mov
addr16
adc
sub
cs
adc
mov
in
sub
out
cmp
test
inc
out
in
or
fwait
repnz
or
mov
push
fs
xor
rol
pop
mov
dec
addr16
pop
iret
mov
adc
xor
or
pop
aad
sbb
dec
fwait
jne
icebp
xor
out
xchg
push
ret
xchg
xchg
fdivs
cmp
push
dec
and
sbb
push
dec
sub
sub
jae
or
and
ret
and
dec
mov
mov
cmp
sbb
adc
jmp
dec
shlb
sub
adc
insb
fwait
daa
js
xchg
enter
jl
pop
shl
push
divb
mov
jbe
mov
and
mov
adc
cmpsb
test
in
sbb
xor
fwait
gs
das
inc
fcoms
mov
rolb
sbb
cmp
es
mov
inc
or
sub
and
icebp
int
xor
insb
mov
enter
stos
stos
ja
leave
int
imul
rolb
aam
lods
cmp
mov
fwait
movsb
cld
cmpsl
and
cmp
sub
in
cmpsl
mov
call
or
xlat
push
roll
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
in
or
jle
jg
jle
inc
ljmp
dec
mov
add
scas
push
add
push
push
pop
adcl
int3
push
daa
popf
push
sbb
imul
jnp
mov
xor
jae
test
lret
sbb
mov
mull
cmp
jge
ljmp
aaa
das
mov
pop
xchg
sbb
movl
xchg
pop
repz
lret
fs
lret
inc
push
add
bound
out
repz
ret
mov
mov
jb
dec
push
lods
or
lods
pop
or
xchg
jge
or
cmp
or
pop
movsb
dec
les
cmp
imull
fldl
scas
stc
cmp
subb
enter
shl
xor
push
sbb
leave
pop
and
daa
test
repz
imul
loop
movsb
jmp
nop
xor
test
cld
cmc
aam
adc
mov
sub
mov
add
dec
ret
mov
stos
or
sub
loopne
out
jae
cli
hlt
aas
mov
mov
pushf
inc
daa
adc
adc
jb
pop
lods
adc
push
js
mov
mov
pop
test
dec
ret
rorl
inc
out
int
add
cmc
push
sub
inc
or
jp
push
push
push
jl
add
push
push
test
xor
cmc
jle
gs
and
inc
cltd
mov
test
test
test
fwait
std
ss
std
sbb
mov
dec
ret
sbb
outsb
xlat
adc
mov
dec
ja
insl
jge
jmp
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
push
dec
or
push
jg
jle
and
fiadds
test
ret
sub
neg
cmc
mov
cmp
or
in
shr
fwait
sarl
mov
pusha
xor
push
idivl
lods
faddl
lahf
mov
pop
sub
stc
clc
mov
pop
sahf
cmp
orb
es
mov
cmp
mov
shl
adc
rcrl
mov
stos
mov
daa
sahf
jmp
inc
jp
stc
push
sub
icebp
and
mov
cld
test
mov
push
pop
aaa
rorb
or
and
jp
sub
push
aam
jno
stos
loop
arpl
mov
in
sub
mov
mov
pop
leave
cmpsb
imulb
pop
out
pop
icebp
jno
sahf
xchg
xchg
push
orl
and
sbb
mov
xchg
cmp
adc
jp
sbb
push
imul
jl
push
bound
xchg
lcall
daa
jb
jnp
imul
popa
popa
cs
push
xchg
inc
movsl
insl
jae
les
stos
rcll
cmpsl
fildl
pop
pushf
dec
lds
sbb
dec
cmpsl
xor
sub
insb
inc
js
xor
dec
je
xor
sarb
or
andl
jne
cltd
nop
loopne
adc
outsl
gs
sub
cmp
lods
inc
sbb
sbbl
jo
cmp
inc
pop
and
mov
testb
adc
mov
lock
inc
adc
sbb
jb
inc
dec
mov
mov
imul
sub
mov
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
sub
or
scas
jg
jle
jbe
in
add
adc
lods
subb
outsb
lods
add
cltd
in
pop
outsl
mov
pop
or
daa
mov
int3
pop
scas
add
outsb
jl
or
push
test
ss
insb
repnz
jg
sti
xchg
test
add
aam
enter
sub
add
stos
mov
mov
out
or
pop
fcoml
and
int
das
cmp
jo
lods
clc
popa
cmp
xor
in
test
je
sarl
call
pusha
xchg
adc
ret
repnz
pop
lods
or
lret
jmp
push
int
sub
pop
pop
jbe
scas
dec
int
xchg
outsl
loopne
mov
loope
repnz
pop
and
cmp
rorb
sub
push
jmp
add
shrd
out
pop
fbld
xchg
test
call
xchg
push
insb
scas
xchg
stc
sub
into
adc
daa
xchg
push
adc
or
add
clc
jnp
cmp
jl
mov
ljmp
mov
aam
ret
jge
in
dec
mov
pop
push
in
sub
jbe
gs
fists
jo
fdivp
xor
notl
sub
dec
adc
pushf
popf
push
push
push
jecxz
push
or
je
xchg
or
and
sub
jecxz
jg
pusha
lds
js
pop
xor
clc
outsb
xlat
mov
xchg
adc
pushf
pop
hlt
pop
idiv
adc
nop
jnp
test
sti
sbb
shrl
dec
cs
xchg
jecxz
clc
sbb
clc
xor
lock
out
in
inc
add
or
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
jb
in
rclb
jle
scas
jg
jle
add
lea
sbb
mov
mov
mov
je
dec
jns
les
lcall
adc
dec
fwait
add
push
or
cmp
aad
inc
dec
pop
and
mov
push
add
push
lcall
into
or
xor
adc
std
adc
in
ljmp
add
jbe
and
outsb
jne
xor
or
jnp
jecxz
cmpsb
add
mov
lea
data16
aad
cmp
rol
lret
inc
cmp
add
in
push
jle
sub
pop
scas
push
imul
outsl
inc
cs
mov
inc
outsb
movsl
pop
ucomiss
inc
aas
iret
mov
xor
movsb
pop
xchg
mov
pushf
pop
pop
jle
sub
out
add
mov
jl
push
dec
sbb
pusha
cmp
mulb
dec
aaa
repz
xchg
movsb
sahf
jg
pop
js
ja
or
outsl
cwtl
stos
call
pushf
inc
imul
cmp
xchg
xor
or
cs
pop
dec
movsb
call
int
mov
jge
push
mov
pop
dec
pop
mov
test
out
int
mov
mov
mov
cmp
mov
cli
test
stc
dec
cwtd
cmp
lock
cwtl
stos
es
mov
inc
je
icebp
pop
pop
stos
and
iret
int3
mov
std
stos
repz
pop
sub
or
test
cmp
pop
sbb
add
or
ss
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
shrb
jle
scas
jg
jle
xchg
fwait
push
push
mov
dec
cmp
lret
sub
xchg
std
rclb
push
adc
or
cmp
rol
movsl
xor
lcall
and
shrb
pop
shrb
rcrb
sub
shll
dec
repnz
and
sbb
ljmp
adc
int3
mov
push
clc
ljmp
sbb
int3
xchg
xchg
dec
add
jne
jle
out
stos
pop
push
icebp
xchg
jl
jge
mov
xchg
js
fidivrl
lds
sbb
icebp
imul
push
and
and
fsubrs
imull
in
nop
in
lock
mov
push
jmp
cmpsl
adc
ss
inc
pop
add
jg
idivl
enter
mov
imul
fisttps
stos
xor
ja
dec
leave
pop
pop
dec
adc
inc
push
or
push
mov
cmp
es
jl
cmc
aad
push
xor
fdivrl
cmp
sub
push
pop
push
and
jl
iret
xchg
popa
xor
sub
dec
ljmp
inc
lahf
jae
mov
ret
dec
jg
pop
repnz
xor
imul
out
sahf
jl
imul
cmpsl
jge
dec
in
fldl
push
inc
mov
add
bnd
cltd
jbe
les
repz
js
je
pop
rcrl
pop
dec
pop
js
mov
or
push
mov
jmp
into
mov
les
mov
jmp
sbb
roll
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
cmp
and
jg
jle
fiadds
sbb
pop
jecxz
in
and
outsb
push
outsb
mov
inc
icebp
push
loop
mov
mov
jo
adc
xchg
adc
outsb
icebp
cmp
mov
xchg
jp
test
lret
cli
lret
addr16
xor
and
in
xchg
xchg
mov
xchg
mov
es
nop
dec
mov
mov
fisubrl
sub
mov
popf
ret
pop
add
push
push
mov
lods
stc
aaa
inc
es
xor
andb
inc
shl
lahf
mov
mov
mov
fadds
push
add
jecxz
lods
aad
ds
lds
and
jmp
fcoms
fstpt
pop
sub
je
leave
lods
jbe
add
xchg
jl
adc
push
lock
lret
iret
and
sub
jb
push
scas
dec
xor
push
pushf
imul
addl
sbb
pusha
subb
pushf
ljmp
xor
aaa
rcrl
jp
ret
cmp
ret
aas
cmp
mov
push
pusha
dec
push
mov
dec
sub
js
inc
mov
ret
inc
push
pushf
mov
or
inc
jae
jae
insl
jae
adc
sub
or
repz
pop
mov
das
inc
mov
movsb
or
ja
cs
movsb
push
test
fsubl
xor
cli
aas
pushf
cli
mov
mov
sbb
clc
xchg
add
icebp
sub
arpl
sbb
lahf
loope
aam
mov
cmp
icebp
mov
jecxz
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
pop
loop
jle
scas
jg
jle
mov
sbb
mov
mov
lcall
repnz
fcmovnb
jb
pop
inc
add
insb
mov
sub
jno
push
lret
jns
push
ja
mov
push
adc
or
mov
hlt
aas
push
imul
testb
int
sti
and
sbb
cmp
adc
adc
cli
lahf
adc
xchg
filds
inc
adc
pop
mov
test
movb
jmp
fucompp
cmpsl
mov
cmp
jo
cmp
dec
mov
dec
ret
mov
mov
andl
pop
xor
daa
jns
jmp
mov
dec
ret
xor
jmp
incl
pop
xchg
jg
outsb
mov
mov
rorl
jmp
pop
jbe
test
sbb
divb
stos
lahf
subl
sub
clc
idivb
repnz
popa
push
in
hlt
mov
int3
in
mov
js
jne
xor
inc
icebp
mov
jmp
mov
dec
lock
insl
jl
pusha
sarb
jnp
push
mov
push
in
jb
sbb
int3
out
xchg
mov
stos
add
pop
bound
aas
push
mov
fdivrl
jl
jle
xor
daa
scas
imul
icebp
aad
leave
sub
gs
add
pop
movsl
pop
lock
cli
push
cmp
cs
push
flds
fldcw
movsl
cmp
xchg
push
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
rorl
dec
ljmp
pushf
pop
leave
divl
add
idivb
mov
mov
inc
dec
dec
out
call
cmp
fcomp
sub
dec
cmp
jno
mov
xchg
jo
lds
scas
mov
into
cltd
inc
push
addb
jno
xchg
insb
inc
sub
and
cmpl
leave
hlt
xchg
jl
mov
mov
cwtl
push
pop
mov
sub
dec
pop
aam
add
mov
jl
pop
fistps
sub
pop
cmpb
cmp
sub
pop
test
je
sbb
cmp
xchg
mov
adc
inc
push
inc
sbb
or
imul
and
notb
stc
dec
inc
inc
mov
jo
xchg
push
push
imul
ljmp
cmp
or
push
pop
sbb
pop
mov
cmp
or
sub
inc
or
std
into
xchg
mov
out
jmp
cmp
push
js
push
or
dec
mov
in
sbb
mov
not
xor
add
int3
sbb
popf
shr
arpl
ret
mov
subl
clc
xor
jge
sbb
call
mov
scas
adc
pop
dec
mov
cli
inc
out
mulb
fldcw
jle
xor
add
gs
rcrb
insb
inc
test
fs
pop
push
cmp
lret
xor
inc
push
orl
mov
cld
out
xchg
xor
in
mov
add
call
jmp
scas
or
xor
mov
push
aaa
pop
inc
push
jle
scas
jg
jle
mov
xchg
insl
das
pop
fsubr
sbbb
stos
inc
lods
sbb
pop
inc
aaa
adc
mov
fstpt
arpl
aad
das
std
ss
ficoml
and
movsb
jno
inc
xor
mov
movsb
push
fists
js
stc
pop
lock
mov
lock
inc
jbe
out
ret
and
int3
test
add
idivb
inc
sub
pop
or
out
ret
mov
inc
xor
popa
and
fcomps
leave
mov
lods
pop
xor
icebp
cld
das
notl
adc
adc
jno
push
jno
sbb
pusha
or
fistl
testb
lods
hlt
jbe
fidivrl
or
jne
or
jb
testl
mov
and
js
push
lds
xchg
xor
jp
mov
popa
cmc
shlb
sub
cmp
pop
inc
jge
repnz
cmp
fs
push
jl
cmp
test
inc
sbb
jb
cmpsb
loope
rcrl
pop
xor
push
xchg
jle
lret
push
push
sbb
inc
fs
pop
cmpsb
jmp
push
pop
mov
pusha
jno
loopne
jns
mov
push
mov
in
popf
fucomi
push
mov
js
mov
scas
je
pop
push
dec
icebp
adc
fistl
dec
add
mov
jmp
jne
fstp
or
leave
or
test
orl
rcr
add
sbb
mov
mov
jmp
cmpsl
sub
in
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
fs
pop
frstor
push
mov
push
mov
movsb
loope
adc
mov
pop
ret
and
jnp
aad
andl
or
daa
jae
mov
pushw
sbb
push
pop
scas
pop
pop
mov
dec
mov
shlb
adc
sahf
daa
popf
and
push
jb
fdivr
add
clc
jns
push
popa
in
push
mov
pop
xchg
inc
sarb
push
or
imul
gs
dec
in
divb
mov
push
push
sub
jl
add
jno
inc
popl
mov
cmp
adc
mov
dec
jno
stos
dec
stos
into
adc
pop
int3
cmp
pop
sub
add
xor
sub
std
mov
out
rorl
in
jle
rcr
lock
inc
sbb
andb
in
inc
stos
movb
adc
ret
das
adc
sbb
repnz
or
cmpsl
addb
es
cmp
mov
mov
pop
and
pop
arpl
sub
test
jnp
sub
mov
clc
out
push
out
call
leave
fst
out
adcb
popa
cli
sbb
cmp
cwtl
cwtl
stos
rcrb
clc
stos
mov
stos
imul
jl
enter
xchg
fwait
adc
incl
stos
outsl
push
das
cmp
add
xchg
mov
mov
lods
imul
hlt
stc
xlat
sub
fldt
std
mov
add
mov
shlb
movsb
dec
pop
and
mov
loop
rol
inc
lock
xor
jmp
pop
sub
dec
insl
dec
imul
and
out
xchg
xor
sbb
scas
jg
jle
mulb
lcall
cld
xor
popa
jecxz
pusha
sub
movsl
cmpsb
ret
popf
loope
sub
lret
pop
scas
xor
cld
pop
mov
sbbb
mov
inc
dec
inc
jbe
mov
and
test
dec
jp
lea
aaa
jb
adc
pop
or
inc
xor
pop
xchg
out
inc
cmp
mov
xchg
test
bound
add
xor
das
cmp
fwait
icebp
add
shll
add
faddp
in
push
cmp
jo
xchg
mov
dec
mov
lret
mov
fnstcw
ja
cs
sarb
mov
mov
ficompl
pop
cmc
add
push
rolb
popf
mov
jle
mov
jmp
cmp
cmp
rcr
daa
and
sbb
in
rol
adc
or
pop
shlb
das
and
andb
cmp
stc
add
test
inc
stos
ror
popf
stc
in
cltd
in
push
aam
fbstp
xlat
push
pusha
roll
cs
cmp
mov
jg
aad
mov
inc
dec
ficompl
rcrb
pop
imull
adc
mov
cmc
xchg
sti
mov
ret
sbb
mov
loope
icebp
inc
test
xchg
es
sti
in
mov
jno
mov
das
add
add
cmpsl
dec
mov
push
out
or
jp
les
xlat
add
push
add
inc
mov
in
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
xchg
addr16
cwtl
push
sbb
cltd
jg
jle
mov
insb
mov
test
mov
mov
jno
push
inc
dec
push
loop
push
fdivs
in
rorl
pushf
mov
bound
jbe
test
mov
stos
pop
fs
mov
rolb
jb
xor
adc
xor
pop
in
mov
cmpsb
stos
sti
xor
mov
push
pop
xor
insb
mov
pop
or
adc
jecxz
leave
clc
jmp
cli
mov
movsb
icebp
dec
mov
jbe
cmc
push
shlb
push
xorb
jae
pop
pop
lods
in
and
and
mov
adc
je
jle
and
sarb
mov
or
xor
xlat
xor
outsl
add
jo
xchg
mov
jnp
icebp
and
sbb
or
xchg
sub
mov
jb
lret
out
cmp
movsb
daa
mov
inc
lret
pop
fmull
out
sbb
test
ds
cli
push
jo
mov
icebp
cmpsl
xlat
inc
ja
fimuls
fcmovnbe
jl
push
inc
lea
hlt
dec
int3
test
lahf
mov
mov
and
jmp
test
adc
and
xor
aas
in
mov
lods
out
into
xor
xor
ss
or
xor
test
into
mov
push
sub
rsm
cmp
dec
incb
iret
aam
call
cmpsb
loopne
mov
scas
inc
jp
clc
shl
mov
fcoml
idivl
or
stc
push
movsl
jg
mov
inc
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
ja
adc
std
sbb
cltd
jg
jle
scas
imull
jnp
sub
inc
mov
pop
jne
test
sbb
sub
pushf
das
add
jnp
popfw
push
dec
add
adc
les
fcomps
icebp
in
inc
xor
cmp
mov
mov
cmpsl
mov
aaa
cmpsl
loopne
ljmp
loopne
add
sub
sahf
mov
dec
out
cmpsb
or
add
sbb
xchg
lcall
sbb
shll
out
popf
out
xor
inc
dec
adc
jbe
and
cld
push
cmp
sub
sbbb
pop
inc
cmp
push
ss
add
stc
icebp
loope
in
js
bound
ret
aaa
loop
fldln2
aam
adc
andl
cmp
push
jnp
jnp
jb
imul
or
hlt
orb
sub
adc
sub
dec
xchg
push
dec
mov
out
cmpsb
into
dec
je
lcall
call
sti
in
mov
subb
pop
jno
cmpl
jg
mov
xchg
in
pusha
loop
cmp
scas
mov
jecxz
push
fucom
std
sub
out
pop
insl
mov
adc
sub
push
cli
fbstp
call
xchg
pop
adc
mov
sbb
mov
add
ret
daa
nop
xor
jo
std
popf
push
mov
movsb
and
pop
sub
push
adc
mov
dec
and
icebp
int3
xchg
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
jg
out
daa
jle
xchg
jl
jle
leave
push
jg
sub
movsl
out
pop
xor
repnz
popf
xchg
jp
sti
xchg
cmp
outsl
pop
sbb
scas
cmpsl
test
add
sub
inc
hlt
out
loope
cmc
add
adc
faddl
imul
lcall
sub
adc
ja
notl
dec
cmp
add
and
cmp
xor
mov
popa
or
or
dec
cmp
mov
cmp
xchg
outsb
adc
out
sbb
clc
sahf
ss
mov
or
or
and
xchg
mov
int3
dec
rorb
sahf
cmpsl
mov
mov
and
fisubrl
testl
jge
popf
push
std
inc
imul
or
inc
mov
jecxz
ljmp
hlt
and
arpl
push
adc
pop
push
loop
daa
shll
in
xor
lret
int3
fisubrs
sti
mov
or
mov
mov
mov
inc
and
loope
pop
inc
into
dec
mov
pop
in
sarb
mov
loopne
push
in
ds
faddp
lods
pop
test
xchg
cs
frstor
or
push
mov
xchg
xor
into
or
jne
jmp
inc
leave
mov
lock
leave
out
repnz
push
xchg
ret
cmp
data16
out
adc
scas
add
mov
ljmp
outsb
bnd
pop
sub
repz
pop
lds
std
ret
dec
fmul
ss
xor
push
sub
push
jg
arpl
add
push
inc
popa
mov
sbb
inc
mov
fnstenv
xchg
inc
leave
incl
and
mov
cmc
movsb
inc
pop
rcrb
fists
testb
ljmp
sti
outsb
shlb
std
adc
loop
shll
es
lahf
jge,pn
pop
jns
mov
sbb
pop
pop
add
loopne
mov
ds
and
pop
addl
popf
push
inc
mov
cmp
push
fmuls
cwtl
gs
rcrb
adc
inc
clc
mov
icebp
mov
mov
cmp
aad
repz
pop
xchg
inc
lods
inc
xchg
ljmp
sub
int
jns
cmpsb
xor
add
pop
pop
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
gs
jle
xchg
jl
jle
std
sbb
mov
jecxz
jl
sub
sbb
dec
mov
xor
cmpsl
and
das
and
xor
xor
mov
jnp
xlat
das
mov
mov
ficomps
cld
aas
jnp
jl
loop
stc
imul
lret
inc
ljmp
mov
cwtl
adc
jmp
sti
sbb
mov
sbb
out
jo
add
xchg
cmp
test
out
aaa
pop
jns
mov
jmp
cmc
int
or
out
std
aam
in
xchg
cmc
mov
cmpsl
xchg
sahf
xchg
pop
sub
nop
std
out
icebp
adc
mov
push
xor
adc
hlt
testl
inc
adc
cmp
mov
jge
cmp
fcmovne
in
mov
stc
cwtl
sub
aaa
jmp
xchg
xchg
int3
out
shlb
dec
jno
push
push
xor
dec
dec
pop
mov
and
outsl
dec
lcall
lock
or
sub
and
sub
stc
xor
dec
pushl
test
cmp
dec
mov
dec
loopne
ljmp
test
mov
scas
lods
enter
mov
loopne
xchg
mov
jbe
fcmovnb
shl
push
push
repnz
stc
pop
mov
ja
sbb
sub
xor
dec
cmp
add
in
add
cld
ss
push
je
hlt
lods
rolb
out
in
mov
or
xor
mov
out
mov
jb
cwtl
xchg
ror
fs
ds
mov
dec
bound
inc
mov
out
add
mov
adc
cmp
inc
adc
dec
or
cltd
in
xchg
js
mov
mov
ret
jae
icebp
mov
dec
mov
pop
and
hlt
xor
outsb
test
adc
cld
repnz
mov
push
dec
and
cwtl
mov
jmp
pushl
outsb
mov
sarl
nop
lcall
mov
dec
clc
mov
pop
and
xchg
mov
loope
or
add
imul
and
jno
addb
pushf
or
arpl
dec
enter
xorb
sub
xchg
xchg
cld
test
fimuls
add
mov
push
loope
in
cmp
sbb
adc
enter
sbb
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
or
mov
xchg
cmp
aam
lret
xor
or
pop
xor
inc
pop
mov
xchg
out
inc
int3
sbb
and
ljmp
js
in
outsl
mov
push
lahf
inc
push
in
cmp
jp
jge
and
xor
or
lock
movsb
cmp
jae
dec
xchg
fst
orb
fidivs
cmp
add
or
adc
testl
mov
adc
cmpsb
pop
lea
mov
mov
in
addb
in
and
cmp
outsl
push
jo
adc
sub
xor
jl
pop
cwtl
fwait
mov
or
shl
jne
movsb
fmul
adc
mov
into
adc
mov
sub
and
popa
jmp
and
jg
adc
xor
clc
jae
jg
jno
inc
dec
lock
fnstcw
ret
repnz
push
ret
lret
leave
mov
fnsave
out
rcrl
and
movb
test
lret
sub
dec
adcl
add
insb
shll
and
xchg
or
jecxz
dec
and
push
sahf
scas
mov
lcall
sub
fidivs
sub
insl
dec
inc
movsl
push
mov
lock
push
cld
movsl
test
popa
rcr
push
aam
pop
push
or
pusha
cmpsb
aas
lret
outsb
in
fs
ljmp
push
cmpsb
lcall
jo
mov
xchg
jl
sbb
mov
icebp
data16
push
xor
pop
dec
cmp
pushf
adc
mov
popl
adc
dec
js
pop
inc
out
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
add
jle,pn
outsb
jg
jle
pop
sub
sti
cltd
and
pop
sub
mov
dec
out
push
addl
fwait
xor
xchg
or
into
pop
push
test
fdivrl
push
dec
sbb
ljmp
xchg
scas
mov
rcrb
add
and
xlat
sub
mov
imul
adc
loop
sbb
jnp
lret
in
push
inc
mov
inc
cmp
jnp
inc
mov
dec
fcoms
jno
cmp
sti
sti
movsl
mov
dec
pop
lods
sub
push
sub
mov
or
test
push
and
stos
push
outsl
mov
xor
xchg
ret
cwtl
lret
or
insb
cmpsl
jg
add
out
or
das
jp
cmpsb
fidivl
mov
xor
mov
out
aad
loope
iret
adc
sbb
mov
sub
dec
aam
subl
cs
adc
add
pop
or
inc
int
dec
xchg
les
sti
rcrl
cltd
push
push
cld
cmp
cmpsb
rcrb
cmp
jns
in
in
pop
xchg
xor
sbb
pop
arpl
jns
xchg
mov
jo
mov
and
enter
sbb
ljmp
scas
cmp
xor
aam
or
jl
ret
fstpl
push
daa
outsb
in
fadds
int
out
ss
scas
pop
pop
jg
fdivrl
xor
pop
mov
lock
cmp
or
fsubr
push
pop
out
fldcw
mov
mov
xchg
pop
leave
subl
mov
or
dec
sahf
jl
je
adc
fs
xchg
mov
in
jnp
imulb
test
pop
mov
add
cmp
fiaddl
sub
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
push
pop
jp
sub
jle
jg
jle
pop
mov
dec
fstpl
xchg
loopne
mov
and
dec
dec
cs
xchg
sbb
adc
repz
test
push
cmp
cmp
jl
adc
or
lret
and
aam
xchg
mov
dec
or
dec
and
lds
jp
nop
or
fs
es
pop
push
or
push
push
xorl
push
and
cli
mov
cmpb
fadd
and
pop
je
cmp
dec
jmp
std
ret
rcll
jb
pop
push
loopne
hlt
jae
dec
dec
in
std
sub
iret
jno
pop
insl
push
in
lcall
pop
arpl
mov
pop
or
push
shll
test
fstps
pusha
rolb
cwtl
shr
push
cmpl
xchg
and
mov
stos
push
into
mov
out
addr16
inc
repnz
mov
jnp
push
add
mov
pop
mov
in
pop
add
fidivrs
cwtl
int3
divl
mov
test
sbb
adc
lock
sti
jle
mov
insb
inc
push
test
pop
sbb
stos
test
xor
insl
pop
shlb
xor
and
inc
and
js
inc
add
inc
imul
xor
divl
aam
nop
jmp
movsb
movsl
sbb
gs
dec
push
fidivrs
shrb
icebp
fdivrl
sbb
sub
jbe
adc
shrl
pushf
shll
cmpsb
cmpsl
pop
hlt
shrb
jmp
je
cmpsb
sbb
test
out
shl
push
xchg
mov
mov
mov
int3
ja
push
cltd
mov
mov
inc
cmp
notb
mov
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
pop
dec
push
sub
push
jg
jle
sbb
inc
mov
movsl
enter
dec
sti
imul
sahf
xlat
and
xor
cmp
fldcw
in
mov
xor
das
rclb
xchg
push
fwait
dec
test
pop
dec
adc
dec
mov
dec
mov
stc
mov
repz
lock
fsubl
or
cmpsb
cmp
add
leave
stc
cs
lcall
jne
pusha
lods
repnz
in
xor
cmpsl
out
loopne
inc
mov
jge
pop
ds
cmc
adc
incb
sbb
arpl
imul
or
out
mov
shr
mov
cs
cwtl
push
lock
sbb
mov
sbb
pop
xchg
test
out
ret
mov
mov
incl
sub
push
and
fildl
out
aam
in
aad
cli
mov
jns
or
not
sahf
push
push
imul
movsb
cmp
lahf
jne
inc
sbb
add
xor
call
sub
push
scas
scas
lret
ss
loope
add
lock
mov
out
xor
lods
add
xlat
xchg
cmpsl
mov
adc
jg
sbb
dec
xchg
mov
add
push
sbb
clc
xchg
lret
out
popa
pop
sbb
mov
inc
push
jne
cmp
push
xor
sti
sub
cld
adc
js
mov
xchg
xchg
int
cwtl
stos
mov
jns
mov
clc
into
mov
lock
add
jno
clc
push
ficompl
call
aam
sbb
cmpsb
insl
lds
dec
lret
aaa
push
sub
or
std
mov
bound
jo
scas
cmp
lahf
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
inc
je
bound
jg
jle
jo
std
aaa
mov
add
inc
movsl
fisubl
iret
leave
jg
jg
push
and
jne
loopne
ret
scas
inc
xor
mov
mov
aas
lcall
xorl
dec
mov
stos
sub
add
outsb
jo
pop
dec
rcll
cmp
sbb
je
and
pop
push
pop
push
mov
das
loopne
fimuls
xchg
pop
xchg
push
mov
or
pop
jle
dec
or
mov
mov
popf
cmp
mov
stos
jmp
iret
inc
sahf
fdivrl
into
mov
cld
mov
fsub
hlt
lret
add
lds
sti
xor
outsl
xor
mov
stos
into
jle
push
cs
fucom
xor
mov
jge
scas
mov
lock
jb
sbb
add
mov
in
sub
xchg
cmp
loop
mov
jle
add
scas
jbe
add
test
push
fs
aam
loop
add
push
push
in
mov
cmpb
lea
test
adc
xchg
aam
fisubrs
lds
sub
repz
es
outsl
jno
mov
test
mov
iret
or
mov
jl
call
bound
mov
xchg
inc
out
sti
pop
push
inc
inc
ja
jne
inc
jnp
jne
lret
inc
cs
jmp
or
test
jno
das
sub
sub
push
inc
icebp
adc
xchg
lcall
pop
and
adc
mov
jg
inc
and
push
arpl
cmp
lods
test
jnp
es
mov
mov
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
test
pop
test
jle
push
jg
jle
loopne
cmp
mov
push
dec
jl
mov
sub
dec
imul
pop
mov
arpl
add
stc
das
cmp
iret
dec
arpl
push
fdiv
mov
mov
dec
je
pop
push
pushl
jmp
dec
mov
pop
lods
test
jbe
mov
ret
test
outsb
call
dec
mov
mov
insl
push
mov
ss
fldcw
dec
mov
pop
jnp
add
jecxz
movsl
mov
mov
adc
inc
es
out
push
imull
jns
aas
repnz
shrl
ret
sbb
push
sbb
sbb
rcrl
cwtl
int3
in
pop
mov
mov
adc
jnp
pop
xor
punpckldq
and
dec
cmp
enter
pop
pop
clc
adc
add
into
mov
loope
fsubrs
inc
popf
mov
mov
push
jecxz
pop
lret
inc
cmc
push
jns
stos
mov
bound
ficomps
push
adc
or
enter
enter
dec
push
imul
aad
sahf
or
xchg
mov
stc
aad
clc
cltd
test
push
test
push
push
jb
push
mov
mov
xlat
inc
xchg
inc
sub
stc
dec
xor
or
test
out
imul
ret
and
pop
mov
adc
ljmp
jg
mov
mov
popf
mov
add
push
pusha
pop
pop
mov
sti
popf
movl
leave
mov
push
adc
cwtl
insl
out
sbb
cwtl
add
add
xor
and
add
clc
add
add
add
xchg
push
shll
cmp
adc
jle
push
jg
jle
add
dec
stos
cmpb
clc
jae
pop
push
int3
js
push
mov
fwait
addr16
into
loope
in
stc
push
xor
and
xchg
mov
lea
pop
out
xchg
pop
pop
sub
dec
mov
ret
shlb
icebp
repnz
adc
idivb
dec
xor
pop
sbb
loope
jge
cmp
sub
rcrb
jb
mov
orb
add
push
sub
dec
mov
mov
mov
fcomps
mov
cmp
xlat
cwtl
in
sbb
xor
hlt
pop
or
xchg
rolb
out
daa
xor
mov
mov
outsb
cmp
sahf
push
sbb
cwtl
test
inc
roll
add
jmp
adc
rorl
dec
psubw
scas
pop
add
add
outsw
dec
pop
jbe
xor
loop
shl
add
add
lret
outsl
mov
cmc
xchg
add
or
iret
mov
sub
arpl
inc
pop
jnp
pop
ja
push
test
and
jge
and
stos
xchg
test
shll
lds
add
jp
mov
push
hlt
jae
in
aam
pop
movsl
xor
shrb
movsl
mov
fcoml
ljmp
gs
movsb
add
and
add
sub
out
das
addl
ja
mov
mov
sbb
leave
out
sbb
and
in
push
sbb
in
jne
mov
clc
sti
push
les
dec
xchg
aam
addb
or
dec
cli
lret
push
jbe
test
daa
js
shll
jg
cmp
bound
fdivs
insl
add
inc
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
repz
push
jg
jle
adc
les
rcll
or
mov
test
cltd
pop
outsb
or
sbbb
call
test
mov
mov
xor
cmp
push
arpl
jbe
mov
add
ret
jmp
popa
lahf
dec
and
pop
push
cmp
adc
add
inc
outsl
test
shr
push
sbb
lret
or
call
jge
pop
loope
inc
jne
xor
push
aas
push
mov
data16
imul
push
mov
jp
adc
jl
movsl
adc
jge
and
adc
dec
orb
rcl
subl
imul
gs
sub
mov
xchg
mov
pop
es
mov
divl
dec
pop
ret
les
lret
push
in
xchg
mov
push
push
outsl
mov
aas
int
cld
movsb
mov
das
push
sti
xor
loopw
ret
mov
aad
sub
lock
sbb
fcmovnbe
jle
dec
sbb
mov
and
mov
leave
les
test
push
mov
mov
je
add
in
std
clc
sub
roll
jl
pop
push
mov
push
imul
addr16
stos
lret
ret
cwtl
add
jp
insl
push
sbb
lcall
roll
mov
mov
push
fnsave
jmp
fsub
test
pop
and
fchs
mov
imul
repnz
jmp
jnp
mov
fdivs
call
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
jle
aam
icebp
xor
push
jg
jle
xchg
mov
mov
cmpsb
sahf
mov
les
or
std
frstor
dec
fwait
dec
lds
mov
pop
jnp
sub
inc
aas
lock
sub
sub
into
cmp
std
push
fiaddl
cmp
add
pop
pop
dec
ret
loop
pusha
movsl
pop
cmp
fisubl
xchg
inc
push
cltd
xor
lret
inc
sub
or
add
aas
mov
imul
xchg
lret
push
fwait
popf
ss
and
jl
mov
inc
in
in
xchg
mov
popf
popa
sbb
sbb
hlt
into
pop
mov
push
call
mov
mov
pop
test
xchg
xor
mov
outsl
inc
into
into
addl
xor
add
rclb
jb
xchg
lea
pushf
aaa
dec
add
mulb
mov
icebp
insb
mov
out
cmp
cmp
jmp
adc
and
jp
inc
and
inc
add
mov
sub
imul
test
out
sti
daa
ja
repz
repnz
cmp
ds
dec
arpl
and
out
mov
jnp
jmp
push
lods
loop
test
jb
push
xchg
lahf
inc
test
xchg
adc
cmp
fldenv
pop
fwait
sub
leave
std
sub
mov
ret
mov
and
sarb
xchg
sub
pop
aad
ret
aas
pop
push
test
ss
sbb
push
dec
outsb
ja
gs
dec
jbe
mov
mov
or
xchg
push
mov
mull
pop
dec
mov
push
pushl
pushl
jmp
push
mov
dec
sub
enter
das
xchg
aam
jle
push
jg
jle
sub
xchg
add
pushl
mov
mov
xor
test
sub
outsb
cld
dec
push
adc
lock
ja
add
adc
out
xchg
jp
sub
add
jge
movsb
popf
mov
add
mov
sbb
notl
mov
jge
push
pop
adc
inc
and
cmc
mov
ficompl
mov
mov
rcrl
push
scas
fmuls
fwait
mov
stos
jg
push
stos
lcall
insl
adc
mov
adc
sub
orl
sub
cld
cltd
scas
sbb
in
add
dec
in
es
xor
jecxz
sarl
lret
repnz
test
pop
mov
popf
std
push
iret
loop
add
sub
rcll
in
nop
push
lahf
dec
pushf
mov
pop
push
insl
in
mov
jnp
and
fs
lret
gs
ret
push
inc
sbb
shrb
mov
sbb
divl
bnd
and
mov
je
in
dec
in
into
aas
test
in
fcmovb
xchg
adc
mov
arpl
loopne
insl
add
pop
clc
mov
clc
sub
movsl
insl
and
pop
sbb
es
mov
mov
xchg
test
mov
les
dec
out
mov
xor
dec
sub
mov
xchg
inc
jp
pop
sbb
sbb
leave
clc
sti
fisubrl
cltd
fwait
pop
lods
jnp
ljmp
leave
xchg
mov
pushf
dec
push
outsl
sbbl
imul
test
lods
push
sub
inc
js
cmp
sbb
mov
outsb
cmp
std
dec
cmp
push
ja
ret
or
mov
adc
push
pop
in
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
dec
jnp
cmp
mov
xor
jb
sbb
idiv
lea
sbb
cmp
xorl
mov
jne
push
call
jne
mov
xchg
lcall
les
sbb
fwait
sub
pop
push
cmp
push
orb
inc
js
cld
pop
or
adc
push
lret
ljmp
sbb
mov
lods
xchg
popa
xlat
xchg
clc
fbstp
inc
aaa
and
in
insb
mov
std
popf
cmc
dec
fsubrl
push
sub
jge
mov
je
jge
cmp
xchg
outsb
xchg
mov
xor
xor
dec
lret
mov
shr
push
mov
mov
sub
andb
outsb
mov
xor
cmp
dec
sub
notb
imul
out
mov
mov
ss
enter
stc
je
mov
inc
insb
sbb
mov
sbb
push
inc
sbb
pop
shlb
test
fistpl
iret
gs
push
adc
mov
mov
xchg
cmp
mov
mov
mov
icebp
and
jne
imul
je
test
cmpsb
les
lret
shl
outsb
sar
aad
movsb
adc
shrl
pop
addl
or
mov
jb
jmp
daa
daa
mov
pop
fistpl
jo
lret
mov
aad
jo
cltd
lahf
mov
cmpsb
jo
xlat
add
xlat
stos
push
ljmp
adc
or
insb
addb
jp
cmp
jg
sbb
out
cli
lret
mov
jle
push
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
mov
loope
pushl
jg
out
stos
inc
pop
inc
add
cmp
daa
sbb
jno
pop
sub
out
jl
jp
lea
pop
je
das
hlt
ficompl
test
enter
adc
jae
push
lret
sbb
mov
cmc
outsl
push
add
mov
pop
mov
jmp
push
sarb
and
xlat
fisubrs
xorb
subb
lcall
fwait
dec
rorl
mov
or
prefetch
mov
dec
aam
xchg
in
mov
decb
inc
inc
dec
mov
loope
sub
popa
iret
jge
mov
dec
leave
in
add
pop
rclb
pop
ret
ss
push
sbb
std
icebp
faddl
stos
cwtl
xor
int
inc
jno
repnz
cmp
leave
imul
pop
out
lahf
sbbb
sbb
jns
enter
jmp
push
mov
dec
adc
inc
das
mov
push
xchg
in
lods
ret
loop
dec
cmp
xchg
repz
jns
js
repz
cld
mov
inc
or
mov
push
jge
js
sbb
cli
push
seta
out
push
sub
ror
inc
pop
and
leave
std
xor
addl
in
adc
movsb
xchg
sub
fsubs
inc
mov
mov
jmp
sub
pop
xlat
test
fcmovbe
rcr
push
sub
jns
push
jbe
fisttps
sbb
inc
mov
or
jle
mov
pop
lret
xlat
outsb
or
mov
adc
adc
mov
push
or
push
jge
jno
clc
mov
popa
lock
fdivr
push
xor
mov
lcall
pushf
imul
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
ljmp
jg
jle
mov
nop
shrl
scas
fisubl
cli
cld
lds
cmp
in
daa
inc
pop
rorb
xchg
jle
fistl
push
push
mov
ljmp
lret
shll
sub
add
in
hlt
icebp
data16
pop
dec
int
jle
lock
or
pop
jns
jl
inc
int3
push
aaa
inc
lahf
stc
in
or
rorb
lods
ljmp
sahf
ja
out
sti
mov
sbb
enter
insl
fnstcw
arpl
inc
roll
aas
clc
adc
pop
iret
or
sub
dec
rorb
dec
pop
and
rcll
movsb
pop
jnp
cmp
cmp
fiaddl
mov
cwtl
push
dec
je
ja
inc
jge
out
push
fisubrs
and
cmc
sbb
cmp
popa
scas
int
mov
leave
mov
add
adc
mov
pop
sbb
les
lahf
fldcw
hlt
mov
lods
push
push
mov
mov
nop
sti
mov
inc
in
sbb
dec
or
lods
sub
mov
ret
xchg
cs
lret
xor
mov
add
movsl
fcoms
add
cltd
das
cmc
bound
fiaddl
lcall
arpl
cwtl
scas
jbe
xchg
xchg
outsb
cmc
mov
stos
cmp
repz
repnz
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
insl
dec
pop
icebp
cmp
mov
jle
push
addr16
adc
mov
jle
push
mov
pop
das
popf
es
mov
outsb
jl
or
xchg
cmp
das
in
and
sub
lret
cmp
shll
add
or
repnz
clc
scas
mov
jne
mov
jmp
inc
stc
jmp
cli
adc
out
outsb
lods
test
and
xor
roll
jo
mov
jg
mov
add
xchg
insb
enter
pop
and
movb
pushf
sbb
loop
inc
jae
xchg
add
sarb
jp
dec
lods
js
enter
aaa
pop
leave
inc
mov
cli
add
adc
jo
fldl
int3
mov
filds
aas
jmp
aas
mov
xchg
dec
lds
test
into
push
adc
test
push
lret
adc
and
mov
cmp
mov
shlb
mov
out
test
addr16
js
into
sbb
mov
xchg
mov
dec
mov
ret
xchg
ljmp
insb
add
fistps
jno
jb
repz
mov
fcompl
fidivrs
lahf
movsl
cmp
jnp,pt
jne
cmp
mov
push
stos
mov
leave
jle
jae
stos
paddw
xchg
mov
xchg
xchg
sbb
or
pushf
sahf
mov
jne
jo
loopne
or
in
fsubs
pushf
fsubs
aas
ds
xchg
negb
push
clc
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
adc
or
jg
jle
sarb
xor
bound
jbe
addb
mov
mov
mov
lock
mov
arpl
lahf
adc
pop
mov
bound
sar
dec
sarb
shrl
imull
mov
ljmp
jl
pop
int
jbe
xchg
mov
popa
or
dec
push
or
add
xchg
stc
es
xchg
push
dec
outsb
mov
adc
mov
in
sbb
push
fmuls
sub
push
dec
push
xor
mov
xchg
cmpsl
cmp
in
imul
adc
jno
cmp
das
lds
pop
xor
inc
or
in
leave
xacquire
pusha
inc
mov
pop
inc
setbe
sbb
scas
es
inc
adc
lods
pop
mov
inc
lret
cs
cmpsl
jno
lds
aaa
xchg
shlb
xor
pushf
fstpl
inc
mov
nop
fildll
cmp
inc
add
xor
push
and
jne
addl
push
mov
xlat
cmc
add
mov
mov
jge
adc
or
push
or
daa
push
cmp
add
or
fdivrp
add
sub
pop
lea
xchg
cmc
lods
push
xchg
test
fidivrs
push
lock
sub
lock
icebp
repz
sub
lcall
inc
icebp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
int
cltd
jle
mov
jle
adc
mov
xchg
stos
inc
cld
sub
pop
cmp
lret
outsb
or
ja
mov
loope
lahf
inc
fucomip
loope
call
icebp
hlt
cmc
in
xor
and
or
mov
mov
jmp
cmc
pop
xor
mov
push
jmp
adcb
cltd
int
lahf
inc
stc
add
cld
mov
push
jmp
fcmovnb
lret
popf
fisttpl
inc
jge
ret
test
inc
mov
push
fbstp
cld
xor
fcoml
fdivrs
out
xchg
pop
pop
ficoms
mov
sub
in
push
jmp
xchg
imul
rcr
xor
dec
js
pop
jg
xor
adc
jno
add
out
sub
adc
subl
aam
mov
sbb
call
sbb
int3
jb
cmpsl
cmp
sub
push
gs
xchg
xor
or
mov
mov
push
fcompl
into
imul
into
test
pop
push
addr16
sahf
mov
jo
cmp
mov
mov
push
lcall
loopne
pusha
loop
sub
aam
sar
jp
sub
insb
fcmovbe
inc
subl
out
push
popf
pop
shlb
imul
in
pop
js
cli
pop
negl
push
scas
lret
push
cmp
scas
jnp
xchg
popf
xor
xchg
sbb
lock
adc
xor
mov
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
push
rolb
jg
jle
aas
sbb
mov
test
mov
test
sahf
aaa
lahf
outsb
push
lahf
sbb
mov
pushf
shll
push
sub
sahf
hlt
and
rcl
fwait
cltd
daa
add
pop
mov
add
xlat
es
jo
dec
movl
inc
scas
aam
xor
xchg
leave
dec
adc
pusha
rcrb
loop
cs
cmpsl
test
adcb
out
scas
push
and
scas
subb
mov
aaa
std
mov
inc
popa
pop
stos
jle
imul
loope
in
xchg
inc
shrb
sub
mov
push
rcll
out
jno
mov
inc
mull
xor
or
pop
movsl
xchg
jo
and
pop
sbb
cmpsb
pop
push
push
mov
les
rep
adc
pop
ds
push
sbb
mov
dec
xchg
lret
cmp
testb
pop
je
xchg
aam
cltd
mov
jg
add
mov
xor
cli
jae
mov
aad
xchg
sbb
in
in
xchg
and
mov
pminub
insl
fimuls
leave
stos
pop
inc
pusha
ficomps
and
movsl
lods
pop
xor
stos
dec
push
ret
out
cmpsb
js
neg
sbb
jne
iret
adc
dec
mov
pusha
or
cmp
popl
and
movsl
mov
lock
fsubr
popa
or
and
pop
xlat
cmp
add
mov
pop
inc
mov
push
and
test
sbb
add
pop
pop
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
inc
push
jle
mov
jle
push
pop
mov
pop
jge
cmp
into
cmpsl
imul
xlat
mov
aam
das
pop
movsb
cmp
rol
bound
and
push
inc
outsl
adc
dec
fsubl
shrl
inc
add
fwait
mov
pop
pop
stos
push
ss
call
sbb
ss
loope
icebp
cmp
xchg
insb
int3
sahf
test
sub
or
stos
stos
enter
xchg
push
sbb
sbb
lods
subb
and
frstor
xchg
fwait
fwait
jnp
adc
xor
or
aaa
xor
xor
cmp
sub
and
adc
scas
sub
fisttps
in
adc
in
out
xchg
lret
cmp
in
add
dec
loope
jne
loopne
lcall
mov
nop
sahf
jno
push
in
adc
imul
mov
mov
dec
out
mov
lcall
mov
mov
mov
rolb
ds
xchg
push
loopne
test
sub
dec
lcall
pop
cs
sahf
outsl
lcall
out
mov
gs
outsb
dec
jle
rorb
cmp
shrb
cmp
and
int3
and
or
lcall
flds
cmp
lea
xchg
loope
hlt
enter
push
inc
xor
ljmp
cmp
call
clc
les
insb
mov
mov
jp
or
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
lcall
add
mov
jle
stos
test
xchg
test
xchg
ret
inc
ja
inc
pop
or
fnstsw
push
lret
sysret
cmp
daa
lret
mov
jl
sbb
in
jo
inc
mov
addr16
dec
pop
jne
scas
xchg
imull
call
xchg
mov
in
rorl
jl
ja
ficoml
jp
jo
xorb
scas
adc
xor
sbb
sbb
sub
sarl
data16
cld
int
xchg
nop
xchg
dec
int
jecxz
sbb
out
in
int3
out
aad
push
out
xchg
mov
loope
mov
jne
test
ja
pop
aas
and
pop
mov
dec
sub
jle
push
out
cs
or
cwtl
or
cmpsl
enter
test
push
mov
add
out
fsubr
jge
pop
test
aam
sbbb
and
sub
pop
xor
popf
mov
out
gs
mov
das
or
mov
jo
mov
jecxz
lret
cmp
fsubs
data16
pop
mov
into
repz
jnp
inc
loopne
jo
in
int
addr16
ret
aas
add
add
mov
sub
xor
mov
addr16
fimull
lret
lret
cmp
push
sub
or
and
xor
fwait
pop
test
and
lods
mov
out
iret
mov
in
and
testb
lock
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
xchg
jle
mov
jle
adc
gs
arpl
call
pop
xchg
loop
movsl
xchg
mov
loope
dec
xorl
ffreep
mov
into
shrb
lock
cld
inc
jnp
test
sub
movsb
dec
leave
inc
push
sti
mov
in
cmp
stos
jae
add
or
je
mov
xor
cld
sbb
hlt
and
lahf
stc
jl
push
add
and
pop
sbb
jl
and
jno
jne
cld
imulb
cmp
lret
and
dec
cmc
clc
mov
scas
pop
or
test
ret
ljmp
adc
movsb
test
jmp
and
and
mov
jge
or
mov
pop
aam
pop
dec
ja
mov
enter
push
xor
ja
pop
xchg
fldl
xchg
fs
push
lock
jmp
sub
nop
ret
adc
pop
inc
xchg
pop
lds
xor
jo
mov
movsl
movsl
clc
cltd
mov
pop
imulb
mov
nop
xchg
and
jne
add
dec
sbb
fsubrl
out
and
iret
jno
cltd
imul
outsb
cmp
ficoms
sbb
dec
arpl
imul
pop
and
clc
jg
cltd
sbb
cmp
cmc
rolb
xchg
popf
mov
mov
or
dec
stos
xchg
sbb
shlb
out
xchg
jl
ss
js
cwtl
pop
icebp
mov
push
loope
push
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
push
jecxz
cli
mov
jg
dec
jne
cmp
cmp
inc
and
and
std
sbb
movsl
ds
dec
call
loop
jb
loop
jbe
push
xchg
into
xor
cmp
int
xchg
imul
inc
clc
push
push
pop
add
sbb
jp
clc
ds
mov
insl
mov
sbb
adc
and
jo
ja
rcll
fnstsw
fdivr
push
call
jg
sub
leave
mov
loop
cmp
dec
or
jbe
and
dec
jge
popa
subb
lods
out
pop
add
fcoml
push
jle
je
fnstsw
aas
sti
push
shlb
lahf
jae
push
out
push
cltd
js
clc
sbb
adc
cmc
pop
pop
ficomps
xor
cmpsl
or
or
mov
ret
sbb
xchg
hlt
mov
pop
pop
jno
mov
aam
cmpsb
or
dec
fimull
ficoms
mov
pop
sub
sbb
sub
leave
or
cwtl
loopne
test
pop
lods
lods
xor
xor
lcall
mov
xor
cmpsl
mov
sub
mov
popa
mov
or
repnz
lret
mov
sbb
jmp
ljmp
filds
xchg
or
sbb
xor
or
push
sub
mov
pushf
xchg
or
dec
js
ja
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
push
xor
rcll
jle
mov
jle
adc
mov
mov
outsb
sub
xlat
xor
add
lods
test
mov
pushf
aas
repz
hlt
push
xacquire
xchg
mov
xor
pusha
push
cs
test
mov
insl
pop
inc
sub
xor
push
mov
and
dec
bound
out
xchg
and
cmpsl
or
pop
mov
or
inc
jne
mov
cld
sarb
pushf
inc
dec
push
xor
in
stc
rcrl
cld
or
std
pop
sbb
jp
in
jbe
push
sub
lret
fldcw
jb
adc
loop
data16
lea
push
dec
imul
jno
cmp
cmp
xchg
inc
add
xor
pop
shll
push
loop
out
push
adc
daa
dec
mov
ret
shrb
aad
lods
stos
cmc
adc
cmp
daa
ds
filds
sbb
hlt
push
dec
push
dec
fimuls
out
and
in
cmp
sti
out
and
adc
inc
jns
in
sub
xchg
sbb
cmp
cmp
add
pop
addr16
rclb
sti
arpl
cmp
inc
movsl
push
mov
inc
les
cmp
push
mov
popf
xor
xchg
data16
mov
lret
shrb
cmc
sub
daa
cmp
dec
lods
inc
pop
xchg
test
movsb
mov
aam
and
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
mov
lret
mov
jle
mov
fldcw
lock
out
lds
ljmp
adc
cmp
stos
fmuls
out
xchg
mov
mov
inc
sub
push
jbe
mov
cld
nop
leave
xchg
push
inc
add
cmp
scas
inc
push
je
arpl
test
data16
sahf
and
push
sub
xchg
hlt
sarl
jne
xor
jne
loope
movsl
add
aas
lds
lcall
sti
fisubs
lahf
je
pop
add
pop
mov
out
aad
shrb
fs
mul
scas
addr16
sti
mov
lods
mov
lods
lcall
jl
lcall
hlt
fs
dec
xor
sub
sbbb
cmp
push
pusha
jns
xchg
xchg
mov
ret
mov
and
inc
add
mov
mov
bound
mov
pop
subl
test
fcomps
pop
or
jae
jne
mov
cld
xchg
pushf
and
stc
shll
push
call
push
fucomip
inc
fisttpll
test
dec
push
bound
pop
test
sbb
fcomp
cltd
sarb
sbb
xor
cli
mov
js
inc
adc
mov
rcrb
xchg
jp
jecxz
test
and
lock
mov
rol
jle
sahf
pusha
jg
add
xchg
cmp
sub
mov
or
xorb
ja
pushf
jg
lea
inc
pop
pusha
inc
mov
or
aad
les
shr
lods
add
add
add
push
push
jl
ljmp
enter
jg
jle
jmp
xchg
inc
push
or
mov
xor
xchg
sahf
push
and
inc
pop
xchg
aad
pusha
sub
sbb
lea
push
jo
mov
push
jmp
jae
push
out
push
adc
mov
cmp
rorl
insl
out
mov
mov
mov
push
mov
pushf
ss
jmp
xor
mov
pop
dec
jl
fdivrl
leave
out
in
in
cmp
ds
xchg
jb
sbb
ja
test
sti
test
test
lahf
loopne
dec
mov
push
cmpsl
ret
sub
and
test
sahf
xchg
xor
arpl
or
inc
push
lods
mov
adc
scas
cwtl
incb
out
lods
mov
fs
push
sbb
mov
faddp
hlt
imul
inc
sub
rcr
sub
sub
jmp
movsb
xlat
or
sub
pusha
xor
push
fwait
mov
sub
xchg
loope
lahf
out
das
and
pop
in
mov
filds
std
sbb
dec
cmpsb
call
lea
mov
sarl
stos
dec
xor
mov
jbe
mov
adc
ds
or
das
es
mov
mov
icebp
imul
loopne
js
lcall
mov
cmp
outsl
pop
es
and
jecxz
xor
and
push
xchg
in
loope
popf
call
fidivrl
insb
mov
and
pop
ja
ja
imul
mov
mov
sub
jmp
and
xor
xor
sub
leave
jle
mov
jle
sub
cli
and
jae
mov
es
adc
cli
ljmp
dec
jg
inc
mov
gs
cwtl
popf
orl
popa
or
dec
xor
add
lahf
xchg
mov
sbb
xor
mov
xor
std
pop
icebp
sbb
push
xchg
sub
push
cmp
push
sub
sub
cld
js
cmpsb
sub
cmpl
push
into
inc
jnp
dec
mov
loopne
fdivl
pop
stos
or
jo
push
or
mov
mov
inc
mov
jmp
or
lods
insl
outsb
mov
add
pop
mov
vsqrtps
aad
jnp
andb
daa
icebp
nop
shll
sbb
cli
call
jg
lahf
ja
sarb
lret
dec
lahf
fistpl
mov
mov
adc
inc
xchg
stc
dec
enter
cmpsl
inc
push
cmp
test
xchg
inc
add
leave
iret
int
jl
sti
inc
aam
cli
nop
adc
scas
xchg
or
stos
in
sub
addr16
hlt
cmp
popf
jne
mov
sbb
add
and
push
and
shr
mov
je
leave
cmp
in
imul
adc
sbb
aaa
push
mov
xchg
scas
imul
sti
js
int3
dec
pop
jp
into
cmpsb
popa
sti
pushf
test
xchg
in
call
dec
testl
mov
ds
inc
xchg
and
jmp
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
imul
loope
jle
mov
jle
push
or
cmp
icebp
cld
dec
push
push
push
lds
jb
mov
fcoms
cltd
movsl
mov
bnd
inc
lret
cld
mov
inc
inc
addl
ret
push
jecxz
test
mull
xchg
push
mov
dec
cltd
call
orb
iret
xchg
out
mov
mov
mov
mov
add
dec
pop
jno
sub
stc
jae
icebp
scas
dec
xorl
adc
sti
dec
adc
outsl
sub
jbe
nop
sbb
sbb
mov
mov
or
movsb
fisubrl
cs
jle
pop
dec
xor
mov
insb
scas
push
sub
jmp
push
sub
fadds
pop
popf
sbb
inc
scas
gs
or
xor
xchg
mov
cltd
leave
ret
cmp
jb
sub
and
out
cli
mov
jp
xor
daa
pop
dec
loopne
ss
jbe
pop
fistl
lahf
loope
add
pop
aam
js
xchg
mov
out
and
test
clc
add
push
lret
mov
sbb
xchg
imul
test
loope
mov
insl
sbb
cltd
sub
xor
mov
xchg
mov
sbbl
xchg
iret
repnz
dec
sahf
dec
adc
dec
xor
cmp
std
inc
push
sub
rcl
fcoms
aas
aam
inc
sahf
jo
xor
rorb
fimull
pop
rclb
sti
insb
aaa
hlt
cltd
ds
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
imul
jle
mov
jle
cmpsb
popf
xor
jg
lret
stos
mov
xorb
push
xchg
sti
ret
inc
in
stos
test
cmpsl
push
add
mov
xchg
jmp
push
inc
cmpb
jae
repz
nop
addr16
sub
and
adc
enter
lds
out
lock
sub
fwait
mov
mov
push
sub
inc
popa
cmpsb
loope
jg
ret
out
jo
xor
out
mov
or
push
loop
pop
or
andl
lods
popf
dec
mov
pop
std
popf
xchg
rclb
stos
inc
pop
sub
fxch
popl
rorb
adc
push
cmp
dec
sub
testl
and
bound
jo
cmp
add
dec
loop
loopne
push
and
inc
pop
pop
rcrl
imul
imul
fdivs
mov
aam
fisubs
and
les
inc
push
push
pop
adc
insb
fwait
fsts
mov
push
shr
mov
xchg
cmpsl
add
cmp
inc
pop
sub
fwait
inc
inc
and
bound
sub
sbb
add
jl
xchg
inc
inc
xor
pop
sub
cmp
or
dec
stos
mov
daa
popf
mov
sbb
xchg
insl
pop
dec
dec
and
ret
aam
test
fldenv
enter
test
lret
mov
repz
mov
and
jge
add
jmp
mov
pop
inc
cmp
icebp
mov
adc
and
adc
inc
xor
add
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
mov
add
mov
jle
out
and
push
xor
ret
andl
sub
pop
cmc
and
or
mov
mov
push
mov
xor
gs
xchg
and
out
mov
nop
rcrb
stos
add
add
jl
push
adc
int3
dec
mov
xorl
mov
rcrl
xchg
inc
adc
shlb
stos
popf
xchg
dec
scas
ja
jnp
hlt
push
mov
bound
push
shrl
pop
data16
xchg
andl
jnp
mov
ds
pop
xchg
fbld
jge
push
add
outsl
add
dec
pushf
mov
mov
test
mov
mov
sub
inc
out
and
pop
xchg
cmc
fistpll
movsl
in
xchg
das
es
cwtl
in
lock
xor
sub
sbb
fistl
sahf
shrb
movsl
inc
nop
mov
mov
int
pushfw
cmp
jl
sub
les
cmp
pusha
xchg
into
xor
sbb
mov
sub
dec
gs
inc
adc
jno
push
jle
ja
jmp
sti
ficoml
dec
xchg
lds
push
mov
daa
inc
outsb
in
jb
out
cld
loop
test
adc
jle
es
and
inc
mov
stc
scas
push
sbb
hlt
int
jnp
and
in
mov
test
mov
sub
mov
cmpsl
or
leave
cmpsl
and
sub
outsl
fbld
pushf
sbb
xor
jnp
mov
jb
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
daa
push
jle
mov
jle
mov
imul
ss
cltd
fdivl
push
jne
iret
in
jmp
add
add
stos
inc
push
rcr
adc
loopne
xorb
stos
or
and
lret
andb
sub
idivl
xlat
sbb
jns
movsl
xchg
mov
movsb
mov
adc
cli
cmp
add
or
sbb
adc
lcall
in
es
or
mov
rcrl
in
pushf
push
or
test
data16
test
add
cmp
repz
adc
and
mov
dec
testl
aaa
or
pop
test
mov
fwait
cmpsl
pop
pushf
cmp
and
dec
push
jns
and
scas
cmp
push
sub
adc
mov
fistpll
sbb
stos
xchg
fldl
xchg
mov
mov
cmpsl
lret
or
or
mov
jnp
sub
fs
ret
std
push
in
cltd
add
xchg
test
in
pop
rol
scas
push
adc
fistpl
gs
mov
jnp
cli
xchg
mov
bound
or
or
imul
dec
adc
cwtl
push
sti
mov
dec
add
std
xor
mov
mov
ds
cmp
clc
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
sbb
dec
adc
jg
jle
push
int3
sti
aam
mov
xchg
addb
cmpl
mov
stos
jne
mov
mov
lds
jg
xor
test
test
fdivs
fldcw
push
inc
or
mov
sbb
and
xchg
stos
and
sti
hlt
icebp
cmc
push
hlt
test
aad
xor
addr16
cmp
mov
popa
adc
lock
nop
xchg
cmc
fsubl
mov
pop
xchg
dec
js,pt
mov
pop
loope
lods
in
movsl
mov
mov
mov
or
and
mov
inc
fcoms
sbb
xchg
lahf
in
jne
fs
and
inc
mov
mov
adc
aad
ljmp
aam
fists
negl
cmp
popa
test
xor
jo
mov
sahf
repz
test
mov
mov
cmp
add
pusha
out
adc
push
loop
dec
sbbb
stc
or
mov
into
fdivrs
jbe
ljmp
into
jne
nop
push
aaa
push
jnp
dec
pop
test
testb
rorl
cli
lods
in
xchg
lods
mov
xchg
int
pop
mov
mov
inc
test
jo
jg
les
rolb
mov
sbb
ss
push
xchg
push
pop
mov
and
out
inc
ss
shlb
pop
xlat
subb
in
adc
gs
xor
jmp
or
addr16
jne
mov
mov
mov
fiaddl
mov
jle
add
imul
xchg
lods
shlb
sahf
mov
sbb
loop
es
adc
mov
cmc
rorl
jne
and
cmpsl
inc
jb
pop
cmp
jge
les
aas
dec
test
jp
jnp
mov
shrb
cmp
sbb
movsb
loop
call
xor
pop
idivb
repnz
jecxz
xchg
ja
fwait
aaa
jb
movsb
push
mov
xchg
sbb
loope
imul
inc
adc
fsubl
xor
sbb
js
mov
divl
out
jecxz
sbb
adc
cmp
ljmp
mov
iret
daa
pop
int3
dec
mov
inc
in
ss
arpl
sub
dec
sbb
sarb
add
cltd
cmp
shrb
xlat
pop
shl
stos
dec
pop
and
inc
ja
call
xor
add
push
cmp
sub
adc
dec
into
lahf
xor
ror
sub
dec
push
pop
mull
aas
jecxz
mov
sub
add
xchg
sub
bound
out
push
stos
pop
mov
sahf
imul
imull
mov
jno
std
pop
sbbb
jns
mov
lock
shll
lods
mov
pushf
inc
dec
jmp
scas
jle
dec
sbb
adc
lock
inc
mov
in
mov
fldl2t
into
das
and
mov
out
dec
movb
sarl
xlat
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
dec
xor
mov
fdivrl
jge,pn
jle
push
scas
std
xor
mov
data16
dec
fnsave
inc
ds
scas
gs
fnstenv
jno
imul
shr
cmp
ret
jae
fdivr
cmpsl
fwait
xor
das
xchg
mov
mov
cmp
cmpsb
push
inc
lahf
scas
out
cs
dec
mov
ret
push
ret
mov
cmc
int
dec
insl
jl
dec
jp
test
add
lret
dec
addb
rorl
push
jae
aad
cs
stc
pop
jne
bound
or
loop
int
pop
lods
adc
sub
test
jb
lods
or
push
rclb
or
in
dec
mov
loopne
adc
push
das
ljmp
data16
out
rcrb
cmp
adc
setb
in
sbb
rcrb
and
cwtl
and
pop
lret
movsb
subb
and
mov
and
lock
mov
xor
fmull
pop
push
push
mov
pushf
mov
sbb
stos
stc
adc
pop
repz
repz
test
in
dec
test
test
sarl
loopne
fidivs
lods
inc
or
fdivp
sub
int3
test
xor
aad
pop
jmp
addb
sbb
pop
out
xor
mov
rcl
mov
test
mov
or
dec
in
pusha
and
push
stos
mov
loopne
cltd
mov
iret
nop
xorl
fnstcw
pop
shr
stos
movsl
cli
sbb
xchg
bnd
aam
cmpsb
and
ucomiss
repnz
jle
dec
cli
mov
jg
xchg
cld
rcrl
or
icebp
pop
xchg
fs
xlat
sub
out
mov
cmpsb
xchg
sub
call
js
sbb
cld
aad
cwtl
fstpl
jl
dec
lret
movsl
dec
add
sbb
addl
loop
fists
inc
pop
cwtl
movsl
mov
mov
aad
pop
cmpsl
pop
adc
xor
enter
pop
xor
inc
cmc
mov
xchg
pop
or
mov
mov
cmp
jecxz
jno
adcb
sub
fmull
fcmovne
cld
iret
sub
lret
and
cmc
adc
pop
add
iret
pop
pop
jnp
mov
jge
fs
cmp
jmp
out
jns
andb
dec
hlt
push
mov
xor
lret
mov
test
insb
shll
fstps
xchg
nop
pop
add
and
cmp
jmp
xchg
insb
push
jmp
iret
rcrb
mov
stos
and
rcrb
std
sarb
sbb
outsl
mov
mov
js
xlat
jb
sahf
and
mov
jecxz
inc
mov
mov
or
lods
fisttpl
dec
cwtl
xchg
mov
pop
push
sub
stc
rclb
mov
daa
lahf
into
add
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
andl
fdivrs
jge,pn
jle
dec
push
addr16
mov
xchg
pop
push
or
movsb
mov
lret
mov
scas
mov
mov
scas
sub
test
es
cmp
popa
mov
out
pop
sub
shld
in
fists
sub
test
fdivs
lret
inc
fdivrp
mov
bswap
add
xor
cmp
mov
jae
mov
in
std
inc
xchg
xchg
adc
outsb
sar
rcr
dec
jnp
ss
add
mov
int3
add
mov
es
add
daa
insl
push
mov
push
and
add
mov
fxch
cltd
add
sbb
adc
ds
and
dec
les
dec
push
adc
in
and
xchg
or
test
out
and
jns
pop
push
dec
push
add
sub
pop
stc
cmpxchg
pop
or
xchg
les
shlb
and
push
dec
add
incb
lods
cmp
cmpb
sub
pop
adc
lock
cli
or
cmp
xchg
jns
inc
mov
xor
in
mov
or
arpl
add
lods
lea
je
ja
out
or
mov
cmpsb
sbb
fiadds
push
sub
enter
pop
pop
mov
hlt
xchg
cli
cmp
mov
repnz
xlat
daa
stos
add
cmpsb
icebp
stc
stc
mov
dec
fmull
lock
cmp
push
cmp
jmp
xchg
test
in
vmread
xchg
nop
mov
push
shr
shll
ds
int
fists
aam
sub
outsb
jne
enter
cmp
sub
inc
enter
jl
xchg
std
scas
scas
rcrl
fsubrl
stc
mov
pop
negb
inc
xchg
and
cltd
mov
loope
inc
xchg
fdivrl
push
stos
sti
mov
sbb
xchg
int
inc
pop
sti
dec
jge
hlt
out
in
jb
popa
xchg
inc
sbb
sbbb
sbb
je
dec
and
jae
ja
pop
mov
inc
mov
fisttpl
xor
adc
add
sbb
or
ficoml
xchg
imul
push
push
add
push
xor
xchg
dec
xor
xor
fsubl
out
outsb
shll
outsb
dec
nop
xchg
testb
mov
sbb
rorl
mov
jns
and
or
lret
test
fisttpl
das
aam
cmpsb
jnp
mov
pop
sahf
es
loopne
push
cmc
add
xor
hlt
hlt
pop
sbb
icebp
sbb
sbb
movsb
pop
push
pop
arpl
ds
cmp
add
push
ss
adcl
pop
shrl
bound
fldl
xchg
xor
mov
jle
out
mov
lahf
add
mov
lret
mov
dec
ret
push
sub
adc
inc
jp
or
cltd
repnz
mov
jmp
push
or
int3
popa
hlt
jno
jae
and
scas
cli
add
cmp
jle
jge,pn
jle
pop
mov
cmpsb
fdivl
scas
iret
adc
pop
rcll
pop
movsb
push
sbb
repnz
cltd
pop
fstpl
mov
push
cmpsb
sbb
in
jno
cmpsb
rcll
xor
mov
xchg
sub
imul
aam
icebp
out
outsb
stos
arpl
mov
xlat
mov
cmp
sbb
mov
inc
mov
mov
call
insb
in
out
out
repnz
pop
sub
roll
fs
xchg
cmc
repz
xchg
leave
aaa
mov
xchg
mov
and
pop
mov
ds
sub
cmp
mov
adc
daa
rcl
int3
std
repz
in
sub
mov
pop
jbe
sahf
jns
ja,pn
lods
or
add
iret
clc
xchg
jb
pmulhw
adc
pop
jle
sub
mov
mov
lds
mov
jae
pop
call
gs
cmpsl
mov
jecxz
std
dec
std
aam
cld
repnz
ret
jecxz
lods
lds
jns
add
pop
loopne
xor
fwait
mov
jp
pop
hlt
inc
mov
push
cmpsl
mov
dec
mov
xor
jae
pop
cmp
fwait
das
add
in
cmp
in
jo
aam
je
cs
xchg
stos
bound
mov
adc
adc
push
scas
sarb
sti
cmpsb
loopne
outsb
mov
jp
mov
shrb
mov
cmpsb
iret
ret
shrl
add
mov
imul
ret
dec
jl
lret
cmp
mov
jmp
negb
ficomps
inc
mov
mov
inc
lock
incl
cmpsl
and
inc
arpl
sbb
cmp
pop
mov
mov
cmp
mov
jge
and
cmp
stc
push
rorl
jne
rcrl
mov
xor
andb
sbb
push
call
inc
pop
ljmp
imul
sub
jo
mov
xchg
mov
out
xor
inc
lods
xor
adc
and
xor
cmp
jl
cmp
push
mov
movsl
mov
cltd
movsb
sbb
out
xchg
enter
or
sbb
je
packssdw
xchg
aas
aas
xor
jge
jno
xchg
sbb
aam
mov
cli
push
or
and
push
jne
pushf
add
enter
repz
outsb
fs
jns
test
adcb
and
add
aam
and
imulb
ljmp
push
mov
scas
mov
div
sbb
nop
pop
test
aas
inc
sbb
and
cmp
fdivrl
mov
outsl
stos
mov
movsl
subb
in
sub
divb
xor
mov
xor
xchg
mov
sbb
rcr
je
call
adc
sbb
mov
in
mov
jb
add
mov
add
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
bound
sub
loop
jle
jge
jle
or
rcll
loopne
mov
inc
addr16
insb
popf
call
out
adc
xor
adc
jbe
mov
xchg
mov
add
push
push
sbb
pop
outsl
cmp
cld
cmpsl
jge
dec
shll
xchg
sarl
in
jns
xor
pop
adc
nop
mov
adc
xchg
ret
cmp
push
cmp
ss
mov
xchg
popa
test
stos
decb
inc
inc
aas
repz
stos
movsb
mov
jbe
loop
stos
inc
xchg
mov
cs
push
pushf
icebp
adc
pop
pushf
into
fucomip
pop
jo
ljmp
rsm
pop
imul
or
sarl
jae
insb
cmp
jge
dec
sbbl
mov
cmpsb
xchg
call
or
ret
ret
mov
fs
js
sti
mov
sbb
xor
xchg
popa
cltd
out
icebp
mov
lods
bound
inc
jo
addb
and
inc
adc
in
cltd
stc
sub
lds
push
sbb
mov
mov
stos
or
adc
lds
popf
push
mov
sub
cmp
add
mov
pop
imul
push
fidivrs
les
pop
out
jae
push
dec
cltd
in
les
and
dec
fisttps
sbb
icebp
pop
dec
push
mov
add
std
and
add
sub
stos
enter
xor
mov
cmp
dec
mov
and
movb
cwtl
jl
aas
add
inc
xor
sub
add
xchg
pop
xchg
jo
lods
and
cs
push
lock
dec
out
mov
dec
xchg
jp
push
aas
mov
cmp
xchg
repnz
icebp
bound
xchg
mov
mov
fistpll
imul
mov
enter
insl
fs
cmp
icebp
jns
jl
pop
adc
fistpl
and
movsl
jnp
cli
int3
cli
pop
cli
insb
jecxz
inc
mov
or
je
sub
lahf
xchg
les
xchg
nop
xlat
mov
pop
mov
pop
outsl
dec
mov
testl
mov
adc
popa
shr
jne
mov
cmp
xor
inc
dec
out
jge
xlat
insl
mov
mov
test
and
js
push
cltd
dec
pop
push
cltd
jl
mov
pop
cmp
xor
insb
outsb
outsb
out
sbb
call
cli
dec
mov
lret
das
aad
or
inc
push
adc
mov
or
sub
mov
or
mov
dec
into
xchg
fcomps
ja
cmpsb
mov
popa
in
dec
push
dec
push
shlb
and
movaps
dec
fldt
into
ljmp
cltd
shrb
js
mov
xor
add
xor
push
in
ja
pop
hlt
and
lea
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
cld
cltd
loope
jle
jge
jle
mov
adc
lods
or
lds
idivb
cmpb
cmc
cmp
adc
scas
enter
int
push
push
pop
in
cmpsb
fidivrl
add
mov
xor
ljmp
in
pop
clc
test
leave
insb
rolb
or
push
mov
test
push
add
add
outsb
fdivl
rclb
in
push
mov
fdiv
cmpsl
loop
add
mov
shrb
cld
xchg
push
ficoms
mov
lcall
xchg
loop
pop
sbb
outsb
icebp
setne
jg
test
ds
mov
sub
shlb
or
dec
pusha
clc
or
repz
cmpsl
mov
movsb
popa
fwait
add
or
jae
mov
rcr
cmp
insl
jg
inc
out
mov
adc
aaa
cmc
mov
push
mov
jge
mov
enter
aad
orl
adc
lods
imul
push
mov
mov
pop
ja
sarb
xchg
sub
fidivrs
sub
aas
xorb
hlt
xchg
jmp
mov
dec
jle
mov
xor
insb
adc
daa
loop
mov
dec
pop
xchg
incl
push
mov
pop
mov
das
cwtl
pop
mov
xchg
je
fistl
sub
and
ret
dec
cld
fstps
mov
in
jae
fmull
aas
sti
sbb
pop
fwait
lods
popw
and
insl
sbb
inc
sub
les
xchg
je
jle
push
negl
stc
fistps
mov
mov
jnp
and
lods
mov
or
loopne
inc
push
gs
mov
test
dec
cmc
or
test
inc
push
popf
dec
insl
pop
pop
cli
jno
repz
int3
xor
xor
sub
xchg
in
xor
add
test
mov
pop
rcr
call
adc
mov
xlat
pop
jo
pop
jae
fs
mov
add
cmp
xor
sbb
lret
fcom
push
cmp
rorb
or
push
cmpsb
cmp
scas
jne
xchg
push
mov
jbe
and
or
sbb
mov
lods
xchg
icebp
xlat
sub
lds
rolb
inc
dec
push
mov
xchg
je
ret
scas
nop
xchg
fdivs
mov
push
and
sub
mov
je
repnz
mov
lret
in
and
sub
arpl
push
sbb
test
sbb
jp
cmp
jge
jmp
rcl
mov
enter
jb
or
movsb
xorb
aas
inc
add
jb
insl
push
mov
out
faddl
es
fldz
dec
fcmovnbe
mov
pop
call
jl
inc
add
jmp
leave
inc
mov
inc
xor
icebp
pushf
cld
and
in
jle
jge,pn
jle
sahf
pop
test
dec
sti
cmp
or
in
jnp
push
fsubl
mov
stc
jle
adc
pushf
stc
test
pop
imul
adc
inc
shl
test
push
mov
xchg
rorl
mov
decl
mov
movswl
dec
push
sub
jo
mov
mov
lahf
loope
jge
in
mov
adc
bswap
arpl
popa
and
or
and
cmp
lock
sub
add
enter
pop
or
lret
push
dec
pushf
dec
dec
mov
mov
xchg
mov
xchg
dec
sub
inc
jo
jg
ret
pushf
aaa
pop
and
aas
dec
je
cmp
fs
sbb
mov
or
lock
mov
jne
mov
jae
push
adc
mov
and
in
sahf
dec
jmp
andl
mov
inc
push
aaa
loop
or
xor
adc
cmp
mov
sub
std
stos
xor
cs
mov
scas
hlt
data16
or
fidivrl
in
xchg
jb
mov
pop
add
cmp
iret
add
loop
jge,pn
mov
js
ret
jge
cmpsl
xchg
cli
mov
pop
inc
leave
push
push
test
cmp
xchg
outsb
rclb
mov
mov
bound
mov
out
cld
les
imul
and
pop
xchg
cmp
sub
insl
cltd
decl
dec
mov
cwtl
cwtl
pop
mov
movsb
mov
iret
xor
ret
idiv
ja
push
push
push
cs
lret
ret
jb
iret
inc
jns
jo
nop
repz
ja
xor
dec
dec
js
cs
mov
push
fisttpll
sbbl
out
jne
lods
pop
add
cmp
lret
ds
ret
sub
nop
test
es
cld
cmp
pusha
cltd
mov
fisubs
mov
or
icebp
adc
not
stc
jge
mov
inc
pmaddwd
xlat
lods
jp
fsincos
mov
loop
push
add
popa
push
leave
push
mov
push
xor
inc
je
adc
xchg
xchg
inc
jno
mov
mov
mov
sbb
lock
in
fnsave
xor
jno
idiv
sbb
ret
pop
pop
adc
ss
xchg
roll
call
or
pop
lods
cmp
out
lds
pop
shl
rorl
adc
jge
mov
adc
add
jae
idivl
add
lret
add
idivl
lret
les
iret
int
push
popf
dec
imul
push
pop
xlat
add
adc
or
aaa
hlt
nop
lock
sbb
mov
jne
jbe
add
sbb
push
aad
pop
hlt
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
jle
jge,pn
jle
bswap
inc
xchg
jb
faddp
adc
sarb
and
sahf
sarb
pop
cmc
push
int
insb
jmp
push
fnstcw
rcrb
es
fnstenv
pop
das
sub
jg
mov
scas
popf
repz
jl
cmc
mov
jl
and
pusha
push
cmc
push
add
leave
push
mov
xor
cli
leave
mov
or
adc
sbbl
rorl
inc
lcall
xor
inc
push
mov
mov
dec
push
movsb
loopne
int3
in
xchg
in
imul
pop
lods
add
sbb
std
and
jge
pop
or
fcoml
fidivrs
lods
ljmp
push
outsb
push
scas
dec
xor
ja
xlat
call
inc
inc
iret
push
iret
push
pop
mov
sub
in
mov
inc
inc
fcompl
xor
aas
ret
imul
pop
stc
cmp
mov
adc
or
pusha
movsl
sub
cltd
mov
cmpsl
inc
push
mov
adcl
hlt
and
out
cmpsb
add
cli
shr
or
jo
pop
or
stos
out
pop
xchg
aam
sti
pop
js
std
repz
adc
fwait
popl
das
xor
pop
cmp
call
xchg
lahf
lret
pop
addb
daa
cld
jne
insb
push
lret
mov
push
cltd
mov
sbb
dec
ds
mov
add
push
aas
loop
push
cmp
popf
cli
jb
out
lea
push
add
adc
sbb
popa
movsl
xchg
lods
jnp
out
inc
push
cmpsl
dec
pop
mov
lahf
sbb
and
lret
xor
pop
fwait
cmp
out
insb
lods
add
orl
addr16
insb
leave
mov
in
add
lods
int
adc
lods
lret
loope
fs
adc
int3
or
shlb
dec
cmp
mov
aam
ret
xor
cmp
testl
mov
mov
mov
jmp
cwtl
notb
add
adc
xchg
lahf
outsb
sbb
xchg
xor
mov
test
xor
mov
enter
or
inc
mov
dec
test
push
jno
clc
cmp
xor
pushf
fwait
sbb
popl
hlt
mov
sbb
sub
sbb
pop
xchg
pop
and
cmpb
sbb
das
xchg
pop
lea
dec
mov
repz
hlt
aas
pop
or
sbb
idivl
push
push
pop
lods
push
cmpsb
clc
dec
dec
push
sahf
in
lea
test
pop
mov
aaa
mov
inc
mov
push
in
mov
xor
or
mov
mov
pop
nop
int3
lea
nop
cli
or
jmp
dec
mov
dec
xor
cmp
and
dec
inc
std
hlt
sub
push
inc
daa
xor
sbbb
popa
das
lcall
fcomps
bound
clc
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
jo
pop
push
sub
jle
jge,pn
jle
fs
adc
jecxz
inc
cli
push
mov
aaa
xchg
jp
lock
out
push
outsb
jno
ret
outsl
adc
cltd
es
imul
lcall
insb
mov
pop
out
mov
dec
outsb
cs
test
inc
inc
cmpsb
jne
roll
sbb
scas
or
mov
jle
fiaddl
lret
dec
lods
in
fs
repnz
pushf
cmp
mov
stc
sbb
pusha
mov
pop
stc
stos
nop
mov
sub
cmp
mov
aaa
fbstp
je
add
push
push
jg
shr
mov
rorl
dec
mov
mov
add
jo
cmp
mov
lods
add
test
je
mov
dec
and
subl
insl
xchg
test
jno
pop
ja
and
pop
pop
jnp
fnstcw
xchg
xchg
jbe
add
lea
xchg
xchg
fcoml
ljmp
cmp
mov
loope
fwait
movsl
xchg
pop
out
and
jl
mov
pop
fmuls
xchg
pop
push
lods
lea
popa
or
inc
lret
popa
mov
mov
push
mov
fldl
sub
mov
movd
pop
dec
mov
adc
fcomi
call
fidivrl
cli
fwait
adc
lret
mov
imul
pop
mov
mov
out
or
sbb
mov
dec
mov
shll
dec
fistpl
loope
adc
inc
outsl
or
movsb
push
fistps
lea
mov
scas
xchg
hlt
aam
lret
pop
jnp
fs
dec
fldenv
jmp
neg
aaa
outsl
and
lods
mov
mov
or
pop
sbb
jnp
inc
dec
repnz
stos
or
add
dec
and
fwait
lea
pop
das
sub
jge
xchg
pop
adc
xor
out
jns
pop
or
outsl
xor
inc
adc
xor
lcall
out
sbb
scas
inc
and
xchg
hlt
adcb
repnz
and
test
xchg
mov
imul
std
pop
insl
sub
xchg
cmp
mov
xor
lods
mov
jl
sub
pushf
mov
pop
dec
es
iret
jae
mov
mov
adc
jo
fs
mov
and
rcrl
pop
pop
cltd
sub
xchg
or
test
push
notl
aas
and
xchg
add
xchg
xchg
inc
fisubs
push
pop
mov
jmp
jns
dec
mov
into
jnp
xorb
imul
mov
rolb
aad
cwtl
cmpsl
je
inc
pop
dec
pop
sbb
add
mov
sbb
andl
fiaddl
adc
push
sbb
scas
sbb
mov
push
pop
sti
dec
pop
or
push
sub
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
loopne
fstp
bnd
jge,pn
jle
xchg
add
inc
lahf
add
repnz
xchg
mov
xor
pushf
orl
out
and
pop
test
call
jne
jle
cltd
mov
xor
xchg
push
cmp
cmp
push
sbb
sub
imul
push
repz
jno
mov
aam
and
imul
in
pop
in
xor
testl
inc
sub
add
jb
aad
sarl
ds
mov
xor
aam
lcall
sti
enter
cld
popa
push
enter
loope
lahf
hlt
and
sti
or
data16
and
mov
stos
mov
push
push
imul
cs
jnp
mov
mov
fdivl
xor
cmp
lcall
xchg
mov
andb
ja
push
jns
mov
jle
loop
or
pop
xchg
jb
call
xchg
dec
or
jno
fistpl
test
cmp
iret
add
pop
inc
pop
mov
ljmp
aas
fstpt
mov
repz
add
cwtl
jp
jle
xchg
stc
gs
push
divb
or
fldt
sbb
ficoml
adc
push
xlat
pop
ficomps
cmp
sub
push
pusha
xor
and
mov
orb
in
jecxz
das
out
subb
pop
int
mov
sbb
pop
and
mov
xor
jns
push
cltd
xchg
pop
in
sbb
mov
addr16
aaa
sbb
jns
cmp
xor
xchg
and
pop
jmp
fstpt
iret
jne
aas
out
adc
jb
clc
daa
adc
xor
jg
loop
les
repz
arpl
fidivs
pop
sti
sub
insl
cmp
inc
rorb
jmp
adc
or
xchg
pop
daa
adc
push
push
rcl
xchg
adc
sbb
incb
lea
add
arpl
jmp
or
cs
mov
mov
jge
jp
jnp
push
push
repz
push
mov
push
lahf
and
xchg
add
les
mov
popf
sbb
jl
testb
dec
test
xor
cs
scas
int3
sub
movsl
pop
xor
cmc
sub
mov
xchg
cmpsl
xchg
mov
jnp
pop
aam
fbld
or
jo
pop
stos
hlt
fwait
cli
sub
jnp
mov
jecxz
xchg
stc
mov
into
lods
mov
sub
rcll
je
pop
jecxz
push
rol
pushw
in
jge
or
popa
pop
push
fldl
pop
inc
lcall
dec
call
lret
lret
push
mov
mov
mov
arpl
push
push
push
popf
cmp
mov
jo
mov
mov
movsb
xor
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
ss
inc
lcall
jle
mov
push
int
lret
add
popf
lods
dec
cltd
adc
cmpsb
jle
pop
orb
pop
daa
inc
mov
xlat
and
sub
push
adc
hlt
movsl
leave
mov
jns
or
jmp
icebp
movsb
cmpsl
push
cs
fisubrs
and
es
mov
fwait
push
fidivs
or
sbb
mov
adc
cmpb
mov
adc
mov
mov
ss
jmp
cmpsl
mov
cmp
jge
inc
pop
or
pusha
dec
stos
pusha
ret
pop
lods
cltd
push
ss
aas
push
mov
nop
inc
mov
lret
dec
ja
test
sbb
jecxz
xor
lods
push
jmp
inc
lahf
inc
sbb
pop
test
and
cmpsl
notl
stos
inc
pop
jl
push
negb
imul
fadd
jae
dec
outsl
mov
in
loopne
inc
roll
push
sbb
push
es
in
leave
xchg
pop
sbb
xorb
jp
cltd
pushf
mov
xchg
nop
inc
loope
and
lcall
xchg
sbb
xchg
and
out
jmp
jecxz
cmpsb
fsubr
sub
xchg
pop
push
rcll
cli
das
pop
cmp
adc
fcmovne
or
sbb
movsb
jmp
xchg
sahf
lahf
dec
jg
push
test
movsl
call
daa
js
push
lahf
pop
mov
lret
xchg
xchg
cmp
push
out
movsl
lock
les
inc
lahf
mov
clc
push
adc
daa
fdivs
mov
rcrb
lea
add
inc
push
xchg
mov
and
jp
ljmp
lods
mov
mov
stos
mov
fwait
lcall
hlt
sub
aas
and
or
jg
cwtl
adc
cwtl
xor
out
jo
adc
cltd
jnp
jmp
icebp
sbb
pop
sub
push
xchg
sub
pop
movsb
cli
mov
add
cmp
adc
in
pop
add
or
or
add
jle
and
movsl
cmp
sbb
push
jp
aas
xchg
xchg
fwait
std
ss
outsl
std
dec
ficoml
adc
cmp
mov
mov
mov
xor
sub
or
ret
or
xchg
mov
rcll
rcr
gs
jne
lahf
lcall
leave
cs
fwait
mov
subl
pop
push
or
xchg
lahf
enter
shl
push
dec
xor
rcll
out
inc
mov
mov
push
leave
push
rcr
push
sbb
bound
sub
mov
mov
enter
decl
lods
cmp
arpl
in
insb
imul
mov
mov
fstps
adc
mov
xchg
cmpsl
in
nop
mov
arpl
pop
push
subl
das
add
or
and
adc
xchg
jno
sahf
xchg
das
sahf
jb
mov
jae
jb
adc
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
jne
mov
jge
jle
pop
push
idiv
outsb
adc
and
sub
xchg
push
mov
adc
inc
lea
and
xlat
loope
mov
xor
filds
xchg
xlat
push
icebp
je
xlat
xchg
rcrl
std
mov
iret
lds
insl
imul
mov
cmc
mov
xchg
out
xor
dec
enter
add
inc
out
repnz
jle
and
int3
lock
icebp
mov
lahf
jl
add
xchg
mov
out
jo
lcall
fidivrl
inc
mov
cld
sub
sbb
repnz
mov
push
dec
sub
push
cmpsl
sub
jo
mov
jo
xchg
nop
pushf
inc
or
add
jmp
flds
xchg
repnz
iret
lea
and
out
push
inc
add
jg
xlat
cli
dec
mov
push
insl
xchg
ret
dec
in
mov
and
fs
jp
fxch
enter
jnp
movsb
cmp
mov
rcrl
shll
filds
or
xor
and
dec
push
cmp
xor
adc
add
push
ficoms
ret
dec
and
lcall
push
fists
mov
inc
int3
or
cmp
pop
rol
jg
out
pop
cmp
and
outsl
cli
jae
sahf
cmp
arpl
sub
mov
mov
xchg
adc
xchg
aaa
cmp
pop
add
iret
leave
fiaddl
sbb
mov
fsubs
aad
inc
rcl
xlat
jg
out
cmp
xor
and
sub
int
sbb
dec
inc
push
jae
fistl
fsin
loop
mov
imul
orb
jno
mov
dec
mov
orl
cmpsl
mov
inc
inc
incb
out
mov
cwtl
mov
cmp
mov
jl
fisubrl
test
in
stos
inc
fisubs
icebp
js
cmpsl
and
int3
fiadds
cmpsb
out
sub
adcb
scas
add
stc
and
push
mov
xchg
int
dec
fildl
mov
mov
enter
ret
mov
xchg
pusha
int
sub
inc
arpl
or
pop
pop
shlb
jmp
iret
push
sub
hlt
repnz
inc
sub
js
mov
out
cmp
cmpsb
mov
nop
leave
leave
xchg
push
scas
arpl
fdivs
mov
jge
xor
popa
dec
sti
and
mov
and
mov
lods
xchg
mov
imul
lret
inc
enter
xchg
inc
adc
bound
mov
sbb
jle
repz
pusha
int
pop
loopne
movsb
repnz
stos
mov
lahf
pop
xchg
xor
rcl
negb
loop
mov
jg
ss
out
or
test
mov
adc
fisttps
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
lock
jle
jge,pn
jle
pop
pop
cmp
jb
inc
pop
add
out
pop
cmp
clc
add
or
mov
jmp
mov
push
push
cld
dec
cmp
outsb
add
or
mov
leave
les
ljmp
cwtl
repz
into
pushf
mov
imul
ss
xchg
in
push
les
js
movsb
mov
sub
jmp
pop
arpl
xor
lcall
mov
daa
xchg
test
mov
stos
dec
sbb
pop
add
dec
mov
mov
push
loope
cmp
jmp
outsb
mov
rorb
and
std
cmpsb
rorb
arpl
ss
and
jp
or
inc
push
incb
out
mov
mov
negb
in
cmp
ror
mov
add
xchg
in
leave
cmpsl
sti
inc
mov
xchg
nop
outsl
ja
adc
jecxz
in
push
fdivrl
sti
add
cmpsl
pop
loope
inc
xor
into
and
lcall
movsb
xchg
outsl
adc
mov
imul
fnsave
scas
cmp
mov
addl
int3
test
push
mov
cld
jmp
xor
mov
daa
iret
cld
push
or
repnz
aaa
adc
andnps
push
sub
inc
mov
lret
aaa
out
pop
out
insb
pop
xchg
push
mov
or
daa
mov
sub
push
notl
or
fwait
sbb
in
insb
push
xchg
fnsave
setb
xchg
push
scas
lods
pop
cli
push
daa
in
mov
fxch
inc
aam
pop
cltd
loop
test
push
subl
cmp
dec
cmpsb
addr16
idiv
mov
das
mull
sahf
das
test
pop
in
sbb
xchg
mov
adc
stos
mov
pop
sbb
fdivrl
adc
sbb
cmp
ret
inc
fistl
add
push
arpl
out
pop
push
inc
pop
clc
cwtl
fildll
daa
clc
movsb
mov
roll
push
les
mov
or
divl
inc
shll
rolb
mov
dec
push
push
push
jae
stos
jno
mov
mov
mov
cmp
sub
cmp
inc
push
adc
mov
sbb
pop
bound
xchg
and
outsb
adc
sub
mov
stos
pop
insl
insb
pop
mov
les
mov
mov
int3
out
adc
jae
jbe
jecxz
insl
xor
jle
xchg
mov
or
dec
inc
xchg
hlt
das
push
popf
mov
and
stos
ret
and
cmp
xchg
sbbl
dec
jge,pt
xchg
sti
into
xchg
add
repnz
push
and
insb
lods
inc
mov
xlat
stos
mov
or
aas
mov
roll
pop
cwtl
lahf
insb
inc
xchg
test
test
dec
inc
cld
lcall
add
cltd
sbb
or
cmc
inc
lds
jne
mov
clc
inc
lret
aaa
adc
and
daa
std
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
sti
enter
jle
jge,pn
jle
xchg
xlat
dec
loopne
ret
or
in
xlat
pop
rol
frstor
daa
and
pop
lret
mov
mov
fnstsw
add
mov
push
xor
nop
mul
ja
pushf
es
xchg
or
sub
std
mov
ss
or
into
aaa
shlb
iret
call
int
popf
push
and
mov
pop
and
loop
adc
sbb
mov
adc
aam
xchg
outsb
xchg
xor
xor
inc
cmpsb
and
ficompl
insl
inc
mov
sub
mov
add
sbb
ss
bound
daa
fs
push
ret
push
adc
fisttpll
push
scas
lea
loop
js
or
test
sbb
xchg
pushf
divb
add
clc
and
pop
cmp
inc
push
mov
mov
fstpl
and
xchg
fisubrl
repz
rorl
cmpsb
push
cmc
in
fcmovb
rcr
out
and
mov
inc
dec
pop
sti
sub
xchg
sahf
gs
sub
xchg
jle
cmp
lahf
rorb
xlat
and
aad
icebp
addl
xchg
cwtl
out
xlat
mov
shlb
pop
jbe
mov
outsl
test
jp
testb
cmp
fnstcw
pop
popa
pop
pop
dec
xor
imul
out
sti
and
movsl
std
and
xchg
and
sub
fdivs
cld
add
add
lcall
sbb
shlb
shl
iret
inc
pop
dec
adc
je
mov
jmp
jg
xor
xor
mov
popa
mov
add
fwait
xchg
xchg
inc
orb
sbb
adc
push
jo
out
mov
rcl
push
push
push
fistpll
inc
add
ljmp
insl
mov
sarb
sub
aam
sub
stos
push
push
lahf
add
ds
push
push
inc
cmp
mov
in
test
roll
fimull
jg
mov
and
std
out
sarl
clc
pop
stos
mov
pop
mov
dec
dec
outsl
lret
scas
insl
dec
aaa
xor
push
mov
dec
xchg
mov
es
pop
sbb
mov
bound
mov
inc
jno
lock
and
int
sbb
sbb
rsm
test
ja
out
clc
xchg
push
add
out
push
jl
mov
mov
lret
lret
or
mov
test
orb
jg
add
enter
adc
outsl
mov
imul
lret
gs
lahf
gs
outsl
jge
mov
dec
sar
xchg
loopne
pushf
addr16
cltd
nop
mov
pusha
repnz
int
add
push
dec
out
xchg
fistpl
inc
cmp
xchg
pop
or
mov
pusha
cmp
push
push
jns
outsl
push
push
mov
arpl
arpl
sub
ljmp
dec
enter
adc
in
fnstsw
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
jg
fisttps
jge,pn
jle
mov
adc
call
leave
or
movsb
dec
adc
mov
repnz
lahf
push
pusha
addb
mov
mov
jge
sub
mov
pop
push
repnz
push
cmp
pushl
movsl
push
sbb
mov
jmp
mov
add
int
add
loop
out
je
mov
mov
sar
jg
mov
scas
aas
insl
test
jbe
mov
rcll
mov
dec
mov
xor
lcall
inc
xchg
fldenv
in
mov
jg
xor
pop
mov
xchg
mov
cli
arpl
jae
roll
mov
popa
sub
and
arpl
or
and
std
pop
push
pusha
jb,pn
cmpsl
std
or
ds
inc
fs
into
imul
add
dec
dec
push
mov
into
outsb
and
dec
add
test
pop
mov
fmuls
aam
mov
mov
rol
jmp
mov
dec
loope
cwtl
adc
xchg
push
sarl
stos
call
xor
ja
sub
fildll
or
mov
loope
outsb
cmp
repnz
iret
je
or
test
xchg
push
sbb
jp
xor
decb
test
dec
movl
or
fiaddl
mov
sti
subb
xor
aam
pop
ljmp
mov
stos
cwtl
sar
lcall
mov
inc
lock
and
push
push
adc
rorb
mov
mov
jmp
xorb
cld
stos
add
ds
jbe
bound
bound
jae
cmpsb
in
mov
repz
push
fxch
mov
or
out
imul
jg
adc
imul
and
shrb
cmpl
push
push
das
repnz
xor
sub
jge
add
inc
cs
pop
ds
in
mov
cmp
lds
aaa
jbe
les
push
mov
push
lock
cwtl
repnz
rcrl
cmpsb
fimuls
decl
fs
sub
pop
loope
mov
notl
mov
push
repnz
nop
out
sbb
cmp
test
loope
enter
cmpsb
sbb
mov
sub
out
dec
cmp
sub
xchg
inc
int
xor
xchg
ljmp
mov
push
int3
xlat
sti
and
inc
push
add
in
xor
cmpsb
outsl
mov
mov
and
mov
mov
xchg
mov
clc
lock
xor
mov
mov
push
insl
test
sub
sub
pop
pop
test
mov
scas
lcall
int
push
xchg
jg
fidivrl
mov
xchg
jmp
xor
and
mov
cmp
dec
cmpsb
inc
and
das
jbe
sub
cmp
dec
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
push
aad
stc
cmpl
mov
pop
push
push
fdivrs
xchg
ss
push
or
cmc
idivb
jae
sbb
mov
les
and
icebp
imul
sbb
aaa
repz
test
test
stos
out
or
cmp
or
inc
ds
and
add
fsubs
aas
push
fldenv
mov
sbb
mov
clc
lret
rcrl
and
mov
jns
inc
fwait
mov
mov
jecxz
je
dec
fistpll
loopne
cmpsb
iret
sarb
sub
xchg
jb
jl
or
ret
addr16
mov
inc
jbe
and
popf
stos
jno
mov
sbb
cmc
test
inc
jmp
fstl
rcr
imul
pop
add
dec
out
fwait
cmpsb
xor
imul
or
mov
and
add
cvtps2pd
push
jp
stos
loope
jne
jb
out
dec
cmp
rcr
pusha
jp
jo
sarl
xor
fiaddl
lret
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
mov
lods
mov
and
jle
pushf
mov
xorl
out
xchg
fimuls
or
notb
xchg
cwtl
jge
push
pop
add
jb
cmc
and
aam
sub
pop
add
scas
push
out
cmp
xor
mov
sahf
mov
pop
jmp
imul
les
and
push
out
daa
flds
add
mov
call
ljmp
or
bound
jo
ret
cmp
pushf
cmp
sti
test
cmpsl
mov
mov
jmp
mov
lea
int3
mov
pushf
fbstp
enter
add
mov
dec
mov
xchg
sub
mov
push
xchg
sbb
loope
les
xor
in
adc
push
push
mov
adc
sbb
or
cs
adc
shll
mov
push
scas
push
mov
or
or
inc
push
mov
sub
dec
sbb
inc
faddl
aaa
je
adc
daa
mov
cmpl
fadds
sub
leave
xchg
fnstsw
push
cli
jno
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
stos
mov
jle
and
jle
sub
xor
pop
fdivs
dec
loop
push
xchg
enter
fs
dec
sub
iret
dec
ljmp
popa
sub
mov
fld
xor
jecxz
adc
cs
cs
aaa
push
loopne
ja
jecxz
sub
cmp
ficompl
mov
outsb
imull
scas
add
cmpsl
mov
aaa
daa
xchg
or
mull
aaa
jmp
sbb
jne
xchg
dec
push
dec
sub
adc
dec
pop
push
addr16
movsb
mov
test
push
nop
dec
mov
test
fwait
stos
cmpsb
cmp
ss
int3
aam
pop
mov
push
js
into
les
incl
add
pop
ret
mov
mov
xchg
icebp
inc
js
mov
pop
sbb
sub
mov
jge,pn
jbe
fcoml
in
orl
and
push
stc
lods
in
xor
xor
in
xor
dec
loop
jno
pop
icebp
icebp
mov
xor
pop
movsl
decl
jg
adc
int
xor
xlat
call
aad
cmp
sub
sub
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
jp
add
jg
jle
cltd
mov
mov
cmp
xchg
mov
in
outsb
mov
pop
dec
mov
cmpsl
cmp
clc
mov
bound
in
lahf
jb
pop
inc
pushf
cli
filds
dec
mov
jge
iret
jl
cld
imulb
stos
outsl
inc
leave
lods
mov
in
xchg
in
and
mov
mov
or
les
adc
cmp
ret
mov
out
add
addl
mov
lcall
lret
pop
jne
xor
loope
sbb
pop
push
add
dec
data16
mov
cld
popa
xchg
cmc
and
cld
std
int3
sub
mov
lahf
xor
mov
pop
xchg
icebp
fsubrl
rorb
and
cmp
push
mov
arpl
leave
addb
xchg
pop
sahf
stos
cmp
pop
or
mov
jp
fisubs
jns
jp
icebp
pop
mov
loop
mov
cmp
inc
std
sbb
lds
xchg
iret
adcb
jp
lahf
push
call
mov
cmpsl
adc
add
sub
jmp
adc
jae
jno
je
adc
or
add
sub
jle
int
jbe
les
xchg
sahf
in
pop
fisttps
call
mov
add
decl
jno
fidivrs
mov
lock
aam
pop
shrl
xchg
mov
icebp
fidivrl
and
jae
rcl
les
or
jb
jno
mov
sbb
xchg
cmp
hlt
add
mov
nop
lret
inc
pop
inc
or
shlb
sub
sbb
fdivr
xchg
sub
aas
repnz
andb
jne
and
mov
and
mov
mov
shlb
movsl
adc
cmp
xor
dec
leave
and
push
inc
aas
out
repz
mov
stos
xchg
fcoml
jp
mov
and
xor
fsubrs
sbb
xchg
daa
sub
nop
xor
stc
or
call
in
insl
out
add
or
xchg
bound
pop
pop
and
mov
jbe
addr16
cli
push
mov
dec
repz
and
and
ds
fiadds
push
lds
add
add
jo
mov
aam
das
and
mov
and
jle
cmp
sarl
xchg
test
pop
or
aaa
popa
ja
ret
mov
push
xchg
bound
jle
jecxz
pop
fdivr
jb
std
daa
xchg
jg
fwait
mov
jo
mov
adc
sub
les
fsubrl
movsl
movl
add
push
pop
push
fldenv
filds
push
es
add
mov
jl
fldenv
cltd
mov
pop
inc
sbb
out
lret
shl
dec
hlt
sub
mov
jp
ljmp
cmp
cmpsl
xor
je
es
scas
mov
push
mov
sub
das
mov
push
ret
adc
pop
aad
iret
int3
adc
arpl
mov
aad
sub
mov
inc
cmp
inc
push
jecxz
sti
les
jge
adc
xor
fldl2t
aaa
mov
adc
ret
out
sbb
add
movsl
ss
pop
jno
adcl
dec
rcrl
insb
xor
mov
pop
dec
stos
lahf
xchg
cmp
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
cmp
push
mov
and
jle
xlat
cmp
shll
test
mov
xor
in
outsb
jmp
sbb
imul
addb
and
xchg
push
out
repnz
ljmp
sbbb
sbb
mov
fwait
jb
fwait
mov
pop
hlt
dec
negb
lock
push
mov
cli
nop
out
and
pop
adc
pop
jg
jmp
pop
std
push
jecxz
jge
movsb
jg
in
dec
cs
jg
xor
mov
leave
mov
fildl
stos
inc
adc
push
inc
dec
cmp
outsb
jo
dec
shll
inc
adc
stc
xchg
addl
pop
mov
scas
push
cmp
cmc
mov
loop
lock
leave
push
imul
les
aad
int
cmp
fwait
mov
hlt
adc
scas
add
mov
sub
jmp
xchg
sub
mov
icebp
xchg
mov
push
mov
cmc
lds
pop
inc
jo
xor
ret
ret
test
loope
fdivp
pop
hlt
sbb
mov
mov
pop
jl
movsb
and
or
ret
adc
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
notl
inc
mov
jle
and
jle
dec
xlat
inc
das
outsb
sub
rcrl
xor
jmp
pop
cmp
and
das
fnstenv
cmp
in
imul
je
and
bound
out
lret
sbb
xor
fwait
cmpl
dec
stos
mov
xchg
lods
ficomps
test
pop
push
rorb
jo
push
negb
clc
cmp
jl
jecxz
add
fsubs
dec
xchg
and
mov
cmp
push
cmp
divb
repz
out
jl
push
dec
shlb
pop
test
inc
jb
lcall
pop
pusha
mov
mov
iret
mov
inc
mov
jae
popa
test
mov
and
in
arpl
fcompl
je
mov
or
pop
cli
or
clc
and
cltd
scas
inc
pop
or
cwtl
fisttpl
cli
cmp
jle
cmpsb
outsl
or
mov
add
fcomps
lods
sub
xchg
xchg
stos
fwait
rcr
cmp
and
dec
jno
dec
inc
sub
inc
or
adc
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
lods
call
xorl
push
lea
inc
dec
sbb
shr
pop
hlt
pusha
stos
lock
aad
jnp
xchg
jl
xchg
fwait
leave
popa
cmc
xor
jbe
enter
cmp
pop
lods
sahf
pop
adc
inc
xchg
mov
fdivl
push
nop
jmp
mov
jmp
in
jbe
adc
mov
int3
clc
bound
sub
jb
cmp
mov
ret
das
push
adc
jl
jbe
inc
sbb
stos
fdivs
add
mov
dec
sub
pusha
ja
pop
and
in
xor
mov
mov
jbe
lahf
cmp
sbb
and
lret
push
or
jnp
add
xor
rcrl
push
lahf
inc
repnz
lods
cmp
ja
aaa
ljmp
pushf
xchg
xor
push
fsubs
xor
pusha
inc
xchg
ss
push
mov
jno
sub
dec
dec
int
mov
pusha
cwtl
lods
jg
cmp
ss
adc
movsb
inc
in
repz
pushl
cld
xchg
imul
sarb
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
