push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
mov
jl
jl
addr16
jl
xlat
cmp
ffree
pop
push
add
inc
add
xor
ret
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
cmc
clc
test
fcompl
das
nop
dec
ljmp
ljmp
push
mov
pushf
and
or
insl
sub
and
dec
fistpl
ror
adc
mov
add
lret
jp
out
mov
mov
ljmp
sub
push
mov
xchg
push
push
lcall
xor
leave
pop
or
mov
loop
xchg
pop
aaa
sub
adc
loop
lahf
insl
addr16
ljmp
mov
and
inc
notb
aaa
gs
adc
mov
scas
push
xchg
ret
lahf
divl
sub
mov
push
adc
out
or
std
push
fsts
icebp
shr
in
fwait
add
jnp
gs
xchg
mov
dec
imul
or
push
inc
jp
sahf
inc
lahf
insb
mov
sbb
jg
popa
fucom
sbb
clc
pop
push
dec
daa
shrb
mov
pushf
jbe
mulb
orb
cmp
icebp
fisubl
sbb
sarl
movsb
and
mulb
and
pop
add
insl
lea
lsl
arpl
jl
jmp
jne
inc
das
pop
jne
xor
aam
sbb
in
mov
cmc
dec
and
iret
fs
lret
xor
jne
or
mov
add
movsb
sti
aaa
fwait
mov
inc
inc
fadd
pop
cli
add
pop
and
cld
sbb
in
mov
or
fxch
or
add
cmc
jp
and
imulb
and
cmp
inc
loope
mov
and
das
lahf
nop
loope
fs
in
arpl
insl
aam
jb
mov
cwtl
pop
push
aas
out
sbb
ljmp
jns
shrl
scas
ret
out
xlat
loop
push
dec
es
cmp
sbb
push
lahf
lea
lret
dec
in
test
cli
lods
fnstsw
mov
jne
mov
xor
add
insl
cmpsl
repnz
sti
jo
lods
xor
add
stos
add
mov
clc
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
lea
push
addr16
jl
test
push
addr16
cmp
or
or
repnz
dec
enter
dec
lret
jl
xchg
dec
mov
shl
out
ja
mov
sub
inc
push
pop
xchg
cmp
test
or
div
adc
jbe
and
pop
lahf
xor
or
pop
dec
jle
scas
cmpsl
aas
or
leave
aad
inc
pop
test
addr16
jne
dec
cld
add
sub
mov
sub
adc
add
push
mov
add
mov
sub
ror
lcall
sbb
or
ljmp
sub
imulb
sarl
jns
ret
or
fwait
insl
mov
lcall
pushl
cmp
sti
ret
repnz
sbb
xchg
popa
dec
repz
in
fdivr
mov
popa
pop
mov
in
loop
xchg
push
imul
cmpsl
cmp
lcall
movsb
mov
test
jg
adc
ret
outsl
data16
hlt
cmpsl
sbb
clc
sbb
mov
pushw
scas
push
fdivrs
fbstp
shl
mov
fs
xor
xchg
outsb
inc
pop
xorb
dec
sbb
mov
loopne
add
jbe
cmpl
out
cs
mov
out
cmp
insl
dec
jne
sub
dec
xor
in
popl
sbb
imul
sub
pushf
or
dec
and
push
xlat
jne
or
jne
inc
fwait
dec
bound
cmc
scas
push
mov
call
shlb
and
popf
rorl
test
pop
add
ds
mov
xchg
jle
add
aaa
jg
cmc
bound
pushf
mov
stos
fcomp
jmp
sub
ds
adc
push
pop
imul
mov
std
rcl
dec
test
arpl
xchg
fdivrs
popf
stos
leave
sub
loope
mov
jge
xor
xchg
clc
pop
add
xchg
jg
imul
add
sahf
push
cmp
add
out
add
lea
xchg
dec
fcmovnbe
lcall
mov
cmpsb
iret
pop
jl
insb
hlt
in
hlt
incb
jo
vcvtuqq2psx
or
mov
leave
aad
into
cld
inc
neg
xchg
movsb
jecxz
frstor
push
leave
loop
aas
lods
pushf
jecxz
popf
mov
int
loop
popf
mov
out
orl
ficoml
adc
ss
pusha
cmp
insl
push
push
fadds
dec
mov
add
xchg
and
test
sub
icebp
jle
inc
xor
leave
adc
push
fldl
jge
mov
push
ss
add
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
lret
push
addl
addr16
jl
popf
popf
lahf
push
dec
adc
mov
lods
lahf
xor
dec
sahf
fnstcw
lods
dec
mov
add
push
hlt
dec
mov
outsb
into
sbb
jo
or
push
aad
dec
pop
jne
scas
icebp
jnp
fucomip
dec
cmp
stos
in
cli
hlt
stos
fldcw
jmp
inc
outsb
mov
inc
lds
fnstsw
mov
lds
cltd
int3
pop
jno
jns
mov
and
mov
mov
sbb
testl
fwait
add
pop
cwtl
lock
faddl
inc
fisttpl
test
sub
jns
dec
mov
dec
fmul
pop
and
pop
es
daa
data16
cs
pop
jp
mov
push
std
add
es
pop
in
fmuls
arpl
sti
mov
js
repz
or
jge
jecxz
cmpsb
or
mov
and
sbb
or
ret
enter
push
mov
subb
ss
mov
jnp
mov
not
push
push
add
jmp
mov
call
mov
jns
push
mov
mov
mov
loope
fdivs
int
mov
add
xor
int
fildl
inc
outsl
mov
and
insb
leave
cli
jb
stos
arpl
pop
xor
bound
jno
or
lds
sarb
ficoml
iret
xor
cmp
das
pop
xchg
mov
jl
inc
push
xor
pop
fcoml
xor
nop
mov
sbb
jne
pop
pop
orb
jo
mov
les
dec
xchg
push
add
xor
xor
or
jae
push
push
xchg
or
sub
xor
jae
dec
adc
pop
push
out
xchg
fmull
shlb
test
mov
addr16
mov
outsl
sub
insl
insl
and
int
enter
inc
movsl
gs
in
add
pop
pop
andl
sbb
int
je
aad
frstor
xchg
add
sbb
mov
dec
mov
pusha
inc
test
jne
xor
dec
add
out
push
push
pop
hlt
test
dec
xor
icebp
lcall
xchg
cmp
rolb
in
cmp
daa
js
cmp
sub
imul
scas
shl
je
fwait
jmp
shl
fwait
jle
decb
inc
inc
ds
mov
lods
je
clc
fs
inc
jg
cmp
dec
popa
fisubrl
dec
mov
es
loopne
in
es
add
jecxz
aad
bound
imull
dec
in
out
push
sbbb
rorb
into
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
pop
lahf
test
xlat
mov
std
lret
mov
xchg
cmp
movsl
jae
or
mov
inc
cld
idivb
dec
pop
pusha
mov
notl
ficoml
pop
mov
roll
pop
sbb
scas
lcall
pop
mov
les
stc
shr
js
sarb
xchg
inc
push
ror
mov
outsl
jg
out
mov
lea
lock
xor
leave
subl
ds
ds
or
pop
mov
cmp
lcall
add
or
dec
fwait
iret
xchg
iret
setl
imul
aam
mov
sub
std
xor
push
xchg
sub
cmc
fsubr
iret
xor
inc
sub
test
decb
xchg
outsb
subl
cli
stos
cltd
inc
bound
xor
jge
outsl
xchg
fcmovb
pop
inc
mov
cmpsb
cli
into
cwtl
mov
xor
adc
jnp
inc
inc
sbb
xor
out
es
xchg
or
lcall
loope
daa
pop
ficomps
cwtl
mov
std
fbld
mov
shlb
jle
stos
ljmp
addr16
push
push
dec
cmpsb
adc
movsl
pushf
aas
sub
cli
daa
and
sahf
cwtl
adc
frstor
lret
negl
std
sbb
jg
std
es
inc
cmpsb
jns
fisubl
add
out
mov
in
push
inc
adc
loop
gs
push
push
dec
add
faddl
ljmp
cmp
cwtl
dec
xchg
popf
faddl
mov
sbb
mov
inc
add
pop
or
les
das
repz
int
mov
outsb
bound
adc
bound
stos
push
inc
sti
cli
fcmovnb
adc
lcall
sbb
adc
sbb
mov
xchg
dec
imul
push
pushf
lret
push
in
in
inc
add
and
test
jp
sub
mov
and
mov
push
leave
add
pop
dec
dec
faddl
mov
out
cmp
orl
js
xchg
imul
insb
out
cmpsl
dec
ret
pop
adc
pop
mov
fstpt
sub
je
mov
cs
popf
xor
testb
inc
sbb
xchg
icebp
inc
stos
js
outsl
cmp
enter
movsl
cmp
push
xchg
jge
int
sbb
ja
mov
cmp
pop
push
push
adc
push
mov
cmp
xor
jb
add
ja
mov
cmpsb
sbb
push
out
xchg
dec
or
sub
push
ss
bound
into
mov
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
cmpsl
cwtl
add
jle
jl
xor
xchg
ja
shll
out
mov
hlt
xchg
push
mov
les
test
and
or
mov
inc
enter
or
and
xchg
cmp
cmc
icebp
pop
mov
or
push
xor
lods
xor
jne
std
cmp
scas
dec
jle
andl
les
xor
dec
dec
push
xor
mov
sahf
test
jnp
push
jo
mov
pop
in
dec
sub
jecxz
into
or
or
adc
push
push
jno
mov
add
fcoml
testb
jae
adc
add
cmp
pop
popa
pusha
jno
and
push
sub
nop
dec
enter
pop
lods
push
outsb
push
popf
movsl
fsubp
fisubrs
fldcw
test
ljmp
pop
flds
xchg
mov
add
ja
xchg
das
xor
mov
ljmp
stc
sub
mov
mov
cmp
jb
std
inc
pop
adc
incl
fcmovne
cmp
sbb
pop
add
or
xor
fstl
xor
bnd
sahf
jmp
repz
xchg
xor
iret
std
push
daa
scas
addr16
xchg
jecxz
stc
or
je
mov
add
mov
ss
jne
loop
cli
shrb
jle
testw
mov
popa
jle
mov
add
insl
xchg
cmp
cmp
ss
loopne
and
je
and
sub
insb
jo
xchg
sbb
out
addl
aad
xlat
cltd
int
bound
lods
add
mov
jno
testl
pusha
inc
inc
mov
bound
pop
cmpsl
push
mov
add
jp
insl
ret
mov
popa
daa
in
outsb
inc
testl
jo
ds
int3
into
outsl
push
push
jmp
cwtl
xor
adc
or
fildll
jo
cmp
es
lods
xchg
mov
cmp
mov
pop
test
xlat
inc
jmp
push
mov
cmp
cld
outsl
mov
outsl
es
and
aad
cmpsb
daa
xchg
icebp
popf
sar
bound
daa
fbld
mov
popa
xor
daa
orb
xor
out
mov
adc
mov
sbb
iret
insl
stc
adc
jo
cltd
sub
into
cmpsb
sub
ds
pop
mov
and
xchg
cwtl
mov
lret
and
cs
cmp
sahf
iret
inc
jmp
out
cmp
rorl
sbb
rclb
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
push
jl
dec
push
cmp
loope
sub
push
fiadds
addb
in
xchg
xchg
pop
outsb
add
jecxz
insb
add
mov
repnz
test
sub
dec
clc
divl
pop
ja
lret
mov
mov
pop
cli
ja
mov
outsb
inc
sbb
mov
jno
sbb
push
sbb
or
inc
sbb
call
dec
nop
jns
pop
add
mov
mov
cmp
outsb
inc
shrl
hlt
fisubrl
test
rcr
movsb
adc
xchg
lret
fsubrs
inc
aad
pop
cmpsl
cmp
fisttpll
dec
push
and
cmp
aaa
sbbb
mov
scas
pop
inc
mov
sub
adc
lea
pop
push
sub
or
lods
leave
xchg
aas
fs
and
cli
add
lahf
pop
stc
daa
mov
adc
fisttpl
or
mov
out
inc
leave
aaa
add
add
test
leave
rolb
adc
sti
ljmp
sub
xor
hlt
inc
or
test
cmp
mov
insl
movsl
sub
adc
sbb
jecxz
stos
xchg
mov
adc
adc
or
cmp
pop
stos
add
dec
mov
testl
not
cmp
add
jl
push
adc
and
inc
loopne
pop
data16
sub
stc
pop
xchg
jle
divl
pop
push
lret
add
sti
mov
lods
xchg
inc
sbb
fidivl
push
addr16
jnp
jno
test
out
lock
mov
das
dec
xchg
popf
and
pop
daa
cmp
lods
es
jecxz
and
daa
cmp
xor
add
mov
dec
fadds
js
mov
jb
pop
xchg
xchg
bound
add
imul
sbb
imul
in
ss
fs
jge
or
enter
xor
mov
cmp
test
leave
pop
test
mov
testl
mov
mov
add
mov
idiv
je
sbb
cmp
xor
push
adc
jnp
daa
add
js
add
clc
or
arpl
mov
out
cmp
mov
pop
cmc
mov
scas
xchg
inc
pop
adc
in
and
adc
or
adc
cmp
test
lock
dec
add
lock
insb
add
pop
add
or
or
mov
mov
cmp
jmp
mov
jne
adcb
mov
cmp
ljmp
jl
mov
cmc
fwait
sbb
fimull
pop
jge
xchg
cmp
das
dec
test
dec
and
sarl
inc
and
add
lret
push
xchg
outsl
push
clc
or
xchg
arpl
dec
xor
xchg
pushf
mov
or
les
call
shll
or
cmpsb
in
out
ds
xchg
mov
xchg
sbb
xor
cmp
pop
cs
loop
mov
pop
sbb
nop
int
outsb
mov
push
fldt
add
test
cmc
jne
enter
xor
dec
adc
xor
dec
and
pop
ja
pop
add
jle
hlt
subb
mov
arpl
cmp
inc
pop
push
aam
int
popl
loope
mov
aas
fsubs
jne
adc
sub
jmp
stos
jne
or
or
add
sub
mov
sbb
dec
and
inc
dec
mov
lds
lock
jl
in
push
pop
xchg
pop
and
push
mov
xor
in
push
xor
push
mov
push
in
mov
add
mov
rol
enter
fiadds
neg
ficompl
add
jmp
pop
mov
push
call
mov
lea
imul
xor
imul
mov
je
or
push
jae
fiadds
pop
xlat
rorl
sbb
inc
lods
adc
sub
pop
jge
ret
dec
ficompl
inc
fcoml
xlat
push
enter
imul
lcall
mov
movsl
xchg
in
cltd
nop
mov
in
pusha
xor
into
insb
cs
xchg
sub
pop
pop
add
lds
jg
insl
ljmp
push
ja
mull
adc
lods
sbb
xor
mov
mov
adc
push
aas
shlb
loope
or
push
push
push
iret
loopne
loope
out
dec
sbb
cmpsb
xchg
mov
clc
sub
mov
fistps
mov
shl
aad
pop
cmpsl
shrl
minps
or
push
push
sub
inc
push
fildll
cmp
in
ja
sbb
ret
xchg
mov
fisubs
shlb
repnz
out
or
xor
xchg
and
jae
int3
out
gs
cwtl
jecxz,pt
sbb
stos
pop
insb
in
push
sahf
call
lods
push
mulb
in
dec
sub
fistpl
or
scas
xlat
lock
jbe
fildl
sahf
push
or
push
dec
icebp
mov
lea
push
insl
js
mov
cmp
rolb
test
stos
bound
iret
sub
cmp
mov
add
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
push
insb
push
fisttpll
jl
addr16
jl
cmp
in
mov
sbb
jp
add
inc
adc
sbb
inc
dec
cmp
push
scas
leave
xor
sahf
hlt
pop
xchg
gs
inc
gs
mov
xchg
dec
jne
sahf
test
mov
adc
das
test
push
out
mov
pop
xchg
adc
add
ret
in
mov
loop
cmp
push
cmpsl
fsubrs
dec
fdivrs
lahf
push
cmp
sbb
dec
jmp
movsl
icebp
adc
pushf
fcomps
cmp
and
add
data16
sbb
xchg
and
mov
inc
xchg
mov
adc
or
je
cmp
enter
add
or
sub
inc
jnp
mov
cmp
or
or
fwait
push
and
test
fisubs
sbb
or
sahf
xchg
xor
dec
insl
mov
jae
jle
adcb
mov
lret
push
sbb
ret
iret
jge
mov
pop
sub
xor
mov
push
mov
or
loope
lods
inc
mov
sbb
push
mov
fcompl
jne
fistpll
or
or
push
arpl
xchg
imul
sbb
jmp
jbe
scas
in
outsb
addr16
mov
inc
dec
dec
pop
cmpsl
sahf
int3
push
aaa
dec
add
mov
add
mov
fiaddl
fdivrl
xorl
adcb
cld
gs
push
js
cmp
dec
jno
and
lret
aaa
sbb
lods
das
adc
cmpl
xchg
mov
vpsrad
add
shrb
lea
out
dec
mov
and
cs
mov
inc
subl
inc
dec
pusha
sar
push
fnsave
push
movsl
push
xchg
and
pop
imul
mov
insb
sub
cmp
test
push
fiadds
cmp
sbb
dec
mov
add
cmp
pop
adc
sbb
adc
loopne
inc
loope
hlt
aas
lods
pop
xchg
adc
or
dec
dec
dec
and
jo
cltd
dec
adc
subl
popf
and
or
negb
test
nop
sbb
ljmp
iret
dec
adc
xor
mov
add
push
js
inc
fbld
ja
inc
rclb
lcall
ret
mov
out
push
into
push
cltd
mov
mov
roll
pop
cmpsl
jl
push
clc
sub
or
negl
pop
xor
xchg
add
push
jl
out
rolb
mov
jl
dec
ja
mov
and
xchg
add
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
sub
scas
les
jl
pop
aad
push
jg
dec
adc
cmp
std
pushf
sahf
mull
ss
mov
jns
in
push
movsb
cli
adcb
je
mov
mov
frstor
aam
add
mov
leave
in
ror
adc
lahf
mov
xor
enter
mov
inc
pop
mov
rcrb
cmp
loope
cmpsl
add
movsl
enter
push
jle
fs
cmp
sarb
imul
push
sub
leave
sub
call
rorl
and
mov
stos
jecxz
ret
out
mov
inc
pop
xchg
xor
leave
inc
add
mov
ljmp
sbb
xor
insb
lcall
insl
dec
add
ja
add
nop
push
neg
imul
fidivl
pop
loopne
sbb
ret
popf
daa
fiadds
adc
or
pushf
xor
je
xor
js
and
inc
lret
fucomp
jle
xchg
push
xor
mov
inc
nop
cmc
roll
jge
dec
jge
fcmovnbe
scas
lret
ret
pusha
xchg
in
push
test
sbb
sbb
push
pop
and
scas
mov
sbb
and
aam
popf
cwtl
lcall
pop
xor
mov
fmuls
fmul
les
pop
push
pop
aam
aas
ljmp
insl
jl
test
inc
outsl
xchg
xor
aad
mov
ret
sahf
lcall
movb
mov
sbbl
inc
fnstenv
rcrl
mov
cwtl
add
pop
dec
pop
scas
mov
mov
and
mov
int3
xchg
stos
sbb
xchg
insb
mov
out
lea
adc
jl
pop
pop
xchg
loop
cmp
loop
repz
stos
mov
lahf
mov
mov
movsb
fnstsw
push
cmpsl
mov
std
mov
and
mov
int
add
pop
in
fistpll
shrb
pop
leave
inc
push
jbe
and
mov
sub
add
imul
inc
mov
mov
xor
cmpsl
insl
pop
scas
jns
sub
push
push
arpl
out
mov
dec
div
clc
pop
dec
dec
in
push
mov
aam
stos
jnp
mov
cwtl
rolb
int3
sub
cmp
jbe
mov
mov
enter
push
jecxz
jecxz
sti
scas
xchg
inc
sub
enter
dec
test
lahf
dec
test
pop
pusha
lret
mov
or
les
in
jmp
loopne
inc
mov
aad
push
clc
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
ds
jl
addr16
jl
jbe
bound
sbb
sub
push
fwait
inc
js
push
icebp
data16
jmp
ret
addb
xor
jno
push
cmp
imul
ss
dec
iret
stos
xor
jns
add
js
xchg
int
mov
lcall
ljmp
pop
adc
push
ds
mov
fwait
gs
arpl
imul
sbb
enter
sahf
out
pop
inc
pop
mov
out
sbb
push
icebp
cs
or
mov
ds
mov
cmc
inc
stc
in
inc
mov
adc
mov
pusha
aaa
push
mov
xor
leave
sub
fldt
aas
or
xor
mov
mov
lods
aad
mull
test
leave
or
and
sbb
adc
cwtl
loopne
shlb
popf
into
or
fwait
test
sub
inc
pop
mov
or
xchg
decb
pop
addl
mov
mov
cmp
filds
lret
sbb
fidivl
lret
in
mov
pop
clc
lret
lods
sbbl
dec
sub
das
mov
cmc
pop
cmpsb
insb
aaa
jae
mov
iret
xorb
lds
xor
je
mov
and
rolb
mov
dec
sub
jb
stos
test
mov
movsl
lahf
arpl
imul
das
test
push
repz
dec
pop
adc
fwait
add
dec
mov
cmp
adc
push
push
jne
jmp
call
push
dec
jge
sub
push
enter
repz
cmp
cmpsl
xchg
add
pop
imul
inc
mov
lods
mov
or
jb
xchg
dec
pop
mov
pop
jl
add
and
shlb
add
inc
mov
xchg
xor
jmp
out
movsl
add
xchg
repnz
jno
movsl
lret
ret
scas
add
out
xchg
cwtl
fwait
pop
rclb
fs
pop
mov
xchg
jl
dec
ficoml
inc
into
fiadds
adc
push
cltd
jg
cmp
ficomps
lcall
jge
idivb
sub
sbb
pop
mov
imul
stos
sub
xchg
cld
pop
mov
repnz
repnz
push
stc
sub
aaa
or
adc
pop
push
cwtl
inc
sahf
std
mov
dec
jg
push
hlt
ret
push
adc
mov
add
push
xchg
adc
rcrl
enter
test
xchg
cld
dec
clc
jae
xor
adc
clc
inc
arpl
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
xchg
inc
inc
mov
adc
jg
jl
ss
jo
mov
insl
cmc
or
jae
push
aam
ja
loopne
or
repz
lcall
lds
lret
xor
lds
adc
popf
mov
and
pusha
in
sub
push
out
mov
jnp
ficompl
adcl
push
pop
jp
in
subb
sub
xorb
les
mov
mov
push
andl
clc
mov
mov
pop
ud2
and
cmc
jp
les
xor
xchg
dec
repz
nop
fbld
mov
push
int3
insl
js
push
hlt
call
dec
inc
gs
dec
mov
mov
mov
mov
sahf
pop
fldcw
int
not
scas
jne
cmp
stos
jno
scas
dec
decb
pop
roll
inc
sbb
out
sti
hlt
jne
jo
xchg
enter
fisttpl
imulb
xchg
mov
movsb
and
sahf
jp
fsubr
in
outsb
in
push
nop
mov
dec
dec
cmc
push
pusha
aam
add
xchg
fidivs
jle
mov
cmp
xor
mov
mov
lea
add
test
loop
mov
jmp
aas
push
pop
jns
bound
cmp
mov
arpl
into
in
out
into
cli
jo
jne
add
mov
mov
ror
jp
pop
pop
xor
lds
mov
jae
cwtl
add
stc
repnz
in
xor
mov
sbb
vpacksswb
test
push
loopne
xchg
mov
ds
arpl
cli
adc
adc
xorl
dec
and
inc
dec
jmp
scas
scas
mov
sub
icebp
mov
mov
movsb
pop
cli
dec
pop
mov
stc
dec
pop
pusha
mov
push
clc
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
loopne
sbb
jl
sbb
fnstenv
faddl
cmp
add
cld
inc
cmp
sahf
in
add
fs
out
lods
mov
icebp
out
arpl
xchg
jnp
dec
xor
pop
cwtl
icebp
ret
cmp
sahf
or
ret
push
or
pop
xchg
mov
xor
and
rorb
sub
in
xor
mov
or
xor
mov
fwait
xor
cmpsl
sbb
stos
outsb
fstp
imul
cwtl
jp
sahf
or
int3
push
int3
cmp
push
jnp
push
mov
fsubl
xor
or
data16
in
sub
call
mov
adc
add
mov
add
mov
cltd
mov
fildll
rcrb
cmp
cmp
sub
and
cmpsb
movsb
add
or
dec
test
add
or
mov
mov
arpl
xchg
jge
stc
xchg
fidivrl
cmp
mov
call
add
lds
adc
test
cmpsl
dec
lods
das
cmp
cmp
push
shrb
mov
dec
addl
int3
mov
mov
pop
into
push
aaa
popa
cltd
test
outsb
push
imul
jmp
je
out
jno
mov
bound
pop
cli
pop
imul
jns
fnstsw
fmuls
mov
dec
fs
jl
and
icebp
xor
pop
dec
lret
xchg
ja
loop
dec
xlat
push
shrb
dec
cmp
test
pushf
push
sbb
int
out
lods
inc
cs
inc
fdivs
mov
aaa
inc
pop
lret
cltd
shr
adc
jecxz
sbb
cmp
lcall
add
jo
or
cmp
add
add
mov
sarl
sbb
jnp
sbb
jl
jg
jl
xchg
jns
jl
mov
les
loop
mov
pusha
push
sbb
inc
aad
mov
pop
mov
sub
repnz
test
ficompl
lret
stos
xor
enter
mov
add
xchg
xor
mov
jb
or
lcall
adc
call
pop
repz
add
inc
fcomi
fnsave
push
sub
mov
in
mov
xchg
test
call
pop
fwait
xor
mov
jp
fidivrl
test
mov
xor
mov
sbb
lret
adc
dec
adc
sbb
sub
cs
push
mull
and
push
inc
cltd
sub
sub
and
mov
ror
cld
mov
ds
popf
add
lods
adc
cmp
rclb
inc
stos
mov
pop
cmpsb
aas
push
shl
jp
ljmp
push
push
sbb
sahf
aam
loop
pop
inc
xorb
xchg
dec
out
mov
cli
and
adc
lret
enter
bound
dec
jne
xor
scas
loope
insl
sahf
ss
adc
fs
cmp
mov
adc
push
fbstp
rcrl
pop
and
fcmovb
mov
scas
cltd
mov
stos
jae
sub
addr16
and
mov
loopne
insb
test
adc
cmc
pop
sarb
dec
fiadds
mov
shl
pop
ss
hlt
ds
jmp
xor
jmp
das
jae
pop
jne
inc
aam
push
jnp
or
mov
and
dec
sahf
cmp
xchg
xchg
dec
fcomps
mov
bound
test
xorb
jb
mov
in
xor
jge
jmp
addr16
or
arpl
aas
cwtl
pop
fisttps
in
push
jl
insl
jg
jl
jp
mov
mov
dec
push
inc
mov
xor
hlt
pop
or
jnp
mov
mov
fsub
fwait
movsl
pminsw
mov
bt
loope
lock
mov
aaa
sub
and
imul
cld
sub
sub
inc
and
jo
adc
push
and
push
sarb
add
pop
ficompl
push
movsl
dec
in
adc
mov
or
test
pop
mov
out
imul
mov
or
lcall
cmp
jns
sbb
xchg
je
insb
inc
nop
mov
xchg
lock
das
mov
xor
xchg
pop
mov
fwait
or
jg
pop
fdivl
add
or
push
push
stos
data16
jne
xor
mov
mov
push
cli
mov
in
or
xchg
fstl
dec
mov
xchg
aad
bound
jbe
dec
cmp
imul
mov
xorb
iret
dec
xor
sub
fsubr
push
sbb
push
sub
mov
pop
sbb
xchg
fdivs
or
arpl
mov
inc
adc
sbb
mov
movsl
shll
rolb
mov
sti
and
ficompl
lods
pop
sub
xor
mov
notb
out
sub
pushf
push
cmp
popf
scas
push
sbb
std
dec
in
jl
mov
push
dec
mov
push
enter
sbbl
repnz
sar
frndint
adc
loope
pop
testb
xor
in
mov
cmp
aam
popf
jae
push
addr16
lea
fisttpl
test
mov
int
sub
fiadds
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
sbb
sbb
jg
jl
mov
pop
pop
fs
scas
rolb
sub
adc
push
mov
mov
into
repz
fistps
cmp
lcall
push
cwtl
xchg
push
mov
inc
xchg
pop
lods
sahf
nop
andl
out
aad
sub
mov
xchg
orb
inc
fisubs
sub
add
xchg
lock
in
in
sub
xlat
mov
xchg
stos
mov
je
jbe
int3
mov
cs
iret
clc
sbb
ljmp
out
ja
mov
xor
xchg
pop
xchg
jecxz
test
cld
jns
loopne
adc
pop
out
enter
xchg
sarl
jecxz
outsl
or
es
pop
stos
pop
push
imul
pop
add
mov
inc
scas
out
xchg
xchg
imul
xbegin
repnz
imul
sti
cli
adc
mov
cmpsl
sbb
adc
movsl
mov
push
je
dec
stos
insb
cmpsl
notb
outsl
sarl
push
lock
fstpl
sub
jbe
inc
xchg
lods
jbe
int
dec
jg
leave
mov
out
and
pop
loopne
mov
pop
pop
dec
mov
or
stc
adc
pop
jns
into
jo
jne
out
into
movups
mov
sahf
aad
int3
cmp
inc
test
adc
adc
cmp
inc
dec
mov
pop
sub
push
jno
stc
add
ja
pop
or
ja
stc
xor
lock
loop
out
pop
inc
andl
sub
jns
sub
imul
push
sbbb
aam
add
xstore-rng
cmpsl
add
or
scas
push
adcl
inc
movsb
iret
ret
or
mov
dec
dec
mov
and
sbb
in
push
mov
add
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
enter
mov
clc
negl
fildl
iret
decb
or
adc
inc
inc
pop
inc
test
daa
psubsw
repz
js
pop
stos
fstl
sbb
push
mov
push
mov
xor
test
das
orb
mov
addl
or
sbb
jmp
fwait
call
adc
ficoml
fildl
or
or
in
add
js
xor
push
fimuls
rolb
xor
fcomps
aaa
or
sub
int3
pop
xchg
outsb
mov
cs
sub
xor
outsl
dec
pusha
xchg
mov
add
stos
loopne
mov
loope
imul
lea
test
lock
cmpsb
cmp
in
sahf
cmpl
lahf
or
jnp
inc
dec
jnp
jo
inc
sti
mov
and
shrb
inc
xlat
insb
and
or
sub
test
cltd
inc
aad
outsl
enter
sbb
dec
add
pop
push
dec
jbe
insl
push
sahf
cmp
pop
sub
push
cmpsb
cmp
push
cmovno
pop
outsb
das
cs
aam
push
in
dec
xor
and
or
xor
inc
mov
or
sub
mov
xchg
sbb
out
fidivl
mov
pop
fisttpll
mov
les
out
mov
pop
jae
cltd
fstpl
es
xchg
out
imul
popa
mov
cmpsl
or
rol
mov
lcall
sub
pop
loopne
or
xchg
pop
inc
in
leave
inc
scas
sbb
out
push
xor
push
out
lcall
icebp
in
mov
and
stc
cmpsb
pop
fbld
scas
cmc
ret
add
out
add
rcrb
sbb
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
push
mov
mov
stos
jg
jl
rcll
cmc
or
xor
icebp
mov
push
mov
inc
xor
enter
out
push
dec
jge
xor
int3
sbb
add
mov
dec
mov
loopne
pop
out
push
pop
fidivl
scas
pop
mov
pusha
sub
add
dec
js
std
add
xchg
cmp
inc
cmp
push
movb
sub
test
ds
cmpsl
adc
ds
outsb
sub
fistl
aaa
testb
daa
bound
ficomps
shll
xchg
cmp
cs
arpl
cmp
sub
mov
and
jg
or
mov
movsl
dec
or
or
inc
mov
adc
sub
sbb
push
and
shlb
imul
pusha
jb
pop
es
les
push
out
daa
outsb
into
push
mov
test
inc
xor
mov
xchg
add
scas
inc
leave
sub
dec
mov
push
mov
pop
cmp
int
adc
dec
push
bnd
jae
inc
inc
mov
movsb
adc
adc
mov
imull
mov
scas
sbb
adc
aad
addb
sarl
sbb
sub
jl
cmp
mov
and
mov
shrb
ds
in
push
jmp
aaa
and
es
arpl
cwtl
jecxz
sub
loopne
xchg
sbb
mov
inc
and
and
shrb
popa
push
je
mov
jae
push
orl
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
push
ss
out
jl
stos
jg
jl
jae
ja
jl
sub
imul
jecxz
mov
cmc
stc
ret
lods
jmp
mov
rcrb
dec
lahf
dec
mov
jecxz
and
ret
pushf
pop
ja
lds
ljmp
les
clc
pop
insl
das
mov
sti
push
es
lea
inc
xchg
lods
sahf
fs
jnp
sbb
inc
out
movsl
inc
sti
arpl
iret
ss
xchg
pop
ret
in
or
in
mov
sub
xchg
xor
decb
sub
xchg
mov
aaa
mov
roll
int
movsl
add
jmp
add
nop
adc
xchg
cmp
aam
inc
pop
xor
sti
push
into
cmpsb
cmp
pop
cmp
ret
pushf
fisttpll
sbbl
jnp
cwtl
adc
jnp
in
clc
imull
push
xor
sbb
scas
mov
fsubrl
fwait
add
push
jne
mov
jp
or
jle
stos
std
jmp
mov
fcmovnu
lret
xor
ljmp
sahf
push
dec
pop
xchg
and
lea
js
mov
shll
popa
dec
stos
inc
lahf
mov
data16
mov
pusha
pop
ja
push
sbb
mov
or
mov
imul
cmpsb
das
adc
or
push
lret
sahf
sbb
imul
outsb
and
jmp
stc
sti
pusha
sbb
lods
fistps
lods
pop
and
punpckhbw
shl
movsb
aas
xchg
das
imul
in
stos
aad
jge
outsl
add
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
mov
jmp
stos
jg
jl
stc
push
xor
adc
cmpsb
pop
xchg
test
in
icebp
push
or
mov
aad
mov
leave
icebp
insb
jle
outsl
mov
xor
lret
mov
cli
mov
inc
mov
pop
jne
xchg
stos
cmp
jmp
push
mov
or
call
inc
dec
push
loopne
ret
lds
cmp
xchg
adc
fistl
test
int
cmp
push
or
lcall
sbb
mov
xor
aam
rcr
lock
cwtl
xchg
sub
jbe
insb
daa
or
jmp
lea
das
das
or
into
rcrb
fwait
scas
mov
jno
aam
cli
ds
mov
adc
and
mov
jl
imul
mov
mov
mov
add
dec
ret
mov
push
divb
dec
and
cmp
lock
insb
pop
out
popf
cmpsb
cmp
xor
fnsave
ljmp
je
inc
add
cmc
dec
adc
fldenv
adc
out
movsl
mov
aaa
pop
or
add
sbb
loop
dec
in
adc
sbb
or
xor
sarl
js
add
push
xchg
stos
shlb
icebp
js
pop
push
pop
or
xor
adc
push
addr16
dec
addl
push
call
les
xlat
mov
mov
xor
jb
addr16
and
mov
jle
gs
sbbb
push
add
dec
xor
add
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
mov
dec
and
jg
jl
outsl
mov
call
fs
sub
cmp
movsb
lret
xor
cmp
push
pop
daa
loope
xor
enter
adc
aad
mov
mov
rcl
and
clc
shrb
loope
loopne
stos
xor
fstps
mov
ljmp
and
mov
fistl
mov
daa
inc
mov
mov
sub
imul
or
bound
mov
cltd
add
push
xchg
rolb
pop
cmp
roll
jo
jmp
or
dec
int3
das
mov
adc
jne
nop
and
xchg
mull
lret
addl
jecxz
filds
push
in
add
dec
sbb
or
incl
iret
aas
adc
ljmp
add
test
xor
and
xor
in
mov
fildl
adc
or
and
stos
jno
arpl
or
scas
popf
push
mov
test
stos
mov
sub
mov
push
inc
cmp
pushf
test
jne
xor
popa
div
push
jl
sbb
adc
movsl
adc
sbb
out
fwait
cwtl
jnp
fisubl
imul
dec
sub
push
out
cmp
jle
inc
out
mov
push
dec
daa
fwait
mov
cmc
mov
jnp
lret
ljmp
cmp
add
dec
mov
fnsave
push
mov
jb
xchg
out
stc
fs
mull
hlt
cmp
push
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
mov
test
jl
inc
bound
adc
pop
add
sbb
xor
dec
outsl
imul
mov
ret
aas
add
push
adc
and
sti
mov
into
inc
xchg
fistps
dec
popa
or
ret
dec
push
test
cltd
out
pop
mov
bound
insl
icebp
je
rorl
jno
pop
std
inc
int
int3
movsb
mov
mov
add
jge
pop
and
fistl
into
cwtl
mov
int3
push
int3
xlat
test
cs
adc
add
std
loop
xor
xchg
outsl
arpl
add
adc
movsl
push
push
test
dec
adc
insb
mov
sbb
movsb
push
or
sub
cmp
aam
inc
push
push
push
rcl
xchg
dec
jp
pop
xor
stos
js
imul
cmp
int3
mov
cmpsb
int3
out
scas
add
or
mov
in
arpl
or
into
xchg
sbb
imul
shl
inc
test
or
test
push
aad
and
jb
sub
adc
mov
xor
rorb
pop
push
repz
add
mov
inc
cmpsb
mov
js
mov
rorl
dec
mov
lret
mov
push
push
sbb
mov
mov
std
xor
dec
xorb
or
insl
mov
jge
xchg
out
sub
mov
jl
jmp
mov
sahf
or
jmp
in
push
add
and
mov
inc
adc
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
sbb
das
jl
stos
jg
jl
sub
push
notb
movsb
mov
sbb
ja
push
sahf
insb
shl
xchg
ret
cld
pop
mov
shll
pop
jnp
dec
andb
or
mov
ret
pminub
xchg
pushf
jno
cld
sar
pushfw
lret
negb
ss
sub
jb
outsb
cmpxchg
adc
dec
aaa
sbb
ds
cmp
mov
call
push
xor
pusha
mov
dec
imulb
and
adc
xlat
jbe
sbb
and
xor
xlat
jno
in
dec
movsb
cmpsl
je
push
imul
pop
pop
cltd
pop
clc
mov
stos
fstpl
mov
push
es
xor
push
sbb
lret
mov
and
int3
pop
pop
xor
pop
cmp
out
repnz
inc
outsb
xchg
movsb
mov
sbb
jmp
lock
push
cltd
pop
jle
push
orl
loopne
outsl
cmp
or
cwtl
out
or
inc
out
stc
test
and
inc
jmp
icebp
jge
inc
push
xchg
push
push
jmp
aas
mov
jne
stos
jle
push
std
int
pushf
inc
pmulhuw
test
fidivl
shlb
into
js
loope
xchg
jne
push
jle
and
movl
fsubrl
lds
into
orl
pop
sbb
sub
cmp
call
inc
pop
rorl
jo
push
jb
leave
or
lret
mov
mov
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
nop
pop
mov
cli
inc
lret
adc
xor
addr16
repnz
fnstenv
flds
ret
fisubs
cwtl
mov
cmp
xchg
xor
lret
movsl
adc
pop
bound
jmp
sbb
stos
daa
sub
test
mov
sub
inc
ret
mov
int
mov
xor
jo
inc
int
test
sub
sub
pushf
ja
mov
mov
mov
outsb
lock
sbbl
cmp
scas
push
icebp
in
dec
jl
pop
fidivrs
cmpsl
or
test
call
out
das
mov
jmp
fcompl
pusha
hlt
sbb
repnz
pop
push
int3
data16
sahf
gs
iret
mov
lods
loop
fdivp
cltd
insb
mov
push
shll
nop
imul
inc
inc
ds
loopne
ljmp
mov
stos
roll
mov
adc
aad
test
rcll
shlb
outsb
sub
notl
outsb
popf
xor
jl
loopne
subl
xchg
push
out
sbb
es
adc
fs
test
test
jnp
jo
movsb
adc
push
add
xor
pop
mov
add
inc
movsb
push
sti
test
sub
pop
xor
jo
add
xor
test
movsl
fwait
sub
sbb
pop
scas
dec
insl
fstpl
and
push
clc
add
movsl
mov
in
js
or
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
scas
ja
adc
jg
jl
out
out
pop
fidivrs
clc
mov
mov
arpl
jle
xchg
pop
jl
sbb
ret
sbb
int
jecxz
enter
inc
cmp
dec
in
xchg
mov
adc
in
aaa
xlat
xchg
xchg
into
scas
pop
mov
bound
sub
lret
and
dec
mov
push
sbb
push
fisttps
test
mov
sub
sti
ds
in
rolb
insb
mov
pop
int
movsl
aam
push
lods
adc
jns
xor
mov
or
dec
mov
sub
jg
shll
xor
into
lods
mov
mov
add
jp
movsl
sub
into
jecxz
lahf
mov
hlt
test
add
std
inc
fisttpll
scas
lret
xorl
xor
dec
cmp
xor
lret
push
xchg
popf
mov
fwait
add
js
cs
and
lods
mov
dec
xor
dec
addr16
ja
sbb
ror
rcll
cmp
dec
jae
cmp
cmpsl
adc
cwtl
cmp
xchg
arpl
sbb
lahf
lcall
test
cmp
jne
scas
mov
lds
jne
jg
add
int
jecxz
lahf
pop
and
push
lods
cmpsb
loop
jl
xchg
leave
cwtl
push
push
mov
sbb
nop
xchg
adc
lahf
dec
test
rcrb
imul
push
shll
ret
shrb
ret
cld
das
fisttps
mov
xor
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
iret
loope
mov
mov
jl
push
outsb
xchg
call
outsl
cmp
add
icebp
insl
mov
jnp
insl
inc
mov
inc
and
push
ret
cs
test
or
scas
loop
adc
mov
sbb
sub
jmp
mov
int
xor
jmp
enter
dec
lret
xor
sub
ds
pop
push
adc
fsubl
adc
inc
jp
shll
dec
sbb
xor
and
arpl
int3
jb
iret
inc
jmp
aas
or
shll
leave
les
inc
out
mov
hlt
loope
dec
push
fmuls
push
inc
or
mov
push
lret
adc
add
sub
adc
push
mov
shll
rcrl
xor
jecxz
imul
cwtl
mov
cmp
dec
loop
fwait
dec
pop
outsl
loope
js
in
leave
scas
jo
adc
into
das
push
dec
movq
mov
cmpl
out
xchg
stos
cs
sbb
aam
rclb
sbb
in
xchg
pop
dec
push
jl
mov
jg
aad
fiadds
xlat
inc
ror
sbb
inc
leave
out
xlat
insl
dec
mov
stos
mov
test
popf
jb
es
jo
xchg
repz
pop
adc
das
mov
sarb
xor
mov
cmp
jmp
xor
pop
neg
push
rcr
in
jecxz
or
xor
cmc
in
bswap
aam
in
push
fimull
sub
stos
sbb
mov
lods
cwtl
mov
mov
fstl
add
ja
sub
add
addb
int
cmp
movsw
int
out
xchg
sarb
movsl
sub
sbb
pop
cli
aad
lods
dec
test
jns
inc
out
loopne
adc
mov
adc
scas
mov
adc
mov
shrb
in
dec
aaa
lret
sbb
jmp
and
push
push
xor
out
lahf
sbb
loop
jg
loop
gs
insb
scas
ret
sti
jno
and
add
ret
scas
sarb
push
push
mov
xor
repnz
pop
xchg
jne
dec
adc
xchg
adc
loop
inc
mov
mov
add
inc
inc
gs
push
mov
jmp
inc
push
rcrl
sub
cmpsl
test
adc
mov
cmp
cmp
xchg
push
test
clc
jecxz
push
shll
mov
or
addr16
push
pop
cltd
jnp
jnp
cmp
out
xchg
inc
leave
cmp
dec
ret
xor
sub
xor
sarb
push
jl
jl
sbb
xor
scas
out
jnp
pop
mov
fiaddl
cmp
inc
pop
mov
jle
add
add
jb
sub
ljmp
test
dec
push
inc
loope
inc
xor
and
sub
loopne
push
cmpsl
std
ret
or
lret
pushf
or
insb
std
mov
sub
loope
mov
inc
gs
dec
inc
pop
inc
mov
xchg
fcmovb
shl
add
mov
test
xlat
push
cmp
daa
test
sub
addb
adc
sahf
rclb
mov
ret
movsb
std
push
aaa
repnz
push
sbb
pop
mov
add
pop
ds
ret
adcl
add
scas
cmp
mov
mov
test
out
push
fs
push
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
sbb
jl
mov
jl
ja
mov
push
mov
pushf
pop
xchg
add
xchg
scas
out
lcall
dec
jb
popa
jge
dec
mov
dec
ror
hlt
adc
ficoms
into
lahf
push
cltd
int
fxch
fsubp
sub
addl
les
lret
lahf
push
fnstcw
mov
push
cmp
decb
shlb
cli
jne
lret
push
and
add
jmp
lds
imul
ss
sarl
cld
sbb
xor
xchg
push
inc
sbb
aaa
mov
sbb
testl
sar
add
das
sbb
pop
std
jmp
push
stc
lock
xor
adc
call
loope
movsb
adc
sub
mov
jo
pusha
xor
aaa
push
push
int3
cld
and
add
pop
out
cmp
pop
sbb
pop
subb
and
inc
negl
cmp
sbbl
bound
push
fadds
repnz
push
pop
loop
outsb
sahf
add
or
bound
pushf
gs
out
imulb
iret
pop
cmpb
not
push
mov
adc
mov
popf
mov
popa
fldln2
scas
add
jp,pn
xor
sbb
push
pushl
xlat
pop
lods
jbe
xchg
or
inc
sbb
cmp
or
push
xorb
pop
jecxz
enter
adc
fsubs
mov
call
aaa
mov
mov
lret
sub
stos
imull
fcomps
mov
and
push
setge
shrl
xchg
test
sbb
ljmp
xlat
fisubl
pop
sub
dec
sub
popf
out
mov
test
in
lret
pop
ljmp
sub
xchg
movl
adc
lahf
xchg
mov
sub
iret
push
shlb
les
into
ficomps
test
outsl
test
sub
mov
loop
pop
push
mov
stos
mov
xor
shrb
lahf
lods
cld
cmpsl
xor
mov
adcb
out
adc
out
inc
repz
mov
push
in
or
imul
mov
loopne
icebp
pop
fnsave
scas
aas
fnsave
cli
pop
xlat
shrb
jmp
lods
mov
add
outsl
clc
cld
test
xchg
mov
stos
sub
test
out
out
arpl
dec
jno
fidivl
mov
adcl
mov
idivb
jnp
sahf
xor
sarb
mov
and
nop
ss
aaa
cs
shl
ljmp
cmpsb
mov
dec
xor
push
aad
fwait
idivl
xchg
ret
mov
scas
sub
shrb
mov
adc
sbbb
push
gs
aam
stos
sbb
gs
push
dec
jb
hlt
movsl
shrb
repnz
das
test
cld
lods
gs
fcoms
add
lods
cmp
mov
cmp
subb
movsl
jmp
rclb
dec
cmp
jb
jg
pop
repnz
pushf
incl
add
xor
mov
or
sarb
les
icebp
fwait
sbb
outsb
mov
dec
cmc
test
mov
sub
les
push
loope
or
jns
inc
and
push
adc
push
jp
ret
inc
inc
xchg
mov
pusha
outsb
lret
popa
cmc
jb
pop
mov
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
sub
adc
cmpb
mov
loopne
sbb
mov
in
scas
outsb
xchg
inc
dec
mov
stos
stos
cwtl
bound
sub
inc
dec
lcall
mov
stos
dec
dec
clc
cli
sub
cmp
aas
cmp
pop
sbb
addb
mov
shrb
mov
jge
repnz
cltd
daa
push
push
xlat
js
push
xor
hlt
lret
addr16
test
push
mov
pop
es
adc
push
or
adc
lods
iret
addb
repz
mov
mov
cld
daa
jo
inc
push
fstl
jp
test
xor
aad
cmp
push
and
inc
fcoml
push
pop
mov
iret
gs
xlat
mov
inc
ret
xlat
repnz
jg
mov
ret
and
in
push
test
mov
pop
pop
push
jle
loope
pop
stos
jl
fcoms
xor
xchg
mov
mov
sbb
adc
test
sete
stos
nop
loop
mov
movsb
lock
mov
sub
repnz
pop
stc
and
ljmp
shr
mov
adc
insl
gs
lret
ljmp
pop
adc
ficomps
idivl
mov
mov
mov
push
push
pop
in
test
fwait
inc
sub
push
or
dec
int3
es
pop
push
imul
sahf
rcr
pop
in
inc
rcll
mov
es
sbb
das
xchg
stc
bound
mov
movsl
adc
int3
xchg
mov
popa
dec
popa
sbb
scas
shll
mov
pop
inc
pop
mov
out
les
into
js
insl
adc
xor
les
repz
stc
pop
nop
sbb
subl
adc
test
cmp
mov
mov
shrl
add
insb
fucomp
ss
popa
test
dec
insl
adc
and
push
pop
or
sbb
xchg
adc
and
dec
add
hlt
jae
mov
out
push
cld
into
xor
dec
incb
xor
mov
int
rorl
and
aad
orb
inc
pop
nop
pop
and
jmp
neg
dec
mov
out
enter
push
pushl
aad
adc
ljmp
stos
adc
mov
or
aaa
cmpsl
movsl
xchg
pop
enter
decl
hlt
cmp
pop
test
mov
xchg
push
fs
xchg
stos
mov
sbb
enter
jmp
pmovmskb
in
pusha
push
mov
in
ret
push
stc
mov
and
iret
or
orb
pop
jo
fistl
and
mov
mov
in
dec
push
xchg
jge
push
lcall
sbb
inc
cmp
sbb
js
mov
sbb
push
js
cmp
mov
mov
mov
insl
or
cmc
lcall
arpl
pop
lds
fsubrs
aad
adc
inc
cs
outsl
pop
fbld
xor
xchg
mov
mov
push
lock
mov
push
push
mov
sub
clc
mov
pop
aas
scas
ret
lret
push
xor
decb
push
mov
arpl
push
pop
mov
pop
jg
jns
pop
lods
or
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
pop
jns
jecxz
int3
and
cltd
push
std
mov
fs
enter
roll
pop
mov
addr16
xor
imul
inc
test
sbb
mov
cmp
mov
cmp
shll
or
jp
mov
add
mov
jmp
or
inc
daa
or
pop
mulb
out
xor
cs
dec
dec
ja
add
sti
xor
add
push
push
jne
pusha
xchg
addb
lret
sbb
loop
push
rcl
out
push
movzbl
dec
mov
jb
sub
sbb
adc
sbb
outsb
jge
push
loopne
mov
test
and
push
mov
fcmove
mov
mov
cmp
pop
test
test
test
jecxz
mov
je
lea
and
je
fmull
jne
adc
mov
pushf
pop
dec
sbb
cld
incb
addr16
pop
mov
scas
rdtsc
xor
lods
inc
jnp
mov
push
mov
out
rorb
pop
mov
jmp
inc
mov
jp
mov
lret
xor
sbb
xor
lea
subl
repz
xchg
test
leave
roll
xchg
inc
sarl
xor
test
lock
push
lods
cmp
les
cld
xor
ljmp
popf
inc
icebp
jno
push
jmp
cmp
fcomp
orb
pop
sub
aas
dec
mov
cmp
fcmovne
pop
mov
popa
loope
inc
subl
add
in
mov
sub
mov
icebp
repnz
ficoms
mov
lods
and
push
ret
pop
fwait
js
mov
je
loopne
sub
lods
ja
cmp
cmpsb
rdpmc
cmpsl
sub
sub
xchg
and
push
adc
add
mov
fwait
pop
inc
xchg
hlt
cmc
mov
loopne
mov
lds
loop
sbb
jno
out
xchg
pop
adc
fcmovbe
adc
sub
std
sbb
pop
pop
fiadds
mov
imul
sub
stc
mov
shll
stos
xchg
mov
jp
xchg
scas
and
cs
pop
or
pushl
xor
lret
into
mov
sbb
in
jns
ret
jmp
mov
fsub
ss
cld
and
lahf
mov
shl
and
je
adc
cmc
lahf
outsb
push
int3
cld
push
jge
ss
and
loopne
cld
or
pushl
pop
ja
mov
lds
aam
fstl
out
inc
aaa
filds
lods
imul
push
scas
test
lret
js
leave
iret
das
sub
popa
negb
mov
push
ret
loope
sub
push
or
and
jle
das
mov
out
aas
and
and
sub
sub
movsb
cwtl
jl
mov
fmull
xchg
push
lock
inc
fistl
mov
mov
data16
xchg
shlb
jo
fisttps
fldt
adc
repnz
jae
stc
sbb
pop
scas
jl
lret
fnsave
rcrl
loopne
iret
das
fildll
leave
inc
outsb
shld
jg
pop
out
nop
sbb
stc
add
lret
pop
ja
push
cs
mov
sbb
cmp
xor
dec
mov
mov
pop
fisttpll
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
inc
inc
test
xor
jl
xor
jl
andb
pop
adc
enter
arpl
call
movsl
cmp
sbb
loop
mov
inc
dec
sbb
pusha
mov
add
sbb
movsb
outsl
nop
insb
mov
fistps
mov
cli
in
fbstp
adc
and
cmc
fbld
hlt
jb
add
sub
jl
push
das
rcrb
xor
loopne
mov
in
fimuls
xor
pop
adc
pop
fidivs
fnstenv
sbb
rorl
ds
jge
fs
sbb
xchg
dec
dec
inc
push
in
cwtl
fwait
fimull
lret
mov
and
mov
inc
sbb
cmp
xor
jecxz
add
popf
sti
add
lds
push
je
aas
addr16
lock
adc
xor
cmpsl
in
xor
aam
sbb
ss
jecxz
and
mov
hlt
clc
mov
cwtl
fcompl
mov
fs
xor
cmpsl
jo
xchg
je
sti
mov
in
lea
mov
pop
aad
mov
lods
and
cmp
dec
es
jge
add
sub
icebp
sbb
xlat
enter
jmp
mov
add
mov
pushf
lret
inc
leave
sahf
std
out
ror
jne
std
incb
shr
mov
aas
sbb
push
jo
push
ret
sub
jbe
jg
mov
mov
dec
and
stc
cltd
pushf
sbb
int
pop
jmp
push
add
xorl
out
sbb
sbb
mov
adc
fisttpll
jle
mov
mov
mov
and
cmp
sti
sub
xorb
pushf
jns
loop
xchg
mov
in
movsb
icebp
ljmp
sbb
daa
inc
push
jo
adc
adc
in
xor
xor
push
orb
jle
adc
sub
and
stos
inc
mov
add
sbbl
xchg
mov
mov
push
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
je
fucomip
lds
jle
jl
enter
cltd
pop
cmp
sub
adc
clc
das
mov
push
negb
outsl
jns,pn
sbb
popf
movsb
jg
loop
mov
cmp
xor
mov
mul
mov
leave
push
lock
jo
jle
mov
call
sbb
pop
cmp
xchg
pop
sub
mov
insb
jg
pop
adc
fiadds
test
popf
cmc
xchg
and
add
mov
in
pusha
mov
push
aad
sub
js
push
push
mov
arpl
jb
das
pop
fmull
pusha
jae
aad
inc
mov
lcall
sbb
mov
mov
inc
sahf
xchg
enter
pop
mov
jg
test
test
sarb
lea
out
fst
test
cmpsb
xchg
aam
add
ret
xlat
mov
sbb
pop
push
inc
jecxz
clc
adc
in
popf
cwtl
sbb
popa
mov
repnz
xchg
or
jge
push
push
sbb
push
sbb
test
inc
mov
sbb
add
adc
ja
adc
repnz
fsts
adc
sbb
idiv
or
add
and
jno
lret
test
mov
shl
cmpsb
addr16
adc
add
orl
add
in
pop
or
int
or
rep
das
or
jbe
lods
outsl
jle
in
stos
add
inc
inc
gs
xchg
add
ret
and
ds
jbe
loop
adc
cli
xor
clc
insb
mov
push
mov
and
pop
mov
in
add
jae
inc
stos
outsb
xchg
andb
inc
inc
mov
cmp
dec
pop
stc
sti
in
in
aad
xor
push
jle
int
enter
xor
cmp
inc
xor
popf
insb
adc
ss
dec
pushf
repz
inc
mov
jns
out
mov
jmp
or
mov
jo
xchg
jmp
push
test
cmp
jl
mov
negb
nop
mov
jno
outsl
jb
jno
mov
push
rclb
and
out
bnd
hlt
fs
sub
mov
popa
gs
int3
rcrb
pushf
jne
mov
jge
dec
ret
adc
jno
adc
cld
aad
push
scas
outsl
stos
jns
adc
lcall
insl
xor
and
pop
mov
insb
int
mov
lods
ret
jnp
gs
sbb
aas
inc
xor
mul
xchg
les
loop
scas
in
mov
xchg
xor
xlat
push
jmp
ficompl
or
xchg
dec
icebp
test
outsb
nop
icebp
invd
out
int3
jge
lret
push
add
andb
xor
mov
lcall
dec
mov
sbb
push
jecxz
sbb
push
mov
add
add
imul
test
popa
add
lock
push
xchg
shlb
sbb
mov
mov
cs
in
aaa
pop
jl
pusha
add
nop
clc
sbb
mov
sub
adc
push
fnsetpm(287
ljmp
aaa
dec
xor
aad
xor
push
mov
xchg
inc
xorb
and
xor
mov
pop
enter
movsb
or
hlt
dec
pop
pop
inc
ljmp
aas
cmp
xor
dec
sub
or
jle
push
faddl
add
xchg
cmp
in
or
dec
inc
dec
fisttpl
mov
and
xchg
shlb
cmp
xor
xchg
fldt
data16
mov
ds
inc
xor
divb
push
movsl
lods
sbb
sbb
ss
cmp
jb
repnz
mov
or
pop
mov
inc
jl
shrl
or
cmpsl
repnz
dec
pushf
lret
sarl
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
arpl
sarl
jl
or
adc
and
fldl
xor
xor
mov
cmpps
inc
mov
and
out
xchg
rcrl
lods
cmpsl
inc
and
jecxz
pushf
pop
cmp
dec
mov
js
xchg
mov
in
int3
inc
mov
sub
frstor
adc
scas
cltd
inc
fidivrl
xor
js
dec
xor
jnp
jg
pop
jmp
mov
inc
neg
imul
add
mov
pop
cmp
adc
xchg
pop
cmp
add
lods
hlt
outsb
fnstsw
cmp
fsubrl
les
xchg
jbe
push
and
and
shrb
out
subb
cli
aad
stos
sarb
cmp
fidivl
inc
push
push
movsb
xchg
sbbl
stos
xchg
sub
dec
add
or
pop
xchg
andb
pop
insl
jbe
mov
mov
inc
out
imul
inc
rclb
fcompl
jecxz
bound
and
mov
lret
push
into
iret
and
pop
outsl
and
call
aas
shlb
jbe
xor
decl
movsb
push
xchg
cmp
daa
mov
push
or
xchg
pop
inc
adc
dec
cltd
jne
movsl
or
xor
frstor
xchg
mov
xor
out
addr16
data16
pop
adc
xorl
add
testl
xchg
sbb
in
mov
rcrl
lcall
and
xor
shrb
lods
xor
stos
in
and
bound
js
jge
cwtl
adc
dec
enter
fsubl
cltd
sarl
pop
fwait
sahf
inc
jbe
mov
pop
bound
jno
data16
fsubp
adc
sbb
rcrl
pop
or
cmp
dec
xchg
push
decl
sub
pop
adc
mov
in
stos
xor
jno
cld
cwtl
push
pop
adc
mov
test
mov
sub
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
outsb
and
jl
xlat
jns
jl
or
movsb
sbb
jne
jb
inc
ss
ss
add
lea
sub
cmp
dec
sub
inc
lea
mov
arpl
std
dec
xor
sbb
mov
xor
in
jne
adc
sub
and
enter
dec
cltd
xchg
sar
test
xchg
jecxz
or
cmp
gs
and
into
test
xor
jecxz
mov
mov
jle
dec
or
pushf
ret
and
dec
push
lods
pop
mov
fnstcw
push
sub
lret
pop
add
and
cmp
adc
mov
ret
je
xchg
pop
out
testl
repnz
hlt
jge
jb
inc
mov
inc
mov
es
loop
xchg
xchg
mov
push
sahf
dec
jle
movsb
pop
dec
push
outsl
or
imull
xchg
jg
add
push
mov
push
lahf
movsb
rolw
mov
jecxz,pt
jmp
push
ret
in
mov
repnz
aaa
push
adc
jns
ret
es
add
adcl
jno
pop
mov
xchg
push
cmp
add
add
inc
inc
mov
ja
jns
xor
or
mov
pop
scas
and
iret
test
scas
dec
outsl
xchg
mov
push
ret
es
fistl
xchg
push
mov
inc
jb
cmpsl
lock
lds
pop
cli
push
movsb
pop
lds
dec
popa
xchg
nop
adc
mov
inc
insb
lcall
fstps
jb
lds
popf
jg
jae
push
cmc
pop
xor
cmc
jge
adc
inc
pop
jo
cli
mov
cmpsl
ret
cmp
push
pop
outsb
pop
inc
sbb
mov
pop
cld
and
sbb
popa
push
or
out
gs
ret
mov
pop
mov
test
sub
adc
inc
push
in
int3
lock
test
pop
mov
scas
call
movsb
sti
imul
std
push
jl
inc
xor
lock
ret
test
xor
shrb
dec
test
rcr
jns
bound
sub
add
mov
push
xchg
jle
movsl
mov
cmp
push
mov
sub
or
inc
mov
push
test
or
das
pop
pop
movsl
mov
aas
pusha
jmp
adc
aad
jge
dec
imul
fwait
bnd
or
jns
cmp
lret
rolb
mov
fcompl
adc
cmpl
clc
mov
push
mov
push
cld
aaa
repz
xchg
enter
mov
out
add
push
in
and
or
int3
add
out
cmpsb
roll
add
xor
out
into
cmpsb
mov
push
fistpll
cwtl
push
push
cmpsb
push
dec
in
xchg
movsb
pop
sbb
fs
adc
jae
push
sbb
imull
repnz
repnz
xor
iret
pop
mov
xchg
jp
add
lds
cmp
and
dec
daa
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
incl
iret
jl
xlat
jns
jl
push
ds
adcb
jmp
lret
fsubl
push
adc
inc
mov
nop
xor
inc
mov
mov
fisttpll
addb
xchg
fwait
in
stc
sbb
jp
insb
jnp
lret
pop
jbe
mov
iret
xchg
sbb
xor
subl
add
and
cmp
addb
add
in
sbb
insl
or
push
and
sbb
inc
iret
shl
dec
imul
or
pop
jb
arpl
pop
sahf
add
mov
dec
mov
and
mov
cmp
jno
stos
add
mov
sub
sbb
xlat
pop
mov
insb
adc
fildll
push
andl
xlat
aaa
addr16
out
int3
lret
clc
aaa
and
cld
out
xor
pop
inc
add
movsb
fdivrl
mov
sub
stc
pop
pop
inc
frstor
sbb
adc
lcall
jnp
pusha
mov
pop
xor
fnstsw
inc
insb
jecxz
jbe
xorl
mov
pop
shlb
cli
push
adc
addr16
pop
mov
fidivl
aad
movsb
cmp
daa
add
dec
ret
xor
pushl
dec
mov
in
loop
lret
rcrb
stos
enter
enter
cmp
into
hlt
pop
adc
nop
ficoms
cmp
mov
sub
adc
leave
int3
and
imul
push
cmpsb
xchg
sub
jecxz
or
push
jg
popf
mov
inc
orl
cmp
shll
ret
xchg
subl
cmp
lcall
lock
test
sub
imul
mov
cld
pop
mov
mov
push
call
pop
enter
stos
mov
sbb
test
pop
ds
mov
add
jecxz
cmpsl
stos
out
mov
shr
xchg
sar
cmp
pop
loop
fcomi
out
lret
sti
jo
mov
sbb
push
je
stos
stc
inc
scas
sub
scas
add
add
ret
adc
sbb
int3
push
mov
mov
das
sbb
xlat
sbb
testb
inc
pop
je
sti
or
push
jne
xchg
arpl
xchg
pop
fs
not
subl
mov
aad
addl
in
in
enter
movsl
pop
cmpsl
shll
xchg
aad
adc
push
pop
pop
sbb
push
push
sub
enter
lock
mov
icebp
mov
or
add
or
inc
in
jne
mov
xor
leave
mov
cmp
mov
and
sub
jl
jge
sarl
sub
repnz
pop
lea
in
out
cmp
fstp
dec
pop
and
dec
insb
sbb
xchg
inc
inc
cmpsb
rorb
testl
jo
mov
adc
sahf
lock
xor
ds
shlb
xchg
shrl
cmc
into
bound
rcl
jmp
arpl
test
push
js
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
xchg
shl
mov
jl
xlat
jns
jl
jb
jns
stos
nop
inc
into
movsb
lret
mov
in
std
test
stc
mov
loop
hlt
xor
ret
xorb
les
inc
and
xchg
add
insl
cmc
loope
testl
aam
lea
adc
outsb
notb
mov
adc
add
mov
mov
dec
mov
mov
or
jo
inc
sub
sub
push
popa
aas
mov
jnp
orb
push
xorl
xchg
jne
imul
in
lock
xchg
inc
mov
mov
or
mov
pop
jbe
adc
imul
in
push
adc
cmp
test
mov
add
gs
cmp
test
leave
scas
and
ja
pop
out
jg
add
subl
aas
mov
mov
mov
sbb
mov
inc
jae
sub
lds
or
mov
stos
insl
jmp
inc
push
cmp
sub
dec
fdivr
mov
xchg
mov
dec
sub
repz
cmc
lret
jl
mov
push
add
cmp
movsl
mov
scas
push
mov
add
xchg
jl
cmp
push
das
test
inc
mov
sbb
xchg
pop
push
or
dec
sub
aaa
into
dec
jp
rcr
xor
test
adc
mov
notl
lods
mov
fbld
aaa
in
inc
pop
fisubs
xor
fidivrs
mov
or
jecxz
and
jge
popa
dec
sbb
sbb
aad
sbb
mov
jge
hlt
sub
pop
mov
push
adc
repnz
add
sbb
sbb
sub
mov
cmp
std
xlat
or
ljmp
aam
shlb
and
xor
pop
sbb
pop
jo
adc
fisttpll
leave
cmp
je
flds
push
test
mov
jmp
or
mov
jecxz
push
add
idiv
push
push
ss
or
xchg
repnz
sub
into
enter
loopne
stc
xor
cwtl
xor
fcoms
sub
ja
pop
lea
pop
cltd
rol
imul
mov
ljmp
mov
jl
hlt
fcoml
add
mov
and
bound
jge
fwait
dec
dec
xor
jl
pop
mov
rorl
lcall
popw
fwait
cmp
sub
and
call
sub
fs
jb
gs
sarl
inc
insl
cmp
push
loop
xor
add
frstor
xor
xchg
xchg
inc
ss
jae
mov
jge
sbb
imul
pop
nop
test
push
sbb
mov
imul
lea
jnp
je
das
jle
sub
cmpsb
scas
push
gs
mov
pop
stos
sbb
mov
add
mov
insb
and
jmp
add
call
sub
and
movsl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
aam
jl
jns
jl
pusha
add
adcb
test
cmp
jp
dec
out
lcall
test
popf
push
lea
cmpsl
mov
daa
mov
mov
hlt
pop
add
and
repz
pop
or
test
and
inc
jge
and
inc
in
fcompl
and
sahf
push
mov
or
rcl
lds
popa
imul
cs
mov
pop
pop
inc
mov
dec
jbe
shl
clc
add
icebp
pop
popa
jl
sbb
adc
adc
addr16
or
or
fisttps
pushf
bound
add
je
arpl
xchg
cmp
cld
stos
lret
mov
jnp
dec
jb
jl
sti
xor
pop
rcrb
push
test
push
fcoml
adc
pop
and
ret
mov
sbb
mov
fs
inc
outsl
lret
pop
push
mov
inc
add
jbe
push
inc
shrb
push
xchg
mov
pop
cwtl
repz
sub
dec
xor
sbb
popf
adc
sub
push
sbb
popf
jmp
mov
cmp
jns
test
pop
add
cmp
cmp
inc
inc
xchg
in
lahf
sbb
mov
push
inc
fisttpll
popf
loope
inc
push
scas
push
xchg
dec
xchg
fistps
inc
aaa
je
cmc
mov
enter
jbe
enter
shlb
aaa
mov
and
and
pop
adc
mov
ljmp
test
pop
shl
ljmp
push
in
loope
lret
push
jmp
adc
inc
inc
das
popa
test
daa
shlb
pop
data16
arpl
dec
popa
jbe
xor
mov
test
cmp
adc
daa
js
adc
ja
addr16
inc
inc
xchg
push
xor
or
les
adc
and
push
leave
dec
push
pop
pop
ret
mov
stc
mov
test
cmp
cmc
sbb
pop
mov
jmp
int
push
dec
stc
mov
shll
mov
pushf
xchg
sarl
pop
test
or
les
in
lret
in
inc
jns
mov
cltd
xchg
fwait
push
imul
movsl
mov
add
push
push
pop
dec
xchg
movsl
mov
mov
jbe
aam
add
in
mov
and
jbe
pop
sub
dec
shl
pop
xor
push
lret
adcb
rcrb
iret
push
aad
mov
jb
xor
sbb
adc
jns
outsl
int3
add
mov
repnz
jl
add
push
push
push
das
aaa
push
lods
sub
mov
scas
test
es
fadds
push
sarl
fisttpll
xchg
sbb
fidivs
and
call
adc
les
push
push
or
int3
je
and
pushf
mov
sub
pusha
adc
rolb
mov
shr
test
mov
cmp
jmp
cwtl
mov
mov
or
fcmovnbe
adc
jl
jns
jl
xor
das
scas
sub
sarl
iret
bound
and
fldcw
aam
inc
andb
cmp
cltd
push
test
or
jo
mov
ja
jb
js
es
sbb
cs
mov
popa
int3
int3
jns
jne
and
out
sbb
sub
enter
and
fimull
mov
mov
jbe
faddp
adc
aas
dec
sub
inc
nop
or
cld
js
leave
or
inc
push
mov
sbb
lahf
shlb
shlb
xor
mov
out
add
int
add
jnp
xor
movsl
pop
lock
subb
ljmp
jecxz
scas
fdivr
in
cmp
push
pushf
push
mov
lea
pushf
jnp
cmpsb
test
cmpsb
sbb
sub
bound
mov
fldt
iret
lret
lock
fcompl
je
xchg
gs
ljmp
xchg
pop
popa
out
test
dec
in
sbb
repnz
dec
add
lahf
adcb
mov
cmp
loopne
call
insb
mov
fmuls
scas
scas
jl
stos
push
mov
adc
sbbl
mov
es
push
dec
mov
or
xchg
xorl
sbb
cmp
sbb
push
roll
push
push
mov
mov
cwtl
sbb
sbb
lock
aaa
jns
inc
push
sub
cmpsl
xor
dec
out
sub
mov
fs
imul
aas
mov
movsb
fndisi(8087
sbb
xchg
pop
lret
jns
and
clc
fstpt
pop
inc
lods
sar
jno
inc
ret
sbb
es
dec
addr16
add
sbb
mov
call
cli
jg
jns
push
les
mov
pop
add
cmp
aad
mov
in
lds
out
xor
cld
iret
shll
sbb
mov
pop
loope
mov
add
mov
sbb
xchg
add
pop
ret
aaa
stos
repnz
bound
and
int3
cmp
and
fnstenv
xor
or
adc
cmp
or
icebp
pop
gs
hlt
and
pop
mov
pop
mov
in
mov
inc
es
xchg
xor
dec
jl
pop
insb
jle
roll
push
jecxz
jbe
jmp
fwait
pop
adc
mov
mov
out
sub
mov
dec
movl
add
dec
or
cmp
int
cld
lea
dec
xchg
popf
push
jns
add
test
sbb
cmpsl
jle
inc
rcrl
inc
jecxz
test
jmp
addr16
mov
xchg
les
jnp
mov
sbb
cmpsb
cwtl
and
inc
xor
rclb
push
mov
or
xor
or
data16
mov
sub
and
cmp
mov
mov
fcompl
xlat
in
mov
loopne
in
cmp
pusha
mov
jns
iret
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
sarb
jns
jl
and
xlat
insb
nop
mov
cmp
loop
insb
cmpsb
inc
adc
loop
ljmp
movsb
cli
mov
xchg
mov
add
cs
jl
or
jp
jb
inc
push
mov
xchg
mov
cmp
jnp
cmpsb
sub
in
arpl
jns
inc
sbb
leave
cmp
cmc
je
sbbb
jl
push
inc
mov
sti
sbb
out
dec
lods
data16
mov
rcrl
aas
pushf
cmp
shlb
xor
cli
mov
xor
dec
incl
dec
sub
int3
pop
or
aaa
aam
add
mov
adcl
xor
jl
cwtl
mov
cmp
dec
popa
bound
cmpsl
or
stos
jnp
mov
mov
movsl
xor
lods
adc
jle
cmpsb
jl
pusha
icebp
cmp
mov
sub
mov
scas
pop
outsl
adc
mov
or
mulb
mov
sbbl
mov
push
add
das
mov
xchg
fs
in
and
cltd
mov
and
in
movsb
test
adc
out
mov
out
and
int3
jg
inc
mov
sbb
adc
fisubs
lods
xor
mov
mov
mov
movsb
popf
scas
mov
aas
das
cmp
je
subl
movb
sbb
pusha
ret
push
xorl
cmp
jb
fwait
mov
cmp
repz
jne
std
mov
negb
cmp
push
fcoms
sub
dec
sahf
pop
test
adc
mov
or
adc
or
mov
lods
fcoms
aad
call
xor
pushf
inc
mov
cmp
icebp
mov
js
push
pop
jb
dec
dec
std
loopne
mov
xchg
mov
mov
pop
lods
loope
and
sar
pop
notl
ret
popf
adcb
inc
pop
mov
or
or
pop
push
or
mov
jae
jnp
int3
add
inc
outsl
test
mov
jg
cld
mov
dec
lods
mov
inc
negb
or
out
mov
insb
mov
mov
xlat
ficoms
jo
mov
sub
mov
push
mov
dec
cli
jg
lret
cmp
cmpsb
icebp
lods
jp
ret
repz
cli
addr16
movsb
popf
jb
imul
sarl
in
xlat
pop
jecxz
out
ret
push
inc
sub
repnz
scas
or
movb
and
xchg
notl
les
xchg
xchg
out
movsb
movsb
iret
jno
push
mov
dec
xchg
dec
xchg
fildll
aas
pushf
ljmp
cwtl
jae
push
dec
loop
xlat
adc
or
outsb
mov
in
mov
or
shrl
pop
jmp
aad
pop
add
dec
add
fcompl
popa
push
mov
add
popf
faddl
cld
jmp
ljmp
leave
inc
sti
jmp
mov
addr16
subb
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
pop
push
inc
fidivrs
jns
jl
stos
leave
mov
scas
jl
jle
ret
aad
daa
in
push
popa
sub
imul
lret
dec
push
jl
mov
lret
lcall
inc
fidivs
xchg
leave
inc
and
rcr
inc
adc
dec
insl
test
lahf
jns
xchg
repz
std
rorb
mov
pushf
adc
daa
mov
inc
cltd
hlt
iret
xchg
mov
idiv
push
add
imul
jge
push
adc
lds
das
jge
xor
jecxz
push
test
lret
dec
sbb
insb
push
mov
cmp
lret
in
push
movsb
push
mov
push
lds
fstpl
add
adc
fnstcw
lret
fldl
fiadds
popa
pop
dec
mov
or
add
pop
mov
jmp
mov
sub
sub
lods
sub
sbb
mov
jmp
dec
or
cli
loopne
cs
orl
lea
adc
pop
popl
outsb
ss
xchg
aaa
insl
push
sbb
outsb
mov
rorl
cmc
cmp
push
sub
into
imul
rcl
jo
je
cltd
mov
je
mov
cld
sub
cltd
add
jp
xor
jae
ja
dec
xchg
sysenter
or
pop
pop
push
sub
cmc
cltd
sbb
cmp
cmp
sbb
stc
outsb
or
mull
dec
add
mov
int
mov
and
mov
pop
popa
pop
mov
push
xor
jge
sti
or
fnstsw
cltd
test
sahf
cmpsl
xchg
jo
sub
pop
shrl
xchg
mov
jae
or
and
or
xchg
faddp
mov
xchg
popa
sbb
mov
pusha
neg
test
adc
adc
xor
mov
outsl
cmp
cmpsl
test
in
ret
xor
pop
bound
hlt
imul
and
ficoms
dec
fisttps
xchg
cmp
pop
incb
and
sub
cmp
popa
enter
adc
xor
inc
mov
ds
jmp
cmpb
stc
cwtl
mov
sub
inc
int
jnp
inc
or
push
jl
test
adc
jb
push
test
repz
adcb
cmp
mov
and
adc
xor
call
jg
ja
into
data16
divl
cld
sub
outsl
or
xor
nop
inc
mov
push
insb
imul
bound
push
mov
fistpll
push
gs
jbe
hlt
push
rclb
add
sub
jnp
rorb
pop
push
jle
addl
push
xchg
in
xchg
out
out
push
aam
sub
add
add
mov
testl
xlat
ljmp
outsb
xchg
jecxz
repz
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
call
jl
xlat
jns
jl
jmp
jae
and
sbb
dec
inc
jnp
ss
shl
bound
test
icebp
and
adcl
clc
scas
lea
pusha
sub
jbe
xor
add
orb
adc
es
push
mov
xchg
cmp
decb
test
loope
dec
sub
sbb
jmp
adcb
mov
cmpsl
imul
or
fcmove
jle
fs
mov
movsl
int
add
push
xchg
pop
pop
jne
mov
scas
and
cmp
test
aaa
ja
or
rcrb
push
sub
sbb
or
int3
sbb
gs
scas
bound
jle
test
sbb
dec
jmp
popa
jmp
inc
pop
cwtl
inc
push
mov
and
scas
into
out
add
xchg
mov
jae
add
aaa
add
lock
ja
inc
add
mov
div
push
mov
movsl
cmp
push
gs
loope
mov
movsl
stos
in
and
cmp
xchg
mov
push
stc
cs
push
pop
idivb
sbb
xchg
xchg
jp
mov
push
outsb
bound
cwtl
shrb
xchg
insl
push
mov
shll
les
adc
in
imul
adc
call
lock
imul
cmp
lret
divl
insb
nop
call
sbb
sahf
pusha
mov
mov
loopne
mov
sbbl
push
insl
mov
push
sub
mov
xor
push
xor
iret
lods
sub
popa
gs
cmp
idivb
xchg
inc
cmp
ret
repz
lcall
adc
movsl
lret
dec
cmc
jg
mov
cmp
lret
push
sar
mov
mov
xchg
inc
mov
xchg
sbb
mov
cld
imul
xchg
nop
mov
inc
sub
adc
mov
ficoms
push
cld
pop
cmp
out
and
mov
int3
leave
xchg
lods
cmp
push
inc
fcomps
push
adc
shll
adc
push
ret
cmpsl
push
cmc
popf
lea
mov
shll
int
and
pop
arpl
dec
ret
bound
jecxz
jle
gs
popf
inc
lock
je
scas
jo
in
xor
gs
cs
js
adcl
cmp
dec
dec
xchg
test
xor
test
or
xor
addr16
sahf
jns
orl
cmp
sahf
es
sub
inc
push
jle
popa
test
dec
fidivrl
dec
sub
out
lock
jno
cmp
fsubr
push
xor
test
stc
inc
or
and
test
add
gs
in
bound
xor
push
cld
gs
and
mov
sub
shlb
iret
fwait
popa
adc
insb
and
movsb
cmp
mov
lret
mov
data16
mov
out
mov
int3
movsl
nop
mov
mov
mov
xor
jmp
inc
pusha
sub
sub
dec
adc
jl
xlat
jns
jl
mov
insl
jne
inc
movsl
cltd
out
ret
lret
or
jb
iret
xchg
pop
lcall
fnstcw
frstor
in
add
push
outsb
pop
or
and
pop
ret
enter
or
dec
mull
or
imul
sub
mov
cmp
imul
out
enter
push
mov
push
pop
shl
pushf
shrb
push
or
sub
test
xlat
mov
jo
lea
jnp
popa
ret
dec
cmp
adc
lods
loope
movsl
stos
jbe
icebp
and
cmpb
pop
cmp
jmp
fcomps
lock
addl
mov
sub
add
mov
fistl
dec
popf
daa
jbe
lret
push
dec
push
pop
popf
inc
push
adc
mov
xchg
je
jge
out
and
and
je
stos
pop
rdmsr
mov
xchg
fcoms
pop
outsl
filds
jp
and
xor
clc
roll
and
cld
sub
mov
mov
pop
outsb
xchg
xor
push
mov
adc
loopne
push
dec
mov
dec
insb
mov
and
cmpsl
movsb
cmp
mov
mov
pop
aaa
adc
jecxz
mov
push
or
lods
loope
mov
imul
xor
cwtl
cltd
xchg
int
repz
mov
dec
jo
sub
xchg
roll
xor
mov
push
sahf
xchg
jl
jp
pop
out
cmp
or
fiadds
lock
jmp
out
jb
mov
jbe
sub
mov
cld
mov
jo
out
ret
xchg
mov
insb
aaa
and
jnp
push
fidivs
inc
ds
xchg
repz
sub
jne
test
dec
mov
popa
sbb
mov
js
pop
loope
and
dec
fnstenv
cmp
movsb
cld
repnz
jmp
mov
das
dec
jge
orl
cli
inc
cmc
cmp
test
mov
iret
mov
dec
cmp
xchg
xchg
stos
fsincos
shr
xor
gs
mov
mov
movsb
iret
test
xor
insb
jo
adc
scas
int
hlt
cmp
inc
notl
in
jne
dec
popf
test
push
pop
jo
adc
cltd
dec
cmpsb
mov
xor
fdivs
fwait
fwait
test
cmpsl
adc
sarl
sbb
in
dec
mov
sub
cmp
idivl
mull
data16
jl
mov
bound
xchg
mov
call
fwait
and
fs
ja
pop
test
mov
iret
inc
jge
jnp
push
hlt
dec
mov
push
or
or
ljmp
mov
dec
lods
or
push
shr
inc
setg
gs
loop
dec
xchg
sbb
lea
imul
sub
jmp
or
jb
mov
push
sbb
mov
loopne
jl
jns
jl
mov
inc
push
xor
popf
sbb
jo
adc
dec
gs
mov
inc
jnp
jg
fidivrs
nop
movsl
push
leave
in
jg
and
add
push
bound
mov
jg
xor
add
lods
mov
aad
outsl
inc
scas
cli
roll
into
and
cmpsb
mov
test
fmuls
add
mov
je
xchg
pop
aad
mov
movsb
in
add
sahf
sub
in
add
aam
ljmp
and
inc
int3
js
mov
mov
add
cmp
test
push
inc
sub
mov
enter
dec
bound
xor
stos
pop
iret
dec
rcrl
faddp
pslld
mov
pop
sbb
stos
xchg
testb
movsl
push
int3
xchg
fprem1
test
call
cmp
loope
add
pop
or
or
pop
aam
cltd
push
or
aas
and
sub
jb
ja
rorl
sbb
adc
scas
sti
mov
mov
jge
andl
sub
cmpsb
pop
jecxz
je
or
pop
jae
in
andl
in
lock
orl
sub
aas
jae
mov
jo
sub
mov
cmp
int
cmp
adc
loop
push
mov
mov
pop
fdivr
loope
push
cmp
lret
pop
adc
mov
cs
stos
dec
or
int3
jne
das
ret
in
out
call
test
stos
pusha
pop
jns
xor
pushf
xchg
mov
loopne
lea
lret
push
faddp
push
xor
xchg
out
in
sub
push
add
adc
pop
out
mov
rolb
fstl
dec
lock
adc
mov
fidivl
lods
inc
shrl
into
fdivr
dec
cwtl
xchg
mov
repnz
fisubrs
iret
cs
sub
jno
push
rcrb
nop
sbb
fldcw
popf
ds
and
call
or
lret
mov
sub
fcmovu
dec
inc
jl
sbb
mov
movsb
jmp
movb
add
pop
sar
adc
mov
inc
test
popf
leave
mov
push
stos
adc
xor
xchg
mov
ror
inc
lea
je
push
and
cmp
out
fnstenv
clc
subl
lods
ljmp
inc
imul
lret
or
aad
inc
xchg
pusha
into
cmp
fwait
jg
sbb
dec
mov
jbe
ret
inc
aaa
mov
push
dec
ljmp
cmc
cmc
lods
push
xchg
or
inc
sbb
lahf
xor
adc
repnz
insb
sbb
or
movq
xchg
lea
test
ret
xchg
or
adc
push
pop
jmp
dec
mov
push
mov
jmp
dec
cmp
xchg
mov
jae
std
call
mov
cwtl
cmp
loop
outsb
cmpsl
cli
insb
cmp
mov
inc
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
in
jl
adc
testb
dec
sbbb
testb
push
test
rorl
test
jecxz
in
out
lds
pop
pop
shrl
dec
inc
lret
popf
sti
sbb
fadd
pop
movsl
and
mov
push
addb
std
les
fdivrs
out
and
scas
add
nop
dec
sbb
mov
pop
cld
into
or
sbb
xchg
cli
ja
cld
scas
add
push
or
inc
fninit
test
cwtl
inc
popa
fcomip
push
mov
mov
and
mov
lock
push
out
push
cli
mov
leave
sbb
mov
and
stc
in
dec
mov
xchg
mov
daa
mov
sbb
mov
ss
inc
out
rcll
or
xchg
movsb
jne
icebp
and
add
cmp
pusha
into
hlt
imul
adc
xor
push
sarb
push
lcall
jae
push
aad
orl
cmp
add
adc
inc
popa
add
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
mov
in
jl
adc
dec
adc
subb
push
lea
in
ss
xor
adc
test
fs
xor
mov
scas
shrl
pop
adc
test
nop
adc
cmc
xor
stos
jns
xor
mov
jno
pop
std
lods
push
cmp
jae
jmp
inc
pushf
xor
push
inc
repnz
pop
dec
pop
cmc
lock
lds
mull
ret
jne
pop
mov
inc
sub
dec
cltd
jmp
lret
pop
enter
pop
and
bound
dec
push
lea
jns
insb
cwtl
mov
into
mov
jne
outsl
les
dec
sahf
stos
out
mov
nop
in
mov
aad
jecxz
movsb
shrl
js
lock
pop
sub
jno
xchg
fidivrl
movsb
fstpl
pop
dec
and
add
xor
and
sub
repnz
cmpsb
negl
xchg
lods
push
ficoms
incb
cmp
add
xchg
add
add
test
add
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
sbb
jl
adc
outsl
daa
cmpsb
rclb
leave
rolb
xchg
pop
inc
sbb
arpl
out
decl
jne
mov
jnp
sahf
dec
stos
pushf
jnp
ror
jp
jmp
adc
movsl
cmpl
ss
fadds
dec
push
ret
pop
inc
jg
sbb
and
add
enter
xchg
mov
and
or
dec
pop
movsl
cmpsl
push
adc
out
jl
push
jp
inc
push
mov
sti
sub
sub
dec
cmc
sub
repnz
mov
into
sbb
pop
fdivs
add
fldpi
insb
and
mov
int3
sbb
in
repz
xor
ds
das
and
aaa
dec
jp
xor
pop
adc
add
and
fsubr
and
std
in
xorl
inc
push
lret
mov
mov
pop
inc
and
pop
or
mov
push
fimull
and
pop
mov
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
out
jl
lret
jl
fcoml
fimuls
pop
mov
fisubrs
fdivrp
hlt
fimull
push
xchg
fs
test
out
je
xor
inc
ljmp
xlat
cli
xor
imul
inc
xor
int3
add
jmp
lret
test
leave
rcll
dec
adc
mov
fnstsw
xchg
jle
mov
add
in
pop
mov
inc
fsts
movsb
cli
mov
cmp
mov
lahf
mov
adc
mov
mov
cs
xchg
jbe
in
cli
movsl
sub
daa
aaa
imul
push
loop
xchg
jnp
mov
jnp
fidivrs
das
mov
mov
test
ja
lret
pop
mov
fs
push
xor
scas
popf
rcrl
mov
inc
xchg
dec
adc
mov
daa
sub
dec
dec
push
push
xchg
push
in
das
pop
sti
jno
jmp
mull
out
inc
mov
data16
insl
sub
aam
test
scas
xlat
and
call
sub
sarl
test
shll
popf
in
push
leave
sbb
fadd
mov
xchg
imul
pop
or
outsl
cli
fldenv
xlat
cmpsl
adc
add
test
mov
cltd
arpl
sub
sbb
inc
sub
test
mov
shlb
mov
adc
addr16
cmp
lods
shrb
dec
or
cmpb
sub
lock
pop
mov
in
or
dec
rolb
insl
pop
fstpt
sahf
jg
push
aam
cmp
mov
jmp
mov
les
test
pusha
pop
dec
mov
mov
or
ds
adc
lcall
stc
ja
pop
push
mov
stc
cli
jb
cmp
test
xor
or
aad
pop
dec
mov
cmpsl
stc
shr
push
dec
mov
fldt
xlat
hlt
mov
lret
dec
ljmp
cltd
push
lods
mov
rcrb
out
rcrb
insb
add
outsl
outsb
pop
shrl
pushf
sbb
in
sub
mov
int3
mov
mov
sub
fldenv
pop
xchg
ficoms
in
dec
mov
daa
inc
xor
fisubrs
or
mov
cli
mov
and
nop
hlt
add
push
stos
lcall
icebp
lods
sub
mov
in
std
stos
dec
idivl
xchg
mov
or
nop
jmp
call
sti
or
dec
rcr
ficompl
pop
cmp
cmp
xchg
cltd
inc
mov
inc
mov
aaa
dec
rcrb
xor
mov
outsl
mov
sbb
mov
dec
into
daa
push
and
sarl
xchg
sbb
adc
lea
test
call
lods
push
lods
dec
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
sarb
jl
jns
jl
xchg
movsb
mov
loopne
mov
loop
jne
out
mov
push
scas
sub
xchg
sub
or
and
xor
popf
and
out
xchg
and
inc
pop
and
fxch
jp
push
lret
pop
and
stos
sub
or
sub
add
cmp
cmp
fsubr
sar
add
xchg
mov
imul
jmp
inc
into
push
inc
push
sub
addb
outsb
out
movsb
cmp
inc
movsl
push
adc
inc
loope
and
mov
jmp
jecxz
daa
subb
push
sub
dec
mov
sub
fcoml
mov
jl
or
rcrl
cs
jns
or
xor
mov
jl
jno
cwtl
mov
or
loope
iret
imul
mov
mulb
imul
vmwrite
mov
mov
push
inc
sbb
pop
adc
ss
shr
sub
push
pop
notl
imul
sbb
cmp
push
jmp
and
les
stos
faddl
ret
cld
or
xchg
or
push
das
push
push
fistpll
shl
jle
loop
bound
scas
cmp
out
clc
in
aad
adc
push
pushf
bnd
xchg
mov
test
mov
les
inc
int
pop
andl
pop
jae
lcall
mov
mov
sub
dec
pop
cmp
out
mov
aaa
pusha
xchg
into
rol
push
and
test
mov
arpl
sub
js
daa
mov
loope
push
mov
je
gs
dec
sbb
sub
or
inc
nop
cs
adc
loopne
push
ret
dec
stos
xor
inc
add
out
das
push
inc
sub
xor
push
js
js
inc
pop
mov
movl
sub
or
xchg
add
cs
jae
pop
popa
sub
push
push
xchg
arpl
adc
std
ja
inc
das
dec
in
fdivrl
loope
int
jne
pop
ljmp
cmp
shlb
mov
mov
into
arpl
inc
clc
inc
inc
jo
sbb
adc
sbb
push
dec
arpl
ret
filds
add
scas
jns
movsl
jnp
insb
cmp
loopne
inc
adc
das
cmp
mov
cltd
sub
and
inc
ss
jnp
dec
shrl
lods
fs
out
pop
rcr
outsl
xchg
sub
or
push
pusha
xor
fsubrs
jmp
sub
jge
mov
mov
xchg
xor
and
xor
mov
test
mov
shl
inc
xchg
inc
mov
lea
push
test
pop
ds
sbb
sbb
aas
iret
loop
cli
icebp
addl
inc
daa
add
fistpl
xchg
lods
int3
jo
inc
sub
mov
loopne
mov
pushf
fnstsw
push
shl
push
jmp
shl
or
xor
lock
sub
adc
xchg
out
or
das
mov
lret
mov
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
push
jl
jns
jl
fisubl
mov
dec
add
stc
xor
notb
cld
fidivrs
push
jo
out
jle
xchg
fwait
push
mulb
add
xchg
test
into
out
movsb
pop
xor
js
aam
dec
sbb
adc
add
lods
pop
mov
xor
push
pop
sbb
mov
dec
sub
sub
jmp
outsb
adc
pop
sahf
xor
ret
pop
pop
cmc
adc
mov
mov
into
or
scas
rclb
shrl
das
out
out
mov
push
mov
insl
xor
xchg
dec
xor
call
xchg
je
into
dec
xchg
and
out
jge
cmpsl
cmp
or
incl
imul
sbb
xor
out
dec
xchg
aad
rorl
xchg
pcmpgtw
movsb
add
and
in
push
pop
xor
fnstsw
ja
js
inc
jle
jbe
xchg
adc
sbb
outsb
jmp
pop
and
test
pop
outsl
fstpl
in
lret
imul
popa
push
in
push
aam
pop
jno
mov
loopne
xlat
and
leave
cltd
mov
cmp
inc
cmp
inc
jo
dec
std
cmp
xor
xor
cmp
cmp
xchg
inc
lret
push
xchg
mov
ret
dec
pop
pop
mov
icebp
insb
loop
int
push
fiaddl
nop
dec
std
aas
sbb
les
mov
add
pop
aaa
das
das
popf
sbb
ret
cmp
adc
test
push
nop
leave
jo
push
in
aas
fdivs
neg
pusha
shrl
js
and
mov
je
push
jb
in
add
addr16
sub
in
dec
push
sub
xchg
fsubrl
jge
mov
pusha
gs
mov
ja
mov
push
or
addr16
inc
ror
jecxz
pop
aad
push
cmp
mov
dec
pop
inc
xchg
push
adc
push
xchg
andl
notl
pop
repnz
xor
xor
xor
aas
mov
mov
movsl
sbbb
sarl
shrl
leave
mov
stos
push
push
pop
popf
jns
shl
stc
push
scas
or
subb
mov
hlt
outsl
xor
dec
mov
mov
jmp
lcall
lods
lock
xor
ljmp
cld
push
scas
cmp
sub
das
xchg
imul
movsb
insb
enter
mov
fstp
mov
aas
aas
inc
adc
jns
fs
ja
inc
cltd
or
jne
sbb
cltd
fucomp
push
push
stc
stos
repnz
in
inc
mov
daa
addr16
int
mov
lock
ja
cltd
or
sarl
cmp
jp
xor
outsb
mov
sub
clc
xor
xor
xor
mov
aam
sub
gs
insb
dec
les
cmp
add
daa
or
add
inc
xchg
in
imul
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
cld
cmpsl
mov
addr16
lret
jl
or
fwait
call
insb
aad
addr16
jb
out
xchg
ss
xor
in
int3
gs
jns
cmc
adc
je
adc
jl
adc
out
ret
rclb
inc
jae
sbb
mov
popa
or
pop
adc
test
daa
mov
xor
fisttpl
adc
popa
push
pop
cmp
data16
mov
cmpsl
mov
std
inc
test
daa
ror
xor
cmpsb
push
adc
xchg
dec
iret
push
mov
test
sub
ja
sub
out
mov
icebp
sbb
sahf
sbb
xchg
sbb
aas
mov
adc
lods
push
or
mov
push
or
aas
jnp
pusha
lcall
dec
sbb
lcall
xlat
sbb
mov
jno
jg
cltd
fsubrl
and
nop
rorb
cmp
cld
into
gs
sub
mov
lods
stos
mov
sti
movsb
mov
fwait
leave
inc
add
pushf
scas
incl
shll
push
jge
xchg
push
outsb
sbb
adc
ja
mov
imul
sti
sahf
fwait
sbb
ret
xchg
scas
hlt
fisttps
ljmp
in
sub
xchg
push
mov
push
adc
add
and
aas
jns
push
je
aad
pop
repz
xchg
push
mov
xor
jle
aaa
inc
sub
cmp
nop
mov
pop
out
inc
imul
dec
shll
and
cli
sahf
fisttpl
mov
cs
and
lcall
jnp
mov
cld
xor
push
dec
aam
inc
iret
push
inc
fisubrl
pop
sbb
dec
mov
aam
pop
pusha
pop
adc
mov
int
xor
dec
imul
outsl
sub
mov
mov
push
mov
mov
inc
push
xlat
cmp
imul
cmp
adc
aad
jae
icebp
add
mov
cltd
and
xorl
or
jne
xchg
scas
mov
lea
jne
mov
insb
cmc
cmp
dec
xlat
jle
lret
pushf
adc
fs
inc
repz
negb
jno
gs
xchg
cli
stos
mov
js
pop
add
cmp
data16
xchg
mov
or
shlb
or
outsb
dec
rcr
jmp
aam
aad
in
stc
adc
pop
inc
shr
sbb
jae
cmp
scas
jl
scas
aam
out
jnp
mov
icebp
xchg
push
push
daa
mov
add
xchg
jmp
cwtl
jnp
pushf
int3
cmc
arpl
sti
lahf
push
sub
andl
cmpsb
fmuls
loop
fwait
and
iret
popa
ja
lds
enter
mov
or
pushf
call
mov
cmp
leave
pop
into
xorl
or
dec
out
xchg
imull
jne
loopne
cld
rorl
jl
pop
addl
ficompl
stos
mov
fstl
dec
leave
mov
fcmovb
inc
fsin
inc
scas
push
pop
mov
inc
jbe
add
add
imul
mov
jmp
icebp
cs
ja
jno
mov
mov
lds
jns
jl
adc
pop
aas
mov
popf
jnp
xchg
push
out
outsb
mov
sbb
lea
dec
mov
cmp
enter
jnp
sbb
lds
cmp
out
sbb
inc
pop
test
repz
add
in
out
imul
jns
dec
daa
stos
and
hlt
popf
ljmp
mov
dec
push
outsl
mov
inc
test
mov
push
push
mov
push
xor
repz
mov
adc
mov
mov
dec
mov
push
out
push
mov
shlb
jo
insb
fwait
jo
sarb
in
cmp
jle
xlat
lods
sbb
mov
jb
out
jae
pop
lods
mov
repnz
add
movsb
cmp
push
cmp
mov
xchg
push
ja
cltd
outsl
jp
adc
jmp
cltd
loop
mov
jae
test
stos
adc
fcompl
cmp
jg
inc
addl
inc
mov
pop
flds
add
nop
jne
into
outsb
pop
sub
daa
int
sbb
adc
pop
mov
or
aas
jg
imull
icebp
stc
dec
mov
xor
mov
xor
add
push
cmp
or
pop
pop
and
jmp
clc
scas
jmp
jecxz
test
mov
paddusb
mov
sbb
cmp
mov
outsb
dec
pushf
sbb
imul
dec
pop
dec
sbb
push
sti
pop
out
fstpt
stc
mov
sbb
adc
clc
inc
jle
and
in
btc
lcall
adcl
stc
dec
sbb
imul
jbe
mov
gs
and
xchg
mov
test
mov
rcl
inc
add
mov
lret
cmp
rcll
push
push
sub
scas
sub
mov
shll
cs
mov
out
movsb
loope
or
in
mov
jno
cmp
mov
stc
enter
add
dec
scas
cwtl
pop
xchg
loop
xor
lea
sub
or
add
dec
adc
sbb
out
leave
std
cwtl
movsb
and
fisttps
js
data16
sub
push
imul
jp
pop
and
pop
mov
push
rclb
sub
add
push
dec
cs
push
fldl
lret
pop
sub
xchg
ror
cmpsb
mov
int
jmp
push
arpl
xchg
test
or
push
gs
xchg
mov
sahf
mov
or
jmp
xor
push
stc
decb
shll
sbb
mov
lods
push
shlb
mov
fisubs
dec
imul
sub
les
xchg
sbb
mov
or
repnz
mov
outsb
pop
jns
add
mov
dec
cmpsl
cmp
aas
adc
or
insb
pop
mov
leave
fldenv
in
in
sub
sbb
xor
lods
fwait
xchg
icebp
fdivrp
add
movsb
mov
dec
push
dec
xchg
dec
jne
sbb
jge
test
push
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fcomps
jae
mov
jl
lret
jl
push
stc
popa
mov
out
mov
push
mov
cltd
jnp
sbb
cmp
sets
mov
or
rcrb
xor
fsts
xchg
jns
jns
call
daa
push
mov
push
jbe
mov
rolb
mov
dec
push
jne
pop
dec
idivb
jo
jne
xchg
push
lret
movsl
cmp
or
dec
inc
adc
mov
mov
mov
js
mov
rorb
roll
clc
and
jno
pop
xchg
push
sbb
push
cwtl
jge
dec
ljmp
fimull
ret
add
fmull
xchg
jecxz,pt
cmpsl
cmc
mov
adc
fidivl
in
pop
ret
xorb
bound
mov
mov
jp
push
cmp
loop
repz
sub
mov
mov
push
icebp
js
cmp
iret
push
lahf
push
lahf
in
testl
cmp
shrl
mov
mov
sub
leave
add
jg
shr
or
int3
dec
and
fcomi
fmull
pop
mov
roll
pop
mov
dec
lret
push
or
gs
shlb
leave
fwait
add
adc
mov
push
shrl
das
and
frstor
stc
int
pop
fsubrp
lods
je
aad
xchg
pop
push
adc
movsl
pop
mov
in
dec
fdivs
or
cmp
inc
adcb
jecxz
repz
pop
add
cmp
xor
jbe
dec
jge
dec
dec
xor
xlat
push
fdivs
dec
pushf
ror
inc
insl
or
and
mov
iret
adc
int3
or
sbb
add
lahf
or
repnz
mov
jg
jl
cmp
movsb
sub
ja
rclb
fidivs
test
cs
loope
xchg
sbb
lods
cwtl
pop
sti
jbe
and
fidivrs
adc
or
in
fs
sub
pop
mov
sbb
lea
or
sbb
xor
mov
lock
gs
iret
mov
sarb
test
fs
cmp
out
push
sti
std
xor
subb
es
inc
loope
inc
fimuls
push
push
jb
xor
sahf
mov
mov
loope
shld
cmp
cmc
or
push
leave
cs
in
in
xor
mov
add
adc
imul
mov
pop
mov
xor
inc
stos
out
mov
std
in
adc
jl
push
dec
sbb
push
outsb
es
in
negl
add
sbb
mov
sbb
sub
mov
je
inc
shll
push
push
shl
push
popf
les
scas
adc
mov
cmp
mov
adc
xchg
dec
cltd
sub
int3
xchg
cmp
jge
lcall
dec
mov
mov
lretw
mov
jge
pop
cmp
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
sbb
frstor
jl
lret
jl
loopne
jnp
fwait
stos
nop
icebp
lds
test
mov
push
popf
dec
loop
loope
rcr
push
mov
sub
inc
adc
or
mov
and
ret
cmc
and
ret
jecxz
add
xchg
push
dec
sbb
pop
dec
add
jae
ret
sbb
sub
stos
mov
fistl
push
pop
jno
pop
or
mov
push
cli
out
lea
call
mov
daa
pop
or
xchg
xchg
out
push
out
aad
ds
js
lcall
or
dec
stos
daa
imul
call
or
and
lahf
jne
rol
xor
xor
mov
xor
cmp
dec
mov
ret
pop
rcrl
inc
lock
mov
mov
inc
repnz
xor
push
outsb
push
sarl
leave
sbb
stos
push
pop
lcall
ficoml
xchg
pop
out
rolb
pusha
cltd
loopne
imul
jo
sub
pushf
cli
int
aaa
scas
sbb
repz
push
fcompl
jnp
cmc
pop
mov
into
add
lods
pop
mov
mov
bound
mov
jno
int
lods
cmc
mov
adc
mov
fisttps
jp
jecxz
sbb
iret
sbb
jl
sahf
insl
nop
das
pop
popf
loope
fnstsw
call
fadd
jne
ja
inc
lcall
jmp
cmpsl
cli
daa
add
stc
mov
lcall
cmp
inc
dec
cmp
bound
xchg
sbb
scas
push
pop
orb
sub
fwait
lret
mov
je
or
rcrb
mov
or
xlat
xchg
mov
and
push
push
xchg
mov
lahf
jg
xorb
or
stc
rclb
popf
jbe
pop
out
pop
dec
push
aaa
and
push
push
cmp
pop
repz
fistpl
ja
lahf
or
mov
inc
call
pop
xchg
ja
push
sbb
dec
insl
push
fstps
or
call
hlt
dec
pop
cmp
int3
mov
fs
lock
xor
cmp
inc
add
sub
ss
decl
add
jle
jecxz
std
in
xor
and
xor
cld
jp
popf
fmul
fpatan
lahf
ds
add
jecxz
js
push
ficoms
pop
xchg
xor
mov
dec
jb
mov
pop
sbb
outsb
lcall
mov
cltd
repz
or
ja
aad
out
sarb
xlat
shlb
xchg
jge
jns
inc
adc
scas
dec
gs
shl
push
mov
cs
insb
dec
xchg
in
xchg
xchg
pop
sub
sub
and
mov
xchg
in
pusha
stos
das
icebp
sbb
movsl
push
cwtl
fcoml
ljmp
xor
addl
iret
dec
jns
xor
stos
add
xchg
fsin
aam
frstor
sbb
lods
and
pop
cmpb
cmp
mov
or
cmp
push
lret
icebp
imul
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
and
sarb
xchg
jns
jl
outsl
shrb
cs
push
adc
or
into
dec
aad
int3
enter
jo
aad
sbb
int
es
push
sbb
jo
ret
sarl
mov
dec
mov
lds
stos
nop
xlat
push
movsl
add
inc
adc
inc
jecxz
mov
push
pop
inc
inc
mov
shl
mov
mov
in
roll
or
dec
fistps
clc
mov
pop
pop
dec
dec
pop
jp
pushl
and
and
or
sub
sahf
jbe
push
and
enter
cs
loope
pop
xchg
or
bound
fucomp
xor
loop
xchg
imul
sbb
pop
fcmovb
scas
or
jecxz
fcmovne
or
icebp
andl
insl
jmp
mov
inc
or
mov
mov
test
inc
mov
arpl
adc
xor
outsl
xor
insl
stos
push
or
shll
dec
jo
mov
mov
aam
mov
loope
xlat
stos
sahf
adc
xchg
fisubl
insb
lods
jnp
bound
sub
jns
or
jmp
cmc
jge
xlat
insl
jl
stos
xor
jnp
sar
pushf
jae
adc
rcr
mov
push
xor
mov
cmp
cltd
push
fsubl
jnp
jge
fcoms
sub
les
cli
cld
cmp
sbb
push
lds
jl
lods
lds
or
push
insb
adc
ljmp
push
mov
vmovlps
subl
orb
out
push
cmp
mov
mov
dec
sub
in
cmp
xchg
lret
test
and
pop
push
insb
rcrl
push
cmp
mov
mulb
repnz
inc
mov
stc
sub
push
stc
imul
jl
and
inc
fsubr
jns
test
ret
js
mov
inc
xchg
movsb
faddl
js
stos
iret
std
in
and
movsb
sub
aaa
and
inc
pop
mov
ja
mov
pop
cmpsl
out
hlt
outsb
popf
mov
je
pop
out
jl
out
mov
out
xchg
jmp
popf
mov
cmc
dec
into
pop
mov
pop
dec
push
sbb
xchg
mov
imul
cmp
sbb
fnstcw
inc
pop
mov
mov
mov
xchg
cli
mov
jl
and
int3
mov
daa
cmp
and
pop
insl
cs
jo
or
cmp
push
add
sbb
mov
mov
fisubrs
mov
xchg
jno
int
or
arpl
dec
mov
stos
jb
mov
movb
adc
loope
mov
sbbb
aam
xor
test
push
outsl
mov
in
xlat
pop
imul
aas
and
ds
jmp
das
cmc
xlat
xlat
jb
addr16
test
sbb
mov
mov
cs
flds
mov
inc
dec
add
push
popa
inc
xlat
pop
repz
je
push
les
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
jecxz
fdivs
cmpl
jl
add
xchg
lret
pushf
pop
mov
inc
xchg
lcall
lahf
push
pop
test
pop
pop
pop
inc
push
push
pop
xchg
sbbb
inc
popf
mov
pop
sub
add
shll
xor
add
xchg
xlat
decl
push
add
es
scas
push
cmpl
xchg
out
mov
sub
or
push
das
mov
push
mov
inc
sti
rcr
add
or
mov
shrb
xlat
cmp
xchg
psllw
jmp
adc
lods
xchg
and
jmp
mov
adc
pop
test
sub
shrl
fwait
push
fucom
push
push
push
xor
mov
mov
cmpsb
pop
out
ja
sarb
seta
mov
je,pn
jns
mov
add
stc
adc
mov
loope
sbbl
push
ja
xchg
pop
inc
jl
jp
ret
insb
push
les
xor
js
xor
mov
lahf
or
stos
nop
fld
push
mov
sub
rcrb
jb
imul
mov
fmull
inc
mov
les
adc
add
push
mulb
iret
or
pop
inc
setbe
aaa
ret
and
sub
mov
jns
repnz
sub
ss
push
daa
stos
nop
sub
inc
ret
jb
movsl
in
arpl
mov
push
lahf
or
mov
mov
movsb
int3
aad
ret
dec
stos
jno
sub
cmp
sarl
dec
mov
das
mov
lods
mov
mov
lahf
lea
int
mov
ret
ret
inc
mov
adcl
add
sub
push
xor
stos
mov
addl
jecxz
pusha
mov
ffree
add
sub
jno
mov
xchg
dec
pop
ja
lret
in
or
test
subl
arpl
nop
das
mov
pushf
enter
mov
pop
into
pop
jg
and
push
inc
lods
leave
xchg
popa
aad
cmc
scas
sub
mov
mov
stos
mov
mov
out
sub
xchg
popa
sbb
nop
mov
jl
sbb
xchg
or
aad
sahf
mov
or
mov
inc
ja
popf
mov
dec
xor
jo
dec
mov
rorl
jle
orl
pusha
push
mov
xor
sbb
sbb
and
jp
int3
es
add
pop
cmp
sub
test
xchg
mov
loope
insb
jno
faddp
mov
push
insb
fsubrp
jl
cmp
jns
sub
into
bound
adc
jb
in
js
inc
imul
and
or
jmp
cld
pop
fucomp
xor
scas
push
dec
jbe
dec
inc
or
cwtl
fs
mull
jge
pop
mov
or
inc
sbb
sarl
sbb
shlb
cmp
out
outsl
adc
jmp
push
mov
sbb
inc
pop
or
adc
add
loope
lcall
mov
mov
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
pushf
push
arpl
jl
in
xchg
and
mov
push
repz
insb
or
imul
cmp
lahf
xchg
lds
mov
and
add
lock
in
jo
scas
xchg
daa
adc
sti
int
pop
pop
or
rclb
pop
add
lret
jl
cmp
jbe
mov
nop
push
xchg
mov
into
add
pop
lret
shll
jmp
fisubrs
mov
outsl
jle
adcl
xor
sbb
mov
js
push
mov
or
fadd
or
mov
mov
xchg
loopne
repz
out
mov
daa
gs
mov
daa
pop
mov
scas
cs
ficomps
test
in
xor
push
pop
popf
push
dec
fsubrs
or
mov
aam
je
outsl
jecxz
cmp
xchg
repnz
pusha
push
mov
aaa
imull
sbb
lock
test
and
cli
es
push
pop
push
cld
aam
lods
add
xor
aam
les
ret
nop
xchg
fmull
cmc
std
aas
daa
ljmp
mov
sbb
ja
xor
push
jne
dec
stos
stos
in
insl
fstpt
pop
sti
inc
or
mov
lea
push
cmp
jge
inc
pop
and
mov
cmp
sub
dec
jmp
je
mov
sub
mov
test
xor
pop
divl
mov
xchg
and
mov
mov
jle
add
dec
cmc
int
mov
pop
or
mov
enter
movsb
pushf
mov
jb
dec
add
dec
mov
shrl
fadd
fiadds
push
stos
jnp
fcoms
and
adc
aad
out
call
adc
cmp
or
push
xor
in
fidivrs
dec
push
arpl
mov
outsb
movsb
xor
outsb
mov
add
nop
es
imul
or
mov
cmp
cmp
stc
sbbl
xor
mov
popf
movsl
or
test
xor
aas
push
les
pop
in
dec
sbbl
xchg
out
adc
lods
push
lret
add
xchg
pop
push
mov
rcrb
dec
sub
leave
xchg
dec
repz
jle
mov
mov
dec
cmp
fstpl
fists
lds
cmpsl
pusha
movsl
xor
adc
loopne,pt
xor
mov
mov
mov
push
repnz
shlb
loop
inc
and
mov
mov
icebp
mov
push
xlat
cmp
movb
lea
xor
or
mov
imul
insl
ficoms
out
sbb
sub
mov
or
jno
adc
jl
mov
lea
pop
lock
xchg
insb
adc
fnstenv
scas
test
sahf
add
inc
xchg
jb
sbb
pop
pop
and
es
mov
dec
fisttpl
or
add
outsb
add
add
daa
inc
imul
xchg
popf
inc
leave
mov
jl
jns
jl
pop
and
dec
sbb
daa
add
cli
pusha
sub
cmpsb
cmp
pop
push
test
mov
mov
dec
sub
cmp
sbb
sub
and
and
movsb
ss
nop
dec
stos
lods
into
sbb
sbb
add
adc
and
pop
sub
ret
xlat
in
mov
cmp
xchg
pop
enter
lret
adc
mov
pusha
int3
xchg
xchg
jnp
mov
pop
cltd
dec
jle
jecxz
cmp
and
mov
sub
and
mov
out
or
in
jae
shlb
or
sub
mov
imul
mov
andl
arpl
nop
xchg
xchg
incb
femms
jg
out
jae
xchg
xchg
mov
jns
mov
stc
fdivr
add
inc
imul
xchg
fsts
test
movsb
enter
ljmp
or
jg
pop
sub
push
or
stc
jl
mov
imul
lahf
outsb
lock
cmp
pop
orb
jns
jmp
mov
cs
pop
adc
aad
pop
pop
daa
ret
mov
push
inc
jno
mov
cwtl
rcr
fs
std
incl
sarl
and
xchg
mov
gs
pop
mov
jnp
and
push
daa
test
adc
cmp
mov
xchg
lds
fsub
sbb
test
pushf
xor
rcrb
xchg
xchg
and
ficoml
xlat
mov
adc
rcrl
inc
jne
push
insl
sbb
in
xlat
pop
pop
das
add
and
inc
inc
xor
adc
lock
xchg
push
mov
std
dec
out
adc
rcrl
and
sti
xchg
cwtl
mov
mov
xchg
bound
sbb
jns
stos
scas
int
and
push
mov
inc
dec
lcall
inc
mov
add
ret
inc
jp
loop
mov
or
je
and
scas
mov
mov
rcll
dec
pop
arpl
fdivp
pop
int
mov
push
mov
icebp
adc
push
push
roll
and
aam
mov
out
push
xor
pop
xchg
xchg
inc
insb
mov
dec
fiaddl
fmuls
xchg
popl
mov
cli
add
xor
push
ljmp
jg
xchg
push
rorl
sbb
bound
inc
mov
adcl
insl
divb
jle
mov
jl,pn
jp
stc
mov
pushf
xor
enter
sbb
push
in
xchg
sbb
ret
inc
push
add
adc
pop
ficoms
sub
mov
stos
cld
dec
dec
clc
arpl
jo
sets
std
dec
cmp
pusha
cmpsl
lahf
mov
or
xchg
mov
pop
or
cwtl
notl
insl
xchg
out
jne
inc
clc
mov
xor
add
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
or
rcll
jns
jl
inc
leave
dec
dec
iret
xchg
dec
mov
movl
shrb
int
jmp
mov
push
cli
pop
add
cltd
mov
out
inc
int
fldcw
dec
pop
xchg
jl
icebp
lahf
push
pop
std
xchg
nop
sub
dec
lods
ficoms
mov
push
mov
add
sbb
mov
cmp
hlt
jp
inc
pop
or
inc
and
int
push
xor
lods
mov
lea
ljmp
and
aad
mov
or
mov
stc
insb
dec
jecxz
fisubl
fcmovb
addl
orl
sub
push
out
clc
xlat
mov
shrl
sahf
jae
fcmovnb
mov
cmc
xchg
sbb
sbb
scas
push
or
test
cld
xchg
lods
or
jp
cmp
nop
xor
notl
or
push
pop
adc
in
hlt
cmp
clc
cmp
rolb
movl
push
cltd
mov
inc
inc
or
lret
negb
into
dec
aam
ja
jae
mov
cmp
cli
ja
mov
rcrl
pop
pop
or
enter
mov
jno
je
test
push
cmp
shll
mov
cmp
ret
ret
iret
and
cmp
in
xor
adc
sub
gs
movsb
or
mov
jb
xor
rcrl
push
xor
jl
test
pop
aam
leave
mov
mov
cld
xchg
subl
stos
sbb
in
add
aam
lds
mov
mov
sub
inc
pop
mov
jb
inc
mov
push
fbstp
pop
xor
push
fiaddl
mov
mov
mov
imul
mov
xchg
push
jl
pop
insb
bound
enter
aam
mov
mov
xor
orb
inc
rorb
lcall
lds
mov
into
out
repnz
and
shlb
das
or
cli
mov
mov
or
ret
imul
mov
imul
aaa
add
xchg
pop
arpl
xor
nop
jp
sub
mov
inc
or
movsl
lcall
loopne
test
cmp
add
jb
pushf
shrl
add
cmc
push
push
lcall
js,pt
pop
xchg
push
xchg
cwtl
daa
ret
xor
jns
ds
icebp
jl
dec
ljmp
pusha
sbb
loopne
xlat
cmp
popa
ljmp
repnz
cmpsl
cld
push
mov
jge
sub
adc
add
sbb
mov
xchg
sbb
push
fcomi
leave
bound
add
mov
adcb
fcomip
into
mov
ret
mov
or
iret
mov
mov
xchg
push
pop
cmp
add
or
hlt
int3
xor
inc
test
sbbl
mov
and
fistps
xor
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
repz
in
insl
xchg
jl
lret
jl
or
mov
mov
pop
pop
or
sbb
xor
lods
je
inc
faddl
push
mov
rcll
sub
and
jbe
xor
insl
dec
push
mov
xchg
das
xor
mov
xchg
cs
fdivr
ja
sbb
dec
dec
jmp
jge
xor
xor
movsb
add
sahf
add
and
mov
fcomp
push
pushl
adcl
out
jno
pop
lahf
mov
mov
mov
shlb
mov
movsl
mov
jg
and
scas
out
mov
fisttpll
mov
mov
mov
adc
add
pop
mov
jmp
rorb
mov
jbe
repz
sbb
shlb
xchg
pop
push
sbb
adc
push
xor
leave
shlb
in
mov
xor
adc
push
inc
aad
pop
idivl
jmp
sti
fincstp
popa
jecxz
iret
andb
loop
sub
loop
and
jmp
arpl
js
jge
xchg
xchg
and
sbb
inc
decl
xorb
or
icebp
mov
cmp
sbb
xchg
clc
in
adc
clc
cmpb
inc
in
flds
mov
push
mov
xchg
or
mov
lahf
add
repnz
lods
rcll
mov
stos
push
and
popa
ja
maskmovq
imull
bound
mov
cmc
dec
jge
les
jecxz
mov
fstl
xchg
sbb
and
pop
mov
ljmp
mov
sti
call
es
je
jbe
popf
mov
cmp
cmp
xorb
cmp
or
xor
xor
mov
inc
call
pop
pop
xchg
jecxz
outsb
popf
dec
es
add
cld
or
jg
enter
pop
orl
push
mov
mov
adc
fsubr
fnstcw
scas
xchg
scas
ss
neg
mov
loopne
imul
inc
push
ret
pusha
add
mov
pop
pop
stos
jle
movsl
dec
pop
or
adc
movsl
and
jecxz
mov
xchg
cmp
out
std
adcl
inc
cmp
jae
bound
arpl
dec
xor
jp
jno
mov
adc
xchg
test
push
mov
fimuls
divb
mov
clc
add
cmpsb
add
das
adc
mov
push
adc
scas
xchg
or
imul
xlat
ja
bound
mov
push
pusha
xchg
movsl
and
popa
jmp
stos
mov
jo
inc
jnp
push
inc
jno
stos
test
sbb
lock
push
outsl
or
mov
xchg
cmc
repz
adc
xor
inc
insl
popa
mov
loope
iret
mov
add
repnz
fcmove
mov
mov
pusha
push
in
sti
lret
mov
dec
lret
shll
outsl
pusha
scas
outsl
pop
push
dec
loope
fiaddl
scas
jb
faddl
jecxz
mov
add
mov
push
pop
jmp
fcompl
push
mov
les
add
add
add
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
insl
shufps
xchg
jl
lret
jl
data16
cmc
iret
push
addr16
daa
test
outsb
and
inc
sbb
adc
test
push
fbld
ss
pusha
add
push
cld
aam
std
sub
jns
ljmp
mov
popa
jns
arpl
pop
out
xor
push
mov
aad
int3
push
or
shrl
ds
aam
idivb
push
pop
mov
std
leave
cmpl
pusha
inc
adc
std
arpl
adc
sub
xchg
loopne
arpl
jecxz
inc
push
mov
mov
xchg
lods
out
pop
leave
in
cld
inc
sbb
push
shll
xchg
stos
sub
jo
inc
subl
rclb
pop
cmp
push
push
and
inc
in
mov
in
imulb
cmpsb
add
mov
pop
cmp
ficoml
js
push
mov
sbb
cmp
jmp
cmpsb
in
jp
push
sub
test
add
in
fnstsw
mov
daa
stos
bnd
ret
push
inc
pop
lods
mov
or
cltd
jle
jo
fmuls
ss
xchg
or
push
insb
repnz
sub
clc
fdivl
sarl
mov
add
mov
and
mov
test
jnp
outsl
ret
std
mov
push
jmp
mov
jp
jb
add
push
lds
xor
imul
pop
jle
repz
roll
int3
mov
divb
xchg
loopne
outsl
inc
sub
add
cmpsb
repz
out
aas
dec
mov
insl
mov
loope
inc
jnp
dec
dec
mov
mov
lret
pop
pop
and
pop
arpl
xorb
adc
fisubrs
in
repnz
adc
pop
push
loope
sbb
ljmp
pusha
jg
adcb
jnp
and
mov
xor
pop
push
pusha
jg
test
lods
pop
or
std
push
sub
fcmovnbe
nop
sbb
mov
leave
mov
fidivrl
push
and
sbb
test
das
add
lret
add
xlat
jns
test
and
and
mov
push
out
shrl
pop
fnstenv
das
mov
xor
xchg
pop
lea
fsubr
and
mov
adc
int3
jp
movsb
es
lret
cld
jae
or
dec
addr16
mov
adc
adc
fnstcw
cmc
arpl
push
push
mov
insb
test
cmpsb
enter
sub
in
popf
in
std
pop
jl
sub
fnsave
fwait
cmp
mov
loop
sahf
ficoml
xor
xor
lret
mov
icebp
xchg
arpl
xchg
cli
xchg
xchg
inc
sub
sbb
lcall
mov
sbb
negb
inc
arpl
scas
push
push
mov
or
in
add
mov
in
xlat
mov
mov
push
inc
inc
out
aaa
jns
pop
pop
adc
xor
hlt
movsl
xlat
jno
cld
notl
adc
rol
inc
sub
mov
xor
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
aam
in
xchg
lahf
jl
lret
jl
pop
pop
mov
or
inc
mov
mov
xchg
icebp
mov
stc
pop
adc
leave
in
sub
in
sti
lahf
test
test
cwtl
loop
mov
leave
mov
cmp
cmp
xchg
lcall
push
ja
fldenv
daa
adc
test
addb
pop
pop
lret
call
setg
ja
shll
mov
or
neg
adc
iret
jl
aad
testb
jb
cmp
jl
test
pop
and
pop
in
data16
and
and
xchg
sub
cli
fisttpl
scas
fiaddl
pop
repnz
xlat
mov
jno
out
imul
aaa
leave
pop
mov
mov
mov
cmp
mov
ret
das
test
rorl
sub
pop
cmp
mov
xchg
sbb
sbb
cmp
mov
cmp
sbb
cli
jne
xor
xor
push
lcall
jb
and
xor
stc
movsl
pop
xchg
pop
filds
mov
jg
fwait
insl
jle
sub
cmp
movsl
dec
aam
stc
nop
dec
je
movsl
cmpsl
push
mov
loopne
or
dec
orb
iret
insl
out
dec
lods
lret
xor
stc
cmp
lea
push
lahf
out
lock
mov
lds
test
push
inc
lea
incl
rcl
inc
xchg
stos
inc
push
fnstenv
out
add
mov
or
jnp
pop
ret
aam
cmp
cli
sub
lahf
lock
mov
cwtl
fnstenv
out
sbb
mov
cmp
add
leave
or
add
test
push
mov
jns
stos
mov
lods
sub
sti
xchg
mov
and
icebp
push
int3
xlat
enter
cld
push
nop
stos
push
cli
mov
xlat
dec
cli
mov
in
dec
mov
movl
cld
and
cli
xchg
call
outsl
mov
fsubs
jo
movsb
xlat
mov
ss
sub
cmp
out
outsl
outsb
push
xchg
sbb
call
addr16
pusha
dec
dec
int3
in
adc
mov
mov
mov
test
mov
or
add
std
mov
pushf
jmp
xor
lock
inc
mov
fcomps
lahf
xchg
xor
mov
sub
mov
mov
mov
push
mov
cmpsl
pop
cmc
mov
in
hlt
mov
cwtl
fadd
xor
and
es
jo
sbb
dec
pop
dec
jmp
and
dec
jl
daa
mov
mov
fldt
inc
scas
outsb
dec
idivl
lcall
shrl
cmpsl
testb
mov
pop
sbb
and
rol
repz
in
mov
or
data16
pop
lods
arpl
cmpsl
insl
adc
popf
pop
mov
insb
loope
cwtl
jle
sbb
mov
cwtl
iret
cmp
ja
lret
dec
and
push
sub
xor
jg
enter
das
loop
aas
mov
sti
xor
xor
jg
jb
sahf
push
sub
mov
arpl
mov
out
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
mov
hlt
outsl
cwtl
jl
lret
jl
je
lcall
push
enter
dec
inc
push
stos
shr
popa
jbe
ja
outsl
in
adc
ja
outsl
adc
out
sub
test
filds
xlat
out
push
ret
ss
lahf
dec
xchg
loopne
lcall
arpl
mov
xchg
loope
lahf
pop
and
mov
cmpsl
mov
mov
mov
js
xchg
mov
repz
mov
jbe
test
rol
pop
jmp
push
jno
mov
andb
icebp
pop
test
lahf
adc
data16
mov
sti
or
repz
mov
popf
leave
xchg
mov
mov
imul
sarb
inc
cli
pop
fildl
loop
popa
mov
mov
sbb
jno
add
cmp
add
lods
icebp
pop
mov
sub
xor
enter
jle
xchg
jg
sar
xor
nop
lods
sbb
lcall
popa
outsl
or
aad
aam
imul
cmp
stos
icebp
movsb
push
push
in
add
xchg
cli
cld
fucomi
cmp
cmpsl
lods
aam
gs
add
and
push
int3
cs
add
ja
aam
adc
push
xchg
or
inc
push
mov
test
pop
cmp
xchg
addr16
mov
aas
sbb
push
gs
lcall
mov
fdiv
and
inc
xchg
pop
movsl
sbb
jmp
xor
jae
fistpll
outsb
imulb
nop
xchg
cmpsl
mov
out
insl
imul
adc
mov
xchg
in
mov
out
adc
int3
clc
cmp
adc
lcall
and
mov
xor
cmp
push
cmc
cli
test
int3
xor
push
rcll
in
hlt
xchg
mov
lods
repz
das
push
rorb
mov
sbb
add
cld
or
dec
adc
jg
dec
cli
lret
add
lds
add
fbstp
jb
inc
cli
dec
mov
inc
xchg
xor
mov
test
mov
push
xor
jg
dec
jne
out
push
jb
addr16
jp
imul
outsl
xchg
xor
add
push
pop
or
roll
loope
fcomps
cld
pop
pop
into
je,pt
cmpsb
notb
xor
adc
pop
pusha
mov
sub
repz
testl
mov
cmc
daa
stos
fmull
sub
hlt
inc
xor
mov
xor
or
je
cwtl
jne
mov
push
lcall
adc
jmp
dec
xor
dec
popf
lock
lret
lret
rcrb
dec
popf
mov
fnsave
rcrl
dec
sub
jb
cltd
inc
adc
into
into
mov
ja
inc
mov
ret
stc
ss
cmp
mov
xor
jnp
std
aas
jp
push
rcrb
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
data16
adc
lds
jl
test
cmc
push
idivb
lds
inc
inc
dec
push
pusha
mov
mov
and
sub
repz
sbb
ret
sub
xchg
and
add
mov
add
cmc
es
das
cmpsl
mov
dec
lock
imul
jmp
jae
stc
xor
js
xor
inc
in
push
loope
jo
inc
mov
sbb
stc
cmp
mov
mov
outsl
pop
imul
dec
test
mov
jp
mov
push
clc
mov
loop
sarb
sbb
sbb
push
shlb
test
pop
cltd
out
iret
fisttpll
shll
cmc
adc
inc
fmuls
mov
mov
or
gs
mov
test
rorl
xor
or
repz
mov
rorl
xchg
sub
pop
push
mov
mov
popl
push
jnp
xor
fstpt
std
adc
fwait
cmpsb
jl
inc
dec
mov
cmp
lds
inc
popf
mov
jbe
adc
subb
test
test
mov
gs
xor
mov
add
aaa
add
shl
jp
mov
out
sahf
scas
or
loopne
mov
inc
lock
mov
push
clc
sub
in
adc
sbbl
adc
ljmp
mov
movntps
cmpsb
mov
inc
fsubrs
sub
shll
sub
call
mov
andb
imulb
mov
mov
xchg
setnp
stc
sub
jbe
pop
dec
shll
mov
shrb
sub
fsubrl
out
jne
pop
mov
cld
mov
bound
clc
mov
dec
adc
jno
sbb
xchg
mov
and
ljmp
pop
arpl
aam
xlat
jp
stc
jo
cmp
stc
mov
add
inc
pop
subb
std
push
mov
iret
arpl
sub
loope
adc
fs
stos
inc
mov
mov
mov
pop
pop
push
xor
ss
inc
test
fs
aas
mov
adc
sar
xchg
lea
dec
cmp
ss
pop
dec
push
pop
lea
outsb
inc
mov
imul
jae
das
jmp
jge
push
push
pop
test
push
inc
jl
jp
mov
movsl
inc
out
xor
cld
fistpl
or
push
fcomps
push
pop
xor
rclb
mov
stos
movsl
push
jne
dec
inc
in
or
data16
add
adc
fsubrs
out
in
push
repz
push
inc
jns
xor
repnz
or
dec
or
fildll
dec
aam
ja
es
sti
mov
pop
push
xor
cmpb
fidivl
mov
inc
xor
inc
jo
insl
pop
lcall
add
fists
jmp
addr16
ret
mov
inc
cs
dec
push
and
nop
out
add
sub
aam
xchg
mov
mov
cmpsb
std
pop
je
push
xchg
cmp
xor
or
lahf
mov
ret
jnp
push
add
ret
adc
adc
inc
fldl
dec
inc
ss
jge
and
add
roll
add
push
aam
jns
pop
or
jns
jl
out
shll
push
nop
ljmp
jle
jno
lahf
push
mov
mov
push
cmpsl
out
movsl
cwtl
jae
adc
shr
lret
pop
arpl
sbbb
dec
lea
cmp
adc
pusha
adc
sub
leave
popa
fildl
aaa
shrb
test
adc
gs
ret
aas
inc
sbb
inc
test
pop
mov
mov
cmp
call
insb
jmp
mov
cmp
jno
sbb
pop
int
add
or
jmp
jns
loopne
push
idivl
jb
dec
xchg
cmp
mov
jo
lods
pop
add
push
out
call
and
imul
out
sbb
out
cmovnp
sub
mov
int3
sarb
dec
scas
pop
adc
and
mov
sbb
stos
mov
inc
and
fists
push
cld
mov
imul
icebp
lret
jo
int
sbb
mov
loopne
xchg
sub
mov
xor
gs
in
adc
mov
aaa
loopne
or
and
mov
imul
aad
inc
pop
pop
cmc
outsb
lods
icebp
dec
std
out
into
insl
test
xor
xor
into
aaa
adc
pop
popf
jmp
stos
aaa
rolb
test
lods
outsl
mov
pop
xchg
push
je
inc
jae
pop
sahf
adc
lods
mov
jecxz
mov
jae
jnp
mov
shlb
push
inc
call
mov
xor
insl
inc
loopne
imulb
ja
or
dec
cwtl
adc
jmp
and
push
aas
stc
jo
jbe
fstps
pushf
xor
push
fiadds
mov
xchg
loopne
add
hlt
hlt
aas
cmpsl
dec
mov
sbb
xchg
sub
jno
sti
add
sarb
faddl
add
enter
mov
cmpsb
dec
cmp
adc
mov
lock
or
dec
or
mov
jnp
ss
xor
faddl
pop
cmp
in
xchg
mov
dec
cmp
stc
sbb
cmpsl
fdivs
int
and
or
cmpsl
leave
fidivl
fwait
int
push
dec
out
repz
imul
dec
int3
dec
imul
or
ror
ret
adc
sbb
jmp
dec
mov
or
rcl
adc
push
aam
lcall
xor
mov
test
outsl
outsl
push
cmp
ret
aaa
xlat
es
mov
subl
ret
sub
mov
aas
add
add
shlb
cmp
jl
insl
xchg
adc
jmp
call
aaa
in
shll
pop
out
cmc
into
mov
push
mov
push
sbb
stos
cmp
push
cmp
adc
sbb
scas
js
inc
jo
cltd
mov
hlt
rorb
cltd
sbb
shrb
mov
pop
dec
cli
mov
pushf
mov
push
and
mull
xor
cmpsb
pop
test
rcrb
icebp
sbb
push
daa
mov
or
pop
cmpsb
fidivs
or
pop
bound
mov
adc
clc
dec
add
mov
in
lods
gs
jp
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
fcomps
jl
jns
jl
push
pop
xor
fsubs
jo
xchg
or
popl
mov
scas
in
mov
jb
dec
lods
inc
shlb
mov
shlb
subb
dec
jne
mov
data16
pop
add
mov
dec
xor
andl
repz
clc
or
cmp
inc
adc
and
xlat
jmp
mov
loope
movsl
inc
cmp
lods
aas
sbb
insl
inc
sbb
pop
jnp
adc
mov
aam
sub
adc
bound
adcl
out
daa
sbb
addr16
jnp
or
js
or
add
push
add
and
push
imul
lea
lret
inc
enter
mov
inc
clc
adc
dec
mov
scas
mov
ja
iret
push
loope
lahf
sbbl
push
and
fsubs
test
addr16
insl
arpl
fmul
mov
les
lds
xchg
push
sbb
mov
sub
adc
rcll
inc
outsb
push
cmp
pop
add
adc
les
adc
scas
mov
mov
jae
cwtl
sub
mov
nop
nop
fcmovb
pop
icebp
andl
nop
call
iret
in
cli
xchg
add
arpl
dec
or
and
pop
or
push
sbb
imul
lret
xchg
push
mov
mov
imul
pop
mov
mov
pop
jo
aaa
push
dec
enter
ror
and
jmp
push
in
lret
insb
push
cmc
arpl
push
ret
xchg
mov
bound
cwtl
push
dec
scas
rcrl
xor
fdivl
xchg
lock
jns
pop
ret
hlt
fnstcw
div
loopne
flds
pop
cmp
sbb
stos
inc
jecxz
push
adc
lret
push
or
outsl
fldt
jle
mov
imul
call
stos
cmp
stos
shl
scas
sbb
cmp
inc
pop
jnp
inc
in
out
push
mov
push
cmpsb
sub
popf
or
sahf
pop
icebp
lea
pop
jg
xor
xchg
jmp
pop
movsl
in
mov
loope
lret
sbb
xchg
in
rol
pop
add
mov
fmuls
inc
xlat
xor
push
jg
xchg
out
arpl
and
jmp
int
insb
leave
dec
je
xor
and
scas
sbb
lods
xchg
inc
clc
jbe
jecxz
das
or
popa
je
add
int3
pop
inc
xchg
fwait
jecxz
test
xor
adc
add
les
aam
jo
loop
push
ret
ret
loop
mov
sbb
pop
fcomps
add
inc
mov
jne
or
mov
inc
in
inc
fwait
jge
stos
xor
mov
into
mov
int3
loop
mov
adc
inc
outsl
push
imul
add
cmp
leave
js
sub
xor
lahf
cmp
out
sub
leave
fsubr
outsb
push
mov
sbb
mov
jmp
sub
adcl
or
inc
mov
pop
mov
cwtl
xor
mov
mov
leave
pop
lock
sbb
fwait
sub
mov
lcall
xor
add
mov
jmp
push
mov
test
jno
lea
ds
jl
adc
outsl
inc
inc
call
loopne
pop
bound
scas
xchg
imul
adc
pop
popf
pushf
pushf
cmp
cwtl
push
lahf
sbb
mov
jno
mov
icebp
mov
dec
jno
push
jecxz
add
cmp
mov
pop
xor
jle
fnstcw
add
xor
push
lock
lret
andl
cli
adc
or
ror
js
lcall
mov
inc
pusha
sahf
sbb
fwait
and
inc
popf
add
notb
push
cld
mov
dec
out
jo
add
mov
cmp
rcll
rorb
xchg
inc
in
sarb
push
or
fstps
xor
shlb
test
sbb
insb
mov
xchg
mov
jle
movsl
aad
outsl
sub
sub
cmp
xchg
cmpsb
mov
mov
push
loope
pushf
stc
add
xchg
dec
mov
call
push
inc
add
pop
xlat
lea
aas
mov
mov
jae
out
mov
into
inc
cmp
push
aas
bound
into
lods
sub
cmpsb
cmp
cmp
adc
orl
mov
sub
mov
out
jmp
mov
pop
push
stos
add
nop
mov
pop
and
clc
sub
mov
andl
pusha
mov
mov
loope
xchg
pop
mov
mov
push
bound
and
adc
mov
dec
dec
xor
mov
pop
imul
jbe
xchg
push
mov
dec
scas
sub
pusha
push
xor
testl
mov
jo
lock
inc
xchg
loopne
inc
push
lret
jno
jno
fldenv
repz
lret
es
cs
adc
dec
mov
and
jae
push
js
enter
pop
lret
adc
dec
lods
sub
enter
jge
pop
add
cld
adc
je
mov
adc
repz
xchg
mov
add
arpl
xor
xchg
decl
cmpsl
repnz
movsb
mov
xor
mov
sub
pop
cwtl
mov
mov
mov
sub
and
xor
test
push
xor
aas
lret
push
arpl
adc
lea
xchg
mov
xchg
paddusw
insl
push
int3
and
jl
mov
mov
dec
push
mov
jge
insb
cmp
adc
dec
testl
leave
jb
lds
mov
add
cld
bound
repz
dec
push
cmp
lock
and
xchg
in
sahf
xchg
sub
enter
aaa
jns,pn
adc
sub
rcrl
bound
int
cmp
jmp
test
movsb
cmp
bound
subl
outsl
xchg
jo
sbb
pop
xchg
cmp
ss
sbb
add
dec
aad
stc
mov
jae
ljmp
cmp
fiadds
in
loopne
jge
mov
je
out
adc
shr
in
xorl
decb
orl
sub
xorb
xorl
mov
mov
add
jne
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
push
popa
stos
jl
cmpsl
jns
jl
icebp
je
xor
xchg
dec
xor
popf
push
leave
jg
add
gs
cmc
mov
mov
inc
jmp
mov
inc
fldl
sbb
or
xchg
pop
mov
psubusw
scas
or
dec
jo
pop
xor
cmp
cmc
pusha
xor
popa
divl
daa
dec
sub
push
mov
cli
cmp
ja
or
les
or
jne
xchg
jmp
jmp
mulb
arpl
addr16
pop
mov
push
lods
inc
and
shr
stos
jnp
sub
mov
cmp
fcmovne
les
xor
sub
sub
inc
dec
lret
fidivl
add
cmp
dec
testl
xchg
aas
mov
aaa
push
sbb
xchg
pop
xchg
add
and
scas
push
cmpsb
sub
popa
test
mov
adc
cltd
and
addb
ss
cmpsb
lret
cmp
sbb
movsb
idivb
mov
imul
cmp
psubusw
cmp
xchg
xchg
push
mov
sbb
cmp
mov
lds
adc
pushf
aaa
or
push
sbb
lret
mov
pop
in
test
fsubr
cmp
add
mov
jl
aaa
into
jns
bound
test
sbb
sbb
pushf
mov
xchg
test
rcll
inc
in
inc
rcrl
xor
sarb
lock
jecxz
mov
outsb
in
es
sbbb
add
pop
addr16
push
lret
and
adc
dec
test
jp
repnz
roll
push
pop
call
or
add
addr16
test
sub
clc
push
cmp
push
sbb
fisttpl
jno
inc
adc
ret
bound
lods
sbb
xchg
mov
inc
xor
xchg
scas
scas
iret
or
sub
jg
mov
xchg
mov
outsl
iret
pop
xor
sbb
inc
dec
fwait
mov
bound
outsb
push
int
cmp
into
mov
push
sahf
jmp
add
cs
mov
jbe
and
mov
lcall
sub
lcall
shl
push
std
out
lods
mov
dec
mov
movsb
test
sub
iret
push
stos
jl
jmp
jno
stos
scas
outsl
mov
add
dec
loop
inc
jae
xor
shl
add
dec
sub
dec
test
sbb
inc
adc
aas
orl
cmp
lcall
jl
mov
or
mov
aam
fdivrl
in
cltd
sub
and
dec
adc
and
dec
je
mov
mov
js
mov
xchg
xor
push
out
push
push
or
outsb
add
cmpsl
enter
or
push
aas
xchg
fs
xor
test
daa
adc
xchg
xchg
pop
mov
mov
pushf
fldl
mov
xchg
mov
outsb
scas
add
lahf
mov
jns
out
stos
mov
cmp
push
int3
mov
push
es
inc
push
imul
and
cmp
negl
dec
lret
imul
lds
or
mov
imul
lods
jmp
sub
js
and
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
mov
mov
jg
cmpl
mov
gs
pop
dec
popf
fs
jmp
jns
adc
jnp
gs
andb
incl
jl
xchg
mov
repnz
push
push
dec
inc
jmp
jnp
in
out
sahf
ret
imul
mov
fs
add
pop
outsl
and
orl
jnp
xor
iret
out
clc
lods
mov
cmpsl
adcb
clc
lret
mov
lods
insl
js
push
aaa
stc
imul
sub
pop
mov
dec
movsb
fcoml
mov
mov
scas
ja
out
cmpsb
mov
call
arpl
outsl
pushf
jp
xor
rsqrtps
jnp
sbb
lcall
inc
imul
push
stos
xchg
push
jecxz
inc
sahf
rcr
repnz
push
loop
jae
addr16
imul
imul
ljmp
push
add
sbb
popf
xchg
and
push
in
decl
xchg
cmp
shl
sbb
jnp
lds
sub
jno
movsl
insb
gs
mov
or
shl
jb
mov
outsb
mov
push
pop
cmpsl
xor
and
sub
popl
add
sbb
push
jmp
sbb
andl
test
xor
sbb
jae
aas
popl
adc
dec
dec
mov
jb
jae
fwait
and
sub
xor
jb
fsubr
mov
aad
pushf
stc
loope
cld
pushf
xchg
and
cmp
mov
cltd
das
test
adc
movsl
out
inc
rclb
nop
push
insl
xchg
xor
mov
and
gs
inc
mov
scas
icebp
inc
std
aad
cmc
cmp
out
clc
cmc
out
and
popa
mov
add
mov
jnp
fcompl
pop
test
rcl
mov
mov
xchg
xchg
push
sbb
push
jno
lea
lcall
jl
pop
repnz
mov
mov
mov
mov
inc
lock
iret
clc
jmp
adcl
outsl
sbb
or
cmp
ds
jge
and
sub
sub
mov
xchg
mov
mov
add
add
cwtl
xor
bound
mov
clc
sub
pop
loope
sub
movsl
push
push
cmp
adc
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
in
sbb
mov
jl
jle
jl
mov
aam
or
je
and
cmp
test
sahf
cmp
pushf
ss
pop
fistpl
and
das
lea
sbb
mov
fs
sbb
mov
fsubrl
mov
ljmp
je
sarl
inc
mov
xchg
jns
movsb
or
les
fwait
adc
mov
aas
aaa
std
add
pop
scas
in
frstor
push
xor
cs
stos
cmp
jo
cli
pop
jns
sbb
push
icebp
jne
loopne
or
scas
dec
and
cmp
fdivr
push
xchg
test
jb
and
push
sbb
sub
add
jnp
in
jp
call
pop
mov
push
add
add
or
movsl
popa
rclb
lock
inc
out
xor
jmp
outsb
lods
add
push
lock
and
xor
pop
or
inc
setno
xor
inc
mov
nop
test
pop
movsb
adcl
loopne
or
jl
orl
imul
addb
pushf
clc
sub
je,pn
jns
iret
jge
jge
shrl
push
movsb
inc
mov
into
pop
rorb
scas
xchg
push
idivl
sbb
jbe
and
loopne
sbb
out
repz
dec
lret
mov
jmp
xchg
jg
fisubrs
mov
fadds
jno
fwait
push
dec
imul
cwtl
push
and
and
mov
movsb
pop
loop
xchg
push
jae
push
push
push
movl
out
sarl
es
lods
gs
inc
mov
inc
movd
sar
lahf
enter
add
cltd
mov
cmp
pop
jmp
add
jge
mov
pop
mov
and
out
popf
pusha
std
pop
add
pop
adc
iret
out
xlat
pop
or
lret
push
int
and
and
pop
cmp
add
jns
xchg
out
pop
pop
inc
add
push
pop
sub
add
dec
cli
add
mov
ret
sahf
pop
mov
outsw
mov
les
mov
jns
mov
pop
xor
test
push
add
sahf
xor
iret
dec
push
cmp
in
int3
ljmp
push
or
dec
sbb
pop
jo
cmp
mov
mov
repnz
repz
pop
sarl
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
push
xchg
jl
jle
jl
mov
aam
ja
mov
mov
in
push
mov
adcl
lret
dec
daa
or
daa
dec
repnz
sub
je
test
inc
cmpsl
cmpsb
cmp
jo
cmpsb
sahf
adc
int3
inc
xor
int3
jns
ljmp
mov
jns
in
inc
cmc
ss
add
or
push
mov
xchg
or
fidivrl
movsb
sbb
lret
jnp
fcoml
push
cmpsl
lcall
add
pushl
adc
out
mov
pop
pop
das
inc
shr
sarb
sbbb
jae
rol
daa
int3
out
mov
adc
inc
xchg
mov
add
mov
ja
outsb
sbb
mov
mov
xchg
cltd
sbb
sub
or
das
lcall
dec
inc
mov
hlt
fwait
xor
ss
adc
pop
mov
repz
stos
nop
inc
push
mov
pop
nop
ficoml
out
ret
jno
adc
mov
push
ss
out
in
mov
scas
mov
cmpsb
adc
push
mov
outsb
or
shll
adc
adc
nop
sub
sbb
xor
insl
push
mov
or
xor
push
pop
jle
inc
dec
in
mov
rcll
sub
stos
or
cltd
das
movsl
push
enter
mov
jl
mov
fsubrs
dec
sbb
push
mov
jmp
pusha
push
hlt
mov
inc
ljmp
and
cmpsl
cmp
loopne
adc
mov
cmpsb
ror
mov
inc
hlt
ss
cltd
cwtl
push
cld
lds
test
aaa
inc
pop
sbb
ss
sbb
aas
fiaddl
ret
movsl
push
lahf
xchg
or
movsl
sub
shl
sbb
jno
adcb
arpl
in
pop
mov
movsl
inc
ret
xchg
or
dec
jmp
movsb
repnz
adc
fcmovnbe
lea
arpl
dec
int3
in
in
inc
fistps
fiadds
sbb
fsubrl
mov
les
push
sub
jge
aaa
int3
mov
pop
dec
scas
aam
out
cmp
adc
popf
loopne
jecxz
dec
ja
in
add
arpl
daa
or
cmp
xor
popa
xchg
lods
hlt
sbbb
arpl
inc
repnz
xchg
or
sbb
cli
or
cmpsl
or
xchg
inc
adc
push
mov
lret
jmp
xchg
push
adc
rorb
push
add
add
xor
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
lock
pushf
and
jg
jl
lretw
mov
jns
out
test
cmp
push
mov
xchg
mov
mov
pushl
cmp
adc
rcll
sub
jo
imul
inc
sahf
push
inc
aas
in
pusha
nop
jge
popf
in
xor
jmp
jg
or
mov
xchg
ficoms
js
into
outsb
jno
cs
sub
int3
dec
pop
ss
jmp
testb
push
sub
push
adc
push
cmpl
loopne
sbb
mov
loop
fs
jle
vaddss
push
dec
bound
sbb
pusha
std
adcl
rcll
scas
insl
push
arpl
movsb
xor
cwtl
out
xchg
dec
in
xchg
pushf
push
mov
jno
movsl
sub
cmpsb
mov
pusha
repz
jl
mov
adc
jecxz
idivl
and
out
call
and
cs
aas
out
pop
scas
mov
xchg
dec
inc
push
dec
push
es
fmuls
mov
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
fdivrs
jl
jg
jl
ss
pop
xchg
sti
je
jl
lahf
loope
xchg
cld
or
adc
cltd
les
mov
xchg
cmpl
mov
jp
scas
jno
cmp
adc
pop
stos
lods
pop
mov
mov
aaa
test
or
shll
push
push
sbb
pusha
mov
cli
dec
gs
dec
clc
xor
fs
mov
test
gs
clc
std
cltd
adc
push
dec
int3
xchg
out
xchg
jbe
or
xor
push
les
mov
sub
jb
insl
loope
dec
or
enter
imul
mov
in
ja
pusha
xchg
ret
cwtl
aam
cbtw
daa
loop
push
fsubrs
mov
fisubs
pop
jecxz
insb
movsb
mov
inc
mov
scas
lods
dec
in
fbstp
dec
stc
inc
add
or
inc
inc
sbb
push
test
and
or
movsb
or
pusha
and
pushf
mov
mov
pusha
test
cmpsl
mov
lods
scas
mov
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
movsb
rcrl
jl
adc
jl
data16
and
add
mov
cli
mov
push
inc
clc
add
push
adc
jnp
outsl
pop
cld
mov
xor
pop
dec
fucom
data16
fidivrl
insb
ror
mov
cmc
clc
mov
dec
je
into
sub
stos
clc
mov
bound
push
adc
fisttps
pop
das
xor
call
mov
jbe
gs
in
mov
mov
iret
sarl
sub
cwtl
enter
ja
shrb
cmc
loopne
inc
sub
mov
test
xor
add
dec
icebp
mov
cmp
repz
fsubrl
jne
mov
outsb
and
mov
dec
mov
xchg
leave
mov
push
test
jns
pop
sub
je
aaa
shr
leave
stc
jo
sub
pop
lods
mov
push
lods
jnp
jmp
out
mov
ljmp
xor
loope
push
into
add
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
test
mov
jl
sub
add
int3
or
cmpsl
lahf
lahf
clc
jbe
jge
inc
je
cli
jbe
lret
xchg
cmp
shlb
inc
js
adc
pushf
xor
jbe
fs
imul
cld
push
mov
pop
push
xchg
push
inc
mov
sub
cmp
cmp
dec
movq
adc
mov
repz
lret
jne
or
cmp
fwait
pop
test
es
jo
inc
mov
and
ficoms
and
in
ss
test
jae
mov
or
ss
dec
jmp
aad
mov
and
or
add
xadd
jns
jmp
dec
iret
push
mulb
lods
dec
xchg
cmpsb
inc
hlt
int3
loopne
push
push
icebp
repnz
pop
cli
and
jg
mov
lret
data16
xor
inc
movsl
in
ret
mov
xchg
sbb
xor
push
sbb
lds
mov
inc
or
in
rorb
mov
add
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
jecxz
rcll
inc
jl
adc
jl
cmpsb
inc
xchg
lcall
push
fwait
add
cli
aam
or
test
sub
push
inc
mov
push
idivl
rcrl
xor
cmp
cwtl
mov
aas
push
and
stc
jg
fdivs
lock
and
mov
mov
jle
mov
or
fsts
bound
cltd
out
out
arpl
mov
xor
and
cmpsb
lea
out
mov
inc
fucomp
adc
cmpsb
lret
push
insb
enter
hlt
xchg
cmp
fwait
rcrl
fmuls
shlb
jns
mov
aad
aad
sub
lods
sub
jp
inc
ret
lods
xorb
sbb
stc
jmp
or
sbb
and
xchg
cli
mov
test
out
mov
xor
jge
ja
imul
arpl
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
and
push
aaa
inc
jl
adc
jl
mov
mov
xchg
gs
jg
fildll
es
sarb
stos
pop
movsl
lds
out
xchg
sub
test
adc
and
negl
and
rcll
imul
pop
ljmp
push
jl
mov
lods
xchg
iret
clc
push
xchg
inc
sub
xchg
insl
cli
sbb
push
in
push
js
std
pop
mov
fisubs
ss
push
in
outsb
sub
xchg
lea
mov
xor
in
imul
mov
jmp
mov
xor
push
les
push
mov
scas
mov
bound
fidivrs
or
divb
iret
cmc
aaa
lret
iret
xchg
les
repz
inc
into
jns
pop
fistps
in
lret
or
movsl
decl
xchg
inc
stc
andl
test
pop
iret
push
scas
mov
jmp
jb
sbb
inc
mov
sbb
outsb
sub
cmpsb
inc
iret
enter
lahf
cs
sti
jbe
push
sbb
push
leave
mov
push
test
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
lods
aad
jl
adc
jl
loop
clc
sarl
insb
incb
dec
icebp
jle
pop
shlb
inc
push
adc
into
mov
rolb
sbb
sbb
scas
and
cmpsb
pop
inc
add
mov
push
mov
jle
and
xchg
in
decb
xchg
lahf
rorb
pop
testl
nop
or
es
in
push
lods
cmp
shl
bound
pushf
mov
jp
mov
dec
and
dec
fwait
leave
test
sarl
rorb
int3
or
lods
outsl
subb
es
arpl
test
stos
hlt
mov
addr16
std
cmp
dec
xchg
stc
popa
stos
add
nop
mov
dec
sti
mov
xchg
lods
hlt
and
add
mov
xor
into
sahf
lods
mov
test
mov
lods
cwtl
sub
into
mov
jo
movsl
cmp
and
rcr
addr16
sahf
ljmp
sub
ffreep
ret
sub
adc
add
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
add
pop
jmp
jl
adc
jl
dec
mov
sub
insl
push
cmp
pushl
movsb
je
jns
and
stc
xor
xor
adc
mov
aas
call
jns
jmp
xor
pop
gs
fdivp
mov
sub
aas
xchg
loopne
and
pop
ljmp
mov
dec
jl
push
jmp
jae
dec
push
jnp
sbb
js
sbbl
mov
xchg
add
mov
daa
notl
fstl
sti
and
xor
arpl
mov
pop
add
test
call
cmp
sbb
jo
fidivl
lds
mov
sbb
adc
mov
in
xchg
insl
cli
popa
pop
add
jle
jo
sub
sbb
decl
mov
push
inc
test
inc
out
push
dec
in
std
xchg
shll
mov
xchg
xchg
mov
push
xchg
mov
mov
ror
repz
xchg
or
xor
ficompl
or
enter
sti
decl
add
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
stos
rcrl
adc
jl
in
mov
aad
mov
stos
inc
daa
mov
das
push
add
cmp
xchg
out
mov
jg
test
ret
rcrl
adc
call
sub
pop
adc
sub
or
adc
outsb
mov
and
imul
xchg
or
sbb
adc
mov
sbb
adc
lcall
push
or
outsl
pusha
push
and
xor
loop
mov
addl
adc
loop
jecxz
adc
loop
iret
dec
bound
jp
test
js
test
aaa
lret
sti
and
leave
push
pop
sub
sarb
aam
andl
or
aaa
sbb
xchg
adc
addr16
sbb
imul
cmp
add
iret
out
lret
lods
add
sti
sbb
mov
and
jle
jle
and
adc
sub
add
outsb
mov
scas
push
mov
and
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
adc
jl
jg
jl
pop
leave
adc
xchg
aad
ret
mov
dec
pop
in
lahf
dec
pop
daa
lea
xor
xor
add
adc
and
push
lea
fdivr
jo
adc
jne
ja
cmp
test
fbstp
mov
push
pushf
aam
mov
xorl
jnp
mov
test
cli
cwtl
ds
jo
add
and
imul
sub
jns
imul
or
push
mov
or
mov
inc
cmp
rcl
mov
jmp
fwait
dec
outsl
sbb
cmpsb
xlat
push
out
hlt
push
cmp
xor
fcompl
dec
hlt
shll
mov
imul
pusha
and
and
xor
or
outsl
mov
mov
jno
out
pusha
jp
mov
pop
xchg
fistpll
push
dec
xor
imul
adc
test
cli
mov
movsb
test
jnp
lcall
push
jnp
push
push
xchg
jno
jb
insl
inc
scas
fldl
mov
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
ja
xchg
orb
jl
jg
jl
jp
xchg
mov
jle
mov
ss
and
std
lret
dec
in
xchg
xchg
cld
jle
or
lahf
mov
jg
outsb
fadds
in
in
xchg
jae
aam
jns
sub
fcomip
push
lret
sub
sub
xorl
push
cmp
ljmp
movsl
pop
sub
repnz
rolb
push
xchg
pop
xchg
popa
popa
push
aad
mov
mov
iret
arpl
bound
push
inc
lods
sbb
mov
jb
mov
mov
sti
push
add
adc
cld
cmovnp
mov
mov
mov
pop
popa
sti
or
dec
mov
mov
lea
sub
cli
add
push
cmpsb
pop
ret
ss
push
xchg
xchg
lds
push
mov
mov
add
dec
mov
dec
jo
xor
xor
push
mov
jp
test
andb
adc
imul
add
in
ja
and
jmp
pop
in
leave
into
inc
jle
int3
test
adc
bound
fs
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
xchg
paddsw
add
pop
add
add
imul
xlat
mov
outsb
xor
jb
stos
add
aam
cmc
addr16
pop
mov
in
xchg
xchg
lret
mov
imul
hlt
sbb
jbe
test
mov
in
mov
jecxz
pop
mov
call
mov
jp
lahf
jl
dec
push
pop
xor
fs
mov
pop
scas
jns
sti
rcll
inc
andb
insl
mov
dec
mov
push
xchg
mov
cmpsl
cs
movsl
xor
xchg
push
mov
mov
cmp
xlat
xor
sbb
ret
and
adc
mov
add
stos
adc
sahf
mov
lret
jp
lds
pop
enter
push
imul
mov
out
jno
xlat
bound
aaa
outsb
cwtl
push
pop
mov
fimuls
in
filds
pop
ficoml
in
jle
mov
cmp
iret
add
pop
add
add
idivl
dec
or
call
in
jb
call
dec
or
mov
call
sub
shlb
jmp
test
push
lret
stos
mov
ret
stos
shll
ror
and
nop
inc
jb
ret
pop
scas
adc
int
xor
insl
inc
dec
ljmp
loopne
sub
pop
cwtl
sub
pop
push
out
jb
insl
enter
push
lock
pop
inc
or
in
rorb
leave
dec
dec
dec
and
sbb
rcrl
shl
push
cmc
insl
outsb
hlt
sub
xor
call
mov
imul
lds
xor
add
repz
inc
push
xchg
fildll
fmull
mov
xor
std
or
mov
ljmp
imul
clc
dec
xchg
and
jmp
call
sub
fwait
jmp
insl
outsl
ficompl
pop
xchg
cmp
or
jge
ret
add
add
push
add
sahf
sti
rolb
add
add
add
mov
mov
imul
loop
leave
nop
insl
xor
inc
jae
add
xor
pop
out
divb
xchg
adc
push
dec
gs
loope
lret
xor
in
mov
cmp
iret
sbb
leave
les
data16
leave
cli
cld
cwtl
add
adc
adc
cmp
inc
mov
std
cmc
ja
sbb
test
daa
mov
rcrl
inc
or
fstpt
stos
test
jg
jbe
setne
xchg
xlat
imulb
mov
fidivrl
jecxz
test
pop
mov
outsb
sbb
pusha
test
sahf
stos
or
fdiv
mov
mov
cmp
jl
and
mov
sub
out
jnp
loope
push
jmp
and
scas
lret
pop
cmpsb
mov
inc
jle
scas
xlat
mov
or
mov
cwtl
ss
lods
jb
out
enter
test
dec
pop
push
aad
mov
adc
add
mov
idivb
mov
add
add
pop
add
add
push
push
lahf
inc
call
call
pop
and
mov
cmpsl
jecxz
fildll
cmp
dec
shrl
mov
mov
jmp
push
jle
loop
mov
adc
clc
push
movsb
lds
hlt
cmpsl
add
sti
out
sub
movl
stos
inc
inc
loop
xlat
sub
pop
aas
mov
add
and
adc
mov
xor
or
sub
sbb
cld
aam
hlt
mov
ljmp
mov
mov
dec
cltd
out
rcrb
test
ja
hlt
cld
inc
lcall
js
fsubrl
hlt
add
mov
jno
rorb
ljmp
ss
cmpb
and
scas
inc
loope
repz
dec
jb
cmp
sub
adc
and
testl
sbb
scas
mov
add
pop
jae
or
ss
pop
xchg
mov
lcall
add
push
movq
test
sti
movsb
jo
add
jbe
mov
ljmp
push
mov
adc
ljmp
dec
sbb
lcall
scas
dec
xor
imul
pusha
pusha
push
pop
ret
psubusb
ja
pop
mov
inc
scas
fsubs
xchg
cs
sub
fs
sub
pop
mov
je
ss
pop
mov
test
ret
jae
or
repz
std
fadds
and
or
pusha
mov
fwait
sub
mov
jmp
xor
rcl
push
push
dec
aad
push
in
push
test
mov
cmp
aas
and
rcrl
notl
jb
clc
rcl
je
push
fimuls
and
int3
adc
cmc
mov
pop
push
or
aaa
cmpsl
outsb
out
bound
out
sbb
movsl
cmc
mov
add
cmc
insl
cmc
out
lcall
mov
mov
adc
add
pop
add
add
adc
cwtl
dec
mov
jno
xor
mov
push
sub
pushf
sarb
das
cld
rol
outsb
into
push
cmp
or
sub
inc
mov
pop
push
icebp
sbb
shl
nop
inc
sbb
pushf
enter
mov
cmp
ficoms
fidivrs
sbb
dec
jmp
outsb
jle
push
sbb
cmp
inc
mov
mov
ret
ss
iret
test
and
sbbl
repz
sub
push
pop
mov
lds
jb
mov
pop
lea
adc
xchg
inc
test
xchg
pushf
repz
cmpsb
cmp
push
cmp
out
push
loopne
or
mov
pop
out
fsubs
sgdtl
icebp
outsb
das
mov
pop
daa
fadds
sub
sub
jg
mov
lea
mov
outsl
icebp
int3
cltd
scas
xor
call
xchg
jle
add
outsl
jle
aam
aam
outsl
dec
lret
aad
add
add
add
mov
sbb
leave
or
fdivp
pop
and
lcall
jg
pop
add
std
call
imul
outsl
cmc
adcb
js
sub
xor
bound
scas
adc
dec
mov
scas
push
clc
cwtl
pop
xchg
and
xchg
sub
outsl
fimull
mov
push
xor
icebp
cmp
push
xor
xchg
xor
pusha
mov
mov
and
add
inc
sub
bound
pushf
mov
cld
and
sub
test
sbb
push
push
ja
and
fildl
and
int
fsubl
dec
popf
xchg
or
cwtl
cmpsl
sahf
mov
aas
lret
or
xchg
sub
cmp
out
cli
arpl
popf
jne
and
loope
fcomip
pop
sbb
inc
negb
shll
inc
inc
push
mov
sub
scas
adc
cmp
je
pop
mov
pop
addr16
add
stos
rcrb
mov
cwtl
fbstp
xchg
add
jle
and
scas
sti
jle
sbb
and
push
add
pop
add
add
pop
lock
sub
lcall
jne
pop
out
orl
pop
dec
arpl
mov
scas
cmpsb
test
cltd
or
cmp
fmul
es
aad
movsl
sub
mov
clc
ret
cmp
xor
mov
cmp
repz
or
sbb
mov
jnp
pusha
les
ret
mov
cli
push
sbb
cmp
fstpl
dec
and
jb
pop
adc
lods
stc
pop
mov
addr16
in
insl
ss
movsl
call
jp
adc
or
hlt
jno
jge
insb
dec
pop
push
jmp
insl
rol
andb
push
dec
mov
mov
loopne
inc
xor
xchg
mov
sbb
pusha
cmp
push
dec
mov
ds
je
xor
inc
shll
jg
lds
mov
test
pop
idivb
add
negl
sbb
xlat
add
pop
add
add
adc
in
call
hlt
add
lret
and
inc
and
adc
test
cwtl
in
inc
sbb
test
jno
push
sbb
test
push
adc
divl
push
clc
mov
lock
cmpsb
and
cmpl
not
arpl
dec
adc
ret
inc
inc
sub
sub
repz
add
std
lret
cmp
jae
mov
imul
xor
pop
sbb
and
arpl
xchg
scas
clc
pop
in
and
xchg
lds
pop
mov
fdivr
idivb
pop
insl
cmpsl
roll
icebp
jbe
xchg
cmpsb
push
lods
out
aam
jbe
or
jge
fisubrl
xorb
cld
cwtl
addr16
xchg
lds
jecxz
xchg
push
imull
std
daa
fstpt
lea
jg
pusha
xor
icebp
in
andb
add
xor
push
jl
jle
insb
inc
xor
push
mov
cmp
sub
add
pop
add
add
pop
pop
orb
xchg
icebp
call
mov
movsl
imul
fcmovb
adc
cmp
or
xchg
mov
fstl
inc
pop
repz
xchg
lods
adc
mov
mov
sahf
sub
loope
mov
mov
shrb
sahf
arpl
mov
ret
je
arpl
push
test
mov
imul
es
shrb
insb
fistps
and
roll
inc
cmp
push
std
into
loopne
mov
push
pop
cmp
ds
sub
push
jbe
mov
inc
aaa
mov
jecxz
dec
mov
data16
aam
loopne
dec
or
push
dec
adc
mov
jmp
push
lret
add
push
cmpsl
cmp
inc
inc
pop
out
aam
mov
mov
aaa
aam
mov
or
in
xor
add
fwait
mov
sbb
xchg
cmp
flds
add
add
add
dec
push
mov
pop
loop
aas
inc
xor
mov
inc
add
adc
loope
jg
cmpsb
mov
or
cltd
push
movsl
out
dec
mov
test
cmp
xor
pop
popa
subl
pop
fwait
mov
and
cwtl
xlat
adc
adc
lods
repz
fisubrl
sbb
aaa
vpsubb
inc
mov
cmc
ljmp
ret
sub
xchg
dec
out
imul
sub
push
pop
mov
mov
notb
insb
sub
aaa
std
cwtl
push
and
xor
popf
out
push
xchg
cli
sub
lea
scas
out
orb
jns
loope
cmp
mov
negl
test
adc
stc
out
fucom
lahf
ds
in
lahf
insl
subb
xchg
inc
pop
loopne
push
rcr
or
movntq
dec
pop
push
enter
add
adc
out
subl
add
data16
jne
mov
xchg
ret
push
cmp
add
pop
add
add
in
ss
jnp
mov
mov
xor
lods
pop
emms
mov
pop
in
std
mov
jmp
stos
mov
inc
inc
mov
mov
loopne
fwait
lock
ret
in
data16
pop
push
inc
stc
cmp
stc
push
push
std
loopne
push
scas
inc
into
inc
and
js
and
xchg
iret
lret
icebp
mov
push
mov
roll
cmp
cmpsb
scas
mov
shr
enter
or
jmp
lock
stos
xchg
jae
pushf
push
jbe
sti
push
sub
add
mov
std
mov
shll
test
add
mov
push
arpl
xor
inc
push
xor
rcrl
ss
enter
mov
in
repz
xor
leave
cmp
outsl
int3
cmp
mov
add
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
xor
pop
push
jno
outsl
movsb
push
into
push
add
mov
pushf
adc
xchg
repz
lock
sbb
mov
ljmp
stos
fsubrs
hlt
jle
test
je
pushf
mov
popa
pop
pop
pop
lahf
std
xchg
or
call
movsb
jne
xchg
push
clc
push
jne
inc
rclb
jge
push
and
loop
push
nop
or
in
jecxz
mov
movsb
scas
ds
fisttps
scas
add
lret
pop
lret
jbe
test
es
inc
dec
xor
push
mov
and
and
fmul
gs
inc
iret
mov
inc
jecxz
xlat
cmp
or
jo
movsb
jno
out
jmp
shlb
pop
iret
cmp
sub
dec
dec
mov
jl
push
repz
and
aad
sub
inc
adc
clc
cmp
addr16
nop
sahf
es
ja
ret
pop
adc
scas
xor
inc
push
sub
pop
sarl
lods
std
mov
push
movsl
and
add
pop
add
add
or
push
xchg
cli
into
mov
mov
jl
and
loop
cmp
in
mov
dec
mov
fcmovu
or
in
dec
cmp
add
mov
fldenv
scas
cmp
lods
out
fistpl
sub
cmp
jmp
rcll
mov
sub
jl
bound
mov
aam
pop
insl
jnp
mov
cmp
sub
push
mov
fadds
in
arpl
jne
or
dec
pop
jg
mov
or
pop
in
mov
fcoml
rcl
sbb
jg
push
adc
cmp
ds
out
notl
adc
push
mov
aas
sbb
pop
push
pushf
adc
mov
fsubrl
movsl
xor
mov
xor
mov
sbb
mov
pop
in
pop
sub
dec
add
lea
cmpsl
inc
shr
jno
ljmp
xor
jecxz
mov
insl
lock
std
repz
lahf
dec
ret
add
pop
add
add
or
mov
and
pop
out
adc
xchg
cmp
and
inc
lret
dec
push
dec
int3
jp
jp
clc
push
mov
or
cmovno
cmp
xor
notb
and
scas
ret
sub
cmpsl
insl
mov
jnp
cmp
jp
add
add
in
sti
ficoms
adc
push
sbb
jl
sahf
mov
lock
push
xchg
push
and
das
jl
and
dec
xor
gs
jne
cmp
mov
cmp
cltd
xor
cmp
inc
xchg
dec
psllq
stos
push
out
fsubrs
imul
ds
push
pop
scas
mov
cmp
mov
inc
mov
lods
jecxz
jl
in
roll
or
inc
mov
aad
xchg
xchg
popa
push
mov
lcall
pop
dec
xor
popf
mov
incl
lret
nop
enter
loopne
into
fdivrl
in
sub
cmp
cmp
pop
jno
ds
push
fiadds
add
add
add
xor
stos
mov
and
or
fldl
scas
pop
sti
and
jnp
xlat
shll
inc
cmp
pusha
repz
aaa
xchg
mov
rcr
push
and
and
cmpsl
hlt
out
lea
ret
xchg
pop
adc
cmp
rolb
xor
dec
loop
jb
jge
pushl
insb
lods
mov
and
jno
or
cmpsl
xchg
stc
and
gs
loope
cwtl
mov
call
adc
jecxz
adc
cmp
push
shl
jo
add
in
dec
cmp
jnp
add
pop
fnstcw
mov
mov
cmp
or
adc
or
std
fnstsw
movsl
lret
lods
and
pop
jecxz
ja
push
add
push
xor
in
pop
call
mov
fidivrs
inc
mov
lods
imul
hlt
pop
icebp
gs
dec
mov
add
add
mov
mov
cmp
filds
add
add
add
inc
xchg
or
iret
mov
mov
jae
bound
out
xchg
mov
lahf
std
call
notb
dec
mov
xor
add
lea
sahf
and
mov
or
xchg
cmp
mov
adc
fldcw
out
int3
pop
mov
loope
xrelease
into
or
inc
jle
test
jo
jecxz
jbe
filds
int
cmp
rcrb
adc
pop
mov
out
out
mov
stos
sub
popa
popl
aas
dec
jecxz
mov
dec
or
add
nop
push
adc
inc
push
rcl
xor
enter
jg
imul
dec
mov
pop
mov
dec
fstps
push
push
xchg
icebp
xor
enter
xchg
sub
push
andl
jecxz
cmc
ljmp
inc
mov
mov
add
xchg
in
mov
incl
mov
add
pop
add
add
pop
insb
inc
nop
sti
mov
stc
lods
sub
shl
push
add
inc
lcall
lods
addr16
rolb
aad
fnstsw
fistps
nop
lods
pop
arpl
inc
dec
test
inc
xchg
dec
mov
imul
lahf
dec
and
adc
std
and
lahf
int3
lods
pop
lret
sbb
mov
pop
sub
sbb
into
imul
push
xor
cmp
dec
mov
pop
cwtl
jecxz
scas
push
cmc
movsl
repz
lea
xchg
idivb
pop
xchg
gs
int
inc
loope
cmpsl
in
jb
dec
loop
push
cmp
clc
adc
scas
insl
mov
sbb
cs
jmp
std
and
mov
mov
in
xchg
cmp
sbb
imul
or
jbe
push
je
fmuls
dec
mov
hlt
push
daa
test
xchg
jmp
inc
mov
in
negl
es
int
ja
dec
imul
add
add
add
pop
adc
jbe
mov
clc
arpl
cli
mov
xchg
dec
leave
jl
dec
mov
sbb
and
sub
fs
mov
inc
imul
sbb
mov
mov
or
fwait
repnz
cmp
xor
push
or
repz
push
and
mov
iret
stos
fnstcw
or
dec
or
and
lret
cmpsb
in
cmpsb
cmp
or
pop
rcrb
pop
or
sbb
out
inc
outsb
mov
pop
cwtl
adc
mov
dec
pop
xor
out
imul
int3
add
lahf
mov
loope
shll
add
stc
and
cmpsl
adc
out
pop
fimull
pop
shll
mov
fidivs
jecxz
lcall
sbb
cmp
sub
test
loop
jecxz
daa
mov
fwait
ja
cmp
jne
ds
stos
inc
pushf
sub
faddl
fistpll
jge
nop
mov
jb
add
pop
add
add
lret
mov
push
mov
ss
adc
pop
loopne
sub
orb
lods
push
or
jns
fisttps
imul
dec
movsb
pusha
lods
insb
clc
movsb
xor
push
imul
pop
inc
shrb
xchg
popa
push
xchg
push
ja
mov
xchg
pop
and
lret
loopne
xor
enter
xchg
xchg
mov
mov
loope
int3
mov
lods
inc
daa
cltd
ds
push
push
mov
ficompl
lcall
leave
or
lea
push
jne
in
popa
imul
jbe
jnp
ss
pushf
push
lods
aas
cwtl
pop
rorl
and
mov
push
inc
push
mov
cltd
shrl
ror
adc
xchg
cs
fildll
mov
dec
cwtl
lods
push
xchg
jbe
test
aaa
stos
pop
add
dec
and
outsb
mov
push
add
nop
xchg
mov
add
add
adc
push
jno
mov
jns
add
pop
add
add
hlt
inc
cmpsb
les
int
add
movsl
sbb
iret
cmp
mov
loopne
dec
cmp
inc
mov
outsl
and
ss
pop
fiadds
lret
xchg
in
fistps
adc
mov
andb
pop
fnstenv
mov
enter
xchg
into
aas
xchg
int
push
jmp
cmpsb
ret
mov
jbe
and
mov
dec
pop
inc
mov
adc
mov
out
scas
mov
test
dec
pop
sbb
out
jmp
fwait
mov
push
movsb
mov
in
enter
popa
xchg
jmp
pop
std
pxor
mov
push
std
sbb
ja
pop
movb
mov
add
or
and
inc
xorb
jae
sub
out
xor
insl
scas
mov
les
enter
xor
pop
push
mov
sbb
jne
ds
hlt
mov
out
repnz
add
pop
call
mov
cltd
loope
in
add
add
add
xor
inc
sahf
or
inc
dec
sub
popf
cmp
fsubs
jge
mov
std
addl
not
pop
jbe
outsb
loop
nop
dec
push
mov
cltd
cltd
mov
dec
cmp
lea
adc
data16
adc
pop
mov
iret
insb
add
out
add
loope
mull
jge
or
mov
dec
rcrb
adc
pop
stc
hlt
in
pop
push
lods
cld
inc
lcall
cwtl
lods
arpl
nop
inc
xlat
sbb
fadd
cmc
inc
cmc
cmc
loopne
stos
fstpl
inc
add
stos
loope
fs
and
pushf
push
testl
ljmp
lds
unpcklps
mov
inc
cltd
mov
popa
and
mov
xor
sahf
outsl
cs
or
lock
pop
cmc
or
push
dec
xchg
movsl
pushf
and
add
fsubrs
loop,pn
cwtl
dec
and
mov
add
pop
mov
push
decl
popf
mov
ds
add
pop
add
add
push
cmp
pop
push
lock
in
cli
orl
pushf
adc
loope
xor
mov
jno
idiv
xchg
pushf
aaa
sahf
sub
sbb
pusha
xor
ret
test
sbb
aas
pop
xchg
in
gs
imul
xchg
das
out
adc
xlat
and
adc
mov
cmc
jle
mov
jmp
cmp
lret
add
push
fdivrs
mov
cmpsb
stos
cmp
and
xor
push
xlat
sti
ja
int
in
sti
mov
inc
movsl
jge
ret
fnstcw
lret
inc
int3
xchg
dec
and
and
push
into
addr16
fisubrs
dec
push
jecxz
pop
mov
sbb
jl
sbb
xchg
in
pop
cs
xchg
movsb
bound
lea
jl
jmp
inc
jl
add
in
leave
pop
mov
or
data16
jo
scas
mov
addr16
pop
jmp
test
inc
or
add
add
jmp
in
and
push
rorb
add
add
push
xchg
mov
movsb
cmp
inc
inc
adc
mov
lods
mov
lock
adc
filds
mov
add
insb
inc
mov
push
pop
sti
inc
clc
inc
std
and
fidivrs
loope
lret
ret
stos
dec
call
and
and
adc
lods
mov
push
lcall
leave
sbb
pop
jno
cli
outsb
icebp
es
rorb
insl
lds
lret
xor
call
push
push
add
xor
loope
sbb
pop
lcall
sbb
out
out
fiaddl
xchg
xor
mov
jmp
mov
stos
and
cli
hlt
cmpsl
and
loopne
in
pop
icebp
push
js
aad
mov
mov
es
jnp
pop
mov
jecxz
aaa
aaa
jecxz
dec
sbb
jl
lcall
hlt
test
popa
add
outsb
xor
test
movsl
aam
out
add
add
add
sbb
adc
pop
enter
cmp
cld
shlb
popa
fwait
es
push
sbb
push
ret
cmp
stc
lahf
je
lods
push
pop
in
xchg
aaa
je
aam
xchg
jge
jle
fsubr
add
movb
mov
jae
ss
mov
xlat
std
dec
mov
ret
push
dec
cltd
adc
xchg
daa
dec
ffreep
add
jb
adc
cmc
mov
dec
mov
sbb
sahf
hlt
add
cmp
pusha
shl
push
mov
repz
adc
push
leave
add
sub
adc
pushf
mov
or
xchg
mov
inc
mov
mov
mov
cmpsb
pop
aad
jle
test
lcall
js
in
add
or
and
jo
pop
stc
cld
ret
int3
and
test
addb
jl
sub
xor
sti
test
sti
loopne
pusha
mov
mov
add
inc
ror
lock
jnp
xchg
cmp
pushf
call
add
and
sbb
enter
push
mov
push
pusha
and
lea
jecxz
push
and
imul
jno
pop
sub
push
jmp
in
dec
sub
outsb
out
mov
sub
jp
outsl
pop
sub
enter
push
fildl
sbb
or
bound
mov
xor
mov
xor
jmp
cmp
outsb
fisubl
cmp
stos
mov
pop
or
jmp
in
in
pop
int
call
lods
mov
mov
adc
xor
inc
aad
xor
push
mov
ficomps
xchg
inc
popa
nop
ret
cmc
mov
testl
cli
xchg
dec
push
mov
add
jno
pushf
jbe
repnz
shlb
test
mov
loope
push
push
into
sbb
sarb
and
leave
out
aad
xchg
cmp
pop
mov
pop
add
dec
mov
iret
lock
js
or
loope
dec
divl
jo
xorb
add
and
repz
fisubrs
jno
push
adc
jmp
add
dec
rcr
das
pop
cmp
cmc
sub
or
cmpsl
mov
sarb
lea
push
icebp
fwait
mov
aam
lcall
aam
mov
ret
mov
out
sub
mulb
xchg
loopne
jae
xchg
clc
or
ror
sbb
dec
sarb
mov
inc
scas
pop
pop
cmpsl
scas
stc
and
xorb
cli
stos
addb
pop
mov
cmp
pop
xchg
lea
push
pop
dec
xchg
and
xchg
and
sbbl
mov
xor
insb
insl
fs
leave
mov
in
add
jb
fdivrs
inc
insl
int
mov
ret
jp
daa
pop
imull
xor
xchg
mov
rcrb
and
clc
sub
addr16
popf
mov
push
cltd
mov
or
outsb
pop
test
push
rorb
popa
lcall
in
insb
mov
add
out
mov
mov
sub
add
pop
add
add
dec
push
sti
repnz
mov
test
out
mov
sub
mov
inc
jl
jbe
cmp
adc
clc
xor
pop
icebp
cmp
arpl
add
pusha
cli
cli
cwtl
jl
jno
and
dec
mov
test
inc
xchg
in
cld
add
add
xchg
lcall
insl
jnp
dec
dec
in
loope
xor
mov
lods
jae
int
ror
xchg
jg
shl
sub
les
add
out
loopne
adc
mov
inc
mov
add
stc
icebp
inc
das
mov
std
cmp
dec
out
push
int
cmpsb
or
sbb
dec
or
mov
and
std
rcr
push
mov
cmc
dec
cmp
es
call
mov
add
ss
sbb
stc
pusha
pop
jb
cmp
flds
lock
xor
cmp
aaa
adc
shlb
add
scas
push
repz
cmc
scas
cwtl
sub
bnd
push
aaa
mov
add
pop
add
add
cmp
dec
loop
ja
mov
mov
frstor
mov
leave
mov
and
pop
pop
dec
add
add
add
hlt
stos
jge
or
imul
jnp
xor
fwait
cmc
or
in
cmp
cmp
dec
jmp
lret
mov
jle
sub
push
cmpl
xorb
aam
adc
mov
sub
adc
or
mov
pop
enter
xlat
xchg
ljmp
aaa
mov
push
sub
sub
push
insl
shrl
in
and
xchg
shrl
and
mov
mov
pop
mov
sub
outsb
mov
sub
aad
xchg
mov
pop
sbb
push
stos
add
fisubrs
fucomi
pop
pop
rcr
dec
jnp
mov
test
jge
mov
rcrb
cmc
lods
jmp
lret
pusha
rorb
enter
inc
cmpsb
sbb
in
add
pop
add
add
icebp
lds
adc
mov
xor
ret
cmpsb
cmpl
stc
test
arpl
imul
push
adc
in
inc
push
clc
mov
pusha
pop
xchg
sbb
daa
lds
jnp
pop
jno
cmc
stc
pop
lahf
icebp
negl
mov
lret
xlat
jmp
ror
ds
das
hlt
pop
out
pusha
xchg
adc
loopne
sbb
adc
push
sub
nop
lock
scas
scas
jge
push
imul
cmp
sub
inc
insl
push
stos
and
mov
test
jg
mov
rcrl
dec
push
sbb
test
lahf
outsl
xchg
ss
xchg
jg
inc
loop
push
dec
xor
shl
pop
cld
nop
dec
sbb
clc
jge
or
and
mov
pop
sub
popa
sti
mov
arpl
andl
xor
jne
jle
ss
loope
lods
movsb
lds
jecxz
push
testl
mov
add
pop
add
add
inc
jge
cmp
mov
in
aad
mov
dec
out
mov
pop
push
lods
pop
test
dec
inc
cmc
cli
xor
mov
sti
in
cli
inc
imul
dec
and
pop
push
mov
or
ljmp
xchg
scas
mov
test
xor
loopne
cmp
cmp
lret
cld
sub
loop
stos
pusha
movsb
pop
shrl
push
push
jbe
adc
pop
fcompl
jne
arpl
stos
mov
iret
mov
mov
lds
cltd
adc
in
cmp
scas
std
loop
out
or
loop
cld
in
imul
xor
mov
outsl
outsb
or
cmp
stos
push
pop
repz
leave
fdivr
aas
xchg
sbb
imul
pop
int
sbb
fs
mov
push
mov
enter
xchg
pop
pop
jg
xchg
sub
sbb
or
int
ds
lret
pop
shll
jmp
mov
jae
ret
mov
and
daa
lahf
or
jns
out
add
pop
add
add
in
scas
inc
mov
imul
cmp
sub
repnz
sbb
cs
rorl
push
dec
jecxz
int
pop
lahf
add
clc
in
jne
pusha
out
add
push
ja
jns
lods
mov
addr16
cltd
and
mov
arpl
mov
fsubs
or
es
adc
lds
jmp
aas
sub
push
add
mov
and
std
pop
xchg
stos
cmp
adc
mov
fs
lock
adc
sbb
and
mov
data16
mull
push
repz
push
cwtl
roll
mov
jmp
sub
mov
add
out
ret
pushf
jp
push
daa
in
and
push
in
inc
daa
push
mov
dec
nop
ret
pop
mov
mov
sbb
adc
add
fstpl
int
add
pop
add
add
mov
dec
pop
inc
lahf
fcmovnbe
jb
jo
push
add
arpl
mov
das
sub
xchg
fisubrl
add
pop
daa
sbb
ret
outsb
hlt
daa
cmp
jb
ficoml
mov
mov
xor
lock
rolb
lea
popf
pop
push
lods
call
or
in
fmuls
push
orl
inc
xor
mov
add
xchg
mov
xchg
jg
pusha
xchg
pop
mov
jo
mov
dec
jbe
or
call
ret
sbb
test
sub
pop
push
shlb
es
inc
sbb
mov
or
rcr
jae
jge
jmp
arpl
jbe
pop
scas
pop
lret
in
enter
rcrl
insb
pop
add
mov
pop
dec
cld
mov
jae
jo
xchg
sub
out
imul
dec
jl
push
test
mov
add
add
push
inc
pop
jns
aas
lods
fmull
push
jbe
adc
lock
pop
add
add
shrl
mov
add
jp
in
insb
jle
inc
sbb
aaa
dec
xchg
mov
xchg
push
clc
fisubl
cmp
clc
mov
lcall
or
xchg
test
fwait
out
pop
gs
jecxz
inc
leave
add
add
je
out
xchg
xchg
add
sub
test
cs
addr16
pop
mov
daa
sub
jmp
jae
fcmove
pop
push
adc
mov
push
mov
push
xor
add
adc
pop
inc
mov
mov
pop
mov
scas
std
cmpsl
adc
jle
stos
add
cli
sbb
cli
pop
in
sti
lcall
and
sub
ffree
sub
loop
xor
xchg
mov
dec
cmp
sub
adc
mov
or
daa
arpl
push
dec
iret
in
or
mov
ja
push
cmp
or
test
add
jnp
mov
mov
push
fcomi
add
pop
add
add
mov
int3
cmp
sbb
loop
lcall
in
inc
adc
pop
sbb
cs
sarl
adc
xor
in
sahf
rcr
push
insl
or
scas
fistpl
lahf
adc
mov
stc
mov
cmpsb
sahf
addl
clc
xchg
xchg
mov
loope
fcmovnbe
fbstp
dec
dec
inc
stc
scas
sub
rcll
mov
outsl
in
cmpl
and
sbb
jbe
inc
xchg
mov
cmp
sub
ja
xchg
and
jnp
add
das
push
cmp
gs
lret
mov
sub
cmp
jp
cmp
cmp
push
test
xor
int3
mov
pushf
test
mov
jnp
ljmp
shl
and
rolb
ds
mov
rclb
pop
cmp
mov
andl
aaa
in
adc
adc
and
bound
cmpl
add
imul
test
sbb
loop
add
pop
add
add
add
pop
ret
fs
sub
xor
rorl
dec
lret
jb
add
adc
pop
lock
stos
xor
mov
es
shll
fistpl
xor
fscale
dec
sbb
hlt
sub
ss
pop
inc
in
mov
ret
push
lahf
outsl
ljmp
xchg
std
inc
or
dec
mov
test
push
loop
mov
sbb
cmp
sbb
stos
mov
mov
cmp
inc
mov
pop
outsl
mov
ret
mov
fisubl
mov
xor
mov
xor
jb
sbb
mov
out
jb
cmpsl
adc
dec
pop
sub
or
or
adc
add
or
out
push
scas
adc
or
inc
jne
or
jbe
outsl
xchg
cld
fnsave
loop
clc
sbb
or
testb
add
add
fdiv
mov
cmovl
jmp
add
add
inc
shrl
sahf
or
dec
in
sbb
adc
ljmp
adc
and
sbb
adc
mov
and
je
lahf
mov
int3
subl
mov
bound
movsb
fs
sti
stos
aaa
ljmp
outsb
in
mov
xchg
pusha
mov
js
sbb
xor
dec
nop
dec
enter
clc
adc
orl
es
aas
push
mov
fnstcw
jae
jns
add
push
stc
pop
sub
outsl
cmp
nop
mov
outsb
lcall
adc
add
pushf
lret
or
repz
leave
test
mov
fnsave
jae
push
insb
fs
mov
push
and
cltd
es
shll
jl
adc
fidivrs
adc
xchg
xor
pop
adc
push
test
mov
add
add
mov
fdivrs
hlt
add
pop
add
add
mov
mov
jae
dec
sbb
psubq
sub
call
xchg
call
mov
sbbl
pop
inc
mov
jnp
test
leave
test
je
push
adc
and
fsubr
dec
mov
sbb
push
loope
ret
inc
fisubrl
fildll
sbb
mov
and
pushf
adc
sbb
pop
lock
push
sbb
sub
mov
jno
popa
jge
mov
cwtl
jp
setle
pop
mov
pushl
dec
mov
mov
dec
dec
jp
or
sbb
clc
sbb
pop
call
inc
subl
cs
mov
sbb
inc
fs
int3
and
adc
jae
pop
mov
sbb
aam
stos
dec
sbb
adc
sbb
dec
insl
arpl
incb
push
test
and
jle
jmp
imul
mov
jmp
jge
lret
cmc
add
pop
add
add
push
pop
frstor
aad
and
sbb
mov
sbbb
jp
sub
insl
sbb
pop
fsubl
mov
imul
and
in
cmpsb
sub
aaa
adc
cli
pusha
sub
rcrl
repz
testb
push
test
movsl
xchg
adc
adc
mov
adc
and
pop
pop
mov
adc
hlt
xlat
xor
xor
fmul
out
jo
jne
push
in
out
mov
lahf
aas
mov
mov
push
push
sbb
je
shrb
jns
jge
mov
cmp
xchg
cld
insl
dec
mov
call
cmpsb
dec
call
clc
and
push
daa
test
dec
and
dec
jns
pushf
jbe
jge
out
sbb
mov
xor
mov
test
pop
insl
andb
rolw
pop
inc
pop
lods
pop
cli
cmc
mov
xchg
add
add
add
sbb
fildl
cmp
out
insl
dec
and
cmp
xor
in
int3
outsb
add
jle
jns
or
imul
pop
fisttpl
cmpsb
aam
push
pop
clc
xor
ret
ror
mov
jp
pop
test
xchg
shrb
sub
repz
xorb
pushf
gs
adc
loop
cltd
mov
lods
pushf
imulb
cmp
ds
das
roll
jp
fnstcw
mov
or
icebp
or
pop
pop
pushf
je
pop
jnp
sbb
insb
pop
add
lahf
stos
das
sbb
out
mov
jb
cmc
cld
xorl
mov
repz
pop
push
xchg
shlb
sbbl
mov
mov
lahf
adc
cli
ss
jb
pop
mov
int
aam
mov
pop
call
add
stos
cltd
inc
popf
jae
out
pop
dec
add
cmp
or
add
add
aas
popa
mov
movsl
aas
lret
xchg
adc
into
and
lds
test
mov
aam
xchg
push
jle
sub
or
jbe
pop
fdivr
xchg
loope
cmp
adc
jp
adc
fnstsw
out
movhps
xor
cmpl
xchg
pop
and
aas
mov
and
mov
pop
adc
dec
jb
movsb
xchg
cmp
lods
add
lcall
lock
jge
pop
out
add
nop
or
sbb
xor
add
lock
cltd
sbb
cmp
adc
subb
aam
sub
popa
add
arpl
sub
cmp
lcallw
jg
data16
adc
and
movsb
ss
dec
jne
pop
inc
cmp
lds
xor
or
or
rcr
cwtl
push
add
inc
or
add
add
aam
int
mov
mov
int3
mov
add
add
add
repz
js
aad
push
loop
pop
or
dec
jnp
cmp
pop
cmp
scas
mov
mov
sub
jne
jge
inc
or
daa
rcr
sub
xlat
pop
add
jmp
sub
xor
and
cmp
iret
shlb
mov
movsl
cmpsb
dec
jg
jmp
test
jbe
or
xlat
lds
mov
mov
jbe
xchg
call
in
jl
xor
decl
imul
inc
fwait
inc
out
cld
pop
sbb
bound
cwtl
ss
push
pop
xchg
adc
cmp
pop
and
imul
cltd
or
dec
xor
jecxz
mov
mov
xor
popf
ds
push
fucomi
inc
ret
cmpsb
shl
xchg
das
jle
xor
call
xor
and
add
add
add
arpl
addr16
add
mov
cmp
add
pop
add
add
iret
inc
xor
cltd
and
je
test
pop
int
arpl
ror
dec
mov
leave
hlt
push
dec
stos
add
frstor
jo
int3
adc
test
mov
push
hlt
cli
idivb
xor
or
and
pop
adc
inc
fdivl
mov
js
jno
adcb
inc
imul
or
sub
add
je
fildl
loopne
add
xchg
sub
xchg
cmpsb
dec
mov
cmp
jnp
push
sub
nop
lea
xchg
and
das
cmp
pop
jb
roll
lods
loopne
cli
inc
xchg
mov
push
popa
ja
push
div
rol
and
movsb
lds
jo
divl
or
inc
dec
or
pop
or
or
fsubrl
outsl
xchg
and
dec
mov
rol
int3
add
out
out
pushl
ja
stos
pop
pop
sahf
sbb
add
pop
add
add
dec
pop
fwait
or
int3
imul
xchg
movb
push
jle
lahf
leave
int
xchg
out
push
xchg
xchg
cmc
outsb
or
add
shl
shl
scas
cwtl
nop
xchg
out
iret
rcll
lcall
add
imul
pop
jb
mov
pop
mov
rcr
test
rorb
lahf
push
repnz
pop
fmul
inc
jg
mov
xor
and
pop
mov
sbb
jge
jl
les
mov
dec
push
imul
fisubl
adc
jbe
pop
sbb
clc
mov
sbb
pop
push
xor
sub
stos
and
int3
lcall
or
jmp
imul
dec
jno
add
nop
pushf
popw
adcb
clc
mov
push
imul
int3
and
inc
fstpl
icebp
mov
fmuls
or
sub
xor
mov
mov
sbb
add
test
push
scas
decb
push
adc
and
add
pop
add
add
stos
xchg
mov
cmpsl
and
mov
rcl
out
add
sub
mov
test
mov
jg
int
std
sub
jmp
loope
pmaxub
pop
cmpsb
cli
mov
aam
fwait
outsb
xor
pop
inc
shl
xlat
fwait
pop
ds
insl
sub
stos
adc
jnp
xor
test
push
mov
outsb
repnz
cld
xor
sub
mov
jmp
lds
sbb
imul
dec
pushf
js
xchg
insl
dec
lea
out
out
push
aaa
int3
push
jne
stc
rol
outsb
dec
xchg
sub
lods
addr16
imul
pop
stos
cmp
into
data16
ljmp
or
ret
outsl
xor
add
adc
lahf
pop
inc
xchg
cmp
pop
xchg
push
jle
add
addl
das
lock
loopne
mov
mov
stos
adc
call
mov
jle
popl
aaa
xchg
and
movsl
mov
mov
mov
test
mov
add
add
add
fidivrs
fstps
lcall
jg
ja
out
jl
mov
inc
bound
loope
dec
rcl
xor
movsl
pop
add
sti
inc
jmp
push
icebp
sti
xor
sbb
pop
ret
call
mov
pop
outsb
pusha
decb
sub
dec
push
pop
aas
lods
push
data16
repnz
orb
pop
pop
sahf
jl
sbb
pop
dec
aam
mov
jmp
in
mov
in
xor
cmp
lock
daa
clc
push
or
xor
mov
push
out
arpl
mov
fwait
jge
sbb
inc
subl
daa
fcoml
mov
je
mov
mov
data16
push
dec
cs
fs
iret
dec
pop
aad
mov
movsb
dec
inc
pop
adc
test
mov
push
movl
mov
cmp
iret
shrb
adcb
jmp
mov
fdivl
mov
pop
mov
add
pop
add
add
js
pop
orl
adc
pop
cmp
cmp
imull
cld
negl
dec
fiadds
dec
or
xchg
loope
mov
adc
enter
ds
inc
shll
into
insl
xor
adc
ret
lock
sub
inc
push
repnz
mov
or
lcall
sub
out
push
xchg
push
jecxz
sub
adc
cmp
cli
add
mov
mov
movsb
lcall
jg
aam
imul
push
pop
in
mov
stc
mov
adc
xchg
fnstsw
pop
cli
inc
aaa
std
into
punpckhbw
std
cmp
push
cmp
test
nop
dec
or
out
dec
add
adc
jmp
stos
dec
jno
mov
adc
popf
fcompl
xor
jb
cli
pop
lds
lods
cmp
sahf
int3
dec
data16
out
xor
mov
adc
or
stos
lret
cmp
push
aam
mov
mov
add
mov
mov
xchg
mov
incl
add
add
add
mov
mov
inc
ljmp
mov
div
xchg
mov
ja
outsb
ja
inc
or
dec
cmpsl
sarl
ja
mov
push
test
clc
cmc
xchg
and
mov
rcll
aaa
data16
loope
mulb
aas
fwait
enter
out
ljmp
enter
mov
inc
jne
mov
clc
int
shrb
mov
mov
aam
sub
sub
insb
sbb
xchg
stos
pop
xor
dec
push
jae
dec
inc
ja
or
adc
fs
jg
or
stos
cmp
flds
insb
and
mov
jl
jne
int
cmp
push
mov
xor
outsl
pop
ds
or
adc
mov
cmpsb
mov
shlb
or
jbe
add
mov
jp
cmp
mov
outsb
es
sub
mov
xchg
add
mov
xor
cmp
add
add
sahf
push
shlb
adcb
aaa
mov
cmp
movsl
repnz
and
sahf
das
xchg
sub
jl
clc
aad
repz
mov
mov
push
test
lds
jne
cmp
addr16
lods
ret
push
cltd
imul
mov
mov
not
lds
rcr
stc
lcall
mov
inc
lock
jmp
xchg
pop
xor
in
pop
out
in
cmc
or
jge
mov
mov
sahf
pop
addr16
test
adc
shrl
mov
and
jg
ret
inc
loope
lods
push
sbb
mov
fbld
filds
outsl
dec
add
adc
shl
fadds
jecxz
or
loope
and
cld
push
sbb
push
push
push
repnz
jle
push
test
vandnps
jo
arpl
or
or
repnz
ljmp
fildl
xchg
enter
push
fisttps
test
insl
lods
inc
add
add
add
add
dec
xor
enter
scas
lcall
push
inc
push
shrl
or
pusha
add
clc
pop
and
push
xchg
out
in
sub
int
xchg
data16
cmp
adc
sti
cwtl
inc
divb
fnstcw
aaa
lods
roll
jae
mov
lods
pop
int3
imul
jbe
cmc
jb
push
xchg
mov
fadds
in
ret
ja
dec
cmpsl
pop
ret
mov
xor
or
mov
call
and
push
mov
rorb
pop
add
clc
roll
cmp
mov
mov
lods
mov
xor
add
xlat
outsl
scas
xor
pop
lds
xchg
enter
popa
in
cmp
adc
xchg
xor
xchg
cmp
dec
jecxz
add
aas
sub
cltd
jmp
repz
mov
ja
rcll
xchg
mov
push
jb
or
add
into
fwait
cmc
pop
sub
dec
add
add
add
add
pop
jg
call
sub
pop
mov
xchg
jb
sub
mov
shl
imul
mov
mov
mov
inc
jge
es
addr16
mov
mov
jno
fcoml
mov
lcall
adc
insl
cwtl
push
pop
std
or
or
insb
jg
loope
hlt
sti
sbbl
je
jbe
push
in
xorl
pop
movsl
fstpl
jl
test
test
mov
nop
dec
push
das
sbb
mov
inc
cmpsb
inc
xchg
jo
inc
cmp
test
loope
fucomp
imul
jne
outsb
adc
push
scas
push
std
sbb
cmp
rorb
aam
push
inc
out
dec
add
pushf
loope
scas
sbb
popl
pop
add
sub
jo
sbb
inc
sbb
int
inc
ja
push
ljmp
jl
test
out
mov
pop
mov
movsb
repz
add
add
add
add
outsb
lea
lods
push
pop
jmp
add
mov
add
lods
pop
or
adc
xor
mov
xor
daa
mov
into
repnz
dec
fldl
mov
adc
sub
inc
add
pop
inc
push
lahf
mov
es
xchg
mov
call
push
mov
xchg
les
cmp
xor
jle
pop
aam
mov
xlat
and
cmpsl
loope
loop
iret
outsl
ds
fcompl
and
bnd
je
adc
fnstsw
adc
dec
push
cmp
icebp
xor
pushf
arpl
mov
push
xor
stos
cwtl
leave
add
push
addb
xchg
xor
jecxz
outsl
icebp
sbb
daa
in
xorl
icebp
dec
dec
scas
mov
movsl
adc
dec
dec
add
outsl
mov
and
sahf
and
int
jns
xchg
daa
stos
cmp
into
or
xchg
dec
roll
outsl
sub
stos
add
inc
out
aas
mov
scas
adc
sbb
add
add
add
sbb
or
xor
shl
pop
mov
jecxz
lcall
xchg
push
loope
inc
pusha
dec
popf
dec
and
xchg
mov
inc
das
ret
test
cmpb
xor
cli
lods
adc
mov
pushf
jle
push
sbb
lods
and
data16
push
mov
jno
dec
or
sub
add
xor
xchg
pop
mov
mov
sbb
sbb
str
sbb
add
xor
push
aad
push
adc
dec
xchg
cmp
dec
adc
insl
sbb
movsb
mov
add
pop
nop
out
arpl
or
jl
ret
cmp
mov
cld
scas
sub
sub
hlt
fdivl
add
jne
mov
jg
add
js
xor
pop
cmp
add
cli
dec
ffreep
add
lcall
idiv
jmp
add
add
bnd
jl
movsb
mov
pusha
add
add
into
lidtl
lcall
mov
pop
mov
out
mov
popa
push
nop
adc
push
lahf
js
pop
hlt
sbbb
mov
outsb
mov
mov
sub
cltd
cli
imul
int
cltd
add
les
lods
jb
adc
aas
pop
mov
mov
lahf
jmp
dec
jne
mov
cmp
mov
pop
loopne
adc
clc
pop
cmp
lds
sub
dec
xchg
push
gs
adc
add
out
inc
mov
dec
insl
cs
mov
mov
and
outsl
inc
mull
addb
jmp
in
out
mov
xchg
fldcw
mov
jno
mov
aad
aad
adc
fdivrs
sub
jae
sar
pop
test
add
aam
scas
jecxz
gs
add
sbb
in
out
ja
fists
push
out
addr16
add
pop
add
add
lcall
mov
cli
jg
outsl
sbb
jns
or
imul
sbb
push
stc
add
shrb
mov
adc
daa
push
and
iret
push
and
das
test
adc
sarl
mov
inc
arpl
jno
rorl
or
dec
lcall
xchg
pop
std
rcll
in
inc
add
repz
xchg
jmp
inc
movsl
loope
int
xchg
inc
inc
mov
mov
pop
cwtl
jbe
aad
push
add
push
lret
inc
fwait
add
mov
mov
out
or
mov
lret
sub
insl
dec
add
das
fidivl
cmpsl
frstor
pushf
sub
cmp
outsl
ror
jp
ja
jne
loope
rol
xchg
sub
pop
scas
sbb
lea
scas
test
in
daa
jle
add
jb
jmp
pop
add
add
outsb
outsb
call
xchg
insl
call
adc
test
dec
dec
aas
mov
xchg
popf
dec
mov
mov
lock
cmp
dec
jmp
les
push
cs
push
inc
das
mov
pushf
add
push
jle
fwait
mov
sub
addr16
adc
faddl
test
xor
pop
popf
scas
outsb
lcall
int
prefetch
lods
sub
out
fadds
xor
mov
pop
mov
sbb
xchg
cmc
clc
sarb
mov
xor
mov
outsl
fisttpll
ficoms
jle
lcall
pop
test
inc
mov
add
daa
lret
test
mov
xchg
test
inc
jae
mov
sbb
inc
push
pop
or
xor
or
xchg
in
xchg
enter
jbe
out
pushl
sbbl
jmp
xor
in
testb
add
add
jg
idivl
mov
das
jne
add
pop
add
add
scas
enter
scas
mov
int3
and
push
fidivl
out
pushf
fdecstp
pop
fs
inc
insb
cmp
pop
sub
fiaddl
pop
xchg
scas
ds
arpl
mov
add
xor
cmp
xchg
clc
pop
inc
lret
mov
mov
jb
in
xchg
into
sub
sarl
xchg
cmp
mov
push
dec
pop
fcoml
cmp
sbb
mov
pusha
mov
cmp
xchg
imul
stos
inc
cmpsb
fs
sbb
mov
dec
mov
add
inc
sub
mov
stos
aas
push
shr
and
out
cmpsl
sbb
add
mov
hlt
dec
mov
dec
mov
ja
rcl
jecxz
pop
cmpsb
test
pusha
cmp
inc
hlt
dec
xchg
mov
xchg
dec
inc
cwtl
xor
or
cs
dec
aam
push
mov
xlat
mov
leave
loope
je
inc
add
sti
jg
les
mov
or
add
add
add
movsl
push
sbb
or
inc
aam
fimull
mov
cld
movsl
cmpsl
jne
jle
movsb
movsl
sub
jge
add
fiaddl
cmp
bound
xor
jle
jne
data16
sbb
xor
std
outsb
lods
push
jbe
sbb
xor
push
lea
jg
negl
rcr
pop
xchg
mov
fmull
cmc
sbb
leave
adc
stos
and
clc
and
adc
andl
aad
dec
mov
xor
adc
repz
pop
pop
sub
xor
dec
push
pop
sbb
test
gs
sub
jne
mov
test
out
movsb
es
fs
ret
cmc
pop
jne
jb
jmp
mov
dec
stc
popw
ret
call
ret
scas
or
xor
or
aas
cmpsb
jae
cmp
pop
mov
repnz
in
ss
inc
or
loop
or
adc
mov
add
scas
aam
jnp
fnsave
xchg
testb
cmp
pop
add
add
add
int3
xor
ret
pop
enter
pop
repz
iret
or
mov
in
pop
lds
daa
stos
pop
inc
lods
fsubs
add
mov
lods
pop
push
inc
movsb
repz
jmp
sub
xor
push
jle
xchg
clc
cmpsl
and
jne
cmp
pop
ja
sub
cli
sub
push
cld
test
hlt
xlat
xor
movsb
fidivs
lock
pop
cld
inc
mov
sahf
or
fiadds
jmp
jg
jg
cld
pop
popa
pop
sub
dec
adc
xchg
lea
iret
mov
lock
mov
pop
pop
dec
es
push
mov
in
loope
add
xor
xor
clc
lret
aaa
jl
lret
mov
lcall
std
add
loope
fisubl
bound
mov
call
sub
clc
aas
lock
call
jns
test
xchg
shrb
mov
jno
std
outsl
mov
inc
loop
dec
jns
fwait
dec
mov
add
pop
add
add
scas
adc
cmp
sahf
sub
iret
xor
xchg
dec
push
movsl
or
sub
mov
fisubrl
or
pop
call
imul
sahf
insl
xchg
test
dec
xchg
mov
pop
mov
mov
push
push
cltd
daa
mov
dec
adc
aam
ja
aas
fxch
je
ljmp
jne
pusha
fcmovu
mov
inc
jmp
jmp
jo
jo
dec
test
sbb
jecxz
inc
lahf
and
add
push
sbb
iret
inc
imul
out
fstpl
out
scas
popf
mov
sub
fmulp
jg
cmp
js
icebp
mov
test
push
inc
hlt
mov
int3
jl
push
fmull
mov
mov
add
stc
jmp
push
shrl
sub
sbb
lret
or
arpl
js
jne
sub
dec
mov
das
std
aaa
mov
jmp
aad
xchg
mov
enter
mov
inc
aam
sbbb
loope
jmp
fisubrl
add
add
add
add
adcb
or
stos
into
mov
mov
sbb
mov
mov
insb
mull
dec
into
dec
mov
das
ss
js
dec
fsubrl
test
xchg
out
neg
pop
pop
loop
jae
lret
mov
or
fwait
xor
clc
daa
outsb
adc
pop
ljmp
xchg
in
loop
in
mov
mov
outsb
out
mov
hlt
mov
adc
pusha
lret
std
ss
add
aas
mov
sbb
sbb
mov
mov
mov
cmc
dec
aaa
loopne
sbb
add
nop
stos
pusha
sarl
insb
dec
incl
inc
pop
mov
push
mulb
bnd
fnstsw
aad
push
cmpsb
mov
inc
cld
rolb
sub
insl
or
jp
rcrb
cmp
adc
ret
test
mov
in
sub
cmpl
cld
and
jecxz
lods
add
xor
negl
mov
add
add
add
test
int
out
loope
xchg
imul
inc
out
inc
test
pop
push
jl
sbb
add
pop
mov
add
adc
mov
addr16
xchg
jb
sbb
inc
xor
loop
and
sub
mov
pushf
aad
adc
aam
xor
mov
push
dec
mov
ljmp
loop
xchg
pop
adc
movaps
push
xor
sarl
cmp
das
push
aaa
add
cld
mov
pop
pop
loop
out
sarb
jnp
int3
mov
xchg
into
jne
push
cwtl
inc
mov
pop
push
pop
stc
xor
sbb
pop
movsl
jge
adc
sbb
ss
xor
add
aaa
mov
andl
pusha
jnp
fsts
outsl
test
enter
es
and
push
call
or
aad
fcomp
inc
mov
add
dec
cli
inc
jg
int
cs
or
mov
add
add
add
add
dec
ds
xlat
cmc
mov
xchg
adc
push
push
daa
adc
insb
idivb
ret
popa
jne
outsb
jo
and
lahf
ret
int3
sbb
js
add
or
push
adc
xchg
mov
stc
jno
dec
xchg
jmp
mov
mov
push
and
arpl
cli
outsl
add
adc
sub
nop
jnp
nop
dec
inc
les
in
jne
out
pop
or
sub
dec
inc
xchg
xchg
and
and
stc
pop
jge
aaa
add
sub
xchg
mov
pop
jle
mov
and
inc
bound
scas
out
mov
mov
ret
push
loopne
xchg
test
sarb
lret
and
lods
nopl
and
add
roll
push
daa
and
loopne
stos
std
mov
ja
pop
in
arpl
push
xor
dec
aas
scas
sub
add
xchg
std
cmp
jle
fistps
push
inc
mov
pop
add
add
clc
pop
mov
int3
shlb
orb
inc
fsubrs
pop
ret
aam
addr16
stc
aaa
xchg
mov
add
inc
ljmp
lret
in
popf
pop
xchg
sbb
daa
mov
adc
sarb
dec
and
pop
xor
cmp
push
aas
aaa
js
jbe
mov
add
addr16
mov
js
dec
scas
es
mov
push
addr16
loop
sub
cli
xchg
lcall
jb
std
out
cmp
or
jmp
dec
push
outsl
sbb
adc
andb
cmp
aad
add
and
mov
and
lcall
into
cmpsb
mov
gs
sub
loop
jg,pt
cwtl
sub
inc
cmpb
sub
mul
sub
test
incl
or
sub
jne
mov
xor
inc
pop
mov
pusha
nop
es
lock
xchg
inc
shrl
cs
add
iret
xlat
fimull
cltd
dec
jne
adc
add
add
add
fdivs
cmpsl
mov
push
lahf
adc
movsb
idivl
add
jmp
pusha
push
and
cltd
push
sti
mov
insl
mov
adc
add
jp
std
dec
mov
out
xor
jnp
adc
push
mov
js
dec
outsb
call
nop
in
inc
lcall
xchg
les
jle
sub
cmp
fwait
xor
cmp
daa
pop
test
mov
stc
iret
push
xor
imul
ror
xchg
xor
ljmp
pop
out
fwait
lret
lret
arpl
int
and
dec
and
push
jmp
test
lcall
daa
aaa
lock
jle
sub
push
shrl
sarb
push
aaa
xor
loope
sbb
insb
in
in
sbb
in
incb
mov
dec
fwait
rcrl
std
repz
dec
jmp
dec
scas
iret
outsb
jmp
in
pop
outsl
sbb
add
pop
add
add
and
mov
jmp
mov
test
inc
jle
push
xor
dec
mov
jno
and
fsubrl
dec
mov
add
lcall
xor
xchg
pop
pop
xchg
xchg
lds
sub
inc
or
push
aam
xchg
and
idivb
cmpb
sub
loopne
xchg
sahf
notl
popa
mov
lret
aad
mov
mov
mov
jg
push
testl
imul
lret
push
and
pop
inc
inc
iret
jmp
fdivs
xchg
test
repnz
in
mov
nop
fsubrs
lret
in
jnp
sub
loopne
jbe
dec
push
stos
xlat
loope
mov
xor
ja
sub
jb
cmc
push
cmpsb
iret
push
shll
ljmp
les
mov
mov
cli
dec
or
sub
sub
push
idivl
fiaddl
sbb
std
sbb
stc
cld
or
jb
adc
add
add
add
lock
js
scas
mov
sub
pop
pop
push
push
jnp
loope
rorl
sbb
xchg
rcrb
jnp
push
mov
std
outsb
inc
roll
push
mov
enter
int
pop
or
pop
push
test
push
sub
in
fs
jecxz
sub
test
mov
jne
pop
pop
push
dec
jo
rcrb
nop
mov
pop
adc
iret
movsl
nop
shlb
mov
loopne
dec
fldl2t
repz
shrb
or
mov
xchg
dec
out
inc
out
inc
add
add
imul
cmp
sub
int
jne
pop
data16
loopne
push
ss
insb
pop
sbb
jp
icebp
aad
xchg
lahf
xchg
add
int3
mov
rorb
sarb
add
pop
imul
mov
stos
cmpsl
ficoms
cltd
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
ljmp
and
dec
push
scas
add
push
movsl
imul
enter
ja
pop
cmp
cmovnp
scas
in
mov
cmp
cld
pop
lods
add
cmc
js
xchg
pop
loopne
jb
aaa
inc
jbe
cmp
mov
lret
jge
adc
and
das
push
sti
sbb
cmp
sub
and
inc
jb
push
push
mov
in
fcoml
push
imul
sub
enter
movsb
jne
cmp
sub
ljmp
add
jmp
jecxz
lahf
enter
inc
imul
jg
movl
inc
lcall
stc
jns
sbb
jne
lods
icebp
xchg
cmp
push
call
mov
orb
in
mov
fisubrs
jb
or
pop
cmp
inc
xlat
sub
outsl
js
mov
dec
pushl
bound
xchg
leave
adc
add
add
add
mov
in
push
sti
inc
sti
test
inc
add
in
push
adc
sarl
movsb
jns
divl
jne
lahf
mov
lret
xor
pop
mov
jecxz
int3
addr16
mov
mov
xor
popa
in
xchg
bound
inc
or
dec
xor
test
sahf
stos
inc
xor
ja
sub
mov
das
or
mov
enter
cmp
cmp
jnp
out
mov
mov
xor
jbe
dec
test
stc
in
or
or
mov
in
push
cwtl
add
cmp
sbb
fnstcw
lea
sbb
push
add
pop
jmp
pop
mov
in
xchg
inc
fistpl
leave
not
dec
in
mov
fnsave
jo
insl
inc
shrd
pop
outsl
xlat
fmul
sbb
stc
inc
shlb
sti
outsl
lods
std
movsl
pop
xchg
dec
pop
add
xor
pop
outsl
shrl
les
add
inc
ja
pop
aas
pop
jmp
mov
rclb
add
xor
mov
flds
jne
jl
xorl
jmp
mov
sti
mov
or
cmp
sub
lret
int
ss
out
test
jmp
cs
sti
push
jp
out
jecxz
adc
push
scas
xor
daa
pop
loopne
insb
popf
or
sub
subb
movsl
sbb
mov
dec
bound
lds
lea
addr16
mov
and
fistpl
test
sub
int3
pop
clc
ja
cmp
mov
push
mov
xor
pop
cmp
mov
in
stos
ja
fistpll
sbb
fstpl
dec
pop
sahf
addr16
stc
adc
mov
and
add
mul
adc
aad
push
insb
push
cwtl
xchg
cmp
movsb
mov
out
cli
movsl
adc
fwait
add
jb
pop
sub
repz
jae
ja
div
fisttpll
dec
mov
push
add
pop
add
add
mov
jo
sub
push
xchg
scas
icebp
out
cs
enter
and
in
sbb
or
fmuls
int3
inc
pop
gs
push
and
in
aad
popa
adc
mov
fwait
scas
mov
xchg
mov
std
mov
xor
cld
lods
insb
push
fwait
rorl
rorb
mov
mov
dec
test
outsl
shlb
mov
inc
test
repz
jns
fsubrl
cmp
test
push
mov
fidivs
stc
cmp
jp
lds
sub
movsb
mov
inc
sti
test
rcll
sub
movsl
add
push
jb
sbb
cmpsl
push
add
pop
les
mov
arpl
mov
xor
cmovle
xlat
or
push
adc
or
dec
cmp
movsl
mov
jmp
pop
sbb
sub
mov
movsl
mov
mov
xor
cli
std
jg
mov
jl
ficoms
add
pop
add
add
pop
scas
or
subl
jmp
inc
push
rcl
ss
cmp
cmp
inc
ret
mov
movsl
rcrb
inc
dec
leave
pop
incl
aaa
orb
cmpsb
inc
jg
cld
or
adc
xor
movsl
pop
jbe
push
xchg
xchg
push
in
push
ret
sbb
std
iret
fldl
dec
lea
cmpsb
iret
mov
leave
xchg
rol
add
or
leave
pushf
cli
pop
xchg
in
jp
sbb
aad
push
jbe
adc
fwait
mov
stos
pushf
ljmp
cmp
mov
je
inc
fcmovnb
cs
bound
mov
sahf
mov
mov
loope
mov
mov
cmp
mov
mov
or
dec
jg
stc
inc
and
cmp
mov
int3
xlat
out
cwtl
fisubs
xchg
lds
loope
out
ja
call
imulb
mov
pop
bound
fadds
add
add
mov
std
incl
mov
mov
in
add
pop
add
add
int
add
repz
xchg
or
dec
gs
cmp
bound
add
mov
and
jbe
scas
and
mov
push
mov
mov
sub
push
xchg
mov
clc
or
and
and
mov
es
xchg
cmpsb
outsl
jno
mov
sub
loopne
dec
cmp
push
fstl
test
rolb
add
or
adc
fistpl
push
push
stc
imul
outsb
inc
in
out
add
les
push
pop
push
addb
mov
iret
jns
loop
ja
mov
jp
mov
dec
call
pop
stc
fnstenv
rcrb
mov
or
mov
jns
popa
fwait
repz
xor
mov
pop
lea
jp
mov
add
jecxz
adc
xchg
ljmp
cmp
add
es
jg
pop
pop
mov
jb
in
sbb
add
add
add
inc
mov
loopne
xchg
repz
xchg
jbe
cmc
fnstcw
aad
subb
xor
sbb
push
sub
cmp
fimuls
mov
pop
or
inc
adc
pop
mov
push
pop
push
loope
xchg
lea
add
cld
push
mov
dec
js
push
push
xor
pop
jnp
jbe
push
inc
clc
add
and
in
fadd
cmp
shr
es
outsb
pop
outsl
inc
mov
and
sub
pop
jecxz
mov
ljmp
push
sbb
mov
pop
dec
jb
imul
repz
cltd
aad
aad
scas
lcall
nop
aaa
hlt
mov
fstpl
ficoml
repnz
enter
jl
fcompl
ja
fcoms
mov
pop
imul
cmp
repz
adc
lret
mov
std
add
or
mov
add
int3
push
repz
add
add
add
les
fucomip
pop
mov
ficompl
mov
sub
pop
sub
jo
arpl
pop
das
dec
fsubs
pop
mov
call
jl
int
mov
idiv
pushf
out
into
jbe
data16
dec
sbb
mov
int
sub
inc
shll
popa
sub
add
sti
mov
fiaddl
cmp
push
mov
or
adcb
outsb
loopne
stc
or
mov
bound
xchg
fwait
sub
into
jbe
or
jg
dec
imul
and
outsl
xor
in
in
jnp
popf
push
mov
pop
clc
mov
mov
push
orb
adc
cmp
lods
int3
popf
test
dec
add
loopne
xor
inc
repnz
inc
pop
and
test
add
or
and
mov
in
add
stc
lods
xor
xor
loop
mov
add
add
add
mov
pop
loopne
clc
enter
pop
mov
bt
push
rclb
mov
cmpsl
outsb
jmp
push
or
lods
add
gs
jmp
popf
cmp
dec
and
jbe
pop
js
xor
jb
fstps
xor
sub
xor
inc
jbe
jge
inc
enter
cld
pop
xlat
push
outsb
and
xchg
push
roll
xor
fnstcw
push
sbb
jbe
mov
dec
leave
lret
add
test
xor
and
adc
dec
or
or
xor
inc
mov
outsl
decb
insb
xchg
and
and
in
push
sbb
test
iret
loope
jne
repnz
icebp
addr16
push
cmc
jns
fisttpl
add
jne
inc
std
jp
push
mov
mov
cmp
pop
jp
inc
mov
sbb
add
ficoms
stos
sbb
jmp
ljmp
mov
sbb
add
mov
call
scas
push
sub
ds
call
mov
jp
push
push
sbb
aam
and
jo
clc
cmpl
jns
fists
rclb
and
pop
cmp
mov
pop
xor
xchg
adc
pop
sarb
push
lcallw
test
add
cmp
nop
dec
dec
push
push
repnz
xor
mov
cmp
mulb
add
jg
fs
jl
add
mov
pop
aad
push
pop
mov
pop
repz
xor
je
and
je
stos
push
outsl
ja
dec
jecxz
pop
mov
imul
inc
dec
enter
rcl
scas
and
pop
xchg
inc
sbb
loope
push
rorl
cmp
sub
fldt
cmp
xor
sbb
and
xorb
out
repz
and
in
ficompl
dec
mov
and
imul
add
in
out
arpl
aas
jge
lret
clc
or
add
pop
add
add
pop
pop
mov
insl
dec
fnsave
pop
cmpsl
test
js
xchg
in
jnp
and
and
dec
pop
fwait
cmp
cmp
cmpsl
jnp
popa
jle
or
sub
or
loope
add
pusha
push
scas
push
rclb
mov
setle
fnstenv
dec
dec
ljmp
jl
cmp
sbb
mov
or
shlb
jl
adc
mov
xchg
xchg
mov
es
inc
jno
ja
push
aad
gs
rcrl
cmc
mov
sbb
lods
test
xor
fxch
fsubrl
cmc
cmp
das
scas
test
push
mov
scas
stos
mov
popa
pop
sbb
jmp
lahf
loopne
and
xorb
lds
pop
call
jae
jp
cmpb
jl
repz
inc
mov
add
sbb
out
cld
mov
in
sub
pop
nopl
add
add
add
fmull
repz
mov
sbb
outsb
lods
jne
mov
hlt
jmp
cwtl
leave
cltd
mov
xor
dec
addr16
sub
or
call
les
imul
sahf
jnp
data16
mov
aaa
ss
push
in
scas
inc
stos
pop
inc
insb
and
lock
imul
ja
sub
inc
adc
popl
xchg
aaa
data16
outsl
negl
inc
mov
or
adc
cmp
into
jmp
stc
push
cltd
lods
dec
lods
ret
int
cmpb
rcl
jo
jb
shr
out
xor
repz
mov
mov
sbb
inc
xchg
pop
iret
jnp
lods
ret
fsts
or
mov
cmp
xchg
fsubrl
cs
sub
lds
das
inc
push
dec
aad
fildll
mov
cmpsb
push
mov
xor
add
aam
add
cmp
out
lock
pop
scas
adc
and
add
add
add
mov
xchg
mov
mov
pushf
or
push
and
cmpsl
stos
xor
lods
das
inc
lret
adc
popa
flds
cld
dec
jb
push
icebp
sahf
lea
cs
cli
xor
push
push
mov
sarl
add
testb
or
stos
test
cmp
push
hlt
dec
push
mov
addl
xchg
sbb
pop
xlat
bound
pop
fldenv
push
cmp
daa
addr16
sbb
cmp
inc
in
or
icebp
dec
sbb
shll
repz
xlat
ss
push
mov
and
jae
loope
inc
and
and
xor
movsb
test
in
in
mov
lds
push
mov
add
les
dec
test
or
dec
stos
lods
ljmp
je
add
lods
jg
sub
add
push
sbb
add
add
gs
sbb
dec
pop
push
shlb
call
je
fldl
test
lods
std
lret
fldt
fs
jnp
pop
add
dec
ds
cwtl
push
hlt
std
or
mov
stc
fbstp
out
lahf
adc
mov
inc
hlt
xor
es
cmc
jae
fsubl
xchg
xchg
les
aad
fs
in
ljmp
js
clc
stos
dec
dec
push
ss
ja
fld1
into
hlt
insl
inc
push
cmpsb
jnp
inc
out
ret
test
sbb
arpl
aaa
cmp
int3
xor
in
mov
xor
popf
cwtl
sub
shl
pop
movsl
hlt
pop
dec
push
pushf
mov
int
lock
fcoml
mov
rclb
mov
in
xchg
cmp
ja
daa
insb
popf
xor
xor
sar
cmp
outsl
xchg
pop
pop
bound
xchg
pop
in
sbb
dec
jno
pop
sbbb
jmp
add
jg
cld
fcmovbe
out
out
pushf
and
add
pop
add
add
dec
mov
jo
xchg
sahf
js
add
repnz
cmp
jae
jp
push
or
inc
or
and
xchg
adc
and
fistpl
je
mov
jo
mov
mov
mov
fcom
shrl
dec
fiaddl
fwait
leave
test
lods
iret
call
aam
in
inc
cmp
int3
stos
mov
xchg
shrb
cmp
sbb
fnstsw
lea
mov
test
gs
gs
mov
movsb
dec
or
out
xchg
push
and
gs
fsubs
pop
dec
or
mov
sahf
dec
cmp
xchg
je
pop
iret
out
stos
cltd
cs
ret
in
inc
sbb
mov
pop
jmp
push
mov
mov
popl
shll
loop
jle
push
xorb
dec
mov
dec
fcompl
cmp
enter
add
ret
mov
iret
mov
sbb
jae
sub
add
pop
add
add
push
shll
cmp
cmc
push
add
jmp
shl
push
adc
cmp
push
push
std
adc
gs
je
adc
xchg
and
add
push
addl
andb
pop
adc
mov
je
mov
sahf
mov
xorl
pop
aad
fcoml
cltd
mov
fimull
sbb
cli
mov
stos
jb
stos
int
shlb
test
aas
cmp
cwtl
lea
mov
stc
add
pop
fidivl
ss
mov
pop
push
pop
sti
popa
cmp
andl
jecxz
icebp
mov
mov
xor
and
adcb
pop
and
inc
out
sbb
mov
stc
lea
repz
cmp
lahf
dec
and
hlt
mov
sub
push
inc
in
mov
xor
or
jp
cmp
les
add
mov
lahf
and
popa
push
fisubrl
xor
add
add
add
push
fs
xor
pop
inc
add
pop
xor
scas
sub
sub
push
pop
cmp
mov
jo
jb
pop
add
add
lret
fcmovnb
pop
xchg
test
cmc
repz
test
xor
and
mov
and
cltd
cwtl
shl
mov
es
mov
xor
in
rorb
js
add
jb
sti
roll
out
stos
mov
es
in
jmp
pop
mov
dec
sub
insb
in
icebp
sub
insl
mov
sti
jle
adc
cld
subl
xchg
pop
jo
pop
sub
cmp
jmp
jno
adc
push
popf
and
sub
xchg
xchg
movb
adc
insb
inc
es
pop
clc
insb
in
inc
cmc
add
sbb
cmpsb
xor
push
pushf
stos
cmp
movsl
jnp
and
xor
push
negl
loop
cmp
shlb
cli
clc
cli
clc
sarb
js
lds
and
add
pop
in
pusha
jmp
push
fiaddl
inc
addl
pop
sub
aam
subl
or
mov
stos
jle
mov
ds
mov
ds
loope
in
xchg
push
mov
xchg
dec
mov
ja
ficomps
movhps
into
insl
insb
pushf
repnz
inc
cmp
sti
aas
push
mov
add
xor
xor
iret
in
add
sbb
push
lock
pop
pop
scas
lods
cwtl
sub
out
addl
xchg
or
jae
repz
xchg
cmpb
in
lea
and
es
mov
push
jg
add
int3
bnd
sbb
mov
xchg
data16
ja
mov
fs
sar
in
inc
xchg
cmp
push
lahf
fdivl
repz
hlt
adc
shl
int
test
call
das
push
aad
mov
sub
push
or
imul
test
imul
add
push
cmp
jl
inc
add
pop
add
add
sub
jne
in
add
pop
and
jo
scas
inc
clc
ss
pop
inc
sub
movsb
cli
addb
lods
lea
sub
in
popa
inc
add
test
add
fisttpl
xchg
rcll
adc
xchg
mov
movsl
outsl
jmp
add
rorb
adc
fst
ja
inc
cmp
imul
add
cmp
or
cmpsl
mov
loope
push
test
out
dec
inc
or
mov
popl
pop
ljmp
inc
stos
aad
cs
sbb
imul
shll
adc
enter
and
adc
cmp
add
mov
in
inc
aas
mov
push
pop
inc
mov
sub
inc
lret
mov
nop
leave
clc
jae
cs
js
ret
sahf
and
addr16
cld
or
inc
add
add
add
es
data16
pop
sub
daa
faddl
pop
mov
pop
add
add
push
xchg
sarl
lcall
pop
or
out
imul
or
push
pop
mov
xchg
adc
jnp
in
add
sti
jbe
push
mov
negl
pop
jns
les
movsb
push
or
push
xor
test
int3
sti
pop
lea
pushf
cmp
nop
add
lcall
loop
pop
jae
cmp
das
add
cmp
rcrl
into
pop
push
pop
pop
xorl
mov
pop
sbb
rolb
mov
pop
cmp
popa
push
xchg
aam
fucomip
int3
das
or
mov
sbbb
xor
mov
adc
mov
test
sti
mov
aas
dec
in
mov
int3
in
or
daa
call
xchg
adc
aas
push
push
sbb
fcomps
popa
mov
add
dec
mov
imul
clc
add
add
pop
add
add
push
xlat
jnp
fxch
shrl
loop
jmp
icebp
lods
push
insl
cli
sarb
cmpsl
addr16
fwait
push
and
mov
xchg
lds
mov
call
lea
cltd
push
mov
movsl
jge
dec
push
cmove
lahf
insb
pop
lods
xor
mov
and
pushf
out
rol
adc
sub
ss
xchg
adc
ficomps
jecxz
ljmp
inc
sub
cmpsb
sub
mov
hlt
cli
mov
mov
fimull
mov
daa
mov
addb
xor
xchg
hlt
jecxz
iret
aad
jmp
rcrb
sbb
sbb
lcall
aaa
pusha
sti
sbb
fisubl
jo
or
sbb
mov
mov
mov
push
lds
ljmp
mov
and
xchg
adc
popa
popf
or
imul
add
add
and
push
sti
cmpsl
push
mov
xchg
mov
mov
pop
add
add
jno
in
out
loop
mov
popa
movsb
push
div
sti
mov
shll
mov
jne
push
adc
lret
imul
push
mov
or
dec
gs
and
push
push
xchg
xor
jmp
add
cmpsl
in
sbb
add
test
aaa
mov
repnz
mov
xchg
loop
shlb
ja
push
push
dec
ljmp
add
loop
add
jmp
adc
mov
cmp
inc
scas
cmc
lahf
repnz
dec
insl
sahf
scas
mov
movsb
mov
stos
push
sahf
rolb
adc
mov
mov
dec
xchg
push
movsl
mov
ss
inc
icebp
and
cmp
subl
jge
sub
sbb
andl
adc
enter
mov
cmp
jae
ljmp
into
xchg
dec
dec
xor
mov
or
mov
or
ja
inc
imul
xchg
leave
xchg
fwait
jbe
push
addr16
repz
push
add
mov
std
mov
ljmp
mov
add
add
add
test
sbb
orb
test
jo
call
mov
out
aad
or
hlt
test
fwait
ja
inc
or
ret
xor
incb
shll
and
mov
sub
inc
scas
add
push
lods
inc
jnp
dec
jae
ret
outsb
xchg
xchg
mov
jo
xor
xchg
data16
sub
in
stos
fcoml
push
add
cs
mov
cltd
int
dec
mov
in
std
jne
in
clc
cmc
mov
lea
inc
cmp
scas
nop
lock
lret
xchg
xchg
cli
pop
in
jo
xor
scas
nop
cs
enter
fs
cmp
jno
and
sub
inc
push
xchg
test
pop
jge
jl
mov
adc
jae
adc
out
roll
rorl
cmpsl
jo
mov
fwait
stc
repz
in
lds
call
scas
cs
add
lds
xchg
and
sbb
stc
cltd
outsb
ret
sub
add
add
add
cmpsb
and
pop
adc
add
mov
push
push
fwait
in
pop
sbb
call
jmp
bound
xor
popa
enter
aaa
mov
sub
sub
int3
cmpsl
jns
dec
fs
pushf
stos
cmpsl
js
xchg
dec
loopne
fmull
fildll
xchg
mov
and
pop
clc
jae
pushf
xchg
mov
pop
or
loop
mov
xor
in
xlat
js
inc
cmpsb
xor
pop
data16
add
test
mov
fcmovbe
mov
xor
cmp
rol
dec
ficompl
xlat
das
mov
rolb
and
and
out
into
in
mov
cmp
sti
sbb
mov
pusha
lret
jge
add
xchg
mov
mov
bound
data16
cmp
testl
clc
imul
int3
mov
xchg
mov
add
add
xchg
ficomps
cmp
jge
mov
pop
add
add
imul
aaa
negb
punpckhwd
push
inc
sub
adc
jle
mov
movsl
add
cwtl
sub
fsubs
dec
test
out
iret
inc
dec
mov
mov
iret
and
pusha
inc
in
in
xchg
into
and
mov
fnstenv
xlat
fdiv
xchg
push
jle
insb
rcpps
in
inc
outsl
or
adc
mov
pop
sarl
lcall
popa
push
sbb
lea
sub
dec
test
sbb
mov
or
outsl
xlat
leave
xor
mov
icebp
inc
mov
lcall
subl
or
addr16
mov
fnstsw
fwait
clc
add
xchg
cmp
pop
dec
sub
clc
shlb
push
dec
test
and
sbb
sti
insb
pushf
imul
pushf
and
or
xor
ja
mov
pop
inc
pop
negb
fucomip
jge
popf
loopne
dec
add
arpl
ja
js,pn
mov
dec
jno
add
pop
add
add
push
out
addl
into
ret
test
outsb
mov
mov
movl
cmp
loopne
mov
shrl
add
sbb
daa
fidivrl
adc
push
cltd
xor
sub
popf
adc
movsb
popa
repnz
jmp
cmp
mov
add
dec
popa
stos
or
mov
cli
outsl
inc
inc
jmp
leave
pop
and
subl
leave
inc
rol
fstl
add
xchg
dec
lahf
mov
jg
fdivr
jno
loopne
cmpb
mov
push
mov
ja
rclb
aas
push
pop
aam
jp
jl
loopne
pop
or
testl
or
idivb
push
cli
bound
jbe
jo
lahf
je
and
mov
mov
xlat
lock
and
push
popa
cmp
stc
sbb
es
adc
sub
sbb
and
lock
mov
sub
test
js
add
pop
add
add
jmp
inc
and
cmp
push
fwait
mov
xchg
mov
push
xchg
pusha
sti
ja
ret
std
leave
inc
push
out
pop
xchg
jg
enter
or
mov
xchg
iret
add
iret
dec
xor
lock
shll
shlb
jae
movsb
or
mov
cmp
repz
sarl
xchg
jnp
add
xchg
mov
sub
mov
aaa
jo
mov
int3
jnp
dec
ljmp
popf
cmpl
xor
push
pop
mov
jge
jge
mov
rorb
lcall
or
inc
ja
cwtl
pop
jnp
pop
fsubrl
and
pop
dec
jbe
cmp
jo
cmc
or
rolb
sub
add
push
cli
aad
lods
pop
cmp
dec
mov
and
ds
sub
mov
xor
xor
pop
mov
or
add
add
sti
pop
jge
divb
cld
xchg
insb
jg
add
pop
add
add
xchg
shlb
xchg
jo
dec
mov
jno
dec
adc
cs
and
mov
aam
dec
mov
jmp
in
mov
je
icebp
int
lahf
sub
fs
shrl
dec
adcl
or
mov
mov
xor
test
mov
xchg
dec
fisubrl
dec
pop
lea
loop
stos
fwait
mov
loop
sbb
repz
std
in
cmpsl
xchg
and
xorl
mov
mov
dec
and
leave
lahf
xchg
fdivp
imulb
mov
sbb
je
pop
rorb
dec
push
stos
sub
popa
in
mov
frstor
lds
fucomp
push
cmpsb
or
jno
insb
iret
sub
xchg
dec
negl
mov
test
lahf
jle
bound
shr
pop
shrl
push
sbb
je
sbb
add
add
fsub
std
in
popf
dec
int
hlt
out
ret
xchg
xchg
add
pop
add
add
adc
mov
jmp
lret
xor
outsb
add
jle
stos
fisubs
out
or
or
icebp
xchg
sub
stos
ss
mov
and
xchg
push
scas
ret
xorb
mov
push
jmp
cmp
mov
push
lcall
mov
jne
pop
std
outsb
mov
or
rcrb
sub
jmp
add
cmpsl
mov
xor
shlb
xchg
xchg
pushf
pop
dec
or
je
aad
mov
mov
adc
dec
int
sub
les
sbb
jp,pn
cmp
adc
nop
lods
stos
mov
test
lods
or
mov
inc
xchg
cltd
fisttpl
ljmp
fwait
mov
fwait
xlat
dec
fldcw
xlat
or
scas
into
into
sbb
push
loop
pop
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
sub
jne
cmpsl
les
pop
int
or
mov
ss
inc
mov
call
mov
test
mov
adc
mov
adc
loopne
and
add
lret
movsl
cmpsl
hlt
pop
xor
sbb
or
stos
mov
mov
add
test
push
jp
dec
mov
test
jg
shlb
sub
sbb
xor
add
jae
mov
cmpl
dec
pop
sub
mov
xor
inc
jnp
jo
add
pusha
mov
adc
or
mov
push
lahf
in
or
dec
mov
sbb
in
inc
xrelease
push
scas
sub
subb
shlb
cmpsb
inc
mov
adc
fnstenv
fcomps
cmp
repnz
adc
pop
arpl
add
adc
push
lret
mov
push
sti
das
ret
lods
daa
lret
dec
xchg
xor
add
add
add
ljmp
lea
xchg
and
pop
jg
sbb
cmp
adc
or
jnp,pt
imul
inc
xor
insb
call
in
cwtl
sub
mov
sub
cli
imul
jmp
mov
out
mov
cmpb
ret
jo
xchg
dec
dec
shlb
ret
scas
shl
stos
mov
push
xchg
xchg
fisubrl
pop
pop
jnp
pusha
arpl
sti
xchg
mov
data16
jecxz
adc
aam
movsb
jecxz
fidivl
xorl
cwtl
movsl
sbbb
xor
xchg
sbb
js
mov
or
dec
aam
xor
jns
fwait
test
cli
ficomps
and
adc
xlat
pop
dec
cmp
imul
mov
sbb
mov
adc
psrlq
iret
loopne
push
dec
add
cmp
hlt
xchg
adc
cmp
adcb
out
gs
out
xor
cmpsb
out
cli
add
cmp
sti
aad
loopne
out
popa
fwait
xor
add
add
add
jl
inc
mov
out
dec
mov
nop
sub
lcall
mov
pop
sub
pop
adc
xchg
add
cltd
push
in
dec
pop
push
jmp
jno
loop
fchs
cmpsb
add
sbb
xor
push
push
push
lods
ljmp
imul
adc
dec
push
loope
pop
push
outsl
and
inc
sbb
jl
push
mulb
push
out
pop
fiadds
fldt
xchg
aaa
pop
xor
lret
dec
shl
and
fdivrl
jmp
into
add
lahf
filds
adc
and
insl
dec
jmp
cmp
rorb
or
lret
bnd
inc
pop
jb,pt
mov
pop
add
xorps
mov
scas
movsb
aam
mov
sbb
rcrl
shrl
fidivrs
out
pop
mov
es
add
cmp
jge
stos
sbb
in
mov
add
add
pop
shl
sbb
mov
pop
push
mov
push
mov
lods
rorl
xlat
add
data16
or
add
sub
test
outsl
cli
sbb
ljmp
sbb
xor
mov
jl
ljmp
mov
je
sub
out
loopne
cld
mov
into
xlat
push
mov
push
jb,pt
mov
cltd
mov
hlt
mov
sbb
lret
jmp
sub
clc
loop
cmc
or
adc
add
iret
repz
xchg
xchg
enter
iret
scas
repz
std
sub
loop
insl
xchg
rclb
jge
adc
pop
and
sbb
cld
mov
sarb
sbb
scas
jns
sub
test
pop
and
push
pop
jno
push
fmull
push
cmc
push
cmp
add
jne
stos
sbb
mov
xlat
sub
fildll
inc
pushf
and
into
xchg
sub
sub
add
mov
arpl
lret
add
rclb
fwait
aad
nop
enter
xor
add
mov
imul
or
popa
imull
xor
dec
pop
repnz
push
gs
mov
mov
inc
das
out
dec
cmp
aaa
sbb
and
arpl
sub
js
cmp
push
pop
int
int
or
ret
mov
in
shrb
inc
xchg
mov
adc
cwtl
xchg
sub
inc
leave
or
xlat
roll
stos
aad
push
enter
mov
sbb
cmovl
les
or
or
jmp
lock
push
jge
cmp
sub
out
jge
insl
jge
mov
push
xlat
add
leave
add
adc
clc
outsl
adc
and
fldcw
out
shlb
fistps
adc
in
cmpsb
xchg
insl
popa
je
repz
lock
js,pt
xchg
push
or
xchg
push
cmp
xor
push
outsb
add
and
jl
dec
jbe
idivl
mov
jne
mov
add
pop
add
add
or
inc
outsb
push
pusha
insb
in
pop
push
test
add
and
or
rcrb
mov
xchg
pop
icebp
popa
mov
sbb
cmp
sbb
out
or
adc
cmp
inc
add
sub
pushf
pop
xor
xchg
repz
fisttpl
sbb
mov
mulb
fcmovnb
repz
scas
movsl
push
enter
imul
pop
jnp
fnstcw
stc
add
add
push
jmp
ljmp
pop
into
icebp
lahf
xor
or
jbe
ds
cmpsl
fdivrl
in
sub
shll
pushf
sub
lds
stc
jp
adc
and
ret
push
ljmp
mov
imul
adc
and
dec
inc
mov
test
and
in
and
push
ss
cmp
or
pop
push
sbb
jb
scas
sti
scas
lds
pop
sbb
and
add
add
outsb
sub
stos
fs
push
pop
or
mov
repz
mov
add
pop
add
add
stos
jnp
gs
xchg
add
shll
cmp
test
cmp
xor
jbe
jae
test
int3
loopne
and
into
mov
xor
sbb
outsb
inc
int3
mov
push
and
fstpl
jl
inc
stc
icebp
ss
xor
sub
pop
push
lcall
cmc
cmpsb
push
out
pop
outsb
shrb
and
stos
or
sti
test
sti
xor
lcall
jb
mov
jnp
or
xchg
push
je
jno
jnp
or
sub
fs
jecxz
in
insb
into
cmp
and
test
cmp
xchg
cmp
sub
arpl
or
imul
mov
and
cmp
add
lock
mov
xchg
ds
fs
jecxz
out
sbb
pop
sti
pop
mov
cltd
cmp
sub
dec
rol
mov
int3
sahf
loop
and
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
fs
ds
insb
sbb
jno
cmp
jge
add
add
inc
out
xchg
push
xlat
sub
int
lods
dec
pusha
xchg
loopne
pop
xchg
filds
mov
out
xchg
dec
dec
push
sbb
les
loopne
sar
and
pop
mov
or
ror
jl
mov
lds
cmp
lcall
mov
jle
mov
pop
push
sub
sub
push
sub
insl
sbb
jp
or
mov
add
cwtl
dec
int3
out
int
rcr
arpl
sahf
call
imul
fisttpll
inc
mov
out
outsl
sub
out
cmpsb
repnz
push
push
icebp
sahf
mov
leave
ja
in
mov
or
imul
push
cli
sbb
mov
rcl
lret
test
enter
mov
sub
dec
sbb
sbb
jnp
jnp
cmp
out
lahf
push
pop
sub
jle
lds
add
pop
add
add
out
pusha
cwtl
mov
mov
mov
and
sbb
inc
imul
xchg
out
stos
leave
mov
add
hlt
add
pop
inc
loope
jno
pop
imul
ret
adc
ljmp
aaa
cmpsb
inc
add
or
stc
sbb
inc
adc
or
lods
ret
outsl
cmpsb
lcall
outsb
push
ja
push
cmpsl
lret
pop
ds
out
adc
cli
pusha
es
xchg
push
scas
lret
aad
lock
stc
int
mov
cmp
sbb
or
adc
and
out
testl
mov
mov
lods
push
aam
jge
sub
mov
es
xchg
out
insl
sub
push
cmc
mov
mov
andl
mov
cmp
setns
icebp
sbb
es
dec
roll
js
dec
dec
aam
cli
icebp
das
cmp
test
jmp
out
mov
stos
add
adc
dec
ja
aas
outsl
xchg
sbb
int3
cmp
add
add
add
repz
pop
lret
or
outsl
push
jmp
add
cmc
fidivl
js
push
inc
and
pop
mov
cmp
sub
jo
imul
pop
lock
cmp
mov
std
xchg
testb
fsubs
mov
xor
jg
lret
mulb
xor
lods
xor
mov
in
jl
dec
scas
hlt
pushf
mov
sbb
jl
cmp
add
xlat
adc
jnp
add
xchg
inc
inc
cltd
jno
ret
aam
adc
pop
xor
xchg
jo
cmp
jns
mov
and
jge
out
fldenv
dec
pop
sub
inc
call
or
movsl
cmovb
lea
mov
mov
ja
lods
loopne
sub
adcb
pusha
and
cwtl
mov
out
test
ret
sti
bound
inc
xor
mov
outsl
loopne
test
add
add
add
add
and
das
cmp
lods
repz
out
stos
sarl
add
pop
add
add
outsb
scas
mov
and
stos
pop
cmp
nop
insb
lods
jno
inc
cli
bound
and
add
and
mov
jl
shr
mov
dec
inc
pop
pop
dec
or
int
int3
dec
xchg
mov
arpl
subb
xchg
shl
repz
sbb
cmc
vmovhps
clc
mov
inc
mov
outsl
arpl
dec
pop
leave
sub
enter
mov
jne
mov
inc
outsb
fwait
cmp
jae
fldt
jae
xchg
mov
pop
xchg
push
iret
xor
jne
mov
inc
dec
repz
dec
push
mov
mov
test
inc
cwtl
cmp
xlat
mov
mov
xchg
aam
fdivrp
add
stos
dec
cmpsl
adc
in
dec
cmc
or
and
aaa
lret
fdivrl
cli
leave
or
jbe
pop
and
pop
std
pusha
xchg
jmp
pusha
pop
cmp
xor
adc
aam
jp
aas
daa
push
cld
push
std
jmp
pop
adc
pminub
add
add
add
scas
lock
xchg
imulb
sub
test
pop
outsb
movsb
adc
add
rolb
out
pop
loope
adcl
icebp
ljmp
inc
fwait
aad
dec
jo
stos
test
std
cmp
push
adc
test
icebp
pushf
addb
xchg
mov
rcl
xor
je
mov
cmpb
es
in
cwtl
adc
adc
adc
mov
xchg
es
dec
int
push
ret
xor
jle
push
push
mov
cmovns
add
add
fcomps
gs
or
or
je
or
adc
cmpsb
ret
xchg
mov
outsb
lcall
adc
aam
and
push
stc
mov
xchg
add
jecxz
inc
push
popa
adc
mov
pop
ss
jecxz
in
sahf
gs
sbb
xchg
jg
movsb
cs
lret
test
fidivrl
sbb
adc
add
dec
push
add
sbb
dec
push
out
jge
dec
sbb
add
pop
add
add
push
je
add
xchg
cld
adc
add
sub
mov
xor
mov
mov
shl
sarl
xchg
ds
xchg
jmp
movsl
movsb
lret
cltd
sbb
jns
inc
sbb
movsb
mov
hlt
cmp
adc
and
xlat
sarb
pop
sub
xor
or
inc
je
into
inc
insl
orb
or
mov
out
mov
scas
xchg
inc
aaa
dec
adc
mov
mov
xor
sbb
jae
ja
call
mov
repz
sahf
jne
out
cs
pop
inc
cmc
fdivp
out
jmp
xchg
xor
push
fistl
sub
int
xor
cmp
and
xchg
inc
xchg
jno
loopne
inc
pop
xor
test
imul
test
pusha
mov
lret
rclb
add
idivl
mov
or
add
pop
add
add
sub
imul
call
sti
stos
sub
jno
pop
iret
sbb
outsl
notb
xchg
inc
pop
repz
mov
movsl
lods
sbb
inc
pop
out
gs
stc
jb
pop
in
and
sbb
lahf
mov
in
sti
push
lods
adc
test
or
push
sbb
sbb
shl
sub
mov
lret
add
mov
inc
push
mov
test
leave
mov
stos
and
movsl
cli
sahf
pop
add
inc
into
scas
cs
push
mov
int3
test
sbb
inc
in
xchg
inc
mov
fsubl
mov
sbb
in
aaa
loopne
adc
fldenv
fstl
fistl
adc
pusha
sbb
cmp
addr16
shlb
or
push
sub
mov
xor
or
inc
jbe
pop
pop
cmpl
outsb
inc
pop
out
loope
sub
into
aas
jne
xchg
add
jg
xchg
cmp
push
roll
out
aas
add
pop
add
add
mov
cmp
mov
add
pop
dec
mov
aad
std
xor
in
js
int
dec
mov
loopne
fsubl
add
adc
pop
repnz
xor
sub
dec
shr
xchg
shrb
mov
mull
sub
aam
flds
jl
push
jns
pop
movsl
cli
or
cli
mov
mov
dec
arpl
in
out
xor
sbb
out
pop
int
xchg
sbb
jp
fucomi
test
scas
and
push
into
ror
push
push
data16
mov
popf
scas
or
jmp
ss
pop
rolb
jnp
lahf
test
push
scas
stos
sub
fwait
popa
inc
add
push
scas
push
je
fwait
popf
in
push
add
and
pop
xor
mov
int
push
add
iret
fsubs
add
xchg
lahf
sbb
pop
add
daa
ja
fidivl
cmp
xchg
out
je
rol
out
add
push
dec
lret
jmp
imul
push
ds
arpl
inc
add
pop
add
add
fdivl
lahf
fcmovu
leave
xor
sbb
fsubrl
je
call
ds
shll
adc
jp
pop
pushf
cld
popl
pop
jg
jnp
lods
xchg
jne
pop
sub
cmpl
mov
or
mov
dec
sbb
xor
movsb
mov
jb
sbb
cmp
pop
cwtl
int3
lods
mov
dec
movsb
clc
scas
icebp
sbb
cs
cwtl
pop
cmc
testb
inc
insl
fisubl
push
sbb
mov
cmpsb
popa
mov
sub
test
arpl
sti
sbb
adc
cmp
xchg
les
sbb
or
push
insl
sbb
sahf
outsb
lcall
xlat
mov
movsl
jl
inc
jnp
inc
rolb
jns
xorb
and
add
mov
mov
push
push
xor
fcmovbe
je
fs
pop
movsl
gs
mov
lds
cmc
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
mov
out
or
mov
cmpsl
pop
inc
mov
jb
add
movsb
dec
jl
in
loop
mov
mov
rclb
test
outsb
dec
xchg
fiadds
inc
ja
negl
rcrb
out
dec
in
sbb
lcall
mov
inc
fistpll
xchg
ja
sbb
into
mov
lcall
mov
in
sbb
mov
pop
aad
mov
popa
jbe
inc
or
push
xchg
jmp
pop
dec
imul
shrl
cmc
or
stc
and
sbb
jne
ds
lfs
pop
cmpsb
ds
pop
cltd
test
ficompl
fwait
add
imul
aaa
daa
dec
movsb
or
and
call
cmp
pop
in
push
cmp
fistl
mov
add
sub
jns
imul
and
faddl
add
pop
add
add
cmp
xlat
xchg
sub
mov
stc
outsb
push
into
bound
sbb
push
aaa
jge
mov
aas
xchg
pop
shrl
mov
and
jae
lock
pop
inc
test
inc
rorl
in
sub
cwtl
pushf
jns
or
xchg
imul
rcl
push
mov
mov
cmp
insb
repnz
push
sub
xchg
enter
shl
arpl
and
mov
push
push
mov
fwait
out
stc
mov
cmc
push
xchg
or
call
mov
mov
xchg
xor
in
out
cmp
scas
popf
movsb
test
adc
push
mov
faddl
pop
dec
xchg
mov
ret
mov
bound
fdivs
nop
in
inc
call
xchg
popf
jl
sti
cmp
adc
sub
or
mov
rol
orps
fcoml
cmp
aam
repz
push
add
ret
jg
jmp
repnz
add
fsubrl
add
add
ret
shlb
xchg
rol
out
adc
jge
add
lcall
jecxz
orl
ljmp
jns
mov
insb
cli
pop
int3
out
in
fcomip
push
inc
push
jp
cmp
popf
sub
xchg
jno
cld
adc
addr16
push
adc
pop
mov
xor
sbb
cmp
fwait
icebp
xchg
popf
jns
jecxz
testl
dec
aad
outsl
repz
sub
shr
stos
dec
icebp
add
shll
jp
sub
inc
pop
mov
inc
xchg
push
and
add
mov
xor
pop
pushf
data16
pop
test
dec
fs
test
mov
xor
xchg
lret
dec
jmp
les
pop
mov
push
push
sti
mov
push
cli
mov
dec
scas
mov
and
stos
xchg
mov
or
pop
outsl
std
xchg
mov
fcomip
xchg
stc
pop
mov
add
das
mov
and
fld
jl
adc
add
add
add
scas
popf
push
lret
std
loop
push
cmp
jmp
add
sub
inc
dec
mov
fistpll
mov
add
add
ja
ret
mov
in
and
xchg
cld
in
and
mov
and
sbb
std
push
mov
ss
out
mov
adc
repnz
inc
sub
xor
add
dec
aaa
pop
xchg
jns
push
add
xor
sbb
data16
dec
add
lods
addr16
jecxz
adc
mov
lods
jb
adc
js
pop
cmp
push
mov
in
inc
sbb
shlb
jp
adc
js
xlat
jne
pop
out
or
ljmp
ret
test
sbb
into
jecxz
bound
hlt
aad
adc
adc
dec
adc
or
in
daa
rol
add
xchg
push
pop
pop
pop
test
push
push
xor
add
inc
icebp
hlt
gs
adc
ficoms
and
outsl
xchg
inc
add
pop
add
add
out
ficompl
cltd
push
insl
and
cmc
xchg
movsb
xchg
movb
pop
fwait
sbb
lcall
mov
ja
sbb
dec
adc
iret
pop
shll
ja
lods
enter
mov
hlt
mov
mov
xchg
jle
leave
idivb
jno
mov
lret
jg
jo
das
testb
push
jae
or
jle
aam
clc
jg
add
cmp
push
aas
lcall
insl
xor
push
xchg
ret
stos
lea
fsubrl
popf
push
and
loop
inc
dec
sbb
sti
jb
inc
lds
inc
mov
mov
popf
push
inc
or
add
mov
and
add
adc
or
push
std
pusha
push
stos
call
mov
pop
stos
or
push
mov
push
shlb
call
outsb
lea
aas
out
pop
cwtl
std
sahf
jns
dec
mov
mov
push
out
add
aas
gs
mov
push
lea
pop
add
add
rorb
cmp
outsb
clc
in
pop
movsl
mov
mov
icebp
or
fadds
shrl
fsub
mov
jecxz
push
loop
dec
repnz
pusha
sub
mov
cwtl
int
sbb
movsb
les
sbb
pop
aas
sbb
push
loop
imul
insl
inc
je
cmc
addb
lret
popf
xchg
and
xchg
das
sbb
cmc
imul
push
fsts
cmp
js
or
inc
test
pmaxub
cmp
jge
mov
adc
in
stos
sub
popf
iret
inc
cs
adc
nop
fsubs
or
xchg
lcall
jge
jl
js
dec
test
mov
jle
divl
mov
gs
jo
fs
psadbw
test
scas
xor
fcoms
sub
xchg
gs
enterw
add
lea
aad
add
inc
jl
push
mov
into
aam
mov
out
fnstsw
inc
xchg
sti
daa
dec
add
pop
add
add
sub
fsts
push
testb
sbb
and
inc
test
jp
adc
shrl
shll
push
pusha
jp
adc
lock
sahf
loopne
in
xchg
iret
dec
inc
jg,pn
adc
pop
dec
lcall
cmp
add
dec
lds
out
add
andb
xor
inc
movsl
mov
cli
scas
fwait
out
iret
test
sti
mov
cltd
fdiv
pop
movb
sbb
jns
xor
lret
imul
inc
push
cmp
push
push
call
lock
inc
cmpsl
dec
sub
cmpsl
or
out
mov
jbe
xchg
and
mov
dec
xchg
inc
cmp
jge
adc
mov
js
icebp
je
or
inc
xor
cs
mov
sbb
test
or
fildll
mov
sub
cs
add
pop
add
add
mov
lods
dec
movsl
push
aad
xor
loope
loop
pusha
pop
dec
data16
ficomps
subl
jo
mov
out
dec
pop
dec
push
sahf
fdivs
lock
lock
cmp
prefetch
lods
fstl
push
jp
addr16
and
insl
or
push
jecxz
or
adc
lock
cmp
fldcw
je
sar
jp
or
mov
pop
loope
add
shlb
jo
scas
popa
sahf
fcomps
dec
clc
cli
and
pop
dec
pop
and
arpl
pop
cmp
or
mov
or
sub
mov
ret
push
push
les
test
ss
ja
std
hlt
mov
mov
and
push
test
subl
adc
mov
mov
imul
mov
or
daa
adc
push
and
add
push
sbb
jmpw
fnstcw
push
xor
push
jb
das
xor
add
add
mov
adc
sub
data16
mov
enter
fldcw
decl
sbb
lret
jbe
aaa
dec
hlt
nop
sub
inc
cmp
jl
ret
xchg
outsl
shlb
cmp
sbb
jl
xor
cmp
loopne
mov
dec
jnp
mov
lcall
faddp
dec
pushf
and
or
fcmovbe
mov
push
pop
movsb
loopne
push
cs
adc
shll
or
insl
pop
popf
loope
vxorps
shlb
adc
xchg
push
je
push
fcoml
push
push
inc
imul
inc
push
inc
xchg
gs
push
adc
jp
ss
shl
imul
mov
inc
addr16
fadd
sub
and
rclb
mov
push
rcl
imul
js
xor
xchg
mov
cmc
dec
leave
bound
and
add
imul
out
mov
xchg
in
loopne
cmp
add
pop
add
add
movsb
repnz
mov
fadd
inc
xchg
adc
fmulp
xchg
clc
cwtl
xchg
lahf
stos
mov
stc
add
in
sub
inc
lds
pop
test
or
int
sub
mov
es
mov
out
xlat
dec
cmp
inc
mov
push
cld
mov
aas
adc
mov
mov
cli
aas
or
add
pop
inc
pusha
jmp
inc
mov
jp
add
aam
pop
mov
xor
cli
inc
in
ret
sbb
test
dec
mov
pop
fcoms
imul
mov
mov
jae
jg
inc
loop
add
jmp
add
jg
cmp
lods
popf
sbb
mov
std
out
lret
jbe
pop
into
int
arpl
lea
sub
loope
or
insl
imul
add
add
dec
stc
mov
pop
sub
add
xchg
inc
dec
add
pop
add
add
pushf
out
insb
mov
adc
mov
dec
inc
loope
dec
popf
test
dec
ljmp
lods
cmp
xor
inc
inc
pop
add
out
and
mov
push
scas
fnstcw
mov
imul
jge
adc
or
call
arpl
sub
and
or
mov
icebp
or
adc
bound
out
mov
test
cmp
or
inc
dec
rcrb
je
fsub
mov
mov
adc
sub
ret
xor
movsb
xor
lcall
push
add
push
call
and
sbb
add
or
ljmp
mov
inc
cs
clc
mov
xchg
jmp
or
add
add
add
jg
cld
dec
loope
sbb
mov
das
dec
dec
add
pop
add
add
push
into
hlt
test
xor
xor
aam
push
mov
adcl
lea
add
sbbb
add
xchg
decl
popa
xor
jnp
pop
enter
jb
test
shll
jecxz
repnz
xor
cmc
mov
push
sbb
and
or
out
xlat
add
jle
mov
enter
lcall
add
xlat
sti
adcl
add
call
pusha
sahf
cmp
loopne
xchg
dec
push
ds
out
push
repnz
int3
push
bound
repnz
imul
push
adc
mov
xor
repnz
fcomi
inc
xor
call
decl
push
stos
stc
fmul
mov
lahf
inc
hlt
adc
out
inc
fimuls
fstl
popa
cltd
jl
fxch
iret
in
cmpsl
or
pop
pop
jo
add
xchg
mov
mov
jmp
add
add
add
jmp
insb
je
dec
pop
jl
mov
insl
stos
cmpsb
push
pushf
pushf
jg
mov
les
in
pushf
cmp
cmp
xor
cmp
mov
or
and
dec
ljmp
mulb
cli
jns
je
imul
pop
push
sbb
cmp
js
mov
popa
sub
jo
rclb
scas
push
cld
in
dec
push
loope
fxch
sbb
daa
add
xchg
dec
mov
push
jp
mov
int
sbb
mov
sahf
shll
cmpsl
lahf
fsubp
icebp
je
xchg
pop
xor
mov
cli
xchg
pop
outsb
xor
je
lock
fsubl
cld
mov
jno
dec
lahf
add
push
lret
fcomip
fstps
rcr
jl
xchg
icebp
jno
jp
out
jae
jno
mov
cmc
push
cmp
stos
outsl
hlt
add
movsl
iret
das
inc
xchg
mov
add
add
inc
mov
push
push
jmp
mov
push
negb
add
pop
add
add
adc
cmp
in
jle
mov
enter
shll
sarb
int3
push
pop
cltd
out
jecxz
pop
repz
cs
out
je
jmp
leave
or
mov
or
in
mov
outsl
cld
movsl
mov
mov
mov
inc
mov
xchg
dec
add
lahf
rcr
add
or
mov
or
push
test
or
xchg
shlb
imul
int3
js
pop
lock
sub
roll
add
xchg
test
pop
mov
repnz
mov
ret
fs
xchg
fprem
mov
jl
aaa
mov
sub
jae
xor
lcall
loopne
in
add
inc
and
out
jmp
movsl
out
iret
imul
jp
int3
sbb
or
repz
xchg
scas
xchg
iret
mov
insb
cmp
mov
xor
arpl
pop
mov
mov
adc
add
sub
cmp
cmc
push
adc
pop
bound
pop
add
add
sub
mov
mov
mov
xor
aaa
fwait
imul
out
loope
push
andb
int
jae
xchg
and
mov
xor
jbe
mov
sti
jecxz
insb
lods
add
int
add
and
cmpsb
test
pop
or
adc
jne
push
gs
mov
lods
jnp
mov
adc
lds
jo
push
loopne
jl
hlt
aaa
mov
cmp
sub
mov
pop
mov
shl
movsl
ja
adc
or
mov
inc
sbb
cli
outsl
cwtl
daa
sbb
sub
negb
xor
mov
cwtl
lret
and
mov
fildll
ljmpw
push
clc
cmove
repz
mov
jl
sbb
fistpl
dec
xor
and
push
movsl
aas
xor
fists
lods
adc
or
push
shll
out
je
pop
inc
mov
push
add
pop
add
add
arpl
ret
push
popa
mov
dec
loopne
stos
xor
stos
sbb
cmpsl
lods
jp
repnz
sbb
pop
sarl
sbb
leave
mov
or
mov
cld
movsb
xor
addr16
test
pop
cmc
mov
scas
mull
push
dec
and
testb
adcb
arpl
lret
les
sbb
std
adc
pushw
ljmp
out
ficomps
jp
jecxz
hlt
mov
jbe
fstps
pop
pusha
dec
testb
push
mov
jg
ss
dec
stos
mov
xchg
push
into
jg
ds
popa
adc
popf
ret
loop
xchg
or
lds
mov
mov
insl
or
mov
xor
lea
mov
sub
add
cld
jp
push
push
add
adc
stos
push
lcall
lock
gs
pop
add
add
shr
repnz
js
mov
sub
fcomp
pop
popf
fwait
xor
out
mov
jg
cwtl
outsl
jecxz
pushf
jno
pop
inc
xchg
add
push
ret
mov
cmp
movsb
cmp
loopne
cs
ret
sbb
xchg
cltd
das
leave
mov
pop
pusha
cmpsl
mulb
mov
addr16
fimuls
mov
int
das
test
xorb
imul
scas
xchg
add
cmpsb
ficomps
adc
pop
test
daa
movsl
mov
lret
push
inc
and
enter
rorl
push
sbb
jg
mov
test
fdivrl
adc
test
mov
jns
mov
into
xchg
test
push
das
push
xor
dec
lods
cmp
and
stc
adc
mov
xchg
iret
stc
shr
xor
cmpsl
aam
sub
ret
test
stc
pop
dec
xor
xor
mov
add
jbe
idiv
imul
ret
je
add
pop
add
add
mov
int
out
push
cld
mov
push
cs
std
icebp
add
daa
imull
push
push
pop
push
sub
cmc
test
dec
cmp
es
and
push
xor
stos
jp
jno
int3
push
pop
push
lahf
lods
dec
arpl
xor
push
mov
or
jbe
sbb
fisubs
jge
jno
add
pop
or
movsl
push
sub
sub
inc
repz
pop
cwtl
add
packuswb
ss
inc
hlt
sbb
out
out
call
mov
test
cld
sub
les
dec
mov
add
pop
lcall
and
pop
sub
out
cmp
sbb
mov
sarb
and
push
ja
out
and
or
sti
rcrb
mov
xchg
out
xor
adc
lahf
ds
shl
push
mov
adc
les
jae
fwait
cmp
xchg
xchg
dec
inc
outsl
adc
jnp
add
pop
add
add
loop
adc
mov
cwtl
aam
pop
lahf
dec
jge
ss
mov
idivb
jb
or
jle
repz
sub
mulb
fstps
aad
or
sub
bound
rorb
jne
iret
pop
js
xchg
sbb
push
xor
clc
jns
jmp
pop
or
outsl
scas
lods
test
mov
js
test
dec
shrb
xchg
jnp
orb
mov
xchg
aad
mov
test
pop
jno
inc
dec
jo
lods
sahf
dec
adcb
cmp
icebp
and
sbb
or
sarl
or
push
les
sbb
xor
lods
test
pop
sahf
jmp
ror
shll
sarl
mov
mov
pop
sub
mov
sub
rol
mov
fwait
ret
mov
insb
push
mov
lret
testb
loope
or
add
add
clc
mov
mov
pop
fists
push
add
pop
add
add
xrelease
out
test
xchg
push
cmp
and
jge
arpl
subl
jb
subl
xor
jp
inc
or
stos
loop
cmc
out
mov
jne
adc
mov
roll
inc
sahf
int
pushf
and
mov
sub
repz
fs
adc
movsb
xor
cltd
jb
enter
jmp
fcompl
cmp
ret
inc
nop
outsl
jp
stc
jo
inc
enter
aaa
repz
dec
pop
xchg
insb
fcomp
int3
pushf
cltd
mov
shll
pop
adc
or
lcall
mov
aas
popf
rclb
pop
sar
test
jp
hlt
sbbb
scas
sbb
xchg
popf
insb
outsl
cwtl
in
mov
dec
das
test
jl
inc
push
sub
in
dec
stos
jo
or
dec
popa
lods
aaa
rolb
cs
push
hlt
dec
dec
push
mov
bound
fnsave
push
add
shr
mov
inc
cs
mov
add
add
add
pop
inc
xchg
jae
sbb
outsl
jl
add
dec
mov
lahf
cmc
mov
push
cmp
add
mov
adc
push
mov
mov
pop
dec
ror
jae
lcall
enter
xchg
jnp
inc
rcrb
aad
bound
pop
pop
mov
imul
repnz
repnz
adc
add
arpl
adc
test
mov
aad
clc
lock
out
cmp
add
add
outsl
mov
lods
xor
std
sub
add
pop
mov
jns
jbe
or
and
mov
lods
jg
fimull
xchg
mov
mov
in
and
jae
out
sbb
push
dec
cli
fimull
in
dec
sbb
jp
sub
and
dec
push
cmc
mov
mov
inc
stos
fsts
in
pop
mov
test
or
fdivs
pusha
je
mov
add
add
or
mov
xor
mov
imul
out
daa
push
sbb
or
jecxz
jb
stc
sbb
sar
xchg
call
mov
pop
jo
inc
nop
add
ja,pt
sub
pop
lods
ljmp
adc
sbb
sbb
movsl
cld
pop
sarb
pop
mov
sub
push
pop
popf
pusha
faddp
bnd
jle
sbbb
push
adc
call
dec
loope
in
cmc
sbb
xor
and
push
mov
or
lcall
xchg
jge
sbb
andb
in
mov
mov
jbe
push
pop
dec
roll
inc
adc
sbb
mov
call
sbb
push
icebp
cli
leave
mov
cmp
in
test
add
testl
push
popf
mov
out
setno
add
fcompl
pop
add
add
mov
and
das
jmp
cmp
add
pop
add
add
xor
dec
ljmp
adc
push
push
xlat
or
test
test
xor
mov
orb
sarb
inc
or
adcl
mov
inc
les
rolb
clc
call
push
loope
sub
cmc
mov
push
push
clc
mov
lods
push
insb
stc
xchg
and
loope
fildl
jge
pop
insb
pusha
adc
cmp
cwtl
aas
repnz
mov
add
loope
testb
rcl
pop
push
sbb
lods
add
mov
mov
pop
pop
mov
cmpb
insb
xchg
and
repz
inc
cld
inc
test
cwtl
xchg
sub
outsb
push
lahf
or
or
sti
cmp
cltd
cwtl
jno
push
lret
lds
fnsave
pop
xchg
mov
cmp
xorb
ja
sbb
pop
aaa
movsb
test
mov
rcr
test
push
sbb
gs
mov
fsubl
mov
jne
ret
xlat
aad
pop
add
pop
add
add
cmpsl
xchg
jge
test
jp
push
cmp
shlb
sub
iret
push
mov
mov
pop
fimuls
pop
or
cld
cmpsl
es
jno
inc
push
or
add
dec
scas
sbb
jp
dec
mov
or
in
cli
sub
fidivs
adc
test
jbe
cltd
pop
inc
adcb
enter
sarb
pop
xchg
jbe
or
cmp
add
xchg
dec
xchg
adc
xlat
cmpsb
out
jne
rcrl
fwait
scas
cld
insb
scas
lcall
xchg
inc
cli
inc
lods
sbb
pop
jecxz
or
out
inc
adc
jecxz
jl
jae
ljmp
subb
add
sub
mov
movsl
jbe
xor
xchg
or
push
jbe
dec
push
lock
cmp
dec
pop
cmpsb
mov
inc
cmpsb
pop
shrl
mov
jle
push
xlat
std
pop
arpl
loop
test
nop
inc
ds
mov
add
fbstp
scas
adc
lahf
std
test
xchg
inc
movsl
pop
add
pop
add
add
into
jge
cwtl
loop
adc
xor
jge
push
ds
mov
stos
sbb
or
inc
mov
adc
xchg
xor
cmpsl
adc
dec
repnz
pop
sar
cwtl
fs
cmp
cmp
orb
add
ret
inc
shll
cmp
divb
pushf
cmp
push
push
sbb
lcall
xchg
dec
out
inc
push
test
add
int3
cmp
and
ret
ljmp
inc
or
loope
dec
jnp
ret
popa
push
dec
nop
xorl
into
arpl
das
cmc
jecxz
imul
aam
cmp
mov
aam
mov
std
adc
or
push
lods
cld
jno
dec
ret
out
ret
xchg
sub
mov
cmc
jecxz
sbb
inc
xchg
jg
ret
insb
sti
ret
rcll
lds
movntq
add
mov
pop
stc
mov
hlt
sub
add
mov
adc
ss
or
stos
pop
cmpsb
mov
or
or
cmp
dec
ficoms
sbb
xorb
cmp
mov
mov
fwait
shl
pop
mov
jp
sbb
in
sub
enter
pop
aas
pop
sbb
ss
jecxz
outsl
adc
shlb
out
sub
data16
xchg
filds
daa
shlb
cltd
jmp
roll
dec
leave
adc
mov
pop
jno
cmc
cmpsl
mov
lahf
out
sub
xchg
mov
adc
adc
jns
nop
adc
shll
push
cli
xchg
adc
adc
shrb
ljmp
or
push
mov
pop
movsb
mov
adc
lock
sahf
jb
add
mov
xor
daa
nop
sti
in
lret
and
pop
and
and
jg
inc
mov
aam
stos
mov
dec
inc
add
push
into
push
mov
pop
pop
adc
pop
add
pop
add
add
cmc
jl
sti
fiaddl
dec
push
sub
jmp
sbb
dec
popf
hlt
in
movsb
inc
add
sub
mov
popf
decl
xor
fcmovnu
jl
pop
jle
add
push
fsubrp
scas
mov
lock
sbb
fcomps
js
imul
test
jo
ds
ljmp
or
mov
lret
dec
cltd
test
and
std
pop
test
mov
in
jno
std
xchg
cltd
jbe
jb
mov
mov
int3
mov
pop
jle
fdivr
in
adc
aad
pop
aam
inc
scas
les
test
mov
sub
in
outsb
xchg
sub
mov
jns
ret
lods
lcall
lods
dec
xchg
iret
test
cmpsl
mov
push
aaa
dec
and
es
mov
and
or
repz
lods
push
jl
loopne
cmp
cltd
cmp
and
mov
sub
ds
dec
scas
stc
mov
add
add
push
std
call
adc
add
jo
xchg
sub
add
pop
mov
adc
lods
daa
outsl
aam
ficoms
sbb
shll
cmp
and
das
and
stc
out
das
sub
sub
es
out
xchg
sub
push
lea
xchg
mov
mov
mov
js
dec
jl
mov
icebp
loope
jecxz
stos
jns
jb
fs
mov
sub
incb
jmp
mov
mov
mov
lret
and
mov
fisttpl
lea
je
cmpb
and
scas
cmp
rcll
dec
sub
mov
mov
cmp
ja
jo
mov
adc
push
rorb
jg
pop
fs
sbb
rcrl
stos
sbb
das
adc
jns
filds
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
lret
inc
and
dec
rcrl
pop
add
add
addb
in
sti
pop
jo
lret
or
or
int
sub
pop
push
and
inc
popa
push
lock
ss
js
lods
add
mov
mov
aaa
cmp
dec
jns
pop
push
lret
cs
testl
jbe
je
inc
or
sub
xor
jne
mov
aam
push
lock
icebp
rorl
out
and
int3
cwtl
lea
sub
cmp
cltd
push
xor
addl
or
shl
lcall
mov
dec
jo
fwait
jnp
outsl
xor
test
sbbl
pop
push
jo
sti
gs
jo
inc
push
lcall
flds
xchg
int3
jp
push
mov
adc
mov
add
mov
pop
in
dec
sub
pop
pusha
jno
push
jge
lods
pop
pop
leave
dec
cmp
jb
sahf
pop
testl
fucomi
adc
pop
add
pop
add
add
call
sub
add
or
inc
add
adc
ss
cwtl
gs
push
movsb
xchg
scas
lcall
shr
cmp
add
adc
cli
adc
out
xchg
test
or
jg
push
into
or
mov
fildl
pop
or
test
and
mul
mov
mov
loopne
sub
mov
addr16
and
in
int3
mov
ret
push
pusha
arpl
test
loope
xchg
js
sub
leave
bound
push
adc
lcall
testb
adc
inc
jno
iret
jnp
and
inc
enter
add
not
inc
fsubrs
in
sbb
popf
cmpb
mov
out
cmpsl
xchg
call
and
and
pop
pop
xor
cmp
push
faddl
sti
nop
inc
in
shlb
iret
testb
fdiv
dec
mov
call
dec
mov
jo
mov
add
pop
mov
mov
and
xchg
pusha
add
pop
add
add
mov
mov
mov
cld
je
mov
fs
sbb
push
adc
test
nop
insl
mov
jp
aad
jp
jno
jno
sar
mov
pop
je
orl
iret
xor
cs
sub
adc
pop
addr16
inc
xorb
popf
mov
fdivr
nop
loope
or
xchg
adc
sub
xor
sti
push
loope
sub
jbe
and
jae
frstor
dec
mov
sub
jp
mov
in
fldcw
into
je
push
sbb
lock
pop
add
sbb
int3
push
or
bound
hlt
push
push
das
imul
shl
test
in
test
push
out
ljmp
sub
pop
orl
gs
mov
and
sub
mov
ss
dec
jp
xchg
xchg
xor
ret
loope
inc
stc
xor
and
stc
in
sbb
add
repnz
movsb
jle
stc
test
popa
jo
scas
inc
popa
add
pop
add
add
ret
xor
imul
aas
lods
jno
addl
cltd
pop
xchg
in
pop
lods
mov
test
lret
lds
sahf
jo
lcall
jmp
sub
fnclex
imul
shlb
dec
push
mov
jo
jno
push
mov
sub
mov
stc
xchg
pushl
cwtl
adc
subl
je
inc
push
adc
repnz
push
add
cmpsb
inc
xchg
lods
sub
sbb
xor
bound
pop
ja
dec
aad
mov
insl
and
adc
ds
push
mov
cmpsl
clc
push
lods
leave
divb
fistps
jg
leave
adc
fucomip
dec
or
push
fs
gs
fs
cmp
ret
int3
sub
mov
test
push
xor
jne
pop
jle
insl
inc
inc
enter
mov
mov
add
stos
sub
stos
out
jmp
sub
xorb
frstor
add
add
add
lcall
cmp
ljmp
hlt
add
sti
fwait
outsl
lods
sub
lods
sub
or
push
shll
shlb
xchg
inc
sbb
adc
cmpb
out
imul
adc
mov
out
insl
push
jge
shl
xor
andl
data16
insb
hlt
dec
lods
sub
test
and
cli
fcompl
lea
mov
jns
adc
mov
push
test
in
int3
jb
and
data16
rcl
mov
mov
xorb
popa
movsb
pop
or
adc
add
xor
xchg
je
out
inc
fisttpl
adcb
orb
cwtl
das
scas
jp
addr16
xchg
dec
cmp
push
hlt
pop
sbb
add
jb
push
xor
dec
xchg
call
out
sub
mov
aas
pop
pop
sbb
mov
std
jmp
imul
pop
inc
push
outsl
add
mov
fnstenv
xor
mov
arpl
add
add
add
sbbb
popa
sub
push
outsb
xlat
add
inc
inc
cld
mov
pop
mov
push
cmpsl
mov
dec
loopne
pop
cli
movsl
push
mov
xchg
aaa
inc
pop
iret
or
fistpl
mov
dec
xchg
outsl
mov
mov
push
mov
dec
in
aas
cmp
jp
shr
sub
ss
sbb
add
fcoms
sub
mov
lret
jno
ds
in
cmpsl
std
adc
aam
dec
subb
pushf
rorl
ss
mov
mov
movsl
cmpsl
sbb
into
scas
js
pop
cmpsl
or
push
imul
mov
adc
push
inc
fdivrs
mov
aaa
cwtl
andl
ret
enter
fucompp
imul
dec
in
inc
adc
xchg
fs
insb
fldcw
je
dec
or
or
and
lahf
outsb
adcb
cld
je
jbe
decl
rcll
add
pop
add
add
add
flds
dec
or
push
push
pop
icebp
jp
in
pushf
xor
cmp
or
add
mov
bsr
les
mov
fstpl
int3
sbb
jne
ret
inc
mov
aam
mov
sub
lds
xor
ljmp
popf
rcrb
shll
xchg
pop
test
mov
dec
push
movsl
jle
xchg
imul
in
das
insb
fs
inc
sub
dec
sbb
call
jae
inc
adc
std
imul
and
sbb
xchg
mov
pop
cld
out
insl
nop
pushf
pop
repz
push
adc
xchg
push
icebp
dec
ret
jge
loope
or
jmp
lods
xor
jns
inc
lea
daa
add
and
pusha
inc
popf
inc
out
pop
iret
inc
or
lahf
andb
hlt
sub
dec
cli
ljmp
push
lea
push
test
fldenv
lds
inc
push
insl
add
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
ljmp
sbb
dec
xchg
mov
lcall
insb
icebp
lcall
cmp
jno
xchg
sbb
dec
dec
sub
ds
dec
mov
insb
in
in
mov
rcrb
test
sub
rclb
mov
mov
addr16
fcoms
xchg
cs
stos
sub
idivl
notl
in
push
push
ljmp
out
cwtl
jnp
push
ret
push
xlat
mov
pop
mov
push
mov
fbld
push
cmp
insl
lods
fsubrs
in
push
xlat
mov
ja
iret
mov
cwtl
gs
leave
xchg
std
imul
outsb
lcall
inc
lea
xchg
mov
popa
js
cmp
mov
imul
xchg
test
and
pop
enter
addr16
xchg
cmp
movsl
test
mov
fistps
inc
xchg
jnp
repz
add
add
push
jg
shll
stc
add
pop
add
add
push
popa
js
pop
js
hlt
lds
mov
sbb
cmpsb
stc
jmp
pop
jno
and
and
sub
and
leave
pop
addr16
mov
push
fisubrl
mov
out
scas
adc
and
sbb
push
insb
ds
sbb
pop
mov
xchg
in
xchg
sti
xor
out
ja
push
fdivrs
mov
scas
popl
adc
lods
into
inc
dec
stc
inc
nopl
adc
add
outsb
ficoms
mov
ss
or
scas
ret
insb
je
mov
fldcw
test
lret
lahf
pop
xor
pop
jbe
xchg
cmpsb
mov
cmp
or
mov
dec
insl
xor
add
test
xchg
jb
push
shrb
rcrl
push
jbe
arpl
sub
mov
mov
clc
dec
and
push
sub
add
mov
fucomip
lock
cmp
push
add
xlat
mov
sahf
xor
add
xor
les
lea
pop
lock
sub
inc
push
cmp
inc
add
bound
sub
aad
push
sub
inc
adc
call
jb
xor
lods
out
dec
cwtl
push
push
imul
stos
nop
mov
push
mov
fwait
in
sbb
and
fs
lock
sbb
jae
jns
shll
loope
xor
jle
leave
icebp
push
mov
into
shrb
mov
fdivl
jecxz
fdivs
popa
lea
inc
push
dec
rcrl
push
cmp
or
rorl
popf
call
or
mov
enter
jl
lcall
add
xor
cmpsb
ss
rcrl
add
xor
jle
sbb
ds
jp
test
inc
shlb
inc
push
std
iret
push
push
mov
inc
add
cmpsl
ret
out
add
dec
out
iret
jmp
das
mov
into
mov
imul
add
push
pusha
xor
in
lret
and
int
push
cmc
ljmp
or
xchg
adc
aad
out
cmpsl
lahf
bnd
sbb
xchg
add
ror
mov
dec
push
cmc
sub
int3
cmpsb
cmp
pop
sbb
out
call
loope
and
ljmp
mov
sahf
dec
cmpl
adc
arpl
mov
pop
xchg
push
addb
loop
pop
xchg
xlat
das
sub
mov
jle
jp
stos
ret
xor
xlat
push
jle
xchg
xor
dec
incb
add
sbb
jmp
mov
popf
stos
test
insb
xor
int
sub
adc
pop
sahf
mov
jae
cmp
add
xchg
icebp
notl
mov
adc
shrb
fistpl
mov
push
adc
xor
mov
in
cmc
xorb
or
and
push
mov
imul
or
push
inc
cmp
outsl
sldt
add
add
std
cmpsb
pop
or
lret
or
push
push
push
add
add
add
mul
jg,pt
in
inc
jno
and
cld
mov
test
sub
mov
add
dec
xor
or
mov
pop
repnz
call
ret
outsl
out
sub
sub
xchg
fsts
in
adc
jecxz
fucomip
hlt
sti
rcll
xlat
jns
add
fstpt
cld
or
cwtl
shrb
sub
pop
in
mulb
or
adc
dec
scas
mov
test
repnz
mov
push
mov
xchg
stc
das
jb
inc
aad
mov
movsl
jecxz
and
inc
pop
in
lret
xchg
mov
pop
loopne
jne
cs
mov
clc
fwait
mov
out
jo
scas
aam
sbb
test
fwait
lds
clc
fwait
roll
fwait
sbb
xchg
jo
popf
aaa
cmovl
pop
fwait
xor
jnp
cmp
adc
inc
push
mov
in
add
neg
std
fsubrs
adc
imul
pop
add
add
xchg
sbb
sbb
push
inc
pop
push
push
cmp
cs
xchg
test
cmp
loope
xchg
and
jno
inc
jmp
popf
mov
jns
addr16
push
inc
pop
ret
lcall
daa
jno
ret
dec
lret
inc
adc
jecxz
pop
fstps
testb
cmp
enter
push
cmpsb
jmp
mov
sub
sub
mov
xchg
adc
cmp
push
jge
inc
xchg
dec
out
push
pop
fs
dec
push
xor
mov
lock
mov
movsb
daa
outsl
lahf
push
iret
pop
pop
jmp
mov
adc
push
jp
inc
and
hlt
cmp
test
scas
outsb
dec
inc
push
and
xor
adc
nopl
roll
das
push
mov
je
into
jmp
inc
mov
out
mov
fnsave
jecxz
out
inc
lods
or
xor
loope
test
add
cs
adc
les
pop
add
add
jno
mov
cs
jp
out
cld
es
mov
lods
cli
xchg
xlat
xchg
in
mov
sarl
pop
bound
sbb
dec
inc
clc
out
pop
inc
dec
sub
xorb
stos
loope
lock
push
clc
inc
ret
hlt
push
shll
ret
mov
es
adc
adc
ror
push
pusha
xchg
add
pop
mov
daa
and
jb
mov
lea
fstpt
mov
insl
dec
sahf
inc
jmp
sbb
mov
push
mov
fs
push
inc
jp
fbstp
frstpm(287
sub
jmp
pop
test
pop
daa
sahf
pop
and
pusha
pop
mov
xchg
push
fists
dec
pusha
inc
push
push
cmpsb
push
xor
adc
sub
xchg
scas
iret
cltd
mov
lods
lods
inc
mov
push
movsb
aaa
mov
outsl
std
inc
sbbl
jl
aas
je
inc
cltd
call
add
lcall
out
and
outsl
fdivrs
shlb
add
pop
add
add
fdivrl
xchg
sub
or
cmp
jp
xor
out
adc
mov
arpl
sub
gs
adc
jg
xor
mov
lret
or
lcall
cmp
imul
lods
loope
dec
mov
mov
out
xchg
cmp
stos
nop
js
adc
mov
imul
inc
dec
xchg
sbbb
or
mov
cltd
test
sbb
sub
mov
add
mov
arpl
mov
mov
inc
sbb
cld
fmuls
insl
inc
clc
push
jae
mov
inc
repz
pop
jg
shrb
and
jbe
inc
out
js
repnz
jmp
dec
pop
pop
sub
insl
adc
mov
adc
lods
ret
xor
gs
inc
ss
mov
out
dec
mov
add
sub
ja
aad
add
inc
cmp
add
add
add
bound
sub
sahf
cmp
aad
or
mov
ret
inc
cmp
mov
hlt
aam
stos
imul
out
inc
mov
mov
pop
push
movsb
add
addr16
xor
or
dec
push
aad
jp
or
xlat
inc
repz
dec
xor
in
mov
icebp
add
sub
jl
jecxz
jbe
leave
pop
fadd
das
inc
std
cmp
push
dec
arpl
pop
inc
scas
sbb
std
aas
mov
sub
ficoml
dec
dec
je
insl
or
xchg
sbb
push
ljmp
xchg
mov
push
rcrb
stos
cltd
dec
sbb
pushf
fdivrl
adc
add
lods
nop
inc
fcomps
push
icebp
or
jnp
xchg
push
sbb
xchg
shrl
in
or
mov
rorl
div
cmp
mov
int
repz
addr16
call
add
add
cmp
jnp
inc
cmp
cltd
mov
add
add
add
sub
adc
mov
jecxz
imul
sub
adc
aam
adc
mov
frstor
push
xchg
popf
add
add
sahf
jbe
xchg
push
xchg
addr16
adc
cwtl
mov
lcall
push
ret
xlat
inc
std
push
push
xchg
loope
scas
ja
inc
aad
loope
xor
test
sub
jp
xchg
mov
enter
movsb
xchg
or
movsl
mov
inc
insl
xchg
movsb
insl
and
enter
std
mov
lret
xchg
jmp
flds
sarl
xchg
in
roll
aaa
cmp
xchg
lcall
imul
out
je
out
jl
xor
mov
jl
push
pop
arpl
repz
pushf
test
mov
jne
addl
data16
push
dec
push
mov
enter
iret
mov
xchg
push
mov
cli
xchg
jle
rol
call
cmp
add
add
add
rorl
push
mov
scas
out
xchg
cs
leave
xorb
pop
cld
mov
nop
jno
fsubs
inc
sbb
shl
sub
aad
mov
repnz
fisttpll
sbb
jo
loop
sahf
aad
mov
popf
and
mov
subb
nop
mov
jno
inc
xchg
add
mov
gs
mov
dec
fisttps
xor
inc
mov
aad
inc
inc
addr16
js
sahf
inc
and
push
pusha
mov
clc
cmc
sahf
movsl
jbe
addr16
lods
xor
and
subb
jecxz
loopne
das
test
mov
cld
jno
push
stc
fsubrs
sub
fs
xchg
add
jge
adc
or
sub
mov
mov
fsts
test
mov
jg
sbb
cmp
adc
adc
jmp
mov
adc
sahf
fdivr
cld
cli
mov
les
inc
aaa
dec
fwait
jnp
aad
push
adc
out
aas
jno
add
add
add
test
push
push
or
xchg
cmp
mov
movsl
into
pop
mov
sub
jne
adc
mov
mov
stc
hlt
mov
sub
icebp
mov
mov
mov
cmpsl
aad
hlt
mov
rcrb
cs
push
push
cmp
pop
adc
mov
xchg
ret
cli
rol
clc
mov
mov
mov
sub
cwtl
ds
pop
and
lcall
or
sbb
mov
mov
loopne
repnz
scas
das
mov
sub
enter
ret
mov
sub
fs
adc
pop
shl
adc
popf
rcl
pop
xchg
aad
repz
mov
sbb
cmpsl
enter
pop
stc
lahf
cmp
push
rolb
dec
mov
inc
mov
outsl
mov
sub
xor
add
std
mov
filds
call
add
pop
add
add
mov
pop
push
in
adcl
jle
add
mov
out
test
push
js
call
mov
cmp
test
push
popa
xchg
mov
sub
call
mov
mov
fidivl
ljmp
negb
mov
mov
addr16
rcr
mov
in
shll
push
out
adc
pop
outsl
jl
jns
or
dec
fnstenv
ret
inc
pop
inc
in
dec
stos
sbb
mov
test
rorb
pop
mov
jmp
xchg
jne
adcl
repz
insl
sub
icebp
sub
and
cmpsb
adc
bnd
push
sbb
jne
out
pop
or
or
mov
or
push
cmpsl
lock
out
xchg
xchg
or
pop
sub
sbb
rcrb
push
xor
call
add
fstl
mov
dec
jae
add
add
add
ret
outsb
jmp
pop
cwtl
cmp
out
inc
jbe
xor
mov
xor
les
add
int
int
push
daa
lds
pop
mov
mov
addr16
sub
mov
cmc
cltd
mov
mov
add
fsub
loopne
xchg
mov
sub
pop
dec
adc
adc
leave
inc
cmpsl
data16
sahf
mov
xor
xor
daa
sub
jge
sub
fwait
pop
mull
jle
cmpsl
roll
mov
int3
jl
sti
jle,pt
cmp
mov
aad
lcall
mov
adc
jbe
out
int3
in
mov
jge
aad
sub
subb
push
and
mov
addr16
jne
call
dec
ljmp
pop
xor
pop
neg
mov
cmp
mov
std
mov
mov
dec
mov
mov
in
repnz
add
in
stos
dec
dec
ljmp
add
add
bound
lahf
aaa
inc
or
cs
push
je
add
add
add
daa
pop
rclb
xchg
and
repz
fsts
push
rolb
fs
pop
hlt
mov
mov
fdivrs
pop
testl
pop
leave
jne
jb
call
andl
jge
mov
xchg
pop
cmp
pop
jg
sbb
xor
mov
cvtdq2ps
cmp
jae
pop
lds
loope
dec
jge
movsb
inc
inc
adc
inc
stos
xor
fstpl
cs
sti
enter
addl
inc
mov
mov
jmp
test
dec
cmp
and
inc
jb
mov
std
stc
push
xchg
xchg
pushf
mov
dec
or
xor
test
stos
add
ficoms
push
and
adc
pop
movsl
out
mov
mov
test
sub
pop
out
stos
fnclex
stos
xor
in
lea
dec
sub
in
insl
repz
movd
lds
mov
adcb
stos
ret
add
add
divl
dec
jno
subb
pop
jne
add
add
add
push
das
loope
and
push
mov
cli
pop
jp
mov
sahf
mov
call
pextrw
and
and
push
faddl
jo
jp
inc
je
jge
sbb
adc
push
loopne
lds
adc
test
or
std
inc
sarb
int3
cmp
or
mov
scas
movsl
sti
dec
jo
lds
shl
loop
shrl
cld
adc
movsl
sub
pop
aaa
shll
jbe
pop
and
mov
int3
mov
cmc
mov
jb
fistps
push
popa
add
and
ds
lcall
adc
pop
add
cmp
lret
xor
js
jmp
cmpl
dec
scas
inc
icebp
insl
dec
dec
scas
fldenv
jge
inc
xorb
xchg
sub
int
mov
add
add
fisubs
mov
xchg
inc
lock
xor
mov
bound
add
add
add
pusha
stos
push
lret
jg
cmp
or
lods
pop
scas
insb
shrl
fcoms
add
dec
shlb
rcrl
jmp
xchg
push
pop
cli
das
push
test
adcb
iret
leave
mov
lahf
fistl
lds
and
ret
pushf
sahf
call
mov
test
jmp
push
dec
test
decl
leave
loopne
mov
fs
and
out
sbbb
int
rcll
pop
mov
idivb
leave
xchg
int
dec
gs
fisttpl
cmp
jns
pop
test
cmp
cmp
inc
pop
out
pop
mov
shll
mov
push
movl
lods
fpatan
and
cld
cmp
jnp
lcall
cwtl
xchg
loop
or
arpl
pusha
lock
push
lcall
ror
js
sub
sub
shlb
mov
inc
and
imul
add
stos
popa
fcoml
xor
mov
push
sarb
xor
pop
adcl
add
adc
movsl
jmp
addr16
loop
cli
repz
daa
popa
inc
in
pop
or
outsb
test
and
or
dec
sbb
std
std
inc
jmp
imul
in
mov
les
mov
imulb
sarb
test
lahf
das
sahf
fimull
sbb
and
rcll
int3
nop
inc
sub
mulb
mov
mov
imul
imul
loop
sahf
push
sub
aam
out
push
xchg
iret
sub
js
fidivrl
or
mul
rcr
loopne
in
inc
pop
jg
jmp
jno
push
negb
js
std
pop
jae
inc
dec
pop
sub
xchg
xor
shlb
mov
add
add
testl
inc
jo
add
pop
add
add
stc
jo
push
out
addr16
into
rcll
notl
js
jno
cld
mov
xchg
ljmp
pop
push
fmull
fwait
arpl
data16
add
push
jmp
pop
aaa
push
and
mov
cmp
cmpsl
scas
push
rcrl
adc
cltd
jmp
outsl
std
gs
lcall
push
stc
dec
stos
jns
stos
loope
mov
stc
or
or
sub
jecxz
rcrb
vmovapd
lds
rcll
icebp
xor
xchg
mov
sarb
mov
inc
jo
mov
dec
jle
stos
cmc
in
pop
dec
mov
mov
shr
xchg
inc
das
inc
data16
sub
xchg
adc
mov
idivl
shl
push
push
xchg
int
ret
mov
scas
jl
or
cmp
fadds
adc
xor
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
rcr
adc
xchg
imul
jl
xor
outsb
jne
jnp
into
call
jae
sub
bound
sbb
mov
cmc
mov
xor
mov
mov
push
sahf
pop
cmpsb
mov
push
fldenv
lods
jmp
cmp
sub
adc
cmc
inc
sbb
int
add
iret
xor
pop
popa
inc
pop
push
data16
rcrl
push
cmp
lock
mull
lods
push
lret
inc
repnz
cld
leave
pusha
pop
push
xchg
xor
out
pop
and
inc
xchg
dec
in
and
push
mov
in
jp
xorl
cmp
into
pop
jno
xchg
pop
xchg
xor
push
xor
mov
clc
popa
and
lea
fldl
jecxz
inc
xor
sub
xlat
addr16
arpl
in
or
xorl
inc
push
aas
inc
test
mov
cmpsb
lods
rcrb
cmp
dec
sbbl
pop
add
add
cwtl
and
add
pop
test
sbb
insl
stc
hlt
imul
xor
popa
scas
sbb
bnd
mov
call
hlt
ret
cltd
lea
adc
imul
popf
lock
iret
fdivs
pop
jg
inc
out
inc
mov
sbb
adc
jecxz
les
cmp
push
add
push
daa
xor
jge
inc
shll
mov
lods
stos
xchg
sub
inc
inc
in
fstp
sbb
mov
mov
in
ror
icebp
push
push
aaa
popf
lahf
jl,pt
js
mov
shlb
std
mov
pop
sahf
dec
xchg
ss
ja
cmp
cmp
arpl
orl
es
or
jge
cmpb
fwait
cmpsl
adc
pusha
push
stos
in
xlat
out
mov
sub
ss
add
cmp
cli
mov
push
in
flds
add
add
sbb
and
jmp
dec
insl
outsl
sbb
jmp
inc
cld
test
lea
mov
fisubrs
mov
push
inc
or
test
and
xchg
sub
jae
sbb
inc
jbe
or
xor
push
mov
lahf
adcl
stc
aam
imul
cs
test
cld
cltd
inc
and
ds
outsb
xchg
dec
es
inc
jle
popa
and
inc
pop
add
js
pop
mov
jmp
addr16
mov
xchg
push
dec
mov
in
mov
mov
addr16
mov
out
jge
rorl
add
in
scas
scas
insl
jle
pop
pop
jb
arpl
jb
popa
add
mov
fisttpl
jns
and
cmp
push
pop
das
mov
lcall
hlt
or
dec
lret
or
popa
mov
aas
add
test
inc
jbe
stc
cli
mov
add
pop
add
add
jp
lods
cmpl
out
js
xchg
mov
jle
pop
cmp
mov
xchg
jle
gs
dec
mov
repz
pop
pusha
scas
fcmovne
neg
rorl
xchg
add
lods
mov
faddl
movsb
cmc
das
jb
lods
cltd
fisubrl
in
mov
push
lret
bound
mov
mov
adc
testb
mov
cld
mov
add
ret
dec
aaa
test
and
mov
mov
mov
mov
cmpsb
subl
adc
xor
les
ljmp
out
cmp
jle
lock
add
shll
adc
aaa
mov
imul
movsl
ret
in
dec
jle
clc
push
add
mov
notb
outsl
inc
cmp
test
jmp
add
jns
sti
ss
lret
loop
xor
pop
loope
addr16
loop
sti
das
fidivl
inc
test
push
xchg
dec
pop
add
xchg
xchg
jns
dec
out
movsb
into
and
add
pop
add
add
or
enter
pop
jp
stos
and
jnp
mov
add
pop
add
lds
iret
test
daa
and
or
aaa
mov
gs
cltd
addb
incb
mov
xchg
aaa
fcmove
xor
int
jge
inc
sub
je
inc
or
and
mov
fstps
add
cmp
mov
and
adc
int
imul
int
cltd
das
cmp
cmp
pop
mov
inc
mov
rcrb
or
lret
loop
outsb
mov
mov
dec
sti
and
in
test
cmpb
add
call
pop
mov
jbe
sbb
mov
xlat
scas
inc
and
xchg
fidivs
out
sub
adc
je
adc
ret
sti
cmc
out
nop
sti
lods
out
push
xor
mov
dec
pushf
mov
lahf
aam
xlat
push
and
cld
mov
add
lcall
jle
mov
lcall
add
fs
mov
adc
lods
dec
rcrb
in
fists
add
subl
lret
and
xchg
into
leave
lds
mov
xchg
nop
inc
mov
xor
xchg
in
mov
ret
sti
sbb
cmc
and
icebp
push
lods
mov
xchg
xchg
shll
ret
stc
sub
dec
inc
ficoms
and
mov
xchg
xchg
or
mov
sub
xchg
in
rorl
adc
xchg
rclb
add
sub
lret
call
adcl
fdivrl
imul
in
push
jge
sbb
mov
adc
arpl
mov
ljmp
int
sbb
cmp
pop
jnp
pop
and
xor
and
pop
ret
pop
xor
and
into
faddl
mov
decl
add
mov
idiv
fnsave
mov
add
pop
add
add
xlat
fidivrl
jp
int3
xor
int3
dec
cmpsb
in
es
xchg
add
andb
cmp
stos
gs
jge
cmpsb
arpl
out
cmp
shrl
jge
sti
mov
pop
addr16
mov
mov
sub
andb
push
mov
mov
cmp
loope
push
jecxz
rcll
data16
or
and
popa
push
mov
dec
stos
mov
xlat
sub
cli
decb
test
mov
adc
push
fwait
cmp
sahf
fnstcw
aad
cli
in
xchg
mov
repz
xchg
adc
xchg
sbbb
std
pop
sbb
fistps
fs
andl
mov
xor
lcall
cld
test
sarl
push
and
or
sub
pop
lds
jg
mov
add
call
gs
xor
pop
add
add
shr
and
out
mov
and
cmpsb
fdivrl
inc
lcall
lahf
fdivl
adc
out
shrl
xchg
notb
jp
push
dec
sbb
out
dec
inc
cmpsl
jnp
sahf
sub
aaa
out
mov
push
std
mov
cmpsl
inc
loop
call
jno
jecxz
mov
mov
inc
inc
in
mov
pop
jp
add
inc
pop
or
xchg
mov
jle
int
jge
dec
mov
enter
mov
dec
adc
sub
dec
popf
pop
pop
xlat
lods
mov
ret
mov
mov
push
jb
or
incl
push
or
dec
add
scas
sub
and
mov
cs
in
push
into
out
fldt
jge
xor
xchg
aas
ret
mov
mov
xchg
adc
adc
pop
test
cwtl
mov
add
sti
iret
test
sub
out
jnp
scas
addl
add
mov
mov
ss
inc
push
ret
test
add
cmpsl
sbb
stos
negb
push
lds
jl
in
sub
cli
mov
or
pop
jb
sub
mov
sub
and
dec
fdivl
inc
add
xor
mov
add
xchg
lds
inc
insl
pop
inc
push
xchg
jns
out
imul
call
outsb
stc
xchg
add
xor
xchg
xor
push
dec
jno
pop
mov
in
addr16
adc
cmp
jmp
dec
sarl
and
push
insb
pop
ljmp
xchg
cmp
xchg
xor
inc
sbb
popa
test
sbb
mov
xor
xor
cltd
ds
pop
xchg
dec
loop
xchg
cmpl
cwtl
decl
dec
cltd
icebp
in
push
jl
xchg
inc
adc
ja
and
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
or
xorb
add
inc
dec
or
ret
ss
mov
add
mov
insl
dec
popa
xchg
cmp
jecxz
xchg
jno
nop
or
pop
cmpsb
leave
and
pop
pop
cltd
mov
mov
cmp
mov
movsl
in
xchg
shrb
scas
push
scas
xchg
dec
mov
mov
rcll
xlat
pop
sub
cmp
xor
aas
in
push
mov
mov
loope
push
mov
repz
aad
addr16
subb
std
sti
add
jl
xorl
mov
lret
inc
enter
call
xlat
xlat
mov
sbb
pop
fildll
mov
cmp
cmc
test
jmp
or
fwait
mov
or
and
mov
in
imul
int3
cmp
mov
leave
sbb
imul
pop
mov
push
shlb
negl
addl
mov
mov
cmp
adc
pop
add
add
push
lods
rcrb
nop
push
cld
cmp
cli
mov
lret
xrelease
pusha
mov
mov
sub
mov
dec
sahf
pop
mov
jno
shlb
xchg
push
xor
movsl
call
in
inc
push
jecxz
mov
imul
mov
adc
mov
xor
adcl
or
popa
or
cmp
pop
int
xor
sub
test
shlb
jecxz
cmp
dec
jmp
inc
jbe
mov
mov
sarb
add
push
fwait
mov
outsl
mov
push
adc
cmp
lds
frstor
jge
cmpsb
loop
adc
and
leave
mov
jae
js
ret
adc
add
push
push
jne
shll
fidivs
mov
xorb
and
out
ljmp
roll
popf
les
add
push
dec
rorb
inc
fists
out
dec
fwait
xchg
xor
mov
test
scas
test
fistpl
inc
mov
mov
or
mov
mov
xchg
push
xchg
addb
repz
xor
inc
hlt
js
xor
aas
sahf
dec
call
xchg
mov
add
sti
jmp
push
jl
mov
ret
pop
clc
je
mov
xchg
test
pop
or
push
fwait
xchg
subb
adc
mov
addr16
jl
addb
jne
jns
push
inc
scas
cmc
push
enter
xchg
dec
jb
lret
jge
sub
subl
dec
xchg
mov
xor
sbb
adc
arpl
mov
fstpt
mov
mov
outsl
xchg
mov
xchg
sub
imul
push
jnp
sbb
adc
insb
xor
test
add
add
add
popf
mov
fbstp
fcoms
push
cmp
and
mov
dec
mov
lock
popf
push
movsb
dec
pop
jge
imul
ja
push
pop
xchg
mov
add
into
xor
jae
mov
fwait
subb
popa
jns
insl
je
xorb
push
loope
bound
xchg
or
mov
fistpl
mov
sahf
arpl
inc
jo
inc
pop
hlt
pop
aad
cmc
fwait
in
in
mov
sub
and
inc
xor
aad
pop
in
sub
adc
jne
popa
mov
mov
mov
popf
in
imul
cmp
adc
xchg
cmp
in
cltd
xchg
scas
stos
or
and
push
and
mov
pop
cmp
sbb
dec
fwait
pop
das
test
loope
push
mov
mov
mov
xor
sbb
sbb
out
mov
cmc
cld
cld
add
aas
or
mov
rorb
rolb
add
sbb
cs
dec
cmp
mov
rcll
xor
lea
ljmp
mov
icebp
sar
cmp
popf
push
adc
sbb
fiadds
cmp
movnti
pop
or
cmp
dec
sub
adc
cwtl
inc
push
mov
ja
enter
push
out
cltd
jne
jae
cmpsb
imul
push
cwtl
sub
js
mov
inc
aam
addr16
scas
cmpsb
in
out
mov
sbb
mov
clc
in
lahf
jge
shrl
sbbb
push
fstpt
pushf
loopne
inc
pushf
test
mov
mov
mov
out
mov
cmpsl
and
mov
daa
sub
cmp
sbb
cmp
xor
pushf
pushf
mov
dec
and
insb
xor
mov
mov
jg
fdivs
inc
ja
dec
and
add
insb
fidivl
sub
je
insl
flds
add
push
push
xchg
inc
pusha
aaa
les
outsb
cmp
movsb
mov
lods
cs
pop
test
fidivl
add
jno
data16
xchg
loopne
add
sbb
lea
and
and
push
cli
aaa
pop
push
mov
pusha
adc
daa
mov
inc
inc
ds
aaa
or
sahf
cmp
sbb
aam
xor
xlat
mov
scas
sub
sti
sahf
shrl
aad
jnp
stc
mov
ljmp
rorl
pop
ljmp
je
xchg
dec
ret
inc
fisttpll
scas
push
or
aaa
cld
pushf
push
mov
jns
sbb
mov
loopne
popf
xor
and
movsl
fsubrl
push
clc
xor
xchg
or
dec
movsl
in
pop
jmp
lods
mov
mov
mov
sub
lret
add
sbbb
cmp
mov
xchg
in
mov
loopne
add
pop
add
add
test
pop
mov
mov
aad
loope
out
es
cwtl
jl
adc
shlb
mov
pushf
pop
cmpsl
mov
fsubrp
lret
sarb
fs
push
test
dec
ds
mov
fimuls
ret
test
out
cmp
dec
aaa
mov
test
gs
outsl
adc
mov
stc
mov
xchg
cltd
sti
loopne
add
addb
xor
hlt
pop
push
sbb
dec
sub
imul
jo
test
add
push
push
lods
in
dec
pop
sbb
sub
out
std
dec
imul
cmp
or
xor
fwait
shll
mov
jmp
mov
sti
add
mov
xchg
addl
js
in
mov
fst
popf
call
push
lahf
fwait
aas
fdiv
jo
and
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
mov
lea
incb
sahf
push
lock
daa
aad
fisubrl
mov
lahf
fnstenv
ret
mull
movl
jne
xor
pop
mov
adc
out
repnz
sbb
push
jle
test
mov
and
dec
lds
leave
mov
fwait
movsb
push
imul
pusha
dec
cmp
push
imul
lock
loop
adc
xor
add
add
pop
fmuls
sbbl
dec
cmp
dec
add
andl
dec
add
xor
mov
aam
gs
inc
mov
adc
enter
div
inc
jbe
cltd
sub
roll
movsl
roll
int
add
fildl
test
and
inc
dec
insb
cmpsl
stos
inc
fldt
das
sarb
clc
jge
pop
add
in
lret
xchg
jge
insl
lock
les
add
adc
std
and
xchg
rclb
mov
add
add
add
roll
loopne
mov
jmp
cmp
xchg
loopne
pushf
or
xor
xorb
add
std
insb
push
cmp
out
js
jns
fiadds
es
idivl
inc
jbe
add
ljmp
mov
movsb
mov
scas
das
mov
rcrb
cmp
jb
in
fimuls
sbb
and
cmp
ljmp
int
mov
es
inc
adc
inc
out
imul
inc
cltd
lods
mov
xchg
lcall
mull
mov
mov
dec
out
in
xchg
sub
orl
push
negl
mov
mov
in
in
jb
insb
pop
jo
fdivs
sub
outsb
faddl
in
stos
cmp
adc
push
sub
xchg
lods
mov
lea
in
inc
mov
fisubrl
add
add
mov
add
cmc
mov
add
add
add
das
mov
cmp
pop
mov
in
sahf
jp
pop
aam
ds
xor
pop
notb
pushf
icebp
shl
jbe
jmp
pushf
mov
jns
mov
outsb
ret
or
mov
adc
mov
lds
out
pop
bound
ret
jmp
ljmp
push
lcall
or
mov
pop
inc
arpl
loopne
jmp
int3
push
pusha
std
xorb
mov
data16
rcr
cmc
or
fucomip
sub
enter
movsb
in
pop
push
in
mov
xchg
aad
mov
xor
lret
ds
pop
rcl
js
adc
das
or
sub
fnstsw
xor
bound
xor
repz
nop
inc
dec
mov
mov
cmp
lods
in
cmp
mov
pop
xchg
dec
xchg
int3
iret
shrb
cmp
aaa
or
add
add
les
out
xchg
xchg
mov
add
add
add
stos
sub
rcrl
pop
inc
lcall
xchg
nop
es
lea
je
sbb
xor
xor
test
xchg
jno
pop
cmc
pop
cmp
pop
test
addr16
cmp
push
sub
enter
xchg
mov
sbb
rorl
rcl
mov
fistpl
js
mov
cmp
inc
xchg
in
rolb
shlb
loope
mov
mov
mov
out
cmp
fildll
xor
stos
int
je
sti
or
movsb
jle
xchg
sar
mov
imul
push
cmp
jg
sub
rcrb
aas
jb
cmpsb
in
dec
adc
icebp
and
cld
push
jne
adc
in
mov
adc
sahf
outsl
lods
fs
popf
test
jno
dec
aad
inc
lret
int3
imul
push
xor
cli
sahf
jne
roll
add
ljmp
dec
push
ret
mov
push
add
add
inc
enter
aaa
popw
fstl
std
cli
push
mov
push
xlat
or
shll
std
cmpsb
adc
jb
sahf
adc
stos
dec
repnz
test
pop
inc
pop
cli
mov
mov
cmp
fcomps
fcmovnbe
out
pop
inc
addb
imul
and
dec
loopne
sub
jge
int3
ds
ja
sub
adc
sbb
mov
lahf
cmp
push
jle
loop
mov
cmp
adc
les
out
xchg
adc
gs
lods
leave
movups
icebp
lock
xor
mov
sbb
iret
les
jbe
out
in
je
push
mov
sub
test
jge
adc
mov
fsubp
mov
jg
ljmpw
int
pop
ret
andl
and
insl
in
aad
test
in
dec
push
lret
lods
leave
push
gs
xlat
jb
or
notb
pop
cmp
aaa
shlb
cmc
div
mov
shrl
or
add
loope
nop
lods
sbb
in
incb
pop
push
mov
pop
inc
sbb
mov
inc
add
lods
inc
imul
push
int3
lahf
mov
mov
int
sti
in
dec
fbstp
movsl
cli
test
jnp
aas
sbb
cltd
sub
push
roll
inc
pushf
cmp
aaa
repnz
test
sub
push
cmpsb
sub
lret
lods
std
imul
xchg
pushf
in
mov
shrl
repnz
fimuls
mov
cmpsb
dec
fistpl
out
mov
lock
insb
mov
orl
roll
xor
sbb
aas
sub
js
decb
int
in
mov
in
dec
out
stos
ficoms
les
sbb
not
cmp
mov
stos
rorl
inc
loopne
sahf
push
adcl
and
ficoms
dec
fisubrs
xor
je
sbb
shl
fs
push
lods
leave
ret
or
xchg
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
ds
pusha
into
cmc
aam
add
je
mov
dec
shll
mov
punpcklwd
xchg
cmp
mov
add
repnz
jmp
push
dec
nop
xor
pop
mov
das
pop
subb
jle
push
int
mov
xchg
lcall
jg
int
or
mov
loope
subl
xchg
or
and
mov
repz
xchg
jp
fstl
shll
add
xchg
mov
xorl
xchg
cli
or
lods
sub
cmpsb
sbb
loope
loop
xor
jns
jnp
dec
test
shlb
fwait
cmp
inc
into
loopne
fistpll
repz
ja
adc
mov
les
and
dec
call
inc
xor
pop
pop
clc
push
mov
sub
or
xchg
sub
das
inc
insl
testl
add
add
arpl
cmpsb
jcxz
mov
shrl
xchg
add
pop
add
add
dec
xor
xchg
into
into
push
arpl
out
pop
fldl
rorl
shlb
xchg
cs
gs
pop
push
mov
push
sahf
mov
and
fdivrs
dec
inc
fisttpl
sub
clc
mov
or
scas
dec
adc
stos
add
fcoml
pop
vmwrite
cmp
frstor
pop
xlat
out
stos
mov
in
int
adc
xor
aas
push
loopne
ret
jp
adc
cs
fwait
cmpsb
or
test
aaa
xor
jnp
adc
xchg
scas
shlb
jp
sbb
fnstsw
lds
shrb
pop
mov
imul
sti
xchg
aad
sbbl
rcll
ficoml
xchg
inc
inc
xchg
cmp
arpl
dec
pushf
lea
outsl
mov
add
mov
jl
enter
add
clc
jnp
jg
in
cli
push
scas
sarb
pop
add
add
xor
lds
inc
pop
lret
lcall
pushf
lahf
clc
fwait
dec
sbb
addr16
xchg
sahf
jo
mov
jne
icebp
jne
mov
call
dec
sbb
out
cmp
or
pop
imul
mov
mov
mov
sbb
dec
inc
add
inc
enter
pop
ficoms
lahf
sbb
in
add
pushf
aad
inc
adc
mov
mov
cmp
mov
cmp
data16
stc
mov
leave
lahf
pop
jg
jns
cli
or
sbb
out
fiadds
sarb
push
cmpl
and
jmp
adc
mov
cmp
enter
cmp
sub
cmpsl
jg
pop
std
mov
mov
pop
inc
lahf
out
aas
jecxz
lret
imul
loope
mov
movsl
cmp
adc
repnz
dec
test
orl
nop
add
lods
faddl
fbstp
cld
fidivl
in
pop
xchg
es
add
pop
add
add
add
cwtl
jge
xchg
jmp
imul
mov
stc
pop
or
xor
jp
mov
mov
pop
sub
sbb
sub
ret
xor
leave
sbb
push
add
pop
sbb
insl
lods
movb
xchg
mov
aas
loop
jg
imul
inc
stos
loope
insl
das
xchg
out
mov
inc
ss
js
adc
aaa
push
xchg
or
cmc
mov
adc
adc
adc
je
pop
adc
cmpsl
pusha
mov
testb
inc
les
xchg
mov
cmp
mov
mov
leave
jg
jne
xchg
inc
loopne
push
aaa
lods
pop
mov
mov
pop
stos
lcall
fidivrs
jmp
sbb
push
cmp
cwtl
shl
xchg
movsb
outsl
push
out
mov
jmp
mov
adc
mov
scas
jecxz
rcrb
add
add
jl
sar
std
jle
testb
out
push
lcall
add
lea
pop
sbb
ds
bndldx
pop
mov
shlb
sbb
mov
std
add
stos
dec
mov
arpl
sar
pop
mov
gs
add
sbb
test
fiaddl
js
rcr
inc
mov
or
imul
cwtl
mov
out
pop
cmp
mov
iret
or
fiaddl
stos
jno
frndint
stos
insl
xor
pop
dec
in
in
lret
mov
insl
or
lcall
cmc
dec
mov
xor
insl
sbb
dec
push
movsl
push
icebp
leave
movsb
push
pusha
mov
mov
test
lret
cmp
mov
dec
les
and
pusha
lods
loop
ja
jg
repz
sub
mov
xchg
add
or
stc
pop
push
btc
sbb
sub
pushf
fisubs
pop
psrad
movsb
dec
popf
mov
add
cmp
cmp
mov
xor
add
pop
add
add
sub
das
dec
ret
or
xor
push
jb
repz
frstor
pop
or
xor
inc
jbe
adc
inc
pushf
sbb
stc
jb
gs
adc
add
mov
xchg
int3
rorb
lret
add
sub
xchg
sbb
lret
repnz
out
in
out
inc
xor
inc
jl
fdivl
jno
js,pn
pop
movsb
out
mov
aas
fbstp
push
inc
shll
imul
in
cmp
mov
mov
jne
fstpt
xchg
ret
movsb
outsl
xchg
push
je
mov
icebp
lahf
jbe
xchg
or
sbb
cmpl
test
push
shlb
add
decl
xchg
or
daa
lahf
and
loop
jns
data16
movsb
or
sub
sbb
push
test
incl
add
pop
add
outsl
sti
outsl
sub
pop
cmp
add
js
daa
decb
dec
dec
sub
xchg
mov
cmpsb
ret
repz
out
sub
jp
sbb
pop
test
bnd
add
aas
fnstenv
mov
mov
fbstp
imul
push
ret
mov
xchg
pop
and
pmaddwd
mov
or
je
int3
push
sbb
cmc
ljmp
loopne
idiv
adc
std
and
pop
xor
jae
sub
inc
sahf
and
outsl
fwait
xchg
push
mov
or
ret
mov
mov
push
fbld
sti
sbb
lahf
or
enter
xchg
jno
jo
adc
dec
jno
xor
sbb
xlat
xchg
lods
jmp
fildl
cmpl
in
xchg
mov
push
mov
cli
sub
mov
jo
ss
xchg
push
lret
add
sub
xor
test
testb
add
add
dec
std
out
xlat
aas
insb
lods
ret
xchg
or
inc
xchg
add
pop
add
add
push
leave
hlt
or
rcll
pop
loop
sbb
adc
push
mov
push
icebp
mov
xchg
mov
shll
stc
cmp
and
pop
ljmp
and
iret
jg
inc
push
adc
sarl
rcrb
pop
fildll
sbb
loop
or
cmp
sub
imul
int3
dec
gs
add
stos
cmp
decl
or
je
xchg
jecxz
and
and
scas
lods
repz
int
aaa
and
cmp
cmp
in
or
jg
or
leave
repz
sbb
adc
dec
mov
sub
shrb
and
mov
out
dec
pop
pop
in
cmp
iret
js
xchg
and
push
jp
adc
int
fnstenv
adc
frstor
jnp
scas
mov
es
lds
push
aas
add
mov
cmpsl
rol
fwait
dec
je
sbb
add
mov
mov
jmp
dec
mov
cwtl
add
pop
add
add
js
cmp
xor
hlt
sub
int3
and
dec
fmuls
sub
inc
jp
adc
pushf
out
inc
hlt
push
imul
jmp
pusha
fs
insl
pusha
mov
popw
std
fimuls
std
dec
mov
xor
sub
mov
push
lahf
cmpsl
sub
in
add
lret
stos
shll
movsl
pop
in
stos
out
sbb
adc
push
out
jbe
fnsave
ret
nop
lods
shr
fistpll
cmp
dec
lret
jge
mov
dec
adc
cmpsb
mov
push
idiv
and
outsl
sub
pop
mov
movsl
pop
in
jmp
lahf
jmp
rorl
andl
add
inc
outsl
jo
pop
cmp
push
push
xchg
aad
mov
rol
xlat
out
sbb
gs
ret
ja
lock
ja
jbe
xchg
jp
adc
sbbl
xorl
out
push
mov
pop
add
add
mov
cltd
sub
lahf
cli
xchg
or
sahf
jmp
xor
push
adc
in
loop
or
out
mov
push
das
adc
lods
cli
mov
gs
int3
adc
sub
jns
fldl
cmp
pop
sub
add
push
pop
sbb
loop
mov
je
sbbb
nop
stos
cmp
pop
push
sub
addl
mov
and
shl
sbb
notl
adc
inc
addb
mov
cwtl
clc
pop
scas
pop
lods
pop
stos
push
andl
ror
xchg
lods
inc
push
mov
in
pusha
add
shlb
mov
adc
push
mov
rcrl
xor
add
or
cmp
cmpsl
inc
jle
pop
jb
mov
mov
push
lds
test
in
test
hlt
jbe
pop
push
js
call
mov
add
imul
sbb
leave
dec
add
mov
lcall
fistps
shrb
xor
andl
rcrb
nop
aaa
dec
jg
inc
cmc
leave
push
push
xchg
addr16
loopne
sahf
and
inc
fcomps
mov
push
xchg
mov
loopne
add
movsl
cmpsb
mov
outsl
inc
add
mov
cmp
in
adc
sbb
call
scas
hlt
in
clc
push
or
lods
inc
sub
rcll
js
fs
mov
or
dec
push
loop
xor
jp
and
inc
movsb
call
sub
or
inc
jbe
and
xchg
push
scas
mov
add
mov
and
push
mov
dec
cmp
fwait
cmpsl
inc
leave
ret
fnsave
push
or
cmpsb
jnp
hlt
jns
dec
add
je
sbb
std
jle
mov
test
mov
clc
or
pop
and
insl
xor
in
sub
xchg
jl
sub
mov
jge
jg
ljmp
out
stos
arpl
add
pop
add
add
mov
xchg
mov
jae
aas
movsb
enter
mov
adc
add
addr16
sbb
add
cld
pop
enter
jno
es
cmpl
cmp
notb
lods
and
stc
mov
xchg
leave
bound
inc
sbb
insb
dec
scas
test
jns
xadd
push
mov
ss
movsb
jg
push
xchg
xchg
and
and
mov
cwtl
mov
jp
call
scas
or
jecxz
dec
fsub
hlt
in
loope
loop
cli
sti
pop
inc
into
add
lds
pop
xor
leave
push
jo
arpl
cmpsl
mov
pop
mov
paddq
stc
push
dec
add
jbe
dec
dec
sub
inc
jge
daa
and
adc
lods
imul
ds
adc
mov
cmc
cmp
xlat
adc
sub
add
ja
out
xor
cld
out
sar
gs
add
pop
add
add
sub
imulb
sbb
mov
adc
outsl
ficoms
adc
ret
mov
mov
mov
data16
subb
fistps
cltd
xor
adc
inc
out
cmp
pop
fiaddl
int
push
and
pushf
xchg
adc
jg
mov
mov
jnp
faddl
scas
mov
pop
out
fstl
frstor
jecxz
or
xchg
cmpsb
push
pop
dec
scas
mov
pushf
add
adc
xor
sbb
idiv
xchg
xor
xchg
pop
aad
fwait
push
dec
cli
push
andb
fsts
or
mulb
aaa
mov
inc
xchg
pop
shrb
jo
cmp
add
rcl
xchg
push
jbe
mov
jmp
jns
popf
pop
xlat
push
sbbb
jae
add
bound
or
in
xchg
mov
jle
dec
es
push
cmp
push
iret
xor
add
pusha
test
je
push
cltd
test
add
add
add
or
adc
cmc
aas
xchg
push
or
into
sti
push
inc
lcall
movsb
ds
flds
dec
mov
rolb
cmpsb
sub
call
push
bound
mov
outsl
jnp
mov
hlt
add
cmp
cs
pop
es
pop
dec
jnp
imulb
dec
fsub
mov
mov
stos
int3
cmp
jne
cmp
das
cwtl
pop
loop
xlat
sbb
ss
outsb
out
xchg
popa
sbb
idiv
cwtl
xor
cmp
shll
lcall
daa
and
or
xchg
incl
mov
addr16
popf
daa
cmp
and
push
fiaddl
adc
pop
and
addb
sub
sub
int3
adcb
xor
xchg
sub
and
or
inc
outsl
neg
scas
xchg
pop
add
inc
mov
push
xchg
cmc
adc
test
add
or
lcall
pop
nop
sbb
add
pop
add
add
nop
xor
push
or
in
test
mov
pop
stc
test
cmp
mov
adc
pop
push
push
xchg
xor
into
ja
xchg
and
imul
ds
fs
sarb
xchg
repnz
sbb
pop
pop
pop
repz
pop
push
sub
sub
sbb
pushf
inc
aam
shl
das
push
or
lock
or
mov
sbb
xchg
xchg
rolb
shrb
cmp
cs
or
cmc
in
or
mov
dec
dec
dec
shr
stos
leave
mov
inc
adc
test
sbb
into
jp
movsb
push
push
das
enter
mov
lret
in
xchg
fimuls
repz
and
negl
sub
inc
scas
gs
inc
push
pop
dec
aas
xchg
inc
inc
into
iret
mov
fsubrp
mov
notl
lcall
daa
add
test
add
movsb
mov
mov
pop
or
jnp
lahf
add
pop
add
add
mov
mov
stc
js
ja
mov
push
int3
js
push
ret
adc
mov
pushaw
jbe
loope
adc
pusha
in
dec
dec
sub
add
aaa
xchg
pop
shrb
shll
dec
js
mov
push
cmp
js
lods
sub
jg
mov
jno
rcll
inc
add
mov
xor
dec
lods
pop
fwait
push
inc
jecxz
xchg
in
call
adc
lcall
sbb
repz
pop
ja
jg
pop
push
in
mov
addl
scas
loopne
xchg
jg
jb
mov
push
mov
dec
push
adc
adc
xchg
mov
cs
outsb
xchg
fcompl
mov
js
test
ret
push
pop
lock
in
mov
adc
push
adc
or
repz
data16
mov
mov
inc
loopne
pop
add
std
stos
sbb
mov
pop
add
add
cmp
pop
insb
les
cwtl
fcoml
add
lret
daa
enter
out
pop
test
add
fdivrp
cwtl
sbb
push
subl
sti
jl
or
lahf
add
adc
cltd
mov
jno
dec
pop
ficompl
mov
call
call
aaa
ss
adc
test
xor
gs
mov
roll
adc
cli
cs
cltd
or
in
fidivl
ljmp
pop
cwtl
shll
jl
insl
mov
addl
dec
mov
mov
enter
cmp
lea
mov
aam
shrb
cwtl
out
fimull
rolb
or
push
and
mov
adc
scas
out
jp
pop
and
repnz
mov
inc
popf
push
push
fcomps
mov
rcr
adc
cmpsl
fwait
outsl
jb
lcall
xor
insb
adc
lcall
push
inc
fdivl
push
jb
mov
add
int3
and
fisttpl
insl
sbb
and
mov
xor
mov
jmp
andl
xchg
ror
xor
shrb
mov
fwait
adc
out
lea
push
loope
cs
xor
dec
dec
addb
and
mov
push
ret
out
pop
out
dec
sbb
push
rol
xchg
pop
jmp
jbe
into
lds
xor
dec
fistps
xor
lods
mov
sbb
xchg
lahf
sbb
ret
out
adc
push
test
xchg
call
mov
dec
jcxz
mov
jns
iret
lods
shl
xchg
lock
ss
loope
jmp
adc
jmp
push
sbb
clc
fdivl
pop
jo
pop
mov
fnstenv
shll
mov
and
repz
ficoml
sub
mov
ret
dec
lods
mov
adc
mov
push
mov
mov
add
sbb
jecxz
inc
dec
repz
loopne
mov
outsb
imul
ret
mov
mov
dec
ret
lods
sub
mov
mov
fldl
je
call
test
dec
movsl
cmpb
sbb
jge
mov
dec
add
out
aas
xor
push
dec
lea
pop
cltd
jnp
mov
sub
or
push
sub
pop
pop
mull
lods
pop
fsubl
jecxz
rcrb
loop
cmc
xchg
rclb
fstps
cli
and
push
dec
xchg
mov
xchg
adc
push
es
mov
data16
out
inc
scas
scas
mov
subb
jecxz
scas
mov
jo
daa
inc
jge
push
js
dec
incb
pop
dec
mov
aaa
out
mov
dec
stos
cs
push
gs
and
data16
ljmp
add
add
stos
hlt
jmp
jmp
xchg
adc
mov
add
mov
popf
test
cmp
in
lds
fidivrl
ljmp
pop
aas
icebp
jp
popa
inc
test
pop
jb
push
movsb
jp
jno
inc
loope
xor
push
jo
xchg
out
add
push
inc
sub
lret
and
push
ret
push
stos
scas
movsb
setg
mov
scas
inc
lcall
pop
push
test
inc
sub
jne
xor
sbb
iret
add
das
sub
jnp
cmc
xor
mov
outsb
jno
ds
in
mov
das
scas
jl
mov
push
ret
insl
das
sbb
push
push
fnstcw
jl
mov
fstl
xlat
shll
xor
hlt
mov
hlt
and
cwtl
sub
out
call
xchg
xor
sbb
shl
pusha
in
das
and
sbb
push
mov
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
imul
dec
loope
add
xor
adc
or
hlt
pusha
mov
or
mov
push
push
xor
or
mov
inc
pusha
push
ret
cmp
mov
or
sti
cld
mov
lods
push
and
cmc
out
addb
or
testl
add
lock
inc
lahf
pushf
repnz
xchg
or
gs
insb
bound
shrb
lahf
mov
or
lods
mov
pop
repnz
cmpsb
addr16
sbb
scas
xchg
lret
fisubrs
mov
xchg
mov
aad
xor
ret
mov
cmpsl
pop
and
rcrl
lods
add
in
leave
dec
popl
push
sarl
fs
enter
add
inc
pop
out
das
dec
test
inc
sbb
push
adc
rcrb
lahf
dec
mov
pop
scas
mov
xchg
addr16
inc
cmp
js
sbb
sbb
pop
fists
cmp
iret
pop
xor
movsb
movsl
add
pop
add
add
stos
xor
fnstsw
sub
xchg
mov
mov
popf
push
push
bound
push
fwait
incb
cmp
inc
test
das
scas
jnp
push
clc
dec
cmp
push
roll
sbbl
pop
pop
lock
shl
or
ret
jno
mov
or
pop
mov
lret
pop
mov
cmpsb
or
mov
and
xor
inc
fucompp
test
jne
add
adcl
inc
int3
mov
pop
sarb
iret
ret
pop
call
xor
movsl
sar
pusha
mov
cld
rorb
xchg
data16
dec
and
mov
fs
dec
lret
and
mov
filds
jle
inc
xor
add
mov
das
add
jae
inc
test
stc
xor
ja
cwtl
repz
cmc
into
jecxz
or
ljmp
xchg
cmp
je
xlat
add
mov
mov
out
stos
cmpsb
add
pop
add
add
sarb
and
cs
cmp
lods
push
insb
jo
pushf
pop
test
call
push
jb
inc
movsb
pop
mov
sub
add
fidivl
push
es
aad
lahf
xor
adc
add
jmp
sarb
cli
cld
or
xchg
sbb
arpl
sub
inc
ljmp
sbb
sbb
inc
test
in
fnclex
xor
cmpsb
cmp
imul
fsubl
or
jecxz
lcall
fucompp
jo
mov
push
mov
je
or
clc
and
add
cmp
or
push
pop
jno
popf
jge
fldl
lods
pop
in
cmp
shlb
mov
dec
imul
sti
or
jns
pusha
adc
imul
mov
idivb
arpl
dec
push
jmp
js
divb
sbb
adc
mov
add
dec
pop
add
mov
push
sti
jmp
pop
dec
pop
movsb
jnp
add
mov
add
pop
add
add
popf
cld
pop
mov
mov
adcb
fcmovnu
xchg
arpl
fs
outsl
or
ficomps
pop
out
cmp
xor
and
cltd
cs
in
sub
jp
and
xor
movsb
call
cltd
xchg
sub
jmp
repz
pop
xchg
jg
lret
jne
add
jge
or
cmpsl
loopne
mov
in
test
xchg
xor
or
pop
outsb
cmp
out
cmpsb
xchg
xchg
mov
mov
stos
xor
call
imul
ds
push
fwait
cs
push
jnp
mov
pop
xchg
ret
popa
xlat
cli
push
cmp
mov
lds
pop
imul
call
mov
fidivs
les
mov
cld
push
lahf
dec
dec
int3
mov
xchg
iret
sbbl
jne
insb
pop
xor
dec
add
push
push
in
push
add
mov
jecxz
lock
fmuls
ja
test
add
add
add
enter
jbe
in
pop
inc
or
xchg
push
call
xor
push
jmp
test
jp
aaa
out
jle
mov
push
xchg
adc
sarl
std
inc
push
pop
outsl
sub
push
imul
cltd
xchg
push
sub
call
loopne
cmp
subl
int3
cmpsb
popa
dec
and
pushf
fucomp
and
ljmp
xchg
cmpsb
in
pop
dec
shrb
jb
arpl
lock
sub
repnz
repz
leave
inc
subps
mov
jp
cmc
sbb
sti
popa
pop
cmp
mov
fstps
mov
popa
pop
push
arpl
sbb
out
mov
sbb
push
jo
mov
and
outsl
aad
cli
pop
mov
stos
or
mov
sub
jl
ss
inc
sub
mov
add
add
cld
mov
add
mov
add
add
add
xchg
push
inc
adc
inc
pop
adc
xchg
cmc
daa
jmp
add
jge
pop
jns
movsl
xor
mov
fildll
daa
scas
mov
and
push
popa
fisubrl
fs
stc
iret
fimull
or
push
lcall
js
addb
in
gs
scas
jb
mov
hlt
daa
push
clc
in
pop
pop
loop
cli
and
aam
testb
mov
daa
push
ljmp
imul
inc
test
xchg
push
xor
fdivs
inc
ret
adc
stos
arpl
mov
lea
jmp
in
outsl
in
fidivrs
mov
leave
adc
push
sub
xchg
pop
xchg
add
fsubs
mov
jbe
rorb
xor
fbld
addr16
adc
cmp
jo
test
adc
push
jge
sbb
mov
inc
mov
loopne
mov
add
mov
dec
das
pop
out
cmc
mov
push
cmp
repnz
stos
add
pop
add
add
outsl
inc
insb
cmp
jecxz
sub
hlt
scas
mov
cmpsb
push
or
sar
mov
mov
mov
pusha
shll
js
mov
es
cmpsl
push
dec
add
mov
loop
lods
sub
or
inc
or
push
inc
jle
jg
xchg
nop
into
loope
adc
aad
mov
dec
or
outsb
test
mov
je
jle
sahf
pop
mov
loope
test
js
or
mov
imul
cmp
xor
cld
iret
xlat
jb
lds
cmp
push
imul
popf
push
out
push
rcl
arpl
dec
idivb
xchg
iret
popf
xor
mov
dec
pop
sbb
ret
cmp
mov
movsb
nop
dec
xor
mov
frstor
in
add
fidivrs
add
sbb
jecxz
and
leavew
mov
and
repz
bound
cmp
dec
sub
mov
fucomip
std
dec
std
pop
cmp
cmp
push
mov
into
stos
add
pop
add
add
mov
test
addr16
xorl
shll
sarl
xor
cltd
ret
nop
lahf
aam
je
pop
outsl
lods
jns
add
dec
es
imul
scas
loope
dec
push
xchg
adc
cmpsl
fstpt
jmp
pop
sarl
xchg
mov
dec
mov
push
pop
mov
out
fxch
in
and
enter
or
inc
xor
jecxz
inc
les
outsl
shll
xchg
mov
stos
pop
sahf
or
and
mov
adc
or
sarl
test
int3
mov
add
pushf
in
fidivrl
jmp
add
xchg
call
inc
or
jns
cmp
frstor
loopne
xor
cmp
test
iret
mov
pop
jnp
sbb
mov
leave
test
xchg
push
es
mov
dec
mov
adc
fidivs
loop
ljmp
lods
daa
jne
aad
add
pop
add
add
daa
inc
mov
inc
mov
shrb
add
adc
push
scas
adc
mov
cmp
enter
lret
iret
or
popa
mov
inc
push
stc
testl
add
mov
sub
ret
shrl
int3
fs
push
cli
push
stc
pusha
pop
pop
enter
jne
mov
cmpsb
sbb
push
stos
or
cmp
jb
jle
mov
addr16
and
add
in
adcb
sub
cmpsl
cmp
movsb
mov
mov
pop
push
and
add
mov
cmp
lret
and
add
jle
xor
pop
mov
mov
adcl
daa
xor
push
pop
cmp
adc
mov
movsl
imull
jne
and
and
mov
push
sti
mov
xorb
fisttpll
cmpsb
out
or
ds
add
xchg
jg
jmp
std
push
int
decb
lods
add
pop
add
add
outsl
jo
mov
repz
movsl
mov
div
mov
xor
push
mov
pop
cmp
adc
inc
sbb
fcmovne
jecxz
xchg
pop
adc
mov
mov
iret
test
inc
stc
gs
add
stos
ja
in
sub
mov
inc
repnz
mov
sub
dec
cmc
mov
pop
pop
loopne
fisubrs
mov
sbb
pop
fbstp
cmp
insb
adc
and
es
gs
cmpsb
icebp
dec
fnstsw
push
xor
sbb
adc
out
jl
or
sarl
fcom
nop
cltd
xor
inc
xchg
test
mov
jg
ss
mov
pop
inc
mov
cmp
scas
mov
dec
push
sub
lcall
gs
shrl
mov
xchg
inc
ss
pusha
pop
mov
mov
cmp
insl
int3
je
mov
push
mov
imul
push
divb
dec
sarb
pushf
inc
cltd
daa
jecxz
add
pop
add
add
xor
or
test
lcall
dec
xlat
test
mov
pop
pop
pop
jecxz
sub
adc
jno
ret
xchg
xchg
call
dec
or
test
jp
cli
jle
xor
cmpsl
pop
xor
push
and
shll
sbb
mov
xchg
add
call
xlat
outsl
fnstcw
xchg
push
pop
sbb
fcomp
dec
push
cs
outsl
mov
pop
stos
pop
pop
lahf
sbb
adc
inc
dec
lea
mov
mov
in
movsl
and
or
add
dec
adc
xor
jmp
xchg
pushf
das
out
pop
or
loope
jg
enter
push
cmc
les
lcall
popl
jo
cmp
or
mov
nop
outsb
sarl
jmp
repnz
rorl
loope
frstor
lret
mov
add
xor
cmp
or
ljmp
add
push
adc
and
add
pop
popf
in
daa
and
inc
jnp
sub
add
dec
sub
idivl
mov
popf
or
sbb
push
data16
add
pop
sub
lret
ja
adc
jp
or
gs
popa
in
ss
arpl
push
pushf
mov
jg
std
sub
rcrb
mov
pop
pusha
sub
cmpb
push
sub
pop
add
or
hlt
out
pusha
push
test
ficoms
cmpsl
mov
jl
jp
cmp
and
lods
fdivrs
fisubrs
jg
out
jmp
or
imul
popf
in
jge
fisttpll
je
sub
mov
fstps
incl
mov
je
sub
dec
add
sub
adc
jbe
mov
cmp
or
or
sub
nop
scas
popf
inc
pop
or
sbb
xor
sub
add
jp
les
mov
ret
ja
test
mov
add
add
add
int
aam
mov
lahf
push
mov
and
into
jle
cld
or
cmp
addb
adc
in
jo
mov
int
ja
xlat
mov
test
dec
cmp
inc
jecxz
mov
lret
in
jmp
dec
push
aam
and
test
xor
mov
jecxz
adc
xor
mov
xchg
aad
outsb
inc
out
out
daa
push
sbb
jns
jmp
sub
rcll
and
insb
js
mov
out
in
subb
lea
mov
mov
jmp
sub
pop
fs
aad
pop
out
or
stos
pop
sbb
nop
outsl
cmp
xor
dec
lea
fdivs
lcall
and
push
testb
add
mov
add
push
aas
ja
push
in
test
je
mov
or
push
inc
loop
adc
or
cmp
scas
test
movsb
mov
dec
or
pop
stc
out
push
push
xchg
data16
mov
mov
add
add
add
lods
es
cli
sbb
lock
in
sub
sarl
xor
loopne
push
cmp
popf
fdivp
fwait
rcrb
push
mov
loop
inc
test
test
inc
std
addr16
add
lret
inc
xchg
lret
dec
ficoml
rcl
lods
leave
sbb
and
jl
pop
mov
incl
hlt
xor
sbb
xor
mov
dec
fbstp
dec
xor
cmp
adc
sbbb
adc
imul
ret
add
or
scas
cmp
cmp
push
iret
ret
pushf
jle
ds
mov
in
leave
ja
dec
test
loopne
sbb
adc
sti
cmc
shlb
push
jno
jbe
les
jecxz
adc
aas
fistpl
mov
outsb
into
scas
cmp
shlb
pop
xchg
add
push
mov
lcall
test
pushl
add
jne
sub
scas
ret
test
and
js
das
jne
or
aam
xor
sti
dec
jg
pop
mov
mov
test
stos
stc
movsb
add
call
xor
push
lret
in
enter
iret
inc
inc
int
cmc
inc
es
cs
mov
xchg
sub
div
jmp
daa
pusha
in
inc
fisubs
sbb
mov
adc
add
fsubrs
mov
mov
aas
lock
outsb
xchg
out
push
push
aam
lcall
scas
cld
cmp
pop
xchg
insb
popf
push
lahf
hlt
and
ret
daa
fstps
sub
push
fstps
mov
cltd
cwtl
fnsave
rcl
inc
jo
icebp
xchg
rclb
repnz
or
sti
mov
pop
js
movsl
fs
jp
in
orb
or
pop
jge
fsubrs
call
inc
mov
sahf
lahf
adc
and
xorl
movsl
jns
in
mov
add
add
add
les
mov
clc
mov
mov
pop
loop
push
and
in
pop
rorb
leave
int
xchg
push
dec
mov
xor
push
scas
xor
pop
popa
xor
xor
lret
aas
inc
jbe
jnp
adc
movsl
fwait
ss
dec
lahf
movb
mov
fwait
push
pop
and
movsb
aam
inc
inc
push
and
in
test
dec
bnd
leave
clc
push
ret
bound
xor
scas
hlt
fmul
xchg
mov
sbb
push
push
mov
jae
mov
stos
inc
fldl
jl
es
ficompl
xor
sbb
test
mov
std
mov
arpl
cmp
shl
push
and
xchg
fiaddl
repz
in
xlat
and
test
inc
sub
xlat
mov
jp
int
sbb
iret
inc
pop
fldl
xchg
adc
imul
fsubrl
pop
scas
sub
sub
pop
mov
xchg
inc
aam
inc
adc
dec
pop
pop
sbbl
cli
test
stos
jnp
repz
add
add
icebp
xchg
pusha
push
sub
sarl
or
mull
iret
or
push
xchg
and
leave
mov
cmp
mov
adc
jmp
jg
add
mov
aad
push
mov
enter
fwait
loope
lea
lods
or
fsubr
insb
scas
lock
roll
stc
clc
leave
repz
jmp
clc
dec
xlat
call
shl
and
ja
rclb
or
data16
xor
rorb
movsl
leave
sahf
mov
fwait
repz
xchg
push
outsb
arpl
push
xor
movsb
jmp
mov
ds
out
xchg
inc
enter
pop
mov
dec
ficomps
cli
xor
sub
jo
mov
sub
jmp
mov
pop
sub
mov
in
dec
dec
scas
loop
or
cltd
cld
adc
js
push
xchg
or
cmpsl
sti
add
in
mov
jecxz
out
arpl
sbb
lret
add
mov
add
add
add
das
mov
rol
ds
and
aad
dec
push
mov
popf
pop
movsb
pop
insb
push
lods
leave
cmp
lock
pop
sbb
xchg
aad
cwtl
cmp
xchg
repz
iret
xlat
dec
add
out
repz
int
das
test
shl
pop
pusha
stc
dec
xchg
sub
ds
cmpsl
clc
jne
sbb
fstpl
loop
pop
sarl
xor
inc
movsb
je
mov
ret
js
ret
xchg
loop
xchg
pop
sub
dec
sbb
fisubrl
xchg
dec
or
rclb
and
sbb
cli
xchg
ja
adc
ss
dec
notl
jo
dec
sub
mov
sbb
pop
lahf
inc
rol
cli
shrb
iret
and
lods
mov
cmc
sbb
test
sbb
cmpsb
dec
jae
sbb
movsb
call
add
or
data16
aad
push
xchg
test
jg
xor
stos
ja
in
dec
sbb
add
push
xlat
and
jne
sub
xor
fdecstp
push
or
outsb
loope
test
out
mov
fcomp
pushf
mov
test
mull
or
mov
arpl
add
push
mov
inc
js
mov
and
inc
mov
pusha
stc
pop
jge
in
cld
or
mov
stos
xchg
xor
dec
loop
push
mov
aaa
std
inc
jmp
mov
dec
jle
push
imul
les
dec
dec
lock
decb
stos
pop
pushf
pop
jle
mov
out
push
popa
mov
loopne
pop
insb
stos
cmp
adc
add
test
xchg
add
add
adc
fstl
dec
stos
andb
out
inc
push
movsb
imul
not
lea
scas
push
pop
dec
push
iret
call
fcomps
out
adc
push
inc
adc
sbb
add
adc
in
lcall
xor
fs
or
push
and
add
hlt
pop
pop
sbbl
scas
imul
sahf
daa
xchg
dec
int3
and
sahf
test
pusha
xor
addr16
pop
adc
hlt
cmp
push
mov
gs
sarl
inc
fdivrs
roll
jl
pop
aaa
pop
loope
mov
ret
or
into
sbb
pop
leave
sbb
insb
push
adc
pop
fistpl
testb
sbb
xchg
adc
inc
test
lods
add
xsavec
flds
jecxz
and
jecxz
adc
int3
mov
xor
js
test
fistps
loope
sbb
push
mov
jmp
mov
fcmovnu
xchg
cmpsl
pop
out
negb
fidivrl
fisubs
fistpl
aam
pop
outsb
sbb
js
aad
lret
xchg
std
xor
push
pop
pusha
aad
pop
mov
inc
and
mov
and
pop
das
jl
insl
inc
mov
daa
pop
ja
outsb
sahf
sbb
sub
or
add
sub
jg,pt
adc
outsl
xlat
cmp
add
pop
add
add
sti
test
mov
or
xor
pop
mov
es
cmp
fucom
inc
inc
clc
pop
sub
xchg
pop
pop
pop
pop
lret
mov
faddl
call
fs
imul
xchg
rorl
push
add
cmp
out
sub
sahf
push
into
icebp
push
jne
push
push
mov
jnp
mov
ja
push
pop
inc
pop
cmc
cs
push
adc
arpl
sbb
daa
out
jno
xorl
inc
jl
and
sbbl
and
inc
cmpsl
movsl
jg
or
ljmp
pop
pop
or
cld
fcmove
adc
mov
lcall
sbb
xor
fimull
out
fisttpll
int
outsl
pop
push
xchg
test
sti
mov
or
inc
mov
pop
lods
jl
fstpt
jle
ds
pop
insl
adc
mov
adc
jbe
pop
push
add
out
idiv
outsl
mov
sbb
push
xor
add
push
loop
add
mov
lds
into
pusha
mov
addr16
adc
in
and
leave
jg
lret
push
or
les
mov
ret
push
cld
inc
inc
lock
push
jnp
pop
and
cli
test
xchg
movsb
punpckhdq
out
jae
sbb
push
ss
mov
cmpsl
inc
dec
mov
outsl
andl
js
pop
cmp
rcrb
sub
pusha
and
inc
lea
dec
mov
ja
fs
outsb
xor
popa
divb
data16
out
adc
insb
rcrb
push
pop
les
fldt
add
push
push
xor
xor
popa
in
neg
stc
lcall
and
mov
cmp
jl
mov
jne
int3
aas
test
stos
sahf
mov
cli
jnp
inc
outsl
pop
mov
popf
mov
push
ret
cmp
repnz
add
inc
fbld
mov
ret
mov
aaa
mov
add
fdivs
jb,pn
inc
inc
test
fdivrl
out
dec
imul
out
push
dec
cmp
dec
scas
das
test
sbb
test
sub
clc
cmc
fs
lcall
fs
pop
in
xchg
cmpsb
lods
fstps
sbb
cmc
outsb
push
mov
idivb
adc
ljmp
add
xchg
stc
jmp
lods
xchg
shlb
adc
jg
sub
or
test
leave
popf
cmpsb
push
cmpsl
mov
loope
mov
mov
mov
sub
pop
popf
sub
pop
or
std
pop
scas
repnz
pop
push
mulb
adc
rcrb
pop
jecxz
push
mov
xchg
movsl
dec
imul
and
jecxz
out
adc
sbb
cmpsb
xor
and
fimuls
push
rorl
pop
cmp
stos
or
stos
aad
add
fistpll
call
mov
mov
add
sub
or
sub
jbe
xorl
mov
jo
mov
cltd
into
test
lret
orb
js
xchg
mov
int
andl
adc
push
push
in
cmp
popf
mov
es
repz
cmpb
inc
fistps
sub
scas
cmp
pop
pop
pop
jp
adc
xchg
cltd
push
lods
mov
das
pusha
mov
out
insb
ret
cmp
xor
mov
inc
jmp
inc
fstps
lahf
outsb
add
sub
pop
mov
sub
jae
jle
lock
inc
adc
movsb
xchg
jg
xlat
fimull
inc
adc
subw
xchg
lock
add
or
lods
push
jb
cmp
loope
pop
push
loope
in
xchg
je
fnstcw
cld
lcall
mov
stos
outsb
sbb
int3
add
mov
pop
mov
outsl
insb
mov
in
mov
pop
push
push
jge
jbe
cmp
add
into
std
sti
leave
sti
iret
jmp
dec
mov
int3
inc
mov
add
mov
int3
fwait
mov
mov
fs
test
adcb
cmp
inc
sub
xchg
mov
stos
xor
popa
jns
pop
sub
xor
scas
cmp
in
adc
cmpsb
mov
and
pop
jl
xlat
xchg
shlb
adc
pop
cmpb
daa
add
jle
cmpb
inc
add
movsl
and
push
pop
mov
mov
and
fisubl
ljmp
repnz
lcall
ljmp
push
jge
pusha
jbe
call
mov
cmp
xchg
insl
out
pop
jb
mov
ret
clc
in
orb
push
mov
shrb
cmpsb
adc
add
enter
push
stos
push
xchg
adc
stos
mov
add
inc
pusha
loope
or
or
mov
xor
push
push
out
fsubl
rorl
mov
mov
xchg
pop
rcr
push
arpl
add
add
add
jge
lret
pop
movsl
cmp
cmp
cwtl
mov
adc
aas
mov
scas
daa
sub
jle
xor
movsl
pop
data16
mov
mov
iret
jmp
in
jne
decl
or
into
push
or
cmc
jns
push
jno
test
movsl
ret
pop
xor
sahf
shl
mov
cmp
push
leave
jb
sbb
inc
je
sub
xchg
adc
push
add
into
rorb
lret
xor
jp
inc
inc
xor
rcrl
jle
mov
add
nop
pop
add
xor
js
shll
movsb
adc
sbb
insb
add
arpl
adc
or
sbb
adc
or
test
jmp
std
andb
icebp
es
mov
sbb
lahf
sti
and
mov
data16
loopne
xlat
loop
rcrl
sahf
shlb
sub
nop
mov
scas
mov
fwait
mov
or
jg
mov
xor
sub
push
mov
add
repnz
icebp
call
je
test
pop
fidivrl
cmpsl
out
out
lea
jo
sub
jae
and
jp
mov
mov
push
aas
pusha
imul
sbb
fisttpl
dec
mov
and
sub
mov
das
pusha
dec
mov
mov
jg
shll
mov
inc
pop
mov
xor
jno
mov
iret
aas
pop
fmul
add
stc
adc
xor
mov
add
cmp
jl
outsb
inc
xchg
loope
fldcw
push
mov
xlat
xchg
aas
inc
shrl
dec
mov
cwtl
scas
pushf
jbe
mov
mov
pop
andb
dec
mov
pop
not
enter
cmpsl
xchg
lods
pusha
out
inc
push
test
adc
pop
lea
pop
pop
xor
clc
insb
adc
int
ret
adc
loope
add
mov
sbb
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
fs
mulb
jbe
jb
ds
test
push
xchg
lods
inc
std
inc
in
into
and
sbb
popf
adc
je
or
xchg
das
cmp
cmp
xchg
push
jmp
jp
lds
pop
icebp
and
ja
sbb
xor
imul
mov
lea
or
fwait
out
enter
jge
inc
dec
mov
add
cmp
and
sub
nop
out
cltd
sbb
call
cmp
dec
inc
stos
repz
aam
jnp
and
push
inc
js
push
inc
dec
loopne
mov
push
mov
cld
test
mov
push
add
loop
push
add
mov
pop
ret
push
scas
cltd
into
in
call
mov
arpl
sbb
mov
jno
xchg
or
sahf
fmuls
inc
clc
xor
popa
dec
adc
testb
pusha
mov
pop
movsl
xor
orb
add
pushf
shrb
xchg
mov
out
popa
roll
pop
add
add
xchg
jg
dec
adc
mov
adc
pop
inc
fwait
cmp
ja
popa
fucom
adc
iret
xchg
in
dec
sbb
jg
xor
mov
in
jp
sub
pop
and
sub
in
push
push
loope
aam
fdivrl
sub
aas
lahf
mov
iret
cmp
push
adc
sub
and
test
nop
cmpsl
inc
daa
and
aaa
fistpll
popa
aaa
test
lods
jno
les
repnz
jo
dec
fwait
sti
jmp
pop
xlat
and
int
lret
adc
add
dec
cwtl
cmp
xor
xchg
arpl
out
loop
and
push
pop
pop
sbb
aad
adc
iretw
jno
dec
movsl
je
movsb
add
out
xor
shrl
bound
sbb
pop
lahf
mov
repz
xchg
jnp
enter
sbb
ret
inc
mov
out
mov
mov
xor
mov
add
test
mov
fucomip
imul
add
pop
add
add
xchg
push
cmp
aam
gs
mov
mov
dec
sbb
stos
fistpl
jno
cmp
push
int
lcall
sub
rcrl
cs
mov
add
mov
pop
or
add
bound
sbb
clc
pop
aad
mov
loopne
aad
jle
out
lahf
icebp
adcb
jns
dec
sbb
cmc
test
or
pop
mov
push
scas
mov
dec
jns
push
jmp
roll
scas
xchg
sbb
lods
pop
hlt
out
mov
or
cmp
jecxz
rcr
fcoms
aaa
int3
out
fadds
clc
notb
mov
xchg
cli
sbb
mov
iret
loopne
inc
roll
fstpl
dec
push
bound
jbe
cltd
icebp
mov
sar
inc
ret
push
jmp
dec
aam
stos
jecxz
inc
aam
mov
sub
into
int
add
add
jne
jne
jg
loop,pt
lret
popf
repnz
ret
add
pop
add
add
test
or
add
dec
dec
mov
test
imul
bound
cmp
lods
mov
ret
mov
das
out
mov
aad
inc
clc
mov
hlt
popl
outsb
push
cmp
xchg
in
cmpb
push
push
xchg
mov
pop
aad
mov
ss
les
and
jae
sbb
or
stos
mov
call
add
jmp
loop
cmpb
adc
dec
sbb
out
lods
push
mov
push
stos
roll
pop
insl
add
pushf
fldcw
add
movsl
cltd
pop
loop
xchg
adc
sbb
mov
lods
xchg
jmp
mov
shrb
arpl
aam
jecxz
lret
int
mov
cmp
add
dec
pop
mov
mov
dec
add
les
add
add
add
movsb
ds
icebp
jnp
cmpsb
jno
dec
cmp
repnz
std
cld
repnz
fidivrl
xchg
lahf
and
repnz
sti
lock
es
inc
cld
xchg
and
lret
inc
cmpsb
pusha
nop
insl
push
aaa
cmp
xchg
sahf
xor
or
push
repnz
mov
test
pop
cmp
icebp
test
jae
mov
ret
xor
fcompl
add
inc
push
lret
lea
or
aam
ret
mov
outsl
je
xchg
aam
jp
mov
lods
rcrl
mov
ljmp
adc
lds
sub
aas
fwait
pop
or
pop
sbb
aam
pop
pop
sti
outsb
dec
inc
sub
sbb
scas
in
mov
ret
or
jns
inc
leave
imul
sub
mov
bnd
and
pop
jae
testb
add
add
outsb
jle
lods
testl
push
aaa
push
pop
add
add
add
sti
js
vmovlps
out
mov
imul
mov
lret
cwtl
pop
cmpsl
push
xchg
xchg
and
inc
cmc
int3
fisubrl
aad
adc
nop
fs
adc
sub
pop
push
sbb
leave
mov
pop
adc
sbb
or
dec
fildl
adc
outsb
aad
sub
js
cli
jle
jno
shll
pusha
aaa
mov
pop
fdivl
lock
lret
aam
jle
push
cmpsl
xchg
out
leave
pop
ret
and
mov
lds
mov
lahf
push
pop
mov
mov
cmpsb
out
sbb
cmp
sbb
mov
mov
inc
xlat
cmp
inc
fcompl
cmc
push
inc
add
lea
mov
or
inc
gs
xchg
lea
mov
test
clc
je
sub
pushf
call
in
dec
pop
add
add
mov
arpl
mov
mov
add
add
add
movsl
ss
sub
scas
sub
jl
out
add
jae
xchg
inc
mov
sub
push
adc
and
dec
push
dec
ljmp
into
mov
xor
inc
xchg
test
push
gs
cli
ret
scas
dec
pop
mov
shr
jnp
cmp
mov
in
pop
es
stos
lahf
div
shl
xchg
sub
sbb
jo
mov
lret
sbb
test
push
xor
add
arpl
outsb
jmp
sbb
in
int
popf
cmpl
dec
iret
ret
xchg
pop
mov
test
push
add
std
dec
and
fstpl
imul
or
mov
out
andb
sub
das
push
mov
in
cmpsl
mov
mov
jmp
stos
lret
xor
or
xchg
pop
in
outsl
ret
ret
mov
not
mov
add
out
sti
xlat
push
aam
or
repnz
pop
add
add
xchg
scas
ret
jbe
mov
outsb
or
loopne
dec
aaa
leave
mov
add
add
sahf
dec
cmp
stos
pop
cmp
ret
mov
and
pop
cmpsb
fiaddl
lds
flds
adc
lcall
mov
xchg
add
sbb
test
iret
jl
cli
jle
xor
dec
jecxz
sbb
jbe
and
inc
and
js
insb
and
mov
and
sbb
bnd
adc
cmpsb
dec
lock
adcb
adc
int
loop
push
sbb
rcrb
mov
adc
push
fcomps
xor
inc
repnz
push
xor
lahf
rcll
mov
mov
mov
imul
mov
sbb
fsub
data16
sub
lret
or
xchg
ss
mov
xor
xor
dec
dec
xor
cltd
jb
adc
ds
sub
cmp
jg
dec
das
pop
mov
enter
add
add
movsl
mov
mov
mov
cmp
cmp
icebp
mov
shlb
lods
mov
sub
rorl
cltd
lods
pop
mov
das
sub
inc
mov
in
xor
aam
add
xor
test
xchg
push
xor
pop
mov
mull
fisttps
mov
fdivrp
cli
int
fisttpll
cmpsl
out
add
shll
jae
inc
aas
xchg
imul
repz
popa
aas
xchg
fdivs
sahf
sbb
cmc
cltd
cwtl
test
mov
push
cltd
mov
pushf
jmp
xor
mov
sbb
adc
xchg
out
dec
pop
cmpsb
cmpsl
mov
xchg
and
or
adc
sbb
es
xlat
inc
pushaw
push
testb
inc
popa
cmp
gs
or
mov
xchg
xchg
cmp
push
adc
add
add
add
xor
fistpll
out
repz
and
cltd
leave
add
pop
add
add
divb
cs
ja
loope
cwtl
scas
bound
xchg
lock
not
cmp
lret
rorl
loop
scas
je
mov
cmp
xchg
dec
jnp
test
pop
into
pop
xchg
jne
sbb
fidivs
dec
repz
or
js
xor
mov
jo
sbb
push
mov
sbbb
jl
aad
sbb
jns
inc
repnz
push
add
in
pusha
pop
mov
mov
xor
aad
flds
inc
cmpsb
imul
mov
sahf
cmp
in
xchg
mov
push
cli
arpl
loop
fisubs
sti
sbb
pusha
repz
push
mov
jo
pop
in
adc
clc
xor
sbb
lret
mov
insb
mov
lea
out
or
data16
sub
adc
dec
mov
test
scas
lret
lret
lods
mov
aas
mov
mov
mov
and
lret
pop
add
add
ficomps
call
mov
cmp
adc
xchg
mov
fsubr
add
daa
lds
orb
xor
mov
ljmp
into
incb
shr
inc
ljmp
and
insl
fs
lds
ljmp
out
xor
loope
sbb
movsl
cmp
xchg
push
xor
pop
imul
mov
shlb
lods
pop
jno
das
jns
inc
test
into
test
das
pushf
cmp
xchg
or
xchg
sahf
xchg
fnstsw
pushf
and
fsubrs
in
sbb
fldcw
loop
mov
sbb
mov
pop
xor
push
bound
idivb
or
lock
push
hlt
xchg
mov
pop
in
test
cltd
inc
ret
jmp
dec
mov
cmp
outsb
jno
into
dec
dec
std
dec
xor
xchg
orw
repz
repz
push
and
stc
enter
in
adcl
cmpsl
lret
add
pop
add
add
icebp
adc
jno
cmc
scas
stos
sahf
cltd
outsb
lret
add
dec
sbb
lcall
loop
test
push
mov
fidivrl
pushf
pushf
movsl
push
push
cmpsl
hlt
in
stos
lods
jns
stos
lcall
scas
push
inc
scas
lret
mov
mov
lods
xor
inc
push
inc
push
adc
jno
sub
dec
fidivs
mov
mov
or
jne
lods
sbb
jg
cmp
push
xchg
std
and
mov
in
cmp
add
in
je
int
int
mov
jo
push
iret
mov
dec
push
scas
out
xor
and
je
cmc
lock
movsl
ds
cmp
inc
rolb
cmp
sbb
pop
in
or
aas
ret
out
push
jb
mov
cmpsl
movsl
rcr
jl
out
cli
mov
ljmp
jo
mov
adc
jle
sub
movsl
into
lds
jne
imul
cmc
decl
inc
xor
add
add
bound
icebp
inc
inc
xor
call
stos
mov
imul
or
xor
sub
fs
jle
aaa
push
enter
fdivs
fadd
push
cmp
cmp
popa
cmp
arpl
mov
fildll
inc
cmc
cmp
std
sbb
repnz
out
daa
inc
xor
push
mov
add
or
lock
loopne
adc
adc
sbb
dec
movsl
xchg
ret
pop
loop
test
cs
lcall
fisttpll
lahf
sub
push
popa
popf
lods
test
inc
sbb
js
xor
dec
sub
insb
adc
les
jne
cmc
adc
inc
cltd
push
mov
and
cli
dec
mov
cmp
ror
fnsave
js
sub
dec
hlt
aas
ljmp
mov
add
addr16
jle
stos
rcrl
lea
cmp
sbbb
repz
jecxz
mov
add
ja
iret
arpl
or
push
out
mov
add
pop
add
add
test
push
in
sbb
stc
lds
dec
or
mov
xchg
jl
fsts
jge
inc
pop
call
cmpsb
cmpl
inc
sbb
addb
rol
orl
add
insl
fwait
dec
sub
jae
sub
test
mov
lahf
mov
sub
loopne
mov
xchg
jp
xchg
dec
add
jno
movsl
mov
in
adc
push
jmp
push
push
jle
rolb
dec
sbbl
es
hlt
mov
incl
inc
xchg
fcoml
sbb
outsb
scas
xchg
push
out
popf
jbe
or
xor
sbb
les
push
sbb
cmc
dec
in
xor
cmp
sbb
jecxz
pop
mov
xchg
ja
inc
jl
aaa
pop
frndint
inc
ret
jnp
pop
adc
outsb
cmp
clc
dec
into
add
fisttpl
fbstp
pop
mulb
mov
out
out
out
into
shlb
test
add
add
add
fwait
cmc
and
std
xor
repz
xor
notb
popa
mov
fmull
sbb
xchg
adc
jge
pusha
clc
lret
pop
pop
rcl
insb
pop
test
popf
ret
stc
aam
pop
cmp
jmp
inc
add
mov
mov
testl
mov
adc
mov
sbb
in
out
rorb
vminss
leave
push
cmpsb
leave
jge
movsl
xchg
inc
inc
pop
std
rorl
pop
aam
mov
dec
hlt
add
and
in
adc
xchg
pop
repnz
and
xchg
and
test
jns
int
mov
lock
cmp
lods
pushf
int
xor
cmpl
stos
mov
or
or
mov
inc
int
imul
sub
idivb
sti
out
lea
mov
lcall
add
loopne
and
je
out
mov
test
lahf
jge
iret
add
pop
add
add
sbb
je
andb
decb
mov
push
mov
aaa
cmpsl
clc
sti
pop
push
insl
inc
sahf
incl
add
loope
bound
test
in
lret
std
and
mov
sbb
lock
data16
or
repz
out
xchg
xor
add
pop
ror
movsb
stos
in
push
or
xchg
dec
adc
mov
and
into
aam
ds
add
push
and
out
add
push
pop
leave
and
incl
xchg
adc
imul
adc
andb
aas
outsl
bound
scas
xchg
popa
mov
jmp
popa
push
fs
mov
jmp
test
xchg
add
dec
sub
inc
ret
mov
push
pop
dec
xchg
ljmp
mov
in
mov
add
dec
inc
dec
daa
dec
das
outsb
imul
sub
out
push
ja
rolb
add
add
add
js
cmp
negl
sub
in
test
adc
mov
stos
sbb
sbbb
test
pop
into
pop
sbb
and
out
mov
in
lcall
out
dec
cmp
and
sti
addl
shrb
mov
rcrl
les
mov
loopne
icebp
cli
or
sti
xchg
jne
lahf
inc
cmpsl
pop
add
mov
pop
xchg
repnz
mov
mov
and
add
push
rcr
ficoms
mov
mov
adcb
adc
push
fidivrs
inc
sub
mov
xor
mov
rol
cmp
mov
cmp
xchg
add
adc
cmc
je
inc
jecxz
idivl
enter
jp
sbbl
dec
lahf
mov
dec
test
int3
jmp
jecxz
adc
call
out
lahf
xor
add
rcl
add
pop
add
add
fs
jnp
inc
xchg
jge
xor
in
std
and
pushl
mov
jmp
fisttpll
or
enter
sarl
and
mov
xor
mov
inc
aaa
xchg
xchg
int3
or
ret
pop
mov
pop
arpl
lock
mov
mov
jae
mov
push
orb
adc
ret
xor
inc
add
sbb
mov
or
push
xchg
es
pop
dec
dec
or
in
inc
mov
sbb
xor
mov
imul
dec
mov
ja
int3
adc
adc
inc
inc
adc
jp
popf
push
andb
out
xor
popf
nop
mov
stos
push
fbstp
insl
xor
pop
push
into
repz
sub
mov
or
push
mov
insl
mov
xchg
cmp
xchg
arpl
call
add
add
neg
outsl
xor
fstps
outsb
xlat
fcom
add
pop
add
add
pop
inc
mov
jp
mov
out
icebp
nop
push
xor
nop
int
add
pop
or
negl
dec
mov
mov
sub
dec
push
xor
and
jb
stos
mov
shrb
inc
addr16
clc
out
and
xchg
or
outsb
jmp
sub
mov
mov
das
push
sbb
xchg
lds
cmp
aas
cmp
jbe
adc
mov
and
jbe
inc
mov
sti
inc
or
aad
push
pop
sbb
dec
leave
popf
arpl
movl
cs
popf
inc
decb
push
push
cli
lods
jns
mov
cs
fwait
subl
jne
cmp
addr16
xchg
call
outsb
push
mov
addl
or
sbb
test
mov
mov
out
cmp
jge
lods
sub
fincstp
and
mov
adc
push
sub
aam
xor
add
sbb
in
and
roll
add
add
add
leave
rcll
push
call
adc
jbe
test
movsl
ret
out
scas
inc
sahf
ja
mov
or
out
in
lahf
dec
xchg
addr16
push
pop
xchg
rcrb
lret
jle
sub
xor
test
repz
xlat
leave
xchg
mov
in
jmp
lret
fistpl
pop
mov
fcoms
repnz
movsl
or
fsubl
es
push
das
jecxz
adc
xor
test
xchg
jmp
ret
sbb
mov
sub
lods
js
pop
push
out
cmpsb
sub
sub
mov
fists
mov
divb
mov
jno
dec
lcall
adc
or
inc
repnz
std
subl
push
xchg
xchg
and
or
fisttpl
gs
xchg
push
popf
sti
ss
mov
ficomps
push
push
or
sub
out
aam
xor
out
imul
jg
arpl
int
sbb
add
ds
stc
push
fsubrl
js
aam
add
add
add
mov
scas
imul
pop
int3
xchg
sti
imul
push
xor
test
pop
in
lret
add
into
rolb
stos
lahf
dec
das
aaa
sbb
push
fxch
aam
xchg
push
test
adc
std
mov
lock
loopne
xor
mov
out
fstpl
mov
int3
dec
dec
inc
leave
cmp
cmpsl
push
lods
outsb
lea
pop
or
cmp
out
into
popa
mov
dec
out
mov
scas
fnstcw
sbb
dec
mov
jmp
push
sub
sbb
cmpsl
fmuls
sub
jb
outsl
sbb
sbb
fidivrs
add
mov
dec
aas
shrb
loope
fs
fidivl
jl
fwait
clc
mov
push
mov
or
adc
rcrb
jbe
pop
imul
and
add
lahf
xor
pop
xor
add
xchg
and
idiv
lahf
insl
jae
fcmovnu
sar
mov
aad
add
add
add
fcmovne
iret
cmp
push
add
and
pop
into
inc
inc
movsl
adc
scas
repz
push
xchg
push
push
out
jmp
or
and
stc
loop
test
push
cmove
ret
repnz
mov
rorl
aam
cmpl
mov
lock
sub
mov
lods
jnp
jns
in
shlb
cmp
mov
fcomp
ret
and
mov
inc
fadd
push
mov
testl
movsb
ss
sub
shlb
inc
add
imul
mov
and
sbbl
mov
pop
bnd
test
jge
or
sbb
repnz
mov
ficomps
sub
scas
inc
pop
lea
push
adc
rorl
dec
shll
mov
sub
rcrl
mov
cmpsl
or
push
push
cmc
pop
mov
test
cmp
jg
xchg
mov
inc
outsb
hlt
add
pop
add
add
sub
mul
lret
adc
test
gs
push
sbb
ljmp
paddusb
repz
cmc
cmpsb
and
lea
test
pop
jl
cwtl
jmp
xchg
jnp
loop
shll
mov
push
xor
jge
push
daa
mov
mov
adc
popf
imul
or
jmp
sub
sbb
xchg
ss
adc
mov
in
test
test
test
xchg
movsl
fdivl
popa
hlt
aaa
sub
xchg
xchg
negl
popa
mov
lds
in
adc
addr16
or
cmp
mov
in
adc
lods
cwtl
cmpsb
xchg
cmp
and
push
repz
push
pop
popf
mov
dec
pop
repnz
dec
jno
inc
outsl
sub
faddp
adc
ret
mov
adc
mov
dec
ss
shlb
adc
faddl
add
add
int
out
out
imul
aas
cld
push
test
xlat
add
pop
add
add
icebp
add
jne
loopne
jp
lea
loope
dec
int3
jns
jmp
lahf
push
loopne
sbb
push
lret
sbb
std
adc
mov
aaa
push
dec
ret
jnp
aad
mov
jecxz
nop
jg
dec
mov
dec
push
lea
pop
sbb
sub
repz
out
xchg
xchg
mov
inc
and
test
mov
jae
stc
fdivrs
mov
idivb
mov
iret
push
sbb
fsubs
mov
cld
fstpt
lahf
andl
mov
xor
push
jae
pop
mov
and
fs
aad
shll
push
lcall
sub
lret
fimull
push
jbe
lret
mov
or
push
lcall
and
jl
mov
jns
nop
xchg
stc
fcoms
fnsave
cwtl
xor
add
psubusw
push
adc
xchg
sbb
pop
jno
add
add
pop
add
add
dec
and
add
push
sub
cs
fxch
ss
mov
negl
jo
dec
push
mov
mov
subb
insb
mov
lahf
push
xchg
lods
aaa
jb
std
lea
andl
lahf
add
call
lea
addr16
cmp
mov
pop
sahf
lea
cmp
insb
lahf
fcoml
test
dec
xlat
ja
scas
jne
cmpsl
sbb
daa
int3
clc
lods
adc
pop
in
mov
test
dec
fldt
in
xchg
das
lcall
aad
cmc
test
xchg
fs
pushf
loope
rorb
jns
test
shl
mov
daa
pop
dec
xlat
mov
rcr
cltd
ret
or
dec
inc
fldl
jmp
inc
pop
fs
cmp
mov
pop
aad
push
and
js
movsl
in
lret
inc
mov
lods
out
sbb
mov
ss
popa
lods
lods
test
pop
jecxz
in
sbb
sahf
cmc
fsubrp
jnp
push
xor
inc
rorb
add
pop
add
add
mov
jnp
or
repz
sbb
out
dec
adc
rcl
sub
xchg
iret
lret
dec
cmpsb
orl
mov
fcomi
daa
jno
and
sbb
push
mov
xor
sub
pop
dec
pop
push
and
push
push
pop
cmp
xchg
test
icebp
adc
mov
rolb
add
add
clc
aas
fdivs
andl
jns
jb
and
rcrl
int
inc
xor
lds
addr16
sub
daa
xor
xlat
adcb
gs
ja
insb
or
ljmp
push
dec
pop
pop
ret
mov
loop
imul
inc
mov
cmp
push
fwait
ror
xchg
ja
jno
xchg
xchg
pop
cmp
rcrl
jbe
scas
and
pop
jo
mov
aaa
lods
or
xchg
xchg
not
hlt
adc
add
pop
dec
jle
jg
std
fisttpl
inc
push
je
jne
adc
add
pop
add
add
or
sti
fdivl
lahf
mov
jo
adc
jb
xchg
inc
and
jecxz
cmpsb
gs
mov
sub
flds
ljmp
and
push
jae
mov
sbb
mov
sbb
ret
call
pushf
into
lods
push
dec
sub
ds
pop
pop
inc
lods
outsb
mov
fwait
xchg
xchg
nop
scas
in
sarl
xchg
ret
pop
xchg
fst
sbb
cld
lods
nop
setae
xchg
stos
push
mov
mov
jb
jge
xlat
inc
lods
pop
mov
lds
int3
cld
mov
stc
data16
enter
mov
push
popa
rol
lea
push
lods
cmp
sbb
xor
push
data16
pop
dec
mov
lods
mov
movsb
loopne
sahf
cli
cmp
cmp
insl
mov
call
push
das
jnp
ljmp
das
add
mov
sti
idiv
lods
push
mov
movsb
scas
pop
faddl
add
add
add
pop
enter
fneni(8087
test
sub
cmc
shll
das
inc
xor
shll
js
adc
mov
dec
sbb
jl
add
cmp
push
cmp
xor
pop
andps
scas
or
imul
push
inc
cmp
mov
jg
push
clc
and
outsb
pop
xchg
xchg
repz
and
or
adc
pop
shrl
dec
shr
stc
cmp
sarb
lods
int3
inc
incb
mov
inc
loopne
daa
xchg
cmp
add
pop
xchg
pop
add
sti
inc
dec
pop
sbb
jmp
push
gs
or
jmp
xor
cmp
data16
dec
sahf
push
push
fists
rcr
mov
dec
cli
mov
clc
out
sbb
jne
jo
pop
cmp
lds
cld
sub
add
sbb
jmp
addr16
or
mov
add
add
add
jbe
aad
adc
fstl
je
add
pop
mov
sti
imul
adc
sbb
mov
mov
hlt
enter
jne
jl
push
or
in
test
sbb
shr
jns
pop
pop
pushf
stc
cmp
push
mov
aad
fidivrs
dec
xlat
push
decl
in
out
adc
int3
pop
jecxz
sbb
jge
inc
mov
lea
movsl
js
loop
pushf
aaa
sub
dec
pop
mull
lods
fwait
imul
adc
lods
jp
or
or
mov
ss
or
fisttps
sbb
js
mov
cs
pop
or
dec
lret
adc
fiadds
and
xlat
pop
test
fstps
enter
cltd
lds
xor
aad
repnz
iret
jecxz
bound
scas
add
out
test
fldl
cwtl
push
in
aaa
jmp
inc
andb
xor
scas
sub
and
cmpsl
fimull
jb
shrl
and
add
add
mov
aad
xchg
mov
jnp
xor
adc
push
push
and
mov
cmp
pop
sti
cmp
push
into
rorl
clc
imul
inc
popf
dec
push
psrld
outsb
cmp
sahf
add
in
mov
fisttpll
lcall
ds
sub
mov
imul
jo
mov
test
insb
das
scas
inc
rorb
mov
dec
loopne
or
fisubl
sti
sbbl
test
rol
adc
test
mov
icebp
xchg
scas
jg
lahf
inc
mov
int
into
test
adc
imul
xlat
in
popa
inc
fld
push
je
in
movsb
mov
and
pop
push
mov
out
cmp
cld
mov
jno
mov
sbb
scas
mov
push
push
dec
lret
push
push
xor
dec
mov
test
outsb
push
adc
rolb
add
andl
sbb
add
mov
lcall
iret
mov
stc
test
loopne
sub
add
pop
add
add
xchg
aam
pop
sbb
addr16
push
cmp
aaa
ds
arpl
nop
out
or
mov
mov
arpl
mov
sbb
fdivrs
call
pop
jbe
fcmovnb
dec
pop
cmp
and
mov
sub
cs
jo
pop
mov
xor
cmpsl
arpl
inc
hlt
push
push
push
loope
xchg
mov
push
mov
or
mov
push
cmc
push
inc
adc
popa
rcrb
push
imul
stc
out
cld
push
lret
add
pop
add
fs
pop
repz
mov
popf
jne
mov
rolb
ror
ds
or
loopne
mov
fbld
test
and
btc
jge
test
push
sarb
out
fdivs
sbb
fdivs
in
mov
or
dec
jg
add
daa
jbe
nop
daa
aad
fadd
mov
sub
push
repz
and
sahf
and
sbb
jns
in
lods
xchg
stos
xchg
loopne
add
add
add
popf
and
push
cld
jo
cltd
pop
mov
loope
stos
inc
js
lret
ret
sahf
inc
lods
nop
mov
pop
clc
fcomp
jne
add
sbb
xor
push
inc
inc
cmc
fnsave
lea
in
push
pusha
lret
jg
cli
adc
inc
add
pop
xchg
adc
sti
mov
insb
pop
or
enter
jp
into
push
test
out
shll
clc
add
sub
popf
fcoms
jge
mov
sbb
sub
sarb
call
sub
xchg
fidivs
ret
sbb
inc
push
push
and
mov
push
cmp
xor
pop
fidivl
inc
push
fdivl
adc
xchg
dec
in
xor
add
aam
leave
stos
loopne
arpl
loope
jmp
mov
outsl
in
push
jae
fadd
fsubp
jnp
mov
inc
jp
loope
add
add
add
mov
mov
sbb
pop
imul
push
adc
push
subb
xor
daa
push
mov
adc
adc
fcomps
adc
enter
orb
lret
cmp
xor
stos
jbe
mov
inc
inc
faddl
adcl
sbb
insl
roll
and
push
jle
jecxz
pop
xchg
lods
test
inc
mov
sub
xchg
inc
in
sbb
jns
imul
ret
ss
sarl
test
and
mov
jg
push
loopne
jecxz
pop
add
dec
sub
fmul
int
push
pop
scas
loop
xchg
aam
ficomps
cmpl
sbb
popa
sub
sahf
sbb
lods
in
inc
fs
cmpsb
jle
out
push
mov
aas
or
orb
xor
in
js
dec
insl
cmpb
add
xor
xchg
dec
mov
stos
mov
add
push
cmp
sub
cld
cli
jle
fmuls
loopne
sub
inc
loop
add
add
add
inc
inc
add
fbld
adc
xor
rolb
push
mov
ficoms
cli
arpl
pop
test
lret
sub
fidivs
lock
xchg
cli
and
int3
lock
mov
filds
mov
ljmp
mov
cmp
cmp
movsb
jnp
adc
test
test
fnop
pusha
dec
bound
jbe
jns
outsl
cmp
sbb
int3
xlat
shrb
addl
sbb
or
sti
inc
xchg
scas
push
in
mov
imul
hlt
push
popa
mov
imul
jle
or
mov
dec
pushf
mov
lock
out
sbb
pop
jne
xor
arpl
sub
pushf
andb
push
jb
jl
arpl
xor
push
sub
frstor
push
adc
add
add
ja
sti
ret
or
pop
loop
mov
dec
jecxz
add
add
add
orb
or
lret
cli
mov
inc
inc
in
sbb
fsubrs
mov
addr16
repz
xlat
adc
dec
jb
call
test
add
inc
cld
or
mov
adc
cltd
cwtl
lcall
lods
sub
jecxz
clc
fmul
mov
scas
jne
pop
mov
cmp
fucomi
loopne
int
pop
mov
out
sub
testl
xchg
ficomps
out
xor
or
into
sub
adc
xchg
mov
lret
popf
movl
daa
adc
inc
push
cmp
mov
lea
xchg
orl
mov
bound
in
dec
sub
clc
jl
dec
or
dec
test
push
mov
cmp
inc
dec
aam
out
xor
add
into
arpl
cmp
stc
dec
in
add
add
add
adc
sar
fucomi
hlt
mov
inc
addr16
ret
lods
cli
repz
dec
aas
pop
or
inc
add
stc
cmp
jne
test
mov
mov
mov
std
into
jns
jne
ret
fistl
push
add
dec
sbb
int
push
pop
mov
lds
mov
inc
mov
setle
stc
in
push
mov
decb
test
addb
dec
xchg
pusha
inc
xchg
mov
loopne
cmpsl
fdivr
jp
or
jnp
movsl
pop
test
or
pushl
and
stos
cmp
mov
push
sbb
cltd
mov
xchg
cmp
inc
xchg
aaa
je
daa
mov
xchg
leave
ja
ss
enter
mov
or
arpl
test
fstl
fistl
dec
outsl
dec
push
and
es
nop
es
rcr
movl
cltd
cmc
adcb
fcos
add
nop
repz
in
add
add
add
js
add
and
mov
in
or
stos
jl
cs
stc
xlat
cmp
mov
imul
sbb
mov
jl
adc
insl
push
or
mov
je
rolb
xchg
out
mov
sub
jg
sbb
pop
insl
mov
negb
adc
out
or
push
jl
test
fcomps
pop
dec
aaa
pop
pop
sarl
addb
call
dec
mov
xchg
dec
popf
hlt
mov
nop
xor
in
stc
inc
xor
dec
es
push
adc
in
pop
sub
inc
jnp
adc
or
mov
xchg
sarl
adc
bsr
dec
in
xchg
xacquire
popf
in
ds
bound
rcl
subps
ret
fcompl
scas
xor
cmp
cmp
outsl
mov
ds
lcall
add
add
add
lock
jg
mov
lea
pop
out
add
add
add
lret
mov
or
aad
lahf
ja
ds
adc
pop
push
inc
inc
jns
push
mov
mov
imul
inc
add
xchg
daa
jle
das
mov
insb
cmp
and
push
push
add
imul
mov
and
push
dec
outsl
sub
shrl
pop
cs
xor
hlt
inc
addr16
add
or
pop
scas
scas
mov
out
mov
fsubrs
add
ror
inc
clc
xchg
movsb
mov
and
pop
movsl
inc
adc
sbb
sbb
add
leave
and
std
push
xor
ljmp
jne
gs
sub
incl
fiadds
fiaddl
jp
add
cmp
fs
in
push
pop
mov
mov
repnz
test
lods
xchg
mov
mov
aad
popa
or
les
cmpb
xchg
fwait
cwtl
pop
popf
pop
xlat
fldt
push
fs
add
add
add
pop
fwait
mov
shrl
imul
pop
jle
insl
ljmp
hlt
xchg
cltd
push
ds
sub
js
fs
call
push
mov
mov
fwait
orb
hlt
hlt
jg
push
mov
fnstcw
and
loopne
xchg
dec
outsl
test
stc
adc
je
fildll
cmc
cmpsl
pop
pop
mov
in
ljmp
fdivp
inc
xchg
pushf
and
out
rcl
sbb
bnd
mov
jp
mov
test
push
scas
jl
call
cld
sarb
aad
jmp
push
inc
and
push
sbb
daa
pop
daa
mov
xchg
test
dec
bound
adc
clc
cmpsb
rcll
fwait
sti
out
scas
cmp
test
mov
jge
mov
data16
push
and
pusha
lret
test
lea
shlb
in
in
fcmovb
jae
push
add
mov
dec
js
stc
mov
mov
cmp
add
pop
add
add
xchg
loop
popf
mov
push
int3
lahf
lret
stos
jle
add
fdivr
mov
repz
sti
jl
jns
sarl
dec
insb
pop
adcl
push
enter
js
push
mov
sub
dec
loope
rolb
cmp
rcrl
sbb
inc
jl
jo
sub
adc
jae
ljmp
jns
nop
lea
lds
js
rcl
ret
outsb
push
test
mov
orl
stos
pop
test
xor
lcall
sub
xor
pop
out
sub
lea
pushf
mov
sbb
fucomi
xor
fsubp
cli
fld
jno
push
push
lcall
pop
inc
xlat
lahf
jle
pop
lods
pop
lret
sbb
jns
data16
popa
out
jecxz
add
outsl
xchg
test
dec
mov
push
push
adc
cli
fs
and
adc
dec
clc
in
fwait
jbe
dec
fists
into
push
daa
add
insl
repz
jae
jg
adc
jb
add
pop
add
add
mov
cmp
jecxz
sub
inc
xchg
loop
mov
pusha
fldenv
mov
add
dec
xor
inc
jae
and
es
sub
or
mov
dec
fistl
enter
jne
mov
or
dec
xchg
fiadds
lret
imull
jb
adcb
lock
sbb
addr16
andl
loope
shr
hlt
jns
fdivrs
sub
cmpb
push
jnp
hlt
dec
inc
or
xchg
pushf
icebp
cwtl
cmp
mov
dec
aaa
sbb
mov
pop
in
dec
mov
out
mov
pop
in
es
push
test
inc
pop
pop
dec
push
cli
jb
cmpb
inc
lods
dec
in
cmp
mov
inc
adc
add
imul
divb
mov
inc
int3
ret
pop
mov
dec
add
mov
cli
sbb
add
add
mov
pxor
jnp
es
movl
add
add
xchg
adc
fisubrs
aad
sbb
daa
lods
adc
lcall
dec
aam
gs
mov
mov
xor
mov
sub
jnp
rorb
decl
es
gs
sbbb
mov
xchg
cmp
jno
in
push
imul
mov
rcrb
inc
stc
push
loopne
sbb
aas
push
mov
xor
mov
shlb
xchg
jbe
mov
fimull
adc
xchg
sbb
inc
cwtl
enter
sub
pop
lods
xlat
pop
mov
imul
mov
daa
pop
daa
stc
fstpl
gs
test
test
clc
loopne
fidivl
pushf
mov
jge
add
daa
in
lock
add
mov
les
mov
push
test
inc
into
inc
mov
test
dec
mov
push
fdivr
pop
stc
xor
out
lods
xor
aas
xlat
jns
mov
cld
sub
add
add
add
ret
enter
sahf
or
jge
cmp
lahf
int
dec
jge
jns
and
in
inc
mov
adc
sub
fdivp
pop
mov
loop
dec
std
scas
fisubrl
stc
addl
loopne
dec
mov
adc
inc
fldcw
cmpsl
int3
out
push
imul
repz
xchg
pop
or
jle
mov
jecxz
out
ss
test
add
imul
add
vsubps
cmp
push
mov
xchg
dec
dec
mov
pop
cld
xchg
push
mov
clc
sbb
cld
xchg
negl
inc
fwait
lods
or
dec
ss
popf
xor
sarl
xchg
cmp
pop
and
xchg
mov
mov
jmp
xor
or
inc
loopne
adc
adc
bnd
mov
push
ss
and
ja
aaa
inc
dec
fidivl
add
add
add
jb
scas
incb
out
dec
out
mov
add
pop
add
add
fnstcw
out
test
mov
fbstp
test
fwait
arpl
lock
imul
ja
adc
imul
push
push
mov
pop
pop
dec
repnz
push
loopne
icebp
jle
ret
stc
push
jbe
icebp
enter
scas
push
fmull
adc
shlb
cltd
cmp
shlb
insl
mov
rdmsr
pop
jge
push
jecxz
jmp
repnz
adc
rcr
pusha
jno
outsb
frstor
movsl
fsubr
fidivs
jecxz
repnz
mov
out
cmp
es
ss
insl
movsb
pop
leave
sbb
outsl
iret
inc
fmuls
jbe
adc
cmp
mov
rcl
incb
push
jecxz
pop
push
je
pop
xor
jle
out
mov
add
gs
dec
and
mov
lods
aam
cli
fs
mov
jne
inc
and
dec
bound
repnz
mov
pop
mov
mov
xlat
mov
cwtl
cmpsb
push
pushf
mov
add
pop
add
add
sti
mov
inc
jle
push
stos
add
mov
add
in
fiadds
adcb
out
mov
daa
push
jo
movsl
incl
loop
jbe
cmpsl
out
mov
xchg
cwtl
aas
cmp
inc
add
lods
add
sub
push
loop
mov
cmp
and
pop
push
iret
pop
pop
xchg
loope
imul
adc
jmp
push
aas
xor
add
mov
sbb
add
mov
lahf
inc
cmp
or
mov
cmp
icebp
sub
sbb
movsb
in
lcall
repz
mov
in
enter
push
xor
xchg
popa
ficomps
pop
stc
icebp
shrb
imul
sbb
outsl
cld
das
stos
xchg
add
lahf
or
pop
adc
mov
mov
dec
sbb
cmp
pop
aam
cmpsl
or
lcall
push
xchg
cmp
adc
push
shrl
jb
lods
cmp
lods
aas
mov
mov
fcoms
add
add
std
xor
pop
jns
out
imul
jns
push
ss
test
imul
pop
mov
and
jl
into
pop
imul
cmp
or
sub
jne
cwtl
xchg
sarl
mov
or
mov
push
je
imul
sbb
out
jne
or
and
bnd
loope
out
or
iret
push
adc
popl
orb
dec
inc
repz
mov
dec
call
mov
mov
and
popf
push
fadd
lea
push
addr16
cs
xor
cmpxchg
ret
inc
dec
xor
adc
aam
jns
loope
lock
lret
mov
out
jmp
xchg
mov
push
scas
cmp
inc
dec
int3
out
pop
shl
dec
pushf
push
gs
in
scas
dec
mov
jl
into
insb
mov
addb
and
je
fwait
lea
pop
mov
add
mov
sti
mov
lods
ljmp
pop
add
add
sub
and
push
ror
lds
insl
mov
or
shrl
dec
ss
ret
fwait
add
lret
cmpsb
daa
cmp
fadd
push
or
icebp
or
cmp
loop
es
sub
push
xor
lea
jmp
repz
ret
mulb
adc
es
cmc
add
addb
mov
das
ret
mov
and
cwtl
mov
daa
clc
adc
add
push
repnz
mov
lret
aaa
add
lods
mov
sub
adc
sub
dec
adc
mov
js
or
fnstenv
sti
mov
sbb
sbb
or
aaa
pop
push
popa
in
push
mov
shl
or
add
out
leave
dec
jp
sbb
mov
les
popf
jne
mov
add
sti
je
les
push
add
into
adc
neg
jge
mov
stc
je
pop
xchg
mov
add
add
pop
xchg
push
gs
cmc
add
nop
std
mov
in
add
add
push
xchg
jae
xor
lea
xchg
xchg
mov
int3
mov
decb
add
cli
xchg
adc
loop
movsl
icebp
pop
pop
es
sub
adcb
adc
lods
test
int3
adc
mov
cmp
cld
in
in
loop
sbb
pusha
and
dec
sub
repnz
push
aas
cmp
out
bound
or
fdivrl
mov
jmp
je
imul
or
pop
push
mov
inc
ljmp
push
cmpsb
mov
xor
push
rclb
push
xchg
pop
sar
mov
ret
and
cmp
adc
mul
mov
jge
fcoml
jns
jns
xchg
cmpsb
push
subl
loopne
mov
mov
pop
push
rcrb
add
sub
or
iret
xorl
pop
cmp
outsl
jg
jg
xor
push
int3
sahf
stos
icebp
add
pop
add
add
rcl
mov
adc
insl
jl
jae
aam
mov
mov
dec
dec
xchg
push
lahf
std
push
cmp
in
sbb
cmp
mov
mov
dec
mov
mov
lcall
dec
sti
iret
mov
push
lea
test
and
jp
adc
mov
sub
add
mov
and
mov
lock
ret
data16
mov
jne
jb
or
cmp
cmp
test
inc
cmp
std
sub
cli
out
inc
outsb
leave
sub
push
jno
inc
cmp
push
cmc
test
dec
xchg
mulb
dec
jmp
lea
ljmp
neg
pop
push
scas
mov
inc
inc
cltd
jg
cmp
xchg
push
push
insl
lcall
push
cltd
xchg
ljmp
xchg
mov
lea
ja
test
add
ja
and
aaa
divl
lret
mov
add
pop
add
add
cmp
or
lock
mov
jns
rcrl
lcall
stos
push
flds
adc
cmp
insl
and
imul
fistpll
aad
loop
out
cmp
lods
lds
cwtl
pop
jle
bound
loope
and
pop
and
or
jnp
lock
dec
sbb
loop
sbb
ds
les
or
sub
loope
adc
in
sahf
lock
mov
pop
xchg
inc
xchg
outsl
jle
jnp
jae
push
xchg
jge
jmp
jne
xchg
cltd
cmp
push
xchg
cmpsb
jnp
push
inc
adc
cs
jecxz
scas
inc
les
icebp
inc
push
and
lock
fidivrl
xor
out
dec
enter
xor
sahf
mov
lret
stc
mov
dec
and
cld
inc
scas
pop
cmpsl
lds
nop
xchg
dec
sar
std
add
ds
mov
add
add
mov
cmc
mov
push
pop
pop
jg
repz
pop
add
add
dec
lret
shrb
push
test
pop
push
ss
mov
outsl
xchg
loopne
inc
insb
mov
xchg
add
pop
jns
add
divl
cmp
mov
xor
push
adc
dec
adc
inc
push
pop
jl
sbb
les
arpl
inc
cld
xchg
xchg
ds
sbb
fldcw
pop
insb
fstps
fdivs
inc
pop
cltd
sbb
jg
or
shr
jp
insl
cltd
and
jge
mulb
fiaddl
jge
fiadds
into
cmp
mov
loop
sbb
push
add
inc
aad
scas
push
test
ja
outsb
cld
repz
mov
movsl
jp
andl
and
mov
inc
clc
mov
pop
daa
push
cli
pop
pcmpeqw
cli
add
cmp
inc
cli
xor
dec
mul
scas
stc
xorb
pop
movsl
stos
and
xchg
stos
pop
aam
add
jne
add
test
mov
add
add
or
out
mov
push
shr
les
rorb
fnstenv
sarb
sbb
data16
jbe
mov
aam
stc
push
fisubrs
inc
ret
leave
mov
dec
cltd
icebp
aas
aaa
shrl
or
mov
lock
adc
dec
and
fimuls
mov
leave
jmp
jbe
aaa
nop
testb
mov
mov
mov
pop
and
jne
lret
pop
outsl
inc
dec
out
daa
fs
int
sbb
inc
dec
aam
inc
mov
push
pusha
emms
iret
ds
cli
negb
ds
mov
inc
test
mov
movsl
popf
lret
jno
inc
cmp
ret
lods
or
cmp
mov
push
lds
icebp
or
ret
rclb
push
xor
stos
pop
xchg
cmp
adcl
xor
lcall
add
add
add
add
imulb
idivb
enter
cmc
add
pop
add
add
test
mov
mov
jo
jg
movsb
pusha
pusha
adc
popa
inc
push
pop
or
fwait
dec
mov
sarl
mov
mov
lahf
fdiv
in
jmp
jecxz
data16
lea
push
sub
xchg
dec
mov
push
mov
cli
dec
pop
xchg
pop
aad
out
add
test
or
loope
gs
mov
sub
cmc
and
shl
cmp
into
filds
cmp
les
xchg
xor
loopne
in
cvtps2pd
sahf
cmp
or
adc
mov
cmpb
adc
mov
mov
test
xchg
dec
mul
sub
ljmp
pop
or
dec
mov
push
aaa
sbb
dec
lds
cmpl
jne
xchg
movb
add
add
add
xor
sub
ljmp
add
add
inc
jp
inc
fmuls
sarb
cltd
popa
pop
orl
mov
loop
mov
mov
lret
hlt
ja
mov
xor
inc
mov
fsubs
cs
es
adc
cs
cmpb
inc
xlat
xchg
repnz
cmpsl
in
in
aam
adc
add
pop
dec
push
xchg
mov
mov
xor
jb
movsb
loop
mov
insl
jno
leave
jmp
testb
jg
lock
ret
lret
jg
add
popf
nop
cs
les
fnstenv
adc
push
cmpsl
xchg
jge
cs
loopne
sti
push
lcall
jns
cs
push
sub
sbb
test
call
inc
sbb
pop
and
and
push
ja
out
aam
nop
jne
jne
xchg
je
fsubrs
xor
dec
inc
mov
xchg
ss
add
add
add
ds
in
idivl
call
sbb
fsubrl
add
pop
add
add
pop
or
movsb
fs
cmpsl
mov
idivl
ss
xchg
cltd
aam
add
loope
or
inc
inc
int
push
sbbb
mov
xorb
mov
into
pop
jnp
xchg
dec
sbb
aas
in
shll
jge
pop
test
test
push
std
bound
popa
cmc
mov
popa
sbb
mov
test
test
fsubrs
cld
stos
loopne
and
sub
mov
in
xor
subl
repnz
repz
test
and
movsl
addr16
adc
fildll
cmp
lea
sbb
pop
xorl
sti
adc
jmp
inc
push
adc
mov
int3
inc
pop
fs
in
out
fldt
into
inc
outsl
mov
movl
fisttpll
pop
es
inc
cli
aas
clc
fdiv
jne
rclb
clc
add
pop
add
add
data16
es
out
test
hlt
inc
dec
cmp
cwtl
push
lods
xchg
xor
enter
xor
gs
aad
add
inc
jl
ds
int3
or
mov
inc
daa
cld
stos
fstps
and
jle
imul
into
xchg
or
popa
ficoml
push
lock
cmpsb
mov
jmp
in
add
or
mov
fidivs
or
add
adc
pop
jg
cltd
adc
lods
shll
xchg
loope
test
aas
scas
jmp
data16
mov
cmpsl
xchg
xchg
cld
cmp
xchg
pop
aas
iret
xchg
lahf
je
push
aad
ret
mov
cld
divb
push
pushf
in
cmp
adc
neg
mov
fwait
dec
mov
mov
dec
inc
rorb
xchg
pop
pop
xor
sarl
mov
adc
cwtl
sub
loope
aad
fmul
mov
daa
sbb
pop
cmpsl
out
shrl
add
add
lcall
in
addl
loop
add
pop
add
add
jns
out
sbb
adc
lds
sti
fs
sarb
push
popf
or
iret
insb
sub
push
jmp
and
arpl
push
mov
adc
imul
cmp
cmc
cmp
rcll
jg
push
inc
daa
pushf
into
or
xchg
inc
fiadds
loopne
xor
mov
fsubrl
mov
push
inc
cmc
popf
mov
fs
andb
dec
push
mov
in
mov
call
scas
in
fisttps
add
movsb
std
and
push
mov
popf
pusha
fidivs
fisttpll
fnstsw
leave
adc
orl
rcrb
ret
mov
cwtl
jg
cld
inc
add
pushf
fnstcw
shlb
jnp
out
out
and
jp
mov
xor
sbb
xchg
inc
and
mov
lret
insl
xchg
add
jae
cltd
dec
mov
jge
ret
imul
cli
add
pop
add
add
cwtl
cmp
cmc
pop
gs
xor
in
xchg
ffreep
mov
sub
push
inc
bound
dec
sub
mov
shll
jge
cwtl
insl
bound
out
iret
cmp
mov
cmp
mov
xchg
sarb
lret
rdmsr
pusha
mov
out
add
pop
popf
sarb
sbb
pop
pop
dec
xchg
jne
pop
push
inc
inc
xchg
fisttpll
nop
cmp
adc
jno
sbb
add
push
cmpsb
sbb
in
xchg
jmp
jns,pt
lcall
push
es
adc
xor
xchg
out
inc
add
push
cwtl
aaa
mov
movsl
fldcw
cmc
jo
loopne
fiaddl
int
loopne
push
cmp
movsl
cli
movsb
cld
pop
imul
repz
bound
mov
mov
pushf
pop
or
sti
lret
cld
pusha
jg,pn
lds
cmp
and
add
push
into
nop
out
cwtl
jle
pop
or
mov
add
pop
add
add
call
add
stos
out
or
xchg
push
xchg
mov
inc
popa
inc
push
into
push
out
pushf
in
sub
mov
into
sub
ja
cmpsb
and
push
int
int
inc
pop
jb
clc
pusha
cmpsl
frstor
insl
out
std
lret
push
movsb
push
pop
cmp
adc
leave
mov
mov
dec
sti
push
into
and
and
inc
jae
hlt
push
xor
sbb
push
aas
xchg
ret
sarl
test
inc
pop
nop
pop
out
sbb
xchg
lods
adc
mov
adc
add
jle
dec
loop
sti
xor
sub
add
adc
mov
clc
or
into
pop
inc
adc
jle
push
cmpsl
ss
xchg
rcll
adc
je,pn
enter
jge
jmp
fwait
xor
ret
test
mov
pusha
push
nop
xchg
and
notl
scas
sahf
sub
pop
lods
sub
lds
in
daa
iret
add
test
jg
in
jmp
push
jge
or
cld
add
pop
add
add
movsb
sbb
pop
jmp
std
shl
hlt
loope
addr16
push
sub
mov
int3
shll
aam
test
aad
xchg
stos
xor
pop
fadds
push
lahf
jle
sahf
add
shll
subl
inc
cli
mov
mov
loope
test
pop
clc
je
iret
add
out
pop
sbb
xor
jp
mov
adc
and
xchg
test
mov
add
fsubrl
sti
jmp
loop
push
xchg
sub
sbb
or
push
push
push
lods
push
or
push
sbb
push
jne
xchg
push
popa
out
aad
sarl
mov
mov
add
push
dec
ficompl
loop
out
lock
xchg
cmpsb
mov
mov
jb
sub
sub
xchg
into
add
push
jl
add
int3
sarb
popa
inc
add
movsb
push
in
cmc
jne
rorl
out
std
add
pop
add
add
push
inc
test
aam
movsl
gs
repnz
cmp
icebp
pop
std
push
sub
xor
outsl
cltd
scas
xchg
arpl
sbb
sbb
inc
aaa
ja
popf
mov
dec
icebp
imul
sbb
jp
cwtl
lret
in
push
pop
jno
aad
test
cmp
call
jle
and
or
add
sbbl
xchg
cmp
mov
aam
popf
out
out
sub
xor
sub
xchg
test
jns
push
daa
mov
xchg
test
jne
insb
shlb
es
lahf
pop
addb
mov
sbb
in
imul
pop
lahf
icebp
mov
test
sahf
and
mov
pop
jo
pop
sub
xor
and
adc
mov
cmp
adc
sti
jb
popa
jo
pop
outsb
dec
add
and
push
lea
mov
push
push
add
out
shlb
aas
out
sbb
movsb
xor
loope
incl
add
add
add
bound
mov
pop
inc
fsubl
and
mov
mov
testl
mov
cmp
in
je
ss
js
and
xlat
mov
dec
repnz
push
push
pop
cld
xchg
pop
add
and
fsubr
and
cmc
adc
push
mov
push
lods
jg
cmc
stos
clc
sti
xor
push
call
xor
addb
lcall
mov
pop
jnp
leave
push
sbb
adc
test
inc
pop
adc
ds
jmp
sti
mov
mov
lods
sti
mull
cmpb
mov
xor
shl
push
mov
xchg
stc
pop
sub
push
popf
in
and
mov
jp
nop
aam
dec
pop
and
aaa
pushf
cwtl
icebp
movb
lock
cld
dec
hlt
adc
sub
inc
dec
push
movq
test
xor
or
mov
sahf
stc
test
rorb
add
pop
add
add
cli
mov
out
inc
cmp
adc
push
fdivrp
inc
cmpsl
sbb
insl
lahf
lods
lods
insb
or
in
push
mov
push
rorb
js
mov
inc
xor
aaa
jbe
mov
adc
jecxz
cli
or
mov
xchg
movsl
roll
or
ss
arpl
cmp
ret
mov
cmpsb
hlt
fwait
push
cmp
xlat
movsl
lret
shll
dec
stc
out
mov
je
xchg
cmc
add
mov
push
jmp
xor
push
data16
cmp
rolb
mov
sub
sub
cmp
cwtl
cmp
in
mov
adc
fnsave
mov
imul
movsl
sub
loopne
jno
out
cli
leave
cli
inc
sbbb
adc
lods
xor
andl
insl
xor
cmc
push
fcmovnu
push
iret
cmp
lds
shll
xor
dec
rol
lret
clc
int3
jae
adc
sbb
add
add
add
insb
sbb
loopne
or
aad
pop
push
test
lret
add
ffree
pop
ljmp
adc
cld
pop
ror
aad
daa
outsl
mov
jge
dec
out
das
hlt
xchg
xorl
sub
mov
lods
jno
mov
je
ret
mov
push
or
imul
lea
stos
adc
outsb
jecxz
jp
jne
fld
or
sbb
add
dec
imul
xor
mov
test
xor
mov
mov
xlat
add
dec
addb
xor
mov
xchg
mov
jge
mov
and
inc
push
mov
icebp
xchg
adc
push
xor
pop
rclb
mov
and
xchg
sub
or
je
in
sub
inc
sub
push
rcrl
insb
ds
inc
add
inc
add
sub
push
pusha
sbb
sub
ret
mov
mov
add
add
std
aaa
mov
mov
mov
add
add
mov
cmp
outsl
adc
cmp
outsb
movsb
cmp
xchg
sti
xchg
and
mov
fwait
sbb
ds
push
aaa
in
popf
aam
fs
imul
dec
pusha
das
cmpsl
rcll
jo
mov
test
dec
push
rcll
aas
add
push
pop
movsl
mov
not
and
pop
popa
notb
add
rcrl
sub
enter
mov
ficoms
cwtl
leave
cmp
movsb
xlat
push
add
mov
jecxz
aas
shll
loopne
xchg
mov
cmp
aam
int
pop
sbb
pop
fnstcw
pop
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
xor
inc
add
xor
inc
add
xor
inc
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
das
sbb
lods
fsubs
adc
add
dec
cmp
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
