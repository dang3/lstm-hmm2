add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
push
xchg
jle
jle
fidivrl
jle
cmp
fld
ja
or
mov
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
add
push
sbb
jmp
mov
or
loopne
lds
inc
jl
pop
sbb
fwait
lds
mov
in
gs
ja
or
cmc
mov
stc
mov
cmp
adc
adc
fdivrl
incl
mov
mov
xor
dec
popf
out
xchg
sub
push
repz
mov
les
loopne
inc
jecxz
lret
xor
loop
mov
fnsave
push
cmpsb
mov
mov
pusha
lds
jns
and
jle
outsb
dec
hlt
jp
xchg
mov
lock
sbb
jle
jge
cmp
movsb
jmp
mov
dec
adcb
test
sbb
push
jle
add
movb
lret
xor
add
add
adc
and
scas
pop
stos
stc
add
jg
jle
jg
jle
pop
test
mov
lea
add
push
xlat
pop
fwait
or
mov
shll
lret
lcall
iret
ficoml
and
aas
test
sub
push
push
in
loopne
fwait
sub
inc
es
push
insb
inc
mov
push
and
clc
int3
mov
xchg
mov
mov
aad
adc
ja
mov
dec
mov
dec
xchg
mov
inc
mov
pushf
sahf
jmp
push
ljmp
movsb
leave
sbb
pop
clc
add
stc
cltd
cld
scas
icebp
cmp
inc
jbe
into
pop
fisttpl
dec
cmp
mov
xor
xchg
mov
fidivrl
loop
std
imul
lods
xor
int3
iret
lret
mov
dec
sbb
adc
fistps
addr16
pushl
aaa
sub
cmp
jle
aaa
iret
int3
jmp
test
cmp
das
fbld
fs
xchg
jb
outsl
fcom
scas
fucom
xor
jmp
ret
sub
orb
inc
hlt
nop
xor
or
xchg
sahf
das
sbb
sub
or
mov
xchg
xchg
int3
add
xor
popa
clc
xchg
rcl
pop
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
sub
push
shll
jg
jle
cmpsb
add
adc
cli
pusha
adc
loop
inc
xchg
jmp
pop
or
xchg
or
push
outsl
dec
movsl
in
add
mov
pop
gs
idivb
xchg
popa
and
jo
cmp
cwtl
cmc
xchg
stc
cmc
divb
adc
pop
test
inc
adc
inc
push
adc
push
pop
fistpl
pop
call
push
mov
and
sbb
fdivs
push
or
arpl
out
pop
pop
loop
hlt
xchg
das
mov
jmp
lret
out
sub
jnp
pusha
lods
mov
aam
jne
and
adc
ljmp
lcall
andl
jle
rcrb
cmp
xor
adc
mov
or
aas
xchg
mov
lret
fdiv
xchg
shl
lds
adc
cmpsb
or
clc
das
ljmp
cltd
sub
sbb
push
xor
xlat
sti
mov
icebp
push
and
cmp
pop
push
pop
xor
pop
sub
test
pop
in
outsb
add
outsl
fdivrs
loop
loop
lahf
test
or
out
incl
jno
xlat
sub
sbb
lods
fidivs
rcl
xorl
inc
cmp
stos
push
mov
pop
xchg
mov
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
or
sahf
add
jle
jg
jle
mov
addr16
push
add
in
dec
sub
jl
lret
xchg
cmp
imul
sub
sbb
xor
jbe
mov
in
shll
cwtl
jmp
imul
inc
imul
mov
into
inc
xchg
lcall
jl
pop
jno
jge
mov
dec
xchg
lcall
and
inc
pusha
outsb
addl
ss
jne
xlat
mov
mov
and
and
loopne
outsb
inc
in
adc
jo
cmp
and
nopl
mov
ret
mov
or
hlt
out
cmp
adc
mov
dec
fstp
notrack
mov
sbb
jno
or
shll
cmp
push
js
rorb
and
lock
inc
and
push
mov
std
inc
ljmp
mov
push
push
jmp
sub
jo
jmp
mov
mov
dec
pop
push
in
mov
psubusw
xor
or
xchg
scas
push
leave
push
lahf
mov
addr16
cmp
and
in
lcall
and
test
hlt
sub
sub
aas
push
cmp
repz
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
or
sbb
movsb
xchg
movsl
or
jg
outsl
xchg
ja
xchg
xor
mov
aaa
inc
and
mov
outsl
push
fldl
fwait
xchg
shrb
pop
inc
shll
inc
outsl
inc
push
xor
cmp
clc
jb
cltd
or
cltd
add
aaa
add
outsb
adc
xor
dec
scas
rcrb
and
inc
filds
mov
xor
cwtl
sti
popa
incb
enter
xchg
inc
push
adc
push
xor
pushf
pop
fists
addb
pop
test
imul
sahf
xchg
mov
sbb
std
sarb
mov
sarl
bswap
pop
xor
mov
cmpsb
mov
add
jno
or
sti
gs
lea
jp
iret
push
cld
xchg
mov
int
jae
imul
push
jp
jmp
stc
fstpt
stc
outsb
sbbb
push
outsl
fwait
xchg
jb
mov
jnp
imul
in
adc
xchg
scas
mov
mov
lods
aad
ljmp
add
lds
sahf
stos
into
jge
cmp
arpl
iret
mov
lods
push
xor
dec
imul
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
xchg
negl
fidivrl
jle
sbb
lret
add
in
ret
aas
inc
push
push
xchg
dec
and
ficoml
jmp
dec
adc
jle
mov
icebp
mov
add
jmp
lock
mov
dec
loop
clc
inc
movsb
mov
push
sub
sbb
cltd
pop
xor
or
sub
and
jl
ret
loope
push
sbb
sbbb
out
dec
add
imul
imul
ss
mov
jns
scas
pusha
shll
call
icebp
mov
sub
mov
add
hlt
lret
sbb
mov
nop
enter
add
sub
lea
or
or
jle
lahf
cmc
scas
outsl
loopne
add
inc
inc
loopne
jl
outsb
shlb
add
jmp
jno
dec
je
mov
sar
cwtl
xor
jmp
test
popa
dec
sub
dec
ret
jle
jp
pop
fnsave
outsl
mov
lret
push
pop
inc
and
lret
outsb
pop
adc
add
in
arpl
add
popf
cmp
jecxz
pop
push
cmp
in
int3
test
add
dec
outsb
push
insb
xchg
xor
cs
jno
aas
cmpsb
lcall
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
hlt
ds
jle
jg
jle
jle
xor
and
aad
lock
lret
test
adc
fwait
inc
sbb
movsb
outsl
sub
test
insb
push
roll
sub
pop
pushf
insl
fldcw
dec
mov
dec
shlb
jecxz
movsb
hlt
sbb
sub
mov
lcall
shlb
jno
aam
shrb
sar
mov
pop
inc
js
cmpsb
dec
mov
subb
mov
nop
pop
jne
shr
and
scas
xchg
jl
dec
aas
push
fidivrs
pop
fsqrt
ja
mov
push
aam
inc
cmp
add
inc
cli
inc
pop
mov
rolb
mov
cmp
inc
scas
jno
sarl
or
push
cwtl
ja
cwtl
add
mov
push
mov
ret
push
iret
push
sbb
sbb
fistl
ja
add
call
out
add
xor
adcl
addr16
mov
repz
xchg
or
xorb
cmpsl
outsl
mov
in
xor
adcb
pop
pushf
jg
les
dec
cld
push
repnz
push
popf
mov
push
scas
das
jmp
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
cmpsl
xor
jg
jle
js
push
cwtl
fnsave
ljmp
cmp
in
and
xor
aam
cmp
jle
adc
or
js
lods
dec
and
ljmp
scas
sbb
cmp
sbb
test
dec
shr
stos
pop
nop
scas
push
sahf
in
push
xchg
xor
stos
int3
arpl
xchg
xor
into
bound
fdivp
inc
and
push
test
lea
mov
dec
repnz
ss
pop
add
lods
das
or
mov
mov
loop
sti
fwait
dec
dec
dec
cmp
aad
mov
xlat
xchg
xor
xchg
jge
std
repz
lret
and
and
jbe
dec
ljmp
add
roll
test
pushf
icebp
push
test
dec
and
lds
cs
jl
lds
pusha
sbb
pop
sahf
andb
mov
push
repnz
jp
mov
push
daa
push
xchg
movsl
pop
push
stc
or
into
test
cli
adc
out
mov
das
stc
push
jp
add
xor
mov
movsb
xor
mov
pop
xchg
xchg
cld
sbb
out
inc
xor
mov
push
jle
arpl
push
cs
insl
adc
adc
jg
sbb
dec
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
pushf
enter
jle
fidivrl
jle
sub
leavew
or
add
mov
push
repnz
arpl
jl
lret
movsl
xor
cmp
xchg
push
addl
add
out
and
icebp
mov
andl
mov
jb
push
js
testb
cmp
dec
fucomi
bound
out
lock
and
insl
rolb
push
cli
and
or
mov
sbb
into
cmp
iret
insl
xor
push
mov
sub
cmpsb
mov
add
cs
lahf
add
cltd
xchg
xor
cmpsl
sbb
shr
test
rolb
lods
or
mov
or
adc
or
dec
cltd
and
mov
pop
mov
data16
xchg
push
sti
sub
mulb
cmpb
cmpsl
inc
xlat
mov
into
ror
data16
push
xchg
data16
jne
cmp
pop
out
nop
xchg
daa
fdivr
adc
aaa
fstpl
mov
cmpsb
and
cwtl
jbe
out
adc
mov
sbb
testl
xchg
jb
mov
aad
arpl
notb
ret
jo
test
fstpt
aad
pop
mov
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
scas
shlb
cmpl
jg
jle
push
neg
inc
push
pop
xor
pop
cld
jae
and
mov
and
push
andb
add
ss
clc
mov
jnp
push
push
push
push
jl
rcll
sub
xor
jecxz
loopne
test
add
mov
sarl
mov
dec
loop
loop
add
ret
sub
fisubrl
jge
popa
or
mov
enter
outsl
cs
data16
shrl
sbb
xchg
xchg
dec
or
sbb
mov
xchg
sub
lea
adc
lcall
loop
call
adc
lods
mov
test
push
push
das
daa
pop
or
call
adcl
arpl
inc
mov
movsl
rcrl
adc
lcall
out
dec
subb
mov
orl
dec
imul
ss
dec
test
sbb
push
mov
aaa
xchg
push
test
cld
jnp
sub
adc
xorb
fnstcw
and
xor
pop
sub
out
mov
adc
sbb
sub
xorps
lret
arpl
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
mov
ds
xchg
jle
and
jle
cmp
push
pop
adc
mov
test
adc
xchg
int3
cmp
lret
stos
or
out
jp
push
add
subb
add
add
in
fildll
sub
pop
dec
inc
xchg
subl
and
out
mov
rcrl
xor
fidivrl
pxor
jge
add
mov
popa
jo
fsubrl
repz
push
push
or
in
push
daa
mov
xor
pop
addr16
movb
std
inc
lret
js
mov
in
jns
jge
cmp
cmp
jno
mov
test
cmpsb
jno
xorl
jl
pop
cmpl
roll
inc
xchg
inc
rcrb
adc
aas
outsl
add
sets
mov
push
and
push
push
mov
test
aas
cmp
xchg
in
xor
sub
fidivl
lods
pop
xchg
out
and
pop
dec
js
ud0
popf
in
adc
jecxz
leave
into
lock
cmp
imul
xor
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
or
and
jle
xchg
test
cmp
dec
jbe
je
dec
rorl
shlb
jb
mov
cmp
cld
xchg
lret
inc
fidivrl
fucomp
push
ficompl
leave
or
cmp
leave
pop
insl
push
lret
mov
add
aam
push
cmpsl
and
out
inc
addr16
lret
std
dec
adc
mov
popf
jnp
cmp
and
es
orb
jo
mov
add
push
pop
in
xor
rorb
int
imul
mov
or
mov
lock
testb
lea
sub
mov
xchg
and
movsl
test
sub
xchg
ret
inc
scas
dec
ss
ss
and
sub
xchg
mov
iret
inc
and
out
rcr
cmp
in
mov
imul
jle
subb
mov
icebp
inc
imul
xchg
fnstsw
xor
roll
xchg
pop
xor
push
call
mov
push
push
xchg
fs
add
les
aam
push
pusha
iret
inc
push
cmp
cld
xor
dec
or
mov
inc
jmp
or
mov
or
std
test
cmpsb
jl
jle
and
jle
xor
loop
inc
mov
xchg
pushf
inc
and
jbe
xchg
in
mov
adc
sub
and
add
inc
xor
xor
shrb
negl
mov
jns
xchg
fisubl
lahf
popf
mov
bound
pop
scas
mov
cmp
mov
xlat
int
aad
xor
data16
mov
out
mov
lcall
cmp
adc
jecxz
js
ret
mov
rcll
add
fcomps
mov
shrb
dec
shrl
or
mov
jno
lret
hlt
test
je
mov
mov
cmc
daa
cmp
sbb
and
pop
fcmovb
fistpll
sbb
sarb
outsb
dec
sub
lock
cs
lcall
fcmove
mov
xchg
aad
bnd
sub
std
call
lea
aaa
enter
jl
jmp
jecxz
push
add
stos
mov
add
add
popa
mov
sub
push
addr16
negl
rcll
pusha
outsb
sub
lcall
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
enter
jle
and
jle
loopne
shll
push
mov
push
lcall
jmp
hlt
jp
cmp
aaa
sub
ds
dec
and
adc
mov
stc
push
adc
loopne
fidivrs
test
xor
test
push
in
in
repz
and
loopne
cmp
mov
fwait
les
in
jno
mov
sub
xor
fnsave
jmp
sarb
jle
mov
xchg
shlb
mov
mov
movsl
shl
sbb
mov
adc
mov
xor
pop
xchg
lahf
outsb
mov
out
cli
jmp
in
and
push
mov
jle
jae
jno
jae
xor
pop
add
fsubr
xchg
push
cmc
sti
sub
test
add
mov
add
mov
mov
adc
lods
mov
idivb
sbb
pop
mov
fisubrs
fs
mov
mov
xchg
mov
fildl
pushf
stc
imul
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
cwtl
shlb
imul
fs
pop
iret
in
in
sbb
adc
sbb
push
ret
push
pusha
pop
mov
cltd
xor
add
out
xor
mov
scas
rcrb
sbb
pop
inc
xorl
sarb
testl
out
cmp
jo
push
push
fwait
lods
inc
ret
mov
or
cmpl
cmp
pop
imul
aas
rcl
in
sbb
and
shll
lea
cmpsb
movsb
movl
mov
adc
arpl
adc
mov
jns
jge
xor
lock
roll
aad
xchg
sub
inc
iret
xchg
push
add
arpl
rcrl
dec
lock
fistps
xor
mov
aad
gs
fcmovnbe
icebp
jne
push
xlat
bound
pop
sahf
mov
gs
sbb
xor
popf
mov
add
imul
mov
jmp
jbe
xchg
call
adc
dec
out
or
jle
and
xlat
jbe
sbb
call
shrl
cs
pop
movsl
test
xchg
jmp
lods
call
iret
mov
loop
rorb
sub
clc
mov
repnz
or
jb
inc
adc
fdivl
and
and
mov
insb
mov
imul
push
out
add
leave
push
dec
xchg
lret
repz
sbb
fidivrl
mov
jns
adc
mov
fildl
xchg
xchg
jmp
roll
cmp
out
mov
cs
sbb
push
cmpsl
in
test
add
xchg
pop
es
adc
sahf
arpl
pop
or
daa
cmpsb
cltd
jp
dec
pop
repnz
lret
or
leave
enter
inc
fiadds
loope
push
dec
lds
lock
push
push
cmp
fcomp
mov
inc
inc
cmp
mov
xor
lret
leave
xchg
jecxz
jle
rcll
cmpsb
and
ds
scas
jns
shl
mov
xor
rcrl
lret
scas
test
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
xlat
cld
jnp
inc
add
and
jle
gs
lds
pop
dec
fnstcw
adc
inc
mov
fucom
xchg
outsl
bound
ljmp
int3
out
mov
es
scas
push
cmp
jp
pop
push
dec
je
xor
aas
jne
pop
push
inc
push
cmp
or
loope
cli
imul
dec
xor
mov
mov
popa
sti
cld
std
sbb
aad
or
clc
mov
jno
divb
movsl
int3
mov
pop
push
xchg
aam
xor
inc
and
xchg
in
cld
ret
lret
loopne
xor
ret
data16
aam
rorl
jnp
orl
fwait
mov
inc
pop
inc
mov
pop
int
outsl
cld
cli
cmp
push
int3
stos
jb
orb
inc
add
lret
icebp
gs
int
lea
cltd
xchg
xchg
adcb
subb
sub
lret
inc
jne
xchg
popa
out
test
ja
adc
jge
adc
aas
movsb
sub
sar
out
mov
mov
imul
sbb
rorb
es
subb
imul
jns
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
xchg
push
gs
jle
and
jle
push
leave
dec
push
stos
ljmp
pop
dec
andl
std
pop
aad
add
add
ja
imull
lret
daa
push
push
add
iret
into
imul
int
pop
xlat
pusha
cmp
jo
addr16
and
mov
jnp
scas
dec
cmp
pop
xor
jbe
div
push
dec
sub
fsubrl
les
lods
fmul
data16
jne
mov
and
roll
imul
xchg
cli
stc
xchg
jne
push
or
mov
cmp
and
mov
dec
jb
test
hlt
shl
sbb
fisttpl
lods
bound
cmp
mov
int3
pop
sbb
or
push
cld
inc
mov
leave
jg
cli
in
hlt
cli
mov
push
fwait
inc
bound
negb
andb
add
xchg
insb
sarl
fsubrs
cmpsl
and
in
out
inc
pop
pusha
sub
pop
adc
push
sbb
pusha
dec
fisubrs
dec
add
addr16
pop
pop
add
inc
insl
jmp
cmp
pop
sub
lods
test
fwait
mov
xor
aad
out
jno
inc
xor
jmp
int
mov
stc
repnz
fmuls
and
jle
xor
cmp
dec
enter
jne
pop
dec
js
inc
jl
dec
or
or
aaa
pop
fbstp
mov
sbb
cli
fildl
inc
movsl
cmpsb
popf
mov
in
stc
pop
roll
std
jbe
movsl
cmpsb
fldt
sub
mov
test
mov
adc
mov
jne
test
shlb
loopne
pop
pop
sub
jmp
ret
aaa
dec
pusha
cmp
or
pop
cmp
or
mov
nop
loope
dec
mov
loope
jg
das
out
dec
or
and
cld
lretw
scas
fsubrl
test
out
mov
pop
shlb
adc
sub
and
cmp
insl
js
popa
loop
add
sub
gs
das
out
push
popf
nop
in
dec
sbb
mov
aad
cmc
dec
outsb
pop
sub
pop
cmpsl
adc
push
dec
cmp
or
inc
xchg
jle
loop
sub
inc
dec
fs
add
dec
popf
and
push
add
std
pusha
sub
mov
imul
mov
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
scas
jle
xchg
aam
lcall
dec
sbb
jo
mov
jns
test
test
push
adc
inc
add
je
push
addr16
xchg
inc
sahf
cmp
lds
fldl
add
mov
bound
sbbl
pop
call
cmp
cmpl
jns
ret
sarl
mov
or
enter
xchg
inc
rolb
pop
mov
add
pop
jne
push
out
cmpsl
mov
jae
jbe
mov
mov
fbstp
add
pop
cmp
imul
push
in
lea
or
outsb
pop
pop
push
hlt
adc
mov
data16
mov
push
shl
mov
movsb
xchg
movsb
mov
jae
loope
push
std
pop
andb
dec
loope
mov
sbb
lret
ja
test
xlat
pushf
rclb
cwtl
inc
in
sbb
sub
jb
jae
icebp
xor
sub
insb
aam
jo
jns
mov
and
lret
sbb
addb
in
xchg
cmp
push
or
hlt
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
cmp
jle
and
jle
popf
out
cmpsb
test
add
push
call
outsb
popa
fildl
dec
or
fwait
push
or
mov
movsl
sub
jns
cld
in
jl
sarl
test
inc
push
and
mov
stos
pop
pop
jle
xchg
dec
in
stc
pop
sub
mov
pop
fadds
outsl
mov
cmp
aam
cmp
mov
shlb
cmpsb
fcmovnbe
mov
xchg
pop
pop
mov
dec
ret
adc
push
gs
test
add
pop
jge
mov
lods
add
daa
adcl
rolb
mov
in
sub
sbb
out
or
mov
scas
fwait
push
cmc
mov
inc
mov
xchg
mov
fbstp
jb
scas
stc
mov
add
cli
fcoml
rorl
or
ret
stos
xchg
jg
mov
xchg
fdivr
lret
cld
cmp
sbb
scas
ja
xchg
xchg
outsl
inc
xlat
jbe
jae
dec
cmpsb
clc
mov
scas
mov
and
mov
int3
test
inc
test
test
xchg
pop
lahf
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
pusha
scas
pop
add
jle
jg
jle
mov
daa
rol
inc
fsubrl
push
xor
dec
add
sub
ficomps
outsb
call
inc
dec
cld
or
dec
jg
repz
xchg
data16
enter
mov
sub
fdiv
imul
xor
and
mov
jne
shrl
loop
inc
push
xor
das
mov
adc
xchg
xchg
mov
jns
mov
ds
gs
mov
sub
rorl
xor
push
mov
mov
adc
sbb
push
sahf
jp
mov
jmp
adc
sahf
sahf
pushf
cmpsl
xor
mov
femms
pop
fnsave
jnp
push
lahf
in
mov
ja
mov
sub
jne
daa
jne
popa
inc
icebp
fs
lret
repz
dec
scas
xchg
and
xor
and
add
std
mov
fcmove
in
jbe
out
or
aad
push
jg
sub
inc
sbb
rolb
outsb
mov
cwtl
sbb
xchg
sbb
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
or
jge
add
jle
and
jle
xor
mov
xor
test
push
iret
cmp
lock
stc
js
pop
subl
xchg
mov
cmp
xor
je
and
aam
xorb
lods
loope
dec
pop
rcrl
add
scas
test
clc
cmpsl
fnstenv
cmp
loop
pop
clc
fistpl
xrelease
pop
or
xor
adc
sahf
scas
lods
cmp
dec
outsl
test
sub
cli
xor
jp
mov
jle
aas
lret
add
pop
sarb
add
push
jbe
fwait
data16
dec
lds
cmp
fldt
mov
sbb
add
fxch
jnp
sub
xchg
repz
das
mov
cmpsl
loope
push
test
aaa
cli
test
and
pop
adcb
idiv
jno
pop
or
add
movsl
pop
mov
mov
arpl
add
pop
jne
sbb
inc
dec
xlat
mov
mov
in
fidivl
jecxz
pusha
icebp
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
mov
cmp
sbb
and
jle
jbe
cld
aam
arpl
mov
xchg
jne
fnsave
rcr
or
dec
mov
cmpsb
push
lock
jae
and
inc
push
add
mov
fwait
push
sub
outsb
mov
cltd
lods
pop
push
call
dec
and
insb
xor
dec
mov
sbb
jns
inc
ret
sub
sbb
mov
push
add
fstps
mov
andb
push
and
int3
jle
add
ja
mov
xchg
xchg
ja
push
shl
adc
les
repz
ret
test
add
sbb
mov
iret
pusha
xchg
xchg
repz
ds
mov
divl
mov
popf
xchg
fdivl
mov
fstpt
adc
mov
lods
ds
loop
xchg
nop
outsb
pop
loop
lcall
sbb
xchg
pop
inc
sbb
packuswb
call
sti
and
push
shll
pop
cmp
ror
pop
es
bound
push
cmc
movsb
sbb
jle
adc
jne
daa
sbb
cmp
loope
xor
movsl
xor
inc
push
adc
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
lods
popf
clc
sbb
and
jle
mov
outsl
jnp
cld
loop
push
xchg
mov
cli
jmp
add
je
sbb
cwtl
push
mov
sbb
insl
add
and
push
jge
aas
insl
data16
rcl
pop
lcall
push
in
sbb
sbb
mov
jg
xor
addb
mov
mov
adc
xor
and
lock
sarl
add
xchg
aam
inc
xor
push
mov
test
jle
into
js
or
sti
cmpsb
into
int
push
mov
popf
movsl
push
inc
jg
push
cmp
sub
sbb
cld
lret
dec
aad
fbld
add
push
popa
inc
idivb
imul
jno
dec
inc
or
cmp
mov
sub
call
popf
xor
push
bound
cld
xchg
rcrb
jns
mov
push
or
or
mov
or
pushf
loop
mov
cmpsb
test
test
stos
push
xchg
gs
jno
nop
repz
lds
cmpl
ret
push
mov
jmp
jb
test
adc
xchg
inc
lods
sbb
jmp
pop
and
and
loope
das
xchg
pop
jbe
dec
push
pop
cld
rcr
push
push
cmp
jge
adcb
jl
mov
jb
xchg
dec
imul
xorb
ja
lea
in
mov
cmp
icebp
pop
arpl
jno
mov
movsl
adc
out
mov
and
arpl
aas
pop
jmp
push
jp
adc
in
push
push
jns
mov
cltd
js
jmp
add
clc
sbb
imul
mov
cmp
out
add
stos
roll
push
sbb
inc
jno
scas
push
jmp
and
adc
mov
incb
ds
out
xchg
repnz
les
bound
fld
and
push
xchg
xchg
adc
mov
dec
mov
js
inc
stos
sub
adc
stc
ds
mov
testl
mov
mov
shrl
mov
dec
mov
cmpsb
push
mov
nop
scas
aam
clc
ss
lock
out
movsb
and
push
sub
dec
and
inc
sahf
cmp
fmuls
pop
xchg
arpl
mov
jbe
movsb
cmpl
ficomps
ds
stc
sbb
negl
push
outsl
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
stc
bound
sbb
jle
jmp
push
mov
lods
clc
sbb
negb
mov
scas
mov
aam
xchg
mov
xor
add
or
mov
call
jo
movsl
or
and
gs
sahf
push
orb
cmc
and
cltd
out
xor
aas
addr16
jnp
sub
or
pop
repnz
fwait
xor
push
icebp
je
dec
xlat
mov
movsl
sub
repnz
sub
xor
repnz
sbb
fisttps
cmp
jae
push
cmp
clc
inc
iret
jl
sti
lahf
and
add
and
dec
test
dec
in
repz
hlt
dec
xor
jge
sbbb
mov
pop
adc
fs
cmp
shr
cmp
push
mov
int3
add
sub
gs
push
das
pop
test
cmp
push
pop
fsubr
or
jnp
dec
out
cmp
adc
fsubl
pop
mov
ror
push
in
dec
mov
sub
cli
pop
aad
out
sub
mov
mov
or
ljmp
pop
mov
inc
popa
pusha
adc
fs
popf
leave
in
mov
or
insl
adc
pop
adc
jne
sub
dec
test
frstor
call
ljmp
cli
jbe
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
test
ret
xchg
and
adcb
out
leave
mov
jecxz,pt
lret
shlb
jae
out
adc
aad
sti
and
int3
in
leave
jo
mov
xor
push
add
xor
ss
mov
mov
scas
ljmp
cmp
mov
jb
aad
int3
sbb
adc
push
or
mov
cmpsl
sbb
into
lods
push
sahf
loopne
and
pop
mov
jns
sub
pop
dec
std
inc
push
js
jmp
pop
roll
cmpsb
push
fwait
movsb
cmp
pusha
push
cmpsl
xor
mov
add
sbb
loopne
mov
inc
xor
int3
loope
mov
and
fcom
xor
cmpsb
scas
shlb
pop
cmp
negb
or
mov
lods
std
mov
mov
push
push
imull
dec
xor
cmp
push
sti
push
mov
insl
mov
pushf
push
jnp
lahf
arpl
jo
push
mov
jns
adc
add
fwait
cltd
add
insb
sarl
jl
ret
push
mov
cmp
imul
sti
sar
jnp
cltd
push
jbe
xor
inc
jl
fsubr
jbe
stos
sbb
insl
push
arpl
mov
stc
cmp
insl
sub
popf
fcmovb
repz
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
push
xchg
jle
jle
jmp
jnp
xor
mov
call
mov
and
inc
lret
push
dec
push
sub
add
sahf
mov
mov
jbe
std
mov
xchg
inc
dec
out
in
fs
fwait
or
push
mov
in
xchg
cltd
call
jge
inc
imul
ret
repnz
adcl
pushf
xchg
pop
out
mov
test
or
mov
in
cltd
fs
popa
and
jmp
cmpsl
leave
push
jnp
sbb
sub
enter
mov
push
call
scas
in
push
pop
cmp
inc
dec
dec
xorb
add
cmp
pop
lods
sub
out
adc
inc
pop
je
pop
clc
mov
dec
scas
rorl
mov
inc
test
xor
jns
lret
sub
scas
pop
lret
cmpsl
adc
push
cmp
pushf
test
inc
pop
loopne
mov
icebp
pop
jae
sbb
scas
test
cmp
leave
pop
cs
jo
fstpl
sbbl
xchg
pop
fs
decb
sbb
aam
cmpsb
sub
xchg
or
mov
adc
aas
mov
and
xor
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
aad
adc
fdivrl
jle
mov
and
mov
sbb
lds
inc
in
add
pop
scas
lret
jg
adcl
leave
xchg
push
jae
arpl
daa
push
inc
jle
pop
or
xorl
jl
bound
dec
xchg
rorb
dec
ja
fdivrl
sbbl
mov
andb
movsb
lods
dec
loope
ret
dec
je
lret
cmp
and
cmp
mov
cmc
mov
adc
xor
in
jmp
popf
iret
pop
mov
xchg
jb
daa
outsb
cmp
pushf
jp
cmp
in
cltd
movsl
mov
pop
xor
jecxz
leave
es
cli
jns
sbb
fimuls
test
inc
add
jp
int
js
pop
push
xchg
push
lods
adc
xchg
pop
push
add
cmpsl
xchg
pop
pop
test
es
xchg
jne
aad
aad
cmpsl
mov
jbe
hlt
xchg
pop
fstpt
mov
aas
aad
fsubl
aas
je
xchg
mov
sub
add
scas
cld
int
dec
mov
sbb
mov
ss
adc
out
xor
and
jecxz
xchg
jge
xchg
jb
cld
lret
aaa
pop
dec
cmc
mov
gs
or
and
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
adc
fdivrl
jle
jp
not
push
push
fsub
jg
outsb
pop
mov
test
ret
test
xchg
aaa
cmc
mov
aam
adc
add
xor
jmp
cmp
in
icebp
cmpsb
add
cmp
movsb
clc
outsl
inc
adc
dec
jp
sbb
jns
jle
and
jmp
mov
jle
pushl
jp
fs
xchg
testb
int
inc
ret
pop
push
lcall
sub
mov
jno
cli
das
xor
leave
xor
int3
hlt
sti
jbe
ret
clc
mov
lret
data16
imul
test
mov
scas
inc
nop
cltd
mov
sub
dec
push
nop
xor
mov
and
and
dec
and
pop
mov
lret
and
jp
orb
and
test
sahf
and
pushl
sub
loopne
adc
out
mov
and
cmp
dec
nop
pop
cmp
adc
test
inc
cwtl
sti
stc
add
and
push
dec
push
and
inc
adc
xor
dec
and
adc
aaa
or
sub
push
sub
scas
jbe
lret
sub
jnp
test
in
in
inc
pop
subb
fwait
xor
add
mov
mov
jmp
and
pop
xchg
adc
arpl
out
mov
jle
jg
jle
sbb
dec
dec
dec
scas
pop
loop
push
add
pop
out
mov
cwtl
jle
mov
mov
inc
and
push
cmp
test
fmulp
test
in
and
cs
jbe
popa
jo
mov
bound
push
loop
test
xchg
roll
and
cmp
push
rcrb
out
es
push
pop
dec
cmp
insb
xchg
sti
punpcklbw
sub
lods
icebp
fcmovbe
in
sub
div
adc
and
fmuls
mov
xchg
push
sub
inc
js
cmpsl
out
out
sub
pop
and
mov
cmp
xor
mov
es
sbb
sub
bound
cmp
outsl
fcomps
in
test
aad
das
mov
dec
xor
xor
mov
cmp
sub
or
popa
dec
out
sbb
mov
in
jo
pop
popa
sahf
repz
dec
roll
nop
ret
rcr
jmp
shrl
and
pop
lret
je
repz
dec
imul
push
push
mov
cmp
aam
pop
negb
mov
jo
addr16
imul
cmc
inc
ret
in
jl
fildl
jbe
in
mov
and
repz
sub
into
push
inc
ja
rcrl
add
xor
add
mov
jmp
mov
jmp
push
gs
movsb
fldl
roll
jle
push
addr16
fmull
stos
iret
iret
push
push
ret
mov
mov
mov
outsb
mov
ljmp
out
ret
pop
adc
std
ljmp
mov
jne
scas
pop
andl
add
notl
lret
loope
inc
flds
out
push
imul
aaa
arpl
mov
add
adc
rol
fsub
fidivrs
lret
mov
pushf
insl
xor
fbld
jle
jge
xchg
jmp
mov
ret
loope
insb
ja
sbb
mov
out
outsb
cmpsb
nop
es
jbe
stos
sbb
mov
mov
push
arpl
mov
jo
inc
in
pop
sbb
lods
push
add
out
out
aam
out
loopne
push
pop
and
dec
aaa
xchg
lods
xchg
pop
daa
sti
xchg
mov
push
dec
es
jl
call
std
mov
cld
enter
jae
add
sbb
xchg
and
push
sub
xchg
push
push
mov
test
insb
sub
gs
hlt
jne
push
notb
test
out
mov
shlb
aas
xor
push
add
fbstp
dec
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
icebp
into
fdivrp
or
out
and
sti
pop
pop
nop
loope
inc
push
pop
cmp
clc
cmp
sbb
in
in
mov
lcall
inc
mov
or
rorl
mov
xchg
addr16
ss
cltd
lret
pop
ds
idivb
inc
repnz
jae
outsl
jmp
or
insl
je
stos
ljmp
dec
push
sub
xchg
mov
bound
rorb
fidivrl
arpl
mov
lahf
sub
aas
pop
push
jl
adc
dec
into
fdiv
enter
push
aam
add
push
inc
mov
cltd
inc
xor
mov
stos
andl
pop
insb
ds
lds
test
outsb
adc
pop
mov
jnp
sahf
inc
push
leave
jbe
mov
sbb
loope
xchg
push
int
xchg
fnstenv
adc
adc
jne
and
decl
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
ja
lods
jge
jle
or
jle
insl
xor
mov
xchg
clc
rclb
cmp
push
loopne
mov
push
into
loopne
xchg
stc
sbb
dec
adc
ss
jb
jle
mov
xor
xchg
je
add
les
outsb
dec
scas
push
mov
pop
push
push
daa
pop
outsb
sbb
roll
xchg
xor
mov
mov
adc
cwtl
cmpsb
scas
xor
pop
subb
test
std
addl
mov
ds
sahf
inc
int3
and
lret
dec
cmp
dec
sbb
clc
lods
mov
fisttpll
or
mov
mov
xor
xchg
mov
jne
mov
xchg
fiadds
cmpsb
rol
rorl
mov
mov
or
rcll
in
ret
sub
push
test
gs
popl
clc
ja
leave
pop
int
mov
icebp
repz
mov
in
arpl
bound
bound
rolb
dec
jle
add
jg
inc
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fisubl
dec
push
or
jle
xor
jp
lds
pop
xlat
lods
scas
xlat
pop
fwait
in
mov
dec
fisubl
xor
cmp
inc
leave
mov
outsl
mov
insb
ds
pop
dec
or
fnstenv
inc
mov
outsb
out
test
lock
adc
cmp
jno
ss
clc
mov
cmpsb
and
in
xchg
std
mov
sub
out
jge
out
sbb
in
or
pop
mov
dec
fsubrl
mov
lods
cltd
cmpb
xchg
aad
jp,pn
lds
cli
jo
into
clc
inc
mov
loope
flds
shlb
ficoms
or
and
adc
sarl
pop
xchg
push
repnz
fimuls
xchg
loopne
adc
bound
add
jb
rorb
dec
mov
sub
mov
or
sti
add
repz
sbb
push
iret
cmpsl
dec
addr16
xor
dec
and
jmp
add
negb
repz
or
sahf
es
fdivrs
scas
js
enter
fs
gs
ret
fadd
inc
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
mov
add
jg
jle
adc
test
mov
lds
jmp
dec
add
cmpl
movsl
xchg
es
push
imul
test
pop
and
out
loop
stc
into
adc
iret
inc
sbb
or
aas
push
and
vphsubwd
and
leave
pop
sti
ja
adc
dec
jp
mov
std
mov
push
mov
lods
xchg
mov
xchg
mov
shr
setae
and
xchg
je
dec
xor
cld
push
lcall
lock
movsl
jae
outsl
movsl
pop
mov
in
dec
sub
mov
xchg
cmp
xchg
add
rcrb
add
add
jle
xchg
push
xchg
enter
xlat
cwtl
out
jle
les
adc
pop
push
in
pop
cmovb
out
or
and
mov
mov
jg
in
cmp
mov
push
jne
xor
lock
mov
or
sub
dec
fstps
and
adc
repnz
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
pop
sub
jle
or
jle
xchg
ret
test
xor
adc
dec
dec
mov
pop
push
push
call
xchg
sbb
mov
push
int3
outsb
add
ret
xchg
xchg
enter
push
mov
imul
pop
push
and
sbb
lcall
adc
inc
das
cmc
xor
cmpb
outsb
xchg
leave
cmp
test
xchg
flds
xchg
ror
cltd
or
and
inc
loopne
jl
div
and
mov
push
clc
xchg
mov
cs
jb
xor
mov
pop
js
sub
cmp
jl
cmp
dec
lods
call
adc
imul
mov
mov
mov
fs
frstor
das
jbe
testl
imul
loop
mov
mov
adc
ror
mov
out
test
sbb
jb
mov
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
sti
adc
sub
jg
jle
jmp
in
sbb
fadd
mov
ja
inc
xchg
jmp
xchg
lds
data16
sub
divl
or
xchg
sbb
inc
sbb
fildl
shll
je
lahf
dec
dec
inc
mov
jae
mov
dec
out
shl
sarb
idivl
cli
gs
sahf
shlb
cmp
shl
lahf
test
mov
adc
jns
sbb
inc
imul
add
cwtl
cli
ret
jecxz
int
andl
sub
stc
sub
leave
lret
xor
cmp
jp
inc
f2xm1
xchg
xchg
adc
push
je
andb
jae
pop
pop
jg
pop
adc
xchg
cwtl
xorl
push
popf
and
notb
adc
pop
sahf
jmp
rorb
pop
int
dec
popf
mov
cmp
gs
jns
add
hlt
aam
aaa
adc
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
jmp
jle
or
jle
and
test
popf
repnz
xchg
jge
jecxz
push
xlat
mov
les
hlt
push
fnstsw
ja
js
pop
inc
xor
push
inc
xchg
push
jno
xchg
mov
cmp
shll
push
pushf
cmc
jge
test
outsb
sbb
rcrl
jbe
addl
mov
jl
out
addb
mov
es
mov
or
xchg
push
out
add
loop
sbb
mov
cs
jp
std
test
movb
dec
cli
push
sbb
out
cltd
push
sbb
mov
daa
and
cli
jno
xchg
mov
scas
in
sti
or
dec
lret
popa
ret
mov
pop
jg
cmpl
rorb
shrb
int3
out
ja
stc
sub
jnp
and
sub
ljmp
js
xchg
rcrb
jg
test
cmp
jge
mov
jmp
dec
sub
lock
mov
jle
jg
jle
jb
leave
aaa
xor
enter
scas
shrb
dec
pop
cmp
push
xor
lock
sti
movsl
mov
pushf
xchg
inc
stos
dec
insl
outsb
iret
ret
dec
dec
or
cmc
dec
fldenv
into
sbb
sub
push
adc
pop
cmp
ficompl
orb
dec
push
xor
loope
xchg
cmp
cmc
lods
out
pop
mov
adc
adc
mov
mov
pop
repz
cmp
or
ss
int
mov
dec
int
and
enter
fdivs
sbb
inc
mov
mov
std
shlb
push
int3
loope
aaa
shll
sarb
inc
or
repnz
sub
jb
and
or
mov
mov
inc
mov
mov
or
xchg
xacquire
aam
xchg
pop
xchg
lods
scas
and
fdivs
adc
scas
jns
mov
andb
sahf
in
sub
jno
mov
testb
add
jmp
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
mov
jle
jg
jle
das
rcl
sbb
ret
inc
sbb
mov
mov
adcb
dec
aad
enter
and
adc
adc
dec
mov
out
xor
lcall
popf
add
movsb
push
mov
in
xor
inc
cmp
sbb
fidivrs
enter
mov
gs
mov
scas
mov
push
les
loop
or
mov
add
or
in
mov
cli
gs
adc
mov
jae
and
mov
mov
jne
popf
insl
test
jg
andl
xchg
repz
mov
insl
std
ljmp
stos
scas
test
outsl
ret
xchg
pop
xchg
sbb
pop
or
das
dec
aas
push
roll
stos
fst
lcall
icebp
repnz
push
xchg
fidivs
pop
or
test
and
add
lods
cmp
je
ficoml
mov
je
mov
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
aad
sti
sbb
jle
or
jle
mov
mov
sub
dec
icebp
repz
sbb
iret
push
jbe
lods
mov
dec
es
les
or
test
sub
push
xchg
or
cmpsb
insl
pop
jae
dec
push
daa
ret
sahf
pop
fcmovu
out
arpl
mov
test
and
call
sbbb
inc
pop
scas
rcll
mov
mov
jbe
imul
movsl
xor
and
xchg
xor
sub
adc
lock
stos
mov
push
inc
lret
or
jno
dec
adc
mov
les
xchg
xor
shrb
push
loopne
xchg
fistpll
xor
pop
ss
lret
push
dec
daa
pop
push
in
pop
mov
pop
fwait
dec
dec
fadds
xchg
xchg
fcompl
push
dec
push
mov
stos
call
fldt
loope
adc
lods
adc
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
inc
cmpsl
or
or
jle
mov
pop
xchg
fwait
sbb
popa
repnz
es
push
pusha
xlat
cltd
dec
clc
pop
sub
jnp
lcall
shll
mov
testl
xor
mov
xor
inc
push
pop
cmp
rcll
clc
sub
mov
mov
pushf
xor
in
js
aam
sbb
in
ret
xor
xchg
leave
add
scas
sbb
je
out
in
scas
and
pop
ret
pop
jb
sbb
ljmp
bound
push
cs
inc
sbb
mov
cwtl
jge
dec
stos
int
push
or
or
pop
mov
cmpsb
stos
or
aas
cmp
mov
movsl
je
aaa
mov
xor
vmovaps
filds
xor
push
ret
xor
sub
inc
xor
cmp
xchg
mov
and
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
mov
push
dec
je
cmpsl
lahf
test
xor
mov
mov
ret
xor
jb
and
add
inc
pop
out
es
daa
mov
push
push
inc
pop
jle
adc
push
imul
outsl
mov
clc
clc
dec
sbb
jns
lds
jno
leave
loop
fisttpll
in
sub
xchg
cmp
sahf
xorl
mov
fildll
scas
mov
test
jmp
pushf
adc
enter
mov
leave
mov
adc
jmp
es
mov
les
xor
adc
cmpb
sub
mov
mov
shld
fbld
inc
icebp
je
imul
shl
stos
pop
cmp
aaa
frstor
adc
add
lock
and
outsl
fidivl
mov
mov
mov
mov
rcll
mov
xor
das
xchg
mov
mov
dec
pop
cmp
add
cmp
or
sbb
daa
push
std
and
inc
add
movntq
out
xchg
inc
in
mov
or
fcom
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
mov
popf
and
push
jg
jle
shlb
jbe
dec
mov
stos
adc
js
nop
sub
lahf
lret
or
xchg
sub
out
andb
lahf
cld
rorb
stos
adc
arpl
loope
int
xor
imul
jns
pop
out
xchg
adc
loope
sbb
pop
mov
or
cmc
mov
cmpb
enter
mov
adc
in
or
rorb
or
or
add
sub
cwtl
lret
mov
xchg
iret
sub
popa
scas
sbb
fsubrl
inc
sbb
add
movsb
add
je
jecxz
sub
jmp
test
push
xor
mov
lock
stos
pop
ret
push
mov
mov
fsts
pushf
lods
out
cmpsb
adc
mov
nop
cmc
xor
mov
mov
cmp
xchg
fisttps
out
repnz
xchg
scas
inc
xchg
push
and
push
xor
push
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
fwait
mov
mov
es
push
jg
jle
xchg
fmull
cmp
and
sbb
test
iret
mov
movb
or
add
pop
sbb
and
sar
mov
jne
cld
aas
leave
loop
pop
mov
mov
negl
dec
push
cltd
jl
cmp
jle
pop
and
std
lods
ret
dec
cmp
cmp
adc
loop
rcll
mov
adcl
mov
in
jbe
mov
fistl
sub
push
and
push
mov
lods
enter
push
popa
xchg
cld
add
lods
insl
mov
jecxz
nop
cmp
mov
pop
pop
mov
fwait
mov
sub
adc
xor
xchg
std
imul
jmp
test
adc
push
add
es
pop
sbb
jl
ret
mov
popa
lret
push
out
loope
test
icebp
jno
in
inc
int
mov
jo
mov
push
add
dec
mov
out
shll
aam
shlb
sub
mov
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
popf
insl
daa
jle
push
jg
jle
lods
fdivrp
in
sub
xor
xchg
adc
shrb
and
ds
sub
nop
mov
outsb
or
dec
test
imul
dec
enter
sub
mov
xchg
loop
and
insl
mov
stos
cltd
loop
jb
mov
push
popa
int
cld
movsl
push
mov
lret
addr16
and
mov
mov
jecxz
mov
mov
jp
push
fldenv
add
scas
inc
dec
orb
ljmp
popf
sub
cmp
dec
jno
pop
cmp
mov
sub
in
cltd
cmpsl
insb
xor
inc
test
dec
xor
mov
inc
adc
mov
in
test
cltd
repz
mov
xlat
adc
outsb
out
jbe
in
lcall
xor
fsubl
fisubrs
ljmp
into
xchg
int
sub
and
fwait
aaa
loopne
dec
fnstcw
jae
mov
ja
adc
divl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
jno
cltd
xchg
jg
jle
dec
mov
add
adc
sub
pop
pop
insl
ret
mov
iret
dec
mov
leave
fdivrs
xchg
push
mov
push
dec
cltd
into
adc
sub
insb
sbbb
fcompl
adc
mov
cwtl
sub
mov
loopne
sti
push
sub
jbe
stos
lock
xor
xchg
cwtl
ror
cmp
repnz
ret
lods
in
sbb
xchg
xor
ja
sbb
sar
mov
fnsave
ffreep
add
adc
pop
sti
pop
sub
push
push
in
add
into
ss
lock
lds
jl
sub
nop
or
and
push
fmul
stos
sub
rclb
mov
pop
push
jo
popa
or
adc
dec
or
popf
inc
adc
flds
mov
movb
add
cmp
dec
jae
arpl
jmp
je
mov
adc
bound
sbb
and
mov
adc
aaa
mov
xchg
dec
scas
fisubs
pop
add
jmp
and
push
bound
cs
mov
adc
push
add
sbb
push
push
adcb
addr16
rorb
inc
cld
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
roll
loopne
jle
lds
jle
cmpxchg
test
xor
hlt
xor
es
lods
cmp
adc
inc
insl
int3
stc
data16
push
mov
nop
cmp
sub
xchg
rcrb
mov
ds
int
inc
cmc
add
in
xor
mov
mov
push
push
jae
and
dec
repz
adc
jle
mull
xor
push
and
call
sub
stc
out
mov
add
aam
push
add
cwtl
cmpl
xor
adc
sti
sub
es
ss
test
add
and
shrb
cli
push
add
xchg
daa
mov
es
sbb
inc
imul
sub
shr
adc
xor
loop
into
shr
jmp
xchg
mov
shrl
pop
out
insl
iret
sbb
push
or
shrb
mov
and
dec
fisubl
in
add
imul
ja
insl
cs
outsb
or
cltd
cmp
add
xor
roll
leave
and
das
pop
sbb
es
mov
imul
mov
ret
sub
cmp
sbb
out
mull
xchg
add
lret
ret
add
jmp
jg
add
jns
cmp
sub
cmp
lds
jle
jmp
sub
into
into
mov
iret
xor
jnp
dec
dec
mull
das
cmpsl
bound
inc
sub
fs
adc
xchg
sbb
or
push
int3
xorl
inc
adc
pop
push
ss
pop
jl
mov
xchg
inc
out
jns
fildll
xor
call
push
or
xchg
mov
mov
push
insl
sbb
nop
mov
sti
rcrl
fisubrl
jbe
xor
xchg
sub
out
jg
repz
neg
sbb
mov
cli
cmp
push
in
xchg
sub
sti
and
pop
inc
mov
mov
add
imul
icebp
int
mov
mov
out
mov
rcr
push
insl
cmpsb
js
xchg
cmpsl
call
sub
js
ss
adc
mov
adc
mov
dec
stos
mov
div
jo
and
cmc
aad
push
hlt
add
loope
negl
inc
dec
data16
push
sbb
rorb
mov
outsb
popf
jo
mov
jl
xor
mov
sub
lods
hlt
es
add
xchg
call
mov
sub
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
rcrb
jle
lds
jle
movsb
lods
jg
mov
xchg
loopne
mov
dec
xchg
jns
out
movsb
ds
test
clc
mov
xor
nop
mov
sbb
lods
rcrb
movsl
cld
mov
pop
fsubp
push
inc
icebp
aaa
in
sub
sbb
ror
dec
inc
pop
sbb
pop
sub
fsubs
test
inc
cwtl
xor
mov
and
dec
inc
repnz
cld
and
out
pop
pop
frstor
lds
jno
lahf
negl
orb
aaa
icebp
lcall
xchg
loope
adc
fidivrl
add
and
std
nop
addb
test
sbb
test
adc
pushf
das
movsb
and
push
arpl
aas
push
mov
or
in
mov
pop
mov
testl
out
imul
jl
push
mov
cli
jbe
pusha
cmp
je
fcomps
imul
int
jo
shl
and
jne
and
xor
enter
mov
and
imul
jge
lock
sbb
dec
test
ja
popf
xchg
or
jb
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
xor
icebp
jle,pt
mov
jle
add
mov
mov
je
mov
lods
mov
cmp
xchg
inc
pop
test
mov
imul
push
sarb
dec
mov
mov
adc
test
add
sbb
cs
andl
xrelease
loop
and
push
insb
mov
pop
stos
outsl
aas
fsubrp
adc
push
jl
andl
insb
push
fisubs
inc
scas
jne
icebp
cwtl
inc
mov
ret
fldt
je
mov
and
mull
icebp
push
jl
fldcw
push
mov
movb
ja
out
rorb
push
test
dec
clc
clc
inc
shl
and
insb
decb
mov
push
les
pop
mov
leave
sti
sub
movsb
lods
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
xchg
lcall
jle
jle
pusha
adc
pop
and
add
or
lahf
call
pusha
cmp
shlb
jne
lock
inc
out
out
and
mov
or
jle
daa
jge
pop
shll
jo
js
inc
jle
lock
shrb
movsl
test
and
lcall
cltd
je
imul
sbb
cmp
pop
mov
aad
or
jo
frstor
in
rclb
push
pop
mov
insl
push
lds
and
fistpl
loop
bt
lods
mov
mov
push
cmpsl
or
jo
jle
notb
cmp
add
test
dec
loopne
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
xor
mov
jle
movsl
test
sub
sbb
xor
jo
js
inc
pop
jmp
jns
sbb
jl
adc
sar
mov
rorb
inc
sub
cmp
cwtl
fcmovu
push
mov
sti
rcrb
and
add
test
sarl
inc
mov
int3
je
sbb
mov
test
stos
mov
int
sbb
push
ds
hlt
mov
jmp
jl
fldcw
push
push
fisubrs
sbb
je
pop
int3
pushf
adc
js
shll
je
call
out
fisubrs
enter
and
push
mov
jp
sub
mov
add
addb
dec
call
inc
add
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
dec
and
pop
cmp
jle
jle
jle
js
pop
pop
in
jns
or
push
mov
dec
outsl
rcrl
das
sarb
js
in
lods
adc
cli
cld
jmp
push
xchg
popa
xor
dec
out
pop
stc
and
jp
inc
mov
and
pop
push
jnp
cmp
test
sbb
hlt
adc
xlat
xchg
push
fcomps
cmp
cwtl
aaa
add
mov
lods
xchg
pop
test
push
mov
push
inc
and
into
adc
jbe
jns
decb
xchg
test
pop
push
cmp
sub
subl
fst
pop
pushf
xor
rcr
add
sbb
pop
popa
and
dec
add
test
iret
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
mov
jle
mov
jle
sahf
sub
mov
test
sbb
ss
jmp
bound
lret
cld
imulb
and
pushf
test
lods
sbb
sahf
call
cwtl
sahf
inc
add
iret
jne
dec
loop
mov
call
int
leave
arpl
clc
movups
mov
maxps
xor
dec
cmpl
lret
imul
jb
ja
pop
mov
outsl
sbb
push
and
inc
sub
cmp
mov
out
cmp
test
clc
mov
or
cli
xor
adc
dec
ja
test
out
aam
cmp
push
add
xor
xchg
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
stc
add
xor
mov
jle
inc
pusha
mov
pop
mov
mov
lock
pop
pusha
xlat
sub
mov
sbb
sub
enter
and
insl
aaa
mov
add
movsb
pop
cmp
aas
dec
add
cmpsb
aaa
loop
arpl
lahf
pop
popa
or
mov
push
and
lret
in
mov
imul
add
aaa
subl
cwtl
imul
sbb
push
and
inc
int3
sub
inc
int
fisttps
add
jl
adc
push
xchg
or
add
hlt
push
mov
cmpsl
xchg
jae
dec
adc
ds
mov
in
mov
jle
mov
stc
jo
arpl
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
and
and
jle
mov
jle
or
fisttps
mov
inc
mov
mov
mov
lods
pop
pop
pusha
cmp
jbe
lds
lcall
adc
dec
push
imul
xchg
adc
cltd
pop
stos
xor
cld
cmpsl
adc
mov
and
in
jge
dec
popa
cs
ss
jle
stc
pop
pop
jb
pop
inc
jle
push
pop
leave
mov
mov
sub
jg
test
bound
mov
pop
ror
adc
xor
out
test
call
mov
and
insl
fidivrs
inc
jp
cltd
add
lds
imul
push
lds
and
fidivrl
lods
xchg
imul
pop
xor
mov
aam
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
mov
xor
mov
jle
mov
ja
mov
pushf
cmp
and
mov
push
inc
lods
cmc
out
les
int3
pop
sbb
and
add
nop
or
dec
or
cs
sbb
imul
push
imul
cmpsb
fs
xchg
cmp
push
inc
mov
cli
sbb
push
xor
inc
mov
cmp
fnstenv
sbb
cld
fidivrl
subl
fucom
fidivl
insl
pushf
pop
inc
jbe
fisttpll
lock
push
mull
fsubr
push
subb
adc
sbb
push
lret
add
aaa
xchg
mov
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
jle
mov
jle
pop
push
jne
add
fsubrl
push
fdiv
aad
cmp
jecxz
push
pop
cwtl
sarb
inc
pop
push
loop
ficoml
out
dec
lds
and
adc
repnz
mov
pop
pop
add
les
pusha
and
inc
lret
xlat
outsl
mov
outsb
repz
cmpsb
add
negl
icebp
xchg
pop
sub
jmp
ljmp
sbb
push
mov
in
sbb
dec
mov
push
repz
shrl
lds
movsl
and
rcll
xlat
jnp
push
mov
stos
out
lcall
xchg
jbe
jmp
cmp
pop
xor
inc
icebp
sarl
mov
outsb
lea
jbe
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
jnp
outsl
mov
jle
mov
jle
fimuls
pop
scas
lcall
adc
and
mov
outsb
fsubrs
incl
in
fistpll
scas
insl
dec
hlt
and
out
jno
lcall
xor
pop
mov
inc
xor
sbb
sbb
mov
pop
aaa
pop
dec
int3
pop
mov
rolb
aam
push
mov
daa
pop
push
pop
mov
ret
mov
ficoms
jbe
sbb
mov
in
jno
sbb
sbb
mov
lock
mov
aad
std
lock
sub
jo
xchg
ret
cmp
jmp
inc
sbb
xrelease
or
lret
ss
jecxz
loop
pop
xor
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
test
sbb
shll
jle
jle
jle
xlat
mov
mov
jmp
enter
push
ficoms
lock
xchg
mov
add
push
sbb
out
mov
xor
rol
ja
es
xor
add
loopne
mov
lds
mov
or
pop
add
mov
iret
sbb
jg
js
dec
push
test
mov
add
cmp
add
cmp
popa
mov
push
adc
adc
cmp
aas
dec
or
mov
push
popf
push
push
dec
int
stos
cmp
jo
xor
dec
push
les
mov
ficoml
inc
mov
cpuid
pop
cli
in
cmpsl
dec
fisubs
mov
add
mov
mov
xor
add
mov
jmp
decl
xchg
cmp
cmp
sbb
jle
mov
jle
pop
lds
shl
insl
adc
movsb
imul
out
and
cltd
test
sub
pop
das
addb
ret
clc
std
mov
jecxz
aam
add
jg
lahf
imul
repnz
ror
xor
push
mov
je
mov
aam
jae
xchg
ja
imul
cmp
pop
cmpsl
sahf
sub
loope
push
cs
xlat
mov
push
ret
loopne
pushf
fwait
cmpsb
sub
ljmp
insb
mov
push
sub
fucomp
xchg
fistpl
push
push
push
dec
in
adc
sbb
repnz
dec
inc
push
sub
int
cmp
jo
mov
cmp
push
fcompl
add
loopne
add
inc
loop
xchg
imul
scas
mov
aaa
jle
mov
jle
add
dec
xor
jno
shl
dec
mov
or
cmp
call
and
cmp
pop
mov
insl
fisttps
xchg
sub
std
test
int
jge
or
bound
cmc
jle
inc
jns
xor
or
sub
mov
test
sti
cld
mov
push
sahf
fstpl
adc
and
or
addr16
pop
inc
jb
xchg
cmp
inc
jo
xor
xor
dec
mov
cwtl
repz
aam
sahf
mov
in
adc
dec
pushl
in
dec
jg
nop
fs
mov
pop
and
repnz
test
jge
and
mov
stc
jmp
push
adc
loopne
inc
pop
cmp
outsl
push
rorl
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
popa
push
push
es
jle
jle
repnz
cld
iret
das
mov
pop
or
lret
dec
mov
aam
jo
and
stos
sub
pop
jnp
andb
mov
jg
adc
mov
lahf
adc
xchg
jl
rcll
enter
add
outsb
out
jne
cli
add
test
rol
jmp
push
xchg
xchg
jb
fsubs
jmp
sub
xchg
cmp
out
xor
les
jge
xchg
testb
xor
sub
jns
shld
out
mov
mov
inc
xchg
cmc
fnsave
mov
jle
inc
xchg
mov
mov
mov
bound
cmpl
shlb
stc
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
subb
sti
loope
jle
mov
jle
sti
aaa
push
pop
jge
ficompl
pop
andl
add
xchg
sub
lds
hlt
loope
in
mov
outsl
test
lds
cmpsb
loopne
jno
fadds
jg
adc
xor
pop
push
push
ret
scas
dec
decb
adc
lcall
jne
rclb
cld
mov
stos
mov
lahf
xor
cmp
sub
js
fisubs
shl
fcomp
loopne
or
add
mov
cld
negb
loopne
jge
dec
out
hlt
add
cmp
leave
xchg
lods
test
stc
sbb
inc
cwtl
sti
or
out
icebp
xor
mov
mov
pop
sub
scas
or
fsubrl
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
fbstp
test
fcomps
lret
cmpl
push
mov
test
je
push
add
aam
in
push
pop
and
inc
roll
icebp
jmp
lret
and
out
jae
push
push
pusha
ret
mov
shrl
clc
mov
js
enter
out
testl
loopne
xchg
jns
jmp
test
dec
nop
and
int3
paddsw
pop
fwait
test
mov
shl
movsl
xchg
ret
cli
lods
addl
jno
mov
das
loopne
loop
rorb
sub
scas
arpl
fwait
push
xor
push
movsb
xor
mov
dec
ficomps
jbe
inc
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
add
jle
mov
jle
jg
dec
arpl
and
es
xorb
inc
testb
leave
nop
loopne
pop
dec
mov
mov
xchg
xlat
fidivrl
push
mov
xor
das
jnp
add
pop
fdivrs
fstpl
jp
test
negb
inc
and
push
gs
xchg
add
jge
adc
jl
adc
das
xor
cmp
insl
sbb
imul
lahf
out
testb
xor
pop
ficompl
into
aam
test
mov
scas
lods
pop
les
cmp
lret
add
add
lock
pop
mov
add
test
test
popa
in
jl
sbb
adc
das
jecxz
ret
xor
jmp
popa
jno
jnp
jnp
or
sbb
jle
jle
jle
call
ja
and
push
jo
adc
js
pop
mov
sub
pop
or
fdivs
movsb
ret
pop
xchg
sub
xchg
loop
mov
inc
and
hlt
mov
sbb
data16
or
mov
addr16
arpl
test
fs
jne
and
ret
xor
lea
ljmp
dec
imul
mov
lods
xlat
fcoml
pop
fldt
les
dec
nop
sbb
jmp
pushl
or
fidivrl
ret
and
stos
jae
subl
mov
push
push
mov
pop
push
xchg
lcall
inc
cmp
jmp
test
xchg
push
stos
push
push
and
movb
jle
jge
sub
aam
jp
out
cli
add
adc
push
mov
imul
jbe
jbe
add
push
enter
dec
addr16
mov
and
xlat
sub
xchg
popa
insl
es
push
xchg
or
sbb
xor
out
add
pop
mov
mov
mov
xor
jnp
in
loop
mov
mov
xor
adc
push
mov
fsubrl
fiadds
pop
mov
jmp
lahf
movsl
mov
xchg
mov
adc
arpl
arpl
imul
idivl
add
dec
mov
jbe
js
mov
add
cmp
jecxz
adc
dec
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
lock
jbe
jns
data16
xor
repz
fldl
cmp
fsubrs
lret
idivl
jnp,pt
mov
push
xchg
push
pop
adc
mov
shlb
mov
inc
test
push
jp
cmc
sub
imul
inc
add
int3
into
inc
sbbl
jg
jns
popf
ss
pop
push
mov
sbb
sbb
push
xor
mov
fiadds
jns
imul
jno
popf
int3
aad
es
pusha
mov
popl
mov
inc
pop
push
and
jbe
xchg
cltd
dec
inc
mov
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
