push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
or
jmp
int
sarl
push
sbb
fdivrl
js
jl
js
xlat
cmp
fld
pop
push
or
xor
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
dec
adc
inc
or
sbb
add
mov
stc
mov
hlt
and
jno
roll
jno
out
ficoml
outsl
int3
fwait
in
cs
test
neg
clc
enter
cmp
addr16
lods
jne
movsl
fs
pop
popl
mov
ret
jl
mov
pushf
and
out
mov
sbb
push
pop
idivb
fucomi
inc
inc
pushf
xor
or
sbb
or
adc
and
sbb
xor
out
repz
jp
in
pop
mov
adc
push
test
stos
rorl
jbe
clc
mov
out
cld
jb
cmp
filds
xchg
xor
andl
cmp
mov
xor
in
sbb
iret
sub
xor
dec
fstpl
add
xor
lods
add
stos
movl
inc
fbstp
pop
xchg
sub
pop
hlt
sbb
xadd
mov
lds
mov
jno
cmpsb
arpl
sbb
fbstp
jae
push
and
lahf
mov
lret
mov
lcall
push
xchg
sti
arpl
call
adc
cvtps2pd
subb
pop
addr16
jb
shrb
ret
aad
js
adc
mov
jnp
and
fcmovnbe
mov
mov
pop
filds
lahf
jecxz
fmul
iret
in
imul
cmp
dec
dec
mov
rcr
cmc
in
test
push
sbb
ss
les
sub
mov
add
or
fdivrl
sbb
mov
inc
rolb
test
je
sub
fildll
fsubs
xor
mov
ljmp
jae
in
jne
mov
xchg
xor
mov
sbbl
les
sbb
stos
fcmovne
push
xchg
mov
sbbb
imul
dec
fldt
cltd
andb
push
cmp
adc
mov
lcall
dec
clc
test
push
arpl
inc
hlt
cmc
bound
pop
or
xchg
dec
add
xor
inc
jne
cltd
xchg
cltd
test
jge
dec
push
mov
lcall
mov
jmp
pop
rcll
mov
add
and
xor
out
dec
call
sub
sub
jecxz
jb
mov
sti
mov
push
iret
inc
je
push
fwait
mov
push
hlt
mov
push
ja
not
enter
xchg
pop
ret
mov
and
inc
lea
push
mov
out
pushf
sub
dec
insl
mov
and
in
fidivrl
mov
dec
addr16
mov
imul
sti
mov
popf
sbb
mov
sbb
pop
push
repz
inc
push
cs
movsb
es
pop
xchg
mov
cmpsl
subb
mov
loop
gs
bound
add
inc
imul
dec
fbld
mov
rcrb
cwtl
outsl
insl
lock
jns
push
sahf
out
lret
dec
mov
and
dec
add
rcr
mov
addr16
daa
lock
lock
sub
leave
mov
test
fcmovnu
fldcw
dec
fs
or
lds
xor
xor
dec
icebp
xchg
in
in
xchg
cmp
imul
nop
pop
insl
lret
cmp
cmp
jg
and
fs
dec
mov
pop
jne
mov
add
mov
enter
es
or
rol
into
out
push
mov
and
and
icebp
pop
subb
sbb
sbb
push
mov
icebp
xor
cmpsl
jge
or
cmp
dec
lea
jmp
adc
inc
call
add
or
inc
lock
in
test
inc
add
or
mov
andl
push
sub
jmp
enter
rcl
xlat
xlat
dec
xor
pop
xchg
jl
dec
push
js
push
js
shlb
adc
mov
pop
xor
jp
rcll
out
jno
int
enter
into
xchg
test
test
xchg
fisttps
clc
out
ja
and
sbb
loopne
pop
arpl
lock
movsl
out
nop
stos
push
arpl
iret
xchg
push
xor
or
jge
pop
ss
in
repz
xchg
pop
adc
cmp
ret
pop
push
js
in
sub
xlat
push
mov
or
sub
lds
js
sbb
cmpsl
xlat
cmpl
xchg
mulb
loop
sti
jo
push
sahf
xor
inc
inc
cs
cld
dec
addr16
test
nop
test
cmp
ja
in
orb
lahf
jae
lcall
ja
xchg
lods
cmp
push
xor
bound
outsb
lret
pop
xchg
cmp
add
inc
pop
jecxz
xlat
out
jecxz
jge
jle
jp
pushf
mov
jg
aad
and
std
pop
lods
mov
push
mov
pop
inc
push
inc
es
or
loope
ret
adc
scas
push
jmp
popf
mov
sub
outsl
sbb
sti
outsb
int
mov
aaa
in
push
jg
sbb
and
scas
adc
push
ds
mov
aaa
lea
inc
loope
xor
les
outsb
in
mov
pop
fs
adc
inc
mov
in
inc
ffreep
sub
mov
fs
mov
add
push
out
cmpsl
fbstp
pop
addb
data16
and
call
leave
shld
xchg
dec
call
push
cli
add
xor
idivl
or
sub
popf
mov
pop
inc
lods
stc
xchg
sub
ss
cmpsl
and
lods
sub
ret
sbb
sbb
push
daa
cltd
popa
loopne
je
das
popf
pop
lret
loope
pop
jns
movsl
mov
inc
sub
cltd
in
rorl
push
dec
aad
cmp
push
push
clc
das
sub
cmc
inc
das
arpl
and
mov
push
mov
out
cmpsb
test
cmc
aam
xor
pop
push
popf
jge
mov
ret
shll
pusha
test
dec
adc
and
push
push
cmpsb
scas
xchg
pop
insl
fcomp
out
sub
addb
repz
cmp
cmp
popa
pop
imul
ret
inc
movsb
cmp
ljmp
or
pop
pop
push
xchg
mov
test
mov
les
inc
mov
out
cmp
stos
fnstenv
in
jne
sub
inc
out
stos
jno
xchg
out
ret
ja
pop
mov
mov
pop
enter
fwait
mov
pop
scas
mov
ja
push
jo
sbb
add
cmpsl
into
movsb
testl
or
add
add
test
movsb
dec
sahf
jge
repz
enter
jo
mov
sti
movsl
push
lods
mov
mov
xchg
repz
mov
loopne
cltd
orb
dec
lods
jo
pop
dec
jp
xchg
out
jbe
push
mov
cmp
push
and
pushf
sub
lcall
add
jne
pop
mov
xchg
cmp
mov
jne
mov
inc
dec
xchg
push
pop
cmp
fcompl
pop
inc
ss
daa
inc
or
iret
sub
movsl
jne
sbb
fwait
sbb
xor
cmpsl
out
or
mov
ss
xor
dec
stos
and
je
sub
fs
add
pop
in
adc
push
insl
mov
or
dec
adc
push
dec
dec
cmp
sbb
jl
add
mov
xchg
popa
mov
dec
mov
jmp
sub
js
into
iret
jae
or
aam
adc
lods
int
ljmp
xchg
test
dec
orb
addb
push
xchg
mov
outsb
inc
sbb
or
xchg
push
pop
ret
aas
jg
lock
orl
mov
sub
or
scas
dec
loope
std
mov
sbb
lods
fcomp
dec
imul
shrb
lds
divb
test
pop
cmp
je
xchg
add
outsb
add
fdivr
insl
dec
les
in
test
mov
xor
stc
mov
fistl
push
pop
push
adc
mov
enter
inc
dec
pop
jl
filds
fidivrs
xchg
leave
leave
stc
jecxz
call
mov
push
dec
push
sbb
mov
xor
push
add
mov
mov
mov
sub
and
add
movl
jmp
enter
shrl
mov
jnp
fcoms
js
jl
js
and
jne
xchg
loope
sub
lahf
lea
inc
fwait
push
lea
xchg
jp
jmp
xor
mov
inc
pop
jno
cmpsl
adc
shll
repnz
loope
adc
outsb
adc
stos
and
or
pop
bnd
fildll
xchg
dec
icebp
jp
out
mov
push
daa
daa
sbb
lahf
cmp
in
cmp
imul
jns,pn
and
lods
adc
lods
cltd
and
jl
clc
and
adc
pop
dec
sbb
adc
fimull
and
cli
jle
and
movsb
cmp
push
or
jge
mov
xchg
leave
pop
xchg
mov
ret
or
sub
cld
sti
ds
adc
jo
addb
inc
jno
test
and
fmul
pop
in
mov
es
int3
xchg
dec
ljmp
or
test
xchg
lock
sub
sarb
hlt
sbb
iret
mov
xchg
repnz
dec
leave
mov
pop
lcall
sbb
cmp
jo
int3
lret
mov
push
nop
xchg
xor
decb
xor
add
mov
jle
nop
lahf
shrb
add
insb
andl
out
into
fwait
push
rcrb
addb
in
xor
sub
xlat
inc
adc
sub
std
jg
sub
xor
cmp
push
push
jmp
cld
fisttps
cmp
js
test
inc
mov
xlat
jo
xchg
push
add
cmp
lea
sbb
inc
dec
cmp
adc
lock
mov
inc
out
adc
mov
jmp
in
adc
lahf
pop
dec
int
lock
mov
fnstsw
inc
aam
or
repnz
popf
hlt
in
sbb
push
jmp
cmpsb
push
and
push
fwait
call
out
push
scas
test
or
pop
mov
mov
test
or
shr
je
mov
je
push
mov
ljmp
cmpsb
cmpsl
inc
push
sub
push
data16
jb
jbe
inc
cmc
jmp
ds
sbb
push
test
add
mov
sbb
dec
sub
jo,pn
fildll
mov
xchg
lret
xor
test
mov
jnp
cwtl
iret
icebp
das
inc
push
push
or
test
mov
cmp
js
data16
mov
mov
pop
icebp
in
or
lock
ret
fprem1
std
daa
cltd
jp
cmc
inc
cld
mov
mov
movsb
xchg
push
fwait
sqrtps
je
cwtl
in
addr16
cmpsl
int
sub
std
ret
mov
cmp
nop
add
inc
fiadds
insb
xchg
scas
es
cmc
insb
mov
mov
and
mov
dec
andl
ss
shr
shrb
rol
pop
cltd
cli
popa
xchg
scas
dec
aaa
add
sahf
jo
sbb
ja
out
shr
pusha
pop
outsb
imul
and
sbb
sbb
add
push
jb
into
dec
ret
xchg
cmpsl
jg
push
adc
stc
out
leave
sar
pop
cmpsl
jmp
jg
xor
bound
leave
fnstcw
rclb
decb
sahf
fidivrl
or
out
adc
jecxz
pop
inc
inc
outsl
cmpb
jb
icebp
ja
push
or
and
iret
sarb
je
mov
dec
rclb
add
popa
push
movsl
cmpsb
sahf
sub
mov
jmp
inc
jmp
mov
or
outsl
adc
xchg
call
hlt
fs
jae
movsl
mov
add
outsb
fwait
adc
pop
test
sti
jle
out
or
inc
cli
mov
sar
stos
pusha
pop
inc
mov
mov
test
xchg
mov
lods
sahf
cmc
std
cmc
aas
mov
sti
loopne
loopne
push
cmp
mov
pop
inc
jnp
in
js
fwait
in
pop
jp
test
push
test
test
cmpsb
mov
pop
in
inc
or
or
in
rorl
test
or
dec
mov
push
es
or
in
out
std
lea
jno
sti
cli
repnz
sub
mul
sbb
inc
xchg
test
cmpsl
mov
mov
sub
mov
inc
mov
xchg
es
ljmp
push
repz
pop
mov
or
mov
aam
popf
cmpsb
shll
inc
enter
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
movl
jmp
int
cmp
rcr
mov
mov
inc
or
push
js
mov
sbb
mov
xlat
test
inc
push
pop
mov
dec
adc
jecxz
cld
rcrb
inc
popf
leave
hlt
or
enter
jns
test
scas
mov
fisttps
inc
cmp
add
adc
dec
xor
xchg
lea
fs
imul
inc
divl
out
scas
mov
pop
aam
fwait
rcl
call
add
add
leave
scas
fcmovnbe
hlt
push
bound
pop
test
hlt
sub
and
mov
mov
cwtl
add
daa
movsb
dec
pusha
pop
pop
push
inc
icebp
sub
imul
jno
push
jge
je
stos
sub
sbb
in
or
jb
or
cmp
mov
or
pop
bound
jns
daa
cmp
dec
pop
sahf
pop
dec
shrl
cmp
sbb
cmp
add
icebp
hlt
dec
notl
mov
jecxz
filds
jle
jo
sub
cwtl
fwait
xchg
es
shl
fs
mull
adcl
add
stos
xor
popf
and
mov
or
pop
sbb
adcb
outsl
add
or
divl
sbb
xlat
mov
ret
inc
add
outsl
cmpsb
mov
jbe
insb
mov
sahf
adc
mov
jl
adc
jns
mov
inc
pop
orl
dec
inc
hlt
inc
push
mov
enter
xor
xchg
into
mov
iret
mov
pop
xor
inc
subb
jae
ret
push
inc
push
push
sbb
push
in
inc
add
call
clc
sti
mov
adcl
mov
hlt
orl
mov
inc
in
push
sbb
xchg
sub
lret
cmp
orl
in
das
cmp
mov
sub
add
sub
movsb
popf
in
aas
lea
sbb
inc
sbb
sbb
sub
xchg
add
fcoms
pop
or
mov
inc
inc
mov
js
dec
ret
insl
daa
addr16
into
inc
push
mov
cmpsb
add
ljmp
icebp
cmpsl
jl
mov
ror
jns
int3
lods
in
push
lds
sbb
push
jbe
mov
cwtl
cwtl
cmpsb
iret
mov
mov
in
loopne
insb
dec
aam
add
inc
or
sahf
loop
je
xorl
pop
mov
arpl
inc
mov
ficoms
imul
bound
fcmovnb
orb
fmull
movsb
xchg
add
into
xor
shrl
ficompl
das
jge
movsb
stos
insl
cmp
out
push
mov
sub
ret
pusha
add
or
outsb
inc
pop
sbb
fidivs
lret
push
cs
and
iret
lock
cmp
shrb
lret
int
daa
sahf
repnz
push
ffree
push
lahf
cmp
adc
fbld
push
jo
xor
add
jns
fisubs
lcall
aad
gs
rorb
ret
mov
cmp
jne
jbe
cmc
cltd
jne
lods
popf
and
mov
xchg
jl
icebp
mov
pop
outsb
adc
repnz
mov
inc
in
bound
sbb
jg
aad
insb
mov
push
and
mov
xor
jo
push
jb
aad
dec
dec
xchg
dec
in
jge
out
mov
ss
dec
in
mov
popa
sub
mov
sub
add
dec
in
cltd
and
in
xor
mov
clc
mov
inc
test
iret
jnp
sti
mov
imul
xchg
jae
jl
inc
lods
iret
dec
inc
sub
push
lods
pop
aas
jae
and
push
cli
dec
cmp
sahf
int3
adc
aam
scas
popa
in
pop
lods
sti
sahf
mov
lods
int3
jns
in
mov
sbb
mov
insl
xor
sbb
jl
cmp
cmp
push
dec
call
pop
jb
push
push
and
fcompp
out
adc
xchg
imul
mov
xchg
add
js
push
popf
lock
inc
fs
cwtl
mov
pop
pop
scas
jp
es
std
cs
xor
inc
jb
cld
adcl
cltd
sbb
int
push
rol
mov
filds
xor
push
inc
pusha
or
or
ss
adc
jbe
leave
and
scas
mov
stc
ss
scas
inc
jp
mov
fs
cmp
and
fadds
lock
jmp
leave
mov
leave
jl
lods
aam
cld
push
call
push
js
pop
aam
aam
in
sti
fidivl
adc
es
incb
mov
jbe
sahf
cmp
cmp
mov
xchg
pop
aaa
in
into
mov
xorl
dec
sub
jle
xor
imul
add
mov
in
xchg
fs
test
dec
xor
xor
enter
inc
repz
xor
dec
push
sub
push
fldcw
push
cmpsl
loop
add
sbb
ror
xor
mov
or
cmpsb
mov
sbb
fildll
aaa
ret
fistps
mov
lret
cmp
dec
jne
xor
rcrl
test
mov
je
push
dec
in
jae
and
aam
inc
cwtl
push
adc
xchg
adc
jecxz
mov
or
push
mov
stos
iret
pop
mov
repnz
push
sub
inc
fcmovbe
lock
sbb
inc
repz
dec
xchg
or
iret
push
pop
push
xchg
lcall
sar
pop
sbb
pop
and
inc
dec
jle
stc
shrl
jg
mov
repnz
cmp
nop
dec
imul
mov
mov
imul
xor
mov
in
insl
mov
outsb
loopne
or
repnz
sub
xchg
fdivs
cltd
jbe
cmp
daa
andb
out
or
das
or
and
and
mov
testl
xor
pop
sbb
xchg
xchg
in
pop
add
ret
dec
ljmp
pop
lods
enter
les
pop
push
stos
or
repz
outsl
jae
popf
mov
les
es
lock
jmp
fimuls
jb
adc
clc
sbb
mov
pop
loope
setl
xor
adc
stos
pop
adc
sub
add
ret
pop
sahf
jmp
dec
push
loope
imul
sub
aaa
das
popf
dec
cmpsb
insb
add
jg
mov
xchg
mov
adc
cmc
mov
mov
mov
jb
cmp
mov
out
insl
notb
and
mov
dec
outsl
test
sarl
pop
mov
loop
ja
adc
xchg
xor
sbb
xchg
inc
call
stos
insb
add
aam
jne
lret
mov
or
add
mov
pop
xor
push
dec
adc
jb
mov
sub
out
adc
sbb
pop
sbb
mov
mov
fidivrs
out
jo
lds
test
push
nop
sub
push
add
jb
pop
loop
dec
xchg
flds
xchg
sbb
xor
test
xor
rorb
rep
lds
mov
xor
cmp
sbb
mov
daa
inc
ret
cmp
fidivs
inc
pop
xchg
into
mov
xor
and
inc
or
fisubrl
mov
sbb
push
fwait
adc
out
mov
xchg
pop
das
lds
cwtl
xchg
add
inc
inc
dec
or
jmp
sub
push
fldenv
xchg
js
cld
cld
cmpl
xchg
push
arpl
cld
lret
jp
mov
lcall
scas
xchg
sub
mov
pop
or
test
or
scas
mov
jae
cmp
mov
and
in
mov
jo
jnp
ret
sbb
out
or
aaa
push
in
xchg
push
mov
sbb
jne
popl
cmp
and
or
mov
push
xchg
add
dec
add
mov
andb
popf
mov
mov
mov
and
inc
sub
adc
dec
cmp
hlt
jmp
outsb
jo
xchg
pop
sub
mov
movsb
jno
or
test
dec
mov
je
andl
cmp
mov
dec
push
inc
imul
mov
xor
sahf
sbb
push
das
loop
mov
mov
mov
icebp
cmp
cmp
into
test
cld
pop
or
mov
iret
ljmp
mov
lcall
clc
xchg
xor
and
jno
push
pop
dec
insb
mov
das
fwait
es
orl
jmp
int3
sarb
fidivrl
icebp
out
jmp
adc
push
js
shr
cli
adc
sub
in
outsb
mov
jns
push
sti
pop
mov
xchg
xor
gs
cmp
add
mov
mov
mov
ja
and
iret
test
sbb
std
mov
or
ffree
add
repnz
aas
jae
shl
jg
addl
xor
nop
ljmp
iret
ret
mov
loope
fildl
add
popa
xorb
dec
jns
ds
jnp
out
aad
and
iret
pushl
jle
push
cmp
insl
sub
lea
es
and
pop
aaa
ljmp
add
lods
sub
xchg
push
sbb
mov
push
pop
xchg
lds
sub
xchg
sub
jae
mov
pop
hlt
fs
jecxz
in
jno
ret
mov
shrb
or
add
lods
ja
scas
mov
lds
sahf
mov
stos
out
sub
fnstenv
push
fbstp
movsl
mov
sub
shll
ss
mov
ss
pop
cwtl
mov
out
mov
ss
pop
call
aas
lods
data16
ljmp
xor
loopne
jmp
daa
fdivs
fisubrl
mov
shll
insl
pop
cmpsl
mov
push
scas
pop
jg
imul
fs
movsb
or
je
mov
inc
mov
popw
jecxz
scas
aam
push
rorl
je
pusha
mov
gs
mov
das
popa
ljmp
stos
pop
or
push
das
push
or
inc
add
mov
adc
push
inc
mov
sbb
push
push
les
xor
sbb
mov
xor
dec
mov
push
dec
test
fdivp
pop
cli
clc
adc
push
fstps
add
mov
test
push
out
add
stos
mov
push
or
pusha
je
inc
ret
out
push
ljmp
fdivs
rcrb
dec
sub
xchg
add
sbb
sub
xlat
aaa
cltd
adc
sarl
imul
mov
inc
mov
dec
int3
mov
mov
push
mov
inc
sub
inc
rclb
int
insl
dec
sahf
xchg
fs
rcl
idivl
jb
push
clc
test
movsl
inc
incl
scas
leave
mov
call
lock
xchg
pushf
dec
jecxz
stos
psadbw
inc
push
call
jb
fcos
das
divl
ja
xor
mov
sub
push
mov
cltd
jg
mov
dec
and
iret
insl
and
jns
xchg
fdiv
dec
scas
dec
mov
popf
adc
mov
out
dec
mov
pop
mov
es
imul
jp
ja
jmp
ds
loopne
push
lds
aam
int3
add
fiadds
and
inc
insb
mov
lds
dec
mov
inc
std
push
shrl
popf
pop
in
imul
and
in
xor
mov
out
arpl
cmovp
pop
cmp
daa
rclb
lods
daa
mov
sarl
fistpl
pop
mov
aaa
fsubp
lods
and
adc
rcll
hlt
ror
cmc
mov
rol
jo
inc
lret
stos
sbb
loope
cwtl
fs
push
mov
jno
mov
icebp
in
scas
fiaddl
rcrl
jge
pop
mov
add
mov
mov
popf
jo
mov
jbe
jecxz
es
daa
ljmp
mov
int3
leave
xor
sub
inc
pop
subb
lds
jl
push
out
sbb
pusha
repz
aam
adc
imulb
sbb
dec
adc
adc
add
incl
jg
insb
xor
or
fcmovnb
test
aas
mov
and
and
mov
ljmp
divb
and
or
sub
inc
bound
xor
dec
ficoms
sub
push
rsm
jl
xchg
xorl
xchg
jg
or
rcrl
loope
cmpsb
adc
iret
xor
js
cmpsl
std
mov
repnz
aad
xor
lea
push
rcll
in
div
pop
rol
push
lock
rorb
cld
ficoms
pop
into
scas
and
mov
hlt
lret
ret
or
cmp
ds
fcompl
ret
mov
cmpsb
mov
loope
pop
dec
add
xor
add
mov
add
jmp
cmp
rcl
ror
int
sub
stos
adc
sbb
push
js
mov
jne
pop
xchg
iret
sbb
xchg
sub
mov
cltd
popa
dec
testb
imul
imul
adc
fwait
ss
adc
call
insb
push
or
hlt
adc
outsl
shrl
cmpsl
push
push
repnz
push
cmp
leave
mov
cmp
adcl
xchg
mov
inc
xor
jb
je
and
out
call
cwtl
mov
cmpsl
or
dec
aad
jbe
jnp
sbb
rcr
mov
in
pop
pop
pop
xchg
stc
roll
rcll
xchg
cli
sbbl
dec
lcall
test
adc
scas
dec
push
inc
or
insl
mov
dec
jp
sbb
pop
stc
add
push
shlb
pop
xchg
jnp
xor
inc
ret
in
ja
out
jmp
xor
and
sub
sub
in
rorl
mov
and
loopne
cs
mov
xor
jmp
push
xchg
push
ljmp
sub
mov
pop
sti
lahf
dec
enter
jb
adc
xlat
out
cld
jno
jmp
inc
fwait
ss
jns
std
xchg
test
pop
push
push
add
mov
push
into
cmp
push
or
scas
push
jnp
fwait
icebp
adc
push
negl
int3
shll
imul
jo
test
jp
push
pop
mov
dec
cmp
popa
dec
xchg
push
arpl
fs
jg
mov
sbb
mov
jae
pop
movsl
loope
mov
ficoml
inc
jnp
lret
pop
mov
adc
jnp
mov
mov
scas
out
cwtl
aas
dec
js
call
jmp
and
lcall
push
cmp
xchg
pop
pop
or
and
dec
inc
rcll
stos
aas
xchg
and
out
xor
nop
xlat
test
sbb
xchg
xorl
mov
es
pop
mov
mov
sbbb
pop
sti
pop
call
adc
mov
mov
shrl
ja
bound
fsub
out
dec
popf
repz
popa
xchg
inc
xor
add
jno
push
ljmp
push
adc
daa
sub
pop
fnstenv
xchg
lahf
lods
or
outsb
into
stos
fldl
loop
aad
push
pop
pop
inc
cltd
addr16
mov
xor
imul
cld
test
mov
fidivs
aas
xchg
or
aaa
xor
das
pop
lds
pop
popf
jmp
xor
fsubrs
fs
dec
bound
loopne
add
xchg
aad
xchg
movsb
insl
cwtl
scas
cmp
fstl
fldenv
xchg
aas
pop
or
inc
test
fmull
adc
cwtl
and
ds
hlt
or
shl
xchg
add
mov
dec
push
and
pop
rorb
pop
cmc
mov
sbb
mov
int3
addr16
divl
cld
xor
lock
fisubrs
scas
push
repz
popf
mov
xchg
movsb
lds
adc
sub
call
insl
nop
and
sub
and
test
xchg
push
and
mov
test
std
aaa
jecxz
cmp
pop
jns
pop
xor
ffreep
test
lea
and
int3
int
cmp
idivb
rcr
mov
mov
add
xchg
cmp
pop
lds
xor
lcall
fimuls
pop
mov
or
dec
or
addr16
lods
lret
jbe
or
mov
sbb
add
mov
cmp
xorl
adc
shll
and
mov
aad
adc
push
lds
pushf
or
negl
mov
stos
inc
jmp
das
cmp
xor
loop
or
lds
fwait
les
or
mov
cmp
cmp
xchg
jo
jnp
and
pop
jb
outsl
or
jl
testb
xchg
aam
bound
inc
or
leave
dec
insb
scas
jo
fimull
les
mov
adc
iret
mov
loope
inc
std
cs
cmp
scas
mov
cs
xchg
aaa
notb
into
dec
addr16
push
out
pop
mov
adc
call
xchg
pushl
cmp
stc
dec
dec
and
dec
mov
add
insb
lahf
andl
xor
dec
lahf
mov
movl
mov
xor
mov
movb
and
jmp
ror
iret
rol
stos
adc
jb
pop
shr
push
js
push
js
pop
xchg
cmp
pop
ja
xor
push
sbb
push
imul
repnz
jne
in
adcl
jb
popf
daa
inc
out
stos
sbb
mov
shl
aaa
xchg
mov
dec
ficomps
cwtl
inc
call
mov
scas
jb
mov
aad
ficomps
lock
stos
push
sbb
pop
or
lret
add
pop
test
and
les
jge
les
or
fldt
jne
xchg
inc
leave
fistl
mov
adc
cwtl
mov
cmp
aaa
insl
push
cmp
pusha
cmp
insl
out
aas
std
sbb
out
das
fcmove
int3
xorb
lds
add
jne
push
out
mov
mov
mov
jecxz
jecxz
in
dec
jecxz
lock
push
ljmp
cmp
out
in
or
jno
dec
pop
inc
sbb
jmp
xchg
sub
in
sar
je
loope
test
push
shlb
xlat
jnp
jne
adc
stc
mov
movsl
aaa
and
in
fnstenv
mov
or
pop
pusha
pop
lock
jle
hlt
xor
xchg
jae
scas
imulb
out
sbb
dec
adc
bound
ret
test
inc
mov
mov
ret
popf
inc
scas
cmp
inc
mov
jnp
loope
mov
fidivl
add
je
push
test
das
daa
fcoml
in
xchg
sub
push
cltd
aas
int3
int3
mov
mov
xor
sub
and
pusha
jmp
push
jno
xchg
xchg
adc
xor
inc
push
call
mov
jecxz
xor
testb
push
jne
scas
fs
push
dec
cmp
int
movsb
cwtl
push
cli
dec
adc
sub
aaa
adc
iret
je
jno
pop
pop
pop
or
fs
inc
call
daa
or
xor
or
and
add
out
fbstp
xchg
jb
jl
add
aad
addr16
loope
xchg
dec
sub
out
out
and
ds
repnz
sub
xchg
daa
push
in
lcall
mov
inc
xor
jecxz
testl
ds
popa
inc
pop
popf
mov
inc
or
lret
sbb
aas
repz
jns
adc
mov
xchg
sub
or
aam
fistl
pop
mov
sahf
or
inc
inc
enter
pop
xchg
adc
or
les
in
cmpsl
les
notb
xchg
cmc
fsubr
push
imul
mov
les
push
imul
pop
test
in
xchg
fldenv
mov
jp
inc
sti
jmp
mov
ss
loop
mov
xchg
push
cmp
and
xlat
push
lods
into
in
je
fistl
pop
into
pop
sub
xchg
pushf
int
icebp
inc
push
aaa
cmp
ret
cmp
push
loop
mov
ds
sarl
lret
stos
sub
mov
les
and
mov
test
and
sub
xor
in
clc
fs
cmp
insb
inc
outsl
in
imul
int
jne
movl
mov
sub
xor
out
sub
test
cld
cwtl
jle
cmpsl
push
iret
xchg
inc
inc
js
fdivrl
mov
sarl
out
adc
jbe
jns
add
testl
mov
jp
xchg
cmpsb
fisubs
or
aaa
xorb
scas
sbb
pusha
or
mov
push
push
mov
ds
adc
sub
xchg
push
jo
sub
cmp
scas
stos
shrl
ljmp
mov
sbb
pushf
mov
movsl
mov
lret
fwait
bound
mov
mov
and
movb
lret
add
jl
fldl
add
out
mov
mov
rcr
sbb
or
adc
popf
test
mov
jbe
push
xlat
lret
incb
sbb
xlat
adc
ret
mov
les
push
sub
cmp
cmpsl
mov
or
xchg
inc
jb
and
jmp
jne
lods
out
pusha
jno
outsl
lret
jbe
imul
sbb
dec
enter
punpcklwd
inc
fucomi
xor
fwait
hlt
lods
sub
and
cs
jg
or
cltd
jg
dec
repz
push
jge
fisubrl
shll
in
popa
cltd
jae
dec
call
add
in
sbb
adc
pop
movsl
xor
mov
mov
mov
or
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
sub
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
call
jmp
add
jmp
iret
ror
aas
rol
iret
rcll
cs
mov
sbb
and
push
js
aas
sbbl
scas
push
push
adc
xchg
out
sub
rolb
mov
and
inc
mov
mov
into
pop
shr
sbb
int
fistl
std
jne
cmpsb
rclb
mov
push
push
inc
pushf
jle
fidivrl
push
xor
mov
cli
into
fnstcw
add
icebp
adc
pop
jmp
adcl
popa
sub
cmovp
cmpsl
fsubrl
sbb
xor
int
stos
and
shll
xchg
in
loope
test
call
cmp
dec
jmp
sub
sbb
rcll
rcrl
sub
lods
subb
fs
xchg
ficompl
mov
out
int3
rclb
sbb
sti
push
in
pop
push
cwtl
xchg
adc
or
subl
repz
subb
xor
faddl
mov
ret
push
or
pop
orb
jae
jo
and
sub
add
leave
jbe
movl
stc
xor
or
stc
lods
mov
loopne
hlt
jbe
dec
cmp
add
sub
ljmp
testb
sub
adc
mov
xor
and
int3
jbe
mov
inc
sub
insb
hlt
xor
std
add
sub
add
sub
fiadds
adc
pop
cmpsl
outsl
pop
cld
dec
cld
gs
inc
out
jle
aas
bound
push
repz
icebp
lcall
repz
mov
cmpsl
mov
ss
aad
sub
jle
sbb
and
and
ret
arpl
arpl
bnd
je
adc
inc
dec
mov
hlt
adc
lcall
xor
and
aas
jl,pn
jecxz
sti
pop
xchg
pop
pop
mov
pusha
mov
add
add
mov
sbb
jne
lea
sub
pop
pop
inc
pop
or
pop
test
adc
push
sbb
cltd
xchg
lret
cmc
xorps
js
mov
in
inc
enter
mov
sub
push
jbe
add
dec
mov
fnstcw
ljmp
pop
mov
imul
xor
or
add
xchg
pop
cmp
test
outsl
das
xchg
pusha
mov
lret
xlat
and
fcoml
and
out
add
inc
lret
push
gs
and
mov
sub
ja
adc
clc
fidivs
bound
lock
cmp
lahf
xchg
mov
adc
inc
jns
add
jns
push
mov
push
leave
insb
repz
mov
mov
orb
jecxz
dec
lret
fistpl
int3
push
cmp
mov
and
push
insl
add
shlb
lods
fldenv
adcb
dec
je,pt
jno
sbb
lret
sub
adc
push
fs
mov
jo
inc
clc
repz
push
cmp
mov
arpl
notl
jge
bound
clc
mov
xor
mov
insb
int3
std
push
cmp
sub
xchg
inc
sub
mov
out
lock
inc
xlat
arpl
cs
dec
jecxz
mov
hlt
jecxz
test
mulb
jns
xchg
push
push
sbb
adc
ss
and
sub
adc
pusha
aam
push
dec
sub
and
mov
mov
fabs
jl
lock
notb
cli
insl
xchg
bound
adc
add
push
popf
ffree
negb
push
outsl
push
mov
fnop
jecxz
mov
js
dec
lret
outsl
cs
jl
sub
vmwrite
ret
push
out
or
mov
clc
inc
sub
leave
sbb
sti
xor
xor
pop
repnz
jmp
inc
push
cmpsb
push
lahf
dec
pushf
sahf
in
shrb
imul
ljmp
shlb
popa
adc
popa
icebp
dec
arpl
jp
sahf
sbb
sbb
ret
jbe
cmp
lods
dec
lea
call
cmp
fistl
inc
repz
inc
sbb
cmp
push
lret
mov
jmp
aad
repz
stos
ja
rorb
fwait
mov
dec
lock
mov
mov
and
jge
inc
add
mov
mov
sub
or
jmp
xlat
ror
aas
leave
rcr
rolb
xchg
cwtl
fisubl
js
jl
js
nop
aaa
fcmove
mov
movsb
test
or
cmp
jno
pusha
fwait
nop
gs
mov
adc
outsl
sub
lret
sub
es
lea
mov
mov
xor
push
jo
ja
jns
add
sub
mov
dec
ret
cmpsl
push
jbe
push
push
jp
sub
or
cltd
cmp
mov
pop
adc
push
lret
aam
and
adcl
pop
gs
pop
dec
fidivs
movsl
shlb
pop
aam
jp
lock
jmp
gs
popa
mov
xor
mov
pop
sub
mov
mov
hlt
mov
jp
push
adc
int3
lret
nop
jmp
lea
fidivl
xor
mov
test
pop
into
test
mov
xchg
jnp
dec
enter
outsl
cmp
and
das
pop
insl
push
jge
mov
dec
lds
add
cmp
xor
shlb
mov
sbb
xchg
aam
sub
insb
popf
shlb
xor
outsl
dec
loopne
mov
sub
or
or
in
xchg
cld
cli
in
xor
ror
cmp
in
dec
popl
cmp
pop
add
xor
mov
inc
pop
inc
sub
cltd
fsubs
and
test
pop
inc
pop
dec
test
insb
xchg
lret
cmpsb
roll
js
sar
or
xor
and
mov
cltd
xlat
in
lret
imul
cmp
aam
dec
sbb
popf
xor
rcll
sub
aam
pop
sbb
sbb
adc
jne
jo
sub
sarb
adc
cs
ja
xchg
cmp
add
imul
fwait
out
jo
adc
jbe
popf
imul
push
aam
dec
jo
cmp
movl
mov
xchg
sti
fimuls
inc
aad
sbb
fisubrs
ss
add
jmp
cli
jno
repnz
cli
pop
rcr
add
and
jp
pop
stos
mov
jle
pop
in
jne
push
jb
jg
or
enter
xchg
cmc
fists
sbb
and
les
cmovge
aad
pop
leave
fwait
jnp
push
cltd
inc
and
inc
out
icebp
aam
scas
mov
cmpsb
outsl
inc
mov
std
dec
jl
or
fldcw
xor
cmp
ja
scas
movsb
sbb
jp
fnsave
icebp
mov
int
adc
dec
jbe
test
aam
cmpsl
mov
dec
mov
xchg
jns
mov
ret
aam
adc
cmpl
outsb
xlat
mov
sbb
mov
or
ret
loope
in
add
jae
jno
orl
pop
nop
jle
xchg
std
les
xor
inc
ja
fwait
or
mov
inc
test
push
or
fidivs
lods
int3
jmp
je
lods
jae
shrl
inc
push
add
mov
dec
push
dec
mov
inc
dec
stos
xchg
test
or
xchg
xchg
loop
ret
adc
iret
das
lods
jne
jge
xchg
xor
push
pop
cmp
sbb
xchg
dec
inc
es
ret
mov
sbb
sub
fdivl
imul
inc
js
push
jl
lahf
sub
test
inc
pop
sbb
outsb
shl
enter
popa
jnp
adc
fidivrs
cmp
jns
inc
pop
sbb
jg
dec
icebp
xor
mov
pop
into
rclb
mov
pop
cmp
addr16
inc
mov
mov
repnz
cmpsl
lret
ja
mov
dec
jo
in
push
out
add
daa
dec
cmp
mov
stc
mov
and
mov
fists
sarb
gs
out
xchg
in
mov
push
repz
cs
popf
sbb
xchg
loopne
into
mov
mov
pop
or
out
movsb
sub
sub
pop
and
pop
js
aam
cmp
in
mov
sbb
lahf
fs
and
fmuls
mov
adc
call
adc
push
stc
dec
adc
inc
ljmp
sbb
sbb
add
xor
test
icebp
push
push
adc
jne
testl
dec
sbb
fdivrp
psubusb
pop
out
mov
jns
loop
mov
mov
ss
xchg
fistl
and
jo
add
mov
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
jmp
cmp
aad
dec
add
test
das
js
push
js
ds
pop
inc
inc
scas
clc
add
push
das
or
rolb
pop
insl
push
lods
lods
push
cld
xorb
mov
movsb
xchg
test
scas
sub
sub
std
and
fldl
push
stc
arpl
xchg
jns
fidivs
inc
and
clc
push
sbb
in
pop
mov
jmp
jecxz
sbb
enter
or
in
ljmp
inc
je
cmp
mov
and
push
repz
aaa
push
mov
inc
cmp
adcl
or
sbb
xor
ss
jnp
ds
mov
push
iret
jno
sahf
fistl
pop
push
jbe
pop
push
imul
jmp
mov
pop
jo
xchg
jg
aad
pop
pop
cmp
scas
cmp
mov
adc
xor
imul
mov
cmpsb
jnp
jb
inc
shll
fisttpll
pop
shlb
lock
cmc
lret
adc
shll
rcrl
ja
jne
add
outsl
adc
shrb
xchg
pop
push
movsb
dec
cs
inc
sbb
fdivl
insb
mov
into
into
mov
ja
ffreep
repz
mov
rolb
inc
test
or
mov
out
and
push
outsb
daa
outsl
dec
push
fdivrs
jg
sub
xchg
daa
sub
xchg
or
imul
arpl
xchg
cli
sti
sbb
stos
insl
sub
mov
push
xchg
into
mov
pushf
mov
fimuls
xor
or
cmp
push
add
push
ds
sbb
and
nop
call
cmp
xor
add
fldl2t
pop
dec
lret
nop
dec
stos
jno
xor
cmp
and
mov
push
in
push
in
mov
and
push
mov
pop
mov
das
mov
pop
orl
xchg
pop
js
inc
les
icebp
fwait
and
rcll
repz
dec
cmp
loop
ljmp
sub
outsl
or
scas
dec
add
sbb
mov
in
mov
cltd
mov
push
fwait
or
mov
pop
clc
or
pop
fstpl
rclb
adc
jge
sti
lret
pop
xchg
mov
fisttps
push
and
mov
movb
ds
cmpsb
and
pop
repnz
dec
dec
mov
mov
out
adc
xchg
xchg
and
negb
or
iret
jmp
mov
int3
cmp
call
xor
xor
sti
cltd
ret
mov
or
imul
addr16
pop
out
iret
pushf
pop
das
aaa
sti
ret
test
rolb
mov
mov
and
arpl
pop
dec
pop
nop
jmp
repnz
xchg
aas
jne
pop
nop
xchg
pop
clc
out
add
mov
push
pop
sbb
or
pop
sti
das
clc
cmpb
mov
cmp
add
or
sbbl
or
jge
or
je
movsb
stos
test
push
mov
addl
mov
mov
inc
test
adc
fs
add
int3
imul
bound
xorb
fdivr
mov
xor
xchg
jl
ss
xlat
dec
in
insb
sub
add
jl
in
out
in
out
sti
dec
mov
not
mov
jmp
mov
jp
nop
icebp
popa
into
sub
in
push
popf
dec
mov
xorb
js
popf
in
ja
xchg
daa
stos
pop
mov
sub
mov
les
pop
xchg
iret
sbb
inc
jg
imul
cmp
in
adc
sbb
repz
pop
cmp
xchg
mov
and
pop
cs
mov
mov
inc
push
pusha
or
mov
test
xor
jl
lret
inc
jno
es
push
sbb
and
lret
imul
cmp
xor
xor
sub
pusha
cmp
jb
adc
mov
fists
jbe
data16
and
add
jne
xchg
lods
mov
xor
adc
jle
out
call
les
sub
sub
rcrl
mov
add
xchg
cmp
dec
jl
cmp
in
pop
push
aam
xchg
jb
push
arpl
test
shl
pop
jno
shll
scas
sub
adc
mov
ret
mov
pop
nop
mov
lret
and
add
xor
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
adcl
add
jmp
enter
rcl
iret
shlb
push
jmp
js
jl
js
xlat
adcb
mov
dec
push
mov
cmpsl
mov
jbe
es
cmp
sbb
inc
push
notl
test
dec
add
xchg
xchg
mov
enter
insl
loop
xchg
mov
insl
adc
cmp
hlt
lret
pop
cld
sti
sub
push
icebp
mov
xchg
mov
subb
xor
push
xor
cmpsl
out
mov
mov
sarb
aam
out
dec
mov
and
push
adc
imul
sbb
sub
mov
dec
int3
mov
int
js
sbb
shr
push
xlat
mov
out
call
mov
je
popa
mov
mov
jns
divb
ret
sub
test
push
lahf
xor
bound
jge
ss
xlat
mov
jle
mov
cmp
jae
ds
inc
into
dec
movsb
les
cld
neg
xchg
mov
sub
pusha
hlt
jno
fwait
addr16
jmp
push
push
and
vphaddbw
jge
sub
into
sub
mov
push
lret
pop
js
aad
mov
imul
jle
ds
sub
popa
xchg
sub
fisubl
pop
in
push
cltd
mov
out
push
mov
loope
adc
shll
ret
fstpt
loope
push
iret
cmp
scas
mov
sahf
sub
out
lret
xchg
out
pop
xor
loop
push
stos
das
fs
mov
ds
mov
out
ror
fsubrp
cmp
flds
imul
pop
aaa
cmp
ret
xchg
xor
mov
icebp
shrl
hlt
jge
inc
adc
in
push
daa
push
mov
jle
dec
push
bound
inc
test
cmpsb
lahf
leave
and
enter
sbb
mov
pop
sbb
xor
jg
pushf
or
pop
push
mov
mov
inc
mov
cs
or
in
and
pop
mov
push
push
push
scas
leave
lock
mov
jbe
xchg
add
lods
dec
jno
xchg
fistpl
dec
dec
outsl
andl
aaa
and
mov
sahf
adc
out
jg
fdivrs
jbe
mov
rol
fadds
cmpsl
daa
inc
xor
cld
fs
sub
add
cmp
and
lahf
stos
cmp
sahf
push
cmp
xchg
or
pop
push
int
cmp
dec
stos
rep
aaa
rcl
or
push
cmp
sub
into
inc
sahf
in
pop
inc
or
jp
movsl
sti
into
xor
xchg
inc
pop
popf
in
push
std
sub
push
lcall
arpl
pop
bound
inc
jmp
pop
and
jg
or
sub
neg
std
ret
in
fisttpll
mov
in
call
cmpsl
fsubs
popa
cmc
scas
sti
cmp
in
in
jl
pusha
cmp
cs
ret
mov
scas
dec
lds
cmpsb
mov
out
into
shrb
test
stos
mov
xor
xor
shl
aad
lods
in
fyl2x
dec
jns
sbb
add
cwtl
sub
push
rcrb
pop
sbb
mov
pop
mov
into
inc
add
push
loop
hlt
mov
pop
daa
cmp
push
lret
loop
sbb
xchg
cmp
jp
aas
orb
mov
mov
inc
or
daa
sbbb
addb
ljmp
aam
inc
aaa
push
in
je
ss
cmp
push
cmp
cmp
sub
idiv
pop
into
xorl
lods
ficoml
negb
stos
out
cwtl
movsl
cmp
vandps
lcall
inc
add
xchg
adc
cltd
push
push
mov
es
pushf
sbb
stos
xchg
xchg
push
pop
and
sbb
sbb
mov
xchg
cmp
mov
ficoml
push
jmp
dec
imul
cmc
sbb
test
inc
cmp
pmullw
mov
loopne
shll
mov
add
aam
inc
out
insb
and
arpl
sbb
test
or
inc
dec
dec
cmpsl
push
ja
pop
pop
pop
sbb
int
daa
and
push
mov
aam
sbb
jmp
ret
int3
fcmovbe
rcl
movsl
or
push
aaa
and
js
insl
pop
adcb
ror
outsl
or
adc
out
pop
dec
das
in
aas
jns
mov
pop
cld
test
fs
outsb
sar
lret
movsl
mov
fnstenv
cli
jbe
leave
sub
dec
push
or
je
and
cmp
jle
adc
push
arpl
cli
jl
arpl
jp
fcomps
hlt
mov
dec
sahf
pushf
mov
mov
mov
cmp
in
ficoml
sub
sti
mov
add
orl
mov
in
cmp
mov
mov
lds
shll
push
test
mov
fbstp
inc
or
mov
jg
dec
or
call
xor
xchg
and
jg
aas
stos
xchg
lahf
and
xor
aam
out
es
dec
and
aas
pop
imul
pusha
shll
sub
test
push
or
jno
pop
adc
sbbb
jns
add
shl
icebp
out
addb
xchg
mov
scas
shrl
cmp
pop
xor
es
data16
loopne
cmp
cmpl
hlt
adc
sbb
mov
in
dec
mov
repz
jb
push
lret
shll
into
cwtl
out
gs
fsubl
out
add
dec
mov
push
sbb
push
or
jb
cmc
testl
push
inc
cmc
cli
daa
nop
cmpsl
loopne
loopne
shl
mov
movsb
and
sbb
cmc
aad
incl
xor
imul
loope
xchg
xor
pop
add
data16
ja
push
dec
cmpsb
and
cs
iret
or
aam
popa
test
xchg
lods
out
out
test
or
dec
lock
xor
cmp
fistpll
pop
jecxz
dec
sbb
and
mov
nop
adc
dec
push
mov
mov
xchg
test
js
mov
mov
dec
repz
jbe
xor
insl
mov
loop
cli
std
outsl
cmpl
outsb
iret
test
nop
jns
push
fiadds
test
ret
sub
mov
sti
push
ljmp
pop
std
nop
ljmp
aaa
jne
test
jnp
pop
push
or
sbb
sub
movb
sub
jno
and
ja
sti
jno
jns
mov
xchg
fcmovu
test
add
push
lods
dec
addr16
push
imul
sub
fs
add
cmpb
mov
fiaddl
mov
int
into
push
pop
shlb
mov
lret
lds
and
dec
xor
addr16
and
dec
adc
clc
cmp
inc
pop
cld
fcmovu
cmp
rcr
out
lcall
out
aaa
loopne
stos
inc
es
mov
lret
inc
out
adc
mov
push
nop
jp
movsl
lcall
cmp
daa
cld
dec
mov
or
or
movsl
stc
dec
dec
dec
fwait
inc
fadd
pushl
rclb
testl
fs
aad
pop
and
call
pusha
ret
fisubl
js
pop
jmp
jp
insb
xchg
push
stos
nop
jg
ljmp
mov
xor
jne
inc
outsl
sbb
xchg
aaa
test
aas
jmp
xchg
xchg
jb
dec
fadds
rcrb
cmc
inc
xor
fcoms
cli
hlt
adc
xor
jge
pop
in
stos
data16
mov
out
ss
jns
add
inc
and
dec
call
jmp
outsl
push
scas
mov
jmp
adc
movsl
inc
mov
mov
cmp
xchg
mov
scas
push
ja
pop
add
sbb
fsubs
in
jnp
mov
pop
movsl
test
repz
insb
jg
test
push
dec
lret
fwait
and
or
shll
mov
adc
stc
enter
jbe
jns
mov
insl
lret
jg
loope
or
push
mov
fisubrl
pop
and
in
jbe
int3
pop
les
fcompl
addr16
mov
roll
mov
push
mov
insl
cwtl
pop
jge
daa
mov
dec
fbstp
insl
dec
mov
mov
push
adcb
mov
and
mov
jp
je
sub
ss
push
mulb
in
dec
loopne
cs
enter
decl
loop
xlat
adc
das
inc
add
decl
add
ret
ror
aad
or
and
adc
js
push
js
mov
pop
mov
lret
scas
pop
add
pusha
mov
add
sub
lret
outsb
psrlq
cmc
loop
aas
aam
sbb
loopne
dec
push
mov
sub
in
bound
out
adc
pusha
scas
mov
adc
sub
push
cmc
and
xchg
ret
pop
mov
test
ja
xchg
cs
movl
sbb
adc
adc
cmpsb
pusha
pop
pop
jne
cli
stos
fcomps
mov
adc
leave
cltd
cli
jno
pop
das
shlb
adc
stos
lds
pop
xor
mov
xor
sub
sbb
lods
popa
sbb
aaa
dec
call
sub
push
sbb
into
add
sbbl
mov
movsb
mov
jg
mov
movsb
es
ss
aas
data16
addr16
out
and
push
and
or
les
pop
roll
seto
orb
xor
push
dec
pop
mov
mov
ja
mov
out
lret
stc
js
sbb
xor
test
test
repz
inc
sbb
adc
push
movsl
loope
push
out
lret
and
notb
xor
test
pop
lea
addr16
ljmp
xchg
mov
aad
mov
ret
out
ljmp
cmp
cmp
int3
aam
arpl
mov
call
sbb
inc
or
mov
dec
mov
adc
sub
or
shld
int3
adc
add
cmpb
ret
or
iret
lahf
mov
std
out
in
xor
std
fmulp
shrl
loopne
jmp
inc
xchg
mov
and
call
sub
loop
mov
sub
jbe
div
push
aam
loope
mov
arpl
mov
lret
fidivs
cmp
cs
out
add
push
add
adc
inc
gs
cmc
verw
xor
mov
loopne
dec
nop
or
lret
daa
jne
xchg
or
xor
lods
xchg
loopne
insl
cmc
push
mov
jl
push
or
ljmp
xchg
shlb
inc
in
push
subb
es
or
xor
data16
in
inc
test
and
jbe
xchg
in
popf
mov
aaa
je
jecxz
clc
sub
mov
in
and
lds
mov
cwtl
movsb
rorl
add
push
iret
cmpsl
sbb
mov
in
pop
cltd
and
test
adc
xchg
int3
enter
fistpl
mov
repnz
mov
jne
fnstcw
sbb
xor
aam
pop
adc
mov
addr16
add
add
xor
insl
test
jbe
sub
sub
jbe
mov
sahf
adc
dec
add
mov
pop
mov
arpl
out
and
shlb
adc
dec
or
mov
adc
jae
and
das
mov
call
sti
mov
cltd
fisubs
push
out
out
jns
sbbl
mov
cmp
mov
dec
js
loope
xchg
dec
popf
test
adc
or
ds
int3
dec
cli
lret
push
arpl
mov
loopne
adc
sbb
jbe
inc
mov
mov
lcall
push
insb
add
es
and
adc
and
test
mov
push
pop
or
pop
mov
mov
or
mov
lret
add
mov
int
push
dec
pusha
push
pusha
or
insb
inc
popf
push
testl
enter
push
pushf
or
iret
adcb
or
pushf
adc
sbb
pop
sub
or
scas
mov
and
out
fisttpl
sarb
sub
xchg
mov
es
idiv
cmp
das
mov
add
ljmp
mov
jnp
xor
and
stc
xchg
sub
lret
sub
jb
pop
mov
jb
jbe
push
decb
push
xor
test
arpl
popa
adc
test
mov
sub
sbb
inc
int
xchg
leave
or
ret
subl
mov
or
loop
inc
pop
pop
lret
dec
ret
mov
xchg
rorl
xor
inc
popl
nop
cmp
leave
cltd
aam
xor
fisttps
inc
fcoml
rorl
add
mov
sbbl
mov
jmp
lret
rcl
ror
fsin
sbb
pop
xor
jle
ret
js
push
js
dec
test
or
jmp
inc
cmpsl
xchg
add
lahf
lods
jne
das
movsb
sub
mov
mov
ret
hlt
adc
jae
and
cmpsb
inc
lea
fs
add
lock
mov
inc
or
in
xchg
mov
fbstp
fcoms
das
dec
cmp
jo
add
add
int
jp
fs
cmp
mov
test
and
mov
mov
dec
sahf
jecxz
and
outsb
repnz
clc
mov
mov
xchg
sub
ss
pop
in
outsb
xchg
xchg
lock
or
dec
test
push
xchg
popa
add
fdivrl
nop
fists
ja
cmc
add
mov
add
mov
push
ja
faddl
mov
xchg
mov
out
jmp
neg
aam
mov
pop
cmp
rorb
mov
test
stos
xchg
repz
push
or
leave
or
inc
inc
mov
xchg
rolb
mov
mov
adc
xacquire
or
es
mov
mov
and
mov
push
cmc
lret
sub
mov
in
add
outsb
jb
outsb
mov
movsl
mov
fisttpl
stos
dec
jbe
mov
insb
adc
in
dec
ss
or
sbb
clc
std
ficomps
int3
jae
mov
mov
xor
and
aas
lods
adc
dec
mov
inc
test
lock
mov
dec
jne
out
out
jmp
stos
cli
push
push
call
xor
popf
jae
notb
push
test
iret
fwait
orb
stos
or
call
xchg
push
addr16
loopne
jbe
inc
push
mov
loope
pop
pop
and
xchg
lods
ljmp
sbb
mov
pop
add
jl
mov
popf
jo
mov
cmc
into
dec
xor
ds
jmp
or
xchg
jne
testl
pop
mov
mov
cli
stos
insb
xchg
outsb
sbb
negl
mov
inc
push
aaa
pop
push
jg
pop
pop
dec
pop
in
stc
pop
lea
negl
les
xchg
nop
sbb
aad
lds
xchg
cmpsl
add
lahf
stc
jo
lret
sub
loopne
jns
xchg
mov
sbb
adc
fsubrp
out
jp
add
repz
xlat
push
xor
fsubrl
loopne
leave
and
jns
xor
out
push
cltd
xlat
ds
dec
adc
inc
mov
add
xlat
shrb
popa
test
add
mov
out
loope
or
pop
faddl
cmc
mov
fs
jg
clc
pop
add
xchg
addb
dec
and
nop
add
mov
fwait
jecxz
bound
sub
idivl
lret
xchg
mov
loop
repz
or
mov
mov
inc
jae
mov
scas
mov
pop
and
cmpsl
pop
cmp
outsb
ss
mov
mov
shl
fwait
daa
mov
and
xchg
push
gs
dec
jns
outsb
bnd
mov
les
enter
rclb
add
jns
xchg
push
mov
dec
add
sbb
add
test
fisttps
and
dec
js
lods
out
into
daa
inc
adc
xlat
sub
cmp
lcall
xchg
or
in
or
mov
loop
push
sbb
pop
sahf
pop
outsl
xor
dec
leave
inc
add
daa
add
pop
jno
adc
mov
mov
push
mov
out
push
decl
and
dec
sbb
outsb
adc
push
xorl
maxps
lea
sbb
rcrl
and
fldcw
push
adc
and
das
pop
test
rcl
mov
cmp
hlt
or
fmuls
cmp
cmc
mov
ds
rcl
mov
out
add
cmp
loop
inc
inc
hlt
cmpb
arpl
or
mov
push
shl
cmp
xor
call
enter
mov
mov
fwait
xchg
mov
into
fldcw
and
std
mov
lret
pusha
mov
mov
jno
push
cs
insl
sbb
push
imul
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
ret
rcl
rol
into
push
cmc
loope
pop
pop
dec
dec
outsb
js
push
js
aaa
mov
cmp
jns
xor
cmp
xchg
cs
ss
js
inc
mov
test
repnz
cmp
imul
movsl
push
push
leave
xchg
lret
mov
fildl
dec
lock
pop
aaa
jle
mov
cmp
lods
or
lods
jnp
test
add
js
test
scas
mov
push
cld
repnz
or
loope
mov
inc
popa
add
movsl
enter
cltd
dec
jns
pop
pop
jb
cmpsb
adcb
pop
insl
psraw
call
emms
push
movsb
lea
add
stos
loop
fsub
add
cmp
jle
rcr
cmp
sbb
dec
adc
enter
sarl
int3
adc
aad
push
pop
cmc
jmp
jnp
dec
sar
mov
aas
mov
call
cs
ljmp
pop
out
cli
pop
mov
push
ljmp
aam
movsb
mov
mov
mov
testb
mov
push
arpl
jb
sub
add
fwait
imul
clc
stos
cltd
test
adc
add
popf
or
hlt
je
xchg
pop
es
sarl
lods
mov
fmuls
flds
pop
push
inc
imul
push
sbb
and
fneni(8087
fs
sub
inc
cmp
xor
lods
mov
lea
xor
inc
xchg
lret
and
jns
xchg
fldt
fmuls
fldl
jl
mov
dec
sub
push
mov
adc
jns
sub
mov
inc
rclb
loop
pop
outsl
jne
enter
pop
in
mov
adc
jno
popa
stos
add
test
xchg
mov
push
enter
sub
inc
dec
andl
inc
push
enter
adc
xor
sbb
mov
sbb
shrl
aaa
mov
inc
aad
andb
xlat
pop
addr16
insl
adc
push
sbb
ja
fldl
je
lods
add
xchg
scas
es
adc
inc
fidivl
mov
in
paddd
cltd
dec
inc
mov
dec
lret
jl
dec
int
test
xchg
jl
push
mov
dec
mov
pop
cmp
sub
or
fisttpll
mov
cmc
mov
aas
jp
jmp
pop
hlt
lcall
mov
int3
orl
mov
sti
fwait
aas
add
mov
push
iret
test
popa
mov
int3
fldenv
dec
mov
fwait
packssdw
cs
lods
xor
inc
rcrb
inc
lcall
lret
push
cmp
lods
std
sbb
cld
mov
push
adc
cmpb
outsl
jp
ret
fsubs
pop
gs
arpl
lods
lock
mov
outsb
xor
xor
cmp
sti
std
js
cmp
insb
mov
xlat
not
push
sub
stos
xchg
mov
lret
lods
cltd
jbe
jmp
cwtl
shr
sahf
icebp
push
adc
stos
jno
mov
pop
out
dec
popa
hlt
xchg
sbb
jp
push
or
mov
and
sti
adc
std
add
xchg
jae
sbb
pop
into
pop
addb
fadds
sahf
arpl
mov
stos
push
jns
loope
xchg
and
loopne
dec
inc
jmp
jno
test
mov
dec
jp
ficomps
aas
and
testl
xchg
push
jg
popa
add
jle
push
sbb
adc
out
fldcw
mov
jno
lds
fldl
jge
sti
fmull
cmpsl
jl
icebp
cli
jecxz
xor
sbb
jns
in
and
ret
xor
mov
jmp
and
jmp
sub
cld
dec
cmpsb
clc
test
test
les
mov
bound
xor
repnz
and
stos
mov
ljmp
sahf
mov
lahf
aaa
jecxz
adc
fs
sub
cmp
and
push
jl
nop
hlt
js
movsl
inc
mov
jo
xor
lods
dec
inc
add
cmp
jle
jno
xchg
adc
arpl
daa
jno
lcall
daa
pop
loope
and
add
in
data16
data16
mov
sbb
ljmp
pop
loope
fldl
lock
dec
and
enter
leave
adc
shl
cvtdq2ps
sahf
inc
xchg
icebp
sub
xor
add
jmp
mov
fcmovnbe
hlt
inc
or
and
lcall
js
push
js
orb
push
push
scas
test
int
jns
enter
int
mov
inc
add
test
and
insl
outsb
jecxz
daa
sub
scas
jle
adc
cmp
imul
xor
dec
lret
mov
lahf
xlat
test
mov
fldcw
sti
xchg
adc
mov
mov
push
mov
mov
mov
pop
xchg
xor
mov
hlt
pushf
lcall
or
sbb
push
cmp
sbb
call
ret
cmp
lods
dec
xchg
push
pushf
in
ret
sti
lret
xor
or
sbb
fldcw
jecxz
call
inc
inc
xor
popf
imul
or
sbb
lret
aaa
jae
push
inc
jle
cmp
mov
adc
dec
hlt
xlat
outsb
je
enter
xchg
fistps
add
push
fwait
xor
add
gs
mov
push
ret
fistpll
iret
pop
inc
or
pop
js
add
cs
xchg
ds
test
or
push
pop
xlat
adc
gs
dec
lods
scas
sbb
pop
mov
ja
test
imul
jns
push
out
cmpsl
cmp
fldcw
jp
test
cmp
call
sub
scas
test
cltd
push
mov
push
cmp
sbb
fidivrs
xor
and
adc
xor
and
in
enter
adc
les
iret
xchg
push
cmpsl
movsb
mov
sub
int
cli
jno
adc
and
and
rolb
push
mov
ljmp
mov
add
cmp
out
ret
ret
aad
mov
and
nop
sbb
lods
and
lods
xlat
inc
cmp
mov
mov
repnz
jb
call
mov
pop
fwait
xorl
shrb
xchg
fidivl
fsubl
xlat
nop
les
jbe
movb
pushf
mov
mov
mov
data16
pop
sub
mov
out
inc
mov
sarb
movsb
ret
pushl
xor
loopne
scas
movsl
ljmp
xchg
push
jno
std
dec
xor
push
cmp
mov
fnstcw
out
pop
and
iret
mov
pop
or
jl
pop
sbb
mov
dec
pop
clc
cmp
mov
test
or
cld
pop
aam
jns
in
and
push
xchg
adc
outsl
mov
ficoml
inc
or
andl
in
push
pop
mov
leave
gs
fsubs
sbb
test
add
popf
gs
and
ljmp
push
inc
add
and
into
aas
scas
hlt
jo
mov
jno
idivb
pop
dec
jmp
and
inc
ret
daa
pop
xor
add
into
xor
insb
dec
push
pushf
outsb
jb
int3
dec
push
test
mov
aaa
fcmovbe
orb
fwait
add
add
pop
adc
mov
fwait
mov
xchg
sub
test
int3
jge
test
sub
and
insb
lods
cmp
lahf
jecxz
fistl
out
mov
popf
fildll
xor
xor
dec
std
jl
pop
mov
je
push
rcl
lods
inc
pop
int3
cmc
cmp
addr16
mov
mov
int3
and
cmp
push
cmp
subl
jae
xchg
mov
cmpl
and
out
sbb
add
aaa
mov
dec
push
daa
dec
lods
mov
les
sub
add
lods
hlt
enter
ror
add
cs
xor
repnz
xor
lret
jl
mov
enter
or
out
ljmp
pusha
mov
jae
mov
je
mov
push
xor
in
cmc
faddl
mov
test
pop
inc
xchg
and
push
xchg
pop
rolb
call
mov
shlb
das
dec
jg
scas
movsb
sub
arpl
pop
into
add
repnz
nop
cld
loope
fdivrs
mov
outsb
or
dec
cltd
sub
xorl
and
push
xchg
cmp
jmp
adc
push
adc
gs
dec
in
and
cmp
ror
stc
dec
mov
xchg
jns
lret
out
jmp
fidivrs
test
xchg
inc
sub
leave
push
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
ror
rol
fxch
fcmove
xor
rcll
fs
js
push
js
fwait
mov
cli
jno
es
in
add
adc
fdecstp
in
std
sbb
popa
xchg
ljmp
pusha
xchg
popf
sbb
cmp
mov
mov
and
sbb
dec
ja
nop
mov
sub
push
mov
mov
or
cmp
gs
repnz
add
pop
jnp
push
pop
jbe
scas
pop
push
sbb
push
mov
jae
arpl
mov
outsl
cmp
jo
xchg
push
mov
pop
jge
pop
cld
inc
hlt
push
cmp
push
insl
repz
pop
inc
gs
call
data16
add
jle
test
mov
test
pop
fstps
adc
movb
dec
dec
or
imul
xchg
mov
rorl
repnz
inc
pusha
sub
push
addr16
dec
fldt
bound
jo
jecxz
daa
push
sbb
into
jnp
data16
adc
lret
flds
aaa
movsb
test
sbb
lods
sbb
dec
xor
inc
xchg
jge
repz
adc
mov
fiaddl
xchg
das
test
sub
jbe
mov
in
pusha
lahf
or
sub
adc
sub
xchg
mov
adc
xchg
aam
mov
xchg
dec
pop
jbe
jecxz
sbb
and
add
test
dec
cmpsl
jmp
pushf
pop
mov
sbb
sbb
incl
and
mov
in
adc
cmc
add
pop
push
add
jno
pop
push
add
sub
or
popa
in
jne
outsb
idiv
or
push
lock
in
cmpsb
push
lret
cltd
or
cwtl
clc
jbe
scas
mov
inc
jne
roll
mov
orb
push
add
imul
sub
movsb
arpl
cmp
clc
int3
sbb
adc
push
sub
out
dec
fs
xor
xchg
testb
xor
dec
and
test
lock
fildll
cmp
lea
in
pop
fwait
in
ret
mov
fmuls
jb
sbb
jle
jo
es
or
add
fcmove
xchg
in
sbb
lret
mov
and
ficoml
pushf
jne
sbb
adc
adc
sub
push
cltd
push
popa
mov
push
pop
mull
dec
dec
inc
scas
lods
in
pop
fs
adc
dec
insl
aad
or
mov
in
xchg
cmpsl
and
sub
jne
or
pop
pop
call
stos
mov
movsb
mov
sub
out
js
and
insl
mov
ja
sbb
cmp
lret
loope
and
and
mov
push
mov
lea
ljmp
xor
mov
mov
imul
icebp
pop
xor
xor
fwait
add
adc
int3
pop
inc
imul
int
adc
sub
cwtl
rcrl
lds
adc
cmp
andl
jo
jb
sub
cmp
jns
cmp
inc
outsb
pop
dec
in
lods
cmp
repz
pop
pop
pop
jmp
and
pushf
dec
and
pop
stc
fildl
or
repz
push
int3
push
icebp
int3
sub
mov
js
fnstsw
mov
mov
push
inc
push
popa
jns
pop
push
push
mov
adc
aaa
mov
mov
incb
cmpsl
pop
decb
out
pop
mov
out
les
jmp
inc
stos
int3
outsb
jecxz
hlt
ja
cs
inc
cmp
inc
imul
dec
mov
stos
in
repz
inc
fwait
das
sahf
cmp
push
fwait
pushl
aas
push
rclb
pop
divb
jg
fiadds
jae
jle
stos
repz
sti
and
stos
fld
jbe
aam
inc
push
orb
dec
outsb
mov
cmp
xor
xor
add
mov
add
scas
mov
push
dec
arpl
mov
mov
lahf
jo
pop
test
cmp
sub
mov
shlb
xchg
bound
int
push
shll
cmp
negl
int
shlb
fsubrl
shl
jbe
sbb
cmpsb
jecxz
pop
lret
push
out
loopne
in
xor
mov
ja
xor
lret
sbb
imul
lahf
xor
insb
into
or
sbb
scas
loope
mov
sub
data16
mov
mov
mov
jmp
ror
ror
fcmovu
aas
scas
push
sbb
jmp
js
jl
js
enter
push
and
ficoms
xchg
fimull
mov
or
jns
push
pop
push
or
adc
pop
test
or
lcall
loop
jbe
lahf
xchg
sti
mov
xor
xchg
pop
mov
adc
mov
cmpsb
out
aas
lcall
push
aaa
das
enter
mov
xchg
std
push
dec
inc
popa
pusha
stos
andb
sub
lock
lea
xor
pop
fs
call
xor
gs
popa
ficomps
and
das
or
mov
aam
pop
and
xchg
jne
pusha
test
and
sahf
mov
ret
adc
push
push
adc
dec
popa
jae
push
lods
and
mov
add
pop
and
add
pop
inc
das
lret
mov
dec
push
add
mov
addl
xor
or
int
stos
pop
lock
mov
mov
cwtl
inc
sbb
xor
cltd
xlat
fdivrl
std
mov
mov
inc
imul
cmp
sbb
add
nop
or
out
aas
call
sahf
imul
jnp
mov
xor
xor
jge
sub
adc
mov
jne
pop
mov
enter
mov
dec
inc
rorl
push
pop
xchg
cli
ljmp
repz
or
ljmp
enter
push
jecxz
sahf
add
scas
jl
mov
mov
test
jp
stc
flds
jg
hlt
lcall
int3
nop
jnp
adc
jl
pop
fsubrl
stos
adcl
sbb
repz
jno
js
int3
push
inc
shr
outsb
jge
jae
mov
je
cmpxchg
mov
stos
push
shll
mov
or
sbb
rcrb
mov
insl
fsubs
cmp
mov
aas
add
xor
jnp
dec
xor
push
es
push
jns
and
cwtl
nop
emms
out
mov
jbe
pop
inc
cmp
imul
push
fs
xchg
xchg
stos
sarl
push
sub
push
cmp
xchg
mov
rolb
in
mov
mov
inc
out
mov
or
xchg
dec
and
outsl
scas
repz
add
or
mov
sti
filds
push
std
fiaddl
in
jl
test
push
imul
out
sbb
in
aaa
pop
pop
pop
mov
and
fs
pop
push
popf
pop
inc
sbb
xchg
inc
mov
mov
iret
cmp
test
mov
push
outsl
cltd
pop
pop
ds
shll
pop
jge
xchg
pop
mov
add
gs
cs
push
jge
mov
push
in
mov
js
in
lcall
mov
or
cmpsl
test
cmpsl
std
xchg
mov
fwait
lcall
xor
xor
ss
fisubrs
imul
cmp
stos
cld
sti
fwait
add
or
data16
dec
dec
jmp
sub
adc
push
sti
mov
ljmp
pop
dec
cmp
adc
out
mov
test
xor
pop
inc
add
out
cmpsl
sbb
and
adc
add
lods
out
daa
cwtl
lods
sub
add
rcrl
add
imul
push
mov
dec
lahf
pop
mov
cmp
fs
out
mov
pop
shll
movsb
movsb
or
rcr
inc
repnz
jecxz
in
iret
lods
insl
roll
inc
std
mov
push
jmp
call
xchg
aaa
inc
and
mov
pop
jbe
arpl
mov
ljmp
inc
mov
dec
adc
in
lret
jp
les
hlt
xchg
push
jb
lahf
and
lret
pushf
push
mov
gs
or
jge
pop
dec
dec
fstpt
push
xor
or
pop
sbb
imul
daa
mov
push
int
aam
loope
jle
rclb
dec
lret
mov
push
pop
shlb
xor
fisttpl
dec
add
dec
xchg
or
cmp
out
imul
and
xor
sbb
add
fldenv
push
inc
jnp
test
mov
mov
shl
out
std
out
cmc
out
sbb
add
jnp
or
pop
xlat
jns
jmp
int
rcr
rol
fxch
cmp
aas
and
jl
js
insl
lcall
sbb
xchg
xlat
outsb
pop
sbb
cmp
js
cmp
shll
xchg
ficompl
pop
shr
pop
mov
inc
mov
loop
inc
mov
xor
in
mov
movsl
test
hlt
lret
addr16
lods
in
or
dec
sub
icebp
push
push
jecxz
adc
cmc
add
mov
add
cs
lods
and
pusha
fildl
add
and
ja
fxch
inc
add
xor
repz
insl
lahf
mov
rcr
push
shlb
xchg
callw
sarb
xor
sahf
dec
arpl
repnz
xchg
aam
xchg
leave
sti
jbe
aam
aaa
jle
repz
outsb
mov
push
inc
cmp
icebp
lods
inc
adc
es
mov
ljmp
std
pop
mov
mov
lock
iret
jp
into
fcompl
mov
in
pop
mov
mov
add
adc
cmc
xchg
lcall
iret
outsb
test
add
test
jbe
mov
fstpt
xchg
add
or
stos
jne
andl
cmpsl
cmp
dec
dec
dec
dec
inc
inc
push
or
mov
shlb
cmp
pop
push
push
daa
fisttpl
mov
push
jns
cmp
rcrl
cld
sub
inc
xchg
and
rcrb
nop
and
xchg
insl
dec
jae
dec
out
stos
sub
or
sub
cmp
push
sbb
jp
cmpsl
in
test
cmp
inc
sbb
hlt
xchg
mov
fucomi
aaa
mov
push
cmp
add
inc
mov
flds
cwtl
mov
sti
jns
andb
xchg
cmp
push
jnp
pop
arpl
sahf
xorl
mov
adc
mov
xchg
or
adc
stc
loopne
ret
dec
sub
sub
cli
or
jmp
lret
icebp
sbb
daa
xchg
not
popf
push
mov
fucomi
cmp
fldln2
pop
sub
mov
jbe
xor
jl
jecxz
jp
data16
insb
stos
jle
cmc
mov
xor
sub
dec
push
xchg
dec
mov
les
xchg
pop
pop
cmp
fisubs
dec
testl
inc
jne
pop
enter
pop
push
or
addr16
pop
or
enter
dec
fnstcw
push
cltd
pcmpgtd
xor
insb
shll
cmpsb
aaa
sbb
and
jns
icebp
push
icebp
dec
repnz
or
cltd
dec
mov
in
mov
sbb
sbb
sub
xchg
stc
test
daa
push
add
adc
jno
sbb
cwtl
mov
mov
stc
xchg
adc
sub
adc
mov
xchg
adc
pop
mov
push
sub
sbb
lret
sti
out
jle
imul
dec
lret
pop
mov
decl
in
xor
ss
sti
shrl
out
mov
insb
popl
sbb
dec
inc
pop
pop
sti
push
add
jns
pop
push
jae
push
hlt
xchg
mov
in
loopne
pop
call
jnp
xchg
gs
xchg
inc
xor
enter
pop
adc
fmull
xor
sbb
outsl
jmp
rclb
jge
daa
push
outsl
leave
dec
push
imul
out
in
xchg
adc
lds
cli
mov
push
scas
inc
inc
fidivrs
cmp
sbb
mov
mov
jg
xor
loop
incl
ret
push
mov
mov
into
push
mov
icebp
add
inc
sarl
aas
std
inc
int
scas
in
push
repnz
xor
loop
inc
inc
inc
mulb
sbb
jl
test
pop
fimuls
insb
push
icebp
lea
and
in
xchg
jb
sub
scas
mov
jle
adc
enter
insl
pushf
mov
push
cmp
je
stos
sbb
jg
sbb
adcb
rorb
test
repz
out
and
mov
shrl
cltd
jb
jecxz
dec
dec
testl
into
mov
sub
movsl
aad
xchg
pushf
std
push
div
rolb
jb
push
push
inc
cmp
in
jno
notl
pop
pop
cmp
es
repz
int3
lods
mov
fistpl
add
insb
mov
xor
jmp
xlat
xlat
iret
into
iret
aad
cmpsl
in
in
out
rcll
js
push
cli
inc
pop
mov
pushf
outsb
pusha
jb
push
dec
out
xchg
aad
ss
jmp
outsl
xchg
push
pop
fsubp
push
adc
sbb
or
mov
jbe
mov
jg
pop
leave
imul
jmp
lret
inc
movsb
les
jl
xchg
lock
int
mov
rep
xor
adc
mov
jb
cmp
mov
arpl
pop
or
or
incl
xchg
sti
jg
xchg
mov
xor
ja
push
es
push
fistps
sub
or
stc
sbb
int3
pop
mov
jge
push
push
repz
dec
and
mov
lods
adc
pusha
inc
push
mov
pop
dec
jbe
sub
mov
out
mov
lret
orb
and
inc
or
jnp
fstp
loop
adc
cmpsb
adc
shll
daa
jmp
outsl
sub
push
test
es
sub
jns
add
notb
mulb
push
push
repz
clc
push
xor
sarb
mov
and
mov
add
push
pop
mov
sti
xor
test
adc
jmp
adc
loop
cmp
sti
repnz
and
push
cmp
mov
je
push
push
cmp
adcb
inc
sbb
shlb
jno
test
in
das
lock
arpl
cmp
sbb
inc
mov
fsubr
outsl
decl
sbbl
rolb
cmc
pop
pushf
shll
in
cmpsl
mov
sub
xchg
dec
icebp
pushf
and
inc
outsb
jg
xor
inc
jge
psubusb
mov
adc
xchg
cmpsl
mov
mov
push
mov
mov
add
shrl
push
out
jno
loope
out
add
sahf
mov
std
mov
aas
mov
cmpb
mov
imul
mov
xchg
sbb
cld
dec
jp
fistl
jne
push
out
sub
insl
lods
rsm
gs
iret
lods
push
pop
mov
cmc
in
scas
xchg
inc
jns
and
jecxz
push
lods
mov
stos
jecxz
aam
cwtl
jl
add
fcoml
push
shlb
xchg
bound
xchg
les
sbb
sti
stos
stos
jp
mov
push
das
sub
and
xor
lea
jmp
into
mov
rorl
psubsw
movsl
adc
mov
push
sub
int3
insl
or
jg
xor
sbb
push
shlb
push
mov
ljmp
jg
in
cli
ja
mov
popf
fdivs
xlat
cli
dec
dec
sbb
jge
pop
js
jg
sub
xchg
stos
push
cmpsb
pop
ret
push
jns
xchg
mov
jl
sti
pushf
xchg
mov
hlt
pop
imul
xor
sbb
push
push
sbb
mov
cmc
mov
jae
lods
pop
dec
cmp
jge
inc
scas
jbe
in
loope
jbe
push
xorb
adc
mov
cmp
gs
loopne
subb
fmul
dec
outsb
jnp
cmp
pop
daa
imull
cmp
das
pop
jbe
jns
add
testl
cwtl
push
into
jge
enter
dec
fnstcw
lahf
mov
lds
adc
sub
jbe
lahf
loope
lds
cmp
pop
dec
lock
xchg
jae
punpcklbw
sub
iret
dec
inc
test
divb
fwait
jnp
sub
inc
pop
shlb
mov
push
cmpsl
pop
shll
adc
or
mov
sti
ds
rep
xchg
or
sub
inc
xchg
jmp
clc
and
xor
push
mov
mov
fldl
push
jle
ljmp
mov
scas
imul
into
jle
pusha
orb
jnp
pop
dec
or
imul
sbb
xor
in
fnsave
pandn
sbb
mov
or
xchg
movsb
shr
lcall
rorb
adc
xchg
cli
lock
jmp
insl
jp
stos
sub
js
or
xorl
push
jbe
mov
cld
push
jge
mov
sub
mov
aad
jne
lds
xchg
fimuls
outsb
out
jecxz
outsl
mov
push
adc
push
movsl
sub
jne
fwait
add
jmp
rol
ds
lret
aaa
aas
push
cs
or
and
js
jl
js
fdivl
outsl
lret
in
stos
push
in
js
jb
outsb
call
cld
andl
jg
mov
sbb
in
cld
xorb
xchg
xor
popa
loopne
and
pop
push
ds
mov
xor
cmp
out
push
std
mov
or
aam
sti
and
inc
out
push
sub
movb
popf
je,pt
shrl
into
dec
subl
stos
add
push
push
or
sbb
rol
stos
cs
sbb
popa
cmp
xor
inc
and
mov
cmp
inc
or
cld
jg
insb
adcb
loopne
in
ds
jge
cmpsl
popa
ja
inc
ror
out
pusha
fisubrl
mov
scas
popa
test
testb
adc
jmp
xor
and
mov
test
dec
sub
mov
sub
js
mov
call
mov
pop
sub
icebp
cli
ja
pop
xchg
je
ret
pop
sub
cmpsb
int3
jnp
jmp
xchg
pop
fmul
dec
cld
outsb
sbb
sbb
push
add
repnz
sahf
sub
jns
adc
leave
mov
clc
dec
adc
sbb
pop
mov
xor
stos
push
cld
mov
rcrb
pop
sub
pop
sub
mov
fnsave
cltd
lods
sub
mov
jge
or
push
aad
outsl
jle
dec
cmp
sti
xor
inc
lret
test
ja
repnz
jecxz
pop
or
insb
push
inc
jecxz
outsb
sub
adc
out
push
jne
xchg
popa
call
addr16
cwtl
es
sarb
stc
push
inc
inc
pop
sbb
mov
or
jb
adc
aas
test
xor
xlat
lock
or
enter
adc
cmpsb
cwtl
fstpl
clc
inc
stos
sbb
cmp
xchg
fucomip
ret
add
adc
mov
mov
inc
loop
popf
mov
sbb
adc
pop
repz
mov
add
cmp
notl
inc
ret
push
neg
sar
mov
jp
mov
daa
rcrb
jo
pop
fnstcw
push
ret
or
or
pop
mov
or
mov
cs
gs
fcompl
scas
add
nop
mov
movsl
popf
or
mov
sbb
add
aaa
pop
xchg
sub
hlt
mov
sahf
shll
adc
popf
std
jae
pop
xlat
xchg
sbb
adc
insb
jae
adc
jecxz
adc
dec
cs
sbb
add
fs
lods
push
lret
cld
xor
js
mov
inc
or
pop
loopne
sbb
vphaddbq
shl
sub
mov
dec
or
sub
sti
pop
jecxz
xchg
mov
decl
cmp
aad
jno
mov
add
cmp
add
sahf
mov
iret
xor
jle
cmc
repnz
insb
pop
out
int3
fstl
xchg
decb
outsl
push
lret
push
daa
add
sahf
das
pop
ss
pusha
mov
jmp
pop
adc
int3
push
cmpsb
out
in
das
xor
lret
or
aaa
dec
cmpsb
add
mov
ficompl
push
dec
mov
mov
pop
push
mov
cmpsb
and
fsub
test
pop
mov
aaa
mov
and
bnd
lods
shlb
lods
in
mov
push
sbb
cmp
inc
pop
addb
stos
add
enter
dec
loope
adc
or
mov
adc
jnp
js
mov
jmp
std
xor
inc
push
push
mov
pop
test
jge
dec
pop
adc
in
jns
ja,pn
ret
mov
pop
ret
jg
lahf
sbb
inc
sub
ret
and
mov
outsb
sbb
loop
mov
pop
mov
mov
dec
mov
cmp
out
inc
dec
sbb
add
mov
fsubrp
and
in
mov
mov
or
mov
sbb
sbb
enter
leave
inc
pop
jno
cld
jmp
jo
out
mov
dec
sbb
fnstcw
aam
xor
add
xor
cmp
icebp
pop
in
jns
or
stos
sbb
mov
movsb
cltd
inc
pushf
pop
add
jo
jg
aam
pushf
push
add
mov
mov
popf
push
cmpsb
mov
test
add
lea
push
mov
xor
add
push
jmp
aas
int
rcr
lret
aad
inc
sbb
in
js
jl
js
lods
repz
inc
pop
xchg
dec
pop
and
hlt
jge
cmp
popf
out
fiaddl
jns
mov
das
push
mov
sahf
add
movsb
call
adc
and
mov
sbb
inc
cmpsb
shlb
add
sub
pop
xor
test
dec
mov
jmp
cmp
or
mov
pop
sbb
ljmp
fcomi
jmp
dec
clc
or
movsb
jg
std
mov
loopne
push
sbb
cmpsb
pushf
pushf
mov
push
xchg
adc
sahf
jns
jmp
push
cmp
jbe
xor
loop
pop
jmp
push
int
sbb
push
lcall
sbb
and
cmc
xchg
cwtl
sub
sub
push
xchg
test
jle
dec
movsl
xor
scas
pop
jmp
cmpsb
jl
add
insl
mov
ja
sbb
dec
rclb
pop
ret
les
mov
xor
lahf
dec
fiaddl
scas
fcoml
test
sbb
cmp
stos
in
pop
add
or
pusha
adc
shr
xor
lea
sub
pop
and
sarb
mov
lea
pop
pop
ret
lahf
cmp
aaa
cmp
mov
adc
jae
add
xor
dec
clc
les
and
out
or
pop
int
and
in
das
mov
les
fs
xlat
mov
arpl
lock
test
mov
leave
hlt
or
roll
out
jno
or
call
lret
fstps
sbb
ja
scas
test
ss
push
mov
add
mov
das
imul
in
test
loope
popf
in
sbb
fsubrs
cmc
gs
data16
jg
popf
pop
daa
cmpsl
out
and
xchg
cmp
pop
xor
inc
cs
or
jg
test
addb
mov
sbbb
xchg
aas
in
call
fistpll
push
mov
lds
jnp
xor
pop
test
rcl
adc
stos
push
lahf
mov
mov
nop
mov
jne
add
push
rcr
dec
xor
add
lcall
je
xlat
lret
jp
dec
push
mov
lret
sub
test
mov
pop
icebp
push
push
jbe
add
ja
cmp
ret
mov
mov
pop
fwait
nop
push
sbb
push
mov
les
es
lods
pushf
shl
jnp
sahf
jg
lock
dec
rcl
inc
cmp
lret
js
mov
mov
cs
inc
adc
leave
adc
xor
loope
mov
or
mov
jbe
pusha
jp
sub
cld
shl
imul
in
iret
lret
pop
cmpsb
inc
loop
xor
lods
cmp
clc
and
out
jne
and
xor
dec
push
push
lock
inc
adc
dec
outsl
jl
sub
test
add
daa
mov
in
and
ret
sbb
push
test
fisubrl
xor
inc
gs
mov
frstor
pop
pop
ljmp
in
xchg
cmp
incb
jnp
mov
adc
jno
rolb
sahf
ljmp
jle
inc
adc
pop
int
xor
mov
or
sbb
sti
pop
sbb
push
dec
clc
xor
ss
jno
stos
lahf
ljmp
jb
incl
in
jne
in
or
pop
xchg
aad
or
sub
pop
xchg
adc
mov
testl
mov
fdivs
push
mov
mov
outsl
into
push
cwtl
inc
in
sub
call
push
out
pop
xor
jle
adcl
sub
mov
add
lods
sub
fbld
adc
data16
inc
mov
clc
stc
imul
mov
mov
in
scas
xor
cmc
inc
les
orl
add
xchg
rolb
adc
and
push
dec
adcl
push
outsl
or
push
lock
int
iret
aam
xchg
lahf
gs
pop
cli
pop
shll
push
jne
or
push
stos
add
mov
cmp
jb
in
fldl
mov
pop
fimull
insl
js
subl
subl
mov
mov
nop
mov
nop
and
lcall
inc
call
add
push
add
ror
ror
rcl
lret
rol
into
xchg
lock
js
jl
js
lahf
lds
mov
in
cld
and
nop
jno
pop
popa
pop
mov
mov
cmp
pop
mulb
dec
rcrl
fidivrl
and
nop
xchg
add
clc
inc
je
imull
lods
rclb
decb
dec
out
scas
addr16
icebp
inc
lods
test
xchg
ret
andl
dec
add
lret
cmpsb
xor
sbb
rorl
sbbl
test
mov
out
or
push
pop
mov
jge
xor
pop
aad
add
push
sbb
mov
fimuls
sarl
and
lahf
adc
pop
push
pop
jnp
ja
sub
and
pop
clc
dec
cmc
adcb
push
imul
ret
mov
hlt
insb
cmp
mov
mov
cwtl
mov
cld
test
fldenv
inc
int3
mov
call
test
pop
sti
jp
lea
xlat
loop
cmp
sbbl
or
negl
je
shl
push
or
cmp
pop
popa
jae
mov
jmp
jg
clc
adc
nop
inc
cmpsl
adc
pusha
arpl
cmp
pop
xchg
mov
sar
sub
andl
fcomip
mov
push
lcall
psrlq
sbb
cmpsb
jp
and
push
cmp
std
sub
or
cmp
mov
dec
cld
pop
std
push
orl
push
lods
stos
notb
out
pop
and
mov
cmp
enter
pop
push
or
mov
mov
dec
into
dec
cmp
test
lods
xchg
insl
lcall
and
sbbb
mov
sbb
pushf
int
dec
lret
iret
pop
subl
fucomi
push
push
pop
cli
aam
test
scas
sahf
and
or
out
jae
repnz
push
cld
dec
push
dec
and
data16
arpl
mov
sub
lahf
add
mov
fdivr
add
adc
ds
jbe
dec
shl
icebp
or
xor
cwtl
in
pop
inc
cmpsl
dec
lret
mov
push
inc
xchg
push
adc
cmp
iret
cmpb
pop
pop
das
pusha
mov
and
xchg
xchg
loop
lods
arpl
or
imul
jmp
add
pop
sbb
fiaddl
cmp
xor
in
rcrb
pushf
pop
jb
movsl
rcrb
sub
xorl
or
cmpsl
rolb
shl
xor
pusha
pop
sbb
adc
add
lock
pop
mov
pop
inc
xchg
mov
addr16
pusha
lock
insb
adc
aaa
dec
call
sahf
out
cmp
mov
jo
out
sbb
lea
popl
sete
int3
push
cmp
hlt
mov
mull
pusha
add
outsb
pop
jns
test
adcl
pushf
shrb
push
cmp
fists
jle
mov
jle
push
pop
orb
mov
push
mov
aas
inc
mov
sub
xlat
loop
cmc
cmp
or
bound
jae
lahf
push
jno
into
add
imul
pushf
dec
adcl
sub
add
fldenv
add
cmc
xchg
xchg
imul
cmp
add
add
andb
and
sub
mov
jmp
imul
mov
js
cmp
fcoms
mov
or
or
sar
lods
fistps
scas
ret
dec
inc
lods
jg
and
shll
scas
dec
or
push
outsb
mov
push
or
xchg
movsl
push
verr
cltd
fs
icebp
mov
or
in
cs
xchg
inc
sbb
lcall
add
js
mov
in
out
xor
adc
loope
cmc
ds
cmp
pop
insb
xchg
divl
adc
xor
and
aas
arpl
pop
fwait
jg
insb
cli
mov
push
fdiv
jl
cmpsb
adc
jne
jg
test
mov
mov
mov
and
push
adc
xor
movsb
outsb
jle
outsb
jb
xchg
lock
push
xor
fisubrs
pushf
jl
mov
dec
and
sub
scas
jno
fwait
mov
mov
mov
pushl
jmp
ret
ret
leave
lret
ror
cmpsb
or
pop
xchg
enter
push
js
arpl
arpl
cmp
mov
data16
test
xor
inc
in
lret
icebp
mov
mov
jmp
jge
xchg
cmpsl
xor
ljmp
or
mov
jmp
cmp
pop
je
lret
xlat
mov
out
sbbl
jae
add
adc
stc
or
push
in
stos
sbb
ret
add
pusha
ret
sbb
mov
fidivrs
cs
outsb
ss
adc
loop,pt
iret
fists
popa
lahf
adc
negb
push
dec
arpl
lds
out
cwtl
mov
or
sbb
fwait
xchg
cmp
mov
fstl
sbb
iret
xor
sbb
sub
xchg
add
in
fwait
adc
add
sub
es
push
mov
xchg
sub
pop
mov
sbb
xor
test
sbb
int
mov
call
mov
pop
stc
js
es
in
mov
rclb
mov
gs
sbb
mov
xchg
xchg
jmp
fs
dec
cmp
jmp
and
mov
popa
lea
call
xchg
arpl
sub
clc
daa
fisubrs
sti
pusha
loop
inc
mov
mov
loopne
shrb
movsb
movl
sarl
push
mov
jl
xchg
xlat
clc
test
cld
icebp
dec
xor
test
mov
dec
dec
pop
xlat
mov
pop
in
cmpsb
mov
ficoml
adc
lea
jg
es
mov
movsb
jns
sub
inc
test
enter
push
out
or
mov
inc
inc
dec
bound
ja
outsl
sti
cs
jmp
adc
cmp
lahf
or
push
das
hlt
push
je
sbb
and
sub
fistpl
insb
and
push
mov
jg
add
ds
push
cwtl
sub
pop
lods
repz
test
adc
sub
inc
mov
pushf
fs
or
pop
mov
mov
mov
es
das
sub
add
lret
xchg
daa
negl
in
lds
push
mov
lret
jae
sub
loopne
std
sub
cwtl
aam
addr16
jle
out
mov
push
ret
sub
push
sub
gs
lock
pop
push
fistl
rorl
das
cmp
xor
sub
rorb
pop
test
mov
inc
int
out
ss
daa
in
daa
mov
scas
ja
cli
push
xchg
sub
or
dec
js
jne
and
fcompl
push
push
push
dec
movsb
mov
xchg
cli
js
pop
jmp
cmc
mov
arpl
sbb
rcrb
mov
xchg
iret
mov
ret
mov
dec
arpl
clc
inc
mov
fcomps
cmpsb
dec
and
inc
repnz
cmc
or
loop
sbb
push
loop
inc
add
shr
mov
pop
adc
enter
loope
cmpsb
lods
push
mov
aam
cwtl
fisubrl
ja
je
jmp
sbb
adc
notl
dec
dec
mov
or
xor
ds
movsl
jmp
lahf
xor
push
or
in
imul
hlt
push
xor
adc
daa
out
cmp
shlb
das
stos
xchg
repz
mov
dec
lds
stos
mov
fisubl
cmp
pop
or
scas
inc
es
lahf
mov
sbb
fldcw
outsl
shl
outsl
leave
mov
mov
lods
xor
mov
in
sbb
addr16
loopne
xchg
push
lock
mov
inc
adc
lea
xor
adcb
leave
into
xor
or
jo
jae
pop
pop
add
jg
cmp
fadd
pushf
xchg
mov
aas
and
insb
adcb
xchg
dec
cs
idivl
pop
daa
add
addl
xchg
push
sbb
test
or
icebp
push
adc
ret
mov
dec
sbb
jge
sbb
fisubs
notl
xchg
ret
jmp
ja
pop
dec
adcl
in
xlat
movsl
cmpsl
xor
add
popa
mov
push
and
movsb
fst
xchg
xchg
dec
xor
lods
aaa
les
ret
mov
out
cli
xchg
mov
mov
jb
rcrl
das
add
call
jmp
lret
into
leave
int
fldenv
inc
pop
or
push
js
cmp
cwtl
dec
mov
pop
mov
repnz
inc
rclb
inc
dec
add
cmc
cmpsb
or
movsl
loop
dec
test
imul
cltd
fdivr
dec
gs
sbb
js
jg
xor
and
jp
fldenv
cmp
cmp
inc
loope
movsb
jne
mov
adcb
arpl
and
push
cltd
pop
cmp
cltd
daa
in
jbe
out
sahf
adc
out
int3
out
jnp
rolb
aas
jo
pop
jmp
mov
xchg
call
test
and
sarb
fs
repz
sub
movsb
or
jmp
mov
mov
cmpsb
js
xlat
mov
mov
repz
dec
add
rol
mov
sbbl
bound
jmp
incl
out
ljmp
hlt
and
jg
cmp
dec
xchg
and
and
cmpsb
jg
int
push
xorl
out
inc
fisttps
jg
in
fldenv
aad
dec
testb
flds
dec
pop
aas
cltd
mov
xchg
pop
xlat
push
test
leave
push
enter
or
shll
mov
and
shll
adc
lods
mov
lods
xchg
and
pop
mov
insl
test
pop
sub
ja
movups
lcall
lock
mov
shrb
xlat
nop
mov
cmp
xchg
mov
orl
in
cmp
mov
mov
and
xchg
ret
loope
fildll
mov
aaa
sahf
sbb
iret
pop
pop
shlb
xchg
test
inc
jbe
add
das
adc
clc
xchg
bound
ja
xchg
repz
push
cmc
pop
in
pop
ss
xchg
add
repnz
and
push
inc
and
and
pop
jge
push
shl
std
push
mov
mov
repnz
xchg
mov
test
pop
or
cmp
jb
or
mov
iret
sti
movsl
cmp
cmp
sub
jmp
clc
negb
adcl
xor
lahf
rolb
mov
sbb
fcomp
test
ljmp
or
sub
and
jbe
in
inc
aad
imul
outsl
mov
rcrl
sbb
je
push
add
push
popf
push
js
lods
ja
and
jge
cli
and
adc
fadd
push
ret
stos
idiv
adc
mov
out
push
pop
popf
test
in
sub
shll
ljmp
pop
jg
rcll
loope
cmp
mov
inc
inc
or
js
push
pop
loopne
fsubl
mov
inc
dec
jno
sub
inc
sahf
int
clc
push
push
push
stos
push
in
jmp
test
loope
and
and
xor
cmp
stc
out
sbb
lahf
push
mov
push
leave
adc
mov
fdivs
dec
sahf
pusha
push
mov
sub
jbe
jne
mov
pop
fcomi
in
repz
scas
hlt
leave
sbb
cmpxchg
stos
ljmp
sbb
or
mov
and
xor
sbb
xchg
mov
or
and
aas
cmp
push
outsl
add
loope
xchg
test
xchg
inc
shll
mov
dec
pop
int3
pop
loop
push
das
lcall
push
sbb
cld
cmp
mov
in
pop
mov
dec
inc
xchg
sbb
add
dec
daa
sbb
mov
data16
push
inc
outsl
push
std
pusha
jge
adc
xlat
lcall
ja
lods
dec
sysenter
out
hlt
mov
push
cmp
fwait
imul
fldenv
cmp
sub
adc
test
fdivrs
mov
mov
and
outsl
cs
fldcw
lods
enter
invd
icebp
ficompl
xor
inc
push
std
mov
pusha
push
xor
jg
jb
test
not
outsl
fstl
aam
push
lahf
popf
jge
sub
push
xchg
cmc
mov
adc
sbb
add
clc
dec
and
or
leave
add
sbb
outsb
je
popa
rorb
insb
push
xchg
es
les
outsl
dec
adcb
out
popl
mov
cmpsb
jge
mov
cmpl
lea
jmp
rcl
ror
ror
jnp
cmp
clc
js
push
js
fbld
xchg
inc
roll
lret
sub
stos
outsl
test
or
xor
push
adc
xchg
ficoms
mov
popf
or
adc
rcrb
clc
inc
iret
dec
fsubr
sahf
dec
mov
mov
in
pop
addr16
jne
lods
mov
addb
and
jge
jp
xchg
daa
rcll
outsb
lahf
inc
lds
rcr
dec
inc
pusha
shrl
lcall
lds
push
mov
sbb
sbb
cltd
aas
addb
jae
loop
hlt
cwtl
stc
mov
ja
and
cmp
rcrl
sbb
aam
fsubp
and
pop
pop
aas
sbb
push
mov
fnstenv
call
jbe
xlat
and
push
into
popf
mov
stos
dec
js
xchg
inc
pop
push
ja
cmp
mov
leave
cmp
adc
xor
sub
int
in
mov
add
stos
or
jge
les
or
sahf
ret
stos
pop
mov
push
lds
imul
xchg
push
adc
fs
iret
mov
push
mov
mov
cmp
arpl
mov
iret
je
sub
stos
sub
ja
arpl
aaa
mov
push
or
jg
or
adc
lea
out
or
fld
mov
lock
push
mov
out
jmp
daa
fsubr
inc
push
popa
lret
stos
fcomps
mov
inc
adc
mov
or
mov
fcoms
cli
mov
xchg
pusha
xchg
mov
mov
sub
inc
xor
mov
andb
daa
scas
jmp
add
sub
aad
jmp
ja
test
enter
aaa
inc
mov
xchg
fisubrl
out
add
icebp
push
pop
xlat
inc
ljmp
cmpsl
test
iret
xorb
outsb
adc
pusha
scas
dec
in
and
sub
sbb
xor
xchg
or
cmp
xorb
mov
and
or
pop
imul
xlat
add
inc
xor
sbb
int
adc
imul
mov
push
scas
or
dec
es
fstpt
inc
add
mov
lahf
xchg
mov
cmc
cmpsb
adc
sbb
jo
cltd
pop
pop
dec
sti
sub
aad
jl
imul
js
xchg
push
jnp
sub
gs
cmp
js
mov
jnp
pushf
sub
movd
dec
sbb
push
mov
jle
cli
jmp
test
and
test
test
mov
inc
popa
lods
xchg
xchg
bnd
int
jp
test
mov
sbb
fisubrl
fs
cmp
scas
popf
inc
scas
fstp
data16
fnsave
sub
nop
cmp
and
and
nop
add
enter
sub
mov
mov
mov
sbb
mov
shrd
adc
pop
push
popf
mov
iret
jne
mov
inc
ret
shrl
testl
pop
sub
jecxz
sarl
add
sar
and
mov
daa
xchg
adc
pop
cmp
xlat
cmp
and
sub
or
adc
mov
movnti
xor
mov
in
call
clc
out
dec
pushf
cmp
cmp
sbb
idiv
xor
addr16
xor
add
adc
push
fisubrs
and
popl
ljmp
jle
mov
repnz
mov
movsb
cmp
sti
dec
in
flds
int3
ljmp
or
xor
xchg
jno
or
les
mov
pop
jae
pop
inc
cmpsl
mov
push
xchg
jb
jmp
jne
push
sub
mov
dec
sbb
or
out
mov
fsts
mov
inc
enter
mov
xor
jne
popf
xor
xor
gs
outsb
jno
sub
pusha
inc
cmp
xchg
loope
scas
xor
shl
cmp
sbbl
ret
ret
mov
out
add
dec
jmp
or
pop
es
in
test
inc
pop
js
aaa
mov
adc
dec
jl
shrb
cmp
jns
nop
outsl
test
push
or
fsts
and
mov
add
int3
push
lcall
dec
sub
inc
and
push
mov
jmp
ret
ror
fld
outsb
js
inc
orb
push
cmpl
jl
js
lcall
in
mov
and
fwait
sbbb
xchg
lret
hlt
ret
inc
test
sub
fists
mov
std
push
fistpl
cmp
jb
int3
adc
jp
insb
sbb
je
loopne
stc
xor
mov
inc
xchg
or
sbb
adc
mov
les
sub
push
sbb
in
outsb
dec
rorb
fisubl
shrl
jg
xorl
and
mov
fwait
pop
adc
sbbb
pop
dec
ds
sbb
push
sar
je
sbb
xchg
daa
jnp
clc
imul
jb
push
pop
mov
jg
arpl
out
decl
popa
and
sbb
sub
out
jae
xchg
mov
pop
xchg
xchg
lret
pop
adc
insb
int
mov
push
in
pushf
sub
popa
dec
mov
ret
sbb
pop
mov
jb
pop
rcrb
jb
outsl
pushf
mov
cmp
into
mov
sbb
movsb
in
fisubs
push
enter
movsb
je
aad
fnsave
push
sbb
negb
mov
mov
les
rorl
inc
sarb
mov
test
push
fsubrs
fwait
adc
inc
jmp
xchg
sub
jae
rorl
dec
push
ret
xchg
aas
lods
push
sub
inc
arpl
dec
pop
pop
in
dec
outsl
loopne
outsb
divb
push
int
ljmp
divb
xchg
pop
mov
lods
call
into
jecxz
and
hlt
adc
arpl
in
mov
pop
pop
inc
andl
push
stos
out
je
ret
and
mov
sub
cmc
arpl
xchg
mov
mov
fists
mov
cld
jns
imull
fiadds
incl
inc
cmp
movl
enter
and
mov
dec
jg
mov
cwtl
xchg
les
push
add
sub
xor
lods
adc
or
adc
sub
lret
aaa
cmp
cmp
dec
inc
mov
pop
sbb
xchg
rcll
cmp
sub
shll
or
sub
xchg
xchg
leave
or
xor
lock
cld
mov
jae
dec
out
mov
jmp
sbb
stos
ljmp
xlat
call
inc
ret
add
outsl
push
cmpsl
jp
mov
insb
mov
out
notb
sub
out
cmp
scas
sub
out
jo
mov
loopne
jb
bound
dec
in
and
mov
mov
jmp
aam
in
add
sahf
xchg
das
inc
jmp
outsb
sbb
jo
mov
jecxz
pop
imul
adc
outsb
stos
stos
das
icebp
cmp
pop
push
pop
in
inc
repz
hlt
or
xchg
in
xchg
pop
lea
mov
lods
dec
testb
cmp
pop
sti
adc
jns
cli
mov
adcl
fidivrs
pop
add
in
leave
sar
add
outsl
arpl
loope,pn
pop
mov
inc
jne
push
int
shlb
test
inc
or
cmpsb
insl
test
pop
adc
test
pop
push
xchg
or
test
inc
lret
gs
cmp
mov
rclb
shlb
in
sahf
jg
mov
test
addr16
mov
mov
int3
inc
scas
icebp
aam
xchg
jb
stos
jge
mov
xchg
rcpps
xchg
fs
nop
es
fs
sub
inc
mov
notb
add
pop
mov
push
out
cmp
lea
pop
stc
xchg
pop
dec
imul
pop
loope
call
dec
call
sar
mov
adc
ss
and
sub
jns
sarb
cs
adc
jbe
cmp
cmpsb
mov
mov
mov
gs
popa
mov
add
js
fstpt
cmp
and
mov
inc
sub
mov
cmp
mov
jmp
or
daa
imul
fdivrs
xor
or
jmp
rcl
mov
cmc
dec
sbb
xor
in
mov
dec
lahf
cwtl
mov
test
xchg
imul
hlt
xor
cmpsl
popf
sub
pop
lahf
add
add
jo
pop
imul
test
cmp
sbb
int
lods
push
aad
cmpl
or
xlat
mov
outsb
jmp
cmpsl
add
lea
jmp
ds
enter
int
xor
pop
mov
xchg
push
js
push
or
pop
out
push
xor
or
popf
movsl
sbb
lock
aam
cmpsl
shll
mov
xchg
or
dec
pop
shll
fucomip
icebp
xchg
pushf
pop
xor
arpl
into
pop
pop
addr16
les
rep
mul
mov
scas
aam
adc
or
in
push
sub
mov
mov
notl
imul
push
jae
lods
jp
mov
mov
popf
mov
add
and
add
in
stos
inc
add
mov
sub
sahf
mov
mov
cmp
lahf
add
mov
popf
and
in
mov
jno
xor
enter
xor
jp
frstor
push
out
fdiv
push
dec
jl
repz
or
and
iret
pop
es
test
ficoml
ret
adc
icebp
ret
jge
lea
mov
jbe
popa
fimuls
mov
movsl
mov
scas
jge
pop
shr
rolb
pushf
mov
sbb
add
test
jl
ss
push
bound
out
test
push
jl
and
mov
fmuls
xlat
pshufw
les
or
pop
ret
fdivl
je
sub
je
sub
and
jo
jb
push
into
and
mov
dec
int3
ret
xor
xor
rorb
sub
dec
jnp
or
mov
xor
shlb
call
daa
jno
mov
mov
test
adc
inc
mov
fnstsw
mov
adc
dec
mov
enter
pop
xlat
mov
adc
rcl
jae
and
popa
jl
mov
mov
aad
es
hlt
mov
adc
adc
pop
xor
pop
cmp
jle
push
daa
decb
inc
sub
sbb
rcll
sahf
xchg
movhps
cmpb
fisubrs
adc
imul
shld
in
sti
les
cli
daa
jg
cwtl
mov
sbb
loopne
dec
cmp
popf
adc
cmp
test
call
pop
pop
loop
in
sub
imul
inc
sub
nop
loopne
adc
mov
icebp
and
dec
call
fsubrl
movsl
inc
and
div
std
mov
sub
add
jns
or
add
mov
jge
jg
jae
outsb
cltd
stos
xor
push
sub
mov
aad
xchg
mov
pop
xor
sbb
mov
jbe
cmp
std
dec
pop
ret
xchg
xor
ret
clc
nop
in
inc
inc
push
bound
sbb
movl
out
lcall
xchg
mov
adc
pop
mov
jl
rolb
mov
jmp
aam
cmp
mov
fiaddl
push
test
enter
mov
imul
jns
pushf
mov
fldt
clc
pop
pop
xor
and
aad
xor
mov
cltd
test
je
jo
xor
movsl
adc
cltd
insl
inc
push
ror
rolb
xchg
rclb
sarl
idivb
mov
sbb
xchg
test
push
jecxz
int
xchg
sbb
or
push
test
ret
mov
dec
and
sbb
mov
bound
repz
andb
and
xor
addr16
vunpcklps
mov
mov
insb
std
dec
mov
pop
mov
in
and
push
mov
out
ret
js
pop
xchg
xchg
push
dec
mov
call
cmp
nop
je
pop
xorl
xor
or
arpl
mov
adcb
xlat
mov
test
fidivs
rclb
into
sub
and
cmp
mov
in
or
popf
aas
mov
movsb
fildl
cltd
push
cld
adc
pusha
roll
loopne
ficompl
fnstenv
add
fidivl
in
mov
test
mov
mov
xor
ret
inc
outsb
cmp
loopne
add
out
aaa
lcall
rclb
add
push
insb
push
adc
enter
iret
into
test
sbbb
cmp
pop
and
outsl
insb
dec
mov
mov
mov
test
daa
nop
xorl
sub
outsb
ds
mov
sub
sub
sahf
std
movsb
aas
add
pop
addb
pop
mov
or
mov
mov
xor
add
jmp
cmp
ret
rol
rcl
int
push
nop
ficomps
mov
push
js
outsb
pop
repz
movsl
xlat
and
mov
dec
stos
jns
add
fcmovnu
es
sub
mov
mov
or
and
mov
jae
push
call
jne
and
xor
adc
imul
cld
ret
push
sbb
xchg
sbb
rorl
test
out
push
ss
je
das
adc
not
lods
mov
adc
or
xor
inc
xor
pop
stc
inc
nop
stos
add
ret
xchg
loopne
or
sub
je
jge
lea
ja
mov
inc
lods
clc
mov
mov
out
ss
imul
inc
add
push
pop
pop
cltd
and
mov
dec
clc
lret
cld
int
and
sbb
xchg
shlb
xor
dec
mov
and
lahf
in
cs
xor
std
call
xchg
pop
outsl
push
mov
out
inc
imul
dec
stc
out
add
xchg
adc
hlt
mov
push
nop
lea
xchg
jns
imul
add
insb
rolb
jecxz
cmp
inc
cld
mov
popa
aad
push
xor
shll
or
filds
mov
mov
jp
sub
es
stos
clc
jne
dec
push
adc
and
xor
dec
loope
mov
in
sub
add
cmp
dec
outsb
jl
test
add
dec
jmp
scas
aam
cmc
mov
xchg
pop
pop
push
xchg
jae
fmul
jbe
mov
cmpsl
sbb
pop
mov
jns
adc
push
or
dec
aam
sub
das
mov
mov
inc
in
dec
sbb
adc
xor
push
lea
xor
dec
test
and
lds
gs
aam
std
or
outsb
loope
or
xchg
mov
xchg
loopne
ret
xchg
push
inc
push
and
jge
adc
cmc
fnstenv
inc
lret
push
mov
gs
and
decl
inc
and
xchg
sub
dec
mov
mov
mov
or
push
add
push
lods
adc
rcrl
xchg
out
in
sbb
xor
aad
int
adc
jbe
in
sbb
pop
in
and
sbbl
adcl
cmp
hlt
leave
outsb
jle
movsb
add
sahf
scas
fildll
jg
stos
cwtl
loop
fcompp
jl
xor
jb
cmpsb
mov
push
insb
mov
ret
mov
xchg
lahf
mov
mov
test
mov
aas
pushf
mov
push
nop
sbb
test
loopne
inc
out
js
push
xchg
xchg
sbb
sub
pop
leave
dec
or
dec
jl
je
or
or
jae
mov
push
add
cmpsb
inc
in
mull
lea
and
cltd
xchg
sarb
scas
sub
out
cmp
dec
fsubr
inc
mov
lret
loop
sub
ljmp
jb
mov
outsl
sub
arpl
pop
imul
cmova
out
aaa
daa
pop
mov
addr16
adc
jno
aad
arpl
mov
loope
xor
adcl
sbb
movsl
jmp
mov
push
jne
jmp
fmuls
cs
mov
inc
dec
jnp
stc
sbb
fcomip
fs
add
adc
movsb
rcrb
decb
ds
jb
imul
mov
aam
xchg
inc
inc
out
and
inc
adc
shll
call
xor
mul
into
pop
sub
fs
rolb
addl
sahf
negl
cmp
subb
test
scas
mov
loop
dec
out
pop
popa
in
enter
cltd
idivl
xchg
repnz
and
outsl
mov
adc
cmpsb
test
outsl
or
out
sarb
xchg
subl
inc
movsb
sub
out
fwait
cmp
std
mov
in
jge
sbb
arpl
cmp
sub
sub
les
or
mov
cmp
addr16
fisttpll
psubsb
pop
mov
clc
xor
addr16
mov
loopne
pop
dec
add
xchg
push
inc
jl
sub
jl
jo
popf
aas
push
xchg
mov
xchg
es
jae
sbb
lds
push
les
add
leave
ret
leave
leave
leave
lret
int
ljmp
js
jl
js
fmull
pop
adc
and
add
add
xchg
mov
inc
rolb
cmp
mov
inc
fwait
pop
ss
cmp
mov
fsts
push
and
arpl
mov
pop
mov
stos
lods
or
cmp
rcl
andl
mov
cmpsb
and
sbb
adc
or
ss
adc
xchg
adc
push
fsts
xchg
jl
aam
add
cmpsl
inc
xchg
mov
scas
ret
mov
cs
sub
or
jge
int3
cmp
ds
mov
sbb
mov
lods
gs
aas
jbe
ret
adc
lahf
jb
sbb
lock
popf
aas
dec
pop
pop
jnp
lahf
sub
loope
test
loopne
dec
xchg
mov
or
xor
xor
dec
lock
ss
push
bound
mov
fs
stc
xchg
daa
mov
sbb
je
mov
ss
in
pop
xchg
out
decb
ljmp
pop
movsl
repz
hlt
cmp
jo
movsl
cmp
add
add
xor
push
enter
mov
push
ja
fs
add
mov
test
ss
dec
sbb
pop
cmp
push
sbb
mov
fbstp
mov
in
mov
jp
shlb
mov
push
or
xor
mov
lret
mov
xchg
test
inc
jno
pop
aam
pop
push
sbb
test
out
mov
xor
in
lahf
lret
add
dec
cmp
add
dec
fwait
cmpsb
fwait
les
mov
addr16
pushf
add
push
shrb
out
fsubrs
mov
mov
xor
aaa
cmc
mov
adc
lahf
sbb
daa
repz
pop
mov
lcall
cwtl
inc
or
mulb
rolb
cmpsb
jmp
into
mov
ret
in
bound
ds
movsl
fdivr
or
enter
pop
pop
iret
mov
pop
lahf
in
cmp
pop
aaa
cmpsl
mov
or
adc
mov
fsts
push
mov
add
and
push
addr16
in
pop
cmp
lea
ja
push
ja
les
push
mov
pop
push
aam
cmpsb
out
and
dec
popf
mov
jg
mov
jno
dec
xchg
jne
ja
push
sarl
js
scas
add
mov
js
jg
hlt
dec
in
sbb
pop
pop
jne
clc
and
call
or
inc
cmpsl
lods
pop
sti
mov
pop
imulb
fstpt
fsubp
push
lret
in
mov
xor
rcr
repnz
add
push
or
inc
aad
in
shlb
push
lret
or
adc
xchg
lcall
repz
int
xchg
test
fcoms
movsl
je
cltd
clc
scas
aad
sub
mov
jmp
stos
xchg
inc
and
and
push
inc
and
jno
inc
bound
call
movsl
dec
fiadds
mov
inc
sahf
jl
sbb
adc
push
imul
aam
sbb
pop
fimull
scas
popf
sbb
xor
sbb
xchg
loope
sub
mov
jae
test
push
add
insb
imul
mov
cmp
cwtl
push
out
dec
mov
pop
cmp
mov
push
mov
adc
fiadds
inc
push
lds
pop
pop
push
pop
loop
inc
mov
mov
dec
mov
ret
fidivl
comiss
mov
jle
iret
and
daa
or
popf
mov
add
mov
jns
mov
lds
cltd
lods
loop
inc
popf
and
inc
fisubl
and
sub
aas
notb
xchg
je
into
xchg
repz
stc
nop
in
shrl
or
cmp
add
inc
pop
push
dec
stos
popf
orb
loop
nop
mov
push
mov
clc
outsl
jo
into
or
push
add
and
cwtl
add
push
imul
fistpl
in
cmpsl
xor
xchg
idiv
in
fists
jne
sub
js
mov
loope
adc
movsl
test
jl
imul
dec
cltd
adcw
xchg
adc
xchg
les
scas
insb
fmuls
dec
shlb
daa
in
cmp
popf
aad
andl
mov
mov
aad
pop
loop
shrb
xor
add
mov
mov
mov
lea
mov
jmp
lret
rcl
fnstcw
stc
mov
dec
nop
js
push
js
int3
pusha
movsb
inc
lods
adc
int
fstpt
gs
xchg
push
mov
pop
lahf
push
loopne
fsubrl
shll
push
and
pop
mov
adc
imull
je
mov
xor
xor
push
mov
pop
jp
mov
xchg
aas
jmp
dec
loopne
sbb
sub
clc
jne
test
aas
rcl
cwtl
xor
sbb
mov
rcl
out
pop
jg
hlt
enter
mov
in
cmp
inc
sub
push
jns
pop
add
adc
mov
pop
dec
cmc
sub
cmp
cld
jmp
xor
in
test
ret
mov
push
sub
dec
xchg
push
dec
roll
lret
mov
mov
sbb
cmp
scas
xchg
push
push
sub
pop
outsl
mov
pop
pop
div
sub
mov
jae
sbb
scas
add
push
mov
xchg
mov
xchg
and
inc
mov
dec
fcoml
sub
mov
aad
inc
ljmp
in
test
lock
adc
xchg
inc
cld
fcompl
xor
dec
addr16
push
sub
stos
clc
sar
jl
jle
ss
ljmp
sub
mov
inc
cmpb
flds
mov
addb
inc
and
fsubl
inc
mov
dec
pop
and
test
subps
xor
push
mov
sub
stos
jge
test
das
repnz
pop
cld
lcall
push
add
js
and
rclb
jb
flds
pop
lods
insl
pop
icebp
xchg
xchg
stos
sub
into
cltd
fwait
mov
loopne
cmpsl
loop
rcr
add
in
ljmp
aaa
mov
cmp
fs
fnstcw
popa
addb
leave
outsb
cltd
pop
adc
cs
iret
lret
das
xchg
subb
sub
lcall
fnstsw
enter
cmp
pusha
jg
inc
lret
pop
lods
push
add
pop
outsb
fs
dec
add
sarl
rorb
pusha
mov
out
jmp
or
fldenv
popa
jl
mov
pop
inc
sbb
jnp
dec
jno
push
cltd
clc
imul
push
fwait
lods
call
sub
sub
fisttpll
inc
out
lahf
mov
xor
push
dec
push
cmpb
mov
shl
or
int
sahf
ret
ror
movsb
lock
jmp
mov
leave
dec
pop
pop
xor
and
jnp
imul
test
mov
es
inc
add
sub
jmp
iret
insl
orb
xor
retw
inc
sbbl
bound
test
pop
cwtl
stos
mov
and
lahf
les
fstpl
add
loop
je
sbb
lock
js
loop
sbb
hlt
sub
or
leave
inc
pop
test
fcmovnbe
cld
pop
ss
push
scas
out
xor
icebp
add
cmp
push
jns
pop
ljmp
and
mov
sarb
and
jnp
inc
lret
into
sub
lret
iret
push
jmp
mov
mov
pop
mov
jne
pop
dec
int
out
mov
mov
js
mov
enter
xchg
cmp
orb
pop
les
add
mov
andb
cmp
and
ja
repz
add
lods
pop
xor
outsl
jmp
jecxz
pop
ds
cmp
push
cmpl
xor
addl
ret
mov
mov
dec
add
lods
ret
ja
mov
call
push
adc
fistl
insb
add
inc
rcr
loopne
mov
je
mov
mov
mov
mov
imul
inc
sbbb
negb
fs
adc
ret
shr
stc
or
cmc
xchg
mov
test
xlat
les
mov
dec
jnp
xchg
gs
mov
cmp
cmp
sbb
push
imul
adc
andl
scas
jge
in
out
pop
mov
inc
xor
cltd
sbb
icebp
out
lcall
out
pop
shlb
inc
lock
mov
jmp
vpsrld
fcmovbe
leave
sarl
cmp
mov
xor
fwait
js
push
js
fistps
and
hlt
xchg
pop
dec
cmp
xor
ja
or
sub
xlat
push
mov
dec
inc
and
hlt
mov
mov
pop
push
mov
test
mov
push
fadds
xchg
mov
adcl
inc
jg
dec
sbb
fwait
ja
lret
or
adc
pop
sub
xchg
mov
cmp
mov
mov
lds
ja
xchg
add
sbb
add
mov
jne
push
dec
std
xchg
add
ret
mov
lret
xchg
sub
into
push
in
push
sbb
adc
dec
mov
out
add
lahf
out
out
jl
loope
mov
pop
int3
or
mov
fidivs
test
repz
push
cmp
cmp
cmp
das
loopne
add
dec
stos
pop
sub
and
rcl
add
das
ja
imul
lock
ja
xlat
pop
fcmovnbe
test
mov
nop
inc
out
adc
or
fcmovbe
shlb
fwait
sub
cmp
dec
loopne
push
xchg
adc
or
fcmovnb
mov
idivl
push
pop
clc
cmp
cs
dec
popf
jecxz
cmpsb
stos
ret
nop
dec
inc
test
add
fsubrl
mov
pop
loopne
in
push
push
repz
das
xchg
lahf
cli
dec
push
pushf
and
cmp
sbb
jmp
mov
sahf
fdivl
shrl
dec
adc
inc
dec
aad
enter
std
aam
int3
xor
adc
jmp
sbb
fcmovne
xlat
fdivrp
or
xor
cwtl
add
push
xchg
jle
enter
jb
outsl
add
scas
addr16
pop
lea
adc
or
test
aad
scas
jnp
aaa
and
mov
push
mov
pop
mov
mov
fsubs
pop
arpl
mov
sub
mov
jno
jbe
adc
jae
jmp
sarl
je
pop
gs
xchg
je
pop
xlat
cwtl
cmp
decb
mov
or
jle
jg
jo,pn
or
inc
mov
into
dec
or
lret
popf
jb
test
pop
mov
inc
xchg
jmp
daa
or
xorl
xor
xor
dec
jo
xchg
push
xchg
sbb
outsl
inc
jnp
cld
fidivl
inc
pop
gs
dec
cmp
mov
xor
out
gs
adc
mov
cmp
sahf
sub
mov
xor
shl
ja
xchg
adc
sub
fnstcw
daa
inc
xchg
cmp
ret
or
pcmpgtw
sub
enter
jl
jle
in
or
ljmp
fadds
cmp
xchg
mulb
xlat
inc
and
mov
or
ret
test
push
lret
lock
sub
popf
lock
jns
test
jns
into
call
arpl
pushf
fsubs
lea
or
push
in
mov
call
in
dec
lds
mov
inc
mov
inc
xacquire
cli
outsl
pop
inc
xlat
mov
aas
mov
dec
add
scas
ljmp
popa
arpl
sbb
sub
mov
cmp
inc
sbb
int3
dec
cld
movsl
xor
movsb
mov
stos
pop
push
addr16
dec
jae
xor
loopne
jp
scas
shl
dec
sti
cltd
nop
push
les
pop
jmp
in
dec
ja
popa
sub
lods
daa
push
aam
loop
push
jns
push
je
mov
out
roll
push
cmc
repnz
sub
rclb
xchg
cmc
xchg
sbbb
cs
and
push
xchg
add
inc
out
inc
addr16
inc
xchg
orb
popf
aas
pop
scas
add
dec
scas
or
cltd
out
in
mov
fdivr
and
pop
decb
faddl
cmp
push
outsb
cld
stos
and
fiaddl
jns
xchg
jmp
push
mov
in
lret
lock
push
jae
sar
jno
stos
repnz
mov
call
in
scas
pop
inc
xor
xor
mov
in
nop
inc
dec
outsb
add
ljmp
xor
push
nop
outsl
fstpt
add
lea
push
mov
pop
cltd
ja
adc
jns
test
cli
pop
xchg
mov
mov
ret
xor
test
data16
fldl
jbe
shll
push
push
xchg
les
faddl
push
adc
divb
mov
mov
mov
jmp
ror
ror
rcl
rcl
cld
in
lock
stos
sahf
js
push
js
push
lods
loopne
popa
loope
jmp
xor
dec
mov
sti
rcll
fs
test
jns
xchg
testb
push
xchg
out
loope
inc
pop
test
gs
jmp
fs
push
xor
mov
sbb
bound
add
jmp
and
sti
pop
push
jge
sub
fldl
or
xchg
jb
sub
insl
subl
lahf
scas
pop
mov
je
lret
out
adc
jnp
rclb
movups
gs
aam
loopne
xchg
icebp
dec
fstl
fwait
xchg
lcall
inc
or
mov
push
push
bound
jae
push
lret
add
push
adc
adc
inc
pop
mov
push
mov
push
sub
mov
dec
sub
mov
insb
out
adc
sub
js
adc
clc
daa
adc
clc
idiv
data16
mov
sub
loope
xchg
movsb
adc
push
enter
inc
jbe
sbb
jno
lret
push
fcoms
cwtl
jp
insl
push
inc
xlat
leave
add
jns
mov
push
jl
adc
ljmp
pop
notl
ret
pusha
push
cld
lock
cmp
mov
and
xchg
pusha
mov
neg
mov
sub
pushf
jg
sbb
dec
jbe
lret
or
push
lret
jns
mov
dec
jb
mov
add
pop
fstpl
jb
aaa
pop
mov
adcb
fadds
jmp
push
mov
jmp
adc
into
adc
stos
cmp
xor
inc
mov
sahf
mov
pop
mov
push
addl
mov
mov
xchg
lea
fmul
and
in
inc
mov
lods
test
inc
cmp
je
mov
pusha
mov
arpl
sbbl
je
enter
jl
test
and
push
xchg
mov
stos
dec
add
push
loopne
in
pop
das
lds
mov
enter
and
cmp
mov
lods
aam
sbb
lds
xchg
dec
pusha
mov
rorl
loope
or
lods
bound
lods
cmp
mov
rorl
cmpsb
cmp
pop
add
adc
cld
ror
call
ja
xchg
iret
xorl
xor
shr
dec
xchg
xlat
mov
sub
daa
xlat
push
mov
mov
bnd
sbb
aaa
push
imul
sbb
mov
adc
cmp
or
sar
mov
loop
inc
add
xchg
aam
pushfw
lcall
pop
and
movsl
push
jb
mov
mov
test
lods
lret
jl
or
xchg
pop
xchg
js
lock
or
mov
jmp
push
pop
mov
into
mov
cld
and
std
pop
dec
mov
jmp
sub
das
shll
ss
int
and
insl
enter
mov
mov
mov
rclb
pusha
out
push
push
loope
out
and
gs
int3
mov
cmp
outsb
pop
movsl
data16
sub
jmp
aad
pop
add
adc
enter
add
popf
idivb
sahf
bnd
adc
repz
pop
fidivs
call
add
pop
aas
mov
lahf
xchg
cld
push
push
adc
xor
loop
icebp
les
mov
xlat
cmp
std
lock
into
inc
lahf
pop
sbb
cmpl
cmp
fistps
roll
mov
xchg
out
cmp
sbb
icebp
xchg
jle
es
jg
inc
fwait
in
lcall
cwtl
sahf
les
nop
pop
inc
ss
adc
pop
in
push
jo
lods
and
clc
push
xchg
das
dec
xchg
sbb
sbb
icebp
pushf
or
lea
xor
inc
test
mov
insb
fists
add
rolb
lcall
mov
and
mov
es
xlat
push
loop
pushf
add
push
ret
cmp
insb
hlt
popa
loop
sbb
mov
call
popa
aad
inc
fmuls
cmpsb
lods
lret
shl
dec
scas
jbe
mov
fs
ljmp
add
jbe
pop
adc
and
sti
insl
inc
mov
sbb
lahf
cvtps2pd
sub
cmp
adc
fsts
pop
movsb
jl
mov
xor
add
mov
mov
mov
jmp
lret
lret
leave
leave
leave
cmp
xchg
cli
mov
js
jl
js
adc
rclb
inc
push
cs
mov
outsb
mov
inc
and
or
je
dec
nop
mov
and
inc
mov
iret
gs
or
ljmp
fdivrs
dec
dec
pop
out
repnz
shrb
dec
and
pop
dec
mov
test
mov
push
bound
rorb
adc
pop
cs
inc
mov
sub
mov
push
outsb
mov
lea
lahf
dec
andb
je
jecxz
xchg
lods
xor
mov
icebp
mov
out
xor
repz
repnz
cltd
sub
bound
pop
stos
testl
call
inc
leave
or
out
mov
movsl
fistps
sub
push
dec
xor
dec
or
rcll
outsl
cmp
and
rorl
jl
push
dec
push
xchg
adc
jmp
stos
popf
out
adc
pushf
jge
fcmovnu
and
mov
and
mov
dec
pop
andb
dec
test
xchg
mov
movsb
push
xorl
aaa
and
stos
pop
sub
add
mov
lret
out
js
loopne
imul
pop
mov
add
cwtl
push
js
inc
push
xor
cmpsl
loopne
daa
in
stc
add
push
fadds
dec
jbe
cmp
repz
xchg
aas
gs
sbb
mov
mov
dec
pop
bound
popa
insb
test
xor
rcll
lods
adc
jp
enter
adc
fucomp
bound
pop
mov
cwtl
lods
mov
jge
lock
sub
arpl
arpl
xchg
sub
ljmp
fstl
aam
adc
pop
scas
or
sub
adcb
cmp
mov
push
mov
out
dec
dec
add
addr16
mov
shrb
ss
mov
dec
icebp
mov
aaa
test
sbb
shll
add
int
out
jmp
mov
xor
cmp
das
xchg
add
adc
or
mov
xor
in
inc
rcl
jmp
mov
sbb
lds
adc
fdivp
repnz
add
sbb
xor
push
mov
shll
xchg
aaa
arpl
fs
mov
and
pusha
testl
out
mov
fdivrs
pop
push
movsl
pop
pop
dec
push
cmpsl
loope
xchg
lods
ds
mov
pop
icebp
mov
jp
sub
sbb
outsb
dec
bnd
push
adc
push
pusha
adc
sarl
lods
cmpsl
jge
outsb
clc
and
les
add
push
or
cmp
lds
int3
pop
mov
test
add
dec
dec
or
adc
mov
dec
sub
cltd
in
mov
fbstp
sbbl
add
push
arpl
lock
inc
lcall
pop
rol
inc
jmp
aad
push
mov
cld
stos
lea
outsb
ret
enter
push
jecxz
xchg
icebp
mov
adc
mov
aad
arpl
aam
ss
fidivrs
outsl
mov
scas
cmp
scas
and
je
fildl
xchg
gs
cmp
in
cmpsb
cmp
test
inc
and
adc
push
cmovge
shrb
inc
cmp
xchg
std
push
mov
repz
adc
dec
xor
imul
call
and
enter
pop
sub
inc
cs
xor
aad
sbb
xor
cs
xor
sbb
xor
mov
test
xlat
jle
roll
push
mov
lea
xlat
leave
lods
pop
or
orb
test
cwtl
mov
test
ds
and
mov
clc
dec
mov
push
and
mov
out
mov
pop
sbb
or
pop
pusha
mov
ss
test
mov
jae
in
mov
les
cmp
mov
jecxz
mov
add
clc
dec
frstor
outsl
mov
cli
add
js
add
add
jnp
daa
sti
xchg
outsl
insb
inc
xor
lock
ja
in
inc
xchg
and
fcomps
add
mov
inc
aas
adc
mov
mov
jmp
cmp
ret
rol
dec
pop
fwait
or
fwait
pusha
mov
push
js
inc
jecxz
mov
add
pop
or
test
in
sbbl
loop
nop
inc
int3
sub
stc
jne
pop
cwtl
xchg
jmp
jg
iret
push
icebp
add
lds
xor
cltd
bound
mov
sahf
clc
add
jnp
xchg
push
lods
iret
ljmp
or
in
shrl
push
jecxz
pop
mov
insl
stos
mov
mov
push
and
popa
push
sbb
ret
jae
xchg
out
insb
negb
pop
jge
insl
and
dec
scas
jl
mov
into
cli
or
movsl
cwtl
push
push
sahf
incb
pop
jo
popf
sub
loopne
call
sti
mov
bound
es
adc
mov
xor
pusha
adc
push
into
test
mov
sahf
pop
dec
add
inc
fwait
gs
mov
sub
mov
loop
lods
jge
std
mov
adc
cmpsb
and
add
shrl
or
add
xchg
lahf
mov
es
dec
jge
fldenv
scas
nop
outsl
cmp
jns
and
inc
mov
aaa
je
les
aam
xchg
cmc
pop
mov
insb
lds
hlt
cmc
xor
push
jecxz
je
push
shlb
outsb
jbe
loop
mov
push
pusha
icebp
outsl
adc
int
rcll
xchg
pop
ss
xor
jb
test
loopne
inc
or
lea
jnp
inc
movsb
cmp
pop
mov
dec
mov
daa
dec
or
push
add
lcall
push
ljmp
insl
ja
cmpsl
pop
repz
dec
sahf
bound
sub
popa
lahf
pop
mov
add
test
enter
push
lahf
orb
inc
scas
add
sub
lahf
sub
xchg
adc
sbb
sbb
lea
dec
cltd
int
sahf
push
push
rcr
loope
loope
mov
lcall
stc
sub
mul
filds
aad
pop
add
data16
cmpsb
jns
adc
xor
adc
sbb
add
enter
rolb
xchg
xor
add
xchg
loop
call
jge
xchg
imul
or
outsb
pop
icebp
lret
xchg
fidivrs
xchg
in
jnp
sbb
xchg
cld
add
aam
inc
pop
adc
lods
insl
sbb
lret
or
pop
popf
or
xor
outsb
mov
sysenter
add
dec
mov
enter
sub
push
cmp
cmpsl
hlt
pop
lret
aas
mov
pop
fcomps
aas
outsl
out
inc
sbb
push
rcll
addr16
inc
mov
cmp
sbb
push
lahf
lret
or
mov
shrb
xorl
cwtl
es
stc
sbb
lret
sbb
push
lcall
incb
shrb
push
adc
jge
das
hlt
cmp
jl
jmp
add
fimuls
sti
shl
mov
mov
sub
clc
sub
rclb
jnp
add
insl
clc
aaa
adc
mov
mov
cmpsl
inc
mov
push
dec
mul
jecxz
into
repz
ret
mov
sub
insb
cmp
les
out
fcmove
movsb
cmp
and
fcomps
nop
inc
lret
lret
out
sub
fnstcw
mov
and
in
test
sbb
add
push
popf
and
in
in
and
jnp
sbb
cli
adc
fiadds
out
push
mov
insl
xor
call
mov
push
das
aad
orl
xchg
adc
lods
mov
ljmp
stc
repnz
and
lcall
cmp
xor
cld
xchg
jmp
push
pop
inc
inc
mov
inc
push
push
test
lret
jmp
cmp
inc
sbb
jno
and
rcrb
pop
inc
fldenv
push
stc
dec
jl
dec
jnp
pop
jmp
add
mov
and
pop
cmp
jbe
mov
add
adc
xlat
inc
push
jns
sub
rcrb
fs
or
mov
stos
leave
shl
hlt
xchg
int
and
mov
xchg
add
and
test
push
gs
movsl
aad
loop
push
popf
test
jb
insl
xchg
mov
add
movsb
clc
sbb
mov
fwait
testb
xor
arpl
push
dec
ficomps
fnstsw
push
mov
push
sahf
pop
cltd
mov
cmpsb
cmp
mov
andb
mov
add
and
dec
sbb
or
mull
inc
or
push
add
cmp
ror
rcrl
xlat
call
dec
lock
js
push
js
pop
add
pop
push
movsb
stos
ret
or
dec
addr16
scas
and
repnz
ljmp
aaa
push
mov
xorb
lods
pop
popf
sbb
dec
jno
stc
and
dec
mov
test
aam
out
in
xlat
popf
jo
test
stos
test
pop
jo
push
mov
cmpps
mov
gs
jno
sub
inc
inc
or
aas
repz
add
loope
addr16
divl
and
push
mov
push
repz
xchg
or
test
push
mov
fs
std
addl
test
clc
mov
mov
iret
cmp
mov
mov
insb
incb
lock
shrb
xlat
or
test
push
ljmp
or
fwait
adc
mov
in
dec
mov
lods
xor
mov
insb
add
adc
and
cvtdq2ps
jne
es
add
pop
iret
iret
mov
clc
stos
mov
jae
push
clc
xlat
adc
inc
or
je
mov
xchg
push
movsl
dec
dec
int
and
sbb
cs
push
data16
faddl
ljmp
jl
insb
fcomi
dec
mov
cmpl
pusha
pop
je
addl
or
pop
push
popa
mov
pop
mov
repz
aam
hlt
stos
insb
xchg
cvtps2pd
xchg
loop
jecxz
adc
lds
mov
xchg
cmp
mov
adc
loopne
jno
jmp
dec
mov
push
out
dec
cli
mov
pop
inc
and
sti
jno
loope
int
in
gs
inc
xlat
fistpll
push
mov
mov
mov
mov
mov
ja
stos
push
bound
lret
xor
mov
mov
and
jge
hlt
test
pop
and
aaa
in
imul
iret
xor
xor
add
stc
out
dec
es
sti
mov
mov
movsb
xchg
aam
clc
mov
push
mov
cmp
adc
rcrb
movsl
pop
cmpsb
jno
sub
sub
ret
lea
push
add
cmp
sti
xor
aad
mov
jge
sbb
inc
jns
test
push
sub
xchg
and
sbb
mov
fidivs
jns
xchg
out
xchg
faddl
jns
xor
scas
push
in
jne
sbb
jne
nop
sub
test
push
movsb
xchg
sbb
je
xchg
shlb
dec
or
jo
pop
es
adc
popa
cmp
xchg
sarb
arpl
jns
nop
add
orb
jge
fwait
inc
mov
jne
fidivrs
adc
xchg
ljmp
and
cwtl
das
out
popf
mov
mov
dec
adc
adc
rorb
inc
and
sbb
or
ss
clc
aaa
adc
lcall
cmp
mov
jno
repnz
push
mov
les
std
mov
stos
sahf
cmc
aas
data16
ret
and
in
jmp
sahf
lret
into
xorb
daa
xor
sbb
je
cmp
mov
xchg
xor
lods
test
test
cltd
mov
ss
jg
add
jbe
cmp
pop
adc
jo
sbb
pop
leave
nop
mov
push
mov
outsl
jg
jle
ret
aaa
mov
and
in
jcxz
ret
fsts
bswap
ljmp
das
pop
fisttps
fdivs
addr16
lods
lahf
cwtl
pop
xchg
dec
jl
dec
push
fwait
mov
in
das
aas
pop
push
cmp
or
outsl
jl
xchg
ja
insl
lret
add
jne
out
dec
into
lcall
ds
mov
dec
std
sub
shl
jns
jg
mov
sub
jmp
pop
rcrb
fs
enter
movsb
in
cld
dec
adc
dec
test
cs
addr16
xchg
dec
or
cmc
inc
jbe
add
pop
sub
stos
outsb
sahf
or
cld
dec
daa
orl
add
pop
sbbl
mov
ljmp
push
mov
into
adc
fsubr
decb
lods
cmpsb
loopne
fstl
pop
arpl
shlb
cld
sub
lahf
push
adc
int3
ds
out
ljmp
inc
in
sub
aam
negb
mov
orps
lret
lretw
shlb
pop
dec
push
into
push
pop
jno
lcall
rcll
mov
mov
mov
mov
jmp
iret
enter
fcmovnu
roll
ficoms
push
adc
loop
js
push
js
sub
push
mov
jo
shll
js
xchg
into
scas
or
ds
mov
sbb
jno
pusha
inc
insl
push
mov
mov
add
sti
shll
aam
mov
xchg
in
stos
clc
sub
std
or
xor
mov
lahf
stos
test
mov
cmp
xor
and
inc
mov
jnp
push
lods
pushf
loopne
ret
sub
mov
pop
insl
fcomps
adc
clc
insb
dec
aaa
dec
loop
pop
ja
or
and
xchg
cltd
cmc
js
adc
ret
mov
sbb
xlat
cmpsb
and
mov
sahf
jle
adc
add
xor
and
jbe
and
jg
jo
aaa
or
shrb
rcl
xchg
push
aaa
add
movsb
repnz
add
insl
psrlq
lcall
mov
and
cmpsl
call
add
shll
fdivrs
rolb
mov
out
ja
fidivs
mov
mov
cmpsl
xchg
dec
inc
mov
add
cmc
inc
imul
dec
orb
das
stc
aas
push
cwtl
sar
inc
xchg
lret
jns
test
dec
xchg
mov
shlb
ds
sbb
sbb
adcl
mov
lret
daa
loop
cmc
and
les
jecxz
into
sbb
mov
xchg
xlat
ret
sub
dec
arpl
rorl
test
push
mov
push
pop
clc
std
insl
icebp
xchg
and
mov
pushl
jno
mov
and
xchg
movsl
movsl
sbb
cmpsb
repz
push
cmp
fiaddl
mov
and
xor
es
mov
data16
test
addr16
test
sbb
mov
cmp
lods
adc
fcom
or
loop
lahf
test
sub
pop
xor
enter
push
cmpsb
dec
es
fists
std
leave
es
jecxz
pop
push
cmpb
popa
mulb
pop
cld
lret
cmp
mov
xor
sbb
ret
mov
cli
mov
into
in
push
and
dec
inc
sub
test
cmp
xchg
push
fbstp
xchg
fs
pop
mov
lods
rcrl
inc
movsl
rcrb
testl
pop
fwait
cmp
ljmp
push
ret
cltd
xchg
push
lcall
enter
push
and
xor
int3
int3
les
imul
test
mov
out
push
scas
push
daa
imul
fadds
adc
imul
lods
je
xor
test
or
mov
pop
data16
sahf
add
sbb
add
pop
daa
add
clc
jecxz
iret
cld
jl
jmp
das
loope
das
mov
loope
shll
mov
xchg
mov
xchg
lock
stc
arpl
lods
scas
adc
outsl
and
addr16
and
mov
add
cmp
sbb
push
leave
jo
movsb
iret
ss
xor
sub
mov
insl
mov
ret
fwait
and
sbb
add
adc
int3
rol
cmpsl
scas
mov
aam
jecxz
inc
test
sar
lock
xor
inc
fsub
xchg
mov
xchg
es
lods
scas
jne
sbb
sbb
mov
popf
lds
push
aaa
or
popa
push
jecxz
jns
jg
popf
jnp
test
mov
js,pt
cmp
in
in
shll
lret
add
das
jae
sub
daa
fiaddl
mov
and
or
outsb
jg
push
fstpt
inc
sti
push
xor
mov
cwtl
mov
rcrl
jle
add
loope
and
loopne
sub
and
nop
aaa
mov
in
in
nop
jns
filds
rcrl
je
jo
loopne
add
mov
mov
adc
bound
push
or
pop
dec
cltd
andl
les
inc
xchg
je
imul
add
jo
lcall
fnsave
and
mov
adc
sarl
mov
outsb
aad
inc
sub
inc
icebp
pushf
lods
sbb
in
sbb
mov
in
testl
mov
insb
mov
mov
pop
and
xchg
int3
lret
mov
mov
mov
jmp
ror
cmp
jg
jne
orb
int3
mov
js
jl
js
movsl
test
mov
dec
mov
adcb
jo
xorb
cli
adc
add
popa
in
add
or
xor
pop
sbb
mov
arpl
mov
adc
and
push
adc
inc
inc
mov
xor
xor
xchg
out
fnstsw
icebp
mov
push
and
pop
test
aad
mov
push
add
jmp
inc
lods
sbb
mov
mov
mov
cmpl
or
mov
inc
loopne
push
imul
aam
cwtl
push
push
repz
movsl
sub
std
in
sbb
jmp
fdivrs
cltd
and
clc
ljmp
fdiv
inc
cmp
mov
inc
stos
add
pop
pop
cs
jno
insb
or
xlat
gs
mov
xor
arpl
lods
fld
into
cmc
out
mov
aaa
mov
daa
cmp
cmpsb
mov
imull
push
adc
and
push
enter
lcall
jo
jmp
sub
test
mov
and
nop
jp
in
dec
sbb
lahf
adc
fadds
or
in
jp,pt
or
cltd
test
notl
lods
out
jmp
mov
fdivrl
jp
je
xchg
xor
pop
mov
mov
insb
movsl
out
mov
cmc
out
bound
xor
and
jge
mov
mov
sub
adc
dec
call
fwait
cmp
mov
pop
shlb
pop
mov
test
push
mov
sahf
shlb
daa
imulb
popf
movsb
fs
rorb
loope
movsb
and
leave
adc
jae
dec
int3
push
orb
dec
jmp
mov
inc
addr16
out
sahf
outsl
imul
sub
mov
cmpsb
es
add
cmp
movsl
xchg
faddl
pop
pop
inc
mov
fdivr
sub
subb
add
js
mov
push
mov
sub
cmc
es
inc
mov
or
sbb
insb
enter
sahf
rorb
mov
imul
call
lds
mov
add
jge
push
mov
xor
mov
sub
icebp
ficompl
ficompl
repnz
data16
and
fcom
lock
cmpsb
mov
cmp
addr16
sbb
out
add
fisubrs
popf
mov
inc
aam
xor
rorl
pop
int3
add
es
pop
loopne
mov
pop
mov
loopne
pusha
out
xchg
lods
push
testb
cmp
xorl
into
dec
in
or
insl
test
pusha
mov
es
shl
inc
xchg
mov
mov
stos
jae
psubb
cltd
sub
and
xchg
test
cmp
outsb
int3
pop
push
jbe
inc
push
adc
js
mulb
imul
sbb
insb
or
dec
icebp
sbb
sub
stos
les
or
shlb
movsl
mov
cmp
int3
stc
clc
sub
sar
sbb
pop
push
cmc
fisubrs
aaa
sub
push
scas
dec
mov
dec
aam
sub
gs
sbb
adc
cmpsl
pop
xor
shl
sub
adc
jge
ljmp
stos
cmp
add
data16
negb
adc
jae
cmp
dec
js
push
mov
es
loopne
xchg
sub
fstpt
adc
fmulp
in
sub
shlb
xchg
dec
cli
jbe
inc
xchg
add
fstps
push
nop
hlt
push
mov
cmc
ja
xchg
or
je
lods
push
mov
xchg
cli
aam
push
shl
ret
cwtl
inc
cmp
mov
mov
rcrl
pop
fildl
outsb
or
add
fnstsw
subl
push
outsl
fcmovu
dec
lds
push
push
fidivl
adc
ja
repnz
adc
pop
push
inc
js
test
pop
popf
xor
push
popf
adc
or
jge
adc
fld1
mov
sub
sarl
stos
cli
mov
movb
sub
dec
aad
lret
or
xor
mov
push
sub
cmp
outsl
getsec
scas
stc
pop
jge
xchg
out
xor
mov
test
mov
jne
mov
xor
jmp
rcl
ds
ds
fnstcw
sbb
add
ds
js
mov
lret
stos
cmp
add
push
pop
inc
jb
popf
sub
mov
mulb
sub
add
or
sahf
add
jbe
sub
push
inc
push
sbb
mov
push
adc
lahf
mov
fstpl
ret
or
loope
mov
imul
and
ja
sahf
pusha
arpl
inc
dec
jbe
fimuls
shlb
fwait
rcr
mov
xor
adc
mov
gs
imul
add
aam
js
mov
mull
fdivr
cmc
mov
sarl
aaa
push
das
inc
and
scas
sbb
lret
adc
xchg
sub
cmpsb
mov
sbb
adc
scas
add
sbbb
lcall
add
push
arpl
shlb
les
mov
dec
mov
jb
pop
std
shlb
rcr
cltd
push
addr16
pop
ret
xor
fs
cwtl
outsl
mov
push
mov
insb
add
imul
pusha
mul
push
adc
mov
pop
jl
insl
dec
loopne
insb
insl
sub
mov
mov
loop
popa
nop
add
popf
mov
mov
shl
add
mov
mov
js
and
aam
test
inc
lret
fnstcw
in
xor
mov
loopne
and
jl
cltd
push
pop
or
ret
orb
sub
jae
in
lcall
rorl
dec
jno
pop
or
push
adc
push
add
sarl
enter
push
sbb
mov
push
cld
sbb
stos
loopne
and
add
mov
dec
mov
jbe
shll
and
cli
lea
dec
das
aam
add
add
jb
or
aam
test
insl
jbe
nop
cwtl
scas
enter
cmp
inc
sub
sbb
rclb
rol
dec
xchg
and
cwtl
leave
das
pushl
neg
mov
add
js
mov
js
mov
dec
mov
xchg
js
xchg
pop
add
mov
cwtl
push
outsb
cmp
sub
jp
or
or
xchg
ja
shrb
pusha
sub
stc
xor
adc
xlat
mov
fnstsw
jns
cmpsb
xlat
and
lahf
xor
dec
frstor
arpl
add
enter
or
pop
mov
cmovnp
jg
pop
xlat
daa
in
pusha
inc
add
ret
dec
dec
rcrl
xor
fists
pusha
xchg
dec
cs
jmp
jbe
fcoms
add
dec
push
stc
scas
lret
push
lods
fmuls
dec
sbb
lea
xor
push
sub
les
and
mov
mov
ret
dec
fisubrl
jnp
jns
repnz
fsubrl
cmp
sbb
ret
cltd
push
sub
xchg
roll
pop
sti
shr
fimull
in
fldln2
or
daa
lods
bnd
inc
arpl
push
push
nop
aam
pushf
cmp
pop
mov
dec
sbb
rorl
push
cli
pusha
pushf
xchg
stos
mov
insb
jnp
sub
push
push
jns
inc
or
cwtd
out
mov
scas
adc
add
xlat
loop
dec
cli
gs
std
cmp
fmuls
pop
sub
mov
push
or
lret
pop
scas
in
cmp
xor
push
jae
mov
dec
aaa
pop
pop
mov
dec
cmpsb
sub
cmp
xchg
add
je
ret
fwait
mov
jp
jmp
fstp
add
lret
pop
stos
int
sub
aam
cmp
aad
pusha
ret
mov
mov
stos
dec
mov
push
cli
mov
sub
lods
sbb
mov
push
into
popa
jnp
push
mov
clc
and
mov
imul
pop
cmp
shr
cld
lods
xor
mov
out
dec
pop
iret
push
push
xor
push
notb
inc
cld
lret
js
xchg
add
mov
or
mov
cmpsb
dec
fimull
sti
fsubs
mov
xchg
scas
iret
incl
aam
outsl
loopne
repz
pop
cmp
dec
adc
repz
pop
fiaddl
xchg
addr16
pop
pop
push
or
or
negb
mov
add
test
je
jmp
ror
rcr
rcr
rolb
enter
xchg
push
js
xchg
mov
daa
or
insb
sub
aaa
outsl
mov
cwtl
fbld
lods
loope
dec
lock
lret
loope
pop
popf
scas
mov
xor
jg
cmp
sub
int3
xlat
aaa
inc
aaa
jl
push
rcrl
fsubrp
nop
inc
pop
cmp
fidivrs
cmp
xchg
dec
cmp
xor
and
jge
adc
xchg
cwtl
xor
jo
loopne
nop
imulb
ror
repnz
add
cmpsl
mov
mov
cmc
pop
mov
xlat
subl
stc
subl
in
int3
add
outsl
mov
jae
inc
mov
sub
fisubrl
cli
test
jbe
jp
sub
and
push
push
push
push
repnz
and
jno
insl
adc
daa
mov
pop
iret
mov
std
cmpsl
iret
xchg
cld
iret
cltd
mov
pushf
mov
int
sub
sbb
mov
fldl
sub
cmp
mov
out
jbe
gs
mov
rcrl
sub
inc
xchg
cmpsl
rclb
push
jns
push
mov
imul
js
xor
mov
jbe
pop
sbb
andb
pop
mov
push
clc
adc
cli
sahf
movsb
call
lret
out
popf
test
mov
loopne
mov
jl
insb
xor
lcall
jbe
pop
ds
dec
repnz
lea
mov
cmp
jecxz
sahf
add
test
ret
inc
dec
loop
outsb
pusha
outsl
or
icebp
out
sbb
sbb
fcoml
jno
dec
ss
inc
rcrb
call
jns
xor
fdivs
jecxz
jecxz
pusha
loop
cmp
enter
test
xchg
testb
aas
xchg
sahf
mov
inc
rcrb
rorb
add
inc
popl
or
and
cmp
push
adc
test
mov
push
or
into
stos
mov
in
mov
or
jle
cmp
nop
xchg
push
add
je
push
imul
enter
pop
mov
mov
mov
cltd
stos
clc
xor
jle
rcll
mov
sub
sub
in
push
mov
imull
jb
mov
or
push
jmp
out
ret
sub
sahf
clc
aas
cwtd
mov
xor
mov
xor
sbb
cwtl
rclb
test
push
repnz
sbb
andl
stos
add
icebp
lea
popa
or
mov
pop
jge
inc
es
scas
mov
and
sti
mov
iret
push
push
push
sbb
fisttpl
lods
jg
adc
mov
push
inc
stc
add
out
popf
xchg
xchg
scas
jb
sbb
movsl
jno
xor
xorb
dec
and
push
mov
sub
push
ljmp
aam
mov
mov
out
inc
out
gs
push
xchg
fisubrs
fsubrl
pop
and
mov
movl
fdiv
jns
nop
and
movsb
cli
mov
jp
mov
push
ret
inc
inc
lods
or
aas
sbb
jb
push
in
test
into
pop
std
mov
inc
aas
mov
xlat
stc
les
test
repnz
daa
jbe
movsl
push
sbb
jp
xor
lock
je
popa
mov
fidivl
cs
stc
nop
dec
mov
xchg
repz
cmp
sbb
mov
pop
fdivrl
jo
cltd
mov
or
outsl
div
icebp
cmc
loope
xchg
add
test
push
insb
dec
out
mov
mulb
adc
out
insb
lods
jne
out
dec
imul
test
add
in
sbb
adc
mov
jns
mov
pusha
out
test
cltd
mov
clc
out
jg
fidivs
into
push
repnz
nop
test
insb
fwait
pop
cmp
sbb
mov
xor
mov
std
xor
incl
mov
xchg
scas
shll
push
les
push
sub
add
rorb
in
xor
xchg
xchg
dec
xchg
fbstp
loop
add
mov
outsl
mov
mov
and
xor
in
clc
adc
jnp
mov
and
cmc
popa
stos
adc
inc
push
sbb
sbb
fnstcw
dec
inc
push
test
jmp
into
leave
ds
xor
xchg
xor
dec
sub
sbb
js
jl
js
pop
add
mov
insl
les
test
lds
mov
xchg
fdivrl
add
pop
xor
mov
mov
cmpsl
mov
fsts
sti
lcall
aad
fmuls
cmp
mov
inc
lcall
add
jge
out
jecxz
mov
jle
and
push
pop
mov
imul
div
int3
xor
or
add
clc
push
ljmp
adc
pop
pop
and
sub
ds
dec
xor
push
stc
jne
cmc
aaa
add
das
mov
mov
pop
jmp
outsl
and
dec
jns
mov
ret
jns
imul
lahf
mov
mov
add
test
sarl
je
aas
stos
jb
fidivrl
notrack
and
loopne
stos
incl
push
push
nop
xchg
jns
jl
pop
ret
cli
lods
sbb
mov
testl
sbb
mov
dec
push
insl
xlat
xchg
cltd
nop
inc
pop
imul
nop
nop
dec
fists
nop
roll
cld
sub
push
test
or
pop
push
inc
imul
ficomps
fwait
repz
lea
sbb
cmp
jne
lods
das
insl
ja
push
adc
call
and
icebp
mov
inc
cmp
imul
sbb
leave
pop
push
and
inc
mov
mov
xor
pop
int
rep
xor
sub
in
je
ss
pop
pop
sub
mov
mov
arpl
inc
and
lods
dec
add
xchg
sbb
fmull
lcall
sbb
inc
cs
or
pop
pop
xchg
pop
ss
or
pop
lods
ret
push
andl
pusha
ret
mov
fisubs
shll
or
shll
call
mov
and
push
out
inc
hlt
or
adc
add
testb
dec
pop
loop
adc
xor
pusha
pop
frstor
add
xor
cs
popf
mov
mov
xchg
call
addr16
jl
stc
push
sbb
push
xchg
cmp
inc
shlb
jmp
into
pop
int3
push
in
mov
mov
push
cmpsb
mov
or
lret
test
fdivl
push
push
jmp
dec
out
jmp
mov
add
inc
inc
sbb
call
cmp
sub
xchg
data16
or
push
pop
cmp
cmp
adc
out
es
mov
dec
pop
push
outsb
and
adc
test
faddl
add
sbb
jno
shll
ds
jle
test
adc
inc
int3
and
push
dec
fwait
xchg
incl
mov
popa
mov
lret
xor
vsqrtps
push
mov
aas
pop
mov
gs
cmp
outsb
jge
ficompl
lret
pop
xor
mov
stos
aam
jecxz
inc
sbb
xchg
fldcw
mov
or
lcall
mov
mov
arpl
inc
jno
je
mov
cmp
xorb
jle
mov
mov
mov
test
inc
sahf
rcrb
jg
pop
sti
lds
dec
sub
pushf
or
xor
dec
and
cmp
leave
jnp
push
push
mov
mov
sarl
sbb
mov
sarl
ljmp
push
bound
push
adc
sub
hlt
and
pop
outsl
ffreep
or
rol
pop
daa
outsb
mov
out
or
sti
lahf
and
btc
lcall
movsl
lret
repz
mov
sti
insl
mov
xchg
xlat
rcl
fldcw
xchg
inc
jb
adc
push
sub
sbb
sahf
push
xchg
pushf
lret
jp
nop
or
jns
nop
pusha
lret
xchg
and
fsubr
das
and
add
push
cmp
popa
out
outsb
rorb
shrb
in
pop
cltd
inc
inc
mov
loopne
dec
insl
subl
lret
inc
xor
xor
ss
xchg
pop
ds
fmul
xchg
xchg
cmp
mov
or
shrl
mov
pusha
adc
imul
les
mov
insl
popa
dec
mov
cmp
jns
movsl
and
xor
sarb
outsl
jp
mov
test
cmp
out
dec
xchg
sub
mov
pop
cwtl
je
inc
pop
es
sahf
pop
icebp
orl
outsl
adc
rclb
push
add
sarb
rol
imul
js
push
js
push
js
sub
je
push
lret
shrb
pop
rcrb
mov
cwtl
dec
mov
sub
fidivs
dec
andnps
xor
out
ret
jmp
cmp
adc
gs
ficoml
xchg
cmp
xchg
mov
andl
dec
xchg
mov
jle
add
mov
ja
xor
push
cmp
jbe
add
xor
test
jb
ja
dec
movsl
aas
shll
or
jns
xchg
lahf
stos
inc
ljmp
xchg
inc
ss
insb
cmpsl
int
call
or
inc
icebp
shlb
int3
leave
ror
ss
add
inc
mov
idiv
data16
push
sub
mov
test
or
lock
loope
fstpl
ja
mov
jns
inc
les
shl
dec
adc
sub
repnz
dec
adc
jp
lea
ja
lret
pop
mov
mov
dec
imul
lods
jns
pop
sub
ja
and
mov
sub
push
jl
inc
xlat
fistps
xor
aam
test
add
pop
sbb
scas
or
and
cmp
jmp
rcrb
cli
pop
xor
mov
inc
dec
das
cmp
loopne
movsl
or
pop
and
cmc
sti
imul
adc
inc
shll
clc
cmp
int
inc
or
dec
jge
movsb
sbb
inc
in
or
iretw
mov
inc
push
scas
test
nop
cmpsb
addr16
inc
rcrl
sbb
mov
push
xor
xchg
mov
jae
mov
or
mov
repnz
jecxz
sarl
jge
cmp
or
and
push
inc
mov
adc
push
orb
imul
pop
loop
out
mov
and
xlat
add
xchg
xor
lret
pop
mov
fidivrs
or
or
xchg
jno
test
lret
dec
push
cmp
int
pop
push
test
and
and
and
cmp
bnd
xchg
and
sti
pusha
pop
aas
push
or
fidivrl
push
inc
xchg
dec
mov
enter
aaa
hlt
sub
loop
push
sbb
or
dec
sahf
push
sub
pop
mov
cmp
iret
cmpl
pop
mov
rcrl
lea
loope
mov
inc
roll
push
addb
inc
mov
sar
or
pop
sbb
mov
sub
fwait
jle
fsubp
cmpl
and
xchg
mov
sbb
cmp
roll
fadds
sbb
and
jb
or
mov
xchg
pop
xor
sub
mov
js
inc
xchg
fwait
mov
test
inc
in
cmp
add
inc
outsl
mov
and
inc
popf
daa
fists
loope
imul
call
and
sub
adc
movsl
insb
imulb
fldt
adc
test
ds
jge
mov
loope
inc
mov
lret
subb
push
and
sub
mov
mov
lock
in
add
jle
xchg
jl
iret
loop
imul
adc
ficomps
lea
cmp
cli
mov
shlb
int
je
pop
cmp
mov
je
xor
sti
stc
jecxz
inc
and
sub
mov
jecxz
xchg
xor
call
or
mov
enter
jmp
rclb
dec
sbb
inc
arpl
push
push
and
fdivrp
or
pop
pop
pusha
xor
out
cmp
xchg
push
sbb
lea
out
inc
hlt
into
cmp
out
insb
lods
arpl
popfw
mov
add
fistl
aad
add
lods
push
adc
pop
outsl
cmp
push
dec
lds
sarb
cmp
cmp
movsb
xchg
sub
jb
dec
mov
dec
pmullw
lahf
out
push
pushw
insl
jl
dec
addb
xor
xor
je
add
adc
sub
push
ret
dec
dec
out
inc
stc
sbb
es
cmp
mov
sbb
and
arpl
mov
add
loopne
jmp
push
sub
adc
inc
in
push
add
rol
rol
int
fldenv
pop
sub
js
push
js
leave
and
add
jns
fiaddl
fdivs
mov
ja
inc
sbbl
mov
outsb
mov
or
xchg
sbb
int3
mov
cwtl
icebp
mov
repnz
iret
pop
fdivrp
add
in
outsl
repnz
lret
mov
jmp
jmp
test
sarb
ljmp
or
dec
push
int3
dec
lock
and
inc
loopne
pop
pop
inc
adc
inc
pop
push
xlat
mov
mov
adc
mov
out
jmp
test
bound
xor
mov
jmp
dec
push
and
test
xor
mov
aaa
mov
gs
insb
out
mov
inc
or
xchg
gs
std
out
iret
pop
hlt
clc
cs
add
mov
push
lea
lahf
xchg
and
enter
or
mov
jnp
pop
insb
lret
mov
mov
aad
les
sbb
push
sti
or
pop
fsubs
jae
hlt
es
test
rol
into
cld
nop
push
loope
pop
popa
pop
mov
xor
stos
mov
pop
std
adcb
mov
or
cmp
mov
mov
cmpsb
adc
add
daa
push
fisubl
xchg
rcrl
or
sub
xchg
shll
push
lods
pop
roll
loopne
xor
popf
cmp
add
ss
pop
cmp
pusha
jle
ret
lret
outsl
mov
adc
pusha
into
mov
mov
and
mov
cmpsb
mov
xor
pop
sbb
test
pop
or
add
sub
cld
cli
hlt
pop
stc
ljmp
inc
mov
mov
lock
pop
mov
jno
mul
loop
aam
mov
rcrb
mov
cmp
shlb
loopne
inc
pop
loopne
mov
xchg
shlb
lret
hlt
fsubrl
and
sbb
fsub
rcl
xchg
dec
jl
rorl
lahf
sub
cld
xchg
aaa
jbe
pop
or
jmp
call
mov
inc
ret
xorb
inc
rcl
push
pop
shll
fwait
push
sbb
cmp
mov
mov
bound
inc
or
mov
cmc
push
popf
push
pop
stos
or
aas
gs
pop
pop
and
sub
jbe
out
mov
dec
xor
popa
pushf
sbb
xchg
push
jg
insb
jecxz
pop
xadd
xchg
aas
push
pop
lret
mov
out
jl
pushf
ret
xor
mov
ljmp
dec
popa
add
mov
adc
out
or
push
xchg
out
mov
test
pop
repz
and
stos
xcrypt-ctr
cmpsl
popf
adc
pop
das
rorl
mov
jns
movsb
lods
mov
outsl
sub
in
fsubrl
adc
push
test
jnp
mov
xchg
cmpsb
or
loop,pt
into
push
fisubl
lds
negb
insl
sbb
mov
shlb
xor
js
out
jae
adc
inc
add
lret
push
lea
push
inc
adc
cmp
jge
test
cs
mov
mov
mov
gs
jne
jne
xor
cmp
dec
pop
shll
mov
dec
lods
pop
test
or
jnp
xchg
scas
das
loopne
call
jmp
stos
scas
rclb
adc
mov
and
ret
xor
fistps
movsl
mov
sbb
fdivr
int3
or
mov
cmc
icebp
push
mov
and
test
repz
dec
adc
shll
xor
cmp
psubsb
gs
out
xor
dec
cmp
hlt
mov
negb
sub
jo
loopne
jb
fisttps
push
push
mov
test
lret
roll
sbb
data16
or
jl
push
pop
fcom
std
subb
adc
stos
repnz
les
push
or
pop
and
cwtl
dec
mov
adc
jns
xor
jne
jns
or
dec
inc
and
jbe
sahf
dec
in
mov
mov
dec
mov
ret
or
aas
rep
fld
adc
mov
fmull
jp
push
sarb
add
push
out
push
push
and
or
cmc
pop
ret
push
push
pusha
mov
xor
cmp
and
dec
push
cmp
xchg
dec
xor
add
push
mov
add
push
mov
mov
jmp
enter
aad
enter
xchg
and
push
js
push
js
jo
fbld
jo
sbb
lods
cmpsl
dec
imul
arpl
ret
jle
xchg
fadds
ret
lret
pop
lcall
push
in
into
push
sub
je
sbb
sbb
stos
enter
sahf
push
push
sbb
lret
lods
pop
cmpsb
cpuid
in
pop
jecxz
mov
inc
jl
jae
cltd
test
and
je
mov
clc
mov
addb
stos
stos
inc
lods
dec
addr16
ja
push
jb
jge
dec
xchg
push
jne
and
xchg
and
pop
stos
adc
movsl
aas
adc
pop
cmp
dec
sbb
dec
fsubs
and
and
sarl
add
mov
sbb
xchg
adc
sub
cmp
xchg
or
push
adc
out
loop
cmp
in
ds
dec
incl
dec
aad
adc
xchg
leave
mov
xor
add
das
and
or
das
arpl
dec
loopne
dec
in
xorl
xor
das
mov
test
push
sbb
fs
mov
loope
adc
outsl
mov
pop
mov
push
xor
xchg
popa
dec
jns
jmp
cwtl
repnz
cmp
adcb
insl
je
dec
push
movsl
stc
and
inc
rclb
fwait
bound
pop
inc
pop
xchg
insl
fimuls
out
adc
stc
push
or
aad
neg
cld
and
xor
inc
insl
js
pop
out
jb
add
mov
mov
stos
cmp
push
dec
xchg
sub
jbe
test
push
adcl
js
adc
xchg
cmpl
jne
inc
xchg
mov
ja
inc
jg
push
adc
pop
xor
jl
push
jecxz
jne
jl
mov
lsl
loope
out
loope
xor
mov
add
add
sub
das
mov
push
inc
out
mov
push
jle
mov
ja
jg
aas
mov
sub
cmp
mov
icebp
jp
push
jne
ss
add
mov
lods
mov
lret
pop
mov
xchg
jecxz
out
test
mov
or
das
inc
cld
leave
mov
inc
rep
repnz
mov
push
icebp
ret
dec
mov
pop
fisubs
mov
cmc
stc
jae
aaa
push
sbb
out
out
cmpl
xor
adc
jl
adcl
fadds
adc
mov
jae
outsb
sub
daa
push
bnd
lcallw
stos
xor
out
ret
inc
or
mov
fmull
sbbb
jle
sub
in
xchg
stc
daa
cld
dec
insb
fildll
icebp
and
test
cmc
sbb
clc
es
or
xchg
inc
sbb
lret
sahf
andl
mov
cs
mov
jp
fcomp
shlb
pop
aaa
hlt
shll
mov
push
iret
push
jo
mov
add
aaa
xlat
sub
cmp
out
dec
mov
dec
mov
push
fadds
xor
adc
cmpsl
sti
or
push
out
iret
mov
pop
int
mov
lret
mov
jo
pop
xchg
daa
sub
leave
mov
insl
hlt
stos
sahf
and
aaa
cmp
xchg
and
or
cmp
and
dec
dec
sbb
sbb
std
addr16
mov
mov
fiadds
adcb
cmc
jle
je
push
push
cmp
xorb
aaa
loop
cmp
push
and
stos
cmp
into
stos
imul
cmpl
xchg
lret
les
mov
incl
add
fmuls
lock
div
sbb
popf
add
jp
mov
lods
int3
test
ds
orb
call
xchg
lds
movsb
cli
dec
cmp
pushf
fld
push
inc
dec
push
cmp
pop
cmpsl
shlb
add
out
xor
sub
cmp
sbb
and
outsl
xchg
lock
push
fcmovbe
fcomip
scas
or
cmp
mov
fadd
loope
push
xchg
ljmp
mov
sub
test
mov
dec
xchg
xlat
mov
loop
nop
test
adc
das
push
fisttps
ds
pushf
cmpsl
add
dec
xchg
xlat
into
add
cmp
std
fcomps
pop
inc
insb
cli
nop
add
pop
pop
addr16
and
lods
xchg
mov
or
mov
ja
mov
mov
push
in
or
and
mov
enter
xor
pop
inc
add
jmp
ds
enter
rol
pop
xor
push
pop
js
push
js
mov
mov
test
mov
dec
insl
mov
mov
fstpt
push
lcall
lea
outsl
shr
stos
pushf
shrl
loope
lcall
lcall
xor
aaa
mov
das
inc
call
push
mov
loopne
jnp
xchg
pop
mov
addr16
dec
mov
xchg
aas
shlb
ret
pop
pusha
mov
lods
mov
cmpsl
mov
inc
sahf
push
gs
sbb
dec
hlt
das
jmp
cmp
lahf
cmp
xor
sub
mov
xlat
add
cmpsl
pop
mov
pop
jb
and
pop
add
loop
cmp
rolb
mov
lock
sbbb
not
jl
aad
fwait
mov
inc
out
pop
xor
sti
rorl
sbb
sti
mov
rcl
negb
sbb
repnz
int
xchg
cmp
mov
repnz
into
cmpsl
pop
rcl
inc
jge
xorl
push
outsb
dec
loop
jae
mov
stos
xchg
daa
shlb
std
pop
cmpsl
mov
pop
jmp
adc
lret
jmp
pop
sbb
mov
movsb
mov
enter
pusha
push
sbb
orl
mov
xchg
roll
je
mov
sub
mov
rcrb
addl
inc
xchg
iret
push
dec
and
negl
jnp
fnstcw
inc
jns
loope,pt
in
rcrl
out
jbe
mov
aaa
iret
stos
aas
clc
jmp
inc
ljmp
xchg
in
iret
fisttps
in
mov
dec
adc
inc
xor
shlb
jnp
or
add
xor
lods
stos
iret
cwtl
in
sub
pop
push
xchg
test
mov
pushf
movsl
test
icebp
nop
decw
jbe
std
enter
adc
dec
sbbl
push
xchg
incl
ds
adc
push
mov
or
xchg
cld
nop
mov
adc
adc
cli
outsl
ror
testb
mov
outsl
arpl
fdivs
lcall
cmp
push
mov
mov
sbb
mov
adc
lret
nop
mov
add
testl
ss
cmp
lock
sarb
mov
pop
xchg
mov
push
pop
test
out
push
cmp
add
dec
stos
fsubrl
popa
enter
add
out
shl
movsb
xorl
aaa
dec
sub
fsubr
lcall
cmp
pusha
or
lock
dec
pop
sub
lods
jno
push
inc
and
push
push
pop
pop
push
mov
bound
lcall
popa
add
push
js
loope
inc
jne
xchg
ss
imul
add
mov
outsl
push
ljmp
mov
inc
std
add
lock
dec
xor
xchg
pop
shlb
scas
jge
movsb
mov
jo
stc
shr
fistpl
mov
clc
shrb
stos
jge
pop
mov
int
push
sub
call
lods
push
outsb
cmp
jo
pusha
hlt
xor
xchg
test
pop
loope
ja
gs
push
dec
mov
call
sub
test
cmp
mov
or
dec
and
aaa
dec
cmpsb
mov
dec
iret
and
xchg
mov
fcom
jmp
sub
arpl
mov
inc
adc
popa
cmc
or
stos
bound
rcrb
mov
je
xchg
out
mov
inc
je
push
adc
das
dec
inc
loope
pop
mov
dec
xchg
fists
repz
mov
in
loopne
mov
inc
jnp
mov
fiadds
inc
mov
shrb
mov
xchg
sub
stc
cmc
cmp
xor
outsl
gs
sbb
add
call
adc
xchg
mov
movsb
and
fdiv
jb
orl
xchg
and
jle
mov
adc
loop
add
mov
xchg
xorb
mov
jno
dec
ret
notb
xchg
fwait
cmp
sbb
sbb
arpl
mov
pop
jo
mov
sbb
cmp
xchg
inc
sub
popa
les
and
sub
ja
push
mov
imul
cmp
andl
enter
push
gs
xchg
cwtl
adc
in
das
rcrb
aam
aas
sub
cs
cmpsb
hlt
inc
in
cs
fmull
int3
aam
dec
fsubr
push
add
into
rcl
aam
xchg
fistps
pop
js
push
js
adc
es
fistpl
sbb
loopne
lret
xchg
push
cwtl
or
test
mov
or
sub
lret
jmp
mov
lea
adc
ds
xor
mov
int3
lock
xor
call
dec
es
lea
and
fdivrs
cld
insl
roll
popf
jge
adc
mov
sbb
sahf
fs
mov
loop
xchg
daa
sarl
out
ja
fwait
insb
repnz
mov
adc
adc
jns
pop
ret
xchg
and
outsl
mov
mov
rcl
sbb
inc
pop
cltd
addb
mov
jbe
jae
cmc
idivb
jno
add
xchg
cmp
and
in
push
int
cmpsb
loopne
add
dec
iret
xor
mov
in
adc
adc
add
and
push
punpckhwd
xor
adc
outsl
xor
xchg
or
fcoms
pop
and
cmpsb
je
test
xchg
stc
xor
outsl
push
xor
movsl
data16
fiadds
iret
or
inc
mov
arpl
fildll
mull
push
insb
pusha
mov
out
sbb
sbb
dec
inc
inc
in
mov
add
lods
out
inc
push
sbb
dec
inc
dec
adc
fstpl
jle
repnz
fildl
lods
test
xor
jb
push
fimuls
jmp
dec
pushf
xchg
in
jnp
shlb
enter
cli
setne
aaa
sbbb
or
and
mov
jo
andl
fsts
sbb
fs
psrld
mov
lcall
push
shl
inc
fimuls
sti
ja
dec
ret
inc
or
xor
bound
in
clc
dec
sub
inc
loopne
add
add
pusha
hlt
cmp
push
lods
add
inc
jns
popf
rorb
mov
cmp
sub
sub
xchg
in
loope
and
jle
outsl
mov
fldcw
int3
dec
pop
aam
adc
sub
mov
lret
out
dec
ficomps
mov
lods
and
fisttps
adc
cmp
inc
sub
leave
arpl
push
sbb
in
fisttpl
jle
push
dec
mul
push
xor
mov
mov
dec
adc
stc
jecxz
add
les
stc
and
dec
xor
adc
lret
fsubrl
loopne
incl
cmp
pop
jl
and
push
mov
dec
pop
in
xchg
std
mov
xchg
xchg
outsl
cmc
das
fnstsw
mov
jb
cmpl
rcl
cmpsl
outsl
push
jge
ljmp
cs
xor
mov
cltd
sbb
xor
or
mov
sbbb
hlt
jmp
decl
cli
mov
aas
push
cmp
ja
push
xchg
std
loopne
push
or
xor
aam
inc
es
movsl
sarl
cmp
pop
sub
jns
pushf
jb
cmp
repz
rorl
sbb
jmp
sbb
sub
sbb
push
jge
fildl
rorb
test
cld
mov
pop
out
cmpsb
sbb
stc
push
add
mov
stos
out
imul
out
xorl
popa
sub
lds
iret
ret
mov
stos
addl
cmc
js
ret
xor
in
dec
dec
jo
fdivrl
add
cltd
or
add
xchg
xor
and
xchg
push
inc
imul
cltd
inc
jl
int
and
clc
pop
dec
fimuls
fimull
mov
das
test
cli
fmull
jecxz
divb
test
pop
test
sarb
push
add
ss
xchg
and
or
mov
mov
inc
push
push
int
push
or
jl
jae
gs
test
push
mov
or
outsl
sbb
out
pop
dec
push
xchg
add
pop
sub
lgs
pop
sbb
scas
out
cwtl
cli
fisttpll
jl
mov
outsb
pop
dec
clc
push
or
jp
dec
js
dec
jae
dec
mov
iret
roll
shrb
mov
imul
hlt
fdivrl
sbb
xor
fsub
inc
repnz
nop
cmp
push
jp
stos
por
push
scas
pop
pop
and
movsl
stos
xor
scas
negl
clc
arpl
inc
gs
clc
and
rorb
jmp
leave
mov
ror
stos
incl
mov
mov
js
jl
js
mov
push
fnsave
std
adc
bound
jg
cmp
or
mov
sub
rorb
movsb
cmp
adcl
jbe
push
mov
dec
cwtl
insb
push
cmpsl
fcomps
sub
shlb
andl
inc
or
rcll
lcall
adc
mov
add
rorb
mov
adc
addr16
xchg
leave
and
int
lods
push
divl
push
inc
push
sbb
loopne
pop
aam
mov
mov
adc
bound
xchg
sub
scas
push
enter
inc
or
xchg
pop
popa
in
dec
xor
jnp
scas
outsl
ret
js,pt
inc
fwait
jmp
lds
hlt
add
sub
sbb
shl
xor
inc
rcrb
xchg
nopl
xchg
sbb
xchg
negl
pop
aam
pusha
in
add
ja
jae
cltd
or
mov
adc
mov
icebp
mov
pusha
push
or
jbe
xor
and
inc
dec
inc
inc
lea
sbb
sbb
push
mov
add
pop
mov
add
fsubrs
mov
pop
int
pop
inc
loop
sub
xor
mov
xchg
xchg
movsb
mov
loope
cmp
xchg
bound
sbb
or
push
ficomps
popl
pop
mov
dec
jg
std
fs
nop
js
movsb
fsubr
cmpsb
loopne
push
shlb
mov
jmp
or
scas
mov
cmp
or
test
xchg
lea
arpl
std
int
ss
fs
popl
nop
in
insb
add
in
pop
push
jle
jnp
outsb
mov
push
push
mov
orl
xchg
mov
jbe
jge
add
xor
popa
insl
subb
daa
and
mov
push
sub
pop
push
mov
push
outsb
mov
jno
inc
daa
in
fmuls
gs
inc
aaa
xchg
inc
mov
insb
push
call
pop
test
stc
in
insl
inc
mov
jnp
gs
arpl
or
hlt
repnz
pop
cmc
aaa
mov
loope
fwait
push
add
mov
out
dec
mov
jmp
jge
imul
testb
push
cli
or
movsb
cmpsl
add
fincstp
inc
int
lock
cmp
fnstenv
xchg
mov
lret
in
and
inc
mov
pop
add
dec
mov
int3
fstpt
ja
mov
mov
mov
add
pop
push
nop
imull
test
sbb
adc
mov
fildl
mov
pop
or
pop
mulb
mov
or
pop
es
dec
rclb
int
inc
bound
pop
mov
out
lahf
sub
lods
fs
add
outsl
lock
mov
flds
sbb
pop
sbb
andb
xor
repz
fistpl
movsl
test
mov
mov
test
es
imul
jno
fildll
cmc
adc
mov
cli
fwait
insb
addr16
fdivr
lcall
add
push
imul
shl
jbe
dec
push
out
enter
insl
jbe
cmpsb
fisttpl
mov
incb
push
into
push
lret
xor
fs
mov
icebp
and
mov
dec
shlb
pop
cli
mov
mov
inc
or
adc
push
leave
sbb
xchg
dec
popa
iret
jmp
ret
gs
xchg
ljmp
sub
out
dec
rclb
dec
mov
cmpsb
jno
pop
cmp
popa
lea
nop
je
xor
sub
xor
stos
mov
insl
rolb
rclb
cmpsb
and
pop
shll
mov
popa
jo
push
add
iret
cmpsb
rcl
jecxz
inc
cmp
mov
iret
xor
adc
and
repnz
push
nop
or
pop
cmp
pop
scas
add
or
and
xchg
leave
push
sub
mov
adc
jo
pop
xlat
call
mov
dec
stos
adc
cmp
stos
and
pop
sub
dec
fldenv
das
fwait
in
nop
add
push
xchg
es
sti
fldl2e
outsl
dec
xchg
sub
inc
sbb
lret
adc
mov
push
aas
pop
iret
sbb
fildll
xchg
mov
mov
sub
sub
jmp
lret
rcr
aad
shll
test
mov
push
js
dec
sub
sbb
sbb
inc
pop
mov
pop
sub
sub
pop
cli
inc
es
push
lock
pusha
jne
movsl
adc
inc
jl
mov
xchg
pusha
leave
lds
sub
dec
lods
jnp
cmp
xchg
mov
stc
and
and
aaa
xor
out
icebp
dec
cmpsl
int
mov
lahf
pop
adc
cmpsl
and
fwait
xchg
xchg
loop
leave
popf
clc
int
or
ficoms
sub
jp
pop
or
stos
jb
cmp
pop
sub
mov
das
fstpt
or
jmp
or
fdivrl
cmp
out
aas
push
add
mov
mov
xchg
cmpsl
pop
xchg
adc
adc
fildl
sbb
add
hlt
xchg
dec
testl
mov
subl
in
adc
cmp
repz
test
adcl
hlt
pop
stc
push
frndint
sbb
inc
or
jno
xchg
jns
aad
insb
and
push
push
pop
inc
xchg
dec
sar
xlat
mov
ficomps
pushf
fisubrl
dec
daa
rorl
pop
inc
jnp
fistl
cld
fistl
or
jns
out
adcb
in
in
mov
fisttpll
pminsw
mov
jg
in
outsb
bnd
jmp
lock
outsl
sub
scas
lds
xchg
sub
arpl
imul
cli
test
ja
jo
cs
mov
pop
outsl
sbb
pop
or
repz
lods
flds
std
rcl
fstpt
lods
pop
bound
mov
add
nop
jb
push
fistps
pop
insb
sbb
dec
cmpsl
cmp
in
out
ds
push
and
das
mov
jge
les
fcoml
loop
sbb
inc
nop
xchg
inc
mov
aam
daa
or
roll
in
fnstsw
sub
stos
dec
rolb
scas
mov
mov
in
ljmp
repz
push
mov
xchg
ljmp
rcll
inc
mov
rorl
ja
dec
pop
in
add
cltd
cmpsb
stos
sub
adc
mul
jge
xchg
popf
lret
popa
in
mov
lds
stos
lods
in
call
iret
insb
out
xchg
push
mov
sbb
jg
xchg
aam
in
pop
in
lea
stos
mov
imul
cld
xor
xchg
imul
std
in
out
int3
pusha
stc
mov
jg
pop
push
adc
sub
push
lea
in
jge
or
jb
sub
nop
sahf
out
jmp
je
imul
bound
es
pop
jb
rorl
cmpsl
adc
inc
cmp
sub
push
add
mov
fdiv
insl
sub
icebp
jl
add
mov
loope
jg
ss
mov
xor
leave
je
lock
sub
jne
leave
adcb
fstpl
sti
pop
inc
push
jo
adc
lret
sbb
mov
dec
jle
xchg
iret
stos
stos
ss
arpl
add
out
mov
xor
pop
and
cwtl
mov
sbb
dec
jo
or
or
xchg
pop
xor
mov
in
pushf
push
mov
loope
clc
sbb
das
clc
fidivrl
js
daa
les
xchg
sbbl
jbe
sub
cmpsb
cli
pop
pop
mov
and
loop
addr16
loop
sub
hlt
ret
jecxz
rcrl
inc
mov
roll
mov
inc
aas
stos
xor
jo
jb
lock
lods
pop
adc
mov
add
out
jae
in
push
and
stc
int
adc
or
jnp
xchg
adc
jecxz
add
pop
mov
cmpl
ret
adc
cmp
pop
and
sub
shlb
ja
js
rcr
or
mov
mov
push
mov
mov
sub
or
mov
mov
in
sub
pop
in
or
sbb
mov
mov
insl
inc
dec
dec
mov
popa
adc
push
aad
in
xchg
ficomps
dec
shlb
mov
cli
pop
popa
test
dec
sahf
xchg
fnstenv
pop
or
pop
or
dec
adc
sub
mull
fdiv
push
hlt
inc
sahf
mov
add
mov
mov
mov
jmp
rol
ds
rol
stos
test
leave
sub
and
outsl
js
push
js
push
stos
das
pop
fimull
cmpsb
inc
xchg
or
mov
cs
lahf
cmp
ret
cmpsb
daa
adc
pop
xchg
insl
pop
stos
sbb
cs
sbb
mov
cmpsb
push
ljmp
add
sbb
cmpl
mov
pop
adc
sub
outsl
aam
into
and
addr16
adc
add
imul
sbb
les
mov
jmp
call
mov
xor
push
and
pop
aas
les
push
dec
or
or
adc
jnp
fimuls
inc
andb
in
addr16
stos
in
pushl
arpl
pop
ljmp
sub
lods
add
jmp
insb
mov
lret
and
movsb
rolb
or
push
xor
das
fcmovb
mov
sub
fcmovbe
scas
ds
inc
add
fbstp
aam
cs
cmp
dec
xchg
jne
adc
fistl
mov
orb
lods
cmpsl
xchg
pop
cmp
aad
pop
push
add
push
js
mov
mov
and
mov
xor
xchg
std
inc
and
dec
jnp
jae
mov
sub
scas
loop
cmp
loop
das
mov
jns
mov
push
std
sub
movsb
jmp
xchg
stos
mov
sarb
dec
mov
cmpsb
test
inc
pop
pop
andl
mov
cwtl
loope
xor
dec
xchg
popa
push
inc
lock
loopne
arpl
jae
xchg
cmp
test
jl
fmuls
pusha
pop
cltd
jp
push
outsl
dec
jle
jl
mov
jnp
clc
or
test
pop
jne
scas
dec
xchg
mov
ljmp
sbb
dec
and
call
push
outsl
mov
inc
adc
stos
and
adc
aaa
sub
in
mov
les
mov
jo
shr
cmp
mov
jo
inc
pop
jae
dec
loope
sti
in
inc
pushf
mov
flds
and
cmpl
sub
stos
and
jae
adc
mov
pop
ret
fwait
adc
adc
adc
loop
ret
out
push
hlt
cmpsb
cmp
aaa
pusha
dec
cmpb
mov
sbb
inc
loopne
je
pop
mov
loope
mov
fisubs
sbb
adc
and
xlat
rcll
int3
xchg
jp
cmp
test
insl
fldenv
pop
jmp
and
lds
lock
or
ljmp
lret
and
push
mov
sti
dec
fwait
cmp
inc
lods
fidivl
and
mov
loope
call
mov
xor
cli
fstl
mov
sub
adc
xchg
mov
stos
cmp
lea
stos
mov
and
cltd
sti
mov
data16
mov
cmpl
outsl
icebp
into
jo,pn
mov
xchg
mov
xlat
ret
nop
or
shll
add
or
mov
fistps
add
shlb
xchg
iret
stc
jns
fwait
jnp
hlt
icebp
adc
into
sub
lea
sub
or
inc
rcrb
insl
loopne
loopne
lret
dec
lret
in
xchg
or
adc
std
jmp
ret
xchg
mov
inc
leave
add
push
hlt
not
and
pop
popa
jo
mov
lcall
add
insb
push
out
xchg
jno
leave
leave
scas
nop
or
lock
in
add
idiv
scas
call
outsb
in
inc
imulb
cmp
insb
leave
popa
add
cld
sbb
jecxz
and
mov
push
xor
mov
pop
pop
cs
icebp
aas
mov
pop
mov
clc
inc
adc
jb
pop
cmp
fiadds
add
xlat
movsb
fs
aas
pop
adc
pop
pop
sbb
aas
xchg
inc
testl
jge
out
jo
fs
mov
cmp
scas
sbb
rcrb
js
sub
enter
push
xchg
xor
dec
dec
lea
or
jecxz
xor
xchg
xchg
push
or
cwtl
adc
cmp
es
mov
scas
push
inc
imul
inc
pop
sub
cmp
dec
int3
fsts
cld
int
adc
mov
popa
add
stos
pop
pop
mov
ja
hlt
icebp
pop
sub
scas
xor
push
add
cmp
leave
imul
js
push
js
cmp
push
leave
xchg
jle
scas
pop
jmp
mov
jne
repz
xlat
jecxz
or
fdivrl
jb
jp
rol
adc
gs
jmp
std
scas
jnp
jge
stos
and
mov
add
dec
sub
xor
add
push
test
jb
xlat
js
mov
cmp
loop
xchg
pop
sahf
movsl
in
lret
jbe
adc
movsl
lock
jae
pop
in
push
iret
or
inc
xor
out
jecxz
cmpsl
xchg
adc
les
lret
and
int
jmp
shrb
dec
adc
pop
lahf
inc
push
lods
or
dec
xchg
enter
fsubrs
lcall
sbb
ret
inc
fadds
xor
pop
adc
outsl
cld
adc
sahf
mov
jnp
cwtl
cmp
scas
cmp
sbb
cwtl
fistpll
lods
imul
cmpl
cmp
lea
cmp
lock
lret
mov
das
and
and
pop
or
out
mov
mov
xchg
lahf
les
int3
rorb
sub
pop
pop
inc
inc
mov
add
sub
jmp
subl
repz
stos
and
gs
repnz
mov
cmpsl
push
adc
js
popa
popa
cwtl
rcrl
imul
and
xchg
pop
repz
cmc
fisubrs
daa
xchg
pop
inc
adc
xor
dec
cmp
inc
mov
pop
sbb
adc
orb
clc
mov
sub
int3
cmc
imul
aam
mov
insl
sub
idivb
loope
in
xchg
clc
mov
pop
mov
das
add
xchg
pop
loop
imul
jle
lods
cmp
mov
xor
rorb
das
outsl
std
loopne
std
sub
test
jno
sbb
sub
mov
pop
outsb
inc
jmp
cmp
call
test
fs
jp
inc
in
ret
movsb
jnp
mov
and
fistpl
jmp
sub
add
xor
jl
sub
ret
sbb
sub
add
es
fmuls
lods
or
push
popl
xor
sub
mov
sub
push
jno
sub
ljmp
lds
lock
sub
mov
outsl
bound
adc
and
ds
aaa
adc
movsb
jle
sbb
and
out
mov
mov
xchg
cmp
mov
movsb
jle
lds
mov
popa
outsl
das
fldenv
dec
cmpsb
and
shlb
jno
xchg
mov
fcompl
shlb
arpl
push
xchg
adc
add
add
mov
inc
and
adc
jae
dec
pop
dec
ret
addr16
sbb
xor
mov
cmp
and
dec
adc
lods
dec
shlb
and
popl
lret
cmc
in
out
sbb
adc
mov
or
mov
mov
mov
es
pop
decl
cmc
stc
pop
xchg
popa
rorl
insb
test
xor
das
das
rcrl
sahf
or
data16
lcall
shll
and
push
sbb
andb
add
outsl
cmp
enter
sti
in
lret
sahf
out
cltd
mov
mov
pop
arpl
inc
rcrb
loope
jmp
mov
xchg
pop
xchg
mov
adc
sub
add
out
aas
test
aas
nop
lret
or
in
call
mov
fwait
pop
and
mov
clc
cmp
leave
xchg
or
mov
push
int3
and
mov
push
add
push
and
cli
lds
jne
push
mov
mov
scas
fmulp
mov
inc
loopne
loop
xchg
das
dec
inc
and
subb
jb
aad
pop
xor
jge
and
leave
push
add
mov
xchg
inc
cmpsl
les
sub
cmpsl
loope
in
add
add
xor
mov
les
loope
or
push
mov
cwtl
adc
clc
xchg
mov
les
outsb
cld
pop
sub
xchg
add
push
inc
xchg
cmpsb
les
adc
call
shll
ljmp
es
dec
pop
dec
push
loopne
pushf
test
lods
or
ror
and
dec
xchg
movsb
sub
mov
inc
sub
mov
lea
incb
inc
jmp
ret
cmp
fcmovne
out
cld
mov
shrl
sbb
push
js
cmp
mov
jnp
js
mov
adc
insl
out
sbb
jge
cs
xlat
sub
lret
jmp
and
or
cmp
cmp
push
jecxz
mov
mov
cs
push
in
clc
push
aad
loop
loope
jmp
push
xchg
iret
cmp
into
mov
sbb
in
add
inc
pop
in
stc
lock
mov
mov
add
push
xchg
add
mov
fisubrl
push
loopne
adcb
mov
mov
dec
add
jecxz
add
iret
imul
outsl
xchg
jne
adc
pop
dec
mov
xlat
sbb
inc
sub
and
outsl
mov
sub
mov
fwait
xchg
add
daa
lahf
mov
sub
out
dec
xchg
mov
or
jp
mov
repnz
pop
jbe
insb
jb
adc
fimull
popa
test
and
pop
test
jmp
sub
pop
insb
int
andl
out
int
popa
pop
add
dec
imul
dec
loop
cwtl
popf
push
inc
dec
les
jp
jns
outsb
pop
pushf
in
icebp
mov
iret
xchg
testl
xor
pushf
dec
mov
dec
dec
sahf
sbb
enter
pusha
andb
lds
pop
mov
ret
fdivrs
test
test
shll
xchg
mov
inc
xor
and
pop
mov
xor
mov
inc
mov
fnstcw
sti
add
mov
ficomps
or
movsl
adcl
cmpl
and
sub
mov
xor
add
and
roll
ja
jbe
outsl
outsl
mov
inc
movsb
inc
movaps
mov
iret
scas
mov
rorb
sbb
mov
mov
fstpt
mov
dec
cmp
sarb
sbb
or
cmp
push
and
leave
test
jmp
pop
jnp
xchg
inc
lock
push
fmull
enter
das
repz
pop
jnp
pop
ljmp
loopne
insb
fisttps
jmp
jle
lret
imul
pop
sti
push
addr16
xchg
inc
je
dec
pushf
ds
out
stos
js
mov
out
push
dec
pop
leave
adc
in
icebp
sti
std
into
js
fs
shl
loope
addr16
pop
sbb
xor
fisttpl
out
add
scas
inc
adc
mov
hlt
roll
out
sarl
outsl
insb
scas
xor
dec
roll
es
jbe
subb
in
jbe
and
insb
mov
out
cltd
fs
xor
adc
nop
lea
bound
pop
dec
pop
add
cmp
mov
mov
adc
mov
dec
pop
jne
orb
movntps
sbb
cltd
xor
jmp
cmp
js
push
jge
and
sub
cwtl
aas
sahf
je
xor
ja
push
mov
jns
add
cld
xchg
pop
xchg
das
push
sbb
inc
dec
pop
fwait
dec
fdivrl
jg
scas
cld
push
out
adc
decl
xchg
xchg
cmp
cli
ljmp
xor
test
jge
lock
xchg
sbb
mov
jecxz
stos
sub
int
push
push
or
mov
cmp
cld
clc
pop
aas
push
xchg
sbb
pop
ds
popf
ljmp
push
jecxz
test
and
je
sahf
pop
mov
in
or
cmp
mov
out
popw
adc
fimuls
mov
fyl2x
repnz
lea
int3
popf
mov
popf
xor
hlt
scas
aas
xchg
xchg
out
mov
mov
push
lods
push
hlt
mov
jg
mov
hlt
xchg
ret
loop
enter
repz
push
insl
stos
jb
test
popf
mov
mov
pop
xchg
cmp
leave
loop
xor
push
and
or
mov
push
add
sub
js
cmc
gs
andb
mov
mov
mov
cmpsl
movsb
imul
dec
sub
sbb
pusha
sub
jne
xchg
xchg
mov
mov
mov
ja
jnp
out
lret
aaa
insb
mov
testb
fisttpll
cwtl
sub
popf
inc
enter
lahf
popa
or
sbb
push
xchg
dec
jmp
rcl
int
xlat
aad
sahf
mov
push
push
js
pusha
jecxz
cmpsb
imull
and
sub
dec
pop
add
jnp
xor
inc
es
or
mov
pop
ret
repnz
outsb
arpl
xlat
add
pop
loope
xchg
jl
scas
push
cmp
adc
mov
jo
mov
jl
push
fdivs
nop
cmp
or
mov
pop
int3
sbb
and
sbb
fcmovbe
mov
push
jbe
movsb
and
push
fisubl
ds
adc
add
xchg
mov
cld
cmp
loope
ds
es
xchg
sub
push
push
adc
test
xchg
pop
pop
jle
loopne
movsl
mov
pop
ror
aaa
hlt
push
addr16
fbstp
paddw
hlt
adc
stos
out
xchg
dec
cmpsl
and
data16
movsl
aad
pop
idivb
sbb
cmc
inc
xor
addr16
mov
jl
or
mov
mov
leave
sbb
push
dec
inc
and
xor
cmp
adc
adc
xor
adc
fs
pop
sqrtps
jo
adc
cltd
imul
jmp
or
mov
push
test
lahf
cmp
cmp
stc
or
aaa
ret
mov
sub
pop
xlat
add
pop
mov
xchg
inc
adc
lea
add
push
lret
int3
xor
lods
lds
jl
rorb
pop
out
mov
cmovno
iret
outsb
push
jb
ret
push
jle
push
inc
rolb
xor
movsl
xor
pop
lret
xor
mov
loop
cltd
lcall
cmpsb
loop
dec
push
mov
or
or
lds
add
sub
inc
sub
lret
stos
mov
mov
or
pop
mov
repz
sbb
in
or
adc
push
mov
insb
inc
mov
adc
mov
push
das
repz
int3
and
arpl
push
or
ret
and
mov
sub
int3
pop
test
jo
jnp
popa
pusha
xchg
fcomps
xor
or
fcoml
aaa
mov
xorb
add
jg
fistpl
cld
ficomps
repnz
call
jmp
mov
inc
push
in
stos
mov
or
iret
lds
cs
iret
popa
adc
add
stos
clc
fidivs
stos
nop
int3
shll
call
jp
shl
stc
sub
test
mov
jmp
test
push
jae
mov
scas
adc
mov
outsb
xor
dec
push
pop
cmovbe
jecxz
mov
fwait
jl
adc
or
aad
icebp
int3
sbb
enter
sbb
cli
jb
test
in
leave
arpl
or
pop
or
hlt
cmp
testb
add
push
loop
sbb
sub
insb
cmp
pop
fsubl
push
cli
mov
push
pusha
add
jns
sbb
orl
jo
sarb
mov
sbb
xlat
test
mov
fnstsw
cli
xor
mov
sub
lret
sub
and
pop
ss
loope
push
mov
pop
and
and
lea
lahf
xor
lahf
inc
sub
pop
push
dec
xchg
inc
rcll
mov
ret
fiaddl
lcall
hlt
rolb
lahf
dec
xchg
cs
cltd
test
out
cmp
pop
aas
cli
insl
test
mov
dec
adc
mov
push
or
sbb
mov
dec
stc
das
adc
push
add
stos
push
xchg
setno
int
rcrl
repz
mov
adc
movsl
mov
shll
dec
dec
lret
lcall
or
scas
imul
daa
pop
out
jmp
fwait
enter
and
cmc
push
mov
add
orb
and
ja
int3
xlat
sub
adc
jnp
mov
sahf
pushf
mov
jae
cmp
mov
sti
mov
iret
sti
pop
pop
rcll
stos
int3
fiadds
stos
adc
dec
and
and
mov
out
mov
imul
xchg
jno
xchg
and
sub
adc
stc
stos
xor
jb
loopne
sub
sbb
lret
inc
out
lret
pusha
xchg
jmp
cmp
mov
cmc
add
inc
pop
pop
loopne
ret
js
jl
js
mov
lods
notl
xchg
adc
cmp
insl
insl
ret
xchg
xor
push
sahf
leave
addr16
aaa
sub
mov
jno
xor
cld
add
xchg
mov
test
lcall
lods
and
push
adc
aam
es
xor
mov
cmpsb
dec
cmp
mov
inc
dec
test
xchg
push
fcoms
lahf
insl
add
xchg
lea
adcb
std
stos
adc
leave
push
and
add
inc
adc
xor
xchg
inc
lcall
mov
mov
aaa
mov
mov
pusha
or
pushl
dec
into
sbbl
add
pusha
mov
lock
sahf
sbb
sub
or
xchg
test
dec
dec
sub
fldl
fs
or
hlt
xor
push
mov
repnz
adc
sub
mov
bsf
fistpll
xor
adc
inc
in
es
jns
call
icebp
loope
loop
mov
popf
mov
bound
jbe
enter
loopne
mov
aaa
mov
adc
into
mov
dec
arpl
adc
xchg
xchg
shll
inc
lahf
jl
jno
sbb
leave
sbb
xchg
sahf
pop
jae
nop
adc
lds
daa
sbb
push
aad
sub
pushf
aaa
sbb
out
movsl
iret
sbb
mov
or
je
inc
and
jmp
xor
pop
fwait
das
add
fdivrl
leave
push
cmpsl
popa
test
cmpsb
add
adc
ja
rorb
ss
add
adc
sub
mov
cmpsl
out
or
shl
imul
dec
sub
fiaddl
mov
test
or
xor
adc
lods
fcoms
cmp
jne
pop
jbe
jp
outsb
jo
dec
jnp
xchg
addb
not
push
ficomps
or
xchg
dec
ss
mov
sbb
pusha
and
test
push
mov
push
adc
dec
repz
test
or
fcmovnbe
mov
adc
cmp
out
cmp
je
mov
nop
mov
push
mov
inc
int
adc
ljmp
lret
neg
mov
inc
mov
std
push
adc
fcmovnu
data16
push
insl
xchg
ds
jecxz
les
in
jp
mov
test
mov
jne
popl
sbbl
and
pusha
aad
ljmp
cmp
push
xor
cmp
rcll
adc
outsl
sub
jp
cwtl
pop
dec
add
filds
popf
cmp
aas
xchg
std
xchg
shrl
jg
sub
mov
cmp
xor
mov
push
cltd
repz
stos
sbb
sub
adc
nop
ss
out
pusha
addr16
loopne
aam
imul
lret
xchg
stos
mov
popa
insb
test
es
imul
sbb
mov
sahf
pop
gs
mov
mov
daa
mov
popa
lods
pop
rclb
cs
out
insb
push
mov
mov
mov
push
test
inc
movsb
inc
cld
fs
movsl
pop
inc
fsubrs
lea
mov
arpl
pop
push
ljmp
inc
shll
loopne
push
sbb
orl
adc
inc
icebp
mov
xchg
cmp
lds
sub
sbb
lds
sbb
dec
dec
sub
xor
lahf
setne
lcall
stos
jp
add
mov
push
pop
sub
mov
aam
mov
test
fisttpll
mov
adc
fs
mov
dec
fneni(8087
imul
loope
mov
cmp
push
lock
repnz
inc
adc
pop
mov
xchg
xor
cmp
movsl
clc
cli
or
cmc
dec
call
xor
or
fdivr
ret
fs
adcl
ret
inc
loope
add
jb
sbb
push
ret
movsb
jmp
enter
xchg
fsts
mov
sbb
enter
or
lock
mov
scas
sbb
inc
mov
cmpsb
push
fildl
fidivrl
int3
int3
outsl
stos
push
mov
outsb
or
js
jge
sbb
mov
adc
jmp
test
out
decb
jmp
sarb
ret
rcl
mov
or
sub
jg
push
js
scas
adc
xlat
mov
bound
fs
add
fisubrl
inc
popf
mov
call
pop
or
and
xchg
je
dec
insl
sbb
sub
push
mov
stos
cli
lahf
add
mov
mov
mov
mov
leave
stc
xchg
jns
nop
xchg
insb
push
rclb
in
in
dec
sub
add
cmp
in
xchg
movsl
jne
mov
aad
sti
ljmp
adc
fistl
arpl
roll
xchg
loop
mov
ljmp
lahf
and
and
cmpsl
jg
sbb
out
and
adc
push
hlt
add
and
cmp
aas
test
daa
fildll
aas
add
loopne
jecxz
inc
flds
sub
sbb
add
movsb
ss
sub
lret
mov
xchg
in
shll
pop
popf
mov
mov
lret
add
sbb
or
popl
mov
or
adc
adcl
pop
jle
and
addr16
or
pop
sub
xor
and
movsb
xor
lahf
jnp
add
cmp
mov
adcb
and
movl
iret
ret
out
hlt
dec
out
dec
sub
cld
cltd
aas
mov
test
push
sub
lds
popf
fs
add
pusha
push
sub
lock
frstor
jne
hlt
inc
mov
jl
cmp
sbb
aas
into
shll
or
pop
sti
mov
cltd
fld
test
mov
xchg
ret
shlb
sub
sbb
mov
sahf
call
or
or
test
sbb
sbb
xchg
lret
lods
mov
cltd
sub
decl
cmc
inc
je
cmpxchg
cmc
and
jno
mov
negl
fnstsw
pusha
mov
push
push
fisubrs
xchg
dec
add
push
int
bound
jl
insb
cld
push
dec
adc
mov
decl
xchg
scas
mov
int3
adc
xor
lret
mov
leave
mov
mov
scas
cmp
mov
sbb
jb
mov
call
hlt
daa
adc
mov
test
add
or
mov
and
test
bound
dec
push
out
jge
mov
in
add
or
icebp
xchg
lret
xchg
sub
adc
adc
int
push
mov
add
in
or
stos
test
lock
in
add
insb
out
mov
inc
call
inc
sbb
es
bswap
sub
fistps
dec
jl
xor
sub
sbb
stc
fisubl
js
outsb
scas
ljmp
xor
imul
stc
dec
jge
rcrl
lahf
arpl
testl
push
sbb
sub
mov
sbb
lcall
sbb
mov
cmpsb
test
das
aaa
sbb
or
jns
dec
enter
or
nop
addr16
sbb
sbbl
pop
shll
sarl
jns
sahf
mov
fwait
aas
je
fbstp
adc
sub
inc
aad
xor
aam
xor
jns
jle
add
jnp
xor
ret
inc
push
in
ja
lods
xchg
dec
lock
sbb
mov
lret
jp
dec
xchg
out
dec
mov
mov
stos
scas
int
fwait
inc
lods
pop
and
jl
sarl
push
sub
mov
sub
test
shlb
fnstenv
imul
hlt
arpl
fnstenv
movsb
mov
fwait
mov
sar
adc
push
in
out
in
aam
or
dec
iret
cwtl
mov
push
or
cwtl
dec
pusha
push
es
lea
push
js
push
xchg
pop
cmpsb
jmp
es
fnstcw
xchg
xchg
mov
testb
ss
cmp
dec
ret
mov
movsl
movsl
inc
jnp
adc
pop
mov
ja
out
inc
mov
out
mov
aam
add
cmp
aas
add
mov
push
fistpll
xchg
jae
adc
mov
aaa
aaa
jbe
push
aam
rcll
mov
push
xor
push
mov
ds
lcall
mov
jmp
ror
fcmovbe
rcr
mov
mov
js
jl
js
into
jb
mov
mov
ja
fwait
xchg
lret
scas
mov
enter
ret
jg
iret
pop
repnz
jne
in
inc
cli
push
insb
sbb
jle
daa
hlt
mov
cmp
shrl
dec
cmp
cmp
ja
mov
stos
mov
loopne
imull
pop
cltd
stc
sbb
scas
gs
or
cmp
stos
repz
cmp
pop
lods
push
mov
push
and
fsts
inc
xchg
lods
enter
xchg
cmc
pop
add
cld
cmp
rcrl
xchg
ds
add
mov
xchg
add
jmp
xchg
push
test
repz
sub
cli
ficoms
and
rcll
loop
jp
adc
aas
mov
arpl
shl
jae
and
sbb
pand
mov
pop
push
sub
push
je
xor
mov
test
jp
sbb
ds
sub
mov
sbb
insl
pop
scas
fldcw
sbb
jg
int3
push
push
mov
adc
stos
jb
push
js
mov
adc
daa
fcoms
pushf
aaa
bnd
insl
imul
and
push
push
lea
xchg
int
sub
call
xchg
xor
inc
dec
sbb
xchg
jmp
sti
or
xor
add
leave
arpl
out
std
or
or
mov
enter
lcall
subl
mov
adc
iret
and
cmc
fdivrs
iret
imul
loope
xor
ret
enter
loop
mov
dec
sbb
mov
or
pop
jo
loop
lea
sahf
stos
mov
push
not
test
pushf
rclb
rol
adc
xor
and
sahf
outsb
ret
test
mov
xor
std
popaw
adc
dec
xchg
popa
loop
loope
xlat
mov
mov
mov
push
les
push
mov
dec
aaa
dec
jg
mov
adc
in
adc
daa
mov
cmpb
int
sbb
clc
xor
fldl
push
or
pop
jnp
inc
push
mov
inc
imul
cmpsb
pop
and
inc
xor
jne
cmpb
orl
xchg
cwtl
sub
pop
out
or
dec
mov
js
outsl
dec
iret
xchg
fsubl
mov
and
sub
cmpl
dec
xor
ret
lock
decl
mov
pop
ss
mov
dec
cld
fcmovbe
push
pop
sarl
test
push
test
push
cs
jo
inc
inc
sti
sub
push
mov
cli
jge
push
mov
adc
jb
xchg
inc
ret
jmp
push
xchg
pop
stos
mov
movl
sti
mov
inc
in
out
in
popf
mov
pushf
sti
mov
rolb
mov
push
xchg
push
test
cmp
pop
mov
xchg
cmpsb
jle
jle
cmpsw
xor
dec
js
aas
jnp
push
test
out
lcall
imul
and
es
jb
pop
gs
and
je
loope
sbb
popa
cltd
mov
dec
int3
mov
stc
test
xor
mov
or
cmpsb
icebp
daa
out
dec
sub
das
dec
mov
or
or
push
test
sub
pushf
adc
sbbl
xchg
loopne
pop
xchg
test
or
pop
aaa
fimull
mov
mov
ss
pop
sbb
mov
add
sbb
mov
es
mov
sub
sbb
int3
int
jnp
aam
ljmp
in
adc
pop
xchg
pop
in
fsubrl
imull
cmc
dec
pusha
or
cmp
fiadds
xor
jb
mov
mov
insl
aas
push
dec
repz
shll
jg
push
xchg
scas
call
pusha
lret
aaa
call
sbb
and
xor
xchg
insl
inc
xchg
mov
xchg
or
popa
cmp
test
scas
sahf
lea
call
mov
arpl
stc
sub
sbb
leave
ret
int3
fsubrs
fwait
out
or
iret
or
ret
lock
jp
dec
cmp
std
fs
jg
addr16
popf
mov
leave
xor
mov
mov
jmp
aas
vpmullw
xlat
jne
fs
push
push
pop
test
or
js
jl
js
xchg
xor
jns
into
sbbb
sbb
mov
xor
fdivrl
ja
adc
adc
jnp
xchg
pop
ja
sbb
shll
sti
xchg
add
arpl
mov
dec
mov
out
xchg
test
je
push
jmp
cmp
ret
out
out
fsubrl
pusha
out
inc
inc
pop
sbb
pop
in
adc
push
xchg
es
pop
jl
sti
into
adc
mov
push
jp
shll
xor
mov
in
or
push
es
pop
fdivrs
cmp
cmp
inc
push
aas
fisttpl
out
pop
stos
es
into
ljmp
lcall
fiadds
mov
fidivl
cmpsl
in
pop
in
mov
mov
repnz
stos
sbb
into
mov
cli
imul
mov
fs
loope
sbb
cltd
sbb
data16
sub
mov
loop
add
cmpsl
icebp
adc
xor
jmp
dec
push
jle
je
ds
mov
in
push
mov
cmp
ret
inc
xor
insb
jmp
sbb
mov
pop
mov
icebp
into
push
loope
xchg
repnz
sub
rcrl
push
adc
mov
mov
addr16
push
push
mov
mov
sbb
push
aas
xchg
test
dec
shl
imul
pop
pop
in
adc
or
mov
cmp
mov
pop
push
add
xor
jnp
fists
cltd
xor
test
jle
or
push
mov
out
cmc
and
in
stos
scas
xor
mov
add
std
lcall
mov
and
ret
mov
push
push
aaa
add
inc
xor
bound
fmul
jg
hlt
dec
test
xor
xor
or
aad
jg
sahf
cmc
inc
mov
and
test
sbb
or
xchg
loope
enter
and
lahf
xor
push
insl
add
lret
adc
jns
stos
mov
pop
pop
sarb
out
xor
inc
adc
js
ds
stc
xchg
iret
mov
pop
jg
popf
js
addl
xor
and
xor
rorl
fnstcw
cld
sbb
sti
mov
mov
divl
mov
sahf
or
xchg
pop
push
mov
inc
dec
aaa
repz
fs
mov
addb
outsl
sarl
sub
test
loop
imul
rclb
mov
xchg
push
in
sub
cmpsb
dec
ljmp
cmp
cltd
es
scas
push
and
lock
pop
adc
xlat
lahf
or
vunpckhps
ss
maxps
daa
iret
jl
dec
addr16
xchg
push
mov
loopne
movb
mov
or
inc
add
movsb
add
scas
shll
sti
pop
out
insb
out
mov
xor
mov
xchg
cli
ljmp
sahf
jno
aaa
xchg
sbb
sub
xchg
jl
hlt
push
lock
loop
loope
lret
lods
sub
iret
xchg
jno
stc
fs
es
dec
add
imul
and
jnp
or
lahf
xchg
mov
sti
sub
and
sub
sub
mov
sub
dec
lods
movsb
fbld
adc
and
and
inc
pop
pop
mov
sbb
and
loopne
sbb
int
lods
test
or
xchg
lods
sub
xor
push
addr16
mov
dec
xchg
adc
and
ficomps
inc
fisttpll
xchg
push
repnz
and
jns
aam
sub
stc
ret
rdmsr
mov
adc
loop
insb
xor
push
xchg
ffree
mov
push
mov
push
inc
cmpsl
xchg
inc
movsb
inc
lahf
inc
jne
outsb
das
jmp
insl
lcall
outsl
sti
mov
dec
xor
enter
clc
test
sub
movsl
cld
jle
push
xor
cmp
repnz
outsb
push
sahf
imul
subl
dec
sbb
lds
add
mov
in
sub
push
pop
out
or
sub
data16
sahf
aaa
add
pop
lret
cmc
xchg
and
cwtl
mov
and
loope
outsl
jb
adc
in
xchg
adc
loop
cmpb
push
dec
pop
jmp
push
mov
and
push
inc
push
test
xor
add
xor
push
add
rol
rcl
fcmovnb
mov
inc
shl
rolb
adc
push
js
sub
cmpsl
in
test
dec
cmp
cld
sub
sub
popf
cmp
sub
inc
cmc
push
hlt
and
insb
mov
jne
andl
mov
cmpl
jle
xchg
pop
xor
or
xor
cmp
dec
or
out
sbb
dec
mov
jae
out
fwait
call
mov
pop
pusha
into
mov
add
mov
mov
enter
cmpsb
sbb
pop
or
movsl
xchg
in
add
insb
xchg
sarb
scas
jp
jle
jecxz
addr16
xlat
sbb
adc
jo
jmp
xor
mov
sub
daa
ret
fistpl
loop
dec
fisubrl
call
call
movsl
inc
mov
mov
adc
lret
sbb
test
insb
mov
scas
jne
inc
mov
rolb
pop
cmpsb
mov
cmp
adc
add
or
cmp
xlat
push
in
sub
jo
cmp
push
out
fwait
dec
lret
inc
jb
push
jmp
rolb
movsl
adc
loopne
inc
divl
pop
out
mov
lret
cmpsl
shlb
push
push
mov
push
mov
enter
xor
xor
mov
sub
test
mov
sbb
mov
sbb
dec
jo
jecxz
jmp
in
scas
mov
daa
jl
stos
mov
mov
ja
pop
mov
inc
and
dec
push
jl
in
jae
lods
es
dec
sbb
aad
and
mov
test
in
ret
or
repz
ret
fiadds
sub
add
jecxz
scas
jmp
pop
outsb
cmp
pop
ret
addr16
cs
mov
movsb
loopne
pop
xor
pop
sbb
xchg
stos
pop
test
push
movsb
xchg
int
addl
sbb
lods
out
sbb
and
and
mov
cmpsb
pop
in
mov
ds
jnp
push
jecxz
lret
sbb
ljmp
cmpl
sbb
std
lcall
les
rorb
jbe
orb
inc
aam
inc
xor
add
into
test
mov
mov
data16
cmp
sbb
test
shll
sub
xchg
pop
das
dec
mov
ja
mov
test
or
inc
xchg
cmpsl
jecxz
mov
in
and
xor
jb
stos
jmp
jle
xchg
sbb
push
lahf
das
shrb
sub
bound
movl
enter
mov
sub
test
fwait
adc
xchg
mov
add
inc
cli
mov
fsubrs
fs
jne
fwait
repz
loop
or
jmp
test
int3
sbbb
cmp
pop
fwait
pop
pop
push
cmpsl
mov
jmp
popa
lahf
mov
je
pop
shlb
rorb
sub
inc
add
dec
mov
sti
insl
jmp
adc
mov
jmp
shlb
and
lock
jne
daa
cs
repz
jp
daa
cmc
hlt
dec
in
rorl
xor
aad
sub
dec
jmp
out
push
jne
mov
lock
in
lahf
scas
jo
roll
inc
out
sbb
aaa
dec
cmc
or
aad
and
ljmp
cwtl
stos
dec
fdivl
pop
gs
mov
loope
push
mov
add
mov
dec
icebp
sub
dec
pop
arpl
ds
lret
les
mov
lea
pop
mov
jp
and
cs
mov
cmpsb
pop
or
into
ret
mov
mov
test
pop
push
and
cld
addr16
dec
jo
and
add
iret
sub
mov
pop
test
call
dec
into
loop
pop
inc
dec
mov
mov
shlb
add
mov
adc
cmpb
mulb
mov
imul
pop
mov
cld
ret
jae
scas
cmpsb
inc
add
pop
push
xlat
sub
mov
dec
sbb
mov
jmp
xor
out
inc
add
ja
and
in
cmp
adc
dec
mov
sub
scas
out
sbb
sub
popf
cs
fistps
ret
mov
cmp
mov
daa
mov
mov
imul
add
aas
aas
or
movsb
fucomp
mov
js
jl
js
xchg
pushl
xchg
pop
push
inc
pop
sub
imul
inc
aas
mov
and
xor
push
fidivs
push
sbb
inc
mov
pcmpeqw
push
ret
jbe
sub
das
mov
sbb
and
out
sub
mov
rol
xor
push
pop
cmp
dec
loopne
dec
call
xchg
aad
mov
cmpl
sub
or
fldcw
aad
aam
sbb
mov
add
add
fwait
pop
add
shrb
mov
pop
mov
xchg
lock
cmc
pop
in
sbb
add
adc
dec
jns
test
rcll
dec
clc
jne
cli
sub
mov
mov
in
fwait
pop
gs
daa
or
mov
lret
test
mov
test
and
dec
in
lea
mov
inc
dec
fs
in
dec
lods
rcrl
rcl
mov
ss
mov
cmp
adc
adc
inc
movsb
data16
rorl
cmp
and
xsha256
cmpsb
adc
dec
inc
fldl
insl
or
cltd
xor
push
imul
jmp
add
jp
lea
xchg
scas
cli
push
stc
insb
dec
scas
pop
add
inc
stos
mov
call
jmp
fiaddl
push
cltd
or
idivl
jmp
dec
jp
cmp
jbe
xor
mov
xchg
shl
add
mov
adc
test
clc
aad
lods
mov
mov
push
dec
xchg
stos
cmp
iret
pop
push
jge
mov
mov
push
or
outsb
mov
and
enter
adc
loop
popa
xor
inc
push
add
sbb
aas
out
xorl
out
add
mov
fistps
pushf
inc
push
inc
mov
mov
or
sub
pop
xchg
adc
adc
jg
leave
ret
into
popf
dec
jno
fildl
pop
or
adc
add
lret
cld
andl
lods
out
xchg
int
mov
jne
sub
fidivrs
sbb
shl
jg
test
add
ljmp
and
and
rcll
cltd
pop
xor
stos
movsb
stc
sub
add
popf
je
mov
adc
ret
xor
in
lret
call
sbb
xor
lock
lret
push
loop
inc
pop
stos
pop
xor
cmp
inc
or
ds
lahf
out
dec
jns,pn
pop
xchg
lds
pop
xchg
enter
sub
xor
aam
jecxz
jbe
pop
test
sub
mov
cld
shl
jge
push
mov
push
int3
adc
xlat
repnz
cwtl
mov
andl
push
iret
mov
push
mov
and
sti
popf
push
xlat
dec
sbb
adc
ljmp
int
lods
nop
mov
ja
addr16
ja
pop
add
enter
ja
mov
jg
icebp
dec
imul
imul
lret
mov
in
push
popa
and
fnstenv
test
mov
aas
divb
fstl
aam
xchg
jns
mov
movsb
ret
mov
std
push
or
and
popf
xlat
push
or
imul
inc
jno
mov
mov
pop
mov
push
mov
cmp
rcl
or
jecxz
repz
adc
pop
stos
fisubs
repz
mov
cmp
push
fnstcw
xchg
int
subl
aam
jle
in
adc
out
outsb
sbb
ds
cmp
in
fmull
sub
xchg
pusha
inc
sub
add
test
mov
pusha
shrl
bound
adc
push
pop
in
nop
push
das
cmpsb
xor
aad
roll
sarl
rorb
stos
pop
jns
fistps
mov
jns
enter
xor
loopne
jno
popl
cmp
inc
jns
adc
loope
push
or
jo
cmpb
jae
rol
test
and
mov
out
mov
and
adc
das
cmp
lods
push
xor
xchg
outsb
jp
xor
xor
add
xor
push
add
ror
fidivrl
cmovne
js
jl
js
pop
cltd
pop
mov
sbb
cmp
jbe
ds
cmp
stos
ficomps
into
inc
clc
das
xchg
pop
shl
jne
mov
jmp
push
clc
mov
xchg
xlat
xor
shll
xor
testl
push
inc
inc
adc
cwtl
sub
cmp
mov
in
nop
adc
mov
shll
inc
xchg
test
ljmp
movsb
rep
sbb
lret
mov
or
mov
scas
loop
jmp
lcall
cltd
ret
scas
mov
rolb
sbb
add
lock
scas
repnz
and
les
lahf
pop
inc
loopne
fisubs
sbb
cmp
mov
loope
or
mov
das
rcrb
cmc
mov
mov
push
mull
pop
fs
imul
pop
cmp
and
sbb
push
pop
adc
hlt
lret
loope
adc
adc
mov
mov
dec
subb
and
sub
aad
outsl
fsub
sbb
push
repnz
jno
test
daa
mov
mov
sbb
mov
lods
or
lock
and
div
leave
movsb
pop
cmpsl
mov
adc
test
mov
cmp
stc
adc
out
sbb
idivb
sbb
out
mov
or
scas
roll
mov
nop
enter
mov
mov
mov
push
push
iret
insl
imul
call
mov
or
mov
cmp
xlat
fwait
testl
sbb
jp
push
repnz
adc
jne
add
pop
add
jbe
fstps
xor
les
cmp
test
push
pushf
shll
lock
mov
add
mov
rcrl
mov
or
icebp
mov
shlb
out
add
jmp
lods
das
adc
cmp
cmpsl
lret
pop
cmp
dec
pop
and
enter
jp
daa
sub
mov
ljmp
dec
scas
leave
mov
push
fdivs
insb
push
insb
mov
inc
xchg
inc
and
fadds
imul
int
xchg
sbb
inc
pop
push
lret
or
mov
cmp
mov
adc
lds
fmuls
push
lcall
dec
cmpsl
adc
jl
push
or
add
sarb
mov
popf
lock
sub
xor
inc
cs
mov
push
std
mov
fs
daa
int3
les
push
aad
pop
cmp
jno
adc
push
in
fidivl
jae
into
mov
jecxz
jp
mov
dec
push
addr16
and
jmp
pop
stos
add
or
loop
lcall
push
cmp
rorb
push
push
or
addr16
mov
enter
iret
add
pop
push
sub
shlb
cltd
xorb
xor
mov
aaa
add
cmp
sub
jp
ds
xchg
fstpl
lods
stc
mov
fists
call
dec
in
fildl
xchg
pop
out
pop
sub
divl
xchg
in
xchg
daa
pop
arpl
dec
xor
xor
or
popf
push
push
ret
jb
pop
insl
adc
shll
popa
sub
cmp
push
fldcw
push
cmpsb
and
cmc
xchg
test
popf
inc
aad
ffree
data16
es
add
fsts
stc
lcall
xchg
out
and
movsb
enter
or
das
add
sbb
pop
xchg
fdivrl
jecxz
cmp
jp
test
test
xor
sub
into
mov
ss
push
cmp
add
ret
add
jns
cmp
jnp
fwait
arpl
scas
adc
out
push
and
push
xchg
imul
cmpsl
leave
outsl
iret
shlb
pop
pushf
mov
test
jp
push
mov
sub
mov
mov
scas
jmp
lods
inc
push
push
stos
aas
fisubrs
push
xchg
push
push
pop
cmpsl
out
rol
sub
cmp
lods
cmpsb
push
popa
idivl
add
push
jb
ja
imul
and
jp
cmp
daa
mov
call
out
mov
insb
inc
add
xor
push
add
lret
rcl
fcmovb
sub
ss
and
push
js
test
movsb
mov
mov
call
daa
mov
test
mov
dec
xor
test
mov
fst
inc
mov
dec
ja
push
sbb
into
sti
imul
pop
or
mov
cltd
pop
lahf
fwait
dec
out
xchg
cmp
add
cmpsl
xchg
mov
mov
inc
push
mov
mov
lcall
iret
push
mov
add
mov
pushf
fbld
stos
ljmp
cmp
mov
loop
mov
fstpl
int3
and
xchg
xor
jmp
or
data16
icebp
cmp
xchg
push
lcall
inc
in
push
xchg
mov
sbb
push
rcl
mov
negb
push
push
movsb
and
ret
dec
jbe
pushf
adc
test
sbb
mov
sarl
xchg
aaa
push
pop
mov
decl
lcall
adc
arpl
rcl
mov
sbb
dec
xor
jge
and
dec
mov
pop
dec
sub
arpl
jp
sub
fmuls
and
cmp
ss
xlat
and
repz
imul
jae
scas
lea
ror
dec
pushf
and
jnp
pop
sti
adc
in
sar
push
mov
jg
sbb
into
shrl
out
xchg
mov
dec
daa
ret
push
mov
in
call
push
mov
push
fldt
lret
inc
pushf
mov
test
mov
adc
mov
les
aaa
sub
xchg
inc
mov
pop
aam
arpl
lock
cld
jne
nop
icebp
push
sub
lret
loop
cmc
jo
pop
arpl
fwait
xor
pop
jmp
pop
adc
stc
push
inc
pop
lret
mov
repnz
test
push
or
mov
int
jne
pop
aaa
lods
cmp
andb
mov
movsl
popf
aas
out
pop
lret
test
push
pusha
dec
mov
sub
sub
je
or
and
in
jecxz
test
punpcklwd
outsb
scas
orl
sub
iret
sbbb
push
test
enter
je
stos
sub
pop
test
stos
mov
bound
dec
faddl
jle
or
negl
cld
sub
pop
xchg
or
xchg
push
popf
pop
dec
fwait
leave
std
cs
enter
xchg
and
mov
xchg
and
xlat
add
pop
and
or
or
leave
adc
mov
inc
push
int
add
stos
xor
mov
cmp
lcall
push
out
test
and
mov
cli
call
lret
cmp
sub
mov
mov
test
mov
popa
subl
out
test
out
fistpl
cmp
insl
out
xchg
or
addb
sbb
xchg
pop
and
mov
and
lods
sahf
repz
xor
lods
shrb
rcr
sub
add
add
jae
sbb
jmp
lods
call
push
outsb
lret
jl
mov
push
jge
cmp
sbb
cld
inc
shlb
dec
lods
xorb
int3
bound
pop
jg
cmp
movnti
cmp
and
fcomp
or
xchg
gs
add
loopne
mov
popa
mov
sub
lahf
xor
sbb
shl
aam
mov
pusha
pop
inc
and
sbb
shlb
movsb
out
mov
cltd
test
hlt
jmp
fildl
rcrl
and
aad
xor
mov
nop
je
sub
adc
sub
sub
pop
mov
lcall
pop
add
daa
test
sub
lods
test
xchg
mov
mov
add
or
jo
lea
lret
addr16
aaa
dec
jg
add
xor
cmp
push
xor
jl
mov
filds
add
aad
sbb
fsubrl
adc
jns
push
dec
add
lods
std
push
sbb
jge
push
mov
mov
or
mov
xchg
lock
repz
mov
je
scas
add
sahf
and
push
sbb
sahf
mov
sub
sbb
int
lahf
hlt
cmp
pop
inc
fdivl
adc
sub
mov
cltd
aam
adc
or
in
movb
jbe
xor
or
lret
add
cld
movsb
mov
jo
je
pop
lret
or
out
ret
inc
push
pop
call
mov
mov
add
pop
jmp
rol
int3
fcmove
fimull
ss
js
jl
js
jnp
andl
pushf
push
push
push
add
in
pop
and
into
adc
scas
jne
sub
imul
mov
jmp
insl
jle
daa
mov
add
out
dec
ds
es
shll
in
dec
cmp
icebp
sbb
cmp
mov
push
test
roll
xchg
test
xchg
cltd
leave
imul
movsb
adc
jne
test
dec
sub
jg
neg
push
cmp
sub
inc
in
orl
add
fs
add
and
cmpl
sub
pusha
cmpsl
mov
aad
sbb
loop
jecxz
jecxz
sbb
addr16
in
iret
dec
fwait
repz
mov
pusha
inc
sbb
cmpsl
push
cltd
aaa
lock
xchg
rorb
lods
lcall
mov
jecxz
stos
leave
stc
pop
add
mov
adc
lock
push
aaa
or
jb
sarl
int3
and
in
mov
sbb
lret
mov
mov
jl
int
jae
lret
xor
pushf
mov
daa
cli
jg
push
enterw
iret
lods
xor
xor
pop
ret
mov
cli
pop
mov
je
pop
xor
or
mov
mov
icebp
mov
cmc
cs
adc
into
mov
or
mov
mov
and
dec
out
js
iret
cli
jp
in
fwait
and
loope
inc
mov
lods
mov
les
fnstenv
and
push
leave
mov
jb
out
loop
test
js
shl
rcrb
int
dec
push
jg
push
pushf
mov
sahf
ret
adc
dec
mov
daa
fxch
push
adc
mov
push
xorl
pop
cmp
int3
add
ja
adc
mov
cmp
xor
xor
push
fcoml
out
xchg
out
cld
add
lds
add
hlt
or
fdivrs
fstpt
dec
inc
xchg
sarl
and
sbb
mov
ljmp
lods
rcrl
pop
int
ret
jle
mov
inc
rcll
mov
mov
xchg
cmpsl
leave
cmp
test
mov
icebp
or
scas
jns
xchg
cmp
test
cmp
in
push
stos
insl
pop
addb
cli
push
fisubrl
rclb
hlt
inc
add
dec
pusha
mov
sub
in
icebp
stos
shll
out
cmp
sbb
test
adc
pop
call
xchg
test
xorb
push
ljmp
sar
push
add
icebp
cmp
dec
das
pop
iret
or
jle
pop
inc
loop
pushf
lret
movsl
mov
pop
xor
cmp
pop
mov
mov
pop
dec
and
mov
push
pop
nop
pminsw
mov
movsb
lcall
addr16
mov
stos
and
dec
xchg
cmc
xor
sarl
repz
cmp
arpl
jle,pt
push
test
inc
lret
and
push
imul
xchg
sbb
cld
jecxz
cmp
push
lea
lret
cmc
xor
dec
bnd
adc
mov
out
arpl
lret
add
xchg
mov
frstor
stc
mov
mov
add
ljmp
mov
mov
xchg
loope
lahf
ret
sub
inc
dec
daa
pop
sarl
pushf
push
scas
push
aad
movb
mov
xlat
in
insl
lock
fdiv
push
xor
pop
pop
mov
mov
push
mov
inc
mov
popa
dec
cli
in
out
mov
fcoml
mov
outsb
arpl
pop
stc
push
out
dec
shrb
mov
xchg
inc
xchg
cld
xchg
lret
outsb
xchg
and
inc
sbb
and
out
fdivrl
cld
pop
dec
or
test
test
xchg
outsl
clc
fcmovnbe
push
out
aas
add
sub
loopne
inc
and
aam
add
xor
loope
cmpxchg
jno
sub
push
dec
fsub
cmp
popf
add
add
dec
or
rclb
add
cld
sti
imul
or
mov
ficomps
mov
das
icebp
mov
mov
notb
jbe
aas
inc
outsl
xor
negl
lods
pop
dec
xor
enter
mov
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
jmp
ror
cmp
aam
ror
add
sub
push
cmp
pushf
das
jg
jae
js
testl
insb
lds
js
mov
shlb
leave
jg
or
sarb
dec
inc
adc
inc
in
sbb
stos
mov
push
mov
addr16
mov
clc
cmp
cmp
int3
std
jns
popl
push
cmpsl
and
sahf
lods
shl
mov
add
movsb
es
pushf
cmp
imul
lock
jno
xchg
loopne
fimuls
sti
cwtl
ljmp
jae
dec
inc
jmp
pop
loop
and
imul
xor
ljmp
fstps
adc
dec
inc
mov
adc
cld
pop
xchg
sbb
xchg
add
push
jg
pop
or
das
and
mov
in
hlt
icebp
loop
sbb
mov
fdivs
sbb
jg
jno
dec
adc
imul
dec
or
in
lahf
push
dec
sbb
add
cmpsb
ficomps
dec
mov
and
xchg
pop
pop
push
add
push
xchg
cmp
mov
scas
and
xlat
adc
inc
xlat
and
xor
mov
and
add
test
add
jge
dec
fildll
cs
pop
fnsave
in
outsb
sbb
inc
mov
sub
bnd
xor
stos
loopne
mov
lret
rcrl
jp
shll
and
dec
adc
or
and
repnz
movsb
out
dec
mov
insb
ja
mov
int
xor
dec
cmc
sub
mov
iret
sub
ds
andb
jl
popl
mov
loopne
pop
fsubs
sbb
flds
and
subb
jbe
cltd
mov
fdivl
xchg
mov
mov
pop
arpl
dec
cmp
inc
mov
shl
sbb
add
jns
pop
int
int
lock
shlb
js
sub
add
mov
push
and
mov
or
arpl
xchg
xor
sbb
mov
xor
cmpsb
mov
cli
scas
mov
movsb
icebp
push
push
pop
xchg
xchg
adc
adc
xor
add
pop
leave
mov
xor
faddl
ds
jge
pop
bound
shlb
xor
xchg
mov
lods
or
aaa
in
jbe
adc
mov
mov
gs
mov
scas
cli
and
add
lcall
xchg
fistl
icebp
aaa
or
adc
dec
test
mov
adc
shl
leave
iret
jl
sub
sub
aas
es
and
cmp
push
jg
cmc
adc
add
add
rolb
jp
xchg
and
icebp
pop
cltd
fstp
inc
adcb
cmc
aas
xor
sub
jecxz
mov
scas
fsubrl
cmpsl
mov
inc
jb
js
mov
mov
cmp
push
rcrb
es
cld
gs
sbbb
ret
cmpsb
sub
sbb
pop
sub
adc
popf
cltd
aaa
xor
jle
push
add
lds
adc
sub
setp
lods
int3
inc
call
or
and
cmp
xchg
aas
sbb
adc
mov
mov
and
xchg
mov
hlt
push
cmp
jl
cs
mov
push
enter
rorl
mull
loop
sbb
lcall
mov
lds
bnd
cmp
sub
aas
and
scas
mov
xchg
mov
dec
pop
imul
lret
xlat
xor
xchg
and
stos
dec
cmp
arpl
or
mov
jge
call
sbb
insl
ja
and
mov
lea
in
xorb
xor
push
add
xchg
lret
cwtl
and
mov
idivb
inc
cli
sub
or
jbe
std
test
arpl
pushf
jle
push
mov
pushf
mov
ja
les
cmpsb
sub
or
sub
orb
imul
cmpsb
mov
iret
add
sub
dec
xchg
pop
xor
in
scas
push
out
push
cmp
xchg
loop
stos
movsb
sti
inc
aaa
out
or
lahf
outsl
outsb
mov
and
mov
in
xor
adc
gs
stos
test
mov
push
sbb
jge
dec
add
dec
ljmp
xor
int
test
or
xlat
rcr
fcmovb
jp
outsb
xor
lcall
jl
js
out
fdivp
ret
and
sti
xchg
ds
cmpsl
inc
jae
xor
rcl
cmp
ja
xchg
out
push
jnp
jae,pn
sbb
cli
imul
dec
cmp
mov
xchg
pusha
inc
clc
in
ficoml
xor
adc
popa
xchg
fs
sti
std
sbb
push
add
add
jne
inc
sub
mov
pop
adc
or
test
mov
xchg
out
adc
cmp
fmul
fsubp
leave
rorb
sub
enter
lea
pop
pusha
mov
push
clc
and
orl
int3
popa
out
mov
bound
push
adc
inc
dec
push
into
dec
std
pop
aad
in
inc
or
inc
xor
repz
sbb
sbb
mov
jns
fldenv
arpl
pop
push
ss
insl
pop
or
or
aad
push
pop
dec
test
xor
popf
pop
loop
mov
int3
pusha
mov
aam
fldt
sbb
ljmp
inc
out
xor
xchg
mov
mull
popf
push
push
cmp
cli
cmp
mov
mov
stos
jg
sbb
shrl
stos
pop
iret
inc
std
push
popa
cs
xchg
xchg
test
mov
shlb
in
iret
imull
mov
arpl
push
iret
loop
push
repz
stos
mulb
shll
fldenv
clc
daa
xor
xchg
or
pop
xlat
outsb
pop
enter
repnz
xchg
das
push
push
push
mov
insl
push
fldt
jg
adc
jo
pop
call
push
add
pushf
std
cmp
jnp
dec
dec
faddl
lret
dec
xor
mov
popf
xor
cmp
and
addb
int
out
mov
inc
mov
pop
xor
dec
in
sbb
xchg
divb
sbb
sub
or
xor
pop
pop
and
pop
test
adc
xlat
sarl
movsl
stos
stos
mov
loopne
and
mov
int
arpl
leave
shrl
test
sub
js
inc
in
lea
iret
jl
out
mov
xor
inc
push
sbb
nop
pusha
fsts
cltd
mov
xchg
dec
loope
sbb
les
ret
cld
xchg
adc
aam
repnz
cltd
cs
aam
fnstenv
xor
insl
in
insb
dec
inc
das
outsl
mov
mov
lcall
movsl
ja
xor
dec
outsl
addl
push
mov
lds
xlat
cld
and
aad
imul
sbb
push
inc
mov
add
imul
xchg
test
shrl
fmul
cmc
lods
clc
mov
fxch
or
mov
and
xchg
xchg
fisttpll
ljmp
adc
cmp
mov
and
mov
adc
imul
xor
dec
mov
add
mov
mov
pop
or
sub
push
sahf
iret
js
mov
fimuls
jl
add
jo
pmulhw
js
fnstcw
inc
jmp
mov
inc
lods
test
push
out
hlt
pushf
jp
shl
test
sbb
scas
test
daa
jae
mov
sahf
sahf
pop
arpl
inc
addr16
int3
popa
pop
push
aas
jmp
popa
adc
cltd
orl
inc
aaa
test
push
popa
adc
lock
negl
mov
stc
insb
mov
repnz
shll
outsl
or
in
pushf
cmp
inc
xchg
jecxz
sub
push
push
push
mov
rcrl
vmwrite
fildll
cltd
dec
icebp
andl
push
jl
cmpsb
fistpll
ljmp
rcr
xor
movsl
lods
popfw
pusha
sahf
les
int3
popf
sbb
xor
mov
sub
rol
add
mov
js
xchg
xchg
cld
cld
aad
stos
push
sahf
bound
fisttpl
mov
int3
cpuid
fstl
mov
cmp
adc
test
cmp
lds
push
dec
add
sub
popa
and
push
add
ljmp
negb
or
shll
rol
lahf
mov
in
pop
cmp
mov
loope
in
inc
lds
clc
pop
out
aas
aas
popf
push
cld
repz
rcrl
getsec
mov
pop
mov
add
in
or
iret
mov
mov
sub
loop
icebp
lods
subb
leave
mov
jl
dec
rorl
jmp
aas
ret
rcl
iret
ret
dec
xchg
cmpl
xor
js
pop
add
mov
sahf
test
fcmovu
push
mov
push
xorb
mov
push
lds
jp
leave
xchg
scas
mov
or
mov
jne
adc
fiadds
mov
xchg
pop
enter
mov
adc
test
jg
inc
dec
lea
jmp
sub
push
cld
rorl
lcall
mov
adc
and
in
adcl
cmp
cmp
sub
insb
arpl
mov
pop
or
mulb
cwtl
pop
jge
fldenv
aas
cltd
push
pop
or
fldl
cld
sub
dec
push
ss
lock
dec
ja
ljmp
or
mov
inc
mov
xor
stos
xchg
cs
sub
mov
lods
sub
mov
jb
cmpb
push
es
mov
sahf
jp
lcall
in
sbb
fsubs
sub
imul
call
adc
fldt
dec
mov
mov
cmpsl
inc
adc
gs
sbb
out
shlb
fisttps
outsb
mov
into
xchg
mov
sbb
dec
xchg
and
and
fistpll
adc
cmp
cmp
pop
cmp
xor
mov
data16
mov
jbe
inc
clc
xlat
xchg
icebp
lahf
dec
ja
mov
sbb
mov
sarb
icebp
dec
dec
loop
sbb
and
push
fstl
jae
movsb
xor
jae
fistps
roll
outsb
and
movsl
xor
jbe
test
fsubrs
dec
inc
lods
jle
cmc
ja
sbb
inc
adc
and
fcmovbe
lahf
hlt
pop
inc
movb
mov
mov
mov
clc
cmpsl
xor
test
pop
rorb
ficoml
and
pop
popf
xchg
xor
push
or
jecxz
add
xor
addl
enter
ret
stos
dec
out
mov
cmpsb
mov
fptan
sub
imul
arpl
pusha
jmp
xor
mov
movsb
aam
adc
mov
lock
mov
and
loopne
mov
ds
dec
xchg
cmc
push
mov
add
inc
andl
pop
ss
jecxz
div
mov
dec
sahf
jecxz
stos
pushf
xor
mov
test
xor
movsl
std
pop
in
dec
popf
cld
cli
rcrb
aad
inc
mov
jp
data16
and
cmp
stc
mov
inc
adc
jne
pop
push
add
jge
mov
jo
popa
sti
popa
enter
cmp
inc
push
and
sahf
inc
movl
sbb
int
inc
mov
push
mov
push
cmp
lds
and
subl
pop
jle
xchg
mov
mov
js
mov
and
sbb
or
push
push
mov
xlat
push
int3
shrl
adc
xchg
mov
push
xor
js
aam
sub
sbb
enter
inc
or
fsubr
cmpsb
repz
inc
dec
cmp
mov
sbb
mov
cmc
xor
xor
inc
push
xchg
mov
loope,pn
stos
or
adc
pop
xchg
mov
clc
nop
sbb
and
das
ficomps
dec
xor
push
ss
ljmp
scas
jge
mov
cwtl
adc
mov
cmp
js
cmp
stos
loop
or
das
rolb
cli
filds
fnstsw
gs
push
shrb
xor
push
inc
lcall
cmpsb
pop
and
dec
loopne
push
dec
and
aad
add
les
pop
ja
mov
divl
xor
sub
scas
aas
push
loop
add
pop
movsb
mov
inc
mov
fcomp
test
push
pop
xor
in
pushl
into
mov
loop
sti
loop
loop
lcall
aam
icebp
mov
sbb
repnz
outsl
xor
sbbb
and
push
pop
mov
inc
or
out
xor
push
shrl
loop
push
xchg
xchg
test
cmp
inc
xlat
pushaw
adc
mov
dec
add
sbb
mov
and
push
pop
outsl
int3
or
xor
add
mov
sub
mov
movl
jmp
cmp
lret
rcr
lret
iret
adc
test
cmp
jae
js
mov
outsl
nop
cli
jno
cmp
pop
mov
test
mov
adc
lahf
adc
shlb
lcall
push
jae
shlb
dec
or
popf
in
imul
loop
mov
repnz
inc
or
out
int3
or
jecxz
jns
call
rclb
mov
cmpsl
push
ds
je
and
gs
ds
dec
iret
adc
pop
mov
mov
les
std
adc
test
aas
roll
cwtl
mov
sbb
mov
fcoms
jae
movsb
and
iret
mov
fcompl
push
mov
in
insb
or
lahf
push
inc
movsl
cli
hlt
sub
arpl
out
jge
mov
movsl
mov
or
adc
movb
lcall
mov
sbb
inc
adc
cmp
pop
stos
fadd
insl
jae
mov
faddl
aas
adc
insb
cmpsl
stos
cltd
int3
xor
mov
dec
test
jmp
jmp
inc
jo
xchg
jp
pusha
dec
mov
or
xorl
or
daa
out
out
jbe
gs
mov
test
cltd
std
movsl
cmp
int3
in
jbe
jae
push
je
push
shll
cmp
fildl
xrelease
popa
jnp
xchg
imul
fmul
fcmove
lods
sub
dec
adc
addr16
mov
lret
ljmp
inc
inc
pop
in
rcr
xor
test
sbb
je
xlat
and
dec
mov
inc
xor
icebp
repz
sbb
imul
dec
adc
jp
cs
insb
cwtl
sti
sub
popa
lock
popf
icebp
pop
sahf
or
jl
gs
adc
xor
arpl
mov
loopne
add
dec
mov
push
cmpsb
aas
mov
jnp
mov
push
inc
sub
pop
xor
movsl
imul
dec
outsl
imul
push
cmp
sub
rcrb
adc
loope
aad
pop
push
jmp
adc
xchg
add
std
jmp
xchg
les
jg
push
xor
pop
add
insb
cmp
xor
adc
fistpl
push
and
in
mov
and
sbb
sbb
inc
addr16
adcb
xchg
cs
testl
popf
xchg
mov
jle
mov
leave
aas
jae
out
sub
push
lea
aas
fmull
push
mov
lock
mov
loop
movsl
mov
sub
enter
pop
mov
and
jne
inc
jbe
inc
pop
mov
mov
lea
scas
jo
lahf
ret
add
sahf
pushf
fadds
scas
call
je
in
pop
inc
rcrl
add
lret
pusha
rol
mov
es
pusha
call
or
push
addr16
mov
addl
lds
xor
mov
xchg
inc
rcrl
mov
mov
cmc
pop
shlb
int
outsb
and
xchg
adc
xchg
inc
push
jp
adc
fdivrs
inc
rcrb
add
pop
pop
jmp
inc
push
add
dec
adc
popf
xorl
inc
cmp
or
cltd
mov
dec
repnz
inc
fcomps
test
aad
lahf
addb
inc
mov
out
sbb
pop
dec
xor
xchg
sbb
cs
sub
shll
loopne
aad
arpl
pop
mov
outsb
and
push
jecxz
lea
aad
cmp
lcall
jecxz
hlt
data16
xchg
mov
sbb
mov
ljmp
pop
xchg
pusha
lods
lods
push
addr16
arpl
jae
push
rcrb
aam
jg
imul
add
adc
xor
in
shlb
push
fdivl
dec
call
gs
push
mov
pop
adc
in
add
jns
subl
xchg
lea
xor
pop
fsubs
push
in
jl
fists
mov
test
jp
dec
cmp
arpl
sbb
les
xchg
jle
and
mov
ficoms
ljmp
cli
sbb
scas
insl
out
leave
sub
icebp
jecxz
lock
xchg
mov
into
mov
inc
nop
mov
lods
sbb
movl
mov
xor
jmp
aas
enter
fxch
rclb
fistpl
push
lock
jg
jae
js
push
xor
push
or
mov
cmp
shlb
aad
incb
call
aas
adcb
movsb
sbb
mov
fnstenv
movsb
jno
inc
bound
mov
cwtl
js
xor
mov
test
in
xor
mov
xor
cli
xlat
shlb
sbb
mov
icebp
xchg
mov
outsl
rcll
mov
fdivrs
push
push
cmp
pop
loop
sub
mov
and
xor
les
mov
fisttpll
jnp
or
mov
in
daa
pop
sarb
out
movsb
sub
sbb
xor
insb
adc
or
pop
inc
lcall
out
jp
pop
or
inc
mov
inc
clc
sub
or
sub
sub
or
mov
sub
adc
loope
das
sub
add
movsl
idivb
popa
pop
push
and
and
mov
ds
add
jb
ja
insl
dec
dec
je
mov
lret
push
push
movsb
jno
push
sub
or
mov
inc
and
adc
stc
jo
push
imul
mov
hlt
iret
outsb
lods
sub
in
roll
adc
out
ds
mov
inc
dec
pop
shr
lea
add
cltd
call
pop
insb
push
cmpsl
shll
scas
out
fisttpll
pusha
add
mov
push
xorb
xor
xlat
mov
push
pop
mov
fists
push
pop
push
mov
fsts
dec
cmp
shrl
shrb
jb
pop
cmp
loopne
xchg
fldt
test
loop
cmp
cmp
jo
hlt
adc
call
fadds
and
fisubrl
inc
ja
cli
in
adc
add
es
insb
push
dec
aam
push
sbb
cmp
add
pop
adc
out
xor
outsl
scas
mov
xor
jo
cs
sub
hlt
roll
pusha
les
lea
and
repz
pushf
lret
fldl
jbe
push
sbb
add
cmp
and
inc
ljmp
mov
cld
mov
jge
daa
inc
jp
rcll
cmp
xor
or
jecxz
or
orb
xchg
icebp
pop
pop
pop
pop
aaa
pop
add
jmp
outsb
inc
in
sti
mov
pop
fldenv
dec
and
ja
iret
testb
mov
cwtl
cmp
mov
cmpsl
daa
dec
mov
push
pop
shlb
push
les
ficompl
mov
dec
xor
dec
subb
lods
es
mov
xchg
mov
mov
mov
sbb
ja
inc
sub
scas
xchg
sub
fbld
xor
xor
lcall
inc
mov
pop
addl
cmp
pusha
popa
leave
lret
mov
fmul
lcall
test
repz
sbb
xor
xchg
pop
lcall
imul
outsb
mov
ljmp
fcompl
pop
jns
xchg
push
jb
push
shlb
mov
fidivrs
rcrl
gs
lds
ficomps
out
test
call
movsb
mov
push
icebp
cmp
mov
hlt
scas
mov
mov
inc
lea
lret
sub
jnp
mov
loop
push
xor
sbb
fidivs
or
stos
leave
fildll
std
test
insl
jmp
subb
lret
loop
dec
mov
mov
cmp
in
repnz
cli
cld
xchg
int
push
or
movsb
cmpb
pop
push
or
scas
push
mov
push
mov
mov
add
push
mov
mov
imul
push
mov
sbb
cmp
test
lea
adc
shl
cmp
mov
dec
hlt
mov
rcrl
insb
sub
adc
pop
das
jae
fsubl
xor
shll
mov
call
inc
mov
push
push
sub
mov
sbb
adc
enter
dec
mov
mov
xchg
add
ret
mov
icebp
fstl
stos
dec
popa
cmp
divb
cmp
add
mov
sub
sub
jmp
xlat
cmp
int3
fxch
aad
insb
test
std
jmp
jg
jae
js
stc
pop
stos
xchg
sahf
mov
xor
add
imul
pop
pushf
inc
or
adc
lods
or
and
pop
push
into
jnp
ds
repz
into
in
jns
ds
cmpsl
cmp
sub
out
mov
mov
mov
push
adc
js
cs
es
fs
lret
hlt
add
mov
mov
lahf
mov
je
and
cmp
rolb
shlb
mov
mov
imul
xor
loopne
addr16
sbb
lods
mov
and
dec
shrl
mov
setne
rclb
adc
std
pop
daa
mov
xor
add
add
movsl
mov
ds
test
inc
cmpsb
daa
in
xor
adc
imul
das
movsb
ret
jl
pop
das
leave
testl
dec
push
mov
lcall
mov
and
push
mov
push
mov
das
jo
lret
jae
sbbb
jle
inc
loope
loope
mov
dec
inc
or
lcall
sbb
scas
in
test
xchg
mov
fcoms
int3
adc
nop
imul
add
cmp
jns
lock
mov
mov
pop
int
pop
fwait
inc
movsb
addr16
adc
mov
es
or
imul
xchg
orl
push
sahf
orb
or
mov
loope
lock
mov
add
addr16
cltd
jo
imul
add
adc
inc
mov
pusha
jns,pn
rcr
cmp
push
fcomps
mov
xor
mov
jb
fmull
sbb
into
ret
lods
mov
xchg
stos
xchg
xchg
jg
adc
lods
rep
xchg
cmpb
cmp
sarb
mov
cmp
out
sbb
in
loope
push
inc
out
mov
adc
call
dec
jecxz
xlat
addb
push
or
mov
mov
adc
clc
incb
mov
leave
cltd
mov
pushf
dec
negl
xor
pushf
ja
in
test
jmp
arpl
lcall
cltd
dec
jg
sub
pop
add
vsqrtsd
adc
gs
adc
jae
in
out
test
test
push
movsl
repnz
fistl
sub
es
jecxz
or
inc
jg
ss
jle
addl
ja
fwait
imul
adc
fisttpl
scas
jp
scas
or
clc
out
cmpb
fiadds
bound
xor
add
scas
ja
mov
mov
loopne
xchg
add
sbb
jp
jns
push
mov
test
lods
hlt
and
pushf
es
int3
sub
fstpt
inc
test
mov
jmp
xchg
mov
xchg
sbb
lea
mov
xchg
xchg
js
in
in
push
dec
dec
jl
xchg
fcmovb
movsl
cmp
loopne
sbb
testl
rclb
popa
les
or
pusha
out
out
jl
or
daa
je
pop
addr16
scas
or
in
jns
mov
xor
ret
mov
push
push
mov
mov
mov
test
jl
and
daa
push
repnz
mov
and
push
lock
sub
ficompl
mov
jp
mov
pop
jo
loopne
lcall
jle
and
or
cltd
sub
icebp
insb
dec
movsl
pop
cmp
pushf
pusha
mov
pop
fdivrl
add
int3
mov
pop
aaa
and
scas
add
xchg
jp
sub
inc
inc
daa
shr
or
jae
int
or
xor
hlt
jecxz
sub
and
sub
ret
pushaw
scas
inc
sti
mov
mov
insl
movsl
call
xchg
push
sbb
fcmovbe
push
inc
mov
addl
and
push
push
pop
ret
outsb
add
cmpsb
dec
loope
pop
arpl
xor
test
sub
or
or
sub
jp
jnp
in
cmp
sbb
icebp
pusha
add
mov
sub
pop
jb
test
in
lahf
mov
pop
xor
imul
or
inc
and
cmp
sub
mov
outsb
xchg
test
rcrb
pop
push
aaa
mov
movsb
jge
lahf
sahf
or
gs
xchg
adc
outsl
sub
scas
lahf
addr16
in
inc
rorb
mov
add
mov
mov
mov
adc
jmp
mov
lret
or
xor
jg
jae
js
or
jns
pop
pop
sbb
xlat
aas
mov
or
mov
rclb
sarl
sbb
jmp
shll
adc
repz
pop
ja
mov
rcll
pop
insb
xchg
cmpb
xchg
cmp
out
mov
fs
clc
ss
jno
mov
pop
sti
or
or
and
dec
clc
dec
cmp
sub
stos
into
dec
cmp
jmp
add
pop
aad
cs
es
cltd
dec
cli
or
adc
pop
call
sbb
dec
lret
xchg
jnp
shll
sub
cmc
lahf
jnp
scas
and
or
ss
movsl
mov
ret
test
sub
xor
mov
pop
jo
rcr
pop
insb
and
push
in
adc
fistl
jl
or
fstps
sub
mov
dec
loopne
pop
xor
or
jge
sub
xchg
pop
push
lea
add
jp
pop
aas
sbb
and
aad
mov
cli
ljmp
int
icebp
mov
jns
mov
rcll
or
sub
faddl
mov
jb
pop
repnz
cs
cld
cld
stos
cltd
dec
popf
add
inc
hlt
ret
cli
sbb
std
fisubs
sub
enter
mov
mov
xor
or
out
movsb
jle
sbb
out
mov
arpl
imul
ja,pn
cwtl
push
hlt
incl
adc
jno
fldln2
jg
jnp
inc
enter
or
ret
in
jle
jp
cmovae
push
cs
xchg
popa
lds
xor
test
xchg
inc
ds
sub
scas
stos
xchg
mov
iret
pop
aam
js
ret
and
inc
xchg
test
or
mov
fidivrs
or
fnsave
dec
or
int3
imul
dec
cmp
in
jo
xchg
dec
push
xor
in
pop
sbb
movsl
and
xor
sub
and
mov
pop
push
notl
inc
mov
xor
jl
imul
imul
jmp
xor
dec
cwtl
push
jg
jnp
push
jmp
cld
inc
xlat
bound
pop
scas
sbb
shrl
repnz
outsb
ss
or
xlat
push
push
sbbl
mov
mov
xor
add
xor
inc
dec
pop
jp
pop
insl
das
cld
mov
sub
xor
lahf
div
std
mov
sub
stc
iret
cmp
and
outsb
mov
psubusb
cmpsl
fisubl
cwtl
add
sti
lock
cmp
adc
xchg
and
mov
mov
mov
jecxz
loope
mov
jae
dec
in
lods
or
inc
mov
jbe
jbe
cmp
test
mov
dec
lret
mov
cmp
les
fcmovu
pop
shl
fmuls
mov
jno
popf
roll
subl
in
fists
mov
inc
test
test
add
ja
outsb
adcb
sub
in
test
outsb
jle
insb
andb
mov
add
aad
pop
and
add
pop
push
push
cmpsl
xor
data16
jae
add
inc
sub
mov
mov
bound
inc
pop
pop
je
fistpl
sbb
test
inc
and
sub
stos
dec
out
mov
nopl
inc
xlat
mov
xchg
in
push
pop
test
push
mov
xchg
pop
push
aaa
js
movl
sahf
clc
addl
jmp
lcall
sub
xor
in
icebp
xchg
xchg
xlat
sub
mov
lcall
dec
aas
xor
psrlq
pop
cmp
rorb
or
mov
hlt
mov
push
push
mov
push
negb
or
or
inc
scas
hlt
lcall
dec
fmul
xor
mov
ss
nop
fs
xlat
sbb
xchg
and
pop
mov
cld
out
xor
imul
add
filds
shl
cs
or
loope
jmp
pop
pop
aaa
push
pop
lcall
lea
dec
add
jle
inc
pop
fldenv
gs
notl
insb
fisttpl
jae
xchg
sbb
and
adc
dec
sbb
mov
enter
cmp
shr
adc
lret
mov
sub
inc
push
jbe
movsb
outsl
jb
dec
pop
dec
mov
sbb
xor
jmp
leave
int3
leave
rcr
fxch
aad
push
adc
ror
jg
jae
js
das
xchg
push
and
xlat
dec
sub
dec
lds
pop
lret
or
fidivl
xchg
dec
es
lahf
lret
fwait
dec
jne
inc
or
fs
in
test
xchg
lds
adc
test
push
call
pop
inc
in
cmp
sub
mulb
int
filds
lock
fists
pushf
xlat
push
xor
and
or
mov
loopne
aad
push
push
and
out
fbstp
adc
cwtl
add
sbb
push
ds
in
sti
shrb
and
jo
shrb
dec
push
loopne
icebp
cltd
push
pop
push
or
repz
repz
lret
test
sbb
aaa
pop
or
cld
fdivrl
js,pt
in
jb
insb
xorl
jbe
out
addr16
fwait
loope
lcall
fs
sar
shlb
cmp
lret
loopne
aad
sub
rorb
mov
loopne
sahf
ja
jne
adc
ljmp
or
inc
subl
cmp
jmp
cmp
push
add
lods
dec
movsl
addl
in
movsl
dec
mov
push
xchg
rcll
mov
mov
push
test
mov
mov
sub
cld
ss
dec
xchg
push
ficoms
mov
out
xchg
lcall
out
adc
mov
cltd
sbb
inc
mov
hlt
aas
pop
loope
out
vmwrite
and
stos
xor
movsl
push
imul
sbb
inc
adc
mov
in
lea
into
rorb
sbb
popf
popf
pop
std
mov
cmpl
push
inc
xor
lret
jle
dec
gs
inc
sti
xchg
stos
outsl
add
lret
adc
dec
rcr
inc
sub
sub
es
xchg
adc
mov
cmp
scas
jg
push
repnz
mov
scas
jns
cwtl
ljmp
aaa
rdmsr
pop
mov
sarl
push
cmp
sahf
sti
imul
push
xchg
lret
jp
mov
je
xchg
je
fidivs
addr16
pop
mov
or
mov
and
xor
in
pop
add
xchg
sub
add
inc
xor
jo
movsl
sub
iret
xchg
imull
int
addr16
adcb
loope
aam
les
cli
es
les
adc
int
mov
insb
xchg
jbe
adc
dec
mull
jns
out
push
pop
rcr
inc
xor
xor
fidivrl
mov
jg
or
mov
in
sub
insl
add
sahf
cwtl
jo
mov
mov
xchg
sbb
call
pop
adc
xor
push
repnz
int3
cltd
idiv
add
sbb
stos
loop
insl
cli
bound
stos
add
dec
mov
fs
stos
cmpsl
pop
push
pushf
sub
inc
stos
clc
xchg
adc
lds
shrl
inc
cmpsl
int
nop
jp
cmp
add
push
push
pusha
pop
incb
sub
lock
in
les
xchg
outsb
js
xlat
loope
xchg
jae
push
sbb
nop
or
sub
dec
leave
jmp
cmpl
inc
inc
movsl
push
hlt
int3
and
hlt
sbb
mov
cmpsl
pop
xchg
out
inc
es
mov
out
adc
sub
or
ret
lret
push
jmp
jns
jno
js
or
mov
mov
cs
js
xor
push
andb
sbb
add
sub
cmc
sarl
mov
mov
gs
push
mov
nop
mov
push
orb
sahf
push
mov
dec
mov
stc
or
and
out
jg
cmpsl
es
pop
xor
jbe
sahf
sub
enter
orl
push
outsb
jbe
or
fmul
push
lcall
or
mov
js
xchg
pusha
iret
jns
mov
xor
outsb
jmp
or
out
imul
push
xchg
iret
cmp
mov
ret
movsb
popf
xchg
jmp
lret
mov
xchg
dec
or
out
adc
and
es
bound
xchg
je
or
lods
add
mov
mov
cmp
lods
loopne
pop
inc
inc
jle
push
inc
lock
dec
xchg
adc
sahf
int
or
cmpl
add
mov
aad
xor
mov
xlat
jg
jae
js
mov
dec
pop
dec
pop
mov
or
repz
mov
adc
lret
insb
addr16
and
sub
jae
push
in
cmpsb
leave
or
adc
push
nop
mov
inc
enter
popf
in
pop
sbb
imul
mov
shlb
neg
dec
ret
add
mov
adc
cmp
xlat
bound
fnsetpm(287
arpl
push
movsb
out
ret
rorb
mov
fimull
dec
push
mov
add
scas
pop
es
pop
scas
in
add
xchg
push
mov
add
xor
in
iret
adc
sbb
int
adc
call
or
mov
in
mov
or
inc
lea
jbe
sbb
or
dec
cs
xorl
in
mov
or
filds
ss
push
mov
add
sbb
andl
or
stc
dec
fisubl
mov
sti
mov
jae
mov
mov
sbb
pusha
mov
fstpt
pop
cltd
out
leave
mov
dec
jnp
push
cmc
dec
xchg
jmp
dec
sbb
cld
out
inc
test
lcall
popa
aad
stos
mov
pop
and
xchg
call
xchg
xchg
popf
cmc
out
or
sbb
mov
sub
adc
hlt
out
mov
pop
add
or
xchg
add
cmc
inc
ror
fcomp
lods
sbb
into
scas
out
and
mov
movsl
xchg
cmp
sbb
lret
cmpb
or
sub
les
inc
add
or
loopne
xchg
rol
outsb
mov
add
mov
divl
xchg
cmpsb
adc
push
fisttps
outsb
out
xorl
arpl
mov
xor
add
ret
and
outsl
inc
pop
jb
je
push
lret
inc
pop
test
mov
sub
mov
jnp
daa
push
mov
push
scas
stos
sahf
rcrb
cwtl
ja
inc
int3
lods
daa
popa
stos
pop
jb
lock
aaa
inc
mov
popa
dec
xor
js
test
mov
jg
lret
pop
aad
lret
cwtl
pop
idivl
push
cwtl
mov
and
orl
lods
and
mov
hlt
jno
out
ret
sbb
dec
jns
xchg
ret
and
pop
loop
das
mov
pop
fwait
lahf
inc
fsubl
pop
or
mov
lds
mov
fsts
out
pop
iret
es
ret
push
sub
loopne
push
repnz
add
push
loope
xchg
out
mov
pop
cmp
fcomp
dec
mov
push
sub
mull
ds
inc
mov
popa
jge
xor
push
push
mov
jecxz
cltd
jnp
cmp
testb
jbe
cli
sbbb
cmp
pop
xlat
stos
sub
sub
inc
or
clc
xor
popa
movsb
js
sub
lcall
or
loopne
lock
repz
adcl
js
cmpl
mov
dec
pop
inc
loopne
jo
jae
cli
adc
cmc
adc
icebp
movsb
divl
mov
pop
call
sbb
ja
loopne
xchg
ljmp
cmp
dec
test
cmp
jecxz
or
cld
and
jnp
aam
mov
jl
xchg
mov
in
push
jne
ret
addr16
push
popf
fists
add
dec
sbb
fsubrs
or
inc
outsl
decb
mov
clc
push
jle
mov
jl
jb
bound
lea
xor
cmp
pop
lret
fsub
int
shll
leave
xchg
jae
into
dec
fdivl
inc
xchg
pop
scas
aam
or
push
xchg
daa
lret
xor
jp
inc
stos
ret
out
sbb
jmp
aad
mov
dec
xchg
add
and
dec
scas
sbb
pusha
dec
mov
iret
imul
lret
lods
test
cmpb
or
sub
sahf
inc
add
adc
lahf
xchg
cwtl
and
xchg
adc
jmp
rclb
inc
xchg
addb
inc
or
insl
adc
sbb
adc
jo
fwait
jecxz
xchg
mov
push
pop
addr16
mov
out
mov
mov
inc
addr16
leave
push
nop
subb
outsb
adc
clc
call
and
movsb
addr16
ds
loop
mov
adc
adc
add
adc
out
fcomps
shrl
cmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movl
jmp
into
xchg
push
call
aas
fidivrl
jae
js
faddl
mov
sub
int3
inc
sarl
fdivp
adc
jne
icebp
enter
aam
inc
lods
andl
or
or
jnp
test
fldt
xchg
adc
stos
dec
mov
mov
mov
mov
mov
lods
and
ja
test
insb
or
cmc
push
les
fs
sarl
hlt
jp
xchg
jne
xor
fs
xor
mov
jmp
call
lods
clc
and
jmp
je
push
dec
inc
sub
loope
lea
pop
xor
test
adc
ss
sbb
push
cli
pusha
sub
mov
sbb
fwait
mov
cwtl
pop
scas
adcb
cld
mov
enter
scas
cmp
push
push
mov
jl
outsl
mull
hlt
mov
mov
mov
movsl
stc
and
jecxz
xchg
add
inc
dec
data16
shll
push
movsb
add
gs
sub
xchg
or
negl
xchg
dec
in
test
in
mov
icebp
dec
packssdw
xor
push
sub
jne
ret
inc
sub
jmp
addl
mov
icebp
lcall
pop
pusha
pusha
mov
rolb
sbb
push
or
jnp
fs
mov
lret
fsubl
push
popa
fdivrs
adc
andl
imul
inc
int
xor
push
mov
mov
scas
int
mov
mov
outsb
jle
leave
out
mov
push
add
push
lcall
push
dec
lea
push
mov
cmc
fsubr
sub
int
rcrb
lock
add
pusha
fldz
clc
lahf
cwtl
adc
pop
sbbb
mov
pop
repnz
cmp
loopne
pushf
orb
stos
xchg
in
sbb
cmp
test
cmp
popa
addr16
outsb
add
push
jne
dec
pusha
jmp
cmp
xlat
out
clc
test
xlat
repz
iret
inc
mov
adc
rcr
lods
sub
sbb
test
outsl
mov
and
sbb
pop
and
jne
push
xor
jecxz
inc
add
inc
lcall
lock
shrb
jo
stc
not
sbb
sbb
test
inc
cmpsl
pop
shlb
es
leave
outsb
ficompl
out
mov
ss
inc
mov
push
jp
call
out
jnp
cmp
mov
pop
insl
rcrb
mov
sub
or
out
sbb
dec
ljmp
dec
adc
stos
inc
jmp
and
push
cmp
adc
sub
mov
sub
cmpsb
adc
subl
movsb
mov
sub
pop
xchg
nop
dec
outsl
les
inc
nop
inc
fs
pop
lahf
jl
pop
les
xor
test
jno
inc
inc
das
repz
cwtl
cmp
add
jl
and
nop
cmp
add
roll
fisubl
add
jns
mov
mov
sub
idivl
pushf
and
ficomps
inc
xor
mov
mov
aam
les
popa
data16
pushl
inc
enter
shrw
push
es
repz
sbb
dec
gs
adc
stos
mov
test
pop
outsl
jle
outsl
dec
and
lock
xor
lock
xor
loopne
bts
mov
jge
cmp
jge
data16
add
test
icebp
adcl
insl
xorb
pop
inc
ret
push
ret
iret
fucomip
sub
mov
pop
mov
pop
fwait
repz
shrl
add
mov
cmpsl
int
shrl
loop
out
shlb
mov
mov
leave
mov
addr16
sbb
cld
sbb
mov
out
inc
imul
mov
jle
popa
ja
aam
pop
test
adc
shrl
lock
ja
sbb
sarb
insb
jecxz
test
mov
aam
das
push
fcomip
push
arpl
add
ficomps
inc
cli
rcrb
pushf
adc
pop
adc
or
pop
out
jne
imul
pop
out
popf
lods
xorb
aad
xchg
sub
js
mov
shlb
pushl
cmp
and
jmp
int3
aas
into
rcl
ror
shll
inc
incl
jae
js
dec
mov
jmp
insl
shl
arpl
jl
test
sbb
loop
int3
jb
call
pop
mov
fnstsw
fucom
jp
addr16
jnp
popa
inc
int3
add
sbb
aaa
js
add
push
and
mov
dec
cli
mov
inc
stos
pop
fmulp
lret
cld
mov
adc
cmc
and
into
xor
pop
pop
xor
cmp
into
adc
jmp
in
fidivrs
daa
xorl
jno
jno
gs
cmp
test
pop
dec
push
sub
cmpsb
pop
xor
pop
mov
rcrb
stos
adc
addl
negl
mov
mov
or
std
mov
cmp
xor
xchg
xchg
mov
add
loopne
mov
aam
pop
insb
mov
lods
sub
pop
mov
mov
xor
iret
outsb
lea
mov
je
mov
cmp
jbe
pop
adc
fsubr
sbb
and
leave
xchg
mov
cmp
dec
adc
sti
addl
sti
lods
jbe
imull
xor
and
add
scas
aam
lret
rol
dec
add
sbb
or
es
lods
in
stc
add
push
lock
dec
fdivl
pop
montmul
cmpsb
orl
mov
or
lcall
jbe
lods
fsubrs
inc
adc
cmp
rorl
mov
out
cmp
lret
xor
jge
push
inc
push
mov
js
inc
icebp
inc
sbb
aas
notb
sbb
mov
inc
sbb
andb
inc
leave
fisubl
push
mov
repz
pop
jno
test
or
push
jnp
add
les
mov
adc
int
pop
fwait
dec
inc
mov
testl
push
stos
lea
pop
fcmovne
pop
add
xchg
mov
les
jg
out
lahf
pop
stc
pop
xchg
push
sub
xorl
push
arpl
mov
pop
jno
sub
mov
rorb
jecxz
xchg
int3
jbe
xchg
jmp
and
clc
daa
sub
xor
or
test
filds
sbb
stos
xlat
jbe
push
or
test
js
pop
add
cld
push
pop
jb
cs
call
popf
shlb
xchg
fcoms
sbb
adc
out
add
pop
jnp
roll
and
popa
sbb
mov
dec
cmpl
fistpll
int
ja
ss
and
test
shlb
iret
pop
lcall
sub
pop
lods
daa
shlb
hlt
push
or
dec
aad
insb
mov
test
clc
mov
push
mov
pushf
int
cld
sub
jb
ffree
pop
stos
and
fldcw
hlt
jg
testl
and
xchg
dec
outsl
loopne
add
jle
jl
lock
addr16
add
test
std
adc
loope
bt
sub
dec
js
sub
jl
push
icebp
dec
dec
ss
aas
mov
js
dec
pushf
loope
imul
jo
cmp
stos
inc
mov
lds
leave
fs
push
in
pop
or
sbb
xchg
test
in
outsb
mov
inc
stos
pop
jmp
dec
iret
xor
or
dec
loopne
enter
lret
mov
in
jmp
jg
jb
xchg
push
mov
fucomp
icebp
pop
push
dec
orl
adc
test
cmc
add
pusha
dec
cmc
push
mov
ja
stos
sbb
mov
mov
fs
js
pop
pop
andl
leave
mov
xor
jo
mov
mov
aaa
cs
add
adc
mov
jnp
pop
movmskps
into
dec
pushf
mov
sbb
sarl
sub
xor
fldl
movsl
adc
les
nop
xor
sbb
jg
insl
add
jo
sub
shlb
push
shll
repnz
sub
lcall
arpl
sub
sbb
lret
cmp
dec
daa
mov
sahf
mov
add
pop
jp
das
bnd
inc
stc
adc
jl
xchg
mov
lock
cmp
sbb
iret
lcall
in
data16
fwait
cwtl
mov
lret
int
loop
cmp
les
lds
lea
out
xor
cmp
add
neg
jmp
ret
lret
ret
aad
leave
or
lret
ja
loopne
js
jl
js
ljmp
daa
or
insb
mov
loop
mov
xchg
pop
add
icebp
fsub
fwait
lock
vpextrw
lds
cmc
stos
shrl
subl
subl
push
sub
test
push
lock
xchg
bound
mov
add
repz
repz
out
inc
ret
jb
mov
and
mov
dec
jae
daa
inc
push
dec
sbb
cmpsl
push
ss
addb
xlat
inc
loopne
mov
dec
pop
xchg
fs
cmp
lds
mov
ret
test
pop
mov
cmp
movsl
clc
xor
jns
xor
adc
jns
fiaddl
hlt
push
mov
insb
mov
inc
push
lahf
out
scas
jae
stc
lahf
test
hlt
jns
mov
mov
int3
inc
pop
xchg
out
jbe
jecxz
ss
lock
loopne
test
dec
pop
pusha
or
xor
call
fisttpl
inc
add
iret
shll
lcall
outsb
testb
adc
adc
pop
and
push
jl
rcr
push
hlt
or
divl
sub
punpckhdq
call
in
add
sub
ja
fnstenv
dec
cwtl
rolb
ss
rol
stc
aas
pusha
push
inc
mov
dec
mov
add
adcb
out
hlt
call
sub
cmp
fidivrl
std
mul
push
mov
je
aad
jge
xchg
fldenv
imul
subb
movsb
pop
inc
cmpsb
sbb
pop
cld
mov
sti
stos
mov
cmp
mov
sub
cwtl
test
mov
insl
cwtl
mov
mov
stc
pushf
inc
jmp
mov
xchg
add
mov
mov
inc
lret
mov
xor
mov
ds
xchg
add
dec
mov
sub
cmp
icebp
adc
jns
pop
push
mov
push
sbb
add
mov
mov
add
in
mov
enter
pop
in
inc
pop
stos
outsl
xchg
inc
mov
mov
jmp
mov
push
sub
fdivs
rcl
es
ret
xchg
push
mov
mov
jle
in
cmp
cwtl
mov
addb
andb
sbb
cmpb
xor
pop
pop
icebp
add
lcall
dec
cmp
imul
mov
addr16
xor
mov
rcll
cs
mov
jl
int
add
and
aaa
dec
push
lock
push
ret
jmp
orl
clc
movmskps
pop
xor
std
dec
nop
in
pop
inc
fstps
or
out
jg
adcl
inc
xor
sub
mov
inc
push
pushf
add
cltd
adc
pop
mov
orb
call
mov
rolb
fnsave
cmp
or
xor
daa
cmp
xchg
pusha
movsb
add
inc
call
mov
jle
push
mov
out
in
pop
push
jle
sbb
je
in
and
add
inc
insb
pop
nop
add
repz
aad
imul
sbb
popf
gs
inc
sub
insl
dec
pop
cmc
repnz
push
dec
mov
cli
jo
jmp
sub
mov
sub
mov
xor
jbe
aad
imul
movsb
mov
ficoms
arpl
out
mov
adc
adc
mov
mov
xor
sbb
into
pop
addl
mov
subl
push
xchg
sti
pop
lods
push
xchg
in
hlt
leave
inc
inc
jb
fadds
and
mov
gs
jbe
or
leave
into
and
and
xlat
iret
inc
enter
scas
mov
lock
aas
aad
mov
inc
mov
push
adc
hlt
out
sbb
add
movsl
test
popa
inc
push
lea
and
lret
idivl
loope
jae
fwait
pop
pusha
xchg
cltd
jp
cltd
push
in
mov
lahf
sub
push
imul
inc
mov
xchg
fbstp
push
xor
dec
jmp
lcall
fs
xchg
and
das
movsl
xchg
in
stos
add
pop
lret
rclb
in
cmpsb
lods
mov
sub
fwait
test
inc
insb
mov
int
pop
gs
and
push
test
and
test
add
xor
mov
xchg
dec
or
fmull
mov
sahf
call
lahf
shlb
or
cmp
inc
mov
or
jmp
int
cmp
not
jge
out
out
jmp
js
jl
js
mov
negb
clc
or
xor
shlb
js
out
sbb
push
aas
lea
sbbb
mov
mov
out
ficompl
mov
pop
xchg
push
push
subb
std
cmp
out
jo
jnp
out
pop
hlt
mov
pop
cli
lods
xchg
sub
adc
or
sub
cli
movsb
je
inc
call
ja
jb
outsb
dec
mov
outsl
adc
xchg
ror
or
cmp
outsb
int
xchg
jne
cmp
xor
outsl
lcall
stc
bound
mov
fcmovnu
push
sub
jbe
int3
jbe
push
jecxz
push
lock
jmp
test
cmp
xchg
jb
pop
sahf
pop
cli
cltd
inc
sub
nop
dec
and
jae
inc
inc
out
int
xlat
mov
into
or
pop
cld
ret
sarl
ds
lods
xchg
faddl
mov
xor
and
jo
dec
fistps
in
rorl
add
lods
imul
jns
xor
cs
shlb
dec
cmp
scas
lods
adc
adc
dec
fadds
mov
repz
rep
lock
and
hlt
jp
mov
push
mov
xor
cmp
push
cld
lea
lods
rorl
cltd
stc
daa
jp
lret
jmp
roll
cmp
push
mov
sbb
jmp
jl
sbb
data16
rep
mov
cwtl
nop
stc
sub
out
fcomip
pop
xchg
and
stos
mov
call
push
push
scas
mov
push
movsb
fiaddl
popf
inc
dec
rcl
pop
rorl
ljmp
cmp
inc
adc
cwtl
fldenv
push
adc
xchg
sub
push
push
aam
cwtl
pop
les
jge
jle
pusha
leave
movsl
xor
call
jecxz
or
gs
into
fnsave
or
addr16
loop
lds
push
lods
mov
outsb
cmpl
jg
push
jae
pushf
add
sar
rcr
scas
sub
loop
popf
pop
ja
scas
daa
mov
in
add
ja
das
jl
and
cmpsl
repnz
testb
idivl
mov
inc
insb
jns
in
dec
shll
stos
push
scas
adc
and
sbb
cmp
inc
jnp
push
loopne
sbb
fsub
test
mov
inc
or
pop
adc
pop
test
rol
test
pop
xchg
loop
mov
test
and
js
jo
repz
inc
inc
mov
sbb
lods
push
or
and
cmp
push
cmp
adc
pop
cltd
dec
int3
fisttpll
repnz
andl
fistps
lea
in
and
es
jmp
cmp
cmpsl
xchg
fildl
pop
je
or
adc
cs
scas
push
out
in
mov
or
dec
bound
mov
rorb
mov
mov
jmp
sbb
out
insl
mov
cmpsl
bound
xor
faddl
sbb
xchg
push
daa
aaa
jecxz
pusha
ret
xchg
jecxz
in
add
push
stos
dec
push
jp
clc
ret
add
fldl
adc
insb
lcall
cmc
xor
dec
test
roll
xchg
sub
repnz
mov
cmc
call
mov
test
sbb
nop
add
popw
inc
inc
stos
adc
mov
cmc
dec
icebp
jmp
xlat
sub
pop
gs
stc
cld
dec
inc
test
sub
mov
cmpb
outsb
rcrl
adcl
lret
push
lahf
inc
mov
and
popf
push
lahf
and
add
cmc
mov
gs
inc
mov
mov
push
aas
js
aad
lds
lahf
sbb
mov
fs
sub
in
leave
sub
pop
subb
jecxz
adc
into
push
inc
mov
jmp
cmp
das
jle
lret
mov
repz
lds
and
ret
iret
add
lods
in
sbb
or
clc
push
mov
add
push
cltd
jp
rolb
mov
jge
cld
sbb
inc
jp
stos
test
rorb
sbb
test
and
xor
popa
push
sbb
loop
arpl
repz
adc
pop
mov
dec
movsb
push
out
pop
iret
pop
mov
aas
sub
push
scas
stos
cmp
sbb
add
or
stos
xchg
shr
loopne
jbe
bound
stc
repnz
lret
outsl
xor
xchg
je
ja
cmpsl
cmp
movl
adcl
movl
sbb
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
xor
xor
add
jmp
lret
ret
ds
mov
lret
xadd
xor
push
mov
jae
js
push
cmpsl
mov
push
lds
addr16
arpl
movsb
push
xor
iret
lcall
stos
in
and
insb
lods
ss
mov
pusha
rorl
mov
inc
nop
mov
pop
icebp
xor
js
popf
and
or
jl
push
fwait
stos
mov
out
mov
push
pause
loopne,pn
pop
cmp
xchg
lds
gs
lea
or
mov
push
stos
inc
sub
rcr
arpl
icebp
sti
and
dec
jo
repnz
mov
jecxz
sahf
mov
out
adc
mov
mov
mov
cltd
imul
test
lods
dec
rcrb
pop
and
pop
push
sti
dec
in
fcmovnu
mov
stc
imul
jmp
and
jmp
add
and
xchg
lods
jle
pop
adc
jbe
dec
add
lock
add
cmpsb
lret
out
push
adc
mov
shll
mov
or
stc
and
push
dec
cld
push
cmpsl
in
out
or
dec
sub
aaa
sbb
mov
push
jbe
xchg
and
lods
imul
into
cltd
das
hlt
mov
cmp
push
or
sbb
xor
add
mov
aas
sub
dec
arpl
mov
inc
ja
gs
mov
add
or
das
mov
les
roll
cmp
ret
sti
ret
add
fdivs
lret
dec
ljmp
adc
fdivs
cmc
jo
adc
xor
xchg
popa
icebp
shl
iret
addr16
push
repnz
leave
push
fs
or
jo
outsb
cmovns
pop
pop
adc
push
pop
and
jns
push
aaa
shll
and
shrb
mov
jae
int3
outsb
imul
adc
popf
push
cwtl
sbb
mov
dec
mov
jb
sbb
fidivs
jmp
clc
push
out
and
push
pop
adc
adc
xor
gs
shr
clc
adc
jbe
ss
mov
arpl
inc
stc
int
push
mov
imul
lret
enter
pushf
xor
pop
insb
adc
cmp
int3
and
xchg
hlt
dec
xchg
mov
loopne
pop
sub
cmpsb
std
add
icebp
ret
cmp
mov
insl
mov
movsb
and
jnp
jge
pop
cmp
xchg
fadd
dec
test
and
stos
or
enter
mov
fiaddl
xchg
popf
test
pop
insl
dec
xorl
fists
mov
cmp
add
mov
les
xchg
fmull
cld
adc
mov
or
cmpsb
jmp
jnp
cmp
mov
mov
pop
pusha
clc
icebp
data16
dec
lcall
xchg
aaa
pop
lods
out
in
or
in
call
outsl
add
cmp
pop
ret
push
add
fdivrl
pop
enter
aaa
cld
lods
sbbb
loopne
arpl
push
outsb
mov
dec
mov
or
imul
fdivs
mov
les
push
leave
xchg
shl
icebp
jp
fs
push
out
test
fbld
inc
mov
lds
jmp
or
js
out
jo
rorb
lods
cwtl
jle
dec
mov
outsl
jbe
icebp
mov
popa
repnz
ljmp
lret
adc
or
aad
leave
cltd
dec
push
dec
fdivrl
cmp
adc
inc
mov
jb
sub
dec
inc
mov
call
sub
push
adc
jge
mov
mov
out
outsb
mov
cmp
push
std
cmp
addb
data16
push
ds
cli
push
aaa
and
xchg
lds
mov
push
shll
ret
negl
xlat
sbb
mov
cmc
fisttpl
sub
loopne
shll
das
dec
jge
std
push
orl
leave
or
dec
mov
lea
mov
adc
or
mov
lock
aaa
repz
addr16
das
dec
pop
push
jne
and
fs
repz
lods
xchg
mov
pop
lahf
mov
lods
dec
jle
cwtl
xchg
les
aaa
dec
fwait
cltd
mov
mov
fdivl
fdivrp
pop
mov
cmp
sti
icebp
xor
cmp
pushf
clc
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
adc
jmp
mov
rcl
fcmovnb
fnstcw
or
leave
jp
popl
icebp
jg
jae
js
cmp
mov
cmpsb
aaa
pop
jmp
mov
cmpsb
mov
push
sbb
or
mov
cmpsb
inc
inc
fbstp
dec
adc
pusha
divb
decl
mov
shlb
sti
or
adc
mov
fcompl
int3
pop
ljmp
lea
push
xor
cmc
icebp
cmpsl
or
stc
adc
jg
mov
pop
jge
push
push
and
pop
adc
cld
dec
aam
jb
pop
push
jae
cmp
jo
imul
scas
mov
mov
mov
pop
mov
xacquire
push
aas
mov
idivl
lods
cmpsb
sbb
rorb
fnsave
sub
bound
fisttpl
sbb
movl
push
lock
push
pop
test
mov
adc
push
or
ffree
lods
xchg
idivb
test
lahf
jp
in
adc
into
fcompl
and
into
fwait
push
fsubrl
shrd
sub
loope
inc
push
shrb
and
les
jo
inc
loop
mov
lods
out
xlat
mov
and
je
cwtl
lods
or
and
lahf
cmp
jp
inc
test
xor
dec
inc
push
inc
add
ret
ret
jmp
sbb
jb
hlt
add
add
pusha
fisubrs
mov
mov
mov
pop
lahf
cld
mov
mov
adc
xor
jge
stc
adc
das
addb
clc
lods
mov
lret
sub
adc
xchg
xchg
and
movsl
popf
dec
adcb
leave
jns
cli
mov
js
add
mov
in
inc
dec
addr16
push
push
xor
xor
into
add
push
cmpsb
mov
and
insl
punpckldq
cld
sub
sbb
scas
pop
xor
mov
popf
pusha
iret
std
cli
mov
mov
xchg
ja
insb
push
cli
xor
in
in
fsubl
ss
xor
fldenv
dec
orl
fdivs
fisubrl
ja
inc
pop
aam
and
jne
push
out
mov
sahf
and
jb
arpl
es
stos
cmpsb
sbb
clc
kandnw
jp
cltd
shll
movsb
das
push
add
cmp
or
cwtl
jne
lods
leave
sbb
push
enter
mov
fs
out
xchg
dec
in
pop
ret
aaa
dec
xchg
sbb
inc
jmp
mov
cld
push
fcomp
repz
jnp
jne
call
aas
into
cmp
cmc
or
pop
lahf
cli
and
xor
mov
push
push
pop
std
push
sub
cli
or
cmc
xchg
imul
xor
mov
fists
out
sub
pop
ljmp
mov
fstp
sub
les
subl
sub
push
mov
pop
imul
out
cmp
push
cmp
lds
cmpsb
xor
push
or
out
inc
call
dec
mov
push
jp
dec
pushf
lods
xor
mov
pop
inc
add
mov
pop
push
xchg
ljmp
jl
stos
add
sarb
out
enter
mov
gs
lods
cmc
and
pop
adc
xchg
cmpsb
and
pop
repz
imul
pop
xchg
mov
cmp
imul
adc
in
mov
xchg
add
push
mov
outsb
imul
lret
and
mov
and
inc
shrb
outsl
cli
iret
lahf
jle
shrb
test
adc
fsubrs
repnz
or
out
mov
roll
add
xor
pop
cwtl
cli
push
movsl
fiaddl
mov
arpl
xor
lcall
push
push
cltd
xlat
jbe
push
movsb
insb
add
sub
mov
jge
dec
pop
mov
inc
daa
mov
add
lock
cli
mov
in
xor
or
loopne
out
loop
insl
hlt
xchg
cmpsb
xor
int3
sti
dec
mov
mov
dec
aam
mov
xlat
adc
mov
jne
aad
or
lcall
inc
xchg
and
fwait
xor
ficompl
xor
pop
inc
jnp
fwait
dec
js
or
inc
add
cld
fistpll
inc
sub
and
scas
je
adc
push
cmpsl
mov
out
jl
mov
mov
lea
lea
mov
push
daa
mov
mov
jecxz
cmp
scas
jae
jns
sbb
inc
int3
cmp
loop
add
jmp
lret
leave
int
int
fxch
sub
xor
jg
jae
js
iret
leave
cld
lods
push
xchg
dec
cmpsl
in
pop
xchg
adcl
ja
aaa
cmpsb
into
mov
cmpb
imul
orl
pop
or
ret
pop
push
or
add
jge
movsl
inc
jo
xor
pop
push
and
mov
ret
aam
mov
jbe
notb
popl
jecxz
out
lods
repz
mov
movsl
pop
jge
adc
push
add
aaa
bound
mov
cmp
add
imul
fs
fstpl
push
das
cmp
fsts
push
test
and
push
fs
adc
in
mov
sbb
push
jecxz
push
test
pop
push
pop
cmp
cs
in
test
test
mov
and
das
pop
idivb
or
sbb
cmp
cltd
shlb
add
push
daa
pusha
mov
lock
inc
sbb
ret
xchg
mov
mov
cltd
sbb
mov
xchg
push
mov
sti
mov
daa
hlt
cmp
push
imul
data16
int3
insl
clc
in
mov
or
sbb
es
mov
clc
iret
stos
adc
sub
xchg
adc
jnp
fwait
fwait
push
mov
gs
cli
lock
scas
dec
jb
mov
das
dec
xor
cwtl
addr16
inc
inc
jae
insb
cli
imul
dec
adc
sbb
sti
dec
dec
adc
imul
dec
in
mov
test
aaa
sbb
or
xchg
fistl
ret
and
inc
jo
pop
ljmp
aam
lret
pop
xor
or
and
xchg
fwait
sub
int3
push
mov
hlt
push
adc
iret
out
scas
inc
add
dec
cmpsb
outsb
cld
adc
push
push
hlt
test
fiadds
imul
in
sahf
sub
push
and
cmp
insb
loope
dec
notl
sub
sbb
mov
adc
pop
inc
sbb
cmpsb
pop
push
pusha
fcmovnb
mov
jne
cwtl
mov
inc
pop
lea
rcll
cwtl
fs
push
pop
xchg
or
fnstcw
stos
xchg
shlb
vcmpps
enter
into
negl
cmpsl
dec
xor
ret
stos
inc
inc
mov
inc
push
or
adc
adc
addr16
cmpsb
nop
adc
fldt
adc
jnp
lahf
mov
and
test
arpl
or
xchg
stos
adc
jge
ljmp
inc
incb
xchg
aam
xchg
mov
pop
mov
xor
mov
pop
mov
icebp
pop
filds
imul
loopne
rcl
jg
mov
clc
nop
pusha
test
xor
insl
push
aad
enter
mov
push
loop
fs
jne
xchg
sbb
cmpsl
sbb
sbb
sbb
dec
shll
adc
pop
iret
sub
or
add
xchg
insb
mov
xchg
add
or
lods
push
insb
mov
out
test
and
mull
mov
rcr
rcrb
add
fdivl
or
inc
and
push
lea
add
std
add
mov
cmp
sbb
xchg
loope
lahf
push
inc
push
pop
jle
add
adc
adc
pop
jmp
imul
cmc
xor
ret
test
inc
mov
mov
pop
rcrl
rorb
mov
gs
ret
inc
push
fisubl
xchg
cmp
xlat
pop
dec
lret
sub
test
orl
neg
mov
clc
xchg
add
ljmp
mov
roll
xchg
adc
movl
cmp
inc
leave
pop
fstpl
cli
out
push
test
jl
nop
lds
push
loopne
adc
leave
push
xor
repz
cld
in
lds
and
and
ja
pop
stos
xor
and
adc
add
inc
xchg
cmp
repz
fcoms
ret
inc
or
jb
xor
popa
dec
sti
dec
fidivrs
xchg
sub
pushf
icebp
fdivl
sbb
lret
pop
xchg
mov
pop
ja
je
cmp
jecxz
mov
imul
mov
mov
outsb
test
insl
daa
jo
jbe
push
int
xlat
scas
sub
jnp
jbe
cmp
mov
fcoms
es
add
lcall
sub
mov
orb
jno
pop
mov
stc
lcall
enter
clc
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
iret
cmp
fld
outsl
fisubrs
insb
clc
jg
jae
js
lock
pop
add
icebp
pop
scas
sbb
jmp
sub
xchg
pop
lcall
jecxz
jl
movsb
mov
mov
int3
xchg
dec
inc
mov
jg
mov
shll
xor
pop
push
dec
adc
dec
out
lcall
pusha
stos
divb
cmpsb
jno
add
pop
push
int3
cmp
mov
or
and
sahf
loopne
es
cli
neg
cmp
popf
dec
lcall
dec
push
and
inc
aaa
fbld
sub
mov
adc
ljmp
sbb
mov
xchg
pop
push
dec
mov
or
mov
mov
js
call
adc
ja
testb
movsl
xor
out
out
out
inc
stos
sub
jae
push
and
clc
dec
in
push
jnp
mov
xchg
push
gs
push
xchg
xlat
xor
sbb
push
pop
mov
leave
outsb
sbb
inc
mov
xlat
or
cmpsb
or
shlb
push
aad
fcoml
cwtl
pop
jno
cmp
jg
fisubrs
fcmovu
sbb
jns
pop
inc
repz
pop
adc
lds
icebp
jp
js
into
sub
and
sub
xchg
dec
xlat
inc
in
pop
xor
pusha
cmpsl
mov
jb
jg
mov
cwtl
testl
inc
lds
sahf
in
xlat
scas
cmp
repz
rclb
ret
enter
lods
and
pop
cmp
iret
test
xchg
jnp
push
mov
lods
inc
shlb
packsswb
mov
test
test
mov
mov
fstl
sub
imul
lcall
add
mov
dec
in
mov
repnz
lods
sbb
ret
sbb
dec
dec
pop
popf
lret
xchg
cwtl
lods
fdiv
jbe
repnz
dec
pop
call
cmpsl
and
clc
add
nop
xor
mov
fs
push
fs
cs
adc
mov
in
xorl
mov
lock
cmpsb
pop
lods
aad
lret
mov
out
out
or
or
mov
push
mov
xlat
aad
xchg
notl
push
sti
push
stos
pop
icebp
pop
cmp
or
jae
pop
aaa
jns
push
fsubrl
mov
add
pushf
or
int3
ret
sub
adc
popa
sbb
xor
push
push
nop
cli
mov
sub
jnp
ja
cmp
scas
int
pop
scas
sub
pop
addr16
sub
lret
iret
mov
jge
pop
into
push
cwtl
popf
pop
dec
jae
adc
movsb
test
dec
test
pop
sub
out
add
fimuls
shlb
enter
and
mov
push
je
jg
jecxz
pop
jb
testl
mov
push
rcr
pop
and
and
mov
push
inc
xchg
xlat
ret
test
cmp
pusha
jmp
push
iret
or
mov
jecxz
js
cmp
movsb
andl
mov
pop
and
and
lea
fidivs
sbb
pop
stos
adc
pop
js
push
mov
xchg
jbe
das
loopne
mov
and
outsb
jbe
insb
shll
pop
sbb
sub
enter
loop
leave
add
jno
mov
mov
inc
aas
mov
into
mov
push
inc
xor
mov
shl
cmp
adc
ljmp
or
enter
insb
ror
xor
loop
out
pushf
jns
enter
je
in
xor
fcomp
aam
pop
into
dec
repnz
ret
repnz
sub
push
xchg
and
inc
lahf
hlt
sbb
stos
cmpsl
mov
out
jge
jne
adc
in
mov
rclb
xor
add
arpl
jno
call
stos
stc
mov
push
pop
int3
int
mov
outsl
dec
scas
aaa
outsb
lcall
mov
mov
cmp
adc
add
pop
inc
hlt
mov
add
popf
push
in
enter
inc
pushf
shl
mov
jb
jg
adc
sahf
mov
movl
pop
in
pop
call
xchg
repz
cmpsl
out
in
mov
sbb
xor
sub
mov
orl
gs
jbe
lret
xchg
push
insl
mov
push
pop
xchg
jmp
and
rorb
lea
cmp
movl
je
push
movl
jmp
mov
adc
jmp
lret
rol
lret
lret
and
adc
and
cmpl
jl
js
cld
jmp
adc
jbe
sarl
xchg
pushf
mov
push
mov
mov
notl
xchg
aas
repnz
js,pt
negb
cmpb
bound
fldt
push
xlat
xchg
dec
mov
mov
pop
fisubrs
inc
inc
fstpl
fs
cmp
jbe
out
dec
sub
add
xchg
adc
int3
clc
out
out
ljmp
sub
mov
pushw
add
add
jl
clc
pop
xchg
jmp
push
push
add
adc
sub
cmp
scas
lods
je
push
insb
xlat
std
ds
fdiv
inc
mov
rcl
inc
cwtl
xlat
cmp
jl
mov
cmpsb
imul
js
xchg
mov
ds
push
fwait
shlb
or
insb
push
push
stos
inc
icebp
mov
inc
xor
sub
xor
imul
test
out
cmp
inc
add
xorb
imul
sub
fxtract
add
into
call
xchg
jnp
push
xchg
and
lahf
stc
mov
fldenv
bound
notl
push
test
imul
push
imul
pop
jne
inc
outsl
cmp
and
mov
mov
std
mov
imul
or
xchg
mov
rcl
push
lods
inc
rclb
mov
rorb
ret
test
enter
rol
shll
sbb
out
jne
lahf
daa
jbe
inc
dec
fiadds
push
enter
ds
xchg
leave
push
pop
inc
ja
add
cmpb
sbb
mov
cmc
rorb
testb
lods
sub
mov
cmp
sub
test
ja
adc
add
lcall
pop
mov
pop
cmp
sbb
jbe
rcll
aas
das
and
mov
pop
roll
adc
push
xchg
fidivl
cmp
jo
cmpsl
subb
dec
jecxz
cmp
popf
jbe
call
sub
cmp
cltd
dec
xor
popf
push
mov
in
bound
pop
jae
pop
fdivl
jns
push
lock
test
roll
es
aaa
in
gs
loopne
and
jge
sbb
mov
mov
imul
dec
push
push
add
sub
jb
stos
inc
test
xor
mov
or
test
fs
mov
add
imul
jae
leave
loop
sub
sub
lcall
cmpsb
cmp
test
jb
sbbl
xchg
xchg
jle
jae
clc
scas
add
xchg
dec
pop
out
cmp
push
fdivrs
add
mov
mov
pop
sub
push
cld
and
rcl
push
pop
dec
mov
adc
jle
icebp
cwtl
ret
pop
add
iret
clc
xchg
sub
lods
cmpsl
test
out
cmpsb
bound
aaa
sti
data16
xor
enter
push
sub
cmpsl
and
pop
sub
mov
repnz
jae
mov
in
stos
lret
push
xchg
jae
mov
push
dec
pop
jbe
cwtl
ror
clc
dec
out
cwtl
ror
jb
adc
orb
add
insb
loopne
js
inc
frstor
xor
cltd
push
mov
fmul
out
mov
add
repz
cltd
int3
add
xchg
aad
push
ljmp
out
data16
lock
fwait
sbb
fmulp
push
sbb
jmp
cwtl
sub
add
sub
out
push
sbb
aaa
sti
out
push
ror
sbbb
sbb
push
scas
repnz
sub
pusha
cmp
sahf
mov
xchg
pop
lcall
lcall
fsubrs
mov
insb
in
lods
xor
mov
add
es
rolb
cmp
in
lret
in
jns
shll
clc
fbstp
jns
pop
pop
mov
rcll
clc
jp
popf
adcb
loop
sarb
mov
mov
shl
or
adc
mov
outsb
insl
sbb
cmp
inc
jle
rorl
das
xor
mov
cmpb
scas
cmpsw
adc
das
xor
leave
aaa
stc
rclb
adc
orl
mov
leave
pop
loope
sbb
push
and
and
and
sahf
ss
jp
fidivs
xchg
add
and
jg
fdivs
stc
fldcw
inc
mov
movl
sub
mov
addl
xor
andl
add
movl
jmp
int
enter
int
stos
nop
mov
mov
jl
js
mov
out
addl
add
mov
mov
call
xchg
inc
addr16
and
insl
inc
cmp
outsb
push
jl
addr16
test
in
inc
lods
push
pop
push
or
aaa
add
and
lret
mov
push
or
loopne
xchg
je
xor
push
inc
and
cwtl
movsb
sahf
loop
add
xor
cmovns
adc
xor
adcl
jge
xlat
xor
test
in
mov
jo
repz
aam
shll
cmp
ffreep
in
rorl
data16
outsb
mov
mov
mov
bound
pop
mov
in
loopne
xor
xchg
pop
outsl
push
rcr
outsl
pushf
insl
repz
pop
es
push
push
js
lcall
sbb
out
int3
push
or
cmp
in
mov
mov
fbld
inc
sub
add
lret
jle
cwtl
push
or
loopne
cmp
sub
in
ljmp
inc
and
movsl
adc
fstpt
adc
sahf
jb
fdivl
mov
add
fisubrl
mov
sub
push
xor
les
movsl
jb
jae
addr16
jo
push
bound
adc
mov
sub
stos
mov
adc
dec
fcmovne
movsl
sub
std
in
pop
pop
lods
jmp
out
sub
inc
mov
push
mov
or
aam
popa
xor
mov
pushf
loopne
dec
xor
jp
lret
sbb
pop
daa
pop
xchg
push
pop
enter
inc
mov
pop
xchg
bound
sub
int
dec
dec
scas
pop
xor
incl
rcl
fisubrs
clc
je
xchg
or
es
mov
sbb
fwait
mov
fs
dec
sub
xor
pop
xor
sbb
or
out
in
xchg
push
cmpsl
dec
pop
shlb
jbe
repnz
adc
filds
cli
adc
in
insl
fnstsw
ret
movsb
jb
sbb
mov
cli
fidivs
mov
jnp
add
sub
lret
jns
push
add
call
fdivrs
xchg
ret
mov
xchg
sahf
dec
cmpsl
dec
decl
jb
cmpsb
sbb
inc
sub
lcall
mov
adc
mov
repnz
cli
xor
shlb
mov
test
fsubrl
cmp
xor
mov
jnp
and
mov
in
std
shlb
inc
mov
adc
test
jb
sbb
xor
pusha
push
dec
add
lods
mov
sbb
jne
inc
inc
cmpsl
addr16
and
sti
dec
leave
inc
mov
sahf
enter
sahf
inc
stos
flds
enter
outsb
pop
jmp
or
and
mov
loopne
add
and
adc
ja
xchg
inc
dec
outsb
orb
movsl
and
subl
xlat
or
push
inc
pop
insl
adc
testl
dec
sbb
data16
ss
es
jmp
jmp
add
into
and
xor
imul
test
jae
repnz
je
push
xchg
mov
sbb
jp
lock
xchg
adc
shll
sub
jmp
inc
mov
add
je
mov
inc
outsl
gs
int
xor
adc
leave
and
lods
fldt
loopne
fldl
shl
jle
inc
jg
push
insb
shl
mov
leave
cltd
adc
sbb
pushf
fdivr
mov
in
nop
shrl
push
xor
shlb
lret
mov
jo
or
sti
int3
inc
and
repz
jmp
mov
popf
cmp
sbb
xor
dec
xchg
mov
push
xor
imul
int
and
lcall
xchg
xchg
xchg
mov
cs
aas
pop
xchg
fisubs
mov
in
cmp
pop
xlat
or
or
inc
mov
add
repz
in
mov
scas
mov
scas
popa
xchg
xchg
stos
cmp
frstor
aad
lahf
sbb
stos
fdivs
dec
lahf
push
jbe
push
outsb
xor
jns
ret
adc
cli
jmp
lret
leave
shrl
jae
cs
mov
jae
js
into
push
call
lea
push
dec
int3
pusha
jo
in
xor
dec
xchg
pop
test
repz
leave
cmp
push
popa
pmullw
imul
adc
fmuls
aaa
cli
sti
jnp
loop
push
jmp
outsb
stos
dec
test
int
xchg
jle
jbe
jp
push
nop
scas
int3
ds
lret
mov
movsl
aaa
dec
push
and
jns
dec
pop
nop
lods
jb
scas
fs
xlat
pop
or
mov
repnz
xchg
shl
inc
or
aam
mov
je
in
and
hlt
or
call
inc
adc
lods
sbb
pusha
jl
call
xchg
jns
jnp
mov
cmpsl
mov
dec
inc
add
add
pop
ds
jl
out
ja
daa
loopne
ss
gs
xor
lcall
popf
icebp
xchg
jnp
js
xchg
fs
rol
lahf
xchg
inc
xor
fstpt
adc
daa
das
push
push
or
shlb
test
cwtl
jbe
aam
sbb
jne
in
in
or
shll
xor
fwait
jbe
xor
push
addr16
pop
mov
ss
out
hlt
cwtl
mov
pop
cld
nop
and
mov
mov
pop
or
outsb
dec
int
ret
mov
dec
xchg
sub
push
lods
push
cmp
dec
push
lret
loope
test
or
insb
lret
cmpsl
mov
mov
jg
or
mov
dec
cmp
push
push
fmuls
jg
int3
xor
xchg
cmp
cmp
pop
subb
and
loope
clc
xor
aad
dec
mov
jp
xchg
add
lds
cmp
xchg
jmp
sahf
inc
test
xlat
jns
adcb
xchg
cs
dec
mov
xlat
popa
sbbb
lcall
sub
lahf
out
jno
dec
out
loopne
cmp
negb
or
ss
add
jo
jle
mov
xchg
or
and
fidivl
sub
sub
fcmovu
mov
ret
jb
mov
mov
and
rorl
test
test
sub
inc
ds
push
jbe
jp
cmpsl
mov
xchg
or
xchg
js
daa
test
pop
call
cltd
loop
leave
cmp
pop
cmp
jl
nop
leave
inc
xchg
jp
or
jbe
add
pusha
pop
sahf
jbe
xor
fstl
jne
int3
int
mov
mov
sub
inc
movsl
push
add
les
inc
scas
or
cmc
cmpsb
add
jae
icebp
xchg
rcrl
mov
repz
mov
mov
pop
out
ret
mov
lock
clc
test
adc
xchg
inc
cmp
call
cmp
push
pop
mov
popa
repz
lds
pop
add
aad
mov
pusha
in
adcb
adc
call
adc
dec
outsb
jno
inc
mov
and
jae
hlt
add
mov
ret
or
adc
movsl
rolb
mov
mov
iret
aad
mov
xchg
dec
adc
imul
rcpps
dec
shlb
movsb
xchg
subb
push
insb
and
rorl
pop
pop
xor
inc
push
aam
hlt
jmp
aaa
das
push
xchg
pop
lods
ds
xchg
call
or
jmp
mov
mov
cmp
pop
pop
sbb
sub
or
int3
jp
sar
cmp
sti
cmpsl
imul
jp
xlat
fisttps
inc
fxtract
les
int3
jo
std
or
and
push
pop
test
push
push
dec
dec
mov
jg
add
clc
iret
add
add
punpckldq
or
mov
rolb
mov
dec
repnz
jmp
ret
inc
outsb
fiadds
push
les
rcr
outsl
pop
sub
scas
cmp
lods
dec
mov
insb
loopne
out
ret
mov
adc
mov
outsl
sbb
sbb
inc
imul
push
inc
xlat
sub
push
jmp
push
out
pop
mov
daa
imul
mov
sub
decb
xchg
push
pushf
mov
rcrb
pop
mov
cmp
mov
pop
dec
adcl
scas
arpl
rol
cld
and
rcrb
push
dec
sub
dec
fildll
xchg
push
or
jno
jb
mov
mov
jmp
into
iret
iret
cmp
cmp
shl
aad
je
or
pop
inc
mov
jae
js
jg
and
cmpb
mov
dec
add
and
mov
mov
jg
pop
mov
aad
test
and
repz
push
addr16
sbb
in
mov
mov
in
mov
jle
xchg
lods
pop
push
pushf
sub
push
adc
stos
hlt
inc
mov
popa
in
repnz
jnp
lret
pop
dec
jmp
daa
fs
cmp
dec
loop
scas
movsl
push
mov
mov
enter
cmpsb
push
shrl
push
cmp
fstps
jo
dec
hlt
push
nop
mov
jae
push
out
mov
cmpl
dec
adc
stos
cwtl
popf
xor
pop
dec
inc
jne
aad
push
push
fdivl
mull
repz
push
mov
mov
lcall
rcrb
rclb
aas
pop
clc
pop
mov
adc
out
fs
push
dec
jae
inc
movsb
jno
sbb
fwait
xchg
sub
pop
xor
add
sub
and
push
icebp
lret
and
xchg
lahf
pop
mov
mov
or
mov
dec
pop
pop
and
inc
shl
add
mov
stc
imul
into
fldcw
stos
mov
cld
daa
push
sub
xchg
xor
ljmp
cmovg
lahf
cmpsl
shl
jmp
and
sbb
lods
push
inc
dec
push
ss
push
int
sub
gs
xchg
xchg
jle
lock
jp
mov
stos
or
dec
ljmp
push
subb
ret
rcrb
pop
and
add
dec
xchg
enter
sbb
add
aam
mov
sti
cmc
fsubr
aad
stos
xchg
stc
and
or
imul
movsb
lea
into
adc
jmp
ds
dec
movsl
les
fildll
sti
xor
in
call
lods
xchg
test
mov
xchg
cli
xor
fwait
mov
loopne
lea
push
mov
loope
inc
test
xor
and
leave
xchg
insb
std
add
fwait
add
icebp
push
pop
jb
jle
mov
and
loope
add
js
lods
lret
cli
cmc
mov
loope
aas
ret
pop
dec
add
loope
pop
insl
xor
add
cmpb
clc
inc
loopne
xchg
adc
sub
cmc
js
xchg
mov
cmp
aaa
xor
pop
or
xorb
jno
mov
add
push
jmp
fcomps
pop
xor
jle
jae
inc
cmp
out
test
sbb
mov
dec
mov
sbb
jmp
stc
cmp
adc
or
mov
push
jbe
inc
pop
and
sbb
pop
push
pushf
pop
and
mov
mov
pop
jmp
pop
push
out
data16
mov
lods
dec
das
push
cmp
and
jge
jno
insl
sub
jo
icebp
xor
jo
scas
pop
sysret
mov
xchg
test
mov
and
push
sbb
das
jb
cwtl
xchg
add
xchg
fisttpll
ds
dec
movl
jg
test
dec
cmp
js
test
inc
test
popa
mov
orb
lds
je
testb
ror
mov
pusha
fstl
push
mov
movsl
or
ss
mov
in
or
scas
bound
cmpsb
dec
push
mov
stos
fistpll
jno
push
in
adc
xor
lret
sbb
jl
repz
mov
jecxz
mov
lea
mov
sub
or
mov
leave
in
inc
push
lods
sahf
out
mov
or
mov
stos
bound
ficoml
push
cmpsb
lret
fildll
int3
jne
lods
mov
mov
xor
sub
data16
and
out
adc
inc
mov
cmpsb
push
inc
mov
leave
cmpl
mov
adc
call
outsb
pop
lret
call
ret
jns
jns
aam
fisubrs
outsb
orl
adc
movsb
inc
and
sbb
dec
cli
lret
mov
add
pop
mov
dec
testb
rolb
cmp
xchg
fidivl
fwait
push
cmc
add
fs
fisubs
hlt
cli
in
outsl
fcmovnbe
pop
lcall
sub
bound
and
imul
xor
push
and
mov
pop
sub
add
out
fnstenv
jns
inc
add
or
ror
cmp
aam
fistl
adc
js
jl
js
test
addb
into
mov
mov
add
xchg
lcall
sub
mov
mov
addb
sub
rclb
add
je
pop
ljmp
lcall
push
and
inc
mov
mov
arpl
imul
in
add
push
jecxz
dec
push
adc
decl
shll
jmp
popf
cmpsb
push
and
test
decb
roll
push
dec
pop
fimull
and
das
arpl
arpl
sbbb
dec
jae
popf
aam
aaa
andps
loopne
movsb
or
push
in
ds
out
js
lcall
je
mov
push
icebp
ds
loope
fistl
xchg
sbb
inc
sahf
mov
jno
and
adc
add
and
or
scas
insl
cmpsb
loop
mov
xlat
cli
pop
ss
jne
adc
pusha
lods
cmp
mov
jnp
push
orb
cli
ffreep
aaa
out
mov
scas
les
cld
dec
jge
out
jnp
sub
icebp
dec
lret
mov
push
mov
ret
push
das
pop
in
sbb
lock
xchg
jns
sbb
nopl
add
subl
cmpb
fwait
and
sub
dec
jle
push
lods
push
add
bound
push
clc
add
or
pop
adc
add
xchg
lcall
and
lcall
or
inc
xchg
cmp
inc
pop
ficompl
cltd
mov
mov
je
std
sbbb
mov
cld
test
mov
pop
sbb
hlt
xchg
jl
cs
test
jmp
pusha
int
push
or
xor
and
jecxz
mov
push
xchg
daa
xchg
fnstenv
ljmp
fst
clc
cmp
mov
loop
cmc
dec
mov
ja
inc
into
jne
pop
xor
aaa
pop
xchg
xor
and
add
leave
xchg
daa
push
mov
mov
test
or
hlt
and
fistpll
cmpsb
icebp
sub
dec
cld
popf
dec
mov
push
adc
aas
push
pop
xchg
in
xchg
and
push
jo
cmp
xor
lods
ds
dec
sahf
popa
or
daa
inc
rolb
push
cmpsb
xchg
push
ss
sbb
sti
loop
mov
push
sbb
inc
sub
push
lret
cmpsl
mov
ss
icebp
sbb
dec
sub
hlt
mov
arpl
jp
mov
addr16
sbb
aas
and
inc
div
fidivl
nop
in
xchg
inc
pushf
mov
pop
sbb
lcall
mov
sbb
scas
xchg
and
les
dec
cmpsb
and
pushf
rolb
xchg
mov
repnz
dec
inc
jno
imul
xor
inc
and
movsb
push
lcall
and
cmp
int3
sbb
ljmp
cwtl
test
out
cli
xor
mov
cltd
sbb
dec
xorb
push
xor
call
mov
aas
adc
xor
mov
rcll
int
out
in
jp
cli
fldenv
pop
test
cmpsb
mov
push
sbb
lea
xor
jge
push
js
psubd
xor
mov
push
in
jp
aad
push
xchg
cmpsb
outsl
sbb
fists
mov
cs
out
mov
xchg
mov
jmp
decl
inc
mov
push
loop
ljmp
pop
mov
push
jb
fdivrs
sub
and
lret
xlat
or
pop
dec
sub
adc
mov
int
call
je
fidivl
aad
pop
sbb
pop
xchg
cmpsb
jno
movl
pop
sbb
test
pushf
pop
or
sbbb
repz
sub
ss
gs
daa
push
adc
out
xchg
xchg
inc
aas
enter
sub
stos
adc
add
iret
push
add
or
call
sub
fcmovnb
imul
sbb
popf
jl
test
adc
add
in
sbb
insl
add
xchg
out
ret
xchg
stc
iret
scas
xor
insl
sbb
dec
in
inc
and
and
bound
mov
cmp
addr16
fidivrs
jl
xor
jmp
int
aad
int
sahf
pusha
mov
jne
mov
jl
js
hlt
ja
jo
xchg
xorl
loopne
push
sbbb
mov
and
daa
aad
hlt
cs
dec
aam
into
aam
adc
les
lret
mov
stc
push
sbb
sub
or
bound
jl
push
mov
inc
jl
cmp
lea
sub
sbb
sarl
out
imul
mov
std
mov
add
insl
cmpsb
sbb
cmp
jns
and
into
mov
insb
imul
adc
or
add
pop
pop
in
dec
in
insl
sub
aas
popa
push
and
std
sub
pop
mov
add
aad
mov
jne
inc
sarl
sbb
lods
out
pop
jmp
mov
enter
xorb
xor
cmp
cld
adc
call
rolb
aam
mov
mov
or
adc
sbb
into
sub
mov
fs
xchg
loopne
ficoml
pop
sub
call
mov
mov
jb
jg
leave
aam
xor
lock
mov
add
cmc
in
cmp
jno
and
int
dec
imul
inc
push
or
sarl
idivl
adc
scas
std
jg
xor
inc
fists
insl
xorb
mov
mov
sub
jbe
and
sbb
sbb
add
ljmp
test
xor
es
cwtl
jp
or
test
jae
dec
dec
nop
orl
xor
in
lods
loopne
inc
pop
gs
add
cmp
adc
mov
sbb
imul
repz
xor
gs
ja
xchg
sub
push
stos
out
loope
test
sti
adc
fldt
jle
imul
push
data16
iret
in
xchg
inc
pop
pop
mov
rcl
pop
sbb
inc
jl
xchg
push
fsubrs
cwtl
int
add
sub
jns
daa
into
rolb
movsb
scas
xor
xchg
xor
push
cmp
dec
jno
fstl
mov
test
sbb
mov
jne,pt
add
lods
push
std
pop
and
sbbl
pop
repnz
nop
cli
cmp
test
mov
add
xchg
jmp
pop
in
loopne
fwait
mov
push
loop
pushf
stos
aas
xor
sbb
jnp
inc
clc
lcall
push
pushf
xlat
inc
stos
push
pop
fldcw
adc
stos
mov
popa
xor
inc
xchg
add
lods
jmp
adc
into
jns
cmp
stos
mov
ljmp
shlb
movsb
xchg
cmpsl
imul
dec
jno
mov
fwait
push
idivl
ret
jp
mov
clc
jg
test
std
call
adc
jns
jns
push
sub
xchg
lret
ret
push
cld
cmp
sub
daa
cli
xchg
sub
idivl
fidivl
pop
lods
std
leave
cmp
xchg
repnz
fimull
push
stc
inc
jne
sbb
lock
mov
cmp
push
out
cmp
in
setns
aam
add
mov
test
aad
out
mov
and
xor
xchg
inc
ret
mov
mov
hlt
mov
pop
jnp
shl
out
sbb
aad
mov
jp
leave
pushf
loopew
test
mov
fnstcw
mov
mov
loop
dec
idivb
push
mov
add
popa
pop
in
mov
das
aad
pop
dec
mov
push
insb
xor
inc
xor
mov
pop
dec
sbb
cmp
xor
mov
mull
dec
pop
ss
and
es
xchg
aas
inc
mov
mov
sbb
ficompl
in
mov
xor
jecxz
scas
jmp
mov
mov
aam
or
in
gs
sub
push
rcrb
fs
rcrl
clc
xor
push
add
dec
mov
scas
ret
divb
mov
dec
movsl
xor
fs
mov
mov
pop
fwait
jae
sbb
sbb
xor
lds
aam
fisubrs
aad
cs
movsl
es
movb
and
and
pop
mov
out
pop
jg
jmp
enter
js
stc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
cmp
fcmovnbe
rolb
push
fsubl
jl
js
mov
adc
mov
icebp
add
in
pop
adc
hlt
imul
mov
push
sbb
pop
clc
sbb
fisttps
adc
inc
addb
sahf
adc
or
rolb
daa
pushf
aaa
dec
adc
addl
xchg
into
sti
and
sub
adc
testl
adc
push
jne
mov
sarb
adc
mov
add
mov
ds
mov
movb
xchg
and
sbb
xorb
push
dec
insl
lahf
xchg
fiadds
sub
sub
inc
not
lcall
inc
dec
or
loop
ret
jl
adc
filds
mov
imul
icebp
or
or
jns
xor
repnz
in
pop
hlt
and
xchg
shll
out
pop
adc
inc
das
jecxz
sbb
testb
xor
mov
adc
fwait
js
and
insb
cwtl
imul
and
loopne
pop
dec
pop
pushf
pop
pusha
ss
or
aaa
cmc
imul
in
push
sub
mov
mov
stos
lcall
mov
ret
push
or
stc
sahf
mov
and
test
insl
flds
and
mov
fisttpl
mov
inc
in
pushf
jg
cltd
pop
jne
movsl
ss
or
scas
sub
mov
cmp
inc
leave
enter
into
cli
scas
mov
adc
push
inc
mov
mov
adc
imul
cld
in
add
ljmp
pop
data16
dec
inc
fs
mov
mov
mov
push
cwtl
and
cli
mov
or
cmp
filds
or
outsb
faddp
mov
sahf
xchg
cld
ret
andb
ds
out
dec
push
vmread
int
cwtl
and
add
mov
fwait
jmp
mov
fimull
pusha
mov
and
in
push
repnz
sub
pop
sub
pop
mov
push
cmpsb
sub
push
push
push
bound
dec
push
sbb
push
arpl
jle
cmp
arpl
or
and
decl
pop
mov
jle
push
push
repz
pop
push
ds
mov
pop
push
or
jbe
mov
vrsqrtps
inc
daa
xor
xor
lret
test
sti
idivl
sbb
into
inc
ror
in
xor
in
gs
cltd
mov
jbe
push
data16
sbb
jmp
or
mov
lds
or
sbb
jae
dec
fdiv
enter
loopne
and
ror
mov
sub
cmp
lock
loop
pusha
xchg
into
daa
lock
mov
inc
scas
mov
mov
cmp
mov
inc
cmpsb
cmp
test
jp
cmp
cmpsb
xor
rcll
pusha
pop
ljmp
inc
push
adc
test
lock
xchg
and
mov
dec
fs
xchg
rcrb
cmpsb
adc
inc
insl
cmp
testb
fdivs
add
and
rorl
insl
pop
arpl
inc
xchg
dec
jnp
and
lahf
es
mov
hlt
notl
sbb
sub
rcrl
lea
loope
push
jmp
js
xchg
push
add
test
aaa
sti
sbb
and
add
and
jecxz
fstpl
stos
mov
and
pop
mov
cmp
dec
data16
or
imul
mov
xchg
mov
jl
ret
data16
add
imul
call
scas
sub
pop
sub
xchg
fisttpll
xchg
xor
es
inc
jle
sarl
ljmp
jbe
int
cltd
pop
test
pop
lcall
push
inc
icebp
sti
ljmp
cld
pop
js
repz
cld
or
mov
js
adc
les
adc
mov
pop
fdivl
ss
inc
fists
mov
shl
out
push
jle
mov
jp,pn
sub
fldenv
pop
cmp
inc
xchg
jb
mov
fsubrl
dec
daa
loop
stc
dec
inc
call
adc
sbb
rolb
imul
sub
mov
mov
orl
sub
movl
jmp
aas
int3
ret
aad
aam
stc
stos
push
repnz
jl
js
rcr
sub
daa
imulb
lods
sbb
lods
daa
cmp
pop
mov
pop
shlb
aam
in
mov
sub
ret
or
and
sub
iret
cli
mov
rcrl
cmp
mov
jmp
adc
inc
mov
jge
lea
repz
dec
int3
lock
pop
in
ds
xchg
cmp
jmp
mov
mov
call
pop
push
fdivrp
fs
cmp
push
jb
jg
jle
cld
dec
mov
mov
cmpl
stos
out
mov
mov
xchg
and
icebp
jbe
cltd
mov
mov
rcrl
in
arpl
unpcklps
cmpsb
xor
out
inc
clc
fbstp
push
xchg
add
or
sbb
pop
nop
dec
adc
jmp
je
dec
inc
or
fisubl
jecxz
push
cmp
arpl
fadd
lods
or
push
adc
jge
pop
mov
cmp
cwtl
imul
hlt
inc
fstl
xor
jo
mov
cmp
loop
cmp
cli
in
fisttps
je
je
push
cmp
ljmp
fxch
out
xor
jb
push
les
jb
test
enter
jmp
push
cmp
jbe
cmp
nop
aam
adc
out
push
addl
nop
push
shrb
in
cmpsb
cmp
xor
int
pusha
cmp
insb
popf
das
mov
sbb
ljmp
pushf
imul
cmp
inc
shl
pusha
add
rorb
sbb
xchg
pop
push
shll
and
add
add
cli
ret
out
cmp
test
jp
adc
push
cld
jl
sub
adc
adc
fs
mov
cmp
mov
push
push
aaa
mov
sbb
sbb
shlb
jae
lcall
stc
jbe
mov
iret
push
cmp
pop
dec
mov
pop
xor
aaa
int
sti
cltd
sahf
leave
push
enter
insl
xlat
push
cmp
call
pushf
lahf
loop
leave
adc
aas
push
and
sbb
insb
mov
addr16
test
cmp
dec
pop
xchg
inc
mov
call
sti
dec
cltd
push
cmpsb
sti
mov
ljmp
sub
fstl
pop
in
fsubl
negb
cmp
and
push
inc
lretw
lods
lods
sbb
inc
dec
aas
cs
repnz
xchg
xchg
es
sbb
jns
sahf
decb
out
imul
xor
sbb
call
in
aaa
ror
add
insb
das
mov
mov
jle
xlat
jl
ret
int
dec
and
mov
or
mov
mov
lahf
sbb
pop
shlb
shll
pushf
mov
inc
les
in
gs
adc
out
lock
fisubl
sub
in
and
les
sub
loop
popa
loope
and
mov
in
movl
dec
pop
cwtl
inc
pop
dec
and
jecxz
xchg
add
nop
shl
cmp
cmp
cmp
leave
lods
cmpsb
push
sub
mov
sbb
test
pop
test
pop
pop
sbb
lret
jg
aad
adc
mov
mov
aaa
flds
in
movb
mov
out
or
mov
addb
cs
xchg
ljmp
std
mov
or
leave
cwtl
pop
incb
adc
in
outsl
andb
xchg
add
xor
inc
ljmp
outsl
inc
xor
pop
mov
sbb
sbb
lock
xchg
xchg
stos
jmp
data16
jg
shrl
iret
adc
test
jne
cli
pushf
into
sti
or
mov
jno
mov
push
xchg
in
outsb
xchg
test
add
push
cmp
idiv
test
xor
or
rcr
xor
pop
fisttpl
fidivl
xor
cmpsb
icebp
dec
pop
jb
jge
dec
sarb
mov
cmp
sbb
and
jmp
push
dec
cmc
push
xchg
or
out
add
ret
int
xor
or
iret
cmp
cmp
loopne
repz
fcoml
imul
gs
jmp
xchg
test
jle
add
icebp
adc
iret
sbb
int
cmp
add
je
out
shlb
sbb
aas
ret
mov
cmp
movl
jmp
xlat
into
ror
aad
xlat
imul
pop
decb
jl
js
jo
pop
out
or
into
arpl
das
sub
cld
cwtl
cli
and
dec
es
mov
or
mov
fs
jmp
and
outsb
jb
xchg
ror
inc
cmpsl
nop
jge
rcrl
xchg
pop
jns
in
jge
sbb
inc
cmp
leave
cld
jb
insl
lcall
xor
pop
arpl
ret
out
clc
or
adc
jns
cmp
push
fcmovnu
jl
leave
fisubs
jbe
icebp
push
mov
iret
fcoms
lahf
dec
cmp
xor
jnp
nop
cwtd
int
or
in
mov
call
cmpsl
and
pop
jge
push
push
sub
ret
stos
and
imul
js
jb
sbb
insl
aam
cmc
dec
cmp
fnstenv
out
add
fisttpl
mov
adc
xchg
shll
pushf
add
enter
dec
dec
enter
rolb
xchg
inc
ss
cmp
mov
pusha
mov
out
out
shlb
jle
dec
and
ret
leave
mov
loop
cmc
cwtl
sar
int3
xchg
addb
popl
xchg
mov
and
into
aas
pop
add
iret
test
out
or
pop
fldcw
xchg
add
shl
scas
xor
imul
out
outsb
lds
or
jp
repnz
mov
scas
mov
dec
jecxz
sarb
ds
lock
fdivrl
pop
push
jns
test
adc
push
pop
popf
loope
rcrb
xchg
rorb
pop
imul
lods
xor
xchg
or
xchg
cmp
int
and
je
fwait
xor
add
cs
out
push
pop
repz
arpl
dec
xchg
in
stc
mov
cli
rcrb
xor
mov
mov
dec
out
jmp
mov
hlt
add
jo
push
ljmp
inc
pop
or
outsl
mov
or
mov
aaa
or
or
sub
test
movsl
daa
or
lea
sbb
xchg
movsb
test
stc
stos
leave
pop
dec
mov
ja
pop
lods
ret
mov
and
mov
sub
push
mov
xor
cs
mov
jg
mov
in
xor
sbb
adc
stos
aas
jae
inc
xor
add
or
dec
and
lret
mov
xchg
ss
and
and
inc
xchg
sub
jns
test
aam
das
jbe
test
mov
fucomip
cltd
rolb
or
lods
rolb
gs
les
inc
fwait
sub
sar
sbb
xor
push
lds
hlt
sti
sahf
or
dec
in
int3
push
add
lret
xchg
pop
cmc
mov
jge
scas
stc
daa
in
out
insb
and
push
sbb
push
mov
cmp
adc
sub
ret
test
pop
fimull
cltd
test
es
aas
cmp
inc
shrl
sub
adc
push
mov
jno
and
add
jne
repnz
push
lods
ljmp
dec
scas
stos
pop
mov
adcb
mov
call
push
frstor
mulb
push
add
in
mov
jo
push
dec
int
js
test
bound
insb
mov
orl
add
add
out
enter
fs
push
push
outsl
cs
movsb
push
mov
daa
jne
bound
sub
aam
sbb
jmp
sbb
mov
arpl
adc
cmp
or
ljmp
cmp
jno
lds
fstpl
mov
jno
mov
sbb
push
mov
dec
gs
hlt
ret
popf
lahf
and
adc
inc
mov
rcll
dec
pop
insl
out
outsb
insb
not
rcll
clc
pusha
data16
insl
pusha
mov
dec
aas
cli
fistl
xlat
mov
fsubr
jle
js
mov
int
inc
inc
sbb
dec
mov
ss
daa
or
data16
in
adc
mov
mov
cmp
dec
sbb
adc
push
pop
adc
dec
inc
dec
outsb
push
in
mov
pop
adc
mov
insb
cmpsb
insb
and
push
jb
clc
sub
shrl
loop
ja
dec
mov
xor
sbbl
add
movl
jmp
jmp
ror
rcr
rol
aad
stos
js
or
js
jl
js
sar
pop
or
fidivrl
push
repnz
sti
loop
out
cs
add
sub
aas
xor
xor
xor
or
mov
lea
cmp
adc
adc
and
dec
frstor
data16
dec
push
cs
ret
push
repnz
jne
jb
les
mov
mov
add
lcall
mov
sbb
test
push
or
pop
fbld
jmp
adc
ljmp
lcall
sub
dec
popf
xor
vmulss
loop
mov
pop
and
ret
out
mov
add
or
loopne
pop
pop
xor
cmp
adc
outsb
loope
out
xor
dec
mov
leave
aaa
and
sub
cmp
mov
or
xor
sub
outsb
insl
jns
cmp
cmp
cmp
mov
add
jle
pop
dec
call
inc
xchg
testl
add
inc
mov
xchg
sub
rsm
and
sub
mov
aad
cltd
mulb
aad
movsb
sbb
aad
repnz
mov
mov
sarb
mov
in
sub
mov
clc
and
or
xor
dec
gs
or
das
dec
sbb
jnp
xchg
out
mov
shll
sahf
insw
sbb
pusha
jp
and
push
jp
imul
push
in
jg
adc
fs
jl
inc
cmp
arpl
and
mov
mov
ja
xlat
les
negl
dec
sub
add
mov
es
sbb
push
mov
out
rclb
lods
jp
call
aam
push
jo
dec
and
dec
out
push
imulb
cmpsb
pop
movsl
jno
addb
push
pushf
and
xchg
in
pop
cmp
aaa
push
test
adcb
xor
aad
dec
push
inc
xchg
xchg
mov
push
mov
sbb
pop
inc
dec
adc
dec
out
aaa
mov
cmp
lea
or
xchg
lret
pop
push
insl
jle
pop
stos
les
pop
mov
push
out
mov
es
mov
in
movsl
mov
clc
push
mov
sub
test
xchg
inc
mov
dec
lea
test
jbe
sub
push
mov
cwtl
ficompl
inc
mov
jb
cmp
sbb
cld
adc
adc
push
pop
mov
jp
enter
pop
aam
mov
out
sub
ffree
mov
hlt
nop
cmc
sbb
inc
repz
mov
mov
adc
cs
movsl
push
out
lods
in
adc
gs
pop
imul
push
je
cmp
dec
cmpsb
jge
insb
pop
and
inc
or
ss
push
ja
or
flds
sahf
add
lret
pop
pop
shrl
pop
inc
xor
in
outsl
mov
jp
es
push
repz
inc
dec
pushf
sub
pop
dec
mov
popf
sub
stos
xchg
pop
mov
mov
or
cmp
mov
inc
lock
aam
enter
aam
inc
push
subl
add
rcrl
and
mov
int3
std
xor
icebp
movsl
out
ret
or
and
xor
ret
mov
jle
or
pop
notb
scas
lcall
in
sar
mov
fcmovnbe
sahf
std
js
add
rclb
fcmovnb
fiaddl
je
dec
adc
and
aam
ds
and
aad
mov
sarb
cmp
data16
insb
cli
das
xor
mov
jle
les
out
clc
or
mov
push
cld
pusha
mov
sti
test
jmp
lock
inc
test
imul
lds
loopne
outsb
insb
sbb
xchg
fsubl
dec
add
mov
stos
scas
adc
sub
or
or
sbb
inc
loopne
dec
mov
cmp
and
mov
pop
lods
ds
adc
or
xchg
test
sbb
out
inc
iret
push
cmp
imul
and
or
jecxz
pop
rcl
sbb
jno
add
dec
shr
nop
mov
mov
out
and
nop
pop
fdivl
mov
push
aam
and
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
mov
mov
sub
mov
jmp
lret
into
leave
aam
cmp
adc
mov
js
jl
js
nop
into
push
cwtl
cmp
cmpsl
lret
cs
fwait
add
xchg
xor
rorl
lds
mov
and
xchg
bound
nop
std
cmp
sbb
xor
into
jle
sbb
or
daa
addr16
sbb
mov
xchg
imul
dec
adc
push
adc
ret
in
xchg
jl
mov
push
add
fistpll
sub
rolb
pop
xor
fwait
inc
insl
jbe
in
cltd
call
fsubrp
mull
rcrl
xchg
in
xlat
mov
jmp
jge
repnz
popf
orb
fsubl
testb
jg
pop
pop
in
sub
add
xlat
stos
or
mov
inc
and
pop
or
in
jne
sbb
les
mov
cmpsl
les
outsl
and
mov
cmp
test
in
jge
repz
fldt
mov
inc
insb
add
cmc
mov
sbb
or
sbb
aad
aaa
add
mov
sahf
mov
push
jg
mov
push
xor
or
xchg
xor
pop
adc
xor
pop
mov
cmp
pop
lcall
jae
or
and
insb
fdivs
jg
sbb
call
pop
addr16
xor
push
mov
stc
fs
repnz
fcoms
andl
sub
and
inc
mov
dec
pop
test
dec
fnstcw
dec
hlt
repnz
je
fldt
loop
dec
scas
jmp
cmp
mov
dec
jo
pop
fidivs
hlt
or
dec
in
push
hlt
in
lea
inc
decb
pop
cld
arpl
xchg
push
stc
ja
not
jno
clc
sub
pop
mov
cli
or
lea
sub
pop
pushl
shlb
iret
aam
outsb
andl
int3
xchg
adc
out
push
gs
add
mov
je
mov
ss
lock
shll
push
icebp
test
push
push
sbb
mov
ror
loopne
ljmp
ficomps
push
inc
push
data16
lods
adc
mov
fwait
jmp
testb
in
popf
inc
fisubrl
cmp
adc
mov
into
es
mov
ss
out
fists
fnstsw
jl
ja
push
push
outsl
dec
mov
mulb
pushf
mul
sbb
sbb
adc
pop
sahf
out
sbb
sbb
in
fwait
push
lahf
dec
inc
sub
or
scas
mov
push
sub
push
cmp
adc
mov
jg
call
idiv
mov
insb
out
add
jns
and
lock
ja
mov
cwtl
clc
xchg
sbb
lret
inc
xchg
inc
adc
sbb
out
add
hlt
xor
test
xchg
leave
jae
pop
pop
jb
loope
jp
popa
sub
ja
popf
xor
push
and
push
inc
mov
fistpll
inc
out
inc
xchg
push
xchg
sbb
mov
jl
ja
ljmp
push
addr16
mov
inc
call
lds
push
push
push
or
pushf
stos
mov
mov
jecxz
sub
insl
fwait
repz
fwait
decb
frstor
ja
je
inc
bound
jb
test
int
sti
ret
sub
lods
adc
inc
add
pop
push
mov
divb
cmp
push
scas
push
aam
notl
jnp
dec
push
adc
nop
push
push
call
maxps
mov
mov
and
nop
xchg
mov
push
or
xlat
rcrl
xor
xor
cwtl
jae
test
into
imul
jge
and
sbb
push
ljmp
mov
inc
mov
sub
jg
test
addr16
mov
sbb
movsl
and
xor
enter
es
adc
sbb
mov
fldenv
push
push
in
adc
mov
int
lcall
cld
pop
or
arpl
scas
add
cwtl
int3
test
sahf
jne
popa
or
fcmove
cmpsl
xchg
mov
out
xchg
mov
sbb
dec
mov
xchg
aas
cmpsl
pusha
pop
hlt
cmp
sub
pop
mov
pop
scas
dec
movsl
add
into
cs
hlt
negb
mov
jno
fs
mov
sub
cli
pop
inc
sub
shlb
clc
add
jmp
cmp
leave
lret
leave
leave
ret
outsb
lret
jge
mov
pop
call
jl
js
insl
lods
cli
fistpll
aad
lahf
inc
pop
inc
imul
js
mov
les
push
rol
push
dec
and
test
push
dec
lcall
rorb
lahf
push
mov
push
mov
inc
push
call
out
mov
cli
push
lret
enter
push
test
jg
mov
les
push
sbb
aaa
or
sub
sti
in
js
mov
adc
insl
outsb
push
cmp
addr16
mov
cmp
js
testb
ds
daa
adc
stc
nop
dec
sbb
cwtl
mov
into
pop
push
adc
push
pop
pop
ja
xchg
aaa
mov
inc
cmp
dec
call
push
inc
jbe
dec
sets
in
dec
repnz
push
aad
cmp
mov
das
orl
js
dec
push
popf
insb
xor
popl
cmp
aad
dec
push
aam
xchg
cs
daa
mov
dec
sbb
or
dec
outsl
lea
or
jl
pop
lods
and
pop
mov
enter
pop
repz
push
bound
fsubrs
mov
pop
scas
xchg
mov
xchg
lods
aaa
iret
mov
test
je
push
imul
rcll
inc
leave
dec
push
ror
add
out
mov
inc
call
sbb
jbe
int3
ja
testb
imul
nop
sub
xor
test
push
ffreep
test
clc
leave
int
push
inc
push
repz
mov
in
xor
mov
movsl
std
idiv
test
sub
inc
into
mov
ret
pop
mov
xor
sti
cmpsl
out
pusha
cmp
pop
mov
mov
and
sbb
mov
jnp
mov
imul
movsb
repz
loopne
add
inc
es
ljmp
or
in
push
adc
or
popa
fistps
mov
ljmp
jbe
sub
lahf
fnsave
adc
add
adc
sub
int
inc
repnz
lods
xchg
rcrb
arpl
ret
and
fwait
pusha
pop
mov
popa
inc
push
xor
or
push
fisttps
loopne
loope
mov
ds
icebp
push
das
enter
arpl
lds
iret
es
push
pop
jnp
xor
pop
insl
mov
call
push
jmp
cmpsb
test
pushl
sub
inc
xor
mov
mov
mov
fbstp
lcall
fs
aad
xor
fistps
addr16
pop
shrb
out
push
sub
and
aam
lods
pushf
rclb
mov
adc
imul
mov
lods
xchg
out
add
push
push
adc
lea
push
outsl
push
adc
mov
pop
mov
test
dec
mov
ss
rcrl
dec
mov
outsb
mov
inc
shl
xchg
in
xchg
inc
sbb
ljmp
loopne
pop
push
jmp
lds
cmp
nop
push
ficompl
mov
ret
fcmovb
jnp
push
pop
test
into
mov
enter
test
mov
pushf
mov
mov
test
repnz
add
xor
jmp
mov
repnz
inc
loope
mov
lock
xchg
cmp
pop
sbb
bswap
outsl
mov
xchg
xchg
jns
cmp
or
movsl
out
out
fbstp
adc
mov
shlb
cmc
sbb
lret
dec
faddp
jg
xor
imul
mov
mov
mov
scas
adcl
xlat
inc
mov
adc
adc
and
push
xor
pop
xor
sahf
mov
ficomps
repnz
rcr
je
ret
mov
nop
jle
sub
adc
shl
loope
xchg
call
jg
mov
xor
xor
push
shl
scas
dec
in
pushf
jno
xchg
mov
js
or
int3
sbb
lahf
dec
dec
fdivr
dec
je
and
pop
sbbb
dec
xor
inc
sbb
cmpsb
test
mov
jl
hlt
mov
adc
mov
cmp
sub
repz
xorb
sub
jnp
sbb
out
lods
mov
out
push
xchg
sbb
fucomi
fdivl
call
jmp
xor
roll
shr
or
rol
fcmovnu
jp
orl
jg
jae
js
pop
push
es
push
jno
fdivrp
daa
rcll
vmaxss
jg
or
mov
lods
fadds
loop
jp
fwait
jecxz
test
mul
stos
push
push
and
jae
lret
mov
in
adc
je
inc
push
xchg
push
and
jbe
mov
pop
inc
sub
ficompl
std
sti
sub
add
push
das
jp
movsb
add
sub
mov
cs
shlb
scas
mov
das
mov
adc
sub
xchg
in
xorps
insl
divb
cs
adc
shl
xchg
sub
cwtl
lahf
mov
lcall
lea
adc
dec
inc
pop
push
mov
icebp
sub
cltd
ret
xchg
sub
xchg
sbb
push
mov
stc
aaa
inc
and
stos
mov
test
xor
iret
loopne
subb
and
xor
pop
and
mov
mov
aaa
inc
inc
sahf
cli
xchg
and
mov
in
dec
into
mov
jne
test
add
cmp
in
int3
imul
jb
push
ret
inc
lret
jo
mov
mov
jae
les
adcb
mov
sbb
add
fistl
daa
stos
adc
mov
jb
aaa
cli
xchg
pop
jo
pop
and
xorb
inc
test
and
cmp
jecxz
push
sahf
mov
dec
out
pop
xchg
imul
push
xor
pop
sbb
shl
clc
adc
imul
sub
or
notb
repz
sub
xchg
push
add
out
aam
es
jg
shll
xchg
data16
mov
rcrb
jmp
mov
repz
mov
adc
jno
mov
ds
inc
mov
rcrl
mov
jnp
outsl
adc
sbb
bound
in
lret
cli
add
inc
mov
xlat
pop
ss
insb
dec
push
daa
test
and
push
in
sub
xor
ljmp
stos
clc
pushf
add
iret
outsb
js
jns
push
adc
sub
inc
mov
jne
cmp
insb
cmp
stos
int3
mov
or
in
or
adc
insl
push
notl
push
add
and
cmpsb
ljmp
fs
xchg
popf
mov
inc
push
adc
pop
push
outsl
mov
push
clc
mov
loopne
mov
clc
inc
int
mov
les
inc
xor
daa
jg
sub
fwait
push
push
out
or
sbb
sti
inc
mov
fisttps
fs
push
sbb
sub
out
push
daa
rcl
popf
daa
sbb
fsubrs
xchg
je
push
pop
imul
daa
pop
adc
jno
sub
pop
sbb
sub
inc
mov
or
sub
xlat
push
les
mov
out
mov
rep
push
outsl
inc
mov
and
dec
mov
inc
cld
mov
das
push
testb
vpmaddwd
rolb
push
clc
add
xchg
cmp
sub
mov
mov
add
and
xchg
inc
pop
pushf
popl
repz
mov
test
cld
mov
mov
cmp
mov
add
into
int
inc
int
aas
add
adc
mov
dec
sub
pop
jns
mov
sub
jbe
idivb
jne
arpl
pusha
sahf
dec
out
js
cmp
jmp
cmp
jb
stos
es
jle
pop
clc
and
stos
jbe
inc
clc
std
rcll
jge
das
push
cmpb
push
jl
mov
sbb
dec
insb
lods
inc
add
sbb
cwtl
mov
ret
jmp
add
pusha
sub
jns
lods
jmp
mov
nop
and
aas
stos
jge
inc
imulb
ret
xchg
popf
push
inc
popf
outsb
ss
xchg
inc
lods
cld
fimuls
sarl
cmp
mov
mov
pop
sbb
aad
dec
mov
xor
cld
ret
cmpsb
xchg
in
jl
xor
or
fs
and
test
rolb
insb
fwait
in
xor
xchg
xorl
blcic
iret
in
xor
call
mov
sub
mov
enter
mov
mov
pop
lock
dec
push
inc
push
sbb
sahf
cmp
mov
and
fs
imul
mov
mov
sub
jmp
ror
lret
fcmovbe
fcmovb
mov
movsb
leave
inc
jg
jae
js
mov
mov
je
dec
jp
movsl
jne
les
xchg
clc
or
or
imul
or
and
mov
xchg
cld
daa
push
pop
jl
das
xorl
imul
and
in
and
cmp
aad
inc
lods
pop
iret
sbb
cltd
scas
pop
mov
in
jns
push
add
dec
mov
shlb
sahf
ljmp
pop
sub
sbb
xor
imul
and
sbb
ljmp
daa
cld
fnstsw
inc
cmpsl
inc
lret
fistl
scas
hlt
xchg
repnz
std
inc
les
pop
loop
les
into
sub
cltd
sub
or
cltd
push
call
sarb
cltd
rcrl
lods
cwtl
stos
pushf
cmp
sub
sbb
loop
push
loop
in
sarb
cmp
testl
adc
pop
jnp
adc
cmpsl
mov
sbb
leave
pop
test
cmp
in
outsl
mov
pusha
loop
jbe
iret
jbe
test
mov
adc
or
out
sub
fbld
repz
inc
push
inc
push
and
fprem1
fistps
dec
int3
cmp
in
idivl
mov
cld
mov
div
sbb
ret
pop
xor
or
rsqrtps
ret
mov
jnp
jo
dec
add
xor
iret
jl,pn
fsubs
popa
ja
enter
aad
pop
cmp
xor
sbb
aas
aad
je
cli
fwait
jo
sub
jbe
mov
aad
mov
xchg
int
pusha
loopne
pop
jns
iret
jns
jp
xchg
movb
inc
jo
push
dec
jmp
or
mov
inc
mov
mov
push
stc
movsl
loope
xchg
in
cs
js
jb
add
addr16
nop
add
std
jbe
pop
testl
pop
scas
fwait
xchg
ret
xchg
out
jmp
add
cmc
out
out
jge
cmp
inc
jge
xchg
cltd
inc
mov
cmp
mov
movsb
add
out
xor
and
lcall
inc
ds
movsl
cmpsl
mov
mov
mov
add
push
enter
hlt
mov
popa
xor
xor
jmp
push
and
and
fucomip
cltd
adc
out
and
mov
dec
sbb
shll
jo
stos
jno
aaa
and
cmp
sbb
dec
cmp
dec
aaa
test
jnp
daa
or
or
and
call
scas
sbb
sbb
xor
mov
cmp
cltd
push
std
mov
lds
xchg
lcall
out
push
xor
or
test
sbb
repnz
sub
mov
movsl
mov
cmp
inc
push
stos
or
add
pop
jecxz
into
shl
fdivrs
xchg
fwait
mov
xor
pushf
jmp
out
sti
mov
sub
flds
dec
xchg
stos
pop
sbb
sbb
sub
lods
pusha
stos
mov
movsl
rolb
roll
pushl
inc
xchg
add
stc
out
push
jmp
lcall
ss
inc
inc
fmuls
cli
mov
fimuls
lods
push
mov
lds
adc
loope
jl
popf
mov
cli
xchg
sub
push
aad
ja
inc
xorl
pop
pop
cmp
push
pop
or
jl
shl
in
js
pop
andb
stc
lds
jae
cwtl
ret
mov
nop
mov
and
push
xor
sahf
pop
adc
jge
jecxz
xor
bound
mov
pop
inc
jle
repnz
jb
fstpt
scas
bound
das
cmp
jbe
lock
sbb
and
fwait
xor
ds
shr
jnp
stos
mov
cli
inc
int3
roll
fcoml
jmp
push
ret
test
xor
stos
sub
divl
mov
stos
add
mov
ja
pop
mov
les
inc
ret
enter
ds
and
movsl
or
inc
pop
adc
sub
test
or
in
jbe
popf
adc
lret
push
fs
cmc
dec
das
dec
inc
pop
insl
sbb
and
aad
inc
cli
push
inc
stc
mov
and
loop
inc
mov
cmp
pushf
les
movnti
mov
or
stos
or
push
std
inc
mov
fucompp
or
ret
fcmovbe
aad
fs
inc
mov
jp
and
jae
js
movsl
div
stos
es
rorb
lock
insb
out
inc
cld
lods
mov
inc
sbb
mov
sbb
pop
xchg
mov
aad
in
jmp
and
pop
iret
iret
enter
mov
loop
mov
push
xchg
imul
cmpsl
xchg
test
fdivrs
std
mov
stos
mov
or
jb
dec
jp
jae
out
arpl
lock
mov
insl
lret
jl
andb
pop
pop
rorb
movsb
cwtl
adcb
sub
mov
and
test
movb
mov
addr16
ljmp
adc
dec
stos
popa
pusha
push
ret
and
inc
add
mov
adc
or
cmc
jns
cli
sahf
pop
xor
push
bound
adc
mov
sarb
adc
pop
js
pop
pop
add
test
jg
fsub
sbb
inc
fidivl
fidivs
xchg
gs
xchg
xchg
mov
fdiv
inc
rcrb
ss
shrl
fimull
and
popa
xchg
adc
shl
into
dec
push
out
push
cmpsb
sub
aaa
jae
nop
addr16
ret
addr16
call
pop
insl
outsl
sahf
lds
adc
lahf
cmp
jne
push
xchg
or
aad
jmp
or
inc
pop
stc
lcall
jge
lcall
mov
test
lea
leave
fcoms
adc
add
add
jmp
outsl
jns
es
jb
sbbb
js
int
dec
xlat
inc
orl
pop
nop
arpl
adc
mov
sbb
xor
aad
and
add
add
sbb
pop
or
mov
mov
scas
ja
pop
lock
lahf
mov
aam
loope
fadds
dec
push
xchg
xor
cli
sbb
mov
into
out
or
dec
popf
ret
dec
push
mov
inc
insl
or
push
cld
push
mov
out
or
data16
aad
das
pop
push
inc
inc
mov
push
imul
aam
int
insl
or
xor
mov
mov
push
add
jl
dec
push
sbb
and
pop
lock
in
lods
push
dec
push
sub
test
and
adc
filds
adc
xchg
push
into
movsb
popa
mov
inc
das
int
mov
hlt
mov
addr16
lcall
jbe
pop
scas
xor
imul
dec
sbb
cwtl
clc
xor
jb
xor
call
mov
xor
cs
outsb
xlat
je
dec
xchg
imul
xchg
add
mov
pusha
movsl
add
sbb
adc
jnp
jae
adc
jg
scas
xor
test
add
adc
stos
xchg
aas
jbe
rcll
movsb
imul
shrb
push
scas
mov
stc
lret
clc
hlt
and
xchg
mov
test
pop
mov
ja
imul
stc
popf
pop
sbb
addb
clc
xlat
mov
push
nop
mov
imul
jo
imul
inc
lds
mov
pop
lods
sbb
data16
add
cmpsl
mov
mov
adc
dec
jmp
mov
movb
sbb
sub
sbb
das
fld
xor
xor
ss
adc
jno
fdivrs
mov
fists
xchg
inc
and
mov
or
aad
sub
xor
mov
push
jbe
add
jp
pop
mov
xchg
stos
mov
aaa
adc
mov
xor
and
jnp
adc
pop
ljmp
je
xor
cmc
lcall
pop
in
add
ljmp
int
mov
sbb
push
out
and
lcall
mov
aad
sbb
dec
andb
stc
push
data16
mov
sub
mov
lods
push
sbb
push
dec
sbb
push
and
stos
sub
mov
fadd
add
movsb
pusha
pop
cmp
pop
rolb
fiaddl
add
or
sti
jl
dec
icebp
pop
sbb
mov
std
lods
lock
lcall
pop
mov
pop
sub
xchg
aas
mov
and
call
fs
popf
mov
push
add
add
mov
jmp
mov
mov
xor
xor
add
jmp
cmp
les
jmp
call
jg
jae
js
push
ret
and
push
xor
jp
test
jmp
nop
rcr
jb
lcall
test
sbb
lret
dec
jo
pop
mov
pusha
hlt
roll
inc
cmpsl
sub
imul
clc
mov
pop
jo
iret
push
out
sbb
das
out
nop
jne
mov
loop
jcxz
pop
mov
negl
mov
cwtl
mov
call
xchg
xchg
mov
xchg
lret
bswap
cmc
cwtl
cmpsb
mov
add
shlb
je
xchg
out
or
and
aad
dec
js
push
outsb
xor
mov
loope
jae
fldl2t
adc
mov
xchg
push
and
loop
fidivs
icebp
arpl
dec
cmp
pushf
push
mov
adc
test
and
repz
std
pop
jg
or
cmp
sub
and
incb
mov
pop
pop
or
dec
inc
cmpl
addr16
hlt
rep
into
lods
in
add
inc
jle
push
pop
or
ja
ja
and
cpuid
pmulhuw
inc
lock
sbb
out
adc
push
xor
add
pop
icebp
arpl
fisttpl
cmpsl
shr
xchg
jecxz
add
stos
fldt
xor
inc
sbb
shl
cmp
lret
jno
mov
mov
or
mov
push
jecxz
mov
mov
rcrl
and
cmp
lock
cmp
mov
and
sbb
in
mov
movsb
aas
pop
lcall
jge
cld
test
lfs
mov
stos
fimuls
inc
cmpsb
push
loop
ss
mov
ret
lahf
dec
leave
aas
sbb
mov
inc
test
cmovg
xchg
pusha
adc
sbbl
push
fldt
xchg
sub
mov
scas
xchg
sahf
cmp
minps
out
shrl
mov
xor
xor
cmp
data16
outsb
push
popa
push
cmpl
cmc
cmpl
mov
or
les
adc
adc
icebp
xchg
inc
popa
adc
dec
jnp
test
pop
or
rep
or
add
subb
repz
pop
addr16
out
insl
clc
push
mov
scas
stos
push
aam
mov
pop
pop
mov
daa
fwait
out
pop
out
jg
imul
and
std
push
pop
adc
outsl
sub
leave
jle
jbe
inc
sub
push
xchg
stc
pop
adc
cmp
enter
add
lcall
push
stos
add
and
fnsave
sarl
inc
xlat
jl
mov
jle
push
push
call
loopne,pt
cs
cld
lods
and
jb
adc
imul
ficompl
fadd
nop
xchg
push
ljmp
mov
jno
ljmp
insl
imul
xchg
stc
xchg
mov
and
and
dec
adc
push
push
and
add
insl
stc
pop
xor
popa
dec
sub
mov
mov
das
xchg
out
mov
loopne
aam
push
out
sbb
and
push
mov
xchg
out
loop
mov
lret
push
add
or
pusha
mov
idivl
neg
ficoms
lret
push
add
cmpb
jle
jl
sbb
out
ret
je
imul
aam
pop
push
lea
push
and
mov
push
loope
sub
scas
shll
dec
insl
push
cld
loope
xchg
sub
loopne
in
mov
subb
fwait
and
inc
outsb
movsl
inc
or
rorl
sbb
push
jmp
xor
repz
je
pop
lahf
mov
iret
arpl
loopne
push
and
filds
arpl
push
adc
arpl
adc
mov
call
cmp
sub
sbb
rcr
rcl
imul
test
out
cmpsl
pusha
mov
je
aam
ret
pushf
xchg
jae
xor
cltd
adc
std
cmp
ljmp
pushf
ret
cmpsl
aas
outsl
add
sti
pop
jmp
xchg
inc
dec
mov
adc
out
fstl
adc
push
lahf
bound
add
loopne
mov
in
mov
ret
sbb
in
arpl
sub
xchg
pop
pop
sub
mov
ficoms
mov
scas
mov
mov
add
jmp
xlat
int
ror
fstps
pop
cmc
repz
push
jg
jae
js
mov
mov
aam
pop
lret
lahf
mov
ds
fwait
pop
or
mov
xor
shr
divl
int
sbb
push
dec
pop
push
push
jge
pop
fdivr
ret
ja
push
mov
pop
fwait
loope
mov
loope
mov
sub
adcb
stos
notb
repnz
inc
sbb
jns
xchg
leave
dec
jle
inc
inc
jmp
inc
cmp
add
pushf
adc
repnz
pusha
xor
aas
insb
loopne
jne
push
sbb
mov
leave
xlat
adc
or
shr
lcall
cwtl
pop
inc
mov
int3
aad
dec
mov
inc
shlb
push
cmp
sub
mov
pop
mov
cwtl
mov
popf
cwtl
jae
rcr
or
popf
stc
adc
jo
or
hlt
cmpb
pop
or
aam
mov
out
cwtl
push
ds
scas
adc
pop
and
sub
jbe
adcb
test
jne
push
es
sbb
loopne
inc
dec
or
mov
shl
xor
cmp
sbb
push
cmp
and
jns
lret
mov
add
cli
out
sub
out
or
call
xor
adc
scas
rol
scas
push
xchg
add
shlb
mov
sub
in
mov
imul
orb
cmc
rorb
pop
sub
or
leave
or
ds
loopne
loop
ja,pn
addr16
popa
or
rcrl
dec
rolb
sbb
sbb
xor
push
add
cmp
out
xchg
hlt
xor
and
inc
testb
mov
pop
rorb
add
lret
dec
lock
or
fsubl
adc
xor
adc
pop
lret
mov
outsl
iret
xor
outsl
cmp
test
neg
pop
bound
nop
xchg
jbe
outsl
pushfw
gs
je
add
xor
xchg
xchg
push
pop
fistl
test
cli
mov
pop
sbb
and
push
fiaddl
not
jle
add
ret
test
nop
jl
and
jae
lret
xchg
xor
sub
cmp
xor
cmp
stos
ss
mov
rcl
xor
inc
push
push
sub
dec
and
push
mov
out
shll
or
cmp
add
sub
addr16
sbb
dec
popa
fidivl
inc
adc
adc
xchg
stos
mov
mov
outsb
push
je
pusha
in
add
lods
imul
cmpsb
stc
dec
shrb
daa
cmpb
dec
pop
sti
mov
popf
add
rclb
pop
xchg
iret
push
imul
push
push
mov
mov
rcll
test
lret
psubusw
fldt
jo
je
daa
cmp
shll
mov
jge
je
pop
pop
cwtl
xor
sub
scas
enter
test
loopne
xchg
test
scas
test
jmp
int3
jb
push
jb
mov
pop
add
sub
sub
shr
imul
mov
jne
jno
push
faddl
cwtl
mov
insb
mov
adc
push
out
xlat
ret
xorl
popa
inc
inc
dec
testl
fwait
in
mov
sarl
adc
pushf
out
lds
cmp
cld
in
fbld
inc
cmpsb
push
out
sub
and
lcall
adcb
xchg
fadds
lds
aad
lods
sbb
push
psubsw
movsb
adc
mov
mov
repz
pushf
dec
sti
testb
jo
lcall
loopne
movsl
dec
xchg
mov
je
in
mov
decb
popf
out
add
or
sub
shll
mov
ljmp
in
into
push
inc
bnd
adc
and
dec
pop
push
sbb
sbb
fildll
loope
sbb
jne
sbb
loop
sub
popf
mov
push
and
rorl
pop
mov
push
inc
dec
dec
inc
cmpsl
add
mov
filds
loope
mov
ret
sub
push
imul
imul
jnp
sbb
inc
sbb
push
jmp
movsb
pop
in
pop
xor
mov
faddl
jo
lods
loopne
pop
or
and
sub
xchg
gs
push
dec
out
int3
fs
pop
adcl
xchg
aas
dec
mov
add
lcall
mov
sub
cmp
jmp
rcl
ror
rcr
aam
pop
inc
daa
clc
adc
push
jg
jae
js
lods
shrl
mov
data16
jg
out
xchg
adc
pop
or
mov
cmp
jecxz
push
inc
jns
cmp
lret
xchg
iret
jo
test
mov
ss
orl
inc
pop
push
imul
jecxz
out
and
jge
test
iret
push
lock
or
les
mov
push
cmc
data16
inc
negl
fsubs
mov
and
cld
mov
insl
mov
test
and
nop
aam
pop
adc
or
sub
insb
jnp
mov
xor
mov
pop
lods
lock
cmp
mov
insl
sub
xorb
jg
in
dec
leave
jnp
push
in
imulb
aad
bnd
imul
inc
hlt
xchg
icebp
cltd
cld
mov
add
test
lods
lret
sbb
sbb
dec
hlt
xor
movsl
jle
flds
enter
lcall
popl
cmp
inc
sub
pop
cmp
xchg
lock
push
arpl
cmp
cmc
jne
mov
mov
sbb
rorb
pop
cmp
fwait
xchg
push
or
jo
test
lahf
or
sub
jecxz
mov
dec
mov
mov
push
xchg
xchg
cmp
fcomip
lret
jl
cwtl
jns
int
mov
fisubrs
sbb
sbb
fisttpl
or
push
rcl
mov
arpl
adc
cmp
mov
mov
sub
sbb
stc
inc
and
mov
stos
shl
jno
cmp
xchg
jle
adc
cs
clc
rcll
add
pop
es
ror
push
cmp
jge
insl
dec
popa
xchg
xor
ret
lock
mov
fs
mov
mov
fcomps
push
repz
mov
dec
push
sbbb
mov
leave
xlat
out
in
add
xchg
dec
test
aas
and
xchg
xor
out
std
imul
scas
mov
dec
pop
popl
jl
mov
aad
lret
test
dec
out
jp
mov
xor
cmpsb
inc
xor
movb
pop
fcom
fbld
add
ret
inc
lock
adc
ret
cmp
cs
lods
daa
jo
mov
incb
shl
in
shl
fs
fists
out
inc
mov
int3
sbb
dec
outsb
sbb
cli
mull
rcll
adc
inc
mov
pop
pusha
fwait
daa
popf
fldenv
pop
repnz
inc
cli
xchg
sti
mov
cltd
add
popf
daa
out
and
jge
mov
sub
ljmp
sti
xchg
loopne
pop
pop
rcr
ret
ret
mov
dec
data16
ret
inc
mov
and
or
push
push
xchg
lea
mov
popa
js
jge
ljmp
arpl
dec
mov
dec
sub
enter
enter
aas
add
mov
xor
sub
adc
mov
push
dec
push
ficompl
cmpsl
pusha
xor
sub
push
push
xor
and
dec
xchg
and
or
sub
repnz
lods
mov
imul
mov
movsb
cmp
inc
rorl
mov
fidivl
sbb
popa
rolb
int3
pushf
lahf
jo
mov
pop
push
cltd
jmp
out
es
adc
pop
lock
fldl
or
aaa
mov
jmp
add
adc
sbb
adc
mov
imul
sbb
cmp
cmpsl
or
into
clc
mov
add
test
loopne
sbb
cmp
push
mov
lcall
lea
inc
into
scas
add
inc
xchg
out
inc
in
mov
push
adc
stos
mov
jmp
dec
push
add
lods
xchg
shl
in
xlat
pop
int3
cmc
adc
repz
jbe
or
loopne
add
js
or
pop
outsb
mov
jg
clc
ficomps
mov
scas
sub
in
mov
mov
xchg
pop
or
test
into
lds
daa
pop
mov
aas
mov
xor
in
sub
fnstenv
std
movsb
jp
adcb
test
scas
add
das
sbb
or
push
roll
sbb
lds
lahf
push
in
xor
push
jno
stos
imul
dec
mov
add
add
and
add
cld
xor
xor
jmp
lret
ds
fcmovnb
pushl
mov
pop
jg
jae
js
jmp
popf
hlt
mov
iret
xlat
imulb
inc
push
inc
and
sbb
sbb
pop
jl
cmpb
and
movsb
in
frstor
cmp
jo
fadds
iret
rol
fucomp
sti
out
cmp
lret
ja
rcll
push
sbb
rolb
jne
cwtl
insb
outsb
jge
jecxz
div
mov
mov
jmp
add
daa
sbb
sahf
jno
popf
cmpsl
ljmp
mov
rcr
rolb
cmp
test
rcl
xor
dec
out
ret
sub
out
or
xor
sbb
aad
sbb
stos
addb
cmpsl
aaa
and
test
jb
cmpsb
xchg
dec
xlat
mov
dec
cmc
es
and
out
push
loopne
mov
inc
arpl
add
mov
fs
xchg
std
jno
mov
daa
and
scas
fs
out
xchg
sub
push
loope
dec
mov
push
iret
jge
mov
fldl2t
sti
mov
and
loopne
enter
rolb
iret
mov
jg
xor
ds
shrl
loopne
outsb
cli
ret
sub
icebp
in
xchg
sub
stc
das
add
and
pop
and
out
mov
jp,pn
ds
cs
or
lds
sbb
xchg
lock
and
popf
fcmove
xor
jnp
cmp
adc
mov
cli
push
xor
ljmp
cmp
pusha
dec
lock
fisubrl
ss
mov
adc
jp
leave
lret
popf
or
bound
outsl
ret
push
pop
jge
das
adc
pop
leave
mov
cli
das
dec
sub
and
dec
sbbl
pop
lock
divl
das
cmpsl
xor
lcall
mov
sarl
dec
int3
ds
movsl
nop
lcall
or
outsl
mov
scas
stos
push
in
sub
push
inc
lock
data16
jnp
sti
dec
mov
nop
loopew
and
cmp
xchg
cmp
es
fldt
mov
pop
lds
mov
sbb
dec
sub
jnp
repnz
pop
jo
test
out
pop
lock
sti
fisubrl
sub
mov
lds
and
movsl
clc
cmp
loopne
cmpsb
push
popa
sbb
call
cmpsb
mov
lea
rcr
std
cmp
fsubrl
pop
jno
lods
pushf
and
jge
jno
push
sub
sub
sbb
pop
lods
fnsave
cli
test
fadds
sbb
data16
call
adc
and
jbe
dec
fs
lret
stos
xchg
inc
push
add
or
push
iret
jns
mov
out
ds
push
jo
rcrb
stos
out
dec
push
or
fstpl
lahf
lds
dec
jl
mov
imul
jecxz
das
aam
jp
xor
leave
cmc
ja
or
mov
fisttpll
enter
loope,pn
jmp
xchg
sub
push
jnp
in
inc
sbb
mov
mov
push
out
mov
loop
mov
xchg
or
lcall
inc
push
std
cmpsl
inc
pop
aas
push
test
fisubrs
xor
xor
pop
scas
push
push
adc
addr16
adc
push
adcb
sbb
inc
dec
jo
shrb
mov
jmp
fmul
in
mov
orb
repz
jns
outsl
xchg
aas
push
xor
xor
push
sahf
leave
and
fsubrs
adc
cmp
xchg
faddl
lods
pusha
jns
mov
js
inc
pop
mov
add
inc
sbb
mov
mov
repz
xchg
adc
dec
mov
imul
sub
mov
fcoms
push
mov
inc
test
insl
and
popf
aas
push
jge
or
pop
push
push
inc
popf
xchg
and
pop
adcb
loope
andb
test
push
fwait
fs
push
jo
cmp
cs
dec
jo
xchg
aad
pop
pusha
dec
adc
mov
pop
inc
icebp
icebp
into
sub
xor
fadd
ljmp
xchg
pop
ficompl
jnp
xor
mov
inc
mov
mov
pushf
call
aam
cli
stos
jg
push
push
rcl
adc
fsubs
xor
or
ljmp
xlat
mov
mov
sub
jmp
cmp
xlat
enter
int3
sub
inc
xchg
adc
jae
js
sub
xchg
xchg
dec
adcl
pop
cmp
mov
or
inc
add
mov
loope
and
jl
pop
or
inc
xchg
jle
in
lea
dec
adc
inc
sub
call
sahf
jl
xchg
clc
loope
jno
dec
add
js
int3
clc
mov
mov
subb
or
repnz
jl
in
insb
or
dec
cmp
sti
stos
mov
test
icebp
mov
fndisi(8087
cmpsb
call
imul
shl
mov
pusha
mov
dec
int3
adc
xchg
push
sbb
lret
mov
jge
cmp
xor
inc
cmp
xchg
sub
pop
adc
jge
cmp
add
jg
cmp
lods
repz
or
jmp
push
mov
xchg
push
lods
adc
mov
inc
dec
imul
shll
inc
adc
mov
dec
fldcw
xchg
ficoml
dec
test
movsl
push
int3
js
xchg
mov
and
xchg
inc
aaa
sub
into
in
ja
inc
scas
pop
jae
cltd
cmp
fidivrs
insl
in
inc
ret
test
ja
xchg
xor
inc
aad
in
les
adc
fildll
inc
mov
adc
fs
imul
movsl
mov
jbe
insb
enter
mov
pop
cmpsl
fists
test
inc
dec
add
mov
cmp
push
lret
jnp
icebp
pop
jb
push
or
push
mov
imull
and
mov
add
aaa
adc
ljmp
inc
pop
cmp
inc
aad
aaa
mov
aad
or
das
push
pop
mov
xor
fisttps
call
jg
jns
jb
inc
jnp
rcrb
shll
pop
in
pushf
xchg
test
push
sbb
jge
mov
out
inc
jne
in
outsb
cld
shrd
testb
xchg
repnz
sbb
ror
cmp
lods
scas
xchg
xor
je
inc
cmp
cmp
fdiv
jl
sub
imul
leave
xchg
imul
scas
cmp
lods
push
call
cmp
xchg
insl
popf
lcall
mov
in
cli
jl
jno
div
cmpsb
pop
pop
leave
ficoml
pop
cmp
fisubl
in
inc
shlb
cmp
jbe
pop
shlb
andb
xchg
mov
push
xor
jae
push
push
pop
movl
andb
test
xchg
scas
fsubl
adc
cmpsb
jp
xchg
and
dec
mov
cmp
jae
xchg
mov
aaa
mov
cli
xor
xor
dec
sbb
out
cs
sbbl
mov
daa
xchg
xor
fcoml
mov
inc
and
fisubl
es
scas
cmp
mov
inc
fwait
mov
outsl
gs
fists
je
aaa
cmpsl
push
imul
mov
push
pop
mov
push
icebp
xor
fcmovnbe
out
testb
call
cmpsl
int
adc
mov
out
imul
dec
popa
push
js
data16
adc
jge
jae
stos
pop
xor
stos
sahf
sbb
xchg
mov
add
xchg
pop
mov
xlat
icebp
push
das
xlat
sub
outsl
mov
adc
and
cwtl
pushf
nop
push
shll
leave
mov
mov
mov
ja
dec
lods
sub
cld
pop
xchg
ds
ss
push
push
mov
cmpsl
rcll
sbb
pop
mov
dec
or
aad
enter
pop
xchg
fmull
mov
dec
js
call
jg
mov
testb
cmp
add
xchg
in
clc
addb
pop
scas
cmp
int3
and
enter
push
cmp
fcomps
push
shl
js
sbb
out
pop
arpl
and
call
jge
jecxz
push
iret
jbe
dec
stc
dec
pop
fistpl
push
arpl
loope
pop
pop
roll
orb
gs
inc
neg
cmp
mov
inc
and
mov
add
mov
mov
xor
pushf
pop
mov
cmp
dec
dec
mov
aam
lea
mov
jno
negb
xchg
pushf
leave
addb
addr16
pop
lock
mov
cs
mov
fst
jmp
pop
stos
sbb
orw
out
cli
and
jle
cmc
sbb
movsl
and
pop
add
cmp
ja
mov
jmp
mov
jmp
leave
mov
lds
nop
cmpsl
decb
addr16
jae
js
mov
loop
add
inc
cltd
dec
push
dec
and
fstp
int3
dec
and
fcompl
mov
hlt
orb
add
push
call
shrl
addr16
adc
in
lahf
imul
std
and
scas
pushf
ret
and
cld
out
sbb
jbe
and
push
fldenv
lea
shll
push
or
adc
push
xor
push
inc
rclb
cmovae
mov
jle
es
dec
sbbl
inc
sub
arpl
pop
sahf
push
xchg
pop
sahf
leave
in
outsl
pop
int3
add
dec
pop
int
shl
mov
add
jl
fidivs
movsb
fildll
adc
pop
sbb
add
addl
fsubl
in
pop
testb
and
hlt
mov
cmc
sub
and
das
push
fs
jle
jmp
scas
icebp
cmpsl
xchg
sub
sbb
jne
outsb
xor
sbb
out
dec
mov
mov
fadds
in
out
cmp
movsl
fldcw
loopne
jns
and
adc
or
loope
push
dec
fcmovb
imul
mov
enter
movsl
pop
loop
ret
fmull
bound
jle
mov
mov
outsl
jne
fistpl
xchg
sete
mov
sub
dec
cmpsl
pop
sahf
push
xchg
push
call
outsl
jmp
or
adc
mov
popa
or
cmpsb
xor
sbb
ficoml
out
push
push
jecxz
mov
movsl
mov
xchg
or
sbb
dec
xchg
insb
xor
xor
pop
dec
jp
leave
mov
push
adc
adc
sbb
mov
ret
adc
movsl
dec
pop
out
sbb
mov
mov
jg
nop
sti
js
aas
sub
push
jo
xor
insb
xchg
jns
or
loopne
mov
lock
es
pusha
cmc
mov
inc
xor
pushaw
adcl
inc
test
lock
leave
xchg
or
clc
fs
cltd
das
jmp
out
fcoml
faddl
inc
shrd
jne
std
xor
lahf
xor
inc
add
sbb
cmp
lds
bound
sar
fcompl
insl
fcomps
bound
stos
sbb
mov
inc
iret
cmp
dec
mov
bound
sbb
sub
ds
dec
cmp
leave
sahf
subl
pop
mov
lock
sub
mov
pop
decb
leave
mov
imul
pop
or
fimull
jp
lcall
ret
in
pushf
push
push
pop
and
adc
es
clc
popa
xchg
jno
sarb
sar
jge
sbb
insl
xor
lods
das
call
push
push
int
and
push
out
cld
cmp
mov
dec
icebp
xchg
aaa
repz
ret
iret
push
sbb
mov
adc
lahf
xor
jp
stos
aad
in
fistps
pusha
js
jo
pop
mov
fmull
jno
movsb
dec
cmp
movsl
fistl
mov
cli
xchg
xor
out
mov
test
fs
aam
jo
pop
sbbl
sub
sbb
inc
mov
bswap
je
sub
xor
aaa
mov
add
mov
arpl
mov
jo
pop
cmp
ja
cs
mov
jnp
mov
adc
cld
aam
mov
mov
popa
xor
js
or
leave
xchg
or
push
dec
popa
jbe
pop
fdivrs
data16
jg
pop
push
leave
add
jge
cmpsb
out
addr16
inc
outsb
ret
inc
pusha
mov
pop
mov
stos
push
jg
jp
fmul
mov
movsb
add
xchg
dec
fmull
xor
xchg
xor
or
pop
int3
icebp
pop
cld
stos
movsl
lea
repnz
in
out
mov
cmp
push
insb
int
scas
stc
std
gs
or
inc
int
cmpsb
sub
jg
in
cwtl
out
push
push
cmp
sbb
mov
lods
mov
push
inc
ja
xor
inc
pusha
rcl
sbb
test
test
inc
cmp
xor
insl
fsubrs
xlat
in
lahf
lret
into
jp
jno
int3
xchg
fnstenv
cmpsl
mov
arpl
sbb
dec
cmp
std
cli
or
or
mov
cld
xor
jmp
rcl
leave
aad
rcr
or
ds
int
push
js
jl
js
repz
inc
insb
enter
icebp
into
xadd
dec
pop
iret
dec
jmp
outsb
push
ss
cwtl
dec
mov
xchg
xor
cmp
or
test
lds
mov
out
sub
adc
adc
inc
mov
test
add
push
lods
mov
mov
test
shll
and
add
in
cli
in
inc
adc
scas
cmp
aam
xchg
jo
arpl
push
test
mov
repnz
cmp
cli
lods
lods
mov
rclb
pop
inc
bound
jge
hlt
jp
adc
pushf
xor
add
int
hlt
nop
dec
stc
or
test
movsb
loop
lea
les
or
mov
lcall
push
adc
sbb
jl
lods
shlb
jb
in
adc
shll
pop
filds
js
ret
xchg
xchg
enter
outsl
mov
mov
jg
lods
and
ret
dec
ror
jb
push
mov
cmp
mov
sbb
sub
lret
push
and
push
sub
ss
neg
dec
mov
pop
js
pop
cmp
push
push
in
pop
mov
out
sti
fisubrs
adc
xchg
and
xor
pop
and
jb
or
sub
arpl
repz
or
dec
stos
inc
jo
cmp
pop
das
pop
pop
mov
xlat
in
add
xor
jmp
jp
cs
push
adcl
fs
dec
and
icebp
pop
imul
and
dec
jecxz
pusha
mov
enter
xchg
hlt
popa
icebp
dec
fcompl
cmp
in
xor
cld
fs
jl
call
mov
cwtl
push
jge
xchg
xchg
inc
cmp
lods
outsb
js
pop
push
pop
xchg
xor
adc
pop
lret
pop
xchg
xor
xchg
and
fsubl
push
add
xchg
mov
xchg
lcall
xchg
jp
xor
lock
cmp
cmc
int
mov
hlt
mov
add
jo
mov
aaa
in
ret
push
cmpsl
sti
sbb
mov
sbb
lds
inc
dec
jne
add
cmc
addr16
divb
push
addr16
icebp
subl
dec
loop
and
aad
aam
andb
icebp
inc
mov
jb
pop
mov
incl
dec
cmp
sahf
lods
xchg
xor
and
adc
sti
arpl
pusha
in
pusha
lret
mov
cmc
dec
push
push
aaa
add
sbb
push
aas
scas
xchg
flds
sbb
test
push
testl
lcall
adc
ds
add
mov
mov
xchg
xchg
lea
xor
rcll
cmpsb
pop
test
pop
dec
jb
or
jnp
js
add
sub
aas
mov
jb
jns
and
pusha
sbb
pop
notl
push
ret
xchg
test
popa
in
test
mov
adc
add
push
inc
ds
xor
idiv
xchg
stc
xor
xor
pop
mov
pop
popf
loop
mov
rolb
xor
in
lea
and
xor
lds
in
or
pop
mov
or
mov
push
fidivl
cs
pop
sbb
cli
mov
add
stos
rclb
fwait
mov
shll
mov
jmp
cmpsl
sub
push
jae
jg
add
pop
inc
push
jl
add
xor
sbb
int
fstpt
push
cmp
xor
sbb
sahf
pop
push
inc
xchg
sti
iret
cmp
sbb
sbb
psubsb
jae
and
out
loop
sbb
pop
or
fcoms
push
xlat
in
call
cmpsb
dec
jle
imul
push
sbb
stos
mov
cmp
addr16
dec
inc
adcb
inc
sbb
pusha
adc
or
loop
out
sahf
fdivr
sti
pop
ss
jp
pop
or
mov
xor
jns
stos
scas
stos
nop
adc
xchg
lds
arpl
stc
repnz
ret
test
sub
loopne
dec
stos
sub
subb
addr16
sbb
shll
int
xchg
jecxz
mov
popf
mov
sbb
xor
xor
push
pop
dec
sbb
imul
divb
mov
mov
les
fstpt
xor
jmp
sarl
int3
int3
int3
rcl
aas
in
mov
sbb
mov
js
jl
js
jns
popa
inc
sub
movsl
mov
stc
jb
je
push
sub
dec
add
fimull
aad
sbb
mov
daa
lret
push
shrb
mull
repnz
cld
mov
fwait
data16
or
jo
sub
mov
jle
pop
jecxz
xchg
fsubl
push
dec
adc
ret
lock
pop
aas
hlt
filds
jg
nop
jns
sbb
and
mov
push
mov
popa
and
dec
lret
vunpcklps
arpl
mov
jno
lock
cmc
cltd
pop
push
dec
xchg
aaa
fildll
xor
push
imul
enter
js
push
mov
mull
shll
add
jecxz
adc
mov
sub
mov
clc
push
xchg
in
jmp
dec
mov
dec
inc
mov
adc
test
in
push
jg
and
add
jo
cmp
lret
and
fnsetpm(287
pop
sti
jmp
xor
xchg
add
add
mov
int3
dec
lret
hlt
adc
xchg
and
scas
dec
mov
in
ret
xor
mov
xor
rolb
jb
int
aaa
out
mov
repz
sbb
inc
outsl
pop
cltd
inc
xchg
ret
test
fisttps
mov
movsl
push
xchg
inc
mov
mov
in
das
jae
or
popf
stos
mov
movsb
mov
add
popf
clc
test
xchg
imul
jno
sbb
hlt
lahf
cli
std
jae
mov
jne
dec
sub
int
in
cld
push
push
push
lods
aam
xchg
fcmovbe
lea
jbe
hlt
repz
xor
sub
popf
dec
lods
imul
insl
fnsave
add
push
adc
xlat
test
dec
pop
cmp
je
aam
inc
jno
rcll
pop
andb
rcrb
fists
shr
or
cli
cltd
int
add
pop
sub
jp
nop
and
dec
pop
scas
sbb
push
lock
pop
cmp
data16
in
push
or
adc
mov
lods
mov
push
imul
call
push
les
shrl
xor
push
in
inc
push
inc
dec
jne
nop
mov
imul
xchg
pop
xchg
fsubr
add
aaa
ret
stos
das
or
je
xchg
repz
call
arpl
and
imul
pop
dec
lea
pop
hlt
dec
dec
fucomip
push
sub
ljmp
mov
mov
leave
sbb
push
jecxz
inc
sbb
clc
xchg
cwtl
pop
inc
lods
fwait
loop
stos
adc
in
test
fdivl
and
bound
sbb
lock
cmpsl
scas
sbb
hlt
lcall
fdivl
mov
xlat
dec
inc
adc
xor
inc
les
dec
cmp
lret
cmp
testl
nop
andb
jecxz
adc
lods
insl
mov
fabs
int3
adc
out
or
cs
xchg
push
pop
cwtl
repnz
lock
lock
mov
sahf
fldl
cmp
mov
cs
insl
xor
sbb
popf
inc
into
andb
clc
fldl
sti
lds
xchg
testb
sub
lds
jmp
minps
lods
inc
pop
fiaddl
outsb
or
adc
mov
pop
xchg
dec
and
sbb
sbb
or
sub
pop
xor
movsl
ror
xchg
jecxz
fldenv
jae
pushf
int3
stos
add
push
add
mov
sbb
add
lcall
mov
or
sub
div
sti
push
pop
cltd
lods
sub
in
sub
hlt
and
sti
push
jbe
sbb
les
inc
xchg
sbb
lret
outsl
mov
xchg
push
mov
mov
and
dec
pop
pop
test
cmp
pop
or
repz
sub
jmp
aas
dec
adc
or
mov
mov
jae
mov
xchg
mov
and
or
test
and
jo
cmc
xchg
ljmp
mov
ss
test
sarb
pop
movsl
push
stos
ds
out
ja
hlt
loop
lods
sahf
jecxz
cs
or
push
xchg
mov
dec
mov
sbb
mov
cmpsb
enter
dec
or
jl
cmp
adc
xchg
in
popa
push
mov
stc
jmp
les
xlat
lret
rorl
xchg
dec
shrl
jno
js
jl
js
in
push
fcmovb
sbb
daa
into
add
test
rol
dec
aaa
push
pop
xchg
and
ja
mov
adc
sbb
ja
loop
lret
jecxz
push
xchg
and
ljmp
pop
int3
fnstsw
xchg
cmp
xchg
call
xor
mov
fidivrl
scas
sti
loopne
mov
cmp
pop
jp,pt
shll
orl
shl
icebp
loop
xor
dec
mov
jb
out
into
cmpl
mov
push
cmpsl
fs
pop
inc
out
scas
bound
xchg
pop
enter
ret
pop
mov
xor
add
sbb
adcl
adc
push
shlb
test
into
mov
sbbb
pop
xor
leave
jmp
cmp
xchg
pusha
and
das
enter
andb
inc
sbb
mov
lea
sbb
lods
aad
into
mov
jbe
int
cmp
pop
adc
dec
mov
and
stc
ljmp
mov
out
clc
xchg
aam
cmp
ja
pop
rolb
popf
pop
ds
insl
dec
movsb
mov
pop
lret
xor
insl
xchg
lock
test
aam
pop
mov
or
in
push
repnz
ja
mov
cltd
test
jp
out
popa
or
dec
popa
adc
sbb
inc
data16
push
leave
push
shrl
loopne
inc
add
das
fwait
arpl
jae
dec
shll
mov
and
adc
push
rorl
imul
ret
push
pop
ss
mov
sub
dec
clc
sti
push
gs
fimuls
push
and
lcall
jae
in
sbb
sbb
mov
xor
pop
sbb
lods
dec
sarl
mov
or
add
sub
nop
jg
dec
mov
in
push
dec
pushf
scas
sub
push
popf
jg
aas
aaa
mov
xor
jne
fmuls
or
adc
adc
add
jecxz
mov
pop
xor
xor
out
sbb
mov
lds
insl
mov
cmpsl
es
cmp
cli
pop
fcomps
movsl
bound
stos
arpl
mov
popw
bound
fidivl
movsb
ret
sbb
test
cmp
xchg
out
cmc
mov
and
in
fldcw
xchg
push
repnz
jge
push
insb
or
aam
sbb
popa
adc
push
sbb
loope
xlat
lret
cwtl
mov
sbb
add
cld
pop
mov
inc
or
sbb
inc
mov
dec
jecxz
sub
pop
repnz
outsb
xor
inc
push
fidivrl
adc
inc
das
bound
push
xorl
int3
loopne
gs
xchg
pushf
das
pop
out
shl
dec
aam
xor
fsts
mov
int
sti
jle
inc
sub
mov
arpl
rorb
sub
lret
sti
dec
and
push
pop
jle
dec
or
in
enter
mov
xchg
push
scas
xchg
jmp
repnz
outsb
pop
loope
ret
fadd
push
sub
jo
mov
jnp
xorb
ds
popa
lods
cmp
jg
jmp
into
xor
mov
jns
lods
cmp
sub
aas
cmp
repz
or
mov
stos
test
sub
add
adc
daa
addr16
negl
movsb
out
sbb
cmp
in
or
sbb
jle
out
mov
or
mov
pop
cwtl
pop
mov
lret
fbstp
mov
les
xchg
mov
cmpsl
push
jae
xchg
jno
shlb
shl
add
xchg
fwait
add
mov
lea
jmp
xor
and
xchg
leave
leave
cwtl
mov
jne
and
mov
lret
scas
xor
sti
loop
mov
scas
popf
testl
orl
stos
rolb
sub
pop
mov
jbe
mov
jb
in
pop
lds
xchg
sti
cs
leave
add
mov
movsb
push
loop
adc
mov
pop
pusha
cld
fistpl
jl
call
lds
roll
cwtl
inc
sar
and
push
fsubrs
mov
sbb
pop
lahf
gs
std
mov
arpl
pop
loope
xor
ds
or
xor
ss
ret
imul
adc
add
add
imul
mov
mov
sub
cmp
ja
jmp
ror
sarl
vpsubusw
mov
cmp
jg
sarb
out
imul
icebp
xchg
and
pop
mov
inc
cmpsb
out
pop
push
push
loopne
inc
and
xchg
inc
shll
loopne
jno
jmp
cs
mov
push
movsl
inc
gs
aad
inc
mov
subb
jp
adc
notl
dec
insb
mov
out
hlt
mov
les
repnz
pop
ret
inc
fwait
testb
insb
add
dec
jbe
aad
shrl
outsl
xor
loop
pop
loopne
fidivs
andl
cmp
sub
mov
les
jp
ds
mov
mov
fcomip
inc
inc
lret
add
fwait
push
fdivrs
xor
movsl
leave
lock
cmp
hlt
jo
loope
mov
and
pop
xchg
push
loope
stc
dec
test
arpl
mov
jecxz
adc
repnz
sti
jecxz
arpl
bnd
fistl
jl
pop
call
arpl
adc
repnz
rclb
ds
ljmp
dec
sub
jp
in
push
jecxz
leave
and
xchg
mov
ljmp
cmp
dec
inc
xor
dec
mov
jno
test
enter
add
out
cli
sbb
test
mov
add
test
jmp
or
mov
icebp
inc
and
std
mov
sbb
insb
cmpsl
fs
push
adc
dec
and
repnz
mov
jg
mov
push
pusha
or
sub
dec
push
rcll
lods
mov
and
scas
rorl
mov
loop
scas
outsb
push
cmp
xchg
sbb
ret
jp
jecxz
std
add
ret
cmp
jnp
out
popa
pop
jp
xlat
inc
test
jge
mov
es
jne
inc
adc
fsubrp
push
test
xor
jnp
movsb
aas
dec
stc
cmpsl
inc
sbb
arpl
stos
xor
cmp
mov
enter
enter
imul
or
jo
hlt
cmpsl
or
mov
inc
int
inc
shrl
and
cld
sahf
and
lods
into
jl
loope
shrb
ss
testb
test
outsl
dec
pop
pop
xchg
movsb
sbb
in
lret
or
out
fistps
pop
cmp
push
into
rcrl
mov
pop
in
mov
clc
ret
push
cmp
mov
cmc
xor
fs
loope
push
es
iret
and
adcb
pop
jo
rclb
push
push
mov
in
cwtl
mov
fadds
hlt
ret
or
pop
xchg
cmp
pop
xorb
aaa
pop
movsb
mov
imul
cmp
rcll
xchg
movq
out
cmc
jne
int3
loopne
cmc
push
dec
add
fiaddl
int
push
addb
cmpsb
xchg
dec
jbe
lcall
add
cwtl
mov
mov
std
pusha
xor
aas
call
cmp
and
iret
dec
in
push
jmp
lea
jno
xor
sub
dec
imul
or
or
inc
push
outsl
rcr
ja
push
into
add
sub
shll
mov
cmp
xor
aaa
jecxz
mov
inc
dec
outsl
je
in
push
das
xchg
es
addr16
dec
nop
mov
mov
lcall
adc
pop
adcl
sub
out
es
addb
jp
xor
repnz
cmpsl
jecxz
fs
aad
inc
xchg
lcall
shl
xor
outsl
nop
cmp
addr16
sub
push
cltd
lock
mov
mov
jle
push
push
popf
subb
sub
rol
stc
fiaddl
in
clc
sbb
je
sbb
lods
or
or
pushf
cmpsb
inc
aad
ret
adc
arpl
or
mov
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
xor
adcl
add
mov
mov
movl
movl
mov
push
movl
movl
mov
movl
cmp
movl
je
dec
mov
adcl
xor
addl
xor
subl
lea
subl
xor
movl
cmp
jne
movl
jmp
mov
mov
xor
add
mov
and
mov
mov
adcl
xor
add
sbbl
mov
mov
or
mov
orl
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
sbb
push
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
push
pushl
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
sub
lea
push
pushl
not
push
lea
inc
inc
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
pop
subl
xor
adcl
call
cmpl
jne
xor
movl
inc
jmp
sub
movl
adc
movl
lea
xor
mov
lea
mov
subl
mov
mov
sub
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
cmp
movzbl
mov
mov
je
sbb
mov
xor
xorl
add
orl
imul
mov
movl
jmp
xor
or
add
add
mov
mov
incl
xor
add
inc
mov
mov
subl
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movzwl
mov
mov
mov
mov
movl
movl
cmp
jne
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
mov
and
movl
mov
mov
sub
mov
movzbl
add
mov
sub
lea
and
mov
xorl
mov
adc
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
or
sub
or
mov
mov
sbbl
xor
sub
mov
xor
andl
xor
add
adcl
add
orl
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movzwl
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
decl
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
movl
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzbl
xor
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzbl
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbbl
mov
not
mov
sbbl
mov
andl
mov
mov
subl
mov
movzwl
xorl
add
mov
mov
mov
andl
xor
addl
add
cmp
movl
jne
mov
adc
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
or
xor
xor
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
xor
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
or
mov
adcl
add
movl
mov
and
mov
push
push
sbbl
test
je
adcl
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
imul
mov
subl
add
sub
mov
xorl
mov
xchg
sub
sub
xor
add
mov
mov
mov
xorl
mov
mov
subl
xor
xor
addl
add
mov
mov
mov
je
mov
xor
add
cmp
movl
jne
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
je
pushl
pushl
addl
call
movzwl
sbb
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
mov
notl
movl
push
movl
mov
mov
movl
push
mov
movzwl
mov
cmp
je
mov
or
mov
mov
add
mov
andl
xor
adcl
add
cmp
movl
je
neg
mov
xor
xor
or
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
neg
pushl
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
push
sbbl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
andl
mov
mov
orl
xor
andl
movl
movl
xorl
add
movl
jmp
cmp
jne
mov
mov
movl
mov
movl
mov
notl
mov
mov
movl
mov
movl
jmp
movl
cmp
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
mov
sub
orl
push
xor
or
add
mov
mov
movl
add
andl
push
orl
call
incl
movl
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
xor
push
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
orl
imul
mov
mov
cmp
movl
jne
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
mov
movzbl
or
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
movl
sub
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
pushl
pop
inc
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
mov
orl
xor
xor
mov
add
movzwl
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
movb
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
movl
adc
mov
mov
orl
push
sbbl
xor
mov
add
movl
jmp
mov
movl
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
mov
mov
add
xor
movl
cmp
jne
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
js
add
nop
pop
add
movsb
pop
add
mov
add
lret
add
pop
add
add
add
or
add
pop
add
and
add
xor
add
pop
add
dec
pop
add
pop
pop
add
outsb
pop
add
sbbb
mov
add
pop
add
mov
add
lret
add
pop
add
call
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repnz
add
pop
add
push
pop
add
sbb
add
cs
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
xchg
xchg
pop
add
scas
pop
add
ret
add
pop
add
loop
add
negb
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
ret
add
pop
add
out
pop
add
cli
pop
add
or
add
sbb
add
pop
add
ds
add
dec
pop
add
pop
pop
add
push
add
test
add
pop
add
mov
pop
add
loop
add
lock
add
or
add
pop
add
cs
add
cmp
add
add
pop
pop
add
push
add
sbbb
xchg
pop
add
test
add
mov
add
les
add
pop
add
loopne
add
repnz
add
push
pusha
add
push
pusha
add
sub
add
add
inc
pusha
add
push
pusha
add
jo
add
test
add
pusha
add
mov
pusha
add
fisubs
add
pusha
add
add
add
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
ret
add
popa
add
in
add
popa
add
sbb
add
add
cmp
add
add
pusha
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
add
add
test
add
mov
add
ret
add
add
aam
add
out
add
hlt
add
add
or
add
add
and
add
add
cmp
add
inc
add
push
add
pop
add
data16
jo
add
jl
add
test
add
add
cmpsb
add
scas
add
mov
add
int3
add
aam
add
call
add
cld
add
push
data16
push
data16
push
data16
and
add
data16
xor
add
inc
data16
dec
data16
push
data16
pop
data16
outsb
data16
js
add
andb
add
add
lcall
add
data16
aam
add
loopne
add
lock
add
add
sbb
add
add
xor
add
inc
add
push
add
data16
jb
add
jl
add
xchg
add
add
mov
add
add
ljmp
add
push
add
and
add
add
cmp
add
add
add
insb
push
add
mov
add
push
add
les
add
push
add
out
push
add
push
imul
add
imul
add
add
add
add
add
add
add
add
xchg
cmpsb
add
xchg
xchg
add
add
add
dec
insb
pop
push
imul
arpl
ja
jp
gs
dec
je
ja
popa
push
jno
jae
dec
dec
jae
dec
push
push
push
push
fs
insl
push
inc
dec
push
insl
inc
push
dec
data16
jne
imul
jno
arpl
dec
dec
push
imul
push
imul
imul
dec
js
pop
popa
push
jbe
dec
jns
insl
pop
inc
dec
outsb
inc
add
add
and
add
add
push
add
add
add
add
add
add
add
mov
push
add
rclb
dec
add
rcll
add
addr16
insb
bound
popa
push
jns
je,pn
jo
aas
inc
jo
dec
popa
insl
gs
js
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
inc
push
inc
dec
dec
cmp
add
add
add
cld
pop
add
add
add
add
add
add
add
add
add
inc
push
add
lcall
add
pop
add
mov
add
pop
add
dec
imul
add
add
nop
pop
add
movsb
pop
add
mov
add
lret
add
pop
add
add
add
or
add
pop
add
and
add
xor
add
pop
add
dec
pop
add
pop
pop
add
outsb
pop
add
sbbb
mov
add
pop
add
mov
add
lret
add
pop
add
call
pop
add
add
add
pop
add
push
pop
add
sub
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
sbbb
xchg
pop
add
movsb
pop
add
mov
pop
add
aam
add
out
add
repnz
add
pop
add
push
pop
add
sbb
add
cs
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
xchg
xchg
pop
add
scas
pop
add
ret
add
pop
add
loop
add
negb
or
add
add
cmp
add
dec
pop
add
pop
pop
add
outsb
pop
add
test
add
pop
add
mov
add
ret
add
pop
add
out
pop
add
cli
pop
add
or
add
sbb
add
pop
add
ds
add
dec
pop
add
pop
pop
add
push
add
test
add
pop
add
mov
pop
add
loop
add
lock
add
or
add
pop
add
cs
add
cmp
add
add
pop
pop
add
push
add
sbbb
xchg
pop
add
test
add
mov
add
les
add
pop
add
loopne
add
repnz
add
push
pusha
add
push
pusha
add
sub
add
add
inc
pusha
add
push
pusha
add
jo
add
test
add
pusha
add
mov
pusha
add
fisubs
add
pusha
add
add
add
or
add
sbb
add
add
inc
popa
add
push
popa
add
pusha
popa
add
js
add
nop
popa
add
mov
popa
add
ret
add
popa
add
in
add
popa
add
sbb
add
add
cmp
add
add
pusha
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
push
arpl
add
add
add
mov
add
les
add
arpl
add
arpl
add
arpl
add
add
sbb
sub
cmp
add
dec
add
push
add
test
add
add
test
add
mov
add
ret
add
add
aam
add
out
add
hlt
add
add
or
add
add
and
add
add
cmp
add
inc
add
push
add
pop
add
data16
jo
add
jl
add
test
add
add
cmpsb
add
scas
add
mov
add
int3
add
aam
add
call
add
cld
add
push
data16
push
data16
push
data16
and
add
data16
xor
add
inc
data16
dec
data16
push
data16
pop
data16
outsb
data16
js
add
andb
add
add
lcall
add
data16
aam
add
loopne
add
lock
add
add
sbb
add
add
xor
add
inc
add
push
add
data16
jb
add
jl
add
xchg
add
add
mov
add
add
ljmp
add
push
add
and
add
add
cmp
add
add
add
insb
push
add
mov
add
push
add
les
add
push
add
out
push
add
push
imul
add
imul
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
popa
addr16
imul
outsl
jbe
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
add
popa
addr16
imul
dec
arpl
add
popa
je
push
je
je
jae
imul
pop
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
push
imul
push
arpl
push
add
push
add
je
popa
jb
outsb
je
sgdtl
je
insb
addr16
je
insl
add
scas
add
fs
arpl
inc
add
push
push
jb
outsl
jb
add
imul
popa
jae
push
add
xchg
add
je
outsl
jns
popa
jb
je
add
add
outsb
imul
push
arpl
add
push
imul
movsb
add
pop
outsl
outsl
insl
gs
aaa
add
popa
jb
jo
gs
jne
inc
add
inc
add
je
outsl
arpl
add
cwtl
add
inc
imul
jae
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
jbe
push
imul
mov
push
imul
ja
add
ja
arpl
add
xchg
add
je
outsl
jns
outsb
jne
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jne
insb
push
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
roll
jbe
jo
imul
inc
add
je
popa
jb
outsb
je
sti
add
dec
outsb
push
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
hlt
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
imul
je
gs
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
gs
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
gs
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
outsl
outsb
imul
push
jb
je
cmp
inc
insb
addr16
je
insl
dec
outsb
je
addl
outsb
jae
jb
dec
outsb
jne
add
inc
jb
popa
je
push
imul
push
add
add
jae
popa
addr16
outsl
js
js
add
add
outsb
fs
gs
popa
addr16
add
jl
push
push
outsb
gs
outsl
jo
jo
add
inc
outsl
jo
push
arpl
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
pop
add
je
jns
je
insl
dec
outsb
jne
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
push
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
push
imul
popa
jae
inc
js
add
outsb
add
je
imul
outsb
addr16
add
xchg
inc
gs
insb
addr16
jb
arpl
cmp
inc
push
insb
addr16
jne
je
outsb
add
stos
add
fs
imul
add
jo
imul
arpl
add
fs
arpl
insb
gs
je
jb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
gs
imul
js
push
add
xor
push
gs
popa
jb
je
outsl
jae
icebp
add
jae
dec
gs
popa
addr16
add
mov
fs
je
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
mov
inc
jb
ja
arpl
inc
js
add
push
gs
push
add
imul
imul
add
jae
jb
outsb
je
push
add
push
add
je
jb
jo
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
jo
popa
je
push
arpl
add
fs
popa
jb
je
out
add
imul
jae
addr16
add
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
inc
gs
insb
addr16
jb
arpl
add
push
imul
popa
jae
inc
add
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
add
imul
jae
addr16
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
and
dec
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
jb
inc
gs
imul
arpl
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
imul
add
je
outsl
jns
jne
jae
jb
bound
inc
gs
outsl
jo
imul
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
je
imul
add
gs
je
inc
imul
jb
insl
inc
add
call
outsb
dec
arpl
add
jecxz
inc
imul
outsl
ja
js
add
add
jae
popa
addr16
outsl
js
add
insb
imul
jb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
outsl
arpl
push
arpl
add
jbe
insb
imul
je
add
insb
push
imul
inc
gs
outsb
jne
je
je
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
ja
outsb
imul
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
insl
push
outsl
inc
push
add
add
jne
inc
push
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
outsb
imul
push
outsl
imul
inc
push
xor
cs
insb
add
mov
gs
jbe
outsb
je
add
add
gs
je
dec
popa
imul
sbb
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
pusha
add
outsb
fs
imul
gs
add
jecxz
inc
jb
popa
je
push
imul
inc
gs
imul
imul
jns
add
fiaddl
dec
jae
popa
insb
imul
addr16
jb
jne
add
outsl
add
outsb
fs
gs
jne
arpl
add
add
inc
popa
fs
outsl
fs
je
add
mov
inc
jb
inc
imul
dec
push
dec
add
push
gs
imul
jne
push
imul
add
je
push
dec
outsb
outsw
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
push
insb
gs
js
mov
push
gs
outsl
jbe
inc
imul
jns
add
dec
add
je
jns
je
insl
inc
imul
jns
add
inc
imul
je
imul
push
gs
push
inc
outsl
outsb
je
js
add
out
add
je
imul
mov
inc
outsl
insl
jo
jb
inc
imul
ja
inc
insb
jne
push
inc
jne
data16
add
int3
add
jae
jb
jo
outsb
push
add
jo
outsb
insb
outsl
arpl
add
gs
jae
dec
jne
gs
add
add
fs
imul
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
gs
inc
imul
jb
popa
je
dec
jne
gs
add
add
je
push
dec
outsl
arpl
add
inc
gs
imul
popa
je
add
into
add
jae
jb
outsb
inc
add
adc
dec
outsl
arpl
push
imul
imul
jne
arpl
js
add
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
xchg
add
je
outsl
insl
insl
dec
outsl
fs
push
je
je
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
js
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
sbb
gs
imul
gs
add
inc
gs
imul
popa
je
add
xchg
add
je
outsl
insl
insl
inc
outsl
outsb
imul
dec
jae
popa
fs
jb
je
push
je
add
imul
jne
arpl
add
add
je
outsl
insl
insl
push
je
je
add
imul
push
push
jb
outsl
jb
je
add
add
gs
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
mov
inc
gs
je
insl
dec
popa
insl
gs
add
rolb
je
arpl
push
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
jae
popa
arpl
add
jae
add
jb
outsb
je
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xor
arpl
je
add
cli
add
jb
outsl
imul
out
jae
jb
outsl
insb
insb
add
pop
pop
arpl
insl
outsl
fs
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
jb
je
add
sahf
add
jae
bound
gs
add
jge
data16
add
lds
jo
imul
add
insb
outsl
ja
jb
stos
add
ja
imul
data16
je
add
pop
pop
arpl
inc
imul
jae
jb
outsb
je
add
add
outsl
insb
outsl
ja
jb
and
pop
gs
je
add
jns
je
insl
add
call
js
je
add
je
insb
add
iret
add
outsb
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
and
arpl
jae
outsb
add
add
jb
outsl
jne
add
ja
jae
bound
add
arpl
imul
add
gs
insb
add
outsb
jne
add
add
jb
push
add
jb
outsl
insb
add
movsb
add
ja
imul
add
jb
jb
outsl
jb
add
outsl
ja
add
push
add
imul
pop
pop
addr16
popa
imul
and
arpl
jo
add
xchg
add
popa
insb
jo
popa
add
add
jae
jb
outsb
je
add
dec
push
push
inc
push
push
cs
insb
add
xchg
inc
jb
popa
je
inc
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
imul
add
arpl
push
imul
inc
gs
jne
jb
outsb
je
bound
arpl
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
push
arpl
outsb
add
insb
je
add
push
gs
dec
gs
imul
inc
push
je
dec
push
add
popf
add
gs
je
inc
outsl
outsb
je
outsb
imul
aad
push
gs
imul
add
inc
outsl
arpl
add
add
insb
insb
push
outsb
add
add
je
imul
addr16
js
add
add
jae
outsl
jb
inc
inc
add
popa
je
dec
popa
je
push
push
push
gs
bound
je
jb
arpl
add
inc
gs
popa
jo
outsl
fs
testb
gs
je
gs
push
outsl
fs
inc
gs
outsb
inc
outsl
js
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
movl
inc
inc
add
sahf
add
gs
je
inc
outsl
outsb
je
add
push
popa
addr16
add
je
dec
inc
imul
fs
outsl
outsb
je
gs
jne
arpl
add
xchg
add
outsl
inc
push
add
mov
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jns
jne
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
dec
gs
imul
push
arpl
jae
bound
cli
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
dec
inc
imul
popa
jb
push
popa
add
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
rolb
outsb
fs
popa
je
add
popa
je
inc
imul
imul
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
je
outsb
insb
add
push
imul
inc
gs
bound
arpl
add
dec
xor
cs
insb
add
pop
jp
jp
push
and
add
insl
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
push
inc
add
inc
add
inc
add
insl
inc
add
insl
inc
add
inc
add
inc
add
insl
inc
add
test
pushf
clc
bound
add
inc
add
inc
add
inc
add
inc
add
imul
stos
imul
insl
inc
add
test
outsb
imul
sbb
orl
call
inc
add
addr16
mov
jne
mov
incb
mov
imul
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
imul
push
dec
insb
popa
cmp
push
pop
lds
add
pop
imul
xchg
xor
inc
add
add
add
add
push
add
insb
add
inc
add
dec
add
add
inc
add
dec
add
add
add
inc
add
push
add
add
insb
add
imul
add
add
imul
cli
jne
and
inc
add
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
inc
add
mov
int3
push
inc
add
dec
jae
imul
imul
in
adc
addr16
push
pop
jb
inc
inc
dec
imul
dec
inc
dec
imul
add
push
dec
inc
outsb
jno
inc
dec
jno
imul
je
jo
dec
insb
popa
inc
inc
ja
inc
add
push
push
dec
popa
pop
addr16
popa
outsb
pop
insb
inc
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
push
push
adc
hlt
sub
add
adc
adcb
add
push
adc
repnz
add
or
add
pusha
adc
fldenv
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
adc
sbb
adc
js
adc
jns
adc
les
ljmp
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jg
add
adc
lds
add
adc
xchg
adc
pop
adc
xlat
push
adc
jno
inc
add
inc
add
inc
add
inc
add
mov
inc
add
ja
add
sbb
add
add
adc
scas
xor
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
adc
fs
adc
lods
inc
adc
pop
push
adc
xchg
push
adc
mov
adc
repz
adc
enter
icebp
mov
inc
add
mov
inc
add
movsb
inc
add
movsb
inc
add
xor
pop
push
cmp
push
add
inc
cmp
inc
xor
add
push
xor
dec
push
push
xor
push
inc
xor
pop
xor
add
dec
pop
push
xor
pop
xor
push
dec
aaa
cmp
dec
push
pop
cmp
dec
add
xor
pop
inc
xor
aaa
cmp
dec
add
inc
pop
pop
inc
xor
inc
add
xor
xor
dec
inc
aaa
aaa
add
aaa
pop
push
pop
xor
pop
inc
dec
dec
inc
add
dec
aaa
pop
inc
dec
inc
pop
xor
pop
inc
xor
dec
xor
pop
xor
cmp
dec
dec
cmp
xor
cmp
pop
xor
push
pop
xor
cmp
cmp
push
inc
pop
push
dec
ss
dec
inc
add
xor
push
inc
inc
pop
push
add
pop
xor
pop
push
add
xor
pop
push
dec
pop
pop
inc
dec
inc
add
aaa
pop
push
push
dec
aaa
pop
xor
push
xor
xor
inc
inc
push
dec
pop
push
dec
inc
add
push
pop
dec
dec
aaa
pop
dec
add
pop
pop
dec
inc
pop
push
add
ss
aaa
inc
xor
xor
pop
dec
push
xor
add
pop
pop
push
inc
dec
aaa
inc
pop
push
push
add
dec
add
add
xor
push
add
add
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
add
add
dec
add
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
dec
add
add
dec
add
add
add
add
push
add
add
inc
add
inc
add
add
xor
add
add
add
add
add
pop
add
add
xor
add
push
add
add
add
add
cmp
pop
add
add
xor
push
add
add
add
push
add
xor
pop
add
add
add
dec
add
push
add
add
add
push
add
add
xor
dec
add
inc
add
dec
add
xor
inc
add
add
add
xor
dec
add
aaa
add
inc
add
dec
add
xor
inc
add
add
dec
add
inc
add
inc
add
push
add
add
add
inc
push
int
test
lds
mov
gs
adc
add
push
cmp
outsl
inc
outsb
gs
fs
gs
outsb
jne
dec
push
imul
pop
jo
dec
jno
inc
js
jno
push
bound
