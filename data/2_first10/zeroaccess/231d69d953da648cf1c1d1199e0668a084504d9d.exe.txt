push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
rcrl
jnp
jnp
sahf
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
ljmp
fucomp
push
dec
pop
insl
dec
addl
int3
and
shlb
xor
ret
testb
and
testb
scas
ret
pop
adc
adcb
loope
scas
dec
or
or
cltd
dec
stos
out
add
add
push
jl
imul
or
xor
sbb
sub
inc
leave
lods
js
pop
sub
cli
cli
mov
loope
xchg
mov
pop
xchg
xor
shlb
lea
inc
popa
add
jl
or
ret
dec
in
stc
pop
lahf
out
push
mov
jmp
inc
movsb
cli
loop
das
pushf
adc
adc
leave
cwtl
mov
gs
data16
ror
adc
ret
pop
inc
icebp
adc
out
aam
lds
test
les
loop
push
test
iret
test
cmpsb
cmp
imulb
inc
sahf
in
lds
jnp
fdivl
rolb
shr
adc
or
je
iret
jnp
imul
test
repnz
cmp
arpl
mov
mov
nop
je
test
inc
daa
insl
inc
rcll
xchg
iret
and
sub
dec
mov
mov
mov
jg
jbe
xchg
add
cli
inc
daa
mov
ret
ret
pop
jb
mov
ss
mov
aad
fwait
shrl
int
xchg
imul
and
mov
and
ffree
int3
lea
js
inc
xor
pop
xchg
xor
lret
rorb
mov
andl
ror
arpl
push
lret
mov
js
xchg
call
inc
jb
xlat
repz
push
xchg
xor
lock
mov
dec
test
dec
leave
pusha
cmpsl
arpl
repnz
outsb
and
cmp
jg
add
cmc
roll
arpl
sbb
mov
mov
push
sahf
orb
ds
mov
scas
std
xor
ror
aad
dec
mov
std
mov
negl
ja
lahf
popf
jl
das
inc
cmpsl
daa
and
mov
cmp
add
xchg
mov
dec
xorl
shlb
stc
stos
jge
jecxz
cmp
hlt
outsb
pop
daa
insl
sub
push
pop
loop
out
loopne
insl
jg
add
pop
dec
mov
xlat
mov
shrb
cmp
aaa
mov
xor
lock
call
pop
mov
xchg
and
imul
pop
outsb
xor
jp
pop
cmc
rorl
pushf
into
js
leave
cmp
or
inc
mov
add
loope
push
mov
mov
loope
je
inc
sub
fldcw
fs
sub
sbbl
dec
mov
sub
xor
lods
mov
popa
mov
dec
jmp
dec
xchg
negb
pop
stos
add
inc
std
stos
jnp
pop
pop
jge
pop
loope
xlat
xchg
inc
inc
aam
push
jne
js
jle
inc
xlat
dec
push
testb
in
add
daa
fidivrs
in
cwtl
movsl
dec
mov
ss
pusha
insl
cmp
jge
dec
scas
push
push
push
sbb
fsubrl
jnp
inc
cld
adc
or
and
pushf
test
push
add
int3
jle
inc
push
lcall
mov
push
lea
xor
dec
jecxz
pop
xchg
ret
mov
dec
mov
cmp
sbb
xchg
cld
mov
test
mov
or
jo
inc
mov
in
out
lahf
jae
adc
cmc
inc
addl
in
cmp
arpl
mov
mov
sbb
dec
repz
xor
daa
loop
cmp
iret
dec
jg
mov
jbe
pop
pop
int3
xor
jns
pop
inc
add
cld
jp
cmpl
push
cltd
and
addr16
xor
push
add
mov
popf
cmc
popf
xor
cmp
pop
dec
cmp
shlb
dec
jmp
and
stc
dec
data16
imul
mov
insl
and
sub
ljmp
pop
mov
daa
ret
das
mov
cwtl
push
std
dec
jecxz
mov
stc
ficoml
mov
addps
push
shll
inc
push
jae
mov
test
adc
pop
jp
test
push
idivl
sub
jl
aas
aas
jbe
fidivrl
jb
pop
inc
sub
loop
mov
fsubp
in
mov
call
insb
ss
data16
dec
mov
in
mov
add
jb
mov
dec
fsubrs
dec
dec
and
push
jle
aam
push
mov
aaa
mov
push
lea
dec
jnp
mov
jmp
test
hlt
cld
lds
mov
adc
scas
arpl
mov
jmp
int3
push
lods
mov
jle
iret
pop
push
adc
push
pop
and
xorl
fidivl
mov
into
sbb
adc
movsl
dec
mov
mov
nop
push
imul
lods
jecxz
jecxz
fucom
push
ja
pop
shrb
scas
out
sbb
arpl
inc
cmpsl
push
negb
mov
pop
jae
xchg
xchg
scas
sbb
sti
jno
mov
int
jbe
or
mov
cmpsb
lahf
rcrb
daa
aam
in
add
dec
aaa
fwait
pushf
inc
sub
push
dec
scas
inc
repnz
mov
andb
arpl
aad
xor
mov
cmpsb
rol
leave
xchg
outsb
mov
inc
push
pop
xor
out
jnp
xchg
pop
shlb
lcall
push
mov
lcall
fstl
ds
add
pop
push
xor
adc
jne
adc
nop
pop
or
mov
and
loope
mov
xor
sbb
inc
or
sbb
push
mov
sub
push
add
cltd
xor
test
dec
push
and
or
mov
mov
jecxz
mov
xlat
movl
pop
add
sub
nop
mov
out
xacquire
dec
mov
test
es
sbb
mov
insl
imul
push
mov
arpl
pop
cli
mov
or
sub
fildll
out
stc
cmpsb
pop
popf
scas
mov
adc
call
jmp
lods
call
mov
loope
inc
cmp
fsubrl
mov
int
lahf
adc
movsb
negl
je
pusha
mov
add
in
adc
inc
leave
cmp
loopne
or
push
add
sbb
mov
and
in
imul
lahf
push
mov
jbe
push
xor
movsl
test
pushf
sub
inc
orl
rclb
inc
inc
ds
inc
xchg
mov
mov
js
xor
dec
xchg
roll
ljmp
aad
sbb
dec
mov
rcl
jns
push
fcmovnbe
or
fstl
pop
aas
sbb
xor
jl
lcall
jne
outsl
push
sar
fistps
sbb
add
leave
ljmp
push
sub
push
mov
mov
cld
mov
pop
lahf
notl
fwait
jg
inc
sub
unpcklps
mov
xchg
arpl
mov
mov
sti
rcll
movsb
imul
pop
das
or
dec
push
lods
mov
into
xor
mov
lock
out
das
cmpb
sub
pop
lret
roll
add
stos
push
or
lret
push
into
out
fwait
scas
mov
sbb
lahf
push
xorb
jbe
call
jns
sahf
cmp
aaa
cld
lcall
mov
mov
ficoms
rorl
jno
pop
mov
lret
sbb
xchg
hlt
adc
push
mov
push
pop
into
cs
pop
les
xchg
out
cmp
divb
daa
cmp
mov
pop
or
jbe
outsl
loop
mov
and
je
sub
mov
jge
dec
or
push
pusha
aam
cmp
ljmp
jp
scas
xchg
ret
xlat
bnd
shlb
mov
imul
fs
movsl
scas
into
ja
sbb
mov
jno
push
subl
push
inc
aam
shll
xor
sub
mov
mov
mov
jge
mov
mov
das
das
lahf
adc
inc
insb
dec
aaa
mov
pop
hlt
xchg
aaa
xor
loop
int
gs
lock
lret
push
push
fnstcw
out
mov
popa
call
cmp
mov
xor
stos
mov
mov
daa
enter
ja
repz
je
inc
jbe
push
inc
hlt
xor
movsl
rclb
ja
xchg
lahf
movsb
iret
xor
popa
dec
push
mov
adc
dec
sbb
or
aad
enter
sbbl
jo
mov
jb
and
dec
lahf
inc
sbb
dec
scas
ja
stc
push
xor
movsl
pop
xlat
rorb
mov
arpl
jbe
adc
xor
movsl
jno
jmp
pusha
pop
jmp
jo
clc
mov
mov
lds
cmp
push
push
aaa
inc
adc
push
or
inc
test
cmp
in
insb
icebp
xor
fists
fld
sub
mov
sub
adc
dec
test
pop
adc
dec
in
pusha
jecxz
inc
inc
fs
pop
pop
sbb
mov
push
mov
push
inc
sahf
in
aas
leave
add
pusha
addb
jmp
adc
iret
mov
ret
adc
add
imul
addr16
pusha
mov
sub
cli
aam
fists
mov
adc
into
mov
xor
jecxz
aad
es
xchg
aam
jmp
rclb
hlt
adc
les
push
ret
fbld
cmp
dec
cli
ret
outsb
adc
inc
add
mov
mov
push
add
call
jle
in
mov
xor
lea
cmpsb
loope
insl
mov
and
cmp
dec
je
sub
movsl
shlb
hlt
push
push
movsl
mov
lods
ja
in
xor
cli
mov
cmc
sbb
or
pop
xor
shll
or
jnp
roll
xor
mov
ret
lcall
cmovge
loop
cltd
push
addl
cmpsl
mov
cmpsl
sbb
pop
orl
loopne
mov
shlb
call
out
add
bound
movsl
xchg
imul
cli
add
in
repnz
and
int3
cs
pop
xchg
mov
mov
mov
rcll
mov
inc
xor
mov
xor
int
mov
outsl
cmpsl
or
dec
iret
sub
mov
fmull
mov
cwtl
scas
cmp
push
in
es
lret
inc
repz
mov
clc
std
cmp
or
xor
push
popa
call
jl
jno
or
lods
jne
mov
mov
lds
dec
flds
roll
leave
rclb
mov
into
clc
dec
pushf
rcrl
pop
mov
mov
ljmp
mulb
add
pop
xchg
xchg
inc
xchg
mov
dec
inc
sbb
inc
sbb
push
add
cmpsb
das
mov
and
xchg
test
jecxz
mov
sbb
icebp
test
mov
loop
aas
mov
xchg
cmp
pop
inc
sub
lcall
push
enter
jnp
push
adc
inc
xchg
xorb
sub
in
add
pop
dec
dec
xor
jmp
cmc
mov
cmp
nop
in
inc
pop
add
or
and
mov
incl
popa
pop
dec
xchg
int3
pop
aam
push
jbe
movsl
mov
mov
and
mov
mov
std
pop
inc
jg
insb
add
add
jmp
jno
pop
test
and
out
pop
fidivrs
sbb
jmp
fdivr
mov
cwtl
mov
or
or
jmp
xor
add
and
sub
les
mov
cli
lods
jbe
rcrl
popl
push
xor
scas
add
push
stc
pop
cmp
mov
ljmp
or
xorb
cli
cmp
pushf
daa
sbb
jno
sub
cmp
popf
sbb
ret
push
sbb
or
adc
out
aas
add
add
mov
mov
hlt
les
iret
inc
sub
popf
stos
sub
sbb
push
mov
cli
ficoml
push
movsl
mov
push
mov
jne
jae
addl
mov
mov
rorl
inc
orl
insb
subb
jecxz
pop
lds
mov
adc
mov
gs
cmp
dec
cmpsl
and
fnstsw
mov
pusha
loop
loopne
bound
inc
push
pop
fwait
lret
addr16
sub
ja
or
mov
inc
mov
movsb
sbb
lcall
clc
or
les
cmc
arpl
cmp
ret
rcrb
adc
dec
lcall
stc
mov
pop
rorl
jo
xchg
xorl
rcrl
mov
ds
nop
hlt
or
jo
lea
call
jle
and
cmp
or
mov
inc
dec
sub
add
jg
cmc
sub
sbb
mov
pop
xor
test
pop
cmpsb
sar
sbb
xchg
cmpsb
fdivs
xor
mov
lods
and
cmpsb
cmc
aaa
je
inc
daa
scas
imul
mov
or
xchg
loope
into
cmpsb
sub
adc
ja
les
shrb
dec
cltd
pop
jne
sahf
call
mov
add
push
inc
outsl
mov
loope
dec
pop
jae
repz
hlt
and
sahf
push
dec
pop
sarb
movsb
mov
in
xchg
addb
movsb
push
scas
mov
jmp
lock
push
xor
les
xchg
in
fdivs
iret
cmp
cmp
out
xchg
push
xor
movsl
xor
outsl
imul
push
gs
mov
lcall
lahf
fisubl
or
and
iret
jb
jmp
hlt
cmpsb
jae
push
inc
aaa
iret
outsl
pop
mov
mov
pop
das
mov
pushf
push
xor
lods
push
roll
jns
daa
sub
cmp
xlat
sub
inc
mov
fwait
dec
push
in
mov
cmpsl
cmpsb
iret
imul
sub
imul
mov
rolb
mov
jle
cmp
xor
cwtl
adc
insb
ret
xchg
ret
cmp
push
inc
loopne
sub
mov
xor
adc
push
lcall
and
mov
sbb
push
lahf
mov
xchg
call
or
icebp
stos
sbbl
rol
rcrb
inc
mov
les
inc
loopne
cmp
in
mov
pushf
arpl
dec
dec
lock
arpl
scas
sub
push
jno
jns
sahf
call
fcoms
mov
popa
xor
and
insl
xchg
fwait
jns
xchg
jae
das
mov
inc
mov
call
mov
in
in
std
jl
je
mov
dec
sbbl
pop
popl
scas
jb
test
sbb
ja
pusha
push
pop
push
xor
arpl
adc
inc
lcall
cltd
push
mov
adc
shr
mov
movsl
and
cmpsb
cs
pop
mov
fcomps
xor
xchg
daa
ret
push
mov
shll
jo
sub
mov
mov
into
fstpl
lods
hlt
int3
mov
push
adc
cmp
js
scas
jo
add
pop
cli
test
xchg
cld
sub
in
push
in
lret
pusha
push
sub
in
mov
jmp
fstps
push
adc
es
mov
aam
out
xorl
push
out
dec
or
adc
or
xchg
mov
shlb
xor
inc
cmpsl
loop
pop
dec
cltd
pop
add
je
push
mov
add
pop
in
out
jbe
in
mov
jp
pop
xlat
add
and
shl
xlat
fidivrl
das
movsb
pop
ljmp
aas
inc
leave
sbb
mov
sbb
and
sub
xchg
or
je
call
mov
xor
in
gs
mov
xor
subb
sbb
adc
jmp
inc
dec
jnp
in
sub
fisubrs
adc
mov
sub
aaa
stc
or
xchg
cmpsb
dec
push
xchg
cmpsl
pop
dec
inc
aas
ds
cmp
adc
fcoml
mov
push
cwtl
fwait
xchg
movsb
cmpsb
xchg
or
jb
push
push
push
dec
lods
lea
out
icebp
pushf
pop
in
fmull
pop
push
mov
insb
or
and
push
mov
frstor
pop
outsb
mov
pop
out
rol
inc
outsl
mov
sti
and
aad
lcall
flds
add
repz
mov
stos
dec
mov
fidivs
ss
lea
loope
jp
sbb
xchg
scas
cmp
pop
shl
sub
push
inc
xchg
testb
cwtl
xor
leave
inc
arpl
jmp
or
push
iret
and
js
jle
jg
mov
in
add
movsb
je
sbb
mov
jbe
push
lea
ret
test
fisttpll
mov
xchg
xor
test
push
sahf
dec
pop
inc
add
push
inc
push
pop
adc
mov
into
xchg
fidivrs
and
icebp
pop
outsb
cmp
sti
push
mov
add
ss
pushf
cwtl
stos
inc
das
jecxz
pushw
mov
mull
sbb
ret
lcall
inc
aas
ret
push
mov
int
xor
mov
sahf
loopne
mov
cmp
repz
popa
adc
ret
mov
sbb
inc
jl
mov
and
sub
pop
xor
xorl
sbb
in
ja
or
push
dec
push
movsb
cmp
xchg
add
mov
push
sub
push
lods
les
mov
cwtl
call
push
cld
or
mov
dec
cli
fsubrs
in
jne
cmpl
out
addr16
sbb
fsubrl
inc
add
push
test
adc
and
loopne
mov
and
icebp
mov
sbb
shrb
cmpb
aam
imul
fnstcw
fisubl
jge
adc
and
pop
pop
ss
sub
or
or
mov
mov
inc
icebp
test
xchg
out
sti
iret
fcmovb
xchg
xorb
xchg
fcoml
lds
push
push
scas
lcall
mov
repnz
fucomip
pop
imul
push
sbb
xchg
xchg
je
cli
pop
push
pushf
mov
jecxz
mov
mov
scas
push
std
adc
jnp
sub
shll
xchg
push
in
popa
adc
out
push
inc
cli
pop
or
fldcw
fdivl
aam
rcr
mov
cli
jbe
enter
mov
push
xchg
cmp
xor
test
repnz
push
cwtl
notb
jnp
xor
pop
inc
test
and
dec
js
addl
push
pop
mov
xchg
out
jb
test
jmp
push
mov
test
cmp
addl
and
jnp
add
or
sub
sub
mov
ret
inc
loopw
rorl
mov
stos
lea
cs
push
mov
mov
mov
and
popf
sub
sub
out
test
push
leave
andb
fmul
enter
inc
mov
daa
mov
setp
aam
adc
xor
add
dec
xor
stos
popf
cmc
xor
dec
int
stos
fisttpll
insb
rcrb
cltd
ja
cmp
popf
insb
scas
mov
fcomp
popa
add
add
fidivl
arpl
dec
dec
test
jns
lea
adc
or
sub
cmc
xor
push
loope
orb
lock
dec
pop
dec
mov
lods
dec
pmulhuw
pop
dec
pop
lods
aas
inc
in
xchg
adc
xchg
pop
push
jge
sti
pop
pop
lods
sahf
jle
stos
pop
sbb
or
pop
loopne
adcb
inc
xlat
jae
ja
mov
hlt
inc
in
scas
xor
pop
jmp
push
sub
pop
add
xchg
cwtl
iret
jecxz
sub
imulb
aam
and
scas
xor
push
sub
or
nop
mov
or
jns
mov
xchg
lock
clc
subb
adc
les
jns
xor
das
mov
xlat
xor
lcall
cmp
test
jge
pusha
jb
dec
pop
data16
in
lea
and
jecxz
in
lret
dec
ret
mov
adc
xor
orl
mov
or
sarb
mov
mov
add
push
mov
inc
mov
or
or
push
mov
out
push
je
imulb
ret
xlat
dec
or
lock
inc
push
add
sub
in
adc
mov
mov
das
lret
jge
push
adc
push
add
stos
sbb
cmp
fwait
adc
mov
in
xchg
pop
addl
add
in
lea
pop
cltd
shll
sub
mov
jmp
dec
adc
jmp
test
cld
mov
cmova
std
or
add
popa
xor
leave
pop
mov
lea
mov
or
mov
test
jb
pushf
mov
cmp
add
mov
add
dec
pop
adc
shr
cmp
scas
stos
fstpl
cwtl
or
pop
push
aam
or
or
mov
cmc
mov
push
mov
push
jo
adc
popf
std
xchg
adc
sbb
pusha
jno
mov
add
add
cwtl
inc
jge
fldcw
sbb
mov
pop
out
sbb
dec
pop
add
sub
shlb
mov
and
lcall
xchg
les
mov
push
jb
fdivrl
xchg
test
rcl
out
add
inc
ss
mov
fsubl
xchg
xor
push
ljmp
mov
repz
push
lret
mov
test
scas
cmc
and
mov
arpl
jno
jle
sbb
push
fisttpl
inc
out
das
arpl
push
jp
mov
xor
rcrb
loop
cmpsb
pop
mov
xchg
mov
sahf
mov
mov
in
mov
fs
or
mov
into
into
inc
cmp
cmc
cli
enter
jle
lahf
leave
pop
cmp
xor
cmpsb
out
cli
xlat
inc
jp
cmp
adc
mov
pop
out
xchg
sub
aas
sbb
adc
lcall
pop
and
push
arpl
icebp
daa
mov
mov
js
sub
arpl
jae
jbe,pn
push
lcall
jns
call
mov
movsl
gs
sbb
ljmp
movsb
and
adc
cmp
ss
jg
mov
dec
cmpsl
jbe
sub
sub
pop
cltd
fisubrl
data16
lods
jmp
aaa
add
pusha
iret
sbb
cmp
adc
cmpl
cmp
xchg
adc
mov
nop
movsb
inc
jge
sub
inc
outsl
movsb
ret
repnz
jb
push
adc
mov
mov
push
in
mov
mov
and
mov
mov
mov
lea
jmp
sbb
adc
or
out
jbe
push
and
pop
rcrb
inc
dec
jle
push
jle
pop
js
pop
test
loopne
out
arpl
xchg
lahf
repnz
and
sbb
cmc
xchg
fimull
lcall
fnstenv
sub
iret
xchg
fldt
sbb
push
mov
lahf
sbb
adc
jb
imul
push
push
movsb
or
iret
jo
addr16
cmpb
jo
scas
int3
dec
int
ret
dec
in
cmpsb
jg
ds
dec
mov
outsb
pop
jge
aaa
out
or
dec
sub
mov
bound
pop
and
adc
xchg
sbb
push
cmp
ficompl
and
jns
mov
outsb
cs
pop
pop
fwait
mov
out
push
mov
test
sub
mov
xor
xchg
fwait
adc
add
leave
test
and
cmpsl
inc
mov
call
arpl
sbb
fcompl
sbb
stc
insl
or
cwtl
out
test
cmp
xor
leave
inc
clc
stos
xchg
add
orl
test
orb
rol
iret
xchg
into
retw
mov
pop
in
mov
mov
adc
shr
mov
cmp
xor
lock
sub
pop
jmp
out
mov
jne
insl
jp
cmp
outsb
aaa
pop
movq
lret
push
stos
pusha
aaa
inc
jmp
push
lock
push
adc
fstpt
ret
cmp
sbb
add
cmp
xchg
sub
xor
dec
lret
or
int
inc
pop
mov
lds
lods
popf
sub
arpl
jne
inc
ds
xchg
add
xchg
jns
mov
out
ret
pop
insl
std
pop
mov
call
out
enter
xchg
pop
sub
push
adc
imul
ret
inc
fildll
jp
jnp
xor
scas
nop
sahf
pop
xor
rclb
fdivr
pop
and
or
rcll
nop
fldcw
push
mov
leave
jb
xor
lods
xor
xchg
ljmp
js
push
popa
pop
and
sbb
cmp
rolb
outsl
xchg
scas
fwait
cmpsl
or
hlt
adc
xchg
add
lea
inc
fistl
add
jbe
sti
adc
shlb
inc
loopne
sub
jp
cmp
adc
cmc
add
cmp
movsl
sbb
ds
ja
mov
in
cmp
sub
mov
movsb
xlat
pop
mov
mov
xchg
mov
pop
jo
das
jo
adc
pop
sub
adc
dec
jmp
mov
out
shrl
out
jmp
rorl
xchg
push
repnz
xchg
sbb
push
shlw
cld
pop
shlb
outsb
jbe
shrb
dec
sti
or
mov
mov
mov
aaa
ret
pop
adc
pop
jecxz
mov
lds
cmpsl
pop
call
hlt
sar
xor
sub
test
cmp
lea
cltd
mov
pop
mov
ret
das
cli
push
les
das
xchg
in
movsl
push
add
xchg
pop
mov
daa
mov
loopne
xor
cltd
mov
mov
adc
lea
scas
fisttpll
add
aas
pop
sahf
test
aaa
shlb
aam
out
jne
stc
shlb
bound
stc
jmp
lret
lods
shll
call
or
sub
leave
mov
mov
cmp
pop
pop
jge
daa
push
stos
jmp
fwait
or
and
push
adc
sbb
jns
mov
stc
sub
sub
insl
sbb
pop
ss
rcrb
scas
dec
lret
add
imul
or
jp
push
sbb
cmc
pop
mov
ds
aas
mov
sbb
out
enter
aaa
and
aam
jp
dec
bound
fsub
loope
loopne
push
add
dec
imul
mov
rcrb
lret
data16
cs
adc
jge
and
cltd
xchg
gs
scas
lret
fwait
inc
push
fs
jnp
loop
int
dec
and
and
mov
cmpsl
pop
iret
pop
mov
inc
lock
add
mov
pop
push
sarl
sbb
sub
stc
sbb
lds
and
fisttps
pop
inc
movsl
orb
cmpb
aaa
push
leave
sbb
push
adc
sti
lods
dec
adc
fnstcw
mov
fnstcw
xchg
loope
cltd
cwtl
mov
adc
add
cmp
pop
sti
movsb
das
loop
fnstenv
xchg
div
mov
insl
xor
lock
mov
frstor
add
stc
push
jno
cmp
jl
ret
pop
dec
xor
mov
xchg
adcl
mov
ja
mov
lret
and
push
fisubrs
sub
dec
jb
sub
and
sbb
in
hlt
push
mov
clc
into
jo
inc
aas
idivl
mov
and
psubusb
pop
pop
jp
out
sub
pushf
ds
pop
dec
pop
mov
inc
cmpsb
lret
mov
fs
js
outsb
or
sub
inc
loopne
xchg
stos
cmp
jp
fwait
das
jl
aas
imul
inc
popf
xchg
ror
adc
mov
jmp
cmp
iret
mov
lods
mov
ljmp
pushf
xchg
mov
xor
into
jae
dec
test
xchg
inc
mov
cmp
ljmp
mov
movsb
pop
loope
dec
add
popa
pop
bound
lock
lahf
loope
clc
cwtl
lret
mov
mov
pop
and
mov
add
or
aaa
test
mov
adc
push
sbbl
xor
arpl
and
fwait
cmc
cmpl
lods
xor
or
es
fists
pushf
stc
fs
inc
sub
xlat
hlt
cmc
test
sub
out
push
shll
lret
sbb
lods
divl
push
call
push
cmc
ret
pop
mov
mov
inc
push
sbb
into
imul
rcrb
xor
jp
sbb
test
les
pop
jge
dec
frstor
xchg
lret
mov
das
dec
jl
mov
xor
xor
hlt
movsb
in
shll
pop
icebp
pop
cwtl
lcall
scas
dec
test
data16
hlt
test
gs
cwtl
dec
mov
xacquire
mov
push
loopne
inc
les
push
adc
mov
push
mov
sbb
ffree
mov
mov
jns
and
ret
jle
adc
bound
cmp
scas
jge
cmpsl
xor
cmpsb
lock
cmove
mov
loopne
xor
es
loope
add
xchg
les
pop
mov
cmp
loope
jo
dec
stc
inc
push
push
mov
sbb
lahf
cmc
ret
das
dec
pop
imul
pop
mov
dec
je
add
enter
mov
add
add
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
jb
mov
jnp
mov
jnp
mov
es
in
xor
and
push
mov
imulb
sbb
shlb
cmp
jle
jle
movsl
in
scas
push
jb
cmp
in
outsb
nop
and
adc
mov
test
cmpsb
and
aas
enter
jecxz
mov
xor
sub
test
pop
or
test
in
bound
repz
ja
or
xchg
add
stos
pop
mov
loop
mov
adc
leave
jmp
xor
and
sbb
addb
std
mov
int3
dec
mov
push
pusha
cmp
adc
ss
mov
inc
mov
in
and
adc
jle
bts
cmp
and
loopne,pt
mov
or
push
jmp
jg
jnp
negb
loop
fs
std
cmpsb
out
out
cmp
xchg
xor
dec
xchg
mov
xchg
xchg
push
hlt
adcb
mov
out
inc
cmpb
repz
insl
or
or
mov
mov
xor
inc
mov
rcr
stos
pop
push
mov
call
add
xlat
push
cs
add
jg
int3
inc
xor
fxch
xchg
int3
sarl
lds
lock
fisubl
ret
scas
and
pop
sar
nop
inc
xchg
stc
lods
pop
in
adc
scas
mov
add
mov
in
xor
lahf
pop
int
out
add
cmpsb
rcll
or
push
xlat
loopne
pop
test
leave
lret
rol
inc
sbb
mov
sub
bound
mov
or
jle
lret
and
pop
lahf
or
pop
pop
cltd
stos
test
cltd
mov
sub
dec
jbe
pop
sarb
inc
sbb
or
jp
fimuls
ss
bound
hlt
mov
loopne
lods
pop
add
dec
sub
lcall
jge
popf
xchg
shlb
lds
cmp
mov
loop
sub
roll
inc
cltd
scas
and
repz
xor
xor
dec
cld
push
fwait
adc
or
in
les
xor
fidivs
cmc
ret
jecxz
lock
sarl
mov
cs
ljmp
or
sub
mov
mov
loope
or
inc
jp
cmp
fidivrl
push
cmp
dec
xor
push
out
ret
fildll
sub
mov
cmpsb
fwait
iret
xchg
inc
inc
aas
ror
jmp
fists
push
adc
pop
sbb
mov
daa
stc
scas
xchg
mov
orl
in
add
push
mov
xor
pop
enter
aad
pop
fbld
pushf
movsl
push
cmpsb
jne
push
call
xor
sub
cld
push
dec
jecxz
push
out
cmovae
dec
push
sbb
jb
jmp
and
ljmp
movsb
and
lret
xchg
cmp
push
movsl
jecxz
dec
push
pop
or
lahf
push
subl
xor
loop
in
sbb
cmp
daa
mov
add
xor
dec
cmpsl
rcrb
clc
inc
js
xchg
mov
hlt
xchg
inc
push
in
shrb
shlb
pop
dec
fdivr
push
and
jb
imul
add
jge
cs
mov
cmp
arpl
lahf
fs
cwtl
nop
outsb
sarb
adc
in
mov
sbb
lock
or
mov
xchg
jbe
imull
ret
repnz
cmc
call
mov
into
in
dec
out
mov
imul
xchg
mov
loopne
xchg
xor
push
sub
mov
adc
repnz
inc
and
xchg
or
pop
fcomip
pop
xchg
mov
xor
js
and
push
repz
ror
mov
test
or
lods
shl
lds
mov
iret
xor
in
cmpsl
in
add
fs
jge
movsl
sldt
xchg
pop
add
loopne
int
loope
nop
or
int
xchg
mov
jle
push
dec
stos
nop
hlt
adc
pop
sbb
or
xchg
ds
push
out
adc
dec
test
xor
arpl
dec
xor
xchg
cmpsl
enter
xchg
dec
pop
push
pop
mov
sbb
pushf
std
mov
aad
dec
xor
mov
movsb
push
push
jae
lcall
sbb
loopne
leave
ret
fs
push
sbb
call
or
inc
push
lret
push
shr
pop
push
in
popf
loope
sahf
std
out
xchg
fwait
loope
mov
xchg
push
fwait
mov
mov
addr16
mov
mov
or
negb
cwtl
es
adc
arpl
add
adc
add
pop
outsb
shr
cs
js
sub
and
xor
aas
dec
cltd
dec
imul
adc
in
mov
jle
cs
arpl
test
dec
push
xor
cmpsl
and
jmp
int3
test
inc
and
out
scas
iret
sbb
pop
inc
xchg
cmpsl
pop
imul
jmp
jecxz
adc
mov
iret
outsb
jp
cmpsl
inc
lds
fimull
movsl
cmp
movsl
xchg
ret
pop
sbb
arpl
adc
mov
or
mov
adc
dec
cltd
lock
jbe
inc
add
rclb
insb
mov
sub
sub
fdivs
cmp
cmp
mov
mov
inc
addr16
popf
jg
mov
ret
and
pop
cmpsl
cmp
xchg
jo
jae
push
insl
mov
test
scas
xor
shll
jge
mov
xchg
fmull
cmp
or
xor
in
mov
js
push
jb
pushl
sub
add
sub
add
dec
mov
arpl
fidivrl
cmp
adc
adc
jge
or
mov
cmc
inc
in
push
cmp
icebp
mov
dec
jecxz
lcall
ja
arpl
xchg
data16
rcll
imul
mov
mov
xchg
data16
movsl
sti
std
sbb
push
push
fisubrs
out
inc
outsl
scas
in
or
xchg
fildll
aas
inc
pop
mov
sub
sbb
cmp
aaa
aad
and
adc
pushf
adc
mov
push
jecxz
fadds
clc
in
push
dec
sarb
sar
xor
adc
push
and
rorl
mov
iret
or
js
dec
insl
shrb
lea
mov
loope
ds
test
gs
aam
gs
popf
xchg
lea
sbb
out
sub
stos
mov
repz
xor
shll
andl
cmc
outsl
sbbl
in
mov
pop
add
data16
icebp
aaa
insl
adc
stos
and
fldcw
dec
push
pop
and
test
imul
add
mov
mov
int
cs
ror
sub
jbe
push
and
jmp
jns
pop
dec
xlat
sub
jnp
aaa
jb
pop
inc
mov
rolb
and
inc
inc
scas
and
iret
jp
popa
and
jge
in
je
and
xor
popf
lods
xor
xchg
mov
xchg
loopne
add
jle
jmp
mov
xor
mov
adc
fimull
and
shll
leave
outsb
aas
lea
lret
adc
shrl
es
mov
into
pop
out
push
das
call
xchg
fisttpll
cmp
sub
fstl
jne
lods
insl
stc
faddp
cmp
and
and
ffree
or
xor
mov
sub
insb
js
stos
mov
push
or
stos
cmc
lahf
stos
pop
xchg
mov
lret
pop
push
sub
and
cli
adc
and
stos
mov
fcmovnu
sub
mov
ds
push
adc
mov
jg
cmpsb
fldenv
inc
or
xorb
jl
add
and
pushf
insb
dec
out
cltd
jp
js
out
dec
stos
cs
cmp
inc
int3
xor
gs
pop
out
or
pop
or
xchg
pop
je
sbb
into
inc
iret
popf
push
loope
inc
pop
and
shlb
dec
mov
cld
pop
fwait
pop
adc
loop
pop
push
test
add
test
stos
xchg
int
cmp
flds
stos
addr16
ret
mov
daa
and
test
xchg
add
dec
xlat
pop
dec
pushf
push
xchg
or
int
sbb
dec
add
loop
sbb
out
add
xlat
ret
cltd
mov
or
in
jp
sub
inc
into
and
scas
push
fs
cmpsl
cmpsb
fwait
add
cmp
push
les
xlat
cmovns
insl
std
insb
and
out
cmp
inc
xlat
adc
jmp
xchg
in
adc
ljmp
outsl
mov
fistpl
outsl
xor
push
ja
int3
mov
and
dec
scas
push
mov
push
mov
repnz
jl
fidivs
jle
sti
xchg
pushf
add
dec
jmp
push
fcmovnbe
out
cmp
cmpl
push
pop
lret
sti
ret
std
jo
fmuls
dec
ret
jae
stc
or
test
sub
pop
jo
dec
jbe
push
xlat
mov
push
fidivl
dec
je
imul
sbb
mov
add
cmp
mov
sub
movsb
adc
fisttpl
inc
outsb
xchg
xor
push
aam
mov
js
cmpb
stos
jg
stos
out
xchg
mov
sbb
cpuid
cmp
xchg
dec
ds
sti
dec
lock
fstps
pop
add
jbe
add
mov
cmc
lds
sbb
xchg
int3
adc
rol
sbb
lahf
negl
mov
fnstenv
push
ja
add
iret
and
rorl
push
pop
imul
mov
pop
loopne
mov
mov
lea
dec
das
and
ud0
imul
insb
int
pop
jmp
push
stc
es
mov
lret
loopne
fiadds
inc
mov
push
gs
fiaddl
sahf
xchg
dec
jmp
mov
xchg
out
cwtl
das
fildl
sub
push
xor
test
cmp
push
cmpsb
xchg
mov
and
mov
icebp
cmp
push
xchg
ret
jbe
fld
sbb
ret
sub
xor
inc
add
push
dec
scas
sarl
push
stc
and
xchg
loop
mov
jnp
lcall
andl
cmp
mov
xchg
out
or
leave
mov
or
mov
dec
arpl
shrl
or
in
lds
mov
mov
repz
out
scas
mov
test
lds
mov
rcr
add
pop
push
or
addr16
pop
add
cli
je
and
insb
sub
loop
mov
and
mov
jl
xor
jne
pop
pusha
xorl
fmull
in
jg
cmpsb
or
adc
imul
insb
ds
pop
xor
fwait
in
jnp
mov
push
call
cmp
dec
arpl
adc
daa
int
pop
jmp
test
rcll
ss
aas
mov
pusha
cmp
mov
fisttps
fnstcw
mov
inc
or
sahf
or
and
dec
stc
into
stos
mov
lahf
inc
sub
lock
repz
aas
gs
das
and
leave
mov
mov
jecxz
imul
push
and
pop
mov
ja
push
leave
and
jmp
mov
dec
shl
adc
roll
aam
pushf
push
jno
dec
xor
pop
dec
int
push
mov
fs
lahf
fistps
orl
stc
sub
sbb
stos
xchg
inc
mov
adc
or
dec
call
lds
sbb
mov
aad
inc
pop
push
dec
mov
cmp
js
inc
jecxz
imul
cmc
popf
orb
cmp
dec
rcrl
cmp
fnstenv
jecxz
out
mov
jbe
xchg
xchg
les
popa
std
mov
adc
scas
mov
lods
push
push
scas
push
and
xor
test
int
mov
adc
jns
mov
mov
jae
movsb
adc
xor
fwait
mov
loop
push
scas
mov
push
mov
jae
push
out
sub
arpl
dec
lds
add
nop
dec
inc
push
loope
shll
movsb
imul
add
shlb
add
fwait
scas
pusha
mov
data16
xor
int3
xchg
hlt
cwtl
add
sbb
popf
add
and
ja
fists
ja
insl
data16
mov
ficomps
adc
pop
lds
imul
repnz
dec
into
push
dec
into
lods
push
or
lcall
sub
lds
aas
jnp
mov
cmp
je
sub
xchg
adc
mov
call
stos
and
ja
sub
mov
repnz
push
adc
subl
fldl
pop
mov
mov
cld
jecxz
or
in
mov
jne
pop
lret
push
add
cmc
sbb
push
push
and
sub
xchg
pop
aas
or
lds
scas
sub
in
xor
inc
es
pop
aam
lods
mov
add
pop
filds
insl
lock
sub
dec
fildl
pop
stos
and
rorl
jle
cmc
aam
cld
out
in
rorb
lret
add
sbb
popa
xor
rcr
pop
mov
add
add
stos
cmp
addb
and
push
scas
sarl
add
lods
std
daa
jge
pop
scas
rclb
loop
arpl
inc
cmpsl
sub
jg
jge
cmp
es
dec
loopne
cmp
in
and
les
xor
cmp
xchg
sbb
test
jmp
stc
ss
add
in
jb
dec
xchg
shll
leave
sub
push
jb
out
out
inc
pop
jge
mov
sbb
add
addr16
pop
stos
outsb
inc
lods
js
mov
icebp
sub
or
in
mov
mov
gs
daa
push
jnp
inc
cmpsl
sub
pop
mov
scas
and
test
xor
test
and
and
outsl
sub
lea
pushl
jg
in
int
jnp
push
addr16
push
sahf
xor
push
or
jae
sbb
pop
andb
push
and
dec
fisttpl
rcll
xor
test
wrmsr
ret
pop
aas
fdiv
popa
or
mov
inc
mov
popa
mov
sub
push
mov
sub
fiadds
sbb
jl
jg
pop
jae
xchg
fdivs
mov
cltd
data16
xor
sbb
mov
jae
mov
inc
rolb
cmp
push
fimuls
out
sbb
pushf
dec
les
jae
movsb
out
scas
sub
inc
int
enter
xchg
dec
bound
mov
dec
repz
xor
sub
out
cmp
inc
je
inc
xor
mov
fdivrs
loop,pn
cltd
mov
icebp
push
sub
decb
mov
push
mov
cmpsl
cmpsl
lahf
sub
js
xor
jle
imul
shll
dec
lock
stos
movsb
push
mov
add
scas
cmp
daa
jmp
lock
inc
sub
mov
cmp
pop
and
pop
int
in
mov
inc
inc
out
inc
inc
lahf
xor
aam
in
dec
dec
rcrb
pusha
bound
lods
in
pop
mov
addr16
call
rcrb
xchg
cmp
pushf
sahf
imul
cmc
pop
out
sbb
and
mov
sbb
je
add
inc
icebp
dec
lcall
fidivrs
out
ds
xor
mov
dec
and
lret
xor
push
push
or
mov
cmovb
movsl
in
in
xchg
jmp
cli
sbb
sti
xor
int3
mov
pushf
xchg
push
jp
lret
sub
pop
adc
hlt
jge
out
loopne
test
out
lret
cmp
inc
push
xchg
loope
sahf
push
test
mov
push
xchg
rclb
sub
dec
xor
cmpsl
push
add
adc
cmp
lods
or
mov
mov
cmpsl
lock
int
test
cwtl
push
leave
sbb
jmp
sbb
xchg
hlt
jp
xchg
sbb
cli
gs
jmp
cmpsb
rclb
arpl
imul
stc
xchg
push
and
add
mov
mov
loope
mov
jmp
xor
cmpsb
hlt
add
inc
loope
gs
jbe
xor
pop
or
ret
shlb
in
cwtl
repz
push
andl
daa
jnp
inc
add
mov
push
leave
jle
in
insb
xchg
xlat
push
mov
xchg
ficoml
mov
popf
insb
mov
jno
into
push
aaa
outsb
mov
inc
push
loop
rorl
rolb
inc
rcrl
mov
dec
fiaddl
jecxz
mov
xor
ret
dec
loope
jge
sbb
lods
pop
hlt
mov
ret
mov
mov
pop
and
inc
inc
inc
cmp
mov
icebp
dec
fcmovnb
xor
jno
mov
mov
mov
push
mov
ja
cmc
push
jae
pop
sub
pusha
inc
cmc
mov
or
add
push
xor
lcall
insb
sarl
or
hlt
xor
dec
pop
inc
xor
mov
ret
mov
lret
mov
jle
es
jge
fnstenv
cmp
push
pushf
sbb
clc
mov
out
fs
or
sub
bound
push
jae
and
gs
js
jns
test
fdivs
ret
push
dec
cltd
mov
rcrl
addl
xchg
add
pop
std
push
loop
add
div
movsl
ljmp
in
scas
xchg
lret
icebp
mov
ljmp
push
dec
loope
cmpsl
repz
pop
xchg
int
sti
fcom
sti
clc
jg
repz
fstpt
andb
ret
push
or
ds
or
xor
push
mov
pop
or
pop
int3
sub
fcoml
lods
cld
cmp
sbb
add
adc
xor
xchg
fwait
sbb
mov
movsl
mov
ds
add
adc
enter
mov
push
cltd
ljmp
sub
mov
int3
aaa
and
sub
rcll
sti
cmpsb
daa
int3
mov
nop
ds
xor
fprem1
mov
push
inc
loopne
pop
jge
mov
adcb
sti
repz
out
sub
sub
das
pushf
push
inc
or
pop
add
or
adcl
gs
mov
insl
sub
into
xorl
cli
sti
mov
je
sahf
je
push
lret
dec
cli
cmp
js
in
in
lods
fdivrs
xor
lret
mov
cmpsb
sub
movsb
xchg
sti
or
call
test
imul
push
insl
lcall
into
and
dec
jnp
fnstenv
wrmsr
std
cmp
mov
shl
leave
mov
mov
inc
xchg
fucomp
dec
out
push
cltd
jmp
adc
add
fbld
pop
fs
cld
cmpps
ss
insl
sub
xor
dec
rol
adc
popf
jns
and
xchg
xor
and
xchg
pop
jb
sbb
inc
mov
jae
daa
jno
mov
push
xor
xchg
imul
rcrl
and
add
mov
aaa
inc
nop
cmc
mov
hlt
jmp
add
mov
jbe
push
inc
inc
mov
cmp
sub
fcomp
movsl
cli
add
das
mov
inc
sarb
bound
cmp
mov
xchg
shlb
fwait
in
sahf
xor
push
sti
jb
fildll
mov
ss
mov
out
stos
lods
in
xlat
add
insb
jle
jnp
imul
add
push
pop
jg
dec
lods
dec
pop
outsl
jno
and
push
lret
mov
cmc
notl
shll
andb
icebp
sbb
jmp
cmp
fmul
sub
add
stos
lahf
enter
popl
test
pop
push
test
rorl
fcomp
stos
loop
in
dec
or
popf
jbe
lret
mov
add
xorb
daa
fstpl
mov
icebp
sub
test
daa
jp
lods
in
mov
push
push
adc
imul
icebp
jecxz
or
sbb
scas
pushf
inc
add
xor
adc
aas
cmpb
test
jns
lcall
or
sahf
mov
mov
ret
mov
dec
lcall
daa
push
pop
jl
xor
inc
fsubs
fs
int3
jae
nop
xchg
inc
or
shr
int3
lret
rcrb
pop
mov
cmp
sbb
push
int3
outsb
inc
hlt
daa
xchg
inc
and
lods
mov
jg
add
inc
adc
xchg
add
add
xor
jno
repnz
dec
mov
lcall
imul
fidivs
mov
int
push
or
jmp
cli
dec
push
jo
dec
and
negl
jnp
mov
pop
add
push
aam
pusha
stos
sub
dec
imul
out
inc
pop
sbb
cmp
insl
jns
cmp
popf
xchg
insb
lret
je
fistpll
adc
test
insb
sbb
ss
rcr
inc
inc
dec
cltd
dec
jb
imul
mov
aas
push
xchg
das
add
hlt
sub
sbb
push
cmpl
push
pop
adc
pop
ret
insb
imul
mov
sbb
mov
push
aaa
cmp
test
jl
mov
dec
lcall
push
pop
mov
repz
xchg
pop
out
test
jno
aam
insl
mov
dec
xor
pop
mov
xchg
idivl
sbb
mov
inc
or
mov
jmp
adc
or
inc
imulb
rcr
or
icebp
pop
mov
insl
mov
daa
arpl
push
movsl
and
insb
out
mov
sbb
insl
mov
test
jnp
xor
cwtl
imul
add
jmp
loop
push
incl
pop
pop
jb
cwtl
cmpsl
shl
mov
mov
pop
cmpsl
xor
inc
movsl
sysret
loop
rorl
movsb
lock
in
push
and
jb
insl
and
xchg
pop
jb
ffree
jmp
aaa
jecxz
pop
cli
cmp
dec
gs
jg
sub
sub
dec
sbb
pop
and
and
mov
mov
rclb
jo
insl
mov
xorl
mov
arpl
int3
movsl
add
sub
push
xchg
rcll
dec
inc
xchg
mov
jge
mov
js
gs
sbb
or
out
enter
sub
data16
adc
ret
js
cmc
test
add
adc
movsb
dec
xchg
mov
and
dec
sti
std
dec
icebp
pop
mov
lods
aaa
movsl
mov
jle
pusha
fs
rcr
inc
imul
loope
cmp
xor
in
sub
inc
cli
fbld
test
sbb
js
imul
hlt
nop
dec
pop
mov
inc
std
and
push
lret
fstpl
mov
imul
mov
mov
ds
lret
add
call
cmpl
sub
adc
add
dec
arpl
repnz
add
and
xchg
xchg
div
cmc
pop
inc
add
test
xor
test
repnz
fldcw
cs
mov
inc
ror
dec
dec
mov
outsb
mov
outsl
cmc
jbe
in
push
sub
adc
adc
out
mov
inc
insl
sub
adc
lahf
in
enter
dec
xchg
pop
dec
jne
xchg
lret
jns
icebp
movsb
gs
cmp
insl
inc
mov
js
sbb
inc
repz
inc
lods
jle
mov
out
mov
push
lods
jmp
loope
jno
xchg
inc
jmp
fimull
adcb
fcmovnbe
jl
adc
sub
cwtl
dec
mov
push
fs
or
lods
xchg
aad
shll
push
mov
lods
or
int
popa
popf
push
or
mov
add
inc
addr16
and
fildll
mov
popa
sbb
orl
mov
add
mov
sub
cmp
xor
ja
xchg
xorl
sub
dec
popf
sbbb
test
push
call
test
xor
xchg
repnz
aaa
stos
mov
xor
inc
movsb
and
loopne
test
push
outsb
add
adc
jne
data16
orl
cmpsl
not
out
sbb
mov
mov
cmpsl
test
loope
push
loop
outsl
call
out
fistpll
cmp
decb
std
jmp
cmp
sahf
dec
pop
adc
or
push
push
mov
pop
pop
mov
cmp
xchg
roll
roll
stos
cmp
jmp
clc
pop
xchg
sbb
push
popa
dec
sub
mov
or
cmpsl
push
cltd
mull
xchg
mov
and
jns
sub
outsb
pop
push
inc
mov
leave
arpl
jno
lret
sbb
pop
xchg
mov
jno
adc
sbb
fcomp
leave
in
sti
aas
inc
jae
pop
cmp
fcmovnbe
or
mov
or
out
fdivrl
nop
fbstp
xor
inc
pop
out
addb
cmp
neg
js
pop
aad
pop
popf
daa
je
fisttps
scas
int3
mov
lds
data16
sarl
pop
aas
lods
inc
xor
mov
incl
iret
cmp
mov
mov
jne
je
cmp
xchg
mov
je
test
jge
dec
test
sub
into
jns
test
jle
test
mov
sbb
inc
xchg
insb
stos
rcl
push
cmp
lret
roll
xor
stos
or
cld
popa
jp
fisubrs
mov
xchg
loope
in
test
sahf
pop
sbb
leave
lea
mov
xor
xor
jae
stos
mov
xor
mov
popf
repnz
mov
mov
repz
mov
push
ffreep
movsb
insb
xchg
pop
or
and
jb
ss
mov
mov
sti
loope
pop
xor
cltd
sti
daa
in
adc
cmpsl
outsb
insl
scas
jnp
cmp
test
mov
jmp
je
dec
mov
test
sub
sub
test
mov
dec
mov
mov
pop
push
mov
cmpsl
mov
outsl
xor
es
mov
jo
aas
scas
pushf
dec
jae
or
push
pop
imul
addr16
aad
and
xchg
ret
dec
pop
push
daa
xchg
insl
cli
or
dec
cmp
test
mov
mov
jp
adc
mov
lcall
pop
dec
sbb
int
imul
jnp
stc
adc
dec
ret
loop
test
enter
mov
shrb
add
add
add
jb
dec
dec
pusha
pop
and
lahf
out
xchg
xor
shlb
iret
xor
jl
xor
mov
das
les
mov
stos
dec
dec
xchg
mov
faddp
loop
dec
mov
popf
dec
outsb
pop
add
lret
add
jne
pop
inc
cmp
cmp
jae
jg
or
cmp
and
adc
pop
je
in
jle
lds
xor
push
arpl
iret
sub
pop
lock
inc
xor
jnp
pop
dec
fisttps
push
xchg
mov
push
push
popa
push
or
mov
sub
inc
popf
add
or
push
push
xchg
dec
dec
cltd
push
popf
jns
loopne
test
enter
mov
mov
rcr
sbb
xor
fnstcw
pop
in
push
out
sub
and
stos
xchg
sbb
dec
test
lds
inc
test
xchg
push
in
cmp
dec
jmp
mov
loopne
lahf
aam
popf
loope
pop
lock
mov
stos
sbb
xor
or
add
mov
rcl
inc
add
aad
test
cs
mov
push
sbb
sub
imul
arpl
xor
and
rorl
xor
nop
xchg
xchg
xchg
dec
mov
ret
and
aam
sub
leave
es
jecxz
inc
and
and
cmp
mov
add
push
dec
jge
lret
hlt
ja
mov
test
sbb
mov
pushf
sub
inc
js
out
mov
stos
mov
jbe
mov
push
call
cmp
xchg
adc
ret
hlt
mov
adc
and
iret
dec
mov
lods
mov
mov
jle
pop
repz
mov
add
faddl
adc
lock
xor
fnstenv
cmpsb
cwtl
ljmp
ficomps
cwtl
push
pusha
ret
push
inc
xor
sbb
pop
mov
jnp
ret
lea
cwtl
addr16
sub
out
ret
lcall
ja
dec
adc
adc
and
mov
not
aas
ds
pop
cmpl
push
mov
mov
rolb
cmpsb
cmpsb
test
rclb
lret
aad
or
mov
add
adc
xchg
fsubrl
mov
jns
outsb
pop
cs
cmp
gs
push
cmp
add
test
inc
push
lea
movsb
lds
push
sahf
dec
incb
imul
fstpl
mov
dec
pop
lahf
fsubs
lock
adc
mov
jg
and
fwait
ret
xor
fsts
dec
sbb
ljmp
bsr
jne
jns
add
xor
unpcklps
mov
jae
aad
lods
dec
sub
das
xor
xchg
ss
data16
rolb
mov
mov
cmp
test
mov
jge
fistpll
out
push
inc
jb
inc
repnz
lcall
loopne
cmp
dec
mov
jge
add
add
jmp
jmp
adc
iret
and
movsl
adc
cmp
fwait
dec
popf
movsb
dec
ljmp
sub
jno
or
fst
dec
jns
stc
dec
popa
sub
mov
sbb
and
rorb
jb
and
ljmp
js
fisubrl
in
call
or
mov
cmpsb
add
mov
cmp
into
cmpsb
loopne
jge
test
pop
leave
inc
pop
ror
call
stos
sahf
mov
sbb
jle
or
and
or
scas
dec
xor
jb
in
pusha
dec
mov
add
ror
mov
ror
inc
sahf
lret
mov
stos
mull
sub
rcl
push
adc
lods
sbb
addl
in
adc
adc
pop
push
into
es
cmp
push
rclb
daa
and
or
ljmp
jne
or
sbb
pop
aad
pop
clc
mov
cltd
in
test
mov
addr16
lahf
adcb
or
mov
enter
shll
loopne
scas
call
imul
lds
cltd
imul
leave
mov
in
in
cmp
push
cmovle
push
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
jge
js
out
sarl
sahf
jnp
gs
and
xor
hlt
sbb
xchg
stos
inc
cmc
mov
iret
sub
push
dec
pop
fldlg2
and
pop
mov
jecxz
add
mov
fistpll
mov
pop
mov
in
imul
stos
fdivr
lret
cld
cmpsb
nop
cmp
imul
rcl
fmull
cmp
rorb
mov
hlt
sub
inc
add
andl
adc
xchg
in
mov
jle
mov
pop
ds
pop
mov
js
hlt
xchg
cli
jbe
jmp
mul
out
jge
adc
mov
xchg
aaa
jnp
push
or
shl
push
ds
outsl
jne
fists
lock
add
xchg
mov
mov
adc
ret
jb
push
dec
jbe
xor
loopne
xchg
andl
lock
out
push
cmpsl
out
fwait
xor
sub
xor
into
int3
rcll
jb
movsl
sbb
roll
xor
jl
paddq
jo
cmp
sub
ret
cmc
aad
push
pop
jbe
movsl
jle
pushf
xor
mov
xor
push
dec
movsb
mov
dec
cmpsb
dec
dec
and
js
incl
lods
pop
mull
loopne
andl
bound
lods
inc
mov
movsb
nop
les
gs
mov
testl
sbb
ljmp
fsubs
fcomps
repnz
rorl
sahf
insb
stos
pop
mov
xor
jns
pop
lock
adc
dec
mov
frstor
xor
clc
push
ret
aas
mov
cs
cmp
outsl
inc
sbb
fildll
mov
mov
push
or
xchg
mov
shlb
pop
daa
in
xor
cmp
lock
loope
je
mov
sub
mov
in
mov
push
movsl
jp
xorl
ret
sub
gs
scas
cltd
and
sbb
js
mov
sub
je
loope
lock
loop
dec
fs
push
or
rcrb
addr16
ds
and
iret
xor
leave
mov
rorb
and
jg
pop
jp
ror
enter
cmc
ret
and
and
fmulp
add
andb
fcmovne
hlt
mov
test
aad
push
mov
int
jae
ljmp
scas
shr
sbb
hlt
shrl
pusha
push
mov
sub
adc
fwait
outsl
lret
cmp
dec
stc
clc
shlb
dec
xchg
clc
adc
in
movsb
fadd
xor
inc
lods
dec
sti
adc
stc
xor
inc
in
lret
mov
mov
arpl
mov
cltd
jmp
fbld
cwtl
and
das
lret
or
rcl
jbe
xor
mov
cmp
jae
xchg
mov
pop
sbb
sbb
jl
js
sbb
pop
movsb
mov
imul
pop
rcrb
add
in
sahf
ljmp
push
xchg
cmp
aam
jno
adc
loopne
enter
adc
cld
cmpsb
jns
xor
inc
imul
aad
mov
insb
add
fistpl
loopne
xchg
inc
fimuls
mov
aad
dec
in
lret
mov
mov
or
sar
and
sbb
loop
hlt
push
sahf
xchg
shr
lods
adc
pop
sbbl
adc
cltd
xchg
inc
or
pusha
les
sbb
and
stos
cmpsb
int3
jns
shrl
inc
push
and
jge
loope
cmpsb
enter
xchg
int3
loopne
in
sub
mov
xor
pop
imul
out
inc
cwtl
sti
push
push
sbbb
outsb
insl
add
xchg
sbb
xorl
pop
ljmp
faddl
leave
mov
mov
and
aaa
sub
and
in
mov
jp
and
mov
std
xor
push
jmp
xor
shlb
mov
adc
rcl
das
xor
or
inc
xlat
inc
sarl
xor
xchg
stos
mov
xor
or
insl
inc
imul
pop
lret
xor
outsb
dec
sub
push
mov
mov
push
sbb
dec
ret
clc
pop
adc
inc
lcall
inc
jnp
lods
sbb
xor
mov
sub
jbe
mov
mov
pusha
sub
push
push
xchg
xor
leave
pop
push
mov
jge
mov
xchg
aad
jmp
jge
mov
hlt
jae
inc
adc
cltd
jno
mov
adc
inc
stos
pop
aad
arpl
dec
fdivrs
xor
mov
sub
sbb
mov
mov
or
adc
add
test
jb
add
push
mov
frstor
cmp
xor
test
pop
dec
insb
lds
and
cmp
icebp
xor
push
nop
movsb
icebp
nop
mov
pushf
sub
hlt
inc
aam
xor
jno
pop
push
inc
data16
and
xor
and
mov
jnp
int
repnz
sarb
mov
fidivs
xchg
add
in
jne
inc
ret
inc
loope
mov
push
dec
subb
lds
lcall
sbb
cltd
inc
out
cmp
hlt
sub
mov
mov
imul
decl
push
ret
lahf
or
pop
push
or
inc
outsl
xchg
or
mov
dec
dec
aam
int3
test
add
add
add
fmuls
lahf
mov
push
or
movsl
nop
jo
inc
pop
sbb
ret
or
je
dec
out
ds
dec
std
out
pusha
imul
push
outsl
insb
cmp
or
sti
pop
mov
cli
cli
movsb
lcall
cmp
cld
xor
sbb
push
mov
fwait
ret
adc
jp
mov
ud0
or
jge
jp
aaa
call
je
jp
lods
shr
repz
adcb
lahf
mov
leave
ja
mov
stos
jb
pop
xchg
test
lock
insl
push
pop
loopne
fdivl
addl
test
pop
sub
std
sub
sub
clc
jg
dec
jecxz
loop
popf
xchg
adc
movsl
test
pop
mov
jl
je
ret
movsl
dec
fcomps
xlat
pop
fcoms
lret
mov
inc
insb
sub
in
mov
mov
xchg
pusha
mov
xorl
sub
jmp
mov
into
xor
mov
and
enter
out
fbld
mov
mov
add
fcmovb
iret
mov
aaa
push
das
bound
loope
add
dec
cmp
sub
cld
inc
cmp
in
xchg
sbb
adc
das
insl
inc
or
mov
inc
test
insb
std
push
mov
xor
pusha
shll
rclb
dec
push
xchg
sbb
movsl
std
mov
sbb
and
icebp
jns
push
lcall
adcb
jo
loopne
cld
in
sbb
push
shrb
xchg
mov
sub
sbb
jb
test
out
cmpsb
lea
rcl
fldcw
mov
in
push
call
xchg
mov
fs
sbb
dec
xchg
xlat
pop
les
sarb
shll
loop
inc
push
pop
pop
rcl
sets
iret
mov
mov
or
add
sarb
pop
inc
and
popa
mov
test
sub
in
mov
sub
bound
push
sub
push
test
ljmp
jo
rol
sahf
add
ljmp
fwait
push
inc
dec
push
mov
push
push
jns
dec
mov
stos
adc
fwait
mov
dec
adc
bound
jp
pop
rol
ljmp
push
xor
mov
or
mov
out
push
jmp
movsb
test
adc
hlt
cld
in
push
xchg
rcll
cli
and
push
mov
scas
sub
addb
lock
xchg
and
sahf
jge
test
out
in
dec
xchg
pop
das
push
mov
and
mov
push
lds
sub
inc
adc
and
dec
icebp
xor
addr16
daa
sbb
imul
rol
adc
adc
int
iret
add
inc
mov
xchg
mov
jl
shr
outsl
arpl
inc
cmp
cwtl
sarl
sub
pop
mov
movsb
sub
cmpsl
lds
aam
cmp
ret
movsl
lds
jg
inc
xchg
and
xchg
inc
jb
out
nop
mov
inc
adc
ljmp
loop
test
ja
push
inc
mov
vcvttpd2dqx
aad
imul
pop
jmp
test
cmpsb
sbb
pop
int3
test
sub
or
xor
inc
push
sbb
xor
mov
addb
xor
sbb
sbb
lods
adc
sbb
xchg
or
mov
adcb
push
arpl
aaa
inc
mov
push
inc
mov
jmp
sti
inc
sbb
jae
dec
movsb
and
dec
insb
jae
dec
pop
sub
les
add
cld
lock
pop
mov
pop
cld
in
or
jb
lcall
jae
or
pushf
jae
or
rcr
adc
sub
idivl
and
or
sbb
pop
loope
jo
fwait
addb
push
movsl
sti
mov
mov
maskmovq
idivl
cmp
add
mov
sub
adc
cli
pop
shl
rcrl
dec
stc
mov
js
sub
ret
xchg
icebp
cwtl
sub
pop
push
mov
mov
mov
inc
dec
xchg
mov
lods
xchg
jnp
test
pop
aas
push
push
orl
or
inc
inc
mov
sbb
jnp
dec
sbb
loop
in
rcrb
hlt
cmp
jae
mov
sbb
lods
sub
orb
stos
icebp
sahf
jp
mov
bound
fcmovnu
xor
inc
icebp
push
push
inc
and
scas
dec
mov
pop
jno
test
lahf
out
sub
push
xor
sbb
mov
repnz
inc
xor
sub
jns
mov
push
sub
add
jno
lret
imul
decb
lds
mov
scas
xchg
jbe
mov
or
push
clc
cmp
add
icebp
outsb
movsb
mov
adc
fisttpl
mov
pop
lods
pop
cmp
adc
sbb
pop
jl
mov
jmp
clc
dec
and
call
aam
sbb
push
out
sbb
in
adc
scas
rcrb
int
jge
inc
lret
mov
loop
sub
gs
cmp
jmp
scas
cwtl
or
cmp
push
test
popf
sbb
sub
fwait
pop
icebp
and
inc
and
fwait
adc
and
fisubl
cltd
punpckhwd
lahf
sbb
pop
dec
stos
pushf
push
jmp
out
call
ja
cmp
test
outsb
mov
push
jns
xchg
sbbb
cmp
int
push
test
xor
psrlw
push
lds
scas
mov
push
xchg
sub
inc
jbe
sbb
call
adc
or
jg
loopne
or
jmp
cmp
dec
in
enter
dec
cs
sbb
imul
in
js
and
dec
lret
dec
xchg
add
dec
sbb
mov
mov
push
or
lea
xlat
and
data16
shlb
pop
dec
fsubrp
fdiv
xchg
pop
pop
out
dec
test
mov
lods
mov
in
or
js
push
das
jne
stos
xchg
ljmp
lret
dec
dec
pushf
lret
call
in
out
mov
push
mov
mov
mov
cwtl
cmp
push
cmp
nopl
cs
in
fldcw
ss
out
jg
out
pop
or
daa
in
mov
add
icebp
sub
pop
mov
mov
shlb
fidivrl
pop
flds
fdivr
in
sbb
and
cmp
into
add
out
sbb
fstpl
fsub
bound
lods
add
inc
dec
in
in
push
xchg
cmp
lahf
dec
pop
pop
cmp
push
push
sbb
sub
adc
cmp
lret
lret
pop
ss
and
xlat
cmp
adc
pop
popf
pop
push
stos
mov
dec
push
mov
pop
cmc
mov
mov
xlat
shll
test
nop
inc
in
popa
xchg
and
push
xchg
nop
outsl
mov
insl
pop
call
dec
int3
sbb
mov
push
fstpt
subb
fists
imul
jle
int
inc
add
out
cmp
and
mov
jnp
in
mov
xchg
or
jns
mov
inc
aas
lahf
fstpl
daa
push
insb
mov
jp
pop
push
inc
sahf
out
mov
jbe
test
jp
cmp
sub
mov
das
into
sub
test
pop
mov
ljmp
xchg
sahf
fdivs
mov
dec
int3
jnp
clc
push
jne
jle
adc
and
adc
outsl
repz
add
xchg
fwait
mov
dec
xchg
out
shrl
mov
jno
adc
push
sub
mov
add
rcrb
ljmp
in
andl
sbb
outsl
shl
cmpl
test
pop
sbb
xchg
mov
icebp
and
jb
je
insb
xchg
jbe
pop
xchg
cmp
nop
push
jo
cmp
mov
jecxz
mov
sbb
push
pushf
pop
ja
xor
test
mov
imul
adc
lea
adc
cmp
add
xchg
and
dec
test
insb
pop
fld
shrb
cmp
jge
es
or
movsl
test
test
and
adc
sbbl
loope
cmpsb
jle
cld
and
pusha
jb
pop
cmovle
mov
testb
scas
test
inc
fdivrl
pop
adc
imul
add
dec
mov
inc
push
xchg
xchg
lahf
pop
in
push
xor
mov
add
cltd
jle
in
pop
jne
mov
cli
mov
subl
xor
sub
fsubrl
fsub
inc
push
test
pop
dec
insl
xlat
dec
mov
popa
pushf
jmp
rcll
imul
aad
mov
lret
mov
out
xchg
sahf
jmp
adc
adc
jmp
sbb
int
mov
decl
xchg
mov
mov
loopne
enter
mov
adcl
and
cmp
jne
mov
mov
xchg
lds
adc
dec
cmpsb
xor
rorb
cmp
js
fsubp
stos
insl
lods
fcmovbe
push
dec
in
cmp
push
pop
mov
mov
jg
test
cmc
or
xchg
pop
or
lods
shl
scas
sbb
clc
andb
mov
pushf
int3
cltd
xchg
pop
xor
add
mov
inc
frstor
add
movsl
lcall
push
out
mov
in
insb
jb
push
es
xchg
pushf
mov
in
push
or
xchg
mov
or
xorb
repz
mov
jns
test
lods
aas
jmp
mov
sub
arpl
dec
jl
lret
inc
pop
out
mov
gs
ficomps
repz
into
mov
push
inc
popa
cld
push
cmp
sub
fisubrl
ret
mov
aas
sbb
mov
test
mov
ja
xor
xor
pop
xor
mov
inc
cld
imul
push
sub
dec
in
xor
fs
mov
pusha
push
mov
mov
aas
jecxz
or
hlt
test
or
ds
aam
popa
inc
mov
out
orl
and
jp
jl
cs
pop
ljmp
mov
fnstsw
pusha
add
and
loopne
ret
mov
int
addb
adc
mov
shrl
loopne
fstl
or
imul
sbbb
jp
jbe
out
repz
jle
arpl
jnp
andl
mov
adc
sub
ss
or
xchg
int3
cli
scas
mov
sti
out
xorb
mov
sbb
ror
and
mov
gs
addr16
push
stc
addr16
loopne
sbb
add
add
adc
shll
imul
push
adc
subl
pop
aam
sbb
scas
pop
icebp
les
or
int
pop
repz
or
pushf
test
mov
or
mov
push
mov
ds
sbb
sub
push
adc
xchg
and
mov
dec
inc
xor
arpl
stos
pop
sub
cmc
insl
push
jp
and
aam
in
mov
dec
in
mov
mov
cmpsb
jecxz
or
cmp
call
cld
repnz
or
jecxz
imul
movsl
leave
cmp
hlt
jle
je
xchg
jo
pop
jmp
sub
mov
cwtl
jb
mov
cmpsb
and
bnd
pop
aam
call
cwtl
hlt
add
repnz
sub
or
shrb
pop
imul
test
or
imul
hlt
decl
push
jg
hlt
xchg
cwtl
dec
aad
cmp
lods
inc
test
outsl
jne
mov
mov
lcall
and
pop
in
sbb
in
lahf
xor
mov
mov
cli
lret
rcrl
negb
jle
or
rorl
fistpl
cmpsl
insb
aaa
rcl
or
cmpsb
mov
daa
xchg
dec
js
mov
cwtl
mov
pop
and
ja
sub
mov
sub
lock
add
adc
and
mov
mov
push
cmpsl
ret
mov
adc
add
js
cmpl
add
and
movsl
xchg
das
test
negl
cmp
push
sbb
xchg
or
fdivr
jo
jl
int3
ret
ds
call
dec
iret
imul
jb
or
sub
and
daa
push
cmp
cmp
pop
cs
jmp
call
fs
jle
insb
dec
add
lods
stos
jp
ljmp
lret
inc
inc
inc
in
and
add
lahf
xor
push
push
inc
in
mov
test
insl
clc
cmpsb
mov
mov
gs
pop
xchg
sarl
fcomp
push
clc
leave
fs
adc
hlt
loop
clc
les
jno
or
push
xlat
dec
push
xchg
fstps
xchg
push
add
mov
icebp
mov
jns
aad
in
or
loopne
mov
mov
aad
lret
adc
shr
adc
ja
cmp
mov
ljmp
lcall
icebp
imul
stc
stos
push
fstpt
cmp
and
xor
sub
push
movsl
arpl
push
je
cmp
cmp
insb
xchg
ljmp
cltd
ja
sub
hlt
jge
adc
bound
jo
cmpsb
fcoms
or
xchg
dec
adc
fwait
xchg
sub
mov
outsb
xlat
sub
in
ret
pushf
lds
js
mov
dec
test
dec
xor
jge
dec
fistpll
and
mov
xchg
cmp
enter
and
leave
lret
pop
gs
mov
aad
xor
and
xchg
and
ret
cli
rol
sti
dec
mov
jecxz
cmp
test
xchg
adc
mov
repz
and
aas
pop
jl
arpl
push
in
lahf
mov
push
add
or
mov
hlt
ja
push
imul
imul
cs
in
ljmp
sub
into
es
xor
jmp
xchg
jo
sbb
nop
sub
sbb
jne
jb
xchg
mov
xor
jmp
cs
inc
add
pop
dec
fdiv
sbb
or
xor
cmp
or
jmp
iret
test
xor
pop
xor
out
xor
pop
paddsb
sbb
xchg
xchg
lret
pop
and
jb
negb
and
jne
aaa
fcoml
push
pop
fcmovnbe
cmp
dec
lret
add
ljmp
add
lcall
mov
and
sarb
push
pop
inc
outsb
sbb
mov
cli
mov
pop
cmp
cmpsb
add
add
xchg
jle
xor
dec
xchg
add
xor
int
je,pt
clc
adc
dec
int
pop
push
jle
out
inc
loop
and
adc
mov
jno
sbb
sub
add
int3
push
cltd
dec
lret
xchg
xchg
and
loope
fldl
shlb
mov
sbbb
mov
add
mov
test
adc
cmc
rcrb
stc
les
pop
jg
jp
mov
mov
fisttpl
nop
xor
loop
mov
lret
out
mov
jne
sahf
add
or
js
sbb
pop
dec
cld
nop
cmc
mov
xchg
or
icebp
or
ljmp
scas
rorl
and
inc
cmpsb
jl
bound
xor
mov
call
pop
push
out
push
pop
les
add
push
sbb
shl
andl
mov
sub
mov
mov
mov
xorl
into
stos
cltd
mov
xor
bound
adcb
mov
jnp
inc
repz
pop
jmp
sti
in
jl
lret
enter
and
push
scas
ljmp
push
lret
mov
push
cltd
fists
sub
pop
loope
mov
push
sub
jecxz
mov
xor
mov
adc
js
lock
cwtl
xlat
dec
cmp
mov
pop
js
cmp
pop
mov
jo
inc
outsl
and
xchg
sahf
or
pushf
les
icebp
outsb
mov
dec
cld
push
or
push
inc
rcr
pop
and
jl
int
lea
outsl
push
std
iret
data16
push
push
sbb
and
loopne
insb
mov
arpl
sub
pushf
test
dec
pop
popf
jmp
xchg
or
pop
add
dec
rcr
add
xchg
pop
push
pop
test
inc
mov
dec
ss
add
mov
das
sbb
ljmp
int
xchg
xchg
in
jg
ds
ret
sbb
mov
daa
xchg
sti
mov
sub
xor
xchg
sub
inc
add
add
mov
lock
sbb
stos
test
testb
out
push
or
imul
or
mov
mov
cmp
inc
xor
stos
jo
call
mov
adc
mov
mov
outsl
call
cwtl
add
jle
dec
mov
xchg
sub
aas
xchg
jecxz
loop
lahf
cmp
gs
mov
test
icebp
cmp
rcr
push
mov
loop
nop
lret
push
mov
xor
in
add
xor
ds
ljmp
outsb
or
inc
add
and
lcall
xchg
movsb
loopne
leave
push
movsb
ret
fcom
mov
inc
fs
imul
mov
jae
inc
sub
cmp
movsl
fmull
inc
imul
outsl
xchg
jbe
scas
inc
mov
into
fidivl
push
int3
testl
outsl
jg
push
shll
sbb
and
movsb
out
fnstcw
add
mov
icebp
loopne
mov
pop
ret
mov
out
shll
leave
pop
or
cltd
jne
ljmp
gs
jmp
xchg
pusha
sub
shl
aam
push
mov
lods
xchg
xchg
aam
sub
les
int3
pusha
lret
clc
pop
out
test
mov
push
or
and
mov
inc
jmp
fisubrl
add
lea
pop
inc
mov
xchg
stos
js
dec
addl
pop
xchg
out
push
mov
pusha
loopne
test
ds
jns
xchg
add
dec
and
push
adc
popa
fdivrs
and
cmp
sbb
sbb
sarl
pop
out
pop
insb
push
ja
mov
mov
das
cmp
jp
negb
fsts
sti
cmp
psadbw
imul
je
lcall
adc
ja
xor
repnz
mov
cli
adc
ja
movsl
dec
sub
adc
std
jg
or
push
inc
push
jecxz
sub
xchg
mov
dec
nop
rolb
popf
fistps
dec
push
cwtl
xchg
fisubl
in
adc
add
xor
mov
adc
fs
or
jge
aam
mov
rcr
jg
test
pop
call
push
bound
mov
pushf
test
ret
jge
call
lds
imul
out
lret
popa
ss
mov
hlt
pop
xor
in
mov
jmp
add
jo
push
jne
in
pusha
inc
sahf
rolb
push
add
pop
push
daa
or
jle
xchg
adc
jp
and
cmp
lods
dec
lcall
rol
sbb
sbb
lock
ljmp
jecxz
pop
jl
fwait
push
cwtl
enter
xor
test
sarb
out
mov
mov
cmp
jo
and
pop
mov
dec
or
dec
mov
xor
test
sbb
fwait
jle
cwtl
lret
aaa
jmp
push
xchg
mov
rorl
scas
in
cltd
jb
pop
loopne
repnz
test
scas
dec
mov
push
jae
dec
ds
ret
mov
push
pop
fisttpll
fs
fcoms
icebp
cmp
fsub
js
fmuls
xchg
mov
add
push
jecxz
mov
adc
mov
imul
or
or
xor
xor
mov
pop
mov
int3
sbb
mov
mov
sbb
fchs
push
cmpsb
mov
das
pop
repz
jae
orl
xor
icebp
clc
std
insl
mov
gs
adcl
mov
and
loop
rolb
adcb
adc
mov
icebp
rcl
jmp
lock
xor
rcrl
ret
imul
repz
pop
lods
incl
jecxz
mov
enter
jp
rclb
mov
fs
hlt
fcmovnu
pop
std
pop
xor
inc
lods
fbstp
popf
daa
push
rcrl
es
jg
adc
push
cmpsb
or
jle
cmpl
mov
movsl
inc
lret
xchg
push
jmp
sti
cmpsb
gs
out
jge
mov
xor
jmp
ds
xchg
mov
xchg
mov
inc
pop
or
and
mov
adc
les
jecxz
int
adc
je
outsl
and
insb
das
sbb
push
pop
dec
and
cs
and
fbstp
cmpb
cmc
cmp
pop
pop
xor
inc
aad
test
fcoms
call
shlb
and
push
push
mov
enter
je
into
lret
into
popa
jo
or
inc
xor
int
loopne
sub
iret
inc
mov
push
mov
push
xor
cli
out
fcompl
mov
dec
mov
addr16
and
jo
xchg
dec
xor
fs
inc
sti
push
inc
cmp
xlat
pop
xorl
clc
pusha
pop
and
data16
or
pushf
sbb
cmpsl
sbb
iret
cmpb
fldcw
and
clc
scas
pop
stos
mov
imul
lock
mov
mov
movd
sar
push
and
test
jbe
sti
mov
stos
xchg
pop
cmp
mov
addr16
jle
wbinvd
daa
cmpsb
pop
mov
sub
mov
ja
sub
xor
rcrl
mov
in
rolb
sbb
and
cwtl
int3
xchg
gs
loop
sub
mov
aam
mov
aad
jg
mov
jns
call
test
mov
cmpsl
push
xor
dec
in
xchg
fcoml
inc
cmp
stos
fwait
sub
setns
out
and
sbb
xchg
push
mov
xchg
cld
shlb
sub
shrl
arpl
add
xlat
xchg
mov
sub
leave
or
jmp
ds
sub
dec
add
gs
and
mov
insb
in
add
add
sbb
add
out
xchg
mov
mov
bound
cmpsb
and
ss
mov
cld
mov
ljmp
sbbb
or
outsb
or
sbb
and
and
sub
das
mov
cmpsb
das
fwait
aas
push
jle
es
les
in
fisttps
lods
test
cltd
mov
push
inc
jno
push
fdivr
xchg
sub
ror
xchg
ficoml
cmovo
pop
mov
out
dec
pop
lods
fldt
outsb
rcr
popf
add
out
leave
test
cmpsl
cmpsl
mov
mov
pop
pushl
loopne
sti
mov
or
inc
sbb
mov
loop
push
cmp
sub
setae
mov
mov
mov
test
and
pop
jno
inc
pop
xchg
xchg
inc
mov
pop
xchg
arpl
enter
out
fs
in
jo
mov
adc
fadds
fidivrs
mov
fidivs
mov
mov
and
movsb
or
add
xor
and
or
int3
sbb
sub
mov
jl
loopne
xchg
mov
test
imul
jb
jg
inc
dec
stos
pop
and
daa
push
repnz
add
jo
scas
fildll
jmp
push
inc
dec
stos
sub
jl
mov
insl
lea
test
lcall
and
pop
outsl
inc
jae
push
add
jo
movsl
mov
jae
sbb
cmp
jmp
insb
call
or
jecxz
outsb
out
sub
adc
xchg
and
push
sti
popa
cmpsl
xchg
xor
cmpl
and
fldenv
in
xor
mov
sbb
iret
aad
inc
mov
mov
popl
push
xchg
cwtl
loop
cli
mov
xchg
mov
fmull
test
xchg
adc
xchg
iret
lcall
or
inc
psubusb
mov
loopne
mov
ljmp
out
lret
xor
ljmp
in
mov
adc
fwait
xchg
push
iret
pop
pop
xor
jge
cmp
cmp
push
jg
sbb
sbb
xchg
leave
mov
imul
stos
xor
dec
sub
int
leave
xchg
mov
lods
dec
cs
int
jnp
sti
jl
dec
sub
addb
xchg
sub
idivl
ds
out
or
clc
mov
push
imul
sbb
nop
rclb
lds
cli
es
sbb
mov
and
pop
clc
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
into
or
sahf
jnp
jns
stos
das
push
shlb
pop
add
stos
lret
adc
sbb
aad
mov
xchg
rcrb
jp
inc
icebp
push
and
mov
sbb
outsb
pop
push
lahf
mov
dec
daa
dec
mov
cmp
adc
pop
jno
gs
out
negb
pop
sub
mov
test
xchg
mov
jle
stos
cmpl
xchg
jno
xorl
jns
xor
iret
push
dec
mov
cwtl
outsb
mov
stos
and
or
mov
sub
cmp
call
jge
mov
and
pop
stos
mov
gs
nop
fdivrs
adc
mov
add
jno
hlt
cmp
testl
pop
xor
cmpsl
rcrl
pop
xchg
sbb
jno
xor
add
xor
pop
scas
mov
push
dec
cmp
test
jmp
bound
enter
insb
dec
mov
push
jp
dec
aaa
add
movsl
fists
dec
addr16
add
aad
adc
pop
mov
xchg
ljmp
push
ss
jl
jne
push
cli
lahf
lods
lods
lcall
cwtl
mov
js
xchg
mov
push
push
dec
fadds
and
loope
push
fdivrs
shrl
bound
in
cs
pop
out
or
pop
ret
xor
fstpt
push
sbb
sbb
cs
fiadds
jg
test
xlat
icebp
sarl
cmp
leave
mov
stos
inc
mov
or
popa
lret
pop
mov
xchg
aas
lods
jo
cmp
pop
imul
mov
inc
fldcw
or
shl
clc
jge
mov
sub
psrlw
xchg
test
rolb
pop
clc
xlat
lahf
mov
sbb
movsb
mov
add
pop
fdivrs
mov
out
sbb
mov
bound
adcb
loop
mov
sbb
xorb
dec
sti
inc
ja
rep
repnz
pop
mov
aas
jmp
pop
orl
mov
or
fcomi
fucomi
sbb
ret
sahf
outsb
in
push
lods
rclb
push
das
das
leave
hlt
mov
inc
fs
loopne
js
shrb
mov
scas
xchg
inc
jne
lcall
jl
push
hlt
cwtl
lret
popa
adc
dec
fiadds
in
clc
int3
bound
cmp
lahf
dec
jl
cmpsb
cmp
enter
outsl
sbb
push
mov
push
cs
jo
xchg
mov
mov
jle
addl
inc
adc
cld
into
mov
jne
push
inc
or
fcoms
int3
pop
jle
outsl
ret
movsl
fidivrs
inc
jae
addb
mov
not
pop
addr16
addl
in
mov
pop
cld
lret
fucomp
mov
add
xor
cwtl
cltd
adc
and
subb
stos
xor
bound
clc
icebp
and
fisubl
jp
fs
xor
add
lcall
insb
test
lock
loopne
aaa
push
mov
stos
mov
xchg
ljmp
push
jl
inc
mov
xchg
pop
std
cld
scas
ror
or
ret
roll
gs
outsb
mov
lahf
outsb
add
mov
fs
shl
push
xor
stc
movsl
fxam
mov
mov
adc
mov
inc
fcmovb
adc
push
les
dec
mov
test
negb
addr16
cmp
in
loope
adc
push
int3
jge
mov
andb
xor
push
ja
xor
adc
sbb
inc
jecxz
and
and
fimull
leave
aas
cli
testl
pop
inc
mov
push
xchg
xorl
ret
mov
shr
mov
shlb
or
sub
leave
mov
outsb
ljmp
divb
adc
outsl
cmpsb
test
adc
jo
sbb
cmp
arpl
aaa
data16
mov
int
sub
mov
fdivrl
or
mov
sub
mov
jno
sub
loope
jae
repz
les
mov
std
aaa
jae
shrl
dec
cmp
inc
cmp
pop
pushf
scas
jbe
adc
lcall
leave
mov
add
cld
mov
aaa
in
cltd
cmp
or
pop
scas
adc
mov
add
pop
movsl
xor
dec
hlt
mov
adc
push
out
dec
cmpb
sbb
mov
ja
push
pop
xchg
pusha
rcrl
cmp
mov
pop
icebp
mov
mov
jo
inc
xchg
loop
inc
push
and
mov
orb
mov
sbbl
pop
ds
pusha
in
inc
call
cmp
push
pop
ret
fldl
mov
popa
sbb
sti
leave
inc
clc
in
dec
dec
rcl
inc
cmp
or
xchg
sub
jp
dec
adc
xchg
sbb
mov
js
xchg
test
and
bound
rcrl
add
sub
mov
sahf
pop
repnz
btr
pop
rorb
sbb
hlt
lock
xlat
jmp
or
in
xchg
pop
cmc
adc
jns
aaa
fsubrp
out
scas
call
orb
dec
mov
xor
cld
test
aad
int
pop
mov
ja
sbb
in
jne
pusha
mov
pusha
dec
scas
pop
sbb
push
xor
jbe
xchg
mov
push
adc
jns
and
jl
mov
das
and
daa
push
fisubrs
mov
sbb
mov
ja
adcb
xor
add
push
mov
scas
xchg
jmp
mov
je
pusha
arpl
pop
xchg
ss
imul
dec
dec
sub
lods
mov
icebp
and
lcall
imul
or
test
dec
adc
fldt
adc
mov
imul
mov
dec
inc
out
push
adc
scas
loopne
rcll
paddb
adc
adc
shl
xor
loop
add
dec
xchg
sbb
les
lcall
aad
les
test
hlt
xchg
insb
or
xchg
in
mov
negb
jbe
lcall
sub
icebp
popf
lahf
int3
mov
repnz
pop
lret
mov
fdivl
ds
lahf
sbb
sub
loopne
push
jns
imul
cmp
mov
repnz
jne
cli
sub
sub
sub
mov
jge
mov
ret
or
push
xor
dec
mov
lods
inc
outsb
dec
add
or
scas
pop
push
mov
punpckhdq
push
and
dec
into
ret
add
sub
fstpt
add
jecxz
pop
pop
sbb
cmp
call
mov
jecxz
xor
fisttps
mov
pop
insl
lods
mov
inc
ds
in
mov
and
jl
sub
jle
out
fidivrl
cmp
mov
mov
sbb
pop
mov
std
push
push
ja
hlt
mov
in
outsb
xor
cld
cmp
cmc
jg
scas
int
std
ds
mov
or
aam
dec
mov
mov
or
fisttpl
inc
fs
popa
imul
push
mov
sub
mov
sti
insl
inc
or
pop
cltd
sbb
inc
mov
jno
mov
inc
sub
sub
dec
jle
pop
out
mov
inc
jmp
call
cltd
push
decb
enter
mov
jb
sti
mov
jmp
jno
fisubrs
dec
movsl
mov
xor
std
cltd
fstl
mov
and
adc
out
or
out
loopne
mov
mull
mov
pop
and
xchg
lock
pusha
xor
adcl
popf
scas
jp
nop
push
xor
mov
les
mov
cmp
xlat
test
test
sarb
mov
rorb
push
cmp
jle
ret
lcall
xchg
xor
stc
int3
xor
loopne
scas
pop
lea
push
sub
jmp
push
push
iret
add
cmpb
bound
jmp
sbb
xchg
push
mov
adc
mov
sub
dec
movsl
push
imul
cmp
sti
and
add
pop
mov
sti
hlt
cmp
fmull
movsl
test
pop
or
jno
push
pop
lahf
subl
xor
adc
notb
sub
jns
outsl
lahf
and
sub
lahf
sub
sbb
into
adc
mov
jbe
push
lods
and
adc
lods
xchg
add
jl
or
push
imul
sub
shrl
icebp
inc
xchg
addb
rorl
lret
testb
mov
call
mov
stos
push
int
jbe
lret
fdiv
xchg
repnz
sbb
fadd
push
mov
lods
inc
inc
sbb
xor
pusha
stos
sti
xor
xchg
bound
mov
xor
push
add
jne
outsl
dec
bound
mov
test
leave
sbb
leave
ficoms
sbbl
inc
outsb
frstor
sub
dec
sub
sahf
sub
in
sub
xchg
fs
clc
cmp
pop
mov
gs
mov
adc
xorl
fiadds
pop
adc
lods
movsl
ror
jns
pop
dec
lock
inc
pop
cmp
jge
cmp
ja
daa
dec
sub
imul
jp
add
fsubs
ss
cmc
or
cmp
and
lret
arpl
xchg
xor
lock
js
fs
pop
bswap
inc
inc
mov
xchg
loopne
insl
sub
pop
pop
mov
fnstenv
jmp
daa
testb
lret
sub
in
scas
cltd
roll
aam
xchg
add
loopne
sub
jle
and
sbb
sub
idivb
test
js
and
js
or
xchg
stc
xchg
out
movsb
or
decl
in
jmp
insb
repnz
pop
pop
sbb
xor
mov
jae
mov
sti
int
lds
cltd
or
fiaddl
pop
leave
aam
loope
int3
cmpsl
cmp
fidivl
jmp
lock
mov
jne
add
lock
movsl
mov
dec
dec
into
dec
push
repz
popf
in
cmpsl
xchg
cwtl
sti
dec
dec
mov
in
imul
jne
and
sub
into
mov
adc
sub
call
dec
fcoms
mov
fnstsw
mov
jne
sub
jb
xor
and
mov
cmp
mov
imul
pop
lcall
xchg
movsb
repz
cmp
fxch
lock
pop
lret
aad
or
xor
pop
cmc
std
cld
sbb
dec
daa
add
xlat
adc
xor
shlb
dec
test
out
ljmp
inc
out
sub
cmpb
xor
addb
fidivl
add
adc
xor
and
loope
xor
test
cmc
arpl
fsubrl
subl
clc
push
sub
addr16
ljmp
ja
and
aaa
mov
inc
sahf
jl
fiadds
or
jbe
and
sbb
xor
push
adcb
lods
nop
push
les
jl
in
inc
xchg
mov
jp
push
cmp
sub
sbb
icebp
jp
ret
hlt
fbld
int
leave
leave
in
push
xchg
sbb
add
push
aas
out
sbb
stc
scas
dec
sub
cs
jae
sub
jo
imul
push
dec
stos
xor
loopne
roll
mov
in
push
test
sti
xchg
push
adc
icebp
pop
xor
pop
sbb
or
inc
add
aaa
and
nop
cmp
jo
ja
mov
cmc
aas
mov
and
adc
adc
filds
lret
and
mov
jp
lret
mov
out
cld
stos
stos
cli
shrl
xchg
push
xchg
lahf
jnp
addr16
mov
in
sbb
cs
mov
test
test
decl
test
xchg
push
aaa
mov
fstl
mov
and
jbe
lds
pop
outsb
cmp
insl
jae
int3
adc
cltd
dec
inc
movl
add
cmpsb
sahf
mov
mov
enter
pop
fisttps
xchg
xlat
arpl
popa
nop
test
cmc
rcrl
xchg
into
jb
fcoml
xor
push
inc
sar
scas
xchg
int
lods
sub
fwait
and
outsl
sub
jbe
in
mov
mov
jbe
mov
dec
pop
les
movsl
jge
hlt
pop
jp
lahf
jo
and
addb
in
mov
sbb
or
push
inc
mov
dec
rcrl
or
cmpsb
xchg
cmc
scas
mov
pop
push
fnsave
adc
in
push
mov
lods
xorb
jne
mov
andb
xor
push
inc
pop
pop
fisubs
mov
cmc
mov
jo
ljmp
or
mov
xlat
inc
popf
stos
lcall
loopne
cmp
sbb
leave
and
lret
or
jp
push
jge
aam
mov
outsb
icebp
popf
pusha
out
mov
out
popf
sbb
inc
dec
adc
aad
ret
sbb
fildll
fwait
xchg
or
cmp
sub
arpl
add
inc
lret
lea
stc
or
lret
je
lods
ret
stos
enter
dec
shufps
add
ret
test
in
call
add
pop
dec
jno
insl
sbb
pop
mull
mov
mov
cmc
or
test
sahf
repz
pop
jp
iret
and
xor
dec
mov
das
mov
dec
jmp
lret
inc
mov
jae
or
hlt
push
adc
xchg
lock
popa
mov
and
pusha
fcomp
or
add
jo
adc
mov
and
xor
clc
jge
add
add
xchg
iret
lahf
jmp
sbb
scas
rolb
fadd
sbb
loope
ss
mov
andl
mov
test
and
lods
or
fwait
das
call
xchg
loop
add
fldl
hlt
lock
push
sub
pop
aad
inc
mov
notb
jge
add
adc
lcall
mov
push
xor
sub
add
nop
mov
idivb
ret
jae
and
dec
subb
hlt
rcl
mov
test
sbb
jb
pop
add
sbb
movsl
aam
push
dec
pop
out
daa
icebp
pop
das
xchg
outsl
int3
dec
sarl
mov
movb
ss
push
cmp
int3
mov
test
jne
enter
or
es
ffree
pushf
into
inc
lock
or
adc
mov
daa
mov
fisttpl
xor
lock
pop
pusha
fildll
enter
lcall
mov
push
push
sbb
sub
mov
mull
add
xor
arpl
cmp
xor
adc
cmpsl
sbb
mov
sbb
jl
cmpsb
jo
mov
mov
pushf
jae
jmp
push
dec
add
fnstenv
dec
sbb
in
mov
cli
int3
inc
push
mov
ja
sub
xchg
ficoms
jae
mov
cmp
loopne
in
xor
pop
rorb
packuswb
fs
jl
movsb
add
mov
mov
rcr
fistl
sub
mov
sti
or
mov
fisubrl
decb
mov
popf
add
pop
and
pop
js
outsb
inc
shll
or
inc
fnstsw
ret
add
sbb
pop
sbbb
divl
ja
test
or
mov
ret
cmpsl
sbb
clc
loope
hlt
sub
fists
call
in
sbb
xor
ljmp
sbb
int3
sbb
sub
and
push
mov
dec
hlt
add
push
sub
repz
adc
xchg
xor
mov
cmp
xchg
adc
or
and
pop
adc
or
push
in
in
imull
std
imul
mov
mov
push
icebp
xchg
and
jo
and
mov
push
xor
cmp
mov
mov
and
push
sahf
das
adc
xchg
int
cmp
pop
mov
xchg
jns
pusha
mulb
sub
cs
sbb
data16
dec
xchg
bound
ja
popa
cmpsb
pop
jmp
movsl
push
stc
cmpsb
notb
push
xor
pop
push
jno
sub
hlt
pop
sub
hlt
mov
stos
das
shrl
int
std
mov
jp
pop
jne
fpatan
daa
ja
aam
pop
daa
mov
test
pop
push
negl
push
ja
sbb
imul
sub
repz
mov
adc
push
jnp
test
mov
inc
and
sbb
cmp
divl
sbb
dec
mov
jae
insb
push
xor
xchg
insw
sub
sub
movb
call
gs
and
add
or
int
roll
pop
jl
xchg
sahf
shl
lds
mov
sbb
adc
imul
pushw
cmpsl
mov
sub
xchg
arpl
cmp
out
sbb
sbb
jne
push
mov
out
sub
fdivl
jecxz
mov
enter
push
ret
xor
mov
ss
daa
out
ja
bound
inc
jae
or
xchg
loopne
imul
adc
in
pop
or
jnp
andl
mov
loop
add
cmpsb
mov
dec
mov
add
stos
adc
pop
ss
or
pop
dec
or
aas
mov
stos
sub
orl
sti
out
movsb
inc
aad
mov
xchg
ljmp
and
mov
add
gs
in
pop
xor
imul
fsts
addr16
shlb
fidivrs
adc
jge
jge
inc
sar
pop
jae
int3
aaa
adc
aaa
sbb
mov
xchg
fidivs
dec
xchg
lock
mov
mov
xor
aaa
ja
adc
push
add
mov
fldl
jp
cli
pop
jg
and
xchg
hlt
jns
cs
xlat
add
inc
leave
inc
repnz
or
and
dec
adc
sbb
pop
out
jbe
inc
mov
mov
jae
fld
adc
mov
aam
adc
xchg
insl
lock
push
aas
xor
push
repnz
cld
jnp
or
inc
push
push
scas
loop
popa
and
mov
mov
pop
add
adc
cmp
lret
mov
add
xor
mov
rcrl
dec
lds
call
inc
xlat
lret
out
push
ds
out
movb
adc
daa
cmp
int
dec
dec
pop
lock
popf
pop
sbb
mov
daa
jbe
and
xchg
push
xchg
pop
xor
push
push
inc
adc
jecxz
lock
jmp
sbb
xchg
fcoml
sub
mov
inc
adc
hlt
jle
xor
pop
mov
pop
mov
iret
xchg
push
dec
mov
mov
sub
repnz
int
mov
push
jae
cmc
data16
leave
mov
xchg
lods
xchg
fwait
jnp
add
push
scas
push
lock
add
sbb
mov
enter
in
rolb
inc
inc
mov
xlat
push
insl
or
fimull
mov
xchg
rorb
sub
pop
sbb
lea
jb,pn
testl
or
inc
test
sbb
je
fistl
and
jae
cwtl
dec
cli
push
fwait
imul
cmp
stos
imul
xchg
mov
fnstenv
call
lods
sub
inc
or
dec
repz
ja
cmpsl
push
lds
and
mov
enter
ret
jl
jge
jbe
ljmp
add
inc
add
mov
or
data16
int
pop
pop
xchg
push
bound
adc
inc
jo
xor
or
sub
int
loope
ss
popf
arpl
pop
dec
rcll
sub
loope
pop
aas
xor
out
jl
fiadds
inc
cmpsb
push
ret
sub
xor
add
sbb
mov
and
js
mov
cmp
cmpsb
clc
sub
aaa
std
mov
std
popa
bound
int3
add
aad
dec
arpl
sahf
fimuls
sub
and
xor
xchg
cmp
mov
popa
aaa
mov
xlat
sti
push
cmp
sub
inc
add
pop
jo
imul
mov
pop
ret
pop
loopne
shl
push
aas
ret
or
sub
jge
arpl
sub
xchg
test
cld
dec
push
sub
mov
jae
and
xchg
int3
xchg
cmp
cmp
or
cwtl
cs
ret
lock
push
fildll
addr16
xchg
mov
xchg
sbb
into
and
push
fmul
cmp
fyl2x
add
add
cmp
repz
cmpsl
pandn
sbb
push
pop
jmp
inc
mov
add
push
dec
adc
xchg
fldl
and
and
mov
test
aam
mov
add
movsl
pop
mov
mov
popa
imul
and
je
int3
nop
cmc
nop
cli
push
jmp
push
sub
lds
mov
push
leave
aam
in
scas
pop
add
movsb
push
ret
sub
add
hlt
adc
nop
std
mov
jbe
mov
jno
call
and
cli
les
ja
inc
pop
out
pop
or
imul
lcall
mov
mov
ljmp
cmp
enter
and
jl
movsl
pushf
pusha
cltd
ja
lahf
inc
jge
jb
mov
inc
ret
repz
imul
jmp
insb
jmp
in
sahf
jge
lock
xor
xor
imul
mov
inc
mov
aas
stos
les
adc
adc
adc
rorb
push
push
jl
pushf
in
fsubr
jp
mov
test
mov
in
push
pop
push
xchg
in
jnp
out
daa
jp
xchg
clc
js
enter
aam
fcmove
icebp
gs
cmp
pusha
push
cmp
cmc
ret
jbe
pop
push
jo,pn
jne
fldl
in
cmp
mov
ret
jno
es
mov
test
sar
add
jg
lods
imul
mov
imul
xchg
cmp
jecxz
aaa
in
xchg
mov
jge
enter
dec
lahf
xor
push
jecxz
call
leave
inc
cld
pop
mov
shl
dec
movsb
jmp
sub
insl
jns
push
fmul
aad
pop
or
xchg
dec
stos
adcb
popf
xchg
dec
mov
inc
stc
mov
mov
in
push
cwtl
dec
sub
sub
addr16
or
into
dec
je
mov
and
adc
pusha
inc
js
add
xor
and
out
sbb
and
dec
aad
aad
test
xorb
jge
roll
mov
dec
mov
push
into
out
fimuls
pop
sub
aas
sub
dec
mov
subl
iret
dec
push
inc
dec
hlt
push
movsb
insb
je
fstpl
inc
dec
xor
stc
cmpsl
test
push
sub
lock
pop
out
dec
movsl
dec
fcomps
in
dec
lret
or
inc
xchg
mov
pop
mov
sbb
es
cwtl
mov
adc
aad
cwtl
mulb
dec
notl
loope
testl
dec
sahf
pop
rcll
sbb
xor
sub
adc
fdiv
push
push
lods
cmpb
sub
subl
mov
repz
ret
notrack
jge
push
and
cwtl
movsl
xchg
and
push
lock
sub
or
mov
sti
xchg
in
in
add
sub
adc
pop
or
inc
and
lds
add
mov
xchg
andb
lret
loop
mov
shlb
aaa
cli
mov
sbb
inc
aas
enter
adc
mov
pusha
cmp
pop
movsb
xor
mov
push
cwtl
inc
icebp
jbe
push
lock
popa
push
cmpsb
nop
stc
gs
mov
insb
js
push
cs
aas
inc
pop
es
out
fiadds
sahf
sbb
jmp
sub
movsb
fstpt
pop
fisttpll
ljmp
xchg
fcmove
push
aad
push
ffree
mov
repnz
and
jp
sbb
xchg
fistl
inc
into
mov
xchg
mov
mov
imul
ror
xchg
inc
sbb
pop
in
lcall
jle
in
dec
mov
arpl
cli
in
lret
sbb
movsb
mov
leave
test
and
push
xchg
scas
pop
jle
and
or
cmpsl
dec
mov
rolb
sub
rcl
pop
cmc
add
cmpb
out
xchg
mov
mov
cmc
push
ret
sbb
mov
iret
cmp
mov
pop
adc
shrb
and
nop
scas
adc
jg
jno
pop
lock
pusha
mov
cmp
push
fdivl
push
mov
aaa
js
mov
mov
mov
test
das
aad
and
inc
repnz
dec
fwait
hlt
div
sub
and
push
stc
clc
pushf
imul
mov
fsubrl
loopne
add
iret
jge
testl
fisttps
cld
out
or
addr16
jle
sub
mov
les
xchg
loopne
nop
shrb
and
dec
movsb
mov
xchg
pushf
mov
push
bound
loop
js
mov
das
aas
jge
lods
mov
std
xchg
or
mov
lret
xchg
gs
inc
outsb
push
in
sub
out
into
adc
outsb
inc
cwtl
test
arpl
xor
fs
nop
popa
mov
push
mov
sub
ror
jno
sbb
mov
cli
int
ss
mov
test
stos
bound
cmp
dec
inc
out
fstpt
cmp
push
cmp
jnp
mov
cmp
mov
in
cs
jns
pop
mov
mov
inc
filds
inc
jge
repnz
ljmp
sti
sbb
push
and
add
sbb
jo
xor
sarl
pop
xchg
add
test
fstpl
xor
push
push
dec
or
inc
add
or
add
fwait
jp
jno
aam
imul
ret
pop
lcall
adc
inc
data16
mov
cmpsl
xchg
push
lret
mov
enter
jae
sub
jle
mov
cli
dec
mov
sar
sbb
popa
into
popa
dec
mov
fmulp
jmp
lret
icebp
ficoml
shrb
outsl
mov
pop
dec
sahf
xchg
sub
cmpsb
dec
scas
in
push
push
xor
and
sarb
xchg
imul
mov
pop
jns
pushf
and
dec
sahf
lret
add
fsts
inc
mov
adc
lea
sbb
sub
and
xchg
cmc
notl
repz
dec
jl
sub
gs
movsb
fwait
jmp
ss
mov
repz
jmp
pop
push
imul
xor
pop
test
dec
sub
cwtl
mov
adc
add
cmc
es
mov
pop
iret
pop
aas
xchg
dec
inc
jne
mov
jecxz
jmp
test
mov
mov
mov
inc
lods
rolb
daa
in
gs
movsl
adc
je
jbe
mov
into
xor
test
or
aam
out
add
push
lret
fstl
cmpb
je
call
inc
imul
fs
xchg
push
sar
adc
mov
cmp
test
jle
add
pop
cs
dec
loop
pop
imul
test
pusha
push
jb
cmp
pushf
cltd
mov
cltd
fnstcw
xchg
sub
js
xor
cmc
adc
add
lock
lret
bound
mov
es
xchg
adc
or
cli
cmpsl
and
push
mov
push
scas
daa
and
repnz
insb
or
lock
push
or
pop
test
mov
das
iret
cli
inc
jge
cmpsb
enter
add
mov
adc
pushf
or
pop
pop
mov
jae
and
xor
sbb
cmp
outsl
xchg
mov
das
jb
jl
push
mov
cmpsl
imul
repz
inc
inc
and
incb
cmp
jo
out
xchg
mov
jbe
cmp
jne
sub
pop
or
in
subl
shll
xchg
mov
cmpsb
inc
jno
in
dec
mov
cmpsl
loop
cli
lahf
inc
xor
push
pop
mov
lock
out
dec
sub
in
pop
mov
lret
pop
call
mov
adc
addr16
inc
sub
imul
xchg
cli
shrl
in
pusha
dec
mov
cwtl
inc
sysret
xlat
hlt
mov
pop
leave
leave
push
pop
aam
repnz
jae
and
mov
xchg
stc
mov
mov
pop
mov
mov
cld
mov
sbb
bound
test
sbb
xor
dec
cmpsb
lcall
iret
clc
jae
lds
mov
cmpsb
fdivl
inc
arpl
pop
cmp
in
mov
mov
mov
in
js
cmc
jge
push
push
inc
mov
scas
mov
and
cmpl
testl
int
pushf
jp
cld
jge
add
mov
dec
aaa
xchg
out
gs
or
scas
fildll
inc
pop
fs
or
insb
out
enter
lcall
mov
sarb
or
mov
push
xchg
imul
or
mov
imul
jg
repnz
enter
dec
mov
push
fldenv
sti
arpl
xchg
pop
stos
das
add
mov
or
dec
sbb
rcll
jge
stos
call
push
negb
or
stos
or
inc
dec
int3
cmc
cmpl
sahf
sbb
pop
inc
cmpsl
repnz
pop
scas
fistpl
mov
mov
push
xchg
jbe
repnz
push
mov
fs
popf
outsl
stos
insb
pop
enter
mov
lahf
out
xchg
mov
cmp
loop
xlat
add
iret
pop
mov
lahf
jno
push
fimuls
scas
dec
mov
pusha
dec
rorb
sti
fidivl
dec
push
push
xor
xchg
add
push
pop
pop
repnz
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
or
sahf
jnp
jmp
ret
and
mov
cltd
add
repnz
xor
xchg
stos
jo
sub
ret
aam
add
dec
adc
ret
mov
daa
seta
xchg
repnz
pop
and
les
jl
aad
push
add
cmp
in
push
and
mov
sub
adc
add
lahf
fwait
inc
mov
fisttpll
add
cld
dec
fiadds
push
add
xchg
cli
popa
sub
fisubrl
mov
inc
fstp
jnp
xchg
and
jns
mov
cltd
ljmp
push
dec
sahf
int
mov
stos
fwait
inc
or
cltd
xchg
out
jmp
jge
inc
in
daa
rcr
loopne
call
aas
cmp
mov
push
stc
in
test
xchg
or
enter
sbb
and
xchg
add
push
mov
aaa
fisttps
in
xor
cs
aad
mov
into
repnz
xor
jnp
mov
inc
add
in
fwait
dec
jmp
mov
pop
jae
pop
jl
inc
and
mov
addr16
push
dec
testl
pop
ljmp
out
je
popa
insb
dec
jmp
xchg
sub
outsb
cs
int3
cltd
pop
pop
mov
fldl
mov
mov
fdivrs
xchg
xchg
fistpl
cmpsl
scas
xor
mov
jae
jo
push
lock
push
sbb
not
lret
pop
movsl
mov
rclb
pop
jbe
jo
js
les
adc
sub
iret
mov
push
lods
dec
lock
inc
ja
sahf
inc
cli
dec
inc
out
sbb
and
push
fdiv
mov
push
mov
filds
dec
xchg
dec
je
xor
movsb
enter
daa
xchg
fcoml
popa
mov
cmp
inc
and
in
imul
js
inc
pusha
xorl
cmp
push
ss
cmp
dec
lret
outsb
fs
lcall
andl
cwtl
xor
fadd
fdivr
leave
add
vpsrlq
bound
jl
ret
dec
arpl
icebp
adc
ret
je
dec
fcmove
mov
jno
pusha
dec
xlat
xchg
push
das
pop
xchg
mov
xchg
sbb
dec
adc
add
and
sub
push
push
fcmovne
xchg
loop
push
mov
in
sahf
cmp
adc
jg
mov
aad
mov
and
inc
cmovns
mov
mov
lds
lods
jo
fldlg2
mov
lcall
or
push
pop
aad
stos
enter
xchg
insb
push
mov
lahf
push
adc
mov
int3
xor
andl
push
adc
cmp
idiv
dec
fucomp
imul
imul
lahf
pop
flds
je
xor
fistps
jmp
es
pop
inc
dec
int
cmpsl
xor
xchg
cmp
js
push
fstpt
shlb
addl
xchg
ds
jb
push
das
jmp
pop
jg
push
pop
notl
lcall
int
imul
mov
imul
ret
lods
and
sarl
and
sti
ficoms
lods
stos
das
jmp
mov
ljmp
mov
movsb
in
xchg
push
stos
mov
ja
ret
loope
outsl
out
pop
inc
jmp
mov
sub
je
dec
jns
stos
ja
sahf
mov
gs
pusha
in
jmp
stc
and
jns
and
sbb
xchg
cmp
push
pop
loop
sub
mov
jae
mov
out
mov
dec
cmpsb
lds
adc
pop
loope
cmpsl
pop
dec
icebp
add
in
cmp
fists
sub
sub
mov
lods
out
js
xor
dec
fldl
xor
cwtl
mov
cld
dec
gs
pop
std
stos
cmp
dec
add
icebp
out
ficompl
std
adc
adc
inc
stc
xchg
cmc
mov
mov
mov
cwtl
or
xor
out
inc
jae
mov
pusha
loop
xchg
inc
sub
out
out
popa
je
add
les
lods
jge
out
andl
sub
decb
or
jl
sub
mov
or
movl
xor
out
pusha
fs
in
push
sub
shlb
fcom
sub
ret
inc
pushf
pushf
cwtl
push
icebp
leave
xor
jle
stc
je
dec
psllw
icebp
pop
in
mov
inc
ja
or
sbb
jmp
das
aam
jecxz
insl
cltd
pusha
aaa
sbb
test
test
int
sub
mov
xor
sbb
lret
hlt
xor
fwait
xor
testb
rcr
xchg
fdivl
ficomps
addr16
add
adc
mov
addr16
jo
jge
es
add
cmp
ss
pop
imul
mov
inc
push
scas
mov
int
jg
std
lahf
ljmp
dec
fdivs
movaps
scas
sbb
cmp
arpl
mov
pop
sub
decb
lea
xor
or
adc
in
cltd
sbb
fldl
call
pusha
pop
fxam
cmc
insl
push
mov
or
sarb
divb
pop
popa
dec
adc
or
je
fs
xor
int
jecxz
jns
xor
mov
das
mov
dec
cmp
adc
xor
loope
aad
movsl
sbb
movsb
in
or
je
loopne
inc
scas
mov
jecxz
jg
inc
jge
loopne
movsl
inc
xchg
pop
mov
int
cs
in
jnp
aad
mov
mov
or
inc
pusha
fst
iret
cld
jnp
sti
sbb
hlt
and
ja
pop
dec
outsb
pop
ljmp
xchg
iret
xchg
sbb
mov
lcall
pop
dec
insb
pop
jb
ss
inc
bound
icebp
shrb
push
stos
lret
aas
out
ficoml
mov
stc
test
enter
sbb
ret
psubq
wbinvd
movl
add
mov
pcmpgtd
ss
mov
or
data16
add
lret
pop
js
sub
mov
rclb
enter
cmp
dec
das
lods
pop
stos
hlt
pop
jge
std
bound
rcrl
lret
jne
lock
pop
or
lods
ds
icebp
andl
cltd
popf
imul
adc
das
dec
dec
xor
cld
repz
aam
out
jp
test
mov
les
imul
and
fcmovnu
pop
push
dec
out
push
ds
fs
in
dec
cwtl
jne
mov
and
rorl
adc
mov
cmp
inc
push
aam
jo
sub
notl
cli
mov
insb
xchg
inc
orb
mov
mov
sub
push
dec
pusha
roll
fwait
mov
add
sub
jb
fdivs
pop
jle
pop
jo
cli
rcl
insl
mov
mov
aas
add
cmp
je
movsb
mov
pushf
dec
inc
mov
or
aam
jo
inc
not
leave
jno
loop
aad
lds
int3
scas
fwait
mov
inc
test
gs
addr16
out
clc
jecxz
loop
or
push
cmp
cmpb
inc
jmp
stos
add
mov
ja
sbb
fsubr
scas
int
adcb
ds
or
repnz
sbb
lcall
inc
xor
mov
mov
popa
add
jne
xlat
test
or
push
cmpsb
mov
icebp
imulb
rcl
mov
push
mov
jb
push
jnp
rcll
push
aad
adcb
loope
sbb
pop
inc
cmc
adc
cltd
jbe
jmp
jmp
pop
pop
cmp
test
sbb
outsl
mov
xlat
and
mov
in
add
and
jle
mov
adc
sbb
int3
jmp
sti
shlb
dec
xor
roll
xchg
mov
insl
sub
or
mov
push
notb
add
pusha
xor
out
mov
sti
hlt
pop
jp
mov
and
mov
jno
add
add
xor
jns
and
stos
sub
and
fiaddl
vpunpckldq
out
adc
aad
jns
test
inc
push
pop
out
mov
push
test
arpl
insl
sbb
mov
sub
mov
push
pop
fisttpl
and
sub
add
mov
in
in
subb
test
sbb
add
sahf
and
dec
fwait
les
and
push
ret
mov
dec
sub
and
in
cmp
es
sub
movsb
sub
mov
sbb
orb
push
mov
in
in
xchg
sub
xchg
sbb
movsb
ficoml
js
xlat
dec
test
mov
lret
cmp
sti
cmp
fs
fs
add
in
jmp
fwait
mov
cmp
ret
adc
dec
stc
mov
out
jo
xchg
shll
xchg
bound
out
xor
jae
dec
ret
pusha
lds
ret
dec
cmp
fs
gs
mov
in
leave
cmp
and
or
addr16
dec
insl
sub
jnp
pop
ss
pop
popf
sbb
icebp
loopne
push
and
mov
outsl
je
ljmp
bnd
push
sub
sub
dec
sub
dec
sbb
xchg
mov
lods
jno
mov
sub
addl
push
inc
movups
jb
divl
icebp
pop
fmull
fcmovne
pop
sahf
loopne
add
sub
mov
aaa
xor
sbb
push
jmp
adc
adc
fwait
mov
fidivrl
push
dec
mov
xchg
addl
int
hlt
adc
outsl
les
std
mov
or
xchg
in
mov
xor
push
jae
pop
pop
adc
pop
lea
bound
mov
gs
push
xchg
xor
lahf
insl
sbb
in
push
adc
push
pop
icebp
jno
dec
mov
fnstcw
xor
cmp
bound
scas
cmp
dec
and
movsl
mov
push
push
daa
mov
sub
inc
mov
lret
jns
sbb
int3
loope
sarb
mov
jp
ja
loop
sub
mov
inc
pop
loope
sub
jmp
jb
jl
push
sbb
lret
inc
daa
add
sbb
xor
push
mov
mov
push
push
cmpsb
div
stc
hlt
mov
into
leave
cltd
fdivl
test
mov
mov
dec
repz
out
fs
sbb
cmp
je
adc
jo
pop
scas
ud1
cmc
xchg
xor
inc
or
xor
lock
mov
mov
mov
fnstcw
je
sti
mov
fistpll
stos
xchg
sub
push
inc
in
shll
std
add
add
jp
cmp
ss
adc
rorb
inc
sahf
in
ds
mov
leave
push
out
push
or
dec
addr16
ficoms
rclb
inc
jle
jbe
enter
pop
sarl
mov
push
int3
mov
xchg
cmp
lea
adcl
test
fldl
mov
iret
sbb
dec
mov
enter
mov
xor
es
aam
xor
pop
adc
cmp
int
hlt
outsl
lods
inc
xchg
pop
mov
xchg
inc
sti
mov
mov
cmp
xchg
data16
push
or
push
aaa
jo
hlt
pop
lret
mov
outsb
ret
xor
sarb
mov
enter
es
stos
dec
ljmp
inc
mov
cmp
or
lods
jne
pop
pusha
mov
xchg
jle
add
mov
sub
mov
pop
fnstsw
xchg
adc
in
das
popf
add
mov
movsb
and
aad
add
xchg
add
in
or
jg
lahf
push
stos
arpl
xor
leave
pusha
sbb
pop
or
or
lea
ds
test
arpl
mov
inc
sub
hlt
out
sub
xchg
fnstenv
clc
ret
mov
xchg
jns
cwtl
imul
jb
pushf
xor
movsl
fistpl
cmpl
and
notl
jecxz
fcoml
add
int3
or
and
push
adc
dec
insb
outsb
and
xlat
movsb
xor
dec
loope
stos
pop
pop
dec
mov
loop
add
push
sub
cmpsb
lret
or
es
nop
jmp
pop
xchg
sub
notl
push
call
sarb
out
ret
add
inc
or
fcompl
add
mov
dec
addr16
sbb
xor
mov
hlt
scas
sbb
push
push
pop
pop
adc
jmp
adc
add
out
dec
cld
jmp
dec
pusha
xchg
mov
push
ret
out
xchg
shr
iret
decl
rorb
arpl
stc
xor
lods
loope
ljmp
pop
xor
pop
out
insb
mov
call
xchg
sti
dec
push
repnz
mov
ret
push
lods
data16
out
insb
dec
and
add
inc
jo
cld
xor
inc
or
push
sbb
fsubs
in
adc
inc
push
sub
jne
loopne
adc
js
out
pop
aad
insb
dec
data16
cmpl
pop
pushf
push
or
hlt
scas
mov
jp
adc
dec
test
cli
in
test
mov
je
add
mov
lds
adc
sbb
bound
leave
aad
inc
out
push
xchg
sbb
fucom
fbstp
mov
icebp
sbbl
inc
mov
les
jbe
mov
popa
int
clc
sbb
dec
and
imul
dec
shll
shll
push
and
mov
lcall
rorl
loope
mov
xchg
jae
ret
adc
ja
push
push
scas
in
pop
push
pop
stos
push
or
ss
pop
insl
pop
lea
test
cmp
ret
iret
cwtl
adc
cmp
cmp
shl
hlt
popf
cmpsl
and
xor
mov
cmpsb
rcrl
stc
in
sub
mov
xor
jnp
dec
jno
sahf
xor
loope
ret
mov
mov
inc
push
push
xor
push
inc
sbb
push
fdiv
push
lods
sahf
mov
and
cmp
stc
sti
xchg
sub
or
rcrl
mov
dec
xchg
popf
movsb
test
jnp
jne
insb
fisubrs
cmpsl
call
loope
dec
xchg
sti
inc
jno
mov
aad
cmp
aas
aas
sub
pop
pop
adc
imul
ficompl
movsl
shlb
outsb
test
sub
mov
push
addb
xchg
fadds
push
std
sahf
lea
mov
push
test
mov
test
mov
testb
arpl
scas
xchg
mov
andb
push
mov
mov
ja
cmp
mov
dec
stc
movsb
dec
andl
adc
cltd
mov
sarb
dec
xchg
push
icebp
cld
or
jp
stc
mov
inc
adc
and
cld
fists
add
gs
cmpsb
cmp
inc
mov
fs
xor
leave
mov
mov
idivb
cltd
sub
sub
insb
jp
in
mov
pop
jp
fildll
dec
sub
push
or
sub
mov
je
adc
loop
fcmovnbe
test
mov
and
jns
cli
fincstp
or
jg
enter
addr16
les
cmpsl
or
xchg
les
sbb
call
mov
inc
ret
dec
add
data16
fcomi
das
jne
pop
jl
push
mov
pop
jae
fidivrl
cwtl
mov
mov
into
pop
test
imul
inc
cmpb
push
shr
adc
into
cmpsb
movsl
push
jmp
js
xlat
mov
icebp
mov
add
pop
test
scas
testl
and
mov
fwait
subl
dec
lret
inc
lds
ret
dec
cmpsb
adc
pushf
mov
icebp
addr16
test
jp
pop
inc
inc
dec
inc
es
stos
bnd
jo
xchg
test
jmp
mov
mov
pop
out
ret
sub
push
cmp
sahf
stos
scas
out
mov
popl
xor
mov
imul
sub
loopne
movsb
rclb
dec
and
in
and
mov
jmp
rclb
das
dec
mov
mov
lret
pop
push
sbb
jmp
addr16
or
lgs
dec
das
push
jg
pop
mov
fsubrs
push
push
xchg
dec
std
sti
adc
mov
xor
push
add
sbb
jns
movsl
push
leave
js
mov
mov
ja
sti
int
mov
mov
mov
lods
mov
sbb
jne
cmpsb
scas
and
ret
xor
add
int3
jb
sub
std
push
inc
cmp
dec
dec
int3
push
mov
add
xorl
xchg
xor
push
lods
xor
pop
mov
addr16
pop
push
pop
xor
mov
fists
aaa
fs
psubd
sahf
adc
in
int3
mov
mov
sbb
add
dec
mov
insb
icebp
push
std
push
adc
dec
sub
mov
inc
imul
mov
cmp
ds
sbb
stos
sti
add
jns
and
xchg
icebp
or
sahf
scas
cmc
aas
je
fldenv
outsb
lahf
cltd
je
pusha
pushl
and
jno
adc
xchg
lret
pusha
andl
jns
into
popf
bound
adc
dec
in
icebp
xchg
ret
inc
repz
add
popf
mov
cltd
cwtl
imul
or
lahf
scas
test
rorl
jmp
sub
xor
out
mov
pop
lods
popa
insl
sahf
aas
cs
scas
lret
out
fwait
xor
loopne
dec
lock
mov
fninit
mov
jo
jle
jp
dec
push
mov
mov
adc
mov
cmp
test
aam
dec
xchg
data16
outsl
mov
lock
sbb
jmp
pop
insl
push
dec
push
int3
xchg
cli
push
ljmp
pop
pushf
sub
adc
or
mov
mov
imul
ret
das
cmp
repz
enter
repnz
outsb
xchg
adc
and
add
inc
sub
das
mulb
xlat
and
cmp
pop
dec
lods
imul
icebp
data16
clc
mov
pop
adc
jle
xchg
loopne
scas
jae
dec
sbb
aaa
push
divl
das
and
dec
adc
ret
push
loope
dec
push
inc
mov
pushf
outsl
dec
push
jb
push
stos
divb
icebp
inc
mov
fmuls
int
inc
pop
dec
xor
repz
loope
sarl
and
adc
add
clc
lock
addr16
and
ret
rclb
pop
cwtl
ret
xchg
mov
sbb
ja
in
ret
and
push
les
lods
mov
fimull
add
in
push
mov
aas
int3
and
aaa
into
add
pop
mov
mov
ficomps
ret
xchg
push
sahf
out
push
dec
sbb
mov
roll
jnp
inc
push
pop
dec
lret
dec
loop
jae
daa
mov
cltd
cmpsb
daa
xchg
mov
fbld
adc
dec
fcomps
lods
in
dec
test
movsl
dec
out
fimull
pusha
push
test
dec
dec
fs
je
ret
shr
push
mov
outsb
fisubl
rcr
sub
out
mov
mov
push
cmpsb
fists
ror
mov
mov
sarl
lods
scas
push
adc
lods
iret
push
cltd
pop
es
les
popf
fdivrs
clc
mov
pop
pop
cld
jo
mov
mov
or
and
mov
xchg
pop
jecxz
stc
mov
or
decb
mov
fwait
shrb
mov
push
and
and
movsb
sub
imul
fsubs
mov
xchg
movsl
test
xchg
dec
jae
jbe
sbb
fldcw
inc
out
xchg
jo
lcall
and
add
xchg
jge
enter
add
xlat
arpl
cld
addb
out
ljmp
sub
out
push
cli
ljmp
loop
movsl
in
hlt
mov
out
fistpl
dec
cld
ret
mov
lret
mov
push
mov
call
cmp
lods
into
notl
mov
fistl
mov
sub
mov
lods
add
xor
or
sahf
jno
das
push
xchg
or
adc
shrb
shrb
mov
xor
negb
cwtl
fistl
ja
xchg
sbb
lock
pop
pop
add
loope
ret
or
mov
leave
loope
mov
add
pop
fcoms
pop
cwtl
std
cmp
jbe
repnz
sub
mov
aaa
insb
inc
test
sti
add
pop
xchg
mov
clc
mov
inc
sbb
xor
in
sbb
xchg
lcall
adc
inc
push
dec
imul
pop
mov
jmp
pop
inc
push
add
xchg
jmp
inc
ljmp
lods
shll
xchg
pop
mov
in
call
cmc
cmpsb
cmc
idivl
daa
test
or
fistpl
shlb
jae
jl
es
inc
dec
cmp
inc
pop
aad
dec
xchg
addb
xor
lods
arpl
inc
lea
xchg
fidivs
notl
pop
jmp
in
daa
pop
or
loopne
rcrl
adc
or
push
movsl
aaa
fucom
or
iret
mov
outsl
and
push
push
popa
leave
repz
mov
jae
pop
jnp
adcb
mulb
cmp
out
scas
push
mov
xor
mov
inc
loope
lret
push
fisubs
andb
fwait
mov
xchg
mov
outsl
push
popf
mov
push
add
jns
mov
pop
or
or
jns
je
and
xor
or
test
stos
arpl
repnz
loopne
xchg
out
jbe
lods
jp
push
fcompl
addb
mov
mov
js
lock
mov
enter
add
rcrb
jle
into
dec
shlb
add
and
dec
sub
mov
or
cmp
mov
push
jmp
sbb
push
icebp
sub
mov
rorb
js
aad
pop
xchg
jbe
sbb
mov
cmpsl
mov
push
hlt
jg
pop
dec
fstps
out
mov
sbb
xchg
push
test
xchg
cmp
cwtl
nop
mov
sub
sub
pop
xlat
sbb
cltd
add
pop
loopne
pop
and
push
cmp
mov
sti
sbb
dec
call
push
lret
stc
fidivrl
pushl
mov
fdivrl
orl
sbbb
rcl
cltd
ret
lods
pop
cli
fsubrl
popa
inc
push
inc
fisubrs
push
mov
enter
xchg
pop
push
pop
cmp
test
cmp
inc
sub
jno
lahf
stos
mov
jmp
lds
pushf
jnp
iret
and
and
sbb
and
sbb
mov
movsl
bound
xchg
pop
pop
fs
pop
pop
in
lret
aam
rorl
push
fs
ret
cmp
add
dec
fwait
mov
xchg
gs
mov
loop
mov
addb
repnz
loop
mov
in
and
stos
sub
and
mov
jns
dec
clc
fcomps
mov
adc
mov
push
push
jae
mov
lcall
sbb
push
shl
jge
out
ror
int
push
pop
xor
inc
and
cmpb
mov
lea
jmp
jl
jg
mov
push
cmp
jb
pop
loopne
cld
and
sarl
and
inc
push
mov
cmp
sbb
or
pop
iret
dec
mov
sarb
mov
andb
inc
lahf
ud0
xchg
xor
mov
rcrb
mov
cmp
es
add
inc
xor
popa
aaa
jmp
adc
fwait
je
sbbb
sahf
pop
mov
push
jmp
out
push
js
movsl
add
stos
ds
adcl
out
icebp
pusha
sbb
ret
inc
xor
lcall
mov
aaa
arpl
cmc
mov
sarb
pop
xchg
fsts
lahf
subps
pusha
dec
lock
bound
mov
xchg
imul
xlat
hlt
push
out
adc
push
inc
xchg
in
xor
js
jo
inc
mov
sub
xchg
cmp
cs
stc
subb
rclb
mov
roll
jl
adc
std
xor
jp
movb
pop
gs
pop
outsb
popa
ja
pop
movsb
push
xor
xlat
js
pop
adc
out
daa
ret
inc
and
fdivs
lret
xchg
mov
and
les
in
sar
jnp
mov
push
movsl
sbbl
in
pop
xlat
inc
inc
lcall
bound
sub
push
cmp
into
xchg
jge
cmpsb
cld
pushf
dec
sbb
jae
mulb
cld
and
lret
rol
outsl
add
call
adc
xchg
arpl
xlat
jo
lcall
movsb
push
add
fwait
movsb
xchg
jmp
out
jno
mov
xchg
adc
jb
inc
aam
cmp
sub
es
outsl
fistps
jb
or
mov
jo
push
icebp
imul
mov
pop
arpl
daa
cmp
out
jbe
mov
mov
imul
leave
mov
lea
jmp
mov
inc
lods
cmp
xor
push
or
bnd
xchg
dec
shl
xchg
ljmp
call
std
test
pop
cld
inc
jne
andl
cs
aas
xor
int
dec
cld
mov
sar
pusha
mov
das
into
aaa
push
enter
ss
xor
sbb
addl
in
cmp
push
cli
jp
inc
out
sbb
jle
adc
push
push
pop
lret
cmpsb
push
and
hlt
div
or
sbb
xchg
loope
xchg
popf
mov
pushw
out
aam
xchg
add
jmp
xor
inc
movsl
rcll
inc
insl
loope
dec
xor
lret
int3
cmp
xchg
andl
pop
fbld
and
hlt
xor
andl
push
sub
testb
jne
add
push
dec
add
pop
push
pop
adc
mov
lahf
fwait
cltd
or
cmc
and
insb
fbstp
pop
xchg
add
das
dec
fs
pop
pop
push
shll
inc
movsl
out
cli
add
int3
ja
loope
lock
inc
inc
lock
push
push
mov
push
cmp
adcl
divps
in
movsl
pop
icebp
adc
addr16
mov
outsl
dec
xchg
ljmp
cli
int3
lea
xchg
out
pop
mov
lea
dec
mov
xchg
cmc
out
mov
mov
ret
push
and
cmp
stos
shll
cmp
arpl
in
dec
mov
jp
repz
pop
pop
fcmovnb
shll
mov
inc
out
sbb
or
cmc
push
imul
loop
jb
insb
xchg
aas
fs
jbe
mov
aas
rorl
add
mov
in
dec
lea
pop
push
pop
cld
sbb
jg
daa
or
loope
sbb
shlb
mov
rolb
test
xchg
fdiv
add
enter
shrl
or
stc
sahf
jl
push
mov
shrl
xor
or
movsl
jb
cltd
xchg
int3
ja
mov
xchg
jne
lcall
add
cmpsl
in
or
pop
mov
and
mov
loope
daa
js
dec
pop
cmp
xchg
ss
pop
adc
xlat
xchg
fldcw
xchg
mov
imul
or
das
imul
pop
loopne
mov
test
push
aam
mov
sub
sub
pop
scas
aas
lea
cmp
xchg
jo
int3
mov
mov
xor
mov
cmp
xor
adc
mov
bnd
or
out
fwait
int3
test
mov
jg
cmp
adcb
pop
pop
cmpl
insb
cld
fidivs
in
pop
jl
andl
bound
cltd
mov
push
push
sub
cmpsl
add
cmc
cmp
hlt
jl
mov
mov
cmp
or
ljmp
mov
jns
ss
push
into
lds
movsb
inc
pop
aaa
dec
fs
adc
add
shll
js
adc
fcoms
jmp
je
xor
add
pop
ret
lea
movsl
xchg
mov
shlb
push
dec
ret
xchg
jo
enter
cld
fs
mov
push
xor
pop
icebp
jecxz
cmp
push
dec
ljmp
out
sub
fs
les
lock
popw
outsb
mov
cmpsb
loope
push
test
mov
sbb
inc
adc
push
mov
dec
and
jl
repz
adc
cmpsl
orl
popa
sti
adc
mov
cld
mov
xchg
ljmp
dec
out
loopne
pop
cltd
rorl
jbe
fidivl
ret
push
mov
pop
lahf
mov
scas
idiv
mov
pop
test
call
cmp
sbb
pop
mov
mov
loop
adcl
inc
ds
mov
mov
sbb
lock
and
in
and
pusha
push
mov
cmp
subl
sbb
cld
pop
sub
movsbl
sub
in
and
leave
aad
lds
lahf
xor
clc
popa
push
fwait
std
out
test
adc
stos
mov
notl
es
sbb
movsb
mov
push
outsl
pop
cld
outsb
fistpl
mov
push
cmpsl
fdivr
fwait
fmuls
inc
and
in
push
jnp
pop
pop
add
xchg
and
repnz
inc
repnz
cmp
dec
pop
push
xor
pop
xchg
cmp
mov
lret
xor
aad
test
mov
dec
int3
fcmovu
je
push
adc
push
shlb
jnp
cltd
les
sub
arpl
out
cmp
mov
mov
mov
into
dec
andl
jge
andl
mov
rolb
test
jns
in
addr16
call
xorb
int3
jmp
hlt
cmp
in
and
incb
das
pop
in
lret
push
or
mov
push
push
jle
jae
pusha
cwtl
jge
dec
xchg
leave
xchg
xorb
pop
add
push
inc
mov
stos
stc
mov
xor
or
fdivrs
insb
xchg
xchg
shrb
cmpsb
loop
lods
lret
dec
adc
mov
xchg
adc
add
nop
dec
sub
sar
int
push
or
jns
mov
xor
mov
jb
add
enter
mov
cld
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
sub
sahf
jnp
dec
daa
repnz
sti
fxam
sbb
ret
rcrl
ss
aam
pusha
repz
stc
pop
lret
pushf
pop
xchg
push
mov
jp
fwait
push
ret
lret
mov
add
lcall
das
fidivrs
add
push
out
jecxz
push
mov
push
out
mov
call
roll
and
add
lret
jp
out
mov
adc
loope
push
lahf
and
aas
out
ror
cld
loop
in
imul
push
inc
jns
dec
dec
jmp
mov
mov
mov
popf
inc
pop
leave
inc
sbb
sub
or
and
idiv
je
mov
aad
outsl
sarb
jecxz
jge
idivl
decb
in
push
out
pushf
and
xor
ret
push
cmp
cmp
xor
or
fs
data16
aaa
xchg
jnp
cmp
stc
cs
pop
jmp
and
mov
ret
xor
testl
mov
roll
jecxz
cmp
xchg
gs
leave
aam
insb
xchg
sub
jg
pop
xchg
test
jbe
icebp
mov
pop
pop
push
jae
jge
inc
mov
aaa
xlat
bound
cli
jo
test
push
add
bound
jno
xchg
aad
in
ljmpw
cmp
out
stos
mov
push
lods
in
nop
mov
xlat
enter
sar
xchg
adc
push
lock
sarl
push
dec
inc
insb
mov
mov
xor
lcall
insl
or
inc
pop
mov
out
loope
adc
xchg
adc
sbb
or
mul
aad
fildl
outsb
mov
adc
jb
push
cld
cmp
sti
jno
add
jmp
push
lods
out
pop
add
or
in
rolb
inc
rcr
inc
inc
sub
and
mov
mov
test
dec
adc
sub
mov
mov
call
lret
pushf
push
or
mov
loop
fstps
call
jp
mov
push
stos
cwtl
dec
stc
sub
scas
addl
pop
sbb
push
in
dec
ljmp
push
hlt
mov
mov
add
xor
xlat
sub
mov
pop
imul
adc
adc
mov
cmp
out
daa
andl
cs
and
mov
cmpsl
xchg
jle
es
mov
stos
mov
sub
scas
sbb
sbb
sbb
push
enter
mov
inc
lretw
adc
dec
sbb
ds
popa
scas
xchg
loopne
adc
mov
loope
jle
add
mov
mov
xor
add
les
fisttps
mov
cmpsl
mov
cmp
cltd
lret
pop
push
sub
and
mov
roll
adc
push
dec
xchg
mov
inc
mov
arpl
loopne
jg
test
cmpl
jo
popa
push
cmp
pop
push
insl
push
pop
popa
jae
cltd
sbb
mov
insl
fs
decb
xor
gs
movsl
into
movsb
jge
jg
xchg
shlb
and
loopne
lods
and
ja
fisubl
cmp
fwait
or
dec
lret
mov
push
sti
sbb
jecxz
push
pop
or
lret
adc
sub
or
lods
clc
inc
test
mov
and
imul
int
sub
sbb
scas
ret
push
stc
xor
mov
fadd
sub
repnz
dec
mov
cs
jae
adc
sub
push
or
sbb
xor
mov
sar
and
sahf
lods
aad
mov
mov
xchg
int3
jae
and
adc
mov
andps
adc
sti
ss
pop
xchg
clc
das
movsl
jbe
adc
push
sbb
or
shrl
jbe
sub
fwait
and
cmp
add
cmp
imul
cli
sar
sbb
cltd
pop
ret
and
lcall
fsubr
repnz
mov
sub
xor
lcall
xor
inc
into
xor
xchg
adc
insl
cmp
or
insb
lods
jnp
pop
and
adc
jbe
pop
outsb
movsb
xorb
push
inc
dec
xlat
out
or
xchg
in
orl
push
jno
jo
in
push
pop
pop
inc
inc
lock
inc
jnp
and
xor
rcr
hlt
jo
sbb
xchg
test
inc
push
stos
adc
jne
sahf
sbb
jle
dec
movsl
mov
cmpsb
dec
xor
jp
pop
cmpsl
cmp
out
add
push
sub
imul
dec
shrb
dec
sbb
in
mov
out
xchg
aas
push
cltd
mov
mov
push
xchg
dec
lods
bound
mov
mov
sub
sub
sub
xchg
push
xchg
mov
shll
and
push
cmp
push
arpl
xchg
mov
lds
pop
sahf
push
testb
lea
pop
push
cmpsb
sbb
fstl
mov
add
mov
inc
sarb
mov
cmpsl
add
sbb
adc
mov
xor
dec
pop
jbe
rclb
mov
or
in
sti
push
and
lcall
mov
aaa
outsl
adc
imul
pop
loop
jns
sbb
xchg
outsl
lea
xchg
lock
std
and
fcomps
jle
popa
pop
dec
les
cs
test
xor
les
mov
mov
adc
das
adc
mov
mov
jmp
mov
arpl
inc
mov
repnz
pop
in
add
sub
xchg
push
insl
sbb
stc
aas
shrl
in
sbb
scas
mov
add
cmpsl
addr16
cmp
pushf
ds
sbb
cmp
mov
sub
and
mov
lret
push
testb
or
mov
push
fisttpl
pop
arpl
push
jns
or
out
dec
lret
xlat
decl
cltd
shr
sbb
sbb
js
dec
pusha
test
pop
add
in
add
mov
mov
pop
addr16
sbb
xor
fs
mov
scas
inc
and
lods
sub
mov
pop
sahf
test
add
sub
cmc
mov
arpl
sbb
out
dec
pop
mulb
rcll
add
fs
stc
add
out
xchg
imul
xlat
pop
push
lock
cltd
cmpsl
mov
je
lret
pop
dec
jae
test
push
jge
adc
leave
mov
inc
xor
add
jl
cmp
xor
ja
sbb
punpckhbw
das
lcall
fcmovbe
scas
inc
sbb
fwait
sub
in
push
jb
push
orb
xor
push
aas
sub
adc
inc
andb
inc
rcrl
jnp
outsl
push
jl
pop
jecxz
mov
int
fldl
mov
sahf
in
sbb
jo
lods
sbb
or
xchg
mov
out
adc
mov
sbb
shrl
cld
jns
mov
push
mov
pop
cmp
scas
dec
pushf
mov
das
outsl
insl
out
imul
push
push
jo
xchg
push
pop
push
iret
mov
insb
adc
xor
cwtl
push
movb
push
leave
mov
fdivr
xchg
mov
sub
cltd
add
sub
lock
out
cmp
jbe
aam
das
push
sbb
pop
mov
add
lock
mov
and
gs
imul
jb
cltd
push
xchg
add
test
sub
adc
imul
and
xchg
or
push
xchg
das
repnz
out
and
movsb
iret
fstpt
xchg
mov
push
jecxz
add
daa
cmpsl
push
loop
xor
pop
ret
cmp
out
insb
and
push
in
shlb
aam
jno
cwtl
mov
ja
cmp
leave
pop
loope
add
cli
mov
sbb
mov
inc
and
aaa
pop
inc
shlb
mov
incb
pop
stc
sbb
shrb
imul
insb
mov
mov
sbb
jg
dec
xchg
dec
fstp
fwait
pop
inc
pop
and
or
testl
aad
sahf
stc
mov
pop
dec
mov
cmp
push
aas
or
sti
repz
test
mov
fdivrp
je
in
fldenv
mov
sub
icebp
cmp
dec
stc
lds
inc
or
leave
iret
push
jo
ss
xor
xor
add
push
nop
jge
push
sbb
int3
jno
andl
push
or
les
sarl
sbbl
inc
mov
mov
call
or
imul
adc
cmp
sub
test
frstor
fwait
ret
iret
popf
dec
inc
adc
xor
and
fcmovbe
jb
push
addr16
add
pop
lods
inc
mov
stos
add
mov
mov
xchg
shll
subb
fsubr
lods
xchg
arpl
jg
in
fidivl
out
sub
mov
lods
jecxz
mov
inc
pop
xchg
dec
addr16
les
jno
push
pop
pusha
ds
pop
mov
js
pop
jbe
jle
stos
dec
xchg
sarb
pop
test
scas
mov
imulb
push
inc
out
cmp
push
shll
sarb
pusha
push
xorl
push
mov
mov
pop
cld
dec
mov
push
xor
xor
dec
dec
mov
or
je
jb
es
inc
enter
or
jmp
xor
adc
daa
rclb
test
pushf
out
das
mov
ss
cs
mov
lahf
or
adc
mov
outsl
dec
imul
lods
xchg
xor
icebp
and
push
add
movsbl
dec
addr16
ret
mov
loop
xchg
and
les
xchg
loope
jae
pop
mov
data16
shl
testl
xor
mov
cmp
jb
fidivs
push
xor
xchg
lret
jmp
pop
fs
mov
fists
sub
call
xor
std
or
aas
rolb
movl
mov
out
pop
jle
jecxz
jne
jne
lcall
push
jbe
and
int
mov
xchg
aas
or
and
adcb
mov
ret
mov
push
ja
push
stos
pusha
or
fdivrl
cmp
xor
sbb
sahf
repnz
out
in
sti
pop
cltd
rorb
mov
mov
sbb
orl
mov
test
mov
das
sub
and
lret
mov
repnz
fwait
or
or
inc
cmpsb
mov
sarb
mov
insb
inc
sub
aam
push
push
jno
push
sbb
sbb
scas
mov
mov
sub
pop
or
gs
mov
into
dec
push
mov
lea
pop
xchg
shl
mov
add
stos
cmpsb
xor
cli
cmc
inc
dec
mov
mov
stc
push
jmp
jge
jecxz
bound
pusha
mov
pop
cmp
add
cmpsb
movsl
ret
mov
icebp
jle
push
call
pop
fdivrs
int
mov
enter
scas
fs
daa
cs
push
jmp
push
mov
out
and
sub
sbb
daa
mov
repnz
pop
stc
cwtl
imul
lret
jge
sbb
adc
in
and
sub
lret
ja
mov
or
fbld
xchg
adc
frstor
scas
push
sub
xchg
stos
push
loope
cld
xor
inc
test
into
pop
mov
arpl
push
and
add
ja
jbe
into
lahf
adc
xchg
and
fwait
subb
es
stos
je
push
inc
js
and
fwait
test
imul
mov
stc
mov
std
test
imul
cmp
aaa
add
lods
add
inc
mov
xchg
mov
lahf
out
push
sub
jno
jnp,pn
xchg
sub
in
orl
dec
outsl
push
jno
fwait
mov
jae
loope
xchg
xchg
adc
sbb
sbb
ffreep
cmc
xor
push
cld
jns
nop
jbe
adc
movsb
std
enter
stos
cmpsl
sbb
test
xchg
sub
in
pop
repnz
in
sub
mov
jmp
imul
addl
mov
pushf
sbb
push
dec
pushf
pop
andb
sub
push
jl
mov
lret
xor
sub
xlat
add
mov
in
lods
arpl
inc
iret
out
or
mov
adc
pop
sbb
out
inc
jl
and
sub
ja
mov
xor
repnz
iret
lcall
repnz
vpmulhw
adc
push
mov
mov
mov
jecxz
mov
loop
scas
lods
xchg
xchg
repz
lret
push
or
movsb
sahf
adc
addr16
mov
pop
fucom
cmpsb
xor
mov
inc
adc
push
add
inc
out
sbb
mov
mov
ret
xor
push
test
sbb
aam
lret
or
adc
dec
xchg
pop
xchg
cwtl
jb
mov
push
addl
xor
addr16
iret
imul
jmp
inc
mov
dec
pop
inc
dec
dec
sbb
xchg
mov
xchg
jbe
int3
in
push
aaa
testb
or
imul
icebp
inc
out
stos
mov
xchg
xchg
pop
das
scas
jne
stc
mov
push
fidivrs
jnp
incl
dec
adc
shlb
xchg
int
xchg
shl
sub
pop
or
mov
sahf
xorl
pop
push
lods
xchg
fistpl
cmp
mov
push
int
shll
sahf
testb
shlb
cmpsb
aaa
cltd
insb
out
mov
hlt
into
cwtl
pop
pop
xchg
dec
mov
int3
inc
aaa
inc
test
scas
xchg
mov
arpl
adc
idiv
sub
mov
js
setp
pop
pop
test
ljmp
test
stc
and
fcmovu
pop
in
xchg
jg
iret
adc
push
clc
addr16
mov
add
lea
imul
insl
std
and
ds
stos
or
test
push
dec
sub
test
enter
nop
je
sub
sub
frstor
xor
jl
push
jnp
add
sbb
push
fwait
sbb
inc
xor
jl
mov
leave
stos
and
ror
hlt
add
mov
inc
push
adc
xchg
xorl
adc
dec
push
jmp
stos
hlt
jecxz
dec
xchg
ss
inc
call
scas
and
ljmp
mov
jb
out
jg
jne
pop
dec
lcall
callw
add
and
fmulp
lods
imul
fnsave
aad
out
repz
into
dec
fwait
cmpsb
outsl
pushf
bnd
pushf
xchg
stc
pop
mov
adc
add
je
xchg
test
jno
mov
mov
dec
fwait
lods
ja
idivl
mov
decl
arpl
pop
add
test
in
add
sti
and
sti
lods
adc
mov
clc
stos
adc
data16
push
dec
das
or
mov
shl
js
sbb
push
sub
shrl
push
inc
scas
cltd
ljmp
lods
sbb
jecxz
fstp
mov
test
pop
lcall
rcrb
xchg
mov
pop
insb
mov
pop
pop
enter
hlt
outsb
add
or
add
jnp
movsl
into
sbb
inc
lea
out
loopne
push
adc
in
cwtl
add
add
mov
jp
int
mov
dec
xchg
adc
push
int
jno
shrl
in
ja
leave
xchg
cs
inc
mov
cld
lahf
pop
mov
les
inc
shrb
in
out
in
movsb
out
or
mov
fisubl
inc
or
mov
cmp
test
sbb
xor
push
inc
xchg
sysenter
sub
mov
imul
pop
pop
fwait
adc
repz
push
pop
add
and
fmuls
and
shl
idiv
mov
orb
pop
test
int
mov
dec
es
clc
loope
xchg
sub
bound
or
inc
rorb
jb
enter
jo
cmp
out
dec
lret
or
dec
inc
sub
mov
cmp
mov
inc
xorb
inc
insl
outsl
push
mov
xor
lahf
lahf
out
sub
icebp
dec
pop
adc
repnz
dec
mov
cmp
mov
into
repnz
mov
nop
push
cmp
aad
pop
inc
xchg
inc
scas
and
mov
and
add
cmpl
cmp
leave
inc
jmp
jns
imull
mov
scas
sbb
xor
insl
movsb
clc
pushf
in
mov
or
push
cmp
ja
xchg
js
xor
dec
push
loopne
std
iret
xor
and
push
mov
in
push
mov
imulb
shll
push
imul
fadd
stc
push
or
push
iret
shl
mov
int3
cmp
sub
sahf
lahf
adc
jbe
dec
sub
jns
push
jnp
jle
xchg
mov
stc
fsts
cmc
xor
in
aas
dec
nop
xchg
dec
outsl
cs
pop
fmull
orl
sbb
xchg
jp
popa
test
cs
sub
mov
sbb
lock
dec
pop
std
clc
mov
cmp
out
push
add
popa
ficomps
in
loop
sub
sti
das
rclb
lock
ret
and
inc
movsl
push
enter
imul
test
inc
mov
cmp
rorl
jecxz
jecxz
loope
pop
addr16
cld
stc
sbb
andb
popa
adc
mov
jge
mov
mov
clc
mov
xchg
clc
rol
mov
arpl
jp
es
dec
xor
pop
push
es
ja
jae
sub
sti
enter
cwtl
daa
and
out
scas
inc
pop
jae
push
push
fnsave
xchg
dec
jg
adc
pop
lret
mov
aas
mov
jl
ljmp
push
cmp
push
inc
mov
fucomi
sub
scas
arpl
mov
adc
and
xor
xchg
xchg
mov
jno
mov
loope
sbb
jmp
xchg
shlb
int
adc
shlb
cmp
fcmove
xchg
scas
aad
sbb
scas
data16
inc
hlt
xor
insb
stos
adc
jne
aas
inc
mov
rcrb
push
iret
pop
inc
ss
push
mov
sub
jp
ss
mov
push
xlat
in
mov
lds
jb
loop
mov
mov
sub
xchg
pop
add
sbb
xor
fiadds
ljmp
test
pop
out
test
into
inc
xchg
sub
xchg
sub
js
pop
cmpsl
cmp
lahf
and
imul
in
mov
rclb
jne
mov
inc
imul
mov
ret
das
fldt
dec
mov
mov
roll
add
fwait
or
mov
mov
adc
adc
pop
lcall
cmp
mov
mov
push
inc
mov
jle
cltd
pop
nop
xor
cwtl
out
mov
and
xchg
test
jno
and
jg
push
xlat
rclb
lds
icebp
xchg
sbb
testb
mov
in
dec
lcall
lock
pop
jnp
out
adc
dec
push
push
cmp
outsl
jo
insb
xor
lret
lea
mov
xlat
or
shl
cmpb
rcrb
cwtl
dec
lds
dec
repz
add
popa
rcrl
outsl
mov
scas
enter
jns
xlat
pop
dec
cmp
std
popa
movsl
mov
add
mov
fimuls
loopne
sub
add
cltd
cmp
jp
lret
jbe
and
xchg
lea
imul
repz
mov
jge
adc
pop
cmc
and
and
sub
pop
cmpsb
xchg
cmpsb
adc
dec
cmpl
mov
cmp
jo
movsb
fsubr
sahf
adc
out
pushf
xchg
jecxz
icebp
mov
cmp
mov
scas
int
dec
cmp
das
push
xlat
inc
adc
sub
sub
pop
jo
pop
ds
rcll
jnp
dec
lods
dec
pop
test
aad
jne
and
pop
sub
movsl
flds
jecxz
aad
ljmp
mov
aam
mov
push
xor
xchg
imul
push
push
repz
stos
xchg
push
and
mov
sub
push
insl
push
shlb
aad
repnz
pop
test
int3
or
lods
jbe
test
push
dec
mov
cmp
lds
sbb
pop
test
xchg
loopne
and
xchg
bound
mov
push
sub
mov
movsb
ss
das
out
idivl
out
pop
aam
in
ss
xor
jmp
xchg
pop
stc
push
lret
das
leave
ret
pop
sub
inc
xchg
jmp
sahf
mull
mov
dec
movsb
stc
push
xor
ss
scas
shll
stos
jo
mov
scas
loope
mov
aam
repz
loope
push
cmpsb
mov
pop
cmp
inc
sub
jnp
ja
pop
push
loop
cmpsl
inc
push
in
aaa
pop
push
lret
loope
adc
push
fistps
movb
sbb
jo
xchg
jae
popa
ja
das
xchg
mov
ja
pop
jmp
mov
scas
in
mull
scas
lcall
xchg
repz
imul
and
cli
fsubp
ret
iret
or
pop
insb
ds
sub
jo
sub
lcall
adc
inc
adc
xchg
cmp
mov
mov
fmul
mov
imul
push
insl
leave
jno
pushf
les
nop
and
and
arpl
mov
cmp
insb
sbb
enter
mov
adc
sbb
mov
or
jne
pop
jbe
jmp
std
cmpl
cmp
ja,pn
and
jle
rorl
sbb
lods
scas
lret
adc
in
fwait
repnz
addr16
xchg
cmp
push
add
push
cld
out
adc
add
mov
in
imul
push
sub
inc
jge
cltd
pop
sbb
mov
sarl
pop
imul
bound
shll
in
mov
jns
out
imul
sbb
call
nop
daa
mov
shll
in
loopne
sub
push
mov
fisubl
cwtl
int
and
xchg
lret
pop
bnd
mov
shrl
cmc
pop
out
lds
sbb
or
mov
std
mov
sub
push
sbb
arpl
sbb
jmp
jmp
sub
pop
fdivl
or
fcmovnbe
adc
jecxz
xor
xor
jne
ficoms
lds
cmpsb
cwtl
int3
ljmp
gs
insb
mov
aas
insb
inc
xchg
stos
pushf
in
les
shrb
outsl
or
ljmp
daa
shll
push
push
jl
cmp
mov
push
gs
stos
mov
or
fldcw
arpl
sahf
out
je
sbb
lock
in
xchg
ja
ja
cmpsl
sbb
inc
call
stos
leave
and
pop
in
or
pop
sbb
mov
lods
stc
cli
pop
and
pop
daa
clc
sbb
dec
ja
mov
and
or
mov
push
pop
andb
js
pop
mov
jge
sbb
push
add
xor
mov
push
out
push
cmp
push
mov
in
dec
les
or
adc
shlb
cmpsb
and
mov
jmp
xor
and
out
enter
jno
icebp
or
or
in
je
or
roll
fdivl
sahf
jmp
xchg
cmpb
add
out
mov
mov
xchg
pop
jmp
cmp
movsb
cmpsb
push
aas
mov
in
std
inc
out
mov
mov
cwtl
cltd
jae
xor
pop
sbb
lods
push
and
lret
jp
and
sub
mov
gs
ljmp
push
cld
adc
mov
rolb
ja
scas
arpl
outsb
inc
adc
jecxz
push
imul
lret
addr16
fsubrp
sarb
pop
and
or
fsubrl
pop
push
mov
jno
adc
call
mov
mov
or
mov
enter
arpl
push
push
dec
cs
mov
and
outsl
test
sbb
jmp
sbb
mov
mov
or
icebp
call
imul
stos
xlat
cmp
lock
push
dec
adc
pop
cmc
cmpsl
std
sbb
scas
cmc
dec
lahf
xor
rcrl
mov
ljmp
sarb
scas
icebp
push
es
enter
outsb
xchg
sarl
int
call
imul
test
imul
ss
hlt
lea
add
je
add
int
push
stc
lea
test
pop
outsb
std
mov
and
call
and
push
in
pop
lods
jne
repnz
cwtl
lods
push
test
cmp
movsb
push
fcompl
popf
int3
hlt
dec
mov
cld
loopne
in
stc
inc
adc
push
sahf
pushf
int
sbb
aas
dec
push
jne
sbb
mov
daa
das
int3
push
sub
xchg
pop
mov
push
lods
shll
ljmp
xchg
int
and
mov
scas
aaa
mov
inc
mov
pop
pop
or
pusha
jmp
test
ds
stos
arpl
mov
lret
cld
jmp
fstpl
inc
or
imul
out
les
jo
ljmp
jle
mov
into
jmp
test
rorl
inc
ds
aaa
sfence
fnclex
mov
mov
cmp
popf
inc
js
push
xchg
jo
outsb
cmpsb
push
adc
dec
cld
and
push
cmc
les
mov
mov
lods
es
clc
lret
add
sub
adc
mov
rclb
mov
cmpsb
cmp
mov
push
icebp
jnp
cs
mov
adc
push
mov
xor
mov
stos
mov
std
xchg
sub
sbb
inc
xchg
sti
cmp
in
sub
cmp
xor
sub
cwtl
cltd
sub
push
bound
sub
pushf
mov
fsubl
popa
insb
test
pop
push
rcrb
fdivs
or
sarb
inc
mov
ljmp
xor
sti
adc
cmp
in
jno
stos
clc
push
mov
push
call
loope
cltd
xor
mov
cmc
xchg
jmp
popa
xor
pop
idivb
and
stc
push
xchg
push
xchg
and
push
mov
les
xor
lahf
fisubrs
inc
andl
add
test
mov
xchg
jecxz
stos
cmp
loopne
sub
and
mov
push
and
out
jl
popa
push
xor
cwtl
insl
sti
inc
adc
jmp
dec
fs
clc
add
sbb
test
lahf
and
outsl
mov
dec
xchg
rol
push
pop
test
fisubl
jo
push
rcrb
xchg
test
imul
or
enter
cmp
movsl
mov
ss
subb
xlat
fidivrs
movsl
mov
leave
loop
and
aad
jo
cmp
pop
std
jnp
popa
mov
adc
ss
aaa
shlb
aam
sahf
sti
jmp
and
ds
or
pop
mov
in
sahf
jae
mov
mov
push
pop
push
in
in
into
jbe
insl
ja
aad
push
and
push
sbb
jecxz
mov
mov
mov
aad
jl
insl
popf
int
mov
jl
adc
scas
jne
add
push
or
lcall
or
and
mov
ret
and
into
pop
int
sbb
or
aaa
adc
js
cmpsl
push
xor
mov
or
xchg
popf
arpl
lret
subl
mov
xchg
pop
lea
int
jno
xchg
sub
xorb
or
rcl
outsb
decl
jle
jg
fs
pop
push
jns
pushf
and
xchg
aad
mov
and
jge
je
and
push
or
sub
and
test
jecxz
jns
pop
mov
inc
push
icebp
lods
ja
mov
and
int3
rolb
cmp
sub
push
rcr
push
pop
js
iret
jbe
sti
dec
pop
mov
add
pop
xchg
arpl
dec
jo
stc
lret
xchg
sbb
jp
xchg
clc
subl
push
cmp
xchg
xor
push
or
sbb
out
mov
shll
out
pop
test
add
bound
inc
je
pop
stos
lret
outsl
ds
pop
ljmp
mov
addb
lods
jg
sub
repz
dec
loopne
out
aad
cltd
xchg
or
lods
xchg
xchg
incl
emms
popl
lods
rclb
inc
and
movsb
mov
cmpsb
imull
mov
jp
pop
subl
ret
mov
mov
lcall
xchg
loop
jecxz
push
aas
bound
lea
pop
dec
divb
dec
psubsw
dec
aaa
lret
mov
mov
push
aas
or
sbb
stos
adc
lods
jns
mov
mov
mov
mov
push
loope
popa
mov
mov
syscall
insb
sbb
ljmp
stc
add
pushl
adc
test
popa
xchg
cmpsb
or
push
je
cmp
ret
adc
mov
mov
push
push
mov
in
xchg
lret
xlat
jo
subb
adc
xor
add
push
xlat
les
inc
stc
jbe
push
push
lock
lret
imul
pushf
sub
bound
sub
cmp
add
mov
adc
cs
cmpsb
or
fbstp
cs
outsb
fsubrl
adc
ss
push
cmpsb
mov
mov
divb
push
inc
iret
sbb
lods
ljmp
pop
icebp
xchg
mov
add
mov
dec
rcl
xorl
cmpsb
mov
iret
cmp
jae
sub
push
fsubr
daa
add
adc
lret
cmc
fistps
lret
hlt
ss
xchg
inc
sbb
movsb
divb
lret
pop
xchg
inc
sub
add
rcrb
inc
sahf
mov
push
push
xchg
ljmp
into
xlat
xchg
std
call
dec
jns
pop
jge
adc
xor
and
sub
dec
or
aad
lahf
gs
fnstcw
adc
mov
sub
xchg
pop
sti
or
cld
movsl
add
or
or
pop
push
stc
repz
xor
jnp
dec
inc
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
mov
dec
jnp
xlat
sahf
jnp
adc
mov
mov
insb
jle
fldenv
and
dec
jp
popa
fsubrp
int3
dec
scas
sub
sar
cmp
les
les
lret
cmp
das
mov
and
xchg
lcall
mov
sbb
jo
mov
push
xor
sub
or
ret
out
out
stos
arpl
lods
in
cmp
pop
fiaddl
adc
scas
dec
cmp
in
xor
pop
mov
sti
xlat
mov
ja
fdivrp
ljmp
lock
jp
inc
sbb
sbb
sbb
lcall
mov
rcl
add
addr16
add
jnp
push
dec
mov
inc
xor
mov
cmp
pop
in
cwtl
andb
icebp
ss
lret
adc
pop
mov
mov
dec
mov
insl
dec
push
inc
pop
xchg
sbb
mov
lahf
nop
push
cmp
xchg
add
int3
mov
pop
xchg
fimuls
iret
dec
ds
pushf
pop
lret
push
stos
inc
mov
stos
pop
out
leave
sahf
push
clc
sub
cmp
push
aad
jno
cmc
or
jae
or
sti
jbe
jbe
mov
xlat
arpl
mov
push
mov
rorb
sbb
mov
bound
aas
mov
jo
dec
pop
js
sarb
popa
aas
ret
pop
xchg
xorb
imul
into
clc
jo
in
fwait
adc
sbb
out
dec
or
cmp
pop
fistl
lds
mov
lds
dec
mov
pop
outsl
rcrl
dec
mov
jne
aaa
adc
shll
jle
xor
arpl
xchg
mov
inc
push
and
jecxz
mov
jmp
jp
dec
jle
mov
jmp
out
mov
fildll
sub
add
xor
fstps
sbbl
cltd
inc
cwtl
jg
addr16
mov
push
insb
pushf
addr16
jmp
mov
jge
cmp
cmp
adc
cvtpi2ps
cwtl
cmp
or
jle
outsl
push
mov
adc
popf
xchg
mov
add
sub
push
pop
scas
test
jae
jno
cltd
jecxz
pop
pop
mov
xchg
mov
xor
movsb
pop
and
lahf
push
jg
dec
sub
lahf
outsb
xor
or
ja
and
insb
pop
cli
data16
adcb
mov
out
hlt
aad
arpl
rclb
outsl
in
push
fimull
pop
adcb
arpl
shrb
ljmp
rcrb
gs
push
les
test
xchg
adc
or
cmpsl
xor
or
loop
jo
call
inc
dec
test
add
icebp
fcmovb
cmp
jb
jnp
and
dec
addl
push
mov
outsl
lods
xor
out
inc
pop
cld
das
testb
loopne
rolb
xor
hlt
out
iret
pusha
inc
loope
mov
icebp
or
data16
cmpsl
cmpl
pop
push
xor
popf
fnstcw
ficoml
cmp
lea
fdivs
aas
lock
adc
dec
pop
cmp
jmp
cmpsb
mov
xchg
add
lds
jbe
sub
lods
xlat
xchg
adc
push
and
cwtl
lcall
adc
icebp
aaa
out
inc
scas
sub
movsb
and
loop
lret
nop
add
sti
xchg
mov
je
and
cwtl
or
xlat
cltd
arpl
popa
xor
icebp
insb
mov
ret
out
pushl
aad
add
add
jno
add
mov
in
jns
out
xor
lods
xchg
cmp
pop
paddsb
lret
pop
cmc
ror
mov
popa
dec
cmp
push
inc
push
and
aaa
loope
ret
daa
out
iret
hlt
mov
dec
xor
add
orb
inc
sbb
mov
push
jb
cld
sahf
lcall
in
rcr
push
add
jmp
or
aam
or
cmp
sub
cltd
and
in
jle
push
pop
cli
aam
cmp
sbb
mov
cmp
fists
imul
sbb
sbb
push
sub
in
shrl
es
dec
jg
aaa
subl
xor
xchg
lods
arpl
jl
cmp
cltd
fldln2
jle
inc
stos
mov
jns
sbb
cli
scas
out
gs
out
adc
inc
add
adc
fsubp
out
xchg
sbb
inc
jmp
ret
mov
dec
out
jae
push
push
fildl
outsb
repnz
xchg
roll
daa
das
sub
inc
scas
js
imul
push
in
or
mov
les
ljmp
shrb
inc
push
and
add
mov
repnz
sbb
xchg
or
sbb
sub
in
testb
xchg
dec
sub
mov
jb
shlb
lret
mov
imul
orb
ja
push
aam
adc
andb
pop
in
mov
cmp
mulb
mov
daa
mov
ja
jmp
popf
clc
icebp
in
xchg
jbe
adc
or
jns
sbb
nop
push
scas
and
jo
rolb
jae
ss
les
ljmp
sbb
add
shl
movsb
popf
xchg
pop
fwait
jl
out
jo
subl
mov
xlat
xor
gs
jbe
lds
ret
pop
addr16
hlt
sbb
and
out
fnstcw
mov
mov
push
jae
pop
outsb
push
sti
mov
std
xor
and
cmpsl
enter
add
out
cltd
pop
dec
mov
fisubrs
dec
flds
das
hlt
mov
ds
mov
adc
in
sbb
aad
clc
dec
dec
sub
xchg
arpl
ret
lret
push
in
mov
rcll
jg
xlat
pop
push
or
sbb
adc
notb
xor
scas
aas
fnstcw
xchg
dec
mov
inc
ret
inc
popf
cmp
mov
shrl
push
mov
hlt
cmp
jge
sbb
in
loope
cmpsl
mov
add
adc
pop
pushf
cmp
add
inc
nop
mov
gs
ss
xor
flds
cmpsl
mov
xchg
push
pop
mov
aaa
xchg
push
aam
jns
imul
roll
cs
jmp
cmp
dec
lcall
pop
and
int
add
and
mov
sbb
insl
and
and
test
jg
leave
push
mov
std
arpl
xchg
add
or
ret
xlat
sub
or
jp
rol
push
sti
ljmp
jmp
cmp
vandnps
sbb
or
popf
mov
dec
test
ljmp
push
in
insl
jle
lea
enter
leave
dec
jp
pushf
stc
enter
mov
or
insb
mov
jg
stc
jae
mov
jl
sbb
pushf
pusha
jp
fildll
pop
add
xchg
int
test
insl
out
fstpl
and
xor
insb
popl
inc
mov
rol
pusha
in
stos
fdivs
imul
addr16
dec
or
insb
bound
add
xlat
pop
aam
shlb
inc
dec
pushl
loop
sbb
lret
daa
inc
ret
jmp
sub
movsl
data16
dec
paddsb
cmpsl
sbb
mov
lods
sub
push
jno
aas
xchg
sahf
xchg
cmp
cmp
fidivs
inc
ret
fsubrs
aas
iret
fdivrs
mov
inc
jecxz
rolb
in
cmp
ss
test
mov
shl
mov
mov
fstps
movb
cmpsb
insb
mov
rorb
cmc
push
in
inc
fisubrl
shlb
das
push
adc
ds
fcoml
sbb
cmp
jecxz
and
or
in
and
jbe
repz
mov
cmp
test
lahf
adcb
inc
dec
dec
sbb
cmpsl
mov
jmp
or
mov
gs
and
mov
adc
and
dec
sbb
nop
sarl
jp
pushf
addr16
xchg
das
out
dec
mov
push
aas
fildll
lock
sti
rcrl
adc
add
mov
popf
jo
movsl
das
push
cwtl
rorl
and
push
xlat
xor
xor
add
or
jle
mov
ds
jo
fidivrl
out
mov
dec
cmc
dec
sti
push
cmpsl
sbb
mov
pusha
push
enter
push
mov
subb
outsb
incl
or
leave
jp
imul
cltd
jnp
les
cmpsl
jnp
loope
jge
push
hlt
movsl
in
push
add
cld
dec
out
mov
jmp
and
xchg
mov
mov
push
aas
push
cmp
outsb
iret
xchg
mov
push
push
test
popa
or
lahf
xchg
cs
fucomip
xchg
push
inc
jb
dec
std
dec
or
rcrl
gs
push
jne
jmp
pop
sub
ffreep
out
shll
sbb
arpl
and
into
das
aad
test
frstor
inc
adc
adc
es
icebp
pop
sub
mov
sbb
pop
mov
mov
daa
adc
dec
xchg
mov
add
test
and
scas
add
and
loope
adc
and
push
enter
push
jge
mov
add
cmp
or
int3
aam
xchg
movsl
into
call
pop
leave
rorl
orb
dec
adc
data16
pop
xchg
jmp
pop
loope
cmpsl
mov
dec
mov
into
cmp
dec
test
dec
andb
test
adc
cs
std
repz
sbb
add
inc
dec
jae
fisttps
pop
or
xchg
inc
add
sub
or
push
scas
jae
xchg
rcll
es
je
mov
test
xor
mov
js
push
out
push
xor
push
dec
sbb
xor
rclb
mov
or
pop
mov
xchg
imul
add
adc
jb
shl
insl
inc
pop
or
std
out
int3
lods
pop
scas
hlt
mov
fidivs
sub
or
cld
insb
sbb
jne
lea
and
lds
cmpsb
or
mov
mov
push
enter
cmpsl
xchg
inc
push
mov
les
loop
sti
sbb
mov
pop
fs
sbb
pop
pop
lds
sub
xor
lret
sub
push
out
mov
push
hlt
int
mov
into
or
insl
enter
bound
fidivl
xor
push
out
lds
jae
or
and
ja
je
call
cwtl
pop
mov
imul
dec
add
push
out
push
adc
add
add
xor
out
aaa
xor
pop
movsb
push
adc
jge
xorl
out
push
out
xchg
mov
ret
adc
cli
leave
cmp
mul
jo
dec
iret
insb
mov
cmpsl
cs
test
je
pushf
leave
cmp
sub
aad
mov
aad
int3
imul
inc
add
fsubs
mov
mov
stc
imul
pop
sub
repnz
lret
xchg
iret
cmc
dec
dec
adc
sbb
mov
xchg
push
cmpsl
icebp
dec
adc
push
enter
dec
imul
test
arpl
mov
lahf
xchg
sub
dec
xor
mov
or
pop
xchg
mov
ljmp
movsl
jmp
sub
ret
cltd
inc
out
aas
pop
sbb
mov
js
fwait
sbbl
pop
std
mov
jmp
adc
insb
jp
das
pop
imul
pusha
jno
lahf
pop
xorl
fdivrs
mull
push
or
repz
mov
mov
rolb
push
push
xchg
pushf
pop
stos
pop
push
or
fwait
decl
outsl
sub
jp
pusha
pop
loop
and
shlb
add
ss
sahf
xlat
mov
push
adc
in
mov
pop
dec
sbb
push
mov
jl
cli
jg
outsb
dec
add
ljmp
dec
outsl
adc
dec
cmp
jmp
adc
and
iret
push
movsl
clc
jge
sti
popf
lea
repnz
mov
fwait
pop
xchg
push
jle,pn
cltd
and
sub
pop
cmp
add
test
cmp
lock
hlt
push
xor
jecxz
push
lcall
pop
or
lock
push
cmp
clc
fcoml
out
mov
sbb
loopne
mov
and
repz
mov
ja
or
into
mov
sub
adc
cmp
mov
std
adc
and
mov
sbb
inc
stos
add
iret
jne,pn
out
sbb
mov
adc
sub
fistpll
popf
lods
sbb
pop
mov
add
mov
or
mov
sub
jmp
or
ds
leave
mov
sahf
mov
push
jle
xchg
sub
or
jo
aam
int
fcmovne
xchg
xor
lock
or
sbb
andb
mov
sbb
dec
int3
int3
jns
push
dec
repz
xchg
adc
push
sbb
and
lcall
inc
outsl
mov
sbb
xchg
pop
cmp
mov
push
mov
inc
lret
and
int3
mov
inc
dec
fisttpll
fucomi
jg
pop
lea
pop
lods
lahf
shl
test
cmp
sti
push
mov
sahf
jecxz
loopne
sar
jecxz
xor
jbe
push
mov
jg
xchg
jns
fstpt
in
fmul
aad
pop
stos
in
stc
popa
mov
xor
fdivl
inc
cmpsl
in
cmpsb
imul
shr
arpl
inc
xor
and
arpl
push
leave
testl
lcall
or
jo
jmp
jecxz
pop
dec
ret
lods
pop
into
cmp
dec
insl
call
or
pop
lahf
add
jge
subb
inc
popa
pop
js
jmp
cmp
jp
jl
fsts
scas
push
sbb
and
pop
incb
imul
stos
scas
lods
ret
js
xchg
stc
popl
addb
sbbl
sbb
push
sti
and
jnp
imul
orb
fsqrt
les
cmc
fisttps
aam
mov
push
and
add
aas
or
aam
sti
or
adc
sbb
cmp
fbstp
fwait
xchg
rorl
and
or
aad
pushf
adc
inc
add
cltd
inc
sbb
jae
lret
daa
mov
bound
imul
repnz
les
divb
lods
lret
pop
insb
mov
sbb
push
out
inc
mov
int
jl
cmp
mov
cmp
jb
outsb
roll
jae
mov
andb
imul
push
or
cmp
outsb
mov
pop
shlb
outsb
cwtl
sub
clc
in
cmp
pusha
push
sbb
lods
adc
loopne
mov
movsb
dec
rcr
adc
sub
jmp
mov
mov
add
xchg
int
pop
xor
or
inc
inc
aad
add
sub
sub
mov
into
call
and
push
mov
adcl
rcrb
dec
stos
adc
inc
mov
jg
inc
mov
sar
push
and
cmpsl
aas
outsl
nop
cmpsl
xchg
fstl
je
aam
jecxz
pop
sahf
lcall
data16
out
mov
xchg
inc
data16
cwtl
mov
mov
movsb
xor
insl
out
in
sub
jle
test
push
movsl
fwait
and
mov
xchg
mov
gs
not
fwait
imull
and
cmp
inc
jmp
sub
test
mov
push
jbe
jg
pop
int
cmp
dec
adcb
cmp
sbb
pop
dec
lahf
out
dec
xor
les
aas
ffree
fadds
stos
mov
add
xchg
ucomiss
xchg
cltd
xor
bound
lcall
pop
fcomi
out
es
in
mov
stc
out
cs
or
mov
mov
dec
stos
lcall
lahf
lock
push
adc
gs
mov
and
movzbl
and
mov
xor
daa
insl
xor
call
xchg
out
sti
fwait
int3
jge
jp
out
lahf
or
mov
dec
mov
adc
cltd
loop
pop
jmp
out
in
data16
sub
mov
popa
mov
inc
cwtl
jmp
mov
scas
inc
push
lock
je
mov
jmp
sahf
stos
mov
pop
mov
pop
insl
aad
cmp
sbb
dec
mov
outsb
jne
push
push
add
mov
mov
int
cs
jns
insb
lea
aam
ja
ljmp
jg
push
shl
lcall
xchg
jb
cmp
loope
mov
test
push
xchg
add
les
std
push
and
int3
imul
push
rcrb
pop
test
cli
ja
iret
fnstsw
sbb
fldt
bound
mov
icebp
sub
adc
sti
mov
rclb
add
stc
adc
addr16
xchg
pop
mov
pop
xchg
add
aad
ret
dec
cmpsb
out
shrl
push
mov
fidivs
fsubl
cmp
dec
add
lret
std
inc
scas
sti
test
cmp
adc
add
gs
loope
xor
or
int
lea
inc
xchg
sub
cmp
mov
cmpsl
stc
iret
sub
sub
gs
add
jbe
or
test
jb
sub
stc
cmp
sub
jo
or
push
mov
test
push
das
sarl
daa
lcall
in
js
sub
xor
aaa
shl
test
shlb
dec
push
mov
or
mov
testb
cmc
jmp
add
push
ds
mov
inc
mov
aad
cmp
sbb
lret
inc
rcll
cmpsb
mov
mov
and
sbb
cwtl
sub
xchg
mov
icebp
fstps
movsl
jmp
dec
inc
stos
data16
pusha
adc
std
xchg
out
nop
xchg
imull
add
fwait
insl
xchg
sbb
push
xor
loopne
in
cmp
mov
mov
out
cld
sub
lahf
fldenv
cmp
imull
inc
mov
mov
mov
pop
fisubrl
adc
sti
ss
sbb
pop
adc
and
scas
mov
jb
cli
mov
cwtl
sti
leave
movsb
mov
and
xchg
inc
fmull
pop
pop
push
push
jne
mov
push
sahf
pop
mov
cltd
cvtpi2ps
sub
inc
scas
imul
cmp
pop
adc
ja
mov
ss
sarb
cmp
sub
dec
insl
xchg
add
and
xchg
subb
out
in
adc
arpl
fisubrs
push
xor
test
dec
cmp
jns
push
inc
pop
rclb
sbb
xchg
cli
mov
in
stos
mov
xchg
sbbl
and
inc
dec
jmp
in
movsb
cltd
jno
into
test
sbb
gs
mov
call
enter
fmuls
mov
aam
inc
loope
jnp
xor
js,pt
mov
push
stos
pop
pop
dec
out
fisttpl
pop
stc
or
imul
ficomps
adc
lods
and
repnz
fsts
xor
rcr
push
jmp
cmpsb
mov
orl
pop
jge
testb
fsubs
jp
cwtl
fucomip
jp
mov
outsb
add
and
mov
popf
imul
arpl
dec
and
jle
add
mov
je
push
push
mov
fdiv
sub
loopne
pop
adcl
test
movsb
addb
nop
daa
hlt
mov
lods
arpl
sub
fbstp
ja
jle
add
sbb
mov
ss
mov
sbb
divl
xchg
push
inc
das
out
ja
arpl
dec
cmp
in
sub
std
sti
mov
jne
aas
xor
sti
dec
xor
xchg
sub
hlt
sbb
cmp
andb
out
adc
hlt
enter
sub
test
out
pop
ljmp
daa
mov
mov
fs
mov
lahf
das
inc
inc
test
jge
jns
jecxz
cmp
lods
lret
rep
out
mov
dec
pusha
pop
out
aas
dec
lods
mov
sbb
pop
arpl
lret
push
xchg
cmp
lds
into
adc
cmp
xor
cld
les
jns
outsl
clc
jbe
imul
adc
jbe,pt
xchg
xor
push
jge
pop
loopne
push
arpl
loop
jae
pop
int
out
mov
mov
push
jns
cwtl
cltd
stc
in
mov
into
jg
push
adc
testl
fwait
cmp
lea
xchg
mov
xchg
jge
out
xchg
arpl
stos
repnz
idivl
rclb
cmp
call
cmp
mov
cmp
incl
arpl
loopne
pusha
loopne
in
and
outsl
mov
and
popf
inc
add
adc
rcr
fists
aam
xchg
subb
filds
cmp
mov
shlb
add
xor
roll
xchg
das
push
in
loopne
mov
pop
test
mov
pop
jns
cmp
sub
hlt
xchg
das
daa
aaa
outsl
cmp
fwait
adc
adc
pop
lret
adc
lahf
xchg
pop
add
enter
sbb
das
and
out
stos
aas
lret
sarb
xchg
push
push
push
icebp
mov
inc
loopne
xchg
clc
je
mov
push
mov
mov
pop
adcl
sbb
outsb
call
xor
or
or
xor
mov
cld
insl
xchg
jae
lock
insb
dec
out
mov
xor
lcall
jge
dec
mov
insb
in
jl
bound
or
and
lret
pop
mov
sbb
scas
stc
jmp
sub
push
or
jns
repz
pop
fdivrs
or
ja
outsl
adc
push
inc
add
popa
ret
jg
out
jo
add
inc
mov
or
inc
mov
ss
mov
into
push
mov
inc
mov
adcl
cmc
jne
lret
push
bound
orb
and
mov
cmp
ds
mov
iret
ljmp
test
mov
mov
into
cmp
lock
mov
sbb
jb
int
or
repz
lcall
mov
jnp
mov
adc
and
mov
xor
retw
jne
mov
mov
out
cmp
pop
nop
std
mov
int3
insl
out
in
sbbl
cmp
hlt
jl
jae
adc
in
in
clc
mov
pop
mov
mov
xlat
jo
xchg
arpl
sbb
adc
mov
cmpsl
pop
pop
xlat
push
mov
lret
mov
or
jmp
dec
bound
iret
fcoml
jge
sub
iret
repnz
lahf
pop
add
xrelease
in
adc
push
xor
add
loop
es
cld
or
jp
and
dec
xchg
pextrw
fwait
add
add
arpl
bound
mov
subb
xor
push
cmp
fisubrs
frstor
das
cmp
rcrb
arpl
push
or
ds
pop
jg
mov
mov
sub
xchg
loope
ljmp
sbb
int3
and
inc
nop
pop
push
or
mov
and
mov
jno
inc
loope
hlt
imul
cmp
sbb
pop
js
addr16
pop
pop
mov
jb
pop
dec
mov
mov
pusha
xchg
xchg
sahf
mov
add
in
out
push
sub
cmpsb
and
enter
add
pop
loopne
sahf
and
shlb
ficoms
fs
mov
dec
push
and
mov
xor
lods
mov
push
lods
repnz
inc
mov
rcll
and
pop
daa
test
pop
push
sahf
push
outsl
xor
lcall
xchg
sub
push
shrl
icebp
xchg
inc
lock
inc
les
adc
mov
test
mov
dec
aaa
xchg
xor
movsb
xchg
clc
xchg
or
fidivrl
stc
stos
mov
sahf
cmpsb
add
int3
pop
rolb
test
inc
cmc
or
mov
scas
insb
ds
lock
sbb
inc
or
xchg
adcl
jo
push
xchg
dec
jecxz
fpatan
rcrl
mov
ret
ror
bound
lds
push
rorl
cmp
push
mov
xor
push
mov
stos
adc
test
inc
mov
jns
sar
xchg
jns
inc
cmc
fistps
imul
mov
sbb
fildl
xor
xchg
outsl
je
cmp
cs
xchg
mov
dec
sahf
xchg
cmp
or
xchg
or
divb
xchg
dec
inc
lea
jo
sbb
pushf
je
jmp
adc
inc
cmp
sub
cmpsb
sti
enter
in
xchg
std
pop
int
add
int3
popf
or
inc
insb
mov
add
int3
subl
fdivp
inc
std
add
jo
addl
sub
inc
mov
pushf
stc
adcb
mov
push
out
stc
push
outsl
push
xor
das
jge
push
out
jmp
add
cs
mov
ss
or
pushw
inc
sub
stos
js
mov
clc
and
mov
sbb
mov
and
xor
lods
std
insl
push
inc
mov
in
test
in
push
aas
ret
mov
clc
push
repnz
lret
movsb
fadds
mov
sbb
and
pop
adc
loope
xor
jns
xchg
pop
lock
clc
xchg
sbb
das
jae
lods
jecxz
in
sub
ljmp
lock
mov
sub
xlat
mov
sar
pusha
xchg
xchg
pop
popa
push
push
out
rcll
testb
jp
adc
mov
out
add
shlb
fst
push
lock
inc
mov
lds
mov
mov
mov
and
outsb
addb
lret
add
mov
aas
jbe
pop
xor
lock
sbb
pop
sub
sbb
push
sub
pusha
sbb
add
jl
popa
ja
and
xor
xor
lods
popf
jl
and
add
ds
mov
add
pop
lds
pop
and
cmovle
repz
lcall
insl
push
pop
fistl
insl
xchg
push
inc
pop
idivl
in
lods
ljmp
scas
loop
mov
aas
mov
sbb
cmp
stc
or
pop
out
cmp
fldl
fstps
call
mov
lret
test
dec
inc
in
or
mov
es
sbb
pop
movsb
fs
rcl
into
pop
mov
adc
xchg
ficompl
test
jmp
repnz
mov
inc
pop
in
cltd
pop
mov
pop
adc
clc
pop
aad
pop
jno
and
int
fwait
test
loope
lcall
cwtl
sub
cld
sub
mov
or
in
inc
add
sbb
ja
lahf
outsl
movsb
dec
ret
insl
loope
in
jnp
sub
add
xlat
repz
ret
push
mov
ret
mov
jo
push
movb
daa
mov
xchg
mov
test
outsl
int3
data16
dec
mov
popl
enter
scas
mov
pop
adc
int3
inc
cmp
stos
jecxz
sbb
mov
xchg
mov
fimuls
clc
inc
int3
out
jb
dec
mov
vcvtpd2dqy
mov
and
and
lret
rcl
js
mov
in
nop
jo
popa
filds
inc
loop
adc
movntq
inc
mov
sub
mov
mov
lea
dec
push
rclb
sub
add
loope
xor
ret
pop
jge
add
mov
cmpsl
and
loope
push
mov
scas
fmull
stos
cmp
push
hlt
sbb
pop
push
out
scas
or
je
pop
and
push
jp
jb
pop
add
mov
and
xchg
lret
shlb
xor
fstps
notb
clc
fisttpll
sub
adc
sub
sub
fs
jecxz
or
jge
in
testl
outsl
xlat
xchg
xor
jle
cmc
leave
sub
sub
fcoml
xchg
bound
sti
leave
mov
mov
cli
popa
ja
popa
sub
imul
ljmp
js
std
and
mov
fisttpll
jne
add
imul
ja
xchg
pop
mov
insb
fistpl
ljmp
mov
dec
imul
inc
pop
add
dec
mov
cwtl
ss
and
pop
cmc
mov
insl
iret
push
push
inc
fwait
sti
cld
test
xchg
mov
and
pop
push
out
jmp
and
inc
fcompl
fildll
and
push
jae
mov
lea
adc
movl
imul
ret
and
outsl
out
scas
push
ss
imul
sarl
xorb
inc
dec
scas
les
cmp
mov
jo
cmp
adc
icebp
jno
stc
insb
testl
xchg
cltd
jge
mov
loope
xchg
pop
and
mov
retw
xlat
cltd
xor
add
lcall
and
fmul
int3
sti
mov
test
ja
test
hlt
push
push
sub
mov
dec
sbb
ret
aam
mov
leave
cmc
cmp
and
xor
wrmsr
mov
sbb
jo
cmpsb
ds
xchg
aad
sub
js
jmp
cmpsl
scas
and
mov
xchg
sets
push
testl
lods
cmpsl
cs
cmc
cmc
rcr
inc
xor
xor
stos
clc
push
neg
dec
scas
inc
fisubl
call
insl
sub
add
movsb
xlat
push
or
jae
xor
jno
sbbl
rorl
sar
lock
fwait
mov
push
jp
add
jecxz
and
adc
imul
xor
je
fsubs
jns
pmulhuw
xor
sub
inc
mov
dec
and
sub
sbb
mov
int
dec
pushl
lea
push
push
cmpsb
mov
nop
fmuls
jle
xchg
lea
push
mov
push
jnp
dec
mov
push
xor
mov
mov
mov
hlt
cmpb
jnp
scas
mov
sub
jo
xor
call
push
add
daa
lret
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
xor
lret
push
jb
jnp
sahf
jnp
xor
fwait
sbb
cmpsl
mov
jbe
es
not
dec
dec
insb
data16
fimull
and
xor
xchg
sub
imul
dec
leave
lds
shlb
add
mov
sbb
fldt
popl
jbe
aam
pusha
push
inc
fldln2
insb
pop
icebp
add
xchg
sub
pop
push
lea
fs
cld
scas
pop
add
sarl
sub
cmpsb
lods
pop
ficompl
push
pusha
adcl
push
mov
mov
xor
or
jg
scas
cwtl
fisttpll
cmp
addb
sbb
popf
int3
out
mov
in
lret
aad
icebp
mov
mov
cmpsb
push
mov
sub
push
out
sub
xor
rcll
pop
pop
cli
jne
stc
or
test
mov
outsl
ljmp
mov
push
lock
ficompl
mov
js
sarl
pop
mov
and
daa
adc
out
inc
in
data16
mov
clc
push
push
ljmp
movsl
mov
gs
fimull
pusha
sub
dec
pop
mov
mov
inc
subl
xlat
lods
add
neg
cmp
fistpl
orb
into
cld
test
fcoml
aad
lret
jne
xchg
xchg
mov
sub
sahf
xor
popa
fs
mov
daa
jle
insl
ljmp
testb
inc
rcrl
jmp
paddusw
les
lret
inc
push
and
mov
mov
adc
xchg
inc
fwait
les
imul
inc
pop
mov
jne
int
outsl
pop
lret
xchg
mov
pop
mov
inc
mov
rcll
shr
jne
imul
sub
or
insb
jo
push
mov
sub
mov
pop
pop
jne
push
js
cmp
clc
or
pop
mov
push
sbb
jg
out
or
mov
jns
dec
fmull
loopne
fs
ret
mov
frstor
shr
sub
movsl
dec
mov
jg
lcall
mov
pushf
sahf
inc
ss
xchg
stos
jo
xchg
rcrl
movsb
outsl
andl
xor
ret
push
hlt
aaa
mov
sti
in
jle
movsb
xchg
adc
scas
cli
push
pop
mov
divb
sub
xchg
pop
sbb
push
mov
outsl
cmc
add
cmp
push
jno
out
outsl
sbb
xor
fistpll
mov
xchg
push
xchg
mov
sbb
cltd
aas
xchg
notb
mov
clc
xor
arpl
jb
fsubs
push
rcll
and
cmp
sub
movsb
stos
lret
push
movsb
loope
or
jle
mov
out
dec
sbb
jo
xorl
test
sub
sub
loopne
xchg
jmp
orl
push
and
xchg
adc
outsb
mov
das
lahf
pop
sbb
adc
filds
mov
je
pop
pop
inc
xchg
fcmovnu
fists
mov
add
ret
fistps
xor
mov
and
adc
mov
loopne
aad
fs
sub
loope
enter
imul
orb
jle
sbb
aad
popf
mov
push
jo
rcll
mov
jmp
sbb
mov
push
hlt
sub
pop
add
stos
scas
pusha
shrl
and
mov
inc
cmc
inc
jno
insb
xor
xor
enter
or
hlt
xchg
sub
xchg
or
enter
testl
mov
pop
mov
int3
cmp
imul
push
add
jno
sbb
pop
pop
adc
adc
scas
lea
add
jecxz
inc
mov
test
add
mov
jo
ret
dec
jns
adc
sbb
dec
push
xchg
scas
call
jns
mov
test
aaa
or
sub
xchg
lods
mov
cs
mov
jecxz
pop
fisubl
xorb
shlb
call
aad
popf
push
ret
es
lea
popa
fstpl
xor
and
push
cltd
insl
fisttps
or
das
dec
pop
lds
clc
cwtl
and
pop
jne
or
roll
pop
out
or
dec
pop
dec
out
xor
mov
aas
sbb
mov
aas
dec
testb
aaa
iret
std
jne
add
sub
adc
jb
mov
mov
inc
sbb
pushf
push
lret
jo
movsb
mov
jb
movsl
cmp
mov
addr16
bound
lret
jmp
std
pmaxsw
cmp
xor
faddl
xchg
lcall
sbb
aaa
push
inc
cld
push
outsl
ret
test
sbb
add
arpl
jno
subl
addr16
inc
outsb
fcoml
cmpsl
sub
fnstcw
dec
sbbl
jg
jmp
sbb
inc
cs
mov
and
mov
add
inc
mov
mov
adc
xchg
xchg
and
mov
push
xlat
xchg
cwtl
or
sti
js
cli
pop
adcb
push
jle
xchg
fdivr
shr
in
test
add
adc
xor
sbb
adc
inc
repz
sub
aam
fldl
outsb
pop
aad
fists
add
mov
int
repnz
pop
cmp
sbb
and
or
pop
jns
pop
outsb
xor
push
dec
or
gs
or
je
subl
dec
cmc
mov
cmpsl
pushf
std
nop
cld
sub
cwtl
cs
and
mov
inc
into
mov
arpl
push
sbb
and
cmpl
and
cmc
mov
push
je
es
jns
ss
out
mov
or
out
jmp
or
jae
roll
jne
dec
jno
inc
or
aas
fisttpll
fs
lcall
xchg
xchg
xor
arpl
pop
mov
add
aad
imul
out
pusha
sahf
faddl
fst
dec
fnstenv
sbb
test
xchg
mov
icebp
leave
push
shr
popf
iret
rcr
jge
je
lods
shrb
imul
mov
jmp
jmp
imul
int
sub
insb
xchg
ret
xor
cs
adc
ljmp
cmp
ret
sub
clc
add
rcl
ds
push
rcrl
or
and
sub
adc
into
out
jne
push
cld
lds
jmp
fsubrp
outsl
push
or
in
fwait
adc
inc
xchg
in
jmp
iret
add
and
pop
jecxz
movsb
dec
dec
pop
dec
lret
mov
inc
in
ds
xor
std
pop
inc
orl
push
cli
xor
dec
xchg
xor
cmc
movsl
repz
jl
fnstenv
dec
and
pop
sub
les
pop
lret
cmpsb
int3
push
daa
jmp
push
in
insl
xor
pop
es
aad
cmp
inc
pop
xchg
adc
pop
sarb
xor
mov
dec
dec
xor
adc
xor
icebp
xor
xor
sub
dec
imul
mov
xchg
mov
cli
lea
add
pop
push
test
cmp
or
push
lret
addr16
fdivp
adc
repz
sub
out
es
rolb
mov
fs
or
das
rcrb
loope
pop
ljmp
or
sbb
out
iret
mov
gs
test
jle
mov
add
mov
lret
push
pop
pop
mov
inc
jo
push
cmp
push
pop
sub
ret
xchg
sbb
clts
sahf
call
ret
sbb
mov
jecxz,pn
mov
jle
mov
inc
imul
mov
and
pop
mov
mov
ss
dec
xchg
cmp
push
in
xor
leave
xor
push
loop
sahf
shlw
roll
dec
cmp
adcb
jae
scas
iret
sub
inc
enter
sbb
test
jbe
xor
sbb
mov
adc
cld
cmp
stos
and
cmpsb
jmp
lods
mov
cmp
clc
dec
xor
jno
jb
jecxz
cmp
pusha
or
fidivl
add
mov
lcall
add
mov
sbb
popa
mov
mov
jbe
test
outsb
adc
xor
int3
cmc
in
dec
mov
mov
fmul
push
lock
dec
xchg
insl
sahf
pop
push
mov
daa
es
in
ja
lods
mov
mov
je
add
outsb
out
push
sbb
mov
jecxz
or
sbbb
test
mov
imul
jb
ja
js
sarl
xchg
cmp
ret
test
xor
movsb
shll
pop
adc
das
xor
outsl
or
inc
and
dec
popa
and
pop
imul
mov
dec
mov
sti
mov
imul
mov
lret
addr16
or
add
jg
cmp
loope
or
mov
arpl
pop
arpl
pop
int3
sti
pop
lock
daa
xchg
inc
sti
pop
cwtl
push
sti
pop
add
cmp
sarb
pushf
pop
adc
adc
push
cmp
imul
lods
pop
jge
push
mov
xchg
cmpsl
pop
sub
aas
mov
xor
lea
mov
stos
dec
inc
loopne
and
sbb
jmp
dec
and
test
pop
jnp
jmp
hlt
in
test
pushf
sub
mov
pop
in
adc
out
out
jmp
out
sbb
or
dec
xor
pop
mov
cmp
outsl
sub
nop
dec
mov
data16
mov
xor
subb
mov
pop
out
in
scas
inc
or
int
pushf
cmp
mov
xchg
lcall
jns
and
mov
psubw
loope
mov
pop
orl
out
sbbb
dec
dec
or
mov
xchg
sub
adc
push
mov
adc
xchg
sub
mov
mov
movsb
xchg
clc
lods
mov
ljmp
add
add
stos
push
mov
or
mov
lret
jbe
cmp
call
sub
xchg
stc
mov
sbb
loopne
pop
jecxz
mov
lods
dec
sbbb
lock
icebp
jae
gs
jle
jno
dec
mov
push
les
out
imul
or
popf
mov
movsl
filds
cmpsl
nop
push
aas
jg
pop
xchg
lcall
aaa
push
out
cld
or
out
dec
adc
sub
sbb
mov
jle
fstpl
dec
test
int
popf
icebp
enter
rcl
mov
in
rol
jae
mov
sbb
mov
or
xchg
mov
push
push
ja
pusha
ljmp
mov
scas
clc
sahf
in
popa
sbb
daa
dec
sbb
adc
aaa
out
outsb
insb
test
mov
lret
sarb
mov
dec
pop
fsubs
mov
dec
test
leave
sti
insl
ljmp
xchg
mov
mov
cmc
jnp
fisubs
adc
pusha
in
xor
addl
sbb
cmp
or
les
in
jb
dec
jmp
xchg
inc
lods
dec
cmp
mov
ljmp
inc
mov
hlt
in
pop
pop
cmpsb
fldcw
sub
je
lods
faddp
shl
mov
lcall
sub
lcall
pop
lahf
push
or
cmp
sub
jecxz
nop
pop
daa
mov
dec
inc
add
mov
dec
clc
test
push
fildll
jae
mov
jmp
push
dec
push
fdivl
and
jge
adc
jle
in
sub
or
cmp
lock
sbb
repnz
adc
xchg
pop
js
lret
rep
or
or
and
mov
mov
pop
add
inc
or
shlb
rep
sbb
movsb
repnz
jl
sub
enter
dec
pop
xor
pop
lahf
mov
std
cmpsb
cmp
aad
adc
mov
xchg
add
std
pushf
mov
jns
jbe
loop
sub
cmp
push
ljmp
loop
out
pop
xchg
ret
xchg
mov
insl
seto
push
scas
jo
mov
hlt
xlat
add
rcrb
xchg
addr16
stos
std
push
call
andl
cmc
mov
xchg
jae
nop
xchg
push
jmp
lods
mov
xor
cmc
shl
shlb
les
jb
inc
stos
push
ret
and
adc
xchg
arpl
aaa
imul
dec
push
das
ret
clc
scas
sbb
pushf
sbb
push
mov
test
xor
jecxz
xchg
sbb
pushf
xor
xacquire
lret
push
addr16
mov
icebp
hlt
cmp
sti
clts
fmul
xor
dec
inc
jg
in
aaa
cmc
inc
and
xchg
sbb
inc
sub
mov
mov
enter
add
lods
add
push
inc
mov
pop
stos
push
sahf
jecxz
mov
pop
inc
arpl
push
shr
loope
sbb
pop
inc
int3
pop
inc
mov
lods
shll
inc
or
dec
mov
mov
sbb
outsb
cmp
jno
adc
inc
stc
rolb
ret
dec
outsl
mov
leave
mov
mov
add
inc
lret
lods
xchg
es
jnp
test
cwtl
cwtl
and
es
insb
ret
outsb
call
lods
call
pop
pop
cmc
bound
push
inc
sub
fisttpl
addr16
jno
in
sub
jne
mov
sub
rclb
jmp
mov
jo
sbb
ja
xchg
adc
test
movsl
fwait
dec
add
jbe
or
adcl
mov
mov
loop
push
jno
pop
movsb
jae
sti
ss
insb
mov
incl
lock
out
pop
xchg
outsl
lcall
dec
cwtl
in
and
testb
sub
scas
inc
or
push
push
cltd
cmp
lea
call
xchg
out
call
cmp
cli
out
xlat
add
ds
sub
mov
adc
dec
mov
ljmp
and
ja
sahf
xchg
mov
getsec
sub
fsubr
dec
fs
sub
jg
es
int3
loop
inc
jmp
jns
outsb
lea
in
mull
stc
xor
sbb
add
fimull
add
pushf
xor
addr16
jo
pop
xchg
in
clc
cmp
adc
dec
jnp
jnp
or
mov
push
sub
jmp
je
sahf
sbb
in
imull
sub
icebp
decb
es
loop
cld
out
or
cltd
jo
mov
mov
insl
mov
repnz
test
jl
pop
jnp
pop
loope
stos
sub
adc
frstor
notl
xor
push
pop
dec
pop
fiadds
mov
adc
mov
add
inc
pop
mov
push
je
mov
add
pop
inc
incl
lods
jecxz
adc
inc
and
cmp
add
cmp
sahf
add
push
and
push
sub
xchg
jb
mov
xor
mov
inc
pop
adc
mov
out
and
aad
inc
pusha
leave
fcomps
xchg
mov
out
scas
pop
mov
cmp
in
bound
add
data16
je
jl
sub
xchg
loopne
xchg
push
jge
mov
cmp
sub
out
popa
or
subb
mov
dec
rclb
inc
cmp
fwait
mov
shrl
sbb
shld
push
push
mov
or
xor
rcrl
add
push
aaa
xchg
movsl
xchg
adc
in
sbb
outsb
jle
out
int
mov
lods
xchg
stc
inc
mov
push
dec
stos
out
fimuls
cmp
or
mov
cltd
sub
rorb
cltd
jp
jl
js
int3
std
ret
cld
mov
jb
jb
mov
leave
jnp
outsl
and
mov
fcomip
into
ja
fnstsw
cmp
int3
aas
rorl
scas
mov
push
mov
add
addr16
jp
push
ror
xor
lcall
add
sbb
mov
fwait
addl
dec
xor
fisttps
adc
sbb
adc
js
cli
mov
push
fdiv
inc
ret
js
pop
pusha
sti
pop
repz
xchg
and
insb
fstpl
pop
or
inc
fldl
out
sbb
rol
jo
fsubl
loopne
sbb
mov
add
mov
or
outsb
into
mov
jecxz
sub
cmpsl
rcrl
scas
xchg
xor
xor
jne
out
sarl
pop
mov
test
lret
bound
repz
stos
mov
fdivl
insb
mov
rclb
adc
cwtl
mov
stos
add
push
adc
mov
jp
cmpl
repnz
xchg
arpl
pop
dec
adc
or
mov
mov
jae
out
int
std
lods
push
dec
adc
and
dec
lds
inc
mov
sub
movl
jbe
jns
cltd
scas
mov
mov
out
inc
pushl
mov
push
xlat
jge
sub
out
push
stos
or
scas
stos
outsl
imul
and
jle
cli
jle
je
and
xchg
dec
rcr
outsl
jg
mov
xchg
sahf
mov
lcall
pushf
enter
popf
cmpsl
cmp
lret
mov
popa
and
stos
hlt
xchg
js
stc
cld
movsl
into
sub
pop
and
xchg
mov
mov
int3
cmpsl
subb
das
xor
icebp
lahf
test
adc
sti
push
and
out
pop
clc
mov
jl
jmp
xor
sub
ret
aam
sbb
fnstenv
repz
test
add
scas
or
sub
mov
repnz
add
jmp
cmp
es
cli
lret
and
pop
ds
sbb
lcall
pop
sbb
dec
mov
lret
or
xchg
push
lahf
popa
or
pop
clc
in
fwait
xchg
pop
dec
arpl
jb
xor
std
ds
dec
aas
imul
loop
cmp
test
jge
shr
int
test
inc
fmuls
outsb
or
adc
daa
icebp
push
jb
arpl
add
mov
push
aam
test
xor
sub
inc
jno
jle
aas
stc
pop
mov
pop
fcmovu
push
cmpsl
sarl
sbb
adc
movsl
push
pop
popf
icebp
sub
into
push
pop
int
pop
rcr
and
in
sahf
adc
loopne
bound
in
sub
xor
sub
lock
mov
add
jg
jg
movsl
or
mov
mov
imul
out
xlat
test
and
sbb
push
sbb
jmp
rcrl
cmp
mov
inc
pusha
inc
pop
or
cli
or
mov
jns
and
loop
cmc
in
cld
dec
ljmp
push
xlat
in
mov
dec
gs
popa
and
pop
gs
outsb
dec
sub
push
sbb
scas
cmp
sbbb
sub
insl
jb
pop
mov
jge
lods
cwtl
xor
test
adc
adc
out
mov
jge
mov
repnz
out
or
fs
sub
movsb
aad
popf
or
jl
clc
jecxz
mov
bound
sarl
sub
fs
dec
dec
test
and
lods
adc
or
xchg
pop
test
sbb
or
mov
push
pop
outsl
stos
ljmp
sti
loopne
push
mov
jb
popf
inc
stc
and
lock
jle
jl
pop
sar
mov
add
popa
mov
call
xchg
movzbl
mov
sbb
std
jg
stos
ret
jp
pusha
repz
ret
jnp
sbb
movsb
mov
scas
and
cmp
ret
addr16
jae
fs
lcall
repz
sub
cmc
xchg
lock
mov
and
icebp
push
out
jne
fimull
movsl
jmp
repnz
jbe
lcall
rcl
lock
lret
mov
sahf
mov
or
std
idiv
push
xchg
movsl
push
pop
add
loope
mov
les
xlat
pop
sbbb
es
mov
pop
fistps
pop
lcall
inc
xor
pop
push
cwtl
xchg
mov
pop
xchg
and
xchg
push
cli
sub
pop
or
push
push
fiadds
push
push
mov
and
dec
cli
adc
and
icebp
sbb
or
xor
loopne
add
das
xchg
or
cmp
sbb
jle
adc
popf
ficoms
je
sub
and
lret
jns
sti
xor
stos
int
sub
sti
fmul
mov
stos
add
ljmp
push
int3
aam
push
outsl
add
mov
insb
repnz
lea
and
int
cmp
sub
nop
mov
std
push
push
push
sub
data16
push
xchg
jbe
shlb
or
sahf
mov
sub
mov
movsb
mov
icebp
es
jecxz
cmp
movsb
pop
test
int
sub
fdivr
jg
xor
and
and
fldenv
sahf
mov
shll
push
fst
ss
cmp
nop
scas
pop
dec
test
pop
and
or
pop
mov
add
dec
mov
xchg
adcb
mov
les
std
mov
dec
mov
arpl
or
xor
in
jl
pop
inc
jle
aaa
and
repz
dec
xor
repz
rclb
adc
pop
idiv
fisubs
sub
push
jnp
idivb
jmp
cmp
dec
push
int3
and
or
cwtl
adc
aaa
adc
cmp
mov
clc
pop
mov
mov
popf
fwait
mov
jns
xor
fwait
ret
xor
aad
movsl
in
or
lcall
aas
lods
mov
test
cmpb
es
jecxz
mov
xor
inc
mov
xchg
jb
adc
mov
push
push
jecxz
jl
fnsave
add
jl
cmp
jmp
lret
lds
xor
andb
mov
loop
out
push
loop
jae
int
js
rcrl
xchg
ret
adc
imul
shrb
mov
add
cs
mov
imul
pop
ss
adc
jg
psrlw
adc
xor
lcall
rol
cmp
jp
sub
gs
xor
pop
sbb
sar
fcoms
sar
pop
pop
clc
pop
fisubl
pop
mov
jmp
push
hlt
and
xlat
fidivs
andb
mov
sub
std
lret
fisubl
or
cmp
or
mov
pop
cmp
iret
or
sbb
lcall
xor
fs
das
adc
push
adc
popf
adc
out
or
jno
rorl
push
loope
and
mov
lret
inc
sub
xor
push
inc
xchg
push
xor
arpl
in
insb
add
dec
andb
adc
add
call
pop
lret
inc
or
cmp
pop
sbb
stos
jg
adc
xchg
aaa
icebp
dec
fimuls
sbb
movsl
cmpsl
mov
in
dec
les
shlb
inc
sbbl
xchg
xchg
outsb
lock
iret
rolb
psllw
rclb
es
fisubl
xor
adcb
repnz
jb
enter
sbb
pop
es
dec
sarb
cmpsl
cmpsl
mov
test
lahf
inc
in
and
fidivrl
push
cwtl
sbb
xor
test
jbe
in
xchg
push
test
pop
imul
mov
arpl
sarl
inc
mov
mov
lods
cld
scas
and
movsb
mov
loope
cld
push
mov
sub
sbb
jbe
sahf
adc
fwait
sub
scas
pop
jno
or
mov
dec
ja
mov
sbb
pusha
pop
rcrl
dec
adcb
add
out
scas
iret
cltd
out
int3
mov
or
push
ffree
lock
push
add
insl
notb
or
dec
pop
repz
in
sbb
mov
test
cmp
lds
mov
out
fnstsw
je
or
das
cmp
into
or
xor
lahf
sub
call
pop
and
inc
mov
shll
sbb
repz
mov
popa
xchg
stc
dec
or
xor
xchg
ds
pop
rol
mov
test
pop
push
in
mov
in
loope
fcomi
mov
sub
add
fsubrl
dec
fdivl
push
mull
jns
aam
aad
cmpsl
dec
cwtl
push
lock
mov
movl
mov
stos
sub
fcomps
push
daa
loope
mov
push
cmp
movsb
cmpsb
jb
xchg
jecxz
mov
hlt
sbb
jne
push
xor
mov
push
xchg
fwait
mov
jo
dec
mov
fincstp
add
sub
pop
and
dec
pop
int
icebp
mov
push
out
fcoms
lcall
orb
push
shll
test
testl
pop
enter
xor
inc
int
xor
jb,pn
das
enter
fsubp
mov
iret
or
repz
lea
and
and
inc
aas
popf
lods
jle
in
add
das
loopne
pop
shlb
pop
push
push
stos
and
lds
xchg
negb
xchg
je
mov
mov
or
pop
push
fstl
js
or
sub
add
xor
hlt
mov
pop
pusha
push
or
fmull
xor
jecxz
pop
aam
sahf
addr16
loope
adc
mov
in
inc
xchg
xlat
adc
fstpl
and
mov
out
divb
and
addl
pop
mov
mov
pop
and
xchg
jns
push
subl
sub
cmp
movsb
inc
jno
xchg
push
daa
or
cmpb
in
lods
mov
adc
xchg
sbb
lret
xchg
stos
ljmp
orl
and
or
push
fisubs
call
mov
nop
sub
ret
cld
inc
fsub
add
js
sbb
pop
jmp
es
push
sbb
into
dec
cmp
movsl
stc
xor
cs
fcoml
sub
das
fnstenv
pop
test
pop
addl
push
loopne
iret
sbb
mov
addr16
loop
jbe
aas
xor
push
loop
inc
ja
xor
cli
cmp
pop
insb
mov
or
dec
sahf
xlat
repz
sbb
push
fcomps
into
mov
mov
add
pop
lea
inc
fdivr
hlt
sbb
loopne
sbb
mov
xlat
mov
push
push
in
jnp
and
cmpb
in
mov
push
mov
aaa
js
sub
jp
in
loopne
neg
sub
loope
sbb
fisubrs
jbe
inc
inc
rcll
lret
sahf
mov
adc
imul
inc
fbld
push
mov
xchg
mov
sub
sarl
pop
imul
sbb
push
xchg
adc
mov
sub
adc
push
xchg
mov
ja
add
sahf
rcrl
ljmp
sub
cmp
mov
fists
push
pop
inc
xchg
dec
jnp
jns
push
lea
mov
xchg
sbb
lods
iret
pop
mov
lret
imul
test
dec
gs
sub
sbb
repz
sub
jge
push
loope
mov
inc
stos
sahf
pop
jb
mov
lret
pop
or
inc
adc
xchg
idivl
add
aaa
test
cs
dec
adc
push
in
jne
cmpsl
sub
push
dec
mov
ljmp
mov
rolb
jb
mov
jbe
test
daa
add
mov
pop
movsl
sub
or
or
mov
cmp
loope
clc
pusha
cmp
mov
mov
mov
sbb
add
xchg
sahf
jns
cmp
mov
inc
popf
fidivrl
sbbb
push
rcll
and
xchg
movsl
insl
popf
xor
jecxz
nop
cld
test
jg
mov
sahf
cs
dec
loopne
nop
sbb
stos
pop
dec
ficompl
cld
popa
xor
faddl
cmp
ljmp
fldcw
repz
fcmovu
mov
cmp
xchg
jmp
cli
jl
stos
test
inc
popf
push
test
outsb
xchg
mov
dec
push
pop
jnp
ds
mov
fsubrl
test
fimull
sub
push
in
fisubrl
rolb
int
adc
iret
testl
in
mov
adc
or
rcrl
mov
jno
xchg
test
or
data16
sub
mov
bound
ja
add
mov
push
or
pop
jge
fdivl
adc
sub
scas
jb
fldl
sti
sti
push
inc
adc
cmp
jl
xor
or
push
sbb
inc
test
or
jle
mov
mov
cmp
sub
sbb
lds
iret
fwait
test
xchg
ja
inc
xchg
push
psllw
xor
xchg
flds
push
pop
ja
mov
add
stc
inc
sub
into
dec
mov
imul
std
inc
jge
jg
xchg
cmp
fisubs
adc
sub
or
dec
sbb
adc
xchg
pop
ljmp
mov
mov
aaa
pop
and
repnz
ja
in
xchg
and
divl
pusha
dec
jne
dec
or
sub
aas
cld
or
xchg
out
idivb
test
pusha
sahf
jle
sub
push
loope
aam
js
cmpsl
add
aad
sbbl
in
fcomps
aad
xorl
jnp
cmc
sbb
test
xchg
mov
xor
jae
mov
mov
loope
pop
inc
icebp
pop
clc
sbb
ret
rcll
jne
xorb
xlat
out
minps
addb
cld
dec
call
int3
mov
or
dec
xchg
xchg
sub
movsb
imul
xchg
push
rorl
pushf
xchg
mov
popf
shll
addr16
repz
push
andl
adc
push
sub
int3
cmp
xchg
pop
ss
nop
pop
arpl
add
loope
std
pop
lock
push
adc
ror
push
xor
mov
cmp
xor
shlb
inc
sub
dec
bnd
scas
cmp
push
mov
and
inc
std
pop
or
leave
ret
push
scas
popf
imul
std
test
push
dec
ficoml
mov
add
cs
in
xchg
sub
dec
add
pop
cmpb
jno
bound
lods
dec
mov
xlat
or
jmp
iret
cmp
lock
int
adc
test
call
adc
pop
out
clc
rorb
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
std
es
pop
push
jl
mov
movsl
sbb
jp
dec
mov
in
pop
dec
pop
add
adc
sbb
push
mov
xchg
loop
insb
popa
or
aam
inc
push
jmp
add
int
pmaddwd
shll
push
repz
imul
xchg
xor
fbld
pop
or
das
and
imull
inc
pop
cwtl
into
or
inc
xchg
je
je
xchg
ss
dec
xchg
clc
push
push
lods
outsl
sub
aaa
loope
aas
mov
insb
inc
out
pushf
lret
xchg
push
sbb
popf
andb
insl
xor
or
hlt
call
and
enter
sbb
push
nop
jle
pop
shrl
sbb
div
outsl
fdivrp
insb
xor
fnstenv
jg
adc
xchg
stos
mov
cmp
cmovge
sub
jbe
push
jl
cmpsl
aaa
jne
push
push
fcompl
xchg
xchg
inc
sti
ljmp
push
out
rcll
or
sbb
shrl
je
push
repz
loopne
fnstcw
dec
scas
aam
add
hlt
mov
aaa
shl
pop
inc
mov
dec
imul
push
cli
call
or
xchg
mov
rcr
scas
pop
int
pop
insb
dec
cmpsb
mov
mov
or
scas
shrl
and
push
fs
push
fcompl
sti
call
shr
sub
dec
dec
inc
out
negb
fwait
xor
addr16
sub
xor
mov
mov
je
movsb
pop
into
or
lret
dec
das
out
les
mov
sub
sbb
adc
leave
es
sub
mov
mov
leave
mov
iret
mov
xchg
xor
leave
cmp
gs
cmp
imul
lock
pushf
movsb
sbb
cli
sub
outsl
pop
or
icebp
aam
int3
jle
pop
stc
int3
out
xor
pop
enter
lret
out
gs
pop
fnsave
jns
mov
lods
jmp
xchg
int3
jae
movsl
bound
sub
sbbb
mov
xor
cmpsl
nop
inc
mov
dec
push
mov
lcall
fstl
aad
dec
mov
lea
sahf
je
dec
call
xor
xchg
test
in
fsubl
push
pop
mov
and
mov
lds
xlat
repnz
cmpsl
jecxz
dec
ret
dec
into
ja
into
rorl
xor
jns
or
rorl
cmc
pop
mov
fcoms
mov
cmp
in
sbb
and
mov
lods
push
jmp
dec
cmp
xchg
or
aas
popf
fistpl
clc
out
out
repnz
push
inc
leave
loopne
inc
insl
lock
push
int3
inc
in
cmp
sbb
ss
rolb
les
push
mov
push
or
cmpsb
in
xchg
xchg
stos
aaa
stos
mov
push
sbb
xchg
xchg
repz
jae
mov
ljmp
int
cs
dec
push
inc
add
data16
sbb
mov
mov
test
mov
xchg
fadds
ret
pop
mov
mov
fdiv
shrl
icebp
cli
add
es
xchg
push
cli
ret
fsubrp
pop
dec
fdivs
cmp
sub
sub
sub
gs
sub
cmp
out
es
xchg
cs
and
mov
jle
cmp
ret
lcall
jp
inc
ljmp
and
ljmp
cmc
lret
jns
pop
mov
fsubl
nop
mov
xor
fisubrs
lds
adc
shll
cwtl
divl
mov
loopne
sub
out
nop
daa
sub
xchg
push
jns
mov
add
subl
and
cmpsb
mov
ss
mov
cld
push
std
in
hlt
adc
and
push
out
sbb
push
sub
lahf
idivb
mov
push
out
sub
nop
pop
cmp
pop
xchg
dec
cmp
push
bound
outsl
shr
test
jge
sub
jae
insl
icebp
cmp
arpl
loop
mov
xchg
and
ret
mov
pop
loopne
outsb
or
movsb
jl,pt
pop
or
inc
aas
dec
cmp
push
jno
int3
call
mov
push
and
sbb
mov
daa
pop
cmpsl
sub
ds
cmp
clc
mov
ficompl
cmp
sbb
int3
aas
push
mov
push
pop
inc
pop
cs
in
mov
pop
test
loope
repz
cld
xchg
inc
add
push
push
dec
aaa
push
test
pop
jns
mov
xlat
add
call
sbb
dec
mov
jne
xchg
sti
and
mov
lahf
push
xor
ja,pn
sahf
sbb
push
sub
mov
or
mov
adc
gs
dec
xchg
push
or
js
jns
pusha
popf
push
lahf
inc
inc
loope
add
push
cli
cmpsl
stos
mov
nop
nop
mov
inc
js
mov
shrb
and
mov
fidivl
cmp
dec
add
mov
pop
idivb
lea
gs
iret
mov
push
mov
sbb
dec
repz
stos
je
mov
cli
lock
cwtl
pop
ret
repz
add
insb
xor
iret
test
test
stos
sarl
mov
mov
js
xchg
cs
xchg
lods
addr16
fistpl
pop
xchg
das
loop
and
cltd
scas
mov
jae
fmul
scas
mov
pop
sti
fstl
cmp
stos
sarb
adc
add
sbb
jl
sbb
dec
add
mov
enter
ljmp
fidivrs
cmp
push
cmp
test
add
mov
push
in
push
out
cwtl
inc
mull
js
rolb
and
adc
stos
and
mov
mov
test
cmc
jne
sbb
fwait
lds
cmp
xchg
movsb
inc
mov
cmp
lods
pop
popf
mov
dec
enter
mov
mov
lods
inc
adc
repz
inc
mulb
sub
lgs
jne
jle
arpl
jle
sbb
push
daa
sbb
inc
ret
bound
mov
in
loopne
cmp
mov
stos
hlt
shll
jb
movsl
mov
inc
push
mov
pop
cmp
lds
or
and
inc
in
fwait
ds
lods
test
or
sbb
lret
or
inc
mov
push
int3
inc
dec
mov
push
dec
cli
les
lret
dec
cmp
jns
xchg
push
es
je
mull
aad
mov
cmp
jns
cli
icebp
adc
jl,pn
add
les
push
loop
les
je
in
or
into
dec
mov
jmp
aas
pusha
push
daa
jns
rcrl
sub
fistps
out
flds
jne
jno
aad
test
sub
pop
lods
xor
push
cmp
and
sub
push
cmpl
ljmp
sbb
or
incl
test
subb
gs
rorb
pop
push
xchg
sbb
cmp
lods
jle
ss
dec
inc
and
fwait
add
ss
std
mov
and
clc
jle
mov
jl
dec
pop
test
loope
outsl
cs
stos
inc
in
mov
xor
rcr
push
cld
xchg
sahf
fcoml
inc
push
cltd
addb
lcall
jb
cmpl
insl
cwtl
cwtl
xchg
push
pop
scas
inc
std
xchg
divb
cmp
pop
in
push
shrl
add
mov
mov
test
adc
pop
enter
xchg
sbb
mov
or
xor
cmc
loopne
std
in
jo
inc
or
sbb
xlat
dec
mov
dec
loop
ret
xor
insl
mov
sti
mulb
incb
repz
sarb
jg
clc
inc
mov
cmpsb
jnp
lahf
xchg
cmp
pop
adc
jne
pop
ljmp
xchg
test
dec
daa
sahf
xor
aad
lds
pushf
or
insb
xchg
in
mov
inc
mov
mov
jl
mov
inc
mov
sbb
aam
pop
mov
int
push
xchg
sahf
mov
testb
clc
iret
mov
and
sbb
and
sbb
iret
pop
daa
das
jno
push
mov
repnz
xchg
lcall
xor
xor
mov
imul
scas
movsl
hlt
xor
adc
xchg
jnp
and
push
xchg
fistpll
in
push
loopne
ljmp
clc
ljmp
xor
subb
outsl
mov
icebp
ja
test
ds
inc
adc
dec
mov
nop
cmp
sub
xchg
ret
cli
pusha
lret
sbb
into
fisubrl
pop
scas
sysret
lock
mov
dec
arpl
cmp
insl
pushf
test
jno
cmp
mov
jle
loope
lret
int3
push
dec
jl
or
adc
gs
scas
inc
js
cmp
lret
dec
mov
xchg
and
or
aas
add
push
and
cltd
shll
inc
dec
mov
and
ret
xor
bound
xor
mov
rolb
cld
jl
or
ret
stc
lcall
fstpt
cwtl
xchg
jmp
lcall
mov
mov
icebp
enter
int3
into
cmpsb
jecxz
ja
cmp
mov
push
nop
push
inc
icebp
add
cs
or
push
aas
jno
mov
cwtl
insl
cli
push
push
daa
out
sar
stc
pop
js
dec
or
insb
push
or
aad
lret
dec
inc
aas
stc
mov
cmc
push
jmp
pusha
addr16
adc
mov
ds
sbb
xchg
mov
mov
sti
mov
pop
jno
es
sbb
fnstcw
cmpsb
leave
mov
inc
jl
scas
mov
or
dec
jne
push
loopne
pop
cmp
xchg
inc
cltd
and
sub
mov
dec
je
ficompl
aam
xor
sbb
mov
stos
out
subb
cmp
loop
jle
adc
aas
mov
jno
xor
subb
arpl
pop
cmp
mov
and
inc
shlb
mov
xlat
sub
mov
scas
mov
scas
test
adc
sti
sarb
sub
ja
jnp
mov
fidivrl
pop
dec
stos
mov
repnz
lods
dec
jns
dec
bound
shlb
outsl
cmp
loopne
addl
dec
push
mov
out
jp
mov
and
int3
push
xchg
xchg
and
push
sahf
or
pop
xchg
xchg
dec
imul
mov
mov
fdivp
adc
ss
inc
mov
testl
int
adc
lret
sub
jp
jo
mov
jl
dec
inc
lock
sahf
imul
shll
test
cmp
mov
pop
aam
or
ljmp
lods
les
adcb
sbb
fmul
push
sub
call
or
imul
loopne
loope
sub
dec
sar
imul
mov
ror
dec
cmp
loopne
leave
ss
inc
les
or
jae
cmpsl
mov
in
ljmp
add
ret
add
mov
push
gs
sahf
sub
aas
inc
clc
cs
xchg
out
xor
test
cltd
shlb
sub
pop
repnz
aaa
mov
lods
js
pop
popf
stc
xor
fimuls
jae
lret
andb
fildll
xor
xor
aad
clc
jno
shll
mov
out
jmp
xchg
lock
mov
or
adc
es
idiv
dec
mov
jmp
clc
stos
mov
mov
or
mov
les
repz
and
jecxz
mov
xor
jmp
sub
test
clc
or
aaa
xor
test
sbbb
mov
pop
push
jnp
mov
mov
and
pop
sbb
adc
push
sahf
push
mov
cld
aaa
loopne
push
mov
mov
sbb
sub
int
and
fimull
pusha
or
lret
add
push
inc
out
xchg
lcall
mov
aad
repz
aaa
fcmovnb
push
or
adc
movsl
pushf
arpl
daa
movsl
mov
dec
and
in
fdivrp
and
ret
stos
fiaddl
popa
in
mov
or
out
pop
loopne
push
or
pusha
jns
dec
pop
dec
inc
mov
data16
daa
mov
xlat
and
or
test
out
sbb
push
sbb
adc
adc
mov
dec
xchg
xchg
int3
test
ffree
adc
mov
or
dec
fcmovbe
gs
mov
rorl
jo
scas
and
movsl
stc
cli
repz
mov
js
mov
xchg
enter
mov
sbb
hlt
jbe
adc
mov
jecxz
cmp
or
iret
inc
fwait
cmpb
push
mov
sbb
mov
cli
mov
mov
sub
and
repz
dec
or
xlat
out
iret
mov
add
dec
mov
xlat
lods
lret
jg
sbb
movsl
pop
je
nop
jne
int3
hlt
movsb
inc
lods
xor
cld
and
cld
test
fcomps
aas
fmul
sub
nop
test
mov
out
dec
dec
cmp
mov
bound
rcr
mov
lcall
fstpl
nop
add
inc
sbb
rclb
loopne
aam
out
call
arpl
adcl
shrl
loopne
cmpsl
cmp
popf
out
cmpl
int
gs
add
testl
cs
jp
call
mov
mov
lea
testb
pop
inc
ffree
bound
pop
inc
jg
lahf
insl
xchg
pop
xchg
adc
nop
xchg
stc
or
jl
js
xchg
ret
jae
sbb
stc
and
divb
fimuls
mov
nop
into
popa
xchg
inc
testl
fcoms
movb
ror
out
scas
out
movsb
sbb
push
xor
stos
js
sbb
cmp
xor
xor
aaa
sub
test
xchg
aaa
inc
push
lcall
clc
xlat
or
inc
sbb
adc
cmp
or
sarl
gs
cli
sub
das
test
cli
adc
add
pop
movsb
sub
pop
out
mov
inc
les
ret
je
or
or
jne
addb
cmpsl
aas
sub
shll
cmp
in
in
or
pop
or
xchg
sub
fprem1
mov
mov
cmp
nop
fcomps
repz
out
jle
sub
xchg
in
loop
lret
iret
add
fwait
sahf
jmp
fwait
jmp
les
mov
cs
mov
jge
repnz
jmp
cmp
cltd
lcall
fcompl
repnz
dec
daa
jbe
xchg
neg
in
jge
mov
push
out
sbb
pop
punpckldq
outsl
mov
add
jp
xor
in
cs
dec
iret
xor
mov
cli
cmpsb
arpl
lods
cmp
sbb
fsubs
stc
out
or
scas
add
in
and
mov
je
call
jle
push
mov
jp
in
scas
mov
dec
andb
mov
js
negl
add
add
push
ret
aaa
push
jbe
data16
xchg
setge
xchg
pop
sbb
movb
pop
dec
ja
mov
pop
sbb
mov
dec
or
ss
push
mov
aas
xor
pop
sub
inc
adc
flds
nop
mov
jmp
xor
mov
mov
aam
push
arpl
stos
jo
cmpsb
or
cli
fwait
mov
jg
mov
lahf
aaa
jne
test
add
mov
insb
push
out
aad
lds
sahf
test
mov
mov
mov
sbb
and
icebp
add
call
or
jbe
add
inc
xsave
insb
daa
clc
jge
push
xchg
pusha
push
imul
das
jle
or
push
ja
push
test
lret
insl
push
add
insb
pop
fsubrs
jp
jno
mov
and
push
lea
xchg
dec
je
ljmp
lock
xchg
push
adc
clc
push
in
lret
loop
inc
xchg
cbtw
or
out
icebp
fbstp
jns
ljmp
jo
popa
pop
sbb
mov
das
stc
mov
jle
push
or
enter
lahf
iret
mov
add
and
insl
jmp
add
push
ljmp
outsb
shr
std
pop
cld
lcall
pop
xchg
imulb
dec
imul
cs
std
lods
mov
insb
out
add
xchg
lock
mov
iret
in
loopne
cmp
stos
jg,pn
add
lods
dec
push
inc
jo
stc
test
pop
in
mov
lods
aas
movsb
mov
insb
lods
push
push
in
popa
xchg
fldenv
and
orb
sub
int
out
data16
cmp
cmp
aas
inc
fildl
add
jne
mov
imul
xchg
push
fidivs
imul
pushl
xchg
fs
xchg
pushf
icebp
test
mov
outsl
xchg
ljmp
xlat
mov
stos
push
pop
fdivl
inc
test
mov
cmp
fdivrl
scas
nop
jb
xchg
mov
outsl
add
mov
jb
lods
out
daa
sbb
or
inc
jo
inc
cmpsl
dec
cmpsl
cmp
mov
push
push
push
sbb
fdivr
push
pop
orl
or
mov
push
lock
mov
aaa
rcrb
adc
lret
in
sub
inc
cmp
and
mull
mov
xor
orb
jp
lods
outsb
dec
aas
repz
jmp
jb
mov
lret
xlat
out
js
push
gs
fistpll
mov
das
loopne
fs
add
mov
test
add
sbb
adc
mov
xor
add
je
inc
test
popa
nop
movsl
inc
mov
push
addr16
push
dec
ljmp
add
pushf
imul
ss
mov
adc
or
mov
icebp
mov
sub
loope
lods
xor
scas
push
sbb
jnp
insl
dec
imul
ds
dec
adc
stos
ljmpw
repnz
lds
test
add
pop
in
mov
mov
or
je
popf
dec
and
or
ljmp
adc
into
enter
sahf
xchg
pop
mov
lret
aaa
jno
int3
jb
inc
cs
dec
popf
rol
jno
test
into
je
push
imul
jle
movsl
sub
xlat
xchg
fstp
mov
icebp
or
out
lahf
mov
or
xlat
lods
bound
inc
dec
mov
mov
sbb
faddl
push
stos
inc
mov
mov
jne
sti
test
cmpl
xchg
push
cltd
and
dec
pusha
push
pop
aam
imull
lods
aad
jno
clc
push
mov
mov
ss
or
std
cld
lock
shr
out
xchg
leave
dec
add
ss
in
mov
and
out
addr16
mov
loop
mov
ret
ret
sub
rorl
add
mov
cmpsl
fcmovnb
loop
push
xorl
je
dec
mov
stc
insb
ja
rolb
sub
ror
sub
sub
fdivs
lds
lcall
es
pop
sub
add
push
sbb
iret
aas
fdivs
fsubr
or
sbb
xchg
jns
iret
push
pop
adc
addl
lahf
icebp
cs
pop
pushf
push
std
sbb
or
push
mov
xchg
sarb
leave
jl
mov
insb
sub
push
add
and
and
mov
or
rorb
push
sub
mov
push
es
int
inc
xchg
and
movsb
mov
pop
and
mov
test
adc
outsb
sbb
shrb
out
inc
sub
adc
xchg
jmp
lahf
jmp
les
gs
push
lret
sbb
xor
dec
push
or
adc
mov
sub
jle
movsb
rcr
inc
xor
push
adc
iret
mov
insb
arpl
cmp
andb
push
arpl
add
and
jge
sub
fisubs
pop
scas
or
mov
adc
mov
push
sbb
sub
add
inc
inc
mov
mov
test
sbb
loope
inc
and
push
aas
pop
push
shrb
push
add
popa
cmp
pusha
inc
jp
rolb
lods
add
add
mov
pop
mov
mov
sbb
xchg
movsl
jae
push
xchg
add
jnp
or
mov
ret
push
repnz
ja
fdivl
push
xor
jo
shl
pop
sub
mov
stos
mov
mov
fwait
pop
mov
add
sahf
mov
xchg
out
fdivs
dec
cmp
fsubl
ljmp
aam
shrb
es
or
xchg
jmp
in
push
mov
mov
clc
popf
and
fwait
inc
cmp
push
push
pushl
imul
stos
xor
std
adc
mov
test
clc
adc
movsb
movb
push
dec
mov
push
mov
test
or
mov
pslld
adc
das
xlat
insb
push
or
fwait
stos
and
test
out
repnz
addl
jbe
mov
hlt
and
dec
test
inc
mov
add
dec
daa
aad
or
sbb
jnp
ror
ret
sbb
xchg
movsb
test
sbb
enter
ret
pop
or
xor
std
pop
je
sbb
xchg
mov
jne
popa
sub
inc
adc
fdivp
mov
aad
in
or
inc
and
daa
jecxz
pop
mov
mov
xor
push
sub
in
xor
xchg
cmc
or
cmc
pop
ret
or
test
lock
lret
into
push
inc
jno
test
leave
jne
es
enter
lods
lods
notl
out
mov
test
sub
mov
sbb
cwtl
ja
repnz
pop
dec
xor
daa
loopne
xchg
mov
in
test
lea
mov
adc
adc
loop,pt
cmp
push
sub
add
dec
fbstp
js
bound
test
enter
stc
popf
inc
mov
pusha
sbb
insl
cmc
aaa
outsl
and
mov
push
leave
dec
xor
in
add
push
imul
push
inc
xchg
insl
test
arpl
cmc
xor
xor
fsave
insb
and
jmp
xchg
xchg
pop
mov
mov
aas
jg
push
out
push
xor
mov
sub
jno
stos
ret
or
add
orb
stos
mov
cs
pop
lret
test
outsb
xchg
lods
subl
js
sbb
xchg
clc
inc
jle
mov
mov
movsl
sbb
arpl
addb
inc
fdivl
es
ljmp
shl
cwtl
mov
dec
sbb
or
popf
jb
and
or
sub
enter
mov
lock
add
andl
fstps
sbb
faddl
cmpsb
mov
and
mov
mov
arpl
mov
hlt
lds
xor
or
int
arpl
test
or
dec
xchg
inc
inc
adc
fs
mov
aaa
xchg
pop
test
js
xchg
mov
pop
ret
xchg
repnz
sub
and
cwtl
movsb
mov
stos
int3
fsubrl
jne
inc
sti
cmp
push
dec
inc
rolb
outsb
push
xor
and
mov
lret
fwait
or
sti
pushf
iret
sbb
shll
push
testb
shll
pop
push
stos
add
data16
stc
fistpll
orb
pushf
cs
neg
fwait
xchg
xchg
adc
iret
xadd
inc
adc
pop
stos
pop
and
xor
ret
xchg
or
scas
data16
or
loope
sub
orb
and
jp
xor
jnp
dec
jno
ss
push
sbb
jmp
negb
icebp
jp
jl
imul
xchg
mov
test
dec
or
in
add
insl
or
cli
fs
adc
push
fdivs
lcall
jo
push
or
jb
cli
or
push
loope
xchg
jne
dec
cmp
pop
adc
mov
scas
or
mov
and
mov
aam
sahf
adc
addr16
add
mov
mov
xchg
pop
push
out
inc
adc
in
js
jl
sbbb
push
pop
jne
mov
enter
fiadds
cmpsl
fldt
fdiv
add
jle
test
in
mov
loop
mov
sub
les
mov
or
push
in
xchg
sbb
je
jecxz
icebp
lea
xchg
fildl
pop
roll
jo
ret
loope
jo
xchg
xchg
mov
fidivrs
jecxz
sub
sbb
daa
push
in
pop
mov
add
jo
jno
lcall
cmpsl
sbb
add
stc
xlat
lea
cmp
sub
or
and
mov
stc
stos
repnz
fdivr
sarl
int
fcmovnb
cld
sti
sbb
jbe
adc
cmpsl
enter
sub
fbld
cmpsb
lods
sub
or
ds
mov
lahf
mov
enter
dec
filds
insb
push
sbb
std
sbb
rorl
imul
or
lahf
jno
pop
jl
jae
mov
loop
xchg
lods
out
std
mov
mov
insb
add
adc
pop
mov
sbb
loopne
add
or
mov
mov
lea
xchg
test
fs
lock
push
das
mov
and
loope
push
outsb
nop
in
or
cli
sahf
fildll
pop
int
out
jmp
repnz
sbb
gs
int
jo
add
fwait
stos
pop
xchg
or
repz
mov
or
lret
cmpsb
loop
xor
mov
or
and
mov
pop
int
out
xor
xchg
outsl
adc
and
pop
subl
sahf
sbb
outsb
test
aam
je
stos
push
adcb
adc
mov
sbb
std
or
cltd
fistl
stos
pop
or
es
xor
sbb
das
cmp
or
insb
sbb
cmc
lahf
jnp
popf
lret
mov
aad
cmc
pop
pop
add
sbb
push
jmp
pop
inc
xlat
xchg
xchg
mov
xor
fildll
scas
cld
std
cmp
and
inc
dec
lods
ss
push
jg
jp
fcomps
aad
xor
dec
clc
jnp
es
addr16
or
pusha
xchg
cmp
roll
cmp
adc
inc
jbe
imul
mov
push
xlat
lods
divl
xchg
loop
sbb
bnd
mov
pop
lods
cmp
rcl
or
loope
or
ss
jae
mov
cmp
mov
cmp
sbb
rcrl
xchg
aad
jns
je
push
mov
mov
out
push
push
and
xchg
test
test
push
fldcw
mov
adc
adc
cs
imul
pop
test
mov
into
and
pop
adc
sahf
insl
push
arpl
and
in
jno
cmp
and
jb
dec
test
mov
xor
lods
jno
cmp
sti
sarb
cs
mov
mov
fisubl
ror
add
gs
mov
mov
or
shrb
sub
lods
icebp
sub
mov
push
lret
adc
and
or
add
xor
xor
inc
jecxz
xchg
xlat
or
push
into
arpl
lcall
dec
xorl
mov
into
mov
pop
popl
mov
or
mov
movsl
mov
rcl
int
push
movsb
dec
mov
lret
mov
lea
movsl
xchg
adc
cmpsl
outsb
ja
inc
test
mov
shlb
sbb
pop
imul
xchg
xor
icebp
jnp
mov
repz
jno
stos
or
add
mov
and
cwtl
push
mov
aaa
repnz
int
call
and
xchg
mov
add
sbb
faddl
movsl
sbb
test
jmp
rolb
mov
cwtl
int
adc
adc
call
in
jge
jp
mov
filds
insl
movsb
repz
rorb
jns
jne
jl
int3
jo
push
fcoms
gs
dec
in
imull
subl
pop
imul
pop
jae
inc
je
mov
ret
inc
test
repnz
nop
dec
cmp
daa
xchg
mov
inc
jecxz
sti
sbb
fstpt
fsubr
mov
dec
mov
inc
and
xor
and
pop
leave
scas
xchg
pop
push
aas
adc
or
push
icebp
stc
dec
cwtl
xor
addb
test
test
adc
adc
xchg
jno
imul
add
or
clc
cltd
xlat
lds
push
fdivrs
adc
out
in
mov
ss
sbb
mov
inc
fs
and
push
fsubrl
xchg
les
ja
xchg
or
mov
push
rorl
push
je
les
dec
popf
add
mov
mov
push
sti
ljmp
inc
cmc
idiv
and
les
outsl
enter
jae
sbbb
push
jg
mov
mov
cmc
iret
mov
pushf
mov
fadds
jl
rcr
mov
bound
test
sub
cmpsl
mov
int
or
add
pop
into
js
or
adc
add
stos
int
je
sarl
hlt
push
dec
push
popa
aam
push
jbe
aaa
and
jo
sub
loop
jg
sub
lret
nop
in
loope
std
std
out
dec
xchg
add
dec
stos
xchg
mov
sbb
les
xchg
iret
and
xchg
mov
and
jmp
mov
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
cmp
jl
sbb
out
into
out
sbb
or
into
pop
xchg
lds
jle
in
add
sub
sub
std
ss
add
pop
sub
jb
mov
imul
push
mov
jb
dec
int
xchg
out
jmp
dec
es
shl
xor
and
loopne
mov
jae
popa
mov
out
xchg
jbe
movups
int
pusha
repnz
cld
sarb
shrl
mov
mov
aaa
outsb
xchg
ss
mov
and
jno
call
inc
stos
dec
cmp
xchg
xor
xor
push
jmp
out
sub
mov
jbe
or
sbb
jne
pusha
add
xchg
loopne
pop
decb
jnp
xor
shlb
and
pop
pop
mov
cmp
inc
jge
dec
adc
mov
cmpsb
out
dec
and
gs
jo
rcrl
xor
repnz
stc
std
ret
mov
js
xchg
inc
rcrb
fisttpl
mov
sbb
mov
fdiv
repnz
add
movsb
pop
mov
call
mov
pop
adc
dec
mov
push
orl
fsubs
xchg
sti
lds
add
jae
fistpll
cmpsl
notl
jbe
loope
hlt
push
mov
loop
fwait
sub
repz
pop
cmc
add
xor
sahf
jb
jne
push
sahf
jl
ss
adc
add
pop
jmp
fabs
out
ljmp
pop
sbb
in
jns
hlt
enter
xchg
sahf
orb
jo
test
outsl
mov
or
lods
jle
xchg
ljmp
test
lcall
jmp
mov
mulb
int
in
shrl
ret
jbe
sbb
mov
inc
movsl
daa
mov
or
inc
push
jb
sbb
aaa
sub
sbb
adc
inc
inc
rorl
mov
repz
outsl
mov
repnz
mov
xor
inc
lock
mov
jb
lcall
sbb
adc
lea
cmp
dec
fisubl
arpl
cmc
orb
stos
pop
out
ljmp
mov
xchg
pusha
insl
sub
add
and
repz
mov
cmpsb
outsl
roll
icebp
iret
mov
iret
sub
ret
mov
mov
mov
inc
stc
shr
insl
jp
aas
ror
shrl
xchg
push
sub
pop
and
aaa
add
jecxz
cmp
repnz
cld
pop
sub
xchg
inc
cmovnp
jl
adc
loop
adc
mov
test
jbe
mov
les
lcall
pop
jp
popa
mov
cld
dec
js
xchg
push
shl
xchg
cwtl
pop
test
daa
cwtl
lods
mov
sbb
out
jb
xor
cmp
xlat
mov
pop
lret
inc
sub
adc
stos
inc
lahf
inc
mov
data16
sbb
lcall
and
jbe
cmp
cmp
outsl
jne
dec
jno
or
loop
xchg
push
test
ljmp
loop
ds
repnz
inc
inc
daa
les
xchg
outsb
mov
arpl
xor
pop
addr16
mov
cmp
mov
mov
xchg
cmc
aaa
adc
inc
pop
push
dec
and
jo
test
shll
popa
leave
pop
dec
imull
cld
mov
mov
add
cmpsb
adc
push
pop
pop
daa
mov
inc
ljmp
adcl
push
sbb
ja
mov
dec
adc
outsl
add
loopne
sbb
out
pop
and
mov
orb
adc
mov
and
xchg
mov
repz
or
js
es
xor
pop
or
xchg
mov
mov
imul
jle
stc
sbb
mov
inc
mov
mov
mov
mov
cmp
outsb
push
pop
int
and
or
iret
mov
xchg
jnp
cmc
xor
popl
leave
mov
insl
sbb
push
cmp
es
int
and
cmp
xchg
cmp
and
addr16
jns
jns
inc
andl
fcoms
shll
jp
jecxz
push
cmp
jl
mov
loope
mov
mov
push
push
mov
mov
push
ljmp
cmpsb
jmp
mov
pop
sbb
mov
dec
push
mov
xchg
fidivl
test
jae
sub
mov
and
sub
arpl
mov
and
test
cmp
out
sahf
leave
mov
or
and
or
dec
sarl
cmp
add
or
xchg
adc
xchg
lds
lcall
jns
rcll
repz
pop
mov
jmp
fnstsw
push
clc
or
adc
inc
insl
dec
inc
or
popa
lods
adc
cli
sub
xchg
jp
sub
push
mov
inc
sahf
adc
dec
mov
xchg
mov
pop
push
enter
sbb
mov
pop
adc
sbbb
sub
iret
cmpsb
fisubs
or
cli
xorb
scas
aad
pop
stos
push
loop
ss
mov
stos
sbb
fcomip
repz
sti
ret
dec
in
fnstsw
mov
nop
xchg
pop
or
adc
jecxz
fcoml
inc
or
scas
mov
jg
dec
dec
adc
aam
lock
in
mov
mov
aaa
mov
xor
gs
cmp
ficomps
popf
push
loopne
ja,pt
cmp
fs
fcoms
push
and
call
xor
fs
imul
pop
jns
add
xor
jecxz,pn
out
lcall
push
lock
inc
ret
outsl
xor
sbb
bound
push
mov
stos
in
pop
ret
jle
cmp
push
mov
pusha
jecxz
mov
notb
xchg
sub
pop
movsl
shll
lds
jo
lea
mov
faddl
dec
inc
shll
cmpsb
push
loop
ja
gs
arpl
mov
pop
stos
and
mov
mov
add
faddl
push
dec
jmp
adc
enter
jge
add
jnp
sbb
pop
jle
jp
mov
push
outsl
xor
je
imul
daa
rcll
gs
jge
int3
sbb
cmc
jno
movsb
outsb
es
or
lret
inc
call
jne
push
adc
mov
repz
int3
rclb
adc
hlt
repz
nop
pop
popf
xor
sub
fistps
leave
imul
xchg
mov
add
fstp
cmp
pop
push
inc
clc
mov
jae
les
in
mov
jmp
repnz
ss
loope
outsl
mov
stc
push
imul
dec
adc
jnp
call
jge
cmpsb
or
jne
push
add
and
rorb
or
pop
xor
push
jmp
stos
fs
add
ret
adc
sbb
mov
sbb
insl
cwtl
xorl
bound
xor
mov
push
jae
cmp
js
jecxz
xchg
push
das
scas
mov
xor
rol
jnp
xor
mov
sbb
add
adc
dec
adc
rolb
fnsave
or
mov
lcall
inc
cli
push
push
cmp
rorb
sub
int3
ljmp
jge
shl
dec
imul
mov
out
nop
push
mov
mov
cltd
shlb
inc
aaa
imul
dec
add
insl
aam
dec
dec
xor
imul
cmp
in
pop
pop
dec
add
push
rorb
jnp
sub
jl
iret
dec
cwtl
pop
xor
xor
sti
adc
in
fstpl
xchg
mov
xlat
push
sbb
lods
repnz
xchg
jecxz
ret
imul
cmp
push
push
mov
imulb
adc
pop
dec
movsb
jp
jl
subb
imul
insl
mov
sbb
sbb
adc
out
mov
test
jecxz
inc
test
fsubp
push
mov
int3
mov
data16
out
push
or
or
data16
bswap
sbb
and
out
sub
in
lret
sti
outsl
fdivs
lods
sub
adc
inc
sub
ss
loopne
mov
cmpsb
test
lea
sbb
mov
jo
movsb
adc
inc
icebp
test
in
shlb
xor
mulb
lea
mov
sbb
loopne
sbb
fbld
sub
jg
ds
les
imul
add
sbb
test
jl
xor
xchg
or
aaa
loop
lods
cmp
push
mov
fs
hlt
mov
jg
inc
imul
repnz
or
and
xor
pop
icebp
xchg
das
dec
pop
scas
and
paddsw
movsb
ds
and
dec
jno
out
dec
jns
out
mov
jge
xchg
dec
icebp
insl
jge
add
shr
scas
aaa
cmp
je
test
lods
fistl
cld
leave
mov
mov
xchg
jmp
js
mov
xor
xchg
xor
dec
push
bound
dec
scas
and
or
sub
sub
imul
es
fsts
adc
enter
dec
push
xor
das
add
ficoml
nop
jmp
jns
pop
jb
sbb
daa
sub
sub
scas
adc
clc
aam
jmp
pop
shlb
daa
cmpsl
xchg
add
stos
mov
fwait
sub
lea
or
mov
addr16
stc
inc
jge
push
loope
es
dec
lods
cld
scas
test
or
test
lahf
lcall
adc
jnp
stos
push
incb
lock
mov
push
jnp
jb
popa
adc
das
push
or
adcl
out
mov
ja
jbe
gs
jge
cli
adc
cmpsb
pop
push
add
cmp
push
and
leave
push
orb
or
push
sbb
pushf
cmp
in
xor
nop
jno
push
add
mov
mov
test
call
je
cmp
aad
and
and
adc
stc
mov
inc
cmp
cli
jp
push
or
mov
daa
xchg
clc
pop
dec
stos
push
popf
icebp
jmp
or
std
sbbb
xor
sbb
mov
push
stos
insl
or
dec
xor
add
dec
test
dec
push
mov
fs
in
xor
cmp
popl
imul
flds
sbb
add
and
push
cmp
gs
xor
push
jbe
shll
sub
imull
adc
shl
mov
ret
mov
data16
mov
out
mov
lock
push
push
sub
loopne
scas
xor
lret
xchg
movsb
inc
shlb
js
insb
adc
inc
push
lock
outsb
xchg
sarb
scas
inc
or
testl
mov
test
push
push
dec
inc
lret
fldlg2
adc
mov
aam
test
cltd
mov
jmp
aad
inc
aas
mov
shl
movsl
pop
add
lcall
in
lret
mov
dec
or
adc
iret
shlb
pop
dec
pop
push
ret
or
add
out
sbb
pushf
add
test
push
sbb
arpl
faddl
fsts
xchg
sbbl
pusha
pop
sahf
sub
daa
movsb
xchg
pop
hlt
mov
stc
xchg
mov
mov
xchg
mov
push
leave
pop
cli
pop
push
lcall
mov
push
or
loope
jb
sbb
pop
cltd
shrb
dec
outsl
subl
test
pop
imul
mov
imul
and
inc
xchg
mov
or
sarl
jnp
xchg
sbb
dec
movsl
js
cwtl
sahf
adc
pop
or
inc
mov
in
dec
ljmp
adc
cmp
xchg
stos
xchg
adc
shlb
scas
das
push
sbbl
cmp
cltd
fstpl
mov
stos
xchg
mov
and
cmpsb
push
aaa
mov
mov
add
sbb
jle
xor
imul
pop
dec
sbb
push
ss
movsl
xor
push
push
or
cmpl
mov
je
mov
push
mov
cmp
inc
xor
add
pop
add
xchg
mov
xchg
sub
idivb
mov
inc
sbb
mov
and
stos
cld
test
rclb
mov
mov
fnstsw
ss
cmp
aaa
fidivs
lds
out
dec
call
xlat
mov
aad
sbb
addr16
mov
les
js
cwtl
mov
lds
cmp
mov
ja
mov
out
pop
mov
jo
or
dec
push
out
sub
cmpsb
or
or
jb
sahf
cli
enter
enter
das
push
lret
push
inc
dec
jecxz
mov
jg
mov
cld
push
addl
push
xor
mov
push
push
loope
dec
push
pop
push
sub
mov
or
inc
or
or
cmp
cli
jae
and
in
mov
sub
push
dec
or
cmpsl
out
mov
rcl
lock
addr16
jnp
clc
insl
mov
sbb
mov
imul
pusha
and
xchg
fldt
inc
mov
mov
test
hlt
js
jecxz
daa
cmp
sbb
mov
js
lahf
loope
inc
cmp
inc
push
popa
insl
mov
dec
add
es
loop
sti
jecxz
sahf
xchg
subl
xlat
repnz
add
jns
xor
xor
mov
dec
out
mov
inc
cmpl
xchg
decb
outsb
jo
insl
cmp
dec
scas
in
adc
xchg
jle
or
lods
or
mov
ds
adc
jl
out
aas
cmp
clc
and
iret
pop
pop
in
ret
int3
inc
shll
mov
shrl
xchg
rol
outsl
fnstcw
xchg
rcr
push
leave
pop
jns
pop
out
fs
cs
in
arpl
xor
pop
data16
adc
push
mov
insb
out
ret
fsub
add
rorb
bound
adc
shrl
sub
sbb
xor
aam
pop
out
sbb
pop
stos
add
xor
popf
or
mov
test
jb
pop
int3
test
out
jmp
das
jae
push
dec
cltd
mov
insl
add
test
cmp
sub
pop
cli
adc
clc
ja
stos
xor
and
inc
or
or
lret
mov
xchg
adc
aad
adc
push
fdivr
mov
ja
popf
jns
mov
les
addl
flds
stos
test
adc
in
leave
pop
adc
icebp
push
pushf
loopne
cli
pop
push
mov
mov
xchg
inc
iret
sahf
mov
sbb
xchg
lods
mov
lea
xchg
mov
ss
xor
fisttpll
cltd
fildll
ds
xchg
pop
aas
shlb
mov
jne
ljmp
ret
push
in
pop
push
xorl
jb
mov
push
lahf
xchg
inc
shll
lods
push
lods
insl
scas
pop
jnp
sbb
or
aad
shll
jmp
ja
leave
cmc
sub
mov
sub
notl
mov
mov
cmc
enter
bound
cld
test
pop
dec
ljmp
shl
push
add
mov
dec
mov
inc
mov
movsb
xlat
rcl
lcall
pop
push
stc
setae
pop
sub
cltd
jns
ja
jo
pushl
jne
jns
dec
lods
shll
test
mov
xchg
lret
popf
mov
std
ss
push
mov
pop
in
sub
pop
add
cltd
inc
clc
clc
dec
xor
and
sti
ficoms
mov
mov
mov
push
jb
and
and
or
mov
xchg
xor
imul
pop
inc
test
adc
rorb
jmp
jg
or
cwtl
fadds
loopne
jp
push
push
xor
sub
cmc
dec
test
or
pop
out
jae
pushf
cs
and
daa
xchg
sbb
sarb
scas
mov
push
adcl
andl
mov
dec
push
jecxz
mov
push
mov
adc
insb
subb
push
lahf
mov
jns
inc
mov
cmp
mov
pop
ret
fildl
push
sarb
mov
int3
adc
pushf
xchg
mov
ss
pop
xchg
xor
repz
or
sbb
cmp
mov
cwtl
inc
push
sub
lret
insb
es
pusha
jmp
jg
mov
xor
les
or
fidivrs
cld
std
test
jbe
imul
pop
cltd
rcll
jae
ret
mov
jno
inc
sbb
lock
repnz
ja
sub
push
jl
adcb
bt
pop
sbb
add
pop
push
inc
test
repz
push
mov
cmpsb
adc
xorl
inc
sub
xlat
cwtl
pop
call
push
pusha
sti
pop
sub
mov
out
mov
idivb
xlat
stos
jns
xchg
cli
sub
mov
and
test
adcl
sbb
icebp
jmp
aas
sub
mov
mov
out
mov
jo
mov
push
add
stos
pop
cs
cltd
stos
push
mov
out
xor
push
hlt
pop
mov
clc
repnz
mov
jmp
and
inc
dec
stos
mov
or
icebp
cmp
pushf
shrl
pop
lcall
inc
or
cmp
fbld
dec
ja
pop
scas
imull
xor
imul
dec
test
push
xchg
pop
add
jge
adc
aas
es
xchg
cld
lea
push
jae
dec
decl
scas
sub
stc
push
in
push
mov
fmull
iret
scas
lds
push
cmc
inc
pop
jns
nop
xchg
jmp
mov
fdiv
xchg
mov
sbb
cmpsb
and
out
pop
adc
inc
je
out
out
xor
mov
cmp
mov
aaa
mov
je
fldenv
lock
int3
jno
jge
stos
push
call
add
fstps
icebp
subl
test
mulb
leave
sti
xor
cmc
jecxz
adc
jnp
mov
ret
xchg
pop
sarb
ljmp
sub
xchg
pop
repz
aam
scas
daa
xor
or
lock
mov
out
jbe
test
adc
test
repz
adc
cmpsl
sbb
and
mov
pop
movsl
mov
jo
repnz
mov
xor
inc
xchg
cmp
xchg
fldcw
push
sti
shll
or
test
push
out
gs
push
add
jmp
loope
push
je
mov
dec
inc
dec
fstps
out
inc
test
insb
jne
fcmovne
and
loope
enter
adc
mov
push
mov
and
bound
aaa
xchg
ljmp
lret
xorl
aam
sbb
cwtl
jmp
cmpsl
mov
push
sbbl
in
jg
mov
xchg
lret
sub
add
iret
or
cmp
adc
add
jecxz
inc
and
ret
aad
lahf
fcomi
in
pop
mov
rclb
aas
jl
mov
icebp
add
call
xchg
cld
sub
in
sub
cmpsl
sbb
cmp
fwait
or
mov
xor
pop
jge
std
mov
or
jns
cli
test
cld
les
jle
inc
mov
in
jo
lods
dec
mov
fistl
popa
aam
add
cmpsl
mov
test
fidivrs
or
cmp
pop
testl
cwtl
mov
pop
rcll
or
xor
aam
pop
pusha
mov
in
test
cmpsl
mov
testb
mov
out
lods
mov
xor
gs
out
mov
clc
inc
stos
cmpsl
mov
fcomip
in
cld
sbb
mov
in
xchg
lret
mov
pop
cs
mov
dec
jae
pop
sti
push
dec
std
mov
add
test
xor
jmp
xchg
call
push
mov
fnstcw
iret
xchg
push
imul
pop
pop
mov
lock
and
fmuls
das
fnstenv
and
fisubrs
pop
push
mov
insl
mov
fs
jb
add
mov
push
adc
jmp
add
and
pop
andl
add
ficompl
cmpsb
inc
repnz
jmp
lahf
mov
jle
mov
dec
sbb
popa
aad
cmp
pop
ret
mov
pushf
scas
lahf
sbbb
arpl
stos
hlt
adc
xchg
in
ss
mov
mov
mov
sbb
std
js
sub
cmp
sub
jl
xor
dec
ljmp
insb
das
fcomps
jp
aas
pop
icebp
mov
push
fs
mov
test
lret
out
add
pop
mov
mov
andb
jns
and
pop
mov
push
mov
pop
xchg
imul
inc
aas
loop
pop
sbb
jns
jl
lods
push
dec
adc
and
ja
mov
xchg
mov
ficompl
sbb
aad
out
jp
call
cmp
sti
jnp
sbb
mov
inc
sbbl
ds
repnz
and
sub
jae
inc
mov
rcrl
jbe
mov
add
or
adc
ds
xchg
and
sbbb
enter
pop
in
or
mov
and
fwait
xor
jle
mov
repnz
push
mov
push
popf
pop
fwait
loopne
add
lods
ret
mov
inc
cmp
sbb
icebp
mov
into
mov
popa
sub
mov
pop
pop
roll
mov
mov
jp
xor
mov
pusha
outsb
cs
push
mov
jg
dec
mov
add
cmc
mov
jl
ret
dec
mov
popa
inc
pop
xchg
cmp
jns
cmpsb
testb
dec
imul
daa
fstl
popa
push
andl
leave
orb
mov
popf
clc
jecxz
inc
sar
inc
jne
jp
pop
lods
int3
adc
or
bound
aam
adc
sahf
dec
jno
in
pop
fdivp
lea
andl
movsl
jg
lods
mov
in
mov
popf
mov
push
dec
ss
or
negl
aas
jne
pop
pop
or
cmp
jg
loop
es
xchg
imul
repnz
mov
xchg
gs
test
testb
add
or
jne
jnp
rcl
xchg
jg
mov
lea
in
sbb
mov
add
push
enter
or
mov
push
loopne
jb
mov
mov
lea
or
dec
xchg
mov
pop
adc
dec
adc
sbb
lret
and
dec
cld
repnz
xchg
es
gs
loope
adc
sahf
in
sti
mov
aad
adc
adc
and
stos
mov
jecxz
add
adc
ss
das
pop
mov
jmp
ret
popf
jecxz
scas
lods
in
into
xchg
iret
fistpl
in
sub
mov
and
mov
outsb
cmc
test
and
xchg
jno
jae
popa
in
test
dec
addl
jbe
xor
lret
mov
mov
mov
and
test
leave
mov
aas
and
stos
jmp
cmc
in
lret
lcall
mov
mov
adc
mov
mov
call
push
jb
xchg
arpl
stos
inc
or
jbe
pop
mov
into
xchg
fidivrs
sbb
movsl
dec
add
ror
nop
hlt
lcall
iret
pop
push
mov
jmp
xor
negb
cmp
das
rcrl
loopne
add
xlat
mov
push
mov
decb
or
xchg
mov
adc
ret
sbb
pop
mov
orl
push
mov
xchg
xorb
lods
adc
in
icebp
jg
mov
addl
sub
outsb
push
cld
jo
dec
cmp
lock
dec
push
stos
sbb
aaa
push
sbb
stos
les
pop
cmp
mov
adc
xchg
sub
lods
push
scas
adc
scas
in
imul
pop
icebp
aaa
mov
and
jge
bound
pop
js
or
pop
and
ja
and
sub
mov
sub
loope
das
mov
lea
push
mov
popa
aaa
dec
insb
push
add
jge
sti
loope
pop
lods
xchg
jne
and
mov
scas
lcall
xchg
jne
and
popf
mov
sahf
outsb
jg
xchg
out
sub
in
ds
lds
xlat
push
cmp
adc
and
insb
clc
loop
mov
sbb
fs
inc
movsl
lods
stos
es
sub
jmp
xor
jno
scas
pop
add
sbb
aas
aam
jo
inc
test
inc
sub
pop
inc
cmc
in
mov
fcomi
in
cmp
sub
cmp
in
and
ja
loope
or
cmp
mov
mov
stos
nop
popf
push
dec
int
pop
subb
sub
inc
xchg
fistl
and
mov
cmp
xchg
std
xchg
mov
xor
mov
popf
dec
sahf
mov
mov
iret
add
ja
imul
xchg
or
addl
xor
pushf
and
ret
aam
roll
jnp
jl
fcoms
pop
push
add
jb
jae
and
int3
out
pop
in
sbb
sub
addb
pop
sti
hlt
outsl
push
in
mov
iret
ret
in
iret
pop
dec
adc
sarl
lods
rcrb
or
imul
mov
mov
cmp
mov
mov
sbb
aas
jns
pop
rorl
rcl
ja
addb
rcrb
mov
es
or
mov
popa
call
les
cli
xchg
cmp
lods
mov
jnp
adc
inc
movsl
xchg
xchg
cltd
ss
pop
mov
lcall
dec
cmc
pop
in
js
xchg
int3
popl
pop
nop
mov
sahf
outsb
test
add
hlt
call
mov
or
inc
sub
mov
fst
xchg
fldt
js
lock
into
lcall
push
jmp
xorl
push
mov
push
inc
jge
adc
xchg
sub
pop
sbb
sti
push
and
mov
and
cmpsl
mov
rolb
clc
fcmove
add
xchg
xchg
mov
lahf
xor
and
or
mov
or
imul
lods
cld
stc
lods
sub
xchg
sbb
loopne
jne
mov
sbb
mov
mov
pop
mov
xor
cmc
cmp
pushf
test
dec
aad
adc
out
mov
jns
lods
loop
inc
test
or
xchg
pop
inc
call
cmpsb
add
jle
cmp
sub
jb
push
add
cwtl
xchg
fisubrs
movl
push
xchg
sbb
clc
gs
sub
dec
push
xchg
sbb
sarl
es
fistl
jnp
xchg
sub
pop
ficoml
adc
call
push
dec
inc
xlat
mov
cltd
ss
or
push
int
popa
sbb
push
sbb
mov
sbbl
fs
jns
push
aas
pop
leave
scas
add
dec
jne
jne
adc
clc
into
mov
fiaddl
xlat
cmp
fwait
pop
lret
negl
cmp
jg
mull
cmp
pop
add
mov
sbb
jne
fmull
mov
fcomp
lahf
push
rclb
outsb
jmp
xor
dec
add
test
lock
pusha
adc
xor
inc
loopne
mov
inc
xor
lahf
test
inc
mov
ljmp
arpl
insb
call
and
mov
adc
out
in
sub
rcrl
pop
xchg
add
jne
daa
or
outsb
cmp
sbb
ret
aam
dec
stc
cwtl
adc
push
jle
cld
dec
popa
or
sub
push
xchg
add
ds
or
ljmp
pop
mov
push
jle
ret
icebp
lods
sbb
sbb
mov
push
dec
leave
cli
lcall
in
jo
enter
adc
or
imul
leave
and
xor
or
out
jg
test
lahf
fdivrs
push
fisubs
dec
gs
and
mov
js
rorl
rcrb
sahf
inc
repnz
mov
add
popf
in
loop
jnp
ljmp
ds
jmp
rolb
jo
or
and
cwtl
mov
mov
fcmovbe
out
aad
leave
jne
cmpb
out
int
mov
test
add
add
jae
pop
enter
ss
adc
and
fidivrs
cmp
mov
sti
dec
xchg
mov
xor
dec
pop
test
sbb
nop
in
js
sub
mov
cmp
push
fiaddl
sar
lcall
mov
jmp
cli
fwait
push
push
jae
jnp
sti
sub
js
lret
pop
pop
mov
adc
aam
adc
rcrb
xchg
lock
mov
mov
xchg
push
sbb
jmp
sbb
cld
push
iret
lds
lea
lret
xchg
inc
sarb
push
movsb
ret
jecxz
cld
je
jecxz
in
sub
arpl
jecxz
fs
inc
sub
cld
xchg
test
orb
test
push
gs
jae
fwait
xchg
cmp
cld
and
sbb
and
movsb
xchg
push
xchg
out
pop
push
andb
jae
mov
bound
es
in
fwait
sub
aad
mov
dec
jne
andl
orl
inc
xchg
scas
lock
cmp
push
pop
out
mov
xchg
bound
enter
subb
sbb
daa
jo
stos
fsubs
insl
aas
sbb
repnz
imul
stos
incb
mov
sbb
push
popa
sahf
sti
jno
popa
sub
cltd
sub
daa
clc
lods
aaa
or
lea
test
clc
jl
imul
jnp
insb
js
and
das
sahf
ror
jl
add
xor
push
pop
pop
add
lods
mov
or
dec
sub
fdivp
inc
les
adc
lock
or
jl
in
and
xor
pop
jb
in
sahf
fdivl
loopne
xchg
cmc
outsl
pause
addl
and
sub
loope
pop
das
sbb
rolb
lods
adc
fbld
out
les
mov
xchg
inc
adc
js
mov
jbe
adc
mov
xor
sub
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
jl
add
inc
fdivrl
sahf
jnp
mov
xchg
inc
mov
test
inc
add
loopne
cwtl
push
jge
add
sub
nop
cwtl
adc
sbb
pop
adc
mov
negb
mov
and
pop
in
inc
bswap
mov
divl
test
jg
out
popa
inc
mov
mov
mov
sub
popl
push
add
lret
adc
mov
push
int
arpl
mov
es
dec
xchg
adc
movsb
mov
jle
cmp
jae
daa
add
ljmp
test
enter
test
adc
jmp
int3
out
add
xor
rolb
jecxz
dec
fxch
jmp
je
das
in
cli
int
sub
test
cli
add
jge
sub
notb
jl
jl
dec
insl
pop
jae
add
mov
popf
cwtl
push
pop
sub
dec
push
arpl
xchg
jmp
std
call
fcoms
ljmp
or
fidivrl
out
nop
and
inc
cld
into
mov
cmp
icebp
mov
mov
jb
jmp
movsb
orl
and
mov
xlat
shll
loopne
sub
into
mov
pop
fcomi
push
pop
fnstcw
cltd
mov
sar
jmp
dec
ror
push
cmpsl
cmp
xchg
dec
es
shlb
sub
push
clc
xor
loope
or
mov
dec
jbe
out
rep
test
stc
cmp
scas
cmp
pop
fnstenv
mov
in
icebp
imulb
xorl
add
xchg
lret
inc
inc
dec
cmp
mov
sbb
stos
push
fcmovb
out
insb
xchg
xchg
push
mov
sub
dec
repz
dec
xchg
xchg
jecxz
xor
adc
and
jne
int
lret
outsb
decl
cmc
ja
hlt
lret
mov
out
mov
je
mov
daa
inc
stos
fadds
nop
lds
rolb
dec
mov
int
and
adc
inc
lock
shlb
gs
arpl
pop
repz
enter
ret
test
adc
cs
mov
movsb
xor
mov
jnp
push
push
jmp
cmp
repnz
push
dec
inc
sbb
ficoms
scas
mov
sub
sub
dec
mov
imulb
mov
jg
push
repnz
mov
movsb
xchg
ret
push
and
jb
inc
jb
inc
push
add
push
pop
call
arpl
fwait
jle
repz
mov
inc
adc
cmp
fs
jmp
out
mov
sti
inc
insb
icebp
out
xor
les
inc
ret
fwait
xchg
mov
inc
shrb
lock
mov
jl
test
dec
push
cmc
cwtl
aas
daa
fildl
xor
addr16
mov
scas
pop
addr16
cltd
push
pushf
jle
into
or
cmpsb
mov
or
ja
dec
out
cmpsl
cwtl
repz
push
and
out
int
inc
movsl
sub
imul
xchg
mov
pop
mov
and
jo
xchg
or
and
dec
push
sti
xchg
out
xchg
rolb
push
push
mov
out
adc
jb
pop
fisubrs
add
xor
pop
fwait
neg
sub
dec
test
insl
jl
adc
jg
or
test
mov
xor
mov
dec
data16
dec
push
fwait
shrl
mov
mov
sub
sub
jmp
push
inc
pop
and
xchg
frstor
mov
xor
dec
ja
jne
sbb
fdiv
outsl
data16
pop
inc
cwtl
fdivrs
rclb
adc
filds
daa
mov
and
jp
adc
mov
and
lods
xchg
or
adc
loop
mov
xor
aam
lret
xchg
sub
lods
inc
dec
xchg
xor
loopne
sbb
out
lds
nop
jmp
sbb
shlb
test
jl
repnz
outsl
xor
cmpsb
sbb
jno
dec
cwtl
cmp
hlt
aam
mov
sub
xor
int3
sbb
xchg
inc
cli
test
test
or
or
test
cmp
mov
mov
mov
sub
and
or
loop
xchg
jmp
pop
inc
and
addr16
pslld
or
xchg
dec
arpl
push
popf
xlat
push
testb
mov
mov
pop
xchg
dec
push
aaa
xor
pop
pusha
out
fiaddl
pop
jae
fxrstor
jecxz
aad
popa
cmp
ljmp
cmp
jmp
stos
add
shlb
inc
shlb
adc
jnp
xor
lret
shrl
jo
and
mov
dec
adc
sbb
inc
push
repnz
ss
ret
sbb
ror
ss
adc
repz
inc
pushf
popf
and
pop
add
out
lahf
out
and
in
movsb
dec
xor
pop
add
rol
dec
adc
jo
divl
out
lcall
shr
dec
fs
cmp
jo
imul
enter
cwtl
jns
jmp
push
imul
xchg
loopne
xor
fsubs
mov
test
mov
repnz
mov
or
mov
jp
xlat
add
call
xchg
mov
fnstenv
mov
nop
add
xchg
xor
inc
imul
push
sub
jns
cmp
sub
adc
shrl
repz
dec
xor
lcall
jle
push
or
addr16
lcall
mov
sub
or
leave
mov
out
inc
sbb
add
adc
mov
xchg
insl
jmp
insb
outsl
xor
sub
in
pushl
sti
fs
mov
popa
cmp
addr16
mov
stc
xlat
jmp
pop
lock
mov
cltd
xor
idivl
fsubp
mov
sbb
mov
xchg
popa
clc
fldt
adc
cmpsl
push
enter
addr16
call
jg
sub
adc
cmp
loop
mov
outsl
loop
loope
sarl
dec
dec
jmp
mov
push
mov
pop
mov
or
push
and
leave
add
pop
cmp
and
lret
mov
mov
pop
xchg
jne
lea
pop
daa
mov
push
mov
negl
cmp
inc
mov
mov
jns
xor
sub
repnz
lcall
popf
push
pop
pop
xchg
loope
pusha
ficoml
mov
and
fldl
leave
xor
daa
out
add
jnp
mull
scas
mov
das
push
fadd
call
mov
xchg
add
ja
mov
and
mov
push
inc
sbb
cmp
sbb
aas
das
xor
testb
outsb
and
jl
sub
movl
imul
adc
or
fbstp
into
adc
inc
jnp
popa
stc
or
adc
loopne
inc
fstpt
call
negb
xchg
loope
xchg
in
or
and
je
add
ret
lahf
xchg
pop
bound
and
popf
mov
jmp
push
xor
fsubrl
cli
or
je
cmp
addr16
xchg
aaa
cmpsb
dec
cmpsl
push
lods
and
jle
movl
dec
jmp
into
or
xchg
dec
xchg
mov
pop
insl
fwait
jno
or
nop
jmp
push
push
shll
mov
sub
mov
jp
sahf
pusha
xor
aaa
cltd
fisubl
loop
mov
jno
out
xchg
sub
mov
or
icebp
cs
and
cltd
jbe
inc
loope
mov
sub
or
bound
das
shl
sub
xchg
jecxz
out
out
dec
lods
mov
roll
inc
inc
int3
mov
mov
xor
out
sbb
mov
in
or
mov
stos
sub
cmp
fincstp
cmp
push
pop
push
mov
push
lahf
add
cmp
or
pop
movsl
fst
lret
call
inc
into
adc
icebp
or
stos
or
fistpll
xor
shll
das
lock
push
xchg
filds
test
pusha
jne
fs
cli
pop
mov
ret
pop
or
adc
scas
mov
dec
ss
or
jle
cmp
sti
lret
shlb
pop
nop
pop
add
or
orb
subb
mov
iret
addb
into
add
mov
lock
lds
jae
scas
lods
push
addr16
inc
mov
dec
outsb
ljmp
sbb
leave
lret
push
push
enter
and
mov
subb
daa
or
insl
outsb
fistl
mov
mov
stos
cs
hlt
nop
mov
inc
sub
test
mov
dec
sarb
mov
fidivl
pop
push
sti
inc
sub
in
and
int3
data16
mov
adc
scas
xorb
mov
xor
sahf
mov
or
in
addr16
push
in
dec
call
adc
jl
mov
adc
shrd
jnp
xchg
cmpsl
mov
repnz
cmp
and
adc
jno
lcall
fwait
cmp
dec
mov
add
mov
and
mov
jl
hlt
aaa
inc
pop
ss
dec
loopne
cltd
xor
mov
cmp
xchg
ljmp
sbb
fistl
xor
dec
adc
push
dec
mov
das
lods
add
pusha
andl
repz
fsubl
imulb
add
jns
fbld
and
mov
mov
frstor
push
xchg
mov
sub
cmc
jb
cmp
sbb
mov
fadds
jns
das
fildl
and
test
mov
xchg
ret
mov
outsl
std
jns
mov
sahf
arpl
cmpsb
cld
mov
push
add
sub
jo
mov
enter
jle
movsb
add
rol
dec
lock
cmp
imul
pop
xor
lods
sbb
movsl
xchg
adc
sub
adc
mov
pop
mov
sub
push
and
bound
aaa
and
repnz
mov
add
adc
and
insl
adc
aas
fstpt
sbb
cmpsl
push
fisubrs
cmc
out
push
testb
arpl
pop
add
xor
sub
imul
jmp
cmp
mov
addr16
scas
dec
fcomps
ret
js
push
std
sub
cmpb
stos
imul
mov
adc
mov
fsubl
pop
mov
jb
mov
cltd
mull
shlb
sub
push
jbe
mul
ljmp
pushf
adcb
mov
dec
icebp
inc
mov
int
pop
mov
in
lcall
shrl
loopne
xchg
inc
sti
iret
or
pop
shll
pop
mov
sub
pop
inc
lahf
pop
push
adc
inc
push
mov
mov
dec
mov
or
lods
pop
daa
cmp
mov
xchg
sar
mov
call
fwait
or
sbbb
inc
pop
cmp
fistpll
jns
sbb
xchg
divl
data16
imul
mov
lods
ljmp
arpl
or
add
and
jl
adc
sub
sbb
not
jbe
mov
lret
mov
adc
push
or
inc
lahf
xchg
in
cmc
inc
jp
inc
pop
mov
push
aas
clc
les
repnz
aam
push
mov
andb
pop
pop
mov
sbb
adc
push
push
fs
add
imul
int3
fidivs
jne
sub
int3
int3
aas
adcb
push
push
mov
and
repz
xchg
push
cmpsb
pop
cli
mov
push
mov
les
fptan
xor
and
push
shl
adc
insb
into
or
xchg
sub
cli
push
into
stos
or
jno
sbbl
or
pop
adc
mov
mov
imul
hlt
mov
cmc
mov
pop
ret
jns
dec
gs
shll
sbb
jb
inc
push
iret
add
sbb
mov
xchg
lret
into
stc
mov
cmp
push
jmp
nop
psubsw
mov
push
inc
pop
and
bound
mov
mov
mov
mul
fsubl
icebp
adc
insl
aaa
sub
in
test
stos
loop
xchg
or
add
mov
insb
into
shlb
fwait
cld
inc
lods
add
cs
mov
aas
movsb
xor
sti
into
dec
scas
test
loopne
jl
push
or
mov
dec
pop
dec
shrb
orb
xchg
ffreep
dec
je
or
cmp
mulb
jne
rcll
inc
gs
std
or
inc
in
add
insl
out
cmp
add
sub
lds
pusha
loope
cmpsb
test
mov
aaa
lds
or
cmp
imul
mov
ret
nop
sub
pop
and
adc
dec
pop
pop
xor
xchg
sub
loope
sar
mov
jecxz
or
cmpl
and
ds
pushf
sti
add
iret
roll
out
loope
gs
and
lahf
pop
mov
mov
repnz
xchg
loopne
push
inc
mov
out
push
out
fisubrs
imul
mov
fsub
or
shlb
loopne
and
in
mov
cmp
mov
sbb
rcl
adc
loop
int
jne
jbe
sbb
repnz
out
jne
jecxz
add
mov
push
mov
cmc
pop
jae
icebp
sub
filds
hlt
cmpsl
jmp
cli
adc
out
and
mov
mov
pop
popl
mov
xchg
ret
lock
mov
cmp
sbb
daa
add
std
push
and
push
sbbb
jne
jns
popa
dec
in
cmp
cmp
adcb
jo
in
cltd
stos
mov
inc
leave
lods
push
pop
aaa
sub
dec
test
ljmp
xor
inc
test
pusha
xchg
repnz
in
rclb
inc
stos
sub
or
out
mov
hlt
popf
sbb
mov
cmpsb
mov
jg
out
repnz
dec
push
repnz
or
mov
mov
inc
cmpsb
in
mov
pop
in
mov
add
sti
aas
or
jne
fcoms
lret
lret
mov
pushl
cmc
cmpl
push
sub
mov
pusha
js
push
nop
dec
test
mov
xchg
js
sbb
or
cmp
outsl
add
cmp
jmp
mov
xchg
nop
lods
sbb
jo
call
cld
pop
scas
addl
pop
mov
mov
inc
loop
ljmp
inc
outsb
add
idivl
xlat
sahf
hlt
repnz
testl
mov
nop
sarl
out
add
xor
jne
loopne
cltd
daa
xchg
push
xchg
fistl
div
loop
jo
in
ja
push
sar
xor
push
or
push
scas
inc
rcr
mov
xchg
in
xchg
popa
aad
xchg
cmpsl
mov
outsl
aam
aas
adc
test
xchg
push
jne
test
sbb
and
das
add
lahf
lods
sub
dec
pop
mov
shrb
mov
test
xchg
aad
dec
loop
inc
xor
stos
add
xchg
and
pop
dec
adc
push
add
lods
outsb
popa
sub
dec
setnp
stos
dec
inc
dec
lock
lcall
mov
fcompl
inc
pop
stos
or
mov
test
fimull
lret
jbe
aaa
mov
xchg
sbb
jecxz
scas
mov
pop
inc
mov
xchg
cmpsl
rcrb
xchg
cmp
xorl
pop
outsb
icebp
lret
dec
lea
in
mov
jns
pop
data16
enter
jg
jp
cmp
sbb
push
add
inc
mov
lcall
andl
mov
lret
mov
scas
add
jne
scas
out
pop
cmp
stos
xchg
xor
push
repz
cmpsl
pop
mov
mov
movsb
flds
enter
add
adc
mov
mov
sahf
data16
cmp
fnstcw
sub
cmp
lcall
mov
sti
shr
push
mov
pop
add
pop
je
push
mov
int
std
mov
addr16
popa
push
jecxz
inc
dec
add
lret
mov
dec
dec
ljmp
into
adcl
push
int
jg
es
cmc
push
push
aad
mov
iret
push
nop
das
fdivrs
insb
ss
sbb
lcall
add
loope
shlb
adc
xchg
mov
jg
dec
xchg
xor
push
mov
lock
sbb
hlt
add
ret
xorl
sub
mov
out
jns
rol
insb
lods
ret
lods
adc
ret
fimuls
xchg
mov
mov
sub
or
xchg
or
lock
aaa
cltd
outsl
push
outsb
out
aas
call
dec
aaa
mov
ret
xchg
push
ret
and
inc
adc
test
sub
push
xchg
inc
testl
xchg
dec
jg
ss
xchg
testb
test
addl
dec
jne
imul
cmp
sbb
dec
jb,pn
cmc
stos
sub
jb
jb
dec
pop
dec
mov
repnz
int3
mov
int3
jno
adc
movsb
jl
jns
aam
fnstsw
jl
mov
cmp
mov
rcrl
mov
addr16
dec
js
xchg
jns
addb
lahf
fistps
insl
cmpsb
jbe
test
pop
push
popa
std
add
adc
icebp
and
out
jmp
cmpsl
fdivs
je
imul
imul
lret
sub
adc
push
xlat
pop
cmp
or
leave
out
xchg
shr
lock
and
cwtl
loop
jmp
pop
daa
pop
test
mov
scas
cmpsl
sbb
out
mov
pop
add
in
mov
sbb
in
jb
shl
xchg
push
xor
insl
fldcw
in
pop
dec
jae
jl
mov
cmp
cwtl
mov
cld
std
jno
cmp
sahf
arpl
and
fdiv
in
nop
sahf
fucom
test
imul
orl
lock
pushf
xor
adc
push
adc
jl
dec
sub
js
loope
jo
mov
pop
movl
fimull
stos
inc
mov
das
lock
inc
adc
daa
insb
cmp
xchg
es
and
adc
div
jo
loope
das
lea
cmp
fsubs
fabs
jns
adc
mov
jmp
mov
xchg
mov
or
adc
adc
mov
scas
jnp
cmp
mov
lods
xchg
dec
fsubrl
adc
jp
clc
repnz
fsubl
lods
sbb
and
push
push
jbe
pop
mov
dec
mov
loope
in
ret
lods
inc
inc
iret
pop
call
push
mov
out
aaa
pop
cmpsl
fiadds
xor
ret
mov
push
not
or
inc
hlt
mov
add
push
and
xorb
lods
lea
sbb
mov
mov
lret
pop
test
into
xor
mov
xchg
mov
push
ja
xor
cmpsb
lahf
add
mov
cmc
jmp
xlat
fsubl
adc
pop
pop
push
gs
pop
out
and
test
mov
sbb
sub
xor
mov
stos
push
mov
ret
loopne
push
jp
adc
and
pop
xchg
cmp
fildll
and
pop
mov
jl
mov
mov
push
scas
nop
jecxz
arpl
pushf
aaa
jle
sbb
scas
pushf
jno
pop
into
or
push
or
cmc
xor
mov
pop
fldcw
add
addl
cltd
sti
into
stos
aaa
pop
sbb
in
or
aaa
pop
sbb
jge
jbe
ficoms
xchg
mov
rcl
mov
jge
jmp
jle,pn
or
or
lret
mov
sbb
mov
out
xchg
fldenv
cmc
jns
mov
mov
rol
push
cmp
outsb
push
inc
test
nop
push
lahf
mov
rcrb
push
repnz
xor
xchg
clc
xor
mov
sub
es
stos
jno
inc
xchg
adc
pop
mov
cli
mov
and
stos
mov
ljmp
xchg
gs
jmp
jp
push
in
xchg
dec
clc
xchg
or
pop
test
les
cltd
fidivs
xchg
ss
scas
fsubs
sbb
imul
test
dec
sti
test
imull
pusha
jb
sub
jge
inc
fidivs
sti
test
cwtl
loop
add
mov
push
fwait
mov
in
add
test
cmp
incl
sahf
xchg
jge
mov
mov
mov
and
in
orb
fildll
xor
add
ficoms
cld
addb
aaa
xor
add
fisubs
push
cmp
out
jecxz
pop
and
pop
movl
sbb
jp
insb
sbb
push
lods
aas
test
gs
add
call
movsl
rcrb
das
push
cmp
shll
add
dec
or
and
dec
sbb
xor
movb
test
xor
sarb
pop
xchg
pusha
js
imull
mov
and
sub
lea
mov
test
testb
lods
jmp
dec
add
in
lret
mov
sti
mov
js
cmpsb
rcrb
dec
jne
and
mov
jle
int
jg
je
jae
ret
mov
out
popl
jmp
jo
sbb
aam
sbb
sbb
mov
pop
mov
or
js
push
and
inc
cmp
push
jle
adc
stc
hlt
mov
cmpsl
lcall
scas
xchg
cmp
js
cvtps2pi
out
push
mov
xor
mov
fsubl
jno
push
pop
add
push
mov
and
or
push
jmp
xchg
in
xchg
in
jl
lock
lret
push
sub
cmp
sub
cmp
pop
cmpsl
fnstenv
aas
and
mov
in
sub
add
dec
add
sbb
shll
mov
dec
divl
or
jge
mov
dec
adc
sub
fmuls
test
add
mov
dec
xchg
hlt
ficoml
fwait
xchg
in
movsb
sub
icebp
cmp
stc
or
mov
mov
call
pop
push
push
xor
and
jo
aad
sub
cmp
inc
pop
lds
repnz
pusha
xor
aam
mov
shl
sbb
inc
sub
mov
cltd
cmp
cwtl
cmp
mov
jle
mov
out
insl
add
jnp
sarl
roll
mov
jecxz
lea
rcrb
sbb
and
stc
jb
out
jmp
scas
mov
push
sti
test
pusha
jge
nop
mov
popa
jmp
inc
mov
jne
sarb
add
mov
cmp
adc
cld
dec
in
call
into
leave
clc
rol
jbe
jmp
fcmovnbe
and
and
jns
xchg
insb
aad
adc
hlt
push
fimull
or
inc
outsb
ja
mov
test
pop
int3
hlt
pop
ss
sub
cwtl
icebp
testb
cmp
jecxz
mov
mov
dec
jns
out
out
dec
stos
iret
int3
lcall
in
dec
mov
pop
movl
aas
mov
pop
mov
inc
sbb
or
out
arpl
notl
loop
jns
jbe
mov
or
push
stos
out
sbb
addr16
movsb
jns
mov
into
mov
jbe
jp
inc
xlat
mov
fs
xor
jl
push
inc
jno
pop
mov
lret
sbb
mov
xor
out
xchg
lds
mov
imul
test
and
mov
arpl
flds
mov
jne
cmp
in
add
cltd
xor
pop
cmc
mov
add
test
lds
cmp
ja
adc
sbb
arpl
add
testb
xchg
mov
fs
rcr
into
inc
or
jmp
mov
xor
fbstp
mov
xchg
xchg
mov
cmpsb
clc
out
repnz
dec
movsb
xlat
imul
fdivrs
mov
lds
loop
rcll
or
adc
pusha
mov
in
add
stc
je
and
scas
adc
cmpl
fdivrs
fadds
stc
fwait
push
xchg
lret
lahf
jbe
jbe
sbb
sbb
and
es
or
mov
mov
mov
mov
adc
icebp
adc
push
icebp
fsubrs
divb
push
dec
push
enter
cmp
pusha
mov
mov
cmpl
cmp
xor
pushf
pop
daa
das
mov
mov
mov
sbb
lcall
or
cs
jmp
popa
and
std
adc
sub
pop
jp
mov
test
adc
imul
add
ja
and
lds
and
repz
add
mov
push
lods
xor
sbb
cltd
lods
ret
mov
and
cmp
sbb
aad
sbb
cmpsl
push
scas
sub
icebp
cmp
or
mov
outsb
push
push
aam
cmp
pop
mov
clc
mov
jp
pushf
mov
fisttpl
sub
fists
xchg
filds
hlt
dec
roll
jge
adc
dec
popf
fstpl
jno
xchg
ljmp
sarb
xor
sbb
push
xor
push
je
stos
les
adc
mov
repnz
std
adc
adc
ljmp
hlt
lcall
daa
loop
push
pop
divl
shrb
add
push
imul
jge
add
data16
outsb
push
lahf
pushf
jo
push
cwtl
xor
test
mov
imul
mov
es
xorb
lods
sahf
lock
sbb
loopne
leave
inc
fcompl
sbb
xor
pop
out
leave
pop
or
inc
fucomp
enter
leave
mov
adc
lcall
mulps
cmp
aad
sbb
lcall
cmc
inc
cmpl
faddl
testb
mov
sbb
lods
dec
xchg
inc
inc
sub
inc
push
hlt
nop
mov
xchg
rolb
test
jo
aaa
push
outsl
mov
cmp
int3
rcrl
call
inc
fidivs
push
ds
popf
cs
cli
adcl
in
lods
les
add
cmp
ret
cmp
xlat
jmp
push
mov
cs
movsl
or
xchg
stos
mov
lods
or
insl
dec
fisubrl
aad
mov
jno
fs
pop
mov
sarl
sbb
out
sub
and
sar
xchg
cmp
sbb
out
or
xchg
pop
lahf
or
sahf
mov
pop
xor
fwait
jae
sbb
sbb
popf
ret
js
insb
fs
xchg
jp
das
flds
mov
outsb
fsubrs
inc
push
clc
out
mov
js
mov
and
or
xor
lcall
push
addb
lahf
mov
push
std
xchg
iret
lods
sbb
daa
jnp
jb
fs
mov
mov
mov
fiadds
inc
jl
aam
pop
or
jbe
mov
insb
pop
jg
int
sub
cmpsb
enter
out
or
aad
mov
mov
rcrb
mov
mov
cs
sub
imul
mov
xor
mov
cmp
repnz
ds
cld
sti
ret
inc
cmp
rclb
imul
movsb
das
sbb
ret
sub
lahf
or
sbb
sbb
push
xchg
in
lahf
cmpsl
repz
enter
jmp
mov
and
lock
shrl
xorb
jp
insl
jg
pop
repnz
mov
inc
roll
add
push
lea
pusha
fwait
out
xchg
lahf
hlt
mov
adc
adc
push
mov
loop
xor
aaa
jbe
mov
mov
adc
pslld
mov
jge
xchg
inc
push
jae
inc
sbb
inc
sbb
test
lods
pop
pop
push
jb
push
push
sti
addr16
nop
adc
sbb
std
dec
cmpsb
insb
lds
jne
insl
and
or
or
pop
int3
push
sbb
xor
and
sub
call
cmp
and
out
jmp
xlat
lds
inc
dec
sub
jo
xchg
xor
test
movsl
out
aad
leave
cmpsl
jecxz
mov
les
mov
popa
inc
decb
loop
out
jmp
in
dec
insl
int
sbb
sub
call
mov
xchg
mov
divl
ljmp
cmp
sub
std
mov
test
in
inc
mov
test
daa
dec
in
lods
outsl
and
testl
inc
daa
incl
dec
nop
movsb
test
ret
adc
repnz
cmpsb
cmp
push
jl
pop
xchg
outsl
outsl
loopne
pushf
jns
cltd
xchg
iret
pop
xchg
out
and
and
aaa
push
mov
call
lret
xor
jl
enter
ljmp
xorl
jns
inc
lret
cli
lcall
xchg
inc
insb
and
sahf
das
push
mov
push
jbe
pop
movsb
test
push
inc
push
repz
cmp
sub
scas
cmc
out
aad
and
ret
sub
and
inc
notb
scas
add
push
push
aam
ret
sub
outsb
adc
and
xor
or
aas
lds
sub
enter
pop
test
mov
and
sbb
int3
lcall
lea
mov
sub
push
push
ljmp
mov
out
or
inc
push
xor
xchg
repnz
ja
pop
cld
roll
test
fwait
movsb
mov
inc
push
mov
sbb
jns
xchg
pop
int
cltd
or
add
jns
sub
fdivl
aas
and
cmp
scas
ret
adc
out
mov
xor
clc
stc
add
ret
sub
sbb
repnz
sbb
dec
sub
jae
xor
test
lock
lret
pop
or
and
pop
movsb
fmull
xchg
jo
vzeroupper
sub
xor
adc
out
js
enter
out
lods
dec
jo
cwtl
je
and
fdivrl
xchg
lock
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
or
pushf
in
jl
sbb
xor
inc
sbbb
addr16
push
and
das
repz
xor
int
aas
rcrb
or
mov
pushf
pop
pop
mov
out
dec
subb
movsl
pusha
and
scas
add
std
dec
lret
movsbl
push
or
movl
std
bound
or
jb
scas
mov
dec
cmp
sub
fimull
mov
adc
ds
ret
dec
pop
sbb
sub
xchg
cltd
and
int
jmp
insl
in
mov
es
lahf
add
add
mov
in
outsb
repnz
jbe
sbb
out
roll
xchg
dec
dec
cltd
adc
pop
ret
pop
cltd
lcall
add
sub
repz
mov
inc
inc
lock
or
add
ja
add
je
fdivrs
xor
mov
dec
pop
movsb
cmp
ss
test
fldenv
adc
dec
shlb
push
mov
xor
inc
outsb
and
add
mov
and
movsb
scas
popa
xor
mov
and
xchg
out
fst
ret
adc
mov
das
mov
mov
push
das
jne
push
xchg
ss
xchg
decl
adc
mov
test
adc
aam
xchg
jb
push
movups
jo
in
jns
push
dec
adc
inc
in
push
push
add
cs
sti
jle
mov
jp
movb
mov
aad
hlt
jl
add
addb
daa
test
and
sub
inc
xchg
insb
pusha
push
inc
and
pop
xchg
hlt
adcb
cld
shrl
mov
cld
repz
fchs
movsb
mov
mov
pop
testl
mov
push
ja
jae
lret
out
xchg
mov
pop
cmp
sbbb
je
mov
int
jmp
sbb
insl
mov
dec
call
sub
xchg
cmp
push
jno
add
fwait
call
outsb
or
cmpsl
push
and
jnp
adc
les
mov
cmc
movsb
call
cmpsb
cs
adc
fdivrl
jmp
lret
and
dec
out
fdivp
call
test
in
flds
jge
mulb
lret
jae
sub
gs
fstl
sub
outsl
push
add
dec
and
lock
jecxz
xor
xchg
sbb
lods
pop
fnsave
inc
shlb
push
mov
sbb
lahf
es
push
rorl
mov
insb
das
pop
xchg
arpl
jb
frstor
nop
scas
jg
push
shll
lret
push
out
xchg
adc
mov
jg
fistpl
imul
inc
fisttps
mov
jmp
jns
sbb
mov
inc
jne
fcomp
and
mov
jbe,pn
stc
adc
dec
ljmp
fistl
jle
pop
cld
cmp
cld
cmp
outsl
fsubrl
jne
inc
mov
adc
lret
inc
jnp
add
dec
pop
aam
pop
cmp
jne
ret
ret
pop
cmp
or
cmp
or
jne
mov
jge
lods
sbb
ds
dec
adc
int3
je
push
jo
nop
cmpsl
inc
data16
lods
xlat
xor
gs
int3
outsb
xor
mov
fildll
ss
sub
dec
ret
pop
inc
dec
cmpb
jp
hlt
test
mov
mov
std
shr
movsb
mov
dec
test
pop
xchg
mov
or
loopne
int3
arpl
sub
jb
push
loope
iret
scas
leave
stos
fdivl
mov
loop
mov
mov
dec
pop
pop
lcall
pop
mov
mov
mov
push
outsl
into
push
push
scas
sub
jnp
sbb
mov
cmp
mulb
push
daa
shll
dec
sbb
les
cmp
lods
cmp
mov
divl
ds
mov
pushf
xchg
mov
dec
rcrb
jo
cld
mov
js
and
xchg
dec
mov
or
pop
push
pop
int3
mov
inc
or
fadd
xor
or
js
fstl
xor
mov
push
popa
and
pop
test
pop
dec
lea
cld
inc
pop
or
pop
dec
lds
and
sti
pop
int3
out
out
outsb
mov
push
cld
addr16
cmp
ret
jg
shr
jno
dec
or
xchg
ss
cmp
insl
daa
pop
into
sbb
and
cmc
add
pusha
test
mov
fmull
push
or
jb
xlat
dec
insl
hlt
push
cmp
push
aas
pop
dec
pop
aaa
mov
adc
pop
mov
in
pop
jp
rcrb
sbb
and
adc
xchg
sbb
push
add
mov
mov
ja
xor
fadds
cmp
test
cs
fcmovnu
shlb
in
mov
cmp
dec
repnz
pop
inc
arpl
fstpl
into
adc
pop
sub
inc
mov
cltd
sbb
add
loope
push
sub
cmp
test
call
jge
dec
inc
insl
cmp
sub
cwtl
cmp
add
es
pop
mov
add
pop
inc
frstor
pop
dec
das
in
jge
mov
lret
imul
xor
jl
cmpsb
aas
jno
sub
push
repnz
sbb
insb
mov
int3
adc
jecxz
dec
xchg
scas
pop
jns
mov
cld
dec
cmovbe
jnp
and
sbb
loop
mov
dec
mov
pushf
jns
pop
orb
repnz
out
cmp
xor
movsb
pop
inc
sub
xchg
cmp
rolb
imul
inc
sbb
ror
ja
repz
xor
popf
jge
add
mov
mov
jl
cmpsb
subb
pop
inc
adcl
int
pop
xchg
mov
outsl
and
lret
mov
bnd
out
ds
mov
fstpl
push
nop
cs
std
pop
mov
fnsave
mov
mov
mov
sti
mov
pop
inc
gs
mov
or
push
fistps
aaa
add
imul
xchg
mov
xor
cmpsb
mov
or
sub
enter
sti
aaa
lods
sub
loop
xlat
popa
jecxz
cmpsl
pushf
sti
and
xor
xchg
xchg
test
aam
sbb
inc
jecxz
scas
sahf
idiv
clc
or
clc
imul
pop
mov
xor
ss
and
push
daa
mov
sbb
int
push
inc
xchg
and
sbb
sbb
stc
cmp
xor
xchg
inc
je
sbb
add
push
mov
sbb
add
fisttpl
decb
cmc
jno
mov
mov
jmp
insl
popf
xchg
ds
adc
mov
mov
adc
imul
sbb
mov
out
xor
pop
movsl
fistl
or
sub
fldl
int
or
jno
icebp
push
gs
mov
mov
sbb
push
int
enter
cmp
and
pop
and
or
popa
fcmovne
mov
mov
pop
xor
pop
pop
push
stos
mov
adc
loop
outsb
repz
popaw
pop
fnstenv
cmp
push
imul
mov
or
mov
add
divl
and
xchg
dec
and
cmp
mov
movups
cmpsb
jmp
push
cmpsb
xchg
jmp
enter
into
dec
fcmovnbe
scas
popa
jnp
inc
mov
or
mov
into
movsl
shlb
addr16
mov
sub
mov
in
xlat
sahf
cmpsb
aaa
ret
mov
fcom
lea
mov
nop
jno
mulb
in
dec
xchg
aaa
dec
stos
mov
jecxz
inc
ror
scas
mov
into
imulb
sub
cs
call
dec
cld
add
hlt
xor
pop
lds
ja
sbb
mov
fisttpll
pop
sub
negb
test
and
stos
inc
repz
push
jb
jl
inc
inc
lods
pop
clc
cmp
xor
or
mov
fistpll
clc
clc
popa
pushf
dec
pushf
jge
ret
mov
loop
or
fmuls
das
imul
rcll
shrb
mov
add
dec
loop
and
dec
sub
dec
dec
ljmp
inc
add
inc
ret
int
dec
sub
les
mov
add
and
bswap
jb
xor
idivb
lret
pop
addr16
test
xchg
xor
xor
mov
jg
bound
pop
repnz
cwtl
fcmovnu
out
nop
into
or
jae
pop
and
adc
cld
inc
xor
pop
ficoms
rorb
and
addb
jle
cmc
imul
jns
cmp
stos
insl
imul
int3
sbb
sbb
mov
or
push
xchg
mov
call
jno
fcomip
out
lock
mov
aam
sub
push
jp
cmp
mulb
stos
dec
lods
mov
sub
in
cmp
mov
sub
in
loopne
mov
ljmp
pop
xor
mov
test
mov
cld
test
push
xchg
adc
mov
push
xchg
loopne
mov
push
jg
mov
sub
mov
rol
shl
hlt
std
mov
ret
mov
gs
push
pusha
stos
repz
out
mov
or
call
gs
cmp
addr16
inc
dec
test
fmulp
es
in
aam
fmuls
inc
xor
repz
add
dec
fdivrs
cmp
lea
shlb
sub
inc
jecxz
mov
push
push
push
cmpsb
nop
push
not
sbb
inc
iret
imul
mov
jmp
gs
mov
or
lret
jmp
stos
and
inc
popf
inc
std
repz
cmpsb
cwtl
sub
loope
cs
inc
outsl
mov
lahf
imul
cmp
lods
shl
jae
adc
mov
cmpsb
or
insl
jg
cmpsb
mov
cltd
fidivl
cmp
xchg
or
xchg
filds
adc
jecxz
stos
and
stc
pop
scas
adc
inc
pop
int3
inc
test
inc
ffree
xchg
int3
mov
dec
push
fbld
pusha
stos
pushf
fbld
dec
enter
mov
mov
stos
push
pop
cld
lock
cmp
fstp
fisubl
lahf
push
imul
sbb
lock
jmp
inc
cltd
andb
xor
mov
jbe
sbb
sbb
pusha
inc
es
in
in
sbb
jb
mov
xor
idivb
jae
xchg
jno
adc
adc
and
pop
add
pop
fcomip
sub
xor
push
mov
mov
sub
aam
jl
mov
sub
popa
movsl
out
cli
lcall
and
pop
push
dec
popf
mul
and
adc
xor
sub
lret
add
xchg
sbb
pop
inc
fnstenv
cli
mov
lahf
scas
mov
inc
and
in
xchg
push
cmpsb
push
xchg
mov
sub
sbb
mov
ret
pusha
fst
cmp
out
pop
cs
or
jecxz
ds
shr
fs
push
aam
outsl
ret
dec
rol
add
mov
shrl
inc
out
xchg
enter
outsb
pusha
mov
loop
shl
sub
out
mov
ret
mov
pop
lods
dec
inc
insb
aad
daa
mov
inc
js
rcr
pop
repz
xchg
push
fcoms
rcll
pop
shl
inc
cmp
sbb
loop
jns
scas
and
movsl
daa
inc
sbb
mov
mov
adc
cmp
push
popa
mov
incl
lcall
and
loop
rcrl
pop
les
mov
ficoml
test
sub
insb
adc
mov
mov
adc
jg
or
imul
and
filds
shll
lahf
pop
cmpsl
das
pop
sub
out
sub
add
cs
mov
sbb
add
ret
outsl
repnz
jle
mov
aas
sub
inc
jb
and
aaa
sarl
ja
lcall
imul
ja
pop
insl
dec
add
idivb
jl
add
shl
imul
loop
pop
test
jp
pop
xor
jl
sbb
cmpsb
mov
cld
mov
xchg
xchg
push
adc
mov
adc
xchg
jns
fld
loope
scas
mov
jbe
arpl
inc
rorb
scas
out
pushf
into
outsl
or
dec
sbb
sbb
sub
cs
mov
pop
test
sub
dec
sub
mov
addr16
xchg
fsubl
mov
aad
sbb
subl
sub
inc
jp
sbb
mov
cwtl
incb
adc
movsb
popa
xchg
sbb
cmc
divl
xchg
stos
daa
out
push
pop
or
xchg
sti
xchg
xor
sub
mov
jg
ret
pop
jns
pop
loopne
test
dec
cwtl
loopne
mov
dec
shr
cmp
add
jl
mull
lods
mov
and
ret
sbb
ret
adc
cmp
js
fbstp
pop
stos
into
add
daa
push
scas
fisubl
inc
mov
ss
nop
nop
shlb
testl
scas
repz
inc
mov
pop
int3
lods
push
movb
cmp
mov
fsubs
jne
cmp
scas
cmp
sub
test
push
decl
and
add
push
sbb
xor
sub
mov
outsl
push
jnp
lcall
jo
xchg
mov
aam
cmc
mov
push
jp
in
xlat
cmc
cmc
pop
and
mov
popf
add
cmpsb
jmp
push
sbb
sbb
sti
xor
pop
cld
mov
iret
mov
rorb
sub
nop
xchg
sub
sub
pop
data16
je
adc
stos
lea
adc
les
loopne
mov
mov
leave
mov
jp
mov
jecxz
adc
add
and
adc
pop
sarb
push
pop
sub
jecxz
or
leave
sbb
ret
sub
subb
pop
inc
pop
or
lods
sub
xchg
stos
xchg
test
es
cltd
mov
leave
daa
jmp
lret
scas
add
pop
or
pop
daa
div
movsb
push
pop
testl
or
fwait
rol
mov
notl
pop
adcl
sbb
mov
out
xor
xchg
dec
mov
data16
xchg
cmpb
xlat
into
fwait
xchg
out
inc
bnd
pop
insl
xchg
mov
in
sarl
inc
sarb
icebp
adc
mov
cmp
push
jge,pn
in
sub
mov
nop
jl
mov
xor
jmp
sub
mov
mov
icebp
push
sub
rol
pop
push
bound
fwait
xor
cwtl
int3
lea
fstps
dec
cmp
pop
jns
test
cmc
into
cmp
stos
mov
push
js
inc
adc
rolb
mov
orb
push
fcomps
lret
mov
or
fsubs
jne
jbe
and
pop
sbb
stc
and
mov
addr16
cmpsl
std
xor
movsb
add
movsb
push
inc
pop
pop
push
push
in
aad
cmp
adc
adc
test
rcr
nop
dec
cmpsb
and
cmc
call
lahf
shlb
xchg
adc
insb
punpcklwd
mov
inc
aaa
cltd
sbb
mov
hlt
and
sbb
jne
inc
or
cmp
add
cmp
out
jns
pop
loopne
es
shrb
je
inc
xchg
adc
push
mov
cmpsl
jne
in
sub
cs
out
fidivs
fmul
jnp
mov
rcr
mov
lds
push
pop
xchg
pushf
mov
outsb
cltd
stos
adc
pop
mov
not
xor
add
mov
fstpt
xor
mov
cltd
hlt
jb
clc
xlat
lret
in
sub
xor
pop
push
repz
movsb
sbbb
sarb
xor
add
ficoml
xchg
push
mov
cmp
mov
js
loope
xchg
sbb
and
push
aas
mov
loopne
repnz
adc
jle
jnp
shrl
cmc
ret
loope
and
pusha
pop
testl
xor
je
push
push
hlt
cli
fs
dec
ja
jecxz
jecxz
pop
xchg
fistpl
in
je
sbb
imul
add
inc
adc
jp
out
test
and
into
sahf
jge
push
rorl
nop
lock
sbb
rol
inc
cmc
hlt
clc
sbb
inc
sub
scas
loope
mov
in
std
clc
ljmp
push
xor
xor
mov
stos
adc
xchg
sbb
mov
lds
mov
jns
gs
or
or
ret
cmp
mov
lds
mov
lea
nop
je
adc
add
lods
xor
push
xor
sti
sub
in
sti
aas
addr16
out
data16
mov
loop
jmp
push
lock
jns
mov
dec
aaa
int3
ja
lock
dec
mov
add
jns
mov
sti
push
cmp
pusha
test
lahf
push
adc
aad
rolb
add
sbb
stos
jbe
cmp
gs
cmp
cmpsl
or
cmp
and
rorl
or
push
std
mov
out
lret
loop
jg
aam
lea
push
xlat
dec
rclb
stc
mov
jno
ret
adc
fildl
pop
cs
lds
inc
jne
ss
xchg
ret
loop
sub
repz
xor
dec
dec
lret
subl
fildll
ret
hlt
clc
fidivrs
subl
mov
adc
dec
adc
add
sub
cmp
js
outsl
aad
hlt
mov
dec
out
popf
jo
imul
loopne
pop
loope
cmp
aas
addr16
add
fsubl
jge
addr16
mov
mov
out
add
imul
fwait
push
cli
sub
jae
cltd
mov
mov
adc
lods
xor
sti
ror
sahf
push
or
mov
mov
mov
hlt
push
subl
insl
sbb
cmc
fistps
mov
xor
outsb
xchg
xchg
mov
int
popf
das
cld
push
pop
push
xlat
test
rcll
and
fsubrl
and
jns
jge
lock
mov
mov
add
stc
aaa
test
scas
ljmp
push
dec
sbb
stos
sub
gs
in
add
aaa
test
addr16
out
jnp
mov
fmull
or
xchg
mov
mov
xchg
fwait
dec
adcl
sbb
mov
pushf
std
roll
aas
fs
xchg
jo
sbb
cltd
mov
xor
fucomp
lcall
push
pushf
nop
inc
sbb
mov
sbb
lock
repz
push
stos
neg
gs
rcll
push
cmp
lods
daa
mov
dec
shll
adc
mov
push
and
push
bnd
mov
cmp
jmp
sub
xchg
and
subl
mov
loope
leave
jl
aam
subl
add
add
movsl
pop
fildll
cli
jbe
aad
cmpsb
lret
cmpsb
jp
cmpsl
cmp
out
mov
or
push
int
or
and
ret
add
sub
shrl
mov
xchg
inc
pop
and
aas
mov
orl
or
mov
popf
mov
mov
sbbb
fwait
cwtl
sbb
mov
pop
pop
push
lea
int
in
add
xchg
pusha
mov
outsb
mov
popa
mov
les
jmp
pop
data16
repnz
outsb
xor
xchg
pop
push
shlb
xchg
mov
push
fmull
in
stc
sub
adc
mov
xchg
fiadds
test
sub
sub
aaa
adc
aad
xor
repnz
or
aas
adcl
pop
add
sbb
push
ss
sbb
or
mov
shlb
xorb
jmp
mov
xchg
adc
sub
lahf
jl
insb
mov
popa
mov
mov
popf
testb
cli
call
xchg
cmc
xchg
repnz
cmpsb
lea
aam
add
cmp
xchg
pop
insb
fs
fwait
fadd
leave
adc
outsl
pop
mov
lea
shlb
cmp
pop
repz
cmp
add
imul
fwait
or
loope
inc
pop
mov
mov
mov
stos
mov
sbb
shlb
dec
icebp
dec
xor
mov
fcmovu
sbb
ret
dec
bound
aas
pop
das
mov
push
nop
idivl
das
ljmp
pop
mov
ja
fstl
lret
dec
cmpsl
shlb
cmp
ffreep
inc
arpl
scas
push
test
pop
and
xchg
ret
pop
out
cld
sahf
int
pop
testb
cmpsb
test
ja
and
jno
aad
loope
sahf
dec
mov
stos
inc
pop
pop
shl
inc
test
stos
and
xchg
jecxz
inc
out
imul
jbe
inc
sbb
mov
mov
aam
iret
cmp
mov
leavew
or
enter
out
mov
xchg
ljmp
popa
pop
aam
pop
xchg
aaa
popa
lret
and
fldcw
cld
push
add
stc
test
xchg
sbb
addl
clc
scas
jbe
outsl
aam
jae
mov
lds
cltd
mov
xchg
insb
in
stos
cmp
dec
popl
leave
cmp
push
add
or
cwtl
xor
inc
xlat
int3
sbb
cli
frstor
jne
xchg
add
or
sbb
and
ss
mov
jge
rcrb
fcoms
cld
adc
inc
test
sub
ds
push
inc
sbb
xchg
out
fs
lock
scas
cld
cld
cli
mov
xor
loop
fcomi
jae
jae
iret
add
adc
jae
imul
mov
fdivl
ds
out
cmc
cltd
lea
push
bound
or
add
mov
cmp
loop
fsub
dec
push
xchg
ljmp
into
jno
popf
inc
pop
lods
add
mov
xor
xchg
fidivrl
cmp
jmp
mov
repz
enter
incl
and
shlb
incb
icebp
dec
scas
add
jecxz
icebp
sbb
mov
flds
int3
bound
sbb
push
mov
jb
sbb
sbb
mov
xchg
notl
call
in
xchg
repnz
ds
sub
lock
mov
ficoml
shll
pushw
mov
dec
mov
ror
ret
fcmove
adc
xchg
xorb
cmp
mov
inc
mov
sub
out
packsswb
in
outsl
test
out
addb
clc
int
jns
inc
sbbb
push
cmc
ja
cmp
sub
push
les
pop
scas
daa
inc
inc
cs
mov
ss
iret
ds
jmp
sbb
add
mov
xor
out
add
jnp
loop
sarl
test
jbe
scas
shr
dec
dec
test
movsb
xorb
push
and
jmp
shll
test
mov
loope
andb
ja
sub
cmp
mov
xchg
jg
jns
ljmp
divl
sub
sbb
pushf
mov
push
xchg
pop
jg
xor
mov
int
hlt
rsqrtps
test
jae
adc
cmp
dec
divb
mov
mov
repz
std
inc
jle
cld
sub
testl
pushf
outsl
cmp
adc
push
add
mov
jno
les
fidivl
ret
push
fwait
sbb
hlt
and
push
lods
dec
mov
or
enter
es
adc
pop
mov
mov
cmp
add
xor
pop
xchg
and
out
push
add
jl
mov
mov
iret
jecxz
je
lcall
sbb
push
addr16
les
clc
fstl
or
push
cmc
out
lds
pushf
je
repnz
xchg
push
cmp
jbe
pop
sub
test
stc
lods
fadd
mov
or
mov
mov
push
xchg
out
sahf
loope
jp
mov
pop
int3
pop
pop
xchg
cmp
shll
js
sbb
and
push
cmc
jo
subl
mov
mov
and
push
leave
push
shrb
aaa
lret
test
add
call
repnz
aam
dec
outsl
cmp
dec
cmp
add
outsl
les
push
push
int
add
out
fimuls
mov
cmp
stos
adc
adc
stc
and
or
pop
xchg
nop
fs
mov
ss
xor
or
dec
popf
ds
outsb
subb
pusha
sbb
pop
jl
nop
inc
push
int3
fs
xorl
jmp
jp
repz
lds
inc
fisubl
insl
data16
mov
icebp
fists
cmp
ss
xor
jns
rcr
arpl
dec
leave
or
add
mov
or
sbb
add
test
adc
fists
cmp
mov
in
push
sbb
push
mov
clc
mov
push
mov
sbb
sbbl
jns
and
dec
addr16
in
mov
das
mov
leave
add
cltd
push
jbe
ja
mov
lret
push
mov
sub
xchg
xor
jnp
adc
shl
and
ds
jmp
dec
mov
push
push
pop
enter
jo
cmp
mov
subl
mov
jne
imul
dec
test
pop
xchg
cli
add
aaa
jle
cmp
adc
stos
fisubs
pop
sub
and
mov
jbe
test
movsl
push
enter
cmp
inc
popa
inc
xchg
imul
adc
fdiv
aas
adc
rorb
adc
mov
inc
xor
xchg
add
xchg
sbb
jmp
push
lcall
adc
in
in
jo
xchg
jo
mov
rclb
sub
stos
ss
cmp
loopne
fcomp
in
fsubs
test
cli
xchg
mov
lret
or
mov
xchg
ds
cmc
sar
xchg
pop
xchg
loope
jp
andb
inc
subb
in
stos
stc
leave
push
jecxz
pop
ds
pop
shl
jnp
adc
mov
repnz
ss
push
ds
pop
adc
lods
cli
jae
and
mov
xlat
aaa
mov
xor
pusha
mov
jl
mulb
xor
mov
mov
mov
sub
std
neg
repz
test
aad
loop
push
pushl
out
mov
outsl
das
or
push
mov
push
aaa
pop
ret
scas
xchg
jp
push
jge
xor
jg
xchg
inc
fbstp
or
inc
ljmp
lret
pop
sub
xlat
mov
mov
sahf
push
xchg
lcall
sti
adc
mov
scas
add
cmp
in
fsubs
inc
mov
out
mov
std
in
pop
pop
add
xlat
in
fcoml
lods
sbb
jl
add
xchg
clc
push
mov
mov
andb
pusha
add
xlat
cmp
test
int
mov
and
cltd
or
ret
jle
into
jp
jns
dec
mov
repz
pop
das
scas
loopne
movsl
sbb
cmc
ja
mov
imul
fcomps
enter
mov
mov
outsb
ret
stos
inc
sub
fwait
ja
out
gs
jae
inc
int3
xchg
jp
in
cmpsb
or
jecxz
push
scas
sbb
inc
push
xchg
into
adc
dec
sbb
shrd
int3
ss
add
push
push
aad
test
mov
mov
ja
in
sbb
fwait
mov
jae
lahf
push
mov
sti
lcall
xchg
jbe
mov
adc
test
mov
mov
cmpsb
popa
addl
std
mov
add
add
ds
ret
xchg
lea
jle
jnp
aas
sbb
shlb
in
xor
push
ror
cmpsl
std
jle
and
xchg
add
push
pop
mov
andb
push
hlt
in
pop
adc
fiadds
mov
add
sub
movsl
mov
mov
arpl
inc
inc
jno
lods
lock
xlat
jne
add
push
pop
push
mov
dec
xor
sti
jmp
shlb
dec
cmpsl
dec
or
jo
imul
push
and
xor
inc
popa
cmp
add
xchg
loope
sbb
fdivr
push
inc
testb
mov
inc
adc
cmc
sub
sbb
fimull
push
pop
push
enter
xor
icebp
imul
pop
sbb
imul
lock
mov
mov
inc
aad
or
clts
and
decb
mov
or
pop
leave
pop
movsb
test
inc
mov
stc
inc
in
lds
test
inc
out
fsubp
aam
and
sbb
mov
sbb
pop
and
pop
in
jb
xchg
push
pusha
out
xlat
xchg
shl
cmpb
sbb
mov
aad
or
dec
push
jge
mov
or
mov
les
movb
icebp
xchg
add
sti
adc
xor
divl
leave
jae
cmp
lret
xchg
testl
mov
mov
dec
push
cmp
bound
mov
jle
xchg
dec
getsec
xchg
adc
test
sarl
ja
xlat
mov
movsb
daa
mov
loop
jbe
or
scas
add
std
pop
xor
int
mov
sar
push
jb
test
cmpsb
pop
pop
xor
out
pop
mov
and
orl
and
mov
dec
pop
arpl
adcb
in
mov
addb
mov
ljmp
das
loope
pushf
jno
cmpsl
nop
push
xchg
sbb
rolb
sbb
dec
mov
cwtl
inc
pop
mov
shlb
ret
pusha
shll
adc
mov
cmp
shll
or
imul
int3
ja
sbb
push
and
dec
dec
jbe
fisttps
faddp
enter
imul
sti
adc
push
jle
out
xlat
scas
pop
je
fstp
or
or
dec
lods
shl
arpl
mov
fmul
out
call
rorl
mov
int3
xorps
add
jne
popa
aaa
mov
add
push
fnstsw
imul
ficoml
jmp
sub
jo
sar
addr16
jmp
sub
out
push
adcl
fistpl
cmp
jl
js
cmp
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
outsb
sbb
sahf
jnp
xor
cmp
jo
fildl
int3
pop
push
fildll
out
shll
mov
inc
inc
sub
ljmp
add
pop
jmp
arpl
add
pop
in
movsl
and
mov
sub
pop
cmpl
xor
fisttpll
cmpsl
mov
dec
cmpsb
cmp
test
lahf
jp
jo
jno
mov
adc
mov
inc
dec
fcomp
out
mov
orl
test
add
lea
lea
aad
or
repnz
mov
jns
lret
push
ret
mov
pop
out
scas
outsb
nop
add
int
inc
adc
mov
xchg
push
ljmp
pop
ja
in
mov
jl
out
ds
push
das
adc
les
icebp
inc
and
cmp
xchg
mov
or
mov
mov
repz
push
movsb
into
xor
add
les
mov
loope
dec
sub
inc
mov
int3
mov
xor
gs
add
xor
xchg
addr16
dec
jecxz
shlb
int3
dec
movsl
das
aad
jg
ljmp
xchg
pop
jbe
gs
mov
hlt
add
das
xor
jl
pop
or
out
test
mov
mov
jae
add
cltd
pop
lcall
mov
adc
jae
or
leave
fsubrs
hlt
inc
mov
imul
mov
sbb
push
imul
jle
and
sub
xor
add
rorl
mov
std
sub
fbstp
jmp
fs
mov
push
push
mov
fs
rclb
push
scas
out
add
shll
hlt
les
movsb
adcl
int
sbb
sahf
test
jp
xchg
out
push
push
call
cltd
lcall
push
insb
iret
add
cmc
push
in
xchg
cs
fstl
jns
or
outsb
mov
shlb
lock
clc
sbb
xchg
inc
push
ljmp
aas
push
add
mov
jnp
push
orb
lret
mov
imul
flds
not
into
aad
clc
or
scas
subb
sbb
cwtl
xlat
cwtl
mov
test
ror
mov
jl
insl
xor
and
mov
lcall
mov
add
stos
adc
ja
lods
jg
sub
mov
mov
dec
pop
xchg
cli
rcrl
jne
mov
lret
push
movsb
sbb
dec
shll
lock
ds
mov
cltd
mov
cmp
push
out
nop
xchg
jo
cmp
xchg
in
imul
insb
xchg
sub
push
jns
push
lds
or
xorb
or
dec
insb
clc
clc
pop
scas
add
sahf
adc
cld
lods
shl
mov
pop
shll
jecxz
insb
cmp
dec
lcall
fwait
adc
sub
jge
repz
shrb
shl
lahf
out
sub
sub
add
clc
shlb
mov
test
std
xchg
mov
sub
js
mov
adc
mov
xor
js
dec
ja
loope
cs
xchg
xorl
out
stos
jno
dec
fsubrp
mov
stc
xchg
stc
leave
lds
jecxz
xchg
sbb
fcmovnbe
mov
loopne
and
stc
out
stos
pop
cmc
sbb
adc
lea
clc
dec
pop
cmpb
daa
and
leave
dec
repnz
repnz
iret
mov
inc
add
mov
and
lret
cltd
in
lret
leave
mov
data16
sbb
mov
pop
cmp
fs
pusha
lods
es
add
sub
je
mov
mov
shll
xor
jg
mov
test
inc
mov
sub
testl
lock
push
incl
ljmp
inc
lock
jbe
fiaddl
mov
cmp
push
inc
pop
divl
push
add
lods
jne
jae
cmc
xchg
movsb
bound
stos
fwait
cmpsl
xchg
xchg
popf
xchg
mov
pop
jae
das
inc
sub
xor
roll
bound
or
jmp
push
rcrb
xor
imul
mov
stos
inc
lods
pop
mov
cs
gs
pop
mov
inc
push
stos
pop
adc
adcl
push
sbb
cmp
add
sub
or
lret
js
mov
cmp
ljmp
jmp
les
sub
mov
cmc
and
lds
xor
out
adc
addr16
mov
and
repz
ss
xchg
or
push
or
add
andl
insl
push
fmul
jb
sbb
pop
int3
sub
sub
sahf
lds
mov
jb
out
mov
or
add
dec
sbb
in
pop
scas
les
aaa
jp
out
out
mov
cmp
pop
mov
and
mov
pop
insb
dec
mov
or
imul
push
dec
in
xchg
adc
xor
dec
outsl
add
test
xchg
pop
pop
jp
test
test
insb
xor
test
daa
push
push
cs
out
xchg
daa
adc
ds
fs
scas
dec
lret
inc
fsubr
fadds
fstps
and
mov
push
in
int
cli
mov
dec
popa
iret
insl
cmp
cli
scas
call
add
and
cs
add
mov
dec
jecxz
fcomp
js
jmp
scas
rolb
iret
sarl
adc
loop
xchg
imul
aad
inc
lret
mov
es
or
fisubs
rorl
pop
sbb
xor
repz
ret
mov
sti
sub
fnsave
jb
aad
mov
lahf
pop
arpl
outsl
adc
ljmp
mov
addr16
std
shrb
mov
cmpsb
cmp
mov
xchg
pop
or
imul
sbb
stc
mov
mov
sub
fwait
pop
out
push
jns
xchg
sbb
adc
repnz
pusha
lea
cld
mov
xchg
push
stos
mov
imul
mov
lahf
and
out
mov
nop
hlt
jge
mov
out
mov
or
mov
sub
xchg
sbb
push
or
xchg
cltd
pop
jl
mov
push
lods
add
mov
pusha
mov
or
aaa
cli
inc
mov
test
cmpsl
dec
jp
ja
lret
arpl
pop
xchg
xchg
cmpsb
ljmp
in
test
dec
xchg
cmpsl
push
dec
xchg
cld
mov
xor
out
mov
jnp
mov
add
aas
test
pop
addr16
in
dec
into
scas
mov
repz
pop
jp
and
inc
call
cmc
push
xchg
lahf
popa
xchg
push
gs
mov
pop
pop
loopne
dec
fwait
test
sahf
jg
inc
mov
inc
mov
mov
mov
jmp
jl
lret
unpcklps
or
or
nop
and
daa
xchg
dec
aad
iret
adc
mov
cli
or
or
or
add
dec
cmpb
cld
ja
jae
iret
aam
idiv
fstpl
cmp
flds
mov
in
ret
jb
into
xor
imul
push
jns
in
aas
adc
lods
push
cmpl
xchg
bound
inc
mov
add
imulb
lock
mov
mov
cmp
ficompl
jge
mov
mov
mov
xor
outsl
xor
mov
xor
sbb
cmp
dec
and
or
mov
cmp
push
into
xchg
mov
lock
cmp
mov
js
adc
dec
jbe
outsl
add
or
lcall
imul
and
adc
ret
xchg
mov
test
jae
fsubrl
rclb
adc
and
out
sti
jl
inc
outsl
outsl
xor
push
xor
lret
popf
adc
rorb
pop
ret
pop
push
and
imul
in
aaa
nop
push
and
mov
stos
cmp
jae
imul
mov
sbb
jge
and
imul
mov
or
imul
pop
cmp
lds
jmp
mov
sub
sahf
das
iret
fidivs
js
xchg
sbb
test
outsl
enter
lahf
jo
lods
sub
stc
lods
sbbb
out
and
aam
mov
inc
repnz
jl
out
test
push
cltd
jmp
or
adc
dec
or
xchg
pop
int3
push
movntss
fldcw
mov
sub
cmp
sbb
test
out
and
fdivrs
out
sbb
nop
and
mov
frstor
iret
jb
jbe
push
leave
outsl
jns
jb
pushf
push
xchg
push
or
out
jb
cmp
push
mov
into
cmp
sbb
push
out
cs
dec
jb
fldenv
lret
fldenv
add
cld
test
xor
aad
call
mov
test
popf
push
push
std
out
jp
rolb
lcall
les
loopne
push
jl
lods
mov
cmpb
mov
cmp
lds
cmp
mov
push
mov
test
ja
pop
sti
dec
addr16
int
jle
sub
xor
mov
popf
push
aad
xlat
dec
into
ret
add
pushf
movsb
xor
lahf
inc
enter
add
call
mov
pop
insl
push
xchg
sbb
sub
push
cltd
stos
pop
jecxz
loopne
xchg
in
cmp
mov
daa
fstpl
dec
lock
pop
fldt
jae
je
mov
jg
in
sbb
stos
fs
lods
xor
push
sub
idiv
movsl
push
test
jnp
jbe
and
fisubrl
das
push
mov
addr16
pop
pop
rol
xchg
rcrl
in
cltd
push
jge
add
mov
aam
ja
in
lret
mov
daa
mov
sbb
inc
cmp
or
out
mov
sbb
inc
call
ds
int
xor
jg
shll
divl
push
lds
stos
sbb
incb
mov
jl
insb
sahf
mov
shrl
bound
adc
mov
lret
pop
rcrb
and
pushl
xlat
hlt
and
pop
jecxz
test
nop
dec
mov
aaa
dec
push
lock
dec
aam
rep
lds
xchg
cmpsb
mov
rcr
fwait
ds
mov
pop
jmp
add
xor
idivl
rolb
or
hlt
in
pop
jecxz
lods
or
aam
mov
les
xor
cld
fstl
jo
mov
adcl
add
and
cmpb
nop
enter
mov
jae
jne
sti
pushf
push
xchg
lahf
xchg
push
inc
lods
mov
push
jb
arpl
inc
mov
pop
cli
mov
rcll
mov
push
pusha
adcb
and
adc
in
inc
jns
lea
and
xlat
jge
xchg
adcb
enter
jb
fstpl
sysexit
sub
cmp
pop
xor
pop
out
loop
inc
add
shl
jecxz
enter
in
xor
jge
int3
fcomps
notl
rolb
dec
xchg
sub
xchg
sub
cmp
popa
js
jnp
xor
cmp
divl
pop
inc
add
rclb
fs
inc
mov
out
idivl
cmp
jb
sbb
cwtl
loope
xchg
push
push
push
mov
out
mov
push
jecxz
adc
fdivl
fwait
xchg
int
pushf
lret
or
mov
faddl
jge
bnd
adc
roll
xor
pop
clc
cmp
dec
pusha
and
ret
leave
inc
es
js
mov
push
mov
or
ja
jb
cmc
xchg
insl
stos
imul
mov
sub
loop
xchg
pop
scas
enter
push
sbb
xor
in
notb
mov
xor
or
jo
cmpsb
clc
xchg
push
jmp
mov
pop
jle
loope
push
mov
sbb
pop
push
shlb
rorl
and
xlat
xchg
jge
dec
sbb
out
jns
push
mov
push
or
and
cli
mov
sub
mov
fs
dec
xchg
dec
pop
mov
popa
rorl
jg
lds
loopne
dec
lods
xchg
sub
jl
pop
ljmp
inc
cwtl
push
jmp
nop
and
aas
adc
mov
push
add
test
repz
dec
adc
xchg
notl
sti
push
fdivr
xchg
push
aad
xlat
ret
xchg
cmp
push
sub
data16
loopne
adc
dec
pop
inc
call
pop
lahf
mov
mov
fbstp
cmc
imul
cmpsl
inc
icebp
cs
push
scas
mov
sahf
lret
imul
loop
dec
aad
dec
and
fisubrs
aad
rcl
mov
dec
adc
lret
push
cmp
mov
jg
daa
std
adc
out
nop
aam
hlt
int3
lcall
mov
das
xchg
pop
std
imul
imul
mov
stos
mov
aaa
sbb
xor
shr
xchg
mov
mov
cmp
push
add
rolb
push
movsl
ret
jecxz
mov
push
insb
loope
mov
xchg
dec
or
iret
mov
iret
fnstenv
sbb
gs
icebp
push
outsl
mov
adc
mov
sbb
cvtdq2ps
mov
js
fwait
mov
pop
mov
mov
imul
mov
cmp
pop
lods
loop
mov
pop
out
mov
outsb
mov
fisubrs
xchg
add
ret
inc
rcll
and
and
pop
call
mov
cmp
pop
lds
mov
popa
scas
stos
push
pop
lret
movsb
xchg
mov
sub
push
mov
pop
shrl
push
sub
add
outsl
cmp
repnz
lds
push
cltd
ret
xchg
test
cli
sub
sbb
mov
dec
dec
add
mov
dec
mov
clc
test
and
repz
sbb
test
cmp
sub
push
lock
push
cmp
mov
cld
ret
xor
mov
pop
cmc
xchg
ret
xor
xchg
dec
loope
push
or
mov
inc
loope,pt
adc
mov
jp
outsl
les
sbb
jb
repz
inc
cltd
adc
inc
sub
dec
cwtl
mov
adc
push
push
adc
push
mov
pop
mov
stc
mov
pop
push
inc
xor
rcrb
stc
sbb
add
xor
mov
dec
mov
sub
int
xchg
jae
stos
sahf
mov
imulb
test
inc
ds
aaa
jge
in
dec
or
dec
xchg
sub
and
rcll
xor
outsb
xchg
sahf
pop
cmp
mov
int
dec
push
stos
out
aad
pop
or
insl
icebp
xlat
mov
lret
jecxz
in
scas
and
jle
and
out
mov
xor
leave
push
ds
sub
scas
pushf
xor
fadds
sti
mov
ja
fnstsw
icebp
aam
jle
pop
push
mov
cmpsb
pop
or
jp
jno
add
mov
call
add
sbb
sub
orl
cmpsb
add
sub
mov
lret
js
mov
scas
iret
push
dec
insl
subb
dec
hlt
fnsave
out
in
notl
cld
adc
xchg
ret
mov
xor
or
ja
lea
xor
into
sbb
xchg
sbb
pop
ljmp
add
jnp
idiv
adc
sub
mov
jb
add
in
imull
iret
ficompl
add
push
add
xchg
and
pusha
xlat
bound
fidivl
movsl
std
mov
inc
sub
enter
es
shll
je
lds
cld
push
xor
cmpsl
dec
mov
negl
add
movl
mov
inc
mov
jae
lods
dec
gs
out
jg
es
ja
into
adc
lret
xor
pop
mov
push
mov
adc
cmp
daa
jo
or
pop
stos
mov
pop
xor
push
jg
cmc
add
stos
dec
jg
xchg
dec
lret
cmpsb
jge
sbb
push
fdivs
cmp
sub
movsb
push
fidivl
xlat
adc
push
neg
imul
mov
test
ljmp
cmp
lahf
paddb
push
pop
adc
jmp
fmuls
out
cwtl
fstps
mov
fwait
aaa
pop
mov
jmp
and
shll
fcompl
cld
cmp
scas
lcall
inc
xchg
adc
mov
fildll
mov
mov
ljmp
sbb
adc
mov
scas
dec
adc
fistpll
push
lods
pop
jo
add
arpl
or
and
test
mov
scas
mov
xchg
mov
insb
push
cmpsl
or
clc
xchg
push
or
sbb
sub
xor
jge
fisubrl
or
inc
insb
jle
push
adc
push
or
out
call
in
or
sub
pop
rorb
mov
jo
push
ret
or
adc
and
cmpsl
push
pop
ffree
push
outsl
xchg
mov
sarl
jbe
sbb
hlt
and
imulb
loopne
jbe
push
ret
add
mov
popa
sbbl
sbb
adc
push
mov
xchg
test
cld
push
pop
jl
xchg
jnp
cmp
movsl
jne
mov
mov
mov
testl
outsb
sahf
cld
popa
mov
xor
and
and
out
xchg
addr16
mov
pop
in
loopne
mov
rorb
add
xchg
and
push
add
sbb
jge
in
mov
in
jo
xor
mov
xchg
inc
xor
iret
cmp
adc
add
scas
sbb
push
mov
mov
int
lea
xchg
or
negl
cmp
loop
jbe
sbb
cmpsl
fadds
push
sbb
popa
xor
mov
aaa
dec
sub
data16
pop
cmp
xchg
jmp
sub
dec
pop
dec
inc
jnp
out
mov
push
sar
pop
sarl
lock
mov
mov
push
dec
sub
sub
push
loopne
popa
or
in
lret
mov
mov
into
add
filds
out
xchg
and
iret
jle
xor
rorl
sti
repz
jo
fmull
push
mov
mov
pop
into
cmpsb
mov
push
fisttpll
outsl
mov
mov
add
cmp
lds
arpl
jno
xchg
pop
sbb
push
cmp
xchg
and
jae
ja
jp
enter
daa
jmp
cmp
xchg
cmp
call
xor
xor
inc
lods
dec
jae
inc
push
xchg
mov
sahf
dec
nopl
dec
lcall
add
push
push
adc
test
js
and
cmpsl
cmp
cs
jp
loopne
test
inc
sub
pop
or
in
or
cli
gs
leave
lahf
or
xchg
sub
pop
mov
stc
mov
int
xor
stos
cmpsl
lods
and
xchg
xchg
femms
mov
out
loope
xchg
es
scas
stc
push
mov
sub
push
mov
stos
xor
xorl
pop
andl
lds
lcall
jno
stos
repz
test
movsb
int
cmpsb
sahf
insb
dec
imul
test
popf
mov
add
or
jb
std
mov
nop
lock
xor
pop
and
dec
mov
hlt
or
arpl
mov
test
xchg
cs
dec
int3
xlat
push
cmpsl
push
cli
push
iret
ds
jae
bound
outsb
cmc
lcall
sub
push
lods
dec
dec
pop
shll
ret
fwait
adc
mov
lds
flds
xorb
or
in
cmpsb
xor
pop
aad
push
imul
loope
lret
and
or
fdivrl
sbb
add
cwtl
pop
mov
in
pushf
xchg
dec
mov
mov
sbb
lcall
loopne
ret
out
lods
jns
daa
pop
into
loop
gs
push
push
cmpsb
cs
pop
popf
popa
in
dec
sub
test
jmp
in
xchg
lock
shlb
xchg
cmpb
test
enter
cli
jnp
movsb
mov
xor
and
dec
or
pushl
out
mov
cmpsb
adc
mov
int
xor
lods
outsl
jle
mov
push
or
in
adcl
xor
sbb
das
bound
add
aad
enter
push
nop
lcall
fsubrs
xchg
cwtl
cltd
out
out
loop
and
mov
push
aad
xor
jecxz
jecxz
rol
neg
shlb
cmp
or
push
shlb
push
push
xchg
or
mov
aad
lret
fwait
push
ret
arpl
je
filds
lret
dec
xchg
dec
pop
ror
cmp
aad
dec
xchg
pop
sbb
daa
fimull
mov
jl
jle
fcoms
test
mov
sub
arpl
mov
pop
subb
push
adcl
push
mov
outsl
xchg
jge
add
mov
cwtl
cmp
shl
add
mov
xchg
pop
inc
shr
add
mov
lcall
dec
cld
add
push
sbb
div
into
cmp
stos
jo
or
sub
into
jmp
mov
sub
ds
jbe
call
mov
ja
movsl
sbb
mov
in
addr16
or
jb
ja
mov
cmp
xchg
and
aaa
cmp
pop
pop
jns
test
call
subb
mov
push
pushf
and
daa
shlb
sub
mov
or
nop
and
bound
and
lock
mov
push
or
lods
dec
imul
xchg
jecxz
sbb
subl
in
ljmp
and
dec
dec
and
sbb
push
call
nop
sub
ljmp
sub
movsb
jl
fs
sub
stc
adc
addr16
cmp
pop
sub
int
daa
das
int3
jbe
mov
dec
inc
rcrl
call
into
add
iret
popa
cmp
jecxz
lret
or
ss
pop
ficoms
push
ret
ret
popf
in
stos
sub
mov
mov
mov
sbb
xchg
ja
mov
adc
out
sub
das
in
push
call
icebp
or
pop
or
and
xchg
test
outsl
cmp
inc
xor
mov
popa
jns
xchg
fists
mov
nop
stc
mov
jne
inc
pusha
aad
in
pop
sahf
cmp
and
mov
mov
or
cmc
mov
int
lret
int3
addb
fidivs
jne
pop
sbb
push
cmp
mov
xlat
imul
xchg
xlat
push
std
xchg
jno
shll
cs
mov
pop
mov
and
ss
aaa
iret
dec
xor
cld
pop
lahf
push
ss
add
xchg
sbb
cmp
dec
gs
test
push
test
cmp
shll
sahf
out
imul
or
cmp
loope
adcl
outsb
sub
pop
jg
adc
mov
cmovbe
pusha
lahf
add
mov
pop
cs
push
pushf
int3
mov
gs
into
nop
mov
dec
es
cmp
popf
loop
dec
fnstsw
xor
pop
cmp
lahf
sbb
cmpsl
inc
pusha
push
mov
jg
sub
roll
inc
ret
jmp
xor
repz
xchg
jno
int3
fwait
mov
popa
fsubp
jmp
push
sbb
xor
xchg
icebp
push
adc
dec
hlt
sti
outsb
xchg
pop
sahf
adc
xchg
scas
out
xchg
push
mov
and
aad
outsl
xchg
xchg
xchg
dec
clc
hlt
mov
test
pop
out
pusha
pusha
mul
mov
cli
pop
test
movsl
push
adc
inc
in
add
fstpl
lahf
cwtl
movsb
xor
sbb
gs
test
fs
pop
inc
stos
mov
mov
push
in
mov
xor
xchg
test
fwait
sub
xchg
mov
in
cs
data16
gs
pop
inc
out
fcompl
jo
sbb
test
mov
xor
push
loope
push
sar
and
cwtl
fwait
xchg
mov
cmp
mov
fnsave
lds
mov
out
lds
fnstcw
push
adc
int3
adc
mov
mov
cmp
jnp
cmp
inc
xor
xor
cli
ret
sub
out
icebp
test
add
pop
pusha
cs
push
cmp
push
insl
inc
mov
das
imul
scas
adc
out
das
jae
xchg
mov
aad
es
lods
lea
and
add
pop
sbb
fwait
leave
mov
dec
push
outsl
in
gs
jns
fdivrl
imul
inc
frstor
aad
mov
jmp
repz
cmp
cmc
sahf
sbb
das
fmull
push
sahf
cmp
xorl
repz
cmc
push
fwait
pop
push
jns
into
xor
mov
ss
ss
sti
xchg
ss
jmp
lret
aaa
shlb
mov
loope
push
pop
xor
jecxz
adc
jl
mov
loop
test
stos
movsb
dec
fbld
push
loope
mov
cmpsb
adc
ja
pop
dec
in
ljmp
jg
lahf
mov
cmpl
inc
dec
lods
xchg
leave
xchg
mov
push
aaa
mov
testb
or
push
pop
sbb
cwtl
test
push
cmp
aad
inc
push
loop
cwtl
ja
std
push
sub
mov
sbb
enter
in
sbb
jecxz
push
jno
in
out
into
adc
and
lods
mov
inc
mov
push
and
aam
jl
jne
insl
xor
lock
mov
jp
inc
inc
aas
cmc
jecxz
call
jb
lods
mov
fcoms
pusha
sbb
repnz
push
loope
mov
hlt
dec
inc
sarb
leave
push
push
shr
repnz
mov
loope
or
call
mov
neg
ret
jno
movsb
jmp
call
jne
clc
loop
cli
or
stc
pop
rolb
cmpsl
push
xchg
adc
lret
mov
rcr
cltd
xchg
jbe
cmpsb
mov
sahf
test
or
shrb
inc
mov
sub
push
xor
cmp
cmp
push
xchg
and
out
lea
mov
push
jmp
or
jne
pop
lds
mov
sbb
cmp
mov
bound
notl
test
sub
ror
inc
push
out
add
ja
push
mov
cmp
push
cmpsl
shr
in
js
fimuls
js
movsl
in
out
xor
lea
xor
xchg
imul
fs
aam
xchg
inc
cli
jne
pusha
hlt
fcompl
or
pop
xchg
rcll
dec
adc
std
xchg
jmp
adc
pop
push
shl
in
ret
icebp
xlat
jge
cwtl
pop
inc
pmulhuw
push
lods
sub
inc
lds
cmpsb
loope
xor
add
icebp
cmc
jne
sub
sbb
xchg
repz
or
adc
cltd
icebp
and
inc
and
push
movsb
dec
insb
mov
lcall
jecxz
sbb
dec
pusha
xchg
cmpsl
jmp
aaa
leave
push
adc
in
jae
xchg
inc
cli
orl
jbe
js
pop
jns
adc
js
test
push
add
sbb
jmp
mov
mov
and
test
mov
and
adcb
push
fmulp
xchg
mov
in
inc
leave
cmp
lcall
lods
xor
inc
mov
aas
fcmovb
push
cltd
jmp
lock
das
jge
jb
js
mov
xchg
cmp
mov
mov
aaa
jns
sbb
jnp
andl
push
sbb
push
add
mov
dec
mov
dec
scas
jb
ljmp
clc
mov
ljmp
out
insl
mov
shll
insb
adc
sbb
fisubl
stos
bound
push
popf
adc
mov
lret
cmp
leave
dec
sbb
or
push
lods
jp
push
sbb
lods
insl
addl
into
or
jne
xchg
sarb
pop
movsb
add
jecxz
sbb
arpl
loopne
ds
add
jae
add
ret
mov
jb
in
inc
xchg
shr
rorl
fstp
ret
into
cmpsl
sub
rcrl
repnz
pminsw
fwait
scas
or
xor
popa
js
fldcw
mov
movsb
bound
xor
mov
jne
pop
inc
push
mov
fxch
push
pop
jnp
insb
cmp
rolb
xchg
sahf
cmc
inc
sti
xchg
outsl
cs
in
xor
ljmp
sar
aam
cmp
push
adc
sub
sbb
int
sbb
mov
xchg
and
mov
cld
dec
ret
imul
mov
call
nop
push
inc
loopne
stos
xchg
xor
mov
data16
test
lea
xor
test
lahf
outsl
es
addl
fisttps
std
dec
pop
jo
mov
add
xor
jnp
mov
movsb
mov
inc
test
outsb
ds
mov
popl
adc
cld
jnp
adc
add
test
das
jge
adc
sti
xor
pop
sub
into
pusha
sbb
aas
mov
ja
or
inc
jp
pop
aaa
jle
fistl
xor
push
jecxz
and
into
cmp
or
popa
out
mov
jmp
ret
cmp
mov
jne
fnstenv
adc
fisubs
xchg
jl
jae
pmaxsw
pop
in
in
cmpb
rorl
dec
pop
fistpll
das
xchg
les
mov
test
mov
xchg
xchg
movsb
rorb
mov
and
push
dec
imulb
adc
and
push
lds
bound
pop
mov
jle
sbb
imul
sbb
scas
sub
daa
lcall
push
rclb
mov
mov
or
les
mov
jge
pop
jmp
out
mov
inc
repz
fwait
cmpsl
pop
divl
dec
cmp
loope
lds
mov
test
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
adcb
and
jnp
sahf
jnp
inc
sahf
adc
xchg
std
fucom
inc
in
xchg
mov
ss
andb
aas
pop
pop
sub
jle
dec
movsb
loop
add
sbbl
popa
sti
addr16
or
mov
scas
xor
aam
jecxz
dec
aam
sti
or
dec
std
sti
sub
scas
into
out
sub
cmp
in
mov
sti
enter
pushf
mov
and
mov
add
or
daa
jl
mov
outsb
push
mov
and
xor
jecxz
xor
add
cmp
sub
out
lcall
xchg
insb
js
in
sbb
test
ret
jl
sahf
imul
ss
xor
dec
imul
adc
pop
mov
gs
jp
popa
lock
lock
subb
cmp
mov
mov
scas
adc
dec
add
jmp
inc
imul
dec
cmp
sub
mov
pop
xchg
pop
xchg
jl
ja
setl
icebp
ss
or
sbb
push
mov
inc
fsubr
pop
mov
std
movsl
out
js
negb
mov
inc
lahf
xchg
es
sbb
in
orl
inc
cmp
scas
popf
jp
enter
loope
or
fsubrp
adc
mov
or
dec
cmp
xchg
dec
xor
dec
mov
in
imul
hlt
call
sti
out
jmp
enter
sarb
xchg
dec
movsb
sbb
rcll
iret
sbb
stos
fucomi
mov
jnp
adc
inc
xor
pushf
rcrl
cmc
lods
lret
jae
sub
addb
or
outsb
adc
xchg
mov
adc
sub
arpl
test
xchg
inc
mov
fcoms
dec
push
mov
movsl
push
call
pushf
testl
xor
cs
and
arpl
mov
cs
or
lods
in
xchg
fs
mov
jae
mov
lahf
fisttpll
cmp
test
lock
fwait
popf
mov
xchg
and
repnz
jno
mov
out
cmp
jl
and
jmp
mov
adc
jno
mov
mov
jo
add
or
andb
dec
clc
repnz
ret
xor
jbe
stc
sub
sti
in
dec
pushf
clc
or
xor
pop
jl
sbb
lahf
shrl
adc
push
adc
dec
sahf
mov
test
movsb
cmp
xlat
lret
fcoms
or
test
ljmp
ret
add
jb
je
jle
fnstenv
pop
and
adc
fisubrl
sbb
mov
mov
data16
jnp
cmp
jecxz
nop
repnz
ss
lret
pusha
mov
xchg
pushf
rcl
lcall
push
mov
fdivs
push
mov
pop
mov
stos
fisubrl
mov
push
arpl
test
pop
or
mov
outsl
xorl
pop
jle
fs
push
sub
jecxz
mov
loope
pusha
jge
dec
outsb
loopne
push
cmpsb
dec
pop
lds
sbb
add
mov
sbb
push
dec
inc
cltd
sbb
or
xor
in
mov
scas
and
adc
aam
add
jbe
cld
mov
ss
fwait
mov
adc
ljmp
into
cmpsb
sbb
add
mov
lret
and
mov
pop
push
lret
pushf
mov
cltd
inc
nop
push
test
test
inc
xchg
inc
inc
and
dec
lcall
jno
cltd
das
js
mov
xor
int3
shl
mov
stos
cwtd
jbe
in
ret
mov
pop
lods
cmpb
jnp
jne
or
ret
sub
jp
jle
xchg
xchg
jno
xchg
xorb
fldt
stos
pop
jb
push
rcr
mov
imulb
scas
push
enter
xor
xor
test
inc
sarb
cwtl
into
in
into
rcrb
scas
or
xor
stc
mov
and
pop
pop
lds
shrl
addr16
xchg
inc
in
loopne
fisubl
in
ffree
shl
sbb
mov
divb
test
xchg
cmpsb
sbb
mov
xchg
mov
push
enter
push
lds
hlt
lods
add
mov
dec
jnp
loope
repz
daa
aam
sub
or
and
jno
ret
adc
push
pop
xchg
pushf
outsl
push
adc
adc
aas
lock
scas
adc
loop
mov
adc
cmp
cmp
push
fnstcw
cld
sub
inc
sbb
push
fiadds
ret
pop
fadd
mov
pop
insb
scas
out
sub
ljmp
sbb
or
out
das
cs
jecxz
rorb
xchg
add
add
inc
dec
ljmp
push
movsl
or
lret
faddp
jb
and
cmc
frstor
add
mov
mov
push
int
mov
jl
shll
jmp
dec
int
enter
fwait
inc
enter
gs
jo
jbe
out
fisttpll
add
loop
mov
xchg
subl
test
lret
jle
dec
aad
push
mov
adc
das
mov
outsb
push
mov
cmp
out
test
mov
push
imul
xlat
jbe
push
jbe
repnz
call
sub
cmp
call
xlat
push
idivb
out
iret
pushf
cld
lock
xchg
fimull
stos
mov
mov
orb
dec
lret
inc
cltd
or
xchg
push
lock
loop
inc
mov
pop
fsubs
sbb
mov
jbe
mov
or
or
mov
popf
lock
push
es
jbe
loopne
pxor
xchg
cld
negb
cli
push
aas
cltd
cmpsb
stos
xchg
pop
aad
cli
push
or
or
ficomps
roll
out
jecxz
fcoml
pop
xchg
in
out
ljmp
inc
popf
fs
pop
xchg
call
repz
pop
imul
adc
xchg
inc
fcomip
mov
sarl
jnp
insl
rcl
stos
arpl
pop
cmp
lret
adc
icebp
xchg
ljmp
cmpl
fisttps
push
iret
call
or
sahf
js
dec
frstor
addl
or
mov
lds
dec
test
pop
iret
add
fbld
cmpsb
mov
cli
test
test
mov
aas
sbbl
jns
subb
les
lods
push
fsubr
addr16
mov
xor
pop
aam
popa
dec
frstor
in
into
jbe
cmp
mov
fdivrs
push
jae
inc
loop
pop
inc
jl
call
mov
test
test
mov
shll
leave
test
mov
sub
add
shr
cmp
shr
mov
dec
mulb
mov
pop
cld
push
pop
add
add
mov
and
test
ljmp
sbb
jbe
ror
aad
ret
mov
loopne
inc
sub
cmpsl
out
sti
cmc
fimuls
cmpl
imul
hlt
sarl
popa
ret
cld
xchg
sub
sti
push
es
dec
imul
in
sbb
dec
sbb
pop
das
into
cmp
or
outsb
sbb
jae
aam
sub
mov
cmpb
int3
call
rcr
clc
fchs
stos
xor
lods
lea
subb
loop
les
sub
pop
es
sub
jb
mov
int
dec
mov
mov
add
insl
out
xchg
int
pop
pop
stos
cmp
xor
mov
scas
and
inc
jg
xor
insl
data16
dec
punpckldq
push
sub
pusha
and
pop
aam
roll
push
loope
int
ja
cmp
adc
gs
push
jo
popa
xor
inc
pop
sub
mov
int
mov
rorl
out
fidivrs
in
addb
jae
fistl
jl
xchg
icebp
insl
nop
push
adc
xor
lret
sub
or
lcall
push
mov
dec
mov
popf
imul
adc
adc
push
fadd
jnp
pusha
notl
jae
hlt
mov
lahf
push
repnz
test
push
jp
pop
xchg
clc
mov
sbb
add
lods
divb
js
fwait
outsb
or
add
std
jl
mov
fldt
fiadds
xor
sbb
mov
or
adc
icebp
pop
mov
mov
int
fildl
faddl
jl
test
js
in
mov
orl
pop
push
aam
xlat
adc
add
mov
add
sbb
fs
rclb
int3
jge
and
adc
ljmp
sub
out
adc
pusha
hlt
mov
in
sarb
lock
scas
imul
inc
out
js
push
inc
repz
cmp
lock
push
repnz
jp
dec
add
imul
test
out
mov
fwait
sbb
gs
aas
sahf
subl
and
test
push
xor
pop
lock
aas
cmc
jmp
lea
ja
pop
bound
rorb
mov
fstps
adc
cmp
sbb
xchg
aam
fdivp
mov
nop
cmp
push
dec
xchg
push
xor
imul
xor
lods
add
stos
push
jge
aas
pusha
mov
dec
pushf
addr16
fdivl
push
aam
ja
or
stos
push
sub
cmp
test
cmpb
jae
test
fstps
and
sub
xor
sub
mov
dec
xchg
ss
mov
mov
int3
sahf
loope,pn
mov
das
ja
push
push
sub
daa
add
jle
or
sbb
mov
dec
insb
mov
xor
mov
mov
inc
es
fwait
or
loope
sar
leave
cs
sahf
fiadds
push
push
dec
adc
in
inc
cmp
bound
rcrb
fisttpl
ret
inc
add
or
push
aad
mov
rcr
inc
jnp
and
sti
push
sub
jecxz
jg
xchg
xor
fisubrl
jmp
pop
insl
hlt
and
inc
cmpb
jecxz
jno
ja,pt
andb
roll
jae
cld
jbe
cs
jne
inc
sub
and
adc
insb
pop
jle
bound
outsb
sub
push
repz
adc
cmp
pop
dec
push
int3
jo
popa
das
shrl
ret
rcrb
xchg
mov
xlat
popfw
orb
mov
insl
pop
call
sub
in
pop
rorb
jno
cltd
sbb
iret
sbbl
or
pop
add
mov
icebp
inc
jl
add
xor
or
adc
lds
push
addr16
add
push
inc
mov
sti
jns
pop
mov
nop
inc
jb
xor
and
push
fidivrl
cmp
push
fnstenv
xchg
call
rcll
loope
roll
sbb
lods
sub
rclb
jg
mov
adc
jmp
dec
mov
loop
mov
bsr
jecxz
adc
pop
jbe
in
xchg
and
pop
hlt
mov
mov
lea
adc
mov
mov
push
xor
ljmp
out
or
xor
aad
jbe
lea
fimull
dec
xchg
mov
cwtl
xchg
stos
lea
mov
repnz
jo
mov
jnp
gs
shrl
fcomps
jl
insb
dec
fidivl
pop
dec
imul
jnp
adc
mov
push
push
repz
es
dec
lcall
jle
cmpsl
adc
fstpl
les
add
fldt
aam
lock
call
jg
sub
pop
shll
mov
in
mov
xor
jl
mov
sub
pop
call
les
stos
ret
sbb
bound
and
jno
mov
imull
ja
or
iret
sbb
rcl
lods
xchg
cli
inc
mov
sub
bound
jne
jnp
cmp
xor
inc
mov
arpl
and
mov
jmp
loope
insb
movsb
ficompl
xchg
pop
out
dec
nop
insb
mov
dec
jmp
and
and
and
std
xchg
or
sbb
xor
cmp
add
stc
inc
adc
lods
cli
andl
mov
mov
pop
mov
stos
adc
xor
add
data16
fbld
arpl
mov
xlat
stos
ss
out
and
cmpsb
stos
dec
sbb
cwtl
mov
mov
xor
xor
and
inc
hlt
shr
inc
cs
mov
xchg
jle
or
mov
sbb
mov
movsl
stos
ss
aas
mov
std
dec
xchg
and
ljmp
xor
jno
shlb
daa
das
ja
sti
or
pop
cmpsl
stc
mov
xor
into
sbb
jp
or
cmc
inc
loopne
sbb
dec
addr16
test
mov
movsl
or
dec
sbb
vpminsq
xchg
push
fiaddl
fimuls
adc
hlt
dec
rorl
ret
inc
movsl
cld
inc
out
inc
rorl
lahf
sub
aaa
fld1
sbb
aad
mov
and
mov
jecxz
ds
sbb
lcall
loop
mov
addr16
lcall
pop
adc
je
je
sbb
sti
call
popf
mov
lods
test
test
xchg
out
and
mov
je
mov
insb
test
jmp
cmp
or
fstps
push
test
sub
cmp
cmpsl
jne
inc
gs
in
jg
mov
fimull
jmp
addb
mov
or
imul
in
iret
mov
cmpsb
sub
push
stc
leave
call
mov
out
pusha
lahf
lds
mov
xchg
and
ljmp
js
filds
push
mov
xchg
loope
mov
mov
or
sub
push
cmp
jmp
cmp
fwait
and
mov
lea
xchg
cmpsb
mov
sub
push
adc
out
adc
movsb
dec
ret
imul
aad
cmp
lea
imul
cmp
les
lods
pop
imul
and
lea
jle
push
pop
filds
push
icebp
cmp
mov
leave
mov
popa
outsb
divl
int
jo
scas
aam
adc
add
xchg
sbb
movsl
dec
notl
xchg
sub
adc
add
sub
push
das
mov
dec
mov
dec
je
repnz
in
lret
mov
pop
pop
lods
ja
pop
dec
sti
mov
xchg
jo
loop
imul
mov
lret
aad
movsl
ds
out
mov
mov
sub
mov
outsb
and
rcll
or
or
loopne
cmp
push
repnz
jmp
movsb
jge
mov
sub
cmp
add
je
mov
dec
ficomps
adc
push
dec
loop
push
sub
shll
stc
adc
push
xor
xorl
lock
pop
sahf
sub
outsb
jnp
stc
cli
xor
scas
sahf
adc
mov
push
popf
jne
xchg
aas
add
out
fwait
int3
jo
cwtl
add
bound
push
fidivrs
mov
jl
jg
lods
js
mov
mov
je
movsb
add
movsl
enter
out
je
fsubrl
cmp
daa
outsb
push
sub
int3
mov
pop
filds
adc
sub
fsubp
cmp
dec
in
and
sub
cltd
jns
in
pop
push
pop
nop
jg
imul
in
inc
and
stc
std
inc
mov
mov
test
lahf
add
and
sbb
fistl
mov
mov
sbb
mov
popw
imul
jae
into
cmp
mov
xchg
addr16
fistpll
test
jecxz
push
cmp
sarb
add
enter
or
xor
ja
sub
in
idivb
dec
addr16
dec
xor
jo
mov
jns
or
add
cmpb
incb
aad
cmp
mov
dec
lds
imul
lods
imul
lret
push
inc
add
iret
fcompl
mov
negl
adc
mov
call
fdivrl
popf
push
mov
rclb
scas
pop
je
pop
inc
ret
pop
sub
mov
rclb
dec
mov
jmp
sbb
xchg
shrl
icebp
push
mov
adc
les
jle
sahf
pop
aaa
and
add
push
fsubrl
imul
pusha
sub
adc
loope
aad
test
js
inc
lods
test
mov
imul
loopne
jb
sbb
js
xor
dec
ret
mov
ficoms
rcr
inc
and
mov
inc
xchg
sbb
push
mov
ret
mov
testl
js
pusha
mov
stos
mov
aad
sub
inc
int
jo
gs
fnstenv
cmp
inc
in
pop
mov
shrb
jne
mov
xchg
inc
es
cmpsb
sub
pushf
pop
shlb
inc
cmp
xchg
xchg
mov
pushf
inc
out
jne
mov
jp
movsb
stos
mov
movsl
xchg
test
adc
loope
sbb
mov
ds
in
push
xor
jecxz
or
imul
aam
mov
mov
and
pop
addl
mov
xor
into
sub
push
notb
cs
std
cmpsl
jecxz
or
mov
mov
arpl
loope
inc
clc
sbbb
mov
movsl
add
inc
and
nop
push
xchg
dec
shll
bound
push
jae
cwtl
loop
rcrl
jo
loop
test
jecxz
sub
xchg
push
rcrl
mov
xchg
mov
inc
or
pop
mov
cmpb
mov
mov
and
lcall
test
pop
push
dec
std
lock
fildll
dec
adc
in
push
mov
pop
and
fs
mov
repnz
fistps
mov
sub
ja
pop
add
loopne
clc
icebp
lret
pop
jg
add
jnp
xor
ja
and
mov
fs
pop
jno
pop
lcall
enter
enter
cltd
and
fs
mov
test
sub
pop
xor
pop
mov
adc
push
fistpl
sbb
test
mov
aaa
psubd
je
in
stos
xor
out
jb
xchg
addl
rcrb
bound
imul
cmpsb
push
in
dec
bound
pop
insb
fmulp
xchg
dec
stos
push
addb
leave
cmp
mov
dec
aaa
lret
loop
xchg
pushf
cltd
jg
sahf
pop
mov
out
or
pop
pop
sti
jno
iret
out
push
jb
test
aad
js
push
dec
clc
scas
mov
add
test
add
stos
add
mov
xor
es
pop
movsb
jne
push
xor
daa
ja
fcoms
lea
or
imul
inc
jp
inc
test
mov
and
ja
arpl
movsl
insb
into
negl
fldl
xor
mov
js
xchg
cmp
popf
cmpsb
lcall
addr16
or
cld
or
icebp
rcll
rorb
cmpsb
mov
testl
shl
lcall
jg
push
lahf
bound
xchg
lods
cmp
and
stos
mov
inc
jbe
cmp
push
out
jns
xchg
jns
in
cmpsb
imul
jb
mov
push
movsb
test
adc
dec
push
notb
mov
fcompl
or
ret
dec
mov
mov
mov
mov
inc
andl
pop
sub
das
psubsw
std
push
sub
or
lahf
je
mov
aaa
sub
mov
shrb
shl
movsb
pusha
or
cmp
je
xchg
mov
lret
mov
mov
sbb
lret
dec
pushf
sub
lahf
sub
add
jmp
pop
dec
cltd
push
sub
mov
cmp
aaa
xorb
and
scas
sub
jg
aas
and
mov
adc
adc
sbb
jp
fsubp
jns
inc
daa
and
push
test
push
mov
dec
pop
mov
mov
pop
sbb
push
cmp
push
pop
cmp
stc
cmp
push
cmp
notb
rolb
rolb
adcb
iret
jno
mov
repnz
shll
int
clc
arpl
sbb
lds
jne
jnp
jne
test
shl
xlat
mov
pop
cmpsb
imulb
push
xor
rcrb
test
aad
jge
inc
lea
add
cld
iret
rorb
sbb
xchg
xlat
mov
or
mov
pop
dec
jnp
push
gs
dec
out
clc
loop
adc
rcrb
test
popf
add
repnz
sbb
inc
cld
movsl
pop
fcmovnbe
stos
sbb
xor
add
inc
cmpsb
xchg
and
mov
pop
inc
adc
mov
push
das
mov
jb
xchg
mov
fwait
and
dec
test
cmp
xor
in
mov
mov
hlt
jbe
adcl
add
cmpsl
inc
in
sub
cmp
mov
movl
pop
movsb
or
lcall
sub
aaa
sbbl
mull
adc
lea
ret
mov
cwtl
lret
mov
ret
out
int
shlb
dec
mov
and
movl
mov
dec
out
imul
ret
jb
mov
fstl
pop
inc
dec
mov
add
hlt
scas
push
pushf
into
sub
jmp
insl
xor
ljmp
push
sahf
insl
add
stos
ror
add
inc
and
pop
sub
pusha
mov
add
dec
inc
inc
cld
xchg
scas
inc
nop
jb
adc
fisubrl
xchg
fsubl
mov
adc
cltd
arpl
int
xchg
jle
fmull
push
lods
mov
clc
jp
add
mov
add
lahf
dec
and
xor
shlb
or
xchg
xor
push
and
repnz
push
mov
mov
pusha
js,pt
and
shlb
out
ds
sarb
aaa
imul
popf
pop
push
subl
xchg
arpl
mov
in
lods
outsb
pop
out
push
mov
lods
fs
mov
incb
mov
mov
xlat
fs
shrb
and
ret
cmp
stc
arpl
xlat
test
push
jb
add
insb
pop
sub
and
outsb
cmpsl
outsb
add
jecxz
mov
dec
jno
jno
fnstsw
mov
out
pop
lds
push
push
notl
rcrb
je
push
cmp
sbb
mov
cmpsl
arpl
sub
lds
dec
ficomps
or
shr
mov
mov
in
jne
addb
sbb
loop
and
cmp
jg
and
loop
inc
or
pop
xlat
xor
mov
jnp
jl
adc
pusha
rcrl
ss
and
popa
ficompl
inc
movsb
adc
dec
xor
fstpt
cmp
sub
add
cmpsb
aam
rcl
jae
loopne
lods
push
or
xor
adc
shlb
adc
and
call
fistl
dec
mov
mov
fldt
sub
xchg
lahf
gs
dec
mov
xchg
int
inc
mov
adc
scas
mov
jmp
dec
jge
or
inc
or
movups
fidivl
add
xchg
stos
xor
sub
jp
xchg
ret
shr
xchg
lds
mov
adc
inc
push
sahf
andb
xor
sbb
stos
popf
mov
out
jnp
cwtl
mov
insl
and
jnp
dec
sarb
sub
sbb
dec
int3
shl
movsb
insb
xchg
pop
fisubl
adc
cmp
scas
adc
rolb
adc
mov
mov
adc
enter
xchg
insl
orl
cmpsb
mov
or
fnstenv
pop
jp
add
sti
jg
cmp
stc
into
test
or
sbb
push
mov
subl
adc
daa
dec
push
lods
add
cmp
lea
loopne
sub
mov
pushf
mov
sbb
int3
test
mov
xchg
jae
push
push
sbb
and
sahf
leave
dec
iret
cmp
fsubl
mov
in
push
mov
mov
cmp
push
jge
pushf
cmp
mov
loop
divb
sbb
mov
andl
cmc
pop
cs
lret
popa
cmp
mov
fdivrs
stc
push
pop
fbstp
int
mov
int3
daa
insl
pushf
jne
or
pop
fmuls
mov
jo
out
mov
test
mov
mov
arpl
scas
add
sub
fsubl
pop
sub
add
imul
mov
xchg
jp
inc
sti
in
and
jne
test
pop
lahf
lock
sub
fidivl
je
and
cltd
stc
and
push
aad
cltd
push
sbb
adc
mov
mov
jae
fcmovne
mov
ds
jge
ret
jo
add
stos
xchg
loope
movsb
mov
decb
and
mov
int
icebp
stos
and
xlat
mov
add
jns
cmp
sarl
incl
mov
jb
pop
xchg
xchg
rcrl
xchg
mov
pop
cmp
das
mov
jbe
movsl
pop
mov
xchg
ljmp
in
sbb
scas
pop
test
xor
aam
add
jne
loope
dec
or
jo
adc
pop
add
mov
adc
adc
mov
sub
jns
mov
push
jb
test
push
pop
mov
hlt
pop
mov
out
adcl
pusha
rorb
mov
ja
cmc
mov
push
jecxz
jbe
sub
mov
sub
ss
cmp
mov
mov
sub
jge
dec
adc
test
into
pop
pop
cmpsl
ffree
rorl
mov
iret
inc
mov
pop
sub
lock
arpl
mov
or
pusha
inc
das
xor
mov
imul
fwait
xor
lds
jnp
mov
and
sahf
pop
sub
push
sbb
add
jo,pn
jne
mov
stos
lcall
imul
ja
cmp
mov
cmp
roll
neg
push
lcall
mov
dec
mov
sbb
shr
popa
fs
aaa
push
jnp
pop
mov
iret
fs
aas
loop
inc
sarl
cmp
add
adc
jg
mov
in
subl
mov
jne
xlat
sarb
in
mov
out
cmc
mov
cmp
jo
jae
push
add
mov
mov
mov
das
outsl
aad
adc
addb
jle
xor
or
xor
movsl
lcall
sahf
scas
inc
test
or
xchg
mov
aaa
xor
jp
inc
adc
out
fwait
fwait
jbe
inc
jg
lahf
loop
cwtl
or
and
dec
cmp
add
push
pop
cmp
and
mov
push
sbb
adc
aas
fidivrl
insl
push
push
je
jl
sbb
mov
ror
aad
inc
jmp
aad
push
lea
xchg
mov
roll
hlt
mov
sub
mov
pop
gs
int
je
and
xchg
fnsave
mov
jne
int
mov
aaa
punpckhbw
lea
into
or
popa
or
and
lods
notl
into
negb
call
or
and
das
mov
jle
out
and
js
daa
xor
sbb
inc
pusha
mov
xchg
pusha
jmp
pop
mov
inc
mov
and
push
aaa
inc
call
push
sub
cltd
xlat
ss
and
push
xor
mov
jo
cmp
add
pop
dec
add
push
cmpsl
cs
or
xchg
jl
mov
stc
pushf
or
leave
xchg
push
in
cmp
or
outsb
loopne
mov
icebp
cmp
inc
out
mov
or
push
cmc
xchg
nop
mov
sub
int
negb
lods
push
lock
sub
add
inc
dec
xor
imul
inc
mov
mov
roll
dec
lret
and
loop
fadd
or
jle
mov
inc
pop
mov
sbb
adc
insb
loop
nop
add
stos
rcll
fsubl
pop
push
sub
jbe
test
lea
adcb
in
inc
or
cltd
out
loopne
stos
xchg
and
mov
add
test
icebp
xor
fnstsw
or
call
mov
mov
mov
lock
aam
pop
pop
enter
shrb
jns
nop
loope
dec
and
and
jne
pop
loope
pop
adc
fnstenv
add
mov
mov
ret
call
setae
adc
test
in
mov
mov
dec
lret
mov
xor
sti
int
stc
xchg
mov
sbb
adc
mov
leave
ljmp
dec
mov
inc
bound
jmp
xor
xchg
sub
push
jmp
push
fsub
fisttpll
xchg
cli
lock
bound
dec
add
les
cmp
mov
popa
mov
in
inc
jl
pop
mov
or
sahf
decb
ret
or
push
jns
enter
xor
test
pop
xchg
lahf
inc
sahf
rcl
and
mov
scas
and
rcrb
test
mov
frstor
cmp
cld
mov
add
ret
sub
sarl
mov
imul
cmp
ljmp
inc
push
add
xor
mov
cmpsl
mov
mov
fdivrl
clc
xorb
dec
pop
adc
lods
test
inc
aad
mov
pop
pop
mov
mov
and
int
sub
xchg
icebp
cwtl
jbe
and
cli
jp
cltd
push
out
sub
jae
dec
repz
in
push
aas
addr16
decb
shll
xchg
push
and
fstpt
cld
popa
es
add
jae
test
mov
push
rcr
inc
cmp
or
and
cpuid
jmp
inc
sub
stc
je
sbb
push
mov
cltd
or
sahf
test
cmp
mov
cmpsl
cmp
adc
cli
ficompl
or
pusha
lret
je
insb
cmp
int
jnp
inc
aaa
inc
push
inc
sbb
dec
pop
mov
push
insl
push
in
xor
in
mov
push
aas
push
dec
mov
push
leave
sbb
loopne
mov
dec
pop
xor
mov
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
movsb
push
inc
in
addr16
dec
xchg
cmpsb
mov
rcr
insl
mov
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
