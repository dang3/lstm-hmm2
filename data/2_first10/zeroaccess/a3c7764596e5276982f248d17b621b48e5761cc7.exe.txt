push
mov
jmp
xchg
popf
dec
sub
sub
jne
insb
jno
jmp
push
jmp
inc
xor
mov
daa
aaa
mov
dec
ds
and
fidivrs
xor
lds
shlb
and
dec
mov
leave
aas
aaa
movsl
roll
movsl
dec
cmp
mov
movsl
mov
dec
movsl
movsb
mov
inc
dec
rorl
iret
mov
ret
dec
sub
shlb
inc
leave
mov
aas
xor
lds
mov
xor
inc
mov
les
daa
mov
mov
ret
and
mov
push
xor
leave
mov
ds
ss
cmp
lds
daa
and
sub
mov
mov
xor
and
sub
inc
mov
mov
mov
push
xor
mov
enter
mov
mov
dec
shlb
les
xor
xor
mov
and
inc
mov
xor
xor
mov
inc
xor
iret
sub
and
and
daa
mov
test
mov
mov
mov
mov
and
movsl
mov
mov
xor
sub
aaa
leave
mov
sub
dec
leave
mov
ret
fidivrs
and
mov
aas
dec
mov
cmp
dec
dec
les
inc
leave
and
ss
mov
test
xor
mov
ror
mov
dec
shlb
xor
mov
mov
mov
lds
aaa
cmp
test
iret
and
and
dec
xor
mov
movsb
mov
inc
es
dec
movsl
mov
xor
movsb
leave
mov
into
xor
xor
sarb
inc
dec
mov
movsb
rol
mov
mov
aaa
movsb
into
mov
movsl
sub
inc
sarl
int
mov
ficoms
aas
xor
enter
dec
lret
dec
iret
iret
int
and
mov
dec
dec
iret
inc
mov
lret
mov
mov
mov
mov
mov
cmp
iret
rcl
dec
mov
mov
inc
movl
and
ret
leave
xor
aas
test
xor
rorb
inc
mov
cmp
int
and
and
and
les
mov
and
aas
dec
and
cmpsl
xor
shll
ret
shlb
into
inc
int
cmp
mov
enter
into
into
and
cmp
shlb
mov
xor
fidivrs
mov
mov
inc
dec
inc
mov
xor
mov
and
cmpsl
mov
fisubs
cmpsl
into
dec
into
mov
inc
mov
mov
mov
lret
inc
aas
shlb
lret
ret
aaa
mov
cmp
mov
xor
mov
xor
dec
inc
inc
mov
shlb
mov
es
shlb
xor
inc
mov
in
xor
add
ret
add
push
sub
movl
mov
mov
adc
movl
cmpl
ja
jmp
push
call
mov
mov
mov
mov
mov
movzwl
jmp
in
fiadds
data16
push
pop
and
jmp
mov
dec
mov
mov
inc
movsb
mov
mov
into
mov
mov
les
mov
mov
les
xor
aaa
xor
cmp
cmp
and
dec
mov
aaa
dec
xor
mov
dec
rol
into
test
aas
es
xor
cmpsl
push
mov
mov
xor
and
sarl
xor
shrb
xor
xor
mov
mov
dec
dec
inc
xor
mov
shlb
mov
dec
leave
dec
ss
inc
ss
xor
dec
mov
dec
mov
mov
ss
mov
xor
mov
push
and
lds
and
ss
inc
into
mov
mov
cmpsl
aas
mov
mov
mov
mov
dec
xor
shlb
mov
cmp
mov
and
leave
ret
daa
leave
daa
dec
inc
dec
test
mov
mov
into
mov
mov
xor
iret
leave
dec
es
inc
mov
lret
enter
inc
and
les
inc
lret
mov
mov
inc
aaa
mov
rol
enter
cmpsl
mov
lds
and
int
movsl
xor
ret
mov
dec
cmp
shlb
cmp
lret
test
int
iret
dec
aaa
sarl
les
mov
mov
and
xor
es
lret
rol
roll
test
mov
push
lret
mov
mov
daa
mov
mov
cmp
cmp
int
enter
mov
sub
lds
movsb
dec
movsl
mov
mov
xor
cmpsl
inc
mov
xor
dec
mov
les
mov
cmp
push
xor
cmp
xor
shrl
lds
cmp
push
mov
rorb
push
int
inc
cmpsl
aaa
mov
mov
test
dec
cmp
movsb
and
inc
inc
leave
mov
rol
mov
mov
shlb
dec
xor
mov
lret
xor
rcl
iret
sub
shll
dec
mov
cmp
iret
sarl
leave
mov
les
mov
es
aaa
dec
xor
mov
and
xor
and
cmp
xor
mov
cmp
into
xor
shlb
aaa
mov
lds
dec
xor
mov
cmp
inc
mov
mov
xor
push
lds
daa
mov
inc
mov
mov
xor
sub
cmp
and
and
cmp
inc
mov
ret
xor
into
aaa
xor
movsl
mov
xor
cmpsl
daa
iret
mov
lds
dec
mov
les
aas
mov
inc
inc
mov
and
lret
lret
mov
mov
and
sarb
leave
mov
mov
add
add
movzwl
xor
orl
inc
andl
or
sub
addl
mov
mov
not
mov
andl
mov
dec
mov
addl
mov
andl
mov
adcl
mov
movzwl
notl
movzwl
sbbl
or
mov
orl
movzwl
addl
cltd
subl
idiv
decl
mov
and
adcl
imul
cmp
je
movb
cmpl
jbe
sbb
jmp
pushl
call
movb
movzbl
mov
imul
and
mov
adcl
imul
and
adc
sub
mov
sub
jmp
nop
sub
outsl
test
or
add
lock
jmp
mov
cmp
cmp
lds
mov
mov
inc
les
cmp
mov
int
dec
inc
movsl
inc
inc
shlb
inc
mov
shlb
inc
mov
cmpsl
mov
mov
dec
mov
inc
cmp
mov
ds
mov
and
xor
aaa
xor
mov
xor
shlb
inc
inc
cmp
inc
xor
sarb
xor
dec
enter
aaa
dec
aas
inc
lds
and
dec
push
test
cmpsl
inc
inc
shlb
iret
mov
mov
enter
inc
mov
sub
fidivrs
int
rorb
test
cmp
mov
inc
mov
dec
rol
aas
and
xor
mov
dec
movsl
leave
movsb
mov
mov
mov
fidivs
xor
mov
xor
and
inc
and
cmp
and
dec
fimuls
sub
mov
fidivrs
mov
daa
inc
xor
inc
inc
push
mov
faddp
mov
dec
xor
mov
mov
daa
dec
mov
dec
int
mov
into
xor
dec
enter
and
mov
shll
into
mov
movsl
into
xor
movsl
movsb
dec
es
mov
xor
mov
inc
int
and
shll
push
dec
dec
int
and
cmp
cmp
movsl
push
cmp
mov
leave
mov
and
inc
leave
mov
and
cmpsl
dec
inc
movsb
xor
mov
and
lds
leave
xor
cmp
movsb
leave
shrl
mov
aaa
daa
mov
daa
inc
mov
xor
mov
cmpsl
xor
mov
mov
inc
push
shll
mov
and
mov
and
and
inc
dec
movsb
dec
and
sub
mov
enter
and
int
enter
int
dec
les
inc
test
cmp
cmpsl
lds
mov
mov
es
mov
les
ss
inc
mov
ret
movsb
xor
leave
inc
mov
push
lret
int
mov
dec
sub
xor
mov
cmp
mov
test
mov
leave
mov
enter
mov
cmp
mov
and
mov
inc
les
cmp
inc
inc
movsb
aaa
and
mov
and
mov
mov
daa
mov
daa
movsb
xor
xor
xor
xor
movsb
mov
sub
inc
mov
mov
dec
ds
and
movsl
int
xor
lret
sarb
iret
daa
lds
iret
ds
ss
cmp
test
fimuls
dec
dec
inc
mov
mov
mov
mov
fimuls
ret
leave
movsb
mov
xor
movsb
inc
mov
daa
and
mov
mov
mov
ret
movsb
mov
lds
les
inc
out
inc
cmpl
jl
neg
addl
jmp
pushl
pushl
push
push
push
call
movb
movb
movb
mov
movzbl
and
mov
cltd
orl
idiv
jmp
leave
push
mov
in
sub
push
out
cmp
jmp
jmp
push
iret
into
and
dec
mov
rcr
movsb
daa
mov
inc
xor
xor
and
fidivrs
test
fisubs
fmulp
sub
ror
inc
mov
enter
sub
into
ss
mov
ret
cmpsl
fisubs
dec
xor
movsl
mov
xor
enter
mov
inc
movsl
les
mov
lds
mov
test
mov
sub
ret
mov
cmpsl
leave
push
lret
xor
and
aas
es
aas
and
xor
mov
int
cmp
inc
and
aaa
xor
inc
dec
and
aas
into
mov
push
xor
cmp
cmp
and
and
shll
ret
mov
iret
sub
mov
xor
mov
mov
les
mov
mov
and
movsb
movsb
movsb
es
ret
daa
dec
leave
inc
iret
iret
and
cmp
mov
inc
sub
shlb
xor
mov
mov
sub
and
fisubs
mov
cmp
test
mov
cmp
lds
movsb
xor
rol
leave
mov
xor
les
aaa
sub
iret
enter
inc
mov
mov
mov
daa
cmp
movsl
mov
inc
inc
cmp
dec
mov
mov
and
rorb
mov
and
into
and
mov
es
xor
ror
shlb
xor
dec
mov
inc
mov
daa
inc
mov
mov
sub
sub
mov
inc
lret
and
into
enter
lret
mov
movsl
dec
into
and
sub
mov
mov
dec
cmp
ret
mov
into
and
cmp
rorb
rolb
inc
ds
xor
es
lret
movsb
into
aaa
mov
push
inc
mov
mov
inc
lret
ss
inc
xor
ds
and
inc
test
lret
shlb
mov
mov
rorb
leave
mov
les
mov
dec
movl
into
mov
xor
lret
cmp
lds
xor
sub
inc
test
mov
dec
lret
ss
and
fimuls
mov
movsb
xor
ret
xor
inc
mov
mov
into
xor
shlb
inc
dec
inc
iret
sub
cmpsl
push
mov
inc
inc
cmpsl
mov
inc
cmp
and
dec
and
mov
fisubrs
movsb
dec
mov
inc
inc
movsl
and
lds
aaa
shlb
test
xor
daa
dec
into
shlb
into
aas
inc
ss
xor
mov
lret
mov
leave
movsl
rol
mov
aas
xor
xor
mov
rorb
movsl
mov
mov
inc
mov
int
vmovmskps
aas
daa
mov
ret
and
mov
leave
dec
mov
mov
mov
sub
andl
mov
addl
sub
mov
andl
xor
movl
mov
movl
cmp
movl
je
movl
cmpl
jg
jmp
push
push
push
call
movl
movl
movl
movl
movl
mov
mov
sbbl
mov
subl
jmp
xchg
xchg
fstl
add
mov
shr
jmp
push
dec
and
inc
test
leave
and
and
int
cmp
and
cmp
rcl
enter
mov
xor
inc
xor
ret
and
xor
xor
enter
daa
xor
xor
aas
and
mov
inc
mov
shlb
dec
sarb
cmp
mov
es
movsb
dec
test
daa
les
mov
mov
mov
movsl
mov
aaa
lret
mov
mov
dec
mov
xor
mov
xor
int
xor
aas
mov
lret
sub
xor
mov
mov
mov
aaa
and
mov
iret
mov
movsb
movsl
fiadds
daa
into
mov
lret
movsb
mov
dec
cmp
cmp
dec
iret
and
xor
test
and
and
into
int
push
ss
mov
inc
test
movsl
sarb
inc
xor
mov
cmp
ret
leave
and
cmpsl
enter
aaa
lds
xor
and
cmp
mov
dec
push
mov
ds
movsb
mov
push
and
iret
cmp
inc
mov
daa
inc
push
enter
dec
dec
test
iret
movsl
enter
les
inc
es
mov
xor
and
mov
dec
xor
aas
mov
int
ret
xor
and
inc
and
mov
movsb
enter
xor
mov
aaa
mov
shlb
push
dec
ds
mov
xor
test
cmp
and
mov
mov
inc
xor
cmpsl
movsl
lret
sarb
xor
and
inc
mov
leave
aas
mov
cmpsl
cmpsl
vpsllvq
movsl
movsb
aaa
daa
mov
ds
daa
es
mov
daa
and
mov
mov
shll
cmp
daa
and
cmp
xor
cmp
dec
ds
movsb
lds
cmp
and
mov
iret
mov
and
test
mov
mov
mov
xor
mov
sub
sarb
inc
and
mov
cmp
and
test
enter
dec
mov
dec
push
cmp
xor
ret
movsb
mov
shll
mov
lds
es
int
push
fiadds
mov
mov
mov
xor
and
dec
mov
mov
enter
xor
into
daa
mov
inc
dec
mov
test
les
inc
ds
shll
leave
ret
faddp
inc
movsb
inc
shlb
rorb
xor
and
movsb
xor
enter
inc
and
test
sarl
movsb
and
ret
mov
leave
iret
cmpsl
dec
mov
cmpsl
and
mov
mov
or
or
sbbl
sub
mov
jmp
fldcw
jl
lret
insb
stc
loope
pop
pop
sbb
jmp
jmp
dec
lds
inc
xor
es
mov
dec
es
xor
mov
leave
dec
and
dec
inc
inc
rol
inc
inc
movsl
push
mov
mov
inc
mov
lret
cmp
ds
xor
inc
xor
leave
dec
enter
shll
les
ds
inc
and
inc
inc
and
movsl
dec
lret
daa
lds
cmp
lret
cmpsl
inc
mov
mov
mov
dec
cmp
mov
push
sub
mov
xor
mov
leave
movsl
mov
and
ss
mov
rol
int
mov
xor
dec
dec
and
mov
mov
dec
mov
mov
mov
mov
cmpsl
push
mov
mov
dec
and
inc
mov
into
lret
and
lret
mov
dec
rolb
movsl
inc
iret
cmp
and
mov
mov
and
mov
and
cmp
and
inc
mov
dec
mov
dec
dec
inc
and
mov
push
lret
into
xor
and
mov
aas
les
ret
and
and
aaa
xor
xor
xor
dec
inc
les
rorb
mov
xor
and
dec
and
ss
inc
cmp
lret
xor
les
lret
push
iret
ds
mov
leave
test
int
cmp
daa
fmulp
movsb
push
int
inc
and
inc
xor
mov
xor
and
xor
inc
cmpsl
ror
shlb
and
enter
mov
mov
mov
es
lds
mov
iret
and
ror
fmulp
aas
mov
dec
int
mov
and
cmp
mov
inc
ss
int
into
dec
and
xor
mov
mov
mov
mov
ss
int
mov
mov
mov
xor
mov
mov
dec
dec
xor
mov
inc
test
and
mov
leave
cmp
rorb
dec
lds
dec
ret
movsb
daa
mov
mov
test
cmpsl
rolb
mov
mov
cmp
xor
and
enter
and
inc
mov
dec
inc
enter
aaa
and
inc
cmpsl
cmpsl
inc
daa
mov
iret
mov
dec
fidivrs
cmp
aas
mov
mov
mov
xor
inc
les
mov
mov
mov
aaa
ds
int
and
mov
and
mov
test
push
mov
leave
mov
mov
shlb
push
mov
into
xor
xor
xor
aas
and
cmpsl
mov
lds
cmp
mov
ds
mov
cmp
inc
mov
movsl
inc
cmp
cmp
and
daa
mov
mov
es
lret
xor
leave
fmulp
lret
and
dec
and
mov
aas
mov
cmp
mov
and
mov
leave
dec
mov
sbb
sbb
mov
adcl
add
adc
subl
or
or
adcl
xor
addl
xor
movl
mov
movl
mov
mov
movl
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
jmp
mov
repnz
arpl
xchg
pop
add
push
jmp
and
xor
mov
ds
aas
mov
mov
mov
movsl
sarb
ret
mov
mov
cmp
sub
dec
movsb
dec
inc
mov
aas
leave
ss
into
dec
inc
aas
sarb
int
dec
movsb
push
fidivs
inc
shlb
dec
and
dec
int
inc
mov
mov
mov
into
mov
mov
cmpsl
dec
rol
fidivrs
roll
xor
ror
mov
inc
xor
sub
and
aas
and
mov
and
mov
dec
movsl
inc
inc
test
xor
aas
mov
ret
and
mov
mov
mov
sarb
inc
inc
xor
and
mov
int
mov
mov
and
dec
inc
push
shlb
mov
push
xor
xor
rorb
movsb
and
mov
and
mov
movsl
xor
mov
inc
movsb
xor
and
cmp
les
daa
dec
cmp
mov
cmp
xor
xor
inc
xor
dec
sub
shlb
inc
sarl
rolb
cmp
shll
shll
xor
cmpsl
dec
mov
dec
mov
shlb
es
ror
aas
mov
mov
cmpsl
ss
inc
cmp
rol
inc
mov
ss
mov
movsb
mov
sarb
mov
and
aaa
and
daa
int
shll
aas
mov
xor
sarb
mov
movsb
daa
mov
mov
mov
into
and
iret
mov
inc
mov
daa
rol
and
mov
mov
int
dec
dec
dec
enter
mov
dec
cmp
and
fisubs
lret
inc
ret
cmp
xor
push
mov
dec
and
mov
daa
lret
xor
mov
dec
les
daa
fidivs
mov
mov
and
inc
sub
mov
int
mov
cmpsl
and
sub
lds
and
mov
xor
iret
cmp
mov
leave
mov
mov
and
mov
mov
mov
movsl
ds
iret
cmp
test
xor
ret
xor
mov
lds
inc
lret
faddp
xor
inc
mov
sarb
mov
cmp
int
mov
inc
shlb
mov
mov
aaa
dec
mov
dec
mov
cmp
cmp
mov
and
sub
mov
lds
xor
iret
mov
and
mov
aas
mov
mov
mov
test
movsb
lds
inc
es
xor
movsb
daa
rclb
inc
mov
cmp
test
rol
sub
mov
dec
aaa
mov
mov
mov
inc
test
mov
cmp
mov
lds
movsl
into
xor
dec
shr
mov
mov
xor
xor
or
mov
movl
movl
movl
mov
add
mov
shl
xor
div
xor
mov
sub
div
mov
mov
movl
movl
movl
mov
jmp
enter
lods
push
test
pop
mov
jae
cmpsl
loop
inc
push
jmp
jmp
aas
mov
movsl
inc
inc
and
mov
daa
shlb
aaa
cmp
and
xor
inc
and
cmpsl
sarb
xor
inc
daa
and
lret
dec
mov
mov
rol
xor
dec
mov
and
ss
into
movsl
rorb
dec
mov
mov
int
mov
dec
sub
mov
mov
xor
ds
sarl
mov
cmp
les
ss
dec
inc
and
test
inc
inc
mov
ret
aas
xor
lret
dec
mov
and
dec
xor
xor
fidivrs
lds
mov
fidivs
mov
xor
into
inc
and
test
xor
inc
xor
xor
inc
xor
enter
and
dec
enter
cmp
mov
xor
cmp
movl
rolb
and
les
roll
inc
cmp
cmpsl
dec
dec
sarl
mov
and
dec
shll
movsl
leave
mov
inc
mov
leave
mov
cmpsl
dec
aas
enter
inc
mov
dec
mov
iret
and
test
iret
sarb
dec
and
shlb
into
and
enter
cmp
xor
movsl
into
and
and
and
movsl
aaa
mov
daa
inc
aas
inc
mov
mov
mov
mov
es
mov
mov
lret
sub
xor
mov
sub
aaa
and
cmp
movsb
aaa
mov
fidivrs
inc
leave
mov
daa
cmp
les
xor
and
xor
es
mov
xor
mov
fidivs
cmpsl
cmp
aaa
mov
and
mov
movsl
and
inc
and
cmp
xor
xor
ret
movsb
inc
mov
cmp
cmp
movsb
mov
cmpsl
daa
mov
movsl
push
mov
mov
and
mov
xor
mov
fisubs
lret
movsb
inc
lret
fisubs
mov
inc
mov
iret
and
mov
les
mov
iret
mov
aas
dec
xor
dec
aaa
mov
mov
and
mov
dec
mov
mov
push
aas
mov
cmp
mov
lret
dec
lds
and
mov
iret
lds
inc
mov
mov
movsl
push
daa
enter
leave
ret
dec
mov
enter
and
mov
ss
xor
int
mov
aas
xor
and
movsl
ret
xor
mov
and
test
cmpsl
iret
aas
lds
movsb
inc
mov
iret
inc
mov
mov
ret
ds
enter
shlb
push
inc
mov
cmpsl
and
and
mov
iret
mov
sub
ret
aaa
dec
movsl
cmp
mov
movsb
dec
mov
shlb
cmp
mov
inc
int
xor
movsb
mov
mov
mov
sub
and
add
mov
jmp
dec
sarl
movsb
and
jle
negl
jmp
jmp
inc
aas
mov
ds
inc
inc
mov
mov
movl
inc
mov
mov
mov
lret
mov
mov
ror
cmp
es
sub
mov
les
mov
cmpsl
inc
mov
lds
int
mov
mov
les
mov
aas
ss
inc
cmpsl
faddp
iret
int
cmp
movsb
aaa
rolb
mov
dec
rol
dec
and
sub
xor
leave
iret
shlb
xor
push
and
inc
dec
mov
cmpsl
inc
ret
cmp
inc
and
aaa
fidivs
xor
ss
mov
mov
mov
movsl
inc
sarl
aas
mov
inc
inc
into
shlb
mov
cmp
leave
sub
xor
lds
mov
cmpsl
mov
mov
mov
inc
movsl
dec
mov
mov
iret
and
ret
mov
rolb
mov
mov
sarb
mov
mov
and
cmpsl
inc
mov
and
iret
rol
mov
movsl
mov
xor
les
inc
shlb
xor
dec
inc
mov
sub
cmp
test
movsl
inc
xor
test
lret
and
dec
lret
mov
cmp
dec
xor
aaa
daa
cmp
mov
int
lret
and
cmp
mov
xor
and
lret
cmp
cmp
and
mov
into
inc
mov
mov
into
lret
xor
xor
mov
xor
and
push
sarb
cmpsl
fidivs
cmpsl
leave
inc
into
inc
and
and
and
sub
mov
ds
int
mov
int
into
rol
and
int
mov
mov
sarl
ss
cmp
aaa
inc
mov
inc
and
int
inc
mov
push
aas
mov
dec
dec
test
dec
and
movsl
mov
inc
aas
mov
inc
es
mov
iret
inc
xor
mov
cmpsl
movl
mov
inc
cmpsl
push
mov
dec
faddp
inc
xor
mov
dec
xor
and
cmp
push
mov
mov
shlb
mov
test
inc
and
aas
inc
int
cmp
dec
xor
test
xor
mov
xor
daa
xor
cmp
enter
inc
cmp
and
dec
xor
mov
enter
xor
mov
mov
and
and
movsl
cmp
fidivs
mov
dec
mov
inc
cmpsl
mov
mov
cmpsl
movsb
ds
cmp
and
aas
dec
shlb
cmpsl
int
lret
mov
and
rorb
mov
dec
mov
and
xor
and
sub
inc
and
enter
movsb
dec
daa
xor
lds
and
inc
cmpsl
leave
and
mov
cmp
inc
and
rcr
les
xor
testb
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
jmp
iret
shll
xchg
fdivs
negl
std
hlt
push
fsubr
jmp
mov
lret
mov
and
dec
xor
and
into
dec
lret
cmp
mov
mov
les
mov
and
rol
mov
cmp
and
mov
and
and
xor
mov
dec
mov
mov
cmpsl
dec
mov
cmp
inc
mov
mov
dec
dec
rol
shlb
mov
and
cmp
fidivrs
mov
daa
xor
dec
les
es
fimuls
shlb
dec
daa
aaa
mov
dec
mov
aas
inc
iret
dec
xor
xor
mov
inc
into
dec
lret
inc
enter
inc
dec
aas
push
movsb
mov
mov
les
sub
and
ds
dec
mov
dec
dec
and
movsl
mov
mov
movsl
xor
mov
sub
lds
dec
sarl
shlb
mov
mov
movl
ds
and
mov
and
mov
mov
mov
mov
ds
cmp
mov
mov
and
lds
mov
movsl
es
and
xor
push
cmpsl
ret
fisubs
enter
cmpsl
dec
dec
cmpsl
es
mov
inc
into
inc
ss
dec
sarb
enter
sub
lds
test
and
lret
inc
dec
test
mov
push
inc
mov
es
mov
dec
cmp
cmp
cmpsl
dec
mov
mov
mov
mov
fidivs
shll
movsb
cmp
xor
cmp
aaa
lret
aaa
leave
ror
into
mov
iret
es
and
into
mov
shll
mov
xor
lds
shll
mov
mov
xor
int
aaa
daa
mov
cmpsl
enter
sub
ret
mov
mov
dec
and
aas
dec
xor
mov
mov
and
mov
and
mov
cmp
enter
mov
aaa
and
sarl
mov
inc
sarb
dec
cmp
dec
es
xor
les
movsb
dec
mov
inc
mov
mov
mov
aas
and
inc
dec
mov
les
mov
inc
cmp
shlb
mov
rol
lret
mov
and
dec
mov
xor
sub
dec
mov
dec
inc
into
iret
mov
mov
mov
aas
movsb
inc
mov
ss
mov
leave
fmulp
iret
leave
xor
cmpsl
dec
mov
mov
inc
mov
and
xor
mov
and
xor
xor
xor
mov
cmp
mov
and
push
movsl
sub
test
fidivs
ret
mov
test
and
mov
mov
into
xor
dec
mov
dec
dec
dec
lds
mov
xor
inc
int
and
ds
movsb
xor
inc
push
test
xor
cmp
dec
push
mov
mov
and
fidivs
rolb
mov
daa
push
mov
fimuls
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
decl
shrd
shr
ret
cmpl
jle
jmp
pushl
pushl
call
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
jmp
inc
cmpsl
cmpsl
stos
lret
mov
push
sbb
imull
push
jmp
inc
and
mov
and
les
and
movsl
fidivs
fisubs
fidivrs
mov
inc
leave
aas
cmp
lret
xor
xor
dec
mov
cmp
ret
into
dec
xor
xor
into
cmp
into
inc
lret
ss
ret
push
and
leave
and
into
mov
cmp
dec
lds
and
dec
iret
into
xor
dec
dec
cmp
daa
aas
int
push
mov
mov
and
inc
xor
mov
sarb
xor
daa
mov
and
mov
and
cmp
mov
movsl
cmp
xor
and
and
dec
cmp
cmp
es
aaa
mov
es
dec
mov
les
xor
mov
xor
aas
les
sarl
and
cmp
inc
xor
dec
sarb
dec
inc
xor
mov
mov
dec
leave
into
iret
mov
mov
sub
mov
mov
cmp
inc
inc
iret
iret
into
inc
sarb
movsb
mov
fisubrs
and
xor
cmp
mov
leave
and
aaa
mov
mov
lds
and
mov
push
inc
ds
lret
aaa
mov
mov
mov
iret
push
mov
mov
xor
fidivs
xor
mov
and
mov
xor
cmp
mov
dec
into
inc
and
les
inc
les
dec
leave
inc
mov
mov
xor
mov
inc
xor
mov
int
inc
mov
mov
lds
mov
inc
xor
lret
iret
sub
inc
mov
cmp
dec
dec
test
dec
into
xor
mov
mov
mov
dec
dec
mov
cmpsl
inc
daa
xor
shll
cmp
aas
aas
inc
leave
test
mov
mov
mov
mov
aas
mov
shlb
dec
and
inc
inc
cmp
and
sub
shlb
cmp
mov
es
xor
mov
inc
fmulp
lds
push
push
mov
inc
test
cmp
sub
aas
movsl
sub
inc
mov
and
enter
ror
dec
inc
inc
movsb
movsb
aaa
mov
ss
into
lret
and
push
xor
mov
es
push
mov
xor
mov
and
aaa
push
xor
and
sub
xor
lret
mov
enter
mov
movsl
and
mov
mov
xor
shll
enter
fisubs
mov
inc
inc
and
enter
and
push
fmulp
lret
and
mov
into
sarl
mov
cmp
mov
inc
cmp
mov
inc
mov
leave
aaa
mov
mov
les
mov
push
roll
dec
sub
mov
mov
dec
aaa
xor
enter
ds
and
mov
shll
dec
aas
aas
iret
cmpsl
daa
les
cmp
ret
leave
push
aaa
inc
and
cmp
mov
mov
mov
addl
sub
mov
push
mov
mov
movl
sbb
mov
adc
jmp
ja
out
hlt
js
jl
in
fsubl
shll
jmp
jmp
mov
dec
cmp
dec
cmp
mov
aaa
xor
movsl
mov
dec
mov
xor
and
into
es
int
lds
dec
mov
shlb
ss
les
fidivrs
leave
daa
mov
and
mov
lds
cmp
sub
mov
and
movsl
mov
inc
xor
ret
mov
leave
and
cmp
dec
mov
cmpsl
and
lret
dec
mov
lds
mov
dec
dec
aas
aaa
cmp
movsl
dec
int
mov
enter
xor
cmpsl
mov
inc
ret
inc
xor
fidivs
mov
and
test
mov
mov
movsl
shll
xor
and
ss
aaa
mov
iret
and
lds
cmp
leave
daa
xor
and
ret
ss
mov
push
inc
push
and
xor
inc
aas
inc
dec
xor
dec
push
and
movsb
dec
dec
mov
dec
xor
xor
and
fidivs
mov
and
xor
dec
mov
int
and
and
ds
mov
leave
and
and
xor
dec
es
cmp
ret
lret
inc
cmp
sub
mov
lds
int
rcr
xor
rolb
into
mov
cmpsl
int
movsb
mov
dec
inc
mov
mov
and
leave
sub
mov
cmp
fidivs
mov
cmpsl
and
inc
and
iret
dec
mov
dec
inc
dec
cmp
and
cmp
mov
mov
mov
into
cmpsl
lret
and
inc
enter
lret
mov
inc
dec
inc
inc
lret
and
xor
mov
and
mov
mov
ret
mov
lds
mov
lret
xor
mov
ret
test
mov
dec
test
into
mov
and
mov
cmp
and
movsb
dec
daa
and
and
fisubs
inc
mov
shll
aas
push
mov
mov
and
inc
cmp
inc
dec
cmp
mov
mov
and
cmp
into
movsl
mov
inc
mov
dec
push
daa
mov
mov
sarl
mov
mov
inc
xor
xor
mov
int
ss
enter
xor
lret
mov
mov
shlb
dec
push
daa
daa
iret
sub
and
and
les
mov
and
dec
dec
push
mov
mov
enter
mov
mov
and
mov
shlb
dec
ret
mov
dec
movsl
cmp
aaa
mov
and
mov
xor
les
mov
mov
mov
and
dec
mov
into
ss
inc
cmp
xor
push
and
xor
ss
cmp
and
ret
dec
rcl
shlb
mov
cmp
cmp
push
dec
and
mov
mov
iret
mov
cmp
mov
rorl
les
mov
cmpsl
cmpsl
enter
mov
cmp
ds
movsb
xor
mov
xor
mov
and
push
cltd
or
orl
jmp
enter
dec
stos
test
adc
xchg
pop
enter
dec
pop
jmp
jmp
xor
into
inc
mov
mov
and
cmpsl
dec
into
mov
lds
ds
leave
cmp
movsl
xor
inc
mov
and
inc
dec
int
dec
ret
iret
dec
mov
mov
mov
mov
inc
cmp
push
aas
dec
mov
xor
and
and
xor
ror
test
xor
rolb
dec
into
xor
xor
enter
lret
inc
lret
cmp
mov
mov
into
and
mov
inc
xor
sarb
rol
shlb
mov
inc
ret
lret
lds
movsl
mov
inc
dec
aas
mov
enter
int
push
leave
mov
rcr
fiadds
push
aaa
inc
xor
and
lret
inc
daa
mov
enter
fimuls
mov
xor
dec
aaa
sub
mov
mov
lret
mov
mov
mov
lds
lret
ss
aas
iret
mov
xor
cmpsl
xor
lret
aas
xor
xor
push
cmpsl
cmp
mov
dec
and
enter
mov
daa
mov
dec
and
mov
int
aaa
into
xor
cmp
mov
mov
mov
mov
xor
rolb
into
rolb
and
lret
dec
mov
iret
test
ss
cmp
leave
mov
dec
xor
xor
and
dec
inc
shlb
aaa
mov
movsl
xor
dec
push
inc
and
lds
ds
test
dec
rorl
mov
xor
es
dec
inc
dec
cmp
inc
es
dec
mov
dec
inc
cmp
rorb
mov
mov
leave
ret
movsb
leave
push
int
leave
xor
daa
cmp
ss
xor
ret
mov
aas
mov
aas
cmp
mov
sub
mov
cmp
int
mov
aaa
inc
and
ss
mov
and
mov
daa
mov
and
test
fisubs
mov
xor
mov
ror
into
test
and
mov
shlb
lret
xor
xor
leave
xor
cmpsl
push
mov
cmpsl
les
dec
ss
test
inc
dec
inc
cmpsl
sarb
dec
mov
aas
mov
xor
and
mov
cmpsl
inc
dec
and
and
test
cmp
mov
mov
mov
aas
shlb
mov
aas
movsb
dec
inc
lds
iret
cmp
dec
mov
mov
mov
fimuls
sub
ret
dec
mov
push
daa
mov
ds
into
shlb
sub
and
daa
dec
mov
mov
and
movsl
xor
aas
dec
mov
mov
mov
mov
aaa
ret
xor
mov
mov
int
cmp
mov
into
mov
aaa
shll
shll
ds
inc
xor
movsl
cmpsl
mov
mov
mov
and
ret
les
es
aas
into
mov
and
mov
xor
cmp
and
dec
dec
lds
mov
mov
mov
mov
mov
ss
dec
mov
and
mov
mov
mov
sub
not
jmp
shll
mov
mov
es
cs
add
mov
cld
push
jmp
mov
inc
mov
dec
xor
mov
dec
movsb
mov
mov
mov
cmpsl
mov
mov
mov
cmp
cmp
enter
es
dec
daa
mov
mov
mov
into
leave
inc
mov
inc
and
les
leave
inc
movsb
mov
xor
movsl
inc
mov
cmpsl
fmulp
push
mov
xor
inc
and
inc
mov
and
mov
enter
mov
mov
sarb
mov
and
and
push
dec
mov
mov
mov
mov
rol
inc
mov
sub
rorb
inc
xor
lds
aaa
lds
shlb
inc
rolb
inc
cmp
fmulp
lds
and
into
mov
movsb
inc
inc
inc
and
mov
mov
mov
inc
leave
dec
int
movsb
movl
enter
and
sarl
sarl
and
dec
and
fidivrs
and
enter
inc
inc
ret
xor
and
mov
sub
mov
ret
mov
mov
dec
movsl
inc
mov
ss
xor
shlb
movsl
enter
cmp
and
ds
and
mov
mov
into
cmp
mov
enter
lret
cmp
mov
xor
push
movsb
mov
dec
mov
iret
les
cmpsl
xor
daa
mov
mov
xor
inc
iret
dec
mov
fisubs
mov
mov
mov
and
iret
mov
movsb
mov
mov
ret
mov
iret
lret
sarl
mov
lret
cmp
inc
ds
mov
lret
and
aaa
inc
aaa
dec
cmp
mov
cmp
xor
sarl
dec
xor
mov
iret
aas
leave
rol
inc
dec
xor
mov
cmp
lds
cmp
cmp
leave
xor
mov
xor
movl
mov
into
and
cmp
fimuls
mov
fimuls
mov
cmpsl
daa
and
cmp
sub
dec
fisubs
cmp
dec
cmp
xor
xor
mov
dec
xor
and
and
cmp
push
inc
xor
cmp
shll
shrb
mov
xor
enter
xor
es
ret
mov
dec
ds
dec
aas
movsl
inc
dec
xor
xor
cmpsl
mov
xor
and
inc
and
mov
xor
mov
int
int
mov
cmp
fidivrs
dec
ror
lds
inc
sarl
and
xor
cmp
fiadds
mov
int
and
lret
cmp
fidivrs
inc
cmp
shll
iret
mov
iret
mov
shrl
fiadds
mov
cmp
dec
enter
and
mov
mov
dec
rol
cmp
xor
and
dec
into
inc
mov
into
mov
lret
iret
mov
mov
sbb
mov
orl
orl
cmpl
jge
xor
or
sbb
jmp
push
pushl
pushl
pushl
pushl
call
orl
lea
mov
mov
mov
cmpl
jg
jmp
pushl
push
push
pushl
call
mov
jmp
xor
repz
jl
jnp
fcoms
hlt
sbb
jmp
jmp
inc
inc
ss
mov
cmp
test
xor
mov
movsl
inc
dec
inc
xor
es
test
ret
leave
mov
mov
dec
les
movsb
sub
mov
xor
es
xor
mov
push
leave
int
and
cmp
and
mov
xor
mov
xor
mov
and
fidivs
roll
shlb
inc
mov
inc
ss
mov
mov
mov
inc
inc
mov
mov
mov
mov
cmp
movsb
leave
inc
cmp
inc
xor
mov
dec
aaa
ss
lds
mov
mov
sub
fisubs
aas
sub
daa
and
shlb
mov
inc
and
ret
inc
inc
and
les
mov
push
dec
mov
and
enter
mov
mov
mov
mov
shll
leave
les
dec
and
xor
aaa
mov
push
iret
mov
mov
lret
movsl
leave
mov
lret
cmpsl
leave
es
lds
xor
cmp
int
xor
les
inc
sub
movsl
dec
dec
ds
xor
leave
movsl
mov
mov
dec
mov
push
mov
and
dec
xor
cmpsl
mov
iret
movsb
mov
into
push
dec
mov
inc
sub
mov
and
mov
sub
es
cmp
cmp
enter
dec
mov
ret
sarl
mov
dec
mov
mov
mov
cmpsl
mov
mov
test
inc
mov
mov
mov
aas
int
mov
aas
dec
fisubs
dec
inc
movsb
ss
mov
int
test
lds
mov
mov
ds
sub
dec
fidivrs
mov
mov
cmpsl
xor
dec
mov
cmp
and
push
es
enter
mov
mov
xor
inc
mov
mov
inc
into
inc
int
cmp
iret
and
mov
daa
and
int
push
mov
mov
cmp
mov
inc
mov
movsb
mov
movsb
mov
test
mov
dec
cmp
xor
xor
mov
inc
cmp
inc
int
mov
mov
xor
aaa
es
and
mov
les
and
movsb
inc
movsl
mov
push
xor
into
xor
inc
dec
mov
iret
mov
rolb
enter
mov
cmpsl
cmpsl
sarb
ret
inc
iret
mov
mov
mov
test
mov
mov
test
lret
dec
and
mov
dec
daa
and
test
and
inc
dec
xor
aas
enter
lret
and
xor
fimuls
sarb
mov
mov
es
and
mov
xor
inc
dec
movsb
rorb
and
int
iret
and
cmp
dec
dec
fisubs
mov
xor
lret
ret
rorb
movsb
movsl
movsl
int
dec
dec
inc
mov
mov
xor
mov
dec
xor
xor
and
dec
mov
add
mov
mov
mov
mov
shrd
cmpl
jbe
movl
jmp
pushl
pushl
push
call
shr
mov
mov
jmp
lock
inc
mull
add
or
jae
cld
jmp
jmp
enter
inc
inc
ds
and
int
mov
mov
inc
ds
ds
lret
fisubrs
dec
and
shlb
push
iret
iret
mov
into
ds
ret
enter
mov
mov
xor
dec
xor
ds
mov
dec
aaa
dec
mov
mov
rorb
test
int
shlb
dec
es
dec
mov
ret
mov
mov
mov
es
inc
mov
test
mov
mov
movl
dec
and
aaa
lret
and
ret
movsb
movsl
enter
xor
mov
inc
and
xor
and
and
and
lret
aas
ret
xor
mov
and
lret
shlb
mov
cmpsl
mov
lret
sub
dec
dec
aaa
mov
inc
mov
shlb
dec
les
fimuls
enter
dec
and
fidivrs
mov
dec
daa
mov
dec
cmp
mov
mov
daa
lret
inc
inc
mov
and
ret
shll
mov
inc
mov
sarl
xor
and
inc
ret
sub
push
inc
ror
mov
dec
mov
shlb
and
mov
mov
dec
xor
mov
daa
and
shll
xor
dec
aas
dec
mov
xor
movsl
dec
push
mov
xor
ror
es
cmp
cmp
ds
aaa
mov
mov
mov
les
ds
dec
cmp
mov
and
inc
movsb
xor
cmp
mov
les
cmpsl
cmp
cmp
rolb
inc
mov
daa
mov
cmp
xor
and
iret
iret
shrl
xor
and
dec
and
mov
mov
leave
mov
into
sub
inc
enter
sarb
dec
enter
and
xor
dec
xor
dec
xor
ss
aas
mov
and
lds
mov
mov
cmp
inc
dec
movsb
daa
ds
inc
leave
dec
shll
daa
mov
sarb
xor
int
cmp
dec
mov
inc
and
mov
xor
rol
cmp
int
and
xor
dec
dec
mov
mov
inc
test
xor
inc
inc
dec
and
dec
and
mov
dec
mov
sub
xor
cmpsl
inc
dec
xor
ds
dec
mov
inc
shlb
mov
ss
aaa
movsb
and
test
mov
xor
int
xor
mov
inc
xor
into
aas
cmp
movsl
fidivs
cmp
ficoms
iret
inc
mov
cmp
lret
dec
test
int
mov
lds
movsl
dec
sarl
shll
mov
cmpsl
xor
inc
lret
into
mov
mov
mov
cmp
mov
mov
push
dec
inc
and
mov
xor
shrl
xor
and
daa
mov
inc
leave
cmp
ss
iret
and
ret
xor
fimuls
xor
xor
or
adc
mov
movl
cmpl
jl
jmp
push
push
pushl
call
movl
movl
movl
movl
movl
movl
movl
sbb
movl
adcl
movl
mov
and
movl
movl
movl
andl
movl
and
movl
sbbl
movl
orl
movl
adc
movl
movl
cmpl
jle
sbb
jmp
push
pushl
push
push
pushl
pushl
push
call
movl
movl
movl
mov
shl
mov
movl
push
push
xorl
push
push
call
xor
mov
mov
xor
mov
mov
sub
imul
mov
cmpl
jl
jmp
push
call
mov
sub
mov
jmp
cmp
outsl
pop
mov
and
cld
jae
js
vpsubsw
push
jmp
xor
mov
mov
xor
xor
cmp
mov
inc
into
shll
mov
cmp
sub
daa
test
mov
and
inc
lret
lret
and
mov
mov
movsb
enter
daa
mov
ret
leave
and
mov
ds
enter
cmp
mov
push
rol
aas
xor
and
mov
int
shlb
mov
mov
mov
ss
dec
mov
lds
mov
ror
xor
xor
shrl
cmpsl
fisubs
mov
mov
enter
mov
mov
int
dec
xor
inc
and
inc
mov
mov
mov
and
sub
faddp
ret
cmp
mov
xor
mov
mov
aaa
movsl
mov
and
lds
into
mov
and
les
fisubs
cmp
inc
cmp
mov
iret
rorl
mov
and
lds
movsl
rorb
and
enter
mov
ss
mov
mov
mov
dec
xor
inc
inc
cmp
mov
cmp
mov
push
aaa
mov
mov
mov
les
enter
mov
mov
mov
enter
es
and
inc
ds
int
cmp
movsl
into
shlb
mov
fisubs
leave
mov
mov
es
mov
and
mov
dec
mov
cmp
leave
mov
mov
int
aas
mov
movsb
movsb
xor
sub
mov
mov
inc
es
dec
ds
xor
mov
lret
dec
inc
inc
dec
ss
dec
mov
and
inc
mov
push
leave
xor
dec
ficoms
mov
inc
xor
fiadds
mov
push
movsl
lds
mov
and
mov
mov
into
inc
and
sub
dec
fidivrs
inc
dec
leave
fisubrs
sub
mov
aas
test
mov
sub
int
cmp
lds
mov
cmpsl
mov
iret
mov
test
mov
shlb
and
and
cmp
cmp
leave
dec
shll
fisubs
leave
daa
into
cmpsl
mov
mov
cmpsl
inc
dec
mov
inc
push
mov
dec
inc
xor
and
ds
mov
and
ds
dec
dec
fisubs
shlb
xor
cmp
ret
cmp
mov
cmp
mov
ret
mov
lds
mov
and
mov
and
inc
and
mov
leave
daa
cmp
es
lret
ss
mov
aas
dec
mov
and
ds
mov
xor
dec
daa
mov
inc
ds
mov
inc
lret
cmp
mov
and
les
ss
and
xor
and
iret
mov
and
and
dec
test
dec
inc
mov
leave
mov
and
inc
movsl
inc
movsb
iret
movsb
xor
mov
mov
xor
cmpsl
movsb
sub
inc
cmp
inc
and
mov
test
push
mov
ss
mov
iret
inc
rorb
lea
mov
mov
or
and
add
mov
subl
jmp
insl
test
mov
cmpsb
scas
gs
cld
or
pop
push
lret
jmp
jmp
rol
push
int
and
dec
shll
dec
cmpsl
shll
and
dec
mov
mov
mov
inc
enter
mov
aas
inc
push
enter
mov
mov
and
and
cmp
shlb
mov
leave
movsl
ret
sarb
mov
daa
les
mov
dec
inc
mov
xor
lds
inc
test
rolb
and
dec
mov
mov
dec
and
enter
lret
daa
and
movsl
inc
dec
rol
cmp
aaa
and
dec
movsb
xor
mov
cmp
movsb
ret
mov
and
mov
mov
enter
rorl
and
cmp
aas
aas
and
shll
mov
xor
cmp
and
and
mov
inc
mov
ret
leave
and
inc
cmp
mov
shlb
xor
dec
mov
iret
and
dec
dec
dec
mov
inc
ret
xor
mov
mov
sub
xor
mov
into
xor
es
int
mov
mov
dec
shlb
and
leave
mov
mov
iret
dec
mov
dec
enter
int
les
sub
dec
inc
dec
dec
mov
mov
mov
mov
aas
xor
push
aaa
and
lret
aas
lds
into
cmp
es
shll
mov
xor
aas
shlb
mov
dec
dec
lret
mov
rorb
movsl
int
cmpsl
into
ror
fisubs
and
xor
mov
movsl
shlb
and
iret
inc
mov
mov
inc
and
and
cmp
es
mov
movsb
lret
enter
mov
dec
dec
and
aaa
cmp
mov
cmpsl
mov
xor
lret
and
and
mov
cmpsl
mov
shlb
aas
mov
sub
sarl
xor
and
iret
daa
ret
aaa
and
inc
sub
and
mov
mov
iret
mov
movl
inc
inc
movsl
leave
mov
mov
aaa
and
cmp
sub
movsb
dec
mov
sarl
mov
les
mov
mov
cmp
xor
int
mov
mov
inc
mov
inc
aas
inc
and
shlb
mov
movsb
inc
mov
inc
iret
inc
mov
mov
into
dec
ds
and
iret
mov
mov
lret
mov
mov
xor
shll
inc
cmp
mov
xor
int
iret
into
lret
mov
mov
aas
int
ret
inc
iret
mov
mov
sub
rorl
cmp
dec
int
xor
and
shlb
mov
mov
daa
mov
and
aas
fiadds
cmp
sarl
aaa
inc
aaa
test
sarl
and
inc
rorl
movsl
and
ss
iret
mov
inc
sub
mov
lret
cmp
dec
enter
cmpsl
iret
xor
dec
and
dec
ror
inc
aaa
inc
enter
enter
mov
mov
aas
rolb
sarb
dec
ds
or
adcl
xor
movl
jmp
out
faddl
sbb
mov
sarb
ja
fbld
jmp
jmp
aas
lds
daa
xor
ds
mov
and
mov
xor
mov
lret
mov
cmp
mov
test
xor
dec
leave
mov
dec
dec
and
movsl
enter
xor
inc
xor
test
dec
cmp
xor
aas
inc
movsb
inc
dec
lds
movsl
movsb
lds
mov
dec
dec
dec
fidivs
int
inc
sub
mov
ret
dec
leave
mov
test
test
ss
xor
inc
and
xor
sarb
movsb
sub
dec
push
dec
inc
cmp
xor
mov
mov
sub
mov
and
ret
rol
ret
les
mov
inc
cmp
leave
mov
mov
inc
and
inc
enter
cmpsl
into
xor
rorb
es
dec
xor
ret
dec
xor
xor
inc
inc
sub
and
mov
xor
mov
fmulp
ss
leave
mov
les
inc
ss
inc
mov
shlb
into
mov
mov
mov
inc
ret
xor
movsl
movsl
xor
shlb
mov
mov
shlb
inc
mov
inc
shlb
into
leave
aas
dec
dec
lret
mov
mov
mov
inc
inc
mov
inc
sub
mov
push
mov
mov
cmpsl
cmp
dec
mov
mov
xor
leave
sub
enter
cmpsl
dec
leave
mov
and
inc
mov
xor
es
mov
iret
mov
les
mov
dec
dec
mov
inc
sub
mov
mov
test
mov
and
dec
dec
xor
aas
mov
movsb
dec
dec
xor
push
and
xor
aaa
inc
fidivrs
cmpsl
mov
mov
dec
aaa
xor
aaa
ret
fidivrs
aaa
dec
xor
mov
mov
daa
aas
ror
mov
xor
cmp
inc
iret
inc
ror
push
daa
xor
mov
dec
and
cmp
and
movsb
xor
aas
cmp
mov
xor
test
dec
and
mov
mov
xor
cmpsl
mov
ss
cmp
leave
ss
dec
rol
aaa
and
ret
dec
shll
movsl
mov
dec
cmp
inc
inc
leave
movsl
dec
mov
ds
movsb
sub
xor
fidivs
daa
xor
mov
xor
dec
xor
cmp
and
dec
mov
movsl
enter
mov
daa
inc
enter
mov
aaa
xor
inc
fisubs
cmpsl
leave
lret
daa
dec
movsl
rorl
and
mov
sarb
shlb
mov
mov
dec
dec
ret
mov
and
cmpsl
shll
ds
mov
inc
cmp
int
mov
mov
inc
dec
sub
cmp
int
mov
enter
mov
aaa
ror
inc
mov
cmpsl
mov
mov
shlb
lret
and
movsb
mov
mov
and
inc
aaa
lds
mov
mov
dec
and
inc
ror
iret
daa
daa
sub
les
dec
mov
es
mov
aas
aas
xor
roll
xor
sub
aaa
mov
mov
and
or
test
add
xor
mov
cmpl
jbe
adcl
sub
jmp
push
pushl
call
mov
shrd
shr
mov
mov
shl
xor
orl
xor
or
movl
mov
movl
cmp
movl
jne
cmpl
jle
xor
and
jmp
pushl
call
mov
jmp
out
fstps
fmulp
and
push
add
cmpl
jmp
jmp
ret
es
xor
iret
movsb
mov
and
inc
mov
daa
mov
ror
and
cmp
dec
mov
cmpsl
sub
daa
dec
and
mov
mov
les
inc
iret
mov
and
mov
mov
mov
and
mov
lret
xor
xor
sub
and
ror
and
aaa
mov
sarl
fidivs
mov
aaa
ds
test
xor
push
inc
mov
mov
sub
push
ds
shll
mov
and
xor
dec
ret
mov
xor
test
aas
mov
lds
sub
xor
mov
and
daa
lret
dec
and
mov
and
cmp
enter
leave
ficoms
inc
inc
dec
enter
mov
movl
mov
inc
and
cmp
mov
and
enter
inc
mov
mov
mov
aaa
dec
mov
mov
mov
sarb
cmp
mov
mov
and
xor
xor
inc
mov
enter
inc
mov
dec
mov
mov
xor
mov
dec
movsb
mov
push
inc
es
movsb
and
mov
daa
rorb
inc
xor
inc
int
daa
mov
mov
mov
ss
mov
and
mov
mov
inc
and
mov
cmpsl
dec
movsb
mov
mov
mov
enter
xor
and
xor
lds
sub
mov
cmpsl
fidivs
dec
enter
movsl
dec
lret
mov
xor
and
cmpsl
mov
shll
inc
cmp
test
aas
cmp
leave
xor
mov
xor
daa
cmp
inc
dec
sub
ror
xor
inc
lds
inc
aas
mov
aaa
xor
shll
inc
rcr
and
mov
dec
movsb
push
inc
mov
push
and
leave
movsb
cmp
mov
xor
mov
es
test
lret
and
int
lret
and
mov
leave
ss
xor
aaa
xor
mov
ss
cmp
mov
xor
mov
mov
dec
and
inc
xor
mov
push
lds
dec
push
and
ds
and
movsl
movsb
mov
and
aas
dec
rorb
inc
and
cmp
xor
xor
int
movsb
and
inc
mov
mov
movsb
inc
xor
dec
mov
dec
dec
mov
lds
mov
iret
mov
dec
inc
lds
inc
mov
fisubs
movsl
and
and
and
cmp
and
xor
movsl
movsb
mov
cmp
enter
int
into
and
mov
inc
es
test
mov
dec
mov
sub
and
and
mov
mov
mov
iret
cmpsl
lds
mov
inc
sub
mov
and
mov
mov
mov
push
and
mov
inc
push
es
test
int
dec
aaa
mov
leave
dec
lret
enter
xor
dec
lds
xor
int
inc
dec
dec
inc
xor
xor
movsl
and
push
test
and
mov
aaa
inc
ret
dec
and
or
sbb
add
pop
mov
add
sbb
add
lods
roll
andl
mov
add
mov
orl
xor
shr
mov
addl
xor
or
orl
shl
and
jmp
and
mov
mov
cld
jae
int
jmp
mov
inc
cmp
rorb
dec
shlb
dec
dec
dec
mov
xor
and
movsb
dec
aaa
mov
and
lret
ret
xor
ss
es
leave
test
inc
mov
mov
inc
mov
push
leave
dec
dec
iret
mov
mov
les
mov
lret
iret
aas
les
and
lds
cmp
shlb
faddp
aaa
sub
leave
mov
fmulp
mov
inc
ss
ss
cmpsl
cmp
and
mov
shll
and
and
mov
mov
and
sub
into
movsl
mov
mov
mov
mov
mov
cmp
movsl
mov
leave
into
xor
movsb
dec
mov
mov
dec
leave
cmp
mov
cmp
mov
xor
and
inc
movsb
xor
mov
mov
mov
daa
and
into
mov
mov
shlb
and
ds
int
and
dec
es
les
lret
cmp
cmp
movsl
push
and
mov
lds
test
daa
mov
xor
mov
cmp
leave
dec
mov
xor
and
inc
inc
dec
push
and
push
ss
int
xor
xor
aas
movsb
push
cmp
lds
inc
into
lds
push
and
xor
aaa
cmp
mov
mov
mov
mov
mov
mov
mov
and
movl
mov
inc
aaa
mov
xor
cmp
test
mov
cmp
xor
int
daa
mov
ss
cmp
xor
aaa
and
enter
cmp
push
aaa
mov
leave
lds
mov
xor
dec
rcl
fidivrs
test
cmp
dec
and
and
inc
xor
aas
inc
inc
mov
dec
shlb
rol
inc
xor
xor
xor
dec
mov
test
ss
mov
lds
enter
xor
mov
mov
test
xor
and
mov
es
mov
les
xor
xor
mov
leave
cmp
mov
mov
sarb
mov
fimuls
mov
lret
mov
sarb
enter
mov
dec
movsb
inc
cmp
mov
aas
dec
mov
shll
ret
and
and
dec
mov
mov
lds
xor
xor
xor
movsb
xor
dec
into
mov
movsb
push
sub
and
int
dec
movl
sarb
and
and
dec
shlb
mov
xor
movsb
inc
cmp
inc
fisubrs
mov
cmpsl
inc
lds
mov
mov
leave
ret
and
xor
mov
into
mov
mov
mov
sub
dec
les
mov
fisubs
and
mov
mov
xor
mov
mov
aaa
lds
cmp
shll
inc
dec
iret
inc
ror
and
xor
dec
mov
push
xor
mov
leave
dec
les
and
dec
dec
mov
mov
into
dec
mov
test
inc
mov
aas
mov
lret
lds
mov
or
mov
mov
sbb
add
and
mov
mov
add
mov
cmpl
jle
movl
jmp
pushl
call
shrd
shr
mov
mov
xor
shl
cmpl
jge
sub
jmp
push
pushl
push
push
call
xor
or
mov
mov
shrd
shr
mov
addl
mov
neg
mov
xorl
xor
xor
orl
or
addl
shl
lea
cmpl
jge
xor
or
mov
sub
xor
jmp
pushl
call
mov
mov
jmp
popa
jp
mov
outsl
mov
notl
mov
jmp
and
movsb
les
and
inc
dec
shlb
int
cmp
and
xor
leave
shlb
cmp
inc
ret
leave
mov
dec
rolb
cmpsl
cmp
mov
cmp
mov
leave
cmp
rol
inc
test
mov
movsl
fiadds
movsb
mov
sub
movsb
movsl
cmp
mov
dec
dec
mov
dec
mov
and
mov
mov
test
and
and
mov
int
mov
shlb
cmp
lds
dec
shlb
fiadds
mov
and
ss
rolb
int
inc
int
mov
lret
mov
aas
aas
inc
leave
cmp
mov
inc
movsb
movsb
mov
leave
cmp
dec
and
rol
mov
test
ret
push
daa
push
mov
mov
sarl
inc
xor
and
mov
xor
sub
faddp
mov
mov
mov
and
push
xor
cmp
mov
ret
inc
cmp
sarl
inc
cmpsl
dec
sarb
test
xor
dec
lds
inc
mov
leave
xor
dec
and
cmp
mov
mov
inc
es
ds
inc
inc
iret
inc
mov
push
leave
lds
into
int
dec
int
mov
sub
mov
and
xor
mov
dec
fidivrs
inc
lret
es
sub
cmp
cmp
dec
xor
dec
cmpsl
mov
push
xor
inc
leave
inc
dec
enter
mov
mov
sub
into
inc
mov
lret
shll
rolb
mov
mov
shlb
dec
lds
mov
leave
mov
cmpsl
lret
cmp
les
mov
mov
and
enter
lret
rolb
inc
mov
leave
mov
mov
ror
mov
xor
iret
movsl
dec
ds
mov
and
xor
xor
sarb
into
inc
mov
les
mov
lds
test
and
leave
and
mov
mov
daa
movsb
daa
enter
push
dec
inc
mov
mov
and
dec
enter
cmp
mov
movsl
cmp
mov
ret
sub
dec
and
mov
cmpsl
int
int
mov
inc
fisubs
xor
and
xor
inc
and
ds
ss
enter
mov
mov
and
cmp
sub
cmp
inc
and
ss
sarl
xor
iret
and
aaa
mov
and
int
into
iret
inc
dec
inc
enter
mov
mov
daa
mov
and
lret
mov
enter
mov
les
mov
cmp
xor
enter
mov
movsl
fidivrs
xor
cmpsl
movsl
mov
shlb
mov
and
xor
inc
dec
lret
mov
mov
push
iret
dec
daa
mov
dec
cmpsl
xor
dec
xor
cmp
lret
mov
dec
and
inc
enter
shlb
dec
mov
rolb
shr
dec
mov
mov
mov
and
mov
cmpl
jl
mov
adc
jmp
push
push
push
push
call
xor
mov
xor
or
shl
imul
sbb
mov
subl
mov
shrd
orl
mov
mov
xor
adcl
shr
adc
mov
cmpl
jbe
sbbl
jmp
pushl
push
call
mov
xor
or
jmp
sbb
int3
or
bnd
xor
jmp
inc
fmulp
dec
dec
mov
mov
mov
les
ret
leave
mov
lret
rol
push
aaa
lret
dec
mov
inc
into
int
fidivrs
mov
inc
and
cmpsl
and
cmp
xor
inc
mov
xor
sarb
xor
cmpsl
and
dec
cmp
les
mov
aaa
lret
mov
cmpsl
inc
mov
mov
inc
mov
inc
xor
inc
sarb
xor
lret
leave
xor
inc
mov
cmp
into
mov
enter
push
fmulp
mov
mov
lret
mov
inc
inc
faddp
inc
dec
into
shll
inc
inc
mov
ret
mov
movsl
xor
movsl
mov
mov
movsb
enter
cmp
lds
int
and
and
shlb
movsb
inc
aas
les
aaa
mov
mov
dec
mov
dec
into
movsl
ss
and
xor
mov
cmp
mov
inc
dec
cmp
shlb
cmp
xor
dec
inc
mov
lret
cmp
ret
xor
sub
leave
int
mov
inc
and
ss
mov
cmp
sub
mov
mov
cmp
rorb
mov
inc
cmp
rol
dec
and
mov
rorb
xor
roll
shlb
inc
mov
mov
cmp
dec
cmp
mov
test
and
mov
iret
mov
aas
mov
mov
sarb
mov
mov
cmp
mov
cmp
mov
mov
dec
movsb
xor
movsb
xor
and
dec
movl
xor
shrb
mov
shlb
ret
cmp
daa
mov
mov
les
aas
dec
cmp
and
ss
and
movl
and
inc
movsl
enter
movsl
aas
mov
mov
aas
int
movsb
enter
mov
inc
dec
movsb
cmpsl
inc
fmulp
mov
mov
movsl
ss
and
and
mov
mov
mov
cmp
inc
iret
fisubs
into
push
mov
mov
sub
dec
cmp
sub
cmpsl
mov
lret
inc
mov
ret
leave
mov
mov
test
lret
ds
mov
and
les
ss
mov
into
ss
aaa
rolb
cmp
ror
inc
cmp
daa
daa
es
shll
xor
mov
mov
mov
ss
les
xor
cmp
xor
mov
inc
mov
mov
into
mov
mov
mov
dec
mov
inc
lds
aas
and
leave
mov
movsb
mov
mov
mov
mov
mov
leave
and
sub
movl
xor
xor
lret
mov
mov
mov
mov
ds
iret
and
aaa
and
shlb
inc
xor
dec
dec
mov
test
les
mov
and
shl
sub
mov
cmp
mov
movl
jg
addl
mov
mov
adcl
shrd
mov
mov
xor
movl
shl
xor
or
shr
mov
xorl
jmp
test
push
in
lods
imul
and
js
aaa
jmp
jmp
xor
daa
xor
mov
mov
movsb
fidivs
and
dec
enter
shll
dec
and
iret
mov
and
and
cmp
shlb
push
iret
ss
mov
mov
dec
and
lret
dec
mov
mov
xor
mov
test
cmpsl
iret
xor
mov
movsb
and
inc
shll
test
test
dec
daa
daa
mov
mov
mov
ds
mov
and
mov
int
daa
and
push
iret
mov
mov
enter
aaa
inc
fisubs
mov
aas
dec
iret
xor
lret
mov
es
mov
xor
mov
and
int
inc
cmpsl
and
ret
lret
mov
fidivs
iret
rorl
mov
and
mov
mov
mov
mov
lds
movsl
shlb
test
and
int
int
inc
aas
int
iret
dec
int
xor
sub
mov
inc
mov
and
and
mov
dec
mov
mov
aaa
inc
inc
sub
rorb
and
inc
mov
mov
movsb
movsl
daa
and
mov
inc
dec
lret
dec
mov
cmp
daa
mov
push
mov
mov
sub
shlb
shrb
mov
push
daa
leave
mov
xor
movsb
and
lret
mov
inc
ret
fidivs
cmp
iret
rcr
mov
movsl
mov
xor
and
ret
inc
mov
cmpsl
dec
aas
inc
xor
cmp
mov
rorb
ret
and
mov
inc
mov
mov
daa
mov
daa
dec
lret
and
xor
cmp
and
leave
shlb
inc
rorb
into
daa
inc
mov
int
ret
aas
cmpsl
iret
and
sub
iret
cmp
mov
aas
xor
xor
xor
dec
inc
mov
push
enter
ror
mov
xor
mov
mov
cmpsl
lds
leave
mov
mov
mov
inc
aas
les
and
cmp
enter
mov
dec
mov
cmp
cmp
and
mov
daa
xor
and
dec
dec
and
mov
mov
mov
dec
ret
and
and
dec
xor
xor
les
xor
dec
xor
dec
mov
inc
int
mov
ror
and
mov
into
mov
mov
xor
and
dec
dec
mov
and
and
mov
and
xor
dec
mov
cmpsl
inc
rol
inc
xor
inc
sub
daa
inc
dec
mov
and
dec
xor
mov
mov
mov
sub
mov
mov
ds
and
mov
mov
cmp
rorb
lds
mov
iret
leave
cmp
mov
mov
and
ror
daa
dec
int
cmp
aaa
dec
enter
xor
cmp
enter
and
dec
dec
fidivrs
rorb
ret
xor
rorb
adc
sbb
mov
cmpl
ja
adc
jmp
push
call
mov
shrd
shr
mov
mov
mov
xorl
xor
andl
xor
negl
or
shl
sbbl
imul
sbbl
sub
movl
jmp
and
jmp
aad
loop
insb
sub
hlt
fwait
ret
add
jmp
movsl
aas
and
lret
mov
dec
dec
mov
mov
test
mov
mov
dec
cmp
xor
daa
cmp
cmp
aaa
shlb
leave
inc
inc
movsb
test
dec
push
mov
ds
rorb
inc
aaa
cmp
and
mov
dec
inc
into
inc
into
cmp
mov
ds
int
and
push
mov
dec
inc
inc
into
aas
inc
sub
push
and
mov
dec
rorb
dec
dec
int
daa
shrb
xor
and
xor
and
movsl
and
inc
fiadds
mov
into
mov
dec
xor
mov
iret
xor
mov
mov
enter
rorb
and
and
int
mov
mov
and
dec
xor
cmp
mov
into
mov
xor
mov
mov
inc
mov
lret
dec
movsb
dec
mov
xor
shlb
and
xor
es
xor
mov
inc
ret
mov
cmp
inc
inc
xor
dec
fimuls
sub
mov
test
xor
xor
dec
xor
mov
cmpsl
mov
ret
mov
shll
int
lret
and
mov
shlb
lret
xor
shll
and
dec
dec
dec
mov
lret
leave
ss
inc
iret
cmp
shlb
xor
leave
mov
mov
test
mov
mov
mov
mov
xor
lret
xor
lret
and
dec
mov
iret
roll
mov
xor
dec
inc
es
into
mov
les
aaa
xor
shlb
mov
and
mov
cmp
inc
mov
inc
xor
xor
ret
inc
ss
cmpsl
mov
mov
mov
mov
mov
mov
enter
and
mov
mov
dec
ds
fisubrs
ror
dec
xor
dec
mov
inc
cmp
dec
into
mov
shlb
movsl
mov
and
iret
enter
enter
dec
inc
inc
mov
iret
dec
mov
sarb
movsb
dec
mov
dec
into
dec
aaa
mov
les
inc
shlb
xor
mov
dec
rorb
dec
cmp
ror
and
lds
inc
movsl
sarb
aaa
and
aas
cmp
movsb
xor
lret
movsl
mov
mov
sub
xor
push
xor
mov
test
leave
and
ds
and
mov
mov
xor
and
es
mov
mov
sub
mov
int
cmp
cmpsl
cmpsl
and
shll
mov
mov
dec
mov
ror
lds
and
cmpsl
dec
mov
inc
mov
leave
iret
fidivs
and
les
inc
dec
daa
mov
mov
leave
inc
inc
inc
push
fisubs
inc
mov
into
into
mov
ds
and
lds
ss
dec
int
inc
fidivs
dec
cmp
dec
xor
inc
sarb
and
mov
mov
les
lret
mov
mov
les
inc
ret
dec
iret
inc
and
rolb
mov
mov
mov
adc
mov
shrd
sbbl
mov
jmp
jmp
mov
jl
or
sbbl
subl
jmp
jmp
mov
push
aaa
lret
dec
and
mov
shrb
ss
mov
mov
cmpsl
mov
cmp
and
cmp
movl
mov
and
mov
dec
inc
ss
daa
dec
fmulp
dec
fisubs
mov
es
push
inc
mov
mov
mov
sub
aaa
es
xor
daa
and
and
mov
inc
mov
mov
xor
test
push
and
inc
mov
int
dec
and
cmp
dec
sarl
fidivrs
test
cmp
cmpsl
mov
mov
dec
mov
dec
and
mov
cmpsl
dec
inc
aas
xor
and
lret
lret
mov
leave
mov
and
mov
movsl
dec
mov
dec
mov
mov
mov
shrl
leave
dec
into
movsb
xor
cmpsl
xor
dec
inc
mov
dec
daa
cmp
cmpsl
and
inc
dec
inc
cmp
and
inc
mov
movsl
mov
test
mov
enter
mov
sarb
mov
mov
inc
ret
cmp
inc
into
and
and
xor
mov
ss
mov
aas
mov
cmpsl
dec
xor
mov
dec
mov
xor
inc
sub
inc
iret
iret
inc
mov
les
ss
sub
lret
iret
dec
xor
and
and
mov
and
shlb
ds
inc
mov
xor
mov
xor
dec
dec
inc
mov
dec
xor
enter
and
dec
ss
push
and
cmpsl
aaa
mov
movsb
ds
mov
mov
cmp
lret
into
mov
mov
mov
mov
rcll
mov
and
ror
test
enter
xor
cmp
mov
mov
mov
mov
cmp
lret
dec
cmp
ds
shll
int
lds
shlb
xor
into
fidivs
cmp
xor
enter
inc
iret
shlb
mov
mov
lds
xor
mov
mov
ss
mov
mov
dec
daa
and
into
mov
aas
and
mov
ds
mov
mov
leave
mov
xor
dec
leave
sub
mov
lret
inc
sarl
dec
inc
les
and
mov
mov
sub
into
inc
xor
cmp
xor
mov
xor
into
inc
shlb
mov
sub
aas
mov
xor
es
and
sarl
cmp
enter
dec
xor
enter
xor
xor
cmp
mov
dec
mov
inc
cmp
mov
inc
cmp
aas
test
and
enter
cmp
ret
es
push
mov
movsb
inc
dec
mov
dec
mov
cmp
xor
dec
aaa
aaa
cmp
mov
mov
aas
shlb
sub
and
shlb
and
movsb
push
es
dec
iret
mov
dec
inc
and
and
and
dec
mov
mov
in
xor
mov
inc
add
loope
orl
xor
subl
or
movl
shr
and
mov
add
mov
mov
mov
mov
sub
mov
xorl
shrd
addl
shr
cmpl
jg
jmp
push
push
push
push
pushl
call
mov
mov
mov
xor
xor
or
shl
cmpl
ja
addl
and
jmp
pushl
push
push
pushl
push
push
call
add
add
mov
mov
shrd
shr
mov
xor
add
sub
imul
mov
mov
addl
xor
xorl
shl
xor
or
mov
incl
movl
adc
mov
cmpl
jbe
jmp
push
call
mov
movl
mov
jmp
lock
dec
jle
xor
cmpl
jmp
movsl
fidivrs
dec
aaa
and
inc
ds
dec
shlb
xor
ret
mov
aaa
fisubrs
mov
mov
ss
movsb
shlb
inc
mov
lret
mov
and
xor
cmp
and
aas
mov
and
inc
mov
mov
and
rol
mov
dec
mov
dec
mov
sub
es
cmp
dec
and
mov
dec
xor
enter
leave
iret
into
mov
mov
into
mov
mov
movsb
xor
mov
ret
leave
mov
cmpsl
mov
cmp
leave
aas
and
ret
cmp
movsb
mov
aas
xor
mov
movsb
xor
mov
and
int
mov
iret
mov
mov
xor
fisubs
dec
les
les
lds
xor
and
mov
rorb
inc
xor
rorb
int
ror
cmp
movsl
and
cmp
inc
cmp
mov
inc
mov
es
int
dec
and
rol
xor
and
fidivs
cmp
and
int
movsl
dec
mov
ss
ret
cmp
cmp
inc
xor
mov
daa
mov
into
shlb
fidivs
xor
and
fimuls
xor
mov
daa
cmpsl
mov
les
aas
les
cmp
xor
cmp
mov
mov
and
fidivrs
inc
dec
iret
mov
and
xor
cmp
dec
push
cmp
cmp
mov
shll
xor
mov
cmp
dec
lds
mov
xor
movsb
cmp
lds
and
mov
xor
es
dec
enter
leave
rorl
mov
rolb
daa
mov
inc
mov
xor
sub
mov
mov
cmp
aas
mov
cmp
test
mov
and
sarl
xor
and
ds
lret
ds
aas
leave
inc
and
mov
mov
dec
xor
cmpsl
inc
sarb
ss
les
iret
aaa
movsb
cmpsl
xor
and
movsb
shlb
xor
inc
dec
enter
test
xor
sarb
and
sub
movsb
mov
xor
and
mov
mov
lret
sub
lret
aas
inc
daa
daa
and
mov
mov
dec
mov
enter
mov
dec
rol
rolb
mov
leave
push
xor
enter
enter
cmp
mov
mov
movsl
inc
shll
mov
and
xor
into
and
sub
xor
dec
ret
cmp
fidivs
mov
ss
inc
cmp
xor
ds
inc
ds
cmpsl
ds
faddp
push
inc
dec
mov
cmp
aas
and
inc
and
into
mov
mov
mov
mov
inc
inc
iret
mov
and
iret
mov
xor
and
dec
sarb
cmp
mov
mov
xor
sub
xor
ret
mov
enter
into
cmpsl
mov
ret
lock
test
inc
hlt
movl
mov
mov
adc
mov
decl
shrd
movzbl
sbb
shr
mov
cmpl
jge
subl
jmp
push
call
mov
xor
shl
xor
or
lea
mov
or
mov
mov
cmpl
jg
adc
movl
jmp
push
call
jmp
xor
jne
insb
test
decl
mov
cmp
jne
push
aas
jmp
jmp
iret
mov
iret
ds
mov
shrb
aas
mov
movsl
and
shll
xor
movsl
ret
mov
dec
push
and
mov
mov
inc
ret
xor
movsl
enter
ret
cmpsl
inc
into
mov
mov
cmp
mov
dec
and
test
enter
mov
dec
mov
mov
les
movsl
dec
iret
leave
inc
and
dec
mov
mov
mov
mov
xor
and
shll
cmp
ret
fidivrs
mov
mov
mov
xor
mov
sub
into
mov
push
mov
cmpsl
test
sub
inc
inc
iret
ds
mov
mov
enter
cmp
xor
leave
mov
lret
movsl
mov
movsl
inc
mov
mov
lret
cmpsl
xor
cmp
xor
push
and
mov
sub
lret
daa
inc
movsl
sub
inc
and
es
enter
inc
iret
movsb
and
aaa
mov
fisubs
and
and
and
mov
dec
fiadds
mov
mov
mov
mov
dec
mov
sub
enter
cmp
movsb
and
dec
dec
cmp
dec
cmpsl
mov
daa
les
push
cmp
into
ds
push
rolb
inc
enter
into
dec
mov
mov
into
inc
leave
mov
mov
lret
cmp
cmp
rorb
lret
movsl
int
int
xor
lret
xor
dec
mov
aas
ret
dec
dec
mov
dec
mov
and
and
mov
test
lret
test
inc
and
les
sarl
les
mov
shlb
inc
mov
es
xor
fisubs
mov
mov
mov
cmp
xor
push
and
rolb
mov
inc
mov
dec
mov
dec
aaa
xor
inc
mov
lds
xor
xor
mov
into
inc
mov
mov
fisubrs
mov
sarl
mov
rcl
cmp
mov
into
mov
xor
mov
ror
lret
sub
int
and
mov
dec
mov
mov
cmp
mov
mov
dec
mov
and
mov
mov
and
mov
ss
mov
test
cmp
dec
inc
xor
cmp
mov
mov
mov
dec
inc
into
dec
xor
ds
cmpsl
xor
dec
shlb
test
and
into
mov
and
mov
ds
mov
into
mov
mov
mov
inc
daa
dec
mov
cmpsl
ret
dec
mov
aas
fmulp
mov
mov
mov
mov
xor
xor
dec
mov
mov
ret
movsb
les
leave
roll
inc
dec
and
dec
dec
mov
cmp
aas
mov
dec
xor
xor
mov
cmp
mov
xor
mov
enter
cmp
faddp
fisubs
mov
cmp
mov
xor
xor
mov
ds
mov
dec
ds
enter
add
aam
loope
mov
xor
movl
xor
or
cmpl
jle
sbb
adcl
jmp
pushl
push
pushl
pushl
push
pushl
pushl
call
mov
mov
xor
mov
mov
shrd
shr
mov
neg
mov
andl
xor
andl
shl
xorl
xor
mov
sub
mov
jmp
call
push
stos
add
add
js
cmp
jmp
dec
fidivs
and
and
and
mov
daa
ror
dec
mov
int
rol
mov
mov
iret
sub
rol
and
and
shlb
mov
xor
cmp
ds
xor
mov
int
xor
movsb
mov
cmp
inc
aaa
movsb
movsl
mov
and
lret
movsb
les
mov
mov
leave
inc
shlb
test
mov
dec
aaa
push
int
lds
movsl
inc
int
mov
aas
lret
mov
mov
inc
ss
mov
inc
mov
leave
mov
dec
daa
int
sub
aaa
lret
movsl
xor
iret
fisubs
ss
inc
inc
int
mov
enter
dec
xor
dec
push
cmpsl
ror
mov
and
and
and
cmp
mov
mov
dec
inc
movsb
push
mov
movsb
les
and
mov
mov
shll
cmp
and
mov
mov
cmp
inc
faddp
mov
cmp
mov
dec
leave
lds
fidivs
xor
lds
mov
xor
mov
inc
mov
xor
mov
xor
sarl
inc
mov
mov
aas
mov
dec
sub
dec
iret
xor
ds
push
inc
inc
sub
mov
mov
xor
rol
cmp
ds
rol
into
mov
inc
test
sub
ret
aaa
ds
xor
dec
test
and
xor
sub
mov
mov
cmp
mov
mov
aaa
test
and
mov
lret
dec
cmp
movsb
into
sub
xor
mov
ror
and
mov
lret
movsb
cmp
cmp
inc
iret
movsb
dec
mov
and
ds
mov
iret
mov
mov
test
and
cmpsl
mov
cmp
aaa
mov
dec
rol
rclb
mov
movsb
mov
inc
mov
xor
xor
mov
and
ss
movsl
les
dec
les
and
lret
mov
les
into
mov
mov
mov
and
xor
leave
xor
ds
mov
es
dec
cmp
mov
daa
and
test
mov
and
mov
mov
dec
dec
cmpsl
lret
mov
inc
and
ds
cmp
dec
int
leave
es
mov
and
mov
inc
aaa
mov
lds
mov
mov
inc
sub
inc
mov
mov
cmp
daa
into
inc
dec
cmpsl
and
mov
and
ret
inc
mov
mov
dec
dec
int
xor
and
inc
movsl
and
mov
mov
dec
into
xor
les
es
dec
lds
enter
into
and
ss
movsb
mov
mov
dec
mov
inc
inc
cmpsl
mov
mov
sarb
and
ret
xor
mov
and
les
inc
lret
mov
mov
mov
rorl
mov
and
iret
leave
ss
iret
inc
push
and
ror
lds
cmp
xor
rorb
ret
add
sbb
add
jmp
push
push
push
call
lea
mov
mov
mov
shrd
jmp
lock
adc
lahf
mov
add
cld
push
jmp
daa
and
push
ror
fmulp
faddp
dec
xor
shll
cmp
mov
les
daa
mov
test
mov
lret
lds
movsl
mov
mov
mov
and
movsb
int
push
int
mov
cmp
movsb
lds
and
xor
mov
iret
mov
mov
dec
mov
daa
enter
test
inc
xor
cmp
xor
fisubs
mov
roll
xor
mov
daa
and
mov
into
es
fisubs
xor
movsl
inc
sarb
dec
leave
mov
es
movsl
dec
mov
iret
cmp
mov
dec
aaa
test
sub
ds
movsl
mov
xor
ret
inc
shlb
movsl
rorb
mov
rolb
inc
dec
mov
mov
and
mov
es
mov
dec
mov
mov
int
inc
int
mov
xor
ss
mov
rol
ss
xor
mov
leave
shll
mov
mov
mov
dec
and
iret
daa
daa
shll
inc
mov
xor
fisubrs
mov
cmpsl
mov
dec
les
into
and
enter
cmp
mov
mov
sarl
cmp
dec
cmp
cmpsl
test
xor
mov
mov
mov
mov
mov
shlb
rcl
ss
dec
shll
cmp
inc
shll
inc
mov
mov
inc
mov
ss
and
into
mov
int
mov
fiadds
and
lret
and
xor
ds
mov
xor
ss
ds
shll
and
xor
fidivs
and
movsl
and
mov
mov
inc
movsl
ss
aaa
mov
lds
push
xor
lds
leave
mov
inc
fimuls
push
and
mov
dec
iret
xor
enter
cmp
mov
into
and
mov
inc
cmp
mov
sarl
daa
mov
inc
inc
xor
mov
mov
enter
xor
mov
mov
mov
dec
mov
mov
mov
mov
xor
cmp
xor
mov
dec
les
mov
xor
push
enter
mov
aas
cmp
movsl
int
dec
inc
mov
mov
inc
mov
int
mov
inc
ds
mov
inc
push
int
mov
mov
inc
mov
xor
dec
daa
mov
inc
aas
dec
mov
sub
int
dec
mov
rorb
int
inc
ss
aaa
mov
into
mov
inc
mov
mov
lret
xor
iret
cmp
sub
rorb
int
xor
mov
inc
mov
movsb
rol
aaa
rol
and
push
daa
movsb
mov
mov
mov
int
inc
movsl
sarb
mov
mov
inc
dec
xor
push
fimuls
dec
aas
xor
faddp
dec
ret
push
cmpsl
cmp
mov
lret
leave
iret
lret
cmp
daa
mov
les
lret
mov
shr
mov
cmpl
jge
subl
jmp
push
push
call
mov
shl
mov
xor
xor
or
andl
mov
mov
adc
or
or
mov
addl
mov
shrd
cmpl
ja
sbb
add
jmp
pushl
call
shr
mov
mov
jmp
inc
dec
xor
sbb
loop
cmp
fs
stc
movsb
jmp
jmp
cmp
daa
mov
and
and
mov
and
mov
xor
inc
mov
shlb
dec
movsb
iret
leave
mov
dec
mov
cmp
mov
mov
into
ds
push
aas
sub
mov
aas
inc
lret
mov
mov
mov
mov
and
dec
and
mov
cmp
daa
mov
shll
dec
int
push
mov
es
and
inc
xor
mov
aas
cmp
mov
rolb
sarl
cmp
xor
aas
shlb
mov
iret
and
leave
mov
dec
xor
mov
mov
and
and
cmp
shlb
leave
inc
xor
shrb
movsb
mov
dec
and
mov
mov
sub
mov
dec
and
daa
mov
lret
cmp
mov
and
xor
enter
into
mov
movsb
shlb
mov
ds
mov
iret
mov
cmp
lret
mov
xor
lret
mov
aaa
iret
daa
mov
sub
dec
inc
les
dec
movsb
cmp
mov
ret
dec
dec
cmp
xor
mov
and
shrl
leave
cmp
mov
mov
shll
mov
cmp
fisubs
lret
and
mov
cmp
mov
mov
iret
dec
leave
les
and
and
inc
inc
dec
inc
daa
ret
xor
aas
fidivrs
cmp
cmp
xor
inc
mov
inc
les
mov
mov
xor
inc
xor
mov
ret
cmp
aas
aas
ds
into
and
mov
and
xor
ret
into
daa
mov
dec
xor
and
ret
cmp
and
mov
movsl
test
les
xor
inc
cmpsl
mov
test
mov
cmp
inc
lret
ror
dec
xor
leave
fimuls
enter
rorl
mov
test
aaa
lds
shlb
cmp
inc
xor
lret
lret
dec
mov
les
cmp
mov
cmp
mov
inc
ret
and
inc
daa
into
and
movl
xor
movsb
inc
int
lds
xor
mov
leave
xor
aaa
mov
roll
and
mov
mov
movsl
inc
mov
and
test
cmp
mov
and
dec
inc
inc
mov
mov
and
aas
and
and
rcr
mov
dec
leave
inc
and
mov
xor
movsb
xor
sarb
dec
mov
fidivrs
mov
mov
inc
mov
mov
mov
and
dec
mov
lret
inc
leave
xor
shlb
leave
movsl
mov
push
enter
mov
les
inc
mov
mov
inc
aas
inc
dec
mov
movsb
inc
xor
iret
inc
xor
dec
lds
xor
and
mov
lret
xor
and
movsb
enter
xor
push
inc
mov
and
mov
xor
mov
dec
inc
daa
and
dec
leave
xor
lret
dec
cmp
into
and
mov
mov
sarl
rclb
mov
jmp
sbb
arpl
mov
aaa
sub
xor
testl
jmp
xor
mov
xor
into
mov
mov
lds
mov
int
xor
inc
dec
xor
movsb
xor
into
movsb
xor
xor
test
es
movsl
mov
dec
lds
aas
shll
mov
dec
int
test
lret
sarl
enter
aaa
inc
ret
lds
sub
lret
aaa
leave
mov
mov
inc
mov
aaa
inc
ss
mov
dec
dec
sarb
cmp
ror
xor
inc
inc
inc
inc
daa
test
mov
dec
int
lds
inc
xor
rol
inc
es
shll
mov
mov
movsl
shll
mov
sarl
dec
mov
dec
and
dec
mov
mov
into
mov
aaa
cmp
inc
dec
aaa
and
xor
xor
int
mov
xor
into
les
sarl
dec
lds
mov
mov
inc
mov
shrb
mov
inc
mov
inc
dec
mov
fidivs
mov
daa
mov
mov
mov
leave
fidivs
cmp
mov
mov
les
into
ds
mov
inc
and
fidivrs
and
daa
mov
ret
and
ss
xor
cmp
and
aaa
and
ss
and
mov
and
mov
and
and
aaa
daa
cmp
mov
xor
lds
xor
and
inc
movsl
lds
mov
aaa
ret
aas
fidivrs
xor
rol
into
mov
mov
mov
shlb
ss
inc
cmp
dec
int
leave
mov
inc
mov
inc
mov
sarb
lret
inc
xor
dec
dec
mov
mov
inc
mov
shlb
shll
xor
mov
mov
xor
inc
xor
dec
mov
ds
xor
shlb
mov
movsl
lret
inc
mov
mov
mov
inc
and
dec
cmp
xor
and
into
int
ss
mov
test
mov
xor
mov
mov
mov
fidivs
movsl
cmpsl
enter
test
xor
cmp
and
and
mov
leave
leave
inc
inc
inc
xor
sub
mov
and
test
and
mov
and
xor
into
dec
aas
and
cmp
mov
cmpsl
les
es
and
push
les
dec
cmpsl
mov
inc
inc
dec
inc
enter
into
inc
lds
mov
movsl
mov
movsl
dec
and
mov
xor
fisubs
shll
dec
and
xor
mov
xor
inc
and
ret
inc
lret
leave
mov
mov
mov
movsb
es
mov
cmp
iret
mov
and
movsb
dec
and
int
and
mov
sarb
les
ss
shlb
dec
and
and
and
mov
movsb
dec
dec
movsl
and
iret
cmp
mov
mov
and
and
iret
daa
mov
xor
leave
inc
push
and
ret
mov
mov
ds
dec
movl
dec
mov
enter
shl
xor
or
lea
mov
xor
or
sub
imul
mov
or
mov
orl
mov
movzbl
sbb
shrd
cmpl
ja
and
mov
xor
jmp
pushl
pushl
pushl
pushl
pushl
call
shr
mov
mov
xor
shl
mov
xor
or
cmpl
jge
jmp
pushl
call
mov
mov
add
mov
mov
shrd
shr
addl
mov
cmpl
jg
sub
jmp
pushl
push
call
mov
xor
xor
or
lea
mov
cmpl
jbe
jmp
push
push
call
mov
shl
mov
shrd
shr
mov
mov
adcl
xor
xor
notl
or
cmpl
jle
xor
add
jmp
pushl
call
mov
shl
mov
mov
mov
sbbl
or
adc
mov
mov
sbbl
shrd
shl
addl
jmp
mov
xchg
mov
test
jmp
and
mov
and
dec
sub
mov
mov
rolb
inc
test
inc
int
leave
and
and
cmpsl
mov
dec
inc
fidivs
and
es
movsl
mov
xor
shlb
les
mov
mov
test
int
mov
lds
push
int
and
cmp
mov
dec
and
xor
mov
ds
mov
xor
mov
lret
mov
test
inc
mov
dec
inc
mov
aaa
cmp
mov
es
inc
test
inc
and
enter
cmp
movsb
mov
lret
mov
les
xor
inc
movsl
mov
sarb
dec
ret
xor
mov
enter
mov
int
mov
faddp
int
cmp
xor
rorb
mov
ret
sub
inc
mov
and
mov
push
mov
dec
inc
mov
int
inc
lds
mov
push
daa
sub
dec
les
and
enter
and
dec
lret
rcl
cmpsl
mov
int
lds
mov
inc
mov
inc
mov
cmp
aas
inc
daa
mov
sub
mov
cmp
mov
mov
cmp
mov
inc
rcl
dec
aas
dec
mov
cmp
daa
faddp
int
cmpsl
mov
mov
mov
mov
cmp
dec
inc
cmp
int
iret
int
int
mov
and
xor
movsl
mov
and
xor
mov
ret
into
and
and
mov
dec
int
inc
movsl
mov
mov
cmpsl
mov
mov
and
int
cmpsl
fisubs
mov
daa
rol
sub
inc
les
leave
movsb
inc
movsb
xor
cmpsl
aaa
dec
and
into
leave
xor
mov
movsl
lds
iret
xor
and
lret
mov
ret
mov
test
mov
mov
es
inc
mov
mov
mov
mov
mov
xor
daa
mov
mov
dec
fimuls
lret
movsb
inc
aaa
enter
inc
dec
sarb
mov
movsb
ss
inc
push
int
iret
and
enter
mov
sarb
sub
fisubs
leave
and
inc
mov
and
cmp
sub
movsl
and
ror
mov
lret
aaa
mov
shll
and
into
mov
cmpsl
cmp
test
movsl
inc
int
movsl
daa
test
into
into
push
rol
aaa
dec
daa
ds
xor
mov
dec
aaa
and
ds
enter
ds
mov
ror
lret
and
shlb
ret
movsb
mov
mov
ret
into
and
xor
cmp
shll
mov
mov
mov
dec
test
vcmpps
iret
mov
and
cmp
ret
sub
dec
inc
and
aaa
les
dec
shlb
mov
mov
sarb
mov
sarb
sub
inc
fisubs
and
mov
mov
mov
leave
int
ss
mov
fidivrs
aas
and
sub
ret
mov
cmp
ret
add
add
testb
add
shl
mov
test
dec
push
addl
jmp
jmp
leave
and
mov
mov
mov
and
mov
ds
movsb
aaa
xor
leave
movsl
and
inc
mov
cmp
lret
and
mov
dec
dec
shlb
and
aas
test
test
xor
mov
mov
and
and
and
aas
lret
mov
inc
and
mov
mov
leave
into
sub
int
xor
mov
aas
xor
aas
leave
and
ds
into
int
mov
and
ret
shrb
mov
lds
faddp
mov
movsl
dec
sarb
mov
dec
xor
and
test
mov
cmp
mov
shlb
mov
ds
dec
daa
and
mov
xor
movl
fidivrs
xor
mov
lds
xor
movsl
and
mov
mov
xor
dec
and
mov
dec
sarb
mov
mov
shrb
cmp
lds
mov
mov
mov
and
aaa
enter
mov
mov
dec
and
sub
es
dec
mov
and
les
into
inc
mov
lret
aaa
and
mov
inc
dec
int
iret
cmpsl
inc
dec
movsl
mov
xor
dec
cmpsl
inc
test
into
mov
and
mov
shlb
mov
mov
dec
mov
and
fidivs
and
into
lds
inc
enter
dec
mov
inc
aaa
shll
and
xor
iret
and
fidivrs
mov
test
movsb
and
mov
aaa
mov
mov
les
mov
dec
and
int
inc
xor
movsl
and
and
xor
mov
shll
test
inc
mov
shll
dec
mov
xor
rolb
and
xor
dec
ror
ret
es
mov
cmp
movsl
daa
cmp
aaa
mov
mov
dec
into
into
int
mov
xor
enter
dec
dec
int
leave
ds
dec
test
and
and
shlb
mov
ret
cmpsl
mov
mov
xor
xor
and
mov
xor
dec
int
and
mov
dec
and
dec
dec
mov
leave
xor
sarb
mov
dec
and
mov
xor
aaa
cmp
xor
mov
cmp
sub
mov
shlb
ss
and
and
mov
and
shlb
daa
mov
mov
and
xor
movsb
mov
es
inc
inc
xor
mov
movsb
movsb
inc
mov
lret
inc
xor
mov
mov
xor
and
daa
movsb
ss
cmp
mov
xor
inc
xor
mov
xor
and
mov
movsb
aas
mov
shll
inc
cmp
mov
xor
and
mov
mov
mov
and
dec
mov
mov
and
faddp
xor
dec
mov
movsl
aaa
cmp
mov
dec
mov
ret
movsb
cmp
iret
lds
dec
xor
int
mov
xor
and
mov
movl
mov
movzwl
and
xor
mov
addl
xor
or
mov
dec
adcl
not
andl
jmp
and
mov
mov
cwtl
pop
mov
lods
jmp
jmp
xor
iret
mov
mov
test
inc
leave
xor
sarb
test
int
les
cmpsl
mov
dec
mov
xor
xor
enter
mov
les
daa
mov
dec
and
mov
shlb
mov
push
movsl
and
enter
mov
dec
leave
and
int
es
mov
inc
lret
into
movsb
ss
inc
and
mov
mov
iret
mov
cmp
xor
and
inc
mov
movsl
inc
mov
iret
dec
inc
xor
iret
lret
ds
into
daa
mov
and
les
xor
dec
mov
lret
xor
mov
aas
cmp
les
mov
mov
cmpsl
inc
cmp
shlb
les
fiadds
and
mov
leave
cmpsl
ret
dec
mov
daa
and
ds
mov
lds
dec
mov
movsl
mov
cmp
mov
inc
enter
cmp
inc
xor
iret
and
movsb
mov
es
cmp
xor
xor
mov
iret
xor
mov
test
mov
push
inc
dec
ss
inc
mov
push
aaa
shlb
and
sarl
and
enter
mov
int
into
int
mov
inc
mov
mov
and
lds
fiadds
movsl
mov
mov
cmpsl
ror
cmpsl
ss
dec
int
mov
test
and
mov
ss
mov
push
dec
test
rolb
xor
and
mov
cmp
push
ret
cmp
movsl
mov
mov
lds
int
sarb
es
mov
mov
and
mov
mov
fidivs
into
into
mov
and
mov
dec
fimuls
movsb
mov
mov
and
mov
cmp
xor
dec
mov
mov
mov
mov
sub
mov
mov
shlb
xor
es
xor
xor
movsl
mov
les
int
dec
fidivs
push
mov
ss
mov
leave
xor
shll
leave
dec
and
xor
inc
push
mov
mov
dec
inc
rorb
dec
movsb
mov
cmpsl
aaa
cmp
mov
iret
mov
aaa
fidivs
ds
dec
mov
dec
inc
dec
and
mov
mov
ds
cmp
dec
fmulp
movsb
cmp
lds
int
leave
leave
and
rolb
inc
test
iret
leave
cmp
xor
mov
inc
cmp
mov
test
movsb
xor
mov
mov
xor
enter
mov
inc
shll
ret
movsb
and
push
mov
aaa
and
mov
cmp
ss
inc
movsb
lds
cmp
mov
aas
aaa
and
mov
ss
and
sarl
inc
aas
mov
mov
ret
mov
mov
dec
dec
test
lds
fidivrs
mov
mov
inc
int
ret
inc
dec
mov
mov
ret
xchg
mov
add
aas
add
xor
mov
mov
not
xor
and
or
addl
mov
sub
mov
sbb
shrd
cmpl
ja
addl
jmp
pushl
call
shr
mov
mov
mov
xor
mov
addl
xor
andl
shl
mov
or
mov
movl
cmp
movl
jmp
inc
xchg
ret
test
dec
movsb
mov
dec
stos
jmp
jmp
sarl
xor
aas
xor
es
movsl
lret
movsb
cmpsl
dec
xor
inc
enter
ds
mov
inc
mov
iret
inc
cmp
sarb
xor
es
shlb
inc
dec
ss
dec
fisubrs
mov
mov
lds
iret
lret
inc
mov
enter
mov
cmpsl
xor
fimuls
xor
enter
int
lret
cmp
leave
xor
dec
mov
movsl
inc
xor
shlb
movsb
mov
fidivs
leave
shlb
and
mov
xor
dec
and
xor
iret
dec
cmp
cmp
aaa
and
mov
dec
ret
aaa
push
iret
ss
inc
inc
cmp
cmp
aaa
dec
mov
dec
enter
sub
es
inc
ds
and
mov
inc
shlb
cmp
xor
mov
mov
aaa
inc
xor
mov
dec
mov
daa
mov
mov
into
aaa
mov
and
lds
mov
iret
and
aas
mov
mov
xor
ss
mov
ds
mov
into
xor
mov
xor
cmp
mov
int
ss
daa
inc
aas
inc
lds
rolb
mov
inc
dec
inc
shlb
mov
ds
inc
dec
cmp
lret
sub
and
aaa
ret
fidivs
shlb
inc
es
cmp
into
mov
ret
fmulp
movsb
dec
enter
cmp
mov
and
ss
mov
dec
xor
dec
aas
aas
mov
xor
dec
inc
dec
mov
dec
leave
xor
and
xor
and
dec
ret
dec
inc
shlb
rorl
mov
test
aaa
lds
lret
inc
ss
and
inc
cmpsl
dec
mov
and
mov
mov
sarl
xor
lret
daa
cmp
es
les
and
fmulp
enter
dec
mov
mov
and
mov
and
cmpsl
dec
inc
cmp
mov
dec
mov
aaa
into
mov
dec
dec
inc
mov
daa
and
mov
mov
test
mov
ret
ror
rol
sub
test
sub
test
cmp
iret
into
and
mov
inc
mov
cmp
dec
lret
les
inc
xor
xor
mov
inc
enter
int
ss
ss
dec
les
mov
mov
ror
dec
inc
cmpsl
daa
mov
mov
mov
xor
mov
mov
dec
shlb
inc
mov
mov
xor
push
mov
mov
mov
cmp
movsb
mov
lds
sub
xor
mov
dec
and
mov
mov
mov
enter
xor
shlb
dec
inc
sub
mov
xor
xor
test
push
mov
aas
xor
mov
mov
mov
ss
and
mov
mov
mov
xor
and
mov
sarb
mov
rorl
and
mov
ds
mov
shll
push
ror
dec
mov
dec
mov
je
adc
jmp
js
mov
mov
aas
lcall
mov
jmp
inc
mov
dec
fisubs
les
and
and
mov
mov
xor
xor
mov
and
mov
xor
fidivs
and
and
mov
mov
es
mov
int
cmpsl
mov
dec
int
xor
inc
and
shlb
mov
and
and
mov
mov
movsl
movsl
mov
xor
inc
inc
dec
es
shlb
mov
dec
leave
ss
mov
sub
movsl
mov
movsl
mov
mov
iret
cmp
shll
inc
fidivs
mov
enter
enter
push
mov
cmp
cmp
dec
mov
dec
mov
enter
and
dec
inc
fidivrs
aas
shlb
lret
xor
inc
lds
iret
test
enter
lds
mov
dec
dec
enter
cmp
sub
mov
ds
sub
dec
xor
dec
cmpsl
ds
dec
and
inc
inc
int
and
int
aas
shlb
mov
push
movsl
push
mov
ret
and
mov
dec
mov
aaa
mov
xor
cmp
int
les
xor
mov
xor
sarl
inc
and
mov
and
and
movsl
push
push
xor
cmp
cmp
mov
cmp
and
cmp
iret
mov
and
mov
inc
xor
mov
mov
inc
dec
mov
int
inc
dec
push
and
iret
inc
mov
dec
cmp
es
cmp
xor
shll
dec
lret
cmp
sub
test
lds
fisubs
fidivs
leave
mov
ss
mov
xor
mov
shrb
sub
daa
lds
movsb
lds
les
daa
mov
and
sarl
cmp
mov
ds
and
les
cmp
mov
mov
xor
inc
lret
aas
les
dec
sub
xor
inc
and
mov
shlb
and
and
aaa
cmp
dec
mov
cmp
xor
mov
aas
aaa
mov
daa
lret
xor
daa
inc
lret
xor
and
mov
aas
and
and
inc
mov
and
iret
dec
into
aas
cmpsl
movsl
dec
cmp
mov
mov
cmp
cmp
mov
movsb
mov
mov
cmp
lret
mov
daa
dec
enter
mov
xor
ds
movsl
mov
cmp
cmpsl
into
and
cmp
movsb
aas
movsl
push
xor
sub
cmp
dec
movsb
lds
test
xor
and
lds
cmp
xor
ds
mov
mov
and
es
inc
sub
xor
mov
mov
mov
daa
aas
sub
cmp
and
mov
xor
mov
cmpsl
mov
dec
ret
inc
movsl
into
mov
inc
mov
mov
and
mov
xor
and
lds
iret
mov
sub
mov
mov
sbb
xor
xor
add
mov
or
jmp
cmc
jp
cmpsb
mov
dec
push
gs
loop
jmp
jmp
xor
dec
mov
mov
mov
cmp
rorb
dec
ret
dec
int
mov
xor
enter
mov
dec
cmpsl
int
and
mov
mov
mov
test
xor
mov
test
daa
dec
mov
mov
cmp
inc
and
test
rcr
dec
mov
shll
into
xor
mov
into
mov
mov
inc
shlb
aaa
dec
mov
cmp
mov
dec
inc
aaa
inc
fimuls
inc
enter
iret
and
inc
movsl
mov
mov
xor
mov
int
cmp
mov
leave
into
cmp
sub
mov
aas
cmp
enter
inc
and
test
ret
push
mov
shll
mov
iret
mov
inc
dec
fmulp
shlb
lret
and
cmp
aas
ret
dec
cmpsl
cmp
dec
inc
shlb
push
inc
and
fisubs
daa
mov
xor
mov
into
xor
xor
mov
iret
mov
xor
mov
movsl
mov
and
movsl
xor
mov
faddp
aas
aaa
inc
xor
push
aaa
fidivrs
cmp
mov
mov
and
and
mov
mov
mov
mov
es
faddp
mov
cmp
mov
sarl
mov
cmp
movsb
movsl
enter
mov
into
shlb
shlb
inc
mov
inc
cmpsl
movsl
dec
shlb
and
mov
ror
xor
and
xor
inc
cmp
mov
inc
mov
mov
sarb
aaa
ret
inc
daa
dec
and
and
sarb
mov
cmp
mov
inc
inc
xor
sarb
and
mov
ret
mov
leave
daa
and
inc
ret
leave
movsb
dec
xor
mov
and
dec
dec
and
daa
aas
and
xor
into
push
into
int
rol
movsb
inc
dec
shll
inc
mov
test
faddp
dec
mov
mov
mov
inc
inc
inc
cmp
xor
dec
dec
dec
inc
into
int
inc
mov
daa
leave
ss
and
mov
xor
xor
mov
iret
mov
mov
mov
ror
push
xor
dec
iret
ss
into
ds
mov
inc
mov
cmp
mov
mov
mov
and
mov
mov
dec
inc
mov
int
xor
mov
shlb
xor
mov
lret
daa
dec
dec
shlb
cmp
mov
xor
test
lds
inc
mov
mov
enter
mov
daa
int
mov
inc
cmp
cmp
cmp
mov
mov
shlb
mov
and
xor
test
mov
mov
xor
es
inc
test
iret
cmp
ds
lret
mov
and
cmp
ret
movsb
lret
xor
movsb
iret
mov
int
and
les
inc
dec
movsl
aaa
dec
xor
xor
mov
lds
icebp
pop
test
testb
add
dec
or
in
mul
xor
jmp
jmp
aaa
daa
dec
fisubs
mov
aaa
mov
les
es
mov
dec
mov
test
cmp
xor
mov
cmp
lret
fidivrs
leave
aas
mov
mov
cmp
xor
lret
mov
leave
xor
xor
xor
sub
dec
shlb
shlb
mov
dec
cmpsl
inc
mov
cmp
mov
into
daa
mov
mov
inc
xor
dec
rol
push
mov
dec
mov
cmp
test
mov
movsl
dec
and
rol
lret
fisubs
mov
ds
and
movsl
dec
movsb
dec
es
cmpsl
lret
lret
inc
int
and
inc
and
and
mov
dec
ret
int
inc
mov
aaa
aaa
xor
inc
inc
aaa
cmp
mov
dec
rcr
sarl
movsb
inc
leave
xor
iret
iret
inc
dec
and
int
xor
mov
mov
xor
enter
cmp
and
and
leave
mov
mov
ror
mov
iret
mov
mov
ds
int
xor
xor
sub
ss
mov
shlb
mov
xor
mov
cmp
and
dec
mov
cmp
mov
fmulp
aas
mov
cmp
lret
and
mov
inc
lret
mov
mov
aas
dec
dec
inc
mov
mov
and
dec
xor
xor
push
mov
aaa
aas
dec
mov
mov
and
into
inc
int
xor
movsl
sarl
enter
aaa
mov
inc
cmp
xor
push
into
dec
inc
mov
lds
rorl
into
cmp
sub
mov
sub
mov
xor
dec
inc
mov
inc
lret
daa
and
and
test
mov
mov
dec
rol
sub
and
mov
ds
cmp
inc
test
dec
and
mov
cmp
mov
iret
ret
mov
xor
mov
dec
xor
inc
mov
rolb
leave
xor
ss
mov
and
dec
mov
and
leave
mov
daa
iret
dec
xor
leave
les
les
mov
cmp
aaa
mov
inc
mov
shlb
dec
enter
fmulp
mov
push
iret
inc
xor
xor
mov
roll
sub
inc
dec
into
dec
dec
mov
aas
xor
mov
faddp
mov
dec
and
mov
and
rcll
mov
aas
dec
inc
daa
xor
cmpsl
mov
push
sub
xor
and
inc
leave
dec
lret
into
into
int
mov
mov
mov
movsl
int
rcr
daa
mov
dec
mov
sub
inc
dec
xor
test
dec
shlb
mov
aas
enter
ss
ss
movsl
mov
dec
mov
mov
into
test
es
lret
xor
int
dec
fisubs
dec
mov
dec
inc
mov
xor
movsb
mov
mov
mov
and
inc
sarl
mov
es
sarb
inc
sarb
mov
xor
mov
rorb
mov
mov
les
int
xor
and
lods
roll
xor
or
add
shr
dec
mov
xorl
mov
cmpl
ja
jmp
push
pushl
pushl
call
mov
mov
xor
or
jmp
fs
loopne
loopne
fs
add
into
jbe
add
jmp
jmp
xor
xor
les
mov
and
inc
inc
dec
lds
and
cmp
xor
mov
xor
dec
xor
inc
ret
leave
mov
and
mov
mov
test
sub
mov
movsb
aas
and
movsl
mov
and
mov
sub
and
sub
cmp
mov
xor
ret
dec
rorb
inc
lds
xor
xor
mov
mov
mov
cmp
mov
sub
and
lret
sub
cmp
and
cmp
mov
cmp
and
shll
and
mov
mov
mov
shll
dec
dec
push
inc
mov
and
daa
cmp
mov
mov
daa
xor
dec
mov
aas
mov
dec
lret
mov
mov
mov
mov
dec
int
shlb
cmpsl
ret
les
dec
sub
inc
mov
inc
mov
push
and
and
dec
aaa
inc
mov
shrl
iret
mov
mov
and
iret
and
cmp
leave
dec
and
inc
inc
inc
inc
aaa
test
daa
mov
xor
iret
dec
lds
test
and
push
and
and
ss
movsl
dec
and
aas
daa
inc
cmp
mov
and
mov
xor
mov
mov
mov
inc
leave
inc
aaa
inc
mov
mov
mov
cmp
shll
dec
cmp
leave
int
push
mov
es
inc
mov
mov
inc
movsb
xor
sarb
dec
mov
fidivs
ss
into
dec
movsb
enter
movsb
mov
and
xor
mov
dec
test
mov
enter
xor
mov
mov
inc
and
mov
dec
leave
fidivs
aaa
xor
inc
shll
movsl
dec
les
fisubs
xor
leave
fisubs
dec
inc
mov
inc
movsl
movsl
lret
mov
ds
movsl
xor
mov
inc
and
enter
ds
mov
mov
dec
xor
cmp
inc
mov
mov
cmp
mov
into
movsl
lds
and
push
xor
and
dec
int
inc
mov
fiadds
lret
inc
mov
ret
sarb
inc
mov
into
dec
cmp
mov
mov
xor
xor
dec
shlb
cmp
mov
cmp
mov
xor
rorb
mov
mov
daa
xor
mov
fidivrs
xor
cmp
test
daa
mov
cmp
movsb
into
cmp
mov
sub
cmp
inc
and
dec
mov
leave
into
mov
mov
and
aas
mov
mov
dec
dec
sarb
dec
movsb
cmp
dec
and
inc
xor
xor
int
xor
mov
sub
daa
movsb
and
enter
shlb
aaa
and
inc
ret
inc
mov
and
xor
daa
dec
and
push
les
ret
fimuls
dec
dec
ds
sarb
iret
and
mov
int
and
mov
incl
xor
subl
xor
mov
and
mov
or
mov
shrd
notl
shl
subl
xor
or
jmp
out
mov
loopne
les
push
mov
lcall
push
jmp
aas
and
mov
ds
inc
movsl
sub
shlb
inc
xor
movsb
and
test
and
push
leave
inc
cmp
les
dec
into
mov
movsl
sub
mov
cmp
inc
mov
inc
and
fiadds
inc
and
mov
mov
lret
xor
xor
movsb
xor
daa
movsl
into
lds
dec
mov
inc
into
mov
ret
dec
inc
test
mov
and
leave
int
xor
and
mov
mov
xor
cmp
mov
mov
and
inc
mov
test
ds
mov
aas
mov
inc
mov
int
ret
mov
and
mov
inc
rclb
mov
movsl
xor
mov
into
dec
cmp
mov
faddp
xor
inc
aaa
cmp
mov
and
rcl
and
mov
and
xor
mov
xor
aaa
cmpsl
and
mov
mov
les
shll
mov
les
leave
mov
lret
ss
mov
cmp
xor
and
cmp
mov
ds
mov
xor
cmp
mov
and
xor
xor
inc
inc
mov
inc
mov
test
mov
and
movsl
cmp
lds
mov
xor
dec
xor
cmp
and
inc
enter
dec
ret
fidivs
les
rorb
cmp
aaa
mov
and
xor
into
and
fisubs
and
dec
fisubs
dec
and
mov
mov
inc
dec
sub
lret
inc
mov
mov
lret
leave
mov
mov
rol
and
mov
les
ss
inc
inc
aaa
xor
movsl
dec
into
inc
and
movsb
movsl
test
movsb
and
mov
into
aaa
mov
mov
enter
aaa
cmp
leave
sub
daa
mov
mov
mov
enter
mov
mov
cmpsl
mov
cmp
rclb
push
into
mov
push
xor
aaa
daa
leave
fidivrs
lds
iret
mov
enter
int
xor
cmpsl
dec
mov
inc
inc
cmpsl
and
mov
into
mov
xor
leave
movsb
lret
cmpsl
push
ret
cmpsl
daa
aas
dec
and
cmpsl
mov
movsl
movsl
and
xor
sarb
mov
ss
shll
dec
inc
into
dec
mov
and
cmp
xor
les
shlb
xor
dec
dec
movsl
xor
and
shll
inc
cmp
sub
inc
mov
xor
daa
xor
and
es
cmp
lret
and
cmp
inc
dec
leave
cmp
xor
movsl
mov
inc
daa
leave
lret
mov
inc
lds
dec
sarb
xor
mov
xor
mov
dec
inc
leave
mov
les
enter
and
mov
aaa
mov
inc
leave
mov
xor
leave
xor
and
mov
inc
daa
fidivs
and
cmp
ret
mov
and
aaa
into
mov
shll
and
cmp
cmp
mov
and
dec
test
mov
mov
mov
negl
mov
xorl
shll
orl
xorl
subl
mov
mov
mov
xor
or
shr
sbbl
or
movl
cmp
jne
cmp
je
movl
jmp
add
mov
mov
xor
cmpl
jge
and
xorl
jmp
pushl
push
pushl
push
pushl
call
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
jmp
adc
fdivr
mov
idivl
jns
ds
jmp
jmp
lret
push
dec
daa
dec
iret
mov
cmp
les
int
and
mov
and
and
mov
dec
mov
mov
inc
dec
and
les
mov
mov
daa
and
mov
ret
push
mov
cmpsl
xor
dec
aaa
lret
mov
mov
mov
int
enter
int
and
movsb
xor
inc
mov
fisubs
cmp
xor
mov
mov
xor
into
ret
and
daa
dec
and
daa
dec
mov
mov
mov
xor
inc
into
ds
inc
xor
inc
dec
mov
and
dec
inc
cmpsl
mov
sub
daa
and
movsl
aaa
leave
mov
int
and
mov
ss
and
mov
mov
daa
mov
cmp
test
int
mov
mov
push
les
enter
push
aaa
mov
mov
mov
mov
ret
inc
leave
xor
mov
leave
mov
les
mov
inc
cmp
enter
dec
mov
dec
cmpsl
inc
aaa
mov
cmp
lret
mov
push
inc
mov
movsb
and
mov
xor
iret
and
dec
and
mov
and
sub
mov
mov
movsl
dec
mov
mov
int
mov
leave
enter
lret
cmpsl
int
enter
inc
mov
mov
lds
dec
cmpsl
ret
mov
mov
int
ss
inc
dec
inc
and
and
dec
and
mov
mov
mov
mov
rol
and
es
mov
and
ss
ds
fisubs
xor
xor
xor
xor
mov
into
dec
shlb
into
cmp
cmp
dec
mov
inc
mov
movsb
lret
dec
xor
mov
mov
inc
mov
cmp
inc
inc
sub
inc
mov
movsl
es
iret
leave
mov
ss
mov
enter
xor
daa
mov
mov
movsl
mov
leave
daa
mov
test
push
mov
leave
movsl
ss
int
xor
xor
push
mov
inc
cmp
mov
push
test
int
mov
mov
daa
mov
cmp
xor
mov
mov
xor
and
fidivrs
shll
rol
inc
aas
mov
cmp
and
ss
dec
and
cmp
xor
mov
shlb
lds
dec
es
mov
shll
lret
cmpsl
cmp
dec
mov
dec
test
lret
mov
ss
dec
xor
mov
inc
fmulp
into
cmp
enter
lret
les
mov
and
mov
aas
inc
mov
dec
inc
cmp
and
and
and
mov
aas
inc
into
int
cmp
and
lds
dec
xor
xor
cmpsl
leave
mov
rcll
inc
mov
inc
cmpsl
and
xor
mov
ret
inc
dec
and
leave
xor
xor
mov
dec
lret
les
mov
dec
mov
dec
inc
mov
xor
inc
aaa
mov
sub
mov
mov
iret
mov
enter
push
add
lods
rolb
mov
mov
jmp
repz
out
sti
jae
dec
hlt
orl
jmp
leave
mov
mov
inc
dec
sarb
inc
cmp
fisubs
mov
mov
inc
and
enter
and
into
xor
dec
xor
dec
iret
lds
and
mov
inc
shlb
and
inc
dec
inc
test
enter
dec
aas
enter
lret
mov
mov
aas
cmp
into
leave
cmp
lret
into
inc
mov
ds
daa
mov
mov
daa
cmp
mov
es
and
mov
int
cmp
inc
xor
cmpsl
iret
inc
enter
mov
sub
dec
fidivrs
aaa
shlb
es
shll
mov
movsl
mov
inc
mov
mov
inc
int
test
into
enter
xor
into
movsb
mov
cmp
dec
mov
mov
and
test
mov
movsb
mov
xor
sub
mov
cmp
es
and
inc
mov
mov
dec
mov
xor
inc
and
xor
test
and
mov
fiadds
push
mov
int
daa
mov
mov
lret
inc
inc
mov
inc
mov
sarl
into
rol
ror
shll
rol
and
inc
movsb
dec
xor
dec
mov
fisubs
xor
aas
mov
and
mov
lds
push
and
lret
fidivrs
inc
mov
aas
inc
fiadds
mov
cmp
mov
dec
inc
ss
xor
cmp
leave
mov
int
ret
cmp
leave
mov
movsb
dec
roll
inc
mov
xor
and
inc
leave
cmpsl
and
shlb
daa
les
dec
and
inc
es
ror
inc
dec
mov
mov
mov
mov
dec
mov
mov
aas
shll
into
and
roll
inc
leave
aas
rclb
push
shrb
shrl
dec
xor
movsl
cmpsl
ret
movsl
mov
inc
lret
mov
leave
movsl
mov
rol
mov
int
fiadds
cmp
mov
mov
mov
and
mov
enter
and
dec
lret
mov
inc
aaa
mov
cmp
mov
cmp
es
les
shlb
xor
mov
and
and
test
xor
mov
cmpsl
les
xor
inc
xor
movsl
test
mov
mov
mov
dec
inc
dec
mov
sub
dec
xor
shlb
and
aas
mov
into
dec
and
and
cmp
dec
mov
sub
cmp
mov
rorb
enter
es
dec
shlb
mov
mov
ds
daa
test
lds
dec
dec
movsb
ds
and
mov
mov
inc
mov
mov
rol
mov
dec
int
and
leave
mov
mov
mov
xor
enter
and
leave
mov
inc
mov
inc
xor
and
cmpsl
ds
inc
cmpsl
mov
dec
shrl
mov
xor
leave
inc
xor
cmp
jge
shr
mov
xor
shl
or
mov
mov
jmp
imull
insb
call
call
jae
sbb
jmp
inc
xor
aaa
rolb
into
test
dec
cmp
ret
lds
mov
xor
mov
inc
dec
cmp
xor
sub
shlb
inc
mov
mov
cmpsl
fidivrs
inc
mov
dec
enter
ss
inc
mov
mov
test
inc
and
mov
and
and
mov
mov
mov
and
cmp
dec
inc
and
cmp
xor
mov
dec
enter
and
xor
int
daa
xor
and
and
and
mov
cmp
aas
cmpsl
mov
dec
sub
mov
mov
mov
mov
mov
cmpsl
ret
fidivrs
push
cmp
faddp
cmp
xor
mov
cmp
shlb
daa
movsb
mov
ret
mov
lret
dec
es
mov
mov
and
mov
cmp
mov
lret
mov
xor
leave
mov
xor
ds
ds
mov
dec
ror
dec
mov
aas
and
mov
dec
mov
rorb
xor
mov
mov
mov
mov
dec
daa
xor
and
cmp
ret
inc
dec
dec
ret
daa
mov
mov
dec
mov
dec
mov
es
mov
movsl
dec
mov
xor
and
mov
iret
sarl
inc
iret
mov
xor
xor
ret
lds
inc
sarb
and
mov
mov
xor
aaa
les
dec
mov
cmpsl
leave
dec
xor
shll
dec
push
mov
mov
mov
mov
mov
and
dec
mov
rorb
and
mov
mov
dec
xor
fisubs
xor
dec
dec
daa
mov
shrl
xor
ret
movsl
test
sub
int
movsl
mov
inc
lret
into
xor
mov
inc
inc
les
dec
lret
mov
inc
mov
inc
les
and
and
mov
inc
rcll
ret
dec
mov
aaa
inc
mov
inc
mov
xor
rcl
mov
mov
xor
ret
shlb
shlb
mov
and
mov
inc
sarb
mov
xor
mov
ss
and
dec
mov
roll
and
mov
mov
xor
mov
sub
test
cmpsl
inc
daa
enter
ror
cmp
shlb
xor
xor
cmp
cmp
dec
xor
daa
mov
dec
ret
mov
cmpsl
lds
shlb
inc
fimuls
enter
inc
daa
inc
and
int
ss
xor
aaa
enter
mov
mov
xor
and
mov
lret
inc
mov
mov
mov
inc
dec
int
movsl
movsb
enter
mov
dec
shrb
cmp
lret
xor
movsb
mov
cmp
and
mov
mov
int
cmp
ret
ss
and
inc
mov
xor
cmp
movsl
mov
xor
mov
mov
mov
leave
push
mov
cmpsl
movsb
mov
mov
cmp
rorb
movsb
ret
rorl
add
add
xchg
mov
je
jl
stos
xchg
add
outsl
jl
out
and
jmp
mov
shlb
mov
ror
and
rol
lds
xor
inc
fisubs
mov
leave
xor
movsl
mov
and
into
mov
fidivs
mov
inc
iret
dec
and
dec
and
shrb
ss
push
int
iret
and
sub
int
xor
dec
shlb
xor
inc
ss
xor
mov
mov
mov
mov
aaa
sub
mov
shll
rol
inc
mov
mov
cmpsl
and
mov
mov
mov
es
cmp
es
dec
aaa
and
inc
iret
mov
test
test
xor
mov
mov
les
and
ss
mov
mov
enter
mov
cmp
and
movsl
and
push
and
aaa
dec
les
cmpsl
mov
ror
inc
aas
inc
rol
mov
xor
xor
and
sub
xor
mov
lret
int
xor
lret
lret
inc
mov
dec
mov
dec
mov
cmpsl
aas
inc
rorl
mov
movl
ds
ss
mov
cmp
es
mov
cmpsl
mov
inc
mov
into
mov
xor
xor
dec
cmp
mov
cmpsl
mov
sub
inc
inc
mov
cmp
xor
mov
mov
ss
iret
ds
cmpsl
movsl
mov
mov
enter
mov
and
sarb
lret
mov
cmp
ret
xor
mov
inc
lret
mov
push
inc
inc
mov
inc
ds
and
inc
int
ror
inc
enter
mov
test
cmp
daa
ds
and
ds
aas
inc
es
and
xor
enter
dec
inc
shlb
test
mov
aas
and
cmpsl
dec
dec
mov
sarb
fisubs
mov
and
mov
ret
inc
movsb
fidivs
and
ret
cmp
roll
and
dec
cmp
inc
enter
xor
xor
dec
fidivrs
rclb
aaa
shll
push
push
shlb
and
lret
mov
xor
cmp
ss
xor
cmp
cmp
dec
dec
mov
shrb
dec
int
xor
xor
mov
xor
mov
int
dec
ret
xor
lret
cmp
cmp
mov
and
lds
xor
ds
mov
test
cmp
mov
mov
and
and
and
dec
cmp
mov
mov
dec
dec
mov
and
ss
cmp
and
mov
and
and
mov
faddp
into
enter
enter
test
push
mov
and
mov
mov
sarb
inc
sub
enter
mov
and
xor
mov
and
les
inc
iret
ss
mov
movsl
inc
mov
les
lret
enter
xor
dec
lret
xor
dec
mov
inc
movsb
enter
inc
dec
test
mov
mov
mov
mov
inc
ret
cmp
inc
mov
mov
aaa
dec
mov
leave
sarb
aas
dec
mov
mov
push
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
aas
inc
push
mov
jae
les
cwtl
pop
cli
popf
jmp
jmp
dec
mov
aas
and
int
aas
into
mov
mov
xor
mov
aas
mov
mov
cmp
inc
dec
mov
movsl
and
mov
xor
daa
daa
mov
inc
and
mov
mov
ret
mov
mov
lret
aaa
into
and
xor
dec
push
xor
cmp
inc
xor
xor
dec
inc
inc
shlb
xor
and
dec
sarb
cmpsl
xor
mov
sarb
mov
mov
inc
dec
int
dec
mov
xor
leave
ds
cmp
shll
xor
movsb
dec
inc
iret
mov
mov
mov
daa
mov
test
mov
sarb
mov
movsb
iret
and
shll
les
les
dec
movsl
dec
les
cmp
mov
leave
mov
mov
mov
mov
inc
mov
xor
cmp
mov
cmp
and
inc
mov
mov
int
mov
cmp
and
mov
and
ret
push
and
es
movsb
les
mov
and
dec
xor
dec
mov
and
dec
inc
and
mov
mov
ret
les
dec
mov
xor
les
lret
ds
xor
push
mov
dec
cmp
movsb
mov
xor
into
mov
ds
mov
les
mov
mov
cmp
lds
mov
mov
and
xor
lret
ret
cmp
cmp
into
sarb
mov
mov
int
mov
iret
push
xor
mov
movsl
inc
into
mov
cmp
cmpsl
mov
mov
inc
mov
mov
iret
dec
mov
mov
and
es
cmp
iret
mov
ret
movsl
daa
ret
mov
inc
mov
mov
dec
cmp
cmp
push
iret
xor
iret
inc
inc
ret
sub
dec
xor
leave
dec
mov
mov
lret
movsb
inc
dec
cmp
inc
sub
mov
mov
mov
mov
fidivs
xor
dec
aaa
mov
and
into
xor
inc
sarb
cmp
inc
mov
dec
and
movsb
mov
mov
inc
dec
test
cmpsl
ficoms
int
sarb
mov
lds
mov
and
inc
inc
and
and
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
shll
mov
movsb
test
mov
ret
xor
inc
shlb
mov
int
cmp
mov
cmp
aaa
test
inc
dec
and
sub
mov
dec
and
mov
aas
mov
sub
movsl
mov
lret
inc
movsl
iret
mov
mov
and
shll
and
mov
int
lret
enter
and
dec
ret
aas
xor
es
and
and
iret
inc
and
mov
inc
sarl
lret
mov
dec
movsl
fidivrs
ds
cmp
mov
int
int
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
sahf
pop
mov
movsl
xor
jbe
jmp
sub
cld
push
jmp
xor
mov
mov
mov
mov
leave
mov
les
enter
dec
dec
lds
inc
aas
enter
mov
dec
into
cmp
inc
mov
fidivs
mov
mov
cmp
daa
leave
ss
mov
and
mov
mov
mov
push
mov
inc
mov
ss
fidivs
aaa
ds
mov
mov
and
dec
lret
mov
mov
xor
inc
movsb
mov
dec
mov
leave
daa
mov
movsb
fidivs
sub
push
mov
mov
and
cmp
mov
mov
rol
test
faddp
mov
mov
test
mov
daa
into
ret
mov
shlb
movsb
inc
cmp
xor
les
mov
and
mov
cmp
dec
leave
movsb
cmpsl
inc
and
cmp
ret
and
mov
ss
aaa
into
inc
es
mov
dec
mov
daa
movsl
push
mov
cmpsl
mov
es
iret
and
movsl
daa
les
inc
dec
dec
mov
mov
ret
ret
mov
mov
rolb
shlb
inc
mov
lds
movsl
mov
mov
dec
mov
xor
dec
mov
movsb
inc
xor
cmp
mov
and
ds
ror
leave
iret
mov
les
xor
ret
mov
mov
ret
xor
ss
mov
dec
xor
shll
and
cmp
mov
int
inc
inc
dec
dec
and
xor
xor
mov
inc
and
mov
movsl
enter
mov
lret
mov
cmpsl
push
aaa
enter
ret
mov
les
inc
cmp
xor
leave
cmp
aaa
mov
enter
inc
mov
and
cmp
int
inc
mov
mov
ds
mov
enter
cmp
inc
mov
cmp
es
into
mov
movsl
mov
xor
int
and
mov
leave
mov
es
cmp
int
ret
into
ss
and
mov
xor
mov
mov
test
rorb
sub
int
aas
aas
mov
rorb
and
movsb
into
cmp
cmp
xor
daa
iret
dec
xor
into
mov
lret
mov
mov
dec
mov
inc
mov
mov
cmp
xor
xor
xor
inc
ss
mov
rol
mov
mov
mov
sub
mov
movsb
enter
cmp
rol
cmpsl
aaa
fidivrs
movsb
movsb
inc
and
mov
mov
les
xor
cmp
dec
rol
mov
sarb
mov
mov
xor
ror
test
dec
lret
ds
ror
inc
int
lret
sarl
inc
enter
xor
mov
and
mov
enter
mov
movsl
inc
inc
mov
and
add
shlb
rorb
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
jmp
shr
out
data16
jle
in
subl
jmp
jmp
fisubs
rol
mov
mov
shlb
xor
mov
dec
and
aas
cmp
and
daa
inc
enter
movsb
and
xor
mov
mov
mov
and
inc
xor
daa
movsb
les
and
lret
mov
mov
enter
xor
les
and
mov
movsb
inc
ds
daa
mov
ss
mov
mov
iret
rcr
sub
cmp
xor
mov
xor
enter
shlb
cmp
mov
inc
xor
mov
dec
sarb
movsl
mov
mov
mov
and
xor
int
mov
mov
ds
xor
inc
aaa
movsb
mov
ds
shlb
dec
shll
mov
cmp
inc
mov
shlb
mov
and
shlb
mov
inc
aas
dec
into
enter
inc
movsl
mov
dec
fisubs
test
inc
mov
sarl
mov
enter
inc
mov
movsb
inc
xor
shrb
mov
aaa
shlb
mov
mov
xor
cmpsl
mov
mov
and
enter
mov
mov
dec
movsl
iret
iret
and
mov
leave
iret
inc
leave
sub
mov
aas
movsb
cmp
xor
dec
iret
mov
inc
cmp
mov
xor
xor
xor
dec
dec
es
rorb
dec
into
xor
and
test
daa
mov
and
push
xor
int
aaa
rolb
mov
lds
and
push
mov
inc
dec
inc
mov
ss
inc
mov
shll
cmp
cmp
mov
mov
inc
mov
rorl
push
mov
dec
mov
rcl
daa
dec
and
ds
and
aaa
push
lret
shll
aas
inc
int
xor
aaa
mov
mov
leave
mov
xor
mov
aas
ds
xor
mov
aas
and
inc
xor
iret
aaa
roll
mov
dec
mov
ds
xor
inc
lds
dec
test
test
mov
lds
aaa
aaa
cmpsl
cmp
cmp
and
and
enter
mov
aaa
inc
mov
ds
dec
inc
cmp
mov
xor
inc
lds
lds
mov
cmp
mov
dec
xor
and
rolb
ret
xor
aaa
leave
mov
lret
mov
mov
ror
mov
aaa
inc
inc
shll
test
and
mov
mov
es
dec
dec
shll
inc
les
ret
mov
ret
mov
ds
leave
mov
mov
cmp
ss
dec
dec
aas
aaa
ret
movsl
and
mov
leave
inc
xor
cmp
inc
mov
mov
cmpsl
and
mov
push
mov
mov
inc
push
mov
mov
mov
test
mov
mov
mov
and
mov
cmp
inc
mov
sarl
sub
sub
test
inc
inc
es
xor
ret
cmpsl
dec
mov
movsl
aaa
mov
dec
mov
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
jmp
or
xchg
repz
insb
insb
adc
add
js
xchg
jmp
xor
shll
mov
mov
cmp
iret
dec
aas
test
mov
mov
and
xor
mov
and
test
movsb
dec
mov
mov
xor
mov
dec
and
mov
inc
mov
xor
ret
test
mov
fisubs
movsb
aaa
xor
sub
mov
fisubs
cmp
ds
and
mov
roll
ds
push
mov
ret
sub
dec
sarb
fisubs
shlb
daa
mov
dec
dec
int
and
and
into
push
cmp
movsb
and
and
inc
inc
aas
cmp
dec
mov
mov
xor
mov
mov
xor
dec
iret
inc
movsb
mov
shll
daa
and
mov
mov
inc
test
mov
dec
mov
ret
mov
mov
xor
mov
cmp
mov
inc
iret
and
xor
daa
mov
xor
aaa
and
cmpsl
cmp
test
mov
mov
into
mov
mov
inc
dec
rol
and
cmp
and
cmp
push
xor
mov
shlb
dec
cmpsl
mov
mov
lds
sub
les
cmp
sub
aaa
mov
mov
mov
leave
xor
ds
xor
dec
dec
mov
inc
mov
inc
and
inc
push
leave
aas
xor
mov
mov
mov
mov
xor
mov
inc
and
fidivrs
xor
dec
mov
mov
dec
leave
ss
dec
mov
mov
movsb
mov
mov
mov
sub
ret
cmpsl
cmp
inc
mov
dec
les
ss
mov
mov
xor
cmp
xor
les
and
cmp
rol
inc
into
mov
and
dec
push
fiadds
inc
mov
xor
leave
mov
and
shlb
dec
xor
push
mov
inc
xor
mov
daa
dec
cmp
into
mov
inc
aaa
ret
shlb
movsb
dec
and
fisubs
dec
and
cmp
mov
daa
dec
ss
mov
xor
mov
enter
inc
iret
daa
dec
mov
mov
movsb
cmpsl
dec
xor
mov
mov
ss
cmpsl
xor
dec
es
mov
mov
lret
cmp
lret
lret
mov
cmp
and
leave
les
xor
xor
sarb
fisubs
daa
mov
cmp
rolb
cmp
cmpsl
dec
and
push
and
movsl
int
inc
dec
sub
movsb
xor
mov
inc
iret
movsl
ret
and
mov
cmp
inc
and
xor
and
leave
mov
aaa
lret
les
ss
test
mov
xor
movsb
dec
mov
inc
iret
xor
and
inc
mov
les
dec
mov
and
lret
mov
mov
mov
shrb
mov
inc
enter
mov
dec
and
ror
movsb
ret
cmp
into
xor
dec
mov
lds
inc
sarb
mov
add
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
ret
sbb
mov
push
jns
add
test
jmp
inc
dec
dec
push
dec
inc
mov
mov
mov
and
and
and
test
mov
mov
test
ret
xor
aaa
cmp
sarb
shll
and
mov
inc
xor
cmpsl
mov
mov
cmpsl
daa
test
xor
ret
test
dec
inc
inc
into
es
cmp
vcmpps
dec
mov
daa
xor
inc
mov
aas
mov
lds
dec
mov
dec
mov
cmpsl
mov
test
mov
leave
enter
mov
mov
mov
mov
mov
mov
inc
inc
xor
dec
test
inc
aaa
lret
inc
and
mov
rol
cmp
mov
mov
mov
mov
mov
xor
fidivs
mov
dec
dec
int
mov
mov
inc
dec
leave
mov
xor
lret
mov
mov
xor
ss
cmp
xor
into
xor
cmp
dec
mov
inc
shll
mov
mov
push
mov
mov
enter
and
and
inc
aaa
xor
ret
rol
iret
inc
ss
enter
mov
inc
mov
movsb
mov
dec
mov
mov
mov
mov
shrb
mov
shlb
fisubs
leave
movsl
fidivs
mov
mov
cmpsl
mov
mov
and
mov
inc
mov
movsb
leave
inc
push
lds
inc
mov
and
sub
mov
int
les
lret
inc
mov
mov
mov
fimuls
mov
sub
test
int
push
lds
sarb
inc
inc
dec
xor
mov
and
mov
cmpsl
lret
aaa
lret
es
fimuls
cmp
and
lret
mov
push
lret
enter
mov
mov
dec
les
inc
inc
movsb
daa
inc
mov
mov
aaa
and
mov
enter
mov
and
push
mov
and
movsb
mov
int
mov
mov
shlb
and
cmp
dec
enter
ds
shlb
aas
mov
enter
mov
push
cmp
ds
leave
mov
ret
cmp
xor
cmp
lds
mov
inc
cmp
and
cmp
dec
mov
mov
and
inc
dec
leave
inc
mov
lds
inc
dec
mov
es
inc
aas
cmp
inc
inc
xor
inc
fidivs
mov
movsl
mov
test
mov
mov
and
shlb
iret
and
mov
ss
and
inc
cmpsl
xor
and
iret
inc
mov
cmpsl
mov
xor
xor
test
into
inc
mov
and
cmpsl
and
iret
mov
xor
inc
mov
mov
and
inc
xor
movsl
aaa
int
and
ss
mov
int
movsl
mov
dec
inc
dec
dec
leave
mov
mov
test
mov
mov
dec
xor
fidivrs
inc
dec
xor
aaa
mov
mov
mov
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
mov
imul
leave
nop
jae
mov
add
mov
jmp
and
dec
int
and
ficoms
dec
and
mov
xor
movsl
inc
cmp
dec
and
mov
mov
and
mov
daa
inc
inc
mov
daa
xor
mov
mov
mov
and
mov
movsl
and
mov
test
mov
and
inc
xor
into
into
shlb
mov
xor
aas
dec
mov
dec
ds
ret
inc
ss
iret
mov
and
int
mov
into
mov
inc
cmpsl
dec
mov
mov
lret
movsl
movsl
movsl
dec
shlb
cmpsl
les
inc
int
and
mov
mov
mov
and
shlb
xor
inc
and
xor
dec
lret
dec
dec
xor
les
mov
movsl
dec
push
mov
inc
and
into
inc
inc
and
mov
mov
dec
mov
inc
xor
and
lds
mov
rol
dec
dec
enter
xor
movsb
int
mov
xor
inc
xor
into
xor
es
and
and
mov
mov
test
test
cmp
aaa
mov
mov
mov
mov
inc
dec
mov
sub
mov
shlb
lret
mov
ret
xor
mov
mov
and
mov
mov
mov
fisubrs
mov
mov
mov
roll
mov
mov
rol
cmp
sub
dec
xor
mov
mov
les
aaa
push
aas
aas
leave
inc
les
sub
shlb
mov
cmp
inc
test
push
lds
aas
iret
mov
mov
xor
mov
shrb
ret
into
ss
mov
dec
and
dec
shrb
xor
mov
and
ds
mov
cmp
and
mov
push
sub
cmp
mov
daa
and
into
mov
enter
xor
test
leave
lds
ss
enter
aaa
ds
mov
int
mov
ret
mov
and
dec
int
aas
mov
mov
lret
xor
push
mov
cmpsl
fidivs
inc
dec
ror
xor
daa
movl
movsb
enter
cmp
cmp
mov
inc
xor
inc
mov
mov
cmp
dec
iret
mov
and
inc
sub
enter
iret
leave
dec
shlb
xor
int
int
iret
les
mov
lret
inc
mov
xor
and
xor
enter
xor
dec
int
xor
inc
and
rorl
and
inc
dec
aas
test
dec
cmp
and
dec
movsb
cmp
mov
ds
xor
mov
shll
mov
cmp
mov
and
leave
iret
shll
cmp
aaa
enter
int
and
enter
movsl
cmp
inc
mov
and
les
test
test
mov
inc
cmp
into
dec
xor
lret
ds
dec
lret
aas
aas
ret
mov
dec
inc
leave
lds
xor
mov
lds
dec
mov
xor
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
orb
push
lods
jb
imul
cmpl
mov
jmp
mov
es
cmp
les
cmp
mov
ds
sarl
roll
aas
cmpsl
inc
ss
leave
aaa
cmp
int
es
les
inc
mov
dec
sub
cmp
mov
mov
into
dec
ret
and
sub
cmp
dec
xor
and
test
movsb
mov
movsb
test
rorl
shlb
and
inc
into
cmpsl
mov
test
ds
inc
ret
dec
dec
ret
mov
dec
mov
mov
inc
lds
mov
ror
mov
inc
inc
iret
cmp
enter
daa
dec
mov
inc
dec
mov
and
xor
inc
xor
inc
mov
movsl
dec
movsb
iret
test
int
cmp
iret
cmp
and
and
iret
inc
and
mov
mov
and
mov
and
dec
mov
leave
aaa
inc
fisubs
mov
ret
inc
mov
aas
mov
xor
movsb
xor
test
xor
ret
fidivrs
and
mov
dec
mov
and
int
mov
dec
rol
cmp
mov
dec
xor
and
and
cmpsl
lret
dec
and
mov
mov
mov
daa
mov
aaa
and
ds
fimuls
es
cmp
mov
cmp
leave
aas
and
and
movsb
sarl
push
mov
les
aaa
les
aas
ret
mov
dec
mov
dec
daa
inc
xor
mov
mov
mov
mov
and
inc
dec
dec
inc
and
and
inc
mov
mov
and
xor
mov
mov
xor
lds
dec
inc
cmp
and
cmp
inc
dec
mov
cmp
and
cmpsl
dec
inc
and
cmp
aaa
int
aaa
rorb
inc
ror
dec
leave
inc
mov
mov
and
movsb
mov
and
leave
mov
int
mov
aas
dec
mov
sub
movsb
leave
and
cmp
inc
mov
enter
dec
mov
cmp
sub
dec
inc
inc
shlb
movsl
into
movsb
movsb
mov
les
roll
movsb
sub
mov
lds
cmp
mov
xor
movsb
aas
lret
enter
xor
dec
dec
push
inc
enter
les
mov
mov
xor
shlb
ds
iret
into
into
mov
leave
fisubs
shlb
and
mov
cmp
and
xor
int
mov
movsl
ds
dec
inc
sub
enter
lret
and
inc
aaa
xor
xor
int
mov
inc
mov
inc
inc
mov
inc
mov
mov
lret
daa
xor
inc
push
cmp
enter
lds
leave
and
ss
inc
mov
shlb
cmp
vcmpps
cmpsl
movsb
dec
inc
sub
inc
movsl
xor
rorb
lds
mov
lret
les
ret
enter
xor
push
dec
ds
aas
int
daa
inc
mov
dec
inc
inc
iret
ds
aas
movsb
lret
xor
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
inc
sub
jo
mov
jne
push
xchg
pop
out
jmp
jmp
mov
mov
xor
into
xor
mov
ss
rorl
lds
mov
into
lret
inc
mov
mov
int
aas
push
sub
and
ds
ds
lret
and
mov
mov
dec
xor
leave
shlb
inc
mov
mov
fiadds
xor
mov
mov
ret
es
mov
lds
into
iret
dec
ret
mov
rclb
dec
cmp
ds
xor
dec
and
iret
inc
mov
xor
mov
ror
faddp
xor
mov
cmp
inc
dec
and
and
leave
cmpsl
lret
ret
daa
inc
lds
dec
and
mov
push
and
sub
daa
shlb
mov
ror
mov
ss
mov
shlb
xor
dec
cmp
cmp
inc
lret
cmp
and
and
aaa
inc
cmp
mov
sub
lds
and
aas
test
daa
mov
es
mov
xor
daa
aas
cmp
cmpsl
movsl
movsb
mov
movsl
mov
xor
mov
iret
xor
and
and
sarb
push
dec
leave
and
mov
cmp
dec
mov
dec
and
mov
mov
int
cmpsl
mov
mov
xor
xor
daa
inc
leave
mov
cmpsl
aas
cmpsl
mov
dec
cmp
lds
mov
xor
mov
es
enter
movsl
mov
enter
inc
xor
mov
ret
mov
inc
and
lds
into
push
iret
inc
ds
les
mov
movsl
dec
sub
daa
int
mov
test
inc
dec
sub
shll
inc
daa
iret
iret
enter
daa
cmp
inc
inc
inc
mov
shlb
mov
ficoms
dec
and
lret
and
les
dec
push
es
mov
mov
and
ret
xor
int
dec
test
ss
lds
mov
ret
sub
dec
mov
dec
mov
fimuls
ds
dec
and
cmp
mov
dec
xor
cmp
mov
sub
dec
into
movsb
inc
movsl
enter
push
aaa
es
mov
shll
mov
xor
iret
daa
dec
mov
mov
shll
movsl
inc
mov
push
ret
mov
xor
es
and
test
sarl
ror
rclb
inc
and
inc
and
mov
xor
push
roll
movsb
cmp
cmp
sub
dec
inc
and
mov
fidivs
mov
sarl
fidivs
mov
sub
mov
mov
xor
fidivs
xor
sarb
iret
inc
xor
mov
mov
mov
aas
cmp
xor
mov
cmp
xor
mov
xor
sub
sarb
mov
mov
and
mov
enter
mov
mov
inc
mov
and
mov
rorl
lds
and
ss
shlb
mov
inc
add
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
icebp
dec
sahf
mov
jecxz
xchg
repnz
jmp
inc
movsl
mov
sub
mov
movsl
aas
aaa
inc
mov
dec
and
ret
and
test
test
mov
mov
mov
into
sarb
enter
fmulp
mov
and
and
movsb
mov
lds
iret
inc
mov
rol
mov
cmp
mov
and
ss
shlb
xor
mov
aaa
inc
rol
mov
and
test
rol
cmp
dec
ss
mov
iret
mov
movsl
and
inc
xor
cmp
ret
mov
dec
mov
mov
xor
daa
mov
fidivrs
cmp
and
xor
cmp
dec
fisubs
mov
dec
mov
and
cmpsl
mov
into
mov
dec
and
rorb
and
mov
test
movsb
cmp
ds
mov
and
mov
fimuls
int
inc
and
mov
lret
mov
lret
movsb
mov
dec
xor
xor
ret
mov
cmpsl
mov
mov
cmp
xor
mov
xor
iret
and
and
lret
push
test
and
mov
roll
cmpsl
mov
mov
mov
lret
mov
dec
iret
inc
inc
ror
ss
aas
mov
shll
inc
mov
mov
ss
cmpsl
xor
dec
mov
mov
mov
and
and
fiadds
dec
sub
and
xor
xor
ret
xor
iret
mov
inc
enter
dec
dec
iret
enter
cmp
lret
xor
mov
cmp
and
cmp
mov
mov
inc
into
mov
ss
xor
and
sarb
inc
xor
mov
mov
mov
mov
daa
leave
movsl
inc
leave
inc
aaa
cmpsl
and
mov
and
inc
dec
iret
cmp
mov
inc
mov
xor
mov
movsb
inc
mov
xor
daa
movsl
inc
mov
cmp
push
fisubs
shll
inc
xor
movsb
cmpsl
and
and
inc
shlb
mov
and
dec
mov
int
mov
mov
dec
ds
lds
leave
movsl
ret
mov
xor
and
into
push
mov
sarl
mov
shll
mov
movsl
sarl
leave
movsl
dec
dec
enter
and
mov
mov
sarl
inc
ds
xor
dec
mov
int
mov
daa
inc
mov
aas
lret
dec
dec
lds
movsl
ds
xor
inc
mov
cmp
xor
and
mov
ss
into
mov
mov
dec
dec
xor
leave
mov
enter
aas
mov
mov
les
leave
mov
mov
inc
and
test
mov
mov
and
and
dec
lds
inc
mov
xor
ds
and
and
enter
iret
dec
and
xor
cmp
lds
mov
xor
mov
mov
test
aaa
and
into
daa
dec
and
shlb
iret
shlb
int
mov
int
and
xor
dec
enter
shrd
xor
shr
mov
mov
xor
or
jmp
mov
inc
in
fs
dec
imul
loop
add
jmp
jmp
mov
mov
mov
and
dec
mov
xor
mov
cmp
inc
mov
test
ds
inc
dec
and
mov
mov
push
mov
ret
cmpsl
sub
xor
test
mov
rcll
xor
sub
ds
mov
dec
ret
dec
inc
xor
enter
cmp
dec
mov
xor
into
movsl
and
lret
mov
movl
ret
aas
dec
les
mov
inc
inc
push
mov
mov
and
test
mov
mov
sub
push
inc
mov
cmp
cmp
aaa
push
mov
xor
aaa
dec
mov
mov
sarl
inc
xor
and
cmp
xor
and
shll
es
inc
inc
xor
dec
and
dec
inc
and
test
and
mov
inc
xor
dec
xor
aaa
mov
mov
xor
iret
mov
and
ss
and
and
and
mov
mov
dec
and
mov
shll
xor
cmp
mov
mov
dec
cmp
rol
mov
cmp
and
and
enter
shlb
rorl
and
dec
cmp
mov
test
into
dec
ds
and
cmpsl
xor
mov
mov
dec
lret
xor
dec
mov
inc
dec
mov
lret
inc
mov
inc
dec
cmp
les
daa
movsb
mov
les
mov
inc
and
mov
rolb
inc
ds
dec
dec
aaa
xor
mov
and
and
lds
fidivrs
and
es
aas
mov
mov
push
ds
into
cmpsl
push
dec
and
shll
cmpsl
and
mov
and
and
aaa
lds
inc
mov
aas
mov
cmp
test
aaa
leave
push
movsb
xor
inc
test
xor
mov
lret
mov
dec
ds
xor
dec
es
leave
and
dec
dec
mov
test
enter
daa
mov
mov
dec
movsl
lds
mov
shlb
dec
ds
inc
mov
lret
and
es
fimuls
inc
dec
mov
mov
inc
mov
ds
les
mov
mov
leave
daa
and
and
daa
xor
lret
int
xor
xor
mov
inc
and
into
lds
ds
aaa
mov
mov
inc
daa
cmpsl
inc
mov
mov
and
ds
leave
and
mov
dec
and
and
ror
leave
mov
mov
xor
rorl
shlb
dec
movsl
cmp
and
ss
cmp
ds
and
mov
les
enter
mov
mov
xor
and
es
test
enter
iret
movsl
rolb
mov
and
ds
es
int
and
cmp
mov
movsl
inc
mov
mov
movsl
xor
and
and
rorl
mov
dec
mov
dec
ror
es
dec
or
loop
mov
mov
mov
mov
jmp
push
orb
arpl
or
adc
jmp
jmp
mov
xor
inc
mov
mov
sarb
mov
aas
mov
inc
push
mov
shlb
mov
xor
dec
dec
int
mov
mov
mov
mov
mov
xor
mov
mov
xor
cmp
and
mov
test
dec
mov
mov
mov
enter
xor
dec
inc
movsb
mov
xor
dec
aaa
cmp
mov
mov
inc
cmp
mov
mov
mov
xor
roll
push
cmp
enter
movsl
dec
sub
inc
push
mov
mov
inc
mov
ss
lret
mov
push
and
movsb
dec
shll
dec
xor
inc
mov
movsb
and
mov
inc
mov
lret
and
push
mov
xor
cmp
mov
es
inc
aaa
xor
mov
and
mov
sub
and
push
sub
lret
inc
dec
daa
and
and
inc
cmpsl
inc
mov
dec
fidivs
enter
inc
mov
roll
and
mov
dec
mov
xor
and
test
fidivs
fmulp
mov
daa
les
mov
dec
into
inc
cmp
lret
mov
fisubs
and
into
movsl
mov
ss
mov
les
xor
aaa
dec
lret
xor
mov
les
mov
test
xor
xor
les
es
roll
mov
mov
and
dec
cmp
enter
mov
xor
mov
xor
mov
fidivs
iret
mov
cmpsl
mov
dec
xor
dec
and
leave
lret
inc
inc
mov
ret
les
lret
mov
cmp
mov
xor
mov
inc
mov
mov
mov
mov
leave
shlb
shll
iret
and
mov
mov
cmpsl
xor
int
ds
int
mov
mov
sub
mov
cmp
and
dec
xor
xor
cmpsl
iret
inc
aaa
xor
and
dec
and
and
and
les
push
and
inc
ret
test
mov
xor
cmp
dec
inc
fisubs
enter
inc
mov
and
mov
daa
inc
and
ss
sarl
mov
xor
and
dec
cmp
dec
es
xor
into
mov
es
mov
movsb
mov
sub
mov
mov
leave
xor
sarl
xor
xor
mov
inc
mov
push
into
cmp
mov
and
xor
inc
push
inc
inc
inc
inc
int
mov
mov
mov
inc
rol
lds
es
mov
inc
and
mov
leave
cmp
test
mov
inc
shll
movsb
into
movsl
and
mov
dec
ror
mov
xor
dec
dec
cmp
mov
ret
int
mov
cmp
dec
aas
ds
xor
les
mov
into
cmp
ss
dec
daa
lds
cmp
movsl
mov
test
push
lods
ret
leave
or
jmp
jbe
mov
arpl
jbe
add
js
mov
jmp
iret
sub
mov
leave
sarl
mov
cmpsl
ss
aas
xor
xor
rol
dec
inc
cmp
dec
mov
dec
xor
es
mov
rorb
rorb
xor
mov
dec
and
inc
ds
es
enter
mov
iret
xor
dec
mov
and
int
mov
mov
xor
sarb
dec
aaa
ret
xor
daa
and
les
mov
and
mov
xor
movsb
cmpsl
mov
inc
cmpsl
mov
fmulp
and
aaa
xor
mov
roll
mov
inc
inc
rol
and
daa
mov
dec
movsl
les
es
cmp
xor
mov
enter
shll
xor
lret
mov
mov
and
and
mov
and
and
mov
fidivrs
mov
and
les
push
mov
ss
mov
cmp
mov
inc
mov
xor
mov
lret
mov
mov
mov
aaa
mov
mov
inc
mov
enter
mov
mov
and
inc
test
dec
mov
into
test
dec
les
leave
and
xor
into
cmp
mov
ss
ret
xor
fidivrs
aaa
and
dec
inc
push
mov
xor
dec
mov
xor
xor
aas
sarb
mov
lret
dec
ret
mov
movsb
into
ret
mov
xor
dec
iret
mov
mov
cmp
and
dec
mov
faddp
xor
and
mov
mov
dec
dec
dec
xor
movsl
mov
and
and
cmp
mov
xor
xor
enter
enter
daa
cmp
mov
mov
mov
mov
lret
mov
lds
mov
xor
fiadds
mov
dec
movsl
push
sub
and
and
mov
dec
cmp
and
movsl
dec
cmp
cmp
mov
into
daa
dec
mov
inc
aaa
daa
mov
dec
enter
ds
mov
mov
mov
cmp
mov
xor
mov
mov
inc
mov
and
ds
mov
and
lret
xor
cmpsl
dec
xor
aaa
dec
and
mov
xor
push
push
mov
es
les
sarb
int
ds
les
inc
xor
ds
mov
ret
mov
movsb
mov
and
mov
test
mov
test
mov
xor
ds
dec
enter
ror
and
inc
xor
mov
mov
lret
daa
mov
int
enter
cmp
and
mov
lds
xor
mov
inc
cmp
mov
daa
mov
xor
inc
and
movsb
ss
mov
xor
es
ret
mov
and
cmp
dec
mov
test
and
or
xor
xor
jmp
subb
insb
jl
movsl
test
add
cld
push
jmp
dec
aas
daa
les
ss
shlb
mov
mov
mov
mov
xor
movsl
cmpsl
inc
test
cmp
mov
mov
dec
mov
mov
mov
xor
mov
dec
test
cmpsl
mov
int
mov
ds
cmp
mov
push
mov
lret
xor
fidivrs
dec
daa
aaa
and
mov
mov
fmulp
mov
enter
inc
mov
enter
es
daa
inc
mov
aas
ror
ret
mov
mov
dec
dec
movsl
cmpsl
ret
mov
mov
lds
and
lds
mov
aas
ds
xor
inc
xor
les
xor
rcr
ror
inc
xor
mov
ret
ss
and
mov
leave
mov
cmpsl
mov
push
mov
cmpsl
dec
xor
and
into
mov
mov
mov
daa
inc
xor
dec
mov
enter
mov
inc
test
xor
mov
aas
test
mov
enter
mov
movsl
mov
mov
xor
dec
and
mov
inc
mov
cmpsl
xor
test
lret
mov
dec
mov
mov
and
sub
mov
inc
and
dec
mov
enter
mov
mov
dec
lds
and
mov
xor
mov
inc
mov
mov
dec
shll
test
aas
dec
inc
sub
mov
les
dec
mov
mov
shll
mov
push
dec
inc
xor
xor
and
inc
xor
xor
mov
push
mov
lret
mov
mov
dec
xor
xor
xor
sub
ret
mov
aas
inc
mov
les
inc
inc
test
mov
inc
and
xor
test
xor
int
and
inc
inc
mov
and
movl
mov
and
xor
xor
xor
and
mov
mov
faddp
xor
daa
aaa
mov
mov
into
mov
enter
mov
fidivs
es
xor
mov
mov
xor
xor
dec
mov
ss
mov
and
mov
fmulp
xor
mov
es
push
mov
rolb
xor
fidivs
xor
mov
mov
cmp
xor
es
xor
xor
lds
xor
cmp
es
dec
mov
es
inc
test
dec
xor
and
inc
fidivrs
xor
ss
mov
into
xor
enter
mov
mov
xor
mov
movsb
lds
mov
ret
mov
ror
xor
enter
aaa
movsl
mov
cmp
dec
aaa
aas
test
dec
int
enter
mov
dec
mov
mov
rcr
mov
push
lds
les
lds
int
cmp
and
mov
dec
inc
movsb
mov
sub
cmpsl
sarb
lret
into
mov
movsl
dec
mov
sub
inc
cmp
mov
shll
xor
and
mov
cmp
cmp
inc
and
mov
faddp
mov
lds
and
inc
test
es
mov
mov
shrd
shr
shl
jmp
dec
cli
call
call
mov
sbbl
jmp
inc
es
dec
dec
sarb
push
mov
mov
cmp
and
xor
ret
mov
sub
mov
xor
mov
lret
ss
leave
and
mov
mov
mov
enter
xor
and
daa
fisubs
into
daa
lret
aas
xor
mov
and
int
xor
and
mov
ds
mov
cmp
inc
leave
aaa
dec
cmp
ss
sub
cmp
cmp
mov
into
and
aas
aaa
test
iret
lret
xor
inc
xor
mov
movsb
mov
lret
sub
inc
test
inc
and
mov
and
sarb
dec
aas
mov
inc
and
dec
xor
ret
ret
fisubs
roll
iret
es
dec
cmp
mov
inc
into
mov
test
xor
dec
mov
and
mov
mov
and
mov
mov
movsb
xor
and
rol
dec
xor
xor
and
and
daa
xor
mov
into
mov
xor
les
push
and
aas
and
mov
mov
mov
and
mov
ret
int
fidivrs
inc
test
daa
aas
es
cmp
xor
mov
mov
dec
movsl
enter
xor
mov
aaa
xor
and
movsb
and
and
es
mov
xor
xor
mov
cmpsl
dec
movsb
sarb
movsl
mov
sarb
mov
dec
lret
aas
xor
mov
ds
xor
xor
mov
inc
dec
xor
xor
and
inc
shlb
mov
mov
int
dec
cmp
dec
int
cmpsl
lret
xor
mov
daa
dec
dec
ret
ret
inc
and
daa
and
xor
push
and
int
inc
mov
inc
inc
sarb
ds
dec
shll
cmp
xor
and
ds
mov
mov
inc
mov
lds
daa
mov
sub
movsb
and
movsl
test
and
ss
fisubs
and
mov
and
cmp
xor
and
inc
mov
lds
mov
dec
inc
fidivs
inc
mov
dec
mov
ss
cmpsl
leave
lret
and
mov
aaa
enter
lds
inc
into
inc
and
inc
dec
rcr
mov
mov
mov
test
mov
ror
int
int
xor
and
ret
aas
xor
cmp
mov
mov
mov
enter
inc
dec
aas
dec
sarb
and
cmp
shlb
ds
mov
inc
mov
cmpsl
cmp
mov
ss
mov
xor
inc
xor
test
lret
mov
dec
cmp
ss
mov
movsl
and
shll
and
xor
dec
movsl
mov
es
cmp
test
leave
movsb
cmp
dec
dec
dec
lret
cmp
into
cmpsl
and
movsl
dec
inc
xor
mov
and
dec
dec
es
ret
inc
daa
daa
aas
rorb
dec
and
mov
xor
xor
xor
aaa
rol
test
inc
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
loopne
je
je
les
xchg
div
stc
jmp
jmp
inc
int
enter
and
dec
shlb
dec
inc
cmp
mov
iret
xor
dec
dec
leave
mov
inc
cmp
sub
xor
mov
aaa
enter
inc
mov
push
int
mov
inc
cmp
inc
int
cmp
movsl
and
cmp
daa
mov
daa
mov
inc
mov
and
cmp
mov
test
lret
dec
cmpsl
and
cmp
iret
and
mov
mov
inc
fisubrs
mov
mov
lds
and
int
dec
and
mov
dec
inc
cmp
inc
and
and
and
inc
xor
mov
and
push
xor
daa
xor
ss
and
mov
movsb
sub
dec
movsb
int
fisubs
aaa
mov
mov
test
ret
mov
ret
mov
enter
cmp
es
mov
dec
test
ss
int
mov
and
xor
mov
leave
and
cmpsl
mov
mov
mov
dec
aaa
inc
daa
and
aaa
aas
and
aas
mov
and
mov
mov
mov
aaa
es
dec
sub
ss
movsl
mov
xor
inc
mov
cmpsl
daa
xor
xor
mov
dec
mov
mov
iret
mov
mov
dec
xor
rcr
mov
xor
xor
cmp
xor
int
mov
dec
dec
xor
mov
enter
cmp
mov
and
mov
xor
mov
ret
mov
mov
lds
xor
xor
mov
enter
les
inc
xor
fisubs
test
iret
cmp
fiadds
mov
mov
and
mov
mov
dec
sarb
aas
and
mov
shlb
faddp
es
inc
mov
mov
test
inc
les
movsb
fidivrs
mov
cmpsl
inc
iret
iret
lds
shlb
ss
cmp
and
shlb
inc
dec
cmp
iret
sub
sarb
mov
movsb
lret
mov
dec
lds
les
into
mov
es
fimuls
cmpsl
lret
inc
and
mov
xor
mov
int
movsb
iret
and
rol
ss
aaa
and
dec
xor
xor
mov
mov
es
xor
iret
es
es
ret
mov
and
dec
dec
mov
and
mov
mov
inc
push
inc
inc
mov
push
inc
mov
xor
mov
and
cmp
inc
leave
mov
int
into
mov
and
xor
leave
sarb
cmp
ds
mov
cmp
push
lds
dec
mov
dec
mov
mov
dec
mov
mov
and
shll
inc
mov
lds
dec
mov
xor
leave
dec
mov
dec
rolb
xor
aaa
movsb
inc
xor
mov
mov
es
mov
mov
mov
push
shll
xor
sarb
test
test
dec
and
inc
xor
cmp
ror
rorb
mov
lret
and
adc
rorb
push
nop
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
jmp
dec
iret
stos
fsubrl
or
jae
jp
jmp
dec
inc
movsl
mov
les
mov
xor
mov
mov
inc
mov
mov
into
and
dec
xor
mov
mov
rorb
enter
mov
inc
mov
xor
and
lret
and
test
and
mov
iret
inc
movsl
cmp
daa
mov
push
push
dec
rolb
test
xor
sub
mov
push
les
sarl
shlb
mov
enter
dec
inc
ss
lret
dec
iret
mov
dec
xor
push
daa
and
inc
rcr
inc
inc
dec
mov
iret
mov
push
es
mov
mov
inc
mov
mov
iret
mov
mov
dec
dec
mov
mov
iret
and
and
xor
inc
xor
dec
mov
rorl
dec
sarl
dec
es
shlb
aas
es
mov
mov
xor
inc
mov
xor
ds
movsb
inc
mov
mov
mov
xor
mov
lret
dec
dec
movsb
les
cmp
int
inc
mov
dec
mov
movsb
xor
mov
mov
sarl
aas
mov
mov
and
les
movsl
mov
mov
xor
xor
ds
and
cmp
xor
mov
mov
mov
mov
int
mov
mov
inc
mov
movsl
mov
ds
cmpsl
cmpsl
mov
dec
sub
into
xor
mov
ret
push
cmp
aas
inc
movsl
xor
dec
aaa
dec
xor
cmp
test
movsl
inc
shlb
ror
xor
mov
aaa
cmp
daa
int
mov
xor
mov
ror
ret
enter
enter
inc
inc
push
mov
mov
mov
inc
shlb
movsl
aaa
mov
int
mov
shlb
dec
mov
leave
lds
and
xor
mov
into
ret
lret
into
mov
xor
cmpsl
xor
mov
mov
into
dec
movsb
and
xor
movsb
int
fisubs
inc
xor
daa
dec
xor
mov
xor
mov
into
and
cmp
mov
and
movsb
mov
and
inc
dec
inc
xor
aaa
cmp
movsb
mov
ss
mov
dec
dec
mov
lds
mov
inc
movsl
iret
ds
int
and
and
cmp
mov
dec
mov
xor
aas
and
mov
mov
movsl
into
ds
movsl
dec
sub
int
xor
cmpsl
xor
cmp
inc
and
daa
lds
mov
dec
and
dec
and
es
inc
xor
inc
mov
inc
aaa
push
test
les
mov
ds
mov
rolb
xor
ss
xor
mov
xor
mov
mov
lret
mov
mov
mov
enter
xor
movsb
inc
mov
mov
inc
cmp
shll
mov
cmpsl
mov
inc
cmp
xor
into
dec
and
mov
mov
leave
dec
lds
xor
xor
mov
mov
es
movl
mov
les
mov
sarb
lret
mov
enter
enter
lods
roll
call
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
jmp
push
jmp
outsl
imul
imul
in
test
sub
cld
push
jmp
mov
shlb
dec
inc
mov
shll
mov
cmp
mov
dec
mov
xor
ret
es
ss
test
ret
xor
lret
mov
inc
mov
movsl
enter
leave
xor
and
rolb
mov
cmp
mov
les
sub
ret
and
xor
into
and
inc
xor
cmpsl
int
dec
ss
lds
sarb
mov
push
dec
iret
xor
sarl
mov
into
and
mov
movsl
mov
mov
mov
enter
lret
ret
dec
movl
rol
mov
push
xor
cmp
les
faddp
rorl
daa
daa
mov
ss
daa
mov
inc
cmpsl
xor
push
mov
and
and
movsb
mov
mov
fisubs
mov
mov
inc
xor
xor
inc
xor
mov
mov
cmp
faddp
lret
xor
mov
and
mov
dec
xor
lds
mov
movsl
xor
mov
mov
into
dec
mov
cmpsl
inc
mov
aas
inc
sub
lret
leave
and
dec
fidivs
mov
ret
int
xor
lret
mov
aaa
xor
mov
mov
xor
inc
rolb
push
mov
xor
cmp
mov
and
and
aaa
mov
cmp
cmp
lds
mov
sarb
ret
dec
and
sarb
inc
cmp
test
leave
mov
mov
inc
sub
mov
and
mov
daa
dec
les
dec
test
dec
mov
leave
sarb
mov
xor
inc
dec
iret
xor
fidivrs
cmp
ds
cmp
mov
dec
lret
mov
cmpsl
movsl
shlb
inc
mov
int
xor
mov
mov
mov
daa
mov
movsl
dec
mov
xor
ret
mov
ret
daa
shlb
mov
xor
aas
push
and
into
and
iret
into
dec
mov
es
dec
test
xor
es
fisubs
rolb
movl
inc
xor
mov
cmp
xor
mov
ss
cmpsl
xor
push
mov
cmp
mov
mov
mov
inc
fidivrs
test
iret
enter
xor
dec
dec
mov
and
cmp
xor
ds
xor
aas
into
inc
mov
mov
xor
mov
dec
cmp
les
xor
es
dec
mov
lret
mov
cmp
xor
and
mov
into
sarb
mov
and
and
xor
mov
aaa
and
mov
mov
mov
mov
fidivs
mov
dec
dec
cmp
mov
cmp
leave
xor
dec
cmp
enter
into
inc
cmpsl
dec
mov
cmp
cmp
mov
rorb
movsb
ret
and
mov
shll
inc
mov
shlb
and
ljmp
out
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
jmp
sub
ds
adc
sbb
jmp
mov
mov
mov
mov
aaa
and
mov
movsb
into
mov
lret
aas
and
lret
movsl
aaa
mov
and
mov
xor
mov
mov
xor
mov
cmp
dec
mov
inc
movsb
shlb
xor
xor
dec
xor
dec
mov
dec
dec
and
inc
xor
sarb
xor
inc
dec
mov
aaa
dec
mov
mov
aas
mov
movsb
movsb
inc
mov
and
mov
shll
and
dec
rol
ret
dec
cmp
cmp
mov
leave
mov
xor
sub
into
leave
dec
dec
push
iret
ret
fidivrs
lds
mov
mov
inc
les
test
daa
aaa
inc
mov
mov
test
cmp
mov
dec
cmp
movsl
xor
inc
mov
lret
mov
enter
movsb
and
cmp
xor
mov
aaa
movsl
dec
push
mov
cmpsl
xor
dec
iret
movsb
es
int
mov
ror
xor
cmpsl
mov
daa
daa
leave
ss
and
cmp
xor
inc
xor
mov
inc
mov
lret
test
dec
inc
mov
cmp
movsl
test
mov
movsl
cmp
xor
and
mov
ss
aas
mov
mov
int
mov
into
enter
mov
mov
mov
mov
inc
aas
test
xor
es
dec
mov
and
sub
mov
into
mov
mov
mov
movsb
test
mov
xor
ds
int
mov
mov
iret
inc
cmp
and
inc
mov
xor
xor
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
or
mov
imul
jmp
or
or
fldenv
or
jmp
mov
daa
dec
mov
cmp
inc
lret
test
leave
and
movsb
shlb
xor
lret
fidivs
xor
and
inc
daa
ret
inc
xor
iret
leave
push
dec
mov
mov
movsl
inc
xor
ss
mov
xor
mov
dec
xor
test
test
mov
es
rol
movl
xor
ds
les
and
into
mov
and
mov
shll
mov
mov
mov
inc
mov
mov
mov
cmpsl
mov
inc
leave
and
roll
aas
ret
cmpsl
mov
lret
xor
test
mov
xor
shlb
ss
mov
mov
xor
xor
aaa
lret
inc
mov
mov
mov
mov
inc
and
dec
mov
mov
dec
and
ret
mov
cmpsl
mov
faddp
dec
leave
mov
xor
sarl
xor
mov
ds
sub
inc
cmp
mov
aaa
inc
ret
cmp
shll
daa
test
and
aas
ss
es
mov
fmulp
dec
inc
and
mov
and
dec
xor
sarl
and
lret
mov
ret
fidivs
cmp
lret
dec
mov
xor
and
and
dec
sarb
rol
aaa
rcl
xor
movsb
and
mov
dec
ds
daa
sarb
les
inc
dec
inc
aaa
mov
dec
inc
mov
and
aas
mov
enter
inc
mov
aas
and
shlb
and
mov
dec
mov
mov
imul
and
mov
xor
mov
or
mov
sub
mov
add
imul
mov
jmp
movl
movl
jmp
push
sbb
popf
les
xchg
hlt
nop
stos
mov
fs
jmp
cmp
and
dec
mov
xor
mov
mov
into
aaa
rcl
movsl
ret
movsl
sub
int
ss
cmp
mov
cmpsl
cmpsl
sub
dec
mov
dec
mov
inc
xor
dec
and
mov
xor
inc
dec
shlb
and
enter
and
int
aaa
int
dec
sub
shll
ss
cmp
sub
dec
sarl
into
dec
mov
mov
cmp
mov
lds
mov
mov
ds
mov
and
mov
int
dec
mov
mov
xor
mov
enter
inc
mov
aas
rorb
xor
inc
es
les
xor
xor
movsl
xor
dec
sarb
rol
les
iret
inc
inc
aaa
mov
leave
mov
and
int
dec
aaa
and
inc
mov
daa
push
leave
mov
shll
and
enter
lret
dec
test
movsb
xor
inc
test
and
dec
mov
inc
mov
push
and
inc
es
int
mov
mov
lret
and
aas
es
mov
mov
movsl
mov
mov
movsb
inc
leave
inc
and
mov
dec
mov
dec
xor
mov
enter
cmp
int
and
xor
mov
int
int
mov
xor
shrb
movsb
leave
shlb
iret
mov
xor
mov
dec
inc
inc
inc
mov
les
mov
xor
cmp
inc
iret
cmpsl
leave
rolb
xor
mov
ret
mov
cmp
enter
mov
fidivs
inc
dec
xor
cmp
inc
loopne
dec
add
mov
mov
or
xor
mov
jmp
push
fwait
push
fwait
mov
push
mov
popa
jmp
jmp
and
lret
iret
aaa
mov
dec
rorb
lret
and
mov
inc
inc
ds
dec
mov
dec
push
sub
inc
and
xor
movsb
les
lret
fidivs
dec
cmp
roll
ror
les
mov
ss
dec
test
and
ret
movsl
xor
mov
mov
inc
ret
xor
dec
lret
ror
int
xor
mov
movsb
mov
dec
and
into
and
mov
into
mov
mov
sub
push
mov
dec
mov
mov
int
mov
mov
leave
sub
lret
and
dec
aas
cmp
inc
test
mov
mov
les
movsb
mov
leave
dec
and
dec
mov
mov
sub
dec
inc
sub
lds
les
es
mov
xor
dec
mov
lret
cmp
and
inc
xor
leave
mov
test
inc
mov
les
inc
mov
mov
cmp
dec
ror
enter
leave
sub
mov
ret
xor
inc
xor
xor
movsb
ret
and
dec
leave
lds
dec
xor
cmp
and
sub
and
into
ret
inc
xor
mov
dec
les
lds
mov
enter
inc
mov
mov
xor
mov
lds
xor
aas
iret
mov
fisubs
inc
and
mov
xor
mov
mov
dec
cmp
aas
mov
shll
mov
into
lret
mov
inc
int
ret
ret
shlb
xor
cmp
mov
dec
dec
xor
test
sub
mov
mov
mov
shr
xor
and
sub
mov
mov
mov
mov
mov
or
mov
sub
imul
lea
mov
mov
imul
xor
mov
or
mov
jmp
aas
rcl
jmp
in
arpl
jns
pop
xchg
xchg
pop
ljmp
mov
rol
xor
and
ror
cmp
xor
movsb
rorl
movsl
fidivrs
and
fiadds
and
aaa
lret
dec
lds
and
and
movsb
mov
mov
enter
shlb
lds
sarb
dec
xor
leave
dec
movsl
mov
inc
and
mov
ret
shll
iret
test
and
ss
cmp
and
inc
mov
xor
xor
mov
test
iret
inc
dec
daa
cmp
test
dec
aas
mov
and
inc
inc
les
mov
rclb
cmp
iret
cmpsl
and
dec
sub
xor
xor
cmpsl
mov
and
xor
daa
xor
inc
test
movsl
xor
and
mov
iret
mov
movsl
mov
mov
push
mov
and
mov
iret
int
inc
cmp
leave
and
cmp
into
mov
dec
mov
mov
cmp
cmpsl
leave
dec
mov
enter
mov
and
sub
ds
mov
movsl
sub
mov
shlb
lret
push
fisubs
movsb
movsl
inc
xor
mov
cmp
xor
mov
dec
cmp
mov
and
inc
es
int
mov
aas
and
es
test
and
dec
ror
dec
cmp
aas
test
cmpsl
aaa
int
rcr
fiadds
test
shlb
mov
inc
xor
xor
inc
mov
inc
mov
mov
mov
inc
sub
roll
xor
dec
mov
inc
cmp
es
mov
cmpsl
daa
iret
rol
mov
daa
mov
xor
cmp
sub
mov
imul
jmp
or
jmp
fisttpll
mov
jmp
jmp
movsl
leave
mov
test
mov
cmp
inc
dec
xor
aaa
and
inc
push
and
mov
dec
mov
and
int
sub
ror
daa
xor
dec
inc
mov
mov
mov
dec
cmpsl
mov
ret
mov
dec
and
enter
sub
sub
xor
sub
daa
ss
ret
mov
inc
mov
inc
mov
xor
lds
and
shll
xor
and
mov
xor
enter
cmp
cmpsl
lret
lret
ss
movsl
mov
inc
mov
inc
and
rorb
dec
cmpsl
ss
dec
and
and
xor
mov
into
shlb
and
dec
mov
mov
and
xor
leave
iret
mov
cmpsl
dec
cmpsl
and
xor
daa
mov
inc
dec
and
mov
movsl
lds
and
mov
movsb
mov
mov
dec
mov
cmp
inc
xor
dec
inc
fisubs
dec
inc
dec
push
fiadds
cmp
mov
xor
ret
mov
dec
and
fimuls
dec
ret
sarb
and
mov
test
dec
mov
mov
enter
lret
mov
inc
cmp
lret
mov
inc
movsb
dec
rol
daa
mov
ss
roll
les
daa
mov
movsb
mov
xor
int
mov
mov
dec
mov
mov
lret
push
mov
ss
dec
movsb
sub
daa
inc
mov
int
mov
enter
lret
dec
cmp
cmp
mov
movsl
mov
xor
xor
inc
dec
iret
enter
inc
daa
int
and
mov
mov
aas
and
mov
ret
add
add
jmp
mov
mov
cwtl
pop
dec
in
jmp
dec
and
cmp
inc
les
mov
dec
enter
mov
inc
les
inc
mov
xor
mov
sub
mov
ss
mov
mov
ror
int
movsb
inc
daa
cmp
mov
inc
rolb
xor
mov
mov
mov
enter
and
cmpsl
and
leave
les
aas
dec
and
sub
sarb
mov
leave
cmp
cmpsl
lret
aas
leave
aas
inc
shlb
mov
ds
movsb
and
es
and
inc
mov
dec
xor
mov
inc
xor
xor
lret
xor
mov
xor
dec
cmpsl
mov
movsb
mov
inc
into
dec
mov
cmp
leave
mov
mov
mov
int
ret
xor
mov
dec
lds
mov
and
lds
mov
and
dec
into
lret
mov
cmp
xor
mov
lret
xor
les
es
shll
mov
rorb
dec
xor
cmp
cmp
dec
ret
inc
xor
xor
inc
aaa
ret
inc
ror
mov
dec
mov
xor
ds
mov
lds
mov
fidivrs
mov
inc
les
xor
mov
mov
xor
movsb
mov
mov
inc
movsb
mov
mov
mov
movsb
mov
faddp
dec
and
and
lds
cmp
int
dec
xor
and
daa
leave
mov
inc
xor
mov
cmp
leave
aaa
inc
and
and
mov
mov
cmp
cmpsl
mov
xor
xor
and
mov
rolb
mov
ss
inc
shlb
dec
mov
test
inc
inc
int3
dec
jbe
add
inc
or
add
add
inc
hlt
mov
add
movl
movl
movl
xor
movl
mov
mov
div
mov
xor
imul
div
mov
jmp
mov
mov
movsl
int3
lods
sub
fwait
notl
cmpsb
add
aas
out
jmp
mov
dec
cmp
mov
mov
xor
enter
int
mov
cmp
roll
dec
ss
mov
daa
ds
mov
shlb
ds
xor
cmpsl
dec
dec
mov
mov
and
xor
dec
mov
cmp
mov
dec
enter
movsl
leave
aaa
push
cmp
mov
ss
cmpsl
sub
enter
int
shll
inc
xor
iret
mov
leave
iret
mov
dec
mov
and
ror
inc
inc
mov
and
aas
inc
lds
movsb
cmp
xor
movsb
dec
ret
dec
dec
daa
ss
lds
mov
shlb
mov
xor
leave
dec
dec
cmp
mov
rolb
mov
dec
inc
leave
xor
ret
mov
movsl
and
mov
daa
rorb
enter
inc
aaa
movsb
fidivrs
mov
lret
xor
movsb
xor
dec
and
enter
enter
mov
mov
mov
mov
and
movl
movsb
and
daa
rol
cmpsl
dec
xor
push
xor
xor
dec
cmpsl
aaa
int
ss
mov
aas
mov
movsl
ret
inc
cmp
movsl
aaa
mov
inc
xor
cmp
mov
into
cmpsl
inc
and
iret
movsl
aas
mov
sub
movsb
mov
shrl
and
movsb
dec
inc
mov
mov
aaa
into
enter
and
lret
and
mov
mov
ret
les
xor
dec
aaa
mov
lds
ror
iret
and
xor
iret
sub
enter
xor
cmp
mov
dec
dec
cmp
mov
inc
inc
dec
and
lds
mov
xor
sarb
dec
mov
mov
shl
add
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
xor
shr
jmp
mov
insb
jl
pop
mov
and
jmp
jmp
inc
lds
xor
daa
mov
inc
aaa
dec
and
mov
mov
mov
dec
mov
aas
inc
mov
ss
mov
ds
inc
les
mov
cmp
inc
aaa
mov
mov
movsl
mov
mov
iret
dec
les
ror
and
sub
mov
lds
and
and
and
ret
aas
dec
and
and
inc
ret
int
inc
aas
mov
mov
shll
fidivs
into
mov
into
mov
shll
lret
mov
lds
inc
les
int
inc
fimuls
fidivrs
and
shll
daa
mov
inc
lret
and
xor
sub
inc
mov
test
mov
mov
dec
enter
mov
xor
and
lret
aas
inc
movsl
fimuls
ss
mov
inc
mov
and
int
inc
and
dec
ds
sarb
cmp
mov
cmpsl
iret
and
mov
iret
mov
and
xor
cmp
aaa
mov
into
cmp
dec
shlb
ss
ss
xor
mov
cmp
mov
cmp
sub
sub
movsl
mov
and
push
dec
inc
xor
mov
aaa
shlb
mov
and
int
mov
cmp
daa
mov
movsb
dec
and
dec
dec
es
aaa
cmp
cmpsl
and
fisubrs
mov
lret
int
lret
xor
aas
mov
dec
and
lds
leave
aaa
dec
mov
leave
mov
mov
xor
sub
mov
dec
into
mov
inc
dec
mov
enter
sarb
inc
shrb
shl
divb
rorb
aam
jge
add
div
jmp
push
popa
insb
jl
stos
jbe
test
in
jmp
jmp
inc
sub
mov
fisubs
rorl
mov
mov
mov
inc
lds
aaa
mov
lret
inc
inc
mov
xor
xor
mov
xor
ds
lret
ret
dec
dec
cmpsl
mov
daa
cmp
movsb
mov
and
ret
leave
les
mov
inc
dec
xor
xor
mov
xor
and
mov
mov
and
and
fidivrs
dec
inc
inc
mov
inc
mov
movsb
inc
inc
aaa
sub
xor
mov
push
mov
into
fisubs
mov
mov
inc
mov
test
daa
mov
and
sub
and
and
es
les
aas
cmp
aas
inc
mov
iret
inc
aaa
dec
cmp
mov
dec
and
enter
movsl
mov
and
enter
ror
mov
fidivs
int
ss
mov
enter
cmpsl
xor
es
and
int
inc
aaa
movsl
xor
lds
movsb
mov
dec
and
and
and
and
mov
mov
dec
xor
into
inc
inc
shlb
es
and
les
mov
cmp
into
push
and
mov
lret
mov
dec
ret
cmpsl
mov
cmp
mov
inc
aaa
push
movsl
dec
dec
movsb
les
dec
inc
cmp
cmp
dec
inc
movsl
enter
es
test
ss
and
ss
ret
mov
fimuls
mov
and
aaa
and
and
cmp
iret
sub
cmp
dec
xor
mov
xor
es
cmp
into
rol
cmpsl
lds
mov
lret
xor
les
cmpsl
and
push
fsubr
xor
add
aas
add
in
imul
orl
addl
jmp
aas
mov
movsb
into
cmp
cmp
mov
dec
shlb
mov
test
mov
xor
lret
es
ret
mov
rorl
lret
mov
cmp
xor
mov
daa
mov
iret
mov
dec
xor
mov
cmp
cmp
cmp
rorl
inc
dec
cmp
leave
xor
xor
movsl
mov
lret
shll
and
fimuls
iret
into
lds
mov
inc
cmp
shlb
dec
xor
inc
and
leave
mov
and
into
xor
iret
shlb
xor
mov
xor
and
ss
inc
inc
aaa
mov
ds
and
xor
mov
into
cmp
mov
daa
xor
dec
into
aaa
mov
into
inc
and
xor
xor
inc
int
mov
inc
mov
mov
inc
mov
ds
and
mov
mov
mov
ror
mov
sarb
movsl
cmp
and
mov
dec
and
inc
and
aas
es
sub
xor
mov
dec
cmpsl
mov
mov
enter
daa
enter
enter
test
cmp
xor
inc
inc
aaa
int
int
mov
and
inc
xor
xor
int
aas
mov
dec
and
dec
and
leave
mov
int
inc
les
aas
dec
enter
and
les
mov
mov
mov
xor
mov
shlb
movsb
inc
test
inc
push
sarl
mov
and
mov
dec
and
es
ss
mov
and
xor
mov
and
ret
loopne
scas
ret
subb
add
add
push
in
decl
idiv
mov
mov
imul
xor
mov
or
imul
mov
sub
mov
and
add
mov
or
and
xor
cmp
jb
movl
movl
movl
jmp
fistps
cmpb
jl
int
stos
add
ljmp
and
iret
into
leave
xor
and
and
inc
aas
mov
ror
aaa
leave
mov
mov
ret
cmp
cmp
inc
and
and
sub
inc
sarb
test
inc
and
dec
inc
and
enter
ds
into
mov
dec
dec
movl
mov
mov
inc
mov
test
dec
mov
inc
cmp
cmp
mov
mov
aas
dec
lret
xor
int
inc
fisubs
mov
daa
aaa
mov
shrb
aaa
int
cmp
aaa
ds
lds
dec
cmp
mov
cmp
xor
shlb
and
mov
cmp
mov
dec
into
movsb
shlb
leave
mov
enter
test
and
mov
mov
mov
es
shrb
mov
and
enter
mov
dec
and
inc
and
mov
movsl
mov
mov
and
xor
aas
mov
mov
cmp
faddp
and
mov
mov
ds
ss
inc
dec
enter
mov
mov
sub
dec
cmp
push
lds
into
cmpsl
les
mov
and
cmpsl
fiadds
and
inc
and
aaa
and
dec
mov
and
movsb
inc
mov
mov
sarb
dec
ret
mov
and
mov
xor
leave
and
les
and
dec
and
mov
mov
leave
ret
and
es
shlb
mov
test
iret
ss
rcl
inc
enter
lret
aas
enter
cmpsl
shlb
daa
daa
mov
mov
movsb
inc
daa
mov
cmpsl
mov
outsl
add
movl
movl
mov
mov
xor
mov
or
push
pop
div
mov
xor
or
sub
xor
add
div
mov
add
cmp
ja
push
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
xor
push
div
jmp
sub
test
hlt
pop
cmc
or
mov
jmp
mov
leave
xor
iret
mov
and
mov
inc
cmpsl
mov
int
mov
mov
inc
into
mov
cmp
mov
inc
rolb
les
mov
mov
mov
enter
mov
rol
les
iret
and
test
mov
aas
enter
xor
dec
mov
movsb
xor
xor
inc
xor
mov
and
xor
and
xor
xor
mov
xor
ss
fidivs
aas
shlb
mov
movsl
leave
dec
ror
xor
and
cmpsl
shlb
ds
mov
xor
mov
xor
movsb
mov
lret
dec
int
test
xor
rorb
mov
movsl
mov
and
mov
fmulp
xor
enter
dec
ss
mov
inc
mov
dec
cmp
dec
les
mov
lds
int
es
les
mov
and
ds
inc
sub
daa
mov
enter
and
fidivs
dec
test
mov
lds
ret
mov
shlb
leave
aaa
shlb
and
lds
xor
mov
into
mov
mov
cmp
xor
ret
and
mov
aas
dec
mov
lret
int
iret
rcl
daa
sub
inc
xor
into
xor
aas
ss
xor
xor
dec
ss
rclb
inc
xor
sub
dec
es
es
mov
cmp
cmp
enter
xor
inc
dec
inc
rcl
and
mov
aaa
shll
mov
aas
lds
es
mov
mov
inc
ss
cmp
cmp
aaa
inc
xor
dec
dec
inc
mov
and
inc
mov
les
xor
xor
mov
sub
mov
mov
imul
mov
or
xor
add
mov
xor
mov
add
mov
mov
jmp
sub
nop
mov
out
shl
pop
push
jo
jmp
inc
dec
rcl
sarl
leave
aas
mov
and
ss
dec
push
mov
inc
aaa
xor
aaa
mov
shrb
dec
mov
leave
and
dec
inc
mov
cmp
dec
enter
mov
movsb
ss
mov
and
fisubrs
dec
mov
xor
mov
inc
mov
and
mov
aaa
xor
enter
xor
mov
xor
movsl
int
movsl
shlb
dec
mov
fisubs
aaa
inc
inc
test
lret
and
mov
rol
les
inc
and
and
aas
int
inc
mov
xor
ss
dec
xor
into
cmp
rolb
mov
mov
int
dec
es
mov
mov
xor
movsl
ss
push
inc
sub
inc
and
mov
enter
mov
ror
mov
dec
inc
mov
dec
mov
sarb
cmp
faddp
sub
inc
dec
cmp
dec
sarb
cmp
mov
and
xor
mov
into
mov
inc
mov
les
xor
lret
sub
aas
xor
mov
daa
iret
into
rol
mov
ret
test
dec
mov
xor
xor
mov
es
ss
dec
inc
test
and
mov
and
mov
int
and
leave
test
fidivs
mov
dec
mov
enter
iret
and
iret
inc
mov
enter
enter
movsl
cmp
cmpsl
mov
mov
lret
and
rorb
mov
ss
iret
les
mov
inc
dec
ss
xor
mov
and
inc
and
movsb
and
dec
int
lret
inc
dec
mov
or
mov
mov
add
mov
xor
and
lea
mov
or
xor
pop
div
mov
xor
div
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
shr
sub
or
mov
and
lea
mov
movl
movl
movl
mov
mov
or
sub
mov
imul
xor
div
mov
xor
xor
jmp
cmp
mov
add
pop
sahf
js
insl
imul
inc
shlb
and
aaa
cmp
mov
inc
cmp
mov
and
cmp
lret
and
mov
mov
mov
mov
mov
xor
cmpsl
cmp
mov
inc
cmp
xor
inc
xor
aas
fidivrs
shlb
enter
fidivrs
mov
mov
into
test
ss
inc
ss
and
sarb
leave
cmp
mov
xor
inc
mov
mov
and
dec
mov
leave
and
leave
dec
inc
xor
xor
mov
ds
fidivrs
inc
and
lret
mov
mov
sarl
xor
test
mov
mov
dec
dec
les
mov
mov
mov
shlb
iret
cmp
and
mov
sub
and
dec
fisubs
lds
shll
and
xor
ror
fidivs
int
xor
inc
mov
cmp
test
enter
mov
xor
mov
leave
ss
mov
aas
aas
leave
ss
aaa
mov
xor
mov
mov
int
inc
dec
rol
lds
movsl
dec
shlb
push
cmp
lds
movsb
movsl
mov
ror
lds
mov
and
into
mov
and
aas
mov
iret
inc
lds
and
lret
mov
mov
test
cmp
mov
and
test
daa
cmpsl
fidivs
test
dec
mov
mov
mov
mov
les
enter
mov
and
mov
xor
cmp
mov
inc
and
mov
into
sub
test
iret
mov
inc
mov
rorb
cmpsl
iret
lds
cmpsl
and
xor
and
inc
mov
and
cmp
ss
mov
mov
xor
mov
and
mov
xor
dec
cmp
mov
iret
inc
mov
leave
mov
and
dec
dec
dec
daa
mov
and
ss
cmpsl
inc
cmp
xor
cmpsl
mov
ss
cmpsl
xor
mov
ret
cmp
mov
xor
and
mov
cmp
lret
mov
rorb
xor
mov
shrb
dec
inc
mov
cmpsl
lds
les
and
dec
mov
inc
ret
ret
daa
movsb
xor
mov
mov
mov
ss
mov
dec
and
sarl
inc
jmp
or
js
mov
enter
push
imul
leave
inc
and
iret
es
dec
mov
inc
inc
cmp
sub
les
mov
mov
and
int
dec
cmp
fidivs
mov
aas
and
ss
cmp
mov
mov
mov
xor
cmp
sarb
int
ret
cmp
mov
dec
ds
les
rol
mov
test
les
mov
enter
push
and
mov
mov
and
mov
mov
movsb
xor
mov
mov
mov
and
cmp
and
cmp
dec
xor
and
inc
cmpsl
dec
aas
xor
mov
cmp
cmp
mov
int
enter
cmp
dec
daa
test
movsb
movsl
int
mov
dec
les
dec
mov
mov
dec
push
movsb
dec
mov
inc
mov
and
mov
mov
int
dec
cmpsl
xor
into
mov
aas
inc
mov
inc
mov
mov
daa
iret
cmp
mov
ret
mov
push
dec
mov
dec
cmp
mov
dec
cmp
enter
mov
cmp
xor
into
xor
xor
inc
cmp
xor
dec
cmp
inc
mov
xor
inc
xor
fmulp
xor
inc
and
test
enter
xor
daa
ret
daa
inc
cmp
daa
iret
mov
mov
xor
mov
xor
into
inc
ret
push
mov
mov
mov
mov
sub
mov
enter
mov
leave
xor
xor
cmp
mov
ret
mov
ss
movsb
dec
cmp
mov
xor
and
movsl
cmp
mov
dec
and
dec
push
lret
cmp
and
fisubs
mov
test
leave
dec
inc
xor
mov
xor
mov
test
and
xor
shlb
fisubrs
aas
ds
roll
mov
faddp
mov
dec
leave
inc
and
mov
xor
cmp
daa
lds
mov
aaa
aaa
mov
mov
test
cmp
cmpsl
shlb
ret
and
mov
daa
movsl
inc
mov
mov
cmp
daa
mov
ss
mov
mov
sub
mov
mov
mov
fisubs
mov
into
cmpsl
xor
dec
int
cmp
aaa
mov
cmp
es
mov
mov
inc
inc
into
aas
ss
xor
aaa
mov
xor
lea
mov
movl
movl
jmp
push
xchg
cmp
jl
xchg
jl
enter
or
imul
sub
ds
daa
xor
ret
inc
enter
ss
dec
dec
and
iret
and
and
mov
shlb
movsb
into
es
aas
inc
xor
mov
mov
mov
movsl
and
movsl
iret
shlb
mov
leave
mov
test
es
movsb
lret
inc
xor
daa
mov
push
dec
mov
mov
ret
inc
lds
shlb
mov
and
aaa
mov
and
cmp
shlb
cmpsl
ds
iret
mov
cmp
daa
cmp
mov
enter
les
les
xor
mov
cmp
xor
and
leave
es
mov
leave
dec
dec
ss
into
iret
dec
mov
xor
mov
dec
dec
movsl
inc
les
cmpsl
mov
xor
test
dec
cmp
cmp
mov
inc
aaa
int
inc
mov
mov
daa
mov
mov
mov
aas
mov
mov
mov
enter
mov
ror
and
into
cmp
enter
test
ss
xor
lret
ret
shlb
xor
shll
xor
xor
ret
and
aaa
inc
enter
and
mov
xor
es
and
fimuls
mov
dec
and
ds
movsb
movsl
mov
cmp
and
mov
mov
int
cmpsl
iret
cmp
inc
mov
and
mov
inc
mov
mov
and
and
inc
cmpsl
inc
dec
and
mov
mov
and
inc
mov
mov
and
mov
mov
push
and
mov
mov
inc
sarb
mov
mov
shlb
mov
es
and
inc
iret
dec
ds
mov
mov
les
daa
cmp
xor
and
inc
aaa
cmpsl
mov
test
push
dec
lret
mov
enter
leave
mov
aas
cmp
and
and
ds
push
inc
test
and
lret
mov
dec
lret
into
mov
and
cmp
ss
mov
daa
mov
ss
cmp
daa
fisubs
mov
cmpsl
and
mov
mov
movsl
inc
mov
mov
and
mov
xor
inc
mov
inc
movsl
cmp
leave
mov
mov
push
and
inc
daa
mov
mov
lds
mov
aas
fidivs
les
mov
aas
inc
fisubs
dec
xor
mov
and
fmulp
test
movsl
roll
mov
cmp
rcl
ret
mov
mov
and
pop
add
mov
mov
add
imul
mov
add
div
xor
add
mov
movl
movl
movl
mov
mov
div
mov
xor
imul
and
xor
mov
movl
movl
mov
mov
xor
imul
xor
sub
mov
movl
mov
movl
mov
mov
jmp
cmp
and
and
mov
mov
jmp
dec
inc
aaa
dec
les
inc
inc
inc
enter
iret
shll
aaa
mov
xor
mov
mov
cmp
ror
inc
lret
cmpsl
mov
cmp
dec
cmp
movsl
and
mov
cmp
inc
iret
mov
and
es
cmp
iret
daa
sub
dec
ror
mov
sub
ret
int
mov
daa
shll
daa
les
ds
ss
ror
aas
daa
movsl
xor
lds
xor
and
dec
mov
mov
les
iret
mov
lds
inc
aas
movsl
inc
dec
mov
inc
xor
into
mov
xor
inc
cmpsl
iret
xor
inc
rol
enter
movl
inc
ds
cmp
and
int
leave
cmp
cmp
mov
lret
fmulp
lds
test
mov
movsb
ret
ss
mov
inc
mov
movsl
xor
ss
and
sarb
inc
inc
test
dec
daa
and
inc
lret
mov
int
dec
fimuls
ret
test
ror
daa
cmp
iret
into
push
mov
mov
mov
mov
xor
mov
cmpsl
movsb
inc
mov
lds
enter
mov
mov
dec
ds
mov
cmp
inc
push
inc
xor
and
and
enter
cmp
test
rol
shlb
mov
dec
fidivrs
ss
es
shlb
inc
and
xor
aas
rol
test
mov
cmp
shrb
inc
movsb
mov
es
into
mov
dec
xor
movsb
aas
mov
xor
mov
sarb
mov
xor
movsl
iret
inc
ds
dec
inc
inc
inc
mov
xor
les
movsl
xor
dec
fisubs
cmp
les
ret
mov
mov
aas
les
into
rcr
mov
mov
and
aaa
mov
and
inc
inc
dec
xor
cmp
inc
movsl
movsb
and
ss
and
into
movsb
enter
int
dec
and
mov
mov
cmp
mov
dec
movsb
mov
mov
lret
and
fidivs
ds
test
inc
mov
lret
and
enter
mov
movsb
mov
aas
and
xor
inc
mov
and
mov
ss
xor
daa
shll
daa
dec
mov
leave
cmp
and
mov
sub
and
ss
mov
inc
mov
push
mov
xor
iret
mov
dec
sub
lret
mov
xor
mov
lds
add
div
mov
imul
sub
and
xor
mov
movl
movl
mov
mov
and
or
sub
sub
xor
mov
movl
mov
mov
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
jmp
fldl
dec
arpl
mov
lret
hlt
repz
imul
enter
test
movsb
dec
int
and
inc
cmp
into
xor
iret
and
aas
mov
cmp
mov
mov
xor
dec
es
dec
ds
inc
es
inc
shlb
mov
into
mov
ret
mov
xor
mov
enter
cmp
daa
aaa
rorb
mov
lds
xor
inc
ss
xor
es
lds
dec
ds
mov
mov
roll
mov
rol
mov
test
ror
mov
xor
and
inc
mov
rol
and
movsl
mov
mov
xor
mov
push
mov
mov
aaa
and
inc
mov
xor
and
and
ret
and
mov
and
mov
mov
inc
mov
mov
movsb
ror
lds
xor
enter
shlb
fidivrs
mov
mov
inc
mov
mov
aas
movsb
mov
daa
test
sub
mov
lret
les
sub
dec
daa
mov
mov
mov
sub
sarb
mov
dec
les
sub
inc
xor
shlb
mov
test
inc
movsl
xor
into
inc
rolb
dec
dec
enter
mov
dec
mov
mov
int
sub
movsb
dec
mov
mov
xor
rolb
roll
mov
iret
mov
mov
int
lds
dec
and
mov
ss
xor
cmpsl
rorl
lds
inc
sarb
and
xor
mov
int
and
movsl
sarl
xor
inc
dec
into
mov
push
dec
les
ret
test
mov
aas
into
les
xor
mov
mov
mov
rol
xor
aas
and
mov
mov
mov
mov
int
aaa
aas
fiadds
and
mov
cmp
dec
cmp
mov
shll
inc
mov
leave
ss
mov
mov
xor
lds
and
ss
test
and
xor
xor
mov
cmpsl
aaa
daa
and
inc
aaa
rolb
mov
aaa
mov
dec
inc
xor
mov
dec
and
mov
mov
mov
dec
cmp
mov
cmp
es
inc
dec
sub
daa
mov
cmp
xor
mov
ss
movsb
rol
cmp
xor
xor
mov
into
xor
mov
mov
les
sub
and
int
dec
push
and
mov
ds
les
mov
inc
add
mov
mov
add
adc
xor
mov
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
insb
insb
mov
imul
jmp
xor
mov
int
sub
rclb
mov
mov
mov
mov
mov
mov
dec
aaa
leave
cmp
aaa
movsl
lret
mov
mov
mov
mov
test
mov
sarl
dec
movsb
shlb
xor
fisubrs
into
xor
and
dec
mov
int
and
mov
movsb
les
xor
shlb
aaa
mov
ss
mov
shlb
dec
mov
cmpsl
aas
mov
sub
xor
dec
inc
mov
mov
and
mov
and
push
mov
mov
movsb
xor
sarb
mov
mov
test
mov
aas
mov
roll
es
mov
mov
dec
and
mov
xor
cmp
xor
mov
aaa
int
cmpsl
mov
test
enter
dec
xor
dec
into
roll
mov
aaa
mov
daa
aaa
cmpsl
mov
enter
cmp
dec
mov
xor
xor
and
inc
ret
mov
int
mov
lds
xor
mov
lds
aas
push
cmp
ror
mov
cmp
movsl
shlb
ds
rol
aaa
mov
mov
mov
dec
mov
mov
aaa
mov
into
xor
shlb
cmp
dec
mov
inc
xor
movsl
and
daa
les
aas
lds
mov
mov
shlb
mov
aaa
dec
dec
xor
and
inc
push
cmp
dec
mov
mov
movsl
fiadds
enter
mov
enter
dec
lret
dec
leave
les
inc
int
aaa
inc
rol
inc
shll
inc
movsb
aas
and
mov
cmp
movsb
inc
movsb
daa
mov
ficoms
and
ror
inc
mov
cmp
and
mov
sarb
dec
mov
mov
dec
cmp
dec
mov
inc
inc
fmulp
fmulp
xor
mov
movsb
leave
xor
mov
inc
mov
into
inc
fisubrs
and
daa
es
dec
int
iret
inc
mov
lds
iret
shlb
leave
lds
dec
mov
test
inc
mov
mov
inc
dec
mov
and
cmp
test
movsl
mov
inc
dec
dec
es
and
dec
xor
les
enter
cmpsl
mov
mov
mov
movsb
xor
inc
daa
mov
dec
mov
ror
xor
cmpsl
dec
xor
mov
xor
dec
push
sub
cmp
aas
shlb
inc
xor
ds
xor
leave
cmp
sub
mov
mov
ret
xor
mov
test
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
cmp
insb
pushf
test
imul
mov
imul
aas
inc
mov
dec
xor
and
cmp
mov
mov
mov
les
and
cmp
mov
inc
dec
mov
lret
lds
daa
dec
mov
cmp
xor
iret
into
cmpsl
inc
mov
mov
and
dec
cmp
into
test
cmp
ds
inc
mov
inc
sub
aaa
and
xor
fisubs
enter
xor
mov
inc
inc
inc
dec
inc
mov
and
inc
dec
shlb
cmpsl
mov
mov
cmp
mov
and
dec
mov
aaa
and
test
int
ds
dec
ds
mov
xor
mov
sarb
mov
fisubs
mov
mov
and
es
shlb
mov
shll
dec
daa
mov
and
mov
mov
xor
mov
xor
dec
mov
xor
enter
cmpsl
xor
dec
xor
mov
cmp
dec
mov
inc
mov
dec
mov
inc
rol
into
les
and
es
inc
rorb
and
dec
and
mov
xor
les
sub
cmp
xor
inc
cmp
inc
leave
and
xor
into
inc
cmp
mov
dec
mov
inc
xor
cmp
mov
aaa
inc
xor
rcl
es
es
xor
movsb
xor
int
lret
test
ds
cmp
sub
mov
leave
aaa
inc
mov
push
and
leave
mov
dec
leave
xor
cmp
mov
es
aas
mov
int
aas
mov
mov
sarb
lds
and
mov
mov
movsl
inc
and
and
into
mov
enter
mov
dec
and
mov
and
mov
iret
cmp
dec
mov
mov
int
leave
lret
inc
dec
movsb
leave
mov
mov
mov
les
aaa
ss
xor
xor
mov
dec
lds
dec
shlb
mov
xor
aaa
mov
daa
les
mov
mov
xor
mov
inc
and
dec
cmp
xor
cmp
mov
ss
mov
mov
ss
dec
mov
mov
xor
cmpsl
mov
mov
xor
sarb
mov
inc
fimuls
mov
mov
mov
xor
cmpsl
dec
xor
aaa
cmpsl
leave
mov
push
xor
and
cmp
mov
inc
dec
push
inc
es
mov
cmp
iret
inc
mov
mov
mov
cmp
inc
iret
shlb
shll
mov
mov
int3
xor
add
inc
shrb
add
movl
movl
movl
mov
mov
xor
sub
jmp
rclb
sub
in
lods
insb
mov
or
rcr
imul
les
mov
int
movl
cmp
mov
aaa
xor
les
and
rolb
mov
leave
and
mov
inc
aas
dec
xor
mov
mov
xor
xor
test
int
mov
cmp
xor
mov
rol
mov
mov
ret
xor
lds
ror
mov
cmp
mov
movsl
es
cmp
inc
ret
inc
mov
dec
into
mov
shlb
sub
cmpsl
dec
aas
mov
mov
dec
xor
aas
mov
mov
xor
sub
mov
mov
mov
test
mov
and
daa
ret
movsb
mov
iret
aaa
test
cmp
les
mov
and
and
rolb
sarb
daa
inc
daa
mov
movsl
mov
mov
movsl
mov
xor
leave
push
mov
cmpsl
leave
dec
mov
inc
xor
and
enter
and
mov
xor
mov
ret
enter
ss
dec
mov
xor
and
lds
dec
dec
and
xor
lret
sarl
push
xor
mov
and
and
test
iret
and
into
push
mov
enter
mov
mov
push
cmpsl
ds
xor
mov
lret
push
mov
xor
enter
faddp
dec
mov
mov
mov
movsl
mov
xor
mov
rol
mov
iret
ss
mov
and
cmp
rol
and
and
and
dec
inc
cmpsl
inc
cmp
movsb
int
daa
xor
ret
daa
mov
es
iret
and
dec
aas
and
mov
mov
cmp
into
int
lret
mov
xor
mov
push
xor
movl
xor
inc
dec
test
sub
mov
lret
les
mov
push
ds
xor
cmp
mov
xor
dec
mov
into
inc
inc
inc
mov
rol
inc
test
daa
mov
es
mov
iret
cmp
aaa
test
mov
mov
mov
lds
mov
push
leave
mov
dec
shlb
inc
iret
dec
inc
mov
push
and
dec
and
cmpsl
mov
and
lret
xor
rorb
mov
enter
mov
fidivs
faddp
cmp
shlb
ret
and
dec
inc
inc
mov
dec
shlb
xor
mov
mov
sarb
shll
mov
cmpsl
cmp
inc
inc
and
ret
leave
mov
lea
add
push
mov
mov
or
mov
jmp
lret
mov
shlb
mov
xchg
cmc
mov
pop
imul
sub
daa
aaa
mov
mov
and
xor
sub
inc
dec
dec
enter
ds
lret
enter
shlb
enter
xor
inc
dec
into
mov
dec
sarl
inc
mov
mov
daa
mov
cmpsl
inc
xor
cmp
cmpsl
sarb
dec
mov
mov
mov
lret
mov
shlb
dec
ds
dec
mov
lds
inc
movsb
push
xor
enter
xor
sub
mov
inc
shlb
mov
test
shlb
inc
mov
int
mov
daa
mov
and
xor
mov
mov
mov
sub
int
cmp
movsl
cmp
and
cmpsl
push
mov
xor
inc
mov
mov
aaa
movsb
lds
iret
mov
cmp
aas
cmp
cmp
movsb
mov
enter
and
ds
mov
les
lret
dec
ret
aas
mov
mov
test
lds
mov
cmpsl
mov
mov
lds
mov
cmp
shll
and
mov
ret
inc
mov
enter
into
inc
inc
inc
push
iret
cmp
xor
into
mov
xor
enter
movsb
mov
mov
mov
mov
dec
xor
dec
and
and
ds
dec
into
mov
into
shlb
int
inc
fisubs
lds
xor
inc
dec
xor
es
xor
mov
dec
lret
inc
dec
and
dec
inc
mov
ret
xor
mov
dec
mov
shrb
mov
inc
rol
daa
mov
and
xor
dec
leave
ds
lds
mov
lret
mov
dec
aas
ss
dec
dec
mov
mov
cmpsl
cmp
dec
and
shlb
dec
iret
mov
and
xor
cmp
inc
rorl
and
sub
into
push
mov
mov
mov
and
and
mov
aas
mov
cmp
dec
into
mov
and
enter
ret
mov
inc
ss
mov
mov
shlb
ds
mov
dec
xor
test
ror
xor
and
lds
ss
into
dec
mov
mov
ror
inc
dec
xor
lret
inc
mov
movsl
mov
mov
inc
mov
int
mov
lds
lds
ds
movsb
lds
leave
mov
and
mov
mov
and
ds
sub
and
mov
push
sub
jmp
pop
fcoms
int3
xchg
mov
addl
jae
fildll
jmp
es
mov
ret
mov
mov
dec
dec
mov
leave
cmp
inc
and
fisubs
mov
leave
aaa
mov
xor
lret
cmp
shlb
mov
dec
lds
iret
cmp
cmpsl
cmpsl
movsl
ror
mov
cmp
and
shlb
aas
int
inc
dec
leave
mov
inc
movsb
cmp
enter
and
mov
and
int
test
daa
and
and
and
mov
and
rorb
sub
ror
faddp
and
cmp
rol
enter
rorl
inc
inc
movsb
inc
dec
sub
cmp
and
cmp
mov
lds
inc
into
mov
ret
xor
inc
movsl
mov
daa
iret
and
es
movsl
inc
push
xor
sub
push
mov
mov
mov
cmp
mov
sarl
sub
mov
aas
cmp
les
movsl
mov
dec
dec
mov
daa
dec
rol
int
aas
enter
xor
cmp
cmp
iret
lret
mov
dec
cmpsl
and
mov
dec
inc
and
mov
xor
and
movsl
inc
lds
dec
mov
cmp
mov
dec
mov
cmp
ret
movsl
inc
movsl
aaa
int
dec
movsb
shlb
mov
dec
mov
ss
rcll
cmp
mov
mov
dec
mov
mov
mov
and
xor
xor
and
and
iret
cmp
cmp
enter
dec
mov
inc
mov
mov
and
xor
cmpsl
inc
cmp
inc
and
rorb
mov
inc
shlb
dec
int
and
and
dec
and
push
and
into
mov
xor
mov
cmp
inc
mov
rol
dec
mov
movsb
xor
daa
iret
rolb
inc
and
test
movsl
xor
mov
and
test
xor
cmp
mov
dec
xor
mov
aaa
dec
cmp
and
dec
mov
mov
aas
inc
mov
cmpsl
movsb
aas
shlb
and
sub
mov
aaa
into
and
lret
xor
mov
push
dec
daa
dec
mov
xor
ss
dec
les
mov
ror
and
and
mov
mov
xor
mov
movsb
ret
es
cmpsl
daa
xor
int
enter
mov
push
cmpsl
leave
lret
push
lret
sub
cmp
or
pop
sub
add
mov
push
mov
push
push
push
push
call
mov
mov
sub
mov
mov
add
mov
mov
mov
jmp
jbe
sti
dec
imul
sbb
mov
and
or
jmp
inc
mov
int
xor
dec
mov
movsl
xor
lret
and
cmp
cmp
mov
dec
mov
mov
rol
movl
inc
ss
mov
mov
mov
int
mov
aas
mov
daa
sub
into
cmp
sub
xor
enter
sub
mov
xor
test
mov
mov
aaa
daa
ror
inc
mov
es
mov
push
mov
cmp
inc
mov
enter
cmpsl
dec
movsb
mov
dec
movsb
xor
inc
mov
and
test
mov
aaa
mov
dec
int
mov
aaa
les
leave
and
movsl
test
mov
inc
and
inc
and
dec
and
inc
and
mov
mov
test
mov
mov
mov
enter
push
xor
aaa
dec
mov
inc
shll
movsl
lret
test
aaa
and
xor
mov
and
lds
mov
xor
and
xor
ror
ds
inc
les
mov
leave
test
cmp
cmp
and
dec
aaa
inc
aas
dec
int
rcl
fimuls
mov
lds
mov
iret
inc
mov
enter
shlb
cmp
xor
daa
sub
fisubs
into
enter
aas
mov
cmp
cmp
xor
mov
enter
mov
dec
xor
ret
lret
into
and
mov
cmp
inc
lret
lret
xor
ss
into
mov
push
inc
dec
mov
mov
mov
and
dec
movsl
inc
mov
cmp
mov
mov
cmp
sub
xor
push
mov
inc
xor
mov
enter
and
iret
and
aaa
mov
shll
xor
inc
dec
lret
cmp
xor
mov
ror
leave
and
cmp
dec
es
enter
mov
ds
aaa
mov
mov
mov
fmulp
iret
and
and
and
xor
cmp
push
mov
dec
dec
cmpsl
les
mov
mov
movsl
sub
enter
dec
cmp
and
and
cmp
dec
rolb
les
faddp
cmp
sub
mov
and
ret
dec
movsb
test
movsb
fmulp
sub
dec
es
mov
inc
inc
test
mov
les
mov
and
test
dec
ret
leave
aaa
iret
xor
movsl
mov
ret
movsl
int
leave
xor
imul
lea
push
mov
xor
lea
call
mov
mov
and
mov
and
mov
and
mov
xor
sub
cmp
jne
mov
mov
imul
sub
mov
or
xor
mov
xor
div
mov
jmp
add
loop
mov
subl
jmp
mov
lret
cmpsl
inc
inc
mov
shlb
ret
and
ror
aaa
ss
inc
and
mov
fidivs
xor
lret
mov
fidivs
mov
mov
inc
xor
push
mov
aas
and
xor
mov
mov
dec
iret
fidivrs
int
inc
daa
sub
xor
fidivs
faddp
shrl
sub
mov
dec
and
sarb
xor
mov
and
mov
mov
xor
es
inc
into
inc
aas
mov
mov
dec
test
xor
and
lds
and
mov
mov
int
xor
xor
mov
mov
mov
inc
inc
mov
xor
mov
push
daa
ds
mov
lret
inc
inc
and
aas
shlb
iret
movsl
inc
shll
dec
mov
and
dec
mov
lds
cmpsl
mov
cmpsl
mov
les
cmpsl
daa
xor
xor
es
daa
lret
mov
iret
movsb
xor
iret
inc
and
mov
mov
cmp
shlb
inc
xor
ss
ret
mov
ret
test
mov
into
aas
mov
int
iret
xor
ss
mov
mov
movsl
mov
mov
lret
mov
push
aaa
inc
aas
inc
xor
ret
xor
dec
mov
lds
aaa
sarb
and
and
mov
rorb
xor
mov
lret
xor
mov
inc
into
lret
mov
ret
dec
lret
shlb
ret
xor
xor
dec
dec
ss
xor
mov
iret
xor
mov
mov
daa
mov
mov
sub
cmpsl
mov
and
cmpsl
shlb
int
inc
cmpsl
and
cmpsl
mov
daa
mov
aas
int
iret
mov
enter
cmp
test
inc
mov
inc
lret
mov
mov
and
mov
int
inc
cmpsl
push
mov
xor
enter
mov
ror
dec
mov
mov
mov
enter
mov
inc
mov
es
mov
push
int
cmp
daa
dec
mov
and
test
mov
es
inc
push
into
daa
inc
and
leave
mov
and
mov
movsb
mov
mov
xor
mov
movsb
mov
mov
ds
and
cmpsl
inc
aaa
dec
sarl
sub
xor
xor
lea
push
mov
or
mov
imul
mov
div
push
mov
add
jmp
sub
stos
xchg
fs
sub
xor
adc
stos
sub
imul
and
shll
dec
les
inc
test
xor
lds
daa
ss
int
enter
movsl
mov
cmp
mov
ds
mov
fidivs
mov
mov
inc
es
leave
ds
sub
mov
xor
les
and
inc
cmp
and
and
xor
xor
xor
cmp
dec
ror
mov
xor
ror
cmp
cmp
inc
fiadds
inc
xor
and
xor
mov
es
inc
test
dec
mov
dec
iret
and
mov
mov
mov
movsl
movsb
sub
movsl
ss
rolb
mov
and
dec
movsb
cmpsl
mov
test
and
and
enter
les
rcl
inc
mov
lds
mov
mov
and
movsl
and
les
movsb
movsl
leave
mov
cmpsl
xor
fimuls
movsl
movl
inc
and
and
shlb
sarb
cmp
cmpsl
dec
shlb
mov
movsb
cmpsl
iret
enter
ror
mov
mov
aaa
mov
shlb
push
dec
dec
cmp
movsb
xor
mov
xor
inc
les
mov
and
mov
shlb
movsl
mov
xor
mov
and
cmp
shll
sub
cmpsl
mov
shrl
shll
mov
daa
cmpsl
mov
sarb
mov
lret
mov
mov
les
mov
xor
inc
ss
mov
mov
cmpsl
daa
mov
dec
leave
rorl
rorl
dec
sub
fidivrs
dec
dec
es
cmp
and
inc
mov
and
dec
lds
inc
dec
shlb
mov
ret
mov
and
push
mov
ds
mov
cmp
inc
ret
fisubs
les
xor
mov
sarl
into
xor
lret
and
and
shll
rol
and
cmpsl
mov
cmp
dec
ss
mov
and
es
inc
mov
aaa
mov
leave
into
mov
dec
ds
mov
mov
iret
enter
lds
mov
and
and
aaa
fimuls
rorl
iret
and
ss
iret
and
sub
movsl
mov
iret
and
cmp
dec
movsl
xor
dec
xor
mov
lret
movsb
ds
iret
test
ret
lds
inc
rorb
and
xor
dec
aas
mov
and
and
inc
test
xor
mov
cmp
push
mov
mov
or
add
and
mov
mov
jmp
out
add
add
pop
pop
lret
inc
imul
shll
and
dec
mov
aas
leave
cmp
mov
xor
mov
ds
mov
les
sarb
mov
daa
ss
rolb
ds
lret
daa
and
inc
and
push
mov
inc
aaa
inc
dec
and
mov
ss
mov
mov
into
shlb
and
and
and
lret
and
ds
cmp
cmp
and
into
mov
daa
iret
dec
inc
dec
enter
movsb
mov
int
mov
inc
dec
shrb
dec
mov
inc
mov
mov
dec
mov
dec
push
xor
dec
int
dec
rolb
mov
xor
inc
sarl
and
leave
fidivrs
and
movsb
enter
lret
inc
lret
dec
rcl
inc
xor
xor
ss
mov
inc
aaa
inc
es
sub
mov
xor
mov
mov
xor
mov
shlb
sub
mov
xor
daa
mov
mov
ds
mov
mov
mov
dec
xor
inc
fidivrs
int
mov
movl
mov
dec
mov
xor
mov
xor
aas
dec
inc
dec
ds
inc
ret
mov
daa
ror
into
inc
mov
inc
inc
into
daa
rol
ds
mov
into
mov
cmp
leave
mov
mov
xor
inc
lds
inc
es
cmp
into
into
dec
test
movsb
mov
inc
ds
mov
mov
int
lret
and
dec
mov
mov
mov
mov
xor
dec
mov
xor
dec
mov
es
inc
lret
inc
aaa
inc
mov
ds
aaa
xor
and
xor
cmpsl
inc
int
mov
ret
and
into
cmp
sub
xor
dec
dec
cmp
mov
xor
mov
mov
inc
rorb
mov
mov
mov
mov
inc
cmp
mov
shll
ror
push
inc
test
mov
aas
cmp
iret
cmp
dec
mov
and
inc
xor
dec
enter
lret
enter
mov
and
dec
lds
mov
dec
and
dec
and
mov
sarb
mov
dec
mov
ret
lds
enter
lret
fidivrs
sub
inc
and
test
inc
dec
mov
xor
cmp
inc
cmpsl
mov
int
inc
lret
es
mov
shlb
mov
mov
cmp
lret
xor
mov
mov
mov
add
call
mov
mov
lea
mov
incl
jmp
push
or
outsb
cmp
testl
jmp
cmp
mov
lds
inc
lds
xor
movsb
and
mov
movsl
movsl
and
rcr
es
lds
enter
es
dec
mov
into
test
inc
mov
mov
mov
xor
cmp
and
lret
mov
mov
and
ret
cmp
mov
mov
inc
and
mov
sub
les
mov
mov
cmpsl
mov
and
aas
movsl
sarb
inc
mov
xor
mov
es
rol
lds
into
mov
push
and
inc
xor
mov
dec
mov
xor
dec
and
and
dec
movsl
dec
mov
push
mov
aas
cmp
xor
les
xor
aaa
dec
mov
leave
test
mov
and
movsl
mov
ss
inc
rcl
dec
aas
ret
mov
aas
ror
leave
mov
cmp
ds
sarb
int
enter
lds
mov
mov
ret
ror
inc
mov
cmp
iret
rolb
ret
mov
ror
inc
leave
and
enter
int
mov
mov
xor
mov
mov
cmp
sub
mov
inc
mov
shlb
and
test
iret
mov
dec
dec
inc
inc
inc
int
xor
mov
cmp
iret
cmpsl
cmp
xor
movsl
into
lret
inc
xor
inc
mov
mov
shlb
xor
push
xor
lret
enter
int
ds
ret
movsl
dec
mov
mov
mov
xor
mov
daa
lds
dec
mov
mov
mov
dec
iret
xor
dec
aaa
dec
cmp
inc
mov
dec
mov
ds
and
mov
cmp
fidivs
ds
lret
mov
ret
les
dec
inc
ret
dec
test
inc
inc
xor
fisubrs
sub
push
lds
daa
rorl
mov
mov
and
lret
sarb
fidivrs
mov
mov
dec
mov
mov
dec
inc
inc
int
mov
mov
lret
mov
mov
mov
sub
inc
mov
es
dec
mov
ss
cmp
and
sarl
test
mov
mov
mov
ds
mov
mov
mov
faddp
test
inc
mov
mov
shlb
xor
inc
cld
xor
shld
jmp
push
adc
dec
mov
jbe
in
in
incl
adcl
jmp
inc
xor
cmpsl
xor
leave
rolb
xor
cmpsl
xor
enter
and
and
dec
mov
mov
iret
les
fimuls
fisubs
and
les
sub
iret
inc
mov
dec
mov
into
movsl
and
inc
sub
into
and
cmp
rol
shlb
and
lret
movsb
enter
aas
dec
dec
dec
mov
ret
xor
dec
inc
rol
mov
enter
into
inc
aas
shlb
inc
movsl
mov
mov
and
mov
les
mov
push
and
mov
mov
sarb
cmp
inc
sub
int
xor
sub
mov
movsb
xor
aaa
push
inc
enter
inc
push
dec
dec
inc
mov
dec
dec
mov
xor
cmpsl
mov
lds
and
es
lds
mov
aaa
ds
into
movsb
mov
and
mov
push
mov
mov
mov
mov
daa
dec
dec
cmp
push
dec
cmp
lret
inc
mov
mov
mov
aaa
movsb
mov
ss
es
xor
daa
cmp
ret
sub
mov
xor
xor
mov
mov
xor
sub
and
iret
xor
inc
dec
mov
es
xor
mov
enter
movsb
test
and
mov
es
xor
lds
mov
lds
ret
daa
movl
daa
cmpsl
mov
int
cmpsl
and
xor
into
dec
mov
int
xor
int
lds
lds
dec
inc
mov
movsb
aaa
ds
mov
inc
inc
ds
inc
mov
dec
and
dec
movsb
into
shlb
cmpsl
inc
aas
movsl
mov
lret
mov
ds
mov
xor
and
lds
iret
cmp
inc
mov
fisubs
dec
es
leave
xor
cmp
into
test
xor
dec
mov
movl
mov
leave
mov
and
movsl
dec
mov
mov
and
mov
mov
push
cmpsl
mov
mov
xor
inc
les
fmulp
mov
movsl
inc
and
enter
and
inc
fidivs
into
mov
mov
cmp
dec
mov
and
and
mov
into
xor
mov
and
xor
xor
dec
inc
es
aas
xor
inc
movl
iret
mov
les
cmp
mov
xor
inc
mov
mov
mov
aas
es
mov
and
inc
inc
mov
enter
cmp
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
jmp
scas
stc
xchg
lock
scas
arpl
xchg
scas
idivl
sbb
add
push
jmp
mov
mov
xor
dec
inc
int
leave
cmpsl
test
dec
mov
rorb
inc
dec
ret
les
mov
sub
xor
mov
mov
inc
and
inc
enter
inc
cmp
mov
mov
inc
mov
int
test
mov
aaa
movsb
and
movsb
sub
mov
lds
and
inc
mov
mov
dec
into
xor
mov
xor
dec
aaa
mov
test
ret
and
mov
aaa
iret
dec
xor
mov
cmp
xor
and
shll
mov
mov
mov
dec
mov
xor
xor
mov
shll
dec
fidivs
and
mov
xor
inc
mov
inc
inc
mov
int
mov
xor
and
dec
fisubs
iret
mov
mov
mov
dec
mov
xor
and
dec
and
xor
and
movsl
enter
dec
ss
mov
xor
and
xor
mov
iret
xor
lret
ret
xor
ret
dec
mov
cmp
mov
cmp
leave
mov
mov
inc
and
inc
rol
push
xor
dec
mov
xor
test
dec
cmp
test
lret
mov
inc
cmpsl
inc
movsb
mov
and
lret
dec
cmp
inc
xor
cmpsl
fimuls
mov
movl
int
dec
inc
inc
mov
and
and
iret
ss
iret
ror
mov
mov
xor
mov
xor
inc
cmp
mov
xor
ret
mov
mov
xor
shlb
inc
cmp
sub
cmp
inc
cmp
mov
xor
xor
push
shlb
mov
inc
dec
inc
lret
shlb
xor
int
sub
inc
into
cmp
xor
shlb
ror
mov
cmp
inc
xor
mov
test
aaa
int
xor
mov
les
mov
inc
mov
xor
shlb
and
les
mov
iret
cmpsl
daa
mov
es
inc
aaa
mov
daa
mov
sub
mov
and
ror
mov
cmp
mov
mov
mov
shrb
lret
mov
xor
ds
aaa
xor
aas
mov
ds
aaa
ds
inc
sarb
mov
aas
into
dec
lret
mov
enter
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
dec
inc
sbb
in
mov
mov
xchg
add
mov
mov
imul
les
int
mov
dec
xor
mov
shlb
int
ds
shlb
int
mov
mov
and
inc
xor
xor
xor
es
xor
inc
ror
dec
dec
inc
mov
cmpsl
mov
mov
test
dec
rorl
cmp
mov
ds
daa
mov
aas
movsb
movsl
mov
lret
rorb
and
dec
dec
dec
cmpsl
dec
daa
es
mov
aas
es
mov
mov
inc
and
inc
les
lret
push
mov
test
enter
into
xor
mov
inc
mov
cmp
mov
xor
xor
lret
mov
fisubs
and
inc
inc
mov
mov
xor
dec
aas
xor
aas
dec
lret
movsl
shlb
movsl
push
test
mov
mov
aaa
mov
rol
inc
test
inc
xor
mov
dec
les
mov
rorl
mov
dec
aas
cmp
mov
inc
and
enter
mov
mov
dec
movsb
fisubs
cmp
movsb
test
lds
shrb
mov
aas
and
movsb
mov
cmpsl
lret
inc
mov
mov
mov
iret
daa
and
inc
mov
rol
mov
inc
inc
les
dec
mov
xor
dec
into
dec
dec
mov
aaa
inc
inc
mov
es
mov
mov
and
xor
mov
fidivs
mov
movsb
ds
int
dec
xor
shll
es
fidivs
dec
inc
fidivrs
and
mov
dec
push
dec
test
xor
aaa
mov
mov
and
leave
and
inc
and
mov
inc
mov
dec
cmp
xor
and
iret
cmp
mov
aas
cmp
inc
and
dec
xor
sub
inc
and
aaa
mov
xor
mov
inc
cmp
lret
mov
and
mov
xor
sarb
mov
int
cmp
movsl
sarb
mov
xor
and
ds
fisubs
daa
mov
ss
dec
mov
mov
mov
sub
mov
movsl
leave
inc
shlb
and
test
movsb
into
and
push
mov
dec
dec
and
aas
fidivs
movsl
movsl
aas
iret
xor
sarb
ret
cmp
inc
and
dec
xor
into
cmp
xor
push
cmp
cmpsl
ss
sub
xor
mov
into
xor
sub
mov
inc
aas
dec
dec
xor
and
mov
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
pushl
jmp
fwait
scas
pop
mov
xchg
and
jmp
dec
mov
sub
inc
mov
and
es
mov
push
rorb
dec
dec
mov
and
int
roll
ret
xor
cmpsl
mov
ss
and
mov
inc
sub
test
mov
and
sub
and
cmp
xor
mov
and
xor
cmp
cmp
mov
aas
mov
inc
dec
ror
shll
movsl
inc
inc
daa
mov
movsl
cmp
xor
mov
dec
movsb
ret
lds
movsb
xor
aaa
cmp
iret
les
mov
inc
and
and
mov
sarb
and
shll
and
les
sarb
inc
les
mov
enter
lret
mov
lret
xor
les
mov
mov
cmp
mov
lret
dec
sub
ret
dec
mov
iret
dec
cmp
les
cmp
xor
and
daa
inc
xor
xor
les
daa
cmp
xor
inc
mov
xor
lret
mov
dec
and
xor
dec
and
xor
dec
aas
mov
mov
ret
aaa
and
mov
and
inc
ds
and
and
and
cmpsl
mov
test
cmpsl
lds
cmp
ss
mov
cmp
mov
cmp
and
xor
rolb
inc
enter
movsl
mov
mov
and
leave
xor
cmp
daa
int
lret
dec
inc
and
ret
movsl
leave
dec
xor
leave
int
int
leave
fisubs
inc
inc
xor
xor
mov
mov
mov
ss
and
enter
cmpsl
aas
cmpsl
and
dec
fisubs
enter
inc
shll
dec
ss
les
shlb
and
inc
mov
mov
mov
cmpsl
lret
mov
iret
dec
mov
test
movsb
and
xor
aas
xor
aas
mov
les
xor
daa
ret
mov
dec
mov
dec
mov
inc
dec
xor
xor
shlb
mov
xor
dec
inc
aaa
iret
mov
xor
sub
and
mov
cmp
leave
ss
xor
lds
mov
mov
iret
into
iret
cmp
and
and
mov
cmp
ss
push
aaa
ret
mov
mov
mov
mov
mov
ret
sub
dec
inc
enter
movsl
int
dec
mov
push
mov
mov
mov
cmp
cmp
lret
and
mov
lds
and
add
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
jmp
mov
push
or
ret
jmp
mov
mov
mov
iret
cmp
cmp
mov
mov
shll
cmp
dec
inc
enter
mov
and
fiadds
enter
cmpsl
lret
aas
mov
sarl
and
mov
push
shlb
inc
movsl
mov
ror
shlb
iret
shrb
cmp
inc
inc
enter
mov
cmp
mov
lds
enter
and
mov
mov
enter
daa
mov
into
es
mov
test
mov
movsl
cmp
ss
and
aaa
ss
inc
inc
dec
inc
cmp
xor
mov
mov
sarb
xor
iret
movsl
enter
xor
mov
xor
ror
lret
cmp
inc
cmp
mov
inc
push
xor
rcr
inc
ds
inc
and
lds
inc
fidivrs
and
sarb
mov
lds
cmpsl
movsb
mov
mov
and
push
cmpsl
and
xor
test
mov
and
and
sub
les
xor
xor
mov
mov
iret
enter
cmpsl
ds
cmp
mov
ss
mov
test
xor
xor
rorb
les
cmpsl
les
sarl
daa
ret
es
mov
xor
inc
dec
cmpsl
fmulp
mov
es
mov
mov
mov
test
dec
mov
lds
dec
mov
aas
ret
int
test
mov
xor
push
test
xor
lds
mov
inc
mov
sub
sarb
ds
int
rolb
inc
sub
aaa
mov
lds
les
int
inc
ret
dec
mov
int
and
xor
rol
dec
inc
test
mov
dec
sub
dec
inc
cmp
mov
mov
mov
into
aaa
and
inc
mov
inc
iret
lret
aas
inc
and
push
mov
xor
fidivs
mov
push
fmulp
int
lret
mov
dec
dec
sarb
lds
int
movsb
mov
dec
lret
dec
aas
test
lds
daa
iret
es
lds
mov
leave
xor
leave
les
insb
add
jmp
out
jp
fs
xchg
pop
jae
push
in
repz
xchg
ljmp
mov
inc
es
dec
dec
mov
and
inc
lds
mov
cmp
lret
mov
lds
dec
aas
mov
push
ds
movsb
cmp
mov
cmp
mov
int
mov
mov
mov
and
ss
mov
ret
dec
shlb
int
dec
xor
les
daa
xor
dec
xor
inc
dec
inc
mov
into
inc
sub
xor
daa
cmp
cmp
ret
lds
dec
mov
inc
and
ss
inc
aas
dec
xor
xor
test
cmp
es
ds
sarl
les
inc
ret
aas
movsb
movsl
enter
daa
mov
es
lret
enter
dec
aas
mov
and
xor
sub
inc
sarb
dec
mov
aas
inc
rol
ror
and
iret
cmp
movsb
xor
dec
es
mov
movsl
mov
inc
ss
iret
xor
mov
and
dec
aaa
mov
lret
cmp
inc
mov
daa
xor
inc
dec
inc
test
cmp
enter
dec
xor
xor
aaa
dec
dec
faddp
sarb
ret
movl
aas
iret
mov
cmp
mov
mov
ret
ss
dec
dec
mov
xor
iret
sub
and
shll
iret
shlb
aas
and
faddp
cmpsl
inc
ss
into
push
movsl
lret
and
inc
mov
xor
dec
es
mov
aaa
dec
cmpsl
es
fidivs
and
faddp
mov
inc
cmp
mov
iret
faddp
leave
inc
inc
mov
xor
mov
cmp
mov
xor
xor
mov
dec
dec
aaa
mov
dec
leave
xor
aaa
inc
cmpsl
xor
lret
mov
and
and
mov
xor
dec
and
mov
xor
mov
inc
aaa
movsl
inc
sarb
ret
ret
mov
inc
dec
and
dec
movsl
ds
xor
xor
fisubs
mov
dec
xor
lret
int
sub
and
mov
aaa
test
dec
ss
test
inc
in
ja
add
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
sub
mov
movl
movl
movl
movl
jmp
push
scas
int
mov
je
sub
hlt
mov
dec
imul
aas
aas
movsl
xor
dec
dec
inc
xor
inc
cmp
inc
mov
int
and
dec
dec
mov
and
inc
lret
int
cmpsl
mov
ret
and
shlb
fidivrs
inc
mov
xor
inc
mov
cmp
leave
ss
dec
faddp
inc
daa
mov
and
and
mov
test
cmp
cmpsl
xor
dec
push
mov
inc
inc
movsl
daa
ds
dec
dec
dec
mov
and
enter
fisubrs
mov
mov
dec
daa
ror
mov
cmp
xor
aas
mov
shlb
dec
inc
shlb
and
inc
iret
mov
mov
cmp
and
mov
mov
and
and
rol
movsl
inc
and
dec
inc
lret
sub
xor
xor
shll
int
mov
lds
dec
dec
mov
mov
mov
mov
mov
xor
mov
cmp
inc
dec
dec
mov
cmp
dec
movsb
inc
inc
dec
lret
cmp
inc
and
rol
mov
daa
daa
rol
mov
mov
mov
mov
mov
mov
ds
test
mov
ds
inc
mov
cmp
mov
int
ret
mov
xor
ret
dec
mov
mov
mov
mov
mov
aas
inc
cmp
xor
dec
aaa
and
aaa
mov
mov
xor
iret
xor
mov
leave
mov
daa
ret
dec
mov
xor
aas
and
mov
dec
daa
inc
xor
movsl
cmpsl
fidivrs
mov
lds
inc
lds
xor
test
iret
cmp
dec
mov
mov
dec
ds
xor
dec
mov
mov
inc
cmpsl
mov
inc
into
xor
mov
inc
mov
ss
inc
movsl
mov
inc
mov
cmp
enter
iret
lret
and
movsl
mov
rol
shll
and
dec
cmp
xor
cmpsl
iret
es
cmp
ss
dec
cmpsl
push
inc
mov
dec
les
enter
mov
movsb
inc
mov
add
movl
movl
movl
mov
movl
mov
mov
mov
mov
and
mov
sub
mov
mov
sub
mov
imul
mov
sub
xor
div
add
mov
and
mov
movl
movl
movl
mov
mov
xor
add
mov
imul
xor
mov
mov
movl
mov
xor
jmp
movsb
jle
ret
insb
insb
popa
pop
adc
dec
jl
imul
xor
xchg
ljmp
mov
dec
mov
dec
les
inc
mov
dec
and
xor
lds
into
mov
movsb
lds
leave
and
ret
mov
inc
push
mov
enter
and
and
push
inc
xor
ss
mov
mov
inc
and
and
dec
cmp
mov
lret
and
sub
inc
mov
mov
cmpsl
dec
aaa
leave
sarb
push
mov
and
inc
mov
ds
xor
mov
mov
ret
mov
mov
inc
inc
inc
ss
into
aas
daa
mov
daa
mov
mov
les
xor
les
leave
sub
int
dec
int
dec
sub
fiadds
leave
dec
movsb
and
les
mov
mov
enter
and
cmp
dec
mov
inc
dec
inc
fisubs
mov
mov
ret
dec
inc
shll
into
mov
shlb
inc
fisubrs
xor
cmp
leave
iret
lret
mov
mov
cmp
inc
enter
enter
xor
les
dec
inc
mov
into
cmp
xor
rolb
dec
cmp
ret
fisubs
mov
cmp
dec
and
leave
and
mov
mov
and
leave
dec
inc
and
daa
es
inc
les
aas
sub
mov
fisubs
and
inc
mov
and
and
ror
cmp
xor
aaa
sarl
test
mov
daa
cmpsl
cmp
xor
mov
fidivs
mov
sub
aas
and
mov
xor
shlb
mov
cmpsl
mov
ds
ds
xor
mov
mov
mov
dec
and
sarb
fmulp
cmp
mov
mov
test
xor
dec
inc
mov
les
and
ds
mov
inc
movsl
cmp
inc
lret
push
mov
mov
push
inc
lret
lret
into
mov
into
inc
dec
add
xor
mov
movl
movl
mov
mov
shr
add
and
mov
sub
mov
mov
movl
movl
movl
movl
mov
add
mov
jmp
mov
insb
test
cld
jae
mov
imul
shll
mov
inc
lds
push
fidivs
mov
mov
inc
mov
shlb
mov
mov
sarb
mov
mov
inc
movsb
iret
iret
xor
int
push
ss
lds
dec
mov
xor
and
cmp
mov
mov
mov
shlb
mov
mov
mov
leave
daa
mov
dec
fidivs
lret
and
leave
test
mov
and
mov
into
xor
into
mov
inc
mov
test
lds
daa
mov
xor
mov
dec
inc
test
ret
dec
inc
dec
les
mov
xor
mov
xor
lret
mov
mov
and
dec
ds
mov
inc
les
dec
shlb
fisubrs
iret
movsl
dec
dec
ret
mov
iret
mov
mov
mov
shlb
dec
mov
and
sarl
movsb
dec
mov
inc
mov
mov
mov
xor
int
mov
and
xor
mov
ret
mov
es
mov
es
dec
iret
enter
mov
and
mov
mov
dec
and
dec
dec
mov
sub
test
test
mov
mov
dec
lret
mov
xor
lret
and
and
and
inc
dec
inc
cmpsl
mov
and
and
cmp
movsb
lds
mov
cmp
iret
xor
inc
dec
inc
and
movsl
and
aaa
inc
cmp
and
rcl
and
lds
push
shlb
and
cmp
mov
lds
dec
dec
xor
xor
mov
iret
mov
dec
xor
int
mov
int
movsb
mov
into
and
test
shlb
dec
mov
xor
dec
and
inc
movsl
mov
mov
shll
les
ret
and
xor
test
mov
xor
fisubs
sub
mov
test
mov
mov
and
movsb
mov
lret
cmp
movl
mov
mov
and
dec
imul
add
xor
mov
pop
div
pop
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
jmp
add
xor
jns
mov
xor
cld
ljmp
mov
daa
movsl
and
sub
and
xor
aas
leave
iret
fisubs
shlb
into
inc
and
mov
mov
xor
movsb
xor
inc
mov
dec
inc
sub
dec
cmp
and
test
enter
aas
push
aaa
dec
mov
iret
mov
inc
and
les
test
enter
mov
fidivs
into
and
ret
movsl
mov
and
lret
mov
aas
mov
xor
into
mov
xor
mov
faddp
mov
inc
mov
xor
mov
mov
ret
cmpsl
inc
ds
cmp
sub
and
mov
xor
and
push
xor
movsb
dec
cmpsl
shlb
test
aas
cmp
mov
mov
mov
cmp
mov
sub
inc
inc
sub
fimuls
daa
es
xor
cmp
dec
mov
mov
dec
ss
ret
and
cmp
sub
mov
inc
movsb
les
mov
mov
aas
dec
dec
dec
ds
daa
and
mov
mov
and
mov
sub
xor
ss
and
ret
mov
int
movsb
inc
cmp
inc
mov
mov
dec
push
les
and
cmp
rorb
dec
mov
mov
and
and
cmpsl
and
inc
and
mov
push
les
les
shlb
inc
mov
mov
xor
movsl
lds
mov
ret
inc
dec
cmpsl
aaa
mov
mov
es
dec
mov
xor
iret
inc
dec
and
dec
dec
mov
mov
shlb
into
and
shlb
inc
es
mov
shlb
push
mov
cmp
lds
mov
mov
inc
cmp
ret
ds
mov
aas
mov
push
enter
test
inc
lret
push
cmp
inc
mov
mov
ds
cmp
sub
ret
aaa
mov
movl
inc
dec
roll
mov
movsl
daa
lret
inc
xor
mov
xor
mov
dec
dec
xor
inc
inc
into
dec
mov
and
mov
inc
and
int
cmp
mov
and
shll
push
inc
and
iret
mov
lret
ret
inc
xor
cmp
dec
mov
cmpsl
xor
dec
cmp
cmp
mov
mov
dec
inc
sub
sub
les
cmp
inc
rol
add
jmp
mov
or
insb
movsl
jl
pop
sar
cwtl
pop
push
mov
jmp
ss
mov
mov
ret
mov
movsb
fidivrs
mov
sarl
mov
mov
lret
sarl
xor
xor
xor
mov
enter
inc
cmp
mov
mov
xor
ds
cmp
cmp
dec
lds
dec
xor
dec
mov
inc
and
mov
dec
and
mov
test
and
les
leave
xor
dec
mov
xor
movsl
les
mov
mov
aaa
mov
push
mov
xor
inc
movsl
int
dec
rol
rorb
inc
inc
push
xor
mov
mov
movsl
mov
fimuls
xor
mov
mov
and
and
test
mov
inc
int
ret
and
and
xor
iret
mov
mov
mov
xor
movsb
mov
shlb
and
xor
es
dec
lds
shll
mov
es
mov
lret
mov
mov
dec
xor
mov
ds
mov
movsl
ret
into
movsb
xor
cmp
mov
enter
and
mov
mov
into
fiadds
inc
test
inc
cmp
enter
dec
xor
and
movsl
push
xor
inc
cmp
mov
mov
shrb
inc
inc
mov
inc
cmp
inc
mov
mov
xor
mov
mov
mov
mov
dec
rorl
ror
shlb
mov
inc
ror
aas
mov
sub
rorb
inc
leave
dec
fisubs
lds
mov
inc
inc
ss
fisubrs
mov
movsb
inc
mov
mov
mov
mov
dec
aas
push
int
cmp
ds
mov
sub
mov
ds
enter
xor
mov
inc
and
mov
inc
int
mov
xor
lds
mov
dec
xor
mov
mov
mov
movsl
test
movsl
xor
mov
xor
dec
lds
es
fidivs
and
into
dec
dec
aas
dec
mov
xor
inc
xor
mov
ss
push
xor
dec
dec
ret
and
mov
cmp
daa
mov
mov
and
mov
xor
mov
xor
mov
inc
mov
mov
and
enter
xor
ret
inc
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xor
aaa
pop
mov
mov
fs
jecxz
imul
cmp
dec
mov
aaa
mov
cmp
into
aaa
aaa
mov
inc
lret
and
test
cmp
sub
mov
sarb
xor
lret
mov
shlb
aas
xor
mov
lds
and
ss
ror
xor
aas
enter
dec
leave
mov
mov
mov
dec
mov
push
ds
mov
aas
xor
dec
mov
push
dec
mov
movsb
rorl
mov
mov
into
leave
lret
into
inc
shlb
mov
mov
ret
inc
rol
test
movsl
aaa
mov
leave
shlb
inc
xor
mov
xor
and
rol
aas
ds
aaa
and
mov
daa
mov
movsl
mov
mov
mov
shlb
dec
mov
cmp
xor
shlb
inc
and
dec
movsb
and
xor
mov
iret
iret
mov
aas
inc
xor
shlb
dec
enter
mov
mov
lret
dec
and
mov
daa
faddp
mov
sarl
mov
movsb
shlb
mov
and
leave
int
es
dec
inc
and
dec
xor
ror
mov
mov
daa
xor
cmp
shlb
movsb
leave
mov
mov
enter
inc
shlb
daa
mov
cmp
movl
mov
lret
mov
mov
dec
and
shlb
xor
ret
inc
mov
ds
mov
inc
mov
inc
inc
shll
mov
leave
xor
into
and
iret
test
push
inc
xor
mov
inc
test
enter
inc
and
cmp
int
xor
inc
mov
cmpsl
dec
mov
mov
lds
into
leave
daa
daa
and
cmp
int
mov
mov
into
cmp
push
es
xor
ret
push
xor
int
ret
cmpsl
sub
mov
inc
inc
dec
dec
lret
mov
inc
lds
movsb
sarl
aas
mov
cmp
aas
movsb
daa
mov
dec
mov
dec
cmp
mov
xor
and
xor
rol
aas
aaa
mov
xor
mov
cmp
mov
xor
xor
mov
mov
lds
sarl
cmc
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
mov
mov
mov
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
jmp
decl
leave
in
into
imul
add
orl
imul
and
iret
shrb
mov
inc
aaa
fidivrs
xor
cmp
xor
movsl
lret
mov
dec
lret
rorb
into
cmpsl
mov
xor
movsl
cmpsl
mov
movsb
mov
mov
mov
int
mov
movsb
lret
aaa
test
test
mov
movsl
mov
and
xor
xor
test
mov
inc
lds
xor
dec
ds
mov
iret
cmp
ret
sub
les
mov
int
mov
aaa
dec
mov
dec
fidivrs
and
xor
lret
cmpsl
and
and
mov
dec
cmp
inc
cmp
aas
daa
and
mov
daa
xor
cmpsl
sub
roll
mov
mov
mov
enter
mov
inc
dec
enter
cmp
xor
mov
shlb
daa
leave
mov
iret
xor
daa
dec
sub
mov
mov
mov
dec
cmp
lret
inc
dec
and
cmpsl
cmpsl
lret
dec
xor
and
mov
cmp
xor
and
enter
mov
dec
mov
and
inc
sub
and
ds
aaa
mov
movsb
and
lret
movsb
inc
dec
mov
mov
mov
mov
mov
inc
inc
mov
ret
and
es
inc
and
dec
rol
inc
sub
and
aaa
test
inc
inc
mov
mov
inc
cmpsl
inc
and
mov
dec
mov
ss
mov
cmp
mov
mov
dec
into
dec
lds
inc
mov
mov
sub
dec
xor
dec
mov
xor
cmp
int
dec
cmp
dec
rol
movsl
sub
inc
into
aaa
inc
ror
iret
mov
mov
aaa
mov
cmp
xor
mov
inc
les
les
and
mov
shlb
dec
inc
inc
cmp
xor
mov
mov
and
mov
dec
into
aaa
dec
mov
mov
lds
dec
mov
and
mov
shlb
xor
test
push
mov
into
xor
sub
fimuls
cmp
cmpsl
dec
mov
inc
daa
mov
cmp
aas
and
cmp
dec
leave
daa
xor
ss
fidivrs
aas
and
into
xor
cmp
jne
and
mov
and
mov
push
push
xor
jmp
jecxz
scas
stos
test
add
scas
add
sbb
ljmp
movsb
leave
iret
mov
faddp
xor
mov
sarb
inc
inc
and
xor
fisubs
push
mov
inc
movsl
and
mov
sub
dec
xor
dec
mov
inc
inc
xor
es
iret
and
cmpsl
and
ds
lret
cmp
sub
mov
and
dec
leave
mov
cmpsl
mov
mov
mov
test
ror
mov
inc
cmp
mov
mov
mov
mov
iret
dec
xor
enter
mov
movsl
cmp
cmp
leave
ss
movsl
enter
cmp
mov
enter
sub
ds
xor
and
ds
aaa
mov
dec
dec
and
into
mov
inc
int
lret
cmp
mov
mov
cmpsl
dec
mov
daa
mov
movsb
xor
dec
mov
mov
dec
aaa
inc
dec
cmpsl
mov
mov
mov
and
movsl
fisubs
fmulp
mov
aas
daa
dec
test
movsl
les
sub
mov
mov
es
fisubs
xor
cmp
xor
movsb
inc
cmpsl
daa
mov
mov
dec
les
mov
mov
ss
mov
mov
dec
leave
mov
mov
mov
mov
roll
dec
cmpsl
xor
ss
fidivrs
cmpsl
mov
ret
mov
and
and
int
xor
aaa
dec
sub
fidivrs
mov
and
movsb
mov
xor
mov
iret
ficoms
dec
push
cmp
daa
xor
push
dec
aaa
xor
lret
mov
dec
inc
and
dec
mov
mov
cmp
inc
mov
aaa
mov
mov
mov
test
cmp
xor
leave
mov
ss
dec
dec
inc
ss
leave
xor
daa
ret
dec
mov
mov
mov
ds
movsb
mov
enter
dec
shlb
and
mov
movsl
xor
mov
inc
inc
mov
mov
ret
lret
mov
push
and
shlb
inc
int
mov
cmp
cmp
xor
cmpsl
shll
xor
cmpsl
dec
ss
dec
mov
daa
mov
shlb
sarb
xor
faddp
and
mov
daa
into
inc
xor
mov
sub
xor
aas
les
movsb
and
call
mov
mov
jmp
repnz
cmpsl
mov
sub
hlt
xor
imul
aas
xor
inc
mov
ds
mov
mov
mov
cmp
mov
push
and
iret
dec
sarb
inc
daa
test
es
dec
lds
dec
cmp
leave
mov
xor
dec
mov
lret
dec
shlb
lds
mov
shlb
shlb
ret
iret
mov
xor
and
sarb
sub
mov
daa
dec
mov
mov
leave
into
dec
dec
and
xor
push
ss
cmp
inc
mov
mov
mov
iret
xor
cmp
mov
xor
mov
int
mov
mov
ror
cmp
shlb
xor
dec
mov
push
fimuls
daa
rorb
and
mov
aas
mov
mov
int
mov
test
dec
lret
dec
mov
mov
and
xor
cmp
dec
ss
cmpsl
int
cmpsl
iret
les
daa
aaa
dec
xor
dec
dec
aas
xor
daa
mov
mov
inc
dec
ret
ret
dec
enter
sub
ror
and
inc
inc
xor
cmpsl
xor
dec
mov
ss
leave
cmp
mov
enter
enter
iret
iret
daa
push
mov
aaa
iret
lds
push
xor
and
mov
mov
xor
mov
int
cmp
iret
and
mov
mov
ds
and
int
leave
enter
inc
mov
xor
daa
into
cmp
sub
mov
int
int
shll
xor
mov
inc
xor
into
and
inc
fmulp
dec
inc
ret
movsb
mov
cmp
and
and
inc
mov
dec
xor
and
cmp
dec
and
mov
iret
inc
mov
mov
ret
leave
mov
cmpsl
movsb
mov
cmpsl
mov
and
fidivrs
mov
les
xor
movsb
mov
mov
cmp
dec
xor
movsl
les
into
inc
inc
dec
and
xor
mov
mov
inc
mov
and
sub
aaa
dec
test
inc
mov
dec
dec
int
into
roll
into
xor
cmpsl
ds
iret
and
enter
ds
xor
movsl
enter
mov
add
adc
xor
cmp
jmp
xchg
stc
bound
add
adc
iret
add
hlt
aas
mov
jmp
iret
iret
inc
mov
mov
into
dec
dec
and
dec
sub
push
movsb
mov
ds
mov
int
es
fiadds
and
enter
test
mov
ret
mov
and
mov
int
dec
inc
enter
sarl
dec
and
and
mov
aas
movsl
fidivs
inc
sarb
and
iret
enter
dec
xor
mov
les
mov
les
aaa
mov
mov
and
lds
mov
mov
and
mov
xor
push
int
shlb
inc
mov
aaa
mov
movsl
movsb
mov
mov
dec
cmp
mov
xor
test
es
movsl
xor
dec
ret
mov
dec
xor
mov
inc
cmp
and
and
mov
dec
movsb
xor
and
dec
into
and
ret
mov
inc
cmp
iret
mov
cmp
sarl
and
cmp
mov
and
mov
mov
mov
dec
into
leave
mov
enter
mov
cmp
leave
mov
mov
and
and
and
and
int
movsl
mov
mov
ds
inc
sarl
and
mov
mov
lds
mov
iret
movsb
inc
mov
mov
shlb
mov
cmp
inc
cmp
rorl
daa
mov
and
enter
mov
push
ret
mov
lds
mov
mov
es
and
and
es
movsl
xor
mov
daa
mov
ss
xor
dec
and
inc
inc
ret
cmp
mov
inc
mov
aaa
dec
and
mov
leave
dec
dec
lds
xor
fidivs
fidivrs
inc
movsb
ss
sub
mov
mov
mov
mov
int
test
inc
shlb
mov
xor
xor
into
shrb
leave
cmpsl
inc
sub
mov
and
sub
mov
aas
fisubs
xor
mov
and
movsb
mov
inc
inc
inc
xor
mov
into
mov
iret
mov
and
dec
mov
xor
cmp
lret
lds
xor
leave
mov
mov
movl
and
jne
cmp
jne
jmp
cmp
push
cmpsl
dec
stos
movsl
mov
cld
in
testl
ljmp
dec
cmpsl
mov
ror
sarl
mov
inc
ret
enter
push
mov
xor
inc
int
cmp
mov
xor
mov
test
lret
xor
lds
and
mov
shlb
mov
ds
test
rolb
mov
inc
cmp
lret
and
cmp
inc
mov
mov
es
dec
lret
iret
cmp
inc
mov
lret
iret
mov
fidivrs
inc
cmp
cmpsl
xor
movsb
enter
leave
ss
ss
dec
iret
mov
mov
test
inc
xor
xor
push
lret
sub
mov
dec
ret
xor
into
mov
xor
and
movsl
and
and
xor
mov
mov
and
int
inc
mov
lret
mov
mov
and
into
mov
xor
and
xor
ds
movsb
daa
mov
cmpsl
dec
cmpsl
lret
dec
test
xor
cmp
and
mov
movsb
mov
mov
mov
test
movsl
mov
iret
xor
ss
mov
into
movsb
mov
push
daa
xor
mov
ds
mov
test
and
sub
movsl
xor
shlb
inc
mov
lds
aas
xor
mov
dec
and
leave
shll
dec
shlb
mov
dec
mov
dec
inc
mov
ss
mov
mov
sub
cmp
dec
mov
and
ret
mov
int
inc
mov
mov
dec
ret
inc
dec
daa
cmp
and
mov
ret
mov
movsl
ss
mov
and
rolb
leave
xor
mov
and
inc
mov
aas
and
dec
aas
xor
cmp
int
and
mov
test
enter
ret
lret
cmp
mov
cmp
inc
enter
movsb
test
sub
movsb
mov
mov
mov
xor
dec
mov
leave
sub
into
ror
mov
ret
cmp
mov
xor
xor
cmp
iret
inc
dec
inc
push
cmp
inc
xor
dec
mov
mov
mov
dec
mov
xor
sub
mov
cmp
movsb
mov
mov
enter
dec
aaa
dec
ds
mov
ss
mov
cmp
mov
sub
mov
xor
or
xor
mov
sub
mov
add
xor
mov
xor
push
pop
div
mov
mov
xor
shr
imul
mov
add
mov
jmp
js
xor
insb
mov
outsb
repz
jmp
aas
mov
ds
xor
mov
mov
test
dec
and
inc
iret
mov
mov
iret
mov
xor
mov
dec
mov
es
movsl
cmp
mov
mov
int
mov
mov
fidivrs
inc
and
xor
shlb
mov
mov
mov
cmpsl
cmp
enter
int
mov
mov
inc
mov
shll
xor
dec
into
mov
aas
dec
inc
daa
test
mov
les
aas
ss
mov
lret
cmp
dec
ds
and
mov
dec
xor
mov
mov
aas
lret
xor
into
xor
fidivs
lds
ret
dec
cmp
mov
mov
and
cmp
test
iret
mov
dec
inc
ss
cmp
dec
cmp
inc
xor
xor
daa
xor
mov
inc
sarl
dec
aas
inc
inc
and
mov
and
rolb
aaa
iret
enter
daa
and
mov
inc
and
xor
rol
dec
sub
mov
mov
inc
and
inc
mov
mov
cmp
cmp
mov
inc
movsl
ss
leave
cmp
mov
dec
movsl
mov
dec
shrb
and
and
inc
into
cmp
mov
xor
fidivrs
and
mov
cmp
mov
mov
xor
dec
mov
aaa
dec
xor
shll
sub
dec
xor
rcr
test
int
and
leave
dec
aas
xor
mov
lret
sub
xor
inc
lret
leave
xor
mov
mov
sub
mov
inc
cmp
int
xor
cmp
fmulp
mov
xor
sarb
dec
mov
cmp
sarb
cmp
push
int
ss
cmp
dec
dec
mov
mov
rorl
and
dec
iret
inc
ret
movsb
dec
daa
mov
xor
lret
mov
inc
lret
aas
leave
and
xor
mov
ret
iret
mov
mov
dec
and
mov
aas
dec
inc
cmp
les
mov
mov
inc
mov
dec
fidivrs
mov
mov
mov
inc
daa
and
iret
xor
inc
inc
rorb
inc
mov
and
mov
and
ss
mov
cld
ljmp
roll
push
in
dec
loopne
rorl
or
mov
and
lea
add
mov
jmp
sub
pushf
in
add
cmp
adc
in
mov
jmp
mov
mov
movsb
iret
mov
enter
sub
iret
ret
ds
xor
dec
cmp
dec
push
les
xor
lret
fidivrs
daa
lret
movsl
test
xor
dec
inc
mov
rol
test
rorb
ret
ds
lret
rol
movsb
inc
and
mov
and
mov
mov
and
fidivrs
lret
movsl
sarl
iret
and
xor
aaa
ss
inc
iret
lret
xor
into
aaa
and
mov
and
and
ds
dec
mov
cmpsl
cmp
shlb
test
xor
movsl
dec
ret
int
inc
mov
test
les
dec
movsb
mov
inc
mov
mov
xor
mov
aaa
mov
inc
and
inc
inc
dec
mov
dec
movsb
mov
iret
movl
aaa
cmp
mov
mov
xor
movsl
faddp
daa
mov
lds
test
xor
inc
shlb
cmp
shlb
les
mov
and
sub
mov
rorb
mov
inc
dec
xor
lds
dec
fisubs
and
cmpsl
mov
mov
mov
lds
dec
sarb
leave
xor
cmp
daa
and
push
leave
test
test
cmp
and
iret
xor
xor
les
push
xor
mov
and
lret
shlb
mov
mov
mov
mov
movl
lds
inc
lds
xor
dec
mov
movsl
movsb
and
leave
shlb
rolb
lds
lret
mov
cmp
leave
mov
les
and
test
mov
mov
ss
push
cmpsl
inc
shrb
iret
mov
mov
xor
and
and
fisubs
inc
shlb
cmp
les
xor
xor
and
cmp
shlb
xor
and
mov
cmp
daa
inc
dec
cmp
mov
and
xor
shlb
into
mov
xor
mov
shll
inc
movsb
inc
test
xor
mov
mov
mov
inc
mov
and
leave
es
mov
cmp
fidivrs
and
movsb
int
ds
enter
and
mov
iret
sarb
xor
inc
rorl
mov
or
mov
or
mov
or
mov
or
mov
xor
xor
add
mov
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
mov
xor
or
xor
and
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
ret
ret
int3
xchg
mov
loope
and
jmp
les
aaa
cmp
mov
inc
ret
mov
fisubrs
xor
sub
cmp
and
and
mov
mov
dec
xor
xor
mov
xor
xor
mov
rol
mov
les
xor
mov
enter
ret
dec
ss
sub
and
aaa
dec
inc
mov
and
mov
sub
mov
daa
les
movsl
and
xor
dec
leave
and
xor
int
mov
inc
cmp
and
sarb
xor
dec
mov
xor
xor
ret
shll
movsl
dec
inc
and
inc
inc
mov
mov
shlb
dec
and
daa
mov
xor
mov
mov
xor
xor
fidivs
mov
xor
dec
mov
aas
leave
mov
mov
fisubs
mov
xor
lret
mov
and
movsb
mov
mov
lret
ds
dec
and
mov
cmp
mov
mov
movsb
cmp
and
xor
inc
cmpsl
inc
ret
mov
mov
cmp
cmp
ret
les
aas
xor
and
and
ss
aaa
inc
push
dec
and
int
and
xor
mov
into
ror
dec
inc
iret
and
daa
movsl
mov
iret
and
aas
test
inc
leave
xor
aaa
cmp
inc
mov
inc
mov
push
cmp
cmpsl
mov
mov
push
dec
mov
xor
cmp
mov
movsb
shlb
mov
inc
lds
and
mov
and
dec
movsb
int
cmp
aas
into
cmp
ror
mov
test
sub
inc
dec
xor
daa
mov
ds
leave
inc
mov
iret
mov
and
xor
xor
and
into
xor
mov
mov
aaa
and
mov
dec
dec
mov
dec
shlb
movsb
mov
es
ror
lret
cmp
mov
aas
xor
and
xor
aaa
mov
aas
fiadds
mov
and
xor
inc
sub
mov
test
sarb
cmp
lret
cmp
cmp
daa
mov
mov
and
inc
fadd
jne
add
inc
fmul
arpl
add
inc
loopne
daa
add
movl
jmp
or
inc
xchg
imul
sahf
sbb
xchg
jmp
daa
and
aas
movsl
es
inc
cmp
xor
shlb
inc
xor
fidivs
mov
lret
xor
test
mov
enter
mov
xor
dec
mov
movsb
daa
and
lds
and
ds
into
leave
mov
mov
mov
ds
dec
cmp
inc
mov
mov
shrb
mov
mov
rorb
enter
into
dec
dec
daa
inc
dec
mov
mov
and
dec
mov
shll
aas
mov
mov
rorb
and
xor
xor
mov
cmpsl
mov
mov
daa
dec
mov
cmp
mov
cmp
movsb
lds
mov
dec
dec
cmp
movsb
cmp
shll
and
enter
mov
leave
xor
dec
mov
mov
mov
shlb
and
inc
into
iret
and
ret
mov
test
sub
ret
xor
sub
xor
int
mov
enter
mov
dec
mov
sub
and
mov
inc
and
cmp
mov
test
dec
sub
dec
dec
ds
mov
and
mov
inc
mov
mov
into
movsl
inc
dec
inc
mov
xor
mov
xor
and
and
xor
shlb
mov
lds
mov
and
mov
aas
ret
mov
inc
mov
and
enter
inc
mov
and
ror
and
mov
mov
sarl
and
mov
daa
cmp
daa
cmp
ret
and
xor
iret
xor
and
mov
ret
xor
lds
mov
mov
cmpsl
mov
into
mov
and
mov
ss
mov
mov
lds
and
mov
leave
lret
inc
rcl
mov
sub
into
inc
test
mov
inc
lds
xor
mov
mov
shlb
daa
and
mov
mov
les
mov
lret
cmp
inc
dec
and
dec
enter
mov
lds
xor
inc
movsb
inc
mov
and
mov
ret
mov
xor
cmp
mov
mov
fidivrs
cmp
orl
dec
add
movl
movl
jmp
push
gs
faddl
xchg
popf
js
push
xchg
hlt
push
daa
imul
dec
dec
leave
ss
mov
xor
cmp
int
mov
mov
lret
dec
mov
es
int
mov
mov
les
enter
aas
mov
sarl
dec
dec
aas
mov
mov
mov
cmpsl
fidivs
mov
movsl
ds
daa
movsb
inc
daa
mov
ss
lds
xor
cmp
mov
mov
mov
and
xor
dec
leave
inc
lret
into
fidivs
mov
test
dec
int
mov
les
push
xor
iret
mov
mov
xor
inc
shlb
inc
mov
cmpsl
cmpsl
mov
mov
dec
mov
ret
aaa
inc
mov
into
mov
mov
mov
dec
fidivrs
xor
es
mov
mov
aas
dec
dec
int
xor
inc
mov
ret
into
inc
ss
daa
dec
ds
ret
mov
es
lret
dec
mov
sub
roll
mov
inc
xor
and
mov
lret
cmp
int
daa
mov
int
dec
daa
test
xor
movsb
mov
dec
mov
mov
cmpsl
aas
movsl
movsb
cmp
and
mov
inc
rorb
cmp
enter
cmpsl
inc
les
xor
mov
mov
movsb
sarl
leave
mov
and
lds
lds
inc
mov
rorb
mov
sub
mov
inc
mov
xor
test
mov
mov
mov
aaa
mov
lds
mov
and
inc
dec
lret
cmpsl
inc
inc
and
daa
xor
ds
shlb
cmpsl
and
mov
dec
mov
inc
movsb
fisubs
mov
ret
mov
and
into
xor
inc
and
leave
mov
inc
movsb
xor
mov
dec
dec
xor
and
mov
mov
dec
and
mov
ss
leave
inc
inc
fidivrs
cmp
mov
test
cmpsl
xor
dec
xor
cmp
mov
mov
es
xor
dec
aas
mov
mov
push
mov
mov
shlb
leave
test
lds
aaa
daa
cmpsl
mov
inc
and
mov
cmp
enter
push
aas
movsl
mov
inc
mov
and
mov
mov
mov
push
mov
inc
lock
or
ret
add
movl
mov
jmp
sub
in
and
lret
jb
add
test
jmp
push
mov
cmp
ss
shll
aaa
movsl
es
sub
dec
xor
mov
lds
sarb
mov
enter
and
xor
dec
mov
shlb
aas
mov
dec
xor
enter
rorb
dec
movsl
cmp
dec
shlb
aas
xor
ret
mov
es
mov
xor
cmp
ror
dec
xor
ds
iret
aaa
movsl
mov
and
cmp
dec
inc
mov
cmp
les
mov
test
xor
inc
and
mov
mov
and
movsb
mov
push
shll
mov
mov
and
xor
mov
mov
inc
xor
mov
ds
mov
dec
dec
mov
mov
xor
into
movsb
mov
and
mov
test
dec
enter
mov
mov
and
into
inc
test
enter
aaa
and
inc
mov
fisubs
dec
daa
and
and
mov
fidivs
lds
sarb
mov
mov
mov
mov
cmp
mov
and
mov
mov
inc
mov
cmp
inc
dec
aaa
mov
mov
daa
dec
aas
dec
xor
and
and
aaa
and
mov
ds
les
mov
inc
dec
and
fidivs
aas
dec
inc
mov
mov
int
xor
ror
mov
mov
mov
enter
mov
aaa
mov
cmp
push
inc
lret
dec
and
and
mov
mov
and
lds
mov
les
inc
inc
les
inc
cmpsl
enter
int
mov
rol
mov
dec
mov
xor
mov
aas
cmp
mov
ror
cmp
aaa
inc
mov
xor
ret
cmp
aas
dec
mov
fiadds
xor
push
lds
dec
mov
mov
cmpsl
shlb
mov
lret
mov
movsb
iret
shlb
inc
movsb
push
les
movsl
dec
xor
cmp
xor
lds
ss
xor
mov
mov
mov
dec
aaa
inc
mov
inc
ss
sub
mov
inc
and
push
xor
enter
push
movl
mov
mov
mov
push
push
push
call
jmp
dec
sbb
lock
cli
ja
xor
ljmp
into
mov
lret
inc
mov
dec
iret
leave
mov
and
xor
mov
enter
push
and
xor
ss
dec
and
cmp
dec
shlb
les
mov
mov
fmulp
mov
enter
cmp
fisubs
test
movl
mov
mov
and
mov
aaa
mov
mov
enter
and
xor
test
int
and
dec
xor
mov
mov
mov
fiadds
dec
dec
and
and
rorb
mov
mov
aas
inc
enter
cmp
mov
mov
enter
inc
mov
mov
daa
xor
and
mov
enter
into
enter
mov
cmpsl
and
into
xor
mov
sub
dec
aas
movsl
mov
leave
mov
mov
inc
shlb
dec
mov
mov
push
dec
inc
inc
mov
inc
mov
mov
mov
mov
enter
mov
mov
dec
mov
mov
mov
inc
mov
les
inc
enter
inc
xor
mov
xor
aaa
mov
int
and
mov
and
movsb
les
dec
enter
and
daa
mov
cmp
aas
xor
inc
dec
cmp
dec
cmp
mov
leave
enter
mov
dec
and
and
inc
mov
mov
mov
iret
mov
mov
dec
fidivrs
lret
cmp
movsb
ds
es
mov
and
xor
and
iret
test
leave
xor
mov
mov
mov
inc
cmp
mov
movsl
rol
ds
mov
sub
cmp
aas
mov
sub
xor
sarb
mov
xor
inc
movsb
rol
dec
int
xor
leave
and
ds
and
mov
mov
dec
mov
dec
mov
inc
daa
mov
inc
sarb
cmp
ficoms
and
mov
inc
mov
enter
mov
mov
mov
aaa
movsl
mov
xor
test
cmp
inc
ss
mov
dec
faddp
daa
dec
shll
inc
mov
mov
inc
shlb
and
lret
movsl
mov
movsb
into
mov
mov
and
movsl
aaa
aaa
sub
mov
pop
hlt
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
push
mov
sub
mov
pop
sbb
mov
push
jmp
mov
in
data16
insb
clc
adc
push
jmp
mov
aaa
lret
daa
xor
mov
dec
aaa
inc
shll
shlb
fidivs
sub
enter
and
mov
mov
inc
inc
rolb
rolb
xor
movsl
push
and
movsb
rol
dec
inc
xor
dec
xor
mov
leave
and
fisubrs
xor
daa
inc
aas
mov
fmulp
int
dec
dec
movsl
lds
inc
fiadds
mov
xor
and
int
shlb
dec
mov
and
dec
mov
and
int
fisubs
inc
lds
cmpsl
enter
shlb
cmp
rorb
mov
dec
xor
mov
enter
push
cmp
ds
movsb
ret
cmp
es
xor
mov
mov
ret
mov
xor
and
lret
and
aaa
and
aas
inc
mov
movsb
xor
xor
es
and
into
cmp
dec
lret
inc
mov
ds
mov
fisubs
dec
iret
mov
cmpsl
cmpsl
lret
lds
dec
inc
shll
movsl
cmp
dec
movsb
and
inc
movsl
push
into
xor
and
mov
cmp
cmp
mov
iret
dec
mov
daa
lds
dec
lds
fidivs
inc
mov
mov
and
ret
lret
dec
inc
aas
leave
ret
and
xor
ret
mov
mov
dec
cmpsl
dec
inc
inc
dec
inc
and
xor
and
xor
mov
cmp
ds
mov
dec
mov
dec
and
mov
dec
cmp
xor
and
xor
and
and
xor
iret
dec
mov
rol
dec
dec
sub
iret
mov
and
lret
mov
inc
cmpsl
and
mov
cmpsl
ror
enter
ds
inc
iret
mov
push
ret
mov
aas
es
xor
iret
fidivrs
mov
mov
ss
push
shll
dec
cmp
inc
and
mov
and
ds
leave
and
inc
xor
mov
and
and
test
mov
ret
mov
dec
les
mov
enter
mov
aas
test
mov
cmp
test
dec
mov
and
mov
aas
and
mov
xor
mov
push
dec
dec
cmp
ret
les
and
inc
lret
xor
enter
mov
push
xor
push
shr
mov
call
mov
mov
push
push
push
push
call
mov
mov
push
push
or
jmp
leave
fcoml
inc
cld
insb
jge
pop
out
js
pop
adc
pop
sub
jl
jmp
dec
push
cmp
and
dec
mov
into
enter
mov
dec
ds
push
and
mov
mov
cmp
shlb
xor
test
aas
sub
and
mov
es
dec
mov
xor
aas
sub
aas
ss
ds
fisubs
inc
mov
mov
mov
test
mov
ret
inc
mov
lret
lret
xor
push
dec
mov
leave
mov
inc
les
inc
es
leave
es
daa
dec
int
aaa
and
dec
inc
ret
mov
mov
int
inc
mov
fidivs
inc
mov
mov
rol
ds
ss
mov
dec
mov
test
fidivrs
dec
xor
mov
dec
mov
mov
cmp
lds
fidivs
mov
xor
ds
mov
ret
mov
movsl
mov
cmp
inc
lds
mov
dec
dec
mov
xor
mov
ds
mov
cmp
mov
mov
inc
les
and
cmpsl
cmp
mov
movsl
inc
mov
and
mov
mov
dec
daa
cmpsl
ss
inc
xor
ds
and
movsl
ss
dec
inc
aas
mov
dec
dec
xor
sub
xor
inc
cmp
es
and
sub
inc
cmp
cmp
mov
dec
inc
movl
aas
dec
inc
daa
movsb
mov
int
daa
and
inc
ret
movsl
cmp
cmpsl
xor
mov
mov
cmp
es
and
movsl
and
xor
mov
daa
mov
mov
mov
into
into
mov
sarb
xor
dec
mov
aas
push
iret
and
xor
mov
lds
mov
daa
mov
dec
ss
inc
lret
push
daa
cmp
les
into
and
ds
dec
xor
ret
test
and
ret
mov
xor
ds
inc
mov
cmpsl
and
xor
shll
dec
mov
cmp
ds
push
and
mov
fimuls
dec
lds
movsb
mov
mov
push
mov
and
mov
movsl
movsb
and
push
movsb
mov
aaa
inc
sub
daa
test
rcll
and
and
pop
add
push
push
call
push
mov
sub
pop
sbb
shld
shl
or
mov
or
xor
xor
mov
mov
jmp
outsl
mov
enter
loope
dec
fwait
sub
sub
jl
jmp
push
les
mov
push
inc
xor
enter
dec
and
and
cmpsl
int
cmp
push
movsb
lds
mov
ror
mov
mov
dec
and
and
test
movsl
mov
ret
aaa
cmp
sarl
lds
mov
sub
mov
cmpsl
enter
cmpsl
lds
rolb
dec
dec
mov
daa
xor
shll
mov
mov
into
cmpsl
mov
mov
int
test
inc
and
int
dec
es
mov
xor
xor
xor
ret
es
mov
sub
test
movsl
inc
ds
xor
mov
xor
and
xor
enter
movl
lds
mov
cmp
cmp
shlb
dec
mov
mov
cmp
mov
mov
cmp
inc
sub
sub
cmp
int
cmp
ss
cmp
mov
and
and
sub
mov
les
mov
lret
mov
sarb
rol
dec
mov
dec
mov
mov
sub
movsl
mov
inc
xor
dec
leave
movsb
and
push
sub
and
daa
inc
and
test
aas
inc
mov
inc
ds
push
dec
xor
sub
dec
mov
mov
mov
and
faddp
leave
mov
ret
push
mov
mov
mov
into
and
rol
mov
fiadds
mov
mov
and
ds
inc
and
ds
mov
mov
enter
lds
ds
mov
mov
lds
and
mov
test
and
into
and
fimuls
mov
xor
and
and
aas
inc
xor
mov
roll
cmp
and
and
mov
inc
inc
inc
xor
sub
mov
xor
inc
dec
xor
es
dec
test
xor
and
cmpsl
lds
mov
inc
mov
mov
xor
sarb
mov
dec
xor
cmp
dec
inc
inc
rol
and
inc
xor
leave
and
and
mov
mov
mov
mov
into
ret
mov
mov
aaa
lret
sub
cmp
inc
and
iret
movsb
dec
mov
dec
dec
ss
cmp
shlb
int
shll
mov
mov
mov
sub
push
mov
push
sbb
push
push
call
push
add
push
adc
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
xor
xor
jmp
pop
cmp
sbb
out
je
push
jmp
xor
fimuls
mov
mov
movsb
inc
mov
mov
mov
test
mov
mov
aas
and
push
leave
inc
mov
and
mov
mov
xor
rolb
inc
rclb
mov
inc
cmp
enter
mov
aaa
test
into
cmp
mov
mov
inc
les
aas
mov
push
shlb
mov
cmpsl
inc
es
aaa
mov
iret
ds
sub
mov
mov
dec
aaa
inc
inc
lds
mov
inc
xor
and
into
mov
mov
mov
cmpsl
lret
inc
mov
mov
aaa
xor
xor
and
mov
movsl
les
movl
shll
aas
aaa
xor
rol
dec
ds
sarb
mov
test
dec
mov
mov
movsl
xor
inc
rolb
inc
inc
movsb
dec
ds
xor
and
and
ret
es
es
movsl
sarb
iret
into
xor
es
mov
lret
inc
mov
ss
mov
mov
dec
movsl
mov
int
sarl
sarl
inc
mov
and
leave
inc
aaa
mov
dec
mov
xor
and
fidivs
mov
int
lds
mov
sarl
and
mov
leave
cmpsl
mov
mov
aas
cmp
leave
mov
mov
les
xor
dec
mov
fidivrs
mov
dec
mov
mov
mov
fisubs
mov
xor
ret
cmp
and
cmp
dec
xor
aaa
mov
inc
iret
dec
mov
mov
ds
mov
inc
int
inc
mov
xor
les
movsb
and
dec
push
fisubs
sub
aas
cmp
dec
dec
int
dec
es
cmp
and
mov
shlb
dec
cmp
movsl
dec
mov
inc
cmp
sarl
leave
mov
dec
into
mov
aas
ret
mov
inc
fisubs
enter
aaa
dec
dec
daa
cmp
faddp
rcl
xor
dec
xor
mov
cmp
shll
rcl
sarb
shlb
mov
mov
inc
xor
mov
push
push
call
mov
mov
mov
mov
shl
mov
xor
xor
call
add
mov
mov
adc
mov
mov
xor
xor
and
and
mov
mov
push
push
push
push
call
push
push
xor
xor
push
push
call
xor
mov
mov
xor
add
adc
xor
xor
shrd
or
mov
jmp
mov
sub
sub
sub
jmp
and
dec
dec
inc
and
and
dec
movsb
push
sarb
fisubs
int
and
into
into
mov
cmp
mov
mov
ss
and
inc
and
inc
int
xor
shlb
inc
test
movsb
fidivs
inc
ret
dec
mov
sub
mov
movsb
mov
cmp
mov
fidivs
sarb
inc
inc
xor
cmp
and
es
dec
movsl
dec
cmp
lds
cmpsl
xor
mov
mov
dec
mov
mov
cmpsl
roll
lds
mov
push
and
test
mov
xor
test
into
and
mov
int
lds
movsl
dec
cmpsl
and
dec
and
ret
es
dec
into
inc
mov
ret
into
mov
enter
and
and
mov
xor
mov
fidivrs
mov
xor
cmp
xor
mov
mov
dec
mov
inc
mov
int
lds
mov
cmpsl
and
mov
movsb
dec
mov
dec
fidivrs
iret
mov
movsl
ror
mov
dec
sarl
mov
dec
lret
mov
mov
lds
cmp
dec
lret
aaa
les
mov
mov
xor
mov
xor
and
leave
mov
int
dec
dec
sub
mov
fimuls
inc
shlb
sub
mov
mov
xor
xor
sarb
lds
ds
xor
int
xor
mov
cmp
xor
xor
inc
cmp
daa
ds
push
inc
iret
inc
xor
inc
xor
and
push
lds
inc
enter
inc
test
les
mov
and
cmp
mov
xor
lret
xor
ret
dec
mov
xor
mov
ss
inc
daa
mov
movsb
and
dec
test
lds
les
ret
and
mov
inc
mov
and
xor
and
cmp
dec
cmpsl
mov
daa
dec
cmpsl
xor
mov
mov
sub
dec
roll
cmp
cmp
mov
mov
lret
cmp
mov
int
test
faddp
mov
and
and
xor
mov
ret
iret
movsb
shr
or
mov
mov
mov
mov
mov
xor
xor
sub
mov
sbb
mov
push
push
push
push
jmp
imul
mov
pop
ror
adc
jmp
and
ror
and
es
aaa
shlb
daa
dec
rolb
cmp
mov
dec
movsb
mov
xor
sub
dec
mov
mov
mov
iret
iret
ret
mov
mov
mov
and
mov
xor
mov
mov
lret
leave
and
daa
dec
mov
test
dec
mov
dec
aas
cmp
ror
and
movsl
inc
and
mov
and
mov
mov
mov
mov
dec
test
xor
ds
aas
inc
xor
sub
xor
cmp
mov
and
and
and
mov
xor
ret
mov
leave
lds
xor
enter
and
inc
xor
inc
cmpsl
shlb
xor
inc
mov
dec
cmp
enter
and
inc
es
movsl
mov
mov
xor
cmp
movsb
inc
into
mov
cmp
inc
inc
dec
lret
mov
enter
and
inc
mov
ds
xor
mov
mov
mov
xor
sub
xor
dec
xor
mov
mov
aaa
and
shlb
dec
int
dec
mov
lds
cmp
and
aaa
push
cmp
inc
xor
inc
cmp
dec
mov
cmp
mov
aas
movsb
mov
aas
iret
leave
mov
inc
mov
lret
inc
daa
rclb
fisubs
mov
into
inc
sub
dec
sub
xor
mov
mov
cmp
es
mov
dec
mov
daa
push
mov
mov
and
dec
dec
cmp
mov
mov
inc
mov
cmp
mov
lds
mov
mov
aaa
inc
and
and
dec
mov
shll
lret
shll
shlb
ret
inc
into
ror
lds
dec
mov
inc
ss
inc
mov
cmp
cmp
lds
mov
mov
sub
shlb
inc
and
mov
inc
mov
xor
mov
dec
rolb
mov
inc
lds
mov
mov
daa
inc
dec
xor
ds
xor
fidivs
mov
xor
into
and
mov
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
mov
mov
movl
movl
movl
movl
movl
jmp
repnz
push
mov
sub
mov
push
jmp
sarb
xor
mov
mov
dec
cmp
leave
mov
dec
mov
xor
mov
and
mov
movsb
aaa
dec
mov
lret
dec
dec
movsl
mov
mov
cmp
rol
mov
sub
inc
dec
and
int
movsl
movsl
mov
sub
mov
inc
xor
mov
fidivrs
and
mov
aaa
xor
cmpsl
ss
ret
and
daa
push
xor
mov
lds
and
inc
ss
mov
cmp
mov
daa
mov
mov
mov
mov
dec
cmp
test
inc
cmp
mov
ficoms
sarl
mov
sub
cmp
cmpsl
fisubs
cmp
es
ret
inc
mov
enter
and
mov
inc
dec
ret
xor
test
mov
lds
and
mov
xor
test
and
and
mov
lds
fmulp
mov
mov
inc
inc
dec
shll
shlb
shlb
mov
test
xor
mov
xor
daa
test
mov
xor
inc
mov
inc
cmpsl
xor
and
and
dec
ret
les
mov
mov
and
mov
shlb
inc
daa
cmp
mov
and
and
and
enter
leave
push
aaa
aaa
int
aaa
mov
dec
inc
ret
dec
and
mov
sub
dec
ds
daa
enter
and
dec
movsb
xor
fidivrs
daa
inc
mov
mov
and
mov
and
and
inc
mov
and
mov
and
mov
int
sarb
mov
mov
daa
movsl
shlb
and
inc
mov
push
inc
int
aaa
ds
aas
cmp
dec
xor
rcr
mov
mov
xor
mov
dec
mov
fidivs
dec
aas
mov
xor
leave
sarb
mov
lret
mov
cmpsl
xor
aaa
mov
mov
mov
ror
dec
xor
mov
inc
lret
mov
lret
mov
mov
cmp
and
and
int
and
mov
iret
sub
dec
inc
mov
dec
mov
ds
cmp
fisubs
and
int
mov
mov
mov
lret
ret
movsl
les
mov
test
sarl
aaa
mov
mov
test
xor
int
movsb
inc
movsb
mov
inc
inc
daa
aas
xor
movl
or
add
movl
movl
movl
mov
mov
and
sub
mov
and
or
xor
mov
mov
jmp
sahf
xor
lret
insb
lret
data16
jnp
testl
dec
push
jmp
daa
mov
inc
dec
mov
mov
mov
into
mov
dec
xor
into
mov
ret
mov
lds
mov
sub
xor
push
sub
leave
mov
ret
aas
inc
into
inc
inc
mov
cmp
shlb
enter
ds
cmp
es
xor
dec
inc
push
inc
inc
xor
mov
iret
mov
xor
daa
mov
sub
iret
movsb
daa
into
push
and
dec
and
cmp
xor
cmp
mov
xor
cmpsl
dec
rorb
sub
enter
mov
leave
enter
xor
rol
dec
and
sub
and
inc
cmpsl
inc
mov
mov
inc
lds
daa
les
mov
into
inc
dec
dec
les
daa
aas
sarb
cmp
cmpsl
rol
and
rorb
dec
dec
mov
into
movsl
inc
cmp
ds
mov
and
dec
mov
mov
mov
and
xor
aas
cmpsl
mov
ret
cmp
mov
sarl
iret
test
inc
xor
sub
test
and
mov
fisubs
mov
mov
xor
and
mov
inc
mov
inc
mov
into
movsb
ds
ret
inc
lds
rol
es
xor
dec
mov
mov
mov
dec
dec
mov
mov
aas
inc
inc
rolb
ds
cmp
inc
mov
dec
push
mov
daa
aaa
leave
xor
cmp
mov
xor
and
and
mov
mov
and
xor
mov
mov
mov
ret
dec
leave
aaa
inc
iret
shll
mov
ds
mov
mov
and
mov
and
aaa
int
movsb
ss
mov
dec
cmp
iret
cmpsl
mov
mov
leave
and
mov
mov
inc
ds
lds
cmpsl
shll
xor
xor
xor
cmp
and
leave
movsl
mov
aas
mov
dec
and
cmp
enter
ret
inc
cmp
inc
dec
daa
inc
mov
test
cmp
and
ret
int
cmp
dec
mov
and
sub
dec
mov
mov
dec
cmp
daa
cmp
les
mov
xor
inc
test
xor
leave
cmp
mov
iret
movsb
inc
mov
cmp
inc
inc
sub
lds
movsl
movsb
push
mov
cmp
lret
ror
mov
mov
cmp
mov
and
mov
mov
sarb
ret
xor
xor
ret
int
push
xor
add
cmp
jne
mov
mov
mov
add
shr
or
mov
jmp
cmpsl
or
or
mov
hlt
enter
outsl
xchg
imul
cmp
and
mov
iret
mov
shlb
into
and
and
mov
movsb
push
leave
mov
dec
inc
shlb
ds
inc
leave
into
dec
mov
mov
dec
mov
and
xor
movsb
fidivs
ds
dec
mov
and
leave
mov
and
int
mov
inc
mov
cmp
mov
ret
mov
into
mov
xor
cmp
ret
aas
ret
mov
movsb
enter
mov
mov
int
xor
ds
inc
mov
mov
dec
sub
mov
mov
ss
xor
mov
mov
movsl
dec
movsl
aas
mov
lret
cmp
mov
and
mov
daa
mov
xor
mov
ret
mov
mov
rolb
inc
aas
dec
inc
lret
mov
mov
mov
inc
ret
dec
inc
es
leave
mov
cmpsl
inc
aas
cmpsl
movsl
mov
into
dec
aaa
dec
xor
inc
cmp
mov
leave
int
xor
mov
int
inc
xor
test
mov
test
aaa
cmp
mov
mov
mov
inc
dec
les
ds
push
aas
inc
mov
les
inc
enter
inc
push
mov
xor
mov
rol
cmp
mov
mov
shlb
dec
inc
mov
mov
and
push
mov
inc
inc
int
rorl
mov
sub
inc
mov
movsl
inc
mov
inc
mov
enter
cmp
ss
sarb
movsl
dec
mov
ret
cmp
inc
dec
mov
es
lds
mov
leave
dec
mov
cmp
cmp
aaa
mov
and
lret
and
push
mov
inc
sub
dec
mov
inc
inc
daa
inc
inc
dec
movsb
dec
ds
movsl
mov
cmpsl
iret
mov
mov
dec
and
les
test
mov
inc
inc
and
mov
mov
mov
mov
inc
daa
test
aaa
and
inc
mov
ror
inc
cmp
mov
xor
inc
mov
inc
daa
inc
and
leave
dec
push
mov
sarb
lret
inc
mov
xor
ds
xor
inc
cmpsl
movsl
mov
mov
mov
mov
mov
mov
movsl
aaa
int
and
inc
shll
push
les
mov
mov
inc
xor
sarb
inc
xor
ror
inc
dec
dec
ret
xor
aaa
movsl
mov
mov
shlb
and
les
movsb
mov
cmpsl
int
xor
iret
shlb
cmpsl
lds
inc
aaa
lds
dec
iret
mov
push
dec
aaa
dec
cmp
mov
cmpsl
cmp
sub
dec
mov
mov
rorb
or
mov
jmp
testb
insb
js
mov
mov
imul
mov
mov
inc
mov
aas
mov
and
ret
mov
mov
mov
aaa
xor
push
aaa
les
movsl
enter
enter
dec
mov
dec
int
leave
aaa
mov
lret
lret
inc
dec
cmp
mov
and
mov
and
mov
mov
inc
mov
inc
mov
aas
dec
dec
daa
mov
fisubs
mov
inc
mov
dec
ret
sub
mov
inc
shlb
fisubs
dec
dec
shrb
inc
dec
mov
dec
vmovapd
mov
mov
mov
movl
movsl
into
mov
ds
mov
cmp
inc
and
xor
movsb
mov
int
es
mov
cmp
inc
lds
enter
ds
mov
shll
sub
aaa
enter
and
mov
cmp
inc
mov
cmp
ds
int
lret
lds
cmp
dec
enter
inc
lds
cmp
ret
inc
aas
fidivrs
mov
enter
mov
mov
and
aas
and
enter
movsb
mov
ret
roll
mov
xor
mov
leave
dec
and
shrb
lret
ds
daa
and
cmp
aas
xor
leave
inc
dec
mov
sarl
mov
movsb
movsl
aaa
rolb
xor
xor
cmp
iret
les
movl
mov
mov
mov
mov
ret
int
movsb
cmpsl
aaa
inc
xor
mov
inc
cmp
sarb
movsl
lds
les
mov
inc
mov
shlb
test
cmpsl
mov
mov
mov
sarb
fidivs
xor
aas
mov
xor
ret
test
rolb
mov
aaa
ss
shlb
ss
cmp
fiadds
inc
inc
mov
xor
mov
sub
dec
iret
dec
inc
mov
mov
mov
push
mov
les
daa
and
mov
into
daa
aas
lds
mov
xor
mov
mov
lds
cmpsl
daa
dec
movsl
and
xor
mov
cmp
sub
xor
mov
xor
daa
mov
test
xor
mov
mov
and
lret
mov
mov
iret
ret
daa
movsb
ret
inc
into
mov
mov
inc
fidivs
fimuls
inc
dec
mov
xor
and
sarb
aas
les
dec
inc
faddp
into
dec
mov
test
mov
rorb
and
lds
and
rolb
iret
cmp
mov
xor
mov
inc
int
shlb
mov
and
daa
movsl
leave
mov
aas
mov
loope
mov
mov
lea
add
mov
jmp
je
lcall
adc
js
xchg
imul
rolb
cmp
es
xor
mov
movsb
cmp
push
iret
and
es
shlb
inc
sub
mov
mov
lds
xor
mov
shlb
sub
ds
mov
lret
mov
ret
mov
mov
inc
push
mov
xor
xor
cmpsl
mov
mov
mov
mov
mov
mov
mov
ret
dec
xor
movsb
and
mov
mov
mov
and
cmpsl
xor
int
ret
dec
xor
movsb
dec
lds
dec
movsl
xor
sarb
iret
mov
aas
xor
inc
mov
mov
movsl
les
into
dec
ficoms
mov
mov
inc
mov
mov
dec
xor
mov
test
mov
mov
test
and
mov
lds
sub
xor
lds
mov
cmp
aas
test
fidivs
mov
mov
inc
dec
enter
les
inc
mov
xor
rorb
inc
aas
es
iret
mov
mov
dec
inc
shll
rol
int
rol
mov
mov
daa
aaa
mov
aas
mov
shll
shll
int
sub
into
mov
enter
mov
and
and
mov
test
mov
cmp
mov
es
iret
inc
mov
iret
mov
les
mov
mov
dec
xor
cmp
xor
mov
daa
inc
mov
sub
mov
inc
xor
inc
daa
es
mov
mov
inc
leave
mov
les
mov
mov
mov
mov
rol
es
and
lds
xor
test
cmp
cmpsl
and
mov
mov
mov
aas
dec
mov
mov
movsb
xor
sub
inc
xor
shll
inc
dec
lds
and
mov
mov
movsb
mov
dec
inc
dec
inc
xor
cmp
iret
leave
sub
enter
cmp
iret
cmp
enter
int
xor
es
mov
int
test
mov
cmp
into
mov
mov
and
and
ror
roll
dec
test
aaa
cmp
cmp
and
es
mov
mov
daa
and
dec
fidivrs
mov
movsb
sub
and
rorl
inc
fimuls
push
and
push
int
dec
sub
cmpsl
xor
lds
ds
inc
mov
mov
movsl
push
fidivs
dec
les
mov
inc
inc
cmpsl
xor
mov
ret
mov
test
inc
mov
dec
leave
dec
and
loopne
rcrb
xor
div
mov
xor
and
cmp
je
mov
jmp
mov
add
xor
add
imul
xor
jmp
movl
movl
movl
mov
mov
sub
and
add
or
sub
leave
ret
push
mov
and
jmp
pop
mov
adc
xchg
movsl
push
jmp
les
mov
and
inc
sub
iret
sub
mov
test
mov
xor
cmp
xor
mov
mov
xor
dec
inc
mov
dec
dec
and
inc
inc
push
and
mov
mov
ror
and
mov
rolb
and
inc
mov
inc
rcr
shll
xor
rol
test
mov
leave
lret
shll
dec
ret
dec
sub
mov
xor
aas
xor
push
and
int
mov
mov
mov
cmp
push
sub
mov
mov
inc
test
mov
mov
and
and
push
and
cmp
cmp
ds
push
ret
dec
mov
inc
test
leave
dec
and
les
xor
and
xor
fidivrs
xor
sarl
int
inc
enter
mov
and
mov
inc
mov
leave
xor
leave
inc
mov
int
inc
inc
mov
xor
dec
xor
inc
lret
and
mov
leave
push
mov
inc
sarl
xor
ss
inc
test
mov
dec
mov
dec
mov
fidivrs
inc
inc
dec
and
ss
movsb
fidivs
push
ss
shll
mov
enter
lret
es
and
cmp
aaa
int
test
mov
dec
ret
mov
ret
mov
test
mov
ret
and
xor
sub
iret
mov
ss
mov
cmp
sub
mov
inc
xor
dec
mov
mov
mov
push
inc
mov
daa
inc
and
sub
enter
dec
aaa
int
roll
iret
xor
iret
test
mov
ss
into
dec
iret
lds
lret
inc
dec
test
movsb
and
dec
cmp
shrb
xor
inc
ret
dec
mov
mov
cmp
sub
mov
cmp
mov
dec
mov
inc
inc
into
les
sub
into
cmp
inc
dec
mov
and
leave
inc
cmpsl
lds
mov
lds
enter
ds
mov
mov
leave
movsl
shlb
aaa
mov
lds
ret
mov
mov
into
aaa
test
test
dec
mov
xor
shll
daa
mov
xor
and
xor
ret
inc
iret
dec
mov
mov
movsl
shlb
mov
rol
dec
mov
cmp
mov
xor
les
cmp
ss
mov
test
int
aas
xor
xor
and
and
and
mov
sarb
xor
dec
aaa
mov
and
mov
xor
les
mov
lds
dec
ds
mov
les
push
push
lea
mov
mov
mov
mov
jmp
popf
aaa
and
insb
insb
test
cmp
cwtl
pop
iret
lcall
movsl
push
jmp
inc
mov
lret
inc
xor
es
daa
mov
mov
and
es
mov
xor
ss
mov
xor
dec
and
dec
inc
xor
mov
inc
iret
cmpsl
sub
dec
into
enter
mov
and
mov
mov
xor
and
test
xor
daa
daa
dec
mov
inc
mov
mov
mov
into
xor
dec
inc
and
mov
mov
and
rorl
xor
mov
leave
mov
push
lret
shrb
mov
mov
int
lret
mov
iret
lret
mov
mov
cmp
mov
ret
enter
mov
movsl
into
mov
xor
int
into
dec
movsb
cmp
mov
mov
xor
and
xor
push
sub
ss
enter
mov
mov
mov
dec
xor
es
lret
aaa
mov
rolb
lret
test
mov
inc
inc
mov
inc
mov
int
xor
inc
movsl
inc
mov
push
movsb
enter
mov
and
mov
into
mov
ret
mov
and
mov
mov
inc
mov
ret
dec
mov
inc
mov
lds
rcr
daa
xor
ret
mov
inc
xor
and
shlb
and
es
mov
int
dec
xor
shlb
inc
push
and
mov
mov
cmp
movsb
mov
cmp
mov
mov
enter
mov
aaa
lret
and
daa
mov
mov
cmp
xor
lret
rolb
aas
fidivrs
mov
dec
and
mov
sub
ret
es
ret
dec
mov
xor
inc
mov
inc
test
fisubs
and
es
les
mov
mov
xor
push
inc
dec
mov
aaa
lret
xor
xor
fisubs
shrl
aas
cmpsl
sub
mov
and
movsb
ss
mov
fidivs
mov
dec
leave
shlb
lret
push
mov
inc
xor
lds
shlb
mov
les
inc
mov
test
shll
lret
es
inc
mov
and
iret
sarb
les
mov
lret
mov
ror
sub
mov
int
movsl
mov
mov
mov
mov
mov
test
and
xor
aas
aas
les
rol
aas
movsb
aaa
mov
dec
inc
dec
rorb
inc
sub
mov
mov
sarl
int
sub
iret
push
lret
and
inc
mov
test
aaa
inc
inc
and
dec
dec
daa
inc
mov
lds
add
inc
and
orl
jmp
out
xchg
or
mov
xchg
add
gs
ja
imul
iret
and
dec
mov
movsl
mov
movsl
inc
and
mov
xor
inc
cmp
and
mov
mov
xor
movsb
mov
mov
xor
inc
mov
mov
dec
mov
mov
dec
faddp
les
dec
inc
test
mov
fmulp
inc
ret
cmp
and
sub
dec
mov
cmp
xor
and
mov
mov
movsl
mov
les
shlb
mov
inc
ret
inc
cmp
mov
aaa
fisubs
ror
xor
int
daa
mov
dec
xor
dec
mov
int
mov
aaa
mov
and
inc
dec
int
xor
cmp
les
mov
fisubrs
sarb
sarb
aas
push
mov
cmp
shrl
and
inc
into
mov
shll
inc
dec
daa
xor
movsb
shlb
mov
mov
aaa
mov
mov
fisubrs
cmp
mov
ret
movsb
fisubrs
and
mov
into
xor
dec
and
leave
inc
inc
mov
xor
dec
xor
dec
mov
mov
movsl
shrb
inc
mov
xor
cmp
mov
enter
xor
sarl
ds
inc
and
cmpsl
mov
fimuls
mov
dec
inc
xor
dec
dec
test
xor
cmp
mov
test
xor
xor
dec
and
dec
cmp
ror
dec
into
cmp
and
mov
iret
cmp
xor
faddp
mov
mov
dec
inc
aas
movsb
mov
mov
mov
and
mov
inc
aaa
mov
xor
dec
xor
mov
aaa
aaa
roll
ds
rol
inc
sarb
inc
les
xor
leave
aas
mov
aaa
mov
dec
mov
mov
sub
xor
movsb
mov
inc
mov
xor
mov
cmp
leave
and
rol
cmp
movsb
mov
dec
ret
mov
daa
lds
ret
xor
mov
and
and
dec
lret
int
aas
dec
ret
into
and
lret
and
xor
mov
ret
iret
mov
xor
inc
daa
mov
shlb
xor
cmp
inc
push
and
dec
mov
ss
mov
xor
iret
sub
aaa
mov
dec
dec
mov
and
sub
inc
xor
iret
dec
dec
rolb
xor
mov
mov
dec
mov
iret
mov
into
and
lds
daa
test
movsl
mov
inc
sub
movsl
and
mov
inc
xor
mov
test
mov
fimuls
into
mov
fimuls
daa
push
inc
les
movsb
cmp
int
orl
lea
push
jmp
jae
fistpl
inc
imul
sti
jae
fstl
add
popf
imul
enter
daa
mov
mov
inc
mov
mov
les
mov
rorl
mov
xor
test
mov
mov
and
ds
dec
xor
cmpsl
test
mov
lret
cmp
xor
and
es
mov
aaa
test
cmp
mov
inc
and
xor
mov
daa
int
dec
and
mov
shlb
lds
mov
movsl
mov
mov
es
xor
les
xor
es
and
enter
mov
ds
cmp
cmpsl
ret
cmp
mov
dec
int
movsl
mov
xor
ror
fisubs
mov
leave
push
int
cmp
inc
mov
mov
lds
mov
cmp
dec
mov
dec
sarb
mov
mov
leave
enter
and
dec
sub
inc
mov
and
inc
mov
ss
daa
lret
inc
sarl
lret
mov
mov
mov
mov
mov
xor
mov
dec
dec
ret
inc
mov
rol
dec
lds
es
aas
cmpsl
iret
mov
les
dec
inc
mov
xor
mov
test
mov
mov
aaa
and
mov
daa
and
movsb
ret
ds
mov
lret
ss
dec
dec
xor
cmpsl
inc
movsl
mov
mov
mov
dec
and
inc
inc
dec
sub
sarb
iret
mov
dec
rol
inc
mov
lret
aas
aaa
aas
and
enter
mov
mov
xor
shlb
sarl
mov
leave
movsl
int
cmp
cmpsl
cmp
xor
dec
enter
and
mov
and
ss
mov
mov
xor
into
mov
dec
mov
daa
sarl
ret
dec
enter
dec
mov
inc
mov
cmpsl
ret
cmp
daa
dec
mov
and
mov
mov
mov
sub
mov
mov
and
sub
dec
mov
enter
xor
daa
es
and
cmp
aaa
shll
inc
mov
mov
and
sub
aas
xor
mov
inc
aas
mov
push
aaa
cmp
cmpsl
shlb
inc
enter
and
mov
aas
and
movsl
mov
push
cmp
dec
dec
dec
mov
dec
dec
xor
es
lret
mov
lret
enter
push
mov
enter
mov
mov
and
sarb
aas
mov
xor
les
ds
es
sub
mov
xor
mov
inc
aas
mov
dec
les
inc
sub
mov
and
xor
inc
iret
dec
inc
int
aaa
mov
push
ds
int
mov
push
and
ds
mov
into
sub
mov
and
mov
iret
daa
les
mov
mov
inc
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
jmp
add
in
addl
or
nop
add
movsl
push
jmp
and
iret
dec
and
dec
cmpsl
inc
xor
es
aaa
inc
cmp
movsl
mov
ss
cmp
int
lret
mov
lds
cmpsl
into
inc
xor
dec
and
inc
mov
movsl
mov
inc
fisubs
mov
and
and
mov
inc
movsl
ds
mov
mov
les
iret
dec
mov
and
dec
mov
cmp
enter
dec
enter
dec
inc
dec
shlb
movsb
cmp
inc
fidivrs
inc
movsb
lds
aaa
lret
inc
mov
dec
inc
into
sarl
and
sub
mov
roll
inc
test
mov
and
iret
dec
mov
dec
dec
daa
and
xor
inc
xor
leave
mov
inc
mov
sub
dec
xor
mov
mov
cmpsl
mov
aas
mov
mov
inc
aas
lret
iret
mov
mov
les
dec
cmp
ds
daa
movsl
les
and
inc
and
mov
and
enter
movsl
dec
mov
cmp
dec
inc
inc
and
aaa
and
test
fidivrs
mov
mov
aas
and
xor
mov
and
mov
dec
test
aaa
and
mov
daa
shll
dec
xor
aaa
dec
mov
push
leave
mov
leave
sub
mov
xor
cmp
cmp
mov
ret
mov
push
mov
ret
mov
inc
daa
and
enter
cmp
xor
cmp
les
and
cmp
mov
mov
aaa
leave
aas
rclb
mov
and
mov
fisubs
xor
inc
push
mov
and
xor
shll
dec
roll
mov
rolb
mov
mov
dec
aaa
daa
dec
lret
mov
mov
les
les
dec
mov
and
inc
movsl
mov
sarb
mov
mov
ss
aas
mov
daa
and
xor
inc
inc
inc
mov
lret
inc
movsl
mov
aaa
dec
dec
and
inc
xor
daa
inc
mov
leave
inc
movsl
sub
and
into
xor
cmp
cmp
and
and
cmp
movsl
and
dec
inc
cmp
mov
enter
roll
daa
fidivs
mov
ss
and
dec
dec
mov
and
ret
aas
into
dec
and
cmpsl
inc
mov
mov
dec
daa
aaa
daa
test
shrb
and
mov
leave
inc
mov
enter
mov
aas
mov
dec
inc
mov
mov
mov
sub
mov
mov
cmp
mov
dec
movl
mov
aas
inc
mov
and
int
mov
inc
sub
inc
mov
inc
and
mov
xor
and
inc
dec
into
and
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
sub
mov
imul
mov
xor
jmp
hlt
sbb
cs
push
in
sti
xchg
adc
jmp
shll
and
mov
dec
aaa
mov
and
cmpsl
cmp
mov
ss
push
lret
mov
ss
mov
mov
inc
and
sub
movsl
mov
cmp
daa
xor
cmp
xor
dec
into
mov
mov
shlb
and
inc
mov
fidivrs
dec
fidivrs
shlb
rcl
lret
sub
les
mov
dec
ret
mov
inc
iret
inc
xor
mov
xor
and
into
sarb
inc
xor
aas
inc
mov
mov
mov
ror
les
movsb
sub
dec
dec
dec
mov
mov
dec
xor
xor
dec
into
push
xor
shll
test
mov
leave
mov
mov
mov
cmpsl
mov
mov
and
ret
mov
aaa
mov
enter
movsl
aas
and
mov
movsb
and
enter
mov
enter
and
mov
mov
mov
mov
xor
mov
mov
int
and
mov
cmp
movsl
inc
push
cmp
mov
iret
inc
cmp
test
shlb
mov
ds
inc
shlb
cmp
les
leave
and
mov
xor
and
sub
movsl
xor
mov
sarb
aas
mov
mov
rclb
es
and
xor
mov
aaa
mov
mov
xor
xor
daa
mov
into
shrb
xor
ret
leave
ss
mov
mov
mov
ret
dec
and
xor
mov
xor
lds
mov
xor
xor
lds
dec
mov
mov
test
dec
movsl
sarb
mov
ret
mov
ds
aaa
mov
test
mov
xor
mov
ss
xor
cmp
mov
test
int
and
and
dec
into
dec
and
mov
xor
lret
aaa
ds
dec
dec
mov
leave
enter
mov
mov
dec
xor
sub
rorb
mov
dec
mov
lds
push
mov
ss
enter
mov
cmp
icebp
push
mov
xor
movl
movl
jmp
sbb
in
fs
push
out
pop
push
subb
ljmp
mov
movsb
xor
and
and
mov
aaa
mov
xor
inc
cmpsl
mov
xor
dec
cmp
inc
sub
dec
daa
mov
xor
movsl
mov
cmp
and
dec
cmp
shlb
shrb
cmp
cmpsl
mov
mov
mov
xor
dec
lds
mov
xor
mov
mov
ret
mov
mov
inc
movsb
mov
xor
cmpsl
daa
ror
rol
leave
lret
fmulp
test
mov
inc
mov
mov
shlb
push
xor
mov
ss
inc
aas
iret
inc
fidivs
mov
leave
mov
aas
mov
mov
mov
ret
push
mov
xor
mov
ss
ss
movsl
xor
iret
and
xor
les
mov
cmp
sub
mov
mov
xor
and
daa
sarb
dec
and
mov
dec
fisubs
enter
cmp
sub
movsl
mov
es
xor
ds
fisubs
dec
int
mov
inc
aaa
xor
ss
shll
inc
fmulp
mov
iret
rorb
lds
rorb
sub
mov
mov
dec
inc
mov
rolb
and
shll
ror
mov
mov
and
mov
inc
aaa
push
enter
dec
dec
dec
into
xor
and
mov
mov
xor
cmp
inc
lret
cmpsl
xor
rcr
cmp
and
inc
inc
test
movsb
aas
mov
ds
shlb
mov
xor
inc
iret
movsl
mov
mov
ds
and
enter
cmp
mov
lret
aaa
dec
mov
dec
mov
mov
mov
sub
dec
dec
xor
les
mov
enter
inc
and
fmulp
mov
sarb
sub
movsb
daa
lds
mov
inc
ss
mov
inc
es
dec
mov
les
les
mov
dec
push
cmp
dec
ss
xor
mov
push
inc
inc
xor
mov
mov
inc
les
dec
shll
movsb
mov
rcl
mov
fisubs
movsb
xor
sub
enter
daa
and
shlb
in
rolb
add
lock
sub
mov
imul
or
mov
jmp
add
xchg
in
mov
fs
sbb
jl
jg
cmc
xchg
repz
int
mov
mov
cmp
and
dec
mov
mov
and
test
xor
into
shll
ss
mov
dec
int
ret
lret
dec
mov
mov
dec
inc
and
ss
xor
mov
rol
lds
roll
mov
enter
inc
dec
mov
dec
push
leave
movsb
and
mov
fimuls
shlb
lds
mov
int
mov
mov
xor
sub
dec
xor
ret
int
sarl
lds
es
mov
into
mov
cmp
fiadds
lds
aaa
inc
xor
inc
xor
xor
shlb
mov
iret
movsl
sarl
mov
inc
aaa
daa
and
mov
es
lds
xor
mov
movsl
mov
and
test
into
mov
and
mov
movsl
mov
lds
iret
movsb
mov
mov
movsb
int
and
mov
and
es
into
iret
mov
inc
sub
int
lds
mov
ret
dec
inc
mov
dec
xor
inc
and
mov
and
es
les
iret
dec
and
mov
aas
inc
aaa
enter
xor
and
movsl
shlb
ret
and
fisubs
dec
inc
ds
enter
movsb
dec
ret
ss
cmp
ds
cmp
xor
xor
and
mov
mov
movsb
aaa
mov
dec
mov
mov
iret
dec
dec
aaa
xor
inc
movsl
xor
xor
inc
cmp
fisubs
ret
ret
movsb
mov
aas
xor
mov
mov
sub
mov
mov
mov
cmp
inc
mov
mov
xor
xor
push
inc
mov
xor
movsl
mov
mov
xor
daa
cmp
and
mov
lret
inc
mov
mov
mov
xor
xor
mov
iret
mov
mov
mov
and
test
shlb
cmpsl
movsb
into
es
fiadds
and
and
sarb
mov
iret
lds
mov
push
mov
aaa
inc
enter
fiadds
xor
inc
shlb
and
or
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
imul
xor
push
pop
div
mov
jmp
pop
mov
lds
add
add
jle
js
add
jmp
les
mov
dec
mov
rol
lret
mov
mov
into
ret
mov
lret
and
mov
enter
leave
shll
mov
mov
dec
sub
mov
sub
les
lret
mov
mov
inc
cmpsl
into
mov
int
and
daa
ds
fmulp
inc
ret
lds
and
xor
inc
enter
aaa
lret
xor
cmp
es
mov
mov
and
xor
aaa
faddp
mov
mov
movsb
leave
fisubs
mov
mov
and
test
test
mov
aaa
int
and
mov
dec
dec
and
daa
leave
lret
mov
test
mov
push
dec
and
push
and
shlb
push
and
and
mov
cmpsl
mov
xor
xor
leave
xor
aaa
mov
mov
mov
daa
ds
daa
mov
mov
xor
into
mov
mov
inc
mov
cmp
sub
iret
iret
and
dec
dec
les
rcl
dec
xor
inc
iret
mov
daa
and
inc
mov
xor
mov
ret
xor
and
shlb
mov
leave
and
into
inc
and
leave
dec
ss
sub
sub
and
inc
leave
mov
push
mov
and
inc
mov
mov
and
mov
lds
lds
dec
and
es
cmp
dec
mov
int
mov
and
mov
dec
daa
mov
inc
mov
dec
xor
mov
ds
mov
enter
mov
es
dec
inc
dec
into
xor
cmp
mov
movl
mov
ror
mov
shlb
xor
fidivrs
cmp
into
cmp
and
sarl
mov
inc
movsl
mov
mov
ss
mov
iret
dec
mov
lret
and
movsb
and
es
mov
inc
inc
les
mov
mov
sarl
and
daa
ss
dec
inc
mov
ss
lds
mov
dec
and
cmpsl
ret
sub
mov
mov
enter
daa
and
mov
daa
aas
dec
inc
cmp
mov
dec
shlb
xor
ret
jl
add
add
mov
jmp
adc
sahf
lock
jl
or
addl
and
jmp
daa
ror
enter
aas
mov
test
dec
inc
dec
dec
daa
cmpsl
and
into
and
aaa
sub
dec
ds
dec
inc
dec
shlb
and
dec
dec
mov
xor
mov
iret
mov
into
dec
dec
mov
mov
mov
rol
mov
mov
mov
mov
les
mov
push
es
inc
movsb
xor
dec
xor
xor
sub
es
lret
lret
inc
fidivrs
leave
daa
xor
mov
lret
ds
cmp
push
cmpsl
dec
inc
mov
cmp
cmp
and
xor
test
and
xor
mov
xor
xor
les
sarl
mov
mov
inc
rorl
mov
cmpsl
ret
and
mov
into
daa
cmpsl
cmp
and
fidivrs
test
cmp
iret
sub
mov
mov
xor
mov
es
iret
int
int
mov
inc
and
ds
mov
cmp
push
cmp
lds
and
lret
mov
mov
lds
aas
aas
mov
movsb
aaa
into
mov
rol
inc
aas
dec
mov
movsl
inc
cmp
test
cmp
mov
dec
mov
and
xor
shll
shlb
mov
xor
xor
test
inc
mov
mov
mov
inc
enter
mov
push
inc
shlb
mov
mov
mov
ret
es
mov
mov
cmp
inc
iret
cmp
lds
and
xor
xor
and
aas
mov
dec
mov
movsl
mov
aaa
mov
mov
xor
inc
inc
rol
mov
inc
fisubs
inc
cmpsl
dec
mov
mov
les
ds
inc
int
ret
mov
ds
mov
and
fisubs
inc
inc
leave
ds
mov
mov
dec
dec
aaa
mov
mov
push
inc
leave
mov
cmp
mov
and
aas
aas
xor
mov
mov
inc
mov
es
ds
mov
push
push
mov
mov
aas
mov
fidivs
mov
inc
dec
shlb
cmp
dec
mov
xor
lret
fisubs
movsb
daa
ds
xor
shlb
rolb
push
fadds
push
aam
push
rorb
rorb
push
enter
imul
mov
imul
xor
and
add
jmp
insb
mov
andb
divl
add
jmp
and
mov
rorl
aas
mov
enter
mov
aaa
mov
mov
movsb
mov
movsb
movsb
dec
inc
aaa
dec
inc
test
inc
test
and
leave
mov
dec
les
shlb
xor
inc
dec
mov
ret
aaa
mov
mov
ds
fidivrs
and
aas
sub
daa
inc
mov
ret
mov
lds
xor
rol
iret
lds
xor
lds
mov
les
mov
mov
sub
sub
int
int
enter
movsb
es
sub
dec
mov
ror
movsl
sub
dec
mov
mov
dec
mov
ret
mov
ret
dec
dec
aaa
xor
inc
sub
mov
ss
iret
ret
mov
dec
mov
xor
mov
mov
mov
xor
mov
mov
cmp
daa
sarb
dec
dec
cmp
xor
and
cmpsl
iret
les
xor
mov
mov
mov
into
sub
and
inc
xor
lret
fisubs
mov
mov
iret
les
fidivs
ss
inc
mov
xor
cmp
test
daa
int
mov
sarl
inc
cmpsl
mov
mov
cmp
mov
and
mov
ss
and
movsl
les
ds
lds
xor
and
xor
lret
inc
xor
inc
mov
shlb
aaa
cmpsl
and
xor
movsl
mov
lret
dec
mov
test
movsl
xor
fidivs
dec
inc
mov
fisubrs
and
dec
xor
ss
mov
mov
iret
leave
mov
es
cmp
and
mov
xor
mov
ret
and
int
es
xor
ss
mov
dec
rol
push
mov
inc
ss
mov
dec
mov
inc
inc
dec
ret
inc
mov
cmpsl
and
dec
and
mov
and
xor
dec
mov
inc
inc
mov
mov
and
fidivs
les
mov
leave
inc
leave
and
shrb
and
inc
dec
movl
fidivrs
cmp
leave
and
sub
cmp
jbe
jmp
sub
lea
fs
and
add
les
sub
imul
shrb
cmp
les
mov
int
and
cmpsl
mov
aas
les
leave
movsl
mov
daa
mov
shll
mov
shlb
and
xor
faddp
cmp
les
inc
mov
inc
push
cmpsl
mov
and
lds
shlb
fiadds
inc
leave
inc
mov
rorl
inc
test
int
cmp
mov
xor
mov
and
and
shlb
aaa
sub
movsl
mov
mov
mov
sub
cmpsl
ds
enter
dec
and
lds
mov
and
mov
inc
cmpsl
mov
into
aaa
cmp
xor
les
dec
shlb
ret
mov
shll
mov
inc
mov
test
inc
shlb
mov
les
mov
mov
mov
mov
and
xor
mov
mov
mov
mov
and
mov
and
aas
and
test
mov
inc
mov
inc
mov
shll
ret
movsl
es
lds
into
vcmpps
aaa
dec
mov
ds
ror
mov
mov
xor
xor
and
dec
sub
mov
aas
mov
inc
inc
mov
lds
dec
mov
mov
and
inc
mov
dec
movsl
mov
inc
dec
mov
iret
mov
and
push
mov
lds
mov
lret
mov
aas
dec
lds
dec
enter
shll
mov
ret
mov
sub
cmp
and
test
mov
and
cmp
cmp
enter
leave
lds
mov
and
xor
sarl
xor
inc
inc
xor
mov
mov
mov
xor
mov
inc
inc
cmpsl
and
dec
daa
movsl
and
inc
inc
mov
cmp
movsl
mov
int
dec
fidivs
and
inc
inc
movl
leave
movsl
mov
iret
mov
and
test
xor
mov
ret
fidivs
dec
lds
xor
test
mov
sub
cmp
aaa
mov
xor
daa
mov
xor
mov
movsb
push
pop
leave
ret
push
mov
sub
xor
push
cmpl
jb
inc
mov
mov
add
jmp
push
push
call
push
push
mov
incl
mov
xor
shrd
and
shr
mov
mov
xor
cmpl
jge
xor
jmp
push
push
push
push
pushl
call
mov
xor
or
mov
mov
shl
mov
add
mov
mov
mov
mov
and
shrd
movl
xor
movzbl
adc
mov
shr
sbbl
mov
add
mov
adc
xor
or
xor
xor
mov
adc
mov
cmpl
jl
xor
xor
mov
sub
sub
jmp
pushl
push
push
call
mov
mov
jmp
and
and
and
hlt
mov
addr16
testl
rol
ss
movsb
into
xor
mov
daa
ret
into
rorl
inc
mov
inc
inc
xor
lret
dec
mov
shlb
ret
ret
and
cmp
inc
xor
and
sarb
cmp
shlb
fidivrs
ret
inc
dec
and
xor
xor
ss
mov
inc
mov
xor
mov
dec
leave
mov
ret
mov
into
aaa
dec
fidivrs
movsb
mov
movsb
xor
ret
cmp
mov
ret
and
iret
aaa
dec
mov
movsb
xor
inc
xor
mov
ds
sub
cmp
cmp
inc
mov
les
mov
inc
mov
mov
les
sarb
movsl
and
xor
iret
mov
lds
and
mov
xor
and
dec
into
mov
mov
and
push
mov
mov
dec
mov
cmp
xor
mov
into
dec
ds
mov
fimuls
leave
dec
and
movsb
enter
movsl
iret
mov
mov
fisubs
cmp
lds
inc
and
mov
aas
xor
mov
ds
cmp
ss
push
mov
and
mov
inc
and
aas
mov
inc
push
ret
mov
les
cmp
lret
push
aas
shlb
les
mov
mov
xor
dec
inc
int
daa
cmp
shlb
dec
rorl
inc
and
ss
into
and
dec
dec
shlb
xor
dec
xor
ss
and
inc
mov
lds
and
xor
movsl
leave
ret
xor
cmpsl
dec
daa
cmp
mov
inc
mov
mov
xor
mov
mov
mov
shlb
inc
dec
inc
leave
les
sub
dec
inc
and
and
les
and
xor
mov
mov
fimuls
cmp
dec
mov
and
int
mov
ds
enter
ror
mov
mov
lret
les
xor
and
mov
rorb
mov
xor
xor
and
mov
cmp
inc
inc
mov
xor
xor
sbb
push
mov
add
xor
mov
cmpl
jge
jmp
pushl
pushl
push
call
mov
jmp
inc
enter
jb
lods
in
add
stos
add
adc
push
ljmp
and
mov
cmp
mov
mov
push
mov
dec
mov
movsl
and
inc
inc
xor
cmp
mov
ret
sub
inc
es
enter
dec
cmp
and
dec
aas
mov
xor
mov
xor
mov
int
enter
lret
mov
xor
xor
xor
into
mov
ss
mov
mov
mov
movsl
sub
mov
into
aas
int
dec
aas
fmulp
mov
mov
mov
mov
aas
and
int
inc
and
sub
mov
and
mov
cmp
daa
xor
mov
and
dec
mov
inc
mov
mov
cmp
cmp
mov
leave
test
inc
mov
aaa
mov
dec
les
daa
and
and
ss
xor
daa
mov
aaa
dec
les
and
dec
aaa
test
leave
dec
mov
mov
leave
dec
int
and
es
iret
movsb
xor
and
xor
push
cmp
mov
ds
ss
cmp
mov
iret
iret
mov
and
fidivs
xor
enter
xor
mov
lret
mov
mov
mov
lret
mov
mov
xor
push
dec
inc
mov
xor
mov
inc
ret
mov
mov
roll
cmpsl
enter
es
lds
aas
enter
and
xor
ss
mov
shll
inc
mov
dec
ror
xor
dec
fimuls
inc
mov
inc
cmpsl
xor
ss
inc
and
aaa
xor
xor
movsb
xor
sarb
iret
xor
shrb
cmp
cmp
movsl
xor
and
mov
int
push
movl
and
into
cmp
xor
xor
shll
mov
ror
inc
mov
xor
xor
and
sub
dec
enter
and
mov
aas
ret
movsl
mov
inc
cmpsl
xor
mov
aaa
mov
xor
movsl
mov
mov
mov
shl
xor
shld
cmpl
jg
jmp
push
call
shl
mov
mov
mov
mov
xor
xor
movl
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
mov
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
xor
shld
shl
mov
mov
xor
subl
xor
movl
mov
movl
cmp
movl
jne
cmp
je
sbb
mov
mov
mov
sub
mov
adc
push
adcl
pop
adcl
xor
sub
shl
xor
mov
xor
shr
or
mov
and
mov
add
mov
xor
jmp
adc
cmp
inc
pop
stc
add
and
hlt
pop
lea
push
ljmp
mov
into
sub
lret
mov
push
int
movsb
movsl
int
cmp
int
rol
dec
mov
inc
mov
xor
ret
inc
cmpsl
cmp
inc
es
int
leave
xor
movsb
inc
cmp
es
xor
mov
inc
inc
test
xor
push
dec
xor
cmp
cmp
movsl
int
dec
lds
mov
xor
movsb
enter
leave
ret
dec
cmp
mov
mov
mov
sarb
mov
leave
movsb
lret
xor
and
inc
dec
mov
rol
int
inc
ss
lds
and
and
dec
dec
mov
daa
mov
xor
mov
cmpsl
ss
enter
inc
dec
aas
cmp
cmpsl
mov
dec
mov
mov
xor
mov
inc
dec
dec
ror
mov
dec
mov
inc
cmpsl
mov
ds
ret
fidivs
inc
push
movl
and
mov
and
dec
xor
movsb
mov
mov
mov
inc
ds
xor
ret
mov
mov
lds
lds
leave
inc
iret
test
movsb
and
movsl
and
cmpsl
lds
leave
mov
xor
dec
mov
mov
inc
movsl
xor
and
inc
iret
mov
inc
xor
mov
xor
lds
mov
mov
ret
mov
aas
dec
mov
sub
movsl
les
mov
cmp
dec
mov
mov
mov
enter
movsl
dec
leave
dec
shlb
inc
xor
and
movsl
rorb
and
inc
and
mov
and
sarl
inc
xor
xor
mov
dec
and
mov
dec
rcl
movsl
daa
dec
dec
mov
into
cmp
mov
aaa
ret
cmpsl
fmulp
dec
dec
inc
mov
and
mov
cmp
dec
rorb
les
xor
daa
mov
cmp
xor
dec
into
daa
aas
and
mov
xor
mov
cmp
aas
mov
xor
iret
movsb
lret
into
and
mov
mov
mov
mov
inc
shlb
xor
mov
and
mov
sub
jmp
mov
xchg
js
mov
push
ljmp
cmpsl
aaa
ret
mov
mov
dec
dec
les
ret
and
shlb
int
mov
dec
inc
and
inc
mov
inc
lret
int
mov
xor
aas
lret
xor
mov
xor
and
mov
mov
dec
dec
mov
ss
int
aas
push
mov
mov
mov
cmp
test
cmp
movsb
inc
mov
cmp
mov
iret
mov
les
cmp
mov
iret
fisubrs
es
mov
dec
dec
inc
rol
into
cmp
mov
inc
inc
mov
es
ret
dec
dec
mov
mov
fidivs
mov
mov
xor
movl
sub
mov
daa
cmpsl
and
cmp
xor
dec
dec
cmp
daa
cmp
cmpsl
mov
mov
ret
mov
cmp
mov
inc
push
xor
cmpsl
les
inc
mov
mov
xor
dec
ds
dec
inc
enter
inc
ds
sub
mov
dec
shlb
mov
aas
iret
aas
mov
xor
shlb
mov
mov
fmulp
mov
mov
cmp
xor
inc
inc
ds
sub
mov
int
rorb
and
lret
and
and
rol
inc
xor
push
movsb
rol
inc
ss
mov
les
and
and
lret
and
xor
movsl
xor
mov
shlb
mov
mov
mov
cmpsl
shrb
mov
mov
dec
mov
inc
lds
enter
cmp
mov
test
xor
mov
xor
into
mov
dec
movsb
ss
mov
dec
and
mov
xor
mov
xor
lret
lds
mov
mov
mov
mov
int
es
mov
xor
cmpsl
mov
and
cmpsl
test
xor
cmp
movsl
iret
test
inc
aas
mov
dec
iret
push
and
and
aas
ss
daa
xor
inc
mov
mov
daa
iret
mov
sarb
sub
jmp
lods
fs
shr
jle
js
clc
xchg
add
hlt
imul
and
mov
xor
aaa
cmpsl
inc
dec
and
movsb
mov
mov
shlb
enter
xor
daa
dec
mov
inc
xor
cmp
daa
cmp
movsl
and
iret
and
ret
cmp
mov
xor
mov
mov
inc
and
aas
shrb
inc
xor
lds
es
mov
inc
mov
aaa
leave
inc
leave
aas
mov
shll
mov
mov
inc
shll
mov
mov
dec
shlb
lds
fmulp
inc
cmp
cmp
dec
cmp
ds
and
test
fidivs
inc
leave
cmp
ret
mov
shll
cmp
dec
leave
daa
push
mov
cmp
movsl
and
inc
mov
mov
and
shll
daa
dec
dec
mov
inc
movsl
cmp
les
cmp
daa
xor
xor
aas
mov
xor
mov
dec
dec
dec
mov
and
dec
iret
mov
inc
mov
mov
and
mov
mov
mov
cmpsl
dec
push
movsl
and
inc
inc
inc
mov
mov
push
cmp
ds
test
dec
movl
and
mov
dec
shll
movsb
lret
inc
mov
dec
mov
aas
into
aas
into
es
mov
and
int
and
enter
mov
mov
les
xor
inc
movsb
les
dec
xor
mov
inc
mov
and
and
fiadds
mov
mov
rorb
leave
dec
dec
xor
inc
rol
mov
and
lds
mov
and
iret
dec
inc
les
mov
rolb
iret
int
cmp
rcll
dec
les
dec
test
fidivs
aaa
int
and
mov
ror
and
sub
mov
daa
mov
cmp
xor
and
lret
dec
into
mov
mov
mov
ds
fiadds
cmp
ss
dec
xor
test
daa
mov
enter
mov
xor
lret
cmp
and
and
mov
add
sbbl
mov
movl
lea
cmpl
jge
andl
jmp
push
call
mov
mov
jmp
adc
js
popa
sub
hlt
fdivrs
jae
jno
jmp
lds
mov
mov
dec
mov
mov
xor
push
enter
movsl
dec
xor
leave
les
leave
mov
lret
aas
movsl
iret
mov
cmp
les
mov
and
xor
dec
mov
mov
aas
and
daa
dec
ret
mov
cmp
xor
and
mov
push
lret
dec
and
mov
xor
dec
enter
inc
into
xor
cmpsl
into
mov
and
xor
xor
enter
and
dec
mov
xor
and
movsl
sarb
les
aas
aaa
shll
dec
cmp
mov
and
enter
push
iret
cmp
xor
movsl
inc
into
and
es
iret
mov
mov
dec
push
and
inc
cmp
ret
mov
cmp
lret
mov
shll
mov
inc
inc
enter
aas
mov
aas
mov
shlb
inc
sub
movsb
mov
push
mov
sub
rorl
test
leave
dec
es
leave
mov
lds
rol
xor
aaa
test
push
lds
and
aaa
cmp
enter
lds
lds
and
cmpsl
mov
ret
and
ds
ror
movsl
fisubs
mov
push
and
mov
dec
inc
mov
int
mov
iret
test
mov
push
lret
mov
les
dec
mov
iret
inc
cmp
inc
mov
inc
movl
mov
es
cmp
xor
movsb
sub
mov
mov
movsb
es
mov
aas
ret
mov
daa
and
and
dec
into
mov
ds
cmp
and
cmpsl
dec
xor
dec
cmp
dec
and
xor
shlb
xor
and
les
test
enter
xor
sub
mov
dec
inc
mov
mov
enter
enter
les
mov
xor
mov
sub
movsb
cmp
inc
into
ds
sub
mov
dec
mov
mov
xor
mov
xor
es
test
ds
mov
xor
xor
shr
adcl
shl
subl
or
andl
mov
jmp
lods
jbe
adc
dec
push
loopne
cmc
mov
jb
jmp
and
cmp
cmp
es
dec
fidivs
mov
mov
and
into
ds
and
ret
cmp
dec
dec
mov
mov
xor
movsl
movsl
movsl
mov
es
mov
inc
enter
mov
int
aas
mov
into
leave
inc
xor
cmpsl
enter
movsb
inc
movsl
test
dec
mov
mov
cmp
xor
mov
daa
mov
mov
dec
mov
inc
mov
enter
mov
rol
ror
and
movsb
and
mov
mov
mov
mov
and
cmp
sub
cmp
xor
mov
mov
cmp
sub
mov
mov
cmpsl
enter
inc
fidivrs
dec
lret
enter
inc
sarl
movsb
xor
cmp
mov
mov
movsb
ss
movsl
cmp
mov
and
mov
shll
and
xor
leave
mov
dec
cmp
movsb
les
inc
mov
and
dec
xor
inc
roll
mov
mov
shlb
shll
and
dec
inc
enter
xor
dec
xor
shll
and
dec
enter
inc
movsb
and
dec
mov
xor
and
dec
mov
cmp
xor
inc
dec
enter
dec
xor
mov
es
mov
int
es
mov
mov
shlb
mov
leave
and
mov
mov
inc
mov
mov
xor
mov
inc
mov
cmp
ds
mov
mov
xor
mov
xor
mov
inc
dec
test
int
cmp
shll
cmp
iret
mov
int
and
and
ds
and
ret
inc
les
xor
inc
dec
movsl
aaa
ds
ret
and
fidivrs
xor
and
ds
test
cmp
mov
inc
xor
inc
dec
mov
mov
mov
dec
lds
ror
dec
test
and
xor
shlb
mov
dec
xor
dec
xor
xor
inc
cmp
and
push
xchg
sahf
sub
mov
and
jmp
add
in
in
sarb
mov
lods
jns
es
imul
into
daa
dec
xor
into
movsb
movsb
dec
dec
dec
mov
rol
inc
mov
movsb
daa
xor
mov
and
test
mov
fimuls
mov
sub
xor
dec
and
mov
movsb
dec
es
xor
and
mov
dec
cmp
and
fmulp
int
and
and
test
mov
and
cmp
ds
xor
inc
aaa
int
rol
mov
mov
and
cmpsl
inc
and
movsb
dec
dec
inc
mov
ret
iret
inc
iret
push
and
mov
cmpsl
and
mov
sub
fidivs
cmpsl
sub
mov
mov
inc
xor
dec
int
int
sarb
cmp
movsb
shll
mov
aaa
daa
lret
daa
movsl
sarl
into
xor
and
leave
mov
mov
and
xor
inc
ror
dec
ret
mov
and
mov
xor
iret
cmp
dec
movsb
enter
mov
test
xor
aaa
daa
inc
movsl
lret
mov
mov
daa
dec
mov
into
mov
leave
and
ds
push
inc
xor
mov
daa
mov
lds
mov
inc
sarb
int
shlb
dec
sub
and
enter
iret
lds
dec
mov
mov
es
into
iret
mov
mov
test
and
mov
xor
push
aas
and
inc
mov
mov
cmp
cmp
into
int
ret
mov
and
mov
enter
leave
mov
inc
dec
ret
sub
cmp
xor
mov
and
mov
dec
rorb
shll
sub
and
dec
inc
inc
mov
mov
lds
lds
dec
push
movsb
mov
daa
and
mov
inc
mov
push
inc
dec
inc
cmp
cmpsl
cmp
xor
mov
mov
and
ds
xor
enter
dec
es
cmp
ds
ret
mov
sarb
mov
inc
xor
and
xor
dec
mov
inc
and
mov
and
ss
movsl
mov
inc
mov
lds
leave
mov
inc
xor
call
jecxz
inc
add
add
xor
andl
shr
xorl
jmp
popf
sbb
popa
insb
bound
hlt
cwtl
mov
pop
jne
jmp
mov
mov
xor
and
mov
fidivrs
mov
and
lret
mov
mov
xor
xor
int
and
ret
into
inc
mov
mov
cmp
fisubs
xor
shll
xor
mov
xor
cmp
xor
xor
es
mov
daa
cmp
inc
mov
mov
mov
mov
cmp
movsl
rolb
xor
xor
cmp
sarl
mov
and
aaa
test
movsl
and
mov
mov
and
cmp
xor
dec
ss
cmp
inc
mov
iret
aas
dec
push
lds
dec
dec
mov
ss
ss
rorb
daa
and
dec
mov
mov
mov
enter
mov
and
inc
les
dec
dec
xor
lret
and
inc
xor
xor
aaa
push
inc
mov
cmp
and
and
dec
mov
ss
mov
xor
xor
dec
cmp
enter
les
shll
xor
mov
mov
iret
sub
into
enter
mov
mov
mov
cmpsl
xor
xor
rorb
xor
mov
movsb
es
aaa
cmpsl
aaa
inc
leave
int
mov
int
mov
mov
movsb
inc
xor
mov
sub
and
sub
xor
leave
inc
leave
mov
mov
sub
int
movsb
mov
mov
movsl
xor
xor
mov
and
inc
inc
daa
les
mov
fimuls
dec
dec
cmp
cmp
dec
movsb
mov
dec
xor
lds
lret
mov
and
leave
mov
inc
movsb
mov
mov
fidivs
mov
aas
push
sub
xor
and
cmp
inc
movsb
dec
dec
inc
iret
lret
lds
ss
lds
xor
xor
ds
ror
iret
sub
movsb
cmp
mov
into
xor
xor
leave
xor
mov
mov
daa
mov
rcr
mov
inc
dec
mov
cmp
xor
aas
test
dec
dec
sub
ss
mov
daa
mov
push
orl
jmp
xor
mov
jl
scas
push
mov
jbe
jmp
and
and
dec
dec
ds
daa
into
and
xor
and
and
mov
cmp
mov
inc
mov
mov
mov
inc
mov
inc
and
aas
mov
dec
and
test
mov
dec
ss
push
into
mov
es
and
mov
mov
cmpsl
mov
movsb
mov
mov
mov
lds
and
push
mov
es
es
ds
xor
mov
iret
mov
cmp
dec
shlb
dec
inc
fidivs
dec
test
dec
iret
movl
int
xor
iret
ret
inc
aaa
inc
dec
dec
fisubrs
and
mov
ds
and
and
es
dec
cmp
lds
xor
test
and
lds
inc
aaa
mov
and
daa
mov
mov
aas
mov
fisubs
ss
dec
xor
dec
enter
enter
mov
inc
mov
and
and
movsb
push
and
mov
mov
lret
xor
mov
and
and
cmp
mov
mov
shrl
mov
movsb
xor
inc
iret
mov
dec
and
mov
mov
xor
mov
rcr
ret
daa
ret
dec
mov
inc
mov
dec
push
inc
roll
shlb
mov
test
dec
into
test
and
fidivrs
daa
dec
dec
es
mov
ret
int
xor
and
mov
mov
dec
enter
and
into
rolb
mov
aas
and
inc
les
leave
mov
movsl
mov
shll
mov
aaa
shlb
mov
dec
mov
iret
les
inc
into
xor
enter
mov
leave
mov
test
sarb
xor
cmp
xor
dec
xor
mov
inc
mov
push
and
dec
mov
mov
mov
iret
xor
mov
lret
enter
mov
into
and
and
lds
mov
les
mov
inc
int
mov
mov
xor
leave
mov
dec
cmp
push
mov
mov
xor
ret
mov
int
and
mov
subl
push
lea
xorl
push
xorl
lea
addl
push
adcl
call
mov
notl
mov
sbb
xor
xor
movzbl
sub
shr
shl
or
push
lea
xor
or
mov
sub
or
push
mov
adc
mov
mov
mov
shrd
shr
cmpl
jbe
movzwl
or
mov
jmp
push
call
mov
mov
xor
xor
sbbl
or
xorl
lea
sbbl
push
addl
shl
call
add
mov
xor
mov
addl
xor
xor
shr
xor
shl
incl
or
push
cmpl
jb
sub
jmp
push
pushl
push
pushl
push
pushl
pushl
call
lea
push
mov
mov
shrd
shr
sbbl
mov
mov
xor
orl
xor
sbbl
or
lea
push
shl
notl
call
mov
mov
xor
xor
shl
cmpl
jge
adc
jmp
pushl
push
push
push
pushl
call
shr
or
push
lea
push
mov
mov
cmpl
jg
notl
jmp
push
call
shrd
shr
mov
mov
jmp
imul
clc
mov
insb
cmp
adc
and
ljmp
and
cmp
mov
inc
mov
mov
mov
cmpsl
ds
mov
mov
movl
shlb
inc
cmp
cmp
test
shll
mov
sarb
es
shll
shll
lds
dec
ds
mov
test
shlb
inc
shlb
cmpsl
and
inc
es
mov
and
faddp
xor
es
mov
mov
lds
mov
sub
push
cmpsl
and
and
mov
movsb
shll
dec
test
mov
xor
dec
mov
ds
mov
mov
ss
movsl
dec
inc
les
and
mov
xor
mov
shll
mov
iret
and
dec
les
mov
cmp
xor
sarl
mov
sarb
mov
xor
into
cmp
lds
aaa
mov
xor
aas
movl
enter
sub
mov
faddp
and
mov
sub
dec
mov
mov
test
les
and
mov
mov
cmp
cmp
fidivrs
leave
mov
mov
lds
mov
inc
lret
mov
test
xor
mov
mov
cmp
mov
daa
enter
and
ss
daa
xor
xor
into
dec
aas
mov
mov
mov
xor
dec
push
and
dec
iret
dec
xor
and
rol
xor
inc
inc
enter
fidivs
and
mov
mov
shrb
sub
sub
test
ret
lret
sub
mov
and
mov
ss
enter
mov
and
dec
ret
daa
ds
xor
xor
les
mov
mov
inc
xor
mov
cmpsl
int
mov
leave
test
mov
movsb
leave
xor
mov
dec
shlb
daa
lds
mov
lret
dec
xor
xor
and
xor
and
mov
movsl
aaa
lds
mov
xor
mov
dec
mov
mov
xor
xor
adc
or
shl
movzbl
sub
mov
mov
adc
shrd
cmpl
jge
andl
jmp
push
push
call
shr
mov
mov
xor
xor
or
adcl
add
lea
xorl
push
xorl
shl
call
mov
addl
mov
and
xor
add
shl
sbb
xor
shr
cmpl
jl
jmp
push
push
push
pushl
call
or
push
jmp
lret
pop
outsl
sbb
xchg
flds
js
scas
push
js
jns
jmp
lret
mov
mov
inc
dec
aas
mov
sub
daa
push
leave
leave
inc
mov
dec
movl
mov
dec
xor
dec
cmp
sarb
rolb
iret
dec
lds
cmp
roll
mov
push
and
int
lds
mov
dec
int
dec
mov
inc
and
inc
inc
dec
aas
mov
inc
movsl
mov
les
daa
mov
fmulp
mov
mov
mov
mov
iret
cmp
mov
mov
aaa
sub
dec
mov
ss
mov
aas
movsb
and
fidivs
dec
inc
dec
mov
sub
mov
movsl
iret
inc
mov
daa
xor
mov
and
shlb
vmovaps
xor
dec
daa
inc
mov
inc
dec
mov
ret
mov
shlb
daa
enter
inc
mov
ds
mov
daa
int
cmp
cmp
rol
les
cmp
shll
mov
xor
leave
shrl
es
cmpsl
and
ret
shlb
mov
cmp
shll
mov
push
les
mov
lds
dec
lret
daa
mov
mov
inc
cmp
xor
cmp
enter
fisubs
mov
dec
shlb
mov
and
and
shlb
inc
and
dec
rolb
sub
mov
inc
inc
shlb
xor
es
enter
sub
xor
xor
mov
push
inc
mov
xor
cmpsl
leave
mov
enter
rcll
leave
int
mov
inc
inc
dec
shll
aaa
into
xor
shlb
movsl
push
mov
dec
xor
test
mov
xor
mov
mov
mov
cmp
iret
test
and
int
movsb
xor
inc
cmp
daa
cmp
sub
mov
mov
inc
test
mov
inc
and
push
inc
mov
mov
int
aas
inc
mov
inc
mov
xor
mov
into
cmp
dec
mov
mov
rol
aas
fidivs
mov
dec
mov
mov
movsl
mov
mov
xor
cmp
mov
test
call
inc
adc
enter
add
adc
mov
cmpl
jg
adc
subl
jmp
pushl
pushl
push
pushl
call
mov
jmp
xor
insb
insb
cmp
fwait
scas
hlt
add
xor
imul
lret
mov
movsb
inc
mov
int
mov
mov
xor
xor
dec
into
ret
sub
iret
lds
mov
and
and
enter
mov
inc
ds
and
rcl
and
inc
and
xor
mov
fiadds
rorb
mov
leave
mov
and
mov
movsb
cmp
mov
aas
lret
xor
cmp
mov
mov
inc
dec
and
shlb
mov
rorl
mov
es
mov
mov
xor
and
sarb
dec
xor
les
sub
aas
movsl
xor
ror
int
xor
dec
dec
cmp
daa
dec
mov
mov
movsl
mov
mov
and
ds
dec
inc
cmp
lret
cmp
and
enter
movsl
dec
xor
xor
aaa
inc
lret
and
inc
into
mov
lret
daa
sub
mov
mov
test
movsb
mov
and
shlb
sub
iret
daa
sub
cmp
aaa
inc
dec
mov
movsb
into
aaa
mov
mov
mov
mov
cmp
mov
inc
cmpsl
ss
mov
ds
mov
and
and
mov
es
mov
into
cmp
into
shlb
es
daa
cmp
lret
mov
cmp
mov
dec
xor
push
xor
iret
mov
mov
and
les
sarb
and
mov
xor
mov
and
ss
mov
enter
mov
movsb
sub
mov
and
cmp
xor
aas
xor
mov
mov
push
and
xor
mov
lret
int
and
lret
enter
lds
mov
xor
mov
mov
es
xor
movsb
and
dec
and
mov
iret
xor
int
leave
and
sub
mov
and
inc
movl
mov
rol
mov
inc
enter
faddp
mov
iret
rorb
dec
shll
aas
ds
xor
shl
mov
xor
cmpl
jle
jmp
pushl
push
call
or
mov
shrd
jmp
jp
cmp
push
daa
repnz
imull
add
push
ljmp
mov
ss
mov
mov
mov
xor
mov
int
aas
mov
lds
lret
inc
daa
mov
and
inc
sub
dec
and
enter
dec
inc
and
mov
les
shlb
iret
into
movsl
mov
and
lret
test
iret
ds
mov
cmp
mov
mov
inc
mov
and
xor
dec
int
lds
into
inc
mov
mov
leave
mov
mov
inc
xor
ret
mov
xor
xor
xor
cmp
dec
into
sarb
push
cmpsl
ret
cmpsl
cmpsl
ret
dec
inc
ror
iret
into
cmp
mov
shlb
mov
inc
mov
int
es
and
es
leave
and
cmp
dec
enter
les
fidivs
xor
and
mov
cmp
daa
and
mov
and
aaa
sarb
mov
rol
int
lret
mov
and
iret
mov
int
dec
dec
into
and
mov
es
and
dec
cmpsl
shlb
dec
inc
cmp
int
cmpsl
movsb
dec
aaa
mov
les
mov
mov
int
sarb
xor
into
fidivs
ss
cmp
xor
cmpsl
sarl
movsb
test
mov
inc
and
xor
ds
xor
dec
int
test
cmp
mov
mov
cmp
cmp
dec
dec
into
inc
mov
mov
xor
inc
cmp
dec
ret
iret
mov
and
mov
aaa
mov
xor
movsb
mov
dec
ret
mov
xor
inc
leave
mov
inc
xor
shlb
ss
ret
and
enter
mov
rorl
and
test
movsl
ds
ds
leave
mov
mov
xor
inc
mov
and
mov
shlb
mov
ss
inc
inc
mov
aas
int
cmp
inc
enter
movsl
mov
and
mov
fmulp
shlb
ret
sub
and
enter
cmpsl
movsb
ss
and
xor
mov
cmpsl
inc
movsl
and
movsb
and
add
adc
into
xor
decl
or
cmpl
jl
jmp
push
push
push
push
pushl
pushl
call
shl
add
mov
mov
shrd
shr
xor
mov
or
mov
xor
movl
or
xorl
add
addl
lea
andl
jmp
xchg
dec
dec
andb
lahf
jns
add
sub
jmp
and
aas
into
mov
dec
mov
into
movsl
dec
mov
int
mov
mov
mov
mov
mov
and
cmp
mov
and
mov
cmp
inc
mov
dec
cmp
cmp
cmp
ss
sarl
cmpsl
dec
movsl
int
and
mov
inc
mov
enter
rorb
mov
inc
dec
mov
dec
mov
ror
xor
cmp
cmp
mov
and
lds
ret
leave
daa
inc
and
mov
and
test
fiadds
dec
dec
daa
movsb
daa
mov
ds
int
cmp
enter
cmp
mov
dec
enter
cmp
ds
daa
xor
fimuls
and
fidivrs
int
dec
push
mov
ds
into
lds
mov
shll
fidivs
mov
es
daa
and
and
mov
lret
mov
sarb
mov
lret
aas
cmp
rcr
mov
les
into
leave
push
mov
mov
mov
mov
inc
mov
shlb
inc
xor
es
and
movsl
mov
push
les
mov
dec
aas
mov
mov
shlb
and
and
mov
rol
mov
mov
dec
xor
mov
mov
cmpsl
mov
fidivs
inc
and
cmp
cmp
dec
shlb
mov
mov
mov
mov
xor
mov
lds
mov
cmpsl
cmp
cmpsl
les
mov
sarl
mov
dec
lret
daa
dec
xor
xor
push
xor
dec
dec
and
dec
mov
inc
mov
xor
les
mov
daa
aaa
int
cmp
mov
and
movsl
cmp
mov
xor
shlb
fimuls
lds
mov
mov
into
xor
lret
mov
movsb
aas
xor
les
iret
xor
into
mov
xor
mov
movsb
and
aas
xor
lds
push
adcl
shl
call
addl
mov
sbbl
mov
or
xor
addl
xor
shr
or
shl
cmpl
jl
sub
and
jmp
pushl
call
or
mov
lea
push
mov
mov
shrd
shr
cmpl
jge
mov
xor
or
sub
or
jmp
push
call
mov
mov
xor
xor
adcl
or
orl
jmp
fwait
push
or
in
fcoml
ret
jae
jle
jmp
and
cmp
movsb
dec
mov
cmp
dec
sub
inc
es
mov
inc
les
into
dec
ret
xor
inc
inc
dec
ss
push
vpmaxub
leave
mov
mov
lds
push
movsb
mov
mov
mov
mov
cmp
xor
xor
les
mov
and
mov
lds
mov
mov
shlb
movsl
les
sarb
mov
mov
daa
cmpsl
sub
mov
daa
cmpsl
int
mov
inc
ds
sub
dec
mov
movsl
inc
movsb
lds
ss
ss
mov
rorb
movsl
cmp
cmp
and
movsl
mov
test
mov
cmp
aas
mov
and
cmp
and
ss
sub
movsb
mov
inc
and
xor
dec
mov
mov
and
test
inc
mov
test
and
aas
mov
daa
and
mov
into
dec
mov
dec
test
mov
sub
mov
push
lret
aas
and
cmp
test
dec
shll
fidivrs
mov
inc
fidivrs
and
cmp
rolb
iret
test
mov
and
mov
movsb
sarb
shll
cmpsl
dec
cmp
inc
movsb
leave
iret
dec
and
mov
dec
ret
mov
daa
dec
mov
lds
mov
dec
mov
mov
mov
xor
mov
xor
xor
into
shll
into
shll
dec
inc
and
mov
inc
inc
inc
enter
and
cmp
movsb
cmpsl
leave
test
inc
movsl
inc
leave
enter
shlb
push
ss
inc
mov
mov
mov
dec
mov
mov
into
inc
mov
mov
xor
dec
mov
mov
test
xor
mov
leave
xor
inc
ds
and
dec
daa
inc
shlb
and
ds
and
mov
inc
inc
dec
mov
cmp
cmp
mov
dec
inc
lret
shlb
xor
rolb
mov
fimuls
xor
inc
mov
inc
add
ret
add
inc
movsb
lods
insb
in
jle
pavgw
iret
adc
hlt
daa
in
jmp
fisubs
dec
cmp
ficoms
and
inc
and
es
mov
rol
xor
inc
aas
xor
fidivs
shll
ds
and
mov
mov
mov
mov
ror
xor
mov
mov
shll
movsl
inc
lret
test
mov
into
push
sub
dec
xor
int
and
movsb
mov
cmp
dec
mov
dec
mov
xor
xor
shll
enter
push
enter
ret
lret
ret
inc
xor
les
mov
into
daa
cmp
xor
push
push
enter
es
mov
xor
and
rol
inc
mov
dec
lds
lds
int
mov
mov
les
shlb
mov
iret
xor
mov
and
xor
dec
iret
movsb
rorb
inc
xor
leave
and
and
and
inc
mov
ds
dec
sub
mov
mov
xor
enter
inc
and
aas
inc
dec
and
mov
mov
les
mov
shlb
lret
dec
inc
aas
fidivs
lds
inc
push
inc
es
mov
dec
xor
lds
mov
inc
test
mov
xor
mov
movsl
inc
inc
and
xor
mov
xor
inc
into
ror
mov
mov
aaa
mov
es
aas
rolb
inc
mov
mov
and
xor
leave
xor
inc
xor
daa
mov
iret
and
cmp
inc
cmp
into
ss
daa
and
aaa
mov
ret
les
int
and
push
les
inc
cmp
sarb
aas
and
mov
mov
fmulp
ss
test
inc
and
cmpsl
leave
mov
movsb
and
mov
sarb
ret
xor
aas
lret
rol
es
dec
and
les
cmpsl
movsb
mov
aas
xor
daa
mov
enter
mov
enter
daa
dec
mov
into
cmpsl
test
inc
mov
ss
mov
mov
ss
iret
sarb
daa
dec
mov
cmpsl
daa
test
and
inc
aaa
rorb
xor
mov
xor
mov
imulb
add
add
loopw
insb
aam
push
jg
addr16
pop
popa
imul
cmp
inc
movsb
leave
mov
dec
inc
aaa
ret
mov
mov
xor
aaa
push
mov
fisubs
mov
cmp
dec
xor
sub
movsl
sub
mov
mov
mov
mov
and
cmpsl
sub
and
and
mov
lds
and
inc
daa
and
dec
mov
sub
inc
xor
int
test
mov
inc
dec
es
mov
inc
cmp
inc
inc
xor
sarb
dec
mov
push
inc
mov
es
inc
dec
mov
ss
dec
shlb
cmpsl
inc
cmp
inc
and
mov
lds
aaa
xor
dec
dec
and
inc
dec
mov
cmpsl
rorb
dec
ss
inc
dec
and
movsl
mov
and
aas
and
and
and
mov
push
movsb
dec
mov
dec
ret
rolb
and
ss
movsb
and
inc
xor
leave
and
aaa
mov
mov
cmpsl
xor
xor
ss
cmp
movl
and
les
and
mov
dec
mov
xor
inc
xor
mov
sub
inc
movsb
xor
and
mov
xor
dec
dec
leave
mov
aaa
mov
and
dec
mov
mov
mov
cmp
les
daa
lret
into
cmp
dec
and
aas
inc
shlb
daa
inc
dec
dec
mov
cmp
and
rorb
mov
mov
mov
rolb
and
dec
shll
dec
mov
mov
test
mov
mov
sub
movsb
ds
aaa
inc
enter
leave
leave
inc
test
and
mov
lret
inc
sarb
sub
mov
mov
sub
mov
and
mov
mov
xor
movsb
leave
ss
daa
lds
fidivrs
mov
and
es
mov
enter
lret
cmpsl
lret
mov
dec
push
mov
sub
mov
mov
fidivs
inc
xor
xor
and
mov
push
push
mov
inc
aas
ss
aas
cmp
mov
enter
inc
mov
orl
pushl
andl
jmp
aaa
stos
cld
jl
sub
js
in
notl
bound
push
ljmp
inc
xor
mov
mov
and
ss
cmp
dec
daa
mov
ss
lret
enter
cmp
inc
cmp
mov
dec
aas
shlb
iret
cmpsl
xor
xor
leave
mov
mov
cmp
sub
cmp
mov
xor
lds
mov
inc
and
dec
push
test
rorl
mov
movsl
sub
cmp
and
dec
sub
mov
mov
and
ret
cmp
rol
and
aas
test
aas
aaa
lds
push
dec
cmp
inc
mov
test
shlb
cmp
mov
mov
enter
movsl
iret
mov
int
shlb
dec
xor
and
lret
fidivs
shll
mov
mov
aas
iret
inc
sub
inc
ret
inc
test
mov
inc
mov
inc
enter
movsb
ds
mov
leave
movsb
mov
lds
inc
ds
mov
aaa
xor
dec
enter
dec
mov
mov
shlb
mov
mov
enter
inc
test
mov
movsb
movsl
mov
sub
cmpsl
enter
mov
and
aas
iret
xor
xor
xor
es
xor
leave
cmpsl
mov
cmp
movsb
inc
xor
and
iret
mov
daa
ds
test
xor
mov
push
ds
inc
aaa
mov
inc
mov
lds
mov
les
and
rcl
mov
test
shlb
aas
cmp
and
es
mov
daa
mov
daa
leave
mov
aas
and
dec
mov
mov
mov
cmp
aas
enter
inc
dec
ds
ds
int
dec
lret
cmpsl
cmp
inc
fisubs
mov
cmpsl
inc
cmpsl
inc
and
and
movsl
fidivrs
mov
ss
into
inc
cmpsl
dec
ss
mov
shll
xor
faddp
mov
mov
lret
movsl
dec
int
xor
mov
mov
dec
sub
and
mov
mov
inc
iret
and
shl
xorl
call
adc
lea
push
mov
sub
mov
cmpl
jle
add
andl
jmp
push
call
shrd
jmp
in
cs
sub
insb
mov
loop
jae
call
jmp
mov
inc
int
lret
and
mov
mov
and
movsb
test
inc
les
xor
iret
mov
mov
mov
dec
and
xor
inc
mov
cmp
leave
dec
daa
daa
enter
movsl
dec
dec
mov
xor
mov
cmp
dec
enter
ret
push
mov
mov
movsb
mov
cmp
dec
movsl
leave
leave
shll
ret
ss
cmp
mov
xor
aaa
inc
dec
sub
sub
mov
mov
daa
dec
mov
cmp
mov
shll
into
fmulp
mov
mov
mov
shlb
xor
and
test
movsb
dec
lds
movsl
lds
mov
inc
dec
and
mov
enter
and
iret
mov
aaa
sarl
test
lds
mov
dec
mov
inc
cmp
mov
mov
dec
xor
dec
xor
leave
lret
mov
sarb
xor
and
dec
xor
dec
inc
fidivs
int
into
into
inc
and
sub
mov
mov
ds
mov
xor
mov
mov
ret
mov
mov
mov
and
es
mov
dec
sub
xor
dec
rorl
ret
shlb
inc
movsb
inc
and
push
push
aas
mov
lret
and
cmp
mov
inc
and
dec
rorb
ds
mov
iret
into
inc
mov
lds
mov
movl
lret
and
sarl
xor
inc
aaa
ret
cmpsl
into
and
xor
and
mov
iret
shll
faddp
int
mov
cmp
xor
cmpsl
mov
mov
mov
mov
iret
mov
shrb
enter
inc
xor
inc
iret
movsb
xor
mov
inc
shll
fisubs
dec
daa
daa
mov
mov
ss
iret
xor
daa
aas
xor
aas
dec
mov
aaa
and
dec
inc
cmp
leave
movsl
mov
and
xor
movsb
cmp
inc
dec
mov
mov
movsl
mov
lret
xor
mov
int
jmp
mov
xor
xor
addl
or
push
sbb
mov
push
pushl
shl
call
mov
mov
jmp
aad
nop
jae
je
sti
push
xchg
mov
cs
hlt
pop
gs
leave
mov
mov
rcll
mov
push
int
inc
shll
lds
test
inc
mov
and
xor
enter
enter
mov
lret
ss
dec
and
ds
es
mov
dec
mov
xor
sub
aaa
mov
push
sub
aaa
mov
fidivs
shlb
rorb
mov
iret
lret
dec
mov
ror
mov
aaa
and
cmp
dec
and
shll
fisubs
ds
and
enter
mov
inc
shll
inc
mov
shll
daa
xor
mov
mov
ss
lret
leave
sub
aas
and
and
and
xor
cmp
int
mov
cmp
rol
aas
xor
leave
push
sarb
sarb
aaa
mov
dec
lret
mov
inc
and
mov
xor
mov
sub
es
and
dec
mov
inc
mov
dec
mov
movsl
dec
les
cmp
dec
mov
leave
mov
mov
mov
and
xor
and
mov
and
test
mov
mov
leave
movsl
daa
cmp
mov
test
enter
xor
mov
and
inc
mov
into
dec
xor
and
dec
sub
cmpsl
lret
movsb
mov
movsb
movsl
mov
cmp
enter
inc
and
cmp
dec
mov
inc
dec
dec
int
aaa
dec
and
ret
test
int
and
push
and
cmpsl
ret
dec
dec
dec
enter
xor
enter
inc
xor
mov
movsl
inc
iret
and
les
rolb
mov
shlb
sub
mov
mov
fidivs
mov
inc
les
leave
and
into
dec
xor
es
inc
xor
into
and
mov
dec
and
inc
dec
movsl
vmovaps
xor
shll
test
shlb
inc
into
and
lret
and
mov
xor
mov
and
mov
inc
rol
and
es
xor
sarb
inc
ret
mov
mov
inc
mov
and
lret
mov
mov
mov
jmp
orl
and
mov
or
jmp
dec
dec
movsb
dec
ret
inc
and
xor
inc
mov
inc
dec
mov
fisubs
mov
mov
es
mov
mov
inc
mov
mov
mov
mov
mov
cmpsl
mov
and
les
and
les
aaa
and
into
daa
and
xor
shlb
mov
push
sub
xor
mov
les
dec
mov
sub
mov
and
and
dec
inc
and
les
sub
mov
cmpsl
xor
xor
aas
test
cmp
cmp
inc
inc
aaa
aaa
mov
dec
dec
movl
fiadds
sub
mov
xor
mov
lret
xor
mov
dec
mov
movsb
ret
mov
lret
cmp
inc
xor
and
mov
les
and
dec
xor
mov
mov
aaa
sub
movsl
mov
and
into
inc
leave
xor
and
daa
inc
aas
shlb
ror
dec
cmp
and
aas
mov
xor
sarb
cmp
mov
sub
into
mov
xor
iret
inc
xor
enter
cmp
dec
and
ret
xor
into
xor
and
ret
dec
mov
lret
mov
dec
les
push
dec
lret
and
mov
xor
iret
mov
ss
mov
dec
movsb
mov
xor
cmpsl
mov
dec
and
inc
dec
and
mov
mov
inc
inc
mov
cmp
cmp
ss
and
and
cmpsl
aas
mov
dec
xor
fidivs
cmp
mov
cmpsl
dec
xor
cmpsl
xor
xor
inc
xor
mov
aaa
iret
and
and
movsl
dec
shlb
mov
dec
shll
dec
inc
mov
mov
dec
shrb
sub
mov
aaa
and
push
cmpsl
leave
rolb
ss
xor
cmp
mov
dec
xor
dec
lret
inc
and
mov
dec
enter
inc
xor
cmp
iret
mov
mov
inc
mov
dec
inc
dec
xor
xor
dec
cmp
mov
mov
mov
mov
jmp
mov
ljmp
jns
xchg
hlt
jae
sub
in
imul
and
mov
movsl
mov
fisubs
aaa
enter
aaa
mov
mov
aaa
mov
inc
ret
and
and
fidivs
roll
shll
cmpsl
mov
aas
test
xor
mov
fimuls
mov
cmpsl
iret
aas
mov
dec
dec
into
daa
aaa
lds
aaa
movsb
push
mov
dec
xor
dec
xor
mov
dec
sarl
cmp
dec
xor
lds
lret
inc
and
xor
dec
rol
rorb
mov
dec
and
cmp
sub
xor
mov
aas
mov
leave
xor
and
mov
test
rcr
and
and
mov
inc
aas
mov
mov
mov
aas
test
ds
cmp
mov
cmp
iret
daa
int
movsl
movsb
inc
mov
inc
aaa
shll
enter
ror
leave
ss
xor
mov
inc
mov
inc
and
inc
iret
dec
leave
and
inc
movsl
mov
es
fimuls
inc
mov
mov
mov
mov
ret
sarl
dec
mov
mov
mov
int
dec
dec
cmp
dec
shlb
and
mov
mov
mov
test
mov
mov
cmp
movsl
xor
xor
leave
shll
cmpsl
int
cmpsl
les
les
mov
mov
aaa
cmp
mov
and
push
xor
push
xor
mov
sarb
xor
movsb
inc
push
enter
ds
dec
enter
and
int
daa
iret
shll
mov
lds
and
and
int
inc
cmpsl
cmp
lds
rol
inc
sub
cmpsl
sub
mov
dec
and
mov
mov
es
mov
sub
sub
mov
fidivs
and
rol
sub
dec
dec
cmp
ds
inc
mov
mov
mov
shlb
mov
mov
and
dec
cmp
mov
xor
ds
rorb
lds
movsb
dec
inc
xor
inc
daa
and
leave
dec
xor
cmpsl
xor
and
inc
test
and
roll
jp
xchg
sahf
xor
cmp
je
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stos
xor
bound
mov
xchg
push
imul
jmp
aas
aas
lds
rorb
mov
cmp
and
iret
xor
mov
inc
shlb
test
and
mov
aaa
inc
mov
rorb
ret
inc
xor
mov
mov
aaa
dec
mov
xor
mov
dec
and
mov
and
mov
enter
cmp
cmp
cmpsl
into
mov
mov
xor
dec
inc
dec
xor
ds
and
rolb
mov
dec
mov
ss
xor
dec
mov
fisubs
rorl
shlb
dec
and
inc
aas
movsb
and
push
cmp
xor
mov
test
xor
xor
xor
mov
faddp
inc
aas
mov
cmp
mov
sub
xor
dec
daa
and
shlb
inc
xor
iret
fisubrs
xor
mov
and
iret
cmpsl
xor
inc
mov
inc
fidivrs
xor
aaa
inc
and
shlb
mov
push
rolb
dec
mov
mov
ret
inc
xor
ss
xor
mov
lret
inc
mov
daa
mov
ss
mov
cmp
ds
sub
shlb
inc
sub
and
es
mov
mov
rol
daa
mov
inc
inc
dec
ret
cmp
mov
xor
mov
lds
dec
cmp
mov
inc
enter
daa
shrb
ret
mov
lret
dec
cmp
and
inc
daa
inc
cmpsl
mov
ret
mov
sub
cmp
cmp
mov
inc
push
int
dec
mov
xor
mov
mov
and
dec
dec
and
aaa
inc
mov
iret
shlb
into
and
dec
roll
mov
mov
ss
and
inc
mov
rolb
xor
mov
xor
mov
mov
and
movsl
inc
mov
mov
xor
dec
ret
les
xor
inc
xor
daa
daa
and
cmp
shlb
mov
faddp
mov
mov
cmpsl
fisubs
cmp
aas
dec
xor
xor
inc
daa
sarb
roll
loopne
xor
mov
mov
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
jmp
cmc
aas
inc
pop
or
cmc
jmp
sub
pop
and
js
push
jmp
dec
shll
daa
daa
xor
push
cmp
inc
leave
mov
mov
dec
test
aaa
and
rol
enter
mov
dec
inc
inc
lret
mov
and
xor
aas
inc
daa
lret
les
mov
lds
cmpsl
dec
ret
es
lret
mov
daa
mov
push
aas
cmpsl
xor
mov
dec
movsl
movsl
xor
dec
into
shlb
dec
movsl
iret
aas
mov
and
mov
mov
mov
ds
mov
leave
xor
mov
daa
mov
mov
mov
xor
inc
xor
and
shll
mov
and
dec
leave
xor
dec
inc
mov
enter
int
es
mov
inc
mov
dec
daa
mov
les
shll
dec
dec
mov
inc
push
inc
dec
cmp
and
and
lds
xor
movsb
inc
lret
push
iret
and
sub
aaa
xor
mov
lds
test
mov
and
mov
shlb
mov
movsb
movsb
mov
mov
mov
es
dec
mov
dec
mov
movsb
movsl
and
inc
inc
sub
les
mov
dec
and
inc
xor
aaa
ror
xor
mov
mov
and
and
and
int
mov
dec
lret
cmp
movsb
inc
inc
inc
mov
mov
mov
cmp
mov
into
daa
mov
es
inc
inc
shlb
es
cmpsl
mov
dec
ds
xor
int
movsb
mov
movsb
xor
mov
ret
push
xor
les
mov
and
test
ror
dec
test
mov
es
mov
inc
rcr
cmpsl
inc
mov
mov
xor
into
es
mov
dec
enter
push
xor
mov
mov
and
mov
lret
inc
lret
xor
ret
sub
and
mov
mov
mov
dec
inc
push
les
int
and
xor
iret
cmp
lret
inc
iret
ss
mov
movsb
shlb
mov
mov
mov
test
es
cmp
aaa
movsl
mov
xchg
add
mov
dec
mov
lods
enter
add
mov
shlb
or
shl
mov
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
add
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
jmp
push
jge
xchg
mov
pusha
jmp
mov
jmp
rol
lret
sub
mov
mov
lds
int
mov
dec
inc
inc
inc
xor
inc
inc
les
dec
test
sub
aaa
dec
aaa
and
dec
dec
and
sub
cmp
dec
mov
mov
ret
mov
into
and
ds
int
and
ss
mov
movsb
mov
rclb
ds
mov
int
daa
lret
mov
es
mov
iret
mov
iret
movsl
dec
rol
inc
into
into
mov
into
into
aaa
sub
cmp
and
aas
and
cmpsl
fidivrs
les
inc
sub
and
xor
ret
aas
aaa
xor
xor
xor
mov
dec
xor
shlb
inc
inc
dec
daa
test
aas
mov
cmp
cmp
xor
test
dec
inc
and
xor
and
mov
push
mov
dec
and
and
shll
movsb
mov
cmp
mov
xor
mov
xor
mov
dec
mov
mov
mov
leave
inc
mov
inc
cmp
inc
cmpsl
mov
iret
mov
inc
enter
inc
mov
dec
xor
cmpsl
cmp
aas
cmp
es
and
shlb
inc
inc
aas
sub
mov
into
mov
cmpsl
mov
inc
iret
and
xor
fimuls
cmp
xor
lret
dec
iret
leave
mov
dec
enter
and
lds
inc
mov
xor
ds
dec
cmp
mov
mov
into
and
enter
sub
xor
lret
fiadds
sub
dec
dec
leave
movsb
mov
cmpsl
inc
inc
cmp
xor
mov
ret
int
sub
xor
mov
mov
ds
movsb
es
ds
iret
mov
mov
mov
mov
xor
int
mov
and
cmp
inc
inc
mov
and
inc
and
push
aas
test
int
mov
inc
mov
int
ret
dec
dec
cmp
mov
dec
cmp
mov
mov
and
aas
inc
xor
inc
aas
ds
mov
enter
cmp
es
ror
xor
mov
icebp
movzbl
cltd
movzbl
idiv
mov
jmp
jl
shrb
out
std
jbe
mov
insl
ljmp
xor
test
leave
aas
mov
mov
mov
xor
mov
mov
roll
inc
push
cmp
xor
dec
aaa
ds
sarl
dec
dec
sub
mov
ds
inc
dec
sub
dec
mov
mov
inc
mov
inc
cmp
shlb
iret
mov
xor
and
ss
ret
mov
dec
dec
inc
lds
xor
mov
movsl
aaa
rorb
xor
faddp
mov
cmp
and
push
sub
dec
mov
xor
cmpsl
xor
mov
leave
mov
xor
mov
mov
int
mov
cmp
into
dec
aas
cmp
lret
mov
dec
xor
daa
mov
and
lds
xor
mov
daa
and
mov
dec
daa
mov
dec
ss
rorl
test
inc
mov
aas
lret
int
cmpsl
and
shlb
mov
aas
push
and
inc
sub
mov
inc
inc
inc
and
mov
lret
lret
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
decl
jne
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
cmpl
jg
jmp
pushl
call
mov
or
mov
jne
mov
mul
ret
push
cmpl
jbe
jmp
pushl
push
pushl
push
pushl
pushl
push
call
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
mov
mov
xor
add
xor
imul
mov
div
xor
push
pop
xor
mov
mov
or
xor
mov
imul
or
mov
div
sub
mov
mov
mov
imul
xor
div
mov
mov
sub
or
mov
and
mov
sub
sub
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
sub
xor
div
mov
push
pop
push
sub
mov
imul
lea
mov
mov
or
xor
div
mov
mov
sub
mov
xor
add
mov
mov
mov
xor
div
mov
mov
lea
xor
div
mov
xor
add
mov
div
xor
mov
mov
or
xor
mov
imul
or
mov
div
pop
sub
mov
mov
mov
imul
xor
div
mov
sub
or
mov
and
mov
sub
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
pushl
call
cmp
jne
movl
movl
movl
mov
sub
mov
sub
subl
and
mov
andl
sub
mov
movl
movl
movl
mov
cmpl
jl
mov
mov
and
jmp
pushl
push
push
call
mov
xor
mov
sub
adc
mov
movl
xor
movl
cmp
movl
jbe
and
movl
xor
movl
movl
xorl
movl
mov
mov
sbbl
sub
cmpl
jle
jmp
push
push
call
mov
or
mov
imul
mov
sub
sub
xorl
xor
notl
pushl
xorl
pushl
orl
pushl
call
cmpl
jle
jmp
pushl
call
movl
movl
movl
movl
movl
mov
mov
and
xorl
or
xor
div
orl
mov
orl
sub
xor
xor
adc
xor
pushl
mov
orl
mov
orl
pushl
sbbl
and
pushl
imul
pushl
adcl
and
sbbl
xor
andl
pushl
pushl
call
pushl
call
inc
movl
cmp
jb
mov
xor
mov
andl
mov
andl
mov
movl
movl
andl
mov
call
xor
add
or
lea
cmpl
jl
add
jmp
pushl
push
pushl
push
pushl
call
mov
lea
mov
mov
mov
mov
xor
mov
xor
xor
adcl
shl
movzwl
xor
shr
or
mov
mov
sub
and
mov
mov
cmpl
ja
jmp
pushl
call
lea
mov
mov
mov
mov
shrd
shr
sub
mov
sbb
mov
orl
xor
xor
subl
or
add
mov
subl
push
subl
pushl
addl
lea
sbbl
push
orl
shl
movl
call
lea
orl
push
addl
mov
addl
mov
lea
push
incl
mov
subl
lea
mov
mov
sbbl
mov
negl
push
xorl
call
subl
push
push
pushl
adcl
call
add
mov
cmpl
jb
sbb
jmp
pushl
push
call
mov
mov
mov
shr
shl
or
mov
xor
mov
xor
lea
sbb
mov
lea
cmpl
jge
adcl
inc
jmp
push
pushl
call
mov
mov
sub
lea
xor
movl
cmpl
jle
or
jmp
push
pushl
push
call
movl
movl
mov
sub
mov
and
or
mov
sbbl
sub
cmpl
jge
xorl
incl
jmp
push
call
mov
movl
movl
movl
mov
andl
mov
xor
mov
addl
sub
cmpl
jg
sbb
jmp
pushl
pushl
call
mov
xor
cmp
ja
mov
mov
mov
mov
movzwl
xorl
mov
add
movzwl
sbbl
or
sub
xorl
mov
xor
inc
mov
mov
adcl
mov
xor
mov
mov
mov
andl
mov
subl
movzwl
movzwl
or
negl
mov
adcl
movzwl
cltd
orl
idiv
adcl
mov
and
addl
imul
movl
cmp
movl
je
mov
sub
mov
subl
xor
shld
addl
shl
mov
cmpl
jg
jmp
push
pushl
pushl
call
mov
xor
xor
mov
cmp
jne
cmp
je
not
mov
movl
cmp
je
cmpl
ja
dec
jmp
pushl
push
push
push
push
call
mov
mov
mov
shl
xor
mov
cmpl
jle
or
jmp
push
pushl
pushl
pushl
call
mov
mov
xor
xor
shrd
xor
shr
or
sbbl
or
mov
mov
mov
movl
cltd
cmp
movl
jne
cmp
movl
jne
cmpl
jl
adcl
jmp
push
call
movl
movl
mov
mov
mov
xor
movl
shld
shl
sbbl
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
push
push
pushl
call
mov
xor
xor
mov
cmp
jne
cmp
movl
jne
mov
mov
sub
sub
movl
movl
mov
xor
mov
or
shrd
shr
inc
mov
mov
xor
addl
shl
xorl
xor
sbbl
or
movl
mov
mov
movl
cmp
jne
movb
movb
movzbl
mov
imul
orl
and
subl
mov
subl
imul
cmpl
jl
xor
jmp
pushl
call
and
sub
mov
movb
movb
movb
sub
movb
mov
movzbl
cmpl
jg
jmp
push
pushl
call
mov
cltd
idiv
mov
sub
mov
sub
mov
addl
xor
mov
movl
cmp
je
adc
movl
sub
movl
sub
movl
mov
mov
xor
mov
add
add
mov
andl
xor
movl
div
cmpl
jge
not
andl
jmp
pushl
push
push
pushl
call
xor
mov
sub
div
xor
mov
movl
movl
movl
movl
mov
mov
sub
and
add
mov
div
mov
or
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movl
movl
mov
mov
and
sub
xor
and
mov
movl
movl
movl
mov
mov
add
or
xor
add
mov
cmp
jae
lea
push
lea
push
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
mov
or
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
push
push
push
push
call
mov
mov
and
mov
and
mov
push
push
push
push
call
mov
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
ja
jmp
pushl
push
push
push
push
pushl
call
push
push
push
movl
movl
mov
add
cmpl
ja
jmp
pushl
push
pushl
push
call
and
shr
add
imul
xor
mov
movl
movl
movzwl
or
mov
xor
shr
cmpl
jb
mov
mov
sub
or
jmp
pushl
push
call
and
mov
and
dec
sub
xor
mov
movl
movl
and
movl
movl
addl
mov
or
and
sub
sub
and
xor
mov
or
xor
xor
mov
and
mov
sub
mov
addl
mov
andl
lea
cmpl
jge
adc
jmp
push
call
mov
movl
movl
mov
xor
push
andl
pop
adcl
div
xor
and
adcl
mov
sbbl
imul
cmpl
jb
xor
jmp
push
call
sub
mov
movl
mov
imul
imul
sub
xor
mov
div
sbbl
mov
sub
mov
and
movl
or
movl
movl
sub
mov
sbb
mov
andl
sub
mov
sbb
imul
orl
xor
mov
div
cmpl
jb
jmp
push
call
mov
sub
sub
mov
movl
movl
mov
or
mov
orl
sub
imul
not
xor
movzbl
adc
mov
imul
cmpl
jge
adc
jmp
pushl
push
pushl
push
push
push
pushl
call
sub
mov
movl
mov
or
sub
cmpl
ja
adcl
adc
jmp
pushl
push
push
call
xor
sub
mov
movl
movl
movzwl
sbb
mov
movl
movl
or
mov
mov
add
sub
cmpl
ja
adc
sbbl
jmp
push
push
call
mov
xor
mov
xor
div
adc
mov
lea
not
mov
movl
mov
xor
mov
movl
cmpl
jg
or
jmp
push
call
movl
movl
movl
movl
mov
add
xor
mov
sub
mov
sub
cmpl
jbe
sbb
jmp
pushl
pushl
push
push
push
call
xor
mov
or
mov
lea
push
subl
call
mov
mov
mov
sbb
xor
sbbl
xor
xor
cmpl
jg
adcl
decl
jmp
push
call
and
lea
mov
movl
movl
mov
mov
sub
imul
movl
movl
cmpl
jl
sbb
jmp
pushl
pushl
call
movl
movl
movl
mov
mov
or
cmpl
jge
jmp
push
pushl
call
sub
imul
mov
lea
mov
mov
mov
cmpl
jl
xor
or
mov
sub
sub
jmp
push
call
imul
or
imul
adc
xor
adc
add
mov
movl
dec
movl
sbbl
movl
movl
mov
or
mov
cmpl
jg
jmp
push
push
pushl
call
mov
xor
xor
mov
call
mov
mov
or
mov
movl
mov
xorl
xor
subl
xor
movl
mov
xorl
call
negl
or
or
andl
mov
mov
orl
xor
xor
mov
addl
call
cmpl
jb
movl
jmp
pushl
push
push
push
pushl
call
mov
mov
mov
mov
xor
xor
mov
or
mov
and
mov
xorl
mov
mov
adcl
call
xor
mov
sbbl
or
xor
mov
or
push
andl
push
andl
push
adcl
push
call
movzbl
mov
cmp
movl
jne
mov
mov
xor
sbbl
xor
sbbl
mov
subl
call
cmpl
ja
sbb
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
mov
xor
xor
andl
mov
addl
call
xorl
or
cmpl
ja
jmp
push
push
push
push
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
mov
sbb
mov
mov
mov
orl
xor
sbbl
xor
mov
mov
mov
call
movl
or
sub
mov
orl
or
push
adcl
push
push
push
call
movl
mov
movl
jmp
jmp
lea
mov
mov
adc
mov
mov
add
movl
mov
addl
xor
shr
mov
cmpl
jge
dec
jmp
push
pushl
call
xor
shl
or
mov
mov
mov
and
mov
and
mov
cmpl
jbe
mov
mov
and
jmp
push
push
push
push
call
mov
xor
xor
mov
xorl
call
xor
mov
mov
mov
or
mov
subl
xor
sbbl
xor
xorl
mov
call
movl
or
or
mov
orl
mov
sbbl
xor
subl
xor
xorl
mov
andl
call
mov
adc
mov
mov
mov
xor
andl
xor
mov
adc
mov
mov
sbbl
mov
orl
mov
xorl
call
mov
andl
or
neg
mov
subl
or
movl
push
andl
push
push
orl
push
sbbl
call
mov
movl
cmp
je
add
mov
mov
andl
xor
xor
orl
mov
sbbl
call
mov
mov
cmpl
jg
mov
add
mov
xor
xor
sub
sub
jmp
pushl
call
mov
orl
mov
xor
sbbl
xor
mov
call
or
cmpl
jle
sbb
mov
mov
or
jmp
pushl
pushl
call
or
mov
imul
add
mov
mov
mov
movl
mov
movl
jmp
movl
jmp
incl
mov
sbb
mov
xor
movl
xor
andl
mov
call
sbb
mov
sub
mov
mov
or
mov
mov
cmpl
jb
or
jmp
pushl
push
push
call
mov
xor
xor
mov
call
or
or
xor
or
add
mov
mov
mov
xorl
xor
xor
subl
mov
negl
call
mov
notl
mov
adc
mov
mov
xor
addl
xor
sbbl
mov
mov
mov
andl
call
or
mov
orl
or
addl
push
push
negl
push
push
call
movl
mov
jmp
notl
mov
mov
mov
adc
mov
xor
addl
xor
mov
xorl
call
mov
xor
mov
mov
mov
andl
xor
orl
xor
negl
mov
negl
call
xorl
or
addl
or
movl
mov
movl
jmp
mov
mov
xor
xor
subl
mov
call
cmpl
jg
xorl
jmp
push
pushl
pushl
push
pushl
call
mov
mov
mov
mov
xor
xor
addl
mov
call
cmpl
jge
orl
jmp
push
pushl
push
call
or
or
mov
mov
mov
xor
add
mov
or
sub
or
xor
subl
add
mov
mov
adc
mov
movl
adcl
movl
movzbl
and
movl
movl
or
movl
sub
movl
movl
movl
cmpl
ja
subl
jmp
pushl
call
movl
mov
mov
sub
mov
xor
adc
div
or
mov
xorl
lea
cmpl
jl
sub
jmp
push
call
mov
add
mov
or
mov
or
and
xor
mov
and
movzbl
sbb
imul
andl
add
not
xor
push
or
pop
sbbl
div
mov
sbb
mov
adc
add
dec
lea
mov
cmpl
jbe
movzwl
adc
andl
jmp
push
call
movl
movl
movl
movl
or
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
and
add
mov
lea
mov
add
mov
imul
mov
imul
mov
or
mov
sub
mov
mov
xor
imul
mov
imul
mov
and
imul
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
and
mov
lea
mov
lea
mov
sub
mov
sub
xor
mov
mov
xor
mov
xor
add
mov
xor
div
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
push
movzwl
add
mov
or
movl
jne
cmpl
jl
jmp
push
call
mov
mov
xor
div
mov
mov
div
mov
mov
movl
jmp
or
mov
mov
mov
mov
addl
shr
movl
rcr
sbbl
shr
rcr
or
movl
jne
mov
xor
xor
sub
or
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
add
notl
mov
movl
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
movl
shl
ret
add
mov
addl
xor
orl
and
shl
ret
xor
xor
ret
add
lret
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jne
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
popa
mov
add
jo
inc
jns
gs
fs
inc
gs
outsl
jbe
insb
popa
popa
ja
add
add
insb
imul
imul
imul
imul
imul
add
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
inc
add
inc
add
scas
ret
mov
mov
loop
jle
xchg
mov
mov
mov
pusha
mov
mov
js
pop
mov
lods
xor
js
loop
jle
xchg
mov
mov
mov
pusha
mov
mov
js
pop
mov
int
ret
jbe
testb
mov
mov
pushf
mov
mov
in
xor
adc
adc
hlt
and
daa
jb
loopne
js
loopne
jo
pushf
mov
cli
mov
js
pusha
mov
or
adc
hlt
inc
testb
loopne
js
loopne
jo
pushf
mov
mov
js
pusha
mov
sub
adc
hlt
popa
mulb
mov
mov
nop
mov
cli
mov
cmpsb
mov
mov
xor
inc
adc
popa
cmc
xor
mov
nop
mov
hlt
mov
mov
push
js
outsb
mov
insl
xor
adcl
jb
aam
js
nop
mov
fmuls
insb
mov
mov
lea
adcl
adc
jb
aam
js
nop
mov
fimull
insb
mov
pusha
mov
lods
xor
cmc
loope
out
mov
mov
mov
jle
cwtl
mov
js
jb
xor
xor
adc
adc
pop
cmc
and
daa
jo
repnz
stos
mov
mov
sahf
mov
js
outsb
mov
or
adc
inc
jb
add
or
inc
add
inc
add
inc
add
stos
inc
add
adc
inc
add
inc
add
stos
inc
add
stos
inc
add
loope
sahf
sbb
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
inc
add
inc
add
inc
add
inc
add
ja
sahf
in
scas
ja
subb
add
inc
add
push
xchg
add
mov
push
or
ja
mov
push
pop
popf
data16
xchg
or
inc
add
xchg
sahf
jle
xchg
sahf
jb
xchg
sahf
jbe
xchg
sahf
push
xchg
sahf
outsb
aaa
xchg
sahf
bound
xchg
sahf
data16
xchg
sahf
pop
aaa
xchg
sahf
pop
aaa
xchg
sahf
cmp
xchg
sahf
sub
addl
cmpsl
inc
add
popa
imul
es
sahf
fmull
add
clc
cmpsl
inc
add
scas
mov
and
add
ljmp
add
xchg
adc
fimuls
mov
pushf
mov
push
mov
js
add
mov
mov
stos
mov
mov
js
xchg
mov
mov
mov
js
add
sahf
mov
mov
mov
shr
rorb
shrb
rorb
outsl
rorl
shr
rorl
shrl
rorl
outsl
shrb
shl
shl
shl
shl
sar
sar
sar
sar
shl
shl
shl
shl
shr
mov
nop
out
jo
mov
mul
jbe
shl
dec
dec
test
cmp
ja
mov
aad
out
addr16
push
lock
mov
cmpsb
and
xchg
xorb
and
out
test
outsb
add
or
outsl
arpl
inc
add
inc
add
add
add
je
popa
imul
outsl
outsb
arpl
addr16
insl
jae
jo
outsl
outsb
jns
ja
gs
imul
outsb
gs
data16
bound
popa
jne
jae
js
gs
jo
popa
insb
imul
gs
imul
ja
bound
jns
add
add
push
jne
ja
jns
outsl
insl
jns
outsl
data16
outsl
ja
gs
outsl
outsl
ja
push
push
imul
popa
insb
popa
ja
jne
jo
jae
js
jne
dec
outsl
imul
inc
outsl
outsb
gs
ja
jae
inc
gs
jb
outsb
add
push
gs
insl
jae
popa
data16
add
imul
bound
popa
jno
jae
add
inc
insb
imul
outsl
add
push
jne
fs
je
jne
jne
jns
jb
addr16
insl
jae
jne
ja
outsl
jb
je
jo
jo
fs
outsl
je
gs
insb
gs
insb
jae
popa
bound
jp
jne
arpl
add
dec
outsb
outsl
ja
imul
add
add
pop
int
dec
add
add
add
add
add
add
adc
add
bound
je
add
add
decb
add
add
add
add
add
add
add
add
add
dec
lods
add
pop
lods
add
mov
add
test
lods
add
shrb
add
add
add
add
icebp
sub
add
sub
add
add
insb
dec
add
iret
movsb
add
jo
gs
bound
outsl
jne
popa
je
arpl
add
fs
imul
fs
jb
jne
outsb
je
insb
fs
cmp
dec
outsb
arpl
insl
outsb
je
gs
imul
xor
add
fs
outsl
insb
fs
js
inc
xor
inc
gs
popa
insb
jne
inc
js
inc
cmp
gs
outsl
outsb
je
outsb
arpl
imul
popa
insl
popa
outsl
bound
add
ja
popa
jb
jns
jne
imul
popa
insl
gs
outsl
jb
insb
insl
gs
insl
imul
jo
addr16
jae
fs
outsl
add
jbe
outsb
addr16
arpl
jbe
js
jns
arpl
jae
imul
popa
push
jne
jns
popa
jo
jne
add
jo
push
add
gs
jb
jae
popa
jns
popa
jo
outsl
add
jae
fs
jne
bound
popa
outsb
jns
outsl
addr16
popa
gs
gs
imul
popa
add
jae
imul
jo
js
outsl
je
imul
add
fs
imul
popa
jne
jo
addr16
outsb
add
gs
jns
bound
push
gs
jae
outsb
data16
push
je
je
fs
push
bound
gs
inc
jne
gs
outsl
jo
popa
je
gs
add
push
add
outsl
add
jae
je
ja
popa
add
add
jne
add
add
jne
bound
add
jns
popa
add
add
inc
add
bound
jae
add
jne
outsb
add
outsl
add
jae
outsl
add
popa
add
push
add
je
add
insb
add
jbe
push
add
jb
imul
imul
arpl
outsl
add
inc
add
outsl
add
push
outsl
add
popa
add
add
push
add
popa
add
bound
jne
add
insb
add
add
add
add
jne
jb
imul
imul
je
add
outsl
add
jb
popa
add
add
imul
add
je
add
inc
add
je
add
add
jne
add
jo
add
insb
add
jo
jne
jb
add
add
imul
add
adc
jnp
adc
hlt
adc
fsubs
adc
icebp
adc
inc
pop
adc
movsl
push
adc
call
add
add
jb
add
adc
negb
add
adc
push
adc
pop
pop
adc
call
adc
ds
add
dec
adc
outsl
or
add
adc
mov
xor
add
push
adc
jmp
adc
mov
and
add
adc
add
dec
adc
bound
add
jp
add
adc
mov
cmp
adc
fldt
add
dec
adc
and
add
add
xor
add
adc
cli
adc
add
push
add
sbb
add
adc
fsubl
adc
mov
jge
add
aaa
adc
mov
add
insl
adc
jecxz
adc
sbb
adc
lcall
add
adc
dec
xor
add
add
add
adc
jge
adc
ret
add
sub
add
cmp
add
adc
xchg
add
add
movups
xor
adc
xlat
sbb
add
sbb
add
xor
add
pop
adc
imul
push
bound
add
adc
ljmp
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
cmpsb
add
ja
add
lea
add
xchg
mov
add
cmpsl
add
fwait
mov
add
add
or
add
mov
add
lret
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jne
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
popa
mov
add
add
outsb
jae
popa
je
dec
gs
popa
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
gs
jae
inc
inc
add
popa
insb
imul
add
outsb
fs
gs
popa
addr16
js
das
add
je
arpl
gs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
push
gs
arpl
jo
jns
add
add
je
gs
outsl
popa
jb
push
jns
add
arpl
outsl
jo
jo
outsb
jne
add
add
jae
jb
outsb
je
inc
add
add
popa
jb
jb
jbe
add
add
je
gs
je
je
add
add
insb
insb
push
imul
outsl
arpl
sldt
imul
outsl
ja
outsl
push
outsl
jo
add
push
gs
outsb
jne
stos
add
fs
jne
jae
jb
add
inc
push
xor
cs
insb
add
pop
add
je
dec
jae
imul
add
dec
push
inc
push
dec
cs
insb
add
add
popa
jb
push
popa
addr16
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
imul
jae
mov
inc
gs
gs
dec
bound
arpl
addb
gs
gs
inc
outsl
insb
outsl
jb
add
inc
gs
outsl
outsb
je
popa
je
add
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
dec
xor
cs
insb
add
xor
xor
fs
insb
add
sahf
add
gs
je
dec
jne
gs
add
xchg
add
outsl
bound
inc
outsl
insl
jo
arpl
add
jne
push
gs
jne
arpl
popa
outsb
addr16
addr16
add
cwtl
add
popa
imul
je
jo
gs
bound
arpl
add
add
gs
je
push
gs
outsl
je
push
push
add
iret
add
je
jne
jb
outsb
je
imul
jns
add
and
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
xor
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
js
inc
gs
imul
popa
je
add
jno
push
jb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
push
dec
inc
dec
xor
cs
insb
add
arpl
jae
insb
gs
insb
add
or
rorb
shlb
xor
mov
pop
xchg
sbb
sub
adcl
in
push
repz
cmp
adc
fistps
pop
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
test
or
in
int
in
leave
and
xor
aas
adc
add
fistps
pop
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
add
mov
sub
andl
adc
add
fistps
pop
rorb
shlb
test
shl
mov
pop
xchg
sbb
push
in
add
lret
in
fistl
xchg
cmpsl
mov
pop
or
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
mov
or
in
sub
in
popa
mov
adc
mov
mov
es
or
fldenv
mov
popaw
call
ds
loopne
mov
out
cmp
std
fstp
fldcw
out
cmp
std
fstp
fnstcw
mov
out
dec
je
add
loop
pop
shl
or
cmp
pop
inc
or
cmp
pusha
jne
jae
lea
cmp
cmp
bound
pop
xorb
lahf
es
rorb
cmp
cmp
cmp
imul
push
and
sub
fistl
in
lret
pop
scas
mov
leave
lock
push
sub
pop
cmp
inc
cmp
cmp
cmp
jle
lahf
and
test
xorb
fs
mov
xlat
cmp
mov
rcll
out
popa
xchg
sbb
cmp
cmp
pop
xchg
in
jmp
outsl
mov
lea
cmp
cmp
popa
lock
push
out
popa
out
popa
mov
xchg
in
inc
adc
mov
xchg
mov
adc
sub
add
je
loopne
enter
push
enter
call
out
lock
cmp
fnstsw
mov
mov
fdivs
push
lea
cmp
cmp
cli
cmp
push
lea
cmp
call
cmp
adc
mov
mov
and
xchg
call
popa
cmp
aaa
mov
and
sub
cmp
cmp
lea
cmp
mov
in
out
cmp
popa
cmp
mov
in
int
call
rcl
fidivs
mov
iret
rcl
in
shr
iret
in
repnz
mov
mov
loop
leave
push
lret
xchg
lea
cmp
call
mov
sar
je
ret
pop
pop
dec
add
out
cmp
scas
popa
cmp
call
mov
sar
ret
ret
pop
aas
dec
add
repz
ret
inc
cmp
cmp
xlat
pop
je
add
cmp
popa
xlat
pop
out
xchg
cmp
out
xchg
mov
pop
out
add
out
mov
push
sar
je
add
add
aas
enter
cmp
cmp
rcl
rcl
iret
out
add
out
iret
popa
pusha
push
out
iret
cmp
out
pop
mov
cmp
je
mov
xchg
iret
lret
pusha
std
lret
rorb
add
push
add
cmp
pusha
iret
jge
std
adc
cmp
push
adc
mov
lea
lret
rorb
rol
add
cmp
mov
lea
popa
out
int
iret
pusha
push
mov
add
cmp
or
mov
pop
out
cmp
lahf
and
or
pushf
sub
cmpsl
divl
inc
xchg
xchg
rcrb
xchg
lahf
imull
cmp
je
pop
pop
es
mov
jbe
call
rorb
cmpsl
stc
mov
and
shrb
stos
outsb
cmp
je
add
in
mov
popa
adc
shll
mov
pop
xchg
call
or
sar
aaa
rorb
xchg
mov
xchg
add
roll
test
inc
lret
mov
push
pop
pop
or
je
pop
pop
or
mov
popa
mov
cmpsb
rol
jbe
xchg
shll
mov
shll
cmpsb
shll
movsl
es
or
fidivl
shll
jbe
insb
mov
mov
je
rcr
mov
inc
pop
pop
add
shll
jbe
out
mov
inc
out
popa
pop
pop
add
jmp
cmp
mov
mov
in
test
shlb
lea
in
mul
lea
dec
cmp
mov
fiaddl
xchg
cmp
stc
popa
cmp
dec
or
and
sub
rorb
mov
pop
mov
pop
psrld
ret
test
pushl
pushf
xor
rorl
push
mov
pop
mov
pop
test
pusha
sar
mov
rorb
mov
pop
mov
pop
test
pusha
sar
mov
rorb
mov
pop
mov
pop
test
pusha
sar
mov
rorb
pushf
daa
inc
dec
or
and
ret
inc
ret
rorb
rorb
ret
rorb
rorb
dec
or
enter
dec
or
or
cmp
mov
pop
mov
pop
test
cmp
pushl
stos
rorb
mov
pop
mov
pop
test
cmp
pushl
stos
rorb
dec
or
lock
cmp
std
cmpsb
cmp
cmp
pop
cmp
cmp
imul
cmp
in
cmp
into
cmp
cmp
call
call
call
pop
add
cmp
test
ss
mov
jb
rcl
cmp
xlat
pop
out
imul
xchg
rorl
jb
rcl
in
mov
cmp
cmp
or
mov
add
or
mov
dec
rorb
mov
sub
imul
cmp
cmp
rolb
popa
cmp
mov
sub
call
rolb
popa
cmp
lea
cmp
mov
pop
mov
pop
test
test
rcr
sar
mov
xchg
push
test
sub
sub
mov
mov
sub
mov
lret
mov
sub
pop
sub
cmp
cmp
mov
sub
mov
lret
cmp
cmp
add
cmp
loopne
fildll
call
or
cmp
out
out
cmp
cmp
mov
or
mov
add
cmp
repz
mov
jne
jne
test
or
cmp
out
out
cmp
cmp
mov
or
cmp
cmp
mov
stc
cmp
cmp
pop
mov
jne
jne
mov
sub
popa
cmp
dec
or
pop
out
xor
pop
test
and
pusha
repz
or
cmp
cmp
out
cmp
cmp
mov
or
cmp
cmp
cmp
sbb
or
cmp
cmp
or
cmp
cmp
out
cmp
cmp
mov
or
cmp
cmp
cmp
lds
cmp
pop
or
cmp
cmp
clc
clc
cmp
fnstenv
popa
cmp
cmp
lea
cmp
or
fnstenv
popa
cmp
mov
sub
inc
add
or
mov
push
popa
cmp
fmull
cmp
fnstenv
inc
call
mov
sbb
cmp
rorb
and
cmp
lea
push
cmp
fnstenv
or
mov
pop
test
jb
lea
shll
outsb
cmp
cmp
out
fisubrl
cmp
dec
or
cmp
cmp
cmp
sub
mov
xchg
cmp
fnstenv
popa
cmp
cmp
lea
cmp
mov
sub
shlb
or
mov
aaa
popa
cmp
out
cmp
push
mov
sub
mov
sub
popa
cmp
lea
shl
mov
sub
shlb
or
mov
sbb
cmp
sub
cmp
cmp
fnstenv
popa
cmp
cmp
cmp
sub
or
mov
sub
mov
sub
cmp
lea
cmp
fnstenv
popa
cmp
cmp
cmp
sub
popa
cmp
mov
sub
cmp
fdiv
cmp
fnstenv
popa
cmp
cmp
cmp
sub
aas
cmp
or
mov
aas
out
leave
out
jns
cmp
mov
or
ret
xchg
out
fstpl
stos
subl
call
mov
sbb
cmp
cmpsl
and
fnstenv
popa
cmp
cmp
cmp
sub
or
add
cmp
out
aas
repz
mov
pop
mov
pop
mov
sub
repnz
cmp
jb
rcrl
cmp
lea
mov
pop
mov
pop
mov
sub
cmp
jb
rcrl
cmp
lea
cmpsl
mov
pop
mov
pop
test
test
rcr
sar
mov
xchg
push
call
popa
cmp
cmp
test
ljmp
or
rorb
inc
out
mov
pop
mov
pop
test
cmp
jb
ror
in
or
mov
pop
mov
pop
test
test
lea
shll
cmp
push
xor
cmp
xchg
push
call
pop
or
rorb
add
or
mov
pop
mov
pop
test
out
ss
sar
mov
jns
ret
mov
pop
mov
pop
test
jb
lea
shll
dec
mov
cmp
test
jb
lea
shll
inc
mov
cmp
test
cmp
jb
roll
mov
pop
mov
pop
test
test
rcr
sar
mov
lret
xlat
and
and
or
mov
push
dec
or
and
dec
or
sub
mov
cmp
jb
fidivrl
rcl
addr16
cmp
or
std
jb
fidivrl
rcl
in
or
xchg
mov
or
mov
cmp
cmp
std
jb
shll
jnp
cmp
cmp
cmp
mov
test
rorl
push
mov
std
je
test
in
or
mov
xor
cmp
std
jb
shll
mov
xor
or
std
jb
fidivrl
rcl
in
or
mov
aaa
test
test
sar
rcr
mov
mov
in
mov
mov
cmp
or
fidivrl
std
jb
shll
stos
cmp
cmp
mov
addr16
dec
or
and
cmp
rorb
dec
or
adc
sbb
mov
in
xlat
in
in
or
std
jb
fidivrl
rcl
xchg
cmp
cmp
rcrb
or
pushf
xor
mov
mov
fidivs
or
std
jb
fidivrl
shll
xlat
cmp
or
mov
mov
fidivs
in
fidivrl
std
jb
shll
xlat
daa
mov
daa
test
jb
jecxz
mov
lret
xlat
cmp
mov
fnstcw
cmp
mov
fnstcw
cmp
test
test
sar
shl
mov
lret
fwait
xlat
icebp
test
xlat
icebp
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
cmp
inc
mov
fidivs
or
std
jb
fidivrl
shll
xlat
cmp
or
mov
mov
fidivs
std
jb
or
fidivrl
shll
xlat
aas
mov
aas
test
jb
jecxz
mov
lret
xlat
cmp
mov
movsl
cmp
cmp
test
test
sar
shl
mov
lret
fwait
xlat
icebp
test
xlat
icebp
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
cmp
inc
mov
sub
or
std
jb
shll
mov
jecxz
mov
test
ror
xchg
or
mov
xchg
xor
or
mov
aas
test
rcr
test
sar
mov
mov
test
shll
jb
shll
cmp
shll
fcmovnb
jecxz
test
into
mov
in
mov
in
test
sar
test
rcrl
mov
lret
pusha
lret
shlb
or
mov
in
test
test
sar
rcr
mov
lret
rorb
mov
in
mov
in
test
sar
test
rcr
mov
mov
std
je
mov
in
mov
in
test
test
shl
sar
mov
mov
addr16
stos
xchg
shrl
mov
pop
mov
pop
mov
and
cmp
mov
mov
sub
test
rcr
test
mov
sbb
cmp
pushl
into
fbstp
test
test
rcr
sar
mov
fbstp
test
test
rcr
sar
loop
into
fistpll
fnstcw
mov
pop
mov
pop
test
test
rcr
sar
mov
rorb
xchg
push
out
loop
sbb
cmp
and
cmp
mov
sub
popa
cmp
mov
inc
cmp
test
shl
out
shll
fneni(8087
mov
pop
test
mov
pop
out
ss
sar
mov
loopne
call
shr
push
ret
lahf
and
and
or
ret
test
je
out
mov
push
mov
sub
test
cmp
pushl
stos
mov
push
rolb
lret
dec
xchg
push
adc
mov
and
mov
push
mov
sub
test
cmp
pushl
stos
mov
push
rolb
lret
dec
xchg
push
adc
mov
push
mov
pop
rorb
mov
pop
test
test
sar
rcrl
mov
mov
pop
dec
or
aad
aad
dec
or
aad
aad
rorb
mov
test
rcl
std
rcll
std
jb
or
rcl
inc
push
inc
add
and
out
fwait
adc
pop
mov
pop
mov
pop
mov
pop
test
sar
test
rcr
mov
mov
aad
in
std
jb
or
test
lret
or
out
and
jmp
lret
fidivl
into
mov
inc
mov
rcl
aad
lock
xor
add
lahf
pop
mov
pop
test
test
rcrl
sar
mov
mov
pop
mov
pop
test
cmp
jb
rcll
cmp
dec
or
and
in
xor
in
mov
std
ret
inc
rorb
mov
sub
test
fcmovnb
jecxz
mov
fbstp
test
shl
mov
fbstp
test
jb
jecxz
mov
fbstp
test
test
rcr
sar
mov
fistpll
fnstcw
mov
mov
sub
test
shl
mov
fbstp
test
jb
jecxz
mov
fbstp
cmp
aaa
test
test
rcr
sar
mov
fistpll
fnstcw
rorb
xlat
pop
test
test
sar
rcr
mov
xchg
dec
test
stos
jae
cmp
test
test
sar
rcr
mov
xchg
or
test
jo
cmp
dec
or
sbb
adc
mov
aad
lea
icebp
inc
leave
mov
pop
mov
pop
rorl
popa
mov
das
mov
das
rorl
cmp
dec
data16
cmp
out
outsb
cmp
cmp
pop
or
cmp
fnstcw
call
cmp
cmp
call
cmp
dec
mov
push
out
repz
lea
cmp
rorb
mov
sub
mov
sbb
cmp
cmp
pushl
into
fbstp
test
jb
jecxz
mov
cmp
data16
inc
roll
and
shll
and
popa
cmp
mov
inc
call
loope
fidivrl
pushl
into
fbstp
test
jb
jecxz
mov
fistpll
call
mov
std
rorb
mov
aaa
rorb
add
rcr
sar
mov
fbstp
test
jb
jecxz
mov
fistpll
call
mov
and
or
mov
push
dec
or
and
dec
or
sub
mov
addr16
test
sar
rcr
mov
rorb
mov
addr16
addr16
test
sar
rcr
mov
rorb
dec
or
xchg
mov
or
mov
addr16
test
rcr
sar
mov
mov
xor
cmp
cmp
cmp
mov
cmp
cmp
jb
push
mov
xor
xchg
fstpl
or
mov
std
mov
std
test
test
rcr
sar
mov
mov
xchg
push
sbb
or
mov
std
test
test
sar
rcr
mov
rorb
mov
in
xlat
in
in
or
std
jb
fidivrl
shll
or
mov
addr16
addr16
test
rcr
sar
mov
mov
xchg
push
test
stos
cmp
cmp
mov
cmp
or
dec
or
and
cmp
rorb
pushf
xor
das
sbb
mov
aaa
mov
aaa
test
test
sar
rcr
mov
rorb
mov
fimull
popa
cmp
mov
dec
or
cmp
cmp
pushf
xor
dec
or
pushf
xor
mov
mov
fidivs
or
std
jb
fidivrl
shll
xlat
aas
push
sti
mov
mov
fidivs
in
fidivrl
std
jb
shll
xlat
aad
cmpsl
aad
mov
jecxz
mov
lret
xlat
aas
test
dec
sub
mov
sarl
cmp
test
test
sar
shl
mov
lret
fwait
xlat
sti
test
xlat
sti
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
aas
inc
add
or
mov
fiadds
jb
fidivrl
shll
xlat
aas
push
sti
mov
mov
fidivs
std
jb
or
fidivrl
shll
xlat
cmp
mov
jecxz
mov
lret
xlat
aas
test
dec
sub
mov
and
in
fcmovnb
std
jb
jecxz
mov
lret
fwait
xlat
sti
test
xlat
sti
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
aas
inc
add
or
mov
das
test
test
rcr
sar
mov
mov
cmp
mov
jecxz
mov
test
ror
xchg
or
mov
xchg
xor
or
mov
cmp
cmp
in
std
jb
shll
xlat
aaa
test
shll
cmp
shll
fcmovnb
jecxz
test
into
mov
in
mov
in
test
sar
test
rcrl
mov
lret
pusha
lret
shlb
or
mov
in
test
test
sar
rcr
mov
lret
rorb
mov
in
mov
in
test
sar
test
rcr
mov
mov
xor
or
mov
in
test
test
shl
sar
mov
mov
cmp
test
sbb
cmp
mov
sub
call
cmp
sub
mov
sub
cmp
mov
sub
cmp
cmp
and
call
cmp
rorb
mov
pop
mov
pop
test
jb
lea
shll
mov
sub
mov
sbb
cmp
cmp
pushl
into
fbstp
test
test
rcr
sar
mov
fistpll
call
repnz
adc
add
add
mov
mov
xor
cmp
cmpsb
cmp
cmp
xchg
test
cmp
cmp
or
pop
xchg
cmp
mov
inc
cmp
cmp
inc
test
push
cmp
cmp
inc
push
cmp
cmp
test
pop
cmp
cmp
jle
pop
pusha
cmp
cmp
out
sbb
mov
je
lret
mov
pop
test
and
pop
mov
cmp
pop
and
lea
cmp
mov
mov
imul
loope
fisubrs
mov
out
pop
sub
rcl
add
jns
xorl
test
popf
pop
test
out
dec
lret
je
popf
rcrb
mov
or
out
mov
pop
popa
outsb
leave
test
popf
pop
test
out
dec
cmp
out
and
lret
lahf
pop
adc
mov
lock
mov
add
or
out
sub
and
xlat
add
imul
mov
lea
mov
sbb
shrl
jmp
xlat
lea
sbb
cmp
xchg
test
add
inc
and
xchg
cmpsl
mov
mov
xor
cmp
je
insl
test
xor
cmp
xchg
xchg
out
jge
sbb
add
sbb
mov
outsb
mov
es
ds
lretw
lret
shr
and
and
adc
adc
sbb
in
mov
lock
hlt
pop
jle
mov
or
out
lret
rcrb
repz
dec
mov
pop
lret
and
sub
shlb
pop
out
mov
pop
movsb
rclb
pop
xchg
adc
adc
repnz
adc
add
add
psrld
rorb
dec
or
sub
mov
and
ret
sbb
mov
fidivrl
test
shll
or
xlat
lea
mov
and
mov
and
mov
and
aam
enter
and
mov
arpl
fidivrl
or
popa
cmp
xchg
mov
pop
sub
cmp
mov
and
sti
rcr
shll
or
cmp
mov
and
cmp
mov
and
sti
shl
shll
fistl
cmp
lret
rcl
fidivs
test
shl
shll
fcmovnbe
cmpsl
sbb
outsl
mov
and
in
pushl
lea
stos
mov
sbb
push
call
mov
and
jb
lea
stos
mov
sbb
push
repz
adc
cmp
mov
and
icebp
sar
roll
mov
mov
sbb
mov
repz
rcl
std
mov
and
jmp
fidivrl
pushl
into
mov
and
xlat
in
sub
xlat
pop
mov
and
jb
jecxz
mov
mov
pop
xchg
into
out
lret
rcl
in
xlat
and
jmp
fidivrl
pushl
into
lret
dec
or
or
rcl
add
lret
add
popa
cmp
fistpll
repz
dec
cmp
add
cmp
dec
dec
or
mov
add
sbb
and
jmp
fidivrl
pushl
into
rorb
xchg
push
call
mov
pop
test
test
sar
rorl
iret
mov
iret
test
test
in
mov
dec
mov
sbb
cmp
fidivrl
pusha
test
fneni(8087
cmp
es
and
ljmp
mov
xchg
or
call
mov
in
test
test
rorl
push
xchg
out
test
movsl
cmp
cmp
test
test
rorl
rcll
pop
mov
pop
test
test
rorl
shll
popa
cmp
dec
or
xor
add
dec
or
aam
inc
cmp
or
test
test
add
std
jb
in
fisubrl
cmp
test
test
rorl
rcl
add
test
test
rorl
rcl
imul
mov
fidivrl
push
mov
in
push
out
mov
sub
or
mov
sub
or
mov
and
jb
lea
shll
mov
and
in
jb
lea
shll
shl
mov
add
popa
cmp
test
adc
cmp
pop
cmp
sub
insl
mov
imul
sub
popa
cmp
out
cmp
cmp
pop
cmp
sub
or
mov
and
ljmp
mov
mov
imul
pop
call
ljmp
mov
popa
or
add
ljmp
lea
shll
xlat
std
rolb
mov
pop
test
test
rorl
ror
mov
and
in
jb
lea
shll
or
cmp
mov
sbb
jb
dec
pop
add
shll
inc
fcmove
and
cmp
test
test
rorl
sarl
call
mov
pop
add
mov
and
in
sar
rorl
adc
add
add
dec
or
and
sub
rorb
shlb
cmpsl
and
ss
test
and
loope
pushl
lea
stos
mov
sub
cmp
mov
sub
loop
cmpsl
imul
or
mov
pop
test
sar
test
rorl
and
roll
shl
mov
mov
imul
sbb
cmp
mov
imul
cmp
mov
sub
mov
and
mov
and
cmp
arpl
and
cmpsl
iret
xchg
jmp
pop
js
cmp
mov
and
ss
roll
mov
shlb
sbb
mov
and
cmp
push
jb
jmp
sbb
cmp
mov
and
test
mov
jecxz
mov
pop
mov
loope
out
cmp
cmp
pop
fldcw
shr
pop
test
insb
mov
cmp
cmpsl
add
call
jecxz
rorl
insb
shl
mov
inc
shr
add
cmpsl
lea
test
pop
ss
rorl
sub
cmpsl
add
test
pop
rorl
loope
call
jp
cmpsl
dec
mov
dec
test
pop
rorl
loope
call
sub
popa
dec
out
cmp
xlat
pop
test
cwtl
cmp
cmp
sbb
test
pop
rorl
loope
call
xchg
out
pop
mov
mov
and
jecxz
rorl
mov
add
add
mov
std
test
mov
std
out
repnz
or
test
mov
and
lea
shll
sub
cmpsl
mov
mov
cmp
and
pushf
xor
pop
sub
mov
and
loop
ss
pushf
xor
rorl
jb
rcl
std
mov
and
lea
into
sar
mov
rorb
mov
outsb
mov
add
or
mov
xor
imul
imul
inc
mov
sbb
or
mov
xor
pop
mov
pop
test
rorb
mov
daa
inc
dec
or
mov
inc
mov
sub
inc
test
jns
cmp
mov
dec
or
pop
adc
or
or
pop
push
jae
cmp
mov
sub
lea
icebp
scas
cmp
mov
popa
jae
cmp
test
rorl
jb
rcl
fidivs
mov
sub
mov
fnop
xlat
outsb
or
pop
ljmp
and
lfs
in
in
pop
rorl
in
rclb
in
or
mov
and
mov
mov
scas
lret
or
mov
and
mov
shlb
xorb
cmp
pop
cmpsl
std
loopne
cmpsl
imul
cmp
pushl
pusha
mov
dec
loopne
cltd
cmp
outsb
mov
dec
mov
movsl
mov
fnstenv
lret
int3
mov
cmp
popa
cmp
shlb
cltd
movsl
cmp
sub
lea
cmp
mov
scas
lret
mov
repz
mov
and
sbb
sar
rorl
sub
shlb
pop
push
cmp
cmp
test
out
ss
rorl
iret
mov
pop
mov
pop
out
ss
sar
rorl
sub
je
jge
iret
test
mov
xlat
out
sub
xlat
data16
mov
data16
cmpsb
mov
rorb
int
fisubs
or
add
stos
fnstenv
in
cmp
mov
data16
sub
xlat
in
mov
and
push
ss
sar
mov
jge
in
out
mov
sub
and
mov
add
lea
or
mov
pop
mov
pop
test
push
ss
test
popa
xlat
iret
mov
outsb
rorb
mov
pop
mov
pop
out
ss
sar
rorl
outsb
test
push
divb
xlat
iret
test
cmp
cmp
xchg
callw
xlat
sbb
pop
cmpsl
std
loopne
cmpsl
sbb
fidivrl
pushl
pusha
mov
dec
loopne
cltd
movsl
outsb
or
pop
jmp
cmp
mov
outsb
mov
in
popa
cmp
mov
mov
test
fidivrl
std
jb
push
test
xchg
popa
cmp
mov
and
sbb
rorl
rcl
lea
pop
and
rcl
aas
dec
or
stos
sbb
inc
dec
or
inc
sbb
inc
rorb
dec
or
and
movsl
pop
aaa
shl
mov
cmp
cmp
cmp
cmc
mov
rorb
movsl
cmp
cmp
or
or
rorb
pop
addl
inc
dec
or
cmp
cmp
sbb
inc
rcrb
cmp
cmp
sub
or
cmp
cmp
sbb
inc
dec
or
cmp
cmp
or
cmp
cmp
sbb
inc
dec
or
cmp
cmp
or
cmp
cmp
xor
sbb
or
cmp
cmp
inc
shlb
in
xor
inc
dec
or
sub
xor
sub
sbb
inc
dec
or
and
push
or
cmp
cmp
fidivrl
sbb
inc
push
jae
cmp
cmp
out
insb
adc
cmp
pop
pop
sarl
cmp
fistpll
flds
cmp
pop
sub
cmp
cmp
fnstcw
fildll
rorb
pop
or
fnstenv
cmp
mov
push
cmp
mov
and
sbb
rorl
rcl
mov
and
sbb
sar
rcr
mov
mov
lea
xchg
test
cmp
mov
lea
data16
das
popa
cmp
xchg
pop
call
popa
cmp
mov
xchg
pop
call
popa
cmp
mov
dec
mov
test
mov
pop
mov
pop
test
out
rorl
rcl
mov
outsb
loop
lea
cmp
or
pop
loope
cmp
cmp
outsb
mov
jge
or
pop
xchg
cmp
cmp
fisttpl
or
pop
mov
jge
or
pop
xor
cmp
mov
das
popa
cmp
xchg
callw
int3
sbb
cmp
std
fistpll
call
cmp
outsb
mov
in
popa
cmp
mov
mov
out
ss
sar
rorl
dec
or
and
xor
sub
rcr
mov
cmp
add
mov
jbe
xchg
rolb
dec
cmp
cmp
cmp
mov
repz
jbe
subl
xlat
jbe
orl
mov
divl
cmpl
jbe
dec
or
popa
cmp
cmp
lahf
fidivrs
call
xchg
xchg
add
inc
repnz
stos
outsb
cmp
fcomip
test
cmpl
pop
shrl
or
dec
pop
outsb
jns
adc
adc
in
sub
out
lret
adc
adc
inc
testl
repnz
adc
add
add
and
dec
or
sub
adc
sbb
inc
dec
or
sub
xor
fisubrs
sbb
inc
psrld
in
add
xor
lea
std
mov
imul
popa
test
test
rorl
loope
call
pop
in
cmp
mov
imul
rorl
loope
call
pop
mov
cmp
mov
imul
shl
rorl
in
cmpsl
imul
shl
rorl
fidivs
mov
iret
mov
pop
rcll
mov
rcrl
test
test
lahf
pop
fiaddl
cmp
cmp
mov
push
cmp
push
mov
es
cmp
mov
imul
roll
rcll
mov
mov
dec
xchg
ss
mov
sub
popf
mov
mov
iret
mov
iret
mov
push
cmp
push
mov
mov
in
mov
in
mov
push
cmp
push
mov
test
call
pop
lret
shr
sub
mov
push
cmp
push
mov
mov
in
mov
in
mov
push
cmp
push
mov
test
call
pop
lret
shr
and
mov
sub
inc
popa
cmp
mov
sbb
push
cmp
and
push
jb
call
mov
sbb
and
push
cmp
push
jb
call
mov
in
lahf
lea
shr
sub
mov
shr
and
mov
push
cmp
push
mov
cmp
mov
add
hlt
rorl
loope
call
shlb
cmpsl
imul
shl
rorl
add
cmpsl
add
shl
rorl
shlb
mov
faddp
jecxz
rorl
shlb
mov
pop
mov
sbb
mov
mov
mov
sbb
mov
mov
test
test
pushl
push
cmp
loope
call
test
roll
test
push
cmp
std
test
jle
mov
pop
mov
pop
test
test
sbb
pushl
jmp
lahf
sbb
hlt
rcrl
shll
and
lea
mov
cmp
sbb
loope
lfs
mov
sbb
mov
pop
mov
pop
test
fcmovnb
push
cmp
pushl
loope
call
test
and
push
cmp
push
jb
lea
cmp
fidivs
push
mov
imul
mov
add
or
sar
rorl
adc
add
add
mov
mov
mov
cmp
mov
or
or
xchg
shlb
xor
pusha
test
daa
cmp
cmp
and
ficomps
popa
add
mov
pop
mov
stos
mov
mov
cmp
rcrb
push
ss
mov
and
sbb
shl
mov
push
pop
scas
mov
mov
mov
inc
shlb
cmpsl
and
cmp
push
ss
mov
and
fnstcw
dec
mov
call
xchg
mov
xchg
out
mov
test
out
ss
sar
mov
pop
rcr
cmp
and
xchg
cmpsl
mov
shl
inc
and
or
xchg
mov
lea
cmp
and
out
sbb
and
test
pop
cmp
cmp
and
mov
pop
shlb
mov
sarl
test
out
aaa
mov
rcrb
sbb
sar
mov
and
sbb
rcr
mov
push
pop
scas
mov
mov
test
mov
test
rcl
and
xchg
and
ljmp
mov
and
and
out
hlt
lds
and
call
xchg
mov
xchg
out
mov
test
out
rcll
sar
mov
test
mov
and
xchg
cmpsl
mov
out
dec
psrad
imul
nop
xchg
shlb
xor
cmp
mov
stos
mov
mov
pusha
test
out
cmp
out
and
mov
add
mov
pop
mov
stos
mov
mov
cmp
rcrb
push
ss
mov
and
sbb
shl
mov
push
pop
scas
mov
mov
mov
inc
shlb
pushf
xor
and
cmp
push
ss
mov
and
fnstcw
dec
mov
call
or
xchg
out
test
add
inc
repnz
adc
in
shl
test
xchg
mov
inc
mov
mov
shr
and
je
mov
cmp
mov
mov
into
mov
test
mov
and
adc
add
dec
or
mov
cmp
dec
or
lret
cmp
std
clc
cmp
dec
or
xchg
repz
pop
cld
cmp
dec
or
inc
mov
cmp
in
dec
cmp
dec
or
lret
cmp
sarl
mov
cmp
dec
or
pop
cmp
mov
and
je
mov
pop
test
mov
mov
cmp
cmp
cmp
cmp
imul
cmp
dec
or
pushf
out
cmp
pop
inc
repz
mov
pop
mov
and
test
pusha
lret
dec
cmp
je
shlb
lret
mov
and
cmpsl
dec
push
or
mov
add
test
stos
mov
je
mov
pop
lret
adc
cmp
cmpsl
std
mov
iret
mov
repz
in
mov
cmp
or
mov
cmp
xchg
fstp
mov
fmulp
lahf
insl
cmp
fs
mov
je
mov
cmp
cmp
repnz
stos
dec
cmp
scas
dec
or
cmp
cmp
imul
cmp
pop
pushf
cld
cmp
dec
or
mov
pop
xchg
movsb
cmp
dec
or
dec
call
add
xchg
jb
cmp
push
movsb
fistpll
cmp
jo
cmp
dec
or
popa
fistpll
cmp
in
out
cmp
dec
or
loopne
cmp
dec
or
push
adc
pop
pop
cmp
cmp
shlb
cmp
mov
cmp
int
cmp
xchg
dec
or
jbe
cmp
pop
push
dec
cmp
mov
pop
mov
std
jae
jl
cmp
cmp
lahf
sub
xor
cmp
shlb
mov
in
pop
jecxz
cmpsl
in
stos
mov
std
jle
inc
add
mov
test
stos
mov
push
test
stos
mov
xchg
xchg
sub
and
fs
mov
imul
stos
lret
test
cmp
or
ja
ja
cmp
cmp
cmp
hlt
mov
lea
push
cmp
xchg
dec
test
cmp
and
adc
add
cmp
and
pushf
xor
or
sub
mov
and
inc
pushf
xor
repnz
sar
rorl
sub
xlat
and
pop
test
test
rorl
rcr
cmp
cmp
jb
lea
shll
mov
and
or
cmp
or
mov
dec
rorb
mov
and
ljmp
mov
rorb
mov
dec
jge
mov
mov
sub
or
out
sub
or
mov
sbb
cmp
rorb
mov
repz
pop
lea
cmp
mov
and
ljmp
mov
xchg
xchg
call
faddl
imul
sar
rorl
call
lea
xlat
and
jmp
fidivrl
pushl
into
xchg
shl
mov
dec
mov
rorb
mov
sub
xchg
push
test
mov
or
mov
and
cmp
jb
rcll
cmp
add
mov
out
repz
psrad
sub
cmp
cmp
test
shlb
sbb
xlat
and
xlat
sbb
mov
mov
dec
or
add
cmp
mov
mov
pusha
dec
mov
xlat
pop
pop
dec
sub
jge
cmp
jl
mov
mov
test
xlat
and
cmp
test
adc
mov
mov
push
mov
push
dec
or
repz
cmp
or
mov
mov
pusha
adc
inc
add
or
dec
or
pop
cmp
cmp
adc
test
cmpsb
dec
jo
jnp
or
out
imul
or
cmp
test
xchg
adc
sbb
push
test
xchg
mov
daa
inc
add
add
psrld
mov
mov
cmp
pop
jge
call
and
cmp
ret
call
cmp
pop
dec
jp
or
pop
dec
rcl
or
pop
dec
mov
int3
inc
cmp
cmp
or
pop
int3
inc
cmp
cmp
or
pop
int3
cmp
cmp
or
pop
int3
push
cmp
cmp
or
pop
int3
repz
cmp
rorb
pop
int3
dec
popa
cmp
rorb
pop
int3
movsl
popa
cmp
rorb
mov
aas
popa
cmp
loop
lahf
xor
fnstenv
cmp
lea
xor
cmp
call
shr
std
shr
pop
dec
or
xchg
and
mov
rcl
in
lahf
fidivs
in
call
mov
test
test
test
icebp
cmp
push
jb
fnstsw
cmp
inc
roll
mov
mov
mov
test
out
cmp
cmp
imul
mov
adc
pop
or
mov
fidivs
mov
in
out
test
sar
lret
cmp
cmp
pop
roll
mov
mov
out
cmp
fidivrs
shr
or
mov
in
mov
iret
out
mov
or
xor
rorb
std
adc
gs
mov
imul
std
movsb
push
adc
mov
mov
mov
fidivs
mov
in
inc
and
lea
pop
mov
roll
mov
test
sbb
call
mov
in
lahf
fidivs
xchg
mov
inc
mov
inc
roll
mov
mov
mov
test
or
cmp
mov
pop
or
pop
mov
cmp
mov
scas
mov
add
es
outsb
mov
jbe
repnz
or
mov
ds
loope
xlat
shlb
xchg
xchg
pushf
lret
imul
imul
mov
in
mov
data16
mov
mov
lods
lret
icebp
mov
sub
call
je
sub
or
shr
dec
or
mov
cmp
mov
and
mov
call
mov
add
mov
add
jae
or
shlb
or
out
and
pusha
mov
iret
mov
pop
add
or
xchg
or
adc
in
and
adc
add
sbb
cmp
aad
cmp
mov
sub
mov
shlb
testb
shll
lods
sub
shlb
cmp
pop
test
pusha
adc
cmp
in
test
pop
mov
test
mov
sub
xchg
loop
pop
mov
sub
push
test
add
sbb
and
out
sub
mov
push
and
call
mov
sub
dec
repnz
cmpsl
mov
out
ds
sub
sbb
pushf
xor
and
pushf
xor
psrld
or
dec
or
lock
xor
or
out
mov
and
pushf
xor
ljmp
push
cmp
sbb
xlat
sbb
jmp
fidivrl
pushl
into
test
sbb
push
cmp
cmp
test
sar
test
fidivrl
into
mov
and
sti
shl
shll
fisttpl
into
mov
pop
mov
pop
out
test
sar
test
shl
mov
mov
and
sti
rcr
shll
or
jecxz
xlat
add
sti
rcr
shll
or
sar
test
shl
mov
mov
and
sti
rcr
shll
or
jecxz
cmpsl
pop
mov
and
jmp
fidivrl
pushl
into
lret
xlat
imul
sar
rcr
mov
mov
and
sti
shll
jecxz
mov
je
xchg
sbb
mov
cmp
repnz
popa
mov
pop
xchg
adc
add
add
psrld
pop
and
imul
xor
pop
mov
pop
ret
pushf
xor
out
test
pushl
lea
stos
mov
sub
cmpsl
pop
test
lret
lret
test
pusha
sar
rorl
dec
xchg
fisubrs
cmp
mov
dec
mov
sub
fdivrp
int3
movsl
lods
test
sar
inc
xor
call
dec
pop
movsl
lods
shr
dec
or
repnz
movsl
lods
shr
xchg
xchg
pop
movsl
lods
test
rcl
std
shr
pop
rorb
cmpsl
iret
mov
mov
dec
test
in
cmp
lods
frstor
mov
andl
or
cmp
mov
rol
cmp
mov
and
cmp
mov
mov
dec
mov
mov
sub
mov
stos
mov
test
stos
mov
mov
cmpsl
pop
mov
add
cmp
mov
std
out
std
cmp
call
jmp
shl
mov
pop
test
or
mov
adc
iret
mov
in
mov
iret
test
xlat
std
test
test
pop
cmp
std
jb
cmp
cmp
add
into
mov
test
arpl
cmp
sub
cmp
mov
sbb
leave
push
push
in
cmp
or
pop
in
mov
test
or
push
push
test
cmpsl
and
test
stos
cmp
cmp
inc
and
or
in
ret
mul
or
inc
push
ret
sbb
pop
jecxz
cmpsl
and
popa
cmp
out
add
test
out
cmp
dec
or
loop
cmp
dec
or
iret
int
cmp
repz
idivb
cmp
sub
cmp
mov
sub
cmpsl
pop
lret
jle
cmp
test
stos
mov
pop
test
stos
subl
cmp
rorb
dec
or
mov
cmp
dec
or
in
cmp
dec
or
sbb
sub
cmp
test
stos
mov
pop
je
mov
pop
subl
cmp
cmp
and
xlat
test
daa
cmp
cmp
or
add
or
mul
or
sub
xlat
ret
es
push
cmp
push
inc
lods
test
adc
bound
cmp
or
jbe
or
mov
or
pop
push
ret
jle
clc
shrl
test
inc
test
adc
cmp
or
mov
in
aaa
push
cmp
fidivrl
xlat
fidivs
xchg
push
stos
testl
xlat
push
mov
test
sarl
cmp
or
mov
and
dec
xchg
sar
push
xchg
push
inc
or
push
mov
inc
mov
xchg
fidivrl
xlat
inc
mov
xchg
inc
jno
adc
lret
or
sar
mov
iret
mov
in
mov
iret
mov
lods
test
test
pop
cmp
std
jb
adc
cmp
cmp
add
into
mov
test
ja
cmp
test
jo
cmp
rol
xor
imul
rorl
roll
mov
pop
mov
pop
test
dec
sar
rorl
xchg
adc
add
cmp
sarb
rclb
sbb
and
pushf
xor
add
mov
pop
or
xchg
mov
sbb
pop
mov
test
rorl
rcl
pop
dec
or
lock
xor
in
out
dec
or
sub
cmp
mov
mov
and
jb
in
lea
shll
mov
pushl
into
test
roll
mov
imul
cmp
roll
pop
rorb
mov
pop
mov
imul
pop
in
and
cmp
test
test
rorl
ror
imul
imul
ljmp
lea
shll
mov
pushl
into
je
mov
imul
mov
pop
test
test
rorl
rcl
pop
dec
or
mov
xor
fisubl
cmp
cmp
test
std
jb
mov
fidivrl
push
mov
pop
fisttpl
or
push
push
pop
test
inc
test
rorb
mov
add
lea
ljmp
xlat
imul
or
and
cmp
or
mov
and
ljmp
mov
popa
or
mov
and
ljmp
mov
push
or
mov
sbb
in
jb
lea
shll
lcall
mov
pop
test
test
sar
rorl
xlat
pop
and
rcll
mov
out
out
or
and
xor
pop
mov
rorb
mov
ds
xor
cmp
shlb
popa
cmp
mov
lret
xlat
pop
mov
and
ss
and
dec
rorl
jb
rcl
in
mov
and
lea
or
jb
rcl
std
mov
pop
mov
lea
or
mov
pop
mov
cmpsb
mov
pop
and
or
out
mov
cmpsb
mov
pop
mov
movsl
and
mov
pop
mov
cmpsb
lret
lret
movsl
rorb
xlat
and
cmp
jb
rcl
ds
and
or
jb
lea
rcl
ds
and
dec
sar
rorl
repz
cmpsl
ds
or
adc
sbb
ret
inc
fcmove
idivb
cmp
test
or
lea
jb
rcl
std
mov
lret
rorb
call
lea
jecxz
cmp
or
dec
or
lock
xor
iret
mov
iret
test
or
lea
jb
rcr
or
mov
or
out
mov
iret
mov
iret
test
or
lea
jb
rcr
call
mov
in
rorb
mov
iret
mov
dec
je
rorb
mov
ds
ds
repz
mov
iret
xchg
push
adc
or
mov
dec
mov
ds
mov
iret
je
ficompl
and
dec
or
sub
adc
sbb
rorb
pop
or
rorb
pop
or
rorb
pop
or
rorb
mov
and
or
lea
jb
rcl
iret
fcmove
lret
mov
inc
test
dec
lret
ret
call
mov
pop
mov
pop
test
or
jb
lea
rcl
std
shr
in
lahf
in
or
rorl
jb
sbb
call
mov
pop
test
sar
test
lea
shll
ljmp
pushl
into
lret
xlat
iret
shr
aas
xchg
push
call
mov
pop
test
or
lea
jb
rcr
dec
pop
or
mov
and
or
jb
lea
shll
mov
and
or
lea
jb
rcr
dec
pop
or
mov
imul
test
test
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
sbb
cmp
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
ds
ds
mov
test
test
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
add
cmp
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
sbb
cmp
dec
rorl
jae
mov
imul
test
rcr
test
sar
mov
push
shll
ds
test
rcr
test
sar
mov
push
shll
imul
fidivrl
pushl
into
push
push
test
xor
or
mov
ds
mov
test
sar
test
lea
shrl
aad
xlat
sbb
add
ljmp
pushl
into
push
shll
add
cmp
fcmovnb
pushl
into
push
shll
sbb
rcr
sar
mov
push
push
test
imul
cmp
mov
mov
test
sar
test
lea
shrl
aad
xlat
ds
mov
ds
test
rcr
test
sar
mov
push
shll
imul
test
sar
mov
push
shll
ds
test
test
rcr
sar
mov
push
push
test
and
cmp
mov
add
cmp
dec
rorl
jae
mov
imul
test
rcr
test
sar
mov
push
shll
sbb
cmp
fcmovnb
pushl
into
push
shll
add
rcr
sar
mov
push
push
call
mov
cmp
and
dec
sar
rorl
std
mov
pop
mov
pop
mov
pop
mov
pop
test
test
std
jb
sbb
call
test
out
and
std
and
push
jb
push
mov
mov
inc
mov
and
dec
sar
rorl
std
xchg
push
test
insl
and
cmp
test
or
jb
lea
shll
mov
pop
mov
pop
test
or
lea
jb
rcr
popa
cmp
ret
sarb
call
mov
and
or
jb
lea
shll
mov
pop
mov
pop
test
or
jb
lea
shll
mov
pop
mov
pop
test
or
lea
jb
rcr
pop
or
mov
and
or
lea
jb
rcr
pop
or
mov
in
lret
or
cmp
inc
cmp
ds
xor
or
mov
and
or
jb
lea
shll
mov
pop
mov
pop
test
or
jb
lea
shll
mov
pop
mov
pop
test
lea
or
jb
rcr
call
lret
mov
and
lea
or
jb
rcr
call
lret
mov
repz
inc
popa
sub
rorb
xlat
pop
test
sar
test
lea
shll
xlat
and
fcmovnb
fidivrl
pushl
into
lret
xchg
shrl
mov
sub
and
adc
add
add
mov
es
xor
cmp
or
mov
sub
mov
dec
mov
test
sub
sti
cmp
or
rol
jb
pop
cmp
jns
imul
add
and
xchg
hlt
call
ss
mov
jmp
fiaddl
cmp
mov
sub
mov
dec
test
test
shr
imul
imul
imul
mov
imul
push
rclb
sbb
xchg
fucom
push
call
cmp
jbe
call
into
fnstsw
cmp
neg
inc
cmp
cmp
mov
sub
cmp
call
test
mov
mov
sbb
mov
roll
rorl
jb
push
mov
repz
mov
mov
sub
lods
test
in
cmp
xchg
roll
mov
mov
xchg
xchg
inc
xchg
sbb
add
push
inc
sub
push
cmp
inc
sub
sub
mov
dec
mov
sub
movsl
lods
test
ss
adc
std
jb
xchg
test
lret
cmp
cmp
sbb
mov
call
dec
mov
mov
add
orl
mov
repnz
adc
add
add
or
mov
dec
test
push
cmp
fidivrl
xlat
sub
jb
xlat
inc
inc
jno
adc
mov
shlb
or
mov
inc
popa
cmp
mov
mov
outsb
mov
inc
popa
cmp
mov
lret
mov
outsb
mov
sbb
cmp
cmp
cmp
cmp
fchs
cmp
leave
mov
sub
cmp
fidivrl
xlat
sub
test
test
and
and
loop
call
cmp
ds
repz
dec
cmp
sub
mov
sub
cmp
fidivrl
xlat
sub
xchg
sar
mov
mov
xchg
push
out
mov
repz
ds
push
cmp
fidivrl
xlat
repz
ds
test
xlat
data16
test
or
shlb
adc
add
psrld
cmp
loop
lahf
outsb
mov
xchg
ficomps
lods
adc
xchg
hlt
call
pop
stos
cmp
cmp
lods
call
pop
insl
cmp
cmp
lods
call
pop
in
cmp
cmp
lods
call
pop
bound
cmp
lods
call
pop
cmp
ss
movsl
lods
test
mov
cmp
xchg
fisubrs
cmp
daa
cmp
cmp
lods
call
pop
and
cmp
mov
lods
call
xlat
mov
lods
call
andl
call
pop
sub
mov
or
cmp
cmp
cmp
cmp
call
cmp
ds
repz
dec
cmp
sub
fidivl
cmp
mov
sub
fstl
aaa
sti
cmp
pushl
pop
roll
test
fnsave
adc
mov
mov
shr
repz
mov
stc
mov
repz
ds
sub
mov
dec
mov
sub
or
mov
lods
test
sti
cmp
add
std
jb
rol
jb
pusha
mov
test
fnsave
mov
mov
sub
movsl
lods
test
out
cmp
cmp
mov
lret
fidivs
mov
divl
pop
movsl
lods
mov
sub
test
sar
mov
roll
lret
cmp
cmp
xchg
lret
xlat
sub
mov
ds
fsubp
and
push
and
lods
mov
lods
shl
test
pop
xor
hlt
xor
ljmp
cmp
mov
sub
fstl
aaa
sti
cmp
pushl
pop
roll
test
fnsave
adc
ffree
fcmovnbe
call
mov
sub
mov
dec
test
mov
lods
test
sti
cmp
pushl
pop
test
add
fnsave
insl
cmpsl
ds
divl
mov
ds
repz
ds
repz
ds
mov
mull
lods
test
sti
cmp
pushl
pusha
roll
test
fnsave
std
jb
shll
sbb
pop
movsl
lods
mov
sub
test
mov
mov
repz
mov
lret
call
and
jecxz
test
sbb
pop
movsl
lods
mov
sub
adc
out
and
lods
mov
sub
outsb
ret
hlt
mov
lret
xor
mov
mov
lods
loopne
call
loop
call
cmp
repz
dec
cmp
sub
ror
mov
repnz
adc
add
add
mov
rcl
sbb
rorb
dec
or
repnz
movsl
lods
rorb
mov
sbb
push
cmp
push
cmp
call
fldenv
adc
jmp
cmpsl
and
cmp
dec
pop
or
cmp
sub
mov
cmp
dec
cmp
add
call
cmp
sbb
repnz
mov
and
stos
sub
cmpsl
mov
mov
cmp
test
or
pusha
xchg
fcmovne
dec
or
adc
sti
in
dec
or
out
pop
dec
inc
dec
or
dec
cmp
mov
gs
dec
or
mov
mov
mov
mov
test
mov
sarb
mov
or
int3
and
out
pop
sub
or
jmp
or
inc
shrl
fmuls
push
adc
dec
test
fwait
shll
out
lds
cmp
cmp
cmp
push
cmpsb
cmp
cmp
out
add
iret
test
jge
sub
cmp
push
call
mov
fwait
inc
test
pop
jae
cmp
cmp
xchg
mul
cmp
fwait
xchg
test
daa
jnp
cmp
cmp
cmpsl
cmp
and
cmp
mov
fwait
xchg
test
aas
jnp
cmp
cmp
xchg
add
test
xchg
test
daa
jnp
cmp
cmp
std
test
cmp
lret
std
test
xchg
call
lahf
dec
mov
shl
inc
ds
xchg
call
faddp
jecxz
inc
ds
xchg
call
jmp
add
sub
cmp
and
stos
dec
cmp
jg
popa
mov
pop
popa
ss
popa
mov
lea
inc
lret
xchg
cmpsl
mov
mov
cmp
mov
shl
dec
or
repnz
movsl
lods
rcl
pop
dec
or
xchg
pop
movsl
lods
rcl
sbb
pushf
xor
and
pushf
xor
fimuls
pop
movsl
lods
rcl
in
or
loop
movsl
lods
rcl
aas
mov
add
cmp
jecxz
mov
add
rolb
adc
mov
rorb
pop
or
rorb
mov
inc
pushf
xor
push
pop
movsl
lods
shlb
mov
and
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
rcrb
cmp
cmp
test
test
fidivrl
into
mov
lea
in
shl
shll
fcmovnbe
push
sub
cmp
cmp
cmpsl
and
test
test
shl
shll
fcmovnbe
push
sub
cmp
cmp
test
test
fidivrl
into
mov
and
or
test
shl
shll
lea
hlt
shll
xchg
lret
or
rclb
out
cmp
mov
ds
ss
test
rorl
and
test
fidivrl
into
mov
and
hlt
ss
shll
fcmovne
into
mov
and
hlt
shll
jecxz
mov
lret
pop
pop
out
cmp
pop
or
cmp
cmp
mov
and
test
test
rorl
rcr
or
pop
inc
inc
cmp
cmp
mov
aad
cmp
cmp
cmp
shlb
or
mov
pop
test
push
cmp
fidivrl
xlat
std
mov
pop
test
xchg
mov
loopne
call
cmp
stc
lea
or
mov
pop
test
push
cmp
fidivrl
xlat
std
mov
pop
test
xchg
mov
loopne
call
cmp
testl
xlat
and
in
lea
shll
mov
fidivrl
fcmovnb
pushl
into
lret
xlat
and
fidivrl
fcmovnb
pushl
into
lret
xlat
and
fidivrl
fcmovnb
pushl
into
lret
or
cmp
cmp
xlat
lea
fcmovnb
fidivrl
pushl
into
rolb
pop
out
cmp
mov
dec
mov
mov
and
fidivrl
add
test
sar
mov
rolb
pop
out
cmp
mov
data16
data16
sar
test
rorl
and
mov
pushl
fidivrl
into
mov
and
jecxz
out
shll
fcmovne
into
rolb
pop
out
cmp
mov
and
sar
test
rorl
and
test
fidivrl
into
lret
xlat
and
test
fidivrl
into
pop
sub
cmp
cmp
mov
and
loope
xlat
iret
rclb
out
cmp
mov
jbe
hlt
ss
shll
fistpl
push
cmp
cmp
loopne
cmp
cmp
xor
xlat
sbb
fidivrl
pusha
mov
mov
add
ljmp
mov
mov
xchg
sub
mov
jle
jle
cmp
adc
push
sub
test
push
cmp
fidivrl
xlat
imul
sar
mov
repz
lret
or
mov
xchg
push
fnop
xlat
repz
divb
mov
mov
lret
shlb
data16
lret
cmp
cmp
xlat
repz
mov
add
adc
shlb
lret
mov
add
xlat
mov
sbb
fidivrl
xlat
add
dec
sar
mov
rorb
mov
repz
popa
cmp
mov
add
cmp
fidivrl
xlat
add
mov
test
dec
out
pop
mov
pusha
ficoml
cmp
mov
repz
movsb
sub
adc
rcl
divl
test
sarl
cmp
or
mov
in
std
jb
or
test
test
or
cmp
or
mov
imul
out
push
roll
mov
pop
test
adc
jle
adc
xlat
pop
test
or
std
jb
or
rcr
mov
pop
test
sar
mov
jle
sti
mov
mov
es
int
xchg
shll
or
test
sarl
cmp
or
mov
in
std
jb
or
test
cmp
sbb
test
or
rcll
test
mov
test
sarl
cmp
xchg
pop
movsl
lods
test
jg
pop
movsl
lods
call
jno
cmp
xlat
repz
xlat
jle
scas
sub
out
mov
mov
repz
xlat
sub
or
mov
popa
sub
or
cmp
xlat
imull
cmp
jae
xor
or
popa
or
dec
or
enter
rclb
xchg
test
push
cmp
fidivrl
xlat
inc
mov
xchg
jb
xlat
dec
mov
test
dec
mov
pop
rol
pop
mov
stc
xchg
sub
lret
rorb
mov
add
or
mov
sbb
fidivrl
xlat
add
dec
mov
sar
jge
ds
nop
cmp
mov
and
fidivrl
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
mov
and
in
shl
shll
fcmovne
into
rcrb
cmp
cmp
mov
lea
cmp
arpl
fcmovnbe
push
sub
cmp
cmp
cmpsl
and
test
test
shl
shll
fcmovnbe
push
sub
cmp
cmp
test
sar
test
into
mov
and
or
test
shll
jecxz
mov
mov
and
lea
arpl
xchg
lret
push
sub
cmp
cmp
test
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
pop
cmpsl
iret
shlb
pop
out
cmp
pop
pop
sbb
cmp
fbstp
test
faddp
fidivrl
pushl
into
fistps
push
cmp
cmp
mov
aad
cmp
cmp
cmp
popa
cmp
rorb
mov
sub
xlat
dec
mov
imul
shl
mov
imul
jb
cmpsl
imul
test
push
cmp
push
cmp
call
test
test
fcmovne
into
mov
imul
jb
call
cmp
push
cmp
call
test
test
fcmovne
into
mov
imul
jb
call
cmp
push
cmp
call
lahf
pop
test
mov
lret
fnstcw
call
cmc
pop
cmp
mov
repnz
adc
add
add
psrld
test
or
xchg
pop
movsl
lods
cmp
rorb
dec
or
repnz
movsl
lods
rorb
dec
or
and
and
xor
sbb
pushf
xor
sbb
pushf
xor
pop
and
rorb
mov
data16
inc
popa
cmp
mov
data16
data16
xor
cmp
scas
mov
in
mov
das
popa
cmp
rcrb
test
xchg
sbb
lahf
in
mov
iret
mov
adc
jb
jge
fistl
shlb
mov
repz
dec
pop
cmpsl
std
loopne
call
cmp
pop
or
cmp
sub
call
cmp
add
pop
or
rorb
mov
data16
outsb
rolb
dec
cmp
cmp
cmp
rolb
mov
outsb
rolb
mov
outsb
rolb
dec
add
cmp
cmp
insl
mov
data16
data16
xor
cmp
mov
je
rorb
mov
and
and
adc
add
popa
cmp
psrld
jg
pushf
xor
push
cmp
mov
repz
pushf
xor
inc
push
cmp
dec
or
xchg
pop
movsl
lods
cmp
rorb
dec
or
repnz
movsl
lods
rorb
or
mov
imul
cmp
inc
mov
cmp
mov
inc
xchg
sarl
mov
cmp
pop
sbb
pop
out
mov
mov
mov
stos
push
shlb
mov
mov
dec
ds
popf
push
mov
rorb
mov
mov
shrb
add
cmp
out
add
cmp
pop
sbbl
cmp
out
pop
mov
cmp
pop
xor
cmp
cmp
inc
icebp
mov
cmp
mov
cmp
mov
mov
cmp
mov
add
cmp
fidivrl
xlat
add
cmpsl
adc
sar
mov
add
out
pop
mov
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
imul
inc
mov
add
cmp
fidivrl
xlat
add
xchg
sar
mov
add
out
and
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
leave
call
mov
sbb
fidivrl
xlat
add
xchg
sar
mov
add
pop
addr16
cmp
cmp
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
sub
mov
cmp
rorb
mov
pop
mov
shrb
mov
rcr
add
cmp
mov
lea
cmp
shr
lea
pushf
xor
test
jle
cmp
jge
lea
cmp
mov
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
mov
cmp
out
sub
cmp
cmp
mov
mov
cmp
out
stc
mov
cmp
pop
and
idivb
cmp
out
cld
mov
cmp
pop
and
push
cmp
cmp
cmp
cmp
add
pop
cmp
cmp
cmp
cmp
rorl
cmp
cmp
mov
mov
cmp
mov
repz
ss
mov
rorb
daa
cmp
mov
dec
mov
dec
test
rorl
jb
rorl
sub
cmp
cmp
daa
cmp
fnstenv
test
rorl
jb
rcr
or
cmp
fnstenv
popa
cmp
dec
or
cmp
adc
mov
ds
rorb
mov
pop
or
push
mov
cmp
mov
dec
mov
dec
ret
mov
test
sar
rcr
mov
mov
imul
push
test
xchg
jae
cmp
test
faddp
pushl
into
mov
imul
push
mov
dec
mov
dec
test
faddp
pushl
into
mov
imul
push
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
out
and
cmp
mov
mov
cmp
out
in
mov
cmp
mov
mov
cmp
out
inc
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
in
iret
out
dec
mov
pop
jle
cmp
out
cmp
cmp
cmp
or
cmp
in
sti
jmp
cmp
cmp
in
std
mov
cmp
cmp
in
and
or
mov
cmp
cmp
in
arpl
mov
repz
repz
cmp
pushl
into
add
lahf
repz
shl
test
push
jb
jmp
into
test
rcll
mov
repz
repz
shl
test
push
jb
jmp
lahf
pop
out
lds
cmp
sarl
mov
repz
repz
test
jb
jecxz
mov
mov
pop
lret
cmpsl
repz
repz
test
jecxz
roll
mov
out
sub
xlat
pop
xchg
into
adc
xlat
repz
repz
cmp
pushl
into
rcrb
cmp
mov
dec
mov
dec
test
jb
fidivrl
into
pop
cmpsl
iret
shlb
pop
sub
and
rcl
das
out
dec
mov
mov
and
rcrb
mov
and
mov
dec
jb
rcrb
rcrb
rcrb
rcrb
rcrb
rcrb
mov
dec
add
pop
and
out
jb
rcrb
aas
mov
or
xlat
dec
mov
dec
test
test
fidivrl
into
mov
dec
mov
dec
test
shl
pop
rcl
cmp
jmp
mov
rcrb
xlat
dec
mov
dec
test
cmp
pushl
into
mov
dec
pop
rcl
das
test
mov
dec
shl
test
push
jb
jmp
mov
rcrb
xlat
dec
mov
dec
test
sar
test
into
mov
dec
mov
dec
test
shl
test
push
jb
jmp
rclb
sbb
cmp
mov
dec
mov
dec
test
sar
test
into
mov
dec
mov
dec
test
shl
test
push
jb
jmp
rclb
cmp
mov
repz
repz
test
fidivrl
into
mov
repz
repz
test
jecxz
roll
mov
lret
pop
daa
cmp
mov
dec
mov
dec
mov
sub
cmp
pushl
into
pop
or
cmp
rolb
pop
sub
or
lea
out
cmp
mov
repz
repz
mov
test
rcr
sar
mov
rolb
pop
sub
or
mov
dec
test
rorl
jb
shl
pop
or
cmp
fnstenv
test
rorl
jb
rcr
or
cmp
fnstenv
fidivs
test
test
mov
sub
lea
jb
rcrl
cmp
rclb
sub
or
lea
xlat
repz
repz
push
ss
mov
rolb
pop
sub
inc
mov
cmp
repz
cmp
cmp
mov
cmp
cmp
mov
cmp
mov
mov
cmp
mov
mov
cmp
out
pushl
cmp
cmp
mov
cmp
out
pop
mov
cmp
pop
enter
pop
pop
cmp
cmp
cmp
cmp
icebp
mov
mov
cmp
pop
enter
pop
sbb
cmp
mov
cmp
out
pop
mov
mov
cmp
mov
mov
cmp
mov
cmp
mov
test
shrb
and
cmp
pop
mov
dec
or
cmp
cmp
mov
or
cmp
cmp
xchg
mov
shrb
mov
mov
repz
repz
in
test
sar
rorl
repz
test
sar
rcrl
mov
test
out
insb
ret
adc
inc
cmp
cmp
sub
cmp
mov
repz
repz
xchg
push
jb
ljmp
cmp
cmp
cmp
test
pop
shll
or
push
mov
cmp
cmp
pusha
sbb
repz
repz
pop
shll
or
push
mov
cmp
cmp
test
cmp
push
jb
ljmp
xlat
repz
test
sar
rcrl
mov
test
out
insb
ret
adc
mov
mov
cmp
cmp
inc
jno
adc
or
mov
sub
shlb
add
mov
xchg
cmp
fidivrl
xlat
xchg
xchg
mov
mov
imul
das
popa
cmp
fstps
imul
cmp
sar
lea
cmp
mov
add
cmp
fidivrl
xlat
add
mov
imul
cmp
mov
xchg
push
test
cmp
cmp
xchg
add
shlb
rclb
in
or
mov
in
xlat
in
test
push
cmp
fidivrl
xlat
in
cmpsl
in
test
xchg
mov
loopne
call
cmp
shr
cmp
mov
in
xlat
in
test
push
cmp
fidivrl
xlat
in
cmpsl
in
test
xchg
mov
loopne
fwait
inc
popa
cmp
sar
cmp
lea
mov
cmp
mov
mov
scas
lret
xlat
sub
test
sarl
cmp
or
mov
fiadds
inc
mov
mov
sub
push
out
mov
in
popa
cmp
dec
cmp
pushf
xor
dec
mov
repz
idivl
call
cmp
outsb
cmp
data16
lea
cmp
rorb
sbb
cmp
mov
mul
sbb
mov
mul
sbb
mov
sbb
cmp
mov
not
andl
cmp
imul
and
adc
add
pop
pop
out
stc
rorb
es
cmp
dec
shll
stc
cmp
cmp
pop
shll
repz
call
cmp
outsb
cmp
data16
ds
repz
dec
cmp
sub
mov
sub
shll
add
or
pop
sub
cmp
mov
es
or
pop
sarb
cmp
cmp
outsb
cmp
outsb
cmp
outsb
mov
add
fidivs
es
pop
or
rcl
sub
es
mov
es
mov
es
cmp
mov
mov
sub
jge
test
daa
popa
cmp
mov
mov
mov
scas
pop
movsl
inc
fnstenv
mov
sub
test
pushf
popa
cmp
mov
sub
je
lret
cmp
inc
popa
cmp
mov
es
or
or
popa
cmp
mov
es
cmp
mov
rcl
es
mov
es
cmp
mov
rcl
es
mov
es
cmp
mov
mov
rcl
es
mov
es
cmp
mov
mov
rcl
es
mov
es
mov
in
popa
cmp
mov
in
popa
cmp
mov
mov
inc
pushf
xor
out
rorl
push
rcl
es
dec
shll
sub
cmp
cmp
out
mov
es
cmp
mov
out
and
call
jbe
out
jbe
out
jbe
out
jbe
shll
jle
fiadds
adc
cmp
outsb
cmp
outsb
mov
add
fiadds
add
out
ds
idivl
fiadds
divb
rcl
sub
out
mov
es
cmp
sub
sub
iret
popa
cmp
shlb
shll
sub
pushf
xor
sub
out
ss
rorl
es
xchg
shr
mov
es
mov
iret
popa
cmp
cmp
and
popa
cmp
cmp
testl
rcl
es
mov
es
mov
es
cmp
mov
popa
sub
add
cmp
sub
lea
cmp
shll
add
cmp
mov
mov
popa
sub
cmc
adc
push
inc
push
lock
mov
mov
sbb
dec
call
inc
cmp
jae
imul
jne
imul
pop
popa
data16
insb
gs
insl
popa
jns
outsl
je
outsl
imul
bound
jb
jae
gs
jb
outsl
data16
outsl
fs
jo,pn
bound
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
push
and
add
add
addb
add
add
add
add
add
add
add
or
add
add
loopne
add
pop
add
add
inc
dec
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
les
popa
cmp
pop
rol
pop
rol
pop
rol
pop
rcrl
pop
les
les
insl
and
push
les
les
les
les
les
les
sub
inc
inc
test
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
les
les
les
repnz
xchg
les
les
les
es
push
ja
daa
les
les
les
ds
les
les
mov
sbb
add
rol
pop
sar
and
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
aaa
pusha
xor
pop
rol
pop
rol
pop
shll
mov
les
les
or
les
les
les
shrl
les
les
les
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
inc
pop
rol
pop
shll
imul
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shr
mov
les
jle
ja
pop
rol
pop
rol
pop
rol
pop
rcll
rol
pop
rol
pop
rcll
dec
les
les
les
les
inc
push
dec
les
add
pop
shll
rol
pop
shrl
aad
pop
rol
pop
rol
pop
rol
pop
rorl
in
les
loopne
or
pop
rol
pop
rol
pop
rol
pop
rol
pop
rcll
jge
les
inc
test
pop
js
pop
rol
pop
rol
pop
sarl
imul
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
mov
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rcr
push
dec
les
aam
lret
roll
rol
pop
rorl
push
shll
push
aad
ror
sbb
rol
pop
rol
pop
rol
pop
rol
pop
rcll
push
in
pop
les
les
les
les
les
les
les
les
les
les
les
les
les
les
stos
mov
les
les
les
les
les
les
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
shl
mov
loop
dec
dec
subl
les
les
les
les
les
les
les
adc
mov
stos
mov
inc
les
les
les
xorb
les
les
les
les
les
add
pop
rol
pop
rol
pop
rol
pop
rcll
xchg
jns
pop
rol
pop
rol
pop
roll
les
les
les
les
adc
pop
les
inc
inc
push
les
and
jnp
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
lods
bound
in
les
les
cli
repz
les
les
out
loopne
xchg
xchg
les
les
les
les
les
les
push
xchg
ret
rol
pop
rol
pop
rol
pop
roll
ret
rol
pop
rol
pop
rol
pop
rol
pop
shll
push
les
les
les
les
les
les
add
pop
rol
pop
rol
pop
sarl
dec
vmwrite
pop
rol
pop
rol
pop
rol
pop
shll
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
les
les
cltd
cmp
les
les
sahf
or
in
push
pop
rol
pop
rol
pop
rol
pop
shll
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
aas
les
inc
jnp
mov
jno
les
stos
mov
les
rclb
pop
push
sbb
out
pop
roll
lea
mov
jmp
pop
les
push
daa
mov
inc
les
les
les
xorb
les
les
les
les
les
les
les
les
mov
rcrl
push
xor
pop
rol
pop
rol
pop
rol
pop
rorl
les
test
xor
pop
rol
pop
rol
pop
rol
pop
rcll
imul
mov
les
les
les
les
les
les
les
out
fstpt
les
les
les
les
les
les
add
mov
jbe
les
and
inc
push
inc
in
pop
shrl
push
les
les
les
enter
pop
rol
pop
rol
jae
adc
inc
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
ror
push
les
fwait
bound
