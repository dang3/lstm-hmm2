push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
jl
jl
jle
jl
xlat
cmp
ffree
pop
push
add
addl
xor
ret
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
in
or
int3
pop
push
cmpsl
jecxz
lock
hlt
imul
cmpsb
jge
add
adc
shlb
mov
in
xchg
dec
mov
xor
lods
gs
insl
sub
pop
in
mov
xor
jo
dec
and
in
sti
cwtl
xchg
sub
xchg
cmpl
les
fstpt
mov
std
aad
rcr
xlat
insb
test
mov
inc
cmp
cli
sbb
mov
sub
in
push
adc
push
sbb
sar
imul
lcall
or
rcll
and
mov
incb
pop
ja
sar
sub
push
mov
dec
adcb
mov
and
shll
and
cmp
mov
in
stos
pop
sbb
es
lahf
and
mov
dec
mov
mov
fimuls
inc
rclb
dec
and
aam
xchg
and
dec
movsb
outsb
add
pop
imul
mov
ret
inc
mov
cld
shll
jge
mov
mov
mov
jbe
arpl
pop
add
into
xor
pop
pushf
inc
inc
popa
cmp
fs
mov
xchg
mov
rolb
mov
push
and
fldcw
in
pop
push
popa
popa
xchg
mov
mov
sub
sub
mov
xchg
xchg
xor
fxtract
jo
cs
sti
lods
pushf
in
test
test
add
mov
jb
testl
inc
clc
dec
mov
popa
mov
es
sbb
nop
mov
mov
sub
stc
icebp
jl
call
mov
pop
callw
in
andb
or
inc
repnz
push
fisubl
clc
xor
enter
movsb
and
cmp
push
gs
mov
pop
cmp
and
inc
push
jno
popa
lds
lahf
test
dec
inc
cltd
movsl
mov
in
sbb
daa
push
push
mov
dec
sbb
adc
es
push
pop
inc
mov
adc
inc
or
adc
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
xchg
cmp
addr16
jl
jle
jl
js
out
push
adc
sar
outsb
jo
orl
pop
js
cmc
fsubrl
fisttps
sbb
aaa
lock
dec
lcall
dec
loopne
das
push
lret
dec
mov
lock
pop
rorb
clc
dec
and
gs
pop
andb
inc
popa
xor
cs
daa
push
scas
and
in
xchg
and
sub
js
push
xchg
mov
out
add
ds
inc
push
lock
sti
gs
in
dec
gs
stc
sbb
mov
inc
and
cmpsl
dec
ret
sbb
lret
adc
and
icebp
lret
xorb
out
mov
xor
add
mov
aad
lahf
push
inc
fldenv
fdivrp
push
sub
dec
pop
in
leave
adc
loopne
scas
cs
push
test
movl
lret
sbb
xor
sahf
mov
fisttps
add
mov
sub
jne
push
push
cmp
inc
cmc
scas
sub
gs
adc
push
or
jae
popf
pop
bound
sbb
nop
mov
icebp
out
push
dec
inc
int
neg
and
xor
fsub
adc
in
ret
pop
inc
rolb
test
pop
fcmovb
dec
mov
imul
xchg
xchg
stos
push
mov
sti
sub
aas
jecxz
movsb
mov
sbb
repnz
and
xlat
lods
sbb
sub
outsl
jns
fldl
in
cmpsl
mov
dec
mov
push
dec
inc
xchg
add
loope
ret
ficoms
mov
mov
dec
subb
or
in
testb
mov
shll
sbb
lahf
iret
pusha
jl
iret
loopne
sub
ret
mov
pop
mov
mov
inc
push
inc
popf
insl
cmpb
iret
push
mov
push
mov
mov
mov
push
popf
int3
jmp
sti
add
xchg
clc
inc
push
xor
subl
shrl
or
jp
mov
jle
dec
lret
andb
sti
outsb
jo
js
xchg
inc
inc
leave
jmp
lock
dec
xlat
add
mov
aam
rcrb
lcall
cwtl
xorl
mov
jle
nop
inc
pop
repnz
mov
shl
xchg
adc
xor
cmpsl
jecxz
pop
fs
push
sarb
adc
and
mov
test
adc
mov
and
mov
stos
orb
inc
add
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
xor
jnp
jl
jle
jl
pop
popa
inc
xor
lret
push
mov
rolb
mov
sub
fadds
or
subl
fisubs
mov
push
xlat
outsb
and
mulb
mov
dec
scas
movsl
mov
test
int3
subb
mov
add
test
dec
pop
gs
sub
lret
inc
dec
xor
test
iret
fisttpll
sub
sbb
cltd
mov
lahf
jns
fisttps
mov
push
lret
sub
cmpsb
cmpsl
push
lods
aaa
push
mov
dec
dec
lahf
loopne
neg
jb
std
sub
xor
or
mov
mov
pop
and
iret
push
fidivrs
pop
or
repz
sub
ds
lds
aaa
sbb
and
fimuls
xchg
in
repnz
lea
cmp
into
dec
movl
insb
inc
xor
sub
gs
ret
in
incl
jbe
shll
adc
mov
jge
cli
lds
test
daa
xchg
jp
cmc
nop
sub
xchg
or
cld
test
imul
or
xchg
out
fiaddl
dec
leave
jne
dec
adc
lea
xor
xchg
loopne
pop
add
dec
push
lea
inc
stos
ret
jmp
adc
fwait
mov
fbstp
fnstsw
loop
push
fs
ja
popf
enter
stos
das
sar
xchg
sbb
xchg
cld
in
mov
cltd
cmpsl
daa
push
inc
imul
push
add
imul
pop
xchg
push
lds
sbb
out
test
movsl
lea
mov
ds
xchg
mov
outsb
jmp
in
testl
and
xor
cmpsb
or
and
sub
imul
test
dec
in
inc
or
dec
movsl
dec
inc
cmp
les
jno
cmp
xchg
js
dec
lods
imul
leave
sahf
es
mov
lods
inc
xor
cmp
cmp
je
fldenv
adc
imull
addr16
add
outsl
mov
jp
outsb
nop
notb
bound
pop
clc
xchg
mov
ret
push
mov
rcl
les
cmpsl
repz
jge
pop
jne
ret
add
neg
lahf
test
or
mov
leave
arpl
adc
sub
add
sub
rcrb
ret
mov
fldenv
cmp
jae
js
outsl
and
mov
xchg
fildll
cmpsb
cmp
jnp
cmpsb
mov
sub
cmp
cld
inc
jmp
mov
xorb
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
lahf
ds
add
pop
int3
xor
addr16
xlat
stos
dec
je
out
lock
inc
sbb
rep
inc
outsl
stos
sub
nop
xchg
mov
dec
aas
pop
add
das
dec
and
push
testl
adc
add
xchg
inc
sub
lea
das
inc
iret
fucomi
cmpsl
cmp
inc
adc
lds
pop
add
je
pop
leave
in
xor
xor
mov
lret
fcmove
mov
clc
mov
loope
add
shr
or
mov
add
and
dec
or
stos
add
cmp
out
test
xchg
stc
and
pop
sahf
push
scas
push
sbb
aaa
cmp
pop
jbe
push
xchg
pop
lds
movsl
fildll
mov
frstor
pop
jno
sub
ret
ret
int
sub
inc
int
xchg
xor
mov
cmp
ja
mov
mov
in
mov
or
into
jmp
lods
mov
push
pop
imul
xlat
and
push
lret
inc
inc
iret
movsl
or
je
inc
fbld
mov
ds
les
pop
jp
scas
dec
cmp
testl
shlb
push
loope
nop
mov
jae
shrl
cmp
mov
sub
fisubrs
daa
xor
dec
out
vpshab
leave
add
add
std
loope
mov
pop
fcom
add
rol
ret
lcall
xchg
sbb
lcall
push
and
xor
std
xor
rolb
rcll
addr16
jle
out
push
shll
xchg
mov
jmp
lret
clc
jg
cli
rol
sbb
and
lods
movsl
mov
stc
add
jo
pop
test
pop
js
push
shrb
test
mov
and
sub
ds
faddp
jge
pop
insb
push
push
movsb
adc
fiaddl
mov
out
pusha
ret
jo
xchg
arpl
insb
in
negl
jge
fmull
cmp
mov
adc
sub
insl
fwait
dec
xor
and
repz
xchg
dec
sub
xor
loop
xor
adc
sub
sub
out
aam
sbb
lds
cmp
sti
xchg
cs
test
dec
in
decl
jle
or
or
bound
rorl
inc
push
pop
add
mov
imul
mov
add
lods
dec
inc
sbb
mov
xor
lcall
test
ljmp
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
fs
add
jle
jl
add
cmc
pop
and
mov
hlt
push
dec
push
mov
mov
iret
pop
push
nop
aad
frstor
add
or
aas
jae
dec
pop
movsl
inc
add
mov
sub
cmp
div
mov
sbb
inc
in
jno
aam
sub
loop
scas
sbb
lea
xorb
inc
jne
aaa
mov
jp
mov
and
adc
xchg
pop
loope
and
jno
es
in
xor
xchg
pop
cltd
idiv
es
roll
mov
idivl
jnp
sahf
loop
movsb
jge
cmp
incb
pop
sub
shl
mov
push
testb
imul
sbb
mov
inc
call
cld
cmc
in
fucomi
fildl
or
aam
in
repnz
pop
or
cmp
outsl
call
jmp
mov
addr16
xchg
test
xor
sub
dec
mov
lcall
cmpsl
seto
mov
and
fcomps
lret
xor
mov
dec
test
add
and
fistpl
xchg
sbbl
mov
sub
scas
or
scas
or
mov
nop
je
mov
xor
inc
cmp
adc
and
sbb
fsubl
insb
sub
inc
fs
imulb
dec
push
ds
and
into
or
mov
stos
sbb
leave
lar
inc
sub
ret
dec
sub
out
sbb
rorl
cmp
mov
mov
mov
imul
gs
iret
cs
xlat
push
mov
sub
fsubs
xor
inc
xchg
jge
sbb
stc
xchg
shll
scas
cmp
fstpl
push
fidivl
dec
insb
cmp
and
mov
mov
sbb
gs
lahf
aad
lret
push
aas
push
out
jecxz
push
push
mov
fdivp
enterw
imul
popf
shll
aad
pop
ret
arpl
in
xlat
push
add
out
loope
pop
mov
leave
ljmp
xchg
and
and
lret
pusha
popf
mov
and
in
repz
cmp
pop
xor
insl
ret
outsl
clc
adc
in
mov
xchg
in
or
add
add
dec
cs
clc
lret
cli
mov
pop
cld
jmp
loope
scas
xchg
pop
sub
gs
cld
inc
cmp
or
das
push
sbbb
mov
mov
fisubl
ds
in
or
dec
adc
andb
push
divl
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
mov
sbb
push
xchg
push
jbe
mov
bound
pop
lods
jge
jae
inc
paddsw
insl
cmc
or
inc
and
xlat
jo
popa
loopne
cld
dec
hlt
out
stos
xor
push
or
imul
and
sbb
xor
addr16
je
aad
mov
add
push
cwtl
push
push
lods
mov
insb
push
flds
fcompl
or
movsb
adcb
sbb
insb
add
and
imul
pop
bound
sub
xchg
dec
sbb
aas
lods
add
push
in
les
push
add
sahf
mov
jno
xchg
cmp
jmp
xchg
in
insl
jns
pop
aad
xchg
out
popf
mov
out
ss
jb
fs
incb
movsl
cmp
test
or
xchg
mov
fcoml
mov
shl
mov
sub
dec
mov
cs
inc
in
push
ljmp
lret
ret
xor
cmpsl
cld
jg
sub
dec
push
add
jns
or
jbe
push
outsl
jne
sub
push
dec
pusha
mov
lcall
adc
sub
jg
fld
xlat
cmp
jmp
xchg
cmp
push
or
loop
ret
inc
loopne
loope
leave
scas
rclb
cmp
out
jl
and
movsl
mov
sub
sub
push
jge
push
cmpb
pop
subl
mov
scas
cmp
jg
popf
in
ret
iret
pop
lds
addl
dec
cld
rorb
cli
dec
fs
push
pop
mov
jmp
cmp
sub
inc
mov
fidivl
int3
dec
nop
frstor
lock
scas
mov
insb
push
out
push
adc
incb
ljmp
xchg
in
adc
sbbb
aad
js
lcall
decl
sbb
fucom
xor
or
cmp
gs
lds
repnz
fldt
fbstp
flds
enter
loope
jo
cmp
popl
xor
and
sbb
into
aas
incb
clc
or
lahf
movsl
jae
add
mov
inc
loope
imulb
fistpl
dec
mov
and
je
rclb
test
ss
rolb
shlb
xchg
mov
adc
cmp
dec
loope
hlt
sahf
dec
xchg
add
or
mov
cmpl
adcb
or
jmp
jmp
nop
xchg
mov
xchg
pop
jle
pushf
mov
lea
mov
mov
cmp
jmp
mov
jne
adcb
push
lcall
arpl
jl
jle
jl
incb
push
std
ret
jno
xor
mov
xchg
outsb
out
sub
push
cmp
das
mov
add
cmp
push
lcall
test
inc
mov
rorl
inc
sub
push
stos
sbb
pop
push
mov
outsl
test
shlb
bnd
ds
sbb
enter
mov
xchg
add
mov
cmp
cmc
scas
or
shlb
int
mov
aam
cmp
gs
popf
push
push
xlat
mov
cmp
js
out
adc
sbb
cmp
daa
adc
jns
xor
lcall
xchg
shlb
adc
icebp
fcmove
cmp
jge
sbb
arpl
jnp
jo
out
lcall
pop
inc
jge
call
pop
call
scas
addr16
shlb
stc
cs
cld
fisttpl
cmp
cmp
nop
push
or
mov
cmp
je
mov
push
sarl
push
or
jno
pop
and
jns
mov
outsb
jmp
xchg
pop
add
mov
loope
jae
inc
js
fwait
insl
jg
xlat
xor
aaa
sbb
hlt
xchg
push
xor
mov
outsl
cld
and
call
lcall
es
ror
push
les
push
fs
daa
std
movsl
mov
stos
das
xchg
add
stos
fidivrl
cmp
mov
pusha
pop
mov
imul
adc
pop
test
xchg
fldl2e
mov
sbb
push
adc
test
push
or
xchg
ljmp
jmp
adc
sbb
dec
mov
mov
call
test
cltd
pop
pop
mov
je
dec
and
imul
mov
jno
or
test
and
jmp
sbb
inc
mov
aam
inc
dec
ds
aaa
lahf
fnstenv
mov
into
cmp
fwait
mov
mov
fisubrl
jmp
xchg
jns
ds
inc
push
or
jb
les
loopne
mov
add
adc
or
in
mov
roll
faddp
xor
and
xchg
lods
insl
or
outsl
into
or
hlt
push
xchg
loope
lock
clc
jle
icebp
cs
inc
or
frstor
mov
imul
pop
shrl
testb
fnsave
push
std
insl
and
repz
mov
sbb
cmp
pop
sbb
nop
fcmovne
sbb
clc
loop
mov
jae
lock
push
jno
jle
sahf
jp
mov
push
add
add
lea
xor
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
pushl
jl
addr16
jl
enter
and
xchg
in
iret
sbb
cmp
lcall
cmc
mov
mov
pop
jbe
jns
push
mov
sti
mov
dec
and
mov
or
mov
scas
inc
xchg
dec
sarl
xor
and
call
push
or
inc
call
dec
test
jge
pop
jnp
jae
in
inc
or
stos
les
ficoms
sbb
jnp
pop
add
js
xchg
addl
sbb
rcr
mov
in
inc
pop
push
mov
ljmp
inc
enter
jo
insb
adc
faddl
int
fidivrl
xchg
loope
mov
stos
xchg
out
pop
push
push
mov
call
xor
bound
push
aas
jo
adc
fdivp
or
loope
adc
movsl
or
inc
xchg
rorl
dec
cmp
inc
add
lea
mov
mov
xchg
and
jae
ds
stos
mov
dec
dec
adc
mov
sti
out
adc
arpl
fs
sbb
mov
pop
push
shl
pop
and
and
repnz
les
xchg
push
sub
inc
pop
loop
icebp
inc
push
inc
xchg
iret
stos
outsl
int3
lods
call
shll
mov
aam
push
push
pop
adc
test
mov
out
dec
insl
aaa
outsl
push
inc
cs
loop
xchg
faddl
mov
or
leave
fstl
andl
xlat
lods
mov
sub
dec
or
mov
jne
push
lret
adc
das
jmp
add
movsb
sbb
scas
aas
inc
push
jns
add
js
movsb
test
mov
out
aas
add
mov
sbb
cmpsb
lods
cmpsb
std
adc
imull
dec
cmpsb
jmp
and
scas
pop
ficompl
pop
pop
mov
cmc
sub
dec
dec
in
enter
test
sbb
push
jnp
scas
lcall
ret
pop
lock
into
sub
mov
daa
lods
pop
lahf
xchg
and
insb
and
cmp
sbb
les
jnp
not
loopne
outsb
in
cmp
cmp
fsts
xchg
jle
in
pop
sbb
push
push
xchg
mov
sbb
add
into
outsb
xchg
mov
or
cmc
test
test
push
jmp
fldt
das
sbb
subl
or
adc
gs
shlb
inc
mov
jl
adc
clc
sub
aad
xlat
xchg
imul
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
dec
mov
das
les
jl
jnp
mov
dec
xlat
test
ljmp
les
add
fisubl
xor
data16
cmp
pop
mov
in
mov
cmpsl
sub
push
mov
xchg
mov
iret
stc
cld
mov
xchg
push
xchg
shlb
push
scas
and
and
pop
arpl
pop
jmp
mov
test
cmpsl
ja
fbld
shrl
into
and
pop
pop
je
fmull
add
pop
pop
mov
xchg
push
mov
out
adc
stos
xchg
sub
es
imul
mov
jb
mov
xchg
aad
pop
pop
sbb
in
cltd
add
in
push
les
or
sbb
cli
enter
hlt
pop
insb
out
je
inc
sbb
xchg
lret
movsb
idiv
cmp
cmp
adc
xchg
out
popa
int
adc
inc
adc
insb
sti
ret
arpl
jl
loopne
es
pop
mov
lret
insl
fistl
out
data16
fidivrl
hlt
pop
xorl
pusha
push
shlb
cmpsl
mov
jg
cltd
outsl
sub
add
lods
jecxz
mov
mov
jns
out
repz
or
pcmpgtw
inc
jae
and
sub
mov
inc
mov
cmp
inc
cmpsl
pop
movsl
mov
mov
dec
inc
ret
decb
add
or
iret
je
mov
adc
test
data16
inc
adc
dec
mov
or
pusha
jns
in
push
mov
gs
imul
xchg
stos
cltd
rol
sbb
mov
jmp
mov
out
mov
jge
std
fwait
sarl
mov
imulb
mov
mov
adc
movsb
and
int3
jne
out
imul
sbb
shlb
mov
inc
sub
mov
jno
mov
cmp
pusha
cld
in
dec
xchg
mov
mov
shrl
add
sbb
out
pop
cmc
insb
lea
xor
frstor
sahf
push
xchg
and
cwtl
sbb
loop
popa
sub
nop
in
stos
popa
pop
mov
jb
lret
test
jnp
repz
test
aaa
inc
mov
ljmp
mov
pop
and
test
popa
into
xchg
and
fwait
mov
mov
aas
jno
mov
cmp
repz
std
fnstcw
cli
mov
jg
adc
mov
cld
aam
mov
daa
mov
fisttpl
inc
add
enter
lods
and
fistpll
pop
in
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
das
dec
das
push
jl
addr16
jl
sub
into
aam
cmpsl
mov
lahf
sbb
mov
clc
in
das
mov
das
or
sbb
ffreep
fcompl
fwait
mov
call
sub
adc
xchg
fldl
cmpsb
add
inc
sbb
add
cmp
add
scas
cwtl
cld
fwait
dec
out
insb
adc
mov
mov
or
jnp
int
or
and
fucom
mov
imul
ljmp
dec
in
mov
lea
rcrb
loop
aas
jg
pop
ss
cs
sbbb
mov
cltd
push
fs
jmp
and
fstpl
xchg
mov
mov
ja
xchg
adc
mov
mov
in
mov
xorl
xchg
sbb
jge
gs
push
test
pop
or
cld
cmc
dec
enter
inc
ljmpw
mov
jnp
and
frstor
adc
pushf
test
loop
pop
mov
sahf
sub
push
xchg
dec
movsl
aad
dec
enter
adc
mov
dec
xor
push
movsl
fidivrs
pop
loope
pushf
adc
bound
mov
shrb
sbb
or
and
sub
sub
mov
cmp
in
push
inc
addr16
add
cltd
sub
das
jg
mov
mov
hlt
fsubr
and
inc
pop
mov
jle
fs
mov
leave
ss
aad
xchg
push
nop
into
aas
xchg
es
arpl
xchg
shl
test
fadds
stc
stos
int3
add
lods
mov
mov
cmp
imul
mov
rcll
dec
pop
xchg
pop
xor
fs
jb
cmp
inc
adc
push
cmpsl
call
xchg
add
xor
add
shl
into
ss
pushf
fstpt
dec
cmc
and
scas
std
adcb
inc
jp
hlt
cs
jbe
inc
pop
xor
fstl
and
popl
push
sub
cmp
xor
ja
popa
aam
jecxz
dec
cmp
jo
pop
pop
adc
cmp
ret
cwtl
mov
int
cmp
sub
jns
jl
mov
aad
in
addr16
cld
sbb
imul
sbb
movsl
add
jnp
xor
mov
mov
aas
js
adc
cmp
lods
movsl
rcrl
das
loop
mov
push
int
fwait
sti
sbb
scas
mov
jbe
jg
mov
into
cmp
ret
out
sar
mov
int3
ds
pop
adc
ficomps
sub
cmpsl
pop
fsubp
xor
pop
pop
test
cwtl
and
mov
mov
fbld
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
xchg
jl
insl
jg
jl
and
les
divb
sub
push
addr16
fidivrl
bound
cmp
dec
xor
pop
inc
xlat
loope
jp
nop
dec
out
mov
dec
add
jp
imul
xor
cmpsl
mov
mov
adc
adcl
mov
mov
dec
scas
test
cwtl
lock
xor
movsb
jae
inc
mov
cmpsl
shll
push
cmpb
jmp
imul
mov
push
push
add
and
js
push
and
nop
stc
push
and
cmc
push
pop
cltd
mov
insb
push
aas
sub
lods
mov
out
push
lea
and
mov
icebp
addl
call
enter
loopne
mov
int3
xchg
mov
test
xchg
sarl
xor
mov
adc
jno
lods
xchg
mov
jb
cmp
xchg
push
push
int3
in
and
xor
inc
stc
mov
mov
mov
lret
hlt
jne
cmp
cmp
or
adc
faddl
sti
pop
leave
push
cmc
mov
jo
into
mov
pop
mov
jae
loop
test
pop
enter
pop
or
inc
ret
jmp
or
adc
adc
sub
xchg
sub
ljmp
rorl
nop
in
fwait
dec
and
pusha
fsts
icebp
xchg
mov
mov
pop
shl
movsb
lods
add
xchg
call
mov
mov
or
inc
push
aaa
sbb
sub
cmp
mov
aam
daa
loop
or
pusha
xor
inc
cltd
mov
pop
leave
fnstcw
add
push
clc
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
sub
insl
jg
jl
adc
jne
push
pushf
cmp
sub
icebp
adc
push
or
aaa
lds
mov
mov
push
sbb
dec
out
shrl
push
repz
sub
and
xor
or
std
outsb
dec
push
rorb
les
xor
aad
leave
push
negb
sbb
imul
in
data16
pushf
addr16
out
dec
push
and
andl
mov
push
push
scas
loop
and
sub
cli
aad
shlb
outsb
or
xor
xlat
mov
mov
mov
dec
sarb
faddp
mov
repz
popf
mov
sub
dec
xchg
mov
stc
or
push
cli
fwait
push
add
pop
jae
iret
lret
sbb
mov
and
cmp
popf
push
addb
pop
aad
stos
add
fisubrs
add
shll
xchg
inc
and
jecxz
cmp
gs
xor
xor
xchg
dec
cmc
gs
or
sbb
adc
inc
mov
lret
movsb
negb
mov
dec
out
fistl
dec
pop
push
dec
mov
ret
cltd
pop
cli
clc
dec
dec
scas
test
sub
add
test
mov
add
and
repz
cld
mov
xor
push
inc
jbe
repz
sti
hlt
pop
mov
mov
cld
cmpsl
mov
add
xchg
xchg
inc
dec
outsl
addb
lcall
jo
shll
das
xor
push
jecxz
sti
jg
out
dec
repz
sub
inc
dec
pusha
add
sbb
leave
inc
rorb
jp
in
jnp
push
inc
mov
cltd
jo
sbb
flds
ret
sbb
sub
sahf
sub
inc
clc
jmp
sarb
sarl
rcrb
pop
mov
insl
jg
jl
xchg
das
fmuls
jp
lret
dec
mov
sbb
mov
lds
push
jl
aad
ss
mov
or
pusha
mov
inc
push
xor
loop
inc
pop
mov
mov
in
xchg
bound
insl
lds
add
movsb
xchg
xchg
adc
sub
mov
mov
sub
loope
shr
mov
mov
add
adc
cmc
jmp
repz
loop
mov
mov
mov
cmc
cmpsl
push
sti
jmp
mov
jg
adc
out
dec
lahf
cltd
lods
dec
push
movsl
inc
repnz
stos
and
pop
mov
testb
dec
or
mov
rcrl
outsb
pop
jo
int3
sar
adc
dec
xchg
mov
and
repz
rcrl
mov
or
jge
xchg
pusha
mov
loopne
imul
jl
xor
stos
xchg
and
push
jle
mov
and
xor
sub
int
movsl
jo
dec
ja
ljmp
lret
mov
in
das
repnz
ffree
scas
fcoml
inc
cmpsb
mov
and
pusha
pop
lcall
mov
nop
aam
jb
fldt
push
das
dec
loop
mov
shlb
mov
cmp
inc
mov
aam
out
jg
stc
mull
cmp
add
inc
xchg
shl
mov
ljmp
cmp
cmp
xor
js
adc
popa
cmp
mov
icebp
outsb
sub
xchg
mov
sub
inc
rolb
aam
adcl
icebp
daa
mov
aas
call
enter
gs
xchg
subb
xchg
mov
sti
mov
rcl
stos
or
scas
or
gs
jge
jmp
addr16
or
arpl
aas
cwtl
pop
and
mov
gs
jl
insl
jg
jl
mov
and
sahf
mov
add
enter
sahf
out
enter
rclb
xor
xor
push
dec
in
sarb
into
stc
inc
fbstp
xchg
inc
movsl
mov
insl
dec
jmp
in
xor
decb
fnop
notl
push
xchg
lds
push
push
mov
pop
pop
shl
scas
fmulp
outsb
sub
test
cmc
and
sti
in
loop
stc
les
scas
addb
mov
inc
xor
std
inc
cltd
arpl
movsb
jp
jle
cmpsb
icebp
ret
jns
adc
maskmovq
fisubl
xchg
dec
pusha
cmp
xchg
cmpsb
lahf
out
outsb
xor
out
and
lods
or
push
in
movsb
scas
push
clc
sar
jp
mov
jl
inc
xchg
pop
jb
push
push
arpl
je
jmp
testb
xorl
cmpsl
leave
repz
or
les
xchg
xsha256
cmpsb
push
sti
lods
enter
std
cltd
pop
dec
mov
push
addr16
add
imull
int3
js
jns
add
sub
andb
nop
add
les
and
xor
out
pop
adc
push
and
fwait
jo
xchg
orl
push
lods
stos
push
xchg
xchg
xchg
push
jg
aaa
mov
scas
testb
and
push
jecxz
incb
dec
clc
xor
mov
push
cmp
push
and
and
jns
rcrl
sbb
ljmp
mov
push
inc
dec
inc
push
loop
adc
adcb
into
dec
dec
cmpsl
sub
add
fcoms
add
imulb
fisubrl
test
in
pop
xchg
cwtl
mov
mov
cmpsb
xchg
mov
cmp
stos
enter
fnstcw
lea
fsubr
sub
add
pop
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
or
insl
jg
jl
add
les
add
jl
cmc
mov
pop
xchg
daa
sbb
addl
dec
pusha
xchg
je
pop
lock
jmp
cmp
into
inc
sahf
clc
outsl
lock
adc
stos
lea
jnp
in
sbb
xchg
adc
push
pushf
push
inc
rclb
mov
mov
clc
stos
shl
jle
aad
jae
ljmp
sub
cmp
lods
sub
mov
cmp
sahf
imul
lahf
jae
ret
xor
add
sbb
sbb
aas
testb
rorl
ss
mov
aam
adc
jmp
lret
add
sbb
int3
inc
insb
js
movsb
cmp
popf
mov
adc
sbb
js
icebp
cmc
repnz
stos
divl
ret
cmpsb
push
and
insb
push
insb
push
mov
adc
shlb
jns
movsb
dec
and
pop
test
pop
aad
popf
xchg
pop
rcrl
fxch
stos
andl
push
in
in
rorb
pop
imull
into
mov
mov
lret
in
cmp
in
sub
mov
and
xchg
push
fistps
int3
stc
aas
xor
jg
rcl
jno
es
inc
cs
fldl
xchg
imul
adc
cmp
movsl
xchg
jmp
stos
jle
lods
aam
jo
leave
cmp
jg
gs
jle
push
gs
cwtl
les
loop
in
fwait
or
js
insb
pusha
mov
cld
in
rorb
or
lea
insb
daa
push
mov
adcb
mov
popa
test
sete
xchg
data16
repz
movsl
xor
scas
mov
stc
adcl
pop
ljmp
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
cs
insl
fildll
call
mov
or
xchg
and
fidivs
insb
xchg
dec
fcoml
push
pusha
ffree
repz
pop
pop
jg
sbb
adc
mov
lea
mov
adc
mov
mov
xor
loopne
jge
adc
mov
leave
mov
scas
jmp
xor
cs
xlat
xchg
cmp
mov
jns
mov
mov
xchg
xchg
repnz
xchg
ffreep
icebp
fwait
stos
out
hlt
fsubrl
add
jl
mov
pop
fucomip
js
sbb
mov
or
aas
mov
xor
lea
cltd
je
stos
sub
xchg
ret
sbb
iret
cmp
xlat
cld
ret
xchg
nop
sub
test
and
dec
fbld
push
movsl
xchg
js
or
or
mov
imul
pop
pushf
pop
mov
cmp
mov
cli
dec
pop
and
or
insb
insb
jae
ljmp
daa
fdivrl
addr16
mov
sbbb
sbb
sti
lcall
xchg
mov
fsts
lcall
pop
mov
adc
pop
cmp
lret
adc
inc
jp
dec
test
or
fucomi
das
fmuls
lcall
aad
mov
push
or
sbb
cmp
jb
sarl
lahf
add
icebp
test
loop
or
nop
testl
pop
into
lahf
lock
dec
sub
mov
and
cwtl
aam
mov
ret
and
out
fwait
lods
adc
sbbl
ret
add
push
jge
sub
adc
mov
push
push
test
leave
sbb
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
push
pop
mov
jl
jg
jl
lret
sub
dec
mov
xchg
scas
stc
xchg
or
cmpsb
in
mov
orl
ss
std
mov
dec
sbb
jecxz
lcall
arpl
roll
ja
out
addl
test
cmp
add
push
cmp
lods
inc
sub
scas
mov
sahf
mov
adc
scas
xchg
dec
add
scas
mov
mov
jns
pusha
lret
push
std
mov
lcall
inc
std
lods
mov
dec
dec
or
xor
pop
inc
call
dec
out
aad
enter
insb
add
out
xchg
inc
int3
lods
dec
cld
fwait
aaa
cmc
js
mov
and
lea
adc
into
pop
dec
leave
mov
mov
mov
cmp
aam
out
into
adc
stc
or
jecxz
testb
and
pop
xor
sbb
add
arpl
pop
dec
stos
and
lds
jb
shrl
fidivrl
jns
xor
fwait
xchg
movsb
jmp
iret
mov
mov
xchg
push
mov
sbb
and
testl
push
jae
pop
outsb
aaa
sub
and
ljmp
ficomps
mov
pop
cwtl
mov
pop
xlat
ja
pop
sub
push
inc
add
rolb
dec
shl
cli
out
imul
stc
mov
jmp
orl
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
sbb
jl
stos
jg
jl
into
inc
adc
ss
sti
and
push
xchg
ret
aas
or
js
jne
scas
jecxz
pop
int
xchg
leave
dec
out
aam
fistpl
adc
xor
lock
int
push
movsl
sub
jns
mov
std
aam
mov
mov
subb
cwtl
jg
push
mov
cs
ss
mov
in
stos
cltd
dec
push
ja
mov
repz
inc
cmc
mov
mov
inc
cmpsb
jp
inc
or
and
sbb
sbb
pop
dec
lahf
inc
jno
nop
shrb
repz
rorb
imul
cmp
mov
xchg
es
sbb
sbb
mov
sahf
aad
movsl
loop
mov
cli
aad
push
mov
xor
sub
mov
sub
inc
cmpsb
mov
dec
or
mov
insl
jo
fmull
jae
push
movb
add
mov
or
jae
jp
push
sbb
rcll
ljmp
sbb
dec
loopne
cltd
jbe
les
std
push
jl
loopne
cmp
mov
shl
das
mov
jecxz
adc
adc
stos
sub
pop
mov
repnz
pop
test
xchg
ficomps
mov
add
mov
leave
and
jns
mov
mov
mov
sub
mov
pop
jo
push
mov
aas
or
inc
mov
and
dec
cmpsb
cmp
mov
push
pop
popa
push
inc
ljmp
pop
jne
pop
shll
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
out
and
and
jg
jl
xorb
xchg
pop
cmp
ud1
nop
or
sub
push
add
push
sub
stos
andl
mov
mov
sbb
testl
rol
xor
aas
call
jecxz
push
clc
push
xchg
lret
inc
mov
aad
jge
sbb
mov
push
push
mov
cmp
lret
loop
lret
push
sub
aam
add
dec
jbe
adc
mov
xchg
inc
shrl
push
and
cltd
ret
fdivrl
decl
lea
cli
scas
aaa
loopne
cltd
nop
shr
cmp
imul
dec
out
das
scas
repnz
pushf
sub
movsb
leave
mov
call
nop
imul
mov
lcall
mov
es
mov
mov
aas
fwait
jnp
lahf
cld
xor
pop
adc
insl
js
push
xor
in
inc
fsubl
fs
leave
iret
cmp
mov
out
cmp
iret
xchg
std
inc
repz
xor
dec
push
or
insl
add
sub
mov
or
enter
daa
dec
and
mov
sets
stos
mov
cs
dec
dec
hlt
inc
sub
xlat
arpl
mov
movsl
fstpl
sbb
mov
mov
test
jbe
xchg
aam
dec
aas
lock
push
cmc
ret
pop
inc
adc
sub
lret
jne
fdivrl
lret
shlb
lret
ljmp
sarl
lcall
jno
xchg
dec
rorb
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
fisubl
orb
jl
jg
jl
jno
mov
fimull
cwtl
jb
mov
cld
loopne
xchg
std
cmp
sub
inc
daa
mov
adc
sbbb
shrl
aas
ss
int3
movsl
into
mov
mov
xor
add
dec
ficoml
addl
push
push
sub
addb
cmpsb
stc
jnp
add
leave
arpl
inc
mov
sbb
addl
or
fidivrl
testl
les
xor
rclb
enter
fnstenv
jecxz
cmc
jl
sahf
xor
and
push
icebp
inc
inc
orb
hlt
xchg
mov
lods
xor
das
insl
lea
not
lret
jp
fnstcw
nop
outsb
mov
cld
xor
bound
cmpb
sti
scas
roll
push
xchg
mov
adc
lds
enter
lahf
xchg
std
call
push
adcb
dec
in
imull
add
nop
push
push
sbb
imul
lds
test
gs
mov
sahf
cs
inc
xchg
das
sbb
mov
jle
mov
mov
mov
xchg
cli
rcrl
hlt
or
scas
std
jae
adc
adc
sub
mov
imull
cli
addb
mov
mov
inc
inc
jae
lcall
jne
jmp
std
clc
sbb
sti
mov
sub
xchg
arpl
out
adc
aad
cmp
popa
test
aas
jne
add
jge
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
sahf
idivb
stos
jg
jl
in
cs
or
popf
push
push
insb
xchg
sub
dec
mov
and
and
xchg
jp
movsl
mov
sbb
stos
add
mov
cld
cmp
xor
and
sub
imul
push
push
stc
cmpsb
dec
cmp
mov
leave
jp
notb
xchg
mov
movsb
and
dec
mov
jl
dec
adc
pop
cmp
adc
testl
cmp
sub
out
andl
test
cwtl
scas
jl
mov
ds
pop
mov
cltd
dec
cmp
adc
mov
sbb
push
dec
cmc
push
sbb
xor
fidivs
pop
outsl
mov
pop
mov
rcll
mov
sub
test
push
mov
pop
insl
out
xchg
insb
add
aas
inc
inc
mov
sbb
popa
add
pop
fs
sub
lds
idivb
std
outsl
push
insb
cltd
xchg
test
mov
inc
mov
mov
inc
add
lret
push
out
dec
aaa
rcrb
fisubs
mov
mov
jb
popl
leave
or
into
outsb
pop
out
or
data16
sub
pop
xchg
fidivrl
out
dec
push
gs
or
shr
inc
push
loopne
xlat
push
stos
inc
sti
mov
les
je
ss
xor
push
out
repz
incb
cmpsb
and
mov
out
scas
loope
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
jo
jne
xor
jl
stos
jg
jl
jl
test
xchg
mov
sub
or
loope
jg
adc
inc
pushf
cmp
inc
adcl
shr
div
pop
into
pop
jle
xor
movsl
adcl
out
ja
jmp
dec
push
or
pop
xlat
in
or
in
mov
psrld
out
fs
int3
dec
lret
or
and
xchg
aaa
repz
sbb
fstl
lods
cld
xchg
ljmp
sbb
push
add
xorps
int
jbe
or
scas
mov
add
fstl
ljmp
xchg
jge
int
pop
fldcw
and
push
ljmp
pop
push
dec
repnz
frstor
inc
pop
movsb
jae
dec
insb
mov
dec
aam
rorb
or
jmp
adc
and
pop
inc
push
scas
lret
leave
push
test
ds
aaa
push
mov
dec
sahf
mov
xchg
push
fidivs
nop
lock
jno
or
xor
cld
pop
shl
inc
popf
cld
fistps
fdivrl
inc
ficomps
mov
fnstsw
xor
xor
adc
outsb
mov
jo
sub
xor
mov
xor
sbb
loope
push
lds
mov
das
jae
mov
mov
push
xor
or
aas
push
adc
jno
xchg
jmp
push
stc
arpl
int3
add
cmp
dec
icebp
repz
jl
shll
jge
out
push
add
leave
or
adc
xchg
xor
mov
test
push
or
add
test
add
add
or
mov
int
add
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
dec
orb
ss
fs
xor
cmp
in
popa
insl
loope
and
test
jle
cmp
pushf
and
and
leave
or
stos
cmc
lcall
jo
test
mov
push
in
or
jnp
mov
stc
inc
push
add
add
jne
or
sbb
ret
mov
mov
sti
out
fldl
testb
xor
clc
pop
jmp
inc
sbb
pop
and
aas
sbb
or
orl
push
push
adc
mov
add
into
cmc
aad
enter
xor
sbb
gs
mov
shll
jbe
sub
jbe
mov
cwtl
add
loope
push
popa
ret
jbe
push
push
xchg
cs
xor
sub
dec
into
xchg
adc
inc
and
adc
out
lods
ret
mov
push
sbb
cld
mov
inc
test
mov
mov
out
inc
fsubs
cmp
test
lds
testl
and
sub
lods
inc
rol
mov
call
mov
add
enter
inc
scas
outsb
aaa
daa
xorb
lock
mov
sub
in
movsl
sbb
cmp
and
jmp
clc
xchg
and
fsubr
dec
cmp
shl
or
and
inc
stos
sub
aam
mov
dec
push
or
int3
adc
dec
mov
loope
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
ret
cmovae
movsl
sub
jg
jl
add
add
push
hlt
xchg
jecxz
pop
fldt
in
and
cli
lcall
dec
out
add
jmp
adc
test
xchg
mov
fistpll
aaa
sti
outsb
inc
das
pop
sub
shrb
scas
xchg
js
shlb
dec
sbb
lahf
cmp
orb
xchg
lds
push
mov
add
inc
xchg
sub
mov
nop
ret
jp
movsl
pop
call
or
out
out
dec
xchg
adc
mov
or
roll
and
ja
sahf
lcall
sbb
repnz
and
jns
or
mov
push
sbb
xor
lahf
test
orb
jle
arpl
and
jno
xchg
outsl
test
imul
inc
movsb
jg
pop
inc
xor
sub
scas
push
jae
pop
xor
or
inc
popf
inc
fisttpll
adc
popa
movsb
aaa
loope
bnd
jns
inc
cmp
mov
bound
cmp
das
out
pop
or
in
jo
push
xor
repnz
test
push
xor
imul
push
sub
ja
mov
dec
push
mov
std
mov
arpl
movsl
lea
pop
shrl
popa
push
out
cmp
or
dec
push
jae
adc
jbe
loope
mov
fmuls
aam
dec
scas
iret
cmp
fst
xchg
repnz
and
call
xchg
cmpsb
andb
daa
xchg
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
int
dec
jg
sub
jns
jl
mov
fnstenv
mov
je
rcrl
mov
xchg
mov
mov
pop
mov
push
and
sbb
cmp
mov
divl
lods
xor
mov
mov
sbb
pop
xchg
and
inc
aam
std
xchg
enter
sbb
notb
lea
jne
bound
xchg
xor
out
mov
shrb
sub
lret
insb
insb
mov
push
hlt
sub
push
and
lods
inc
sbb
xor
jge
mov
sub
sub
pop
and
loop
rcrb
jge
pop
jne
ja
test
adc
test
insb
mov
push
dec
or
mov
inc
outsb
scas
nop
xchg
pop
sbb
rclb
mov
paddusw
mov
std
dec
addr16
xchg
ret
enter
push
mov
mov
fs
mov
dec
pop
test
hlt
mov
out
mov
mov
js
or
andb
sbb
push
adc
dec
iret
add
push
pop
insb
enter
icebp
dec
enter
inc
mov
cmpsl
push
adc
add
push
sub
je
and
or
sarb
ja
lea
mov
roll
pop
dec
push
cmpsl
call
addr16
inc
lock
or
dec
pop
loop
add
push
xor
sbb
inc
mov
mov
incb
mov
pop
inc
sbb
xor
jo,pt
arpl
sub
xchg
sub
adc
sbb
sti
dec
in
add
stos
or
cmpsb
inc
sbb
jle
pop
adc
or
out
push
sti
push
inc
jmp
push
add
adc
mov
xchg
fiadds
mov
iret
xor
pop
ficoml
xor
test
dec
notb
push
pop
mov
iret
push
and
xchg
dec
mov
insb
jmp
sbb
push
inc
jp
inc
cli
repz
repz
clc
fbld
or
in
clc
add
cmp
adc
dec
dec
leave
das
mov
pusha
lcall
std
inc
inc
adc
lahf
jp
fists
test
mov
idivb
inc
mov
sbb
sbb
mov
mov
jbe
arpl
test
pop
in
sbb
mov
imul
sbb
and
arpl
jo
das
popf
xchg
out
out
sbb
arpl
rorl
mov
ljmp
das
out
test
ficoml
or
push
fyl2xp1
sub
adc
push
xchg
cs
dec
pop
test
inc
jb
and
arpl
mov
icebp
es
fiaddl
mov
mov
clc
and
arpl
in
cwtl
push
push
outsb
and
push
scas
daa
std
xor
push
xor
push
shlb
test
mov
dec
push
mov
cmp
and
push
jecxz
cmpsb
addr16
fiadds
push
fcoms
xchg
sub
bound
and
lea
movsl
xchg
mov
xchg
std
popf
in
aad
fistpll
jns
mov
mov
fwait
cmp
push
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
arpl
jl
jns
jl
sub
xor
inc
jbe
ficoms
cmp
loope
jle
lcall
push
aas
jle
insb
sub
xchg
jge
jnp
or
in
mov
ret
ljmp
or
jb
add
int
rcll
jle
rcll
movsl
std
shll
addb
test
or
sbb
iret
jle
dec
pushf
scas
clc
fcoml
or
cmp
or
pop
or
jle
jno
cmpsl
pushf
mov
movsl
pop
dec
inc
icebp
rol
cmpsb
dec
jne
fdivrs
sbb
out
jmp
xchg
mull
in
sti
pusha
and
sub
push
pop
xor
jp
popa
push
out
dec
and
lea
xchg
pop
lock
ficoms
pushf
pop
pop
pop
and
rcll
add
lock
aas
daa
es
rolw
xor
dec
test
pushl
jne
and
jbe
mov
pop
rcll
cmpsl
pop
insl
xlat
nop
cmp
negl
fmulp
jg
and
xor
andl
pop
mov
xlat
inc
loope
lret
adc
mov
arpl
or
adc
outsl
repz
push
sbb
inc
pop
mov
nop
scas
mov
inc
rolb
rolb
test
jmp
out
cmp
adc
je
sbb
pop
shlb
cmp
ljmp
inc
mov
and
arpl
popf
cmp
ss
mov
data16
negl
stos
sub
mov
addr16
jo
adc
jmp
mov
negb
adc
cmp
jmp
lret
pop
mov
subl
jbe
sub
es
fldenv
cmp
xchg
frstor
push
push
data16
dec
mov
into
mov
cltd
dec
jle
fistps
jae
imul
push
ficoml
xchg
repz
test
dec
lret
test
scas
lcall
lods
cltd
test
jns
xor
pop
jbe
cmp
jecxz
add
aad
add
mov
pop
adc
or
xchg
int3
cmpsl
shrb
mov
mov
jnp
add
adc
popa
stos
pop
aas
cld
lret
inc
sahf
add
fmulp
pop
lahf
gs
addr16
mov
cmc
push
adc
mov
jne
sbb
stos
jl
aad
cmpsl
pop
fs
aaa
sub
rcrb
and
dec
rorb
outsb
xchg
dec
cmp
cmc
cmp
xor
push
vpand
sbb
mov
test
pop
cld
push
sbb
adc
push
jbe
pop
enter
or
fcompl
mov
shlb
xchg
inc
cmpb
xchg
jno
inc
je
push
pop
jno
js
push
out
jo
test
mov
dec
mov
pop
ja
inc
mov
into
ljmp
mov
pop
add
stos
inc
or
gs
push
pop
es
loope
jle
mov
pop
fistl
out
push
inc
or
inc
jns
int
outsb
outsl
lods
out
out
cli
out
cmp
mov
mov
mov
stos
fucomip
lods
or
mov
lock
mov
sarb
jle
stos
add
movsb
and
cmp
lock
out
mov
add
sub
lahf
sbb
cld
mov
add
jne
int
inc
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
fwait
sub
sbb
cmp
das
js
call
testl
or
push
mov
sub
pop
mov
mov
stc
lods
clc
mov
outsl
cwtl
mov
in
push
xor
cmp
into
int
add
cmpl
sbb
fisttpl
lahf
push
insb
lods
pusha
nop
mov
das
push
xchg
movb
mov
call
aam
stos
mov
jecxz
dec
ret
and
repnz
rol
inc
dec
push
cli
pop
xchg
inc
test
inc
jnp
pop
xor
dec
ret
clc
xor
push
dec
int3
pop
add
popf
cli
xor
push
and
insb
popf
fdivp
cmp
add
out
or
adc
or
fidivrs
xor
mov
ds
arpl
or
ja
xor
out
mov
cmc
rcrl
or
adc
mov
jns
or
push
mov
lea
cmp
adc
dec
jp
mov
xchg
lahf
loope
jnp
dec
mov
sbbb
pop
mov
and
es
mov
or
ss
icebp
mov
mov
push
mov
lahf
add
repnz
and
cmp
cmp
sbb
loopne
push
pop
jns
push
cld
in
mov
adc
loop
lods
inc
movsb
icebp
pusha
mov
aad
scas
xlat
mov
push
rcll
adc
xor
mov
sbb
mov
add
xchg
xor
cmp
insl
push
xchg
cmp
ret
loope
mov
sub
and
sbb
sbb
mov
xor
sub
lock
push
popf
mov
push
xchg
adc
pop
mov
lret
sbb
stos
inc
mov
lds
xchg
dec
xlat
mov
fucomp
out
cmp
je
aad
mov
arpl
mov
xchg
xchg
jnp
push
iret
mov
repz
add
jb
pusha
addr16
push
adc
add
dec
xlat
push
test
cmpsl
mov
cmp
andl
and
xor
test
pop
jmp
sbb
std
mov
pusha
cltd
ret
out
lods
lods
mov
insb
rcl
ret
xor
in
add
ud1
outsl
jp
sbb
ja
jecxz
scas
cmp
sti
jo
insl
push
mov
xor
repnz
aad
mov
in
sbb
js
ljmp
pusha
dec
push
jne
out
mov
shrl
dec
inc
xchg
sarl
in
fdiv
mov
xchg
xor
xchg
mov
repz
notb
loope
cwtl
dec
aas
mov
sub
xchg
xchg
xchg
inc
mov
push
mov
xor
faddl
xor
inc
sbb
scas
cwtl
movb
cmpsb
sbb
push
xlat
ljmp
in
mov
aaa
movsl
sbb
mov
std
jne
sbb
mov
push
jl
push
lret
sbb
mov
sarl
push
mov
das
mov
cld
push
dec
fadds
jae
lahf
popa
inc
inc
in
push
mov
lcall
xor
rorl
inc
or
xchg
aas
pop
xchg
inc
jge
movsb
int
mov
outsl
pop
out
and
pop
jmp
gs
add
shll
xchg
push
and
xchg
rorl
sub
test
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
xor
cs
out
hlt
pop
loopne
mov
cmp
cmp
xchg
mov
loope
lds
push
fstpt
cmp
in
inc
sbb
inc
cmc
mov
stc
push
stc
push
cmp
sti
sbb
or
pusha
les
loop
sbb
daa
or
pop
insl
and
or
sub
das
xor
pop
stos
mov
outsb
outsb
mov
aad
lock
mov
push
mov
mov
push
test
in
or
popa
shrb
jns
scas
sbb
testl
and
test
jo
inc
clc
ds
push
fsubrs
mov
ss
ficomps
cs
cmp
pop
fbld
add
in
pop
xchg
call
cmp
xchg
sub
cli
std
clc
incl
std
mov
lock
jb
jo
xchg
cmpl
push
sub
mov
outsl
les
sbb
imulb
cmc
sbb
cli
repnz
and
sub
mov
ficoms
mov
and
test
das
inc
jae
sub
jnp
inc
loop
mov
sahf
sub
pop
loope
adc
add
jae
outsb
ja
mov
sub
dec
mov
shlb
int3
add
stos
push
mov
in
adc
jns
mov
or
sub
sti
pushf
ljmp
subw
jne
cmc
push
xchg
in
mov
jbe
mov
dec
cli
cli
or
sub
sbb
aad
adc
out
mov
enter
clc
sbb
in
ja
sub
mov
fstpt
mov
popl
out
test
scas
lahf
pop
xlat
mov
adc
cli
mov
mov
lret
mov
lret
sti
pop
rcll
fcomps
cmp
repz
mov
xchg
scas
pop
fwait
aad
add
xchg
orb
es
xchg
rorl
roll
lcall
addb
in
xor
daa
xchg
test
jo
outsl
mov
nop
lds
int3
insb
pushf
outsl
inc
mov
dec
add
pop
enter
mov
dec
add
push
nop
dec
ret
sub
xor
test
mov
add
fdivs
sub
into
sub
fdivrs
or
fwait
popa
test
jle
jmp
fisttpl
pop
arpl
cmpsl
rdpmc
mov
mov
sub
mov
in
pop
push
imul
dec
dec
push
test
ret
jo
shlb
sbb
or
scas
pop
push
and
aam
adc
aam
es
scas
mov
mov
inc
pop
mov
daa
mov
xorb
lods
cld
push
loop
and
jmp
test
ljmp
sub
nop
in
mov
out
into
push
push
mov
arpl
pop
mov
sbbb
pushf
or
jnp
sub
pop
mov
in
jo
adc
out
inc
sub
js
fnsave
pop
hlt
mov
hlt
push
pop
sub
xchg
add
lret
cltd
or
jbe
stc
push
mov
lods
pop
pop
push
das
imul
and
repnz
stos
in
ret
dec
and
mov
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
and
jl
xor
jl
jg
jns
xchg
sbb
mov
movsl
jae
hlt
cltd
mov
icebp
cs
dec
push
sbb
imul
iret
mov
jge
bound
popa
xchg
rcr
mov
pop
ss
cs
into
add
fiaddl
test
cld
filds
sub
loope
adc
jae
stos
jne
dec
test
pop
mov
loope
inc
push
out
sub
push
aaa
jmp
cmp
mov
push
mov
std
leave
xchg
in
loopne
and
fnstenv
pop
loop
cmp
add
addb
xchg
in
js
sub
and
xchg
into
lea
jp
jge
xchg
inc
fiaddl
lret
add
in
hlt
fwait
imul
ss
mov
sti
jb
add
inc
mov
int3
sub
xchg
in
sub
cmp
pop
cmp
cwtl
pop
push
lock
insl
cmp
dec
adc
fs
loopne
outsb
cmp
and
adc
xstore-rng
cmpsl
sbb
inc
sbb
leave
xor
fs
xchg
sbb
aaa
loop
jecxz
mov
cld
cmpsl
mov
es
or
insl
pop
add
dec
jecxz
xchg
and
add
mov
roll
xchg
sub
jne
in
aam
aas
ds
rorb
arpl
loop
clc
xlat
ret
lret
in
sahf
out
dec
and
xchg
enter
movsw
mov
int3
rcrb
insl
cld
cmp
xchg
je
push
test
dec
das
adc
mov
xor
adc
aad
bound
iret
push
imul
mov
clc
xchg
mov
xor
mov
int
in
mov
subl
push
xor
in
rol
icebp
aam
and
dec
jle
sbb
lahf
sti
cld
rclb
out
pop
sbb
leave
fidivrs
sub
les
jbe
jp
xchg
dec
mov
xchg
cmc
pusha
insb
leave
inc
imul
or
sub
mov
pop
lret
fmuls
fnstenv
ljmp
inc
push
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
nop
popa
sub
jl
xor
jl
pop
jmp
icebp
inc
mov
daa
jg
cmp
sahf
xchg
lcall
mov
fisttpl
xchg
dec
inc
test
adc
xrelease
jmp
push
unpckhps
ljmp
es
push
ja
jns
testl
or
adc
call
fldenv
dec
nop
loop
subb
outsb
inc
scas
jecxz
pushl
xor
subb
cmpsb
sbb
add
adc
push
and
hlt
xor
pop
shrb
ret
repnz
aaa
mov
mov
jo
int
dec
fs
sbb
push
xor
mov
in
outsb
in
stos
sub
cmp
movb
add
cld
jae
mov
sbb
xchg
gs
inc
int3
dec
mov
stos
push
push
in
mov
mov
sub
lea
cli
loope
test
xchg
add
pop
jno
xchg
push
mov
icebp
int
adc
subb
push
mov
out
arpl
cmp
fsubs
jnp
into
or
pop
in
mov
cmp
cwtl
jmp
mov
sahf
pusha
dec
lret
adc
mov
int
cmc
mov
mov
stos
pop
mov
inc
bound
loop
add
pop
fiaddl
call
dec
inc
mov
jle
loopne
test
bound
pop
dec
sarl
adc
mov
ds
cmpsl
test
xor
push
mov
out
es
push
call
call
mov
out
repnz
add
loope
ljmp
std
dec
mov
lret
inc
frstor
lcall
fsubrp
xor
xchg
rcr
cwtl
jno
das
rcll
sub
rcl
sub
mov
mov
outsb
test
jns
jb
leave
xchg
repz
addb
imul
pop
orb
xchg
push
mov
jmp
or
mov
jo
xchg
jmp
push
test
xchg
jl
enter
sahf
div
loopne
push
ret
dec
mov
push
das
rolb
mov
jo
adc
mov
roll
hlt
push
mov
enter
inc
cmp
mov
mov
and
ja
fs
stc
cli
insl
mov
lock
inc
xchg
xor
negb
cltd
jge
imul
or
and
ljmp
enter
insb
dec
jp
call
xchg
ror
jns
or
fstl
xor
les
repnz
loope
aas
xor
loope
push
jmp
jle
sbb
stos
jb
lods
cmp
mov
int
aas
cmp
jns
inc
mov
jl
imul
enter
cld
stc
xor
dec
aas
sbb
fiadds
jae
lret
pop
xchg
cmpsl
into
sbb
ljmp
lcall
xchg
std
cli
es
mov
add
adc
sub
sub
or
lods
pop
lock
dec
cltd
stos
in
fdivrl
jns
push
jmp
xchg
pop
mov
lcall
jns
dec
stc
fldt
adc
add
mov
sbb
popf
fs
bound
dec
hlt
adc
in
cli
xchg
sbb
mov
or
sbb
or
xchg
jecxz
sbb
mov
xchg
insl
mov
cmp
push
mov
add
fdivl
loopne
shlb
je
push
sub
mov
xor
in
rclb
addr16
or
mov
mov
cld
sbb
pop
cmpsb
dec
or
xchg
cmp
push
js
inc
jnp
sbb
lods
inc
call
lret
test
add
jecxz
inc
cmc
fmull
aaa
daa
or
and
loop
daa
pushl
push
imul
or
pxor
mov
mov
push
test
out
cmpb
lods
and
xchg
montmul
cmpsb
add
or
sarl
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
or
pusha
sarl
jl
sub
jne
mov
xorb
lret
fcmovbe
ret
fs
jle
iret
in
movsl
mov
pop
jo
xchg
jmp
push
clc
ficomps
test
mov
mov
mov
repnz
loopne
stos
call
mov
xchg
jmp
es
cmp
mov
xor
sbb
scas
ret
rol
nop
sub
cmpsb
sar
mov
cs
int3
in
mov
fprem1
jb
mov
fistl
repz
addr16
and
fwait
jecxz
aad
fisttpl
notl
sbb
test
dec
cmc
dec
call
stc
sub
dec
cli
mov
dec
fistpl
adc
adc
dec
inc
mov
ret
loopne
fisubs
outsb
inc
das
sub
adc
cwtl
xchg
jno
stc
pop
adc
outsl
jp
push
movsl
enter
mov
ljmp
pop
pop
cmp
fsubp
adc
xor
sub
adc
push
mov
mov
subb
cmp
aad
xor
les
mov
aad
lods
add
in
adcl
mov
adc
mov
in
xor
test
jb
sub
pop
and
cmp
cmpsl
inc
and
push
rcrb
sub
sub
cmp
xchg
adc
adc
push
outsl
adc
adcl
lret
fnstenv
stc
inc
dec
mov
cltd
sbb
lret
js
jno
inc
cs
push
add
xor
mov
inc
scas
inc
in
sbb
scas
cmpb
pop
stc
pusha
inc
loopne
popa
dec
jmp
mov
loope
dec
ret
mov
ror
and
pop
sbb
lds
pop
ficoms
mov
or
adc
xor
mov
pop
leave
fcoms
mov
repz
sub
sbb
ud1
sbb
mov
int
xchg
mov
icebp
mov
out
fidivrs
cmp
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
ret
xlat
jns
jl
mov
pop
mov
cmpsl
cmpl
pop
xchg
jne
mov
pusha
and
jle
cmpsb
stos
shrl
enter
fsubrs
and
pusha
add
fadds
arpl
mov
into
filds
aas
movsb
imul
inc
xchg
mov
lea
sub
cmpsb
scas
xchg
mov
sahf
cmc
test
mov
test
sahf
gs
aad
mov
ds
fldt
mov
sub
push
lods
loope
out
inc
and
cmc
xor
idiv
mov
jg
out
repz
cltd
pop
jmp
dec
sbb
fcomip
aas
and
das
push
xchg
push
inc
ss
lret
adc
dec
jnp
xlat
shlb
hlt
xchg
sub
add
cmp
mov
cmp
jge
repnz
aad
mov
andb
mov
sbb
movsb
add
stc
loopne
rorl
stos
xchg
mov
hlt
stc
and
call
in
adc
push
adc
popa
mov
je
push
lds
repnz
mov
fldt
orl
out
ficoms
gs
mov
lods
adc
push
jecxz
xchg
inc
jl
ds
sti
jne
mov
mov
les
mov
push
add
addb
push
add
cmpl
adc
arpl
repnz
jae
jbe
jb
xchg
sbbb
fs
pop
jns
loopne
enter
xor
sbb
xor
push
jmp
push
or
and
cmp
lahf
movsb
jecxz
dec
ret
inc
jne
xor
xor
rcrb
mov
cltd
cs
dec
div
push
addl
stc
dec
push
push
pop
mov
xchg
int3
hlt
or
sbb
lret
int3
test
shlb
cmc
sahf
subl
adc
push
fs
push
jbe
xchg
repnz
sub
out
test
inc
and
cmp
dec
pop
stos
leave
xlat
sarl
sub
fldt
mov
or
sub
insl
shlb
push
jns
imul
cltd
mov
mov
xchg
xlat
mov
out
mov
jge
add
dec
mov
mov
jo
pop
movsl
push
lds
mov
out
xchg
sub
mov
aam
sbb
xchg
je
jno
pop
cmp
dec
add
loop
insb
push
addl
ljmp
lods
inc
jne
in
xlat
movsl
adc
add
lret
pop
xchg
push
xchg
jecxz
mov
sub
scas
insb
sbb
jecxz
or
lods
and
fisubrl
jg
idiv
insb
and
add
insl
cmp
xchg
cmp
push
mov
loop
cmp
popf
add
jo
push
in
std
lds
pop
sub
xchg
jp
xor
test
sahf
xchg
push
aaa
xchg
xor
cmpsl
in
mov
push
push
or
mov
loopne
adc
jge
mov
pop
repnz
dec
xor
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
sti
dec
sarl
jl
jns
jl
sub
lahf
dec
fimull
fwait
js
dec
std
or
cs
pop
rorl
fmuls
roll
jne
xchg
pop
les
aas
mov
ret
inc
mov
sub
mov
xchg
in
sarb
push
rol
scas
daa
aad
inc
insl
fisubs
and
movsl
int
sahf
data16
lahf
xor
test
mov
stos
mov
gs
sahf
push
insb
xchg
sbb
pusha
inc
push
adc
push
std
sbb
jbe
ljmp
es
xchg
inc
dec
sub
lds
sbb
cli
lcall
sarb
daa
or
pop
ficomps
ljmp
bound
push
cs
test
inc
ficoms
test
and
in
xchg
aas
lods
pop
or
xadd
jno
push
aaa
push
movsb
xorb
leave
mov
mov
and
and
js
fldt
or
lret
divl
aas
repnz
addr16
add
push
cmp
fcomip
test
test
sahf
mov
sbb
in
or
loope
shll
sbb
xchg
mov
clc
cmpsl
in
enter
add
push
jae
call
jnp
push
cltd
sub
sar
in
fadds
lahf
mov
or
std
or
sub
sbb
push
push
es
cmp
in
push
imul
xor
loop
fistl
cltd
pop
or
loope
leave
dec
xchg
ficoms
loopne
dec
adc
les
mov
pop
imul
fsubl
das
add
addr16
scas
enter
or
jmp
jge
sub
or
icebp
mov
sub
ja
push
xlat
mov
stc
jl
mov
icebp
add
push
jno
jmp
xor
inc
ljmp
push
adc
adc
inc
push
loopne
movsb
pop
sub
dec
ss
dec
xchg
push
mov
dec
das
fstps
mov
or
inc
imul
out
adc
cltd
push
es
imul
xlat
incl
call
sbb
push
adc
outsb
xor
orb
adc
xchg
push
leave
popf
lret
dec
jp
xchg
cmp
pop
mov
adc
mov
icebp
imul
push
add
out
data16
mov
std
lret
jle
push
mov
aam
arpl
xor
out
jl
clc
dec
loopne
dec
push
jb
daa
dec
xchg
sbb
es
inc
lret
mov
loop
push
inc
adc
test
addb
clc
call
and
mov
cmpsb
out
sub
in
sub
pop
cmp
lds
pop
mov
or
sti
sub
and
pop
push
call
or
int
and
cld
push
fcompl
inc
inc
repz
cmpsl
lds
bound
add
pop
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
mov
enter
jns
jl
xor
jne
add
mov
pop
dec
loopne
xor
pop
dec
add
repnz
in
scas
pop
sub
pop
inc
push
fmull
ret
sub
jo
movb
lret
stos
push
rorl
mov
out
cld
xor
aas
add
push
stc
mov
mov
inc
jmp
out
sti
dec
fdivl
or
and
inc
icebp
jl
jbe
dec
inc
sti
cld
outsl
idivl
xchg
bound
mov
iret
mov
imul
cmp
mov
sub
push
fbld
xchg
adc
push
jmp
push
cmp
xor
out
sahf
loopne
dec
jle
pop
pusha
jbe
xor
push
jae
inc
pop
dec
pop
sbb
jecxz
push
loope
jo
int3
rclb
jae
push
dec
rcr
mov
dec
clc
ljmp
xor
ja
test
fs
mov
xor
cld
adc
or
jmp
test
or
pop
adc
subl
out
mov
daa
movsl
outsb
and
in
mov
jnp
adc
dec
call
and
movsb
ret
add
insl
pop
out
pusha
sbb
xchg
add
cmp
xchg
lods
lea
ljmpw
aaa
leave
adc
cmp
adc
jp
dec
mov
cmp
andl
mov
cmc
and
xchg
ficoml
sti
les
mov
and
cmp
in
adc
lret
mov
mov
xchg
jbe
in
push
jecxz
mov
dec
xchg
push
inc
jbe
gs
mov
psubd
icebp
jge
in
pop
lret
btc
outsl
mov
faddl
sti
pop
cmp
cwtl
cmp
movl
shlb
pop
arpl
xor
mov
in
in
push
dec
mov
jmp
bound
or
stc
jp
jecxz
and
push
ret
pop
mov
sbb
mov
mov
fsub
jl
cwtl
and
roll
push
push
or
adcb
inc
xchg
jae
stos
and
sub
aam
es
sahf
pop
cmpsb
pop
sub
outsl
push
lret
mov
mov
xchg
cmp
scas
js
scas
out
stos
dec
mov
fs
sbb
arpl
pop
test
sbb
bound
mov
cmpsl
and
mov
lods
jle
negb
lret
add
fldenv
in
fwait
shl
jo
jb
fwait
test
xchg
xchg
sbb
dec
mov
out
ror
inc
mov
jl
xor
imul
cmp
adc
push
test
fcmovnbe
xor
xor
inc
xor
xchg
popf
cmp
bound
fstpt
pop
lods
lods
xor
popa
bound
dec
sbb
ljmp
and
jno
pusha
mov
aaa
loopne
aam
mov
inc
test
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
jno
sub
jl
xlat
jns
jl
js
jge
lock
mov
sbb
insl
or
das
dec
sub
stos
and
mov
pop
fmuls
ss
pusha
mov
or
ud1
or
cmp
mov
adc
jecxz
inc
pushf
and
in
mov
jae
or
mov
sbbb
ss
inc
shlb
mov
xor
scas
mov
in
lock
and
shll
dec
dec
repnz
loope
sarl
and
aam
aaa
mov
push
frstor
jbe
jl
lock
data16
ja
lods
xchg
jno
jmp
push
pop
dec
and
mov
fs
int
push
fs
cmpsb
cmpsl
imul
mov
je
cmpsb
rorb
pop
pushf
or
mov
sbb
outsb
push
cmp
push
or
fbstp
jbe
dec
jnp
and
inc
mov
in
sub
mov
lods
out
outsl
inc
add
bound
mov
fsubrl
mov
push
inc
mov
arpl
push
js
out
and
or
xor
gs
xor
xor
addr16
inc
jle
aaa
cmc
xor
sti
pusha
stc
xorl
xchg
in
adc
sahf
sbb
and
push
paddw
test
sub
lds
repz
inc
fwait
sbb
imulb
mov
sub
push
mov
jg
dec
pushf
cmpsl
ds
lcall
repnz
imul
pop
adc
rcl
mov
push
data16
mov
jge
in
jge
pop
xchg
or
repnz
mov
rcrl
add
xchg
inc
xchg
clc
xchg
push
and
lret
fisubs
xchg
sbb
sub
cmpsb
lahf
and
pop
imul
cmp
adc
add
cmpsb
scas
or
sbb
je
lcall
jp
inc
inc
push
dec
dec
push
mov
loop
ret
scas
icebp
dec
es
enter
or
or
outsl
mov
rcrl
and
int3
pop
or
lods
je
cmp
dec
dec
sahf
jl
mov
js
hlt
xlat
jo
js
mov
popa
movsb
cwtl
nop
adc
add
jo
adc
mov
js
xchg
sub
test
cmpsl
iret
xor
popa
loope
pop
mov
push
push
rcll
mov
adc
lds
dec
call
pushl
bound
cmpsb
jnp
sti
push
mov
xor
xchg
je
jo
mulb
aas
push
jl
shll
jle
sbb
mov
ret
ds
ljmp
pop
idivl
ret
cmp
dec
sub
mov
sub
lods
push
sbb
in
scas
ja
sub
push
fdivr
addb
mov
mov
addr16
loopne
jns
or
pop
stos
das
pushf
add
mov
push
stos
and
cs
popf
stos
and
test
cmp
call
adc
xor
pop
jmp
cwtl
mov
mov
or
insl
popf
adc
jns
jl
push
out
mov
jb
shrb
hlt
dec
pop
sub
pavgb
and
fdivrs
repnz
repz
lods
mov
pop
lcall
decb
mov
icebp
sahf
or
or
jp
ss
xchg
pushf
mov
jmp
insb
cmp
shlb
cmp
push
mov
pop
leave
dec
or
xor
mov
xchg
push
in
testb
dec
movsb
mov
jae
mov
stc
rcll
mov
push
aad
or
or
loopne
loop
and
push
pop
scas
mov
in
movsl
mov
dec
je
xor
xor
hlt
js
cmpsl
call
push
xchg
adc
mov
lods
lods
repnz
adc
fisubl
sbb
loop
jg
push
push
data16
adc
jnp
ss
xchg
shlb
mov
xchg
xlat
dec
or
in
ficompl
mov
icebp
jl
aaa
mov
lea
jae
push
int
lock
roll
cmp
mov
add
sbb
lahf
xor
fidivs
inc
cmc
outsl
push
out
mov
xchg
mov
call
cmp
gs
data16
jg
cmp
inc
jo
ret
repnz
les
jno
bound
test
inc
movsb
movsb
sarl
jl
shlb
cltd
repnz
cli
shlb
stc
test
push
add
imul
add
nop
in
dec
fisubl
setae
jb
dec
pop
jmp
lret
inc
cmp
fidivl
hlt
test
xchg
pop
add
sbbl
dec
xchg
adc
pushf
movsb
lds
mov
fbld
outsl
inc
std
test
lods
cmp
pop
popa
jns
or
or
inc
mov
loopne
js
and
rcll
dec
rcrb
xchg
cmc
mov
sbbb
iret
mov
pop
xchg
adc
stos
pop
and
je
fldenv
inc
insl
test
sahf
lds
hlt
ljmp
aas
sub
or
repz
lea
mov
or
add
cmp
xchg
stc
adc
or
adcl
adc
ret
das
fldt
sub
dec
test
shr
pop
call
fisubs
call
push
fcmovne
pop
cmpsl
fiaddl
mov
mov
xlat
cmc
filds
arpl
cmpsb
pop
in
cbtw
xchg
mov
pushf
or
and
xchg
repz
jecxz
add
test
mov
outsb
push
addl
xchg
ret
pop
js
int
mov
xor
lds
jbe
xchg
idivl
jno
cmp
inc
out
lret
shrl
orl
jbe
shlb
cmp
add
adc
mov
in
lret
pop
xchg
xlat
lret
jbe
fisttps
pop
int
int
xchg
icebp
cmp
in
fwait
sub
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
dec
jae
pop
sarb
jns
jl
rcll
rorb
mov
xorl
or
loope
data16
movsl
adc
push
add
add
ds
sub
mov
bound
imul
xchg
outsl
push
call
out
lods
cwtl
push
aam
xorl
dec
sbbl
outsb
ja
inc
je
mov
rolb
dec
in
test
mov
movb
lea
sbb
xor
adcb
mov
or
test
jle
inc
ljmp
sbbb
jbe
xorb
cltd
xchg
pop
pop
data16
movswl
bound
inc
jg
push
xor
clc
fisttpl
inc
mov
inc
inc
sbb
cmpsl
ret
jo
pop
dec
add
das
scas
test
popf
jbe
push
mov
add
push
lods
cmpsb
movsb
test
in
cmp
es
jle
popf
xlat
mov
lods
mull
shrb
mov
imul
sbb
andl
push
ret
xchg
jmp
mov
mov
out
and
jns
sti
adc
cwtl
sub
jecxz
dec
aad
nop
popa
fidivrl
insb
xor
sbb
fists
pushf
iret
adc
scas
sub
mov
mull
jb
popf
pop
shl
leave
scas
jno,pt
xor
es
out
mov
xor
sbb
xchg
in
and
or
adc
dec
mov
aaa
test
inc
and
xor
adc
sti
pop
mov
test
imul
dec
xchg
mov
jmp
adc
in
scas
lcall
xlat
sbb
add
insl
mov
inc
lcall
add
aaa
xchg
cmpsb
sbb
inc
cmp
imul
ja
daa
ret
outsl
popl
test
out
mov
mov
mov
test
fistpl
das
xchg
div
pop
mov
pusha
dec
call
shrb
xor
dec
xor
inc
adc
out
push
mov
cmpsb
shl
mov
movb
inc
xlat
dec
xchg
cs
in
pop
data16
inc
cmpsl
dec
scas
das
test
daa
loope
neg
adc
cmp
sub
aam
mov
iret
stos
mov
add
adc
std
loope
or
or
orb
std
ds
sbb
ffreep
mov
js
out
dec
push
pop
dec
cmp
mov
cltd
xchg
dec
add
rcr
pop
jecxz
in
test
arpl
xchg
sub
ss
fstpl
lock
fdiv
sub
ljmp
push
mov
lods
push
pusha
loopne
pop
cmp
insl
fwait
mov
push
mov
movsb
repnz
orl
lds
lock
sub
int
insl
add
ret
cmc
ret
movsb
imul
imul
mov
ss
fldl
pop
pushf
cmpsb
push
daa
imul
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
aam
adc
xor
jl
xlat
jns
jl
imulb
mov
int
jp
sub
ret
push
aas
xlat
push
and
and
cmpsb
icebp
popf
arpl
sub
mov
out
sbb
out
in
dec
pop
mov
mov
dec
testb
pop
xchg
movsl
mov
mov
outsb
dec
mov
minps
aaa
or
mov
mov
mov
mov
mov
dec
loope
bound
or
or
movsb
push
aas
and
test
adc
pop
jmp
lds
sub
pusha
outsl
jbe
jbe
push
out
cmp
add
add
inc
jle
or
xchg
addr16
jge
call
fyl2xp1
orl
xlat
lods
pop
das
in
push
cwtl
loope
test
add
push
pop
mov
mov
fimuls
iret
sub
movsl
sbb
lret
mov
xor
fwait
jl
inc
mov
inc
fucomp
push
mov
cmp
pop
test
mov
add
insb
adc
scas
or
leave
std
les
int
xchg
not
cmp
data16
push
jge
in
mov
test
js
lods
inc
xchg
in
mov
sahf
push
popa
in
pop
mov
add
lret
insl
cmove
jl
clc
icebp
rolb
jo
pop
loop
sti
out
lahf
jo
inc
gs
test
mov
lds
outsl
sub
inc
add
les
cmpsb
or
lea
adc
clc
out
testb
mov
popa
xchg
or
fistps
cmpsb
jge
push
inc
and
js
inc
sbb
arpl
out
clc
or
dec
repnz
pop
pop
mov
or
stc
arpl
xchg
call
adc
xchg
cld
inc
enter
dec
jne
sti
sub
mov
notb
fwait
inc
fdivp
aaa
lea
push
add
push
xor
roll
xchg
mov
rcrl
xor
aas
pop
add
cmp
jne
lcall
mov
push
dec
cmp
pop
sbb
mov
data16
mov
xchg
dec
dec
or
mov
cmp
in
jg
out
fmuls
jp
stos
shll
cmp
inc
movsb
push
push
xchg
lods
cld
sub
pop
pop
jb
lcall
jne
loopne
inc
pop
iret
mov
sbb
jge
lcall
jns
mov
pop
mov
mov
or
or
popa
sub
jns
fnsave
xchg
jne
test
xchg
test
sahf
iret
aaa
mov
mov
rcll
je
sub
gs
js
mov
inc
fldcw
add
cmc
sarb
daa
jae
pop
pop
loope
mov
xor
insl
cmp
pop
push
sub
movsl
dec
xchg
mov
out
xor
sbb
cmpsb
cmp
dec
fisubl
xchg
test
pop
cmp
aam
gs
pmullw
xor
int
jge
xor
xchg
mov
lods
jp
xor
cmp
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
xchg
mov
xchg
fstpt
jns
jl
mov
xchg
add
pusha
dec
cmp
pop
or
sub
imul
fstps
addr16
xor
adc
or
push
xor
mov
mov
lea
mov
sub
aam
sbb
js
jae
adc
mov
iret
scas
loopne
jns
stc
push
add
aad
mov
loop
sub
fcoml
mov
inc
sbb
push
lods
das
mov
cmpl
and
mov
jns
push
mov
xchg
dec
mov
inc
inc
std
loop
mov
adc
pop
rorb
cmc
fsubrs
je
out
movsl
and
cld
jmp
cmpsl
loopne
inc
dec
push
scas
sbb
arpl
orb
push
fwait
mov
sub
fimull
dec
or
cmp
or
rclb
mov
adc
aam
xchg
inc
inc
dec
sti
and
add
fcmovb
sbb
xchg
in
dec
call
leave
inc
mov
push
jbe
lret
jbe
call
out
xchg
mov
stc
cmpsb
loop
fistpll
inc
stc
enter
lret
cwtl
pushw
pop
sub
std
jns
mov
push
arpl
lds
sahf
negb
push
std
mov
movsl
lret
fcomps
pop
data16
cmp
jne
cmp
sub
jmp
xor
pop
pop
ffree
int3
test
xlat
xor
push
dec
inc
add
leave
lds
scas
jmp
adc
inc
popf
push
mov
inc
sub
lret
dec
dec
divl
mov
imull
notb
push
add
inc
out
pusha
push
lods
lret
cmp
xchg
rsqrtps
out
test
xchg
js
aam
dec
in
jg
notl
pop
jle
fmuls
jo
ja
pusha
xchg
pop
mov
aas
jmp
shrl
mov
pop
stos
nop
mov
popa
and
inc
test
jb
imull
xchg
cmp
mov
test
add
cmp
lcall
in
dec
ds
mov
movsb
xor
push
xorl
mov
shrb
xor
jge
push
fwait
clc
mov
cltd
cmp
pop
inc
adc
xchg
jmp
movsl
imul
mov
and
mov
dec
mov
gs
adc
aad
mov
jl
mov
fwait
into
arpl
pop
lret
add
cmp
cltd
jae
clc
int
repnz
arpl
gs
lret
inc
insb
cli
adc
add
jecxz,pn
mov
pop
fstl
cmp
xlat
imul
stc
mov
out
mov
sbb
in
cld
inc
fwait
push
sub
mov
pushf
aaa
std
repz
test
stos
test
in
inc
mov
in
cmp
xor
inc
pop
and
inc
or
xchg
negl
cmpsl
insb
jns
out
aas
jecxz
jbe
shll
xchg
push
ret
pop
mov
jecxz
add
add
mov
loopne
push
clc
mov
xor
jmp
inc
pusha
sub
sub
fwait
das
jae
insb
in
jl
jns
jl
mov
mov
dec
xchg
pop
or
jecxz
jae
push
xor
inc
sahf
cli
call
pop
in
mov
in
loop
repnz
sub
lods
ficomps
mov
cwtl
enter
lea
in
jl
add
fdivp
mov
mul
adc
push
out
sub
addr16
insl
jae
xor
sub
mov
insb
and
and
enter
scas
or
test
cmpsb
adc
pop
dec
add
jne
sbb
cmp
bound
and
ja
inc
push
test
mov
movsl
mov
lcall
fnstenv
movsl
lods
xor
enter
adcb
pop
stos
sub
daa
cmpsb
scas
adc
and
das
and
add
test
dec
fsts
inc
lock
ret
cmp
jmp
mov
and
sbb
push
dec
xor
dec
push
xchg
fcoml
mov
mov
xchg
ret
rcrl
scas
xchg
jg
loop
xor
lret
jbe
mov
sub
sub
and
mov
add
mov
call
xor
loopne
cmp
outsb
add
ja
add
push
push
mov
xchg
ficompl
xor
or
and
lahf
and
push
hlt
aaa
test
jmp
adc
adc
je
or
je
fs
in
faddl
int
cmp
sub
cmc
mov
aad
mov
in
repz
lea
shll
dec
add
or
xchg
push
inc
repnz
aad
das
xor
add
fisubl
lds
scas
xchg
mov
ja
mov
outsb
les
or
mov
js
es
mov
or
ret
js
sub
xlat
push
inc
lcall
push
push
inc
push
mov
daa
popa
pop
outsb
lods
and
jno
push
pop
shll
lcall
or
and
dec
sub
rolb
push
je
mov
cmc
or
adc
sbb
int3
sbb
add
xchg
add
and
dec
fwait
pushf
push
xor
pop
out
adc
cmp
adc
in
mov
mov
hlt
fsts
arpl
out
pop
int
sbb
lock
cli
pop
gs
in
je
and
sub
roll
lea
data16
sbb
xchg
or
or
mov
inc
inc
xor
lock
add
lds
in
adc
int
repz
xor
hlt
cltd
cld
movsl
xchg
insl
cli
mov
fisubs
popf
mov
aaa
clc
inc
mov
adc
js
aad
push
lods
mov
insb
iret
jnp
bnd
push
pop
dec
loope
fs
stc
int3
lods
inc
aad
xor
dec
pushf
add
imul
xlat
aas
xlat
repz
sub
cmp
cmp
mov
sbb
xor
pop
int3
pop
inc
jnp
xor
xor
mov
adc
pushf
rclb
imul
sub
jmp
or
jb
mov
push
sbb
add
loopne
jl
jns
jl
scas
push
xor
jg
dec
and
pusha
mov
aad
inc
je
or
inc
sub
je
enter
fistps
mov
out
daa
mov
nop
testb
dec
pop
xchg
and
outsl
sbb
and
sbb
fwait
dec
and
pop
push
mov
pop
bound
arpl
and
jne
in
jno
sahf
mov
or
arpl
loop
xor
add
dec
pop
movsb
mov
push
cwtl
imul
pop
xchg
imul
aas
insl
shrb
mov
jne
scas
push
in
test
inc
mov
test
sbb
loope
xchg
pop
cwtl
jl
pop
daa
push
enter
and
mov
js
cmp
lods
mov
iret
lock
cmp
ret
inc
push
jns
daa
xor
sti
sbb
imul
aad
pop
aas
xor
test
loope
xlat
or
dec
rcrb
fwait
dec
sub
xlat
mov
faddl
pushl
mov
push
cmovge
sbb
mov
in
sti
movsb
push
loop
jmp
sub
adc
jp
jl
ret
inc
xorl
adc
push
cmp
dec
mov
lcall
ss
andl
out
mov
or
movsl
cmp
loop
push
aad
movsb
xchg
sub
cmp
xchg
les
adc
cwtl
test
inc
rcrb
pop
dec
jecxz
mov
add
push
mov
xchg
dec
in
test
orl
mov
out
mov
xor
xchg
dec
pop
xor
mov
push
test
in
cmp
aaa
sbb
mov
movsb
mov
stos
rcrb
lret
xchg
shrl
add
test
mov
add
cltd
sub
pop
fwait
rcr
mov
out
sub
dec
jg
rcrb
aad
in
out
jnp
sbb
cmp
pop
lahf
pop
cmp
pop
mov
testb
mov
mov
xchg
mov
or
dec
xor
mov
pop
icebp
ja
mov
dec
jp
xor
data16
mov
mov
or
mov
cs
add
mov
hlt
fidivrl
cmp
xchg
insl
sub
dec
int3
push
call
test
jg
ljmp
fstpt
into
pop
jnp
mov
shr
push
out
stos
xlat
push
adc
jge
add
xor
push
xchg
mov
shr
xchg
add
jg
into
movsb
inc
or
inc
xchg
jne
dec
dec
jne
push
adcl
xchg
dec
inc
dec
push
lcall
test
rclb
insl
in
ljmp
lret
lods
mov
into
xor
xor
mov
jae
mov
cld
mov
xlat
rcrb
push
dec
mov
push
dec
sub
stos
jnp
daa
scas
cmpsl
dec
mov
js
fwait
ret
mov
aas
fwait
pop
add
cmp
sti
divl
inc
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
in
call
jl
adc
mov
stos
or
xchg
int
mov
push
es
data16
xchg
call
pop
xchg
or
shlb
jo
jnp
lret
lret
push
in
inc
imul
ret
sub
push
orl
popf
cmp
adc
mov
es
jecxz
inc
or
adc
fisubrs
sbb
xchg
loope
lds
cmp
sub
popf
addr16
lret
gs
ficomps
mov
hlt
mov
sub
sub
std
lahf
or
repz
xor
dec
mov
test
jmp
lock
sub
mov
jg
test
mov
daa
iret
out
fstpt
mov
pop
push
fistps
pop
xchg
mov
ljmp
xor
pop
mov
fisubrl
bound
push
popf
jns
dec
aas
call
lds
inc
xor
xchg
xor
pop
push
rorl
out
inc
add
or
add
adc
inc
popa
add
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
push
pop
imul
in
jl
adc
jns
inc
cmc
in
and
lods
rorb
popf
jp
adc
push
loopne
jbe
fwait
in
test
int3
add
or
dec
fadd
popf
or
adc
sbb
lea
fbld
aaa
in
inc
dec
imul
lret
mov
xor
xchg
and
pushf
push
and
pop
mov
jg
sbb
pop
ret
enter
push
mov
pop
mov
stos
dec
data16
cwtl
dec
xor
outsl
jnp
cli
pop
mov
repz
in
mov
xchg
add
cmp
cld
out
sub
test
add
std
je
mov
scas
nop
mov
ljmp
repnz
hlt
cmp
pop
xchg
inc
inc
loope
xor
pop
aad
mov
push
cmp
mov
add
push
fdivs
rorl
inc
jl
push
fcoms
mov
stos
lods
inc
inc
dec
mov
mov
lods
push
mov
cmp
add
xchg
add
add
test
add
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
mov
jle
dec
out
jl
adc
test
sub
loope
sub
or
xchg
mov
lea
push
inc
and
arpl
divl
iret
jp
shlb
xor
xchg
test
add
sub
imul
jl
std
gs
jmp
roll
and
dec
aam
movsb
dec
jg
test
adc
dec
push
push
mov
jle
rclb
inc
dec
jne,pt
add
daa
cld
mov
sub
sbbl
ss
int3
ret
out
cvtps2pd
imul
ss
xor
outsl
jle
fnstenv
dec
adc
sarl
outsl
out
cmp
outsb
dec
inc
xchg
in
push
dec
inc
mov
inc
adc
pop
pushf
mov
je
jbe
sbbl
or
fmuls
mov
repz
cli
and
dec
add
mov
or
push
gs
out
xchg
out
es
sbb
xor
adc
sahf
push
or
push
sbb
ret
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
jl
lret
jl
in
mov
xchg
or
mov
mov
cmc
hlt
mov
popf
push
push
popa
std
int
mov
push
xchg
mov
or
adc
pop
xchg
testl
jnp
mov
xchg
push
xlat
js
or
bound
repz
sub
loopne
mov
je
mov
mov
jl
shlb
ret
pop
xchg
cmp
imul
aas
jns
push
adc
cmc
imull
imul
enter
sub
test
pushl
lods
mov
enter
cmp
addr16
loop
or
or
jl
jae
mov
in
dec
movsl
enter
inc
lahf
or
mov
cmp
mov
xchg
mov
insb
add
xchg
enter
cmc
fmull
xchg
fwait
mov
xor
inc
dec
cmpsl
mov
pushf
inc
mov
cmpsb
fdivl
adc
and
add
cwtl
pop
leave
shr
push
ret
push
sub
push
ss
stos
cmp
dec
mov
in
sarl
stc
jae
xor
sub
lret
push
push
aad
rolb
push
and
hlt
rcrl
cmc
push
xor
mov
scas
lods
or
cmc
dec
adc
hlt
fwait
dec
xchg
mov
dec
jbe
adc
xchg
fnstenv
mov
push
push
mov
test
dec
mov
jne,pn
lods
gs
fnstenv
cmp
xlat
lahf
dec
xchg
fwait
mov
out
pop
mov
dec
cmpsl
pop
fucomi
xor
aas
xor
jge
insb
add
nop
mov
jbe
es
xchg
xchg
push
shrb
loope
aam
push
push
jmp
scas
push
push
andl
imul
and
insb
mov
das
xchg
in
mov
je
xor
test
push
or
pop
jnp
dec
int3
aas
pop
lret
fidivl
aam
dec
adc
adc
push
pop
or
insl
ret
add
push
loopne
mov
sbb
dec
adc
and
fnstsw
jle
mov
cmp
lcall
cmpsl
dec
pop
push
dec
xor
enter
add
jno
shlb
push
pop
cmpl
push
std
ficoms
ret
adc
cmp
pop
in
popf
sbb
movsl
push
dec
rolb
push
pop
iret
fnstsw
add
data16
sbb
ret
pop
sbbl
adc
mov
mov
jae
int
add
jo
cs
mov
cmpl
out
push
pop
pop
enter
pop
andl
mov
cli
jb
pop
add
in
mov
jle
fidivrs
xchg
call
loopne
testb
mov
adc
out
cmp
sbb
cld
sub
mov
xor
push
sub
jl
mov
call
push
push
mov
cld
jl
ja
in
jecxz
inc
fstps
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
jo
adc
jl
jns
jl
add
in
sti
dec
cli
test
push
shlb
daa
int
push
adc
cmp
call
int3
sbb
mov
xor
int3
sub
xchg
xchg
mov
dec
scas
out
cmpsb
data16
int
pop
sbb
jo
dec
imul
int
add
fmuls
je
loope
fbld
repnz
or
cmp
mov
jo
dec
pop
push
sub
cmc
imul
jae
mov
arpl
clc
pop
mov
cmc
and
fldt
dec
mov
sbb
jecxz
in
in
pop
popa
inc
fldt
lods
sbb
mov
imul
inc
mov
cmp
testl
bound
sbb
cmp
inc
test
sub
test
inc
incb
jge
sbb
lahf
test
push
rcr
xchg
cwtl
xchg
popa
ret
jg
cmp
sub
test
pop
mov
in
sahf
fwait
clc
shrb
pop
push
lock
add
cmp
mov
stos
mov
mov
lea
or
stc
and
or
add
and
push
lcall
cli
dec
dec
adc
adc
add
add
or
mov
ficoms
mov
sets
jle
popa
sti
stos
jne
inc
cld
test
aaa
popa
push
sarb
pushf
lret
fstl
inc
push
mov
xchg
movsl
add
mov
push
rcll
hlt
ja
pop
xor
cmp
cmpl
mov
lret
xchg
inc
fistl
adc
movsb
adc
mov
js
mov
jl
dec
addr16
pop
jb
mov
jo
testb
add
ret
fidivs
mov
xchg
es
adc
dec
xchg
cli
std
fimull
jmp
stos
xchg
or
xor
add
dec
push
or
testl
jle
int3
add
and
scas
test
jb
shr
add
mov
fldcw
std
test
inc
pushf
out
dec
cwtl
rol
add
nop
and
lds
enter
or
xor
pop
cmp
test
js
push
add
dec
push
ljmp
pushf
shl
xchg
jae
and
pop
sub
jae
std
sub
pop
pop
jl
dec
jne
out
add
add
inc
repz
xchg
loope
mov
stos
jnp
jl
adc
inc
add
inc
mov
xchg
push
and
lret
jmp
pusha
and
aam
jmp
sti
std
bswap
iret
xor
sub
cmpsb
sub
mov
adc
cli
jne
pop
out
or
cmp
or
sbb
pop
test
outsl
jbe
neg
jae
lcall
inc
cmp
popf
jecxz
add
mov
push
mov
sub
adc
or
fisubs
int
xor
xchg
or
inc
roll
pop
test
dec
or
mov
jbe
cmp
dec
mov
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
idivl
jns
jl
das
int3
push
sub
fidivrs
js
inc
cs
xor
ja
adc
add
and
je
test
sti
or
les
and
xchg
jge
push
dec
rclb
mov
std
std
mov
pop
cld
shlb
jb
dec
add
daa
push
and
add
imul
stos
movsb
pop
iret
cmc
xor
aam
fcompl
fisttpll
push
sub
cmp
adc
xchg
and
ja
bound
shll
adc
jg
imul
pop
adc
cmp
push
insb
aas
push
int
mov
pop
fidivs
lods
loope
jne
lret
pop
inc
mov
aaa
data16
xor
pop
out
add
loopne
add
jmp
cs
clc
test
stc
push
test
adc
hlt
cmpsb
pop
push
movsb
subb
jecxz
in
iret
jmp
jbe
hlt
imul
sub
jg
pop
xchg
xchg
lea
jmp
adc
cmp
arpl
sbb
pop
mov
lods
mov
fisubrl
pop
popf
jae
enter
sbb
sbb
xorl
ja
mov
dec
leave
mov
shlb
add
sbb
jge
pop
push
mov
gs
in
iret
jns
imull
sub
fdivp
inc
lret
sahf
sti
cs
sub
sarb
data16
sub
push
shll
xchg
or
add
les
pop
rclb
sbb
adc
iret
dec
std
cmp
in
xchg
xchg
push
push
fmul
mov
hlt
inc
bnd
inc
jb
dec
mov
mov
mov
or
cmp
jns
cmpsl
add
sub
negl
cld
lahf
pushf
fs
popa
stos
xlat
pop
jne
mov
test
adc
mov
out
repnz
push
sub
sub
jo
mov
inc
or
enter
fbld
arpl
cli
sbb
mov
push
or
ret
out
sub
or
frstor
mov
mov
xor
mov
fcompl
push
sub
lahf
fildll
icebp
test
adcl
enter
push
fdivr
ret
or
jo
ja
pop
les
mov
xchg
jns
push
add
jg
sub
out
sbb
cld
std
je
adc
out
cmp
sbb
pop
outsb
into
and
subb
dec
lcall
stos
adc
xchg
sbb
popa
xchg
and
pop
loope
and
jecxz
push
std
mov
sub
movsl
adc
mov
addb
push
jo
push
sub
cmpsl
jbe
mov
mov
mull
call
out
mov
fcompl
inc
sub
pop
inc
push
stos
je
fstps
aas
cmp
dec
dec
xchg
popa
cmp
inc
xchg
mov
pop
cs
ret
or
lods
dec
xchg
ficomps
mov
scas
xlat
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
add
cli
push
addr16
lret
jl
inc
pop
es
cmp
cmp
pop
out
sub
adc
imul
icebp
pusha
andnps
cmpsb
aas
dec
rcrl
sub
xchg
stc
lock
sub
ret
test
push
xchg
int3
repnz
lahf
fsubl
cmp
adc
shlb
mov
xlat
lods
xor
cmp
sbb
sub
ret
mov
jnp
push
pushf
jge
sub
ret
test
pop
movsl
sub
int3
loope
nop
mov
stos
shl
dec
cli
test
xchg
stos
add
jbe
mov
ret
repz
push
push
add
lahf
jmp
pop
mov
into
fildll
jecxz
dec
loop
mov
xchg
adc
xchg
sbb
pop
mov
pop
inc
jno
push
mov
add
popa
lods
shrl
mov
js
pushf
adc
in
ffreep
inc
xchg
pop
fdiv
sbb
out
cld
pop
sub
jb
cwtl
out
mov
inc
pop
or
repnz
pop
inc
test
in
nop
cltd
out
sub
or
ds
xchg
dec
xor
addr16
idivb
jo
jne
adc
add
rolb
jmp
leave
mov
lds
shlb
sarl
jae
pushl
dec
mov
mov
xchg
cld
xor
xor
outsl
cmpsl
jne
int
or
mov
sarl
jmp
jae
mov
stos
lcall
push
mov
testb
or
jns
adc
addl
push
lret
pop
sbb
movsb
ss
pop
and
test
push
add
imul
add
cmovnp
adc
insb
push
push
loop
jg
jp
cmp
push
mov
sbb
imul
cmpl
iret
add
fldlg2
push
or
rcr
stos
adc
in
lret
push
sti
jb
pop
xor
aaa
in
mov
test
nop
xchg
rcrl
inc
push
push
adc
popf
adc
jecxz
xchg
push
mov
push
pop
add
jno
pmaddwd
push
ret
popf
aas
roll
lods
ret
and
mov
into
or
mov
and
pushf
push
into
icebp
jae
testl
xor
pushf
lcall
out
push
in
jecxz
out
adc
sub
push
jmp
jo
out
lahf
aad
mov
mov
dec
cmp
orb
sub
push
pop
mov
enter
inc
push
mov
xchg
ss
dec
sahf
push
pushf
pop
vpshaq
addb
pop
sarl
out
icebp
dec
cmp
test
dec
into
inc
pop
rcll
pop
dec
dec
pshufw
fisttps
ret
stos
insb
jmp
sbb
getsec
pop
mov
xchg
jmp
add
sbb
sub
rorb
hlt
add
enter
xor
out
jnp
cltd
inc
sbb
xor
leave
pop
xchg
push
cmc
xchg
dec
ret
sub
pop
lock
inc
add
cmpb
shrb
les
adcl
stc
add
imul
mov
jmp
icebp
cs
ja
jno
mov
and
in
cld
jl
lret
jl
lcall
pop
lods
push
ret
rcll
loopne
sbb
mov
push
in
bts
jbe
movsl
int
les
mov
jnp
popa
pop
sbb
xor
jno
push
add
cs
insl
fstl
push
pushf
ja
shl
imul
int
or
fisttps
or
loope
jne
adc
mov
pushf
xchg
int3
repnz
sti
dec
stos
imul
or
mov
push
sbb
and
loope
jp
sti
push
in
fucomi
sub
add
out
adc
or
in
repnz
repnz
sti
es
sub
inc
push
xchg
push
addl
lret
lcall
dec
loopne
or
or
ret
cmpsl
jno
aaa
add
in
das
scas
jecxz
push
jmp
pushf
ja
enter
es
add
cld
xor
pop
cli
add
insb
loopne
in
lea
icebp
dec
arpl
lods
scas
stos
scas
adc
sbb
fsubrs
fs
sub
loope
adc
jle
popa
xor
pop
ja
imul
push
mov
enter
pop
add
mov
fcompl
clc
push
push
std
xchg
adc
sahf
add
fucom
in
or
push
mov
push
and
mov
mov
pop
iret
dec
xor
pushf
xor
lret
mov
cmpsb
cmp
add
push
mov
dec
xchg
mov
xor
or
and
fiaddl
xor
jmp
and
sub
pop
loopne
cmovg
inc
jb
fbstp
lods
xchg
ljmp
ljmp
shl
inc
mov
jb
stos
sbbb
push
out
int
out
lahf
aad
push
or
push
rclb
iret
cltd
and
mov
ss
sbb
sub
repnz
cli
pop
dec
push
aas
push
pop
mov
movsl
mov
jge
or
add
lcall
mov
jno
adc
stc
icebp
pop
xchg
out
hlt
xchg
sbb
std
fldt
bound
cmp
cmp
repnz
ret
inc
icebp
fcmovnbe
sahf
das
cmp
pop
push
add
js
push
scas
out
dec
ret
ja
sub
dec
aas
notb
out
out
inc
cmc
mov
pusha
rorb
outsl
lret
loope
je
les
lahf
or
xchg
movsl
leave
pop
xchg
push
cmp
pop
dec
dec
jmp
lds
imul
cmp
std
mov
mov
fldt
cld
enter
sub
jge
sbb
jge
outsl
dec
in
pusha
jl
ret
mov
cmp
or
mov
inc
sub
scas
movsl
lahf
xchg
pop
test
addr16
sub
dec
and
je
sbb
lea
sti
xor
add
push
cmc
leave
loopne
lret
push
addr16
aas
sub
and
add
mov
pop
jne
xchg
in
cmpb
pop
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fcom
xchg
es
mov
jl
lret
jl
or
daa
dec
vmwrite
push
outsl
test
popw
test
outsb
add
ljmp
cmp
fbstp
roll
movsb
jg
mov
out
mov
sub
push
fmul
mov
gs
rolb
loopne
mov
mov
hlt
and
popa
jo
mov
xchg
jno
inc
cmpsl
dec
or
loopne
jg
outsl
jb
push
cmp
iret
mov
mov
mov
ret
repz
xor
fdivr
mov
add
in
pop
loope
insb
pop
adc
fwait
mov
inc
mov
push
scas
arpl
or
inc
or
jecxz
testb
jnp
lods
add
xor
jae
cmp
mov
data16
jmp
add
ret
sarl
sbb
shrb
idivl
andb
jne
xchg
dec
cmp
add
sbb
add
xchg
test
fwait
xchg
je
lds
and
sbb
das
lret
xchg
sub
leave
mov
xor
jecxz
jns
cmp
jno
jns
xchg
jg
sahf
nop
xor
lods
call
cmc
cli
jae
and
push
minps
outsb
sub
lock
icebp
jbe
and
push
repz
sti
dec
aad
js
inc
sub
outsl
dec
pop
xor
xchg
scas
repnz
mov
cmpsl
mov
daa
dec
push
cmp
xor
stc
iret
cmpsl
dec
cltd
pushf
dec
xor
mov
add
pop
cli
mov
je
push
popf
sub
xlat
pop
mov
sbb
fs
imul
test
pop
insb
inc
push
lock
sarl
lea
stos
lcall
ss
repz
xchg
cli
push
and
jg
mov
int
adc
out
push
xor
int
test
bound
aad
push
jp
xchg
repnz
adc
ss
pop
ljmp
pop
in
call
jg
loope
movsb
pusha
sbb
cld
aaa
xor
push
in
inc
push
ss
inc
or
lret
sti
movsl
loopne
adc
jns
out
jecxz
pop
or
lods
ds
dec
in
insl
jl
fucomip
xchg
jl
xchg
dec
fisttps
inc
out
mov
dec
dec
xor
mov
sbb
aam
push
sbb
sub
mov
fsts
or
cmc
jmp
test
sbb
jmp
jecxz
xor
rcll
outsl
jl
lods
mov
iret
mov
jp
mov
lods
addr16
or
jg
mov
adc
insl
jle
adc
pop
js
xor
sub
cmpl
jno
rorl
push
fdivs
insb
mov
shlb
jns
clc
inc
movsl
daa
fidivrl
push
sarb
nop
sbb
in
adc
out
not
push
popa
sbb
mov
nop
or
mul
test
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
hlt
xchg
or
jl
jns
jl
js
mov
pusha
xchg
push
push
mov
fnstsw
mov
mov
cmp
mov
lods
js
jle
sahf
adc
ljmp
iret
scas
dec
scas
ret
add
mov
add
mov
inc
fdivr
xor
outsb
fildl
enter
mov
mulb
in
stos
shll
popf
rorb
sarl
fldenv
jno
insb
roll
mov
xchg
iret
jno
and
pop
xchg
sbb
scas
push
jmp
cmp
dec
arpl
add
movsb
sub
mov
and
sbb
xchg
mov
add
call
inc
mov
or
fdiv
mul
cwtl
mov
popa
aam
pop
ds
cld
xor
dec
lret
pop
in
sub
movsb
test
mov
shlb
pop
imul
pop
mov
push
jnp
and
inc
lret
push
dec
cmp
outsl
loopne
hlt
jmp
outsl
out
ds
mov
shrl
mov
mov
pop
nop
dec
in
and
jg
jae
add
adcb
add
fistpl
xor
ss
iret
imul
adc
call
jo
xchg
or
ss
lock
cs
aas
ljmp
aaa
sub
in
stos
mov
icebp
sub
sub
push
push
dec
xchg
and
adc
xchg
das
das
xor
mov
sub
pusha
xchg
and
sub
pop
test
add
sub
dec
arpl
pop
push
mov
mov
mov
jp
pop
cli
xchg
cld
push
pop
xchg
jp
mov
lods
mov
lds
and
pop
mov
cwtl
bound
mov
sbb
es
repnz
mov
test
or
push
sbb
jnp
xor
jae
xlat
hlt
out
xchg
jle
scas
sub
movl
sub
mov
mov
mov
clc
xlat
je
dec
ja
push
aad
mov
loopne
imul
mov
xchg
xor
cmp
jbe
cmp
or
jl
adc
popa
xchg
mov
mov
lret
adc
mov
fdivr
aam
lea
xchg
pop
push
mov
lret
sbb
inc
inc
jae
icebp
mov
stc
sub
repz
mov
loop
loop
ljmp
divb
loop
shlb
ret
out
mov
xchg
dec
lods
xor
out
mov
lret
mov
or
or
push
mov
insb
lahf
arpl
mov
lock
pop
push
pusha
sub
lret
push
and
inc
xchg
xchg
fnsave
rcl
add
int
popa
mov
loope
push
push
inc
mov
push
inc
aaa
scas
jo
add
dec
cwtl
xlat
popa
in
loope
inc
sbb
xor
adc
xchg
loop
or
cmp
fstl
push
mov
xor
mov
inc
pop
sub
push
sarb
xorb
push
dec
repnz
xor
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
in
mov
aas
xchg
jns
jl
test
jmp
mov
insb
jle
xor
push
and
fldt
mov
andb
push
out
out
fwait
xor
leave
push
int3
push
movsl
clc
inc
int3
pop
in
xchg
adc
ja
cmc
mov
xchg
add
or
sahf
outsb
push
mov
sbb
sbb
fnstenv
pop
jle
xor
dec
xchg
inc
dec
cmp
inc
inc
sbb
jge
scas
xchg
scas
roll
sub
adc
out
push
jne
sbbb
daa
rcrb
fstps
jg
loop
xchg
imul
aam
add
adc
test
es
push
and
xchg
test
icebp
leave
and
mov
inc
inc
mov
fwait
mov
mov
movsb
insb
dec
jp
popf
xchg
into
cwtl
xchg
pop
stos
jmp
ljmp
lods
daa
push
out
rclb
xchg
jmp
out
lcall
pop
ljmp
loopne
add
push
pop
cmp
daa
insb
outsb
mov
faddl
mov
ret
in
nop
push
addr16
mov
add
and
pop
shrl
out
std
rcrb
pop
jp
shll
loopne
inc
pop
inc
push
lods
mov
jl
test
jno
gs
stos
push
mov
int3
lea
mov
mov
js
shrb
add
add
xchg
lahf
ret
out
stc
adcl
leave
int3
mov
mov
push
cmp
ja
loope
arpl
mov
test
mov
test
mov
dec
xor
push
mov
cmpsb
movsl
leave
pop
xor
pop
mov
xchg
mov
xchg
cmp
test
imul
inc
call
and
lcall
push
push
pop
ljmp
into
out
mov
mov
dec
jge
jae
sbb
jl
jne
leave
ss
push
lds
daa
push
lods
inc
jne
pop
imul
pop
xchg
lahf
jmp
pop
adcb
push
cmp
fidivrs
in
cmp
mov
jle
cmp
push
pop
mov
jb
daa
push
xlat
loop
adc
loope
pop
fs
jmp
addr16
lock
stc
add
repnz
mov
sti
and
scas
ficoml
xchg
mov
dec
lcall
xor
xchg
imul
mov
jo
fs
fcoml
lret
adc
or
pushl
pop
pushf
inc
bound
lret
jbe
roll
mov
xchg
out
pop
jp
rol
mov
sub
ret
dec
mov
adc
xchg
lock
addr16
lock
stos
cmp
mov
and
adc
sbb
or
inc
rorl
adc
sbb
stos
pop
jp
sub
cwtl
cmp
sub
andb
lret
add
and
cmp
stc
insw
push
out
cmp
dec
or
sbb
negl
mov
lret
adc
les
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
mov
lods
stos
xchg
cmpl
jl
add
cmp
outsb
pop
cmp
mov
rcrl
jnp
pop
cmp
stos
inc
or
loop
not
cmp
sbb
or
xlat
jno
filds
jmp
inc
and
cmp
mov
notb
jp
cltd
fnsave
out
in
cmp
mov
pop
xchg
cmp
mov
mov
push
push
xchg
lret
repnz
outsl
ret
lcall
inc
mov
sbb
dec
pop
lea
ds
ss
out
jnp
xchg
loope
push
ret
test
and
or
sub
sub
pop
adcl
pop
jmp
and
jo
mov
jae
fadds
dec
or
jno
add
std
dec
jne
int3
popf
ja
jne
lret
in
cmp
mov
notl
sub
push
lods
lret
xchg
mov
xchg
das
aaa
pusha
pop
sbb
cmp
test
cmp
xchg
or
lret
mov
add
outsb
jmp
pop
sbb
sahf
add
fadds
dec
insb
adc
mov
jmp
test
pop
cltd
add
daa
cld
mov
push
lret
imul
ret
pop
pop
add
out
orl
negl
and
stos
xor
in
out
imul
pop
daa
sbb
xor
inc
push
mulb
xor
cmpl
jg
rorl
sbb
push
xchg
aam
jg
jmp
popa
stc
lods
xchg
fcom
rcr
adc
mov
sbb
xchg
dec
mov
dec
xchg
inc
mov
push
or
jge
inc
dec
mov
std
stos
cs
inc
add
lock
in
sub
jno
mov
lret
xchg
mov
pop
ficoms
mov
ret
cltd
mov
push
movsb
mov
mov
cli
jns
xor
mov
cltd
cmp
xor
pop
gs
xchg
or
imul
mov
mov
ret
pop
mulb
jmp
je
sbb
sahf
xchg
xchg
insl
mov
sbb
sub
scas
xor
lock
mov
sbb
sbb
xchg
adcb
inc
in
push
imul
outsb
aaa
cwtl
aaa
loop
stos
es
ret
nop
arpl
sahf
js
pop
fisttpl
xchg
loopne
ret
pusha
mov
jl
jecxz
in
mov
sbb
aam
aad
daa
daa
pop
inc
je
mov
pop
es
iret
inc
nop
dec
adc
inc
xchg
or
adc
push
push
in
mov
test
mov
mov
bound
arpl
clc
jle
iret
stos
xchg
jle
shl
mov
roll
imul
ljmp
ds
mov
inc
outsb
in
pop
and
popa
ret
pop
int
out
pop
test
pop
push
cmpsl
in
ficomps
loop
inc
mov
aam
imul
or
dec
pop
fcmovu
adc
adc
push
fmull
rol
call
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
stc
frstor
add
mov
jns
jl
imul
movsl
test
js
stos
adc
jne
add
shlb
xor
jge,pt
mov
aaa
jns
mov
dec
adcw
dec
ret
popf
daa
daa
js
cmp
cwtl
mov
repnz
or
cltd
scas
cmpsl
jne
adc
dec
mov
addr16
mov
jl
scas
popf
xchg
sbb
cmpsl
scas
mov
movsl
popf
push
shlb
jp
lret
sub
push
jmp
dec
mov
inc
sub
icebp
mov
fidivl
xorl
sub
mov
push
iret
push
mov
iret
int
mov
ret
cli
push
lea
jb
adc
pop
add
jmp
sbb
mov
cltd
imul
orb
inc
jns
lea
or
aam
icebp
push
lock
pop
cwtl
in
mov
leave
pop
add
sbb
and
out
or
adc
dec
cmp
jle
push
pop
mov
hlt
dec
xchg
in
mov
pop
jle
out
lahf
jbe
in
sti
ja
stos
xlat
adc
fsubrl
mov
das
movsl
mov
and
mov
aad
addr16
ret
push
icebp
fstpl
xchg
mov
push
xor
sbb
popa
jo
pop
adcl
ret
call
cmp
aam
cltd
sbb
flds
jno
jp
ret
push
int
xchg
adc
lods
fisttpll
ds
cltd
stos
outsl
out
mov
xchg
xor
push
ret
mov
stos
repz
addr16
or
cmp
fistpll
dec
xchg
sbb
mov
sti
dec
fidivs
xchg
leave
fs
jns
and
sub
pushf
or
bound
or
out
mov
stc
pop
scas
mov
addr16
repz
push
or
fsts
push
sub
xchg
idivb
movb
adc
fcomps
aaa
enter
and
or
push
fwait
jnp
push
cmp
shlb
add
mov
pop
decl
or
nop
in
pop
push
lods
push
test
mov
or
clc
sbb
cmp
mov
out
aad
ljmp
test
xchg
push
jle
dec
push
lea
mov
xor
rcll
jle
xor
push
test
scas
adc
popf
add
inc
dec
sub
add
aaa
ja
repz
sbbl
cmpsl
pushf
cmc
xor
test
mov
push
pop
lret
pop
rolb
lcall
fildll
shl
dec
into
add
cmp
repz
xchg
xlat
mov
mov
std
cmp
xor
xchg
in
add
repnz
pop
lret
jae
je
push
push
out
push
pop
adc
daa
cmpsb
inc
outsb
pop
mov
movsb
dec
bnd
test
ljmp
mov
dec
add
jmp
jmp
push
daa
inc
imul
xchg
popf
cmp
mov
jl
jns
jl
jae
mov
fwait
pop
dec
xchg
ficompl
cwtl
clc
cs
testl
xchg
andl
stos
mov
or
test
push
jle
sbb
call
mov
sub
dec
mov
push
xchg
push
cli
or
dec
mov
fistpl
sub
cmp
mov
fisubl
vpmullw
sbb
gs
fcmovnu
push
jae
mov
imul
dec
mov
mov
jns
aad
daa
or
shr
add
adc
cmp
push
adc
pop
sarb
jnp,pt
je
adc
lea
and
sti
cmpsb
mov
push
jp
cmpsb
aad
xchg
loopne
arpl
and
pop
push
cmp
jl
mov
insb
daa
stc
add
lcall
xor
push
dec
sbb
add
xchg
sahf
add
adc
push
jae
ljmp
sbb
push
inc
pop
imul
rolb
lock
mov
clc
dec
dec
call
dec
mov
mov
mov
daa
lods
jns
mov
fucom
cmpsl
cmp
lret
fsub
mov
mov
out
lods
adc
xchg
inc
mov
popf
out
aad
cmp
fnstcw
or
lods
fnsave
sub
pop
push
mov
sub
ja
stos
xor
gs
add
add
sbb
mov
jb
icebp
cmpsb
fildl
jo
in
cmp
xchg
movsl
data16
repz
fldl
mov
push
je
push
push
sbb
mov
cmp
mov
push
inc
push
aad
ret
imul
mov
jns
mov
push
dec
hlt
jecxz
nop
or
ja
sbb
push
sub
lock
or
cmp
inc
dec
notl
xorb
jle
dec
stos
or
mov
or
jae
lahf
pushf
scas
int
sub
ds
add
pushf
mov
mov
lds
inc
xor
flds
and
sbb
push
lret
jbe
push
inc
mov
jo
dec
dec
daa
stos
aas
outsl
xchg
push
test
mov
scas
out
movsb
sub
mov
dec
dec
inc
mov
int
inc
mov
inc
movsb
xchg
ret
and
sbb
sub
sbb
data16
jmp
mov
pop
pop
adc
pop
inc
or
pop
cmpb
xor
or
pop
cmp
orl
push
popa
je
lock
cld
mov
mov
mov
cmp
repnz
dec
inc
jbe
outsb
insb
sar
push
mov
mov
xchg
add
scas
add
jp
out
ja
xlat
nop
xchg
jbe
push
aaa
rcrb
inc
int
decb
xor
ret
pop
and
out
adc
lcall
ds
mov
int
add
cmp
pop
test
int3
lahf
pushf
into
cld
jecxz
push
call
in
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
addr16
xchg
xchg
jl
lret
jl
incb
and
rcll
inc
add
jmp
loope
lcall
sti
mov
fisubrl
orb
xor
lea
dec
cmpb
das
xchg
enter
shlb
ljmp
mov
pop
xchg
mov
mov
int
adc
setns
sbb
xor
cmp
inc
inc
pop
cmp
fnstcw
and
outsl
jne
arpl
fsts
sbb
mov
pop
fucomip
xorb
test
mov
lret
xor
ret
cmp
imul
test
call
jmp
ds
xor
xor
jle
fldl
imul
addb
push
inc
inc
mov
les
scas
sbb
out
add
or
sub
data16
fnstsw
mov
ss
pop
pop
sbb
mul
dec
mov
mov
jnp
cmp
and
orl
rclb
jbe
mov
push
repz
jge
rcll
sbb
xchg
imul
inc
ja
shr
inc
repnz
push
and
stos
outsl
jo
rcrl
xchg
sbb
xlat
dec
jecxz
xchg
mov
jp
pop
psadbw
add
out
push
add
push
repnz
push
cs
push
and
outsb
sub
scas
clc
dec
stos
les
ljmp
or
lea
loop
inc
jnp
or
in
out
sbb
jmp
mov
unpcklps
iret
test
pop
ja
movsl
mov
and
popa
daa
test
in
dec
adc
call
mov
mov
sbb
push
jle
inc
fisttps
repz
sub
mov
sub
sar
jb
cwtl
sub
cmp
push
popf
int3
jmp
jae
inc
fstpl
mov
push
rolb
ror
cli
inc
outsl
push
stc
popf
add
dec
xchg
lcall
lret
addb
imul
adc
or
jle
sub
add
rsqrtps
xchg
push
xchg
sub
cld
loopne
inc
xchg
add
imul
stos
test
jle
inc
mov
repnz
test
push
lea
leave
lret
pop
pushf
and
mov
rolb
push
scas
mov
dec
es
sub
xchg
push
jmp
addl
imul
cltd
or
mov
fwait
dec
or
pop
fimull
insl
dec
mov
pop
fcompl
cmp
inc
xchg
jg
push
and
add
test
xchg
faddp
aad
jo
xor
lcall
add
dec
pop
imul
lea
pop
lock
ljmp
adc
jnp
xchg
mov
xchg
pop
dec
inc
lock
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
pusha
pop
add
xchg
jl
lret
jl
fldcw
vzeroupper
sarl
sub
jne
test
inc
inc
jne
xchg
xor
das
ja
ds
mov
mov
lock
fsubs
adc
rclb
nop
test
xchg
in
cwtl
inc
mov
dec
mov
jp
mov
xor
mov
or
and
sbb
xor
mov
sbb
inc
fnstenv
dec
xchg
pop
jb
lcall
mov
into
pop
adc
mov
pop
sarl
sbb
push
dec
cli
je
xor
aad
lret
cmp
jge
aad
repz
ss
mov
and
add
fmul
repz
data16
mov
lods
shlb
jecxz
fistps
dec
sub
mov
in
jnp
mov
jmp
jmp
or
mov
pop
mov
fsubl
in
pop
outsb
stos
mov
gs
inc
or
into
inc
pop
pushf
push
push
shlb
js
sub
int
or
xchg
in
popf
xchg
xor
jp
pop
and
dec
pop
hlt
xor
stc
sub
test
xchg
scas
mov
mov
xor
adc
push
dec
push
pop
cmc
lods
adc
pop
cs
pop
mov
adc
inc
lock
mov
out
stos
fildl
and
fiadds
add
es
das
stc
push
repz
sub
clc
loopne
dec
jle
popa
adc
leave
push
ret
sbb
mov
xchg
cmp
test
leave
xor
pop
inc
test
mov
mov
xchg
xchg
mov
nop
ffreep
fsubl
push
mov
and
rolb
jnp
pop
stos
or
scas
xchg
cmpsl
or
mov
je
mov
gs
dec
and
fnstcw
xor
loop
sarb
mov
push
rorb
inc
xor
cmpsb
jne
shl
pushf
test
pop
ss
scas
rcr
sbb
notl
cmp
lock
cltd
pop
cmp
xlat
xchg
das
scas
adc
in
mov
in
mov
xchg
call
cli
push
out
repnz
mov
jl
ds
add
stc
js
insb
jge
or
add
add
adc
jl
push
sarl
ss
add
mov
mov
fcoml
in
daa
lods
stos
movb
jge
mov
sahf
and
jge
shll
sbb
push
xchg
sti
and
out
jecxz
idivb
mov
gs
or
fstps
les
testl
adc
movsb
divl
mov
inc
xchg
data16
arpl
mov
cli
int
mov
lds
shl
dec
mov
jo
pop
gs
add
cs
jg
xchg
pop
cmc
outsb
adc
mov
cmp
bound
aam
arpl
idiv
daa
pushf
mov
call
neg
mov
sbb
push
xchg
push
cmp
ljmp
add
outsl
pop
mov
in
mov
roll
stc
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
adc
xchg
jl
lret
jl
pop
fimull
jecxz
mov
stc
xchg
js
sbb
jl
lcall
and
mov
sbb
ss
sbb
movsb
inc
add
or
call
jge
lock
ja
lods
loope
dec
fnsave
int
jg
mov
loop
inc
dec
jg
stos
ds
sub
jne
cmpsb
sub
test
add
adcb
adc
imul
scas
pop
incb
in
ret
outsl
sub
mov
es
imul
mov
insb
mov
jg
or
mov
mov
lds
jmp
sub
mov
arpl
int3
jmp
jmp
cwtl
fistl
xchg
fldt
cwtl
out
sarb
inc
pop
movsl
cmp
adc
pop
inc
in
gs
push
jb
inc
insl
push
push
jb
xor
fwait
push
pop
add
mov
sarl
xlat
out
aad
cmp
push
ret
mov
cli
mov
leave
daa
or
mov
cli
add
shlb
fdivrl
dec
out
loope
mov
outsb
pop
int
dec
lods
call
ja
fnstsw
out
sub
pop
dec
je
push
inc
fildll
and
pusha
rcll
sbb
cmp
call
sbb
mov
push
negl
lods
lds
mov
out
mov
pop
out
mov
in
loopne
insl
in
xor
xor
ret
clc
pusha
mov
pop
mov
leave
adc
lcall
mov
clc
orb
inc
pushf
or
lds
adc
cmpsb
lcall
idiv
enter
inc
mov
push
mov
outsl
ds
fisttpl
inc
js
jns
cmp
dec
pop
adc
jne
cmpl
pop
mov
xchg
jg
insb
les
clc
orl
into
gs
and
fistl
rcrl
aam
pop
push
sbb
stos
cmc
mov
xchg
insb
xchg
sbb
clc
cltd
mov
mov
movd
enter
repnz
cmc
and
adc
ficoml
test
movsb
sub
pusha
popf
mov
icebp
mov
lret
or
push
lods
cmp
and
leave
jl
push
les
cld
sub
dec
pop
dec
ficoml
push
dec
leave
cmpsb
add
test
imul
xchg
xor
add
fwait
mov
jne
add
mov
notb
iret
movsb
xchg
and
sub
jo
bound
test
inc
jecxz
push
inc
adcb
pop
lret
ret
add
sarb
lods
add
bound
inc
inc
pop
fxtract
iret
addl
mov
in
cmp
add
sub
mov
lret
pop
cmpb
sub
notl
cmp
adc
push
push
xlat
jo
xlat
ds
ja
ja
mov
jmp
mov
mov
or
sbb
mov
xor
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
cmpsb
mov
jl
lret
jl
sub
sbb
inc
lret
pushfw
mov
mov
pop
push
sbb
cmp
into
cmp
add
xorb
xor
push
insb
js
cltd
cwtl
inc
ja
mov
lahf
fcmove
mov
out
push
popf
and
jg
inc
jmp
adcl
push
mov
hlt
clc
xor
pop
stos
pop
gs
adc
cmp
aas
lea
push
or
sti
mov
movsl
sub
xchg
cmc
jecxz
cmc
jbe
movsl
ret
loope
mov
sbb
pop
inc
pop
mov
or
mov
imul
jle
dec
mov
push
push
scas
mov
xchg
pop
frstor
adc
and
imul
sahf
mov
ret
mov
pop
lret
aas
add
and
or
dec
pop
mov
mov
sbb
cmp
jmp
insl
xorb
les
dec
cmp
popf
dec
and
rclb
dec
lcall
aam
mov
imul
pop
push
lcall
push
pop
jge
xchg
leave
popf
fstl
sbb
repz
mov
das
mov
inc
imul
sub
test
pop
repz
jae
push
push
icebp
divl
push
pop
pop
into
outsl
rcll
fldl
jp
pop
daa
jbe
adc
xor
call
or
mov
rcr
mov
out
repz
inc
xchg
xchg
mov
push
mov
cmpsl
in
inc
xchg
jge
pop
mov
aaa
aam
push
movl
add
inc
pop
imul
push
sahf
movsl
jo
fsubp
jecxz
das
sbbb
push
mul
js
lret
das
xor
xchg
jnp
xor
mov
jo
inc
xchg
mov
adc
sbbl
mov
xchg
xchg
push
lret
jmp
xor
inc
or
cmpsb
mov
xor
das
js
imull
push
out
dec
sbb
inc
mov
rolb
fucomp
mov
loope
ljmp
cmpb
mov
into
xchg
loope
dec
cld
mov
ror
ds
adc
je
mov
inc
pop
out
std
fistps
or
xor
mov
sbb
popf
aaa
movsb
or
scas
nop
decl
mov
mov
aas
cld
add
enter
lock
cli
sahf
shrl
pop
sarl
sub
or
jno
add
pop
sbb
daa
and
sahf
cmp
xchg
cmp
cmp
sub
nop
push
cmc
xor
ja
xchg
dec
rorl
outsb
leave
dec
test
leave
jg
sbb
inc
movsl
and
into
int
fucomp
mov
rorl
jge
mov
sub
cwtl
das
mov
sbb
jae
pop
repnz
push
jle
cmpb
xabort
push
cld
mov
lock
sub
in
jo
arpl
adc
call
pop
outsb
sub
mov
xchg
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
ljmp
jl
jns
jl
idivl
sub
inc
fldt
jle,pt
test
and
xor
lret
jne
sbb
std
sub
jne
jo
enter
cmp
test
pop
mov
repz
es
cmp
mov
mov
enter
mov
jmp
std
push
push
dec
aam
adc
jmp
mov
cmc
or
sbb
mov
cmpl
clc
fucom
and
ret
or
std
clc
out
es
outsb
jge
and
loop
xchg
cmc
cmp
jg
mov
bound
lcall
mov
rolb
imul
hlt
lcall
jae
subb
fcomps
inc
adc
shlb
rcll
jmp
pop
fsubr
jo
mov
loopne
loope
mov
ret
xlat
xchg
das
mov
movb
cmp
adc
fildll
xor
fstpl
fbld
inc
cli
insb
sub
popf
pop
stos
mov
pop
jo
sbb
jmp
pushf
adc
scas
ja
xchg
xor
xor
xchg
xchg
add
mov
arpl
out
inc
out
fidivl
mov
jge
lcall
loope
fsubp
jnp
scas
adc
out
dec
int
movsb
xchg
stc
sub
inc
out
jg
add
inc
scas
adc
fisttps
pop
xchg
cld
sbb
outsb
lcall
test
out
ljmp
push
lret
or
test
dec
or
loope
into
adc
push
outsl
pusha
repnz
test
lods
cmp
pop
sarl
add
jge,pt
dec
repnz
xor
add
rcrl
push
dec
rolb
fcompl
xchg
and
jle
lahf
push
sub
pushf
cmpsb
push
ret
pop
adc
sbb
in
ficoml
aaa
mov
push
mov
lret
push
push
and
mov
dec
pop
imul
into
adc
bound
stc
push
jmp
scas
mov
mov
fs
test
fidivrs
cwtl
call
inc
outsl
dec
dec
pop
bound
xlat
in
push
jb
inc
jbe
mov
ds
sti
out
xchg
clc
adc
iret
sarl
mov
lret
ljmp
mov
xor
pop
dec
push
push
std
std
jnp
and
or
scas
mov
subb
push
mov
stos
leave
andb
xchg
inc
push
rcll
adc
xchg
sub
xchg
push
mov
push
mov
cltd
lcall
enter
arpl
mov
pop
xor
adc
jbe
shl
fcoms
mov
push
aas
dec
jnp
arpl
or
mov
aas
or
or
les
jns
and
xor
incb
xchg
sub
xchg
popf
mov
stc
xchg
pop
xor
loope
scas
cmc
mov
rcll
iret
jle
enter
gs
xor
jge
rclb
adc
divps
sub
xchg
inc
ja
mov
inc
or
dec
imul
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
and
inc
mov
cmpsl
jns
jl
pop
std
jmp
mov
cmp
lock
or
call
out
fldenv
mov
lea
sahf
outsb
inc
adc
pop
stc
icebp
pop
push
scas
add
cmp
ficompl
ja
xchg
sbb
jl
add
fldenv
shll
mov
adc
inc
mov
loope
mov
jge
orb
or
jg
pop
rcrl
jns
xchg
pusha
sub
aad
stc
dec
lahf
ret
jno
xor
cld
mov
sub
push
in
lods
dec
xor
push
mov
imul
and
push
push
add
vpmovsxbd
loop
mov
iret
fdivrs
pop
push
push
ret
add
cwtl
jbe
fldenv
jg
cmp
cmpsl
cmpsb
sbb
aad
scas
test
shrl
arpl
clc
das
and
test
ds
xchg
loope
enter
adc
jge
repz
adc
inc
mov
cld
inc
repnz
jns
push
pop
aas
inc
bound
jg
negb
jmp
mov
testl
stc
movsb
sbb
push
sbb
jne
sbb
dec
mov
dec
aas
mov
cmp
inc
aam
cmp
bound
out
mov
add
les
xchg
call
cmpsl
push
sti
jno
mov
mov
jl
addl
movsb
cs
sbb
ds
mov
idiv
add
mov
xor
sbb
mov
dec
mov
jmp
mov
sub
sub
and
sbb
sbb
inc
xchg
xor
sbb
lds
mov
and
daa
aas
sbb
fxch
scas
jmp
jae
jae
xchg
dec
in
mov
ljmp
daa
in
inc
sbbb
loop
stc
push
popa
nop
sbb
test
int3
sub
cld
mov
and
pop
sub
imul
inc
jno
push
in
push
cltd
adc
mov
testl
pop
mov
inc
push
ljmp
sbb
pop
mov
pop
int3
mov
mov
pop
fs
addr16
rorb
jbe
cmp
pusha
cmpsb
jl
push
int
add
xor
xor
movntq
in
test
sahf
loop
fdivrl
fnstcw
mov
push
add
es
mov
dec
mov
mov
pusha
mov
jl
movb
mov
test
cmpsl
arpl
xor
sbb
mov
test
push
sub
mov
mov
lret
pop
rolb
xchg
test
divb
and
sub
ljmp
nopl
ffreep
aas
add
and
dec
pusha
loope
in
adc
mov
jo
movl
jbe
sub
mov
outsl
movsl
jo
push
sbb
adc
jbe
daa
push
and
sbb
adc
imul
and
jge
mov
pusha
mov
fs
shrl
es
and
cmp
je
rclb
sbb
sub
leave
mov
lods
fildll
in
fldcw
inc
ds
enter
jmp
or
aam
jns
mov
jl
jns
jl
pop
push
mov
mov
inc
sarl
enter
pop
pushl
pop
lret
aam
outsb
xchg
inc
mov
test
mov
push
ret
jae,pn
mov
xchg
or
iret
imul
and
test
aas
add
jmp
cmp
add
rcr
in
repnz
mov
fcoml
pop
cltd
pop
sub
pop
notl
xlat
je
adc
es
into
push
cmp
push
into
adc
in
sbb
mov
lods
cmc
xchg
cmp
hlt
xchg
sahf
push
or
loop
fs
arpl
sub
cmp
loop
outsb
aaa
daa
sub
in
jae
add
push
xchg
jno
pop
xor
pop
arpl
ss
stc
pop
mov
shr
xchg
mov
jg
ljmp
out
dec
mov
movsl
mov
scas
hlt
xchg
popa
jns
dec
sbb
xor
or
stos
out
outsl
or
outsb
out
push
lods
and
out
insl
arpl
adc
mov
push
clc
sti
dec
jp
inc
xchg
mov
mov
dec
cwtl
sti
rolb
sub
pop
roll
lret
test
xchg
in
les
cmp
out
mov
mov
sub
lock
mov
pop
and
sbb
push
push
push
mov
cli
mov
out
lcall
lret
in
mov
sub
pop
mov
push
into
inc
add
aam
sub
push
or
int3
sbb
je
fcoms
lcall
sub
bound
mov
push
xchg
loope
fs
cwtl
test
jne
push
push
xchg
enter
pop
jp
stos
and
xor
ds
mov
lret
sbb
pop
xchg
fidivl
rcr
or
lcall
sub
jb
pusha
sbb
or
mov
sbb
sahf
outsb
or
out
inc
pushf
adc
dec
cmp
cmpsl
scas
int
mov
inc
cltd
mov
mov
scas
cld
mov
xchg
pop
pop
add
and
pop
mov
insl
inc
pop
adc
inc
or
movsl
pusha
loopne
sbb
sub
cld
add
xchg
or
mov
lret
mov
fxch
std
jg
popf
dec
int
adc
mov
jno
jmp
aam
mov
inc
cmp
call
scas
cmp
inc
fs
xchg
mov
push
rclb
dec
pop
or
loopne
inc
iret
lea
xor
cwtl
xor
jae
cmp
int
icebp
xchg
pop
push
in
add
adc
shrb
push
adc
push
inc
adc
shlb
dec
cli
inc
or
push
mov
pop
adc
mov
jecxz
jg
jle
dec
das
push
and
push
lock
cmp
test
stos
cmc
xorb
jecxz
mov
mov
loop
sub
push
loopne
in
mov
lods
hlt
cli
pop
cmp
push
pop
inc
int
stos
sub
aam
mov
loopne
jle
addr16
in
and
lahf
cmpsb
xchg
sbb
add
xlat
cmp
addb
and
cmp
inc
sub
hlt
jl
xor
dec
dec
mov
jl
sbb
sahf
push
out
mov
loope
mov
xchg
cmp
les
add
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
pushl
jl
jns
jl
xchg
imul
scas
fmuls
outsl
movsb
push
bswap
pop
sub
add
lea
inc
push
sub
jne
popf
and
loope
movsb
jo
xorb
xlat
insl
mov
loope
lcall
xchg
push
sub
jns
push
xor
imul
inc
in
jle
push
sub
cmpl
jbe
jne
shlb
add
pusha
sahf
mov
and
dec
jne
fs
cmc
adc
mov
subl
jo
aas
add
push
sbb
mov
movsb
mov
movsb
repnz
out
enter
cld
lods
aad
fisubrl
add
jp
dec
add
sub
add
aaa
pop
push
mov
lods
imulb
inc
mov
dec
cmpsl
or
in
clc
xchg
mov
inc
sub
and
pop
xchg
pop
stos
movsb
insl
pop
mov
sub
add
into
push
mov
inc
imul
and
xchg
pop
cld
fcmovnu
xlat
cmp
mov
pop
inc
dec
rolb
xor
inc
leave
addr16
cwtl
hlt
test
xor
xor
add
repnz
ret
ret
add
fdivrs
shll
ss
mov
push
xchg
push
lret
inc
xor
sbb
lea
or
or
pop
enter
lods
fsubp
adc
pusha
fnstcw
push
ret
xor
pop
cld
jmp
xor
ret
ror
les
outsb
pop
xor
out
cld
cmp
sbb
or
add
mov
push
shlb
enter
rcrl
out
push
int
jge
or
inc
adc
or
jle
push
test
out
ret
std
popf
cmpb
movsb
and
sarb
popa
sub
clc
outsl
pop
mov
gs
fstl
scas
sarl
mov
inc
js
neg
adc
ret
in
aas
stos
pop
cmp
aam
scas
ss
in
ret
aas
cld
xchg
arpl
pop
or
sbb
pop
dec
movsl
sub
outsb
cwtl
fmull
shlb
test
jge
dec
nop
sub
aam
pop
sbb
adc
mov
jae
inc
fistpll
mov
ret
dec
inc
lahf
nop
push
lret
fdivs
pop
jns
mov
lcall
and
xchg
loopne
dec
add
xor
sub
ret
pop
push
xchg
cmp
and
int3
outsl
js
jnp
jge
cmp
push
jno
and
lock
cmpl
dec
sbb
xor
inc
mov
clc
add
xchg
stos
mov
pop
inc
sub
sbb
into
adc
dec
pop
cmpl
pop
mov
mov
cmp
adc
inc
xor
sub
out
ds
jnp
sub
andb
push
xor
pop
data16
sbb
mov
stos
dec
jle
and
or
inc
cmp
push
xor
xchg
dec
xchg
aam
insl
add
pop
nop
loop
pop
sbb
sbb
aas
pop
xchg
push
movsb
hlt
std
mov
push
jge,pn
dec
jne
fcmovnbe
rolb
sub
mov
dec
dec
out
sbb
cld
mov
jp
push
rorb
sbb
sbb
and
insl
outsb
inc
icebp
adc
stc
mov
jmp
mov
xor
add
mov
jmp
push
mov
test
pop
mov
or
cmpsl
jns
jl
mov
aaa
pop
jle
cltd
dec
mov
out
sbb
aaa
sbb
movsl
sub
lods
inc
cs
ret
dec
adc
idivb
push
enter
sbb
sbb
jmp
scas
insl
lret
jge
xor
pop
repnz
pop
jmp
or
sbb
mov
pusha
mov
push
mov
subl
xor
jg
push
adc
inc
xchg
repnz
arpl
mov
inc
push
fadds
or
xor
xchg
jmp
rcrb
cmpsb
inc
dec
push
insl
fwait
lods
or
cwtl
stc
add
outsl
xchg
int
ret
push
int
outsb
sbb
cmp
insl
or
leave
iret
sbb
std
aam
cmpsl
or
gs
pop
gs
ja
push
jg
out
inc
loopne
push
cmp
xor
sub
xchg
out
xor
mov
je
push
cmp
pushf
or
push
and
imul
mov
cmp
jmp
xor
lods
push
mov
lahf
cmp
add
scas
hlt
movsl
xchg
sahf
test
mov
aad
xchg
popf
cwtl
lcall
and
es
push
imull
mov
stos
loop
faddl
mov
xchg
cmp
push
pop
sbbl
pop
and
cmp
repz
pop
movsb
push
pop
and
ss
mov
outsl
sub
xor
mov
cmc
rorl
sub
mov
xchg
pop
sub
jo
xlat
or
adc
or
ret
pop
pop
imull
popf
cltd
fsubrl
xchg
lret
jne
xor
mov
test
push
dec
pushl
pop
xchg
jb
mov
jnp
mov
add
jle
push
jle
lea
popf
stos
je
and
pop
push
sbb
fiaddl
inc
mov
sbb
and
push
push
mov
or
sbb
mov
hlt
addl
lock
mov
test
or
mov
or
inc
xor
mov
or
push
pop
dec
mov
push
push
cs
fisttpl
adc
clc
imul
gs
push
mov
popa
jg
xchg
movsl
pop
add
shrl
roll
xor
adc
and
inc
fistpl
xor
and
fs
outsl
or
nop
enter
aam
push
loop
push
out
and
aas
int3
xchg
shrl
mov
movsl
int3
ret
xchg
mov
pop
pop
faddl
pop
add
aas
xchg
cmpsb
push
movsl
push
sarb
iret
jecxz
sub
dec
aam
test
in
imul
adc
rclb
cmp
mul
jge
inc
sbb
lds
jl
testl
inc
lods
push
or
dec
dec
cmpsb
inc
test
clc
loopne
pop
mov
cmp
inc
jmp
pop
insb
into
inc
rclb
loopne
jmp
xchg
inc
adc
xchg
push
and
pop
in
cmp
jecxz
les
jno
and
in
cmc
and
sub
jge
inc
inc
out
addr16
and
xchg
jne
js
pop
into
jno
stc
mov
jge
jb
xor
into
sub
mov
cli
ljmp
pop
sbb
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
and
jl
cmpsl
jns
jl
gs
mov
jbe
dec
dec
jne
jbe
adcl
mov
pushf
int
add
sahf
cs
sahf
js
cmp
push
sub
inc
orb
sbb
dec
repz
test
cmp
daa
xchg
pusha
pop
sbb
or
sar
and
xor
lock
call
jae
stc
jmp
cmpsb
bound
xor
jg
repz
and
lods
add
mov
or
popa
pop
cli
cmpsl
xchg
out
or
lods
pop
mov
pusha
pop
push
inc
lret
lcall
mov
je
jle
jb
in
pop
dec
sub
pop
cmp
push
sahf
pushf
mov
mov
xlat
ljmp
push
fnsave
cs
les
aam
inc
jae
mov
test
and
mov
int
ret
stc
pushf
es
adc
add
jp
stos
aam
nop
outsb
xchg
sub
shlb
mov
in
stos
incl
imul
mov
out
lret
cld
fadd
aas
adc
div
inc
enter
loopne
mov
cli
rcrl
mov
mov
dec
je
jne
sbb
sub
jne
cltd
dec
jns
scas
cmpsb
adc
jge
adc
loop
sbb
arpl
jg
cmp
pop
push
xchg
out
pop
mov
scas
mov
pop
in
or
out
test
jle
leave
mov
jg
filds
inc
jmp
pop
pop
xor
cli
rorl
pop
jmp
xor
loope
dec
neg
pop
cmp
xor
inc
sbb
icebp
gs
aad
jbe
std
fidivs
scas
lcall
add
xchg
iret
loopne
cmc
pop
gs
fwait
out
add
adc
xchg
fmuls
cld
in
out
sub
mov
movsb
lret
leave
xchg
lods
fwait
adc
subl
sbb
xchg
fcompl
pop
idivl
or
les
and
mov
mov
mov
les
sahf
incb
jbe
arpl
jbe
repnz
mov
xchg
inc
mov
sti
add
or
clc
pop
out
or
fidivs
lret
lods
cmp
xlat
lods
mov
shrl
adc
lock
ds
sbb
out
sbb
imul
mov
sub
xchg
cs
or
cmp
xchg
sub
mov
testl
lahf
js
xor
and
loop
loop
dec
or
push
out
lds
pop
xor
mov
jle
push
xor
shrb
in
divb
fimull
push
data16
push
adc
aam
faddl
and
mov
rolb
pushf
enter
cmp
dec
cmp
sub
les
xchg
sbb
sbb
jle
add
mov
xchg
incb
rcrl
pop
fdivl
shl
cmp
xor
sbb
je
popf
ds
sbb
xchg
sbb
adc
test
jae
mov
mov
mov
jb
push
or
jmp
mov
stc
mov
pop
add
pop
mov
xor
dec
xchg
shll
bnd
xchg
fcoml
ds
scas
jo
outsl
paddusb
in
rolb
add
in
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
loope
clc
mov
movsl
xor
sbb
ljmp
pop
das
xchg
jp
outsb
push
pop
sti
jecxz
inc
call
bound
mov
mov
rorb
and
out
sti
or
inc
sub
fildl
icebp
insl
pop
adc
sbb
mov
adc
adc
inc
ds
stc
daa
fisubrl
mov
adc
rcr
arpl
mov
and
jnp
filds
pop
mov
enter
out
cli
fistl
dec
in
and
fwait
cmpsb
add
lock
mov
mov
insb
and
jno
or
icebp
xchg
add
dec
or
insb
xorl
push
mov
mov
andb
scas
lahf
jae
loopne
and
scas
imul
sub
mov
inc
push
pop
lods
mov
jp
and
repnz
dec
aad
xchg
fistl
mov
mov
inc
shrb
pop
or
add
outsb
pop
mov
fwait
adc
subb
jge
aas
add
push
mov
js
daa
lret
sbb
mov
xor
test
pushf
bswap
repz
xchg
dec
js
xchg
inc
pop
insb
fs
push
sbb
cmpsb
insb
push
repnz
cltd
imul
movsl
mov
roll
fmuls
cmp
cmp
mov
add
sarb
push
xchg
lcall
mov
pop
imul
push
jge
jae
inc
cmp
dec
std
scas
cmpsl
jae
mov
sbb
sbb
ds
test
adc
fldl
sub
push
test
jmp
jge
cmp
in
push
xorl
mov
jo
pop
aam
fwait
rep
or
adc
test
xchg
shrl
nop
stos
push
sub
xchg
jnp
int
fldt
mov
fdivp
js
mov
xchg
loopne
pop
js
sub
add
shrb
push
cld
stos
inc
lcall
push
mov
sarb
testb
xor
push
adc
lahf
inc
leave
lea
ds
jge
mov
add
or
xorb
cmp
or
jne
jle
loopne
stos
arpl
dec
fwait
mov
xlat
jne
int3
addb
fwait
call
xchg
adc
and
cmp
add
inc
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
cmp
mov
jl
jle
jl
std
cmp
push
iret
into
jnp
push
xor
ja
cmpsb
sub
pusha
sbb
jb
sub
stc
js
jmp
faddl
pop
sahf
sub
and
xor
cld
dec
push
sbb
mov
aam
cmpb
into
in
cmpsl
lret
mov
sbb
fmull
dec
setge
aas
mov
iret
into
dec
jbe
xor
ljmp
mov
gs
dec
into
inc
pop
pop
in
repnz
cmp
int3
stc
lock
xchg
test
cs
dec
fstpt
rcrl
mov
loop
cmpsl
fisttpl
loopne
loop
jns
mov
pop
mov
pop
xor
xor
or
lahf
outsb
subl
xchg
leave
or
loopne
sub
inc
daa
xchg
stos
mov
push
iret
sub
adc
rep
insl
loope
mov
jnp
imull
and
test
and
mov
push
cmp
pop
cltd
popa
aaa
lods
mov
mov
xor
sbb
dec
cmp
jnp
loope
sti
scas
jle
pop
pushf
push
lret
imul
inc
mov
dec
mov
jae
xor
ljmp
mov
in
mov
sub
adc
xchg
fs
movb
xchg
mov
pop
fsubrl
movsl
pop
pop
adcl
in
jmp
sbb
lahf
aaa
lahf
sub
leave
imul
or
adc
mov
sub
fildll
repz
jl
testb
adc
sbb
pusha
icebp
inc
out
and
enter
inc
cs
fcomps
cli
xor
and
jne
das
adc
iret
popf
dec
add
xchg
add
dec
lret
icebp
jno
mov
jmp
cmp
int
icebp
call
pop
into
adcb
mov
adc
and
sarb
dec
mov
pop
clc
into
inc
cmp
cs
stc
mov
push
lahf
xchg
or
aad
rol
mov
cmc
adc
push
in
lods
addl
push
mov
add
sub
and
adc
cli
jb
cltd
aam
dec
pop
sub
xor
rcrb
loop
int
mov
notl
xchg
mov
jge
cld
pop
call
aas
ja
es
cs
cmpsb
mov
ret
pop
sub
xor
cmp
inc
or
add
mov
mov
jmp
in
jae
jge
bound
sbb
add
outsl
mov
jl
lcall
inc
les
in
mov
aad
push
lds
mov
and
mov
jo
inc
or
xchg
lods
and
cli
testb
jg
jns
fwait
pop
xor
lret
pop
ret
jl
add
sti
mov
cmp
sbb
mov
xor
adc
or
adc
cmp
pushl
test
pop
push
jp
sbb
addl
or
arpl
lds
test
cltd
pop
mov
jp
sbb
cwtl
lea
dec
push
movsb
push
xchg
pop
pop
fiadds
out
mov
movsl
call
scas
iret
jle
adc
sti
cs
push
aad
lahf
adc
ret
shr
loope
mov
sbb
add
inc
imul
sbb
aas
mov
mov
pusha
pop
clc
aad
inc
xchg
out
mov
int
xor
fsub
ljmp
loopne
jns
sbb
cmp
push
movsb
pop
xor
in
insb
lods
mov
add
out
push
loopne
sub
dec
xchg
ret
push
lods
arpl
inc
fcmove
sub
and
int3
aas
xchg
cli
ds
xchg
pop
xchg
fwait
mov
add
aaa
into
dec
pop
sub
and
test
test
ljmp
and
xchg
push
adc
fimuls
rcl
jge
pop
adc
and
stos
fildll
cmpsl
ret
cmpsl
aad
sbbl
test
mov
add
mov
lret
jb
jge
testl
or
ds
mov
sahf
shr
test
mov
xor
or
faddl
out
mov
and
dec
cmp
adc
lods
shlb
into
and
rcrl
repnz
sub
dec
addr16
push
enter
dec
lahf
cmp
in
jno
push
ds
cmpsl
cltd
aaa
jmp
loopne
xchg
mov
into
pop
imul
sbb
mov
cmc
dec
fistl
aam
mov
push
ja
jg
insb
inc
fbstp
sub
outsl
and
pop
test
cmpsl
frstor
mov
mov
orb
add
adc
cmp
jns
lret
jmp
jne
loopne
pop
pop
xchg
sahf
pushf
dec
fmull
push
pop
out
push
mov
jl
push
sub
fiaddl
in
cli
into
pop
pop
lahf
js
frstor
pop
cld
sbb
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
mov
rcrb
jl
pop
ret
push
dec
out
dec
dec
cld
popa
fsubl
or
mov
add
mov
xchg
lea
arpl
je
or
test
jno
xchg
scas
leave
mov
add
xor
loope
pop
rorl
notb
fmull
negl
jno
sahf
daa
inc
icebp
mov
es
popf
mov
push
mov
in
or
push
mov
cmp
mov
xor
lds
xor
pop
aad
xor
and
mov
sbb
jl
mov
and
mov
xchg
imul
mov
and
ss
pop
daa
movsl
add
cmp
push
mov
loopne
testl
mov
jle
sub
pop
and
push
add
test
fs
sbb
jmp
adc
es
jg
loopne,pt
adc
add
scas
in
outsb
repnz
fcmovb
xor
hlt
inc
pop
divl
mov
bound
inc
mov
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
jne
inc
mov
jg
jl
mov
icebp
int3
or
jmp
ss
lret
jbe
shrb
call
sub
ja
mov
jo
mov
aad
cmpsl
and
adc
dec
and
jecxz
xor
loope
sbb
cmp
sbb
cmpl
aad
mov
sbb
clc
sbb
insl
lods
icebp
test
or
fstpt
stos
aas
add
in
scas
shlb
sbb
mov
scas
mov
xor
bnd
out
jnp
dec
inc
outsb
pushf
sub
test
test
insl
or
inc
test
mov
leave
pop
aam
jo
xchg
aam
dec
jge
cld
scas
sub
mov
dec
adc
imul
xor
loopne
jmp
pop
out
inc
push
mov
outsl
xchg
inc
or
adc
add
imul
out
and
aaa
xor
cmp
dec
aaa
mov
jp
ror
leave
xchg
cmc
mov
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
xchg
jg
jl
outsb
mov
mov
lahf
pusha
mov
cltd
fisubrl
push
mov
fdivrl
or
mov
mov
sbb
or
cmc
cwtl
mov
jl
lods
xor
aam
adcl
xchg
lods
fcmovnb
xchg
jmp
sub
cmpsb
inc
cmp
aas
jo
mov
pop
push
dec
mov
sub
add
adc
lahf
nop
clc
inc
call
push
push
jmp
push
and
pop
xor
scas
in
mov
or
add
and
jecxz
mov
dec
and
sub
sbb
inc
jae
inc
mov
or
shlb
gs
arpl
xchg
sti
int
and
xchg
fiaddl
cmp
xor
mov
or
rolb
push
js
jp
xor
xchg
pop
je
repz
sub
pop
rcl
push
loopne
jmp
add
push
sub
daa
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
pop
cvtdq2ps
jl
adc
jl
cld
in
out
cmp
es
sub
fimull
mov
dec
mov
push
lcall
xor
adc
out
cmp
out
in
or
pop
loopne
js
and
mov
out
jo
hlt
dec
pop
pop
mov
xor
fiaddl
mov
leave
repz
dec
or
inc
sub
negl
xor
mov
stos
jo
roll
lods
mov
mov
mov
push
push
inc
bswap
cwtl
jae
dec
dec
mov
xchg
shll
movsb
sbb
push
lods
arpl
adcl
sarl
sub
mov
sub
leave
dec
push
jnp
insb
out
adc
repnz
push
cmp
lds
xchg
inc
pop
add
push
xor
in
cmp
or
adc
xchg
sti
fidivs
rorl
xchg
notb
orb
adc
ljmp
pop
js
add
or
push
add
mov
mov
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fdivrl
loop
pop
adc
jl
jg
jl
cmc
nop
fisubrl
test
lock
mov
push
lret
push
loope
jmp
outsb
push
mov
sti
jo
mov
inc
in
adc
mov
add
iret
push
outsb
mov
in
sahf
fistps
movsl
leave
es
shl
mov
mov
outsb
jne
cltd
jne
ss
inc
sbb
loop
jo
and
jo
loope
ja
or
fwait
mul
dec
out
mov
aaa
std
mov
dec
pop
out
jae
xor
out
lahf
inc
out
push
xor
ret
xchg
cmp
pop
xlat
xchg
cmp
stc
ljmp
jg
js
repz
mov
sbb
ljmp
cmpsl
push
sbb
mov
insl
xchg
test
jbe
xchg
mov
mov
jecxz
je
sub
mov
or
sub
fmul
sbb
adc
or
rcl
repnz
inc
js
pop
mov
aas
data16
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
pop
jae
xor
inc
jl
adc
jl
pop
jp
lcall
add
xchg
adc
cwtl
daa
bound
or
inc
pop
xchg
rcll
bnd
pop
or
pop
cmp
jge
xor
cmpsb
cld
pusha
cmp
sbb
das
inc
addr16
imull
shlb
rorl
inc
sub
jae
int3
test
lds
push
std
leave
xchg
jo
ret
ud0
out
out
xchg
mov
dec
sub
jmp
sub
push
jb
push
pop
mov
jg
scas
jl
or
add
sarl
in
dec
out
xor
div
ja
rclb
and
sbb
cs
push
push
test
ja
ret
dec
mov
lcall
sbb
ja
in
int3
xor
push
lcall
mov
fsubrl
mov
cmp
addl
js
insl
push
mov
cmp
cmp
stc
dec
jecxz
jp
stos
cld
and
inc
rcl
scas
int
or
sbb
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
int3
aad
jl
adc
jl
fbstp
xchg
sbb
sbb
repz
mov
lcall
leave
gs
cld
push
ja
mov
bnd
lods
sbb
and
out
sub
lret
out
stc
out
push
xor
mov
or
push
xor
mov
inc
adc
hlt
inc
sarb
push
mov
push
jae
insb
xchg
inc
mov
lret
mov
test
xor
and
cmc
inc
push
jl
mov
sbb
dec
jb
fisubrl
hlt
xor
mov
add
test
jb
jno
imul
xchg
negl
fsubrl
rcll
cli
daa
repz
mov
pop
adc
sbb
shl
mov
in
push
xor
add
pop
lods
sbb
rclb
mov
push
icebp
popf
int
insb
jg
daa
sarb
shll
js
mov
insl
xchg
inc
inc
add
add
add
mov
jmp
pop
shlb
mov
cmp
mov
inc
jl
adc
jl
jp
xchg
out
jl,pn
scas
mov
mov
jae
push
lock
movsl
cwtl
loope
pop
jge
std
popa
outsb
mov
loop
int
push
out
lret
cwtl
xchg
cmpsb
pop
lret
adc
sub
lods
xor
xchg
cmpl
scas
jns
mov
xor
sub
mov
sbb
jmp
stos
in
popa
mov
lds
push
roll
cmp
sbbb
jmp
jg
or
sbb
cmp
cmp
mov
js
dec
push
xchg
mov
sub
push
inc
lahf
leave
cmp
arpl
push
imul
push
add
pop
adc
xchg
or
aas
fadds
fisubrl
adc
in
cmpsl
xlat
hlt
mov
fbstp
cld
repnz
xchg
aaa
pop
fucomp
testb
ror
push
add
pop
ret
pop
pop
aas
shrb
dec
es
pusha
and
push
xchg
xchg
xor
je
bound
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
jns
loope
mov
jl
jg
jl
cmpsb
inc
mov
xor
or
xchg
mov
xchg
jae
clc
enter
dec
push
adc
mov
sbb
inc
dec
sbb
mov
xor
mov
stos
dec
jge
mov
adc
pop
cmp
xchg
pop
mov
arpl
sub
popa
dec
sahf
jnp
add
sub
dec
shl
es
push
ss
mov
jnp
pop
nop
pop
adc
gs
mov
mov
out
adc
stos
int3
sti
xor
outsl
mov
in
pushf
inc
rol
cmp
inc
sbb
sbb
xor
push
adc
dec
ja
or
lock
adc
xchg
push
dec
push
xor
hlt
fiaddl
rcrb
test
sbb
push
dec
lahf
adc
idivl
and
das
jns
scas
xor
sbb
jae
add
add
cmpsl
adc
mov
pushf
or
and
in
mov
xacquire
orps
dec
out
xchg
push
out
int
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
add
scas
inc
jl
adc
jl
loope
in
movsl
inc
jb
pop
jno
mov
mov
test
pop
jge
inc
inc
adc
mov
hlt
pop
icebp
addr16
jmp
and
cmp
sub
jmp
dec
pushf
adc
mov
ds
in
mov
mov
mov
pop
pusha
sub
dec
je
mov
xchg
lret
inc
xchg
cmpsb
inc
adc
or
rorl
add
mov
inc
dec
mov
mov
pop
cltd
in
jp
addr16
ret
pop
push
xor
fnstsw
inc
ficoml
fistl
aas
out
push
lods
adc
movsl
mov
outsl
js
xchg
insl
imul
push
inc
sub
mov
leave
lock
ja
int
mov
dec
mov
mov
xchg
cld
cmpsl
test
stos
mov
gs
pop
shll
sbb
dec
outsb
icebp
xor
popf
lods
imul
cltd
std
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
repz
fdivs
dec
inc
jl
adc
jl
dec
frndint
scas
xchg
stos
daa
es
out
movsl
pop
jno
test
pop
mov
dec
lret
loope
mov
mov
and
inc
ljmp
pop
data16
mov
mov
int
push
in
inc
scas
inc
push
loopne
add
fildl
jb
inc
jmp
rcrl
mov
mov
lods
mov
sahf
das
idivb
jno
jno
or
rcrl
add
inc
xor
push
lea
mov
outsl
nop
out
repnz
jle
ja
jmp
xchg
popa
cmp
lods
stos
bound
stos
icebp
and
adc
std
sbb
movsl
in
adc
fcoml
push
test
sar
or
cli
mov
jle
daa
or
mov
aaa
insb
arpl
pop
mov
mov
or
mov
loopne
test
cli
sbb
aad
sub
mov
xchg
adc
cs
jbe
mul
inc
mov
mull
push
bound
sbb
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
cmpl
add
add
dec
scas
in
mov
push
jbe
jns
pop
pop
andb
cmp
out
int3
jle
jl
sbb
or
cmp
or
jne
inc
xlat
jp
jmp
cmp
pusha
stos
and
test
inc
inc
jo
mov
jbe
mov
pop
push
out
ja
push
and
jns
inc
int
jbe
mov
add
fdivr
hlt
subl
jl
mov
xchg
mov
call
ret
jecxz
das
movsb
and
push
mov
mov
pop
in
mov
mov
and
mov
popa
sbb
mov
or
stc
adc
shlb
pop
mov
adc
sbb
cmpsl
out
xchg
pop
call
outsl
pusha
orb
mov
repnz
cli
hlt
shlb
adc
enter
jae
shll
inc
xchg
loope
add
push
pusha
in
jle
mov
cmp
mov
iret
add
pop
add
add
jmp
jns
shrb
mov
and
xlat
jle
dec
enter
jno
cmp
in
loop
idivb
rolb
jl
sbb
xacquire
jg
shlb
shll
aaa
fimull
and
push
dec
mov
test
dec
fwait
xor
inc
in
aad
and
fistl
mov
data16
mov
push
popf
nop
leave
xchg
mov
or
or
sbb
data16
imul
xor
int3
addl
hlt
sbbl
add
fs
and
dec
mov
out
mov
loope
push
mov
or
insl
mov
sahf
fiadds
sbbl
pusha
push
dec
mov
xorb
and
pop
nop
fistl
mov
and
pop
aad
lods
js
inc
mov
adc
xchg
addr16
aas
bound
push
jb
out
pop
or
in
sti
add
adc
mov
push
add
pop
sti
rolb
add
add
add
aaa
psraw
cs
adc
bound
pop
mov
cmp
fcomip
imul
mov
in
in
lahf
lds
or
fwait
mov
testl
stos
adc
adc
inc
push
into
mov
mov
dec
cwtl
push
mov
int
sub
in
xchg
sbb
xchg
jl
pop
sub
out
sbb
call
gs
int3
mov
ljmp
cmp
dec
pop
dec
inc
mov
bound
xor
gs
aam
adc
test
cmc
sub
rclb
xor
and
cmc
sbb
dec
lcall
popf
sbb
sbb
inc
ja
mov
or
dec
loopne
xchg
or
test
fbld
repz
imul
ficompl
adc
jb
rclb
sti
add
mov
rcrl
add
add
mov
idivb
mov
add
add
pop
add
add
sub
jmp
mov
sbb
loopne
je
idivl
es
scas
insl
jle
insb
test
loope
mov
or
and
sbb
add
xchg
jo
imul
popf
lods
cli
lods
bound
fwait
adc
sahf
add
pop
mov
xchg
xchg
cmpsb
xchg
movsl
outsl
sub
sub
lcall
mov
insl
add
fildll
dec
inc
fs
movsb
daa
shlb
adc
rcl
add
push
or
dec
outsb
adc
add
pop
push
mov
mov
sahf
jle
arpl
jae
inc
mov
cmpsl
ss
paddusw
jl
repz
bound
int
in
xor
pop
sbb
dec
es
xor
aam
nop
lds
sub
xchg
or
xchg
movsl
fimuls
push
scas
cmc
pop
mov
mov
jmp
ljmp
add
inc
or
ss
pop
xchg
jnp
jb
or
add
pop
add
add
into
ljmp
les
scas
in
xchg
cld
stos
mov
daa
push
mov
mov
lcall
inc
out
aam
xor
pusha
mov
shrl
inc
push
shlb
push
jbe
popa
and
fcom
pop
call
pop
test
into
or
cmpsb
imul
inc
nop
push
cs
aas
sbb
push
fwait
pop
pop
cmp
les
sarl
cmp
pop
push
mov
hlt
cmpsb
dec
mov
mov
push
pushf
inc
or
fildl
xor
sub
scas
je
lods
sub
xlat
and
adc
sbb
mov
pop
ret
jecxz
push
sbb
mov
pop
dec
scas
dec
rcrl
or
testl
lcall
adc
xor
inc
imul
sbb
jg
fldt
int
int
fcom
movsl
mov
roll
jg
cmc
insl
cmc
out
lcall
mov
add
aam
add
add
add
sbb
xchg
pop
loopne
ret
imul
dec
arpl
mov
add
je
mov
push
mov
daa
into
in
sbb
test
push
test
ror
fdivrp
cmp
or
test
pushf
pop
jmp
pop
mov
cmc
push
jge
insl
lcall
adc
jns
mov
std
lret
push
hlt
pop
push
adc
imul
add
mov
xlat
mov
mov
mov
or
add
pop
or
orl
xchg
sbb
xor
movsl
pop
mov
cmp
pop
insb
pop
inc
leave
mov
mov
repnz
jge
pop
cmpsl
dec
inc
test
inc
dec
xor
jae
mov
cwtl
outsb
movsb
popf
aas
add
mov
cmp
addb
loopne
jnp
jbe
stos
xchg
jmp
in
sarb
stc
insb
add
add
outsl
jle
aam
aam
pop
int3
mov
pop
aad
add
add
add
adc
sbb
push
pop
jo
mov
add
loopne
sbb
mov
cmp
in
adc
pop
mov
cld
lds
cmp
xchg
and
lods
mov
adc
pop
aad
leave
fstpt
inc
pop
push
mov
subb
dec
arpl
xchg
adc
out
imul
jp
jle
mov
sub
repnz
jg
std
int3
xchg
es
idivb
movsl
shlb
imul
push
sbbb
out
leave
cmpb
sub
pusha
repz
or
or
pop
arpl
dec
ret
test
stos
mov
add
sbb
xlat
scas
test
add
in
loopne
stos
push
sbb
dec
and
mov
fwait
and
mov
lds
mov
jnp
add
imul
leave
pop
mov
or
and
scas
sti
jle
sbb
rorb
add
pop
add
add
int
mov
in
andb
stos
jno
mov
or
sti
lds
sbb
lret
fnstcw
inc
frstor
testb
jle
imull
push
or
iret
mov
jb
or
cmc
rcr
jo
xor
add
adc
bound
jecxz
fsubp
push
faddl
inc
fmuls
popa
and
test
adc
mov
jae
mov
fwait
pop
and
imul
inc
xorb
dec
adc
mov
daa
dec
pop
xor
dec
lret
pop
push
mov
cmc
stos
stc
cltd
jmp
mov
xor
or
loopne
and
lahf
sbb
and
stos
repnz
fucom
dec
mov
dec
cmpsl
lret
pop
sbb
inc
dec
push
movsb
add
jb
addr16
es
inc
test
push
stos
adc
inc
xor
sub
fisubs
test
roll
lahf
fnstcw
ss
lahf
stc
and
mov
xchg
or
and
add
add
pushf
pop
push
jmp
femms
push
mov
inc
jb
iret
dec
ret
dec
jmp
cmp
out
les
xor
icebp
sbb
adc
ret
pushf
xchg
push
scas
xor
pop
mov
pop
mov
adc
fwait
test
mov
dec
hlt
sbb
inc
cmp
test
lea
pandn
mov
lret
push
pop
inc
mov
pop
adc
outsl
push
pusha
loopne
dec
push
in
cmp
aaa
enter
mov
std
xor
jmp
dec
xor
ds
aam
test
jbe
pop
leave
pop
ret
jl
cmpb
in
xchg
add
shr
lcall
test
out
loopne
pusha
fstl
cmp
xchg
fsts
push
pop
mov
lea
out
out
or
daa
sub
int
insb
popf
or
ljmp
pop
ljmp
and
xor
push
jl
jle
insb
inc
xor
push
mov
shrb
add
pop
add
add
std
mov
pop
xor
inc
sbb
insb
push
imul
aas
mov
cmp
or
stc
add
mov
mov
pop
mov
mov
sbb
xlat
loope
int
sbb
dec
in
leave
into
jns
notl
test
nop
pop
mov
scas
sahf
dec
mov
lock
rcl
push
jbe
cmp
stos
jb
lods
sbbb
cwtl
dec
out
movsb
cld
and
test
push
shrl
out
inc
lods
xchg
inc
insb
nop
add
push
cltd
shll
stos
push
addr16
and
mov
dec
push
loope
pop
stos
bound
in
and
add
push
sbb
punpckhwd
sbb
cmp
jle
sbb
shl
cwtl
in
aad
xchg
inc
and
test
jecxz
iret
dec
inc
addl
sbb
cli
mov
outsl
sbb
cmp
add
fwait
mov
sbb
jp
xor
add
pop
add
add
dec
aad
jb
sbb
in
pop
mov
sbb
fs
pop
push
ja
pop
mov
sub
into
in
add
cltd
and
pop
xchg
iret
lret
and
movsl
mov
inc
jne
mov
mov
jo
lods
mov
aam
xchg
sbb
pop
inc
leave
cli
das
mov
and
jbe
sub
in
inc
xchg
mov
or
sbb
cld
xor
and
test
andl
or
jl
and
mov
sub
push
dec
xchg
aam
sbb
flds
pop
arpl
std
xor
and
xchg
ss
and
imul
mov
mov
jg
mov
addr16
push
mov
mov
adc
shr
adc
mov
add
sbb
out
arpl
cli
iret
xor
insl
add
data16
jne
mov
xchg
fidivl
add
pop
add
add
test
push
into
add
mov
rol
leave
push
xchg
popa
jp
arpl
and
mov
movsl
es
cmp
outsl
push
or
sbb
push
iret
imul
xchg
mov
lock
shl
cltd
cwtl
cmp
es
testl
nop
mov
push
inc
iret
push
mov
jns
mov
mov
icebp
stc
dec
mov
enter
push
loop
movsb
pop
int3
xor
mov
ss
sub
push
xor
xchg
push
aad
mov
pop
xor
adc
xchg
jl
sbb
loopne
mov
xchg
and
cltd
jp
sti
xchg
jmp
jae
popf
and
ret
sub
testl
es
push
rclb
out
mov
lcall
ss
pop
lahf
out
and
push
mov
or
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
hlt
or
pop
sbb
fidivl
cmpsb
mov
in
adc
shll
sub
pop
mov
subl
cli
fsubs
out
cmp
pop
adcb
clc
pop
mov
imul
dec
or
dec
mov
fidivs
dec
gs
xchg
sub
sbb
sarl
xchg
aas
out
xor
inc
daa
adc
lods
ret
push
mov
in
jl
adc
popf
pusha
icebp
sub
push
stos
es
fs
cmp
add
cltd
repz
adc
add
xchg
cmpsl
ficompl
xor
jne
js
fadds
dec
jns
hlt
dec
test
add
daa
pusha
std
ficoml
xchg
pop
push
cmp
fstl
outsl
xchg
mov
xchg
mov
in
outsl
pop
aam
loopne
in
lahf
pop
incl
push
xchg
xor
add
add
pop
sarl
lods
std
mov
adc
add
pop
add
add
mov
arpl
pop
fimuls
mov
rorb
mov
shll
and
push
sub
in
inc
loopne
add
inc
pushf
ret
xchg
loope
das
cltd
xchg
mov
jns
hlt
rorb
out
inc
pop
sarb
loope
popa
adc
sub
das
nop
ja
and
mov
adc
cltd
aas
xor
int
adc
jae
ljmp
stc
xchg
js
lods
lds
mov
iret
js
shrb
inc
popf
inc
jns
sti
into
mov
jo
lret
test
push
gs
mov
stos
lock
outsl
cmp
fdecstp
leave
bt
shll
inc
pop
xchg
dec
adc
lcall
fistl
dec
ljmp
mov
inc
and
das
lcall
fbld
int3
test
test
xchg
lret
xor
dec
call
call
push
loop
pop
xchg
inc
and
mov
jb
repz
jmp
sub
insl
lock
std
repz
or
pop
add
add
dec
push
push
in
cmc
cmc
into
enter
mov
ficoml
divb
stc
push
jbe
mov
lea
push
xchg
imul
push
xor
xlat
outsl
dec
addr16
push
iret
fwait
inc
pop
out
jb
lret
int
inc
xchg
xor
leave
pop
dec
mov
push
mov
mov
ret
dec
adc
pop
out
div
sbb
lcall
mov
xchg
xor
fs
sbb
cwtl
hlt
inc
add
adc
add
cmp
jo
jns
pop
inc
jne
jecxz
inc
bound
sbb
sbb
mov
jecxz
pop
andb
inc
in
cli
fucompp
push
data16
shlb
pop
in
sub
push
lret
pop
xchg
mov
lods
inc
loope
xor
aam
xrelease
inc
cmp
les
inc
xchg
pop
mov
test
dec
adc
or
push
cmpsb
fdivs
fldl
add
in
sub
cmp
cmp
pop
add
sti
push
fiadds
add
add
add
arpl
lret
mov
push
cmpsb
mov
movsb
push
pop
aas
hlt
popf
outsl
jp
add
bound
fs
mov
jb
inc
movsb
cli
xor
test
sbb
out
mov
shll
fists
fs
arpl
cmpb
and
clc
push
cmpsl
or
fs
test
adc
in
xor
push
xlat
hlt
cmc
aad
scas
adc
adc
xor
sbb
adc
lea
std
pushl
cmp
imul
mov
das
sti
mov
aam
mov
and
and
lds
mov
das
aad
sub
xchg
adc
test
xlat
mov
fdivrs
ja
rorb
insb
stos
dec
in
cmp
test
xchg
add
cmpsb
dec
push
idivb
dec
xchg
cmp
inc
mov
stc
jb
fsubl
jmp
pop
sub
xorl
insl
lcall
lret
inc
std
scas
daa
sbb
pop
filds
add
add
add
mov
sti
in
movsb
lods
stos
fisubs
in
sub
inc
dec
out
loopne
mov
inc
les
shll
mov
fldt
adc
mov
cmpsl
mov
cmpb
mov
push
jmp
sub
lock
shll
negb
and
inc
es
lahf
js
loopne
bound
push
cmp
pop
or
mov
push
fwait
stos
lods
negl
flds
and
inc
js
cltd
sub
ret
adc
adc
aaa
or
lahf
pop
sub
lods
add
xor
xor
call
adc
mov
or
scas
lods
jno
mov
adc
leave
inc
cwtl
sbb
cmp
sub
and
iret
icebp
xchg
loope
inc
and
dec
shl
shr
push
outsb
add
and
dec
lods
xor
icebp
xor
dec
adc
popf
mov
cld
or
inc
add
xchg
in
mov
incl
mov
add
pop
add
add
daa
int
pop
scas
pop
sarb
out
push
ja
dec
xchg
mov
mov
mov
test
jns
fmul
rorb
mov
movsl
bound
in
dec
inc
pop
push
stos
and
mov
mov
jl
mov
pop
aas
mov
subl
add
dec
inc
or
cmp
hlt
popa
mov
cmp
mov
pop
mov
sub
or
movsl
mov
mov
imul
arpl
lret
leave
je
xor
ljmp
adc
test
push
cmc
dec
loop
xchg
xchg
movsb
push
repz
lret
jp
cld
pop
popf
and
in
mov
pop
pusha
data16
ja
scas
test
or
add
lcall
jo
xchg
daa
sbb
jl
test
xchg
sbb
int3
scas
push
cmp
mov
sub
inc
mov
in
negl
es
int
ljmp
pop
add
add
xor
mov
jae
popf
ds
push
ficomps
push
sub
ficompl
mov
xor
add
in
xchg
iret
sti
push
xor
movsb
sbb
mov
outsl
mov
mov
sub
cmpsl
cld
adc
push
ficomps
mov
sub
test
mov
cmp
adc
sbb
jbe
push
outsl
inc
out
jne
movsb
imul
sbb
test
and
xor
sub
adc
inc
xor
out
dec
mov
cmp
sbb
xorl
je
and
jle
enter
shr
stos
mov
dec
ficomps
fisubs
arpl
xchg
pop
fnstsw
test
xchg
xchg
add
popf
into
adc
adc
lahf
shl
lock
or
pop
mov
daa
jb
lock
add
add
mov
jge
nop
mov
jb
add
pop
add
add
insl
mov
pop
xchg
cmp
push
lods
xchg
arpl
mov
xchg
dec
mov
in
dec
nop
push
inc
popa
cwtl
adc
dec
jb
xor
out
ficoml
jmp
mov
gs
cmc
mov
filds
out
mov
inc
sub
pop
push
jg
xor
fiadds
gs
aas
sbb
mov
outsb
inc
insb
push
xchg
dec
and
pop
jecxz
scas
je
mov
inc
mov
shrl
fisubs
jo
jbe
pop
xadd
lock
popl
fadds
aam
jle
subb
cmc
sub
in
xchg
adc
add
mov
sbb
cmpsb
cld
in
mov
lods
inc
aaa
ret
sbb
xor
loop
cld
arpl
dec
push
mov
mov
iret
sub
movsl
loop
and
sbb
out
in
xor
dec
cltd
imul
xchg
push
cmpb
mov
jne
inc
mov
add
cmp
mov
push
jno
mov
sarl
add
pop
add
add
mov
fwait
cmpb
push
orb
rcr
cmp
and
xor
loope
xor
fcmovnu
pop
or
xor
int3
or
out
fwait
sti
imul
push
push
addr16
rorl
and
test
xchg
out
xor
push
rolb
sbb
jns
sahf
inc
addb
mov
popa
mov
aas
add
mov
cld
jbe
nop
jb
fldl
shll
into
rolb
pop
sub
mov
out
jo
jo
dec
insb
pop
decl
adc
jns
jne
mov
fiadds
test
cmpsl
in
mov
shrb
cmp
xchg
aaa
dec
lret
imul
mov
std
adc
push
sub
hlt
jo
pop
outsb
jae,pt
xor
pop
lret
jle
and
xchg
les
aad
xor
loope
jb
cmpsl
xchg
add
mov
out
repnz
add
pop
call
mov
outsb
jnp
in
add
add
add
sbb
fwait
sbb
lea
xchg
movsl
sub
decb
push
rolb
lods
daa
cli
xchg
in
data16
add
ud1
add
aas
pop
mov
mov
enter
xor
xchg
out
pop
push
in
xchg
dec
test
ret
addb
into
addr16
in
cld
or
lret
loopne
ret
mov
outsl
sahf
mov
lea
push
cltd
xchg
cmp
cld
sahf
inc
in
js
insl
mov
sub
adc
sub
jno
inc
cmp
mov
cmp
ret
jl
mov
and
push
cmpsl
fisttps
test
pop
ret
sub
jbe
rep
arpl
scas
loopne
hlt
mov
dec
roll
sbb
mov
sbbl
lahf
ret
mov
xor
sbb
fcoms
icebp
lret
insl
push
jno
andb
aas
lret
hlt
and
cltd
lcall
mov
add
mov
push
decl
jae
push
in
in
add
add
add
mov
imul
xor
les
pop
jne
inc
rorl
sbb
mov
xor
pushf
cwtl
repnz
or
dec
dec
pop
add
mov
sbb
scas
dec
fadds
xchg
dec
enter
mov
sub
sbb
ljmp
cmp
mov
enter
dec
cmp
push
js
inc
cmc
or
pop
pop
lcall
outsl
and
sub
xchg
mov
mov
mov
test
and
mov
in
mov
out
std
movlps
mov
mov
mov
in
data16
int
lds
test
pusha
and
ret
inc
repnz
fwait
dec
cld
jle
in
shlb
push
or
dec
pop
jnp
mov
in
cmp
lahf
test
mov
aas
cs
mov
add
jmp
in
and
ror
mov
add
pop
add
add
xor
mov
gs
lds
mov
andl
std
lds
test
loope
in
fistpl
adcb
shlb
mulb
jmp
xor
push
or
lcall
lea
ds
sti
jb
lods
pop
jle
inc
xorl
in
repnz
mov
inc
push
gs
xchg
add
jecxz
pop
sub
in
in
cmp
cmp
fidivrs
pushf
outsb
xchg
mov
sahf
mov
roll
fsts
js
out
bndldx
pop
repz
push
mov
inc
adc
pusha
cmpsl
xchg
ja
add
out
jns
inc
inc
roll
xor
mov
push
imul
not
cmc
test
gs
inc
dec
hlt
xlat
sbb
arpl
jl
adc
pusha
jmp
or
or
out
push
jae
sub
cmp
mov
add
add
outsb
xor
test
arpl
add
pop
add
add
push
aaa
dec
fs
inc
icebp
xor
inc
mov
rcl
inc
and
enter
scas
rclb
cltd
mov
add
adcl
pop
sbb
sbb
mov
sub
in
xor
adc
lcall
jb
js
cmpsl
jb
adc
aad
push
sub
jbe
xchg
xchg
sbb
cmpsb
out
ficoml
jp
scas
jnp
shll
popf
adc
add
scas
stos
pop
insb
scas
pop
adc
mov
subb
and
mov
std
ljmp
sub
pop
dec
mov
pop
jb
inc
aad
cld
dec
pop
stc
jl
xor
sub
cmp
leave
xchg
dec
mov
cmp
aam
cs
int
xchg
sub
rcll
mov
add
mov
repz
jnp
nop
into
add
mov
pop
xchg
notb
in
js
add
add
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
incb
and
add
into
loop
add
jl
insb
mov
mov
int3
xchg
dec
ljmp
push
mov
pop
add
outsb
mov
stc
mov
dec
ljmp
movsb
mov
fcoms
sbb
fs
fnstenv
push
and
xchg
cmp
imul
inc
outsl
xor
xor
fsubrs
add
std
push
push
stos
lods
mov
sbb
test
xchg
int3
mov
mov
repz
ja
and
pusha
out
or
aaa
adc
aaa
or
rorl
xchg
jmp
aas
add
adc
aas
mov
sbb
int
push
daa
stc
loopne
in
lock
out
call
mov
fstpt
outsb
fstl
mov
jmp
lcall
push
xchg
lea
fldl
dec
dec
xor
add
repz
fisubrs
jno
pop
lods
jns
jmp
add
mov
or
out
shll
push
lea
dec
mov
out
push
cs
dec
lret
clc
dec
pop
sti
sahf
push
scas
inc
mov
ror
jg
cltd
or
or
call
movsb
mov
push
bound
adc
mov
pop
insl
add
ret
sub
insb
stc
cli
lods
add
jg
dec
sbb
inc
mov
int3
and
sub
and
push
push
test
and
sub
das
and
test
dec
push
sbb
shll
mov
into
push
sbb
sub
push
enter
push
cli
insb
mov
sbb
fwait
push
int3
test
scas
push
fisttpll
xchg
rcrl
push
clc
iret
dec
pop
jno
out
or
ret
loop
jno
ret
testb
add
jbe
ficoms
mov
sub
dec
rcl
xor
rolb
sbb
ja
xlat
ret
push
ds
ja
js,pt
push
dec
data16
add
add
out
mov
mov
jbe
xlat
clc
stos
ljmp
and
in
push
jae
push
aam
sub
pop
and
outsl
repz
xchg
jno
inc
sbb
fdivr
xchg
adc
adc
rclb
add
enter
aad
add
adc
mov
test
filds
repz
mov
lea
call
movsl
add
add
ja
int3
loopne
push
push
fstl
aaa
push
adc
test
cs
sti
pop
or
lret
fwait
jecxz
sbb
jne
or
mov
and
xor
adc
int
mov
sbb
loope
push
mov
loopne
mov
out
sub
pop
cmc
inc
sub
mov
mov
mov
xchg
sbb
test
scas
movd
and
stc
mov
jp
popf
shll
jno
mov
mov
in
pop
and
cmp
add
into
push
sub
cmc
sbb
jle
add
scas
push
repz
cmc
scas
cwtl
sub
repnz
jmp
add
add
add
mov
inc
xchg
sub
dec
adc
mov
mov
pop
int
ja
or
inc
mov
shlb
mov
test
jl
xor
xor
leave
bnd
out
clc
fists
popa
mov
ss
pop
in
or
add
aas
out
ljmp
cmpsb
push
push
push
in
ror
shrl
xor
popa
mov
jae
adc
push
dec
inc
out
out
adcb
incb
shlb
xor
fidivl
daa
push
xor
dec
mov
inc
testl
add
mulb
push
adc
cmpsl
mov
cmp
mov
mov
mov
outsb
mov
cmp
xor
xchg
cltd
mov
imul
inc
daa
cmc
addr16
and
or
mov
idivl
popa
sbb
mov
mov
add
add
xchg
test
fmull
mov
bound
add
pusha
rorb
enter
and
cmpl
jmp
call
lcall
dec
pushl
lcall
out
add
es
sbb
pop
adc
xchg
pop
adc
aas
jecxz
inc
dec
push
push
mov
or
mov
nop
fisttpll
je
lods
push
dec
call
out
in
push
pop
pushf
rcrb
sar
pop
std
ds
push
xor
xor
shr
pop
push
shll
sub
rolb
mov
push
addb
in
sbb
imul
push
test
pop
cmp
inc
inc
pop
jno
cmpsl
mov
pushf
inc
imul
dec
add
out
mov
sbb
dec
push
jge
sbb
xchg
cld
cmp
outsb
int
scas
lods
pushf
cmp
and
sahf
sub
out
jecxz
jne
mov
sbb
push
inc
sub
inc
shlb
fcoml
sub
sarl
in
mov
add
add
gs
testl
or
movsb
mov
add
add
push
mov
je
lahf
mov
imul
inc
jle
imul
jbe
add
cmc
xchg
xchg
iret
mov
dec
imul
nop
icebp
mov
bound
mov
xchg
repnz
fidivl
out
cmp
push
je
xor
out
mov
xchg
sbb
loop
mov
add
jns
mov
push
push
sub
mov
pushf
test
mov
lahf
push
lahf
adc
and
mov
std
adc
inc
fldt
stos
icebp
or
insb
testb
fcompl
sbb
jg
add
stos
mov
fdivp
sub
jg
out
mov
xchg
iret
fcompl
scas
addr16
cmpsb
pop
jg
insl
xor
pop
adc
jne
sbb
cmpsb
test
xchg
sti
push
mov
jo
sbb
push
movsl
adc
fwait
shrl
jo
ja
loop
dec
mov
and
daa
lahf
or
movsb
insl
out
add
pop
add
add
sub
std
leave
mov
fsubrl
sub
xor
in
cmp
je
mov
mov
push
inc
loop
inc
lods
adc
fsubrs
push
leave
or
das
mov
ret
outsl
xlat
cwtl
and
jg
filds
inc
insb
push
test
xchg
aas
aaa
sbb
or
pop
dec
aas
jne
pop
jae
sub
adcl
fmul
cld
mov
xchg
jo
or
gs
mov
aaa
add
scas
xchg
rolb
and
or
gs
mov
stos
inc
xchg
jge
fildl
jge
out
or
sar
ficompl
inc
addr16
sub
jmp
push
in
clc
lahf
mov
icebp
mov
xchg
mov
lock
inc
repz
cmc
loope
inc
xchg
leave
or
mov
push
jbe
lods
push
push
sub
push
movsb
js
and
xchg
sbb
add
fstpl
int
add
pop
add
add
sub
mov
sti
jae
fistl
sub
mov
and
mov
cltd
outsl
add
fsts
test
movsb
cld
shrl
mov
and
jmp
fst
bound
fadd
add
je
leave
insl
dec
xor
test
jp
and
sbb
xor
lahf
pushf
test
popa
loope
imul
lds
jmp
mov
inc
in
xor
fidivrl
and
push
test
push
iret
pop
gs
daa
inc
shl
xor
popa
cmp
lret
loope
roll
cmpl
stos
lods
imul
cmp
fstpl
and
repnz
sbb
inc
gs
mov
test
loop
seta
add
mov
fistps
movsl
or
cltd
call
dec
and
out
inc
jno
dec
xchg
es
pop
ss
mov
enter
mov
push
jg
add
push
inc
pop
jns
aas
lods
fmull
cld
fcmovnu
aam
add
pop
add
add
daa
mov
enter
rep
pop
fisttpll
inc
ret
xchg
daa
gs
adc
stos
dec
arpl
xor
leave
xor
call
repnz
jno
sbb
xchg
in
mov
fsubrs
daa
fstps
mov
es
jo
mov
pop
ljmp
add
ds
push
pop
sub
mov
shll
roll
mov
hlt
lcall
adc
push
in
fwait
jg
or
sub
jecxz
test
mov
inc
and
cmp
scas
imul
jl
fisttpll
xor
push
fs
pop
bound
xor
popa
outsl
js
shll
aas
outsb
cmp
lods
xor
cmp
icebp
sbb
lock
mov
repz
repz
and
push
inc
pusha
sbb
imul
int
pop
sub
in
mov
pop
push
into
rol
xor
mov
push
arpl
cmpsb
sbb
jnp
mov
insl
pop
and
add
add
add
outsb
rorb
test
sbb
jecxz
fimull
add
xor
xchg
cltd
inc
fsubrl
xorb
dec
and
negb
adc
fmull
mov
in
jb
loopne
pop
repnz
cmp
es
jnp
scas
fdivs
call
xlat
jno
mov
push
jg
adc
mov
sub
adc
sub
loopne
mov
cwtl
int
mov
in
adc
xor
sahf
mov
jo
int
jp
ret
jecxz
and
hlt
push
and
ljmp
test
pop
mov
sti
add
push
dec
shll
jge
sbb
push
push
push
pop
jns
push
mov
ret
pusha
outsb
arpl
lahf
mov
cltd
sbb
aam
xor
push
mov
fbstp
rep
jg
and
xlat
add
xlat
pop
xlat
jg
mov
xchg
and
scas
loop
add
pop
add
add
ss
outsl
subb
insl
in
pop
mov
dec
xor
lahf
push
jge
cmp
movsb
xchg
ds
out
mov
cmp
popf
lods
xchg
sbb
push
mov
dec
mov
imull
adc
ds
pop
rorl
push
pop
jbe
add
shlb
daa
xor
jb
sub
dec
add
cld
dec
and
add
nop
or
leave
mov
push
rolb
adc
mov
mov
inc
in
test
addr16
arpl
sbb
lock
dec
arpl
mov
xor
mov
mov
movsl
fs
jmp
push
icebp
sbb
add
daa
movsl
xchg
outsb
daa
mov
mov
imul
dec
lahf
sub
lock
cmpsb
test
pusha
aad
test
daa
lahf
add
inc
ja
add
fdiv
mov
pop
insb
inc
imul
add
pop
add
add
adc
stos
add
inc
sti
mov
ret
push
scas
ja
fisttps
add
rolb
or
xor
rolb
out
jns
or
add
iret
add
xchg
xchg
add
jge
test
xor
testb
lcall
pop
scas
dec
js
lcall
sub
das
mov
add
repnz
inc
pop
aam
add
jae
mov
insb
add
lds
push
and
icebp
inc
cmpl
xchg
aam
sbb
lret
loope
sbb
sbb
mov
cmp
call
fwait
leave
lods
movsb
sahf
xor
sarb
lds
fsubs
lcall
sub
lods
aas
int3
mov
fldenv
fsubl
jbe
xlat
push
mov
cmpsl
add
dec
xor
xlat
jnp
cli
lahf
add
sub
dec
test
jne
adc
test
mov
fdivrs
hlt
add
pop
add
add
lcall
mov
cmpsb
in
push
movsb
jnp
inc
add
retw
mov
movsb
scas
push
aad
sti
pop
jp
cmp
stos
movsl
sbb
cltd
insb
sbb
cmp
das
out
mov
or
ret
push
mov
cmp
scas
pop
add
dec
lret
mov
arpl
cli
ficomps
fstpt
insb
andb
mov
xor
pop
inc
aaa
inc
test
sbb
cli
push
sub
notb
jno
lods
sub
ljmp
aam
lea
sbb
lea
pushl
sbb
insb
shrb
mov
mov
lret
add
aad
out
inc
repnz
pop
mov
xchg
imul
mov
dec
adc
mov
test
jo
imul
inc
jne
int3
imul
and
dec
outsb
lcall
add
push
pop
push
jmp
sbb
repz
cmc
add
pop
add
add
sub
lcall
inc
shll
popa
inc
aaa
or
cwtl
ret
or
jecxz
sti
fimull
mov
rcll
stos
adc
and
mov
push
pop
popa
cld
xor
scas
xor
out
jb
fidivs
ds
fs
pop
andl
sub
inc
cmp
in
fstps
in
xchg
sti
scas
mov
xchg
aam
mov
out
pop
jne
fbstp
ds
and
fdiv
xor
mov
sbb
xchg
xchg
mov
call
les
daa
jae
mov
sbb
jle
mov
out
xchg
scas
sub
and
mov
pop
cmp
pop
test
push
addr16
pop
xchg
jle
jmp
subl
push
cld
popf
in
jg
jae
add
loop
adc
mov
ja
jb
xor
pop
inc
pop
lods
pop
cli
cmc
mov
mov
add
pop
add
add
mov
popf
jge
push
xor
in
inc
addb
ljmp
outsb
mov
aas
push
sub
add
movsl
adc
xchg
xchg
xor
enter
repz
adc
dec
les
ja
pop
ja
imul
lret
shl
inc
jae
lcall
ficomps
jns
sti
mov
push
adc
int
lods
out
lds
orb
sub
and
test
mov
jle
jbe
bound
adcl
push
xor
push
cs
lret
mov
insl
pop
xchg
pop
ljmp
pop
mov
imul
jno
and
or
cmc
mov
fdecstp
cld
sbb
test
sub
mov
out
mov
xor
test
and
push
mov
mov
jge
ljmp
rclb
push
xchg
mov
add
stos
cltd
inc
popf
jae
out
pop
dec
add
cmp
addl
add
and
xchg
jle
in
popa
mov
call
pop
sub
xchg
pop
jg
mov
or
mov
adc
inc
mov
in
or
inc
pop
push
fld
sub
mov
in
enter
fnstsw
push
xchg
cmc
loop
ljmp
fmuls
mov
inc
jbe
popa
push
adc
neg
pop
imul
sbbb
subb
rcll
aas
sbb
mov
into
sub
je
mov
push
mov
fisubs
mov
outsb
into
xorb
repz
fcoms
lret
or
inc
ss
int3
incl
xlat
ja
mov
mov
sub
pop
inc
push
mull
imul
enter
push
mov
or
add
push
push
or
dec
fnstsw
jge
subps
mov
nop
test
aam
int
mov
mov
out
rorb
add
pop
add
add
mov
les
inc
fiaddl
test
push
ret
push
jne
fcomi
inc
jb
out
and
sub
je
xchg
xor
sbb
pop
push
jb
stos
mov
push
pop
push
mov
adc
insb
sub
sahf
arpl
loop
lods
lret
mov
rolb
dec
daa
loope
push
cmovae
jae
pop
ljmp
pop
jne
dec
pop
add
les
adc
inc
push
ret
lret
xor
jle
aas
clc
std
sbb
std
dec
stc
xchg
sbb
mov
push
arpl
lret
popa
hlt
je
sub
xlat
push
or
jl
push
shlb
jno
mov
mov
jmp
loope
outsb
test
xchg
aas
and
sbb
xor
imul
mov
push
stos
cli
pop
lods
add
repz
arpl
out
push
adc
loopne
pop
add
arpl
addr16
add
mov
add
add
pop
add
add
adc
mov
dec
jb
mov
dec
pop
popf
out
orl
or
xor
jp
xor
cld
jg
fistps
ja
sbb
cmpsb
xchg
xchg
push
or
and
fldcw
push
mov
jne
leave
les
push
fwait
sarb
dec
sbb
add
js
xor
jb
mov
push
adc
shrb
imul
inc
popf
mov
dec
xor
clc
add
je
fildll
dec
stos
and
xor
cmp
sbbb
roll
push
and
push
sarb
dec
add
jb
js
and
repz
es
adc
sbb
fldl
cmpsl
rol
test
aaa
insl
pop
movsl
sbb
cli
negb
cmp
jne
and
test
mov
inc
loope
jecxz
push
stc
imul
push
cmpsb
faddl
ret
out
cmp
cmp
pushl
ja
inc
and
sbb
add
pop
add
add
sbb
lock
imul
mov
pop
xchg
ljmp
bound
jo
mull
fnstenv
pop
imul
test
repz
es
push
les
jb
push
sub
mov
dec
cmp
sub
pop
sub
lods
push
jae
jmp
insl
push
cmovae
add
sbb
scas
push
and
stos
enter
pop
in
mov
aas
int
push
int
pusha
add
and
jp
and
and
jg
push
jge
jg
sbb
dec
lcall
push
pop
pop
cs
ljmp
xchg
or
subb
push
fiadds
pop
push
adc
insb
mov
sub
dec
or
cltd
ret
cs
adc
push
loop
ljmp
sub
fisubs
outsb
add
int3
sbb
add
movsb
insl
in
xchg
sub
mov
cmp
fiaddl
frstor
add
add
push
scas
decb
adc
pop
and
add
pop
add
add
pop
shlb
mov
nop
rcrl
aaa
jle
push
push
pushf
jns
test
mov
leave
mulb
data16
mov
xlat
jo
cltd
cmp
int
push
pop
sbb
loopne
push
dec
and
es
iret
cmp
andl
loop
pop
or
cmp
out
lret
fstpl
insl
outsb
xor
dec
repnz
cld
xchg
cmpb
mov
dec
mov
repz
rcll
jno
jp
dec
ffreep
push
cmp
mov
mov
shrl
jo
shlb
xchg
aas
xorl
cmpsl
insb
fnstsw
pop
jae
clc
pop
cmp
lock
ds
cltd
stos
sub
lods
sbb
push
add
dec
cmp
sub
and
scas
addl
vunpcklpd
sub
mov
xor
mov
add
add
xchg
and
movsl
mov
mov
mov
cmpsl
fists
add
add
add
aas
sbb
add
sahf
jns
sbb
pop
and
jne
cmp
lods
aad
pusha
inc
jo
push
ja
push
pop
mov
stos
pop
jmp
mov
mov
and
inc
dec
jae
lds
out
push
dec
into
jb
cmp
and
cwtl
test
jecxz
incl
loope
ljmp
pop
cmp
rcrb
push
arpl
jns
or
divl
push
xor
scas
add
pop
inc
mov
mov
frstor
xchg
addr16
xchg
dec
dec
jns
dec
inc
rclb
mov
ljmp
leave
jb
mov
dec
cltd
cmpsb
lea
loop
cmp
pop
xor
rcrb
adc
lock
add
int3
stc
mov
mov
daa
pop
dec
jl
lahf
les
mov
and
insb
add
mov
push
jg
mov
outsb
sub
add
pop
add
add
ss
loop
lods
outsl
xchg
sub
push
jno
js
lock
movb
imul
cld
ret
out
xchg
imul
jg
add
adc
pop
hlt
arpl
cmp
mov
mov
xchg
sbb
clc
in
lahf
inc
xchg
jecxz
inc
imul
adc
out
cmp
sbb
xorl
adc
add
shrl
push
ficoms
ja
cli
scas
rcr
adc
xchg
and
add
dec
inc
mov
or
fcoms
push
push
sarl
in
push
pop
add
imul
xchg
idivb
mov
mov
xchg
imul
adc
xor
xchg
out
fmuls
aaa
sbb
dec
add
pushf
add
mov
jmp
mov
les
mov
adc
dec
mov
icebp
mov
add
mov
mov
xchg
mov
incl
add
add
add
pop
loop
je
int3
inc
fsubr
jge
push
daa
xor
cmp
adc
push
ss
cld
and
pop
mov
mov
leave
notb
ret
loope
faddp
mov
xchg
push
sub
xchg
mov
dec
sbb
sbb
and
adc
lea
push
outsb
adc
inc
fcomps
cmp
xor
mov
and
jae
cmc
xor
movsb
int
push
lock
push
mov
sub
sbb
mov
pop
xor
pop
add
in
sahf
dec
xlat
sbb
js
mov
lret
aam
cmp
ficompl
jle
popf
xor
or
jmp
or
std
test
mov
daa
add
add
popf
dec
cmp
test
xor
imul
push
mov
iret
sbb
dec
xor
or
mov
call
add
add
mov
xor
cmp
add
add
push
sarl
and
shrl
cmp
xor
dec
mov
pop
loop
lock
xchg
test
add
xor
dec
cmp
jmp
inc
mov
ljmp
or
push
xor
js
aam
xchg
hlt
cmp
mov
sbb
dec
scas
pop
xchg
push
sbb
lods
std
jecxz
xor
pop
mov
mov
adc
jmp
sbb
sub
lret
xchg
inc
movsl
xor
leave
pop
xchg
aaa
mov
push
je
jnp
ss
pop
cs
mov
fdivs
xor
outsl
push
push
jb
subb
mov
and
fiadds
push
ds
mov
cmp
sbb
cwtl
cwtl
sub
xchg
lds
mov
loope
adc
push
xchg
push
dec
outsb
jns
shrl
and
and
add
hlt
fisttps
test
cmpsb
mov
pop
add
add
push
shll
sub
jge
cmp
sub
scas
or
pop
stos
scas
test
iret
add
insb
nop
jecxz
dec
pop
jnp
mov
repnz
js
pop
fisubrs
les
fwait
dec
mov
inc
rolb
shl
lret
subb
ljmp
dec
pop
mov
clc
stc
clc
push
jno
ss
push
sbb
in
mov
mov
mov
mov
int3
add
sub
rep
pop
dec
push
push
iret
pop
int
pop
mov
xchg
enter
add
dec
add
nop
jb
xchg
jbe
roll
filds
or
fsubs
in
mov
sar
aad
push
lods
cld
lds
mov
divb
adc
shlb
ljmp
pop
xchg
test
rcrb
add
jl
inc
shlb
xor
aam
mov
into
fwait
cmc
pop
sub
dec
add
add
add
add
push
insl
leave
mov
loop
in
mov
xchg
and
cmp
out
xchg
loop
clc
outsb
test
je
jl
jno
in
mov
je
loop
inc
lret
inc
push
inc
out
mov
adc
hlt
and
clc
dec
orl
loop
mov
dec
divb
repz
jle
adc
inc
test
test
scas
pcmpgtd
jl
aam
mov
insb
sbb
popf
pusha
cli
mov
movsl
cmc
mov
mov
and
inc
sbb
je
jmp
movsl
dec
cmp
daa
aaa
jne
and
loopne
xchg
lret
push
dec
dec
popa
mov
ds
push
divb
into
pop
add
pop
stos
inc
xchg
cmpsl
xchg
cmpsb
pop
pop
cmp
pop
out
add
stos
sbb
out
inc
pop
mov
dec
mov
pushf
push
imul
mov
adcb
sbb
call
fdivrs
mov
adc
add
xor
mov
pop
mov
pop
inc
push
add
add
add
add
dec
mov
stos
ds
cmp
adc
xchg
add
stos
xor
mov
out
cmp
fdivrs
in
add
jmp
mov
call
icebp
sub
mov
in
sub
sbbb
imul
jbe
bswap
pushf
mov
cmp
adc
adc
xor
imul
rcr
dec
repnz
dec
cwtl
dec
and
lcall
lea
insb
adc
out
mov
adcb
inc
or
mov
nop
lock
repz
cltd
arpl
out
xchg
jp
rolb
bound
xor
sbb
lret
inc
shlb
inc
mov
pop
sbb
jle
es
pop
xchg
mov
jecxz
fwait
jle
jle
lea
es
cmp
jg
cmp
or
mov
adc
mov
sti
inc
out
aas
mov
scas
adc
add
add
add
add
repz
xchg
lock
sub
dec
jnp
stos
scas
push
cmp
jb
stos
xor
adc
repz
adc
mov
rcrb
in
adc
loop
out
std
inc
pop
cltd
jne
pop
pop
sarb
leave
xchg
mov
leave
cmp
sbb
into
sti
mull
or
in
ffreep
mov
jbe
mov
int
sub
jmp
incl
nop
adcb
outsl
popf
push
ret
cmp
xor
xor
sub
dec
mov
or
xor
lahf
aas
lret
call
mov
pop
ja
mov
mov
fstl
fdivs
lret
stos
cmp
sub
cltd
je
adc
or
es
pushf
mov
daa
cmp
sbb
inc
ljmp
mov
fnstsw
seto
xor
out
jge
cld
addr16
lods
and
je
repz
mov
loop
sbb
icebp
or
sti
scas
mov
leave
pusha
in
popa
icebp
mov
push
bnd
jl
movsb
mov
pusha
add
add
lods
imul
add
outsb
lret
pop
mov
sbb
cmp
es
lahf
dec
std
or
sbb
pushfw
and
les
dec
fistpll
subl
inc
imul
ret
sub
sub
repz
jmp
out
ja
mov
or
jae
cmpb
mov
cmpsl
xor
arpl
xor
lock
aam
insb
mov
xor
mov
lcall
repz
mov
loope
sub
mov
int
fsts
adc
jbe
test
jne
mov
push
adc
dec
repnz
dec
mov
jp
mov
cs
adc
ljmp
push
push
sub
lock
or
fldenv
push
aaa
testl
mov
ret
in
aad
dec
sub
fdivrl
arpl
dec
lods
cmp
add
in
out
ja
fists
push
or
add
add
add
inc
xor
and
popf
bound
or
scas
cltd
subl
inc
les
mov
sbb
sbbl
clc
sbb
fsts
adc
repnz
rorb
outsl
sub
cmp
xor
add
lods
aaa
test
sbb
lock
loope
jmp
mov
outsb
xor
lret
jbe
into
mov
sbb
or
sbb
rorl
cmp
push
xor
icebp
xchg
sub
repnz
adc
movsl
pop
jmp
xchg
fcmovbe
sub
xchg
pop
xchg
rolb
and
and
add
push
dec
std
js
loopne
jb
pushf
sbb
xchg
sbb
sub
xor
cmp
mov
lods
push
push
fsubl
mov
insl
fwait
cli
mov
mov
fsubl
leave
mov
add
mov
or
xor
add
scas
test
in
daa
jle
add
sub
mov
pop
add
add
push
mov
fmull
or
mov
xor
and
mov
sub
or
sub
mov
dec
sti
pushf
mov
jne
dec
and
pop
rclb
clc
mov
cmp
push
or
fs
push
jne
adc
mov
ret
xor
pop
data16
mov
in
jo
mov
or
jecxz
jl
sub
sbb
in
sub
sub
frstor
jecxz
push
pop
ljmp
lods
xchg
cs
lods
sub
movb
outsb
sbb
leave
and
cld
jns
out
outsb
push
dec
lahf
andb
fadds
mov
pushf
jecxz
inc
pop
push
in
stc
int
cld
jns
bound
sbb
shll
pusha
mov
cmp
ret
adc
sbb
aaa
test
outsl
out
sti
pop
testl
subb
pop
xlat
mov
add
jg
idivl
mov
iret
jne
add
pop
add
add
and
and
pop
fwait
iret
daa
xchg
adc
mov
in
lahf
and
std
addl
pop
cmp
cld
push
lods
sub
sbb
mov
inc
mov
ds
push
insl
rol
daa
or
xor
mov
jae
int
sti
popa
aad
mov
sti
out
xor
into
jle
scas
mov
adc
ja
test
fdivr
aas
shrb
jno
mov
xor
iret
data16
fsub
sbb
xchg
loop
xor
lock
sbb
jl
xchg
or
sbb
dec
in
fildl
inc
add
mov
add
mov
lret
dec
lret
mov
jp
pop
push
repnz
cs
pop
insl
mov
dec
out
push
mov
mov
cmpl
andl
sbb
xor
adc
sub
inc
sbb
or
cmp
sti
jg
les
out
jl
add
pop
add
add
pop
sub
sub
insb
push
dec
ja
lea
dec
mov
fbstp
jno
popf
mov
mov
dec
lods
mov
call
jb
loope
pop
in
push
test
mov
int
and
idivb
or
out
es
mov
xchg
and
adc
mov
cs
push
in
dec
and
and
adc
lock
gs
stos
adc
cli
test
fwait
std
icebp
pusha
mov
test
in
adc
cmp
inc
push
loop
call
pop
adc
push
jle
or
cmp
jg
pop
cld
hlt
inc
sub
out
dec
adc
mov
push
xchg
insb
cmp
xchg
loope
repnz
lahf
pop
sub
lret
test
insb
daa
dec
popf
or
inc
cmp
ret
sbb
lahf
push
adc
xchg
mov
xor
imul
add
jnp
fnsave
xchg
testb
movsb
orl
add
add
add
cmp
out
xchg
mov
movsb
dec
into
in
int
int3
push
and
imul
jge
pop
pop
or
mov
ret
movsl
xorl
stos
std
jo
xchg
sbb
pushl
mov
cmp
or
xor
outsb
out
dec
sub
adc
lock
xchg
dec
pop
pop
lret
aad
cwtl
push
or
push
sahf
test
and
xchg
or
mov
push
pop
xor
mov
scas
in
xchg
mov
adc
fwait
aam
cmpsl
inc
push
stc
jo
mov
inc
movsb
lock
or
jns
dec
rcr
nop
xor
addl
cmp
andl
aam
cmp
dec
in
dec
cmpsl
arpl
aad
repnz
jns
sbb
and
mov
arpl
sbb
jns
sub
mov
loopne
mov
cmp
repz
fmull
push
pop
fildll
jmp
mov
sub
mov
jno
std
outsl
mov
inc
loop
dec
lret
adc
mov
add
pop
add
add
xchg
pop
mov
iret
mov
fadd
jmp
in
les
loopne
mov
scas
sub
imul
xchg
mov
xlat
lods
test
not
jae
sbb
negb
push
les
sub
dec
rcl
jo
scas
mov
push
mov
adc
jns
insb
ret
and
mov
pop
push
out
mov
jge
mov
fildl
in
pop
ret
ja
cmpsb
je
inc
mov
cmp
rorb
in
xor
enter
xor
pop
xchg
mov
enter
adc
in
mov
lcall
fisttpll
daa
ret
add
out
daa
cmp
sub
jecxz
cmp
stc
es
or
jmp
stc
insl
mov
int
sar
inc
imul
or
addr16
sub
jp
rolb
lcall
xchg
sub
pushf
push
dec
add
jmp
ficoml
or
add
add
add
imul
out
mov
or
sub
sub
loope
mov
incl
fistps
adcl
dec
maskmovq
divl
push
mov
in
insl
push
jl
sub
mov
dec
test
out
jg
mov
outsb
repnz
mov
pop
test
jg
outsl
aam
sarb
std
sub
inc
xchg
cs
lea
cmpsb
sub
inc
fstps
shll
cwtl
push
jb
sbb
jnp
jmp
les
cmp
mov
mov
pop
push
add
lahf
leave
adc
sbb
jb
push
and
sub
push
js
add
aas
add
push
movsl
leave
js
clc
lods
xor
stos
daa
add
sub
push
jl
push
rcrl
add
xor
fimuls
pop
pop
fnstenv
jmp
xor
xchg
lds
push
mov
out
cwtl
or
add
in
pop
movsb
pushf
sub
push
add
adc
jbe
cmp
adc
fstl
ss
cmp
dec
stc
ret
dec
push
aas
or
fstps
dec
cs
mov
bnd
in
stos
or
in
adc
cmp
inc
fdiv
xor
adc
push
inc
and
pop
outsl
push
subb
outsl
push
mov
inc
test
push
js
sbb
test
test
mov
or
mov
xor
mov
inc
sub
fdivrs
cmp
iret
jecxz
lds
dec
pop
jo
xor
loope
and
repz
or
lcall
out
and
dec
and
dec
jo
cwtl
dec
sub
inc
pop
jp
and
scas
add
and
mov
push
inc
cmp
hlt
xor
pop
cmp
dec
cli
inc
jg
int
cs
push
cmp
add
add
add
cmpsl
push
scas
xchg
aad
scas
mov
insl
xchg
or
psadbw
lock
pop
adc
sbb
push
cmp
aaa
and
jne
stos
xchg
fwait
xchg
loop
js
std
imul
pusha
and
hlt
pop
inc
repnz
push
scas
pop
push
scas
sarl
sub
dec
fisubrs
xchg
lahf
addr16
cs
pop
adc
cmp
dec
add
test
push
sbb
fdivrs
xor
shl
sbb
cli
dec
ja
lret
aas
or
and
mov
jecxz
out
adc
test
imul
mov
pop
sahf
add
xor
das
ljmp
sbb
addr16
adc
movsb
sbb
dec
adc
mov
xchg
jg
push
push
mov
and
push
inc
dec
jmp
mov
adc
fiaddl
lock
std
cmp
jle
fistps
push
cwtl
cmpsb
sgdtl
pop
add
add
jnp
inc
mov
mov
xchg
add
in
cmp
mov
mov
sub
xor
mov
pop
cmp
dec
fcmove
sbb
jno
sbb
dec
sub
pusha
xchg
xchg
in
dec
mov
mov
scas
int
int3
dec
out
gs
dec
sbb
ficoml
mov
popf
int3
lock
daa
jg
xor
fstps
push
pop
add
mov
add
push
cmc
sbb
pop
inc
je
mov
frstor
lods
and
lcall
fcoml
test
or
and
jle
adc
ret
stos
push
mov
mov
mov
mov
sar
add
or
out
pop
adc
add
negb
xchg
xor
xchg
test
sub
loop
xchg
pop
lds
xlat
fimull
xlat
lods
adc
add
add
add
stc
int
xchg
mov
sahf
add
xchg
std
lret
pop
sub
mov
cs
sub
andb
and
in
push
cmp
jecxz
push
inc
mov
aad
int
pop
mov
jmp
out
mov
test
mov
sub
cmp
mov
shrl
cmpl
adc
jmp
pop
mov
popf
cwtl
stos
push
sbb
js
andb
sub
and
mov
adc
mov
jl
shr
out
in
and
lea
mov
jb
mov
mov
pop
into
mov
hlt
fiaddl
fnstenv
loopne
in
mull
insb
mov
push
lock
and
mov
and
sub
cmc
in
into
pop
and
jns
add
lret
jp
out
sbb
adc
inc
aam
test
or
loope
cmove
dec
jmp
dec
scas
iret
outsb
jmp
in
pop
outsl
in
push
popf
pushf
mov
add
pop
add
add
xor
dec
push
dec
bound
cltd
int3
and
out
sbb
dec
mov
inc
lcall
and
loope
and
pop
dec
adc
mov
or
cmp
lock
pop
lods
and
or
jmp
xchg
nopl
push
and
mov
in
or
or
call
les
mov
add
lret
addb
add
clc
out
outsb
mov
fs
leave
cwtl
mov
mov
cmp
or
jns
loop
out
add
mov
leave
mov
mov
imul
jae
jmp
or
and
ljmp
mov
inc
loop
maskmovq
divl
sub
adcl
mov
push
ss
stos
clc
sub
mov
add
inc
pop
xchg
adcl
idiv
repz
sbb
std
sbb
stc
cld
or
into
cmp
insb
mov
add
add
xchg
negl
mov
adc
dec
push
lret
in
cmc
mov
test
ret
sbb
movsb
js
call
into
push
inc
shlb
cmc
lcall
movsb
adc
iret
jmp
cs
inc
fisttpl
sub
push
xchg
imul
adc
or
sbb
loopne
xchg
mov
mov
sub
int
mov
enter
mov
les
sub
adc
or
adc
xchg
jb
ja
aaa
shll
jl
push
ret
push
lahf
sub
fisttps
pop
jecxz
pop
stos
mov
imul
aad
insl
push
rclb
lods
pop
aaa
sub
cltd
int3
xor
call
ret
loopne
mov
fistpll
push
mov
add
dec
jmp
ljmp
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
jnp
push
es
mov
ret
xchg
adc
nop
push
mov
adc
cld
sbb
or
pop
sub
movsb
add
inc
aam
mul
add
ret
adc
jns
xor
push
insl
dec
test
sbb
mov
fs
fcoms
loope
mov
sbb
aam
test
push
rcll
ret
lahf
adc
mov
jbe
adc
jp
lahf
ja
aas
push
bound
cltd
fwait
iret
test
pop
add
jmp
mov
mov
add
test
int3
lret
insb
test
call
dec
addr16
adc
and
add
inc
mov
repnz
test
leave
arpl
add
ror
pop
fs
mov
mov
xchg
stc
je
aad
adc
lds
lahf
fwait
lods
mov
add
mov
dec
pushl
scas
retw
adc
adc
add
add
add
mov
jno
cld
xor
shll
dec
imul
aas
dec
sti
sbb
js
clc
cmpsl
pop
dec
enter
xlat
fcoml
outsb
mov
arpl
mov
xchg
out
leave
pop
xor
std
ret
das
adc
mov
bound
and
pusha
mov
pop
or
and
sbb
dec
test
inc
std
dec
inc
or
add
xchg
or
mov
lret
dec
gs
pop
sub
push
cmovp
xor
outsl
cmp
push
movsb
shll
aam
jg
out
aas
mov
mov
test
sbb
frstor
sub
bound
mov
jbe
das
add
ljmp
cmp
out
mov
mov
ja
bound
dec
loop
or
test
push
add
inc
ja
pop
aas
pop
jmp
mov
rclb
add
insl
or
mov
jecxz
sub
jecxz
loope
imul
sbb
addr16
lret
jb
mov
cmp
test
int
adc
jl
pop
push
ljmp
mov
dec
add
daa
adc
test
pushf
push
xor
mov
inc
in
daa
jp
mov
xchg
out
icebp
mov
cmc
xlat
rcrb
fxch
out
test
stos
xor
push
pushf
mov
movsb
adc
mov
push
pop
leave
add
arpl
sub
rcrl
cmp
clc
bnd
out
dec
add
mov
stos
dec
ret
xchg
sub
or
lods
jnp
or
mov
popa
push
sbb
or
mov
iret
out
or
sbb
cltd
xchg
xchg
and
cmpsl
fwait
into
pop
adc
mov
in
aas
ds
jp
repz
jae
ja
div
fisttpll
sbbb
push
add
pop
add
add
lcall
mov
pop
outsl
sbbb
lods
sbb
das
push
test
in
pop
xor
mov
pushf
push
outsl
aaa
je
add
jno
jecxz
aad
leave
lcall
fnstenv
mov
repz
sbb
cmp
movsl
mov
mov
dec
xchg
xchg
cmp
cwtl
and
int3
lods
sbb
mov
ja
jmp
stos
pop
lock
mov
xchg
sbb
xchg
mov
es
pop
jne
jp
jmp
clc
jecxz
arpl
or
test
sarb
xchg
icebp
inc
push
jl
pop
jno
jnp
and
push
andl
xor
jns
sqrtps
icebp
shlb
or
out
sub
aam
dec
jbe
fstl
in
xor
cmp
bound
scas
mov
mov
push
bound
dec
sahf
sub
add
cli
std
jg
mov
inc
repnz
add
pop
add
add
in
fnsave
dec
bound
leave
lods
ror
mov
inc
cmp
mov
xchg
cmp
stos
pop
jne
xchg
jne
xor
push
mov
pop
adc
out
push
test
xchg
mov
lock
mov
push
cmp
jge
mov
mov
fdivs
adcb
sub
lret
nop
pop
pop
nop
idivl
fisttps
xor
cli
mov
aam
ret
addr16
sub
and
mov
cld
int3
aaa
mov
test
push
test
into
ja
xor
fcompl
jae
push
out
lods
fwait
scas
mov
cmp
adc
sahf
arpl
mov
xlat
aaa
jmp
mov
cmc
sbb
test
rclb
pushf
sarb
jl
adc
mov
les
inc
cmpsb
xor
repz
sarb
das
lods
cmp
add
add
mov
std
incl
mov
lods
in
sbb
add
add
add
mov
cmp
mov
jg
sahf
sbb
or
lcall
idiv
add
movswl
das
inc
js
add
xchg
and
inc
mov
in
ret
xchg
in
push
jmp
in
lcall
daa
jae
xor
pushf
addb
or
subb
add
or
sub
enter
pop
les
stos
filds
add
add
into
popf
sub
sub
xchg
cmc
lahf
push
and
and
pushf
xchg
or
inc
sub
cli
adc
sub
stos
lcall
dec
addr16
mov
clc
mov
push
xor
repnz
es
lahf
insb
mov
sbb
jb
out
push
mov
push
movsl
mov
or
inc
jno
mov
mov
push
daa
xchg
addr16
aam
call
and
push
es
jg
pop
pop
mov
lcall
add
add
lahf
pop
lods
daa
dec
out
adc
xchg
cld
test
mov
add
cmc
test
dec
push
cmc
loope
jge
jbe
and
mov
stos
xchg
repnz
or
fdivs
adc
aaa
sbb
dec
inc
inc
jno
decb
push
adc
xchg
mov
jge
mov
xor
mov
cmp
mov
dec
test
or
inc
push
push
pop
mov
add
push
cltd
stc
dec
add
inc
divl
mov
pop
xorl
and
cmc
imul
cli
sub
mov
mov
in
pop
cmp
dec
dec
mov
rorl
xchg
mov
dec
mov
sbb
xor
call
inc
mov
scas
sub
xlat
mov
or
mov
lods
pusha
cltd
jbe
ja
adc
pop
mov
fwait
into
dec
push
inc
sub
dec
xchg
out
fsubr
mov
in
iret
xchg
sbb
adc
mov
cld
shl
add
or
mov
add
stos
cmp
repz
add
add
add
gs
les
mov
ret
sub
jo
or
cmpsl
hlt
mov
sti
sbb
pop
pop
outsb
cmp
bnd
fdivr
sub
stos
mov
cs
cmp
adc
test
xchg
stos
into
dec
sbb
nop
ret
jle
add
add
xor
mov
cmp
rcrb
xchg
pop
xchg
out
int3
fadds
repz
adc
fcom
into
xor
xor
out
loope
das
sub
bound
jl
loop
loop
cmp
cmp
cmp
loopne
jp
sbb
leave
sub
test
xchg
push
xchg
pop
jb
dec
inc
daa
inc
xchg
sub
jp
inc
mov
dec
mov
sar
xchg
mov
push
shlb
fiadds
jmp
inc
addb
repnz
in
scas
leave
sub
push
xor
loope
xor
pop
push
movsb
cs
jae
adc
loope
in
out
inc
xchg
cmp
xor
xor
loop
add
sbb
add
add
add
in
int3
pop
jno
and
enter
in
cli
cmp
pop
jne
jns
ret
loopne
in
sub
xchg
mov
lahf
add
sub
xor
ss
xchg
inc
iret
das
and
loope
push
fldt
pop
pop
movb
or
daa
jp
fs
test
addr16
stos
outsl
jp
int3
add
push
arpl
jp
cmpsl
roll
push
pop
sti
mov
and
maxps
adc
mov
jnp
das
sahf
or
es
mov
sub
cli
iret
test
or
adc
cmp
xchg
adc
cmp
sbb
sub
xchg
bound
mov
je
jae
outsb
add
xchg
stos
sbb
sbb
insl
ljmp
mov
in
push
and
jo
testb
lock
pop
cmpsb
push
cwtl
pop
or
mov
add
add
ficoms
stos
sbb
jmp
ljmp
in
sbb
add
jb
or
cmc
popa
mov
fdivrp
sub
iret
or
das
lods
test
xor
arpl
or
idivl
pusha
inc
adc
xchg
dec
scas
adc
enter
lock
test
xchg
icebp
mov
rep
aas
mov
orb
push
fdiv
xchg
sub
pop
in
or
sub
std
aam
lods
out
pop
loop
lahf
imul
data16
test
arpl
or
lea
fimuls
dec
jmp
mov
mov
into
in
shrb
mov
cld
push
and
and
addl
jbe
inc
sub
shll
nop
nop
cli
xchg
adc
in
ret
js
addr16
dec
adc
sti
or
icebp
push
insb
div
fisttps
mov
rorl
aas
jne
cmpsl
push
aaa
cmp
addr16
stos
and
lret
mov
mov
cmp
xor
std
sti
enter
add
add
in
out
arpl
aas
mov
outsb
or
push
add
pop
add
add
cmp
or
xor
cmp
enter
xchg
mov
or
mov
ds
pop
xchg
xor
pop
cmp
fwait
adcl
sbb
cmpsl
in
negb
aas
jne
sub
mov
jno
mov
jnp
cmp
mov
outsb
inc
xor
mov
xor
leave
cmc
lahf
push
or
pop
pop
aam
cmp
lock
dec
inc
repnz
adc
hlt
mov
and
push
jmp
xchg
sub
dec
ja
add
push
shlb
stos
bound
test
out
inc
insl
jle
sbb
cld
das
or
fcmovu
xchg
inc
mov
pushf
mov
cwtl
pop
roll
adc
dec
sub
cmc
rcl
xchg
fwait
icebp
jmp
scas
icebp
lea
sbb
jo
rcll
pop
mov
jp
test
mov
faddp
and
jnp
enter
test
in
cmpsl
bound
add
sbb
out
cld
mov
out
xchg
jge
nopl
add
add
add
sub
cmpsb
dec
cs
xchg
pop
adc
mov
dec
loopne,pt
or
cli
cmpsl
cmp
cmp
inc
cmp
ret
or
sub
lds
mov
cmp
arpl
add
sub
out
mov
sub
inc
push
push
fldt
push
jg
in
je
idivl
inc
add
outsl
pop
loope
push
xchg
mov
jl
adc
jns
fdiv
cwtl
add
icebp
add
and
or
xchg
repnz
pop
xchg
lods
inc
sbb
jns
leave
mov
pop
mov
jne
and
jg
dec
divl
in
xorb
jge
adc
push
and
inc
adc
call
nop
hlt
in
mov
outsb
xchg
inc
mov
cmp
xchg
dec
cs
mov
lds
fiaddl
xchg
pminub
enter
in
movsl
test
jns
add
in
add
cmp
out
lock
mov
test
and
add
add
add
xor
mov
decb
dec
test
xchg
enter
push
or
fistps
cmp
pop
push
js
inc
and
jnp
dec
cmpsb
in
xor
and
ds
in
dec
insb
lret
sbb
inc
scas
inc
xchg
cmp
ret
add
je
inc
loop
xchg
cmc
mov
mov
fisubrl
push
or
xchg
or
insl
mov
jno
sbb
sub
xor
xlat
mov
repz
mov
and
push
sti
adcb
pusha
xor
dec
in
pusha
jmp
ret
or
push
out
and
jae
ret
adc
clc
nop
jae
mov
or
mov
hlt
aam
sbb
lahf
cmc
push
xor
pop
popf
pop
sbb
aas
in
mov
push
out
stos
xchg
mov
add
dec
xor
dec
inc
outsl
imul
xchg
in
jne
xchg
push
push
or
or
outsl
cs
push
lods
dec
add
lods
jg
sub
add
lret
and
add
add
add
sub
cmpsb
ljmp
sbb
pushf
mov
jmp
dec
mov
out
push
mov
andl
jl
lods
mov
inc
les
and
lea
or
jl
les
aas
in
movsl
fcmovb
mov
jnp
lock
call
cmpsl
imul
dec
in
shlb
mov
pushf
repz
pop
mov
fsubrl
cmpsb
or
imul
inc
jmp
pop
inc
cltd
int
cmp
fsubrl
ss
cmpsb
push
cmp
adc
or
sbb
stc
pop
loope
mov
or
das
push
lret
cmpsl
sbb
inc
xchg
add
dec
adc
mov
repnz
mov
jnp
xchg
xorb
lods
xor
repz
movsb
test
add
jg
cld
fcmovbe
out
call
add
pop
add
add
or
into
dec
xor
mov
lahf
fsubs
aam
mov
jp
mov
jl
mov
dec
dec
mov
sub
push
stos
aas
dec
xchg
mov
lea
mov
test
sbb
cwtl
out
lds
sar
iret
imul
aad
push
jecxz
inc
mov
mov
lret
mov
xchg
jae
frstor
add
add
cwtl
or
add
mov
dec
sub
mov
pop
movsb
jge
dec
lods
mov
mulb
xlat
adc
ds
pop
fcmovne
or
shrb
insb
jge
dec
xchg
fdiv
mov
or
mov
xor
cltd
enter
push
cld
lods
flds
loope
cmpsb
fcoms
pop
mov
cmp
lock
xchg
mov
mov
inc
addr16
sbb
mov
pushf
test
insl
stos
sub
mov
pop
pusha
or
clc
popl
cmp
popf
add
add
ret
mov
iret
mov
inc
stc
cmp
sub
add
pop
add
add
and
jmp
rolb
xor
clc
push
xor
mov
lcall
pop
ret
add
fwait
dec
in
out
jo
std
mov
adc
imulb
pushf
add
jecxz
test
pop
mov
outsl
sbb
mov
clc
rclb
into
jle
cmc
leave
xor
xchg
ljmp
icebp
push
pop
call
jmp
hlt
jnp
or
lret
pushf
lods
inc
dec
jle
xchg
stc
lds
movsl
xchg
scas
jecxz
jmp
lock
inc
popa
push
xlat
mov
jb
aaa
std
cld
cli
mov
xchg
and
jnp
loope
cmp
cmp
dec
es
addl
std
popa
mov
mov
into
int3
mov
push
adcl
movb
lock
add
adc
dec
pop
outsl
iret
push
je
push
mov
or
dec
std
or
stos
test
and
push
iret
pop
jle
dec
pop
add
mov
lahf
and
mov
or
xor
add
add
add
sbb
dec
in
out
out
ret
and
arpl
popa
decb
pop
ret
mov
pushl
into
test
adc
fmuls
mov
inc
pop
outsl
imul
ss
xchg
in
xor
or
popf
fstl
mov
arpl
sbb
mov
add
ret
in
test
lock
mov
xlat
push
adc
inc
lcall
pop
test
xor
enter
cmc
shlb
movsl
jge
push
fmul
shl
xchg
inc
xlat
icebp
iret
outsl
jecxz
pop
dec
das
dec
mov
lods
test
sti
mov
aas
pop
or
cmp
dec
lds
xor
cmp
ror
insl
pop
clc
bound
pop
push
mov
and
ds
sub
push
std
movsb
aad
sti
cmpsl
dec
push
jge
cwtl
bound
aas
or
aaa
daa
adc
push
lret
shlb
cli
clc
cli
clc
sarb
js
dec
int
and
add
add
shlb
lcall
fnstsw
cmp
fcomp
and
push
cmp
pop
fucomp
mov
cltd
aaa
pop
cmp
je
imul
dec
push
sbb
jmp
push
frstor
add
ljmp
xchg
sti
negl
push
dec
cmp
mov
inc
or
cltd
decb
mov
ds
add
icebp
or
mov
sahf
outsl
push
mov
jp
ja
pop
icebp
popa
es
inc
icebp
mov
adcb
in
nop
addb
jecxz
clc
sub
shll
lods
pop
xchg
out
loopne
lcall
cltd
xor
shrb
iret
leave
or
or
lods
faddl
adc
outsb
cmp
outsb
pushf
xchg
sub
lahf
mov
repnz
xor
pop
jb
test
dec
out
mov
inc
aas
lcall
add
add
jnp
out
add
push
sbb
in
inc
add
pop
add
add
xchg
stos
cmp
lcall
movsl
push
lea
aam
and
js
ljmp
xor
fsubl
jae
push
push
test
dec
jae
or
pop
ljmp
mov
fdivl
inc
inc
add
pop
dec
adc
dec
gs
xor
push
lret
data16
das
and
adc
jo
dec
or
fcmovu
shlb
jmp
add
out
leave
test
arpl
xor
jb
loop
outsb
aas
les
mov
adc
push
fsub
dec
xchg
adc
les
mov
cmpsb
frstor
mov
push
pop
or
lock
stos
bound
xor
or
xchg
or
mov
push
sub
popa
xor
xchg
sub
dec
add
aam
lods
pop
sbb
fdivrs
sbb
pop
icebp
repnz
and
lods
popl
fs
es
data16
pop
sub
daa
test
aas
das
inc
daa
add
pop
add
add
scas
dec
cltd
adc
pop
jg
movsb
dec
xor
in
addr16
mov
loope
adc
sub
out
lock
mov
sarb
movsb
inc
cmp
mov
mov
clc
sub
xchg
fwait
mov
iret
fidivs
decl
mov
movsl
shlb
sti
mov
adc
test
mov
jae
repz
out
scas
daa
xchg
dec
and
push
insb
and
stos
and
imul
xor
in
punpckhwd
pop
mov
aas
jbe
shl
orl
mov
jp
imul
cmp
sub
ror
jns
ljmp
push
ret
aad
das
insb
cltd
add
sbb
rcl
data16
lods
ljmp
cs
cmp
fdivl
push
hlt
sarb
xor
inc
inc
loop
or
xchg
mov
ljmp
inc
test
jae
dec
rcrb
lcall
add
add
dec
mov
imul
clc
imul
add
add
add
adc
jbe
inc
jp
mov
dec
mov
mov
arpl
and
inc
je
cs
dec
rcrl
dec
cmp
xorl
repz
and
std
push
mov
and
arpl
imul
test
jo
fxch
std
repnz
push
int
bound
inc
es
push
nop
es
push
pop
mov
pusha
sbb
lods
rcl
push
add
mov
dec
cmp
fs
mov
scas
cmpsl
into
push
jae
les
add
lret
ljmp
lods
xchg
ja
pusha
bnd
mov
mov
lahf
add
ljmp
leave
test
pop
gs
aas
pop
inc
out
cmp
std
jl
gs
dec
xor
mov
xchg
into
push
mov
add
push
adc
pushf
sub
mov
xor
pushf
mov
jge
mov
jne
adc
enter
jb
out
mov
fs
and
add
and
push
sti
cmpsl
push
mov
ja
push
fcoml
add
pop
add
add
out
mov
xor
rcll
fsubrs
push
loop
jp
rcll
movsb
push
jnp
jecxz
push
add
lcall
push
rclb
mov
stc
mov
pop
inc
sub
shl
lret
xor
shll
mov
popa
mov
stos
fmulp
mov
push
jp
pop
push
add
xchg
test
lret
dec
repnz
add
stos
mov
cmpsl
mov
stc
and
jmp
jns
es
adc
mov
fists
add
dec
mov
call
xchg
fidivs
fsubs
mov
add
enter
gs
xor
icebp
mov
mov
and
dec
pop
pop
arpl
ficoms
jo
push
sub
mov
or
pusha
enter
aad
lods
inc
pushf
nop
sbb
test
sub
sbb
or
push
xchg
xor
popf
fcmovnu
out
stos
rorb
outsl
dec
sahf
lret
add
mov
std
mov
ljmp
popa
rcrl
add
add
add
movsb
mov
stc
xchg
push
xchg
adcb
test
dec
adc
roll
push
mov
mov
jle
pop
sbb
xchg
or
cmp
xor
xchg
loope
pop
jge
adc
pop
mov
cwtl
mov
xchg
cmp
push
xor
lcall
lds
stos
sbbl
fwait
lods
mov
sti
push
stc
xchg
popf
mov
xor
js
in
call
jmp
add
into
dec
mov
sbb
orl
or
fiaddl
inc
mov
lcall
in
or
sbb
xor
inc
nop
fistpl
hlt
mov
loop
fcos
mov
hlt
push
mov
jnp
sub
adc
arpl
test
rorl
pop
sub
xchg
rorb
data16
mov
jle
lds
xchg
and
sbb
stc
in
addb
pop
add
add
sbb
mov
popf
ss
sbb
mov
push
inc
and
cs
inc
fndisi(8087
mov
pop
addb
mov
pop
sub
icebp
popa
imulb
cli
leave
and
cltd
and
xchg
call
sbb
cmc
in
and
arpl
cmp
aad
cmpsb
sbbb
xchg
jnp
xor
fwait
xor
cmc
loope
rolb
test
cmpsb
cmpsl
dec
or
mov
sub
out
add
push
jne
popf
or
mov
mov
shl
and
ret
xlat
je
cmpsb
add
shll
and
mov
xor
inc
icebp
mov
push
push
fstpl
mov
pushf
mov
push
lods
ja
mov
rcrl
dec
push
fnstenv
jnp
imulb
dec
cli
jnp
ret
fistpl
ljmp
ljmp
pop
popl
add
add
xchg
ficomps
cmp
xorb
add
add
add
sar
sub
rep
fistpll
jmp
scas
lret
sub
dec
sub
push
notl
sahf
xchg
imul
jns
ret
mov
scas
push
ja
push
out
sub
lret
sub
call
mov
mov
inc
xchg
rep
jo
mov
fwait
in
xchg
mov
clc
leave
cmpsl
cmp
lret
jbe
dec
or
scas
cwtl
mov
pop
nop
xchg
iret
mov
inc
xlat
xchg
and
jb
pop
fadd
sub
fidivrl
inc
add
xchg
leave
add
add
pop
pop
adc
xchg
scas
and
mov
or
mov
add
test
jl
lcall
adc
addr16
stos
loop
in
dec
xlat
repz
test
stc
sbb
sub
or
test
int
push
and
leave
push
add
mov
lods
push
stos
mov
arpl
ja
js,pn
xchg
call
add
pop
add
add
popa
leave
clc
ds
adc
cmp
in
pop
cld
in
xchg
mov
dec
push
rol
mov
cmc
jmp
and
popa
ja
aam
int
dec
mov
dec
mov
js
add
cmpsl
ret
pop
lock
popf
dec
divl
out
inc
sbb
fimuls
xchg
and
dec
scas
jb
sti
repnz
sub
out
push
adc
outsl
subl
add
or
clc
gs
aad
jo
cmp
out
clc
ja
xor
mov
enter
lahf
leave
jno
fwait
inc
jle
fisubrs
loopne
dec
dec
mov
ljmp
jmp
gs
insb
movsl
rcrl
mov
stos
cmpsb
int3
cmpb
pop
stos
adc
cmp
orl
xchg
out
or
push
jb
repnz
sub
xor
mov
jne
in
lds
leave
mov
icebp
in
lock
mov
sub
test
js
add
pop
add
add
in
and
xlat
popa
xchg
int3
xchg
dec
addr16
mov
push
xchg
mov
jne,pn
popf
mov
pop
ljmp
and
pop
lahf
dec
pop
mov
lcall
xchg
adc
cmpsl
adc
or
sub
bound
pop
pop
popa
cltd
push
fistpl
mov
jns
in
adc
cmp
rclb
popa
js
jae
insb
icebp
std
gs
xor
or
ljmp
push
jae
sub
or
popa
jge
dec
sbb
insb
push
negl
aaa
mov
push
enter
pusha
jne
fdivrs
cli
aam
xor
add
add
cpuid
lods
cld
adc
inc
or
adc
out
fists
adc
sub
and
jp
std
ret
push
and
repz
fidivrl
xchg
sbb
aam
lock
add
sti
pop
jge
divb
repnz
jg
add
pop
add
add
clc
mov
testl
sub
jmp
pop
inc
mov
pusha
lret
scas
enter
inc
loopne
jno
leave
inc
movsl
mov
push
adc
in
inc
cmc
stos
cmp
cmp
int3
jle
cmp
mov
mov
pop
inc
cmpsl
and
dec
fsubrs
cmp
icebp
in
je
out
rolb
xor
push
mov
lea
push
fsubrl
jbe
je
mov
nop
lods
adc
das
movsl
bound
add
push
fmuls
inc
mov
aam
rol
lret
mov
cmp
xchg
dec
movsb
sti
or
push
notl
loop
hlt
dec
sub
mov
in
into
stos
mov
sbb
call
jb
mov
xor
mov
xchg
or
add
nop
les
mov
xor
std
mov
xchg
adc
pop
je
aas
mov
push
fnstcw
push
adc
lret
divb
cmp
imul
daa
ret
and
push
push
addr16
add
fsub
std
in
popf
dec
int
hlt
mov
xor
add
add
add
inc
daa
jnp
les
shlb
js
xchg
test
arpl
push
or
sbb
adc
sub
fcmovb
sub
jecxz
lahf
xor
jg
or
cld
gs
out
lods
and
cmp
cmpsb
xlat
mov
mov
fsub
fcomps
push
in
mov
jae
sub
add
in
movsb
aaa
cmp
sbb
inc
inc
mov
xchg
sbb
in
xchg
xchg
mov
fwait
aaa
sbb
das
xor
insl
pop
and
lea
ror
mov
pop
push
jne
or
cld
xlat
negl
stos
or
gs
xchg
push
sbb
addr16
mov
pushf
inc
sbb
push
fidivs
cmp
ret
arpl
mov
loopne
inc
dec
repnz
sbb
pop
jno
xchg
stos
inc
xchg
pushf
hlt
stos
pop
cmp
cld
push
test
or
or
pop
ficomps
mov
mov
pop
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
dec
out
jns
sar
sbb
push
fnstcw
idivl
or
hlt
fisttps
addr16
inc
push
push
aad
or
lock
adc
in
fists
sub
insb
sahf
cmpsb
fcomi
jge
orl
psrld
xchg
dec
loopne
andb
movsb
iret
int3
jnp
movsb
cmp
jecxz
inc
ljmp
ljmp
xor
pusha
data16
shrb
jge
adc
test
xor
addr16
repnz
pop
cmc
jmp
dec
lods
cmp
movsl
insb
sub
add
es
dec
sarb
lret
push
mov
jae
pop
ljmp
imul
movsl
pop
shll
inc
stos
and
mov
cmp
add
in
dec
push
or
mov
jno
mov
jl
aas
dec
jbe
jno
sub
insl
jge
xor
and
ljmp
add
add
push
sti
das
ret
lods
daa
jmp
xor
add
add
add
jne
xor
rorl
jle
push
push
cmc
int3
mov
mov
jmp
mov
xchg
xor
scas
test
ret
xchg
jbe
inc
jmp
xchg
std
int3
pushf
cmc
add
push
insb
inc
fbstp
std
mov
xchg
daa
cmp
jae
test
sbbl
scas
out
mov
callw
cwtl
loop
in
das
aad
and
and
pop
jbe
cmp
mov
add
inc
mov
repnz
les
insl
fsts
aaa
inc
push
xor
repz
out
shl
out
mov
add
push
pop
stc
adc
cmp
xchg
mov
sbb
decl
aas
dec
imul
imul
jle
ss
lods
aaa
dec
rol
andl
cmpsb
sub
outsl
mov
lods
push
lcall
fdivl
adc
add
sub
adc
cmpsl
hlt
cwtl
mov
add
push
ret
cmp
sti
aad
loopne
test
scas
fwait
xor
add
add
add
pop
push
lods
popa
jno
jae
xchg
jle
push
pop
add
xor
cmovbe
in
sub
out
add
test
and
sub
fdivr
in
mov
push
popf
sub
imul
lock
mov
ds
pop
mov
scas
fistl
mov
xchg
add
sbbl
jl
andl
insl
push
dec
cs
cmp
je
add
mov
loop
sti
fdivr
repz
aas
mov
call
or
arpl
inc
addr16
jle
mov
ret
fwait
pop
loope
and
cli
mov
mov
mov
scas
addb
mov
push
sti
lea
lcall
xor
mov
je
data16
hlt
fsubrs
in
jae
jle
mov
in
mov
jbe
in
xor
mov
stos
cmp
testb
bound
hlt
cld
mov
incb
ljmp
test
lahf
mov
add
add
push
xor
xor
fisttpll
xor
or
enter
and
jbe
sub
testl
lea
int3
pushf
push
push
pop
push
jge
int
inc
cwtl
imul
je
xchg
cwtl
cmpsl
popa
dec
movsb
and
pop
enter
gs
fisttpll
cwtl
leave
in
in
xchg
push
enter
inc
push
adc
aas
sbb
ret
inc
popfw
xorl
loopne
mov
es
repz
jmp
mov
jbe
jbe
add
adc
lret
fistl
and
dec
cmpl
in
rclb
xor
add
mov
jge
insb
adc
pop
fwait
shrb
jb
add
jb
test
adc
xor
in
jo
mov
mov
lret
movsl
and
or
clc
test
loop
jecxz
xchg
addl
or
fldl
divb
rclb
fwait
aad
adcl
test
add
add
sub
lods
xor
sbbb
scas
test
push
adc
idiv
std
iret
loop
in
test
cmp
test
sbb
sbb
dec
mov
inc
mov
xchg
mov
stos
bound
fldcw
push
mov
fwait
sub
das
imul
mov
sbb
xor
std
add
push
inc
pop
mov
and
outsl
mov
iret
ljmp
or
stc
pushf
mov
pop
or
aaa
enter
test
dec
ss
sub
pop
or
sub
jp
inc
rcr
andl
push
andl
sub
pop
xorb
add
inc
outsl
clc
add
mov
call
push
dec
loop
mov
outsl
stos
dec
jno
mov
mov
test
pop
xlat
pshufw
inc
lret
inc
and
jl
dec
jbe
idivl
mov
adc
add
pop
add
add
cwtl
xlat
dec
fistpll
inc
xchg
xor
shrl
cltd
inc
push
xor
push
jo
xor
mov
je
rclb
mov
xor
inc
xor
cmpl
cmp
popa
lds
and
sub
push
xlat
arpl
ret
fmulp
adc
jo
dec
inc
xor
xchg
sbb
pop
das
cmpsb
insl
daa
test
jae
pop
loop
sub
lods
pop
sub
imul
sub
addl
hlt
sbb
adc
pop
shll
mov
pop
lods
mov
lds
outsb
add
insb
mov
jmp
fstpt
pop
jae
movsl
pushl
clc
mov
divb
pop
cltd
pop
mov
mov
in
enter
repnz
xor
and
daa
pop
or
out
lcall
or
jp
and
popa
shlb
mov
xor
cmp
push
sub
sarl
cmp
sbb
and
outsb
sub
stos
fs
push
pop
or
sarl
and
aaa
add
pop
add
add
ja
sbb
and
push
push
fstpl
jg
rcrl
cmp
data16
scas
inc
sarl
xchg
sub
pop
sahf
push
jp
jb
inc
lds
lret
xchg
clc
xor
dec
cs
mov
sahf
out
adc
call
dec
enter
jb
dec
sub
cs
out
cs
mov
sti
jp
mov
pop
sub
sub
addb
mov
pop
jp
pop
xchg
fdivp
sub
test
cmpsl
mov
dec
mov
pop
cmpsl
mov
out
fcmovbe
add
pop
add
lock
outsw
push
jns
sub
daa
xor
dec
push
fstl
mov
mov
xchg
test
int3
lcall
hlt
or
mov
das
mov
sbb
jbe
xor
mov
rolb
jecxz
pop
push
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
jb
mov
ljmp
dec
test
dec
sarl
cmp
push
inc
std
mov
dec
jo
psllw
loopne
ret
jmp
inc
int3
aas
loope
adc
ja
push
adc
jl
sub
mov
dec
push
fidivrl
cmp
mov
jmp
pusha
mov
push
or
push
cltd
fnsave
popf
adc
insl
cld
fstpt
rcrl
daa
sahf
call
jle
mov
push
ds
push
in
out
test
cld
divb
sbbl
sbb
sub
jl
imul
add
sti
dec
std
pop
add
inc
cld
push
imul
mov
mov
stos
mov
cmc
adc
jnp
mov
jne
popa
lds
mov
mov
push
push
inc
sbb
and
bound
pop
or
arpl
rolb
jb
sbb
add
mov
add
sbb
jnp
jnp
cmp
out
lahf
push
pop
jp
icebp
pop
lds
add
pop
add
add
sub
adc
push
push
jecxz
pop
push
jae
inc
jecxz
push
jne
sbb
jp
andl
inc
push
scas
and
aad
xchg
aas
clc
sub
cmp
mov
cmc
sbb
xchg
call
loope
dec
faddl
add
es
push
add
hlt
push
pop
push
cmpsl
mov
orl
ja
push
cs
cmc
mov
fst
dec
xorb
or
push
mov
xor
mov
mov
and
sti
xlat
aad
addl
inc
mov
bound
dec
and
imul
inc
shlb
sbb
stc
jle
or
mov
pop
nop
lret
add
add
mov
mov
and
loope
in
divb
fimull
inc
cmp
addr16
fcoms
mov
inc
xor
scas
sbb
cmp
outsl
lret
mov
out
dec
ja
aas
cmp
cmp
add
add
add
pop
sahf
les
test
loopne
adc
cmp
dec
adc
pop
std
cmp
jnp
mov
xor
inc
pop
lods
ret
push
ljmp
lds
mov
sub
cmp
mov
inc
cmp
and
jecxz
xchg
or
test
push
mov
fwait
xchg
movsb
pop
or
fistps
insl
les
inc
push
fisttps
or
pop
jge
pusha
inc
adc
xor
xor
orl
push
mov
push
das
sbb
sbb
and
leave
jle
lods
mov
pop
mov
dec
xchg
int3
insl
dec
daa
cwtl
mov
fbstp
bswap
sbb
xor
or
mov
push
mov
sub
das
sbb
outsl
mov
jl
sub
jne
imul
lea
arpl
aad
mov
add
and
das
cmp
lods
repz
xchg
pop
cltd
sarl
add
pop
add
add
loop
into
out
ljmp
jmp
leave
jne
aad
cmp
mov
pushf
nop
cmp
cwtl
scas
pop
sub
out
sti
pop
pop
pop
cmpsl
cmp
sub
out
lret
cs
mov
sbb
xor
xlat
enter
inc
adc
xchg
mov
push
nop
xor
mov
nop
in
jge
in
lcall
pop
pop
sub
and
scas
jb
cmp
mov
imul
xor
ret
inc
dec
add
push
inc
pop
out
inc
repnz
xchg
in
sub
xchg
enter
roll
or
sbb
les
lea
push
sbbb
pop
sub
ljmp
bound
lods
mov
lock
jno
outsb
out
mov
pop
jno
sbb
sbb
imul
pusha
xor
add
aas
daa
push
cld
push
std
jmp
pop
adc
nop
mov
cmp
add
add
add
mov
push
mov
leave
inc
push
imul
sbb
push
sti
inc
and
cmpl
test
pop
nop
mov
addr16
cmp
in
push
xchg
xchg
mov
scas
and
orb
add
out
js
je
jbe
fisubrl
cld
and
inc
loope
jg
adc
jbe
mov
fisubrl
push
mov
icebp
xor
add
add
dec
fidivl
in
mov
fistps
nop
xchg
push
mov
add
xchg
xor
test
stos
dec
push
cltd
push
adcl
test
push
push
ficomps
add
shrl
les
fsubr
sub
int3
lods
xchg
ror
xor
jmp
stos
cmp
and
arpl
inc
popf
cltd
pop
sti
or
cmp
orl
jecxz
push
outsl
mov
or
jno
or
dec
add
add
sbb
dec
push
out
jge
movsl
pop
jecxz
loope
add
pop
add
add
aad
frstor
jle
dec
jnp
xchg
sbb
repnz
shlb
dec
mov
sub
daa
adc
test
leave
push
scas
xor
dec
movb
jno
stos
or
mov
adc
lods
dec
callw
mov
sbb
pop
nop
ret
dec
push
dec
add
repnz
pop
jne
pushf
jmp
add
popa
in
in
and
addb
mov
sub
sub
adcl
mov
cwtl
xchg
cwtl
insl
add
or
adc
int3
mov
call
das
fsubl
insl
mov
fstpt
and
in
inc
stos
popa
inc
es
cmpb
adc
push
mov
jmp
jae
push
pop
cli
inc
pop
sarb
movsl
sti
movq
icebp
add
xchg
and
cmpsb
jb
mov
les
enter
test
and
xchg
jae
stos
add
push
mov
mov
jl
call
add
add
mov
stos
clc
pusha
xchg
mov
nop
or
sub
int3
jae
pop
mov
mov
mov
inc
mov
lret
cs
les
push
jo
xor
push
shrl
repz
jnp
mov
sub
fcomp
movsb
sub
and
mov
mov
mov
push
xor
stos
in
faddl
sbb
je
outsl
aas
sbb
and
sub
or
fwait
int3
and
pop
fmul
mov
adc
sub
in
xchg
pop
add
push
xor
cmpl
icebp
sarl
invd
jnp
push
mov
add
out
daa
lahf
cmc
jnp
imul
addr16
movsb
pushf
xchg
push
xchg
daa
xchg
xor
mov
in
dec
dec
cmp
dec
cmc
test
mov
jle
sbb
jecxz
push
ret
and
xor
outsb
icebp
test
lahf
xchg
sbb
mov
mov
ja
jg
xchg
cmp
xchg
fucomi
out
aas
add
pop
add
add
mov
jmp
dec
imul
stc
dec
mov
sbb
imull
inc
mov
xchg
dec
adc
icebp
popa
dec
push
lcall
lods
xchg
iret
mov
add
xchg
mov
call
into
sbb
mov
push
notl
loope
inc
sbb
jg
frstor
fcmove
and
or
in
test
dec
inc
or
popf
or
and
fdivrs
aam
pop
xlat
jmp
push
stos
dec
addr16
or
iret
jbe
ss
adc
xor
movq
sbb
js
rol
inc
jmp
cmp
icebp
sti
mov
push
lahf
or
mov
push
movsl
lahf
mov
push
outsl
call
aad
jne
arpl
lods
xlat
out
test
mov
push
vmwrite
xor
aaa
push
sub
mov
adc
fisttps
push
or
sbb
and
xor
gs
add
push
dec
lret
jmp
imul
push
mov
imul
int
imul
mov
xor
sbb
lcall
nop
fstpt
rcrb
adc
cmp
mov
mov
les
sub
inc
push
push
mov
sbb
orb
aad
pop
cltd
aaa
jnp
jl
insl
lret
and
adc
or
movsl
inc
push
fsubrs
xor
pushw
loop
aas
ss
lret
jl
leave
in
test
cmpsb
je
mov
sbb
adc
mov
scas
sbb
push
mov
mov
push
and
mov
out
mov
xchg
push
mov
pusha
imul
shll
xchg
jns
mov
and
in
push
call
xchg
mov
cmp
rclb
jl
aaa
sub
movsl
xchg
adc
pop
test
lock
pop
push
cld
or
stos
loop
cmc
outsl
or
fcomp
sub
add
lods
push
insl
sub
testl
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
les
push
mov
or
aad
dec
mov
mull
cs
mov
and
test
dec
push
iret
loope
pop
mov
jne
cmp
ja
loopne
or
out
sub
orb
and
dec
loop
fs
lods
movsl
gs
mov
and
orl
xchg
cwtl
sti
xor
std
jecxz
orl
les
out
ja
das
aas
pop
and
incb
test
or
aad
aad
enter
addr16
ret
xor
test
mov
adc
xchg
dec
enter
pop
dec
out
incl
sub
jl
sti
sarb
mov
lret
adc
add
into
xlat
cmpsl
arpl
or
push
daa
sbb
lock
cltd
test
mov
stc
adc
xlat
pop
pop
xchg
mov
test
std
fs
inc
sahf
and
sub
jns
imul
xchg
rolb
add
add
pop
add
add
mov
xchg
mov
lods
xor
mov
pushf
stos
sbb
fildl
lea
cmc
pop
in
scas
mov
scas
popf
mov
xor
jno
lds
pop
cmp
mov
lea
scas
aam
jne
mov
enter
aad
inc
std
and
inc
repnz
jno
lods
fadds
arpl
jle
int3
insl
dec
jns
xchg
add
jl
mov
jle
or
cmp
jo
loope
insb
sbb
pop
lcall
sbb
cs
in
inc
scas
fistpll
rorl
mov
adc
jnp
sbb
shrb
add
push
or
dec
xlat
pop
pop
movsb
or
push
add
imul
and
push
add
mov
daa
mov
popa
imul
push
out
sbbb
or
pop
sti
push
xchg
dec
pop
fbstp
nop
cmp
sub
ljmp
mov
js
ret
jg
jmp
repnz
arpl
add
pop
add
add
test
imul
inc
sub
daa
mov
adc
loope
es
cmp
lds
push
pop
ret
shrl
repnz
and
testl
jo
mov
and
inc
hlt
fcmove
das
xchg
sbb
js
jns
jle
cmp
xchg
or
hlt
lods
or
cmpsl
rol
push
cli
fdivp
jle
cmp
sbb
fstpl
cli
ret
scas
out
or
popa
jg
cltd
cs
mov
sahf
shl
faddl
dec
in
dec
inc
pop
lcall
ret
push
pop
push
mov
xchg
loopne
or
mov
pop
cmp
cs
xor
lds
cmp
pop
xor
stos
out
movsb
ss
add
pop
dec
inc
mov
inc
mov
push
xchg
pop
mov
aad
push
jge
add
inc
insl
movsb
cmp
jmp
cmpsb
lock
pop
inc
movsl
imul
push
and
in
add
das
mov
and
fsts
stc
inc
mov
inc
add
pop
add
add
in
mov
sbb
in
imul
fimull
sbb
stos
add
pop
jmp
shll
dec
data16
or
add
inc
out
mov
mov
pop
jno
inc
jmp
gs
arpl
jo
out
shrb
stos
cmc
fcoms
or
dec
popf
push
xor
ljmp
or
push
std
idivb
xor
ds
imul
cmp
mov
outsb
jle
shl
mov
mov
add
retw
sahf
pop
jne
sub
pop
test
sub
mov
xchg
imul
adc
fiaddl
xchg
push
adc
out
movsl
test
pop
mov
inc
movsb
sub
les
lods
inc
xchg
dec
into
in
xor
xchg
adc
mov
and
xchg
or
mov
andb
add
hlt
gs
adc
ficoms
fadds
add
pop
add
add
mov
je
test
cmp
repz
imul
adc
add
jg
and
sub
mov
in
xchg
pop
adcb
sbb
cmp
jecxz
mov
sbb
mov
or
call
xlat
or
jo
or
inc
movl
clc
mov
repnz
and
or
imul
sub
into
mov
xchg
arpl
std
or
mov
cmpsl
clc
or
popa
mov
inc
test
mov
insb
or
mov
sub
or
push
pop
adc
aas
push
adc
jl
shl
call
and
jecxz
inc
les
xor
lret
je
loopne
pop
adc
daa
pop
sub
imul
leave
inc
xor
push
std
push
xchg
les
xchg
mov
and
pop
add
aas
gs
mov
add
and
inc
add
pop
add
add
inc
js
mov
pop
das
sub
push
adc
mov
adc
or
and
es
push
lahf
push
das
lret
xor
push
pop
sbb
subb
adc
std
mov
mov
lea
jecxz
inc
fbstp
mov
daa
arpl
movsb
sub
pushf
xor
push
xchg
and
jg
or
adc
adc
call
enter
fs
mov
out
or
jne,pt
sarl
mov
rcrb
cltd
and
ret
lea
je
and
mov
fucomi
fwait
loope
mov
push
add
fucomp
push
mov
xchg
dec
push
xor
incb
mov
outsl
fstps
xchg
adc
add
pop
adc
fs
jg
icebp
lahf
ficomps
cmpsl
mov
mov
xchg
cmpsb
rolb
cs
and
mov
adc
add
out
fnstsw
and
daa
dec
add
pop
add
add
sarl
jmp
aad
lea
cmp
cs
adc
mov
shl
lods
iret
frstor
shrb
fwait
rcr
sbb
or
lcall
mov
shll
imul
shrb
and
sti
push
pusha
add
cwtl
notl
out
iret
imul
bound
push
test
xlat
adc
pop
xchg
imul
mov
mov
xor
cmc
aad
pop
mov
je
adc
addr16
int
stc
xchg
sahf
xchg
mov
addl
leave
xchg
aam
or
sub
imul
push
mov
leave
imul
lea
inc
add
inc
stos
stc
pop
add
inc
shll
xorl
enter
mov
shlb
jmp
divl
inc
xchg
pop
and
leave
sbb
pop
inc
mov
sub
lcall
fildll
mov
sub
cs
add
pop
add
add
sub
xchg
or
dec
gs
call
pop
sub
inc
cmp
pop
sbb
insb
sub
or
lods
mov
cmp
out
orl
jg
loop
sub
and
push
xchg
flds
leave
push
shlb
fcompl
xchg
jno
into
in
fcoms
loope
jl
subb
lahf
in
cmc
and
xlat
xchg
ret
xor
fldenv
sub
inc
jp
fsubrs
or
add
sub
jl
loopne
jle
dec
es
inc
cmpsb
test
repz
cld
or
jge
xchg
push
jae
out
popw
pop
cmp
or
and
and
rorb
fcomps
or
inc
fwait
pushf
dec
adc
jbe
call
jp
fdivp
cmpb
cmpsl
loopne
push
push
daa
mov
jl
iret
xlat
out
fistps
mov
aas
xchg
das
dec
inc
pusha
sbb
and
mov
add
jmp
out
aas
push
xor
cmp
add
pop
add
add
mov
pop
mov
or
mov
int
mov
push
pushw
std
pop
mov
mov
out
add
lods
mov
imulb
mov
xor
add
xchg
repz
jmp
xor
mov
subb
mov
jmp
pusha
test
test
fdivp
sar
jge
sbbb
pop
movsl
dec
es
sub
dec
sbb
outsb
roll
lret
ret
testl
xchg
out
cli
xchg
jb
pop
dec
ss
into
pop
sbb
or
lods
push
sub
test
dec
insb
sbb
xlat
and
mov
lock
sbb
outsb
lahf
sbb
or
aam
jne
cmpsl
push
xchg
scas
mov
lods
sti
mov
icebp
repz
mov
dec
jae
js
out
aad
inc
repnz
jmp
out
pop
cmp
fsubr
or
add
cs
out
mov
and
push
mov
add
add
imul
out
mov
xchg
inc
pop
ja
cmp
add
pop
add
add
adc
cmp
dec
mov
push
pop
cmp
jl
sbb
dec
stc
xchg
or
ficompl
sub
repz
daa
cmp
outsl
adcb
mov
xchg
and
cli
loope
add
mov
movsb
mov
std
adcl
xor
and
xchg
in
mov
mov
insl
jbe,pn
push
cmp
jl
fcmovne
cmp
mov
sbb
cmc
fdivs
cwtl
pop
or
adc
jp
idivb
in
and
and
dec
pop
sub
xchg
loope,pt
xor
imul
xor
ja
adc
or
push
sarb
mov
js
pushf
mov
mov
movsb
cmp
xor
add
add
bound
fs
jmp
cmp
xor
sarl
cmp
jo
mov
in
ret
pop
add
add
dec
stc
mov
pop
sub
mov
dec
add
pop
add
add
xor
and
das
mov
or
mov
call
pop
or
rol
stc
mov
ds
xor
mov
test
pop
mov
out
sbb
ds
orl
cmp
in
xlat
jmp
scas
ret
push
mov
mov
mov
and
lcall
mov
dec
sbb
out
sub
fwait
dec
inc
shll
xlat
arpl
mov
xchg
cmp
sar
enter
push
push
and
loope
into
mov
mov
leave
jge
fdivrl
pop
add
fcompp
mov
out
xor
pop
xchg
pushf
pop
cld
jns
jae
loope
xchg
cmpsb
jge
scas
xor
xchg
aam
cmpsl
dec
fimull
lar
cmp
pop
push
push
imul
test
in
int3
cmp
pop
jns
xchg
cmp
jle
jg
cld
dec
loope
sbb
loope
dec
dec
add
pop
add
add
push
mov
and
mov
cmpsl
xor
movsb
ja
jge
mov
stos
push
dec
cmc
pop
xchg
mov
loopne
cmp
popf
cltd
jmp
adc
inc
lea
push
adcb
cmp
sub
mov
dec
sub
sub
or
rcll
bound
push
iret
sub
cltd
add
pop
pop
arpl
mulps
inc
fcmovbe
ret
inc
mov
mov
fcompp
mov
and
cmp
mov
adc
pop
lds
hlt
imul
xchg
push
jns
pop
mov
movsl
mov
cmpsb
sbb
xchg
std
cs
scas
pop
pushf
jne
pop
mov
dec
lock
enter
and
scas
das
sub
daa
inc
stc
fsubl
adc
xchg
add
or
andb
mov
ljmp
cmp
inc
xchg
cmpsl
fwait
xchg
mov
pop
sti
pushf
insb
pop
add
xchg
mov
mov
inc
xchg
push
dec
add
pop
add
add
inc
sbb
push
push
mov
iret
lahf
scas
into
and
popa
stos
stc
adc
xchg
mov
mov
sub
xchg
xchg
push
roll
mov
fs
pushf
stc
std
xchg
push
lahf
push
pop
rorl
add
in
jnp
add
rcll
ret
imul
outsb
iret
adc
mov
std
test
sub
mov
dec
or
clc
imul
push
cld
call
int
js
inc
test
ffree
mov
nop
jbe
push
dec
mov
jbe
inc
jecxz
gs
adc
inc
ficoms
lret
fisubrs
mov
shlb
mov
vcvttss2si
js
dec
add
idivl
pop
lock
nop
shll
iret
out
fistl
pop
mov
out
movsl
nop
insb
cmp
add
add
inc
mov
push
push
jmp
mov
xchg
dec
pop
dec
add
pop
add
add
in
mov
into
call
or
sub
repz
test
sub
cmp
cli
decl
stos
imul
sbb
cmp
cmp
xor
out
adc
sbb
into
cmp
push
addr16
lods
faddl
in
out
pop
bound
xchg
pop
push
xchg
or
mov
mov
insl
lret
add
adc
int
imul
push
dec
into
push
fs
ljmp
shrb
fnstsw
push
inc
test
mov
hlt
lret
int3
test
je
adc
xchg
inc
inc
out
xchg
mov
sti
fwait
dec
xor
dec
and
xchg
jle
test
scas
add
out
rcrb
xchg
cmpsl
or
jne
cmpsb
mov
jl
das
jecxz
sbb
jbe
push
lds
dec
ss
cmp
mov
ljmp
pop
and
cmp
xor
fsubrl
mov
out
cmp
cmc
push
adc
xchg
mov
pop
add
add
addr16
mov
aad
fstpl
inc
out
leave
cld
mov
pop
xchg
hlt
lods
sub
mov
cmp
mov
aas
or
sub
stc
mov
sub
and
inc
outsl
fcmovb
lock
dec
dec
pop
std
xor
sbb
out
lds
out
jle
loopne
cmp
imul
push
dec
mov
pop
icebp
mov
xor
test
mov
lahf
aas
push
jge
jb
add
sti
aas
pop
or
xor
mov
repz
cwtl
sarl
movsb
push
cltd
pop
mulb
adc
xor
mov
fwait
cmp
insl
fimuls
push
shl
or
push
sbb
jmp
les
mov
aam
loope
lods
getsec
imul
xchg
jae
into
ss
pop
push
std
sbb
xlat
lcall
les
out
cmp
in
std
push
xor
add
push
shll
out
je
pop
inc
mov
add
pop
add
add
mov
fwait
mov
mov
in
es
xor
dec
rcl
mov
xchg
pop
mov
addl
cltd
and
sahf
mov
or
mov
xor
push
sub
popa
mov
shrb
shr
jecxz
repnz
inc
xor
scas
data16
xchg
pop
xor
cmp
inc
andl
imull
movsb
mov
pop
fisubl
clc
xchg
fisubrl
lods
xchg
adc
test
lahf
leave
dec
lock
int3
mov
xor
bound
mov
stos
jmp
xor
jge
mov
jbe
call
push
out
mov
xchg
and
inc
popf
sti
sahf
imul
or
push
mov
ja
outsl
sti
mov
ss
xchg
jle
xchg
mov
push
jo
addl
inc
push
test
mov
push
aam
movsl
stc
jl
ret
fadds
sub
movsb
pop
push
and
stos
push
lcall
lock
pop
mov
push
add
pop
add
add
push
movsl
add
outsb
jne
pop
push
fisubs
dec
cmp
mov
cmc
out
mov
jecxz
pop
fldln2
mov
dec
insl
test
xchg
add
sahf
and
xchg
call
jg
pop
std
gs
test
into
pop
push
sub
adc
cwtl
xchg
cmp
clc
pop
negb
jmp
mov
and
aam
mov
inc
add
xchg
cmp
lsl
test
pop
mov
cmc
xor
es
mov
xchg
outsl
push
ret
push
addl
rcr
and
adc
jecxz
popf
ljmp
imul
mov
scas
add
pop
inc
xchg
cmc
stc
add
pop
adc
pushf
pop
or
xor
jo
jb
adc
adc
ljmp
je
push
dec
iret
and
js
push
jg
cmp
bound
imul
or
add
pop
add
add
fs
imul
pop
movsb
inc
frstor
push
xchg
jo
jbe
adc
sub
jge
int
out
hlt
mov
jecxz
push
adc
sbb
adc
adc
bound
jno
lahf
or
and
push
add
mov
ret
test
pop
jne
jns
sub
mov
cmpsl
popa
mov
mov
fildll
popf
in
ret
sahf
test
xchg
cltd
loope
pop
inc
add
je
icebp
xor
hlt
movsl
push
mov
fistpl
mov
lods
outsl
mov
and
cmp
out
sbb
test
push
push
addb
and
fildll
cmpsl
inc
neg
mov
jp
addr16
in
rcrb
inc
dec
inc
lea
test
cmpb
loope
sub
aaa
mov
cmp
cld
clc
int
push
iret
xor
jecxz
add
fwait
cmp
xchg
xchg
dec
mov
push
add
pop
add
add
jle
jae
xor
dec
cld
inc
pop
cs
sub
pop
push
cmp
lds
incl
mov
aas
addb
inc
sahf
shlb
and
fcomi
sahf
jo
sbb
fwait
and
dec
loope
fisttpll
xchg
cmp
mov
subb
subl
pop
ljmp
and
adc
push
pop
les
lods
push
loopne
mov
xor
xlat
cmpsl
sbb
push
mov
addr16
repnz
int3
in
push
mov
in
inc
dec
push
addb
xor
fadds
arpl
inc
push
lret
jecxz
mov
into
cld
dec
xchg
shrb
mov
or
mov
pop
lods
inc
push
shlb
and
push
inc
push
add
push
std
fdivr
adc
inc
jb
and
mov
mov
pop
adc
add
adc
add
clc
mov
mov
pop
fucomip
daa
cmp
push
add
pop
add
add
mov
into
out
mov
sub
pop
sbb
fcomps
outsb
cld
jg
xorl
mov
das
pop
jp
addb
popf
aaa
add
mov
or
sbb
pop
sub
insb
mov
fwait
or
add
test
push
fnstenv
int
jg
or
jne
insl
fmuls
mov
pop
mov
and
mov
add
jne
out
adc
cmp
xlat
call
neg
gs
mov
fildll
hlt
mov
jo
sahf
sbb
mov
ljmp
cmp
jae
jb
sbbl
xchg
es
stos
lds
fmul
aam
pop
push
imul
sbb
push
push
xorl
mov
scas
mov
mov
xor
or
mov
add
scas
xchg
push
adc
out
mov
dec
imul
or
dec
sbb
or
mov
mov
cmp
adc
xchg
je
in
xchg
dec
ds
and
mov
mov
imul
push
sbb
xor
jp
pushf
mov
sbb
dec
dec
adc
dec
xor
aad
dec
lds
mov
inc
push
adc
add
ret
xor
add
sbb
adc
push
mov
jne
dec
push
xchg
jnp
sbb
sbbb
fcmovnu
bound
xchg
push
dec
ror
mov
sub
jmp
mov
and
push
fdivs
mov
repz
mov
sbb
dec
jecxz
fsub
test
pushf
adc
pop
popa
rcrl
movsl
clc
lahf
std
int
mov
push
mov
cwtl
in
dec
mov
repnz
lods
adc
cltd
in
test
or
cmpsb
mov
xchg
inc
add
mov
btc
mov
nop
push
add
pop
add
add
mov
mov
or
jo
fistl
mov
and
mov
rcrl
push
add
test
call
xsaveopt
jbe
xor
pop
sbb
cwtl
jnp
jo
cs
mov
popa
lret
iret
jno
jge
dec
push
fs
add
mov
jmpw
fidivrl
dec
jns
idivl
fsubs
mov
adc
enter
icebp
movsb
sbb
adc
adc
cli
stc
sub
fcmove
cltd
out
or
js
sbb
cmp
ret
cmp
ss
inc
jecxz
mov
or
add
cmp
adc
clc
jmp
or
xchg
jmp
test
leave
push
fildll
sbb
call
insb
shrb
mov
mov
jne
imull
inc
ja
dec
jmp
clc
inc
in
mov
mov
and
das
jmp
daa
rclb
add
add
push
cwtl
jo
cli
xor
in
jns
sahf
pop
adc
dec
cs
int
mov
int3
mov
js
arpl
fcomip
movsb
pushf
into
aam
mov
test
push
add
aaa
add
insl
mov
add
outsb
xchg
jnp
cmp
dec
xor
jno
mov
push
xchg
cs
mov
clc
inc
out
or
push
mov
xchg
rclb
inc
mov
xchg
cmp
cmp
hlt
cmp
in
rcr
mov
dec
movsb
pop
adc
les
aas
mov
sbb
mov
fsub
sub
js
mov
int
or
pop
ss
repz
adc
popf
xlat
jge
rorl
rcr
jns
pop
and
push
xchg
mov
xchg
mov
mov
add
mov
testb
add
fs
lahf
mov
cmpsb
test
mov
shll
fcmovbe
notl
nop
add
movsb
jae
jnp
mov
jne
ret
xchg
hlt
sahf
pop
add
pop
add
add
mov
sahf
xor
cmp
out
jecxz
push
sub
cli
je
jne
push
pop
test
outsl
sbb
push
jne
dec
push
in
xchg
xchg
mov
daa
out
inc
stos
int3
xor
sbb
cs
ljmp
pop
sub
mov
std
sub
mov
es
mov
and
inc
mov
call
push
mov
sahf
push
pop
cmpsb
push
adc
mov
pop
syscall
out
or
mov
xlat
int3
andb
xor
mov
test
nop
outsl
addb
popw
and
pop
out
pop
arpl
mov
fistpl
push
out
add
andl
mov
out
out
test
xor
mov
xor
das
mov
lods
or
lods
es
test
cmp
cmp
fstpt
aaa
in
out
ficoms
data16
xor
add
movl
add
fbstp
scas
adc
lahf
std
test
cmovnp
movsl
pop
add
pop
add
add
aam
sbb
pop
in
cmpsl
outsl
inc
xchg
or
xchg
jnp
pop
out
pop
add
sub
mov
orl
sub
es
test
shrl
in
loope
js
sarl
mov
adc
add
add
inc
ret
xor
movsl
fidivs
pop
and
mov
movsl
test
inc
ja
std
xor
test
ret
rolb
xor
cwtl
and
xchg
outsb
mov
xchg
xor
scas
push
dec
lds
push
fwait
mov
popa
lds
std
cmpsl
gs
and
add
ss
sbb
mov
fcoms
mov
inc
lea
mov
mov
ds
gs
xorb
push
stos
nop
ficomps
add
movsb
les
mov
test
lods
imul
dec
cmpsb
mov
into
in
das
pop
call
add
pop
enter
jns
testb
loope
insb
scas
jne
mov
mov
mov
stc
dec
push
pop
add
pop
add
add
jecxz
push
popa
icebp
rolb
xor
cmpsb
sbb
inc
jbe
mov
sbb
jne
data16
mov
mov
cmp
pop
xchg
sub
cmp
sub
add
movsb
fstl
mov
xchg
sbb
sub
fldenv
lods
inc
xchg
cltd
or
cmp
outsb
jle
repz
nop
hlt
pop
mov
sbbl
rcll
lret
fcomp
mov
push
jl
sub
add
mov
cmpsl
rcl
rcrb
xor
ja
jae
mov
xor
add
adc
inc
outsb
fisttps
out
xor
clc
rorl
mov
mov
mov
pusha
xchg
xchg
fidivrs
aad
mov
daa
xlat
fiaddl
lods
cmpsb
push
jns
jecxz
je
gs
lret
stos
add
leave
adc
shrb
shlb
mov
inc
mov
add
push
into
push
mov
and
lahf
mov
add
pop
add
add
out
mov
jmp
xchg
lods
and
mov
aaa
mov
jmp
loope
cmp
push
pushf
test
lea
fists
xchg
inc
pushf
hlt
adc
sbb
pop
mov
push
scas
sbb
push
cmc
out
jno
icebp
push
outsb
movsl
inc
test
dec
icebp
add
sbb
xchg
add
inc
repz
pusha
cmc
push
daa
fidivrs
addr16
jge
push
test
and
call
shlb
xor
leave
push
xchg
and
loop
xchg
int3
shll
push
stc
push
in
in
outsb
pop
push
xor
leave
xor
xchg
data16
push
enter
mov
fdivs
popa
mov
mov
dec
sbb
mov
aad
dec
out
adc
adc
cwtl
stos
adc
fdivs
or
sti
adc
dec
mov
popa
push
mov
jno
dec
aas
cmpsb
sti
mov
mov
add
xchg
inc
shl
xlat
mov
sub
ds
leave
lcall
add
add
jp
jcxz
adc
fists
push
add
jle
dec
or
add
int3
imul
aad
xchg
xchg
mov
mov
mov
insb
xchg
mov
orb
and
inc
loop
dec
xchg
in
cmp
mov
ret
icebp
inc
sub
lds
scas
mov
jbe
pop
xor
xor
push
cmpl
add
jns
mov
mov
sbb
lret
add
xchg
lock
lods
fwait
push
jae
mov
out
add
pop
mov
jecxz
pop
lret
xor
sbb
xor
dec
fiadds
or
sbb
imul
xchg
pop
xchg
pop
dec
mov
sbbl
add
and
aam
repnz
lahf
adc
adc
sub
std
lcall
icebp
push
xchg
sub
push
xor
push
scas
xchg
nop
xor
lahf
pop
fcmovb
fcmovnb
lahf
pop
lret
inc
and
push
rcrl
pop
add
add
and
pop
push
lcall
add
icebp
clc
mov
dec
lret
mov
xor
aad
out
or
mov
dec
fldenv
cmp
add
jne
and
daa
movsb
daa
push
cwtl
push
jb
dec
mov
pop
loopne
pop
add
cmpsb
pop
or
cmp
push
jl
cmp
enter
ljmp
movl
lods
pop
sub
adc
and
inc
lock
or
mov
mov
test
jno
mov
mov
fsub
fnsetpm(287
shll
cwtl
rcl
movsl
outsl
pop
pop
rol
push
mov
or
push
jg
lods
pop
enter
rolw
jns
and
or
and
or
sbb
sahf
sbb
sbb
xchg
mov
sbb
sub
push
jle
xchg
mov
leave
aaa
outsb
xchg
push
lcall
je
mov
add
idiv
jg
pop
and
mov
adc
pop
add
pop
add
add
push
movsb
pop
pop
push
mov
fwait
dec
repnz
rclb
mov
test
fdivr
inc
ja
push
lret
sarl
cmpb
out
push
hlt
pop
shrb
xor
lret
ljmp
jae
sub
fdivl
leave
cltd
es
mov
mov
cld
movsl
pop
add
movsb
pop
loopne
out
insb
pop
sti
rcll
adc
jg
xchg
push
stos
ja
call
pop
in
outsb
jle
ret
and
rorb
lret
arpl
in
scas
mov
pop
push
popa
loopne
mov
enter
mov
in
add
jns
cltd
xchg
cmpsl
scas
xchg
subl
imul
out
outsl
or
imul
pop
xlat
mov
mov
jl
cltd
sbbb
jo
es
xchg
out
push
cmp
rolb
out
push
outsb
scas
mov
ljmp
pop
mov
je
cli
aad
add
into
ret
add
pop
mov
mov
lahf
xchg
test
add
pop
add
add
push
lret
lahf
cmp
pop
lahf
int
test
shr
pop
in
pop
adc
and
mov
push
ret
dec
mov
ss
adc
jo
orb
je
add
gs
repnz
and
adc
or
push
icebp
mov
mov
mov
mov
pop
inc
mov
sahf
movsb
sbb
mov
sbb
or
xor
int3
dec
js
dec
inc
icebp
ljmp
mov
cmp
push
jle
inc
mov
pop
cmp
fsubrp
xchg
pushf
and
loop
adc
or
lahf
orl
enter
push
pushf
pusha
mov
das
mov
hlt
xchg
mov
bound
cld
mov
mov
outsl
cld
mov
imul
pop
push
xor
mov
stos
jno
xor
jbe
gs
lods
clc
push
pusha
insl
and
push
ds
sbb
dec
mov
sbb
repnz
movsb
jle
stc
test
popa
sbb
popa
add
pop
add
add
int
push
cld
dec
and
mov
rol
sub
cwtl
cltd
xchg
insb
popa
daa
pop
test
push
movsl
iret
fidivrs
xorl
insb
fbstp
xor
xor
ja
pop
fcoml
addb
into
outsl
jmp
cwtl
pop
fcoms
ret
inc
stos
clc
push
out
push
lds
ret
aad
or
dec
packssdw
aad
lret
movsl
sub
jle
jnp
push
arpl
in
mov
xchg
ds
mov
mov
pop
data16
xlat
or
gs
daa
add
xlat
sbb
pop
repnz
pshufw
jp
add
fstl
jbe
dec
fwait
daa
call
inc
je
std
cltd
roll
aaa
jne
fidivs
or
shl
shrl
loope
xor
jmp
orb
nop
popa
cmp
fdivrs
pop
je
pop
mov
shl
stos
sub
stos
out
jmp
sub
popf
xor
js
bound
add
add
add
in
enter
or
hlt
cld
pop
stos
gs
ljmp
push
xor
and
loopne
aas
es
xchg
icebp
pop
test
push
push
or
scas
scas
orb
mov
lods
lock
out
xchg
cmp
pop
pop
cld
add
test
ja
add
xchg
push
nop
pop
int
pop
mov
sub
pop
ss
aaa
mov
icebp
xchg
or
inc
out
hlt
inc
mov
ret
mov
rol
or
dec
sub
iret
pusha
push
loopne
mov
xchg
jb
mov
jmp
dec
xchg
fdivrs
add
and
fnstsw
sbb
mov
xchg
xchg
sbb
scas
mov
or
sbb
sub
and
mov
dec
or
inc
loopne
nop
inc
repnz
ljmp
pop
lahf
cmpsl
xchg
mov
xchg
inc
shlb
out
dec
mov
or
dec
out
jns
test
daa
jp
push
nop
inc
add
add
add
mov
fnstenv
in
das
insl
in
add
pop
add
add
out
insb
out
or
imul
cld
leave
jne
inc
fs
icebp
sahf
sahf
or
subl
add
lods
or
rclb
jecxz
add
fs
sahf
jmp
jle
rcrl
mov
sbb
dec
mov
xor
inc
and
leave
out
scas
sub
iret
mov
push
cs
inc
outsl
sbb
insl
fistpl
sbb
aam
mov
fwait
jmp
leave
push
and
jl
movsl
cmp
push
xor
ret
nop
lods
sub
lea
or
iret
fdivrs
pop
subl
add
aad
mov
mov
addr16
roll
cwtl
push
les
jecxz
into
jl
mov
and
lret
fistl
push
push
pop
xorl
cmp
pop
dec
cld
icebp
je
lea
inc
ret
sub
add
add
cld
je
jbe
decl
rcll
add
pop
add
add
scas
xchg
push
mov
jae
lret
mov
shl
lcall
mov
or
dec
addr16
pop
mov
cmp
inc
stos
fstps
jmp
vpunpckhwd
cmp
test
adc
stos
pop
test
out
adc
inc
pop
andl
movsb
push
je
add
sbb
enter
pop
xor
scas
jecxz
mov
fdivp
clc
add
xor
adc
jg
mov
pop
push
popf
cmpb
das
dec
add
lret
addr16
in
test
dec
test
std
push
rorb
in
mov
pop
fists
mov
pushf
lret
adc
xchg
jle,pt
inc
outsl
push
xchg
pop
cmp
dec
ds
ss
push
sub
lret
adc
out
out
adc
mov
push
fwait
test
sub
shlb
stos
mov
test
jmp
outsl
add
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
xor
xor
sbb
pop
in
jle
lds
inc
pop
sub
sarl
notb
punpckldq
fisubrl
pusha
data16
mov
lock
mov
dec
leave
maskmovq
testl
push
mov
insb
lds
xchg
fwait
sub
imul
mov
pop
sub
inc
cmp
icebp
mov
fwait
stos
and
frstor
ss
and
adc
call
mov
lods
je
sbb
inc
mov
push
push
push
jl
negb
fstpt
push
push
dec
pop
inc
out
xchg
mov
out
loope
je
and
stos
or
cmp
or
arpl
movb
arpl
loop
xchg
sbb
and
sub
add
pop
cmp
rorl
out
jb
cmp
es
adc
xchg
pop
sub
mov
popa
adc
push
test
sub
add
push
jg
shll
stc
add
pop
add
add
sarb
stos
out
jecxz
mov
mov
daa
or
ret
mov
add
mov
cld
data16
mov
cmp
inc
roll
mov
and
test
lock
jp
fs
add
fldt
jo
adc
imulb
shrl
orl
dec
xchg
repz
imul
loopne
in
and
loope
pop
dec
adc
mov
pop
sbb
mov
stos
add
sbbl
bound
push
das
int
mov
mov
xchg
fimull
xor
scas
cmpb
mov
int
nop
or
loope
in
cld
push
aas
push
lahf
mov
mov
mov
sub
xchg
lock
fdiv
sbb
xlat
jmp
mov
mov
xchg
ret
test
pushl
inc
sub
jns
adc
xchg
inc
mov
add
repnz
jg
iret
mov
fucomip
lock
cmp
rorl
add
add
add
pop
in
cmp
jge
push
test
aad
js
jo
mov
cld
push
lahf
imul
aas
sbb
cmc
push
xlat
call
outsb
popl
cmp
out
and
sbb
mov
mov
pop
add
test
loopne
rcrb
pop
mov
mov
push
sarb
cmp
in
ljmp
inc
or
add
sub
or
pop
jno
add
outsb
xchg
push
or
ss
xor
push
pop
jge
sbb
mov
mov
add
cmpsl
mov
push
xor
add
scas
cmp
aam
push
and
cmp
out
orb
test
out
repnz
adc
mov
aad
lods
lock
fxch
inc
mov
leave
cltd
or
mov
sbb
ret
xor
shl
jge
popf
add
imul
add
add
dec
out
iret
jmp
das
mov
mov
pop
imul
add
adc
je
aaa
mov
in
lea
inc
cmp
dec
xchg
adc
inc
rcll
mov
stc
mov
xchg
arpl
sub
cmp
aas
outsl
cld
sbb
inc
test
pop
cli
jg
pop
jl
pop
shl
pop
mov
jo
inc
xor
dec
test
nop
ds
jp
and
sub
pushf
sbb
loope
notl
sbb
jg
incl
test
adc
insl
xor
mov
not
mov
cwtl
xor
das
inc
out
add
adc
dec
pop
xchg
jnp
xchg
in
mov
dec
pop
xchg
cs
mov
pop
ret
loopne
add
lods
or
ljmp
jae
add
xor
les
imul
cli
fs
or
hlt
mov
cmp
add
std
cmpsb
pop
or
lret
mov
cmpsb
push
push
add
add
add
fiadds
lret
test
xlat
cmp
mov
aad
push
ja
hlt
mov
push
leave
fadds
stos
shl
xchg
xchg
fimuls
push
mov
movsl
mov
xor
lea
jl
pop
or
leave
out
idivb
cmp
aad
aas
dec
jbe
leave
fldenv
xor
mov
mov
xor
das
sar
jmp
in
int3
sahf
sti
pop
test
lds
add
mov
lcall
jg
insl
pop
sub
jno
ss
mov
or
lock
inc
call
push
inc
mov
jbe
xchg
xchg
mov
pushf
mov
mov
sbb
int
mov
cmpl
das
jg
mov
add
sub
hlt
jno
outsb
mov
loopne
loope
fcoms
pop
bound
leave
rorb
xchg
testb
add
add
neg
std
fsubrs
adc
dec
cmp
pop
add
add
cmp
sti
mov
pop
cld
fs
adc
hlt
shll
lods
pop
add
lahf
popa
scas
mov
hlt
jp
inc
dec
in
loopne
push
pushf
movsl
outsl
jne
lahf
sbb
mov
cmp
adc
pop
push
adc
mov
pop
dec
push
sub
pop
push
fisubs
sbb
pusha
scas
lcall
addl
sbb
dec
daa
lcall
stc
lret
or
roll
aam
adc
or
std
mov
icebp
fadd
sbb
sbb
add
jb
aad
sub
xor
pop
pop
fistl
sbbb
cwtl
pusha
push
push
jnp
or
mov
fistpl
iret
lret
pop
cmp
scas
les
out
fbstp
sub
sub
pop
into
mov
stos
cmp
cmp
xchg
imul
mov
lcall
push
repz
add
cs
adc
inc
add
pop
add
add
and
add
loope
ss
stc
mov
jbe
push
pushf
xor
and
mov
mov
out
scas
xchg
mov
lret
pop
cmpsb
sub
jg
add
pop
pop
inc
mov
push
inc
call
push
cmp
fwait
cmp
or
or
jp
mov
xor
je
sub
cli
mov
sbb
push
mov
loope
inc
dec
insl
jno
andl
nop
inc
and
mov
cli
popa
daa
sub
add
add
or
inc
jns
pop
dec
xor
jmp
xchg
outsb
dec
fldcw
inc
in
dec
lods
pushf
sbb
jl
out
aam
lds
out
pop
dec
aas
jae
cmp
dec
ss
and
jg
out
popl
fsubl
sub
in
xchg
ret
push
fists
xchg
in
rcl
gs
test
lcall
out
and
outsl
fcomps
insl
add
pop
add
add
pop
mov
xchg
fdivl
adc
pop
push
fldenv
test
test
das
lahf
pop
mov
mov
leave
call
pop
imul
in
sub
lock
mov
jmp
and
stc
roll
and
outsl
mulb
xor
push
add
cs
and
push
iret
inc
push
lock
sub
cmp
std
int3
or
jg
imul
dec
rcll
jns
stos
popa
jge
mov
icebp
es
jno
jp
enter
push
mov
adc
iret
and
inc
jns
int3
xor
jnp
xchg
out
icebp
jmp
cltd
fs
ret
or
inc
dec
cmp
scas
xchg
push
enter
in
push
les
xchg
push
jno
lds
sub
shrb
adc
mov
roll
insl
mov
add
sub
ja
aad
add
jo
roll
outsb
add
pop
add
add
mov
ret
adc
mov
ret
test
push
gs
adc
ror
sbb
aad
lock
and
cmpsb
das
dec
inc
push
loop
jns
stc
loop
push
lods
cmp
cli
pop
jo
test
adc
and
sarl
inc
pop
test
int3
ret
dec
jecxz
mov
cmp
adc
pop
cmp
adc
cld
clc
arpl
xor
fmuls
or
xchg
sub
repz
ljmp
outsl
or
adc
push
fucomip
int
and
call
cmp
cli
xorb
subl
pop
add
xchg
sti
sbb
mov
fimull
test
cmp
push
in
lahf
outsb
out
mov
mov
pop
in
out
jle
sub
mov
push
jle
xor
lret
pop
push
into
cmp
adc
cmp
int
mov
jnp
inc
cmp
jb
mov
pop
add
add
js
sbb
mov
testl
sbb
sbb
out
arpl
neg
in
sub
bound
cmp
scas
mov
xlat
xchg
clc
pop
adc
addps
fwait
jne
jne
mov
pop
cmc
imul
test
pop
into
insb
pop
roll
mov
icebp
and
movsb
push
inc
xor
lahf
dec
std
sbb
cli
mov
aad
mov
add
mov
xor
loope
sub
cs
sbb
hlt
icebp
push
repz
dec
adc
lret
inc
and
sub
out
mov
nop
aaa
mov
data16
in
push
insl
negl
dec
xchg
pop
pop
cmp
sub
cli
lods
addl
sub
das
cmp
and
outsl
fisttps
jne
fisubrl
or
movsl
out
xchg
add
cli
xchg
jle
rol
call
cmp
add
add
add
jmp
xchg
adc
fiaddl
test
subb
sbb
mov
sbb
dec
and
call
mov
int3
addr16
mov
out
nop
xchg
jecxz
push
jmp
sub
mov
rcrb
popf
mov
ret
test
inc
fdivs
andl
test
dec
mov
jns
stos
cltd
shl
dec
mov
adc
dec
xchg
aam
das
jp
dec
mov
jo
jne
nop
add
inc
in
xor
or
jo
cwtl
fcmovne
or
sahf
or
jnp
out
or
xchg
dec
ftst
add
imul
mov
in
push
adc
jo
andl
jl
dec
or
push
sbb
stos
addr16
lahf
jnp
test
sbbb
push
addl
and
xor
into
mov
dec
pop
xchg
test
mov
xor
jbe
fisubs
lods
add
fwait
jnp
aad
push
adc
int
jno
add
add
add
negb
insb
lds
aaa
mov
sahf
jno
push
sub
jns
inc
pop
ret
xchg
ja
dec
xchg
sbb
add
out
std
je
inc
or
sbb
in
ficoml
jne
mov
int3
and
repnz
push
jne
test
std
cltd
loopne
icebp
jno
xor
out
imul
or
adc
xor
movsb
xchg
test
add
jae
add
in
mov
test
loopne
lods
jno
sbb
sahf
pop
and
lret
outsb
jb
mov
pop
mov
fcmovne
inc
dec
mov
push
mull
mov
fs
nop
xchg
mov
cmpsl
adc
in
loope
sbb
cmc
lods
ficoms
jl
test
insl
xor
xor
insb
roll
and
fwait
inc
test
imul
push
dec
or
into
mov
and
and
sbb
add
std
mov
fucomip
fnstcw
inc
jb
add
add
add
mov
mov
fdivrl
jns
pop
or
adc
dec
ds
outsl
jmp
ss
inc
addr16
jno
arpl
ss
cmc
sub
xrelease
int
mov
push
or
cmp
sti
xchg
jno
icebp
inc
fcom
sub
sbb
or
jecxz
lcall
adc
imul
inc
adc
out
outsb
jae
mov
and
mov
mov
push
ret
xlat
std
inc
sub
imul
mov
xchg
jmp
jae
mov
in
push
or
adc
xor
das
mov
nop
iret
pop
cs
movsl
dec
inc
cmc
lock
andb
mov
sbb
fldt
mov
popf
mov
out
shlb
mov
in
cltd
push
cltd
mov
mov
cmp
sub
je
aad
xor
call
das
pusha
jbe
add
fstl
mov
dec
jae
add
add
add
movsb
repz
or
pop
xchg
sbb
ret
pop
stc
jp
in
loopne
sti
jp
addr16
iret
fucom
jnp
pop
or
das
scas
mov
add
imul
fimuls
xor
das
push
cmp
addl
imul
cmp
or
es
push
and
dec
loopne
sbb
dec
scas
mov
add
or
sahf
and
dec
mov
sti
xchg
loopne
sbb
or
stc
imul
hlt
push
mov
sub
sbb
inc
inc
or
jl
mov
jbe
lods
lds
and
jns
cmpb
mov
pushf
sbb
lock
ljmp
movsb
or
push
mov
in
rcrl
fiaddl
stc
lds
lret
nop
add
fsqrt
int3
das
mov
jg
loop
scas
ret
repnz
mov
adc
outsb
cltd
dec
addl
adc
add
inc
in
mov
mov
out
lahf
aaa
inc
or
sbb
push
je
add
add
add
sub
xchg
outsl
ficomps
gs
jl
push
call
loopne
push
mov
popl
fsubrs
lea
sub
pop
fwait
into
mov
mov
mov
cs
mov
sub
out
sub
and
and
cmc
pop
rolb
das
and
xor
dec
push
mov
sub
mov
lods
mov
lret
iret
into
xchg
inc
rorb
and
mov
test
lds
push
push
and
dec
inc
sbb
iret
nop
sbb
insl
and
inc
sahf
push
adc
iret
cmp
mov
inc
push
movsl
fldcw
mov
shlb
cmc
cmp
cld
xor
aam
out
jl
ret
cmc
fstps
inc
imul
gs
fcomp
fs
ljmp
jnp
xor
aas
out
outsb
mov
rolb
jns
divl
dec
jno
cmpb
mov
add
pop
add
add
and
add
ror
xor
xor
dec
inc
mov
cmp
dec
and
ss
push
adc
rclb
subb
cltd
xchg
insb
mov
push
cld
mov
test
inc
sub
jns
xor
stc
scas
sbb
inc
push
les
nop
addr16
leavew
test
and
jle
ljmp
fbld
shll
stos
mov
rolb
xlat
dec
mov
imul
loope
pusha
fmuls
aas
and
popf
lds
movsb
xor
add
scas
cmp
ja
push
xchg
cwtl
imul
cmpsl
push
dec
add
adcb
fldcw
pop
test
jbe
rorb
cmp
push
test
popf
push
test
push
mov
inc
xor
adc
pop
add
fisubs
mov
xchg
inc
lock
xor
jbe
add
add
add
cmc
insb
nop
cltd
mov
cld
xchg
pushf
clc
mov
daa
call
sub
mov
fisttpll
insb
fidivrs
jg
outsb
loop
lock
push
jmp
inc
cmpb
xchg
bound
cs
ljmp
fadds
aaa
pushl
idivl
pop
pop
aaa
mov
sbb
push
outsl
sbb
repz
sarl
lods
push
ds
enter
jg
sbb
dec
xchg
clc
test
leave
in
sub
mov
push
lods
stos
mov
push
xchg
es
inc
cmp
or
inc
lcall
clc
outsb
aam
adc
sub
mov
and
cld
sbb
mov
jp
pusha
inc
dec
and
xchg
mov
inc
cmp
and
inc
jecxz
pop
cmpsl
dec
repnz
test
ss
add
sarl
and
stos
push
ss
ret
lock
adc
test
data16
add
add
mov
outsl
jne
ljmp
cmp
lret
add
pop
add
add
in
filds
mov
dec
cmp
rcll
adc
cmpsl
cltd
test
mov
mov
mov
mov
imull
add
lahf
cmp
mov
insl
push
jle
andb
icebp
in
xor
repnz
jge
jmp
pusha
mov
mov
daa
popa
or
pushl
into
mov
aaa
mov
stc
adc
mov
add
inc
pop
hlt
ds
outsl
jns
ret
adc
jmp
mov
lock
imul
dec
aaa
fbld
jmp
push
clc
or
aam
loop
cmp
fisubl
push
pop
mov
or
sub
inc
cmpsb
lahf
scas
or
mov
ret
outsl
or
mov
inc
or
data16
sti
mov
call
and
fistl
sbb
mov
sbb
stc
adc
push
cmp
imul
add
orb
decl
push
scas
jne
adc
js
add
add
add
sbb
dec
cmp
mov
jg
add
mov
ret
sbb
rcll
ret
imul
xlat
sbb
xchg
jae
xchg
sbb
sti
shrl
test
push
cwtl
lahf
mov
pop
ds
or
mov
push
leave
push
pop
fsubl
icebp
lods
dec
mov
xchg
adc
add
dec
pop
sahf
dec
xchg
jmp
xor
loop
xor
and
js
mov
push
pop
add
test
in
xchg
imul
addl
insb
aaa
pop
xchg
bound
pop
daa
jle
pusha
int
xor
sub
add
mov
repnz
imul
sub
mov
add
cmp
sbb
pop
cmp
sub
rolb
or
mov
add
xor
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
sub
mul
jl
hlt
jle
das
sub
cmp
subl
nop
call
repnz
repz
mov
push
adc
and
pop
push
rep
xor
inc
inc
fnstsw
add
insl
cmp
xor
scas
addr16
cltd
sti
pusha
insb
pushf
push
dec
out
dec
cld
cmp
out
nop
sbb
fmuls
xor
aaa
ss
les
cwtl
test
inc
popf
scas
enter
gs
xor
pop
or
cmp
lret
jge
pop
test
outsb
icebp
xor
ror
insb
add
jp
push
sub
push
clc
add
sbb
jp
push
repnz
lds
lock
mov
aad
mov
add
flds
loop
imul
pop
stos
gs
adc
aad
lcall
mov
mov
adc
bound
lahf
add
aas
icebp
jl
roll
mov
stos
iret
popa
add
cmpsb
lods
rcrb
cmp
std
scas
and
add
pop
add
add
ret
jno
out
lea
into
lock
xor
sbb
fs
sub
mov
xor
lock
loope
xor
push
mov
fbstp
push
out
xor
jp
stos
mov
jl
inc
out
cld
xor
stos
mov
cmc
scas
jbe
sahf
nop
fstpt
sub
xchg
in
outsl
aaa
lds
fisttpl
in
cltd
xchg
and
out
outsl
xchg
shl
push
push
xor
data16
popa
insb
dec
in
xchg
ret
pop
mov
and
push
or
mov
js
xor
js
and
dec
int3
adc
insb
out
insl
movd
cs
pop
gs
mov
sbb
cmp
mov
sub
inc
lcall
sbb
int
dec
inc
js
add
out
add
fisttpll
xchg
jl
sar
lahf
popw
push
inc
push
shl
push
and
pop
dec
jno
inc
bndstx
xor
cli
mov
ret
xlat
test
add
add
add
pushw
adc
dec
xor
insb
xchg
inc
sub
addr16
rorl
mov
dec
imul
mov
jae
mov
adc
add
lea
add
xorb
outsb
sub
pop
jbe
imul
out
xchg
adc
stos
jp
pop
in
outsb
jge
cmp
sbb
fisttpll
push
add
inc
lock
dec
mov
mov
inc
inc
mov
fdivrl
ret
shlb
fmul
imulb
cs
arpl
lcall
test
push
jno
nop
movb
dec
push
mov
in
mov
add
andb
mov
xchg
push
pop
in
add
mov
out
js
fcomi
push
into
int
jmp
jns
cwtl
mul
jbe
shrb
push
and
pop
jbe
in
or
ja
rcl
repnz
cmp
mov
sbb
test
add
test
inc
jbe
stc
push
popf
mov
pop
add
add
or
jnp
std
push
push
cmp
imul
xchg
ljmp
mov
icebp
shrb
mov
aas
xor
add
xor
inc
iret
test
in
aaa
sub
mov
pop
enter
xor
sub
mov
cmpsl
mov
test
imul
push
and
inc
jmp
xor
mov
sarl
adc
or
mov
dec
jg
stos
push
xchg
add
adcl
int3
jl
inc
inc
aaa
inc
fcoms
sahf
add
jg
iret
dec
orb
sub
call
rorb
lahf
xchg
ss
jne
in
outsl
enter
cmp
mov
push
outsl
das
je
inc
mov
sub
mov
stos
xor
fs
sbb
jnp
inc
jle
jno
jo
xor
sbb
fists
ja
cmp
aam
cmc
aam
popa
or
add
xchg
xchg
jns
dec
out
movsb
lea
in
xchg
jge
add
add
add
sub
and
jne
int
icebp
sub
in
enter
mov
sub
movsb
mov
aam
xor
sahf
arpl
mov
dec
sub
mov
inc
int
lea
ficoml
lods
and
lret
sub
pop
test
jmp
adc
inc
cwtl
jb
xor
int
mov
sahf
push
mov
pop
xor
fwait
js
dec
inc
push
repz
and
stos
lods
dec
push
xor
sarb
int3
mov
pushw
repnz
out
leave
lods
cmc
adc
xchg
aam
pop
pop
xor
adc
xchg
test
push
enter
xchg
fisubrl
jge
aas
rol
leave
ret
std
js
stos
loopne
sub
pop
popf
jp
fxch
jo
sbb
daa
inc
sbb
jl
mov
popa
test
xchg
verr
fistpll
jb
in
insb
xchg
in
add
cmp
scas
lcall
xor
xchg
mov
in
lcall
add
cwtl
push
in
add
hlt
sbb
out
cmpsb
stos
sub
lods
xor
sbb
adc
loope
cmp
imul
aam
dec
sti
push
xchg
out
jne
and
lods
add
dec
inc
ljmp
mov
je
fsubs
nop
inc
popa
jb
jbe
add
cld
insl
aaa
shrb
ret
jbe
push
fdivs
and
xchg
cmp
test
jae
xor
lret
out
mov
loopne
cmp
push
add
data16
push
rorb
test
push
push
jp
popa
jb
fwait
pop
mov
pop
icebp
std
or
add
adc
sbb
insl
shl
jg
dec
xor
xchg
push
aam
dec
mov
and
test
xchg
mov
mov
push
pop
clc
pause
pop
jp
dec
xor
add
jl
cs
idiv
fnsave
cmpl
add
add
or
jecxz
and
sub
loope
jb
cmp
sub
sub
arpl
add
mov
rcrl
sti
in
mov
rcr
lock
pop
imul
test
xor
loope
inc
mov
mov
rcll
decl
push
jb
fst
icebp
sbb
pop
fnstcw
add
sbb
dec
xchg
or
loopne
lds
pop
inc
mov
popa
and
lds
cmp
call
pop
loope
jbe
push
aad
jle
dec
icebp
xor
leave
sub
sbb
cwtl
push
sarl
stos
or
stos
mov
xor
popf
or
push
pushf
cwtl
add
shr
jle
mov
in
sub
scas
sahf
sti
mov
mov
lds
loope
js
fs
popa
lock
push
dec
lcall
add
call
cli
xchg
in
test
add
pop
add
add
stc
adc
js
cmp
push
outsl
test
iret
pop
test
shlb
add
lods
test
aaa
inc
test
pop
pop
in
xchg
out
and
addr16
ret
lds
pop
call
dec
sbbb
push
dec
lcall
inc
loope
dec
sbb
jnp
cmp
insl
sbb
test
adc
rcrl
rorb
das
xchg
lret
ljmp
add
xchg
orl
pop
inc
push
movsl
mov
add
mov
ljmp
fimull
mov
enter
shl
add
out
adc
fnstenv
jnp,pn
xchg
sub
int3
adc
mov
mov
adcb
not
mov
outsl
mov
in
lcall
fidivrl
outsl
aam
fs
and
push
xor
test
jmp
daa
je
add
jno
add
sti
iret
test
sub
or
jnp
scas
addl
add
jmp
insb
cmp
test
fdivr
cmp
fmuls
xchg
pop
xchg
test
and
lret
dec
dec
cs
jge
inc
xor
leave
jle
cltd
inc
mov
xchg
imul
cli
cwtl
and
out
xchg
cmp
mov
pop
stos
out
aas
or
out
movsl
jmp
mov
into
push
imulb
clc
sbb
fsubrs
das
lods
bound
jmp
rorl
cmp
push
adc
sub
daa
xchg
inc
test
sarb
scas
jno
mov
movsl
mov
daa
pusha
pop
jbe
ficoms
mov
push
add
mov
das
xchg
insb
and
inc
fsubr
pop
add
jle
mov
rcr
push
xor
cmp
add
jae
dec
scas
xchg
ret
lret
sbb
in
and
es
dec
ja
sub
sub
pop
xchg
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
movsb
aaa
hlt
mov
add
pop
add
add
aas
mov
xchg
add
fdiv
insb
int
addr16
add
cmpsb
pop
mov
push
clc
sbb
bound
xlat
sti
jno
arpl
mov
in
or
pop
ret
test
jae
mov
inc
js
lods
dec
and
int
lcall
push
add
lret
mov
cmc
and
mov
add
popf
mov
pop
jecxz
jmp
mov
adc
mov
inc
movsb
pop
test
sub
out
out
aas
adc
mov
xchg
inc
pop
rcrl
add
jnp
imul
jbe
les
pop
dec
cmp
lcall
adc
mov
rolb
mov
pop
xchg
fsts
or
fadd
lods
mov
pusha
pushf
dec
dec
pop
add
mov
sbbl
mov
sbb
mov
mov
cmp
jae
pop
mov
add
add
cs
adc
pop
shll
int
scas
pushf
sti
pop
sub
aam
xor
or
cmp
mov
mov
xor
mov
jno
mov
loopne
sarl
pop
xorl
add
fldenv
je
push
sub
aad
fcomps
mov
subb
daa
es
iret
mov
mov
pop
ja
lcall
mov
jno
je
sbb
movsb
mov
pop
lret
imul
adc
repz
popf
and
cmp
stos
pusha
push
cli
pop
stc
movsb
call
in
out
adc
mov
jp
push
leave
xchg
lcall
jp
outsb
ljmp
pop
cltd
loope
push
mov
test
arpl
test
stc
clc
add
sub
sub
add
dec
push
cmpsb
inc
mov
inc
mov
hlt
add
pop
test
ljmp
roll
dec
les
add
cld
outsl
test
lea
outsb
pop
arpl
in
xchg
imul
sbb
or
ret
pop
imul
cmp
ret
sbb
or
add
imul
lods
fsub
addr16
out
mov
dec
mov
push
mov
jp
xchg
mov
cmp
mov
xchg
fidivl
out
btr
cli
scas
subl
pop
jl
aam
push
mov
cmpsl
mov
fisubl
inc
adc
shl
or
out
out
adc
icebp
outsb
test
mov
mov
daa
shll
and
flds
filds
enter
inc
or
inc
repz
jmp
cmp
test
xor
lods
sub
mov
testb
lcall
sbb
and
cld
add
xlat
fisubrl
and
sbb
add
xor
jno
imul
push
jnp
sbb
adc
test
pop
add
add
cs
jge
xchg
sub
fwait
sub
leave
and
lods
mov
in
push
loope
ss
imul
mov
sub
je
gs
clc
icebp
cmp
push
add
xchg
shlb
sbb
cwtl
leave
fsubrl
out
adc
mov
aaa
mov
pop
xlat
les
mov
in
jnp
andb
repnz
xchg
dec
adc
xchg
sub
popa
test
xchg
fsubrl
aas
cmpsb
shll
dec
pop
sub
add
loopne
add
rolb
les
mov
jge
pop
mov
out
lds
xor
mov
mov
and
pop
in
adc
push
dec
mov
jne
gs
sbb
push
cmpsl
fisubl
xor
push
push
jp
push
pop
test
ret
fildl
nop
nop
bound
push
pushf
jae
cmpsl
dec
push
popf
nop
cmpsb
sub
xchg
push
aas
or
mov
add
rcrb
xchg
add
add
add
subl
mov
ja
adc
arpl
fisttpl
sub
cmp
nop
iret
sub
mov
jno
jp
xlat
sbb
add
cmc
jne
xor
mov
jbe
add
es
pop
test
insb
xchg
sti
ret
das
mov
sub
insb
push
bound
sub
sahf
pop
mov
adc
or
pop
arpl
sbb
jg
mov
hlt
enter
xchg
mov
out
sahf
movsl
fistps
push
and
or
adc
inc
mov
jp
addb
inc
push
lods
dec
push
fstp
jl
cwtl
lds
push
ret
adc
xchg
addr16
jge
adc
shr
jg
dec
loop
lahf
and
dec
lds
cmp
dec
int
sbb
dec
cmovns
inc
inc
cmpsb
sti
push
lods
jmp
aam
cmc
icebp
icebp
lcall
leave
sbb
daa
int
mov
insb
fidivl
sub
adc
add
pop
add
add
add
push
mov
outsl
out
sar
jp
push
and
cltd
lock
and
outsb
fmull
mov
pushf
mov
pop
lcall
mov
push
mov
mov
lds
imul
sbb
mov
ss
test
adc
mov
dec
cwtl
mov
popf
xchg
dec
aaa
pop
dec
jecxz
sahf
push
les
adc
in
xchg
addr16
pop
js
push
insb
lret
jns
xorb
and
cmpsl
int
pop
fdivl
xchg
in
add
xchg
lock
dec
arpl
jno
iret
sbb
lods
dec
scas
adc
dec
push
xchg
xchg
jbe
loopne
mov
aad
add
push
mov
out
stos
adc
mov
sti
dec
cmp
cmp
jno
sub
mov
xor
mov
bound
popf
popa
das
enter
pop
outsb
imul
sbb
sub
cwtl
adc
adc
add
add
mov
xchg
hlt
lret
mov
add
add
add
cmc
sbb
xchg
cwtl
fcmovb
lcall
push
dec
push
inc
cmp
into
xor
mov
clc
sbb
loopne
mov
in
xlat
adc
mov
daa
push
enter
mov
mov
xor
pushf
or
stos
stos
push
mov
in
mov
dec
flds
popf
xor
mov
sub
je
dec
lods
inc
cmp
sub
insb
xlat
add
loope
lds
loope
lahf
aad
rolb
dec
or
mov
adc
int
test
push
stos
pop
mov
scas
add
mov
push
push
xchg
rcl
xchg
adc
dec
cs
or
mov
loope
icebp
xchg
cmpsb
les
dec
sub
inc
push
inc
or
ret
scas
or
stc
fistpl
push
imul
jns
inc
arpl
push
lods
rolb
add
dec
push
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
imul
or
pop
pop
loope
test
aam
pop
add
dec
fistps
lret
sub
ss
cld
lds
test
jns
sbb
xor
or
call
and
test
push
icebp
jne
in
fndisi(8087
imul
out
dec
pusha
add
imul
pushf
add
int3
rcrb
jl
lea
mov
into
lcall
jle
jae
inc
clc
andl
ret
sub
xchg
xchg
icebp
inc
and
cmp
outsl
or
xor
leave
aad
fstpl
mov
les
mov
sbb
cmp
jns
stos
mov
lar
mov
dec
sbb
in
cli
in
test
mov
lret
cltd
sbb
xchg
xchg
xchg
jno
jmp
jl
scas
cltd
out
stos
lcall
add
add
adc
std
and
xchg
shlb
stos
out
mov
add
add
add
cmp
leave
addr16
push
push
idivb
ja
sti
sti
jb
daa
jg
mul
sarl
inc
stos
mov
dec
jae
out
xlat
adc
je
inc
pop
sahf
lret
bound
add
sbb
cmp
pushf
mov
aad
sub
das
mov
outsb
ss
mov
inc
sahf
sbbl
xchg
sub
or
js
jae
sbb
push
push
ljmp
mov
test
mov
movsl
xchg
std
stos
pushf
xor
mov
adc
cmp
out
clc
fmuls
lret
mov
fucomi
inc
stos
repz
xor
jo
dec
jge
adc
push
or
xchg
push
and
leave
push
mov
pop
mov
cmpsb
adc
in
rcrl
add
push
int3
inc
enter
adc
or
in
pop
andb
in
sbb
mov
add
add
mov
add
cmc
mov
add
add
add
or
lods
pop
push
imul
inc
test
fsubs
mov
push
mov
dec
filds
outsb
add
int
fiaddl
pop
jbe
pop
and
mov
push
mov
mov
scas
repz
add
push
push
add
push
mov
cltd
scas
inc
inc
es
scas
xchg
roll
rcll
pop
inc
es
xor
xor
sti
mov
mov
inc
jns
insb
lahf
push
fcmovnbe
push
cmp
jns
mov
pop
fwait
dec
call
jl
adc
pop
push
or
cmpsl
outsb
and
in
and
and
scas
add
and
addl
cmp
cmp
ljmp
dec
movsl
jle
push
mov
adc
sub
rorl
nop
jno
jecxz
mov
scas
jb
push
xchg
xchg
in
adc
sbb
xor
popf
xlat
add
call
icebp
mov
add
les
out
xchg
push
pop
xorl
mov
add
add
add
push
sarb
lret
jnp
mov
pop
and
lods
push
mov
in
push
mov
daa
mov
cli
pushf
adc
xlat
xchg
ja
xchg
loop
sub
cmpsl
push
movsb
fwait
shll
sbb
xchg
sub
mov
xchg
out
xor
imul
pop
daa
dec
and
dec
sub
std
bnd
testb
or
lods
in
or
pop
xchg
mov
adc
adc
in
push
jnp
fistps
notl
mov
in
sub
jo
pop
jmp
push
push
lds
fisttpll
add
cmp
sahf
sub
je
in
mov
or
movsb
lahf
add
outsl
adc
in
jns
fdiv
push
adc
fs
pop
leave
cs
imul
test
aad
sub
xor
mov
loop
push
notb
nop
pushf
pop
jno
jne
sti
or
imul
movsl
adc
icebp
data16
pop
stc
jl
shl
pop
sub
dec
add
ljmp
dec
push
ret
mov
lret
add
pop
add
add
daa
cmpl
mov
cmp
fbld
sub
fldt
rorb
frstor
shrl
daa
sub
push
insb
mov
adc
jno
jmp
rolb
inc
lods
mov
insb
jb
add
or
jl
mov
das
es
nop
insl
inc
outsl
xchg
jns
add
popa
jl
push
ret
cmpsl
adc
dec
xchg
lods
enter
cmp
adc
sbb
sub
aaa
into
mov
pop
icebp
cs
jge
cmp
mov
sbb
mov
rcr
jae
inc
rcll
scas
movsl
in
jo
cmp
arpl
adc
into
jbe
mov
sbb
in
adc
xor
imul
inc
leave
jo
fdivl
mov
jbe
and
dec
iret
hlt
mov
jae
xor
shlb
sti
push
inc
mov
nop
shlb
or
pop
jnp
lahf
push
in
adc
jne
aaa
shlb
cmc
div
mov
shrl
or
add
sub
ljmp
xor
inc
jo
and
clc
sub
std
sbbb
and
cmpsl
push
mov
fcmovu
mov
nop
xor
mov
out
xchg
sahf
push
dec
pop
idiv
je
jecxz
mov
jle
mov
icebp
jns
dec
mov
jmp
clc
sti
mov
push
pop
jmpw
dec
fstpt
xor
or
sub
xor
sbb
xchg
orb
loope
lret
mov
or
jbe
lret
out
lret
inc
mov
cmpb
out
add
add
int
mov
jae
ja
fcomps
js
mov
sbbb
xchg
enter
mov
clc
insl
push
frstor
mov
ds
and
push
or
sub
add
dec
sub
fcoml
loopne
inc
sbb
pushf
xchg
sbb
or
in
mov
pop
dec
inc
rol
xor
xor
rolb
pop
push
nop
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
testb
lcall
aad
sbb
pusha
std
and
sbb
xor
mov
sub
stos
dec
jmp
and
pop
lret
dec
mov
mov
gs
xchg
jo
mov
push
lods
mov
in
test
xor
fisubrl
mov
push
push
loopne
stc
das
and
mov
push
outsb
push
cmp
stos
lret
inc
pop
pop
ss
fsubr
cmp
arpl
pop
mov
cld
clc
ds
test
das
xchg
pop
subl
jle
jb
and
loop
fcmovnbe
or
pop
sahf
jne
test
cs
aam
and
cmc
stc
call
les
cmp
lock
or
adc
fistpll
lods
leave
imul
cmp
jecxz
popf
mov
push
loope
jns
xor
mov
mov
ja
mov
mov
mov
in
addb
add
add
arpl
cmpsb
jcxz
mov
mov
sbb
add
cmpsl
je,pn
cmp
movsb
aaa
ret
xchg
xchg
jl
add
out
test
lret
imul
push
mov
roll
hlt
push
shlb
sbb
jecxz
mov
das
insl
push
gs
sbb
lcall
push
outsb
pop
or
dec
jnp
cld
push
cld
out
mov
mov
jmp
lahf
mov
jle
outsl
push
mov
mov
cld
mov
idivl
ficomps
xor
mov
or
leave
std
and
cld
mov
sub
stos
mov
mov
dec
cmp
or
fcmovbe
sbb
cltd
inc
xor
mov
pop
or
mov
sbb
xchg
push
sbb
lods
andb
jbe
ret
mulb
mov
xchg
mov
leave
sub
push
sub
shll
xor
sub
sbb
mov
loope
jmp
push
in
sahf
pop
out
in
add
clc
jnp
jg
in
cli
push
aas
insb
xor
xchg
add
pop
add
add
inc
loop
movsb
jecxz
ret
dec
push
jo
enter
pop
shll
mov
loope
sbb
dec
xor
sub
movsb
push
mov
rol
dec
cmp
int3
mov
insl
jno
add
sbb
mov
stos
ljmp
shlb
jecxz
cmc
cwtl
loop
xchg
push
mov
popa
pop
add
jne
cmp
pop
pusha
dec
inc
pop
mov
fdivrs
dec
icebp
sub
je
stos
lret
test
sub
movsb
insl
sbb
lock
popa
xor
jecxz,pn
fsubs
popa
sub
out
adc
fimull
mov
push
cld
test
cwtl
pop
xorl
out
push
popa
movsl
mov
jecxz
jmp
sarl
ja
xchg
dec
adc
hlt
mov
jmp
dec
je
scas
addr16
test
arpl
ja
push
xor
psraw
bound
lahf
inc
ret
xchg
ljmp
add
add
lods
faddl
fbstp
cld
fidivl
in
sbb
daa
es
add
pop
add
add
clc
xor
insl
int3
xchg
sahf
mov
pushf
xor
fstpl
not
add
pop
imul
shlb
stc
pop
mov
jns
push
lds
cmpsb
dec
js
bound
xor
ja
iret
ficoml
hlt
arpl
js
jg
dec
stc
roll
mov
adc
mov
push
xchg
pushf
imul
shll
pop
cmpsl
inc
aaa
jl
stc
cmp
es
xor
sbb
mov
ja
pop
add
lods
pushl
cwtl
call
adc
shl
mov
pop
int3
sti
cltd
repz
fmuls
mov
pop
int
mov
into
mov
jbe
push
push
dec
mov
test
mov
out
cli
add
repnz
lret
dec
adc
mov
mov
xchg
pop
ret
xchg
mov
and
jmp
mov
insb
lds
lock
shll
stc
xchg
or
cmp
popf
int
add
jl
sar
std
jle
testb
enter
sub
add
add
or
push
and
pop
fdiv
sbbb
outsl
fmul
cmp
xchg
loopne
sbb
into
sub
mull
adc
and
pusha
je
mov
ret
sbb
or
mov
lcall
and
cwtl
pop
bound
fsub
pushf
jb
cmp
adc
outsb
sbb
sahf
in
xchg
aaa
mov
or
insb
fimull
iret
push
or
les
test
push
sbb
jnp
test
pusha
dec
leave
cmpsb
mov
cld
je
loopne
scas
add
pop
lock
subl
data16
insb
jae
push
pop
call
cmp
out
pop
mov
cld
into
jmp
sbb
cmp
insl
jo
push
mov
xchg
or
fwait
push
out
cwtl
jbe
rcrb
mov
sub
enter
jmp
mov
cmp
cmp
mov
xor
add
pop
add
add
xor
vpaddusw
repnz
into
xchg
and
cwtl
shlb
or
xor
dec
stos
neg
pop
xlat
in
loope
mov
xor
inc
outsl
lret
ljmp
cwtl
loopne
adc
jmp
push
pop
rorl
dec
lret
gs
xor
testb
pop
fiadds
pop
gs
lea
add
rcl
sbb
je
jmp
push
int3
jnp
sbb
jecxz
xor
or
in
pop
inc
orb
in
push
leave
dec
jno
xchg
xor
popa
insb
lret
js
sti
push
mov
scas
in
test
adc
ja
inc
xchg
adc
bound
mov
cmp
xor
test
aad
sub
xchg
rolb
push
jecxz
cmp
fdivrl
xchg
imul
fcomps
aaa
add
sub
pop
jmp
adc
add
outsl
sti
outsl
sub
sarb
xchg
add
pop
add
add
cs
mov
pop
out
or
mov
iret
insb
adc
std
inc
ja
xchg
hlt
mov
mov
dec
aaa
cs
test
xor
sahf
idiv
jp
adc
mov
push
sbb
outsb
pop
idiv
or
mov
sahf
cmp
sbb
pop
push
mov
sarl
int3
and
push
push
sub
push
shlb
orb
inc
xchg
mov
and
std
js
out
sti
xlat
hlt
inc
fbld
sbb
test
mov
mov
push
cltd
aam
scas
lret
cmp
jbe
and
iret
xor
dec
scas
movsb
lret
dec
xchg
lret
repz
sbb
or
cs
imul
aam
scas
test
xchg
or
sub
popf
xor
xchg
movsl
push
cmp
pop
lahf
xor
loopne
mov
push
gs
add
leave
popf
add
pop
jno
les
jge
pop
shl
push
and
xlat
aas
insb
lods
ret
mul
cmp
add
pop
add
add
dec
loopne
sbb
cmpsl
jg
jmp
jge
cld
push
lahf
adc
pushf
xchg
roll
adc
mov
pop
ds
iret
mov
add
jecxz
push
lret
sub
mov
pop
cmp
cmp
dec
mov
inc
xor
movb
jo
xchg
stos
ret
or
cmp
call
push
ucomiss
or
pop
push
fldcw
int
fcoml
jg
rclw
mov
notb
iret
pop
fbstp
clc
xor
mov
xor
adc
roll
enter
jns
jg
adc
xor
jns
pop
add
cmpsb
push
xchg
mov
add
sub
add
mov
loop
cmpsl
lea
addr16
sbbl
push
cmp
dec
sub
add
jno
jb
lods
sbb
sbb
out
aaa
xlat
pusha
rclb
out
aas
test
mov
jl
push
cmp
insb
fisubl
inc
add
mov
mov
jmp
dec
faddp
sbb
cwtl
add
pop
add
add
push
idivb
std
loope
arpl
mov
lods
xchg
mov
aad
imul
cld
inc
sub
dec
int
cmp
nop
rcrl
or
andl
ss
iret
das
jbe
and
push
jp
sbb
mov
push
push
sub
sbb
sbb
int
push
test
fstpl
test
jl
into
enter
hlt
fs
cld
cmpsl
xor
pop
mov
mov
xchg
sbb
sub
fsubr
sub
add
pusha
cmp
aas
mov
and
mov
jns
add
and
addr16
inc
mov
push
mov
xorb
lock
mov
int3
daa
sbb
dec
push
cmc
fcmovnu
mov
pop
fldl
ja
pop
xchg
add
mov
aad
fadds
mov
xor
add
lret
sbbl
xorl
fcmovnb
sub
push
cltd
add
pop
add
add
sub
and
mov
mov
stc
push
sub
addr16
xor
xor
and
bswap
sbb
mov
scas
cmpsl
inc
lea
jge
rorb
cld
xor
jo
pop
lea
dec
idivb
pop
mov
xor
cmp
push
mov
stc
jne
or
sbb
push
lea
insb
xrelease
mov
or
ret
je
call
or
jmp
jmp
xchg
clc
push
and
lods
mov
shll
sub
mov
adc
dec
cmp
jbe
pushf
add
idiv
add
mov
mov
call
xor
sub
xchg
xchg
fidivs
popf
in
xchg
sub
sbb
mov
stos
mov
xor
leave
pop
scas
roll
xlat
lret
pop
mov
insl
jle
mov
add
imul
sbb
leave
dec
das
jb
lods
push
lcall
or
and
xor
push
bnd
mov
cwtl
scas
xor
and
jg
mov
loope
xor
adc
cli
and
xor
shl
sub
fdivrs
adc
clc
push
int
out
cmp
mov
pop
jne
xlat
inc
fcmovnu
adc
push
push
subl
cli
mov
dec
in
cs
dec
add
in
out
sbb
aad
js
ret
clc
es
roll
or
xlat
jge
mov
loope
frstor
mov
inc
mov
mov
jle
push
and
shlb
xchg
popf
shl
imul
sbb
pop
gs
rol
cs
mov
or
dec
and
xor
or
imul
jmp
pop
jae
jns
ficoml
adc
mov
jbe
js
lock
add
mov
cs
stos
hlt
arpl
pop
add
add
push
dec
cmp
into
jae
rorb
stc
cmpsb
pushf
popf
pop
push
stos
add
xchg
movsb
leave
mov
pop
mov
stc
cmp
and
nop
popa
jne
test
push
jmp
push
enter
dec
lock
pushf
insl
ficoml
lahf
sub
addr16
fnstsw
jns
movsl
test
jo
gs
cmpl
lods
push
jge
imul
xorl
xchg
test
or
lahf
cld
push
outsb
dec
sbb
cmpsl
adc
jae
push
xchg
lods
test
xor
mov
and
sbbb
mov
sub
xchg
insl
sbb
push
lea
xchg
repnz
sahf
mov
test
and
jne
jne
jne
inc
xchg
inc
jge
lret
fsubs
xchg
add
cmp
adc
mov
mov
jmp
mov
arpl
jo
mov
sbb
sti
rclb
add
add
ja
out
xor
cld
ds
sti
jne
pushf
add
pop
add
add
mov
sti
repz
addr16
push
cli
mov
inc
cmp
xor
ror
ljmp
sbb
jp
cmp
int
iret
aam
cmp
pop
std
sbb
add
daa
rolb
lret
dec
dec
dec
mov
mov
mov
es
hlt
pop
push
sbb
add
setne
push
leave
in
inc
mov
adc
mov
or
out
push
cli
mov
mov
sub
rol
inc
jecxz
cmc
sub
mov
ret
arpl
dec
aaa
push
aas
insb
jp
dec
test
pop
cmpsl
outsl
fisubl
xchg
sti
pop
pop
push
cmc
jmp
int3
adc
mov
sbb
inc
push
sbb
loope
mov
js
pop
cmp
stc
mov
lods
leave
push
int
dec
mov
jg
nop
pop
cmp
rolb
push
out
iret
dec
ret
popa
adc
call
je
jecxz
jne
test
in
test
fiadds
add
pusha
test
je
push
test
inc
aas
insb
popf
add
pop
add
add
mov
xor
daa
icebp
je
lods
js
andb
push
aas
mov
popa
sub
mov
call
std
mov
jae
pop
sub
loop
push
push
bound
or
fiadds
mov
jbe
das
push
cmpsl
sub
and
or
fwait
xchg
jno
mov
aaa
adc
mov
mov
lods
pop
sub
andb
cld
lock
int3
or
or
xchg
aad
and
sub
sub
sbb
ret
scas
cmp
xor
pushl
rcrl
lahf
pop
xchg
inc
repz
sbb
dec
scas
rorb
bound
push
out
xchg
pop
adc
lret
jb
mov
mov
inc
sub
xchg
adc
xchg
stc
das
std
push
push
loope
or
scas
movsb
ror
in
mov
outsb
add
mov
repz
repz
xchg
add
add
add
cmp
sahf
sub
pop
out
rclb
addr16
xlat
add
jb
cli
jmp
ror
dec
xchg
push
sti
shll
dec
mov
mov
mov
inc
xor
lock
enter
fstpl
adc
sub
dec
in
pusha
mov
xor
cltd
xor
rcrl
push
jp
push
dec
inc
xchg
loope
sbb
out
push
shlb
mov
fcmovu
adc
pop
sub
cmp
imul
sbb
cs
ret
test
cltd
jo
fs
outsl
push
mov
sbb
xchg
std
dec
dec
imul
movsl
rcrb
icebp
ss
movl
mov
icebp
clc
sub
inc
cmpsl
push
fists
inc
nop
cs
lret
roll
ss
fcomp
xchg
fcmovnu
or
out
jae
xor
jne
aaa
dec
std
mov
add
add
mov
pop
or
add
pop
add
add
jae
and
ljmp
or
cld
or
aaa
jns
add
inc
mov
inc
daa
ljmp
std
hlt
negl
setp
imul
pop
or
or
scas
ds
adc
insb
add
mov
pop
std
jmp
adc
xor
push
mov
mov
pusha
inc
stos
data16
aad
push
fs
leave
xchg
xchg
call
xor
int3
fldenv
push
push
mov
lret
movsb
jns
in
enter
leave
lcall
sbb
pushl
mov
sub
dec
jg
sub
cltd
into
cmp
dec
xor
pop
stc
cli
popa
sbb
fildl
hlt
ljmp
sub
nop
dec
add
inc
pop
dec
add
fwait
sbb
outsl
pushw
cmc
aaa
mov
scas
das
jo
adc
aaa
shlb
push
push
adc
add
jae
sub
add
add
or
sbb
stos
sbb
add
add
add
mov
int
movsl
cmp
xchg
fdivs
sbb
push
stos
gs
pop
adc
ret
dec
fucom
mov
xor
inc
xor
aaa
sub
cmp
in
sti
int
negb
pop
stos
mov
xor
or
adc
fdivl
aam
push
sbb
loope
daa
or
fldt
ds
pop
adc
jle
dec
imulb
jmp
lcall
daa
adc
jecxz
mov
fucomp
sub
adc
stc
ret
push
add
repnz
jne
inc
xor
repz
rclb
jne
loope,pt
push
data16
loop
add
push
imull
mov
inc
je
pop
mov
mov
jle
jge
rcl
adc
sub
sahf
adc
out
or
iret
dec
imul
mov
mov
nop
aas
jbe
jns
mov
mov
das
mov
add
inc
fdivl
push
shufps
add
mov
cmp
cs
pop
add
fimull
push
push
call
push
xorl
lcall
mov
cmp
fnstenv
adc
repnz
repz
dec
lahf
lret
hlt
lock
lods
or
aad
int3
rclb
fcoml
aaa
shrl
cmp
pushf
loopne
int3
cltd
dec
in
ficomps
cmpsb
and
mov
mov
inc
xor
cltd
fistl
push
or
mov
xor
insl
out
cli
cltd
adc
ljmp
sbb
xchg
adc
lods
testb
inc
add
jnp
fistps
js
xchg
ja
pop
enter
pop
lcall
pop
je
push
outsb
lods
shrb
sahf
lods
es
sbb
sub
fcoml
jecxz
fsubrl
movups
int3
repz
aas
mov
inc
in
int3
testl
fwait
add
sbb
mov
push
ret
cmc
mov
pop
add
add
sbb
enter
jne
outsl
push
fidivrs
xorb
sahf
jno
add
and
mov
fcomps
xor
js
out
pop
jae
jp
fs
jmp
mov
lret
or
out
jae
js
xchg
cltd
xchg
push
fisubrs
pushf
jl
pop
xor
xor
push
lods
loope
mov
int
sbb
jne
test
sub
es
xchg
fimuls
inc
cmp
cltd
ret
inc
adc
xchg
jle
inc
stc
mov
lods
adc
fmul
ljmp
jecxz
pop
mov
dec
jns
xchg
mov
and
jmp
cld
sbb
mov
cld
push
pop
js
and
imul
in
adc
and
pushf
inc
pop
push
aaa
push
jnp
jecxz
test
mov
repnz
add
push
jmp
mov
and
shrb
push
sbb
cmp
test
add
pop
test
stos
hlt
jmp
jmp
mov
add
pop
add
add
cwtl
sbb
adc
inc
mov
xor
cmp
mov
js,pn
ja
sbb
gs
push
mov
adc
movsb
into
or
leave
add
enter
mov
add
xor
into
and
cmp
inc
pop
loop
in
gs
icebp
fadd
dec
popf
fdivrl
add
pop
gs
xchg
bound
mull
rol
cmc
in
pop
fs
lret
loope
add
inc
mov
mov
ret
and
movsb
leave
mov
lods
int3
lcall
shll
push
cmpl
mov
pushf
cmp
cmp
jo
and
sbb
stos
rcll
dec
pushf
fsub
xlat
pop
jmp
fdiv
pop
pop
outsl
sub
les
fadds
xchg
cmp
aas
imul
fcompl
dec
xor
inc
js
push
adc
mov
lods
repz
add
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
in
dec
cmp
jae
dec
inc
add
or
mov
xor
nop
lock
sbb
mov
int3
ja
mov
cmp
jnp
loop
xor
cs
test
xor
add
cmpsb
push
dec
or
leave
imul
mov
mov
inc
mov
daa
mov
inc
mov
sbb
data16
mov
es
mov
std
into
rclb
jb
inc
sbb
sbb
fmuls
lods
adc
leave
pusha
xchg
or
lock
xchg
jmp
and
test
rorb
cmpsl
sub
ret
leave
and
xor
jge
xchg
movsl
cmp
lahf
cmp
out
aaa
test
push
loop
mov
and
and
cmp
add
sbb
cmp
fnstsw
jb
sbb
jg
jbe
push
xchg
test
int3
paddsw
mov
sbb
ret
xor
lds
sbb
pop
fists
cmp
sbbb
movsb
movsl
add
pop
add
add
ret
jp
mov
and
xor
jne
popf
mov
andl
arpl
sub
mov
cmp
cmp
sarl
and
outsb
mov
cmpsb
mov
mov
jae
adc
mov
mov
jno
roll
mov
aaa
ljmp
jnp
jecxz
sar
push
xchg
cmpsb
fisttpl
push
pinsrw
sbb
pop
int3
xor
sbb
adc
push
mov
dec
xchg
pushf
pop
push
inc
sbb
mov
cld
aam
jbe
xchg
popa
jl
dec
cmp
roll
les
sbb
jle
sbb
inc
roll
ds
imul
insl
iret
mov
cld
sbb
rcr
push
mov
push
dec
xchg
popf
call
adc
ja
xchg
pop
test
cmp
stc
mov
xchg
pop
or
xor
jge
cwtl
sbb
lcall
std
in
mov
das
stos
cmpsb
add
pop
add
add
icebp
pop
out
add
dec
fmuls
andb
mov
push
enter
popa
movsb
rorb
addr16
frndint
dec
xor
mov
add
div
popf
test
frstor
lret
or
lods
mov
jecxz
mov
lcall
test
lcall
sub
mov
add
notb
or
lahf
dec
mov
jns
lcall
jge
sub
lret
cltd
pop
pop
pop
jns
ret
xchg
movsb
movsl
mov
xor
int3
adc
enter
mov
stc
inc
ljmp
fidivs
outsl
out
mov
cmp
cmp
jmp
mov
jle
or
out
lret
xor
popf
inc
adc
push
xchg
mov
pushf
mov
add
lock
icebp
ds
push
inc
movsb
scas
dec
aaa
or
cwtl
int
xchg
add
adc
mov
inc
test
lret
jnp
sti
jmp
pop
dec
pop
movsb
js
cmp
mov
add
pop
add
add
adc
mov
and
shrl
sti
nop
mov
in
ja
sub
shl
xor
mov
push
lcall
bound
mov
mov
mov
aad
xchg
enter
pop
xchg
js
sub
push
inc
add
outsb
stos
mov
xchg
popa
arpl
and
fwait
pop
dec
jo
pusha
cmp
push
mov
repz
les
push
mov
es
sbb
mov
mov
cmp
jo
push
ljmp
mov
movsb
pop
push
cs
iret
xchg
nop
dec
popf
pop
stc
repnz
lret
sbb
fcmovnb
mov
outsb
add
dec
cmpsl
mov
dec
and
mov
sti
or
mov
push
stc
bswap
xchg
ja
call
xchg
repz
sbb
inc
push
mov
and
into
add
jecxz
lock
fmuls
fnstcw
add
add
mov
push
pop
lahf
js
pop
cmp
adc
icebp
ja
sub
xor
test
xor
push
outsl
mov
adc
push
pop
jecxz
decb
imulb
or
cmpb
pop
subb
scas
stc
out
or
adc
sbb
inc
ja
sub
push
cld
push
mov
pusha
rol
sarb
sbb
inc
rcrb
cmpsb
push
outsb
or
fistpll
in
push
out
mov
sbb
inc
jge
add
jle
test
sub
gs
pop
dec
jmp
movsb
outsl
imul
mov
icebp
fnstenv
mov
imulb
outsb
sbbl
outsb
xchg
cmp
out
adc
mov
int
mov
insb
jo
cmp
xor
pop
or
or
daa
insb
js
mov
hlt
push
sub
or
loopne
mov
in
cmp
call
xor
mov
cld
mov
add
mov
shrb
add
adc
je
lret
in
pusha
shl
jmp
mov
push
xchg
cmp
inc
rorb
jno
sbb
cli
xor
outsb
add
lods
sub
mov
and
add
and
les
dec
flds
ss
lods
add
mov
int3
inc
mov
ficompl
or
or
push
mov
lret
mov
sti
fs
jg
ret
jle
or
data16
and
icebp
xchg
mov
fadd
ds
test
notl
add
and
cmc
sti
inc
out
mov
loop
hlt
mov
inc
test
fiadds
adc
sub
js
ja
fcmovb
popa
sub
ret
in
mov
push
addr16
jnp
sbb
aam
jge
dec
mov
pop
inc
pop
aad
push
inc
inc
mov
lods
or
adc
adc
iret
fstl
sahf
push
in
xchg
in
mov
add
mov
dec
das
pop
out
cmc
mov
push
sub
stos
add
pop
add
add
add
sbb
repz
dec
cmp
sbb
lock
in
cmpsb
fidivrs
pusha
jnp
dec
shll
repnz
xor
cwtl
ss
jo
dec
or
out
cli
movb
jbe
nop
or
std
mov
sbb
xor
scas
adc
jne
mov
popa
sub
ffreep
pop
mov
add
ret
xchg
sbb
out
push
stos
fdivrs
mov
mov
xchg
gs
adc
mov
test
repnz
and
and
movsb
jecxz
scas
inc
jge
push
xchg
add
pop
lahf
dec
dec
movsl
cli
dec
pop
repnz
sbb
test
xor
ret
xchg
pop
stos
jae
test
push
lds
pop
cmc
cltd
je
dec
loopne
aaa
insl
push
mov
dec
addl
into
mov
xor
sarb
test
test
bound
cmpsl
jb
pop
add
fabs
push
out
mov
add
fucomip
std
dec
std
pop
cmp
cmp
testb
into
stos
add
pop
add
add
xor
lcall
cwtl
popa
cmpl
jmp
sbb
aaa
and
test
ljmp
dec
inc
js
scas
inc
and
xchg
lock
xchg
jg
add
leave
out
cltd
pop
sarl
cs
jb
ficompl
inc
mov
fildl
loope
jae
jmp
fs
push
push
mov
enter
mov
inc
add
mov
shlb
xchg
gs
lods
aas
jle
push
mov
sub
sbb
add
je
jae
jo
sti
jp
and
mov
xchg
int
lea
nop
clc
sbb
adc
gs
stc
and
push
pcmpgtd
mov
clc
jae
inc
out
push
or
adc
out
fdivrs
jle
imulb
out
fmull
rcrl
repnz
inc
gs
lds
sbb
imul
mov
add
fidivs
loop
ljmp
iret
aad
add
pop
add
add
inc
insl
jg
outsb
flds
xchg
mov
sub
nop
test
push
out
fs
push
hlt
mov
inc
movzbl
xlat
dec
rcrl
mov
or
inc
imulb
dec
imul
arpl
xchg
insb
lods
or
push
mov
sbb
jecxz
xor
mov
push
and
gs
out
sub
rclb
mov
cltd
jmp
test
cmpsb
in
add
idivl
lea
cmp
mov
sti
sub
pop
scas
jo
in
lods
fnsave
xor
fs
pop
daa
cmpsb
add
jmp
xor
imul
cmp
sub
add
gs
or
xlat
sar
xor
xchg
xchg
bound
and
cmp
ret
insl
xchg
sub
jle
in
call
add
lods
adc
cmpsb
dec
xchg
arpl
inc
or
lea
cmp
mov
xchg
dec
adc
add
add
add
xchg
jg
jmp
std
push
int
lock
mov
add
add
add
mov
cmpsb
sub
add
setbe
adc
in
in
and
add
es
push
adc
pop
outsb
cld
clc
lock
xchg
xor
inc
xchg
imul
mov
dec
subps
aaa
out
pop
lds
daa
mov
dec
test
pop
add
aas
mov
jp
andl
scas
mov
movsl
pop
icebp
and
shlb
inc
jb
sbb
jg
rol
nop
iret
adc
es
cmp
mov
mov
lret
jg
jle
lds
mov
out
pop
mov
popf
rolb
push
pop
or
mov
out
mov
idivl
mov
mov
faddl
movb
shll
mov
xchg
mov
cmpsb
mov
bound
xor
clc
mov
jge,pt
xchg
je
popa
std
xchg
fists
xor
add
xor
dec
sarb
cmc
subl
jecxz
add
pop
add
add
roll
clc
add
jbe
xor
popa
mov
decb
movsl
inc
ljmp
add
mov
adc
jl
in
adc
fidivrl
adc
add
mov
push
fistpll
loopne
sub
sub
mov
push
mov
sbb
enter
pop
repz
inc
xchg
push
sub
xor
mov
sbb
mov
pop
pop
rol
daa
mov
outsb
das
fsubrl
aad
xchg
test
xchg
or
jle
mov
jae
stc
test
adc
sub
add
xchg
mov
hlt
or
hlt
add
jl
in
pushf
lret
notb
outsl
ljmp
xchg
add
push
add
xor
pop
sbb
ljmp
call
in
xor
cli
popa
add
ljmp
mov
clc
sti
add
sub
push
dec
cmpsb
daa
nop
push
push
pop
xor
cmp
or
ljmp
add
cvtpi2ps
stos
push
sbb
push
movl
rcr
jo
push
clc
es
pop
jp
shrl
push
pop
insb
aaa
shlb
scas
sub
push
dec
mov
push
outsl
mov
aam
push
lret
femms
in
ljmp
ljmp
in
mov
icebp
mov
fmuls
lret
pop
pushl
jae
sub
fs
pop
pop
scas
pop
xor
loope
pop
mov
inc
shll
lahf
mov
js
inc
push
test
push
add
xor
pusha
lahf
inc
sub
bnd
mov
mov
jae
scas
sahf
shll
fstpl
sbb
int
jno
push
pop
mov
test
sbb
jecxz
mov
pop
ljmp
shrl
mov
sub
fmuls
or
ror
je
pop
adc
mov
mov
inc
and
add
addl
jnp
mov
add
add
jp
les
mov
ret
ja
test
push
out
icebp
mov
add
add
add
movsb
call
xchg
inc
in
aam
xlat
lds
leave
jp
sqrtps
xor
dec
pop
frstor
and
push
inc
and
rcrb
pop
xor
aaa
inc
mov
mov
push
jns
mov
adc
daa
lods
jno
int
push
xor
xchg
sbb
adc
ja
sarb
daa
popa
leave
mov
or
out
add
data16
adc
lea
and
and
inc
mov
inc
pop
fs
aam
and
add
data16
imul
clc
call
cmp
dec
mov
push
ljmp
mov
cmp
in
adc
mov
in
pop
fcompl
shrl
and
stc
jns
repz
xor
or
pusha
xchg
pop
pop
dec
pop
in
imul
cmp
mov
add
clc
pop
stc
out
push
push
xchg
data16
popa
dec
push
or
mov
add
add
add
or
stos
into
iret
inc
sti
inc
pop
xchg
mov
lods
xchg
dec
aam
jo
mov
xor
lahf
test
cs
pop
sti
mov
xchg
outsl
dec
std
push
dec
ficomps
ds
cmpsl
das
push
mov
push
push
sarb
shlb
jbe
push
jbe
inc
fsts
pop
inc
in
out
dec
mov
fidivrs
lea
mov
daa
cltd
repnz
stc
push
and
cmovp
dec
outsl
ja
pushf
mov
mov
bound
xor
mov
test
adc
test
xlat
cli
xchg
add
jle
fcoml
pop
fisttpll
ja
out
adc
je
int3
xchg
jbe,pt
inc
mov
scas
push
rcrl
inc
adc
and
and
push
repnz
mov
lock
xchg
xor
pop
xchg
sub
jae
cltd
test
es
xlat
std
stos
lahf
mov
lds
cli
lcall
test
pushl
add
imul
std
xchg
sub
xor
cld
stos
xor
unpckhps
dec
movsb
iret
add
mov
inc
insb
pop
xchg
xchg
xchg
inc
dec
loop
loopne
adc
repnz
movsb
dec
int3
ds
out
inc
mov
sub
ss
jg
insl
mov
and
movsl
cwtl
inc
push
sbb
daa
or
ret
in
mov
mov
adc
sarb
jne
lret
test
push
stos
idiv
test
or
daa
sbbb
cmp
sub
push
cmp
pop
les
dec
xorb
dec
mov
pusha
in
and
aaa
push
out
or
mov
jp
push
mov
dec
mov
or
ss
jge
fistpl
rcrl
hlt
inc
dec
jg
dec
xlat
or
stc
sub
aam
inc
in
mov
inc
xor
and
cmp
jmp
in
adc
add
push
sub
add
xorl
movsl
jns
mov
push
mov
add
add
add
xlat
popf
int3
mov
push
ret
fidivs
add
inc
cs
lahf
outsl
xchg
hlt
dec
xchg
mov
imul
nop
push
dec
addl
mov
rcrb
push
ds
fmul
fnstenv
imul
in
aad
fistpll
cmc
dec
sub
sub
call
mov
sbb
test
mov
rorb
pop
jl
sbb
insl
inc
cmpl
mov
mov
pushf
shrb
enter
dec
sti
mov
xchg
or
pusha
pop
lahf
stos
cld
aas
inc
lret
push
lcall
rorb
xlat
fildll
es
jns
pop
les
xchg
mov
ljmp
mov
mov
shrl
sub
xchg
pop
sbb
loopne
stc
in
mov
addr16
adcb
into
mov
xchg
lds
lret
add
pop
sbbl
cli
test
popf
mov
scas
or
add
add
lea
inc
aaa
es
std
out
mov
loopne
pop
leave
dec
and
iret
sbb
out
inc
fucomi
adc
push
out
push
push
xchg
xor
sar
outsl
rorb
sahf
mov
pop
fildl
mov
mov
mov
sbb
std
test
mov
xlat
mov
add
and
insl
sub
mov
push
pushf
push
push
add
insb
add
mov
add
scas
cli
pop
and
sub
lods
xchg
xchg
aam
and
jmp
jecxz
test
mov
aas
aaa
lods
lock
mov
rcrb
ljmp
cltd
repz
xchg
mov
sbb
and
jmp
xor
call
xor
xchg
pushf
fs
push
xchg
pop
in
jno
ds
sbb
insl
aaa
add
in
mov
jecxz
out
arpl
sbb
jp
adc
add
pop
add
add
fucomi
and
dec
scas
imul
push
fwait
adcb
aas
in
cmpsb
out
pusha
sti
clc
and
movsl
mov
or
push
addr16
xor
push
fdiv
jle
je
xchg
dec
arpl
push
mov
xor
hlt
daa
pop
push
addb
movsb
lret
out
imul
adc
sbb
repnz
mov
imul
xchg
and
pop
pop
into
pop
outsb
clc
push
inc
cmp
idiv
pop
insl
fistpll
inc
andb
jns
dec
ret
xchg
notb
icebp
ret
ljmp
dec
or
sbb
jle
mov
dec
movsl
inc
es
xchg
daa
lahf
cmp
xor
lock
inc
push
in
mov
inc
jnp
sahf
adc
scas
jnp
xchg
jmp
aaa
repnz
xor
push
or
xor
jmp
add
clc
adc
loopne
mov
loope
subb
test
ret
or
add
std
test
jg
xor
stos
fwait
out
pop
and
mov
add
add
add
push
push
mov
adc
adc
dec
jnp
shll
xchg
fsubrl
mov
mov
add
dec
pop
lods
mov
enter
dec
pop
push
stos
loopne
mov
xchg
jb
xchg
enter
xchg
and
jge
loop
mov
test
mov
sub
test
jnp
iret
rol
pop
xchg
mov
xchg
sbb
sar
fwait
push
fldt
out
fs
xchg
fldt
arpl
mov
test
mov
xor
ret
or
mov
mov
mov
je
cmp
addr16
mov
mov
mov
mov
les
push
outsb
nop
fistpll
push
add
ljmp
and
xchg
cmp
pop
push
repz
loopne
or
push
idivl
mov
mov
xor
add
adc
in
lcall
xor
fs
fwait
inc
dec
and
add
push
sub
pushf
ljmp
popw
pop
sbb
fstp
fwait
xchg
or
dec
xchg
loopne
in
jg,pt
jne
sub
movl
icebp
imul
mov
ret
repz
mov
add
jmp
test
mov
pop
fcoms
sbb
daa
lods
idivl
mov
mov
clc
fsubl
sub
pop
mov
mov
aas
xchg
cmp
ja
inc
sub
insb
push
jmp
arpl
push
aad
add
rcrb
pop
xor
ficoms
sub
js
adc
scas
jns
mov
pop
into
int
dec
sti
xor
and
je
popa
sub
add
rol
test
pop
imul
fistl
mov
fisubl
stc
test
dec
and
dec
or
jg
adc
outsl
xlat
out
outsb
out
sub
add
stos
push
pop
fucomp
bound
jmp
dec
pop
lods
scas
mov
in
xchg
push
pop
or
adc
sub
cmpsl
out
jo
sbb
xchg
jle
insl
jnp
lds
loopne
dec
pop
mov
int
mov
insl
addb
jns
dec
mov
sbb
pop
rclb
fldl
lret
push
outsb
scas
negb
out
xor
xchg
sub
jp
pop
mov
and
inc
xor
push
mov
sbb
repnz
xor
xchg
xor
jp
add
in
iret
jae
pop
jp
adc
mov
push
mov
push
rcll
nop
shlb
sbbb
stos
mov
push
test
pop
enter
add
out
aam
lods
in
pop
frstor
jge
and
jle
jge
xlat
lcall
nop
inc
in
mov
cmpsb
jl
scas
flds
add
insl
sbb
outsl
mov
mov
jmp
xor
add
xchg
mov
aas
out
jbe
mov
xchg
adc
test
jp
cld
in
xor
jge
sub
call
mov
inc
loop
sahf
dec
and
call
aam
aas
fstps
sub
inc
outsl
int3
lods
into
sti
insl
sbb
leave
jp
dec
aam
jnp
jge
xor
inc
lret
pusha
cltd
int
flds
push
data16
inc
loop
cmc
cli
jo
orl
imul
cld
fldcw
dec
lea
sti
xor
pop
sub
mov
out
push
int3
gs
pop
add
aad
je
sbb
cli
push
outsb
lahf
test
fdivrl
ss
dec
pop
xchg
sbb
push
mov
into
or
stos
jb
rorl
ret
jne
rclb
inc
pop
or
jmp
jno
imul
icebp
cmp
aam
pop
fcmovnu
xor
dec
out
mov
pop
js
add
inc
fbld
mov
cmovg
cwtl
or
mov
add
hlt
mov
pop
rorb
cmp
cmp
xor
arpl
add
push
sbb
pop
add
sub
mul
add
inc
adc
jae
or
imul
mov
sti
rclb
xchg
cmp
inc
xor
shl
xchg
sbb
in
xor
shl
lcall
xchg
in
ja
xchg
push
pop
rclb
ret
lcall
inc
add
cltd
adc
int
sub
mov
aam
sarb
and
jg
dec
movsb
fdivrs
jmp
pop
outsb
movsb
sahf
cltd
mov
pop
sub
leave
enter
push
stos
aad
mov
ljmp
mov
ljmp
mov
pop
push
imul
dec
cmp
in
shll
dec
dec
outsb
xlat
or
repz
sub
ret
in
rorb
add
fistpll
call
sti
xchg
mov
mov
add
jbe
ja
cmpsl
push
es
xchg
std
movsb
fsubl
cmp
ljmp
inc
scas
in
mov
fstp
add
mov
loopne
pop
dec
data16
out
xor
push
adc
dec
mov
nop
icebp
bound
out
into
pusha
xchg
pop
cli
iret
push
out
movsb
inc
cmpsb
add
mov
int3
lods
out
xchg
cmp
mov
lds
mov
outsl
fwait
dec
add
dec
xchg
shl
cmpsb
pop
aad
push
push
inc
add
dec
sub
insb
sub
and
ds
xchg
xor
pop
pop
sbb
cmp
sbb
cmp
dec
idivl
lcall
insl
mov
dec
mov
push
xor
cld
das
sub
ja
les
rol
dec
cltd
lea
sbb
rcll
adc
or
add
mov
into
std
sti
leave
sti
iret
jmp
dec
mov
inc
inc
mov
add
dec
push
mov
or
adc
cwtl
enter
dec
adc
aad
add
pop
push
cmp
inc
jae
or
add
push
sahf
sarb
lds
je
mov
outsl
popf
hlt
imull
and
adc
hlt
push
in
adc
aam
cmp
orb
out
inc
rol
into
pop
ds
mul
ds
gs
dec
dec
call
xchg
cli
and
sub
scas
mov
sbb
and
push
int
push
mov
push
add
mov
shrl
insb
fisttpl
repnz
popa
sub
in
mov
stos
es
movsl
push
loope
shrb
loopne
cs
or
lret
add
loope
xor
out
rcrl
push
stc
addl
sahf
jne
aad
add
mov
xchg
pop
int3
xor
add
add
add
push
bound
daa
enter
pop
sbb
popf
push
mov
push
dec
jae
jp
pop
and
push
inc
sbb
and
xor
adc
cmp
fs
mov
enter
mov
mov
repnz
in
repnz
jbe
loope
sub
std
addb
les
xor
mov
repnz
fwait
repz
jge
jp
bound
jmp
test
sub
sbb
mov
jecxz
xchg
mov
push
pop
fwait
jg
fadd
adc
push
or
mov
sbb
mov
inc
in
mov
fwait
into
outsb
cld
incb
arpl
cwtl
xor
js
add
ljmp
icebp
sti
cmc
outsl
xchg
pop
pop
test
out
or
test
inc
jae
imul
int
mov
sub
mov
fsubr
push
incb
fwait
mov
or
jg
mov
xor
sub
push
mov
add
bound
cmp
dec
lds
xor
notb
call
inc
std
lods
inc
push
ja
sub
scas
sub
or
sub
int
pop
movsb
dec
add
stc
sahf
iret
adc
and
xchg
adc
rorb
or
xor
negl
jge
push
rorl
imul
inc
repnz
lcall
and
lret
int3
nop
rcr
fsubr
dec
push
cmpsb
test
daa
fnstcw
lret
cwtl
jp
xor
add
pop
xor
inc
test
mov
or
xlat
xchg
add
lock
out
aas
call
pop
push
lcall
loopne
bound
aam
ret
lahf
or
insl
out
xor
aas
mov
stc
xor
jbe
cmp
or
pop
push
adc
in
pop
test
scas
xchg
ja
cmp
mov
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
mov
adc
add
int
out
rcr
mov
cmp
xor
lds
cli
push
xor
jecxz
push
rcl
ret
incl
hlt
pusha
ljmp
or
cmp
cmpsl
imul
xchg
pop
push
pushf
inc
int3
push
mov
jmp
repnz
shll
mov
mov
test
bound
loopne
xchg
xorl
in
loopne
xchg
mov
add
mov
pushf
je
mov
mov
mov
pop
push
pop
xchg
repz
add
cmpsb
shll
in
push
hlt
inc
and
outsl
push
mov
sbb
add
mov
fistpll
icebp
push
fsubs
out
movb
inc
add
in
sbb
push
cld
stos
iret
dec
cld
adc
inc
lcall
inc
push
jle
pop
cmc
xor
scas
cmp
lea
aas
roll
mov
xlat
pushf
shrb
xchg
mov
xchg
popa
roll
pop
add
add
push
test
imul
inc
mov
int
push
adc
jge
mov
jecxz
cli
lcall
push
cli
dec
out
sub
fsubrl
cmp
lods
dec
sbb
push
sub
dec
mov
loop
inc
dec
int
adc
pop
inc
mov
pop
jnp
js
cwtl
test
mov
iret
mov
adc
lret
hlt
mov
xchg
push
je
imul
and
push
push
aaa
adc
inc
imulb
adc
mov
mov
mov
jmp
or
mov
in
adc
std
ljmp
je
nop
push
or
lret
pop
inc
cmpsb
neg
fisubs
dec
ljmp
push
adc
gs
adc
pushf
sub
aaa
pop
ror
lock
pop
jbe
mov
insl
and
aad
aas
add
test
mov
fucomip
imul
add
pop
add
add
mov
jmp
xor
cmpsb
bound
ret
jnp
xor
cltd
xchg
push
insl
fidivl
mov
dec
inc
repz
aas
xchg
add
dec
movsb
stc
movl
dec
fildl
sub
pop
mov
mov
daa
outsl
pop
mov
insl
jae
clc
idivl
out
cli
gs
xor
xor
loop
dec
repnz
pop
fstpl
stos
sbb
adc
fs
mov
dec
mov
fcoms
in
cltd
sub
push
dec
out
jecxz
dec
roll
xchg
js
adc
dec
cmpsl
push
in
push
mul
pop
xchg
push
dec
filds
sub
ja
jae
loope
aas
aas
jl
push
outsb
aas
es
stc
int
out
repz
push
inc
jnp
pushf
mov
jecxz
into
mov
aaa
ret
jmp
pop
dec
mov
lret
negb
add
loopne
cmp
test
popf
jl
mov
add
add
jne
jne
jg
loop,pt
lret
imul
add
add
jbe
dec
out
jecxz
pop
or
push
dec
mov
in
jbe
lahf
js
pop
jbe
xchg
bound
dec
xor
int3
jl
mov
xchg
scas
sub
mov
mov
push
sub
rcrb
pop
mov
clc
sbb
mov
cmp
frstor
leave
popf
xchg
add
popa
lret
cmp
jmp
jne
out
push
aad
int
popf
lock
mov
lcall
adc
mov
loope
sub
scas
gs
stos
cwtl
sbb
or
cltd
loope
fnsave
in
test
push
lahf
bound
pop
lea
hlt
mov
dec
sub
cmp
dec
cmp
jmp
dec
cmp
insl
ret
fwait
dec
pop
leave
or
cwtl
stos
mov
sub
pop
inc
mov
inc
jecxz
sbb
and
push
jmp
mov
cmp
xor
xchg
sub
repnz
add
add
dec
pop
mov
mov
dec
add
shrb
add
add
sub
push
jecxz
lods
filds
jle
mov
mov
in
popa
jae
scas
push
inc
enter
jge
cltd
dec
in
aaa
inc
cwtl
and
xchg
push
mov
sbb
pop
cs
gs
mov
jge
shlb
pop
adc
jl
adc
jg
inc
xor
jnp
mov
ret
pop
mov
bndstx
mov
sbb
or
js
mov
sub
mov
out
cli
inc
jecxz
shl
lods
stc
adc
push
xchg
fdivl
push
ret
jmp
xchg
div
add
pop
test
add
jne
xchg
adc
daa
enter
xchg
loope
jns
psrad
mov
push
lcall
clc
nop
mov
ja
xor
sbb
cmp
rorl
or
push
movsl
rcl
push
jecxz
leave
aam
jns,pn
adcl
add
outsb
jle
lods
testl
idivb
add
add
add
fcompl
fisttpl
dec
lods
ret
lock
sub
mov
mov
jp
ljmp
push
xlat
add
movsl
data16
repz
jp
xchg
jmp
jne
movsb
or
adc
cmpsl
xchg
sub
test
and
divb
aad
ret
mov
fucom
mov
mov
aam
sti
loopne
leave
cli
and
push
xchg
sub
sub
je
jp
cmc
cwtl
das
or
into
mov
xor
lret
jbe
fs
mov
sbb
fstpt
nop
mov
repz
iret
lcall
xchg
lds
aad
insb
pusha
fs
mov
cwtl
out
rcll
dec
inc
sub
out
imul
loope
sub
inc
mov
push
scas
push
lret
adc
enter
daa
jbe
push
test
incl
mov
mov
jp
arpl
clc
dec
cli
mov
movb
pop
add
add
dec
push
lock
das
das
scas
cmpsl
or
sbb
push
clc
adc
add
insb
pop
mov
inc
cld
lcall
mov
or
fcmovu
adc
xor
inc
pop
imul
mov
daa
movsb
scas
mov
and
nop
and
les
push
pop
sbb
sbb
inc
xor
lahf
inc
daa
adc
mov
mov
xchg
test
dec
shlb
adc
add
lret
jg
add
jno
adc
lods
addb
insb
hlt
es
lods
repz
sbb
movsb
jp
sub
adc
jg
jbe
mov
mov
dec
push
test
daa
ds
arpl
insb
testl
pusha
int
por
adc
movsb
fs
cmp
mov
add
add
out
sti
xlat
push
aam
or
movl
add
push
std
adc
or
ljmp
rorl
adc
loopne
shlb
mov
mov
bound
loopne
mov
enter
or
mov
loopne
dec
jecxz
cli
mov
xor
es
cmp
gs
adc
leave
cmp
nop
mov
cli
cltd
out
mov
dec
cld
idiv
loop
pop
add
addr16
icebp
popa
repnz
mov
aaa
sub
lahf
out
imul
ficoms
sub
je
es
pop
dec
scas
xabort
mull
pop
decb
push
daa
or
and
jno
xchg
push
das
pop
and
jl
sbbl
jmp
pop
loopne
xor
sub
xchg
mov
jmp
aam
fisubl
sbb
insl
xor
sub
mov
jg
add
ds
sub
cmp
jg
dec
das
pop
mov
enter
add
add
dec
jb
sub
lods
cltd
ja
sbb
and
or
sub
cmpb
inc
ds
mov
sub
or
scas
test
jge
pop
mov
sahf
jne
mov
mov
cmpsl
xor
cmp
scas
subps
iret
movsb
or
mov
inc
popf
fcompl
mov
jle
out
cld
sbb
int3
inc
pop
int
dec
in
insb
out
test
inc
nop
pop
xchg
and
in
adcl
stos
inc
push
rcrb
push
inc
or
movsl
pop
mov
enter
pop
mov
pop
lret
loopne
lock
jo
add
cmpsl
aaa
aas
cmpsl
and
jecxz
or
adc
mull
sbb
or
or
dec
xor
stos
or
hlt
cwtl
nop
add
prefetch
or
aam
jno
mov
sbb
sti
data16
aaa
movsb
cltd
xchg
mov
mov
pop
xchg
cs
mov
add
jmp
ds
repz
xor
leave
add
pop
add
add
cs
into
shrl
mov
xchg
push
call
inc
sbb
sub
jl
mov
mov
cmp
stos
push
ds
ja
lcall
cmc
addr16
sahf
dec
xchg
mov
pop
mov
mov
push
movsl
xor
repnz
stc
pop
bound
bound
jnp
jne
fs
mov
xor
test
mov
jle
mov
cmc
pusha
inc
aas
xchg
inc
dec
daa
mov
ljmp
jmp
or
fld
inc
jle
ss
inc
dec
push
dec
lods
pop
add
mov
and
dec
pusha
fmull
xchg
add
pop
mov
pop
fidivrl
fs
popa
inc
adc
getsec
nop
and
mov
sbb
lods
add
mov
jne
test
ficomps
fs
out
xchg
or
pop
and
jb
ja
xchg
mov
jno
inc
mov
xchg
add
mov
and
lret
pop
add
add
gs
mov
sbbb
jp
pop
or
pop
js
dec
xchg
sub
add
xor
aad
aad
mov
jmp
and
scas
mov
xchg
dec
inc
movsb
and
cmc
das
cmp
es
imul
dec
push
xor
mov
mov
lods
xchg
mov
mov
ljmp
push
orl
mov
test
push
ljmp
test
sbb
std
push
add
fsts
mov
adc
push
es
daa
dec
pusha
shll
xchg
mov
aam
or
jl
jb
dec
and
inc
mov
mov
loop
sbb
lahf
push
jle
fwait
cmp
cmp
or
cmp
pushf
cmp
fsubr
dec
fadd
flds
dec
adc
std
xchg
inc
loop,pt
leave
jp
xchg
fildl
mov
xlat
aas
xchg
pop
fcompl
add
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
xchg
dec
jo
mov
xor
pop
cmp
loope
addr16
xlat
mov
pop
imul
pop
stc
jo
mov
pop
jl
mov
adc
lret
adc
pop
adc
imulb
push
icebp
insb
push
or
mov
sahf
dec
cmpsl
inc
mov
mov
js
xchg
into
std
push
dec
cltd
enter
adc
mov
inc
add
loopne
xchg
jne
and
inc
adc
xor
cmp
jmp
jo
cmc
mov
dec
insb
jecxz
or
test
lock
dec
mov
xchg
iret
mov
mov
dec
pop
daa
jnp
jg
testb
adc
mov
out
mov
cmpsl
fsubr
lahf
stc
jg
xchg
mov
and
mov
ret
mov
out
push
insl
ficoml
popl
sbb
movsb
and
jae
arpl
jge
cmp
fidivrs
lock
call
addl
jne
imul
cmc
decl
add
add
add
add
lret
xchg
iret
pusha
out
sbb
mov
icebp
push
movsl
mov
or
stos
clc
aad
fs
dec
cmpsb
jge
mov
or
or
movl
or
lds
cmp
push
mov
jno
mov
test
xchg
lods
add
frstor
dec
cmp
fadds
cmpps
push
vandnpd
stos
loope
xor
xor
mov
pop
xor
jg
mov
sbb
ljmp
or
mov
mov
xor
aam
sbbb
out
jle
hlt
mov
loopne
xlat
and
je
and
ds
lret
sub
out
mov
nop
xchg
pop
lock
sub
fbstp
inc
loope
cmpsb
fistpl
and
stc
lock
inc
testl
sbb
repnz
call
xor
popa
push
ret
popa
fwait
pop
inc
ljmp
add
add
ja
iret
arpl
or
mov
cltd
mov
add
pop
add
add
jne
enter
je,pn
mov
jmp
dec
xchg
scas
push
fstpt
jo
xacquire
push
lea
inc
popa
dec
xlat
shrl
cmp
sub
aaa
nop
aaa
cmp
ja
and
js
pop
adc
loopne
aas
imul
arpl
nop
in
test
es
jmp
movsb
ss
lret
add
jno
cld
out
or
xchg
xchg
hlt
lods
sti
cmp
ret
jae
sbb
jg
inc
scas
out
ljmp
fldcw
aam
mov
nop
out
je
cltd
test
push
enter
lods
push
sub
push
sbb
mov
push
ret
cmp
adc
jbe
das
sbb
rcr
mov
push
add
dec
xchg
jb
lret
inc
cld
or
xor
pop
xchg
ficoml
subl
cld
mov
cs
inc
adc
das
in
jnp
into
leave
repz
insl
add
out
into
shlb
xchg
andl
add
add
sub
out
xchg
push
mov
inc
mov
call
mov
xchg
repz
mov
mov
out
jle
in
fisttpll
xchg
mov
inc
jmp
pop
stc
andb
jno
pop
test
nop
and
test
jns
cmc
cmp
lret
addb
sbb
pop
and
arpl
sbb
mov
or
xchg
js
in
sahf
pusha
into
jmp
sbb
sbb
ret
leave
or
sbb
sbb
pop
mov
jne
outsl
shlb
and
cmp
add
jne
stos
stos
mov
adc
out
out
scas
sbb
mov
repnz
adc
lret
xlat
rol
xchg
xor
mov
inc
push
xchg
ja
xchg
pop
leave
insl
or
imul
sbb
or
out
sbb
pop
xchg
jle
add
xchg
and
je
out
mov
arpl
add
pop
add
add
dec
add
dec
inc
movsb
sub
in
push
dec
or
into
xor
push
mov
popa
and
mov
or
jae
xor
jno
stos
mov
mov
icebp
xchg
cli
xor
fisttpl
pop
cltd
or
xlat
mov
lahf
mov
xor
shlb
sub
arpl
andb
cli
and
sub
sub
aas
test
out
scas
pop
jp
and
test
mov
iret
lods
popf
sub
add
gs
pop
arpl
pop
inc
dec
sbb
mov
mov
cmpsb
push
jb
xchg
add
mov
inc
fwait
les
fs
cmc
cmpb
jg
and
push
test
adc
fiadds
mov
push
vxorps
sub
fidivrl
bound
les
data16
xchg
pop
xor
fldl
and
dec
inc
dec
daa
dec
das
outsb
imul
sub
shll
lret
add
add
add
or
pushf
std
adc
lret
arpl
sbb
push
mov
sti
lods
add
es
int3
sbb
dec
out
arpl
add
lret
jmp
lods
xchg
je
mov
mov
jne
mov
inc
or
ss
cmp
in
scas
xor
inc
rcrl
inc
orl
sub
leave
pop
pop
mov
or
imul
es
cld
ljmp
xchg
mov
pop
aaa
xor
imul
adc
push
push
mov
adc
cmpl
sarl
adc
test
js
lds
mov
aad
outsl
ljmp
push
ljmp
jbe
lcall
and
popf
mov
mov
enter
and
jge
aam
mov
pop
dec
xchg
xchg
adc
sbb
or
adc
and
pop
xchg
push
lock
int
cltd
cli
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
enter
sub
loope
out
les
xchg
xchg
xor
push
clc
aaa
pop
rcr
insl
in
push
mov
cmpsl
clc
loopne
cmc
mov
iret
add
inc
dec
out
jns
fcompl
xchg
aam
pop
ret
and
xor
xor
lods
jmp
shl
mov
nop
jae
leave
arpl
xchg
test
jae
mov
inc
int3
loop
and
mov
scas
fmull
mov
push
fildll
mov
rcrl
dec
in
xlat
xchg
aaa
mov
insl
push
pop
or
lahf
xchg
aam
add
pop
ret
adc
jp
pop
dec
xor
arpl
repz
imul
add
push
test
adc
aas
test
out
outsb
clc
push
pop
test
push
sti
scas
xor
pop
std
jne
loop
popl
insl
and
inc
xor
mov
ss
int3
ja
xor
enter
add
mov
mov
mov
inc
sbb
jnp
and
rolb
add
add
add
daa
push
fsubp
mov
ret
out
out
sbb
and
mul
dec
dec
lret
xor
mov
into
pop
push
push
bound
fisubs
push
das
mov
fildll
or
sub
jecxz
push
out
in
or
je
inc
sub
nop
mov
pop
cmp
inc
adc
orps
mov
mov
loope
aas
outsb
push
imul
pushf
out
ds
out
jge
adc
ret
push
mov
sbb
cltd
pop
dec
xchg
enter
push
push
aad
sahf
and
stos
mov
xchg
mov
loopne
stc
dec
addr16
add
lock
sarl
or
loop
sti
popf
dec
jg
pushf
stos
call
mov
fwait
sbb
fxam
outsl
sub
mov
dec
push
shl
aas
sub
mov
xlat
push
popa
stos
pop
xlat
lds
add
ljmp
fwait
testl
xor
rcrb
add
add
add
sbb
in
and
shll
add
pop
add
add
adc
sub
sub
cld
inc
adc
sahf
int3
insl
xchg
cmpsb
and
mov
push
adcl
repnz
outsl
push
sbb
ja
clc
dec
mov
mov
adc
dec
push
pusha
clc
jle
sub
bnd
ret
jecxz
sbb
aaa
inc
cmp
jmp
sub
ret
push
or
in
mov
push
mov
cmp
int
fisubl
pop
movsb
fbstp
sub
fimuls
sti
pop
pop
or
in
push
lea
dec
mov
and
adc
imul
roll
pop
sbb
cwtl
xchg
leave
fistpll
mov
fdivrl
jp
insb
cwtl
and
test
imul
xor
addr16
fisubl
pop
sub
xchg
idivb
inc
sub
fs
cmp
mov
in
add
std
dec
out
stos
jp
in
mov
pushl
add
ds
stc
ror
sub
out
add
pop
add
add
mov
mov
ret
cmp
dec
lods
test
pushf
sbb
aas
cli
stc
xor
cmp
mov
popa
inc
iret
mov
push
sahf
pusha
fwait
adc
sti
sahf
data16
addr16
push
sbb
stos
sub
insb
mov
ja
jno
mov
dec
mov
jb
sub
xorb
mov
mov
test
pop
sbb
jp
insl
arpl
cmp
inc
lahf
and
pusha
pop
jns
ret
out
adc
dec
pop
fistpll
shlb
push
test
icebp
dec
mov
mov
and
in
xor
pop
cmp
cmp
fidivrs
jb
mov
shr
scas
cmpsb
insl
out
imul
mov
negl
in
jb
mov
out
inc
jge
mov
clc
test
ja
jg
mov
cmpl
mov
out
mov
fmuls
outsl
fnsave
add
add
lcall
frstor
push
and
pop
add
add
pop
movsb
movsl
adc
imul
mov
scas
scas
pop
mov
or
dec
cld
mov
xlat
or
inc
stos
dec
inc
test
pop
dec
add
in
les
sarl
jl
imul
mov
push
push
sti
sub
mov
jne
jne
lock
sub
dec
dec
mov
and
sbb
jmp
pop
dec
cmp
xchg
push
jno
dec
int3
fmuls
sub
pusha
rcl
ss
pop
dec
pop
inc
aad
roll
cld
repnz
adc
jl
lret
pop
insl
xor
iret
lods
data16
lret
pop
jb
int
test
insb
nop
fisubrs
xchg
inc
lcall
lea
xor
rorb
cs
cmp
mov
mov
cltd
xchg
xchg
lret
mov
ret
or
aam
loopne
mov
pop
ljmp
pop
cmp
mul
pop
pop
add
xchg
ja
push
jg
xchg
mov
cmp
add
add
add
sbb
push
hlt
fs
rcll
outsl
ss
inc
push
bound
jmp
test
mov
jg
faddl
out
test
cltd
enter
mov
test
lcall
scas
rcrl
cmp
xor
cmpsb
cmp
cwtl
jp
cmp
shrb
lret
in
je
mov
jae
mov
mov
je
fwait
pop
add
xor
popa
jno
jnp
mov
or
pop
adc
lods
mov
es
jo
das
sbb
fcoml
lods
pop
mov
and
outsl
in
push
ss
or
cmpsl
addr16
hlt
lods
addr16
sbb
pop
cs
sti
in
and
ss
push
mov
call
into
adc
imul
sbb
add
push
dec
dec
insl
dec
and
mov
mov
mov
cltd
sub
aam
jmp
inc
jno
add
int
out
out
imul
aas
cld
push
inc
filds
mov
xlat
add
pop
add
add
test
cmpsb
jge
imul
arpl
psubsb
imul
movsl
adc
and
sub
mov
sbb
je
ljmp
loopne
into
outsl
mov
inc
lahf
lcall
je
cmp
jecxz
mov
insb
dec
add
xchg
in
xchg
hlt
pop
inc
into
addb
or
gs
jo
or
push
movsb
or
out
adc
iret
cmp
and
jecxz
sub
lahf
mov
xchg
ss
pop
push
mov
add
jno
out
pop
fimull
test
int3
add
fs
mov
cmc
cs
arpl
dec
xchg
or
incb
or
and
sbb
adc
lock
shlw
cs
cmp
js
jns
out
fldcw
push
adc
xchg
sbb
flds
add
add
add
jnp
mov
in
push
outsl
xrelease
inc
push
pop
add
fisttpll
in
jb
fmul
mov
sub
cs
and
jp
int3
inc
mov
sbbb
and
arpl
or
int3
dec
int3
rcrl
popa
lcall
mov
or
cmp
sub
lahf
pop
jle
pusha
mov
cmp
lahf
xor
orb
mov
push
xchg
test
dec
rorl
jecxz
pop
mov
or
stos
mov
sub
pop
push
sbb
jb
inc
sbb
cmc
mov
das
mov
ss
pop
movsb
push
jmp
leave
ficomps
inc
leave
mov
lds
xchg
xlat
jmp
insl
sub
les
add
jns
cmp
xchg
arpl
or
mov
inc
mov
adc
ror
lods
outsl
lods
add
movl
and
pop
std
lock
add
add
sbb
sahf
cmc
fsubrp
jnp
push
xor
fiaddl
add
add
add
popa
in
xlat
cmp
or
push
mov
pop
loopne
mov
xlat
xor
xor
adc
popa
inc
jmp
fisttpl
inc
les
insb
pop
enter
arpl
scas
jo
pop
and
add
sub
fstps
mov
jmp
cmp
sub
cmp
add
xchg
xchg
mov
loop
or
loop
jnp
push
mov
or
lods
adc
jbe
cmc
inc
push
jb
pop
fwait
push
and
push
das
mov
fwait
sti
jg
sahf
outsl
js
cmp
xchg
std
cmp
insb
mov
cmp
mov
push
push
rcr
iret
lret
shrl
mov
bound
pop
icebp
into
and
roll
adc
repnz
sub
xlat
mov
mull
and
shl
test
adc
test
add
jle
jg
std
fisttpl
inc
push
mov
add
adc
add
pop
add
add
cmp
mov
mov
or
mov
aam
cwtl
sub
push
mov
loope
xchg
bound
sub
push
loop
cli
or
mov
call
lahf
mov
cld
negl
or
mov
lret
push
sbb
movsb
dec
jle
imul
dec
mov
dec
jge
fdivrp
lcall
cmpsl
cs
xor
jmp
gs
lock
rorb
inc
jo
dec
rcrb
imul
sbb
sbb
pop
je
inc
pop
mov
sbb
pop
sbb
dec
dec
pop
rcrb
push
xorb
scas
dec
and
mov
loopne
mov
lcall
jnp
es
push
xchg
leave
sub
in
push
fcmovbe
push
nop
pushf
cltd
scas
aad
testb
cmc
test
and
test
dec
int3
lock
cmp
dec
aad
jno
dec
int
cmpsl
mov
add
add
mov
sti
idiv
lods
push
mov
add
pop
faddl
add
add
add
ljmp
sub
jecxz
push
repnz
insl
outsb
mov
cmp
sub
out
out
sub
movsb
and
mov
inc
or
aaa
jl
arpl
aam
cs
pop
aad
insl
mov
jl
cmp
push
pop
cmpsl
fmul
ret
inc
mov
out
inc
in
mov
jbe
jge
mov
or
ljmp
lcall
jnp
nop
fnsave
mov
xchg
or
pop
xchg
jp
and
das
fwait
mov
int3
into
mov
subl
mov
movsl
js
jne
xor
cs
lods
xor
pop
mov
negl
add
sti
jne
push
fiadds
add
repnz
and
hlt
sahf
addb
mov
shll
pop
push
push
test
inc
test
cmp
insb
cmpsb
sbb
lcall
add
adc
leave
jmp
addr16
in
fisttpll
push
fldl
add
add
add
sub
mov
sbb
lock
outsb
pop
xchg
pusha
mov
and
or
jbe
pop
subb
stc
in
loopne
jo
push
shll
movsl
push
mov
pop
sbb
lret
sbb
ds
test
adc
sbb
out
push
sti
icebp
mov
sub
fdivp
pop
leave
jl
xchg
je
int3
das
andb
sub
xchg
adc
push
mov
scas
mov
icebp
lds
call
aaa
in
rorb
int
sarl
ljmp
ljmp
adc
cmc
cmp
jnp
popa
mov
sbb
fcmovnb
scas
xchg
daa
std
adc
jmp
or
and
mov
icebp
cmpsb
jno
sysenter
into
mov
iret
lea
xlat
testb
fistps
std
xchg
loopne
push
xchg
std
or
shlb
jecxz
ds
das
lret
daa
push
lea
gs
outsb
adc
jp
add
and
jg
mov
add
push
out
jb
shrl
and
add
add
dec
inc
mov
xchg
mov
sarl
flds
push
fwait
mov
aad
mov
cmp
aam
xor
out
es
mov
inc
in
adc
xor
pushf
jp
pop
in
mov
add
outsl
ror
dec
cli
sbb
jno
fildl
push
push
mov
roll
mov
and
jb
or
test
push
daa
and
test
cmc
mov
bound
jne
or
fcoms
jnp
and
cmpl
pop
add
lods
lret
jl
pop
int3
add
mov
push
cmp
mov
cwtl
fwait
mov
movsl
jecxz
das
popf
sbb
pop
mov
sarb
inc
jge
or
pushf
inc
xchg
add
cli
fimull
or
in
adc
inc
xchg
mov
jbe
cmp
pop
dec
pop
or
mov
ss
cmpb
dec
test
xchg
out
add
mov
lcall
iret
mov
stc
out
fs
pop
add
add
xchg
xchg
mov
addr16
cmp
stos
push
cmpsb
mov
sub
mov
sbb
cmp
cli
gs
sub
pop
mov
insl
xchg
and
out
pusha
fcompl
fbld
mov
sbbb
icebp
inc
loope
scas
stos
inc
mov
std
and
cmp
jl
imul
ja
outsl
mov
mov
cmpsl
adc
mov
jg
push
imul
xor
lods
sbb
dec
cmpsb
sub
jle
insl
add
sarl
dec
mov
dec
xchg
pop
lds
lods
pop
mov
sbb
divl
fcmove
dec
ljmp
push
or
jo
pop
mov
and
imul
fsub
lret
pop
cli
and
in
mov
and
in
int3
cmc
pop
mov
mov
xchg
push
jo
int
pop
andl
scas
add
fcmovnb
or
add
sbb
jns
in
mov
loopne
add
add
add
lock
xchg
decl
gs
xchg
push
ja
push
fisttpl
push
ljmp
push
outsl
or
jle
cmp
jnp
inc
in
out
fimuls
push
in
adc
jno
dec
cmp
outsb
add
aam
push
xchg
pop
gs
dec
xor
xchg
test
pop
lahf
daa
xchg
mov
aas
mov
adc
mov
mov
jmp
into
fimull
enter
lods
cmp
pop
adc
stos
xchg
push
pop
les
push
loopne
das
dec
pop
pusha
jnp
pusha
test
adc
sub
xchg
clc
inc
int
mov
aad
push
jge
data16
pop
xchg
clc
sub
cltd
test
das
lods
jne
adc
cmp
cltd
movsl
and
movsl
std
stos
sub
scas
sbb
dec
icebp
dec
push
add
loopne
sub
sahf
jmp
adc
cli
leave
pop
mov
adc
or
jb
adc
jae
fadd
fsubp
jnp
mov
scas
inc
cmp
add
pop
add
add
es
shr
in
inc
and
loopne
jnp
leave
test
mov
jo
xchg
orl
cltd
push
xchg
insl
jl
test
bound
icebp
int3
jl
xchg
jnp
and
xor
insl
jb,pt
mov
mov
push
xor
jno
mov
dec
pop
cli
mov
out
jmp
aas
cld
pop
insl
notl
jno
and
movl
rorl
adc
popf
and
stc
hlt
pop
mov
pop
pop
inc
testl
in
into
repnz
mov
shl
scas
dec
mov
or
cmpsb
data16
jnp
mov
dec
loope
movsl
xchg
in
pop
xor
xor
ficomps
sahf
sbb
sahf
icebp
push
cmp
imul
fsts
dec
or
pusha
in
stc
cmp
iret
fimull
repnz
push
xchg
cmp
xchg
pop
sbb
push
test
push
cltd
inc
out
fists
bound
test
ljmp
add
add
sub
cld
cli
jle
fmuls
mov
loop
add
add
add
lahf
cmpl
testl
sub
addr16
xor
mov
or
bound
aaa
cmpsb
mov
cwtl
icebp
xor
adc
mov
jbe
daa
push
mov
sub
notl
inc
jmp
mov
fs
faddp
xchg
jo
inc
lea
sub
outsl
sbb
push
mov
fwait
ret
or
inc
fisttpl
outsb
sub
jge
mov
xchg
dec
cltd
pop
icebp
out
rclb
enter
pop
popa
aas
hlt
or
push
movsb
js
jno
dec
fisttpll
in
shll
aam
addr16
push
in
and
test
xorl
hlt
je
xchg
ja
mov
shrl
lods
pop
push
jle
add
push
ja
push
stos
pop
clc
shrb
sbb
aad
adc
rcrb
add
ja
sti
ret
or
pop
std
jno
testb
add
add
add
xor
and
inc
ss
loop
jns
int3
movsb
xchg
jle
mov
sub
and
pop
jmp
loop
or
mov
jo
stos
xchg
and
jno
stos
roll
jns
mov
iret
cmpl
addr16
add
fs
sub
es
jnp
add
mov
push
cmp
add
ret
aam
xlat
push
mov
xor
cmpsb
cli
mov
xor
cld
lret
xchg
divb
addr16
mov
cmpsb
loope
or
jbe
dec
sub
dec
shlb
stos
add
or
mov
and
popa
loop
add
sbbb
sub
iret
imul
popl
xchg
dec
mov
adc
mov
mov
and
shlb
mov
jmp
hlt
dec
push
mov
cmp
stos
dec
jg
roll
add
add
into
arpl
cmp
daa
dec
in
add
add
add
cmpsb
push
cmp
push
or
xor
movsl
pop
stos
sub
lods
shl
xor
imulb
jg
sub
aaa
clc
jnp
mov
negb
loop
icebp
cld
pop
xchg
mov
outsb
cmp
sbb
bound
xor
xchg
xlat
fsts
test
pop
xor
std
and
mov
xchg
pop
pop
pop
sahf
push
out
pop
addr16
out
call
in
dec
jl
lahf
arpl
jl
jo
loopne
mov
xor
scas
mov
std
or
add
test
fisubrs
mov
jle
sub
iret
or
dec
sub
test
or
pop
cmpsl
bound
push
push
jnp
stc
clc
test
mov
or
fldcw
aad
pop
pop
pop
arpl
cld
mov
mov
adc
add
loope
lret
aaa
popf
addr16
sub
push
push
add
ja
incl
add
pop
push
in
add
add
add
fptan
popf
mov
xchg
sub
adc
fstpt
add
cmp
adc
fdiv
cmp
inc
ja
or
mov
in
hlt
mov
dec
arpl
pop
cmp
pop
enter
in
push
and
jp,pn
or
out
adcl
test
add
and
pop
push
adc
push
jge
or
sbb
push
sbb
aas
popf
addb
jg
or
cmp
or
push
int
dec
fdivr
roll
das
xchg
cmp
test
loopne
sahf
pusha
or
mov
jnp
dec
int
cmpsl
out
repz
leave
mov
mov
ret
leave
cmp
mov
pusha
div
icebp
adc
negl
mov
in
pop
cmp
ja
mov
ljmp
std
int
sub
xor
mov
add
add
lock
jg
mov
push
imul
add
je
aam
mov
scas
aam
sub
testb
pushl
outsl
arpl
gs
in
or
pop
and
inc
xor
xchg
enter
xchg
leave
addr16
xor
inc
fprem
call
aad
cmp
std
push
xor
and
cmp
jno
sub
iret
out
pop
sbbb
insl
sbb
stos
or
jle
and
mov
xchg
adc
jl
arpl
jne
xchg
frstor
cmpl
and
sub
rorl
sbb
shrl
cbtw
ljmp
dec
xor
sub
cmpsl
cmovs
lahf
out
stos
push
imul
sub
ret
inc
test
dec
inc
push
xlat
push
inc
dec
mov
sub
and
cmp
test
mov
push
mov
or
div
movsb
sbb
mov
mov
sbb
stc
sti
add
pop
xlat
fldt
push
jg
out
add
add
add
sti
sub
xorl
arpl
icebp
std
sbb
lahf
sbb
ret
addr16
cld
push
fiadds
addb
addr16
mov
mov
cmpsb
pop
xchg
or
jp
out
bswap
bound
das
lea
gs
pop
les
inc
andl
into
add
jge
mov
fstl
jnp
ret
mov
lret
sub
mov
pop
jo
add
ffreep
nop
jle
inc
dec
dec
mov
inc
xchg
out
push
dec
adc
sub
jecxz
cmp
hlt
xchg
je
insb
jne
mov
into
stc
dec
int
sbb
xchg
out
pop
adc
data16
mov
das
insl
ja
push
movsl
dec
sub
ljmp
loopne
inc
xchg
mov
pop
sti
xor
and
sub
sub
jne
sbb
notl
mov
add
mov
dec
js
stc
mov
mov
imul
add
add
add
popf
leave
dec
xchg
jle
testl
mov
push
ljmp
jl
pop
stos
and
mov
repz
mov
shlb
jb
fwait
pop
or
decl
fisubl
adc
inc
ja
dec
daa
ljmp
sub
inc
subl
jb
pop
lret
and
dec
ss
sarb
incb
or
adc
cs
mov
sbb
cld
xor
cli
ja
shll
or
test
cmp
jns
adcl
xchg
xchg
mov
xor
mov
lods
aas
ljmp
xor
aas
stos
inc
jmp
jl
bound
sti
bound
inc
test
xchg
ljmp
add
mov
pop
inc
jnp
mov
sub
xor
std
jns
pusha
sub
aad
setle
jle
jmp
jecxz
push
push
xchg
fsubrl
add
insl
repz
jae
jg
pop
icebp
and
add
pop
add
add
andb
or
lahf
out
push
jg
mov
pop
mov
shr
pop
out
xlat
mov
mov
or
dec
repz
movsl
leave
lcall
jle
movsb
rcrl
stos
jno
fbld
loopne
ss
adc
fistps
push
xor
pusha
dec
test
jo
mov
sub
xchg
mov
sbb
jo
icebp
ret
cmc
xchg
xchg
jp
vpshlb
push
outsb
loopne
sbb
adc
push
sub
popa
pop
jmp
ror
pop
cli
sub
rcl
scas
or
mov
enter
inc
xchg
pusha
sahf
push
dec
cli
jg
imul
cmc
jg
inc
xchg
and
add
pop
sahf
add
popa
lret
xchg
mov
arpl
sbb
xor
xchg
cmp
fstpl
in
mov
imul
mov
sub
or
push
ljmp
cmp
jnp
es
and
add
add
add
jle
mov
xchg
mov
int
jmp
pop
rcrl
adc
mov
and
xor
add
clc
sub
stc
push
adc
fstp
out
dec
daa
fwait
leave
xor
push
fcmovbe
xchg
inc
mov
sub
push
outsb
and
adc
mov
mov
push
xchg
or
lock
push
and
in
cmp
jb
cmovns
ficomps
inc
mov
rcl
out
or
jmp
mov
xchg
out
mov
add
mov
sub
add
dec
cmp
pop
jge,pt
lock
int
push
test
into
cmpsl
sbb
mov
aas
icebp
insb
mov
enter
in
mov
add
pop
daa
push
pop
fscale
jl
fisttpl
cwtl
add
push
rcr
lods
dec
js
jo
add
jmp
cmp
add
repz
ds
add
out
lods
xor
aas
xlat
jns
mov
movb
add
imul
xor
and
pop
popf
adc
xlat
hlt
out
jno
lret
mov
dec
xchg
les
js
mov
ss
adc
imul
int3
incl
fcomip
in
outsb
sbb
movsl
es
jg
jae
push
add
aas
jae
cli
ds
cmc
cmp
pop
inc
xchg
sub
insl
push
mov
xor
mov
dec
pop
dec
add
into
xchg
and
movsb
sub
aas
adc
jecxz
mov
rorb
sbb
loop
sub
or
dec
sbb
add
push
sub
test
shl
cmp
sbb
clc
sub
test
xchg
adc
arpl
lcall
inc
in
lret
and
cmp
sub
adc
cmc
imul
out
mov
sub
cmp
test
mov
mov
mov
add
add
jb
scas
incb
out
dec
out
or
jns
in
add
pop
add
add
push
loope
mov
lret
or
dec
pop
inc
das
aaa
js
pop
inc
je
push
xorl
scas
dec
xor
cwtl
pop
jle
fsubrs
mov
inc
and
daa
pop
pop
mov
dec
inc
push
jge
cmpsl
mov
fldcw
in
or
sub
mov
scas
test
adc
sbb
adc
out
inc
fiaddl
jnp
pop
mov
sbb
pop
cmp
adc
inc
rclb
or
jns
push
in
inc
cld
jae
jne
pop
fs
ljmp
add
call
cltd
dec
subl
sbb
xchg
inc
sti
lea
hlt
addr16
sbb
cmp
xchg
cmp
add
sahf
insl
sub
out
xchg
push
repz
aam
lret
sub
jge
inc
lods
rorb
push
push
dec
and
xor
mov
rcr
rcll
sbb
dec
mov
add
xlat
mov
movb
add
pop
add
add
adcb
imul
mov
and
scas
es
xor
aas
sub
xchg
popa
movsb
push
or
mov
pop
dec
and
fxch
cmpsl
jnp
aam
and
adc
repnz
push
dec
ss
rcr
sbb
mov
icebp
out
jp
mov
mov
data16
mov
pop
xchg
push
lods
lock
lret
sbb
add
push
and
fdiv
adc
sub
xchg
push
cmp
jge
ds
adc
mov
sbb
loop
xor
push
movsl
xchg
fnstcw
push
jb
js
aam
jns
pop
nop
xchg
mov
cwtl
mov
sbb
arpl
xchg
fsubs
lods
push
jl
data16
fs
mov
fs
data16
jmp
pushf
xor
dec
outsb
les
xchg
fwait
mov
idiv
cmc
push
sbb
scas
out
sbb
es
cld
imul
movb
faddl
lods
cmp
lods
aas
mov
mov
hlt
xchg
out
add
pop
add
add
cwtl
cli
rcll
jg
sub
popa
dec
pop
shrl
push
mov
cmp
aam
sahf
mov
cwtl
out
jle
mov
out
jmp
pop
pushf
js
ds
xchg
push
push
push
adc
dec
lods
pop
movsl
sahf
or
fwait
push
roll
jb
repz
shlb
dec
ret
ffree
fistpl
mov
iret
xchg
lods
clc
hlt
sub
xchg
dec
filds
inc
jmp
out
pop
jb
and
aas
jne
pop
jle
sub
inc
shlb
or
je
fcomip
test
sub
daa
sarl
mov
nop
or
mov
inc
shll
add
mov
loopne
outsb
cwtl
xchg
mov
jecxz
pop
addr16
insb
and
sarl
mov
insl
sub
lret
into
inc
mov
lods
jae
cwtl
lods
cld
cwtl
pushf
leave
fs
scas
xor
xchg
sahf
add
mov
sti
mov
loop
mov
pop
add
add
push
mov
mov
jp
push
jbe
sbb
lds
adc
dec
aam
xor
sub
insb
jge
lock
mov
negl
leave
sbb
pop
and
pminsw
clc
popf
mov
jmp
out
mov
test
pushf
int
xchg
sub
lret
push
in
test
pop
imul
mov
inc
rorl
mov
cmp
dec
mov
enter
cmp
push
fnstenv
out
fldenv
aam
and
cmp
push
sbb
dec
aad
mov
test
lods
jno
fnstenv
mov
pop
xchg
insl
pusha
mov
pushf
mov
sub
sub
ret
mov
mov
mov
sbb
loope
jge
push
cmp
xor
xchg
push
aas
pop
adc
push
cmp
adc
neg
jge
mov
stc
insl
repnz
pop
add
add
or
out
mov
mov
pop
mov
and
ret
adc
aad
inc
movl
negb
sub
pop
xchg
push
jno
jno
or
sub
icebp
sbb
fsts
sub
jmp
shlw
xchg
jno
pop
mov
repnz
xchg
nop
das
stc
mov
shll
shll
es
or
orb
xchg
push
push
xor
mov
adc
ret
in
inc
mov
in
jnp
ja
out
popf
jmp
out
jle
mov
aaa
jno
daa
adcl
pushl
or
lea
nop
adc
jbe
jmp
sub
in
xchg
int3
push
cmpsl
dec
and
pop
int3
mov
mov
sub
dec
pushf
ja
test
dec
das
shrl
mov
gs
mov
pop
cmp
outsl
jg
jg
xor
mov
icebp
add
pop
add
add
jmp
mov
lret
mov
and
adc
sar
pop
sti
xchg
dec
test
das
and
jbe
or
push
sbb
sub
mov
pop
push
sbb
stos
pusha
sarb
pop
das
arpl
xchg
in
and
sub
lods
leave
adc
sbb
mov
or
cmc
dec
mov
jl
jns
xor
or
and
jb
pop
push
test
int3
xchg
dec
add
push
dec
push
pop
call
mov
lds
rorl
insb
adc
outsl
and
dec
into
or
lods
push
cmp
insl
pop
enter
pop
xor
ja
and
add
inc
rorl
fprem
and
fadds
repz
in
mov
and
mov
loop
out
dec
cmp
dec
sti
jb
mov
dec
cwtl
sub
ret
ja
and
aaa
divl
in
imul
add
jnp
in
test
mov
fs
xchg
add
in
dec
lods
out
dec
jne
std
push
shrl
imul
jne
add
mov
fstpt
mov
stos
sbb
lret
xchg
dec
push
mov
adc
or
rcrb
pop
bound
in
inc
mov
lret
push
or
mov
dec
inc
dec
mov
mov
iret
add
mov
mov
sbb
fwait
cwtl
iret
push
aam
mov
mov
test
push
dec
adc
mov
dec
pop
in
hlt
mov
imul
push
les
mov
out
inc
iret
xor
sub
xchg
mov
ds
xchg
les
je
jecxz
out
cmpsb
lods
jb
sbb
jg
cmp
push
std
lods
xor
stc
jle
xchg
xor
adc
lock
int
mov
addl
jmp
sub
xor
jo
shll
inc
adc
insb
add
mov
cmc
mov
dec
xchg
incl
repz
pop
add
add
xor
sahf
stos
dec
jno
or
pop
repz
dec
fcmovnu
je
push
lods
push
push
les
dec
dec
add
sbb
and
xor
jne
popa
rsm
fmull
or
inc
lods
repz
xlat
mov
sbb
arpl
bound
stos
inc
lods
mov
dec
inc
add
pop
mov
and
adc
addl
jbe
inc
push
int
push
inc
inc
pop
push
mov
sbb
pop
out
out
aas
adc
xor
pop
out
pop
shl
pop
sub
jb
test
mov
jbe
mov
add
pop
je
adc
lods
mov
xor
dec
js
dec
das
scas
ds
xor
xchg
mov
cmpsb
sub
inc
mov
shll
dec
cli
and
fadd
add
push
outsl
imul
leave
mov
int
add
test
inc
mov
inc
mov
testl
jle
jne
add
sbb
mov
add
add
lock
mov
jo
aam
mov
fildl
pop
int
shl
and
mov
mov
nop
aaa
stc
lcall
je
lahf
aad
repz
inc
loopne
shlb
cltd
ret
pop
dec
mov
adc
push
xor
push
pop
sbb
daa
stos
inc
dec
stos
pop
push
popf
or
sub
clc
lahf
fs
mov
stc
ss
pop
inc
xchg
cmp
fldt
rolb
mov
nop
das
les
mov
jns
pop
ds
fcoml
mov
data16
jnp
bound
iret
add
sub
inc
adc
das
bound
or
rol
dec
and
sub
loop
cmp
scas
mov
inc
lret
cmp
pop
mov
data16
push
or
push
pusha
sarl
xchg
int3
out
test
jmp
in
popl
int
out
mov
add
add
imulb
idivb
xchg
dec
repnz
cmc
add
pop
add
add
daa
mov
adc
nop
aas
push
mov
fs
ficoms
sub
pop
vshufpd
mov
roll
cmp
aas
adc
mov
ffreep
pop
xor
cmpsb
in
add
hlt
add
adc
and
adc
std
imul
cmp
mov
lds
hlt
adc
cwtl
cmp
cwtl
or
lret
dec
arpl
adc
cmp
dec
and
lock
mov
jnp
add
and
enter
inc
dec
inc
stc
jne
int
push
xor
jecxz
stos
mov
ja
mov
inc
aad
mov
cmc
ret
inc
mov
pop
jg
repz
dec
adc
loop
aaa
cmc
xchg
adc
xchg
int3
xchg
scas
push
dec
xchg
fbstp
or
fsubrl
mov
jae
push
imul
add
add
xor
sub
and
int
add
pop
add
add
rcl
jae
jmp
fs
inc
adcl
adc
dec
scas
test
or
sbb
xchg
sbb
inc
lock
enter
arpl
sbb
test
loopne
push
mov
or
jne
mov
cmp
fisttpll
aad
repz
jmp
push
jns
ds
aad
mov
imul
or
dec
pop
mov
add
mov
cmp
add
mov
sbb
jnp
mov
dec
loop
movsl
icebp
adc
mov
js
pusha
add
mov
mov
xor
test
mov
cld
enter
in
les
xor
stos
in
mov
out
dec
mov
xchg
andl
sbb
mov
negl
gs
rcl
mov
inc
dec
xchg
or
cmp
mov
dec
or
fidivs
cs
leave
push
es
xorb
add
adc
int
in
idivl
call
sbb
mov
add
add
add
jns
in
lock
mov
xor
frstor
xor
mov
ja
mov
jbe
cmp
sarl
lret
xchg
incl
imul
dec
scas
adc
mov
outsl
push
xor
fs
adc
mov
cli
mov
outsl
out
xor
inc
inc
and
mov
mov
cmp
mov
gs
and
sbb
mov
add
fs
ret
inc
scas
xor
fdivrl
jl
lret
and
inc
xchg
jge
sti
test
out
repz
out
pop
in
and
xorb
mov
in
rclb
xchg
jecxz
cwtl
icebp
jae
lods
div
ds
or
or
stos
les
adc
push
mov
push
test
xchg
cmp
xchg
or
or
popa
or
mov
push
mov
add
jecxz
inc
cli
aas
clc
fdiv
jne
push
ret
clc
add
pop
add
add
pop
les
sahf
xor
out
loopne
jno
fstpl
ljmp
rcrl
jecxz
insb
lods
ret
pop
inc
or
add
dec
push
xchg
push
push
pop
cmpsb
jge
insb
mov
jl
adc
mov
or
sub
ret
lea
adc
cmpsb
mov
mov
cmc
jmp
and
scas
ret
cmpsb
repz
and
dec
jbe
lods
jb
rcll
lcall
adc
into
xchg
movsb
jge
cmc
das
inc
push
in
mov
bound
push
add
adc
scas
xchg
pop
xlat
rcrb
call
je
sbb
dec
add
imulb
in
rolb
or
inc
icebp
or
dec
push
adc
and
cltd
scas
pop
movsl
cmp
adcl
ljmp
sub
and
or
loop
add
add
mov
lcall
test
add
pop
add
add
xlat
xor
push
test
pop
mov
outsl
inc
sbb
add
mov
aas
aaa
daa
in
and
test
jmp
mov
ror
cmp
mov
out
sub
xor
aaa
cli
fiaddl
and
cwtl
and
scas
mov
xchg
sub
fs
jo
push
mov
mov
xchg
push
push
int3
pop
repz
push
sbb
push
mov
or
lods
fdivs
mov
inc
sub
pop
or
inc
scas
pop
pop
aas
push
mov
push
mov
mov
adc
pop
dec
xor
repnz
fisttpl
out
data16
adc
inc
test
sub
lds
add
shlb
dec
adc
filds
jl
and
or
sbb
mov
xchg
xor
daa
xor
stos
add
ja
push
sub
movsb
mov
mov
and
inc
pop
adc
aaa
jae
cltd
dec
mov
jge
std
adc
cli
add
pop
add
add
pusha
xor
pushl
std
cmp
mov
dec
pop
push
push
inc
arpl
jbe
sbb
das
or
push
je
mov
pop
pop
sbbl
add
sti
mov
std
loope
test
adc
sub
xor
dec
mov
pop
pop
dec
outsb
je
fwait
add
mov
test
jae
dec
daa
xor
nopl
mov
xor
push
cmp
loop
call
popf
std
out
aas
lds
out
outsl
pop
mov
pop
xor
popf
pop
xchg
cmp
hlt
shlb
or
pop
aas
jg
and
xor
cmp
ret
cmp
mov
xchg
or
mov
push
mov
cli
pop
cmp
sti
pop
push
test
pop
sub
jae
sbb
mov
test
leave
push
stc
mov
out
push
add
push
into
nop
out
cwtl
jle
pop
or
stc
mov
add
add
add
orb
adc
xor
aad
pop
jl
pushf
dec
mov
loope
adc
sub
push
jb
test
std
scas
insb
arpl
push
jno
xchg
cmp
imul
xor
push
incl
and
cs
ret
mov
dec
mov
adc
fwait
xchg
ror
mov
push
or
pop
cmpsl
inc
mov
iret
lods
fdivl
icebp
pop
xlat
test
lahf
js
sub
inc
les
add
sbb
bound
cwtl
lea
test
cli
pop
stos
repz
jg
in
add
jge
jnp
inc
cs
popa
jns
pop
ret
jns
and
pushf
idiv
dec
enter
pushf
inc
or
xchg
jp
out
push
or
loopw
add
jl
mov
adc
jl
jle
cli
sbb
inc
jg
jno
test
jg
in
jmp
add
sub
idiv
add
pop
add
add
mov
in
icebp
add
sbb
jle
ret
gs
mov
test
xchg
jo
stos
into
or
out
jg
outsb
sbb
imulb
xchg
notb
pop
mov
xor
mov
icebp
lods
call
cmp
push
ljmp
test
test
imulb
and
add
movsl
mov
mov
stc
push
mov
mov
cmp
in
lahf
jmp
pop
lcall
sarb
xor
lods
mov
sbb
mov
orb
mov
leave
inc
sub
pop
mov
xor
adc
in
xor
dec
testl
mov
or
je
cmp
adc
or
psubw
xlat
and
push
jne
fistpl
push
xor
cmpsl
mov
leave
jbe
mov
pusha
sub
int3
fcoml
outsb
insb
xorl
adc
movsb
push
in
cmc
jne
rorl
std
add
pop
add
add
pop
call
push
hlt
push
push
call
mov
in
mov
push
repnz
ret
les
ret
push
push
js
pop
out
or
xor
mov
stc
push
push
sub
mov
sbb
dec
cmp
nop
jae
scas
push
ljmp
add
mov
inc
xchg
pop
mov
or
stc
push
pop
rcll
insb
xchg
jb
adc
xchg
fldt
popa
mov
arpl
add
popf
pop
inc
or
push
lret
sub
and
insb
fs
and
dec
lds
fidivrs
shlb
push
push
and
fistps
push
pop
and
or
sbb
add
les
cltd
mov
sub
mov
mov
adc
or
aad
aad
dec
and
xchg
mov
jne
stos
hlt
push
mov
add
out
shlb
aas
out
sbb
aaa
imul
add
out
leave
push
not
stos
fisubrs
adc
enter
cmp
jmp
xor
xor
clc
and
popl
sub
pop
and
add
fcoml
mov
les
outsb
fnstenv
mov
or
mov
lahf
aam
repnz
movl
pop
jbe
call
adc
in
outsb
hlt
add
out
xor
mov
into
shr
clc
out
outsb
test
xor
outsb
outsl
jbe
arpl
sbb
push
repz
or
out
lods
or
jb
inc
out
push
sbb
pusha
test
es
add
daa
jle
aad
jne
fcomip
imulb
cs
daa
pop
jle
jae
int
cmp
mov
lds
push
lret
mov
inc
jmp
push
xor
lret
mov
ret
movsb
outsl
enter
fcomip
shll
dec
aas
xor
jae
xor
cmp
or
mov
sahf
outsb
mov
add
pop
add
add
clc
xorb
negl
es
shll
mov
inc
or
inc
jbe
sub
test
inc
bound
cli
xchg
out
daa
adc
xchg
ss
push
pop
push
pop
mov
in
fildll
mov
enter
loope
aas
sbb
mov
lret
incl
mov
jmp
loop
lahf
lret
insb
test
incl
xor
icebp
or
and
pop
push
dec
jno
mov
fwait
aas
orl
out
dec
dec
mov
dec
xchg
xor
adc
out
push
mov
in
stos
add
xor
cld
lods
int3
xchg
ja
test
jbe
test
clc
sub
mov
jne
in
arpl
cmpsl
xor
push
icebp
or
push
cmp
fsubr
jp
dec
scas
jecxz
push
ja
pop
stos
test
or
fwait
push
push
mov
jae
xor
add
add
ret
bnd
int3
jae
adc
repz
pop
adc
add
pop
add
add
in
pop
lds
pop
jg
loopne
xchg
test
lcall
in
test
insb
mov
jnp
xor
lret
ja
mulb
in
leave
adcb
in
dec
inc
outsl
into
pop
loopne
repnz
mov
fstpl
setle
mov
adc
aad
or
inc
cmc
sub
inc
dec
outsb
out
jle
push
sbb
add
mov
mov
fistps
sub
out
cltd
test
or
pop
filds
xor
jg
divl
dec
xchg
je
mov
sbb
sbb
pop
pusha
dec
ss
inc
and
dec
pop
mulb
mov
ljmp
ss
cmp
xchg
inc
pop
push
imul
pop
cmp
push
mov
jo
divb
mov
ja,pn
outsl
add
std
aaa
mov
mov
sub
inc
sbb
add
add
add
or
xor
jns
rep
sub
stos
pop
fisubl
mov
das
decl
int3
pop
cmpsb
sti
or
xchg
jb,pt
pop
filds
fdivl
push
shr
rcrl
andb
dec
mov
cs
xor
test
popa
cli
enter
das
ljmp
pusha
mov
xor
cmpsb
xor
in
mov
pop
pusha
ret
sldt
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
xor
inc
add
xor
inc
add
xor
inc
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
mov
jle
adc
inc
jmp
xchg
scas
mov
add
pop
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
