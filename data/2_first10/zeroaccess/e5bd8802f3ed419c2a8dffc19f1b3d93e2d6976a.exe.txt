push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
and
mov
cmp
cs
shll
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
loope
gs
fmuls
push
test
add
les
inc
xchg
repz
or
adc
mov
cmp
xchg
jo
mov
push
pop
xchg
pop
sti
mov
mov
and
fxch
and
jmp
sbb
addl
test
xchg
addr16
mov
mov
mov
lcall
sbb
lahf
mov
fildll
sub
fnstenv
shll
mov
push
mov
imul
adc
pop
inc
pushf
and
xor
cmp
sarb
xchg
popa
fwait
jmp
mov
push
es
xchg
xchg
test
cmpl
icebp
test
jge
mov
lods
testb
jbe
enter
test
insl
add
negl
iret
and
enter
sbb
adc
add
xor
arpl
inc
in
xor
fistps
push
cmp
jmp
sub
mov
in
pop
sbb
xchg
xchg
mov
push
xchg
cld
add
jb
cld
xchg
fnstenv
aaa
lret
xchg
push
and
jae
enter
mov
push
jmp
and
or
inc
adc
lret
sbb
insl
mov
jo
and
jge
cmp
leave
cmpsl
xchg
stc
sbb
scas
mov
xor
sub
xchg
mov
and
jae
lea
fcmovb
fcompl
and
inc
jg
pop
mov
stc
in
inc
pop
je
pop
xor
stos
xlat
push
ret
xchg
cmp
dec
aam
pop
xchg
dec
ror
add
mov
lret
test
inc
lret
inc
xor
push
xor
push
push
mov
mov
pop
mov
cltd
in
sbb
sub
adc
sbb
stos
ljmp
ret
and
inc
outsl
mov
xchg
insl
push
fisubrl
in
ds
loop
cld
mov
cwtl
xchg
push
push
and
sub
repnz
ficompl
mov
icebp
sbb
inc
testl
sahf
jno
repz
xchg
mov
lods
push
mov
sbb
dec
in
pop
push
stos
xor
add
adc
stos
adc
outsb
sub
xchg
cs
mov
imul
loop
adc
lods
cld
int
jg
in
or
add
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
je
sub
aas
out
xchg
mov
rol
sub
pushf
xor
int3
sbb
mov
mov
mov
jne
testb
cmp
nop
cmc
sbb
pop
pop
enter
sub
cmp
adc
mov
adc
jae
popa
jns
ja
pop
outsl
jno
mov
cwtl
repnz
mov
out
cmpsb
test
and
lret
movsl
loope
add
mov
daa
test
data16
pusha
dec
jecxz
outsl
in
jb
dec
leave
mov
push
call
roll
add
ret
mov
pop
fisttpll
pop
gs
sti
mov
imul
add
daa
xchg
pusha
jle
mov
aad
add
mov
scas
adc
pop
xchg
push
sahf
mov
mov
mov
jmp
xchg
dec
jecxz
sahf
inc
and
lds
das
mov
pop
stos
inc
mov
and
pop
mov
fidivrl
fwait
es
sub
adc
nop
lcall
jle
push
scas
cmp
dec
mov
sbbb
lods
sti
sub
adc
sub
inc
repz
xor
enter
xchg
xor
cmp
xchg
je
and
pusha
dec
iret
dec
movsl
hlt
arpl
dec
xlat
pusha
data16
movsb
inc
in
hlt
mov
enter
dec
sbb
push
sbb
fmuls
jle
inc
or
sub
xchg
xor
mov
xlat
cmp
fdivrl
fnstenv
sub
repnz
xchg
leave
punpckldq
pop
and
sub
js
clc
pop
mov
xchg
addl
add
adc
sbb
stc
sub
dec
js
test
sbb
xchg
cmpsl
lds
adc
arpl
pop
sub
test
adc
jl
xchg
xchg
aad
or
in
das
mov
pop
ficoml
pop
vmread
ds
pop
loope
push
add
dec
popf
lods
xchg
add
mov
or
jmp
jb
mov
inc
loope
inc
subl
xchg
mov
loopne
cmc
sbb
mov
xor
jnp
in
xor
lds
popf
outsb
stc
or
popf
in
inc
aam
dec
mov
adc
add
stos
push
add
mov
sub
loope
popf
push
xor
pop
leave
jo
fistl
or
jl
and
filds
and
push
outsl
add
xchg
pop
pusha
mov
and
jnp
cmc
ss
sub
nop
popa
dec
mov
xchg
mov
ret
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
lahf
clc
mov
xchg
xor
dec
idiv
popf
iret
ss
or
adc
or
movsl
lcall
in
inc
fwait
mov
cmp
xchg
aam
aam
push
xchg
pop
test
inc
les
xchg
ss
xchg
pop
push
jmp
orb
cmp
add
jbe
jp
hlt
bound
add
cmc
fcomp
mov
call
mov
sahf
andl
mov
out
outsb
xlat
dec
lahf
jp
fdivr
xor
aad
scas
out
mov
cmpsb
movsb
and
push
nop
shl
push
aam
add
in
jno
and
jge
outsb
inc
movsb
lods
stos
dec
scas
test
outsl
and
pusha
jl
xor
sub
inc
cmpsb
cmp
xor
dec
xchg
cmp
les
dec
js
xor
out
push
cltd
xor
lock
stos
lahf
push
insl
hlt
or
pop
nop
popa
add
cmp
int
add
xor
fs
push
mov
cmp
stos
rcrl
aaa
dec
in
jno
test
outsb
sar
or
mov
ja
inc
js
jb
cmp
lods
test
pop
pop
js
pop
dec
out
lods
dec
mov
addb
repz
scas
xor
jg
movsl
stos
push
sbb
mov
arpl
repnz
and
test
in
inc
loopne
dec
enter
ljmp
testb
loope
and
imul
cmp
scas
push
call
dec
ja
in
adc
mov
loope
add
sub
dec
outsb
orb
fs
mov
test
mov
xchg
xlat
lock
ja
jmp
push
std
aas
and
push
xor
outsl
lret
imul
jbe
add
inc
adc
or
cld
jmp
sbb
pushl
gs
nop
mov
and
shl
and
jno
ljmp
sub
lods
cmpl
push
loopne
adc
imul
aam
jl
inc
sub
or
mov
cmpsl
and
and
jo
sub
in
cmc
add
xchg
jnp
mov
dec
shrb
and
into
add
in
lret
add
jbe
aam
and
sbb
push
adc
lret
jmp
pushf
mov
das
jns
mov
adc
enter
addl
jecxz
jge
and
mov
dec
xchg
pop
out
lret
test
fs
ret
aas
jl
out
cld
jnp
mov
or
xor
sbb
test
in
in
addr16
iret
stos
decl
mov
and
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
fnstcw
adc
sbb
ud2
loope
xor
in
mov
sub
call
insb
push
mov
ss
jne
fiaddl
jns
lods
mov
add
inc
xlat
dec
mov
jns
pop
fwait
or
dec
sub
sub
test
cmp
cmp
and
repnz
or
and
cmpsb
mov
mov
rolb
mov
nop
in
cwtl
fs
push
add
add
aad
incb
mov
js
jae
inc
in
push
push
push
aaa
mov
insb
jecxz
jecxz
fdivrl
js
mov
cltd
sub
jl
and
dec
aam
fdivp
add
leave
hlt
sbbl
lods
fcmovu
notb
je
aas
jbe
dec
xor
notl
mov
cmp
mov
add
jne
cmp
repnz
pushf
jo
das
mov
stos
mov
mov
sub
addr16
fadd
jg
or
mov
or
shll
or
sbb
call
pusha
dec
mov
fs
out
xchg
mov
xchg
aas
xor
pop
lcall
nop
daa
in
mov
scas
je
sbb
scas
lods
jo
sub
imul
dec
mov
mov
stos
rcrl
pop
add
loopne
lret
inc
sub
add
xchg
lret
push
call
shl
dec
add
imul
inc
add
mov
ss
sub
cmp
fisubrs
out
out
add
cmp
jl
or
test
clc
mov
lea
sub
pop
mov
mov
test
ds
out
lcall
or
mov
lods
enter
dec
pop
mov
lret
lcall
daa
jg
jmp
hlt
movsl
lret
jecxz
ficoml
push
and
sbb
jnp
adc
gs
fsubrs
jb
out
sbb
add
test
mov
jge
stos
lock
test
cmp
xchg
int3
lds
movsb
mov
push
or
test
jb
outsb
popa
test
dec
or
bound
shrl
lock
add
lret
mov
sbbl
mov
sahf
daa
lret
ss
loopne
pop
xchg
xlat
jg
dec
daa
scas
out
test
xchg
das
hlt
sbb
pop
xchg
loop
mov
ret
popa
mov
inc
add
push
fcmovnb
inc
ror
mov
and
ds
sbb
scas
rclb
fadd
out
outsl
jl
pushf
mov
aas
fcompl
cmc
xor
add
cld
mov
fnsetpm(287
insl
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
push
mov
sbb
and
sbb
cmp
sub
xorl
mov
test
xchg
jbe
and
cmp
fwait
inc
mov
jecxz
movsb
imul
je
dec
lods
push
popf
sub
out
dec
iret
inc
add
pop
jb
cmp
sbb
int3
int3
fiadds
rorb
sbb
fwait
and
test
push
andl
addb
xchg
cmp
lds
cmc
sub
add
inc
lahf
insl
xchg
mov
dec
das
mov
dec
dec
jecxz
pop
js
push
or
mov
out
mov
sub
pop
lods
mov
push
pop
mov
push
ss
mov
out
out
jl
imul
jl
xor
aad
dec
sub
dec
into
push
xchg
mov
pop
pushf
mov
push
int
callw
inc
xchg
jb
mov
out
cmp
ficompl
mov
xchg
dec
in
rclb
mov
jp
jp
and
xor
into
inc
pop
pop
jns
stos
aas
notl
cld
push
adc
sbb
sub
cmpsl
insb
jae
adc
mov
pop
dec
test
rcrb
mov
shl
xlat
mov
out
fs
fcoml
cmp
jb
mov
pop
push
inc
or
mov
and
xchg
cmpsl
mov
mov
fwait
pop
or
cld
or
lea
lods
adc
out
push
mov
sbb
icebp
xor
push
lds
jp
adc
pop
ljmp
daa
cmp
xchg
push
addb
adc
inc
popf
stos
outsl
jle
dec
fisubl
fwait
std
and
cltd
push
lds
dec
daa
xchg
std
mov
pop
fists
movsl
enter
jmp
loope
push
daa
and
mov
fdivrl
ror
aam
push
xchg
enter
rcl
inc
xlat
cli
mov
inc
inc
lahf
stos
fnstenv
mov
das
lock
popa
push
mov
test
xor
out
stos
pop
fucomi
shl
sarb
push
cltd
xchg
push
in
loopne
out
cld
scas
negl
test
aam
pop
pop
pusha
fildl
sbb
stos
iret
inc
mov
or
jb
mov
dec
test
dec
xchg
jle
idiv
std
mov
mov
jge
push
xor
loope
add
adc
call
addr16
shll
int3
xchg
test
mov
cmp
mov
fldenv
push
nop
imul
hlt
or
lock
push
mov
xchg
sub
cmp
div
and
xor
pusha
pop
shll
sub
mov
push
xchg
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
inc
sarl
adc
sbb
test
jo,pt
rcr
aaa
sbb
mov
jbe
jne
sub
ds
nop
push
iret
dec
imul
xchg
adc
pusha
aas
jbe
jle
clc
int
pop
lds
sub
sbb
adc
sahf
and
out
adc
push
dec
mov
mov
cmc
mov
sub
adc
add
inc
das
dec
test
adc
sub
imul
jp
out
loop
push
xor
fxch
movsb
repz
pushl
test
mov
jmp
cld
inc
or
xchg
mov
out
loopne
mov
jo
sbb
fldl
imul
add
gs
push
or
dec
fsubr
mov
movsl
insb
and
inc
add
dec
scas
addb
cltd
sbb
adc
out
fistpll
das
xchg
hlt
or
mov
mov
mov
leave
popf
ljmp
and
popf
cmc
jo
dec
pop
xor
and
arpl
cmp
cmpb
les
mov
xchg
decl
dec
adc
and
movsl
ja
adc
cmp
into
push
jo
mov
mov
addr16
pop
addr16
dec
lods
fs
sarl
fmuls
mov
jmp
xchg
adc
jae
jmp
pop
cld
cli
lock
lods
js
adc
add
daa
cwtl
dec
push
xchg
jno
mov
mov
or
jbe
out
sub
jnp
mov
shll
xor
arpl
xor
cmp
dec
xor
daa
sub
inc
sbb
insl
push
xor
lods
mov
push
sbb
test
xchg
loop
shrl
mov
or
repz
sbb
push
sub
xor
jo
roll
addl
or
mov
add
int3
xchg
fstp
jmp
outsb
es
ss
jmp
sub
test
and
or
test
add
or
xchg
sub
insb
ret
and
in
adc
addr16
bound
sub
in
xchg
fcom
mov
push
fwait
outsl
popf
cmp
fdivs
ja
or
sub
cltd
je
mov
loop
addr16
out
jl
fdiv
xchg
in
int3
or
adc
ret
std
xor
cmp
pop
repnz
arpl
cmpsl
inc
push
sub
imul
xlat
and
cli
sbb
scas
sbb
inc
dec
sbbl
cmp
inc
jne
aam
shlb
sub
sub
xchg
stos
or
call
fnstsw
loop
movsb
test
fisubl
inc
into
nop
cmp
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
fdivs
dec
negb
sbb
adc
sbb
jno
int
daa
pop
push
outsl
xchg
aam
push
cli
pop
leave
push
addr16
lock
rolb
insl
movsb
out
sbb
les
fimull
gs
sahf
push
xchg
adc
push
inc
jp
xchg
sbb
jnp
test
or
mov
push
lods
gs
sbb
mov
add
pop
and
mov
add
cmp
enter
mov
pop
inc
in
sbb
add
div
or
pop
rcll
jo
lcall
push
xchg
fnstsw
adc
dec
push
mov
stos
loope
mov
pop
push
inc
cmc
push
imul
mov
push
add
xor
ljmp
das
mov
or
das
lods
cmpsb
gs
push
lret
fsubs
outsb
out
cld
dec
out
mov
add
mov
pop
sub
add
lds
xchg
pop
sub
insb
xchg
cwtl
jno
fs
mov
sbb
lds
frstor
mov
push
mov
imul
gs
or
mov
inc
sbb
or
arpl
jle,pt
mov
dec
std
mov
sbb
pop
adcl
iret
clc
sub
jb
movsbl
pop
or
mov
test
popa
shl
jo
lds
shr
lret
loopne
popa
xchg
and
imulb
xor
shlw
orl
mov
aas
icebp
inc
lret
mov
ret
pushf
fwait
or
xor
or
push
xchg
lock
jecxz
mov
pushl
push
and
aaa
les
xor
mov
pop
jmp
cmpsb
cmpsl
cmp
ljmp
mov
int
xor
leave
cmp
cld
mov
sbb
xor
int3
push
fldl
icebp
xor
cli
dec
stos
loop
inc
push
je
pop
aaa
sbbb
jnp
jno
pop
add
jnp
icebp
inc
lea
lock
test
xchg
inc
pushf
test
push
inc
adc
push
stc
xchg
cld
cmc
add
sti
out
imul
or
scas
dec
adc
fidivrs
andl
push
mov
xchg
out
push
imul
xlat
sarl
dec
and
cmp
add
mov
push
rclb
leave
or
mov
and
push
xchg
adc
jp
adc
sub
sbb
cmpsb
xchg
pop
shll
and
xchg
push
xchg
or
or
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
jle
lock
and
sbb
push
in
div
clc
movsl
add
lcall
nop
jp
int3
inc
loop
push
add
sub
fmuls
pop
dec
divb
dec
xlat
sbb
xchg
dec
fsubl
pop
cmp
rcrb
mov
in
xor
out
inc
mov
movsb
xchg
and
adc
or
dec
js
xchg
and
cli
daa
cmp
roll
dec
or
pop
sub
xlat
pop
pop
inc
mov
add
dec
out
test
mov
jp
mov
pushf
std
mov
ret
sarl
jb
fnstenv
scas
sbb
inc
cltd
dec
dec
add
jae
daa
jge
push
sub
sbb
aas
jl
into
mov
fcmovu
xchg
dec
ficomps
dec
lcall
and
mov
mov
xchg
jp
mov
xor
subl
lods
lods
in
movsl
mov
xcrypt-ecb
cmpsl
int3
aas
add
push
mov
in
aaa
mov
xchg
dec
mov
aas
std
mov
fisubs
inc
mov
and
stc
mov
stos
pop
pop
xlat
mov
sbb
mov
sub
sub
xchg
xor
je
cmp
push
push
lods
or
add
add
pop
fsubp
imul
fcmovb
in
inc
add
aas
psllw
outsb
test
ss
data16
std
roll
and
cli
or
xchg
cld
pop
jne
arpl
in
xchg
and
mov
xlat
aam
out
mov
bound
add
sub
adc
fimuls
pusha
loop
shr
sub
cli
dec
es
jb
comiss
fstpt
mov
push
push
lea
and
adc
repz
and
std
cmp
pop
add
sub
jle
movl
sbb
mov
mov
or
int3
mov
mov
jne
scas
sbb
notl
mov
mov
inc
jo
cmp
orl
shrb
pop
mov
ret
inc
shl
inc
jo
mov
adc
mov
insb
out
sub
pop
dec
outsl
lock
xor
push
pop
push
push
mov
jmp
std
pop
cwtl
jmp
dec
nop
cmpsl
xchg
push
mov
xchg
mov
dec
gs
mov
mov
pop
inc
or
mov
push
xchg
sub
stc
jae
icebp
fbstp
mov
mov
fdivr
sti
xor
mov
and
and
xor
push
mov
std
scas
es
sbb
stos
mov
clc
jb
sub
es
insb
lods
movntq
rcr
enter
push
mov
test
mov
ret
imul
lods
enter
add
add
push
push
push
mov
icebp
add
pop
jmp
sbb
adc
sbb
adc
sbbb
mov
dec
cmp
mov
push
loopne
insl
sbb
movsb
xor
testb
jg
adc
mov
pop
cmp
aas
pop
jl
xor
cli
sbb
or
into
or
cli
nop
loop
pop
mov
lss
xchg
rorl
jmp
nopl
hlt
or
add
cmp
jle
or
xchg
xor
ja
push
inc
sti
push
pushf
cmpsl
iret
pop
push
jge
xor
lret
cld
adc
arpl
push
cmpsb
mov
jbe
mov
mov
aaa
adc
cmpsl
sbb
pop
dec
call
cld
adc
aad
in
faddl
mov
xor
outsb
test
push
mov
sahf
xchg
lods
xchg
mov
or
pop
pop
clc
dec
shlb
roll
jmp
mov
subb
cmc
xor
fwait
mov
cmc
lret
std
outsb
fmuls
mov
pop
subl
enter
adc
jae
cwtl
fisttps
ret
push
addr16
inc
xchg
testl
movsl
sbb
lods
mov
or
push
cli
ret
lahf
jb
orps
je
fdivrl
jecxz
call
add
bound
xlat
push
loopne
dec
ficomps
out
xchg
jge
arpl
mov
mov
push
out
adc
out
add
cltd
jmp
in
cmp
mov
test
push
cmc
pop
push
pop
adc
loop
push
or
dec
mov
xchg
inc
mov
xchg
sbb
jno
cmp
mov
test
mov
cmp
sbb
notb
daa
pop
mov
jp
sahf
rolb
pop
push
or
cmp
and
scas
add
cmpsb
or
sbb
sahf
stc
fldcw
cmp
das
js
push
mov
andb
mov
push
mov
pop
sbb
daa
outsb
mov
fnop
enter
lods
sbb
inc
xchg
pop
out
mov
fldln2
ud0
aas
jae
mov
outsb
mov
mov
fisttpl
jecxz
dec
push
notb
adc
and
cmpsb
xchg
orl
dec
pop
push
stos
inc
std
dec
lret
outsl
pop
mov
loopne
roll
in
js
jl
pop
dec
pop
inc
cmpsl
in
call
sarb
int3
inc
fwait
push
jo
mov
sub
roll
push
sbb
out
dec
daa
jne
sub
outsl
mov
xchg
ss
xor
sub
jg
je
test
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cmc
shll
in
sbb
adc
sbb
jo
xor
pop
mov
or
adc
mov
mov
or
jne
xchg
and
and
push
insl
dec
xchg
mov
xor
lahf
jb
stc
xchg
out
int3
sbb
iret
jne
shll
push
or
jo
mov
pop
fwait
jbe
sbb
popa
movsb
jl
sbb
or
cs
push
js
and
mov
aaa
aam
mov
shr
das
pop
ja
cltd
ret
push
push
fcomps
mov
and
mov
cmp
cmp
cmp
scas
cmpsb
xchg
pop
incl
adc
pop
dec
dec
loope
fldz
sub
adc
lea
in
mov
repz
mov
sub
cwtl
ret
push
std
lods
cmp
cltd
xchg
cmp
aam
outsb
pusha
dec
jns
mov
jb
sbb
or
xchg
adc
add
or
adc
xchg
add
mov
mov
add
dec
ljmp
aaa
adc
xchg
jbe
je
inc
incl
mov
inc
push
clc
mov
mov
lahf
push
jne
xchg
lahf
enter
pop
fiaddl
stc
mov
xchg
inc
inc
dec
fs
inc
push
sub
cltd
add
push
or
loope
and
jnp
dec
cmp
test
pop
movb
mov
mov
or
decb
jle
jl
stos
mov
and
mov
mov
in
incl
pop
xlat
adc
add
lods
test
sub
popf
add
push
pop
xor
fbld
mov
push
push
aad
xchg
cmpsb
adcl
and
pop
out
stos
push
pop
sti
aaa
mov
push
dec
mov
sub
and
aas
call
jne
sbb
sbbl
movsl
cwtl
mov
lds
cmp
into
ljmp
xor
cmp
mov
lods
mov
cmpsl
ret
jb
sahf
lods
xchg
add
adc
mov
sahf
pushw
push
std
roll
cmpsb
out
insl
push
sbb
xchg
add
sub
pop
pop
xor
sub
push
pusha
je
mov
mov
or
shlb
mov
push
loop,pn
push
cli
enter
mov
push
sbb
cmp
pop
lea
push
mov
jno
shll
adc
inc
mov
mov
ret
and
or
in
mov
mov
popf
test
jbe
xor
xchg
mov
dec
repnz
jno
jns
aad
cmp
and
popf
stos
lods
jl
jp
fwait
cmc
shl
and
inc
push
lcall
pop
jge
mov
push
push
mov
ret
or
add
add
les
or
pause
adc
fistps
sbb
adc
sbb
out
stc
jno
sbb
ljmp
ds
xor
xchg
ds
data16
outsl
jbe
dec
cmp
out
dec
in
dec
andb
adc
and
mov
sbb
imul
pop
pop
mov
sar
xchg
xchg
xor
loope
adc
test
jno
scas
jl
mov
pop
imul
hlt
push
push
jmp
sub
xor
outsl
xor
scas
adc
mov
shll
xchg
inc
pop
out
aas
xor
dec
xor
and
pushf
fistpl
lret
shlb
jo
pop
sbbb
jl
test
xor
shrb
rorl
dec
adc
xor
rcrl
les
inc
icebp
gs
std
xorb
adc
jno
xor
mov
maxps
bnd
xchg
outsb
mov
into
loope
push
and
xchg
call
cmp
jmp
sti
mov
mov
pop
mov
repz
test
mov
dec
mov
pop
shlb
pop
aaa
and
int
pop
pop
xchg
jno
mov
leave
popa
fistpll
mov
fs
adc
mov
out
loopne
adc
pusha
stos
bound
ja
and
cmp
add
es
add
mov
into
pop
loopne
out
test
dec
test
adc
jl
mov
cmpsl
jmp
pop
jb
sbb
mov
cmc
mov
inc
mov
les
add
int3
call
lea
lcall
sbb
mov
cs
stos
or
xor
mov
fcmovbe
out
mov
sbb
cmp
mov
dec
push
insb
int
add
into
popf
adc
fistpll
jmp
push
push
or
in
lock
mov
je
pop
cltd
mov
pop
rolb
and
push
and
iret
or
push
dec
cmp
lods
bound
fildl
add
mov
das
aad
sbb
inc
adc
xchg
jge
push
mov
clc
cli
sbb
inc
cmp
popf
push
xor
addl
pop
cmp
popa
sub
jmp
stos
inc
in
sbb
shrb
aas
xor
mov
ret
pusha
sbb
or
mov
xor
addl
int
mov
dec
pop
add
adc
cwtl
inc
mov
jnp
inc
sti
pop
out
aad
pop
orb
aad
in
aas
mov
sub
imul
loope
lods
lods
repnz
xor
jp
mov
dec
sub
outsb
and
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
xorb
loopne
lock
sub
insl
icebp
fninit
hlt
push
das
jne
iret
fnstcw
rorb
fs
xchg
ljmp
push
or
outsb
std
aaa
add
pop
ss
mov
adcl
lds
stc
mov
jecxz
dec
out
repnz
push
cs
addr16
adc
jge
mov
test
out
imul
mov
jle
dec
cmp
int3
nop
inc
and
std
js
sbb
insl
mov
xchg
inc
nop
movsl
sbbl
adc
rol
mov
shlb
cwtl
push
testl
add
dec
xor
je
out
std
pop
push
shll
sahf
sbb
out
jb
leave
mov
mov
xor
dec
cwtl
sub
mov
sar
push
in
pop
mov
gs
mov
or
mov
xchg
in
loope
frstor
aas
push
cmp
imul
jge,pt
xchg
adcb
mov
outsl
fstps
xchg
in
inc
mov
inc
fsubs
pop
pop
pop
inc
mov
int3
clc
pushf
or
jae
icebp
push
cmp
inc
sbb
shll
xor
test
pop
out
mov
cmc
mov
test
fwait
test
xchg
sbbb
les
addb
adc
push
add
pop
push
inc
xchg
lods
jnp
mov
jne
cmp
mov
push
outsb
mov
nop
add
lret
sahf
adc
xchg
enter
in
rcl
cmpsl
daa
cmp
inc
popa
xchg
pop
jl
ss
clc
dec
subb
loope
sti
int3
mov
dec
sbb
dec
push
pop
and
jo
lret
sub
or
leave
mov
fisttps
xchg
adc
mov
mov
mov
xchg
rolb
lea
in
test
dec
xchg
or
cmp
jmp
je
jp
mov
cmp
xchg
mov
dec
test
push
mov
insl
lret
xchg
movsl
push
outsl
andl
std
add
and
divl
outsb
aas
pop
inc
mov
push
cld
cli
test
lds
mov
push
js
clc
cmp
fcmovnbe
sbb
pop
adc
cmp
jmp
add
pop
add
adc
stos
xlat
imul
dec
jl
jecxz
aas
push
lock
jmp
xchg
repz
pop
ljmp
inc
sti
out
int
insl
push
fwait
sbb
ret
out
into
mov
xchg
dec
xor
inc
stos
cmp
push
stos
inc
stc
cmp
shlb
jno
pop
mov
xchg
mov
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
int
js
sbb
and
sbb
sbb
pop
aas
mov
dec
in
pop
push
fdivl
jp
lods
dec
stos
daa
enter
shr
pop
add
inc
xchg
inc
cmp
and
cmp
outsl
and
ljmp
mov
cmc
andl
push
nop
rclb
cmp
movsl
cld
std
push
jbe
shll
mov
jecxz
cmp
sbb
jnp
sbb
test
pop
mov
in
cwtl
lret
fisttpll
cmp
push
cmp
mov
in
sub
xor
test
mov
rclb
add
push
sahf
insb
inc
lahf
jl
cmpsb
pop
cmp
daa
xchg
fwait
xchg
icebp
and
xchg
inc
xchg
lods
mov
pop
inc
popa
clc
out
int
ja
jbe
mov
xor
shrb
insl
and
push
imul
mov
in
push
aaa
fmul
and
es
add
test
push
xchg
or
test
adc
rol
sbb
xchg
lahf
call
leave
shlb
cmp
adc
pop
into
dec
fsubrl
sbb
jmp
lcall
shll
push
push
addr16
std
push
arpl
je
test
test
mov
daa
jmp
cmp
mov
les
xchg
decw
aam
or
sbbb
lret
adc
pop
cmp
jnp
je
gs
into
montmul
cmpsb
inc
repz
mov
std
jnp
sarb
jl
xlat
jg
lods
pop
mov
push
xor
popf
mov
das
push
mov
push
jecxz
and
jecxz
aas
mov
sbb
cld
cmp
pusha
pop
jge
pop
adc
xchg
les
jnp
repz
notb
aas
sub
int3
inc
fnstcw
loope
test
adc
pop
inc
inc
loop
insl
push
add
xor
adc
ret
lret
cmp
pusha
insl
mov
icebp
cltd
sub
sarl
in
mov
outsl
mov
push
insl
imul
push
lahf
push
jmp
sbb
jl
cli
jno
popf
dec
popa
pop
push
loopne
pop
adc
xchg
pop
xchg
inc
stos
xchg
sub
or
fisubs
pushl
inc
cltd
jecxz
sbb
aad
push
cld
jb
adc
pop
xchg
fsts
testb
mov
lret
jl
adc
stos
loop
dec
jmp
and
jne
sbb
in
out
test
mov
jno
inc
mov
in
es
dec
jo
push
stos
int3
ds
sub
or
aam
hlt
sub
mov
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
int3
lcall
and
sbb
fs
lea
arpl
push
push
mov
rclb
xor
jae
xor
push
cmpsl
push
sub
aas
inc
cmp
push
lret
ss
adc
scas
mov
push
mov
cmpsb
push
inc
fistpl
ss
xchg
or
inc
bound
xchg
stos
pop
cld
dec
lret
arpl
pop
inc
and
ret
int3
mov
mov
icebp
push
stos
leave
mov
mov
in
push
jae
dec
cmc
mov
shlb
dec
gs
sbb
and
xor
push
sbb
xchg
sti
pusha
adc
mov
les
sbb
fwait
les
orb
push
xor
xlat
loop
loope
mov
scas
ja
and
stos
inc
cmp
sbb
inc
mov
cmc
movsl
xchg
pop
aam
xchg
dec
mov
xor
cmp
cmp
stos
shll
and
into
jecxz
xlat
test
sbb
xchg
lahf
in
cli
out
notb
hlt
std
adc
push
cwtl
scas
sbb
jns
pop
pop
cmp
js
shll
mov
popf
js
jg
fwait
inc
int3
ffreep
jnp
pop
js
mov
jb
pop
xchg
mov
sbb
repz
ljmp
test
jo
sbb
sarb
mov
pop
in
adc
push
aam
jns
adc
in
scas
lret
lea
out
in
or
push
cmp
inc
adc
popf
inc
xor
cmpsl
insl
cmp
fistl
and
cmp
aad
jbe
rcrl
nop
lcall
push
scas
nop
jle
add
fiadds
mov
jg,pn
lahf
and
enter
adc
pop
ret
out
xlat
cs
cs
mov
adc
movsl
xchg
lcall
aaa
push
out
nop
dec
adc
mov
add
xchg
xchg
jno
out
popa
jno
fld
mov
sti
cmp
mov
pop
xor
mov
in
xor
cmc
mov
aad
mov
xchg
scas
jns
xchg
cmpsl
lea
cltd
cwtl
mull
or
pop
jnp
fisubs
stos
lcall
jl
arpl
repnz
jno
mov
mulb
test
fisubs
cli
jno
mov
lods
jmp
sbb
aam
shll
jle
das
test
push
popa
in
mov
aas
cmpsl
and
and
fstpt
lock
xchg
pop
arpl
fwait
push
andb
mov
into
add
mov
push
sti
std
out
xchg
xchg
scas
xchg
imul
ja
sti
lret
jl
pop
pop
fcom
fmul
pop
outsl
mov
in
mov
xchg
adc
cmpsb
mov
outsb
mov
stos
cmp
add
test
inc
adc
inc
cld
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
sbb
adc
sbb
mov
mov
mov
out
lahf
cmp
inc
add
push
mov
insb
push
push
imul
push
int3
inc
jg
jnp
inc
push
and
adc
movsb
outsl
push
mov
test
inc
fs
fcmovne
dec
xlat
into
sub
pop
mov
das
or
cltd
stc
sbb
nop
cmpsl
js
pop
lea
stc
sub
ja
insl
push
mov
adc
and
inc
or
pop
mov
test
cmp
jne
push
xlat
dec
cmp
adc
push
mov
jo
dec
push
lods
jb
push
mov
fnsave
mov
mov
sbb
add
rolb
pop
pop
mov
test
test
cwtl
xchg
pop
dec
sbb
jl
fildll
xorb
mov
mov
jbe
adc
popf
lret
fldl2e
push
mov
jnp
adc
popa
test
mov
lods
mov
repnz
stos
xor
dec
scas
nop
add
cmp
fsubp
adc
loopne
xchg
cmp
sbb
shll
jg
sbb
or
add
or
sub
inc
popa
inc
pop
pop
adc
test
iret
mov
inc
cs
push
cmp
aad
mov
clc
add
aaa
mov
rcll
mov
daa
push
arpl
xchg
sbb
dec
pop
je
jl
jne
mov
pop
rcrb
mov
sbb
push
lret
mov
add
jo
and
sub
test
push
push
out
inc
nop
add
adc
sbb
mov
and
sbb
arpl
fisubs
fwait
imul
mov
jae
jp
daa
jbe
xchg
jae
imull
ds
adc
add
idiv
pop
mov
es
pop
push
jno
jnp
xor
mov
dec
ficompl
cs
cmpsb
movsl
cmp
lods
pop
jnp
mov
cwtl
dec
and
cmp
leave
pop
adc
push
shlb
test
rcrb
or
inc
push
jo
pop
mov
in
cmpsb
mov
outsl
mov
mov
add
adc
cld
cmc
ficoml
sub
push
mov
cmp
int3
fdiv
sbbb
cli
adc
ljmp
push
or
mov
std
pop
in
daa
pop
nop
lods
xchg
or
cs
dec
inc
jno
sub
sub
mov
pop
addr16
fwait
mov
cmp
fwait
inc
dec
mov
inc
mov
or
adc
ss
jbe
sbb
pop
cwtl
mov
repnz
fcmovb
out
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
add
jo
rcrl
and
sbb
scas
in
cs
ret
xchg
mov
cli
and
imul
and
imul
mov
push
xor
mov
adc
ret
fucom
fdivrl
mov
sbb
adc
out
push
insb
fldcw
xchg
jno
lds
mov
xlat
mov
xor
das
jmp
lea
mov
or
adc
addr16
or
and
lods
mov
adc
or
inc
xor
xchg
mov
jg
cmpsb
mov
mov
test
mov
pusha
inc
push
in
popf
xchg
movswl
mov
call
push
lahf
mov
int
loop
jp
sbb
loop
lods
cmc
pusha
mov
stc
fwait
inc
mov
pop
jb
rcll
mov
mov
leave
sub
dec
cmp
mov
lea
push
mov
cli
xchg
insb
out
mov
ja
dec
pmulhw
call
push
ficomps
xchg
or
sub
nop
pop
lods
pop
sub
sbb
xchg
xchg
pop
inc
push
sbb
xchg
add
xchg
scas
pop
cmpl
fisubl
or
shrl
xchg
jl
cwtl
clc
repz
mov
test
arpl
jne
or
fs
shrb
outsl
in
dec
inc
lea
and
xchg
shll
popa
addr16
out
std
ss
jecxz
enter
sub
ljmp
sbb
cmpsb
js
dec
js
scas
test
sub
shll
pop
adc
add
stc
jg
mov
add
ja
dec
cli
inc
cmpsb
and
fwait
push
cmpsl
fadd
rcl
ja
es
mov
cmp
clc
jmp
test
mov
cltd
fcmovnbe
cs
mov
push
cmpsl
jge
inc
jg
rcrb
stc
xlat
sub
or
mov
int
or
scas
pop
jecxz
push
out
jmp
or
xchg
ret
stos
mov
sbb
pop
js
sub
and
pop
or
sub
jnp
fcmove
ret
sub
pushf
fidivs
xor
adc
loope
sub
test
out
imul
and
sub
outsb
push
jo
in
sbb
pop
dec
xor
cmpsl
lds
dec
scas
daa
enter
sub
and
adcb
add
jns
jns
lods
mov
jbe
push
mov
sarl
fisttpll
ficoms
dec
or
xor
mov
aam
aam
inc
sub
cmc
mov
sub
adc
xor
sub
cmp
xor
xor
cmp
adc
repz
mov
jg
ret
and
outsb
pop
dec
in
andl
repnz
add
push
xchg
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
jle
mov
sbb
ljmp
stc
xor
pop
add
bound
jp
adc
nop
test
mov
sbb
shrb
pop
cmpsb
shll
xchg
jbe
cs
les
in
pop
ficompl
adc
int3
popa
pusha
xor
cmp
mov
mov
in
scas
ds
adc
sub
loope
mov
pusha
jge
xor
pop
adc
jae
insl
int
pop
push
iret
into
leave
inc
ds
out
in
scas
addl
inc
push
fsubrs
call
lret
jno
push
hlt
popf
mov
imul
dec
jbe
fs
adc
cltd
in
hlt
das
mov
jae
jp
dec
pop
mov
xchg
sub
lret
push
xchg
inc
xor
nop
mov
fs
jg
cmp
xor
mov
repz
adc
in
mov
or
mov
repz
adc
xor
or
dec
cli
sub
add
cld
inc
dec
inc
sbb
dec
ret
or
leave
xor
into
inc
dec
cld
addr16
arpl
adc
xlat
xchg
push
jmp
xor
js
aam
push
fidivs
adc
not
ss
test
add
jl
andb
inc
out
subl
mov
cltd
pop
out
in
int
lods
divb
setae
push
mov
and
cmp
js
xchg
paddb
cmpsl
lods
pop
leave
xchg
add
jns
sahf
rolb
sahf
cmpsb
jmp
mov
jg
cli
sbb
jnp
jg
pop
into
mov
sbb
mov
dec
sbb
sbbb
mov
xlat
sbb
pushf
or
fsub
jb
or
pop
or
cmp
movsb
xchg
mov
lea
jg
mov
inc
xchg
jge
adc
scas
sbb
xchg
test
pushf
popf
les
mov
movsb
jb
ret
push
in
movsb
and
pop
sbb
cld
xor
pusha
fidivrs
pusha
rep
jno
push
xchg
xor
and
inc
icebp
dec
adc
stos
mov
icebp
inc
cmp
out
insb
cmp
rcrl
fwait
sub
lods
sbb
sti
sahf
iret
lods
ret
mov
push
lahf
jp
inc
jecxz
xchg
pop
cmp
popa
cmc
jae
popa
shl
int
test
das
adc
std
jecxz
out
imul
fistl
aad
add
jnp
mov
rolb
mov
out
out
xchg
dec
les
das
psrld
sbb
mov
daa
push
mov
mov
push
sbb
mov
fildl
into
outsb
xchg
cmp
sub
cld
or
lea
mov
lds
sub
mov
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
cmp
mov
adc
sbb
mov
sub
insl
xlat
jnp
jbe
sbb
scas
dec
adc
or
call
adc
into
sahf
mov
xor
push
jbe
adc
ds
cmp
cli
inc
int
imul
inc
cmp
cmp
pop
jg
mov
inc
mov
xor
add
adcb
mov
loopne
imull
movsb
sub
push
jne
or
xchg
add
sbb
testl
pop
mov
mov
ret
ljmp
incl
mov
jp
dec
mov
popf
roll
fistpl
nop
repz
cmpsl
xchg
gs
stos
mov
adc
iret
ss
mov
out
scas
and
pop
add
aad
push
dec
mov
insb
and
dec
jbe
sbb
sbb
xor
daa
scas
cmp
sbb
jo
or
jecxz
push
jle
notl
imul
iret
pop
in
sub
cmpsl
ficoml
lea
lea
loop
inc
ds
push
inc
sbb
scas
stos
ds
inc
or
mov
movsl
mov
add
dec
rcrl
iret
lods
sti
adc
adc
xchg
inc
and
movsb
cmp
mov
mov
lea
adc
loope
hlt
and
sub
dec
nop
popf
lret
cltd
icebp
sub
scas
test
loope
mov
and
or
int
lret
xor
cltd
shll
push
imul
fistpll
in
cmpsb
decl
and
shlb
iret
push
incb
add
mov
lahf
aas
push
fistps
lods
push
in
or
mov
fs
jb
lock
sti
jb
adc
sahf
jo
movsl
or
adc
xchg
cmpb
dec
and
add
adc
das
addr16
jb
xor
inc
xchg
ret
leave
fld
loope
mov
jnp
xor
xchg
and
jecxz
add
aam
mov
jbe
pop
jle
int3
sarb
lahf
jo
loop
jno
insb
imul
lock
mov
stos
sti
aam
scas
pop
fstpt
cld
pop
insl
inc
out
add
icebp
arpl
adc
fcmovbe
cmc
repz
pop
add
inc
adc
sahf
sbb
xchg
scas
imul
dec
xorb
pop
mov
or
shll
xchg
cmp
sbb
push
mov
notl
mov
pop
sbb
ffreep
cs
xchg
ss
mov
xlat
int
lret
repz
shll
adc
lcall
cmp
mov
xor
push
inc
dec
movsl
sub
dec
xor
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
std
shrl
rclb
or
dec
lock
push
popa
cmc
sub
add
call
jns
pop
movsb
pop
xor
mov
fldl
test
or
std
mov
sbbb
mov
clc
dec
sbb
addr16
mov
push
xchg
pop
pop
push
fcoms
sbb
adc
std
loope
inc
adc
outsb
xchg
pop
imul
sbb
mov
std
fistl
or
lods
or
imul
and
fwait
scas
push
scas
sti
sub
dec
or
push
jle
cmpsb
mov
pop
sub
out
gs
push
cmpsb
xchg
inc
jnp
push
push
repnz
inc
jo
push
mov
xchg
shrl
sub
inc
mov
xchg
dec
inc
xor
jbe
and
add
push
push
nop
mov
push
mov
or
fsubrl
mov
pop
daa
fcom
jbe
addr16
and
adc
movsl
xor
inc
jl
add
and
in
mov
in
sbb
dec
in
rep
jb
lret
cmp
pand
ds
ret
pop
icebp
and
inc
lcall
and
xor
nop
int
pushf
sbb
pop
in
ret
push
xlat
sub
notl
cltd
xchg
mov
push
cmp
lods
xchg
cmpb
cmp
movsb
jp
or
movsl
ds
pop
inc
roll
outsl
pop
mov
push
arpl
pop
repz
test
inc
mov
stos
fdivrs
push
enter
push
and
jmp
push
les
aaa
xlat
xchg
sbbb
aas
xchg
inc
xchg
or
stc
jecxz
sbb
mov
popa
jne
xchg
adc
xchg
lea
addb
jmp
mov
aad
jg
push
pop
mov
pop
adcb
rcl
mov
mov
out
xchg
test
xchg
out
shl
and
sub
mov
jo
ss
adc
pushf
dec
add
inc
and
outsl
or
into
jbe
mov
dec
cmp
lcall
or
add
imull
je
or
sahf
mov
aam
fnstenv
outsl
stc
daa
push
inc
push
std
fisttpll
pop
dec
pop
cmp
pop
stos
add
dec
cli
movsb
push
cmpsb
push
add
adc
jmp
push
cli
data16
mov
sarb
mov
sbb
cltd
cmc
shrb
test
dec
adc
push
xorl
enter
andl
lea
sbb
cmpsl
mov
jp
cltd
movsb
movsb
fsubrl
push
shrl
mov
xor
add
push
out
xchg
cwtl
sbb
mov
push
ret
je
jl
test
adc
adcl
ficomps
shrl
inc
in
push
repnz
pop
adc
fildl
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
iret
mov
mov
sbb
and
sbb
add
loopne
std
mov
scas
loopne
aas
fldcw
push
cltd
stc
mov
jnp
aad
insl
pop
out
in
mulb
lret
mov
insb
cld
jb
dec
inc
xlat
ret
sub
cmpsb
jp
push
mov
mov
fstpt
mov
inc
bound
dec
sbb
out
dec
out
or
sbb
inc
std
lds
ret
and
js
mov
popf
mov
cmpsl
cmp
shll
fisubrs
shr
test
inc
lahf
xor
cmp
adc
leave
inc
cmp
out
push
sar
inc
outsl
xlat
xchg
cmp
aam
mov
pop
push
push
dec
insb
ret
add
cmc
push
sub
cmp
scas
jnp
xchg
add
inc
push
bound
jnp
mov
imul
pop
sbb
pop
or
fwait
movb
clc
or
pushf
loope
mov
aam
popa
mov
sbbb
outsl
adc
jecxz
cmc
jp
ss
pop
mov
sti
call
sbb
sub
push
lcall
jno
outsw
mov
sub
shll
jbe
dec
xchg
jae
mov
cmc
or
je
lahf
je
aad
imul
loopne
mov
js
cs
out
push
mov
scas
into
and
jg
rcrb
inc
cmp
jp
lds
data16
test
push
into
das
ja
jne
rolb
aad
int
cmc
and
push
adc
mov
mov
sub
call
push
addr16
or
bswap
cmp
jb
test
or
sub
mov
jmp
xor
xchg
sub
add
gs
loop
mov
cmp
std
xchg
mov
imul
sub
add
add
loop
xchg
enter
test
fmul
sti
push
jno
aam
ss
and
lds
insb
pop
loope
cmp
daa
cmp
sub
dec
xor
cmpsl
push
repnz
and
xor
in
push
xchg
addl
repnz
xor
sti
or
stc
mov
cmp
mov
cmp
les
bound
jp
pop
test
fildl
jg
sbb
test
jg
jo
pop
daa
or
xchg
jmp
pop
shl
js
push
std
out
sub
subb
jecxz
dec
push
mov
in
pop
jo
pop
rcrb
add
imul
ja
fcompl
mov
lahf
aam
xchg
add
testb
xor
add
and
movsb
iret
out
sub
xchg
jne
xchg
aam
js
rcrl
sbb
sbb
and
ss
test
push
inc
fadd
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
pop
jo
mov
sbb
jbe
sub
sub
jo
inc
arpl
sub
in
aad
adc
or
pushf
das
cld
jmp
pop
jl
daa
or
mov
or
mov
bound
pop
pop
and
cmp
outsb
scas
push
adc
sbb
jno
out
cmp
xchg
inc
insb
or
rol
sub
sub
lock
movsb
imul
add
mov
inc
or
pop
or
cmpsl
lahf
cmp
jle
mov
test
push
sub
cmp
or
fists
inc
imul
ss
push
je
icebp
imul
aam
add
sahf
test
mov
ljmp
or
xor
push
add
mov
jmp
es
movsl
mov
pop
nop
inc
pusha
xchg
adc
rol
popa
inc
rorl
sub
pop
scas
jo
hlt
dec
and
xchg
loop
mov
ret
sbb
inc
cmp
mov
inc
sbb
cld
mov
add
out
popa
outsl
mov
dec
lret
das
fisubrl
push
mov
imul
lret
sbb
pop
aad
lahf
pop
sbb
jmp
sub
aaa
clc
fisubrl
mov
sub
imul
nop
mov
dec
inc
or
into
mov
mov
xchg
test
push
jle
mov
pop
loopne
popf
out
xchg
or
divb
sbb
fs
mov
or
repnz
test
mull
inc
cwtl
aas
inc
sub
add
sbb
lcall
cmp
pop
xor
sti
test
inc
sbb
and
or
dec
pop
mov
mov
call
ret
add
scas
push
mov
pop
and
mov
xor
dec
or
add
shll
jae
adc
sbb
jnp
sbb
sbb
lods
add
add
fstpl
mov
inc
add
or
mov
lret
mov
adc
pop
xchg
leave
push
out
mov
jle
sub
ficoms
dec
lods
sbb
mov
leave
mov
subb
and
cmp
mov
pushf
nop
lret
jmp
sbb
pop
or
mulb
and
fwait
mov
les
inc
mov
loope
icebp
push
inc
int
fiaddl
xchg
pop
or
lcall
sbb
inc
xchg
mov
and
push
pusha
push
cmpsb
ficompl
mov
movsb
stc
jg
jns
mov
sub
aam
nop
push
and
inc
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
fwait
push
popf
jo
popf
sbb
and
sbb
sbb
aam
xor
or
adc
fisttpl
inc
call
movsl
imul
jp
cld
aad
pop
dec
sbb
xor
inc
xchg
test
add
cs
or
xor
dec
push
icebp
sti
fcoms
test
scas
loope
roll
xor
jecxz
popf
out
or
lds
xor
dec
push
repz
fsubr
test
dec
adc
xor
cmpsb
or
push
movb
pop
mov
sti
fucom
dec
dec
add
in
fisttpll
pop
and
pop
jbe
push
adc
ja
fsubrl
cmpsb
shr
nop
lods
sbb
fcom
ret
mov
dec
aaa
divl
stc
lret
jo
insb
ss
movb
stos
mov
out
mov
adc
lods
add
pushf
or
scas
cmp
fucomi
popa
and
lods
sbb
mov
pop
push
push
lea
dec
imul
inc
and
shl
lea
xchg
fadd
stos
mov
daa
add
scas
xchg
call
pop
inc
mov
mov
rcrl
mov
lds
dec
rcr
xor
lcall
ljmp
fdivs
push
xchg
ja
sbb
xchg
pop
or
and
mov
es
xchg
mov
and
jns
mov
aam
lock
das
int
pop
dec
loop
lahf
lcall
mov
pop
xchg
cmp
repnz
push
xchg
jl
daa
mov
mov
mov
cmpsl
xchg
jle
or
data16
je
xchg
fcomps
jb
adc
repnz
add
es
rorl
aad
dec
xor
out
mov
call
and
add
int3
jl
mov
add
jg
pop
mov
dec
repz
out
sub
jbe
sbb
pop
movsl
add
or
loope
ljmp
jbe
pop
and
inc
jns
subb
dec
push
jae
pop
mov
pop
jns
cld
or
rol
mov
into
adc
sub
aas
cmc
jne
push
mov
cmp
or
mov
in
into
insl
call
dec
into
jl
push
lcall
jmp
repz
incb
xchg
pop
and
sub
xchg
mov
pop
les
rcl
sbb
movsb
inc
test
mov
mov
popa
inc
push
cmp
mov
shrb
mov
jecxz
xchg
mov
or
dec
pop
sub
jns
sbb
sub
mov
lds
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
push
sbb
lret
ret
idivl
mov
adc
in
and
shrb
sub
mov
sbb
fsubs
add
lock
aaa
dec
mov
jle
push
inc
cvttps2pi
ret
pop
pop
xor
inc
stos
sub
inc
and
lret
rcrl
and
iret
adc
rcl
mov
jnp
lret
push
mov
xchg
xchg
rcrb
dec
cmp
cmpsb
pop
jl
cmpsl
sub
das
test
sub
add
push
push
popf
jae
addr16
cmp
pop
push
push
out
scas
push
mov
pop
xlat
scas
and
movsl
dec
je
jae
push
lods
sbb
insb
xchg
cmpsb
bound
cmc
add
data16
addr16
and
in
ja
pop
movq
jge
inc
cmpsl
stos
pop
pop
mov
mov
push
mov
stos
in
xor
cld
xchg
xchg
in
mov
imulb
adc
aas
test
or
jl
xchg
repnz
sar
fwait
lods
mov
add
pop
ljmp
inc
out
jmp
gs
and
pop
and
cs
mov
imul
push
pushf
inc
hlt
js
jne
jl
popf
leave
bound
dec
xorl
jmp
push
arpl
in
cld
in
loop
imul
je
xchg
sub
or
dec
in
gs
sub
subb
lcall
cmc
adc
jne
lods
dec
pop
fsubrs
loope
inc
scas
imul
ret
cmpsl
outsb
dec
pop
pop
call
pop
or
sub
or
or
and
cmp
idivb
in
inc
jmp
push
adc
adc
pop
inc
rcll
imul
fs
sbb
jg
clc
mov
lea
inc
aaa
jnp
push
add
push
andl
ljmp
add
out
jl
or
or
mov
in
in
inc
mov
cmpsl
arpl
sbbl
xchg
inc
inc
sbb
xchg
out
jo
mov
cmpsb
popf
cmpsl
int
repnz
adc
pop
push
mov
push
mov
sub
stos
mov
inc
jmp
out
or
outsb
pop
gs
insb
in
cmp
inc
cmc
fmuls
lds
mul
add
sbb
dec
mov
mov
xchg
loop
inc
imul
pop
sbb
fwait
mov
mov
aaa
adc
repz
or
adc
push
cltd
and
mov
xor
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
std
mov
xchg
sbb
and
sbb
shr
cs
ja
push
out
inc
and
rclb
mov
jbe
xor
jne
fs
cs
mov
arpl
jmp
xchg
jb
pushf
jno
imul
push
cmpsl
inc
or
xchg
dec
pinsrw
push
inc
jg
inc
stos
push
add
xor
adc
mov
ret
pop
push
pop
aas
or
push
div
das
fisubrs
es
mov
pusha
sbb
jle
mov
pop
pop
scas
push
dec
pop
sbb
imul
decl
scas
mov
mov
add
or
inc
xchg
fdivrl
push
shl
sub
clc
dec
mov
push
sub
jno
negl
jl
or
fimull
lods
sbb
adc
lods
lcall
data16
test
mov
sti
mov
in
mov
pop
mov
ja
push
sbb
sahf
push
mov
jp
aaa
aad
fwait
das
fiaddl
xchg
pop
sub
les
xor
jmp
loopne
adc
adc
xlat
imul
das
lret
adc
add
jno
push
sub
ficoml
pop
mov
aad
cld
call
dec
sbb
cmc
fistpl
enter
push
int
inc
cs
jnp
mov
sub
add
ljmp
test
stos
and
sahf
imul
lret
jp
fistpll
in
hlt
lods
inc
pop
jge
aas
ficomps
test
jl
in
decl
adcl
enter
aas
fisubrs
imul
xor
fists
pushl
pusha
push
mov
aam
rcrb
dec
push
ret
pop
gs
jmp
xlat
jp
cmpsl
push
dec
fwait
or
out
test
mov
jle
loope
pop
negb
adc
xlat
outsl
jno
add
outsb
xchg
inc
jb
and
xor
jg
ret
cld
mov
xor
enter
aad
and
mov
in
daa
or
mul
push
popf
pushl
data16
add
adc
loope
getsec
movsl
mov
stos
dec
bound
pop
pushl
mov
popa
adc
pop
jno
and
enter
out
cmp
or
add
mov
mov
ret
cmpl
loop
test
or
cli
cmp
mov
lahf
movsl
ds
pop
dec
in
cmpsb
push
add
cld
and
and
clc
mov
mov
pop
xchg
ljmp
add
push
test
popa
movsl
lods
xchg
mov
mov
fiaddl
es
or
aad
mov
lods
jno
in
jb
push
fdivrl
sti
mov
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
outsl
adc
les
fiaddl
adc
popf
or
repz
lret
pop
mov
and
push
cmpsl
xchg
dec
pop
xchg
mov
add
ljmp
in
sbb
in
addr16
cmp
pop
popa
cmpsb
adc
dec
cli
cmpsl
in
add
sub
cmp
push
shlb
stos
aad
and
icebp
jno
xor
insb
jne
leave
jno
stc
pop
xchg
jb
mov
fists
xchg
dec
les
xorl
int
cld
jl
movsb
push
ret
pop
cmp
jg
in
out
push
and
sub
cmp
lods
mov
push
test
arpl
mov
subb
push
add
stos
mov
pop
fs
pop
inc
inc
jecxz
sbb
ret
out
inc
sub
iret
clc
jb
push
out
aam
mov
pop
inc
mov
bnd
push
add
rcll
sub
addr16
pop
pop
int
mov
xor
sarb
ds
xchg
jl
cmpsb
jp
cmp
lahf
jo
push
fcomps
insl
das
jge
pop
lock
lret
ret
jp
rorl
pop
hlt
pop
add
jle
in
fisubrl
sahf
and
xchg
shl
int
add
cltd
mov
lret
push
jle
dec
cld
daa
out
movsb
rolb
inc
dec
pop
je
stos
hlt
add
lahf
outsl
or
lock
inc
push
imul
call
rclb
in
xor
cmp
adc
adc
mov
xchg
dec
clc
jno
adc
xchg
call
mov
inc
push
mov
jne
mov
add
and
add
int3
pop
repnz
xchg
adc
pop
xchg
fcmovbe
push
fwait
cmp
adc
inc
popf
sub
mov
inc
xor
mov
push
xchg
jno
or
xor
xlat
sub
cs
add
jge
add
and
adc
nop
lds
sub
jle
fstps
adc
pop
test
orps
push
sub
shlb
fst
ss
adc
gs
jne
and
les
repnz
cmp
inc
aaa
pop
mov
sbb
les
mov
jo
inc
cmp
inc
push
jg
imul
inc
inc
inc
inc
cld
fnstenv
shlb
add
lods
xchg
add
sub
dec
add
mov
cmp
imul
jmp
sbb
xor
nop
mov
pop
cmp
xchg
cwtl
in
add
mov
sahf
and
lods
rolb
stos
dec
mov
out
shrb
insb
inc
add
adc
and
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
pop
add
and
sbb
sti
inc
fwait
pop
push
cld
xor
add
jmp
or
inc
stc
pop
jae
test
fisubl
or
adc
stos
jb
fwait
nop
data16
bound
test
push
iret
in
test
mov
stc
xor
add
add
adc
rcll
add
jno
push
add
xor
neg
jmp
loope
insb
in
cltd
pop
cmp
aaa
push
inc
pop
pop
inc
test
pop
and
cs
scas
mov
imul
popf
pop
push
sbb
aaa
mov
xchg
push
inc
mov
dec
ljmp
mov
cmp
ffree
gs
imul
dec
stc
push
fidivrs
xchg
dec
lods
fdiv
dec
clc
push
adc
outsl
loopne
mov
repz
sahf
stc
sahf
xchg
fidivl
dec
fs
repnz
mov
stc
xchg
pop
int
push
jne
inc
popf
xchg
jmp
mov
jnp,pn
mov
adc
insl
pop
mov
or
lods
cwtl
icebp
outsb
popf
int3
mov
icebp
mov
xor
mov
or
fnstsw
inc
test
mov
xchg
mov
lcall
push
out
call
fdivrs
mov
ss
leave
xor
mov
in
jle
fldl
jle
ds
sbb
das
pop
pushf
jbe
mov
and
sbb
sti
push
mov
fstps
jno
and
call
das
dec
sbb
dec
inc
jns
mov
jo
in
das
cmp
or
fsubl
sahf
out
adc
cmp
cmpsl
cmc
cmp
xlat
sbb
xor
shlb
mov
into
cs
les
cmp
addr16
std
jl
mov
clc
icebp
jns
rolb
dec
mov
xchg
jae
lds
repz
push
mov
or
mov
mov
xlat
inc
fldenv
mov
stos
adc
in
roll
test
in
lods
arpl
stc
pop
adc
ret
in
dec
cmp
or
out
imul
xchg
xchg
mov
mov
fcoml
dec
push
movsb
addr16
cmpb
pushf
fstl
jae
inc
xchg
mov
push
fs
mov
mov
push
cmpb
dec
andl
cwtl
mov
test
cwtl
scas
popf
add
std
cmp
stos
and
push
ds
xchg
fs
or
es
lret
xor
rcll
mov
xchg
scas
push
mov
fsubp
inc
adc
sti
aaa
int3
addr16
jp
jp
in
lods
andb
repnz
inc
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
mov
jg
sbb
adc
sbb
sbb
das
dec
dec
mov
or
mov
add
faddl
inc
fidivrl
fdiv
fcmovbe
leave
mov
xorl
pop
sub
stc
inc
jge
add
fwait
test
loopne
adc
inc
sbb
jge
scas
stc
push
or
xor
pop
ret
pop
in
cld
push
pop
jbe
fwait
pop
cs
outsl
push
dec
arpl
dec
jp
jmp
fwait
or
leave
into
aad
lcall
insl
sub
aaa
nop
jmp
out
xchg
push
pop
or
inc
mov
mov
lahf
lret
je
decb
rcrb
sbbl
xlat
arpl
das
cmpsl
out
fsubr
sub
adc
xor
iret
fisubl
jno
jae
mov
push
cmc
stos
es
mov
cmp
adc
out
imul
pop
outsl
push
or
fs
adc
gs
addl
mov
ret
psllw
xchg
mov
shufps
push
sub
call
inc
mov
adcl
lods
push
and
decl
sbb
rcrb
jno
pop
js
mov
lods
push
aaa
mov
lcall
dec
clc
call
jmp
fwait
add
pop
lds
push
test
nop
jbe
in
popf
dec
sbb
sub
xlat
jp
aas
mov
add
pop
push
add
outsb
pop
push
xor
push
stos
lods
cmp
sbb
enter
mov
dec
stc
ja
mov
inc
add
shr
bound
or
sbb
xor
sbb
in
mov
test
rorl
cld
stos
adc
fs
jae
icebp
push
pop
xor
dec
dec
das
aaa
lret
sbb
loope
es
cmp
addr16
push
mov
jl
je
nop
int3
cltd
or
jge
dec
sbb
or
cmpsl
jg
add
jle
xchg
dec
ret
pop
inc
stos
scas
rclb
mov
xchg
cmp
es
xor
testb
cmp
mov
je
outsb
cmp
insb
jl
sub
mov
mov
inc
add
jo
ds
std
es
cld
fs
inc
je
xor
in
je
add
jbe
cmp
pop
jge
dec
in
xor
out
mov
and
push
pop
rcr
or
inc
hlt
mov
pop
xor
or
mov
clc
adc
out
rolb
xor
xchg
pop
xchg
xor
cmp
push
inc
mov
shl
inc
repnz
mov
mov
fldenv
stos
pusha
jnp
push
lahf
inc
and
pusha
in
fdiv
dec
adc
out
imul
mov
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
lcall
and
sbb
jb
xchg
mov
data16
jne
rcr
std
lods
into
jne
add
ljmp
dec
outsb
jge
mov
ljmp
adc
jns
pushf
shl
out
gs
pop
jae
mov
fadds
cmp
mov
shlb
xor
dec
ret
mov
mov
mov
call
sbbl
cmp
ljmp
xorl
hlt
les
add
aad
shl
pusha
ljmp
inc
shlb
jle
ljmp
cmp
jg
pushf
les
mov
ret
shrb
xchg
enter
jp
popa
dec
or
ja
xchg
shrl
push
sarl
fld
add
sub
push
jnp
push
fs
jge
rorb
repz
mov
sbb
lods
inc
add
mov
movsl
jbe
ficompl
and
gs
jo
lret
arpl
sbbl
icebp
es
fidivrl
xor
aaa
mov
bsf
enter
es
sbb
fs
stos
in
outsb
ljmp
add
xor
call
loope
push
cmp
mov
or
or
cmp
mov
push
pop
addr16
ljmp
jbe
int3
and
jmp
push
idiv
mov
pusha
clc
dec
jbe
pusha
sub
jmp
cmp
sbb
sub
loopne
call
or
fildll
cmp
push
push
je
add
sti
adcl
jnp
mov
mov
sbb
fs
pop
pushf
cs
sbb
cs
add
mov
inc
iret
xor
push
in
and
mov
out
add
insl
add
xor
orl
loop
jge
cli
push
and
inc
js
sbbl
lock
push
or
cmp
out
adc
cli
clc
fwait
mov
hlt
outsb
fists
loopne
leave
xchg
aaa
std
push
inc
sti
repnz
mov
std
push
push
xchg
sbb
aas
cli
push
mov
in
push
es
adc
shrb
cmp
add
mov
outsb
mov
aad
pop
movhps
aad
pop
cld
add
fstpl
mov
dec
sbb
push
push
imul
or
ret
mov
adc
mov
std
loopne
ret
insb
inc
je
push
call
aad
push
clc
adc
leave
jmp
in
shrb
mov
cwtl
xchg
push
stc
sbb
jbe
push
sbb
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
jnp
xor
mov
sub
add
in
mov
inc
mov
inc
sub
cmp
jns
stos
or
lock
hlt
iret
mov
xchg
add
int
or
xchg
mov
call
or
add
jl
js
pop
cmp
popf
stos
mov
pop
xchg
cld
dec
xlat
xor
mov
loope
mov
fcoml
cmp
pop
cmp
mov
mov
das
sub
cld
add
sub
mov
stos
jne
cmpl
clc
rorl
mov
mov
cmc
inc
adc
fcomps
adc
cmp
shlb
in
fwait
sub
enter
cmp
jbe
outsl
mov
das
jne
int3
sbb
jnp
cmc
sbb
decl
movsb
dec
repz
enter
sbb
shlb
jo
arpl
addr16
in
push
ds
mov
fisttpl
sub
popa
cltd
cmp
aam
push
jo
sti
movsb
mov
outsb
icebp
cld
int3
imul
out
outsl
mov
stc
and
in
cmc
int
inc
nop
pop
adc
xor
loope
ret
das
sub
pop
adc
mov
cs
sub
vfmsub231ps
mov
mov
adc
sub
adc
cmpl
enter
lcall
mov
xor
outsb
adc
aaa
aas
jle
xor
lea
mov
movsl
mov
mov
or
cmp
loopne
shrb
cld
outsl
sub
scas
pop
adc
je
shll
in
mov
sbb
mov
out
xchg
cld
sbb
lahf
or
clc
xchg
jnp
add
test
mov
xor
fldl
cwtl
sbb
jecxz
lea
mov
xor
popa
outsl
sub
mov
cmp
xlat
iret
dec
cmp
mov
or
fstpl
pop
mov
mov
sub
pop
sub
inc
in
test
ret
xchg
arpl
add
xor
mov
jl
mov
outsb
push
hlt
popf
dec
repz
out
or
or
orl
xor
lret
mov
push
mov
cmp
fidivs
scas
inc
mov
adc
sbb
and
sbb
icebp
pusha
push
imul
cltd
fs
xchg
lret
cs
jle
stos
aam
dec
cmpsl
aam
sub
xchg
js
cmp
daa
fwait
adc
jo
cwtl
push
stos
icebp
mov
test
scas
xor
pop
fisttpl
inc
jne
insb
ds
lret
push
xor
rclb
sbb
xchg
dec
scas
inc
fmuls
mov
jb
xlat
cmp
lock
push
sahf
dec
jb
jno
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
aam
stos
add
sbb
adc
sbb
dec
add
out
test
or
out
and
movsl
mov
mov
fcomip
loop
clc
in
sub
test
sub
mov
xchg
fwait
inc
dec
mov
pushf
add
jns
add
loop
lret
mov
cmp
inc
aaa
sbb
mov
addr16
or
push
cli
mov
adc
clc
hlt
out
not
inc
jecxz
cmpsl
rcr
aad
push
insb
addl
xor
bound
sbb
inc
add
int3
dec
jo
ja
mov
sbb
adc
push
int
out
jecxz
test
pop
cltd
jb
sahf
xchg
rorb
scas
inc
add
mov
lds
imull
adc
std
push
mov
add
icebp
pop
push
fldcw
scas
cmp
mov
mov
jecxz
aad
jne
sub
aam
pop
out
cmc
jno
push
lea
adc
and
adc
rolb
inc
cmc
popf
sarb
sarb
imul
and
xor
xchg
loop
xor
fcomps
pop
ret
mov
int
insb
adc
push
fimuls
pop
pop
lret
push
cmc
loop
sbb
cmp
adc
cwtl
iret
data16
in
cmpsb
push
outsl
jno
lods
fisttps
sahf
mov
cwtl
and
add
out
cmp
scas
mov
ja
jns
xchg
or
push
mov
lcall
nop
adc
xchg
repnz
push
cli
popa
xor
push
adc
aad
dec
shrb
jl
jno
rcrb
mov
fbstp
xor
hlt
aas
int3
add
enter
bound
mov
mov
jmp
movsb
inc
call
lds
out
clc
xor
push
push
sub
inc
xchg
hlt
aas
pusha
outsl
shlb
test
sbb
testl
out
pusha
jns
scas
mov
bound
shlb
pop
gs
xchg
lret
es
popf
ljmp
cmp
inc
push
lods
adc
es
add
xchg
jg
and
sti
xor
das
mov
inc
js
sub
pop
sbb
inc
or
and
mov
mov
add
out
jl
rcrl
out
jecxz
adc
sbb
adc
roll
andl
test
fbld
int
jge
push
xor
cmp
stos
push
test
jl
sti
div
decb
ss
dec
std
xchg
pop
sub
inc
push
jl
adc
outsb
sub
dec
push
repnz
inc
je
mov
out
lea
or
pop
and
mov
jmp
stc
sti
enter
add
ljmp
and
push
sbb
push
cld
popf
jo
sbb
and
sbb
pop
inc
mov
clc
jge
leave
xor
test
adc
icebp
mov
dec
jne
sbb
dec
shl
lods
push
es
and
lods
mov
mov
std
jnp
fstpl
pop
mov
hlt
xor
mov
dec
addr16
or
js
cs
pop
out
dec
push
fnstcw
adcb
mov
in
lods
mov
xor
test
sub
adc
fistps
loope
mov
adc
lock
insl
pop
outsb
push
mov
gs
sub
push
sbb
and
push
xor
iret
bound
jns
xchg
je
mov
inc
push
data16
push
mov
mov
dec
jne
xchg
sbb
lahf
xor
pop
in
jmp
pusha
sbb
ficompl
pop
sbb
mov
test
movsb
sbb
sub
fisubl
test
mov
mov
lds
hlt
mov
in
fnclex
mov
lods
sub
movsb
xor
pop
add
push
outsb
inc
sbb
mov
lret
lock
cmp
or
lea
cmp
je
outsb
loopne
mov
orb
jg
adc
leave
ljmp
mov
sub
jmp
push
mov
sub
incl
lahf
test
mov
xor
cs
pop
cmp
mov
xchg
xorl
lcall
loop
int
adc
push
and
pushf
or
addr16
jecxz
in
pop
insl
fwait
lods
dec
cmpb
sub
loopne
mov
test
fcoms
and
xchg
xor
or
cmp
mov
or
inc
popf
or
dec
lret
mov
fs
sbb
xchg
add
icebp
rolb
out
outsb
movsb
dec
mov
mov
leave
dec
mov
cmp
push
dec
hlt
pushf
mov
adc
mov
out
mov
mov
xlat
dec
lods
cmp
mov
sbb
mov
adc
pop
lahf
jmp
popf
sub
insl
inc
cmp
out
dec
adc
xor
jb
push
cs
mov
test
pop
lock
mov
adc
push
xor
dec
leave
add
pop
cmp
add
mov
pop
popa
jbe
jb
fwait
jecxz
insl
aad
fwait
pusha
pop
xorl
sbb
lds
decb
cltd
popa
xchg
push
shrb
or
hlt
leave
lcall
inc
mov
fisubrl
fcomp
ret
or
in
arpl
pusha
popa
cmp
out
fimuls
and
add
cmp
jnp
dec
sbb
clc
dec
lea
ret
icebp
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
inc
push
popa
sbb
and
sbb
mov
pop
xlat
mov
shll
and
xrelease
push
jne
rcll
pop
adc
pop
js
sbbl
mov
scas
mov
mov
pop
fildl
sub
das
xor
hlt
cwtl
scas
ds
movsb
out
adc
out
mov
addl
stos
jnp
shl
push
sbb
jecxz
or
xchg
insl
sbb
dec
push
and
mov
aaa
inc
sub
rolb
xor
push
or
xchg
add
sbb
popf
mov
adc
loopne
subl
adc
pop
test
mov
mov
fisubrs
fcomps
inc
ljmp
dec
sbb
xlat
jno
insl
jecxz
xchg
scas
mov
cli
cmc
cld
sub
lcall
mov
and
push
and
popf
xchg
in
insb
dec
push
fs
mov
xchg
aam
xor
lcall
repnz
xor
aam
gs
cmp
mov
imul
pop
shrl
and
cs
dec
or
scas
cmp
scas
cmp
or
push
pop
vxorps
add
loop
add
sbb
adc
lret
sub
cltd
iret
lea
xchg
mov
inc
mov
adc
fists
in
mov
and
mov
mov
imul
inc
dec
int3
sbb
in
pop
push
sbb
mov
mov
push
mov
or
and
insl
mov
inc
xor
mov
in
aam
mov
cmpsb
aaa
scas
into
sar
sub
out
pop
aas
cmp
fldl
insb
lea
and
dec
xchg
add
ja
les
es
dec
mov
hlt
push
mov
lcall
add
into
fwait
cld
or
das
sbb
test
cmp
repnz
cld
adcl
aad
addr16
in
pusha
aam
dec
fcoms
xor
pop
ds
jl
ret
jae
call
shlb
xor
in
lcall
push
iret
lret
inc
aas
clc
js
pop
mov
mov
mov
xlat
sbb
or
pushf
jns
cltd
rcl
xor
or
cmp
pop
shll
xlat
or
push
fadds
mov
xchg
incl
push
jno
push
sbb
lea
not
dec
jg
fistpl
adc
xlat
add
scas
popf
inc
lret
mov
sub
jb
rcrl
xor
fwait
mov
shll
fsubs
sarl
sbb
mov
mov
pop
fildl
loopne
hlt
or
stos
inc
xchg
inc
scas
push
stos
data16
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
xor
jl
pop
sbb
and
sbb
push
pop
dec
mov
and
loopne
xchg
insl
mov
fstpt
pop
push
dec
pop
or
and
or
ljmp
lods
sub
or
mov
leave
jno
repz
jg
bound
pop
mov
xlat
sub
cmc
test
movsl
insl
dec
imul
subb
or
or
and
mov
gs
inc
mov
cltd
cmp
pop
arpl
mov
shrb
push
cmc
test
cmp
inc
negb
cmpb
and
mov
mov
fs
sarb
sarl
mov
jge
outsb
fnsave
ds
adc
fs
sub
jmp
imul
cmp
sbbl
rcll
daa
mov
and
jg
scas
mov
dec
in
mov
mov
adc
jge
or
std
sbb
pop
mov
sub
inc
adc
add
dec
test
add
outsl
test
rcll
xor
and
or
add
dec
rcrb
jnp
out
movsl
in
push
insb
call
and
stc
unpckhps
xor
push
xchg
sti
std
mov
mov
ss
mov
lods
xor
inc
pop
cmc
hlt
push
scas
addb
cmpb
cli
or
icebp
pop
mov
lret
xor
and
mov
pop
push
or
jbe
inc
push
cmp
stos
ds
pushf
jmp
ja
idivb
test
push
add
mov
fnsave
lods
movb
mov
outsb
and
inc
and
xor
inc
cmpsb
cmp
jp
and
pop
or
les
pop
arpl
pop
fnsave
stc
inc
repnz
fdivl
lods
hlt
bound
das
mov
mov
mov
or
test
cmp
jecxz
mov
or
xor
add
adc
scas
lds
add
xorb
pop
adc
mov
test
jp
mov
test
in
inc
enter
aam
jne
xchg
push
ja
call
add
inc
movsl
and
rclb
and
push
or
ja
mov
movsb
pop
push
sbb
jp
mov
leave
mov
xor
push
stos
fs
pop
aam
fstpt
sbb
xchg
mov
mov
jno
pop
push
xlat
int3
ret
decl
mov
sti
mov
pusha
in
imul
jecxz
mov
add
push
xchg
xor
out
test
dec
jg
adc
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
pop
or
sub
jl
imul
sbb
js
clc
and
fistpll
mov
inc
es
insl
mov
push
mov
push
push
add
xchg
enter
mov
jl
mov
hlt
ljmp
push
pusha
inc
xor
xchg
cmc
pop
cs
xchg
sbb
stos
cmpsb
in
popl
lcall
xchg
mov
jecxz
xchg
or
sahf
mov
dec
and
scas
rcrb
add
aaa
and
addr16
adc
push
popa
xchg
dec
sbb
cmpsb
push
or
sub
es
cli
jge
in
adc
or
sbb
xchg
fsubr
or
addb
test
rol
adc
mov
xchg
insb
xchg
sub
pop
pop
mov
push
fstps
lock
ss
lcall
outsb
fidivrs
lret
lods
in
in
inc
mov
psrlw
jns
add
sub
jge
add
ret
call
mov
lahf
insl
jp
mov
fldl
ret
mov
movhps
and
test
mov
shll
sub
lods
scas
jo
outsl
cli
bound
test
mov
loope,pt
lods
clc
cmp
add
test
push
mov
cmpsl
idivl
pop
inc
mov
in
lea
and
mov
dec
daa
sbb
lods
push
stos
cmpsl
es
clc
fmull
test
cmp
dec
pushf
outsl
imul
jmp
fisttpl
out
mov
aam
loop
mov
out
mov
fdivrl
cwtl
scas
xor
clc
xchg
popf
xchg
push
xchg
cwtl
js
or
loopne
jb
scas
jo
stc
sub
adc
imul
out
xchg
std
les
mov
mov
fstl
mov
pop
adc
loop
sti
adc
ljmp
pusha
test
aaa
sbb
pop
je
push
and
scas
xchg
add
dec
adcl
mov
ljmp
cmp
movsl
sti
mov
pop
icebp
push
jle
fistpl
jle
inc
fadd
cmp
cmp
dec
or
aad
aam
dec
jp
jns
sti
das
pop
out
pusha
push
mov
imul
or
mov
xor
mov
sti
jecxz
or
lea
imul
mov
xchg
add
fistps
jbe
pop
cmpsl
out
lret
mov
adc
pop
xchg
lock
nop
dec
jle
fs
jecxz
out
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
or
sub
adc
mov
inc
mov
sbb
xchg
add
adcb
inc
inc
pusha
cmc
pop
inc
jb
pushf
arpl
dec
dec
movsl
xor
sub
mov
rclb
cmp
fiaddl
mov
jp
nop
mov
jle
sahf
call
pop
mov
lret
enter
mov
push
xchg
pop
dec
and
clc
mov
push
dec
and
or
popa
sub
jge
or
je
or
shll
mov
xor
scas
cmc
loope
in
jnp
insb
inc
mov
or
jl
and
out
aaa
fldt
popa
shll
xor
rcrb
xor
call
cmp
cmp
xor
fisttpl
push
filds
inc
mov
sub
imul
mov
xchg
xchg
mov
test
cmp
mov
mov
xlat
inc
fisubl
inc
cwtl
cli
jnp
mov
pusha
out
cltd
jg
cli
xlat
lods
sub
aaa
iret
sub
cmp
icebp
in
jmp
cmc
push
and
push
stos
rolb
fildl
or
push
rolb
dec
cmp
add
and
stos
pop
mov
xorb
add
add
jbe
inc
addb
repz
mov
divl
pop
xor
cmp
jae
xchg
aaa
push
scas
adc
movsl
adcl
push
xchg
adc
cmp
fisubl
push
push
sub
test
leave
mov
aaa
sbb
sar
sbb
repz
hlt
sahf
and
mov
adc
mov
js
jl
mov
ror
fwait
xchg
xchg
rorl
xchg
push
dec
out
mov
out
xor
sub
push
adc
jp
popa
js
add
push
sub
pop
out
mov
ljmp
jmp
scas
or
inc
cli
or
xor
sbb
mull
dec
popf
jae
jae
ljmp
adc
xchg
jne
mov
je
cs
daa
cmpsl
clc
aaa
je
cmp
and
sbb
jg
inc
mov
in
xor
lods
xchg
inc
sub
push
mov
testl
pop
in
jmp
loop
fwait
push
imul
daa
rol
jne
inc
or
test
aam
ret
call
pop
test
xlat
push
push
pop
je
fistps
inc
inc
insb
js
push
neg
ljmp
div
mov
cld
aaa
xorl
test
adc
fistpll
ja
jl
push
mov
test
xor
inc
ficoml
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
insl
jne
xor
sbb
adc
sbb
mov
xor
and
xchg
rcl
mov
fwait
push
sub
xor
iret
out
xor
pushf
dec
outsb
pop
mov
sbb
hlt
cmp
xorl
lret
in
pusha
iret
and
jne
and
in
cmp
or
lret
iret
and
daa
jp
iret
subb
testb
xor
es
lahf
dec
mov
movsb
xchg
cmp
adc
out
or
sbb
xor
test
add
add
aas
adc
aad
dec
ret
mov
repz
push
pop
mov
popf
cmp
and
push
in
or
sbb
cmpsl
sub
or
xchg
pop
fs
add
aas
jno
es
mov
roll
cmp
dec
stos
ja
rclb
es
sbb
xor
fldenv
cmp
mov
cltd
shlb
jbe
loope
pop
mov
dec
or
arpl
xchg
out
mov
xchg
clc
push
sbb
fcoms
sub
mov
sub
in
adc
xchg
jo
pusha
fistl
jg
lock
stos
cmc
mov
out
sbb
daa
adcb
mov
das
jge
clc
ficoms
push
xchg
dec
shrb
jl
aas
fisubrs
xchg
add
sbb
pop
testl
in
sub
jbe
jle
xchg
icebp
cmpsb
adcb
mov
dec
inc
lods
xchg
push
sub
imul
mov
bound
addr16
je
push
or
xchg
movsb
stc
stc
shll
andl
xchg
addr16
sahf
add
inc
test
ljmp
pop
cmp
and
xor
mov
jmp
leave
push
outsl
inc
push
pop
lret
std
sbb
out
out
inc
push
fisubl
mov
bound
dec
outsb
rcrb
and
cld
mov
shlb
push
rorl
test
mov
les
dec
mov
mov
mov
inc
add
insl
rol
outsb
fcomps
mov
into
add
xchg
jp
popa
adc
adc
jnp
imul
das
sub
jle
and
movl
stos
push
into
push
hlt
and
ficoml
les
movsb
hlt
out
mov
imul
aas
mov
mov
sub
mov
fcmovb
js
pop
jl
scas
cmpsl
dec
lods
stos
mov
lret
cltd
dec
int3
lea
test
sub
add
fwait
push
aad
mov
cmp
js
jmp
inc
clc
add
fcomi
cs
mov
outsl
mov
mov
enter
fcmovb
ds
aad
jnp
mov
into
adc
test
jne
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
push
pop
lock
add
sbb
test
imul
pushl
mov
sub
lea
pushf
push
fidivs
je
sub
clc
and
cmp
ja
fsubr
ret
jg
jge
dec
cmpb
cmp
rorl
loopne
sbb
push
imul
inc
sti
inc
xchg
xchg
jno
mov
lcall
nop
fnstenv
aam
lahf
pushl
inc
cmpsl
orl
jle
mov
insb
jno
dec
shr
inc
lods
ss
or
xchg
sub
sub
lods
inc
loopne
cmp
loopne
mov
test
std
inc
or
dec
scas
ret
or
inc
insb
mov
dec
push
iret
bound
js
inc
out
leave
fcomps
cmc
push
test
loopne
pop
xchg
repnz
pop
scas
push
pop
xchg
pusha
lret
or
inc
pop
pusha
adc
cltd
repnz
addr16
test
nop
xchg
sbb
xchg
in
add
mov
cld
sub
mov
push
nop
mov
mov
roll
mov
aaa
lock
sub
insl
inc
xchg
xor
mov
pop
dec
loope
or
mov
jnp
js
sbb
les
xor
ja
xchg
and
cmp
dec
sbb
sbb
adc
aam
lds
aam
ficoml
sbb
adc
or
mov
xchg
add
jb
into
xchg
int3
cmp
adc
dec
sahf
outsl
ja
push
insb
icebp
repz
mov
repz
mov
push
push
jns
iret
push
aas
xchg
jecxz
cmp
dec
push
push
sti
loop
mov
lds
inc
jns
insl
mov
mov
pop
jmp
or
fldt
in
sbb
in
mov
nop
mov
cmpsb
add
fnstsw
jp
xchg
mov
and
pusha
push
or
jae,pt
repz
clc
mov
inc
popa
xchg
out
mov
mov
arpl
lahf
add
cmpsl
out
ja
scas
cmpsb
cwtl
pop
shll
mov
sti
and
mov
icebp
push
sub
test
test
mov
cmp
jecxz
test
mov
repz
inc
or
jns
test
mov
sbb
loopne
aad
scas
jns
jg
and
movsb
or
test
mov
push
in
and
or
dec
fisttpll
pop
test
mov
arpl
adc
fsubl
call
sbb
daa
fmull
stos
js
inc
lret
dec
push
push
shll
mov
out
imul
jne
add
movsb
xor
out
in
pop
xlat
mov
sbbl
dec
xor
icebp
push
and
mov
adc
testb
les
and
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
dec
xchg
xor
sbb
adc
sbb
das
daa
daa
cs
ljmp
test
jp
negl
wrmsr
jne
cmc
and
cmp
mov
ljmp
jae
jmp
mov
cmp
stos
jmp
push
pop
cmovg
mov
xor
adc
jo
loop
test
adc
xchg
mov
faddl
out
fildll
test
mov
xchg
repz
jge
cmc
push
mov
pushf
pusha
sbb
fidivs
sub
lds
adc
vpsllq
xlat
imul
lock
das
and
scas
add
nop
fists
gs
aam
jo
add
mov
add
xchg
xlat
ret
mov
jl
dec
inc
mov
push
push
mov
ret
inc
fcmovb
adc
mov
inc
jns
adc
je
sub
jb
mov
ffreep
scas
xchg
faddp
add
rcrb
lret
and
movl
int
mov
mov
pop
inc
push
or
insl
cmpsl
mov
cltd
cmp
sub
and
lods
jl
dec
lods
enter
sub
repz
mov
cli
pushf
xor
in
lea
push
cltd
or
sub
jmp
fwait
or
faddl
lods
dec
sub
int3
or
repz
mov
dec
repnz
bound
push
loope
pop
add
mov
pop
test
insl
rcll
lcall
movsb
inc
cwtl
xor
jp
or
stos
xchg
daa
push
leave
push
scas
mov
lret
adc
lahf
mov
push
xor
call
xor
inc
loopne
cltd
pop
orb
movsl
test
hlt
aam
xchg
in
clc
icebp
arpl
and
bound
nop
or
push
cmp
aas
mov
cmp
gs
mov
add
sarl
xor
out
repnz
inc
inc
push
imul
add
mulb
out
jecxz
shrl
xchg
rcrb
jmp
fldl
out
inc
cmp
jns,pn
push
jl
jae
mov
out
sub
push
fstpl
cmp
adc
add
adc
cmc
in
into
dec
push
je
adc
sti
imul
xchg
xchg
subl
fwait
movsb
mov
dec
aaa
repz
mov
out
cli
mov
enter
mov
adc
movsl
xchg
aad
push
call
mov
popa
popf
movsl
sub
pusha
mov
repnz
fwait
mov
lds
dec
fwait
pop
out
jbe
arpl
and
fisttps
xchg
cmp
mov
sti
pop
cltd
inc
add
pop
xchg
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
les
sbb
adc
sbb
xchg
adc
addr16
sbb
and
or
push
inc
xchg
enterw
lock
lahf
push
xchg
adc
in
and
cmp
hlt
out
jns
incb
mov
lahf
pop
sbb
jecxz
sub
xchg
dec
mov
add
popa
sub
loopne
xor
pusha
inc
and
cmp
jmp
sub
test
add
aam
sbb
popf
inc
mov
mov
rcrl
stos
test
inc
data16
push
push
mov
and
adc
sahf
mov
rcr
push
jno
clc
repz
clc
push
mov
xor
loopne
dec
out
insl
mov
jns
lods
shr
add
jbe
out
mov
pop
and
adc
lods
pusha
scas
dec
pusha
das
mov
jne
les
popf
dec
mov
fistl
jecxz
enter
or
sti
leave
jbe
mov
sub
sub
sahf
jg
inc
jp
repnz
std
inc
fabs
fdivl
adc
pop
fidivrs
adc
sub
xchg
dec
jnp
mov
cs
fs
shlb
push
ds
stc
mov
pop
pop
add
ds
ret
inc
rep
and
xor
pop
test
loopne
fdivl
lcall
adc
call
mov
xchg
sub
in
fwait
sub
jo
pop
and
int
push
std
idivl
scas
fdivs
fildl
pop
xlat
mov
push
push
xchg
call
pop
or
push
aas
stos
or
int
mov
mov
cmc
dec
outsb
mov
mov
cmc
push
cmc
add
pop
ret
mov
out
lcall
xor
loopne
enter
inc
dec
notb
iret
scas
fucomi
popf
loope
insb
xor
sub
fldenv
test
out
mov
mov
popf
sbb
and
popa
mov
pop
jb
jle
mov
dec
out
jp
push
cwtl
push
inc
push
xlat
add
cmp
in
aad
fnstcw
adc
jecxz
int
shlb
or
mov
bound
sahf
add
ficoml
int3
imul
mov
xor
inc
test
ret
nop
orl
outsl
int
mov
mov
add
xchg
mov
scas
mov
arpl
xchg
pop
pusha
fcmovbe
pop
outsb
sbb
fwait
out
stos
inc
sbb
out
cli
add
lea
add
mov
mov
fidivrl
xor
pop
adc
xchg
lods
and
lock
jle
and
jbe
push
xchg
cmpsl
enter
ror
sbb
push
pop
jge
mov
mov
mov
sahf
aas
jmp
jg
jno
xor
jecxz
xor
cld
push
inc
jnp
or
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
xor
add
sbb
fmuls
mulb
mov
mov
pushf
jbe
mov
sub
push
pop
paddb
imul
mov
jmp
adc
sahf
cmpsb
lret
xchg
movsb
mov
shlb
movsb
fwait
inc
into
inc
mov
and
lods
mov
sar
pop
and
shl
jle
pop
mov
stc
inc
leave
cmpb
push
les
mov
inc
lahf
repz
call
add
jo
je
hlt
hlt
aas
std
pop
lea
jmpw
push
imul
fdivr
and
jo
inc
pop
adc
push
pop
adc
sub
jbe
mov
or
xchg
or
ret
out
int3
dec
jecxz
aad
div
adc
scas
movsb
js
fwait
jp
mov
add
add
push
sbb
pop
sbb
and
and
cmc
jo
fmul
sub
lcall
rcrb
sahf
dec
mov
fbstp
cmp
insb
push
loope
out
mov
lea
push
push
mov
pop
ror
dec
stc
je
jb
add
mov
pushf
xchg
xor
and
ja
ficomps
xor
popa
push
das
call
in
cs
in
jns
movsl
iret
addr16
bound
xor
fildll
inc
pop
add
mov
xchg
fstl
mov
adc
cmp
pop
ljmp
es
push
jge
aas
aaa
mov
in
add
lcall
lea
sub
mov
xor
mov
inc
icebp
mov
sub
xor
out
push
xchg
jl
dec
loope
gs
fstpl
mov
jne
mov
xchg
loope
rcr
push
aad
push
cltd
mov
out
test
mov
fcmovne
pushl
in
jb
mov
jns
je
jnp
jp
jns
negb
xchg
ja
adc
mov
outsb
hlt
dec
ret
mov
adc
fisubrs
cs
mov
inc
jbe
fwait
ret
push
mov
add
add
and
imul
addr16
or
jb
dec
out
sub
shll
xlat
jle
les
aas
clc
jb
pop
pop
push
dec
imul
adc
mov
xor
out
add
sub
int
pusha
test
mov
add
mov
popa
xchg
aas
inc
fs
sub
and
sub
inc
lret
out
fcmovnb
sbb
mov
leave
xchg
out
ds
cmc
jo
negl
or
fstl
sub
ljmp
pop
nop
xchg
sub
lret
pop
mov
mov
push
jmp
add
push
sbb
ja
stc
arpl
jle
sub
sbb
adc
sbb
cmp
divl
ret
push
lahf
mov
xor
jae
outsl
xor
imul
adc
in
hlt
dec
pop
mov
mov
cld
aad
mov
popl
cltd
xchg
sbbb
add
enter
mov
arpl
pop
cmpsb
rorl
insb
bnd
movsb
xchg
inc
push
xor
addl
shlb
fiaddl
sahf
sbb
mov
xchg
sub
adc
fadds
dec
and
inc
test
push
idivl
ds
fbld
pop
ds
fiaddl
imul
sbb
jb
push
lods
sbb
sbb
ficompl
sbb
int
push
and
out
pop
pop
sbb
jg
cmp
sbb
mov
dec
and
inc
mov
bound
mov
fadds
std
cld
ret
mov
repz
inc
rep
ss
sbb
int3
daa
outsb
lods
cmp
out
push
sahf
int
pop
icebp
xorl
sub
and
ffreep
cs
jecxz
pop
or
mov
mov
sbb
aad
sbbb
mov
lock
xchg
ljmp
inc
popa
addl
or
sub
adc
mov
xor
sbb
mov
iret
jg
stos
sbbl
cld
mov
dec
cli
les
xlat
pop
cmp
ficoml
mov
xchg
sbb
mov
dec
sbb
gs
lea
movsb
mov
adc
fdivl
leave
add
dec
xchg
mov
aam
xchg
mov
cs
mov
push
dec
add
mov
inc
mov
ja
push
pop
sti
jno
push
js
movsb
lahf
jp
mov
fnstcw
fildll
in
mov
aad
les
lods
inc
xchg
add
and
mov
jns
imul
sarb
cld
test
inc
or
jp
sbb
stos
in
loop
xchg
push
cmp
mov
sbb
lahf
sub
dec
pop
pop
xchg
push
adc
lock
add
jnp
fldenv
imul
aad
popa
cmc
jp
sarl
xchg
dec
ja
push
lea
test
xchg
out
sbb
sub
je
jbe
push
cmpsl
jae
mov
cmpsb
outsb
insb
add
pop
in
push
pop
mov
daa
ficoml
cltd
mov
pop
int3
pusha
dec
leave
dec
scas
mov
dec
dec
jne
xor
dec
pop
pop
fisubrs
mov
or
fs
or
fiaddl
movsb
pop
or
or
adc
lods
mov
loope
cmp
sub
inc
push
sbb
mov
fwait
push
rorl
cmp
andb
fnstcw
xor
fistps
pop
inc
ret
dec
mov
daa
jg
xchg
insb
lods
sub
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
enter
and
sbb
xor
or
mov
xchg
adc
add
mov
mov
stos
sti
insb
pop
xlat
or
mov
aas
mov
mov
std
test
lea
mov
mov
pop
sbb
pop
mov
mov
push
add
push
push
jmp
aam
movsb
mov
arpl
test
fcoml
lret
pop
rolb
pop
lods
mov
xor
ljmp
sbb
cmc
mov
push
mov
lahf
adc
inc
nop
push
outsl
lock
and
pop
sti
fsubrl
outsb
lea
xchg
js
jns
xchg
sub
push
add
ljmp
repnz
mov
dec
xchg
icebp
sarb
ret
in
cltd
push
fisubrs
cmp
pusha
negl
jb
push
push
insl
bound
push
mov
ljmp
inc
adc
shll
fmuls
mov
sub
push
pop
in
cmp
test
into
mov
lea
and
mov
mov
jae
cmp
jl
mov
inc
or
out
cmpsl
inc
in
outsb
adc
or
cmp
dec
or
pop
mov
pop
cmpsl
cmpsl
cmc
adc
push
in
push
mov
fbld
je
mov
adc
add
sarl
dec
and
adc
sub
push
out
incl
or
pusha
inc
addr16
sub
push
jb
popa
dec
mov
xchg
and
and
lcall
lret
mov
pop
nop
ljmp
nop
dec
out
push
test
mov
cmp
ret
cmp
dec
add
sbb
sub
clc
xchg
cwtl
sub
lock
mov
or
enter
mov
in
out
ja
repnz
xchg
mov
sbb
cli
addr16
ljmp
es
in
cmp
xor
out
mov
jnp
dec
into
xlat
pop
xchg
in
jl
rcrl
sub
xlat
das
std
push
fs
loopne
in
jnp
int3
cltd
push
mov
push
loope
push
imul
ljmp
jb
in
insl
xchg
mov
imul
lods
push
lahf
outsb
inc
insb
ss
enter
loopne
lds
pop
fsubrl
mov
jbe
in
ret
jbe
popf
mov
incl
test
push
jecxz
leave
sti
xor
pop
xlat
out
jge
lret
pop
pop
lcall
jecxz
stos
xor
sbb
push
push
dec
push
jo
shlb
push
pop
add
out
outsl
rorl
aam
daa
cli
push
lret
cmp
lods
nop
imull
push
cld
mov
push
jecxz
xor
imul
push
sbb
lret
dec
ljmp
pop
jle
jno
das
out
test
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
pop
push
stos
mov
sbb
add
sbb
sbb
daa
xlat
dec
js
clc
stos
push
insb
push
xor
cli
test
cmc
mov
data16
mov
or
pop
xor
inc
ror
push
fildll
sbb
je
out
mov
std
mov
scas
pop
stos
popa
popa
incl
test
cwtl
add
test
scas
inc
and
jmp
jmp
push
out
hlt
bound
pop
sti
jno
inc
mov
cmp
xor
add
mov
jae
fbstp
sub
adc
pushf
ds
repz
inc
arpl
roll
add
popf
fldl
cwtl
mov
push
shr
jecxz
inc
pop
loop
mov
gs
loop
rcrb
in
cmpb
sub
stos
loop
push
add
push
sahf
jo
pushf
dec
push
xlat
cmp
and
lret
nop
arpl
jg
dec
js
xchg
cmpsb
push
mov
cmpsl
xor
sub
pop
pop
sbb
xor
cmc
cld
aam
jno
mov
pop
jnp
cmc
bound
lds
and
xchg
in
jp
push
rclb
sub
sub
xchg
push
clc
push
ds
test
adc
fsubl
pop
sbb
mov
push
cmp
xor
mov
aaa
negb
lds
enter
shll
repnz
test
pusha
call
shlb
shll
test
sub
mov
inc
out
sbb
cmp
popf
aaa
lds
jne
lcall
call
mov
jmp
or
aas
stos
xor
and
jg
mov
data16
jl
sbb
xchg
stc
lret
rorl
imul
mov
adc
xor
cmp
rcr
push
push
nop
add
stos
jae
stos
popa
ds
xor
gs
out
mov
fldenv
jns
aas
xchg
jmp
loopne
push
aas
mov
dec
mov
fs
mov
cltd
lret
pop
xor
cs
mov
fs
icebp
in
out
lods
dec
jmp
fdiv
out
aam
xor
hlt
push
mov
jmp
xchg
stos
movsl
test
add
stos
fs
sbb
add
xchg
cld
push
mov
cmp
mov
push
movsl
xor
sub
pusha
and
and
mov
jb
cmp
mull
or
mov
adc
lods
push
inc
jp
mov
add
js
popf
ds
lret
pop
cwtl
mov
daa
hlt
test
sub
pop
mov
mov
mov
adc
loope
push
std
bound
xchg
mov
arpl
pushf
sti
jp
loope
adc
int3
lods
test
test
int
sub
mov
mov
shlb
aas
shlb
rcll
gs
and
testl
add
in
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
jo
sbb
sbb
adc
sbb
sub
fs
xchg
dec
push
dec
xchg
in
jecxz
out
jb
into
and
repz
dec
jecxz
pop
xchg
or
imul
sub
mov
test
jno
fdivrs
aaa
lods
rcrb
push
dec
jne
mov
cmp
nop
je
xor
ds
lretw
adc
data16
mov
push
jno
or
in
sub
and
mov
inc
add
call
mov
mov
orb
int3
aaa
sahf
jo
mov
cmpsb
cs
xchg
pop
insb
addr16
adc
adc
and
das
pop
mov
outsb
push
jg
popa
inc
loopne
mov
inc
cmp
out
testb
push
xchg
mov
mov
pop
mov
mov
or
cmpsb
mov
or
mov
scas
xor
mov
push
pop
mov
leave
scas
popa
dec
sub
clc
jbe
leave
adc
cmp
fcomps
add
aam
pop
stos
in
and
mov
jecxz
int
xchg
dec
jl
lods
ret
xchg
sbb
stc
in
cmpsb
mov
jb
data16
cmc
jne
jo
sub
sahf
mov
clc
subb
movsb
nop
in
xchg
adc
or
and
pop
push
in
adc
adc
pushf
loopne
cmc
cs
jb
adc
cltd
loop
mov
addr16
xchg
roll
mov
leave
lea
nop
nop
out
cmc
dec
adc
leave
jae
inc
add
out
int
push
adcl
sti
pop
xor
sar
ljmp
or
out
adc
jns
mov
dec
js
fwait
add
jno
fs
aam
gs
stc
push
test
jecxz
lock
xor
in
test
jo
fldenv
mov
fwait
orb
movsl
pop
outsb
xchg
addr16
cmp
and
paddb
and
add
pop
push
xor
push
add
push
imul
inc
ss
fists
dec
movl
int3
cmc
mov
adc
mov
mov
adc
and
gs
xlat
iret
pop
movsb
cmp
dec
inc
dec
std
mov
push
dec
dec
lock
in
int3
dec
dec
jns
mov
insl
xchg
jbe
call
inc
add
sub
and
in
mov
pop
test
jb
enter
adc
or
lret
mov
mov
adc
sbb
cmp
popf
lahf
adc
es
ljmp
inc
out
sub
cltd
and
out
pop
ffreep
nop
inc
mull
gs
enter
ljmp
xchg
adc
int3
sub
sub
and
mov
cltd
test
mov
mov
dec
xor
sub
iret
pusha
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
adcl
sbb
loopne
push
sub
and
insb
aad
clc
jp
dec
rorb
and
aaa
and
add
inc
dec
in
faddp
sub
sub
cmp
dec
xchg
xor
fildll
pop
or
jge
das
dec
ja
mov
shl
movb
cli
dec
xor
jmp
in
xchg
sub
inc
jl
or
int
movsl
pusha
lret
push
mov
ds
mov
sbb
popf
insl
inc
pop
cmc
les
mov
movsb
lds
loopne
adc
insl
or
mov
leave
jp
lret
cltd
fstps
lock
cmc
popf
enter
inc
cmpsb
jo
aaa
jno
es
call
jo
enter
mov
mov
xchg
popa
testl
loope
ljmp
or
icebp
stos
outsb
cmp
aas
lret
in
fwait
sbb
or
call
inc
push
sbb
add
das
inc
ret
mov
test
mov
mov
dec
ljmp
fidivl
mov
cmp
cltd
insl
adc
pop
mov
push
mov
pop
int3
lret
push
popf
in
clc
sub
adc
mov
cmc
xchg
lret
mov
inc
ja
cmp
pop
sahf
insl
in
inc
and
cmp
jnp
or
mov
push
or
hlt
mov
adc
rol
or
or
cwtl
push
cmc
lcall
es
mov
push
fnstsw
gs
mov
jl
push
mov
add
lret
xor
push
scas
repz
outsl
stos
cwtl
push
stos
inc
mov
dec
sbbb
outsb
sub
mov
out
xlat
mov
cmp
cltd
cmp
push
push
xchg
lret
fcoms
iret
out
fmul
xchg
sub
push
fnstsw
xchg
fstpl
int
dec
popf
mov
cmc
mov
lret
mov
inc
lock
mov
movsl
movsb
insl
adc
sub
setb
push
scas
ljmp
push
xor
jo
push
test
sarb
mov
jp
popa
stos
testb
leave
js
push
add
ficomps
xor
stos
int
stos
mov
xchg
and
mov
cli
sub
jle
mov
dec
jl
xchg
jle
imul
js
int
sub
or
scas
aam
sub
movsb
mov
push
jp
cmp
fsub
sub
out
mov
pop
mov
mov
push
xchg
sbb
pusha
jge
mov
mov
inc
rorb
lahf
aad
mov
mov
and
iret
aas
sub
mov
mov
push
pop
add
add
push
jbe
mov
jbe
push
rclb
pop
scas
fsubrs
pop
sub
js
jno
in
sub
sub
js
std
cmc
sarb
fcmovnbe
outsb
scas
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
and
push
or
sbb
push
inc
xchg
shlb
enter
gs
mov
and
clc
inc
insl
cs
pop
push
push
or
jmp
movsb
into
jne
xor
or
and
subb
and
cld
addr16
sbb
jmp
xor
and
ds
int
push
repz
sti
mov
pusha
bound
cmp
inc
inc
mov
repz
lret
inc
fldt
mov
xchg
cmp
test
inc
sbb
rcr
dec
scas
push
mov
mov
xor
sar
es
inc
xchg
or
enter
std
sub
push
adc
nop
dec
mov
cli
cs
xchg
and
pslld
mov
std
enter
aaa
xlat
aaa
clc
fisttpll
or
out
dec
sub
bound
mov
stos
lcall
dec
pop
adc
imul
enter
add
xor
and
push
insl
jb
stos
outsb
lds
mov
jb
sarb
or
cmc
nop
add
xchg
sbb
shll
lods
repnz
dec
jmp
push
test
testb
ret
outsl
shll
fadds
xchg
jle
mov
push
test
mov
and
pushf
das
cmpb
xchg
mov
pop
pop
stos
xlat
shrb
test
aad
pop
outsl
adc
mov
fdivrs
push
sub
pop
in
xor
pop
stos
sbb
mov
cmp
mov
sub
push
in
in
add
xchg
xlat
stos
int3
pop
push
mov
mov
mov
in
sub
call
and
dec
add
or
nop
and
test
sbb
and
jb
sub
cmp
scas
mov
pushf
xchg
nop
cli
outsl
aaa
lock
xchg
mov
jle
or
incb
inc
test
pop
sti
fs
sub
in
jnp
ficompl
in
add
or
insb
xchg
ss
add
stc
dec
mov
inc
mov
xchg
stos
sub
icebp
xor
cmp
cmp
or
mov
pop
iret
push
mov
pop
cmp
inc
in
mov
mov
lds
rorl
dec
lds
es
cmp
popf
pop
jl
fs
adc
mov
dec
push
mov
sub
scas
sub
fisttpl
in
aas
and
push
lahf
aad
icebp
and
lods
sub
jl
jb
add
scas
aas
jle
sti
outsb
scas
rol
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
fists
rolb
sbb
test
sbb
sbb
push
ret
lret
push
or
mov
sbb
jg
sbb
xchg
popf
xchg
push
lret
mov
call
sbb
cmp
mov
popf
lods
add
xchg
xchg
push
mov
push
lods
cmp
call
jle
jecxz
test
jb
add
mov
cmp
hlt
inc
push
inc
mov
push
lret
mov
xchg
lahf
pusha
fldt
jle
add
xor
sbb
pusha
jne
mov
dec
fs
les
cmovns
in
mov
mov
xchg
jmp
sub
adc
nop
adc
imulb
movd
hlt
sbb
push
test
xor
call
fbld
push
jns
lret
pushf
std
test
adc
cmp
pushf
mov
fprem
and
ss
clc
mov
out
push
insl
fcoms
xchg
ret
sbb
or
cmp
cltd
daa
cmp
push
cmp
test
imul
mov
and
adc
fxch
or
loopne
dec
sbb
stc
std
mov
dec
je
pop
adc
inc
mov
in
out
add
cltd
call
lcall
xor
sbb
inc
lcall
mov
das
aaa
xor
rorb
pop
cmpsl
xor
and
movsl
outsb
leave
add
xchg
in
sub
mov
push
sub
das
fsts
pop
xchg
mov
mov
lahf
cmp
leave
pop
and
inc
adc
pop
xor
je
pop
mov
and
cltd
mov
jge
das
jg
insl
rol
cmp
aam
mov
adc
stos
mov
pushf
or
out
cmpsb
dec
rolb
stc
sarl
aaa
jg
cmp
or
lds
int
mov
insl
sbb
push
mov
iret
pop
adc
subl
ds
sub
adc
mov
rcrb
push
fmull
push
mov
push
lahf
scas
adc
dec
stc
lret
add
inc
repz
push
fstl
movsb
jge
jle
dec
dec
ficoml
lock
adcb
or
cmp
fiaddl
sbb
cmpsb
lret
lock
push
andl
pop
mov
outsl
cmp
adc
xor
mov
fldt
xchg
dec
movsl
adc
adc
xchg
mov
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
and
jl
add
sbb
sub
or
mov
push
jg
dec
stos
out
into
inc
std
rcll
repz
inc
dec
inc
or
jns
mov
push
pop
aas
pop
pop
xor
jmp
lcall
jecxz
pop
or
test
aad
push
pop
jbe
push
or
jl
pop
aad
ljmp
sub
pop
push
pop
jae
adc
xchg
ror
roll
aas
das
test
mov
fisubrs
stc
mov
insb
js
mov
loopne
rolb
int
clc
xlat
imul
call
in
arpl
insl
incl
ret
bound
shrb
inc
fmuls
or
loop
movsl
add
es
jp
jecxz
int
imul
inc
push
ja
pop
mov
xorb
in
sbb
push
cmpsb
pushf
mov
insl
or
mov
add
bound
test
aas
adc
and
xor
fwait
shrb
xor
xor
inc
push
int
subb
mov
add
cmpl
sahf
push
es
dec
lock
rolb
fcmovne
sbb
adc
dec
xchg
pushf
or
adc
xorl
inc
push
mov
mov
mov
aad
sbb
xor
push
sbb
inc
dec
push
jbe
popf
add
cmpsl
repnz
pop
cmp
xchg
les
rorb
xchg
xor
ljmp
jl
mov
rcr
jl
in
push
push
fidivrs
outsb
clc
fwait
ror
stos
loopne
int
shl
or
aaa
add
xchg
jle
xchg
subb
and
sub
push
dec
or
xorl
jl
sbb
mov
sub
stos
jns
xchg
mov
shrb
int3
rol
mov
push
idivb
xchg
dec
lcall
mov
xor
movsb
sti
movsl
pop
jns
movsl
pop
lea
test
push
cmp
inc
fdivs
xlat
adc
cmpl
jns
sub
add
jmp
inc
adc
scas
mov
push
stc
in
xchg
stos
arpl
outsl
mov
xchg
adc
and
inc
popa
xchg
outsl
or
andb
sbb
dec
imul
or
or
stos
lret
lods
adc
jp
test
and
clc
cmpsl
stos
push
data16
scas
movsl
mov
xchg
clc
xchg
ljmp
mov
out
adc
jne
sti
stos
xor
xor
dec
pusha
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
mov
sbb
test
sbb
fnstcw
push
inc
imul
mov
icebp
aam
sti
loop
fldcw
icebp
in
mulb
pushf
dec
das
mov
cltd
lret
fadds
pop
push
add
xor
push
mov
out
in
ficompl
out
imul
dec
cld
leave
mov
jl
cltd
sbb
dec
mov
xchg
aas
ret
mov
and
jge
xchg
repz
mov
es
lea
mov
repnz
jb
nop
adc
mov
or
mov
hlt
out
repz
into
pop
cmp
jae
cmpb
push
fbld
sahf
aam
out
pop
sbb
add
js
or
jno
int
push
push
ds
testl
xchg
cmp
sbb
mov
xor
lcall
xchg
mov
mov
mov
xor
outsl
and
ret
pushf
ss
lret
das
mov
mov
mov
pop
pop
es
and
pop
add
inc
rclw
pusha
and
lds
add
mov
adc
addr16
aad
js
and
jmp
cmp
xchg
pop
pop
movsb
mov
pop
jne
pop
jbe
push
movsl
dec
hlt
and
fs
fwait
lahf
fistl
mov
fwait
bound
xor
push
pop
rclb
mov
in
pop
pop
sbb
cltd
push
xor
push
dec
jns
rcrb
jno
test
jp
ret
mov
cmp
cmc
mov
cli
stos
mov
sar
jmp
imulb
inc
jb
jb
sar
leave
mov
inc
push
rolb
sahf
cmc
xchg
int
hlt
ja
push
shld
and
add
stos
mov
cmp
sub
imul
test
inc
leave
out
jae
int
add
lds
test
inc
daa
out
aaa
cmpsb
mov
mov
in
shrb
push
push
or
stos
fisttpl
cli
roll
dec
mov
cmp
push
inc
mov
mov
push
scas
dec
int3
xchg
mov
or
add
mov
pop
cmp
adc
dec
cli
mov
je
data16
jmp
inc
cmpsb
stc
xchg
and
dec
cltd
push
inc
sar
std
es
movsl
aam
lret
jno
dec
aam
ffreep
cmc
lea
out
jae
notl
cmp
ds
mov
aad
cltd
dec
out
push
fwait
xorl
mov
movl
movl
movl
movl
jmp
push
mov
fistpl
jno
jnp
xor
sbb
push
das
shl
je
not
mov
pop
add
pop
or
into
loop
shll
cmp
pop
pop
dec
sbb
fsubs
inc
push
stos
jmp
jg
subl
mov
cmpsb
int3
ret
andl
imulb
inc
pop
sti
cli
pop
push
inc
pop
or
push
push
cbtw
add
inc
es
mull
and
test
xor
rclb
push
inc
xchg
repz
loop
ret
xchg
jg
xchg
sub
add
inc
mov
mov
nop
orb
fadds
ret
outsl
mov
cli
repnz
aad
je
cmp
mov
cmp
mov
cmc
in
or
jo
jb
call
adc
pop
movsb
in
inc
adc
push
pop
mov
xchg
je
fmull
sahf
test
out
pop
jb
or
adc
pop
sarl
adc
lret
cwtl
shlb
pop
stos
or
xor
push
jmp
or
sub
loop
aas
daa
mov
cltd
xchg
les
push
leave
movsl
mov
add
ficompl
xchg
jge
sub
js
push
test
mov
jl
mov
xor
cmp
test
ja
mov
scas
inc
dec
or
adc
pusha
ljmp
dec
cld
es
sub
popf
mov
pop
mov
mov
push
jae
enter
pop
les
daa
mov
in
loop
jno
or
jmp
lock
fs
cld
test
add
mov
cmpb
bound
fistpl
dec
lds
shrb
jl
inc
pop
in
adc
dec
push
adc
test
inc
mov
in
push
xchg
or
scas
mov
aaa
jp
es
test
xchg
insb
mov
icebp
test
rorb
mov
push
mov
sbb
imull
hlt
int
iret
jg
jl
fcmovne
into
lahf
addr16
inc
jb
js
aad
xchg
sbb
movsl
or
call
pop
or
insb
jno
inc
aam
lea
sub
mov
jae
mov
mov
movsb
into
es
or
in
fiaddl
sbb
sbb
jge
lock
ja
mov
or
mov
sub
pop
xchg
add
lret
in
cmp
stc
call
dec
sub
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
xlat
mov
test
sbb
add
xchg
mov
cmpsb
in
ret
pop
fwait
test
xlat
in
mov
adc
in
idivb
xchg
sub
jge
aam
cmp
popa
jbe
shlb
jae
add
or
out
mov
push
enter
shr
mov
sub
rorl
mov
mov
pusha
ficoml
movsl
je
mov
into
dec
mov
out
loopne
dec
jmp
popf
adc
ret
mov
enter
inc
inc
sbb
xchg
xchg
inc
mov
fidivs
std
jbe
cli
int
xor
adc
dec
dec
out
mov
and
stc
push
xchg
cmp
mov
xor
adc
pop
ljmp
test
cs
push
popf
stc
xchg
into
add
mov
sti
jecxz
jg
frstor
jg
mov
cmpsl
imul
lds
jbe
adc
into
testl
rdtsc
push
loop
or
jnp
inc
arpl
xchg
adc
stos
into
inc
and
sub
mov
sub
add
lret
ljmp
ret
cli
lahf
lods
xor
mov
pop
std
stc
push
aam
and
or
jecxz
pop
rclb
bound
cwtl
push
std
sbb
mov
bound
sti
lcall
and
mov
fcmovb
stos
insb
cmc
verw
jnp
jp
nop
dec
shl
inc
xlat
hlt
xchg
inc
mov
push
or
pop
stc
mov
push
pop
int
ret
dec
into
add
adc
lret
mov
sub
push
add
inc
lcall
push
sub
loopne
adc
jno
lret
or
aaa
out
imul
jge
add
push
pusha
lcall
inc
lods
addr16
jge
dec
clc
cmp
loope
inc
pop
xor
push
loope
jge
mov
loopne
mov
incb
lret
movsl
pop
das
cmp
icebp
popf
push
data16
shrl
sub
je
fldl
imull
jg
inc
mov
add
mov
call
test
adc
xchg
dec
or
and
jp
arpl
push
icebp
ja
adc
inc
inc
loopne
lods
pmaddwd
pop
adc
xchg
vmovaps
inc
lods
cmpsl
sub
jge
out
dec
xchg
outsl
das
jmp
add
loopne
and
pop
cmp
xor
push
je
popa
stc
inc
movsb
xor
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
dec
iret
jo
ljmp
pop
push
repz
inc
mov
fists
adc
imul
test
inc
cmp
into
lret
addr16
shr
dec
aas
and
and
mov
imul
lock
or
xchg
popf
es
jo
mov
add
mov
lods
add
imul
lods
dec
xchg
mov
out
jecxz
xor
fdiv
fwait
testl
or
jns
ljmp
mov
or
pop
mov
xor
push
xor
pop
sbb
jp
dec
and
repnz
fnstcw
push
shrb
xor
lcall
xor
sub
mov
adc
stos
dec
xor
push
cmp
jg
push
xor
test
add
cltd
xor
outsb
jg
dec
sbb
sahf
xlat
push
or
add
les
imul
ss
jle
mov
enter
mov
pop
cmc
mov
and
in
xor
rcll
fadds
icebp
ret
inc
xchg
in
and
jae
loope
and
call
sub
int
jmp
into
loopne
xchg
xchg
jb
iret
sub
jle
fisubrl
fsubr
fcomi
cmp
arpl
popa
mov
icebp
int3
out
std
sbb
push
das
div
add
push
mov
jl
mov
arpl
popf
ja
mov
in
jecxz
and
or
push
mov
dec
sub
mov
jno
sbb
and
inc
pop
mov
insb
mov
xchg
and
loopne
mov
shl
pop
sbb
test
dec
sbb
shlb
mov
loop
clc
xchg
xor
xor
jne
fwait
mov
pop
mov
cmpsb
mov
and
lds
int3
and
dec
sti
movsl
mov
test
dec
sahf
frndint
adc
js
jns
and
dec
lret
or
mov
mov
ds
cltd
pop
dec
cmp
xor
idivl
fwait
push
and
ss
xchg
fiaddl
gs
sbb
push
je
xor
mov
mov
call
xchg
imul
sbb
jecxz
hlt
xor
lret
sbb
jns
fmull
loop
sahf
xor
sarl
sub
mov
sbb
out
jo
xor
xchg
pop
rorb
lahf
mov
lcall
push
lods
scas
xor
dec
cmp
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
jge
push
out
sbb
rolb
pushf
scas
pop
dec
sub
fisubrs
mov
lret
movsb
mov
out
pop
rol
mov
pop
add
xor
mov
cmpsb
mov
out
movsb
fwait
xor
ret
xchg
icebp
cld
jne
xor
subl
subl
add
xchg
scas
push
lcall
sbb
pop
test
cmpsb
daa
popa
inc
sub
sbb
xchg
js
mov
sbb
mov
mov
jecxz
das
add
adc
dec
mov
mov
mov
xchg
mov
sarb
loope
mov
cmp
loop
xchg
and
das
jge
pusha
sbb
in
enter
leave
lea
dec
and
frstor
or
add
inc
adc
sbb
in
imull
xchg
mov
and
adc
insl
xchg
xchg
or
outsb
stc
cmp
pushf
push
sub
jne
pop
dec
jecxz
xor
insb
test
pushf
mov
idiv
roll
xchg
imul
in
xor
push
adc
dec
sahf
scas
stos
sub
lock
adc
call
xchg
jae
imull
int3
mov
pop
push
sub
pop
aam
mov
movaps
in
sbb
das
jp
cmp
sti
and
cmp
pop
in
and
add
jmp
and
cmp
push
jge
popa
test
jp
adc
stos
ficompl
pop
inc
test
bound
sub
dec
lods
in
bound
fmull
dec
shr
xchg
dec
push
dec
idivb
inc
cwtl
inc
ss
addr16
xor
test
xchg
inc
mov
repnz
in
jb
jp
loope
stc
rclb
push
lret
mov
cltd
xor
mov
push
xchg
int3
leave
decl
cmpl
mov
mov
inc
gs
cmc
add
lea
push
or
ret
add
aaa
loopne
scas
sbb
mov
push
test
gs
icebp
aam
sbb
lahf
loope
shl
xchg
cmc
or
je
rcr
outsb
movb
out
jmp
push
push
test
pop
or
lock
jae
fwait
push
test
arpl
sub
push
sub
ja
loope
add
cmpsb
test
jp
ljmp
inc
jo
lds
xchg
inc
fdivr
mov
out
gs
jp
popf
int
ret
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
push
loopne
sbb
fwait
shlb
into
cmpsb
push
inc
jnp
mov
repz
mul
cmp
mov
fwait
xchg
ja
cmp
pusha
mov
xchg
int
les
inc
pop
and
dec
outsl
arpl
jo
inc
and
insb
repnz
jmp
jae
movsb
push
jle
jnp
nop
inc
mov
ja
mov
pop
sub
and
push
dec
nop
sub
mov
imul
sub
outsl
push
arpl
cmpsl
cmp
mov
jnp
mov
or
inc
fiadds
in
jp
xchg
cmp
in
sbb
scas
pop
popf
add
jl
cmp
mov
xor
push
cmpsb
addr16
ret
out
pushf
xor
pop
jl
movsl
in
adc
out
dec
rcrb
mov
pushf
insb
movl
mov
jle
xchg
sub
aad
pusha
jle
testl
jg
inc
ds
stos
pushf
push
ret
shr
sbb
cmp
sahf
push
push
dec
pusha
mov
lods
pusha
mov
xchg
pusha
movsl
dec
and
mov
incb
ljmp
xchg
loopne
mov
pop
es
push
adc
sbb
mov
outsb
repz
sub
jl
fsubp
mov
pop
mov
xor
mov
dec
and
inc
gs
mov
mov
dec
push
out
incb
das
shrl
fidivrl
xchg
or
jp
mov
cmpsl
clc
bound
iret
roll
scas
sti
inc
mov
loop
xor
xchg
push
and
arpl
dec
cmp
cwtl
pop
mov
mov
mov
pop
pop
add
popf
lods
pop
aam
scas
adc
mov
push
hlt
lret
out
xchg
data16
and
dec
test
shl
add
mov
nop
in
push
mov
xor
mov
jnp
and
divb
adc
out
das
or
shrl
ljmp
sbb
and
add
lods
leave
lret
jns
js
mov
mov
lret
int
pop
fcoml
mov
idivl
mov
or
decl
cmp
cs
aaa
insb
mov
pop
and
push
outsb
push
arpl
mov
sbb
add
ljmp
and
call
add
std
jmp
fidivrl
xchg
and
pop
int3
cwtl
cmp
dec
sti
sti
ret
imul
imulb
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
pushf
popf
jo
ficompl
sbb
adc
sbb
das
cmp
inc
add
int3
add
xor
fs
lock
cmp
ss
dec
mov
rcl
pop
test
xchg
mov
sbb
stc
int
mov
xlat
xchg
lds
mov
xchg
mov
adc
mov
inc
add
mov
pop
stos
lret
push
push
aam
pop
scas
pop
ljmp
outsb
mov
fidivl
outsl
jg
mov
aas
inc
dec
jnp
call
ss
fisubrl
push
pop
push
mov
xlat
cmp
xchg
mov
mov
inc
sub
cmp
fisubrl
in
pop
or
leave
push
fwait
xchg
lcall
push
imul
jmp
adc
push
jo
data16
xor
out
fcomi
pop
dec
sub
adc
aas
test
out
mov
insb
push
mov
fistl
xchg
ja
adc
mov
pusha
fucom
cwtl
push
data16
movsb
push
push
and
jecxz
mov
mov
cltd
leave
sti
mov
jl
cmp
lods
mov
xchg
lcall
aam
lock
nop
movl
fstp
or
jmp
push
push
cltd
push
test
pop
les
adc
cmp
lret
dec
addl
and
mov
aaa
push
and
incb
js
dec
push
andb
shlb
mov
lahf
cmp
mov
popf
mov
dec
jns
push
xchg
dec
push
cmp
push
push
ja
jae
xor
or
xchg
lret
mov
jnp
call
into
xor
cwtl
orl
or
fcompl
sub
gs
scas
test
aad
movsb
xchg
dec
cmp
xor
aam
dec
shlb
inc
ljmp
inc
sub
pop
sbb
push
xchg
pop
test
pusha
pop
int3
negl
pop
mov
or
adc
lock
push
jle
lahf
pop
lds
mov
jmp
push
outsl
loopne
xchg
push
adc
shlb
lret
out
pusha
lret
xor
inc
dec
and
scas
and
lods
cld
jecxz
sub
xchg
fistpll
lock
adc
out
sbb
les
mov
mov
ret
mov
imul
imul
out
ja
cmp
xchg
inc
gs
xor
push
lea
pop
push
pop
rcll
cwtl
sub
xchg
stc
sbb
inc
push
adc
lock
mov
jp
push
push
jb
lahf
xchg
clc
or
add
sbb
dec
xor
cmp
jle
mov
pop
loopne
insl
jg
stos
xchg
sub
fxam
fimuls
repnz
sbb
in
xor
or
pop
mov
jle
movb
shr
xor
xchg
cmp
rclb
add
pop
mov
fisubrl
mov
jmp
push
rcll
lods
or
xchg
loope
dec
push
mov
cmp
dec
pop
dec
je
or
add
xor
mov
sub
aaa
push
popl
test
into
sub
cmp
sahf
mov
mov
cmpsl
arpl
push
loop
push
daa
jno
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
mov
sbb
xor
sbb
cwtl
fldcw
sub
fldcw
mov
mov
sub
fstpl
and
add
mov
shrl
push
outsl
scas
inc
mov
add
inc
test
push
xchg
test
dec
push
ja
hlt
pop
mov
jmp
jnp
and
leave
nop
cmpl
testb
inc
xor
pop
ret
cli
stc
inc
inc
fwait
imul
icebp
movsl
hlt
imul
pop
stos
cmp
and
pop
xor
fadd
jecxz
int
push
xchg
daa
cmp
pushf
aas
das
push
int
push
dec
in
ret
mov
pop
adcb
push
jnp
jne
jne
in
gs
insl
jae
mov
fidivs
jbe
jmp
into
cltd
jne
cmp
movsl
sarb
jno
xchg
mov
or
dec
inc
push
adc
lahf
xlat
mov
lods
mov
fimuls
rcl
mov
cmp
lods
mov
mov
or
js
xlat
sbb
mov
mov
outsb
fs
ret
bound
xchg
int
xorl
cli
sub
add
mov
enter
dec
aam
into
sbb
aad
in
shlb
inc
sub
lods
sbb
outsl
imul
xor
into
dec
and
inc
imul
negb
popf
inc
mov
mov
or
insb
jg
leave
hlt
and
mov
test
and
int3
rolb
xchg
mov
mov
int
xchg
sub
repnz
mov
lret
rol
inc
aas
sbb
add
aad
subb
mov
mov
out
jbe
lea
dec
in
pusha
andl
jge
push
pusha
push
mov
hlt
jns
movsl
mov
dec
out
add
sub
or
lret
loope
in
push
rcrb
push
pop
pushf
negb
loop
lret
jge
mov
jae
sub
and
jecxz
cmp
adc
cmp
or
jle
lods
cmp
sbb
jmp
jno
jmp
mov
inc
sub
dec
cs
and
aas
jge
jmp
scas
or
popf
push
mull
push
imul
call
mov
lods
fs
shrl
mov
pop
mov
test
pop
pop
cmp
sbb
es
addl
or
mov
cmp
inc
sahf
mov
xor
cmp
sub
pushl
mov
cmpsb
xchg
pop
cld
lods
sub
mov
xor
cmp
rcrl
push
add
lcall
mov
das
pushf
xor
or
xor
inc
test
lods
dec
push
shlb
test
adc
jae
xorl
mov
mov
jge
cmpsl
jae
mov
lds
dec
ljmp
andl
jmp
jg
adcb
sub
popa
test
cmc
scas
pop
scas
jbe
sub
insl
cltd
push
adc
push
leave
popa
out
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
pop
je
sub
shrl
popa
mov
repz
inc
repnz
mov
cmp
jp
rcrl
cwtl
or
cmp
popf
insl
in
sub
ss
mov
adc
aam
mov
xchg
scas
les
push
cs
add
test
lea
ficoml
mov
sub
xchg
add
cmp
jg
sahf
enter
popf
in
ja
aaa
lcall
dec
xchg
mov
mov
stos
adc
cltd
xor
add
jp
cmp
pop
cli
cmp
and
iret
xchg
mov
sub
mov
scas
push
mov
mov
pop
xor
jnp
sub
mov
clc
nop
adc
sub
pop
pushf
jge
ljmp
test
mov
xor
shrb
or
sbb
and
and
loop
push
push
mov
pushf
jecxz
in
inc
sub
loopne
js
cmp
xor
imul
into
cmp
xchg
push
sub
and
int
and
fsubrl
mov
lock
adc
scas
daa
outsl
mull
sbb
mov
mov
add
mov
mov
add
cmp
mov
pop
mov
xor
negl
mov
dec
sbb
xchg
popa
sub
lcall
ja
xor
xchg
mov
jge
divl
and
adc
inc
orb
and
ret
shll
push
xchg
popf
call
das
out
ja
fcoms
das
ret
and
aaa
outsb
push
adc
lcall
push
mov
dec
or
sahf
pushf
jecxz
aad
jae
xor
sbb
pop
stos
adc
dec
xchg
xchg
out
lret
shll
mov
push
les
test
push
fwait
xchg
stc
cmpsb
xor
bound
fwait
push
adc
mov
push
jo
mov
jnp
or
xchg
xchg
adc
push
sbb
adc
xor
mov
push
add
lds
inc
in
lcall
das
mov
pop
jle
push
and
ds
sahf
cmpsb
jle
mov
insl
outsl
inc
insb
enter
xchg
mov
movsb
and
sbb
push
push
stc
shrl
dec
mov
loopne
sub
les
mov
sti
adc
ret
fcomps
rcrb
in
sub
in
jl
push
mov
outsl
les
add
sahf
int3
jo
mov
aas
adc
stc
inc
xchg
lock
pop
mov
mov
dec
jp
add
and
out
jg
sbb
push
ss
sbb
shl
or
and
push
pop
pop
rorb
xchg
jmp
fcom
xchg
push
flds
rcrb
stos
imul
rdtsc
mov
lcall
inc
outsl
sahf
inc
cld
push
pop
or
mov
fadds
or
repz
in
mov
and
sub
cmp
lea
lcall
shlb
fiaddl
test
cs
add
or
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
inc
mov
jle
sbb
xor
sbb
fbld
mull
test
pop
sub
ret
shll
mov
loop
cmp
jmp
std
subl
mov
fistps
jmp
mov
or
or
sbb
loope
mov
fmuls
aaa
ret
imul
mov
add
pop
and
cmpsb
xor
pop
add
cld
das
jns
test
sub
insl
aam
sbb
stos
xchg
jp
or
dec
rcr
inc
mov
adc
shrb
sub
adc
fidivrl
sbb
xchg
call
insb
xchg
or
dec
fnstenv
xchg
mov
loope
or
sti
mov
in
ret
imul
negb
or
adc
jno
lcall
pop
sbbb
fdivrl
mov
pop
test
mov
test
sbb
mov
push
adc
xchg
ljmp
insb
and
mov
pop
iret
lret
cld
rcll
leave
or
mov
enter
loope
insl
out
pushf
push
push
add
and
ret
pop
shll
cli
mov
xlat
lret
pop
lret
int
rcrb
mov
loopne
mov
in
icebp
cld
mov
inc
xor
loopne
dec
sub
mov
test
push
jecxz
sbb
out
add
stc
pop
loop
dec
xchg
sbb
dec
inc
insl
in
pop
js
leave
push
jns
add
pop
xor
mov
inc
outsb
xchg
ja
pop
or
dec
repnz
sub
cmp
scas
and
sti
cmpsl
jne
outsb
popa
scas
and
mov
js
adc
ret
and
rcr
jb
out
and
pop
out
pop
and
lahf
shll
sub
mov
mov
adc
jp
in
mov
sbb
push
and
cmp
mov
out
lock
pop
jne
pop
dec
xchg
test
xchg
mov
cld
push
add
pop
xchg
lods
mov
adc
std
pusha
pop
xor
repz
mov
jl
test
lods
shrl
and
pop
shll
sbb
cmp
std
repz
inc
orb
push
xchg
sub
lret
jecxz
xchg
add
and
cmc
sbb
xchg
jnp
lret
mov
test
fcomi
mov
or
dec
lds
arpl
inc
push
inc
stos
mov
dec
mov
out
mov
xchg
pop
cwtl
cmp
adc
cs
add
mov
adc
and
pop
adc
popa
les
daa
pushf
insl
pop
aas
in
rcll
das
aad
fdivr
adc
pop
inc
ds
inc
test
xchg
xor
cs
popf
xor
mov
popa
fidivrs
mull
push
ds
pusha
jns
js
data16
xchg
sub
and
jmp
fnsave
fstpt
popa
icebp
cmc
mov
xchg
or
sarb
inc
mov
pop
cmp
call
or
dec
addr16
cmc
jnp
addr16
and
icebp
adc
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
rorl
mov
sbb
xor
sbb
jbe
cmc
div
leave
cmp
jns
push
mov
and
shll
pop
stc
inc
pushl
enter
test
adc
mov
inc
scas
mov
jg
mov
inc
repz
sbb
sahf
cli
mov
and
push
out
sbb
pusha
je
dec
iret
or
shlb
cmpsb
movsb
mov
or
sub
outsb
shrb
or
dec
xor
mov
out
bound
stos
xchg
jge
cmp
out
mov
lds
xchg
and
sub
mov
jge
data16
add
pop
or
jg
je
test
add
and
and
daa
jb
jmp
mov
lock
adc
or
xchg
jnp
mov
lock
lods
mov
sbb
cmpb
repz
inc
mov
popf
aam
fcmove
cmp
jecxz
xchg
test
inc
loope
bound
cmp
mov
dec
int3
outsb
fwait
and
roll
jge
repz
xor
cmc
jge
mov
arpl
adc
lahf
mov
xchg
or
jmp
rsqrtps
xchg
out
out
mov
or
mov
mull
mov
pop
lret
test
cmc
push
ss
in
push
and
and
mov
scas
pop
mov
pop
add
pop
fsubrl
pop
test
das
out
pop
js
flds
pushf
or
movsl
sbb
into
xor
or
aad
sbb
push
push
adc
mov
xchg
mov
data16
insl
popf
lcall
out
je
xchg
xchg
insl
ljmp
testb
xor
add
dec
mov
add
sub
andb
dec
leave
outsb
or
leave
dec
add
inc
aas
sbb
arpl
inc
dec
mov
add
adc
sbb
movsl
dec
cmp
in
or
aad
out
pop
xor
and
jmp
push
mov
fistps
or
and
mov
jmp
ja
xorb
int3
loop
pop
out
dec
mov
xorl
idiv
inc
fimuls
pop
fucom
dec
sbb
aas
aam
pop
lods
or
ljmp
xor
jecxz
sahf
into
push
fdivrs
lock
arpl
repnz
or
xchg
inc
inc
xchg
mov
loope
clc
cmp
aaa
lret
xor
lods
jl
das
jns
inc
adc
sbb
push
push
jmp
andb
dec
add
push
loopne
dec
stos
mov
in
mulb
out
push
data16
mov
mov
pop
pop
mov
mov
leave
jg
out
ret
lea
pop
rolb
call
xlat
aad
push
and
pop
das
iret
cmp
loop
push
dec
ret
daa
in
daa
dec
push
addr16
push
pop
int
push
loopne
inc
iret
test
call
fdiv
push
enter
cmp
add
test
sub
out
call
mov
adc
out
pop
aaa
xlat
lret
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
push
or
mov
sbb
ss
iret
sub
adc
out
jecxz
enter
mov
lcall
in
daa
mov
jge
insl
mov
xor
das
arpl
cld
lret
and
push
cmpsb
fs
xchg
pavgb
mov
stos
push
sbb
in
repz
adc
xorb
push
jg
pop
gs
jo
int
xchg
push
stos
ret
pop
sbb
mov
or
loope
stc
stos
push
jp
and
pop
imul
scas
adc
mov
ljmp
jns
push
icebp
rcll
dec
pop
scas
ret
mov
xchg
jbe
pop
es
insb
lret
jge
rol
lods
push
push
out
mov
cmp
pop
jge
jb
fsubs
jb
xchg
das
push
rcrb
ret
adc
jno
cmpsl
ds
andb
out
add
mov
add
xchg
aaa
out
fwait
pop
loopne
push
xchg
push
xchg
mov
mov
mov
cmp
inc
push
jb
jl
lea
adc
orb
or
or
mov
loop
mov
pop
push
dec
rcrb
shr
inc
mov
jp
pop
mov
sbb
aad
push
adc
lcall
fcmovne
add
push
add
pop
push
in
jae
xorl
push
les
xlat
cmc
repz
and
inc
mov
arpl
xchg
jle
adc
push
rorb
fidivrs
pop
ss
mov
sbb
repz
adc
push
cli
shrb
push
push
in
outsb
js
fstpl
xchg
or
mov
adc
aam
adcb
stos
xchg
xor
mov
das
xchg
cli
loop
jnp
cmp
leave
sbb
sub
loopne
pop
sub
push
xchg
jge
xchg
xor
sbb
adc
pop
push
dec
dec
pop
ficomps
in
popa
sahf
push
outsl
and
mov
and
cmp
mov
mul
jmp
push
xor
adc
lcall
adc
jecxz
std
sar
out
enter
rcl
mov
fsub
fld
jb
xchg
jne
in
pop
inc
aaa
out
jae
jge
test
mov
jmp
mov
ljmp
std
movsb
lcall
lock
mov
test
pop
int
pop
and
mov
mov
mov
loopne
mov
push
out
lahf
add
fcoml
jbe
rorl
mulb
sbb
in
stos
xchg
adc
mov
adc
dec
jae
movsl
cmp
pop
in
xchg
adc
daa
adc
pushf
mov
dec
lahf
jmp
rorl
xchg
jns
lcall
xor
jmp
fldz
test
xchg
jg
dec
lods
inc
push
inc
aaa
lods
ret
lock
cmc
cmp
addl
pop
repnz
in
add
scas
mov
out
jae
add
in
loop
jnp
lret
or
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
pop
fwait
jo
mov
sbb
adc
sbb
frstor
xor
jae
cld
ss
subl
cmp
mov
dec
and
cmp
jne
push
fwait
xor
lods
testl
mov
pop
aam
mov
mov
lods
aas
add
fs
jge
aaa
test
mov
je
xorl
cwtl
dec
pop
fimuls
and
and
jns
lret
enter
loope
stos
jecxz
jg
and
lahf
sub
outsb
cmp
int3
inc
fcompl
ja
enter
scas
push
mov
enter
and
xor
int
enter
test
shrb
clc
in
jg,pt
pop
sahf
pop
inc
call
popf
sub
xchg
test
lcall
fldenv
aaa
in
fldt
mov
and
sbb
sarb
inc
nop
enter
jle
inc
filds
sbb
adc
lods
sti
mov
jbe
enter
xor
pop
push
aas
out
dec
pop
cmc
adc
mov
enter
aam
pop
pop
fistpll
push
pop
add
popf
xchg
sub
xor
inc
pop
jmp
sub
mov
les
cmp
pop
enter
xor
push
in
lea
rclb
pop
iret
mov
mov
ljmp
cwtl
mov
push
dec
stc
lret
cwtl
push
inc
cmp
push
imul
aas
add
ljmp
and
cmpb
iret
adc
sbb
jmp
mov
push
and
test
fimull
test
xor
pop
out
int3
lds
jbe
out
adc
jl
outsl
lea
lret
xchg
jns
or
xchg
out
or
out
repz
call
lds
xchg
shll
sub
aaa
movsl
jnp
jp
or
mov
sbb
mov
daa
mov
xor
dec
mov
movsb
adc
cmp
push
out
mov
cmc
xchg
and
decl
mov
ss
stc
popf
imul
add
in
mov
jbe
lea
test
cmpsb
mov
adc
and
stos
adc
jae
dec
adc
cwtl
movsb
popa
jle
rorb
cmpb
std
sub
xor
jns
aam
mov
outsb
mov
stos
cltd
into
ret
xor
mov
cli
mov
mov
mov
pop
xchg
fwait
jg
in
xor
jns
mov
inc
inc
xchg
cmpb
push
std
fs
je
xchg
sti
mov
fs
dec
lahf
mov
push
jge
xchg
jb
scas
mov
loop
inc
insb
in
inc
jne
fnstsw
fstpl
sub
push
fisubrl
inc
jl
pushf
popf
adc
mov
ficompl
xchg
dec
pop
dec
stos
pop
push
sbb
punpckldq
jg
add
aaa
std
out
xchg
pop
xchg
inc
push
xchg
scas
push
inc
cmpb
sti
out
idiv
sub
mov
ss
scas
sub
fildl
mov
inc
add
add
xchg
cmp
andb
mov
push
int3
jb
insb
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
mov
stos
sbb
test
hlt
pop
xor
jo
xchg
movsl
adc
jmp
int
inc
shll
popf
jecxz
or
pop
fisubrl
mov
jne
lods
sbb
or
icebp
jg
adc
xor
pop
mov
in
pop
test
ss
lock
es
mov
cmp
je
insl
adc
jnp
or
stc
nop
test
push
jmp
jnp
jne
add
mov
or
push
push
fcomi
inc
lds
or
lcall
mov
fistpll
jle
mov
push
lea
push
push
sub
sbb
cs
movsb
or
pop
adc
cli
mov
push
test
lods
mov
push
cs
ja
mov
sub
push
jbe
fistl
pop
mov
sti
jnp
jo
cmp
in
adc
jl
push
test
imul
mov
movsl
cs
dec
out
mov
add
clc
xor
xor
data16
fs
adc
stc
dec
fists
xchg
adc
fwait
stos
inc
inc
pop
loop
imul
pusha
cld
and
pop
lret
push
push
es
mov
mov
sub
push
xor
lods
pushf
push
ret
filds
fwait
inc
decl
data16
jne
ljmp
scas
cmc
ficoml
xchg
dec
out
movsb
push
add
outsb
scas
adc
push
xchg
sbb
test
into
je
sbb
cwtl
into
ffree
mov
mov
movsl
pusha
mov
sub
dec
push
cmpsl
lret
adc
jne
pop
push
test
je
aaa
jmp
clc
mov
lahf
test
mov
test
test
and
pushf
jecxz
daa
sahf
inc
mov
fsubrs
jg
jae
int
outsl
cld
fsubrs
push
pop
lods
push
mov
scas
aaa
imull
incb
pop
cmpsl
mov
leave
adc
jo
outsb
fnsave
sbbb
shll
inc
and
imul
push
bound
mov
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
into
movsl
sub
movsb
test
push
mov
fsubrs
or
sbb
mov
scas
out
pop
mov
shrb
or
xchg
inc
inc
pop
inc
jp
mov
mov
adc
imul
cld
aam
add
mov
lret
mov
mov
leave
push
mov
sub
mov
push
mov
and
mov
data16
imul
in
lret
and
jnp
lcall
and
add
mov
leave
jg
lds
and
shlb
sbb
out
pusha
pop
and
push
aad
je
fbstp
mov
lret
push
mulb
inc
sahf
and
inc
mov
add
mov
das
pop
mov
aas
ja
addr16
loopne
iret
push
mov
aad
bound
ss
mov
cmpsl
mov
orb
mov
xorl
add
iret
ficoml
jnp
sub
sub
lea
inc
icebp
call
sbb
cmc
mov
in
push
orb
jo
mov
mov
lret
stc
jmp
push
sbb
mov
jne
or
jge
iret
or
sbb
push
dec
pusha
sub
arpl
push
pop
repz
in
and
mov
xchg
pusha
add
push
push
cmpsl
negl
cwtl
pop
leave
repnz
stos
cmp
jns
lret
mov
lahf
lods
jl
lret
mov
push
fistpll
dec
sbb
pop
addr16
rcrb
and
aaa
mov
and
push
nop
mov
inc
jp
mov
mov
adc
and
jbe
testb
jge
xlat
fisubrs
incb
js
sub
push
xchg
dec
mov
mov
push
cmp
dec
push
repz
sub
jbe
xor
jne
push
in
in
adc
sub
pop
pop
clc
cltd
cmp
lods
dec
pushf
sbb
push
cmpsb
pusha
dec
push
js
into
fwait
out
and
scas
push
mov
and
movsb
scas
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
pop
shll
sbb
sbb
or
inc
fists
or
mov
fldenv
aas
rclb
lret
pop
xor
and
or
fldpi
mov
paddb
loopne
movsb
dec
and
cmp
rcrb
and
icebp
mov
push
xor
sarb
and
cmpsl
push
test
iret
or
repnz
shrb
pop
push
mov
sbb
in
ds
lods
movsl
sub
mov
outsb
aas
fldcw
inc
sub
push
sub
and
sub
push
mov
daa
bnd
sti
or
cmpsl
pop
std
clc
loopne
repnz
add
loopne
sub
inc
add
sbb
idivb
in
mov
shlb
cmp
mov
scas
shll
dec
lcall
sub
adc
sbb
inc
push
mov
repnz
cmp
add
jo
mov
sub
inc
sbb
jb
fwait
add
gs
sbb
mov
and
sub
and
fsubl
mov
aad
xor
mov
xchg
xchg
xor
pusha
xor
bound
imul
enter
cmp
sbb
pop
inc
push
lcall
cmpl
pop
dec
pop
or
cli
shll
scas
aad
pcmpgtb
add
dec
mov
xchg
aam
js
out
stc
jbe
decl
leave
mov
jno
ret
push
and
jecxz
andb
hlt
mov
add
xchg
jle
fisubrl
repz
in
jle
out
ret
jle
jne
fmuls
lods
aam
cmp
aam
movsl
jae
lods
dec
shll
jge
not
jne
scas
clc
jmp
imul
cmp
pop
ret
shll
mov
imul
jge
enter
xlat
pop
and
mov
jne
leave
in
cmp
sbb
int3
and
pop
pop
mov
iret
ljmp
dec
outsb
enter
dec
jmp
jne
mov
and
cmp
jl
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
out
fstpt
pushf
sbb
test
xchg
or
push
mov
insb
outsb
push
mov
xchg
pop
aam
popf
inc
jbe
aaa
and
cmp
scas
and
push
push
jle
rcrl
sub
push
enter
xchg
ds
aas
sub
testl
xchg
pushw
lds
adc
test
push
jp
mov
and
push
fsubr
cmc
or
add
jle
adc
cmp
or
icebp
insb
xchg
es
rcll
js
jg
mov
jecxz
mov
adc
lock
dec
mov
stos
cmp
mov
hlt
imull
xor
cmpsb
sbb
and
push
subb
inc
enter
clc
adc
arpl
jmp
dec
or
cld
jne
lret
clc
scas
pop
sub
push
xorl
pop
adc
call
mov
pop
gs
jae
insb
mov
mov
jmp
repz
lods
pop
movsb
inc
adcl
hlt
bound
adc
xor
mov
sbb
out
jmp
iret
push
dec
and
sub
shr
test
sub
clc
add
or
mov
mov
cmp
push
xchg
cld
orb
pop
sub
sbb
lea
jp
and
cmc
in
push
push
mov
test
inc
sub
xchg
cmpb
rorw
fidivl
imul
lds
lret
mov
and
into
stos
push
jno
hlt
jo
dec
xor
movsl
scas
inc
inc
mov
pop
mov
pop
pop
xchg
insl
data16
mov
jbe
inc
pop
mov
jmp
into
mov
jmp
aaa
cmp
jnp
jmp
je
hlt
in
mov
shl
int3
xchg
xchg
dec
in
sbb
mov
dec
pop
mov
pop
loopne
push
cs
mov
jle
adc
and
push
test
addb
add
or
ss
je
pop
push
push
in
mov
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
sub
mov
cwtl
sbb
test
lea
fldl
adc
push
mov
lcall
push
mov
out
sti
jp
ret
and
push
mov
lods
insb
dec
icebp
sahf
xchg
mov
ds
inc
fs
fwait
adc
sbb
pop
dec
imul
mov
pop
lods
cmpsl
mov
lods
adc
ret
mov
xchg
rcr
lahf
rep
iret
or
dec
stc
mov
movsl
jno
stc
pop
outsl
ds
andl
or
push
mov
orl
xchg
aas
nop
push
sti
lcall
xor
cltd
mov
dec
inc
cs
xchg
sbb
adc
mov
dec
stos
fidivrl
mull
fadd
adcl
xor
cs
pop
jge
dec
push
mov
insl
add
cld
imul
pushf
adc
loop
cmp
add
mov
clc
adc
fwait
push
mov
shll
repz
sahf
leave
stos
push
in
lods
stc
aas
push
repnz
lods
mov
sbb
mov
push
xor
pop
stos
sub
jg
fxch
fs
jmp
mov
aad
jge
outsl
push
int
mov
lods
fildll
lea
repz
pop
loope
aad
pop
loope
add
add
pop
jg
dec
gs
movsb
ja
or
dec
mov
sar
jo
push
cli
jmp
stos
mov
jnp
popf
movsl
out
insl
push
xchg
xlat
sbb
and
lods
test
dec
xor
mov
sbb
out
daa
adcb
mov
or
aad
fdivrl
sti
inc
add
xor
popa
push
cmp
and
dec
jmp
jb
xor
inc
xchg
nop
daa
loop
incb
jae
sbb
gs
data16
jmp
jne
dec
inc
out
into
in
imul
cpuid
or
into
sahf
xchg
orb
add
adc
out
cwtl
out
into
shlb
adcb
xchg
xchg
xchg
rclb
jg
cmc
dec
js
or
dec
bound
repz
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
cmpsl
int
fldl
or
xorb
mov
push
ja
lahf
shrl
addr16
das
mov
push
loop
int3
int3
lock
push
int
push
push
dec
mov
movsl
xor
mov
fcom
xchg
push
jle
mov
mov
push
mov
jmp
lods
xchg
sti
and
add
mov
mov
jne
jb
cltd
movsl
dec
icebp
pcmpeqd
cmp
jb
add
nop
inc
xchg
lret
cmc
sub
mov
mov
and
mov
pushf
shl
push
hlt
lods
iret
cli
or
sahf
cmp
pusha
dec
ss
lock
fsubrl
add
xor
mov
mov
sahf
push
sub
xchg
mull
sub
xchg
test
and
addl
jno
movsb
xchg
icebp
stos
jg
fcoms
scas
jb
js
and
dec
push
sbb
jle
push
mov
out
mov
pop
dec
andb
ja
loope
insl
insl
bound
int3
inc
cmp
jb
dec
pop
jno
cltd
fidivl
std
enter
inc
in
and
xlat
aas
inc
sbb
sbb
push
arpl
xor
jb
pop
dec
div
pop
xor
das
jae
jo
inc
scas
stos
push
adc
sbbb
addr16
dec
ljmp
je
push
in
push
add
mov
test
cld
and
sub
aas
mov
adc
mov
xor
movb
lds
je
add
aas
jecxz
inc
std
or
shrb
fwait
push
nop
enter
daa
into
mov
cmpsl
pop
mov
cmpsl
shl
scas
dec
aad
and
arpl
mov
incb
popa
xchg
outsb
jae
imul
adc
dec
mov
and
sbb
add
xor
jns
push
stos
pop
std
dec
sub
mov
xor
leave
add
adc
fwait
pop
pop
lock
dec
testl
enter
div
mov
xor
or
jmp
push
and
mov
mov
nop
sbb
test
mov
xor
jno
sbb
dec
mov
adc
or
cmp
ja
in
jp
jl
and
xor
in
enter
sub
or
stos
pop
pusha
jl
outsb
fistps
cld
les
push
jo
xchg
pop
in
fists
mov
dec
mov
jecxz
push
lods
test
out
add
cmc
cmp
aas
cwtl
jnp
pop
leave
stc
mov
ret
jno
lret
cmp
shll
inc
sbb
divb
cs
lret
xchg
es
out
push
neg
addl
lds
add
or
cmc
add
adc
cmp
mov
push
xor
push
and
daa
jbe
dec
push
cmp
or
lcall
mov
jl
xchg
popa
mov
sbb
mov
aaa
and
jae
and
bound
jle
push
aas
mov
call
lret
push
jb
mov
clc
adc
push
pop
push
jno
aas
rolb
push
int3
pop
push
mov
sbb
data16
cmp
cld
mov
mov
lods
fimuls
mov
adc
addb
leave
xor
push
lcall
mov
xchg
dec
arpl
les
dec
push
push
lret
inc
sub
std
sub
pop
mov
jb
xchg
pop
out
dec
jb
movsb
and
cltd
xor
inc
int
nop
out
dec
adc
data16
xchg
mov
int
inc
or
fidivrs
out
test
test
rcl
sar
cmc
push
dec
iret
mov
jg
shrb
bound
icebp
xor
mov
push
inc
adc
and
sub
les
int3
cwtl
inc
sbb
std
arpl
inc
add
push
pop
xchg
movsl
xchg
mov
sahf
out
jmp
shlb
test
mov
hlt
mov
das
movsl
xchg
orl
sbb
push
shll
cmc
out
xchg
jno
inc
add
and
outsb
dec
add
lods
test
add
jg
mov
dec
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
imulb
mov
sbb
xchg
leave
or
add
out
adc
inc
subl
call
outsl
cmp
and
push
xchg
pop
inc
inc
inc
fildll
lret
xlat
and
jb
in
xor
xchg
icebp
xor
outsl
mov
or
pop
rcll
mov
jecxz
mov
in
mov
cmp
int3
and
repz
mov
mov
mov
inc
stos
std
pop
es
sbb
add
xchg
jmp
xlat
jnp
sbb
cmp
and
sub
pop
adc
subb
mov
xchg
jmp
dec
pop
imul
icebp
std
cli
mov
fimuls
xchg
addr16
adc
or
lcall
movsb
popf
rolb
xor
into
adc
or
push
mov
mov
xchg
and
addr16
lock
addr16
pusha
xchg
cwtl
xor
iret
and
das
imul
cmp
sbb
cmp
mov
and
mov
loope
inc
fldenv
mov
jmp
and
fwait
das
popa
sbb
out
inc
mov
in
push
jecxz
mov
mov
cmp
xor
dec
popf
subl
subl
loopne
das
sarb
iret
movsb
jne
imulb
clc
cmp
cli
cld
dec
push
icebp
insl
sbb
in
xor
inc
mov
fmuls
push
cs
fcmovu
dec
mov
pop
rorl
out
xchg
movsl
inc
lcall
frstor
insl
adc
aas
shlb
xchg
fistpl
sub
ja
push
jae
xchg
sti
cmp
xchg
pushf
dec
repz
pop
mov
fimuls
in
cmc
shll
lret
addl
mov
adc
aam
xchg
cmp
jge
mov
dec
cmp
popf
jp
sahf
js
cmpsl
shl
cld
ret
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
jns
sbb
dec
dec
inc
fists
push
out
xchg
jae
test
je
das
and
sahf
out
outsb
fucomi
add
cmpsl
mov
cltd
data16
jo
mov
mov
test
shr
js
aam
movsl
sahf
test
dec
fbstp
push
loopne
das
cli
fistpll
mov
js
mov
inc
xor
pop
rcll
and
jl
mov
test
mov
data16
test
xchg
fstp
jo
or
icebp
test
push
sub
push
cmp
jecxz
rcl
les
sahf
out
cmp
out
xchg
push
adc
pop
mov
inc
cmp
mov
push
aad
frstor
xor
cmp
subl
sbbb
hlt
push
mov
clc
das
push
stc
cmp
adc
insl
sub
xor
lds
cmp
lret
cwtl
test
jns
out
arpl
pushf
movsl
enter
mov
mov
and
mov
sub
mov
mov
lcall
mov
stos
fldt
lods
xor
mov
push
dec
pop
push
mov
mov
dec
xlat
jns
inc
jne
shl
push
pop
mov
xchg
pop
sbb
lods
out
inc
pop
and
jnp
sub
lods
ss
xchg
nop
xchg
inc
fdivrs
push
les
cwtl
adc
inc
or
push
jle
sahf
dec
loopne
add
inc
retw
rcrl
sbb
fcos
mov
pop
mov
push
mov
mov
lea
mov
pop
cmp
das
push
mov
mov
sub
xchg
jbe
in
bound
jae
scas
mov
mov
ss
push
je
jp
bound
fcmovb
mov
mov
jne
int3
out
mov
jns
addr16
pop
jbe
ja
pop
psubusb
mov
pushl
int
test
mov
popa
xor
sbb
loope
sti
mov
ret
fwait
ja
xchg
mov
xchg
jmp
ss
jb
loop
and
out
xor
push
ret
mov
add
sti
leave
cmp
jecxz
mov
push
xchg
lahf
mov
out
rclb
arpl
push
xlat
xor
jo
cli
xor
push
mov
dec
stc
mov
in
push
pop
ficompl
jmp
xor
ss
pop
sbb
xchg
and
xlat
add
push
fxch
pop
stc
data16
jo
rolb
and
outsl
mov
mov
mov
jecxz
jns
sarl
and
ret
rorb
lea
insl
mov
rolb
mov
dec
movsb
sub
icebp
add
xor
fisttps
cwtl
rcr
or
inc
ror
fstpl
inc
aad
xchg
adc
movsl
mov
xlat
ja
xchg
aas
insl
jecxz
sub
jmp
dec
lds
lret
mov
xor
push
sub
mov
sub
mov
mov
test
push
mov
cltd
lea
ret
out
push
dec
movl
jmp
into
jne
inc
sbb
pop
clc
push
pop
jle
sbbb
jns
sbb
mov
fwait
and
aad
or
adc
test
adc
add
and
sbb
mov
cmp
cmc
push
adc
mov
cmc
shl
jp
hlt
movsl
adc
clc
mov
adc
cmpsb
xchg
push
adc
dec
ja
fwait
leave
dec
jmp
mov
bound
sbb
lahf
add
repnz
nop
xchg
or
mov
mov
subb
inc
lea
fdivrl
jae
sbb
add
scas
int
out
cmp
sahf
mov
aam
leave
add
lahf
inc
xchg
fnstenv
das
mov
mov
and
add
popf
popf
xor
xor
into
or
or
pop
stos
rorb
mov
inc
pop
lahf
push
aas
mov
enter
out
xchg
test
mov
out
mov
mov
loopne
dec
cmp
mov
ljmp
mov
jl
xchg
dec
loope
test
xor
cmp
ret
xchg
fisttpl
mov
push
cmpsb
adc
pop
fxch
in
mov
inc
xor
xor
int3
divl
test
mov
hlt
adc
dec
push
mov
xchg
xchg
mov
push
mov
mov
and
in
dec
filds
cs
adc
mov
mov
scas
lods
jl
xchg
cmp
leave
xchg
mov
sbb
sbb
xor
lods
cld
sbb
sub
lahf
movsb
orl
cwtl
mov
fstpt
divl
or
mov
adc
cmp
aam
out
pop
push
gs
inc
outsb
mov
and
or
ret
xor
popa
lahf
ds
rolb
push
movsl
dec
mov
cltd
jmp
outsb
xor
sbb
mov
stc
push
jl
jb
movsb
add
imul
aas
add
dec
sub
mov
movsl
scas
push
mov
or
ss
popf
fidivs
es
test
dec
int3
xor
adc
or
test
fidivs
push
pop
cmp
hlt
data16
mov
or
and
cli
inc
in
mov
mov
shll
inc
fstl
or
std
insl
jle
sbb
xlat
xchg
jne
jl
test
sarb
and
jae
pop
add
loop,pn
frstor
xor
pop
rorb
push
jecxz
inc
and
add
nopl
add
jp
imul
push
push
in
jnp
xchg
or
inc
pop
repz
inc
jge
sbb
lahf
inc
das
cltd
xor
fmul
xchg
mov
or
ficompl
xlat
adc
dec
cmc
lea
lret
jo
sti
jmp
xor
mov
sub
insb
aam
je
push
sub
pushf
xor
adc
lcall
es
mov
mov
xlat
and
mov
lret
mov
cmp
test
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
clc
cli
adc
sub
lods
in
outsl
cwtl
nop
sbb
push
sarb
out
pusha
fcomip
imul
xchg
jp
add
data16
sbb
idivl
pop
xlat
or
les
push
push
lcall
push
outsb
jge
xor
dec
push
push
sub
in
jae
sub
mov
enter
sub
mov
inc
subl
push
xor
cmp
xchg
fistl
add
inc
sahf
pop
test
sub
or
mov
sbb
notb
mov
out
add
push
stc
xor
rorl
sub
mov
movsb
popf
add
push
test
jg
inc
lret
jne
ja
arpl
addr16
and
xor
mov
test
inc
fwait
test
xchg
mov
fnsave
jle
ljmp
jp
push
das
cmp
dec
mov
aam
mov
mov
xchg
sti
js
call
clc
hlt
mov
shlb
xchg
dec
or
cmp
jno
mov
inc
addr16
cmpsl
cld
mov
pop
cli
mov
dec
sbb
inc
sub
jno
mov
jmp
push
jp
sar
jl
std
xor
adc
jecxz
inc
xor
xchg
push
sbb
push
jl
sbb
lods
push
push
cli
fcomps
cmp
mov
not
jmp
in
push
adcb
xchg
sub
dec
les
stc
clc
inc
es
mov
jbe
xchg
xchg
sub
xor
and
mov
es
mov
lods
movsb
cld
sar
cli
lcall
repnz
jo
sahf
das
mov
fucom
jmp
mov
pusha
sub
pop
lods
mov
adc
sub
mov
and
lahf
nop
ds
les
pop
test
in
mov
pusha
push
inc
sub
mov
push
or
arpl
add
dec
sbb
and
popf
pop
jmp
inc
sub
add
ljmp
out
sti
cmp
out
xchg
dec
imul
jnp
pop
sbb
lds
hlt
xor
ds
jne
sbb
lods
outsb
stc
mov
jne
aam
mov
jbe
pusha
sub
push
out
out
xrelease
std
lcall
movsb
adc
cmp
jo
cmp
je
push
cmpsl
fwait
lds
adc
cld
cmp
out
cwtl
inc
out
divps
and
cmp
fisttpl
jp
in
imul
xchg
pop
ljmp
pop
add
add
mov
fwait
pushl
arpl
sbb
outsb
pop
dec
cmp
movl
clc
inc
inc
push
inc
mov
pop
push
js
daa
mov
adc
push
xlat
insl
rorl
sub
adc
xor
fisttpl
test
cmp
xchg
sbbl
int
sub
iret
dec
iret
loope
pop
hlt
icebp
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
scas
or
xor
xlat
inc
loop
divb
nop
in
jo,pn
enter
bnd
inc
pop
mov
das
outsl
cld
addr16
insb
add
sub
xor
pop
les
fucomi
fdivl
inc
dec
push
aaa
stos
mov
in
xchg
int3
push
sub
pop
fsubr
sbb
xchg
aaa
loop
out
daa
add
stos
imul
xor
bnd
mov
jb
fcomip
dec
sub
pop
test
popf
jns
and
xchg
or
pop
aaa
push
lcall
sub
imul
lea
sub
fwait
xor
push
sbb
sbb
insl
or
addr16
not
jbe
test
sub
jo
pop
fcoms
fdivrl
add
loopne
gs
jno
or
rorb
pop
lcall
add
es
ss
addr16
adc
enter
scas
jae
je
pop
fldcw
lea
test
shl
and
pop
or
push
push
fsubl
push
daa
xchg
mov
xchg
jns
sub
sub
xchg
xchg
pop
lods
fnstsw
mov
ret
nop
js
pop
in
mov
cmpsb
mov
push
add
lcall
dec
mov
ret
jl
dec
fistpll
or
dec
pop
push
outsb
shlb
es
push
fldt
push
fdivr
clc
sub
mov
into
ficoml
sub
pop
hlt
sub
inc
xor
pop
inc
cwtl
jle
mov
adc
rcl
jp
rol
hlt
xor
mov
jnp
inc
fsubp
fildll
insb
jb
lods
andl
scas
add
dec
inc
xchg
push
mov
jno
idiv
scas
lret
sub
jg
data16
xor
or
ret
jae
xchg
je
mov
xlat
les
js
xchg
bound
cmp
ljmp
xchg
adc
cwtl
and
pop
leave
mov
adc
mov
and
sbbl
mov
mov
adc
adc
add
lea
fadd
inc
sbb
repz
in
mov
mov
sub
icebp
xchg
xor
inc
cmp
mov
aas
adc
inc
mov
or
mov
loopne
test
xor
xor
fucomi
dec
add
decb
movsl
shl
sbb
lcall
pop
fs
xchg
pop
mov
in
and
and
mov
shr
xchg
cmp
inc
and
cwtl
jno
dec
out
js
subl
or
js
ds
sbb
mov
sbb
ret
pushf
add
pop
fidivs
sbb
ljmp
xchg
pop
pop
hlt
xor
mov
sbb
inc
mov
enter
cmpsb
jns
mov
fldenv
dec
adc
in
lahf
mov
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
pop
sub
sbb
sbb
cmp
testb
push
jne
inc
gs
inc
popf
mov
pop
sub
out
jae
fistl
sub
and
fmulp
add
fidivrl
int
pop
jp
push
sbb
cmc
cld
sbb
adc
dec
xchg
jbe
test
or
clc
mov
shr
xor
ds
sub
jl
lds
cmpsb
inc
shlb
mov
cmpsb
xchg
pusha
fisttps
mov
and
mov
push
push
sub
aad
sbb
sti
xlat
add
shll
jnp
pop
push
sub
and
mov
inc
inc
bound
pushf
jp
sub
xor
jo
adc
cmp
test
add
xchg
sbb
mov
ja
xchg
and
imul
inc
cmp
xchg
mov
cs
push
mov
dec
adc
mov
xor
ror
cs
adc
stc
mov
aaa
inc
and
cmpsb
loop
jne
js
pop
sub
aaa
pop
cld
jb
into
test
push
scas
test
pop
inc
fists
ljmp
ljmp
and
imul
ret
add
mov
lret
dec
lea
cmp
pop
fsubrl
jp
sarl
cmpsb
icebp
es
test
inc
jno
or
xchg
outsb
daa
aas
adc
push
mov
addr16
mov
xchg
jle
cli
sbb
mov
lret
dec
hlt
clc
shrb
mov
add
dec
sbb
rcl
mov
stos
jno
mov
push
inc
sub
sahf
xor
and
push
dec
and
xchg
push
push
mov
jbe
loopne
enter
or
xchg
aad
jl
out
popf
xchg
cmp
cmpsl
out
or
push
inc
mov
adc
negb
push
jo
or
push
cmpsb
iret
mov
je
ror
dec
cmpsb
repz
cli
xchg
mov
test
and
sub
mov
int
jp
add
xchg
mov
pop
cmp
adc
imul
hlt
dec
sbb
mov
in
fistps
jl
cmp
mov
or
jbe
in
cmp
push
mov
ljmp
pop
or
pop
mov
xorb
imul
int
inc
xchg
mov
xchg
cs
pop
ds
mov
push
adcb
loopne
mov
pop
lock
mov
jp
and
in
mov
sbb
jg
or
sub
mov
cs
jecxz
xchg
push
add
mov
and
sub
fiaddl
cli
inc
lds
pushf
je
inc
xchg
loopne
push
imul
aad
roll
orl
decb
rcl
ficoml
xchg
inc
imul
jg
test
and
in
mov
lahf
sbb
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
frstor
inc
push
data16
jns
sbb
outsb
and
push
insb
mov
mov
fs
pop
fstpt
sub
jecxz
iret
insb
pop
test
or
insb
pop
push
es
scas
mov
push
add
jbe
rcrl
dec
stos
or
mov
out
es
xchg
cmpb
jne
sahf
icebp
aas
xor
imul
pushf
outsb
mov
in
ljmp
add
add
data16
in
push
sbb
outsb
jl
sub
mov
leave
lods
sub
loop
pop
xor
xchg
cmp
cmp
cmp
sub
sbb
cmp
sbb
cmc
test
xchg
test
dec
ljmp
push
aad
cmpsb
les
add
or
out
cmp
idivb
in
cmpsb
loop
sub
jns
mov
inc
push
sbb
stc
adc
repz
fisttpl
xchg
ljmp
adc
xor
xchg
mov
out
cwtl
push
push
push
ja
dec
jns
cltd
pop
insb
xchg
cld
cs
mov
mov
aas
fwait
in
mov
pop
shrb
inc
fnstsw
xor
push
cs
mov
xor
adc
loope
rcrl
push
aaa
stc
inc
test
mov
push
sbb
cmp
iret
leave
cwtl
mov
test
xor
je
inc
sbb
sub
gs
xchg
js
in
bound
outsb
out
dec
cmp
mov
mov
xchg
mov
mov
enter
fsts
add
out
das
jnp
adc
xchg
push
jb
jb
pusha
and
mov
dec
out
in
lock
out
scas
push
xor
ffree
and
fimuls
ds
mov
shlb
je
jg
test
rorb
and
mov
adc
popf
pop
shrb
fisttpl
cmp
daa
fisubrs
cmp
and
sbb
inc
inc
fwait
loopne
adc
int
or
jecxz
orb
ficoms
xlat
adc
xlat
fcompl
int3
mov
movsb
xchg
daa
inc
fs
rclb
test
stc
sub
cld
mov
sbb
addr16
push
cmp
enter
nop
mov
iret
aaa
iret
push
jo,pn
adc
or
inc
xor
adc
and
add
push
movsb
int3
shrl
sbb
std
pop
xor
sarl
outsl
and
ficompl
xor
xlat
push
mov
sti
pusha
loopne
out
pushf
popa
psubsb
push
xchg
aam
jle
shrb
ficoms
mov
orl
fdiv
or
inc
adc
jle
pop
lock
push
or
insl
inc
jecxz
push
dec
hlt
pop
in
mov
rorb
dec
xor
adc
mov
and
sub
mov
inc
xchg
sub
xchg
inc
push
xor
inc
mov
jg
push
aas
shlb
fdiv
push
xor
fwait
and
jae
mov
orl
cmp
shll
js
or
aad
sub
and
jbe
test
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
movsl
not
mov
jns
sbb
xchg
fs
mov
xorw
sbb
inc
int3
adc
mov
movsb
and
rorb
inc
testl
scas
push
sti
sbb
dec
xchg
sbb
mov
popf
adc
test
repz
dec
push
mov
repnz
int
mov
lea
icebp
pop
lcall
pop
xor
sub
inc
mov
and
es
rol
push
jb
dec
jnp
js
aaa
repnz
mov
cmp
mov
fildl
sbb
pop
sub
adc
mov
xchg
loop
lods
ja
adc
daa
aas
cltd
mov
dec
inc
xchg
mov
ljmp
sub
cs
add
in
add
xor
rorl
int3
movsl
inc
push
ficompl
je
fists
arpl
aas
jno
xor
pop
rcr
dec
int3
jmp
loopne
adc
mov
cmpsb
or
push
es
xchg
insl
repz
lea
leave
int
add
inc
fcoms
jl
mov
jle
mov
sbb
dec
sub
lcall
inc
aam
cltd
inc
mov
cs
shrb
inc
sbb
dec
test
push
mov
lret
push
sbb
cwtl
cmp
je
add
in
fdivl
xor
outsb
shl
insl
dec
pop
in
repnz
fsubs
mov
lods
and
repnz
sub
sbb
push
and
mov
movsl
fwait
mov
dec
inc
icebp
andb
fcoms
fsts
test
clc
and
aas
fmuls
shrl
dec
cmpb
jmp
mov
mov
jle
sbb
adcl
pop
pusha
mov
xchg
or
hlt
mov
loopne
testb
xchg
sbb
xchg
cmp
and
lock
cmp
and
fstl
addb
or
inc
mov
jnp
loop
cmp
mov
push
fistpll
inc
xchg
cmp
int
lea
int3
sbb
repnz
xchg
jbe
in
sub
lods
jne
int3
rcrb
xor
std
mov
pop
stc
xor
mov
cmp
mov
cmpl
add
mov
lret
fs
pushf
cmpsl
into
outsl
add
mov
mov
and
xchg
and
jbe
ret
roll
fisttpl
sbb
scas
xor
sbb
mov
adc
daa
inc
cmpl
inc
stos
insl
test
push
jo,pt
push
pop
popa
pusha
test
mov
test
pop
xchg
cmp
movsb
push
pop
movsl
adc
jecxz
sbb
sub
pop
jmp
sbb
inc
mov
pop
inc
loop
jne
inc
je
out
mov
jle
cld
out
sub
int
cmp
cld
addr16
cld
mov
sub
jl
adc
je
out
jno
jae
fists
shll
adc
aas
push
jl
mov
std
sahf
push
and
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
sub
mov
je
sbb
mov
adc
ss
and
xor
icebp
lcall
test
std
jg
arpl
js
out
sub
push
pusha
xchg
adc
mov
push
push
fdivs
faddl
sub
cs
dec
jne
dec
pop
jns
dec
pop
fisttpl
sub
repnz
dec
arpl
test
iret
sbb
and
sbb
int
push
imul
adcl
fadds
dec
sub
pop
and
jae,pt
clc
add
jmp
sub
out
and
mov
imul
je
mov
out
inc
push
mov
les
adc
cmc
push
xlat
add
push
test
sbb
jo
cmp
or
ljmp
pop
sti
fildll
notb
dec
or
and
mov
push
jge
call
imul
pop
loope
sub
pop
lods
into
cld
std
push
stc
je
sbbl
mov
gs
inc
gs
repz
add
xchg
cld
push
nop
repz
outsb
arpl
sbbl
mov
pushl
in
arpl
pop
test
dec
fwait
enter
imul
iret
mov
xchg
xchg
aas
pop
push
add
cmp
fiaddl
ljmp
test
xchg
jne
add
adc
mov
cmpsl
mov
fninit
mov
pop
outsl
and
push
imul
xor
cmp
lret
aam
jne
sub
fsubs
mov
clc
fbld
pushf
mov
sub
fs
mov
pop
push
sub
fmull
add
fbld
lods
mov
cld
in
insb
cmp
lahf
mov
dec
dec
aam
inc
add
shll
inc
xlat
mov
shll
punpckhbw
pushf
dec
mov
stos
daa
adc
int
nop
stos
mov
pop
adc
push
aam
sub
mov
das
loop
jl
adc
arpl
bound
mov
xchg
shr
test
push
loopne
xlat
cmp
mov
inc
dec
xchg
test
ficompl
mov
cmp
in
and
xchg
fcompl
mov
ds
daa
fdivl
shl
cmpsb
dec
pop
jb
and
mov
pop
jbe
cmpsl
pop
ret
add
iret
xor
cmp
int
inc
lahf
mov
into
mov
not
xchg
push
and
loop
mov
insb
sbb
fisubrl
pop
mov
push
push
mov
push
into
sub
jmp
cmp
out
xchg
test
fcom
imul
inc
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
xor
sbb
adc
sbb
jle
push
jmp
bound
loop
sub
out
cs
mov
add
push
adc
mov
lret
mov
fdivs
cmp
mov
mov
xchg
push
xor
fwait
movsl
add
jle
shll
adc
idivb
dec
cmp
cmc
js
or
insb
or
pop
inc
mov
xchg
out
ds
add
sub
cmp
ss
es
dec
hlt
aas
pusha
out
jg
lret
adc
mov
ss
inc
mov
push
cmpsb
js
push
sub
cmp
sub
adc
test
jge
mov
out
jo
testl
fidivs
fwait
mov
inc
incl
xor
rorl
aaa
fdivl
push
scas
adc
xchg
and
mov
cmp
pop
pop
in
xor
xor
pop
sub
pop
ret
aam
inc
push
mov
lret
fs
xchg
ret
mov
adc
ljmp
or
cmpsb
cwtl
out
xchg
outsl
jle
arpl
lods
xor
btw
sarb
jmp
push
sarb
sbb
imul
adc
jb
leave
data16
pushf
out
repnz
mov
scas
sbbb
inc
sti
pop
push
mov
dec
aad
int
dec
out
xchg
subl
stos
das
loopne
dec
pop
fadds
adc
push
aaa
mov
lret
dec
movsb
js
add
cld
mov
inc
shlb
and
cmp
inc
nop
mov
xchg
xchg
xchg
dec
mov
xchg
inc
movsb
inc
push
outsl
scas
add
movsl
ja
jae
lret
jbe
rorb
pop
add
iret
push
cmp
cltd
popf
into
insl
addr16
adc
addb
hlt
into
xchg
push
mov
add
mov
jne
add
and
movsb
or
nop
inc
sbb
sub
outsb
or
sbb
pop
fcomi
mov
shrl
and
leave
jns
cld
sub
fwait
popf
sub
shrl
sbb
mov
fldl
clc
packssdw
int
dec
testb
xlat
ds
loop
mov
insl
out
fimull
pop
add
inc
rolb
xor
xchg
shrl
mov
add
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
imul
sbb
sbb
sub
mov
leave
mov
repz
cwtl
push
popf
mov
fsubr
sbb
adc
fiadds
outsb
dec
push
cmp
daa
insl
inc
pop
ss
in
ficomps
cmp
dec
rorb
popa
int3
xchg
lret
dec
mov
pop
nop
dec
dec
pop
nop
insl
jne
xchg
repnz
add
wbinvd
aas
xchg
jecxz
bts
insl
dec
adc
sub
jae
mov
in
push
xor
in
and
jnp
dec
out
mov
aad
imul
in
adc
hlt
jnp
int3
in
lret
xchg
lcall
or
xorl
int3
int
push
lret
cltd
mov
xchg
pop
xchg
add
packssdw
inc
cmp
xor
mov
adc
int3
fs
mov
cs
and
jno
nop
lods
mov
js
sub
sbb
cld
jns
push
stos
add
jae
lds
pop
mov
or
jle
cmpsb
adc
xchg
ficoml
inc
out
aad
popa
inc
and
adc
push
or
sti
add
xchg
cmp
mov
nop
xchg
sbb
push
push
jb
pop
add
fidivl
sub
sub
xchg
ss
jmp
clc
xor
popf
jp
stos
pop
jno
dec
shll
inc
mov
jbe
clc
rorb
and
push
es
leave
sbb
cmp
mov
scas
adc
mov
test
je
lock
enter
ds
scas
cltd
int
cld
mov
xor
jbe
xor
push
cwtl
dec
ror
mov
jae
inc
sub
cld
clc
leave
rclb
test
mov
push
or
lods
push
cs
cs
lahf
test
push
jmp
push
mov
xlat
es
shl
cwtl
add
xchg
pop
jl
arpl
and
pop
push
adc
mov
jge
div
shll
mov
lcall
movsb
sub
nop
int3
std
outsl
shr
add
jge
cmp
lock
inc
test
jnp
out
sub
test
out
mov
add
orl
stos
loopne
les
pop
outsb
nop
sti
push
xor
outsl
adc
sbb
inc
inc
jnp
jbe
cmpb
stos
lcall
mov
sbb
stc
mov
mov
aam
sbb
sbb
fidivrl
dec
jae
mov
out
insb
mov
shrb
sbb
push
cmc
je
xchg
ljmp
hlt
fimull
roll
iret
push
or
mov
fdivrl
mov
stos
fdivrs
enter
push
call
mov
enter
sbb
inc
lcall
bound
mov
xchg
fdivrl
mov
mov
jnp
mov
cld
xor
push
les
mov
pop
dec
stos
mov
lock
cltd
sbb
sbb
xor
leave
shll
or
dec
pop
pop
ret
jo
push
pop
pop
sbb
xchg
xchg
dec
das
inc
pusha
xor
jge
movsb
fdivrs
mov
xrelease
mov
and
or
imul
stos
lret
adc
sub
push
push
jbe
sub
das
pop
popl
stos
and
icebp
adc
push
es
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
sbb
sbb
scas
adc
sbb
dec
xchg
sub
sub
or
jnp
sub
out
lods
insb
pop
ret
pop
mov
push
lcall
in
int
dec
fistl
jnp
cmc
pop
sub
and
stos
add
inc
js
inc
out
xchg
push
ljmp
js
es
pop
adc
lock
aad
loope
fsubs
pop
sbb
mov
mov
and
data16
pop
popf
push
inc
imul
mov
inc
jnp
je
std
pop
cwtl
pop
cmpsb
xor
out
ja
sub
sbb
xchg
inc
adcl
mov
xlat
pop
add
sub
test
lods
daa
jg
lea
xchg
push
xlat
daa
and
pusha
sub
test
js
and
mov
lods
in
xor
arpl
pop
xchg
or
adc
inc
out
xchg
loopne
enter
jge
ds
adc
push
pop
dec
lock
popf
or
aad
dec
sbb
rorl
jmp
ljmp
fs
gs
movsl
cwtl
outsl
sbb
decl
dec
cmp
lea
out
mov
or
and
popf
es
dec
xor
pusha
or
in
lret
push
mov
add
mov
add
fadd
and
lds
mulb
scas
jne
jmp
negb
lcall
test
dec
inc
xchg
pop
xchg
jl
jle
sahf
lods
jne
jge
mov
sbb
sub
push
mov
les
test
cli
and
lods
cli
int
in
aaa
mov
stos
mov
sub
mov
pop
lods
jo
icebp
aad
dec
push
mov
rcll
sbb
dec
sub
dec
outsb
out
lahf
cltd
add
das
sub
and
pmullw
mov
test
push
or
push
lea
lcall
decb
jne
fisttpl
jmp
or
add
sbb
inc
cmp
xchg
movsl
fs
dec
addr16
sub
mov
jo
jno
add
ja
xorb
daa
sbb
push
jecxz,pt
jne
cmp
pop
push
adc
pop
loope
pop
xor
daa
call
jp
popf
pop
sbb
fcomi
sbbw
rcrb
or
and
aam
push
mov
mov
mov
in
mov
jmp
cltd
and
adc
insb
jp
jae
andb
xchg
adc
std
mov
push
mov
mov
dec
push
push
iret
loope
inc
imul
fidivl
cwtl
xor
adc
adc
xor
mov
lods
inc
inc
sub
test
sbb
movsl
js
fildl
push
mov
xchg
jae
cmp
adc
lods
push
aas
dec
or
pop
mov
leave
mov
pop
outsb
sbb
mov
cmpb
add
aaa
jnp
test
and
xchg
ftst
clc
xchg
call
xchg
rcll
cmpsl
sub
pop
ja
daa
jbe
xor
adc
jp
iret
push
mov
dec
and
data16
outsb
mov
push
push
inc
mov
push
insl
cmp
int3
out
mov
clc
mov
aad
or
call
insb
or
add
sbbl
xor
adc
and
pop
fdiv
inc
add
sbb
cmp
fistpl
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
pop
cltd
mov
notb
sbb
inc
or
jbe
xchg
pop
sbb
in
ss
push
fcmovu
dec
fisubrs
cmc
call
mov
leave
xchg
and
push
ss
dec
push
cmc
push
pop
shll
or
addr16
adc
push
repz
pop
jns
push
dec
jno
fisubs
jnp
ret
fadd
popa
sbb
out
hlt
dec
cs
mov
add
mov
stc
mov
mov
imul
insb
cmpb
add
push
js
fwait
jnp
daa
push
in
aad
xor
into
mov
mov
cwtl
sti
scas
mov
fisubs
add
and
and
sbb
jecxz
cltd
imul
lds
test
pop
popf
dec
ljmp
es
mov
jmp
jg
sub
aas
dec
jg
mov
sbb
jno
and
das
ret
in
mov
sbb
or
imul
cli
int
add
add
fistl
lcall
add
mov
sbb
rcrl
and
xchg
sub
sbb
mov
into
or
fcmovb
in
jne
leave
dec
jecxz
jle
mov
cmp
iret
mov
xchg
pop
lea
xchg
pop
addr16
fnstsw
adc
dec
iret
lds
pop
push
test
int3
je
or
test
xor
pop
fsubrl
adc
jecxz
cmp
mov
popa
xchg
add
cmp
data16
lods
and
mov
mov
clc
idiv
push
cli
add
and
test
xchg
addl
xor
mov
push
sti
push
sbb
roll
pop
loop
clc
imul
mov
mov
sbb
inc
push
popf
rclb
jl
or
out
jae
mov
and
addl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
repnz
stos
xchg
sbb
notb
sbb
ds
aad
popf
pop
dec
and
fdivs
xchg
std
cmp
sbb
lods
inc
cmp
mov
fistps
lret
push
out
lcall
sbb
cld
cmp
jae
jle
shl
loope
cmpl
push
jno
jae
leave
sub
insb
scas
lahf
enter
les
aaa
inc
sarl
stc
jg
xor
fstps
sub
in
xchg
mov
pop
inc
out
lods
inc
and
mov
mov
dec
gs
mov
jnp
pop
push
and
inc
test
mov
xorb
adc
rcr
adc
insb
int
mov
stc
pop
mov
cs
cmc
enter
clc
sub
mul
cmp
fs
insl
mov
mov
push
mov
mov
pop
lods
jl
lret
pop
pop
sub
dec
out
sub
pop
or
push
mov
cmpb
lret
pop
pop
mov
mov
data16
inc
mov
sbbl
ret
mov
mov
call
mov
xlat
pop
sbb
scas
adc
in
addl
jne
ljmp
dec
jmp
xchg
sbb
outsl
and
repnz
and
sbb
inc
adc
in
xchg
cmpsb
xchg
js
cmp
jb
loope
pop
cmp
iret
push
mov
xchg
jecxz
lock
and
pop
or
decb
jp
in
pop
inc
and
inc
call
sub
or
pop
push
sbb
shrb
jg
mov
inc
popf
mov
insl
cli
call
mov
dec
mov
cmp
repnz
cmc
cmp
cmc
adc
sub
xlat
xchg
lods
lret
mov
inc
icebp
or
nop
pop
les
inc
and
or
addb
ret
fucomp
scas
out
mov
pop
stos
test
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
test
jle
sbb
notb
sbb
cmp
idivl
les
mov
aad
mov
sub
mov
icebp
cmp
addr16
dec
or
ror
cwtl
pushf
call
add
inc
xchg
f2xm1
sarl
pushf
fstps
pop
cmp
in
or
cwtl
inc
dec
idiv
shrl
and
cmpl
pop
xor
in
sub
loop
popf
sub
sub
xchg
push
inc
xchg
xchg
fsin
aas
lock
int3
sarl
bound
sub
fsubrs
int
fdivrs
sbb
mov
test
gs
test
adc
push
rol
mov
data16
ss
pop
daa
or
pop
fldcw
jl
stc
jge
xchg
pop
jg
inc
xlat
mov
jl
and
scas
shll
cmc
dec
stc
adc
es
mov
insb
jmp
jno
loope
xor
sub
addr16
push
pop
mov
sbb
dec
pop
into
pop
pusha
sub
insl
les
iret
lea
inc
enter
mov
popf
push
lret
or
inc
jp
adc
insb
movsl
popf
movsb
jns
in
shrl
sub
stc
inc
gs
and
mov
pop
sbb
mov
xchg
das
xchg
lahf
and
call
faddl
jle
sbb
sub
adc
je
push
shlb
decb
enter
adc
mov
shlb
push
or
mov
sub
cmp
mov
adc
pushf
jo
jge
adc
call
mov
aam
mov
cli
cmp
jecxz
adc
aaa
lret
adc
sbb
fdivrs
dec
and
jno
mov
add
sub
sub
adc
mov
int
lret
fmull
jb
pop
cwtl
push
and
xchg
int3
mov
pop
out
in
scas
int
call
dec
cwtl
or
push
cmpsb
xchg
sbb
aad
cmp
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
cli
mov
gs
dec
data16
xchg
je
in
in
pop
add
cmc
pusha
lods
inc
ret
mov
hlt
sarl
shlb
pop
insl
inc
dec
jae
or
xor
jo
popf
jge
cmp
aad
push
mov
clc
enter
popf
lret
jp
popf
pushf
repnz
jg
jae
push
dec
pop
sbb
jg
adc
fiaddl
mov
repnz
sbb
and
push
ljmp
test
jns
or
push
pop
aas
movsb
daa
idiv
loop
and
xchg
lahf
cwtl
das
mov
mov
push
cmp
sub
call
pop
push
clc
inc
ljmp
hlt
sbb
stc
pop
pop
jle
xchg
xor
jmp
std
lods
cmp
adc
or
out
ds
bound
add
mov
cmp
ds
adc
addl
push
inc
stos
pop
in
popf
lods
inc
sbb
sbb
xchg
jns
fdivs
push
cmp
and
mov
or
adc
loop
xlat
testl
aas
jg
xorb
daa
pop
xchg
int3
and
xlat
nop
sbb
xor
lods
add
sub
jns
imul
dec
test
mov
or
scas
mov
mov
adc
loopne
in
das
mov
jnp
xlat
lret
dec
sahf
lock
in
dec
add
dec
fisubrs
jnp
mov
push
fnstcw
arpl
fcmovne
and
push
xor
out
dec
sub
je
pop
add
dec
mov
scas
fsubrl
xchg
sub
push
and
mov
stc
dec
jo
or
daa
loopne
add
push
cmp
jle
lock
fisttps
inc
ljmp
cmp
int
jbe
push
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
ss
shrl
dec
pop
inc
push
pop
idivl
lret
mov
sbb
mov
push
bound
xchg
lahf
add
mov
mov
jbe
lcall
das
xor
stos
xor
adc
xchg
inc
inc
adc
jmp
jb
mov
insl
sbb
jle
lods
mov
push
xchg
jmp
push
sub
lods
sub
xchg
pop
mov
sub
bound
cmp
ja
jno
sbb
adc
imul
das
aam
fadd
mov
adc
in
arpl
pop
adc
lods
insb
mov
sbb
push
je
test
test
mov
or
jne
cmpl
inc
xor
jmp
push
adc
movsl
repnz
fcoms
jmp
in
movsl
jne
and
xchg
add
pop
jnp
xor
xchg
xor
xchg
pop
cmc
testb
ret
or
scas
jbe
mov
rol
or
mov
push
jns
mov
leave
mov
adc
jg
push
xchg
mov
clc
frstor
pusha
mov
popf
jl,pt
jnp
cli
jbe
mov
ja
fistpl
sub
in
scas
jle
push
pop
add
and
mov
adc
js
mov
cmpsb
jae
lcall
mov
inc
inc
mul
inc
inc
mov
fs
insb
in
xchg
xor
addb
jecxz
and
xchg
out
test
adc
mov
pusha
cmpsb
and
out
cmpsl
push
sub
imul
out
mov
scas
dec
lds
xchg
fistpll
fs
inc
xor
jnp
test
lcall
imul
mov
xchg
aas
or
jl
cmpsb
arpl
mov
push
mov
mov
jmp
aaa
and
dec
mov
push
out
lock
sbb
adc
sbb
lods
loope,pt
shl
icebp
cld
mov
std
mov
inc
movsl
push
fwait
test
mov
stos
push
adc
repnz
cmpsb
pop
movsl
int
inc
sub
sub
ljmp
pop
mov
mov
ret
mov
pop
or
xor
xor
sbb
or
jmp
xchg
cmp
cmp
aas
sub
mov
test
test
test
lds
xchg
in
sbb
fstl
out
jmp
push
lods
hlt
mov
push
sub
nop
testl
stos
movb
rcl
mov
xchg
jnp
push
add
fwait
call
mov
xchg
int
daa
and
out
nop
insb
or
inc
shlb
xchg
mov
leave
rcrl
adc
repnz
rorl
fcmovne
shrb
sbb
xorl
das
int3
ja
xor
arpl
jp
jmp
dec
sahf
stos
popf
and
add
mov
and
cwtl
pop
shll
adc
adc
imul
xchg
test
pop
cmp
iret
cmp
call
jp
dec
sahf
and
jg
lods
and
mov
mov
dec
imul
ret
mov
stos
jbe
pop
push
push
lahf
iret
cmc
pop
and
in
cld
cwtl
xchg
adc
push
add
sti
fsubl
mov
xor
xchg
mov
mov
mov
inc
pop
inc
mov
subb
fisttpl
andb
and
in
test
mov
call
xor
mov
push
sub
pop
or
jecxz
or
les
fldt
add
mov
cli
xor
mov
jmp
in
jbe
pop
mov
fldpi
jge
add
adc
dec
ret
push
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
in
mull
imul
xchg
inc
jns
arpl
repnz
cmp
sbb
daa
push
xor
mov
sbb
sahf
repnz
fs
add
push
mov
roll
hlt
dec
movsl
push
mov
pop
mov
add
or
int3
out
fildll
xlat
add
stos
nop
scas
push
adc
pop
insl
adc
xor
out
mov
in
mov
pop
mov
push
les
adc
push
insl
cs
pop
and
pop
jmp
mov
cs
sahf
test
in
mov
call
pop
push
and
add
push
cmp
ds
insl
lock
pop
or
fbld
sbb
ss
dec
hlt
out
addr16
jb
ret
adc
dec
dec
lret
jmp
sbb
das
xor
inc
pop
popa
add
enter
push
jb
mov
in
add
mov
lret
stc
test
lods
push
adc
mov
outsb
sbb
nop
sub
stos
loop
insl
sbb
das
jbe
jecxz
push
aaa
sub
sub
cli
daa
test
stos
inc
jg
and
lea
mov
ret
add
sub
in
cli
lods
or
ja
out
sbb
std
mov
test
add
jns
cmp
rcll
stc
jns
scas
pop
jecxz
and
mov
mov
in
cmp
bound
mov
sub
stc
ljmp
pop
ss
sub
aam
cmpb
in
inc
pop
stos
dec
test
mov
jo
ljmp
pop
sub
inc
sarb
std
xorb
pop
cwtl
or
movsb
je
std
es
mov
mov
decb
pop
jnp
mov
ss
lods
jecxz
jg
shrb
nop
add
sbb
sti
inc
ret
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
je
inc
jg
fiadds
arpl
pop
stos
pop
pop
adc
nop
outsl
rorb
mov
inc
xchg
adc
add
sahf
shr
sahf
scas
cmp
sbb
sbb
pop
mov
sahf
loope
mov
adc
call
cmp
int
lahf
fmul
xor
dec
stos
xchg
nop/reserved
mov
enter
xchg
fcoms
jo,pn
out
sahf
push
or
push
in
int3
in
pusha
pop
xlat
pop
into
jbe
fdivr
pop
mov
inc
leave
pushf
stc
loope
mov
mov
mov
pop
push
push
nop
cs
in
ljmp
sbb
stos
aam
lret
push
icebp
in
cmp
mov
inc
iret
push
mov
mov
jb
out
loopne
xchg
sub
les
ret
xchg
rorl
lods
fadds
jg
jbe
out
xor
jge
ficomps
sub
pop
push
sbb
clc
icebp
insl
loopne
data16
pop
mov
jae
cmp
mov
xorl
out
mov
mov
in
popa
bound
shlb
cltd
ds
push
ret
insl
or
pop
icebp
sarl
pop
mov
push
sbb
arpl
inc
xchg
xor
idivb
mov
scas
sub
int3
int
in
movsb
xor
pop
xlat
int
cmpsb
stos
insb
push
jmp
push
pop
mov
les
icebp
push
mov
sub
dec
scas
repnz
imul
sub
and
mov
jg
dec
adc
pop
mov
stos
outsb
mov
xchg
mov
adc
adc
or
or
push
daa
mov
out
inc
dec
mov
mov
jno
negl
cwtl
xor
mov
test
jo
pop
pop
mov
fwait
repz
pop
jl
mov
test
adc
aaa
ss
imul
sbb
insb
stc
js
adc
shlb
mov
cmp
push
in
ss
test
leave
pop
pop
fcomip
mov
inc
dec
mov
mov
cmp
mov
sbb
xchg
xor
sbb
lahf
add
xchg
lahf
sbb
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
mov
sbb
pop
adc
sbb
xor
push
xchg
stc
mov
test
rcrl
test
repnz
je
loope
cmc
inc
das
jb
clc
movb
lea
lret
inc
aas
pop
int3
adc
mov
in
xorb
push
xor
cmc
push
das
and
or
pop
or
roll
test
sub
fs
adc
outsb
lock
fistps
out
lret
pop
lods
inc
mov
jle
add
xchg
or
rorl
enter
mov
push
sub
pop
out
cmp
jecxz
cli
add
nop
dec
dec
outsb
xor
mov
insb
rcrb
fwait
repz
xlat
cltd
and
jp
jl
lret
pop
add
clc
adc
pusha
push
push
push
test
popf
call
mov
mov
cs
and
pop
xor
mov
mov
ret
dec
jecxz
inc
enter
push
push
cmp
jl
jo
ss
dec
pop
dec
xor
xchg
loopne
adc
js
cmp
xor
sub
pop
mov
dec
rolb
stc
jnp
sub
rcrb
lret
push
xchg
sbb
repz
dec
ja
xchg
and
sub
sbb
out
fcoml
dec
cltd
sbb
pop
aam
pop
mov
scas
and
insb
rcr
pop
or
sub
jno
sub
dec
in
sti
xor
std
push
mov
cmpl
adc
jg
paddusw
mov
mov
in
pop
push
fistpl
pop
std
imul
push
mov
xchg
sbb
popf
inc
dec
iret
pop
push
hlt
or
ja
sbb
ret
and
mov
push
or
cld
test
outsl
dec
imul
mov
push
lds
ljmp
test
add
mov
std
movl
dec
inc
cmpsb
imul
imul
cwtl
test
mov
repnz
pop
popa
mov
pop
cmp
ret
iret
sbb
mov
jecxz
ficoms
pop
inc
scas
int
sbbl
lock
push
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
stos
inc
sbb
sbb
adc
sbb
sti
daa
xchg
mov
mov
insb
aad
and
ret
jp
mov
in
sbb
addl
xor
test
push
movsl
cmpsb
mov
ficompl
or
xor
dec
lods
cwtl
rcll
cmpsb
add
lahf
test
fisubl
push
jb
add
and
adc
iret
data16
add
nop
fildl
sti
inc
ret
stc
pop
outsl
xlat
aaa
mov
out
push
adc
sub
adc
aas
scas
aaa
cltd
hlt
test
insb
xchg
mov
adc
stos
push
in
inc
and
xor
mov
aaa
inc
fstl
addr16
or
lahf
adc
test
inc
mov
mov
loop
test
xchg
les
or
orb
imul
popf
jl
aas
cli
fcoml
and
pop
xchg
push
push
pushf
or
mov
mov
add
int
jmp
lods
aaa
push
mov
rcrl
ret
mov
es
mov
out
jl
stc
fimuls
sub
cmp
sub
stos
lret
shl
imul
lcall
mov
push
clc
scas
lods
data16
lret
scas
mov
popf
push
aad
or
mov
and
fsts
xchg
orb
adc
imul
mov
adc
adc
addr16
lods
sbb
stos
push
lret
test
sahf
in
setno
fildl
lods
in
or
xor
adc
insl
popa
cmp
hlt
ds
adc
pusha
inc
mov
shll
lea
mov
xchg
fildl
sbbb
in
dec
addr16
nop
xchg
adc
popf
mov
scas
cs
sbb
lret
adc
mov
add
xor
movsb
aas
push
fsubp
mov
aam
bound
sbb
sbb
mov
stc
bound
in
adcl
stos
or
out
xor
dec
mov
jg
xchg
ret
test
xchg
pop
mov
push
add
ret
fsts
lods
inc
pop
cwtl
arpl
and
or
fsubl
ss
xchg
dec
add
xchg
aad
pop
push
mov
mov
jno
rcrl
xorl
jg
daa
xchg
xchg
mov
fidivrs
fistl
and
lods
testl
outsb
mov
sub
fnstsw
daa
lea
jo
in
cmc
pop
and
push
pop
jecxz
divb
fsubl
lods
and
cmp
mov
test
mov
jge
push
dec
fdivrl
out
jg
testl
inc
adc
push
cmp
out
int3
cmp
xchg
repnz
movsl
and
or
push
and
cs
xchg
or
push
cmp
bound
je
dec
cli
call
or
rorb
cmp
in
push
dec
mov
mov
sub
xchg
sub
jno
mov
dec
andl
sbb
or
es
inc
cmpsb
mov
mov
stos
aaa
mov
dec
ljmp
fiaddl
add
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
jne
mov
inc
adc
sbb
adc
sbb
xchg
loopne
cmp
xor
lret
jnp
or
aas
popa
adc
nop
rol
xchg
lods
enter
adc
mov
cmp
arpl
loopne
dec
jno
loope
imul
cmp
in
lcall
mov
mov
pushf
cmp
cmp
mov
mov
adc
outsl
mov
adc
cltd
cmp
or
dec
outsl
and
cmpb
in
xorl
xchg
insb
adc
cmpsl
je
aad
pop
ret
pusha
fdivrl
push
or
push
jbe
xchg
push
ss
popa
xor
jge
mov
cli
cmp
mov
sub
sbb
ds
fldenv
into
into
and
lds
and
push
addl
shlb
pop
ljmp
test
pop
pusha
jmp
stos
fildl
jg
and
insb
mov
in
mov
jecxz
ja
mov
iret
xlat
or
xor
outsl
xor
insb
andl
out
std
add
outsb
inc
pop
xchg
ret
adc
decl
mov
ret
mov
push
test
sahf
add
mov
sbb
mov
cli
insb
orb
cmp
cli
dec
inc
mov
rclb
mov
add
inc
leave
sub
mov
mov
sbb
insl
loop
pushf
clc
pop
imul
cmp
into
cwtl
shl
mov
pop
into
push
aad
xchg
dec
lds
scas
fldl2t
cmpxchg
dec
sub
jmp
add
call
pop
sbb
imul
pop
out
mov
shrb
add
cmp
ja
adc
dec
sub
sahf
inc
std
icebp
cmc
adc
sub
mov
lds
adc
lock
cmp
and
adc
jb
test
jg
stos
stos
cmp
push
int3
jmp
mov
test
fimull
jp
dec
repz
orl
fs
mov
je
xor
data16
xchg
add
das
outsl
inc
push
pop
sub
stos
adc
cli
cmp
jp
scas
int
lods
bound
ret
shll
outsb
leave
ret
cmpsl
test
adc
inc
inc
xchg
outsl
sbb
subl
adcb
arpl
rcr
das
dec
inc
inc
add
and
mov
addb
push
rcrb
lods
cltd
lods
rcrl
xchg
insb
mov
test
cltd
not
lock
in
sbb
test
out
cmp
cmp
mov
push
sbb
push
jge
pop
popa
cmp
cmpb
mov
sub
mov
push
pop
and
jb
or
ficoms
pusha
into
mov
jnp
sub
lret
subl
loopne
push
loope
push
pop
cltd
push
shll
mov
lahf
and
pop
daa
and
int3
cld
sub
add
push
repnz
inc
stos
xor
ret
add
lret
and
loope
les
add
push
popa
pusha
clc
fldcw
mov
movb
jecxz
outsb
js
xor
lock
pop
sub
pusha
dec
dec
push
mov
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
add
jl
or
sbb
adc
sbb
out
jno
and
insl
xorl
mov
data16
mov
out
pop
lret
xchg
sub
outsl
mov
dec
mov
stc
dec
pop
jmp
lcall
ds
mov
inc
fldcw
push
clc
addb
data16
push
mov
popa
movsb
xchg
les
xor
pusha
push
jmp
push
imulb
insl
js
push
push
jb
fistpl
pop
out
mov
pop
pop
movsl
mov
mov
mov
sbb
and
add
mov
jae
mov
outsb
xchg
rcrl
xchg
es
fdivl
and
fldpi
les
dec
test
cld
mov
cmp
out
push
or
iret
sbb
outsb
loopne
insl
mov
sti
dec
out
loopne
dec
out
adc
fstl
movb
hlt
loop
push
andl
lods
dec
push
hlt
cmp
daa
push
cltd
les
push
sbb
or
subl
orb
sub
jl
imull
jecxz
lcall
stos
push
enter
mov
lods
test
call
out
and
stc
sbb
add
and
out
lahf
hlt
jae
and
sbb
push
push
pop
ss
imull
xchg
fstpt
xlat
fcmovnb
sbb
inc
add
jnp
js
add
test
dec
jns
jno
adc
cli
das
and
mov
push
inc
jno
mov
je
loopne
leave
xchg
int3
jg
mov
in
mov
mov
cltd
inc
enter
dec
dec
nop
mov
popf
add
adc
faddp
imul
cmpsb
cmc
sti
add
mov
lock
mov
fsubrs
enter
sub
mov
mov
jl
mov
add
mov
inc
dec
jo
add
xchg
ret
fisubrl
or
mov
jmp
outsb
adc
in
lods
mov
cltd
mov
jns
clc
scas
adc
inc
mov
pop
repnz
xor
int
cmp
test
adc
mov
xchg
iret
movsb
iret
sub
aaa
lock
fsubr
inc
es
adc
lahf
dec
mov
shlb
and
add
sbb
dec
jmp
cwtl
cmpsl
jno
pop
mov
les
in
movups
add
sbb
sub
int
outsb
pop
out
xchg
lds
and
pop
mulb
and
mov
xchg
ljmp
rclb
mov
addb
xchg
inc
mov
leave
mov
or
roll
shlb
mov
inc
jo
mov
pop
loope
mulb
hlt
mov
dec
rcrl
movb
jecxz
push
ljmp
dec
sub
ds
push
scas
pushf
fucom
mov
adc
cltd
clc
mov
lret
pushl
pop
cmp
jno
js
cmp
pusha
push
jg
rol
cwtl
je
jno
fwait
cltd
out
push
fnstenv
dec
repz
xchg
inc
dec
ret
movsb
pop
sbb
mov
into
mov
loopne
xchg
iret
pop
outsl
sub
addr16
andl
test
subl
jmp
mov
push
in
xor
cwtl
lods
mov
add
sbb
adc
sbb
loopne
xor
mov
mov
addl
repz
jmp
inc
cmpsb
push
inc
and
mov
xlat
psubsw
pop
cli
hlt
sbb
shlb
jne
mov
pop
jns
sub
mov
sub
in
sub
or
pop
jg
ret
cmpsl
mov
gs
jae
fisubl
xor
cmp
into
jmp
dec
xlat
shll
or
shlb
sbb
xor
das
add
addr16
mov
lock
je
mov
push
les
fildll
mov
test
insb
mov
insb
jp
dec
cli
push
mov
xchg
inc
in
enter
inc
or
or
imul
test
test
pop
ret
pop
shr
cmp
pop
stos
out
std
arpl
stc
outsb
mov
imul
cwtl
sub
aam
cmp
loope
push
sbb
ljmp
fmuls
das
xor
xor
mov
mov
out
push
lods
or
nop
adc
scas
jnp
movsb
mov
pushw
pop
cmpsl
loopne
cmp
pop
sti
xchg
pop
dec
mov
fwait
xor
mov
mov
mov
icebp
repz
xchg
dec
xchg
leave
icebp
enter
cmpsl
push
sbb
ds
and
out
daa
clc
mov
test
addr16
arpl
sub
dec
stos
xchg
std
mov
arpl
repz
aad
loopne
ret
pop
insl
lret
inc
jg
jle
xchg
xchg
nop
ret
hlt
add
or
clc
fistpll
dec
jp
adc
pop
adc
add
nop
ds
mov
xor
push
insb
pop
or
jl
out
lcall
arpl
xchg
popf
push
fs
lcall
or
sub
xchg
cld
lods
xchg
push
push
jmp
dec
sub
pushf
and
and
xor
xchg
dec
lret
dec
pusha
scas
icebp
ljmp
scas
mov
cmp
lds
imul
adc
sub
mov
or
mov
bound
sub
mov
cmp
mov
mov
or
repnz
jmp
add
jne
mov
inc
out
ss
movl
gs
dec
mov
test
xor
int3
insb
mov
rcl
ds
adc
and
loop
test
test
call
imul
pusha
and
aaa
cltd
das
xlat
or
std
mov
into
lcall
jo
add
negb
lcall
push
pop
aaa
test
mov
rorl
add
outsb
lret
inc
dec
outsl
and
dec
add
ds
int3
sti
xor
pop
adc
pop
cs
les
or
lods
test
mov
jp
out
mov
es
lea
hlt
push
xchg
out
js
inc
test
int
and
int
hlt
imul
cmp
scas
enter
jno
outsl
mov
stos
add
jmp
sti
lahf
or
rcrb
adc
mov
sbb
xlat
jo
push
and
enter
jle
jl
out
repz
add
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
in
fcompp
lret
clc
push
cltd
xchg
dec
mov
mov
sahf
cltd
and
push
jge
xchg
dec
or
or
or
pop
outsl
jnp
fcmovnu
adc
xlat
mov
pop
jp
fwait
scas
fwait
repz
sbb
fincstp
xchg
mov
int3
bound
pop
out
lret
and
dec
push
add
pop
xchg
cmc
cld
xor
sti
lret
push
sub
cmp
push
xor
pop
sti
dec
imul
mov
mov
push
popl
in
bound
lret
and
repnz
std
mov
pop
in
std
cmpsl
mov
add
xor
loopne
add
scas
jmp
sub
dec
mov
xchg
or
inc
stc
and
push
mov
popf
lret
imull
aad
sbb
sub
cmp
fldenv
push
sbb
mov
xor
out
movsl
pop
je
and
fsts
mov
dec
mov
jmp
lock
rorb
cmp
jmp
cmp
ja
cmpsl
daa
fwait
mov
loopne
cmpsb
std
sahf
scas
xchg
add
push
cmp
in
sub
or
and
jg
or
push
cmp
and
xchg
scas
xor
scas
scas
xchg
xchg
xchg
ds
insb
into
daa
clc
jno
shrl
mov
outsb
sahf
add
mov
insl
scas
in
popf
ljmp
arpl
pop
dec
outsb
cmpsl
iret
sbb
and
or
sbbb
in
ds
int3
xchg
lcall
je
xchg
cmp
push
rcrl
push
lds
lcall
xor
xchg
test
lahf
popa
dec
sti
vpsubw
out
outsb
adc
leave
mov
out
je
adc
or
dec
push
xchg
mov
decb
inc
aas
pop
mov
mov
xor
cmc
pop
test
push
push
orl
pop
sub
rorb
dec
adc
jg
jp
test
sbb
add
test
insl
cmpsl
mov
mov
add
test
sub
xchg
fidivrl
add
xchg
push
cmpb
push
mov
data16
xchg
push
scas
mov
arpl
nop
fwait
jb
es
loop
inc
and
adc
sub
mov
dec
inc
and
and
xchg
scas
sub
cmpl
mov
jle
fwait
add
fcmovbe
fnsave
adc
jbe
push
xchg
lcall
inc
rorb
nop
or
add
into
sbb
ds
dec
sub
rorb
push
xchg
aas
cli
inc
push
add
and
into
pop
pop
add
dec
xchg
jecxz
mov
rclb
insl
sarl
or
mov
mov
jmp
and
testl
cwtl
mov
cwtl
scas
aad
test
mov
mov
jae
push
sbb
mov
xlat
pop
mov
sub
stos
jbe
jb
sub
and
xchg
xchg
imul
cs
push
das
adc
inc
repz
mov
push
lret
rorl
enter
add
add
fimull
test
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
scas
int3
stos
mov
notb
sbb
adc
sbb
adc
popa
fidivrs
shl
adc
xchg
pop
mov
push
hlt
es
mov
ret
pop
push
mov
sahf
sbb
push
jmp
les
in
addr16
insb
jns
dec
dec
cmpl
add
int3
dec
jmp
loop
mov
xchg
repnz
sub
jp
popf
cmp
push
xchg
cli
out
nop
jbe
and
mov
pop
insl
or
ds
mov
sbb
and
test
pop
fidivrs
daa
dec
inc
cmp
mov
mov
push
mov
gs
nop
ja
xchg
popa
fldl
fsubl
jnp
pusha
jp
dec
xor
cmpsl
push
mov
aaa
loop
sub
mov
cld
icebp
lcall
sti
push
mov
cmp
mov
pop
mov
pop
aas
adc
inc
push
ret
ljmp
std
cmpsb
push
xchg
mov
jo
and
aaa
icebp
ret
cmp
mov
xor
or
inc
ret
pop
push
fistpl
fcoms
and
dec
mov
inc
test
jns
in
ffree
pusha
and
and
ror
loope
out
bound
enter
and
sar
loopne
insl
fs
dec
mov
mov
aas
pop
imul
rcrb
dec
stos
stos
xchg
jecxz
fistl
icebp
inc
imull
cmpl
sub
mov
loope
lret
push
pop
mov
sahf
cmpsb
mov
outsl
and
movsl
mov
adc
lret
andb
fisubs
xor
push
int3
aam
adc
mov
jmp
lcall
dec
jle
scas
shrl
movsl
inc
add
xor
sub
xor
jo
int3
sub
cld
mov
or
push
ret
lods
adc
nop
idivb
loop
lahf
ds
pop
jge
mov
test
lret
dec
cli
ret
xchg
popa
lock
jp
outsl
movsb
rcrl
addr16
test
out
test
or
mov
stc
jmp
mov
cld
add
mov
adc
dec
push
inc
inc
push
pop
mov
add
bnd
nop
push
loopne
sub
lods
jecxz
mov
stc
sbb
ljmp
mov
add
rcrb
push
and
mov
push
lret
push
nop
sub
and
adc
pop
ds
pop
fmulp
pop
pop
pop
sub
dec
popf
std
xor
sub
fmul
inc
xor
sar
xchg
js
dec
daa
jno
rolb
mov
rolb
vshufpd
xchg
int3
lods
inc
pop
push
add
inc
loope
xor
add
shlb
adc
pop
arpl
fwait
aas
dec
sbb
add
lds
insl
adc
pop
cmpsl
adc
movsl
into
in
repz
push
push
xor
cmp
scas
cmpsl
stc
je
jg
ljmp
js
adc
cld
jmp
jae
xchg
cwtl
add
pop
nop
loopne
or
or
adc
adc
mov
fiaddl
mov
movsb
mov
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
xchg
fidivs
pop
dec
xchg
fcmovne
pusha
jo
sbb
inc
out
lcall
mov
dec
sahf
mov
in
sahf
mov
cltd
pop
or
mov
or
shlb
inc
and
pushaw
push
lds
cli
sbb
shrl
pop
sub
cmp
int3
sbb
cmc
sbb
and
add
xchg
shll
sbb
stos
cmp
pop
shll
leave
add
mov
inc
lock
lock
jecxz
out
inc
or
mov
pop
sub
sub
aas
sub
mov
xorb
aas
xor
insb
mov
jns
js
mov
push
sahf
test
fucomi
insl
icebp
dec
mov
xchg
popa
mov
sbbl
cld
popa
fistpll
nop
xor
arpl
ret
loopne
or
clc
cmc
add
cmp
and
add
sbb
mov
fmull
cltd
adc
and
mov
addb
andb
dec
pop
push
lret
xlat
rolb
and
and
cs
mov
xchg
jp
cli
xchg
pop
adc
cs
and
inc
in
rcrl
mov
dec
sub
mov
in
push
pop
pop
cmpsb
js
mov
pop
popa
pop
mov
movq
jl
mov
push
pop
sbb
xlat
pushf
xchg
sti
aam
mov
jo
jp
lock
jle
sub
pop
repz
lods
pop
in
inc
repz
or
fwait
push
mov
arpl
je
inc
push
sub
lods
gs
test
int
mov
divb
jns
adc
pop
sub
in
popf
or
sar
mov
repnz
cmpsl
aad
cmp
or
adc
jp
movb
pop
mov
addr16
fs
in
js
lock
and
fwait
pop
orl
pop
popl
jnp
push
ss
pop
iret
insl
xor
push
push
in
mov
pop
xor
and
outsb
dec
xor
push
adc
mov
mov
in
js
test
shrl
push
push
pusha
mov
and
orl
sub
jns
pop
add
xchg
add
in
add
inc
or
or
call
fldenv
or
fildll
rorl
sbb
gs
mov
inc
or
adc
fxch
fs
cltd
inc
adc
xor
cmp
dec
pushf
test
pop
mov
lret
iret
test
mov
adc
imul
addl
mov
add
fcmovbe
sarl
sub
test
orb
cmp
stc
sbb
push
enter
sub
inc
mov
mov
xor
xor
cmp
jecxz
js
sub
ret
ret
or
jecxz
jae
test
adc
and
outsb
sbb
mov
push
fldl
sub
adc
pop
nop
mov
or
add
xchg
xor
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
in
sub
inc
jmp
sbb
cs
mov
pop
rdpmc
out
loopne
cmp
jnp
cwtl
cmp
add
cmpsl
sub
popf
dec
es
fiaddl
dec
or
lret
xchg
sti
jmp
notl
adc
jp
fs
lret
pop
test
lds
push
cmp
sub
lock
popf
pop
xor
repnz
mov
ret
dec
ret
stos
dec
jnp
pushf
sub
sub
mov
adc
cld
and
or
jecxz
mov
adc
mov
sub
test
or
movsb
fimull
or
cmp
test
mov
jle
lret
and
add
aas
mov
jo
jge
push
pushf
add
jmp
sbb
loope
mov
addr16
sar
mov
sbb
mov
push
jnp
xor
push
inc
enter
ds
xchg
sub
jo
push
cmpsb
aaa
pop
mov
fsubs
jno
xchg
jae
shll
es
lock
mov
mov
mov
mov
jno
nop
pop
push
add
push
ds
call
push
add
adc
jb
mov
xor
lret
and
daa
mov
xor
push
popa
jmp
ljmp
push
subl
lds
cmpsb
aaa
addb
cli
pop
wbinvd
ds
cmpsb
pop
in
add
leave
fisubrl
sub
je
xchg
cltd
shll
dec
jns
and
dec
scas
cltd
inc
imul
inc
or
or
cwtl
sub
mov
jecxz
int
dec
insl
cmc
inc
sub
cmp
repz
and
ja
sub
adc
inc
inc
insl
cwtl
imul
cld
jnp
aaa
xor
or
mov
adc
push
int3
andl
inc
sarl
lahf
stos
inc
fildl
int
bnd
test
andl
mov
enter
imul
mov
ss
out
nop
mov
popa
ret
in
rdpmc
enter
in
mov
das
lret
inc
lcall
pushf
stos
push
push
dec
push
add
push
aad
icebp
adc
ds
push
add
pop
pop
jb
sbb
jle
movsl
mov
pop
stc
cli
adc
cmp
aaa
push
adc
fmul
ja
mov
xchg
out
xor
adc
into
das
sub
arpl
xor
xor
ret
xchg
sub
test
fucomip
incb
pop
andl
sbb
aas
adc
mov
lds
add
jno
cmpsl
pop
xchg
dec
fdivrs
out
or
lds
repnz
xor
pop
aas
out
lods
sarl
enter
push
dec
das
jl
testl
add
scas
std
lret
xchg
out
sti
cltd
imul
out
mov
xchg
mov
jmp
lea
imul
nop
popa
imul
jmp
push
jecxz
sbb
mov
push
scas
orl
test
scas
jmp
push
inc
call
aaa
mov
test
in
stc
dec
nop
sti
push
shll
xor
sarl
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
mov
sbb
sbb
sbb
mov
out
lret
cmp
mov
or
ret
pop
and
inc
cmp
sub
xchg
jecxz
push
ret
rolb
xor
testb
xchg
push
sub
in
mov
sub
lds
je
inc
popa
sbb
fcompl
dec
repnz
mov
push
sti
clc
es
mov
leave
sbbl
aad
in
xchg
sbb
and
jp
mov
jge
sub
ret
sarb
dec
dec
decb
scas
lret
es
and
cmp
lret
movsl
add
mov
popf
and
sub
aas
out
xor
jnp
push
enter
or
and
ret
dec
push
bound
xor
or
lock
mov
or
std
or
mov
sarb
or
pushf
loope
fsubr
ror
sbb
mov
xor
push
pusha
and
inc
or
fisttpll
or
pop
mov
lret
dec
insl
out
idivl
pop
cltd
xor
jge
rcrl
sbb
mov
in
popa
and
lss
xchg
js
inc
jnp
dec
push
int3
adc
mov
cli
repz
test
push
sub
cli
popf
jae
popf
pop
int3
cwtl
mov
adc
fsubs
mov
fbld
xchg
mov
mov
push
push
movsl
test
outsb
adc
cmp
gs
pop
shrl
int
sahf
mov
shll
push
test
sbb
clc
imul
dec
test
push
push
cmpsb
sbb
or
or
jmp
ret
cli
imulb
sbb
push
imul
out
out
push
pop
mov
pop
flds
call
insl
idivl
sbb
out
xor
test
aaa
adc
mov
push
in
inc
aas
in
enter
mov
scas
dec
and
movsb
cmc
add
xor
minps
mov
push
fwait
test
pop
popf
mov
pop
jp
jbe
sub
js
xchg
add
add
lds
jo
cmp
scas
call
xchg
add
add
shl
push
jnp
es
bound
xchg
and
mov
popa
in
push
or
clc
pop
in
cli
xchg
adc
push
setne
adc
jge
sbb
mov
lods
jp
mov
outsl
adc
pop
inc
jmp
sub
push
sub
call
add
push
leave
mov
mov
mov
xchg
and
fimuls
xchg
or
outsl
xchg
pop
or
lahf
shlb
leave
dec
fwait
gs
mov
pop
loope
xor
adc
scas
sti
inc
adc
pop
ljmp
mov
xor
pop
inc
roll
dec
repz
mov
adc
mov
sahf
push
lret
lea
pop
inc
jp
cli
aas
stc
les
inc
mov
jb
inc
sub
popa
sbb
ljmp
jg
push
pop
mov
mov
mov
pusha
test
hlt
stc
xor
and
enter
mov
rol
outsl
adc
fisubrs
inc
pop
adc
sbb
cmc
and
pop
lods
ja
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
sbb
shll
adc
sbb
lods
xor
cmp
xchg
mov
push
out
ror
fs
cmpsb
repz
add
mov
mov
popf
or
xchg
pop
sub
fadds
inc
hlt
fs
sbb
push
cmp
mov
mov
insb
in
aas
push
jno
outsb
and
add
push
sarb
dec
push
lds
movsl
sti
daa
inc
bound
push
ljmp
cmp
xor
movb
add
cwtl
out
cmp
ficompl
xchg
fs
xchg
sub
fadds
mov
mov
and
xchg
stc
ss
aas
add
jl
clc
rcl
imul
cld
mov
sbbl
rol
nop
imul
mov
mov
xor
lds
and
sub
sbb
fucomip
sbb
outsb
test
or
dec
in
not
nop
push
pop
cmc
cs
test
sbb
in
cwtl
jl
jl
add
sbb
mov
mov
in
pop
sbb
das
jae
cs
sub
xchg
xchg
sub
pop
out
xor
xchg
aaa
or
icebp
adc
inc
pop
pop
les
mov
push
loopne
fwait
and
jmp
cmp
out
pop
adc
fldcw
mov
push
rclb
sub
cwtl
xchg
push
test
xor
and
xor
push
dec
fiadds
scas
pop
fisttpl
jge
les
jecxz
pop
ss
xchg
popf
xlat
xchg
dec
adc
call
cltd
fucomp
test
dec
inc
mov
es
loope
mov
insl
repnz
jne
or
loope
dec
pop
in
lds
dec
jbe
lods
fucomip
dec
pop
add
cmp
or
jb
xchg
movsb
and
push
in
xchg
xor
mov
ss
fisubs
les
add
fwait
add
dec
push
in
fsubrs
sbb
jle
out
cld
stos
or
jae
ljmp
stos
loopne
out
orb
push
jae
mov
stos
cmp
pushf
push
jnp
mov
push
cmpsl
test
lock
mov
mov
mov
loop
sbb
pusha
and
and
push
test
sub
scas
xor
pop
mov
jg
sub
xchg
rcl
inc
ljmp
lcall
clc
inc
notl
jns
push
flds
dec
aas
mov
push
or
out
pop
jl
cmp
test
popf
ljmp
and
cmpsb
inc
ja
repnz
cmpsb
jae
mov
pop
cmpl
pop
lret
mov
inc
and
lret
or
inc
or
dec
add
jo
jp
popa
cltd
fwait
jge
addr16
mov
arpl
out
xacquire
fidivrs
aam
dec
adc
cmpsl
xor
pop
jg
adc
fisttps
mov
outsl
push
and
sarl
mov
fwait
xchg
dec
pop
gs
push
test
in
and
dec
iret
ljmp
sbb
cmpsb
cs
xor
lods
dec
mov
stos
lret
or
inc
jl
adc
popf
stos
ja
mov
scas
repz
dec
push
pop
fidivrl
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
or
jno
inc
rcll
sbb
adc
sbb
clc
mov
daa
call
pop
mov
cs
mov
cmp
aas
ret
xor
cmp
xor
repnz
and
mov
inc
xchg
icebp
pop
pop
decl
pop
movsb
ja
lcall
aas
arpl
addr16
push
lahf
mov
sub
call
dec
test
call
dec
cs
es
xchg
icebp
pop
add
mov
insl
fsubs
mov
pop
mov
and
lahf
add
add
popf
je
push
xchg
pop
jb
jp
in
pop
nop
fnstcw
and
repnz
stos
lods
loope
mov
lods
sarb
xchg
mov
insb
sub
mov
dec
mov
in
add
insb
mov
shll
out
out
shl
in
lret
mov
enter
sub
pop
fstpt
repz
fbld
jns
pop
gs
mov
pop
sbb
fisttpll
dec
xchg
adc
and
push
lahf
or
sbb
mov
fistps
inc
shll
and
mov
inc
jmp
repnz
pop
sbbb
pop
mov
es
out
push
lds
movsb
fcmovnb
jp
clc
loop
adc
push
push
gs
mov
cli
jmp
mov
xor
jno
rorl
and
mov
rcr
xchg
and
mov
push
fsub
in
push
leave
lret
or
cmp
test
or
mov
xchg
cvtps2pi
push
sbb
outsb
xor
push
mov
inc
pop
lods
jp
cld
push
push
pop
js
xor
xlat
push
stos
dec
sarb
push
es
insl
cmp
mov
xchg
shlb
insl
inc
xlat
cmpsb
imul
xor
out
fidivrs
icebp
add
inc
mov
lahf
dec
push
mov
mov
mov
mov
push
jle
bound
dec
aam
test
shrb
xchg
or
mov
xchg
sbb
sub
pop
es
sbb
repnz
pop
mov
cld
cmp
in
dec
mov
outsl
cwtl
jge
pop
icebp
add
push
dec
and
dec
add
sub
into
mov
les
mov
out
pop
xchg
bound
jl
fildll
lahf
mov
add
xlat
sub
sub
clc
ja
int
out
das
lea
shlb
jp
and
loope
mov
popa
fs
out
icebp
sbb
cmp
add
mov
jbe
cmp
je
jb
dec
pause
cmpsb
and
dec
jae
nop
jmp
cmp
test
dec
insb
ret
add
xor
mov
and
add
cmp
nop
push
fs
cmp
mov
lcall
xchg
mov
dec
notb
inc
pop
jns
jnp
int
test
out
xor
xchg
push
inc
sub
push
mov
mov
leave
ss
test
mov
insb
cli
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
loopne
stos
inc
int
sbb
adc
sbb
mov
jnp
add
out
out
movsb
inc
sub
pop
and
in
lret
aaa
xchg
pop
pop
jae
xchg
mov
add
xor
stc
pop
cli
inc
sbb
push
add
jnp
inc
mov
scas
aas
cmp
sub
cltd
int
sbb
inc
dec
fdivrl
lret
pop
nop
rcpps
fsubs
shr
sub
sbb
mov
push
mov
and
jne
add
aas
jmp
xor
iret
fistps
lret
mov
testl
mov
push
cmpsb
fisttps
sbb
out
mov
jb
adc
stc
add
push
jmp
inc
loopne
sub
loopne
sbb
jg
mov
clc
clc
imul
push
inc
ret
into
fisubs
mov
push
cmc
iret
dec
stos
je
dec
stos
push
cmpsl
sbb
loop
jbe
lea
pushf
test
pop
sbb
pop
aas
dec
enter
into
push
dec
inc
lds
call
nop
in
pop
stos
popa
mov
jmp
cs
mov
mov
js
cmp
mov
into
ss
push
out
movsl
inc
push
int
sub
imul
int
test
cmp
addb
fs
les
pop
jecxz
jno
pusha
lods
pop
and
mov
push
cltd
lods
push
or
inc
orl
mov
andl
inc
sub
les
xlat
xchg
lock
add
mov
aas
cltd
into
cmp
jmp
std
stos
jge
xchg
lea
outsb
and
aas
mov
into
shlb
and
dec
adc
iret
adc
mov
and
mov
add
xchg
xor
pushf
xchg
popa
cmp
jae
movd
scas
cmpsb
arpl
repnz
xchg
arpl
es
aam
cmp
inc
add
lods
sub
mov
pop
and
imul
xchg
mov
insb
pop
out
jae
or
mov
aad
mov
xchg
xchg
or
mov
lcall
jae
inc
inc
imul
pushf
mov
inc
dec
mov
cmp
nop
or
push
xchg
ss
sub
cld
or
roll
rcrl
ds
pop
xchg
cmove
test
fdivrl
adc
decb
pop
jb
outsb
push
xor
mov
add
testl
pop
addr16
lods
mov
xor
loopne
cmp
loope
ja
int
scas
mov
lds
mov
mov
inc
add
dec
or
jns
dec
leave
scas
inc
cltd
cltd
mov
sub
iret
pop
mov
sahf
xlat
inc
fmul
sbb
or
fsubr
clc
xlat
ss
mov
and
or
ret
shlb
hlt
and
in
mov
lock
testl
or
xlat
xchg
popa
or
xchg
lcall
movsl
insl
dec
fldl
pop
pop
add
in
mov
mov
sbb
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
je
jo
lds
sbb
adc
sbb
fildll
cmp
scas
testl
dec
jmp
out
and
pop
ret
and
dec
icebp
cld
mov
cmp
aas
sbb
xchg
xchg
mov
xor
pop
imul
inc
push
cltd
fs
cmpsb
int
xchg
sti
lahf
jmp
xchg
adcb
out
jle
pop
sub
stc
cmpl
jp
std
xlat
lret
cmpsl
lret
pop
cmp
inc
popf
fnstenv
ja
subl
mov
movb
fcom
test
dec
out
push
or
cltd
iret
aam
mov
pop
mov
mov
into
inc
and
into
mov
xchg
andl
shrb
adc
andl
out
push
mov
or
or
in
and
jno
shlb
push
lahf
jmp
sbb
adc
test
push
or
lret
je
sub
in
dec
sub
daa
sbbb
out
sti
lret
bswap
pop
adc
jno
push
scas
sbbb
dec
xchg
mov
mov
pusha
xor
or
mov
fs
es
sbb
aad
push
push
push
testb
xor
mov
push
xchg
xlat
mov
push
cmp
mov
dec
sbb
cld
dec
cmp
jg
mov
data16
arpl
xchg
jne
mov
int
inc
mov
pop
mov
ret
jo
negb
sub
cmp
push
test
adc
aas
jno
mov
push
lds
das
pop
sub
test
mov
call
outsb
nop
pusha
cmp
add
jge
pop
and
aaa
xor
shrb
ja
jge
ljmp
daa
mov
or
cmp
hlt
fisubs
sbb
stos
addps
push
xchg
sub
aam
in
cmc
jnp
popf
lcall
mov
in
dec
mov
xor
and
int
test
or
pop
scas
shrl
or
daa
out
ds
or
cmp
leave
sub
pusha
mov
aad
test
jo
ret
loop
push
fs
add
fsubl
lcall
insl
pop
adc
sbb
aaa
orb
sbb
dec
jnp
sub
cltd
jo
inc
mov
mov
iret
jmp
jb
and
xor
fs
jne
in
jg
pop
aaa
or
loope
adc
stc
add
pop
imul
dec
call
test
mulb
adcb
push
das
pop
notl
mov
insb
stos
nop
loop
arpl
sub
add
sbb
out
mov
jnp
and
fxch
je
icebp
out
es
imull
jns
jl
inc
jp
lea
call
dec
or
push
maxps
insb
mov
icebp
stos
shll
lock
test
mov
xchg
or
lods
dec
xlat
lods
xor
mov
pop
jno
idivl
mov
jl
adc
xchg
cmp
aaa
stos
ds
clc
mov
push
fcomp
inc
sti
jnp
aam
stos
pop
sbb
cmp
je
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jl
mov
sbb
scas
mov
mov
adc
mov
lock
fwait
ret
sub
jl
mov
adc
rcll
dec
mov
orl
in
cmp
mov
mov
pop
mull
lods
in
pop
adc
adc
fcmovnbe
jb
mov
movsb
add
or
les
into
xchg
adc
pop
mov
push
mov
fsubrs
mov
dec
xchg
jns
test
adc
mov
gs
enter
mov
jg
loop
lret
cmpsb
xor
adc
xchg
mov
mov
fists
sbb
fimull
notb
popf
push
test
roll
leave
mov
push
inc
push
add
cwtl
pushf
daa
pop
sub
rorb
mov
sbb
lret
pop
cs
pop
pusha
lods
mov
sahf
jle
jns
inc
lret
ss
inc
xor
and
je
outsb
leave
push
xor
ja
sbb
push
dec
sub
mov
xor
sub
and
pop
stos
frstor
and
mov
pop
aam
and
jno
fnsave
sahf
dec
add
mov
jae
mov
repz
int
lea
pop
mov
lock
ror
ds
mov
mov
cmpsb
stos
shlb
lret
sub
movsl
push
xchg
sub
push
pop
in
arpl
jp
lcall
sub
add
pop
mov
repnz
inc
xchg
cwtl
rcll
xchg
out
idivb
leave
hlt
arpl
jp
cmpsb
cmp
xchg
ja
push
add
pop
push
mov
cmp
dec
das
xor
jne
and
mov
mov
mov
sub
sub
mov
sub
cwtl
lods
hlt
adc
fadd
jns
xor
mov
shll
bound
sti
xchg
in
push
sahf
xchg
xor
inc
and
cmp
mov
mov
add
adc
pushf
mov
sub
andb
mov
jg
ds
mov
lea
mov
aas
dec
mov
xchg
notl
lock
outsb
lods
dec
dec
loope
and
pop
xchg
sbb
add
outsl
sub
clc
push
aam
test
ficoml
je
adc
pop
test
jbe
mov
cmc
dec
xchg
in
aam
and
pop
ss
call
in
das
xchg
push
adc
movsl
adc
imul
sarl
xchg
push
test
out
push
sbb
dec
mov
pop
rcll
xchg
mov
sbb
test
dec
movsl
mov
lds
cmp
sbb
js
aad
add
add
add
imul
mov
cmp
test
dec
lret
mov
mov
stos
js
sub
sar
or
rcrl
dec
or
mov
mov
mov
push
arpl
lods
mov
lock
xchg
inc
inc
lret
lea
dec
subl
movsl
insb
iret
push
pop
inc
addl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
stc
loope
mov
inc
xrstors
push
push
nop
in
xor
dec
fcmovne
pop
and
test
pop
stos
mov
cld
push
mov
push
sbb
sub
hlt
scas
jnp
cmp
sub
stos
iret
fdivrl
mov
pop
xor
sbb
outsl
data16
gs
sbb
les
jecxz
xchg
or
cmpl
xlat
test
lds
and
pop
jb
cltd
dec
xor
popa
sbb
adc
jecxz
fstpt
lock
pop
push
jl
je
pop
scas
fwait
jae
dec
sub
mov
fdivrl
and
mov
nop
scas
adc
movsb
pushf
dec
xchg
jp,pn
icebp
dec
lea
and
sub
pop
testl
std
cltd
dec
mov
movsl
bnd
mov
or
mov
add
paddb
cli
sbb
push
jecxz
jecxz
sbb
push
mov
js
loopne
cmc
jb
xchg
push
fidivrs
aad
xchg
pop
add
frstor
repnz
addl
adc
in
add
inc
iret
xor
adc
jnp
das
cmp
int
adc
fldcw
mov
test
jb
movsl
loopne
push
jl
mov
popf
stos
cmp
mov
fs
cld
fwait
push
jne
insl
or
mov
lods
pusha
cmp
lock
stos
mov
mov
cmp
pop
ret
pop
fwait
sub
mov
shl
ja
xchg
cmp
ljmp
aaa
mov
mov
cltd
jp
hlt
pusha
dec
das
daa
xchg
cmp
xchg
cs
call
xlat
mov
das
orl
in
inc
lock
add
cmp
test
mov
jecxz
test
addr16
inc
sbb
push
mov
push
in
leave
mov
lea
xchg
sub
xor
out
lret
insb
insl
mov
or
sbb
stc
inc
sbb
rcrl
jb
rorb
aad
inc
lret
mov
ljmp
sbb
sub
into
push
test
sub
iret
sub
aam
ficoml
fsts
outsl
lahf
adc
add
sub
cmp
mov
mov
sbb
mov
lock
sahf
add
push
ljmp
test
mov
scas
imul
lds
sub
inc
cli
into
push
inc
and
or
jbe
xchg
dec
pop
cld
xchg
mov
pushf
pop
push
push
inc
es
push
repz
js
sub
inc
ljmp
inc
mov
int
adc
dec
sbbl
dec
push
fmull
pop
xor
mov
lret
sti
sub
call
ljmp
fldcw
jmp
pop
repz
nop
in
cmp
pusha
mov
cmc
mov
jmp
sub
dec
mov
sbb
in
std
imul
jmp
test
jge
jno
sahf
pushf
icebp
xor
frstor
mull
repnz
pop
and
fs
and
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
adc
mov
push
xchg
into
sub
push
push
mov
adc
sbb
mov
dec
fnstcw
ja
popa
pop
dec
cmpsb
push
push
out
lret
xor
inc
cmc
sub
jne
sub
and
out
cmp
or
lock
and
pop
push
loopne
call
xchg
mov
stc
push
jnp
in
ret
mov
bound
mov
cmovae
sahf
pop
xor
jmp
sbb
push
cwtl
popa
sbb
stc
pop
push
adc
dec
mov
div
sbb
out
fldt
mov
dec
divb
pop
notl
pop
cld
xor
jecxz
sub
cld
ret
popa
add
xchg
call
mov
clc
ret
mov
jecxz
xchg
test
or
pushl
loope
icebp
orb
gs
fldt
cmp
xor
popf
cli
rcrb
xchg
mov
lret
inc
sbb
jb
sti
out
iret
pop
cmp
outsb
push
ljmp
out
movsl
jnp
bound
cmc
pop
lahf
add
inc
add
enter
fdivl
enter
xor
arpl
sub
jns
push
push
test
setns
mov
pop
ds
mov
cld
lods
pop
mov
rcrl
push
shlb
in
sbb
outsb
or
imul
fidivrs
addl
push
push
pusha
add
inc
rclb
cltd
mov
jne
mov
adc
in
pop
mov
or
das
enter
mov
xchg
inc
into
pushf
test
ds
insb
jno
inc
adc
mov
test
loope
addps
push
push
fiaddl
push
das
shrl
xorl
aad
lock
dec
stos
cs
clc
mov
or
push
push
xor
push
mov
popf
fwait
insl
pop
inc
lds
stos
push
xor
mov
push
lea
bound
cwtl
inc
cmp
aad
xlat
lods
mov
mov
clc
pop
xor
sub
pop
xchg
ffreep
or
gs
std
mov
cmpsl
push
fs
movsl
dec
xchg
or
sub
xchg
je
test
push
ret
loopne
loope
jmp
insl
adc
fucomi
into
xchg
and
jns
jle
xchg
sbb
jnp
cli
nop
push
mov
mov
aad
jnp
jg
leave
mov
cmpsb
ljmp
and
pop
mov
fidivrl
sub
ret
outsb
lret
dec
xor
loope
fcmovnb
hlt
push
shr
cmp
icebp
dec
push
jo
repnz
jecxz
inc
jecxz
clc
aad
cmp
adc
adc
xorl
aaa
push
pop
outsb
sbb
mov
sarb
mov
ret
test
shll
jae
mov
fs
jne
cli
pushf
mov
pop
test
sbb
insl
or
out
dec
push
mov
clc
aas
test
aas
les
scas
lahf
xor
add
push
les
mov
andw
dec
push
xor
jne
mov
cmp
add
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
sahf
ret
inc
test
sbb
addr16
test
jmp
lea
pop
ret
xor
aaa
lock
and
repnz
mov
shlb
and
es
and
fldl
cmp
push
adc
inc
sub
push
test
sub
and
lcall
enter
jg
pop
push
js
orl
setbe
and
int
in
add
xchg
idiv
sub
ret
repnz
pop
xchg
dec
ljmp
push
pop
movsl
dec
inc
mov
ja
stos
xor
in
scas
mov
in
xor
push
loope
jecxz
lcall
popf
jg
xchg
call
sub
out
sub
testl
sub
bound
and
dec
and
pusha
orl
adc
add
aas
add
aas
mov
fwait
test
iret
push
xchg
and
test
mull
outsl
and
loop
xor
jns
fnstsw
mov
inc
inc
fildl
sbb
add
dec
jle
sbb
pop
mull
xlat
stos
hlt
aam
dec
in
xchg
fwait
ljmp
or
pop
movsl
aam
fistpll
lock
insb
out
xor
xchg
popa
notl
dec
xor
ret
cmpb
test
mov
inc
jae
push
js
add
mov
stc
roll
in
movl
xchg
cwtl
icebp
popf
push
testl
xchg
dec
inc
or
loop
clc
xchg
add
mov
nop
or
or
push
popa
iret
mov
cwtl
ss
mov
adc
inc
adc
fistpl
pop
pop
push
imull
cmp
scas
test
or
jecxz
ret
adc
sub
fcmovu
fimuls
lds
inc
cmp
pusha
loope
adc
es
dec
test
pop
jnp
push
inc
cltd
jb
fldenv
add
sub
leave
jge
cmpsb
call
xchg
cmp
xchg
mov
jl
int
and
push
cmp
fdivrl
lea
aam
inc
jl
dec
nop
pop
jns,pt
mov
add
xchg
dec
inc
pop
test
xor
xchg
mov
xor
in
enter
out
imul
fcompl
stos
dec
stos
inc
scas
mov
or
cmpsl
jg
adc
mov
clc
inc
adc
ja
add
notl
pop
mov
rclb
inc
or
adc
jbe
lock
cmp
cmpsb
and
mov
jo
dec
orl
push
fidivrl
in
mov
adc
sbb
popa
cmpb
xor
jmp
icebp
orl
dec
xor
add
xchg
sub
push
xor
les
lahf
int
stos
jmp
hlt
mov
inc
int
mov
adc
int3
stos
jb
pop
popf
inc
push
xchg
xchg
adc
les
data16
dec
ret
adc
xchg
jae
dec
xchg
and
out
mov
push
aaa
cmovno
cld
mov
xor
push
jmp
push
add
fsts
leave
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
aas
data16
push
mov
sbb
jmp
mov
push
or
aaa
cmp
sbb
sub
xchg
add
inc
inc
dec
stc
loope
out
push
xor
xor
sahf
dec
mov
dec
ss
out
fcmovnb
enter
lods
mov
scas
cltd
xor
adc
adc
out
push
pop
ss
mov
mov
mulb
sahf
orl
xlat
fistl
or
lahf
push
ds
adc
sti
dec
mov
or
xchg
or
and
fucomi
rcrl
dec
imul
cmc
jne
sbb
fiaddl
jp
adc
pusha
jno
adc
gs
dec
xchg
xor
rol
sbb
xchg
cmp
cmp
mov
outsb
mov
mov
out
inc
stc
dec
inc
pop
add
or
sub
and
pusha
sub
into
ja,pn
icebp
or
mov
inc
jecxz
add
mov
or
rcll
mov
or
mov
in
lds
or
dec
mov
test
push
and
lods
xor
cmc
daa
movsb
xor
aad
xor
lds
addr16
repnz
mov
adc
loop
mov
jg
jno
or
adc
je
aas
xlat
clc
jg
fldt
xor
inc
pop
pop
loop,pt
sbb
push
das
lods
and
xchg
imul
and
xchg
dec
cmp
mov
fld
imul
ret
lahf
xchg
mov
stos
enter
xchg
je
xchg
mov
inc
out
repnz
int
dec
insl
mov
adc
out
or
pop
into
push
mov
push
cli
push
push
mov
mov
cmpsb
jmp
cltd
aas
and
push
test
xor
mov
xchg
jp
sahf
lock
dec
cltd
push
outsl
jno
push
mov
je
mov
test
insl
mov
cmpsb
imul
mov
popa
adc
xchg
test
xor
std
ja
add
mov
add
xchg
es
jo
and
adc
mov
jle
xorl
mov
pusha
fisttps
imul
push
sub
sbbb
pop
addr16
fwait
pop
into
ret
inc
or
pmulhuw
lods
cs
cs
cmp
scas
test
mov
dec
test
arpl
lret
jb
xor
pop
clc
ret
mov
sub
gs
mov
sub
pop
outsb
sar
push
mov
mov
push
icebp
mov
inc
push
rorl
decb
movsb
int3
mov
jmp
cmp
cmp
jle
aas
xor
jg
in
sub
cmp
push
inc
iret
xor
mov
repnz
jg
call
add
repz
mov
or
xchg
mov
xchg
in
iret
lcall
es
cld
in
pushf
mov
or
pop
jl
mov
popf
enter
adc
dec
xchg
and
cwtl
add
mov
xchg
mov
mov
inc
inc
movsl
je
jne
loope
orl
push
adc
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
out
addr16
and
sbb
popa
mov
lods
push
jno
lods
sub
push
and
dec
fwait
into
sbb
push
stc
jo
pop
imul
insl
lahf
addr16
pop
icebp
popf
adc
push
push
addl
jecxz
lock
test
mov
and
jge
imulb
sbb
and
popa
lcall
or
xchg
test
jmp
mov
movsb
xchg
push
mov
or
jl
lods
ret
es
xchg
mov
mov
retw
lret
loopne
cld
xchg
inc
dec
inc
pop
cltd
mov
xchg
and
and
jp
mov
aam
push
xchg
test
rorl
out
in
pop
pop
push
aad
and
jge
xor
lds
inc
xor
sarb
repnz
dec
mov
clc
xchg
test
mov
lds
outsb
jecxz
scas
dec
mov
addr16
in
call
lock
aaa
add
pop
cwtl
mov
fnstcw
pop
aas
push
test
dec
xor
mov
pop
insb
mov
dec
cmp
dec
fwait
mov
sub
inc
xchg
mov
dec
sbb
psllq
inc
xchg
mov
sub
dec
sub
push
inc
add
or
fiadds
repnz
push
aaa
pop
xchg
cmp
pop
mov
inc
inc
shlb
rolb
rcll
xor
sub
je
testb
add
cmc
inc
aas
clc
and
sub
aaa
ja
test
push
sub
pop
mov
data16
es
scas
mov
cmpsb
addr16
lret
lahf
imul
cli
aas
xchg
int
outsl
mov
mov
cmpl
xchg
jb
pushf
icebp
inc
or
push
inc
dec
jmp
sbbl
xor
dec
out
cwtl
arpl
movl
push
stos
test
rcl
sub
mov
imul
cwtl
mov
fbld
loop
ja
add
imul
inc
push
jecxz
popa
lahf
push
insb
sub
xor
daa
cltd
pop
jb
mov
daa
sbb
movsb
xor
scas
adc
jge
js
or
enter
adc
dec
sub
add
stos
adc
and
cmp
jo
sbb
sub
cld
dec
or
jmp
sbb
popa
mov
push
mov
mov
cld
mov
or
lahf
mov
decb
aam
push
adc
cmpsl
push
add
nop
sbb
add
jnp
xchg
sbb
aam
fs
adc
lret
push
lahf
fimuls
mov
pinsrw
add
inc
aad
cwtl
lret
into
and
pop
sbb
ret
jp
ficompl
dec
hlt
mov
sub
out
dec
ljmp
push
mov
push
xlat
sti
js
sub
hlt
fwait
addr16
mov
mov
push
movsb
shr
push
push
fdivrs
ds
fisttps
jne
xchg
push
repz
jnp
je
sti
inc
jle
aas
aam
andb
and
adc
cmp
lods
jle
pushf
inc
mov
test
into
inc
lock
fcomip
mov
jnp
bnd
xor
sbb
or
ss
adc
mov
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
loope
push
xchg
push
sbb
adc
sbb
cmp
sub
pop
pop
mov
out
rcrb
test
xor
ja
movsb
repnz
push
and
mov
add
or
jp
ljmp
scas
arpl
int
fsubp
xchg
dec
xor
bswap
and
sbb
push
daa
std
push
arpl
mov
nop
xchg
shl
cmp
inc
imul
and
jl
cltd
push
xchg
cmp
sti
mov
repnz
pop
or
pop
jno
cmp
mov
es
out
mov
jecxz
outsl
loope
pop
mov
ret
sub
je
ljmp
sub
mov
movsl
adc
push
fistpll
jl
inc
sbbb
or
push
loopne
mov
ja
and
sub
xchg
lcall
addr16
ret
outsl
rcrl
test
add
mov
insl
pop
callw
rcrb
mov
mov
jmp
ja
call
and
mov
lret
or
call
pop
mov
cli
js
clc
sub
push
aaa
mov
and
sub
xchg
mov
ljmp
cmp
fcomi
inc
jns
push
inc
shl
pop
jle
mov
cmp
cmc
gs
push
fs
shl
mov
lcall
stos
imul
cli
and
mov
cmp
dec
adc
lret
mov
pcmpeqb
mov
pop
arpl
mov
cmp
dec
dec
lock
icebp
and
xor
insb
in
pop
movsb
inc
adc
mov
sbb
insl
ds
in
mov
sbb
lods
repnz
xor
add
out
or
popa
xchg
xlat
out
mov
jne
sbb
mov
mov
pop
sti
push
xlat
in
xlat
add
shll
js
xor
sbb
sbb
add
cmc
cmp
call
dec
mov
inc
pusha
mov
push
stos
les
add
add
mov
mov
hlt
fsubrp
in
xchg
fstpl
mov
adc
jns
inc
addr16
mov
out
mov
loopne
sub
fistl
out
mov
es
les
std
jg
cwtl
sbb
xchg
sub
lods
xchg
push
sub
gs
sub
jmp
cs
add
mov
or
and
cmp
aam
sbb
test
xchg
mov
int
rcrb
mov
xchg
ficoms
fcompp
sub
cmp
push
dec
in
push
mov
mov
sub
push
dec
in
add
ss
pop
out
inc
push
dec
adc
clc
pop
mov
stc
lcall
pop
dec
dec
lds
repz
test
popa
or
dec
lods
fstp
cld
imul
repnz
mov
daa
arpl
daa
cltd
jnp
addr16
xchg
inc
mov
add
sub
sub
add
sub
icebp
daa
ss
dec
xchg
in
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
nop
sbb
jo
lea
sbb
adc
sbb
inc
cli
iret
cmpl
gs
out
movsl
sub
je
adc
xchg
movsb
in
inc
mov
ds
and
push
ret
xchg
mov
mov
or
cmp
repnz
mov
mov
mov
xor
repz
stc
sub
pushf
inc
fidivl
cs
lret
aam
or
stos
insb
push
cmp
adc
xchg
imul
clc
mov
test
jmp
jnp
pop
flds
pop
lds
add
lea
addr16
dec
sub
xchg
cmpsb
pop
aad
pop
icebp
cmp
test
xchg
add
jge
mov
arpl
jp
mov
mov
inc
xor
push
int3
push
jae
mov
stc
dec
add
shl
adc
out
cli
sarl
mov
stos
pop
idivb
ljmp
adcb
xchg
dec
testb
in
push
out
es
nop
cmp
and
in
mov
and
pop
xchg
jno
callw
and
pushf
xchg
mov
jno
mov
leave
dec
push
pushf
xchg
mov
add
dec
adc
cld
sahf
lret
sarl
and
pop
sti
imul
adc
outsb
lahf
mov
lret
sti
xlat
push
in
enter
mov
add
jl
sbbl
add
repz
mov
adc
sbb
jno
mov
js
add
mov
in
add
test
repnz
push
sbb
imul
notb
mov
pop
cmp
aas
aas
push
mov
sbb
sbb
pop
sbb
ffreep
cltd
inc
mov
fsts
test
and
sub
loopne
div
test
dec
xor
cmp
pop
pop
jmp
fiadds
sbb
inc
iret
ds
adc
cmpsl
jae
les
xchg
or
jg
dec
in
cmp
pop
outsb
fisubl
rcr
mov
sub
or
dec
stc
cltd
jp
mov
mov
adc
xchg
icebp
test
adc
fcompl
aaa
jno
add
cmp
in
mov
sub
cmp
popf
cs
je
push
adc
imull
sbb
je
stos
leave
inc
push
push
push
mov
idivl
or
jno
add
sub
jne
fisubs
jge
ret
cld
daa
cli
arpl
into
adc
jnp
mov
mov
or
fdivrl
gs
mov
push
stos
sub
push
shufps
std
in
ljmp
sub
sub
movsl
ljmp
call
int
sbb
sub
fdivr
mov
out
mov
sbb
sbb
mov
js
jp
and
fsts
mov
xchg
sub
lods
push
xchg
ss
xor
pop
lret
mov
sbb
jmp
repnz
xchg
dec
aaa
jmp
jl
and
mov
adc
std
xor
xchg
xchg
jecxz
xchg
sarl
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
xor
xchg
sbb
adc
sbb
pop
das
push
lock
fimuls
pushf
fiaddl
sti
fidivs
mov
adc
nop
roll
fistpl
jns
jo
xor
pop
lds
jge
pop
and
sarl
mov
addr16
push
in
lds
ja
or
mov
xor
xchg
xchg
dec
mov
mov
scas
mov
pusha
cmp
loope
mov
hlt
testl
and
add
jecxz
jno
aas
xor
pop
pop
out
jmp
popa
xor
jle
sbb
xchg
inc
push
mov
sbb
or
inc
xchg
pop
fnop
pop
pop
aaa
mov
arpl
pusha
push
lds
cld
stos
xlat
jns
fdivrl
push
cmc
xlat
mov
inc
cld
pushf
push
push
xchg
mov
in
xor
out
jne
ljmp
fs
cmp
lahf
mov
dec
jo
imul
out
fdiv
sbb
js
out
push
aas
inc
lock
adc
xor
pop
data16
gs
aam
andl
push
push
xor
fisubs
jge
lods
xchg
test
icebp
repz
arpl
jge
sidtl
mov
or
ss
mov
pop
dec
mov
pushf
bound
dec
and
mov
je
movsl
pusha
sub
out
pop
rcrl
lock
cmp
movsl
cmpsb
xlat
mov
mov
add
into
insb
dec
push
sub
out
mov
out
xor
and
cwtl
scas
js
and
test
add
outsl
cli
jne
out
inc
out
test
fistpl
in
xchg
stos
xchg
pop
addl
jb
mov
xchg
lods
cmc
ljmp
scas
stos
negb
pop
data16
stc
scas
push
add
jecxz
sub
out
test
or
inc
cli
rorb
les
xchg
mov
loope
push
mov
stos
xor
xorl
je
mov
xor
xlat
lahf
ja
daa
insl
or
push
rep
mov
add
and
loop
fwait
arpl
push
stc
jle
push
xchg
inc
test
push
pop
scas
xchg
push
push
mov
fistl
mov
inc
into
in
flds
pop
cmp
cmpl
std
jge
add
aas
fucomi
adc
sbb
sub
test
icebp
mov
es
mov
popf
arpl
bound
adc
cmp
cmc
dec
push
hlt
push
xchg
std
cwtl
adc
mov
outsl
scas
ds
std
dec
stos
test
das
adc
enter
stos
decb
fimuls
int3
popf
jp
inc
cmp
adc
adc
jne
adc
and
mov
cmp
popa
xchg
clc
out
sbb
adcl
or
gs
ds
xchg
jae
dec
test
cmp
and
sti
mov
mov
pop
das
inc
push
mov
cld
add
in
mov
das
cmpsl
pop
ret
ja
or
loop
nop
cli
pop
rcr
in
push
cmp
cmpsl
jae
lds
shlb
xor
sbb
stos
dec
dec
mov
sbb
mov
adc
fprem1
pop
hlt
inc
push
push
sbb
iret
into
dec
push
leave
add
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
arpl
adc
sbb
ds
fucomip
push
mov
movsl
cmp
mov
movsl
sar
andl
cwtl
cmp
jp
jmp
ret
xor
sub
sub
ret
push
push
sbb
gs
mov
jmp
movsl
js
and
jmp
mov
inc
lock
stc
test
sahf
push
dec
sbb
push
mov
in
push
test
sahf
hlt
imul
stos
sahf
and
pop
test
fcomi
mov
fists
cltd
sahf
inc
push
sti
enter
jp
fidivs
clc
std
ss
lret
sub
jno
fcmovnbe
pop
sub
cmpsl
push
js
push
addr16
jno
roll
gs
sub
pop
sbb
pop
push
jns
adc
pop
or
mov
pop
fsts
jg
fidivl
jmp
rcr
cmpsb
lock
push
xchg
fs
enter
jl
ljmp
ret
pop
push
shll
xor
mov
sbb
clc
inc
xchg
imul
dec
inc
mov
mov
dec
jp
jp
cmpsl
pop
scas
scas
mov
loope
rorb
xchg
add
xor
adc
push
push
insl
lods
ret
jae
repnz
pop
jo
aad
addr16
mov
xchg
adc
xlat
sbb
cld
push
shl
dec
shll
push
imul
add
xchg
imul
jnp
add
je
movsl
sarl
xor
mov
lahf
and
inc
push
push
popf
add
inc
lods
mov
fsubs
enter
inc
or
sysexit
lea
xchg
inc
cs
testl
push
jcxz
lret
cmp
aas
inc
lods
inc
push
mov
adc
imul
test
push
out
sub
sub
and
mov
cmp
xchg
xchg
pushf
push
cmp
lret
shll
pop
stos
push
xchg
push
fstl
test
es
rcrb
out
lods
fmuls
in
aad
adc
xor
cwtl
out
xchg
daa
cs
fstpt
into
sbb
pop
mov
rep
es
push
mov
loop
out
jmp
xor
rcrb
daa
lods
cli
push
jne
notl
cmpsb
dec
dec
cli
cs
clc
or
mov
jl
outsb
and
ja
mov
das
mov
lret
out
jae
mov
adc
sbb
cmp
fucom
jge
xchg
clc
mov
mov
fildl
sahf
sbb
xchg
lds
pushf
mov
inc
je
mov
add
and
mov
or
mov
mov
mov
xchg
sahf
outsl
cwtl
insb
jle
jle
adc
cmp
push
adc
dec
add
daa
jmp
fwait
cmp
dec
mov
arpl
arpl
fdivl
xor
xchg
mov
xor
call
lahf
dec
lea
pop
stc
in
lahf
mov
mov
shrb
stos
fsubl
xor
cld
mov
sub
ret
xchg
lea
adc
adc
call
das
repz
fsubrs
cmovns
pop
xor
push
dec
dec
inc
mov
dec
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
xchg
mov
and
sbb
jo
add
aaa
test
lret
in
testb
stos
xchg
mov
add
test
inc
sbb
mov
or
pop
call
mov
cltd
fs
pop
mulb
ss
inc
insl
insl
push
mov
hlt
je
sbb
leave
adc
cmp
mov
add
rorb
jbe
xor
adcb
mov
mov
mov
cmp
pop
adc
out
push
lods
out
cmp
lods
mov
js
or
adc
scas
repnz
test
jp
hlt
push
dec
adc
push
ret
mov
xor
push
movsl
sub
mov
out
jge
sbb
mov
les
sahf
xchg
mov
mov
inc
dec
repz
push
inc
repnz
mov
cld
aaa
dec
add
in
sbb
push
jmp
inc
sub
daa
jno
push
push
dec
lret
mov
hlt
jmp
ljmp
inc
dec
bound
mov
shll
jl
enter
sbb
andb
jns
movsl
lods
lahf
arpl
push
repz
cltd
addr16
jmp
out
daa
rcrl
mov
movsl
add
cltd
add
sbb
call
push
in
mov
mov
fs
or
xchg
fimuls
addr16
add
inc
sub
push
mov
pop
lret
daa
jo
leave
sub
shll
jnp
or
out
lcall
sub
mov
xchg
push
pop
push
lds
sub
mov
cmp
dec
jle
cmpl
xor
or
dec
stos
inc
data16
mov
shlb
test
stc
cmc
in
ror
data16
aad
push
mov
out
jb
mov
jl
in
sub
fisttpll
mov
sub
pop
fisubrl
jecxz
in
out
sub
jg
inc
movsl
sbb
sbb
add
inc
shrl
shrb
xlat
xor
adcb
xor
jo
aad
adc
out
sub
jnp
aaa
lds
xchg
xchg
mov
mov
sahf
jo
jne
aas
fisubl
cmpsl
enter
push
dec
and
add
call
push
dec
sti
and
mov
inc
sub
cmpsl
jae
cmp
pop
xchg
sar
rorl
ret
mov
cmpsl
sbb
aad
mov
hlt
int3
push
out
sbb
mov
adc
outsb
mov
int3
jae
mov
gs
inc
pop
call
leave
adc
jecxz
ljmp
jno
mov
push
lods
mov
push
push
sbb
push
dec
mov
cmc
dec
jmp
inc
testl
mov
fistpll
jl
jae
leave
pop
push
fdivrs
shl
xchg
loopne
jg
push
ljmp
dec
mov
in
mov
stos
cltd
pop
sbb
or
scas
jb
mov
fisubl
sub
inc
jmp
inc
inc
dec
aam
inc
das
inc
pop
inc
sahf
ds
imul
enter
pusha
and
and
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
stos
jl
jno
sbb
adc
sbb
xchg
aam
and
xor
loopne
cmp
mov
rorb
cmp
js
xchg
std
jb
inc
repnz
repz
push
lret
mov
mov
aad
pop
pop
in
dec
mov
pop
pop
push
inc
loope
jle
add
test
fcmove
push
or
and
adc
dec
mov
sub
push
add
lock
mov
sub
in
add
add
bound
or
jno
push
and
push
jns
in
push
dec
je
pushf
out
mov
lcall
test
in
js
inc
jmp
aas
sub
inc
popa
xor
cmc
push
movsl
and
and
movsl
test
lds
push
fwait
xor
sahf
iret
jle
pop
addr16
mov
icebp
fistpl
cld
xchg
jne
ljmp
loop
cmp
inc
nop
add
dec
sahf
dec
cmp
xchg
cmc
dec
lds
insl
pushf
stos
add
std
negl
popf
pop
or
push
push
sbbl
sub
aad
sti
sub
idivl
js
movsl
xchg
jp
aas
inc
mov
popa
scas
test
mov
cli
aas
adc
scas
jmp
imul
mov
pop
pop
addl
push
adc
repnz
jno
sub
jns
mov
cmc
jne
hlt
dec
add
mov
and
adc
adc
and
cmp
pop
insl
lods
sbb
push
or
lcall
loop
popa
gs
mov
shrl
mov
mov
sbb
test
mov
inc
pop
jmp
or
in
mov
rcll
cmp
jns
mov
hlt
mov
and
mov
into
xchg
popa
sub
into
imulb
pusha
aad
fists
jbe
mov
aam
jecxz
mov
pop
pop
movsl
lds
loop
sbb
adc
aam
cltd
mov
xchg
or
and
cmp
mov
cmp
xor
aad
lods
inc
loop
loop
inc
push
stc
jp
inc
insb
ret
xor
mov
cmp
add
add
dec
pop
fsubs
xchg
cmp
aaa
push
orl
mov
insl
js
ret
in
jecxz
das
pop
or
popa
cltd
push
pusha
add
movsb
loope
icebp
loop
sub
xor
cltd
popf
bound
imul
jb
push
xor
rcrl
into
sub
clc
decl
or
outsl
dec
stos
inc
xor
imul
add
sti
xor
pop
mov
dec
rorl
lret
test
sbb
lahf
out
in
outsb
das
arpl
inc
addr16
pop
sahf
xchg
icebp
test
pop
xor
lods
hlt
fidivl
outsl
or
adc
xor
lret
push
mov
add
ficoml
call
ret
out
popf
test
leave
mov
add
test
jns
push
sub
leave
out
sub
addr16
bound
add
cli
loop
dec
xchg
loop
pop
ljmp
push
pop
icebp
dec
mov
mov
in
jl
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
in
mov
and
sbb
shrb
mov
stc
sbb
xor
in
rcrb
cmp
xor
cmpsb
mov
sarl
subb
and
cmp
je
mov
ljmp
jg
add
cmp
xchg
and
clc
mov
mov
sti
fisttps
shrl
push
inc
jns
cmp
iret
roll
imul
pusha
mov
mov
mov
sub
mov
jge
mov
cmpsl
cmp
pop
mov
fwait
xor
test
lret
adcb
mov
js
xchg
pop
lahf
jge
sahf
cld
es
and
cli
sbb
cmp
xchg
outsb
mov
inc
dec
or
pop
sti
inc
test
push
fidivl
hlt
pop
mulps
popf
cwtl
cli
cmp
cltd
shll
adc
pop
aam
call
mov
push
mov
scas
shrl
lret
lcall
adc
pop
push
mov
jl
mov
adc
shlb
ja
fistpl
sti
push
mov
in
movsl
and
xchg
pop
cmp
and
rolb
sti
fidivrs
rolb
xor
scas
xlat
mov
and
jnp
push
mulb
iret
mov
nop
enter
adc
out
xchg
das
inc
jmp
imull
mov
sub
and
ret
inc
add
cwtl
xchg
fbstp
js
ret
es
aad
iret
arpl
and
lock
add
or
add
push
call
repz
gs
in
jmp
fisubrs
shll
add
mov
cmpsb
repnz
icebp
sarb
push
dec
or
and
adc
int3
popf
xchg
push
imul
jnp
jl
test
xor
cmp
rorb
and
xchg
mov
adc
inc
popf
outsb
add
mov
repnz
mov
push
cmp
pop
bound
xchg
push
inc
or
jno
mov
xlat
and
dec
xchg
xchg
lret
mov
or
pop
arpl
cmpsb
inc
mov
jp
testl
sahf
jns
pop
imul
jns
sahf
xchg
lock
lahf
shl
es
fadd
out
fimull
mov
inc
out
and
jg
mov
punpckldq
nop
cmp
dec
dec
mov
adc
aad
fnstsw
ret
jns
lds
ja
mov
jo
mov
lds
rorb
jle
bound
pop
cltd
adc
pop
out
leave
test
dec
das
push
push
mov
daa
lock
ja
sbb
and
rclb
jg
aad
add
push
std
fldl
xchg
insl
sub
jo
pusha
xor
mov
ficomps
subl
push
js
mov
jg
nop
test
arpl
lock
cs
or
mov
test
ret
or
mov
adc
and
xlat
neg
or
or
sub
push
pusha
lea
dec
push
or
fbstp
popf
jl,pn
sbb
shrb
cmp
idivb
in
sahf
inc
rcll
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
xchg
push
sbb
adc
sbb
dec
sbb
inc
stos
mov
pop
repnz
pop
fisttpl
mov
fstpt
scas
and
push
inc
mov
shll
add
shll
add
pusha
cmp
mov
mov
add
dec
adc
ficompl
int
xchg
sahf
cwtl
mov
int3
icebp
mov
pop
dec
sbb
add
test
mov
push
fisttpl
cld
stc
jns
out
jbe
xchg
stos
mull
rcll
xor
inc
xchg
addr16
cmp
push
int3
cmc
cmc
cmp
or
aam
dec
or
push
hlt
fcmovnbe
adc
scas
fwait
outsl
push
in
mov
cmp
pop
out
leave
out
shrb
in
sub
es
xchg
adc
iret
sahf
jge
popa
xor
jl
fisttps
mov
adc
sar
std
or
or
cmpsb
jbe
lods
mov
jp
and
rcll
xchg
jns
adc
gs
in
or
ret
xchg
sti
push
mov
pushf
dec
in
jbe
dec
test
cmp
and
shll
std
repz
and
stos
xor
pushf
jo
ja
mov
std
mov
call
ja
push
ret
dec
xchg
inc
hlt
pop
pop
in
sub
xchg
push
and
or
push
arpl
push
inc
clc
sbb
sub
psrld
out
inc
dec
inc
ret
adc
test
xlat
je
inc
jae
into
cmc
pop
adc
or
in
push
jae
xchg
cmp
inc
lods
rorl
std
faddl
dec
sub
cmp
push
push
jae
adc
ljmp
aaa
push
mul
int3
cmc
arpl
or
adc
fs
insl
sub
pop
add
repz
int
xchg
cmc
push
add
sahf
jcxz
aaa
mov
cmp
push
mov
imul
test
out
and
data16
sbb
push
xor
sarb
jmp
xor
in
aad
and
xchg
mov
push
sbb
scas
popf
nop
mov
cltd
jbe
in
test
jmp
call
xchg
sub
inc
es
and
sub
in
jbe
add
and
test
push
das
sub
lahf
mov
sub
inc
fldt
and
mov
sahf
int
test
cltd
scas
mov
stos
lret
xor
into
push
or
pusha
add
sub
sub
add
and
and
xor
test
mov
jb
mov
lds
gs
lret
iret
pusha
vpavgw
enter
mov
scas
out
sub
outsl
inc
repz
fmull
jl
or
and
movsl
pop
loopne
std
inc
dec
sbb
mov
mov
push
sbb
fcoms
sub
jae
sbb
flds
lods
sub
daa
cltd
shll
add
pop
jno
and
popl
inc
into
add
pop
inc
inc
jl
loope
jmp
into
and
dec
jp
cmp
imul
mov
lret
mov
je
mov
sti
lock
jl
pop
mov
or
orl
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
aas
cmp
and
sbb
jmp
jecxz
out
sbbl
movsb
push
imul
xchg
repnz
call
test
sti
mov
push
jno
push
adc
lret
les
sub
mov
jb
scas
cli
jl
cmpsb
dec
mov
lock
jmp
lret
daa
adc
popa
insl
fcomi
popf
add
pop
stc
pop
scas
leave
jns
xor
sbb
pop
inc
out
ret
sub
nop
adcb
sbb
pop
and
mov
or
cli
pop
ret
bound
sbb
inc
neg
ss
fiadds
sbbl
arpl
cld
ljmp
imul
jl
test
xchg
mov
nop
in
jb
in
out
mov
movsl
cmp
fsts
xor
jmp
in
pop
jo
xor
sbb
xchg
or
cmp
out
dec
addl
inc
sub
cmp
scas
shl
add
jb
rcrl
arpl
lcall
dec
mov
mov
jg
or
fsubs
fdivrs
and
daa
jo
xor
loope
frstor
lock
sbb
test
sbb
enter
lds
add
push
sub
push
sbb
cmp
mov
stos
out
mov
out
push
lahf
cmp
out
cmp
mov
mov
xor
out
test
dec
cmp
sahf
dec
inc
aam
js
test
movb
fildl
test
mov
sub
sub
push
xchg
mov
mov
popf
sbb
dec
dec
mov
jmp
daa
pop
mov
or
sub
jne
xchg
dec
mov
xor
mov
and
pop
push
sbb
or
push
mov
clc
add
mov
or
jne
cmp
shll
fistps
sahf
insl
sbb
dec
mov
rcrl
ret
jmp
cmp
fs
inc
or
jae
inc
xor
and
pop
pop
aas
dec
mov
mov
or
insl
outsb
mov
out
mov
inc
loop
xchg
mov
je
inc
fnstenv
add
rcrl
or
push
out
sbb
mov
xor
nop
pop
add
lcall
aam
or
repnz
xchg
fildll
fdivrl
inc
ja
push
add
inc
xchg
and
out
xor
jge
add
push
xchg
xor
or
out
sub
jl
mov
lahf
sahf
shl
outsb
pop
out
pop
adc
sbb
movsb
push
rorb
fdivr
pop
mov
into
out
rcrl
mov
insb
lahf
negb
sarb
andl
roll
sti
notb
mov
mov
dec
mov
mov
add
ffreep
lret
data16
cmp
pop
loope
and
jecxz
sbb
outsl
sub
pop
xor
cmp
sub
add
rorl
cmp
in
shll
jp
imul
push
and
aad
loopne
jmp
repnz
mov
das
mov
fcoml
pxor
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
pop
xor
push
push
sbb
adc
sbb
xchg
push
xchg
fnstsw
or
pusha
mov
pop
mov
stos
pop
scas
addr16
mov
fistps
mov
jge
pop
in
jbe
sbb
mov
jb
adc
pop
cmpb
mov
fcmovu
aas
sbb
inc
data16
ljmp
mov
shl
mov
cld
mov
rcl
ljmp
pop
xlat
pop
pop
inc
pop
add
adc
hlt
cmp
lock
cli
lock
jp
ret
mov
pushf
aas
mov
adc
and
lcall
mov
aam
or
sub
push
and
sti
pop
add
mov
jl
mov
add
test
add
mov
stos
xchg
shl
ljmp
mov
inc
aaa
sub
movl
dec
fsubrs
inc
jl
fsubr
mov
hlt
in
lahf
xchg
or
out
call
movsb
mov
stc
je
pop
inc
push
adc
push
push
out
roll
pushl
adc
scas
dec
jle
sbb
inc
outsl
mov
dec
cli
push
in
mov
and
rcll
hlt
xchg
adcl
sti
clc
xchg
jnp
jg
add
xor
push
gs
mov
in
push
mov
arpl
fdivl
cmpsb
push
movsl
fmull
pushf
fstl
out
icebp
add
data16
scas
stos
mov
rcrl
mov
in
push
push
push
mov
mov
iret
stc
mov
pushf
and
icebp
fidivrs
sbb
pop
test
mov
mov
and
jecxz
movsl
pusha
gs
inc
adc
jle
imul
bound
xlat
imul
pop
outsl
mov
push
pop
lds
or
sbb
cmp
int3
enter
cmp
test
mov
push
push
add
stc
mov
sbb
fldenv
js
xlat
mov
adc
popa
mov
fbld
dec
pop
push
test
xchg
cmc
xor
movsb
xchg
xchg
in
mov
adc
add
push
lcall
cmp
cmp
mov
ljmp
loopne
push
or
xor
leave
rolb
rcrb
sbb
cmp
clc
adc
mov
test
outsb
push
mov
sub
and
outsb
outsl
jno
pushf
adc
sbb
mov
aad
cltd
enter
jg
jns
or
cs
enter
stc
fldcw
test
cwtl
jmp
xchg
stos
pop
add
mov
mov
cwtl
dec
adc
or
jno
fsubrl
pushf
in
push
push
cmpsl
fstl
sahf
imul
xchg
fisubl
fidivrl
cmp
hlt
mov
pop
cmc
jnp
jne
aaa
icebp
loop
stc
out
outsl
stos
arpl
add
lods
adc
scas
jnp
sbb
xchg
mov
jecxz
pop
nop
nop
into
cs
je
add
mov
ss
cmp
aam
hlt
dec
lds
xor
mov
xchg
cmpsb
or
gs
ds
mov
jp
sub
in
sti
mov
insb
mov
ds
xchg
sarb
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
sub
mov
and
sbb
mov
addr16
dec
fimuls
insl
mov
fiadds
jle
xchg
bound
mov
sbb
push
jmp
std
sub
sub
push
and
mov
fs
jmp
xchg
sti
incl
repnz
outsb
int3
pop
inc
dec
mov
jecxz
cmpsb
aad
sbb
dec
mov
lods
fs
and
adc
lea
imul
incb
xor
cmp
and
cs
xor
and
sub
ss
orb
cmpsl
mov
fstl
lahf
fs
loope
inc
push
movsb
stos
mov
cmp
sub
mov
pop
icebp
call
repnz
mov
jp
jnp
test
push
stos
mov
xchg
mov
jne
xchg
adc
mov
or
lea
pop
lahf
stos
std
cld
add
cmp
xor
push
clc
mov
test
dec
jno
and
push
loop
adc
jecxz
jo
xor
mov
addr16
push
pop
jecxz
xchg
cwtl
mov
jp
inc
mov
into
pop
push
cmp
scas
js
xchg
popa
mov
and
cli
add
pop
ret
push
dec
cmc
sahf
xlat
pop
or
ljmp
aas
test
fmull
mov
jb
shrl
sbb
ds
daa
push
cwtl
jge
mov
inc
sub
jns
loop
sub
lret
pushf
dec
push
daa
int3
sbb
fisubl
push
dec
rclb
cltd
fwait
add
and
out
popa
inc
mov
ja
xchg
outsb
or
sbb
mov
sbb
imul
push
mov
stos
mov
outsl
add
and
and
pop
dec
sub
fstpt
sbb
bound
dec
pusha
pushf
adc
lock
leave
xchg
aas
and
cmp
adc
test
call
fwait
out
sahf
lea
ljmp
dec
mov
add
jb
fildll
in
std
and
adc
mov
dec
pushf
xor
or
jl
repnz
add
cmpl
mov
sub
mov
jns
mov
pop
loopne
pop
leave
mov
push
fldt
adc
les
loopne
pop
int
sahf
cwtl
in
lahf
test
dec
repnz
mov
addr16
sbb
jne
or
dec
es
cmp
fdivs
pop
dec
outsl
shlb
call
mov
dec
icebp
mov
xlat
test
xchg
xchg
orl
pop
mov
outsb
adc
pop
mov
mov
jg
pop
imul
cmp
mov
mov
pop
ds
and
adc
mov
or
mov
xor
and
data16
xor
pop
jle
rorl
pop
in
push
push
jb
jbe
sbb
inc
cs
or
in
add
mov
mov
xchg
fnstenv
ret
mov
test
and
cwtl
or
pop
jl
fisubs
leave
mov
xchg
jb
fildll
scas
or
repnz
pop
pop
frstor
call
cmp
inc
call
add
dec
and
xchg
imul
and
sti
sub
mov
push
arpl
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
or
roll
sbb
adc
sbb
lcall
out
cmp
enter
sbb
push
fcompl
push
fisttps
insl
xor
jle
and
push
push
dec
call
inc
sub
pop
add
or
sub
sbb
movsb
jmp
pop
add
lahf
cmp
mov
pop
bound
scas
xchg
outsl
leave
pop
or
outsl
jo
jbe
mov
sahf
das
sub
or
in
out
or
aad
pusha
sbb
mov
divl
mov
xchg
call
cmpsb
inc
in
add
mov
loope
pop
mov
jno
xchg
adc
fisubs
mov
mov
aad
jg
decb
popf
stc
sbb
jne
nop
xchg
mov
xor
dec
pop
sti
add
jne
in
xor
cmp
int
imul
movsl
mov
dec
mov
mov
std
iret
push
push
sarb
xor
push
js
cltd
imul
in
push
rcr
or
cmp
ja
cmp
and
movsb
or
dec
testl
leavew
repz
adc
and
and
cmp
loopne
test
pop
adc
aas
movsl
nop
divl
scas
fisubrl
out
xchg
dec
mov
das
xchg
push
push
popa
cmpsl
lods
push
test
arpl
dec
mov
insl
fwait
pop
in
out
lahf
test
insb
xlat
ret
shll
xor
xchg
pop
cmc
or
mov
jo
sub
dec
cmp
sub
lds
pop
inc
xor
xor
add
mov
jmp
ret
lahf
jnp
sbb
cli
mov
das
movsl
xchg
hlt
stos
lret
mov
and
ljmp
mov
xchg
xor
dec
cmpsb
popf
mov
rcll
fmull
sub
sbb
dec
js
imul
and
mov
jg
mov
pop
jo
sbb
sbb
fstl
and
mov
or
in
lret
mov
jnp
mov
jae
adc
sbb
and
xor
mov
and
loopne
or
fcomp
mov
xchg
out
cwtl
jle
fwait
data16
hlt
mov
subb
lods
mov
adc
push
or
inc
or
pop
dec
ss
inc
xlat
cmp
das
outsb
pop
sbb
xor
sub
mov
adc
cli
call
popa
jbe
arpl
int3
divl
jne
adc
daa
daa
ljmp
std
cmpsl
lret
int
push
fisttpll
sub
sarl
jle
pop
adcl
xchg
jecxz
cmp
xchg
inc
xchg
fisubrs
sub
stc
push
dec
std
xlat
xor
xor
jne
movb
mov
incl
dec
jge
jae
xchg
xlat
cs
or
testb
mov
push
or
lahf
jle
aaa
aam
lods
mulb
adc
lret
pusha
aam
int
add
fidivl
sbb
push
push
repz
xchg
mov
xchg
rorb
jb
nop
cmp
or
bswap
shlb
popl
xchg
jg
sbb
inc
out
aas
cmpsb
inc
inc
xchg
mov
pop
lods
xchg
outsb
popa
ljmp
xchg
outsl
adc
das
pop
lods
mov
adc
call
inc
in
add
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
data16
notl
repnz
int3
adc
insb
pop
fs
or
int3
fidivl
or
sbb
shr
lods
jbe
sti
add
enter
ret
pop
into
cmp
jnp
into
loop
jne
or
dec
mov
mov
mov
add
push
xchg
int
xor
imul
xor
add
pop
out
mov
push
popw
fdivp
xchg
stc
inc
jne
dec
insb
add
cmp
icebp
adc
stos
jae
fwait
dec
xchg
add
mov
in
xchg
jno
cmp
cmp
push
pop
push
dec
sub
sbb
pop
mov
lret
cmp
pop
push
lods
and
fiadds
sub
jl
xchg
ljmp
outsl
ret
sbb
icebp
sub
push
loope
sbb
xor
jmp
xchg
mov
lret
iret
mov
xchg
aam
aaa
ret
repnz
pop
arpl
or
lret
pop
mov
jnp
jl
dec
sbb
pop
push
int3
jbe
mov
xchg
mov
ret
xchg
aam
jl
jmp
add
cmp
mov
jno
add
adc
xor
fwait
lret
pop
push
and
popf
fs
mov
repz
add
lahf
aam
xchg
cld
cmp
dec
mov
cmp
imul
icebp
pusha
addr16
out
inc
filds
or
fistpll
xchg
adc
inc
lret
pusha
mov
mov
dec
cmpsl
pop
mov
push
rcl
push
outsb
xchg
out
pop
mov
ret
mov
fistps
dec
cmpb
and
es
loop
sbb
push
pop
out
iret
push
pushf
mov
fdivrl
fwait
je
inc
or
add
jge
push
das
push
fwait
loop
cmpsb
sti
xor
mov
imul
aad
jno
sub
call
jo
rcr
aam
xlat
bound
ja
jo
jnp
xchg
mov
lret
jl
mov
pop
mov
dec
pop
fisubrs
or
sahf
ret
loop
mov
and
jns
insb
pop
xlat
pop
les
adc
test
jb
lahf
lods
lods
mov
cmpsb
lea
loopne
and
sahf
and
adc
cmc
jno
dec
mov
or
lea
add
adc
mov
cmp
jb
in
add
inc
jbe
int3
adc
and
jle
jge
outsl
mov
in
fcoml
dec
mov
or
cmpl
fisubrs
orl
dec
and
pop
xor
or
xor
add
mov
imull
cmpsb
nop
sub
lods
into
femms
sub
mov
mov
lds
mov
lods
xchg
cmp
loopne
int
adc
rorl
out
sbbl
add
lahf
movsb
cmp
mov
shll
or
dec
sti
jno
push
std
imul
aad
pushf
gs
dec
scas
cmp
add
sti
ret
push
fwait
jb
mov
sub
xchg
sub
cmc
test
lods
xor
mov
cs
out
loopne
pop
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
jo
cmp
sbb
adc
sbb
lcall
adc
inc
mov
mov
nop
adc
les
mov
das
push
scas
add
cmp
add
xchg
add
stos
push
xchg
pop
xchg
mov
into
sbbb
mov
xchg
jno
icebp
jbe
jb
jb
xor
inc
int
pop
inc
inc
lock
stc
imul
loope
rcrl
sub
inc
inc
jae
mov
mov
imul
push
adc
jns,pn
bound
inc
imul
mov
iret
in
dec
sahf
jne
repnz
pop
ds
rorb
ret
pop
fdivl
mov
dec
int
repnz
pop
pop
pop
xchg
sbb
dec
lcall
hlt
mov
mov
mov
shl
xchg
popa
bound
sbbb
insb
aam
scas
les
mov
outsl
push
movsl
xchg
push
cmpb
movsb
sbbb
jge
arpl
cld
lea
pushf
mov
or
leave
sar
adc
stc
mov
xor
clc
fidivl
mov
push
push
dec
mov
and
pop
ret
lgs
lahf
inc
sbb
test
dec
or
mov
sub
mov
cmpsl
in
jo
jl
mov
hlt
lret
push
dec
es
push
pop
sub
lret
ja
add
push
xchg
test
inc
cmpsl
imull
pop
and
adc
addr16
aad
nop
cs
push
orl
adc
iret
mov
push
out
or
sbb
lock
adc
popa
es
and
xchg
add
xchg
scas
mov
jae
cld
rolb
ss
or
adcl
stc
add
test
mov
jg
xor
sarb
add
pop
sbb
std
and
inc
or
jbe
scas
inc
ffree
shll
sbb
xor
sub
ret
and
dec
imul
push
das
fs
sub
dec
mov
in
mov
notb
mov
inc
or
sbb
xor
mov
stos
sbb
and
pop
push
pushf
mov
test
scas
leave
movsl
push
jle
int
mov
fwait
jbe
xor
xor
jle
stc
push
pushf
cmp
divl
rclb
xor
cmc
sub
xor
xchg
add
xor
iret
push
lods
cmp
mov
inc
repz
popf
mov
push
pop
mov
out
mov
in
outsl
dec
mov
int3
inc
les
leave
adc
cmp
sbb
sub
xor
adc
in
ret
leave
and
mov
mov
stos
mov
cmp
jmp
ficompl
adc
push
pop
and
jmp
dec
aaa
add
daa
imul
dec
fs
mov
xorb
lahf
enter
cmp
movsb
mov
inc
mov
in
sub
mov
aad
rolb
jb
push
daa
loop
sti
cmp
push
pop
inc
imulb
popf
lds
loope
rclb
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
and
push
xor
sbb
adc
sbb
andb
cld
adcl
pop
es
mov
std
lds
xchg
frstpm(287
mov
push
aas
roll
test
jle
mov
mov
into
xchg
lahf
lahf
pop
mov
jmp
scas
sbb
pop
and
and
push
in
fcom
pop
cmp
out
inc
inc
les
in
loopne
add
out
in
and
xchg
jns
push
aaa
pushf
shrb
or
addl
xchg
cltd
or
mov
jmp
shrl
and
sahf
push
sbb
lock
mov
out
pop
mov
test
addr16
in
inc
out
mov
xor
out
sbb
jb
les
xchg
mov
mov
sub
aam
leave
mov
addr16
shll
popf
sub
or
or
sbb
mov
lret
xor
and
jecxz
push
test
imul
push
mov
cmp
mov
int3
sub
dec
inc
lods
push
out
test
jbe
mov
mov
pop
jmp
inc
loop
inc
mov
data16
cld
xor
sbb
mov
xchg
xor
sbb
fdivrs
in
xor
insb
call
sbb
addr16
enter
inc
popa
xchg
pop
push
pop
and
cmp
mov
push
in
test
jle
jmp
jmp
inc
cwtl
das
cs
xchg
mov
xchg
mov
mulb
xor
in
loopne
jmp
adc
lock
jb
rcr
push
jg
testb
lahf
nop
jbe
repnz
cmp
adc
sub
mov
dec
adcb
clc
loopne
mov
fdivrs
cmp
jle
jbe
stc
inc
or
adc
movsl
sti
mov
sub
mov
ret
pop
scas
jmp
lods
leave
gs
popa
dec
movsb
dec
mov
imul
dec
out
out
jb
adc
mov
xchg
push
add
sub
push
les
lret
jmp
fcomi
outsb
inc
jns
add
sbb
dec
out
cli
stos
ljmp
or
data16
sbb
cmp
lods
or
stos
jbe
rolb
mov
or
pop
xchg
test
inc
lret
std
sbb
mov
inc
mov
movsl
mov
dec
mov
loope
mov
mov
shl
jmp
gs
in
jo
push
push
xor
xchg
stc
and
xor
inc
mov
dec
lcall
int3
lods
testl
sub
add
jnp
add
dec
rolb
setg
xchg
es
aam
aas
cmpsl
iret
fs
mov
roll
cmp
lds
les
movb
xchg
in
xchg
sbb
sbb
dec
jb
or
push
sarb
push
adc
xchg
outsl
push
add
inc
outsb
fnstcw
jle
cmp
jo
test
sbb
mov
lock
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
pop
cmp
and
sbb
clc
dec
mov
jne
cltd
nop
mov
daa
movsb
cmp
adc
sbb
push
add
sti
fadds
gs
clc
aaa
cmp
scas
dec
les
mov
or
pop
mov
daa
jns
sbb
cld
ds
jo
pop
fildll
add
adc
sub
in
insl
cld
sub
dec
popl
enter
dec
in
ja
loopne
jnp
push
ljmp
in
add
out
leave
aas
dec
hlt
dec
movd
jmp
repnz
dec
add
jg
rcrb
sahf
or
dec
push
cs
cmp
arpl
dec
pop
jge
negb
sub
mov
daa
xor
jns
pop
insl
fidivl
es
stos
pop
or
lods
shrl
outsl
push
cmpb
dec
js
lock
sub
push
sti
add
lret
ds
pop
mov
rorb
loope
cmp
and
xchg
mov
insl
andl
das
sbb
xchg
xor
lea
test
pop
pusha
xor
push
push
into
aam
dec
add
in
and
cmp
dec
push
push
lcall
popf
dec
lods
push
daa
inc
fldcw
dec
dec
and
dec
cmp
xchg
sarb
mov
aam
ficoml
insl
sub
mov
outsl
lods
cmp
cmpsb
dec
insl
xchg
pop
jg
mov
push
dec
data16
jmp
xor
mov
ficompl
in
dec
add
jo
push
shr
test
mov
lea
mov
pop
jb
fisttpll
pop
and
daa
out
jle
xchg
dec
addl
mov
testb
loope
xor
push
xchg
jo
daa
xchg
js
nop
pop
xchg
pop
or
cmp
mov
add
mov
test
call
loopne
cmp
ds
pushf
lock
xchg
pop
hlt
jne
and
sub
add
jmp
jns
pop
vpmovmskb
sub
or
int3
out
imul
out
mov
sub
adc
adc
je
mov
gs
mov
jnp
arpl
cmpb
fiaddl
mov
rcr
mov
insl
clc
or
ljmp
lods
js
aaa
mov
scas
jg
stc
into
mov
sbb
test
jle
sbb
adc
lcall
cmp
cld
shlb
pushf
mov
push
xchg
push
dec
fildll
mov
jnp
rcr
adc
sub
jecxz
dec
mov
adc
loopne
cmp
pushf
cmc
loopne
pop
sbb
fisubs
mov
inc
into
lds
les
xchg
push
mov
mov
mov
inc
dec
and
xchg
mov
pop
mov
movsb
push
push
lods
sahf
mov
les
out
mov
shl
leave
cmp
lcall
das
sbb
mov
loope
xor
sbb
rcrb
mov
outsb
dec
and
test
xor
arpl
test
jbe
jge
mov
sub
fbstp
in
mov
cmp
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
test
push
sbb
adc
sbb
ss
and
cmp
rorl
sub
push
insl
jnp
rorb
shlb
insl
adc
dec
inc
nop
or
imul
andb
arpl
je
cmp
add
mov
xchg
xchg
popf
outsb
mov
push
or
fwait
dec
or
adc
repz
jle
loope
pop
xor
push
fisttpll
cmp
jbe
cmp
and
xchg
cmp
dec
pop
outsl
mov
cmp
fnsave
pop
out
loopne
cmp
push
imul
leave
push
testb
mov
hlt
push
mov
lods
mov
sub
jnp
push
mov
fwait
shrb
insl
add
xchg
add
mov
or
das
jne
push
rorb
xor
add
fs
cmpsl
mov
mov
fdivs
mov
and
inc
test
ja
cmp
loop
sub
enter
sarb
xchg
mov
lods
push
repz
sbb
cmp
shll
mov
push
cvttps2pi
jnp
pushf
xor
sbb
ret
or
popa
pusha
or
push
dec
pop
je
fisttpl
mov
mov
xchg
ljmp
idivb
es
inc
movsb
adc
push
push
add
pop
jge
push
out
adc
adc
or
push
push
lcall
jo
lret
inc
in
cmpsl
pop
stos
jle
filds
in
sub
add
cltd
jns
mov
dec
mov
std
test
pop
sbbb
push
adc
xchg
fcom
dec
mov
cmp
stos
fistpl
nop
inc
movsb
imul
daa
mov
inc
adc
mov
jae
fistps
push
add
cld
xchg
outsb
sub
sub
mov
xor
sbb
mov
push
into
mov
movsb
enter
orl
cld
shll
pop
lock
lret
xchg
daa
aad
xlat
mov
call
pop
dec
mov
nop
fnstenv
ja
inc
jl
dec
add
repz
out
inc
insb
repz
xor
lret
pusha
arpl
cmp
and
icebp
aad
jmp
inc
or
movsl
mov
imul
out
dec
test
push
xlat
lock
cwtl
cltd
xchg
movsl
fcmovnb
unpckhps
shlb
iret
into
adc
add
call
popf
out
in
testl
scas
in
loop
cmp
xchg
adc
das
data16
out
adc
movsl
mull
loope
aad
pop
sbb
clc
sub
sub
xchg
out
sbb
shlb
in
test
ret
xlat
or
lret
and
lea
stos
mov
arpl
fcomps
add
inc
movl
popf
jae
aas
fistpll
movsl
adc
or
andl
jmp
out
out
rolb
imul
aad
mov
test
and
fidivrs
shrl
push
jo
mov
push
jg
iret
hlt
es
lret
lds
add
mov
arpl
ljmp
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
cmp
inc
push
sbb
sbb
out
push
mov
dec
push
mov
inc
cmp
mov
or
popa
mov
test
and
and
es
push
shl
jg
out
decb
aas
jbe
mull
inc
push
push
xlat
addr16
sti
cmpsl
enter
insl
cmc
sub
lods
cmp
test
scas
ficompl
pusha
pop
movsb
sarl
aas
stos
mov
xchg
loope
rcr
gs
xchg
adc
idivb
mov
mov
jg
push
clc
inc
jp
and
inc
in
cs
arpl
cmp
and
lock
mov
sub
daa
aas
out
push
mov
repz
add
call
pop
pusha
es
sbb
rorl
fwait
mov
push
push
aam
nop
mov
or
inc
cmpsl
jmp
cmp
or
test
lret
push
cwtl
cmp
add
mov
bnd
inc
inc
lcall
shlb
cmp
les
sub
add
push
push
in
js
subl
mov
icebp
and
push
scas
aam
xor
xor
xchg
scas
mov
xor
into
repz
ss
lock
pop
sub
sti
int
out
add
test
loope
sub
movsl
fmulp
mov
mov
fs
xchg
sub
push
sub
mov
negb
mov
fildll
mov
inc
arpl
lahf
cmc
cmp
mov
insl
sahf
loop
adc
movsb
aas
pop
popa
int
dec
shl
out
scas
out
popa
ret
andl
push
clc
dec
mov
jno
sbb
xor
jb
mov
in
dec
jno
fisubrl
or
mov
jbe
or
mov
fstl
pmaxsw
mov
mov
in
je
mov
int
pop
adc
pushf
xchg
mov
out
mov
jecxz
daa
jb
push
jge
mov
fldenv
inc
popf
pushl
or
fisubrs
pop
dec
cmpsl
inc
adc
pop
rcrl
jmp
or
ret
popf
aas
push
scas
dec
in
xchg
pop
leave
adc
in
sub
cmp
fistpl
loope
out
or
or
aad
cld
xor
inc
or
cmpsl
or
cmp
ret
repnz
gs
sahf
xor
gs
xchg
mov
and
cmovg
test
rorl
lret
adc
ds
test
sbb
cmpsb
cmp
jne
in
and
push
aas
ret
insl
sbb
sbb
cmc
out
xchg
mov
adc
aas
ljmp
dec
sub
pusha
xor
mov
xchg
or
hlt
test
out
dec
lret
xchg
ds
add
or
imul
dec
pushf
repnz
nop
sbb
sub
loop
insl
lock
leave
out
mov
push
adc
adc
and
sbb
test
test
jl
sbb
lret
mov
adc
mov
sub
jae
push
sbb
pop
or
test
leave
dec
loopne
xor
adc
lret
test
jp
cmc
jno
fimuls
std
in
ds
xor
js
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
push
pop
push
sbb
adc
sbb
iret
mov
sahf
movsb
ss
divb
xorb
pop
in
sbb
into
roll
testb
push
testb
scas
push
lock
push
repnz
mov
mov
movsb
pop
test
cmp
lds
jmp
lods
add
jo
ljmp
jl
jg
adcb
fidivrs
pop
iret
test
push
jecxz
scas
sbb
test
das
and
push
mov
int
ljmp
int
xor
mov
mov
popa
push
stos
jbe
sbb
sti
pop
lock
shlb
xchg
jno
jge
fcoms
pop
jae
mov
sbb
xorl
leave
js
push
jae
push
imulb
sbb
inc
in
dec
shl
leave
adc
mov
in
or
adc
push
into
cs
cmp
xchg
pop
or
enter
sarb
jg
in
jns
lahf
mov
or
inc
push
mov
adc
xchg
push
add
ffreep
pop
mov
cwtl
fcomi
pop
sub
jae
icebp
testl
push
sbb
cmpsl
fstpt
xchg
dec
xor
ds
push
mov
inc
adc
mov
sbb
xor
ljmp
sbb
loopne
cmp
add
mov
sbb
sbb
imul
push
xor
jmp
adc
scas
xchg
mov
xor
js
into
pop
addb
and
mov
lea
sbb
arpl
cmpsb
sahf
push
andl
testl
pop
jmpw
push
arpl
clc
xchg
and
and
icebp
jg
dec
sbb
push
call
lcall
cmpsl
pushf
pop
inc
out
mov
orl
dec
icebp
add
mov
mov
data16
jecxz
subb
jo
push
ret
sub
clc
sub
movsl
xlat
lahf
and
lcall
inc
or
push
arpl
ja
repnz
mov
inc
lods
push
push
test
cmovge
mov
das
cltd
sbb
movsl
inc
push
js
das
out
test
or
pop
add
push
cs
cli
dec
mov
mov
and
mov
imul
jecxz
lods
adc
out
xchg
or
cltd
lret
mov
dec
pop
pop
pop
inc
cmc
repz
stos
adc
cmp
cmp
data16
fsubl
hlt
fnstcw
inc
in
cmpsb
fdiv
cli
in
std
test
cmp
cltd
mov
inc
xchg
ljmp
out
pop
xchg
xlat
mov
add
jp
push
jae
shlb
xchg
jno
test
decb
gs
jecxz
stos
je
cltd
sub
mov
and
sbb
dec
sub
insb
push
lcall
out
lret
inc
add
push
stc
mov
cltd
jno
pop
popf
add
ret
jb
push
shrl
bound
pop
fwait
addr16
mov
fs
push
jg
stos
mov
xlat
nop
inc
sub
pushl
insb
out
jbe
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
ret
and
push
sbb
adc
sbb
add
sub
mov
inc
sub
dec
xor
pop
repz
dec
ds
mov
hlt
jg
or
jl
js
push
inc
mov
xor
fildll
scas
outsb
xor
mov
push
in
xlat
adc
mov
insl
jle
loop
call
test
adcl
fadds
js
mov
popf
cmp
lahf
fsubr
mov
dec
mov
push
daa
cld
adc
orl
pop
out
mov
andb
mov
xor
shl
fs
and
lcall
pop
ret
jae
xlat
cmp
aaa
and
icebp
fisubl
loope
pop
loop
hlt
pop
fldl
and
hlt
mov
dec
add
seta
sbb
mov
loope
sub
bts
cwtl
push
adc
mov
jmp
adc
cld
push
mov
rol
fwait
xchg
nop
rorl
jl
push
int
pop
xchg
icebp
enter
mov
flds
pop
movsb
mov
sbb
iret
add
lcall
test
ljmp
les
add
cmp
gs
gs
lcall
xchg
inc
gs
movsb
or
jne
shr
xor
int3
out
inc
fcompl
mov
add
sti
push
xchg
scas
mov
and
jbe
ret
int3
cmpsb
ss
pusha
lret
adc
sbb
and
mov
cmp
mov
push
adc
cwtl
cmpsl
push
test
gs
mov
push
jecxz
out
into
pop
jne
jns
pop
sbb
movsl
xchg
xchg
inc
adc
in
iret
or
roll
mov
or
push
inc
dec
cmp
jmp
ds
or
jbe
insb
aam
lock
mov
loope
sub
xchg
jg
repnz
push
push
bound
sbb
ljmp
sar
mov
add
sub
scas
inc
cli
enter
cwtl
push
rcrb
mov
dec
add
adcl
mov
into
mov
add
pop
or
jg
call
xchg
negl
aaa
lcall
rcrb
mov
in
adc
les
mov
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
loopne
add
fiaddl
add
xor
add
in
add
push
nop
add
cmp
add
push
mov
add
add
add
add
add
int3
mov
add
add
sub
add
add
add
fimull
add
sub
add
orb
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
adc
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sub
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pushf
and
add
es
add
sub
xchg
and
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
push
movsb
scas
or
movsb
lods
es
add
add
inc
add
add
inc
add
daa
inc
add
es
add
inc
add
inc
out
adc
inc
add
inc
add
xchg
mov
add
inc
add
rcl
pop
bound
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
nop
and
add
inc
add
add
add
lret
xlat
movsb
das
dec
add
mov
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
push
addl
push
addl
push
addl
addl
addl
addl
addl
inc
addl
dec
addl
push
addl
ljmp
add
addl
cli
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
js
add
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
cmpsb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
sub
add
dec
xchg
add
add
add
jl
add
mov
add
test
add
mov
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
jle
add
mov
add
scas
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
xor
add
push
mov
add
add
outsb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
add
pop
mov
add
add
test
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
add
pop
mov
add
add
orb
add
add
loop
add
repnz
add
mov
add
add
and
add
dec
mov
add
add
push
add
orb
add
add
aam
add
ljmp
add
add
mov
add
add
dec
mov
add
add
insb
mov
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
