push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
popa
sarb
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
add
jmp
call
inc
nop
push
jge
dec
fcomps
push
or
movsb
fcomps
push
ljmp
pop
notrack
sub
xchg
mov
rcrb
cmc
pop
xchg
enter
sub
and
fsubp
inc
sbb
sbb
dec
and
inc
cmpsl
stos
add
mov
jne
cmp
fsub
mov
jge
adc
xlat
mov
cltd
jmp
sub
negl
and
sub
push
add
jecxz
or
pusha
dec
rorb
mov
call
in
test
iret
les
sub
outsl
aam
cmc
popa
cs
mov
pop
xchg
sbb
les
add
cmp
cli
repz
arpl
xchg
xchg
in
jbe
aam
xor
sbb
adc
xchg
mov
xlat
cwtl
sub
jne
jne
fidivl
leave
js
sub
out
and
sbb
xor
jnp
xor
push
dec
and
ret
adc
aaa
insl
or
adc
jecxz
ja
fsts
rclb
es
cld
ljmp
pop
std
mov
fs
shl
fnstenv
jnp
and
add
sbb
aam
cmp
clc
jg
js
stos
xor
movsl
mov
push
movsb
rolb
jb
mov
insl
cld
sub
shll
add
in
in
pop
test
dec
dec
push
test
xchg
xchg
xchg
out
loopne
cs
cld
js
shl
adc
mov
xchg
mov
out
and
push
shrb
xor
inc
imul
fildll
int3
jmp
add
pop
cwtl
push
xchg
loope
call
pushf
test
das
mov
popf
sahf
imul
aad
push
cmp
in
mov
cmp
in
jnp
mov
loop
aaa
pop
test
cmpsl
insb
jae
sub
popf
aas
jmp
jecxz
or
dec
add
or
data16
jb
ja
xchg
ja
subl
push
mov
ss
xlat
dec
or
sub
das
mov
pop
push
push
insb
mov
jecxz
xchg
push
aam
pop
jo
repnz
lret
jp
movsl
lahf
xchg
and
lock
fs
pop
hlt
in
outsl
scas
lock
adc
push
pop
hlt
loope
push
jmp
lcall
pop
dec
pusha
add
insl
mov
sub
scas
hlt
pop
push
pop
or
xor
movsb
leave
cmc
xor
jnp
in
push
sbbl
push
mov
into
mov
xchg
lods
test
mov
iret
fcmovb
sbb
ds
pusha
rolb
mov
mov
dec
xor
lret
ljmp
mov
aad
xchg
push
popa
push
aad
lret
add
pop
das
sbbb
iret
adc
cltd
dec
dec
fnop
hlt
cmp
jno
mov
dec
scas
mov
loope
mov
xor
mov
popa
push
dec
jns
es
inc
adc
cmp
push
sub
jp
push
sbb
je
mov
out
mov
jmp
ret
nop
aaa
fsubrs
and
or
mov
dec
dec
fwait
push
mov
in
fsubl
stos
cmpsb
leave
sbb
cmp
ss
add
fstl
sub
filds
pop
pop
daa
sub
xor
push
inc
fnstenv
and
xchg
xor
push
cmp
rorl
xchg
fmuls
adc
pop
out
xor
mov
jnp
sub
jecxz
mov
inc
sbb
pop
lock
mov
in
or
mov
mov
adc
mov
repz
push
cmp
test
outsb
push
lock
xor
aaa
mov
jp
adc
pop
rolb
sbb
dec
stos
enter
xchg
stos
add
dec
adc
mov
aad
xchg
out
testb
jl
push
clc
fwait
enter
xor
adc
or
and
pop
loop
fisttpll
jg
add
dec
outsl
int3
push
clc
lock
sbb
dec
and
cmp
les
pop
js
subl
push
rcrb
push
repz
int3
sub
enter
repnz
sub
in
leave
push
lret
iret
addl
cmc
dec
mov
jge
jbe
jge
test
sbb
sub
pushf
pop
lock
and
icebp
push
sbb
inc
mov
sub
loopne
fnstcw
popa
sub
push
or
rorl
outsl
or
sti
in
test
mov
and
daa
addr16
fistps
push
lds
frstor
xchg
fwait
adc
push
sbb
sub
cmc
sub
jmp
push
lods
loopne
out
mov
fmuls
pop
cmpsl
push
movsb
bound
inc
inc
in
pop
call
pushf
adc
push
adc
push
mov
pop
adc
mov
dec
jmp
cld
jno
pop
mov
mov
int3
shrb
push
lret
loope
adc
pop
pop
mov
cmp
mov
jge
sbb
pop
lock
ret
jne
jge
inc
inc
dec
mov
ret
xchg
lds
inc
je
and
das
adc
outsb
clc
jmp
add
fsubr
test
addr16
cmpsl
mov
xor
test
in
xchg
mov
add
shl
movl
lahf
cmp
cmc
mov
and
cmpsb
mov
xlat
xor
pop
inc
pop
jb
adc
int
mov
or
lock
pop
sbb
stc
lret
push
js
call
cmp
aaa
icebp
sbb
mov
rcrb
and
rcl
popf
fs
cld
repz
cmp
cmp
pop
enter
push
or
pushf
in
flds
xchg
addr16
sbb
push
sbb
jbe
xor
lret
adcl
pop
push
pop
mov
jecxz
sub
mov
jmp
lret
fst
adc
push
lret
das
cmpsl
inc
xlat
dec
pop
pop
icebp
popf
or
push
xchg
xchg
std
fsubrl
outsl
inc
cmp
mov
mov
sbb
cltd
xor
mov
insl
hlt
bound
inc
jns
xor
cmpsb
sub
sub
mov
pushf
push
out
lea
mov
loopne
rolb
xchg
scas
mov
adc
pop
orl
pop
loop
out
fdivrs
call
push
mov
fnstsw
sbb
xchg
jbe
std
mov
push
repnz
insb
mov
mov
fisubs
inc
and
jne
fs
jp
push
test
cmpsb
dec
scas
mov
lret
jge
adc
lods
sub
mov
inc
addr16
and
cmc
sub
jp
jb
adc
xor
sti
adc
call
jg
push
or
test
scas
test
nop
xchg
rcl
adc
sti
mov
icebp
icebp
into
mov
mov
mov
cli
push
adc
sub
push
dec
push
and
sti
jle
or
mov
sub
loopne
xchg
xor
fbstp
pop
pop
popf
push
xorb
call
push
addr16
ud2
pop
inc
and
repz
loopne
call
adc
dec
inc
pop
dec
fldenv
cmpsl
ja
jg
sub
lods
lcall
aad
stc
cmpsl
xchg
in
mov
fdivs
sar
sbb
stc
stc
lds
jae
scas
jb
jl
or
push
lret
mov
add
push
es
push
hlt
push
add
decl
ss
push
xorb
pop
lea
outsl
cmp
sbb
jmp
fwait
sub
fidivrs
pop
mov
outsl
xor
repz
int3
dec
jb
fldt
or
jne
into
jge
adc
cmp
inc
jle
lods
pop
xchg
cmpsb
ret
dec
ret
xchg
jno
mov
mov
cs
and
inc
lds
jb
int
pop
push
adc
lret
mov
sbb
mov
push
pusha
adc
xlat
sbb
mov
sbb
loopne
inc
xor
insl
shrl
push
jne
xchg
ljmp
or
dec
push
scas
sub
hlt
jne
mov
cmc
adc
pop
pop
adc
inc
inc
lods
mov
pop
push
mov
aas
in
sub
in
mov
xchg
scas
adc
cmp
mov
in
outsb
sbb
mov
xor
push
inc
test
and
sbb
dec
sbb
ja
divb
sbb
sub
les
int
test
push
lcall
outsb
mov
jmp
rcrl
inc
inc
sub
inc
xchg
jg
pop
fsub
aas
adc
inc
sub
sub
in
rcl
mov
ja
icebp
pop
pop
sarl
jb
mov
fmuls
fisubrs
aad
cmp
pop
push
dec
cs
lods
jmp
scas
sbb
fcmovbe
leave
dec
cmpsb
cli
adc
mov
dec
sub
les
xchg
stos
scas
out
int
sub
jns
js
lcall
ret
jecxz
fsubrs
fldcw
sbb
fptan
and
clc
adc
mov
scas
push
repz
sbb
sub
mov
xchg
test
xor
iret
cmpsl
ds
pushf
cld
xor
adc
das
lock
je
popa
xchg
push
std
jns
out
pop
mov
pop
int3
mov
lcall
and
pusha
cmp
outsl
std
dec
pop
push
jp
out
lcall
sti
push
fchs
inc
and
sar
jbe
mov
in
mov
out
xor
add
jb
pop
imul
sbb
pusha
popa
iret
fadds
push
mov
clc
inc
jne
or
mov
fdiv
mov
sbb
insb
ret
lahf
xor
bound
clc
fcmovb
inc
mov
and
outsb
inc
fdivrl
xchg
and
mov
out
or
mov
inc
sbb
jmp
cmpsl
add
out
push
xor
jo
imul
js
pop
lret
push
mov
repnz
xchg
mov
adc
push
imul
fnsave
cmp
jmp
aas
mov
and
shll
sti
jb
test
mov
push
arpl
push
mov
fstl
das
popf
jl
jmp
insl
cmp
xor
xor
or
xchg
movsb
pop
iret
mov
pop
int3
in
and
xchg
xor
add
sti
pushf
pop
mov
imul
cld
pop
and
testl
xor
add
or
push
dec
lcall
inc
mov
or
or
pop
mov
out
les
dec
movsl
adcb
dec
mov
leave
sarb
push
mov
pop
pop
loopne
mov
fisubrl
push
push
arpl
popa
lock
fisttps
pop
sti
aam
daa
popa
ret
mov
or
enter
je
and
xor
jl
jno
jl
stc
ja
stos
inc
shrb
std
adc
pusha
sub
lret
aas
into
lret
out
mov
lahf
jecxz
mov
cli
adc
ja
push
push
or
dec
xor
sarb
sbb
loopne
incl
cs
adc
xor
shrb
and
imul
xor
adc
inc
lcall
movsb
cmpsb
and
loope
andl
aad
xlat
shlb
fcompl
cmp
leave
jno
sbb
fwait
insl
andb
ss
adc
xor
stc
pop
leave
popf
xchg
and
ds
pop
aad
insb
add
xchg
clc
cs
mov
test
xchg
mov
scas
xor
out
inc
out
push
inc
out
out
add
jp
std
dec
pop
sub
sub
cmp
fs
jo
mov
cmp
in
sbb
cmpl
in
roll
sbb
into
pop
insl
fmul
xor
jne
fcoms
das
mov
push
dec
add
fwait
sub
mov
mov
ret
dec
push
push
cmp
jmp
mov
outsl
out
jne
mov
cmpb
mov
adc
push
mov
cmp
mov
rorb
in
xor
mov
dec
rol
fucomp
mov
fld
dec
jp
xor
sbb
adc
sub
and
cltd
mov
mull
in
popf
andl
mov
add
dec
xor
jle
cmpsl
push
jl
push
inc
cmp
cmp
mov
cmpsb
jno
xor
popa
jg
and
pop
ljmp
cmpsl
fcmovb
pop
xchg
adc
pop
and
dec
add
cld
out
lods
xor
sbb
or
shr
cltd
sahf
mov
pop
jl
sbb
inc
xchg
and
mov
leave
mov
dec
sbb
sub
js
enter
shlb
xor
adc
dec
pop
xor
push
add
pop
ret
cld
test
fmull
fildll
mov
out
and
push
popa
loope
pop
adc
adc
ljmp
outsb
fucomi
lods
call
into
push
adc
mov
inc
imul
dec
sbb
in
enter
iret
pop
push
inc
xchg
ret
ljmp
jb
mov
xor
lret
mov
add
mov
sahf
mov
lods
jmp
xchg
leave
or
push
push
dec
lret
mov
push
lret
in
inc
icebp
loopne
cmp
adc
add
or
xchg
pop
fisubl
dec
dec
lds
push
jge
addr16
addl
ret
popf
insb
dec
fucomi
stc
mov
or
mov
mov
mov
loope
xor
fisttps
jg
pop
ret
fsubr
xor
xor
fs
leave
pop
pop
loope
shrb
dec
sbb
mov
cs
xchg
insb
mov
imul
cwtl
ljmp
add
outsb
dec
jae
inc
fsts
roll
fsubr
lock
mov
xchg
addr16
sub
iret
insl
sub
mov
and
and
shll
lea
cmp
jns
mov
aad
sbb
push
clc
scas
jb
ss
fildll
ss
fcomps
pop
dec
out
ficoms
out
mov
jae
add
int3
ja
ss
stc
popa
mov
cwtl
pop
loop
xchg
push
push
aaa
dec
jl
sbb
xlat
inc
cmp
mov
pushf
leave
cs
movsl
push
leave
or
dec
push
mov
jne
push
xor
and
mov
popl
inc
add
pop
pop
lods
xchg
std
inc
arpl
mov
jl
or
xor
sbb
std
bound
test
and
cs
mov
mov
mov
pop
stc
mov
pop
or
xor
add
fists
xchg
cmp
or
mov
xchg
cmc
repnz
cs
mov
add
fwait
mov
frstor
push
popf
loop
push
mov
xchg
mov
cmp
jns
arpl
jg
popa
ss
mov
lock
leave
fisttpll
jnp
mov
and
push
jp
inc
adc
insl
add
pop
mov
fdivl
dec
or
scas
dec
mov
and
push
jae
pop
scas
inc
mov
cmp
leave
das
mov
sub
cpuid
movsb
mov
mov
ret
jecxz
sbb
sub
enter
and
cli
nop
nop
out
pop
ficoms
scas
sahf
idiv
jo
or
mov
push
popa
inc
rcll
xchg
mov
inc
cmpsl
mov
pop
incl
lock
push
push
push
ljmp
xor
inc
test
add
mov
je
xor
inc
js
popl
loope
mov
pop
into
nop
iret
cltd
sbb
sbb
mov
mov
js
xor
add
inc
dec
xchg
sbb
or
push
or
jecxz
mov
push
xlat
mov
sbb
sbb
add
inc
jmp
hlt
mov
dec
fmul
aas
pushf
and
iret
xchg
pop
mov
movsb
push
jne
cli
cmp
jp
scas
in
pusha
pop
mov
sbb
dec
jbe
test
inc
mov
inc
aad
xor
sbb
pop
dec
pop
sub
mov
loopne
xchg
mov
iret
or
test
cmpsl
movnti
adc
dec
into
mov
dec
dec
adc
ficoms
xchg
subl
or
mov
shlb
icebp
inc
test
cli
push
cmp
xchg
jmp
ret
push
push
mov
imul
dec
out
mov
movsl
inc
xchg
xorl
sbb
push
je
ja
mov
push
sbb
cmp
dec
outsb
testl
scas
dec
and
xor
or
mov
or
shlb
jbe
jl
scas
shrl
hlt
or
subl
rcrb
clc
xchg
sub
cmc
andl
pop
insl
aam
mov
mov
sbb
push
in
push
aam
pop
mov
mov
push
cmpsb
push
imul
jecxz
ljmp
je
loope
and
sbb
pop
loopne
mov
xchg
aas
xor
fwait
int
mov
sub
jns
xor
sysret
inc
jnp
sbb
xchg
xchg
ljmp
sti
mov
ret
or
repz
lea
fisubrl
lahf
push
or
jne
mov
jge
or
xchg
adc
sbbb
gs
jb
cmpsl
mov
notl
movsl
or
xchg
push
xor
jle
notl
mov
fdivs
pop
jns
push
push
dec
xor
outsl
and
xor
pop
pop
pop
sub
iret
sti
mov
jle
dec
lret
sbbl
leave
dec
jecxz
push
roll
cmpsb
pop
fs
ja
jg
push
sarl
lcall
mov
sbb
add
bound
icebp
mov
sub
jb
sub
cmp
call
ret
pop
lret
cld
orl
xchg
call
cwtl
xor
movsb
sub
mov
aas
mov
mov
in
mov
adc
or
popa
push
out
push
sub
dec
cs
xor
fcomi
xor
mov
cltd
dec
js
sbb
rorb
repz
sahf
push
sub
and
xchg
push
xor
inc
mov
inc
dec
xor
scas
mov
out
jne
cmp
and
xorb
adc
lods
mov
inc
and
mov
mov
fs
pop
addb
shll
add
sbb
rcl
lcall
sbb
test
outsl
subb
mov
adc
movsb
sub
and
test
xor
lret
aam
sarl
cld
mov
or
jl
fsub
inc
sub
push
mov
or
js
sub
inc
xor
lahf
enter
pop
jl
sub
add
xchg
sbb
loope
mov
dec
neg
push
mov
cs
adc
sbb
mov
sbb
out
leave
lahf
dec
mov
std
popa
aas
mov
testl
jbe
pop
int
outsl
add
jne
adc
or
cmc
inc
cmp
fstps
popa
loop
sbb
mov
mov
push
add
and
sub
rorb
mov
sbb
mov
loopne
mov
outsb
jmp
push
lock
movsl
dec
test
mov
daa
aad
fwait
imul
and
shll
clc
xchg
out
mov
paddsb
out
mov
jae
sub
mov
sub
pop
xor
inc
addl
pop
inc
cwtl
adc
jbe
out
je
popf
pop
dec
inc
pushw
jl
jmp
xchg
and
xchg
push
out
lret
mov
loop
aas
mov
dec
inc
sbb
sbb
lret
xchg
mov
sub
lcall
or
ret
jo
dec
scas
adc
leave
std
and
cmp
sbb
jmp
sbb
jle
in
fildll
daa
dec
iret
cmpb
inc
or
lock
scas
pop
movsb
or
mov
movsl
test
or
or
xchg
rorl
lret
or
into
out
mov
mul
mov
std
pop
mov
lret
shlb
test
rclb
cld
and
daa
dec
out
dec
notb
in
pop
sub
jno
push
ficoml
lea
xor
cmc
mov
dec
push
mov
subl
imul
jp
jns
xchg
scas
in
xor
and
mov
iret
xchg
insb
mov
shlb
push
jne
jo
sub
mov
mov
adc
ret
je
pop
adc
xchg
addr16
sets
int
sub
lret
loop
add
repz
pop
shl
daa
test
shrl
por
popa
in
mov
push
shrl
insl
aas
add
push
das
mov
shll
or
ja
push
addr16
jecxz
inc
loop
shlb
nop
inc
or
in
cmp
xchg
mov
gs
mov
jns
fisubrs
xchg
cmc
stos
fsts
jb
pop
mov
or
mov
adc
ja
lds
xchg
stc
sahf
pop
subl
mov
pop
cmovp
xor
fwait
sbb
and
out
push
dec
les
xchg
cs
das
ret
aad
fisubrs
cmp
movsl
add
push
push
imul
ljmp
push
jns
inc
add
jle
lahf
and
bound
leave
pop
loop
arpl
mov
fsubs
push
out
std
xlat
jp
fs
movsb
dec
mov
pop
pop
fstps
rcll
sbbb
sbb
dec
cmpb
jae
cs
mov
popf
addr16
mov
cmp
sarl
xor
inc
cmc
push
pop
mov
push
xor
test
jecxz
movsl
sti
add
incb
decb
adc
loop
cltd
mov
test
cli
push
lods
jne
mov
inc
sub
std
leave
jbe
loopne
out
jne
lahf
fldenv
rcrl
aaa
sub
adc
cmpsb
enter
jle,pt
sub
add
fdivrl
sbb
adc
dec
test
push
je
adc
pop
pop
dec
jno
mov
aad
inc
shrb
inc
ljmp
arpl
add
cmp
xchg
pop
xchg
aaa
sti
rolb
pop
scas
xchg
or
mov
xchg
pop
pop
outsb
test
xchg
test
loopne
cmp
xor
mov
and
inc
aam
out
xchg
and
les
fisttpl
into
rcrl
popf
stos
lea
dec
mov
and
mov
ret
cmpsl
sub
cltd
cwtl
jno
push
cmc
lods
stc
adc
sub
sbb
mov
fldl
push
rolb
ficoml
std
xor
mov
mov
icebp
jne
dec
sbb
rclb
mov
aaa
and
fidivrl
xchg
mov
mov
repz
popa
insl
jmp
push
leave
and
out
mov
jnp
sub
loop
push
cld
inc
cld
out
push
sbb
testl
push
xchg
gs
xchg
push
leave
out
mov
inc
pop
les
cmp
mov
int
and
lods
pop
aas
rcrb
mov
mov
popf
jle
jg
adc
pop
cmp
add
add
scas
mov
sub
and
push
test
lods
or
rcrl
cmp
or
cmp
in
iret
addl
push
xor
add
jae
jmp
pop
mov
stos
cmp
fcompl
push
mov
xchg
or
in
loop
and
gs
push
cmpsb
push
cmp
mov
out
je
sub
and
sub
test
sbb
jmp
push
push
gs
fisttpl
cmp
fucomp
ficompl
dec
mov
cmp
neg
daa
js
cmp
xchg
pop
pop
adc
sahf
mov
test
add
sbb
jge
jecxz
adc
int3
jecxz
and
xor
adcl
in
pop
mov
jae
int3
pop
jge
pop
fcomps
nop
and
push
adc
inc
aam
fs
das
cmp
inc
xchg
jb
adc
fcoms
cmp
adc
movsb
cmp
mov
mov
les
hlt
mov
fabs
jp
into
lods
add
dec
jo
scas
rol
jae
cmp
test
pop
pop
ret
or
fst
dec
add
cld
stos
repnz
mov
mov
test
xor
pusha
into
data16
jbe
aad
sub
roll
or
loopne
or
cmpsb
mov
add
xor
or
fwait
movsl
adc
adc
es
fwait
fs
outsl
aaa
mov
mov
push
pop
cmc
lret
out
xor
scas
popa
jno
inc
push
daa
cmp
lea
jae
outsl
movsl
sbb
fwait
mov
test
fdivs
cmpsb
ficompl
jae
adc
int3
mov
cmp
xchg
outsl
sub
xchg
aad
mov
in
jns
fistl
mov
popf
mov
popf
rcll
push
mov
out
dec
dec
adc
rcrl
gs
scas
lret
xor
push
adc
mov
cmovno
push
popa
bound
call
int
adc
scas
add
mov
push
cwtl
xor
inc
pop
sbb
pusha
pop
mov
push
adc
lcall
shl
mov
or
xchg
jns
sub
test
sub
mov
push
das
pop
cmp
or
lods
fldt
push
add
add
movsl
and
cmpsl
add
pop
scas
cmp
push
outsl
pop
cli
test
push
das
mov
mov
mov
mov
pop
fcoml
scas
mov
add
sbb
loopne
shl
notl
out
mov
sub
das
pop
adc
fwait
call
shrl
or
inc
shll
jmp
fs
loopne
cmp
or
stos
dec
sub
sbb
test
xor
icebp
int3
int3
push
and
imul
jno
mov
pushf
jp
aam
adc
push
in
sbbl
adc
test
ds
mov
mov
ss
push
and
inc
push
movsl
inc
cmp
js
push
or
push
mov
inc
mov
jmp
push
addr16
inc
lock
movsb
sbb
pop
add
cltd
jecxz
jb
ret
cmp
lods
sbb
mov
cmp
je
and
fisttps
sbb
in
add
jo
mov
jge
js
jecxz
pop
dec
add
inc
in
mov
mov
jecxz
in
mov
arpl
mov
inc
es
adc
cwtl
sbb
jp
movsb
outsb
mov
pusha
cmp
pop
aad
jmp
lds
rcll
fbstp
jge
lea
or
outsb
imul
cmp
cmp
and
mov
cmp
xchg
xchg
imul
shlb
xchg
cld
popf
dec
stc
or
sahf
cld
repnz
cwtl
je
fsubrs
ja
mov
mov
mov
jg
jge
mov
mov
xor
outsb
rclb
fdivrs
es
sbb
lret
cltd
insb
fwait
add
and
adc
push
in
jmp
adc
je
sub
mov
in
jmp
popf
repnz
movsl
mov
cmp
push
xlat
sub
movsb
mov
sub
or
pushf
in
sbb
dec
fnsave
rorl
cwtl
call
shld
pushl
jmp
pop
ret
sbb
push
mov
pop
jns
cmpsb
loope
xor
pop
lahf
dec
loope
jge
cmp
subl
xchg
ja
fwait
xor
inc
test
mov
outsl
scas
je
push
aam
rolb
inc
dec
inc
mov
push
jno
xor
push
push
insl
test
iret
jecxz
and
int
sub
aad
out
jb
xchg
out
aaa
sbb
arpl
bound
ss
lcall
sbb
ret
mov
test
insb
cmc
int
cmp
rorl
fisttpll
repnz
xchg
int
sub
cld
ss
cmp
mov
rclb
dec
sub
jge
xor
fistpll
jge
xchg
stos
pop
cld
out
mov
sahf
shlb
pop
xchg
jecxz
jns
add
outsb
lods
hlt
icebp
and
ss
or
and
es
popa
or
das
insb
xchg
adc
fldcw
imul
mov
add
or
pop
jb
out
movsl
sbb
jg
in
xchg
mov
ficompl
test
cmp
add
les
jle
fiaddl
dec
xchg
jecxz
jecxz
push
sub
mov
repz
cmp
lret
mov
jle
aaa
xchg
sbb
push
in
or
out
xor
fiaddl
rcrl
sbb
sbb
jge
or
cmp
or
mov
dec
push
jo
adc
mov
fsubs
jo
mov
or
push
hlt
push
loope
or
and
adc
jmp
push
nop
sbb
sbb
adc
mov
cmp
mov
popa
xchg
jge
and
sbbl
nop
xchg
mov
rclb
pusha
adc
out
cld
mov
push
dec
adc
ljmp
inc
and
inc
and
mov
sbb
add
es
les
cli
ds
lret
subl
std
xor
sbb
es
push
inc
dec
into
push
outsl
xchg
mov
xchg
push
inc
or
mov
out
data16
outsb
jno
lods
ds
mov
ficoms
or
fidivl
cmpsl
mov
sarb
mov
fidivrs
stos
adc
inc
push
lret
test
sbb
bound
push
adc
sbb
lea
cmc
nop
aam
lds
add
nop
mov
push
add
xor
rorb
jns
add
in
test
movb
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
je
loopne
jl
dec
pop
jl
and
scas
mov
sbb
test
xchg
stc
inc
scas
shll
jmp
mov
int3
adc
push
xchg
nop
lds
popf
sbb
dec
test
xchg
ficompl
sarb
and
and
adc
sbb
bound
and
mov
fiadds
adc
je
push
ror
andl
cmpsb
xchg
rol
fistpll
and
shlb
inc
dec
sbb
adc
insl
imul
dec
adc
cmp
pop
or
xor
xchg
mov
icebp
repz
mov
and
push
sub
sub
ds
ret
mov
shrl
sbb
insl
fldenv
movl
mov
in
lods
xor
push
adc
fcmovnu
pop
mov
dec
ds
jge
std
test
scas
push
inc
jbe
rcl
shr
dec
clc
jae
lock
in
jge
push
and
push
jg
or
test
mov
arpl
mov
les
mov
subl
lods
sub
or
shlb
sbb
jnp
lods
xor
xor
inc
scas
mov
mov
adc
dec
dec
fdivrl
sub
mov
sub
scas
emms
lahf
adc
pop
hlt
je
cmp
mov
fistpl
fmuls
mov
test
out
mov
out
xchg
fwait
stos
lcall
inc
testb
adc
rorb
add
in
insl
adc
mov
out
mov
xor
xchg
pop
sti
jne
pop
inc
divb
aam
mov
out
adc
scas
sub
gs
adc
and
lahf
jge
mov
xorl
rcl
in
pop
stos
das
fldl
mul
aad
sub
mov
adc
gs
xchg
adc
mov
shl
int
out
cmp
inc
popf
loope
aaa
int
jne
inc
and
cs
out
xchg
mov
inc
cltd
jae
repz
cwtl
push
xchg
loope
in
ret
adc
enter
loopne
inc
in
jp
hlt
adc
jno
clc
lcall
cmpsb
leave
stc
push
js
jnp
mov
cmc
subps
stos
clc
mov
sbb
cmpsl
push
rolb
fstl
fistl
cli
addb
das
jmp
jne
test
stos
pop
push
subl
and
andb
jae
repnz
inc
xchg
les
pop
je
dec
mov
fnsave
cmpsb
imul
mov
add
mov
inc
mov
pop
pop
outsl
mov
mov
jne
and
xchg
cld
xchg
dec
or
or
icebp
jmp
sahf
inc
in
push
sub
push
fisttpl
movsl
loopne
jl
xchg
mov
mov
sbbl
imul
cli
cli
push
cmp
popa
mov
movb
sub
lods
mov
dec
add
test
pusha
lret
es
or
pop
vrsqrtps
into
fbld
xchg
cmpsl
imul
repnz
mov
loop
imul
xlat
mov
push
mov
cmp
shrl
movsb
mov
fistps
push
lcall
sbb
ja
jp
pushf
adc
jg
mov
push
adc
mov
mov
mov
xlat
outsb
xor
repz
xchg
notb
add
cwtl
sbb
jmp
adc
scas
scas
loope
cmpsl
mov
lea
out
mov
jae
cmpsl
ret
in
and
jne
mov
dec
fstps
mov
cld
push
adc
add
sahf
pushf
mov
fprem1
sub
ret
cmp
mov
pop
shl
call
push
ds
popa
es
shrb
mov
xor
add
jb
mov
dec
xor
xor
data16
add
jae
stc
rcrl
aaa
std
lret
idivb
sahf
call
lcall
mov
mov
fsubr
hlt
cmp
xchg
fldenv
hlt
push
rorl
inc
scas
cltd
add
in
pushf
inc
sub
mov
shll
test
je
jbe
int3
inc
xlat
or
lock
repz
and
stc
mov
out
pop
jp
sbb
js
push
xor
sbb
aad
sbb
cltd
aaa
mov
fildl
stos
and
lret
xor
push
push
inc
jecxz
inc
push
adc
les
orl
out
shlb
cmpsl
sbb
pop
int
cltd
aam
add
insl
adc
leave
testb
pop
hlt
xchg
and
pop
cmp
sub
pop
test
or
pop
sti
push
jle
and
lods
mov
test
sub
sub
inc
push
inc
xchg
lea
int3
add
lret
mov
add
aad
stos
ret
add
or
sub
sti
loope
test
adc
dec
js
xchg
add
ret
push
xchg
shlb
loope
repz
push
dec
rcrl
dec
push
notl
fimull
mov
in
aas
test
subb
mull
aad
ud2
insb
and
mov
xor
lods
mov
and
shll
in
add
push
inc
out
cltd
addr16
ja
sub
mov
data16
and
pop
pop
leave
xchg
xchg
ljmp
lock
jp
in
mov
testl
xchg
adc
jo
mov
add
add
pop
jg
sbb
xchg
stos
lods
add
push
mov
aaa
test
je
adc
js
out
sbb
xor
roll
add
jp
inc
outsl
out
mov
or
dec
pusha
mov
dec
push
arpl
inc
lds
out
xor
aas
decb
ja
or
imul
xchg
ljmp
sub
call
dec
insb
jns
xchg
out
dec
xorb
lret
push
pop
jg
jnp
ficoms
stc
and
enter
jnp
lahf
and
clc
dec
sbb
stc
cmpsl
mov
add
and
mov
push
pop
mov
je
mov
cmp
sbb
repz
sti
sahf
sub
jecxz
dec
shll
lret
mov
mov
push
sbb
sub
jl
cmp
mov
pop
test
out
dec
jae
adc
andl
jnp
add
int3
mov
mov
inc
inc
lods
aad
pop
aad
insl
push
add
mov
xchg
pop
mov
mov
cmp
xorl
outsl
imul
nop
push
icebp
sahf
aam
dec
dec
loop
or
int3
bound
dec
xchg
cwtl
fidivl
fmuls
push
loope
push
add
xor
jne
cmp
stos
out
inc
fisubs
into
inc
jbe
shlb
xor
lds
cs
push
bound
mov
js
test
and
jns
xchg
xor
pop
std
mov
lret
jbe
shlb
jae
push
insl
movb
xor
enter
and
inc
test
mov
mov
and
xchg
movsl
sub
mov
repnz
into
imul
stos
cmp
add
enter
cld
sahf
lcall
push
shlb
sahf
xor
inc
or
sbb
jl
addr16
jno
push
xchg
sub
sbb
and
or
mov
movb
fdivrl
xchg
ds
mov
dec
and
sti
das
rorb
push
sub
cmp
mov
or
fnstsw
cmova
popa
mov
scas
jae
xchg
insl
clc
stc
das
decb
mov
outsb
jbe
jns
xchg
xor
xchg
add
in
in
insb
lock
das
mov
in
mov
push
sahf
mov
aas
into
andb
adc
daa
xlat
cltd
mov
lahf
mov
xor
push
outsb
dec
jns
data16
pop
pusha
insl
roll
sub
loopne
lods
adc
pop
lcall
add
or
test
lods
enter
ja
add
mov
cld
adc
loope
leave
pusha
xchg
dec
sub
movntps
imul
ljmp
mov
je
mov
mov
and
sbb
insl
xchg
popa
push
dec
cltd
pop
sub
and
mov
shrl
adc
sub
mov
sbb
pop
fistpl
mov
adc
dec
or
cmp
jp
mov
in
sub
xor
dec
push
mov
notb
push
mov
rcrb
pop
sub
faddl
mov
les
test
ret
out
sub
and
and
xchg
inc
dec
lods
xor
and
xorl
inc
scas
mov
iret
bound
fmulp
cmp
lcall
dec
mov
pop
cmp
fwait
in
sub
test
sbb
adc
xor
inc
push
data16
stos
dec
pusha
push
imul
mov
and
pop
outsl
sub
mov
mov
imul
orl
pusha
out
push
cmp
cmp
icebp
addb
xor
clc
out
je
push
adc
je
cmp
xor
stc
mov
inc
mov
and
jb
inc
test
pop
adc
fcomps
imul
add
cld
inc
sbb
mov
push
mov
rol
arpl
pusha
sti
jnp,pn
divl
dec
stos
daa
cmp
cli
pusha
popf
arpl
das
dec
shrl
add
push
and
lods
and
ret
mov
dec
xor
xchg
inc
cmp
sbbb
add
xor
rol
xor
ja
mov
sub
lods
or
mov
fs
cli
jmp
cmp
and
lds
shl
jmp
and
dec
cwtl
ret
in
dec
je
lret
std
and
imul
jne
fnsave
arpl
pop
push
sbb
mull
mov
mov
decl
xor
add
dec
and
mov
sub
push
sbb
mov
dec
inc
inc
ja
popa
adc
adc
cmpl
loopne
xchg
pop
mov
out
pop
hlt
shll
pop
jge
inc
rcrl
outsl
cmp
push
imul
adc
in
push
pusha
lds
insl
jge
es
jo
lahf
dec
out
sbb
ret
out
roll
aas
lcall
pop
sub
inc
les
jnp
xchg
xor
dec
mov
test
pop
dec
int3
lret
popa
aad
fldenv
loop
mov
mov
lahf
jge
loop
inc
imul
mov
loopne
push
sahf
outsl
int
cmp
movsb
lods
mov
adc
inc
nop
jge
mov
fcmovnu
test
and
lahf
mov
mov
pop
ds
es
gs
pop
das
fistps
cmp
xchg
cmpsl
inc
or
adc
cmpsl
movsb
aam
cmp
insb
jns
xchg
dec
loop
jle
xchg
xchg
inc
pop
mov
add
ljmp
pop
data16
aam
sbb
push
jne
mov
testb
mov
gs
adc
cmp
adc
mov
test
xor
xor
cmp
pop
cmp
inc
fwait
pop
push
ja
fistpll
add
xchg
arpl
mov
mov
sbb
adc
lods
cltd
es
push
and
sub
and
imul
bound
add
in
test
or
cmp
push
xor
jno
in
jl,pn
ss
sub
fmuls
js
shr
inc
ja
call
mov
and
push
cmp
cmp
and
ljmp
outsl
pop
pop
or
xor
inc
ss
jg
and
iret
adc
cmp
sub
aad
sbb
push
fs
xor
jnp
cmp
test
fbld
push
adc
inc
push
xchg
pusha
cmp
jb
loope
pop
jo
negl
cmp
dec
ljmp
int
in
mov
rolb
mov
lret
and
mov
lods
dec
testb
fwait
and
cli
std
rolb
dec
jp
mov
gs
inc
sub
adc
sub
insb
pop
dec
cmpsb
shrb
shrb
std
stos
js
inc
cmpsl
movaps
xchg
rcrb
push
ret
cld
cli
jl
mov
adcb
lods
je
ljmp
lcall
loopne
or
fwait
dec
out
adc
shrb
hlt
mov
fisttps
inc
xor
cmp
adc
clc
bound
test
outsb
mov
xor
xor
or
inc
or
pop
int
loopne,pn
xor
inc
sarb
test
in
ds
xor
rcrl
or
pushf
cli
ss
push
push
fs
adc
sbb
and
lods
iret
stos
dec
test
mov
mov
cmpsb
jo
xchg
arpl
inc
outsl
xor
push
call
imul
test
jns
int3
lods
rcll
not
pop
jne
adc
test
mov
push
jp
xor
xchg
ret
cs
cmp
push
out
imul
nop
jae
xlat
xor
dec
inc
scas
push
inc
xchg
fbld
or
or
pop
xor
out
cmpsl
pop
xlat
sbb
push
sub
pop
outsb
cld
into
xchg
adc
fdivrl
xchg
pop
rolb
inc
cmp
daa
fiadds
xchg
mov
lea
shlb
or
loope
js
lock
insb
test
xor
testl
ffree
movsl
das
push
call
movsl
shlb
xchg
push
adc
xor
rcrb
lret
sub
int
jne
scas
xchg
mov
cmpsb
das
jne
dec
sbb
cli
add
sub
pop
fdivs
fstpt
dec
xor
xor
mov
negl
adc
inc
push
or
mov
mov
mov
xor
or
xchg
in
insb
or
subl
int3
sarb
out
push
mov
das
sub
cli
popa
gs
ffree
popa
dec
jmp
jb
pop
ror
dec
jnp
and
jmp
ja
fisttpl
jnp
pop
out
adc
dec
icebp
jl
jo
incb
or
int3
popf
dec
jbe
daa
shl
outsl
sbb
test
pop
es
mov
mov
xchg
std
inc
addb
int
xchg
and
in
aas
mov
adc
jbe
or
xor
jbe
scas
sbb
lret
repnz
sbb
loopne
mov
cmp
push
xor
test
addb
push
or
int
hlt
int3
dec
call
pop
jbe
mov
mov
movl
rorb
popfw
loope
xchg
add
inc
sub
xchg
and
xchg
pop
xchg
arpl
nop
mov
xchg
nop
push
add
fsubs
repz
cli
in
filds
sti
pop
cld
pop
subb
insb
mov
ds
push
inc
inc
cmp
cmc
test
add
jbe
scas
rclb
xchg
add
adc
sti
or
cs
mov
pop
lret
jae
aad
hlt
aam
push
mov
sub
es
ret
xchg
cmp
pop
jno
aad
int3
lahf
mov
out
sbb
test
mov
sub
out
das
sbb
icebp
int
pop
nop
sbb
rcrl
push
shll
dec
mov
sub
inc
inc
sarl
mov
insl
push
loopne
or
outsb
xchg
add
data16
pop
aaa
popw
push
aad
inc
lds
add
shlb
cmp
in
jns
push
cmc
push
sbb
pop
or
mov
out
movsb
push
push
hlt
sarl
mov
mov
out
loop
sbbl
imul
shrl
cli
loopne
sub
xchg
lea
inc
or
ret
call
imul
cmp
pop
ss
dec
xchg
dec
rolb
xchg
hlt
loope
fcomps
jb
outsl
mov
jp
lret
mov
lods
or
jo
jns
jae
cmp
aas
mov
in
ss
insl
frstor
lret
push
mov
xchg
dec
jbe
inc
fsubrs
imul
movsb
nop
and
fs
lods
fnstsw
popa
push
cltd
ja
loope
mov
lea
sbb
mov
cmpsb
and
sti
push
loopne
roll
ljmp
sub
pushf
repz
sahf
or
inc
lret
pop
mov
leave
fst
xor
jb
add
enter
adc
loop
lods
insb
es
sbb
je
loope
test
xchg
incb
xor
lods
lea
push
int3
sub
addl
push
leave
mov
aas
push
jns
mov
sub
orb
xchg
xchg
lahf
add
mov
bound
mov
push
push
xchg
sbb
fs
pop
push
xor
mov
jge
cmp
dec
addb
insb
jmp
jg
into
enter
xor
popl
xchg
popa
jnp
xlat
call
insl
cmc
pop
push
cmp
or
fmuls
hlt
cmp
fcomip
push
push
pop
cmpsb
stos
add
lret
jmp
add
cmp
xorl
dec
mov
xor
lds
add
inc
add
scas
inc
push
jmp
or
sahf
sti
xor
mov
lcall
out
fmuls
inc
ljmp
call
cmpsb
movsb
pop
bound
xor
movswl
loope
popf
mov
mov
xchg
xor
push
cwtl
xchg
mov
movsl
add
jne
sub
add
push
pop
idiv
ja
jmp
dec
out
xor
push
and
push
andb
shrl
lods
xor
cli
push
pop
push
cmp
push
xchg
js
inc
sbb
aas
mull
and
aaa
adc
add
push
std
aam
xor
mov
dec
outsl
mov
test
sub
mov
out
shl
push
scas
stc
sti
adc
fsubr
cmp
push
dec
add
xchg
shlb
pusha
mov
xchg
sub
xchg
push
rep
sbb
mov
mov
popf
lahf
lds
xlat
out
enter
fists
mov
sarb
adc
pop
push
sbb
mov
cld
jnp
jg
xor
cmpsb
mov
out
cvtpi2ps
push
pop
test
in
and
and
add
push
cmp
insb
push
xorl
jecxz
and
ds
repz
cs
clc
and
adc
fidivrl
cwtl
mov
lds
mov
addr16
imul
cmp
sbb
clc
inc
jae
stc
dec
out
pop
or
pop
mov
fidivs
jb
pop
movsl
mov
xchg
dec
adc
mov
cmp
and
pop
lods
mov
cmp
out
dec
xchg
xchg
scas
insb
sbb
pop
ss
jbe
xchg
inc
xchg
inc
and
pop
mov
ret
shlb
dec
enter
int
mov
or
cmp
inc
sbb
mov
or
loop
fwait
loop
lret
pop
push
pop
sbb
push
test
ret
decl
adc
xchg
stc
in
and
sub
jecxz
mov
shlb
insl
mov
inc
out
or
adc
bnd
cmp
and
rclb
push
addr16
sbb
xchg
adc
daa
sbb
lret
cmp
cmpl
stos
mov
mov
popa
sub
add
cld
pop
xchg
mov
rcll
test
cmc
nop
loop
jp
fistpl
sbb
pop
call
sub
jbe
xor
fcoms
pop
mov
hlt
lds
sbb
ss
sub
jae
mov
shl
push
push
mov
xor
into
xchg
lods
sbb
xchg
out
adc
aad
out
movsb
in
xchg
jp
les
insb
inc
xchg
xor
cli
inc
subl
mov
aad
call
cmp
loopne
sub
xchg
je
std
fimuls
scas
mov
mov
sub
test
xchg
push
inc
int
lret
and
inc
dec
sub
mov
je
jmp
jl
mov
dec
jge
js
inc
cltd
movsl
sub
iretw
aad
mov
adc
inc
mov
in
mov
pop
shlb
push
mov
jl
and
push
jmp
dec
push
pop
xor
fwait
outsb
and
jmp
in
imul
movsb
data16
inc
mov
push
sub
xchg
ret
and
mov
aas
or
adc
bnd
call
fs
push
cltd
xor
jb
pushf
or
add
into
test
xchg
xchg
cmp
inc
roll
pop
into
rorl
cltd
xchg
sti
sti
pop
call
aaa
outsb
aaa
andb
jecxz
mov
lds
xchg
lret
mov
jno
pop
aaa
loope
xchg
or
cmc
push
pop
mov
nop
add
clc
int
cwtl
rorb
sbb
dec
test
out
or
cmp
lea
jb
jmp
sbb
pusha
and
dec
and
pop
sub
push
add
dec
clc
push
jbe
cvtps2pi
les
mov
js
jl
icebp
jp
xlat
arpl
ljmp
push
pop
fmuls
loope
pop
mov
out
test
pop
lock
mov
arpl
xor
dec
cmp
adc
minps
add
inc
cvtps2pi
dec
bound
cmp
or
jno
pushf
sbb
fsubs
data16
add
cmp
popa
cmp
jmp
or
sub
cmpsl
adc
mov
out
lods
jmp
sbbb
mov
sub
mov
loope
psraw
jmp
js
popf
push
ljmp
xor
cmp
iret
shlb
pop
or
mov
aas
imul
mov
daa
nop
pusha
or
lds
je
mov
pop
sbb
jae
adc
movsl
sbb
in
xchg
xchg
mov
jbe
inc
ret
adc
jns
fldenv
clc
loop
mov
insb
pushf
iret
rol
mov
jg
xor
or
lcall
int3
loop
push
xchg
sub
fistpl
es
mov
mov
bound
mov
loope
cmp
outsb
stc
push
xchg
sub
or
cli
xchg
adc
adc
pop
mov
fmull
adc
into
ss
test
jne
movsl
sub
sahf
inc
or
push
adc
fstpt
mov
lret
sub
repz
arpl
in
xchg
sbb
in
xchg
mov
or
loope
push
inc
jmp
xlat
push
jb
bound
cmp
push
push
push
fdiv
mov
push
mov
and
mov
xchg
repz
out
or
bound
and
lret
daa
pop
stos
stos
shll
inc
mov
lret
xchg
gs
mov
cmp
insl
lahf
lret
les
or
xlat
es
insl
insl
test
mov
into
mov
pop
push
xor
mov
arpl
fstpl
or
repz
pop
pop
aaa
dec
inc
cmp
mov
mov
mov
scas
add
push
mov
daa
icebp
iret
in
test
add
shll
popf
and
xor
or
mov
pop
jnp
sbb
data16
push
jge
xchg
jbe
out
jo
adc
jae
sbb
fwait
inc
je
or
fsubs
mov
push
dec
sbb
lcall
jg
mov
xor
dec
pop
vpsrlvq
fisttpl
cmp
sbb
fidivs
jmp
push
ret
dec
pop
imul
pop
pushf
repz
loop
test
sbb
jbe
pop
push
push
clc
xchg
gs
sbb
push
jmp
scas
mov
call
pop
cmp
loope
xor
push
adc
dec
gs
mov
mov
fwait
mov
add
mov
jg
ja
dec
popa
pop
jbe
stc
jp
xor
mov
and
scas
jbe
or
lcall
xchg
scas
lds
dec
andl
xor
add
push
mov
add
push
jmp
lds
je
insb
sub
sbb
les
lcall
or
push
adc
incl
outsb
incb
pusha
clc
ljmp
aas
dec
xor
sbb
xchg
mov
scas
incb
dec
push
mov
mov
ror
aad
inc
clc
inc
pop
test
loope
pop
add
add
roll
and
add
out
addr16
sti
mov
popa
les
and
stos
fstl
enter
cmc
mov
mov
add
mov
or
xor
pop
je
adc
and
xchg
movb
dec
pop
adc
cmp
inc
mov
stos
jg
loop
int3
dec
pop
pop
sub
mov
in
cmpsb
mov
sbb
dec
cmp
mov
push
sahf
ret
mov
pop
mov
cmp
cli
push
push
fs
sti
les
xlat
loopne
sbb
fimull
inc
xchg
sbb
je
stos
mov
sub
mov
add
je
push
and
jp
outsl
lret
mov
ret
jecxz
popf
test
fistl
ja
fstl
cld
xchg
cld
aad
repz
stos
sbb
and
or
movsb
jae
sbb
ljmp
loope
cmpl
mov
addb
iret
loop
lods
push
in
fsubrs
push
mov
gs
clc
sub
rolb
push
jb
dec
repz
fwait
sub
out
push
sub
and
icebp
mov
in
pop
mov
mov
popa
jge
push
out
aam
popf
mov
repz
rclb
inc
ret
inc
out
in
and
mov
imul
std
mov
lret
shrb
je
mov
aad
xchg
cmp
mov
jecxz
enter
aas
inc
iret
stc
movsl
mov
popf
aaa
push
hlt
jp
sahf
ljmp
xchg
mov
repnz
adc
inc
sbbl
adc
call
rol
movsb
shlb
add
xor
push
ret
test
rcr
pop
sbb
call
mov
jp
mov
call
jbe
in
aam
cltd
xchg
push
mov
js
rcr
je
cmp
jns
xor
flds
push
xchg
mov
imul
mov
movsb
sub
test
mov
into
cwtl
mov
pop
push
mov
and
rcl
imul
pop
out
mov
test
xchg
scas
pop
or
jb
mov
mov
cmp
rclb
or
enter
dec
lahf
adc
cmp
lds
jbe
or
push
aam
pusha
in
add
clc
mov
mov
jmp
movsb
adc
enter
lahf
mov
xor
jbe
test
dec
fstpl
imull
sbb
pop
sbb
mov
lods
jge
push
ljmp
jno
shll
movaps
stc
out
insl
or
pop
dec
lcall
fidivrl
out
inc
mov
xchg
icebp
lret
push
cltd
push
add
outsl
fwait
shld
inc
lods
sub
push
imul
call
add
std
ja
xor
lds
lret
cmp
fnstcw
arpl
pushf
and
jp
push
test
lea
cmp
sub
fdivr
sbb
test
imul
das
adc
lock
fs
push
cmp
jns
das
xchg
stc
push
testb
push
mov
pushl
and
out
pop
dec
mov
pop
repnz
in
xchg
dec
inc
or
mov
rorb
inc
mov
test
sub
int3
out
add
orb
add
or
mov
bound
sbb
nop
dec
push
sbb
call
xor
lods
in
fcomps
sub
jl
or
mov
pop
mov
mov
ja
pop
in
push
vaddpd
adc
pop
or
aad
cwtl
xlat
mov
add
clc
fucomp
or
popf
mov
inc
sub
dec
call
dec
and
leave
loopne
adc
leave
sub
mov
and
ljmp
jge
shll
mov
push
mov
adc
fs
andl
fisubrs
and
and
fdivr
in
imul
adc
jle
pop
pop
ret
adc
aaa
dec
push
dec
fcmovnu
ret
jne
mov
or
scas
fs
xchg
jg
inc
dec
inc
call
in
loope
or
rolb
fcmove
cld
out
aas
pop
into
leave
pop
lret
movsl
inc
adc
push
or
cli
inc
negl
dec
or
push
dec
add
dec
sub
insb
adc
mov
out
adc
ud1
push
cmp
fdivrs
add
mov
and
sub
mov
shrb
jbe
jnp
cwtl
jo
mov
js,pn
fcompl
xchg
test
sub
add
jl
dec
push
xlat
jmp
adc
cltd
in
or
testl
test
inc
jb
inc
addr16
cld
fildll
insl
cltd
add
xlat
pop
daa
xchg
xor
sbb
out
lds
mov
cwtl
movsb
daa
and
jl
mov
rcll
gs
jg
cmp
sbb
mov
movsb
dec
inc
out
mov
inc
xorl
and
outsl
stos
aaa
subl
and
xchg
sbb
test
out
mull
leave
mov
lret
sarl
std
icebp
xlat
mov
jg
xor
addb
leave
icebp
xor
pmulhuw
leave
mov
int3
jmp
std
sar
xor
inc
push
push
js
lods
pop
inc
mov
lods
iret
ss
stos
sub
adc
sbb
icebp
cld
push
pop
jnp
fucomip
pop
icebp
stc
and
lods
int
xchg
aad
sbb
outsb
or
outsl
lret
mov
inc
add
and
jmp
hlt
iret
ret
aaa
pop
ljmp
test
sub
lcall
repnz
push
pop
push
pop
jge
pop
cmpsl
adc
jne
sub
push
dec
mov
mov
push
pop
push
xchg
stc
mov
lcall
mov
dec
nop
mov
push
outsb
cld
ja
mov
ret
out
dec
fiaddl
lcall
add
ret
ret
inc
rclb
pop
cltd
jns
sub
or
dec
pop
inc
movsl
cmp
push
push
and
rcr
cmc
in
or
mov
das
lods
std
mov
mov
add
mov
mov
fsubrs
or
out
aaa
into
xchg
loop
pushf
ret
jne
cmp
xchg
ja
popa
xchg
jle
shrb
jge
into
lea
fistpl
out
sbbl
push
into
inc
mov
cmp
mov
in
push
es
cmp
ja
andb
data16
cmpsl
push
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
adc
iret
and
pop
jl
in
and
jo
xchg
sbb
jae
inc
mov
ret
divb
scas
push
jno
sti
arpl
int3
cs
sub
cmp
adc
xor
cli
je
leave
divl
shrb
fmul
jle
fcoms
xchg
iret
mov
or
out
and
outsb
pop
lods
push
jecxz
inc
sub
leave
shl
and
cld
xor
filds
aam
jl
outsb
mov
popf
in
std
mov
popa
fwait
mov
push
shll
in
push
je
pop
sbb
shrl
xchg
cld
fidivrs
imul
ja
les
jns
xchg
xor
and
pop
xchg
cmp
adc
cmp
mov
shr
push
dec
dec
in
call
jp
cmp
pushf
iret
rcll
mov
cmp
xlat
cli
xlat
call
sub
dec
loop
in
or
dec
jle
cmpsb
push
orl
pop
xor
push
aas
test
push
mov
shl
lock
es
ds
inc
mov
pop
int3
rcll
les
sbb
mov
das
inc
test
clc
out
push
sbb
push
and
cmp
xchg
jg
dec
and
mov
movb
lods
or
jecxz
adc
xor
sub
xchg
gs
jnp
repnz
imul
popa
cs
jl
mov
sbb
pop
pusha
lahf
loop
jp
cmp
ja
push
or
daa
jae
jle
cmp
mov
aaa
outsl
cmc
jecxz
in
out
cmc
lahf
fsts
mov
mov
inc
les
loop
add
cmpsl
sahf
mov
inc
xchg
mov
int3
loope
xor
push
das
test
dec
out
and
cwtl
jmp
jecxz
mov
sbb
xchg
pop
jbe
pop
push
pop
mov
mov
loopne
leave
leave
daa
test
call
dec
push
sarb
lods
lahf
or
fstpl
cmp
mov
or
dec
stos
mov
pop
inc
pop
leave
out
loopne
xor
fxch
in
rclb
xor
test
int3
je
add
imul
xchg
adc
stos
adcl
dec
mov
out
dec
sub
dec
sar
adc
cs
jae
aad
jb
and
shlb
push
jmp
mov
mov
pop
xor
outsl
test
cmp
and
dec
and
mov
or
jnp
or
xor
popa
stc
das
mov
jnp
pop
cs
inc
jmp
jge
jae
xchg
fbld
jne
xchg
scas
xchg
adc
mov
sbb
cmpsb
out
lcall
pop
in
repz
cld
bound
jle
push
jno
adc
cwtl
push
aaa
sti
pop
cli
dec
mov
dec
push
into
pmaxub
iret
xor
and
into
xor
dec
bound
imul
push
daa
ret
or
mov
scas
push
rcr
mov
and
mov
push
add
cmpsl
nop
sbbb
jecxz
cmp
push
leave
enter
mov
mov
xchg
das
fbld
sbb
or
repnz
mov
cld
add
xor
scas
roll
jns
adcb
cmpsl
jmp
cmc
fsubl
lock
ljmp
fs
cmp
push
pop
or
bound
shrb
int
pand
out
imul
in
mov
mov
sbb
xchg
int3
and
ret
loopne
mov
aaa
in
rol
mov
jae
mov
fisttps
cmp
testl
push
rcl
jecxz
lods
cmc
jmp
out
lods
das
dec
inc
icebp
jne
or
mov
mov
push
pop
mov
repnz
sti
dec
outsb
das
cmp
divl
nop
insl
inc
sbb
inc
lods
xor
mov
push
ret
dec
out
inc
enter
mov
sar
idivb
push
cmpsb
cmc
or
mov
and
outsb
push
pop
test
shrb
imul
lock
hlt
scas
call
mov
cli
mov
cs
fbstp
fs
pop
push
mov
lods
rolb
orl
in
pop
jbe
mov
addr16
sub
sbb
push
inc
xor
rol
mov
xchg
cmpsb
pop
mov
mov
shrb
outsl
and
aas
scas
or
xor
repnz
jge
in
pop
arpl
jbe
repnz
cmp
lcall
inc
loopne
fsubl
imul
mov
and
jle
push
cmp
call
sbb
pop
sahf
jp
xchg
scas
call
ljmp
add
pop
std
mov
sahf
adc
mov
stos
or
inc
or
les
pusha
pop
shrl
ds
adc
pushf
xchg
sahf
jbe
stos
mov
lret
lahf
push
xor
fdivs
xchg
adc
and
pop
bound
push
or
sbb
xor
mov
repz
mov
cmpsl
sub
shlb
pop
cmpsb
decb
push
in
cmpsl
in
push
popa
je
pop
xchg
mov
leave
repz
mov
pop
sub
mov
wrmsr
les
dec
xor
adc
xchg
and
xor
push
jg
push
iret
hlt
xorl
xchg
dec
aam
mov
lcall
and
mov
cmp
leave
stc
ja
into
push
test
test
dec
das
jmp
pop
iret
mov
mov
shll
je
mov
popf
mov
fdivl
xlat
js
scas
mov
popf
push
imul
je
test
xchg
popl
pop
std
rcrl
xchg
push
cmp
and
pop
adc
pop
std
sbb
mov
out
sarl
rcrb
sbb
sub
xchg
inc
in
addb
xchg
movsb
nop
dec
pop
leave
ret
xchg
movsl
sub
push
movsl
inc
dec
mov
jo
cltd
and
inc
add
xchg
jb
test
xchg
mov
js
test
pusha
int3
fmull
or
mov
test
enter
mov
cmp
lods
dec
or
sbb
clc
cld
cmp
cwtl
idivl
out
push
cli
and
push
sbb
dec
in
ret
into
clc
notb
fstps
ss
std
imul
push
daa
pushf
jno
mov
out
pop
outsl
push
sub
pop
pop
popa
pop
sahf
cltd
lods
ret
loopne
sti
xchg
stos
ja
jnp
jmp
xchg
jl
bswap
daa
div
insb
pop
sbb
stos
xlat
pop
pop
push
in
or
lahf
movsb
in
push
xlat
push
cltd
mov
cmp
jno
xchg
xor
dec
fldt
adc
cmp
cmpsl
or
in
das
lahf
inc
test
mov
push
dec
mov
add
arpl
jo
adc
out
push
sbb
ficompl
jl
imul
repz
fiadds
rorl
mov
out
mov
leave
pushf
into
aam
or
mov
cmc
das
fsubp
es
push
cld
repz
mov
or
mov
mov
stos
mov
rcll
test
iret
insb
scas
mov
mov
adc
or
inc
mov
jo
fwait
out
push
xchg
fisttpl
or
or
popa
cli
mov
cs
mov
lock
adcl
imul
fidivl
mov
add
xor
idivl
mov
mov
jmp
and
jl
in
xor
ss
leave
scas
inc
jmp
xchg
adc
cld
lds
outsb
jne
jl
sti
iret
test
pop
pop
in
sub
jo,pn
add
fs
xor
mov
out
jmp
jmp
scas
push
or
xor
fs
fisttpl
in
xchg
hlt
xor
push
sub
out
push
jnp
push
lcall
pusha
mov
cmpsb
fstpl
fildll
sahf
lret
jg
dec
je
je
shrb
sub
jmp
jmp
jno
das
xchg
bound
lret
jecxz
mov
jnp
incb
jp
sbb
jle
add
cli
int3
xlat
push
or
enter
xchg
pop
xor
icebp
dec
xchg
int
add
fwait
ljmp
or
sbb
and
inc
mov
cld
shrb
ret
notb
pop
ds
loopne
out
push
add
out
mov
cld
mov
fisubrs
lea
cld
icebp
push
test
rorl
out
sbb
adc
movsl
xchg
and
stos
scas
lret
xor
inc
lds
dec
mov
dec
arpl
or
fistl
dec
jne
adc
into
rcrb
scas
mov
jp
pop
scas
add
dec
mov
mov
inc
mov
xchg
fidivrs
inc
adc
std
movsb
es
lods
pop
pop
jg
xchg
lock
in
pushf
jbe
sarb
cmp
jecxz
nop
or
das
dec
in
jmp
push
add
adc
test
out
jecxz
dec
fndisi(8087
cmp
fldt
pop
inc
fistpl
ds
scas
jbe
xchg
cltd
ficoms
cwtl
sbb
ret
mov
inc
dec
xor
and
lock
mov
xlat
sbb
jae
sbb
cmp
out
pop
mov
lods
mov
imul
and
iret
add
fcmovnb
or
test
push
adc
movsl
jb
stos
jg
dec
sub
jle
dec
in
inc
pop
xchg
xchg
cs
dec
pop
out
jmp
js
mov
jmp
or
ret
lods
pop
sub
add
and
insb
sub
cmp
jne
testb
cmc
data16
sbb
cmp
test
mov
in
push
imulb
inc
inc
xor
pushf
clc
xchg
cmpsl
aas
popf
add
movsb
ss
xchg
mov
ret
dec
js
call
int
call
popf
xchg
xchg
inc
int
pop
je
pushf
mov
adc
int3
jns
sub
leave
push
jb
sub
lahf
out
fidivs
fs
mov
cmp
cwtl
je
in
push
inc
add
add
pop
stc
div
jl
shlb
cld
je
jne
icebp
xchg
sti
addr16
jne
aas
and
pushf
fildl
adc
movb
jle
int3
or
andb
mul
iret
je
jle
or
xchg
or
xor
xor
pusha
fcomp
leave
loopne
mov
mul
mov
push
iret
fcmovbe
sub
addl
jmp
les
data16
popa
adc
pop
cmp
inc
mov
daa
xor
call
and
enter
test
inc
push
mov
or
inc
jp
lahf
icebp
adc
lahf
fnstsw
and
rcll
into
mov
mov
pop
xchg
mov
loop
xor
add
xchg
pop
addr16
sub
mov
sub
fldt
hlt
cmp
pop
xchg
pushf
sbb
fldt
cmp
je
xor
push
push
out
cmp
mov
adcl
mov
pop
imul
cwtl
dec
fs
stos
out
lds
cld
lock
int
lods
mov
jmp
adc
mov
dec
ret
inc
mov
addr16
sahf
jb
cmp
sbbl
sbb
popa
repz
lea
in
js
or
test
in
ja
iret
fucomip
enter
mov
jg
loop
mov
mov
jo
insb
xor
out
pop
sahf
mov
lret
cmp
mov
clc
push
icebp
cmp
fldl
cld
mov
jo
jl
jb
repnz
scas
sub
and
mov
bound
vmovdqa
pop
lret
push
xor
adc
cmpsb
stos
xchg
mov
lahf
push
sbb
das
pop
shll
pop
mov
ja
xchg
xchg
sti
orb
sub
inc
pop
fwait
pop
mov
nop
in
push
xchg
nop
shll
repz
repnz
cli
jmp
outsb
std
adc
sahf
adc
pop
mov
into
insl
and
add
aaa
pop
jnp
fldl
test
and
or
ficoms
popa
and
mov
das
add
mov
xchg
dec
lock
imul
xchg
push
push
pop
cmp
add
ret
enter
pop
int3
ficomps
mov
jb
gs
lcall
jb
xor
xchg
xchg
push
test
sbb
adc
leave
xchg
mov
cmc
inc
iret
xor
adc
insl
cli
push
hlt
lcall
and
aam
std
out
jg
mov
pop
std
inc
fstpl
inc
adc
les
sbb
or
arpl
mov
dec
mov
xchg
pop
shl
sbb
pop
xchg
jns
sbb
ret
xchg
push
popf
addl
jb
xchg
push
sub
enter
test
cmp
out
pop
add
jge
cmp
out
lret
fwait
pop
inc
into
cmc
scas
addb
mov
and
cwtl
sub
jbe
adc
xchg
mov
bound
xchg
insl
mov
dec
cltd
sbb
das
test
mov
mov
xor
int3
cmp
or
in
push
in
repnz
mov
roll
jae
cltd
in
shll
dec
pop
xchg
out
sbb
jns
inc
inc
out
lock
pop
es
cmp
or
mov
pop
jecxz
cs
xchg
inc
pop
bound
jbe
push
mov
cmp
sub
loop
mov
adc
clc
leave
xchg
inc
mov
push
push
push
xchg
aas
add
adc
cmp
push
out
into
sbb
fldenv
mov
xchg
xchg
pop
adc
mov
inc
xlat
fcompl
pop
xchg
push
dec
lds
dec
ret
aas
mov
loop
add
mov
push
aam
add
pop
out
mov
imul
loope
notl
jbe
popf
pop
add
lret
andb
sahf
call
pop
jle
xlat
cmpsb
jae
sti
rcpps
mov
bsf
and
xchg
lahf
faddl
and
pop
outsb
add
popa
push
or
divb
push
mov
lcall
decb
cmp
cmpl
cld
sahf
xchg
shl
in
repnz
lds
ds
mov
mov
test
sub
mov
or
test
arpl
or
sti
stos
bound
in
fildl
in
scas
jae
loopne
psllw
sub
ss
jle
push
push
xchg
mov
mov
ds
pop
shrb
mov
fdivs
mov
or
pop
scas
dec
and
sbb
pop
jmp
or
js
inc
xchg
pop
push
mov
bnd
cli
and
mov
inc
mov
lea
add
adcl
jmp
xchg
adc
addl
sub
lds
cli
cmp
sub
rcrl
jb
leave
and
out
in
sarl
icebp
lahf
or
xchg
arpl
mov
outsb
aas
inc
cmp
cmpsb
por
push
mov
and
cwtl
mov
mov
jns
push
sahf
scas
inc
adc
mov
mov
mov
push
popa
xchg
ss
and
sub
stos
or
adc
sub
sbb
and
and
insb
je
and
cmc
mov
stc
inc
int
mov
cmp
pop
sub
mov
mov
dec
outsb
in
mov
adc
iret
sbb
in
push
sbb
loop
int
sahf
pop
je
inc
add
push
or
cs
stos
call
xchg
xor
incl
sub
mov
lcall
mov
hlt
in
push
aam
mov
adc
insl
push
loope
gs
pushfw
sub
add
outsl
lock
cmpl
dec
mov
push
fldt
and
js
pop
sahf
fidivrs
or
lcall
cmpsb
sarb
std
inc
ss
xor
push
movl
jns
arpl
cmp
cmp
jne
pop
adc
call
aad
int
jbe
cmp
mov
xor
lea
shrb
mov
es
xor
inc
sbb
pop
adc
pop
cmpsl
aas
jl
es
pop
loopne
je
inc
in
call
pusha
or
cli
pop
jbe
lods
ret
int
inc
xor
stos
movsl
xor
sub
mov
inc
or
in
cld
call
imul
and
lcall
dec
mov
sarb
sahf
xor
cmp
cld
pop
je
add
mov
lret
fidivs
dec
in
or
addr16
jo
ja
sbb
loopne
push
in
sub
stos
mov
adc
jl
sbbl
test
mov
sbb
xor
or
lods
cwtl
dec
mov
push
mov
movsb
jge
inc
pusha
or
push
jno
sub
inc
sub
fcmovb
lret
mov
stos
movsl
fwait
stos
jo
ret
add
mov
mov
repnz
inc
movsl
cli
rorl
dec
sub
cld
mov
jo
mov
fisttps
mov
mov
xchg
jge
mov
or
sub
loope
mov
push
bsf
js
cmp
jecxz
outsb
push
ret
aam
out
dec
out
les
sbb
je
jmp
dec
jns
pop
mov
mov
push
adc
idivl
scas
rcrb
cld
and
sbb
dec
repz
rcl
dec
lcall
mov
xchg
push
jae
mov
jg
test
aam
inc
xchg
mov
mov
inc
sbb
ja
aam
popf
push
mov
dec
mov
inc
sbb
jo
not
or
or
lahf
sti
dec
pop
mov
xchg
cmp
rcrb
xchg
mov
mov
fdiv
cwtl
pushf
in
mov
sub
ds
je
lea
stos
or
repz
roll
push
lods
int
repnz
lcall
test
jo
push
mov
lock
movsb
xor
iret
dec
adc
je
fstpt
xor
pop
mov
out
mov
arpl
sbb
cmp
icebp
or
bound
mov
sub
adcl
mov
mov
rcl
cld
xchg
mov
adc
inc
in
bound
scas
jmp
cmp
je
mov
test
and
mov
data16
popa
inc
clc
sbb
aam
call
sub
adc
inc
pop
pop
add
cmp
cs
mov
sbb
pop
xor
test
cmp
pop
out
add
or
aaa
xchg
sbb
incl
inc
sub
fidivrl
push
xor
and
ds
cltd
mov
pop
xor
xchg
fmull
fwait
scas
sub
push
insl
sahf
in
dec
dec
fwait
les
rcrb
scas
mov
adc
adc
dec
lods
mov
sub
sahf
icebp
xchg
mov
fxch
rcrl
bound
mov
jae
scas
mov
pop
mov
dec
push
insl
add
les
mov
pop
or
dec
out
loope
clc
in
inc
adc
cmc
loop
push
insl
dec
xor
clc
fs
out
sub
add
mov
in
xchg
cli
mov
adc
push
mov
push
div
mov
loope
add
repnz
je
or
rcrb
lcall
xlat
dec
bound
ljmp
xchg
test
xor
jge
add
push
stc
cmp
lret
into
jae
pop
adc
pop
inc
arpl
mov
lcall
add
lret
nop
xchg
dec
inc
jle
jnp
inc
dec
sarl
sti
and
test
jmp
pop
add
lret
add
add
lret
cmp
or
jl
out
xchg
mov
int
push
fstpl
jl
or
ds
push
js
xchg
into
cmpsb
into
lahf
cmp
pushf
xor
dec
std
in
call
popa
rcr
les
push
push
jmp
cmp
inc
lds
inc
mov
fsubrs
jns
xchg
or
in
data16
sub
negl
orl
lods
fcomip
in
addr16
mov
pop
mov
pusha
push
inc
cmc
push
add
sub
les
cld
test
dec
rorb
icebp
mov
pop
xor
or
sbb
xchg
pushf
js
insl
cmpsb
ds
push
adc
out
popa
jecxz
mov
scas
adcl
imul
movq
jmp
je
notl
idivl
fldl
mov
xchg
sti
or
popf
loope
pop
bound
imul
sub
or
mov
call
xor
cmpsb
imul
and
or
ja
pop
mov
mov
dec
fisttpl
mov
inc
xor
sub
out
test
or
das
xchg
lahf
xlat
mov
idivl
enter
clc
adc
xor
icebp
dec
loopne
int3
rcr
mov
push
clc
out
jmp
xlat
repz
shrb
outsb
sbb
xor
dec
push
push
pop
mov
fs
test
cmp
insl
dec
push
inc
pop
mov
pushf
cmp
sub
xchg
pushf
leave
out
xchg
mov
stc
lods
mov
jge
dec
cld
inc
dec
adc
repnz
fs
mov
out
jecxz
and
mov
jmp
jecxz
mov
xor
push
sub
pop
leave
outsb
dec
push
cld
in
test
sub
fadd
sub
fmuls
sysret
cmc
cmp
adc
inc
inc
lret
mov
push
loop
adc
mov
xchg
sbbb
inc
sbb
in
mov
pop
rcl
inc
inc
jecxz,pn
jmp
push
ljmp
lret
or
aas
mov
in
cmp
cmp
xchg
aas
pushf
cmovge
sub
mov
jle
rclb
xlat
mov
shrl
lcall
inc
loope
and
fiadds
divb
clc
dec
inc
inc
adcl
push
cld
and
scas
pop
mov
inc
mov
int
xchg
adc
push
or
sbb
add
push
push
inc
mov
sbbl
iret
inc
sbb
cmp
inc
ret
lret
and
xlat
movsl
enter
push
mov
pushw
int3
ljmp
adc
or
jecxz
outsl
mov
in
stos
sub
fdivp
cmp
loopne
xor
mov
sbb
mov
and
sub
or
pop
fwait
push
shll
jg
mov
fs
adc
mov
jnp
roll
push
arpl
jp
sub
mov
inc
cwtl
lods
mov
fnstsw
repz
nop
fstpt
loopne
pop
mov
ss
sbb
sub
out
push
or
pop
mov
fidivs
clc
or
push
xor
cli
mov
pushf
outsb
pop
cmp
stos
mov
clc
es
jb
sub
pop
ffree
mov
push
pop
xchg
push
test
insl
mov
xchg
out
lods
xchg
in
jmp
aam
lret
mov
push
rol
dec
jge
ret
mov
popf
out
lea
mov
mov
aaa
adc
pop
aaa
xlat
stos
jge
mov
jmp
imul
jl
ret
xchg
sbb
shlb
aaa
shr
xor
push
lock
ja
punpcklwd
dec
jmp
into
sbb
imul
push
push
lcall
mov
ja
loopne
stos
dec
outsl
out
push
push
cmpsl
push
pop
and
fcmovnu
orl
mov
push
mov
mov
insl
test
nop
mov
dec
ds
mov
inc
xchg
cmc
pushf
shlb
add
dec
xor
cmp
dec
xchg
pop
movsb
fdiv
jmp
xchg
stos
pushl
jne
nop
cmp
dec
or
mov
sahf
scas
addr16
adc
dec
jne
mov
scas
aas
stc
pop
pop
mov
jge
jecxz
push
push
test
adc
add
jne
sti
mov
pop
arpl
out
sub
aam
movsb
push
aad
jmp
jl
inc
icebp
imulb
std
in
mov
fistps
and
fldl
stos
jge
movsb
lahf
inc
mov
cmp
pop
inc
popa
in
fidivrs
jae
xchg
lods
cmp
push
mov
imul
jns
sub
cmp
loop
ja
mov
stos
mov
inc
stc
das
mov
call
sub
pop
sahf
or
lcall
aad
movsl
jns
push
dec
sahf
and
mov
and
add
xchg
das
sbb
shrl
cli
ss
jmp
dec
in
push
mov
ficoms
outsl
mov
js
sub
scas
cmp
mov
mov
mov
jo
pop
lret
sbb
and
aad
sbb
mov
sbb
insb
cmp
mov
rolb
in
inc
cmpsl
cli
add
mov
pop
fisubs
cmp
jae
mov
inc
mov
ss
dec
pushf
out
push
loop
cmpsb
ja
pop
ret
clc
add
ss
cmp
aas
jae
frstor
sbb
adc
hlt
fisubs
or
sub
fs
adc
aad
jmp
xor
cltd
cltd
lret
ret
or
sarb
mov
jbe
cmp
sub
adc
insl
fmull
int
push
mov
and
cmp
cmpsb
mov
je
popf
hlt
lret
outsl
inc
mov
push
adc
loopne
pop
shlb
movl
mov
out
scas
dec
jecxz
int3
mov
es
and
cmp
rcrb
dec
inc
loopne
pop
jmp
gs
jg
leave
sub
jl
jb
xlat
out
inc
jbe
mov
test
icebp
rorb
jmp
push
ss
jge
dec
xchg
rcrl
and
jp
pop
xchg
jb
jae
push
call
mov
js
adc
or
mov
jmp
xor
push
es
mov
out
mul
out
je
pusha
fidivrl
data16
call
xchg
and
push
insl
jecxz
adc
sbb
outsb
ret
inc
jl
mov
nop
movsl
shr
rol
loopne
fwait
call
sbb
sbb
xchg
mov
push
dec
test
fstp
cmp
loopne
lods
dec
inc
aad
ljmp
cmp
imul
mov
data16
cltd
cmp
mov
loopne
lahf
push
xor
mulb
xor
inc
adc
das
dec
sub
scas
add
sub
xchg
push
into
icebp
insl
outsb
icebp
subb
shll
and
jne
mov
jp
filds
inc
cli
lds
fidivs
ret
sahf
int
xchg
loop
cmc
out
mov
shrb
lret
mov
cmpsl
and
add
xchg
shll
shrl
fwait
inc
in
pop
stc
mov
adc
pop
pusha
mov
jae
in
aaa
inc
jbe
and
clc
mov
jg
mov
mov
dec
mov
popf
sbb
daa
xor
jb
rcll
and
notb
add
jge
and
out
fisubs
leave
dec
mov
inc
dec
in
mov
shrl
jb
rclb
jae
xchg
arpl
and
sbb
movsl
lea
and
or
inc
imul
ficompl
gs
or
test
stc
popf
mov
add
sub
cmpl
popf
mov
mov
or
pop
scas
aam
das
push
and
out
lock
stc
push
fdivr
out
xchg
xor
mov
sbbl
adc
pusha
mov
or
jno
outsb
cmp
out
pop
mov
push
cmp
imul
lret
movsb
push
pop
push
or
sbb
iret
lods
inc
sbb
adc
add
lcall
dec
cmc
stos
cltd
mov
movsl
push
in
add
mov
gs
gs
and
and
and
hlt
cmp
in
idiv
pop
addr16
lods
mov
test
leave
xchg
pop
cld
sbb
pop
out
daa
icebp
jge
cmp
pop
je
lcall
std
lcall
xchg
lcall
mov
jns
push
push
sbbb
std
jae
and
fiadds
aas
int3
mov
outsb
fistl
dec
mov
sahf
out
pop
in
fidivl
rol
lds
cmp
adc
adc
adc
rcr
mov
xchg
in
jns
ljmp
sub
and
inc
lock
push
in
stc
inc
pop
cld
cltd
push
mov
push
ret
cmp
adc
cmp
and
adc
push
mov
xor
data16
pop
add
add
dec
add
mov
sti
pushf
mov
sbb
lods
stos
cmpsl
jecxz
pop
xor
xchg
lock
ljmp
sbb
adc
arpl
xchg
popa
mov
jge
mov
int
cli
loop
imul
jmp
jmp
aad
and
int3
push
pop
dec
jp
js
sub
lret
lds
mov
jmp
sbb
xor
jmp
xor
add
mov
push
mov
push
outsl
ds
fwait
xor
test
jbe
loop
pop
loope
and
mov
jb
adc
mov
movsl
push
call
ja
stc
and
mov
out
sub
fsubp
andb
rclb
xor
sbb
les
and
jnp
add
fucompp
pusha
push
insb
das
fisubrs
fstl
inc
push
mov
jp
call
add
mov
ret
adc
repnz
mov
jmp
pushf
mov
xlat
pop
fcom
lods
push
popa
fs
mov
popa
push
jae
mov
lret
scas
mov
popa
mov
xor
dec
shrb
dec
lea
push
shl
pop
add
jbe
scas
push
fidivl
sub
or
stc
test
inc
xchg
in
sbb
lret
in
scas
and
sub
arpl
test
pop
dec
push
and
push
fcoms
hlt
icebp
push
push
push
ret
sahf
psubsb
ds
movsb
loopnew
xor
test
into
push
mov
repz
xchg
adc
in
sub
mov
xchg
out
filds
mov
inc
cmp
fimull
aaa
insl
push
stc
enter
sbb
xchg
jno
fwait
pushf
pop
push
lds
rcl
scas
dec
add
mov
loopne
das
dec
shrl
iret
push
inc
aad
jmp
pop
mov
dec
push
iret
push
jge
into
pop
fbld
or
cmp
clc
inc
xor
sbb
enter
mov
inc
daa
push
pusha
cld
das
jp
mov
adc
mov
jp
jge
ret
fidivl
movsb
aas
mov
cmp
loope
dec
daa
adc
inc
xchg
pop
mov
cmp
shl
into
pop
jp
inc
out
push
ss
fisubrl
mov
popf
pop
movups
pop
pop
xchg
jno
inc
dec
mov
jp
andl
pop
pusha
cwtl
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
xchg
cmpsb
ljmp
jl
aad
popf
jns
cmpl
inc
add
cli
iret
insb
mov
movsb
lahf
loope
xchg
jle
pop
gs
dec
cmc
lds
test
pop
lret
aas
std
test
xchg
xchg
shr
sbb
mov
dec
out
add
repnz
push
ss
pop
repnz
jnp
jnp
sub
or
pop
mov
lea
mov
xor
sbbb
pop
out
icebp
shll
fldl
sub
rorb
adc
fwait
es
daa
adc
insl
xchg
lret
inc
or
dec
frstor
jo
xchg
outsl
dec
ja
or
stos
mov
jae
xchg
cwtl
jecxz
xor
inc
xor
in
out
inc
push
out
mov
cvttps2pi
pop
stos
loope
scas
insl
mov
and
add
ret
fmull
enter
cs
or
push
popa
push
xchg
stc
pop
fnstcw
mov
push
je
cltd
test
mov
pop
lock
jmp
jecxz
jp
mov
sbb
das
push
jnp
cmpsl
popa
fstpt
jnp
sahf
andb
mov
int3
iret
pop
fmuls
sbb
mov
int3
cmp
rolb
mov
sti
movsl
lret
sar
leave
mov
jns
or
sub
dec
imul
push
movsb
call
sub
jno
fisttpl
and
inc
or
push
orb
repz
lret
inc
inc
pop
fimuls
cmp
cmc
fldl
jg
jno
cld
andb
xorl
inc
cltd
shrl
loopne
or
int3
fidivrl
dec
cmp
addr16
loop
pop
adc
imul
mov
dec
xor
inc
pop
jbe
rorl
in
xchg
out
adc
mov
shlb
sbb
mov
push
test
gs
lret
xchg
mov
cltd
jo
stc
in
dec
mov
jg
push
sub
pop
sbb
pop
adc
mov
cwtl
aam
mov
xor
punpckhdq
jno
inc
mov
sbb
xchg
mov
in
lods
pop
jle
inc
dec
push
pop
mov
into
mov
test
push
sub
clc
mov
in
mov
es
mov
in
call
ss
and
cld
sbb
outsb
mov
or
popf
xchg
rolb
adc
inc
test
das
nop
in
mov
jge
adc
xor
pop
pop
or
sbbl
push
loope
mov
js
mov
jo
ret
rorl
add
xor
int3
in
bnd
pushf
decb
adc
xor
pusha
and
sub
in
cmp
mov
out
testb
fcomps
dec
mov
mov
lods
stos
rcrl
pop
dec
add
dec
push
or
mov
or
push
sbb
adc
pop
or
jmp
mov
sub
lfs
pop
lahf
ret
add
push
lea
xor
insl
fldenv
loope
mov
add
clc
or
jae
pop
add
push
adc
mov
pushf
lods
pop
scas
sbb
mov
xchg
ret
ljmp
sub
outsl
push
sbb
lds
pop
add
outsl
cld
insl
imul
aad
or
mov
cmp
sub
push
testb
adc
cmp
pop
aaa
pop
std
push
ror
sbb
sarl
adc
xchg
mov
inc
shr
sub
hlt
cmp
jbe
jp
inc
xchg
je
push
mov
stos
cmp
pop
fs
call
xlat
lods
les
push
pop
jle
movsb
or
mov
cli
pop
fisubrl
int3
fstpt
mov
ret
mov
add
xchg
xlat
sahf
xchg
nop
mov
and
push
and
adc
or
jbe
or
mov
dec
adc
lock
ljmp
and
shl
or
push
jo
mov
jbe
jecxz
mov
inc
jecxz
loopne
mov
sub
ret
dec
sub
int
and
clc
ficoml
inc
sbb
jne
xorl
jo
push
or
jmp
mov
mov
lods
mov
lods
push
nop
inc
jns
sub
imul
and
leave
inc
inc
xorl
push
divl
in
dec
mov
jno
ja
in
mov
inc
and
pop
clc
cmp
dec
imul
arpl
mov
cmp
subb
hlt
shll
dec
sahf
cmc
call
pop
mov
iret
stos
aas
jmp
std
jg
pop
adc
call
inc
dec
jl
lret
fldt
iret
test
je
mov
xchg
pop
xor
mov
stos
push
cwtl
lahf
mov
in
or
pop
adc
mov
lahf
fsubrl
fdivs
ja
or
cmp
push
jb
and
push
out
pusha
in
sti
mov
cs
jno
arpl
imul
dec
xchg
adc
jmp
mov
mov
dec
imull
lea
cltd
push
or
mov
push
pop
enter
insb
dec
in
or
mov
movsb
mov
aaa
pop
in
test
mov
loope
xor
xchg
jnp
push
sbb
imul
mov
lea
mov
mov
leave
outsl
mov
xor
pop
sub
sbb
cmp
jne
jmp
test
push
sbbb
mov
inc
cmc
pop
insl
fmuls
aas
push
xchg
xor
push
es
pop
xchg
clc
fs
mov
mov
pop
sub
mov
dec
push
push
sbbl
mov
in
in
std
and
test
and
push
nop
ds
cmpsl
push
and
adc
jmp
add
jg
mov
dec
int
lahf
lret
in
dec
jl
cmp
repz
inc
sub
and
sub
cmpsl
cmc
cmp
xor
ret
mov
dec
mov
in
lods
and
sub
arpl
fiadds
cmp
fimuls
mov
stos
add
sub
arpl
push
xchg
ret
xor
add
loopne
pushf
fisttpll
sub
cli
sub
xchg
push
popf
push
cmp
divl
add
call
fs
out
iret
imul
mov
daa
xchg
mov
cmp
xor
mov
arpl
inc
scas
dec
dec
jle
jbe
repnz
or
out
mov
or
sub
andb
pop
or
pop
push
loope
test
out
inc
pusha
gs
aaa
lods
xor
adc
or
pop
shll
xor
aas
mov
pop
jmp
mov
clc
lock
sub
dec
jle
push
adc
shlb
jbe
mov
rcll
ja
xorl
add
mov
insl
repz
in
dec
stos
mov
pop
movsl
and
mov
xchg
push
sbb
xchg
mov
fsubp
jb
adc
popf
mov
or
xorl
dec
cs
pop
lcall
leave
adc
imul
xor
jbe
pop
adc
pushf
pop
cmp
inc
or
xchg
lock
mov
pop
mov
inc
shlb
or
xor
inc
outsl
lret
js
lods
mov
call
xorb
mov
adc
out
ja
pop
jns
in
pushf
inc
jno
shrl
daa
mov
push
pop
pop
push
arpl
xor
adc
sub
xor
xchg
fisubs
push
enter
mov
sahf
scas
jge
and
xor
jno
loopne
dec
mul
push
cld
scas
clc
inc
test
push
jae
cmp
mov
sbb
icebp
call
mov
push
out
cltd
cli
ljmp
outsb
orl
in
push
in
repnz
sub
insb
jle
insl
inc
xor
dec
pop
or
and
push
sbb
xlat
inc
push
jnp
call
into
push
ret
or
mov
or
cmp
jl
subb
cmpl
in
cmpl
in
dec
xor
jg
mov
pop
inc
jb
push
leave
pop
hlt
enter
dec
test
imul
jg
dec
fscale
xchg
and
out
insl
shl
dec
adc
push
sub
mov
movsb
adc
mov
int3
stc
add
xor
mov
in
je
je
push
mov
ret
and
gs
push
and
cmpsl
jmp
loop
out
mov
dec
dec
dec
lock
pop
mov
inc
fmuls
ret
pop
jp
push
jno
dec
sbb
jle
push
push
pop
xchg
and
pop
rcrb
jg
out
daa
lea
cmp
mov
sub
stos
jecxz
mov
mov
push
iret
fwait
mov
and
pushf
adc
icebp
fmull
fdivl
movb
pushf
int3
aas
stc
jmp
jecxz
mov
bound
int
cltd
insl
inc
mov
inc
cwtl
and
imul
in
imul
loop
nop
mov
pop
loop
jne
data16
mov
ds
pop
lahf
xor
adc
add
push
mov
jb
vdivpd
outsb
sub
cmpsl
jne
lret
dec
mov
xchg
rol
sub
pinsrw
xchg
pop
aaa
sbb
aaa
out
fstps
jle
aad
sbb
stc
sub
mov
js
sub
sub
test
loope
mov
sarb
lret
dec
push
xor
sbb
lds
out
sbb
arpl
sbb
sbb
aas
inc
pop
pop
cmp
lods
sub
push
mov
jns
inc
rolb
outsl
inc
cmp
pusha
sub
push
enter
inc
arpl
sbb
movsl
pop
inc
pusha
into
pop
or
cmp
adc
push
jl
lea
push
dec
adc
jle
sarl
dec
mov
jnp
xchg
push
xor
mov
cwtl
mov
lcall
sbb
sti
pop
or
negl
jns
inc
inc
dec
inc
cltd
cmp
adc
daa
sbb
mov
xchg
mov
inc
js
and
xchg
les
fmull
rolb
in
cmp
xor
xor
sbb
mov
or
jge
inc
pop
shlb
sbb
call
mov
repz
sbb
repz
mov
je
add
push
xchg
mov
mov
lcall
or
imul
outsb
es
incb
mov
mov
and
shll
sbb
xor
out
pop
and
mov
inc
lods
loopne
sbb
test
sahf
and
jne
ret
pop
push
dec
dec
lret
je
cmp
arpl
shrb
jb
jle
add
and
xchg
aam
inc
sub
jecxz
jo
fisttpll
fnstcw
adc
push
xchg
jmp
jg
das
orl
lds
and
mov
mov
mov
movsb
push
into
sub
orl
mov
mov
mov
push
nop
lods
xor
daa
ret
xor
jns
mov
sub
add
xchg
and
aas
push
and
scas
mov
mov
sbb
mov
cmp
adc
sbb
mov
int3
xor
xchg
xchg
test
loopne
push
pop
cmpsb
sarl
imul
xor
ds
daa
out
ret
aam
push
icebp
sbbl
ljmp
mov
fnstsw
rcrb
insl
clc
push
dec
icebp
inc
test
in
push
test
incl
mov
jecxz
enter
xor
mov
jns
or
and
xchg
pop
mov
dec
scas
cmp
popa
frstor
push
test
xlat
inc
and
cmpb
aam
addr16
enter
movsl
mov
adc
xchg
xchg
outsb
mov
in
out
pop
test
dec
adc
dec
mov
push
cmp
sub
fimull
dec
sbb
cmp
fnsave
pop
fwait
imulb
call
lret
push
fdivl
js
cmc
outsl
aaa
jo
loopne
and
sbb
mov
clc
or
push
jle
mov
out
mov
subb
popf
push
xchg
fstl
test
lret
call
cmp
jae
lods
fs
in
cld
mov
xor
movsl
lcall
out
repz
sar
pop
fstpt
push
sub
pop
cmp
jge
pusha
mov
in
xchg
das
insl
call
push
inc
mov
inc
push
jecxz
xchg
xor
mov
shrb
rolb
add
push
shlb
or
mov
mov
pushf
pop
ficompl
xchg
pop
popf
lret
in
pop
xchg
xorb
stos
iret
imul
out
imul
mov
out
es
mov
in
cmp
subl
xchg
xchg
push
scas
mov
lds
imul
xchg
xchg
mov
xor
jmp
icebp
xor
mul
jp
mov
fs
mov
aas
add
push
sbb
push
inc
adc
mov
add
je
mov
fadd
pop
and
test
adc
push
sti
mov
pop
test
cmc
jmp
lods
icebp
out
mov
adc
pop
mov
add
mov
outsb
out
adc
or
cmpsb
imul
cmpsb
test
cmp
push
or
xchg
imul
and
cltd
or
pusha
and
xchg
outsl
sarl
jge
adc
jge
pop
sub
xchg
call
mov
jae
mov
icebp
sbb
ficompl
pop
out
dec
pushf
inc
ret
xor
leave
std
cld
stos
or
dec
adc
scas
in
push
stos
aaa
mov
or
inc
lock
std
mov
and
and
sarb
int
aam
inc
push
and
repnz
xchg
push
mov
inc
ja
les
jge
push
xor
rclb
adc
cmp
in
lds
ljmp
imul
sahf
sbbl
in
insb
dec
pmaxub
pop
adc
adc
sub
xchg
stos
push
cld
std
cmc
ret
je
fdivs
dec
fisttpl
roll
inc
pop
xor
icebp
push
mov
pusha
lea
cli
sub
jb
ret
ljmp
push
test
test
sbb
or
xor
mov
iret
sub
inc
arpl
mov
shlb
adc
dec
daa
xor
stc
cmc
and
sti
mov
insb
das
scas
in
adc
shlb
mov
mov
test
mov
fimuls
mov
sarl
mov
inc
mov
pushf
out
pushf
imul
pop
iret
mov
mov
or
int
sub
xor
mov
jnp
add
lret
test
xor
nopl
or
xchg
jmp
and
in
loop
push
xchg
jns
cli
lcall
leave
and
jne
daa
test
push
push
xchg
in
int
push
pop
dec
flds
mov
sbb
add
inc
mov
adc
cs
inc
dec
inc
push
xor
and
inc
xchg
sub
mov
mov
gs
mov
cli
gs
fs
je
rcrl
mov
and
xchg
cmp
xchg
test
pop
inc
js
or
push
sub
insl
ret
mov
dec
jo
push
test
inc
mov
jmp
mov
mov
cli
xor
data16
mov
push
mov
mov
gs
fwait
dec
mov
ja
jno
pop
mov
shl
stos
sbb
ficomps
xor
aad
inc
arpl
or
inc
xchg
out
jne
in
pop
aaa
pop
lods
jmp
popa
mov
cmp
mul
inc
mov
cmp
cmpsl
pop
inc
repnz
push
inc
out
fs
pop
and
adc
mov
push
into
adc
aas
aad
or
add
add
sbb
pop
push
mov
pop
jp
hlt
jl
cmp
pusha
std
aad
adc
xor
lcall
push
inc
dec
cwtl
sbb
hlt
jae
pusha
mov
pop
push
xchg
or
xor
test
mov
test
or
push
aaa
cwtl
sbb
pop
inc
imul
mov
cltd
adc
mov
outsb
adc
xor
sti
ret
mov
rorl
add
cmp
ljmp
mov
cmpl
xchg
ret
mov
mov
mov
nop
sahf
adc
lret
cmp
mov
mov
cli
jmp
push
xchg
mov
xchg
lret
sbb
inc
cld
mov
icebp
sti
xor
jb
mov
insl
inc
add
pop
stos
stos
mov
xor
sbb
and
sbb
leave
cmp
pop
mov
mov
xor
inc
sub
dec
push
add
pop
cmp
out
mov
cmpsl
aad
js
cmp
mov
fwait
loopne
out
xor
ret
outsl
fildll
mov
sub
fwait
jns
mov
pop
push
js
mov
outsb
push
shll
daa
das
mov
pop
lahf
out
xor
call
das
mov
js
mov
sub
push
je
ss
mov
push
xchg
inc
adc
jno
jno
cli
cltd
and
sti
jp
out
femms
push
out
and
stos
pop
loop
aad
mov
incb
fsubrs
mov
icebp
push
jmp
sbb
mov
imul
pop
sbb
inc
fs
cmp
mov
mov
cmc
add
push
pop
mov
call
adc
mov
std
cmp
movsl
js
push
cli
jl
inc
shrb
mov
xor
fildl
stos
out
xor
leave
lcall
test
cmc
fcoms
mov
dec
icebp
and
and
dec
or
mov
adc
je
push
mov
fucom
fwait
push
shl
aaa
and
adc
into
lock
fxch
mov
xor
or
sbb
jne
out
mov
sub
pop
or
out
ja
fimuls
inc
movsl
cmp
jmp
add
scas
xchg
xchg
cld
or
xchg
mov
jmp
data16
out
push
xchg
xlat
fmul
xchg
push
sbb
cmp
jo
shrl
cltd
jbe
xchg
xor
mov
push
xchg
inc
add
test
addr16
divb
inc
fldcw
jo
xor
xorb
into
and
or
std
pop
ljmp
inc
lods
popa
pop
es
imul
push
dec
movb
push
adc
cmp
mov
out
fistpl
es
addr16
in
dec
and
test
mov
mov
xorl
add
in
push
xchg
lods
test
xchg
sbb
aaa
js
dec
lock
aad
inc
dec
sub
in
pusha
inc
push
inc
ficompl
out
test
int3
lret
aas
sbb
adc
jne
daa
xchg
fdivrp
cmp
stos
dec
imul
xchg
rol
push
adc
ja
sarl
pmaxsw
dec
pushf
push
inc
lds
pop
movsb
pop
adc
push
inc
jp
cmp
or
sub
fisubl
sub
mov
adc
and
sbb
icebp
les
or
jb
dec
jmp
cmp
movsl
xchg
mov
sbb
test
xor
addb
mov
pop
scas
inc
push
mov
sub
cmpb
popa
testb
pop
popf
xchg
nop
aaa
movsb
mov
int3
push
rdtsc
push
sbb
lahf
cmp
or
pop
fildl
dec
dec
cmp
fmull
dec
dec
rcll
popf
mov
movsl
out
mov
sarl
xchg
push
and
dec
sub
test
xorl
and
or
test
xchg
aas
jecxz
mov
in
lods
mov
xchg
or
lcall
jecxz
lods
test
divl
out
xor
xchg
push
imul
add
popf
push
mov
mov
rclb
sub
insl
pop
shlb
lret
repnz
sbb
and
in
out
or
shlb
mov
or
sub
mov
cmp
lret
testl
sub
shll
jae
jl
xor
push
and
daa
test
stos
out
cmpsl
insb
adc
ret
orb
fiaddl
pop
adc
sbb
int
movsl
add
mov
cmp
and
jne
fidivs
cli
sub
or
and
movb
xchg
dec
jae
jbe
int
pushf
and
aad
and
cmc
mov
mov
enter
jne
movsb
xor
adcb
mov
mov
push
mov
fwait
push
std
cwtl
cmpsb
or
fnstsw
in
mov
cmp
mov
sbb
or
fcoml
push
std
add
xlat
jle
cmp
mov
jle
xchg
sar
jbe
mov
shrb
fwait
or
push
jmp
arpl
fmuls
add
cmpsb
mov
rolb
lret
ljmp
clc
iret
mov
pop
ds
pop
scas
les
mov
jnp
and
inc
xorb
lods
adc
sti
mov
sbb
clc
mov
adc
pop
jno
push
std
loope
and
stos
mov
mov
mov
data16
add
fstl
outsl
xchg
or
sbb
sub
je
inc
pop
add
imul
xchg
sbb
insb
mov
je
je
jge
aas
out
std
cmp
ljmp
sub
cmpsb
mov
lahf
mov
stos
into
aaa
movsb
out
outsb
insl
shl
cltd
inc
test
push
push
or
xor
push
lock
in
mov
shll
clc
jge
pop
leave
add
outsb
aad
popa
push
push
mov
inc
das
loope
or
ljmp
cs
xchg
mov
femms
movb
jnp
mov
inc
mov
es
cmp
stc
jg
lds
or
insl
xor
das
or
mov
scas
test
inc
testb
adcl
pop
js
and
leave
push
outsb
loopne
nop
sbb
sahf
aas
fisubrs
mov
lret
jg
jae
insl
sbb
lock
jnp
test
lods
lret
pushf
shll
mov
push
sti
sahf
enter
or
aad
xchg
pop
add
push
cmp
cmpsb
loop
and
push
push
jo
inc
push
div
or
add
aad
push
mov
cli
add
mov
adc
xor
mov
xchg
xor
orl
fs
mov
xor
xchg
aas
sahf
addr16
iret
mov
sub
push
sarl
inc
push
mov
and
jo
scas
mul
pop
pusha
jbe
mov
lsl
xchg
add
and
aaa
repnz
mov
mov
aas
dec
lea
int
or
cmp
mov
ja
adc
mov
adc
jnp
dec
sbb
lahf
call
int3
ljmp
xchg
pusha
iret
sub
mov
push
rcrl
lahf
sbb
pop
ret
xor
cmp
jle
sbb
and
sbb
outsl
iret
call
cmpsl
add
jmp
lret
adc
push
jne
add
or
ror
cmp
mov
arpl
lret
jg
add
or
ss
lcall
inc
leave
mov
nop
rorb
sub
enter
test
jo
pop
int3
cmp
push
inc
pop
jmp
inc
dec
dec
and
icebp
jecxz
jae
jne
add
das
outsl
sbb
arpl
or
cmp
test
cli
ficoml
mov
dec
jl
push
dec
xor
nop
out
jbe
hlt
xchg
int
inc
sbb
adc
sbbl
insl
mov
ss
cs
add
jo
dec
xor
dec
mov
in
loop
jno
mov
in
mov
es
push
ss
adc
lahf
arpl
fucomip
jno
mov
aad
adc
and
rcll
sbb
ret
mov
test
push
pop
or
push
and
aaa
xor
data16
lea
push
nop
jno
mov
shll
and
lds
gs
call
pop
mov
bound
xchg
and
jle
imul
cmpl
cmp
jecxz
dec
ds
pop
fimuls
not
mov
and
frstor
aaa
mov
addr16
xor
cld
ljmp
sub
inc
xor
fucomi
rcrb
or
push
outsl
dec
ficomps
push
popa
or
cli
mov
jge
std
or
mov
sbb
fdivs
add
loop
cmp
xor
mov
xchg
mov
inc
mov
outsl
ja
jmp
ret
sbb
loop
int
mov
mov
ljmp
inc
pop
jg
fistps
faddp
push
sti
and
sub
imul
in
loopne
in
inc
push
inc
or
adc
mov
int3
fwait
in
addr16
add
movsl
and
ret
jae
push
popf
int
popf
les
and
out
call
push
push
mov
dec
cmp
iret
adc
cwtl
mov
push
mov
das
in
data16
stos
out
inc
mov
loop
addr16
xor
xor
inc
cwtl
mov
xor
xor
lret
sub
sbb
mov
lds
jmp
or
fstpl
mov
flds
out
and
repnz
das
add
add
imul
rolb
dec
xchg
inc
aaa
insb
cmpsb
lcall
adc
xor
dec
lret
xor
or
lret
jae
popf
adc
movb
enter
fldl
call
lock
xor
pop
jne
and
leave
inc
int3
xchg
shl
popa
fildl
xor
lods
push
rcrb
cs
inc
sbb
test
daa
fsubl
lods
aaa
mov
int3
insb
xchg
cli
scas
aaa
sub
adc
das
and
dec
arpl
lcall
jmp
push
adc
gs
sbb
out
or
dec
adc
push
push
and
push
das
push
cltd
int3
rcrl
scas
add
test
mov
dec
or
imul
inc
aam
in
add
dec
push
mov
cmp
ja
pop
mov
das
out
ljmp
dec
and
mov
lahf
les
push
idivl
xor
jno
pop
icebp
mov
push
aad
add
sub
push
test
clc
inc
sub
out
scas
sub
fisttpll
mull
addb
mov
jl
shrb
insl
add
pop
dec
lock
inc
or
sbb
and
add
push
sti
add
cld
ror
jae
xor
mov
and
gs
pop
pop
shll
pushf
push
imul
popl
fiadds
xchg
outsl
push
sahf
jbe
lea
popa
xchg
clc
inc
or
push
and
xor
cmp
mov
mov
xchg
mov
pop
and
and
shrb
out
lds
addb
push
and
jbe
jl
jbe
xor
sar
imul
popa
in
xchg
fcompl
jecxz
pop
sub
add
sahf
and
sarl
repz
daa
outsb
rcr
mov
pop
test
and
insb
fs
pop
iret
mov
data16
xchg
popa
adc
in
mov
repz
movups
pop
pop
pop
scas
xor
mov
scas
jbe
or
dec
pop
xor
pushf
push
inc
filds
mov
test
jbe
sbb
mov
mov
popf
add
adc
xchg
pop
lcall
adcl
mov
out
push
in
js
cs
and
xchg
out
icebp
inc
out
adc
clc
cltd
xor
jmp
jb
movsb
outsb
out
and
mov
fldln2
in
lahf
pop
xchg
and
pop
sarb
sub
add
pop
movsb
cmp
mov
subl
call
ss
sub
push
test
xchg
jne
shl
loope
jno
movsb
repz
pushf
test
xchg
push
mov
lret
and
cmp
jecxz
adc
mov
xor
jns
andl
in
xor
sub
lret
cmpb
xor
cmc
push
adc
ficompl
loopne
push
test
nop
inc
adc
cmpsl
pop
andb
dec
mov
sti
mov
mov
mov
push
cltd
or
mov
test
xchg
shrl
dec
cmp
dec
jl
or
sahf
mov
ret
out
cmpsl
xchg
push
pop
push
clc
es
jmp
mov
cmp
mov
or
data16
nop
mov
and
das
mov
jne
lcall
aam
insb
shll
loop
sub
inc
das
les
sub
sbb
mov
jmp
push
les
cld
push
xlat
aad
mov
pop
jmp
cmp
sbb
scas
push
dec
push
mov
lret
or
push
repz
push
lret
push
dec
mov
scas
fistps
mov
mov
push
jmp
inc
pop
aas
adc
adc
aam
pop
adc
out
call
cmp
or
mov
add
or
pop
and
movsl
or
and
lret
aas
mov
std
and
or
dec
loope
fldt
lret
mov
push
adc
daa
test
cvtpi2ps
cmpl
or
call
mov
gs
enter
adc
pop
xor
sub
and
lea
push
ficomps
cmp
jnp
and
inc
cld
push
outsb
lcall
ret
pop
cmpsl
fstp
aam
mov
inc
in
cmc
jecxz
pop
mov
mov
sub
int3
ja
push
int3
xchg
inc
sub
aam
fs
imul
mov
or
xorl
inc
cmpsl
mov
cmp
mov
cmpsl
push
ja
add
jl
sbb
push
dec
adc
adc
sarb
fs
cmp
in
cwtl
in
adcb
into
shrb
je
xchg
les
and
or
pop
out
sbb
jb
lds
lahf
cmpsb
push
jle
xor
int
je
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
sahf
mov
jl
pop
pop
jl
das
es
mulb
sahf
arpl
cltd
mull
shlb
fmul
jnp
test
aad
push
in
out
adc
dec
or
loop
mov
inc
xchg
pushf
push
mov
lret
sbbb
mov
sbb
pop
jns
mov
pop
sub
sbb
scas
pop
mov
loop
mov
sub
scas
mov
inc
cmp
cltd
xchg
lret
sub
sbb
lods
test
repnz
mov
data16
int3
in
or
sbb
data16
pop
add
cmp
lcall
jbe
insl
mov
mov
dec
mov
or
push
out
sbb
inc
push
pop
pop
cli
das
loop
gs
jbe,pt
push
int
push
lods
mov
mov
push
fbld
test
fnop
jecxz
xchg
insb
add
xor
jae
xor
pop
int3
enter
stos
call
iret
andb
ja
pushf
and
mov
shll
lock
repz
cmp
mov
les
pop
ljmp
dec
mov
sub
jg
lds
mov
ret
pusha
popf
cmp
testb
push
xor
sub
jns
xchg
adc
std
or
mov
out
scas
fstl
pop
and
fcomps
aam
nop
mov
and
in
mov
jo
inc
fdivrs
xchg
stc
adc
xchg
and
ja
sbb
mov
add
fstpt
jle
stos
xor
mov
scas
mov
jo
mov
cltd
mov
mov
adc
pop
cmp
pop
mov
int
sbb
mov
push
dec
bound
lret
dec
push
or
daa
loop
jo
mov
icebp
fists
je
pop
cmp
scas
pop
ss
lock
and
xor
jnp
xchg
rcrl
xorl
jns
test
loop
mov
push
test
bound
push
loop
shll
sbb
or
xlat
xchg
pusha
lea
test
adc
cs
sub
lods
lcall
cmpsb
add
lods
cmpsl
ja
outsb
adc
fsubs
sub
pop
dec
jno
fildl
in
cwtl
das
fnstcw
mov
mov
xchg
jmp
pop
mov
inc
cmp
ljmp
movl
sbb
and
sub
les
xchg
movsl
ret
pop
outsl
xor
or
fildll
ds
dec
mov
push
shl
ret
in
orl
lcall
ja
jnp
sti
mov
js
mov
xor
cltd
sarb
adc
call
lret
sub
or
add
and
mov
mov
psubb
mov
push
enter
bound
ljmp
rcll
or
pop
pusha
jecxz
aad
arpl
mov
mov
jg
stc
int
jno
ds
mov
mov
jbe
test
sahf
jno
or
xchg
scas
test
fwait
inc
outsb
ficoms
aam
icebp
sub
icebp
mov
mov
loope
jae
add
mov
sbb
aam
mov
cmp
pop
push
pop
shrl
imul
std
insl
jle
cwtl
cmp
or
mov
inc
jl
pop
push
mov
decl
jge
add
rol
dec
pop
mov
pop
xlat
aas
mov
into
test
mov
outsl
daa
mov
out
out
aad
daa
jns
push
filds
fnstenv
pop
mov
loop
cmp
addl
add
insb
stc
xor
inc
fcmovu
adc
xorl
jbe
imul
inc
push
aaa
into
xor
dec
jb
push
and
daa
mov
xchg
in
arpl
xor
or
add
out
dec
xor
popf
dec
das
jo
jge
pop
mov
adc
or
subl
test
scas
ljmp
cmp
rorl
repnz
mov
neg
icebp
int
loope
or
push
cmp
leave
mov
aam
xchg
pop
adc
mov
in
inc
iret
xchg
popa
push
das
dec
sub
lahf
scas
aas
std
inc
lea
dec
in
jle
shlb
call
js
daa
mov
stos
scas
sub
adc
mov
into
stos
shll
adc
inc
hlt
cmp
push
mov
in
adc
in
in
mov
jg
enter
mov
ret
xor
sub
adc
nop
xchg
and
jge
lock
pop
test
les
cmp
pop
push
pop
rol
ljmp
ss
or
in
sub
mov
das
gs
fsubl
cmp
jge
into
jb
inc
xor
andb
out
insl
jae
daa
lcall
dec
cwtl
lock
rcrb
fwait
pop
in
jns
out
mov
sbb
insl
mov
pusha
pop
mov
jecxz
cmp
push
lahf
outsl
mov
mov
sbb
jmp
adc
clc
add
pop
or
pushf
loope
pop
dec
jne
pop
loop
enter
cmp
data16
sbb
test
pop
xchg
mov
cmpsl
jb
dec
ss
or
sbb
push
lock
imul
push
dec
pop
push
cmpsb
fld
pop
das
es
add
add
adc
repnz
lahf
xchg
pop
adcl
push
mov
and
loope
cmc
inc
or
adc
adc
xchg
sub
lea
inc
mov
js
xchg
cmpsb
push
xor
mov
push
ret
and
fldenv
ja
cld
xor
push
push
sarl
push
lret
xchg
shrb
int
mov
adc
cmp
xchg
dec
push
shl
push
inc
cs
daa
or
push
fldcw
jo
cld
adc
cmpl
cld
adc
clc
jnp
xchg
dec
mov
rcll
repz
jecxz
or
sub
pop
scas
pop
lret
popa
pop
fstpl
sub
xchg
imul
adc
mov
xchg
adc
push
xor
test
test
repnz
add
cmp
lret
cmp
adc
jl
jne
jbe
jmp
mov
out
jns
mov
xor
mov
adc
dec
sbbb
xchg
aaa
mov
mov
mov
xchg
cmpsl
imul
fs
adc
aam
lods
sub
adc
xorl
das
ret
xchg
sub
mov
or
rcl
lds
mov
xlat
mov
push
jae
xchg
push
push
sar
incl
in
fidivl
inc
fcmovnb
cmp
and
sti
test
push
pop
out
jle
xor
add
ret
inc
pusha
insb
xchg
out
aas
or
out
mov
mov
adc
addr16
testb
cmpsb
in
mov
pusha
adc
mov
adc
mov
movsb
orb
repnz
out
rorb
xor
negl
pop
pop
mov
cmp
xchg
inc
cmpsb
or
add
push
int3
mov
pop
cltd
aam
je
test
or
test
aas
test
push
mov
cmp
adc
pop
js
push
sbb
xchg
stc
into
js
mov
daa
shlb
stos
pop
je
movsb
fcompl
movsl
xchg
insb
sub
dec
xchg
repnz
orl
inc
mov
and
sub
int
scas
je
paddd
inc
faddl
nop
xchg
std
mov
xlat
inc
add
adc
add
subl
jns
add
ljmp
mov
xchg
stc
outsb
pop
push
out
xchg
out
lds
addb
add
outsb
xor
mov
cmp
iret
sub
cld
mov
push
dec
loope
imul
aam
push
enter
fisubl
scas
int
enter
sbb
bound
add
inc
or
sti
inc
test
jp
push
subl
cmpsb
mov
xchg
or
imul
xchg
pushf
imul
std
lahf
xchg
inc
enter
outsl
xchg
lock
mov
fdivrl
rcl
xor
movsb
sbb
cmp
mov
out
sti
shrl
dec
and
test
mov
or
and
mov
lods
es
je
sbbl
adc
icebp
sub
push
test
pop
pop
pop
stos
rcll
push
movsl
jle
in
fwait
or
movsl
jle
movb
loope
jbe
das
mov
jg
test
das
ljmp
dec
int3
jae
pop
fwait
push
lahf
mov
jb
mov
not
outsl
outsb
std
stc
jnp
xchg
cwtl
sbb
adc
mov
and
out
or
dec
cmp
push
or
mov
dec
sbb
mov
data16
sbb
insb
rclb
and
jl
stos
sub
cmp
das
xchg
mov
stos
mov
inc
inc
shlb
push
iret
loop
sbb
push
je
sub
fistl
push
adc
test
mov
xor
aam
and
jp
icebp
iret
lock
in
cmpsl
std
dec
ud1
outsl
andb
rolb
sub
gs
add
scas
push
dec
pop
lea
sub
mov
notb
mov
loope
fs
xor
cmp
addb
push
ja
andb
daa
mov
inc
jne
rorl
push
leave
pop
sbb
cld
mov
cmp
jne
loope
mov
ret
push
mov
aaa
mov
je
push
movsl
mov
push
mov
and
or
or
lret
xchg
dec
out
andl
leave
insb
jge
mov
add
cs
scas
lahf
push
cmp
adc
mov
lods
sub
sti
cmp
adc
and
jns
push
jnp
cltd
xorl
mov
sbb
daa
add
adcb
xchg
testb
cmpsl
xchg
jbe
xorb
cmp
cmp
fnstsw
cmp
inc
push
lea
add
push
aaa
loop
sti
movsl
frstor
movsl
mov
rcll
repz
scas
xchg
push
or
dec
or
sub
mov
rol
test
xchg
insb
sbb
jecxz
xchg
and
adc
pusha
xor
mov
cltd
lods
insl
sbbb
fistpll
pop
and
cmp
repnz
push
inc
and
mov
int3
or
xchg
stos
jne
pop
pop
lcall
fidivl
xor
insb
rclb
xchg
xchg
pop
mov
add
and
xor
mov
shr
ret
push
push
daa
rcl
out
push
push
add
mov
enter
aad
arpl
std
mov
fs
jp
sub
stos
cmp
xchg
add
push
jmp
int3
and
xchg
es
lret
mov
xchg
cmp
sbb
jl
xor
push
rcrb
and
popa
jge
daa
divb
mov
pop
pop
pusha
cmp
scas
icebp
movsl
mov
dec
shlb
adc
je
sub
imul
jge
xor
push
mov
in
ret
fwait
pusha
insl
push
das
mov
sub
clc
lds
push
push
pusha
arpl
push
mov
push
xor
mov
fmuls
xchg
cwtl
lret
lods
test
negl
shrl
mov
mov
imul
push
ja
mov
stc
ret
popf
fimuls
xchg
xchg
pusha
fisttps
daa
and
sub
sub
mov
outsl
xor
or
rol
lods
sub
cmp
fistps
dec
ja
shl
ja
and
shrb
outsl
stos
xchg
inc
sub
pop
mov
cltd
xor
scas
mov
xor
andl
rol
xchg
fimuls
mov
jge
das
sbb
shlb
jl
xchg
in
xor
orl
jmp
inc
inc
scas
lea
cmp
arpl
repnz
xor
xchg
daa
nop
sbb
cmp
cmpb
scas
jbe,pn
repz
sub
dec
xchg
into
jbe
out
mov
xor
mov
arpl
inc
stos
push
shl
movsl
dec
mov
fwait
dec
jnp
leave
ds
or
stos
adc
sub
mov
cmpb
pop
sbb
xchg
cmp
push
cwtl
sub
push
addb
or
ja
adc
push
movsb
jne
sbb
test
inc
enter
mov
ficoms
xchg
lret
ret
jle
xchg
enter
scas
imul
xchg
mov
lock
sahf
mov
aam
testb
mov
mov
std
cmp
xor
dec
outsl
mov
add
jnp
adc
cld
sbb
sub
adc
pop
out
push
jns
mov
or
in
pop
jnp
pop
repnz
xorb
inc
mov
or
icebp
inc
clc
push
inc
pop
dec
xchg
xor
add
ljmp
icebp
mov
xchg
rorb
cmpsb
jnp
cmpsl
movsb
scas
mov
out
imul
mov
repz
pop
pop
jne
testl
push
shrb
int3
xor
jb
or
sub
mov
enter
test
out
add
fidivrs
lods
repz
test
mov
sbbl
incl
test
mov
repz
adc
imul
cli
negb
adc
fdivs
ja
sarb
push
jle
mov
push
les
fistl
arpl
cmp
pushl
imul
dec
jecxz
dec
shl
push
je
sub
adc
cwtl
cmp
and
mov
aad
push
push
mov
mov
mov
xchg
out
rorl
add
xorl
push
roll
mov
setl
sub
sub
gs
jo
pop
sub
jp
rcrl
push
testb
add
les
aad
sbb
or
jnp
icebp
jmp
imul
addr16
jle
arpl
lods
xchg
mov
dec
into
les
rcll
sti
add
aas
dec
es
js
aam
roll
mov
test
sub
popa
add
jmp
adc
addr16
movsl
in
jg
test
push
and
test
cmp
push
jmp
rclb
and
lds
lds
inc
add
jmp
sti
cmpsb
mov
rol
or
fcomip
adc
aas
mov
adc
jno
outsl
icebp
sarl
jecxz
lods
fsubs
push
out
mov
inc
dec
cli
xchg
sub
arpl
sub
bnd
jmp
jg
jle
cmp
cmc
mov
imul
adc
fiaddl
sub
and
add
mov
mov
mov
sbbb
xchg
sub
arpl
push
jmp
dec
jle
xchg
mov
push
and
xchg
inc
sub
std
jmp
jne
sub
and
nop
xlat
mov
inc
test
sbb
jne
push
fldenv
jb
loop
lcall
outsl
inc
movb
push
in
xlat
int3
xor
nop
dec
ret
mov
pop
pop
inc
leave
push
lea
fisubrl
jmp
loop
or
add
cltd
sbb
out
sub
or
and
xlat
push
pop
push
pop
jp
or
fidivrs
insb
add
xchg
push
mov
xor
aad
sub
lods
inc
dec
dec
xlat
sahf
or
fimull
iret
pop
inc
pop
push
push
add
sub
xchg
cmp
jle
adc
stos
mov
xchg
push
and
insb
fwait
mov
fwait
jns
cmp
sahf
testl
aas
or
sub
adc
inc
or
cltd
decl
adc
inc
mov
ljmp
dec
lcall
in
inc
std
cmpxchg
cmp
cli
outsb
lret
pop
dec
sar
adc
adc
or
push
loop
or
adc
fbld
mov
insl
pop
ja
loope
fdivrl
jne
mov
loopne
mov
sub
sub
scas
push
pushf
and
in
xchg
push
sub
shrb
imulb
mov
push
push
lret
adc
outsl
int
rcr
rdmsr
jecxz
adc
pop
cltd
popl
cmp
jo
mov
sbb
ljmp
lock
cmp
xchg
or
mov
mov
add
sbb
pushl
mov
sub
dec
js
or
or
stos
int3
aas
cs
insb
shlb
leave
or
lods
inc
fnstcw
call
stc
inc
cld
sbb
sete
aam
dec
jno
xor
and
stos
and
cli
test
pushf
push
ljmp
mov
or
mov
add
adc
pop
loop
xor
pop
cmp
adc
inc
push
mov
pop
jnp
push
push
sbb
jb
adc
jae
jg
fs
add
inc
mov
jbe
xchg
add
sahf
mov
push
fsubrs
push
dec
imul
xchg
mov
imul
gs
push
andb
add
iret
mov
rclb
fdivl
lahf
jae
fs
arpl
insb
mov
pop
add
cmp
cltd
out
mov
loope
xchg
lea
data16
imul
andl
vlddqu
inc
mov
idiv
xor
movsb
data16
fbld
mov
ret
lcall
or
pop
mov
push
and
mov
mov
call
push
or
test
inc
pop
add
cmp
xor
hlt
sbb
push
xchg
test
mov
dec
jle
pop
xchg
insl
nop
mov
dec
arpl
out
pushf
push
or
scas
out
in
inc
mov
sarb
stc
add
pop
fnstsw
fwait
or
fadds
in
sbb
insb
mov
loopne
dec
call
jnp
into
ds
xchg
lds
mov
addr16
xchg
addl
aaa
mov
mov
or
sub
adc
aad
mov
nop
pop
mov
gs
push
loop
movq
jne
mov
inc
shlb
sbb
lds
xchg
leave
shlb
cmc
adcb
push
mov
int3
xchg
mov
sbb
outsb
stos
movsb
mov
dec
imul
pop
daa
mov
fildll
aas
sbb
ja
jmp
aaa
cmpsl
lea
sbb
dec
mov
out
pop
xchg
iret
inc
push
out
xlat
les
in
orl
adc
adc
test
cwtl
nop
cmp
sbb
xor
mov
adc
push
cmpl
mov
pop
cmpsl
push
jp
mov
push
test
mov
imul
bound
push
adc
aaa
or
dec
in
sarb
cwtl
mov
out
test
outsl
mov
push
cmpsl
in
leave
insb
pop
enter
jb
sahf
push
bound
pop
imul
add
xor
movsb
dec
push
sub
push
ret
mov
mov
js
xchg
jl
outsb
fbstp
or
cld
xorl
gs
push
inc
xchg
cs
cmp
lock
mov
mull
mov
repnz
sub
int3
or
sarl
xor
scas
dec
ja
xlat
inc
mov
inc
or
ret
jnp
jb
adc
call
test
sbb
push
mov
add
or
sbb
btc
jns
leave
xor
scas
mov
fcom
xchg
sub
xchg
mov
inc
xchg
inc
cmc
movsl
jge
insl
jae
out
out
cltd
and
mov
pushl
rclb
fs
cmp
dec
xor
lcall
pop
adc
ds
lfs
fsubs
outsb
sbb
fdivr
pop
jge
mov
or
inc
jbe
push
pop
mov
ja
sbb
test
mov
pop
push
stos
jecxz
xchg
dec
ja
movsb
bnd
dec
add
adc
fs
dec
xor
mov
dec
xor
pop
pop
out
push
xor
stos
loop
cld
cmp
pop
enter
andl
and
add
fadds
push
adc
stos
xor
into
xor
ret
pop
incb
ss
lea
sub
xchg
push
cmpsl
sar
imul
clc
enter
shrl
cwtl
les
jp
pop
scas
fdivs
jns
fstp
push
mov
jp
add
jae
or
add
int
xchg
mov
gs
jp
pushl
pusha
push
dec
pusha
sub
mov
or
je
pop
ret
fwait
adc
adc
mov
fs
ds
insb
cmp
ret
or
cmp
push
jb
or
sbb
adc
xor
addr16
int3
mov
jae
pushf
arpl
movsl
inc
jb
fisubrs
mov
xchg
mov
dec
test
loop
mov
bound
rolb
pop
pop
mov
push
cmc
cli
mov
cltd
dec
in
sub
and
pop
aas
mov
mov
jne
adc
in
add
cmp
mov
mov
shrb
dec
xchg
sbb
adc
mov
mov
stc
pusha
sbb
cli
negb
or
add
das
jae
dec
mov
imul
xor
push
aaa
sbbb
leave
insb
cmpsb
sub
dec
test
xchg
push
push
je
mov
or
mov
cmp
cmp
test
insl
inc
cmp
es
sub
incl
pop
insb
enter
mov
test
aaa
mov
jp
lret
adc
das
je
dec
add
sahf
dec
mov
mov
in
mov
aam
ficomps
xchg
xchg
sub
pop
add
and
add
fisubl
sub
or
pusha
pop
sub
pop
push
rclb
mov
in
dec
lds
scas
mov
loop
arpl
mov
mov
movsl
stos
lahf
loop
lea
mov
lea
push
je
lret
jo
sub
pushf
gs
jb
inc
out
adc
or
in
sbb
cmp
pop
rclb
repnz
sbb
lds
mov
dec
pushf
mov
and
pusha
ss
bound
in
xor
sub
rcll
dec
pop
pop
push
pop
mov
jge
cld
cltd
ss
pushaw
insb
daa
popa
mov
xor
mov
sub
push
push
xlat
mov
mov
push
pop
leave
fwait
sbb
je
jle
rcrl
pop
or
out
jg
out
or
pop
mov
cli
shl
inc
and
sbb
cmp
insb
ds
mov
sub
adc
or
cltd
daa
lahf
push
ljmp
aaa
and
out
loopne
fimull
cltd
add
mov
int3
pop
addl
sub
push
lods
inc
pop
into
sbb
ss
int
push
mov
and
dec
ficoml
xchg
leave
imul
loope
int
mov
lods
adc
in
xor
push
xor
cmp
cmp
xlat
xchg
mov
or
iret
or
mov
mov
in
mov
cwtl
cmp
push
xchg
mov
cs
or
and
arpl
addr16
insl
mov
sub
cmp
cmp
stos
jp
cli
outsb
add
pop
jo
jo
cmp
add
dec
and
mov
cwtl
shrl
mov
xchg
cld
pushf
jge
pop
fcompl
inc
lret
sbb
xor
orl
loopne
adc
ficoms
insb
add
mov
adc
dec
mov
lods
test
fisubrs
gs
xchg
pop
cmp
pushf
xor
in
dec
adc
inc
dec
test
lcall
sti
rcl
ja
icebp
rol
jl
lds
sbb
aas
sarl
push
dec
scas
jns
bound
add
scas
xchg
push
sbb
loopne
add
outsl
sub
insl
in
push
mov
sbb
jmp
ficoml
out
std
les
outsb
cmp
fadd
mov
jno,pn
pop
adc
outsl
inc
push
movsb
rorl
repz
imul
pop
push
and
xchg
jbe
jge
dec
sahf
jg
js
fs
inc
sbb
fcmovb
mov
pushf
sbbb
das
lret
mov
scas
sbb
push
scas
int
mov
movsl
mov
and
inc
ficomps
in
testb
scas
aas
jb
mov
sbb
test
lods
push
out
cmp
jne
jo
pop
and
sbb
mov
xchg
movsl
mov
cmpsl
add
fildll
mov
mov
dec
mov
enter
cld
sub
dec
sub
xchg
mov
rolb
les
fisubs
dec
jnp
stc
or
movsb
adc
and
test
mov
mov
je
pop
into
cmp
xor
imul
mov
push
fsubp
pusha
outsb
popf
aas
xchg
pushf
sub
fbld
pop
stos
iret
add
daa
jp
int
movsb
inc
pop
mov
adc
imul
or
xor
dec
addr16
nop
jno
sbb
push
ljmp
icebp
sbb
mov
xchg
inc
loopne
pop
inc
xor
test
and
movl
lcall
aad
mov
call
inc
rorl
add
push
cld
mov
cli
arpl
add
sbb
xchg
pop
pop
mov
mov
xor
lock
aaa
pop
js
mov
push
arpl
lcall
int3
cmc
push
shll
and
divl
push
xchg
call
imul
and
xorl
sbb
mov
mov
add
pop
shlb
sbb
mov
rorl
mov
testl
xor
aaa
jb
xor
shrl
jne
aaa
mulb
pop
xchg
push
add
adc
mov
ret
jno
sti
push
idiv
adc
movsl
roll
cmp
lods
movsl
jo
cli
lcall
jp
cs
mov
mov
mov
jg
mov
popf
movsb
push
es
xchg
cwtl
data16
mov
sub
adc
dec
push
out
ljmp
movsb
push
aas
inc
es
scas
jnp
loop
cmp
pop
out
mov
adc
addr16
or
adc
mov
push
xchg
out
pop
jb
pop
and
pop
icebp
icebp
or
inc
insl
inc
sbb
repnz
dec
pop
aas
fwait
mov
dec
outsb
push
cltd
pop
std
pop
stc
lock
popa
sarb
mov
fisttpll
loop
int3
mov
xor
jnp
lea
ljmp
add
adc
mov
mov
addr16
loope
and
and
imul
add
jnp
mov
orb
mov
lcall
lea
into
sub
mov
pop
aam
out
mov
pop
cmpsb
pop
cmp
mov
mov
hlt
clc
jae
xchg
cmp
add
lea
or
jae
lret
hlt
ret
lods
adcb
mov
dec
or
enter
bsf
dec
mov
inc
addb
nop
rcl
in
mov
add
jge
out
stc
lret
inc
and
mov
add
imul
sub
ljmp
mov
cmpl
dec
inc
popa
mov
jmp
ss
mov
dec
daa
inc
ret
mov
push
leave
sbb
xchg
sti
sarb
mov
mov
push
xorb
xchg
xorb
fbld
movsb
inc
pop
mov
mov
pop
mov
dec
adc
jecxz
sub
repz
repz
mov
mov
lret
sbb
scas
mov
test
add
dec
mov
sbb
mov
cmpb
mov
je
cmp
xchg
mov
stc
adc
addb
decb
aaa
rorb
int3
jbe
into
lret
or
mov
popa
cltd
xorl
call
gs
pop
sub
or
adc
pop
add
jo
jnp
mov
shrl
jmp
fidivs
xchg
inc
les
andb
mov
insl
in
fdivrp
sub
sub
sahf
gs
es
mov
inc
arpl
addr16
push
in
repz
ds
iret
je
adc
add
push
lret
repnz
push
cmpsl
xchg
inc
or
inc
jle
inc
mov
nop
sbb
int3
dec
sbb
out
in
fdivrs
addl
idivl
cmp
pop
mov
push
xor
test
ficoml
outsl
sbb
or
mov
in
shrb
cltd
mov
mov
inc
sub
repz
dec
cli
jge,pt
xchg
dec
push
jg
jl
pusha
in
adc
inc
or
mov
shrl
xchg
inc
cwtl
sbb
shrb
cmpsb
adc
cmp
sahf
and
adc
mov
enter
fs
and
cmp
push
cmc
inc
icebp
imul
jp
dec
andb
daa
push
repnz
sti
cmp
lock
jno
mov
or
push
xchg
cmp
mov
pushf
outsl
jle
or
add
out
sub
push
xchg
sarl
mov
jb
xchg
jmp
push
pusha
dec
xchg
inc
pop
call
les
and
jno
jge
hlt
aad
cmp
xchg
sub
push
xchg
shlb
cwtl
mov
sbb
add
push
repz
aad
aas
fistps
push
not
scas
mov
aad
int3
es
sub
push
inc
xor
jno
push
push
out
in
in
mov
pop
mov
imul
pusha
sahf
push
ds
lods
mov
jmp
ss
adc
sbb
jnp
push
fsubl
jo
lods
adc
aam
es
sbb
xor
xor
nop
imul
bound
lret
push
jge
test
aas
das
xchg
mov
sbb
lods
push
jb
mov
mov
loope
cmp
loope
ret
rcrb
add
pop
mov
stos
shlb
sti
in
sarb
mov
xchg
push
dec
mov
dec
imul
dec
mov
or
mov
cld
jle
div
push
xor
sub
dec
shlb
fistl
xor
adc
mov
repnz
popa
std
ds
std
ficompl
inc
in
xchg
cwtl
dec
dec
scas
daa
lret
sub
popa
repz
stc
pop
or
jbe
pop
inc
loope
adc
mov
mov
inc
pop
ljmp
sbb
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
adc
rcl
sub
push
ficompl
fdivl
dec
xor
push
loop
mov
jb
imul
push
hlt
iret
and
les
dec
aam
fdivrl
pop
xchg
or
or
lods
push
shll
mov
mov
lcall
insl
movsb
shlb
test
and
in
scas
xor
pop
lret
jno
clc
sub
jp
out
test
lods
fistpll
clc
mov
jnp
xchg
xchg
xchg
shrb
lock
fs
clc
push
sbb
fsub
cmc
idivb
ret
stc
sub
inc
mov
sub
cld
inc
mov
or
ja
inc
jp
cmc
push
bound
imul
sbb
jb
cltd
sub
ret
leave
sub
mov
fistpl
scas
scas
aad
lods
add
pop
fnstenv
ss
rorl
fwait
inc
push
or
sub
popa
inc
aam
add
mov
mov
push
test
xchg
and
sbb
dec
mov
mov
pop
jge
pop
enter
test
or
notl
and
out
pop
jae
mov
xchg
js
and
mov
fstps
mov
pop
incl
xchg
aaa
or
mov
mov
jle
add
push
out
xchg
mov
rorl
dec
into
and
ret
dec
arpl
xor
mov
fsubrl
rclb
cltd
outsb
adc
sbb
mov
mov
lretw
jmp
jmp
stos
pop
mov
loop
mov
or
pop
push
cltd
pop
fdivr
lods
or
adc
mov
cld
ja
or
sub
outsb
daa
mov
push
jns
mov
jmp
test
lock
ficompl
xchg
mov
enter
call
push
inc
test
stos
cld
int
add
jl
aam
ss
mov
dec
mov
out
dec
test
add
out
imul
fwait
getsec
pop
adc
xor
fstps
aaa
cli
orb
cs
push
in
pop
push
clc
cmp
cmpl
movsb
mov
inc
xchg
sub
sbb
xchg
mov
sbb
push
mov
mov
lods
push
rcll
add
or
push
mov
pop
mov
jle
vorps
insb
push
and
xchg
push
lods
mov
sbb
push
push
xor
xchg
xor
mov
cli
cmp
lret
lods
push
xchg
repz
mov
loopne
outsb
and
jae
jge
callw
mov
cmpsb
push
push
pop
mov
pop
test
pop
out
dec
mov
out
jo
push
scas
test
mov
and
xlat
out
psubusw
sbb
jg
repnz
mov
loop
cmp
arpl
fmulp
out
sbb
cmp
add
fcmovbe
mov
mov
popa
xor
mov
jg
dec
mov
aad
aas
mov
call
fisubrs
bound
insb
pusha
cmp
xchg
or
ss
mov
popa
fidivrl
add
fstps
adc
pushf
mov
jle
mov
call
push
jle
mov
lahf
fcompl
test
into
inc
push
pop
sub
test
stos
mov
test
fs
dec
mov
pop
xor
add
sub
ret
push
mov
adc
adc
stc
shl
dec
scas
pop
shlb
pop
xor
mov
push
mov
sub
push
jle
in
jge
mov
sub
adc
lret
shrl
xor
enter
std
xchg
addr16
add
mov
leave
es
aaa
bound
cs
inc
xchg
jns
pop
sbb
addr16
icebp
sbb
pop
test
inc
push
psubq
cs
mov
fisubrs
mov
in
jle
fldl
ja
mov
scas
push
xor
mov
cmp
jecxz
mov
test
sub
adc
int3
int
inc
je
sub
int3
push
pop
xchg
leave
mov
dec
pop
adcl
nop
xchg
xor
ss
lret
in
les
sbb
and
insl
scas
loopne
mov
and
iret
adc
dec
movsb
xchg
cmp
push
or
mov
inc
in
jns
leave
decl
cmp
aam
mov
push
test
adc
insb
or
rsm
and
fmul
sbb
ss
push
pop
sub
call
xor
adc
mov
popa
mov
pop
addr16
loope
enter
vcvtdq2pd
ds
lods
int3
adc
mov
push
sub
mov
arpl
sbb
xchg
test
in
xchg
loopne
pop
pop
mov
dec
cld
lahf
out
dec
jp
repz
ss
hlt
stos
mov
adc
mov
mov
rcr
pop
addr16
icebp
push
loop
ficoms
cmpb
sahf
inc
xor
xchg
outsb
sahf
fdivrs
adc
mov
sbb
into
cmp
leave
stos
inc
cmp
add
sbb
imulb
je
fiadds
mov
xor
insb
into
in
jo
clc
mov
inc
inc
dec
inc
or
lahf
sub
push
cmpsl
jp
cmp
xor
nop
mov
push
and
fstpl
cmp
stos
pop
dec
xlat
mov
rcrl
cltd
push
outsb
clc
shll
mov
xchg
xor
add
imul
sbb
and
adc
jae
call
xor
pop
and
cmpsb
int3
push
push
mov
add
jge
sbb
add
or
add
adc
pop
mov
ds
imul
js
popa
repnz
negl
and
sbb
in
or
sar
or
bound
stos
test
or
out
es
dec
xchg
mov
jge
xor
sub
shr
pushf
sbb
out
push
ljmp
and
cltd
and
std
jno
arpl
and
mov
fcompl
loope
arpl
scas
xchg
jecxz,pt
cmp
pop
test
enter
out
jbe
mov
xchg
cmp
scas
lods
xlat
imul
in
lock
inc
push
insb
imul
repnz
pop
das
xchg
and
push
fprem
add
jne
stc
pop
shlb
push
inc
into
mov
stos
jnp
out
cmpsb
dec
push
jnp
sub
lcall
gs
rorl
mov
mov
jl
mov
mov
lea
mov
pop
jmp
movsl
add
xor
pushf
mov
test
aaa
inc
cltd
aad
add
sahf
mov
inc
mov
movl
add
movsl
add
pop
ret
fsubl
jne
jae
rcll
pop
fucomp
das
in
sbb
aam
cs
test
xorl
push
shrb
popf
inc
xchg
or
iret
xchg
in
popl
or
mov
and
xchg
outsb
pop
sbb
push
loope
call
repnz
fs
mov
xchg
cmp
ss
rcl
mov
out
or
sub
andb
or
pusha
sti
in
cltd
sub
cmp
push
in
cmp
std
or
jg
out
js
cwtl
call
adc
sub
test
push
mov
pop
lret
inc
outsl
push
popa
lcall
cltd
out
sub
adc
and
out
mov
testb
push
aam
imul
sti
jp
aaa
push
rorl
loopne
jl
mov
xor
dec
jecxz
pop
mov
cmp
outsb
mov
out
sub
xor
push
rcrl
mov
cmp
xchg
and
ja
xlat
mov
inc
std
mov
push
mov
popf
rcr
mov
pop
lcall
in
sub
shrl
in
test
xchg
mov
out
xchg
ja
xchg
and
sbb
push
mov
repnz
mov
inc
add
mov
cmp
repnz
push
and
push
fiaddl
xadd
jns
rol
sub
enter
popl
push
scas
ror
lcall
fcomps
pushf
daa
adc
push
lret
mov
xor
rcrb
jo
mov
dec
movsl
mov
ljmp
add
inc
push
adc
pop
and
in
xlat
pop
sbb
ret
mov
xor
leave
insl
call
add
sti
insl
sub
pop
lret
movsb
push
sti
mov
sbb
test
xchg
es
jbe
push
pop
sub
jo
mov
or
leave
pushf
mov
stos
out
stos
shrl
loop
imul
lret
jmp
and
and
lcall
fstpl
inc
xor
lods
in
xchg
push
xlat
pop
sub
jg
in
cmpsl
pusha
lods
out
xor
pop
push
dec
aam
jge
push
aas
sti
jp
sub
daa
jo
jg
out
cmp
aam
sbb
inc
and
push
shl
or
enter
sbb
sub
inc
inc
push
push
movsb
jnp
mov
sub
imul
jbe
or
pop
cmpsb
rol
pop
jg
movsb
inc
xchg
inc
mov
dec
or
cmp
cmp
xchg
lfence
xlat
cmp
xchg
adc
mov
sarl
cmc
lods
mov
mov
xchg
jno
imul
mov
jbe
lahf
cmp
dec
or
pop
bound
out
dec
adc
sbb
push
jmp
out
jg
jns
xor
addl
icebp
push
jge
insb
mov
inc
test
pop
cmpsb
fwait
jnp
inc
add
lret
movsl
shrl
push
jns
sub
xor
or
mov
gs
and
push
sti
shlb
stos
inc
jno
sub
mov
push
shrl
divl
pop
mov
lods
lret
outsl
test
test
xor
push
bound
mov
jecxz
mov
insb
std
mov
sub
lods
jge
push
imul
std
sti
mov
or
hlt
and
orl
inc
push
shl
frstor
push
dec
inc
mov
bound
xchg
push
or
add
aaa
push
xor
fistl
ret
int
scas
jge
pop
inc
rorl
inc
inc
hlt
popf
jmp
test
movsl
xor
sub
xor
adc
sub
cmp
xchg
push
jp
pcmpeqw
lods
mov
mov
pop
xchg
shlb
add
sub
notl
pmaxsw
xor
pop
xor
rorb
xor
inc
ljmp
dec
rorl
add
lds
add
fists
shll
push
mov
or
in
or
pop
mov
rol
nop
sbb
adc
pop
lret
xor
pand
pusha
lahf
or
mov
divl
jg
push
gs
cmp
push
adc
jo
mov
aam
pusha
jle
imul
loope
sub
xchg
aas
pop
cmpl
cmpsb
nop
dec
xchg
jp
out
shll
adc
fdivrl
pop
cmc
or
cmp
dec
lock
mov
insb
push
or
jmp
pop
jo
cmp
cmc
mov
inc
hlt
xor
repnz
fcoms
xorps
je
stos
out
push
sbb
cli
loop
fwait
sbb
xor
sbb
dec
jmp
mov
pusha
mov
push
cwtl
sub
insl
cli
ljmp
fcompl
fwait
ja
mull
cmp
cwtl
scas
in
mov
sub
leave
mov
ja
cmpsb
sbb
xchg
xor
xor
std
cmpsl
stos
cmpsl
outsw
inc
lock
mov
jge
in
dec
push
mov
jno
push
xor
dec
in
or
dec
fistps
inc
and
dec
mov
mov
jae
push
pop
mov
xlat
xchg
ss
pop
inc
jnp
mov
subl
cld
jle
cmp
adcb
dec
sub
repnz
jp
les
mov
xchg
test
jl
in
sarb
pushf
cmp
push
jbe
ja
cli
rclb
adc
fidivrl
dec
pop
cmpsb
xor
es
addr16
lock
ror
mov
lcall
fwait
mov
jmp
inc
cmp
in
jne
pop
push
pop
and
jne
mov
sbb
xor
pop
sbb
mov
pop
in
sbb
cmpsl
xchg
lea
lock
enter
adc
outsl
adc
pop
push
push
mov
test
inc
inc
ss
test
cmp
inc
dec
lahf
or
push
repz
push
mov
out
xchg
push
mov
cmp
inc
xlat
ret
dec
mov
jne
je
pop
mov
aas
cmp
mov
insb
out
mov
js
xlat
hlt
cmp
testl
mov
insl
cmp
sub
mov
sahf
test
or
aaa
xchg
cltd
mov
ljmp
call
shll
add
repz
pop
cmpsl
out
or
sahf
sahf
mov
xor
movsl
ss
gs
fmuls
lahf
adc
int
int3
loop
loope
xchg
mov
xabort
mov
jp
xchg
arpl
sub
push
pop
loop
insl
cld
icebp
mov
int3
dec
jns
mov
sbb
bound
mov
mov
icebp
inc
and
xor
enter
mov
ret
mov
pop
mov
add
mov
fidivs
ja
xlat
fistpll
xchg
mov
xchg
jl
and
adc
mov
lahf
mov
jp
push
fidivrl
dec
cmpsl
push
mov
adc
testb
cmp
inc
test
push
dec
rcr
ds
aas
enter
xor
lea
jo
push
pop
pop
add
test
cld
mov
jb
stc
push
sub
and
push
movq
stos
mulb
lods
sub
jmp
mov
ds
xorb
push
std
addr16
ja
xchg
inc
nop
jp
pop
movsl
jp
and
call
mov
dec
outsb
add
sub
xor
mov
inc
mov
mov
pop
bound
sbb
aad
lahf
push
shl
sti
push
icebp
lock
jecxz
add
sub
push
or
jge
lcall
lcall
sbb
xor
fnstenv
mov
and
sbb
mov
movsl
out
xchg
jne
aam
in
push
jge
pusha
dec
sbb
add
shll
out
dec
add
cwtl
mov
notb
repz
repz
das
adc
inc
sbb
btr
insb
and
das
add
repz
jl
jle
aad
sub
jge
js
inc
iret
or
fdivrs
in
jne
mov
push
mov
imul
int3
fdivrs
xchg
mov
mov
pop
xlat
mov
pop
sbbb
push
add
add
mov
rorl
imul
in
mov
cmpsl
shl
fucomi
mull
jge
cmp
push
fists
mov
cs
clc
jp
fucom
js
push
adc
ror
pop
xchg
jle
xchg
mov
sbb
or
pop
scas
ret
mov
cltd
test
cmp
ffree
and
and
popa
dec
pusha
loop
sub
mov
or
sub
mov
mov
xchg
cwtl
cmp
xor
enter
movsb
insb
cld
xorl
pop
aaa
ret
pop
xchg
aad
push
hlt
cmpsb
push
dec
das
pop
mov
jmp
mov
jle
add
shrb
ficomps
jge
inc
jno
jne
add
stos
adc
cmp
pop
pop
or
mov
lcall
inc
xchg
xchg
and
das
xchg
mov
and
cmovle
xchg
and
push
adc
cmpl
rsm
pop
cwtl
int3
je
ljmp
fwait
pushf
shlb
lret
popl
das
mov
cli
xor
incb
jmp
pop
jne
xchg
scas
popa
xchg
sbb
nop
mov
cmp
in
lods
dec
push
jns
push
xchg
std
cmp
leave
test
pusha
fwait
jg
sahf
pop
les
dec
cmpsb
or
sbb
mov
test
rclb
xchg
cmp
sbb
fsub
loope
mov
mov
leave
mov
jo,pn
sbb
lcall
scas
jg
ror
test
mov
movsl
jmp
stos
dec
jg
in
add
push
lods
scas
mov
in
mov
imul
out
test
out
push
out
push
xchg
mov
scas
sbb
sahf
jne
pop
adc
push
push
push
cs
cmp
icebp
sbb
cltd
xor
sub
jb
scas
mov
add
and
pop
stos
xor
jns
fcmovb
mov
loopne
rcl
xor
scas
inc
jae
idivb
iret
dec
xor
rcl
fbld
dec
sahf
aas
pushf
scas
jg
movsl
mov
loopne
pusha
push
fisubl
int
jecxz
and
scas
cltd
dec
jecxz
test
mov
test
adc
pop
pop
mov
scas
mov
cmp
pop
insb
in
lahf
mov
bound
dec
cwtl
push
inc
add
jmp
push
sbb
adc
xlat
add
or
in
hlt
push
jne
popf
mov
jge
push
cs
sbb
ds
js
sub
dec
cmp
cmp
int3
sub
mov
gs
or
pop
out
icebp
cmp
mov
push
fimull
jp
adc
and
cwtl
cwtl
mov
hlt
dec
push
sbb
dec
jge
pusha
sbb
nop
sbbl
pushf
aam
push
or
xor
add
xor
jns
mov
dec
pop
jnp
jno
cmp
pop
jle
jno
and
int3
std
and
inc
jmp
mov
dec
ret
jbe
xor
fsubs
stc
jbe
xchg
popl
test
icebp
mov
sub
fs
fldenv
sahf
jg
std
lds
sarl
push
cmc
xor
out
xchg
testb
mov
jge
xlat
inc
es
fisubrl
das
add
test
cld
push
cmp
test
in
popf
das
mov
jge
fsubr
orl
mov
and
shll
mov
cmp
push
push
xor
cmp
ds
pop
in
mov
ds
add
adcb
sbb
pop
adc
xchg
fs
stc
mov
fabs
nop
arpl
dec
mov
ret
ljmp
jmp
outsl
or
js
dec
mov
lret
jno
jp
out
adc
dec
push
cmp
add
cs
test
mov
aad
insl
dec
jne
sbb
push
xor
movsl
fistpll
rclb
jnp
pop
bound
and
sub
out
lret
cmc
dec
sub
in
mov
push
scas
adc
std
sbb
stos
fistps
sar
push
ret
inc
push
lock
pop
xchg
data16
mov
dec
xchg
or
test
addl
push
sub
cli
push
hlt
lds
popa
adc
push
pop
rclb
fstpl
sbb
push
mov
test
adc
and
pop
xchg
sub
jmp
xchg
add
push
in
sarb
mov
inc
push
add
or
xor
test
mov
inc
loope
mov
scas
decb
andb
xchg
dec
jnp
xchg
jmp
sub
dec
rorl
pop
push
loop
idivb
daa
xchg
rcll
dec
es
jge
std
loop
aaa
push
adc
pop
ss
sbb
mov
sbb
and
or
stos
ret
sub
xor
inc
lock
popf
cmp
mov
mov
mov
aaa
int
push
movsb
sub
inc
cmc
add
push
push
mov
cmc
das
mov
mov
push
mov
lods
into
leave
and
std
or
je
lock
enter
xor
cmp
xor
fstpt
shll
out
adc
pop
fidivl
fbld
idivl
fbld
pop
aaa
fs
mov
test
lcall
out
pop
mov
adc
push
mov
in
push
mov
cmpsl
push
outsl
xor
das
in
repnz
push
aaa
mov
fsts
pop
jge
in
add
and
mov
adc
mov
pop
movsl
or
fnstcw
pop
mov
arpl
mov
mov
lods
mulb
jecxz
out
pop
sbb
into
push
cmp
lea
pop
or
jno
lahf
mov
decl
and
jno
push
fadds
pop
popa
das
sub
dec
fidivl
nop
sub
sub
jb
jno
push
inc
int
imul
arpl
es
mov
sbb
and
push
and
fcomps
dec
mov
repnz
mov
and
sahf
cmp
in
in
jbe
sahf
fsubrs
in
test
adc
lods
jbe
inc
xor
imul
xor
stc
mov
out
xchg
inc
frstor
push
lods
push
sub
sub
into
jg
jmp
in
add
jbe
lret
pop
out
addl
push
mov
fisubl
adc
testb
jns
inc
into
inc
jb
in
lret
pop
mov
fsubrs
inc
pop
shr
jmp
ljmp
jne
rol
rolb
cmpsb
loope
mov
cmpsb
cmp
iret
insl
add
sbb
sub
fistpl
sub
adc
and
out
mov
mov
xor
cmp
push
push
or
out
js
pop
daa
push
sbb
inc
dec
sti
mov
sub
sbb
sbb
aas
mov
push
aas
push
fsubrp
pop
pop
fisubrs
lods
daa
lock
jl
xchg
repz
cmpsl
adc
xchg
adc
jae
incl
test
dec
pusha
aam
dec
cld
mov
or
cmp
stos
inc
ja
mov
dec
mov
scas
xor
icebp
mov
inc
icebp
sbb
fwait
in
jae
xorl
adc
mov
mov
sbb
xchg
push
pop
sbb
mov
lret
xchg
dec
cld
mov
lcall
ja
mov
mov
enter
xlat
mov
das
cld
repz
dec
mov
daa
arpl
jp
dec
addl
mov
popa
subl
xchg
rcr
sub
mov
movsl
test
sarb
lea
jbe
mov
and
cmpsb
jl
nop
stos
rcl
lods
fidivs
fistl
aas
add
dec
xchg
cmp
pop
mov
in
jmp
scas
mov
sub
leave
and
dec
enter
xchg
imul
dec
and
lds
mov
mov
ret
out
orb
out
jae
mov
adcl
mov
dec
sbb
add
push
pop
loop
pop
shl
rorl
xor
lcall
shll
push
mov
and
mov
jno
sub
repz
scas
sub
out
fisubrl
test
mull
outsl
pop
xor
xchg
add
jmp
adc
mov
jl
jg
xor
cmp
lcall
mov
xchg
mov
idiv
daa
jmp
movsb
fcompl
sub
cmp
cmp
xchg
fsts
sbb
scas
cmp
xchg
outsl
jp
or
adc
imul
cmpsb
push
push
cwtl
lcall
lahf
lret
mov
pop
in
movsl
jge
jnp
and
popa
and
cmpsb
adc
pop
sbb
mov
cli
pop
xlat
xchg
pop
call
adc
mov
push
xchg
jne
test
sarb
packssdw
jmp
div
fimull
mov
push
adc
mov
mov
xchg
pushf
push
mov
adc
pop
int
push
movsb
mov
add
into
xchg
jge
xchg
cmpsl
jmp
adc
lcall
sbb
repz
mov
and
xchg
push
lret
mov
dec
sub
cltd
sbb
mov
push
jle
js
test
cmp
mov
mov
fs
adc
rolb
push
cwtl
outsl
imul
popf
loope
pop
jp
outsb
in
push
pushf
pop
scas
jl
jmp
sbb
xchg
add
jae
xor
push
scas
repnz
outsb
popf
sbb
sahf
pushf
fmuls
scas
cmc
jne
jecxz
loop
mov
adc
mov
push
test
in
push
loopne
mov
jae
mov
negl
hlt
hlt
sub
dec
jbe
sbb
cltd
ret
hlt
popf
and
xchg
dec
xchg
push
clc
rcll
dec
cmp
std
cmp
es
xlat
frstor
ja
stos
adc
jno
xor
out
lret
aam
cmp
xor
mov
nop
push
mov
lods
mov
insb
xchg
idivl
out
push
idivb
xchg
scas
xchg
sbb
fsubrp
adc
xor
jne
lret
cmp
push
fdivs
fldt
ret
not
ds
subb
inc
test
test
ret
xor
loope
sub
jl
push
leave
mov
inc
dec
jmp
cs
mov
arpl
cwtl
lcall
addb
cmpsl
jb
jno
les
rclb
loope
scas
fwait
stos
test
fwait
cld
pop
xor
out
sbb
inc
lahf
mov
aad
cmp
leave
cltd
jbe
add
push
mov
or
pop
loope
or
out
jmp
inc
sti
rorb
mov
pop
hlt
out
xchg
pop
dec
repz
lods
xchg
aas
sub
sbb
rclb
jno
test
cltd
ud1
xchg
sahf
jge
cmpsb
jl
jno
xor
mov
cmpsl
xchg
stc
sub
push
or
fsubl
pop
jmp
add
pop
cwtl
inc
add
cmp
roll
jnp
mov
push
js
cmpsb
jns
div
xor
jbe
sbb
add
push
jbe
hlt
mov
inc
mov
push
icebp
pusha
es
sbbb
je
push
mov
cmp
lock
pushf
push
mov
int3
stos
mov
fisttpl
popa
rclb
sbb
xchg
jg
imul
sub
mov
les
or
stos
repnz
dec
fmulp
push
test
push
mov
stc
cmp
add
ja
adc
cmp
xchg
mov
inc
les
adc
das
push
pop
int
lret
push
xchg
punpcklbw
ja
sub
jle
stc
mov
shr
mov
ds
das
sub
test
sbb
mov
addr16
cmp
cmpb
mov
clc
inc
or
roll
pop
pop
xchg
or
adc
pop
mov
add
cmp
outsb
pusha
faddl
addl
outsl
sbb
mov
jmp
in
stos
aaa
je
popa
pop
in
dec
test
les
cmpsl
int3
in
sub
jo
dec
jbe
gs
push
and
or
aad
mov
and
and
mov
js
mov
inc
ss
sbb
cmp
sbb
mov
outsl
pop
inc
add
or
shlb
pop
bound
inc
sahf
mov
ret
in
pop
or
inc
pop
mov
mov
mov
bound
roll
jb
jno
mov
repz
cmp
add
sarb
inc
or
into
lods
nop
addr16
xor
mov
imul
je
test
das
icebp
add
jb
enter
inc
idivw
ja
mov
sbb
push
insb
loopne
rcll
jecxz
push
jo
jae
jge
mov
pop
inc
inc
mov
add
xor
mov
mov
adc
push
jbe
stos
lea
xchg
std
push
cmp
push
xchg
fstpl
or
inc
aad
fldenv
adc
mov
xchg
inc
xlat
imul
push
or
jecxz
adc
in
nop
fwait
imul
xor
cmp
xor
jbe
data16
aaa
sub
mov
mov
mov
mov
data16
mov
pop
call
push
icebp
mov
loope
mov
xchg
xchg
push
scas
jmp
jno
pop
push
ret
mov
ret
mov
movsl
sarb
mov
rcrb
add
mov
js
push
movsb
cs
in
pop
inc
mov
and
jmp
in
sbb
dec
popf
call
stos
loop
data16
rorb
and
xchg
jo
ret
incb
adc
add
adc
pop
pop
push
popa
lock
jbe
fucomp
fadd
icebp
scas
pusha
dec
mov
mov
addr16
ja
xor
aas
add
pop
hlt
adc
lahf
adc
lcall
push
call
nop
call
mov
test
inc
and
xchg
out
repnz
cmpsb
and
cltd
decb
mov
aaa
pop
push
or
sbb
jae
pop
movlps
roll
and
pop
jecxz
cld
jb
cmp
adc
dec
mov
loope
xlat
aad
mov
add
sub
or
outsl
xor
lea
int3
pop
fidivrl
movsb
xlat
mov
lds
std
insl
int
in
jg
jg
adc
cltd
xor
gs
add
fwait
adc
stc
daa
pop
hlt
xchg
sahf
pop
mov
mov
xor
stos
and
stos
std
pop
cmp
push
and
cmp
mov
test
sub
sub
fildll
xlat
pop
inc
insl
cmpsl
ljmp
pop
movsl
and
stos
push
rorb
xchg
int3
add
mov
pop
mov
jg
xchg
mov
arpl
xor
stc
jg
mov
inc
mov
dec
xchg
push
lcall
sbb
xchg
pop
push
and
inc
jae
jg
bound
mov
sbb
js
dec
fiaddl
arpl
xchg
dec
mov
sub
jmp
ss
add
lret
or
jl
mov
stc
and
outsl
clc
rolb
out
in
test
adc
jmp
inc
cmp
std
scas
jmp
pusha
rolb
mov
mov
andb
mov
sti
xchg
add
addb
pop
xchg
leave
enter
xchg
xor
push
xchg
loope
stos
mov
imul
lds
fisubrs
pop
mov
fldenv
inc
xchg
sbb
cmpb
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
cmp
stc
call
pop
jl
jge
sub
in
mov
stc
jne
ljmp
outsb
pop
push
add
mov
sar
call
js
cs
cmpl
fdivs
mov
cld
jmp
sub
outsl
out
and
test
inc
mov
mov
push
mov
addb
sbb
ds
cmp
cmp
xchg
mov
dec
adc
pop
fmulp
out
out
cvttps2pi
lcall
rol
jo
inc
push
and
shrb
in
mov
loopnew
popf
stc
lods
push
ljmp
in
jae
jbe
mov
mov
mov
outsb
or
shlb
gs
jnp
sbb
push
rorb
sbb
mov
shlb
pop
out
mov
cmc
test
cmpsl
aad
data16
jp
push
adc
ljmp
icebp
jmp
cmc
inc
dec
mov
pop
inc
lret
xchg
xor
and
adc
aam
pop
jp,pn
pop
jl
sbb
es
jmp
out
or
pop
inc
xor
cmovl
out
je
add
fidivs
pop
insl
cmp
xlat
test
sti
imul
inc
push
inc
mov
and
xorl
xor
cmpsb
andb
xor
add
insl
sahf
outsl
leave
xchg
mov
xchg
imul
jle
fdivs
out
fmuls
lahf
adc
add
pop
stc
xchg
fcmovu
sub
mov
ret
and
jmp
ja
push
lahf
xor
add
out
mov
add
lahf
lret
ds
mov
jecxz
insb
icebp
out
shr
fwait
jp
sub
push
xor
sarb
test
dec
lcall
inc
lahf
dec
out
jecxz
or
mov
cli
int3
ljmp
out
jge
jg
and
insb
mov
and
aad
xchg
jp
cmp
repnz
mov
and
mov
ja
dec
sti
test
xchg
sbb
sub
mov
dec
mov
mov
fsubrl
btc
push
lret
jbe
jbe
xor
mov
jb
cmp
aas
testl
or
add
bound
push
push
mov
dec
sti
cmp
add
adc
jo
push
mov
cmpsb
xchg
inc
das
dec
in
imul
push
pop
push
cmpsl
inc
lret
push
jmp
dec
xor
std
pop
xchg
cli
les
cli
xchg
pop
xchg
lret
fld
lods
jl
mov
push
mov
ret
fldl
or
cmpsl
dec
leave
test
xor
stos
sbb
flds
es
push
cmpsl
pop
les
inc
xchg
and
jnp
fiaddl
aam
fs
inc
fsubs
lods
ja
loope
xor
inc
jb
sub
std
pop
pop
and
lret
push
shll
cmp
push
xchg
js
sub
add
dec
lods
movsb
out
insb
stos
dec
clc
xor
je
rorl
push
jns
jecxz
sub
hlt
mov
movsb
and
stos
ds
inc
dec
ja
and
ljmp
xchg
or
xchg
adc
jle
icebp
adc
inc
das
push
cli
and
jl
js
mov
jne
xchg
lret
xlat
xor
mov
fbld
rorl
int3
mov
nop
notb
pop
cmp
mov
repz
cmp
cmpl
jmp
mov
lods
add
lea
aaa
dec
pop
mov
sbb
xchg
mov
andl
or
mov
mov
xchg
aaa
inc
int
leave
out
or
rorl
push
jge
adc
ret
adc
add
inc
sbb
out
clc
mov
or
sbb
cmpsl
addb
shl
pop
fwait
mov
subl
pop
adc
add
xor
jmp
shr
rolb
fsubl
dec
add
jne
add
movsl
lret
mov
dec
jmp
inc
sbb
sbb
jo
jb
sub
xor
push
inc
das
cmp
lahf
mov
dec
or
mov
and
pop
int
mov
lahf
sub
adc
fisttpl
scas
sarb
cmp
xor
jo
mov
mov
or
and
dec
aad
cmp
loope
mov
pop
je
fs
sub
sarl
cltd
push
mov
or
in
xor
add
push
lds
mov
lods
xor
outsb
mov
es
mov
sbb
push
mov
mov
mov
sbb
shrb
test
xor
add
pop
push
int3
jle
sub
add
je
mov
xchg
mov
sbb
push
push
mov
or
push
mov
lea
cmp
movsb
lods
inc
in
pop
sub
and
adc
push
dec
mov
dec
or
cmp
mov
call
and
je
push
mov
mov
test
rorl
jb
mov
mov
cmp
pop
cmp
pop
mov
jmp
sub
imull
aaa
pushf
jecxz
inc
mov
xchg
dec
outsl
inc
ss
xor
int3
mull
pop
call
adc
popa
lret
shlb
fdivs
cmp
leave
loopne
mov
cltd
gs
dec
pop
popa
dec
je
xchg
inc
push
cltd
jmp
jnp
xchg
inc
pop
push
or
pop
xchg
mov
lret
mov
sbb
mov
cmc
inc
cld
iret
jg
test
stos
in
jno
ljmp
and
lods
cld
push
lcall
test
pop
inc
sub
mov
or
shlb
je
xor
inc
stos
jle
xor
adc
mull
in
inc
push
mov
lds
sub
cmpsl
inc
push
sub
loope
das
push
mov
push
pop
sbbl
xchg
sub
ror
mov
push
lcall
add
pop
bound
test
fwait
dec
loopne
xor
pop
and
leave
cli
std
stos
adc
push
cli
cmp
test
ret
adc
cmc
push
ljmp
pop
inc
negl
mov
int
mov
insl
cmpsl
lret
xchg
cmp
ss
xchg
das
jns
mov
mov
dec
popa
daa
push
stc
int3
pop
jmp
test
sub
out
arpl
mov
ss
dec
aad
and
jle
mov
sbb
stc
lret
dec
insl
add
push
pop
mov
add
xor
push
xor
sub
dec
dec
mov
mov
sub
insl
loop
scas
fbld
sbb
sub
jnp
in
fs
push
fisubrs
push
xchg
push
sbb
test
or
jae
enter
cs
lods
fwait
cmp
mov
xchg
aas
mov
popa
test
inc
shrb
cltd
push
mov
and
mov
std
and
xor
rcr
sub
inc
popa
cwtl
or
adc
sbb
mov
aas
pop
mov
jmp
adc
enter
push
jecxz
loope
aas
outsb
arpl
dec
loope
inc
sti
adc
sub
mov
cmp
stc
mov
pop
inc
sub
adc
les
jmp
inc
or
or
xchg
mov
fmuls
mov
dec
and
out
add
inc
mov
popa
sbbl
pop
push
jecxz
lods
jle
fdivr
cltd
mov
imul
sub
loopne
jecxz
push
in
sbb
test
cwtl
sahf
inc
mov
stos
dec
pop
and
lahf
dec
jg
das
inc
xchg
fsts
cmp
pop
or
xchg
es
push
int3
imul
push
inc
mov
fdivr
mov
sbb
jae
sbb
mov
cli
mov
xchg
orl
xor
and
aam
bound
pop
mov
adc
sbb
and
add
xor
aas
scas
add
dec
std
fmull
aad
push
hlt
sub
xlat
inc
pushf
add
std
cmp
loope
addr16
call
jo
push
sub
pushf
js
cmp
pusha
mov
and
jge
pop
sub
test
addr16
push
icebp
mov
fcoms
cs
aaa
sbb
xor
lret
lea
movsl
pop
mov
lret
dec
int
dec
out
lds
fsts
push
ja
xchg
loopne
dec
mov
inc
inc
imul
das
out
push
jge
add
jmp
sbb
add
lock
jae
mov
fstpl
mov
dec
mov
iret
jnp
mov
xchg
or
or
dec
xchg
add
mov
inc
adc
mov
jbe
out
fs
decb
mov
js
pop
scas
test
mov
aam
mov
add
ds
testl
jo
lret
in
out
sahf
mov
sbb
aam
in
out
sub
sbb
adc
mov
xor
lock
mov
ds
or
xchg
test
or
push
js
nop
mov
dec
int
or
sbb
popa
sbb
std
cmpsb
pop
fidivrl
rclb
ficoms
testl
mov
in
cli
outsl
fisubl
or
mov
inc
js
or
aam
push
cmpl
fs
mov
or
clc
xchg
test
repnz
sarl
jge
mov
pop
dec
fs
dec
jle
cmpsb
clc
or
cmp
call
mov
or
sub
and
cmp
xchg
adc
adc
adc
sbb
cmc
outsb
pop
ja
pusha
mov
repz
stos
mov
inc
cmpsb
int3
add
out
pop
jbe
push
repz
lock
pop
std
scas
pop
push
lea
pop
lahf
push
inc
inc
ja
push
pop
mov
leave
out
out
adc
pop
out
sub
inc
mov
pop
push
adc
jl
lcall
push
sbb
pop
decb
rcll
stos
in
xor
lret
insl
in
jge
jp
jg
jp
mov
mov
fsubs
pop
mov
push
mov
adc
fs
repnz
stos
mov
rorl
mov
inc
mov
sbb
pushf
mov
pusha
lahf
bound
mov
adc
out
jae
add
hlt
mov
shll
inc
nop
mov
jl
out
mov
push
cs
ret
test
push
pop
stos
dec
scas
leave
arpl
add
or
pop
loopne
pop
cld
shll
dec
cld
hlt
mov
adc
aam
sub
mov
dec
xchg
std
lods
pop
pusha
dec
dec
dec
mov
cmp
popf
out
or
xlat
mov
fimull
imul
mov
sub
cmp
mov
jp
stos
or
jnp
pop
mov
cli
arpl
xchg
xchg
fnstsw
mov
ja
cmp
dec
mov
add
cmp
sub
xchg
cmpsb
xor
lds
mov
scas
inc
leave
jo
repz
das
dec
and
add
mov
roll
xchg
sub
and
sbb
and
fidivl
or
sbb
pop
es
sbb
fstpl
addr16
sub
lea
stos
jmp
mov
ljmp
and
adc
add
imul
cwtl
bound
in
stc
popa
cmp
sbb
pushf
pop
dec
pop
xor
sub
add
popa
sub
sbbl
lahf
jl
ud2
les
gs
mov
enterw
sti
nop
or
movsb
jge
jo
mov
dec
add
pop
ret
pop
push
jns
call
mov
xchg
inc
xchg
imul
shlb
cltd
test
scas
jge
scas
mov
popf
out
cmp
fstpl
and
roll
inc
cmp
das
mov
pop
in
inc
cmpsb
xlat
fidivrl
cmp
bound
lods
outsb
cmp
xchg
jno
xchg
aaa
fbstp
in
orb
xchg
iret
and
push
shlb
xchg
inc
rcl
jne
nop
iret
scas
ficoms
mov
repz
jo
in
or
insb
imul
sbb
pop
sahf
mov
xor
dec
push
sub
stc
xchg
push
sub
cs
add
dec
adc
scas
fdivs
or
popf
jns
cltd
aas
sub
and
aaa
mov
leave
jge
rorl
xor
mov
bnd
out
ud2
and
repnz
mov
push
loop
push
inc
jnp
fisubrl
les
out
or
aaa
xor
dec
popa
int3
fidivrs
sti
jb
imulb
pushw
sub
inc
into
mov
ds
pop
cmp
sbb
mov
gs
xor
jge
test
scas
pop
stc
sub
sub
hlt
out
jge
jnp
mov
xchg
pop
ja
jecxz
cli
stos
and
rol
mov
add
mov
push
sub
jne
mov
sbb
popa
mov
cmpsl
es
outsb
jmp
call
or
stos
repnz
cmp
ret
mov
ss
out
xchg
iret
push
aam
dec
rcr
test
mov
xor
mov
mov
jl
insb
sub
dec
dec
mov
push
inc
sbb
in
mov
shlb
fdivr
addr16
mov
ret
mov
mov
add
popf
divl
push
andl
je
daa
mov
lods
in
jno
subl
pop
rolb
cmp
movsb
sub
jbe
pushf
lcall
out
push
mov
dec
mov
jle
dec
mov
pop
out
cmc
mov
jp
mov
mov
push
jg
xchg
sbb
jo
repnz
aaa
ret
daa
xchg
pop
shrl
dec
jb
cwtl
pop
xor
mov
jne
xchg
int
push
mov
dec
ds
loope
lock
fmul
lret
jno
mov
fstpl
pop
pop
push
iret
and
jge
lret
dec
scas
jg
pop
push
mov
dec
movsl
push
orl
pusha
cld
xor
movsl
icebp
or
leave
stos
pop
std
repnz
xchg
and
test
push
inc
pushf
pop
lahf
mov
xchg
or
orl
or
xchg
jge
ficoml
and
push
xor
pop
loopne
and
idivl
lcall
mov
daa
cld
jae
xchg
add
orl
push
or
jae
popf
leave
cmp
data16
sub
in
ret
or
ja
pop
mov
push
ret
sub
push
ja
adc
movb
xor
clc
jge
mov
movsl
mov
cmp
pop
fcompl
xchg
pop
pop
inc
rep
dec
push
stos
fidivrs
cmpl
add
inc
adc
push
loopne
sbb
sub
js
cmp
add
loop
lahf
movsb
addb
enter
je
lods
jp
inc
int
mov
loope
enter
orl
scas
test
add
jecxz
push
out
pusha
test
mov
cmp
outsb
fcomi
xchg
pushf
and
je
das
arpl
xchg
mov
jp
adc
add
sahf
jecxz
or
imul
scas
xor
aaa
pop
aaa
sbb
std
in
movb
adc
enter
loop
or
lods
xchg
loopne
push
push
xchg
adc
push
out
std
cltd
lods
xchg
movb
negb
fldt
push
pop
enter
imul
mov
nop
mov
aam
jl
jmp
fadd
pop
popa
jl
mov
xorl
jle
lods
pop
insb
add
notb
dec
movsb
loop
pop
movb
lds
and
dec
mulb
divb
fwait
out
hlt
or
decl
aas
aad
dec
cmp
aas
sub
das
lret
sbb
cmp
inc
imul
call
test
pusha
cld
out
mov
aam
jle
sbbb
xor
jp
addr16
fsubrl
lcall
cld
cmp
mov
stc
mov
stos
out
jp
mov
sti
outsb
insl
aam
mov
mov
xchg
inc
lcall
pop
outsb
jl
clc
addr16
lret
cmp
mov
xchg
cli
sti
pop
mov
add
pop
mov
imul
test
fcoms
data16
mov
pushf
cmpsl
push
stos
or
pop
in
sub
es
out
inc
inc
cmpsl
js
jne
and
daa
mov
push
je
fidivrs
out
add
jnp
and
xor
movsb
push
and
stc
adc
jbe
pop
pop
je
mov
mov
mov
lods
fidivs
div
pop
mov
jo
cli
pop
adc
mov
push
sbb
add
int
lock
mov
aam
ss
dec
or
add
int
lock
pop
add
out
push
push
push
sbb
add
movsl
push
inc
daa
loope
aad
jp
lret
lds
lods
mov
jae
cs
aam
ljmp
les
in
push
mov
lret
and
mov
clc
sub
repz
mov
mov
test
fistps
movsl
or
decb
inc
mov
std
mov
popf
lahf
push
pop
out
call
faddl
das
arpl
jp
pop
xor
insl
mov
in
andb
notb
jno
xor
add
mov
andb
pushf
sbb
push
inc
cmpsb
inc
scas
adc
ja
popa
out
mov
insl
mov
mov
cmp
push
popf
xchg
add
pop
out
add
call
add
jbe
pop
call
mov
xor
test
repnz
and
out
push
mov
outsl
inc
inc
sub
cltd
rolb
add
scas
test
sub
insl
mov
data16
xchg
fidivl
adcb
and
inc
pop
push
mov
stos
pop
movsl
cltd
mov
int
mov
cmp
sub
mov
sbb
mov
adcb
lock
cwtl
cmc
es
adc
cmpsb
call
mov
dec
mov
arpl
add
rcrl
repnz
notb
adc
pop
pop
aaa
or
cmp
inc
pop
dec
cmpsl
pop
js
xchg
mov
add
gs
sbb
inc
jbe
mov
jge
jge
or
sub
mov
sbb
lcall
xchg
sub
int3
leave
fisubrs
repnz
mov
sbb
subl
xor
adc
out
loope
mov
pop
xor
in
arpl
sbb
mov
repnz
loop
clc
mov
sub
lahf
jge
xorb
cmpsb
lock
cli
mov
push
movsb
ds
das
mov
push
mov
test
mov
push
xchg
pop
pop
cmpsb
xor
xor
mov
add
or
fs
cs
stos
pop
mov
es
mov
dec
ja
mov
xchg
aas
inc
sti
loope
das
push
dec
cmp
push
push
adc
out
lds
adc
push
loope
loop
push
enter
lock
aad
pop
addr16
pop
cmp
lds
mov
add
std
mov
inc
adcb
pushf
jns
sbb
out
cwtl
pop
int3
adc
rorb
cmp
fnsave
xor
aaa
pop
add
inc
in
xchg
and
mov
stos
stos
push
fsubrl
testl
adc
out
mov
mov
mov
fs
xchg
dec
inc
pop
int3
sub
mov
into
jmp
push
mov
scas
or
cwtl
dec
cmp
lds
out
sbb
pop
jb
popa
adc
mov
xchg
pop
loop
orb
mov
xchg
in
mov
insl
sarl
mov
aam
rcr
xchg
or
add
pusha
cs
rcl
xorl
lock
dec
stc
pushf
pushf
repnz
mov
add
aad
mov
or
leave
pusha
adc
inc
aas
std
cli
mov
mov
sub
add
imul
dec
sub
mov
cli
push
stos
xor
out
int3
sub
inc
hlt
lcall
test
push
sub
inc
clc
in
xchg
pop
jnp
lea
push
pop
outsl
cmp
mov
frstpm(287
fiaddl
daa
test
cs
je
int3
inc
mov
sub
in
scas
push
push
stos
add
test
jae
and
in
repz
pop
xor
shl
lock
jp
data16
push
xor
test
mov
sub
jg
stc
shr
push
addr16
das
js
fisttpl
lret
outsb
loope
mov
dec
jge
int3
lret
mov
mov
fmuls
sub
shll
xchg
fstl
repnz
push
mov
mov
les
adc
push
int3
jne
add
imul
xchg
movsb
les
mov
sbbb
andb
ljmp
in
mov
ficompl
aam
mov
mov
sbb
cli
mov
iret
scas
daa
push
mov
and
fsts
mov
lock
aaa
mov
sbb
mov
test
xor
lcall
scas
pop
inc
jns
cmpsl
insl
push
lds
fmull
xchg
fnstsw
jbe
xchg
ja
out
inc
cmpsl
cmpsb
jo
mov
add
dec
sub
push
lds
enter
mov
mov
mov
dec
sub
loopne
mov
cmp
cmp
enter
or
or
fsubrs
shlb
dec
ds
jne
pop
pusha
nop
inc
inc
xchg
movl
popa
xlat
fdivl
lock
and
pop
cmc
incb
xchg
mov
mov
inc
cmp
mov
ret
test
sub
lahf
push
sub
sub
sbb
adc
mov
dec
add
sub
jecxz
add
jns
xchg
sti
or
or
sbb
dec
sbb
sbb
mov
pop
int
sbbl
jae
repnz
mov
mov
out
jne
jl
fxch
ja
addr16
test
mov
jno
leave
stos
pop
push
add
fs
fmul
xchg
jmp
dec
adc
xchg
iret
dec
xchg
or
incl
lods
into
mov
add
mov
push
and
js
xchg
adc
rcll
add
cmp
inc
push
inc
loopne
aaa
push
cmp
cmp
mov
sbb
popa
xor
dec
adc
or
inc
cmp
dec
dec
mov
pop
add
js
push
xor
jmp
scas
pushf
fldl
lahf
andb
mov
jo
adc
pusha
fidivrs
stc
sbb
cmp
lahf
fcoml
adcl
jo
mov
test
mov
in
sbb
sbb
push
cmp
pop
pushl
xchg
lahf
mov
in
call
lahf
in
cmp
mov
cmp
lock
inc
fildll
push
fsts
fxch
mov
push
dec
inc
cmp
adc
enter
insb
pusha
mov
enter
imul
fwait
xchg
lea
sub
lcall
xchg
les
ds
add
mov
mov
lret
inc
arpl
pusha
add
pop
mov
sarl
jp
stos
les
cmp
repz
mov
push
clc
jo
add
adc
pop
stos
dec
inc
push
repz
arpl
loopne
ds
pop
mov
lahf
mov
sbb
mov
sbb
enter
loope
mov
inc
in
mov
arpl
mov
shrl
xchg
pop
shlb
adc
xchg
rcrb
insl
sbb
inc
pop
push
int
cmp
pop
xor
loop
xchg
in
inc
mov
pop
cwtl
into
lret
mov
fcomp
ja
pop
jne
loop
mov
xlat
out
adc
mov
out
pusha
inc
inc
fiaddl
mov
sbb
push
rcrb
inc
loope
test
sbb
xor
push
inc
dec
mov
push
std
inc
or
pop
mov
sub
push
out
inc
dec
outsl
in
mov
push
inc
xor
stos
pop
mov
jnp
pop
mov
or
cmp
jo
and
fwait
int
and
cmp
xor
dec
clc
cmpsl
mov
lret
lods
pop
push
cmp
fnstcw
dec
hlt
push
and
jae
jle
out
outsl
out
push
push
mov
xchg
mov
nop
subb
pop
push
jo
pop
mov
jo
xor
ja
es
lret
sbb
imul
dec
and
inc
mov
testb
jp
add
xor
mov
in
jae
sbb
lcall
pushf
sbb
pop
call
test
mov
fsubl
jg
dec
jbe
fisttpl
out
or
or
call
fildl
mov
adc
fmull
sub
andl
aad
mov
or
xchg
cmp
cltd
push
or
pop
inc
jmp
mov
jae
out
stc
xchg
shlb
cmc
push
lahf
push
inc
inc
lods
xor
dec
and
xor
or
inc
into
mov
loopne
cmp
lock
scas
popf
lock
mov
add
rolb
outsl
push
mov
sub
mov
push
lret
jnp
cld
pop
sbb
scas
lret
dec
mov
loope
pop
aam
mov
adc
jle
pop
in
out
xor
mov
aas
stos
fcoml
mov
out
das
or
pop
enter
lds
scas
pop
das
popf
jecxz
push
sub
stos
add
nop
mov
leave
pushf
pop
not
xor
mov
or
jno
test
lock
pushf
and
xor
dec
mov
and
mov
add
mov
into
pop
add
sub
ja
ret
adc
test
cmc
sbbb
call
aad
ja
aam
and
rorl
pop
dec
scas
cmp
add
sbb
movsb
insb
push
je
jnp
pause
and
cmp
dec
pop
ret
push
adc
mov
lds
pop
cwtl
out
cld
mov
xlat
into
pop
test
outsb
dec
add
ret
adc
int
pop
sub
xor
xchg
jp
pop
add
out
in
sti
lock
pop
dec
sti
xchg
or
mov
pop
sub
pop
pand
xchg
cmc
lds
and
push
out
and
mov
test
push
call
add
cmp
test
jge
decb
jmp
fwait
ds
jb
or
divb
js
insl
stc
or
fs
mov
lds
jns
or
add
mov
jle
or
sbbb
sbb
xchg
in
scas
cs
loope
test
xor
push
popf
dec
cli
dec
add
push
gs
pop
cmpsb
std
jge
stos
negl
mov
jp
cmp
jmp
mov
push
push
insb
or
cld
dec
movl
test
idivb
les
push
sbb
cld
addr16
xor
leave
aas
inc
xchg
mov
push
or
lahf
xchg
aas
pop
xchg
mov
scas
fsubr
out
sbb
daa
pop
lahf
int
stc
inc
mov
push
pop
js
push
fsubs
lock
out
mov
add
andl
test
inc
adc
addb
xor
inc
dec
and
jae
xchg
push
push
sub
movsl
test
je
add
xchg
in
cmc
fldt
test
jno
jge
inc
dec
inc
mov
iret
cmpsl
cld
mov
sub
dec
push
insl
sbb
aaa
dec
movsb
mov
cmp
and
js
push
rcrl
sub
jecxz
daa
fbld
sub
adc
or
mov
ja
jno
int3
jmp
fmuls
gs
dec
sbb
xchg
ds
bound
mov
bnd
lods
mov
add
addr16
daa
add
inc
push
adc
cmp
inc
xlat
mov
into
inc
in
push
ds
shll
cmp
mov
pop
shlb
imulb
cmpsl
sbb
mov
pop
mov
cmpsl
push
enter
xor
mov
mov
fcomps
push
in
push
mov
xchg
xchg
jo
pop
sbbb
mov
add
stos
inc
push
mov
shr
xor
pop
outsb
push
into
or
js
pushf
and
push
inc
cmp
bound
cmp
popa
and
fstps
cmpsb
pop
jbe
out
cli
sub
leave
push
in
lahf
test
dec
lret
divl
jae
sarl
andb
movsb
cmp
push
popf
shll
add
adc
dec
clc
mov
pop
mov
adc
add
out
test
inc
pusha
xor
lahf
jge
jmp
mov
loop
xor
mov
rcrl
hlt
and
and
insb
scas
inc
hlt
into
sub
popa
xchg
test
push
sub
cli
data16
push
fdivrl
icebp
dec
sysret
sbb
mov
sub
jne
sub
pushf
pushf
pop
jmp
inc
aam
into
or
outsb
test
inc
sub
aam
dec
or
pop
sub
daa
outsb
not
sub
xor
xor
int3
mov
aas
inc
ret
das
mov
out
lds
cmpsl
iret
stc
stos
jecxz
or
adc
mov
movsl
mov
lcall
pop
mov
mov
cli
scas
pop
cmp
mov
xlat
popf
push
xor
fsubs
sbb
jne
mov
aaa
mov
loope
ja
pop
dec
les
push
xchg
adc
mov
cltd
cmc
fdivl
xchg
movsb
xchg
mov
add
jns
xor
testl
push
popf
inc
mov
jmp
push
stc
push
sub
jg
mov
jns
push
imul
shll
repnz
shl
loope
xlat
xchg
xchg
pop
xchg
scas
cmp
jno
dec
sbb
stos
lahf
repnz
xchg
mov
imul
ficoml
aaa
data16
mov
mov
aas
hlt
lret
jne
and
push
mov
lahf
aam
lea
jge
daa
mov
mov
mov
cmp
ret
ret
adc
scas
sub
das
ljmp
cltd
sbb
stos
fstl
loope
mov
js,pn
cmp
xlat
sbb
pushf
mov
mov
cwtl
cs
push
fcmovnbe
subb
int
repz
out
mov
add
mov
jae
cmp
iret
sub
push
push
push
daa
lea
aaa
add
bound
daa
lret
pop
push
push
pop
mov
push
jg
in
arpl
jge
int
push
push
fstpl
mov
fcmovb
hlt
jb
dec
sub
xor
sbb
and
inc
loop
xor
add
push
jb
rcll
cwtl
cmc
iret
jns
inc
sub
sbb
mull
lret
ficoms
push
fs
test
enter
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
lods
push
push
and
xor
xchg
jp
loop
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
