mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
cmp
test
push
add
jmp
mov
xlat
les
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
mov
push
cli
xchg
sahf
add
sub
sbb
or
xchg
das
int
mov
xchg
out
sub
sarb
adc
adcb
mov
pop
or
das
bound
jge
jp
data16
jg
std
mov
mov
jg
sbb
adcb
int
sbb
cltd
das
js
adc
ja
outsb
cmc
jmp
insb
repz
cmp
repnz
lcall
sbbl
add
mov
and
aaa
jecxz
movsb
rorb
repnz
xchg
cmpsl
add
pop
jecxz
jb
inc
sbb
or
push
cmp
sbb
mov
jne
xchg
mov
cmp
adc
rcll
cmp
in
xchg
jecxz
push
test
enter
cmc
pop
mov
mov
fdiv
mov
xchg
mov
sub
cmpsb
and
mov
dec
push
sub
fsubrl
xor
outsb
dec
sti
add
xor
loop
outsl
mov
jp
sub
shrl
pop
xor
mov
mov
xchg
add
int
push
out
data16
insb
xchg
fnstcw
push
xor
mov
or
add
pop
adc
lds
ret
mov
repz
mov
jge
in
in
orb
in
das
jnp
or
inc
popf
fcmove
sbb
add
fiaddl
repnz
jb
stos
xchg
andb
xor
cli
cwtl
outsb
mov
shr
mov
cmp
ds
xchg
inc
xor
ret
mov
cmp
mov
stos
mov
mov
inc
hlt
lret
cmpsb
pop
jae
push
or
fidivrl
add
inc
cmp
ret
mov
xor
jecxz
adc
sub
sahf
enter
mov
dec
mov
mov
in
or
pop
outsb
inc
ret
sbb
ror
out
push
out
hlt
mov
jbe
mov
daa
pop
add
jns
mov
lret
loopne
in
inc
mov
xor
jecxz
testb
jecxz
dec
push
push
mov
inc
stc
sbb
xor
sti
fsubrs
and
aam
adc
xchg
ljmp
pop
ret
pop
dec
outsl
mov
sti
mov
xlat
ret
dec
mov
xchg
stos
popa
dec
int3
pusha
push
adc
mov
sub
mov
inc
adc
add
scas
scas
repz
jecxz
inc
scas
cld
jp
movsl
add
jge
xor
mov
xchg
sub
js
push
add
push
mov
stos
cmp
jb
adc
jmp
mov
int
push
bound
lahf
and
cld
nop
scas
adc
cwtl
pusha
cld
xor
push
and
repnz
cltd
out
imul
and
ss
mov
push
sahf
cpuid
jle
fimull
dec
xchg
xchg
mov
xor
inc
frstor
push
inc
cmp
mov
arpl
lods
out
dec
add
jo
sub
push
push
ja
or
and
jmp
mov
in
fsts
mov
push
pusha
iret
mov
pushf
xlat
loop
imul
mov
stos
out
out
enter
mov
xchg
scas
hlt
pop
imul
out
out
lds
add
stos
mov
mov
add
or
addr16
cmpsb
fdivs
sub
xchg
pop
fildl
inc
push
rclb
cmpsb
pop
leave
inc
int
lret
cmpsb
scas
jecxz
push
cmp
lods
pusha
xor
dec
dec
sub
pop
mov
and
aam
mov
gs
ss
cli
pop
mov
or
scas
ret
inc
add
sarb
push
stos
loopne
dec
sub
dec
push
sub
or
adcl
sub
sti
xchg
je
fcompl
or
mov
jmp
xor
lea
idivl
mov
ljmp
dec
adc
sub
mov
test
sti
mov
jle
loopne
and
adcb
idivl
cld
pop
jge
add
in
xchg
mov
xor
mov
mov
push
inc
sbb
mov
out
test
dec
aas
jnp
lds
int
mov
insl
sti
in
adc
add
inc
lret
cld
int
xchg
rcll
bswap
ds
or
add
xlat
pop
pop
test
push
nop
rorl
xor
inc
cmp
rorb
clc
push
dec
insb
mov
xor
jb
mov
push
pop
xchg
or
xchg
ret
out
out
ficoml
xor
testb
movsb
dec
shl
mov
adc
inc
andl
inc
dec
dec
addr16
mov
cmpb
cmpb
fstl
loop
xor
push
dec
fildll
mov
in
mov
notb
ja
scas
and
stos
fistl
xor
lods
scas
mov
inc
stos
iret
lcall
es
jmp
call
enter
add
jp
les
iret
inc
fldenv
shlb
sub
pop
mulb
push
enter
mov
or
ds
jbe
pop
fmuls
cmp
jno
lahf
daa
mov
test
and
push
iret
push
outsb
mov
cld
push
stos
sub
lahf
mov
sti
popf
add
repz
in
fmulp
add
cmpl
and
jecxz
or
idivb
dec
jmp
and
ja
xorl
or
out
inc
pushf
jl
pop
xlat
rclb
hlt
mov
jmp
aad
inc
dec
add
push
sbb
fwait
aam
push
test
mov
add
sub
sbb
and
jmp
inc
pusha
fsubr
fwait
lret
popa
xchg
jp
mov
mov
xor
or
mov
ficoml
insb
add
out
or
js
jecxz
mov
ret
loopne
imul
inc
inc
cld
out
jmp
cwtl
les
out
and
lds
mov
bound
inc
jns
adc
call
scas
dec
cmp
mov
fwait
hlt
repnz
lahf
out
push
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
cmovge
ret
shll
jg
js
push
push
jnp
pop
pop
sub
or
sub
outsl
add
call
jecxz
inc
into
dec
add
mov
dec
dec
loope
mov
xchg
dec
in
fdivrl
add
and
sub
add
xor
mov
insl
jo
sub
addb
xchg
pusha
pop
jle
ret
in
paddsb
shr
jmp
pop
loopne
mov
dec
jno
dec
idivl
ljmp
imul
imul
pop
int3
cld
adc
iret
inc
lcall
shrl
out
mov
orl
icebp
call
ror
movsl
pop
mov
dec
jne
mov
int3
dec
jmp
data16
xlat
addr16
jnp
mov
xchg
add
cmp
cmc
ljmp
push
fisttpll
popf
xor
scas
dec
lea
and
xor
xlat
xchg
and
xchg
mov
add
jp
mov
repnz
fdivl
sub
fcoml
push
cmc
fldt
cmp
and
lahf
xor
test
push
cwtl
pop
fnstcw
ja
dec
pop
mov
ja
test
mov
mov
ja
cmpsb
cs
or
sub
cmp
inc
mov
adc
xor
loopne
xchg
lahf
adc
lds
and
mov
pushl
adc
out
pop
mov
sbb
sbb
mov
dec
popa
mov
in
sbbb
cmp
into
scas
sbb
fmuls
daa
lret
das
pop
test
stos
jmp
ffreep
fs
adc
pop
stc
push
xor
xchg
push
pop
insl
mov
and
shr
dec
lahf
xor
ljmp
mov
or
adc
fsub
sbb
mov
flds
repnz
xchg
push
leave
loope
dec
sub
lea
faddl
dec
scas
cmp
and
lds
push
or
lahf
divb
out
sarb
in
cmp
mov
push
pop
sahf
jle
mov
cltd
mov
dec
mov
sbb
or
xor
xchg
mov
icebp
jmp
pop
inc
lods
pushf
cltd
out
lcall
test
fcmovnb
aaa
icebp
inc
lds
aaa
lods
or
rcll
mov
movb
cmp
and
ja
or
int3
ret
aas
jmp
push
cwtl
addl
mov
loop
cmp
lahf
mov
adc
ret
cmp
test
sub
inc
pop
and
xor
test
jno
lock
dec
cmp
out
push
imul
out
mov
cmp
nop
lods
out
push
pop
mov
pop
sub
xchg
or
out
sbb
xor
scas
sub
addl
push
ret
fidivrs
xchg
cmpsb
daa
movsl
push
xchg
aaa
adcb
ret
xor
out
cmp
mov
xchg
inc
stos
mov
xchg
in
jno
xor
inc
sub
nop
pop
xor
adc
cmc
dec
loope
js
push
out
adc
mov
sbb
insl
jb
test
das
add
fnsave
sub
inc
adc
xchg
xor
cwtl
mov
cmp
inc
push
pusha
into
enter
mov
pop
into
mov
jmp
xchg
sbb
xor
jbe
ret
xchg
cld
lcall
lods
stc
jnp
out
fs
jb
andl
cli
or
test
pop
adc
popl
scas
stos
mov
rcl
cmp
in
addr16
dec
rol
xor
inc
fs
and
decb
inc
mov
jmp
add
rclb
fsubs
pop
mov
adcb
cld
sti
lahf
lahf
out
pop
or
fxch
lahf
mov
pop
test
adc
cli
daa
insl
push
mov
inc
jo
loopne
add
aaa
jl
add
sub
add
pop
fwait
inc
data16
pop
push
pop
bound
outsl
xchg
or
fcmove
inc
bound
or
repz
adc
cli
jl
dec
or
mov
addr16
jmp
add
jg
arpl
dec
jno
ljmp
arpl
js
jl
sahf
mov
xchg
xchg
mov
push
pop
out
mov
sub
cmpsb
shrb
sub
sbb
or
add
jns
inc
data16
and
ds
pop
push
ret
cltd
push
aas
mov
sub
lea
fidivrl
cld
push
or
sbb
jge
lahf
sbb
test
cmp
or
mov
mov
movb
jge
adc
fisttpll
jb
popf
inc
xchg
ffree
stos
shlb
mov
adc
bound
test
mov
sub
push
lods
in
pop
popa
outsb
inc
fdivs
aaa
test
std
xor
or
inc
cmp
dec
sub
ja
jp
inc
xor
inc
xchg
es
pop
out
push
sub
or
xchg
les
mov
cld
adc
inc
je
xor
cmpsb
adcl
adc
xchg
or
mov
out
inc
insb
pop
jmp
cmp
mov
pop
mov
int3
ja
add
sbb
loopne
loop
int
mov
xchg
xorb
in
mov
cmpsb
mov
or
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
bswap
shrb
ljmp
add
or
fldt
cld
stc
jno
fistps
push
inc
int
mov
imul
push
scas
add
xchg
fwait
decl
pusha
push
sahf
jnp
mov
push
scas
cmp
dec
inc
in
fimull
mov
mov
mov
inc
push
test
jmp
stc
mov
arpl
sub
es
sub
pop
cmc
push
push
jle
scas
subl
enter
jp
jbe
cmp
icebp
mov
jns
inc
loope
mov
fs
fs
add
shrb
pusha
sbb
xor
fnstenv
fnstcw
fimull
xchg
cwtl
test
and
jmp
and
push
lds
sbb
dec
jp
test
pop
test
xchg
lods
xchg
fs
cmp
or
mov
mov
repz
mov
xor
pop
sahf
or
in
pushf
xor
sub
pop
mov
jl
outsl
add
xorb
jno
sbb
or
sub
sbb
mov
aam
mov
scas
add
push
aam
repz
sbb
je
sub
pop
or
bound
dec
fwait
push
jge
jns
movsl
xchg
mov
jl
sbb
daa
push
leave
imul
popa
enter
fbstp
jge
shlb
add
movsb
dec
add
dec
fs
add
std
lcall
loope
stc
ljmp
rolb
mov
or
mov
inc
ret
jnp
jmp
lock
xor
fs
jmp
aaa
in
lock
pop
mov
andb
jns
adc
mov
test
sahf
xor
shrb
loope
xor
lret
in
les
lock
cltd
fstl
and
xor
enter
jp
data16
addr16
sbbl
clc
es
cmp
loop
roll
shlb
jo
aaa
mov
insb
imul
aad
cmc
xchg
lret
subb
and
scas
inc
fsubs
jl
ret
push
jne
insl
xchg
test
stos
sahf
pop
cltd
cli
and
pop
jo
pop
pop
outsb
mov
xchg
lock
mov
jge
testl
adc
or
mov
dec
jl
mov
stos
rcl
mov
xor
cmp
lahf
mov
loopne
inc
or
stos
inc
icebp
or
mov
stos
cmp
mov
push
push
xchg
mov
or
adc
pop
mov
call
or
inc
add
adc
addb
icebp
push
cmp
jb
adc
jbe
sub
mov
xlat
mov
test
sub
shrb
inc
popf
mov
jae
into
xchg
sub
sub
and
lds
inc
push
scas
jmp
dec
insb
imul
xchg
lods
jo
or
push
orb
xchg
sbb
sbb
and
in
pop
jecxz
pop
mov
mov
mov
cwtl
pop
or
fldl
clc
jo
mov
mov
mov
sbb
cmc
pop
mov
loopne
jecxz
sarb
mov
cmp
lock
lcall
imul
mov
jae
subps
adc
and
ds
push
and
mull
jo
divl
push
gs
push
push
add
or
push
rcrb
sbb
int3
rcr
adc
or
jae
hlt
cmp
pop
scas
pop
adc
and
leave
and
push
adc
inc
in
sbb
das
dec
push
out
test
jb
sub
push
scas
outsl
mov
push
cmp
add
pushf
bnd
sti
pop
into
cmp
xchg
cwtl
xchg
andl
jge
and
enter
dec
and
dec
sub
pop
pop
pop
mov
out
jb
push
stos
xor
hlt
mov
push
jne
push
adc
sbb
in
loopne
cmc
push
xorl
pop
lods
jb
add
rorl
out
push
and
js
xor
xchg
cmp
loopne
adc
xchg
mov
insb
leave
pop
add
bound
movsl
flds
cmp
notb
mov
arpl
or
push
mov
adc
daa
and
int
jge
inc
rol
cmpsb
xor
mov
xchg
test
shll
test
sub
or
inc
or
push
pop
inc
daa
js
lret
std
push
xor
cmpsl
mov
mov
push
jge
bound
in
les
ret
xchg
in
sub
adcl
es
in
inc
fstpt
jbe
aad
inc
scas
shll
sub
test
cmpsb
dec
push
and
popf
in
imulb
push
addr16
sub
into
mov
sub
shrl
xchg
leave
stos
mov
sub
icebp
jg
insb
les
jp
mov
add
dec
inc
sbb
sbb
xchg
jg
jmp
clc
push
cmp
lea
cli
cmpps
sub
add
mov
add
adc
cmp
sahf
push
aam
push
test
cmp
xchg
xchg
jb
mov
lock
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
inc
mov
pinsrw
sarb
or
hlt
or
dec
sbb
and
cmp
stos
insb
mov
mov
scas
mov
outsb
push
pop
mul
xchg
cmp
push
inc
adc
inc
shl
add
mov
push
xchg
imul
data16
sub
in
aas
pop
cmp
mov
and
pop
xor
or
repnz
dec
out
insl
adc
jp
cmpsb
out
cmp
pinsrw
sbb
or
and
pop
in
ret
jmp
inc
xchg
femms
bound
fnstsw
rolb
pop
xor
push
pop
xor
sbb
lods
aaa
mov
jmp
decl
mov
inc
sbb
ja
jae
loopne
fcom
sub
lret
pop
sbb
mov
shl
jl
sbb
int
cmpsb
daa
imul
add
lret
cmp
and
xor
test
push
jp
ja
push
imul
push
js
testl
outsb
push
mov
jo
adc
lahf
out
sti
push
push
jecxz
adc
add
inc
and
jg
xchg
jl
dec
push
push
out
xor
push
or
add
xchg
mov
fbstp
outsl
out
stos
sbb
cwtl
add
addl
les
lds
xchg
jecxz
out
mov
aad
testl
loop
sub
fs
in
inc
push
or
adc
cmp
jge
jecxz
push
lock
mov
xchg
test
sbb
shll
sub
dec
ljmp
jg
mov
jge
lret
in
jbe
xor
lods
mov
push
les
inc
test
pop
rorb
xorps
xor
insl
in
jo
int
in
cmp
adc
xchg
ds
sbb
xorb
mov
fldcw
jbe
cmp
mov
sub
arpl
cmc
add
inc
std
aam
outsl
pusha
fldenv
push
out
jae
into
xchg
push
adc
or
adc
adc
std
inc
cmpsl
iret
out
sbb
push
add
in
imulb
xor
fmull
or
ja
incb
inc
xchg
or
xor
cmp
inc
arpl
arpl
mov
lea
fs
test
and
jmp
inc
mov
xor
mov
mov
fdivrs
and
clc
fisubrs
pop
cmp
daa
dec
movsb
ds
rcrb
pop
xchg
test
sbb
xor
mov
xor
cmp
xor
pop
sbb
stos
out
orb
or
mov
inc
lcall
shrb
out
pop
add
cld
adc
adcb
jne
push
or
push
iret
adc
jo
cli
or
ret
pop
push
jmp
adc
pop
adc
pop
pop
dec
dec
dec
clc
popf
pmuludq
das
sub
hlt
pop
daa
and
jmp
iret
and
mov
ret
rorb
adc
scas
pop
inc
cmp
pop
mov
scas
push
fnstenv
jp
lock
sub
and
rol
or
sti
xchg
cs
into
cld
pop
xor
testl
rcr
int
cmp
adc
sbb
mov
adc
push
fdivrl
sbb
int
rcrb
dec
xor
je
aam
lret
add
mov
mov
sub
sub
cmp
and
leave
lcall
or
jl
imul
gs
push
insl
mov
call
jmp
dec
inc
arpl
mov
mov
adcb
out
jmp
enter
fs
pop
fimuls
lds
pop
inc
in
mov
mov
ds
add
addr16
test
rorl
mov
lret
lock
loop
xor
aam
std
test
cmp
adc
add
enter
cmp
jl
ds
out
or
dec
sub
ret
dec
dec
fdivs
push
in
xchg
jle
nop
lahf
iret
popf
aaa
call
mov
mov
or
aad
push
rcll
cmp
inc
push
xchg
enter
scas
pop
jmp
xchg
push
cmpsl
sub
adc
daa
push
cmpsl
and
mov
into
fdivr
nop
inc
and
push
jno,pt
and
xlat
mov
cmp
retw
ljmp
push
lret
lahf
scas
or
clc
push
into
pop
dec
outsl
xlat
mov
and
test
dec
mov
push
outsb
movsb
pop
pop
movsl
dec
adc
fnsave
sub
cmp
cmpsb
outsb
shlb
pusha
in
push
mov
scas
movsb
xor
lahf
cmp
mov
cmpsb
sar
mov
fs
iret
shll
xchg
cmpsb
inc
fwait
pusha
xor
fiaddl
xor
xchg
xchg
loopne
xchg
jmp
sub
fdivs
or
addr16
sbb
movsl
push
dec
shlb
lret
outsl
mov
movsb
dec
add
jg
repz
cmpsl
mov
iret
sbb
mov
stc
pop
loop
and
jecxz
icebp
xchg
pop
lcall
add
sub
aas
rcl
scas
inc
mov
into
hlt
mov
popa
js
cmp
inc
jle
push
in
pop
les
mov
jmp
sbb
push
lahf
negb
push
xchg
popf
mov
mov
pusha
stos
or
pop
mov
mov
push
adc
mov
hlt
je
repz
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
je
xchg
loop
pinsrw
push
mov
loopne,pn
xor
dec
aam
xlat
fsts
cmp
dec
cmp
sbb
movsl
adc
xchg
loop
xor
cmpsb
sbbb
rorb
inc
push
ja
sbb
adc
imul
addb
inc
stc
sbb
mov
xchg
imul
inc
push
dec
xchg
data16
pusha
cli
lcall
testb
dec
clc
inc
pop
sti
sbb
ficompl
push
adc
or
add
fstl
stos
add
jmp
cmp
stos
ja
jns
insb
out
orb
imul
mov
adc
cmp
jle
arpl
mov
mov
add
clc
push
sub
or
lock
ret
mov
pop
pop
pop
ss
pop
rclb
push
out
icebp
sub
popa
imul
sub
mov
mov
jno
xor
out
sub
ds
test
pop
jns
xchg
in
stos
popa
push
inc
repnz
or
sub
nop
mov
clc
lret
in
adc
lcall
push
push
xchg
out
or
mov
lret
pushl
stc
int
jb
pop
push
or
in
lcall
jg
mov
dec
fwait
mov
hlt
push
out
sbb
mov
addr16
scas
lcall
mov
icebp
mov
gs
testl
cli
sub
cmpsb
cmp
xchg
ljmp
push
sub
cmp
dec
int
movsb
jle
fwait
lods
das
xchg
pop
test
xor
cmp
fstpt
jmp
test
push
pop
inc
jnp
xchg
push
xchg
pop
lea
pop
inc
push
leave
movsb
fisubl
adc
cld
insb
jne
jne
adc
sbb
lcall
push
and
cwtl
dec
mov
mov
and
mov
push
cld
xchg
mov
cmpsb
fmull
adc
popa
mov
out
cmp
adc
call
xchg
fcmovb
ret
mov
add
jmp
xchg
dec
cwtl
xchg
push
push
fadds
mov
xor
inc
mov
sbb
jnp
pusha
enter
jae
mov
push
insl
pop
cmpsl
xor
sbb
cmpl
fstl
repnz
add
xchg
xchg
xchg
test
pop
mov
testb
xor
aam
stos
xchg
lahf
fnstsw
sub
ret
daa
in
jecxz
ret
out
lock
rcll
mov
add
mov
inc
adc
xchg
inc
mov
insl
outsb
xor
mov
das
xchg
lods
dec
enter
xor
sbb
fisubs
inc
inc
loopne
fs
sahf
gs
inc
aam
inc
orb
sub
nop
sti
inc
cmp
cmp
xchg
testl
es
fnstenv
pop
das
jl
fimull
imul
or
imul
ljmp
dec
jb
ffree
push
cmp
jne
xlat
jl
in
std
fmulp
call
dec
or
fsubl
push
mov
imul
add
test
jle
pop
fs
arpl
inc
bound
inc
adc
mov
add
loopne
xchg
scas
dec
out
int
das
push
pushf
in
add
or
inc
jl
fildl
jge
ret
icebp
cmp
mov
addb
arpl
rcrl
test
dec
in
xchg
in
std
ljmp
rcr
xchg
and
nop
mov
mov
lods
sahf
out
jp
or
clc
in
in
ret
push
cmp
insb
loop
push
call
cmp
es
inc
cmp
adc
mov
jecxz
fistl
outsb
dec
testl
jo
xchg
cmp
pop
ja
or
cmp
cmpsl
xchg
loop
or
mov
mov
add
iret
dec
movsl
jae
push
loop
add
lods
inc
xchg
sbb
test
sub
pop
cmpsl
push
sbb
rdmsr
adc
ds
mov
jmp
sbb
cmp
test
shl
mov
jecxz
negl
dec
jo
out
jns
pusha
movsl
arpl
lret
loope
cmp
dec
in
repnz
test
push
gs
enter
cmp
inc
fisubrs
das
repnz
ret
xchg
mov
jmp
pop
cmpsb
push
jge,pn
mov
test
js
inc
mov
movsb
pop
sub
gs
push
and
xor
xchg
stos
dec
es
cltd
sti
adc
and
fldcw
cmc
add
pop
leave
cmp
das
repz
fdivrs
pop
and
lcall
into
mov
imul
movsb
adc
sub
mov
sbb
jne
push
in
rol
movsl
sbb
clc
inc
cmp
mov
adc
out
and
scas
sbb
cli
xchg
loopne
addl
aam
fstpt
dec
sub
fs
jo
addb
cmpl
sub
adc
xor
dec
xorb
jnp
dec
jle
add
adc
iret
push
inc
adc
or
sub
push
jle
and
inc
mov
xor
dec
and
inc
stos
or
mov
arpl
dec
mov
jl
mov
stos
and
inc
cmpsl
loope
idivb
addr16
or
push
jle
ret
or
adc
hlt
push
lret
mov
sub
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
push
xchg
rorb
pinsrw
inc
push
inc
nop
sbb
lret
ds
in
dec
js
dec
pop
call
into
fsubs
mov
insl
fsubrs
or
sbbb
cmc
xchg
lcall
sarl
sub
shrl
push
add
gs
pop
mov
stc
js
adc
push
mov
cmpsb
stc
jp
push
pop
sarb
popa
stos
add
ljmp
inc
gs
fisubrs
xor
cli
push
stos
out
or
pop
sub
mov
push
inc
lahf
adc
nop
mov
add
sub
push
xchg
mov
push
cmpsl
test
in
mov
dec
mov
ja
mov
les
mov
je
rclb
fsubr
lcall
das
mov
ds
aad
sti
jne
ret
sbb
and
xchg
std
imul
in
idiv
int
mov
mov
pop
push
pop
pop
push
or
inc
xchg
popa
lds
dec
lock
aam
dec
xchg
repz
xor
and
or
lods
imul
dec
cmpsb
mov
dec
frstor
cmp
mulb
mov
sbb
ljmp
mov
cld
jge
push
xlat
dec
sti
jl
mov
dec
repz
mov
insb
cs
mov
mov
js
jae
jle
xor
test
pop
push
inc
xchg
mov
fistpll
sub
cmp
cmpsb
gs
xor
inc
loope
dec
pusha
jno
fwait
addr16
jbe
push
flds
cmpsb
ds
arpl
daa
pushf
ret
cmp
js
mov
je
loop
mov
and
insb
orl
dec
push
in
sub
out
pop
insl
orb
mov
pop
js
lahf
hlt
dec
pop
nop
adc
scas
push
sub
lcall
mov
or
pusha
outsl
lea
mov
xchg
pop
bound
add
or
mov
mov
std
leave
inc
cld
iret
es
rolb
testl
out
sbb
pop
lods
cmc
lock
test
call
mov
in
ljmp
mov
jl
push
sbb
mov
mov
ror
mov
and
mov
nop
inc
mov
dec
or
and
outsl
pop
addr16
insb
sbb
xor
cmp
jl
pusha
imul
xor
outsb
jl
mov
out
mov
sub
adc
popf
mov
mov
cmp
leave
bound
js
adc
leave
mov
fnstenv
dec
mov
daa
nop
iret
lret
xorb
add
xor
stos
xor
sub
push
or
ja
ja
jno
xchg
cmp
jg
sbb
lea
adc
test
jns
out
jae
push
ret
mov
lret
in
fwait
fwait
dec
or
or
dec
push
test
xor
ja
adc
sub
cmpsb
fcoml
cld
and
push
int3
cmp
mov
adc
xchg
repz
lahf
stos
sub
xor
mov
fldenv
dec
lcall
xchg
cltd
repnz
sahf
pop
mov
aam
pop
pop
dec
int
adc
aam
xor
inc
imul
push
or
pop
pushf
cli
mov
adc
dec
out
loopne
pop
add
repnz
jg
pushf
repnz
es
push
aam
mov
mov
aas
push
dec
or
cmp
ret
xchg
out
mov
and
add
jns
xor
sub
scas
inc
push
inc
int3
insb
inc
xor
ds
out
gs
adc
shll
popa
xchg
push
ja
fld
mov
rcrl
scas
stc
fstp
xchg
push
and
repz
mov
and
mov
popa
repz
insl
xchg
shlb
rorb
outsl
xchg
scas
out
fildl
sub
jmp
sub
cltd
jl
rorb
clc
pop
mov
inc
outsl
and
lret
xor
arpl
ret
pop
pop
insb
jmp
dec
jg
loop
clc
sbb
mov
aam
push
jbe
mov
popl
or
out
mov
inc
push
inc
sahf
pop
sub
jae
sub
xor
imull
inc
loope
in
cltd
lods
jb
arpl
mov
outsl
fsts
pop
lahf
cmpsb
out
xchg
aad
xchg
push
insb
aad
popf
pop
xchg
shrl
push
pop
pop
lock
mov
cmp
dec
xchg
or
or
mov
inc
add
in
and
pop
int3
and
ret
loop
sbb
xchg
sub
js
dec
pop
jno
sub
sbb
sbbl
mov
repz
movb
daa
repz
arpl
inc
jae
sar
and
mov
and
rcl
loope
lea
das
cmp
movsl
in
outsb
mov
sbb
add
push
sbb
insb
sbb
jg
lcall
inc
mov
sub
mov
xlat
stc
loop
pop
xchg
cltd
lcall
add
loopne
fstps
mov
mov
ret
cli
push
cmp
lea
mov
add
ja
ret
push
imul
arpl
in
cmpsb
cmp
xor
mov
insl
push
add
pop
aaa
movsb
lods
loope
out
push
xchg
pop
mov
cld
fcomi
outsl
subb
push
fucomp
jp
enter
pop
mov
stos
xchg
rdpmc
popf
jo
lahf
jo
cli
fcomip
mov
mov
add
ret
adc
pop
pop
test
aaa
jmp
loop
aaa
rsm
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
stc
les
pinsrw
movntps
xor
xchg
insb
imul
outsb
lahf
call
fmuls
sub
push
lret
cs
fisttps
xchg
pop
lret
cwtl
mov
xor
popl
cmp
mov
int
out
loopne
xchg
inc
movsb
fisubrl
push
add
nop
mov
mov
jbe
lods
mov
xchg
les
fisttps
jno
rclb
in
scas
shll
mov
fucom
je
xchg
outsl
mov
pop
jp
aaa
in
xchg
cld
cmp
lods
inc
inc
cmp
pop
aaa
ret
jns
and
mov
xchg
subb
enter
aaa
shll
es
out
push
add
decb
lret
leave
pop
test
jae
adc
fsubrs
pop
into
imul
lods
pop
adc
mov
sbb
add
jno
jo
addr16
xor
adcl
incb
jge
ss
fwait
aas
cmp
arpl
test
out
imul
lods
fwait
out
mov
pop
sbb
push
push
sub
in
mov
les
xor
inc
aad
and
out
imul
sub
mov
aas
jbe
movsb
dec
stc
daa
cmp
cmp
add
adc
add
pop
test
sub
sbb
adcb
mov
cld
lea
ja
cmp
fnstsw
adc
stc
in
push
and
subb
cmpsb
stc
sub
and
movaps
and
lcall
adc
mov
loopne
jae
nop
cmpsl
and
mov
int3
adc
xor
pop
rcrl
sahf
repnz
js
cltd
jae
popl
push
insb
push
ljmp
repnz
adc
jg
pop
cmc
sbb
push
push
inc
pop
lret
fsts
sub
stc
xor
mov
sub
push
cld
loope
jmp
shl
add
lahf
out
sub
inc
mov
lcall
pop
mov
clc
ja
fistl
add
mov
adc
and
dec
mov
push
mov
sarb
gs
shrl
cmpsl
or
hlt
rcll
es
adcb
jl
pop
test
jl
je
xor
ret
or
inc
sub
std
pop
and
push
rclb
inc
add
fistl
fsub
sub
push
inc
xor
mov
adc
dec
xchg
jns
imul
fisubs
je
mov
out
xchg
mov
mov
loopne
jnp
mov
jmp
js
pop
xchg
cmp
bound
push
test
int
das
pusha
pop
movsl
adc
sub
stos
jmp
arpl
test
push
jno
cmp
rclb
pop
cld
js
aam
shl
pop
push
rclb
add
dec
push
insb
xchg
shll
mov
push
mov
outsl
xor
rcrb
dec
mov
sbb
jle
inc
adc
mov
sub
jecxz
movsl
cmp
sarl
pop
insb
jno
xor
test
xlat
shll
inc
xor
push
lret
mov
mov
sbb
idivl
mov
xor
cmpsl
lret
xchg
cs
sbb
xor
push
je
and
push
sysret
or
or
ss
adc
inc
jg
fildl
push
push
sbb
aad
dec
dec
push
fstpt
mov
sub
test
pop
sbb
jecxz
rcrb
fsubrs
xchg
insl
inc
shl
test
cmp
inc
inc
aam
shll
jl
pop
pop
in
jmp
jae
or
push
sbb
add
call
push
push
inc
add
or
or
pushf
adc
mov
cmpsl
xchg
imul
insl
enter
or
popf
fldl
add
push
add
push
ficomps
into
fisttpl
hlt
orl
dec
frstor
addb
jecxz
jnp
cwtl
sub
int3
mov
cltd
jae
jnp
in
add
xor
mov
lret
out
add
stos
sbb
dec
dec
repnz
addr16
dec
mov
fwait
push
and
push
iret
js
cmpsl
mov
mov
xchg
aad
jno
sbb
aam
adc
jg
pop
inc
and
adc
mov
or
frstor
ret
fwait
jecxz
add
xchg
fsubrl
push
sbb
aam
and
test
xor
ror
mov
ss
ljmp
fldt
popa
or
mov
fnstsw
das
aam
mov
cmpsl
outsl
inc
sahf
xchg
xchg
sti
scas
cmpsl
lss
stos
pop
pusha
repz
aam
dec
cmpsl
mov
repnz
push
scas
es
movsb
and
repz
mov
fdivl
pop
nop
inc
pop
cmp
or
aad
lods
mov
and
orl
lock
xchg
fwait
mov
je
and
inc
sub
shlb
push
jae
sbb
jns
dec
fldcw
sub
imul
jno
jb
mov
mov
dec
xlat
push
out
test
push
mov
xor
dec
sub
dec
add
mov
sub
jmp
cmpb
outsl
jp
fisubrs
into
addl
lea
ret
insb
insl
sub
add
dec
push
shrl
lahf
mov
jbe
fdivs
enter
loope
xchg
out
adc
lahf
mov
loop
xor
loop
test
push
ficoms
jae
inc
xchg
mov
jp
and
inc
mov
dec
andb
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
xchg
mov
pinsrw
punpckhbw
pop
push
mov
sbb
jb
pop
mov
pop
cmp
and
jne
add
mov
clc
sti
inc
out
xor
xor
lret
sbb
cmp
push
fisttpll
adc
or
inc
dec
push
mov
mov
inc
push
xor
fdivrl
adc
cli
mov
push
outsb
mov
je
in
xor
imul
and
and
data16
mov
imul
pop
mov
adc
mov
mov
adc
mov
add
mov
ljmp
loopne
inc
test
ret
mov
out
push
adc
xchg
popf
cmpl
pop
insl
in
jecxz
or
aad
add
inc
stos
mov
nop
jl
mov
mov
inc
loope
fldcw
mov
fmul
push
into
repz
orl
adc
test
int3
xor
data16
out
das
pop
roll
enter
jns
loopne
jae
insb
and
ffreep
cwtl
pop
fcom
sub
add
orb
add
jecxz
cmc
xchg
nop
cmp
pop
lds
test
cmp
dec
mov
je
push
mov
pop
cmp
jns
xchg
ret
sbb
adcb
fistpll
inc
aas
dec
or
fcoms
cwtl
js
xor
inc
dec
shll
mov
lret
repz
push
sub
and
imul
clc
jmp
pop
dec
push
mov
inc
jae
fisubrl
stos
popf
stc
pop
lret
xor
lret
adc
inc
jae
mov
push
test
lds
push
ret
push
xchg
pop
cvtps2pi
out
inc
inc
jecxz
cmp
and
lods
hlt
adc
movsb
sub
xor
push
fstl
inc
or
daa
add
and
ljmp
jb
sbb
pop
inc
push
pop
jns
jae
push
into
xchg
scas
out
pop
iret
std
add
sbb
jae
sbb
xor
mov
xor
gs
pop
jo
iret
cmp
push
aas
mov
les
decb
test
mov
mov
dec
inc
nop
cmp
xchg
jo
and
jbe
jnp
mov
mov
lods
push
dec
xor
cmpsl
rcrl
imul
lds
pop
scas
mov
inc
and
dec
mov
and
loope
sub
xchg
add
scas
sbb
movsb
mov
jmp
dec
add
icebp
movl
or
addr16
popf
in
sti
mov
ret
ss
ss
or
loope
jo
jmp
xchg
adc
out
mov
jns
pop
fs
mov
je
sub
pop
jno
xchg
stc
mov
adc
inc
push
orb
lods
dec
and
cltd
and
push
out
scas
adc
xchg
lock
mov
addr16
cltd
mov
out
out
cmpsl
mov
fwait
or
out
jge
in
frstor
out
inc
adc
jmp
mov
xor
popa
xor
add
cmp
int
pop
int
dec
jo
addr16
movsb
or
or
repz
xor
fdivrp
dec
mov
adc
pop
and
sub
push
mov
lret
in
mov
xor
inc
scas
ret
sahf
data16
sub
push
cmp
push
add
mov
mov
dec
dec
or
loope
repnz
mov
or
jbe
mov
mov
mov
lock
lret
cmpsl
pop
jno
scas
cs
lods
insb
sarb
fcmovu
jle
jae
sbb
mov
xor
jmp
scas
cli
jno
sbb
outsb
adc
fwait
lods
lcall
mov
or
and
aas
push
jno
loope
cmp
sbb
in
fwait
mov
pop
test
cmpsl
dec
in
les
jbe
jb
popa
lahf
xlat
enter
sbb
cs
pop
jbe
fbstp
stos
xchg
inc
sbb
cld
into
sub
sub
insb
xor
iret
test
popa
addr16
repz
push
scas
dec
jnp
sbb
addl
int3
mov
data16
icebp
push
clc
fimuls
push
je
dec
xlat
andl
jle
mov
mov
cmp
aad
or
lock
stos
imul
add
sub
xabort
adc
lods
or
int
or
rcrl
jge
push
jmp
push
adcb
notb
lea
xchg
cld
xor
cmp
iret
insl
shrl
hlt
mov
or
cmpsb
stc
cmp
andb
add
cmp
jmp
adcl
lret
ljmp
clc
lret
mov
mov
cmpsb
push
mov
mov
dec
stc
mov
push
outsb
cmc
leave
or
push
lods
adc
or
pop
cmp
test
stc
mov
out
inc
mov
push
jnp
std
xchg
mov
in
adc
mov
sub
jae
insb
das
cwtl
test
popa
push
sbb
mov
xor
mov
push
pop
mov
xchg
mov
lcall
jge
pusha
pop
into
test
stc
jae
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
pushf
pinsrw
maskmovq
negl
inc
push
sbb
jmp
push
icebp
xchg
xor
xchg
stos
pop
jecxz
push
xchg
and
xchg
stc
pop
ss
mov
adc
dec
negb
xlat
cmc
stc
imul
add
aad
pop
push
jb
repnz
cmc
movl
pusha
outsb
lock
pop
push
std
stos
jbe
add
mov
scas
xchg
inc
xor
mov
scas
js
test
mov
mov
sbb
add
jae
dec
cmp
push
popf
adcb
cltd
pop
or
cmp
shrl
repz
cmp
or
add
xor
jae
push
push
fwait
mov
mov
sub
sbb
test
fsubs
daa
out
push
dec
cld
icebp
fbld
out
orl
addr16
in
lds
imul
xchg
stos
hlt
xchg
nop
lret
xor
clc
mov
movsl
and
add
cmp
loopne
mov
mov
or
push
addb
jne
int3
std
in
add
pop
push
pop
cmc
xchg
adc
dec
in
push
pop
mov
fldenv
fwait
enter
push
mulb
fnstsw
bnd
inc
outsl
fidivl
dec
lcall
jecxz
outsb
xchg
leave
insl
pop
insl
mov
sti
add
shll
cld
adc
leave
ss
xor
lods
adc
pop
push
imul
orb
addr16
cmovo
in
sbb
xor
ret
mov
cld
mov
ret
adc
dec
mov
dec
movsl
cmpsb
adc
sarl
nop
pop
jp
imulb
sbb
xor
cmp
and
dec
xchg
fs
movsb
orl
pop
push
orb
jmp
inc
jb
neg
push
push
cs
add
ss
ret
inc
inc
and
mov
ja
xchg
pusha
cltd
pop
leave
das
rorl
cmp
nop
fdivs
jne
fs
ret
lret
dec
xchg
loop
mov
in
pop
mov
sbb
or
pop
cltd
xchg
enter
test
jg
jge
adc
je
aad
mov
addr16
shlb
mov
sahf
mov
xor
pop
aad
cmp
test
fwait
push
popa
or
sub
pop
push
mov
sbb
sbb
pop
cs
mov
or
jge
and
shl
add
jnp
pop
push
fs
jno
pushf
add
out
push
ja
cmp
or
fisubs
mov
mov
sub
pop
push
stc
sub
cmp
imul
sbb
sbbb
gs
cmp
ret
fs
lods
fsubrl
sbb
cltd
test
pop
out
inc
roll
xor
add
or
jmp
xchg
jb
popa
out
or
mov
loope
push
jle
lahf
cmpl
jl
aam
lock
sbb
fs
fsubrl
imul
push
iret
scas
clc
aas
cltd
bound
cmp
fs
inc
in
scas
push
aad
pop
lahf
mov
sti
ljmp
add
js
jne
testl
mov
lcall
and
je
rclb
jl
jnp
jb
repz
adc
fwait
adc
sti
int
cmpsb
ret
inc
push
sahf
das
hlt
fs
push
mov
pop
fnstsw
cmp
cmp
clc
sub
scas
mov
insl
je
inc
or
jnp
adc
inc
inc
pushf
mov
iret
movsl
jmp
adc
daa
std
mov
dec
lock
sub
lods
ja
pop
pop
mov
jno
or
rorl
out
lock
nop
iret
ja
xor
aaa
cltd
and
push
push
sub
pop
or
mov
sbb
and
lcall
hlt
scas
push
subl
jp
imul
repnz
sub
lcall
vshufps
hlt
pop
jb
scas
stos
xchg
pop
sub
or
iret
ss
mov
out
shrb
jg
movb
dec
movsb
mov
jecxz
insb
add
leave
cli
mov
mov
bound
mov
sub
movsb
jg
adc
iret
sarb
dec
stos
stos
imul
das
or
nop
test
xchg
pushl
fcmovne
push
lods
and
stos
cmp
jns
push
xchg
repz
out
call
jle
cs
lcall
pop
mov
test
mov
movsl
xorb
bound
or
lahf
and
jg
iret
jne
mov
pop
adc
test
sbb
adc
add
stos
or
pop
and
jns
cmpsl
sbb
adc
jecxz
push
mov
hlt
push
dec
pop
cmovg
sbb
or
inc
and
mov
push
out
mov
idiv
filds
and
test
inc
das
imul
inc
mov
xlat
cmp
sbb
movsl
sub
adc
mov
xchg
imul
sub
or
sbb
xchg
mov
icebp
mov
xchg
repnz
push
ljmp
sub
lahf
inc
movsb
sub
pop
je
in
ss
stos
mov
pop
add
xchg
rclb
fwait
bound
sub
sub
not
fstpt
mov
push
repz
insb
xchg
xor
xor
ret
rorb
enter
xchg
or
fildl
aad
and
inc
out
xor
enter
or
in
push
sarl
out
icebp
pop
jecxz,pn
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
mov
mov
pmaxub
dec
sbb
mov
mov
xor
jns
rcrl
cmp
cmpsl
inc
mov
aad
mov
pop
mov
ret
xor
inc
in
inc
imul
push
mov
add
xchg
mov
mov
push
dec
jp
adc
or
cld
nop
dec
mov
decl
xchg
aam
repnz
stos
hlt
xchg
pop
not
adc
pop
data16
aad
push
pop
lahf
xchg
pop
ja
in
push
adc
xchg
inc
push
adc
cltd
push
xchg
mov
xor
jbe
jp
adc
mov
std
push
mov
push
pop
into
out
inc
insb
arpl
fs
pop
pop
loopne
or
insb
pop
movsl
addl
in
push
fwait
mov
es
push
xlat
enter
xchg
and
dec
mov
push
lock
pop
or
mov
scas
adc
mov
jns
add
iret
pushf
jns
mov
push
mov
sbbl
sbb
push
insb
adc
mov
in
mov
inc
nop
sti
and
fwait
js
ret
ret
and
sbb
mov
es
mov
adc
add
ja
loop
cwtl
arpl
inc
mov
jmp
adc
pushf
imul
or
and
sahf
clc
out
mov
push
sbb
xchg
movsb
and
imul
cs
lods
mov
aam
rolb
repz
scas
add
xor
icebp
sti
outsb
nop
iret
nop
imul
push
sbb
repz
fisubs
sub
test
movsb
repnz
hlt
insb
jo
fmull
in
sarb
test
jne
in
xchg
mov
inc
mov
and
sbb
mov
xchg
jmp
addl
stos
add
mov
pop
scas
xor
mov
jo
xlat
or
fidivrs
push
jp
pushf
push
loope
mov
xor
in
mov
setnp
mov
std
leave
mov
pop
inc
div
aas
and
dec
test
mov
stos
ss
mov
xlat
les
add
out
jne
out
jmp
sbb
push
leave
aad
dec
jno
adc
ret
femms
mov
mov
push
sbb
mov
push
push
repz
mov
ds
clc
cmp
rolb
call
mov
and
pusha
gs
jnp
fists
and
je
sbb
je
push
insl
mov
mov
repnz
mov
dec
sbb
stc
aaa
dec
xor
out
lret
ds
loopne
or
jno
adc
push
mov
pop
jge
incb
sub
add
xlat
cmc
push
push
sbb
sbb
mov
dec
xchg
ja
pusha
lahf
xchg
fcoml
aaa
mov
testl
out
lods
loope
jb
dec
jb
incb
adc
mov
cmpsl
jnp
jle
sub
cwtl
inc
add
scas
adc
mov
push
lret
cmp
pusha
jg
test
cmovno
fstp
fadd
add
rorb
jne
add
mov
leave
iret
iret
outsl
dec
mov
adc
add
adc
fsubrs
sti
dec
push
pop
arpl
pop
jg
push
adc
mov
inc
cmc
push
sub
add
test
xchg
jnp
insb
pop
movsb
aaa
jg
xor
cmpsl
lcall
dec
loope
jg
pop
sbb
inc
inc
in
std
xor
xchg
divl
inc
mov
mov
repnz
aam
lret
pop
lcall
rclb
pop
jo
pop
daa
pop
or
imull
xchg
int3
or
shlb
jb
out
cmp
and
ds
sbb
mov
dec
js
jg
pop
jg
xchg
jno
add
lret
sub
add
push
lret
pop
pop
mov
outsb
ret
shl
in
xorb
aas
rclb
adc
mov
test
cmp
fdivrs
push
in
or
add
xchg
adc
int3
dec
idivb
lcall
arpl
cmc
arpl
adc
xchg
push
push
das
mov
mov
data16
fists
inc
daa
or
cli
lret
cli
call
jno
and
sub
push
leave
sti
inc
sub
push
lods
leave
dec
or
xor
ret
test
loopne
cmp
dec
dec
roll
fwait
mov
xchg
add
push
mov
jne
add
cld
mov
andl
cmp
fsts
adc
ljmp
mov
fcoml
mov
mov
xlat
arpl
dec
xchg
push
lods
stos
scas
fsubrs
push
sub
mov
xchg
aaa
dec
or
loopne
sub
iret
ss
bound
or
jb
addl
notb
rorl
push
int
cld
loope
add
pop
pop
mov
xchg
dec
jge
jne
ret
sti
mov
cwtl
jg
xor
dec
push
dec
daa
pop
inc
jbe
shll
aad
into
sbbl
mov
fs
add
xor
std
adc
push
and
or
in
loop
ljmp
add
cmpsl
mov
jecxz
and
mov
aad
mov
or
adc
repnz
insl
pop
xor
sti
ljmp
cs
test
jnp
xchg
or
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
js
js
xchg
pinsrw
shufps
push
push
push
xchg
popf
and
pop
not
mov
xchg
cmp
stc
mov
hlt
add
repz
and
ljmp
iret
and
fabs
sti
adc
cmpxchg
imulb
data16
dec
div
mov
aam
aas
xchg
out
sub
iret
adc
sbb
fcoml
jae
push
inc
stc
cwtl
mov
stos
jns
cmp
inc
out
fs
push
andb
ret
int3
dec
lahf
int
aam
mov
xor
push
add
leave
jbe
fwait
push
xor
ja
push
mov
call
ret
and
add
pop
jbe
outsb
aam
mov
daa
jmp
push
sbb
movsl
aaa
jns
clc
sub
sbb
call
out
ljmp
pop
ror
imul
inc
movsl
xchg
cmp
xor
push
das
lock
dec
mov
and
mov
mov
addr16
mov
and
repnz
jo
xor
mov
sbb
add
jmp
dec
movsb
les
aam
pop
ljmp
fs
loope
ss
in
adc
pop
std
add
shlb
mov
push
fisttpll
stc
fsubl
and
inc
test
hlt
rcrb
push
call
mov
mov
repnz
lcall
xchg
or
rclb
or
jmp
xchg
ret
repz
out
cmp
movsl
cltd
fstpt
sti
jnp
das
jp
jbe
add
cltd
xchg
mov
push
fnstenv
shlb
xor
dec
xor
mov
outsl
adc
add
ljmp
jmp
pop
mov
movsl
push
sbb
fs
into
and
scas
stc
into
and
iret
xor
xlat
xchg
pusha
sbb
addr16
add
ljmp
bound
out
push
testl
push
mov
es
mov
fiadds
in
pop
pop
pop
mov
punpcklwd
jp
and
adc
dec
mov
push
arpl
mov
fistpll
rolb
cltd
pop
xchg
icebp
push
fcomi
or
shrl
push
adc
pop
pop
insl
adc
xor
icebp
xor
xchg
insb
pop
mov
mov
sub
jns
bound
pop
and
and
xor
popl
adc
push
shr
jge
push
jmp
imul
into
sbb
hlt
mov
cmp
movsb
jecxz
lods
into
and
push
mov
mov
or
mov
and
xchg
add
push
push
pop
mov
ljmp
mov
and
add
mov
sub
fcomip
in
ja
mov
mov
nop
pop
mov
xor
mov
ret
minps
sbb
shlb
mov
in
add
mov
sahf
and
cmpsl
push
gs
ret
je
fdivs
idiv
mov
das
or
mov
sbb
pusha
andl
jmp
jo
mov
inc
pop
stos
cmp
pop
rclb
fidivl
stos
sub
and
adc
ret
addl
nop
and
dec
mov
lret
lahf
stos
xchg
or
cmp
sub
xor
rolb
mov
mov
aad
loopne
lret
ret
mov
cmp
testb
mov
rcrb
inc
roll
xchg
sbb
add
mov
xlat
xchg
or
or
xchg
jge
std
pop
jb
ljmp
jecxz
insb
dec
cmc
or
add
or
jno
movsl
dec
imul
das
sbb
test
sbb
jg
dec
and
push
mov
pop
jg
pop
lea
ja
movsb
and
dec
sub
rcll
xchg
lcall
and
lds
icebp
je
dec
jmp
loop
in
icebp
cmp
jecxz
jb
mov
sub
push
xchg
sbb
mov
out
pop
ficompl
lds
bound
pop
aam
je
adc
xor
sbb
xchg
mov
hlt
mov
call
push
je
jp
test
int
das
sti
sbb
xor
mov
dec
mov
inc
mov
andb
dec
adc
sub
sub
mov
push
xor
pop
nop
xor
jp
cwtl
push
push
in
aas
sub
inc
addl
or
sbb
lods
push
mov
in
in
fs
push
cmp
mov
jne
xchg
and
mov
cld
in
push
in
mov
cmp
jo
adc
imul
lods
pusha
mov
adc
popf
icebp
mov
sub
cmpl
push
sbb
xchg
lods
cmpsl
cwtl
mov
dec
mov
or
movsl
ret
mov
adc
xor
ret
pop
jmp
fwait
ljmp
and
pop
ret
jno
sub
repz
or
cli
subl
cmpsb
jp
pop
stos
or
pop
xchg
pop
lds
push
nop
inc
pop
add
add
push
inc
loopne
xchg
jbe
inc
inc
repz
or
push
jbe
xor
es
lods
fildl
leave
je
pop
xlat
cld
mov
push
int3
xor
in
int3
jle
lahf
roll
ret
in
aaa
dec
mov
adc
push
dec
movhps
sub
mov
sub
push
push
mov
popa
lahf
pop
adc
mov
lods
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
outsb
jbe
js
js
add
push
mov
xlat
mov
mov
pusha
inc
cmp
mov
sti
imul
jl
repnz
out
testb
dec
add
mov
ret
pop
std
enter
cli
mov
xchg
data16
es
imul
pop
pushf
loope
aam
pushf
call
or
inc
mov
mov
mov
rclb
jne
push
inc
lods
dec
cltd
sahf
fimuls
jb
pushf
xor
push
pushf
call
insl
mov
mov
cmp
xlat
enter
push
loop
xor
sub
push
shll
in
fisttps
fcompl
inc
push
loopne
add
cmp
inc
stos
mov
int
gs
xlat
inc
adc
inc
fdiv
jne
xchg
stos
mov
subl
and
adc
in
push
push
adc
dec
and
mov
leave
fiaddl
dec
add
xchg
mov
bound
outsl
test
stos
push
pushf
push
pop
dec
sbb
lahf
adc
stos
shll
shll
push
pop
lods
inc
or
shl
jle
sub
into
mov
pop
cmpsb
xchg
mov
out
adc
arpl
repz
cmc
push
jl
mov
out
mov
jae
mov
mov
xor
mov
sbb
dec
mov
aaa
imul
cli
xchg
mov
or
push
cs
or
ret
dec
pop
add
push
mov
call
pop
push
pop
pop
lock
cmp
lea
push
ja
outsb
aam
ret
push
mov
dec
pop
mov
daa
xor
mov
lods
testb
add
mov
fiadds
stc
data16
cld
sbb
jge
sbb
mov
lds
add
pushf
icebp
std
addr16
jo
cmpsb
cwtl
inc
cmp
leave
lret
xchg
sub
push
push
push
inc
jb
in
cltd
stos
lret
sbb
popl
fmull
int
rcr
adc
mov
push
fwait
arpl
stos
fs
or
js
mov
sbb
push
push
or
subl
hlt
inc
lret
loopne
mov
stos
add
dec
and
push
aad
xchg
ss
sbb
shl
xchg
jo
pop
leave
mov
sub
fimuls
leave
or
cmp
lahf
xchg
add
mov
cmp
fistl
mov
add
pop
dec
mov
mov
call
push
notl
andl
dec
ret
or
fwait
push
mov
adc
mov
dec
call
rorl
inc
clc
jb
pop
pop
push
mov
stos
movsb
arpl
mov
inc
popf
dec
hlt
scas
dec
stc
test
ljmp
int3
insl
push
mov
call
or
fisttps
ret
mov
xchg
pusha
dec
movsb
inc
out
cwtl
into
push
andl
mov
pop
int3
sub
pop
mov
sub
ret
cmp
jecxz
xor
aas
adc
subl
outsb
ret
out
xchg
mov
idivb
imul
cmp
mov
gs
mov
jb
push
cmp
mov
aas
sbb
adc
xchg
sbbb
aaa
sbb
test
pop
xor
mov
mov
inc
pop
ljmp
aas
xchg
outsb
and
jp
xchg
into
pop
test
jo
push
cmc
aas
ljmp
shlb
je
loop
jg
inc
sti
adc
cmp
in
mov
dec
lea
xor
fiaddl
and
ljmp
mov
inc
bound
popa
add
xchg
jecxz
push
cmc
ljmp
adcb
int
aaa
js
rolb
jmp
and
ret
mov
jo
lret
jecxz
cltd
xchg
imul
rcrb
push
filds
mov
test
sahf
out
addr16
mov
mov
jno
pushf
shll
dec
xor
xchg
inc
adc
mov
imul
fsubrs
aas
out
fst
sahf
iret
xchg
hlt
inc
imul
popf
in
mov
pushf
jle
emms
mov
push
out
out
std
cltd
lods
popa
es
aas
inc
push
hlt
jmp
pop
pop
xchg
cmp
rclb
es
xchg
mov
subb
xor
lock
shr
dec
jae
cmp
inc
push
out
and
dec
xchg
pop
aad
and
shl
add
xor
iret
adc
jb
in
aaa
or
scas
fwait
jno
aas
cmp
cwtl
pop
ret
and
sbb
jp
adc
cmpsb
inc
loope
sub
and
mov
push
cli
xchg
stc
out
pusha
xchg
pop
call
ljmp
pushf
mov
ljmp
or
mov
sub
or
es
test
cmp
test
or
mov
aaa
addr16
jge
lock
xor
rol
xchg
imul
aad
push
inc
add
popa
inc
adc
ljmp
out
xor
addr16
pop
mov
loope
sbb
std
insb
xlat
daa
into
mov
out
push
mov
or
pop
xchg
pushf
xchg
outsl
dec
sbb
ja
cmp
pop
inc
mov
js
mov
and
loop
add
sbb
aam
bnd
push
dec
enter
cmp
insb
push
inc
mov
sub
testb
in
enter
movlps
lds
pop
mov
jbe
test
lds
fnop
arpl
hlt
mov
cwtl
jmp
sub
or
mov
add
xor
rcll
inc
popa
lcall
xlat
fildll
fcoml
sbb
stos
inc
add
and
ret
xor
test
shl
mov
jp
or
data16
and
dec
movsl
inc
in
pop
dec
jecxz
cli
sub
inc
hlt
pop
inc
sub
jbe
leave
mov
ficoml
xor
xor
frstor
sub
mov
cmc
lea
popf
jmp
fmull
or
lret
push
fsubs
inc
lcall
sbb
lcall
popf
jl
push
pop
sub
bound
mov
mov
jno
xchg
gs
mov
insl
sbb
cmp
inc
cmp
sahf
add
sub
sbbb
push
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
adc
add
dec
jae
jo
mov
jecxz
and
gs
add
and
repz
fwait
dec
jge
adc
mov
jp
hlt
add
cwtl
int
fiadds
sbb
js
add
xor
fs
aad
xor
xchg
mov
push
dec
les
push
popf
out
pushw
cmp
cli
cmpb
mov
dec
push
out
js
outsb
loopne
pop
xchg
shll
adc
lods
fsubs
inc
movsb
rcr
and
dec
movsb
xchg
pop
xchg
shr
rdtsc
mov
mov
adc
iret
int
jg
sub
ret
sub
mulb
xor
dec
or
xor
jne
aam
jae
mov
xchg
fwait
cmp
and
lock
lods
ficoml
adcl
mov
out
out
xor
nop
inc
cmp
sub
clc
cwtl
mulb
sbb
jae
xchg
movsb
pop
outsb
xchg
add
jge
inc
xor
loopne
ds
mov
repnz
hlt
mov
stos
popf
mov
cmp
xlat
popa
sbb
and
push
in
jo
dec
dec
jl
mov
je
gs
dec
stc
pop
inc
pop
leave
mov
scas
add
aam
mov
fistl
outsl
pop
push
sbb
push
push
shlb
push
jle
enter
popa
jno
push
testl
inc
pop
push
out
cs
jns
pop
lods
mov
popf
mov
ljmp
xor
js
dec
jle
add
inc
imul
inc
jp
inc
cmp
ljmp
repz
push
imul
movsb
pop
sbb
add
popf
jmp
ljmp
hlt
dec
jo
js
xor
mov
call
push
xchg
xchg
sbb
xchg
outsl
jo
jecxz
or
leave
into
repnz
jg
add
xchg
cmpsb
lods
push
ret
and
ja
inc
cs
ja
jne
cmp
xchg
mov
insb
xchg
mov
pop
das
fcmovb
aas
pop
mov
stos
pop
andl
pop
sub
sub
mov
aas
inc
outsb
mov
xchg
retw
fmuls
mov
outsl
mov
mov
pop
fdivrs
cmp
xchg
mov
lock
ljmp
rcl
mov
addr16
cmp
mov
sub
xor
mov
lods
xchg
fs
dec
je
cmc
sub
ja
push
fnsave
inc
fwait
add
es
addr16
cmp
xchg
jle
dec
add
mov
xchg
testb
mov
sbb
pop
enter
imul
test
cmpsl
cmc
addl
add
push
outsl
or
out
insb
inc
mov
cmpb
fnstcw
fistl
aas
in
hlt
or
outsl
and
adc
inc
mov
adc
aam
and
int
inc
test
pusha
mov
mov
inc
enter
pop
out
push
cwtl
and
mov
pop
cmp
sub
mov
mov
xchg
pushf
mov
cmpsb
fadds
mov
lahf
adc
in
pop
data16
mov
dec
gs
push
xor
inc
cmc
mov
cmp
int3
and
push
dec
pop
mov
lock
dec
dec
bound
pop
mov
mov
cmc
ds
or
out
ret
mov
ss
dec
and
cmp
aaa
loope
je
push
cmp
xchg
mov
sub
jle
mov
xor
inc
jbe
push
iret
fisubrs
ret
xchg
shrl
mov
mov
and
js
pushf
push
leave
jbe
dec
ja
sub
jle
mov
jne
dec
jecxz
pusha
pop
cwtl
xchg
aad
adcl
sub
mov
lahf
push
mov
mov
xchg
mov
sti
call
xchg
pop
in
sub
mov
add
adc
addl
in
ss
pop
xchg
ret
sti
add
adc
mov
xchg
adc
out
hlt
xor
push
jb
pop
push
int
test
repz
or
stc
jno
dec
cli
xchg
inc
call
mov
mov
icebp
loop
mov
cwtl
testl
in
push
movsb
mov
xlat
into
aas
xchg
sahf
jmp
push
mov
and
pop
xor
pop
int3
dec
mov
out
jmp
xchg
fidivrs
insl
fwait
inc
adc
rcl
pop
cmp
xchg
jns
dec
mov
push
bound
or
sbb
lods
mov
xchg
loopne
dec
mov
pushf
adc
aam
aam
sub
int
add
js
leave
sub
fdivr
xchg
mov
xchg
pop
mov
inc
mov
stos
ret
dec
daa
mov
enter
sbb
xchg
inc
adc
sahf
sbb
sub
sbb
cmp
push
push
inc
sub
push
xchg
cld
pop
pop
iret
in
dec
lods
pop
jg
clc
aad
xchg
push
mov
test
outsl
inc
add
push
out
outsb
test
mov
fxch
daa
adc
test
test
mov
xor
push
int
dec
cmp
xor
cmp
repz
sub
adc
pop
and
rcrb
mov
imul
cmpsb
fisttps
ficomps
in
fs
push
mov
test
jmp
sub
push
stc
lds
inc
aad
aam
adc
rol
xchg
sbb
sbb
push
ficompl
bound
lock
pop
mov
mov
lcall
jae
xchg
push
jmp
aam
xchg
adcb
repnz
test
es
stc
roll
mov
loopne
dec
push
sbb
in
and
xchg
lret
cmp
gs
sub
arpl
dec
sbb
data16
add
ret
sbb
push
dec
add
hlt
inc
jmp
mull
int
inc
jne
push
dec
jns
or
hlt
scas
insl
jle
fs
int3
jecxz
pop
idivl
lds
add
xor
jb
scas
push
xor
inc
les
xor
cmp
ljmp
xor
test
jle
xchg
push
cld
pop
fcmovnu
inc
jmp
std
out
ljmp
xor
mov
xor
pop
out
or
and
rcl
leave
lcall
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
insl
filds
add
fldl
xchg
dec
pop
xor
cmp
out
add
push
sbb
jle
out
das
push
push
pop
cmpsl
mov
xor
andl
div
daa
add
cmp
sub
scas
fldcw
and
mov
xchg
in
in
inc
shlb
fdiv
cmc
loope
pop
imul
ljmp
and
sbb
lahf
sbb
xchg
push
dec
js
sbb
push
sbb
pop
out
call
sbb
in
jle
xchg
xchg
mov
and
fistpll
repz
and
lret
out
aaa
pop
ret
gs
mov
fsubrs
outsb
leave
and
or
iret
cmp
ret
dec
dec
mov
mov
bound
jle
je
or
jecxz
dec
sbb
inc
mov
scas
and
lret
xor
jecxz
imul
jle
jbe
ljmp
sbb
jo
push
dec
and
pop
push
test
sahf
sub
and
sbb
aaa
inc
stos
lock
push
rorb
call
jge
dec
push
push
popa
sarl
cltd
push
xchg
faddl
and
inc
pusha
cmpsb
mov
push
lods
lods
ret
adc
inc
imul
and
inc
fs
pop
in
xor
and
mov
jns
ret
flds
jne
ret
sahf
mov
push
in
push
push
push
mov
aad
fs
or
mov
jnp
pop
mov
test
push
out
xor
stc
sbbb
pop
xor
out
imul
push
and
sbb
mov
pushw
mov
mov
sbb
int3
int
cmp
int
sub
mov
jns
rorl
dec
ror
aad
add
and
jbe
sub
mov
add
add
lods
test
gs
enter
jo
mov
incb
outsl
inc
dec
les
dec
push
retw
mov
inc
push
shlb
or
dec
lahf
mov
iret
ss
ss
stos
ret
mov
popa
jecxz
notl
pop
gs
cwtl
es
push
ds
out
int
loopne
and
insl
push
lods
mov
fstpt
sub
xlat
gs
push
in
sub
out
cmp
out
sti
cli
in
ret
mov
sbb
out
clc
scas
mov
mov
add
dec
ss
adc
add
fdiv
jbe
repz
jge
add
cmpsl
lods
mov
das
fucomip
mov
pop
jl
insl
xchg
and
cmp
inc
fwait
lods
gs
js
jecxz
mov
push
ljmp
fld
mov
popf
in
out
sbb
clc
push
mov
addr16
cmp
jg
and
mov
and
pop
ljmp
xchg
push
mov
loopne
or
insl
rcrl
fstpl
lret
test
adc
add
outsb
addl
test
sti
and
es
xor
shlb
mov
inc
fcoml
sahf
cwtl
aam
push
popf
and
pop
jg
sahf
push
gs
jno
out
insl
inc
jo
bound
sub
bound
scas
shll
jo
xor
xlat
sti
pop
mov
add
mov
mov
sbbb
test
aas
cmpsl
mov
fwait
jge
inc
jmp
dec
hlt
fwait
or
ljmp
jge
mov
outsb
sbb
sbb
das
sub
jle
or
dec
cmp
out
pushf
xchg
fwait
test
bound
xchg
push
lahf
mov
mov
and
aaa
les
nop
adc
mov
shlb
mov
pop
adc
mov
mov
add
mov
cmp
inc
and
pop
cli
add
xchg
loope
mov
sub
subps
orl
inc
sbb
xchg
or
repnz
loop
cmc
jno
fwait
inc
mov
cmp
loop
xor
inc
cmp
jbe
cmp
xor
pop
xor
xor
fnstcw
sbb
lock
cli
xchg
push
je
jne
dec
xchg
fucomi
jp
shl
outsl
cmpsb
pop
test
les
inc
pop
sbb
insb
dec
sbb
pop
xchg
mov
cmc
xor
adc
neg
arpl
lret
cmpl
ds
gs
mov
in
add
dec
ret
test
nop
sahf
lcall
pop
mov
sbb
push
pop
cli
sbb
sti
inc
gs
aaa
stos
std
test
mov
jno
aam
in
adc
dec
cmp
test
mov
mov
mov
pop
pop
cld
jbe
adc
cltd
jle
push
or
dec
cmc
xchg
xchg
xor
popa
test
lahf
inc
jecxz
pop
mov
sbb
lea
cmpsl
icebp
rcr
mov
inc
fwait
scas
fnstenv
inc
dec
jnp
push
and
out
addr16
fdivl
cmp
lods
ror
andl
jo
mov
call
pop
inc
imul
mov
pushf
jecxz
xlat
inc
xchg
das
dec
out
or
mov
dec
inc
cmp
rcll
loop
roll
and
push
into
mov
fldl
sub
les
xor
repnz
mov
lcall
push
jecxz
leave
mov
mov
fists
iret
xchg
sub
adc
popa
int
call
mov
insl
or
mov
gs
call
pop
fcmovnb
fs
int
idiv
ficompl
mov
dec
subb
cmc
mov
mov
faddl
das
fistl
and
es
clc
pusha
aas
sub
and
dec
repnz
es
dec
adc
inc
in
mov
xor
call
inc
cmp
pop
call
sub
pop
outsl
inc
pop
dec
call
sub
xor
mov
js
out
inc
dec
push
adc
inc
int3
xchg
add
dec
mov
fisttpll
daa
hlt
imul
mov
adcl
jne
push
js
fidivs
sbb
scas
das
repnz
pop
mov
repz
ret
push
inc
mov
shl
jae
jl
out
pop
loope
mov
pop
bound
jo
clc
sub
push
notl
loop
jbe
mov
mov
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
sbb
inc
push
add
ss
add
aas
js
lcall
adc
jnp
adcb
sbb
jecxz
popf
inc
xlat
lds
add
pop
xor
das
repz
lcall
popf
imul
sbb
and
push
lea
shrb
out
pop
push
lcall
xor
pop
pushl
jb
xor
dec
pop
addb
adc
js
jno
aad
dec
jge
in
sti
dec
je
xor
adc
dec
ret
mov
cwtl
add
sub
movsb
rorb
push
inc
push
adc
fwait
sub
dec
xor
cmp
dec
pop
push
ucomiss
xchg
arpl
je
add
loop
adc
subl
popa
jbe
imul
or
xchg
aad
lret
lcall
scas
divl
jle
xchg
int3
subb
inc
scas
mov
cwtl
add
in
dec
into
fwait
cmp
mov
adc
out
fcmovnbe
sub
pop
cmp
scas
arpl
fadd
dec
jbe
xchg
shrb
add
mov
xchg
mov
pop
addb
jne
jnp
pop
insl
and
icebp
add
gs
add
cs
lret
jae
iret
andb
sarl
jge
and
add
loopne
lds
push
xchg
orb
jp
imul
pop
pop
xor
les
lock
xor
and
adc
into
faddl
arpl
sub
pop
out
sub
push
cmp
mov
outsl
adc
dec
dec
adc
mov
fdivr
sub
fucomip
sub
popf
cmc
push
cmp
and
push
ret
pop
pop
mov
sti
mov
stos
xchg
cmpl
xor
push
sub
out
fsubrs
push
adc
movsl
mov
test
in
jb
add
mov
push
aaa
and
int
repz
rcr
cmp
shrl
mov
in
ds
sub
enter
mov
in
rcrl
stos
xor
dec
addr16
jb
cmp
jmp
movb
fistps
loopne
cs
test
std
xor
pop
aas
jge
jo
jmp
leave
test
insb
ficoml
ss
ret
or
xchg
mov
pop
out
cmpb
pop
fwait
lods
sub
ficoms
and
inc
sbb
sub
in
jno
orl
gs
lahf
insb
or
iret
into
adc
mov
cltd
xorb
adc
daa
leave
mov
inc
ficoms
pop
mov
lret
insl
stos
ficoms
xor
lcall
inc
xchg
lock
lods
dec
pop
in
dec
inc
add
daa
jns
jge
insl
mov
add
orl
outsb
or
iret
dec
daa
mov
lods
mov
inc
inc
push
mov
or
aam
inc
add
rolb
imul
fadds
mov
fwait
add
and
sahf
divl
andl
and
notl
dec
call
jp
mov
sbb
subb
xchg
cltd
jno
popf
dec
sub
je
adc
out
aam
call
cld
xor
cmp
push
fsubl
loope
fisubrs
push
mov
cmp
xor
cmpsb
push
lods
mov
test
pop
sbb
fs
outsl
lahf
in
or
push
enter
testb
fisubrl
inc
mov
dec
xchg
and
out
aad
loopne
int
mov
sbb
pusha
out
and
out
push
inc
xchg
pushf
mov
xchg
inc
sub
scas
out
dec
jmp
ds
aam
mov
cmc
sbb
push
inc
mov
add
mov
call
pop
add
sub
testb
loope
push
repnz
sub
or
cmp
repnz
mov
mov
adc
jno
add
inc
dec
andb
lahf
xlat
shl
loop
lods
xchg
test
jne
mov
pop
cmpsb
fs
pop
fcoms
ljmp
outsl
sti
loopne
adc
inc
sub
in
daa
xor
mov
in
lcall
and
mov
add
dec
and
push
sbbb
push
sbb
insl
fcmovnbe
mov
sbb
out
into
stos
xchg
scas
push
or
pop
xchg
lods
sbb
pop
sub
sbb
ljmp
jo
and
inc
int
mov
insb
jmp
jne
adcb
cmp
cld
rep
mov
adc
aam
add
imul
dec
or
and
int
orl
sbb
mov
sti
xchg
fmull
xlat
push
sbb
jo
data16
aaa
fisubs
stc
jl
fs
cmp
daa
sti
mov
imul
sub
xchg
adc
cld
popa
sub
stos
loope
jne
cwtl
xor
test
jg
push
push
adcb
push
hlt
jecxz
adc
leave
jp
pop
out
sti
mov
bound
push
add
loopne
sub
adc
jae
dec
mov
and
sbb
rorl
xor
lret
xchg
loope
push
xchg
ficomps
pusha
stos
mov
aam
roll
mov
adc
test
sbbl
out
and
rorl
and
jnp
imul
add
cmp
sub
into
loope
leave
pop
rol
insl
and
test
or
clc
mov
jns
sahf
adc
jnp
sbb
lods
cwtl
fbld
aaa
adc
push
je
xlat
mov
push
out
out
mov
out
pop
sbb
adc
add
mov
js
decb
lret
xor
insb
add
push
mov
adc
inc
sbb
insl
adcl
xchg
call
xor
fisubl
cmp
mov
xor
cmp
push
ds
iret
stos
dec
cmp
icebp
mov
xchg
icebp
mov
dec
push
xchg
bound
mov
rcrl
push
and
pop
test
mov
aaa
cltd
cmp
push
fisubl
movsl
cli
ret
ss
adc
pusha
push
stos
jge
repz
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
ret
scas
xchg
cs
add
out
push
pop
mov
xorps
in
stc
clc
sbb
fwait
push
bound
dec
mov
in
adc
pand
cmp
fs
adc
lock
sbb
inc
pusha
in
clc
cmc
imul
sbb
fidivl
aad
xchg
mov
mov
mov
das
dec
cmpl
gs
jg
icebp
push
lock
mov
jb
lds
imul
mov
inc
ja
fiadds
int
insb
xchg
in
test
inc
cmp
cmpsb
dec
xchg
aad
pusha
dec
add
lock
outsb
popa
mov
test
outsl
stc
inc
ret
and
mov
mov
sti
cmpsl
xlat
adc
jmp
negl
xor
filds
cld
pop
dec
jmp
stc
dec
test
xor
iret
vminps
into
mov
inc
pop
push
pop
inc
outsl
and
in
les
or
int3
imul
push
js
addr16
add
loope
xor
lods
idivb
push
fs
cmp
call
popf
cmp
sarb
mov
sbb
xor
pop
or
mov
testb
scas
adc
push
dec
jb
dec
sbb
mov
imul
sbb
and
out
nop
adc
sbb
les
pop
mov
adc
jmp
pop
or
push
fldl
gs
f2xm1
xor
popa
outsl
loope
sbb
mov
clc
push
or
push
mov
jns
sub
call
imul
in
inc
adc
adc
push
cmp
jne
and
insb
incb
mov
mov
add
test
cmc
pop
pop
cld
outsb
fs
pop
or
pop
outsl
xorl
sub
xchg
hlt
mov
jl
jp
test
push
je
adc
dec
sub
arpl
xchg
push
and
ret
lahf
fwait
dec
xchg
pop
and
add
dec
cmp
pop
push
test
and
jns
xchg
mov
mov
push
and
ss
rcl
mov
xchg
cmp
mov
pop
rcll
test
adc
xchg
in
add
adc
insl
in
nop
test
mov
mov
inc
inc
sti
jp
bound
add
inc
sahf
sub
push
mov
imul
pop
ss
lea
mov
divl
aad
push
movsl
cli
sbb
sbb
popa
jae
jl
mov
pop
rorl
ret
jb
mov
or
add
repnz
out
loope
push
pusha
iret
xchg
jns
jmp
aam
int
mov
adc
lahf
stc
arpl
mov
std
xchg
xchg
loopne
ret
movsb
cmpsl
std
mov
mov
orl
pop
cmp
lock
mov
fadd
imul
fcmove
lods
jnp
pop
pop
jnp
daa
mov
rcrb
loope
sbbb
iret
xlat
push
push
das
sub
fists
jmp
lods
fildll
sub
pop
out
loopne
out
out
jno
mov
out
cmp
push
cmc
ret
adc
push
mov
add
out
out
cmp
xchg
je
scas
inc
push
mov
pushf
push
mov
sub
push
sub
adc
stc
negb
mov
jne
outsb
popf
inc
inc
pushf
xchg
sti
jge
or
mov
adc
fcomip
or
xchg
add
cmp
dec
jne
scas
push
push
cmp
pop
cwtl
inc
xor
outsb
add
pop
cmp
dec
jecxz
std
sbb
or
call
popa
insb
addl
lods
int
ljmp
jmp
adc
mov
pop
repnz
mov
push
or
addr16
xchg
mov
cmp
push
rclb
inc
cmpsl
sbb
xchg
fwait
fimuls
mov
xor
pop
push
push
sub
xor
sub
loopne
add
cmp
adc
sbb
aaa
shrb
in
lret
or
dec
or
xor
lods
xchg
mov
clc
jmp
push
clc
xor
test
xchg
sbb
pop
int
inc
adc
mov
call
pop
sub
add
ja
fxam
inc
pop
sub
adc
mov
jbe
mov
cmpsl
xchg
sbb
mov
in
dec
fdivrs
add
dec
mov
adc
jae
sbb
movsb
xor
inc
xchg
sbb
mov
adc
out
lahf
je
aam
mov
into
inc
mov
mov
jle
xlat
cmp
ficoms
xchg
jo
es
bound
in
mov
push
popa
aas
ficompl
icebp
std
mov
xchg
jne
mov
iret
xchg
xchg
fwait
jg
mov
jg
add
clc
add
cmpl
mov
cld
mov
mov
ret
pop
popf
jne
stos
inc
scas
imul
push
mov
aam
mov
cmp
fsubrl
lds
mov
pop
ss
cltd
xchg
jl
les
repnz
add
xchg
mov
mov
andl
shll
rcrl
mov
test
mov
jl
stos
add
ds
dec
xchg
bnd
jecxz
mov
mov
ret
call
sbb
dec
push
cli
nop
jo
cwtl
or
inc
test
pop
loop
bound
je
pop
rol
mov
push
sti
lret
lcall
xor
orb
push
in
adc
sub
jg
mov
pand
outsb
add
push
in
jmp
lods
pop
push
push
hlt
rcrb
inc
rsm
xor
and
lods
fwait
idivl
pop
lcall
popf
xchg
subb
cltd
cwtl
sbb
jns
inc
loop
fstpl
cmp
pusha
int
pusha
and
xor
or
cmp
call
ficompl
xor
ja
lods
std
pushf
adcl
and
adcb
mov
fcmove
cmp
jecxz
cwtl
adc
stos
pop
xor
rcrl
dec
aad
icebp
pushf
fdivrl
fbstp
insb
addb
push
cwtl
sarl
leave
das
mov
xor
in
push
aad
push
pop
xor
cs
inc
in
arpl
xchg
sbbb
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
xor
xchg
in
inc
add
mov
inc
ret
mov
mov
fiadds
popw
in
jmp
in
test
pop
mov
dec
addb
mov
rcrb
mov
add
sti
inc
iret
ficoml
xchg
cmp
mov
push
xor
movsb
jle
inc
imul
or
les
cmp
sbb
sti
fwait
ds
nop
dec
or
je
mov
in
cmpb
adc
outsl
je
leave
stos
shl
xchg
or
aaa
sbb
and
lds
sub
cmc
in
xchg
sub
lds
dec
mov
andb
mov
mov
movl
loope
mov
cmpsb
cmp
dec
sbb
nop
rcl
pushl
ja
stc
mov
or
lds
cli
add
push
sbb
sbb
pop
mov
and
mov
add
hlt
aam
sbb
pop
sbb
imul
dec
out
sbb
cltd
loope
repz
push
lds
iret
adc
mov
mov
jno
test
jae
icebp
dec
push
xchg
push
cmpsl
mov
inc
jo
lret
mov
je
cmc
popa
das
mov
cltd
lds
xor
cmc
cmp
mov
imul
pop
xchg
aas
cmp
xchg
mov
iret
jne
fs
mov
stos
inc
lea
mov
aas
shrl
addr16
sarl
test
ret
icebp
loopne
sub
xorb
mov
js
xor
mov
or
lret
cmp
cmp
add
push
xchg
lock
mov
push
js
sbb
push
xor
add
cmp
pop
stos
inc
mov
inc
subb
cmp
sub
loop
jge
popf
mov
lcall
loope
jo
imul
shrb
pop
pop
pop
shlb
cltd
rorl
ds
and
mov
imul
call
aaa
inc
in
call
push
add
lea
mov
mov
lea
inc
in
pop
push
dec
sub
cmpsl
inc
les
and
xor
in
xchg
stc
dec
enter
out
movsb
mov
cmp
int
mov
mov
xchg
ds
push
loope
dec
div
fs
sbb
test
or
sub
dec
mov
sbb
push
push
fisubrs
jbe
dec
icebp
and
fcomp
out
cs
in
test
pop
or
jbe
mov
cs
in
repz
mov
cmpb
loope
lret
int3
xchg
testb
inc
mov
mov
rclb
and
sub
mov
std
in
outsl
aaa
or
mov
mov
ss
or
adcb
jg
scas
push
std
push
das
lds
into
jno
lods
sub
cmp
iret
hlt
push
mov
loopne
movl
pop
xchg
imul
je
xchg
lds
sub
jle
fstl
fildl
jp
in
mov
ror
lea
lcall
or
int3
adc
dec
addr16
ret
rcl
or
stos
push
shrl
roll
inc
push
or
mov
mov
xlat
add
jg
xchg
roll
mov
add
cltd
inc
repnz
mov
jle
fcoms
inc
ret
adc
xchg
adc
push
dec
out
pop
fldenv
repnz
aaa
std
mov
test
push
mov
test
rolb
add
xchg
pop
pushf
xor
and
mov
jmp
pop
mov
xor
test
rol
dec
rorb
add
loopne
test
adc
push
lahf
int3
xchg
je
packssdw
inc
cld
push
pop
iret
stos
jg
or
mov
flds
mov
push
push
insl
push
push
dec
mov
dec
cmc
popl
xchg
add
mov
push
push
jo
lods
out
ja
out
gs
push
call
adc
jnp
ficoml
cmc
inc
or
mov
fnstenv
bound
movsb
fadds
ret
scas
mov
stc
sub
add
sub
sbb
jmp
pop
popa
inc
rorl
cs
xor
mov
adc
mov
mov
cs
out
xor
dec
iret
loope
aad
sub
aam
lcall
push
inc
adc
clc
xlat
xor
scas
aam
and
scas
iret
ljmp
adc
aaa
loope
sbb
sub
jp
jbe
nop
jecxz
cld
mov
in
cmpl
adc
subl
insb
cmpb
imul
add
add
sbb
ret
lahf
fdivr
aam
jp
pop
sub
aam
dec
and
call
aas
addr16
pop
enter
inc
roll
jb
ss
push
in
repnz
rcr
clc
cmpsb
inc
scas
xchg
mov
andl
jbe
mov
mov
pop
lds
ret
pop
xchg
lock
xlat
fsubrl
pcmpeqd
cmc
mov
sti
push
arpl
leave
xor
lods
xchg
icebp
jecxz
mov
ret
jecxz
inc
insl
add
xchg
shlb
sar
bndstx
mov
in
jne
mov
xchg
outsb
ret
xlat
cmpb
loopnew
repnz
adcl
xchg
cli
cmp
sti
or
inc
jmp
nop
mov
fisubl
jle,pt
sbb
std
xor
jbe
pop
cmp
in
add
sub
xchg
mov
call
sbb
push
cmc
push
lret
push
and
xlat
cli
stos
mov
ljmp
lret
sub
add
sti
loopne
mov
fisttpl
jns
xchg
jb
inc
xor
insl
pop
insl
or
sti
fisttps
xor
icebp
repnz
cmp
inc
nop
and
sbbb
test
daa
mov
shll
dec
pop
dec
pop
cmp
lods
sti
mov
add
mov
push
arpl
push
push
int3
lcall
stos
xchg
jge
test
out
addr16
or
jecxz
and
jle
adc
or
js
jle
mov
ret
icebp
cmpsb
stos
cmp
outsl
xor
add
sub
or
hlt
jecxz
fdivrl
mov
int
jp
xchg
inc
cmp
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
movsl
icebp
mov
add
push
push
inc
sub
or
mov
xchg
fstl
rorb
inc
add
cmpb
xchg
faddp
cltd
int
ret
or
out
ljmp
sub
push
stos
cs
adc
fnstsw
mov
das
lods
mov
lret
rorb
cld
je
daa
dec
adc
xorb
insb
sub
pop
mov
inc
test
lods
jb
stos
aaa
sti
mov
data16
sub
xchg
pop
or
jge
push
lret
subb
js
ljmp
pop
fdivrl
jecxz
inc
mov
lret
flds
xchg
imul
scas
inc
rcrb
sbb
sbb
lret
mov
jmp
jecxz
call
in
stc
divl
rcll
or
fcmovne
mov
adc
mov
outsb
mov
and
jbe
stos
cmpsb
stos
enter
mov
lret
mov
adc
push
mov
mov
mov
imul
push
or
out
lods
xor
sahf
enter
jbe
sub
push
leave
lds
xor
iret
push
cs
sub
std
sub
stc
mov
fnsave
xchg
gs
loope
mov
adc
push
inc
pop
loop
cli
adc
in
call
jbe
scas
sbb
sti
jl
repz
cmp
in
mov
aad
add
insl
pop
in
jo
jecxz
imul
mov
std
and
fcmovnu
test
repz
mov
icebp
scas
repnz
inc
in
or
add
cmove
inc
std
mov
sbb
cmp
mov
inc
xchg
sbb
adc
and
loop
push
inc
push
dec
out
lret
jp
jg
xchg
movsl
in
in
stos
adc
jg
aam
mov
ret
and
mov
shlb
jno
icebp
dec
inc
out
and
cltd
push
xor
and
pop
das
mov
mov
inc
jle
pop
mov
jge
and
test
mov
mov
jns
xor
cmc
adc
mov
sahf
jne
cmp
xchg
mov
es
pop
fwait
cs
lahf
mov
inc
loope
daa
mov
cs
inc
inc
xchg
xor
sub
cltd
out
sub
insl
and
pop
sub
dec
dec
sbb
lcall
imul
sti
arpl
sbb
std
out
jo
sub
add
mov
jecxz
pop
insl
xor
lret
lcall
sbb
int
cmp
sbbl
lods
das
mov
cmp
loopne
jmp
gs
pusha
sub
xor
out
test
and
cmp
ja
sub
mov
adc
inc
sbb
cmpsl
add
push
loopne
cld
mov
xor
dec
pop
sbb
xchg
dec
jl
or
sbb
test
shlb
seta
push
mov
pop
insb
popf
sti
fbld
idiv
fists
clc
mov
cmp
mov
mov
sub
ret
cmp
lea
aas
out
mull
bound
mov
aad
fistps
out
icebp
mov
push
lods
mov
rep
std
rcrb
mov
jp
shlb
arpl
jo
sub
dec
fcmovb
stc
push
aas
aad
xchg
mov
or
subl
jns
pop
inc
sahf
fisttpll
adc
mov
xor
or
and
inc
xchg
lds
imul
pop
xor
pop
sub
leave
mov
in
jecxz
lock
orb
pop
adc
mov
mov
loope
push
es
rol
mov
scas
cmc
adc
adc
cmpsl
je
push
shll
xchg
pop
aaa
push
hlt
pop
je
mov
test
or
sub
loope
rclb
lcall
sub
les
add
jae
mov
push
enter
adc
dec
into
push
in
xor
loope
pop
ss
add
mov
daa
xlat
push
pop
cmpsl
pop
mov
mov
mov
inc
fwait
mov
mov
gs
add
jmp
daa
or
imul
popl
xchg
int3
fs
outsl
mov
xor
jmp
cmp
mov
int
outsl
daa
jbe
mov
loope
sbb
push
outsl
mov
jno
icebp
push
popa
dec
dec
in
outsl
jbe
mul
mov
sti
jge
push
xor
daa
inc
and
or
int3
ret
push
and
int
mov
push
xchg
faddl
loope
xchg
std
jns
sbb
out
lods
mov
mov
mov
stc
pop
sahf
mov
fnstsw
jmp
cmp
mov
lock
in
add
sub
push
fs
jg
push
jns
sbb
cli
dec
add
sub
mov
push
jle
mov
std
xchg
dec
push
inc
aam
insl
mov
cld
inc
data16
xlat
mov
sub
sub
xchg
jle
jno
and
lods
aad
in
aam
insb
in
xor
cmpsb
ret
jnp
xchg
rcll
sub
and
in
pop
int3
rorb
mov
hlt
and
in
lock
leave
aas
lock
icebp
pop
cmpsb
add
and
pop
add
dec
movsl
jge
lods
xchg
cmpsb
mov
rcll
pop
pop
mov
hlt
mov
leave
pop
jmp
sbb
out
mov
add
jecxz
pop
aam
rolb
fdivs
mov
sbb
pop
xor
imul
jle
adc
xchg
and
ret
arpl
cmp
fmull
mov
lret
lods
dec
dec
mov
rcrl
imul
sahf
dec
inc
es
popa
fsubrs
jne
insl
sbb
aam
adc
or
mov
adc
gs
push
sub
xor
xchg
xchg
stc
addr16
mov
outsb
dec
xchg
pop
sbb
mov
sbb
sbb
inc
dec
mov
mov
shll
inc
mov
sub
les
ds
sub
mov
sahf
sbb
pusha
push
inc
jo
inc
enter
in
mov
cltd
or
xacquire
adc
ret
call
fistl
insl
aaa
rolb
sbb
jo
adc
and
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
xchg
mov
add
aas
inc
xchg
push
mov
lods
sub
push
insb
jp
gs
outsb
mov
pop
and
test
in
mov
xlat
jne
sbb
int3
push
add
repnz
xchg
loop
lahf
fcom
ud1
ja
nop
mov
add
les
lods
std
mov
ljmp
insb
adc
rcrl
pop
fadds
mov
add
mov
mov
iret
push
and
outsb
add
mov
or
pop
pop
movsl
fisttps
mov
ss
psllw
jmp
in
aad
mov
aad
aad
aam
movsl
push
sub
pushf
loopne
or
cmp
sub
rorb
fsubrs
iret
das
add
fsts
mov
pop
gs
push
decb
std
outsb
iret
imul
jecxz
lds
stos
mov
adc
push
popf
mov
cmc
xchg
xorb
jnp
xchg
xchg
sbb
or
xor
fnstsw
lahf
push
aas
fmul
test
and
cmp
mov
push
dec
dec
sub
cmpl
xchg
xchg
push
xor
movsb
sbb
inc
pop
test
xchg
rorb
or
fstps
mov
or
xchg
xchg
jle
clc
lret
pop
sub
mov
in
shr
outsb
mov
cwtl
rcrb
fs
loopne
cltd
jns
mov
ss
dec
cmp
je
in
sub
aam
inc
dec
testb
ja
ret
outsl
loope
js
repnz
nop
inc
mov
jnp
push
jl
lea
cmp
mov
dec
mov
aas
bound
fwait
cmpsw
sbb
jg
sti
pushf
add
jecxz
add
xchg
cmp
adc
cmpsl
dec
ffreep
adc
mov
xchg
adc
pop
fsubs
add
iret
push
out
xor
movsb
jb,pn
sbb
pushf
xchg
dec
ja
lcall
jb
jae
ret
stc
cmp
int
cmp
jmp
cmp
ss
nop
neg
xor
push
movsl
bound
cmp
popf
cld
pop
xor
jmp
dec
int3
xlat
sbb
inc
lods
les
sub
pop
pop
cmp
cmp
loope
outsl
loope
stos
jl
movsl
pop
mov
mov
mov
cmpsl
add
aad
enter
jnp
shll
xchg
mov
cli
xor
fs
fistps
and
dec
bound
popf
push
mov
push
hlt
cltd
sar
mov
xchg
mov
mov
scas
lret
dec
jno
cld
inc
push
inc
mov
mov
push
pop
and
pop
ja
mov
add
pop
or
and
and
adc
pop
mov
es
jl
push
icebp
cli
sub
adc
mov
xlat
xchg
les
cmp
int
sti
and
popa
mov
mov
push
sbb
sbb
outsl
sbb
loop
xor
mov
loop
in
push
ret
dec
sub
fsubr
inc
cmp
aas
mov
lds
daa
inc
xchg
mov
pop
lcall
test
add
daa
stc
add
cmp
lods
repnz
mov
jnp
lcall
cltd
and
dec
std
adc
xchg
les
and
jp
nop
scas
sub
xor
adc
lods
insb
sbb
arpl
in
sbb
push
mov
cmp
ss
movsb
lret
pop
inc
adc
pushf
out
push
pop
loop
outsb
pop
mov
fwait
sub
inc
std
add
inc
test
frstor
or
js
dec
inc
int
cmp
push
lods
lods
fsubl
in
inc
push
inc
push
in
in
add
testb
adc
aam
pop
js
cmp
fidivl
dec
mov
xchg
repnz
imul
into
mov
push
js
ds
push
gs
or
mov
test
xorb
int
mov
test
add
stos
jb
mov
cs
movsl
dec
sbb
aad
or
fsubrs
fwait
loopne
cs
call
stc
rorl
movsl
stos
sub
push
idivl
les
mov
shlb
mov
popf
test
ja
pop
aam
and
adc
xchg
ret
mov
in
imul
ss
pop
or
pushf
fdivl
cwtl
dec
fcompl
cs
mov
or
sbb
push
cmp
imul
xor
xchg
cmp
int3
js
shrl
sarb
sub
pop
test
stos
push
jp
out
push
push
sub
xchg
and
in
out
inc
flds
rclb
cmp
push
loope
loop
xchg
sbb
out
adc
psubb
xlat
mov
xchg
sub
dec
outsb
mov
xor
pop
and
lds
mov
push
pushf
inc
sub
pusha
test
sub
jmp
rolb
fsubrl
ror
cmp
sub
jp
add
repz
loopne
dec
jo
sahf
in
leave
jno
test
fdivs
hlt
xchg
xor
or
orl
dec
and
mov
and
iret
das
push
pop
in
and
lret
or
shll
in
dec
push
pop
daa
setl
stos
jmp
add
inc
xchg
mov
cmpsb
xor
fiadds
call
fbld
sbb
cld
outsb
loope
jmp
xorl
sbb
mov
adc
nop
add
mov
movsb
jge
hlt
cli
push
push
sub
mov
pop
add
mov
stos
mov
in
and
push
sub
mov
dec
mov
bound
push
xchg
dec
test
pop
fsts
outsl
stos
pop
or
cld
les
inc
jg
out
and
cmp
pop
call
cmpsl
dec
jmp
aad
cmp
mov
stos
stos
int
or
imul
pop
jo
add
call
pushf
fsts
xor
aaa
movsb
arpl
outsb
and
sbbb
sbb
clc
movsb
cmpsb
or
add
inc
adc
inc
dec
les
daa
popa
cmc
jg
aas
sbb
and
inc
sub
push
xor
or
data16
dec
rcrb
sbb
loope
push
addr16
shll
sub
ret
int
imulb
test
dec
arpl
xor
pop
loope
js
mov
out
jns
or
push
cltd
shlb
mov
loope
jb
sti
aam
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
out
push
lock
insb
sarl
push
enter
setbe
or
unpcklps
sub
dec
int
sbb
jbe
jecxz
xor
or
sub
ret
mov
inc
data16
mov
fsubr
cmp
hlt
pop
ljmp
iret
cmp
mov
cmpsl
push
push
sbb
icebp
cmp
sbb
mov
dec
aas
and
push
sbb
out
cmp
je
mov
pop
gs
mov
mov
test
mov
add
xor
mov
xchg
add
hlt
dec
and
test
ja
icebp
and
mov
mov
mov
inc
adc
push
sahf
test
icebp
lock
pushf
and
cmpsb
sti
or
bound
adc
lret
jg
mov
mov
push
in
test
mov
out
and
sbb
cmc
lahf
aaa
shrl
insb
stc
and
jo
mov
add
es
or
mov
sar
loopne
inc
jmp
mov
sbb
in
xchg
ret
sub
mov
sahf
notl
ss
lret
popa
sbb
add
sub
icebp
adc
pop
fisubs
int
push
dec
popa
push
push
mov
or
sahf
mov
jle
add
jg
xor
and
cmp
test
test
call
mov
or
mov
aaa
scas
cmpsb
or
mulb
pop
xchg
mov
frstor
adc
mov
shrb
push
xchg
lret
add
aas
arpl
jb
aas
imulb
lods
loopne
and
and
cmp
rclb
scas
in
mov
stos
pop
pushf
lret
stos
dec
subb
sti
daa
in
adc
fimuls
rol
cli
int
pop
out
or
icebp
jle
aas
lock
mov
aad
cmp
pop
sub
rorb
pop
push
jb
or
cmp
sub
nop
popf
call
lods
movsb
cmc
mov
popf
push
jae
mov
sti
fbld
loop
mov
sub
xchg
icebp
pop
cmpb
out
xchg
adc
cmp
add
stos
xor
pop
mov
sbb
push
push
cmpsb
inc
add
jo
dec
dec
hlt
dec
pop
pushf
push
sahf
mov
inc
rcrl
lcall
and
cmp
jle
fldl
adc
js
rol
mov
adc
decb
outsb
adc
repnz
jb
sub
push
mov
dec
and
mov
dec
dec
add
dec
jecxz
sti
rcr
cmpsl
dec
cli
or
cli
fsubrs
or
push
push
mov
lods
mov
and
jge
push
out
xchg
add
mov
shlb
xchg
add
xor
loopne
ja
pop
lds
fadd
jmp
lea
sub
adc
xchg
lret
sub
cmp
cmpb
sahf
mov
repz
cmp
test
lods
fxch
mov
xchg
push
fadd
outsb
ljmp
adc
mov
sbb
jp
leave
mov
fs
sub
push
fwait
jl
inc
iret
lods
subb
and
ljmp
mov
aad
shr
pop
push
add
add
popf
mov
adc
adc
or
in
loop
je
push
int
pop
dec
xor
dec
mov
ljmp
mov
dec
outsb
inc
mov
mov
xlat
add
cmp
mov
or
mov
sbb
mov
pop
stos
dec
mov
mov
mov
adc
fsts
scas
fnsave
lsl
mov
add
insb
mov
add
or
lahf
test
imul
inc
push
in
jae
popa
mov
cld
jl
sub
and
inc
mov
lods
daa
cltd
movl
fsubrl
pop
loopne
lods
loope
or
stc
dec
mov
dec
and
xor
pop
hlt
stc
xor
push
sbb
adc
or
les
test
and
cld
sahf
pop
loop
pop
fscale
addr16
sbb
cld
xchg
cmp
push
cmpsl
ds
or
ret
push
fildll
call
dec
mov
pop
pop
data16
add
mov
jge
ret
lods
push
stos
cmpsl
mov
cmp
xchg
loopne
xchg
mov
cmp
jb
insb
inc
adc
mov
adc
xchg
add
inc
fsubrl
pop
adc
inc
mov
jb
in
sbb
dec
rolb
push
loop
icebp
add
repnz
xchg
xor
decl
bound
push
gs
out
clc
lcallw
icebp
stos
adc
fstp
ret
xchg
aas
mov
pop
repz
ja
into
shrb
les
push
lods
dec
push
xchg
popa
mov
out
cld
insl
push
popf
and
xchg
xchg
adc
sbb
stc
popf
sbb
push
sbb
adc
jmp
ret
mov
jmp
enter
or
sub
cld
or
scas
out
push
pop
or
out
int
lcall
shrl
rolb
cmp
mov
xchg
mov
and
mov
or
ret
das
dec
xor
dec
rcl
and
jmp
je
sub
movsl
jle
stos
inc
add
adc
mov
popa
mov
or
cmc
out
shl
dec
pushf
lods
das
xchg
out
mov
dec
and
jae
mov
ljmp
gs
cltd
pop
jns
jmp
and
movsb
inc
out
push
loope
mov
inc
repnz
adc
mov
je
inc
inc
cld
mov
mov
mov
or
mov
sub
into
xlat
js
cmp
push
cmp
int
push
fmulp
lret
nop
adc
dec
push
inc
popl
loope
es
add
pop
or
pop
jecxz
insb
cld
fwait
cmp
data16
cmc
sub
lcall
pop
mov
sbb
fwait
mov
lret
je
call
xchg
cmp
cwtl
movsl
fisttps
or
adc
add
insb
cmpl
add
fcomps
cld
je
mov
push
fstps
add
mov
jmp
and
sbb
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
push
add
inc
inc
mov
ss
daa
ljmp
adc
dec
xor
or
int3
push
push
cmp
jle
fwait
pusha
hlt
pop
les
cmp
mov
xor
add
inc
in
loope
lods
xor
fucomp
in
arpl
mulb
divb
test
push
push
aas
jo
or
pop
lock
pop
xlat
out
sbb
mov
mov
sbbb
inc
cmpsl
jecxz
lds
ds
or
lahf
scas
insb
xor
cmp
xchg
pop
imul
sub
out
jecxz
gs
mov
jae
cli
scas
and
sub
imul
xchg
inc
cmpb
or
inc
inc
mov
or
test
dec
lods
ret
cltd
xor
cmp
pusha
jl
aas
out
add
data16
xlat
mov
xor
pop
mov
xchg
dec
xor
test
sti
push
cld
ljmp
jg
fs
pop
push
lahf
out
movsl
jecxz
pushf
sub
pop
mov
data16
out
lret
mov
mov
ret
xchg
and
fwait
inc
out
and
sbb
mov
xchg
fisubs
iret
xchg
sub
dec
filds
gs
sbb
or
sbb
sbb
mov
inc
pop
pop
pop
cmp
xor
inc
scas
push
into
int
dec
pushf
sub
push
or
je
and
pusha
fsubr
and
inc
insb
or
lret
lret
push
nop
outsl
mov
xchg
negb
sarl
insb
cmp
sti
jbe
iret
test
cmp
mov
jg
mov
sub
inc
adc
cmp
jmp
adc
outsb
lret
pop
idiv
repz
fstpl
mov
jo
xor
add
jmp
imul
cld
test
dec
mulw
cmp
shr
mov
cmpsl
xchg
or
mov
jmp
xchg
jnp
inc
fildll
daa
sarl
mov
dec
cmp
loopne
lret
sbb
cmp
out
pop
mov
fcoms
push
dec
cmp
test
push
cmpsl
test
ret
and
push
add
imul
mov
jmp
fisubrs
sbb
push
xor
add
xor
int3
fs
inc
aad
jl
xchg
ret
mov
shl
popf
inc
and
shr
push
idivl
and
loop
xor
add
mov
fsts
ja
lea
jge
xor
stos
dec
xor
sub
xchg
inc
and
popa
adc
mov
test
imul
fisttps
mov
pop
popa
fcoms
add
out
mov
sub
jp
mov
or
add
lods
fwait
pop
push
int3
dec
cmp
mov
adc
nop
ficoml
sub
xchg
int
sbb
call
inc
repnz
mov
movsl
mov
fwait
outsl
cmpsb
clc
cmp
sbb
test
push
mov
addr16
mov
inc
pop
mov
nop
inc
fdivrp
mov
sub
dec
jae
jmp
mov
push
leave
mov
iret
xchg
xor
int3
cli
cmpsl
stc
cmp
jo
popl
xchg
rolb
rorl
cld
mov
mov
mov
xor
std
into
shll
addr16
ds
scas
in
fwait
cld
cmpsl
fsts
sub
mov
in
pop
and
xchg
jmp
dec
pop
cli
sbb
lods
pop
xor
xor
sbb
jl
lahf
sbb
imul
adc
adc
xchg
inc
repnz
mov
sbb
xchg
add
sbb
insb
aaa
cmp
pop
push
add
jle
mov
xchg
push
cmpsl
bound
loope
xor
mov
lahf
inc
fnstenv
mov
mov
push
rcll
int3
hlt
mov
daa
pop
ljmp
push
xchg
ja
sbb
sahf
ss
out
mov
mov
clc
jns
dec
and
push
lds
ret
jge
xchg
bswap
fisubs
and
mov
arpl
jo
push
jecxz
in
ret
xor
fwait
sub
call
add
bound
shlb
jmp
lock
in
xchg
xorb
and
rcrb
into
jno
and
pop
mov
mov
popf
or
sbb
cld
dec
inc
mov
testb
xchg
rclb
or
in
lods
popa
sbb
mov
jo
shll
adc
jge
jb
push
imulb
mov
sub
sbb
push
jns
or
push
adc
bswap
mov
jns
add
add
nop
push
adc
in
cmp
xchg
mov
fdivrs
lcall
mov
jmp
mov
cs
test
jp
sub
dec
xchg
jnp
inc
data16
pop
add
sub
loop
xor
xlat
mov
push
dec
lds
fists
dec
jmp
push
jecxz
js
xor
push
lods
mov
add
pop
mov
lret
mov
out
popa
adc
inc
pop
outsb
xchg
xchg
adc
fildll
lahf
pop
add
pop
jmp
je
jbe
mov
xor
mov
mov
lret
arpl
fildl
int3
add
jecxz
movsl
fldcw
cli
xor
jl
sti
repnz
lods
je
imul
pop
sbb
shrb
push
adc
xor
loopne
stc
je
enter
xchg
stos
je
pop
mov
loope
mov
dec
test
pop
xchg
enter
xor
sub
jbe
cmp
scas
dec
adc
mov
xchg
cmp
popa
push
jns
out
scas
out
mov
test
je
mov
push
fwait
paddw
stc
fimull
cli
cs
mov
imul
mov
pop
cmpsb
scas
stc
xor
fldl
mov
inc
lods
mov
addr16
inc
mov
fcoms
lods
mov
sub
ja
pop
adc
mulb
push
pop
xchg
out
mov
lock
push
test
data16
out
sahf
and
sbb
andb
mov
loope
xchg
shll
pop
push
push
enter
aad
mov
fxam
roll
cmp
sub
mov
ss
push
push
mov
lcall
cmp
add
ret
test
into
mov
push
push
push
push
call
push
push
jmp
add
lds
fsubr
cmc
dec
mov
add
fisttps
lods
movsb
stos
cmp
rorl
lea
xlat
add
mov
es
popa
mov
inc
sub
js
push
jne
jb
aaa
and
repnz
and
jle
inc
cmpl
cli
iret
jno
inc
adc
out
jl
sub
jg
mov
iret
popf
push
cmc
or
xchg
xor
sbb
or
sub
dec
enter
add
ss
dec
lret
mov
push
daa
mov
in
jb
fwait
movsb
or
loope
sub
mov
rorl
pop
shrb
mov
lea
lock
cli
sahf
js
jmp
adc
jecxz
mov
loopne
filds
push
lea
add
dec
test
out
xchg
add
cltd
adc
in
inc
xchg
inc
pop
jg
test
call
cwtl
xchg
sub
and
xchg
and
add
icebp
xchg
sahf
mov
pusha
arpl
insb
imul
sub
test
movsl
lret
inc
dec
movsl
fdivr
aas
jbe
mov
pop
add
filds
scas
nop
cmpsb
sbb
xor
inc
pop
mov
inc
mov
mov
xchg
mov
cmp
cmp
cmpsb
inc
rorl
push
sbb
lea
xor
cmc
es
jb
jae
adc
repz
mov
cmp
cwtl
jge
mov
xor
push
jl
in
in
push
repz
xor
sbb
cmc
sbb
data16
jg
push
push
pop
iret
or
sub
inc
jg
cs
shrl
xor
mov
outsl
out
pop
test
pusha
add
arpl
xchg
fmull
mov
xchg
inc
mov
out
std
sbb
mov
xor
mov
stc
xor
lret
inc
add
mov
xor
fldl2t
pop
mov
pop
add
or
pop
xor
ret
jnp
scas
jg
std
int3
and
fnstsw
aad
cmpsl
jns
cmp
pop
loop
loopne
push
inc
insb
sub
lds
xlat
outsl
icebp
loope
cmpsl
mov
inc
cmpsl
into
and
shrb
sbb
mov
push
enter
jbe
aam
add
aad
mov
loop
ljmp
cli
sahf
fisttps
sarb
cwtl
jnp
push
pop
or
add
xchg
sti
loope
out
ds
and
out
fistpl
pop
ja
insb
popa
and
aas
pop
and
in
cld
cli
push
xor
idivb
nop
movsl
and
fdivrl
xor
gs
push
jno
cmp
xchg
dec
inc
sub
icebp
sbb
fisttpll
imul
je
xor
push
mov
es
inc
rcrb
mov
mov
push
stos
add
or
mov
adc
push
lea
mov
fldcw
call
adc
xchg
add
xor
lds
mov
mov
dec
pushf
outsb
imul
sbb
inc
xlat
pop
clc
aas
inc
hlt
cmc
testl
das
cwtl
loopne
mov
leave
testl
cwtl
repnz
loope
pop
mov
push
pop
adc
adc
loope
rorl
out
and
sub
insl
notb
push
test
pop
dec
jb
orl
add
jb
mov
pop
mov
daa
pop
test
jp
popa
pop
or
scas
adc
push
mov
push
aad
addr16
cs
enter
dec
icebp
add
aam
pop
mov
mov
inc
mov
mull
xor
addb
mov
or
imul
gs
push
repz
mov
pushf
call
mov
lods
and
or
lret
hlt
jecxz
mov
sub
addr16
jae
ror
or
into
out
pop
out
and
loopne
push
rcrb
repz
mov
loope
pop
pusha
jp
pop
pop
mov
daa
enter
and
das
rol
addl
testb
jno
adc
xor
mul
in
cmp
mov
fists
push
aad
jo
mov
mov
in
stos
adc
pop
cwtl
loop
xor
aaa
movl
shrl
add
cmp
or
mov
push
insb
jns
push
sub
into
adc
bound
idivb
mov
lret
out
xchg
fwait
dec
cmp
xchg
mov
or
dec
push
in
hlt
aas
push
fs
pusha
cwtl
fdivrl
sbb
pushw
push
xchg
lret
push
add
pop
bound
dec
sbb
dec
jns
std
ret
lods
int
orb
std
and
push
cwtl
adc
push
push
jns
push
movsb
xchg
sarl
cmc
aaa
movsl
inc
and
negb
inc
rcrb
testl
jb
std
jecxz
xchg
cmp
jae
jle
lcall
ret
addr16
sub
xor
mov
adcl
insb
ja
popa
outsb
lahf
cmpsl
jns
inc
lea
cmp
outsb
js
adc
addr16
rorb
mov
test
sbb
pop
add
imul
pop
out
mov
inc
shll
repnz
mov
int
push
daa
and
sub
test
sub
aad
nop
lret
fildll
inc
repnz
stos
fimuls
and
and
pop
aad
sbb
adc
push
sbbl
cmp
mov
push
repz
std
xchg
cmp
dec
mov
jnp
js
mov
mov
inc
xor
sub
pop
jno
mov
mov
insb
mov
lea
fstp
mov
add
andb
push
into
add
cwtl
jo
movsl
cmpsb
scas
ficompl
mov
sarl
call
hlt
js
mov
dec
xor
xor
rorl
dec
call
mov
out
jge
cli
inc
mov
shll
scas
adc
jo
and
loop
imul
enter
gs
sahf
sbb
jbe
jg
or
cwtl
push
lret
ret
jmp
negb
pusha
dec
imul
mov
sub
jecxz
and
xchg
test
sub
fucomi
lahf
lods
pop
popa
fnstsw
push
cs
test
push
pusha
and
test
aad
add
pop
imul
pop
push
jbe
cmp
pop
lds
aam
fildll
mov
and
add
cwtl
mov
adc
rcll
icebp
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pop
jno
mov
rolb
xchg
pop
inc
jmp
push
cmp
mov
mov
xchg
dec
lods
adc
lods
inc
xchg
push
ljmp
daa
cmpsl
movsl
jp
pop
out
mov
mov
xchg
xor
and
jne
inc
js
adc
mov
push
sbb
lcall
dec
lahf
adc
into
add
aas
cmpsl
movsb
push
push
xchg
mov
fdivrl
push
roll
out
jg
hlt
imul
leave
and
in
ds
enter
fsubs
lods
pop
jge
jae
xorb
push
imul
add
fs
push
into
sahf
jecxz
sbb
fwait
inc
pop
hlt
sarb
pop
adc
sub
imull
movsl
dec
xchg
lret
jl
sbb
cmc
cmpsl
not
andl
adc
mov
ljmp
push
mov
push
cmp
inc
imul
xor
push
push
adc
xchg
pop
xchg
dec
and
xchg
arpl
in
inc
mov
lcall
push
jge
aad
cld
call
sbb
bound
pop
imul
sub
jb
push
hlt
repz
and
lret
xchg
cwtl
lods
adc
pop
and
add
mov
les
out
cmc
mov
lahf
ljmp
pop
ljmp
dec
pop
xor
lret
fucomp
mov
bound
lock
jl
push
and
cwtl
addl
inc
push
cwtl
pop
sub
imul
das
popa
lret
push
imull
scas
es
xor
lods
or
and
pop
rorl
inc
orl
pop
out
dec
mov
cmp
out
test
push
je
dec
les
push
cmc
jb
mov
dec
push
and
jo
or
movsl
mov
out
popf
xor
lods
pusha
sub
mov
loopne
lods
and
imul
push
xor
push
cld
push
xchg
jl
jne
inc
stos
int
cmp
sti
push
sub
xchg
scas
mov
cmp
mov
or
int
cmc
mov
fldl
in
repz
sti
das
leave
rorl
pop
and
dec
in
nop
jb
and
mov
inc
js
insl
mov
and
sbb
xor
in
or
addr16
lea
inc
imul
pop
sub
mov
add
adc
std
ja
loopne
fidivrl
aad
adc
push
cmp
jno
lds
mov
fpatan
daa
scas
and
xor
ja
aaa
lret
cmp
insb
sbb
fwait
int
repnz
aas
into
data16
sub
xchg
icebp
in
lret
aaa
jo
mov
sbb
movsl
gs
cld
in
jle,pt
push
enter
fwait
loop
push
jmp
cmp
xor
shrl
iret
sub
xchg
jg
push
decb
popa
add
add
inc
push
sti
inc
aad
lods
mov
cmp
push
inc
and
inc
and
sbbb
xor
std
cwtl
arpl
call
or
enter
mov
lods
frstor
fildll
mov
xor
in
push
sub
repnz
pop
jo
das
xlat
lock
xchg
outsl
clc
fstpt
xor
subb
filds
dec
ret
in
sbb
les
mov
mov
cld
cmp
shlb
test
pop
fidivs
xor
pop
inc
ja
out
add
push
rorl
aam
test
push
ss
cvtdq2ps
lret
pop
aaa
cmp
fistpl
rorb
push
out
mov
in
xchg
mov
rcl
mov
pop
xlat
push
and
xchg
mov
mov
out
add
movsl
in
out
jecxz
test
loope
pusha
clc
lcall
in
mov
pop
sub
mov
or
or
dec
ja
inc
jbe
fstp
leave
mov
mov
dec
push
or
sub
pop
dec
lock
and
test
add
ffreep
push
jecxz
sub
bnd
jne
inc
out
sti
cmc
jne
popf
iret
xchg
sbb
mov
mov
push
outsl
cmp
data16
cli
cmpsl
pop
pop
hlt
inc
roll
push
mov
jmp
js
xlat
mov
jecxz
mov
ja
push
insb
insb
dec
bnd
loop
sbb
icebp
bound
mov
cmp
out
sysret
cli
dec
jns
xchg
rorl
adc
loope
les
sbb
adc
adc
lods
ljmp
cs
jecxz
or
pushf
ss
ja
jl
mov
das
or
daa
jbe
adc
nop
xchg
mov
lret
int3
xlat
jns
inc
movsb
shlb
insb
fs
out
enter
test
shrb
xor
rcrl
jle
pop
negl
cmp
lds
xorl
mov
and
xchg
mov
pop
or
adc
add
insl
pushf
rcr
sub
cmpsl
inc
or
fiaddl
faddl
and
push
or
movsl
shll
adc
push
sub
lock
push
mov
fwait
lock
movsl
mov
and
ljmp
imulb
pop
lret
xchg
lcall
icebp
mov
push
adc
mov
or
jp
call
outsl
jns
push
xor
xor
xor
sub
pop
jl
and
mov
push
inc
mov
cs
es
xorb
in
popa
rcrl
push
mov
push
xchg
test
sbb
mov
add
sbb
sar
cmpl
add
sub
cwtl
fidivrs
ljmp
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
repz
mov
add
pmullw
and
je
outsb
test
js
dec
aam
call
lea
fucomip
popa
ret
daa
or
pop
mov
cmp
sub
mov
repnz
inc
xchg
clc
test
fs
xor
arpl
or
adc
and
jle
scas
mov
test
mov
xchg
xor
xchg
jp
dec
pop
sarl
push
fld
aaa
leave
inc
and
jp
xchg
test
vxorps
dec
and
cmpsl
test
data16
lahf
mov
imul
loopne
and
and
push
stc
jae
cmpsl
repnz
pop
xchg
adc
push
lods
xor
xchg
ds
add
jp
out
and
jle
iret
pop
inc
inc
pop
sarb
jmp
cmpsl
mov
cs
jae
jbe
mov
sbb
cmp
mov
sahf
pop
xchg
mov
push
jbe
sub
push
je
cli
hlt
daa
mov
push
mov
sub
shl
cmc
daa
das
add
pop
insl
addr16
push
mov
dec
jecxz
or
hlt
lds
push
inc
je
aad
mov
es
and
mov
jmp
jae
push
push
sbb
jae
mov
mov
push
push
sbb
dec
cmp
dec
pop
cmp
ja
and
mov
fsubrl
mov
or
das
sbb
lea
sti
into
out
icebp
jno
lds
rclb
movsl
movsb
mov
lock
push
mov
inc
aad
jge
mov
enter
scas
dec
outsl
sbb
out
mov
cmp
stos
or
xor
dec
inc
hlt
xchg
or
push
rcrl
lret
mov
cmpsl
xor
jp
jmp
pop
rolb
xchg
call
int3
sub
sbb
aas
cld
hlt
sub
incl
lea
cmp
mov
cld
iret
add
in
cltd
dec
and
aas
enter
jnp
or
adc
sbb
jae
mov
pop
scas
insb
sub
push
mov
push
lret
xor
mov
aaa
or
insb
insb
in
mov
fs
lock
mov
mov
filds
loop
jecxz
adc
loope
dec
adc
out
mov
and
faddp
frstor
les
pop
aas
decl
jle
and
pushf
inc
js
adc
and
and
leave
mov
push
adc
rcr
loope
les
shll
inc
pop
js
scas
xor
scas
push
aaa
adc
mov
xchg
jae
testb
es
sti
add
cmp
repz
sub
sbb
icebp
push
cmpsl
add
sbbb
mov
aad
cmp
lods
cmp
mov
arpl
or
in
jo
outsb
sbb
ds
sbb
push
jg
iret
lcall
adc
cmp
push
mov
iret
mov
scas
pushf
ljmp
sub
mov
out
ja
nop
hlt
xor
into
xchg
clc
sbb
mov
mov
sub
add
adc
xlat
out
test
mov
mov
out
jne
or
fwait
pop
cmp
notb
adc
movsl
popf
dec
mov
jb
add
push
mov
movsb
hlt
ret
sbb
sbb
jmp
and
mov
mov
mov
lcall
jg
ficomps
adc
aas
inc
repz
cmpsl
or
out
daa
cmp
jecxz
dec
push
xchg
testl
lock
imul
vpunpcklwd
addr16
pop
jge
rcrb
bound
lahf
bnd
pop
mul
cmp
push
lods
jae
jno
cmp
pop
xlat
stos
sbb
push
inc
inc
iret
stos
out
ret
jno
pop
cmp
addr16
int
pop
stos
jge
lods
pop
or
mov
cmp
push
sbb
ljmp
nop
lcall
push
push
decl
pop
iret
mov
sbb
ss
pop
dec
adc
dec
or
ror
push
mov
add
arpl
loop
bound
dec
aaa
imul
inc
movsl
in
pusha
pop
fdiv
lods
lret
dec
push
mov
icebp
mov
sub
jp
out
lcall
dec
xor
xlat
out
repz
xor
adc
xor
inc
sbb
mov
push
imul
lock
pushf
and
std
and
push
and
ficoms
jnp
and
ljmp
sbb
pop
or
xchg
push
lods
sbb
idivl
adc
sub
jmp
stos
add
jae
pop
ficomps
stc
push
mov
test
popa
xchg
xlat
sub
mov
mov
into
nop
push
sub
daa
jb
or
mov
iret
and
jl
scas
and
inc
cmpsl
pop
dec
movsb
insl
mov
aas
jbe
adc
ss
pop
push
mov
add
or
inc
mov
pop
adc
in
mov
arpl
inc
dec
outsl
adc
outsl
cmp
cmpsl
add
xlat
dec
mov
nop
mov
imul
imul
icebp
lcall
push
in
inc
out
fldl
es
and
and
ret
dec
hlt
sub
xchg
jne
cli
shr
xor
cli
mov
int3
sub
sub
mov
pop
adc
mov
or
cli
inc
cmp
xor
repnz
sbb
mov
arpl
dec
push
mov
enter
jo
mov
test
mov
lret
sub
fmull
and
xchg
cmp
mov
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
add
paddq
jns
jge
shr
dec
into
jno
sahf
fstpt
adc
push
xor
push
pop
mov
jmp
imul
mov
jne
cmpsl
push
aas
push
ljmp
sbb
or
sub
fs
lock
pop
xor
je
adc
mov
cmovbe
mov
stos
imul
mov
cmp
int
in
out
sbb
xchg
stc
cmp
xchg
shl
lods
pop
push
lods
push
incl
cmpl
cmpsl
mov
int3
in
mov
sbb
dec
inc
mov
ljmp
adcb
out
gs
subb
stos
outsl
or
add
loope
in
fimull
arpl
adc
or
movlps
or
jle
mull
sbb
fwait
or
inc
pusha
adc
or
sub
loopne
mov
sub
popf
sti
ja
out
lea
mov
dec
rep
push
test
lret
and
in
lds
push
lods
fnstcw
or
add
dec
jmp
fdivrl
add
ret
out
pop
jmp
xor
addl
cmp
test
and
sub
into
fisubl
shrl
add
mov
xor
or
js
jge
rolb
jp
out
out
addr16
lods
es
cli
dec
mov
popa
or
stc
adc
loop
fs
mov
mov
adc
xchg
xor
sub
mov
pop
add
gs
pushf
fdivrs
int3
lds
sbb
sub
jp
adc
cmp
je
mov
mov
push
in
das
pop
mov
push
in
mov
icebp
aad
jae
push
push
test
mov
mov
mov
and
dec
xchg
mov
mov
fmulp
inc
faddl
sbb
push
xchg
aad
inc
lds
pop
cmpsb
int3
pop
aad
pop
ljmp
mov
bound
cmp
add
or
ss
imul
add
push
push
cmp
rcrl
or
out
xlat
inc
stos
push
les
in
test
outsl
adc
out
test
ja
mov
popf
lock
loopne
pop
cmc
subl
fildl
inc
or
nop
lock
data16
test
fsts
mov
in
inc
push
stos
push
ror
insb
jno
rorl
inc
add
mov
jns
cmpb
mov
insb
arpl
jg
loop
inc
jle
call
push
movsb
imul
jle
sub
imul
pop
add
add
xor
inc
mov
inc
pusha
test
repnz
mov
into
jns
fs
cltd
popa
daa
sub
sbb
enter
in
mov
sub
jnp
fnsave
pop
and
pop
ljmp
push
outsl
xchg
cld
mov
xlat
jge
mov
xchg
stos
aam
enter
cmpl
lret
pop
inc
push
test
pusha
inc
popf
pop
lods
adc
and
call
lcall
sub
pushf
test
pusha
xchg
mov
test
dec
movl
repnz
cmp
fcomps
les
or
pop
insb
inc
in
adc
inc
setbe
daa
add
mov
cli
icebp
es
pop
lret
aad
test
sti
aaa
sbb
fdivrl
xchg
jmp
aad
adc
add
aad
ljmp
rorl
sahf
jns
or
or
ja
pop
ficomps
jns
jle
imul
sbb
add
adc
loop
jg
out
mov
or
pop
push
xor
mov
lods
xchg
fisttpl
adc
mov
cmp
sbb
nop
mov
hlt
and
daa
and
push
dec
sti
insb
cmovge
out
loopne
mov
jns
lock
pop
or
inc
ret
sub
mov
bound
or
lock
icebp
roll
jmp
clc
ficoml
pop
out
jbe
mov
cmp
popa
movsl
mov
xlat
cmp
pop
jno
aaa
lods
jmp
pop
or
in
dec
sbb
or
xchg
cmp
pop
stos
jge
pop
out
movsb
xor
or
sbbb
xlat
mov
add
xor
push
mov
fwait
and
pop
sbbb
mov
mov
and
pop
add
ret
adc
ret
popa
and
icebp
inc
pop
mov
call
test
push
jge
push
sub
stc
sbb
pop
sti
fnsave
mov
push
sbb
int3
pop
js
lea
sbb
scas
gs
pop
inc
sub
in
lea
addr16
mov
sub
jo
das
out
jp
dec
nop
cwtl
add
and
jmp
es
xchg
dec
mov
pop
sub
xchg
pop
cli
ds
aam
pushl
pop
scas
and
push
andl
inc
fsubp
insl
dec
scas
test
lods
lahf
or
pop
jmp
xor
addl
leave
dec
lret
pusha
pop
xor
cltd
or
fiadds
testl
xor
add
icebp
jno
inc
jae
pop
mov
pop
dec
dec
dec
orb
jmp
xlat
jns
sbb
mov
bound
add
mov
je
dec
xorl
jge
je
pop
mov
sbb
pop
lock
or
int
pop
loop
aaa
cmp
or
dec
loope
mov
push
bound
fimull
je
lods
pop
xor
mov
and
inc
aas
jmp
fsub
pop
test
rcll
push
gs
imul
ret
dec
jge
fdivl
fs
pop
push
jp
pusha
cmp
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
movd
lret
test
jle
sarb
in
dec
mov
sbb
dec
lret
roll
imul
and
push
jmp
ljmp
cmp
cld
mov
mov
test
mov
inc
std
clc
mov
dec
cmp
ss
adc
lcall
orb
loope
int
and
lods
sbb
adc
leave
xchg
push
pop
and
dec
mull
scas
jb
rolb
ja
jbe
loop
or
sbb
pop
push
nop
adc
fdivl
push
imul
push
sbbl
mov
data16
insb
xchg
bt
es
aaa
or
repz
xchg
mov
mov
pop
mov
lcall
jmp
pop
stos
add
sbb
sub
xchg
lods
jmp
mov
or
into
sbb
scas
pop
fs
add
jo
addl
jno
cmp
pop
testl
fidivl
and
addl
test
lds
adcl
out
mov
dec
aaa
mov
mov
xor
sbb
cmp
scas
add
or
mov
sub
jle
out
inc
aas
mov
rorl
xchg
shl
mov
fidivl
inc
in
mov
or
or
call
addr16
push
inc
and
loop
push
cmp
popf
cmp
data16
dec
push
loope
notl
ret
lods
in
pop
add
inc
ja
sub
lock
jnp
xchg
ljmp
lods
xchg
stos
lcall
repz
std
shl
popa
pop
iret
sbb
pop
sub
stc
push
pop
mov
lods
mov
sub
lods
pushf
and
mov
rolb
movsl
mov
push
mov
xor
loopne
pop
jbe
mov
push
cmpsb
sub
cmp
jge
mov
xchg
mov
xor
mov
push
jl
insl
aad
jecxz
mov
roll
stos
gs
xchg
stos
mov
push
mov
out
pop
cmp
stos
mov
cmp
cmpsl
ja
popa
out
xchg
or
jnp
imul
imul
stos
inc
fstp
in
stos
jl
inc
aaa
ret
movsb
pop
hlt
into
loop
and
xchg
lods
mov
jns
and
lahf
daa
lds
les
add
ret
incb
add
cmp
push
test
pop
and
pushf
xchg
fisttpl
pop
lcall
adc
push
dec
xchg
xchg
mov
jmp
mov
fsubl
cmpsl
ret
mov
int3
cmp
pop
xor
ja
cmc
in
xchg
cld
hlt
outsb
popa
lcall
aam
sbb
pop
mov
out
jae
dec
cli
lcall
cs
and
pop
push
les
jge
imulb
jo
cltd
sbbb
cwtl
jb
mov
and
mov
jbe
xchg
jmp
xor
dec
jno
das
inc
ljmp
mov
test
and
mov
das
or
push
mov
lret
arpl
arpl
push
popf
xchg
xchg
fwait
pop
es
pop
adc
push
lea
pop
cs
pop
andb
sbb
icebp
xor
stc
les
aam
pop
or
gs
mov
push
adc
fidivrl
mov
dec
fidivs
or
adc
arpl
fsts
xchg
adc
sub
inc
fistps
popa
sbb
movl
inc
out
test
adc
sbb
mov
or
icebp
lcall
stos
rolb
iret
adc
jb
mov
icebp
js
bound
std
mov
arpl
inc
sub
cmpsb
clc
je
adc
mov
imul
addr16
sbb
scas
mov
icebp
cwtl
xor
adc
add
pop
daa
mov
das
mov
nop
mov
jle
add
fwait
jne
jmp
mov
inc
mov
jg
mov
lcall
movsb
mov
dec
enter
jo
or
xchg
les
int
pop
mov
pop
mov
add
icebp
inc
outsb
cmc
pop
int
jl
mov
int3
rcrb
sbb
add
adc
test
adc
dec
xchg
inc
fdivs
ret
loopne
adc
mov
out
xchg
mov
rol
fiadds
dec
add
sub
sbb
shlb
add
mov
mov
daa
cmp
popa
icebp
jmp
or
lahf
mov
pusha
mov
pop
sub
popa
xor
mov
mov
rol
push
push
xorb
jmp
cmp
dec
lret
stos
cmp
mov
jns
pop
loope
out
shlb
lods
xor
sub
cwtl
mov
cs
ss
jmp
or
addr16
ret
cmpl
push
enter
jnp
in
add
lods
jbe
in
clc
mov
inc
popf
leave
mov
cmp
mov
lret
and
xchg
mov
iret
cmpsl
push
xor
or
adc
add
pop
sub
mov
xor
cmp
cmp
mov
les
mov
int3
inc
fwait
sbb
dec
jo
fnstsw
daa
repnz
add
shll
arpl
jge
pop
jns
lret
loop
xlat
stos
aas
test
ljmp
fdivrs
je
iret
shld
fdivl
sub
adc
dec
sub
cmc
enter
ja
mov
cli
out
stc
aaa
icebp
sub
push
jg
sbb
adc
int3
shll
lcall
mov
adcb
mov
sahf
xchg
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
or
std
xchg
add
setle
es
leave
std
jnp
sahf
pop
pushf
sahf
ja
fldl
outsb
aam
and
sbb
das
arpl
push
jno
sub
outsl
jmp
pop
je
cmp
testb
fsts
rorb
repz
jle
stc
mov
pop
mov
adc
and
mov
lret
roll
jge
xchg
sub
fnsave
jne
scas
imul
rolb
ss
cli
xchg
call
int3
push
ljmp
cmp
movsb
xlat
es
nop
xor
mov
xor
sete
lcall
out
aaa
or
mov
sub
pop
push
xor
dec
push
shlb
mov
dec
lock
ret
scas
adc
jmp
stos
test
mov
fistpl
xchg
rcrb
push
data16
mov
out
leave
push
imul
xor
mov
orb
pop
mov
inc
dec
jmp
mov
outsl
cmp
stos
adc
mov
inc
and
add
inc
mov
into
imul
jle
scas
pushf
mov
ret
dec
shrl
adc
adc
or
insl
pop
inc
sub
mov
ja
rol
sub
sub
movsl
mov
mov
inc
les
cs
aaa
and
add
jmp
cmc
lahf
int3
xor
xor
lock
sub
pop
in
mov
adc
xor
push
jno
dec
xchg
push
enter
rcl
in
ljmp
pop
arpl
cmp
xchg
adc
fsubl
pop
xchg
in
push
das
xlat
in
bound
out
das
js
sarl
in
das
js
dec
and
out
inc
int3
push
fidivl
sahf
sbb
push
inc
icebp
cmp
test
jnp
sbb
inc
je
dec
daa
mov
xchg
fnstenv
outsl
or
inc
add
mov
jne
aaa
cwtl
notb
outsb
inc
jge
jb
cwtl
adc
mov
movsl
jecxz
pusha
out
ret
imul
jae
daa
nop
push
jl
pop
bnd
cmp
mov
sbb
xchg
stc
xor
mov
xchg
out
cmovp
or
push
xor
xlat
or
mov
cmp
inc
inc
add
cmpsb
adc
sbb
ljmp
popf
insl
dec
cmp
xlat
adc
adc
add
int3
pushf
mov
pop
mov
fidivrl
mov
mov
sbbl
js
pop
lea
adc
test
mov
lods
push
jmp
and
sub
push
stc
inc
call
xchg
in
imul
movsl
adcl
cmp
imul
hlt
repnz
jbe
cmc
push
and
cmp
jnp
clc
jo
push
pushf
adc
cmp
popf
scas
inc
pop
xchg
sti
cmc
sub
mov
stc
mov
gs
loope
sbb
movsb
dec
xor
rorb
mov
stos
loop
arpl
lcall
sbb
xor
jmp
mov
dec
repnz
fmuls
sbb
clc
jge
push
sub
rol
call
lret
pop
call
mov
push
or
xchg
enter
adc
fnstcw
or
lock
mov
mov
sub
ret
cwtl
cmp
iret
cmp
push
std
push
sub
xor
in
push
cmc
cmp
sbb
ds
jle
push
repz
fldt
loope
xor
or
inc
lahf
cmp
push
dec
add
test
rolb
xor
outsl
add
movl
push
test
lret
mov
dec
cwtl
dec
mov
das
dec
orl
push
das
stos
push
push
in
lret
fnsave
lret
jge
add
adc
in
fnstsw
sub
xor
arpl
or
mov
or
xchg
scas
mov
mov
and
sub
mov
xor
pop
jle
add
imul
mov
push
rcl
push
cmp
mov
cmp
insl
mov
ret
testl
cltd
mov
enter
fcompl
loop
sub
xor
lea
hlt
cmpsb
in
aas
push
xchg
jge
out
loopne
mov
pop
jne
cmpsb
jae
inc
imul
mov
inc
sub
popf
dec
jne
mov
mov
inc
inc
out
shlb
add
xchg
es
push
decb
sub
jp
mov
mov
and
jnp
adc
pop
add
orb
ljmp
pop
sahf
cmp
push
repnz
fdivs
testl
mov
cmp
fstl
pop
nop
aas
sub
jge
sahf
fldenv
jae
orb
stos
mov
fdivp
scas
xor
xchg
xchg
stos
xchg
stc
lods
mov
xor
dec
loop
mov
out
daa
das
jmp
or
pusha
test
js
int3
dec
dec
imul
xchg
cmp
fcmovu
mov
stos
scas
dec
js
mov
cld
lahf
mov
movb
mov
cmpl
push
fisubrs
es
ja
sub
repz
aaa
push
and
push
ljmp
cmp
sbb
call
repnz
sahf
cmp
ss
cltd
jecxz
xor
dec
pusha
cmp
fwait
cs
fdivrs
loop
ja
test
push
cmpsl
push
roll
bnd
push
xchg
mov
imul
mov
lea
adc
inc
mov
addl
data16
push
faddp
or
xchg
adc
insb
mov
pop
idiv
jmp
mov
xchg
mov
mov
mov
or
pfcmpeq
xor
loope
int
leave
cmp
imul
mov
mov
in
and
and
idivl
lret
pop
cmp
subl
test
push
psubusw
outsb
ret
cs
push
xchg
dec
jns
jne
out
push
jae
cs
xchg
jecxz
adc
and
cmpb
aad
and
fldcw
xchg
out
add
out
mov
enter
xchg
inc
sti
and
call
fwait
popa
sar
js
mov
cmp
lret
mov
sarl
dec
pop
loop
jnp
or
xor
lods
insl
pop
getsec
das
lds
popf
iretw
or
scas
push
and
lock
lea
jnp
dec
xchg
cltd
push
dec
stc
push
cltd
idiv
in
jo
adc
cltd
pusha
ss
jae
inc
es
dec
mov
xchg
cmp
cmpsb
adc
ja
cmp
jecxz
call
rcrb
inc
xchg
mov
push
jo
dec
dec
cmp
leave
iret
jno
adc
cmp
adc
inc
jae
dec
push
lods
mov
adc
dec
stc
dec
adcl
adc
push
and
and
add
mov
dec
in
ja
pop
das
int3
xchg
test
mov
and
pusha
scas
cli
inc
mov
xorb
jbe
lahf
sub
dec
xchg
pop
call
aaa
xchg
lea
imulb
fcompl
mov
sbb
bnd
adc
imulb
dec
roll
pop
or
out
sbb
cmpsb
lcall
scas
ljmp
shll
je
xor
ds
push
cmc
inc
sub
sahf
rcl
pusha
add
mov
outsl
jge
cwtl
sbb
and
xchg
jge
jecxz
cmpsb
lods
mov
pop
test
xor
sub
ficoml
pusha
sbb
or
fistps
in
movl
dec
mov
mov
andb
jae
jmp
stos
cmp
push
mov
into
das
adc
bound
or
sub
xor
push
cmp
jb
mov
fs
mov
mov
sbb
mov
or
jnp
in
lret
out
pop
cmp
jae
pop
sbb
lret
xchg
cmc
inc
xchg
add
mov
jp
call
mov
in
dec
pop
icebp
flds
push
jnp
js
push
cmpl
insb
fdivs
and
in
add
movsb
mov
inc
out
push
dec
insb
insb
jg
dec
jg
and
in
movb
push
hlt
and
lret
push
test
mov
popa
test
and
imul
cmp
xchg
push
aas
incb
dec
js
cmc
sbb
andb
dec
pop
fimull
cltd
outsl
pop
and
pop
in
mov
xor
adcl
aam
lods
sub
sub
jmp
in
pop
push
fmull
mov
shrb
mov
into
pop
fiaddl
ljmp
mov
arpl
daa
mov
or
movsb
or
fwait
mov
cltd
mov
mulb
jl
mov
cmp
in
mov
push
and
inc
adc
mov
decb
push
mov
push
and
mov
adcb
and
xlat
and
cmp
cmpsb
das
jnp
cmpsl
ret
sbb
mov
popf
lea
aas
fcmovnu
adc
pop
mov
call
fldcw
xor
pushf
outsl
push
sbb
pop
dec
dec
adc
cli
add
loope
bound
sub
sub
push
clc
or
mov
xchg
loop
call
dec
in
imul
test
xlat
imul
lock
pop
stc
adc
ficomps
repz
pop
xchg
mov
add
clc
cmp
pop
sahf
cmp
pop
xor
mov
imul
xchg
or
shr
adcl
andb
pop
mov
xor
mov
sub
or
fwait
cwtl
jae
sbbl
inc
mov
mov
adc
loop,pt
dec
push
loope
repz
daa
and
scas
xchg
push
stos
jae
arpl
sarl
pop
mov
rcll
xor
or
adc
stos
inc
iret
ja
cmpsl
push
sub
div
bswap
adc
stc
xchg
rorl
rclb
cli
ljmp
pusha
xchg
dec
push
or
xor
cli
xchg
jecxz
cmpb
stos
int3
movntq
jne
lret
decl
xchg
push
push
adc
dec
or
out
stc
adc
lds
cmp
js
out
mov
cmpsl
xchg
dec
jne
jae
je
leave
leave
fistl
je
add
mov
cmp
ficoms
addr16
dec
inc
adc
adc
dec
sub
xchg
pop
scas
adc
push
lahf
sub
stos
and
int
cwtl
popa
fisttps
shl
pop
je
lods
add
jo
out
xor
adcl
outsb
fistps
outsl
sub
imul
cmp
cmp
mov
movb
push
and
std
sbb
pop
or
push
rorl
ror
gs
js
stc
adc
mov
arpl
or
js
addb
cld
in
jg
cmp
jp
and
mov
or
push
mov
or
sahf
xor
mov
push
adc
push
push
js
mov
inc
and
mov
dec
fimull
inc
adc
fmull
push
bound
jnp
add
int3
jb
test
pusha
rorl
adc
mov
in
and
insb
mov
push
sub
push
lret
and
pop
dec
lcall
std
push
stos
outsl
pop
cmp
loopne
inc
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
push
test
invd
add
pmaxub
adcl
clc
int3
aam
popf
push
cmp
jbe
adc
mov
xchg
stos
xchg
mov
cmp
sbb
decl
mov
mov
push
xchg
bound
jl
aaa
gs
dec
pop
mov
pop
js
push
negl
mov
inc
divb
mov
cmp
sbb
mov
lea
xchg
mov
jmp
aad
or
dec
jno
out
mov
adc
inc
cmp
js
rcrb
xor
jno
data16
lods
sub
rclb
cs
mov
in
cli
dec
xlat
movsl
cmpsl
push
sub
sbb
dec
xchg
aam
sbb
cli
push
sub
icebp
scas
or
imul
movsl
out
test
fimuls
and
addr16
dec
aam
jb
dec
jle
mov
shlb
xchg
sub
call
aam
int3
loope
pop
out
ds
cmp
fstps
push
jno
pop
jns
sub
jbe
inc
push
cltd
std
popf
rol
sub
es
stc
leave
repz
sti
jb
rcl
add
cmc
inc
dec
cmp
mov
jmp
push
adc
aas
push
xchg
sub
mov
or
xor
fdivl
insb
xchg
stc
mov
jle
roll
stos
daa
int
stos
dec
sti
cmp
scas
xchg
jmp
shl
and
push
dec
mov
mov
adc
jle
lods
mov
out
cs
aaa
mov
jecxz
out
arpl
add
cld
jmp
jbe
and
dec
cmp
pop
add
stos
loopne
or
add
jbe
lfs
push
ss
mov
lods
clc
push
sahf
jp
in
dec
imul
test
xor
jl
dec
negb
adc
push
mov
xchg
in
fwait
nop
jno
add
iret
imull
mov
jnp
pusha
lcall
sub
and
and
movsl
loopne
jae
xor
aam
and
sub
jg
pop
adc
xchg
xchg
mov
iret
push
add
or
decl
dec
outsl
xchg
mov
xchg
xlat
clc
sub
fmull
pop
pop
pop
xor
test
lcall
xchg
mov
push
or
movb
movsb
mov
int
popa
icebp
dec
lcall
sub
mov
subb
push
cmp
fiaddl
ss
data16
pop
cli
cld
pushf
out
mov
ljmp
andl
movsb
pop
aas
jne
xor
sbb
out
push
sbb
inc
mov
sbb
sbb
push
loopne
fadds
mov
rcrb
pop
jge
cmp
push
scas
mov
push
push
mov
ljmp
dec
scas
push
push
lret
popl
pop
mov
hlt
subl
inc
lahf
popf
bound
int
out
es
stc
cmp
aam
ljmp
enter
cmc
inc
cld
loope
and
int
daa
into
cmp
mov
jle
jae
stc
lahf
mov
xor
js
insb
mov
and
mov
int
cli
push
mov
jecxz
or
add
aaa
jne
lret
xlat
addr16
lcall
scas
mov
xchg
cmpsl
and
add
dec
cmc
pop
aad
jo
dec
pop
xor
sbb
popa
sahf
pop
sbb
and
sti
cli
faddl
enter
call
dec
js
iret
xor
aaa
adc
add
and
sbb
adc
mov
call
sub
imul
imul
xlat
jecxz
jo
lret
sbbl
inc
xor
mov
mov
jle
rcll
lock
inc
sub
stc
sub
fs
data16
mov
gs
push
int
xchg
and
lods
jge
lock
mov
pusha
add
pusha
les
stc
ret
cltd
aad
mov
or
push
add
mov
fidivrl
iret
inc
or
mov
mov
cmp
loop
in
pop
push
jmp
xchg
stc
fstl
and
sbb
cmp
stc
xor
xor
roll
pop
jge
xor
lock
and
fists
xor
cmpsb
sbb
push
mov
call
addb
adc
add
sbbl
pop
ds
sbb
call
imul
xchg
pop
arpl
icebp
fprem
push
loope
or
test
and
aam
dec
test
aas
sub
mov
dec
mov
stos
gs
and
mov
mov
rclb
mov
or
sub
push
push
pusha
iret
push
sbb
push
fldt
jecxz
ds
mov
xor
enter
adc
xlat
xor
push
xor
das
dec
aad
aaa
xor
je
adc
sbb
fsubrs
sbb
xor
loope
dec
and
xchg
fsubp
xchg
mov
rorl
test
pop
leave
enter
add
xor
loop
adc
outsb
pusha
aaa
out
xchg
shlb
ds
lret
mov
cld
outsb
inc
sub
lods
cmpsl
xlat
push
ss
lret
sub
jae
mov
pop
inc
lock
ficoms
xchg
jb
popf
sub
daa
arpl
push
insl
xchg
mov
or
stos
repnz
insb
jns
sub
sub
fst
mov
in
movb
pop
pop
jge
pop
sub
cmpb
mov
adc
mov
jecxz
movsl
movsb
mov
scas
and
pop
xchg
cmp
or
push
clc
stos
testb
subb
or
xor
daa
popa
sub
inc
pop
dec
iret
out
jo
ds
push
scas
dec
rcpps
xchg
xchg
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
inc
xor
mov
add
setg
push
icebp
les
enter
xor
push
mov
jne
cmp
mov
nop
pop
js
dec
cld
or
jo
push
jne
add
dec
mov
aam
fwait
jne
inc
cltd
rcll
outsl
jo
pop
mov
xor
and
push
cmp
pop
pop
movsl
jnp
stos
xor
in
sub
sub
sub
adc
cmp
mov
cwtl
loope
shlb
xchg
sub
lcall
xor
imul
jl
add
xchg
xchg
pushf
and
movsb
popa
mov
test
dec
dec
mov
leave
inc
stc
xor
ret
cmpsl
lods
sahf
sbb
mov
mov
cmpsb
and
pop
mov
stos
lcall
xchg
int3
nop
push
mov
xchg
inc
inc
xor
adc
fsubr
xchg
dec
xchg
dec
pop
fidivrs
ret
push
leave
push
shll
outsb
lods
mov
aad
cmp
insl
cmp
jbe
cli
inc
fldenv
sbb
sub
loopne
push
in
push
into
fst
shlb
pmaxub
inc
mov
je
sub
xorl
je
leave
insl
mov
jge
mov
add
stos
jns
dec
movsl
pop
movsb
lfs
aam
sub
mov
fildll
sbb
pop
and
imul
mov
movsl
popf
test
sub
pop
vmulpd
xor
in
in
call
adcl
movsb
push
push
loop
cltd
stc
lea
je
sub
aas
inc
sbb
mov
pop
nop
js
movq
xor
add
dec
sbb
lcall
pusha
jne
aaa
fcompl
shrb
iret
int
sbb
pusha
jge
xchg
mov
cmp
jne
aad
mov
loopne
cmpsb
mov
push
fidivs
call
outsb
in
jmp
mov
push
mov
and
adc
push
vmovapd
iret
ja
xor
les
xor
inc
push
push
fxch
mov
idiv
ret
pop
adc
adc
push
ds
jmp
push
mov
push
arpl
push
push
icebp
xor
or
dec
shrb
bound
sbb
push
lods
add
repz
stos
jns
fisubrl
dec
stos
fstpl
imul
and
lea
out
bound
js
xor
call
shr
xor
pop
aam
and
dec
mov
repz
xchg
nop
push
sarl
pop
pop
fmul
mov
add
jo
sti
insl
sub
jae
jne
adc
xchg
jg
lret
lahf
cli
mov
mov
fs
push
inc
adc
jge
sbb
jbe
dec
inc
and
stos
adc
adc
inc
dec
mov
add
xchg
fucomi
outsl
jmp
and
cmpsl
bound
xchg
sub
xor
or
out
test
pop
fsubs
popa
popf
int
pop
xchg
fisubl
add
pop
cmpsl
outsl
fdivl
stos
andb
test
loopne
xchg
sub
fwait
inc
or
xchg
mov
pop
mov
pop
cmp
mov
mov
mov
adc
push
or
inc
adc
fidivs
sbb
dec
mov
in
dec
scas
bound
adcl
das
imul
jno
stos
mov
adc
or
jb
xchg
and
fucomi
mov
mov
sbb
pop
iret
fcompl
or
mov
push
push
fcmovnu
stc
jb
mov
add
inc
icebp
jmp
lret
mov
pop
fnstsw
mov
ds
loope
call
aas
nop
arpl
addb
mov
ss
mov
jns
push
pop
mov
add
out
xchg
push
xlat
aam
xchg
movsl
enter
push
daa
xchg
adc
in
pop
push
pop
cs
lcall
fucomi
jb
jg
dec
mov
jne
pop
sbb
adc
lods
sub
mov
ror
push
sbbl
js
xchg
pop
ret
push
dec
cmp
pushf
push
adc
sub
ret
jnp
out
sbb
sub
sub
or
fnstcw
sti
sub
lock
and
fucomp
add
cmpsb
sbb
mov
ret
or
arpl
fisubrl
jle
jg
and
ljmp
idivb
addl
jns
mov
fmull
mov
imul
pushf
jg
in
xchg
push
xchg
sbb
dec
imul
mov
dec
mov
packuswb
mov
sub
sarl
int3
xchg
mov
pop
mov
pop
xchg
out
loop
sub
loopne
or
xchg
lods
shll
daa
aad
push
jmp
sbb
adc
lock
mov
mov
add
push
nop
push
in
dec
fstl
cltd
out
sbb
lock
xchg
xchg
inc
and
cmp
ljmp
or
jne
notl
shl
inc
jb
call
sbb
cltd
ss
stos
aas
inc
das
sub
cltd
hlt
lods
and
lock
adc
hlt
pushf
negb
loopne
sub
test
mov
dec
adc
sbbl
mov
cmp
sub
mov
xorl
cmp
popl
lock
cmp
insb
xor
push
jmp
adc
in
xor
icebp
std
fsubs
cwtl
dec
shll
std
xor
loopne
je
adc
lods
xchg
rolb
adc
and
and
int3
lds
nop
jg
test
push
test
repnz
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
test
invd
add
std
aam
jne
push
dec
nop
jl
pop
dec
inc
int
fsubs
imull
and
dec
inc
aad
inc
xchg
mov
xor
add
cwtl
cmp
and
imul
int3
dec
mov
mov
mov
addr16
xor
pop
mov
sbb
xor
cmovp
into
aad
cmc
jle
in
and
lcall
movsl
outsl
or
ss
push
sbb
repz
cld
shrl
jle
push
cmpsb
nop
jmp
shrb
mov
sub
out
pop
dec
lds
aam
inc
arpl
cs
dec
mov
sub
js
and
imul
fwait
push
jmp
rcl
inc
inc
mov
dec
ds
sbb
pmullw
xadd
scas
mov
xchg
pop
addr16
mov
push
divl
ja
jl
add
mov
int3
push
cld
jns
lret
decl
cmp
in
idivb
sbb
and
hlt
dec
mov
lret
int
jae
or
das
test
ljmp
push
ret
xchg
test
and
cwtl
rcr
fmull
and
pop
gs
or
jp
loop
lcall
out
mov
jg
orl
fs
push
gs
inc
test
stc
xlat
out
popa
xor
and
xchg
pop
enter
enter
cmp
rorl
dec
push
jl
pop
cmp
inc
aaa
jmp
in
jp
cld
cli
pop
adc
cmp
mov
inc
or
jp
nop
fdivr
adc
jmp
add
xchg
inc
into
adc
fmull
push
sub
xor
sahf
in
jmp
mov
inc
adc
sbbl
push
cmp
sahf
test
mov
pop
xchg
xlat
sbb
or
and
test
xchg
shl
outsb
xchg
aaa
mov
stos
add
push
cli
outsl
push
sub
mov
rep
ror
dec
das
mov
into
out
jg
aas
mov
sbb
push
push
push
aaa
stos
fisttpll
mov
xor
xor
dec
cmp
out
dec
jl
mov
pop
fsin
pop
pop
xor
and
iret
fimull
ja
jp
mov
out
pmullw
add
or
mov
es
pop
pop
push
subl
aam
popa
aas
clc
fwait
sbbb
xchg
inc
jns
out
pop
or
lock
dec
dec
std
inc
pop
leave
or
cmp
adc
mov
sub
sti
push
shrl
or
dec
cld
xchg
icebp
push
sbb
jmp
mov
loopne
jmp
sti
add
jae
xor
loopne
or
negl
inc
inc
ror
lahf
out
adc
test
pop
pop
cltd
inc
loopne
dec
lods
sub
mov
shl
scas
outsl
jg
sti
in
cmp
test
inc
int
dec
xlat
imul
jp
inc
add
sub
repz
call
dec
lods
inc
add
outsb
dec
cli
push
outsb
sbb
xchg
aad
dec
sub
rcr
sub
ss
int
outsl
or
mov
adc
dec
dec
cmpsl
fs
pop
pop
mov
sbb
fidivs
jne
stos
fdivrl
loop
mov
jnp
mov
add
mov
aaa
in
fwait
lock
mov
fwait
push
inc
add
pop
add
and
leave
mov
cmc
iret
ret
aaa
mov
mov
mov
sbbb
push
iret
je
int3
pop
mov
fildll
or
filds
fnsave
mov
mov
inc
or
jge
pop
cmp
sbb
cmp
pop
inc
stos
pop
popa
mov
subb
jl
and
jg
xchg
cmp
out
cwtl
pushf
ljmp
fs
sbb
pop
jae
and
shll
lcall
jno
pop
cli
xor
ljmp
mov
jmp
test
in
nop
jae
int
nop
ljmp
cmpsb
or
xorb
cmpsb
pop
xor
fucom
lds
inc
and
fsubp
push
cs
add
call
push
push
cmp
lds
xchg
sub
leave
inc
push
jne
nop
scas
fiadds
movsl
pusha
jae
or
cli
loop
fcompl
scas
pop
dec
std
adc
clc
sub
mov
mov
rcll
mov
shr
push
std
xchg
push
xlat
in
xchg
fnstcw
je
outsl
adc
in
mov
sbb
dec
pop
mov
mov
subb
sbb
jle,pn
pop
inc
lock
jecxz
adc
cli
stos
mov
movhps
out
adc
sbb
pop
xor
jns
addr16
xchg
cmp
ja
jg
jecxz
neg
mov
jb
scas
popa
inc
add
insl
sbb
aaa
popf
jb
sub
test
sbb
data16
dec
add
pushf
add
xchg
fcomps
in
imul
mov
cmpsb
jb
and
jmp
dec
mov
lock
push
and
mov
xor
adc
clc
int
xlat
int3
mull
add
push
jl
sub
xchg
pop
jmp
decb
cs
decl
andb
xor
lahf
cmp
stos
repz
fists
mov
xchg
fidivrl
push
jl
jecxz
mov
mov
push
jb
fbld
push
cmp
fildll
aam
outsb
pop
inc
sub
pop
jecxz
mov
lea
insb
mov
lret
movsb
adc
cld
mov
daa
mov
push
pop
dec
jae
fs
cmpsb
add
inc
icebp
sub
mov
jg
jmp
cmp
shll
stos
or
pop
popa
mov
mov
pop
push
jno
and
aam
cmp
movsl
push
mov
and
loopne
inc
inc
dec
jle
mov
xchg
mov
mov
repz
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
rcrl
mov
mov
xchg
xchg
scas
add
rcl
in
filds
xchg
adc
jbe
icebp
daa
pop
data16
mov
loopne
mov
pop
pop
mov
jb
add
lcall
mov
pop
xlat
sub
addr16
adc
mov
mov
popa
in
inc
loop
lret
mov
dec
xchg
push
ja
bound
add
cld
leave
insl
sbb
sbb
add
push
stos
cmp
xor
pop
or
pop
cs
aaa
pop
and
aad
sub
cmp
test
jmp
mov
or
inc
int3
arpl
lret
lds
pop
dec
inc
and
pop
adc
lahf
fiaddl
test
sbb
add
or
mov
push
add
jne
push
repnz
sbb
push
in
ficoml
and
loope
jle
aas
flds
or
sbb
sub
outsl
xchg
aam
fiaddl
aas
or
jo
fsubrl
test
bound
aam
rcll
cltd
gs
bound
sub
push
ds
rcl
imul
into
cs
daa
test
push
mov
imul
inc
fcomps
and
cmpsb
das
lret
fisubl
ss
inc
mulb
iret
xor
notb
ja
lds
xchg
xlat
lahf
mov
push
cmp
ljmp
int3
test
mov
pop
pop
fwait
rol
cmp
xchg
fisttps
cmpsb
out
mull
dec
fistpll
jno
imul
push
aaa
into
scas
addr16
sbb
lcall
scas
cmpsb
movsb
inc
xchg
dec
je
sub
or
dec
push
lods
sub
push
in
call
outsl
popf
iret
mov
xchg
dec
dec
mov
mov
les
nop
mov
repz
sbb
pushf
pop
out
fucomp
in
sub
cltd
out
negb
das
sti
sub
jns
fcomip
fsubl
test
sarb
movsb
scas
sbb
pop
inc
pop
dec
push
dec
mov
add
sub
cmp
fs
xor
adcb
push
mov
xor
das
xchg
gs
ja
imul
push
jg
and
pop
mov
mov
std
dec
into
lds
sahf
gs
sbb
push
push
loop
dec
and
aad
mov
fidivs
mov
push
ljmp
push
fs
add
sbb
loope
mov
jl
and
es
add
jno
pushf
xor
xor
pushl
arpl
sbb
xchg
xchg
push
in
ja
lret
or
scas
cmp
scas
cs
push
adc
push
cmpsb
inc
xor
loopne
daa
fiaddl
add
ret
mov
mov
mov
sub
hlt
push
jb
push
push
dec
sti
rcr
pop
adc
in
fisubl
push
or
xor
pop
ds
out
pushf
mov
sbb
and
cmpsb
xchg
mov
lret
mov
sti
dec
mov
jle
mov
into
movsb
arpl
cmp
inc
addr16
cmp
mul
ja
push
sbb
mov
and
sbb
mov
arpl
dec
mov
jmp
adc
icebp
mov
in
repnz
mov
pop
xchg
xor
inc
fbld
jb
test
jnp
gs
loope
or
loop
fwait
outsb
jge
clc
cwtl
cmp
sub
dec
insb
add
out
idivb
imul
jo
xor
inc
jns
int3
repnz
movsl
ret
push
rcrb
xchg
inc
mov
push
call
inc
xchg
jns
cmp
mov
jg
dec
out
adc
pop
pushf
mov
jb
clc
out
adc
imul
mov
mov
push
push
daa
mov
mov
mov
test
mov
test
imul
repnz
sub
jbe
xchg
in
dec
push
jecxz
adc
jecxz
push
jno
popa
xchg
std
repnz
inc
sbb
sbb
jmp
inc
mov
mov
fucomip
out
add
cs
leave
stos
lods
in
lods
mul
scas
xor
fcmovbe
add
int
sbb
movsb
dec
cwtl
popf
sarl
xchg
pop
inc
fisubs
dec
out
imul
scas
or
pushf
scas
xor
push
std
ss
mov
pop
fmuls
xchg
cli
pusha
sbb
scas
cmp
shrb
mov
fbstp
leave
jno
jne
int
sbb
mov
sub
cmp
fsts
pop
outsl
sahf
mov
fcoml
pop
mov
jle
add
test
aad
std
mov
adc
js
fisubl
aad
jb
sarl
cmpsb
inc
inc
outsb
mov
adc
jge
xor
push
adc
movsb
push
cmp
inc
out
aad
hlt
es
dec
into
call
xor
xor
xchg
movsl
cmp
lods
push
divb
adc
cmp
lds
inc
dec
lock
bnd
hlt
out
scas
outsb
adc
negb
pop
lea
into
cmp
inc
xor
pop
push
sub
sub
cmpl
or
xchg
sbb
leave
lret
inc
cmpsb
mov
lods
push
flds
jne
lahf
arpl
fld
rcr
jnp
push
jl
cmp
mov
es
std
std
fisubrl
out
push
xor
sbb
jno
imul
jns
aad
int3
fcoml
in
stos
jne
subl
lahf
stos
dec
pop
repz
gs
pop
in
sti
pop
aas
jo
pop
add
inc
add
insl
lret
pop
sub
inc
idiv
cmp
int3
js
mov
mov
mov
ss
int
jmp
jnp
pop
mov
cmp
and
push
ret
xor
in
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
jo
add
invd
add
paddw
mov
std
pop
cltd
xchg
jbe
aam
lss
je
dec
ja
stos
adc
mov
dec
ja
inc
jb
pop
ss
push
repz
fprem1
or
or
adc
in
cmc
push
je
dec
mov
xchg
ficompl
push
fsubs
adc
addr16
cmp
pop
scas
sbb
arpl
lea
mov
frstor
mov
aad
fbstp
jp
jmp
out
sbb
push
cmp
add
negb
inc
idivb
pop
jae
test
fs
stc
mov
jae
xor
mov
or
and
push
dec
dec
test
mov
xchg
ss
subb
ret
hlt
pop
sarb
xlat
popf
pop
push
xor
mov
mov
mov
test
scas
jnp
lahf
xchg
arpl
loop
sbb
movsb
cs
pop
lds
jnp
add
into
ja
out
std
sub
xchg
sbbl
push
fs
add
pop
push
push
jp
stos
inc
bound
mov
cwtl
push
and
xor
mov
cmc
dec
and
and
sub
out
movb
sub
sti
mov
dec
and
mov
sahf
lock
imul
push
sbb
mov
jo
daa
jle
jb
push
data16
jno
xchg
xor
xor
jb
int3
mov
adc
mov
xlat
adcl
or
pushf
jnp
jbe
scas
rcl
dec
gs
loop
and
ficompl
fiaddl
mov
imul
inc
or
mov
xor
js
xor
lods
popf
sub
ret
orl
or
aam
pop
imul
and
adc
sub
rolb
in
cmc
jl
fstl
stos
repz
test
push
push
ret
dec
push
jbe
negl
xor
pop
incl
je
sahf
paddw
mov
mov
int
sbb
pop
jmp
sub
or
pop
mov
sbb
push
sub
out
out
adcl
dec
or
sbb
sbb
mov
movsb
in
add
cli
mov
pop
popf
lahf
popa
jle
mov
ds
add
in
ja
test
mov
gs
sub
adc
fimull
mull
or
mov
sub
dec
mov
lret
out
mov
iret
xlat
loopne
icebp
das
jp
aas
adc
or
and
mov
hlt
cvttps2pi
subl
or
out
fs
aaa
xchg
stos
sub
xchg
movsb
imul
cmp
mov
pusha
and
inc
cmc
movsb
imul
mov
movsb
pop
jge
xor
xchg
popf
push
cmc
inc
negb
xor
mov
cmp
push
int3
sbb
imul
jg
daa
ret
cmp
and
in
cmovp
pop
icebp
and
lcall
sbb
stos
or
ja
cmpsb
inc
push
mov
cltd
mov
cld
gs
xchg
pop
push
int
xchg
sub
sub
pop
push
jbe
and
data16
push
leave
mov
sub
shlb
sbbb
and
sbb
ret
shrl
aaa
out
call
sbb
xorl
pop
test
xor
sti
mov
inc
sub
cmpsb
or
icebp
aaa
aaa
sbb
lock
mov
or
sahf
mov
and
xchg
std
pop
jo
mov
stc
mov
and
mov
stos
leave
jl
repz
popa
adc
add
jmp
jae
imul
and
cmp
lcall
and
push
fsubrp
push
adc
in
mov
push
enter
scas
decl
inc
push
or
lds
test
push
jl
sbbb
xchg
fldl
mov
insl
ljmp
shlb
dec
jnp
sahf
punpcklbw
call
clc
add
mov
ja
mov
into
movsb
movsb
cmp
sub
pop
mov
push
lods
in
jo
sub
lahf
inc
scas
scas
cli
js
fsubrs
mov
or
jmp
aas
rcr
xchg
add
repnz
mov
pusha
fsts
cmp
mov
adc
rcrl
shrl
dec
add
adc
jno
fcom
cs
and
das
je
lds
or
leave
rclb
cmp
push
mov
xchg
sbb
out
xchg
jp
testl
sub
inc
push
add
filds
push
or
mov
jl
jg
pop
out
jl
dec
xor
mov
lods
rol
cmpsb
add
cmp
loopne
ds
sub
cmpsl
fistpll
jbe
xor
xchg
ja
sub
imul
imulb
mov
sub
xchg
inc
loope
loope
test
ljmp
fs
mov
jmp
add
cmp
sahf
dec
jne
xchg
cmpsl
jg
iret
mov
in
mov
sub
cltd
popa
sub
sarl
mov
in
movsb
out
add
test
xor
hlt
js
in
daa
cs
das
sbb
les
andb
xchg
gs
cmp
jle
mov
dec
push
sub
inc
les
mov
push
push
sar
pop
and
ds
in
in
pop
aaa
cmp
divl
mov
lods
or
push
out
mov
aam
jge
jmp
das
sbb
lock
xchg
cli
shlb
xor
es
enter
repz
pop
std
popf
add
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
andl
fisttps
invd
add
les
fldcw
inc
out
jne
or
and
pop
bnd
dec
xchg
inc
inc
add
jge
sahf
and
xlat
jns
jb
orb
mov
cmc
xor
and
pop
repz
jl
test
addl
scas
aad
repz
shrb
or
cmp
sub
sarb
stos
incb
rclb
loopne
mov
fimull
jecxz
roll
jl
cmp
xchg
es
arpl
imul
jns
daa
movsb
mov
lea
inc
sti
inc
cmp
push
and
pop
adc
mov
dec
fnstsw
jbe
imul
inc
mov
sub
mov
add
mov
movlps
adc
dec
std
mov
mov
jl
mov
or
gs
ljmp
mov
shlb
mov
fs
mov
fprem
bound
cmp
push
or
add
xchg
iret
xchg
imul
mov
into
aas
pop
in
pop
scas
clc
and
je
sub
lds
sbb
lock
push
add
mov
mov
pop
sahf
out
repnz
mov
inc
incl
xorb
and
roll
jnp
sti
iret
mov
cmp
push
icebp
rolb
lods
aas
push
test
imul
xor
sbb
xor
push
sbb
jmp
cmp
sbb
lods
addr16
icebp
pop
popf
popa
or
hlt
ds
lret
jecxz
push
lds
lea
pop
jl
xchg
fsubrs
hlt
mov
sub
push
push
scas
ja
pop
lahf
mov
in
xchg
pop
arpl
add
inc
adc
cmp
inc
mov
pushl
pop
call
loop
sbb
mov
fwait
jne
stos
cmp
mov
xchg
pop
fistpll
aaa
inc
cmc
fwait
xlat
test
cmp
mov
pop
add
and
mov
push
jne
mov
xor
adc
add
or
shrl
das
call
mov
cli
clc
fistps
inc
sub
rcll
std
push
mov
incb
push
pop
in
inc
mov
js
lods
mov
mov
dec
inc
and
shll
or
out
pop
mov
pop
lds
push
mov
arpl
inc
je
sbbb
fstpt
shrb
ljmp
mov
cld
pop
mov
xlat
mov
and
xchg
adc
mov
sbb
cmp
mov
dec
adc
inc
push
xor
jae
push
adc
arpl
mov
js
pop
sbb
rcr
sub
jge
xchg
notb
mov
scas
cmp
lcall
lret
push
mov
fwait
ret
pop
sti
sbb
push
sbb
aaa
push
mov
arpl
fldcw
push
lds
or
sub
leave
insl
push
pop
sub
jg
cmp
jbe
imul
je
test
ret
mov
das
ret
jle
jl
mov
fistpll
dec
mov
ret
sti
push
fwait
lret
les
hlt
cmp
push
push
xlat
shrb
repz
out
test
xlat
inc
ret
adc
pop
movsl
popa
jl
int3
mov
sub
bound
aam
mov
fnsave
sub
test
mov
loope
sbb
jno
adc
insb
testl
aam
adc
xlat
sub
xor
ljmp
adc
into
js
lret
sbb
aad
inc
int3
mov
dec
loopne
and
dec
push
cmp
or
ja
push
dec
mov
xor
xchg
pop
repnz
repnz
outsb
out
mov
int
mov
xchg
or
inc
add
test
mov
in
addr16
imul
xor
xchg
daa
mov
in
mov
mov
cmovb
mov
push
cli
dec
sahf
aad
push
roll
jne
rcl
and
in
push
ret
jg
test
dec
jnp
clc
mov
mov
ret
test
xchg
push
loop
jo
loop
add
mov
sahf
mov
sahf
gs
dec
inc
ds
adc
sbb
out
rcl
xor
mov
hlt
mov
leave
cmpsb
cwtl
aad
pop
out
cmp
xchg
mov
pop
push
jae
pushf
lea
inc
xchg
je
mov
pusha
test
es
xor
xor
xchg
jnp
stos
jnp
mov
mov
arpl
adc
xchg
hlt
cli
cwtl
fistpl
add
in
popa
iret
test
sbb
scas
sbb
popf
leave
jmp
es
mov
push
aaa
setge
dec
subb
sub
mov
cmp
pop
mov
inc
pushf
sub
mov
out
mov
and
frstor
aas
sbb
mov
add
ss
push
mov
loope
pop
mov
hlt
mov
xchg
out
out
jbe
sub
mov
cmc
jb
sti
jp
test
lcall
lock
add
and
fists
mov
pushf
call
or
shrb
inc
in
aaa
cwtl
shll
pop
adc
adc
push
mov
stos
sub
add
cmp
imul
roll
and
fwait
and
clc
mov
lret
jp
add
push
inc
xchg
dec
jmp
pop
jo
jne
outsl
addr16
imul
arpl
sub
sub
mulb
ret
iret
xor
pop
pop
mov
inc
xor
dec
sbbl
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
bswap
cmp
or
test
imul
cmp
movsb
fsubrs
cmp
pop
inc
add
xor
jg
repnz
push
adc
or
xchg
mov
adc
jo
mov
bound
mov
dec
push
xchg
add
xor
xor
in
or
pop
mov
in
lret
dec
ljmp
arpl
aad
aas
fnstenv
fcoms
sbb
icebp
push
sahf
cmp
fdivp
pop
loope
mov
mov
fs
lret
mov
sbb
xor
cltd
aad
loopne
cmp
add
mov
or
cli
mov
mov
pushf
sub
sub
bound
loope
rolb
mov
in
mov
inc
xor
adcl
sbb
cwtl
push
orl
mov
out
xchg
jecxz
mov
jmp
lcall
adc
sub
jge
jbe
or
nop
cmp
mov
sbb
mov
push
lds
inc
mov
sub
fwait
or
push
movsb
stos
ljmp
cmp
push
scas
cmpsl
cmp
aad
push
call
jo
jecxz
mov
pop
arpl
lret
loopne
je
leave
daa
push
jnp
lods
test
cmc
xchg
add
cld
stos
scas
popa
aas
or
ss
sub
addl
add
pop
inc
sbb
lods
test
mov
aad
movsb
ljmp
test
test
cwtl
pop
gs
test
lret
es
repnz
scas
scas
stc
cli
fsubl
push
imul
pop
popa
stos
repz
pop
cmp
insl
ret
sub
mov
leave
cli
test
insb
insl
cmp
dec
mov
mov
sti
cmpsl
in
mov
test
jo
xor
dec
xchg
shlb
inc
ja
shlb
xchg
sbb
and
pop
roll
xor
lahf
xor
add
sbb
cmp
mov
insl
and
dec
pop
lods
adc
gs
sarb
outsl
mov
loop
pop
ja
mov
jecxz
int
mov
jns
xor
inc
mov
subb
pushf
loop
cmp
mov
cmp
addr16
fcmovbe
jg
aas
mov
jmp
cmovp
cwtl
ret
lock
call
lahf
int
inc
out
fmuls
push
xor
cmp
xlat
outsl
in
add
cs
xchg
imul
cmp
imul
or
inc
push
mov
mov
jmp
jbe
and
sub
cmovnp
jmp
cld
push
mov
mov
popf
jge
mov
jmp
xor
cld
jae
into
cmp
xchg
jae
int3
dec
mov
repnz
pop
mov
stc
sub
in
mov
and
je
push
mov
xchg
push
repnz
adc
scas
imul
push
pop
mov
mov
xor
pop
push
add
inc
cltd
in
and
push
mov
in
nop
ss
incl
xor
mov
sub
xor
lret
or
pushf
clc
mov
mov
adc
inc
mov
xchg
lock
cltd
add
lea
adc
xorl
xchg
xor
sbb
repz
test
pcmpgtw
pusha
or
push
mov
mov
dec
mov
dec
out
in
dec
loope
shlb
pop
scas
int
mov
bound
sub
mov
fdivr
jnp
push
lods
je
add
into
xchg
outsl
fcmovnu
adc
subb
jnp
dec
popa
ret
ss
addr16
add
dec
sub
jne
mov
pop
fucom
cmp
push
and
add
bound
jp
xchg
mov
das
lock
pop
lock
dec
adc
push
xlat
cmp
push
xlat
cli
aam
xor
mov
aad
daa
mov
add
int3
sbb
pop
popa
call
ds
ffreep
add
in
imul
or
mov
sbb
or
sbb
mov
mov
xchg
stos
cmp
bound
into
cmp
mov
pop
ljmp
gs
mov
ljmp
aam
sub
xorb
mov
xchg
scas
or
rcl
dec
in
repnz
lods
stos
lahf
xchg
in
jg
cmp
and
fstpt
push
inc
outsl
movsb
pop
daa
jnp
rolb
jne
rorb
jmp
sbb
stos
push
movsl
push
adc
rorb
int
clc
scas
pop
adc
push
fcmovnbe
cmp
mov
push
jmp
cmp
movsb
into
lahf
insb
or
dec
shll
pop
mov
and
xor
into
adc
lock
pusha
lds
clc
inc
ljmp
ss
push
dec
out
cmpl
jmp
or
fiaddl
out
ja
test
stos
iret
pop
xor
int3
cmpsb
cltd
mov
inc
jbe
inc
cltd
test
xor
jmp
subl
or
dec
into
and
dec
inc
and
mov
xor
nop
cli
mov
imul
sti
jb
mov
cmp
roll
int
mov
push
dec
jp
mov
push
lcall
push
inc
cld
or
pop
adc
cmp
jnp
xchg
int3
popa
sub
jne
inc
push
and
sbb
pop
fwait
push
and
xchg
ljmp
aaa
stc
jb
pop
arpl
mov
xchg
popf
inc
xchg
adc
or
jge
pop
gs
cmpsl
adc
aam
xor
mov
sbb
outsl
sbb
push
pop
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
sub
invd
add
cld
mov
xchg
mov
outsl
stc
sub
stc
jmp
xchg
loope
outsb
mov
xor
int
cmp
mov
mov
jge
imul
out
jnp
aas
mov
lods
sub
mov
inc
jp
pop
cmp
rorl
andb
pop
mov
and
sbb
shlb
adc
leave
sbb
aas
inc
cmp
jle
jnp
pop
outsb
add
jle
push
pop
pop
inc
cmp
xchg
push
out
and
and
outsb
jno
enter
pop
cmp
shl
mov
xchg
or
mov
rcll
jg
inc
jmp
movsl
xor
subl
mov
jmp
mov
add
testl
inc
cmp
xor
aas
cmpsb
cmp
sub
bound
mov
inc
and
bound
shrl
pop
ljmp
push
xor
cmpsb
aas
stc
fdiv
jbe
out
pop
xor
bound
int3
xorl
jmp
daa
call
xor
outsl
clc
jns
ret
dec
negl
xchg
push
add
sub
adc
iret
sub
push
in
loope
sbb
push
dec
jne
add
sarl
add
adc
cmp
inc
fsubs
popl
out
sarl
es
hlt
aam
stos
dec
cmp
sahf
bound
insl
and
add
out
push
and
sub
and
sub
mov
loope
inc
loop
push
mov
repnz
leave
mov
xor
das
pop
mov
cmp
pop
das
xor
imul
xchg
in
jns,pn
es
adc
mov
loopne
in
stc
stos
clc
aas
mov
add
leave
add
xchg
gs
cmc
xchg
fnstenv
xchg
dec
adc
clc
ret
ljmp
aaa
repnz
xorl
mov
jg
in
into
xchg
inc
sbb
ret
test
jmp
ds
loopne
mov
and
pushf
jmp
fisttpll
movsb
mov
mov
andb
arpl
stos
jo
std
dec
xor
mov
xchg
rorl
add
insb
xchg
jle
es
mov
pop
xchg
push
roll
push
fidivl
out
ds
jl
cmp
hlt
lods
aad
xor
xor
loop
fstl
fmuls
scas
insl
cmpsl
iret
in
mov
pop
cli
loop
dec
enter
aad
test
aam
mov
sbb
dec
sbb
sbb
xchg
sti
push
les
cmp
pop
ja
test
out
pop
into
mov
icebp
push
popl
sbb
pop
cmp
mov
adc
sbb
xchg
sub
or
lcall
gs
pushf
push
pop
int
or
orb
add
or
out
push
pop
mov
lods
rolb
repnz
xchg
shll
mov
pop
fisttpll
aad
jae
popf
arpl
das
add
adc
je
and
and
enter
imul
lea
call
or
inc
mov
inc
stos
sbb
popa
fsqrt
jmp
inc
push
les
mov
jl
mov
fdivl
xor
pop
jno
xchg
mov
aas
inc
filds
push
jae
mov
mov
xor
mov
mov
mov
inc
rcrl
or
jnp
push
xor
stc
cmc
mov
mov
sub
add
mov
adc
shll
mov
xchg
push
sbb
or
or
jne
pop
fcomi
lcall
jmp
xchg
jmp
sbb
push
jno
neg
xchg
std
mov
out
fwait
pop
es
lret
jg
cmpl
cmp
mov
int
scas
outsb
insl
test
jge
fstpt
popa
add
mov
or
hlt
pop
sub
jb
out
mov
or
push
or
out
les
adc
insb
imul
imul
cltd
mov
sub
push
aad
inc
fidivrl
pop
lock
pusha
stos
cld
adc
xorb
insl
int3
xchg
insb
lds
leave
punpckldq
mov
out
mov
xlat
mov
sub
out
sbb
or
mov
dec
adc
jo
xchg
fldl
test
imull
lcall
add
es
dec
int
jl
cmp
or
enter
das
pop
mov
xor
enter
fadds
scas
jmp
sbb
jmp
das
nop
mov
dec
lret
sub
ljmp
jb
arpl
xchg
in
sbb
rcl
repnz
jl
mov
faddl
std
mov
push
jmp
lret
dec
inc
cmovp
inc
call
mov
add
jns
stc
adc
jl
jns
sbb
je
daa
mov
mov
mov
inc
lea
xor
add
addr16
cmp
pop
jecxz
imul
out
movsl
lcall
push
xchg
inc
dec
push
add
insl
rolb
push
test
xor
xchg
adc
mov
bound
dec
cmp
pushf
test
mov
in
jno
xor
pop
add
in
lret
jl
lret
mov
and
addr16
add
push
mov
pop
sub
jg
adc
mov
lcall
fbstp
xor
mov
xchg
mov
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
mov
mov
paddusb
leave
and
aad
add
in
xchg
jge
aas
mov
inc
pop
dec
mov
lahf
lcall
xchg
dec
pop
inc
cmpsl
adc
int
cmp
and
dec
add
lcall
mov
shrl
hlt
pushf
shl
xchg
out
fimuls
mov
dec
xor
xchg
rclb
pop
fstl
pusha
and
imul
lret
xor
scas
pop
dec
movsl
mov
mov
xlat
or
decl
outsl
pop
mov
mov
rcrl
push
out
cmp
ja
mov
cltd
dec
ficoml
xor
repz
and
std
sub
in
mov
and
sub
subl
movsb
shll
jns
xchg
push
pop
cmc
add
addl
dec
xor
mov
outsl
lods
or
cmp
xor
sub
loopne
xchg
imul
mov
movsb
cs
or
lea
cli
mov
cvtps2pi
and
jno
xchg
add
mov
les
mov
inc
jne
adc
and
xlat
loope
faddp
mov
pop
inc
adc
add
jl
pop
idivl
out
jns
or
adc
pop
fwait
movsb
lahf
loope
ja
repz
loopne
arpl
mov
or
gs
jnp
add
inc
pop
add
ja
enter
add
enter
addr16
lret
movb
loope
xor
mov
sbb
jge
jns
outsl
scas
xchg
ret
in
adc
enter
mov
cmp
fistpl
add
into
movsl
rcrl
xor
sub
dec
xchg
mov
cwtl
or
xchg
xchg
xchg
scas
or
inc
enter
cmpb
inc
je
lahf
clc
xchg
out
mov
dec
inc
inc
jecxz
xor
pop
or
xor
sti
movsb
push
aaa
movsb
in
imul
pop
and
or
jmp
and
icebp
popa
and
xchg
mov
das
lods
dec
insl
inc
cld
stc
imul
or
lock
fwait
je
mov
arpl
cmp
pop
mov
adc
sahf
dec
inc
xor
push
adc
data16
mov
mov
popf
das
or
or
popf
mov
aaa
xor
ret
mov
or
jb
ljmp
xchg
and
frstor
mov
mov
popf
adc
loopne
aaa
push
or
xor
addr16
and
pop
sbb
daa
lock
sbb
mov
pop
jb
sub
inc
call
inc
push
mov
call
out
int3
cmpsb
sarb
inc
or
inc
and
pcmpgtd
or
xor
xchg
je
pop
add
out
out
mov
sub
sbb
lcall
cld
fistpl
lret
pop
mov
inc
in
sub
movsb
xchg
xlat
pop
data16
mov
int3
xchg
lods
mov
lds
es
mov
mov
or
clc
xchg
push
mov
push
subb
push
push
sahf
dec
and
inc
mov
mov
movsb
adc
mov
cmp
mov
fstl
shrl
pop
xlat
mov
mov
or
xchg
movl
call
jg
idivb
xchg
xchg
xlat
andps
fcom
push
push
jo
fimull
imul
and
std
adc
movsb
jg
fildll
enter
sarb
mov
dec
jecxz
mov
push
cmp
lock
adcb
addr16
or
add
cmp
cli
in
xchg
call
test
das
insl
fs
out
jmp
icebp
testl
or
push
inc
test
ret
and
jle
stc
sub
jmp
mov
scas
aad
xlat
icebp
xor
jl
adc
cmpsl
jo
shrb
bound
pop
pmullw
mov
lods
rcrl
sbb
xchg
out
in
adc
mov
shlb
std
stc
cmp
sbb
and
and
pop
pop
push
test
or
sbb
push
popf
or
adc
push
xlat
in
push
ret
xor
adc
inc
pop
jg
into
jle
sub
ror
es
data16
mov
mov
stc
pop
in
test
sub
mov
sub
scas
stos
ret
ljmp
in
xor
xor
shlb
or
dec
mov
mull
mov
mov
jo
push
add
cmpsb
sbb
xchg
popf
shl
jg
xchg
pop
mov
into
aas
xchg
mov
lcall
enter
aam
push
pop
cli
xchg
add
cmp
xchg
mov
xchg
cmp
add
pushf
insl
lret
subl
push
mov
sbb
cmp
lahf
cmc
mov
dec
xchg
dec
adc
add
dec
mov
inc
or
js
ljmp
xchg
cld
jae
pop
xor
jl
scas
lret
sub
or
jb
cltd
mov
inc
lret
lods
repnz
and
in
mov
dec
cmp
jbe
push
push
push
add
xor
jae
enter
inc
in
and
mov
inc
push
cmpsb
inc
test
mov
js
sbb
adc
aas
adc
pusha
jecxz
pushf
lea
xor
push
cmp
jo
insb
xchg
push
cmp
adc
jne
je
mov
push
push
pop
xchg
dec
das
std
cmp
aad
fldenv
outsl
fwait
jle
jmp
loopne
push
js
add
push
pop
xchg
in
xor
xchg
or
fadd
gs
lahf
cmp
cmp
mov
outsb
scas
rcrb
lret
jne
jae
mov
cli
sub
xchg
sub
test
xor
stc
jno
movaps
push
pop
pop
fs
adc
xchg
sub
push
jo
xchg
shll
int
push
xchg
dec
and
arpl
jo
adc
or
subb
lret
cmp
pop
xorl
xchg
mov
push
push
call
imul
pusha
jne
and
lret
movsl
mov
loopne
pop
lcall
and
fucom
jbe
push
sbb
outsb
fcomi
dec
jl
add
jl
dec
xchg
idivl
xchg
dec
sbb
inc
insl
aas
xor
dec
fs
xor
sub
mov
rolb
negb
push
inc
inc
jecxz
outsl
sarb
stc
ret
aas
dec
test
sbb
rclb
jb
ljmp
aas
push
in
pop
addr16
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
scas
inc
mov
sbb
mov
wbinvd
lea
ror
rcrb
dec
iret
mov
push
jo
push
out
dec
leave
mov
xchg
mov
adc
je
cmp
adc
add
or
add
add
icebp
mov
dec
mov
and
dec
mov
xor
dec
inc
dec
out
xlat
aaa
out
and
mov
iret
aaa
mov
adc
xchg
loop
repz
push
std
mov
push
sub
add
jae
rcr
test
push
xchg
xchg
xor
push
or
pop
add
jl
arpl
stc
xchg
enter
inc
nopl
add
inc
xor
cli
mov
fucom
push
in
in
cld
mov
ror
mov
mov
xor
fwait
sbb
scas
adc
cld
clc
movsb
insl
jmp
add
enter
push
repz
leave
cli
sbb
jae
push
jmp
nop
xor
cmpsb
lock
adc
jp
xor
mov
lret
loopne
popf
mov
je
daa
xor
imul
add
dec
adc
enter
mov
aas
fs
andl
push
aaa
push
inc
repz
inc
push
aas
pop
stc
out
dec
jge
nop
push
dec
lahf
cmp
jge
subw
push
sarb
lods
xor
mov
cwtl
pop
sbb
jne
or
imul
fimull
gs
push
out
fwait
mov
dec
movsl
outsb
and
sub
js
xor
rcl
lcall
fldcw
sub
xchg
insl
pop
mov
shlb
loop
fwait
mov
push
cmp
pop
ret
lods
into
es
mov
dec
aam
idiv
cltd
mov
and
jmp
les
fisttpl
shl
add
out
rcll
jns
fucom
cmp
push
std
sub
mov
clc
push
cltd
pop
cmp
int3
kmovw
lods
xor
lds
cmpsl
xor
jae
mov
dec
adc
test
jl
or
inc
call
int3
movsl
lock
in
js,pn
fs
mov
cmp
add
push
jb
fs
cmp
mov
mov
mov
push
gs
cld
cwtl
ja
mov
gs
mov
test
out
mov
sub
and
or
inc
ret
dec
mov
push
sti
sbb
nop
xor
cmp
pop
imul
jl
imul
addr16
and
js
mov
pop
add
pop
adc
cltd
mov
push
or
rcll
mov
fistpl
push
mov
or
or
sahf
lods
scas
das
xor
cli
shl
jmp
pop
push
mov
and
int
cld
sub
mulb
and
mov
lock
lret
popf
pushw
xor
push
js
lretw
and
cs
cmp
in
fsubr
ret
jo
jle
loope
stos
inc
or
aaa
fld1
iret
imul
in
dec
out
cwtl
dec
add
push
ss
andl
sbb
stc
fdivrp
mov
movsb
xor
xor
jg
or
roll
daa
pop
loope
mov
mov
cmc
in
lods
add
dec
adc
pop
out
pop
out
jp
popf
sbbb
mov
pushf
fwait
iret
cmp
xchg
cwtl
sub
cwtl
add
int
jb
cmp
mov
lret
lcall
pop
cli
jmp
pop
sti
push
imul
push
cld
inc
add
shl
push
mov
inc
adc
int3
cmp
pop
or
pop
cmp
sbb
push
stos
aam
test
add
cmp
popf
popf
ficompl
and
push
aam
inc
and
adc
int
orb
pop
cmpsl
sbb
data16
xchg
frstor
and
pop
mov
jp
push
push
sub
sbb
mov
fildl
inc
push
push
xlat
adc
cmp
lds
mov
les
in
fsubs
addr16
sbb
inc
mov
mov
mov
fildll
cmc
push
mov
cmp
mov
repnz
notb
mov
sub
adc
xchg
lods
shll
or
push
in
insl
inc
xor
push
dec
mov
sti
or
mov
or
or
dec
or
xchg
ret
rcl
add
pop
mov
aad
mov
fldl
add
inc
popa
cmp
sbb
mov
test
or
loop
aas
rolb
cmpsl
adc
add
loopne
ret
rcr
arpl
jp
cmc
les
scas
jmp
pop
mov
in
push
inc
cltd
insl
mov
fidivrs
shrl
pop
mov
sbb
addr16
inc
and
fucomp
lret
stos
iret
xchg
mov
out
xor
xor
cmp
out
scas
stc
addr16
ljmp
fimuls
sbb
mov
dec
xchg
xlat
imul
arpl
push
adc
lds
cmc
adc
xchg
push
or
pop
cmp
lret
sbb
outsl
movsb
pop
mov
popf
pop
mov
adc
sub
fisubl
repnz
push
or
ret
std
dec
stc
ror
jecxz
mov
sbb
and
mov
out
jl
or
adc
sbb
test
inc
icebp
dec
xchg
iret
cmp
or
call
jo
jbe
or
cmp
sub
jmp
test
cltd
dec
mov
xchg
enter
filds
mov
mov
js
fcompl
push
mov
add
aaa
or
test
sbb
repz
mov
push
ds
std
leave
xor
inc
movsb
jo
ffreep
out
mov
lods
cmpsl
jo
jnp
push
sbb
mov
repnz
test
pop
sbb
and
lock
imul
pop
data16
push
lahf
inc
inc
test
lods
ds
fdivs
jnp
scas
push
les
pop
xchg
jbe
add
out
fildll
mov
icebp
mov
or
movsl
and
std
mov
sub
or
push
push
cmc
dec
sarb
int
nop
shll
and
cld
fdivrl
xchg
lahf
add
mov
ljmp
scas
mov
call
test
mov
sbb
and
sarl
stos
into
sbb
out
inc
jb
sub
push
sbb
mov
fdivrs
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
fildll
mov
pfmin
int
pop
ja
mov
jl
outsb
or
pushf
dec
cltd
insb
xor
aas
out
sti
xchg
ja
mov
pop
mov
stc
add
cmp
out
pop
daa
push
cmp
scas
aas
dec
add
add
daa
jbe
mov
rcrl
dec
lret
fcomp
test
test
pusha
push
cmp
mov
sahf
mov
cltd
aaa
loopne
mov
rcll
sub
xor
mov
iret
push
lahf
in
imul
dec
ret
and
xchg
call
shrl
or
mov
lock
inc
lret
push
add
lret
cld
dec
aas
lock
jb
mov
jge
dec
lods
int3
addr16
cmp
fsub
aam
mov
inc
iret
mov
cmpsl
push
aaa
sbb
fsubs
cmp
push
out
scas
push
xchg
cs
rcll
mov
or
dec
data16
out
inc
add
push
adc
mov
and
cld
fdivs
mov
std
lods
adc
mov
push
push
outsl
lods
test
gs
fcmovnu
push
addl
fsubrs
cmp
pop
cli
pop
lret
push
push
push
lahf
test
ret
test
cmp
xchg
xchg
out
jae
and
adc
add
in
push
into
cld
lcallw
rclb
cmp
imulb
or
mov
sub
popa
sbb
push
gs
loope
cli
fldenv
cmp
dec
jae
lret
je
sub
xchg
and
imul
gs
or
cmp
cltd
hlt
push
and
and
mov
enter
imul
cmp
mov
test
mov
ljmp
sub
fildll
fildl
out
xor
mov
jno
decb
and
imul
pop
rcr
addr16
mov
mov
loop
mov
sbb
push
and
imul
addl
inc
pop
pop
aaa
mov
pop
inc
mov
movb
or
jp
xor
xchg
xor
push
jne
sub
and
add
jp
lock
sbb
adc
cli
pop
iret
jp
icebp
leave
xchg
repz
in
push
mov
sbb
sbb
pop
mov
pop
mov
sbb
push
lret
cltd
mov
popf
push
les
xor
push
es
das
push
insl
adc
lcall
cwtl
scas
testl
sbb
jge
adcl
mov
cmp
dec
pop
test
dec
jne
sub
mov
pop
xchg
sbb
push
or
test
in
xchg
cmc
add
jnp
aam
pop
daa
adc
in
imul
inc
leave
lock
or
xchg
cmp
imul
std
icebp
dec
ret
jge
shrb
mov
aad
rorl
mov
mov
sub
lahf
loopne
in
std
push
jbe
call
pop
jmp
lods
popa
mov
mov
sub
pop
cs
jecxz
adc
xor
shlb
in
mov
int
push
lock
imul
fsin
xchg
fsub
sbb
xchg
arpl
leave
or
dec
or
imul
xorl
shll
mov
mov
imul
mov
inc
push
lea
cmp
sbbl
mov
aaa
jecxz
add
enter
cmc
lahf
scas
pushf
mov
pop
dec
jns
sub
das
andl
pop
dec
cmp
xchg
adc
sbb
mov
mov
and
sub
push
sub
dec
jmp
sbbl
out
dec
jne
or
rcr
test
add
cwtl
lahf
ds
cmp
out
pop
xchg
dec
loopne
ret
and
jecxz
lods
xchg
push
xchg
test
jecxz
fcoms
ficompl
test
adc
insl
daa
jbe
pusha
and
push
push
cmc
lods
jmp
cmp
mov
popf
cli
adc
xor
punpckldq
mov
push
negl
xor
adc
adc
add
push
cmpsb
cli
push
lods
dec
push
cmp
push
dec
sbb
inc
adc
fwait
inc
jmp
pop
sub
pop
je
cmp
insb
lods
mov
movsl
push
sbb
mov
cmpsl
dec
and
aas
mov
or
sbb
mov
adc
loop
fs
and
je
insb
mov
mov
push
or
popf
pop
jle
sub
rcll
xor
mov
shrl
fsubs
push
push
es
jg
or
and
daa
ljmp
cmp
icebp
mov
or
push
cmp
scas
insb
lcall
test
mov
adc
lea
dec
imul
mov
or
lret
cmpsb
sub
inc
add
int
mov
psubusb
loop
xchg
cmp
sti
popl
es
lds
xchg
and
dec
insb
cmpl
lds
cmc
jl
adc
int3
mov
and
push
dec
pusha
nop
mov
dec
fwait
idiv
test
test
mov
ret
xchg
jnp
push
mov
les
sub
cmp
lret
cld
mov
nop
das
adc
mov
inc
bnd
adcb
mov
jo
femms
ret
mov
inc
and
lea
fadds
in
xor
fmuls
rcrb
data16
subb
fidivrl
sub
outsl
mov
xorb
shll
stc
or
bound
in
loopne
cltd
mov
mov
imul
sub
sbb
sbb
shlb
add
lods
cmc
call
push
jns
dec
xchg
data16
inc
scas
jae
jge
in
add
in
popf
aad
loop
sub
int3
jmp
mov
add
jne
jle
jmp
gs
sub
cmpsl
sbb
jmp
ret
outsl
xor
loopne
das
jecxz
aas
aam
sbb
sub
sub
jecxz
inc
les
divl
xor
adc
or
andl
stos
pop
andl
push
cmpsb
and
scas
pop
add
inc
out
sbb
ja
cmc
mov
iret
lahf
rcrb
mov
push
in
jl
bound
ret
pop
or
fdivs
xchg
mov
enter
mov
mov
shll
nop
es
lods
jmp
mov
ja
xchg
test
cld
mov
mov
mov
or
ret
mov
shrb
lcall
add
je
dec
in
popf
and
jae
fisttpl
pop
test
ds
dec
aas
ficoms
repnz
jmp
into
add
or
push
and
sbb
adc
and
pop
jae
ja
std
xchg
stos
sbb
ljmp
cs
inc
inc
push
add
mov
jo
mov
mov
mov
or
xchg
sub
jno
fadds
mull
mov
test
sarl
jno
out
add
insl
cltd
dec
popa
jle
mov
inc
mov
cmp
xchg
test
dec
imul
or
xor
mov
mov
mov
cmpsl
xor
shll
xor
cmp
in
pop
enter
xor
jmp
rcrl
addr16
mov
inc
mov
adc
jns
pusha
or
jbe
jnp
mov
xchg
xlat
nop
and
xor
jl
insb
add
push
sahf
and
sub
pop
bound
sbb
mov
jle
ret
xor
stc
mov
inc
cmp
cs
sarb
cmp
es
mov
or
pusha
and
lret
in
pop
insb
xor
lcall
and
mov
gs
pusha
repz
fisubl
leave
push
mov
mov
fisubs
dec
ljmp
loope
int
ds
in
scas
rcrb
out
shl
dec
movsl
aam
sub
lahf
jmp
icebp
test
sti
cmpsl
mov
mov
mov
add
pop
sub
cs
into
mov
inc
pusha
adc
dec
add
in
adc
rorl
sbb
nop
cmpb
mov
cmp
lret
sbb
sbbb
andl
cltd
idivl
cmp
pop
mov
mov
add
mov
sbbb
mov
push
into
xlat
sbb
nop
jl
bound
stc
cmp
dec
xor
stc
test
jmp
push
jl
cmc
nop
dec
jne
data16
out
pop
xor
jg
sbb
or
cmp
dec
mov
add
sahf
loope
sub
cmp
adc
movsb
pop
testb
sub
div
xlat
or
shlb
in
push
push
sbbl
lahf
push
test
inc
clc
pop
pop
out
roll
push
popf
cmpsl
out
out
or
ret
rcrb
hlt
inc
xorb
aas
adc
jmp
pop
lock
out
jmp
sub
mov
adcb
rolb
enter
aam
add
adc
fs
into
test
jle
push
int
les
xlat
pop
jp
mov
mov
mov
and
pop
imul
cmpsb
cmp
shr
fsubs
pop
fs
jns
scas
mov
push
mov
cmp
pushf
call
lock
sbb
imul
jmp
pop
decl
cwtl
mov
imul
mov
push
jns
or
sub
adc
jns
xchg
push
pop
push
pop
lea
add
aas
ja
lods
and
mov
push
inc
or
and
lea
scas
das
ficompl
mov
mov
sub
xor
inc
int
inc
sbb
cmp
inc
mov
icebp
leave
mov
jb
pop
dec
mov
xorb
ja
inc
adc
popa
mov
aad
push
lods
outsl
lea
add
fwait
push
je
sbb
adc
adc
sbb
cmp
cmpsl
in
popf
cwtl
push
movsl
cmp
adc
sub
andb
out
sbb
in
inc
stc
jae
mov
pop
int3
sbb
mov
sub
mov
xchg
out
cmp
dec
push
dec
hlt
fsts
es
push
aas
in
or
xchg
inc
les
daa
repnz
repnz
test
dec
mov
je
mov
or
lahf
cmpb
add
jl
dec
inc
mov
lods
call
xchg
cmpsb
loopne
mulb
or
loop
cs
xor
imul
push
fucomi
in
mull
bound
cltd
xchg
cmp
xor
xchg
sub
push
push
jne
in
pushf
loop
jp
mov
cmp
jnp
jl
dec
xchg
xor
xchg
mov
dec
mov
pushw
dec
pop
rep
out
std
dec
cmp
cmp
int
leave
jg
das
push
orb
shll
fstpl
fildll
ja
movsb
cmp
lock
icebp
jb
add
aam
inc
push
mov
or
or
daa
push
jg
xor
dec
cmpsb
sbb
inc
sub
mov
cmp
jp
inc
mov
lock
and
pop
mov
dec
dec
inc
xor
cmp
mov
or
icebp
mov
push
mov
jnp
out
enter
ret
sub
and
pop
jns
lret
fistps
insb
icebp
mov
ja
xor
subl
pop
dec
hlt
dec
std
lods
cmp
pop
jg
jmp
icebp
imul
pusha
jl
pop
adc
mov
xor
lock
call
jl
test
and
in
dec
jno
popa
sub
das
and
scas
cli
mov
iret
sbbb
mov
sub
cmp
cs
jns
jmp
xchg
mov
cld
or
sahf
cmc
femms
dec
add
adc
cli
mov
inc
dec
call
dec
mov
gs
jp
xchg
or
or
cli
xor
call
rcrb
lea
fcmovu
xchg
add
mov
pop
mov
xor
mov
mov
jns
out
xchg
adc
iret
sub
mov
stos
imul
mov
mov
mov
in
mov
sbb
inc
imul
aaa
dec
xorb
daa
cmp
shll
mov
sbb
mov
jbe
fistl
xchg
push
arpl
fisubrs
xor
shrl
pop
fists
gs
inc
sub
std
mov
add
mov
jge
inc
inc
sti
mov
cvtpi2ps
xchg
adc
add
call
jnp
inc
mov
ja
data16
loopne
cs
sbb
pop
ret
js
or
addr16
imul
mov
insl
pop
ret
jg
fdiv
xchg
loopne
xchg
ss
sub
xlat
clc
in
dec
addr16
sti
daa
jmp
or
out
xor
pop
hlt
xchg
or
cmp
sbb
int3
sbb
fsubrs
aam
fimull
insb
or
and
xchg
xchg
or
je
xor
or
popa
sti
fidivl
mov
int3
sbb
add
add
enter
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
scas
in
mov
in
adc
and
cmpsl
jge
jle
sbb
test
jle
xorb
jbe
repz
fildll
outsl
into
jns
push
pop
xchg
sub
fstpl
roll
cmp
inc
mov
test
insl
mov
mov
pushf
push
pop
mov
pop
cmpsb
stc
push
pop
inc
shlb
sbb
add
jl
add
inc
adc
lea
mov
mov
sub
or
pushf
fs
aad
int
aaa
pop
jecxz
push
sub
jp
xor
pop
or
mov
xor
or
or
out
pop
andl
push
and
push
dec
mov
mov
inc
xor
lea
or
pop
xchg
mov
push
mov
push
in
inc
pop
mov
cmpsb
fwait
jno
fxch
or
mov
icebp
dec
lret
ret
sbb
xchg
stc
mov
lcall
nop
sbb
xorb
ds
inc
xor
pop
inc
or
jb
aad
inc
xlat
adc
pusha
mov
div
pop
sti
jnp
ja
mov
dec
sub
ret
clc
dec
xlat
js
cmp
mov
ret
imul
stc
jp
sbb
ljmp
es
daa
sbbl
ret
lea
loop
lods
xchg
ljmp
int
cltd
adc
lock
ficomps
sbb
xchg
mov
into
inc
mov
push
xchg
push
add
push
ljmp
sub
cwtl
xor
push
cmp
stos
insb
rorl
iret
cmc
data16
lea
push
jae
sub
jg
sti
mov
aaa
fldt
mov
pop
std
cmpsb
push
jecxz
mov
pop
scas
xchg
pop
push
mov
or
pop
movsl
mov
repnz
dec
call
and
ljmp
push
imul
inc
loopne
rorl
fldcw
mov
jne
pop
mov
ljmp
call
adc
test
xchg
mov
cmp
bound
mov
aad
das
sub
mul
sbb
jle
cmpsl
push
cmc
push
mov
mov
mov
cmp
pop
mov
cmp
jne
xor
and
pop
mov
repz
lods
cs
xchg
orl
cmp
push
or
cli
gs
or
cs
jle
pop
in
and
stos
pop
inc
pop
adc
out
ljmp
cmpsl
xchg
mov
mov
fcompl
mov
jb
addr16
cmp
outsl
mov
cld
or
jb
mov
mov
xchg
jne
loope
sub
mov
or
lcall
shlb
imul
mov
mov
je
aad
xlat
or
frstor
dec
je
fmull
fwait
dec
sub
sbb
xchg
rorb
mov
pop
nop
aam
sbb
outsb
arpl
adc
ret
pop
stc
sbb
push
icebp
jbe
cmpsl
xor
test
or
add
test
or
inc
pop
and
jg
adc
push
add
icebp
dec
je
mov
popf
xor
dec
repnz
jbe
adc
ljmp
push
dec
dec
bnd
mov
and
shlb
pop
outsb
fcomps
jne
les
push
sub
adc
nop
lcall
jl
cltd
jne
ljmp
jmp
stc
lret
repnz
pop
add
lods
int
jnp
cltd
mov
out
faddl
pop
jl
stc
cmp
cltd
insb
loop
mov
mov
inc
pop
jbe
leave
push
mov
inc
shll
ss
popa
inc
inc
outsl
lods
call
push
fmulp
fs
xor
push
lods
xchg
inc
rclb
out
mov
insl
jbe
add
pop
sbb
ljmp
xchg
std
cltd
jne
and
movsl
inc
stc
aaa
neg
dec
xor
movsl
leave
aam
das
cwtl
or
xor
pop
dec
mov
mov
xchg
sbb
sub
push
sarb
cmp
jl
outsb
subb
mov
imul
adc
xchg
daa
push
or
lods
ds
in
dec
gs
insl
or
test
sub
mov
in
cmpsb
pop
and
and
lds
fbld
ret
xchg
mov
popa
out
mov
dec
test
or
add
sbb
add
cmp
lret
and
push
push
or
jmp
aas
ficomps
push
shl
or
inc
loope
sti
xlat
sbb
xchg
xchg
neg
lret
addl
mov
rcl
lret
xchg
sbb
pand
popf
or
aaa
insl
lea
loope
adcb
icebp
mov
sub
stos
fistpl
sbb
sbb
mov
insl
scas
or
rorb
repnz
inc
cmpsb
fucomp
mov
leave
mov
mov
fbstp
jnp
test
adc
rcrl
out
out
and
mov
cltd
sub
and
mov
dec
push
fstpt
std
jne
test
dec
popa
aaa
movsb
pop
push
sahf
insl
sti
iret
cmp
jo
in
test
cmp
sarb
pusha
fisttps
or
sub
incb
cmpsb
scas
cltd
jns
adc
sub
loopne
xchg
stc
mov
insl
orb
cmp
pop
jnp
test
and
pushf
mov
fdivl
lret
daa
pop
or
dec
cmp
jo
cmp
cmp
sbb
cwtl
adc
aaa
fs
pop
pop
data16
fdivs
mov
and
mov
pushf
pushf
xchg
test
push
adc
mov
ffreep
orl
push
das
out
std
icebp
mov
insl
adc
push
jl
jbe,pt
fsubrs
fcmove
fcmovnu
add
daa
and
int
sbb
adc
pop
jmp
add
int3
cmc
or
xor
movsl
cmp
xchg
and
iret
adc
repnz
mov
fdivp
adc
imul
cli
pop
lahf
mov
js
xchg
cmp
mov
adc
jg
jb
loopne
arpl
xchg
movsb
lds
mov
push
adc
into
ja
xchg
fs
sbb
subb
lahf
les
aad
inc
in
ljmp
sub
dec
shll
movsb
xor
adc
stos
popf
cli
ljmp
xchg
mov
fsubrs
je
incb
repz
inc
or
inc
jl,pn
popl
movsb
addr16
sub
and
mov
enter
js
div
imul
sbb
test
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
outsl
sub
xchg
ficoms
mov
pand
sahf
adc
xchg
call
imul
cmpsl
push
test
fmul
dec
xchg
ja
and
or
clc
sbb
loope
xchg
pusha
or
arpl
inc
imul
test
pop
and
and
pop
fsubp
mov
popf
fldt
ret
mov
lds
and
arpl
and
push
jmp
aas
rcrb
add
daa
add
mov
sbb
adc
arpl
push
xchg
inc
mov
ficompl
jae
jno
in
cltd
enter
and
insb
rcr
iret
jo
lods
out
cs
out
lcall
inc
inc
add
lds
scas
adc
jb
dec
aam
das
shll
mov
jg
inc
push
lret
ficompl
sbb
jmp
jbe
dec
es
pop
nop
popa
je
jle
lret
adc
sbb
movsb
xchg
xor
mov
test
inc
sahf
test
mov
ja
inc
dec
out
sbb
adc
daa
jo
data16
ja
inc
sbb
in
jb
aam
push
lret
push
xchg
leave
xor
jecxz
lret
jae
sub
pop
push
xor
dec
inc
bound
cmp
inc
mov
insl
loopne
sbb
jl
out
push
jp
pop
scas
push
sbb
sub
mov
inc
mov
mov
or
testl
xchg
mov
push
dec
pop
sbb
call
aam
pop
clc
cmp
cli
setge
push
push
imul
mov
loope
or
mov
mov
syscall
xchg
jae
inc
pop
test
xor
sub
cmpsl
dec
xor
dec
xor
bnd
add
call
adc
sbb
jge
outsl
push
fstps
mov
sub
enter
jo
xor
xlat
popf
or
daa
sbb
insl
js
add
inc
das
das
pop
jae
dec
add
cltd
rcr
testb
xor
pop
popf
dec
cmp
repnz
lcall
outsb
cwtl
pop
pop
xchg
push
das
pop
jge
xchg
lahf
ja
std
inc
cmp
out
push
inc
sbb
cmp
movsl
fisttps
pop
pushf
xchg
fs
ret
dec
sbb
loope
shlb
loope
add
lods
adc
sbb
add
pop
adc
lea
mov
icebp
pop
sbb
idivb
test
or
loope
inc
pop
jge
test
imulb
inc
add
jmp
inc
fadds
pop
push
repnz
sti
xchg
rorl
and
into
add
enter
jp
dec
pop
lods
cld
add
cmc
out
adc
ret
enter
jbe
test
rcl
scas
and
dec
popf
mov
test
sahf
fisttps
repz
cltd
leave
mov
popf
roll
xor
cmp
xchg
and
movsl
inc
ds
lea
aad
das
cmp
pop
or
xchg
cld
std
pop
enter
jb
sti
xchg
cmp
rcl
enter
cmp
rorl
rorl
sub
mov
cld
ss
jne
sub
lock
cmp
imul
push
cmc
cmp
and
lods
mov
sub
sbb
push
xchg
in
cwtl
push
pop
cmp
xor
push
mov
popa
aad
inc
mov
sub
push
lock
or
ss
daa
loope
sbb
jno
ret
add
pop
stos
je
loopne
pop
aam
push
mov
loop
test
mov
mov
out
jbe
xor
pop
inc
jne
pop
xor
and
sub
enter
loope
addr16
add
jne
xchg
lret
leave
lea
sub
js
xchg
mov
push
sbb
xchg
xor
push
cmpsl
in
mov
inc
js
inc
adc
mov
sbb
jecxz
or
jo
scas
pop
add
fs
lods
jo
cmc
jb
into
imul
imul
jno
sub
ret
and
movsl
or
movlps
sub
add
addb
lods
js
insl
cld
inc
xchg
mov
adcb
fisttpll
xorb
inc
rclb
add
sahf
aad
and
sub
repnz
xchg
jmp
adc
pop
xor
popa
sbb
aaa
sub
popa
push
fiaddl
and
mov
jge
mov
or
fwait
jno
pop
aam
lock
and
push
add
sub
into
and
or
or
push
xor
dec
outsl
cmc
pop
lock
cld
aam
xchg
inc
shlb
dec
aam
pusha
pop
pop
mov
push
xor
popa
mov
dec
adc
push
in
or
idivl
fwait
mov
push
insb
inc
push
enter
lock
xor
subl
add
test
push
adc
mov
in
enter
mov
movsb
pop
int
fdivrl
adc
push
sbb
jmp
data16
scas
xchg
adc
mov
std
jne
mov
push
jg
mov
inc
xchg
pop
or
mov
mov
test
out
inc
sub
dec
jp
push
push
mov
sti
xor
mov
into
mov
shl
inc
rcl
lret
fsts
pop
lock
pop
call
mov
loopne
sbb
outsb
int
pop
xlat
repnz
int
push
adc
dec
in
mov
jo
add
add
pop
jnp
mov
jmp
mov
pop
mov
dec
xor
inc
adc
sub
ljmp
pop
enter
mov
xchg
imul
cltd
sbb
in
inc
insl
push
ss
sub
xchg
not
sbb
in
insb
icebp
jae
scas
sbb
gs
sarb
clc
fcomip
jns
ds
sbb
lds
xor
stos
push
test
sti
and
add
movsl
dec
movsl
out
mov
or
xor
dec
loop
add
mov
xchg
cli
sbb
inc
xchg
mov
pop
and
inc
push
lret
ret
adc
push
adcl
push
dec
sub
ss
divb
cs
in
push
cmp
std
xlat
push
scas
in
cmpsl
ja
lods
mov
mov
jnp
jecxz
and
daa
adc
mov
add
iret
out
xchg
shlb
push
leave
sub
stos
pop
jns
add
jg
xor
ds
sarl
das
rolb
idivl
ret
ja
pop
in
fistpl
and
repz
inc
adc
in
jmp
and
in
pusha
into
fsubr
mov
cmp
icebp
out
sarb
push
dec
and
decl
hlt
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
ja
movb
mov
je
fcompl
stc
adc
out
shlb
cmp
lds
fistps
xchg
inc
sti
mov
fnsave
inc
aam
cmp
inc
mov
dec
dec
xchg
adc
xchg
push
mov
push
daa
or
dec
mov
pop
push
or
or
test
addr16
out
pop
test
aad
xchg
lds
jae
pop
xor
inc
pop
div
sahf
cltd
sarl
and
repnz
cmp
inc
lods
mov
outsl
jne
loopne
adc
or
in
push
or
dec
popa
fisubrs
push
pop
insl
pop
jg
mov
ret
pop
pop
out
add
push
cmpsl
repnz
test
mov
mov
jle
dec
cwtl
sbb
cmp
insl
mov
int
data16
xchg
stc
clc
push
push
fmul
addb
outsl
jbe
add
inc
mov
out
push
icebp
out
cli
mov
mov
popa
test
decb
pop
xchg
shlb
sbbl
jg
jno
in
jo
jle
lods
fcomps
mov
sbb
filds
sub
pop
sbb
mov
fnstsw
loopne
adc
mov
fisubrl
sub
push
mov
mov
fwait
clc
mov
pop
dec
mov
cmpsl
lret
adc
sub
lcall
xchg
fistpl
fucomi
in
push
leave
ss
nop
arpl
adc
fwait
arpl
add
fadds
sub
fsqrt
iret
lods
data16
iret
jl
sahf
std
pushf
jbe
loop
lcall
push
sub
loope
sti
sahf
stc
jbe
pop
sub
jg
insb
aam
loop
xchg
pop
push
inc
push
lcall
cmp
movsb
shrl
fldt
stc
inc
adc
in
push
in
pop
or
pop
mov
lret
pushf
idivb
cmp
int3
pop
cmpsb
push
push
sub
sbbb
inc
and
and
iret
mov
add
stos
movsl
aaa
test
mov
mov
gs
sub
int3
and
je
sbb
mov
insb
lret
scas
std
mov
mov
sub
push
xchg
push
sar
popf
fistpl
call
inc
mov
shll
in
orb
push
push
mov
rclb
je
loopne
mov
aas
or
push
pushf
out
sbb
jo
setge
lcall
dec
leave
fisttpll
in
std
xchg
push
fstp
push
into
sbb
cmpsb
mov
cmp
pop
sub
sub
clc
and
dec
inc
shlb
mov
xchg
cltd
cs
pushf
lahf
pop
push
sub
sub
mov
jg
dec
loop
ja
add
jns
stos
mov
cmp
adc
daa
xor
add
jmp
cmpsb
add
jp
xchg
jo
sbb
mov
dec
jmp
cmp
pop
push
loopne
repnz
jns
leave
cmpsb
shll
fisttpl
add
xlat
ret
imul
dec
arpl
mov
outsl
mov
mov
mov
mov
clc
push
sbb
sbb
cli
pop
repnz
negb
mov
fwait
adc
lret
icebp
movsb
lods
mov
add
push
xchg
xor
sbbl
out
xchg
sbb
popf
add
stos
push
sbb
iret
cmp
jg
testl
mov
cld
rol
and
dec
xor
push
jb
ret
adc
jno
sbb
out
add
push
or
hlt
shll
jl
negl
pop
jb
mov
pushf
in
lret
in
es
fldt
mov
out
daa
out
aad
outsb
notl
std
mov
jle
loop
addr16
cmp
mov
out
lahf
jl
hlt
push
push
rcl
out
pop
test
loope
pushf
popf
jp
push
sub
jno
in
outsb
sarb
adc
jecxz
out
dec
ja
out
aaa
pop
xor
insl
roll
pop
xchg
mov
nop
rorb
push
push
popf
xchg
insb
mov
mov
movsl
call
jae
push
dec
dec
mov
addl
cmpsb
push
pop
pop
add
add
je
adc
loop
aam
jo
mov
inc
and
xchg
xchg
pop
xor
repz
mov
int
xor
mov
push
add
lret
lock
mov
add
mov
dec
inc
lods
orl
lock
mov
cmp
or
add
xchg
sbb
add
mov
icebp
jno
mov
dec
enter
jg
adc
cmp
dec
mov
pop
push
or
jecxz
inc
pop
les
dec
cli
rolb
bnd
cmp
sti
cmp
add
inc
fdivrl
or
jno
aam
dec
pop
or
iret
and
cmpsl
pop
add
dec
ret
sbb
fsubs
rcl
adc
pop
xchg
bnd
xor
scas
rol
mov
mov
xchg
sub
push
cli
xchg
jg
in
mov
and
add
lods
pop
out
cmpsl
sub
lock
cmp
inc
cmp
test
inc
dec
fcomps
fmuls
inc
adc
neg
sub
mov
fs
cmp
inc
inc
xor
mov
sbb
fucomp
popa
add
cmp
pop
jne
je
adc
sbb
sub
dec
pop
jno
cmp
pop
sbb
and
arpl
fwait
outsl
pop
enter
lods
pop
jle
mov
mov
mov
dec
in
sbb
nop
push
outsl
dec
add
ljmp
adcl
sbb
jno
and
pushf
xchg
aad
adc
mov
pop
jo
mov
rcr
cmc
les
pop
inc
inc
fcomp
popf
mov
xchg
mov
cmpsl
hlt
dec
repnz
nop
fldl
or
dec
aaa
cld
lods
add
stc
ret
mov
stos
into
jo
push
add
add
push
cmp
sub
stos
mov
arpl
dec
adc
ja
jb
int3
adc
push
xchg
test
mov
inc
int
mov
mov
add
sub
xchg
xchg
stos
jle
repnz
test
fldt
cmpsl
outsl
push
test
loopne
mov
cmpsb
cmp
jo
fsubs
test
xor
inc
js
xchg
aas
mov
xchg
xchg
dec
dec
scas
fidivrl
and
ret
sbb
dec
adc
jbe
mov
cmp
imul
lret
add
jl
mov
scas
pusha
push
aas
and
cmp
pop
jle
push
clc
cmp
xchg
push
xor
mov
mov
fisttpl
pop
xor
and
sub
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
xorps
or
push
lcall
fldt
aas
imul
dec
aaa
mov
fwait
mov
and
outsb
lcall
pop
lcall
call
bound
sub
adc
inc
mov
or
xchg
les
mov
stos
or
pop
scas
adc
mov
mov
pop
sub
lret
push
addl
push
aad
or
xchg
jmp
das
add
push
fstpt
add
sub
push
xor
xchg
push
andl
sbb
into
data16
ffreep
out
repz
pushf
fwait
enter
aas
mov
ret
push
xchg
and
pop
jnp
mov
sbb
mov
jae
inc
pop
es
lods
xor
mov
push
cmp
dec
aad
into
mov
sbb
popf
xor
mov
xor
jae
jmp
jg
dec
xor
lods
pop
fstpt
in
pop
push
xor
mov
lds
popf
dec
imul
hlt
xchg
sbb
pop
movsb
inc
mov
pop
lods
xchg
push
mov
outsb
sbb
dec
test
cmpb
icebp
hlt
jo
sbb
or
lods
sub
loope
xor
imul
fwait
stos
fisttps
inc
and
test
in
jns
aas
jg
cs
inc
mov
jns
lcall
mov
lea
xor
mov
lock
xchg
mov
stos
add
dec
sbb
and
and
xor
jb
pop
out
out
ljmp
sbb
push
cli
fwait
mov
loopne
xchg
add
mov
sbb
lock
outsl
xor
movsb
je
das
push
aaa
fstl
negl
fwait
movsb
jnp
shlb
lea
addr16
pop
fidivs
fidivrl
out
dec
pop
jl
pop
adc
add
inc
ljmp
and
insl
sbb
inc
lcall
out
xor
xchg
fdivrl
cwtl
shrl
clc
mov
pop
jle
outsl
shlb
dec
fcompl
cli
dec
daa
repz
fisubl
scas
nop
mov
fbld
aam
or
lods
jns
sub
adc
cmp
mov
orl
jmp
in
push
xchg
popa
mull
xchg
int
or
mov
leave
mov
outsb
frstor
mov
xchg
mov
adc
scas
mov
and
test
sbb
fnsave
adc
nop
cltd
pop
sbb
sub
cld
mov
xchg
out
sbb
mov
sbb
inc
mov
ret
imul
sub
shll
cmp
xor
das
lret
icebp
es
fldz
rcrl
pop
add
xor
push
mov
out
cmp
shll
outsb
repz
sbb
sub
dec
popf
adc
add
cmp
out
dec
add
addl
jmp
faddp
mov
mov
jno
jb
push
ss
ds
pop
jmp
jg
sub
mov
xor
cmpsb
js
out
xor
push
xor
pop
xchg
fs
or
popf
push
push
jge
ret
sub
inc
fwait
jo
dec
push
inc
daa
cs
sub
jae
jl
cld
mov
pop
lds
shl
movsl
repnz
mov
xchg
outsb
nop
mov
pop
mov
imul
fs
movsl
push
and
cmpsb
dec
ret
jae
push
pushl
cmc
or
mov
cmp
jb
mov
pop
orb
mov
rcrl
fildll
sti
lock
in
sub
xchg
mov
sub
cltd
fisttpll
mov
and
ss
shl
fbstp
cld
adc
jl
sub
int
fs
shll
subb
orl
sahf
sbb
enter
pop
test
test
jge
test
xchg
iret
stos
cli
pop
ret
xchg
mov
mov
and
and
fists
aad
push
mov
xchg
adc
mov
ret
inc
sahf
out
adc
inc
xchg
dec
mov
pop
mov
and
outsb
inc
int3
sub
push
mov
cmp
xor
sarb
pop
cmpsl
inc
sbb
add
jge
daa
cld
jne
sbb
jb
xchg
ret
popf
jg
in
stos
dec
sahf
mov
mov
pop
lods
xor
adc
lods
add
sahf
test
mov
in
mov
outsl
cmp
or
pop
push
push
sbb
cmpl
insb
sarb
sub
cmp
loopne
ss
jno
cmp
mov
sbb
mov
lcall
call
cli
xor
in
ljmp
or
pop
filds
push
push
pop
xchg
lret
dec
jle
test
mov
push
xchg
test
xchg
sbb
lods
cltd
cmp
push
popa
sahf
and
repz
xchg
mov
jbe
mov
or
bound
icebp
ror
push
xchg
scas
xchg
cmc
push
jecxz
or
jl
insb
shrb
mov
push
sub
ret
cmp
mov
xlat
xchg
mov
in
jmp
push
sub
inc
push
mov
imul
inc
out
jecxz
int3
inc
fbld
mov
stc
pushf
inc
mov
sub
imul
dec
adc
repz
mov
in
lret
adc
pop
jbe
movsl
iret
inc
insb
lea
arpl
jge
jmp
pop
xor
movsl
and
xchg
jmp
fsubp
arpl
mov
sbb
and
sub
mov
sub
dec
adc
jecxz
js
inc
push
and
sub
sub
fwait
pop
inc
vpaddd
cmp
mov
divb
movsl
fdivp
mov
fbstp
vhsubps
fcoml
lret
cmpsl
cmp
xchg
je
push
cmp
adc
loopne
ds
mov
cmp
movsw
jp,pn
sahf
mov
xor
sbb
lcall
pop
add
mov
sbb
and
push
popa
inc
pop
icebp
icebp
fnstcw
test
jbe
loopne
jl
aad
xor
xor
fisttpl
pop
jbe
loop
rcrb
imul
lods
sub
pop
sarb
push
in
sbb
addr16
xor
ret
and
enter
rcrb
lods
ja
xor
push
imul
cmp
xchg
or
inc
adc
or
aaa
or
out
stos
sbb
outsl
lods
inc
mov
add
in
mov
hlt
dec
sbb
ror
jo
pop
jo
mov
adc
add
jmp
jne
add
subl
xchg
or
mov
adc
and
clc
push
pop
scas
addr16
jb
fidivs
push
outsl
aas
jg
icebp
mov
jo
xchg
filds
or
add
push
testl
sahf
jg
adc
adc
mov
cmpsl
and
jg
js
cmpsb
xor
jg
sub
jp
clc
repnz
scas
hlt
add
pushf
push
pushf
je
arpl
jns
les
enter
insl
iret
std
dec
popa
dec
dec
je
jp
and
popa
test
or
pop
jp
cmp
jne
in
scas
jecxz
jp
push
shrl
mov
imul
sub
xor
in
or
fwait
sbb
js
push
mov
adc
lods
push
rclb
adc
sub
pusha
add
jp
mov
jns
dec
or
verw
mov
stos
sub
adc
cmp
jle
mov
jne
sub
and
call
mov
out
test
pop
adc
sbb
xchg
sbb
and
arpl
jbe
cmpsl
sub
sub
shrl
inc
mul
adc
inc
lods
int
icebp
push
fwait
cmp
lret
enter
loop
loopne
pop
add
adc
ja
or
ret
mov
iret
jle
into
in
fisttpll
adc
mov
test
mov
sarb
push
bound
hlt
dec
mov
sub
cs
pop
xchg
mov
in
or
cmp
xchg
dec
dec
jns
insb
scas
inc
adc
adc
mov
xchg
das
pushf
loopne
insl
xor
inc
lahf
mov
repz
in
in
rcl
push
cmp
sub
cmp
mov
repnz
data16
cmp
xchg
pop
jbe,pn
sub
in
xchg
cs
lahf
cld
fwait
clc
stos
mov
fmul
ja
mov
out
std
dec
dec
fistl
es
aam
inc
jle
mov
movsb
push
fnstsw
add
push
add
popf
ljmp
dec
xchg
sbb
scas
sub
and
jo
mov
or
jo
or
adc
movsl
dec
pop
clc
jns
data16
jl
call
add
jno
dec
mov
cltd
clc
aas
mov
cltd
fsubl
jle
sub
and
inc
jne
push
ds
push
lcall
cld
movsl
xchg
imul
cmp
out
ret
icebp
jnp
inc
push
rcll
xchg
in
pop
dec
or
inc
and
arpl
movsb
aaa
ja
cmp
jmp
pop
inc
scas
mov
repz
nop
xchg
out
iret
icebp
pop
in
jle
pop
pop
fcoms
movsl
dec
mov
xchg
and
mov
loop
cmc
jge
fsubs
int
in
iret
jge
sti
ror
mov
iret
push
sub
sbb
sub
xchg
inc
mov
out
cmp
out
and
fs
aaa
sbb
add
and
mov
xchg
jg
test
pop
push
pop
lcall
rcr
push
imul
jmp
add
push
xchg
jnp
push
fstp
fwait
inc
iret
xor
insl
ja
movsb
cmp
jle
shrb
mov
fnstenv
in
mov
aam
xor
sub
into
sub
sub
mov
and
and
mov
aaa
decl
xor
test
test
mov
xor
popf
popf
dec
cmp
cmp
jecxz
ss
adc
sub
mov
mov
inc
sbbl
les
inc
decb
cmpsb
xorb
mov
and
int
repnz
and
cmp
sub
pop
clc
mov
cmpsb
pop
mov
fstps
stos
lahf
int
jg
stos
cld
int
cmc
xchg
inc
hlt
shlb
or
std
sub
stc
mov
add
pop
push
mov
pushf
insb
bound
scas
jmpw
roll
jne
mov
popa
movsb
stos
adc
movb
pop
mov
xor
cwtl
gs
xlat
test
pop
scas
add
ja
sub
shr
clc
shlb
push
cmpsl
xor
mov
jae
inc
pop
loopne
rcrb
out
xchg
mov
fsubs
test
ficompl
jb
test
pop
jge
out
pop
or
flds
nop
lea
pop
stos
mov
jg
movsb
loop
mov
xchg
lcall
sub
fnsave
and
mov
cmpsb
stos
xchg
ret
push
xchg
or
inc
sub
mov
imulb
aaa
mov
cmp
pop
mov
mov
xor
mov
loope
jnp
adc
fmuls
sub
adc
add
mov
mov
add
rcrb
xchg
inc
notb
inc
add
jmp
out
test
js
cmpsb
popf
adc
jns
imul
aaa
pusha
cmpsb
das
mov
mov
mov
xor
mov
lods
es
sbb
repnz
movsl
test
mov
hlt
xchg
mov
test
adc
movsl
mov
fldl
movsb
das
dec
mov
sbb
xchg
call
jmp
inc
lret
dec
jge
bound
pop
out
sar
arpl
pop
adc
adc
arpl
rorb
push
mov
in
mov
or
loop
xchg
ja
icebp
cmc
fdivs
loopne
jns
idivb
das
xchg
or
lods
mov
dec
in
xor
pusha
rcll
mov
pusha
mov
movsl
sbb
int
pusha
dec
iret
jecxz
rolb
fimull
push
popf
mov
jecxz
rclb
scas
cmp
or
or
mov
xchg
mov
cmpsl
stos
adc
rorl
jmp
in
out
inc
movsb
cmp
out
jae
out
shll
and
lahf
jecxz
popa
pop
faddp
bound
xor
test
stos
dec
mov
pop
mov
inc
push
out
int3
dec
xchg
pop
ret
adc
xchg
test
pop
adc
lock
stos
jo
lods
sub
jbe
cltd
sub
mov
inc
iret
sti
cmp
lods
inc
mov
xchg
xor
xchg
push
adc
add
cmpsb
xchg
shll
mov
subl
xor
dec
addb
pop
sbb
xchg
imul
inc
mov
aam
mov
ret
push
and
pop
iret
cltd
rclb
fwait
dec
jae
call
loopne
mov
inc
aam
mov
fsubrs
ljmp
mov
rcll
mov
mov
jg
incb
rol
cmc
inc
sbb
hlt
test
cs
jno
rcrl
push
aaa
pushf
cmpsl
repnz
dec
mov
adc
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
push
fbld
dec
js
adc
and
and
repz
fs
push
pusha
ds
arpl
shll
dec
popf
jae
inc
clc
mov
add
mov
lret
mov
xor
sbb
sbb
mov
sbb
pop
lahf
pusha
mov
fstpl
add
or
mov
insb
and
mov
daa
int
int
dec
mov
xor
popf
or
xor
mov
lret
inc
xchg
adc
jno
dec
push
movntq
push
sbb
sbb
and
ja
mov
cs
push
pop
dec
aas
xchg
sarl
xor
scas
leave
jecxz
sbb
fs
push
xchg
xchg
test
inc
sub
scas
mov
stc
mov
jns
inc
fcoml
into
push
inc
and
jo
mov
or
add
pop
inc
pop
mov
out
xorb
lea
into
je
int3
dec
ja
adc
mov
out
dec
roll
push
push
jge
adc
pop
rorl
xchg
jns
inc
pop
cmp
enter
nop
sub
aam
lods
mov
sti
adc
push
es
mov
movsb
adc
int3
xor
out
and
mov
push
rcrb
jbe
sbb
sub
fistpl
pop
cmp
loope
sarb
orl
lds
sbb
dec
xor
xchg
les
jno
jno
fistpl
not
jmp
fistl
inc
cwtl
stc
and
orl
lods
mov
xchg
movsb
outsl
fs
sahf
fs
jecxz
test
aas
in
stos
cltd
sbb
add
hlt
fwait
and
imul
fisubs
rcll
mov
aas
inc
inc
add
inc
int
mov
jp
push
adc
mov
lds
scas
cmpsl
jle
in
jg
ja
nop
and
xor
xchg
xlat
mov
pop
xchg
xchg
push
push
push
sub
push
push
pop
dec
dec
into
vpmulhw
mov
cltd
scas
and
sahf
pop
stos
movb
in
inc
out
mov
stc
bound
adc
lods
push
push
shr
shrb
pop
lea
rcrl
add
pop
mov
jg
jecxz
push
lret
and
cmpsb
push
cli
mov
addr16
inc
mov
push
cmp
ret
pusha
mov
add
aas
or
rcrl
or
push
dec
mov
mov
clc
pop
push
call
xor
ret
std
fstp
mov
mov
stos
pop
fdivs
dec
loop
mov
cmp
push
lock
shrl
xchg
test
repnz
repnz
jb
fsub
ficoml
lcallw
pop
leave
lods
js
mull
push
inc
loop
popf
xor
pushf
add
push
into
out
inc
jl
mov
xor
mov
sarb
cltd
mov
jbe
sbb
mov
scas
out
mov
xor
ds
or
mov
dec
ds
int
and
and
sahf
and
pop
in
jge
xlat
mov
in
sbb
daa
in
in
das
test
lods
jne
push
xor
add
mov
out
sbb
sbb
outsl
je
lret
mov
popa
imul
out
cwtl
xchg
fcmovb
lea
push
insb
sbb
inc
aaa
jb
fists
jecxz
mov
and
push
in
lcall
popf
pop
movsb
mulb
mov
mov
outsl
daa
and
xchg
or
jl
imul
in
inc
pop
mov
das
pop
loope
jmp
xor
cwtl
test
int3
movsl
aas
lods
out
loopne
mov
inc
dec
xor
loope
out
testl
lods
dec
pop
test
in
pop
pop
arpl
mov
xor
inc
or
cmp
ljmp
fwait
cmpsl
mov
push
shlb
push
add
in
in
pop
pop
pushf
int3
mov
loopne
cltd
mov
insl
lods
rcrb
jl
sbb
in
ss
stc
out
sub
popf
pop
or
lods
mov
fsubrl
iret
sub
nop
into
lret
or
call
mov
arpl
adc
push
sub
loope
jo
mov
nopl
icebp
adc
gs
lods
jecxz
xlat
cmpsl
jmp
scas
xchg
leave
dec
xchg
cltd
mov
daa
scas
flds
mov
in
sub
test
mov
or
mov
adc
and
mov
mov
and
mov
imul
cltd
lea
xor
jecxz
rcll
subl
aad
jo
je
push
mov
iret
les
into
pop
js
push
adc
sbb
jp
adc
aad
xor
mov
adcl
ja
dec
daa
ret
cli
add
adc
cld
pop
imul
cmpsb
push
mov
sub
insb
std
inc
push
outsl
jns
pop
lods
xor
out
mov
popa
mov
stc
nop
dec
popf
adc
add
push
rorl
imul
icebp
xor
jle
insl
rcrl
adc
aad
xchg
daa
mov
or
jnp
rcll
jl
leave
cmovl
sbb
inc
lret
rcll
rorb
mov
cmpsb
hlt
pop
mov
rclb
dec
pop
mov
outsl
lret
mov
test
mov
pop
ja
lahf
jbe
fwait
cmp
jl
negl
cmp
pop
or
add
stos
cmp
mov
sbb
call
fsts
cwtl
dec
es
pop
dec
addr16
adc
bound
jb
push
xchg
pop
xchg
dec
out
sub
jmp
pop
mov
pop
ret
sti
dec
aaa
fsts
into
mul
clc
inc
stos
ficompl
shll
adcl
push
add
fildll
add
xchg
fmull
leave
jne
icebp
adc
inc
lahf
int
cwtl
xor
xchg
jae
push
outsl
shr
in
lock
andb
xchg
inc
lea
xchg
push
lcall
adc
add
cmp
dec
std
fwait
pop
iret
mov
lock
addr16
cmp
movsl
insb
dec
pop
cmpl
adc
mov
xor
shll
sub
mov
xor
jge
jbe
shr
adc
jecxz
xchg
jns
mov
xor
ljmp
daa
lock
inc
loope
std
repnz
arpl
cld
ret
mov
sub
sbb
out
loope
lds
dec
xor
xlat
ret
jle
cmpsb
mov
sub
outsl
jg
or
cmp
std
movsl
test
pusha
loop
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
add
and
sbb
sbb
jg
xchg
and
dec
out
xor
inc
movsb
je
test
outsb
mov
fwait
xchg
rcl
dec
inc
sbb
jle
jbe
mov
test
cltd
adc
popa
push
mov
in
or
dec
pop
jns
cmp
mov
inc
lods
imul
dec
lea
cmp
pop
adc
push
jns
or
cmc
adc
pop
lock
mov
sbb
jecxz
lds
jp
inc
jle
and
ret
out
xor
fimull
rcll
fs
repnz
xchg
mov
lahf
pop
push
mov
cli
pop
pop
rolb
movl
jo
hlt
mov
mov
sbb
jns
sub
mov
pop
pop
cwtl
sbb
nop
jno
lret
add
push
loopne
cwtl
sub
cmp
mov
push
aaa
icebp
jg
sbb
dec
adc
jmp
dec
or
xchg
popa
imul
push
loop
jbe
inc
rcrl
sbb
xchg
adc
lock
fs
jecxz
pusha
hlt
sub
pop
jno
sub
push
test
sub
pop
stos
ret
scas
pusha
mov
int
cwtl
sti
xchg
jae
cmpsb
mov
jl
cmp
sbb
into
sbb
int3
cmpsl
js
inc
push
pop
mov
outsl
sub
lock
stc
xchg
cmp
xlat
pop
push
lret
cmpsl
sbb
maskmovq
rclb
test
orb
popf
mov
adc
test
xchg
icebp
nop
movsl
jbe
and
movl
into
adc
sbb
outsl
cmp
cmp
push
mov
lea
mov
jp
dec
pop
enter
rcll
inc
loopne
and
and
push
jae
push
push
sub
push
jb
cmp
jg
ror
cmp
mov
mov
inc
or
aas
cwtl
fucom
loope
ss
rcll
notb
jbe
dec
loopne
or
mov
lahf
cmpsl
repnz
sbb
outsb
out
push
leave
repnz
mov
mov
mov
push
cmp
psraw
sub
imul
inc
loope
push
and
mov
scas
lret
out
and
push
push
dec
sti
sbb
inc
popf
dec
ja
cltd
pop
and
scas
ja
push
adc
pushf
adc
lcall
xor
cmp
data16
aam
ret
sub
cld
push
into
and
xchg
movups
scas
pop
sbbl
xor
call
rcl
adc
test
dec
adc
mov
es
jb
mov
mov
mov
in
mov
outsb
mulb
clc
and
pop
xchg
mov
cmp
and
fs
fisubl
xchg
adc
or
jns
seta
imulb
mov
mov
fisttps
lods
inc
js
dec
aad
jns
mov
xlat
sbb
and
cld
adc
loop
push
leave
push
mov
add
fs
fucom
push
jno
sbb
push
dec
lods
adc
popf
mov
inc
scas
leave
adc
and
clc
imul
xchg
jno
lret
inc
jne
jge
mov
mulb
inc
adc
sub
dec
out
cmp
cmp
stos
cmp
sub
mov
fwait
scas
xchg
lds
sbb
out
push
mov
dec
fdivrs
js
cmp
inc
xor
fistpl
adc
push
and
add
xlat
lea
hlt
pop
imul
or
stos
aam
mov
sub
cmc
cltd
call
jne
inc
lcall
xchg
test
sub
or
out
je
inc
fldt
mov
sbb
add
jmp
fadds
pushl
add
outsl
xchg
push
pop
mov
sub
popf
pop
incl
dec
add
jae
jmp
jns
mov
pop
insb
jl
out
add
test
cs
je
ds
repz
gs
inc
rorl
ret
xor
shll
jnp
jb
daa
shlb
in
sub
dec
push
jno
test
or
jb
fs
dec
rcr
inc
or
add
xchg
push
enter
imul
out
xchg
sbb
sub
and
mov
xlat
xor
cmp
int3
mov
jo
jmp
mov
xor
or
xchg
outsl
mov
pop
mov
rolb
mov
test
jecxz
xchg
mov
cmc
lret
gs
enter
jae
ret
push
test
bound
adc
nop
xchg
lods
or
repnz
jp
fs
cmp
aaa
add
test
xor
push
in
cwtl
mov
movsl
ret
outsl
mov
pop
pop
or
aas
adc
pop
enter
adc
and
add
enter
add
enter
rcrb
idivl
imul
call
xchg
imul
mov
insl
push
lahf
xchg
dec
loopew
inc
out
dec
sbb
jg
loope
cs
mov
nop
jp
cmpsl
push
lret
setne
rolb
into
data16
mov
fcoml
aam
inc
inc
test
mov
mov
ret
idivb
mov
leave
jge
or
scas
pusha
addr16
test
sub
loopne
insb
stos
shrb
mov
dec
push
adc
adc
fsubrp
sahf
repz
sub
je
js,pt
or
out
dec
cmpsb
dec
cs
xchg
les
and
mov
mov
stos
cmc
imul
out
jle
mov
push
adc
inc
insb
jmp
inc
xchg
jecxz
out
pop
ds
sub
movl
orb
push
or
add
pusha
shll
sbb
fistl
cmp
decb
inc
sti
dec
inc
in
mov
push
ds
jle
lds
sub
cmpl
mov
inc
insl
js
push
loop
xor
repz
fdivs
push
push
sub
mov
repz
mov
xchg
or
xchg
cli
push
sub
pushf
pop
jmp
dec
mov
mov
xor
mov
jne
popf
and
rolb
cmc
push
lea
enter
and
sbbb
pop
jl
sahf
dec
sub
stos
mulb
stos
sub
int
out
movsb
adc
push
push
mov
ficoml
mov
or
mov
std
aam
aad
push
jmp
sbb
push
adc
xchg
int3
xchg
lret
inc
cwtl
nop
adc
and
xor
sub
inc
in
pusha
adc
adc
lahf
add
sub
repnz
cmpsl
sbbb
xor
jns
outsb
xchg
mov
dec
lret
mov
sub
xlat
pop
lret
imul
xor
arpl
loope
stos
mov
and
cld
xchg
iret
jnp
test
xchg
mov
call
andb
call
imul
jbe
stos
fnstenv
fwait
js
push
mov
xchg
inc
pop
js
stc
xchg
clc
pusha
cmpsl
xlat
insb
or
pusha
or
inc
inc
loopne
add
out
sbb
ss
inc
test
xor
call
and
aad
stos
lcall
lds
sub
test
nop
mov
xchg
sbb
imul
adc
pop
or
mov
pop
gs
fwait
or
add
xor
add
xchg
jo
aas
push
xchg
into
dec
popf
movsb
cli
ficompl
test
neg
test
mov
scas
or
jne
outsl
cmp
pop
ja
adc
icebp
add
or
aaa
push
jmp
in
scas
inc
je
out
shrl
and
pop
inc
jmp
pop
xor
mov
popa
mov
jmp
or
or
push
test
lds
adc
add
or
daa
dec
scas
and
add
int3
push
filds
sbbl
sub
dec
cmpsb
mov
daa
dec
push
xchg
jp
inc
cmp
dec
pushf
mov
movsl
fs
jae
sub
pusha
jo
push
imul
cwtl
leave
rcrb
dec
leave
xchg
sub
add
mov
js
pop
fcomps
push
push
mov
orb
pop
jge,pt
lods
mov
push
test
pop
inc
cmp
fnstsw
jge
pop
fcoml
or
pop
icebp
popf
fwait
test
sub
loopne
pop
mov
dec
adcb
jne
sbb
pop
mov
lock
rcrl
fwait
inc
xchg
jecxz
adc
roll
mov
orb
mov
stc
cwtl
out
mov
pop
pop
add
divl
shll
or
push
fbstp
mov
std
xchg
adc
ds
outsb
jne
fisubs
and
cmp
gs
in
lods
pop
subl
out
jae
mov
xor
inc
add
loopne
add
push
xor
jno
fbld
pop
pop
lret
mov
push
mov
jl
stos
scas
loop
sub
mov
cwtl
jo
lods
mov
jmp
cwtl
out
sub
sahf
lods
lret
mov
pop
ret
or
or
mov
sbb
jecxz
mov
mov
clc
push
jno
fidivl
pop
out
xadd
test
adc
dec
into
ror
iret
fwait
jb
movsl
test
daa
es
cwtl
dec
std
pop
xchg
addr16
cmp
test
mov
enter
nop
dec
mov
adc
sbb
test
imul
dec
and
xchg
fidivrl
stos
push
cmp
mul
ljmp
into
in
jl
out
sub
mov
bound
cltd
scas
scas
mov
or
rep
fwait
pop
adcl
inc
daa
js
stos
xchg
lret
cmp
je
adc
loope
inc
adc
out
inc
lret
shlb
mov
sub
xchg
mov
imul
adc
or
popf
jge
pop
adc
sub
inc
push
xchg
shl
addr16
xchg
ret
stos
das
rcl
daa
fwait
mov
das
xor
mov
push
lret
je
xlat
jmp
xor
jo
jp
xchg
add
adc
adc
sbb
daa
int
scas
pusha
or
aad
inc
jge
out
scas
lods
add
dec
pop
push
mov
sub
ret
cs
sub
pop
fsubs
loop
pusha
and
xor
aas
push
jmp
scas
dec
jno
ja
sub
or
sub
jne
adc
repz
adc
inc
insl
aam
jno
fs
pop
cmpxchg
pop
aad
xchg
je
xchg
cmp
cmpsb
sbb
xor
jb
movaps
in
jns
jmp
std
jno
in
mov
mov
jbe
adc
and
add
push
push
lahf
repz
cmp
pop
sbbl
mov
cmpsb
jmp
xchg
negl
push
hlt
outsb
pop
sti
cmp
repnz
in
insb
cmpsb
dec
fidivrs
push
lret
les
push
and
ljmp
adc
mov
mov
xchg
ret
repz
lahf
pop
arpl
jae
jp
neg
insl
fs
loop
xchg
int3
cmc
pop
ret
xchg
arpl
inc
fdivrl
or
inc
jae
jnp
lahf
pop
ljmp
inc
adcl
pop
inc
adc
sub
add
das
outsl
inc
mov
dec
push
mov
or
loopne
mov
cmp
pop
push
icebp
add
mov
push
mov
mov
add
sub
and
xchg
stos
inc
loopne
sub
sub
pusha
push
fs
pusha
sbb
jo
adc
out
into
mov
xchg
sub
adc
cmpl
pop
inc
mov
popf
mov
mov
add
fsubs
pop
pop
or
lods
lds
inc
rolb
push
mov
aas
push
sub
xchg
test
test
push
negb
pushf
gs
dec
mov
aam
sbb
pop
in
jle
jecxz
sub
fs
inc
jecxz,pn
out
out
rcl
lock
movsb
jge
inc
lahf
int
push
cmpsb
or
xchg
clc
das
mov
shll
hlt
inc
iret
mull
daa
pop
mov
pop
or
dec
xchg
lds
jne
xchg
ss
or
push
xchg
pop
in
add
lds
icebp
fs
fwait
mov
das
mov
fsubrl
sub
xchg
stos
imul
mov
cli
movsb
jge
es
sub
jle
mov
mov
cld
pop
les
xchg
inc
pushf
mov
lods
stc
stc
xchg
dec
xlat
sub
repnz
pop
fists
mov
mov
les
add
cltd
jns
dec
pop
insl
imul
mov
hlt
in
sahf
aad
test
out
xchg
add
scas
jnp
out
cli
sbb
jnp
sub
mov
dec
cli
aam
push
jbe
imul
adc
test
sub
jle
dec
pusha
pcmpeqd
sti
jg
or
jbe
outsb
adc
imul
cmp
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
call
xchg
jno
push
inc
pushf
xchg
mov
sub
mov
xor
fdivs
das
cmpsb
pop
mov
vpsubd
aas
lods
pop
aad
out
or
or
repz
mov
and
rorb
or
pop
jo
mov
and
orl
out
sub
mov
or
or
mov
test
arpl
lret
dec
cmpsl
das
sarb
adc
cmpsl
dec
adc
fdivrs
aad
repnz
fnstsw
mov
mov
jnp
aam
lcall
adc
mov
jge
push
jae
add
enter
mov
pop
jl
inc
fs
sti
sub
inc
cmpsb
jno
sub
jnp
rcrb
in
std
imul
int
stos
or
push
dec
imul
pop
lods
lcall
inc
xchg
dec
loop
hlt
retw
xlat
out
dec
mov
jns
inc
lods
jo
pusha
test
fstps
pop
out
out
rcrl
cs
bound
enter
cmp
test
sbb
mov
adc
xchg
int3
adcl
flds
repz
fldl2e
test
fistl
sub
mov
jecxz
out
and
pushf
out
cmpsb
lret
jnp
xchg
mov
lret
mov
cltd
sti
mov
cmp
test
lock
pop
lret
fisubs
xlat
pop
jne
adc
dec
and
mov
stos
sbb
jecxz
push
xchg
test
mov
sahf
stc
push
fists
test
xchg
pop
xor
cmp
les
rcrl
sbb
cs
dec
add
xor
mov
out
fsin
jg
pop
outsl
push
and
popa
cwtl
popl
lahf
andl
fldenv
xchg
or
lods
mov
and
adc
sub
add
inc
inc
push
xor
mov
add
push
or
pop
mov
fwait
call
and
or
adc
mov
push
lea
fstpt
vpaddusw
push
pop
insb
adc
xchg
clc
pop
pcmpeqd
test
decb
clc
sub
adc
movzbl
sbb
push
sarb
push
imul
loop
and
push
into
mov
mov
jge
fsubrs
and
std
js
btc
incl
leave
jle
fidivs
jl
fmuls
insb
add
xor
xchg
add
pop
arpl
cli
out
push
dec
sti
lcall
adc
push
jecxz
push
mov
sar
pop
xor
cwtl
cmp
stos
lahf
or
cmp
sahf
icebp
push
addl
cmpsl
mov
push
xchg
filds
xchg
lock
pushf
shlb
mov
lahf
pusha
lahf
cmp
test
imul
ret
add
daa
mov
mov
orb
adc
dec
subb
jno
xor
movsb
add
fdivrs
cmp
add
fcmove
and
ss
sub
repnz
fcomps
and
cli
nop
stos
aaa
mov
jno
push
movsl
sti
int3
sti
shld
andl
pop
pop
dec
lea
popf
out
mov
insb
xchg
jg
aas
or
xchg
xchg
or
adc
test
repnz
pop
call
out
roll
cmp
pop
imul
mov
and
xchg
fdivl
subl
jp
lahf
lret
mov
xor
mov
stos
add
jl
jbe
mov
inc
mov
and
mov
jbe
add
add
mov
pop
jmp
int
cld
mov
inc
sbb
nop
ret
lock
xorb
mov
sbb
ret
insl
jns
add
lods
addr16
test
mov
jbe
push
dec
or
jae
out
and
cli
mov
jns
stos
lods
jmp
rclb
loop
aad
addr16
and
movsb
jl
dec
pop
mov
mov
dec
or
sbb
dec
jmp
sub
jb
sahf
leave
imul
push
adc
push
pop
rorl
cmc
fcom
push
repz
fistpll
and
ret
inc
pcmpeqw
and
bound
add
mov
inc
sbb
sbb
push
or
or
cld
mov
imul
clc
adc
jb
sbb
mov
sbb
pushf
and
mov
dec
int3
ja
movsl
inc
dec
sbb
lds
jae
adc
push
stos
sar
dec
int3
aad
push
sbb
jge
add
sub
inc
mov
dec
shrb
add
stc
sahf
dec
ss
out
jge
lods
pop
clc
jnp
pop
clc
mov
cli
sarb
and
push
lea
sub
stos
pop
jns
mov
mov
shll
lea
push
add
stos
repnz
fs
cmp
mov
in
arpl
sahf
fucomip
xchg
add
ficompl
pop
push
mov
movsb
insl
in
sar
sti
push
mov
mov
push
adc
or
outsl
xchg
clc
push
lods
or
out
inc
test
std
insl
adc
stos
pop
adc
loope
mov
mov
or
push
pop
dec
bound
mov
lahf
aam
stos
insb
pop
pop
pusha
divl
enter
stos
xlat
sub
sti
jnp
mov
add
sbb
pop
hlt
jb
jecxz
add
and
push
test
push
je
pop
adc
push
lds
mov
pop
pushf
xor
xchg
sub
subl
push
outsb
xchg
inc
arpl
xchg
mov
xchg
inc
pop
movsl
cmp
or
dec
loopne
in
in
cmpsb
push
mov
mov
repz
inc
imull
in
xor
mov
adc
dec
mov
out
adc
lahf
clc
sub
ret
cmp
pop
insl
adc
or
push
fisttps
stos
into
lcall
cli
loop
inc
in
inc
sbb
stos
jg
popa
shrl
loopne
imul
mov
jnp
jle
lds
lret
dec
pusha
insb
stc
inc
dec
sub
fcomi
adc
jp
sub
xor
sar
fcoml
inc
daa
xchg
push
jl
outsb
popa
xor
pushf
push
sub
adc
pop
cli
and
arpl
orl
push
pop
add
ljmp
mov
mov
mov
mov
sub
fnsave
add
cs
int
fcmovnb
arpl
and
adc
movsl
ret
xchg
pop
dec
ss
mov
sub
sbb
fsubl
sub
test
addb
cmp
push
loopne
mov
dec
push
enter
aam
add
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
push
into
xchg
jbe
jno
dec
and
das
xchg
xchg
data16
mov
sti
mov
cmp
sti
fpatan
fbld
shll
rcrl
mov
les
mov
lods
push
stos
inc
hlt
outsl
nop
je
daa
pop
cmp
or
jo
xchg
int
xor
arpl
lock
adcb
inc
js
mov
jecxz
lret
jl
fdivrl
cmp
adc
lds
fists
sub
sbb
and
movsb
adc
adc
mov
fcom
es
xor
cwtl
ljmp
push
inc
enter
xor
xchg
jle
sub
add
jmp
daa
push
in
jge
dec
outsl
xchg
inc
les
and
test
scas
mov
mov
add
pop
xlat
mov
call
inc
add
in
xor
popf
push
push
inc
mov
jp
pop
push
mov
fdivrs
cmpsb
add
test
cmpsl
decb
fildll
movsb
push
mov
or
fidivs
test
pop
add
ja
fdivl
das
add
cmp
push
imul
in
icebp
xor
js
mov
add
fcomps
add
cltd
mov
xor
mov
cwtl
dec
es
outsb
or
fs
movsl
in
mov
xchg
sub
cmp
test
aad
jp
inc
mov
das
mov
fsub
iret
pop
adc
lock
adc
jecxz
xlat
push
imul
inc
xchg
dec
cwtl
repz
scas
push
pop
push
daa
loop
sub
lock
pop
xor
loopne
fnstsw
sbbl
fdivrl
jo
hlt
cmp
mov
addr16
dec
xchg
mov
aad
inc
mov
mov
das
sti
mov
icebp
in
adc
mov
popa
cld
lcall
or
int3
mov
add
loope
insl
xlat
jbe
movsl
lcall
ret
jge
inc
mov
cltd
xor
xlat
pushf
loope
int
sub
mov
lds
pop
dec
and
adc
push
loope
shll
sbb
std
insl
addr16
lfs
shrb
out
pop
xchg
add
in
shlb
pop
iret
lods
lret
insl
dec
into
dec
shr
mov
jbe
stc
popf
daa
int3
cmp
xchg
loope
daa
ret
pop
inc
sub
lret
or
xor
mov
loopne
jne
mov
xchg
stos
push
testl
sarl
and
pop
testb
outsl
jp
and
leave
dec
cmc
pop
inc
out
stc
dec
jg
packssdw
aam
sbb
pop
into
scas
xor
mov
inc
adc
les
add
sub
jle
scas
orl
ret
pop
icebp
cmpsb
cmp
dec
adc
call
hlt
mov
jle
sub
test
loopne
cli
mov
inc
mov
insl
or
jo
cld
add
dec
daa
xor
cld
or
xlat
stos
sub
leave
and
sub
inc
mov
adc
cmp
inc
inc
inc
out
lret
int3
xchg
cmp
and
ret
or
int
cmp
jo
xchg
and
mov
xchg
adc
pop
out
shlb
push
sahf
mov
dec
mov
sbb
cwtl
sub
fdivp
insb
lods
inc
mov
movsb
cwtl
fnstcw
cli
sbbl
popf
mov
leave
inc
sub
sbb
jl
jmp
jmp
push
sub
adc
sub
inc
fucom
adc
sbbl
push
leave
outsb
mov
inc
imul
dec
xchg
sarl
shl
shl
sub
xchg
and
fisubl
pusha
sbb
lods
mov
out
pop
shll
sbb
mov
push
push
aam
lahf
dec
cmp
and
imul
jb
js
lds
cli
push
repnz
cmp
mov
and
out
inc
mov
mov
popa
insb
jmp
mov
ret
gs
or
dec
lods
push
jns
arpl
aas
add
xchg
rcr
popf
push
imul
daa
sti
test
push
std
add
or
mov
cmp
adc
incl
in
mov
add
dec
dec
sub
or
stc
add
popa
add
ret
jmp
ret
add
mov
push
dec
rcll
push
sub
push
xor
in
xchg
sahf
in
push
and
out
mov
jb
sets
in
ja
daa
shl
subl
icebp
in
push
and
xchg
sbb
dec
scas
in
cld
call
push
inc
add
dec
and
es
lods
xchg
jbe
mov
xchg
repnz
lcall
outsb
je
pusha
daa
popf
shlb
mov
cmp
insl
loop
inc
sbb
mov
add
leave
add
xlat
int3
rcll
cltd
xor
pop
fwait
mov
ret
mov
push
sbb
shrl
imul
xor
jb
pop
cmc
mov
aas
cmp
test
lods
mov
fidivrs
inc
movsb
rcrb
rorb
cmpb
push
jo
jmp
int
mov
lock
jge
iret
and
test
dec
xchg
add
pop
jae
leave
mov
mov
xlat
test
hlt
pushw
xlat
mov
push
cld
sbb
popa
insb
mov
dec
dec
lock
out
dec
hlt
mov
test
rep
cmp
jle
in
cmpb
cltd
shl
rol
aam
in
ret
xor
add
das
stos
or
ljmp
jne
ljmp
jecxz
scas
dec
push
lret
sahf
xchg
cmpsb
into
out
sbb
outsl
aaa
cltd
lret
mov
push
lock
adc
ffreep
push
loop
clc
xchg
add
cmp
les
scas
jmp
add
jne
push
or
sbb
loopne
push
push
les
aam
or
in
mov
xchg
mov
add
xchg
lret
sbbb
cmp
orl
clc
xchg
push
mov
bound
or
cmp
rorb
rcrl
mov
mov
sbbb
dec
movsb
inc
aad
or
jo
repnz
clc
jnp
jno
jmp
inc
mov
outsl
test
lock
outsl
fldpi
sub
fs
sbb
inc
dec
adc
inc
sarb
jne
and
or
jp
sub
push
cmp
xchg
lods
imul
dec
mov
mov
sbb
sbb
inc
adc
mov
das
adc
sarb
sarb
shlb
lahf
out
jle
lods
psadbw
jg
or
addr16
push
mov
pop
not
cmpsb
in
xchg
pusha
and
dec
push
in
pusha
aam
add
jne
mov
pop
xor
loop
mov
bound
addr16
adc
dec
push
dec
inc
xchg
xchg
and
clc
and
stos
movsb
fdivrl
or
add
imul
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
dec
add
jno
ljmp
test
lods
out
xchg
jle
mov
xchg
inc
lods
cli
stos
movsbl
fisubrl
cmp
mov
inc
sbb
outsl
int
arpl
dec
in
cmpsb
lcall
nop
jle
inc
mov
mov
ljmp
ljmp
adc
aaa
sbb
dec
outsb
sahf
mov
jno
mov
popa
lods
xchg
push
dec
cmp
push
sahf
out
stc
mov
cmpsb
shl
mov
dec
shll
fld
sbb
out
push
mov
sub
sbb
stos
out
enter
ss
push
jl
std
daa
repnz
mov
bound
andb
inc
jle
lahf
pop
push
movsb
inc
jno
fs
and
xchg
xchg
xor
inc
or
testl
lds
mov
jmp
stos
jae
hlt
push
fsub
jnp
inc
lahf
jae
cmp
pop
jp
sub
mov
cmc
notb
iret
dec
push
and
mov
ja
fwait
add
pushf
pop
mov
xor
pop
push
add
xchg
push
add
popa
jbe
push
ljmp
aad
pop
nop
dec
repz
lods
jp
lods
adc
xchg
inc
ret
push
lahf
sub
cmp
jne
enter
jg
push
inc
out
jp
dec
mov
cmpsb
jbe
jp
imul
nop
cmc
scas
scas
data16
mov
fistps
adcb
iret
jno
mov
rcr
inc
popa
push
add
int3
sbb
bound
push
cli
test
pop
jne
pop
mov
mov
mov
adc
lods
xchg
cmp
mov
mov
loope
clc
mov
mov
and
leave
nop
push
push
pusha
mov
addr16
insb
pop
add
push
mov
sub
jl
insb
imul
daa
dec
lods
in
push
stos
cmp
mov
add
in
xchg
jmp
movsl
shl
scas
push
jns
jecxz
sbb
cmpsl
sub
mov
test
cmp
mov
rorb
lea
outsl
pop
sub
jb
mov
fimuls
dec
das
sub
loopne
mov
sahf
or
sahf
mov
dec
insl
cmp
out
and
lods
pop
outsl
mov
xlat
mov
or
push
pop
and
movb
pop
inc
popf
lcall
xor
dec
or
insb
fdivs
mov
dec
xchg
pop
xchg
push
ds
dec
dec
pop
hlt
aad
loopne
bound
inc
dec
or
pop
inc
dec
mov
test
add
xchg
mov
ret
or
cmp
push
cwtl
push
or
loopne
ljmp
mov
xchg
or
loope
leave
jnp
lret
pop
adc
jmp
or
or
roll
xor
adc
add
push
sbb
or
mov
sub
sub
dec
pusha
dec
inc
jb
mov
sub
je
pop
add
fcmovbe
xor
jbe
sti
dec
movsl
repnz
int
and
jb
sub
data16
hlt
xor
and
add
cld
push
push
mov
jnp
lds
push
insb
cwtl
out
add
out
xchg
xchg
fisttpll
cmp
pop
xchg
shll
jbe
mov
icebp
mov
movsb
mov
and
popa
lahf
jge
xchg
scas
jl
mov
dec
xchg
inc
ret
jle
into
xchg
loop
imul
lds
lods
jns
ds
test
cmp
inc
mov
dec
push
rcl
icebp
mov
xchg
hlt
sbb
aaa
ficomps
mov
push
mov
out
and
out
mov
jae
mov
mov
sahf
add
xchg
pusha
jp
sub
loop
add
lods
std
fsubs
mov
test
dec
xchg
lcall
pusha
push
adc
into
inc
adc
mov
pop
shl
cmp
stos
xor
add
sar
xchg
mov
pop
shlb
and
jmp
mov
ret
les
lcall
in
or
negb
repnz
mov
popf
xchg
adc
orb
xor
sub
fidivl
xor
inc
mov
xor
add
lock
jnp
iret
xchg
data16
hlt
test
ret
movsl
lahf
xchg
bound
xchg
cmp
popa
pop
xorb
cmpsb
xchg
in
fucomi
call
push
dec
mov
mov
xor
or
adc
les
out
sbb
ds
mov
aam
dec
xor
fsubs
jo
sbb
notb
dec
lcall
cmpsl
sub
xor
xchg
pushf
je
or
push
mov
lcall
bnd
sbb
std
test
xor
jecxz
push
and
fmuls
and
pop
pop
cmp
pop
mov
mov
or
or
out
dec
enter
pop
xchg
add
es
sub
xor
mov
in
or
scas
sti
es
dec
and
ret
iret
popf
hlt
into
out
les
xchg
mov
cmp
mov
scas
or
cltd
mov
jmp
andb
mov
mov
jge
in
ret
push
jbe
int3
out
xchg
iret
cli
mov
sbb
xchg
hlt
cmp
push
hlt
sbb
sub
sub
xor
dec
pusha
lock
add
test
mov
jnp
cwtl
scas
hlt
mov
lock
mov
notl
adc
jno
movsb
and
stos
sbb
daa
inc
inc
xchg
xor
into
es
enter
dec
lock
pop
and
sbb
pop
pushf
xor
lea
sub
adcl
or
push
cmp
xchg
mov
imul
lahf
adc
push
decl
das
incl
in
loope
adc
xchg
dec
inc
push
xchg
int
mov
xor
mov
aad
mov
mov
pop
dec
or
jns
adc
arpl
mov
movsl
jge
ret
mov
fnstsw
xor
pop
inc
and
sbb
add
loopne
movsl
sub
cmp
and
out
or
dec
fnstcw
ret
je
and
js
jge
xchg
mov
mov
sbb
fwait
xchg
sub
cmp
xchg
or
sbb
push
pop
mov
dec
test
push
sub
int
add
jns
xchg
jns
out
fnsave
adc
fldcw
out
outsb
iret
addb
clc
push
out
cmp
mov
test
fstpl
hlt
pop
xor
iret
inc
stos
xor
cmpsb
stc
inc
ljmp
daa
mov
call
pop
mov
sub
sbb
loopne
imul
xchg
shl
push
pop
and
int
shlb
sbb
dec
int
les
or
pop
push
cld
sub
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
sub
add
add
cs
inc
sbb
negl
mov
pop
inc
jmp
dec
pop
push
repz
or
mov
push
int3
cltd
fimull
pop
mov
cltd
jp
sbb
cmp
sbb
insl
popf
push
loope
pop
sub
insb
stos
sbb
push
insl
cld
xchg
push
psubusb
and
sbb
mov
cltd
mov
xchg
sarb
push
adc
inc
es
add
mov
jecxz
dec
mov
scas
shrl
sahf
and
mov
cmc
das
addl
mov
pop
push
push
mov
das
xchg
dec
notb
hlt
add
mov
jmp
jbe
xchg
jmp
movsb
outsb
fiaddl
nop
lcall
adc
mov
daa
int3
jnp
push
cltd
aad
outsl
adc
sbb
sbb
xchg
or
mov
pop
cmp
adc
cli
pusha
mov
jmp
call
cmp
inc
ss
into
or
push
jnp
cs
xchg
push
and
sbb
dec
or
inc
mov
or
cmpsb
ss
or
repnz
iret
pop
arpl
subl
ja
and
push
adc
test
ficomps
jge
sub
mov
push
push
cld
ret
add
lods
inc
pop
fimuls
sub
push
stos
pop
bnd
in
and
xchg
and
movsl
and
lock
daa
mov
loop
add
jo
stc
mov
js
push
xchg
rolb
xchg
add
mov
dec
popf
mov
inc
aaa
aas
adc
ret
insb
nop
mov
and
push
sti
ret
cld
and
pop
adc
mov
test
jbe
mov
lret
outsb
imul
sbb
push
push
aaa
test
sbb
sub
mov
js
and
mov
sub
fucomi
daa
ds
adc
mov
mov
ds
jae
gs
xor
xchg
shll
rclb
jecxz
movsb
push
cmp
addr16
sub
int3
mov
inc
dec
scas
enter
mov
or
jnp,pt
adc
popa
insb
leavew
lahf
push
mov
repz
sbbl
xchg
add
inc
add
addl
dec
push
inc
pop
add
adc
mov
sbb
sub
movsl
push
inc
sti
sbb
fisubs
jp
dec
lods
loopne
or
and
sbb
mov
fsubrs
fisttpl
jns
int
repnz
inc
movsl
ss
loope
cmp
pop
jns
int
nop
pop
sbb
test
test
mull
pushf
push
push
in
mov
adc
pop
fldenv
hlt
mov
push
iret
sub
and
lods
jl
push
lea
xor
int3
stc
sbb
clc
xchg
dec
push
inc
cld
aaa
jl
mov
ret
cmp
out
push
mov
je
cli
sub
inc
cmpsl
dec
stc
cs
out
aad
push
jecxz
push
dec
xchg
inc
out
cwtl
adc
fsubrl
int
into
cltd
dec
dec
jbe
gs
push
mov
adc
imul
dec
jmp
cmp
ret
inc
fld
flds
jnp
jp
pop
and
jmp
clc
inc
int3
mov
adc
leave
les
scas
call
xchg
xor
outsl
xchg
mov
mov
dec
mov
sar
pushf
inc
push
cmp
push
andb
ss
adc
xchg
js
ret
iret
mov
xchg
mov
jo
loopne
out
push
mulb
shl
icebp
mov
xchg
fcoms
mov
xor
mov
test
mov
stos
and
sti
cli
cmp
sbb
fistl
push
loopne
jbe
lods
imul
mov
cmp
sub
jnp
frstor
cmp
jp
mov
dec
cmp
cmpsl
xor
pushf
cmp
jo
mov
mov
fnstcw
test
xchg
loopne
mov
sbb
adc
adc
adcb
repnz
push
fistpl
sbb
inc
repz
clc
mov
out
adc
incl
mov
push
inc
jp
stos
roll
insb
adc
or
lret
pop
jnp
repnz
adc
mov
aaa
and
loop
pushl
xor
subb
cmp
pop
jmp
dec
out
or
pushf
out
pop
repnz
jmp
xor
negl
jbe
fs
repnz
or
and
push
xchg
or
js
adc
imulb
imul
jno
jbe
das
and
sbb
jno
sub
and
and
sbb
inc
lds
fxam
cmp
test
add
int
mov
cmpsl
int3
push
or
xchg
cltd
inc
arpl
movsl
lock
adc
sub
xor
sbb
pop
xor
cmp
cmp
jg
mov
mov
add
lock
ds
popa
mov
jge
shll
push
and
movsl
mull
bound
cmpsl
mov
aad
or
fimull
add
xchg
push
test
push
pop
loopne
inc
call
mov
mov
mov
mov
cld
aam
std
ds
loope
mov
dec
dec
add
inc
ret
add
push
loope
cmp
fimull
outsl
hlt
rclb
xor
xor
jp
dec
mov
dec
or
psubsw
xchg
sti
aad
cld
lret
gs
cmpsb
mov
rclb
pushf
cmp
testb
incl
mov
inc
pop
sbb
scas
iret
enter
loope
sub
fwait
outsl
xor
sbb
cmp
ja
sbb
mov
mov
testl
mov
andb
push
std
stc
in
lret
sbb
movsb
adcl
adc
ret
fstps
sbb
mov
xchg
mov
arpl
pop
stos
mov
movsb
jp
dec
xchg
sub
fisttpl
psubusw
adc
add
aad
cmc
xor
nop
shl
jmp
loop
fidivrl
popf
out
ja
movsb
inc
mov
std
mov
aam
sbb
scas
clc
sarl
lods
xor
in
mov
cwtl
mov
pop
fs
and
aam
push
and
fxch
and
or
mov
iret
fidivs
cmp
scas
mov
and
testl
in
cmp
inc
xor
mov
sub
fiaddl
andb
sarb
in
sub
xchg
pop
pop
lea
fcoms
cmp
xor
xchg
cmc
push
fstpt
push
and
dec
mov
pop
and
movsl
adc
clc
outsb
das
out
adc
rolb
xchg
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
cli
insb
inc
xor
in
sarb
lahf
movsl
js
int3
xchg
mov
add
out
pop
dec
pop
aaa
lods
lret
cmp
sti
shlb
add
xor
mov
push
jnp
jns
jo
mov
sub
inc
push
sub
pop
sbb
fldt
into
aaa
add
push
sub
xor
stos
xor
ss
inc
pop
mov
mov
and
lret
popf
sahf
adc
imul
es
adc
sbb
test
pop
sub
dec
rcrb
adc
popa
mov
xchg
mov
aad
insl
in
push
gs
or
xchg
outsl
jg
sub
sti
jg
out
xor
lock
push
std
lods
out
or
adc
out
sbbl
outsl
mov
pop
lret
mov
and
adc
das
roll
cs
add
mov
pop
xchg
push
in
sub
adcl
test
and
fimuls
loope
orb
push
xlat
out
cmpsl
jns
lret
arpl
mov
sbb
push
rcrb
xor
loopne
test
sub
mov
mov
inc
add
xor
pop
pop
mov
fdivrl
daa
das
mov
in
cmc
mov
dec
imul
rol
sub
into
cmp
cmpl
lea
js
adc
pop
xchg
sub
mov
js
cmovnp
imul
test
xchg
xor
icebp
push
push
cli
jle
into
test
sub
aam
pop
xchg
add
dec
sub
popf
sbb
inc
in
leave
imul
xchg
push
lret
mov
mov
pop
andl
clc
inc
cli
test
xchg
or
or
shl
jmp
jmp
xchg
lcall
mov
xor
fdivrs
jne
dec
or
out
sub
out
sub
mov
out
pcmpeqb
jmp
sub
push
out
in
cvtps2pd
sub
jno
sub
xchg
push
pop
cmp
xchg
inc
es
mov
push
call
lret
imul
mov
jae
leave
xchg
insb
mov
pop
xchg
pop
mov
mov
enter
insb
cld
out
inc
outsb
clc
aam
add
xchg
fidivl
rolb
shl
sti
push
xor
fildll
test
aam
sti
lea
adc
sub
pop
adc
push
pop
mov
cli
jo
adc
inc
jl
mov
idivl
out
std
insl
jl
cmp
sub
test
cmp
and
xchg
pop
into
call
mov
pop
xchg
mulb
in
xchg
jo
dec
test
and
insl
sbb
pop
fdivp
mov
jns
ljmp
add
div
pop
add
daa
ja
inc
xor
mov
daa
in
repz
cs
mov
int3
mov
lret
jns
and
mov
cmc
lock
or
sbb
sahf
mov
js
in
adc
roll
xchg
cmpsl
xchg
pop
or
sbb
xchg
cltd
push
and
cmpsb
sub
mov
lea
mov
xchg
sbb
mov
movl
jg
push
cmp
pop
jg
push
push
fs
mov
xor
jle
mov
xchg
or
int
or
cmpsb
es
fisubl
jo
xor
inc
lds
ljmp
stos
std
xor
lret
in
cmp
push
sbb
das
scas
adc
mov
inc
out
xchg
or
inc
push
ljmp
ret
out
inc
xlat
mov
xor
jbe
pop
repnz
push
inc
push
cld
lods
clc
test
push
jno
or
sub
lods
cs
repz
and
cmp
dec
pop
xchg
sbb
icebp
in
xchg
nop
jl
adc
data16
mov
insl
mov
sub
mov
adc
aad
fmuls
test
mov
xchg
sbb
leave
les
gs
sub
repz
nop
add
mov
jo
hlt
pop
out
sbb
sbb
fisubrs
or
cmp
push
push
xchg
push
jg
pop
outsb
ret
mov
sub
iret
or
imul
jae
mov
pop
mov
inc
out
mov
or
andb
fnsave
leave
dec
pop
sbb
jns
mov
sub
mov
lret
push
cmpl
rorb
sbb
lret
lret
sub
or
filds
data16
ret
jg
mov
loopne
pop
push
mov
sbb
jle
mov
pop
xchg
sub
pop
cmp
inc
fstp
rclb
add
inc
push
pop
cmpsb
int3
in
inc
sahf
movsl
sti
into
lret
rcrl
push
adc
test
insb
or
adc
lds
fmull
xchg
fidivrl
cmc
sub
add
repnz
jecxz
outsb
dec
fidivs
xor
psrlw
inc
cmpsl
stos
ficoms
mov
dec
lods
aad
lods
mov
jne
mov
push
scas
cmp
lcall
int3
inc
into
pop
and
in
adcb
in
xor
cmp
mov
xor
lahf
std
pop
hlt
shll
sbb
push
nopl
xor
cmc
movsb
adc
xor
xor
push
js
mov
mov
aad
cmp
daa
adc
xor
ret
rolb
sbb
fimuls
stc
into
movsb
xchg
into
in
cmp
ret
mov
repz
addb
addr16
inc
cmc
add
rorb
mov
lcall
std
adc
popa
xchg
outsb
ret
test
dec
repz
and
xchg
inc
jecxz
dec
ret
dec
cmpl
aaa
sbb
fidivrs
push
jo
xchg
adc
and
and
lcall
psubsb
xchg
mov
dec
mov
fidivrl
mov
mov
mov
pusha
jo
pop
ja
mov
mov
mov
loop
aas
mov
jge
pop
ret
ljmp
or
popf
stc
rolb
mov
mov
fnstcw
pop
jmp
addb
mov
inc
add
or
loopne
xor
cmpl
icebp
pusha
movsb
lahf
and
bound
loopne
insb
imul
outsb
nop
pop
ret
aas
pop
mov
js
and
jl
push
popf
push
xchg
and
call
inc
shrl
ret
les
mov
popa
scas
insb
mov
mov
pop
nop
test
xchg
sub
dec
outsb
mov
mov
cmp
test
jae
mov
or
inc
bound
xchg
aam
enter
js
xchg
icebp
dec
int
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
xchg
push
loope
adc
addl
sarl
inc
aaa
imul
jge
loopne
popa
mov
out
out
mov
pop
dec
out
xchg
insb
out
sbb
int
mov
pop
test
mov
push
mov
xor
daa
loop
sti
imul
inc
loope
push
fidivs
push
ret
jle
cltd
jo
jp
dec
pop
std
fs
sub
jnp
or
push
dec
add
popa
into
clc
mov
cmp
pop
das
scas
push
stc
xlat
sub
pop
ror
cli
sub
lods
lock
jb
popa
gs
xchg
or
cmpsb
cmpsb
leave
push
test
sarb
lods
mov
fcoml
and
ficoms
ret
xor
mov
add
enter
inc
pop
lock
push
or
mov
lcall
aas
test
xchg
in
pop
jle
xor
and
mov
pushf
dec
movsl
add
dec
and
push
out
jo
movsl
inc
mov
and
out
repnz
icebp
rcll
ficoml
lahf
lret
jo
pop
stos
mov
fstpt
enter
gs
imul
fsincos
dec
in
xchg
out
fcmovu
add
cmp
jmp
movsl
mov
xor
jo
mov
and
roll
push
inc
aas
movsl
bound
jno
lds
pop
cmp
outsl
mov
fists
pop
xchg
cmp
arpl
push
jbe
mov
popf
inc
xor
jns
push
pop
ss
rorb
int3
ljmp
jl
jl
jg
jno
mov
xor
sub
jns
insl
mov
push
xchg
fdivrl
imul
loop
std
push
lods
xchg
push
sbb
testb
or
mov
test
test
mov
xlat
mov
adc
pop
mov
cmp
pop
push
cmp
clc
movsl
enter
inc
pushf
pop
xor
cmp
inc
sti
sbbb
jp
push
and
add
jle
cmp
ret
pushf
pusha
mov
imul
or
scas
decb
mov
push
in
lcall
pop
pop
gs
ret
xor
decb
add
and
lds
cmc
jl
sub
push
negl
cmc
mov
inc
std
fstpt
push
sbb
test
mov
rcll
shll
adc
xchg
out
not
push
xchg
scas
mov
ret
or
or
adc
gs
aam
mov
stc
loop
sbb
shrl
jg
ja
inc
jns
add
aam
adc
ss
movsb
adc
jo
mov
aaa
cltd
mov
sbb
sub
js
ret
and
push
jle
imulb
test
sbb
mov
fdivrl
or
cmc
xchg
fldt
out
add
mov
mov
xlat
inc
sbb
jmp
xchg
push
xor
stc
cmp
add
or
adc
iret
nop
clc
mov
mov
mov
and
sti
sub
aaa
and
shr
ret
scas
int3
inc
inc
jnp
fisubs
push
dec
cs
push
in
out
lret
lret
xor
sub
push
jo
adc
movsb
pop
call
mov
cld
das
dec
int3
push
rol
pop
push
subb
movsb
mov
sub
loope
sbb
test
dec
mov
push
inc
and
lods
jns
mov
addr16
cmp
pop
lcall
scas
ss
mov
jae
sar
add
int3
add
mov
insl
jne
roll
andl
adc
scas
gs
mov
stos
sub
mov
pushf
test
sahf
lock
cmp
nop
lock
fsubs
movb
push
jo,pn
inc
lock
in
jnp
sti
dec
jg
fs
test
in
lods
fstpl
in
push
pushaw
scas
pop
dec
cmp
mov
cltd
push
test
mov
roll
pop
dec
xchg
mov
mov
ljmp
push
xchg
sub
scas
jg
fidivrl
adc
jge
jno
cmpsb
ss
pop
adc
mov
adc
sti
mov
inc
xor
pop
std
push
sbb
rcll
xorl
test
ds
mov
std
lods
mov
pushf
es
and
int3
xor
adc
pop
pop
insb
aaa
inc
ljmp
movsb
push
mov
shll
pop
mov
mov
fdivrs
rcll
lods
in
jecxz
cmp
mov
roll
mov
and
scas
orl
xor
pop
popf
outsl
and
in
push
xchg
popa
push
dec
lahf
popa
pop
mov
sub
shr
test
clc
enter
inc
int
pop
fwait
lret
cmp
push
ljmp
or
push
in
xorb
pop
inc
movsl
xor
xor
xor
mov
adcl
stc
xor
mov
pop
imulb
in
cs
jb
mov
rcr
in
scas
leave
movsl
push
dec
loop
in
jbe
adc
jl
jns
loop
or
mov
addb
clc
int3
sbb
mov
push
jnp
repnz
fstpl
call
insb
jo
cmpsl
and
mov
adc
and
fdivrs
stc
in
cs
mov
repz
mov
pop
jge
bound
pop
lret
sbb
aas
rclb
jle
out
in
mov
shlb
in
push
out
xor
xor
imul
lods
push
pop
push
cmpsl
leave
cmp
mov
sub
testl
xchg
xor
adc
pop
jecxz
cmp
mov
add
fcmove
mov
aad
xor
push
push
pushf
add
ja
sub
mov
loopne
inc
mov
xor
out
test
rcr
pop
push
insb
push
xorl
jmp
jl
add
xchg
mov
cmc
or
pop
push
icebp
lret
push
push
and
outsb
dec
bound
xchg
xchg
call
sub
pop
cwtl
mov
faddl
jp
and
jns
cmp
dec
adc
xor
cmp
fidivrl
mov
pop
push
mov
aam
and
imul
shlb
insl
jg
jae
and
aaa
aad
subl
in
icebp
in
pop
dec
arpl
gs
xchg
push
cmp
mov
or
in
mov
sub
mov
shlb
cmp
ficoml
mov
sahf
shl
xor
test
and
fisubrs
pop
int3
pop
fiadds
and
xchg
pop
into
loope
stc
test
pop
into
dec
clc
mov
das
cmp
shll
xchg
aam
xchg
into
push
scas
out
es
jo
cmp
imul
adc
xchg
cmpl
out
inc
add
pop
add
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
xor
mov
sub
fsubrs
lahf
mov
cmp
sub
dec
pusha
addr16
push
xor
aad
fwait
or
push
cmp
jno
cld
mov
movsl
ss
xchg
rclb
cld
jnp
fmuls
lret
pop
ja
lea
jno
int3
lret
in
sub
bound
mov
lock
fsubrl
or
and
pop
stos
jle
jp
mov
inc
fimuls
adc
popa
push
int
push
mov
push
cmpl
pop
ja
push
add
mov
jge
xor
in
jp
sbb
ficompl
sbb
inc
rorb
inc
lcall
leave
outsl
aad
lcall
add
in
xor
cmp
jns
jge
fwait
stos
lds
lahf
sbb
in
leave
shll
aas
jge
inc
ljmp
call
mov
mov
dec
fistpll
sbb
into
scas
adc
cltd
xchg
hlt
std
mov
adc
std
ljmp
jecxz
mov
jae
lods
jge
and
push
mov
fdiv
test
and
inc
xor
addr16
xor
sbb
push
pop
fbstp
idiv
test
insb
stc
dec
cwtl
push
lock
mov
addl
and
mov
xchg
mov
xchg
scas
leave
or
or
incb
rorl
jcxz
into
into
jb
dec
lods
lahf
sub
pop
iret
aam
in
dec
sahf
jle
es
ds
adc
push
fisttpl
adc
dec
aas
sub
hlt
dec
sbb
cld
jae
push
xchg
inc
cmpb
in
les
cltd
xchg
cmp
xor
or
mulb
out
sub
fldcw
push
in
popa
inc
push
loopne
rclb
pop
lahf
adc
inc
lods
inc
imul
sbb
mov
loop
push
pop
jmp
sub
pop
dec
or
dec
mov
scas
sub
or
push
cmp
xlat
lcall
pop
negl
repz
sbb
mov
jne
xchg
xor
add
xchg
dec
fucompp
lahf
fistpl
adc
mov
repnz
cmp
outsb
sbb
shr
roll
dec
cmp
popf
xchg
push
inc
mov
pop
mov
inc
mov
movsb
push
pushf
push
scas
das
in
sahf
jbe
lods
ret
in
repnz
push
jp
mov
lcall
lret
inc
leave
arpl
sub
test
fdivl
add
sub
adc
xor
pop
xchg
arpl
lock
rolb
scas
iret
dec
inc
cmc
cwtl
sbb
icebp
xchg
jae
sbb
lea
xor
pushl
mov
pushf
or
add
lret
sar
out
adc
into
pop
sub
or
adc
and
and
push
loop
lods
xorb
lret
sub
push
adc
or
pop
aad
dec
jge
add
fildl
pushf
icebp
jae
rclb
ds
push
add
imulb
fcompl
aad
mov
and
ret
movsl
inc
jno
add
out
fisttpl
bound
mov
sbb
cltd
repz
xchg
int
xor
andl
mov
nop
inc
scas
aam
xchg
mov
into
push
leave
cld
adc
daa
sub
jno
xor
xor
daa
or
sbb
sti
stc
imul
xchg
jne
xor
les
movsl
and
sub
insb
repz
dec
jo
inc
dec
rcl
enter
lea
repz
push
popa
pop
nop
jbe
hlt
sub
cwtl
mov
rorl
std
dec
les
arpl
jns
add
in
scas
pop
push
xor
push
inc
icebp
stos
push
in
adc
inc
pop
aam
and
cmp
sbb
mov
and
xor
daa
out
loope
jp
dec
gs
test
fwait
jno
enter
loop
cs
pop
and
mov
mov
cmp
inc
jb
push
pop
das
imul
add
adc
notl
mov
jg
lret
mov
repz
call
push
je
scas
xor
bound
jmp
cmpsb
hlt
and
and
loopne
fsubrl
and
pop
cli
aam
out
jns
cmp
in
pop
adc
ds
pop
iret
xor
adc
rolb
arpl
hlt
subb
jp
jno
inc
inc
aas
and
loopne
ret
jle
stc
xchg
insb
cli
dec
nop
insb
pusha
pop
mov
aaa
in
lret
test
adc
les
and
push
fs
les
enter
stos
jnp
jne
stos
outsl
push
push
mov
lret
icebp
xor
mov
push
jp
int
cwtl
mov
xchg
jae
sub
roll
jb
pop
mov
adc
out
mov
icebp
imul
outsb
fwait
mov
xor
fwait
mov
xchg
bound
hlt
insb
lcall
out
inc
shrl
iret
das
xchg
sub
add
adc
cmpsb
mov
and
sbb
fisubrl
and
cmovge
arpl
pop
inc
and
sub
jp
lahf
in
fwait
aad
push
inc
adc
add
mov
sti
or
adc
and
and
push
mov
pop
push
push
jle
push
fwait
mov
dec
inc
push
pop
inc
cmpsb
popf
test
int3
lea
ljmp
popa
insb
cld
daa
rcl
sub
push
ds
and
enter
adc
xor
pushf
mov
mov
mov
dec
outsb
rclb
imul
jge
push
clc
out
cltd
addr16
add
mov
ret
stos
mov
js
es
adc
stos
lahf
nop
movb
mov
cmp
mov
ss
jg
mov
jge
push
pop
add
test
push
push
je
les
xor
and
dec
jge
stc
and
jmp
cmc
insl
ret
int
xor
pop
ja
push
sbb
push
xor
lret
dec
sbb
fxch
mov
add
test
push
jae
sbb
mov
enter
cltd
je
cmp
xor
cltd
fdivrp
fidivs
xchg
fisubs
jp
jns
movsb
pop
dec
add
xlat
sbb
outsl
mov
xchg
lock
mov
xchg
shlb
out
lds
pop
mov
jae
sbb
sub
aad
xor
std
inc
sub
mov
mov
mov
test
call
inc
nop
xchg
nop
int3
jge
xor
sbb
and
mov
jp
stc
aad
xor
arpl
daa
xorl
cltd
inc
cmp
std
aam
gs
xchg
lret
and
cmp
sbb
or
cmpl
dec
mov
jno
lcall
and
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
addr16
scas
adc
jno
addr16
mov
xchg
mov
cwtd
push
jbe
jmp
pop
or
xor
fiadds
in
mov
out
dec
pop
pop
dec
lea
xchg
cs
xchg
mov
int
movsl
les
jo
lods
movsl
stc
pop
cmp
push
int3
jecxz
loop
cmp
xor
test
das
push
jmp
cmp
lret
push
cmp
sbb
mov
orb
add
sbb
addr16
jb
dec
sahf
mov
mov
cwtl
and
movsl
or
dec
xchg
in
cmpsl
mov
ds
inc
and
pop
loopne
fsubrl
push
sbb
clc
cmpsl
loope
lea
and
pop
xor
push
cs
das
xchg
sub
jg
lret
popa
gs
jae,pn
mov
ljmp
and
neg
fnstsw
daa
mov
mov
jp
test
dec
clc
xchg
mov
scas
arpl
mov
sti
jecxz
and
enter
pop
or
mov
xor
jge
xor
dec
bound
popf
fcomi
test
or
bound
add
pusha
nop
jg
stc
in
mov
outsb
leave
adc
sbb
ja
rcl
rol
out
mov
add
xor
aam
incb
jb
je
dec
mov
adc
cmp
ds
les
sbb
dec
mov
and
lock
sub
jnp
loopne
inc
xor
xor
adc
sub
outsl
cmpsl
fs
std
or
mov
pop
lock
popa
popf
aam
sbb
sub
repz
add
aad
lea
sbb
mov
xchg
popw
pop
rorb
fs
pop
lods
inc
rcl
pop
sub
pop
pop
add
repz
shl
jae
mov
pop
xchg
cmpsb
fbld
xchg
push
js
cltd
cwtl
cltd
push
adc
movsb
gs
lret
add
dec
notl
adc
dec
mov
pop
fistpll
xchg
nop
imul
pop
sbb
sbb
and
arpl
xchg
fndisi(8087
or
int
pop
mov
data16
jbe
into
adc
dec
push
test
push
imul
push
sbb
pop
xchg
data16
stc
in
dec
ljmp
dec
pop
stos
in
inc
fldl
mulb
push
mov
hlt
cmp
adc
shll
repz
inc
or
push
mov
xchg
and
lret
lret
xor
lock
xchg
inc
pop
push
xchg
movsb
into
adc
xlat
jl
sti
jle
mov
sub
sbb
ja
xchg
sti
xor
data16
mov
jnp
inc
pop
rorl
jno
popf
sub
aaa
jle
inc
ss
jne
in
scas
loopne
gs
fnstenv
xchg
adc
popf
or
fcompl
xchg
daa
cltd
movsb
sub
inc
inc
push
mov
xchg
scas
mov
cwtl
fdivrl
jno
mov
sahf
cmp
dec
rcr
xchg
inc
push
repz
fstpl
cli
dec
addl
lods
push
int
pop
add
clc
mov
push
cmpsl
xor
push
es
pop
pushw
push
cltd
and
push
cmp
xlat
sub
cltd
fistl
in
repnz
or
lahf
pushf
push
xlat
mov
xchg
call
sub
xor
adc
mov
sti
arpl
cs
shrb
repz
test
cmc
mov
scas
dec
lahf
sbb
push
or
loopne
addr16
pop
mov
inc
xorl
stos
loopne
js
fbld
add
jne
inc
cmpsb
aas
dec
xor
test
js
shl
pop
sub
outsb
mov
pop
outsl
test
lahf
rorl
cld
stos
cmp
sbb
mov
xor
imul
jb
adc
hlt
mov
adc
subb
sub
mov
jno
mull
pop
add
xchg
mov
call
dec
insl
out
pop
shll
add
xor
cld
jecxz
inc
mov
pusha
clc
js
xchg
orb
or
negl
inc
das
adc
out
mov
fsts
out
stos
testl
andl
shrb
aas
fdivrp
mov
mov
xorb
lret
fs
loop
push
scas
sti
sahf
push
or
test
rolb
cs
mov
dec
aaa
cwtl
inc
out
gs
popf
lret
stc
push
inc
loop
rcr
jl
lret
rcrb
push
push
xor
test
out
mov
or
push
or
outsb
add
push
add
add
lods
int
inc
dec
data16
push
xchg
mov
shll
adc
adc
and
subb
xchg
shlb
insb
outsb
jno
pop
pop
cmp
scas
add
ficoml
inc
jns
icebp
negl
out
lret
cmp
xchg
sub
inc
and
popa
sbb
clc
jo
movsb
ficoms
pop
adc
adc
sbb
lds
ja
pop
gs
and
test
dec
dec
xchg
sbb
add
pop
jmp
and
movsb
push
jno
pusha
adcl
cmp
imul
test
add
sbb
outsl
fisttps
jge
jb
push
cmpsl
in
out
dec
jmp
loop
cmc
adc
or
jbe
jo
fcmovbe
sahf
mov
mov
into
lods
mov
mov
sahf
rdmsr
flds
inc
ss
pop
jne
mov
xchg
and
repnz
inc
call
ja
cmp
lock
dec
pop
adc
mov
out
popa
xchg
out
sub
lea
jns
mov
add
in
mov
cltd
sbb
cs
pop
lret
add
mov
mov
int3
pop
daa
push
rcrb
pop
lea
fists
nop
jge,pn
xor
shlb
ljmp
test
iret
pop
mov
add
inc
add
xor
dec
add
aam
stc
push
test
inc
ret
add
add
mov
mov
into
in
outsb
pusha
stos
adc
pop
bound
mov
inc
mov
cs
xor
add
aam
dec
aam
cmp
gs
andl
inc
mov
jae
and
incl
push
xchg
mov
jmp
jge
shr
mov
aaa
sub
lret
sub
out
loope
incl
out
out
xchg
mov
xchg
mov
aad
in
stos
cmp
pop
leave
dec
fdivrs
sbb
push
cmovb
cmp
clc
jbe
or
fsts
lret
clc
xchg
push
mov
les
jle
bound
lds
jb
aad
mov
mov
push
adc
sub
xor
cmp
fmull
flds
inc
xor
imul
outsl
push
test
aaa
loope
pop
imul
stc
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
and
outsb
xchg
pop
cli
adc
jns
jnp
push
jae
andb
dec
int
mov
cmp
and
mov
ret
mov
mov
js
jnp
jecxz
stos
aaa
or
ret
xchg
movlps
mov
scas
lcall
adc
or
xchg
stos
mov
aad
stos
jno
adc
jg
cmp
dec
dec
jnp
dec
or
stc
ljmp
insl
jge
inc
xchg
mov
mov
sbb
mov
dec
cld
lock
push
fnsave
jne
bound
push
movsb
cmpsl
es
outsb
in
inc
mov
lea
jb
pop
inc
xchg
or
mov
pusha
pop
iret
fistpl
xchg
test
int3
cmc
int
out
cmp
in
mov
xchg
mov
pop
ja
stc
js
xchg
ficoml
addb
mov
cmp
cmp
xchg
jp
inc
jle
outsb
scas
lea
sbb
pop
mov
imul
add
xlat
add
lcall
rolb
push
push
jbe
jne
popa
ljmpw
adc
mov
sub
sub
jle
dec
mov
push
loopne
cltd
mov
mov
inc
inc
rcrl
sbb
ljmp
lods
loope
jb
scas
test
sub
inc
xchg
inc
xor
inc
cwtl
lds
shll
and
jb
jbe
and
mov
call
loop
and
push
lret
sbb
je
dec
or
ljmp
sbb
adc
sub
add
adc
nop
lds
push
fists
lds
shlb
push
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
