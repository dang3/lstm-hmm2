push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
xor
sub
lods
cld
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sub
test
sbb
imul
jmp
mov
in
loopne
ja
leave
and
push
subl
cmp
xchg
lds
cltd
mov
mov
pop
jb
pop
gs
aaa
mov
inc
imul
gs
mov
dec
scas
cmp
cmp
mov
mov
jb
sti
movsb
mov
mov
daa
add
int
cmp
bound
lods
mov
jno
cmpsl
sub
dec
jne
out
dec
mov
adc
insb
test
xchg
sti
mov
cld
or
insl
xchg
in
sbb
pop
test
fsts
xchg
pop
mov
leave
dec
in
or
mov
and
js
xor
ret
or
adc
mov
push
xchg
cli
ret
pushf
push
test
pop
jp
dec
mov
or
lret
addr16
ret
rol
jae
scas
push
outsb
sbb
pop
cmc
pop
jne
adc
sahf
cmp
xchg
insl
mov
push
mov
jno
nop
dec
cmpsl
jno
ret
xchg
hlt
inc
fistps
in
mov
pop
jbe
inc
enter
ret
mov
cmp
sub
ds
push
xlat
mov
aaa
jbe
lcall
inc
cltd
and
into
mov
in
movsb
int
mov
inc
daa
lods
aas
sbb
jns
ret
xchg
inc
mov
jo
xlat
inc
add
pop
mov
mov
cmp
inc
movsb
test
and
mov
and
outsb
mov
insl
sbbb
movsl
fisubrs
add
pop
push
xor
sub
rcrl
mov
or
dec
add
loope
data16
push
int
cmp
pop
in
add
mov
insl
push
pop
lea
mov
leave
test
dec
aam
lcall
mov
and
xchg
jno
sbbl
inc
or
xlat
cmpsb
stos
sub
pop
or
mov
jnp
mov
sub
mov
push
loopne
lret
stc
ja
mov
inc
ja
in
mov
pop
dec
iret
or
pop
out
mov
mov
bound
xor
fucomp
sahf
inc
lcall
cmp
inc
add
int3
pop
jmp
iret
sub
outsl
mov
lods
pop
jmp
sti
xchg
cmp
fistpll
mov
stos
fucomi
pop
and
mov
cmpsl
bound
addr16
dec
jo
cmpsb
mov
inc
cmp
push
fs
fnstsw
inc
cwtl
pop
xor
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
xchg
popa
cwtl
lods
adc
adc
adc
lock
xor
mov
jne
mov
lret
inc
je
aaa
repz
shlb
sub
nop
pop
gs
push
and
adc
xor
sar
mov
add
dec
and
sbb
ljmp
dec
inc
adc
mov
pop
push
xchg
xchg
xchg
push
mov
hlt
dec
push
cs
jns
mov
test
mov
lds
cltd
lret
pop
loopne
sub
jge
or
test
add
add
clc
xor
fcompl
ljmp
stos
ljmp
sahf
cmp
or
sub
data16
cmc
mov
stc
inc
xchg
orb
add
mov
cmpsb
dec
mov
idiv
xchg
repz
lds
cmp
xor
inc
lods
adc
ret
cmpl
sbb
ja
rcrb
xchg
dec
jg
in
cli
nop
or
subl
mov
jecxz
cmp
fstl
sbb
fwait
cwtl
and
jo
lds
ljmp
dec
cmp
inc
scas
cli
stos
outsb
inc
sahf
test
mov
xchg
dec
jl
push
adc
mov
mov
inc
nop
aaa
repnz
orb
push
notl
hlt
mov
add
xchg
jns
jl
mov
jmp
adc
inc
push
jae
test
stos
lods
add
test
add
mov
add
cmpsb
push
jns
cmc
push
testl
mov
mov
push
int3
int
rcll
lods
hlt
shrl
jae
or
xor
sti
mov
loope
in
mov
ss
jb
movsb
das
xchg
xchg
push
inc
and
cmp
or
jae
jns
inc
hlt
movsl
mov
inc
out
cmp
popf
jno
add
xor
outsl
leave
jno
sub
mov
pop
sbb
dec
sti
mov
pop
rcrb
xchg
scas
push
in
dec
push
xorl
xor
mov
into
push
sbb
sub
mov
sbb
mov
mov
gs
aam
pop
mov
lds
movsl
add
xor
sahf
xchg
cmp
jecxz
cltd
or
mov
cwtl
popa
or
sub
in
push
xchg
ret
dec
movl
test
pop
add
adc
cmpsl
cwtl
mov
js
sti
jae
add
jp
movsl
stos
pop
lcall
jecxz
mov
xor
and
jle
and
fbld
iret
test
jo
cmp
rcll
xchg
xchg
mov
or
sbb
pop
rolb
jno
andl
negb
cmp
arpl
inc
cld
push
xchg
and
xor
inc
and
jge
mov
inc
xchg
xor
jbe
int
out
or
push
aam
pop
stos
sbb
or
arpl
and
xor
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
sub
cmpsb
xchg
sahf
in
mov
stos
jnp
dec
xor
stos
mov
imulb
imul
repz
sub
add
adcb
es
imul
cli
mov
js
cmp
pop
dec
insb
shl
jg
iret
in
test
gs
insl
xorl
jp
xor
mov
inc
cmp
outsb
dec
repz
mov
push
clc
outsl
mov
jb
andb
mov
enter
out
cmpsb
jae
mov
arpl
mov
sub
mov
and
cmp
sahf
divb
das
sbb
jns
fisubrs
xchg
jmp
xor
xchg
ljmp
xor
test
jb
sbb
mov
inc
dec
add
push
jg
daa
rcr
jp
aad
sub
mov
clc
mov
and
sbb
ja
adc
outsl
aas
jp
clc
xor
mov
dec
pop
mov
nop
int3
lea
icebp
sahf
fidivs
add
xor
movaps
mov
stc
stc
leave
gs
jns
mov
mov
das
adc
mov
sbb
and
js
xchg
aaa
test
mov
cli
rcrb
das
in
mov
pop
adc
xchg
imul
mov
sub
fwait
sub
mov
rcrl
mov
cmp
adc
add
dec
xor
out
popa
sub
push
sbb
xchg
test
test
sub
or
sarl
std
scas
in
push
pop
ret
sbb
les
addr16
addr16
pop
push
sub
cmp
fs
imul
dec
in
adc
jae
xor
dec
mov
or
sbbl
xchg
mov
push
dec
mov
mov
push
cwtl
pop
fmuls
fnstcw
push
and
jmp
and
dec
jle
call
mov
sti
fcmovb
rorb
inc
push
stos
mov
dec
xchg
cmp
and
dec
ss
mov
sti
jae
mov
test
adc
push
sti
out
add
mov
test
mov
jp
inc
push
imul
pop
adcl
ss
cmpsb
adc
sub
sbb
int
out
std
jge
rorb
pop
lcall
cs
push
sbb
add
mov
psubb
iret
dec
jp
inc
out
cmpsb
cli
dec
cwtl
fcmovnb
js
cmpsb
mov
jl
scas
inc
add
mov
mov
les
idivb
or
nop
jle
mov
xchg
xchg
fsubl
add
rcrl
cld
jbe
pop
mov
rorb
lcall
hlt
movsl
int3
cmc
push
pop
imul
ret
pop
rolb
cmp
sub
sub
repnz
sub
dec
out
xor
mov
loop
into
je,pt
sbbl
and
shrb
cs
add
rcl
imul
ret
xchg
out
aas
sahf
roll
popf
repnz
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
outsl
push
mov
adc
adc
adc
shlb
das
js
adc
sbb
or
ja
ja
ljmp
pop
mov
sbb
pop
and
lea
xchg
push
rcll
ret
das
and
and
mov
rorl
mov
jae
test
test
ljmp
sub
test
into
or
or
mov
sbb
xlat
cmp
lods
subb
popl
push
add
fistpll
inc
sub
xchg
mov
push
and
xchg
sahf
adc
sbb
into
mov
inc
in
cmpsl
cwtl
mov
adc
test
stos
add
aas
arpl
push
mov
faddl
orb
out
imul
mulb
dec
dec
sbb
test
ficoms
push
and
pop
nop
enter
int3
into
ss
pop
xor
lahf
pop
stc
cmp
outsb
test
xchg
mov
mov
pop
int3
movsb
add
jg
fildl
jnp
dec
mov
mulb
pop
sub
pop
cmp
or
mov
adc
mov
imul
scas
inc
fwait
inc
daa
cmp
and
fsubp
push
daa
add
lea
push
add
je
outsb
scas
mov
push
mov
adc
das
out
adc
stos
sahf
xor
stos
cwtl
xchg
sbb
iret
and
mov
jns
jecxz
and
shll
xlat
loopne
mov
idivb
push
sub
inc
mov
inc
mov
push
mov
loop
dec
pop
cmpsb
in
mov
stos
lahf
or
dec
sbbb
sarl
mov
leave
push
das
add
mov
sub
clc
add
dec
mov
call
lcall
adc
sub
cld
mov
push
sub
ret
and
xchg
mov
push
cmpsl
sbb
mov
lds
enter
stos
inc
fwait
xchg
lods
jne
mov
mov
iret
cmpsl
jae
or
push
ficompl
daa
sub
bound
mov
mov
ret
fwait
or
cmp
cmp
cmp
add
sbb
imul
sbb
dec
inc
call
sbb
scas
pop
fdivp
movsb
imul
push
cltd
and
push
or
imul
in
in
and
xchg
jo
leave
xor
xchg
mov
pop
mov
jle,pn
add
popf
inc
jb
and
bound
aaa
fs
outsb
pop
addr16
stos
cs
and
icebp
adcl
mov
rorb
das
and
lock
dec
scas
inc
fmulp
jmp
sbb
fistps
mov
xchg
jns
push
mov
lock
shrl
nop
xchg
lock
push
popa
jo
push
andl
aad
mov
or
iret
cli
scas
ret
inc
or
in
push
movsb
test
xchg
leave
jne
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
adc
adc
adc
adc
scas
add
dec
iret
cmp
loop
movsl
pop
mov
fsubrl
cmc
imul
nop
stc
xchg
sti
stos
pop
adc
out
xchg
cmpps
movsb
inc
inc
adc
out
iret
in
adc
mov
pop
out
adc
dec
rcr
xor
sub
fs
pop
inc
out
loope
mov
test
dec
mov
ja
je
push
cld
xor
push
lock
vmwrite
out
lock
push
cmp
sub
hlt
xchg
sub
jbe
push
ret
rcrb
xor
cld
sub
popf
mov
adc
fcoml
lahf
icebp
sbb
jmp
sub
xchg
push
xchg
xor
xchg
imul
dec
add
jp
pop
rcrl
es
jmp
aas
sub
xor
or
arpl
sub
imul
push
in
outsb
pop
jg
add
fsubr
adc
jb
sub
in
jl
inc
or
test
in
les
cltd
movsb
xchg
xor
mov
cmpsl
and
divl
jmp
mov
pop
xchg
and
pop
mov
pop
jnp
movsb
sub
sub
mov
jle
mov
ret
push
fdiv
stos
arpl
lret
int
test
test
mov
push
sarl
mov
xor
xchg
ljmp
enter
xor
fcomps
xor
and
add
mov
xchg
int
jmp
leave
and
and
iret
es
cmpb
sub
loop
shl
aad
pop
pusha
sbb
inc
ds
adc
mov
iret
cli
fisubs
je
mov
fs
or
out
adc
cmp
ror
xchg
jmp
push
inc
sbb
and
lods
out
fbld
mov
pop
mov
jns
push
ljmp
call
xor
stc
xchg
dec
fwait
push
sub
out
jae
push
stos
jnp
pop
out
sahf
dec
lea
popf
lret
adc
and
inc
mov
sub
sub
and
daa
xchg
mov
mov
mov
xchg
in
mov
push
sub
mov
mov
nop
sti
dec
inc
sub
dec
mov
movsb
ret
mov
xor
cmp
popa
loop
inc
aad
mov
sbbl
dec
cmp
sub
jp
xchg
ror
add
pusha
xchg
cmp
lds
jle
inc
out
pop
inc
fisttps
adcb
iret
adc
lahf
mov
sti
pop
pushf
addr16
jge
push
aad
lret
adc
mov
push
push
mov
inc
and
loopne
shll
dec
mov
and
js
pop
pop
xchg
lods
ret
lahf
or
aad
adc
fisubrl
ljmp
stos
repz
pop
nop
shlb
jbe
push
leave
and
mov
movsl
xchg
mov
mov
jns
dec
add
cmpsb
sarb
les
push
cmpsl
imul
mov
mov
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
aas
std
jle
repz
adc
adc
push
inc
lret
fimull
movsl
sub
das
lret
add
dec
fcmovne
jge
out
xor
ljmp
pop
outsl
cmc
add
pop
jb
movsb
jno
or
call
sub
mov
pop
nop
stos
xchg
lcall
rorb
out
and
inc
add
mov
movsb
adc
xor
int3
hlt
fisttpll
xor
mov
jne
mov
das
or
pusha
add
cmp
cmpl
pop
aaa
cmpsb
and
xor
or
iret
adc
imull
pop
enter
sub
xor
xor
adc
cmp
or
cmp
mov
add
rcr
inc
popa
inc
sub
and
adc
jle
sub
xchg
mov
mov
jo
fidivrs
dec
xchg
stc
loope
nop
jg
lods
xchg
andb
sub
sbb
cs
push
lds
or
dec
movsl
out
fwait
add
mov
cmp
inc
cs
fcoml
lret
pop
daa
lret
mov
lods
xor
push
jb
xor
mov
xor
cmpsl
lods
out
rol
dec
movb
push
xchg
pop
adc
into
sbb
stc
mov
mov
add
fldenv
mov
es
shll
adc
sbb
shlb
pop
fmuls
mov
xchg
mov
xor
es
push
fimull
xchg
push
lcall
popl
lea
and
loope
cmpsl
sub
mov
loop
insb
cld
inc
ljmp
adc
rorl
cltd
test
mov
cmp
testl
adc
jecxz
stos
sbb
je
inc
and
jle
rcrl
xor
jae
cmp
xchg
sub
shll
mov
test
add
stc
jae
icebp
out
icebp
cs
ret
sahf
fisttpll
sub
cmp
rolb
add
pop
sahf
fcoms
je
sbb
sbb
push
mov
jmp
sbb
push
push
lds
arpl
std
mov
xchg
pop
push
hlt
fwait
hlt
jp
popf
cld
ljmp
insl
xchg
jecxz
push
test
xchg
sub
sub
and
dec
sbb
scas
dec
inc
std
pop
pop
jle
fwait
test
jae,pt
fcompl
cmp
arpl
jecxz
iret
gs
ljmp
lods
repz
and
fcmovnbe
leave
push
in
jo
hlt
xor
push
fs
lcall
mov
push
pop
js
or
jo
scas
mov
jnp
xor
outsl
repz
repnz
mov
ja
lret
jb
pop
pop
orl
imul
and
xchg
insb
ffree
push
mov
das
xlat
aam
icebp
les
in
repz
dec
jg
xchg
add
mov
mov
dec
les
sbb
pop
jns
insb
or
ja
mov
add
jne
add
xchg
cltd
bound
and
push
jo
ror
in
jle
jmp
adc
adc
fiaddl
iret
jmp
pop
cld
cmp
xchg
cmpsl
cmp
jbe
data16
int3
pop
idiv
inc
sub
dec
mov
loopne
in
lret
aad
imul
fdivl
fnstcw
sub
or
lcall
xchg
enter
scas
cld
add
or
dec
fwait
and
rclb
cmp
aaa
sub
leave
push
dec
inc
add
rolb
in
push
mov
dec
mov
xor
or
xor
imul
mov
pop
mov
xorl
sub
dec
data16
mul
bound
cld
inc
mov
push
mov
add
mov
aad
push
insb
fs
pop
fiadds
mov
ret
jb
or
or
into
mov
cmpsb
fsubrs
jb
repnz
xlat
sbb
sub
movsl
stc
sti
stos
pop
sub
mov
lods
jbe
clc
jmp
lret
mov
decl
mov
out
sub
inc
jge
jge
mov
stos
cmp
xchg
test
pop
stos
mov
loopne
dec
sarb
sbb
inc
ds
cmpsl
jl
fcomps
shrl
js
movsb
jns
mov
cs
fcomps
inc
in
das
cmp
movsl
testl
jnp
dec
sub
xor
js
push
sub
scas
int3
jge
not
pop
xchg
inc
pusha
imul
daa
clc
leave
sub
stos
push
adc
arpl
clc
or
leave
or
xor
dec
mov
leave
cmp
lds
addr16
pusha
int3
cmpsl
int
das
cli
push
repnz
faddl
std
xor
sub
icebp
cld
repnz
in
jne
aad
and
test
pop
mov
stos
dec
push
mov
sbb
mov
imul
pop
cmpsl
lcall
imul
scas
into
inc
dec
mov
push
sbb
or
and
out
shrb
jecxz
jge
shll
insb
stc
pop
test
pop
fwait
addb
ds
mov
mov
movsl
lcall
aam
lods
sti
dec
in
fdivp
jge
out
inc
push
inc
out
sbb
push
mov
test
xor
dec
testb
jle
mov
inc
xor
sbb
push
lods
mov
xchg
in
pop
xor
lds
repz
or
nop
test
lahf
imul
imul
push
int
inc
mov
int
push
sub
inc
ljmp
and
cmp
xor
aas
nop
fdivr
loopne
cmp
int
jge
jno
inc
lock
popa
dec
testb
or
in
loop
dec
outsb
add
addr16
mov
cmpb
aaa
and
inc
outsl
adc
cmp
stc
and
mov
shll
sti
jle
out
lds
addr16
insb
cmp
pop
jmp
fldl
addr16
xchg
ss
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
js
js
ljmp
xor
and
in
out
std
into
pusha
mov
xchg
es
jl
dec
jge
sub
popf
and
sub
push
jnp
in
pop
pop
sub
iret
es
mov
clc
cs
imul
mov
pop
jno
xor
imul
leave
int
out
mov
push
mov
out
fstl
leave
push
push
into
test
stc
jl
pop
cwtl
mov
xor
repz
shll
push
cmpl
pop
stc
int
bound
push
arpl
dec
mov
out
jno
testl
jno
dec
inc
int3
sbb
stos
scas
into
sbb
cmp
mov
sbb
pop
mov
lahf
sbb
sbb
mov
mov
dec
sub
call
fldenv
mov
sarl
hlt
xor
adc
ffree
push
mov
pop
ret
mov
push
push
loop
pop
fidivs
test
add
sbb
test
push
xchg
or
add
ljmp
jb
jecxz
mov
pop
negl
pop
add
ficoms
sub
enter
shlb
ljmp
xor
rorb
cmpsl
sub
and
push
imul
jae
pop
shlb
mov
push
fs
bound
jbe
cmp
jmp
sbb
add
pop
fbld
mov
js
mov
test
mov
pop
nop
dec
fimull
cld
mov
fcoml
jae
shl
inc
dec
cwtl
int
mov
dec
mov
and
mov
mov
outsb
adc
jle
stos
jge
sub
fsubs
pop
push
cmpsl
mov
or
lock
or
loop
test
push
test
ret
xchg
xchg
cs
jp
hlt
xchg
xor
cmc
xchg
mov
mov
mov
xor
out
jbe
mov
sbb
mov
fs
rorw
jae
adc
loopne
sarb
pop
and
subb
cmp
jbe
es
les
mov
in
adc
mov
push
push
rol
enter
dec
and
pop
mov
imul
dec
je
push
repz
mov
outsb
cmpsb
test
or
mov
sbb
jbe
std
stos
cmc
inc
repnz
cmp
stos
aad
xchg
popa
xor
mov
imul
rcl
pop
into
adc
jp
push
test
push
mov
mov
sub
sbb
loope
insl
das
cmpsb
mov
aam
mov
in
mov
scas
pop
jge
xchg
add
cmp
sub
fstl
cmp
daa
jae,pn
loop
jne
js
mov
pop
jl
cmp
shlb
pop
lret
ret
cli
sbb
test
daa
lods
cmc
lret
in
decl
xchg
test
cmp
int
xor
test
lock
jae
call
scas
add
in
in
lds
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
or
adc
adc
dec
ja
test
sbb
sbb
push
xchg
imul
mov
mov
jecxz
xchg
es
enter
sub
push
and
xchg
add
imul
cltd
movsb
in
insl
fs
aas
jae
cmpsb
ret
mov
xchg
iret
jno
dec
jno
jns
rcll
sbb
aad
arpl
ja
mov
xor
mov
mov
xchg
mov
in
sbbl
out
add
fsub
scas
cmpb
pop
mov
mov
cltd
mov
pop
pop
sbbb
aas
pop
dec
inc
push
flds
push
push
in
movsb
idiv
cmp
xchg
mov
cwtl
jmp
or
xchg
jnp
test
mov
nop
push
inc
out
mov
mov
cmpsl
or
xlat
mov
and
in
movsb
jle
adc
xor
xor
mov
pop
pop
jae
out
adc
or
lea
mov
push
test
xchg
inc
fisubl
push
xlat
add
rcl
fcomi
insb
push
mov
cmp
push
push
mov
push
fs
jae
add
ss
add
lcall
vpunpcklwd
xor
jge
inc
out
lea
outsl
sbb
push
sbb
mov
js
adc
out
inc
adc
adc
enter
sahf
jl
test
out
inc
icebp
inc
inc
xchg
insl
jecxz
fsubl
pop
imul
cmp
jne
sbb
icebp
dec
inc
push
mov
and
clc
fimull
out
jnp
pop
push
sbbl
outsb
push
mov
xchg
push
pop
out
fstl
mov
or
mov
das
aad
jp
fiadds
ret
fmulp
out
rcll
jg
test
lods
pop
insb
scas
and
jo
dec
fiaddl
sarl
loopne
pop
push
or
sbb
sub
add
xchg
dec
push
xor
or
incb
cs
pop
dec
xchg
out
dec
aas
pop
xrelease
xor
cwtl
mov
mov
pusha
xchg
cmp
mov
mov
cmc
jp
les
mov
fldl
inc
mov
aad
dec
sbb
loope
mov
call
lods
in
pop
jge
adc
mov
in
push
push
cmp
xchg
je
jae
pop
push
mov
jmp
jae
adc
les
cmovp
adc
jmp
push
mov
scas
fsubs
pop
jae
ss
dec
in
sarl
cltd
jne
ds
insb
filds
xchg
add
sub
outsb
mov
add
in
jge
jns
sub
ljmp
cmpsb
outsl
loop
test
insl
push
fstl
loopne
test
aad
push
cmp
mov
mov
movlps
hlt
addr16
adc
mulb
push
push
or
mov
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
rorl
adc
adc
adc
adc
jmp
aaa
mov
push
aam
push
jp
out
int
jp
adc
inc
inc
mov
mov
jmp
clc
inc
cmp
daa
adc
pop
jle
inc
add
add
jle
cmp
cwtl
jmp
shrb
and
in
lea
repz
mov
ds
js
fwait
outsl
mov
popa
int
add
jno
lcall
cltd
fimull
in
add
pop
call
mov
and
mov
test
push
pusha
aam
xor
sti
jecxz
push
js
adc
and
ljmp
pop
sub
lds
push
out
call
icebp
call
pop
mov
mov
stc
pusha
gs
lret
xor
lret
jnp
xchg
popf
dec
mov
fs
stos
dec
ret
lods
scas
jp
and
push
mov
bound
dec
les
mov
xor
data16
sbb
xchg
jl
pop
xchg
scas
push
test
in
cmp
mov
mov
loop
clc
test
pop
stos
mov
stos
cmp
test
ljmp
orb
int3
ljmp
loopne
sbb
push
nop
aaa
cmp
insb
aad
fxch
ret
push
xchg
mov
sub
loop
lcall
stos
aas
seto
jae
inc
inc
lret
or
xor
es
sarl
testl
jnp
ljmp
icebp
in
ret
sbb
cmp
loopne
adc
lcall
or
mov
sbb
lret
and
dec
rcll
fstps
testl
inc
jnp
loop
jo
lcall
cmc
xchg
ja
fdivs
cmp
sub
les
or
cmp
mov
pop
jbe
out
fsubl
sbb
xchg
das
cmp
inc
cmp
add
jge
jne
xor
cmpsl
addr16
and
or
rorl
insl
sbb
and
push
and
pop
jbe
aaa
inc
inc
jmp
pusha
ss
pop
hlt
std
or
cmc
xor
popa
and
push
mov
mov
rorb
out
xchg
mov
mov
lcall
mov
adc
mov
rclb
and
mov
mov
std
subb
rorl
adc
cmp
out
pop
push
add
repz
in
icebp
inc
mov
cmp
mov
insb
push
xorb
hlt
pushf
decb
aad
ss
mov
add
push
int
dec
and
sub
add
lock
jnp
sub
setle
and
lret
dec
adc
sbb
lods
sub
loopne
scas
daa
insl
popf
pushl
int
cltd
push
cwtl
add
stos
pop
push
imul
mov
and
sbb
mov
stos
and
les
movsb
notl
repnz
xchg
mov
mov
pop
rcr
aas
outsl
lods
sub
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
test
mov
adc
adc
mov
ljmp
imul
or
dec
push
inc
mov
int3
mov
cmp
mov
insl
aad
insb
mov
cmc
out
xor
sbb
add
fisttpll
xlat
cmp
xor
popf
lret
xorb
mov
xor
sub
rcrl
bound
adc
testb
insl
xlat
std
push
mov
out
dec
loop
hlt
gs
xor
in
and
cwtl
imulb
sbb
jmp
lds
pop
adc
je
add
push
mov
push
rclb
mov
repz
push
lret
js
xchg
lods
fwait
cmp
adc
inc
xchg
sbb
adc
test
lods
gs
out
out
cmp
and
cltd
fldcw
adc
lcall
std
aaa
mov
imul
nop
dec
arpl
cmp
mov
xor
int
lea
dec
add
cmp
mov
or
fcoms
popf
mov
shrb
sbbl
adcl
dec
jp
lret
push
pop
xchg
cmp
jns
pusha
inc
fs
in
dec
sti
lcall
push
xor
jmp
insl
mov
adc
sbb
mov
mov
push
jo
fcmovnb
aad
cs
inc
cwtl
pusha
je
cmp
and
sbb
sbb
fistpl
dec
mov
and
sbbl
test
sbb
repnz
test
xor
pop
icebp
out
or
pop
xchg
xor
imul
xor
mov
pusha
sub
lock
push
sahf
aaa
inc
pop
test
mov
std
dec
jbe
mov
mov
pop
inc
sub
pop
out
xchg
pop
js
scas
cwtl
add
movsb
cmpsl
mov
ja
sub
movl
jecxz
sub
add
mov
xor
mov
fdivrl
xorl
push
sahf
sbb
lods
jno
cmp
cmp
lock
or
push
std
rorl
addr16
jg
jne
jl
dec
or
jbe
adc
inc
inc
mov
sub
pop
sbb
cmp
cmpsl
and
cmp
add
and
mov
jg
pop
jle
nop
es
adc
adc
mov
ss
out
cmp
jns
inc
mov
push
inc
or
pop
sub
inc
out
repnz
pop
in
mov
repz
jae
popf
hlt
nop
sbb
addr16
mov
out
sub
les
dec
push
scas
xor
fbld
xor
dec
inc
mov
push
mov
xlat
test
out
mov
icebp
xchg
loop
loope
sti
dec
push
fcmovnu
test
sti
popa
push
inc
hlt
ret
icebp
sbb
inc
sbb
popa
cmpsl
mov
ss
stc
mov
push
push
mov
sarb
xor
movsl
push
jmp
mov
lea
inc
lock
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
pushf
inc
into
lods
jno
adc
adc
adc
mov
xor
or
movsb
xor
inc
mov
mov
jno
test
addr16
test
push
sub
daa
lahf
pop
adc
sbb
mov
jecxz
stos
in
jmp
lods
fdivrl
push
pop
xor
and
sahf
push
iret
outsb
movb
jge
stc
lea
jecxz
shlb
push
push
mov
xchg
push
shl
int3
shrb
pop
cwtl
mov
in
imul
movsb
pop
sub
rorb
inc
xchg
jl
or
mov
xchg
pop
jge
insl
mov
xor
aas
cli
sub
push
ret
sub
inc
jae
or
xor
orl
gs
dec
jbe
lock
pop
xchg
or
adc
ficomps
xchg
or
add
sbb
sbb
xor
cmp
in
inc
lea
jno
cmpsb
cs
outsb
orl
sti
in
int3
jo
pop
inc
jecxz
cmp
in
loope
jmp
xor
pop
int3
or
insl
add
jnp
in
inc
scas
test
lret
push
push
je
sti
repnz
pop
cmpsb
sbb
call
inc
rcrl
sub
int
hlt
push
jo
push
mov
or
add
mov
jecxz
push
push
pop
lret
adc
sbb
mov
and
addr16
das
cli
stc
adcb
mov
arpl
out
mov
mov
jno
jge
push
fs
jns
xor
ja
mov
jp
push
xor
shrl
fwait
jp
repz
xlat
fstl
clc
or
testl
popf
mov
in
ds
ds
jns
rorb
fisttps
push
cli
mov
mov
lcall
push
loopne
inc
fstpt
into
mov
and
cmpsb
mov
and
test
adc
into
mov
mov
in
lods
stc
dec
push
xor
inc
dec
mov
not
lret
sahf
ljmp
enter
pushf
sbb
pop
dec
cmp
repnz
test
pop
pusha
outsl
and
and
or
jno
ss
xorl
repnz
sbb
xchg
rcr
rcr
sbb
push
and
sbb
pop
dec
inc
ds
rcrl
cmpsl
cld
aad
stos
mov
outsl
xor
lret
or
xor
call
push
rcrb
test
cmp
inc
xchg
cmp
and
js
data16
cmp
in
xchg
mov
adc
xchg
and
stc
push
add
xor
ja
mov
xchg
outsb
push
je
je
in
sub
jmp
bound
jno
push
mov
pop
sbb
lock
aam
inc
gs
out
movb
mov
xchg
daa
push
das
ret
inc
cmovb
pop
into
add
push
ret
mov
lods
jl
das
jne
fisubrl
mov
xlat
mov
sahf
dec
mov
insl
fldl
js
adc
aas
pop
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
repz
dec
mov
adc
adc
push
call
xor
dec
xorl
dec
pop
repz
outsl
xchg
lods
and
push
dec
outsl
and
addb
cmp
clc
loop
cltd
jl
pop
cmp
mov
dec
pop
sbb
gs
lods
es
xchg
sub
rorl
lock
into
stos
pop
fwait
mov
test
cmp
rorb
xor
xchg
test
inc
xor
ds
jb
in
in
bound
sti
push
sbb
mov
jp
imul
push
rcll
mov
cmp
sub
pop
out
fwait
xchg
cld
mov
mov
or
dec
aaa
test
and
push
rcr
stc
ds
xchg
jbe
loope
scas
push
punpckhwd
or
mov
inc
aaa
mov
xorl
adc
jo
scas
push
unpcklps
pop
nop
push
popa
push
sbb
inc
hlt
mov
lods
aam
cli
sbb
int3
add
mov
jo
outsl
push
out
std
adc
jg
adc
xor
pop
xchg
push
push
stos
outsb
test
xor
xchg
mov
xchg
ror
xchg
jnp
push
sbb
mov
clc
mov
repz
adc
mov
xchg
add
mov
cmp
and
mov
pop
jns
sti
push
dec
mov
inc
jnp
popf
in
push
sbb
mov
adc
leave
cs
sub
mov
subb
dec
call
push
lds
push
imul
lret
sarl
in
mov
inc
or
bound
push
bound
or
add
icebp
and
aad
into
cmovp
mov
xchg
dec
push
dec
in
mov
aas
pop
insb
ret
inc
cmp
xor
scas
xchg
shld
ret
scas
mov
repnz
shll
jbe
sub
orl
pop
pop
xchg
inc
adc
adc
dec
mov
sahf
icebp
cmp
mov
call
cwtl
rorl
sub
js
inc
jl
out
xor
cmpsl
frstor
or
xchg
cmp
push
es
movsb
mov
dec
ret
fldcw
inc
mov
push
rol
jecxz
repnz
outsl
mov
test
ss
aas
or
out
setle
mov
jnp
ja
hlt
aam
test
and
sub
lcall
fldenv
ljmp
mov
ja
pop
cmpsl
orl
les
js
mov
loop
or
sub
pop
movsl
ljmp
jnp
xor
mov
jp
or
test
aas
ret
and
int3
lret
ds
imul
arpl
xorb
lret
mov
out
jnp
fdivl
movsl
mov
loope
out
add
xor
jl
test
lret
gs
vandpd
sub
movsl
or
mov
push
dec
pop
dec
test
push
into
mov
mull
inc
int3
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
sub
inc
iret
xor
enter
push
popf
inc
in
test
es
xchg
xor
jo
pop
push
lret
mov
cmpsb
lret
xchg
out
inc
cmpsb
or
push
enter
jg
push
mov
insl
int3
mov
fdivrs
and
sub
pushf
out
imul
es
imul
mov
gs
es
mov
mov
jns
cmp
insb
ds
mov
cltd
dec
fmuls
jnp
aad
mov
inc
xchg
stos
and
push
repz
pop
or
add
fisubs
in
lock
imulb
int3
lock
lret
and
adc
mov
dec
stc
scas
pop
xor
add
or
mov
mov
rcrb
aas
mov
mov
fidivrl
out
sbb
ret
push
stos
loop
sub
in
jp
sbb
inc
and
fdivs
js
in
dec
inc
sub
inc
orb
cmp
pop
in
mov
add
pop
shrl
cmp
lret
mov
fadd
and
cmp
lods
ret
addb
lgs
xchg
stos
xorl
sarl
xor
mov
sub
lahf
mov
pop
nop
in
pop
cmpsl
push
mov
or
dec
cli
add
mov
mov
sub
and
xchg
loop
into
add
fwait
das
mov
push
sub
jl
adc
pop
sbb
adc
mov
xchg
pop
dec
iret
jecxz
fs
bound
loop
popl
out
mov
mov
sbb
jl,pn
cmpsl
xor
sbb
mov
mov
and
jb
lds
pop
cmp
jns
sbb
jae
jle
mov
xchg
push
inc
jecxz
add
ljmp
mov
inc
xchg
adc
aad
xchg
hlt
adc
or
int
push
jae
out
mov
insl
inc
jbe
sbb
sub
imul
dec
leave
cmpl
gs
inc
xchg
aas
jae
add
xor
cltd
popa
adc
or
gs
cli
imul
mov
mulb
iret
leave
in
lock
mov
scas
rcrl
adc
xor
jge
xor
aas
push
adc
pusha
outsb
add
ret
mov
mov
in
fsubs
outsb
add
and
inc
nop
loope
jbe
add
into
push
pop
lock
lret
test
push
into
pop
fdivp
packssdw
lret
andb
scas
mov
stos
inc
push
sub
inc
mov
pop
mov
pushf
repnz
call
pusha
xchg
xor
imul
mov
jg
loopne
scas
enter
jae
sub
mov
mov
int3
outsb
push
out
addr16
ja
sub
gs
push
xchg
pop
mov
adc
bound
mov
adc
or
fstpt
dec
mov
loope
pop
lods
popf
decl
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
stos
push
mov
adc
cwtl
ret
xchg
jne
popa
pusha
outsl
add
or
push
shrb
mov
int
push
pop
inc
or
clc
fldcw
dec
mov
mov
xchg
mov
mov
dec
test
xchg
mov
notl
mov
jp
mov
gs
fldt
aad
in
xor
xor
sti
stos
mov
testl
stos
cmp
aam
cltd
cmp
movsl
cvtpi2ps
std
mov
ljmp
insl
mov
stos
add
verr
mov
mov
push
cmp
popa
imul
mov
cmp
fdivl
cltd
test
cs
mov
xlat
das
ror
jle
push
ret
dec
xchg
repz
pop
scas
xchg
imul
into
les
sub
jmp
add
add
inc
cmpl
fisubrs
out
add
stos
subl
cltd
ds
int
inc
pushf
xchg
ljmp
add
ds
hlt
fsubl
cmp
out
imul
aas
mov
clc
ror
icebp
sbb
sub
mov
push
aam
cmpsb
pop
iret
mov
mov
push
adcl
and
lcall
pushf
add
pop
fs
inc
sbb
cli
and
jo
push
ss
dec
movsb
xchg
into
aad
adc
xlat
lock
daa
lret
jge
mov
aam
std
cmp
outsb
enter
ja
fcoml
rcr
loopne
inc
jne
aas
fistps
insb
out
jle
or
jb
filds
in
sbb
add
pop
test
and
mov
push
cmp
nop
push
das
pop
setle
aam
into
adc
cmpsl
jbe
and
inc
insl
xchg
je
mov
jl
shrb
sbb
lret
xor
int3
mov
or
into
lahf
stos
nop
mov
pop
mov
mov
jp
test
icebp
cs
movsl
dec
pop
lods
add
les
xchg
xchg
cmp
jg
pop
loopne
jge
xchg
mov
fcmovnb
dec
scas
mov
loopne
scas
add
jo
notl
cltd
jp
fisubl
leave
xchg
sub
fsubl
or
hlt
dec
aad
out
je
stos
push
xchg
stos
pop
ja
sbb
icebp
bound
test
jne
sub
fsubrl
mov
xor
sbb
fisttpl
out
in
sbb
push
and
adc
fcmovu
mov
sbb
mov
in
xor
in
mov
xor
mov
lahf
insb
jb
lahf
and
cwtl
mov
mov
or
lock
inc
add
dec
sbb
movsl
cmp
sti
incb
mov
jne
jg
jbe
and
push
adc
loope
imull
ja
hlt
fiaddl
mov
clc
gs
shlb
popa
notl
xchg
incb
std
cmp
repz
xor
push
jno
xchg
shll
or
lods
fisubrl
popf
push
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
imull
insb
stos
mov
adc
adc
leave
ja
das
enter
ds
xchg
cwtl
rcr
cmpl
mov
sub
mov
and
fcoml
xor
daa
dec
std
dec
jne
cmp
in
mov
xchg
push
addb
adc
cmpsb
addb
pusha
cmpsb
push
addr16
into
dec
imul
push
mov
outsb
das
xchg
add
xor
xor
call
xchg
shlb
stc
adc
sub
js
repnz
test
pop
push
popf
je
pusha
and
xchg
es
enter
call
rcr
push
inc
mov
xchg
mov
inc
push
int
mov
stos
ss
ja
adc
shll
ret
fbld
sbb
jmp
jne
jmp
imul
jmp
aad
das
and
out
fimuls
push
shl
ljmp
das
call
push
mov
adc
test
call
cmp
cs
mov
sbb
push
and
and
cmp
lods
out
inc
repnz
lds
mov
jge
fisttpll
hlt
shl
or
in
push
add
or
test
stos
jp
jge
mov
xchg
mov
dec
test
rorb
sti
and
fcmovb
adc
xor
pop
or
ljmp
inc
movsb
jmp
push
lods
xchg
scas
ds
lods
and
lods
cltd
gs
xchg
fcoms
in
lods
xchg
icebp
incl
scas
test
push
stos
rcl
xchg
aam
mov
cmp
aam
xor
mov
push
aas
outsb
push
mov
rol
jg
pop
fstpl
mov
int
imull
lods
or
aas
mov
sub
add
adc
mull
jno
lds
mov
add
jmp
pop
mov
xchg
test
mov
fidivl
daa
in
sub
or
sub
pop
push
push
insl
fcomps
sahf
push
add
xor
mov
xchg
mov
sbb
xchg
movsb
inc
sub
sub
or
int
cmp
cmp
adc
jb
adc
enter
push
fnstcw
jne
daa
clc
jns
les
enter
iret
lahf
xchg
jecxz
inc
nop
jns
adc
mov
movsl
push
into
pop
cmp
push
out
mov
call
inc
sbb
sub
push
jp
adc
hlt
inc
lea
movsl
lds
inc
bound
ljmp
push
push
mov
js
pushf
aaa
insb
ds
mov
insb
and
jmp
xchg
jge
mulb
shrl
ret
pop
cli
pop
scas
mov
xchg
jmp
in
ret
and
xor
sub
ds
aaa
mov
push
aad
fs
add
dec
and
xor
loop
push
pop
and
and
xchg
or
jb
mov
or
push
fistpl
lcall
popf
and
ret
add
cmpsb
pop
inc
pop
je
sub
push
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
out
mov
mov
adc
adc
stc
call
mov
mov
dec
sub
jns
rorb
cmp
add
aas
test
pop
or
movsb
ljmp
push
sbb
dec
add
jns
mov
sysret
and
stos
push
mov
adc
stos
xchg
lcall
jo
jno
fcomps
inc
push
and
call
mov
and
imul
leave
push
adc
jne
mov
in
out
pop
sbb
cmp
jge
pop
ss
jecxz
xchg
and
shrb
adc
inc
daa
mov
sbb
leave
movsb
mov
in
in
xchg
jno
cltd
lahf
outsl
out
cltd
movsl
sub
adc
iret
dec
xlat
xchg
fwait
jbe
push
out
cmp
cs
lret
mov
sbb
push
dec
xor
les
jecxz
outsb
scas
sbb
aam
or
xchg
ss
cmp
out
js
pushf
fs
xchg
lcall
add
pop
jp
inc
add
ljmp
cmpb
into
aaa
dec
mov
test
std
in
dec
pop
in
nop
call
popa
outsl
sbb
mov
sbb
fiaddl
aas
fwait
dec
add
xchg
push
jmp
call
jns
push
sbb
les
jp
mov
loope
jl
cmpsb
stos
cmp
clc
std
fcom
mov
pushf
das
pop
lds
lods
jp
mov
xor
mov
push
xchg
mov
or
scas
fists
dec
push
jae
add
lret
neg
out
fistl
push
add
lcall
jl
mov
sarl
push
inc
cli
cmp
roll
jle
nop
cmp
jne
jg
aas
sbb
cmp
mov
inc
cmpsl
mov
jg
nop
pop
and
xchg
jle
testl
xor
adc
cmpb
mov
inc
mov
scas
lcall
cmp
and
leave
jno
repnz
mov
out
or
mov
test
cmp
mov
jl
mov
cmp
lahf
outsb
out
xchg
adc
xchg
and
push
in
cmp
dec
shlb
add
adc
jmp
je
mov
push
or
mov
aaa
xchg
mov
cmp
in
out
leave
sub
and
inc
rcrb
jle
dec
in
rolb
es
pop
lods
sbbl
sub
dec
mov
stc
cli
push
mov
mov
cmpsb
popf
lret
mov
pop
out
push
ret
sbb
aam
jp
dec
dec
push
rolb
sbb
mov
mov
das
shl
imul
add
pop
call
scas
rcrl
inc
mov
xor
fildll
adc
push
int3
sub
cltd
rcr
jne
push
test
fbld
add
mov
inc
filds
shrl
dec
xor
cmp
fnstcw
cmp
pop
pop
jecxz
lret
add
fiaddl
out
inc
ss
lret
sbb
sbb
mov
cmpsl
dec
cwtl
fdivr
inc
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
frstor
adc
adc
jmp
mov
fs
add
jnp
fwait
mov
push
push
sbb
out
es
sbb
clc
mov
movsl
sub
mov
jmp
sbb
dec
gs
dec
std
xchg
pop
mov
xchg
xchg
bound
pop
jns
mov
cld
popf
daa
cwtl
test
sbb
scas
lds
aam
xchg
cli
or
jmp
pop
stos
or
pop
push
push
loop
cli
mov
push
in
shll
iret
adc
mov
out
fs
inc
or
push
adc
loopne
sbb
loopne
sub
push
ficoml
loopne
push
dec
scas
lret
repnz
je
mov
ja
sbb
sub
loop
dec
sub
xor
imul
clc
iret
jb
pop
incl
lods
sbb
arpl
xchg
int3
adc
adc
xchg
mov
mov
clc
sahf
and
test
movsl
fyl2xp1
xor
sub
sti
jnp
aaa
divb
das
xchg
push
sub
fcompl
push
out
pop
mov
or
lock
push
jl
movsb
jle
sarl
std
stos
cmp
cmpsl
inc
mov
push
xor
jne
mov
ror
in
adc
stos
jae
xchg
hlt
and
mov
ret
or
test
mov
push
mov
push
jo
push
dec
fcoml
scas
add
push
pop
dec
fsts
mov
fs
loop
movsb
jl
mov
cmp
dec
movsl
cs
lods
test
jbe
pop
xchg
mov
insl
shlb
jecxz
sbb
dec
lret
sbb
shl
ja
adc
sahf
pop
call
push
mov
mov
or
test
hlt
add
aam
add
sub
outsb
and
adc
roll
push
dec
je
ljmp
xchg
adc
add
dec
sub
lock
rcll
repz
pop
cmp
es
jb
stos
inc
sub
or
in
lods
scas
hlt
adcl
iret
sub
pop
pop
pushf
adc
push
lods
xchg
adc
in
cmp
subb
rorl
sbb
test
adc
shr
cmc
push
jns
jle
popa
hlt
jnp
push
sbb
mov
jecxz
xor
leave
ret
int
fdivrp
fld
adc
addr16
adc
fiadds
movb
clc
mov
or
mov
insb
xlat
outsb
cld
inc
test
lret
and
xchg
pop
pop
jae
sbb
jae
pop
lds
and
pop
xchg
jge
inc
sbb
repnz
mov
cmp
movsb
in
cmp
inc
lahf
pop
out
add
and
mov
icebp
and
jo
call
cmp
pusha
add
inc
xchg
idivb
test
xor
xchg
leave
cmp
inc
je
scas
pop
cmp
mov
cmp
js
mov
lds
fs
inc
mov
jne
xor
pop
mov
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
or
adc
adc
adc
adc
je
xchg
xor
movsb
test
jne
mov
ret
push
or
xchg
jne
aad
cli
test
and
pop
cmc
xchg
xor
pop
div
dec
jmp
mov
out
xchg
xor
cli
xchg
dec
mov
or
in
iret
jp
outsb
aaa
push
jp
push
inc
and
push
stc
inc
push
ljmp
jae
adc
inc
sub
outsl
xchg
cmp
repz
or
jb
cld
adc
mov
inc
test
mov
es
mov
xchg
push
test
ret
adc
inc
add
std
mov
push
pop
cmp
fs
mov
movsl
faddl
mov
loopne
cs
mov
xor
or
and
and
inc
inc
sbb
movsl
add
fistpl
and
imul
sbb
in
iret
leave
cmc
dec
fbld
or
adc
punpckhbw
test
xor
mov
stos
and
mov
xchg
rorb
mov
sbb
mov
out
or
and
sbb
dec
dec
mov
push
or
cltd
outsb
cli
add
and
jne
inc
arpl
cmp
fs
test
lock
insl
dec
js
ds
ret
movsl
aam
jbe
xor
jmp
mov
aam
mov
sub
mov
mov
dec
or
nop
bnd
in
mov
js
int3
aaa
cs
shll
xor
fs
xchg
add
aam
pextrw
je
pop
xchg
xchg
ss
popl
xor
int
pop
push
push
add
fcomps
or
imulb
xchg
push
pushw
dec
mov
inc
mov
scas
jl
push
movsb
mov
mov
mov
mov
or
xchg
xlat
outsb
push
push
mov
sahf
popf
or
sar
or
loopne
lahf
inc
cli
jne
rorb
push
es
mov
scas
ds
add
sbb
fs
enter
xchg
int3
cmp
cmpsb
jb
loop
aam
insl
inc
push
push
mov
push
and
add
test
xchg
jle
dec
int
out
sbb
mov
aad
shrl
sbb
xorps
fs
xchg
mov
jge
pop
aas
out
xchg
jo
shlb
imul
into
lock
mov
stos
pusha
jb
jbe
or
push
rol
sub
repz
cwtl
dec
int3
das
push
subl
shrb
rcrl
in
ljmp
inc
mov
xchg
insb
push
das
arpl
lret
in
inc
je
and
push
xlat
and
push
push
dec
cmp
and
pop
je
jb
dec
pop
push
cmp
mov
popa
int3
clc
orb
add
dec
test
fcom
lahf
pop
or
add
sub
gs
push
mov
mull
ret
cmp
cwtl
pop
stos
xchg
rcl
or
rorb
pop
xchg
xor
fiaddl
xor
shl
xor
or
add
mov
jmp
xor
and
in
pop
lods
loope
adc
adc
adc
jae
xor
inc
inc
add
js
gs
icebp
insl
sarb
push
mov
in
jg
sbb
adc
movsl
popf
add
ds
sub
movsb
push
inc
mov
inc
test
ret
test
mov
jne
int3
mov
js
xchg
push
add
sbb
lcall
dec
inc
dec
xchg
and
cmc
int3
ret
mov
aad
push
movsb
mov
mov
or
cld
xchg
cmp
lods
insl
test
mov
out
inc
popa
test
xchg
and
popf
cmp
leave
pop
mov
mov
aam
cmp
lahf
in
outsb
lret
lahf
lcall
mov
push
add
mov
ljmp
mov
jl
shrb
dec
push
mov
push
adc
mov
pop
or
cmpsl
xchg
insl
or
cmp
arpl
push
mov
sub
ret
push
dec
or
popa
inc
sub
ficomps
adc
in
test
insb
xchg
in
cld
xor
arpl
or
shl
mov
push
data16
movsl
stos
test
inc
mov
in
lea
xchg
push
daa
adc
cmp
lds
lahf
and
add
hlt
dec
cmpsl
pop
testl
cmpsb
imul
cmp
mov
mov
mov
pop
xor
sbb
test
or
fadd
nop
pusha
push
cmp
out
ds
shl
mov
sbb
fisttpl
dec
js
xchg
push
pop
cltd
and
mov
mov
enter
iret
jns
inc
jo
jo
lret
adc
test
add
mov
mov
cmp
mov
pop
jns
lcall
pop
es
dec
lea
mov
cmpsb
clc
mov
dec
arpl
popf
test
test
movsb
and
mov
fimuls
xchg
jp
mov
fisttpl
shlb
jmp
or
and
pop
das
out
mov
es
sbb
addr16
stc
nop
orl
movsl
and
aad
sub
mov
into
jnp
add
or
sub
jle
rcrl
push
adc
lahf
popa
cmp
icebp
or
sub
mov
push
hlt
in
andl
xor
mov
mov
stos
pushl
call
pop
scas
sahf
push
out
xor
es
push
pop
xor
gs
mov
adc
and
cli
xlat
outsb
push
rcll
lret
out
or
fidivl
ror
out
pushf
xor
push
mov
mov
pop
adc
lahf
inc
roll
or
loopne
push
hlt
popf
enter
aas
and
cmp
adc
jns
inc
pushf
repnz
mov
sbb
into
insb
lahf
sbb
fists
adc
fcmovnb
xor
idivl
inc
push
fsubl
out
and
add
in
xchg
mov
lret
inc
or
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
cmp
in
jle
nop
adc
adc
adc
mov
mov
sub
pop
lds
inc
mov
sbb
push
cld
xchg
cwtl
out
fisttpll
adc
pop
cmc
ss
sub
sub
fadd
cld
and
pop
out
xchg
mov
dec
ds
xchg
test
adc
std
fistl
jbe
fs
scas
xchg
cmc
loop
enter
test
ljmp
fcmove
xchg
or
in
dec
pop
or
lret
sub
popa
cltd
mov
jb
out
jo
aam
les
lret
push
cmpsb
push
pusha
sub
enter
imull
jl
sbb
pop
or
pop
aaa
fmull
icebp
aam
leave
mov
ljmp
ret
push
mov
jno
stos
mov
test
dec
std
enter
psubd
dec
in
jge
add
std
pop
mov
or
clc
icebp
xchg
out
mov
pop
cmc
scas
push
test
jne
test
insl
pop
mov
lock
add
repz
adc
push
rorb
nop
and
mov
js
xchg
adc
adc
xor
mov
cmc
sub
into
pop
lods
in
xchg
adc
jo
mov
add
loopw
repz
movsb
xchg
lock
imul
xchg
pushl
cld
mov
mov
and
cmpl
mov
sub
in
nop
or
pop
int3
pop
mov
scas
in
push
xchg
out
dec
dec
ja
test
pop
imul
jp
int
shll
es
mov
cmp
mov
add
ret
push
sbb
pusha
dec
sub
xor
imul
out
pushf
and
sub
pop
int3
or
dec
out
sahf
repz
pop
ret
fwait
cwtl
std
sub
scas
jl
incl
ret
lock
add
push
pop
mov
push
jns
and
aad
push
ret
in
and
ds
loopne
stos
and
scas
push
jle
in
enter
xor
int
add
lret
fmuls
fcoml
mov
rcl
movsb
mov
rorl
clc
sub
sub
pop
mov
gs
inc
fildll
jae
arpl
stos
and
ds
bound
xor
adc
insl
push
in
pop
mov
fistpl
dec
mov
popf
lret
pop
cmp
enter
jl
enter
data16
jp
pop
iret
out
lods
in
cmpsl
sbb
insl
dec
xchg
sbb
negl
popa
pop
xor
mov
add
popa
push
xchg
cmp
or
jnp
lods
dec
adc
dec
andl
mov
js
and
imul
xchg
jns
adc
mov
dec
cmp
repnz
sub
jecxz
sub
aaa
cmp
adc
xlat
iret
xor
push
add
mov
insb
mov
jp
jno
pop
insl
loope
out
mov
repz
test
push
repz
pop
adc
push
push
sbb
or
push
fimull
xchg
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
sbb
and
mov
adc
adc
cmp
fcoml
or
pop
xchg
es
mov
enter
dec
cmp
jl
mov
sub
xlat
fs
dec
shrb
xor
cmp
movsl
pop
les
pop
int3
adc
jae
or
clc
popa
cmp
lret
jle
mov
divl
mov
hlt
aas
mov
jo
xchg
out
xlat
ds
lret
decl
dec
sbb
mov
jl
pusha
sub
jge
into
cmpsl
lea
sbb
test
add
inc
push
jmp
mov
pop
mov
sbb
inc
in
jg
add
leave
movsl
sti
xor
arpl
jl
daa
fwait
dec
les
idivb
ds
fisubrl
inc
mov
pop
mov
int3
inc
or
out
js
mov
mov
or
ret
data16
out
dec
aaa
add
enter
or
sub
pop
fadd
insl
cmp
shlb
xchg
pop
xor
xchg
sub
mov
jnp
adc
jle
in
bound
aas
movsl
call
or
out
scas
and
insb
ds
lods
sti
push
jp
dec
mov
jge
pop
and
fsts
cld
cmpsl
insb
mov
cmp
stc
les
mov
pusha
pop
cld
lods
mov
repnz
xchg
mov
imul
sbb
xlat
in
mov
xor
pop
xor
cmpsl
push
out
add
adc
and
ja
and
test
sub
cmp
xorb
cld
lock
jne
sub
xchg
pop
push
pushf
sub
aas
mov
jmp
xchg
aaa
test
fisubrs
push
mov
inc
js
je
push
movsb
cld
movsl
inc
push
ret
mov
mov
push
pushf
ja
mov
aam
movsb
fcoms
jge
dec
loope
cmp
or
ds
and
sbb
xchg
ret
xorb
mov
sbb
cmove
insl
mov
pop
jg
jae
xlat
out
inc
push
insl
jmp
mov
hlt
test
mov
jnp
shll
stos
imul
mull
xchg
pop
imul
push
scas
mov
stos
mov
test
test
add
fadds
fcoms
push
stos
shl
orb
pop
push
adc
sbb
jl
jecxz
adc
jnp
pop
popa
ja
mov
mov
and
sbb
and
dec
jmp
jecxz
inc
pop
aam
cmp
repnz
xchg
jg
notl
dec
mov
push
dec
cmp
lock
add
cli
sub
insb
mov
fisubrs
repnz
cs
insl
in
hlt
xor
pop
outsl
mov
out
bound
dec
fisubrs
in
mov
bnd
ret
out
fwait
pop
test
movsb
jae
movsb
popf
popa
add
call
insl
mov
jmp
fisubrs
sbb
js
cmp
cmc
fnstcw
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
inc
call
fists
adc
in
outsb
inc
push
xlat
nop
mov
jp,pn
lret
mov
addr16
mov
or
cmp
and
or
adc
fnstsw
cmp
dec
push
sti
pop
jg
jno
mov
ffree
mov
add
in
mov
adc
rorb
and
adc
add
cmpsl
out
gs
and
xor
fdiv
jnp
cmp
fcoms
jne
xor
jb
aad
ret
addr16
flds
ljmp
pop
ss
push
jbe
jg
mov
mov
or
inc
or
ret
add
push
pop
jmp
mov
cmp
xchg
popa
pop
sbb
mov
aas
inc
xchg
ds
lret
adc
jecxz
aaa
xor
pop
shrl
hlt
cld
int
and
sub
push
dec
int
sub
lea
or
aaa
mov
dec
sahf
loop
outsl
adc
loop
add
ss
jno
mov
pop
sub
mov
out
fisttpl
mov
dec
cli
and
in
cmpsb
lcall
cmpb
loope
adc
jne
scas
cmp
inc
and
jnp
ret
pop
arpl
jo
aad
lods
mov
sub
dec
mov
pop
inc
push
les
push
movq
cmp
jns
negl
or
loopne
pop
dec
insb
stc
mov
push
loop
jp
jbe
cmp
xchg
lea
gs
sub
fisttps
adc
sahf
pop
data16
lock
cmp
repz
ret
les
pushf
or
movsl
fnstcw
sub
mov
cwtl
std
cwtl
ja
aad
loop
int3
cli
ss
sub
xchg
inc
jmp
and
adc
mov
inc
inc
cmp
cmp
and
addr16
fwait
mov
mov
push
aas
mov
xchg
and
mov
fsubrl
fidivs
daa
imul
aam
pop
sub
jb
sbb
pushf
jmpw
mov
aaa
or
mov
adc
rcrb
adc
rcrl
fdivs
scas
ja
loopne
xchg
retw
adc
lret
cmp
fwait
mov
cmc
sbbb
decb
repz
inc
std
flds
push
pusha
outsl
or
shrl
insb
repz
adc
hlt
fucomi
jbe
mov
notb
pushf
add
mov
inc
repz
pushf
in
push
fucomp
jmp
into
pop
jp
and
aas
test
jbe
cmpl
test
mov
rol
dec
int
imul
jno
inc
leave
mov
loope
mov
or
in
aaa
cmp
rclb
test
pop
add
mov
aad
test
lret
out
int3
jbe
sbb
stc
mov
dec
cmp
pop
add
shll
test
pop
inc
nop
sarb
cmpsl
cmpsl
add
lcall
or
sbb
mov
mov
jbe
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
jle
jl
adc
adc
loope
and
pop
cmp
push
stos
outsb
cmp
movzbl
popa
repz
sbb
mov
jmp
clc
stc
push
stc
fs
push
iret
call
xor
inc
clc
lock
pop
nop
testl
mov
es
loopne
push
fstpt
fwait
loope
movsb
mov
imul
stc
jbe
push
xchg
in
je
int
sete
test
nop
jnp
push
mov
jle
dec
inc
jb
cld
enter
pop
push
shl
rcrb
mov
lcall
jno
movsb
dec
shl
nop
xor
dec
ret
lret
inc
sbb
mov
insb
or
inc
stos
dec
inc
es
pusha
mov
rcrb
push
fimuls
fmull
and
sbb
fwait
dec
scas
push
sti
jae
pop
lock
lods
std
test
jge
call
inc
imul
mov
fists
or
punpcklwd
or
jp
or
inc
add
jne
xchg
inc
rcrb
sbb
fwait
xchg
fstps
xchg
out
lahf
mov
dec
xchg
hlt
sti
int
fisttpl
sub
into
sbb
or
jb
push
clc
fsubrs
jp
jl
sbb
lret
out
xchg
flds
jmp
dec
adc
repnz
test
test
sbb
je
into
imul
in
mov
repnz
pop
cmpsl
js
rorb
cmp
cld
jno
dec
jmp
js
sbb
mov
add
and
mov
pop
in
out
outsb
cld
sbb
stos
push
add
mov
cmp
repnz
inc
dec
xchg
jmp
push
dec
add
or
pusha
imul
leave
test
popf
ret
push
jmp
into
call
and
stos
pop
or
sbb
pushf
mov
sub
or
pminsw
test
mov
mov
ss
out
pop
jbe
js
cmp
pop
testb
addr16
jb
sahf
insb
mov
movsl
mov
inc
adc
popa
xor
popf
adc
inc
mov
mov
rolb
adc
nop
push
jo
push
aaa
cmpl
aaa
push
insl
mov
loope
fiaddl
call
dec
enter
mov
sahf
pop
lock
dec
mov
pop
gs
cmp
and
jecxz,pn
jle
push
imul
je
test
xor
fucomip
add
jg
js
xor
dec
inc
pushl
xor
xchg
cmp
aas
fistpll
mov
cmp
fs
pushf
lods
dec
inc
icebp
push
inc
xorl
sti
mov
mov
mov
inc
in
push
pop
xchg
movl
dec
mov
pop
repnz
aam
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
ret
cmp
adc
adc
cwtl
aam
xor
mov
mov
fwait
pop
add
sbb
fyl2xp1
lods
lods
mov
gs
sbb
inc
sbb
je
lock
cmp
pop
fiadds
in
dec
imul
cs
pop
scas
rclb
scas
sbb
cmp
pop
dec
pop
cmc
outsl
das
icebp
adc
xchg
push
test
in
sub
mov
mov
xchg
iret
aas
pop
clc
les
or
push
movsl
insl
or
push
adc
mov
mov
sbb
mov
push
adcb
andb
jae
lods
xchg
inc
pop
popf
clc
jmp
xor
sti
pop
mov
lret
xlat
cld
wbinvd
sub
cmp
push
popf
push
mov
cmc
loop
mov
repz
mov
sarb
out
imul
mov
pop
mov
adc
mov
es
cmp
repz
inc
testb
test
jp
adc
jns
pop
and
or
xor
dec
jecxz
or
and
inc
enter
xchg
fcoms
int
or
daa
push
stos
jle
and
jno
mov
idiv
psrad
outsl
fucom
jne
push
and
fiadds
cmp
cmp
lret
and
jl
jo
xor
daa
bound
in
jmp
stos
mov
bnd
push
cmp
arpl
jle
sbb
enter
in
into
enter
jo
out
adc
mov
sub
push
xor
insl
lods
test
shll
pop
jnp
not
shlb
js
adc
cmp
repz
pop
enter
cmpsb
jge
mov
aaa
mov
ret
loopne
idiv
mov
sbb
dec
cmp
jmp
icebp
push
or
push
mov
andb
pop
pop
scas
movsb
xchg
cltd
mov
es
scas
push
mov
addr16
lock
pop
hlt
mov
and
jb
jg
mov
pop
out
roll
jmp
lods
out
cmp
sub
imull
int3
pushf
add
dec
sbb
xchg
dec
adc
int
insb
rclb
call
xor
iret
xchg
jmp
jns
sbb
pop
out
or
cmpsb
fldl
xor
dec
scas
lock
add
or
pop
mov
movsl
fnstsw
outsl
sbb
push
xchg
fsubrs
add
push
inc
dec
ljmp
push
or
lahf
inc
outsl
jne
and
cmp
push
ljmp
sbb
mov
and
mov
outsb
sub
test
test
pop
std
push
dec
dec
sahf
fldcw
push
cbtw
out
punpckhwd
je
cmp
icebp
sub
add
stos
js
push
mov
aam
lahf
lret
iret
or
and
addr16
add
inc
enter
nop
pushf
cmp
xchg
repnz
stos
es
mov
aam
mov
push
jmp
cld
movsl
lret
xor
stos
add
cltd
cld
leave
mov
xlat
fdivs
leave
fstpt
dec
cmp
and
jns
adc
pop
mov
jnp
mov
and
ret
std
mov
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
lods
mov
adc
adc
orb
fmuls
push
ljmp
imul
call
push
mov
jno
enter
mov
test
fsubrl
divb
mov
into
mov
inc
lods
imull
sbb
mov
mov
nopl
pcmpeqd
dec
or
pop
cmp
fcmovbe
in
lea
dec
pop
mov
dec
mov
popf
test
adc
mov
pop
ret
fcoml
adc
or
sbb
inc
push
dec
pop
pop
mov
adcb
cmc
iret
pop
daa
addl
scas
outsb
mov
pop
popf
push
sbb
int3
andb
mov
les
and
mov
dec
lret
mov
add
loopne
dec
push
divb
jle
pop
sbb
xchg
cmpsl
rol
cli
scas
push
std
aam
cmp
cmp
call
mov
pushl
pop
mov
xorb
pop
pop
es
ret
add
mov
pop
or
adc
sbb
sbb
stos
js
repz
dec
push
insb
and
outsb
sub
and
jl
sarl
dec
int
addr16
cwtl
daa
hlt
lret
or
cmpsb
dec
dec
jle
rcrl
out
lock
sahf
lods
pusha
jle
mov
add
dec
mov
mov
call
sahf
adc
sub
mov
sarb
xchg
mov
inc
push
adc
mov
and
arpl
and
mov
data16
fs
bound
mov
pop
mov
jg
enter
pop
hlt
jl
adc
mov
xchg
jbe
jg
mov
ja
jg,pn
cmpsb
sub
pop
inc
enter
pop
pop
mov
pop
or
pop
xchg
notl
les
dec
adc
or
enter
shlb
push
adc
push
clc
and
mov
insl
scas
daa
dec
mov
or
xchg
ret
cli
pop
inc
or
jnp
mov
ret
jge
add
popf
testl
or
jp
pop
sub
cmp
dec
push
xchg
sbb
ss
jns
cltd
sar
mov
add
jbe
pop
cmpsl
push
stos
mov
and
out
dec
or
sbb
pop
jecxz
icebp
leave
cld
mov
xor
push
dec
ljmp
jno
sub
shll
popf
fidivrs
leave
cmp
push
add
cmc
lods
fnstsw
leave
mov
or
or
cld
adc
cmpsb
daa
mov
mov
xchg
int3
iret
sub
pop
scas
sti
lcall
es
and
add
lock
inc
jb
push
dec
lahf
loope
shll
inc
xchg
or
and
push
sub
aad
fnstsw
pop
add
push
xor
mulb
les
orb
xor
mov
mov
call
add
cmp
aaa
mov
in
cmp
repnz
dec
and
lret
xchg
and
ds
or
hlt
pop
cmp
sub
fstl
jbe
pushf
xorb
sub
pop
add
xor
adc
lret
mov
sub
mov
lods
xor
repnz
mov
xlat
push
sub
jecxz
es
decl
repnz
and
setl
pop
std
jnp
xor
xchg
sub
fs
mov
add
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
cwtl
stos
loopne
cmpsb
lock
push
lret
jmp
mov
xlat
mov
rcll
push
adc
divl
lret
adc
push
add
test
scas
pop
repnz
popa
jno
test
in
inc
shll
fsubs
call
ret
push
lods
and
enter
popa
enter
pop
fldcw
cmp
mov
out
inc
repz
movsl
pop
test
dec
jns
push
push
divl
cmc
ret
xor
loop
inc
test
mov
popa
mov
push
cs
adc
add
adc
sbbl
fidivrs
mov
push
inc
out
dec
add
add
jmp
out
sub
sti
ret
cmc
jb
jge
or
mov
jge
rorl
mov
add
aam
or
dec
mov
std
and
push
sbb
adc
imul
push
aas
addl
aas
shrl
push
repz
sbb
mov
cmpsl
leave
jo
fnsave
mov
notb
data16
dec
pop
push
mov
aad
xchg
or
cmp
scas
xchg
mov
jecxz
ja
mov
wrmsr
into
iret
lcall
cmp
loop
and
cmp
ret
ljmp
push
push
lods
cmp
lods
mov
pushf
push
das
movsl
xor
xor
dec
jl
fidivrs
fstl
jmp
mov
rcl
movsb
cwtl
insb
xchg
adc
dec
push
test
jmp
add
test
jb
fs
and
in
jno
xchg
repnz
push
pop
insb
sarl
lods
sahf
dec
mov
scas
push
push
and
and
jne
and
lock
repz
notb
daa
mov
mov
int3
or
or
insl
push
push
jle
shll
xchg
test
jl
inc
pop
jmp
js
data16
lock
test
cld
or
or
add
mov
xor
loopne
stos
add
outsb
xor
xor
pop
lret
jg
out
push
mov
in
mov
sbb
dec
sub
int3
dec
sub
pop
test
dec
cmpsb
sub
or
cmc
es
add
call
mov
or
xchg
pop
test
lds
fs
test
test
in
add
scas
test
nop
dec
scas
movsl
sbb
call
lods
xchg
lea
scas
sbb
jecxz
movsl
sub
pop
pusha
xchg
or
xchg
jo
lahf
mov
xor
mov
lods
sti
in
adc
jmp
dec
movsb
or
in
push
stos
ret
insb
js
xchg
sub
icebp
pop
or
jb
iret
stc
or
stc
addr16
fidivs
loope
jo
clc
sub
dec
test
sar
test
push
jb
inc
clc
pop
movsl
stc
mov
sbb
test
mov
test
lock
sbb
fs
dec
gs
mov
sub
mov
js
call
mov
xor
aaa
adc
mov
popf
cmp
or
cmp
insb
in
dec
aaa
pop
cmp
push
sub
and
cmpsb
es
out
jo
lods
mov
mov
inc
clc
mov
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
fwait
sarb
adc
adc
cmp
loop
lea
jne
sbb
mov
ror
fdivr
inc
rorb
loopne
fisttpl
lods
fildll
push
mov
add
mov
and
push
or
fists
mov
repz
pop
mov
loope
mov
mov
test
ret
fiadds
mov
xlat
dec
add
cmp
in
bound
fistpl
not
push
movsb
xchg
lret
or
ljmp
sbb
jecxz
inc
sbb
in
adc
adc
dec
sub
push
cli
add
dec
daa
dec
hlt
pop
mov
inc
and
mov
jo
xchg
loopne
sbb
pop
mov
sahf
mov
jnp
xorl
mov
setae
clc
dec
push
movsl
dec
mov
movsl
mov
and
or
push
jg
mov
mov
sbb
sub
repnz
bswap
sub
das
jbe
jmp
imul
adc
ljmp
std
jbe
pop
push
ja
jecxz
xor
cmp
mov
lcall
imul
std
sbb
xor
ss
call
xlat
scas
fwait
dec
mov
sbb
push
sahf
mov
cwtl
pop
lcall
das
xchg
filds
jl
sahf
popa
shlb
lds
fldl
xchg
cmp
add
nop
jbe
xchg
sub
movsb
cwtl
int3
pop
fsubrs
popf
mov
inc
xchg
movsl
sbb
sbb
outsl
push
jge
xor
jmp
dec
imul
cmc
popa
pop
popf
testl
xchg
movsb
cli
adc
add
and
lds
sti
push
jnp
xor
fildl
jmp
insb
cwtl
mov
fcoml
pop
mov
jl
sub
mov
cmp
test
lods
jecxz
sub
add
pop
div
mov
out
dec
rcrl
sub
sahf
mov
shl
dec
jae
andl
addr16
aad
add
or
nop
cmpl
in
pop
arpl
out
idiv
xchg
imul
push
leave
outsb
fs
arpl
jecxz
inc
push
adc
xchg
push
cmp
stos
push
mov
adc
push
imulb
outsl
cmc
push
insb
push
sbb
outsl
xchg
pushf
mov
scas
cli
dec
loop
cmpsl
xor
jb
leave
mov
stos
mov
test
xor
jb
and
out
andl
add
arpl
sbb
jno
inc
fsubrs
out
pop
cmpsl
push
and
daa
cltd
pusha
mov
xchg
or
xchg
push
je
scas
push
test
add
push
push
rorl
sub
addb
test
push
cmp
dec
xor
pop
mov
push
pop
inc
int3
rorl
and
cmc
or
stos
xor
push
ljmp
cs
aaa
imul
movsb
push
jge
loop
imul
pop
add
cld
mov
push
jge
das
stc
je
mov
dec
pop
or
jbe
call
mov
adc
add
in
les
dec
shrl
fisttpll
fwait
paddsw
xor
stc
or
jne
mov
mov
mov
xchg
sub
add
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
lods
gs
adc
mov
sub
xor
xchg
repnz
cltd
frstor
sbb
stos
push
fnstcw
xor
leave
pop
jae
sbb
aaa
lea
push
sbb
push
xchg
es
adc
or
add
cmp
cmpsl
loope
dec
cmpsb
stos
gs
mov
mov
xor
mov
adc
icebp
mov
or
out
aas
stos
imul
or
mov
adc
cltd
inc
andb
push
scas
pop
lret
fidivrl
mov
add
cwtl
dec
mov
sbb
sub
ret
pop
adc
jo
mov
sti
scas
add
fsubrl
enter
sub
push
push
aam
and
sbb
mov
fnstcw
or
lock
sbb
loope
into
jl
jae
pushf
aas
nop
add
xor
add
int3
adc
mov
je
sub
add
test
add
push
cmp
bound
push
xor
popf
push
fsts
std
lods
out
sahf
mov
xchg
jl
test
mov
lcall
mov
cmpl
push
lret
sub
mov
mov
or
push
roll
insb
inc
pusha
ljmp
ja
cmc
iret
jp
sahf
cmpsb
and
push
xchg
fldenv
xor
jbe
pusha
mov
insb
hlt
jp
fs
inc
movsb
mov
cmp
add
leave
ds
jle
in
sub
dec
inc
xor
mov
xchg
test
sub
mov
cmpsl
loope
push
mov
mov
div
lea
lcall
sbb
emms
mov
mov
lods
aas
pop
pop
xor
sahf
and
inc
xor
sbb
lds
movsb
das
ficoml
cld
lahf
jae
dec
jle
dec
xor
mov
cmpsb
add
dec
cmp
std
mov
sbb
fstpl
jae
xchg
mov
imul
or
mov
mov
or
mov
add
call
dec
xor
pop
xchg
test
mov
cmp
jns
mov
xchg
or
daa
in
adc
mov
dec
and
fld1
mov
inc
shrl
ficoml
push
out
pop
nop
divb
push
push
sbb
sbbl
mov
xchg
leave
out
lods
mov
mov
das
imul
adc
nop
leave
aam
pop
arpl
pop
mov
add
jae
stos
aaa
ja
adc
clc
mov
imul
int3
cmp
xchg
flds
rcl
mov
or
addr16
ret
or
pop
inc
test
mov
xchg
mov
mov
ja
loop
dec
addr16
out
push
enter
je
rorl
inc
cs
in
loop
icebp
xchg
stos
mov
mov
filds
sar
cltd
and
fucomi
pop
aas
pop
into
mov
cmc
sbb
xor
out
xchg
dec
movsl
loopne
push
dec
imul
jae
flds
cmp
mov
repnz
testb
jo
mov
mov
test
lds
pop
negl
jno
jl
inc
pop
jns
pop
add
sbbb
pop
mov
inc
xchg
mov
imul
cmpsb
jg
pop
aam
mov
xchg
fxch
dec
cmp
lods
sbb
mov
sbb
inc
dec
in
pop
or
pop
insb
fistpl
push
ret
loop
dec
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
or
jle
push
adc
mov
adc
inc
shl
cmpsl
mov
fadds
movsl
push
xchg
lcall
mov
push
push
push
es
negl
mov
pop
aam
xor
pop
fxch
loope
addr16
bound
hlt
js
xchg
leave
jle
std
fcoml
je
adc
repnz
andl
inc
mov
or
inc
xchg
or
mov
push
pop
or
jae
rorl
cwtl
loopne
cli
inc
shlb
repnz
xlat
xor
pop
jmp
cmp
push
lea
ss
xor
xchg
or
mov
data16
fiaddl
dec
test
mov
cs
jmp
sbb
cmp
mov
xorb
add
ss
ds
add
sbb
jmp
mov
pop
pop
sub
push
mov
xor
movsb
cltd
rcrb
mov
push
call
push
icebp
test
pop
jae
xorb
pop
jns
cld
dec
mov
shl
push
scas
push
mov
dec
inc
arpl
mov
ljmp
popa
lock
lret
fwait
sub
mov
int
in
pop
add
fsts
stc
int
rep
or
loop
xchg
loopew
inc
and
add
leavew
mov
pushf
and
mov
das
pop
mov
fbld
cmp
ftst
loop
testl
xchg
aas
idivb
inc
add
mov
add
push
cwtl
mov
adc
leave
xchg
test
lods
fiaddl
call
fwait
adc
sub
xchg
mov
jle
insb
or
push
jg
daa
loop
icebp
loopne
ljmp
jecxz
notl
insl
adc
rcll
mov
bound
aad
push
std
fistps
in
js
test
adc
lret
inc
frstor
in
movsb
xchg
inc
out
xor
nop
iret
mov
pop
fbstp
shlb
lods
mov
xchg
pop
lret
jle
xchg
lret
lcall
in
xchg
push
loop
ds
or
mov
repz
dec
sahf
dec
mov
je
dec
pop
inc
scas
push
mov
pop
sbb
and
xor
movsl
sbb
bound
xchg
shlb
aaa
xchg
push
or
sub
cs
push
or
popf
test
shrl
fistps
mov
or
and
cmp
xor
cltd
pop
repnz
add
gs
jmp
divb
movups
or
movsl
out
movsl
mov
inc
das
jecxz
sub
stos
test
cmp
stos
xchg
mov
test
cmpsb
aaa
xchg
pop
inc
fldt
test
jne
jo
mov
dec
je
int3
cwtl
sub
imul
pop
adc
mov
je
iret
sarb
sub
xor
fwait
dec
xor
mov
lahf
lcall
xchg
adc
xor
cmp
jle
arpl
mov
es
add
ljmp
sub
aam
subb
adc
loop
lods
lahf
lods
jbe
loopne
mov
loopne
aam
adc
fwait
cmpsb
cmp
dec
mov
adc
pop
dec
sbb
dec
lret
pusha
fimuls
mov
outsb
enter
sbb
push
xor
lock
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
stos
xchg
dec
adc
mov
adc
out
jg
sbb
xor
lret
jmp
push
inc
xchg
mov
and
mov
push
add
push
bound
negl
cmp
fimuls
jmp
xchg
and
data16
pop
fldl
out
and
and
test
lahf
cmpsb
ret
xchg
clc
push
mov
mov
out
or
push
into
subl
inc
lcall
lds
gs
xor
push
test
xchg
mov
cmp
mov
xchg
jbe
mov
sti
push
jae
mov
insl
mov
sarl
or
pop
fcoml
pop
test
bound
jns
mov
cld
daa
xchg
push
cli
dec
enter
mov
xchg
imul
es
daa
pop
xchg
push
popf
sbb
dec
dec
stos
pop
add
pushaw
dec
fcomp
adc
daa
sub
cmp
outsl
sub
fwait
test
cmp
insl
mov
xchg
inc
enter
daa
push
pop
fs
clc
stos
pop
lds
ljmp
adc
adc
mov
stc
psubsw
mov
call
es
jae
icebp
xchg
dec
inc
cmp
xchg
jb
sbb
sub
shr
sub
enter
int3
inc
addb
mov
ljmp
sahf
sbb
movsl
and
shrb
adc
adc
in
movsb
out
addr16
xchg
push
cld
or
cmpl
pop
sbb
movsb
aas
imul
test
fwait
pushf
xchg
xor
pop
stos
out
sbb
push
mov
andl
xchg
and
xchg
inc
and
mov
xlat
dec
data16
out
push
adc
shl
push
mov
push
repnz
das
loope
xchg
mov
or
in
test
icebp
push
inc
inc
xchg
mull
cs
jmp
fcoml
addl
cmp
cmp
inc
pusha
loopne
fs
addr16
mov
push
movsl
fdivl
repnz
scas
cli
lcall
shr
out
rolb
inc
push
mov
add
insb
adc
mov
add
push
mov
push
cmpsb
insl
mov
bound
inc
push
and
jp
add
xlat
jae
ret
mov
gs
sbb
test
push
jge
fisubl
jnp
cmp
inc
std
push
dec
adc
adc
sbb
xchg
cwtl
jmp
xor
xchg
cmc
aas
push
cmp
data16
mov
dec
cld
hlt
je
push
insl
jnp
imul
mov
pop
inc
mov
dec
bound
adc
in
enter
cmp
stos
mov
insb
lods
imul
mov
mov
sbb
call
jecxz
imul
popf
jecxz
shrd
fcmovnu
add
xchg
mov
dec
sbb
or
ror
cmp
sahf
sbb
pop
or
xchg
popa
sbb
sub
push
push
add
xor
push
enter
lea
loope
repz
mov
mov
mov
or
into
das
mov
pop
push
sub
mov
mov
fwait
out
and
or
inc
lret
jae
stos
cld
aam
scas
loopne
scas
add
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
mov
jbe
xor
adc
adc
jl
loopne
mov
hlt
push
call
sbb
test
xchg
ret
sbb
jmp
leave
xchg
notb
cmp
adc
int3
cltd
xor
sbb
ret
fcompp
adc
ficompl
ret
cs
sbb
xchg
mov
in
push
push
arpl
mov
inc
sbb
lcall
jnp
adc
aam
lret
add
in
sahf
sub
jo
jmp
std
xorb
cmp
push
out
test
cli
fs
aad
mov
enter
mov
inc
imull
mov
push
xor
adc
add
in
sub
nop
and
push
fsubp
fsubrl
sbb
dec
or
dec
sub
xchg
fildl
das
shll
int3
ret
out
push
lods
jl
jno
das
clc
cmp
sub
pop
fwait
mov
jecxz
pop
adc
or
imul
mov
mov
push
aad
mov
xchg
cmp
adc
cld
cmp
dec
arpl
xorl
add
pop
jns
andb
push
push
cli
mov
popf
enter
sbb
xchg
jl
jge
mov
xor
hlt
and
mull
aas
or
das
push
mov
fmuls
inc
jo
sti
jb
mov
gs
xor
repnz
jbe
in
mov
cmp
in
and
or
add
dec
in
popa
jmp
sbbl
jle
int
mov
and
add
and
or
je
sub
lea
and
mov
je
shl
push
out
out
mov
in
or
jbe
movsl
cmpsl
in
mov
cmp
pop
pop
add
daa
and
lds
mov
cmp
mov
addb
sti
pop
pop
sub
xchg
insl
sub
popf
and
lods
fwait
dec
mov
dec
das
push
add
jle
mov
scas
or
ss
call
xor
roll
inc
test
push
jl
das
cmp
ret
lahf
loope
push
popa
or
gs
call
adc
add
fdivrs
orb
sub
les
or
push
mov
aas
test
fcompl
push
pushl
inc
cmp
push
arpl
pop
rclb
hlt
and
jmp
mov
pop
jnp
iret
push
mov
dec
movsb
leave
aaa
int3
push
js
add
adc
mov
jne
and
adc
movsb
fwait
loope
iret
test
cmp
push
mov
dec
orl
aad
daa
sbb
lcall
mov
mov
cltd
cmp
cmp
leave
pop
scas
push
decb
stc
lods
leave
dec
hlt
mov
dec
stos
mov
push
lahf
xchg
rorb
les
enter
xchg
sbb
xchg
dec
or
fnstsw
gs
xchg
sub
lcall
clc
sbb
daa
add
and
fwait
lcall
push
jo
popa
rcr
stos
jl
jne
xor
push
jne
mov
flds
cwtl
xchg
je
jne
aam
and
adc
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
lods
aad
adc
mov
adc
push
orl
andb
mov
mov
fistpl
setns
xor
sbb
lret
xor
pop
je
clc
and
outsb
ss
xchg
out
jae
sti
mov
sti
loopne
mov
mov
sbb
ja
xor
hlt
jp
and
jge
pop
jae
es
adc
cmp
rclb
int
leave
push
pop
insb
push
add
xlat
aaa
std
shll
fs
and
push
test
xchg
mov
into
loopne
scas
int
repnz
jle
movsb
dec
cmp
sbb
ret
push
xchg
leave
ret
fcompp
daa
lahf
fstpt
cmp
nop
ljmp
rclb
jl
mov
jae
mov
xor
pop
std
xchg
cmpsl
xchg
fsubl
mov
pop
pop
dec
insb
cmpsb
sbb
mov
arpl
pusha
or
sbb
pop
shll
inc
mov
fistl
mov
add
arpl
xor
push
lea
and
gs
lahf
outsl
aaa
roll
les
cs
shlb
pop
je
loop
fisttpl
push
jno
or
push
xchg
mov
lahf
mov
dec
xchg
and
cmp
jmp
xchg
jns
in
or
call
in
mov
jo,pt
repz
cmp
bound
dec
loope
cmc
lcall
inc
in
mov
pop
movsl
test
and
fs
daa
cmpsl
push
push
adcb
fstpt
ljmp
mov
loopne
push
jbe
jecxz
inc
or
subl
lods
mov
insl
movsl
imul
xor
push
andb
push
fsubrl
dec
push
cmp
pop
fldenv
icebp
hlt
pop
arpl
sbb
testb
aad
or
xchg
adc
or
into
into
stc
or
dec
mov
arpl
loop
mov
sbb
ljmp
inc
mov
xor
test
cmp
pop
ss
and
dec
loop
dec
rcll
push
jno
sub
popa
mov
repz
or
pop
xor
sub
mov
dec
lods
and
add
jecxz
lahf
hlt
xchg
lret
lds
jo
push
les
pop
pop
mov
xchg
dec
cmp
ds
dec
aaa
cmp
xor
pop
movsl
subb
sbb
mov
imul
mov
dec
daa
imul
mov
sbb
xor
mov
nop
lahf
int3
xlat
mov
cmp
mov
loope
arpl
mov
repnz
mov
filds
inc
jl
sub
lret
daa
and
in
stos
xchg
xor
xor
es
xlat
or
or
mov
mov
fsubp
push
xchg
fadds
xchg
xchg
sub
jo
cmpsb
aaa
dec
xlat
lods
stc
push
inc
aam
cmp
pushf
or
aas
xor
iret
push
jmp
sbb
adc
fsubrs
call
inc
cmp
pop
add
adc
cmp
pop
ja
pop
cld
mov
or
shlb
les
mov
loopne
leave
clc
mov
lods
data16
or
jle
insb
adc
inc
cld
sbb
stos
mov
out
daa
int3
adc
jb
inc
pop
clc
pop
icebp
mov
push
stos
sbb
xchg
inc
addr16
mov
test
fs
add
pop
lret
fcmovne
cwtl
lcall
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
mov
adc
mov
adc
mov
mov
insl
fmull
gs
fstl
mov
mov
jge
outsb
xlat
add
dec
lds
shrb
dec
dec
or
push
outsb
loopne
mov
add
sbb
xor
xor
out
push
fs
movl
pop
push
jne
mov
ds
cli
sbb
pop
add
sarb
lods
inc
jp
push
sbb
and
rcl
xchg
in
and
lcall
xchg
cmpsb
mov
stos
fs
sahf
lcall
push
adc
mov
popf
cmp
dec
mov
sar
mov
jmp
or
in
call
cs
aad
mov
js
push
insb
mov
pushf
pop
jecxz
xor
ret
xor
adc
mov
bnd
xchg
inc
out
loopne
xor
addl
mov
clc
je
lds
mov
adc
rcrl
dec
mov
int
add
inc
xchg
inc
sbb
sbb
xor
pushf
add
aas
std
sub
test
outsb
inc
lahf
rorb
loopne
icebp
shr
sbb
push
test
icebp
out
popf
add
pop
lea
pushf
and
mov
out
cmp
daa
hlt
ret
sub
ljmp
or
xchg
nop
stos
mov
add
push
shlb
mov
and
jg
lock
pop
and
andl
xchg
movsb
cmp
sub
mov
add
aas
dec
lea
mov
daa
in
or
xchg
jbe
pop
adc
popf
aaa
xor
gs
repnz
pop
push
out
rcll
ret
cmp
outsb
jl
outsb
test
mov
loope
or
add
stos
outsl
cmp
sub
sbb
insb
repnz
pop
arpl
mov
push
enter
insl
xor
mov
inc
arpl
icebp
lcall
xchg
divl
cmp
into
inc
les
push
js
or
xor
addr16
enter
mov
int
mov
rcll
nop
jnp
mov
addr16
jle
mov
mov
push
int3
xchg
mov
sub
std
or
mov
faddl
loope
testb
mov
inc
ja
inc
in
pop
push
adcl
repz
inc
aas
int3
mov
jecxz
insb
adc
pop
adc
pop
test
mov
jno
add
push
xor
iret
nop
mov
jno
add
incb
push
or
push
xlat
xlat
fldcw
fwait
into
leave
jns
jl
shlb
push
or
sti
lds
mov
inc
shll
xchg
cltd
mov
in
cld
dec
into
mov
sub
outsb
rcrb
dec
mov
or
push
mov
adc
in
mov
imul
sub
daa
push
dec
pop
xchg
mov
fwait
lret
in
ja
jp
int3
aad
mov
test
push
xchg
cmp
mov
pop
dec
cwtl
inc
rclb
and
cmpsl
bound
cwtl
mov
addb
decl
ss
insb
push
pop
lea
mov
ja
mov
xchg
or
shll
cmp
mov
inc
cld
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
pushf
lods
or
adc
mov
adc
test
or
sbb
sub
sbb
pop
push
mov
inc
in
xchg
xor
xchg
sbb
leave
mov
fistpl
jno
push
decb
pop
cli
pushf
std
jecxz
fistps
jp
out
mov
dec
lods
push
pop
xorb
adc
mov
and
inc
lahf
sbb
xlat
mov
xor
ss
test
mov
les
jbe
out
push
les
icebp
mov
rcr
pop
adc
dec
jge
insb
pushf
int3
jne
jge
insb
sub
push
xchg
dec
cmpsb
mov
push
sti
mov
mov
out
daa
decl
pop
mov
mov
bound
leave
push
inc
sti
jnp
mov
cmp
lea
add
out
mov
adc
movsb
pop
jno
pop
lods
mov
inc
mov
mov
enter
ret
orb
leave
aad
test
or
mov
xchg
pop
adc
cld
dec
mov
addr16
jns
or
movsl
aas
mov
jo
xor
iret
xchg
out
int
jno
dec
fwait
inc
fistpll
sub
mov
ja
push
popf
jo
mov
or
cmp
outsl
sbb
dec
pop
leave
jp
jle
push
adc
xchg
clc
stos
cmp
dec
je
mov
inc
stc
shl
jns
push
adc
xchg
std
ja
aam
lret
into
cmpsb
scas
push
mov
repz
test
ss
stc
pop
xchg
ds
roll
aad
xchg
ret
fcomps
fildll
int
nop
xorl
movsb
jno
aad
pop
jg
cltd
and
in
lods
sub
and
inc
xchg
pop
xchg
stos
push
sbb
inc
arpl
jg
das
cwtl
sub
sbb
or
data16
lret
adc
lds
iret
mov
xor
stos
xchg
mov
stos
push
cmp
orb
cmpsl
movsl
sbb
pop
cwtl
jbe
cmp
dec
mov
leave
lcall
ss
bound
jp
add
xchg
imulb
pusha
pushf
jnp
dec
imull
dec
add
and
mov
jae
adc
ja
mov
shl
xor
mov
add
cmp
dec
xor
adc
inc
cmp
xchg
mov
inc
cmc
xchg
ffree
pop
into
fldl
mov
popf
fwait
push
and
xor
dec
add
jns
imul
fisttpll
sarl
adc
out
xlat
push
bound
mov
orb
imul
mov
adc
ror
inc
pop
push
add
mov
pop
sub
pusha
mov
cmp
mov
test
lret
cwtl
xchg
add
adc
cmp
stc
outsb
adc
or
lods
dec
xchg
dec
gs
cli
clc
fwait
push
adc
sahf
sub
scas
fistps
scas
adc
mov
push
pop
shll
push
pushf
icebp
xchg
dec
pusha
mov
leave
xchg
mov
sub
sbb
jge
push
scas
push
mov
mov
xlat
mov
jge
sahf
jb
lock
subl
lea
mov
cs
decl
movsl
add
in
jge
bound
jbe
and
cmpsb
ds
int
pop
mov
xchg
cmpsb
xchg
stc
xor
imul
repnz
jmp
inc
jae
insl
push
into
add
or
popa
xor
mov
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
fs
adc
mov
adc
sbb
js
cmpsb
lcall
cwtl
mov
sbb
popa
dec
aad
mov
inc
jge
pusha
xor
push
add
sub
sbb
lods
mov
vpunpckhbw
shrb
or
mov
mov
enter
inc
aas
inc
and
popa
cmp
jne
frstor
jg
jmp
cmp
mov
xchg
dec
jecxz
repnz
es
mov
lret
mov
push
or
mov
xchg
ret
pop
xchg
inc
adcb
pop
mov
xor
shr
add
inc
pop
in
mov
orb
fistps
push
sub
mov
xlat
adc
ret
pop
push
mov
pop
aad
pop
shll
mov
lahf
insb
loop
cltd
jl
test
dec
mov
mov
les
pop
mov
sbb
xor
movsl
rcl
xor
cltd
cmp
xchg
and
mov
push
add
mov
mov
pusha
push
pop
push
ljmp
lret
push
mov
mov
fsts
outsl
in
push
xor
daa
pop
mov
jmp
std
repnz
lret
pop
push
sub
inc
or
mov
push
push
xlat
dec
add
and
mov
adc
pop
sub
mov
pop
mov
int3
test
outsl
mov
movsb
xchg
xlat
jnp
mov
jp
loope
xchg
mov
je
mov
notl
pop
adc
dec
push
sbb
jne
cmp
mov
insl
sbb
movsb
fisttpl
cli
adc
mov
add
aad
sbb
xlat
and
std
loope
adc
ret
mov
mov
mov
cmp
xchg
xchg
cli
pop
outsl
cmp
aaa
cmp
in
out
addr16
insb
cwtl
out
push
pop
push
jmp
cmp
sahf
mov
movsb
mov
cmpsb
xor
shrl
into
inc
mov
xor
xchg
mov
mov
xchg
adc
ss
adc
mov
aas
push
xor
insb
imull
mov
adc
icebp
iret
xchg
pop
adc
dec
ret
cmpsb
push
iret
int3
movsb
call
rep
enter
ret
lods
push
cwtl
adc
mov
dec
mov
sti
in
or
idivl
pop
dec
push
xchg
pusha
inc
xchg
clc
dec
mov
cltd
add
cmp
ja
sub
mov
test
sub
mov
push
sub
mov
cmpsb
dec
out
xchg
push
stos
or
icebp
jg
mov
nop
iret
sbbl
mov
ja
outsb
out
mov
aas
inc
push
sbb
add
pop
jae
mov
cmove
repnz
call
and
adc
mov
stos
push
dec
imul
std
aad
into
cld
xor
push
cli
jmp
sbb
xor
adcl
xlat
mov
dec
testl
adc
push
adc
insl
jb
and
jns
fdiv
mov
or
add
push
test
or
xchg
xchg
jle
in
add
xor
int
push
mov
test
mov
or
imul
or
repz
imul
jmp
sub
xorl
cmp
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
cmp
sbb
adc
int
out
lcall
xor
mov
imul
jne
xchg
stc
inc
je
test
or
push
sub
aas
mov
or
fs
imull
jnp
and
mov
jns
scas
pop
ficomps
mov
fldcw
scas
bound
adc
sub
fcmovnb
and
push
or
stc
push
lahf
mov
mov
xlat
inc
sub
fidivrl
pusha
mov
mov
addr16
cmc
mov
mov
dec
pop
xchg
pop
data16
movsb
fwait
dec
adc
mov
leave
cmp
inc
frstor
push
push
fcomp
xchg
sub
xlat
mov
jg
loop
push
pop
lock
xlat
jp
loope
mov
les
imul
pop
push
push
mov
mov
push
xchg
ja
sub
icebp
rep
rcl
out
mull
ja
nopl
ret
enter
dec
xor
or
incb
inc
cli
pusha
sbb
loop
lret
rcrb
add
jno
inc
xchg
cmpsl
xor
sub
add
dec
fsubr
mov
dec
and
adc
xchg
or
push
imul
outsl
dec
dec
mov
dec
fisubs
lds
loope
pop
repnz
addr16
aaa
sub
clc
rcl
in
arpl
sbb
test
mov
in
xchg
xchg
push
shl
and
test
popf
pop
repnz
outsb
addr16
and
mov
iret
fwait
xchg
xor
test
sub
mov
int
sub
cmpsb
loopne
fs
adc
mov
inc
dec
call
push
mov
popf
adc
and
xchg
lret
loop
xchg
pop
jb
xlat
rcrl
cmpsl
inc
data16
popf
addb
adc
cld
adcb
cmpsb
adc
mov
jo
adc
push
hlt
push
ficompl
mov
out
icebp
lret
icebp
mov
hlt
dec
push
jp
ret
iret
or
dec
fs
fnstsw
cmpsl
and
mov
jmp
cmp
shr
rcrl
aaa
push
xchg
shr
mov
pop
mov
adc
pop
xchg
mov
out
xchg
push
jb
movb
hlt
jno
sarl
fwait
hlt
and
mov
insb
dec
movsl
mov
mov
push
popf
ds
or
mov
imul
shr
push
iret
sub
jle
out
add
fimull
mov
add
stos
loopne
sub
fldz
or
stc
or
xlat
pop
pop
mov
dec
aaa
lock
push
xchg
adc
pop
clc
push
seto
addr16
ret
orb
jmp
mov
pop
mov
xchg
bswap
xchg
push
mov
dec
pop
lock
sub
sbb
sbb
mov
push
jecxz
xchg
jno
xchg
mov
int3
sbb
push
jg
in
icebp
mov
inc
or
lea
das
or
jnp
sub
fsubs
testl
adc
xchg
shrd
sub
push
or
pop
jmp
mov
subb
pop
jno
push
inc
xor
in
jg
out
push
aaa
cmp
popa
unpcklps
lret
aam
fdivl
jno
cmp
sti
mov
mov
subb
aad
fstps
fadd
push
inc
mov
or
aam
mov
iret
mov
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
cltd
sub
cli
popf
ror
push
or
scas
push
mov
std
xor
and
mov
cmc
pop
xchg
jne
add
scas
ja
and
pusha
push
add
andl
cwtl
add
mov
fs
sub
dec
int
rcrl
in
pop
xor
jb
mov
js
pop
pop
dec
lods
sub
mov
xchg
jl
ret
and
movsb
mov
es
in
xor
dec
mov
jno
or
cs
pop
adc
fildll
xor
and
xchg
inc
dec
jge
enter
rcr
sti
and
jbe
fsubrs
aaa
xor
sbb
lock
or
fld
add
adc
mov
lods
cmp
hlt
jmp
add
xchg
cs
ror
cmp
insl
or
fcoms
cmp
cltd
and
je
cmp
pusha
pop
push
dec
or
jmp
leave
addr16
hlt
push
repnz
incb
xchg
fldt
mov
out
sub
les
adc
add
jne
cmp
orb
shl
loopne
mov
pshufw
xor
jecxz
sub
in
mov
enter
pop
cmp
inc
ja
cmp
jge
and
loop
int3
popa
mov
inc
sbb
mov
xchg
ss
jno
aas
in
mov
or
icebp
inc
xor
xor
cmpb
mov
into
fstl
hlt
ss
lahf
cmp
xchg
outsl
aad
fldt
insl
jbe
dec
mov
cmp
xchg
cmp
sbb
adc
cli
pusha
insl
imul
jecxz
scas
movsb
sar
dec
shrl
mov
add
xchg
adc
cwtl
or
jp
inc
jle
pusha
xchg
nop
mov
or
addl
dec
cmp
push
adc
out
imul
stos
push
clc
inc
iret
sarl
add
hlt
fwait
add
pop
daa
and
xchg
jg
mov
jno
repnz
scas
or
inc
jbe
leave
into
lods
loopne
inc
out
rcr
mov
cmpsl
imul
ja
stos
in
iret
fists
test
cmpsb
cwtl
inc
mov
enter
mov
inc
and
enter
and
leave
ljmp
in
addr16
xchg
ja
jb
mov
cmp
popa
idiv
loop
ds
aas
cmp
pop
das
mov
mov
adc
je
cs
loop
xor
fcmovb
jp
dec
out
fidivrl
pop
or
aas
xor
adc
pop
dec
sahf
or
rcll
lock
xor
repnz
jno
xchg
leave
hlt
js
push
mov
xchg
cmp
adc
jo
jmp
pop
mov
stos
or
fldenv
cmp
insl
mov
lcall
nop
lret
push
mov
sbb
into
sbb
pop
les
in
mov
cmpsb
add
adc
xchg
imul
orb
addb
shl
cmp
pop
jae
aaa
mov
pop
test
mov
insl
arpl
jnp
in
xchg
cmpl
pop
dec
mov
shlb
into
decl
mov
popa
cmp
enter
jg
lret
xor
imul
push
xor
dec
add
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
rolb
adc
lahf
pop
sbb
mov
jae
std
sbb
adc
sub
cmp
stc
scas
or
rcll
out
pop
cmp
in
test
loope
rorb
xchg
xchg
sbb
rclb
xchg
push
push
movsl
test
xor
push
dec
pushf
fdivrs
lret
aad
xchg
sti
lret
stos
push
fsubl
out
jb
cwtl
add
adc
and
aas
pop
push
cli
xor
cmp
push
cmp
fcoml
sti
into
test
popa
jecxz
loope
mov
lcall
push
mov
lcall
insl
mov
lret
xchg
stc
lods
or
test
cmp
outsb
imull
inc
pop
arpl
xchg
insb
pop
mov
adc
add
fwait
in
cmp
jg
lods
sbb
enter
dec
cmp
sub
inc
fcmovne
cmp
ljmp
or
xchg
outsb
dec
push
lret
xchg
sub
mov
inc
xchg
and
fldpi
jmp
cs
lods
mov
xchg
xor
and
lret
and
jmp
ss
ljmp
mov
fstps
into
into
mov
mov
orb
lahf
xchg
ret
sbb
or
sub
mov
add
mov
ljmp
mov
sbb
lcall
xchg
push
rcrl
dec
add
dec
ror
aad
aad
sbb
popa
and
xchg
pop
sti
mov
push
mov
xchg
mov
repz
mov
push
sbb
int3
stos
fs
pushf
inc
fiaddl
sub
in
lods
clc
push
sbb
xor
negl
cld
clc
push
lock
cli
lea
adc
add
arpl
test
pop
imul
adc
ret
mov
or
xchg
xchg
or
jno
cmc
das
in
std
xchg
stc
outsl
or
insb
in
add
fiadds
or
repz
xchg
scas
jnp
cld
pop
mov
stos
rclb
outsl
movsb
jecxz
in
jns
rorl
push
xor
out
xor
repnz
aad
dec
xor
mov
in
fdivrl
mov
stos
xlat
pop
filds
data16
mov
jbe
dec
popa
leave
push
loope
pop
push
outsl
movsb
adc
xor
fwait
mov
mov
push
and
movsb
in
xchg
inc
pop
fwait
mov
shrl
sub
cmp
in
mov
orb
cmp
sub
and
int3
inc
sbb
lds
ss
and
ljmp
inc
call
call
jge
pop
cmp
lcall
aad
jecxz
add
sti
dec
iret
lods
loopne
jp
cltd
xchg
jns
jmp
mov
shrb
nop
lock
shll
cmpsb
cmpsb
addr16
sbb
adc
mov
cmpsb
or
dec
cmpsb
xlat
rcrb
test
into
or
dec
call
pop
lds
lret
cmpsl
sbb
in
pop
pop
adc
sbb
mov
rcrb
mov
loop
jmp
dec
adc
sbb
xorb
cli
and
or
mov
outsl
clc
and
push
ret
or
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
lahf
push
push
or
adc
cs
or
jbe
push
add
aaa
js
push
dec
mov
jbe
mov
fst
inc
popf
pop
icebp
ficoml
push
leave
inc
push
das
dec
xor
aam
jmp
in
mov
jnp
pusha
in
add
pop
std
loopne
int
mov
aaa
ds
andl
sub
pop
push
cmp
and
mov
jg
mov
push
sub
cmp
nop
test
pop
in
add
test
or
das
xor
popa
js
in
jge
and
mov
out
add
clc
adc
arpl
flds
scas
ja
dec
lds
in
and
xor
mov
xchg
sbb
das
xchg
cmp
cmpsl
rcl
mov
mov
xchg
sub
jmp
pop
into
insl
scas
jnp
cwtl
add
jl
xchg
adc
mov
sub
das
ret
jg
out
push
leave
insb
lret
psubusb
push
jecxz
inc
cmpsl
sarl
push
mov
jnp
mov
and
fnstsw
xlat
sti
rcrl
repnz
popf
dec
mov
test
mov
int
std
fisubl
inc
cmp
xchg
enter
jno
popa
rol
lahf
pop
inc
cld
adc
or
fwait
ret
mov
movsl
push
into
andl
movsl
data16
jmp
adc
lret
fiaddl
add
mov
push
sbb
pop
js
insb
add
lret
pop
jbe
sti
imul
jmp
fwait
push
nop
cmp
movsl
std
cmpl
xlat
jae
in
mov
push
inc
cs
or
mov
outsb
les
mov
arpl
cltd
push
sahf
les
shlb
pop
dec
sbbl
outsl
rcll
test
cli
test
fidivs
xchg
or
sbb
push
add
cld
decl
ret
or
inc
adc
ljmp
cmpsb
insb
fcomps
sahf
test
fdivl
sahf
sbb
test
hlt
mov
stos
pop
mov
out
mov
aad
mov
xor
jmp
xchg
fildl
pop
loope
ss
dec
testb
sbb
fs
add
jne
jge
mov
xor
xor
fstpl
mov
xchg
imul
sbb
jno
sbb
ja
test
cli
sub
or
les
daa
testl
jg
add
push
jg
pop
ljmp
js
lahf
scas
dec
mov
xchg
mov
xchg
cmp
or
andl
cld
jo
call
mov
mov
and
fidivs
decb
stc
mov
cmp
fdivl
adc
andb
cwtl
cltd
pusha
fimull
adc
sarb
cmp
imul
adc
movsb
mov
aad
fwait
add
stos
imul
notb
sub
pop
inc
pop
jne
in
xor
dec
add
push
fs
repz
in
out
xchg
mov
mov
and
jmp
jmp
xchg
mov
xchg
jle
pusha
movsl
add
int3
sbb
sbb
fcoml
in
cmpsb
int3
insb
sbbl
shl
lods
and
imul
mulb
inc
daa
aaa
jg
mov
xor
jmp
cmp
ja
pop
aaa
and
or
lods
test
adc
mov
adc
adc
push
xor
push
push
dec
popa
ljmp
inc
ficompl
out
cmpsl
xor
cmc
movsb
mov
ret
nop
jl
orl
sub
in
jecxz
pop
xchg
jmp
inc
mov
or
push
mov
sbb
mov
push
pop
sub
bswap
hlt
stos
ret
jno
xchg
imul
cmc
jb
sti
ss
rcll
mov
scas
adc
lcall
add
and
jmp
and
int
cmp
cwtl
or
lahf
fnstsw
jae
adc
rcrl
cmp
in
jno
jns
push
out
push
cmpsb
adc
inc
xchg
cld
mov
sub
jnp
hlt
clc
dec
dec
enter
sub
dec
rorl
mov
xlat
jns
xor
push
or
stos
and
shl
bound
push
fldt
push
ret
ficoml
mov
mov
lds
fstpl
insl
xchg
scas
out
das
fidivrs
and
mov
pop
xchg
into
loop
es
rclb
jbe
and
test
fmul
dec
mov
in
mov
or
pop
xor
lret
shll
pop
rolb
ds
inc
stos
mov
sbb
jmp
sar
lret
xchg
insl
mov
mov
adc
popa
aam
insl
mov
pop
test
aam
orb
push
iret
xor
cmp
popa
sbb
sbb
iret
loope
mov
add
cltd
or
dec
es
mov
inc
sub
mov
repz
adc
add
aam
mov
pop
jns
inc
sbb
iret
adc
push
mov
xor
sbb
mov
lds
pop
int3
push
in
sbbb
fdivrp
cmpsb
inc
cmp
mov
lds
pop
push
aaa
xor
sub
and
adc
xchg
lret
dec
pop
fwait
mov
fcmovu
fnstcw
dec
inc
mov
and
aad
cmpsb
scas
cmc
cmpsb
inc
fisubs
xlat
icebp
test
dec
dec
addr16
movsb
or
aas
adc
pop
lds
push
adc
mov
fucomip
push
mov
stc
rol
cwtl
lods
stc
repz
and
push
xchg
hlt
ret
sub
pushf
inc
popl
mov
xor
pop
fisttps
sbb
and
cmp
in
and
clc
or
adc
ds
cltd
out
out
les
xor
orb
or
adc
jae
sti
mov
iret
or
aam
push
and
insl
lcall
xor
sub
mov
lcall
ret
inc
sbb
xchg
push
bound
clc
adcl
gs
fcom
mov
push
pop
bound
call
inc
and
dec
fnstenv
xchg
cmp
xchg
mov
lret
pop
jae
xchg
inc
push
push
nop
aas
fld
push
or
dec
in
into
inc
movsl
loope
pop
stos
xchg
mov
pushf
lea
insb
jmp
or
je
jnp
iret
ja
fidivl
ljmp
adcb
mov
jge
popa
sbb
into
in
sbb
fisubrs
and
cmp
fwait
inc
mov
pushf
and
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
xlat
sahf
sbb
iret
mov
loope
dec
aam
loopne
inc
sub
in
jae
xor
imul
scas
adc
jp
xchg
push
cmp
cmpsl
inc
jg
sub
jmp
insl
xor
test
mov
cmovg
jp
scas
xchg
sahf
out
cmp
mov
cmp
push
data16
mov
jo
je
lahf
mov
cwtl
lods
and
icebp
fldcw
fmul
sub
mov
test
pop
adc
pop
into
outsl
ret
ss
jg
js
out
mov
leave
jl
adc
dec
sbb
shrl
cwtl
les
push
inc
xchg
xor
mov
outsb
dec
test
push
jnp
sbb
nop
fisttps
sub
add
andb
test
int3
or
pop
dec
aas
add
daa
xchg
or
xor
sti
add
imul
mov
push
cmpb
dec
in
adc
sub
adc
pop
loope
mov
das
jl
loop
inc
cli
add
inc
sbb
add
call
jns
jo
std
dec
out
mov
inc
or
mov
fdivrs
ss
out
jle
aam
dec
cmp
pop
scas
push
rcrl
movsb
jmp
xchg
das
dec
add
sub
fwait
mov
ljmp
sbb
inc
imul
mov
ror
in
cmpsb
js
lock
les
fmuls
int3
adc
loopne
dec
sub
dec
cmpsb
clc
add
sub
and
mov
sbb
cmp
pop
aaa
push
xchg
icebp
enter
sub
decl
cwtl
push
xlat
jge
cmp
sarl
dec
pop
mov
ret
in
jg
inc
in
divl
aaa
js
xor
outsb
push
inc
sbb
sti
fidivrs
xchg
mov
mov
xor
sub
jns
sub
mov
xor
lods
cmc
xor
push
mov
mov
pop
mov
mov
pop
dec
push
loope
bndldx
push
mov
or
and
inc
and
cld
cmp
mov
repnz
out
fstl
mov
push
loope
adc
sbb
pop
xchg
push
mov
mov
xor
dec
mov
lods
jno
ficompl
and
and
and
fistps
xchg
icebp
xor
sti
shlb
pop
push
xlat
jge
loopne
dec
sti
outsb
fcoml
cmpsl
gs
frstor
lods
subb
scas
fidivl
daa
bswap
aam
jge
rcll
pop
xor
sti
inc
test
fisubs
lods
nop
mov
dec
nop
xor
jl
insl
out
cmpsl
mov
shrd
nop
push
jmp
sbb
sti
push
aam
stos
loope
jbe,pt
stos
sahf
lock
push
in
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
add
push
push
lock
adc
adc
jne
je
rol
dec
stc
xor
jne
mov
movsl
cmp
adc
jns
pop
movsb
in
rcrl
push
sbb
xchg
outsb
cmpsl
jg
add
mov
cmp
icebp
mov
in
test
jne
pop
add
jbe
adc
fstl
push
dec
es
mov
sub
inc
or
lods
xchg
xor
push
jbe
pop
mov
scas
lahf
xchg
fisubrl
sub
push
cmp
gs
sbb
cs
xor
cmp
lret
neg
cmpsb
rclb
dec
and
push
mov
out
icebp
sti
adc
shlb
jae
mov
add
lods
cmp
inc
xchg
jmp
cmp
jmp
cltd
xlat
or
or
push
or
mov
pop
jl
mov
sti
cmp
pop
outsb
mov
js
add
inc
cs
and
flds
aam
adc
outsb
mov
pop
mov
cli
dec
or
mov
pop
in
lret
cmp
and
add
loop
subb
inc
daa
cmpb
pop
xchg
mov
sbb
sub
inc
dec
int3
xor
xchg
movl
add
mov
sbb
cmp
ficoms
ret
jmp
lret
data16
ffreep
xchg
ret
sbb
jge
stos
icebp
mov
sub
dec
cmp
sbb
adc
mov
test
mov
and
out
in
into
subl
aaa
fistl
vmovapd
xchg
adc
pop
mov
test
fmull
mov
icebp
inc
stc
and
cmp
mov
sub
les
imul
jge
cmp
sahf
mov
xchg
nop
xchg
subb
aad
or
mov
ror
dec
jge
cmpsb
sub
mov
nop
inc
jmp
in
dec
jae
subl
movsl
cmp
sti
add
pusha
sbb
push
jae
and
xlat
cmc
xchg
mov
cltd
or
idivl
mov
or
xchg
inc
pusha
inc
xor
and
fwait
and
add
dec
loope
stos
fsubs
sbb
scas
out
mov
mov
sbb
push
test
ds
fwait
insl
jae
cmp
mov
jl
pop
jmp
test
sbb
loopne
addr16
dec
hlt
jo
mov
lahf
movl
addb
push
jmp
scas
jg
xor
mov
js
jle
fdivl
cmp
jb
jbe
jecxz
push
popf
fstps
scas
test
pop
push
imul
push
aam
xchg
movsl
mov
push
sbb
mov
lock
sbb
mov
ja
aaa
pop
push
adc
rcrl
insb
xor
jp
mov
sbb
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
sbbl
adc
adc
adc
add
xlat
ja
dec
xorb
jle
inc
pop
add
sbbl
jo
ljmp
jle
sbb
in
lret
inc
aaa
lea
push
mov
adc
fistpll
out
jnp
cmp
je
stc
mov
das
lea
add
daa
outsb
into
pop
out
pop
dec
subl
dec
inc
pop
hlt
fnstcw
inc
mov
mov
adc
jmp
fbstp
jbe
call
aam
push
push
add
pop
dec
sbb
pop
adcl
loope
pusha
ljmp
into
pushf
mov
xor
sbb
gs
xorb
imul
xor
ja
fdivrs
mov
add
lcall
test
arpl
push
andb
xchg
frstpm(287
or
push
mov
mov
dec
xchg
xor
ss
mov
pop
out
push
mov
cmp
adc
mov
cmpsl
dec
cmp
lret
pop
xchg
push
cmc
adc
es
into
pop
adc
add
or
push
mov
sti
imul
pop
in
and
and
jbe
inc
mov
cld
dec
ds
aas
repz
call
in
sbb
or
adc
and
mov
cmc
mov
push
mov
mov
pop
mov
out
push
sub
and
xchg
mov
fwait
loope
push
sbb
add
enter
jmp
and
or
push
lods
jb
and
mov
push
stc
mov
loope
adc
iret
daa
add
test
std
shl
cmp
add
jp
sbb
jl
stos
cmp
orl
jno
je
sub
sarb
enter
call
sahf
add
loope
xlat
mov
xor
lods
mov
jl
sarb
jns
rcl
inc
jnp
xor
and
sarb
enter
xchg
mov
add
iret
sub
mov
push
dec
xlat
je
inc
jmp
repz
scas
loopne
cltd
inc
jae
pop
mov
or
sub
inc
jo
loopne
sub
xchg
adc
mov
push
add
fldl
adc
test
test
dec
dec
mov
inc
stc
xchg
and
fdiv
xchg
pusha
loopne
iret
xchg
mov
mov
cmpsl
jl
jbe
and
adc
pop
xlat
sbb
xlat
out
mov
pop
loopne
scas
shll
sub
sbb
add
test
cmp
cmpsb
inc
add
sti
and
jmp
shrl
pop
push
icebp
insb
in
jle
xlat
inc
hlt
jl
call
pushf
dec
cmp
xor
jp
xor
xchg
pop
push
sub
hlt
jl
dec
daa
ja
repnz
mov
dec
sbb
cli
gs
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
mov
adc
adc
adc
cli
mov
stos
in
pop
repz
and
cmpsl
xor
aam
jg
test
hlt
movb
lea
adcl
dec
or
sahf
or
nop
pop
jp
aaa
repz
push
aad
mov
js
lea
dec
inc
les
inc
fstps
push
cmp
mov
pop
xor
jge
lock
iret
dec
add
sbbb
push
push
mov
add
add
xchg
cmp
int3
mov
sbb
adc
dec
pop
sub
inc
cltd
mov
cs
pop
push
pop
pushf
push
jl
inc
xchg
sub
adc
and
or
iret
adcb
ret
adc
mov
aad
sti
dec
lret
leave
fisttpll
mov
addr16
add
cmp
xchg
outsb
jne
or
add
add
push
out
ret
out
add
mov
shll
sbb
cmp
outsb
pop
ret
mov
popf
movsb
add
lods
jae
lods
mov
xchg
ret
mov
stc
and
xchg
push
imul
xchg
les
xchg
jmp
jge
jmp
inc
in
pop
cmpsl
mov
push
movsb
ret
xchg
xor
mov
push
push
mov
jg
mov
arpl
sbb
push
add
imul
and
mov
adc
shl
jb
jecxz
or
roll
pop
or
out
in
loop
sbb
pop
mov
in
mov
add
dec
fildll
iret
sarl
loope
add
test
dec
cmp
pop
notl
inc
xchg
pushf
fs
into
adc
inc
pop
fisttps
jae
cmc
andb
add
sbb
push
pop
mov
xchg
pop
fnstcw
lret
gs
mov
push
inc
inc
mov
dec
fstp
rolb
pop
loop
mov
mov
xchg
sub
mov
xchg
add
sbb
jo
repz
mov
push
xchg
cltd
hlt
mov
nop
repnz
fnstcw
out
in
test
xor
inc
mov
dec
lds
xchg
mov
popa
mov
pushf
pop
inc
jle
or
xchg
jne
aad
lods
notl
mov
ja
setl
mov
rolb
test
test
aaa
mov
arpl
aad
sbb
incl
mov
cmp
mov
mov
fimuls
cmpsl
je
je
cltd
aas
cmpsl
inc
pop
in
ss
push
inc
lcall
mov
dec
imul
mov
iret
mov
in
adcl
mov
jge
cli
addb
sub
and
test
mov
ret
lods
testl
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
add
adc
adc
adc
cmpsl
push
andb
popf
xor
and
pusha
jo
mov
leave
cmp
mov
pop
std
mov
cwtl
add
mov
cmpsl
out
lods
xchg
rcl
xor
pop
aas
add
dec
push
aaa
int3
and
pushf
and
mov
mov
test
cmpb
insl
xchg
mov
cld
jecxz
xchg
add
xchg
cli
cltd
insb
or
loopne
js,pt
and
push
bound
ja
movsb
into
shl
ljmp
frstor
xorb
jne
sub
das
aaa
add
ds
ficoms
sbb
push
popf
cmpsl
outsl
arpl
mov
test
loope
pop
ret
adc
enter
popf
inc
hlt
ret
mov
ljmp
mov
icebp
pop
scas
or
inc
outsl
cwtl
sub
popa
test
adcl
push
pop
sbb
pop
lods
fstp
push
mov
push
mov
addr16
xor
int
mov
lds
xor
jo
ret
and
push
jne
inc
cli
jmp
adc
pop
jmp
js
in
das
xor
addr16
xor
lahf
rcl
ret
rorl
sbbb
test
sub
or
and
sbb
stos
dec
nop
rcrl
into
dec
add
or
or
jmp
jecxz
imul
ret
xorl
lods
add
mov
aad
into
iret
push
or
jmp
jne
mov
inc
cmpsb
vxorps
inc
hlt
cmpsb
lret
mov
add
xor
out
mov
xchg
movsb
pop
sub
roll
or
mov
js
inc
js
push
xor
notl
clc
jecxz
mov
mov
and
dec
test
dec
fbstp
scas
pop
test
lahf
cmp
or
stos
mov
mov
pop
or
dec
not
mov
loope
jo
mov
inc
inc
pusha
ficoml
sbb
pop
out
xor
aad
ficomps
scas
js
sbb
lods
fsubp
sahf
addr16
adcl
out
jecxz
xor
rol
shlb
mov
repnz
dec
cmpsb
add
cmp
scas
mov
das
add
cmp
lods
lahf
arpl
test
out
stos
sbb
js
sahf
mov
js
je
inc
and
mov
fwait
add
ficomps
fucomi
mov
pop
push
push
addl
addl
adc
push
and
loope
fnstenv
pop
dec
pop
lock
stos
mov
insl
daa
jmp
int
es
dec
cmp
shll
lcall
roll
jno
mov
aam
hlt
adc
mov
sub
outsb
xchg
jle
xchg
mov
adc
mov
push
mov
xchg
movsb
imul
add
sub
cwtl
std
aas
sbb
inc
int3
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
dec
push
mov
xchg
mov
sbb
jp
mov
outsb
pushf
fdivrl
imul
pusha
mov
insl
xlat
and
mov
jge
mov
mov
loop
dec
fdivl
in
imul
xchg
ljmp
jmp
out
adc
pop
xchg
nop
arpl
add
in
lods
push
lret
in
out
lahf
popf
jecxz
or
in
hlt
dec
mov
arpl
pop
aad
cmp
dec
pop
dec
lret
xor
aaa
push
sbb
int
enter
movsb
orl
sahf
mov
repnz
mov
push
fists
cwtl
jbe
cltd
shrl
std
mov
lods
mov
add
std
in
jmp
pop
clc
andb
aam
leave
push
mov
and
pop
add
adc
mov
mov
xor
stos
int3
xor
jae
test
cmp
and
jl
xchg
hlt
jo
andb
mov
movb
sbb
add
std
jo
or
int3
ret
xchg
in
jecxz
mov
jl
mov
mov
pop
lods
test
int
fwait
xchg
movsb
xchg
inc
lock
dec
ljmp
add
jmp
stos
fistpll
out
xor
mov
and
jge
add
cltd
rcr
insb
mov
arpl
pop
xchg
mov
inc
dec
pop
inc
mov
mov
push
das
mov
xlat
cli
jl
push
jnp
into
inc
push
xchg
outsb
bound
push
rorb
push
fnstsw
lea
orb
stc
outsl
jl
mov
mov
clc
loope
lahf
or
mov
scas
sub
push
jns
pop
adc
inc
popf
mov
aam
xchg
push
leave
xor
push
mov
dec
pushf
xchg
pop
dec
xchg
fimuls
adc
enter
aam
lds
mov
outsl
mov
xchg
orl
fwait
cli
pop
shll
ljmp
xor
mov
jno
inc
js
lds
inc
mov
and
cwtl
pusha
xor
testl
mov
jae
ja
shlb
cmp
pushf
jbe
inc
psrld
mov
repz
lret
inc
movsb
mov
mov
xor
mov
sub
push
movsl
into
loope
inc
stos
push
sub
push
js
shlb
dec
sahf
push
xchg
jge
rorb
test
fsubr
mov
shlb
or
lods
and
adc
fdivl
jge
das
dec
mov
adc
pushl
xor
fnstsw
jne
add
imul
lret
xor
pushf
call
icebp
std
daa
lahf
sbb
shll
pop
xor
cmp
mov
aas
push
arpl
mov
dec
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
adc
adc
adc
adc
loope
jmp
xchg
jmp
leave
sahf
push
and
jmp
sbb
dec
xchg
mov
aas
cld
cld
pop
stc
rorl
inc
mov
dec
cmp
and
mov
lods
je
lret
inc
pusha
xchg
mov
mov
xchg
outsl
fwait
cmp
cmpsl
inc
dec
mov
imul
mov
push
and
add
aas
or
imul
cmp
adc
pop
jo
clc
call
dec
push
xchg
addb
pop
inc
jecxz
les
xlat
mov
or
insb
fndisi(8087
lods
fldt
xchg
xor
dec
popf
mov
pop
movsl
imul
and
xor
mov
xchg
xchg
sub
shlb
add
add
subl
push
mov
fidivrs
fsubrs
mov
lcall
xchg
sarb
push
xchg
push
icebp
test
imul
jp
inc
sub
fiadds
jmp
or
pop
xor
mov
inc
push
ljmp
in
je
xchg
mov
and
pop
pop
mov
mov
cmpsl
dec
hlt
je
das
inc
js
mov
and
mov
mov
inc
leave
xchg
jbe
or
out
clc
jae
aad
fstpl
seto
adc
loope
or
je
dec
stos
xchg
lret
or
int
and
pop
sbb
or
xchg
fwait
stos
xlat
jbe
fwait
in
mov
cltd
cmp
jge
ss
lea
shll
inc
les
and
subb
ret
pop
pushf
lahf
inc
cmp
jns
mov
ficoms
int3
lret
int
push
mov
daa
mov
sub
sbb
cli
fs
clc
les
fldcw
decb
mov
mov
mov
add
jp
nop
inc
push
cld
add
or
jl
mov
mov
jo
mov
sub
or
push
fldt
pop
scas
and
js
jnp
push
mov
in
cmp
outsl
cmp
fildll
imul
fsub
dec
cmpsl
sbb
out
ljmp
xchg
add
lahf
cmp
xchg
adc
in
rorl
sahf
lcall
addr16
add
cmp
lahf
push
or
je
outsb
test
inc
sbb
fdiv
imul
and
pop
adc
shlb
pop
and
ret
inc
xor
adc
fistpll
int
sbb
adc
or
xor
mov
out
push
pop
pop
cmp
xor
insl
sub
pop
daa
or
inc
arpl
mov
xchg
mov
adc
mov
mov
enter
sbb
dec
mov
fmull
sbb
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
push
xchg
js
int
adc
sub
sbb
push
or
loop
sub
ret
xor
fcomps
imul
cmpps
or
aam
pop
insb
addr16
in
xorl
popa
cmp
in
xchg
sbb
into
dec
daa
sbb
mov
mov
cli
div
push
cmc
sub
leave
in
fdivrl
jmp
ja
jge
movsl
xchg
and
iret
push
fdivrs
loop
cmp
out
rorb
xor
adc
dec
out
adc
int
int
xchg
add
data16
mov
shll
mov
jne
je
testl
inc
mov
in
icebp
cmp
mov
sbb
in
xchg
inc
dec
insb
test
fneni(8087
sub
aam
pusha
jge
xchg
movsl
rolb
push
dec
adc
jp
push
pusha
mov
xor
cwtl
dec
mov
adc
cmpsb
hlt
repnz
mov
out
dec
test
ljmp
fsts
cld
mov
in
sbb
roll
fldcw
fistpl
xchg
xor
movsl
jno
call
aas
mov
push
popf
pop
xor
pop
daa
push
fwait
stos
sahf
aad
mov
inc
adc
push
cld
cmp
sbb
pop
or
jb
pop
leave
push
push
jl
push
or
cld
dec
movsb
inc
mov
fisttps
xor
pop
aam
ja
or
jne
test
fdiv
int3
in
cld
fisttpl
sub
gs
stc
xchg
push
push
cmp
pop
test
xchg
fwait
jnp
jmp
jmp
cmp
pop
mov
inc
sub
insl
cs
loope
arpl
test
push
fistpl
or
cwtl
push
clc
fisttpl
mov
mov
out
adc
sub
pop
outsb
imul
enter
inc
inc
movsb
mov
iret
popf
xor
and
xchg
jg
or
insb
mov
xchg
out
or
test
dec
add
js
sub
shlb
dec
stos
push
sbb
fcompl
pop
push
jg
out
xorb
inc
and
andb
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
mov
adc
fsubp
mov
fistpl
push
iret
ds
dec
sub
inc
repz
lcall
cli
dec
dec
and
lcall
nop
pop
xor
jb
add
test
out
lret
jmp
adc
xchg
inc
mov
imul
jne
xchg
jp
push
mov
mov
icebp
mov
rclb
jne
and
jmp
mov
loope
xor
das
push
std
or
orl
ja
mov
mov
ret
mov
test
push
lea
stc
gs
icebp
cwtl
cmc
mov
mov
lcall
jl
mov
push
pusha
or
or
mov
sbb
sbb
add
add
out
jbe
outsb
sub
lahf
das
mov
push
insl
push
push
pop
out
sub
outsl
cmpsl
mov
dec
pop
inc
push
cmpsb
outsl
data16
mov
insb
out
addr16
cs
xchg
mov
iret
xorb
jo
add
imul
push
add
mov
mov
sub
sub
jp
push
sarl
lods
or
and
push
js
sbb
mov
jns
mov
cmc
push
lcall
icebp
stc
stc
lods
dec
mov
inc
leave
ds
mov
loop
pop
inc
xchg
jecxz
test
pop
stc
test
mov
cmpsl
scas
sub
loope
je
mov
lahf
pop
cmp
in
pop
negl
dec
xor
ret
cs
jmp
test
mov
xchg
mov
cs
rcll
push
testl
xchg
sub
xor
pushf
bound
cmp
fdivl
or
popa
outsb
scas
push
mov
aas
test
leave
inc
clc
in
in
jne
loopne
sub
cmp
test
jne
mov
jbe
and
mov
vpaddq
hlt
rcrb
sbb
pushf
mov
sub
inc
fdivrs
sbb
jmp
sbbl
cmp
aam
pop
lods
aad
sahf
lods
add
adc
xchg
movlps
loopne
adc
rolb
inc
fwait
imul
sub
addr16
jp
sub
jle
cmp
dec
mov
popa
and
ljmp
mov
xchg
jle
or
push
cltd
insb
inc
out
dec
mov
shll
cld
test
ds
stos
mov
and
sbb
push
push
jne
testb
mov
or
andb
pop
popa
jno
mov
js
fbstp
push
nop
stos
or
cmp
or
movsl
xchg
aaa
lds
movsb
in
add
pop
int
addl
dec
inc
dec
xor
xor
in
jp
add
dec
jo
xchg
sbb
fcompl
in
xchg
rorb
bound
popa
sbb
add
xor
imul
subl
and
push
pushf
push
cmp
dec
popf
xchg
xlat
sbb
pop
push
mov
dec
jl
jo
sub
mov
mov
fistps
and
and
jg
arpl
push
mov
insb
out
mov
enter
dec
sub
xchg
andb
aad
jo
negb
fs
cmp
mov
pusha
mov
lods
jo
push
fwait
adc
sub
jb
ja
repz
add
sub
and
dec
xor
cmp
pop
dec
lds
push
gs
mov
pop
std
or
arpl
dec
jne
jle
pop
int3
jbe
cmp
ret
fimuls
cs
jl
adc
add
shlb
hlt
push
nop
andb
je
adc
inc
movsb
adc
mov
sub
cli
cmp
ss
jp
push
xor
add
je
push
shrb
sub
and
adc
popa
pop
rorl
inc
pop
test
fptan
xor
sub
mov
fdivs
aam
mov
jbe
sti
insb
mov
mov
scas
add
xor
jmp
cmp
jo
jecxz
gs
cmpsl
and
push
sbb
adc
jno
fmul
pop
sbb
adc
cli
mov
popf
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
clc
push
stc
jle
rcll
xchg
movlps
leave
jecxz
jmp
lods
jo
jmp
shrl
aam
jbe
pop
add
aam
shrb
xor
test
push
mov
fisubl
push
sbb
fsubr
jp
dec
xor
mov
jle
mov
sahf
xchg
test
dec
ljmp
sbb
jns
add
pop
cmpsl
testl
lock
cmpsb
fisubrs
cmp
mov
call
nop
popf
in
flds
std
pop
cmpsl
ficoms
or
shl
sub
or
daa
in
or
cmc
adc
mov
mov
sbb
pop
aas
data16
aad
dec
imul
sbb
adc
fisttps
dec
gs
arpl
xchg
push
xchg
js
and
push
gs
sub
and
push
inc
fisubrl
andb
mov
xchg
and
ss
mov
lock
mov
adc
sbb
inc
in
scas
inc
dec
mov
mov
vcvtsi2sdl
mov
push
mov
adc
add
adc
lret
cmp
cmpsb
outsb
or
inc
insl
sti
pop
mov
mov
push
push
xchg
jnp
aas
xor
sub
add
xchg
cmp
mov
mov
pop
stos
fwait
or
push
mov
das
aam
jecxz
or
sub
cmc
adc
lds
aaa
xchg
inc
shrb
movsb
popa
in
out
jns
ret
mov
jmp
jne
insl
daa
movsl
pop
pop
push
arpl
dec
jne
lahf
adcb
inc
clc
test
jl
jae
push
push
push
test
out
lret
mov
xchg
xchg
mov
mov
push
sub
sbb
es
dec
cli
sti
pop
pusha
fnsave
ss
sbb
scas
push
jmp
mov
sbb
mov
cli
sub
jecxz
mov
or
add
nop
pushf
and
loop
sahf
into
adc
sub
lds
jle
pushf
daa
lret
loope
out
lret
fmull
mov
add
xor
jmp
fnsave
cmp
add
add
adc
xchg
lcall
popa
jp
cmp
out
ja
push
and
mov
int
shlb
pop
push
sbb
mov
jmp
xchg
rcrl
dec
jmp
or
stc
push
jecxz
jno
cld
ret
mov
mov
sbb
mov
push
bound
daa
adc
and
fidivs
mov
fbstp
pop
test
mov
inc
hlt
out
mov
sahf
icebp
imul
or
sub
repz
mov
push
adc
int
out
jg
hlt
mov
adc
out
add
movsl
imul
mov
adc
pop
inc
aas
xchg
dec
dec
dec
out
inc
data16
or
jl
sbb
jbe
negl
ljmp
dec
jl
aas
sbb
hlt
stc
and
adc
cmpl
dec
xor
fs
cld
sub
sub
stos
pop
mov
stc
or
cwtl
mov
fiadds
enter
adc
shlb
lock
mov
pop
into
xchg
or
sub
std
adc
lret
cmp
or
add
jbe
add
fstps
sub
lcall
adc
jo
sub
jae
push
xchg
stos
mov
add
jle
push
mov
icebp
push
and
in
movsb
les
xchg
dec
push
adc
inc
negb
roll
rcrl
xor
cld
xchg
and
ljmp
lods
pop
pop
cmpsl
mov
inc
sub
pop
push
lea
ljmp
jae
pop
aas
shlb
cmp
and
decl
cs
mov
mov
push
pinsrw
sbb
push
or
js
arpl
movsl
fs
daa
je
idivb
fldenv
int
popf
mov
pop
repnz
lea
push
sbb
xchg
xchg
sub
inc
and
xchg
ret
iret
add
and
stos
and
popa
pushf
mov
clc
out
fisubrs
test
jo
movsl
lcall
add
leave
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
jnp
stos
test
adc
pusha
mov
sbb
xchg
inc
sub
inc
jb
in
in
add
dec
xchg
mov
sti
fldenv
sbb
mov
mov
add
pop
lcall
nop
mov
aas
or
xchg
rorb
dec
and
add
xchg
jbe
pushf
popf
mov
lds
dec
and
sarl
lret
sub
cs
sbbl
xor
movsb
faddl
jmp
aas
lcall
fxch
sbb
cmp
lcall
dec
data16
call
leave
inc
imul
cmp
je
adc
mov
neg
scas
mov
sbb
pop
xor
jge
jle
int
mov
orb
scas
out
inc
sbbl
push
test
xlat
sbb
shr
test
sahf
adc
pusha
movl
outsl
pop
push
iret
es
add
jp
jae
pop
enter
movsl
adc
sbb
mov
cli
mov
sub
int
aaa
inc
sub
ret
fidivrl
loop
movsl
gs
jle
ret
dec
mov
jns
dec
cmp
jl
ds
sub
push
imul
cmc
notw
js
jne
jns
push
pushf
cwtl
shrl
xor
mov
and
test
mov
sbb
jecxz
call
sbb
add
pop
dec
jp
in
mov
shlb
aam
inc
add
fstl
inc
or
aaa
cmp
inc
xchg
stc
leave
adc
and
nop
cmp
popf
sub
daa
sub
mov
pop
out
cmp
lods
mov
les
cmp
std
or
lods
pop
mov
cmp
mov
mov
hlt
pop
pop
mov
in
mov
pusha
and
hlt
mov
xchg
and
lret
scas
push
pop
in
insl
xchg
mov
add
daa
into
inc
and
jle
cmpl
mov
repnz
iret
stos
pop
pusha
mov
repz
inc
test
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
stos
insb
add
adc
add
adc
icebp
movsb
shlb
pop
into
xor
hlt
aas
push
mov
pop
inc
adc
arpl
jo
cmp
lods
xchg
sarl
jl
and
push
push
adc
xchg
cmp
outsb
roll
das
aam
fcomps
mov
mov
lods
adc
push
es
mulb
push
sbb
pop
loopne
lock
pushf
push
jns
and
cmpsl
setne
hlt
jb
cmp
dec
push
mov
sahf
lods
cmc
out
call
pop
xchg
cmovb
sub
fcmovbe
sub
or
mov
cmp
mov
adc
pop
mov
int
sub
push
cltd
call
add
rcr
andl
xchg
jle
cmc
sbb
or
pop
mov
dec
pop
pusha
cmp
aas
or
xor
jp
or
cmpsb
fiadds
out
pop
mov
push
mov
inc
iret
jp
rorl
out
cmp
repz
aas
xchg
popa
mov
lret
sub
adc
daa
rcl
sbb
inc
daa
cwtl
notb
outsl
lds
pop
pop
rcrl
adc
mulb
push
sti
arpl
push
xchg
dec
add
test
negl
xor
mov
notb
ja
pop
inc
xor
stos
fimuls
or
mov
mov
cmpsl
adc
sub
loop
stos
pusha
xor
dec
jns
divl
adc
push
sbb
das
mov
movsl
xchg
pop
add
adc
dec
mov
sti
mov
aaa
mov
mov
sbbb
sti
test
daa
sbb
shrb
rclb
cltd
sbb
sti
fmull
fbld
mov
mov
dec
fisubl
stos
jne
jae
mov
enter
mov
mov
repnz
or
ret
insl
push
clc
xchg
shrb
test
cmpsl
jmp
and
pop
mov
cmp
fdivl
cmp
in
sahf
dec
mov
pushf
sub
push
xchg
test
add
shlb
inc
jb
nop
enter
push
pop
in
cmp
cmp
mov
jo
dec
stc
push
pusha
aam
shll
xor
push
es
mov
pop
push
lret
loope
jle
test
pop
std
sub
js
xchg
cmc
dec
in
repnz
lea
popa
arpl
push
jecxz
lret
loop
out
xrelease
xor
ret
add
pop
ljmp
pop
adc
std
cmp
xor
push
mov
repnz
mov
pop
repz
lret
lahf
stos
repz
ljmp
sub
aaa
sbb
loope
mov
in
test
pushf
aam
mov
js
or
push
imul
arpl
lods
inc
jb
jle
shrl
cmp
incl
jle
jp
repz
jle
iret
mov
in
push
push
stos
cld
test
je
jmp
xor
cmp
jbe
sub
ljmp
sbb
pop
jg
xor
stos
xor
sub
dec
mov
cmpsb
and
enter
sbb
lcall
cli
mov
mov
test
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
xor
mov
add
adc
clc
pop
lcall
add
pop
js
aas
jb
xor
shl
bswap
arpl
bound
adc
lahf
mulb
xor
fs
push
mov
mov
sbbb
js
aad
xchg
movsb
imul
shrb
mov
add
dec
das
dec
dec
fimuls
imul
outsb
xchg
imul
scas
sbb
test
push
sbb
movsl
and
adc
add
jmp
clc
movsl
shrl
inc
push
push
lods
clc
insb
movsb
call
sbb
cmpsb
adc
fstpl
neg
pushf
add
notl
xchg
popf
jo
outsb
mov
xchg
inc
pop
jns
test
mov
add
add
insl
int3
inc
repz
mov
je
jnp
fsubp
cld
jb
or
and
or
jg
sti
jne
cmc
mov
push
mov
inc
mov
test
repnz
add
mov
fists
dec
sbb
out
mov
mov
fabs
mov
xchg
in
ja
movsl
or
stc
sub
mov
scas
clc
test
xchg
mov
sahf
sub
push
inc
push
loopne
mov
into
flds
sahf
mov
lea
xchg
cld
sub
mov
sub
sbb
clc
inc
fisubs
test
dec
inc
xor
and
das
negl
xor
sub
jno
xor
inc
ds
pop
fdivl
mov
cwtl
cmpsb
push
pop
leave
retw
pop
stc
mov
sub
dec
pcmpeqb
cmc
cmp
cli
jbe
test
sbb
xchg
mov
pop
jne
adc
xor
pop
fucomi
sub
ljmp
sbb
enter
scas
add
pop
add
adc
int
jns
jne
dec
sbb
insb
dec
call
idivl
cwtl
add
lahf
jecxz
in
cs
mov
push
xor
jo
mov
dec
pop
pop
xchg
outsl
loopne
test
in
lock
ffreep
into
push
xor
dec
adc
mov
sbb
cmp
mov
or
push
out
stos
shr
mov
mov
xchg
jnp
data16
std
addr16
dec
cltd
jge
ja
push
ja
cld
loope
bound
rorl
popa
pushl
or
cmp
movsl
jae
pop
jl
mov
inc
repnz
sub
and
push
out
ja
push
in
mov
movsb
fsubrl
add
sahf
js
int
sti
pop
leave
loop
outsb
push
std
jbe
fimull
xchg
xchg
out
jmp
pop
pop
or
inc
outsb
sbb
pop
push
movsb
pushf
sti
cmpsl
xchg
push
cmpsl
mov
stos
divl
jb
cmp
jns
icebp
cld
movsb
addr16
sarb
sub
sar
push
cmp
inc
sbb
imul
fildl
push
jnp
rclb
cmp
mov
mov
inc
cmc
test
mov
cmp
fdivr
rclb
ss
xchg
push
adc
cld
xor
cmp
or
xchg
adc
mov
xor
jbe
out
out
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
sbb
adc
add
adc
and
cmpsb
jle
loop
daa
cli
orb
pop
aam
mov
ja
outsl
mov
push
test
mov
sbb
pop
cwtl
stos
out
outsb
mov
in
lcall
into
aad
add
sub
outsl
inc
inc
rcll
add
je
movsb
adc
add
jle
push
jecxz
imul
sbb
dec
xchg
pop
xor
fldt
repz
lret
jp
test
jne
lcall
xor
pushf
dec
int
dec
inc
icebp
int3
das
pop
cld
xlat
inc
lcall
add
iret
jge
mov
xchg
test
mov
sub
dec
out
and
sbb
cmp
mov
js
lds
jge
stos
mov
out
sub
test
adc
lahf
aaa
inc
add
inc
xchg
jb
cmp
aam
add
sub
inc
jb
lcall
cmp
mov
sahf
cmp
xlat
xor
sbb
pop
or
cmc
add
dec
jae
fiadds
xchg
pop
scas
pop
mov
test
push
xor
xchg
mov
mov
out
jne
scas
movsl
and
dec
dec
cmp
xor
sbb
push
adc
dec
adc
inc
cmp
xor
loopne
inc
cld
fldl
xchg
out
or
scas
aaa
jne
ja
daa
fs
pop
sub
xlat
push
ret
incl
in
je
ja
sub
dec
std
mov
popf
jmp
arpl
ret
js
loop
jl
jmp
sbb
dec
add
dec
fsubrs
jo
mov
movsl
xchg
adc
lds
sub
push
mov
loop
sbb
adcb
jmp
pushf
and
push
mov
dec
cmpsb
xor
jbe
adc
and
je
adc
push
mov
out
les
pop
lret
scas
addr16
ret
sbb
mov
insl
adcb
fnstcw
call
xchg
call
jecxz
and
dec
sub
sbb
pop
mov
fcompl
xchg
mov
add
mov
pop
shll
push
mov
and
fbstp
jl
pop
add
movsl
repz
xchg
inc
scas
push
xor
dec
in
mov
push
cmpsl
bswap
into
jg
add
in
and
inc
bound
test
iret
pop
push
sub
push
outsl
add
and
sahf
lcall
xchg
xchg
lret
pop
pop
add
test
cmpsb
clc
clc
je
pushf
outsb
jmp
cmpsl
pop
jbe
push
adc
fneni(8087
mov
or
inc
sbb
lea
popa
clc
out
push
test
mov
mov
jns
out
cmp
js
or
mov
iret
xor
xor
mov
arpl
inc
outsb
call
push
xchg
outsb
mov
sbb
jnp
xchg
jle
mov
mov
jns
lret
xchg
in
sbb
dec
or
aas
push
mov
add
xlat
mov
jl
scas
push
dec
imul
jl
gs
out
push
xor
sub
dec
push
and
std
sahf
mov
adc
daa
dec
lret
cmp
and
add
sarb
push
cvtpi2ps
push
mov
aam
xor
into
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
lret
lahf
jo
enter
jne
adc
imull
loopne
add
imul
movsb
in
outsl
and
loop
call
pop
lods
int3
out
xor
and
sub
push
sbb
adc
jg
mov
ja
sbb
stos
sub
mov
pop
fcmovbe
das
test
pop
sbb
xchg
mov
popl
inc
loope
out
pop
ljmp
cmpb
repnz
jp
mov
int3
inc
lods
and
sbb
mov
arpl
add
xchg
std
cmp
push
inc
repz
sub
addl
arpl
mov
cmp
outsb
mov
adc
pop
sub
lds
repz
mov
int3
inc
cmp
lods
jge
outsl
jne
push
pop
lcall
jne
cmp
mov
rorb
insl
add
testb
mov
push
sbb
test
cmp
lret
repz
xabort
xor
sub
stos
loopnew
sub
inc
cmp
pop
or
test
sub
xchg
cmp
stc
int
pop
dec
mov
rorb
adc
in
sti
fcomps
mov
mov
cld
rcrb
xchg
lcall
inc
jp
ljmp
sbb
mov
jns
call
adc
and
btl
mov
push
push
fwait
jecxz
stos
inc
cmp
sub
or
add
xchg
xchg
push
pop
and
mov
push
xchg
pop
in
push
shlb
jo
push
adc
jae
mov
cmp
xorl
ja
cmp
daa
add
iret
pop
mov
outsl
inc
xor
subb
icebp
cli
pop
pop
dec
int
ja
sbb
pusha
pusha
fcom
rcll
cmp
sbb
and
subl
sub
inc
push
cwtl
mov
mov
jae
repnz
scas
push
mov
cwtl
jmp
popa
pop
std
inc
push
jp
xchg
dec
xchg
jns
imulb
loopne
lcall
lret
pop
fidivs
xchg
inc
dec
push
mov
xlat
cmp
std
dec
fstl
pushf
test
popa
jb
dec
mov
repz
lea
fiadds
dec
push
jbe
movsl
or
movsl
xor
xor
lods
jp
push
sbb
fisubs
mov
sbb
ja
push
mov
pop
mov
out
ja
aad
jo
dec
pop
jae
inc
sti
mov
fists
sbb
ret
frndint
xchg
xchg
push
in
rcr
lea
repz
movsb
xor
popa
ret
outsl
leave
mov
clc
imul
adcl
xchg
mov
inc
fildll
sub
push
inc
idiv
mov
mov
sbb
sbb
les
iret
icebp
loop
daa
stos
mov
imul
insl
or
push
mov
ret
sbb
mov
xorb
dec
loopne
test
scas
cltd
inc
stos
movsb
jmp
xchg
outsb
add
scas
add
push
jae
lcall
iret
sub
push
pushf
lock
fdivl
or
out
stc
fiaddl
in
pop
lods
cmp
inc
in
inc
ficompl
loope
xor
sub
mov
xchg
or
test
mov
push
jb
pop
testl
nop
sub
sub
repz
push
outsl
fwait
push
aam
pop
addr16
cmp
xchg
and
test
ffree
into
push
xor
fstpl
cmpsb
fwait
xor
jmp
jnp
leave
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
imul
adc
adc
jns
mov
pusha
sub
in
or
sti
jecxz
adcb
insb
fs
popf
jo
popa
popf
mov
push
cmp
push
dec
mov
add
lods
les
mov
mov
mov
rcll
jae
js
shlb
mov
add
testl
dec
shll
test
aam
mov
sbb
pushf
xchg
subl
jno
push
xchg
ret
clc
fistpl
sub
or
and
mov
jno
arpl
xor
mov
xor
mov
hlt
cmpsb
inc
sar
leave
dec
push
int3
je
out
movsl
pop
into
mov
jle
repz
jl
mov
xor
adc
pop
mov
dec
mov
xchg
notrack
mov
adc
and
mov
cmp
push
inc
mov
daa
mov
xchg
lret
sti
jnp
ret
and
add
orb
lds
aad
and
daa
mov
loope
and
or
xchg
jmp
bound
push
fisttps
dec
emms
icebp
pop
ss
add
fildll
cmp
push
sub
jae
clc
xor
and
fbld
aad
add
pop
je
fnsave
xlat
pop
mov
fcomps
mov
ss
jae
xchg
add
in
inc
vmread
fdivp
jecxz
inc
inc
lds
out
mov
cltd
fwait
dec
out
mov
cmp
andl
inc
jb
stos
mov
xchg
fsubr
scas
mov
jle
popf
sub
test
popl
mov
xchg
popa
jmp
cmp
js
and
sub
loopne
push
ffree
ljmp
jne
scas
xchg
or
mov
push
mov
add
ror
cmp
mov
stos
fisttps
jno
or
and
push
cmp
sbb
cmc
hlt
stc
stos
push
cmpb
mov
andl
das
movsl
mov
cmp
insb
out
and
jmp
enter
inc
pop
jecxz
pop
dec
mov
or
jno
cmp
insl
jb
clc
adc
adc
xor
xchg
add
popa
xchg
in
adc
cmp
dec
stos
pop
sbb
scas
sub
pop
cmp
gs
in
ret
xchg
dec
mov
push
mov
ds
mov
insb
cltd
ret
clc
cmpsl
mov
sbb
jge
cmp
test
push
vucomiss
test
imul
dec
pop
subb
push
cmpsl
pop
push
push
push
jo
push
rol
nop
js
inc
pop
dec
inc
popf
scas
dec
js
imul
fcomps
jge
mov
push
inc
test
mov
jmp
pop
add
mov
movl
sub
cmp
push
das
sub
jmp
sbb
mov
and
inc
sbb
scas
push
test
jmp
popf
cmp
js
je
xchg
push
mov
out
test
hlt
and
out
mov
sub
jmp
xchg
cli
loopne
add
iret
leave
js
mov
cltd
lahf
inc
inc
sbb
mov
sub
adc
cmp
addr16
mov
popa
push
xor
rcrb
cltd
insb
pop
sub
je
test
pop
inc
add
cmp
or
pcmpeqb
jbe
inc
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
pop
mov
orl
adc
push
cmpsb
loop
xor
sbb
push
xor
xor
sar
cltd
lret
repnz
subl
sub
pop
xchg
cmp
adc
inc
clc
push
jecxz
pop
scas
pop
sbb
add
pop
mov
xchg
fwait
sbb
shlb
loop
pop
push
jmp
outsl
lds
jp
push
adc
rcl
push
jno
jno
test
jg
xlat
std
cmpsl
adc
pop
ss
jecxz
dec
pop
dec
mov
aam
dec
dec
jecxz
sub
mov
les
push
movsl
loopne
mov
cmp
cmpl
dec
imul
mov
cmc
cld
nop
push
dec
push
in
xchg
xchg
bound
je
lea
add
insb
pop
rcl
mov
in
mov
iret
fsin
ljmp
fwait
push
mov
push
test
fwait
pop
out
dec
jl
pop
or
xor
cmp
insl
jne
xchg
mov
cld
cmp
loope
sub
and
cs
mov
and
les
adc
stos
in
cltd
into
jmp
fdivrl
xchg
aad
imul
push
xchg
loop
js
ret
mov
or
lret
daa
pop
jnp
dec
or
fisttpll
add
pop
jle
cmp
popf
xor
push
jnp
xor
test
mov
mov
mov
push
sbb
and
test
push
fstpt
mov
lods
stc
aam
ds
sub
lret
dec
push
and
pop
popa
dec
xchg
jns
inc
sbb
push
les
loop
cld
iret
sub
sbb
outsb
movsl
icebp
or
inc
xchg
jbe
loopne
dec
fnstcw
push
mov
or
lahf
aam
ds
icebp
out
in
mov
ljmp
xchg
clc
push
outsb
mov
in
clc
cli
xor
iret
testl
repnz
das
and
in
sub
pop
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
add
xchg
adc
movlps
inc
scas
mov
xchg
pop
jae
mov
leave
test
shl
cmpsb
sbb
mov
inc
xor
test
fcompl
mov
lock
add
sbb
and
push
push
or
add
hlt
pop
dec
repnz
lret
adc
out
mov
ret
or
pop
sarb
mov
jmp
xchg
loop
sub
inc
dec
das
or
cmp
shrb
fisubs
frstor
xchg
pop
mov
xchg
or
in
push
dec
nop
push
fsts
xchg
ljmp
fistl
lea
movsl
aad
sarb
or
mov
jns
stos
add
aas
sub
lret
pop
pop
pop
mov
cwtl
insl
xchg
xchg
daa
inc
pop
xor
loopne
cltd
inc
bound
aas
mov
test
and
insl
xchg
and
mov
insb
mov
jo
push
and
or
int3
pop
xchg
stos
stos
test
pop
lret
xchg
in
fldl2e
movhlps
std
mov
jge
mov
mov
lret
pop
inc
pop
sub
ja
add
add
fcomp
outsl
aas
stos
cmp
pop
or
jo
dec
addr16
jns
mov
and
movsl
or
push
imul
mov
add
sbb
dec
ret
loopne
adc
jp
ret
adc
xlat
test
je
jns
sbb
insb
rolb
idiv
sbb
gs
data16
adc
cmpsl
lret
inc
loop
push
call
inc
adc
pop
ret
int
jne
test
jmp
enter
adc
and
sbb
dec
call
stos
fucomip
inc
pusha
cmpsl
dec
je
aaa
fbld
jmp
fdiv
punpckhdq
lods
or
test
xor
addr16
dec
enter
pop
push
insl
inc
int3
xlat
popf
sbb
hlt
sti
sbb
lret
mov
mov
ret
mov
xor
xor
push
lcall
into
out
push
clc
lods
fidivrl
push
pop
je
decl
pop
ss
xchg
cmp
xorb
add
loop
imul
pop
xchg
cmpsb
or
fwait
fs
imul
add
mov
rcl
sub
xchg
mov
sub
dec
jno
movsl
inc
jne
inc
test
cmp
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
test
decb
adc
sbb
jns
dec
add
mov
mov
insl
inc
outsb
mov
rclb
mov
stc
mov
push
mov
sysenter
test
mov
inc
insb
lahf
subb
jns
push
stc
mov
gs
pushf
outsb
push
dec
dec
inc
in
sub
hlt
cs
and
inc
leave
lds
jno
and
orb
adc
jecxz
je
and
xchg
or
les
rorl
stos
adc
into
loopne
cmp
fldl
in
mov
outsb
cmp
fisubs
xor
add
jnp
push
jp
push
jmp
fwait
stos
mov
mov
xor
cmp
jecxz
movsb
xchg
ret
and
sub
mov
insl
xchg
sub
rorl
sbb
xchg
xchg
xchg
jns
shr
cmp
sbb
pop
clc
ja
popf
jo
shrb
dec
ljmp
je
cld
push
fistpll
push
scas
ljmp
test
push
sbb
test
addr16
ljmp
jmp
jnp
sbb
mov
loop
fsubrl
or
adc
inc
push
cs
in
in
nop
je
das
out
inc
popa
or
inc
cmp
scas
lret
or
in
cwtl
fisubrs
cmc
inc
sub
mov
xor
dec
int
dec
push
xor
xchg
inc
leave
pop
xorb
sbb
call
sarl
nop
mov
dec
pop
push
lock
cmp
push
lds
fistl
bound
pop
orb
xchg
and
aam
dec
popa
out
loope
dec
lods
mov
xchg
or
aad
mov
in
jno
mov
inc
push
mov
push
ret
mov
sbb
loope
cltd
in
or
jge
fsubr
in
scas
test
or
push
ret
mov
in
rcrl
mov
xchg
bound
lods
sub
mov
lods
lret
fwait
or
xchg
in
mov
aad
mov
icebp
aam
ret
int3
and
lret
add
jge
scas
popw
test
sarb
sbb
cmp
in
imul
fs
xchg
dec
push
push
je
data16
sbb
out
sbb
adc
fcmovnb
int3
mov
mov
lea
pop
pop
mov
ja
insb
mov
ds
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
push
push
jnp
adc
movlps
imul
arpl
sar
insb
movsb
jg
incb
idiv
jnp
pushf
or
dec
sbb
inc
insl
inc
out
lret
clc
pop
pusha
loopne
in
push
arpl
pop
call
cmp
push
xor
push
xchg
fcomps
rcll
sub
mov
repnz
ret
fcomip
je
in
mov
fiadds
sub
push
xlat
xchg
adc
mov
or
jg
imul
and
into
or
jge
sarl
scas
popf
sub
movsl
jge
pusha
les
pop
jnp
push
sbb
cmp
adc
sahf
mov
jns
test
lods
sarl
in
jo
ja
ret
sbb
inc
jg
lods
imul
add
push
popf
mov
or
inc
push
andb
test
pop
fidivrs
and
aad
out
iret
dec
ret
push
push
repnz
pop
inc
cmp
sub
test
jle
fnstsw
sbb
cmp
mov
pop
and
int3
shlb
dec
cld
cmp
add
push
nop
mov
test
aad
mov
xchg
movsb
pushf
fidivs
imul
repz
xchg
mov
push
dec
push
movsl
mov
mov
jne
aas
pop
and
cwtl
sbb
mov
sahf
ss
mov
mov
mov
xchg
inc
mov
mov
cld
outsb
xchg
mov
xchg
stos
adc
dec
lret
dec
xor
and
push
cmp
lret
xchg
xchg
lret
hlt
into
cltd
repz
pop
sub
mov
mov
shlb
movsl
jle
insb
mov
xchg
aaa
or
ret
adc
lods
mov
or
mov
decb
mov
xor
subb
inc
imulb
imul
xchg
test
add
adc
pushf
mov
adc
pop
mov
mov
out
sbb
cmpsl
mov
aam
push
push
cmpb
dec
xlat
lret
mov
xchg
dec
fnstenv
jb
js
test
lret
push
adcl
mov
pop
mov
popf
jae
stos
jmp
sbb
pop
outsl
cmc
push
popf
jns
mov
dec
lcall
inc
stos
insl
push
jg
sti
add
icebp
mov
xor
mov
mov
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
cmpsl
sahf
lods
clc
ja
adc
movlps
mov
xor
push
clc
and
neg
mov
jl
lret
imul
rorb
sbb
xchg
pop
mov
cmp
fstpt
ret
dec
and
lods
xchg
inc
repnz
add
shll
or
xor
mov
aad
pop
pushl
mov
mov
cld
mov
test
ret
push
leave
inc
push
adc
xchg
mov
jb
shrb
xor
push
or
dec
es
fbstp
sbb
mov
xchg
cmp
in
jo
jb
mov
mov
in
or
inc
mov
aas
mov
mov
cmpsb
pop
mov
push
push
or
jnp
dec
and
adc
mov
lret
imul
ljmp
int
jb
pop
loopne
shll
lret
adc
sub
ss
bnd
mov
xor
mov
lods
cld
subb
mov
test
shl
gs
cmp
inc
inc
rclb
aam
fmul
aad
mov
mov
or
or
xchg
adc
inc
mov
daa
in
inc
out
dec
cmp
fnstenv
pop
into
xchg
sub
aam
rcrb
xor
mov
sub
mov
xchg
stc
or
inc
pop
decl
fxam
sbb
and
dec
mov
xchg
scas
rcll
cmp
data16
xchg
aad
ret
cwtl
sub
inc
and
or
ret
sbb
pop
ret
xchg
dec
cmp
pop
insb
or
mov
lahf
test
repnz
imul
lock
fs
loopne
cmpsb
jo
hlt
outsb
dec
movsl
inc
cli
xchg
inc
and
xchg
shlb
adc
mov
repnz
pusha
scas
inc
push
or
sub
lock
hlt
xor
xor
ror
sub
push
jle
push
notb
pop
xor
fisubs
lea
lcall
out
ds
daa
jg
push
clc
adc
jecxz
adc
inc
and
cmc
lock
sbb
dec
or
xor
out
sbbl
aas
xorb
push
push
sub
repnz
jg
adc
sbb
cld
pushf
cmpsl
inc
loope
push
ret
std
xor
and
cmpsb
add
lret
jo
lahf
shl
call
mov
jmp
js
cmc
repz
sub
sub
mov
decb
adc
mov
ljmp
loopne
pop
sub
push
jmp
push
aad
jp
loope
xchg
imul
push
cmp
adc
push
ljmp
push
loope
jo
movsb
mov
xlat
xchg
aad
pop
jo
jmp
pushf
mov
sbb
call
ret
int
mov
xchg
xchg
mov
and
shlb
adc
lods
fdivrs
mov
fcmovnb
in
jmp
sub
cmp
mov
cmp
add
cmp
sti
sbb
lret
in
movsl
mov
lods
pop
and
cmp
fisubl
push
or
cmp
mov
sub
sub
repnz
dec
aad
sti
xlat
add
mov
xchg
faddl
jns
jecxz
popf
and
cmp
mov
test
fs
aad
ljmp
or
test
out
sbb
fisubs
jmp
sub
test
test
fwait
lea
cmp
dec
pop
dec
fdivl
icebp
scas
mov
or
mov
imul
jle
stc
loop
adc
mov
inc
sub
les
jp
outsb
adc
fbld
dec
sub
lahf
pop
xchg
cmc
xchg
sub
roll
daa
push
jp
push
outsb
mov
imul
sbb
aaa
pushl
add
cmc
js
adc
sbb
clc
dec
jge
iret
inc
lcall
imul
pop
mov
mov
or
mov
push
add
cld
xor
cmp
adc
mov
sub
mov
int3
pusha
aaa
dec
and
xor
adc
pop
ja
jnp
scas
ss
lea
and
mov
dec
fsts
xchg
sbb
or
mov
subb
lds
mov
jmp
jge
add
inc
lods
clc
cmp
cmp
xor
xchg
cmp
push
in
int3
sbb
out
loopne
xchg
pushf
add
dec
inc
stos
dec
pop
mov
mov
cmp
cmc
clc
scas
cli
pop
mov
sub
jb
jnp
dec
mov
aad
or
lock
xor
bound
cmpsb
cmp
cmp
data16
in
xchg
sbb
movsb
adc
imul
loop
mov
push
out
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
mov
decb
adc
outsl
clc
inc
ljmp
insb
xchg
pop
les
cmp
mov
or
push
cmc
pop
orb
push
xor
je
or
inc
xor
pop
dec
notl
adc
mov
push
mov
inc
loopne
outsl
nop
cmp
cs
in
lcall
sbb
jmp
fisubs
pop
and
iret
push
xor
hlt
mov
lret
in
xchg
or
pop
jno
push
shrl
or
test
or
add
push
mov
dec
fcmovbe
jns
add
enter
sbb
pop
test
push
and
fiaddl
jmp
fstp
ficoml
pop
mov
das
out
lss
adc
fmul
js
fnsave
mov
outsl
jg
jns
lret
stos
aad
int3
cmp
sub
pop
adc
in
push
jb
mov
insb
nop
cmp
lret
sub
in
das
movsl
mov
loopne
jecxz
pop
and
mov
pop
gs
mov
sub
cmp
cwtl
js
ret
sbb
xor
pushf
sbb
mov
pop
xchg
or
mov
pop
push
in
xor
popf
out
rol
mov
enter
imull
push
nop
and
inc
jae
rcrb
popa
xorb
cli
push
adc
mov
popf
or
imul
iret
ja
outsl
stos
xor
gs
dec
out
mov
adc
rcl
jmp
xchg
jo
adc
call
fs
xchg
in
sub
and
jl
xchg
dec
ja
mov
jbe
mov
xchg
dec
and
mov
lret
test
xchg
outsb
and
pop
push
pop
cmp
jle
and
pop
fists
leave
push
das
xchg
mov
ret
push
cmpsb
inc
ss
cmpsl
fnsave
insl
push
sub
out
stos
xchg
xchg
jl
addr16
push
inc
mulb
fistps
call
push
or
arpl
xchg
jnp
pop
or
in
push
mov
push
cmpsl
sub
and
cmp
js
int
es
sub
mov
xor
fiaddl
leave
cmp
fisttpl
test
std
test
mov
lret
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
push
adc
decb
adc
xchg
scas
dec
xor
mov
lods
cmp
pop
cmp
out
and
xor
inc
cmp
push
mov
push
fiadds
xlat
ljmp
outsl
mov
sbb
dec
dec
pop
jmp
pop
repnz
test
mov
lret
shr
aaa
in
push
adc
dec
mov
fsub
and
xor
mov
push
push
in
push
adc
je
movsl
icebp
in
into
mov
mov
xor
hlt
adc
or
mov
pop
mov
mov
inc
fadd
mov
shrb
lret
fists
pop
in
fwait
je
mov
in
inc
iret
jecxz
inc
leave
jnp
lret
insb
into
adc
or
push
cltd
cmp
shl
lahf
pop
outsl
lock
ljmp
jne
movsl
movsb
arpl
jg
es
dec
lods
int3
int3
cmp
or
daa
sub
loopne
mov
mov
xchg
mov
rcrb
je
and
out
fidivs
lahf
push
daa
pop
fsubrs
test
cmp
jl
ret
or
mov
mov
xchg
imul
lds
mov
hlt
ror
inc
jl
in
aaa
xchg
lcall
popa
sub
into
sbb
cmc
or
mov
or
mov
in
loopne
int
cwtl
fldl
sbb
cmc
mov
ja
mov
data16
push
or
mov
cs
sbb
shrl
dec
addb
loop
and
xchg
adc
aad
fidivrl
out
mov
popf
nop
mov
lods
add
hlt
pushl
mov
push
stos
mov
fsubrl
mov
mov
lods
inc
sub
into
arpl
sti
int
fstpt
fldln2
jns
push
outsb
pop
sub
repz
repz
sbb
xchg
dec
ret
push
push
insb
dec
sbb
push
inc
dec
or
mov
aad
pop
cmpsl
push
inc
mov
sbb
js
sbb
call
scas
xor
push
sub
xchg
cmp
adc
test
jp
push
and
loope
stc
and
mov
mov
fdivrs
and
aas
int3
sbb
pop
pop
lds
rolb
mov
mov
add
shr
gs
fcoml
and
adc
fisttpll
lds
xchg
outsb
das
or
loopne
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
dec
lahf
outsb
insb
arpl
adc
movlps
stc
sub
das
imul
sub
push
xor
pusha
fisubs
aas
aas
xor
outsl
mov
das
outsl
push
pop
dec
pop
xchg
xchg
aas
lods
sahf
push
mov
push
cmpsb
mov
mov
orl
repnz
push
inc
in
pop
pop
cltd
lcall
jg
push
dec
jmp
push
sbb
je
dec
pop
out
mov
inc
in
loope
pop
pop
and
outsb
sbb
and
cld
shlb
pop
cmp
fdivl
test
mov
cmp
push
enter
jg
push
sti
adc
bound
push
inc
jno
ret
dec
mov
shll
call
sti
add
sub
dec
scas
sbb
sub
lods
jmp
adc
es
out
out
push
dec
in
xor
fs
sbb
mov
push
je
sub
nop
cmp
icebp
mov
dec
fldcw
test
and
inc
lock
mov
mov
mov
cli
popa
jge
into
test
adc
loop
jbe
test
lret
sbb
jge
and
call
mov
add
in
push
leave
ret
stos
push
fs
and
pop
fdivrl
xchg
and
adc
shlb
dec
jle
cmp
push
test
pusha
mov
jne
sub
cmp
jg
xlat
or
lods
and
notl
dec
popf
sbb
mov
lock
push
movsl
cmpsb
int
jle
inc
addl
push
lods
inc
pop
pop
xor
jbe,pn
fdiv
insb
sarl
loop
hlt
add
jp
inc
jns
mov
fwait
xor
jle
jne
inc
jae
jmp
xor
mov
out
and
push
divl
inc
mov
idivb
in
jmp
push
repnz
lret
xor
lods
aam
sbb
sbb
add
scas
popl
dec
sti
or
icebp
push
repnz
sbb
xchg
cmp
imul
leave
mov
js
pop
mov
push
cmp
mov
int3
in
mov
push
and
cmp
cmp
pop
jl
jae
dec
xchg
addr16
push
repz
add
mov
bound
push
adc
test
in
lret
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
lods
sarb
popa
adc
decb
adc
push
and
and
ret
movsl
push
or
enter
lahf
adc
mov
push
cmpxchg
stc
dec
lret
dec
push
andb
jp
popa
gs
jnp
fidivrs
cmp
stc
icebp
movsb
mov
mov
xor
mov
mov
mov
pop
and
pop
pusha
fisttpll
stc
insl
pop
je
test
clc
bound
sub
pusha
mov
scas
jnp
jg
pusha
mov
jae
sub
popa
mov
andb
js
dec
cltd
hlt
cmpsb
ja
mov
rdpmc
iret
xchg
aas
xlat
jmp
pop
jle
xchg
divb
lods
xchg
jp
jle
add
xchg
jo
ffree
in
inc
adc
push
adc
dec
inc
jae
ds
fmull
cltd
pusha
xchg
pop
add
pop
sarl
mov
push
xor
cmc
adc
out
repnz
xor
cmp
mov
ss
sub
pop
cmp
sbb
fs
movsl
hlt
mov
cmp
mov
jmp
adc
test
sub
ret
imul
sbb
xchg
pop
inc
negb
adc
sub
jl
mov
out
sub
push
ja
and
std
mov
jns
jns
sbb
lahf
or
pop
repnz
mov
jo
mov
imul
add
add
ret
in
hlt
cmpsb
lds
jl
aam
into
pop
es
sbb
xchg
jbe
insb
lret
dec
sbb
adc
sub
mov
push
negb
call
aad
cld
push
sbb
hlt
fistpll
flds
jo
fisubl
adc
adc
push
lods
std
je
int
decl
in
add
lcall
decb
popa
sahf
xlat
aam
dec
cmp
ja
or
mov
push
data16
dec
dec
daa
xchg
cmpsb
je
sahf
jmp
or
into
push
push
insb
lods
cwtl
leave
dec
sub
iret
adc
cmp
pop
push
cmpsl
pop
subl
jae
dec
cmc
pop
push
adc
sbb
mov
sub
adc
sub
mov
jp
jmp
stc
subl
adc
inc
cmc
or
push
mov
mov
and
jmp
aam
jne
sbb
sbb
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
push
pop
adc
decb
adc
icebp
pop
ss
jbe
add
divl
std
mov
and
rcl
mov
pop
lock
shlb
add
push
lea
inc
pop
in
fwait
loop
loopne
mov
mov
sbb
icebp
outsl
nop
lret
inc
jo
mov
lret
push
xor
mov
sub
cmp
dec
and
and
and
push
pop
outsb
ds
addr16
xor
lods
stos
xchg
aad
or
mov
push
jecxz
xor
shrb
xchg
gs
push
and
cwtl
cmp
mov
mov
jge
addr16
ja
test
rcrl
xrelease
hlt
ror
cmc
push
int3
fidivs
repnz
leave
pop
call
lock
aad
out
xor
and
andl
daa
push
cmp
cmpl
mov
imul
ss
dec
pop
lahf
ret
arpl
mov
jge
test
dec
and
scas
cmp
xor
movsb
adc
mov
scas
stc
sbb
aam
jl
xchg
int
aad
rolb
mov
sbb
fildll
mov
mov
movsb
push
jmp
push
pop
push
and
sarl
inc
push
push
push
aam
sti
imul
data16
movsl
pusha
test
mov
sub
pop
xchg
test
mov
int
adc
jns
push
inc
aad
mov
icebp
dec
cwtl
adc
andl
stc
dec
hlt
sbb
jg
loope
arpl
in
pop
sbb
loopne
addr16
or
popa
add
ja
out
out
popa
cwtl
in
push
pushf
fisubl
adc
push
out
ja
dec
lods
dec
or
pop
xor
ja
test
ljmp
push
dec
fwait
in
push
into
imull
mov
pop
pop
sbb
ja
ljmp
aam
enter
or
lret
pop
inc
add
aam
popf
out
jmp
arpl
sub
add
dec
jecxz
test
jecxz
bound
mov
inc
cwtl
jbe
lock
cmc
cli
mov
cli
and
adc
or
pslld
aam
add
insb
lret
xchg
nop
pop
mov
sub
fldz
lret
xchg
sbb
scas
ja
nop
inc
sbb
call
out
jmp
dec
cmpsb
andb
mov
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
mov
push
adc
decb
adc
xor
xchg
xor
cmpsb
dec
dec
pushf
jns
stos
rcrb
jnp
rcrl
sbb
jo
das
inc
ret
xor
out
iret
pop
scas
insb
loop
cmp
aaa
pushf
mov
sub
pop
sbbl
leave
xchg
rcr
add
mov
jle
ret
stos
imul
les
dec
ss
or
mov
adcb
pushf
ss
movsl
pop
mov
std
pop
fnstenv
push
sub
inc
in
inc
add
sbb
cld
fwait
push
push
adc
roll
das
shlb
xlat
daa
xchg
jg
test
pushf
out
sbb
sbb
fimuls
mov
mov
cmp
cmp
dec
jns
out
sbb
mov
pop
adc
push
mov
into
rorl
jne
mov
mov
ja
fildll
scas
and
adc
addr16
xchg
add
and
jge
xchg
xchg
xchg
inc
mov
mov
cmp
add
outsl
lahf
mov
mov
cmp
mov
sub
imul
inc
mov
pop
pop
outsb
cmp
imul
push
out
push
jmp
xorl
mov
add
push
ja
cmpsl
cwtl
jmp
test
sub
push
adc
mov
data16
mov
insl
xor
push
xor
pop
testb
mov
mov
pop
in
mov
cltd
divb
cmpb
inc
xor
add
xchg
and
push
xchg
imul
dec
std
or
pop
inc
mov
jne
cld
xchg
xorl
int
daa
ljmp
cmc
push
fstps
sti
cmovs
jno
mov
dec
xor
lahf
fwait
mov
or
les
push
mov
ja
inc
sbb
ss
scas
ja
call
sbbb
add
movb
nop
push
cmp
loopew
mov
xchg
shrl
pop
test
aas
and
sbb
jne
rcrb
cs
scas
or
lret
movsl
insb
fimull
jb
aam
xor
lods
and
dec
pop
sbb
loopne
stc
adc
mov
push
lods
xchg
cmp
add
testl
lock
add
test
test
jnp
mov
dec
adcl
push
pop
and
cmpb
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
mov
adc
decb
adc
ja
pushf
loop
mov
scas
cmovge
std
mov
inc
xchg
test
out
push
sbb
xchg
fmul
xchg
nop
insb
leave
in
sarb
in
xchg
ret
inc
lret
lea
sbb
dec
cli
jp
jae
ret
mov
sbb
mov
insb
add
jg
aam
gs
jg
jl
aam
xchg
lret
adc
xlat
movsb
pop
or
jge
repz
mov
sti
loopne
mov
adc
sub
and
js
cmp
andl
icebp
inc
scas
out
mov
rorb
pop
push
xlat
sbb
and
bound
mov
sbb
shlb
popa
data16
iret
daa
ja
push
jg
and
push
fcomps
mov
adc
inc
add
cmp
lret
cmp
or
lret
scas
stos
cltd
fbstp
dec
pop
xor
lock
mov
cmp
aam
inc
cmp
ds
sub
dec
jp
xor
jb
cmp
jp
jle
mov
jne
scas
aad
jnp
cmp
fstpl
mov
push
add
gs
loop
fadd
or
mov
xchg
imul
int
test
or
ret
into
jmp
arpl
sahf
lcall
pop
xor
fwait
adcl
lea
mov
pop
test
cmp
inc
leave
mov
in
push
jmp
mov
mov
inc
je
or
push
inc
cmp
sub
adc
out
push
xchg
mov
pop
mov
bound
add
idivl
ret
or
mov
jb
mov
orb
sbb
push
add
out
and
mov
mov
fistps
add
rcrb
es
jle
test
aas
push
psrld
cmc
and
in
jnp
outsb
icebp
xor
push
add
mov
xor
lods
xchg
mov
push
xchg
insl
xchg
fdivrs
push
shrb
mov
stos
or
call
jae
popa
pop
divb
push
and
mov
xor
sti
cwtl
dec
movl
jge
or
es
pop
out
jbe
rclb
outsb
inc
pop
shrb
dec
mov
push
mov
and
or
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
sub
push
dec
adc
decb
adc
xchg
xchg
out
add
jecxz
sub
pop
mov
inc
dec
sbb
stc
notb
mov
enter
sbb
mov
add
movsl
in
add
pop
pop
dec
cmp
roll
xchg
js
sbb
imul
movsb
sub
mov
shlb
jecxz
fsubr
out
lods
pop
mov
das
mov
dec
sti
jg
loopne
mov
icebp
push
rcll
int3
xchg
pop
dec
outsl
push
push
in
pop
add
push
lds
push
int
xchg
std
mov
pop
sub
ret
std
pop
xorb
repz
dec
pop
push
jge
pop
push
jne
in
lea
dec
test
sub
xchg
push
xchg
mov
push
ficompl
sar
arpl
out
cmpsb
xor
push
adc
cwtl
jns
pop
xchg
pop
mov
addr16
repz
jne
xlat
adc
mov
and
mov
icebp
pushf
icebp
fdivs
sti
push
xlat
sbb
mov
pop
inc
loopne
sbb
xor
adc
mov
pop
jns
out
jge
mov
xchg
aad
lret
inc
xchg
mov
pop
xor
mov
inc
sub
jnp
inc
jno
cmp
inc
js
jecxz
bound
cmpsl
js
sub
cmpsb
adc
pop
movsb
and
popl
ljmp
cmp
or
mull
lret
mov
loope
jmp
insl
mov
push
aad
push
stos
mov
es
out
add
pop
jne
xchg
movsb
xchg
outsl
aaa
sub
mov
xorl
or
push
cwtl
testb
inc
lods
push
jg
jge
mov
bound
sti
cmp
into
rcl
iret
std
push
leave
jle
mov
sti
out
mov
test
cmc
faddp
push
insb
and
pop
repz
sbb
pop
unpcklps
iret
dec
vcvtpd2psx
inc
push
push
lods
mov
lds
ficompl
imul
and
cmpsb
jnp
addr16
scas
add
mul
shl
mov
adc
sbb
roll
jle
popw
div
out
adc
lcall
push
repz
les
or
repz
adc
arpl
arpl
pop
mov
rcrb
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
push
neg
adc
dec
lahf
push
xor
js
or
pusha
and
fbld
or
or
xchg
or
in
xor
mov
or
inc
stos
jae
mov
daa
mov
daa
jg
aam
fs
push
jge
jbe
aad
popf
lret
sbb
lds
inc
xchg
ja
and
add
std
cltd
shrb
loopne
add
je
dec
mov
mov
into
xchg
or
movsl
jo
xchg
mov
daa
pusha
jge
xor
jl
outsb
inc
imulb
ficoms
push
sbb
xor
lods
xchg
out
pop
push
add
push
enter
xchg
movsb
pop
test
jmp
sub
adc
cmc
and
shlb
add
sarl
xor
out
inc
gs
sbb
mov
pop
fnsave
pop
mov
repnz
add
dec
add
cwtl
cmp
push
push
in
cmp
jae
addl
pop
addr16
cli
pop
outsl
jae
cwtl
dec
mov
mov
lods
out
aam
shrb
and
pop
pop
fimull
icebp
dec
cmc
rol
inc
jecxz
lds
push
out
dec
shrl
adc
mov
fwait
clc
jmp
fwait
scas
xor
sub
sub
sbb
rcrl
cmpsb
jl
inc
dec
adc
mov
in
xchg
mov
in
pushf
scas
pop
xchg
pop
sub
gs
pop
es
jle
inc
out
std
jg
and
push
xchg
pop
inc
js
fmuls
xchg
sbb
mov
mov
mov
jns
test
cmpsb
xlat
fistps
imul
mov
cld
loopne
stos
adc
mov
bswap
mov
push
xor
push
pusha
xlat
fisttpll
mov
loop
push
ficoml
je
fimull
cmpsb
jo
or
movsl
or
jg
cltd
iret
add
fsubp
sbb
jmp
and
and
jl
std
xchg
dec
sub
mov
je
addr16
mov
pop
add
out
add
cmp
sub
sbb
ja
cmc
loopne
out
add
sbb
lret
fistpl
aam
mov
push
fimull
std
stos
loop
jmp
cmp
int
mov
test
jecxz
dec
cli
ljmp
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
mov
cmp
ljmp
cld
out
mov
cs
sub
push
les
add
test
addr16
cmp
push
bound
inc
xor
mov
scas
push
cmp
fsts
rorl
pop
rorl
inc
aam
cld
xchg
or
cltd
lods
arpl
push
es
inc
sbb
pop
jo
loopne
loop
leave
sbb
das
jle
aas
mov
jo
push
in
shlb
push
mov
cmp
inc
mov
mov
sti
push
adc
cmp
inc
sub
add
in
adc
and
popa
push
leave
test
push
adc
cmp
jae
dec
mov
les
das
repnz
or
xorl
mov
jno
in
sbb
push
jb
das
sahf
rcr
add
push
xorb
xlat
scas
decb
in
rolb
outsb
aad
jl
js
xchg
and
add
lods
sbb
sahf
inc
mov
dec
adc
push
fcmovnu
push
mov
mov
xlat
inc
add
adc
jae
mov
push
cltd
lret
pop
mov
int3
movsb
fs
ljmp
sbb
lret
or
loopne
pop
sub
fbstp
or
pusha
bswap
mov
push
mov
pop
adc
lcall
cwtl
out
inc
mov
std
ret
pop
push
push
mov
popa
call
mov
push
mov
loop
sbb
cmp
and
es
mov
add
rcrb
jb
add
out
inc
adc
stc
fsubp
mov
imulb
xchg
or
in
pop
jmp
push
pop
xchg
sbb
dec
sub
aad
aas
mov
sbb
push
pop
and
mov
aad
add
cs
and
out
push
sbb
cwtl
jl
jge
cwtl
cmp
cmp
es
dec
cmpsl
cmp
insl
mov
fs
xchg
aad
imull
sub
into
xchg
dec
adc
push
icebp
add
mov
mov
scas
test
or
into
das
xchg
sahf
add
cltd
rcll
sahf
dec
rcrl
shrb
pop
fildl
stos
inc
pop
out
adc
ret
cmpsb
cmp
cmpl
insl
sub
and
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
mov
cmp
adc
mov
push
pop
mov
int
stos
mov
mov
loope
xchg
mov
push
scas
mov
cmp
sysexit
test
cs
je
rclb
adc
fs
in
mov
jns
pop
sub
jae
fisttpll
mov
je
mov
cmpsb
js
mov
sub
mov
mov
pop
mov
adc
in
jp
test
jl
lcall
hlt
push
pop
lea
sbb
aam
insl
xchg
test
add
xchg
push
addl
cli
push
mov
outsl
xor
call
xor
arpl
jle
xchg
test
test
xchg
jge
icebp
add
into
jmp
fnstenv
jle
movsb
or
jae
push
jg
nop
ja
or
inc
xor
in
pop
mov
jmp
jmp
fistps
jae
repnz
inc
sarb
jne
xchg
push
cmp
out
fwait
pop
cltd
shll
aad
sti
push
sbb
movsl
add
pop
enter
pop
lret
cmp
sbb
sbb
sbb
in
lahf
jl
xchg
mov
and
inc
es
out
imul
fldenv
push
lds
lds
jae
and
pop
lahf
and
push
iret
lods
shr
pop
mov
or
insb
jns
jo
mov
push
sahf
imul
jmp
add
push
ret
push
fstl
cmp
xchg
lock
push
arpl
fdivs
test
xor
add
jp
adc
lcall
adc
adc
and
stc
xchg
cmp
push
or
jge
pushf
loop
enter
mov
xor
sub
sbb
dec
hlt
sub
mov
pop
jne
test
mov
add
jo
daa
inc
bound
aad
sarb
or
dec
xor
rep
xchg
push
pop
pusha
dec
and
jno
cmp
pop
bound
dec
or
xor
sub
shll
add
js
mov
cli
adc
or
sbb
adc
mov
shlb
call
aas
jle
in
sbb
movsb
iret
loop
and
or
jne
pop
jecxz
out
outsl
shll
mov
dec
pushf
push
push
xor
pop
mov
push
ret
popa
sbb
aas
btr
adc
add
jecxz
scas
dec
xor
fs
mov
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
lahf
in
dec
cmp
adc
sub
sbb
mov
inc
dec
outsb
insl
ljmp
push
mov
leave
jae
fwait
lds
jb
lret
jg
icebp
movsb
call
xchg
imull
pushf
xor
pop
pop
xchg
pushl
pop
and
sub
pop
xchg
xor
roll
xor
dec
sbb
adc
ds
adc
scas
mov
pop
addr16
push
mov
inc
jp
imul
mov
jno
dec
shlb
arpl
adc
lcall
adc
sbb
mov
mov
xchg
sub
fistpll
sub
push
insl
addr16
lret
popf
andb
push
test
bound
jnp
sti
cmp
sti
cmp
mov
into
push
imul
push
mov
stos
jmp
cli
inc
cltd
dec
add
mov
dec
pop
andb
inc
push
outsl
sbb
cmpb
mov
xorb
xor
pop
adc
dec
sbb
enter
pushf
ljmp
lea
sbb
and
xchg
outsb
ljmp
rclb
jno
cli
jb
inc
sub
rorb
loop
data16
loope
push
inc
sbb
fsts
insl
sub
gs
in
in
outsb
inc
jnp
inc
jmp
mov
add
cmpsl
loopne
dec
and
or
stc
mov
notb
out
insl
mov
pop
sub
ss
int
fwait
iret
and
dec
jl,pt
xchg
fwait
cmpsb
or
xlat
daa
cmpsb
xor
xchg
jg
ret
stos
or
movsb
mov
mov
push
dec
xor
mov
add
imul
jle
lea
sbb
cmp
xchg
fs
mov
int3
dec
repz
xor
sub
in
sub
pop
lret
mull
orl
addr16
testl
rcrl
xchg
lcall
xchg
fistl
ret
pop
pop
stos
xchg
jg
pop
ljmp
pop
cli
add
push
daa
rorb
insb
mov
sub
cli
cltd
inc
mov
je
xor
jge
insl
mov
add
add
popf
xchg
pop
mov
arpl
outsb
je
jge
cld
mov
lahf
jno
jmp
fs
lret
repnz
xchg
mov
push
scas
out
or
pop
jl
hlt
inc
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
and
adc
popf
movlps
xor
xor
push
cs
cs
fwait
mov
sbb
cmpsl
fwait
pop
mov
adc
jnp
sub
or
mov
in
jns
mov
enter
pop
xchg
sbb
andb
or
push
mov
or
sub
mov
leave
jnp
imul
mov
pop
ss
test
out
or
mov
adc
das
fs
jecxz
push
mov
xchg
add
add
push
mov
mov
dec
inc
sbb
ja
fimuls
mov
into
mov
jns
test
popf
and
mov
mov
js
jns,pt
aaa
push
fstpl
adc
push
outsb
out
or
mov
lds
jl
inc
jb
mov
in
or
test
sbb
nop
rcrb
add
sub
xor
loopne
pop
iret
fimull
mov
push
movsb
movsb
lods
push
fcmovnu
iret
xchg
push
mov
or
in
mov
push
test
push
stc
jge
shl
repnz
popf
push
in
icebp
xchg
lods
push
jmp
ljmp
insl
mov
xor
push
jge
cmpsl
lret
sbb
cmpl
mov
mov
ret
bound
sub
lods
fs
int
push
rol
mov
loop
pop
mov
imul
add
in
in
daa
add
and
movl
sub
push
mov
stos
jge
stos
adc
cld
inc
fstpt
jae
push
fcompl
mov
addb
stos
push
dec
in
lahf
pushf
in
mov
or
xchg
clc
and
pop
pop
int
mov
inc
mov
xor
add
mov
fcmovu
xchg
into
mov
mov
mov
and
bound
loop
jae
cwtd
mov
fiaddl
mov
ja
add
not
dec
stos
js
in
cli
jg
mov
js
out
repnz
xchg
add
dec
xchg
mov
outsl
mov
push
icebp
and
rcl
dec
cmpsb
mov
mov
inc
gs
pop
and
cld
adc
pop
jp
jnp
jge
popf
insl
test
nop
imul
adc
push
sbb
outsb
xchg
mov
stc
decl
dec
arpl
into
add
clc
inc
movsl
in
into
repz
xchg
pop
dec
rorb
inc
shrl
clc
inc
notl
out
dec
pop
test
nop
lahf
xchg
mov
push
jo
data16
mov
push
shlb
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
lcall
jl
pop
fidivrs
xchg
xlat
stos
sbb
mov
in
xlat
sbb
lcall
adc
cwtl
sbb
subb
or
jmp
testl
push
rclb
push
les
jae
test
xor
push
push
cld
movb
push
int3
scas
and
pop
lret
iret
mov
lahf
jge
cmp
sbb
rolb
out
adc
or
jbe
mov
jmp
sti
dec
push
iret
pminub
push
arpl
mov
fisubrs
xor
into
je
pop
inc
ja
in
cmovne
cmp
mov
pop
xor
xor
sbb
pop
jbe
jo
sbb
into
inc
int3
stos
mov
mov
cmp
push
aam
sbb
add
jnp
mov
dec
imul
imul
je
push
shll
mov
inc
xchg
cld
xorl
scas
sbb
jbe
loopne
out
and
xor
adc
xor
cwtl
loop
or
mov
jae
mov
repnz
push
sarb
jle
sub
enter
lods
hlt
push
mov
rorl
mov
push
daa
cmp
lods
test
daa
scas
adc
gs
adc
test
add
sub
xchg
xor
ss
out
inc
out
test
mov
and
fidivrl
inc
shll
inc
push
cmc
mov
and
orl
test
cs
cmpb
jl
shll
xchg
out
rolb
fsts
stc
int
jo
test
lods
jo
mov
fs
pop
pop
sbb
call
mov
jo
pop
push
stos
pop
xor
mov
cli
xchg
les
test
push
sub
out
adc
test
std
mov
add
sbb
outsl
aad
jl
sarb
ja
ja
add
loop
sub
mov
aaa
inc
ret
sub
jl,pn
sub
push
scas
xchg
inc
loopne
pop
lahf
lds
mov
push
data16
adc
fldcw
cld
out
xor
mov
addr16
push
lahf
pop
repnz
push
or
mov
mov
mov
and
cmp
daa
or
nop
movsl
outsb
call
sub
ret
mov
add
pusha
stc
clc
pop
add
or
jmp
imul
add
inc
in
out
fyl2x
cmpl
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
cli
mov
cld
xchg
mov
add
in
data16
iret
mov
add
sar
jg
fcmovu
pop
push
ds
jp
xchg
mov
inc
xlat
or
enter
nop
push
div
sub
stc
rorb
adc
test
test
fwait
sub
sub
jmp
out
sub
outsl
sub
aaa
sbb
jl
negl
ljmp
ret
sub
cmp
out
xchg
mov
hlt
push
movsb
xorl
data16
inc
test
lds
fidivl
sbb
inc
aaa
jbe
push
mov
mov
sbb
fs
push
sub
mov
fldcw
xchg
add
sbb
sub
or
adc
lret
stos
jp
sbb
push
add
mov
cltd
imul
scas
pushf
scas
andl
jne
repz
push
push
out
pop
in
cmp
adc
roll
imul
test
leave
xchg
add
fwait
aam
jnp
push
jae
clc
std
jecxz
mov
cs
cmp
jae
sarl
xor
add
lahf
sub
icebp
xchg
stc
sahf
aaa
mov
imul
cwtl
int3
inc
push
push
push
pop
jmp
cli
mov
insb
aad
ret
cli
imul
out
fisttpll
push
fisttpll
pop
iret
mov
sub
adc
dec
mov
pusha
push
scas
icebp
mov
sti
fnsave
ja
lds
fisttpll
mov
shll
jae
mov
jmp
ret
pop
les
ffreep
fnstsw
push
test
jae
jne
loope
jle
sub
aaa
not
in
mov
cli
shlb
push
xchg
adc
sub
add
adc
add
xor
outsl
inc
fldenv
mov
cmp
aas
dec
mov
fcmovb
cmpsl
into
jg
push
out
cmp
hlt
mov
hlt
data16
imul
sub
jns
imul
clc
ret
mov
popf
outsl
pop
jbe
cwtl
add
cmp
jg
in
mov
jg
in
and
ja
ljmp
and
pop
sub
arpl
push
imul
adc
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
xchg
js
pop
adc
iret
movlps
fimull
sub
fsubr
je
or
daa
jge
inc
sbb
cmp
test
cmp
mov
or
out
out
inc
mov
je
mov
mov
jo
icebp
or
fwait
int3
lods
or
loope
test
mov
aas
rcll
jmp
int3
cli
xlat
das
call
xor
push
sbb
dec
rorb
jne
pop
icebp
insl
call
jno
lret
cltd
push
imul
push
pop
repz
xor
insb
vmwrite
inc
call
mov
paddd
js
inc
pop
inc
xchg
xor
cmc
or
arpl
movsb
aaa
popfw
in
fmull
pop
inc
cmp
cs
jno
lret
mov
inc
fidivrl
sbbl
mov
fcmovu
sti
lds
movsl
jns
mov
or
or
add
lea
incb
lcall
jge
out
into
pop
pop
add
scas
shlb
pop
xor
cmp
adc
fmull
icebp
gs
stc
rorl
inc
xchg
push
in
ds
and
enter
sub
loope
repnz
testl
xor
aas
arpl
mov
pop
fistpl
cmpsl
or
leave
fwait
dec
add
pushf
push
nop
int
call
movsb
add
mov
push
cs
xor
aad
fs
lods
mov
ret
stc
push
cwtl
xchg
cltd
jle
movsl
outsl
fidivl
xchg
push
jl
sbb
repz
dec
adc
mov
fsubrl
scas
sub
insb
sbb
mov
ret
fadds
pusha
jmp
jb
sub
mov
mov
mov
jb
push
ret
dec
test
sbb
dec
add
mov
mov
cmp
xor
shl
and
or
xor
nop
mov
sti
and
fistpl
dec
xlat
adc
in
insl
ret
loop
imul
ss
movsl
dec
enter
aam
push
les
cs
andl
ljmp
sbb
and
cmp
or
sbb
or
repz
jp
push
lret
fsubs
cwtl
leave
mov
fs
outsb
cmp
jecxz
imul
test
push
scas
and
push
je
es
ret
push
clc
fiadds
setno
das
shlb
inc
and
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
pop
push
adc
movlps
jb
mov
jbe
adc
aaa
adc
rcrl
inc
inc
sbb
jnp
dec
cmp
mov
xorb
orl
fimull
leave
test
or
les
mov
shlb
popa
fcomp
inc
lcall
hlt
pop
push
test
or
jg
movsl
call
fsubrp
outsb
push
loope
ror
dec
jmp
pop
lock
aad
push
dec
xchg
mov
hlt
ret
scas
fsubrs
adc
jns
clc
or
pop
cmpsl
adc
inc
adc
popl
mov
ljmp
cmpsb
aaa
push
ljmp
outsl
lcall
test
mov
lea
lret
mov
pop
xlat
sbb
xor
mov
lea
call
xchg
mov
cli
mov
jb
mov
mov
mov
cmp
mov
test
mov
xchg
and
lret
push
add
fldenv
mov
or
jne
nop
decb
add
ss
inc
push
rcrb
sbb
test
add
pop
add
mov
xchg
lea
out
lea
in
lock
inc
xchg
jl
push
push
clc
out
jle
mov
mov
mov
or
pop
cs
mov
jecxz
notb
and
mov
push
loopne
pop
jae
test
ficoms
ja
pushf
insl
mov
sub
sbb
pushf
loope
jbe
adc
mov
push
mov
sarb
jle
in
pop
mov
xchg
xor
outsl
cmp
dec
shlb
fists
mov
xor
adc
cmpsl
push
xchg
xor
jb
mov
shr
or
jp
ret
or
lret
ficoml
dec
outsb
dec
aam
mov
cwtl
push
pop
cmp
mov
je
repz
in
addr16
jne
loopne
out
cmp
loope
mov
pop
aas
sahf
loope
push
sbb
ds
stos
inc
mov
mov
fsubs
mov
dec
mov
jmp
dec
cmp
pusha
clc
add
push
or
xlat
in
xchg
xchg
jbe
or
imul
testl
aas
js
xchg
mov
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
or
adc
adc
add
call
pop
add
clc
pop
les
mov
cmp
xor
imul
insb
movsl
pop
or
in
gs
adc
dec
push
jb
loope
out
ljmp
ret
lods
cli
add
into
push
mul
in
cld
mov
mov
call
add
mov
push
mov
dec
insb
test
adc
mov
jmp
mov
mov
add
scas
nop
int
cld
inc
pop
ret
jb
into
cli
orb
jmp
test
div
dec
adc
pop
mov
sarl
cmp
mov
xchg
sbb
dec
sbb
ds
and
es
dec
dec
add
int3
adc
out
or
mov
mov
popf
out
test
imul
shrl
lods
xor
test
leave
sub
sbb
sbb
lds
cmp
add
test
mov
sarb
outsb
dec
loopne
mov
outsl
mov
movsb
ret
sub
cmp
mov
dec
push
mov
pop
lods
in
and
mov
or
nop
adc
xchg
sub
negb
push
jo
aas
iret
cmc
push
std
out
xchg
shr
cmpsl
test
call
mov
lcall
push
adc
fcomps
scas
insl
pushf
push
sbb
loopne
out
sbb
inc
xchg
or
or
mov
jg
and
repnz
mov
jbe
dec
pop
mov
lret
fdivr
sub
jnp
ret
xchg
xchg
cmpsb
mov
fldenv
sbb
fnsetpm(287
fildll
add
pop
jmp
shl
and
int
stos
in
adc
dec
adc
test
insb
mov
into
mov
cmp
negl
outsb
clc
adc
mov
cltd
sbb
add
sbb
jmp
into
jns
inc
lods
das
jp
mov
and
mov
inc
xchg
ret
rclb
sti
mov
imul
nop
mov
adc
dec
add
subb
mov
lcallw
sub
sbb
jmp
xchg
fwait
in
cmpl
ror
stos
xor
xchg
lods
idiv
mov
or
jno
xorl
clflush
mov
push
arpl
imul
sbb
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
lcall
iret
movlps
jg
jo
jbe
jp
or
xor
sarb
push
cmp
loop
hlt
decb
int
leave
jns
and
jg
mov
xor
pop
inc
xchg
xchg
insl
jge
jp
or
ss
or
push
xor
dec
cmp
test
cmp
pop
dec
sbb
rcr
stos
sub
sbb
mov
mov
or
fisubrs
mov
xor
imul
xor
push
xchg
leave
orb
psubw
out
adc
mov
leave
out
out
aas
mov
mov
xor
scas
sub
push
or
dec
lods
das
xor
cmpsl
xchg
add
add
mov
sub
pop
call
es
pop
mov
inc
test
jp
or
inc
rcrl
std
test
pop
cwtl
mov
ret
adc
mov
push
xchg
scas
loope
adc
mov
lock
ss
arpl
rorl
cld
js
mov
and
pop
pop
jb
mov
mov
add
int
popa
push
push
push
imul
icebp
mov
adc
cwtl
pop
and
jecxz
lea
mov
xchg
fiadds
fistpll
jle
fldl
test
mov
xchg
cmp
dec
pop
pop
dec
fildll
mov
xchg
mov
in
add
adc
add
mov
in
inc
mov
mov
lahf
pushf
sbb
ret
cmpsb
shll
sub
stos
push
pop
add
test
loopne
mov
test
fmuls
pop
pop
aas
pop
pop
jno
jb
mov
jo
or
add
mov
sub
push
or
or
test
xchg
lods
sbb
pop
int
mov
shl
test
dec
test
pop
and
mov
mov
adc
in
out
pop
pop
and
cld
mov
inc
adc
mov
lds
inc
push
add
aas
lds
cmp
pop
imul
nop
or
mov
push
xchg
jp
xor
cmc
sub
mov
sbb
and
push
dec
outsl
cmp
jmp
mov
enter
aam
shrb
mov
adc
and
jp
data16
add
pop
movsl
lods
addr16
subb
add
cld
push
mov
cmp
sub
mov
shl
imul
or
push
dec
fdivs
or
or
or
jmp
dec
pop
imul
enter
mov
movlps
inc
rorl
cmp
es
mov
cmc
add
jbe
loopne
enter
sbb
lret
outsl
pop
cmp
jge
aad
lret
rol
icebp
xor
add
test
lret
mov
xor
daa
or
jno
out
bnd
push
lods
mov
pop
popf
cmp
arpl
lret
cmova
jge
adc
jge
or
clc
push
add
or
jecxz
iret
clc
out
cmc
lods
jl
pushf
pusha
mov
ljmp
insl
sar
pop
adc
movsl
aas
cmp
shll
push
dec
popa
or
scas
or
xchg
subl
flds
or
cli
inc
adc
mov
sub
cmpsl
mov
outsb
and
ret
xor
inc
sbbb
out
push
pop
dec
mov
addr16
fstp
mov
jl
idivl
sbbb
stos
xchg
hlt
adcb
js
shrb
mov
mov
sti
inc
mov
dec
cmpb
or
mov
mov
pusha
test
and
jge
mov
push
push
cwtl
cmpl
mov
mov
xor
pop
or
in
adc
cmp
sub
xchg
testb
sub
repz
packsswb
pop
mov
repnz
gs
or
push
mov
mov
or
lods
jl
inc
jge
sbb
mov
rorb
xor
in
mov
mov
push
subb
xlat
mov
jbe
xchg
gs
test
mov
test
mov
lods
xchg
and
out
daa
loope
inc
mov
sbb
add
stos
into
insb
add
or
bound
mov
es
fsub
subb
dec
add
mov
cmpsl
dec
test
sbb
pop
loopne
jns
jnp
push
xchg
jecxz
sub
jecxz
cmp
into
repz
jne
pop
cmp
push
out
push
ds
in
lock
in
data16
cmpl
pop
dec
aaa
mov
jecxz
insl
adc
ret
shr
push
sbb
mov
pop
mov
aas
mov
xchg
cmpsb
fmul
aas
arpl
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
ja
loope
dec
lods
push
adc
out
sbb
test
mov
fmuls
popf
push
lds
mov
xor
adc
xor
jbe
nop
sbb
xor
jge
cmpsb
shll
imul
pop
lds
je
jg
in
mov
data16
repz
pop
adc
xchg
mov
jmp
dec
stos
outsl
and
jnp
inc
or
mov
test
mov
cli
adc
xor
sub
inc
push
andl
pop
bnd
imul
sti
sbb
loope
push
daa
stc
cmpsb
out
ror
jne
sub
testl
fldenv
adc
lock
cwtl
insb
push
and
sub
fmull
sub
sbb
pushf
test
leave
and
imul
lret
into
sub
adc
data16
adc
lahf
imul
nop
push
arpl
mov
scas
pushf
mov
lcall
pushf
cmp
in
and
inc
scas
sub
push
dec
add
popa
ret
xchg
jns
rcrl
and
dec
add
jae
stos
rorl
int
and
dec
mov
cwtl
leave
jns
and
or
popa
repnz
fistpll
mov
pop
sub
fadd
dec
push
stc
xor
adc
loopne
lret
jne
loopne
add
outsb
jne
jae
fidivrs
sub
cmc
insl
inc
mov
lahf
adcb
out
outsl
and
in
fidivs
jl
cli
testb
in
jbe
int
int
push
int
add
sbb
pop
lahf
int3
jmp
sbb
mov
sub
fwait
in
mov
outsl
sbb
or
and
pop
add
mov
pop
jecxz,pt
ljmp
and
cmp
cmp
jo
pop
sahf
push
test
lods
repz
lret
and
icebp
jg
dec
cmp
xchg
xchg
test
mov
and
jnp
and
xchg
sbb
test
xor
add
lods
add
lcall
pop
add
inc
test
inc
jl
mov
mov
adc
ret
and
nop
xchg
jne
or
inc
mov
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
mov
insb
cld
call
adc
push
xor
and
insl
pushf
std
sbb
fisubl
mov
add
or
push
out
lods
mov
and
jno
notl
std
mov
test
das
iret
shll
fisttpl
inc
daa
xchg
xor
sbb
mov
leave
fs
mov
aaa
inc
loope
stos
inc
cmp
sarl
xor
imul
dec
push
in
mov
push
scas
or
sub
shll
dec
pop
adc
cs
out
imul
jae
xor
dec
pop
icebp
call
popa
pop
mov
or
lods
insb
sbb
icebp
inc
cli
xchg
mov
jae
and
mov
pop
popf
popa
insl
mov
mov
jmp
pop
cmp
sub
mov
and
xor
inc
pop
sti
push
pop
xchg
jnp
fcompl
fcoml
mov
test
aaa
scas
ss
nop
iret
jmp
pop
call
jbe
leave
cwtl
ja
nop
push
cmp
scas
cs
jmp
mov
xor
lret
add
mov
cli
jo
xchg
or
sbb
sti
subb
shlb
dec
fcmovnu
outsb
pop
std
mov
das
scas
fldt
mov
inc
clc
das
dec
xor
sbb
subl
dec
inc
or
les
mov
pop
ljmp
jne
and
jne
pop
dec
fdivrs
inc
push
cmp
adc
cmc
push
xor
mov
mov
shlb
and
mov
imul
sahf
in
and
test
mov
mov
ds
pushf
pushf
lahf
test
addr16
ljmp
sti
lahf
mov
xchg
jb
leave
pop
push
mov
btr
out
inc
ret
cmp
int3
sbb
pop
loop
push
notb
jmp
sbb
mov
cli
in
sti
ret
mov
dec
sbb
jg
les
mov
mov
test
popf
xchg
inc
mov
out
stc
adc
lods
das
mov
repnz
mov
sahf
push
push
cmp
xlat
scas
mov
pop
xchg
pusha
cld
jl
into
lret
or
daa
xchg
add
cmp
lea
loopne
or
sbb
xor
sub
pop
ds
adc
inc
inc
push
dec
data16
mov
icebp
ja
xor
shll
jae
fadds
arpl
out
inc
xlat
push
mov
sti
inc
mov
xchg
ret
cltd
dec
lea
mov
outsb
sub
mov
xor
sub
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
clc
int3
je
sub
jg
jecxz
push
xchg
sahf
mov
adc
cltd
push
in
scas
subl
inc
lahf
push
popf
in
pop
mov
fs
ljmp
sahf
jl
test
mov
adc
mov
sbb
movsl
lcall
sbb
les
mov
mov
push
repnz
cmp
repz
test
dec
repz
jns
add
jnp
pop
je
sar
imul
dec
icebp
dec
sbb
mov
or
hlt
js
shll
xor
xor
sbb
dec
mov
das
jle
or
out
jmp
push
mov
addb
sbb
or
push
stos
imul
jmp
pop
lret
jo
xchg
cmc
push
rcrl
xor
fmul
adc
add
flds
les
adc
push
movsl
sbb
jle
cmpsb
mov
fwait
pop
fisubs
daa
iret
mov
cmpb
movsb
xchg
xor
adc
int3
inc
popa
into
call
jns
xor
mov
dec
mov
jmp
lds
fiadds
push
lods
not
jb
aam
push
cmpsb
mov
mov
call
addb
mov
fcoml
jne
stc
or
stos
mov
cmpsb
and
push
jmp
pop
xorl
jmp
mov
mov
repz
push
loope
adc
iret
stc
xor
adc
inc
in
and
dec
push
lods
aam
hlt
lea
das
fucomp
mov
xchg
and
mov
or
out
pushl
loope
adc
push
out
sub
bound
lds
dec
inc
fisubrl
mov
push
es
add
pushf
xchg
pop
cld
fadds
aas
lods
ficompl
bnd
dec
sub
ja
int
pop
fcomps
mov
jp
fbld
cltd
inc
mov
cmc
sbb
inc
xor
dec
pushf
add
dec
cwtl
pop
push
shrb
mov
mov
pusha
stc
sbb
jb
jmp
js
je
loopne
cmp
loop
add
test
sub
enter
scas
cltd
mov
mov
xor
in
ficomps
movsl
scas
clc
inc
ret
aam
sbb
xor
cld
mov
xlat
mov
fiaddl
jns
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
fbld
adc
adc
and
jmp
nop
test
cltd
sub
sahf
jb
subl
inc
xchg
aam
push
in
fwait
dec
shll
mov
enter
stos
jl
cli
addr16
xor
out
hlt
fwait
repnz
xchg
xor
mov
sub
mov
jecxz
inc
pop
fisubrl
pop
sbb
ss
pop
adc
mov
jg
adc
sub
es
out
fisubl
cmp
lretw
sub
in
dec
sub
xor
pop
inc
outsb
push
inc
je
call
in
pop
sarb
and
inc
sbb
mov
mov
sub
xchg
test
dec
dec
imull
xor
sub
jae
icebp
sbb
aad
xchg
fidivl
cmp
jnp
xor
into
loope
cmp
and
sub
cwtl
loopne
push
gs
test
push
rcrl
test
adc
pusha
pushf
inc
xchg
roll
lahf
loopne
pop
xor
fists
mov
mov
divb
cwtl
mov
jnp
movsb
lret
pop
cmp
insl
outsl
inc
jb
jno
jmp
mov
lcall
pop
push
popa
andb
shlb
sub
aad
lcall
or
lret
add
lock
sbb
xor
push
pop
mov
shlb
inc
sti
ja
int3
cmp
fimuls
and
iret
aad
pop
mov
xor
sahf
pop
stos
sub
es
jl
mov
loopne
mov
outsb
dec
rorl
xchg
dec
add
dec
mov
and
je
pop
push
cmp
pop
or
std
into
inc
outsb
fidivs
push
outsl
dec
fistl
loopne
pop
fnstsw
lods
mov
int
and
mov
pop
ja
xchg
xchg
lret
into
cltd
mov
cs
xchg
and
dec
jno
ja
xchg
mov
sub
push
adc
cmp
inc
adc
shrb
jb
xchg
insb
pop
int
lods
daa
lds
in
stos
daa
add
add
ficoml
in
frndint
jmp
ja
into
mov
push
cmp
leave
pop
inc
lret
stos
cltd
test
jne
rcrl
cmpsb
mov
mov
mov
xchg
lahf
lret
mov
or
aas
jl
cld
push
lock
aad
out
or
aaa
xor
mov
jl
inc
and
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
imul
adc
xchg
push
xchg
add
repz
cs
dec
mov
cmp
xor
jp
mov
pop
into
cmp
mov
sub
stc
int3
push
negl
ficomps
gs
and
sbb
mov
pop
fiaddl
or
mov
inc
sbb
ds
add
sub
pushf
xchg
pmullw
jo
xchg
add
mulb
xchg
jmp
sbb
mov
inc
mov
les
mov
iret
dec
inc
mov
es
lock
adc
mov
lahf
jle
icebp
adc
mov
pop
subl
sbb
jb
inc
test
cmp
mov
fwait
dec
dec
repnz
int3
mov
sbb
inc
dec
mov
xor
cltd
add
flds
pop
insl
mov
push
jl
ja
sbb
ja
jae
ds
stos
fcmovnu
mov
sub
mov
xchg
popa
pop
aam
xlat
cmp
sti
dec
mov
jge
aam
mov
and
sub
addb
jg
add
scas
sbb
add
inc
inc
out
xchg
ss
daa
pushf
xchg
sub
sahf
shrb
jne
add
f2xm1
shll
xchg
stos
push
cmp
cmp
and
inc
jl
pop
cmp
subl
lret
mull
xor
xchg
pop
in
fcomp
jb
jmp
bound
ficoml
mov
enter
xor
pop
push
test
sub
jae
inc
mov
xor
mov
shll
frstor
mov
movsb
push
push
adc
dec
sbb
cmc
cmc
sub
fscale
shlb
ret
jae
stos
sbb
movl
sub
mov
sti
xor
loope
add
imul
add
aad
pop
cs
mov
sbb
pop
lret
lcall
cmp
mov
out
fstpt
cmpsb
add
lret
xor
and
mov
xor
std
and
cmp
fs
sub
flds
imul
cmpsb
xor
push
mov
adc
pop
lahf
repz
leave
jge
lahf
jge
mov
xchg
icebp
adc
mov
cmpsl
mov
arpl
subl
les
adc
sbb
arpl
or
jns
sarl
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
imul
jmp
adc
adc
jns
sbb
mov
xor
mov
lret
cmp
loopne
push
push
dec
jno
mov
int
inc
icebp
push
adc
std
add
sub
adc
mov
xchg
mov
xchg
mov
and
or
test
shr
ret
sti
mov
lea
sub
and
push
jg
or
loopne
xchg
lods
jp
lea
loopne
into
inc
ja
add
xchg
movsb
pinsrw
cmp
rol
mov
adc
ds
in
lcall
in
pop
and
aam
bound
out
or
xlat
test
add
dec
adc
adc
mov
addb
addr16
xchg
clc
xsha256
cmpsb
push
and
push
incl
movsb
aam
fisubs
cs
mov
test
out
mov
or
add
jmp
xor
out
jecxz
loop
xchg
push
or
sub
mov
lahf
push
mulb
sbb
adc
aaa
scas
cli
imul
loop
push
add
lds
sti
sbb
push
stos
mov
push
push
mov
imul
mov
push
push
addl
fnstsw
cltd
adc
fsts
cmp
std
cli
mov
cmp
mov
adc
push
imul
out
lret
cmc
cmp
iret
cmpsl
aad
fdivs
test
rorl
xor
inc
shll
js
inc
jecxz
test
test
push
xor
xchg
das
xchg
jecxz
mov
pop
arpl
pop
test
in
imul
loope
subb
mov
push
push
cmp
dec
imul
daa
out
repnz
push
mov
inc
mov
xchg
push
in
mov
stc
leave
mov
icebp
push
pop
or
pop
inc
push
dec
add
scas
jl
mov
push
sub
xlat
cmp
insl
pop
inc
mov
in
xchg
test
adc
mov
dec
xchg
mov
jno
fnstsw
or
fcoml
xor
flds
jno
jne
clc
dec
gs
aas
mov
cmp
stos
lods
mov
or
push
les
cmp
jecxz
push
push
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
xchg
push
icebp
lea
sahf
sbb
mov
iret
jnp
shrb
sub
arpl
addr16
test
rorl
dec
scas
inc
push
inc
mov
cwtl
and
pop
rorl
call
pop
sahf
lcall
in
lcall
sbb
and
mov
cmp
ret
lret
pop
mov
add
or
cmpsl
jg
sub
pop
jb
sbb
pop
pop
push
sub
std
inc
or
jecxz
pop
mov
mov
arpl
lcall
mov
shlb
mov
xchg
adc
mov
add
xchg
ljmp
or
dec
enter
cld
xor
lret
cmpsl
cltd
sbb
scas
cltd
clc
ja
stos
pop
or
mov
test
test
lods
leave
mov
mov
push
insb
lods
jmp
cwtl
mov
loopne
nop
mov
cmp
sbb
and
out
iret
adc
sbb
dec
sub
insb
push
cli
xchg
outsb
push
addr16
inc
jg
sbb
xchg
add
fwait
inc
push
jge
repz
lock
fidivl
cmp
call
cwtl
mov
mov
ja
addr16
xchg
stc
ret
xor
jbe
mov
test
outsb
add
addr16
and
lea
in
cmpsb
mov
lods
or
sbbb
mov
mov
xchg
push
cld
insb
test
or
lds
inc
dec
or
push
daa
adc
fld
push
fcomps
adc
cmp
test
pushl
adc
lea
sbb
inc
int3
cmp
sub
fwait
or
cmp
fstp
cmp
lret
sub
adc
gs
aad
out
jo
mov
and
mov
jg
and
push
pop
test
pop
jb
push
dec
xchg
sub
pop
push
cmp
mov
rcrb
nop
adc
inc
dec
cltd
jp
jmp
add
mov
gs
or
push
scas
mov
mov
fldcw
mov
or
jnp
jbe
outsl
arpl
mov
aam
push
xchg
pop
jmp
jns
pop
or
int
jnp
inc
xor
xchg
xchg
xchg
push
push
mov
sbb
mov
pop
insb
mov
test
cld
fst
jg
sti
adc
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
mov
fs
adc
movlps
daa
test
loop
fmull
dec
scas
dec
push
pusha
jnp
jecxz
int
jecxz
mov
jg
rdpmc
test
aam
mov
jae
inc
out
xchg
ret
xchg
cld
sub
mov
inc
stc
inc
in
sbb
rcrl
jne
push
inc
xchg
jb
rorl
xchg
jmp
aaa
ss
or
dec
jns
cmp
ficoml
int3
adcl
adc
ss
loope
sub
pop
cmp
notb
or
aam
out
movsl
je
jo
or
bound
fwait
push
sbb
mov
mov
pop
mov
das
jns
jno
mov
lret
cmovs
cmp
sbb
sti
cmpsb
stos
xor
hlt
add
adcl
xor
cwtl
shr
out
mov
inc
sub
sbb
repz
dec
movsb
jnp
cmp
fbld
mov
or
add
in
sahf
dec
sub
rorl
mov
fbstp
popf
xchg
orb
push
cmp
xchg
int3
outsl
pcmpeqw
inc
jo
popf
test
loop
xor
cmpsb
ret
lock
popf
jmp
lret
cmp
xchg
movsb
insb
test
lock
mov
xchg
xor
cmpsb
sub
out
pop
in
movsb
cmp
and
icebp
or
mov
xchg
mov
lahf
fsubr
jb
test
insb
gs
push
into
cmc
scas
jnp
jp,pn
push
pop
outsl
mov
sbb
loopne
loope
divl
pushf
cmc
imul
xchg
push
push
xlat
mov
sub
pop
inc
lea
and
sbb
mov
jne
fs
repnz
sti
popa
rclb
add
xor
add
jns
add
sub
mov
repz
aam
cmp
mov
sti
outsb
xchg
inc
aad
loopne
push
xchg
and
nop
pop
inc
stos
xor
adc
test
movsb
inc
pop
cmp
push
aas
jae
fcoms
fldcw
aaa
mov
adc
fbstp
pusha
jo
pop
sub
sub
cmp
jg
testb
xchg
fsubrp
sub
mov
dec
adc
mov
fidivrs
sub
or
add
xlat
mov
sbb
out
cmp
jle
test
push
xor
icebp
repnz
mov
xor
scas
jo
add
jl
dec
ds
repnz
add
mov
jmp
jae
inc
jge
jo
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
cld
int3
lods
pop
fcoml
adc
mov
jmp
ficompl
add
out
adc
aam
sbb
scas
mov
mov
imul
sub
leave
pop
push
jns
jmp
popa
testb
push
cmp
in
mov
sbb
adc
mov
dec
push
ljmp
mov
mov
test
sub
nop
xchg
rolb
add
test
push
loopne
sbb
stos
shrl
sub
ret
mov
xchg
inc
std
scas
push
jge
xorl
in
mov
pop
jo
sbb
mov
arpl
xor
shlb
pop
jecxz
gs
adc
cltd
fbstp
out
push
jg
jns
sbb
pop
shr
in
add
nop
adc
mov
idiv
cltd
and
adc
fdivrp
jne
cmp
test
out
jle
add
ja
int
pop
sbb
push
adc
mov
and
mov
test
cmp
jnp
stos
xor
xchg
mov
cmpsb
inc
loope
sbb
lods
sub
loope
loop
cmp
adc
insb
jge
and
fwait
movsb
mov
fstpl
cmp
data16
out
aad
in
adc
xchg
add
into
call
xchg
scas
xchg
lods
std
cli
cmp
imul
mov
imul
sub
incb
das
test
or
mov
icebp
xor
lcall
pop
cmp
jbe
shrl
shll
loop
repnz
into
mov
or
ja
inc
lea
xchg
cwtl
push
pusha
loop
repz
cmpsl
sbb
sub
lcall
mov
push
xlat
mov
subb
cmp
loop
mov
ds
sbb
mov
inc
scas
pop
mov
dec
setne
je
rcrb
push
dec
mov
xchg
xor
jge
inc
xor
jnp
movsl
sti
inc
lret
fisubs
sbb
xor
out
mov
call
outsl
fninit
cmp
mov
jle
les
cmp
inc
outsl
mov
mov
mov
cwtl
mov
dec
xchg
sub
mov
pop
test
pop
lret
jl
pop
lahf
aaa
xor
lahf
loope
inc
out
pop
push
cli
lret
fidivrl
sti
xorb
ja
roll
mov
pop
ret
mov
pop
in
cmpsb
call
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
push
stos
fcmovnu
adc
adc
xchg
lcall
sub
les
push
pop
mov
sbb
xchg
jno
aas
xchg
imul
mov
cmp
inc
sbb
mov
fidivs
shll
imul
sub
inc
push
ds
adc
mov
jno
cmp
and
psrad
cld
popl
arpl
repnz
fimull
int3
sub
in
in
loop
lcall
pop
scas
int
sub
arpl
aad
lfs
jg
add
dec
add
stc
in
bswap
dec
test
xchg
loopne
sub
xchg
or
rcll
pop
mov
mov
jl
pop
sub
or
mov
std
pushf
mov
mov
xlat
push
pop
inc
push
cmp
add
pop
push
add
bound
hlt
adc
dec
inc
and
xor
jno
inc
insl
mov
dec
pop
sbb
sbb
jae
roll
nop
imul
jne
or
cmp
xchg
ds
cmp
add
outsb
xlat
scas
movsl
nop
ss
mov
movsb
dec
pop
sbb
cmp
nop
jmp
lods
insl
iret
jecxz
sub
sbb
mov
mov
cwtl
mov
fidivs
pop
mov
hlt
jl
cmp
outsl
imul
gs
in
push
cmp
pushl
pop
or
xchg
out
call
mov
fdivs
sbb
loope
or
lea
jl
aas
dec
cmp
fidivrl
dec
mov
fdivl
jbe
cwtl
push
nop
sub
cwtl
les
xor
clc
jle
in
sbb
sub
xchg
mov
xchg
cmpsl
outsl
out
inc
shrb
int
pusha
sbb
fldenv
imul
xchg
and
gs
add
ret
fs
jle
in
leave
fwait
or
push
ficoml
adc
pop
scas
jo
jo
sub
cmp
jb
and
xor
les
xchg
addr16
and
addl
and
cltd
or
xor
sbb
stos
int
mov
jnp
pop
lods
xchg
fisttpll
mov
repnz
inc
pop
enter
dec
repz
rolb
std
or
int3
scas
xlat
call
cmp
rcll
scas
lock
loopne
fucomip
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
mov
stos
adc
adc
inc
call
loopne
push
xor
int
or
test
scas
xor
dec
aas
and
mov
ret
mov
cmp
sub
cwtl
jmp
int3
test
pushf
mov
idivl
dec
das
sub
mov
mov
adc
jns
insl
mov
or
mov
jno
pop
mov
mov
sbb
or
nop
or
push
pushf
into
and
jl
cmp
aaa
cmpsb
sub
pop
push
jl
jmp
jmp
mov
aas
xor
fadds
jge
xor
inc
shll
sarb
scas
mov
lret
cmp
ss
adc
xchg
dec
sub
rolb
fmuls
ljmp
xlat
pop
inc
sbb
xchg
lock
cmpsl
xchg
or
xchg
cs
or
std
jbe
hlt
ret
sbb
pop
ss
xchg
cltd
push
mov
call
mov
jo
lock
mov
das
pop
repz
jp
jg
cmp
and
jns
outsl
fimuls
add
xchg
lcall
cmp
pop
xchg
fstpl
aam
fldl
sub
sahf
inc
pop
fiaddl
in
dec
es
xor
ljmp
mov
les
out
repnz
aad
inc
mov
sbb
shll
aad
add
pop
cltd
push
mov
cs
xor
movsb
dec
shll
jns
das
aaa
fs
push
sbb
cmp
sub
jnp
jecxz
or
iret
mov
aad
adc
or
or
sarb
mov
test
jnp
jg
mov
ret
icebp
in
pop
gs
fisubrs
cmp
add
inc
in
icebp
js
jo
lahf
pop
dec
js
dec
xor
or
jb
jbe
adc
inc
sub
insb
push
in
rorb
jl
push
pushf
incb
pop
push
mov
sub
sub
movsl
inc
push
and
dec
xchg
jo
mov
add
cmc
loop
fldt
ds
inc
jnp
sub
pop
movsl
in
mov
data16
aas
and
dec
mov
xchg
fists
call
mov
call
inc
int
arpl
mov
ret
or
sbb
in
lret
mov
sbb
push
fldcw
pop
and
and
vmwrite
and
mov
clc
jb
stos
stos
push
adc
sub
ljmp
lods
cmp
xchg
cmp
adc
xor
stos
push
call
stos
xchg
push
cmp
cltd
lea
cmpsl
enter
mov
loopne
ljmp
ss
scas
jge
and
lret
aas
and
lahf
mov
adc
add
hlt
inc
or
iret
sbb
xor
jle
mov
lds
push
cmpsl
scas
popa
movsl
sarl
cmc
rolb
xchg
pop
out
rcrl
pop
xor
das
movsl
imul
pusha
dec
dec
fstpl
movsb
into
push
mov
ds
xchg
xor
mov
adc
xor
inc
test
xchg
jmp
arpl
sbb
in
scas
cmp
mov
js
out
mov
mov
jb
sub
dec
cmpsl
fistpll
sbb
mov
and
fmull
cltd
sbb
movsl
mov
mov
xchg
xor
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
fmull
push
into
adc
adc
pop
sbb
and
sarb
movsl
dec
jge
mov
test
dec
push
jl
or
iret
fmulp
leave
lds
jo
xchg
loope
push
lret
in
jp
inc
sbb
stc
sbb
push
fwait
ror
xor
inc
fcomip
xchg
pushf
stos
dec
psrlw
stos
hlt
cmpsl
ds
aad
sub
lds
mov
fcoms
inc
repnz
add
jne
sbb
or
xchg
incb
and
repz
ljmp
lods
lods
inc
push
lret
jo
mov
add
cmp
push
add
sbb
mov
lcall
pop
add
mov
push
lcall
mov
and
jns
cmc
jnp
pop
add
lock
pusha
pop
mov
push
stos
les
sbb
adcl
inc
sbb
and
jnp
mov
mov
or
pop
dec
mov
loopne
js
xor
sub
jne
outsb
pop
xor
cmpsl
insl
orb
mov
pop
arpl
int3
cmp
enter
xchg
stos
lods
cs
pushf
cltd
cwtl
pop
inc
mov
mov
rclb
jle
imul
gs
mov
jp
push
and
dec
or
cmp
or
cwtl
movsl
push
push
stc
jmp
jb
loope
mov
xchg
add
xchg
push
mov
pop
xchg
fcoml
int3
scas
mov
mov
jmp
xchg
adc
lea
negb
pop
sar
pop
jb
or
xor
mov
add
repnz
fnstenv
push
loop
repz
xor
mov
fistps
jns
ret
mov
fistpll
mov
clc
xchg
inc
push
or
inc
mov
cltd
into
and
icebp
es
mov
or
es
adc
jge
mov
sbb
addr16
mov
inc
das
pop
cmpsl
aaa
add
popa
mov
sub
sbb
dec
pop
xchg
cmpsl
lods
jbe
stc
shl
and
pop
bt
xor
ss
call
cmpsl
fnstenv
lcall
jae
orl
jnp
sub
or
xchg
imul
mov
push
inc
aas
push
add
push
mov
rol
es
jb
add
adc
stos
dec
movsl
lock
dec
not
lret
outsb
rorl
add
inc
repnz
xor
push
sbb
popf
testl
push
sub
push
lods
cmpsb
fs
out
hlt
pop
push
arpl
jecxz
inc
cltd
rclb
je
ja
push
aam
mov
sub
cmpsl
scas
sahf
out
inc
gs
fwait
loope
jle
or
add
push
push
arpl
scas
and
pop
jae
mov
int
sbb
mov
mov
jbe
rcrl
xorb
push
mov
das
push
fbstp
xchg
xchg
insb
xchg
mov
popa
dec
scas
out
push
cmpsb
div
push
add
push
das
jae
mov
cwtl
xor
jbe
mov
inc
jo
andl
xchg
pop
dec
ss
inc
sahf
sahf
stos
adc
hlt
mov
lods
pop
cmpsb
xchg
int3
jne
mov
into
repnz
std
test
or
aad
xlat
loopne
in
mov
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
loopne
cmpsl
loopne
addr16
and
adc
jne
cmp
scas
push
adc
jp
loop
cmp
add
push
addr16
aam
push
sub
cmp
cltd
pop
icebp
andl
frstor
pushf
adc
xchg
cmpsl
cltd
inc
in
xor
dec
mov
pop
sub
cld
cmp
adc
push
add
in
push
in
mov
push
out
adc
aaa
push
xchg
cmp
jmp
lods
adc
leave
and
mov
aaa
ret
ficompl
movsb
cltd
je
sarl
mov
pop
push
pop
ret
lds
dec
jae
test
jne
xlat
cmp
insb
and
fld
xchg
scas
int
adc
mov
mov
sub
lret
add
push
icebp
lahf
inc
add
push
fwait
push
in
mov
std
xchg
cli
movsl
stos
jae
add
aad
push
mov
insb
push
pop
or
fisubrs
cmp
ret
dec
jno
mov
icebp
ror
sub
test
mov
jl
or
dec
movsl
xlat
jo
mov
pop
cmp
sahf
in
xchg
sub
int
lret
outsb
lahf
retw
jecxz
mov
shlb
cltd
daa
jbe
mov
out
jns
mov
in
lahf
shlb
aam
popf
repnz
loope
sub
jbe
inc
cmp
fnstenv
inc
popl
insl
xchg
ds
and
cltd
daa
cmpsl
lret
dec
jecxz
mov
ret
mov
cmc
jp
dec
or
inc
adc
push
inc
cmpsb
and
dec
fldcw
mov
repnz
mov
test
repnz
cmpsl
push
xchg
push
pop
sbb
cmp
stos
lret
es
insb
inc
leave
jb
mov
dec
cmp
sahf
rcll
pop
scas
add
mov
arpl
and
add
ja
mov
fwait
insb
pop
lcall
xor
sub
sub
sub
dec
sub
hlt
inc
or
dec
hlt
lods
sbb
add
cmp
inc
or
ja
iret
inc
addr16
negl
mov
aam
xchg
add
jae
outsb
xor
call
stos
divl
outsb
in
jp
xchg
fildll
xlat
and
pop
mov
mov
or
lea
xchg
cltd
inc
pop
sub
into
jnp
xor
jb
data16
jbe
jge
arpl
out
push
and
sti
sarb
orl
pop
test
mov
fidivrs
xchg
js
mov
xchg
fdivrl
dec
jo
movsb
ret
mov
imul
cli
fwait
loop
adc
pop
pop
push
insb
lahf
dec
pop
jg
fcmovne
jg
sbb
and
jl
cmp
add
dec
fstpt
push
jmp
pop
pop
cmp
insb
xchg
sub
fbstp
cmp
push
add
jecxz
flds
or
das
push
int3
jle
pop
in
jg
sub
inc
xor
dec
pop
lods
cmp
shrb
dec
xchg
repz
pop
das
mov
dec
ja
pop
js
push
loopne
xchg
shlb
sbb
iret
sub
fldt
inc
std
int3
ja
mov
push
fisubl
mov
mov
jns
stc
cld
out
aad
inc
lods
rorb
bound
and
jbe
aas
loopne
fwait
sbb
jne
sub
mov
loop
cmpsb
decl
xor
ficompl
jp
loopne
cmp
xor
push
fmull
loopne
scas
add
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
jecxz
lods
pusha
mov
adc
dec
sbb
ja
pop
or
sbb
jbe
sub
jp
es
stos
xchg
fisubl
jmp
and
cmp
fs
dec
mov
fwait
dec
std
mov
inc
test
sbb
mov
pushf
dec
or
mov
mov
mov
fidivs
enter
cmp
cmpsl
lock
test
pop
push
loopne
fnstenv
cmp
mov
mov
mov
adc
jbe
ja
out
mov
popf
jecxz
jp
and
xlat
fistpl
add
jns
data16
addl
cmpsl
stc
mov
hlt
xor
outsl
pop
icebp
arpl
pop
mov
mov
jbe
xlat
push
clc
pop
pop
jne
jb
shrl
int3
fldl
icebp
cs
sub
decl
stos
mov
mov
icebp
sbbl
mov
xchg
enter
xchg
sub
movsl
cmpsl
clc
xor
shr
sti
lea
aad
jne
repz
cmp
dec
mov
cmpsl
cmp
into
xchg
xchg
je
ds
out
pop
lds
lds
xlat
std
add
popf
sti
mov
pop
cmp
fptan
pushf
mov
not
loope
decb
pop
mov
movsb
popa
in
sbb
mov
out
in
jge
pop
pop
aad
cli
imul
outsl
dec
btc
lock
fistps
inc
loopne
pusha
sbb
mov
or
sbb
mul
test
cmp
cli
fidivs
inc
sub
inc
inc
pop
stos
mov
or
js
mov
fwait
imul
jmp
sub
pop
adc
sbb
add
adc
xor
push
insl
adc
and
fildll
lods
scas
mov
add
inc
jno
inc
xor
sti
push
mov
repz
xchg
je
std
ret
sarb
push
testl
sub
nop
js
pop
mov
nop
pop
mov
ffree
lahf
leave
enter
std
xchg
adc
or
mov
xchg
inc
push
or
repz
mov
stc
stos
cmp
cmp
and
cmp
push
and
and
shrl
jne
imul
inc
and
sbb
pusha
pop
push
mov
or
inc
mov
mov
jb
mov
out
pop
mov
push
pop
or
movlps
out
and
mov
mov
leave
adc
mov
add
in
jmp
ffree
scas
dec
or
loope
fidivrs
cmc
pop
notl
fs
mov
adc
not
ficoms
cmp
or
lret
pop
into
rol
loop
incl
in
ja
jno
cmp
hlt
out
mov
insl
inc
jns
ljmp
movsb
aad
push
sub
aas
xchg
adc
cmc
mov
and
mov
sub
into
adcb
mov
lret
out
jno
cmc
test
lods
xchg
push
mov
test
push
push
mull
and
shrl
icebp
fs
outsb
pop
inc
stc
or
dec
lcall
lret
or
loop
shr
int3
mov
and
iret
jg
pop
or
pushf
mov
push
xchg
xorb
jmp
lcall
lret
xchg
cmp
mov
scas
insb
and
jo
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
jb
ljmp
pop
cmp
in
cmp
push
addb
mov
ds
cmp
xor
dec
pop
mov
in
inc
sbb
fisttps
push
mov
insb
nop
or
inc
fsubrs
mov
or
outsb
push
fdivs
mov
int
adc
ds
scas
mov
jno
jno
mov
mov
out
shrb
pop
popf
mov
add
mov
push
iret
sub
rcrl
xor
mov
popl
mov
xchg
cmp
sbb
int3
mov
dec
stc
mov
cli
or
dec
orl
int
sub
imul
push
popa
cmpsb
hlt
lret
xchg
adc
xchg
cmovl
add
sahf
xor
pop
dec
or
jns
and
inc
out
sti
cmp
dec
xchg
mov
push
xchg
cmp
std
insl
xchg
int3
dec
dec
xchg
je
jmp
lods
xchg
xchg
and
bnd
mov
pusha
fs
mull
jecxz
push
push
push
pop
cmp
mov
sub
les
mov
jnp
or
imul
das
add
pop
jnp
and
fs
movsl
ljmp
loop
cmp
inc
lahf
inc
stos
outsb
out
pop
pop
sub
adcl
out
pusha
pusha
add
cmp
ljmp
daa
stos
insb
xor
dec
or
ds
push
fcmovnu
icebp
mov
loop
aam
inc
fidivrl
xchg
pop
cltd
jae
push
repnz
push
cmp
pop
xchg
fsts
mov
aad
aas
cmp
push
loope
mov
cld
pop
and
aam
jnp
cmp
movsl
out
lods
sahf
jno
jns
and
out
pop
xchg
dec
dec
jge
pop
fldt
mov
jecxz
inc
xchg
xchg
push
call
pop
sbb
ja
mov
loopne
inc
jo
outsl
in
mov
mov
out
stc
cld
iret
lds
mov
daa
sbb
jl
and
pop
aam
mov
bound
inc
mov
xchg
ficoml
setb
sbb
xor
hlt
aaa
push
outsl
andb
lods
mov
pop
cmp
in
repz
outsl
push
fcmovnbe
popf
dec
imul
pop
test
adcl
nop
and
ss
sub
and
in
insb
aam
xchg
push
add
out
cwtl
pop
inc
jmp
cld
fadd
repz
jg
adc
movb
lcall
pop
xchg
jae
rorw
aas
movsl
mov
dec
into
jmp
rcll
push
push
inc
mov
push
xor
push
pop
lds
notl
push
mov
fmull
insl
mov
push
push
fistpll
aaa
xchg
out
cmpsb
mov
jge
dec
jae
cwtl
xchg
testb
cltd
sbb
sbb
stos
mov
add
sbb
sbb
cmpsl
leave
add
mov
test
push
das
add
push
add
imul
cmpsl
adc
ljmp
cmpsl
les
movsb
push
fidivrl
je
leave
mov
push
ret
dec
aad
push
rcrb
adc
and
fucomi
in
pushf
xlat
and
sub
je
aas
aas
cmc
pop
outsl
xchg
addr16
test
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
inc
jg
stos
lods
adc
adc
outsl
and
sti
xor
pop
pop
add
sub
pop
repnz
and
mov
sbbb
pop
lods
xor
sub
mov
pop
arpl
inc
sub
jne
cmp
push
and
das
xchg
bound
and
pop
hlt
and
push
arpl
div
adc
push
mov
aas
push
mov
jb
jb
mov
shlb
orl
cmp
frstor
mov
inc
xlat
push
lahf
sbb
rorb
xchg
repnz
mov
sarb
dec
inc
imul
mov
mov
jle
ret
sub
stc
pop
xchg
movsb
pusha
dec
inc
fistps
mov
xchg
xor
ljmp
mov
scas
std
and
push
add
iret
add
fimuls
mov
sbb
out
add
push
std
fdivrs
ljmp
xor
cmp
fwait
mov
or
xlat
aaa
pop
push
cmp
xchg
sbb
jecxz
xchg
adc
pop
cmpsw
mov
imul
int
movsb
test
cmc
lret
xchg
pop
sub
xlat
icebp
jbe
rclb
cmpsb
and
push
mov
hlt
pop
test
insb
mov
cmc
pop
push
push
movb
pop
add
sbb
mov
clc
mov
mov
rcrb
xchg
mov
repz
ljmp
sbb
imul
push
cmc
xor
testl
push
mov
hlt
sbb
shlb
inc
pushf
insl
pop
add
fwait
add
imul
dec
push
push
ret
insl
mov
inc
or
out
adc
jae
mov
inc
pop
push
sub
fwait
in
jno
dec
out
add
cmpsb
xchg
dec
push
jge
movsl
sub
test
mov
sbb
scas
inc
xchg
mov
inc
ficoml
addb
lock
aad
xchg
bound
jl
xor
movsb
mov
push
pop
push
dec
nop
mov
push
cmp
jle
out
sti
add
shlb
inc
icebp
enter
cmc
sahf
rcrb
dec
popa
jo
lret
in
and
in
adc
jmp
das
jbe
push
xchg
leave
lret
sbb
stc
daa
movsl
test
pop
lods
cmpsb
pop
mov
adc
or
mov
in
popa
mov
icebp
cs
rcrb
jae
imul
sbb
pop
cmp
out
mov
or
pop
xor
xchg
outsl
fcoms
mov
imulb
xor
xchg
and
ret
pop
in
add
dec
xchg
jno
in
test
cmp
fiaddl
nop
add
popf
rclb
add
cmc
mov
push
mull
stos
movsb
lret
xlat
mov
out
push
pop
push
pusha
test
push
mov
loope
cli
imul
lds
mov
mov
in
and
arpl
nop
outsl
jl
cli
loop
cmp
das
insl
call
adc
sarl
movsb
in
mov
mov
das
pop
icebp
xor
sbb
jae
add
sub
sub
mov
dec
adc
insl
add
lcallw
in
pop
push
pop
outsl
sbb
out
into
pop
in
test
xor
pop
push
mov
or
icebp
sub
xor
hlt
popl
jbe
fwait
mov
test
test
pushl
xor
jmp
or
mov
mov
mov
out
mov
adc
adc
mov
xor
inc
es
stc
cmp
xor
daa
dec
movsb
pop
push
xlat
xor
push
add
in
sbb
lock
aad
loope
pop
cli
je
dec
dec
sahf
data16
or
add
and
sbb
sub
pop
addr16
cltd
add
push
sbb
arpl
in
lea
xor
inc
sbb
stos
xchg
fsubrs
and
loopne
and
ds
jne
jbe
push
mov
ret
adc
xchg
sti
loop
dec
push
cld
dec
cltd
les
or
into
rcrl
jmp
data16
fwait
mov
sti
mulb
mov
and
stos
inc
pushf
pop
mov
fs
mov
outsl
cltd
pushf
inc
mov
call
sub
mov
pop
rdrand
imul
inc
or
pushf
cld
sbb
xor
ss
fildll
jecxz
jl
push
imul
jp
cld
repz
je
mov
add
mov
inc
inc
popf
xchg
push
popa
inc
mov
mov
mov
mov
jmp
fcomps
fs
filds
scas
mov
sbb
rcr
fdivl
push
cmpsl
loope
jne
aam
shlb
mov
jle
push
roll
outsl
test
movsl
adc
out
pusha
jbe
xor
push
mov
mov
jmp
xor
popf
inc
xor
out
sub
mov
inc
sub
sub
stos
pop
sub
xchg
js
shll
mov
fidivs
inc
daa
dec
pop
cmp
xchg
out
lret
dec
inc
pop
xchg
xchg
stos
stos
in
add
pop
xor
adc
hlt
jbe
stos
and
xchg
mov
and
rorb
mov
pop
movsb
lcall
es
mov
aam
mov
mov
bound
lods
xor
fcoms
sbb
push
add
repnz
arpl
je
push
test
ret
inc
mov
stos
pop
cmp
clc
clc
outsb
out
and
cmc
scas
mov
cli
cmp
mov
inc
pop
stos
cmpsb
mov
rolb
xchg
xchg
xchg
cmp
push
lret
jne
mov
in
fistpll
jnp
out
and
cmp
shl
mov
sub
cmp
jnp
lsl
ret
sub
sub
insb
mov
jge
rcll
pop
adc
mov
push
mov
sbb
push
cmp
push
outsb
es
and
add
mov
mov
mov
jo
jbe
pmaddwd
in
inc
and
mov
and
imul
dec
adc
je
add
pop
mov
pushf
xchg
sub
push
mov
jno
dec
inc
mov
call
lock
inc
int3
ss
cmc
in
out
daa
outsl
adc
cmpsb
sbb
aas
cmc
shlb
pusha
or
aas
leave
jns
pop
jmp
pop
je
push
cmp
pop
std
or
and
jmp
inc
iret
jmp
loopne
stc
push
mov
in
sbb
aas
sub
mov
fdivs
and
mov
cltd
jb
stos
inc
lret
fsts
lods
fcompl
movsl
ret
xchg
and
mov
add
mov
test
pop
es
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
mov
stos
adc
adc
or
insb
idivl
mov
insl
out
jmp
into
das
xchg
pop
mov
xchg
je
inc
push
cmp
cltd
cmp
jae
dec
leave
mov
in
icebp
stos
pop
fucomip
shlb
lcall
pop
sbb
mov
inc
mov
test
cmpsl
mov
aaa
aas
jl
push
aad
scas
mov
xchg
loopne
mov
shrl
hlt
sbb
enter
push
lahf
and
jo
sbb
dec
rorl
popf
sbb
mov
adc
and
jo
inc
and
nop
loopew
into
leave
jl
mov
sbb
popa
sub
add
xchg
sbb
mov
dec
jnp
push
lret
pop
push
stos
or
cmpsb
addr16
stos
in
dec
xchg
cltd
sti
repz
imul
adc
sub
and
fcompl
mov
rorb
push
repnz
jno
push
mov
ss
or
and
adc
dec
mov
std
mov
and
lcall
cld
and
inc
sub
movb
cwtl
loopne
lcall
test
fwait
inc
inc
xlat
jmp
bound
mov
cmp
sbb
int3
pop
rclb
rol
fistl
fwait
jne
lea
loopne
sub
fistps
mov
cmp
arpl
xchg
xor
xchg
mov
cmp
imul
sub
xor
inc
or
jg
js
jae
mov
fwait
data16
aas
xchg
andl
mov
or
push
xor
pushl
or
mov
js
mov
mov
stc
adc
push
and
leave
adc
push
out
mov
dec
jl
push
sub
pop
fistpll
mov
pmulhw
jle
or
mov
xor
mov
in
inc
mov
in
add
pop
add
mov
movsl
sbb
mov
pop
insl
cltd
or
mov
mov
aam
dec
test
mov
pop
xor
inc
push
test
movsb
adc
cwtl
fstpt
inc
xlat
adc
enter
mov
adc
in
lods
adc
push
xchg
jnp
sub
out
loopne
mov
xlat
pop
rolb
xlat
dec
push
shl
imul
or
nop
mov
arpl
pushf
clc
out
cltd
inc
mov
test
aad
pusha
es
sahf
xchg
push
and
fadds
stos
test
pop
pop
mov
lods
xchg
andb
and
jbe
dec
add
mov
outsl
icebp
fcoms
dec
out
and
out
jg
fucompp
clc
pusha
cld
pop
dec
mov
cld
in
pop
cli
out
js
add
or
jns
mov
jl
rorb
and
xchg
aad
fsubl
int3
mov
fdivs
sbb
xor
dec
or
cmpsl
mov
pop
jns
pusha
sub
das
stos
pop
std
xlat
mov
or
arpl
out
pop
icebp
sbb
out
gs
inc
pop
mov
and
lods
mov
lahf
out
call
ljmp
xor
jmp
jge
jmp
cmp
mov
js
mov
js
lcall
pop
pop
pop
filds
jg
std
push
test
pop
inc
xchg
sub
jno
mov
gs
fcmovbe
icebp
fwait
mov
and
fbld
loopne
lods
push
cmp
lahf
add
bound
out
sarb
dec
adc
or
dec
mov
mov
iret
mov
ret
lret
xchg
inc
ret
dec
add
dec
pushf
jecxz
outsb
push
cmp
mov
in
adc
stos
pop
adc
jno
imul
sbb
call
loopne
ds
fsubrl
sbb
sbb
xchg
cwtl
ret
mov
or
inc
out
inc
sti
data16
cmc
or
mov
outsb
mov
pushf
movsb
inc
adc
jbe
and
jno
sbbb
cmp
cmp
dec
ret
xchg
pushf
in
xchg
add
cmp
pop
movl
shl
sbb
arpl
fimull
popa
fisubl
aad
inc
insl
cmp
in
daa
fisubrl
xor
add
sahf
mov
adc
addr16
icebp
repnz
mov
loop
add
sub
stos
jmp
cmp
fwait
mov
add
mov
jo
xchg
lock
data16
dec
mov
cli
push
and
inc
aaa
movsb
sbb
mov
dec
mov
loope
je
jmp
mov
test
xor
mov
mov
add
xor
mov
or
cmpsl
add
add
lods
mov
mov
aaa
mov
fcompl
push
pop
mov
sbbl
into
movsl
fldt
scas
in
scas
mov
or
scas
mov
mov
mov
sub
xchg
xchg
scas
mov
dec
mov
les
xor
int3
cmp
sub
inc
stc
ds
bnd
xchg
sbb
pop
or
pop
inc
gs
lods
and
aad
cmp
sbbl
stc
in
dec
push
inc
mov
xor
jae
mov
push
pop
jle
sub
add
lret
jp
add
jge
das
dec
mov
arpl
repnz
test
sahf
dec
inc
popa
xchg
fistpll
mov
stos
cltd
or
adc
lcall
jecxz
je
sbb
pop
or
test
xchg
add
jne
xchg
das
pop
jl
jl
arpl
hlt
mov
xchg
cmpsl
je
xchg
out
mov
adc
xor
arpl
ret
cmp
mul
repnz
cli
and
into
int
test
movsl
in
stos
and
fwait
and
out
dec
mov
stos
add
sub
rolb
mov
push
push
jmp
add
cmp
add
inc
enter
jns
mov
xor
mov
add
mov
shll
add
jecxz
pop
pushf
outsl
lea
js
je
xchg
jecxz
clc
pop
add
shll
inc
pop
jne
xchg
addl
psubb
or
outsb
leave
cmpl
mov
add
and
dec
xchg
lock
test
leave
push
popa
decl
insb
adc
stos
xchg
xchg
leave
dec
jmp
push
push
mulb
cld
mov
or
fiaddl
negl
in
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
out
lock
adc
adc
xchg
hlt
sbb
pop
xor
ja
pop
pop
sbb
js
xchg
outsl
inc
xchg
and
cmp
in
dec
push
cs
pop
xchg
xor
pop
xlat
fcompl
movsb
pop
jbe
enter
in
mov
pushl
insl
mov
stos
add
shll
or
mov
xchg
lcall
js
mov
and
mov
mov
inc
mov
sub
addr16
push
fwait
popa
sbb
mov
push
xchg
xchg
add
inc
call
or
mov
leave
lret
cmp
data16
xchg
negl
dec
and
in
dec
cld
jg,pt
sub
ficoms
or
fcmovnu
ficomps
mov
loope
rcl
stc
push
xor
aam
ljmp
jno
iret
dec
outsl
dec
out
movsl
sahf
sbb
fwait
adc
mov
push
mov
mov
sarb
mov
pop
cmc
bound
xor
fs
fcoml
push
and
or
add
es
mov
sbb
dec
xchg
pop
lock
sahf
arpl
test
sbb
iret
stc
sti
mov
xor
pop
adc
fdivrp
jnp
fdivl
cltd
pop
inc
cmp
cld
dec
mov
mov
sarl
aas
nop
js
popl
std
pop
std
test
out
loopne
imul
movsb
mov
shl
push
int
fwait
xchg
inc
leave
or
enter
or
es
iret
ljmp
mov
jno
pop
movsb
pop
and
jge
jbe
icebp
pop
popa
and
lds
jg
test
jb
fcoml
lret
push
clc
das
dec
jae
xor
stc
add
pop
push
mov
fcomps
fsubrl
dec
scas
adc
dec
int
push
push
rcll
sub
je
andb
in
xor
cmpsb
int3
dec
repz
and
fisubrs
stos
or
nop
jo
xor
mov
add
xchg
ds
lea
lods
jno
xor
les
shlb
lret
push
jno
enter
jp
push
movsb
add
mov
stc
aad
xchg
fnstsw
inc
add
scas
xor
sub
cld
int3
adc
repnz
and
add
or
icebp
mov
cvtpi2ps
fistl
sahf
insl
mov
jo
insb
fcomi
push
add
xchg
mov
sti
aad
cmp
mov
adc
and
xor
dec
mov
xor
les
pop
sahf
loopne
icebp
wrmsr
pop
push
push
lods
cmp
mov
adc
lret
pop
inc
lds
in
xchg
and
push
inc
fidivl
inc
dec
flds
pop
lods
pop
or
fsubrs
movsl
pop
mov
lcall
and
sub
xchg
push
xchg
mov
add
xchg
xchg
jl
clc
addr16
test
or
bound
push
imul
clc
xchg
sahf
fnstenv
xchg
scas
int3
dec
pop
ljmp
outsb
mov
clc
sbb
push
test
adc
and
dec
sub
popf
stos
fcmovu
jp
xchg
inc
cli
mov
pop
enter
test
cmp
mov
mov
lods
aad
and
jne
out
gs
das
repnz
testl
shrl
stos
mov
xor
pop
fsubrs
js
stos
cmp
and
sub
or
sbb
mov
mov
pushf
mov
jmp
sahf
pop
pop
adc
lahf
sbb
jle
mov
adc
mov
out
in
jle
adc
and
fcmovnu
lock
scas
arpl
fs
mov
bound
or
nop
cmp
mov
xor
push
imul
shl
add
insb
addr16
jno
inc
and
xchg
icebp
loop
mov
mov
inc
insl
adc
imul
xlat
enter
sarb
inc
rclb
or
aas
pop
xchg
or
rolb
out
xor
cs
push
ljmp
push
insl
jo
adc
and
or
jmp
adc
jne
sbb
cs
insl
scas
inc
jns
imul
nop
jae
pop
shrl
sarl
rcrb
lret
adc
mov
pop
dec
push
iret
fidivrs
icebp
add
add
jmp
fstps
aad
out
push
outsb
es
popa
sti
rolb
shlb
or
test
sahf
stc
in
mov
or
mov
mov
inc
pop
push
lret
sbb
jnp
stos
lds
and
es
pop
repz
add
inc
pop
outsl
xor
cmp
lcall
rclb
fbstp
arpl
pop
push
insl
push
stos
icebp
mov
mov
je
adc
ds
mov
addr16
mov
and
inc
mov
xor
mov
inc
xchg
ljmp
sbb
push
inc
icebp
mov
cmp
rol
inc
int3
popa
lret
inc
jg
loop
pop
scas
aam
jecxz
insb
xor
mov
xor
inc
test
xor
popf
sti
dec
sbb
jge
in
clc
lock
lds
jbe
ljmp
mov
mov
movsb
pop
aam
pop
mov
lahf
jl
pop
push
and
aas
movups
mov
pop
scas
imul
insl
stos
sbb
push
mov
outsb
pop
or
ds
fstpt
ret
pop
sub
jecxz
pushf
lods
icebp
push
xor
and
or
sti
jb
cmp
xchg
dec
sbb
fucom
bound
std
aad
xchg
test
xorl
comiss
hlt
push
fisttps
sbb
clc
cs
sahf
test
popf
ja
jmp
stos
adc
pop
adc
loope
cmp
adc
sbb
ds
or
ficoml
jae
popf
mov
rclb
dec
test
jmp
and
jne
adc
fistpll
mov
or
call
test
lods
mov
xchg
movl
clc
movsl
cmovnp
shll
loop
and
in
jl
dec
xor
rcr
add
mov
lcall
sub
pusha
lods
rclb
and
mov
pushf
pop
shll
xor
mov
test
jmp
loope
fcmove
jo
out
rcl
test
rcrl
cmp
data16
sti
mov
lock
icebp
lds
jmp
cmc
imul
xor
mov
mov
push
lods
mov
sbb
fdivrl
shr
pop
mov
sbb
pop
sti
inc
mov
or
imul
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
jmp
pop
adcb
and
int
push
lret
cmp
enter
aam
dec
rcll
jb
mov
das
aam
jns
ss
ljmp
xchg
mov
shl
mov
push
lods
push
xchg
gs
push
cs
fwait
or
or
inc
divl
addr16
push
inc
push
repnz
pop
popa
aad
xorl
or
enter
divb
mov
in
in
jp
push
clc
cmp
jns
rorl
jle
or
pop
or
cmp
or
ljmp
dec
fisubrl
pop
lods
or
enter
fucomi
push
mov
stos
mov
adc
lret
mov
ja
mov
lret
mov
rorl
xchg
or
xchg
and
sub
mov
lret
stc
mov
bound
and
mov
lods
hlt
dec
and
pop
popa
fcmovnu
xor
cli
insl
mov
rclb
pusha
cmp
out
or
jp
data16
jle
dec
jb
sub
mov
sti
inc
fimuls
aaa
jo
cmp
sahf
cs
in
pushl
and
adc
pushf
add
rcrl
mov
out
pop
cmpb
sub
sarb
adc
xchg
push
jecxz
data16
pushf
add
sbbb
push
outsl
leave
hlt
lods
inc
test
mov
pushf
pop
fstl
in
les
fstpt
push
std
adc
cmp
push
lcall
faddl
push
stos
fsubrs
pushl
adc
and
mov
test
push
fnstcw
sub
mov
testl
test
fsubs
pop
ucomiss
pop
add
lods
sbb
cmpl
jecxz
inc
cmp
loop
or
or
bound
mov
xlat
jb
repnz
inc
es
cli
cs
fs
adc
dec
inc
xchg
popf
add
push
push
jnp
push
call
testb
imul
push
outsl
add
mov
fsubs
jo
test
cld
in
rolb
int
imul
int3
xor
add
dec
shlb
xchg
rorb
sub
xchg
and
aam
xchg
daa
lahf
ficoms
div
xchg
loop
jno
dec
lock
or
xchg
cmpsb
cmp
call
sub
out
jns
and
push
int
push
lds
ficomps
cwtl
loop
sbb
jbe
mov
jns
sub
fcomps
xchg
pop
and
cmc
mov
mov
adc
mov
dec
cld
push
dec
xchg
pop
std
stos
rcrl
gs
outsl
andb
clc
mov
mov
movsl
cmp
arpl
ret
cwtl
orl
xchg
cmpsl
scas
flds
ss
into
xchg
pop
out
cli
in
popa
add
flds
pop
mov
push
insb
sarl
mov
sub
or
sti
push
push
jne
adc
sbb
addb
out
push
adc
jns
daa
mov
mov
mov
cmc
nop
adc
push
pop
adc
cmp
mov
movsb
xchg
cmp
push
loope
movq
scas
mov
mov
pop
sub
rcrl
loope
stos
cmpb
popf
xor
xchg
dec
push
xor
or
pop
add
out
mov
push
sbb
mov
mov
je
sbb
pop
pop
ss
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
jge
jle
js
adc
lds
and
mov
cmp
jmp
aad
cmp
imul
push
gs
push
sbb
cld
cmc
test
inc
pop
add
push
sub
add
in
popa
sub
daa
imul
push
inc
outsb
arpl
mov
mov
or
inc
jae
sbb
fwait
or
orl
nop
pop
mov
fdivrs
cld
pop
sbb
sub
xor
imul
add
in
mov
or
sbb
icebp
test
adc
clc
or
mov
mov
xchg
push
cmc
insl
xchg
mov
std
mov
int3
repz
xorl
incl
fwait
add
fsubr
mov
aas
cmp
aas
jge
mov
loopne
mov
xor
es
leave
repnz
jbe
xlat
xchg
rcrb
rcll
adc
push
repz
mov
jecxz
mov
push
xor
push
out
lret
push
jle
rol
xor
and
cmpsb
sub
in
cmp
shr
fs
and
or
add
into
push
sub
iret
and
cld
in
cmp
jg
arpl
inc
or
xor
push
sti
fs
pop
ja
jnp
fs
xlat
addr16
xchg
iret
add
std
dec
add
and
adc
jno
iretw
ljmp
xor
arpl
pushf
imul
add
push
out
addr16
inc
js
push
xor
lods
mov
mov
aad
pop
sbb
arpl
fidivrs
adc
jge
out
sub
nop
jg
int
xchg
cld
cmp
mov
jae
repz
push
or
jle
jno
add
push
xorb
cmp
btr
sub
popf
inc
adc
aaa
popa
outsb
in
dec
xchg
xchg
test
iret
mov
mov
sub
mov
mov
mov
fstl
int
rcl
cmp
iret
ds
sti
mov
mov
sub
sahf
dec
mov
out
pop
rolb
mov
mov
mov
fisubrl
mov
loop
push
es
fnstsw
dec
jne
cld
push
mov
sub
pop
cmp
mov
dec
rclb
add
outsb
sbb
mov
or
jno
push
insl
sbb
and
pop
popa
mov
cmc
and
call
mov
cmp
adc
push
daa
sub
fistpll
xor
sbb
cmc
enter
jne
dec
sub
mov
mov
ficomps
pop
mov
lock
sti
xchg
lods
test
sub
add
adc
shr
sub
rcrl
sub
ds
jne
lret
mov
add
xchg
leave
inc
push
lahf
or
inc
cs
mov
outsb
push
lds
sahf
add
test
in
scas
aam
stos
loopne
lea
cmp
pushf
dec
or
jle
negb
rolb
cwtl
push
xor
repnz
call
mov
aam
mov
xchg
pop
inc
movsb
fcmovb
jns
mov
call
mov
lret
adc
hlt
and
mov
fsubl
mov
decl
jmp
mov
clc
mov
sub
jle
mov
adc
adc
mov
push
aaa
cmp
lods
pop
inc
push
inc
jbe
mov
xchg
xchg
sub
stos
xchg
add
loope
in
addr16
int
push
mov
cmpsl
jecxz
or
or
pop
dec
dec
push
xchg
pop
stc
mov
sarb
lcall
lret
pop
mov
xchg
andl
jnp
pop
sahf
loope
push
or
iret
sub
push
or
mov
loope
mov
movsl
call
clc
mov
test
cmp
push
jne
mov
test
lock
punpckhwd
sub
in
jns
sub
mov
adcb
loope
les
sbb
dec
cmp
mov
addr16
xchg
jp
push
sbbb
insl
mov
sub
dec
jmp
test
jmp
inc
out
cld
push
pushf
sbb
mov
push
push
lods
gs
daa
sbb
ds
hlt
mov
pop
ffreep
jl
pop
mov
lcall
aad
lods
dec
jb
push
clc
inc
inc
bound
jns
or
dec
cld
fcmovb
fs
pop
movsl
jnp
cmp
imul
je
test
sbb
lds
movsb
shrb
cmp
fbstp
fs
inc
adc
pop
popf
mov
into
fmulp
pop
xchg
sbb
mov
xor
push
push
inc
ljmp
loop
pop
ss
mov
pop
xchg
bound
fisttpll
int
das
out
mulb
je
addl
lahf
lret
sub
xlat
aas
clc
push
lock
xor
adc
pop
and
loop
dec
lcall
in
dec
push
popf
mov
sub
sti
imul
cmpsl
aad
pop
pop
pop
out
aas
xchg
lock
fildl
xchg
xorb
fstps
xlat
cmpsl
push
adc
orl
cs
or
or
hlt
movsb
incl
fwait
rcll
ljmp
adc
cmp
and
xchg
cs
lcall
mov
jns
clc
xchg
outsl
pop
test
scas
push
in
cwtl
cmp
adc
jo
lret
jae
outsb
cmp
jmp
adc
cli
cmp
dec
sub
cld
loopne
jnp
xchg
fs
ret
int
mov
fwait
cmpsb
mov
mov
dec
dec
cmpsl
dec
ficompl
fidivl
mov
test
xlat
clc
out
sbb
dec
andl
ja
daa
adc
jge
mov
add
addr16
lcall
xor
popa
pusha
negl
arpl
mov
out
ficomps
mov
adc
dec
cmc
jbe
push
movsl
pop
xchg
jne
and
or
stos
jbe
test
adc
out
mov
push
dec
fld
scas
shrb
fstps
inc
inc
or
add
jl
fldt
adc
inc
rcr
add
xchg
adc
mov
mov
scas
in
ficoms
pop
xchg
pop
cmc
mov
mov
push
in
loope
adc
push
enter
ror
jb
pop
push
pop
push
aad
jg
in
and
sub
xchg
push
imul
push
rcll
cmp
movsl
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
mov
push
adc
test
adc
ja
or
out
movsl
sub
pop
push
jns
std
jnp
es
cmp
in
sti
jno
aas
jnp
cwtl
nop
out
add
dec
xor
push
cwtl
mov
icebp
cwtl
ds
adc
in
and
push
faddp
xchg
rcrl
ss
lods
inc
repnz
scas
mov
push
or
dec
stos
dec
inc
xchg
add
bound
inc
lock
jp
sbb
cmpsl
or
inc
mov
lock
inc
cmpsl
fwait
testb
mov
rcr
jne
pop
sub
inc
negb
mov
rol
pushl
and
sbb
enter
fstpt
stos
cli
and
in
scas
or
ss
xchg
sbb
data16
mov
mov
cmc
dec
fwait
pop
pop
adc
popa
mov
lea
xchg
int3
aaa
out
shrl
stc
arpl
mov
xorl
mov
cmp
sub
push
fcoml
mov
add
loopne
pop
push
lea
test
nop
stos
lds
mov
stos
movsl
mov
fdivrs
and
clc
cmp
hlt
mov
cmp
js
sbb
xchg
pop
sub
push
cmpsb
fildll
sub
popa
mov
stos
push
hlt
jnp
ret
push
jbe
jno
pusha
push
xchg
push
ljmp
ret
ds
fcmovnbe
out
stos
cmc
pop
iret
pop
pop
mov
mov
push
pop
jmp
in
and
es
mov
mov
pusha
cmp
outsl
outsl
int
inc
push
stc
pusha
lds
jmp
into
imul
push
mov
adc
lds
fcompl
adc
pusha
sbb
data16
xor
push
jg
pushl
adc
dec
inc
nop
mov
jle
pop
rcr
push
insl
pop
cmp
jnp
jp
mov
inc
add
lods
stos
sbb
mov
mov
shlb
jns
mov
inc
aaa
or
enter
je,pn
mov
jmp
fdivl
xchg
jmp
stc
ss
lret
bound
lret
xchg
movsl
rcl
dec
notl
push
dec
and
xor
push
adc
mov
mov
sahf
mov
adc
lret
push
mov
xchg
aaa
pop
pusha
cmpsb
shll
pop
xchg
popa
les
push
fldl
push
hlt
gs
movsb
and
outsb
jg
test
dec
jl
push
in
stos
lds
das
and
xor
mov
xchg
sbb
add
xchg
mov
push
jge
imul
hlt
lret
mov
aam
inc
adc
mov
lock
mov
clc
push
mul
dec
addr16
mov
and
outsl
cmpsl
push
pop
mov
mov
inc
mov
dec
rclb
outsl
ss
xchg
mov
clc
or
aaa
sbb
shll
aam
int3
jge
add
roll
sub
xor
popa
in
push
rep
shlb
pop
push
imul
aam
das
sub
inc
xor
inc
adc
roll
lea
std
pop
or
and
aam
cmpsl
jg
jl
jge
orl
test
and
mov
nop
xchg
add
push
int3
inc
sbb
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
mull
loope
jge
and
fsub
jnp
inc
das
sti
das
arpl
mov
mov
mov
pop
arpl
or
sarl
sti
les
fdivrl
cmp
add
inc
jp
in
frstor
bnd
mov
ret
sub
data16
test
or
cmp
pop
xchg
push
stos
sbb
icebp
aas
cmp
stc
xor
pusha
inc
cmpsb
movsb
repz
leave
and
cmp
mov
es
clc
fcompl
adc
fcmovnb
repnz
push
or
imul
jecxz
lahf
lea
popf
lahf
fidivl
int3
fldenv
add
inc
lcall
push
and
pop
mov
dec
jmp
fmuls
cmpsb
jnp
mov
push
clc
dec
jge
in
pop
pop
outsl
rcll
shlb
mov
popf
jae
outsb
dec
mov
neg
rolb
push
call
jge
lcall
fidivrs
stos
push
xchg
push
mov
push
clc
fisubrl
movsl
xor
repnz
adc
jbe
loope
push
mov
and
out
dec
or
stc
insb
insb
sub
dec
repz
je
ljmp
out
cmp
mov
fnstenv
outsb
rorb
shll
mov
cwtl
cmp
pop
mov
pushf
popl
icebp
dec
push
xchg
je
and
add
mov
sub
shlb
call
loope
sbb
movsb
cli
out
adc
scas
std
jno
aaa
data16
pop
or
out
jne
mov
or
inc
push
mov
sub
pop
sarb
shll
popf
mov
scas
out
in
inc
shlb
insw
pop
lahf
mov
fistl
leave
mov
mov
sub
in
test
cmc
push
mov
cltd
shll
push
repnz
in
inc
test
ljmp
jne
shll
loope
and
dec
fnstcw
ja
jg
aad
adc
fwait
popa
sub
inc
xchg
cmpsb
mov
bnd
push
fdivrl
dec
mov
hlt
pushf
mov
shlb
adc
mov
lock
mov
aas
and
je
rorb
sbb
xor
xchg
mov
aad
cld
int3
push
pop
std
es
divl
leave
jmp
mov
sbb
mov
jp
mov
dec
cwtl
fidivs
lahf
out
mov
rcl
and
lahf
mull
add
jl
aam
int3
dec
inc
jecxz
dec
pop
mov
mov
push
fcompl
shl
shl
out
jnp
mov
add
push
adc
pop
scas
jmp
cmp
mov
lods
ja
cmp
add
mov
repnz
push
loope
sbb
lea
sbb
cwtl
mov
jno
pop
cld
mov
mov
fldcw
mov
in
fcoms
dec
mov
jmp
xchg
mov
pop
pop
test
sub
shrd
es
sub
cmp
cmpl
pop
lds
mov
sbb
mov
inc
icebp
sub
jae
aam
out
inc
xchg
pushf
jge
mov
scas
inc
mov
fisttps
mov
cmp
stc
pop
dec
adc
test
outsl
push
jmp
mov
cmpsl
lahf
fstpt
mov
sbb
sub
push
frstor
testl
cli
shr
push
inc
push
xor
xor
mov
xchg
jmp
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
sarl
adc
adc
mov
das
jmp
rclb
lret
jle
movsl
jns
mov
cltd
mov
jmp
mov
imul
xchg
jmp
xchg
inc
mov
jp
fmul
jns
xor
push
loopne
je
dec
adc
add
pusha
xor
pop
clc
insl
frstor
adc
mov
push
arpl
sarb
test
insl
insl
sub
mov
mov
and
inc
inc
push
push
popf
pop
mov
mov
out
shrl
out
adc
and
xchg
stos
sahf
dec
mov
notb
inc
and
scas
xchg
cld
les
imul
mov
push
adc
rcl
repnz
sbb
ja
orb
mov
shrb
out
cmpl
daa
xor
inc
and
es
icebp
pop
loope
jecxz
xorb
vunpcklps
cmpb
lods
dec
sbb
adc
aaa
jb
push
daa
outsb
push
pop
ret
out
pop
repnz
mov
fs
dec
cltd
or
cmc
int3
inc
cmpsl
movsl
pop
incl
out
inc
out
ret
movsl
insl
call
int3
adc
aas
push
push
or
push
xchg
int
cmp
inc
fistpl
inc
es
rcrb
scas
punpcklwd
clc
lcall
jmp
clc
scas
adc
mov
enter
gs
or
in
outsl
insb
mov
adc
add
and
scas
xchg
xor
fcomps
mov
outsl
mov
adc
xlat
cmpsl
push
outsb
xchg
lds
ljmp
mov
push
test
jne
or
outsb
adc
jmp
sub
lods
or
emms
or
ljmp
jp
push
nop
bound
dec
out
gs
and
xchg
xchg
dec
loope
outsl
insb
jbe
mov
scas
arpl
aas
cs
inc
fst
adc
xchg
aam
xor
push
xchg
nop
sub
dec
dec
pop
fisubrs
and
out
xchg
mov
or
mov
and
pop
mov
shl
jmp
and
mov
scas
mov
out
mov
sub
jge
pop
rorb
cld
jp
cmp
fisubrl
xchg
sbb
jp
fisubs
dec
fyl2x
add
push
cmp
mov
repz
popf
mov
scas
mov
xchg
ret
push
mov
mov
fildll
pop
int
mov
lods
sub
repnz
cmp
push
cmp
cmp
sbb
and
pop
test
xor
mov
push
dec
insl
loope
inc
fcoml
mov
outsb
xchg
or
scas
sbb
ret
mov
mov
mov
and
jmp
divl
stc
mov
les
mov
call
mov
arpl
in
push
ss
call
lea
push
add
notb
lods
out
aaa
testl
das
out
sub
xor
jecxz
inc
cwtl
cmp
fsubl
dec
cmp
push
in
xor
sbb
add
xchg
jne
jge
push
std
arpl
fists
jb
sbb
xchg
int
ja
fwait
jl
aad
ja
sub
cmpsb
jo
jmp
adc
mov
fildl
dec
loopne
jecxz
les
test
test
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
and
mov
and
jnp
ja
fisubl
jbe
arpl
add
stos
sub
sbb
push
ret
push
sbb
xchg
aas
mov
imul
push
enter
or
imul
out
sbb
xchg
fldt
xchg
mov
pop
pop
insl
xchg
and
lea
dec
shlb
xchg
push
inc
bound
mov
xor
test
pop
mov
in
cmp
pop
jg
fistps
aas
adc
cmp
stos
mov
lret
adc
inc
dec
jg
jne
lods
mov
xor
adc
push
shr
xchg
faddp
dec
int3
aad
inc
xor
add
nop
addr16
mov
lret
sbb
addr16
or
cmp
movsl
jmp
je
jmp
inc
loop
push
les
adc
jmp
fldenv
pusha
sub
popa
sub
mov
mov
push
mov
adc
sub
add
pusha
mov
icebp
cltd
or
ss
outsb
rcll
sub
aad
fcoms
pushf
dec
mov
pusha
jp
loope
add
rcll
cltd
cs
jo
lock
into
mov
dec
sbb
jnp
bnd
mov
orb
adc
or
sti
pop
loopne
addr16
jne
push
adc
jnp
nop
inc
outsb
fcompl
cs
imul
and
push
sub
or
iret
dec
testb
lods
mov
in
xchg
mov
pushf
mov
pop
mov
and
jno
js
testl
pop
push
dec
adc
jg
jbe
xor
lods
sub
xor
dec
sub
cmp
jg
xchg
sub
aad
add
sbbb
fisttpl
push
shll
sti
adc
inc
stos
cmp
push
add
loop
mov
aad
cmp
subb
fcmovne
cmpsb
loopne
imul
bound
aam
stos
ds
aaa
shrb
out
sahf
mov
imul
aas
hlt
dec
cwtl
adc
inc
sarl
pushf
mov
mov
xchg
nop
jp
out
ds
faddl
push
xchg
sbb
sti
sbb
dec
dec
fprem1
sbb
lcall
mov
out
cmp
jle
test
sub
mov
daa
fs
in
jo
push
test
in
pop
mov
ja
and
or
rcll
cli
jmp
test
pop
jge
adcl
mov
insb
loop
stos
mov
in
stos
pop
insb
loop
in
sub
jp
xchg
push
adc
cmp
xchg
mov
mov
inc
lret
mov
or
outsb
sub
das
adc
ja
jl
out
ss
jnp
bound
mov
xor
jne
xchg
cmp
mov
or
bound
dec
rcrb
imul
test
and
mov
sbbb
sub
enter
out
bound
mov
stos
adc
shll
mov
adc
add
das
int3
fldenv
subb
and
out
jp
or
out
lahf
inc
jnp
or
push
xchg
mov
test
push
adc
bound
mov
sbb
fildl
test
test
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
jle
js
dec
adc
adc
ljmp
xchg
mov
mov
lds
rcll
jg
inc
test
adc
into
cmp
setne
std
pop
lods
cwtl
ret
call
loop
cli
mov
cmp
inc
rclb
and
adc
in
xchg
mov
addr16
sbb
adcl
lods
or
push
xor
adc
adc
dec
repnz
lahf
int
pusha
mov
xchg
test
xor
out
cmpsb
fnstcw
mov
icebp
or
mov
ja
and
push
aaa
loope
and
push
adc
and
sarl
outsb
hlt
xchg
aad
orb
jecxz
jl
jge
addr16
imul
pop
xchg
inc
jne,pt
loopne
shrb
inc
push
xor
test
test
adc
test
scas
pop
push
jp
ss
fdivrl
pop
mov
cli
adc
aad
ljmp
cwtl
inc
mov
lock
cmp
out
in
fs
mov
lods
stos
add
std
mov
es
insb
mov
push
or
sbb
mov
and
adc
test
inc
pop
cwtl
stos
js,pn
push
andl
mov
in
test
pop
add
clc
je
mov
fdivrs
add
add
mov
xchg
pop
or
cmp
test
scas
rclb
mov
inc
xchg
std
jle
pop
rcll
enter
lea
push
mov
pushf
scas
lahf
xchg
inc
sub
mov
inc
jle
push
pop
and
dec
pop
stc
scas
mov
sub
ss
inc
push
lret
pop
xchg
sbb
das
cmp
jb
sbb
jl
jle
in
data16
testl
stos
movsl
cmp
cwtl
je
ss
fwait
shlb
pop
in
mov
lcall
loope
pusha
mov
dec
cmp
pop
or
test
jl
push
cld
ss
ja
int3
mov
iret
inc
xlat
daa
ds
push
loopne
cmp
push
rclb
push
in
pop
loopne
lock
mov
in
mov
push
popf
addl
jmp
sub
jae
jnp
sub
loope
addr16
shll
xchg
lcall
mov
and
int3
mov
xor
das
sub
repz
je
inc
mov
dec
jbe
xor
clc
decl
xchg
aam
lds
add
cmp
mov
fwait
clc
jb
sbb
adc
xchg
rcrb
cmp
loopne
mov
shlb
dec
xchg
cmp
adc
out
inc
dec
cmpsb
inc
fstpl
call
test
inc
lret
hlt
ja
sbb
sbb
out
pop
pop
and
ds
or
aas
inc
test
xor
inc
jg
aaa
or
cmc
xor
cmp
stos
jmp
movsb
in
mov
in
mov
mov
jge
mov
dec
mov
adc
iret
btc
adc
mov
mov
lret
jmp
loop
lods
loope
xor
nop
cmpsl
mov
push
rorl
jl
and
lods
cmp
leave
aam
mov
andl
dec
lods
and
cmpsb
push
cltd
ss
sub
out
arpl
jae
sub
rcll
out
scas
sbb
pop
dec
pop
data16
lods
xor
xor
daa
jle
popa
lret
pop
add
xchg
jno
test
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
mov
repnz
mov
cltd
scas
push
lods
cmp
fldl
cmp
mov
sbb
inc
popf
mov
rcll
mov
dec
mov
loop
inc
inc
sub
sbb
stos
les
arpl
in
stos
adc
aad
cmpsl
push
sbb
jp
ja
inc
xchg
inc
ja
cli
mov
shrb
inc
js
jp
dec
push
and
mov
lret
and
into
inc
fs
jne
rclb
dec
sbb
ljmp
fidivl
and
jns
js
push
cmc
cld
or
arpl
bound
jecxz
mov
add
das
push
pop
aam
inc
adc
pop
leave
inc
xchg
stos
and
pop
shlb
xor
aas
call
sahf
mov
cld
lret
xor
inc
jno
clc
jg
jmp
sub
add
add
xor
stos
fdivs
xchg
mov
test
stc
push
mov
dec
mov
cmp
mov
dec
dec
lret
xchg
inc
inc
adc
je
push
and
cmp
inc
fidivrl
insl
xchg
lcall
cmp
js
push
lret
adc
mov
mov
inc
pop
arpl
fs
or
adc
push
stc
dec
push
pushf
loop
add
aaa
test
xor
stos
stos
int3
popa
ficompl
repnz
mov
mov
jecxz
and
out
clc
xor
add
fidivl
fldcw
mov
shrl
adc
mov
xchg
scas
xor
mov
insl
loop
jo
fidivl
insb
outsl
mov
dec
ljmp
push
mov
cmp
xlat
mov
push
add
mov
outsb
add
xor
mov
stos
aad
pop
mov
out
dec
gs
or
fadds
popa
rcll
mul
and
adc
xchg
fstps
sbb
pop
jge
mov
and
cmp
pusha
pop
mov
pushf
outsb
push
and
push
mov
adc
sbbl
jae
push
jbe
xchg
pop
mov
in
pop
or
setae
movsb
mov
dec
push
call
cmpsl
and
js
leave
mov
shrb
mov
pushf
dec
repz
scas
lcall
ret
test
xor
movsl
das
cwtl
outsb
push
nop
mov
cmc
xchg
xor
xor
and
insb
cmp
inc
mov
pop
push
popl
xlat
dec
and
add
sbb
subl
push
stos
bound
and
mov
popf
pop
lcall
adc
cwtl
test
sub
gs
dec
test
cmp
jmp
jnp
cmp
call
js
aad
addr16
aaa
fsubrs
out
adc
jle
add
pop
push
shr
sub
lods
pop
jae
xchg
shll
xor
cmpsb
mov
mov
jne
js
push
push
lret
sub
lds
int3
movsb
ficompl
jno
xchg
loop
dec
movsl
mov
sbb
stos
nop
loop
ret
sbb
andb
mov
je
cmpsb
testl
cmp
es
pop
jl
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
jbe
js
adc
adc
dec
mov
scas
pop
filds
xchg
rcrl
imulb
cmpl
mov
push
mov
and
test
inc
xchg
cmp
sub
pop
rorl
inc
dec
cltd
adc
jg
cld
xchg
outsl
sub
jae
push
ja
shll
into
mov
fisubrs
loope
shll
cli
push
cld
xor
cmc
mov
or
pop
dec
add
add
arpl
daa
push
test
jne
loope
ss
or
or
loope
and
sub
pop
and
aaa
shrb
xorl
push
and
in
dec
xorl
or
mov
adc
loopne
or
sub
fcomip
dec
das
sub
xchg
rcrb
shrl
pop
and
jmp
lahf
out
jno
cmp
js
inc
hlt
out
fwait
sbb
mov
jo
jle,pn
std
loopne
adc
aas
mov
xchg
js
xchg
dec
mov
out
push
inc
cmc
jno
sahf
in
push
jbe
loope
cmp
add
sub
mov
insl
call
pop
jp
mov
loop
in
sti
int
xchg
loop
push
pop
push
incb
jmp
cmp
jle
call
xchg
xor
dec
ss
mov
jl
shr
or
shl
xor
jge,pn
lock
sub
scas
inc
cmpsl
cmove
in
popf
mov
xorb
subb
ja
push
push
push
outsl
popa
clc
or
xlat
jg
stos
in
icebp
in
sub
add
pop
ljmp
out
mov
lods
pop
enter
cs
pop
jo
mov
rorl
mov
sarl
lods
int
mov
data16
add
mov
sbb
ljmp
and
cwtl
pop
sahf
sub
insb
daa
nop
pop
pop
cmpsl
jbe
inc
cmpsb
mov
jne
jge
mov
sub
cmp
and
jo
jmp
sub
call
sbb
shlb
in
push
xchg
dec
push
cmp
dec
inc
fldl
sbb
push
sub
inc
and
inc
xchg
cmpsl
js
or
adc
mov
sbb
pop
cmp
mov
mov
shrb
cmp
jp
xchg
lods
add
shlb
mov
mov
inc
cmp
mov
lock
std
and
add
bound
dec
add
cld
in
negb
push
enter
mov
dec
push
ljmp
or
ficoms
insb
popf
lahf
loop
mov
cld
mov
mov
mov
jae
inc
push
pop
mov
hlt
dec
adc
mull
add
mov
jmp
jg
jge
jmp
xor
insl
add
test
cmp
mov
cmp
fwait
mov
mov
sbb
sbb
xchg
lods
push
ds
les
dec
xorb
cmp
fiaddl
dec
cli
pop
xchg
mov
inc
sbb
dec
outsl
std
sub
popa
loope
outsb
mov
sbbb
sub
cmp
pop
and
daa
or
int3
sub
and
data16
mov
mov
jle
xlat
push
pusha
popa
mov
fmuls
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
das
adc
mov
stos
adc
adc
call
pop
mov
pop
ret
imul
cltd
loope
insl
adc
cmp
imul
cmpsb
sub
cmc
jl
cli
add
ret
cmc
pusha
nop
icebp
lcall
xlat
cmpsl
or
rclb
lds
js
addr16
arpl
pop
and
sbb
push
das
or
fdivrs
cltd
cmpsl
mov
xchg
negl
js
inc
outsl
pop
daa
pop
jo
adc
adc
cmp
lret
lds
mov
cwtl
rol
sbb
aam
xor
inc
xor
sbb
or
push
cmp
xchg
mov
mov
ficoml
and
add
cmp
ret
out
sub
mov
xchg
enter
pop
ror
mov
je
rclb
sbb
hlt
jle
insl
inc
fcmovnu
ljmp
mov
aam
sbb
or
or
test
push
dec
cmp
inc
out
mov
pop
stos
lods
je
mov
iret
mov
test
xchg
pop
cmc
imul
mov
xchg
fyl2x
cltd
sti
test
mov
jno
xor
xchg
push
cmp
iret
aam
mov
cmp
push
inc
fsubl
scas
pop
ret
cwtl
shlb
icebp
ja
jg
popa
jne
ret
mov
cmpsl
js
enter
sbbb
xor
mov
or
out
stc
int
push
pushf
outsb
add
ret
push
call
inc
lock
sbb
shll
sbb
std
xchg
xor
xchg
inc
mov
xchg
xchg
ja
inc
inc
cmp
fsubp
ljmp
jnp
mov
fdivrl
cmp
in
sbb
pop
iret
repz
mov
xchg
sub
or
sub
xor
loop
or
mov
mov
in
in
mov
mov
mov
and
dec
pop
add
adc
aam
dec
dec
cmp
arpl
mov
in
imul
imul
lea
xchg
ret
dec
xor
pushf
pop
and
outsl
xchg
ds
mov
clc
push
cmpsb
movsb
cmp
xor
stc
rorb
jnp
xor
test
in
jbe
mov
jge
sahf
xchg
jbe
xchg
jmp
faddp
push
aad
out
nop
out
insl
xor
pop
enter
stos
clc
push
jmp
jl
stos
in
push
and
mov
pop
sti
lock
lret
cwtl
cmp
rorl
xor
filds
in
mov
mov
and
mov
pop
dec
adc
mov
data16
pop
decl
or
into
cld
nop
bound
xor
mov
pop
data16
addr16
cmp
arpl
and
outsb
cs
xlat
out
lcall
add
jae
jno
xchg
adc
aaa
mov
jo
sti
fwait
sub
jge
ret
or
and
icebp
cmc
dec
mov
loopne
pop
mov
cli
clc
shl
adc
add
add
cwtl
sahf
mov
pop
sbb
inc
fstpt
outsb
add
mov
aam
rcr
aaa
push
mov
fnstcw
or
dec
int
push
scas
push
sarb
cmp
dec
push
ja
dec
inc
sbb
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
xchg
js
xor
adc
add
filds
jns
out
push
mov
or
es
fiadds
arpl
clc
scas
sti
les
jno
sub
xlat
aad
stos
mov
addr16
mov
add
outsb
pop
leave
les
ss
adcl
daa
mov
push
fwait
xchg
inc
sub
cld
mov
jns
sbb
int
arpl
sbb
mov
and
dec
fsubr
test
rcr
sub
test
and
adc
popl
mov
imul
stos
bound
test
shr
repz
sbb
pop
cmp
out
shl
imul
shrl
mov
add
fsubrs
mov
fs
lret
outsb
loopne
paddq
daa
mov
dec
push
stos
enter
jle
mov
sub
inc
pop
pop
js
int3
cmp
in
xchg
sub
pop
sbb
mov
enter
xor
rorl
mov
jns
mov
dec
orl
rorl
lcall
adc
add
fistl
or
addr16
js
lret
pop
add
andl
jne
ret
xchg
in
or
dec
das
neg
mov
sub
or
bound
shll
jnp
mov
out
mov
jnp
aam
mov
fcompl
iret
aaa
nop
je
scas
frstor
inc
nop
aas
push
sbb
or
add
cmp
out
cmc
popl
mov
add
xchg
sbb
inc
inc
fisttpl
int3
or
xchg
movsb
mov
stos
mov
xor
dec
popf
ret
jmp
push
scas
jno
and
in
arpl
mov
dec
cmp
je
mov
in
adc
decb
imul
jl
dec
and
sbb
cmp
inc
mov
scas
xchg
mov
inc
movsl
sub
pop
sbb
rorb
pop
xchg
push
cltd
jae
mov
icebp
adc
es
cmp
repz
pushf
hlt
adc
xor
inc
add
and
arpl
pop
mov
adc
mov
mov
lcall
popa
aas
lahf
or
ror
push
jbe
dec
repz
jb
mov
aad
pop
push
mov
jle
mov
inc
ret
pop
jnp
fsubrl
in
xchg
addb
ja
into
inc
mov
shlb
call
lahf
pop
pop
cmp
pop
add
out
push
stos
ret
mov
jmp
lods
icebp
test
push
lea
xlat
add
hlt
xor
xor
insb
imul
scas
jmpw
sbb
fidivl
imul
bound
jo
adc
jmp
cmp
popa
jg
cmp
or
popf
jp
movsb
in
jg
int
icebp
cwtl
pop
adc
xchg
mov
cmp
les
and
in
sub
outsb
mov
or
adc
cmc
add
testb
int
mov
fcomi
daa
outsb
xchg
jno
sub
mov
stos
loope
inc
ret
std
add
pop
push
cs
jno
jae
stc
inc
js
inc
inc
shr
loope
mov
mov
pop
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
mov
sub
adc
test
out
mov
decb
and
data16
push
adc
repnz
cmc
test
pop
pop
or
sub
adc
mov
jno
sbb
shll
add
sbb
arpl
inc
xchg
int
add
jae
pop
insl
dec
and
repz
sub
sub
inc
xor
and
aas
xchg
sahf
clc
test
fildl
sub
mov
or
mov
dec
lahf
pop
mov
testb
inc
je
sub
mov
or
sub
in
cwtl
lret
push
out
outsl
outsl
adcl
xchg
and
add
in
adc
out
std
mov
mov
sbb
fstpl
xchg
inc
xchg
mov
aas
mov
mov
mov
lock
adc
push
dec
push
mov
inc
stos
mov
push
push
lret
dec
push
pop
addr16
cmp
push
stos
pop
cmp
xor
fisubrs
or
jb
in
xor
je
repz
arpl
into
pop
and
xor
inc
push
lcall
jnp
xchg
inc
xlat
shl
xchg
iret
dec
das
sub
fldt
inc
jbe
mov
mov
and
cmp
daa
push
adc
jbe
pop
orl
dec
es
add
xor
pushf
inc
loop
lahf
pop
mov
stos
or
mov
jnp
add
mov
inc
add
sub
and
js
loopne
stc
pop
jle
dec
in
ret
leave
sub
sbb
lods
mov
imul
push
jecxz
lds
data16
cmp
stc
mov
lea
mov
fnstcw
lds
das
push
jle
data16
out
mov
mov
test
into
dec
loopne
mov
loop
cmc
jl
lret
xor
imul
fdivrl
sub
cmp
xchg
mov
pop
test
jmp
push
ja
in
mov
sbb
sub
pop
roll
arpl
lret
xor
and
je
fsubp
cwtl
negb
test
fldenv
in
mov
dec
mov
add
or
popa
stos
xchg
xor
das
mov
mov
outsl
adc
cmp
lods
xorb
dec
cmp
mov
mov
add
mov
scas
rcll
outsl
in
sub
xchg
sbb
jecxz
rcrl
lahf
mov
je
in
pusha
xchg
cmpsl
rorl
xchg
inc
dec
push
add
data16
imul
sti
pop
insl
popw
xorl
or
das
adc
cmp
aaa
adc
or
sarb
xchg
bound
mov
pop
jmp
ds
aas
fcmovb
sahf
rorl
xchg
insl
adc
scas
cmpsl
xchg
out
cmp
dec
inc
mov
add
js
push
dec
jmp
jbe
pusha
push
icebp
test
loope
fcoml
jmp
sahf
cmp
jmp
or
jbe
and
stos
xor
test
loopne
sub
fs
pop
cmpsb
incb
iret
mov
xchg
testb
lcall
ret
sub
xchg
fdivrl
test
mov
dec
mov
xor
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
je
ret
pop
adc
sub
call
adc
add
mov
sbb
jne
pop
mov
lcall
mov
andl
orl
das
fwait
imul
outsb
into
mov
ljmp
or
jge
inc
push
lods
mov
aam
mov
inc
pop
push
aad
int
jg
push
imul
mov
push
jns
cmp
dec
mov
inc
mov
cmc
cli
mov
inc
xchg
push
sbb
pop
cmp
dec
jnp
inc
add
mov
je
jle
lret
in
out
xchg
push
jns
jbe
and
mov
jne
out
mov
cmp
fwait
mov
sub
lds
mov
adc
ror
mov
cli
std
clc
adc
push
add
jns
in
mov
pop
jle
jnp
ja
incl
inc
pop
cmp
jns
loopne
xchg
mov
stos
lea
and
xor
and
sahf
ss
mov
in
ret
mov
cltd
gs
lock
mov
mov
movsb
push
aas
int3
xor
testb
inc
les
pop
xchg
mov
mov
cli
imul
xchg
xchg
pushl
cli
mov
scas
xor
mov
arpl
xor
xor
enter
lahf
cmp
sbb
lods
shrl
dec
int
mov
inc
jg
aam
sahf
mov
bound
jle
fiadds
push
fisttpl
das
mov
cmc
push
push
xchg
rcl
adc
jae
cmp
xor
mov
sbb
in
fnsave
mov
mov
mov
add
fidivl
andl
push
repnz
aas
dec
cwtl
mov
cli
push
test
dec
popa
sahf
aaa
sub
pop
ror
push
lods
imul
cmpsb
lods
lahf
cmp
pop
stos
jp
mov
push
lcall
push
call
out
adc
or
nop
jl
sti
mov
cmp
or
adcb
outsl
dec
inc
or
movsb
xorl
test
into
mov
mov
cmp
mov
mov
ret
std
jg
shrl
dec
nop
lea
sti
xchg
inc
mov
pushf
dec
push
dec
dec
inc
mov
mov
movsb
mov
lds
mov
xchg
jae
das
aas
add
in
xchg
xchg
std
data16
out
mov
inc
bound
cmp
inc
imul
aaa
jl
adc
fidivrl
and
xor
or
outsb
sti
test
andl
sbb
jne
pand
hlt
mov
pop
push
sbb
fdivp
lahf
inc
pop
cli
int
jge
std
dec
outsl
dec
sbb
mov
idivb
leave
cwtl
out
addr16
hlt
push
sbbl
loope
cmp
cltd
or
and
inc
pop
rorb
hlt
clc
mov
mov
add
jg
int3
fisttpll
adc
aaa
out
hlt
dec
cmp
outsl
lea
into
mov
subb
pop
inc
push
fimull
mov
es
jle
and
xchg
out
mov
sahf
sbb
sub
sbb
pop
cltd
and
cmp
ficoms
aam
mov
mov
cwtl
push
pop
iret
pop
and
fists
mov
mov
push
push
and
sub
add
mov
mov
mov
jmp
or
mov
adc
fldl
outsl
sbb
adc
sbb
inc
mov
ja
pop
gs
test
aam
cs
pop
out
addr16
jmp
cltd
aaa
cmp
dec
add
mov
push
in
daa
jp
shll
aaa
mov
and
je
clc
shr
mov
jno
movsb
icebp
xchg
test
or
leave
lret
pop
pop
stos
sbb
fwait
add
push
add
and
push
pushf
ss
mov
movsb
add
pop
gs
push
daa
sub
das
dec
jecxz
inc
insb
daa
pop
aaa
test
push
cmpsb
int
cmc
push
ret
push
ds
popa
pop
push
and
leave
xchg
xchg
mov
or
stc
call
es
mov
shr
push
cmpsl
or
xor
pop
xchg
call
cmp
iret
je
mov
cli
cli
jb
push
ljmp
jbe
xchg
scas
mov
shl
movsb
push
mov
dec
inc
pop
idivl
push
mov
mov
les
icebp
pop
lea
enter
test
stos
adc
jecxz
hlt
mov
pop
gs
lea
xor
jmp
outsb
stos
and
scas
xlat
enter
out
adc
jbe
push
adcl
imull
xorb
lea
cmpl
stc
xor
call
cmpxchg
inc
or
dec
inc
mov
mov
push
sti
sub
jbe
cmp
out
adc
xchg
pop
push
rcrb
jmp
das
mov
lea
or
test
jbe
sbb
inc
cli
lahf
pop
testb
dec
loop
ret
cmp
add
push
dec
sar
jb
out
mov
mov
inc
cmc
adc
lret
stos
xor
xor
inc
cs
stc
sbb
sub
or
sbb
cmp
mov
mov
push
gs
push
xor
inc
mov
inc
xchg
mov
enter
xchg
mov
push
cwtl
daa
jne,pn
fucomi
jno
aad
mov
filds
out
sbb
sbb
jnp
dec
cli
jo
iret
add
jae
aad
popf
out
adc
ss
mov
push
add
pop
jae
push
xor
repz
adc
imul
cwtl
mov
rcr
je
shrb
adc
xor
dec
xchg
push
or
dec
jmp
or
inc
push
sahf
xor
mov
outsl
or
pop
loop
js
rcl
pop
sub
out
ss
and
mov
mov
adc
adc
sti
mov
fbld
daa
jne
xchg
adcb
in
adc
cmpsl
sarb
inc
or
jge
ds
cli
fucomip
dec
repz
dec
icebp
jge
pusha
xchg
jno
movsb
inc
adc
and
xor
test
dec
or
pop
jae
push
mov
xor
cltd
cmp
imul
dec
jb
or
mov
lea
fmulp
jmp
mov
mov
lcall
scas
cmp
gs
lahf
stos
rorl
mov
scas
pop
dec
roll
iret
inc
mov
mov
loop
mov
enter
nop
lods
insl
call
sub
hlt
sbb
stos
ret
push
dec
sar
in
push
lock
push
movsb
dec
gs
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
repz
lods
or
adc
adc
pop
or
repz
xor
jecxz
pushf
xor
ret
cltd
nop
fs
jae
sbb
and
sub
add
outsb
push
adc
mov
add
jg
push
xlat
nop
aas
rcrb
test
in
int3
out
stos
iret
inc
es
pop
cmc
push
movsb
or
stc
out
jmp
dec
sub
dec
mov
sub
movsw
inc
push
mov
sub
mov
negb
sub
add
loopne
xor
mov
inc
cmp
xor
and
notb
xchg
inc
inc
sahf
movsb
out
sub
adc
and
push
and
in
pop
cmp
cltd
and
sbb
adcb
jnp
mov
jns
push
dec
cmp
je
xchg
and
push
clc
sub
stc
or
pusha
js
mov
lods
out
pop
cmpl
int
popf
mov
bound
test
dec
sub
and
stc
mov
shll
inc
or
mov
je
scas
jmp
pop
push
fcoms
and
xchg
adc
sahf
mov
or
pusha
add
lods
mov
insb
hlt
out
popa
xor
popa
repz
mov
sbb
push
inc
push
and
outsb
adc
repz
lods
repz
in
clc
flds
xor
test
je
enter
test
nop
dec
repz
adc
mov
fdecstp
rolb
pop
lock
ja
add
mov
test
leave
movb
push
pop
xchg
testl
jbe
inc
icebp
push
mov
out
imul
mov
ja
call
iret
add
add
and
mov
mov
or
leave
sbb
insl
cwtl
mov
lahf
mov
movsl
stos
test
jb
mov
popa
xchg
dec
out
or
lahf
push
js
sbb
push
rcrb
stc
pusha
and
pop
jae
sar
and
xor
int
bound
jae
js
pusha
jno
inc
popa
lods
pop
mov
mov
rcrl
jbe
cs
flds
add
cmp
xchg
cld
pop
sahf
sub
das
mov
pop
in
pop
cld
cmp
xchg
xor
mov
mov
add
fdiv
pop
loopne
xchg
cmp
mov
and
fdivrl
out
negl
push
ss
cmp
xchg
and
push
bnd
pop
fptan
mov
mov
jecxz
jb
orl
push
das
sarb
scas
fnstcw
adc
mov
aas
fldcw
lea
push
mov
fs
cmp
sbb
jle
mov
add
test
add
sbb
xchg
push
xchg
arpl
cs
lret
fcompl
cld
enter
push
xchg
mov
shrl
xchg
xchg
lock
daa
out
pushf
ficompl
push
ret
mov
push
sub
cmpsb
es
sub
inc
adc
outsb
add
data16
lret
jbe
sbb
pop
sbb
jb
xchg
out
sub
mov
mov
iret
clc
mov
sbb
ljmp
stc
add
pushf
mov
mov
out
adc
push
xor
sbb
fiaddl
lahf
jno
xor
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
inc
xor
adc
pop
dec
inc
mov
add
add
push
pop
clc
inc
daa
xchg
aas
push
into
cld
iret
xlat
shrl
xchg
push
imul
xchg
or
lods
adc
stos
lock
fidivs
lods
icebp
inc
ljmp
or
xlat
and
stos
stos
int
mov
mov
dec
cmp
in
in
lods
sbb
or
loope
lcall
mov
sbb
add
xchg
data16
outsb
lods
scas
push
cmp
rolb
jo
popa
fwait
sub
leave
cmp
jle
in
imul
not
or
arpl
xchg
inc
pop
cs
mov
outsb
dec
push
stc
dec
push
sbb
push
pop
pop
je
xorl
and
jb
es
push
hlt
outsb
xchg
dec
lds
test
int
popf
shlb
xor
push
sbb
pop
repz
sub
xchg
addr16
dec
clc
fisubrl
or
lret
das
ror
pop
rolb
add
pop
daa
or
in
dec
or
loope
sbb
rcll
cmp
popa
into
xchg
jno
popa
mov
or
int3
xchg
imul
mov
lcall
xchg
insl
scas
int
mov
jge
cmp
mov
pop
fsts
pop
jno
lock
pop
leave
inc
scas
xlat
out
dec
xor
inc
popaw
dec
inc
lock
test
fstpl
sahf
cmp
adc
ss
pop
xchg
rorl
pop
inc
xchg
inc
jl
xchg
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
