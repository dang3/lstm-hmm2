push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
js
jle
jle
mov
jle
into
xlat
cmp
pop
add
push
mov
rdpmc
bswap
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
sub
or
imul
aad
inc
int
mov
stos
fdivrl
ljmp
add
jge
sti
cltd
push
jne
in
and
jb
test
mov
jle
push
jg
das
loop
lahf
mov
cld
xchg
out
test
cmpl
pop
out
test
inc
scas
or
xchg
jae
jb
roll
fdivrs
jp
and
mov
repnz
cmc
cmp
fnstsw
fldenv
pop
in
jne
inc
xor
call
jmp
popf
and
jl
sub
add
mov
out
mov
cmp
fstl
xchg
dec
push
std
into
cli
loope
aad
push
jne
push
jo
pop
mov
notl
popa
jns
inc
imul
push
stos
push
jb
mov
pop
bndldx
or
cltd
leave
mov
cwtl
orl
mov
pop
stc
and
mov
add
add
jg
inc
add
push
add
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
imul
mov
jle
mov
cmpsl
and
cmp
lods
push
xchg
cmpsb
mov
popf
pop
or
mov
fildl
push
mov
xchg
xor
hlt
out
jge
xor
adc
popf
mov
mov
xchg
inc
inc
fdivl
inc
test
push
out
inc
jl
fs
in
idiv
fldcw
xchg
aam
mov
imul
mov
out
decl
rcrl
popf
adc
pop
pop
mull
and
dec
leave
ret
aaa
xchg
xchg
jmp
add
dec
mov
push
adc
jo
inc
mov
bound
enter
mov
mov
mov
xchg
push
loopne,pn
jl
push
shr
mov
ficoml
mov
das
in
xchg
test
sbb
or
lods
dec
sbb
pop
lods
mov
into
shr
std
je
mov
sub
xor
add
fwait
xchg
adc
cmp
and
pop
cmp
push
les
mov
insb
jg
imul
loope
push
mov
lahf
push
add
inc
push
inc
dec
xchg
lods
add
test
cwtl
or
inc
aad
or
into
shlb
xchg
dec
es
xor
or
mov
cmpsl
dec
repz
lds
xor
shrb
aad
icebp
push
sbb
addr16
out
out
lea
pop
shll
cmc
out
sub
push
mov
dec
adcb
repz
out
fdecstp
roll
and
sub
in
push
sub
xlat
pop
ljmp
xchg
sbb
mov
movsb
inc
outsb
lret
shll
dec
outsl
sub
mov
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
xchg
jle
mov
jle
dec
and
clc
mov
test
gs
outsl
lea
add
xlat
cmc
jo
add
loopne
ret
ror
repnz
dec
mov
stos
insb
adc
out
pop
fisttpl
xchg
dec
inc
adc
cmpsl
xor
sub
or
dec
andl
or
mov
test
or
xor
scas
xchg
test
repz
pushf
xchg
in
not
add
je
nop
stos
add
test
mov
xchg
cmp
dec
dec
mov
mov
pop
sub
mov
mov
sbb
rcrb
sarl
gs
popf
insl
scas
std
push
in
pop
aaa
cltd
scas
mov
rorl
mov
ja
aaa
add
lds
inc
sub
insb
decl
lret
scas
rol
mov
andl
insb
aas
es
cltd
cmp
mov
push
addr16
int
popf
and
sbb
jmp
rcrb
bound
dec
inc
jae
std
push
mov
mov
int3
mov
lods
in
inc
outsl
leave
or
addr16
lea
roll
add
adc
sbb
dec
loop
lock
scas
fisubs
jne
xor
mov
push
sub
fcom
push
xor
add
test
in
ret
or
insb
cmp
cmp
xchg
outsl
xchg
aad
rcr
jg
outsl
mov
add
outsl
fsubl
fcoms
xchg
push
nop
mov
mov
cmp
inc
mov
add
mov
or
jmp
or
popa
sbb
jnp
jle
jg
jle
ljmp
fldt
pop
clc
push
sub
fistl
and
xchg
sub
test
les
loopne
and
pop
cmpsl
xor
jb
neg
repnz
inc
dec
cmp
mov
addr16
push
inc
jg
push
shll
test
add
and
cltd
in
jg
mov
test
inc
push
popa
push
push
in
into
jns
lcall
cmp
call
test
mov
inc
mulb
outsl
mov
lock
sti
test
push
add
rorl
outsl
clc
mov
aaa
mov
movsl
int
push
mov
cs
dec
mov
fmulp
pop
popf
inc
jmp
ljmp
mov
std
movsb
adc
jne
push
test
push
push
pop
inc
enter
ljmp
add
jne
adc
ljmp
daa
push
lds
lret
push
and
xor
sub
roll
mov
mov
les
xchg
les
scas
push
inc
inc
jbe
pop
xor
shlb
out
sbb
jns
mov
pop
push
add
pusha
mov
push
push
cmp
pop
inc
nop
ret
lret
jecxz
test
push
lock
cmp
call
push
mov
dec
mov
pop
pop
sub
movsl
fsub
and
cld
inc
cmp
push
add
sub
jle
mov
sbb
add
jmp
repnz
fadds
rorl
push
in
out
leave
lea
iret
inc
inc
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
pop
lock
add
jle
jg
jle
aad
add
and
loope
out
pop
push
mov
and
popa
xchg
sbb
push
jle
ss
shrb
adc
and
mov
push
sarb
jbe
fdivr
aad
hlt
loop
adc
xchg
imul
jae
adc
xchg
scas
sbb
sub
lds
and
insb
cwtl
iret
jl
sub
inc
pop
insb
outsl
les
nop
sti
adc
or
mov
frndint
mov
and
and
jb
lods
cmpsb
nop
mov
cltd
out
cmpsl
jge
xor
scas
jne
insb
leave
adc
sub
cmp
mov
lahf
rcl
icebp
inc
dec
xchg
lahf
inc
insb
mov
add
cmp
out
sub
adc
mov
inc
inc
lods
repz
adc
shll
std
out
data16
pop
sub
mov
movl
xor
ret
ja
cld
shll
cmp
sahf
lret
and
sub
in
cld
repnz
andl
test
and
loope
loope
sbb
dec
loope
pop
sbb
add
mov
jmp
bnd
jmp
es
popf
stos
push
fstpt
mov
sbb
test
aas
cmp
adc
lret
jl
dec
sub
hlt
jae
add
filds
pop
repnz
mov
add
int3
adc
scas
lods
mov
and
inc
jmp
pop
or
in
xor
aam
sbb
int3
mov
or
cld
ljmp
fs
nop
imul
mov
mov
mov
movzwl
add
jmp
push
mov
test
into
jge
fimull
jg
jle
fsubl
lds
pop
pop
push
shrb
push
or
add
enter
sbb
cmp
fistps
mov
rolb
inc
imul
ficoml
lret
inc
scas
in
dec
push
dec
inc
cmp
mov
fwait
mov
xor
repnz
pop
cmp
testb
cwtl
sbb
pop
dec
in
xchg
hlt
push
rcl
dec
or
in
dec
push
incl
in
adc
das
inc
jno
sbb
push
lods
sub
push
jle
xchg
inc
and
inc
insb
adcb
stos
in
push
outsb
xor
and
out
sarb
sahf
inc
shll
add
and
sub
inc
enter
shll
fs
mov
sbb
shll
adc
imul
sahf
xlat
hlt
lock
pop
xor
xchg
mov
xor
mov
add
test
aad
or
in
xor
mov
cli
mov
mov
sbb
adc
out
int
mov
subl
mov
jnp
fs
pop
mov
iret
bound
xor
sbb
dec
fcomp
test
or
push
adc
mov
cltd
shrl
je
xor
in
imul
add
movsl
mov
cltd
loope
test
jecxz
and
pop
orl
jo
lret
xor
jmp
icebp
dec
movsb
aad
cld
sti
jle
lea
jge
dec
rol
pop
and
decl
or
dec
or
movb
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
repz
jle
jg
jle
js
mov
mov
add
out
and
in
out
and
orb
scas
movsl
loop
scas
push
lcall
in
mov
nop
jge
repnz
ret
jne
es
mov
js
push
out
pop
jle
das
or
push
pop
jl
or
icebp
jle
xchg
dec
rcrl
dec
cmc
int3
xchg
std
fldcw
push
add
inc
lea
cmp
cmpsb
pop
cmpl
popl
xor
popf
shrl
push
adc
xor
bound
xchg
jae
pop
push
notl
cmp
mov
sbb
pop
dec
shll
ret
add
aaa
jle
je
insb
ret
stos
das
bound
sbb
cltd
test
fmulp
mov
loope
dec
sbbb
arpl
rolb
lcall
adc
fmull
loope
mov
das
loop
lds
cmp
adc
pop
outsb
sbb
lea
out
loopne
outsb
jp
rcl
stos
mov
in
negb
push
mov
inc
add
add
lock
cltd
aad
mov
cld
orl
stos
arpl
lock
xor
jae
fdivs
test
aad
mov
repz
inc
jae
in
mov
loope
mov
rcrl
add
je
mov
and
ljmp
sub
sbb
inc
out
xlat
movsl
dec
cltd
iret
fsubr
inc
test
mov
adc
or
push
test
xor
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
ljmp
shrb
filds
imul
fldt
pop
sub
daa
xchg
mov
int
push
cmp
and
fidivrl
mov
iret
cmp
mov
adc
xchg
adc
pop
add
push
sbb
cmpsl
jp
nop
and
lcall
xor
and
inc
xchg
cmp
sarb
inc
jae
in
and
mov
into
sbb
push
in
aaa
dec
push
imul
xchg
call
clc
and
adc
adc
cmp
mov
aas
mov
or
add
sbb
add
cmp
lods
lcall
and
popa
fcompl
into
lea
shll
or
inc
das
sti
jbe
add
xor
testb
jb
pop
imul
or
fists
mov
pusha
divl
cmp
pop
inc
js
dec
int3
insl
in
dec
cmp
fsubrs
lods
pop
jno
incl
push
dec
jmp
call
bnd
ret
dec
mov
clc
dec
dec
dec
pushf
pop
add
xchg
out
shrl
outsl
dec
push
inc
jle
lret
jnp
adc
rclb
adc
movsb
or
push
arpl
xor
aas
adc
ffree
cmp
xor
jge
pop
icebp
or
stos
mov
scas
cmp
mov
in
jl
enter
sbb
xor
loop
sbb
lahf
adc
add
cmc
xor
scas
cwtl
mov
movsb
icebp
jmp
enter
mov
inc
xchg
dec
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
pmaddwd
jle
mov
jle
je
push
pop
adc
xchg
add
lret
add
sbb
mov
mov
mov
xchg
mov
mov
xchg
loope
pop
inc
or
xor
and
dec
cmpl
test
dec
xchg
callw
xchg
and
adc
lcall
cmp
cltd
ljmp
push
mov
cmpsl
adc
xor
test
adc
pop
and
jbe
push
outsl
xchg
sub
mov
orb
pushf
dec
in
push
jecxz
jge
mov
add
outsl
inc
or
mov
mov
lret
ds
mov
scas
cmp
pop
lahf
es
adc
and
scas
aad
pop
shl
popf
insl
dec
xchg
pop
out
or
inc
hlt
xchg
mov
sahf
xlat
ss
mov
sti
lret
pop
out
testb
daa
imul
push
xor
aaa
or
data16
dec
add
inc
bound
test
cwtl
jo
aaa
or
jge
stos
pop
ljmp
sbb
cmovae
xor
lods
lods
push
xor
hlt
xchg
arpl
xor
mov
and
cmovns
into
add
xchg
or
les
adc
mov
call
repz
lahf
push
adc
ret
mov
push
in
mov
daa
inc
mov
lret
cltd
lods
add
daa
xchg
push
xor
sbb
jmp
addb
mov
dec
sub
or
or
fwait
pop
mov
ficoml
fstp
sub
adc
push
mov
sub
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
xchg
fsts
ljmp
ret
pop
sub
loope
mov
pop
clc
cmpsb
aam
js
int3
rorl
fs
sahf
push
sub
sbb
adc
fimuls
and
dec
cmpsl
pop
add
sbbb
add
lods
dec
insl
and
ror
lea
pushf
xchg
icebp
int
jge
mov
insl
dec
fstpt
pop
xchg
push
aaa
xor
shl
loop
frstor
scas
mov
push
xor
ret
xchg
mov
sbb
pop
and
dec
pop
add
imul
fld
add
push
shll
or
jp,pn
lods
hlt
add
cld
push
mov
out
cli
mov
mov
mov
and
andl
pop
leave
mov
mov
mov
cmp
fimull
int3
shrl
cmp
iret
jae
jnp
jecxz
loopne
sbb
sub
lods
xor
mov
ret
out
call
pop
and
cs
adc
xchg
in
ja
or
xchg
mov
loop
mov
jne
mov
jmp
js
and
loopne
in
sbb
shll
or
mov
sub
pop
inc
add
add
stc
out
stos
sbb
cli
mov
nop
cmp
out
sbb
add
lahf
sti
mov
arpl
ds
mov
and
adcb
dec
cmc
jle
add
std
mov
xchg
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
arpl
jle
jg
jle
mov
push
mov
cwtl
push
cwtl
jp
cmp
aaa
xor
ficoml
push
jg
sub
sbb
xorl
and
int
int3
xchg
ss
out
pusha
cmp
or
pop
les
rolb
test
push
stos
pop
mov
lock
mov
adc
or
adc
andb
fisubrs
xor
cltd
aam
or
daa
shrb
out
popa
je
fwait
mov
in
out
cmp
mov
mov
jecxz
xorb
mov
fwait
mov
sti
shll
dec
sbb
sub
int3
in
mov
mov
pop
sbb
lahf
mov
push
sbbb
leave
or
dec
mov
xor
cmp
arpl
pop
sub
out
jns,pt
mov
mov
test
cmpsl
add
addb
jl
es
or
adc
push
dec
xor
pushl
inc
pop
mov
test
ds
xor
lea
out
pop
inc
shll
fisubrl
cltd
add
lret
gs
jb
hlt
int
xchg
cmp
and
push
jg
sub
fimull
shll
mov
dec
fldcw
lcall
push
sub
je
sbb
xor
mov
stos
mov
sub
dec
insb
sti
jl
decb
cwtl
xchg
lds
shll
xchg
pop
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
mov
jle
push
jg
jle
mov
pop
lcall
out
add
cmc
or
and
jne
test
repnz
fs
xchg
pop
outsl
rcrb
fs
xor
cld
lcall
pop
adc
icebp
add
or
fdivrs
dec
jg
xchg
push
hlt
popa
jle
mov
pop
movsb
mov
hlt
mov
push
lods
int3
add
and
or
cmp
push
fmul
inc
add
pusha
loope
ljmp
loope
fisttpll
testl
sub
dec
mov
push
dec
out
sub
imul
mov
xchg
and
test
in
sbb
cmp
dec
add
out
loope
out
xor
or
add
jae
sub
das
clc
pop
fdivrp
xor
xchg
push
pop
xor
hlt
and
std
xchg
adc
rorl
mov
pop
in
dec
lret
mov
lcall
mov
push
in
mov
decb
xchg
dec
rcl
test
mov
gs
leave
lds
xchg
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
out
cmc
lods
lret
jae
jle
push
jg
jle
xchg
decl
mov
mov
sub
out
mov
roll
add
dec
cmc
repnz
mov
cli
mov
scas
lret
mov
sub
movsl
push
lcall
js
shll
out
xchg
in
fsubrs
inc
inc
mov
mov
inc
dec
mov
cltd
and
imul
xchg
in
sbbl
fadds
and
and
sub
sbb
bnd
fbstp
testl
call
fildl
xchg
and
mov
mov
addl
stos
movsb
and
testl
push
movsl
sti
out
sbb
sbb
jecxz
cmp
repz
movl
jmp
iret
faddl
mov
out
cmc
sbb
xlat
repnz
sub
out
pushf
in
dec
cs
jmp
imul
outsl
es
xor
sbb
fs
in
push
mov
push
xor
loopne
add
in
xchg
jmp
lea
mov
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
aas
mov
cmc
adc
jle
push
jg
jle
pop
and
into
mov
aam
xchg
aas
or
jae
lret
cs
pushf
cmpsl
jns
dec
pop
xchg
fs
jae
pusha
out
jnp
dec
xor
dec
mov
inc
lods
or
popa
push
mov
push
iret
cmp
add
sub
mov
movsb
push
and
js
mov
mov
jns
lcall
leave
pop
jg
nop
imul
jno
lret
arpl
cmc
cmp
icebp
adc
jle
push
adc
icebp
pop
xor
ret
mov
adc
mov
sahf
sub
and
lds
dec
sahf
scas
inc
outsl
mov
fidivl
and
xchg
adc
cmp
shrl
pushl
sbbb
dec
inc
clc
popa
or
mov
in
mov
fdivrs
mov
adc
in
out
ret
inc
add
or
sbb
jae
clc
mov
cmp
mov
mov
sub
pop
add
xchg
addr16
ljmp
lahf
ljmp
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
adc
jle
jns
jle
cmpsb
shll
mov
ja
adc
data16
sti
or
sbb
inc
lcall
notl
jecxz
loope
lea
cld
sub
fsubrs
push
pop
or
xor
inc
push
ljmp
sub
mov
cltd
out
sub
fiaddl
xor
bnd
fcmove
jecxz
in
adc
test
or
and
jle
inc
dec
incb
out
pop
cltd
mov
and
xor
xchg
sti
jg
cmp
ret
dec
and
pop
or
and
push
js
cmp
lahf
xchg
push
shlb
pop
orb
fbstp
divb
push
dec
std
scas
mov
int3
test
stos
mov
xchg
or
mov
dec
fsts
in
mov
scas
cmpsb
movsb
rcrl
xlat
cmpl
fisubrs
mov
lcall
hlt
or
xchg
into
leave
adc
lds
movsb
cmc
sti
shlb
scas
push
rorb
add
sbb
stos
jae
push
xor
add
push
and
fidivl
mov
mov
into
int
jg
dec
xor
stc
sub
cmpsl
cmpsl
in
sbb
xor
push
jmp
add
cmpsb
adc
out
fstpl
scas
sbbb
call
test
mov
fcomps
dec
xor
adc
add
xchg
xchg
jl
mov
test
pop
push
pop
xchg
xchg
mov
std
rcrb
movsl
xor
ret
xchg
xchg
adc
xchg
mov
cmp
insl
gs
rcl
inc
mov
adc
test
pop
jge
ret
mov
std
test
imull
add
dec
ficompl
or
xor
icebp
jne
sbb
cmp
les
nop
inc
out
adc
cmpsl
jbe
dec
jmp
call
mov
dec
xor
je
lods
dec
clc
xchg
movsb
lock
daa
in
inc
nop
hlt
mov
lahf
pusha
je
pop
lret
fiaddl
mov
jae
repz
test
xor
nop
mov
or
shl
sti
cmp
add
cmp
fsubs
fimull
scas
sub
mov
mov
pusha
push
mov
pushl
xchg
pop
in
insl
xlat
dec
dec
loope
imul
add
xor
sub
cmp
dec
add
jg
jo
orb
jne
jb
test
mov
outsb
out
jle
xchg
out
add
xor
popf
pop
pop
std
xlat
hlt
daa
sahf
lods
sub
popa
cmp
loopne
cltd
cwtl
cmp
lcall
add
lods
pop
fimull
stos
test
scas
sbb
or
je
pop
call
sub
enter
imul
in
push
cltd
call
andb
sub
jle
bound
push
xchg
fwait
pop
imul
aaa
mov
mov
shrl
mov
fcompl
js
sar
dec
lret
imul
mov
ds
addl
data16
sbb
pop
jno
nop
xor
jg
mov
pop
mov
les
sbb
mov
pop
push
xchg
aam
cmpsb
sbb
stos
enter
mov
mov
out
loope
push
xchg
dec
push
cmc
push
inc
xchg
mov
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
adc
push
jns
jle
bound
push
lret
sub
lahf
aam
shlb
sub
cmp
and
mov
das
jbe
loope
les
jnp
mov
enter
inc
jmp
dec
add
pop
mov
leave
and
mov
enter
out
mov
add
xor
dec
mov
jg
push
insl
sub
jo
mov
loopne
add
sub
and
mov
cmpsb
xchg
jo
lds
mov
cmp
jnp
dec
mov
mov
cltd
test
movl
lea
call
shrb
fmull
adc
loope
clc
gs
repnz
xor
outsl
adc
popa
js
jg
adc
jb
in
pop
cli
fwait
das
or
insl
lret
pop
js,pt
mov
add
lahf
or
ja
mov
mov
mov
push
push
movsb
gs
mov
movsl
add
imul
push
outsl
add
adc
xchg
js
icebp
out
mov
add
dec
xchg
scas
test
es
cmpsb
inc
cmp
or
jbe
mov
int
xchg
insl
push
pop
inc
push
pop
xor
push
jno
out
or
data16
in
faddl
dec
lock
int3
repz
inc
clc
lea
or
loop
sub
bound
mov
mov
nop
jle
adc
pop
mov
neg
arpl
xchg
sub
aad
lcall
xchg
xchg
inc
pop
push
lock
lock
scas
add
lahf
adc
repz
jo
mov
cmp
mov
mov
and
jbe
mov
or
test
roll
sbb
lahf
xlat
and
sbb
pop
push
in
and
mov
js
push
ljmp
xchg
add
scas
les
jmp
sub
shlb
adc
sahf
arpl
fldenv
mov
mov
inc
sbb
in
cmp
leave
data16
es
imul
in
lcall
cmp
out
xlat
cmp
dec
shll
jno
jmp
cmp
and
or
cmp
add
stc
inc
or
lahf
dec
and
adc
push
cwtl
push
sbb
cmp
sub
mov
jecxz
popf
adc
daa
sbb
cmp
adc
mov
mov
or
xor
push
inc
data16
push
jecxz
adc
or
cld
loop
xchg
mov
or
mov
fimull
jnp
xchg
pushf
out
movb
test
cmpl
out
jmp
push
sub
shl
rcrb
stos
shrb
mov
das
push
addr16
loopne
pusha
sarb
std
fiadds
testb
ljmp
mov
adc
clc
ffreep
xor
mov
loope
out
push
in
add
push
aaa
adc
xchg
xlat
mov
cmp
xor
sahf
in
push
mov
pop
orl
jg
int
in
add
and
jae
test
and
fisttps
or
dec
aam
mov
inc
dec
jb
pushf
mov
repnz
int
test
add
scas
lods
ret
add
add
movb
xchg
mov
cmpsl
xor
test
daa
mov
mov
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
pop
xchg
mov
jle
jns
jle
mov
dec
insb
push
outsb
or
mov
ja
add
mov
lock
bound
pop
bound
sub
loopne
mov
pop
stos
jns
cli
cmc
popf
pop
bnd
push
sub
dec
in
aad
xlat
idiv
push
bound
clc
cltd
cmp
into
inc
xor
xor
dec
inc
dec
push
mov
lock
dec
dec
andb
movsb
cmp
mov
aas
and
and
lock
les
adc
out
mov
out
pop
int
dec
mov
movsl
cmp
push
int3
xor
test
sub
rol
cwtl
push
in
imul
mov
mov
jne
int3
fwait
loop
mov
out
mov
push
aad
or
pop
cltd
sbb
popf
sahf
hlt
dec
cmp
dec
fsub
cmp
scas
adcb
lahf
shll
iret
test
cmp
push
icebp
mov
cmp
add
std
mov
or
mov
adc
ljmp
xor
sbb
adc
aas
mov
pop
mov
call
mov
cmp
ja
inc
fistpll
popf
push
test
adc
imul
fdivrs
add
sbb
movl
pop
push
xchg
push
jae
push
imul
imul
mov
shr
pop
popf
repnz
fwait
push
fistps
sbb
dec
sbb
sub
movsl
sarl
xchg
test
mov
pop
lock
push
mov
adc
jae
test
lret
add
adc
pusha
arpl
adc
sahf
into
add
mov
push
add
mov
push
loop
leave
or
aad
xor
xor
std
xchg
xor
shll
movsb
sub
ror
out
xor
cld
outsb
fwait
orb
or
in
imul
fists
stos
cmp
aam
inc
push
subl
shr
stos
sub
xor
fsubrl
lds
or
or
in
inc
bound
in
ja
pushf
sbb
fsubrs
push
int
and
ret
icebp
out
sbb
scas
call
dec
adc
scas
push
push
test
aam
scas
adc
inc
cmp
movsl
into
cmp
pop
mov
mov
jbe
mov
mov
jnp
sarl
aad
cs
sbb
lock
adc
pop
adc
cmp
call
outsl
push
call
movsl
xor
jge
cmp
fldenv
or
mov
and
cmpl
adc
or
negb
in
or
ret
jmp
pop
dec
iret
jle
outsl
ficompl
mov
fnstenv
lret
inc
test
mov
mov
aaa
icebp
and
test
pop
or
sub
movsb
xchg
mov
and
and
gs
push
out
rorl
mov
sahf
fwait
les
aam
pop
int3
sahf
xchg
mov
gs
iret
inc
pop
pop
xchg
ficoms
ja
fs
std
insb
ljmp
ret
cmp
bound
jp
push
out
pop
in
pop
mov
cmp
xchg
repz
jl
dec
adc
adc
in
dec
pop
sbb
cmc
cwtl
cmp
dec
xchg
inc
lock
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
cli
test
mov
inc
or
lea
fs
aam
dec
inc
push
xchg
push
paddusb
icebp
mov
mov
adc
adc
incl
std
ja
push
lret
repz
pop
or
mov
push
mov
cmp
inc
clc
mov
and
aas
movsb
out
push
fiaddl
pop
fsts
loope
sarb
and
jae
jp
inc
enter
push
enter
push
jmp
cmpsb
outsl
sub
movsb
mov
insb
sbb
popa
jno
jge
mov
sar
test
mov
and
mov
xor
xchg
lock
sbb
add
arpl
mov
scas
inc
test
sub
js
lret
dec
mov
dec
sbb
jg
repnz
dec
xchg
nop
jmp
fsubrl
or
adc
inc
nop
rcrb
jne
pop
push
jnp
adc
outsl
xor
mov
add
mov
mov
cld
adc
imul
std
push
ss
mov
xor
dec
out
dec
cmpsl
pop
jae
movsb
repz
fcompl
fwait
adc
sbb
sti
add
xchg
sbb
cs
std
lcall
les
xchg
or
insl
mov
outsl
fwait
jecxz
pop
xchg
xor
xchg
loopne
inc
pop
pop
mov
cmp
mov
imul
mov
mov
out
rcrb
pop
bound
in
push
das
or
iret
sbb
test
xchg
xchg
and
jmp
in
ret
xchg
out
lock
out
mov
xchg
into
sahf
inc
lods
pop
push
lcall
sub
lret
inc
or
pop
push
jo
popa
not
cmc
mov
repz
mov
push
jbe
icebp
int
popf
lcall
popf
loope
jae
lock
sti
fbstp
scas
xchg
inc
pop
dec
jle
lret
xchg
adc
push
mov
xchg
shrl
cmp
cs
dec
mov
stc
lods
adc
push
lock
dec
adc
cmp
es
int
cmp
lret
and
ja
movsl
cmpsl
adc
pop
xchg
push
mov
int
fdivrl
push
mov
jb
xor
mov
fidivrl
adc
stc
mov
jl
fistpll
mov
loop
xor
outsb
push
mov
push
shl
jbe
jecxz
adc
pop
repnz
dec
mov
mov
xchg
int3
mov
xchg
add
movsb
cli
dec
out
jle
mov
ja
in
ja
jne
jne
or
mov
fwait
xchg
mov
cmpsb
mov
div
cmpsb
fimuls
adc
andb
sub
ror
mov
inc
and
adc
loope
lods
int
inc
mov
push
and
imul
shl
cltd
jo
aaa
xor
rcll
addr16
repz
loop
jns
daa
mov
jbe
mov
stos
and
jmp
cmpsl
faddl
mov
call
pop
inc
aam
je
insl
sub
movsb
xchg
fsub
lea
mov
sbb
fnstcw
js
aaa
mov
add
ficomps
sbb
push
adc
dec
xor
pop
dec
jl
test
add
arpl
into
push
dec
pop
sub
repz
arpl
xor
sbbl
lock
aas
fdivr
xor
mov
pop
and
roll
mov
mov
jmp
pop
ret
jge
insb
jae
test
lods
xchg
sbb
push
jns
jle
nop
adc
inc
aam
sub
std
pop
shlb
mov
insb
sub
in
iret
imul
scas
jbe
jno
inc
inc
mov
addl
xor
xchg
mov
inc
aad
dec
pop
jo
iret
xchg
or
mov
andb
cltd
fsts
mov
nop
mov
mov
pop
or
test
and
cwtl
inc
or
cmpsb
insb
mov
sub
shrl
aam
rorb
jns
jbe
adc
jge
xchg
popf
aam
or
adc
loope
cmp
sbb
iret
popf
mov
fistpll
hlt
jl
jp
jmp
or
inc
std
addr16
mov
mov
cli
jne
gs
sbb
push
dec
sbb
pop
push
jns
xor
mov
lock
xchg
lds
jmp
or
sub
add
dec
or
je
or
aam
lock
jg
leave
out
ret
cmp
xchg
in
mov
ljmp
pop
fcmovnb
push
mov
jo
push
mov
push
das
pusha
dec
push
sarb
mov
addr16
dec
sbb
leave
out
lods
xchg
mov
repnz
lea
cli
icebp
inc
mov
popa
dec
jg
jns
pushf
pop
or
mov
sub
push
xor
sarb
xchg
sbb
mov
inc
push
stc
stc
mov
dec
inc
out
les
inc
inc
pop
mov
stc
mov
or
js
aas
push
push
fsubl
sub
outsb
insl
mov
inc
aad
rcrl
sbb
cmpsb
or
inc
or
stc
pop
jmp
inc
shrl
xchg
jl
mov
lret
ljmp
in
insl
cmpsb
pop
mov
call
hlt
ljmp
pop
jns
push
inc
scas
jb
call
ret
std
mov
iret
jmp
push
mov
add
out
fmul
and
or
in
jae
sbb
dec
push
pop
and
in
jg
pop
subb
adc
call
inc
pop
pop
loop
movsb
loopne
out
mov
add
sbb
test
sbb
fiaddl
sti
jbe
sub
repnz
sub
mov
outsl
mov
dec
cmp
popf
or
dec
sub
movl
lea
lock
stos
sbb
and
popa
call
pop
sbb
aad
pop
jae
cmp
fistl
lret
addr16
lea
and
out
jp
xlat
add
adc
dec
inc
xchg
dec
stc
int3
testb
add
pop
mov
jns
scas
sub
into
mov
ret
xor
loopne
aad
push
dec
jns
mov
cmc
sahf
out
dec
and
repz
add
jo
push
pop
or
leave
cmp
loopne
and
mov
jp
sbb
shll
cmc
in
daa
add
push
lret
fidivrs
sarb
lea
aaa
push
mov
dec
xchg
bound
ds
cli
jle
je
add
lret
mov
lahf
xor
loopne
jns
scas
sub
stc
xlat
sub
push
add
insl
int3
fistpll
adc
xor
movsb
fsubrp
and
or
fs
ficoms
and
mov
cltd
test
je
movsl
imul
into
mov
mov
inc
xor
or
mov
cli
hlt
xor
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
notl
jle
push
jns
jle
repnz
test
stc
out
out
sub
stc
dec
sarl
lcall
mov
xchg
int
call
stc
in
xor
inc
out
popa
inc
mov
js,pt
mov
fs
inc
mov
dec
fwait
jmp
mov
or
sbb
xchg
cmp
outsl
xchg
das
popf
add
cli
or
cmpsb
adc
inc
jmp
out
popa
and
add
add
jmp
clc
sahf
movsl
shll
lds
add
pop
decl
pop
mov
pop
decb
xchg
mov
imul
stos
dec
push
cmpsb
mov
xor
pop
mov
dec
mov
les
mov
inc
add
sub
js
adc
sahf
push
push
fisubl
insb
das
fcom
or
into
call
loopne
sbb
mov
mov
xchg
movsl
int
adc
lea
insl
sbb
hlt
dec
int
call
xchg
dec
mov
push
lahf
or
int
sub
jl
ljmp
fidivrl
idivl
push
jge
push
repnz
pop
out
push
push
scas
flds
push
or
mov
gs
pop
adc
and
adc
or
mulb
jp
add
push
lds
xor
sub
scas
out
push
and
xchg
icebp
jno
cmpsb
gs
mov
movlps
adc
ss
push
adcl
push
lcall
push
aad
jp
hlt
sub
dec
sub
aad
push
adcb
push
sbb
es
mov
pop
loop
pushf
insb
pop
test
sti
aaa
fists
mov
cmp
xchg
sub
mov
stos
out
mov
xchg
les
fptan
shll
aaa
subb
imul
subl
leave
fmul
adc
fisubrl
xchg
xchg
testl
stc
leave
jp
jl
and
sub
rcll
mov
jg
mov
push
mov
repz
dec
aaa
pop
stc
ret
lods
xchg
push
aam
lret
data16
sbb
int3
adc
fs
cmp
jl
lahf
mov
aad
loopne
push
out
into
std
mov
orl
lds
push
test
mov
mov
stos
in
fdivl
and
pop
xor
jg
mull
pop
cmp
push
ljmp
mov
std
pushf
shlb
push
dec
daa
xchg
or
loop
dec
pushf
xor
pop
sub
and
sbb
dec
pusha
icebp
popa
loop
std
and
cmp
mov
inc
test
mov
add
pop
outsb
fwait
sbb
lret
cs
cld
mov
xlat
xlat
int
ror
mov
dec
fwait
out
and
sbb
adc
inc
test
dec
cmp
leave
out
inc
repz
pusha
push
push
xor
mov
test
xchg
dec
int3
sub
sbb
fwait
adc
dec
lods
xor
fldt
jle
rolb
inc
mov
es
cmc
pop
inc
lods
and
adc
in
mov
or
sbb
int
arpl
pcmpgtb
mov
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
or
fs
push
jns
jle
mov
and
outsl
mov
dec
sub
scas
in
js
aas
out
ja
xchg
fisttpll
outsl
shlb
xchg
jecxz
xlat
add
pushf
and
dec
mov
daa
in
mov
int
lock
aad
mov
sbb
push
dec
adc
adc
dec
jmp
mov
xchg
sbb
add
mov
test
mov
lds
js
sbb
xchg
lods
and
inc
pop
cmp
ss
inc
cmp
insb
mov
mov
jmp
dec
fsts
and
xor
adc
negb
aad
les
or
pop
inc
or
add
cmp
inc
test
mov
stos
lret
jle
pop
push
xchg
bound
out
outsl
test
or
mov
xchg
movd
inc
mov
arpl
pop
pop
inc
mov
or
daa
and
in
out
lods
sbb
xchg
mov
mov
iret
push
jbe
adc
out
nop
aaa
aad
push
mov
cmp
nop
pop
xchg
pop
pop
fcomps
add
call
pop
test
sbb
movsl
jb
bound
cld
push
lock
jns
xchg
adc
push
xor
inc
fcmove
push
mov
jp
xchg
mov
and
cmp
lcall
pop
addb
xorb
ret
inc
jno
lds
repnz
iret
jmp
ljmp
jl
sti
xor
js
jnp
out
jg
in
push
jo
pop
gs
int
ja
bound
mov
mov
adc
arpl
mov
xchg
and
mov
mov
popa
addr16
arpl
rol
test
rol
xchg
xchg
pop
pop
adc
dec
pop
cli
loop
ss
lock
pop
insb
lcall
in
mov
es
and
aam
adc
ja
xor
in
adc
popf
xchg
pop
push
shll
lret
xchg
jb
and
aam
ljmp
jp
jg
push
sbb
mov
mov
jno
inc
loope
jo
sub
inc
cmp
sbb
fidivrl
inc
push
pop
or
or
fwait
dec
mov
mov
repz
fsubr
mov
and
cmp
jg
in
clc
jg
pop
and
xchg
cmp
outsl
icebp
mov
test
sub
cmp
imul
and
outsl
cli
or
call
jb
adc
and
xlat
lds
push
iret
or
out
fstps
or
inc
in
dec
jnp,pt
mov
out
jo
inc
xor
dec
mov
cmpsb
inc
dec
push
or
pop
xchg
push
pop
xchg
cmpsl
adc
leave
mov
mov
jmp
dec
insl
push
fildl
cltd
mov
ret
add
add
call
int3
andb
cld
push
mov
jnp
out
jl
adc
stos
out
mov
sbb
pop
adc
and
pusha
dec
dec
xchg
cmp
sub
inc
xor
adc
lds
dec
fidivrl
imul
mov
lods
shl
fcomp
roll
adc
aam
inc
outsb
movsb
out
mov
push
fldcw
fimull
es
lret
fwait
pop
xchg
push
iret
lods
mov
les
hlt
mov
fcmovne
jmp
adc
sbb
xor
js
jle
xlat
and
insb
sbb
inc
mov
pop
inc
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
jo
iret
sbb
jle
pop
jg
jle
sbb
inc
cli
xor
out
movsl
jnp
mov
xchg
cmp
xor
movsb
js
jge
mov
mov
sbb
push
jl
gs
movsl
das
jns
aaa
call
xchg
sbb
xchg
cld
int
into
adc
push
hlt
outsb
mov
mov
cmc
movsl
push
push
cmovge
adc
xor
xlat
int3
mov
add
push
add
cwtl
or
sub
dec
insl
and
pop
les
pusha
push
cwtl
ficompl
dec
shl
mov
dec
push
push
xorl
lods
and
bound
fnstsw
clc
add
xorl
or
dec
ret
arpl
adc
sbb
or
sbb
lret
fidivrl
ss
int3
mov
inc
ss
stos
xchg
xchg
and
xlat
rcrl
sbbl
jo
rorb
xchg
adc
enter
or
push
mov
enter
fimull
mov
push
aas
xor
imul
push
and
sbb
stos
insl
insb
mov
dec
mov
inc
sub
mov
out
andb
shrb
cs
sbb
pushf
inc
ret
and
pop
adc
push
add
push
jae
sbb
mov
push
adc
jnp
cwtl
js
sub
push
cmp
in
int3
or
and
push
loope
sbb
std
pop
add
mov
gs
inc
xlat
cmc
iret
fs
cmp
iret
dec
inc
out
push
or
or
mov
arpl
xchg
cli
sub
add
fmulp
add
lds
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
shr
insb
jnp
jle
pop
jg
jle
push
mov
out
fistpl
and
adc
cmp
fsubs
jge
stos
jmp
ljmp
cmp
in
mov
orl
out
or
mov
out
mov
pop
ss
dec
sbb
mov
mov
popa
testl
sub
mov
and
or
adc
movsb
cmp
out
fyl2xp1
inc
push
jecxz
in
xorl
and
aad
jnp
out
push
inc
cltd
cmp
pop
fmull
loop
dec
dec
xor
testl
cmpsb
adc
cs
std
nop
popl
push
mov
dec
cmp
dec
push
sbb
and
je
les
mov
jle
jbe
ret
cs
xor
and
mov
sbb
pop
ret
outsb
xor
cli
jb
and
lcall
subl
test
mov
xchg
pushf
ret
or
jns
stos
add
cmp
pop
in
jmp
test
jnp
add
jb
xor
lods
subb
cmpsb
mov
adc
pop
mov
das
push
pop
inc
cmp
fadd
mov
loopne
lret
test
sbb
mov
test
xchg
insb
push
mov
xchg
test
mov
fwait
cmp
ss
jae
adcb
mov
addr16
out
stc
jl
cmc
les
mov
icebp
jne
add
icebp
addl
push
cmc
pop
adcb
lahf
dec
ja
pop
rorl
and
pop
xlat
jge
aaa
fidivs
mov
aad
jne
outsl
cs
cmp
cli
jp
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
aas
pop
sub
les
jle
in
pop
cli
lods
adc
xchg
fidivrl
popa
dec
pop
mov
out
test
nop
bound
cmp
add
je
ret
std
or
bound
dec
lret
xchg
ret
cmpsl
adc
test
shrl
mov
andb
aam
loopne
adc
xchg
das
pop
mov
xchg
scas
in
dec
int3
adc
pop
fimuls
pop
mov
loope
xchg
leave
js
xchg
fsubr
adcl
push
mov
xchg
inc
lret
cmp
insl
jb
or
imul
ret
mov
ret
ficompl
mov
daa
sub
sub
into
cmp
cmp
and
shrb
stos
cmp
mov
daa
testl
mov
jae
cli
cmp
xchg
lret
push
popa
mov
jno
inc
xchg
mov
fcoml
sbb
xchg
pop
mov
filds
jl
push
push
cwtl
leave
inc
mov
insl
adc
cli
xchg
daa
push
lret
das
popl
mov
test
in
rorl
jge
ja
mov
push
fnstsw
add
sbb
out
call
push
or
adc
mov
shr
mov
mov
and
popa
inc
and
scas
add
mov
xorl
mov
es
mov
out
sub
cld
xor
xchg
jp
mov
jno
gs
test
shl
mov
loope
cmpsl
dec
and
call
aas
xor
push
into
in
adc
push
inc
xchg
push
inc
inc
mov
fidivs
dec
insl
or
jge
loope
js
nop
mov
subl
mov
mov
mov
xchg
xlat
xorl
lods
imul
ret
adc
call
es
sahf
cmc
add
imul
shl
les
data16
repz
mov
mov
mov
jecxz
aas
and
push
int3
sub
fildll
sub
and
fisubrl
adc
and
jl
push
jecxz
lods
orl
xchg
outsb
inc
sahf
ret
push
ret
jle
hlt
lret
sub
arpl
stc
popf
fcmovnbe
popf
xor
lret
popf
cmpl
fistpl
outsb
sbb
in
mov
das
popa
mov
fwait
das
xchg
mov
rol
adc
xor
dec
in
fsts
popa
bswap
jbe
mov
sti
mov
inc
add
into
and
je
bound
jmp
push
dec
jg
out
push
jle
mov
jnp
jnp
lahf
stc
pop
and
xchg
mov
jns
mov
movsb
test
in
mov
cmp
mov
inc
cmp
daa
out
ljmp
lock
pop
pop
icebp
scas
in
mov
imul
loope
mov
gs
and
dec
adc
leave
aad
ja
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
sub
nop
and
jle
les
jle
clc
in
inc
inc
push
int3
popf
fbld
in
shrl
fs
js
les
addr16
dec
xchg
mov
mov
or
push
and
lcall
jp
rcl
mul
dec
jns
sub
xor
lock
jp
push
in
xchg
push
enter
stos
aaa
push
scas
loopne
mov
jae
notl
addr16
and
push
add
push
pop
daa
in
fisubs
push
imul
xchg
cmp
insb
xlat
or
pop
sbb
mov
cltd
iret
push
or
pushf
inc
lahf
cmpsl
lock
jp
shl
int3
mov
stc
aaa
pop
mov
adc
test
inc
or
loopne
in
or
mov
push
add
dec
xor
roll
imul
fisttpll
fdivs
test
aam
xorb
sub
decl
sub
jg
mov
mov
ret
inc
mov
lods
out
mov
xor
ljmp
push
leave
jcxz
push
sbb
pop
push
out
push
loop
scas
bound
xor
xor
lret
push
cmp
fldl
test
cmpsb
xor
sbbb
pop
lods
pop
inc
mov
mov
inc
or
cmpl
jle
in
ljmp
adc
push
negb
loope
pop
cmp
arpl
xor
movsl
dec
repz
pminub
in
leave
dec
leave
xchg
int
scas
cmp
mov
sbb
lods
push
scas
mov
pusha
lahf
sub
sbb
scas
inc
cmp
mov
enter
push
pop
sbb
loop
les
jmp
dec
rol
mov
mov
add
int3
ficompl
aad
lds
inc
repz
xlat
fwait
int
adc
ja
in
or
lret
mov
scas
mov
and
stos
and
icebp
addr16
cmc
jns
add
mov
add
dec
pop
xchg
out
mov
cmp
adcl
ret
mov
add
cmpsl
std
int3
or
stos
in
jecxz
jle
jp
cli
fisubrl
pushl
lret
int
sbb
sti
lahf
inc
iret
bnd
mov
mov
xor
pop
mov
xchg
pusha
push
inc
out
jo
leave
pop
xor
test
lods
mov
lret
mov
mov
inc
pop
fcom
scas
stos
ljmp
push
test
fnstenv
sbb
cmp
xchg
inc
cld
pop
cmp
jns
les
jle
mov
stos
int
stos
xor
cld
in
adc
mov
movsl
and
cmp
dec
and
enter
add
jge
stc
test
lret
cmpsl
xchg
pop
jb
and
cmc
das
ljmp
out
cli
xchg
push
mov
cld
mov
arpl
push
pop
mov
adc
mov
mov
icebp
adc
inc
push
sub
and
push
loope
mov
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
andl
jle
sub
out
mov
sub
scas
cmp
xchg
dec
adc
inc
loop
outsb
loop
adc
vpsllq
test
pop
inc
adc
loope
enter
push
add
and
les
popf
lock
xchg
sub
hlt
flds
xor
sbb
mov
hlt
or
jbe
xor
enter
mov
and
stos
sbb
pop
adc
push
jns
outsb
or
sti
clc
cli
pop
in
adc
popf
add
mov
mov
outsb
mov
push
rcrl
outsw
pusha
push
or
xchg
lcall
jmp
rorb
std
adc
sbb
rcr
cmp
or
adc
int3
inc
push
xchg
pop
and
fdivrs
sub
stc
fstpt
in
xchg
sahf
or
in
outsl
sbb
loop
push
data16
mov
stc
sub
or
sub
rolb
faddl
adc
cmp
mov
rolb
orl
push
das
sub
movsl
sub
sahf
fldl
mov
dec
cmp
in
mov
xor
icebp
out
rcrb
sub
rcr
out
loopne
rclb
jl
mov
fisttps
rorb
and
inc
lods
or
fisttpll
adc
pop
jmp
push
cmpl
mov
cmpsb
cli
imul
addr16
shrb
pop
mov
and
pop
rclb
fcmovnbe
inc
sbb
push
sti
shll
gs
fcompl
imul
add
push
adc
or
mov
iret
and
repz
jb
inc
mov
xorb
icebp
gs
cmp
repnz
popl
popa
je
in
or
xlat
int
pop
mov
sub
add
cmp
jno
inc
add
pop
test
mov
in
scas
pop
icebp
pop
test
fwait
mov
mov
jo
data16
pop
and
mov
imulb
imul
adc
add
cmp
in
sbb
int
dec
ficoml
dec
test
mov
sub
push
imul
pop
ljmp
or
insl
dec
or
cld
xor
mov
insl
jae
imul
pushf
cmp
sbb
stos
inc
inc
pop
jno
je
rolb
add
inc
hlt
mov
mov
or
shrb
push
fstl
bound
add
dec
ret
xchg
sub
fstps
mov
sbb
and
sbbb
stos
cmp
push
jmp
mov
movsl
jl
daa
cltd
fdecstp
and
xchg
mov
in
rorl
dec
or
push
push
inc
pusha
jne
or
xor
data16
xlat
imul
mov
mov
xchg
mov
arpl
cmp
enter
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
fiaddl
mov
jle
les
jle
mov
push
ficomps
mov
jge
mov
adc
rol
ja
push
aam
or
mov
je
sbb
or
push
dec
aam
jae
xor
adc
shll
push
negl
sub
xchg
iret
cmp
ljmp
and
adc
inc
sahf
dec
mov
sub
inc
loopne
fs
inc
jne
scas
pushf
xchg
roll
repz
gs
and
scas
lods
cld
mov
ljmp
xorb
cmp
sbb
adc
inc
mov
pop
imul
push
add
mov
popf
mov
cmp
fdivl
add
xchg
enter
int
fmuls
adc
jnp
xchg
cmc
mov
stos
dec
ss
mov
add
cli
sbb
in
fisubrs
sbb
aad
cmc
or
mov
scas
cmc
in
fadd
ds
mov
clc
mov
and
xchg
jae
movsl
aaa
fnsave
sti
loope
mov
dec
cmpsb
mov
cmp
scas
data16
aam
outsb
cmc
out
dec
stos
addr16
test
mov
mov
xor
in
xchg
jne
test
xor
xchg
inc
out
push
push
ds
ja
shrl
mov
add
cmp
je
movsb
hlt
imul
jl
leave
jo
pusha
jmp
arpl
mov
notl
popf
jns
cmp
mov
movsl
mov
inc
sbb
clc
or
mov
lods
adc
stos
add
sub
fiadds
jae
xor
sbbl
mov
cmpsb
sub
pop
push
gs
xorl
aam
adc
push
sbb
popa
inc
rcl
fwait
cmp
pop
sahf
ljmp
imul
jo
mov
mov
add
mov
lds
test
inc
cmovs
or
iret
cmp
sub
inc
insb
in
stos
push
pop
mov
lahf
mov
incb
mov
fdivl
out
inc
xor
daa
outsb
orb
cmp
sub
xchg
adc
iret
pop
les
hlt
cmpb
mov
rorb
pop
push
xchg
inc
mov
push
or
lcall
stc
out
cmp
mov
xor
fildl
pop
push
xor
aas
sarl
das
jle
inc
cmp
ret
out
cmp
int
mov
xchg
adc
xchg
inc
sbb
xchg
fmul
inc
ficompl
popa
pushf
out
sbb
cmc
adc
incb
rorb
enter
xor
or
stos
outsl
push
jnp
xchg
iret
ja
mov
xchg
xchg
dec
mov
pop
ja
shlb
push
inc
add
cmp
jp
inc
push
mov
addr16
test
and
loop
mov
pop
sbbb
mov
psllw
stos
mov
mov
test
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
jl
das
pop
jae
jle
dec
jns
jle
add
int3
jl
mov
sbb
dec
xor
aad
insl
or
pop
out
ret
jmp
xchg
enter
les
mov
jecxz
adc
sub
inc
jp
sbb
mov
mov
icebp
or
xor
mov
mov
or
mov
mov
cmp
out
pop
cmp
lds
add
mov
jmp
mov
and
out
push
cmpsb
enter
pop
mov
fs
mov
pop
je
or
out
push
mov
pop
adc
jp
daa
jmp
push
addr16
mov
mov
cltd
sarb
push
pop
loopne
in
leave
sti
inc
das
je
pop
push
pop
sbb
mov
jecxz
adc
fimull
out
lods
shll
das
pop
imul
ficoml
es
pop
add
leave
push
data16
push
inc
rcrl
test
xor
and
inc
in
ljmp
xchg
lds
js
mov
inc
subb
popa
push
xchg
xchg
sarb
inc
sahf
xchg
and
adc
dec
adcl
push
inc
into
cmp
in
or
add
xchg
sub
pop
mov
jo
out
enter
mov
dec
xchg
out
rcll
repnz
rcrl
jl
cmc
jo
mov
incl
add
mov
sbb
aaa
xchg
adc
pop
mov
outsb
mov
jl
lock
call
test
fsubs
orl
sbb
stc
orl
outsl
inc
addr16
lcall
push
inc
xchg
pop
and
inc
fdiv
jnp
pop
testb
xchg
sub
push
add
sbb
pop
or
lcall
sbb
inc
inc
scas
fdivl
pop
nop
cmpsb
sbb
cmc
pop
pop
outsb
leave
mov
push
arpl
test
inc
mov
mov
inc
loope
push
pushf
movb
adc
jns
in
fs
cmpsb
push
sbb
xchg
imul
jp
popf
clc
mov
enter
mov
dec
stos
dec
mov
popa
filds
push
sub
jo
xchg
mov
xor
hlt
mov
mov
xchg
lret
cs
sbb
mov
mov
push
dec
pop
ret
adc
xor
pop
sti
lcall
sub
mov
addr16
mov
outsb
mov
cmp
clc
or
or
push
xchg
inc
xlat
lods
lods
jbe
insb
insb
or
ficoml
testl
out
push
adc
inc
lret
mov
mov
cli
jecxz
xor
sub
push
mov
mov
and
loop
imul
test
in
sbb
pushaw
and
rolb
jne
mov
inc
pop
jno
in
push
inc
push
and
loop
push
rclb
mov
and
sahf
rorb
into
push
or
dec
inc
stc
jmp
jno
ficomps
cmp
cli
hlt
in
push
jle
xchg
sar
adc
shl
mov
pop
mov
rol
push
push
into
sbb
std
add
xchg
push
push
mov
mov
dec
pop
orl
sub
in
scas
rcrb
push
aaa
dec
repz
push
add
leave
loop
mov
jae
xorb
sbb
xchg
jo
xor
movzwl
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
push
cmp
dec
jns
jle
sbb
out
das
push
add
add
push
jnp
rcl
insl
add
push
jl
es
mov
xchg
ret
mov
cmp
ret
or
xchg
mov
adc
add
fs
or
add
push
mov
add
std
mov
mov
and
pop
mov
xchg
sahf
cmc
adc
divb
mov
mov
mov
inc
ja
in
loopne
push
sbb
mov
xlat
adc
call
and
jb
call
mov
rcrl
adc
xor
loop
out
mov
push
sahf
cmp
sarb
pop
sub
xchg
inc
dec
leave
and
cld
adc
sar
js
lret
mov
fidivrl
fsubrp
and
stos
sub
jo
clc
cmovo
lods
pop
adc
adc
mov
int
repz
idivl
cmpsb
mov
xchg
out
push
into
pop
cmp
add
push
mov
pop
cmc
lock
sbb
push
mov
aaa
push
int
shrb
push
roll
cmp
xor
mov
cmp
movsb
xor
cmp
enter
stos
imul
inc
aaa
je
mov
add
addr16
pop
and
out
stc
mov
or
cmp
inc
js
pop
add
dec
psubq
sub
fsub
in
adc
or
xor
dec
das
dec
mov
jns
popa
xchg
jle
test
nop
push
pop
sbb
mov
push
xchg
loop
mov
jbe
dec
xor
xor
popf
mov
arpl
mov
stos
xor
imul
outsb
inc
mov
cmpsb
shr
mov
fwait
push
xor
es
xchg
add
sarl
xchg
aam
inc
xchg
inc
in
xor
pop
sbb
fs
inc
scas
mov
fdiv
insb
ficoml
rcrl
test
sub
lret
mov
fsub
int3
insb
into
scas
fdivs
leave
pop
cmp
movsb
iret
dec
rol
js
das
and
xchg
fsubs
jae
or
fwait
in
js
ja
shlb
std
outsl
push
adc
mov
fisubs
push
xor
jmp
inc
mov
insl
sbb
fcmovu
fbstp
sbb
pop
pop
adc
dec
or
out
frstors
mov
iret
lds
hlt
jmp
pusha
dec
cld
add
mov
push
sub
and
lds
arpl
lock
fwait
lret
gs
inc
cmp
pusha
cmp
and
mov
push
mov
cmpsb
mov
pop
or
lock
mov
xchg
jne
dec
es
addr16
inc
push
pusha
fwait
mov
outsl
or
subb
push
jge
inc
stos
mov
scas
xchg
loop
mov
es
cli
jne
lret
lock
mov
inc
xor
jl
cmp
jns
sahf
dec
hlt
push
mov
push
shlb
stc
and
fcmovnb
loope
lahf
inc
and
cltd
or
pop
or
xchg
xchg
das
or
inc
cmc
lea
test
mov
pop
xor
shll
and
adc
cmp
je
or
lahf
loope
mov
cmpsb
mov
dec
xlat
fwait
and
cmp
pop
sbb
ret
cmp
movsb
lds
push
mov
ret
xor
cmc
fsubrs
mov
insb
push
and
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
xchg
popf
jle
dec
jns
jle
in
or
add
mov
mov
xchg
pop
xor
add
cmp
xchg
stos
adc
stos
cld
and
xchg
lock
push
add
je
dec
mov
push
cltd
outsb
je
test
adc
jl
xor
or
ja
mov
pop
jo
inc
push
outsb
jle
jns
jmp
cmc
insb
adc
les
inc
push
cltd
outsb
adc
push
add
daa
loop
jmp
add
xorb
mov
pop
andb
lods
mov
mov
shll
push
sub
cmpsb
stos
mov
xchg
and
add
add
mov
paddsw
sub
xchg
or
xlat
outsb
lods
fadds
sub
lret
xchg
adc
gs
pop
add
cmp
in
dec
push
jbe
cmp
or
inc
stos
jge
jno
push
loop
mov
mov
hlt
push
jne
les
xchg
mov
mov
mov
cmc
rcl
push
repnz
or
popa
pop
clc
mov
repz
popf
jno
adc
cmp
jae
stc
loopne
or
pop
rolb
or
fdivs
mov
andl
add
in
jl
sub
das
out
icebp
push
sub
std
in
mov
dec
or
adc
cmp
or
das
int3
repz
out
and
loopne
cmp
fisttpll
orb
lock
rol
addl
sub
xor
jno
or
shl
xchg
mov
push
mov
xchg
test
jle
inc
notb
mov
add
mov
and
pop
mov
outsl
push
leave
es
decb
addr16
mov
movsl
mov
mov
mov
push
hlt
ss
test
jbe
lock
mov
pop
pop
xor
cmp
xchg
out
adc
cmp
adc
in
dec
aad
mov
outsb
icebp
daa
xor
pushf
cmp
jno
xchg
pushl
mov
inc
add
jnp
sub
ja
cmc
add
addr16
and
xor
add
xor
cwtl
mov
dec
data16
insl
or
loop
loope
jns
pushf
test
mov
cmp
inc
mov
pop
test
in
sbb
lea
inc
push
call
sahf
push
push
jne
cli
add
sub
mov
ficompl
adc
lret
fisubrs
inc
push
lcall
fadds
nop
or
test
shl
mov
xor
mov
fnstcw
rorl
das
addr16
adc
hlt
push
std
push
or
aaa
outsl
dec
lcall
jno
adc
arpl
dec
fdivrl
pop
push
mov
pop
jle
lret
jg
and
xor
ss
lock
sti
pop
rcll
pop
lea
jg
mov
bound
popf
mov
and
mov
loop
pop
push
jo
jns
sbb
xor
fcomps
xchg
repz
test
inc
fdivl
imul
imul
jae
inc
add
in
bound
repnz
sub
clc
cmpsb
jmp
pop
cwtl
xchg
inc
jnp
outsb
and
push
or
outsb
ret
gs
enter
out
fstpl
movsb
cmp
repnz
lret
jmp
xchg
pop
mov
mov
test
insl
add
add
cmp
inc
inc
inc
add
jle
add
jmp
shlb
cld
ja
or
out
ret
jle
dec
jns
jle
xor
xchg
mov
pop
cli
je
aad
cmp
mov
repnz
or
or
aaa
cmp
scas
and
dec
into
mov
fstps
dec
rorl
icebp
lods
mov
push
pop
dec
xchg
push
popa
sub
nop
sbb
and
xchg
rcrb
add
add
dec
pop
cld
inc
pop
lahf
mov
in
test
xchg
les
fwait
sbb
push
cmp
sbb
push
inc
xor
jbe
mov
mov
dec
sbb
je
or
pop
and
gs
test
cmp
xchg
push
jbe
hlt
dec
jns
lret
cmpsb
pop
fistpll
imul
mov
fbstp
pop
leave
sbb
sti
xor
les
stc
in
cli
xchg
movsb
pop
mov
jae
and
lock
push
movsl
daa
adcl
inc
mov
sub
inc
or
jo
js
in
test
mov
adc
pop
cld
into
or
sub
aaa
iret
pop
push
icebp
outsb
inc
stos
add
mov
or
lahf
or
sbb
xlat
add
push
mov
pop
inc
fcmovnbe
ffree
sti
fstl
cli
add
fsubs
js
cld
outsl
xchg
ret
rclb
sub
xorl
or
and
xor
ja
shl
lret
push
xchg
das
xlat
out
addr16
xchg
mov
cmp
mov
cmp
mov
pop
xchg
mov
aas
pop
xor
xlat
pusha
rcll
out
sub
jo
mov
aaa
repz
rsqrtps
jg
or
pop
lods
stos
adc
mov
out
push
pop
pop
lock
jo
jb
sbb
fnstcw
sbb
lret
addr16
divb
out
sbbb
cltd
mov
repnz
push
icebp
jp
aam
mov
mov
push
rcrb
scas
xchg
pop
dec
xchg
xor
outsb
sbbl
pop
int3
aam
inc
mov
movsl
mov
lret
in
cmp
arpl
xor
mov
lcall
insb
adc
stc
es
mov
xchg
loope
scas
sbb
ljmp
add
adc
jae
lods
xchg
and
or
daa
jl
mov
jg
into
mov
mov
xchg
into
dec
push
adcb
add
out
adc
stc
jo
lcall
adc
jnp
loopne
dec
mov
js
sub
xor
cmpsl
pop
js
pop
mov
repz
sub
lock
jmp
push
leave
int3
imul
adc
cmpsl
jae
mulb
das
shrl
bound
outsb
push
mov
call
add
sub
or
cwtl
pop
cmp
outsl
mov
aad
subl
aas
xchg
out
rclb
fcmovu
mov
mov
fildl
mov
adc
test
push
pop
aad
stos
outsl
gs
cltd
sarl
repnz
xchg
jbe
mov
pop
cmp
or
dec
cmp
stos
adc
dec
push
insl
imul
cmpb
cmp
xorl
and
xchg
and
sub
ds
out
cli
sub
ret
dec
ja
mov
rcr
inc
mov
imul
mov
jle
mov
imul
pop
sbb
mov
inc
aam
dec
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
cmp
cmpb
jle
dec
jns
jle
insb
or
mov
das
xor
or
call
mov
data16
pop
push
lods
hlt
test
fistl
dec
pop
sbb
loope
rcr
insb
mov
or
and
flds
shlb
mov
mov
sbb
sub
nop
fsub
rorl
xor
lret
mov
mov
adc
arpl
cld
icebp
inc
out
sbb
cmp
test
xor
test
sub
mov
clc
cwtl
push
clc
pop
jo
dec
test
cmpsb
int3
scas
xor
mov
or
insl
rcl
mov
pop
xor
lret
les
std
push
filds
mov
lods
pop
bound
sbb
mov
test
jmp
mov
xchg
enter
int3
scas
addr16
ja
dec
stos
push
and
or
jnp
notb
jge
mov
sbb
leave
fsubrs
sub
inc
gs
pop
iret
ret
lcall
clc
add
out
or
pop
dec
xchg
in
nop
shlb
and
xor
ja
cltd
je
jp
loope
push
xor
xchg
jns
add
lea
into
sbb
jle
lret
adc
pop
pop
pop
in
and
mov
jne
cwtl
test
adcl
and
scas
mov
lret
adc
and
pop
rolb
sti
movb
arpl
fisttpll
push
mov
and
bound
mov
shlb
ja
jne
sbb
shll
push
mov
jg
mov
or
mov
or
jb
dec
ljmp
xchg
jns
outsb
inc
xor
mov
pop
xchg
pop
mov
xlat
or
cli
sub
fwait
dec
xchg
jne
jno
lcall
add
sbb
and
pushf
cs
pop
lret
push
mov
call
adc
js
nop
imul
or
fisttpll
pop
inc
sub
mov
les
nop
clc
sbb
scas
sbb
and
gs
out
or
cwtl
push
adc
loope
jl
pop
out
dec
push
aas
jl
and
jae
dec
imul
movsl
xor
out
andl
mov
pop
or
aad
mov
sbb
repz
mov
repz
cwtl
aaa
push
mov
mov
add
in
and
aad
xchg
dec
insb
lea
push
stos
dec
push
hlt
mov
push
xor
das
sub
daa
out
gs
fs
jecxz
dec
je
pushf
ret
adc
test
mov
mov
mov
mov
sub
sbb
adc
or
xchg
push
mov
lahf
mov
test
mov
aaa
jbe
loop
mov
jbe
add
push
inc
int3
add
add
adc
push
jns
repz
cld
fmull
push
add
popf
pop
dec
and
jl
mov
jl
call
xchg
pop
dec
data16
push
rcrb
dec
xor
mov
mov
mov
js
mov
fmull
xchg
lds
fistl
xchg
movsb
pop
test
push
push
sahf
lds
scas
je
mov
gs
enter
fldt
icebp
repnz
xchg
mov
ret
ret
rcrb
inc
jecxz
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
cmp
xchg
imul
lret
jg
lcall
jne
push
outsl
and
push
aam
out
mov
dec
mov
add
lcall
add
push
or
in
mov
test
fisttps
dec
push
mov
or
pusha
push
loope
idiv
mov
and
out
ret
add
mov
and
icebp
inc
fcmovnbe
jns
jp
mov
je
iret
test
jg
push
sub
lcall
or
pop
mov
jmp
mov
xchg
add
out
cmpl
or
lods
shlb
sarl
push
fistpll
add
loop
out
sub
divb
insl
dec
ja
in
inc
sub
inc
push
idiv
in
dec
scas
pop
fistpll
jle
dec
cli
cmp
mov
xor
outsl
mov
cmp
pusha
ja
pop
cld
mov
add
iret
lret
ret
sahf
int3
xor
out
xor
inc
stc
jge
aad
cmp
push
cmpsl
dec
dec
dec
or
mov
xchg
dec
arpl
push
ja
add
cmp
nop
adc
and
stos
push
sub
mov
adc
ficomps
iret
push
add
je
xchg
jo
xchg
out
shr
das
cmpsl
cmpl
pop
popa
adcl
mov
xor
stos
int3
push
xor
and
push
rorb
jle
popf
dec
or
jecxz
xchg
pop
pusha
xor
les
rorl
jg
push
fsubs
push
es
adc
out
mov
or
popf
fmul
jp
jecxz
cmp
mov
mov
out
mov
ret
pop
push
lret
push
pop
mov
mov
dec
or
insb
sbb
mov
mov
scas
insb
addr16
fbstp
test
inc
adc
ljmp
add
add
jmp
mov
cmc
subl
pop
ljmp
push
sub
lahf
cmp
mov
mov
push
int3
mov
mov
and
into
xor
adc
dec
xchg
mov
mov
dec
xor
fnsave
mov
add
cltd
mov
mov
push
gs
enter
testl
mov
shll
inc
push
repnz
xor
inc
or
test
adc
push
sbb
enter
cmp
xor
adc
call
imul
xor
insl
dec
cli
aaa
stc
mov
enter
mov
push
mov
std
dec
cld
lds
sbb
pop
xor
mov
cmp
jle
pop
xchg
pop
and
push
imul
sub
xchg
daa
dec
cwtl
repz
out
add
adcl
xchg
dec
xchg
xchg
imul
mov
adc
out
xor
add
mov
or
pop
test
and
mov
adc
xchg
xor
pop
sti
inc
mov
call
cwtl
je
lods
add
test
jbe
cmc
adc
mov
mov
jmp
fldl
xchg
orl
push
dec
addr16
ljmp
xchg
lcall
push
adc
push
mov
push
test
mov
cmc
jns
and
adc
mov
dec
cmp
mov
jecxz
and
xor
idiv
jmp
inc
cld
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
adc
sar
pop
jle
dec
jns
jle
push
xlat
push
rorb
jnp
and
fdiv
jae
mov
nop
jns
nop
ret
pop
jnp
mov
sub
mov
and
ret
aam
inc
mov
and
mov
mov
les
fs
ja
mov
fildl
fxch
fwait
jne
xor
sub
add
xchg
jno
xlat
das
xchg
pop
mov
mov
sbb
pop
gs
mov
mov
xchg
mov
pusha
sub
sub
dec
loopne
add
cmpsb
cmp
dec
cmp
mov
roll
pop
sbb
push
lods
sbb
lcall
mov
push
fsts
insl
aaa
jns
pop
test
and
sbb
loop
outsl
test
ljmp
xor
in
fbld
mov
imul
fisubs
in
insl
push
add
mov
sti
fcomip
test
mov
and
arpl
sahf
daa
push
or
mov
orb
add
adc
push
dec
push
or
aaa
in
int
push
or
out
testb
sub
pop
insw
cs
push
pushf
les
ss
mov
aad
add
pop
xchg
data16
pmaddwd
lret
fiadds
sarb
shll
mov
push
repz
and
push
push
mov
mov
push
sub
sbb
repz
notl
mov
xor
rorb
iret
jmp
xor
leave
ftst
mov
fs
fldenv
push
cmp
ja
outsl
or
xor
cmp
push
sub
mov
push
fs
in
xchg
adc
incb
insb
adc
jecxz
repnz
fstl
jns
in
and
imul
fcoms
movsl
dec
gs
or
mov
jno
xchg
fmuls
inc
mov
mov
fnstsw
mov
shlb
and
and
je
dec
dec
bound
call
add
sar
pusha
mov
or
inc
xor
into
mov
jns
dec
ja
xchg
int3
mov
inc
jbe
inc
ret
sbb
jnp
fisubs
pop
xchg
outsl
js
fxrstor
sub
nop
sbb
xchg
push
jae
lret
adc
shr
sub
aas
movsl
mov
lds
cmp
push
test
fs
into
outsl
add
hlt
popf
push
mov
pop
jecxz
jne
sar
sub
dec
call
jns
sbb
xor
pop
cltd
arpl
push
mov
push
mov
gs
imul
mov
dec
push
sub
out
jbe
xchg
sub
inc
xchg
daa
loop
or
sti
mov
pop
sbb
push
mov
fildl
push
push
add
icebp
cmp
sbb
pushf
adc
push
pop
mov
mov
sbb
dec
mov
inc
xchg
mov
loopne
cmp
orb
addb
pop
lahf
sahf
dec
hlt
out
or
bound
fucomi
addr16
dec
out
dec
jae
pop
cltd
add
ljmp
std
push
leave
insb
adc
dec
sarl
cs
arpl
sbb
adc
out
nop
je
rolb
in
sub
std
adc
pop
test
aaa
and
or
sbb
push
lret
push
rorb
add
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
gs
sarb
dec
jns
jle
xchg
add
add
pop
pop
or
aaa
sbb
cmc
in
jge
sti
add
pop
xor
out
jb
mov
mov
push
orb
add
xchg
dec
icebp
adc
jo
clc
aad
add
dec
jle
inc
mov
add
sahf
fcmovnbe
addb
sub
push
or
aad
and
test
mov
stos
add
popf
popa
lods
and
sub
mov
shl
inc
or
iret
mov
sub
outsl
stos
jecxz
ljmp
dec
mov
shll
sbb
out
in
xor
xchg
mov
pop
cmp
mov
insb
lds
loope
std
imul
jnp
jp
leave
mov
ss
fldt
cmp
icebp
and
or
scas
icebp
xchg
jmp
jb
xchg
cmpsb
adc
mov
jne
cld
lods
cmpsb
mov
xchg
rcrb
and
aaa
aas
xchg
add
popa
repnz
iret
pop
imul
dec
mov
mov
xchg
jmp
fisttpl
out
scas
pop
mov
adc
repnz
scas
outsb
add
jns
dec
cmpb
sub
push
das
nop
mov
ja
or
push
mov
push
xchg
xor
dec
imul
mov
mov
dec
mov
jae
inc
dec
test
sti
add
adc
mov
loopne
mov
jb
insl
icebp
pop
jecxz
pop
aas
rclb
inc
mov
mov
shl
scas
dec
inc
enter
push
and
or
outsb
sbb
mov
les
inc
jle
mov
mov
push
shll
mov
jle
jae
add
push
sub
dec
jb
push
xor
dec
pop
les
add
push
xor
mov
imul
push
scas
in
mov
xchg
cmp
fbstp
movb
stc
js
add
out
xorl
aam
mov
scas
ljmp
aaa
imul
inc
mov
loope
test
push
test
fs
pop
cmc
sub
mov
cmp
out
lock
lock
loope
mov
movsl
aam
xorl
jl
push
and
dec
pop
jmp
sbb
in
xor
int3
aad
es
lcall
jb
repnz
scas
mov
test
xor
shrb
pop
cmp
lods
jbe
inc
mov
pop
lret
hlt
pop
in
andb
mov
mov
std
jmp
inc
pusha
inc
mov
xchg
adc
das
xchg
mov
mov
and
ret
pop
loopne
sub
hlt
mov
repz
jge
fmuls
sbb
sub
mov
push
imul
std
into
add
mov
cwtl
or
cmc
aaa
adc
pusha
push
insb
mov
adc
test
lds
jle
sbb
shl
xor
cmpsb
and
lds
sarl
cmc
fistps
jl
je
xchg
test
push
call
push
dec
jmp
stos
cmc
test
mov
jb
cld
shll
outsb
dec
and
sbb
xor
or
mov
push
movsb
insb
bound
ret
mov
pop
and
adc
and
or
cmp
mov
imul
sbb
out
push
and
mov
dec
dec
rcl
and
cltd
outsb
jbe
jne
enter
sar
xor
adc
pop
mov
lds
jg
inc
pop
inc
and
mov
fldenv
xorl
or
imul
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
pop
shrl
jle
js
jle
loopne
inc
push
icebp
divb
leavew
out
or
stos
mov
mov
movsb
push
dec
fs
jns
shll
pushf
into
pop
adc
xor
dec
inc
popf
mov
mov
adc
dec
fmuls
repz
pushf
shll
push
or
cltd
ds
xor
add
into
mov
cld
in
push
pop
cmp
cmpsb
jae
insb
in
jg
loopne
imul
adc
adc
mov
sub
pop
push
int3
outsb
scas
jne
das
sar
test
xor
push
xchg
inc
or
aas
xor
fcoms
cmpsb
mov
mov
and
test
leave
mov
xchg
mov
xor
xchg
ja
and
or
addr16
push
ret
mov
xor
dec
sbb
mov
pop
mov
jmp
mov
movsb
imul
pop
sub
loopne
pop
mov
push
stc
inc
cmpl
lret
mov
adc
xchg
push
jecxz
nop
hlt
push
cmp
xchg
sub
push
ljmp
mov
dec
push
mov
jae
xor
cli
mov
adc
aam
test
loope
inc
push
sbb
sbb
inc
scas
hlt
xchg
jg
imul
cmpl
cmpsl
sub
in
sarl
mov
pushf
lret
mov
mov
in
push
push
aam
je
ret
out
xchg
xor
sbb
hlt
mov
mov
xchg
jg
xchg
fistpl
leave
ja
xchg
leave
int3
fdivrl
lret
add
sbb
les
cwtl
push
or
mov
adc
in
jg
jnp
adc
sub
mov
mov
pop
adc
lods
xchg
aas
into
enter
or
mov
dec
xlat
outsb
arpl
fldcw
mov
sbb
test
lcall
mov
fdivs
test
in
lcall
cmp
shl
orb
sbb
in
mov
push
lock
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
inc
inc
outsb
fdivrs
loope
jle
mov
sbb
mov
movsb
sbb
fldcw
fbstp
pop
push
enter
mov
or
jmp
jbe
add
add
adc
jne
add
imul
stos
add
daa
lahf
xchg
pop
incl
and
push
adc
jbe
ss
mov
loop
test
cs
mov
scas
push
xchg
push
mov
cwtl
pop
pop
test
pushf
jne
leave
cmp
mov
pop
sahf
les
inc
das
mov
jns
mov
divl
imulw
lods
fucomip
adc
push
inc
lods
popf
cmpsl
mov
mov
cmpsl
les
jmp
cwtl
push
kmovb
into
fwait
rcrb
push
or
ret
in
push
sbb
aaa
sbb
les
push
das
xchg
cld
loopne
mov
mov
cltd
test
movsb
mov
ret
lcall
jmp
sub
scas
jnp
and
sbb
out
adc
xor
jae,pn
add
imul
jecxz
mov
paddd
xchg
fisttpl
lds
loope
sub
mov
cmc
cmp
movb
xchg
imul
pop
cmpsl
ror
repnz
cmp
mov
cmp
rclb
sti
mov
mov
call
hlt
faddl
sbb
push
faddl
adc
mov
push
ret
clc
fisubs
add
push
into
shlb
pop
sbbb
dec
and
ljmp
mov
add
pop
dec
insb
adc
push
mov
arpl
movsl
xchg
dec
test
mov
sbb
cmpsl
dec
call
pushf
xor
lock
inc
lahf
addr16
jl
add
mov
pop
lea
jnp
aas
sbb
imul
ds
mov
xor
xor
stc
addr16
dec
dec
jbe
hlt
xor
sub
xchg
push
rclb
mov
inc
icebp
ss
push
in
push
sbb
fdivrs
sub
sub
dec
rcl
xor
xor
fbstp
sub
out
shlb
adc
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
daa
pop
mov
loope
jle
sti
insb
es
jne
jno
add
dec
lock
or
xor
cmp
shrb
fmuls
jnp
aam
int
push
dec
lahf
push
xor
mov
popf
int
out
pusha
push
cmc
adc
hlt
cmpsb
test
sahf
in
nop
and
dec
mull
ja
lods
mov
repnz
mov
insl
cmpsb
iret
jmp
out
inc
jmp
jp
cmc
lret
jne
inc
mov
cmpsl
data16
pushf
mov
movsb
jae
div
push
scas
nop
out
ficoml
out
adc
pop
dec
rep
sarb
xchg
faddl
or
gs
out
jns
sub
add
data16
fldt
mov
icebp
loope
jne
dec
mov
push
je
pushf
pop
lret
outsb
and
in
ds
mov
jge
xor
addl
cmp
in
adc
jl
nopl
jbe
daa
in
mov
adc
pop
mov
xchg
dec
and
pop
jge
movsl
jg
jnp
jge
cwtl
lret
pop
dec
mov
test
adc
lret
addr16
push
pusha
loop
xor
mov
xor
xchg
mov
in
fcmovne
movsb
dec
or
mov
repz
jg
lret
ljmp
cmp
adc
imul
cmp
fwait
mov
cmp
push
jmp
jmp
inc
add
movsb
push
rorb
mov
testb
pushf
stc
add
xchg
jmp
lds
ficomps
cmp
adc
xchg
mov
push
loope
cmpsl
pusha
pusha
mov
and
mov
cmp
adc
test
xlat
dec
lahf
xchg
das
outsb
cmpl
sbb
jns
int
adc
cld
stc
data16
adc
stc
test
dec
idivb
push
xchg
inc
pop
sbb
fs
stos
add
push
xchg
or
outsl
xchg
pop
cmp
fldenv
dec
out
pop
mov
xchg
push
mov
clc
sbb
mov
test
lea
mov
and
mov
call
sbb
pop
repnz
dec
loop
mov
or
jns
gs
sti
lcall
or
js
adcb
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
inc
sub
push
inc
in
jle
js
jle
movsb
enter
adc
into
inc
xchg
jmp
int3
fsubl
ljmp
daa
mov
and
in
dec
in
xchg
sbb
das
daa
pop
sub
mov
and
fidivrl
push
jnp
lds
add
pushf
and
cld
je
int3
xor
sarl
mov
sbb
jno
xchg
sar
mov
ds
je
or
lret
mov
xor
fdivrp
sbb
aam
addl
pop
jb
vaesenclast
and
xchg
bound
loop
fidivrl
cmp
fisubrs
lods
mov
sub
mov
cmp
data16
aad
cmp
ds
dec
je
dec
add
sarb
and
pop
push
rorl
fmuls
cmpsl
cmp
test
cs
data16
je
adc
sub
loopne
pop
adc
sub
sub
out
mov
xor
pop
inc
nop
clc
jo
pusha
out
push
loopne
lods
test
pop
inc
lods
mov
loopne
cs
pop
repnz
jge
push
and
dec
pop
stc
pop
das
jo
and
sub
adc
xor
aam
test
rcrl
xchg
movsl
mov
and
iret
jp
jmp
push
ret
rol
or
dec
pop
in
outsb
or
dec
mov
mov
movsb
fsubs
aam
icebp
rclb
or
cmpsl
adc
sti
jno
movsb
mov
ja
cmp
mov
xor
inc
aaa
ret
push
jns
fwait
rclb
cmp
out
pushf
test
hlt
sub
call
andb
outsb
lret
std
insb
fsubs
jae
xchg
outsl
lret
outsb
pop
xor
repz
pop
scas
call
and
ljmp
pop
insl
in
popl
or
or
mov
push
insb
push
xor
or
arpl
mov
inc
aam
jge
mov
insb
out
adc
shlb
xor
fistl
mov
int3
push
call
add
sbb
fs
fwait
pop
sbb
jo
into
ljmp
xchg
into
pop
lret
test
jl
push
aam
pop
mov
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
mov
sub
jmp
mov
fdivs
int
fsts
ret
cli
cmp
ss
pusha
mov
daa
test
test
insb
sub
in
inc
add
nop
pop
push
insb
movsb
scas
mov
mov
stos
ret
and
jmp
dec
stc
lea
and
popf
mov
jp
and
mov
leave
jnp
daa
mov
and
cld
int
decl
sbb
jecxz
shr
mov
and
in
pop
mov
in
adcl
push
insl
cmpsl
int3
jl
xchg
mov
or
or
dec
out
jle
push
sub
sub
or
into
add
add
push
sbb
imul
and
les
ds
and
jbe
aam
aas
or
inc
push
jbe
adc
jno
hlt
cmp
and
icebp
jp
xor
xchg
fbld
mov
inc
dec
jnp
fildl
or
sarb
dec
out
dec
and
pop
aad
insb
imull
out
push
sbb
jg
push
mov
dec
sbbl
iret
cwtl
and
sub
ss
in
hlt
mov
xor
push
adc
mov
jl
and
iret
push
sbb
das
lcall
fistps
mov
imul
cmp
xor
jbe
jnp
cltd
adc
cmp
and
imul
cmp
loop
or
cmp
xlat
clc
out
mov
lds
push
fs
mov
bts
fs
adc
push
and
pop
into
mov
cmc
jmp
sub
movsl
inc
test
jae
push
pushf
xchg
int
jns
fstl
pop
pop
test
push
fs
daa
cmp
daa
faddl
push
imul
lahf
std
out
std
mov
xlat
rcrb
dec
push
rorl
inc
les
xor
lock
pop
sar
dec
jb
loope
out
push
dec
into
in
xchg
sbb
mov
push
lahf
jge
inc
dec
mov
mov
mov
out
rcl
loope
out
push
jg
out
mov
inc
push
cli
rdtsc
mov
out
in
cmp
gs
sub
mov
movb
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
popa
negb
jle
jns
jle
cld
add
shll
xchg
pop
insb
jns
adc
std
in
into
hlt
sub
popa
stos
jnp
stos
mov
dec
out
dec
sbb
dec
adc
inc
out
out
mov
fiaddl
fbstp
inc
fmulp
mov
cltd
hlt
and
insb
int3
inc
add
adc
xchg
stc
jno
push
popa
js
push
test
daa
sbb
jne
sahf
ficoml
cmp
lds
jnp
cmp
sbb
ss
mov
fwait
pop
in
lcall
push
fucom
adc
cwtl
mov
or
int3
push
andb
push
push
ja
jecxz
dec
cmpsb
out
pusha
rep
add
pushf
loopne
sti
test
stc
ja
mov
push
dec
addb
cmp
pop
daa
and
cmp
aaa
jge
dec
mov
mov
lret
xchg
mov
push
pop
sahf
movsl
add
ds
push
cmc
xchg
cli
in
test
add
lahf
mov
rclb
pop
mov
sti
add
aaa
outsb
fildl
icebp
fwait
shrb
aam
mov
dec
lret
int
pop
push
jmp
sub
cmp
out
insl
xor
sbb
jecxz
ds
ret
neg
jne
leave
fstl
mull
out
ret
pop
js
xchg
or
adcl
aam
movsl
push
loop
pop
dec
js
mov
ljmp
pusha
xchg
gs
jne
shlb
xor
mov
in
jmp
pop
lret
cmpsb
addr16
mov
dec
and
sbb
add
jo
adc
mov
lahf
jle
xchg
clc
mov
stc
inc
jge
cwtl
xor
adc
rcll
jge
rol
adc
mov
and
enter
popa
xchg
cmpsl
jg
rcrl
faddl
mov
ss
imul
fdivl
jg
sbb
add
sub
dec
mov
jne
mov
inc
adc
and
jle
adc
or
testb
fwait
adcb
xchg
and
orb
fmull
inc
sub
arpl
push
imul
ja
mov
test
push
push
adc
rorl
xchg
adc
jle
aam
push
flds
cmc
fists
je
mov
pop
icebp
scas
pop
push
pop
inc
test
aaa
xor
stos
inc
pop
ss
lea
push
push
xchg
notb
cmp
jnp
jge
shl
cmpsb
test
mov
insb
stos
and
xchg
dec
cmp
xor
gs
div
imul
lea
dec
loope
or
add
shll
jns
mov
mov
sbb
xor
shlb
pusha
fidivrs
lds
sti
ss
fists
clc
jne
inc
inc
push
std
orb
int
sti
inc
call
pop
or
sub
add
push
jmp
cmc
push
imul
xor
movsb
enter
adc
setae
dec
xor
jl
aaa
push
sbb
enter
lea
push
loopne
scas
rolb
popf
push
inc
add
dec
sub
in
mov
out
mov
idivb
js
xor
cmc
mov
sub
sub
push
jo
dec
cmpsb
dec
mov
stc
pop
sub
ljmp
add
mov
sbb
orb
mov
cmp
rorb
or
push
pop
popf
pop
pinsrw
insl
ljmp
loopne
rcll
xor
int3
jp
add
test
mov
or
stc
pushf
push
lods
cltd
pop
imul
inc
imul
out
fld
mov
cmp
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
sbb
pop
xchg
out
jle
jo
jle
cli
xor
inc
fldcw
push
inc
dec
jae
jecxz
daa
push
rolb
insl
shll
lods
into
not
aas
xor
in
jmp
insb
rcl
jg
fstl
in
mov
ss
addb
and
shll
cld
xorb
add
icebp
aas
das
xchg
shlb
js
mov
push
sub
int3
sarl
inc
jne
mov
js
iret
jno
inc
test
dec
dec
test
call
inc
jge
rcrl
inc
into
fdivs
xor
addr16
pop
pop
pop
adc
outsb
aas
or
sub
repz
add
mov
ljmp
popf
sbbl
stos
mov
nop
pushf
and
inc
push
mov
popa
shl
jb
mov
inc
mov
scas
sub
mov
insl
and
or
adc
in
or
sbb
loop
dec
push
ds
jne
mov
dec
ds
es
shll
aad
jbe
outsl
orl
add
mov
fnstcw
in
dec
push
loope
aam
push
add
sarb
pop
mov
out
cmp
out
cltd
dec
mov
and
sub
cwtl
jge
add
add
mov
addr16
mov
ret
in
mov
sub
scas
fsubrs
dec
mov
lods
mov
xlat
xchg
fidivs
loope
cmp
mov
xchg
mov
mov
mov
pop
pop
fstpl
cmpsb
ds
daa
sbb
jp
popa
out
pop
mov
cwtl
cld
out
or
inc
lods
enter
xlat
out
jl
inc
out
dec
mov
or
mov
sti
inc
fwait
rclb
repnz
adc
mov
scas
std
test
repz
sbb
out
push
andb
mov
mov
jae
and
dec
push
aam
jne
jle
sbb
ds
sub
jmp
jno
cli
ja
push
cmp
push
dec
or
push
dec
loopne
jge
stos
mov
in
cmp
jg
je
xor
push
xchg
inc
mov
xlat
cmc
cmp
aas
lret
pop
dec
and
dec
fwait
pop
bound
insl
lods
ss
test
jne
orl
pop
cli
or
jbe
and
fs
sarb
lods
mov
mov
fnsave
enter
movsl
out
icebp
andb
fdivrl
imul
jg
shll
cmp
mov
mov
pop
sbb
pop
jp
cli
sbb
call
sbb
fcmovne
out
jmp
leave
or
loopne
movsl
cmp
adc
iret
xor
lea
dec
sub
xor
mov
adc
xor
mov
lret
mov
lcall
in
dec
sti
ljmp
xor
push
clc
into
jp
xor
fistpll
ljmp
loop
fistl
sbb
fcompl
xor
cmc
stos
lods
jns
xor
out
int3
sbb
fsubp
cmpsb
adc
lahf
int
js
clc
les
ror
mov
or
sub
mov
sahf
jmp
mov
dec
sbb
mov
ds
mov
movsb
andb
pavgw
jns
shll
sarb
in
adc
ret
pop
xchg
xchg
inc
xchg
adc
jo
daa
cli
movsl
pop
lret
push
mov
fists
pop
into
pop
mov
shrb
addl
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
ds
jb
mov
jle
jo
jle
testl
pushf
adc
scas
outsl
fdivl
dec
jl
imul
jmp
mov
daa
and
sub
xor
gs
or
out
push
mov
mov
jno
scas
and
mov
cmp
push
xor
out
adc
or
ja
loope
pop
jmp
mov
cltd
jns
mov
cmp
ljmp
and
iret
or
inc
pop
lcall
fcoml
lea
inc
orb
mov
or
bound
xchg
test
push
mov
les
pop
icebp
and
sti
or
sbb
shlb
lock
popf
xor
cmpsb
cmc
adc
imul
cmp
mov
cmp
fidivrl
or
pop
and
add
es
xchg
popf
ljmp
and
loope
in
cwtl
in
push
std
cs
ss
push
outsl
or
inc
nop
jg
dec
idivb
xchg
mov
pop
push
repnz
aas
movsl
pop
xchg
fwait
sbb
fwait
mov
jle
into
fs
in
sbbb
push
add
sbb
mov
ret
ret
push
adc
and
ret
mov
lret
push
stos
push
xchg
test
adc
rcr
xor
mov
lret
lds
out
neg
inc
data16
xorl
mov
inc
push
addr16
sub
and
mov
add
jne
dec
mov
mov
inc
or
pop
sar
lock
sbb
xchg
sbb
int3
push
and
mov
lock
leave
cmc
out
adc
insb
sub
cmp
mov
add
mov
insb
cmp
in
jbe
add
rcll
xor
out
loopne
sahf
mov
sub
cmp
jmp
into
add
pop
aas
mov
jns
ret
mov
shl
fildl
mov
mov
insl
pop
cli
es
rcrl
ret
adc
aad
cmpsl
or
or
jbe
jg
inc
adc
push
dec
movsl
lcall
icebp
loopne
jo
iret
push
push
push
pop
call
push
test
pop
mov
push
imul
movsl
into
inc
mov
lods
testl
popa
mov
int3
cmp
xchg
bound
inc
push
out
pushf
jecxz
inc
fs
jg
sbb
fistps
mov
iret
cmpsb
decl
dec
pusha
clc
shlb
jmp
cmp
divb
xor
dec
mov
mov
int
jne
and
aaa
mov
enter
std
jo
ljmp
jp
cmp
and
add
mov
mov
mov
lcall
jnp
fidivl
fisubl
cmp
shll
xchg
outsl
or
xchg
clc
mov
fists
sub
sti
cwtl
lea
jb
insl
sbb
or
test
ret
xor
ljmp
dec
dec
cs
popf
sarl
sbb
or
lods
daa
cmp
or
push
add
lods
pusha
jno
filds
cmp
dec
jae
rcll
mov
fldcw
mov
notl
sbbl
ret
jns
mov
fcoml
jne
pop
jb
mov
xlat
inc
push
push
movsb
and
xor
sbb
lret
push
fcomps
aas
fistpl
pop
push
add
adc
cltd
cmp
inc
mov
and
outsl
sub
out
subb
out
xor
dec
popa
stc
push
mov
movsb
cmpsl
lods
in
jle
jmp
fistl
repz
stos
inc
xchg
mov
test
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fcos
dec
inc
stos
xor
jle
jns
jle
adcl
xchg
mov
cmp
insb
mov
andl
pusha
into
mov
loope
filds
xor
dec
mov
repz
je
idivl
xchg
jle
inc
ja
or
fcomps
mov
bound
insl
insb
rclb
lret
in
pop
dec
cmp
sbb
mov
out
cmpsb
loope
pop
bound
in
xchg
dec
mov
iret
pop
jmp
jge
pop
sub
daa
lock
aad
jmp
loop
ss
in
mov
inc
inc
movsb
adc
es
mov
daa
sub
sub
scas
jl
mov
or
dec
push
pushf
loopne
arpl
scas
xchg
fld
out
add
adc
call
mov
outsl
inc
es
or
sub
mov
pop
test
shlb
std
fmull
xor
mov
out
or
and
push
xchg
jo
fdivrl
lret
cmp
rcl
jae
mov
scas
push
in
and
jle
addl
repnz
ja
repz
adc
mov
mov
push
nop
sub
fidivrl
cmp
mov
test
imul
inc
push
sub
fs
jne
sarb
fwait
pop
or
adc
cmp
rep
fsubl
enter
aaa
movsl
cmp
or
sbb
add
pusha
inc
pop
mov
sarl
xlat
and
mov
bound
dec
ficompl
mov
lock
xor
scas
mov
ss
mov
int
jle
fwait
fs
jae
fmull
rcrl
pop
or
push
loopne
and
pop
adc
sub
stc
lock
sbb
push
sub
mov
fwait
mov
jnp
push
lahf
or
pop
int
xor
dec
jb
subl
jnp
dec
adc
loope
jge
mov
inc
icebp
push
add
xlat
xor
jns
sub
add
aam
cmp
outsb
lret
insb
lock
je
mov
lds
scas
mov
ljmp
push
repz
adc
scas
dec
out
lmsw
negb
testb
xor
xchg
cmpsl
jbe
adc
add
xchg
or
test
push
add
gs
sub
hlt
mov
test
gs
cmp
jp
add
dec
sahf
mov
clc
add
dec
xchg
sub
cmp
dec
mov
jl
jmp
cli
jbe
jecxz
sbb
repz
xor
xor
pop
inc
pop
int
mov
lock
cmp
adc
xchg
in
lea
xchg
pop
out
cmpsl
ds
rorb
or
pop
pop
sahf
xchg
mov
call
pop
in
imul
mov
xor
adc
cli
cs
in
in
js
push
mov
fisubl
sub
stos
sbb
adc
and
movsw
adc
icebp
mov
jmp
jp
inc
mov
add
cmpsl
subb
aas
aas
jp
stos
jg
or
lods
xor
int3
aaa
arpl
inc
or
mov
sub
cmp
jecxz
add
hlt
popa
gs
push
fs
sti
pop
pushf
stc
inc
aam
fidivl
test
jl
fisttpl
pop
shrb
inc
jns
call
inc
daa
lret
cmpb
or
pop
es
fldcw
and
sarl
adc
movsl
jmp
xlat
mov
push
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
dec
pop
sahf
mov
jo
jle
faddl
mov
inc
xchg
lret
xchg
lret
and
dec
push
inc
inc
addr16
js
std
lcall
jl
cmp
inc
loope
outsb
test
sti
mov
xlat
sub
and
mov
outsb
push
sub
jg
jne
test
push
movsl
dec
cmc
ljmp
cwtl
test
jmp
inc
xchg
inc
sahf
fstp
mov
xor
outsl
mov
sbb
nop
mov
mov
enter
leave
pop
sub
push
fs
inc
test
pop
add
fs
sub
pop
mov
xchg
fistpll
jbe
sub
hlt
pop
and
fimuls
and
popf
jp
add
mov
jno
jb
jle
leave
xchg
shr
cmp
jl
sbb
aas
stos
xor
adc
fimull
sub
int
pop
decb
jle
lds
clc
outsb
dec
xchg
fwait
push
ret
into
pop
fldcw
xlat
sub
mov
daa
clc
ret
inc
pop
out
adcb
jne
pop
lods
pop
mov
popa
cmp
adc
and
ficomps
cwtl
lret
xchg
int
jne
lret
lret
or
mov
mov
ljmp
jmp
pop
je
loop
inc
inc
mov
cmp
sub
add
or
xor
or
fdiv
mov
push
and
and
add
bound
adc
xchg
or
and
adc
add
pushf
mov
xchg
inc
jg
aas
adc
mov
scas
test
push
pop
out
lods
xor
push
test
loopne
rcll
or
xor
add
jl
push
aam
inc
sub
dec
lahf
mov
sub
pushf
cmp
jmp
andl
xchg
sub
dec
lret
insb
inc
in
js
xchg
js
daa
push
mov
pop
mov
dec
and
pop
or
xchg
jb
mov
or
sbb
push
les
rep
adc
gs
addr16
bound
scas
xor
xchg
inc
push
adc
scas
xor
xchg
xchg
sub
gs
mov
lcall
mov
xor
outsb
loop
mov
add
aas
or
mov
and
inc
mov
pop
lock
inc
cwtl
int
mov
fldt
test
mov
loop
ljmp
aas
sub
push
sub
cbtw
xor
and
dec
test
pushf
add
lcall
add
nop
jno
xorl
add
mov
add
mov
sub
and
sbb
dec
jb
scas
dec
ror
add
call
cmpsl
sub
es
xchg
pop
sub
mov
sub
inc
inc
imul
sahf
push
pushf
pusha
and
adc
xchg
das
push
xor
jae
shll
rcrl
inc
mov
push
addr16
ss
jg
dec
lea
xlat
sub
aam
xor
jae
dec
mov
jae
leave
cmpsl
mov
mov
mov
std
pop
cli
lods
sti
divl
repnz
mov
lock
dec
addr16
jo
clc
jge
mov
mov
cmp
mov
inc
loopne
cmpsl
lock
std
cmp
icebp
push
sarl
in
pop
nop
loope
mov
xor
push
cmp
cmpsl
jle
hlt
repz
in
cli
xchg
mov
mov
clc
lcall
sbb
je
add
insl
pop
mov
mov
fsts
dec
lea
insb
pop
std
mov
out
call
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
insl
dec
imul
jle
jns
jle
dec
loopne
in
push
test
or
fnsave
jp
fidivrs
mov
pop
lret
sub
push
scas
clc
inc
mov
dec
int3
xchg
shl
in
inc
repz
cli
dec
jb
inc
push
xchg
outsb
bound
fs
adc
repnz
leave
jmp
testl
dec
out
pop
filds
mov
outsb
fsts
test
lret
or
iret
mov
mov
out
std
add
dec
cmp
pop
add
dec
test
mov
hlt
xlat
nop
mov
xchg
cli
adc
scas
fldt
jg
xor
pushf
xchg
xor
shrb
sarl
dec
test
sbb
test
adc
push
mov
inc
sar
clc
and
inc
lock
outsl
mov
push
adc
pop
mov
pop
dec
inc
cmpsb
ret
jo
lret
xchg
jge
and
clc
inc
stos
ficompl
jmp
lds
xchg
push
fcompl
xchg
dec
fucomi
jl
lcall
mov
mov
mov
insl
movsb
les
pop
outsb
xchg
mov
add
rcrb
push
dec
xchg
inc
jmp
das
test
cmp
add
mov
push
aas
inc
mov
icebp
xlat
int3
xchg
ret
imulb
fcmovnu
dec
dec
arpl
pop
imull
mov
or
fs
push
int
mov
pop
leave
imul
xor
frstor
subb
mov
dec
imul
add
lret
jbe
add
mov
xor
iret
adc
mov
xchg
adc
or
xor
cld
xchg
sub
xchg
mov
loop
aas
mov
js,pn
js
jne
sti
lods
jge
cmp
fnstenv
add
jbe
sub
movntq
sbb
cld
jo
add
int3
popa
nop
lds
ret
inc
mov
jmp
repz
sbbl
xchg
adc
pop
inc
xor
fnstsw
repz
imulb
mov
push
or
cmp
dec
jbe
xor
mov
out
std
lret
in
dec
arpl
addb
ljmp
in
jb
cwtl
loop
repnz
jl
movsb
dec
jge
ror
in
movsl
sub
cmp
lods
xlat
or
mov
or
and
lods
push
test
fcoms
xor
mov
mov
shrl
ljmp
daa
cs
and
inc
mov
lods
int3
jmp
jo
in
mov
jnp
xchg
decl
insb
or
std
and
rol
aaa
add
stos
jg
int3
xchg
mov
gs
sbb
pop
out
clc
add
out
jge
mov
jl
insl
mov
xchg
adc
outsl
mov
xchg
sbb
add
mov
dec
outsb
push
jecxz
add
rclb
push
add
sub
pushf
test
repz
ja
add
int3
mov
and
jmp
dec
and
push
xchg
adc
lds
sbb
mov
add
and
jecxz
sub
movsl
sbb
ficoml
adc
jns
add
push
xor
push
mov
xor
or
xor
cld
dec
cmp
outsl
jecxz
cld
cmp
jp
test
xchg
push
cwtl
loopne
cltd
pushf
adc
sbb
mov
rolb
icebp
pop
pusha
inc
mov
iret
out
sub
loope
sbb
push
dec
xchg
into
ret
sub
inc
hlt
cmp
pop
int
dec
fdivrs
aaa
pop
push
xchg
cmpl
xchg
push
adc
xchg
insl
cmp
bound
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
xorb
jle
jns
jle
repnz
cmp
dec
push
mov
bound
negb
out
addb
arpl
dec
inc
push
mov
loop
sti
jno
ds
outsb
in
ret
sbb
sbb
mov
push
es
mov
mov
dec
js
and
outsl
push
dec
clc
add
mov
sub
lds
push
cwtl
pushf
mov
dec
xor
pusha
mov
xor
pop
push
xor
sarb
ret
mov
adc
xchg
cli
movsb
outsb
pop
cltd
pop
adc
dec
pop
dec
push
pop
sub
dec
lods
mov
pop
sbbb
popf
sbb
sbb
dec
insb
leave
test
and
xorb
mov
lods
fadd
or
mov
les
pop
out
imul
clc
loope
ds
jge
ss
adcl
mov
ljmp
inc
jbe
or
arpl
and
mov
inc
dec
push
inc
pusha
xchg
or
je
mov
pop
sub
pop
inc
outsb
and
xor
mov
mov
mov
pop
fldl
jle
loope
pop
addr16
test
push
xchg
pop
fs
rcll
repnz
mov
sbb
mov
pop
test
leave
jnp
jo
btc
in
sub
stc
jmp
test
add
pushf
pop
scas
shll
mov
add
es
sub
aam
mov
inc
aaa
xor
mov
scas
jp
out
xor
lret
dec
push
ja
pop
ficompl
movups
ja
push
push
jecxz
aad
ret
shr
into
stos
dec
sbb
dec
movsl
lea
stos
inc
lods
mov
xchg
xor
lock
jb
jl
loopne
push
lods
add
cli
or
out
jp
add
dec
mov
xchg
or
mov
or
fst
jno
sub
or
stos
or
ret
sbbb
fsub
mov
das
xchg
fcmove
mul
les
sahf
ficompl
ds
decb
inc
bndldx
lds
outsb
pop
pop
inc
popf
sar
aam
cmpsl
sbb
mov
pop
mov
lods
dec
adc
movsl
pop
sub
pop
in
add
jmp
xor
arpl
push
mov
sub
ja
insl
adc
pop
and
mov
push
je
xor
push
cmp
sahf
aaa
sahf
push
loop
push
xchg
fiadds
push
jmp
out
dec
incl
push
jae
daa
hlt
enter
testb
mov
imul
push
loopne
add
add
adcl
je
inc
cmp
pop
scas
fdivrl
lds
pop
loop
in
je
xor
loopne
dec
and
in
inc
jp
push
stos
cmpsb
cmp
and
sbb
or
sahf
mov
ljmp
push
mov
imul
fnstcw
das
sbb
jnp
pop
in
or
test
adc
xor
ret
mov
out
jno
push
pusha
xchg
and
lahf
xor
aad
mov
sbb
mov
xchg
mov
cmp
lret
inc
adc
lahf
dec
cltd
xchg
jge
jae
sub
mov
movsl
cmp
push
push
push
pop
icebp
mov
sbb
lock
inc
and
popl
inc
lea
cwtl
mov
sti
adc
scas
xlat
xor
adc
add
xchg
int3
dec
lret
pusha
mov
arpl
cwtl
adc
or
inc
pusha
into
inc
push
mov
jno
dec
add
test
jmp
xor
adc
test
icebp
push
xchg
mov
jno
scas
and
out
jl
lock
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
xchg
pop
jbe
xchg
jo
jle
or
outsl
dec
jnp
push
and
sub
or
pop
jns
out
aad
test
jno
pop
push
push
xchg
cltd
push
pop
bound
hlt
pop
pop
pop
xor
and
sti
call
shl
xchg
xlat
test
pop
int
dec
mov
pop
cmp
js
inc
and
mov
ja
pop
jmp
jmp
inc
testb
rcrl
xchg
push
dec
adc
pop
and
repnz
adc
inc
add
mov
in
cmp
cmp
or
jno
pop
add
dec
inc
xchg
or
imul
and
jae
stos
lea
mov
inc
jmp
hlt
sbb
hlt
out
lock
in
int
dec
cmpsb
fdivrs
mov
jb
movsl
cmpsl
adc
or
adcl
fiaddl
add
inc
outsl
adc
mov
rcl
pop
add
cs
out
pusha
push
fcomp
loopne
push
jmp
sub
lods
push
mov
sbb
pop
call
or
or
mov
and
cmpsb
xchg
push
adc
dec
mov
imul
jnp
xor
sub
adc
lods
pop
and
js
cmpsl
push
inc
inc
scas
or
adc
aam
jno
sbb
clc
stc
xchg
mul
cmpsl
sub
fldt
mov
mov
hlt
popf
out
faddl
and
mov
jecxz
fs
pop
movsl
sahf
sbb
jl
mov
mov
inc
push
loope
lret
xor
nop
out
mov
pop
fisubrs
rcl
push
push
sub
push
xor
iret
pop
icebp
dec
ret
lret
sbb
mov
aad
jbe
jge
sub
lret
jl
pop
push
push
sub
mov
adcb
jne
lods
imul
dec
inc
outsb
movsb
shlb
sub
sbb
mov
and
adcb
pop
bswap
mov
pop
dec
mov
cmc
dec
std
pop
jne
push
lods
cmp
and
dec
mov
outsl
pushf
cmpsl
loop
add
cmc
adc
sarb
or
cmp
test
aas
stos
lds
int3
adc
xchg
fsubrp
mov
push
mov
inc
mov
mov
cmp
or
dec
pop
std
ds
sbb
daa
lret
daa
inc
dec
outsb
fs
jbe
lcall
not
or
mov
xchg
scas
cli
int3
jb
pop
cmpsl
loope
sbb
sbb
cwtl
sub
in
pop
loope
and
popa
addb
push
inc
jmp
pop
mov
movsb
cwtl
jno
add
pop
fimuls
lock
pop
ja
nop
fdivl
repz
inc
lods
out
loope
cmpsl
or
jb
and
add
loopne
pop
dec
popa
xchg
sbb
mov
mov
fdivrp
leave
mov
imul
xor
sbb
stc
mov
aam
jne
stc
insb
rclb
cmp
punpckldq
or
sub
adc
pop
andl
jecxz
into
push
cmc
inc
push
fnstcw
inc
in
xchg
sub
arpl
push
dec
enter
test
or
and
loope
in
es
addl
stos
into
repnz
sahf
outsl
pop
rcl
mulb
outsl
mov
daa
ja
lods
add
rcl
lret
mov
mov
mov
mov
jns
iret
mov
push
mov
bound
ret
clc
add
dec
shll
add
repnz
aam
pop
jae
inc
mov
add
out
dec
movsb
mov
push
int3
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
imull
jle
jns
jle
mov
jno
push
orl
mov
cmpsb
mov
and
pop
popl
pop
cli
gs
xchg
lock
popa
push
and
test
sbb
dec
sub
sub
mov
mov
call
sbb
cmc
xchg
pop
pop
les
pushl
xchg
icebp
xchg
xchg
add
movb
test
movsl
and
adc
push
add
jmp
jbe
adc
sbb
cmp
mov
mov
nop
or
push
loope
inc
adc
jg
das
adc
popa
adc
push
test
imul
lods
imul
int3
dec
fs
rclb
cmp
jnp
and
cwtl
lea
mov
shll
cmp
loope
ja
scas
inc
xchg
movb
mov
add
adc
stos
push
testb
push
adc
test
dec
mov
incb
fwait
js
cmp
dec
ljmp
adc
mov
sbb
call
mov
mov
inc
push
neg
in
pop
dec
sbb
pop
enter
inc
sub
out
jecxz
and
push
lret
cmpsl
dec
adc
pop
or
pop
fs
test
jmp
lods
mov
mov
dec
sahf
data16
pop
inc
hlt
inc
push
adc
ficompl
repz
add
xorl
stc
lods
sbb
jl
or
sbb
cmp
jle
sarb
int
incb
mov
or
pop
fldl
dec
dec
xor
jg
ljmp
js
inc
in
xor
push
jecxz
rcrl
dec
or
cltd
bound
jle
add
pop
jae
sub
pop
jb
int3
jg
sbb
cld
lds
inc
fdecstp
xchg
inc
dec
xor
push
out
jmp
push
je
mov
mov
arpl
in
data16
call
mov
push
movsl
push
int3
ja
dec
dec
cmpsl
mov
bound
jmp
mov
xchg
sub
in
xchg
add
scas
inc
insl
mov
xor
fdivr
sub
sub
jmp
lahf
insb
add
sbb
dec
scas
pop
mov
inc
stos
mov
and
out
jno
sub
mov
stos
xchg
sub
mov
mov
shll
jno
stos
jp
inc
mov
inc
add
dec
repz
int3
out
cmp
out
and
push
cmpsl
pop
gs
ret
sub
mov
aaa
pop
sub
and
lods
sahf
sbb
mov
fsubrs
leave
nop
mov
insl
idivl
xlat
or
xor
ret
cmp
xor
aad
inc
dec
lahf
cmc
mov
dec
push
pop
insl
and
mov
icebp
sub
sbbb
mov
xchg
dec
addr16
push
mov
notb
fimull
lahf
sbb
das
or
pusha
dec
rcrb
push
push
sti
test
arpl
les
sub
xchg
idivl
mov
testb
mull
scas
fisubrl
or
xchg
nop
lret
sub
aaa
lods
inc
mov
xchg
data16
rclb
stos
es
sbb
je
inc
cmp
scas
lret
das
mov
je
and
push
sbb
insb
js
out
ljmp
push
pushf
out
stos
popa
mov
das
sub
jns
orb
xchg
xor
sbb
xor
xor
fimuls
xchg
mov
mov
cmp
inc
pop
loopne
int3
push
nop
xchg
or
inc
test
lods
sahf
dec
rcrb
mov
push
jmp
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
and
mov
jo
jle
ret
mov
shrb
shrl
mov
fcoml
and
out
imul
loopne
inc
mov
add
bound
clc
std
test
sbb
mov
xor
rcll
dec
cmpsl
mov
and
sub
inc
xchg
sbb
aam
jno
addr16
fdivs
lcall
cmp
push
xchg
mov
popa
xor
or
pusha
mov
dec
shll
aad
xor
cltd
les
arpl
in
xchg
xor
add
and
cmpsl
leave
jecxz
add
and
fsubl
jp
stc
push
ret
sub
xchg
pushf
cmpb
shll
jns
and
dec
js
cmpl
rorl
adcl
sbb
out
sub
fwait
hlt
mov
jecxz
fdivrs
or
lret
mov
xchg
iret
jge
pop
andb
push
out
repz
push
xor
or
adc
fistpl
sahf
icebp
imul
loope
mov
inc
cltd
mov
and
pop
sbb
push
push
xor
repz
je
sub
or
clc
mov
test
sub
aas
stc
mov
cmp
xchg
xchg
jns
insb
pop
mov
lock
and
movsb
jle
fsubrs
xchg
rcrl
xchg
das
cmpl
loope
loope
inc
and
scas
daa
call
repnz
rcll
fmull
adc
dec
hlt
jb
mov
inc
test
daa
loopne
imul
in
xchg
leave
dec
in
cmpsb
test
jmp
or
push
outsl
mov
fcomi
xor
dec
call
ja
hlt
aam
push
mov
and
in
pop
xor
mov
leave
lcall
cmp
cltd
sub
icebp
ret
iret
add
adc
gs
or
xor
rclb
add
fs
cmpsb
sarl
jnp
enter
fnstsw
adc
scas
sbb
inc
and
ret
xchg
iret
pushf
or
adc
out
stos
cmp
fdivl
out
dec
js
dec
notl
add
outsb
sti
fcmovnbe
idiv
xchg
addr16
int
inc
sub
outsl
cmp
and
out
lock
icebp
imul
movb
dec
test
cltd
out
ss
into
dec
add
ja
cmpsb
popf
aam
lahf
jle
and
xor
sbb
les
push
jb
and
inc
ret
mov
testl
sub
jnp
test
sub
enter
je
negb
testl
push
inc
or
fistpl
pushf
push
rep
mov
inc
out
ljmp
mov
imull
test
ljmp
pop
decl
xor
insl
xor
mov
cmc
push
pusha
sbb
rolb
cli
addr16
xor
sahf
ret
test
pop
sbb
shll
mov
lods
mov
leave
leave
push
pop
and
lret
jno
int3
mov
int
outsb
push
jmp
cltd
sahf
ljmp
jo
enter
xor
push
sbb
or
inc
add
dec
in
jb
pop
shrb
and
add
das
ret
cwtl
dec
dec
stc
mov
dec
jo
fdiv
shlb
lods
add
push
mov
test
xchg
push
ret
setp
xchg
mov
mov
daa
xchg
sub
jne
xor
call
sbb
int3
fisttps
mov
jmp
xor
scas
xor
mov
lds
dec
mov
jl
roll
add
jmp
cmp
dec
mov
rcr
pop
mull
jo
jle
cwtl
sarb
je
lret
repz
popf
jecxz
mov
cmp
inc
push
mov
ret
xchg
jne
cmp
or
and
dec
dec
int
sub
std
dec
adc
fdivrl
insl
rolb
addr16
iret
add
push
call
jg
repnz
out
xchg
inc
pushf
xchg
sub
rcrl
adc
dec
jecxz
sbb
cli
pop
pop
cmp
sub
fstp
mov
icebp
xor
repz
jnp
out
mov
xchg
and
xchg
stos
push
add
xlat
xor
stos
pop
pop
xchg
mov
inc
cmpsl
mov
fstl
cld
sub
cmp
cmpsl
mov
int
scas
adc
call
bound
xchg
pop
call
stos
add
or
cmp
ret
in
xchg
xchg
adc
xor
cmpsb
push
xchg
dec
fadd
push
je
jecxz
inc
xor
dec
mov
fcompl
mov
mov
mov
add
cmp
xor
cmpb
fisubl
sbbl
push
jp
fidivrl
adc
pop
push
aam
in
mov
xor
push
jecxz
fistl
rcrb
sub
mov
or
inc
mov
pop
icebp
pushf
std
int
leave
mov
xchg
pusha
xor
in
orl
dec
loope
add
or
loop
sbb
movsb
cmc
insl
fsubrs
lods
dec
arpl
xchg
int
xchg
pop
lods
cmp
inc
push
xlat
aas
test
in
js
adc
aaa
pop
jne
mov
cwtl
inc
cbtw
pop
movsb
lods
mov
imul
or
mov
mov
scas
mov
add
or
mov
rorl
sub
fwait
mov
movsl
lcall
jns
das
std
insl
in
idivb
imul
push
and
xorb
je
repz
inc
push
loop
in
cltd
adc
je
inc
xor
mov
xchg
xchg
mov
xchg
push
jne
dec
mov
ss
cmp
inc
dec
push
mov
xor
cs
das
jl
inc
xor
sub
lret
mov
inc
les
jns
scas
xor
ljmp
adc
add
inc
sbb
push
cmp
mull
mov
adc
or
aaa
dec
mov
lcall
sarl
mov
mov
mov
sbb
push
mov
mov
add
loope
adcl
inc
mov
xor
es
xchg
mov
inc
gs
insl
enter
cmp
mov
xchg
std
pop
test
out
lahf
and
pop
ror
das
jne
leave
jge
sbb
adc
sub
pop
fs
inc
jno
xor
lods
sub
aad
dec
idivl
push
lcall
jmp
and
add
mov
decb
add
add
sbb
subl
shlb
sti
jb
jl
scas
mov
sub
mov
std
inc
je
out
ficoml
ljmp
imul
cld
das
jmp
adc
dec
push
mov
popa
fldcw
mov
and
loope
xor
dec
sub
and
xor
hlt
leave
and
outsl
pop
inc
mov
or
sub
arpl
mov
lods
inc
lret
dec
roll
xor
pop
mov
ffreep
gs
xchg
jmp
vpcmpeqb
scas
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
out
xor
rclb
jle
enter
scas
pushf
rorb
pop
push
fsubrl
fcomi
lcall
icebp
add
pop
xchg
dec
push
add
pop
lea
iret
loop
mov
bound
sub
adc
outsl
mov
dec
or
js
add
mov
aas
dec
or
icebp
xchg
mov
xchg
fcmovb
jmp
bt
xchg
xchg
inc
xchg
inc
mov
push
shl
fnstcw
mov
jne
mov
xor
cld
mov
jle
cs
mov
push
mov
inc
cmp
pushf
and
jmp
cmc
std
aas
popf
jns
push
iret
faddp
push
dec
dec
jmp
stos
mov
adc
mov
cmp
inc
out
mov
or
jb
daa
push
push
push
cli
shlb
add
mov
sbb
popl
adc
dec
outsl
loop
xchg
pmaddwd
pop
lock
popa
or
cmp
dec
movsl
mov
ss
add
ds
and
xchg
cltd
dec
adc
aas
push
cld
data16
dec
mov
loope
les
shl
sbb
jbe
cmp
mov
femms
xlat
mov
pop
xchg
incl
or
out
jge
xchg
aad
pusha
ss
jae
sbb
ret
sbb
shrl
and
stos
push
mov
cli
in
enter
test
mov
cmp
lahf
mov
testb
inc
jmp
pop
ficomps
out
mov
fidivrs
sub
sbb
pushf
je
sahf
adc
sbb
mov
lds
ljmp
xchg
adc
int3
cld
sbb
or
insl
pop
pop
inc
lret
cmp
sub
repnz
rcrl
pop
aad
mov
push
xor
inc
enter
cwtl
mov
out
iret
dec
hlt
sbb
inc
and
ljmp
in
and
and
inc
dec
mov
sarb
jno
arpl
int
pop
mov
and
jp
or
cltd
adc
insw
and
jo
mov
push
or
push
mul
notb
int3
mov
cmp
xchg
inc
std
rorb
lea
pop
popa
sub
push
mov
stc
jns
negl
dec
pop
pop
popf
arpl
mov
fstl
je
jnp
popa
mov
jnp
cmp
dec
sub
cmp
push
add
icebp
dec
call
int
sbb
xchg
adc
xchg
pop
mov
loopne
dec
pusha
mov
enter
inc
sbb
and
jecxz
clc
ret
xchg
inc
adc
ljmp
cmp
cmpb
and
mov
push
cmp
cmp
popa
mov
lcall
cmpsl
js
adc
sub
push
push
inc
xor
xchg
cmpsl
push
ljmp
xchg
or
xchg
imul
scas
pop
dec
out
mov
loopne
rcrl
add
push
mov
outsl
scas
loop
shrl
hlt
sub
ja
fld
lock
jbe
cmp
or
test
cmp
aaa
into
sahf
inc
test
cs
xor
xor
cs
dec
xchg
xchg
fs
clc
cmp
pop
leave
mov
rol
mov
mov
add
inc
jo
icebp
scas
inc
out
cmp
shlb
or
xor
fwait
sbb
nop
imulb
pop
cltd
mov
pop
addb
fs
mov
sbbb
adc
insb
scas
mov
pop
jp
mov
sti
aaa
sub
jo
leave
leave
out
or
jbe
pop
mov
and
xor
std
cmp
jns
dec
inc
sub
mov
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
paddsw
jle
jo
jle
ficoml
movsl
inc
stos
inc
mov
xchg
xor
cmpsb
mov
cli
test
inc
loop
adc
incl
jp
imul
imul
inc
lret
incb
subb
dec
mov
sub
imul
jns
clc
jp
in
pop
int
rcrb
add
insb
scas
insb
pushf
jnp
cmp
notl
popa
or
jo
push
cli
sub
idivb
xorb
std
add
in
adc
ljmp
xchg
lea
or
xchg
fmuls
les
jae
pop
adc
xchg
or
lods
cmp
movsw
andl
sbbb
cmpsl
xchg
mov
nop
lret
and
mov
data16
fisubrl
lcall
push
in
or
adc
fs
mov
imul
sti
dec
cmp
xchg
std
enter
jg
in
mov
popa
lcall
pop
or
mov
fsubl
popa
cmpsb
insl
insb
and
sub
adc
ss
sarb
out
shlb
rolb
test
mov
lods
xorl
or
repz
jg
xchg
lock
stc
cmpsb
test
in
es
lods
mov
push
imul
lcall
insb
addr16
mov
in
loope
mov
jg
xchg
mov
dec
add
adc
mov
lods
in
push
pop
jae
dec
aad
in
xor
mov
xchg
inc
pusha
jle
es
sbb
xor
lret
scas
xchg
outsl
test
pop
xor
adc
or
cld
mov
xor
jl
dec
sti
xchg
sub
mov
add
inc
inc
or
in
cmp
sbb
xor
sub
lods
out
mov
adc
loop
mov
sbb
loop
push
mov
movsb
adc
insb
or
lea
mov
scas
and
inc
imul
cld
fldenv
shlb
xchg
je
sub
xchg
mov
repz
inc
and
testl
push
out
sub
ljmp
cmp
mov
ljmp
dec
ret
into
lret
xlat
mov
jg
and
or
inc
sbb
xor
lock
pop
cld
cmp
in
xchg
jne
mov
repnz
enter
mov
cltd
shl
movsb
mov
aas
jbe
jae
movsl
fldt
add
shlb
sub
adc
adc
mov
xchg
push
aad
popa
fprem1
out
push
movsl
lock
lahf
add
scas
xlat
xchg
jnp
cli
push
pop
jmp
add
or
les
adc
mov
jae
dec
fcoml
cmpsb
fwait
insb
mov
inc
cmpb
and
mov
xchg
dec
add
hlt
sbb
loop
or
xor
inc
cli
or
xchg
mov
or
in
sahf
push
fcomps
in
xlat
lahf
mov
loopne
ret
push
imul
xchg
adc
push
mov
adc
pop
push
ds
popf
push
jb
mov
push
enter
xorb
je
scas
mov
jl
test
cmc
js
push
int3
std
pop
aad
inc
xchg
mov
iret
adc
cmp
jo
jnp
pop
test
push
pop
aad
lea
jno
aas
push
mov
imul
push
ja
dec
arpl
scas
fs
pop
sbb
jl
ret
mov
inc
mov
mov
pop
push
nop
pop
nop
test
jo
jae
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
and
jle
jo
jle
fisubrl
jo
push
scas
sub
test
cmp
or
adc
or
jmp
sub
xor
bound
pop
cmpsl
push
sub
xor
ljmp
test
repnz
cwtl
mov
xorl
push
int3
mov
sub
test
push
jo
mov
test
push
jecxz
sub
je
jnp
das
outsl
out
or
adc
enter
pushf
lea
sbb
xchg
inc
es
fbstp
mov
add
or
aad
sub
or
pop
mov
xor
push
push
out
imul
adc
sbb
mov
sti
out
inc
lds
dec
insb
sbb
cld
jnp
push
subl
jo
outsb
mov
mov
dec
ficoms
xchg
jne
inc
mov
in
enter
das
xchg
sbb
stc
pusha
xadd
imul
sbb
jecxz
add
pop
dec
jbe
leave
sbbl
pop
fimull
std
xor
inc
add
push
sub
jo
inc
xchg
sar
jne
insl
jne
adc
push
dec
cs
rorl
test
lods
imul
adc
divl
inc
clc
in
push
inc
fildl
xchg
shrl
ljmp
cmc
imul
or
push
push
jne
nop
mov
movsl
pushf
sbb
cs
jp
lret
shl
fsubrl
mov
mov
push
cs
cmp
mov
jb
add
scas
outsl
dec
mov
xchg
sbb
xor
push
or
fsubrs
adc
adc
sbb
jns
pop
sub
repz
push
add
xchg
outsl
lods
cmc
lret
xchg
jge
sub
push
cwtl
dec
add
lret
dec
fxtract
jae
movsl
adc
or
cmp
or
add
fstl
lods
or
adc
dec
and
rol
push
cmc
push
lds
ret
fidivl
push
dec
sub
insl
adc
push
mov
gs
fsts
cmp
addr16
in
pop
lock
inc
fcompl
mov
mov
ss
adc
jecxz
loope
mov
sub
mov
push
stos
call
jo
dec
jmp
ret
push
xlat
jecxz
dec
ja
mov
das
push
jl
xorb
mov
jbe
dec
leave
into
inc
mov
jge
mov
xor
mov
push
orl
lea
into
push
lret
in
add
ficompl
push
fidivrl
mov
mov
and
push
lods
imul
sub
or
add
enter
push
rcll
fildll
repnz
into
xor
xchg
pop
arpl
inc
repnz
lahf
ljmp
data16
mov
ret
in
jns
jbe
pop
inc
mov
push
sahf
mov
dec
ficoms
loop
repz
out
loop
mov
push
testb
clc
pusha
cmp
add
jmp
sub
push
jno
sbb
add
add
popf
pop
das
mov
in
das
movsl
or
push
sbb
in
xor
fdivrl
jne
mov
nop
cmpsb
jge
mov
pop
iret
int3
loopw
xor
xor
mov
lock
or
nop
or
mov
mov
push
cld
jbe
addb
mov
jecxz
push
pop
sub
js
fldl
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
in
sbb
jo
jle
pop
int3
movsl
inc
aaa
cmp
pop
insb
add
mov
sbb
arpl
xor
out
sti
mov
cwtl
xchg
hlt
lods
jmp
out
inc
and
push
xchg
jb
les
lahf
adc
sbb
mov
imul
lock
nop
pop
jb
push
push
js
mov
into
ss
adc
stos
cwtl
cmpb
mov
popa
jae
xchg
xchg
jns
lahf
push
inc
fwait
sub
mov
mov
jp
sub
add
jle
ljmp
pop
mov
iret
sub
sbb
repz
jns
lea
push
mov
mov
in
dec
in
jne
call
mov
xchg
pusha
adc
popf
or
pushf
cmp
or
inc
js
loope
lcall
dec
mov
mov
mov
insb
mov
pop
test
stos
popa
je
imul
pusha
jo
cs
mov
adc
xor
outsb
popf
std
xor
sbb
push
mov
inc
cmpsb
xchg
xchg
arpl
mov
push
mov
jge
mov
inc
rolb
sub
xorl
sti
fstpl
ret
mov
cli
sbb
in
sub
and
jmp
movsb
dec
fs
stc
arpl
cmp
sbb
mov
repnz
into
stos
pushf
movsb
mov
test
cmpsl
popa
inc
imul
jg
cmpsl
sub
call
or
pop
sub
add
cwtl
mov
push
ret
inc
stos
or
cmp
jbe
outsb
inc
mov
andl
xchg
inc
dec
pusha
and
out
mov
cmc
xchg
adc
out
xor
cmp
ds
xchg
sbb
mov
push
lods
ljmp
pop
cmp
repz
mov
xchg
mov
test
lea
mov
popf
adc
mov
incb
jecxz
jg
addr16
cmp
xchg
movsl
dec
inc
fildl
xor
xchg
pop
inc
push
mov
sbb
sbb
movl
data16
mov
cmp
movhps
or
jecxz
popf
pop
arpl
inc
jns
jo
dec
adc
mov
sub
std
or
hlt
adc
out
dec
pop
ret
jp
xchg
es
mov
shrl
mov
idivl
movsb
out
lret
cs
mov
inc
shrb
mov
shrb
lods
test
push
sbb
jns
lods
jl
mov
repnz
mov
mov
jae
shll
fsubrs
cmc
mov
cmp
test
adc
std
mov
rorb
mov
fstps
rolb
pusha
scas
lock
mov
int3
push
sbb
adc
pop
jbe
out
aaa
mov
mov
fdivp
and
popa
mov
jmp
sbb
mov
faddp
add
xor
out
popa
mov
mov
xor
aaa
in
sub
in
rcrb
xor
pop
js
lret
repnz
push
jecxz
ss
jbe
inc
mov
mov
leave
ret
jle
dec
out
call
enter
adc
xchg
xor
jnp
cmp
and
jne
test
hlt
ret
test
sbb
inc
pop
out
pop
mov
jo
insl
jne
pop
pop
xchg
std
aas
mov
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
inc
cmp
jle
adc
out
fwait
lods
test
orl
sbb
xchg
mov
pop
icebp
mov
xor
dec
jbe
inc
xchg
jae
jno
cmp
fmul
sti
pushf
mov
cmpsl
lea
or
xchg
mov
add
cmp
mov
sub
enter
aaa
add
xchg
sub
or
mov
cmp
lods
fldl2t
jg
cmp
mov
push
aaa
add
arpl
jl
adc
add
push
fwait
mov
arpl
jmp
stos
test
fucomi
mov
repnz
xor
cmp
icebp
es
andb
jbe
pop
add
mov
xchg
aam
iret
and
ret
mov
ljmp
or
and
enter
jmp
xchg
data16
jecxz
test
aas
stc
daa
lock
arpl
loope
cli
push
outsl
jge
repz
add
cmp
cs
cli
sbb
inc
enter
sub
jg
cli
mov
cmpb
aam
insl
mov
mov
xor
dec
data16
sub
push
out
pop
xlat
push
and
popa
jmp
or
mov
clc
cmp
inc
push
imul
push
int3
shr
out
xor
pop
sub
in
jge
dec
xchg
jmp
jne
insb
jne
dec
popf
sbb
mov
dec
add
pop
inc
jg
xchg
cmp
rcrl
xchg
test
cmpl
ljmp
loop
inc
je
mov
pop
je
aas
push
push
sub
cmp
mov
fwait
sbb
mov
cwtl
sbbl
cli
jg
or
push
int3
int
ljmp
js
lds
mov
mov
fisttps
dec
aad
arpl
inc
cmc
or
mov
rorb
ficompl
dec
fcompl
lret
incl
jecxz
inc
push
sbb
cmp
adc
push
mov
in
stc
repz
cwtl
std
mov
xchg
scas
cld
mov
push
fldl
loop
add
mov
setnp
iret
mov
mov
sub
and
aam
shll
das
cmp
data16
pusha
cmp
and
push
mov
insb
sub
aas
out
fisubl
sbb
out
cmpsb
js
mov
mov
cmc
stc
dec
dec
jbe
insb
test
mov
xchg
add
enter
jnp
inc
push
lcall
mov
aas
inc
cmp
add
movsb
out
inc
jae
nop
adc
ret
lret
mov
cmpl
dec
popf
das
push
xchg
inc
mov
lcall
cld
add
jmp
push
divl
mov
or
cwtl
je,pt
jo
sarb
xchg
out
aam
sub
dec
xchg
jo
xor
cmp
sub
pop
in
and
jbe
int3
and
inc
lidtl
jb
lods
mov
dec
mov
cld
cmp
push
shrl
nop
dec
and
mov
xor
andl
cmpsl
imul
lahf
xchg
add
pop
xchg
sub
pop
push
mov
adc
mov
mov
out
negl
push
rol
in
adc
cmp
pop
loopne
scas
add
mov
mov
je
pop
push
inc
jns
cmp
aam
mov
mov
lods
mov
xor
ss
daa
jg
icebp
cmc
xlat
push
xchg
pop
push
shll
bound
push
mov
in
xchg
push
inc
or
imul
bound
popa
and
enter
xor
ds
outsl
jp
repz
bound
movsl
xor
stos
sar
jae
ucomiss
clc
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
dec
xchg
push
xor
jle
dec
lods
ds
xor
sbb
cmp
pop
call
pop
pop
repnz
adc
popa
mov
xchg
mov
cmp
xchg
xchg
es
shll
lods
decl
fbstp
cmp
jmp
mov
jmp
outsl
pop
jne
mov
and
ss
inc
stos
cmp
shrl
sub
insl
jbe
stc
ds
out
dec
xchg
mov
outsl
clc
adc
xor
mov
popa
add
xor
or
stc
divl
sub
shlb
jl
mov
scas
repnz
cmpsb
out
pop
pop
dec
xchg
mov
mov
cmp
fmuls
mov
and
mov
fwait
push
in
insl
int3
fwait
es
mov
pop
dec
jp
cmp
and
and
mov
popa
aad
iret
clc
aam
sti
daa
sti
enter
into
arpl
inc
inc
fidivrs
push
jge
fisubl
leave
pop
or
idivb
dec
mov
xchg
pop
and
aad
fnstcw
sub
push
xor
popf
push
js
jno
aad
mov
shlb
adc
add
shlb
gs
inc
ret
xlat
fnstenv
cmp
test
sbb
and
je
test
jno
adc
cli
sbb
lea
cmp
xor
sub
sahf
ret
sbb
jo
test
xor
or
fbld
add
fcmovu
rcrl
inc
xchg
std
dec
push
aad
dec
xor
jbe
mov
mov
outsl
xchg
imul
xor
lock
sti
loopne
pop
test
in
or
ljmp
sub
inc
xchg
dec
xchg
lea
in
loopne
jnp
adc
js
or
fidivrl
in
sbb
xor
adcl
adc
or
imul
loopne
sub
ss
daa
or
fnsave
pop
outsb
imul
les
mov
jb
repnz
mov
jmp
pushf
jmp
pop
dec
pop
mov
fsubp
cmpsb
sbb
push
sub
cmp
dec
fstpt
lea
test
inc
les
sbb
imul
add
add
cmp
into
lret
fucomip
inc
bound
rclb
adc
in
cmpsb
mov
xchg
add
in
jp
icebp
sbb
adc
pop
pop
pop
cmc
dec
out
notl
and
fucomip
test
pop
cld
mov
push
dec
xchg
xor
sbb
cld
mov
out
push
push
or
movsb
dec
aad
jae
dec
into
jbe
vxorps
lret
push
mov
push
sub
mov
mov
xor
xchg
imul
shr
inc
scas
xchg
dec
fdivrs
pop
or
jns
sbb
adc
mov
xchg
push
notl
cli
push
sbb
push
xor
lea
xor
jmp
sub
outsl
mov
inc
inc
subl
fnstenv
xchg
xchg
test
inc
push
add
les
movsl
jmp
mov
sti
cmp
cmpsb
enter
mov
int
adc
adc
mov
sarl
and
stos
and
pop
mov
and
add
mov
test
mov
les
jge
cld
mov
es
xor
dec
fidivrs
xchg
mov
or
jl
out
addl
mov
loopne
sarb
jmp
sahf
lcall
adc
and
jb
ljmp
scas
jle
jo
jle
loop
enter
jns
loope
mov
cltd
jae
dec
mov
gs
clc
mov
lds
bound
jmp
push
jle
mov
in
in
xchg
int
hlt
rclb
inc
iret
adc
add
je
loopne
sahf
jecxz
in
dec
dec
fcmovnb
sar
mov
pop
cmp
mov
ret
int3
bound
add
es
in
pop
adc
and
cld
aaa
jne
in
dec
cli
xchg
mov
push
int3
repnz
push
aaa
ret
loopne
add
sub
int
shlb
divb
mov
sub
and
mov
insl
movsl
jecxz
stos
imul
xchg
xchg
call
add
push
and
sub
out
popa
mov
xor
das
mov
lret
sub
mov
fcompl
mov
pusha
inc
and
sbb
jmp
stc
cltd
in
jnp
daa
std
sbb
push
or
mov
push
repz
leave
xchg
xchg
pop
fists
std
dec
jle
jmp
std
xor
xchg
cld
jge
xorl
inc
sub
and
rclb
popa
pop
cmc
and
xchg
xorb
sub
scas
inc
add
sbb
cltd
or
or
testl
lcall
adc
ljmp
imul
wbinvd
or
and
call
lods
inc
cwtl
xorb
adc
mov
mov
imul
lea
mov
push
lret
enter
mov
cld
scas
scas
cli
outsb
aaa
add
pop
nop
lods
sbb
ja
xor
cmp
lods
stos
and
push
loope
adc
fwait
jecxz
cmp
add
inc
mov
add
rcll
cmc
push
test
xor
mov
add
push
inc
in
xchg
notl
cmpsb
sbb
mov
dec
pop
inc
pop
cli
push
mov
ds
mov
jl
stc
push
mov
insb
jns
and
sti
scas
mov
inc
push
shrb
mov
mov
clc
popa
jl
pop
pop
mov
xlat
bound
cmp
push
add
pushf
mov
je
sbb
ds
inc
push
in
outsb
sub
clc
and
cli
andl
adc
push
xchg
mov
dec
and
sub
lret
test
xchg
popf
std
push
sbb
test
push
push
popa
loopne
push
push
mov
test
push
int
hlt
movsb
rep
xchg
stos
mov
xor
in
hlt
enter
mov
cmp
add
inc
outsl
test
sub
mov
std
xor
mov
lock
or
fcmovbe
add
dec
std
mov
push
jns
jecxz
pop
das
movl
xchg
push
xor
jle
adc
jg
test
ds
fs
ss
stc
fnstenv
and
cmp
stos
test
xlat
sbb
in
leave
test
cmpsl
jle
cmc
dec
pop
sub
test
aad
xor
into
mov
aam
jp
stos
or
cmp
jae
cltd
dec
out
dec
jne
jns
test
fstps
int
out
adc
negl
bound
sbb
cld
jg
rorb
sub
add
mov
scas
mov
sbb
ret
add
scas
push
fstpt
xor
fstl
mov
imul
xor
jge
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
or
gs
jle
jo
jle
push
push
call
fmul
repz
test
iret
incb
orl
xchg
subb
cmp
jp
popf
rolb
mov
inc
arpl
mov
aas
fistl
inc
test
pop
xchg
scas
mov
sahf
inc
mov
rorb
nop
pop
les
addl
dec
xchg
cwtl
dec
or
test
stos
pop
xchg
aaa
lret
push
into
shrb
je
in
inc
mov
iret
or
cmp
mov
push
mov
xor
jmp
cmpsb
shlb
pop
pushf
out
outsb
jp
arpl
fisubl
add
out
sbbl
and
push
push
vfnmaddps
dec
popa
pusha
sbb
dec
jmp
and
pop
cmp
and
loopne
dec
jge
adc
shl
add
jge,pn
xorb
clc
push
aaa
daa
nop
adc
cmpb
xchg
pop
fcomps
pushf
and
psubw
jns
fsts
cwtl
mov
imul
dec
es
pop
mov
jb
mov
daa
mov
cwtl
mov
clc
cmp
loopne
popf
std
out
sub
pop
call
jle
mov
fsubl
sub
ja
icebp
in
gs
mov
leave
mov
imulb
andl
mov
xchg
lods
sub
cmp
inc
pop
dec
xlat
push
imul
clc
ss
adc
mov
popf
jmp
mov
mov
cmp
ljmp
sbb
mov
pop
pop
cmp
movsl
mov
cld
dec
lgs
stos
xchg
jge
dec
neg
mov
add
mov
jns
adc
into
aaa
add
mov
das
lds
mov
cmpsl
call
std
pop
test
cltd
test
mov
xor
aas
bound
inc
xchg
call
ret
mov
pop
sub
xchg
int3
mulb
insb
rcrl
add
aas
or
mov
mov
mov
inc
xchg
add
cltd
icebp
stos
rep
pop
pop
xlat
sbb
cmp
movsb
fildll
ss
in
call
cmp
push
ja
jp
cmc
xchg
fcmovnbe
dec
xchg
nop
mov
inc
and
pop
mov
push
sbb
sub
pop
lret
sub
add
lea
sarl
xchg
sbb
sub
loop
sti
xor
popf
loop
push
lds
mov
je
insb
xchg
jle
or
aam
mov
sub
shlb
rorb
and
ljmp
rcll
jnp
add
jns
in
mov
mov
imul
stos
adc
sub
jge
imul
or
pop
mov
lock
gs
xor
xor
push
mov
lret
dec
lcall
and
and
shll
push
cmp
pop
je
push
cmp
mov
daa
or
sti
sbb
xor
cmc
dec
mov
aaa
mov
add
cwtl
adc
ss
dec
push
mov
out
jbe
add
cmp
movsl
aam
hlt
sbb
fwait
in
adc
jge
test
sahf
mov
stos
sub
mov
jmp
mov
pop
push
fstl
gs
pop
cmc
aam
bound
rcll
pop
clc
mov
add
in
push
or
lds
scas
add
pop
in
sbb
call
out
data16
xchg
test
cmp
in
pop
cmp
or
add
lret
xor
lea
je
add
sbbl
or
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
sub
xor
mov
jle
jns
jle
rcll
jmp
fldt
movsb
inc
cmp
out
lahf
push
std
or
sub
mov
mov
and
enter
mov
jae
lcall
test
jg
add
ss
dec
mov
mov
lahf
cmpsb
cmpsl
mov
addr16
mulb
jno
pop
in
sbb
push
push
addr16
push
lods
mov
mov
das
jp
ja
fsubrs
pushf
fimuls
in
inc
lret
outsl
cwtl
jecxz
pop
in
lods
cmp
imul
fs
es
mov
pushf
shrl
ds
lds
jl
mov
cli
mov
mov
ficoml
jno
push
push
xlat
loope
jo
lock
mov
push
push
jnp
add
insb
scas
and
dec
mov
sub
jb
hlt
sbb
pushf
jmp
mov
test
dec
fcomip
mov
mov
out
pand
out
gs
call
mov
sub
add
mov
mov
lahf
dec
mov
xchg
fimuls
iret
out
addb
outsl
jg
or
and
mov
xor
cltd
movsb
sbb
pop
xor
jae
in
mov
out
sbb
and
mov
push
int
cmp
or
fst
xchg
or
cmp
add
arpl
xor
repnz
mov
jp
and
sub
je
lahf
ss
or
rcrb
outsl
fwait
pop
add
mov
mov
push
push
jmp
ret
xchg
and
or
xchg
jecxz
inc
mov
lahf
bswap
popa
loop
cli
pop
iret
add
movsl
popa
lahf
mov
dec
mov
jae
add
or
ror
mov
mov
fsubs
jae
aam
inc
dec
les
mov
cmp
lods
jnp
sub
add
pop
fisttpl
popl
movsb
loop
in
jp
aaa
mov
lret
lods
sbb
sbb
rcr
pop
stos
pushw
pop
xorb
xlat
enter
inc
repz
mov
mov
sub
xor
in
pop
and
lea
in
in
mov
ja
inc
aad
mov
ret
push
lods
jne
mov
sub
pop
pop
adc
repz
xor
nop
adc
jo
das
pop
mov
ret
loop
stos
jne
jmp
cmpsb
jb
jle
pusha
fistps
pop
imul
out
inc
test
fisttps
or
or
ret
sub
dec
dec
xorb
and
mov
cltd
dec
push
ds
mov
test
push
loop
jbe
jge
je
les
mov
sub
stos
shrl
xor
js
rcrl
cmp
out
adc
xchg
aaa
push
push
push
ja
cmp
cmp
fnstsw
or
int
jno
xchg
cmpsb
imul
push
pop
movl
ficomps
mov
outsl
je
and
sub
adc
fistps
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
push
pushf
addr16
mov
jle
jns
jle
mov
pop
sahf
sbb
lret
mov
mov
lret
cli
xchg
adcl
sub
pop
mov
pop
aam
adc
fistps
cmp
sub
push
adc
sub
sub
sbb
add
ss
sbb
push
sub
out
in
lcall
insb
lock
or
jb
andb
out
sar
std
arpl
lods
adc
dec
pop
jns
cmp
mov
jb
std
in
pop
roll
aaa
xor
aad
mov
sti
iret
xchg
lahf
sub
cld
mov
call
adc
dec
inc
sub
sti
fbstp
mov
add
in
dec
mov
test
pop
insl
xchg
pop
or
outsl
insl
xor
aaa
jle
sarb
xchg
inc
sbb
pop
lods
dec
push
dec
mov
jo
or
mov
dec
mov
mov
cmp
mov
mov
mov
stos
dec
mulb
stc
ret
int3
bnd
or
addr16
lahf
xchg
into
rcrb
mov
or
stc
sbb
or
mov
dec
mov
push
mov
xor
mov
mov
out
and
xchg
nop
rclb
jo
stos
pusha
adc
mov
jge
ficompl
fucomp
cli
loope
xchg
inc
add
and
int
mov
mul
mov
cmp
pop
in
stos
mov
sub
xchg
mov
push
into
or
xor
js
add
and
divl
lock
rol
ret
mov
std
popa
aas
mov
or
cltd
imul
int
mov
addb
into
repnz
js
fnsave
out
rcll
fwait
aam
leave
scas
sub
lea
mov
lret
xchg
shlb
xor
mov
popw
aad
cli
xor
sub
sub
imul
mov
int
outsb
jmp
cltd
je
stc
call
stos
fldl
jmp
lods
fdiv
and
push
add
or
movsl
test
pop
bound
call
shlb
jmp
or
mov
lret
cltd
xchg
push
push
dec
dec
into
sbb
mov
mov
cmpsl
sbb
ret
inc
sub
test
clc
out
sub
mov
xor
outsl
rorb
pop
xchg
sti
clc
aad
stos
sub
mov
into
lret
pop
sub
mov
insl
and
sahf
inc
cmp
mov
iret
push
mov
pop
jl
dec
jno
aam
pusha
adc
pop
stc
or
int
mov
xchg
mov
sbb
lock
mov
movq
fadds
xchg
test
int3
insb
dec
sub
cmp
push
hlt
loop
test
ret
sbb
mov
add
push
add
xor
xor
gs
mov
pop
push
adc
sti
or
add
xchg
dec
jle
mov
add
loopne
daa
mov
dec
or
xor
iret
inc
inc
add
movl
inc
inc
add
rol
cmova
push
add
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
test
jle
hlt
jns
jle
dec
incb
or
add
cs
adc
pop
pushf
repz
or
ret
push
jmp
mov
xchg
jle
icebp
jae
icebp
insl
pop
loope
pop
add
push
mov
push
scas
and
mov
nop
sbbl
jmp
stc
xchg
xchg
pusha
outsl
inc
ds
xor
mov
mov
in
in
out
or
mov
loopne
lcall
das
cmp
push
mov
and
inc
mov
pop
and
mov
fcompl
push
xor
sbb
lahf
loopne
dec
movsb
mov
and
cmp
icebp
je
add
adcb
or
mov
pop
mov
pusha
cmpl
stos
data16
out
xchg
mov
inc
stos
adc
push
dec
dec
lods
aas
mov
mov
sbb
jge
lret
add
xchg
jno
push
pop
aas
test
dec
sub
dec
xchg
int3
cmpsb
mov
loope
out
fimull
or
xchg
lret
cmc
fdivs
and
fucomi
adc
loopne
inc
xchg
xchg
mov
mov
dec
dec
lahf
xchg
cmp
push
icebp
push
lret
push
xorl
xchg
or
inc
negl
test
dec
jp
push
cli
jno
out
jne
in
gs
mov
hlt
mov
dec
enter
subl
scas
in
push
xlat
pop
jecxz
push
lret
dec
adc
jge
xchg
cld
push
mov
popf
in
cmp
jmp
sbb
pop
js
es
dec
test
cmp
xchg
inc
dec
lods
mov
xor
fidivs
pop
rcrl
dec
or
sbb
pop
psraw
sahf
mov
adc
imul
xchg
mov
cs
popf
aaa
sbb
mov
arpl
orl
and
or
scas
bound
or
int
lret
dec
das
sti
and
or
jb
pop
int
pop
fwait
int
dec
and
aas
pusha
mov
add
mov
lock
jg
sti
fmul
ss
lds
rolb
xor
test
test
cmp
roll
mulb
scas
shlb
xchg
outsb
fwait
pop
loope
pusha
addr16
push
dec
xchg
bound
jl
sub
pusha
mov
xchg
ds
aas
inc
adc
adc
mov
mov
dec
xchg
aad
xor
lret
jg
clc
das
test
ja
fs
aad
loope
sub
mov
pop
iret
dec
or
sub
lret
mov
push
into
ds
ljmp
xchg
jb
sub
aas
xchg
dec
or
jp
or
cmp
test
sbb
aaa
sar
ja
push
pop
es
push
dec
mov
lahf
fsts
lahf
inc
xor
jge
and
cmpsl
pop
and
andb
sub
cmpb
movsl
pop
adc
jo
push
mov
xlat
jge
pop
stos
aam
outsl
pusha
jb
lods
jnp
jb
dec
jns
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
xchg
xor
ret
cmpb
jle
mov
mov
push
jle
or
push
outsb
xchg
fdiv
fisttpl
loopne
rolb
out
cmpsl
pop
out
inc
jle
les
push
ljmp
inc
test
cmpsb
add
inc
push
sbb
in
pop
cmp
jmp
add
out
shrb
adc
test
sbb
bound
imul
repnz
loop
daa
and
xchg
xor
insl
aad
leave
jnp
add
ret
xchg
std
jmp
or
mov
sbb
xchg
std
or
cmp
int3
minps
push
xchg
insb
mov
test
iret
out
dec
orb
data16
arpl
fisttpl
mov
mov
inc
inc
mov
or
cld
int
loop
arpl
mov
inc
insb
jae
nop
ja
loop
test
popl
pop
into
jb
nop
mov
add
xor
mov
cltd
pop
mov
mov
out
sub
cwtl
subb
jb
push
nop
inc
mov
movsb
mov
push
ljmp
out
addb
mulb
aas
nop
xchg
fcompl
cmp
jb
shrb
dec
aaa
roll
dec
inc
push
jno
xlat
mov
fidivrl
xchg
enter
arpl
leave
mov
in
pushf
pop
pop
cmpsl
decl
or
ror
cs
cmc
cmp
bound
jg
xchg
fbstp
fidivrl
mov
in
leave
inc
into
lock
in
xor
ds
cmpsl
mov
sti
mov
mov
push
jmp
repnz
push
xor
and
jl
cmp
push
incb
rcrl
mov
insl
shll
or
sti
shrb
rclb
sub
lahf
inc
xor
movsb
movsb
jge
leave
cmovae
adc
ret
aas
in
cmp
clc
iret
jecxz
pop
outsb
das
imul
sbbl
in
cmpsb
xor
xor
in
ds
xor
pop
out
adc
and
rcr
cltd
sbb
out
aad
mov
cwtl
push
cmp
ret
mov
in
pop
ret
cmp
pushf
test
and
sub
es
iret
movsl
cwtl
gs
sub
cwtl
outsl
xlat
push
out
cs
xor
xor
sub
cwtl
das
jbe
pop
jecxz
pop
lock
sahf
sbbb
fnstsw
cwtl
das
cmpsb
mov
cmpsb
mov
stos
push
mov
stos
cwtl
pop
fadds
es
fisubrs
cltd
jnp
dec
or
insl
jo
rcl
sbb
dec
nop
int3
es
enter
gs
push
or
dec
lret
sbb
mov
jb
fs
outsl
pop
sbb
cmp
push
inc
jp
rcl
mov
or
xchg
jle
mov
push
ror
dec
popf
add
mov
xchg
insb
sub
loop
es
in
ret
in
push
icebp
filds
cmp
lods
pushf
adc
ret
stos
out
dec
cwtl
test
add
push
jmp
mov
push
pushf
aas
cld
cli
or
or
adc
mov
movsb
sarl
cmc
xchg
les
and
divb
mov
xor
pop
jmp
push
clc
clc
mov
test
adc
gs
js
jle
hlt
jns
jle
mov
repnz
cmpsb
les
addr16
mov
movsb
mov
xor
aam
xlat
ja
stos
fwait
popa
push
ror
pushf
inc
ss
stos
push
pop
pop
ss
xlat
xchg
mov
inc
jl
xchg
in
cmp
mov
fsubl
xchg
repnz
sbb
fldpi
addb
pop
movsl
rolb
mov
mov
jl
inc
or
stos
cmpl
sbb
push
repnz
daa
inc
push
mov
movsb
xor
les
lods
ret
and
xchg
mov
add
insb
hlt
xor
and
dec
sbb
inc
jp
out
jne
jge
push
inc
push
pushf
int
enter
xor
jmp
jecxz
test
outsb
and
imul
and
das
inc
cmp
in
std
ss
shrb
ret
xor
cmpsb
and
jp
and
int3
fbstp
xor
repz
pusha
push
stos
test
loop
mov
repnz
ret
aam
jbe
arpl
push
jo
pop
pop
fcoms
sti
arpl
sub
pop
das
or
sbb
scas
sbb
scas
pop
dec
pop
repz
movsb
ucomiss
loopne
aad
inc
loop
idivb
sub
lahf
fcom
xchg
outsl
fldt
dec
pop
loop
dec
lahf
pushf
gs
pop
std
pop
mov
outsl
adc
and
mov
xchg
lds
xchg
xor
mov
das
xor
cmp
lds
push
stc
sbb
jge
jmp
popa
in
jge
out
mov
sbb
rorb
pextrw
dec
mov
or
mov
mov
outsb
mov
mov
enter
stos
mov
roll
and
push
call
or
lahf
mov
enter
sub
mov
sbb
xor
add
sub
lahf
pop
inc
clc
shrw
fcoms
iret
sbb
push
lret
inc
int3
fwait
cs
jle
jns
lret
jb
loop
mov
jp
rorb
jne
pop
cmp
mov
mov
mov
add
aad
je
call
inc
cmpsb
mov
dec
push
dec
hlt
cmp
jo
loop
out
sar
cld
push
bsr
subb
jmp
mov
int3
pop
lods
sbb
adc
cltd
mov
shrl
xor
subl
int3
fiadds
mov
jge
shll
xchg
and
dec
pop
sahf
push
mov
pop
sarl
xchg
outsb
jp
js
cmc
sti
mov
lcall
pop
xchg
inc
or
fwait
in
sbb
bound
mov
push
and
insb
adcb
sbb
push
repnz
mov
mov
lea
out
and
add
sub
repnz
jle
mov
inc
dec
jg
pop
xlat
mov
mov
repz
xor
inc
fldcw
cmc
pusha
imul
fidivl
lods
cld
mov
pop
mov
and
adc
cmc
jecxz
xor
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
je
dec
and
inc
jle
pushf
jg
jle
sbb
cmpsb
cmc
mov
call
push
xor
add
lcall
jecxz
push
lods
pop
mov
rcrl
pop
pop
arpl
outsl
mov
popa
js
js
adc
icebp
jns
pop
lcall
mov
aaa
pop
or
js
mov
xor
dec
call
test
pop
dec
test
push
in
gs
pop
inc
xchg
adc
test
movsl
pushf
ja
add
testl
or
xorl
hlt
cmp
cmpsl
sahf
lea
in
add
sub
push
or
jnp
repnz
sbb
ret
jge
push
repz
inc
mov
fsub
imul
xchg
xchg
push
jecxz
sbb
adc
into
pop
jecxz
push
int3
mov
xor
xchg
dec
sub
shll
cwtl
inc
push
dec
popf
loop
jne
or
stos
sbb
mov
push
xchg
clc
mov
lods
inc
not
out
or
push
rolb
dec
lahf
filds
and
popf
pop
and
mov
mov
add
cmp
pop
push
mov
lods
stos
xchg
inc
lret
inc
mov
mov
lcall
sub
pop
shrl
push
lods
add
rdpmc
les
lcall
adc
cmpsb
imul
jl
xchg
pop
xchg
lods
aad
rcll
mov
jo
cmp
cmp
dec
jo
loopne
xlat
es
mov
cltd
push
es
mov
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
outsl
js
out
adc
jle
pushf
jg
jle
adc
mov
or
sub
xor
repz
push
mov
pop
bound
mov
mov
cmp
inc
push
or
enter
mov
cmp
push
push
jbe
out
mov
dec
fisubs
push
call
loope
cmp
mov
test
dec
jns
insb
insb
mov
add
xor
adc
adc
js
jle
verr
mov
fsubrl
push
add
xor
fiadds
sub
xor
fcmovne
in
and
das
hlt
ret
mov
mov
rclb
add
ror
add
adc
rorl
cmpsl
push
xlat
in
decb
adc
and
adc
movsb
sub
cmp
loop
mov
sbb
add
fs
loop
mov
ffree
std
ret
xor
movl
pop
fwait
daa
mov
mov
js
add
aas
jl
pop
popf
pop
add
mov
scas
les
or
xchg
fnstsw
xchg
pop
ret
outsl
int
into
shrb
lahf
xchg
adc
imulb
mov
out
test
sbb
fidivl
mov
sub
lock
imul
xor
push
jae
push
les
jo
lret
fwait
add
mov
mov
stc
push
sbb
fadds
sarl
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
inc
cmp
stos
inc
jle
popf
js
jle
je,pt
dec
mov
fwait
gs
mov
in
add
test
mov
dec
mov
and
popa
ret
negb
cmp
ljmp
pushf
imul
in
cmpsl
xchg
xchg
add
gs
mov
mov
arpl
js
rcrb
test
or
push
push
adc
mov
cmc
mov
ds
pop
pop
sub
insl
cmp
pop
cmc
adc
mov
jb
mov
fptan
xchg
xchg
mov
jne
mov
mov
and
jns
js
lahf
testl
es
adc
jmp
outsb
xor
mov
addb
lahf
mov
arpl
dec
fs
cs
subl
shll
mov
roll
popf
daa
push
int3
repnz
andb
mulb
dec
push
mov
adc
or
lret
cmp
push
sbb
shrb
or
sahf
roll
mov
adc
pusha
xor
mov
push
inc
aad
imul
or
push
mov
decb
nop
pop
lock
or
and
ds
xor
sbb
outsb
push
cmc
into
repnz
push
in
xchg
xor
das
cld
xchg
xlat
insb
sbb
xchg
pop
sbb
insb
push
shrb
inc
pcmpeqw
fprem1
arpl
in
cmp
jle
mov
pusha
xchg
cmpl
and
arpl
mov
stc
sub
inc
pop
jge
sbb
fidivrs
arpl
gs
int
cli
es
cmpsl
sahf
dec
push
push
push
or
ficompl
xchg
lds
loop
js
dec
jge
push
push
insb
fs
lds
and
sbb
jns
adc
push
jmp
pop
sub
in
adc
add
sahf
aam
jo,pt
cld
and
out
mov
push
xchg
xor
and
add
std
cmp
mov
or
fiadds
loope
insb
push
push
jb
aaa
hlt
lea
add
jp
xchg
xchg
jp
xlat
cmp
insl
insb
jns
cmp
mov
inc
xchg
pop
xlat
stos
add
ja
mov
fbstp
sub
repnz
adcb
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
sbb
push
push
mov
daa
out
cs
and
in
jp
dec
stc
dec
scas
scas
mov
data16
je
or
lahf
stos
and
int
sbb
lret
pop
mov
push
testl
dec
movsl
sub
int3
in
lea
repnz
hlt
mov
cmc
sub
xchg
cmpsl
adc
into
pop
call
fists
mov
cmpsb
inc
sbbl
xor
jmp
jbe
les
out
pop
sub
int3
mov
push
lods
push
sub
pop
jmp
add
int
inc
loope
lahf
or
nop
in
mov
mov
out
imul
data16
clc
stc
aaa
repnz
mov
and
fisubrs
mull
jmp
or
push
adc
stos
ljmp
cmpsb
loope
int
mov
inc
inc
mov
mov
lea
inc
push
mov
sbbl
sbb
ss
fmul
jmp
pop
ret
mov
pop
jo
xor
std
and
pop
fcomps
cs
mov
jae
jmp
imul
test
adc
mov
movsb
mov
outsl
out
aaa
rcl
lods
enter
enter
push
loope
cmp
ja
xor
cmc
mov
mov
xor
push
push
ret
adc
lcall
es
js
fstpt
cmp
xor
sub
push
leave
pop
inc
loope
sti
xlat
jnp
daa
out
sbb
xchg
add
adc
shlb
outsl
ljmp
cmpb
jbe
mov
es
jp
xor
sub
or
test
mov
and
in
mov
cmpsl
into
adc
xor
loopne
iret
pop
js
sub
mov
pop
mov
mov
or
fdivl
mov
sbb
mov
inc
mov
dec
xor
pop
jne
push
hlt
jae
imul
mov
and
push
jecxz
mov
mov
rcll
jnp
xor
dec
dec
das
mov
xor
xor
int
daa
fwait
loop
int
add
in
mov
xchg
sbb
in
and
fsubrl
lods
push
jmp
scas
sbb
pop
jp
cmc
outsl
pop
push
cs
je
fldt
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
daa
stos
push
js
jle
xchg
dec
or
and
push
mov
sbb
dec
mov
xor
mov
mov
inc
rcrb
or
fimull
rcrb
daa
inc
mov
ljmp
flds
fimull
and
cwtl
lods
cmp
cmc
push
andb
mov
jns
pop
aam
mov
test
dec
hlt
jp
xlat
dec
rclb
jg
mov
push
loope
nop
pop
pop
leave
fcomip
xchg
push
mul
and
push
xchg
inc
test
in
sbbb
test
and
out
cmp
loopne
cmp
or
loopne
push
jmp
sbb
mov
sbb
or
lret
xchg
jl
test
push
movl
jbe
test
fcomip
add
pop
aas
or
fisubrs
sub
jecxz
mov
dec
jp
stos
mov
repz
sub
sar
out
ret
jb
mov
mov
ret
rcl
call
jecxz
pop
fsts
out
xchg
es
pushf
lds
data16
or
mov
aas
es
and
int
sbb
push
sub
xor
roll
mov
mov
ret
aas
aas
push
outsb
push
pop
add
outsb
outsl
lret
lret
nop
mov
sbb
fbstp
xor
fistpll
mov
dec
stos
aas
cmp
cmp
int3
sub
jb
jmp
pop
dec
xchg
sub
data16
xchg
sub
movsl
pop
inc
mov
and
and
dec
mov
mov
enter
divl
das
push
pop
addr16
jnp
es
jl
test
xor
or
mov
xor
lcall
les
add
shlb
pop
xorb
frstor
pop
sub
mov
mov
add
mov
outsl
xchg
insb
cmc
adc
in
cmp
push
outsl
imul
addr16
pop
fsincos
insb
jns
push
xor
les
mov
imul
mov
ret
test
sbb
adc
jno
daa
inc
and
xor
or
pop
outsl
push
xor
stos
scas
stos
mov
adc
movsb
insb
fcomip
bnd
sub
sub
test
into
or
dec
ret
dec
jl
sub
lock
push
adc
push
cli
sbb
cmp
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
cmp
jle
pop
jg
jle
sbb
fidivs
jp
nop
xchg
pop
cmpsl
add
testl
push
ret
cmp
inc
cmpsb
lock
xchg
aaa
cmp
push
cltd
push
mov
jne
out
sbb
dec
dec
xor
dec
jle
loope
loopne
leave
push
sub
cli
push
mov
sub
mov
arpl
dec
lret
sub
xchg
sub
push
lcall
mov
repnz
xchg
push
je
jecxz
in
dec
push
ss
xor
and
ret
mov
sub
push
out
into
dec
aad
add
mov
ja
ds
imul
add
add
mov
dec
arpl
std
jae
jb
out
pop
push
push
push
lcall
into
mov
jge
ds
mov
sbb
xchg
push
ret
mov
and
add
jb
fdiv
and
xor
add
inc
ss
lods
sub
sub
fstl
lock
push
add
cs
pop
lahf
mov
lock
cmpb
xchg
add
pop
or
cld
push
out
add
icebp
aas
push
std
jg
ss
xor
loope
or
push
adc
scas
sub
ret
mov
int
push
xchg
add
rcrb
aaa
pop
cltd
lods
cmp
push
jae
mov
add
rol
push
pop
call
sbb
xor
xor
lahf
jo
repz
addr16
pusha
mov
push
es
mov
inc
sbb
mov
incb
cmp
sub
in
pop
xor
adc
lret
jae
jae
mov
sub
push
xor
fimuls
sub
jns
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
pusha
psubusb
ljmp
jle
jae
repz
aam
xor
jnp
cld
fiaddl
ds
sbb
movsb
jge
inc
loope
sub
inc
in
iret
sti
adc
mov
and
mov
fucomi
cmpsl
jno
std
nop
inc
sbb
mov
jbe
add
mov
jno
movsb
popa
sub
xchg
sbb
cmpsl
seta
imul
pusha
mov
bound
gs
xlat
mov
adc
iret
cmc
adc
lods
mov
ljmp
inc
adc
fnstenv
mov
mov
pop
call
in
pusha
es
popa
stos
mov
push
scas
cmp
nop
loop
loop
mov
cmp
lock
mov
popa
dec
cmpsb
test
mov
sahf
cmp
push
pop
daa
push
fisttpll
mov
dec
jae
mov
icebp
aas
test
js
stos
mov
enter
daa
push
add
inc
cmp
adc
pop
mov
popa
das
dec
shrb
dec
adc
mov
ffree
inc
jbe
mov
pop
test
js
int
imul
out
call
int3
test
rcll
mov
les
fildll
mov
sbb
jns
lret
andl
stos
sub
std
sub
aam
adc
cmp
js
push
orl
fcmovb
fisubrs
clc
ss
mov
adc
add
cmpsl
gs
push
int
sub
xor
and
pop
xchg
leave
cmp
mov
mov
xor
jbe
imul
fsincos
push
and
jg
shll
adc
into
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
pop
enter
push
jle
pop
jg
jle
out
out
loop
xchg
push
mov
push
pop
repnz
ret
sub
enter
sub
xchg
mov
inc
push
jl
in
or
movb
dec
dec
push
sub
stos
mov
enter
mov
xchg
int
sub
push
mov
mov
cmp
popa
stos
test
movsb
jmp
mov
stos
out
test
lret
add
mov
rcrl
jb
aam
jb
test
stos
dec
mov
inc
jge
inc
rorw
adc
int
mov
xchg
push
ds
cmp
and
xlat
mov
add
cmp
nop
out
cmp
cmp
pop
lahf
add
lock
aas
lret
arpl
daa
push
jp
lods
test
xchg
adc
stos
les
lret
push
or
fildll
or
or
ja
inc
dec
or
push
sub
in
lods
daa
push
das
loopne
ficompl
out
ss
push
xchg
push
xchg
push
fcoml
and
inc
imull
cmp
sbb
addr16
push
push
xor
cwtl
mov
lret
add
fbstp
cmp
jge
cli
fmuls
bound
dec
dec
mov
fldt
mov
mov
add
lea
xor
mov
inc
jge
shll
push
adc
in
ljmp
fwait
or
fmuls
sbbb
xlat
push
mov
lds
push
push
and
sbb
sarb
cmpsb
test
mov
cmp
jno
ret
xchg
data16
orb
sbb
pop
dec
pop
nop
imul
in
mov
pop
cltd
adc
cmp
imul
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
and
shll
push
jle
pop
jg
jle
mov
imul
mov
ficompl
mov
xchg
jg
je
aaa
cmpsl
xchg
lds
mov
mov
inc
and
jp
je
cld
loop
push
adc
cmpsl
lcall
loop
js
xchg
pop
js
jl
jns
or
mov
xor
mov
lock
cmpsl
jmp
mov
sahf
add
pop
mov
dec
jle
and
add
sbbb
cmp
mov
rorb
stc
push
mov
mov
and
insb
xchg
jo
pop
out
daa
aad
lods
dec
inc
data16
es
mov
out
xchg
mov
inc
fs
xorl
les
fdivl
scas
aas
push
pop
jns
mov
jb
cltd
sub
rcll
mov
outsb
pop
inc
push
xchg
xchg
pop
leave
cmp
pop
fmulp
subb
aad
xorb
add
lahf
movsb
cwtl
insb
xor
call
cs
int3
das
call
inc
add
xor
outsl
pop
mov
jmp
add
and
mov
jbe
or
mov
es
dec
push
repnz
fimull
mov
pop
cwtl
push
pop
xchg
pop
xor
fmull
pop
bound
pop
add
push
xor
hlt
xchg
push
mov
xor
mov
lea
cld
in
loope
pop
stos
rclb
xchg
pop
mov
pop
fnsave
push
sbb
and
std
mov
add
xor
sub
jle
and
cwtl
mov
bnd
jb
dec
xchg
ja
mov
add
mov
mov
xor
pop
gs
fcoml
mov
mov
jmp
cmp
jne
xchg
mov
pop
push
popf
cmc
adc
jle
jg
jle
xchg
mov
pusha
push
mov
mov
into
ja
out
popf
dec
in
popf
xchg
mov
inc
aam
aaa
dec
or
loope
gs
mov
out
cltd
sub
adc
stos
mov
cmp
sbb
outsl
gs
in
pop
fcoms
fstp
xor
sbb
out
adc
pushf
insb
mov
xlat
and
pop
dec
cmp
hlt
xor
mov
shlb
inc
lea
cmp
ja
xchg
cmc
stos
mov
mov
testl
bound
call
repz
sbb
jge
or
cmpsl
lret
roll
int3
push
scas
xchg
out
decl
out
idivb
adc
lahf
inc
mov
lcall
in
fistl
xor
pop
xor
movsb
cwtl
cmpsb
mov
dec
fcmovbe
cmp
or
sub
pop
push
fs
fsts
testl
fnsave
or
insb
dec
enter
sbb
sbb
into
xchg
push
adc
sub
mov
push
aam
jg
xor
push
sbb
pop
cmp
xchg
jge
sub
cmpsb
cmc
jle
into
dec
sub
or
xchg
sbb
push
iret
xchg
scas
sbb
and
or
insb
adc
jle
inc
xor
jns
dec
push
pop
pop
dec
loope
out
mov
xchg
fmul
and
sub
push
sbb
cmpsb
push
xchg
ret
jle
icebp
and
std
jmp
sub
int3
xor
inc
outsb
in
int3
test
and
scas
shrl
repnz
repnz
and
daa
ret
cmpl
xor
xchg
out
pop
shll
jl
movsb
mov
daa
outsl
leave
aas
stc
je
push
fs
sbb
or
and
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
int3
je
pop
jle
pop
jg
jle
bound
ror
inc
mov
iret
adc
or
sub
cmp
xor
mov
or
call
xor
in
jle
jge
nop
jb
out
ucomiss
std
fwait
mov
sbb
cmc
cmpsl
sub
mov
ret
push
out
push
add
or
xchg
xor
movlps
loope
and
stos
mov
mov
shrb
add
test
repnz
sbbl
xlat
push
fimull
sbb
mov
push
stc
daa
es
insb
sbbl
mov
inc
inc
jno
mov
cmpsl
mov
adc
into
insl
cmc
loop
sbb
mov
push
cmp
inc
mov
outsl
stc
test
push
ret
xchg
rcll
mov
fucom
jnp
sub
cmpsl
dec
popf
mov
sbb
xor
addb
cmp
mov
bound
or
outsl
mov
jl
fmuls
jo
in
mov
mov
mov
pop
mov
push
fwait
sbb
adc
imul
or
add
and
test
mov
orl
fidivrl
ret
dec
fucomip
adc
inc
mov
dec
ret
mov
je
bound
ljmp
mov
push
fucom
mov
cwtl
or
sbb
out
lret
fs
das
or
mov
fsubs
in
aam
ret
mov
mov
dec
inc
in
xchg
shll
loope
xchg
or
adc
jecxz
pop
sub
sbb
test
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
jmp
dec
lret
jle
pop
jg
jle
cmp
xchg
leave
xor
bound
xorb
jecxz
and
cmp
jo
adc
sub
gs
dec
push
popa
add
dec
dec
fstpt
adc
cld
movsl
cmovl
es
xchg
inc
adc
fmuls
addr16
adc
inc
sti
or
pop
mov
loopne,pn
sbb
jmp
add
xchg
push
jns
add
push
data16
test
sub
mov
sbbb
sahf
lock
dec
mov
dec
hlt
es
repnz
lahf
sub
jo
add
mov
lcall
push
popf
mov
pushf
push
and
movsl
jno
pushf
adc
cltd
or
aas
and
or
aam
pushf
and
xchg
addr16
mov
xor
int
xchg
mov
and
jb
xchg
es
push
mov
cltd
js
adc
and
pusha
ds
push
jne
mov
mov
dec
dec
in
ds
cmp
mov
in
mov
loop
jo
pop
je
and
sbb
das
xor
inc
add
aaa
loop
xor
dec
std
decb
add
xchg
add
dec
sar
xchg
xor
mov
cwtl
or
or
cwtl
lahf
mov
cmc
xor
pushf
cmpsl
pop
add
ljmp
orl
dec
ljmp
popa
adc
jmp
scas
mov
aas
sub
insb
sub
jle
mov
push
daa
push
xor
mov
jp
jl
pop
xlat
out
xor
push
and
popa
mov
jl
adc
xchg
fbstp
cwtl
mov
xor
jmp
aaa
cmp
cltd
int
jno
ja
loope
dec
or
jle
pop
jg
jle
add
out
adc
dec
cmp
lea
leave
imul
or
mov
lahf
popf
ret
mov
call
ret
mov
push
stc
inc
xchg
lcall
jmp
in
aad
stos
ds
dec
add
lock
cmp
sti
and
jmp
xchg
jle
mov
pop
das
and
fcmovb
jno
ss
shll
mov
bound
xchg
sahf
cwtl
std
call
cmp
jg
popa
adc
imul
and
cmp
stc
sbbl
and
movsb
jecxz
aaa
pushf
sarb
fwait
inc
dec
push
sub
mov
mov
sarb
jp
pop
mov
lret
ds
cmp
push
push
cmp
ljmp
insb
icebp
mov
stos
mov
cmp
push
je
mov
xchg
data16
pop
repz
xor
sbb
inc
inc
push
pop
push
addr16
mov
lcall
ss
fdiv
cmp
adc
insb
cmp
pusha
in
mov
or
cmc
xchg
sub
inc
sbb
sahf
popf
jmp
dec
push
and
hlt
xchg
jno
ds
aas
jmp
sub
divb
cld
cwtl
cmp
int3
sub
bound
mov
sub
adc
push
data16
int
loope
dec
xchg
push
cs
dec
bound
pop
or
xor
loopne
mov
je
mov
xchg
cmp
xchg
mulb
fcmovne
dec
mov
adc
push
cmc
mov
faddl
pushf
xchg
test
pop
std
mov
cmp
inc
test
fldl
cmp
mov
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fcomps
xor
jle
pop
jg
jle
cld
pusha
pop
xor
mov
mov
jmp
jl
rclb
popf
pushf
add
sub
gs
mov
jg
std
add
lock
fwait
cmc
pop
cmpsl
outsl
insb
rol
ds
and
lods
jl
in
push
xchg
out
pushf
xchg
sbb
gs
sub
rcrb
data16
adc
mov
mov
mov
sub
fwait
leave
add
and
pop
or
sbb
jge
icebp
lds
mov
stos
shl
data16
fistl
out
mov
xlat
adc
lret
scas
test
mov
inc
stos
inc
jno
mov
iret
pop
cmc
mov
dec
xchg
push
imul
add
add
test
jbe
jle
mov
ret
je
clc
bound
ljmp
std
in
jge
fnstsw
sahf
lock
in
sbb
add
pop
hlt
rcll
and
push
jmp
mov
cmp
and
loope
sub
push
adc
loop
scas
leave
add
push
fs
mov
mov
int3
dec
mov
aas
mov
sbb
js
add
mov
dec
int3
mov
aas
fsubrl
divb
shlb
cli
loop
inc
inc
mov
dec
sti
jmp
in
out
pop
cli
aaa
in
loopne
mov
add
cwtl
or
nop
cmpsl
push
dec
ret
lods
dec
sub
cmp
inc
xor
cld
adc
aaa
or
pop
cmp
sub
mov
movsb
and
sti
cmpsb
fnstcw
ret
daa
pop
repz
xor
ret
cltd
xor
pusha
inc
or
fst
inc
dec
test
adc
and
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fnstenv
in
add
add
add
shr
aas
add
pop
inc
std
mov
shl
jmp
inc
mov
mov
int
sub
fisubl
aam
xchg
cmc
inc
in
push
mov
add
xor
mov
xchg
xor
push
mov
mov
xor
inc
jo
push
mov
cmp
mov
and
push
pusha
and
sbb
push
popf
xor
test
mov
fadds
fcmovb
add
movsb
mov
or
loop
das
out
xchg
jnp,pt
mov
mov
mull
cld
pop
lsl
lea
xor
mov
test
aad
out
mov
push
into
jae
xor
inc
call
push
fstl
adc
sbb
xor
add
add
push
pusha
in
jle
cs
pop
ret
cmc
xor
add
add
ret
or
mov
pop
mov
and
dec
mov
scas
out
or
adc
lcall
test
jmp
mov
pop
stos
call
cli
mov
dec
cmp
fs
fldpi
lods
jmp
xchg
pusha
sub
lds
aaa
rorb
dec
std
add
pop
add
or
and
pop
push
out
push
rclb
lret
xchg
dec
or
test
into
sub
mov
test
push
sub
xchg
mov
addb
adc
mov
pop
mov
jg
sub
ret
das
jo
pop
dec
jb
push
aas
push
inc
xchg
incb
jecxz
push
or
es
push
mov
jge
pop
popl
in
lods
or
sub
icebp
xor
out
jge
xor
fbstp
dec
xor
mov
icebp
fldl
add
add
add
adc
movsl
xchg
add
cmc
add
add
cltd
lea
hlt
fsts
and
mov
lret
out
jmp
lret
mov
ljmp
arpl
shlb
jbe
mov
pusha
cld
add
xchg
push
fistpl
dec
xor
clc
int3
jmp
popa
out
fincstp
mov
es
pop
dec
mov
idivb
add
ret
inc
jnp
push
pop
ds
clc
gs
jecxz
arpl
cli
sbb
mov
pop
jg
dec
and
add
fs
push
es
popf
mov
mov
xor
mov
mov
nop
pusha
aam
push
sbb
sbb
sub
add
ret
je
cmp
lahf
je
insb
imul
xchg
sti
jg
jne
jp
xchg
shlb
sbb
xor
xchg
inc
push
dec
mov
loope
xchg
shll
mov
sub
add
add
mov
stos
dec
out
shrl
call
add
mov
out
enter
aam
stos
cmp
idiv
cmp
imul
jle
fisubrs
jo
cmp
je
test
inc
dec
imul
push
inc
aad
iret
xchg
enter
lods
shr
adc
sbb
fs
dec
rcll
loopne
cwtl
ljmp
nop
and
movsl
testl
arpl
xlat
repnz
dec
jmp
ja
mov
jmp
lahf
icebp
mov
dec
icebp
out
fdivr
cwtl
out
shll
xchg
dec
mov
stos
or
rcll
andl
leave
dec
test
je
dec
inc
xchg
mov
push
cmpsb
bswap
mov
test
xchg
subl
add
enter
xor
xchg
sub
aam
and
add
add
inc
or
leave
bnd
repz
test
pusha
jmp
add
inc
inc
mov
ret
and
movsl
shlb
add
shll
push
fmuls
mov
cwtl
xchg
dec
and
pop
ja
xlat
mov
aas
cld
sub
mov
popa
pop
popa
ficomps
or
xor
or
mov
jecxz
cld
sub
and
inc
and
and
ret
test
cmp
je
ljmp
rclb
or
add
and
fsubrs
inc
add
insb
xchg
fcoms
push
mov
pushf
sub
lock
xor
xorl
mov
or
jbe
sbb
loop
cmp
push
add
push
adc
jb
and
or
and
fwait
jo
popf
mov
mov
or
cmpsb
adc
mov
aad
mov
fistl
mov
js
adc
add
cmc
insl
cmc
out
lcall
sub
stc
movsb
xor
push
ljmp
push
sub
dec
jge
mov
lds
adc
xchg
adc
adc
clc
cwtl
call
les
xchg
imul
fiaddl
xor
or
mov
into
lock
imul
stos
sbb
test
mov
push
movntq
cmp
adc
inc
lods
dec
cmpsl
cltd
inc
xor
adc
pop
jge
add
mov
jno
pop
xchg
out
call
inc
ror
sub
cli
add
add
lods
push
into
or
pop
outsl
repz
pop
insb
dec
mov
push
inc
in
fdivl
and
push
es
aam
mov
dec
addps
std
push
repnz
ret
jmp
out
add
lods
sbb
push
test
lock
mov
mov
movsb
ret
add
add
outsl
jle
dec
xchg
call
cld
dec
jmp
add
add
add
mov
xchg
mov
aam
lds
fs
addr16
fs
sub
loope
sub
push
or
fld
dec
cli
pop
ja
test
cwtl
xlat
adc
mov
scas
testb
lahf
fstpt
jnp
inc
xor
inc
push
xchg
lods
mov
or
mov
in
xchg
inc
sbb
arpl
dec
push
jne
jg
aas
sub
pop
call
adcl
aam
int
sbb
test
push
shrb
xchg
jl
pushf
lahf
xchg
imul
mov
xchg
cmc
adc
mov
adc
mov
in
or
jecxz
cmp
xor
mov
mov
std
inc
ljmp
xchg
int3
mov
xchg
sub
out
lods
mov
cmpsl
lods
inc
mov
imul
or
ret
mov
test
add
or
and
scas
sti
jle
inc
sbb
xchg
aas
in
add
cmc
add
add
pop
loop
adc
shll
js
jp
or
push
adc
popa
cld
cmp
xor
fidivrs
vmovdqu
mov
dec
sti
jns
mov
cltd
push
sub
mov
clc
pop
call
out
adc
stos
push
inc
dec
loop
pop
xchg
mov
daa
out
mov
lds
insb
std
add
rcll
and
gs
call
test
mov
jg
out
push
jl
xchg
add
enter
orl
jb
dec
out
xor
inc
test
out
xor
push
sub
mov
pop
rclb
mov
push
or
je
mov
adc
aad
jae
jl
xor
out
xlat
fldl
out
cmpsb
test
and
pop
inc
test
je
sahf
xor
outsb
pushf
mov
cmp
add
add
add
negl
lahf
pop
repz
cwtl
xor
add
cmc
add
add
pop
repz
push
jo
mov
test
sbb
xor
repnz
inc
dec
inc
inc
and
cmp
push
xchg
test
int3
dec
leave
movsb
clc
leave
add
cltd
dec
and
xchg
and
jo
shrl
mov
sarl
cmp
pusha
and
mov
sub
push
push
loopne
dec
dec
adc
aaa
mov
into
rorb
and
xorl
add
jmp
out
cmp
sub
mov
lret
sbb
dec
mov
and
iret
xlat
test
mov
mov
sti
and
rclb
push
mov
inc
call
sub
enter
sub
sahf
clc
and
std
xchg
pop
jne
sub
popf
mov
jno
pop
push
xchg
or
repz
mov
mov
mov
sarb
add
add
push
jl
jle
insb
pop
decl
pop
pop
xlat
cmp
out
add
cmc
add
add
push
xor
or
mov
test
sbb
stos
inc
sub
incl
andl
ret
ret
pop
ljmp
dec
cli
sbbl
int3
fwait
popf
cli
fstps
and
test
hlt
ljmp
icebp
sub
popa
lock
cs
xor
fadds
andps
jmp
or
aas
sub
stos
sbb
pop
cmpsb
in
push
mov
add
inc
stc
test
inc
add
xor
or
ja
sbb
sub
xchg
imul
or
test
mov
mov
scas
ret
inc
xchg
xchg
sub
in
jle
lret
pop
fwait
push
and
jmp
mov
out
pop
push
mov
add
push
pop
add
dec
outsl
ret
cwtl
mov
add
mov
adc
pop
ljmp
push
out
add
cmc
add
add
or
jnp
pusha
mov
std
xor
mov
xor
jno
outsl
inc
sub
sub
test
and
jo
mov
jae
std
es
lcall
leave
sahf
dec
inc
mov
das
clc
jge
or
dec
sub
mov
fimuls
jnp
inc
sub
mov
inc
sti
cmp
jno
dec
lret
inc
add
std
je
mov
jmp
xor
push
mov
adc
lock
aad
daa
sbb
mov
jbe
xchg
inc
or
out
hlt
outsb
cli
ljmp
mov
je
and
fldl
dec
mov
push
lret
push
notl
pop
sbb
cmp
fidivl
jno
loopne
and
pop
jge
pop
mov
add
data16
jne
mov
gs
das
cmp
lock
cmc
add
add
lea
testb
mov
aas
fxtract
ja
out
rcrl
sub
xchg
jle
ss
arpl
add
cmp
cld
jmp
fidivl
js
dec
push
mov
enter
out
pop
insl
test
out
or
dec
in
je
pop
lock
ficoms
xchg
lret
in
inc
and
fstl
jno
nop
dec
adc
stc
jnp
pop
dec
sbb
testl
test
xlat
xchg
cmp
mov
or
ss
adc
push
popf
jo
addr16
repnz
or
dec
xor
lret
ret
push
pop
daa
cmpl
bound
xchg
xchg
cltd
stos
icebp
push
add
dec
xchg
push
mov
insb
cwtl
cmp
subl
popf
test
add
inc
pop
sti
inc
push
add
add
add
jnp
sti
xchg
rol
imul
add
cmc
add
add
int3
push
std
push
sbb
pop
flds
loopne
fidivrs
xchg
inc
test
imul
or
or
sbb
shl
inc
inc
sub
imul
aad
pop
fisubrs
mov
mov
cmpb
shll
cld
std
rclb
or
aaa
mov
and
mov
and
lcall
lahf
xor
push
vpaddq
rcrl
stos
jecxz
or
sbb
mov
jge
cli
adc
sbb
xchg
mov
sub
cmp
mov
mov
push
mov
push
push
mov
daa
pusha
call
mov
or
add
out
inc
icebp
xchg
and
bound
inc
xlat
mov
push
popf
adc
and
mov
cmp
scas
adc
add
pop
sarl
test
sub
cld
push
std
icebp
add
cmc
add
add
push
mov
and
das
or
mov
dec
daa
sahf
loopne
push
fimuls
ret
lret
adc
mov
dec
jecxz
lcall
in
in
cmp
rolb
testb
in
jae
mov
mov
mov
xchg
push
pop
add
in
add
filds
and
insb
es
mov
mov
je
js
push
jmp
jo
das
scas
mov
dec
mov
js
into
in
push
shl
movsb
jno
xchg
jnp
jl
aaa
dec
jge
std
mov
cmp
fmul
push
push
add
daa
mov
test
xchg
push
mov
xchg
insb
rcrl
xchg
mov
jne
xchg
adc
ss
test
in
xchg
add
ss
and
jnp
xor
in
or
rcll
inc
sbb
ret
add
repz
std
repz
xchg
scas
fstpl
add
cmc
add
add
out
and
push
mov
lock
sbb
mov
inc
mov
xchg
loop
pop
xor
sub
lcall
test
rcll
fnsave
or
fwait
dec
dec
out
xlat
cwtl
shll
mov
imul
jae
pop
jp
sub
inc
push
sbb
ja
push
fldl
ss
mov
mov
iret
into
scas
cli
jg
inc
shr
xor
inc
pop
jbe
rcl
pop
or
mov
int
mov
repz
adc
xor
arpl
minps
mov
xor
cmpsl
test
fcoml
mov
scas
fdivrl
bound
inc
add
sbb
sbb
xchg
sarl
and
nop
sub
ret
dec
icebp
jg
pop
mov
push
xchg
in
pop
cmpsb
inc
add
add
lock
cmp
or
and
add
cmc
add
add
push
ja
dec
mov
dec
lea
lret
pusha
pop
scas
dec
lcall
or
out
lret
fidivs
or
push
lods
mov
addr16
jge
lcall
pop
test
cltd
rclb
fbld
inc
sar
ret
mov
push
jne
or
das
and
mov
add
and
addr16
push
pop
loop
sub
mov
cmp
push
and
test
lods
ror
sbb
cld
mov
les
xchg
pop
fs
jg
push
mov
mov
push
mov
and
out
loop
inc
shlb
add
insb
ret
mov
mov
jno
aad
jg
lcall
cmp
rcrb
clc
dec
scas
stos
std
out
dec
pop
jns
push
in
add
daa
lahf
mov
add
insl
lcall
lret
sbb
aad
sub
mov
hlt
add
cmc
add
add
icebp
in
ret
or
mov
and
xchg
mov
xor
xchg
arpl
mov
push
in
movsl
out
mov
outsb
cmp
stos
inc
jp
cmp
or
je
lcall
xor
rolb
or
cmpsl
sarb
cltd
popa
and
mov
mov
mov
negb
dec
add
fstl
mov
out
dec
xor
cmp
or
xchg
dec
into
sub
or
mov
dec
iret
mov
push
pop
mov
sahf
imul
add
insl
arpl
jo
sbb
call
pop
movsl
sbb
bound
sarb
rcrb
popf
cwtl
mov
fmuls
xchg
aad
cmp
sbb
sbb
mov
mov
jmp
movsb
mov
mov
scas
xchg
mov
inc
fs
or
mov
add
xchg
in
mov
pushl
comiss
cmc
add
cmc
add
add
mov
repnz
sarl
sbb
xchg
mov
je
pop
pop
push
cld
or
mov
or
clc
adc
mov
adc
pop
cmp
sub
enter
or
add
out
or
stos
adc
ret
xor
inc
sar
push
fadd
mov
inc
push
fiadds
xor
xor
mov
in
lret
insb
mov
mov
mov
mov
icebp
jns
sti
imul
rolb
jge
cmp
sub
icebp
add
or
imul
negb
dec
outsb
xor
test
ljmp
in
leave
int3
jo
mov
sbb
xchg
imul
pop
or
mov
sub
jbe
sub
sti
adc
push
sub
cmp
inc
mov
in
negl
push
inc
push
xor
scas
enter
add
cmc
add
add
adc
mov
fistpll
cmc
sahf
cmpsl
or
cmp
pop
mov
int
loop
xor
insl
add
fildll
mov
scas
cmp
adc
cmp
stc
inc
xor
imul
stc
and
fsts
icebp
inc
add
inc
dec
add
xor
sub
or
repz
inc
pop
in
fdivs
sub
adc
js
cmp
mov
jl
cmp
movsb
mov
jmp
push
ss
push
je
sub
adc
mov
xor
xchg
xor
xchg
shrl
ret
jecxz
gs
adc
clc
add
mov
mov
arpl
or
dec
enter
cmp
add
mov
nop
fmull
leave
mov
add
add
jp
jmp
test
stc
jno
sbb
fsts
roll
jmp
arpl
je
xchg
pop
leave
sbb
dec
adc
push
sbb
mov
pop
cmp
pop
push
pop
and
mov
out
pop
outsb
cmpsl
pusha
shlb
mov
lock
jmp
mov
test
pop
xor
je
xchg
fisubl
push
jnp
pop
inc
jmp
dec
jecxz
insl
xor
xchg
xor
push
jb
add
das
call
ss
push
jno
cmp
mov
or
popf
jnp
dec
xchg
mov
mov
sar
jo
repnz
cmc
in
push
cwtl
mov
cmp
mov
fsts
mov
int
cmp
jle
cmc
and
push
scas
jae
sahf
xchg
insl
sbb
cltd
sub
ret
lods
cltd
pop
in
mov
add
add
adc
push
add
adc
iret
ror
clc
add
cmc
add
add
jp
inc
js
sbb
shlb
jmp
jge
lods
scas
mov
insb
inc
or
cltd
mov
xchg
push
das
jae
push
shr
sahf
mov
daa
mov
into
ja
cmp
stos
pop
push
mov
cmp
xchg
mov
ss
xor
sbb
sbb
mov
fadds
cmovg
imul
scas
inc
adc
push
rcll
lahf
test
clc
insl
les
mov
call
sbb
push
or
mov
push
std
mov
mov
test
jno
pop
in
pop
xor
loop
rclb
pop
add
push
push
push
jbe
pop
mov
stos
fiadds
pop
mov
inc
and
xchg
xor
add
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
lcall
idivl
stc
and
and
repnz
jle
inc
andl
or
lret
xchg
jge
adc
xchg
add
out
xchg
pushf
sbbb
and
sahf
cwtl
fs
fidivrl
jae
cmp
imul
loope
outsl
cmp
dec
insl
inc
add
iret
push
outsb
fwait
rcrb
out
push
pop
cmpl
fwait
dec
xchg
pop
pop
dec
sbb
aaa
mov
cs
push
mov
mov
jg
dec
andb
loop
push
lock
mov
int3
mov
pop
test
dec
push
mov
pop
les
sbb
pushf
adc
pop
ja
addr16
arpl
cmp
mov
jb
bound
mov
sub
lods
pop
xchg
in
jb
aad
xchg
add
add
mov
push
decl
repnz
scas
lcall
add
xor
repz
imul
lds
sarb
xor
fidivrl
repnz
mov
int
pop
lods
jl
mov
loopne
into
jmp
stc
loope
es
jne
mov
mov
and
pop
sti
mov
mov
lods
ljmp
in
xchg
push
lret
sar
nop
jbe
and
fildl
das
or
mov
dec
mov
and
popf
fbld
pop
inc
repnz
mov
loop
shrl
ret
xchg
jae
cmpsb
dec
pushf
lods
scas
insb
mov
mov
loopne
xor
ja
add
mov
xor
mov
sub
pop
push
sar
popf
pop
cwtl
sub
or
push
outsb
and
mov
repnz
jns
jge
add
and
cmp
sti
fsubp
decl
ret
sbbl
fisttps
add
add
lock
push
or
and
xor
js
mov
jno
test
hlt
push
sub
add
xchg
cmp
lahf
mov
xchg
cmp
push
bound
cmp
repnz
jge
imul
mov
loop
insb
mov
into
movl
xchg
jp
cmp
mov
mov
scas
pop
add
xchg
mov
mov
mov
adc
shl
or
push
jge
lock
mov
aad
push
out
sbb
inc
addb
cmpsb
mov
mov
mov
cs
in
repz
std
ja
push
mov
mov
mov
sub
out
push
push
inc
outsl
sub
mov
cmp
jo
cmp
pop
shll
pop
lret
jp
mov
adc
lcall
and
mov
add
add
outsb
xor
or
data16
movsl
nop
test
add
cmc
add
add
jnp
mov
mov
shrl
ret
adc
push
sub
push
sub
mov
jmp
dec
sub
inc
mov
sbb
adc
scas
repz
cmp
stos
xor
mov
add
pop
pop
fisubrl
mov
or
push
inc
mov
sbb
mov
into
inc
sbb
xchg
adc
notl
add
popaw
xchg
inc
mov
int3
mov
mov
sti
adc
out
and
add
cli
cmp
mov
pusha
xchg
jo
xchg
pop
inc
cmp
jbe
xchg
cmpsb
loopne
cwtl
test
aad
cmpsl
insb
fisttpl
push
fdivrl
pop
subb
push
les
xchg
inc
inc
fimull
clc
push
cmc
mov
inc
jl
mov
scas
xchg
sub
add
repz
ror
lock
jnp
jmp
sbb
pop
nopl
add
cmc
add
add
inc
sbb
lods
dec
xlat
and
pushf
push
cmp
or
xchg
pusha
das
mov
xchg
mov
push
stos
test
and
mov
adc
or
stc
pop
hlt
adc
rorl
inc
adc
xchg
int
push
and
adc
clc
std
cmpsb
mov
pop
mov
aaa
mov
int
adc
pushf
mov
sub
adc
push
out
or
cli
aas
es
out
adc
pop
fadd
dec
outsl
pop
lahf
pop
in
cwtl
std
xchg
js
jg
push
mov
push
mov
out
mov
dec
sub
dec
xchg
jb
jp
lods
inc
or
cld
jge
pop
ret
pop
imul
adc
outsb
mov
mov
popa
xor
mov
sub
es
sbbl
test
xor
out
adc
add
and
repz
fimuls
mov
mov
add
add
add
add
add
in
adc
test
adc
iret
inc
hlt
mov
mov
jno
push
dec
adc
dec
xchg
fdivrl
mov
jecxz
or
add
jmp
cmp
xchg
icebp
std
inc
ficoml
mov
stos
mov
and
pop
out
popf
push
je
jmp
repnz
gs
xor
rclb
pusha
and
popa
xchg
das
xchg
push
dec
mov
xchg
cmpsl
cmpsb
test
sub
pop
mov
dec
xor
add
mov
push
lods
fcomip
roll
and
stos
incl
mov
bound
repz
icebp
jecxz
pop
pop
push
jg
push
ja
stos
test
jns
or
fwait
mov
shlb
arpl
insl
ljmp
push
cmpb
push
sub
jp
jg
stos
pushf
popa
add
add
out
xchg
jns
cmp
add
add
add
insl
ss
inc
adc
inc
jne
pop
or
in
sbb
sub
cmp
les
dec
pop
mov
mov
dec
stc
or
lahf
imul
mov
or
mov
in
loope
push
mov
xchg
pop
scas
cli
mov
sub
out
fdivs
jns
adc
ficoms
cwtl
sub
out
and
fcompl
insl
arpl
pop
or
sahf
mov
cmp
cwtl
add
jmp
cwtl
and
stc
or
pop
push
inc
popl
xchg
out
add
jo
adcb
or
xchg
xchg
pop
push
aad
add
addb
into
or
xor
jne
pop
sub
xchg
out
cmp
and
lods
adc
outsb
mov
jnp
xchg
popl
add
shrl
cmc
scas
mov
add
add
add
add
push
lea
jno
cmp
sub
and
sbb
pop
rcl
dec
test
jb
loope
xchg
rol
jnp
fistps
pusha
mov
push
cli
fsubl
mov
jae
das
scas
jecxz
mov
sbb
test
pop
repz
jmp
cmpl
sbb
push
jp
rcll
repz
fucom
lahf
or
or
jecxz
cmpb
call
xchg
arpl
nop
jno
mov
adc
sub
mov
mov
push
jns
pop
jmp
dec
imul
mov
std
subl
adc
push
pop
call
ljmp
sbb
xchg
icebp
outsb
fucomi
pop
call
pop
inc
loop
jnp,pt
bound
test
push
stos
xor
jp
movsl
push
mov
es
imul
and
add
lret
pusha
rorb
lea
cmp
dec
add
add
add
add
xcrypt-ecb
cmpsl
leave
mov
cs
jecxz
loop
enter
insb
mov
negl
lods
mov
mov
rdseed
sbb
outsl
mov
sub
add
stos
negl
or
xchg
dec
lea
sbb
fisubl
mov
mov
cmp
popa
lods
xor
pop
aas
add
mov
pop
xor
inc
shl
jmp
push
bound
mov
decl
cmp
push
mov
cli
mov
sbb
popa
mov
jo
or
cwtl
push
aad
lea
jb
daa
fstl
inc
adc
sub
les
clc
push
inc
mov
xchg
mov
and
mov
jp
test
dec
jg
and
mov
xchg
lds
xor
neg
adc
shlb
addr16
push
cltd
clc
jg
jmp
push
aas
or
jg
dec
add
add
gs
testl
pop
imul
inc
sbb
cwtl
jmp
xor
xchg
adc
mov
dec
in
push
pop
arpl
dec
add
orl
adc
pop
dec
daa
in
cmp
pop
sub
cmp
cmp
mov
push
bound
inc
mov
cmpsb
bound
add
int
lods
pop
out
cmp
mov
or
fists
movsb
jno
cmp
sub
clc
into
movsb
add
negl
imulb
mov
into
sti
inc
push
xchg
ja
inc
adc
nop
loop
scas
cmpsb
scas
test
inc
mov
rcr
mov
fiadds
cmp
dec
jns
or
mov
insl
cltd
jnp
mov
hlt
push
push
ret
pop
bound
inc
repz
mov
add
dec
mov
push
lods
and
or
aas
add
add
xchg
mov
jle
sbb
adc
pop
aaa
add
add
add
add
ror
in
ret
add
repnz
ljmp
repz
clc
out
push
scas
lcall
fmull
lret
sub
cmpsb
lods
pop
mov
inc
nop
sahf
es
adc
add
loop
push
ret
add
outsl
sub
mov
and
fisubrs
or
push
pop
push
insl
jmp
inc
inc
cld
jns
mov
adc
sub
fistps
sahf
pusha
iret
loopne
inc
and
loopne
dec
addr16
cmp
add
pop
and
jecxz
jle
sub
rorl
fldenv
js
fsubr
xor
dec
push
out
mov
cmp
daa
mov
pusha
push
stos
dec
ret
out
xor
mov
xchg
pop
es
mov
movsl
insb
repz
scas
rorl
sub
mov
xlat
aam
test
cmp
add
add
mov
sub
mov
adcl
cltd
leave
mov
int3
mov
xchg
and
imulb
cld
icebp
jae
clc
add
shll
and
pop
lods
sti
stc
aam
mov
stos
iret
jecxz
adc
lds
dec
jns
jge
ja
call
adc
sti
cmp
xchg
cmp
mov
imul
jecxz
dec
pusha
adc
mov
add
clc
mov
popf
nop
add
out
add
push
out
dec
push
xchg
fcomps
push
lcall
jae
sbbb
bound
jnp
push
xor
dec
mov
ffree
xor
xor
sahf
pop
popf
mul
xor
rclb
adc
sbb
pop
lcall
add
push
inc
pop
jns
aas
fisttpl
inc
movsl
daa
scas
push
and
add
sbb
sbb
cmp
inc
cmp
and
mov
rcll
sub
stos
mov
movsb
ret
test
mov
hlt
in
cli
cmp
leave
inc
xchg
or
adc
mov
pop
jae
faddl
test
xchg
dec
sbbb
loopne
mov
xchg
loope,pn
popa
sbb
and
push
adc
xor
imul
outsl
inc
mov
or
data16
xor
sbb
jns
lock
cmpsl
loopne
cmp
movsl
xor
in
cli
mov
dec
or
mov
fcoms
adc
loop
pop
nop
clc
ja
cltd
cltd
xchg
jns
push
out
int3
dec
out
add
jmp
cmpsb
mov
dec
push
mov
and
out
mov
and
inc
and
or
das
repz
cwtl
mov
sub
cmpsb
sbb
jnp
mov
mov
and
add
add
add
xchg
scas
pop
and
pop
outsl
in
xor
addl
das
jl
bnd
insl
loopne
movsl
scas
popf
test
jge
addr16
pop
and
pop
sti
fcmovbe
mov
sub
fbstp
xlat
ja
xchg
add
iret
jno
xchg
lret
mov
push
clc
movsl
pop
mov
insl
sbb
add
out
dec
jbe
push
dec
faddl
sub
jp
in
ja
outsb
inc
popf
aam
inc
call
nop
into
jae
mov
or
xor
into
and
mov
jmp
jns
sub
in
fldenv
insl
mov
xchg
leave
and
add
adc
movsl
fimuls
mov
mov
sbb
insl
je
cmp
mov
sub
int
xor
gs
flds
test
roll
lcall
add
add
xlat
pop
xlat
jg
mov
test
jge
or
add
cmc
add
add
in
icebp
push
sahf
mov
dec
data16
cmc
cmpsl
loopne
or
bswap
jnp
data16
pusha
xor
push
xor
mov
lds
xchg
test
sbb
ret
sahf
mov
dec
push
pop
rolb
inc
dec
pop
lret
cltd
aaa
push
xchg
cwtl
sbb
adc
adc
fmuls
cmp
inc
lahf
les
ss
fdivr
aas
clc
or
mov
in
xchg
sub
ret
and
add
jmp
sti
repnz
jl
lods
inc
imulb
xchg
divb
stos
xlat
xchg
adc
ja
jge
out
out
inc
push
inc
mov
mov
fcoml
cmp
cltd
or
jmp
mov
jns
clc
dec
xlat
inc
and
jno
push
sub
inc
dec
push
jmp
push
mov
aam
cmpsb
sub
mov
scas
sarl
xchg
mov
idivl
ds
imul
add
add
xor
aad
or
add
sbb
nop
scas
mov
clc
lock
mov
sub
mov
lret
mov
push
jo
push
test
jg
or
push
adcl
aaa
add
mov
cltd
adc
sub
adc
or
mov
push
push
inc
jmp
jns
mov
pushf
push
ffree
xor
cmpb
filds
in
xchg
ret
jnp
popf
out
push
ja
icebp
jne
subb
mov
in
adc
pop
push
push
test
inc
lcall
mov
je
mov
push
iret
mov
aaa
sub
je
push
cmp
bswap
stc
loop
push
jg
outsb
jl
pop
int
dec
push
and
fdivl
sti
sbb
mov
test
mov
stc
shlb
add
cmc
add
add
xchg
stos
fnsave
jno
leave
out
lods
das
jno
mov
pop
fs
mov
pop
lahf
je
out
fimull
dec
inc
push
in
xor
fstp
mov
inc
inc
test
mov
or
and
movsb
xchg
ss
loopne
dec
shr
movsb
xchg
imul
ss
mov
mov
pop
pop
mov
jp
mov
cmpsb
xchg
jns
push
out
xor
jmp
mov
nop
pop
inc
xchg
pop
shrl
mov
subl
fstpt
pop
imul
mov
pop
or
test
loope
adc
add
xor
lock
sub
stos
loop
addl
in
cmpsb
je
adc
mov
push
mov
sbb
dec
stos
xchg
or
mov
cltd
mov
dec
std
adc
jo
idivb
cmp
fidivl
insl
xchg
add
add
push
pop
push
jmp
sub
or
add
add
add
pop
add
pop
jg
and
or
daa
fs
jnp
icebp
insl
sbb
cltd
or
push
dec
mov
jmp
jp
out
pusha
jg
mov
sbb
inc
ja
outsl
test
popl
mov
movsb
fbld
xchg
xor
lret
dec
adc
push
stos
jae
test
lahf
jmp
popl
jb
inc
mov
movsl
sbb
and
push
pusha
or
or
sbb
cmpsb
sbbb
pop
jmp
cmpsl
sub
mov
iret
push
push
out
dec
sub
inc
mov
add
mov
pop
aam
jge
mov
lds
mov
je
mov
cmpsl
and
inc
mov
pushl
jp
loope
repz
jns
mov
mov
into
arpl
aam
jne
jmp
nop
pop
outsb
mov
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
or
or
add
add
add
sub
and
cmpsb
repnz
xlat
mov
popf
jp
shrl
jle
add
jmp
jmp
mov
mov
fcmovnbe
mov
mov
cmp
push
bound
lods
xor
jns
stc
jb
mov
clc
or
mov
pop
ds
les
pop
dec
push
push
inc
clc
push
fdivrl
out
movups
jmp
dec
ljmp
or
jg
lods
pushf
out
dec
sub
sub
inc
cltd
popa
fwait
cmp
mov
nop
push
enter
adc
mov
pop
jbe,pt
sub
cwtl
dec
cmp
sub
int3
inc
lahf
xor
rep
sarb
stc
addr16
fdivs
cmc
in
mov
inc
mov
mov
lcall
sbb
add
lock
ljmp
add
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
sub
not
aam
add
cmc
add
add
fdivr
mov
scas
sbb
dec
js
shlb
add
fildll
shrb
xlat
and
xor
xor
xor
aam
cmp
pusha
add
insl
push
sub
paddsw
and
adc
js
adc
call
inc
sub
daa
in
int
repnz
mov
cmpsl
aaa
aad
pop
add
lret
cmp
push
mov
dec
ret
inc
and
sarb
push
jo
inc
mov
sub
push
fnstsw
lret
fldcw
lods
mov
inc
mov
aaa
pop
shrl
jns
and
fildll
dec
les
aad
mov
fldcw
mov
scas
rorb
mov
out
andb
mov
gs
cmp
movsl
mov
pop
xchg
cmc
scas
jp
test
push
in
decl
leave
or
or
mov
nop
test
aam
int
xchg
clc
sahf
stos
mov
leave
or
add
add
add
ret
sub
xchg
popf
lcall
jno
lahf
dec
inc
pop
subl
adc
out
fmull
repnz
popa
popa
into
fs
test
pop
xor
ja
icebp
adc
hlt
and
mov
adc
pop
dec
and
pop
in
aam
outsb
and
icebp
js
bound
mov
and
sbb
hlt
lret
cltd
das
aas
sbbl
nop
aad
cltd
sti
repz
inc
call
add
mov
data16
inc
sub
sbb
jo
or
pop
out
inc
mov
hlt
mov
repz
or
les
pop
xchg
std
dec
sub
je
or
in
jg
push
pop
rcl
addl
add
pop
mov
call
add
pop
arpl
addr16
inc
jmp
insb
mov
add
add
pop
out
push
mov
xchg
fstps
cmp
inc
inc
add
push
loope
pop
pop
shll
sti
xor
in
lock
pop
js
dec
and
mov
push
or
cmp
mov
cld
stos
ja
inc
or
or
in
jo
rcrl
mov
xchg
jg
inc
sbb
pop
hlt
push
push
lcall
pop
popf
rcl
shr
jp
out
cmpl
dec
stos
add
leave
sub
stc
or
sub
rolb
jmp
mov
out
push
fimuls
std
les
xor
jg
stos
popf
lock
mov
lea
or
mov
roll
dec
cmp
inc
sbb
stos
mov
mov
sbb
jecxz
jne
loope
int
or
cmp
mov
sbb
push
add
add
out
out
pushl
jecxz
pushf
pop
cmpsb
and
add
add
inc
mov
js
fnstenv
loope
cmp
in
push
loopne
or
pop
mov
sbb
fimuls
iret
add
fisttpl
push
sarb
or
sbb
add
pop
jns
jno
sahf
fs
scas
imul
movsb
clc
add
int
inc
sbb
mov
leave
outsl
flds
sbb
and
or
repnz
ret
inc
lret
adc
inc
cmp
or
popf
xorl
sub
xchg
add
inc
popf
jl
jmp
sar
xchg
pcmpeqw
fisttpll
iret
fs
outsl
aad
loop
or
push
std
dec
pop
xchg
out
lods
imul
mov
fisubl
out
in
jno
sub
sub
xchg
push
mov
pop
or
rcrb
mov
cmp
add
popa
sbb
add
add
push
scas
out
mov
rol
pushf
subl
add
add
movsb
adc
loopne
xchg
adc
mov
adc
stc
and
repz
enter
adc
push
loopne
rclb
sub
sahf
mov
cmc
std
incl
push
int3
data16
mov
add
inc
lcall
push
and
out
std
jne
cmc
or
pop
cltd
pop
xor
fbstp
roll
inc
mov
icebp
rorl
jl
mov
push
mov
dec
lcall
daa
sti
int3
mov
sub
loope
sbb
popa
cli
sub
test
nop
stc
mov
sub
push
xchg
imul
xlat
push
mov
insb
aam
pusha
iret
shl
test
int
stos
mov
mov
adc
jne
sbb
out
inc
inc
pushf
jmp
hlt
dec
xchg
sbb
push
and
sti
pop
loop
mov
mov
imul
test
add
aaa
xchg
and
movsl
mov
mov
cmp
scas
push
adc
add
add
add
adcb
shl
sbb
push
cmp
fsubl
push
test
add
xor
fnstsw
movsl
rolb
int3
mov
dec
sub
rcrb
outsb
bts
repnz
jmp
leave
lret
and
out
lret
test
pusha
mov
fisubrs
mov
inc
test
push
mov
and
mov
mov
imulb
test
adc
out
adc
es
adc
cmp
push
inc
jne
push
xor
inc
jg
jns
dec
movsb
es
fildll
xchg
sub
imull
sub
sub
cmp
into
xor
decb
add
leave
rcll
push
rcrb
inc
push
nop
je
repz
mov
cltd
gs
sbb
into
sbb
gs
dec
lahf
push
pushf
fdivl
sbb
stos
mov
xchg
lds
dec
popa
jp
push
push
cwtl
jb
xchg
adc
add
fdivl
mov
push
cmp
add
cmc
add
add
mov
scas
pushf
lcall
sti
lods
orb
not
ljmp
push
shll
mov
xchg
mov
loopne
dec
sbb
lods
mov
insb
mov
sub
push
lds
xor
mov
xor
pushf
cs
insb
adc
adc
cmp
sbb
sub
ret
stos
divl
int3
shl
les
and
mov
dec
aas
mov
cmpsb
fcomip
mov
or
inc
cwtl
scas
aam
nop
cmc
jbe
mov
lods
push
pushf
mov
xchg
ret
add
int
icebp
push
in
jbe
cwtl
push
dec
pop
dec
xchg
cmpb
mov
xchg
xchg
sbb
dec
inc
iret
push
iret
or
jmp
rcrl
repnz
mov
cmc
imul
push
push
into
push
adc
pop
les
add
add
mov
mov
fidivrs
cltd
xchg
xchg
add
cmc
add
add
xor
stc
in
push
popa
orl
andnps
xlat
frstor
test
push
xchg
mov
add
pop
pop
fdivs
add
rcll
mov
fists
in
mov
cmpl
jbe
mov
cmpsl
sbbl
pop
in
popf
push
mov
mov
popw
push
lock
mov
cmp
pop
aam
imul
aad
dec
sbb
mov
das
not
cwtl
lds
rcll
cltd
add
lcall
or
scas
loop
pop
sbb
ja
xor
push
xchg
push
aaa
popa
mov
mov
test
cmp
fnsave
fstpt
jb
adc
aam
xor
jb
add
push
pop
mov
icebp
shrb
jne
dec
push
pop
inc
mov
lret
xchg
and
or
andl
fdivrs
sbb
and
add
add
mov
or
jl
add
cmc
add
add
fwait
jbe
xchg
imul
jp
lret
out
pop
enter
insl
pop
stos
sub
lahf
pop
and
inc
stos
insb
dec
cmpsl
jns
add
bound
push
mov
push
movsb
cld
insl
mov
sub
test
loopne
cld
pop
mov
arpl
aad
dec
or
ret
mov
std
dec
push
jno
sbb
aad
gs
aad
mov
jnp
in
and
shrl
pop
mov
and
inc
rol
adc
loop
test
inc
cwtl
adc
and
push
cmpsb
std
cmpsb
ja
mov
movsl
add
mov
aam
int3
sbb
jg
insb
out
sub
mov
out
movl
mov
out
sarb
or
adc
and
jbe
mov
and
mov
iret
lds
sti
popa
repnz
push
xor
out
add
add
hlt
fists
add
add
cmc
add
add
sub
mov
enter
inc
and
mov
jne
imull
mov
sbb
in
ficoms
xor
cmp
ret
sub
inc
iret
ret
fisubrs
inc
rcl
je
inc
jo
adc
sub
jge
xor
pop
cli
pop
out
sbb
jg
iret
repz
lods
sbb
jecxz
add
adcl
inc
pop
jae
div
cmp
dec
insb
adc
cltd
pusha
cld
mov
movsl
xchg
mov
stos
dec
push
hlt
shlb
pop
es
xor
into
adc
bsr
popf
fldcw
xchg
lods
hlt
push
sbb
mov
cmpsl
popa
adc
nop
pmaddwd
aas
into
imull
and
lods
cmp
test
popl
in
xchg
jg
mov
addb
bound
jl
inc
sarl
aas
jle
loop
push
add
add
into
fwait
testb
daa
icebp
repnz
adc
add
ret
jl
xor
decl
bound
inc
movsb
push
or
shll
das
pop
push
push
sbb
jnp
xor
add
mov
lret
mov
into
outsb
iret
mov
mov
jo
and
xchg
enter
sbb
pusha
xchg
outsl
push
in
push
int3
outsl
mov
pop
mov
add
fidivl
sbb
int3
imul
dec
popf
cltd
lahf
mov
cmp
cmp
cmp
mov
xor
loop
je
mov
ret
fisubs
test
adc
loop
in
sub
in
pop
add
push
fwait
in
push
sti
push
aad
fwait
ror
xor
mov
aam
and
ljmp
dec
xor
cmp
cwtl
push
or
fsubs
dec
or
add
jl
test
out
mov
pop
mov
jmp
add
cmc
add
add
lods
imul
rcrl
call
jnp
mov
xchg
sbbb
sahf
stos
pop
fwait
pop
push
dec
iret
cmp
jnp
test
add
xchg
fwait
out
les
mov
push
outsb
add
popf
int
test
jle
and
pop
ljmp
add
aam
jle,pn
fabs
je
inc
imul
hlt
in
out
ljmp
das
xor
lcall
icebp
mov
push
cmp
cmp
mov
pop
push
iret
sub
cld
jg
cmp
rclb
dec
push
and
shll
nop
dec
loopne
in
scas
fsubs
shrb
out
repnz
xchg
add
fwait
mov
or
sbb
mov
addr16
lock
popl
std
imul
push
stos
mov
add
add
inc
out
aas
mov
sub
daa
sbb
push
pop
add
cmc
add
add
arpl
or
xchg
add
rolb
mov
lods
inc
mov
push
shll
stos
shrl
and
mov
orl
addr16
mov
pop
mov
jae
repnz
outsb
into
mov
lds
add
je
pop
stos
pop
dec
mov
faddl
int
cmp
repz
in
mov
iret
pop
mov
vmovntps
and
xchg
sbb
mov
clc
and
pop
fcos
enter
fmuls
push
pop
outsb
adc
pop
push
ret
fwait
aad
pop
cmp
jnp
or
subb
xor
loopne
ss
push
mov
dec
hlt
das
mov
lock
inc
mov
dec
sbb
test
sub
movsl
in
jb
sahf
test
sub
outsl
mov
dec
mov
cs
adc
jg
dec
add
add
bnd
jp
xchg
inc
mov
jge
inc
sbb
add
add
add
pusha
mov
mov
adc
add
pop
jmp
and
popa
mov
or
adc
mov
andb
jg
mov
pop
lret
push
repnz
pop
cmp
sti
femms
mov
pop
movsl
inc
push
int3
pop
sbb
aas
fidivl
aam
pop
stos
outsb
shl
push
cmpsl
popa
xchg
icebp
popa
mov
ds
subb
pop
or
sub
jmp
inc
push
inc
in
call
xchg
xor
cwtl
xchg
jmp
push
adc
sbb
sub
inc
jo
mov
arpl
ror
push
xchg
cmpsl
adc
pushf
imul
in
xchg
in
in
inc
ret
and
or
add
sub
rorl
inc
xchg
push
fucom
xor
dec
mov
out
data16
dec
add
add
in
out
ja
fbstp
test
adc
sbb
add
add
add
clc
jbe
addr16
sahf
pop
mov
xor
out
pushf
mov
stos
and
imul
test
lahf
inc
jns
in
push
inc
inc
loop
xchg
out
insb
popa
inc
test
or
cmp
inc
scas
and
jecxz
test
movsl
hlt
fwait
ja
sub
aas
popf
repz
push
arpl
cmp
ss
popa
pop
mov
jb
jne
mov
lret
loopne
cmpsl
xchg
adc
and
xor
leave
ficoms
test
enter
jno
cmp
or
testl
adc
imul
xchg
cmpb
aam
fisubs
mov
mov
cmp
adc
ljmp
xor
push
xor
leave
sub
xchg
dec
shl
mov
imul
mov
rclb
nop
fnstcw
add
scas
test
in
cmp
sbb
add
add
add
push
test
jge
mov
sub
xchg
lods
ret
sub
pop
cmp
adc
cmpsb
lods
mov
or
and
push
cltd
pop
push
imul
sbb
imul
ret
push
xchg
in
jns
negb
xchg
roll
lahf
push
iret
pop
pop
mov
pop
jg
das
out
lret
add
push
cmp
ss
jp
add
xchg
addb
jmp
mov
sub
lods
sub
pop
scas
shrb
jl
or
insl
cwtl
jae
in
pusha
add
je
sub
lock
push
iret
jns
cmp
pop
pop
shr
add
data16
mov
mov
cmc
insb
xchg
and
add
int3
mov
xor
stos
daa
xor
imul
xchg
add
add
jg
imull
push
testb
add
cmc
add
add
adc
shrb
inc
pop
pop
ds
dec
dec
out
rcr
ja
push
aas
push
add
idivl
lods
stc
dec
sub
push
aas
xchg
outsb
out
jnp
xchg
imul
add
shl
adc
inc
lret
sbbb
lret
repz
cltd
lret
or
xor
ja
iret
jb
jne
sbb
imul
add
and
sbbl
add
loope
shlb
test
sti
repnz
mov
or
pop
sbb
adcb
and
fwait
out
sahf
les
loope
xchg
push
adc
xchg
mov
and
sub
jne,pn
pop
jbe
cld
jmp
cltd
in
xor
adc
xor
in
adc
xorb
add
dec
inc
fdivrp
mov
enter
cmp
sti
jg
and
adcl
add
add
add
mov
jae
in
test
add
or
and
mov
push
adc
cmpsl
or
scas
pop
adc
insb
ljmp
mov
add
or
adc
mov
int
sbb
xchg
dec
int3
xchg
daa
cmp
sbb
push
addr16
test
push
dec
xchg
cmp
dec
jbe
std
pop
xchg
into
int
xchg
push
add
adc
nop
mov
add
lret
int
gs
cmp
cmp
lods
pop
mov
cld
fisttpl
inc
xchg
jp
push
add
sub
sti
bound
push
fldl
add
out
inc
sub
ror
mov
pop
jmp
popa
add
insb
pop
sub
inc
jmp
and
scas
add
movsl
cli
and
add
add
jnp
fldl
fsts
mov
cmc
add
add
es
or
xchg
movsb
cmp
push
sbb
lahf
pop
shll
out
xchg
push
imul
test
mov
adcb
lcall
icebp
sub
mov
cmc
les
out
lock
inc
test
rclb
adc
xchg
out
jmp
test
jbe
dec
jb
cltd
in
dec
or
xchg
lahf
push
cs
cmp
mov
bound
mov
sbb
lret
addr16
xchg
mov
inc
sub
xchg
bound
das
insl
sbb
leave
inc
xchg
dec
out
cmpsb
inc
addb
ds
rcrl
and
repnz
test
cmp
addr16
in
push
push
and
subb
mov
sub
xchg
outsl
xor
inc
xor
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
sub
movb
add
cmc
add
add
mov
dec
addr16
push
pushf
mov
loope
xor
fnsave
mov
mov
pop
xor
cmp
add
loop
mov
pushf
cmp
iret
xchg
sarb
fisttpl
jb
xchg
cmp
mov
shll
or
cmp
pop
pop
les
dec
mov
jge
lret
adc
arpl
mov
mov
in
xchg
ja
pop
sub
imul
jg
push
sbb
push
jne
mov
mov
pop
fistpll
scas
js
ds
xchg
pop
stos
add
pop
xchg
jle
into
inc
mov
je
dec
out
jne
pop
and
xor
or
xchg
lods
inc
adc
mov
dec
test
sbb
or
and
cltd
ret
dec
movsb
cmpsl
jae
mov
inc
pop
outsb
jmp
adc
push
adc
sbbb
loope
jmp
loop
fdivrl
clc
push
add
cmc
add
add
ret
inc
xchg
movsl
subb
cmp
push
or
aaa
sub
out
ja
jmp
inc
mov
iret
push
mov
and
cmp
mov
mov
iret
mov
bound
cmp
sub
or
dec
dec
out
insl
decb
outsl
inc
push
or
imul
fstpl
mov
int3
call
aam
cmp
push
dec
lea
mov
mov
push
push
xchg
gs
adc
nop
jl
fcomps
addr16
pop
xchg
sbb
xor
outsl
hlt
mov
decl
imul
pop
rclb
dec
fildl
jg
push
sti
inc
shll
test
cmpsb
ret
jno
xor
jge
hlt
outsl
xchg
fstpl
adc
adc
add
xor
xchg
lds
icebp
cmp
sbb
pop
add
cmc
add
add
hlt
outsb
in
cmc
sub
sub
repz
mov
lds
repz
cmpl
pop
sbb
mov
and
dec
jnp
mov
fstpl
pop
aas
nop
push
idivl
sbb
ds
sbb
or
repz
aam
or
add
push
cmp
js
sbb
in
sub
je
mov
pop
mov
sub
repnz
xor
cmp
decb
fldcw
sub
insl
cmp
mov
imul
mov
clc
cmpl
inc
pop
and
cs
shll
or
or
cmp
jecxz
xor
repnz
dec
aad
dec
jae
mov
or
cmpsl
and
push
adc
inc
filds
add
cli
inc
jg
int
pop
sbb
rcl
loop
add
cmc
add
add
jg
mov
xlat
stc
inc
jp
cmp
push
adc
add
fildl
lods
call
movsb
arpl
clc
scas
std
cwtl
flds
pop
mov
push
sarl
arpl
jo
cld
push
dec
hlt
mov
out
and
int
nop
sbb
lcall
mov
xor
add
push
imul
out
out
cmp
and
data16
movsl
inc
sub
xor
rcrl
jg
in
push
into
mov
inc
jmp
xlat
lods
cmp
clc
test
lods
mov
mov
mov
je
fldenv
push
sub
out
pop
out
pop
pop
mov
mov
pop
shrl
dec
jp
sub
rorl
jge
push
adc
mov
or
cmp
in
adcl
xor
in
mov
add
lock
std
cmp
jle
fisttps
cmp
mov
and
add
add
add
sub
add
cmp
pop
cmp
addl
gs
bound
pop
dec
inc
push
data16
outsb
add
dec
ss
rol
pusha
jnp
xchg
in
mov
jb
mov
dec
shlb
shlb
jae
add
dec
mov
cmc
and
ljmp
add
test
fimull
push
test
mov
rcrb
stos
pusha
dec
cmp
fwait
pop
mov
dec
pop
add
stc
int
sub
pop
sahf
lock
enter
cmpsl
mov
imul
adc
inc
jmp
lcall
sbb
xlat
aad
add
aas
aam
mov
sbb
cmp
xchg
mov
mov
jb
mov
mov
and
xor
ror
dec
lret
aaa
xor
jl
dec
mul
jne
xor
push
aad
idivb
cmp
jmp
leave
jne
and
add
add
iret
xlat
ficoml
xchg
sbb
and
add
add
add
mov
lods
pop
xchg
cmp
scas
add
adc
or
xchg
or
jb
push
rcll
adc
inc
push
imul
jb
push
and
mov
cmc
push
outsb
fdivr
outsl
ja
xor
jns
xchg
movsb
arpl
sbb
mov
jbe
mov
out
jge
push
mov
dec
loop
mov
outsl
cmp
pushf
jg
scas
iret
outsl
push
enter
adc
mull
pop
imul
adc
sbb
dec
sbb
lcall
ret
add
jb
mov
jnp
bound
das
jb
je
pop
xchg
mov
add
scas
insl
inc
sbb
sbb
jne
cs
out
rcr
sub
and
lret
mov
pop
addl
inc
xchg
sbb
insb
dec
pop
loop
jae
add
dec
jmp
dec
scas
iret
outsb
jmp
rcll
jnp
cld
shll
add
add
add
jnp
icebp
ds
sahf
fwait
mov
jge
hlt
xchg
mov
add
pushf
sub
addl
outsb
inc
or
and
sbb
jg
repz
dec
mov
mov
and
xchg
add
adc
mov
or
in
rcrl
push
add
call
adc
dec
sub
insl
repz
les
add
xchg
dec
and
or
pushf
cmpsb
push
jge
mov
sub
inc
xchg
mov
push
lahf
lods
mov
sbb
shll
cmp
sub
or
sahf
dec
mov
pop
lods
xor
push
lds
mov
out
add
mov
pop
stos
cmc
jge
jl
xor
testb
or
or
add
sbb
std
sbb
stc
cld
or
sub
lea
add
add
jl
jge
jecxz
arpl
lret
mov
cmpb
je
and
sub
add
bound
sbb
sbbb
xor
pop
xor
xchg
mov
jnp
ss
jae
outsb
std
or
or
fdivr
and
push
cmp
arpl
mov
sbb
popa
popf
fcmovnu
jp
mov
push
dec
and
mov
xor
das
popf
pop
imulb
cli
outsl
dec
mov
iret
shrl
pop
and
push
jmp
dec
popa
jle
das
mov
inc
lcall
test
push
dec
cmp
push
popa
push
cmc
cmp
mov
jge
inc
imul
mov
insl
gs
lds
push
adc
sbb
addb
mov
fisttpll
sub
jo
fucomi
inc
xor
rcl
pushf
insl
pop
pop
add
add
pop
test
scas
repz
cld
cmp
jl
or
push
stos
and
add
dec
outsb
sarl
or
and
mov
das
addr16
mov
or
push
repnz
mov
sbb
repnz
popa
or
test
loopne
int
sahf
add
out
lahf
loope
enter
adc
jno
jecxz
cs
xor
arpl
movsl
mov
lcall
dec
adc
xchg
fstps
lcall
mov
push
notb
mov
not
xchg
pop
add
shlb
movsl
movsb
jl
ret
mov
scas
ret
sub
sub
ja
out
sbb
pop
sarb
push
jns
das
les
fsub
sub
push
int3
jns
iret
mov
sarl
outsb
std
pushf
xchg
xchg
inc
xchg
fisubl
pushf
int3
pop
test
pop
bound
xor
push
push
lock
cmpsb
pusha
imul
pushf
add
add
dec
pushl
test
mov
mov
add
add
loop
xchg
in
mov
out
and
xorl
xchg
cmpsb
jns
loopne
sub
adc
mov
mov
test
xor
dec
adc
xor
fisubl
push
cmovnp
lds
jbe
sbb
sbb
cmp
sub
inc
repnz
mov
pop
push
cld
repz
add
divb
jle
add
push
mov
and
mov
fsubrl
sbb
jecxz
and
xor
cmp
iret
xor
in
subl
fsubrl
dec
dec
rcrl
sbb
jbe
and
shl
inc
adc
pop
popa
mov
and
xchg
jbe
mov
xchg
xor
fisubl
mov
adc
fs
test
jg
dec
mov
and
mov
out
jmp
push
mov
inc
jle
add
add
inc
ja
pop
aas
pop
pop
inc
adc
mov
nop
xchg
daa
add
cmc
add
add
push
pop
sbb
add
insl
lea
fisttps
lods
imul
lea
jae
push
sbb
dec
xchg
cmp
dec
xchg
dec
mov
push
adc
or
sbb
xlat
xchg
cmp
incb
enter
pop
mov
and
xor
mov
mov
fsts
sub
or
jbe
xor
cmp
cmp
dec
xor
cmp
add
xor
dec
in
aam
aaa
cmpsb
mov
outsb
push
push
xchg
and
pop
cmp
xor
test
push
cltd
inc
pop
or
ret
xchg
add
jb
fs
mov
nop
xchg
mov
ret
jae
popf
pop
dec
fistpll
pop
pop
adc
subb
mov
insb
mov
outsb
add
add
xchg
jae
ja
div
dec
lods
push
mov
mov
add
add
add
pop
xchg
adc
insl
pop
sbb
js
fiaddl
sub
stc
or
gs
inc
imul
add
or
in
jmp
pop
aam
jp
xlat
lea
dec
cltd
cmp
outsb
ret
inc
jae
push
cmp
mov
xor
lcall
aas
jle
xor
jno
jecxz
gs
mov
push
fmull
int
adc
sbb
jmp
out
mov
push
pop
pop
loope
mov
fildl
popa
lret
mov
ficomps
pusha
es
pop
push
cld
xor
clc
int3
add
or
jne
or
jae
pop
sub
inc
push
das
mov
pop
and
jno
push
add
xchg
cs
popf
push
je
cltd
pusha
or
add
cli
std
jg
into
jno
sub
and
jg
add
cmc
add
add
loop
mov
movsl
insb
jbe
lret
loope
out
out
sti
mov
lods
sbb
pop
cmp
jp
cmpsl
mov
popa
mov
pusha
and
jp
mov
dec
pop
test
rol
inc
jnp
stos
outsb
push
dec
dec
sbb
pop
inc
sub
inc
or
fsubp
rcll
test
imul
rol
ror
xchg
int
cmp
pop
cs
test
cmpsb
inc
mov
sti
push
ja
out
sub
sub
imul
lods
xchg
mov
push
xchg
dec
in
data16
dec
dec
xor
pop
xchg
daa
xchg
dec
xchg
mov
and
outsb
jo
loope
mov
bnd
testl
sbb
dec
cli
jmp
into
push
add
sbb
imul
sti
pop
test
sbb
loopne
imul
sub
add
add
add
mov
std
incl
sub
pop
pushf
mov
add
cmc
add
add
xchg
fucom
sbb
jb
mov
push
das
fnsave
jne
mov
xor
icebp
fnstcw
clc
add
cmpsb
or
jl
xchg
add
or
insb
test
das
loopne
es
cs
incb
in
idivb
cmp
faddp
sbb
cmp
mov
cmp
and
sti
jns
pop
sar
movsl
arpl
lret
iret
xchg
cmpsl
hlt
mov
das
into
adc
testb
sbb
mov
push
jns
cld
insl
push
stos
and
ret
out
cmc
fstpl
aad
int
or
mov
cmp
sti
outsl
rcl
or
push
and
push
iret
out
sub
dec
jo
pop
bound
add
subb
movsb
fdiv
in
imul
sub
jns
call
lods
add
xor
and
das
int3
jb
add
add
es
jg
pop
xorl
and
testl
cmc
add
add
cmp
sbb
lret
movsl
push
pop
mov
js
sbb
jbe
mov
icebp
mov
ret
ror
jmp
aam
inc
daa
loopne
mov
mov
pop
ds
icebp
mov
xchg
fsubl
xor
insl
clc
adcl
in
std
add
dec
cltd
inc
test
shl
inc
add
pop
movsl
je
add
test
adc
aam
insl
push
jb
arpl
jb
out
jle
pop
mov
pop
push
adc
mov
sub
xchg
jmp
adcl
loop
pop
sahf
cmp
imulb
cmp
pusha
aas
push
stc
fisttpll
xor
pop
orb
fcmovne
push
scas
jmp
bound
in
sub
dec
movsl
mov
faddp
and
add
or
cmp
stos
test
pop
sub
add
add
add
lahf
imul
movsb
or
cmp
pushf
test
add
xor
scas
push
mov
arpl
shr
add
sub
mov
sub
sbb
xchg
or
jmp
rcr
dec
mov
sbbb
lods
popa
negl
orl
js
pushw
orb
push
popa
and
shlb
and
int
cmp
add
insl
sbb
xchg
add
lds
fcompl
push
shrd
and
sbb
jns
inc
jp
daa
dec
sbb
shl
pop
jbe
dec
daa
scas
dec
jmp
out
pusha
fisubs
inc
sub
outsb
adc
cmp
or
adc
pop
mov
add
push
fbstp
stc
int3
mov
pop
or
jge
inc
sub
mov
les
sbb
mov
dec
push
das
cld
les
add
add
stc
lods
xor
ja
psllw
add
cmc
add
add
mov
mov
mulb
xor
movsb
lock
std
into
mov
shll
push
push
out
dec
xor
in
outsl
xchg
jg
fcoms
mov
push
addr16
push
mov
pop
leave
stos
iret
inc
mov
addl
mov
adc
dec
xchg
shrb
mov
inc
push
or
cvtps2pd
insb
lret
add
cli
setp
cmc
adc
sahf
sbb
jle
out
and
js
xor
xchg
aas
movswl
inc
fidivrs
fs
lock
sub
aam
add
lds
add
in
in
aas
jne
out
push
cmp
cmpsl
add
inc
and
mov
mov
in
scas
mov
mov
dec
inc
sub
rclb
cltd
jae
mov
add
ficoms
stos
sbb
ljmp
pop
lcall
add
add
fiadds
push
push
push
pop
dec
int
ret
je
aaa
lock
test
data16
dec
data16
leave
stc
mov
dec
imul
add
cmp
gs
xchg
jb
xchg
xchg
jae
mov
xchg
mov
jg
sti
cmp
aad
nop
pop
xchg
imul
xorb
or
dec
mov
push
cltd
dec
sbb
cwtl
mov
mov
scas
ljmp
pop
xlat
mov
arpl
lret
lahf
push
inc
in
xchg
push
mov
jnp
subl
jnp
inc
mov
jo
cli
dec
movsl
repz
or
xchg
mov
pop
rcll
incl
pushf
sbb
adc
add
lea
push
sbb
insl
mov
nop
jecxz
adc
daa
jo
nop
inc
jmp
jbe
add
mov
out
sbbb
sbb
cmp
add
add
pop
aad
subb
adc
pop
fbstp
jne
rcrb
pop
add
sarb
aam
and
xor
cli
leave
pop
xor
loopne
lea
push
mov
inc
mov
lods
dec
mov
dec
sbb
add
pop
cwtl
jge
fs
jmp
imul
movsb
aam
inc
fdiv
jle
icebp
fs
fadds
pop
push
lock
mov
call
insb
jmp
xor
xchg
movsb
xlat
push
ja
cmp
mov
lods
scas
mov
rcrb
jo
repnz
aad
fldenv
xchg
in
in
es
pusha
lock
jns
pusha
pusha
adc
pop
lcall
dec
pop
lcall
pop
repz
fwait
shlb
out
cmp
je
shll
jl
mov
lahf
add
or
sub
add
dec
or
out
aad
jo
cli
adc
xor
add
cmc
add
add
lahf
jl
or
dec
jbe
repnz
jae
cmpsl
push
add
outsb
push
mov
mov
or
cmp
es
lcall
cmp
cli
jge
outsb
fucompp
das
loop
fnstenv
arpl
sahf
mov
cmp
loopne
push
orl
push
cld
mov
arpl
jecxz
push
testb
lock
adc
out
aas
mov
mov
mov
incl
ja
lods
ljmp
sub
cmp
dec
pop
jecxz
in
scas
xchg
js
xchg
outsb
cmp
or
ja
sti
jnp
and
test
or
jnp
cmp
dec
xchg
es
es
outsb
lcall
aam
push
mov
jecxz
add
mov
jno
inc
hlt
in
and
mov
faddp
lods
dec
add
add
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
dec
inc
push
mov
jmp
or
push
inc
add
sub
scas
mov
test
ljmp
dec
add
dec
inc
in
aaa
jo
jmp
icebp
sbb
mov
hlt
cmp
xor
mov
iret
and
inc
outsl
and
xor
incb
scas
mov
add
sub
adc
imul
sahf
aaa
cmp
sarb
jle
dec
dec
xor
sbb
xchg
sbb
xor
mov
into
nop
sub
cli
mov
mov
clc
ds
jl
insb
xchg
test
jp
sub
fidivs
mov
dec
push
pop
xchg
push
lods
sbb
in
lret
cld
pusha
push
mov
cli
inc
mov
pop
inc
xor
andl
add
add
lods
jg
add
lods
fisttps
add
cmc
add
add
jle
arpl
loope
cmp
icebp
xchg
jmp
ss
cmp
popa
je
adc
in
jp
aas
enter
adc
ljmp
fwait
pop
mov
aad
shrl
addl
aam
inc
and
mov
lods
cmp
push
outsb
inc
lcall
adc
xchg
jo
ja
mov
push
ficompl
fdivs
jecxz
in
int3
idivb
stos
sbb
pop
pop
fistl
rorb
mov
xor
sbb
shll
loop
out
cmp
popa
dec
out
ja
imul
fdivrl
mov
out
aaa
and
bound
in
je
xchg
test
cmc
sub
fsubl
andb
mov
jns
out
or
adc
pop
ss
in
aad
and
add
add
jg
cld
add
adc
pop
adc
add
cmc
add
add
push
test
test
fidivs
inc
xchg
sbb
dec
das
push
cmpsl
ret
add
xchg
or
lret
lahf
imul
bnd
sahf
sbb
pushf
stos
sub
push
push
and
fndisi(8087
cs
rorb
mov
mov
dec
imul
mov
out
jbe
out
ja
push
push
inc
push
add
and
and
clc
inc
push
pop
out
mov
pop
mov
push
cwtl
out
and
scas
test
or
push
popa
cmp
daa
shlb
aas
nop
pushl
ds
cmp
mov
ret
push
add
mov
cmp
xor
mov
stos
gs
pusha
in
mov
add
jl
popa
in
in
push
xor
xchg
lcall
ret
pop
sub
sarb
jl
inc
lcall
mov
inc
adc
xchg
sub
leave
add
add
mov
iret
mov
aad
push
cltd
push
xor
add
add
add
in
lret
xchg
out
xchg
adc
das
mov
out
add
js
mov
cli
jp
aaa
and
ja
gs
and
pusha
and
pop
pop
arpl
dec
jg
nop
stc
cmpsl
pop
dec
pop
imul
lret
mov
mov
add
stos
add
jmp
fdivrs
mov
add
push
jne
ljmp
xchg
sub
add
lods
neg
les
lahf
insb
sbb
add
pop
scas
cld
inc
enter
rorl
or
or
enter
jle
ret
pop
ljmp
insl
test
dec
jae
or
out
cld
mov
cmpsl
das
push
pop
mov
popf
addr16
lods
or
addr16
pop
scas
mov
sbb
mov
mov
les
aas
cli
or
sbb
pop
cmp
pop
sti
addr16
add
add
mov
sbb
lods
mov
cmc
add
add
xor
xchg
add
sti
dec
pop
clc
frstor
notl
daa
arpl
xchg
sahf
imul
orb
gs
loopne
sub
fs
shr
cltd
loop
sbb
ret
lret
add
pop
dec
inc
mov
int
mov
jp
lods
xchg
dec
xor
outsw
or
dec
cmpsl
sub
and
sub
mov
adc
dec
pop
pop
imul
jl
ljmp
rcl
dec
pop
cltd
push
sbb
fnsetpm(287
dec
cwtl
pop
adc
or
sbb
mov
popa
or
adc
pop
mov
adc
roll
sub
adc
shlb
test
adc
cld
in
dec
loopne
test
call
lret
jmp
cwtl
outsb
add
je
loop
ljmp
shrl
test
sbb
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
in
das
lock
add
daa
loop
mov
lock
sarl
jge
dec
jno
sbb
sti
mov
mov
lcall
jb
jo
cwtl
out
jp
lcall
sti
scas
and
jle
sub
cltd
inc
lahf
sbb
add
xchg
repz
stos
and
cltd
adc
sbb
jns
add
les
fbld
shrl
xchg
mov
mov
lcall
clc
rcrb
loope
mov
pusha
cmp
mov
gs
push
nop
jno
push
pop
addr16
xchg
popa
jmp
fdivrl
push
fcomi
shlb
daa
xchg
lret
or
mov
pop
jle
jecxz
sahf
mov
icebp
jne
pop
pop
lds
dec
in
cld
and
cmp
insb
lcall
xchg
add
cmp
add
test
imul
push
lcall
in
add
cmc
add
add
push
inc
jl
jecxz
lods
lahf
and
in
jno
icebp
add
jl
dec
push
movsb
and
mov
adc
mov
mov
xor
mov
fs
sti
test
or
add
xchg
xlat
pop
mov
cmp
add
jns
lods
xchg
lods
push
mov
xor
mov
dec
js
fwait
sub
sbb
push
les
int
ficompl
mov
sbb
push
aaa
mov
insl
dec
push
int
xchg
push
inc
or
addr16
and
pushf
stos
subb
cli
and
int
clc
ss
daa
lods
or
mov
test
push
sarb
cmpsb
mov
std
mov
add
cwtl
leave
add
aam
add
jbe
mov
cmp
xchg
mov
dec
fmuls
pop
fldl
fiadds
add
fs
es
data16
cmc
jle
dec
es
xor
fidivl
add
cmc
add
add
wrmsr
mov
add
loope
xchg
sub
outsb
aaa
sarb
mov
repnz
imul
push
rcrl
cmpsl
mov
fbld
cs
lcall
jbe
lods
shll
cli
jp
fisubrs
cmc
jnp
push
xchg
mov
push
mov
pop
jnp
mov
push
add
push
rclb
lock
push
lcall
adc
jae
enter
jne
test
data16
inc
jg
push
in
push
iret
xchg
pop
adc
jae
testl
out
cwtl
call
and
aas
add
stos
outsb
adc
push
jecxz
out
push
jmp
fwait
lret
packssdw
dec
xor
mov
pop
sbb
fsubl
add
add
dec
mov
imul
cmpsb
mov
cmp
add
add
add
jle
fimull
fsubr
push
enter
imull
push
lret
loop
inc
addl
cld
add
sbb
xor
daa
into
xchg
les
into
in
xor
int3
cmpsl
mov
mov
xor
inc
sbb
dec
sub
mov
in
aad
xchg
repnz
cmpsb
inc
ret
sbb
push
xchg
push
scas
sbb
int
sub
dec
inc
pop
adc
sbb
jae
mov
push
mov
test
lds
jae
fdivrl
add
pop
fs
xchg
pop
fistpl
adcb
lods
inc
enter
jecxz
lret
stc
or
nop
xchg
fcompl
test
cmp
xchg
gs
xchg
sub
adc
sbb
dec
nop
repz
loope
cltd
pop
cld
xor
fstl
mov
sbb
jb
cmc
add
add
and
push
sti
cmpsl
pop
push
jo
pop
iret
jo
les
add
cmc
add
add
aad
stos
jae
inc
insb
addl
andb
int
inc
pushl
stos
mov
xchg
cmp
stos
movsb
adc
stc
inc
dec
ljmp
movsl
add
jae
stc
fwait
test
lret
scas
push
hlt
jge
cli
fwait
fs
test
push
fisttps
pop
stos
lock
mov
out
mov
xchg
mov
mov
adc
sub
imul
ljmp
scas
cmp
push
inc
fists
jae
xchg
adc
and
cmc
jl
sub
add
addl
scas
pop
sbb
mov
push
jnp
pop
imul
daa
movl
dec
mov
stc
dec
insl
xor
push
stos
int3
out
mov
push
xor
jne
jne
nop
add
add
mov
std
cmp
jecxz
mov
add
add
add
jae
pushw
and
jo
ja
out
push
jge
call
std
faddp
add
test
hlt
push
add
push
xchg
xor
enter
insb
and
jb
dec
sahf
add
sbb
pop
cmp
xchg
push
fcomi
aam
in
jecxz
sahf
bound
jno
aam
out
pushf
inc
js
stos
lret
dec
lods
les
add
ficoml
cmp
lea
shll
lahf
xchg
xchg
ret
insl
aad
adc
sysret
mov
fisubs
jo
call
lods
jae
ret
inc
sbb
or
cmp
pop
arpl
jmp
scas
jns
icebp
add
lret
sbb
enter
mov
jecxz
mov
nop
jnp
clc
cld
dec
ficoml
mov
out
dec
ja
clc
loopne
pop
out
and
fmuls
nop
jle
mov
fdivp
mov
sahf
adc
push
add
add
and
jecxz
or
scas
cmp
add
add
add
in
clc
add
cmp
std
and
dec
mov
outsl
loope
jbe
xchg
xchg
cli
rcrl
scas
pushf
jecxz
popa
cmp
cli
mov
jbe
fwait
dec
xchg
jmp
aad
jno
ror
frstor
mov
dec
adc
ljmp
adc
push
or
mov
adc
and
xchg
leave
leave
sbb
jg
add
insl
mov
mov
push
cmpsb
cwtl
sbb
test
pop
add
mov
jbe
ret
jle
data16
lods
add
je
cmp
addr16
repnz
sahf
jae
test
daa
dec
xorl
ret
ss
mov
mov
test
dec
xchg
mov
imul
sub
repz
ret
jnp
andl
push
pop
std
adc
push
repnz
add
add
add
xchg
ficomps
push
mov
add
add
add
xchg
mov
pop
orl
xchg
pop
pop
jmp
aas
cmp
shrl
scas
mov
stos
adc
outsb
adc
out
jnp
or
arpl
dec
pop
in
add
lock
jle
hlt
jae
pusha
cmc
outsb
das
pop
mov
inc
data16
rorb
cmp
pop
lods
repz
idivb
xchg
pop
xor
incb
xor
sarb
fwait
cld
mov
mov
inc
add
xchg
or
iret
mov
sbb
add
call
mov
inc
arpl
in
pop
test
sahf
mov
or
mov
xchg
xchg
inc
and
arpl
mov
cmpsl
mov
loop
jg
addb
rorl
add
add
lods
xor
mov
pop
add
cmp
add
mov
dec
jp
in
repz
test
aaa
ret
std
xchg
dec
sub
pop
or
xchg
dec
sub
cmp
sti
int
ret
cmpsl
fdiv
mov
shlb
test
sbb
push
popf
jp
cld
test
jne
scas
adc
shlb
ficomps
adc
and
mov
jle
jno
movsl
repz
jmp
outsl
xorb
jge
loope
push
mov
ja
cmpl
out
dec
fnstenv
outsb
sar
lock
xor
dec
adc
aas
jae
cmp
jg
jo
xchg
je
ficoms
jge
jg
es
cmp
or
inc
jns
sub
cwtl
mov
ds
mov
add
add
fwait
add
aas
and
lea
cld
fs
das
and
iret
div
jne
ret
jb
stc
testl
add
add
lret
mov
cwtl
sbb
push
lea
add
cmc
add
add
push
add
imul
xor
ret
fcmovnu
push
xor
ljmp
cwtl
sub
sub
mov
lds
clc
mov
fmul
dec
cmp
imul
xchg
out
mov
fnstsw
fdivrs
movsb
adc
push
lods
sbb
jl
loop
mov
xchg
rcll
xchg
out
push
aam
push
int3
mov
lcall
push
xor
int
aad
loope
pop
fcoms
test
mov
mov
and
cmpb
outsl
mov
xchg
push
pop
aas
xchg
cmpsb
push
icebp
imul
dec
sub
add
daa
push
inc
sub
dec
dec
aaa
pop
dec
in
cmp
aam
fdivs
loopne
cmc
sti
xchg
mov
mov
jmp
addr16
in
add
add
sti
pop
jge
div
cmp
pop
popa
adc
cmpb
add
add
add
inc
test
pop
add
stos
mov
xchg
jge
push
shll
xor
dec
pop
dec
ljmp
or
mov
das
cmp
das
mov
mov
shl
sub
or
loop
incb
jne
dec
enter
sub
aad
popf
adc
dec
test
repnz
or
repz
jge
sbb
sbb
stos
cmp
int3
jmp
ds
dec
inc
movd
mov
les
std
loope
mov
repz
lock
cwtl
xchg
je
shrl
out
dec
xlat
push
dec
ror
cltd
cld
xor
inc
mov
jae
jp
lret
rep
decl
cmp
pop
cwtl
pop
cmp
push
leave
sub
sbb
out
mov
sub
jb
mull
mov
adc
or
push
xchg
dec
push
imul
or
add
pusha
cltd
fsub
std
in
popf
jle
es
shr
js
inc
add
cmc
add
add
les
xchg
lret
mov
out
add
rcrb
fucomip
cltd
pop
cmp
sbb
inc
cmp
fs
xchg
sub
cmc
mov
add
mov
loope
inc
jecxz
inc
mov
nop
adc
mov
cli
push
imul
xor
mov
cmp
stos
sahf
mov
in
mov
push
add
lahf
fldcw
repz
pop
scas
jg
rcl
sub
dec
lods
cmpsl
std
xchg
pushf
jne
sub
adc
sti
sub
push
xor
push
nop
stc
mov
add
js
or
jecxz
cmp
cmc
mov
movsl
outsl
push
out
sti
xchg
call
sti
lods
xchg
mov
clc
mov
xchg
lret
dec
xchg
push
xor
ret
mov
loopne
and
test
jge
inc
rorl
mov
or
lds
sbb
cwtl
add
add
jp
jnp
sti
xchg
jle
popf
loopne
adc
xor
add
add
add
sub
leave
test
sbb
adc
lds
rcl
push
arpl
inc
adc
inc
push
pushl
fcomps
lahf
roll
test
aas
test
stc
dec
push
push
inc
dec
push
movsl
test
repz
mov
mov
outsb
lds
xchg
sub
xchg
jge
mov
and
sar
pusha
jno
cli
pop
pop
sub
iret
aaa
mov
inc
jecxz
mov
or
pop
fcomps
cmpsb
xlat
pop
mov
cmp
mov
push
dec
lock
fcompl
inc
mov
sbb
jo
and
stos
dec
add
test
inc
out
sub
jl
fimull
adc
insl
fcompl
dec
pop
dec
insb
data16
fcmove
mov
xchg
ss
lahf
int3
adc
scas
inc
fbstp
jmp
add
mov
push
sti
loopne
cmp
sbb
push
mov
add
cmc
add
add
pop
pusha
push
pushf
push
add
stos
mov
and
and
sub
out
and
imul
jg
gs
dec
cwtl
test
inc
in
mov
sbb
imul
in
repnz
dec
xchg
mov
mov
addr16
push
xchg
dec
ret
call
out
xchg
pop
js
push
mov
or
gs
repz
aad
xor
push
and
inc
pop
test
incl
popa
std
in
loopne
stc
test
insb
or
sbb
dec
push
pop
mov
aad
popf
pop
sub
xor
cmc
push
mov
sbbb
jns
cmpsb
jg
mov
lret
ficompl
cwtl
pushf
imul
add
jno
jbe
dec
lcall
sbb
or
in
adc
clc
mov
push
mov
cltd
imul
xor
adc
add
add
cmp
and
push
dec
loop
mov
inc
add
cmc
add
add
lods
cltd
test
or
jg
int3
jb
not
daa
fsubs
cli
shr
push
lcall
pop
pop
sub
test
add
cmpsl
ss
pop
aaa
mov
mov
mov
addr16
fcmovne
jbe
ret
out
cmpsl
jne
sbb
sbbl
call
pushf
or
jno
stos
or
jne
cmovno
jp
adc
cmp
aaa
sub
les
cmp
imul
xchg
jb
push
pop
addr16
pop
xor
and
pushf
popf
int3
mov
push
inc
ljmp
je
icebp
mov
xchg
test
rol
in
cld
sub
pop
sub
sbb
or
loop
test
or
add
push
test
sarb
adc
scas
jle
mov
test
push
outsl
js
pop
mov
add
add
cmp
jge
stos
movsl
push
arpl
adc
mov
cmc
add
add
into
bound
dec
jmp
and
enter
rorl
hlt
gs
xchg
loopne
scas
cmp
inc
dec
cmp
fwait
pop
pushf
and
pop
cmpl
xchg
push
nop
into
push
mov
fstl
in
xlat
xor
insb
lret
inc
sahf
shll
adc
and
mov
mov
jecxz
iret
or
jl
inc
cmp
out
addr16
sbb
mov
lret
or
cmpb
push
pop
lock
cmp
stos
adc
ja
movsl
dec
xchg
push
shl
sahf
popf
fwait
je
add
leave
sbb
pop
aad
rcl
pop
pop
jbe
lret
sbbl
daa
mov
xor
jge
out
inc
leave
and
adc
ret
or
aad
mov
iret
mov
push
das
pusha
sbbb
shll
pop
lret
jge
inc
sbb
stc
cmp
rcll
divb
rclb
mov
push
test
add
cmc
add
add
xchg
cli
mov
jbe
sbb
stc
dec
idivl
pop
mov
mov
test
ret
or
popa
clc
lock
xchg
mov
push
pop
test
xor
dec
inc
sbb
add
hlt
xchg
lahf
jno
inc
std
sbb
ret
and
aam
ss
sub
ret
mov
fmull
lahf
sub
mov
or
push
dec
or
arpl
mov
daa
xchg
xor
jle
lcall
inc
sub
xor
push
sub
mov
mov
add
pusha
orl
push
inc
add
out
testb
xor
pop
cltd
adc
pop
sub
clc
bound
imul
xor
sub
jg
shlb
out
add
add
jbe
idivl
ss
repz
jle
nop
xor
add
add
xor
push
sbb
stc
jns
jne
movsb
imul
push
jno
push
xchg
lahf
xchg
shlb
and
add
jne
push
loope
nop
sub
mov
test
andl
dec
jl
mov
cmp
dec
clc
gs
xlat
push
and
sbb
je
jmp
xchg
ret
add
xchg
scas
cmp
inc
xchg
push
mov
xchg
push
pushf
push
inc
mov
xchg
imul
out
mov
ja
add
cmp
cli
mov
mov
test
sbb
dec
ret
cmc
sub
idivb
out
jnp
cmp
lods
xchg
subl
stc
cmp
adc
cmpb
jl
jle
pop
aad
mov
cmp
push
mov
xchg
push
dec
fisttpll
jns
lds
pop
cmp
xchg
push
push
add
add
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
clc
mov
dec
cwtl
test
or
std
pop
ds
scas
push
outsl
jo
in
mov
sub
jge
jo
mov
mov
mov
dec
fdivl
out
addr16
sbb
mov
jge
xchg
lahf
lret
sahf
lret
fisttpll
addl
and
inc
xchg
xor
sar
mov
pop
cld
mul
dec
pop
fisubrs
sbb
pop
out
cmp
sarb
inc
test
popf
or
sub
push
sti
addr16
aad
xor
mov
int3
cltd
xor
push
int
xorl
std
pop
in
add
fstpt
ds
add
ljmp
les
lea
pop
inc
or
stc
repnz
imul
sub
dec
mov
iret
jmp
add
add
insb
pop
pushf
scas
fistpll
loop
rolb
add
cmc
add
add
mov
pop
jg
jb
repnz
xlat
in
sub
mov
test
es
pop
icebp
inc
mov
das
cs
push
jg
mov
imul
jge
xchg
jecxz
dec
or
mov
mov
mov
pop
mov
ljmp
pop
fcomps
push
mov
in
jl
xchg
and
push
pop
mov
jecxz
into
push
lods
inc
gs
leave
mov
test
and
adc
push
jmp
ret
in
or
addb
or
adc
xlat
sbb
inc
mov
mov
pop
xchg
mov
jb
mov
aad
push
add
cmp
in
cmpb
mov
sub
dec
cld
mov
and
push
and
clc
sti
ret
mov
jp
mov
pop
xor
push
or
cmpsl
cli
push
push
cli
int
add
add
cmp
les
frstor
adc
add
add
add
lea
mov
xchg
ds
push
jp
outsb
jb
jg
mov
add
push
sbb
push
mulb
stos
cmp
push
mov
mov
jne
stos
arpl
and
dec
pop
insl
scas
adc
and
sbb
fwait
stos
ss
push
mov
cmc
enter
dec
mov
das
cmpsl
imul
dec
je
and
add
inc
inc
mov
shlb
mov
mov
rorl
fadd
mov
jg
pop
movsl
ss
xor
bnd
jle
dec
mov
mov
dec
and
adc
cli
cmp
stos
out
xchg
add
push
mov
cmp
jle
sub
xchg
mov
mov
jae,pt
mov
add
cmp
scas
push
cmp
sub
adc
xor
add
add
adc
incl
arpl
inc
sbb
outsl
or
add
add
add
add
pop
jge
cmc
xchg
xchg
out
in
mov
adc
in
addw
loop
pop
popf
jbe
jp
push
je
hlt
cwtl
repnz
pop
sbb
fnsave
dec
pop
xchg
add
sbb
xchg
adc
arpl
adc
pop
in
push
mov
xchg
addl
std
popf
inc
pop
aas
adc
sbb
inc
shll
xchg
mov
into
mov
fisubrs
test
jbe
sub
pop
pop
mov
push
cmpsl
jo
push
push
repz
test
mov
adc
gs
or
jbe
pop
lock
or
outsl
push
insb
jp
cmp
scas
dec
sbb
jl
bound
pop
sbb
mov
sub
sbb
push
push
push
inc
sub
add
and
das
cmp
lods
repz
in
pusha
out
mov
add
decb
add
add
add
inc
adc
pop
lods
fdiv
jo
jle
and
sbb
shlb
in
sbb
sub
repnz
lahf
clc
mov
ds
scas
fidivs
xchg
push
iret
mov
and
cmc
inc
dec
test
inc
xor
divb
lods
into
imul
icebp
rcrl
fnsave
in
cmp
popa
or
subb
add
lock
jo
lcall
mov
idivl
in
lcall
pushf
mov
clc
out
aas
sbb
cmp
dec
cmpsb
jge
mov
shrl
xchg
cmpb
je
aaa
add
insb
xchg
lcall
icebp
sub
or
daa
sbb
jo
xchg
cmp
pop
aas
pop
mov
pop
xchg
and
push
or
inc
lea
aad
add
add
daa
push
cld
push
std
jmp
push
jg
push
lret
cmp
xor
cmc
add
add
jge
out
xchg
jnp
in
push
lea
adc
inc
call
hlt
in
nop
adc
fcoml
cli
adc
inc
addl
loope
lods
jbe
push
xchg
icebp
add
icebp
adc
cmpsl
jle
jp
loop
flds
push
gs
daa
mov
xchg
outsl
sub
xor
mov
and
adc
push
push
sub
ss
loop,pn
jns
sub
lock
jnp
call
les
mov
dec
or
popf
and
xchg
int3
movsb
daa
add
inc
push
or
mov
jb
jb
mov
mov
dec
out
pop
aam
sahf
mov
xlat
inc
in
inc
cmpsl
xchg
xor
in
icebp
stos
stos
jne
mov
jg
int3
sbb
in
push
in
rorb
jb
add
add
add
sbb
dec
push
cwtl
adc
dec
add
cmc
add
add
push
xchg
push
and
mov
sub
add
iret
rcll
jb
repz
xchg
std
dec
stos
or
movsl
dec
arpl
xor
loope
hlt
jmp
sub
add
pushl
adc
fs
push
mov
and
cltd
daa
xor
or
scas
add
mov
je
and
sub
insl
jnp
jb
sub
pop
push
fistpl
sti
or
mov
popf
xchg
push
nop
jle
imul
fsubr
arpl
in
or
xchg
dec
dec
outsb
iret
js
repnz
or
mov
ret
cmp
mov
sub
xchg
loopne
fidivrl
lods
cwtl
in
stos
or
mov
and
sbb
fstl
add
adc
jb
mov
add
idivl
mov
inc
fisttpll
add
add
add
outsb
imul
mov
jno
jmp
insl
in
scas
inc
stc
imul
or
rorl
pop
or
shlb
enter
pop
jno
xlat
mov
in
xor
clc
inc
adc
adc
ror
jbe
pop
sub
xchg
sbb
sti
incb
rol
pop
pop
sub
test
addr16
dec
dec
push
js
imul
pop
repz
xchg
adc
daa
shrb
xor
nop
pop
repnz
push
pop
stos
push
stos
mov
add
and
addr16
and
and
out
adc
adc
je
cwtl
mov
and
lods
cld
mov
xchg
adc
subl
xor
cmpsl
repz
popa
dec
iret
push
out
ss
mov
in
gs
aaa
sti
andb
lret
mov
dec
lods
cmp
add
mov
ja
jg
xchg
lcall
dec
add
cmc
add
add
sbb
cltd
sub
pop
cli
shrb
xchg
aam
fildl
xchg
sarl
sbb
aaa
cmp
add
add
cmp
leave
push
push
stos
dec
push
loope
sbb
dec
mov
add
mov
inc
je
jne
inc
shlb
push
sbb
pop
lock
mov
mov
inc
jl
loope
ja
mov
dec
rcrl
and
xchg
jb
iret
pop
xchg
test
idiv
xchg
xchg
out
ss
lock
ss
xchg
xor
pop
loope
adc
mov
cmp
aad
mov
ror
mov
xchg
xor
das
add
sub
fistpl
mov
add
or
jnp
dec
dec
pop
and
sbb
test
loop
add
add
push
dec
lret
jmp
imul
xchg
aad
xchg
movsb
dec
dec
add
cmc
add
add
add
aas
push
pop
inc
sahf
hlt
mov
xchg
mov
into
in
push
cmp
sbbb
cmc
inc
adc
jp
imul
and
inc
sub
daa
dec
sbb
ja
adc
mov
xor
mov
enter
notb
cld
sub
sti
push
mov
fwait
insb
xchg
cmp
aam
jbe
adc
and
icebp
sub
inc
add
test
or
cmp
aaa
xchg
cmp
lods
rcrl
mov
leave
fistpll
ror
pop
push
shll
jns
xlat
mov
pushf
cmp
fcomp
stos
leave
fwait
xor
insb
cmpsb
fwait
and
adc
fsts
int3
jg
push
cmp
repz
sub
in
sub
inc
je
sbb
cmp
std
push
dec
daa
pusha
cwtl
inc
push
sub
jo
inc
add
add
add
cwtl
loope
std
jge
cwtl
and
fnstcw
push
add
cmc
add
add
sbb
dec
hlt
lahf
loope
xor
mov
jns
pop
lcall
jmp
inc
fstpl
mov
xchg
xor
std
addl
iret
lcall
loop
mov
mov
aaa
movsb
xchg
mov
call
fs
dec
xor
mov
dec
sbb
sbb
mov
fisttpl
xchg
fstpl
mov
pop
pop
arpl
int3
clc
jae
mov
mov
pushf
out
aad
popf
jecxz
pop
push
aam
and
and
mov
mov
popa
and
inc
loopne
sub
sub
push
jmp
sarl
rol
or
pop
outsb
clc
jmp
mov
mov
popf
xor
stc
ljmp
add
lods
sub
and
cs
out
mov
out
pop
pop
aas
jo
sbb
adc
add
sub
jns
clc
mov
popf
add
mov
cmc
add
add
fucom
nop
push
rorb
popf
pop
pop
pop
subb
filds
pop
pushf
repz
out
cwtl
push
shll
push
dec
loop
xor
mov
test
in
sbb
arpl
fwait
jbe
mov
cmpsb
pusha
lock
scas
mov
xlat
sub
pushf
jb
cmc
jbe
rol
repnz
loop
out
push
sbbb
mov
daa
dec
fcomps
sub
push
icebp
sbb
add
add
je
mov
cld
scas
mov
sub
js
xor
scas
push
mov
jl
or
push
mov
xchg
cs
rdtsc
loop
cs
jp
adc
xchg
out
dec
es
roll
push
xchg
xor
xor
shlb
mov
dec
stos
xor
xor
roll
add
js
ret
jg
mov
ret
dec
out
push
add
cmc
add
add
push
in
mov
jge
int3
mov
test
xor
pop
or
or
icebp
das
mov
imul
stos
es
dec
enter
xor
inc
or
push
daa
pop
xor
and
sbb
mov
xchg
dec
cs
mov
and
ljmp
jns
adc
add
lcall
fidivrs
mov
mov
pusha
xchg
pop
ja
mov
inc
iret
ja
mov
hlt
or
jl
mov
lret
push
cmp
xchg
jmp
add
cmp
stos
mov
das
add
enter
cmp
inc
imul
sbb
fs
inc
pop
lret
pop
scas
adc
cmp
pushf
xchg
int
and
jnp
add
repnz
add
add
das
mov
cwtl
out
daa
jle
jns
fwait
push
add
cmc
add
add
mov
sub
pop
mov
ret
stc
jns
pop
mov
inc
cld
jl
daa
hlt
mov
or
xchg
idivb
fs
cmp
xor
jl
out
testl
movsl
mov
popa
out
pop
jle
xor
cli
push
and
cmp
pop
mov
lods
mulb
jne
lds
inc
mov
and
rclb
pop
jbe
into
outsl
jnp
pop
jp
into
pop
push
aas
push
popa
pop
push
sti
mov
push
dec
pushf
xchg
jle
in
jae
xchg
xor
mov
sub
adc
xchg
rcrl
mov
das
push
dec
mov
pop
cmpsl
and
jg
nop
push
push
jmp
lcall
popf
lahf
mov
push
jae
popa
fcomi
sub
and
ja
ljmp
add
hlt
gs
push
sub
mov
add
add
add
mov
popa
add
fistpll
add
xchg
imul
lods
mov
xchg
aad
jmp
stc
jle
or
subb
jae
sub
pusha
push
mov
pushf
push
icebp
add
dec
push
push
mov
pop
dec
adc
outsb
mov
pushf
iret
test
lcall
jecxz
sbb
mov
xor
seto
jne
loope
mov
out
jns
ja
into
push
jns
xchg
adc
inc
sbb
inc
and
cld
loopne
jbe
or
or
mov
xchg
adc
in
dec
add
popl
cld
jo
adc
mov
fmull
ds
in
lahf
mov
sbb
arpl
inc
lds
pushf
nop
mov
aam
jns
inc
scas
jns
clc
push
mov
add
add
aas
gs
repnz
and
adc
pushf
dec
test
add
add
add
fstpl
orb
cltd
movb
or
dec
imul
ds
cwtl
ds
or
sbb
add
rcll
mov
xlat
sbb
shl
inc
xor
in
movsl
dec
mov
mov
out
push
mov
jnp
xchg
data16
ret
add
jmpw
mov
jae
js
imul
lret
repz
jp
sub
scas
or
xchg
push
stos
shrb
imul
jnp
cmp
mov
sub
mov
mov
xchg
and
aam
insl
lret
xor
mov
pushf
xor
or
adc
sub
adc
in
or
mov
idivb
arpl
arpl
jo
fcompl
xchg
sbb
sbb
adc
les
add
mov
out
fisttpll
mov
jp
add
cmc
add
add
lret
dec
xchg
and
push
mov
lcall
test
int3
xor
mov
push
pop
xor
cmp
ja
jmp
mov
xlat
add
cld
add
test
or
push
pushl
dec
sahf
lock
add
jnp
vprotb
cmp
ljmp
cmp
mov
pop
cmpl
pushf
lret
imul
add
mov
xor
xlat
test
xchg
lds
insb
inc
pop
mov
add
dec
icebp
int
pop
jo
jae
jmp
popa
jae
test
jle
js
pop
xor
bnd
popf
pop
ret
xor
icebp
aaa
push
cli
pop
aaa
stc
imul
test
call
fadd
jbe
xor
jbe
and
pop
dec
inc
out
cmp
and
add
add
mov
arpl
outsl
push
add
cmc
add
add
roll
and
sbb
fisttpll
mov
lret
pop
pusha
and
pop
test
push
and
sahf
scas
xor
ret
jg
pop
add
sbb
movsl
pop
mov
push
cmc
icebp
sub
jle
jle
push
push
push
xor
hlt
dec
inc
aam
push
ret
mov
js
sbbl
in
sbb
and
inc
fbstp
mov
mov
adc
test
dec
cwtl
rorb
insb
adc
mov
in
or
stos
mov
push
mov
shrl
xchg
lret
subl
lods
cmp
mov
dec
sbb
mov
cmp
dec
stos
mov
pop
fs
cmp
jg
sub
fs
cli
icebp
fimull
pop
ljmp
addr16
insb
cmc
mov
jge
fcoms
add
add
jmp
out
aas
mov
adc
cmc
add
add
add
mov
pop
xor
cmp
push
insl
sub
or
das
xchg
mov
arpl
xchg
ljmp
mov
mov
int3
rolb
cld
push
ljmp
scas
lods
dec
sar
adc
aad
inc
iret
cmpsl
cmp
pop
mov
xlat
sub
hlt
ja
jg
xchg
out
iret
pop
fisubl
xor
fimull
jge
sahf
rcl
fs
rcll
or
jecxz
mov
nop
push
shll
jmp
cwtl
push
imull
inc
sbbl
stos
popf
cld
push
jmp
cmpl
movsb
shrl
ljmp
adc
shlb
and
pop
cmp
mov
xchg
outsb
dec
repz
mov
nop
pushf
sar
movsb
xor
call
stos
and
aad
std
xchg
bnd
ja
add
cmp
imul
out
mov
arpl
fisttpll
pop
add
cmc
add
add
lods
outsb
fcom
inc
mov
xabort
clc
stos
inc
pushl
lret
clc
or
jns
fidivl
aam
subb
xchg
jl
or
stos
call
cli
rcrb
jge
int3
dec
sub
fs
iret
std
rsm
gs
mov
sbb
mov
pop
lock
xorl
test
mov
dec
sbb
aad
inc
in
js
lods
jns
jne
dec
lea
xchg
add
push
jae
jmp
xchg
xchg
mov
es
inc
add
flds
stc
push
add
leave
xtest
sub
inc
js
cmp
and
inc
lcall
in
add
mov
xor
and
mov
cmp
aam
push
xorb
call
sbb
xchg
or
mov
pop
fisubrs
shrb
fldl
push
ret
aad
add
add
add
dec
stc
mov
clc
add
mov
pop
add
cmc
add
add
adc
cmpsl
push
sub
movsl
xor
sub
adc
sysexit
jne
jp
das
mov
mov
cli
addr16
fadds
insl
test
out
lret
pushf
jno
fwait
lea
cmp
pop
sbb
inc
ret
in
int
add
adc
xor
push
push
repnz
pop
xchg
popf
add
in
int3
hlt
aam
pop
pop
pop
cli
ss
cltd
jmp
xlat
xchg
sub
test
xchg
adc
sub
dec
jp
insl
push
xor
sbb
xor
test
ret
incb
add
mov
cs
les
lret
mov
ja
jbe
int
movsl
adc
insb
das
lods
in
adc
outsb
insl
shll
pop
out
lods
cmp
aas
mov
or
mov
add
mov
xchg
out
add
add
jg
cld
jo
hlt
leave
fcoml
add
cmc
add
add
mov
lret
rol
jmp
jns
outsb
ffreep
push
add
fsubr
repz
inc
shl
jmp
in
push
pop
mov
dec
sarb
stc
mov
daa
xchg
imul
xchg
xchg
aas
lcall
mov
xchg
loopne
push
mov
mov
mov
lods
mov
ljmp
out
sarb
or
inc
sbb
mov
mov
fs
in
sbb
mov
out
decl
and
imul
xor
out
cmpsb
in
pop
xchg
dec
in
sub
stos
or
and
push
cmp
add
les
and
pop
inc
lods
clc
andl
mov
mov
clc
add
gs
inc
daa
js
insl
aaa
inc
adc
dec
sti
or
shrb
mov
xchg
mov
mov
and
aaa
cmp
cmc
add
add
mov
call
test
adc
mov
aaa
mov
pop
call
xchg
lods
sbb
das
sbb
imul
xchg
or
sbb
pop
xor
gs
ds
imul
icebp
xchg
xchg
fwait
lods
mov
inc
xor
or
bound
and
push
sub
daa
ds
iret
cmpsb
xor
xchg
das
sub
mov
jo
dec
and
divb
into
rcrb
mov
nop
mov
ffreep
je
lods
jecxz
outsl
notb
inc
add
in
push
inc
dec
insl
pop
push
sti
inc
aaa
out
xchg
add
dec
shr
mov
jp
fisttps
fnstsw
test
xchg
lcall
cmpsl
fimull
push
hlt
test
or
sbb
je
roll
pop
scas
mov
jb
sbb
fwait
xor
add
add
inc
mov
push
push
jmp
sahf
fisubs
outsl
loop
sub
add
add
mov
mov
cmpsl
add
mov
movsb
adc
add
adc
ljmp
repnz
add
xchg
not
pop
fiadds
xchg
fsts
sub
jmp
jp
icebp
dec
aas
mov
out
in
push
sbb
sahf
mov
movsl
mov
pop
sub
in
push
pusha
out
lret
mov
sub
test
adc
sarb
std
outsl
arpl
push
decb
in
call
out
int
pop
sub
sbb
shrl
lds
leave
push
gs
jl
imul
add
push
aam
mov
mov
mov
adc
adc
leave
sub
jns
xchg
repz
fcmovu
int3
xchg
and
lcall
mov
repnz
fsubrl
mov
out
cmp
dec
psrad
leave
test
pop
add
cmc
add
add
add
out
push
subl
push
mov
test
pushf
scas
dec
mov
push
js
test
pop
iret
imul
or
jp
xor
inc
cmp
es
jle
sbb
ja
adc
or
outsl
fwait
test
loop
lods
daa
movsl
xchg
sti
repz
push
testb
xchg
pusha
test
xor
jg
and
or
mov
inc
inc
lods
mov
add
pop
and
jnp
punpckhdq
outsl
lds
mov
lods
xchg
inc
mov
mov
fchs
loope
scas
mov
or
push
jl
adc
inc
imul
dec
inc
nop
push
popa
data16
cmp
lods
cmp
mov
fwait
dec
loop
pop
jne
mov
popf
jle
outsb
leave
outsl
aad
insl
pop
outsb
ret
cmp
lea
dec
daa
aas
add
out
scas
add
jge
mov
and
add
or
push
shll
out
xchg
inc
push
xor
pop
add
cmc
add
add
rcll
add
popa
lahf
mov
bound
push
dec
mov
orps
int3
mov
fwait
mov
in
lock
aad
pusha
jno
cld
aaa
ja
pushf
xor
aad
es
fs
jno
pop
leave
xchg
test
dec
inc
push
lock
pop
mov
imul
ss
pusha
xor
repnz
and
push
fistpl
outsl
inc
jg
xchg
call
outsl
jecxz
push
iret
and
pop
xor
arpl
push
xchg
dec
sub
add
test
cltd
push
sub
lret
inc
out
inc
sbb
gs
repz
and
pop
or
je
jae
jnp
and
cwtl
or
sahf
sahf
popf
scas
jp
les
push
xchg
mov
cmp
dec
mov
mov
add
add
pop
pusha
adcb
sbb
add
add
out
lcall
inc
and
aas
sahf
and
add
add
add
cmc
jl,pt
lahf
vshufps
sbb
gs
jmp
test
push
inc
push
push
xor
mov
aam
test
movsb
mov
mov
cmc
pop
leave
xchg
stc
popf
and
in
lock
or
lret
sub
testl
inc
inc
scas
or
iret
pop
dec
ljmp
ss
shll
dec
sti
push
jle
in
in
mov
push
dec
and
add
and
fdivl
daa
xor
add
pusha
lret
sub
pop
xor
stos
jo
or
jge
ud0
sbb
push
sbb
push
ret
loopne
mov
push
push
mov
pop
xchg
roll
psubq
dec
push
xchg
dec
pop
dec
clc
loopne
cltd
lods
mov
add
add
jbe
idiv
imul
add
mov
cmc
add
add
hlt
adc
fs
rcl
add
sbb
fistpll
push
sbb
mov
or
test
sbb
popa
inc
mov
xchg
pop
push
cmp
cld
in
jns
sbb
push
sahf
or
stos
jb
push
int3
mov
xor
test
pop
jb
iret
mov
mov
jns
ljmp
xchg
push
nop
ja
fistps
dec
cmp
fmull
fsincos
int
add
mov
lret
sti
jb
and
inc
in
cs
add
xor
dec
ljmp
mov
imulb
mov
adc
push
icebp
jb
arpl
pop
cmpsl
sub
push
nop
loopne
test
mov
mov
loope
sahf
sti
inc
loopne
inc
ret
inc
add
imull
inc
xchg
hlt
mov
ds
mov
testl
add
add
fwait
cmp
dec
data16
or
div
popa
add
cmc
add
add
outsl
or
add
stos
dec
bound
rcll
xchg
xlat
test
xchg
add
cli
insl
mov
cmp
xor
add
stos
add
cld
mov
aad
dec
dec
xchg
and
std
cli
das
cli
inc
rorb
mov
cmp
xchg
fadd
enter
loop
adc
or
cmp
pop
adc
insb
push
push
fbstp
loope
inc
xlat
inc
cmpsb
sti
int3
sbb
jmp
add
lea
jg
movsl
adc
scas
xchg
ss
pop
not
repz
or
cs
add
fiadds
cmp
icebp
stos
out
mov
and
cmc
ficoms
popa
or
mov
sub
movsl
pop
mov
cmc
fwait
je
enter
hlt
mov
imul
ja
stc
jo
xchg
push
add
xor
hlt
jle
lahf
ss
bound
add
add
clc
mov
or
mov
test
cmc
add
add
mov
xchg
inc
jg
xchg
sahf
in
sub
mov
addr16
imul
xor
ljmp
xor
jmp
or
dec
jmp
dec
adc
push
and
andb
sarb
or
hlt
dec
movsl
xchg
outsb
imul
lods
mov
add
xchg
jle
test
or
xchg
dec
xor
aam
push
cmp
loope
pop
inc
push
pusha
imul
inc
push
pop
clc
inc
fcomi
out
lds
fisubrs
pause
repz
mov
negl
sub
int3
aaa
stc
adc
add
sbb
mov
lahf
les
sub
jmp
arpl
cmp
and
mov
add
push
push
add
jae
addr16
scas
rcll
push
or
lock
not
ret
add
xor
add
scas
xchg
push
adc
out
mov
sbb
arpl
add
add
add
and
cmp
cwtl
je
mov
push
iret
test
fsubrl
push
arpl
jns
aam
repnz
pop
testl
int
push
andl
add
ficompl
push
push
sbb
pop
lea
loope
sarl
cs
xlat
or
mov
inc
enter
or
cld
shrb
mov
jmp
jo,pn
or
mov
mov
stos
rorl
cltd
pushf
add
orb
lea
je
xor
jge
mov
pop
enter
pop
sub
daa
mov
int
test
rolb
mov
xor
sbb
mov
inc
lock
insl
scas
cmpsl
pop
jns
or
jae
in
les
shll
mov
dec
xor
int3
inc
inc
iret
adc
xchg
add
add
mov
int3
rorb
in
dec
int
aad
add
cmc
add
add
or
xor
jecxz
cmc
sbb
fnstsw
pushf
lret
inc
push
adc
fldz
xor
add
idivl
je
out
jno
bound
or
add
popf
jmp
push
out
out
xchg
int3
xchg
pop
adc
mov
cmpsb
dec
pop
mov
pop
jecxz
fstpt
hlt
push
mov
pop
pop
xchg
mov
movsl
call
in
scas
pop
loope
or
or
lahf
xor
xor
je
adc
lahf
cmp
jp
pop
sbb
xor
mov
adc
testl
pop
pop
or
repnz
dec
or
pop
mov
inc
cli
inc
lahf
xchg
scas
mov
stc
out
mov
test
aaa
shlb
aas
test
mov
lahf
popa
jge
insl
xor
add
add
mov
cmp
cld
jb
add
cmc
add
add
mov
and
push
cmp
mov
mov
out
cltd
nop
lds
mov
add
dec
jnp
js
das
les
and
outsl
inc
cltd
dec
inc
and
xchg
icebp
lcall
fsub
cmpsl
in
add
add
data16
mov
das
mov
test
dec
in
outsl
mov
mov
sbb
lret
add
dec
jae
lock
test
adc
add
jae
stos
lcall
jl
mov
bswap
push
aad
fiadds
cld
and
inc
in
or
adc
std
push
xchg
dec
and
iret
popa
push
add
ret
ret
mov
pop
hlt
out
repz
fnstcw
mov
insb
mov
lds
enter
scas
sbb
pop
jg
jne
sbb
pushf
insb
mov
stos
stc
cmp
add
fsubl
mov
lods
push
adc
and
add
add
add
loopne
ds
lret
aam
push
insl
cmp
push
les
or
repnz
add
out
ja
xchg
adc
mov
loopne
mov
mov
mov
es
shll
cmc
mov
popa
mov
into
xchg
scas
sbb
jp
and
jns
repz
fidivrl
mov
inc
fs
divb
mov
and
pop
fnstenv
popf
adc
mov
push
scas
cwtl
repnz
flds
sahf
push
leave
cmp
mov
in
sti
xchg
loop
inc
rorl
cmp
fcmovnbe
ret
cmp
push
shl
xchg
in
jge
imul
aad
stos
jne
xchg
mov
iret
and
adcb
int
inc
fmull
fwait
stc
ljmp
add
xor
mov
and
mov
add
cmc
add
add
add
das
data16
cmp
pop
pop
test
das
rorb
sub
pusha
out
pop
add
lock
iret
pop
jbe
in
push
fcomps
sub
xchg
mov
jge
les
push
scas
nop
adc
sbb
cmp
stc
fwait
jnp
sbb
das
mov
mov
lret
cmp
ds
test
mov
movsb
or
adc
sub
in
lods
push
insl
loope
call
and
mov
push
ret
mov
rclb
in
or
xchg
jecxz
in
pop
daa
loope
mov
and
shll
and
sub
fnstcw
push
xor
imul
sar
dec
bound
xchg
add
push
mov
shll
lahf
aaa
adc
mov
add
sti
inc
mov
cmpsl
mov
jmp
add
mov
scas
sub
lret
sbb
cmc
add
add
push
sbb
mov
sbb
and
xchg
xor
xchg
cmpsb
cld
ja
pop
out
dec
fildl
cmp
cmpsl
insb
add
cmpsb
scas
dec
sti
lahf
addr16
mov
mov
or
push
or
adc
push
xchg
ret
mov
arpl
xor
rcl
jl
xor
mov
adc
mov
dec
and
mov
mov
cs
mov
jg
test
xor
cmp
mov
addb
mov
sub
adc
xor
mov
mov
inc
movsl
sbb
sub
fnstcw
mov
ljmp
mov
pop
in
test
push
cmp
ja
mov
fs
add
add
push
into
push
cmp
sub
xchg
enter
imul
add
sbb
mov
sbb
inc
mov
dec
jp
sahf
xor
sbbb
or
outsb
je
mov
std
push
fidivrs
ficoms
or
lcall
xor
filds
cmp
rorb
jg
ds
inc
test
pop
add
dec
js
lret
jg
pop
cltd
cmp
xor
into
hlt
or
jmp
mov
pop
outsb
xor
cli
repnz
leave
insl
sbb
pop
sbb
xorl
sbb
dec
mov
jns
pop
iret
xchg
pop
leave
das
mov
loope
mov
mov
mov
or
mov
pop
add
test
sub
in
fcoml
pop
sbb
sti
sub
and
xlat
xor
lahf
in
mov
fistps
mov
mov
mov
popf
adc
sbb
mov
lahf
fwait
mov
and
add
and
mov
fisttps
jo
stos
mov
xchg
push
add
add
add
outsb
xor
add
clc
aam
das
scas
leave
push
push
repnz
fstpt
pop
push
insl
dec
sbbb
pop
jns
mov
hlt
jnp
jb
jmp
or
or
addl
mov
hlt
sbb
jmp
sbb
mov
xor
cmp
fs
push
gs
daa
jne
push
and
sti
mov
popa
pop
mov
mov
inc
aam
jnp
push
xchg
jecxz
loopne
fcoml
xor
les
test
mov
push
in
out
cltd
enter
xchg
mov
jno
out
imul
xor
jg
test
test
ljmp
or
jb
or
outsb
aaa
mov
inc
sub
sbb
fcompl
jg
aaa
jl
mov
mov
clc
mov
add
add
lahf
pop
bnd
mov
mov
add
add
add
or
push
inc
into
fimull
adc
adc
xor
push
decb
inc
mov
cmpsb
js
jp
sub
sub
movsl
sbb
jle
inc
jb
sub
jnp
mov
adc
push
adc
fistps
lcall
adc
in
aad
cwtl
dec
stc
mov
sub
xchg
sub
pop
pushf
pushl
xor
mov
sbb
insb
mov
cld
aam
fcomps
cmp
jno
test
xchg
jns
mov
insl
mov
push
sar
jns
aam
xor
sahf
xor
dec
movsb
pop
aas
fwait
stc
fs
jnp
push
or
push
test
xor
in
mov
ljmp
cmc
xor
pop
cwtl
cmp
scas
fmull
xchg
test
adc
mov
cltd
subb
lds
mov
or
popf
cltd
add
add
idiv
jg
data16
aad
hlt
nop
mov
cmc
add
add
sub
dec
jno
aas
rorb
sbb
dec
jp
fnstsw
pop
mov
aad
inc
fbld
scas
push
stc
pop
sub
sbb
mov
stos
shl
repz
sahf
ja
cmp
sub
das
insb
mov
insb
xor
sub
mov
jns
rolb
jecxz
mov
jecxz
push
mov
aas
ficomps
dec
jecxz
add
mov
or
inc
fnstcw
jo
fidivl
jmp
je
cwtl
fwait
sbb
mov
push
sbb
enter
inc
mov
dec
xor
jns
pusha
jg
fwait
mov
fwait
dec
jle
fldcw
inc
xor
and
push
jle
stc
dec
sub
mov
dec
add
mov
adc
push
adc
push
call
lods
mov
xchg
push
jmp
mov
inc
add
dec
add
add
pop
mov
movsb
inc
gs
jne
dec
jg
insl
add
cmc
add
add
rorb
ja
pop
dec
add
rorb
cmp
mov
cmc
jge
imul
lea
movsb
push
push
fisttps
sbb
movsl
mov
or
cs
adc
xor
bound
add
jmp
cltd
ljmp
add
into
dec
adc
xor
cwtl
stos
mov
stc
xor
mov
add
dec
in
sbb
pop
loopne
data16
or
enter
mov
and
sub
mov
push
cmp
sbb
test
filds
xchg
inc
lret
xchg
cwtl
xor
fdiv
push
push
sub
clc
xor
cmpsl
enter
xchg
sbb
vmread
popf
adc
sub
add
cli
mov
nop
adcb
addr16
mov
lcall
test
add
add
repnz
movsb
jle
mov
or
outsb
add
cmc
add
add
imul
sub
xchg
and
xor
sti
insl
scas
insl
imul
and
xlat
les
sbb
scas
int
out
sti
lret
sbb
xchg
dec
movsl
mov
sbb
jns
sbb
mov
in
dec
lods
jae
pop
jmp
mov
fisttps
pop
lods
xorl
mov
outsl
aad
push
popl
xlat
xchg
lds
fnstsw
outsl
repz
in
fistpll
push
sti
popf
fsubrs
push
insl
mov
pop
push
sub
push
pop
mov
fistpll
imul
mov
addr16
inc
jns
cli
xor
pop
cltd
lods
xor
mov
imul
rcr
sbb
fdivrp
leave
xor
or
addr16
sti
jecxz
xchg
dec
dec
push
ljmp
jg
test
out
cmpsl
push
fmuls
stos
sub
stos
out
jmp
sub
lahf
mov
enter
add
add
add
imul
and
sti
movb
outsb
sbb
xor
push
dec
mov
jle
fbld
hlt
movsb
orl
sub
lods
mov
mov
adc
shll
jmp
sbb
adc
ds
pop
and
stos
mov
int
add
gs
jle
repz
sbb
or
dec
loopne
or
lods
jl
clc
lret
mov
mov
fmulp
xchg
add
inc
mov
pop
in
mov
mov
test
lock
ret
scas
or
stos
push
jge
add
pop
inc
popf
mov
mov
sub
mov
sbb
data16
sti
xor
les
or
mov
fwait
jge
add
mov
addb
pop
pop
out
xchg
xchg
sti
fnstsw
jecxz
cli
call
fcoml
aaa
fwait
xchg
fwait
sbb
add
shll
fnstenv
add
add
cmc
add
add
js
push
mov
mov
sarb
mov
movsb
sub
pop
xchg
or
divb
or
add
sbb
sub
mov
inc
fidivl
push
pop
add
pushf
dec
scas
xchg
add
dec
xor
popf
cmp
mov
dec
fbld
sub
push
nop
mov
cmc
jl
stos
add
imul
imul
in
cli
xchg
out
pop
call
push
xor
int
pop
out
imul
dec
push
aaa
movsb
xchg
mov
fs
sbb
dec
stc
and
or
push
iret
xchg
sbb
pop
aam
fldenv
loopne
sub
leave
xor
mov
or
js
das
xor
stc
dec
dec
pop
movsb
inc
dec
xor
and
inc
jecxz
xchg
icebp
pusha
in
add
add
cld
je
jbe
jmp
lea
xchg
test
jno
add
add
add
xor
mov
scas
mov
push
out
xor
nop
lret
arpl
pop
sub
push
and
enter
imul
mov
test
orl
adc
imul
or
loope
push
pop
movsl
xchg
negb
xchg
xchg
ret
and
stos
xlat
pusha
nop
jle
aas
ret
fbstp
repnz
idivb
or
test
ret
xor
dec
mov
les
mov
data16
push
push
subb
lret
ss
pop
and
inc
fildl
mov
lds
mov
movsb
les
push
jmp
fucomip
inc
movsl
add
cs
out
scas
rcrl
scas
mov
les
ss
outsb
cltd
mov
and
pop
adcl
push
cltd
jmp
fcmovnbe
cld
xor
arpl
push
cmp
add
add
add
mov
enter
in
inc
add
sbb
adc
mov
and
in
or
mov
add
ds
loop
pop
rcll
fsubrs
into
fsub
jl
gs
xchg
loopne
fs
push
dec
xchg
push
adc
sub
in
add
test
inc
in
mov
in
xchg
hlt
stos
and
and
and
dec
insb
cld
cmp
cmp
cli
jge
dec
pop
or
call
or
into
imul
xor
push
xchg
xlat
test
nop
jnp
xor
insb
cmp
pop
or
cmp
cwtl
dec
aam
cmpxchg
inc
faddl
jecxz
push
push
fnstcw
xor
pushf
pushf
inc
jns
sahf
enter
sbb
push
mov
sub
dec
dec
popf
mov
inc
mov
add
dec
xor
arpl
add
push
jg
pop
jne
test
add
cmc
add
add
cmp
inc
orb
mov
push
pop
inc
clc
sbb
fidivs
xor
out
loop
in
inc
and
stos
rorb
push
in
imul
mov
xor
daa
aam
call
dec
in
fldt
ja
add
nop
adc
mov
mov
or
xchg
cli
push
sbb
loop
fcompl
repnz
cmp
loope
mov
inc
movsl
frstpm(287
pop
bound
cmpsl
out
insl
mov
pop
lods
popf
cmpsb
and
mov
cmpsl
aam
inc
and
nop
int
mov
test
into
add
lcall
or
adc
xor
shlb
sub
arpl
xor
dec
in
pop
cld
icebp
cmpl
sahf
dec
dec
mov
pop
icebp
ss
je
dec
jle
sbb
pop
or
sub
or
add
iret
mov
fucomip
addr16
scas
and
add
add
popa
xchg
sbb
cs
jmp
loop
pop
cmpsl
add
add
adc
out
dec
ja
pop
and
or
or
jmp
jmp
push
push
aam
std
loop
das
xor
or
jp
cli
push
mov
adc
mov
push
testl
cmp
dec
add
out
bound
mov
fidivs
je
out
insb
xchg
add
test
lods
in
jmp
adc
jae
shr
insl
inc
sub
push
add
push
repz
sbb
into
sub
insb
xchg
dec
inc
mov
sahf
adcl
orl
jg
in
cmp
xchg
test
sbb
pushf
dec
enter
ds
rclb
les
repz
jb
out
push
loop
pop
add
add
dec
out
iret
jmp
cmpsb
add
sub
jne
add
add
add
cli
es
adc
mov
xchg
in
xchg
neg
mov
cmp
call
adc
lods
es
loopne
inc
js
dec
adc
repnz
adc
imul
frstor
cmpsl
js
mov
fs
cmpsl
fcompl
sbb
sub
jg
add
out
out
pusha
xlat
xchg
jae
in
daa
adc
int
push
mov
hlt
push
cmp
les
sub
test
ror
sbb
ja
jno
in
xchg
mov
insl
mov
aam
pop
fs
int
sbb
jp
jle
nop
nop
jnp
clc
lods
cmp
dec
fbstp
test
std
or
loop
jnp
and
dec
ja
cmp
into
sub
mov
out
outsl
jecxz
andb
xchg
insb
ja
push
add
add
std
cmpsb
pop
lods
jne
xchg
incb
pop
pcmpeqd
add
add
add
leave
jp
push
fidivl
lea
xchg
add
std
pop
imul
mov
pop
pop
repz
scas
hlt
sub
push
cmp
inc
leave
jmp
aas
leave
sub
or
inc
outsb
ss
pop
or
mov
or
test
adc
push
jbe
push
lock
out
outsb
lcall
mov
cwtl
xor
mov
add
xchg
cmp
mov
xor
fbstp
ss
cmp
in
and
in
fmuls
daa
mov
jp
jg
jne
scas
jno
cmpsl
xor
xor
or
jae
icebp
cli
mov
mov
sti
test
sbb
and
sbb
jno
fists
mov
xchg
or
or
mov
fldt
lods
fwait
cwtl
ljmp
mov
pop
mov
test
add
in
lods
imul
neg
std
stc
idivl
repz
add
cmc
add
add
or
sub
dec
push
je
mov
pop
push
adc
or
shll
xlat
lds
dec
lahf
ss
inc
sbb
test
push
mov
push
jnp
leave
or
sbb
sub
push
xchg
mov
dec
mov
jnp
add
mov
xchg
add
push
or
adc
cmp
out
rorb
cld
add
pop
imul
fistpll
ss
fs
pop
mov
lods
or
mov
cmpsl
popa
insb
cmp
dec
scas
dec
jg
idivl
iret
iret
mov
addr16
push
dec
adc
imul
popf
xor
mov
lahf
call
shlb
outsl
mov
ja
jo
dec
add
lds
es
push
jns
and
lcall
add
cs
mov
xchg
and
ja
add
add
add
lret
fisttpll
paddd
aad
xor
mov
test
nop
loope
mov
imul
test
movsb
data16
xchg
arpl
loop
jae
inc
inc
fiadds
lcall
adc
adc
inc
inc
out
mov
dec
jns
hlt
test
mov
fidivrl
out
sub
mov
call
push
jbe
jg
and
pop
add
push
fidivs
dec
lock
xor
daa
push
jbe
rorl
jmp
push
cmpsl
cmpsl
xchg
inc
rcr
pop
sti
sti
xchg
dec
pop
es
mov
lahf
jg
mov
pop
mov
sarb
dec
dec
repnz
negb
in
sbb
int3
cmp
ja
in
popf
arpl
jae
adc
add
add
ja
out
dec
jg
aad
sub
adc
js
add
add
add
xchg
ljmp
ficompl
mov
lods
out
es
mov
je
out
ja
pop
and
jmp
mov
test
insb
mov
lcall
cmp
add
sti
xor
call
sub
sbb
mov
cmp
sar
mov
fldcw
pop
adc
inc
mov
repnz
orl
ret
imul
decb
jno
fistps
adc
cmc
mov
mov
out
push
in
gs
in
add
test
add
jbe
xorl
mov
add
es
dec
dec
stc
sbb
or
sbb
adc
dec
pop
or
lret
test
xchg
outsl
fsts
xor
mov
subb
sarl
add
add
sub
ja
mov
paddq
sub
add
add
add
insb
outsl
testl
out
push
push
xor
add
pop
movsb
xchg
call
into
jnp
leave
inc
fldcw
imul
add
jmp
cmp
into
sti
cmc
jae
jg
aas
mov
push
adc
jnp
enter
test
mov
jo
outsl
push
nop
lahf
ror
xchg
pop
sbb
push
iret
sbb
mov
into
popa
sti
addr16
pop
pop
mov
pop
bound
out
inc
pop
mov
outsl
test
jbe
inc
sahf
mov
leave
push
fcompl
mov
mov
aaa
jb
popa
xor
jl
xchg
pop
push
jmp
adc
in
pushf
std
push
push
mov
pop
or
cmpsb
cmc
mov
or
push
xchg
and
mov
inc
cltd
lret
jo,pn
sub
cmpsl
mov
push
in
push
cmpsb
add
add
cmp
jnp
jge
xchg
inc
jle
or
jp
add
add
add
mov
mov
into
push
imul
sti
inc
sub
add
in
fld
stc
sbb
pop
hlt
jbe
mov
or
popa
lret
sahf
and
mov
sbb
jecxz
mov
or
iret
jo
je
and
loop
xchg
repz
shlb
flds
je
dec
xchg
mov
sub
rorl
push
jl
jle
or
xor
test
das
mov
add
pop
addr16
lahf
iret
pusha
rclb
in
jle
dec
add
sub
push
push
fs
pop
push
neg
push
sbb
jae
add
jp
xchg
mov
pushf
andb
and
into
in
xor
mov
fnstcw
jmp
cmp
mov
jno
roll
push
stos
aam
leave
mov
fisubrl
inc
lret
push
stos
cmpsl
push
or
mov
icebp
mov
fs
mov
dec
pop
add
jbe
inc
pop
lea
add
cli
xchg
jle
mov
mov
xor
test
add
cmc
add
add
in
stos
xor
dec
stos
lds
xchg
push
das
sbb
jns
ret
pop
mov
int
fsubrl
adc
dec
test
and
imul
sbb
jbe
iret
mov
sub
aam
rorl
mov
repz
add
scas
inc
sbb
jle
shrl
xchg
std
mov
popf
cltd
push
cmc
rorb
ds
xchg
inc
mov
sub
or
testb
call
shlb
mov
ljmp
test
fnstenv
mov
dec
int
jne
loope
mov
add
or
push
data16
aam
nop
cmp
xchg
add
mov
leave
dec
sub
adc
xor
fisubrl
pop
outsb
shll
inc
aaa
dec
fwait
jnp
aad
gs
into
add
pusha
dec
test
cmc
add
add
xchg
inc
pop
lods
mov
das
sub
in
fimuls
inc
sub
sti
mul
mov
arpl
sbb
cmpsl
or
pop
add
setg
xlat
fildll
aaa
xchg
mov
stos
in
mov
mov
mov
cvttps2pi
adc
lods
push
pop
loopne
rcrl
pop
ficomps
mulb
hlt
mov
and
mov
scas
sahf
jmp
sub
in
mov
pop
inc
inc
mov
addb
ljmp
push
or
leave
mov
xor
jo
xlat
sti
in
dec
lahf
mov
xchg
inc
adc
std
rorb
loopne
bound
xlat
sarl
push
fs
or
xor
dec
jl
add
outsb
mov
jne
cmp
out
movsl
add
xor
test
jno
add
mov
std
mov
enter
adc
jge
add
add
add
lret
and
mov
cltd
jne
mov
cs
xchg
adc
cmp
lcall
test
out
cwtl
nop
inc
push
mov
and
xor
push
fsubrl
test
es
call
jl
sub
std
mov
out
jmp
add
cmp
adc
jmp
xchg
loop
cmp
into
lret
insb
out
push
std
inc
sub
iret
or
and
lret
aas
fimuls
jecxz
mov
lea
sub
jmp
push
mov
ss
xchg
in
pop
mov
sub
shrl
push
add
stos
stos
bound
aad
cs
jmp
das
lea
lods
mov
hlt
and
mov
mov
das
inc
clc
repnz
mov
push
stc
and
lret
das
mov
jb
lret
repnz
xchg
add
adcl
xchg
ffreep
dec
imul
mov
lret
add
cmc
add
add
cmc
adc
mov
ret
push
sahf
dec
scas
xor
ljmp
push
sub
in
sar
test
cmp
nop
xchg
into
xor
cmpb
cmp
mov
clc
xchg
pusha
or
pop
jae
lcall
xchg
xchg
popfw
jns
xchg
out
xchg
pop
push
xchg
roll
and
test
je
pop
lahf
in
push
pop
je
mov
mov
mov
out
xchg
jmp
les
fistps
xor
sbb
and
xlat
or
sub
repz
stos
lods
xchg
stos
jecxz
mov
mov
sub
add
jne
or
out
jp
in
mov
les
push
rolb
nop
push
aaa
dec
push
clc
popa
test
push
xchg
ja
cmp
or
cmp
lret
or
cmp
and
inc
in
mov
mov
out
in
pop
test
mov
in
jg
add
add
add
into
adcb
add
add
xchg
inc
push
adc
add
push
sbb
stc
test
sub
xchg
les
fwait
lret
dec
xchg
je
into
stos
dec
inc
insl
lods
mov
pusha
scas
jne
cmc
test
leave
aaa
push
adc
inc
inc
pop
test
or
xorl
fwait
das
cs
jge
stos
and
push
xchg
mov
mov
lds
add
inc
rcrl
dec
iret
jge
mov
xchg
js
outsl
mov
pop
jmp
push
pop
jns
out
adc
sbb
lock
rcr
xchg
mov
sub
push
out
dec
pop
mov
add
shlb
mov
adc
lods
mov
in
fcmovnu
push
add
test
dec
stc
sub
sbb
sbb
dec
push
ja
ja
inc
add
jb
add
jns
divl
bound
dec
pop
xchg
addb
cmc
add
add
jae
mov
cltd
jb
jnp
jecxz
daa
and
pop
mov
inc
int
sbbb
adc
shlb
adc
adc
mov
mov
or
cmp
dec
cltd
arpl
push
gs
sahf
ja
mov
leave
sub
loop
imul
out
sub
jle
adc
mov
and
cs
out
jo
jno
or
sub
sbb
cmp
inc
xchg
xchg
aam
pop
jnp
xor
sub
inc
sbb
cmc
mov
mov
pop
xchg
push
sbb
jg
int
xor
add
lret
inc
out
push
enter
iret
imul
pusha
push
rcrl
mov
cli
popa
xchg
cmp
icebp
imul
aad
adc
dec
sahf
lods
rorb
dec
mov
clc
fisubs
mov
push
mov
sahf
xchg
add
add
pop
pop
and
dec
jp
je
adc
jne
inc
cli
rorl
aam
adc
flds
jp
cmp
xchg
push
mov
lock
rorl
pop
stc
inc
mov
and
adc
push
notb
pop
loope
push
mov
cltd
cmc
repnz
jp
mov
xchg
adc
es
fmuls
cli
mov
hlt
mov
loop
stos
or
sub
rcll
ja
mov
icebp
cld
push
inc
or
xchg
or
pop
jb
mov
fistps
jp
dec
adc
loop
inc
mov
test
pop
fs
hlt
aam
xor
jge
movsb
mov
pop
jmp
iret
xchg
sub
push
outsb
lret
out
push
cwtl
arpl
in
mov
add
shlb
mov
out
and
addb
add
mov
outsb
and
hlt
or
cltd
add
inc
cmp
xchg
pop
and
icebp
loopne
adc
sub
outsl
or
and
mov
jae
add
mov
loop
and
dec
stos
mov
mov
shll
mov
out
gs
scas
mov
pop
mov
push
cmp
stc
xorl
je
daa
fs
and
cmp
sbb
in
popf
xchg
and
jbe
pop
insl
clc
xchg
ljmp
in
pop
scas
sbb
pop
int3
cmc
add
pop
jge
shll
ja
or
xor
add
mov
jg
in
fdivrp
adc
inc
cld
int3
das
sbb
cmpsl
lock
cld
ret
repz
test
fdivr
pop
imul
dec
fsubp
xchg
add
mov
push
xchg
data16
add
testl
and
cmc
add
add
mov
jp
sbb
push
sub
sahf
mov
push
hlt
xor
loop
testl
inc
sub
jle
mov
rcll
xchg
shrl
in
push
sti
cmp
loopne
imul
jb
loope
sbb
sbb
cmpsb
push
dec
fstpt
rcrb
movsb
add
sub
out
stos
push
gs
aam
mov
idivl
popa
scas
movsb
lock
add
pop
aas
jle
cli
cmp
pop
inc
sub
jecxz
cmpsb
and
mov
pushf
test
or
mov
mov
or
daa
or
inc
xchg
sub
or
imul
push
inc
push
push
mov
addb
insl
test
push
jbe
push
mov
inc
and
enter
push
test
pop
push
add
add
jo
ja
std
stos
lods
and
fstl
test
add
add
add
insl
sti
dec
mov
xor
sbb
bound
xchg
jle
jl
inc
sbb
test
sbb
das
adc
cwtl
mov
nop
pop
das
data16
mov
mov
dec
cmc
sub
loopne
sub
mulb
mov
xlat
test
xchg
push
aam
dec
pop
xchg
inc
inc
test
out
jo
mov
mov
pop
incb
add
in
shlb
sbb
cmp
sbb
shlb
inc
inc
out
mov
add
pusha
pop
inc
out
sbb
xchg
out
negb
jnp
dec
jbe
andl
aaa
sbb
push
inc
mov
inc
sub
dec
pop
addr16
popa
lret
enter
ljmp
dec
dec
push
ss
pop
rolb
lock
push
rcrb
xor
add
fs
icebp
and
push
add
add
cmpsb
arpl
je
adc
push
pop
test
add
add
add
and
ret
in
pop
imul
cmp
mov
fst
mov
shlb
sub
add
jle
cwtl
scas
loopne
imul
add
test
pop
adc
rdtsc
in
hlt
sbb
add
out
das
mov
mov
sub
hlt
fcmovu
test
rorl
inc
rcll
mov
mov
rcl
cltd
sar
mov
int3
jecxz
insb
es
sbb
xchg
lret
orl
pop
ljmp
dec
sahf
mov
hlt
jmp
jno
scas
fcoms
into
aas
into
in
pop
fs
pop
cwtl
push
adc
pop
jne
stos
out
mov
dec
xchg
rcrb
scas
sub
lret
mov
mov
imul
mov
incl
add
xor
cli
mov
adc
sbb
cmc
add
add
dec
cmp
int3
mov
data16
jle
daa
out
fsubl
and
jle
add
scas
adc
dec
push
mov
dec
fistps
adc
fcomps
js
pop
or
jbe
push
adcl
adc
not
xor
cmp
enter
or
sbb
pop
adc
add
push
jmp
icebp
push
cmp
inc
ss
sbb
xlat
adc
dec
repz
mov
iret
lret
rcr
ljmp
mov
ss
cmp
push
lock
js
test
pop
in
mov
int
lods
mov
pop
pop
ficoml
lcall
es
aam
mov
jo
xorl
orl
or
push
jo
push
pop
push
sub
in
push
mov
mov
or
movsb
jg
fidivrs
pop
imul
ret
add
test
ljmp
loope
pop
dec
xchg
add
add
add
inc
filds
xor
or
out
mov
pop
pop
sub
popa
push
mov
ficomps
inc
pop
xchg
add
mov
cltd
stc
sbb
xor
mov
fcompl
sub
ss
xchg
scas
mov
adc
and
adc
jae
pop
adc
add
jnp
loop
and
add
jp
pop
xchg
enter
xchg
into
cmp
adc
jmp
jno
sahf
add
dec
and
pop
inc
cmp
stos
ret
xor
enter
and
inc
and
lret
cmpsl
mov
sti
and
loope
or
xchg
xchg
imul
push
xchg
xor
cli
sti
lcall
mov
push
test
ljmp
ss
add
add
xchg
xchg
jns
incl
pop
xrelease
add
add
add
mov
and
sbb
sahf
mov
mov
mov
aam
mulb
pop
inc
repnz
cmpsl
and
add
fsts
inc
cwtl
mov
cmp
mov
cld
repnz
add
xchg
notl
pop
jo
jo
in
xchg
enter
jmp
cmc
mov
adc
call
jae
lret
inc
test
lock
popa
out
lret
ljmp
inc
dec
insl
sbb
mov
sub
sbb
pop
mov
jb
sub
ror
adc
cmp
xchg
xchg
mov
fisubl
fwait
mov
xor
or
and
jmp
sbb
push
mov
fld
jo
jp
push
movsl
vmovapd
js
cmc
cwtl
es
insb
test
inc
xchg
ret
lcall
test
scas
lcall
xchg
dec
lea
xor
add
xchg
mov
mov
mov
push
mov
cld
lods
cwtl
and
dec
imul
mov
mov
data16
sbb
push
loope
xor
je
shrl
mov
insb
push
lcall
sbb
mov
adc
lea
or
mov
inc
pop
inc
scas
imul
inc
pop
stos
mov
xchg
sub
xlat
add
test
out
insb
sarb
or
cmp
pushf
imull
mov
mov
insb
hlt
sub
add
pop
imul
arpl
xchg
mov
cmpl
adc
sub
sub
call
outsl
mov
nop
clc
mulb
pop
incb
inc
hlt
sbb
sti
cmpb
pop
mov
xchg
push
and
hlt
add
sub
ja
push
and
add
add
mov
idiv
fst
inc
sahf
pop
in
jmp
add
cmc
add
add
shll
push
fistl
aad
lret
or
imul
arpl
inc
lods
pushf
daa
mov
sub
jns
je
mov
mov
push
popa
mov
xor
lods
popf
inc
xor
cmp
aad
mov
imul
jle
sbb
roll
pusha
push
sub
or
fsts
jnp
mov
movsl
stos
mulb
out
loop
mov
and
push
pop
adc
iret
sbb
aaa
loope
pop
jmp
pop
cli
mov
xchg
les
outsb
scas
mov
add
mov
mov
inc
inc
add
pop
xor
mov
cmpsl
sbb
cmc
add
push
inc
jle
imul
xor
call
dec
data16
scas
mov
jb
lods
cmc
inc
pop
jge
inc
jmp
push
jno
ja
add
in
add
add
call
and
lock
mov
mov
add
add
add
push
xor
movsb
pop
pop
xchg
mov
sarb
mov
outsb
cwtl
pop
les
in
add
addr16
pop
cli
cmpsl
mov
pop
ss
in
out
arpl
jb
cli
push
lds
add
outsb
jb
dec
mov
mov
pushf
clc
imul
push
lds
cmc
adc
mov
gs
lcall
int3
fcom
and
xlat
loop
sti
aas
add
sbb
fistl
cmpl
cmc
jne
fstpl
mov
lods
mov
out
sub
pop
push
clc
out
imul
mov
jbe
jp
icebp
fwait
xor
rcrl
in
out
or
jnp
into
sub
mov
mov
jmp
jne
mov
cmp
xor
sbb
movb
pop
shll
loop
ds
xchg
add
lods
mov
scas
in
inc
or
add
sti
iret
and
repnz
add
adc
add
imul
cmp
pop
jns
push
add
repz
repz
aam
cmp
shl
rol
idiv
mov
adc
sbb
or
sub
push
mov
cwtl
int3
inc
mov
mov
fsubl
mov
pop
popf
jns
lock
stc
jge
in
test
ss
cli
rcrb
mov
test
cmp
add
cld
and
push
inc
mov
mov
outsb
test
mov
push
sbb
sbb
shll
add
inc
stos
xlat
sub
push
jmp
gs
or
push
sbb
sbb
push
dec
dec
fdivr
and
mov
int3
popl
cmp
push
cmp
push
sbb
mov
aaa
fs
push
mov
mov
not
fidivrl
xchg
adc
add
dec
jle
and
push
js
or
aad
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
jmp
lea
add
add
add
inc
push
out
inc
mov
xlat
fdivrl
inc
in
test
out
and
add
pop
push
lea
mov
sub
inc
fsubr
js
mov
sahf
mov
mov
push
dec
pop
movsb
mov
test
mov
ds
stc
mov
inc
push
outsb
mov
xchg
imul
inc
pop
ds
push
rcr
jnp
xor
jae
xor
inc
js
jb
or
adc
hlt
nop
mov
sbb
mov
mov
lret
xor
sub
cmpb
pop
push
jb
andb
adc
aaa
adc
dec
inc
sbb
out
or
clc
rol
pop
cmp
mov
cmp
mov
xchg
cld
pushf
sbb
test
scas
mov
hlt
lret
dec
mov
hlt
nop
add
add
mov
into
pop
jle
cld
lea
add
add
add
daa
cmpsl
sbb
repnz
add
jp
adc
inc
xchg
mov
or
cmp
jno
cmp
in
pop
cmpb
int
sbb
or
push
jns
mov
fiaddl
fsubs
loop
mov
jb
data16
addr16
push
out
mov
inc
das
jnp
jae
push
add
push
stc
xor
xchg
push
loopw
xchg
xchg
pop
nop
push
sahf
insl
rorb
imul
mov
enter
or
xor
push
fwait
push
inc
and
push
iret
adcl
fcompl
movsl
iret
mov
mov
jae
test
fmulp
lock
jge
pusha
in
inc
dec
xor
adc
movlps
ret
into
push
jno
mov
cli
je
push
mov
stos
adc
out
sahf
xchg
imull
outsb
fsubs
lcall
add
pop
test
ljmp
jp
cmp
arpl
add
cmc
add
add
sub
popa
hlt
or
cld
out
cmp
jns
rorl
aam
cwtl
lock
push
dec
dec
jmp
adc
sbb
lcall
mov
popf
shl
jle,pt
int3
and
push
push
inc
adc
aas
xchg
hlt
sbb
bound
ret
stc
and
push
fdivl
pop
mov
jns
adc
mov
imul
push
outsl
cmp
ds
or
xchg
xor
or
test
aas
jno
adc
jp
inc
cld
xchg
xchg
movsb
push
sub
jnp
sub
cli
das
push
dec
mov
das
mov
daa
in
cli
out
inc
stc
call
mov
in
inc
repnz
adc
xorb
arpl
cli
mov
adc
jle
or
and
outsl
sbb
test
imul
push
jnp
sbb
xchg
sub
lods
mov
iret
out
add
cmc
add
add
dec
dec
xor
add
sbb
jb
sbb
cmp
mov
lret
ja
mov
jl
imul
aas
sub
mov
in
out
popa
xlat
repz
cmp
mov
das
das
cmp
enter
rolb
imul
add
and
inc
aad
push
pop
call
add
dec
push
pop
sub
cld
jmp
fs
mov
scas
dec
cmp
inc
mov
xor
jns
ljmp
out
mov
insb
adc
popf
sub
mov
xchg
icebp
mov
or
and
sub
mov
mov
stos
mov
adc
popf
jbe
adc
shlb
adc
xlat
xchg
jge
cs
insl
sub
push
aas
or
mov
in
or
out
nop
add
cmc
add
add
mov
push
cmc
into
pop
cs
sti
jmp
rorl
cmp
sti
inc
cltd
xlat
jl
cmp
xchg
jmp
loop
mov
icebp
neg
add
outsb
fisttpl
std
mov
ljmp
inc
sti
mov
pusha
lds
jne
js
leave
jo
js
aaa
add
sub
mov
add
push
insl
mov
mov
push
orl
jmp
cmp
jne
adc
mov
xlat
insw
or
int3
ret
pop
cmp
adc
ss
daa
and
dec
les
jecxz
pop
inc
push
repnz
or
iret
aam
imul
ffreep
bound
lret
xor
out
mov
neg
jmp
add
sbb
pusha
sub
mov
dec
sub
mov
clc
xchg
or
out
test
insb
fidivl
cli
sub
lcall
add
cmc
add
add
lret
orb
pop
cmp
sub
pop
in
adc
lea
cltd
imul
inc
into
loop
xor
std
pop
shrl
popf
test
adc
scas
sahf
pop
mov
sub
leave
xor
adc
and
fs
sbb
mov
push
lret
test
std
mov
xor
repz
loopne
mov
lret
mov
inc
mov
jne
and
int
arpl
jae
cmp
icebp
pop
stos
push
jl
mov
nop
jns
push
stc
mov
mov
and
and
call
sbb
pop
pushf
mov
inc
inc
adc
cmp
inc
decl
push
popf
int3
call
sub
mov
sarl
loopne
xchg
inc
sbb
jbe
sbb
xlat
js
add
add
mov
in
dec
pushf
xchg
mov
cmc
add
add
jo
xor
std
in
inc
mov
mov
jb
and
inc
mov
mov
adc
inc
out
in
xor
mov
ja
jo
add
push
pop
jno
pop
cmp
out
imul
int3
notl
cmp
inc
cmpsl
scas
mov
jl
ja
lahf
xor
arpl
xchg
out
adc
pop
push
sub
shl
outsb
sbb
hlt
sbb
adc
pushf
mov
cmp
lea
inc
ret
dec
cwtl
fldl
add
xchg
and
mov
sbb
jo
pushf
bswap
mov
mov
or
mov
dec
and
and
sbb
icebp
out
push
push
lods
sub
adc
js
stos
pop
insl
in
xor
and
subb
add
dec
push
int
fstp
iret
push
lock
jmp
outsl
flds
mov
add
add
inc
scas
scas
ljmp
outsl
jge
sbbb
jg
fildll
imul
xchg
push
lret
mov
jmp
cmp
cmp
sbb
bound
sub
pop
jmp
enter
push
mov
imul
jae
cld
inc
dec
shrl
aad
jge
or
pop
push
xor
xor
jns
out
aas
jne
and
cmp
mov
pop
xchg
cmp
cmp
jmp
aas
fs
inc
push
mov
mov
push
ficoms
xchg
aam
pop
sbb
xchg
mov
in
test
int3
push
in
mov
push
test
pop
mov
mov
clc
test
cmpsl
inc
subl
out
jge
data16
je
adc
push
fisubs
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
das
jecxz
std
add
lea
loopne
mov
out
div
or
notl
xchg
outsl
xchg
and
test
clc
xor
xchg
jne
scas
adc
push
push
add
out
in
adc
fistps
jno
add
push
cmpsl
push
aaa
imul
cmp
pop
inc
loopne
pushf
jo
push
ret
adc
scas
aad
mov
test
dec
mov
or
xor
jmp
inc
inc
jle
lret
inc
and
fdivr
std
pop
stc
fwait
mov
xchg
jge
out
mov
ljmp
daa
repnz
cmp
andl
pop
lahf
out
rorb
iret
les
loope
cmp
xchg
push
inc
dec
xchg
pop
cwtl
repz
in
dec
mov
repnz
adc
adc
imul
stc
cmp
repz
mov
add
lods
les
jnp
mov
push
inc
out
stos
movsb
xchg
add
cmc
add
add
and
movsl
lods
negl
sbb
xchg
fs
mov
jmp
cmp
andl
jge
cld
push
shlb
sub
push
and
repnz
jno
out
lods
in
mov
inc
jae
aam
inc
out
adc
cld
and
scas
adc
rsm
test
fsubl
push
push
loop
loope
ja
jecxz
push
push
hlt
push
sub
push
jo
inc
movsb
and
ljmp
push
add
xchg
push
and
xor
arpl
or
movsb
mov
xchg
fsubrs
daa
mov
fwait
je
int
pop
insl
jp
xchg
fistps
cs
sahf
or
mov
scas
jo
cli
sub
mov
jns
xchg
lahf
mov
ja
int
outsb
mov
and
dec
aam
rcll
add
inc
or
test
mov
loop
imul
cmc
add
add
pop
pop
pop
lret
inc
jae
ljmp
lret
lret
and
addl
xchg
shlb
jne
push
pop
loope
mov
rorb
popl
int
push
notl
loop
xchg
adcl
dec
inc
stos
les
ss
icebp
push
mov
push
lea
notb
ja
push
cmp
pushf
or
jb
leave
test
and
fs
mov
add
dec
mov
lahf
fidivs
push
rorl
jne
cld
mov
cmp
mov
ret
mov
adcl
xlat
sub
lahf
cs
push
cmc
test
into
push
popa
rolb
popf
adc
jae
leave
movsl
xor
and
fisubrl
pop
push
out
ljmp
xchg
aas
aas
test
pop
not
jg
mov
xchg
mov
add
ljmp
loop
dec
pop
cvttps2pi
dec
mov
add
jo
das
jl
fs
sbb
in
mov
fbstp
dec
xor
sub
or
setbe
cmp
outsl
xchg
inc
push
daa
and
lock
outsb
repnz
push
mov
sub
or
mov
jp
mov
push
inc
fildl
insb
mov
dec
arpl
mov
and
and
pop
loope
aam
frstor
or
shr
cmp
imul
inc
mov
push
xlat
mov
pop
xchg
pop
lret
or
js
or
push
mov
leave
icebp
pop
sub
test
mov
mov
xchg
adc
push
test
cmc
popf
adc
cs
pop
rcl
or
mov
cmp
xchg
mov
movsl
mov
test
pushf
insl
and
mov
dec
arpl
sahf
in
jge
mov
std
pusha
lret
push
xchg
testb
sub
pop
cmp
add
aaa
shlb
cmc
div
rcl
inc
pop
cmp
ret
dec
sbbl
add
enter
lret
push
inc
cld
cmc
jecxz
mov
and
mov
lods
mov
cmpsb
sti
mov
outsb
jl
sbbl
and
repz
sbb
push
push
cmp
scas
testb
cmp
shrl
rclb
add
test
scas
pop
je
push
outsl
insl
adc
mov
cmpsb
aam
inc
and
sub
or
rcrb
push
and
cmp
sar
fwait
adcl
icebp
cwtl
fwait
mov
popa
or
mov
xor
aaa
ds
fcomps
cmc
xchg
aam
xor
rolb
sbb
repnz
ja
adc
jne
popf
add
inc
cmp
cld
dec
lods
lret
push
movsl
sbb
dec
rcr
push
rep
and
test
pop
push
mov
jmp
add
add
pop
push
nop
push
sahf
rcr
pop
test
sarb
add
cmc
add
add
sahf
and
sbb
lret
out
sti
adcb
imul
inc
jge
sti
mov
or
dec
lret
in
testb
inc
fdivs
sbb
bound
das
cli
cmpb
pushf
cwtl
pop
imul
ljmp
or
push
mov
mov
sbb
xchg
push
dec
jne
mov
xor
mov
in
outsb
sahf
dec
jp
xor
lcall
movsl
out
pop
dec
jmp
pop
ffree
movsl
fs
pop
leave
mov
call
ja
fstps
jo
or
jg
and
das
js
cmpsb
mov
jnp
ss
push
repz
sub
and
jge
jl
popf
aas
cltd
js
xor
add
add
pop
fcmovbe
lods
jne
stos
cmc
or
sti
call
xchg
xor
add
shll
cmpsb
jcxz
jne
push
inc
xchg
jae
insl
lcall
adc
sets
sti
ret
scas
mov
push
fistl
xor
cmovnp
dec
add
cmp
leave
pop
rcrl
mov
inc
aam
mov
mov
mov
pop
mov
fwait
je
int
loope
aaa
cmpsl
movsb
or
neg
stos
movsb
mov
enter
dec
cli
adc
cltd
or
jb
and
cmp
jae
arpl
dec
xor
fs
pop
mov
data16
out
mov
cmpsb
sub
cmp
pop
loop
das
ss
movsl
xchg
xor
add
dec
hlt
jg
push
jnp
adcl
lods
mov
jecxz
add
jmp
dec
jnp
fldt
jge
test
outsb
imul
sbb
leave
out
repnz
hlt
scas
xchg
xchg
aad
jmp
lock
ficoms
loope
cwtl
add
add
clc
jnp
jg
in
cli
cwtl
inc
mov
ja
cmpsb
ret
add
cmc
add
add
imul
xchg
xor
lock
in
gs
mov
pop
mov
test
or
lock
sub
xor
or
cmp
leave
movsl
mov
daa
das
lret
pop
sti
mov
andps
push
movsl
cmp
shlb
repz
cmpsb
dec
fsub
ljmp
dec
and
push
xor
jge,pn
ror
dec
stos
pop
mov
je
out
fdivr
dec
std
jb
xchg
inc
test
pop
sub
add
mov
fcoms
call
dec
daa
int
in
popf
ss
shrb
repnz
or
or
out
daa
sbb
jb
jo
jo
jae
lock
push
or
and
loopne
xchg
aaa
sub
ds
push
gs
push
mov
scas
loope
fdivrl
mov
add
ljmp
cld
inc
push
cltd
das
aad
test
push
pushf
add
cmc
add
add
mov
inc
sub
loop
pop
roll
stos
add
ljmp
popf
fmul
mov
dec
pop
fidivl
jle
dec
xchg
xchg
pop
sbb
sub
and
mov
dec
jg
loop
ret
jno
inc
add
je
push
test
xchg
or
mov
out
call
or
and
rcll
unpckhps
sub
stc
sub
mov
push
fisubrs
out
jl
pushf
sub
fistps
add
sbb
or
jo
out
push
pop
pop
insl
xchg
xor
push
rorb
dec
pop
ficomps
loope
std
push
pusha
icebp
addl
pop
out
lret
adc
dec
mov
or
jecxz
xchg
and
std
in
jno
js
adc
xchg
loopne
sub
sub
push
pop
push
add
add
jl
sar
std
jle
loop
pop
xchg
lods
cmovl
add
dec
stos
push
mov
inc
ds
lret
pop
xchg
stos
add
inc
lds
sarl
and
inc
popf
inc
mov
in
inc
cmp
push
cmc
jno
dec
inc
sub
sbb
cmp
adc
rol
xchg
jnp
fstpl
es
loopne
xchg
and
sti
js
pushf
iret
ljmp
not
lea
add
lock
lcall
or
pop
push
or
pop
cltd
nop
mov
dec
mov
mull
lret
push
inc
push
xchg
popa
in
dec
out
mov
sub
aas
addr16
in
cmpsl
push
es
jmp
dec
mov
xor
jmp
outsl
les
in
lret
sub
loope
insl
loop
popf
insl
pushl
mov
jle
into
aam
lods
test
jne
inc
add
rep
test
add
cmp
cmp
pop
xorl
add
cmc
add
add
cmpsl
cmp
push
mov
aad
mov
inc
into
sti
push
outsl
cmp
je
aad
xor
int
cmpsl
sbb
cmpsl
inc
ret
fmull
dec
lahf
ja
inc
or
and
xchg
xor
cli
test
push
or
jecxz
outsl
pop
mov
pushf
ljmp
xchg
mov
jbe
lcall
xor
add
jns
push
iret
mov
mov
mov
loopne
mov
out
cli
out
cli
mov
jmp
pushf
inc
ljmp
lods
rcrl
popf
movsl
daa
mov
out
mov
rorl
jbe
jbe
lahf
jmp
ret
mov
and
xor
ret
mov
idivb
or
pop
loopne
andb
pop
test
les
enter
push
stos
shlb
orl
pop
or
imul
add
fwait
and
popa
mov
aad
aam
into
lods
test
cmc
add
add
xchg
cmpsb
and
sbb
call
push
mov
dec
cli
push
ret
rol
add
popf
jge
scas
jp
mov
addl
rcrb
push
pop
cmp
mov
push
push
fnsave
xchg
sub
xlat
inc
mov
int
adc
xchg
cmp
scas
aaa
or
shll
push
jp
mov
and
cld
or
scas
popf
and
nop
aam
cwtl
jae
cwtl
je
mov
and
cmp
test
lock
mov
popa
dec
mov
push
sub
out
or
test
mov
cltd
cmc
lahf
jl
fisttpl
jmp
lcall
out
outsb
cltd
std
icebp
call
lods
xchg
fistps
cmpsl
add
sbb
daa
sbb
mov
mov
mov
jae
in
pop
idivb
add
dec
std
out
xlat
aas
jle
ds
sub
add
sbb
sub
dec
cltd
sub
ja
mov
jp
insl
ret
fmul
repz
fucom
pop
cli
mov
movsb
sbb
sbb
xor
mov
jbe,pt
das
sub
sahf
das
push
jecxz
xor
mov
daa
mov
es
pop
lahf
out
insb
or
out
xor
push
aad
cmp
xor
outsl
les
push
in
lods
xchg
pop
mov
stc
call
leave
adc
orl
cli
add
icebp
mov
fsub
cltd
cmpl
adcl
incl
mov
inc
into
int
fstpt
pop
fcmove
sarl
dec
or
popa
inc
dec
scas
sahf
sbb
mov
jle
cmp
iret
jmp
mov
sub
or
rcl
sub
cmc
add
add
mov
mov
jmp
ljmp
add
cmc
add
add
adc
aaa
test
lret
nop
aas
xor
add
popf
and
outsl
mov
pop
sbb
mov
dec
cli
mov
or
loope
xchg
adcb
mov
out
and
sub
in
xchg
xor
arpl
adc
pusha
sbb
loopne
push
mov
rolb
add
fldcw
lock
inc
les
mov
mov
lret
aaa
in
dec
jnp
xor
dec
pop
notl
bound
lahf
fistps
mov
xor
cld
mov
sub
dec
cs
adc
in
icebp
push
jecxz
and
lods
lods
cmpsl
mov
cli
xchg
add
xor
mov
xor
xor
and
sub
mov
test
jg
mov
insl
xlat
and
jp
test
movsb
jmp
scas
adc
sbbl
mov
cltd
lret
jg
mov
add
inc
mov
stc
jno
mov
or
jbe
pop
xchg
push
scas
cmc
mov
ret
insl
lods
fwait
push
sbb
pop
adc
push
lods
rclb
mov
leave
js
mov
inc
add
pushf
xor
pop
dec
cmpsl
ret
mov
mov
mov
in
push
jae
nop
dec
insl
ds
jmp
sbb
outsl
std
inc
or
push
mov
sub
lret
sub
lods
xor
outsl
xlat
je
sbb
push
jo
outsl
or
jl
mov
dec
and
movsb
cmpsb
sbb
pop
xchg
sbbl
jae
xchg
push
nop
and
imul
push
xor
inc
loopne
xchg
cmpsb
push
xor
stos
fwait
out
mov
sbb
xlat
fcom
outsl
mov
adc
sbb
mov
add
inc
push
ret
inc
scas
sti
cmpb
mov
jno
lods
add
add
imul
and
or
adc
add
cmc
add
add
sbb
pop
pop
pop
mov
data16
lods
xor
sbb
dec
pop
cmp
out
sub
movsb
adc
push
repnz
jle
push
mov
test
cmc
mov
pop
xchg
fisttpl
pop
jp
cs
int3
jae
shll
out
leave
inc
ja
mov
xchg
mov
orb
xchg
mov
fistpl
cmp
mov
insb
mov
imul
stc
mov
pushl
inc
fistpl
push
push
dec
sahf
je
inc
popl
int3
mov
adc
cmp
xchg
das
jl
fistpll
sub
push
lcall
xor
jns
pop
cmc
inc
fidivs
aaa
add
mov
cwtl
push
xor
pusha
sub
rolb
std
mov
je
add
mov
jge
jg
decl
xchg
cmp
stos
jmp
add
ret
jecxz
loopne
push
pop
lods
mov
insb
cmc
inc
icebp
lcall
pop
mov
pop
ret
out
or
or
ret
xchg
mov
jb
jae
jns
push
mov
sub
add
cmp
jne
test
pop
mov
aaa
int
mov
leave
sbb
int3
cli
in
pop
mov
mov
jmp
loopne
bound
bound
dec
jne
shlb
jecxz
cmp
pop
and
sbb
or
push
xlat
loop
xchg
mov
rolb
int
inc
and
aaa
out
aam
popa
addb
mov
adc
cmp
mov
fbld
push
test
xor
loopne
fstpl
imull
out
inc
repz
adc
enter
stos
inc
and
xchg
jb
fwait
jge
jnp
add
cltd
sub
out
das
mov
aam
mov
cmc
add
add
push
or
in
add
test
pop
rclb
push
xchg
test
pop
lods
pop
fdivrl
fcomps
incl
cmc
ja
fsubrl
out
xsave
jp
pusha
adc
lods
push
fidivrl
ret
sub
sub
xor
loopne
je
fstl
push
push
inc
push
out
mov
jl
pop
dec
test
jge
cmp
mov
cmp
jnp
pop
mov
movsb
sub
jnp
mov
jns
dec
jnp
lock
jl
cmp
or
mov
push
pop
xlat
pushf
adc
mov
imul
sbb
jp
add
andb
and
xchg
cmp
push
aad
push
pop
clc
pop
or
and
inc
mov
int
loopne
lret
dec
idiv
push
and
adc
inc
jo
mov
pop
cmp
add
add
pusha
test
mov
mov
add
cmc
add
add
rcll
sub
aad
cmp
dec
loopne
xchg
jecxz
pop
add
inc
call
bound
test
xchg
xchg
jo
lret
cmp
pop
pop
mov
rcl
jnp
xchg
frstor
sahf
mov
pop
push
sub
jle
inc
sbb
push
fcmovnbe
lods
adc
mov
sbb
lds
nop
aam
lock
fimuls
cmp
jo
in
cmp
cmp
xchg
mov
dec
jmp
push
lret
and
ret
xchg
cld
insl
sbb
cmpsb
jmp
dec
iret
sar
insb
mov
cmp
pop
jmp
aad
mov
mov
aad
sub
cmp
dec
fstps
lcall
cmpsb
sub
in
xlat
daa
arpl
movsb
imul
mov
decl
aad
mov
mov
or
lcall
shll
add
add
add
xor
cs
cmc
inc
inc
iret
in
sbb
shlb
wbinvd
add
outsb
lcall
mov
int3
cmpsl
mov
cmpsb
sbb
push
imul
sbb
dec
sub
push
mov
cmp
push
scas
push
sbb
iret
inc
hlt
fisubs
jecxz
jo
xchg
xor
sub
jecxz
mov
or
test
sbb
sbb
push
cmp
into
xchg
shrb
loope
xchg
mov
es
lea
rcr
insb
cmpsb
or
scas
in
stos
adcb
xchg
mov
je
mov
push
mov
push
stos
xlat
xorl
icebp
das
shll
push
or
xor
test
sub
es
lds
pushf
sub
daa
add
add
add
mov
mov
cmp
inc
jne
in
cmpsl
add
cmc
add
add
lcall
inc
mov
fsub
mov
scas
mov
mov
frstor
in
sbb
fildl
leave
ja
xor
and
xor
loopne
pop
and
lods
mov
and
sbb
mov
sub
enter
mov
test
mov
shll
jns
jmp
jmp
pop
and
pop
scas
clc
ds
sub
test
mov
mov
loopne
pop
push
in
stos
xchg
xor
adc
bound
shr
pop
pop
xchg
fsubr
inc
ret
inc
xchg
lock
xchg
imul
test
or
std
mov
mov
push
test
test
jbe
data16
subb
mov
mov
jp
dec
mov
enter
xor
pop
movsl
pop
xchg
bswap
inc
mov
sub
loop
cmpsb
jnp
jb
mov
cmp
push
lcall
add
or
sbb
mov
xchg
jnp
enter
cmc
add
add
loope
sub
push
jl
jns
jg
pop
push
sti
mov
or
cmp
mov
fidivrl
inc
mov
cmp
stos
add
sbb
shrl
and
enter
push
ret
enter
sub
fs
push
adc
enter
aad
arpl
mov
mov
aaa
std
inc
or
mov
pop
fbstp
push
xchg
jmp
repz
mov
addr16
repz
inc
cmp
repnz
xlat
fisubrs
push
mov
ss
xchg
gs
xor
lret
mov
mov
add
jnp
add
xchg
lods
xor
sbb
adc
dec
xchg
mov
cmpsl
aaa
mov
data16
repnz
push
movsb
scas
jg
sbb
addl
add
inc
fdivl
stos
push
adc
add
add
insb
push
popa
inc
or
pushf
je
mov
repz
cld
ret
cmc
scas
add
sub
rcl
and
adc
icebp
xor
jbe
fstpl
pop
fstl
add
jnp
sti
arpl
sbb
adc
cmp
mov
orb
fsubp
mov
and
lret
ds
inc
out
das
sub
mov
inc
lret
sbb
sbb
fwait
mov
xorl
mov
popf
stos
xor
mov
xor
imul
mov
jne
sbb
push
mov
cmpsb
add
xchg
xchg
xor
sbb
icebp
repnz
push
int3
cmc
bswap
mov
cmp
sbbl
add
sbb
mov
pusha
lock
cmc
add
add
xchg
out
fs
jg
xchg
dec
icebp
movsl
adc
aad
jno
stos
push
aam
repnz
push
out
adc
jo
flds
mov
ljmp
int
fcoms
adc
cwtl
dec
inc
lock
xchg
inc
clc
lret
jmp
mov
add
cmpsl
rolb
push
fwait
cmpsl
cmp
dec
rcl
lret
dec
sbb
adc
mov
xchg
sub
mov
dec
aas
xchg
imul
pop
or
ja
mov
loop
and
popa
or
and
mov
fisubl
sbb
or
imul
js
fsubrs
pop
movsb
fmull
fwait
ror
push
negl
ds
test
mov
stos
jecxz
mov
inc
gs
shrl
mov
xchg
mov
in
xor
clc
loop
fbld
add
add
stos
hlt
jmp
ljmp
dec
sub
cmpsl
stos
add
cmc
add
add
and
cmp
sub
fwait
lds
xor
stc
pop
push
movsb
shr
jecxz
push
and
push
dec
loopne
or
iret
loopne
std
in
movsb
adc
shll
fdivrs
add
push
pop
lods
gs
xchg
xchg
subb
data16
icebp
xor
pop
adcb
aad
push
iret
sarl
rcrl
xlat
jae
xchg
pop
sbb
aad
xchg
cmp
shl
in
imul
stc
testl
rolb
or
xchg
lret
push
aas
xchg
stos
in
xchg
scas
jle
fucomp
inc
sbbl
pop
pop
mov
sbb
or
outsb
stos
lea
xor
cld
sbb
lea
ljmp
lea
pop
mov
addr16
mov
add
push
nop
out
xlat
out
jg
dec
cmp
cli
sahf
adc
pushf
lods
add
cmc
add
add
scas
sbb
inc
dec
or
mov
jle
call
sbb
jle
mov
push
cmpsb
cmc
fs
sti
ja
sbb
or
in
scas
mov
sub
sub
xchg
or
xlat
dec
or
loop
pop
outsl
pop
mov
sbb
and
movsb
scas
xor
push
mov
dec
dec
add
cmp
in
bound
add
lret
add
lahf
ss
inc
dec
jne
pop
lods
icebp
push
push
xor
in
out
jbe
push
stos
clc
stos
add
dec
push
or
jmp
pop
mov
aam
lret
fwait
sti
outsb
lahf
daa
xchg
outsb
sbb
and
lret
arpl
test
shlb
cmp
pushf
pop
pop
clc
xchg
pop
push
push
sbb
inc
dec
dec
fyl2xp1
ficoml
out
sub
jl
rolb
ja
cmp
xchg
cmpsb
lea
scas
add
add
mov
inc
fwait
lds
xor
lahf
add
add
add
xchg
push
push
add
xchg
ss
add
jp
fcmovnu
fadds
xadd
or
mov
jg
xchg
cld
pop
pop
inc
fidivl
inc
clc
bound
mov
dec
mov
mov
jl
cmp
in
aas
pop
clc
cs
mov
pushf
ja
rcl
push
adc
cli
push
pop
add
cvtdq2ps
sahf
loop
lods
sub
hlt
ss
mov
xor
mov
inc
or
mov
add
stos
hlt
ret
daa
out
and
and
fildl
dec
insl
xchg
push
jo
and
mov
pop
jb
movsb
dec
cmp
imul
mov
hlt
jnp
or
mov
notb
int
cmp
pop
or
mov
sub
mov
inc
and
add
add
mov
ja
lahf
cmpl
add
add
enter
mov
cmpsb
jb,pt
mov
mov
loopne
pop
jecxz
out
mov
iret
inc
add
adc
or
andl
cmp
cmc
cmp
lock
and
pusha
pop
xchg
scas
mov
or
lret
lods
fdivrp
cmp
and
jg
fcmovbe
pusha
sbb
mov
jo
shlb
cmpsb
mov
test
loope
stc
pop
std
and
mov
inc
adc
sub
pop
rcl
inc
lds
sbb
inc
bound
inc
test
dec
imul
push
push
in
or
out
adc
aad
out
lods
mov
sbb
xchg
xchg
mov
icebp
repz
leave
call
add
adc
insb
pusha
cmp
add
add
clc
ljmp
xchg
inc
and
lods
cmp
push
in
add
lret
jnp
sti
jmp
xchg
sub
in
sub
scas
add
cmc
add
add
mov
jp
nop
add
fcomi
mov
cmp
cmpsb
jecxz
in
lods
push
es
jl
in
aam
xor
adc
pop
dec
pop
divb
ja
pop
icebp
adc
scas
sbb
mov
insb
repnz
sti
sbb
adc
sbb
fwait
and
push
xchg
xchg
stos
inc
cs
addr16
or
clc
pop
cmpsb
mov
insb
testl
ljmp
out
stos
fst
push
add
and
shl
popf
inc
mov
and
pop
jbe
mov
push
scas
cmp
push
inc
ljmp
push
add
cmp
mov
dec
stos
in
popf
cmp
cmc
arpl
out
inc
lahf
call
outsl
add
outsl
paddsb
mov
jne
mov
pop
inc
scas
push
cmpsb
dec
xor
and
dec
loopne
and
add
mov
jecxz
lock
sub
clc
jo
add
cmc
add
add
repz
scas
push
je
mov
adcb
push
fldenv
xor
sbb
mov
push
adc
xchg
jnp
mov
jge
cltd
mov
inc
sub
test
mov
adc
fwait
pusha
aad
sbb
insb
gs
and
inc
or
std
inc
sub
bound
ror
sbb
xor
dec
inc
jge
nop
push
sbbl
xchg
sarb
sti
icebp
mov
xor
test
and
or
or
inc
jae
mov
js
and
push
outsb
push
mov
pop
fmuls
test
cli
push
int3
mov
push
or
mov
popa
aam
push
pop
ret
ds
decb
mov
xorl
out
xchg
in
sbb
jno
insl
loop
nop
repnz
sti
mov
jne
fcmovbe
mov
add
add
cld
mov
test
gs
add
add
add
or
ja
cmp
inc
xor
push
cmpl
hlt
aaa
sbb
jp
ds
inc
data16
movsb
xchg
fisttpll
xchg
ja
dec
sti
loopne
xor
xchg
cmp
mov
adc
lcall
pop
fisubs
test
sar
mov
pop
mov
push
jbe
fcomip
adc
push
mov
inc
arpl
xchg
nop
dec
out
and
xor
push
pop
mov
mov
pusha
rclb
jo
dec
xchg
icebp
push
aaa
inc
in
std
sbb
sbb
jne
lret
jecxz
mov
dec
scas
in
jle
xchg
or
fs
nop
sub
lret
xor
loopne
loopne
fs
push
xor
cmpsb
jno
daa
js
inc
sub
mov
inc
xor
mov
sti
sbb
imul
push
mov
mov
add
add
out
cmc
mov
jae
shrl
add
add
cmc
cmp
adc
xor
add
jg
xor
inc
js
cmp
shlb
mov
imul
adc
xlat
mov
add
repz
inc
fildll
lds
push
push
mov
insl
add
pusha
mov
mov
xchg
pop
or
loop
lea
rclb
sbb
rclb
xor
cs
mov
sbb
cmp
xchg
push
cld
jecxz
sbb
cmp
out
inc
sbb
inc
add
xor
rcrl
imul
int
dec
and
test
ss
aaa
lcall
dec
xchg
cmp
lock
outsl
enter
jle
sub
adc
cmp
add
data16
xchg
xchg
inc
cmpsb
adc
xor
dec
and
pop
icebp
inc
and
es
js
mov
push
add
add
out
std
dec
std
pop
mov
push
xchg
dec
mov
add
add
add
in
sub
das
xor
mov
in
push
ss
push
scas
cmpsl
xor
daa
sub
test
xchg
push
rolb
jge
ja
in
loop
in
pop
jp
add
arpl
push
push
jae
out
movsb
lahf
repnz
or
jmp
pop
and
fwait
data16
into
pop
data16
add
movsl
adc
inc
adc
ljmp
popf
fnstcw
mov
mov
pop
mov
lcall
or
not
sbb
xor
xor
lods
jmp
lret
lahf
mov
stc
mov
loopne
bound
push
imul
jnp
call
loop
pop
sar
ret
outsb
inc
dec
inc
testb
test
mov
inc
add
adc
xchg
jecxz
bound
cli
int
push
adc
cli
mov
pop
cmp
loop
add
add
fidivs
loop
ljmp
ss
roll
cmc
add
add
xor
inc
call
cmpb
jp
push
nop
xorl
jno
mov
jecxz
incb
or
cwtl
iret
movd
mov
aaa
lret
rolb
inc
outsl
dec
stos
sbb
sbb
sarb
mov
dec
mov
je
mov
test
jbe
popf
add
add
push
testb
push
mov
mov
icebp
sub
mov
mov
cmp
nop
cltd
stos
xor
jge
mov
test
jne
movups
daa
enter
aad
bound
cld
fidivrs
xchg
cmpsb
push
dec
jno
jecxz
cmp
adc
je
andb
inc
pop
sahf
jg
or
jo
sbb
stos
mov
std
fiadds
jmp
jbe
xchg
xor
xchg
push
int
inc
xchg
cli
fs
mov
xor
sbb
xchg
or
cwtl
ret
add
add
xchg
jg
jmp
std
jge
in
xchg
fists
daa
mov
cmc
add
add
jle
add
xor
int3
cmp
ret
aad
cltd
nop
jge
xor
inc
dec
cmp
arpl
inc
call
pop
inc
rcrb
imul
jle
push
test
imul
jnp
fwait
push
aad
sbb
stos
scas
lea
es
imul
aas
ja
mov
jmp
pop
mov
lods
scas
std
pop
js
cs
mov
push
out
insl
jmp
movsl
xor
jecxz
mov
movsl
inc
mov
cmc
arpl
sub
mov
xchg
push
mov
dec
xor
pop
mov
adc
test
mov
addr16
bound
aas
loopne
pop
out
sub
aam
sar
mov
mov
in
push
movsb
cmp
pop
rorb
jmp
psllq
add
add
xor
std
cmp
lahf
fildll
mov
add
add
add
arpl
insl
jge
jne
daa
xchg
sub
inc
shlb
imul
int3
and
mov
inc
xchg
pop
mov
sbb
rcr
sub
dec
loope
xchg
in
jge
xor
hlt
fiadds
lret
cmpl
inc
incb
cmpsb
and
outsl
in
and
sbb
pusha
test
mov
xor
popa
clc
jb
pop
adc
fs
push
leave
cmp
mov
sbb
sub
xor
adcl
shl
cmpsb
dec
sbb
adc
sub
adcl
or
je
mov
jle
test
add
out
pop
jno
lea
cmp
mov
ss
addr16
movsb
xchg
inc
jo
out
xchg
mov
pop
dec
cld
mov
jne
xchg
xor
sbb
daa
sbb
add
add
xor
cmp
ficoml
ficomps
push
and
add
xor
outsl
mov
pop
lret
aam
sub
ss
add
ljmp
data16
aaa
call
neg
aam
rorl
adc
jp
fidivl
ds
insl
xchg
test
jmp
and
mov
push
repz
mov
sbb
ljmp
pushf
sub
pop
or
or
pusha
mov
mov
push
xor
lods
push
and
inc
dec
shlb
or
push
adc
push
das
dec
int3
roll
cmp
in
adc
push
adc
clc
js,pn
push
or
push
jge
mov
popa
inc
cmp
loope
test
xchg
adc
cmpsb
jae
outsb
lret
push
stc
es
test
dec
fisubrl
js
jp
push
ss
int3
lahf
out
loop
sub
xchg
inc
cmp
push
add
add
jp
les
mov
push
push
adc
leave
cmp
mov
add
push
es
xchg
das
xchg
lods
jns
cli
and
add
jnp
jmp
idiv
test
les
faddl
leave
ljmp
or
add
cmc
mov
not
cli
add
js
idivl
mov
jp
add
mov
aas
mov
ficompl
out
sub
mov
iret
sub
sub
incl
adc
push
xchg
xchg
clc
inc
dec
arpl
leave
call
cwtl
fincstp
jo
and
jno
mov
push
movsb
orb
fisubl
les
jp
or
xchg
or
pop
adc
mov
pop
rorb
into
fs
test
mov
xchg
mov
addl
jl
daa
xchg
daa
cld
xchg
mov
push
sub
jp
mov
pop
jge
in
insl
ret
call
pusha
and
add
dec
or
pop
stc
out
push
insb
xchg
cld
sub
mov
add
test
js
rcrb
push
data16
mull
mov
lods
or
inc
adc
xchg
shll
pop
cmp
test
sahf
mov
pop
mov
mov
push
inc
pop
xor
cmp
jnp
adc
lret
ljmp
mov
mov
or
xchg
push
ja
fildl
cmp
into
dec
std
xchg
rorb
push
mov
fwait
and
popa
enter
xor
xchg
cmp
movsl
sbb
xor
iret
test
add
push
mov
sarb
push
into
idivb
xchg
bound
addr16
test
add
mov
pop
sub
adc
cld
lret
mov
fldl
mov
jb
mov
bts
fs
push
or
or
add
lds
cli
lcall
ret
clc
jge
mov
add
in
xor
cmpb
jge
daa
popl
adc
jns
imul
scas
jnp
mov
and
out
fisubrs
cmp
sti
orl
sub
add
and
jbe
stos
in
into
outsb
mov
int
fnstsw
add
sbb
xchg
loope
aaa
loope
xchg
jae
test
add
jecxz
shrb
xchg
dec
out
cmp
xor
dec
dec
loop
shrl
cwtl
pop
in
jns
push
fstpl
enter
fldl
jo
sbb
dec
sbb
loope
xchg
add
adc
sub
repz
xor
dec
mov
mov
test
and
call
mov
test
mov
lock
lds
in
dec
push
clc
and
jo
das
loope
roll
into
or
xor
sub
add
add
jne
mov
xlat
insb
scas
add
add
cmc
add
add
lcall
fmul
pop
fsubl
xor
pop
mov
aam
mov
mov
adc
inc
inc
outsb
pop
insb
sbb
or
cmp
test
nop
mov
fs
mov
pop
dec
push
jb
sub
xchg
add
test
sub
mov
mov
stos
in
sbb
lods
test
jno
fsts
cmc
mov
repz
scas
cltd
adc
sti
gs
or
test
je
jge
mov
xor
push
mov
xchg
testb
imul
and
sbb
fs
xchg
fsubl
out
fsubrs
int
cli
xchg
xchg
pop
fisubrl
lea
adc
mov
notb
mov
inc
sti
mov
xchg
pop
and
in
jne
fisttpl
ret
std
fstps
out
sub
jg
or
fiadds
add
dec
pop
pop
sbbl
fstpl
rorl
mov
add
xor
enter
push
and
fdivrl
adc
sub
icebp
in
jb
loope
sbb
rclb
aaa
push
jle
xor
sub
or
mov
loopne
mov
lds
mov
sarl
imul
sbb
mov
adc
inc
loopne
jne
in
push
mov
test
imul
imul
repz
jl
inc
jp
jecxz
bound
pop
shll
and
sub
or
and
add
stos
pop
adc
mov
pop
js
test
push
test
or
xor
pop
jne
and
add
pop
push
push
pop
pop
fnsave
xor
push
jp
add
sbb
mov
fwait
mov
mov
icebp
arpl
add
loope
mov
jecxz
out
sub
adc
mov
add
in
sbb
pop
aas
mov
ret
popf
and
shrb
scas
ficoms
loop
xchg
call
jg
add
cmpsb
inc
adc
mov
sbb
adc
lds
mov
jo
mov
adc
jl
out
cmp
outsl
imul
mov
fsubr
das
sbb
in
cltd
jbe
sbb
xor
data16
add
aas
test
adc
out
dec
sar
mov
outsb
arpl
cmp
je
mov
xchg
insb
stos
in
sbb
adc
fisubl
je
mov
mov
cmp
mov
das
mov
jge
xchg
pop
jp
repz
or
fs
in
das
movsb
mov
test
jnp
add
add
js
aad
adc
test
out
xchg
mov
sub
incl
loop
add
push
xchg
test
jg
jbe
movsb
mov
add
cmc
add
add
pop
insb
pop
aaa
iret
pop
cmp
jge
ljmp
insl
pushl
or
mov
call
hlt
bound
shlb
mov
jne
loope
cs
ljmp
or
and
adc
lret
jbe
mov
rcl
rcrl
jo
sbb
test
es
sub
mov
ljmp
insl
pop
dec
sub
jge
add
ret
cld
push
or
mov
mov
sbb
call
ljmp
jge
aas
cmpsb
les
std
lret
cmp
int
cmp
sti
xchg
jne
movl
xorb
fcmovbe
mov
xor
popa
outsl
shll
mov
mov
xlat
cltd
aad
ds
push
xor
add
add
adc
in
lcall
xor
scas
mov
add
add
add
xor
add
loope
call
lcall
mov
addl
stc
mov
aas
popa
pushf
inc
adc
pop
xchg
bound
mov
fdivp
frstor
mov
cmpsl
iret
movl
sbb
out
lock
pop
outsl
stc
cmp
push
xchg
mov
cmp
dec
lahf
inc
cli
and
mov
push
cmc
xchg
imul
test
push
pusha
rcll
negl
dec
and
outsl
iret
cmp
repz
sub
fldl
inc
filds
outsl
pop
push
push
outsl
mov
mov
mov
mov
mov
fstl
pop
out
jl
popa
mov
out
push
xlat
mulb
sub
sub
dec
test
lds
jne
enter
fiaddl
mov
add
xor
enter
add
sub
jg,pt
stos
dec
push
jo
sbb
add
cmc
add
add
xorl
jne
aam
out
cmc
stc
ret
jg
mov
add
xchg
loopne
and
sub
xor
and
mov
movsl
hlt
addr16
adc
add
inc
adc
add
pop
or
mov
jno
xchg
test
xchg
cs
push
push
clc
mov
fsubl
sti
inc
pop
sub
pop
dec
call
aam
fs
sarb
ret
adc
cld
popa
cmpsl
xchg
lods
dec
imul
mov
cltd
cltd
xor
orl
push
orb
fptan
nop
iret
or
xor
mov
jb
in
xor
test
sti
adc
dec
jns
xchg
int3
mov
int
rcrb
data16
mov
lea
jle
mov
stos
sub
sub
pop
cmp
movsb
add
add
out
idiv
outsl
mov
shrl
add
add
add
jne
jecxz
int
in
push
inc
add
cmpsl
aam
fiadds
outsl
or
jne
push
mov
pop
mov
ja
xor
or
and
inc
rcr
in
push
aad
push
arpl
mov
jg
inc
or
sub
std
mov
rorl
ljmp
jno
xor
sub
icebp
int
jg
add
sbb
or
push
test
or
jne
push
cmp
xchg
mov
iret
mov
xor
jne
pop
in
fdivrs
cld
stos
dec
scas
stos
cmpsl
xor
inc
ja
adc
xor
xchg
sbb
and
adc
dec
add
iret
xor
xchg
cmp
ds
jp
dec
inc
fbld
dec
je
int
flds
mov
js
test
jnp
and
fs
add
add
inc
fbld
mov
cltd
inc
mov
mov
cmc
add
add
adc
cwtl
lods
sbbl
or
jg
and
inc
lret
in
xorl
sub
stos
xchg
pop
and
jb
scas
test
mov
fimuls
push
mov
daa
pusha
xor
mov
repz
sub
inc
aas
push
adc
adc
fbstp
mov
aad
sahf
push
dec
jg
cmp
inc
outsl
mov
fsqrt
inc
aad
adc
mov
mov
or
add
mov
xchg
test
pop
cmp
aam
aaa
dec
mov
int3
mov
mov
pushf
ds
adc
into
dec
pop
xchg
mov
es
pop
sub
fidivrs
and
movb
icebp
fisubs
or
xchg
jmp
fmuls
xor
in
add
mov
subb
add
add
fistpll
call
outsl
js
jnp
ret
cmc
add
add
imul
jo
repnz
cltd
jno
and
xor
and
rolb
rorl
jae
loop
int
and
sahf
push
daa
negb
mov
xchg
cmp
sub
inc
or
inc
loop
xchg
int3
jmp
sub
lea
aas
daa
and
imul
enter
lods
adc
or
fbld
cmp
leave
lahf
icebp
aaa
dec
mov
imul
xor
aad
leave
mov
in
mov
mov
add
cmpsb
and
or
ss
or
jg
fucomip
gs
inc
mov
enter
sub
inc
mov
xchg
or
loop
add
popf
enter
out
dec
mov
adc
jno
mov
mov
stos
jge
push
filds
add
add
std
sti
leave
sti
iret
ljmp
sti
hlt
xchg
ret
add
cmc
add
add
and
cmp
movsl
xchg
dec
jmp
clc
xor
dec
mov
pop
out
lcall
pop
xchg
xor
lret
add
notb
jecxz
sbbb
mov
cmp
insb
jmp
lret
sbb
push
loop
orb
test
lret
ret
xchg
loope
outsb
decb
aad
push
shrl
aam
cmp
or
pop
add
addr16
dec
int3
cmpsl
cmpsb
inc
push
and
into
xchg
jg
adc
mov
push
and
test
jge
les
adc
add
sbb
push
addr16
lret
jo
fstpt
jmp
cmp
subb
in
jb
xchg
add
mov
mov
push
adcl
ss
js
add
push
xchg
and
cld
mov
cs
and
add
mov
mov
es
pop
dec
xchg
pop
mov
add
cmc
add
add
jp
ficompl
mov
nop
pop
lahf
pop
xchg
inc
cmp
aam
test
jmp
xlat
arpl
mov
lret
pop
push
outsl
sub
push
ljmp
lret
xchg
sub
and
lret
xor
jmp
in
frstor
or
addps
lea
and
push
cmp
cld
js
push
sbb
dec
sub
test
fistps
xchg
rcrb
cwtl
mov
std
push
aas
dec
mov
int3
push
mov
out
adc
dec
mov
ljmp
lret
mov
pushf
in
test
push
enter
in
movsl
loop
sbb
outsb
push
or
jno
mov
leave
loopne
mov
arpl
sub
nop
lahf
out
mov
xor
sub
stos
out
adc
cmp
add
fwait
mov
or
jg
mov
sub
nopl
inc
jle
add
cmc
add
add
sbb
jo
sbb
xor
fisubrl
adc
mov
adc
iret
xor
mov
aad
bound
scas
dec
cmp
jle
cmpsl
and
dec
pop
push
adc
leave
jnp
icebp
xor
xchg
ds
ja
sub
rcrb
push
aas
js
inc
push
scas
out
fwait
cmp
mov
push
rclb
xor
mov
bound
out
cld
pop
stos
stos
push
xor
sub
ret
inc
lods
inc
inc
pop
fucomip
xchg
outsb
fucomp
lret
insb
sub
fcomps
hlt
adc
mov
lret
or
push
test
xchg
mov
neg
mov
and
adc
add
sbb
mov
and
scas
bound
mov
fs
sub
mov
and
dec
or
clc
fsubrs
negb
test
add
xor
push
cld
pushl
out
adc
xor
push
mov
cmc
add
add
cmc
pushf
scas
inc
jnp
mov
mov
fstps
jge
les
push
xchg
fldcw
mov
sub
push
fisttps
jp
jmp
pushf
xlat
push
sub
xor
mov
int
push
xor
lcall
jnp
insb
sbb
mov
adc
and
imul
jo
dec
ret
mov
dec
notl
xor
gs
mov
rep
cmp
pop
adc
cmc
xchg
cs
test
sub
jp
inc
or
mov
movsb
outsb
mov
sahf
popa
push
and
sub
shl
inc
jecxz
fildl
je
sbb
sbb
data16
sub
jns
add
lods
cmpsl
ret
insl
sub
inc
cltd
pop
into
push
jmp
xchg
aas
mov
test
mov
dec
cmpsl
xor
cmc
xchg
add
add
pushf
shrb
jb
ret
jnp
push
add
add
lahf
mov
shrl
cmpsl
sub
xor
cmpsl
jnp
dec
lahf
ja
xchg
mov
imul
jp
push
ljmp
cmp
mov
aam
adc
roll
ret
adc
push
or
jp
push
inc
adc
jecxz
inc
orl
dec
lahf
or
adcl
mov
fcomp
in
mov
jecxz
or
dec
ds
sub
or
mull
sub
jle
mov
cmpsl
pop
lea
ja
push
jmp
and
loop
pop
jns
adc
sub
jne
and
xor
faddl
les
sbb
inc
inc
roll
push
popa
stc
cli
mov
xlat
sarl
inc
sti
jmp
clc
insl
movd
mov
add
test
mov
xchg
push
outsl
jns
xor
pop
enter
add
add
push
adc
notl
adc
mov
imul
int3
and
push
mov
pop
shlb
cld
inc
push
stc
lahf
mov
insb
jl
and
into
lods
in
sbb
mov
aad
or
mov
aaa
push
mov
xchg
push
mov
inc
push
pushf
ret
and
aam
inc
push
sub
mov
mov
stc
inc
mov
add
pop
mov
shlb
cmpsl
icebp
add
out
cmp
inc
push
fsts
jne
dec
outsl
ja
xor
in
das
push
and
or
cmpsb
adcl
jecxz
mov
mov
xor
dec
or
out
cli
mov
or
cmpsl
rclb
stos
je
xlat
sub
jns
test
scas
imul
pf2iw
xchg
inc
push
scas
in
or
add
add
jne
jne
jg
out
and
push
dec
arpl
add
cmc
add
add
in
xchg
repnz
sub
pop
jp
popa
jge
js
cmp
lret
sbb
sub
mov
mov
lods
inc
pop
shll
enter
fcomps
cld
lahf
filds
xor
xorl
pop
adc
pop
add
pusha
les
popf
push
into
outsl
push
xchg
jae
stos
add
xchg
dec
cld
xor
pop
inc
inc
dec
call
js
cld
lods
gs
jbe
push
dec
shll
xchg
js
pop
sbb
dec
sub
and
fcmovne
pop
and
sub
into
add
mov
pop
bound
sub
js
mov
jge
add
sub
xchg
lods
mov
or
xchg
mov
xchg
imulb
push
ret
bound
add
mov
pop
outsl
sahf
mov
loopne
inc
xor
add
add
dec
pop
mov
cmpsb
fstpl
xchg
xor
lret
cmc
add
add
xlat
mov
xchg
pop
xor
outsb
popf
roll
push
mov
and
cmp
imul
cmp
adc
sbb
shll
outsb
out
in
popf
mov
cmpb
insb
sub
lods
xchg
lahf
iret
cmp
mov
nop
pushf
popf
arpl
mov
outsb
cli
loop
fsts
adc
popa
lret
mov
and
icebp
dec
mov
sub
push
xchg
sbb
xor
dec
mov
aas
mov
push
sub
dec
ret
lcall
psubusb
sub
sysret
cmp
push
scas
outsl
mov
or
imul
and
aas
adc
rolb
inc
ss
jae
arpl
icebp
jns
push
test
int
fcmovbe
imul
mov
push
ss
ja
add
and
outsb
jle
lods
not
mov
add
xchg
cmp
add
cmc
add
add
mov
xor
xchg
arpl
mov
jmp
cli
rcll
pop
stc
out
arpl
push
loope
lret
lcall
testl
pusha
push
sbb
mov
mov
std
inc
enter
dec
xchg
dec
cs
jg
scas
xor
mov
pop
add
scas
add
mov
mov
fisubl
mov
inc
push
adc
movsl
mov
fistpll
and
or
pop
xor
jnp
mov
mov
push
inc
dec
in
lds
sub
cld
in
push
mov
mov
movsl
test
sahf
and
mov
mull
cld
stos
ret
add
or
or
pushl
insl
push
lret
mov
ret
xchg
pop
pop
scas
aas
sub
xchg
lcall
cmp
and
inc
xor
mov
call
mov
sbb
test
add
add
mov
xor
in
int3
add
cmc
add
add
test
dec
jae
sbb
xchg
test
cmp
mov
in
aas
sti
push
outsb
jl
outsl
cwtl
pop
popa
pushf
insb
lods
and
fistps
mov
add
ret
imul
daa
into
cmc
xchg
aam
push
divb
pop
and
mov
dec
hlt
repnz
and
movzwl
sub
inc
mov
add
xchg
and
push
cs
mov
lods
sbb
adc
in
cmpsb
jne
push
subl
xor
or
mov
sub
bound
cs
clc
mov
js
mov
mov
mov
xor
sbb
pop
pop
pop
test
call
jge
mov
popf
xchg
jp
iret
les
ja
pop
sub
int
and
gs
ret
dec
outsl
sub
aad
jl
jno
movl
add
test
sbb
xlat
ss
inc
movsb
sub
int
add
add
add
and
nop
cmpsl
sbb
gs
mov
dec
xor
sbb
shlb
and
stc
outsl
push
cmp
out
aam
jne
xchg
xor
insl
mov
xor
roll
inc
sub
neg
js
clc
jge
clc
jge
jbe
data16
pop
movsl
jmp
sbb
or
leave
mov
push
pushl
push
hlt
and
fwait
adc
mov
sbb
push
insb
cwtl
faddl
imul
adc
shl
pop
leave
test
dec
inc
insb
jae
adc
and
push
gs
xchg
push
sub
lds
dec
fcmovu
and
mov
cmpsl
xchg
and
dec
popa
mov
sbb
call
push
dec
xchg
sub
mov
es
dec
push
lds
ja
rorl
movsl
sub
filds
xchg
scas
lret
jb
push
xchg
pop
sbb
jg
add
add
push
sub
cmp
jg
cmp
push
nop
sbb
add
cmc
add
add
test
adc
jge
cmp
out
jae
sub
ja
repnz
pause
sub
mov
pop
dec
cltd
repnz
mov
lock
mov
bound
lds
add
sub
adc
pop
mov
mov
dec
popa
cmp
pop
add
xchg
or
push
loopne
jae
adc
pop
mov
shlb
jne
shll
flds
cmp
and
jbe
add
test
repnz
fwait
andl
int
testl
dec
outsb
mov
jo
xchg
jl
adc
adc
push
inc
rcrb
arpl
xchg
das
pop
mov
xor
ljmp
pop
dec
and
sar
cmp
test
ds
xor
cmp
sub
sbb
add
xor
fistpll
out
repz
aam
pop
sti
movsb
adc
add
cmc
add
add
imul
aad
sahf
inc
and
ss
lret
addb
out
sub
jo
pop
je
js
jg
push
mov
int3
dec
sti
pusha
mov
aad
cli
xchg
mov
pop
cwtl
sahf
jge
imul
xor
sub
xor
stc
jb
roll
dec
dec
imul
scas
pop
subb
and
xchg
insb
lret
shll
aas
and
and
lock
outsb
arpl
negb
imul
jg
out
or
push
stc
scas
xchg
clc
cmp
or
mov
jecxz
sbb
es
shrl
cmp
and
lcall
xchg
popf
pushf
adc
lcall
add
lods
std
cmp
mov
mov
xchg
sbb
leave
push
es
add
xor
add
mov
jne
cmp
rolb
add
add
add
data16
sub
sbb
pop
mov
jp
pushf
in
shll
jge
sbb
sbb
push
mov
inc
das
loop
stos
cmp
inc
rorb
ds
vcmpps
imul
pop
adc
dec
xlat
cwtl
cmp
pop
shlb
and
imul
inc
pop
test
xchg
mov
movsb
and
fimuls
push
rcrb
xor
dec
test
into
or
and
xor
aaa
mov
mov
test
jb
incb
inc
mov
push
fucomi
push
cmp
add
in
jg
je
cmp
xchg
fwait
das
je
in
mov
sub
repnz
imul
add
and
lods
mov
out
jo
imul
inc
xor
scas
inc
int3
sbbl
inc
and
dec
jb
mov
arpl
xchg
fadd
xchg
cmp
imul
add
add
enter
in
out
mov
dec
dec
popa
push
or
rolb
add
add
add
inc
ret
mov
fistl
dec
fs
into
mull
aam
pop
loope
idivl
adc
hlt
daa
dec
add
in
stos
test
push
jo
testl
dec
rcl
in
in
pop
push
gs
loopne
repz
xchg
or
xlat
pop
mov
lds
outsb
xchg
daa
lods
push
out
mul
add
cmp
mov
sahf
push
pusha
sub
mov
add
push
jns
frstor
scas
push
mov
xchg
mov
sub
push
adc
out
fbld
arpl
push
mov
lret
mov
ret
fists
lods
test
mov
pop
pusha
jl
jp
inc
dec
push
fistl
xchg
dec
fisubrs
xchg
lahf
popf
xchg
mov
rclb
adc
cmp
sahf
adc
icebp
push
mov
cmp
jge
xor
add
add
imul
cmc
call
shlb
cltd
out
roll
add
add
add
push
push
push
jae
hlt
cli
lret
sbb
enter
mov
nop
lock
stc
loope
sbb
adc
ss
mov
push
clc
fisttpll
and
jo
and
mov
mov
and
and
sub
bound
push
enter
fldenv
popf
mov
sahf
push
jp
mov
xchg
or
push
mov
inc
fimuls
or
addl
out
push
push
pushf
imul
inc
push
xor
jmp
in
clc
aas
mov
sahf
jle
pop
rclb
insl
mov
movsl
mov
push
imul
gs
and
mov
sbb
adc
jne
jmp
adc
out
movsb
cwtl
mov
pushf
jnp
or
test
in
xchg
cmpb
insl
xchg
dec
gs
std
imul
push
movb
add
ja
iret
xchg
xor
jb
fsub
rolb
add
add
add
gs
sub
sbbl
jno
ljmp
lock
jle
pop
cs
out
lods
lock
mov
push
push
daa
xchg
jns
testb
push
jge
mov
push
cmpsl
xor
xlat
ds
mov
repz
cmp
aam
jne
rcll
pop
dec
jge
mov
cmp
fnstenv
cld
jecxz
js
fbld
dec
stos
push
ljmp
xor
and
xor
push
repz
or
scas
jmp
aas
adc
sbb
cli
scas
jmp
jle
mov
out
loope
or
aam
jle
movsb
jmp
repnz
sarl
cmp
fs
jnp
and
icebp
std
fnstenv
xor
in
jg
push
cwtl
jmp
movsb
out
lahf
outsl
xor
mov
imul
add
add
out
into
gs
fsts
aaa
imul
roll
add
add
add
fidivs
or
mov
test
aas
aad
xchg
jmp
jmp
adc
sub
jmp
inc
imul
mov
mov
adc
scas
cmp
cli
mov
jno
pop
sub
lods
sbb
adc
outsl
shll
xor
ds
lods
sbb
cmp
inc
or
xchg
adc
imul
sub
inc
mov
ja
addb
dec
test
or
into
and
dec
testb
mov
shl
rcr
push
jmp
mov
loop
push
fmuls
imul
dec
cmpb
jmp
pop
xchg
imul
or
jmp
hlt
imul
mov
cltd
jmp
insb
ret
add
mov
mov
xchg
lahf
jmp
add
xchg
and
je
out
mov
arpl
sti
test
aam
add
add
add
cltd
jp
js
rcrb
aad
outsl
jb
sub
test
and
iret
inc
sbb
cmp
iret
cli
fwait
inc
mov
cwtl
sbb
sbb
outsb
enter
das
mov
out
addr16
cmpsb
arpl
xor
sub
mov
rcrb
mov
push
inc
je
outsb
mov
xor
pop
pusha
or
mov
decl
out
daa
ficompl
mov
mov
leave
sub
adc
inc
arpl
sti
mov
popf
sahf
push
test
fistpl
mov
xor
and
cld
aad
stos
cltd
adc
sub
fnsave
ret
mov
cmp
aaa
pop
stos
cld
test
insb
dec
mov
push
jge
in
push
and
arpl
push
inc
pop
pop
ljmp
shll
mov
bswap
ret
pop
mov
cmp
inc
mov
aad
sbb
add
add
dec
daa
dec
das
outsb
imul
enter
ret
aad
add
add
add
push
pop
sub
aaa
insl
mov
into
rclb
fldl
dec
lcall
sbb
fimuls
push
stos
test
xchg
cs
imul
xor
mov
cld
adc
xchg
add
mov
cmp
mov
mov
cmp
or
icebp
push
roll
movsl
cmp
sbb
in
popf
shrl
jo
cmpsb
mov
lods
xlat
mov
js
and
add
or
movsl
dec
sbb
mov
movl
dec
fwait
mov
leave
jge
dec
aas
out
sub
sbb
jo
cmc
mov
xor
push
lock
orl
cmpsl
dec
loop
inc
les
and
sub
dec
sbb
xor
or
je
sub
push
jbe
add
add
add
popf
mov
lahf
or
fdivs
mov
add
add
mov
mov
lret
cltd
nop
sbb
cli
sahf
or
shlb
xor
shlb
mov
jno
dec
pop
hlt
xorl
cli
pop
in
push
adc
xor
and
std
xlat
sbb
gs
mov
into
adcb
add
test
dec
pop
pop
and
inc
sti
int
inc
jnp
rclb
mov
push
stos
pop
aaa
dec
cld
shrl
sbb
pop
dec
adc
ss
cmp
stos
cmpsl
jl
or
mov
stos
imul
xor
add
ret
lds
mov
lock
inc
fcmovbe
mov
je
pusha
cltd
adc
lea
push
push
sbb
jge
in
daa
jbe
mov
xor
outsb
out
pop
jmp
mov
push
add
sbb
pop
in
icebp
mov
cmovg
add
add
neg
outsl
mov
push
and
in
mov
add
add
add
jo
push
in
hlt
sarl
imul
inc
popf
sti
or
mov
ret
mov
repz
inc
out
mov
lahf
js
adc
jge
push
aam
push
or
and
fidivs
mov
mov
shrb
jp
jnp
mov
lods
imul
call
xor
add
cwtl
and
mov
xor
push
shlb
jns
mov
shl
or
mov
sub
cmp
dec
add
add
and
loop
leave
scas
enter
shll
mov
and
and
push
adc
fwait
aad
cld
frstpm(287
imul
and
stc
into
adc
les
loope
roll
add
mov
xchg
fistpl
call
add
add
add
sbb
sbb
mov
fadds
add
add
add
sbb
xchg
insl
mov
lea
js
sbb
subl
test
mov
and
mov
loop
mov
je
pop
xchg
stos
cwtl
pop
fistpll
sub
les
sbb
outsl
je
add
es
adc
jle
aam
lcall
cltd
pop
adc
xchg
scas
or
jns
sbb
cmp
and
ljmp
icebp
jae
rorb
ljmp
test
xchg
ss
and
cmpsl
jo
push
cmp
dec
mov
mov
pop
inc
sub
dec
push
enter
es
jle
xor
mov
jg
push
divb
in
mov
mov
pushf
cs
shrb
lock
and
fwait
loopne
mov
bnd
enter
pop
add
add
add
ds
sub
flds
add
add
add
out
add
test
add
fsubrl
and
mov
and
sbb
cld
es
in
sbb
addr16
fwait
call
mov
out
aaa
sub
sbbl
idivb
or
sbb
rorb
arpl
adc
repz
cmpl
dec
lret
sub
loopne
sti
or
nop
adc
pop
dec
outsb
cmc
in
out
push
or
clc
imul
add
ret
ror
push
xor
mov
test
mov
adc
fwait
ds
cli
mov
shlb
sbb
push
or
es
push
add
jle
mov
xchg
insl
nop
lret
lret
mov
xlat
jmp
xor
loopne
aad
xlat
dec
mov
and
push
rorl
sub
cmpsb
sub
test
lock
xchg
pop
pushf
dec
push
leave
test
cmp
pop
rolb
add
lcall
sbb
sbb
add
add
add
sub
lods
and
xchg
mov
scas
out
push
repnz
pop
mov
pushf
jmp
add
bound
xchg
mov
fldenv
pop
mov
adc
imul
aad
mov
in
outsl
xchg
pop
ds
cmp
pop
aas
push
pop
lret
or
adc
xor
pop
subb
movsb
add
insl
mov
adc
in
adc
pop
adc
arpl
jmp
and
and
add
jb
mov
stos
pop
sbb
fwait
cmp
cmp
aas
fistpll
jl
cmpb
adc
lock
pop
inc
lret
jmp
mov
adc
cmp
add
in
and
dec
jmp
je
mov
ficoms
daa
or
pop
sub
push
xchg
das
repz
je
vcvttsd2si
xchg
xchg
stos
pop
add
fwait
mov
int3
dec
call
jbe
scas
rcrl
jae
add
cmp
jg
loope
cs
jns
filds
add
add
xor
pop
adc
rclb
mov
xchg
testl
addr16
xor
sbb
sbb
dec
adc
cmp
aas
mov
test
sub
das
mov
repz
in
adcb
mov
cwtl
xchg
test
sub
adc
push
pop
stc
jae
adcb
pop
aas
pop
insb
or
push
pop
jbe
ficomps
in
clc
lods
mov
push
in
xor
jl
and
insb
xchg
xchg
push
bound
mov
mov
sar
xchg
inc
mov
jg
push
sbb
std
into
jp
sub
xchg
out
inc
sub
xchg
rorl
es
xor
xchg
shrb
sahf
inc
imul
xorb
fmulp
stos
or
shrl
mov
in
mov
ret
mov
or
inc
jmp
add
int
out
out
imul
cltd
xor
das
jbe
add
cmc
add
add
mov
xchg
push
lea
cmp
ds
cmpl
sub
jp
in
insb
aam
cmp
adc
jl
icebp
bound
test
das
pop
int3
inc
daa
lret
jbe
cs
leave
popl
and
push
cmp
push
mov
mov
xchg
push
movsb
ret
mov
stos
test
mov
pop
cmp
ljmp
dec
stos
adc
es
dec
and
mov
scas
push
jb
inc
mov
add
cld
repz
push
aam
jne
fsubr
push
adc
push
cltd
jle
push
cld
mov
fcoml
lcall
push
insb
mov
vpunpckhwd
rorl
jg
xlat
adc
and
add
cmp
jmp
pop
sahf
add
add
psubusw
push
xchg
fsubrs
mov
fldl
add
add
add
cld
sub
fxch
test
into
mov
jnp
or
cmp
cwtl
dec
cmp
data16
dec
pop
inc
ss
jbe
xchg
es
xor
mov
imul
mov
add
je
adc
adc
dec
and
aad
cmpsb
into
push
sub
test
rep
pushf
pop
and
push
xchg
das
nop
sti
rorl
cld
push
dec
je
pop
in
inc
clc
sbb
jecxz
gs
push
mov
ret
mov
stc
in
clc
push
orb
lods
push
out
movsl
xchg
mov
sub
add
add
sbb
std
lcall
imul
popa
jmp
out
fimuls
leave
add
xchg
ljmp
movsb
push
outsb
adc
dec
inc
xchg
gs
aas
aad
add
jmp
xchg
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
inc
xchg
add
cmc
add
add
cmp
in
ss
bound
movsl
mov
fnstenv
pusha
jo
shll
mov
pop
cmp
enter
mov
pusha
push
jo
fwait
jecxz
push
repz
ror
out
es
xor
icebp
ficoml
mov
cmp
mov
stos
or
push
or
aam
clc
sbb
lea
fcoml
mov
popa
lods
cmpsb
push
push
sahf
lcall
fsubl
mov
je
fstl
push
lds
ja
mov
inc
data16
bound
cs
stos
dec
push
sub
xor
xchg
out
adc
pop
and
dec
xchg
adc
lock
push
sbb
adc
add
stos
es
lock
mov
push
cmp
cmpsl
sub
sarb
int
mov
push
push
insl
out
mov
add
jle
jg
std
fldt
cmp
mov
add
add
sub
jne
movsl
adc
shr
inc
aad
or
mov
ret
mov
adc
movsb
push
inc
nop
jecxz
clc
pushf
popa
jbe
jae
rcrb
aaa
addr16
je
mov
stos
and
std
and
or
lods
sub
lods
mov
dec
ret
hlt
aam
push
stc
add
sbb
xchg
loop
inc
mov
xor
and
lds
test
test
pushf
stc
es
sub
pop
jb
or
push
ret
out
sub
cwtl
lcall
cld
adc
jno
dec
repnz
or
add
add
mov
ljmp
sub
data16
add
enter
enter
loopne
cs
sbbb
inc
jl
inc
inc
lock
cs
inc
jo
sub
into
std
out
les
out
add
add
mov
sti
idiv
lods
jne
adc
rclb
add
cmc
add
add
sub
dec
cmc
popf
imul
cmp
outsl
loopne
cmp
rclb
loopne
in
fstps
pop
push
in
jae
ret
xor
dec
repz
and
inc
sub
cmpsl
rcl
cmp
leave
jle
pusha
test
mov
in
dec
lds
push
clc
inc
js
repnz
in
je
and
daa
inc
shll
stos
mov
sbb
xor
out
int
in
out
xor
aam
mov
arpl
push
mov
lds
outsb
fs
adc
add
mov
lea
jecxz
mov
push
xor
test
into
xor
test
ja
rcrb
mov
mov
mov
mov
mov
int
shll
jmp
inc
ret
addr16
pop
pop
daa
xchg
out
xorb
cmp
bound
scas
lock
add
add
sbb
jmp
mov
jbe
mov
loope
add
add
add
leave
cmp
and
call
mov
enter
mov
xlat
push
loope
movsb
clc
push
arpl
lds
pop
and
fsubrl
push
std
int3
mov
lret
pop
push
test
cs
pop
fcoml
pop
jg
dec
lds
xor
push
ret
push
inc
scas
movzbl
push
popl
lods
mov
add
ljmp
xchg
aas
and
fst
aas
test
push
add
addb
and
lahf
cli
add
ret
repz
or
insl
fnop
jl
add
jmp
jle
xor
lcall
outsb
aas
lahf
xlat
and
subb
sarb
aaa
out
cmp
jg
shl
sub
cmp
mov
xchg
push
push
jne
and
mov
xchg
sbb
xchg
jno
jecxz
ds
arpl
pop
mov
adc
cmpsl
fimull
jp
dec
pop
sahf
cmp
xor
add
cmc
add
add
add
mov
xchg
shrl
pusha
mov
dec
jmp
in
ljmp
xor
ret
out
pop
ljmp
lods
in
pop
nop
and
inc
or
mov
xor
arpl
pusha
jae
fstpl
movsl
push
aad
cmp
xor
xchg
xchg
or
add
jmp
aaa
mov
rcll
shlb
lods
mov
pop
mov
lcall
shll
mov
push
pop
mov
cmpsb
les
dec
push
jge
fwait
push
mov
jl
hlt
fdivs
test
xlat
pop
pop
xor
mov
xor
xchg
ficomps
push
lcall
cmpsl
popa
mov
test
mov
mov
sarl
xor
stc
in
lods
xchg
inc
leave
nop
mov
mov
lods
jo
add
jg
mov
lcall
mov
adc
jecxz
add
add
add
push
call
mov
cmp
sbbl
fistpll
dec
xchg
dec
pushf
test
leave
outsb
mov
sub
pusha
inc
es
cmpl
adc
and
jg
repnz
ficoms
jbe
out
cwtl
enter
pop
inc
or
jp
divb
test
or
scas
clc
sbb
lcall
mov
idivb
std
stc
cmp
gs
xchg
push
add
imul
cmp
js
scas
xchg
or
cld
sbb
jnp
pop
sub
mov
or
adc
cmp
in
sbb
repnz
add
xor
lret
adc
jl
aam
and
roll
out
shll
lock
in
add
cmp
je
stos
inc
or
test
dec
push
ret
mov
add
add
mov
jns
daa
data16
push
in
add
add
add
push
sbb
xchg
mov
push
je
mov
mov
in
aam
stos
loope
in
nop
insl
cli
jecxz
inc
xchg
sub
mov
xchg
fnsave
imul
adc
movsb
les
push
imul
and
mov
jp
xchg
iret
mov
into
dec
pop
shll
clc
adc
sub
push
inc
jg
aam
cmp
xor
push
sar
jecxz
fisubs
inc
fisubl
test
leave
xchg
ljmp
sub
xchg
and
jmp
or
popa
jne
test
cmp
inc
push
cmp
xchg
dec
out
pop
push
jl
inc
jmp
push
push
fldt
xor
push
sbb
lahf
aas
xor
jbe
negb
sbb
out
lret
fstl
cmp
mov
in
negb
dec
jmp
stos
push
add
add
fadd
fsubp
jnp
push
xor
mov
cmc
add
add
cmp
inc
jl
aaa
fdivr
pop
pop
push
add
push
stc
pop
sub
mov
lods
mov
clc
add
lods
lods
leave
dec
cmp
add
jp
clc
sahf
pop
test
out
int3
out
inc
pusha
push
fcomps
std
scas
and
ds
lahf
out
cmp
mov
mov
sbb
movsb
jecxz
sbb
mov
in
into
pop
mov
dec
outsl
rclb
fs
dec
pop
in
jmp
and
fcoml
int3
incb
and
rcrl
or
fwait
dec
pop
das
dec
in
outsb
dec
rolb
sub
push
dec
out
or
adc
mov
mov
in
adc
jae
push
pop
mul
lahf
loopne
pop
js
and
dec
repnz
sub
inc
mov
sub
mov
dec
and
push
movsb
sbb
add
add
push
cmp
sub
cld
cli
jle
addb
or
add
cmc
add
add
fisubs
mov
dec
std
repz
mov
ja
mov
xchg
scas
test
les
mov
pop
sbb
cli
shr
mov
pushf
push
dec
icebp
out
push
cli
mov
hlt
cmp
loope
pop
notb
hlt
mov
testb
jno
aad
in
xor
ja
push
loopne
push
mov
pop
scas
mov
inc
cs
mov
mov
push
pop
nop
into
shlb
xchg
aaa
sub
pop
cmpsb
lock
lahf
inc
orb
scas
dec
les
add
aaa
jmp
push
adc
push
and
subb
fidivs
lods
dec
lcall
xor
pop
adc
test
jo
dec
fwait
stc
jg
xchg
popa
enter
daa
add
into
pop
fndisi(8087
push
add
add
ja
sti
dec
push
sbb
xchg
std
out
add
add
add
fwait
and
and
clc
inc
imul
xlat
in
sub
push
fists
sbb
scas
addr16
fdivs
rclb
pop
cmp
faddp
shlb
aam
xor
adc
dec
aas
mov
pushf
jns
popa
mov
sub
adc
pop
shrl
dec
mov
add
dec
cmp
mov
pop
test
inc
outsl
nop
sub
inc
mull
or
mov
lcall
cmpsb
imul
cld
add
ljmp
inc
push
sub
or
mov
sti
inc
or
xor
xor
call
or
add
in
ficoml
sbb
sbb
pusha
fwait
jnp
xlat
lahf
pushf
lea
adc
cwtl
push
sub
sub
negb
fcmovnbe
aad
jmp
outsl
mov
insb
dec
lods
jge
syscall
add
add
into
arpl
inc
push
cmc
or
xchg
add
out
add
add
add
mov
dec
xor
xchg
sub
or
jp
mov
lea
ja
sbb
push
outsb
js
mov
inc
push
fdivrl
inc
dec
sub
jecxz
fld
push
mov
cmp
xor
mov
xchg
and
outsb
push
cmp
xor
cmp
pop
mov
sahf
in
cwtl
repnz
fstps
loope
adc
arpl
add
or
inc
js
nop
and
in
jg
inc
and
cli
jp
lea
and
mov
pop
sbb
cltd
lea
cmc
mov
mov
lcall
add
aas
inc
dec
hlt
aad
lock
test
xchg
mov
repnz
sbb
inc
jmp
out
mov
pop
test
les
into
inc
mov
cmp
jae
cltd
and
jmp
dec
and
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
ljmp
lret
movsl
adc
outsb
bound
add
enter
jbe
jo
jmp
addb
in
in
mov
push
movsb
xchg
adc
xor
iret
mov
mov
jno
jg
adc
pop
test
subl
jecxz
add
mov
dec
mov
xlat
pop
push
out
sub
jmp
ja
jb
stos
add
mov
negl
xchg
pop
js
into
mov
ds
xor
cmpb
hlt
jp
jno
ja
mov
adc
push
sbb
lds
sti
mov
call
dec
xchg
adc
and
jo
pop
std
sub
pop
xchg
adc
inc
orl
sbb
test
pop
out
mov
dec
outsl
pop
push
jae
add
repz
lock
jg
mov
pushf
fs
adc
jmp
add
push
jge
add
lret
sub
fsubs
or
clc
ss
sahf
xlat
lods
outsb
sub
mov
lock
pop
movsl
add
cmpsl
mov
ds
xchg
mov
xor
cs
pop
orb
xchg
sub
sbb
ss
shll
mov
aaa
mov
movsb
stos
push
stos
insb
xchg
lcall
adc
jno
arpl
icebp
loope
mov
cmc
mov
fstp
and
xor
cmpsb
sti
in
add
cmpsb
js
popf
cs
iret
sbb
mov
sub
mov
std
cs
adc
lods
aam
or
loopne
cmp
pop
les
daa
mov
push
iret
fwait
rcrl
inc
hlt
int
fwait
mov
cmp
out
cmp
and
push
adc
popa
scas
xor
sub
xchg
xchg
ds
cs
add
add
pop
xlat
fisttpl
ds
ljmp
jmp
gs
in
lret
jo
add
mov
lahf
rclb
lods
jmp
lret
mov
push
cwtl
cmc
mov
xchg
add
cmove
pop
sti
and
pop
cmpsb
sbb
mov
add
das
adc
ja
mov
movsb
mov
outsb
outsb
jmp
jle
jne
sarb
xlat
ja
push
or
aad
add
lods
jge
push
lea
imul
xor
mov
movsl
std
fmuls
inc
fs
outsb
popa
mov
jb
test
jno
cmc
dec
jbe
mov
mov
add
mov
test
scas
push
sbb
repnz
data16
movsb
mov
lods
add
push
cs
inc
sahf
mov
in
and
inc
cmp
mov
lret
pushf
mov
or
sub
add
stc
mov
dec
js
stc
mov
push
nop
aad
mov
stos
jmp
add
add
add
jecxz
popl
cltd
imul
imul
fildll
stos
fcmovnb
cwtl
ja
int3
in
sub
ds
jg
sbb
dec
je
push
int3
push
leave
lcall
add
out
aas
test
addb
xor
pop
inc
repnz
mov
pop
mov
inc
dec
xor
aaa
push
ss
push
enter
addr16
add
fistps
cmp
sbb
xor
addl
sbb
stos
punpcklwd
add
shlb
in
xlat
and
bound
jb
sbb
std
adc
sub
mov
loop
or
pop
mov
stc
ds
push
in
xchg
pusha
add
mov
adc
sub
sbb
int
addr16
lret
enter
lcall
add
add
insl
repz
add
mov
in
add
cmc
add
add
adc
inc
mov
rorb
scas
cwtl
std
leave
mov
pushl
xchg
inc
sub
mov
mov
xchg
xor
scas
stos
mov
and
nop
lcall
mov
ljmp
add
mov
add
mov
mov
call
cmp
adc
fwait
xor
movsb
ret
jp
fistl
push
shlb
xor
cltd
stos
dec
pop
scas
sbb
shrl
and
xor
fadds
shll
fildl
sub
dec
push
jbe
push
xchg
push
decb
in
hlt
cmp
and
mov
movsb
mov
fimuls
out
sbb
insb
lret
pop
aas
xor
add
dec
push
sbb
int3
inc
sub
dec
dec
mov
lahf
lret
and
add
add
mov
pxor
jnp
sbb
in
in
add
cmc
add
add
xor
arpl
pop
cmpsb
fwait
inc
lcall
and
xlat
pushf
ficoml
adc
ret
jp
mov
lret
enter
adc
daa
in
jne
shlb
sub
adc
pop
pop
add
push
or
add
fwait
enter
mov
gs
or
mov
pop
sub
add
add
fildll
or
jae
and
adc
dec
dec
clc
in
push
jne
andb
pop
push
sbb
movsl
fidivrl
rcl
test
push
lahf
xor
loope
scas
add
sbbb
fs
out
fistps
sbb
les
cld
mov
add
imul
dec
cmc
test
rcll
out
scas
cwtl
pop
js
ds
sbb
and
das
mov
daa
dec
jl
int3
add
add
subb
jmp
popa
test
movsl
out
add
cmc
add
add
mov
enter
or
mov
dec
jae
mov
mov
sub
cmp
jge
test
sbb
and
decl
fcmovnbe
adc
lock
popf
addr16
xor
lds
lret
xchg
xchg
push
rclb
aas
cmc
scas
sbb
mov
iret
xchg
pop
cltd
ret
pop
or
mov
add
aaa
enter
pop
sub
xchg
aam
rcll
pop
inc
cmc
inc
incl
ret
push
mov
pop
out
inc
xchg
cld
push
movsb
cwtl
mov
xlat
pop
outsb
mov
inc
mov
ljmp
adc
mov
pop
repnz
or
push
dec
lret
push
insb
pushf
subb
jno
arpl
movsb
pop
jno
dec
nop
hlt
pop
xchg
shl
dec
movsb
je
sub
dec
out
cwtl
and
cmp
add
add
jb
scas
cmp
int3
bnd
iret
cmovl
add
add
sub
and
loop
jg
mov
fiadds
fsts
inc
je
mov
pop
mov
imul
or
cltd
out
pop
xchg
mov
call
add
sub
ljmp
and
ja
lcall
into
ret
sub
xor
clc
mov
fs
or
push
inc
push
aad
pushf
ret
mov
pop
in
les
mov
jnp
inc
cmp
add
outsb
sbb
cmc
mov
loope
bound
push
je
arpl
and
xchg
in
mov
daa
pushf
cmp
lret
jne
push
add
insl
mov
or
fs
mov
mov
xchg
lea
fcoms
scas
adc
pop
xor
mov
xor
lock
imul
mov
xlat
mov
fisubs
add
cmc
add
add
adc
aas
rcll
lock
pushf
add
push
addl
cmc
add
std
iret
pop
arpl
pop
xchg
imul
mov
lahf
insb
in
rclb
rcl
mov
add
insl
les
xor
in
test
test
mov
fldt
cmp
jne
rol
mov
dec
jb
imul
scas
add
lods
mov
mov
lret
pop
xor
adc
mov
shlb
dec
popf
dec
pop
inc
arpl
lahf
and
shl
into
cmp
movsl
mov
inc
movzwl
out
inc
loope
hlt
fisttps
cmp
mov
lret
test
and
sbb
xor
shr
fistpll
popa
ret
int
sub
sub
arpl
xor
in
mov
push
jecxz
or
notl
add
add
mov
aas
jp
int3
icebp
push
clc
ja
icebp
add
cmc
add
add
mov
pop
push
mov
clc
cmp
aaa
fwait
xor
jp
rclb
sbb
jne
push
ds
pop
mov
lcall
add
movsb
jb
test
jge
sbb
mov
adc
or
loopne
lock
test
push
and
lods
add
negb
push
shll
push
rcl
and
xor
add
addb
or
repz
out
mov
mov
cmp
fstpt
nop
or
push
scas
daa
xor
loopne
insb
scas
aam
adcl
idiv
push
data16
push
cmp
dec
mov
pop
add
xchg
adc
out
iret
mov
xchg
xor
ficoml
int
ret
adc
sbb
xlat
dec
std
shl
adc
imul
add
mov
sti
mov
xchg
fistpll
add
add
add
inc
jnp
movsl
xchg
sbb
add
clc
jg
push
add
loopne
shlb
sbb
push
fsubl
test
stos
add
repnz
add
mov
cmc
and
mov
push
in
jg
test
les
test
adc
xchg
adc
test
push
mov
mov
insb
pop
mov
xchg
xchg
add
pop
fldt
insb
data16
insl
ret
jae
ja
push
xor
in
into
data16
jge
out
mov
popa
shlb
rcrl
and
iret
rcl
push
ja
mov
imul
movsb
xchg
or
shufps
sub
jl
push
aam
xor
mov
mov
pop
stos
mulb
std
inc
cmp
cwtl
rcrl
sub
rclb
pop
mov
add
into
adc
neg
jge
push
xchg
mov
add
cmc
add
add
push
push
popf
test
or
stos
lahf
sbb
cmpsl
movsl
sub
adcb
test
imul
mov
mov
jl
xor
lods
jecxz
mov
jno
mov
popa
or
mov
ds
decl
pop
jno
inc
and
cli
mov
sub
pop
push
cmp
out
pop
adc
mov
or
lret
sub
ljmp
adc
and
outsl
xor
xor
stos
enter
mov
in
call
add
push
out
fisubl
mov
ret
rorb
push
pop
or
mov
sbb
sbb
test
movsl
hlt
mov
repnz
sbb
xchg
fidivs
and
inc
adc
and
push
lahf
insl
lret
dec
ror
sbb
pop
add
add
dec
sub
or
and
cmc
add
add
and
adc
out
mov
pop
mov
inc
mov
je
sbb
dec
add
cmpsb
add
data16
loop
xchg
sub
xchg
shl
shl
pop
aas
rol
data16
push
sbb
push
dec
pushf
add
int3
xor
into
cmp
aam
mov
mov
cs
mov
add
imulb
inc
stos
data16
not
pop
push
dec
sbbl
ret
mov
mov
xor
cwtl
mov
and
jle
hlt
xchg
mov
test
sub
or
and
mov
cmc
xor
mov
cltd
dec
cmp
mov
sbb
jmp
dec
mov
xlat
mov
mov
into
ja
loope
xchg
lcall
out
int3
mov
inc
jnp
xor
dec
push
out
add
ret
ja
and
aaa
negl
xchg
dec
pop
cmc
add
cmc
add
add
iret
mov
stc
movsl
push
lock
scas
dec
adc
jmp
call
jne
jo
test
lods
ja
push
mov
jle
mov
sbb
es
mov
fs
push
inc
and
cwtl
mov
filds
adc
clc
int
and
xchg
gs
mov
jecxz
out
rcrl
idivl
mov
pop
cmp
or
push
out
fnstenv
adc
jne
push
push
push
cli
ljmp
mov
inc
arpl
or
cmp
push
fs
xchg
movsb
fcoml
mov
and
mov
cmp
int
filds
lods
jl
in
and
mov
push
cmp
adc
andl
andl
lahf
in
mov
cmp
add
add
mov
cmc
mov
in
or
testb
cmc
add
add
imul
and
cld
call
les
push
jmp
xchg
push
mov
push
adc
push
mov
lahf
pusha
mov
lea
cmc
jbe
sub
inc
clc
test
xor
lret
jmp
xor
jns
jae
fldcw
mov
dec
leave
sub
xchg
mov
pop
mov
loope
sarb
addr16
bound
and
les
xchg
sub
int
push
xchg
gs
dec
sbb
mov
cwtl
inc
mov
fbld
in
stos
int
daa
cmp
int
mov
insb
ret
pop
jo
adc
mov
add
daa
test
ds
dec
outsb
adc
movsl
lock
shll
or
pop
pop
leave
xchg
in
push
imulb
imul
add
add
jne
cmp
pop
js
subl
add
xor
push
cmp
into
out
nop
pusha
and
fldenv
push
popf
sar
or
push
repnz
lods
push
and
push
out
loope
cmpsb
out
dec
inc
jmp
aaa
and
cmpsl
lods
sub
dec
mov
cli
cmp
testb
push
push
test
leave
in
lods
shll
sbb
mov
xor
test
adc
pop
test
jge
out
inc
mov
shrl
add
lds
ss
xor
arpl
jnp
dec
push
sub
dec
inc
cli
sub
int
jp
or
mov
push
xchg
pop
pop
outsb
pop
hlt
es
loopne
xchg
and
mov
jp
mov
adc
push
sbbl
add
push
jl
lcall
mov
cmp
sbb
xchg
adcl
add
imulb
testb
push
aaa
clc
add
cmc
add
add
lret
mov
mov
sub
mov
cs
mov
jge
popl
clc
gs
mov
xchg
mov
mov
pop
cmp
lods
inc
sbb
sbb
add
sub
leave
mov
dec
aam
jmp
imul
movsbl
add
adc
xchg
lahf
and
icebp
lcall
icebp
jle
mov
jbe
mov
scas
xchg
xchg
popl
cmp
repnz
mov
aam
les
rolb
xchg
stos
shr
movsb
dec
push
push
push
scas
stos
imul
or
or
jno
dec
idivl
mov
jecxz
ret
add
pop
test
or
fdivl
xchg
sub
jp
add
add
imul
popa
jb
fsubrp
fidivl
sti
add
inc
jg
add
ret
add
xor
xchg
fwait
bound
pop
pop
push
or
add
cmc
add
add
enter
inc
movsb
push
stc
ret
xchg
bound
js
cltd
sbb
xlat
jnp
mov
cmp
lods
stos
shrl
xchg
sbb
mov
sti
movl
mov
cmc
pop
or
imul
add
mov
mov
das
or
add
mov
call
call
push
ljmp
bound
jl
mov
mov
jbe
aas
fwait
ljmp
inc
loope
fnstenv
call
push
test
adc
lods
sti
aad
dec
xchg
rcl
or
es
add
sub
repz
add
je
hlt
nop
lea
mov
insl
pop
mov
jns
mulb
divl
xchg
fucomi
insl
sti
sub
rorl
cmp
xchg
fiadds
sbb
fdivr
mov
adcb
mov
loope
dec
pop
adc
add
adc
int
in
idivl
pushl
lock
add
add
pop
bnd
js
jmp
in
lods
push
push
addb
or
dec
scas
repnz
jmp
call
cmc
imul
push
push
mov
imul
pusha
daa
inc
xchg
cwtl
fisubs
cli
addr16
lcall
xor
mov
jo
xchg
lcall
xchg
sub
mov
mov
int
repz
lret
add
mov
pusha
ljmp
mov
dec
push
idiv
ret
out
jle
lods
filds
in
mov
clc
lods
sbb
inc
leave
dec
push
mov
je
daa
int
insb
call
push
sbb
xchg
inc
pop
jl
or
aaa
cld
xchg
cwtl
movsb
aas
pop
mov
jne
push
dec
cmp
cwtl
fdivrs
imul
xlat
inc
xchg
sbb
jb
mov
mov
dec
in
icebp
in
mov
mov
pop
es
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
leave
mov
stos
xchg
sbb
mov
seto
mov
inc
push
enter
inc
cmp
pop
adc
xchg
cmp
into
push
jnp
stc
insb
imul
push
push
daa
and
fldenv
or
outsl
dec
lock
fdivp
aas
inc
and
int3
ds
sub
lret
fldcw
shlb
shlb
and
fsubrs
cmpsl
pop
cmp
push
adc
scas
add
dec
aam
sub
cwtl
jecxz
add
in
jp
jge
or
andl
bound
mov
mov
dec
js
rcr
out
out
jno
add
cmp
out
lret
pusha
test
mov
add
adc
sbb
mov
pop
fwait
ss
int
clc
jecxz
mov
add
mov
lcall
int3
mov
adc
cld
add
cmc
add
add
clc
cmp
cmp
mov
aaa
xor
xor
jns
push
jecxz
push
mov
les
push
hlt
push
jo
lcall
sub
lock
ss
jae
repz
mov
int
jnp
test
jmp
loop
jge
fdivs
xchg
sahf
mov
pop
ja
sbb
and
loop
inc
stc
adc
into
pop
js
andl
aam
call
add
xchg
add
add
jge
int
scas
adc
fistps
inc
push
mov
pop
xor
xchg
shll
fs
hlt
dec
jge
aad
mov
xchg
mov
push
jae
icebp
sbb
ja
pop
rclb
mov
gs
sub
add
add
jae
cltd
dec
mov
fs
add
cmc
add
add
movsl
mov
pop
inc
sub
stos
cwtl
imul
lds
jl
clc
loop
mov
sbbl
add
sbb
mov
lock
inc
pop
fsubs
stos
mov
xor
push
in
pusha
daa
xor
cli
push
adc
dec
xchg
ja
and
dec
loopne
jecxz
lock
js
fsub
loop
adc
fcompl
popf
lods
stos
mov
ret
pop
jbe
mov
sbb
ficoms
adc
dec
adc
lret
rcrb
aaa
imul
adc
push
outsb
mov
sbb
jbe
aas
aam
mov
dec
fs
sbb
dec
scas
scas
mov
sub
and
mov
pusha
push
je
negb
mov
xor
insb
mov
ret
fsub
sbb
jl
ljmp
xor
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
es
cmc
std
add
cmc
add
add
cmp
jmp
sub
jle
cmpsb
dec
bound
arpl
movsb
cmp
push
push
loop
pop
ljmp
mov
adc
negl
popa
adc
sbb
mov
int
or
popa
or
loopne
cmpsb
push
aad
movsl
popf
clc
mov
pop
mov
cmp
test
pop
add
cmpsl
test
outsb
xor
sarl
xor
push
ss
xor
and
subl
ret
mov
mov
inc
push
out
xor
jecxz
cmpsb
fdiv
roll
es
lock
jmp
xchg
inc
pop
mov
les
lock
inc
mov
cmpb
push
out
jno
inc
jb
mov
cmp
insb
add
lock
call
and
push
mov
and
jmp
cmp
movsl
enter
xor
scas
imul
add
add
test
jg
xor
or
push
dec
xchg
ljmp
add
pop
je
and
xchg
addr16
push
pop
popa
pop
adc
push
aad
cmp
lock
aaa
ljmp
lahf
adc
rorl
sbb
sti
addr16
cmpl
mov
test
cmp
or
mov
mov
dec
das
aaa
or
jb
js
xor
mov
add
adc
xor
das
push
or
or
inc
popf
push
sbb
insl
sub
mov
stos
and
pop
xchg
lret
or
fs
lret
sbb
xchg
xchg
fucomi
rorl
xor
sbb
mov
inc
jae
sub
std
dec
sbb
ljmp
pusha
insl
cmp
jg
repz
fwait
xchg
lods
mov
mulb
mov
jecxz
lods
hlt
scas
jmp
sbb
add
add
movsb
push
in
cmc
jne
pop
adc
jno
jg
add
cmc
add
add
push
bswap
adc
mov
mov
bound
movsl
mov
xchg
push
mov
mov
push
mov
mov
movsl
or
xor
sub
and
xor
or
mov
lds
je
pop
iret
repnz
sub
mov
mov
test
cltd
cmp
repnz
adc
ret
add
mov
fdivl
push
sti
jbe
arpl
fmuls
mov
ds
stc
sub
lods
movsb
xor
fcoml
in
jge
or
inc
pop
dec
out
sahf
push
mov
sahf
inc
sahf
movsl
mov
add
lods
sub
cli
jno
adcb
test
pop
sahf
call
push
popf
dec
adc
rcll
mov
gs
and
push
add
add
out
shlb
aas
out
fwait
aaa
call
enter
add
add
add
pop
js
stos
jmp
sar
scas
dec
jp
pop
nop
add
xor
push
fldcw
mov
icebp
xchg
cmpsb
repz
push
mov
inc
cmpl
mov
xchg
jp
mov
xor
sarb
daa
sbb
test
jmp
repnz
in
nop
mov
dec
sahf
dec
pusha
arpl
cltd
rcrb
xor
or
nop
jge
mov
mov
test
imul
aaa
jnp
adc
adc
into
or
ja
adc
xchg
pop
int
roll
es
xchg
jecxz
out
pop
add
xchg
mov
adc
ljmp
loopne
lcall
bound
inc
mov
cltd
cmp
lods
add
test
scas
mov
add
arpl
addb
in
fdiv
inc
shrb
add
add
mov
lcall
sbb
cmc
add
add
sbb
dec
test
push
push
dec
mov
lock
enter
loop
mov
xor
ljmp
push
push
sbb
ljmp
dec
cmp
dec
dec
push
mov
sub
push
clc
pop
mov
sub
push
aas
icebp
mov
data16
rcrb
pop
lea
push
jmp
in
imul
push
in
add
gs
pop
mov
int
mov
hlt
mov
inc
bound
cmp
mov
mov
xchg
jb
mov
ss
bnd
mov
dec
jg
movsb
cmc
cmpsb
cmp
jbe
lds
or
mov
ret
add
cmp
nop
ret
push
push
or
sbb
mov
xchg
and
xor
cmpsb
outsb
and
ja
fcomi
dec
jmp
mov
icebp
mov
add
dec
rol
lret
clc
rorb
cltd
jl
fisubrl
xor
cmc
add
add
leave
loope
jnp
pop
pop
lret
jg
mov
in
mov
mov
and
dec
in
popa
pop
pop
add
js
ja
push
outsb
push
fsubs
adc
addb
cmp
push
push
dec
cmpsl
jle
lret
adc
pop
jns
dec
xchg
sahf
add
test
and
mov
nop
cmp
cld
aaa
fsubs
int
or
fs
loop
adc
into
add
xchg
mov
stos
scas
cmp
jp
mov
sbb
or
or
jle
sbb
mov
repz
xor
or
and
repnz
rorl
pushf
pop
xchg
sbb
pushf
mov
mov
lea
rcll
mov
pop
inc
stos
sbb
lahf
jl
mov
into
dec
hlt
pop
negb
adc
mov
pop
jg
cmc
out
dec
lods
jne
push
cmp
add
add
std
aaa
mov
lret
jne
push
sbb
mov
add
cmc
add
add
jae
rcrb
adc
mov
pop
dec
mov
sub
adcl
add
lods
push
mov
insl
repz
cs
cmp
pop
xor
mov
inc
push
adc
jmp
push
and
gs
pop
inc
and
mov
or
push
add
cli
jb
or
sub
and
outsl
jmp
pop
aas
and
or
pop
pop
pop
push
mov
mov
out
orb
sbb
ret
fstl
pushf
and
gs
jmp
call
popf
clc
mov
mov
test
clc
xchg
adcl
mov
xchg
mov
xchg
mov
enter
testb
shrl
rcrl
jl
adc
test
sahf
xor
sbb
add
insl
aam
mov
fs
inc
sbb
jg
add
add
add
add
dec
sbb
add
outsl
push
inc
jno
or
xlat
lds
add
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
mov
sbb
mov
lahf
dec
pop
imul
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
