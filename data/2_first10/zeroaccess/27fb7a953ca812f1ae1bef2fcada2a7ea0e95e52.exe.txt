push
mov
sub
orl
mov
add
push
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
push
and
push
and
mov
subl
xor
xor
xor
mov
sub
or
mov
movl
add
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jb
mov
sbb
mov
and
mov
or
mov
mov
mov
adc
movl
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jb
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
pushl
push
call
cmpl
jb
mov
movzbl
and
mov
not
mov
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
push
orl
pop
sub
mov
mov
sbb
add
sub
movl
jmp
sbb
ja
imul
push
pusha
mov
aam
jp
jp
pop
jp
and
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
mov
and
mov
sub
xor
repz
test
js
es
sub
aam
and
lods
dec
stos
in
xchg
and
xor
adc
call
inc
mov
sub
cwtl
pop
inc
and
push
xchg
pop
aaa
fcomp
jmp
std
adc
xor
dec
fdivl
mov
sarb
jae
mov
arpl
std
and
das
test
push
mov
adc
pop
sub
std
cmp
adc
xor
inc
clc
push
fwait
shl
inc
mov
mov
dec
enter
insb
adc
insl
dec
mov
sarb
inc
push
xor
mov
mov
push
sbb
shrl
sub
js
push
xchg
aaa
daa
dec
sbb
test
daa
stos
divl
jg
adc
inc
data16
sub
push
leave
cmp
and
push
sub
shrb
dec
aad
cmpsl
mov
push
sub
hlt
bound
push
aaa
fiaddl
das
and
sub
test
adc
stc
cld
mov
push
xchg
lods
inc
or
jns
pusha
ds
sub
push
fisubrs
aas
test
cmp
icebp
and
jno
push
mov
or
or
dec
and
xor
xchg
dec
in
sbb
or
sbb
pop
mov
sbb
and
lock
call
adc
outsb
push
inc
push
ja
fwait
jp
ret
push
xchg
inc
pop
int
mov
mov
leave
mov
rclb
mov
cmp
adc
xor
pop
lods
subb
in
jne
shlb
pop
mov
xor
jno
jge
pop
iret
fs
sub
rcrl
mov
lret
test
jp
or
inc
or
ror
test
cs
sbb
mov
inc
mov
sti
push
push
in
and
imul
mov
scas
ret
out
aaa
int3
sbb
imul
mov
je
popl
push
sub
mov
into
popf
sub
mov
pop
pop
cmc
cwtl
inc
rcrl
cmpsb
or
ja
mov
insl
sbb
fs
push
mov
popa
in
xchg
in
cwtl
bound
sbb
mov
inc
sub
aaa
cmp
ret
jmp
mov
push
sbb
fcmovne
sarl
xor
xlat
iret
or
mov
jmp
mov
repz
mov
mov
mov
sbb
shlb
jp
scas
jg
fmull
dec
add
xchg
gs
push
cwtl
and
in
jmp
ret
mov
inc
dec
in
jp
or
lcall
sbb
mov
shll
shl
popf
mov
cld
popf
xor
pop
inc
push
dec
mov
cwtl
push
mov
or
and
pop
mov
lock
pop
in
imul
sbbl
cmpsl
or
data16
aam
ficoml
lcall
add
sbb
xlat
cmc
lock
jae
adc
outsl
outsb
scas
sub
enter
shrb
push
in
inc
int3
outsl
inc
ftst
push
mov
push
mov
ja
xchg
out
rcll
adc
mov
or
dec
bound
aaa
test
imul
pop
dec
out
shl
je
dec
jecxz
xorl
sub
xor
cmpsl
pcmpeqb
not
gs
add
mov
jae
jne
and
inc
jmp
sub
mov
ja
stos
or
iret
inc
repz
jg
sub
js
out
loop
pop
stos
nop
cmpb
and
push
in
cltd
add
pop
lahf
sbb
pop
jg
pop
fiaddl
popf
or
imul
sbb
pop
loopne
dec
push
nop
jo
and
movsl
imul
scas
jb
sub
insl
push
jl
pop
test
clc
push
push
adc
mov
test
outsb
test
cld
lret
outsl
add
sbb
jle
pop
aam
js
pop
push
test
dec
mov
out
sub
inc
cli
enter
movsl
and
orl
pop
dec
mov
jns
pop
aam
or
iret
sub
sbb
inc
xchg
cltd
ficoml
push
aaa
testl
aaa
dec
addr16
jns
cmc
loopne
aam
cs
cs
push
sbbb
movq
sbb
test
popf
bound
cli
mov
ljmp
das
lds
loope
movsb
dec
jl
leave
and
xor
xor
jnp
jno
mov
inc
sbb
mov
icebp
and
outsl
les
hlt
mov
shrl
das
inc
sbb
popf
jb
rcrb
les
hlt
imul
add
mov
mov
aad
pop
mov
ja
xorl
mov
ret
aad
clc
cmp
fnsave
sub
xor
das
push
aas
mov
adc
jecxz
mov
addr16
sti
ud2
jg
xlat
cmp
sub
scas
loope
or
sub
pop
dec
mov
pop
push
adc
mov
mov
shl
in
cmp
and
mov
and
test
adc
negb
cmc
scas
adcb
jl
lcall
outsl
mov
fisttps
jge
sub
adc
push
popa
mov
cmc
daa
in
add
aas
cli
int3
and
mov
mov
test
imul
push
jb
insb
sbb
mov
add
fsub
adc
test
out
loope
jno
adc
call
inc
mov
pop
push
xchg
test
fbld
add
bound
pop
sbb
sbb
das
ror
sub
out
jnp,pt
push
xor
pop
sbb
mov
jg
sbb
xlat
roll
popa
sbb
ljmp
jecxz
push
cmp
or
add
pop
jp
pop
pop
stos
dec
xor
mov
jle
adc
lret
out
lahf
jl
jmp
fwait
cmc
sbb
in
xorb
sbb
hlt
add
icebp
mov
arpl
jns
test
jge
and
shl
mov
jmp
lfs
adc
sub
dec
mov
add
stos
ljmp
lcall
inc
sub
cld
push
xor
cmp
adc
imul
mov
sti
inc
shl
pop
jb
mov
out
in
lret
outsb
not
stc
test
ficoml
lret
sub
loope
stc
mov
pop
pop
xchg
pop
scas
mov
fs
inc
ss
inc
in
movsl
test
fsubr
ss
mov
aam
lahf
gs
and
push
xchg
mov
cmp
xchg
sub
adc
fbld
cmp
int3
pop
int
andb
xchg
jg
push
scas
pop
sbb
in
xor
xchg
leave
lock
pusha
dec
unpckhps
pop
out
cwtl
or
or
faddp
out
sti
dec
add
pop
jae
test
dec
sub
adcl
fcmovb
je
rcl
je
es
mov
fadds
mov
scas
imul
fs
push
scas
scas
shrb
xor
jmp
mov
dec
and
mov
lret
ror
mov
daa
arpl
stos
and
rcrl
push
sbb
ds
add
or
mov
push
add
dec
popa
pusha
aad
mov
stc
mov
repz
out
stos
gs
cmpsb
inc
cld
pop
add
or
rep
cli
inc
sub
in
imul
inc
loop
lahf
cmp
test
xlat
mov
dec
popa
andl
mov
or
xchg
sarb
cs
pop
jl
sbb
mov
stos
push
fs
push
pop
sbb
jge
pop
pop
and
lds
loope
cmpsl
cmpsb
mov
cmp
push
xchg
mov
inc
mov
int
mov
ss
pop
out
jo
xlat
jle
jae
adcl
scas
add
cltd
mov
inc
or
cmp
mov
pop
cmc
pop
jmp
jbe
jb
fldl
mov
sbb
shlb
cli
cmp
aaa
sub
add
loop
xchg
cmp
les
push
cltd
call
adc
es
pop
mov
push
rol
lahf
icebp
test
orb
aaa
cwtl
jno
jne
inc
cmp
fstps
aad
out
in
pop
enter
and
push
fidivrs
jmp
in
xlat
push
std
movsl
xor
cwtl
or
lret
shl
dec
and
xchg
cs
mov
and
pop
cmp
and
adc
orb
inc
aaa
scas
pop
imul
sbb
jle
jge
xchg
insb
mov
repnz
fadd
dec
jge
adc
lods
mov
fnsave
ret
loope
xchg
inc
dec
mov
push
jnp
xchg
nop
pop
and
bound
stos
xor
popa
sahf
push
add
mov
push
outsl
pop
jmp
test
subb
test
cli
in
or
push
sbb
sbb
fmull
xor
cmpsb
rcll
push
iret
gs
addb
cmp
dec
mov
push
jb
jbe
enter
imul
sub
cltd
divb
cs
fidivrs
mov
or
xchg
pop
arpl
inc
inc
sar
mov
shlb
adc
cmp
pop
pop
fwait
test
lods
pushf
loope
adc
sbb
inc
and
sbb
cmpl
add
mov
int
repnz
pop
cmp
xor
lods
movsl
jl
jne
daa
push
pop
mov
mov
test
inc
mov
bnd
mov
mov
mov
iret
jno
jg
inc
lds
fiadds
jle
icebp
movsl
push
pop
xor
imul
inc
je
outsl
cld
fsubrp
cmpl
or
gs
aas
or
xor
dec
jle
addr16
xchg
lods
lods
aas
mov
cmp
push
repz
xchg
cmp
push
stc
mov
or
inc
adc
fimuls
scas
mov
mov
xchg
mov
data16
cltd
popa
mov
pop
pushl
scas
and
or
pop
pop
jb
push
lahf
shl
ljmp
shll
cmc
mov
dec
cmp
pop
fbld
add
cli
dec
fidivrs
mov
cli
filds
hlt
cmpsb
aam
xor
mov
adc
nop
les
sahf
pop
mov
jmp
sbb
jmp
mov
pop
jbe
mov
mov
cmp
enter
call
mov
and
and
pop
inc
cs
mov
add
aas
mov
cwtl
mov
push
mov
pop
icebp
mov
mov
push
dec
ret
mov
in
loop
add
add
push
xorl
mov
leave
lcall
and
sti
ret
jg
notb
adc
fldenv
stc
shlb
insl
scas
pop
xchg
in
arpl
lock
and
int
mov
cmpl
pop
xlat
inc
icebp
inc
sbb
lret
ret
lcall
lock
and
fildl
imul
push
xor
test
mov
adc
sub
mov
sbb
adc
xchg
fucomip
ficoms
jae
stos
xor
call
in
cmpsb
inc
inc
fwait
rol
add
mov
mov
mov
and
mov
test
pop
jecxz
xchg
out
xorb
fidivrl
xlat
fs
sbb
add
pop
cmp
cmp
shlb
ds
into
insb
loop
mov
push
loop
jg
pusha
sub
mov
lods
inc
mov
cmp
lods
andnps
xchg
pop
lret
jnp
enter
into
fwait
cld
xor
sub
xchg
dec
nop
jne
inc
pop
jo
pop
push
es
sbb
imull
test
xchg
cltd
dec
adc
jle
pop
jae
or
js
daa
mov
enter
cmp
cmp
sbb
das
testl
scas
loopne
jp
mov
fs
out
stos
or
pop
shlb
dec
icebp
testb
negb
mov
test
test
xchg
mov
mov
mov
popa
bound
xchg
cmpsb
movsl
adc
call
loop
imul
popf
jb
push
and
arpl
mov
sub
sub
push
sahf
xchg
xchg
or
sub
or
in
mov
pop
rcrb
sahf
sub
xlat
sbb
jg
adc
test
lret
sti
out
dec
int3
insl
imul
push
cltd
adc
push
test
ljmp
movsb
mov
cld
mov
cmpsb
mov
out
sbb
cltd
add
push
outsl
add
ds
movsl
cmp
orl
mulb
xchg
push
fisubrl
mov
leave
add
push
cmp
and
mov
jp
mov
outsl
pop
pushf
cli
adc
or
xor
xor
les
mov
mov
push
sbb
pop
addr16
imulb
dec
adc
fistpll
jmp
mov
iret
out
clc
jbe
testl
lods
sub
add
push
incb
dec
mov
add
lock
leave
mov
shll
mov
adc
adc
and
scas
mov
mov
fsubs
ss
or
arpl
bnd
imul
pop
shlb
test
std
test
bound
int
je
sti
aam
xor
adc
mov
enter
pop
mov
das
cmpsb
test
js
pop
roll
mull
outsl
mov
xchg
test
into
bound
idivl
in
adc
add
gs
push
inc
lret
ljmp
sub
mov
cmc
fwait
pop
jno
dec
push
fwait
stos
notb
lcall
jbe
jmp
js
xor
jge
dec
mov
inc
xor
sti
push
jmp
xor
pop
addr16
rolb
cmp
push
lock
add
xchg
push
arpl
aas
adc
imul
movsb
iret
idivl
bound
ja
out
push
in
sub
repnz
aaa
repnz
fldenv
jb
data16
loopne
push
ds
xchg
fwait
popf
ds
cmp
cmp
cmp
lds
pop
sbb
in
pop
push
outsb
cmc
jle
bnd
lcall
into
xor
icebp
nop
scas
cmova
test
inc
jo
shll
in
pop
iret
pop
jo
out
inc
cmc
mov
xchg
push
scas
pop
or
mov
lahf
out
xor
mov
mov
jbe
lret
pop
mov
mov
in
std
hlt
out
sbb
rol
outsb
cmpsb
addr16
push
shl
arpl
jl
insl
xchg
xor
xor
clc
outsb
aaa
cmp
lea
pusha
out
in
daa
test
and
cmp
mov
dec
cmp
inc
and
dec
into
mov
ror
fsubrs
cmp
sub
mov
cmp
cmc
cli
pop
inc
sti
xor
pushf
adc
data16
scas
fstpt
mov
outsb
out
movntps
push
hlt
fisubrs
cltd
and
mov
dec
lock
mulb
cli
jmp
in
sarl
jnp
jb
ss
jbe
sarl
inc
lret
icebp
xor
repz
cmp
dec
dec
push
and
and
pushf
or
sub
fbld
push
outsl
pop
adc
loope
roll
lods
and
mov
out
ja
add
mov
add
xor
fdivrp
jge
cmp
iret
imulb
shrl
into
fstpl
lds
dec
pop
outsb
imul
fdivrp
lret
cmp
pop
pop
stos
cmpsl
mov
jbe
icebp
inc
sub
inc
int3
rcll
push
sbb
movsl
insb
add
xor
adc
fdiv
mov
add
mov
jmp
and
mov
int
ret
inc
mov
adc
ja
push
icebp
fldcw
out
or
pop
adc
jmp
cmp
push
dec
je
add
mov
out
stos
and
imul
xorb
or
roll
cltd
rcl
int
mov
std
and
jl
jmp
insl
movsl
out
sbb
pop
imull
jg
insb
push
fwait
ds
sbb
je
mov
dec
test
and
jb
lahf
jo
mov
sysret
loopne
pop
sub
mov
imul
loop
xchg
push
inc
jae
inc
das
pop
fsubrl
cmpsb
adc
stc
mov
adc
cmp
jb
rcrb
ret
rorl
shrl
pop
jno
lahf
xor
or
mov
add
fmull
push
movsb
mov
lods
xchg
scas
sub
arpl
cmp
rcrb
dec
fwait
test
popf
stc
fmull
fmuls
sbb
fidivs
cmpsb
mov
jg
add
cltd
aaa
pop
mov
pushf
cmp
push
add
ret
imul
xor
stos
test
jp
xlat
push
cli
xchg
or
adc
fcmovb
sbb
pop
imul
xor
out
pop
cmpsb
insl
push
mov
leave
scas
xchg
fcmovbe
push
negl
cs
cmc
dec
fwait
push
pop
dec
dec
mov
pop
shl
inc
testb
dec
or
divl
dec
je
aad
repnz
ret
push
jge
or
nop
cmp
addb
addl
push
sbb
mov
test
leave
jecxz
ljmp
xor
lret
push
add
sub
nop
stos
cwtl
sub
and
adc
scas
cmp
rorl
mov
mov
mov
add
jo
inc
in
jmp
inc
cmpsl
inc
dec
divb
dec
out
hlt
int
jnp
call
push
jns
outsb
stos
lods
mov
lret
xor
arpl
loop
push
pop
das
push
add
mov
pop
sbb
aad
jno
fwait
jno
lcall
push
dec
outsl
cmpsl
mov
xchg
and
mov
ret
push
imul
mov
sub
push
cld
pop
mov
and
mov
lock
add
subl
or
mov
add
int3
mov
popf
jmp
das
fmuls
stc
stc
inc
bound
add
imul
jmp
fcoms
test
pop
xchg
imul
inc
cmp
cld
inc
mov
icebp
jl
shr
dec
or
push
fldt
add
or
pop
pop
jmp
mov
shlb
stos
fldenv
mov
insl
lods
jns
jecxz
xchg
cmp
push
mov
jae
ret
adc
push
mov
push
push
sub
dec
enter
arpl
imul
xor
sbb
jns
jle
xchg
jmp
repnz
icebp
sub
or
mov
jmp
inc
xor
add
rclb
stos
mov
xchg
xor
lock
add
movsb
sbbl
jo
cwtl
xor
adc
sbb
iret
mov
ror
dec
sbb
mov
mov
push
mov
mov
and
pop
pop
bnd
into
sbb
hlt
fnstsw
inc
movsl
jbe
jl
insl
pop
push
mov
outsb
cmp
outsl
repz
fldt
dec
push
call
out
jecxz
push
icebp
lds
push
xchg
sbb
fisttps
mov
aam
mov
dec
cwtl
pop
add
test
and
jecxz
imul
sub
mov
mov
inc
fisubrl
inc
mov
fsubrs
pusha
mov
popf
bsr
mov
repz
data16
daa
lret
xchg
rcll
in
int
cmpsb
jns
test
enter
push
mov
roll
adc
std
push
mov
xchg
pop
mov
pop
sahf
call
sti
or
call
mov
adc
mov
int3
push
fcmovu
mov
cwtl
and
jb
in
jmp
push
cmpsl
sub
inc
scas
sarb
fwait
mov
mov
rorb
ss
xchg
jns
jno
dec
mov
out
pop
popa
cmp
outsl
roll
adc
fdivs
cmpsl
imul
aam
mov
pop
mov
cld
cwtl
mov
xor
cmc
push
adc
jo
leave
push
aaa
xor
lret
dec
mov
cltd
or
dec
or
rorb
sub
sub
cmp
cltd
cltd
jb
adc
dec
dec
xchg
mov
xchg
test
jnp
popa
mov
and
call
jbe,pn
frstor
repz
fldl2t
xchg
in
mov
jecxz
rcrl
sbb
push
out
dec
and
dec
ret
xchg
int
cltd
add
dec
push
mov
jno
mov
mov
pop
icebp
gs
or
pop
push
loop
clc
jns
jo
jle
sahf
popf
mov
cltd
jbe
sbb
loopne
add
mov
iret
adc
jne
int3
lods
inc
lods
insb
inc
inc
add
cs
pop
repnz
dec
pusha
mov
je
jbe
cwtl
movsl
adc
fisubs
push
out
xchg
sti
and
pop
test
mov
adc
jmp
stos
push
xchg
dec
popa
ljmp
outsl
push
adc
lret
outsl
aaa
test
int3
cmp
cmpsb
shlb
ffreep
test
xchg
sub
dec
and
aam
push
or
or
cmpl
dec
jnp
xchg
es
mov
stc
jecxz
jns
xchg
pop
mov
mov
inc
add
lods
add
in
sub
xchg
mov
popa
shlb
jle
cmp
inc
xchg
test
xchg
mov
jno
push
cmp
inc
jecxz
out
xor
loop
imul
xchg
fs
cmp
sub
push
fisubs
leave
cmp
data16
daa
fwait
out
dec
xchg
nop
cmpsb
sbb
and
mov
cmp
mov
fscale
dec
lahf
lahf
push
lock
cmp
out
xchg
fdivrl
cs
mov
inc
or
jnp
push
mov
fwait
scas
pop
sti
mov
out
mov
out
arpl
das
imul
jg
fcoml
pop
xor
in
out
cmp
pop
dec
ret
and
aas
test
push
adc
push
jnp
mov
out
lret
test
movsl
add
mov
fldl
data16
dec
mov
xchg
fisubl
push
and
fsts
hlt
repz
inc
inc
cmc
add
sbb
lock
lods
jmp
enter
jns
scas
popa
sub
imul
mov
dec
stc
rclb
leave
imul
daa
aaa
jmp
cld
jo
jbe
orb
aam
mov
jo
pop
sbb
outsl
push
jle
jne
dec
dec
subb
cmp
scas
mov
popf
sti
imulb
aam
fadd
enterw
in
push
test
push
fiaddl
mov
insb
rcll
inc
push
aaa
pop
pop
out
scas
jns
sub
cmpsl
mov
test
and
ret
sahf
or
push
lahf
push
sti
mov
and
and
rcr
and
enter
enter
xchg
sti
push
outsl
xor
call
sbb
inc
ret
cmp
bound
test
fdivrl
out
aas
mov
pop
movsb
rolb
adcb
fimull
fucomi
sbb
inc
dec
cwtl
cmp
push
mov
dec
pushf
mov
repz
inc
stos
ds
movsb
pop
jnp
das
mov
mov
mov
inc
push
bound
sahf
sub
outsl
mov
cmp
test
adc
lds
push
inc
sbb
xlat
aad
inc
cmp
push
shl
rolb
fcoml
xor
xchg
or
in
imul
lds
aad
xor
ret
stos
pop
jmp
cmc
call
icebp
cmc
fdivrl
add
jecxz
inc
add
push
mov
add
sbb
rolb
mov
inc
repz
cs
sbb
mov
pop
jno
xchg
sahf
test
lea
mov
ja
inc
aam
or
fisubs
loopne
push
xchg
pushf
rolb
std
lods
xor
icebp
push
mov
stos
scas
dec
or
test
mov
call
popa
sub
or
sbb
std
sahf
pop
sbb
stos
adc
mov
into
movsl
adc
pop
in
stos
jbe
bound
mov
mov
xor
adc
xor
loop
push
add
nop
sbb
inc
les
aas
and
pop
mov
insb
rorl
xor
mov
dec
sbb
dec
cwtl
int
pop
lcall
xchg
dec
std
jae
out
cmp
inc
sbb
pop
jmp
sbb
sbb
xor
in
pushl
add
inc
jae
fsubp
pop
xor
out
sub
fwait
jnp
mov
insl
in
cltd
jecxz
outsb
pop
lods
inc
mov
mov
loopne
jecxz
enter
or
lock
aas
sub
ja
mov
rcr
sub
subl
xor
and
pop
xchg
aaa
orl
add
ret
xor
jno
push
int
fiaddl
jle
test
push
lods
lea
xor
mov
mov
or
scas
insl
push
xchg
or
in
push
js
sbb
adc
lea
jl
pop
inc
add
add
roll
sarl
loopne
popf
sti
cltd
add
sub
dec
jae
ret
mov
mov
ja
mov
adcl
push
jle
scas
fildll
repnz
dec
mov
jns
pop
mov
inc
lods
inc
leave
sub
xchg
push
ljmp
out
pop
adc
imulb
mov
iret
mov
dec
mov
ret
mov
imul
fnstsw
out
orb
aas
cli
xchg
stos
mov
push
loopne
jecxz
inc
into
cmpsb
fists
or
in
mull
pushf
mov
push
test
mov
aas
fnstenv
cmpsb
int
push
or
sbb
in
out
shrb
mov
stos
testl
push
in
cmpsl
out
imul
add
test
rcrl
dec
icebp
test
repz
rolb
or
cld
push
jb
mov
inc
push
mov
lods
mov
pusha
jb
insb
mov
cmpsb
fcompl
ja
icebp
sub
cli
shll
ror
xor
push
cmp
sbb
fbstp
out
arpl
popa
and
inc
in
and
js
xchg
mov
outsb
cmpsl
jns
dec
sub
andb
xchg
mov
scas
pop
mov
sbbl
mov
push
lahf
push
test
loope
mov
jp
mov
xor
mov
cmp
in
mov
in
es
mov
int3
pop
and
jmp
and
hlt
pop
mov
test
push
ror
pop
lret
dec
faddl
hlt
xchg
sub
aad
jg
push
push
add
adc
test
lret
push
pop
add
outsb
sbb
pushf
add
leave
inc
lock
fdivl
iret
call
cld
mov
adc
scas
pop
cld
cmpsb
dec
push
imul
ss
jb
imul
and
shlb
add
sbb
test
aaa
imul
adcl
aad
iret
fsubs
aas
js
sbb
push
add
sbb
aas
mov
adc
jg
or
fwait
loope
sbb
nop
loopne
inc
scas
xor
and
hlt
enter
test
shlb
add
or
jo
daa
pop
jl
lret
jno
lret
jne
fnstcw
cwtl
cmp
push
into
add
mov
rcll
addr16
in
mov
lret
das
shrl
and
cmpl
jmp
scas
aad
imul
sbb
jbe
dec
enter
sbb
dec
inc
int
mov
jns
push
aad
pusha
lods
dec
cld
and
pop
lds
addr16
mov
fadds
add
mov
enter
xor
xchg
add
pushf
or
jmp
sarl
add
sub
push
in
pop
push
push
cmp
and
mull
dec
and
mov
xchg
pop
mov
divb
or
je
sbb
test
popa
insb
ja
out
mov
clc
push
call
fnstcw
sbb
sub
movsb
cli
pop
aas
pop
mov
mov
mov
mov
test
in
jecxz
fstpl
leave
cwtl
fiaddl
loopne
sbb
sbb
stos
adc
pop
les
shll
mov
bound
cmpsb
jae
sbbb
lcall
in
push
or
cmpsl
push
aad
jg
sub
popa
xor
sbb
fisttps
or
cmp
mov
movsb
ret
fwait
test
push
test
adc
mov
mov
jl
adc
neg
mov
cmp
cmpsb
outsb
ficoms
call
adc
adc
cmp
mov
and
cmp
fsubrl
sub
cmp
icebp
xor
or
push
lods
lea
lcall
mov
cmp
hlt
mov
lret
das
push
cmpsb
push
mov
mov
movsb
imul
pop
out
sti
jmp
aaa
jmp
cmpsb
cmp
cmpsl
sub
mov
ljmp
outsb
decb
xchg
inc
mov
rdpmc
or
cmp
push
mov
and
testb
push
lcall
in
lods
mov
rcr
sub
xor
cli
cmp
fwait
jg
pop
jmp
sub
aad
add
aad
mov
cmp
and
pop
mov
dec
mov
shlb
mov
inc
jnp
ja
dec
dec
xchg
jp
cmp
cmpsl
inc
push
sub
in
jno
jmp
cmp
mov
fs
dec
ret
mov
push
aas
jmp
inc
mov
adc
add
fdivr
in
cmp
cmp
and
outsb
lods
outsl
mov
aam
mov
mov
inc
xchg
pop
rcrl
iret
jno
inc
out
add
xor
call
mov
and
inc
add
add
mov
mov
adc
mov
sbbl
mov
mov
subl
xor
subl
add
mov
lea
mov
mov
xor
sbbl
add
sbbl
mov
xorl
lea
push
sub
mov
orl
xor
xorl
add
xorl
push
xor
or
adc
mov
push
addl
pushl
subl
call
and
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movl
mov
mov
mov
sbb
mov
lea
or
mov
movzwl
sub
mov
movl
addl
mov
xor
mov
sub
mov
mov
movl
mov
mov
cmp
je
mov
xor
mov
xor
addl
xor
addl
lea
mov
decl
xor
subl
div
dec
mov
add
mov
xor
adcl
xor
addl
sub
movl
cmp
jne
addl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
adc
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
sbbl
add
mov
cmp
jae
and
lea
xor
jmp
sub
std
sbb
cltd
cmpsb
cld
ss
sub
pop
jp
cmp
jp
mov
or
flds
and
dec
push
inc
mov
and
test
fimuls
adc
shll
mov
pop
enter
mov
push
and
test
mov
jnp
in
add
mov
in
add
test
sub
ljmp
lret
xchg
and
xchg
cmp
mov
in
sbb
push
or
movsl
jg
ds
gs
xchg
mov
cs
mov
push
addr16
jb,pn
aad
popl
push
push
push
and
out
loop
dec
mov
add
mov
pop
jnp
push
mov
in
mov
jo
dec
xchg
loope
pop
daa
aad
xchg
sahf
push
cmp
jmp
rolb
pop
xchg
push
imul
gs
imul
inc
es
push
lock
loop
aad
into
xor
insb
jle
sbb
xchg
xchg
and
and
mov
jge
lods
cwtl
out
mov
sbb
vpsubw
sti
push
leave
xchg
jg
dec
push
lock
xchg
jmp
outsl
mov
bound
stc
mov
push
mov
outsl
aas
stos
or
int
ds
adc
dec
dec
and
test
nop
lret
out
mov
xchg
cmpsl
shrl
loope
stos
imul
out
push
call
sbb
mov
mov
jns
sub
pusha
into
repz
xor
xor
imul
xor
mov
mov
stc
pushf
enter
cmp
test
jg
jb
jnp
push
adc
mov
nop
and
call
out
insl
sub
ss
cmp
es
or
in
sahf
dec
cmp
inc
ficomps
mov
sub
inc
fs
sbb
sub
arpl
adc
dec
notl
ljmp
loopne
mov
push
ss
push
xchg
or
xor
xor
stos
ljmp
lcall
mov
or
mov
js
jp
mov
fildl
and
popa
push
fisubrs
push
pop
enter
sti
and
jl
and
mov
sub
mov
add
add
out
in
or
add
sub
mov
sub
jae
cmpsl
fdivs
cmp
in
cli
test
pop
jno
subl
negl
rorb
jecxz
sub
test
dec
adc
shlb
push
xor
adc
lea
push
fistps
out
jae
pop
in
sbb
fs
sub
pop
pushl
clc
cmp
scas
xchg
push
mov
push
dec
dec
jns
jo
xchg
cmp
sbb
sysexit
push
divl
scas
xchg
fcomps
mov
dec
sub
fcmovnb
orb
rorb
xchg
mov
repnz
sbb
cmp
ret
movsl
outsl
into
jo
test
dec
mov
and
sub
or
in
inc
push
mov
lret
dec
mov
push
imul
sbb
adc
xor
repz
jb
aad
daa
pusha
std
cwtl
sub
xor
mov
mov
ret
into
and
jne
aaa
push
or
sbb
push
in
cmpsl
imulb
es
jb
popa
aad
sbb
in
outsl
jmp
in
jb
xor
ja
aad
cmp
push
adc
test
popa
mov
into
dec
pop
ret
loope,pt
pop
int3
mov
mov
pop
cmp
inc
out
in
mov
dec
popf
jbe
inc
mov
xor
inc
lea
sti
les
cmp
push
dec
fisubrl
scas
jno
jle
fwait
mov
dec
push
push
add
rclb
nop
leave
add
dec
adcb
push
mov
xor
das
cmp
hlt
push
mov
mov
imul
and
cli
mov
mov
cmp
jl
push
test
xor
jns
inc
jns
les
sub
test
sub
jmp
mov
scas
add
rcrl
shrl
cmp
xor
adc
mov
test
fldenv
ds
mov
insb
icebp
add
movsb
mov
fidivs
xchg
imul
cwtl
insl
pop
sahf
pop
push
add
and
pusha
bound
fistps
dec
xchg
test
loopne
jae
lcall
mov
je
das
pop
and
ljmp
punpckhdq
out
xor
inc
xchg
gs
movsb
js
sti
sub
loopne
scas
jbe
fs
and
icebp
leave
cmp
cmp
and
lcall
xlat
cmp
adcl
mov
dec
mov
incl
xor
and
call
aas
push
pop
int
inc
xchg
inc
insl
pop
lret
push
outsb
nop
push
std
lock
push
in
pop
mov
or
lcall
add
jge
adc
rclb
dec
or
push
jmp
adc
mov
push
sbb
andl
lea
test
clc
push
btr
add
mov
repz
test
inc
fwait
enter
mov
adc
sbb
fcomp
sbb
into
in
mov
test
fiadds
mov
add
adc
sub
push
es
mov
sbb
inc
popf
inc
push
shlb
dec
or
test
mov
leave
jp
lret
sahf
sti
jl
dec
add
lcall
push
pop
cltd
popf
mov
fmuls
pop
das
mov
push
cmp
fwait
lret
mov
dec
jle
testl
pop
imul
lds
popf
sub
sub
cmp
scas
repnz
test
arpl
pusha
leave
push
add
test
sub
lret
or
or
stos
ljmp
into
add
imul
jg
loopne
push
ljmp
out
fcmove
fwait
insb
dec
sarl
decb
mov
das
pop
insb
xor
cmpsb
push
movsb
and
cs
rcl
adc
xor
in
push
mov
dec
in
popa
cmp
pop
mov
loopne
cmpl
test
add
stos
les
push
sub
mov
js
sub
inc
stos
fiadds
arpl
dec
dec
cmp
jl
test
xor
pop
and
push
in
inc
lea
dec
jge
pusha
and
inc
add
or
shr
xchg
fiaddl
mov
xchg
hlt
insl
movsl
add
out
mov
pop
and
repz
push
cmpb
loope
cli
je
repnz
inc
jp
scas
sbb
call
popf
mov
mov
or
xchg
xchg
dec
aas
repnz
out
cltd
sub
adc
mov
cmp
gs
popfw
out
mov
pushl
cmp
push
add
popf
push
lds
push
mov
aam
inc
loope
movsb
push
cmpb
xlat
push
mov
orb
mov
push
into
pop
cmp
cmp
mov
jl
push
sahf
popa
ljmp
test
in
test
loopne
jbe
stos
insl
jecxz
xor
popf
mov
pop
xor
cmc
rcpps
adc
int3
ja
xor
ja
icebp
and
sbb
mov
ja
pop
sarl
and
shlb
pop
cwtl
out
lds
cmp
in
negb
inc
addl
fcmovnbe
pop
shlb
movsb
inc
fiadds
mov
mov
mov
mov
arpl
add
sbb
movsb
inc
inc
subl
js
outsl
adc
push
cs
push
jno
xchg
hlt
jne
call
mov
mov
jecxz
enter
mov
cmpsb
les
mov
adc
sub
pushf
ret
out
int
add
adc
repnz
movsb
mov
mov
sbb
outsb
mov
orl
inc
ffreep
lock
fsubl
fildl
pop
ljmp
sahf
jecxz
xor
inc
push
and
adc
mull
fcoml
cwtl
xor
add
mov
xchg
or
jno
lcall
xor
clc
test
in
mov
lods
scas
ds
jg
cmpsl
dec
daa
adc
mov
cld
xor
ja
ss
les
jo
insb
dec
xor
cmp
repnz
in
inc
jnp
lods
xchg
mov
mov
enter
add
jmp
std
test
daa
or
xor
into
rcll
pop
hlt
iret
add
out
push
push
into
adc
sbb
pushf
mov
xor
inc
ljmp
pop
int3
mov
mov
cmpsl
fcmovne
sbb
cmp
les
rcl
sub
mov
dec
gs
dec
outsl
jl
xchg
nop
fidivs
mov
or
shrl
adc
and
das
in
or
pop
sbb
mov
jo
jne
mov
das
add
mov
xchg
test
mov
and
pop
cmp
xchg
pop
scas
xchg
add
mov
push
push
mov
fwait
xor
setge
add
push
or
cmp
in
dec
mov
jmp
mov
sub
out
lock
negl
sbb
push
mov
cmp
mov
sbb
xorb
enter
fnstenv
jae
and
cwtl
or
adc
inc
adcb
cmp
pop
mov
faddp
aam
jno
sahf
mov
mov
aas
xchg
adc
pop
cmpl
sub
daa
in
leave
mov
pusha
dec
pop
movsb
mov
popf
cld
xchg
sub
scas
rol
jp
das
jge
mov
rcr
sub
push
pop
mov
xchg
fldenv
pop
or
mov
sahf
js
cli
pop
mov
sbb
sub
scas
mov
maskmovq
negl
add
xchg
sub
adc
dec
les
das
testl
sub
loop
mov
test
xor
sub
mov
rorb
loope
cs
lret
cmp
pop
mov
idiv
lret
daa
into
shlb
pop
mov
inc
cmp
pop
ret
and
lahf
sub
sbb
fsubl
shl
sbb
test
sub
or
je
hlt
mov
xchg
les
lods
push
clc
movsb
inc
add
dec
sub
fdivrl
shlb
jmp
in
movsl
cmp
mov
sub
ljmp
mov
xchg
pop
add
adc
sbb
mov
nopl
stc
repz
mov
xchg
push
pop
mov
cltd
scas
leave
sub
inc
lret
jl
mov
pop
mov
arpl
mov
sub
inc
lods
in
cmp
cmp
pop
cmp
lahf
cs
cmpsl
xor
shlb
mov
or
push
xchg
gs
xor
and
or
xor
shrb
xor
and
mov
arpl
lahf
cld
lock
lods
sub
repnz
xchg
aam
icebp
pop
mov
das
xor
adc
ret
jmp
push
push
popa
push
xor
imul
cld
xchg
cmp
fadds
outsb
int3
stos
pusha
inc
pop
loop
push
mov
pop
cmp
fidivrl
loop
insb
mov
mov
mov
push
sub
popa
lcall
jl
cmp
std
inc
je
inc
ljmp
sti
es
repnz
sub
loop
repnz
jnp
or
xchg
rcrl
test
xor
mov
daa
pop
ret
lahf
inc
adc
sbb
jle
sbb
cli
testb
mov
ljmp
stc
push
push
enter
push
in
cmp
shll
and
and
cltd
lds
hlt
popf
mov
fdivrs
mov
sarl
outsb
aaa
insl
add
cli
fneni(8087
notl
jp
aaa
push
adc
cmp
cmp
mov
scas
pop
jecxz
cltd
shll
mov
cmp
gs
or
push
push
loop
push
orb
cltd
jg
cld
cmp
rorb
je
arpl
xlat
out
jp
cmpsl
mov
jp
xchg
lods
std
pop
sarb
outsl
sbb
xor
dec
jecxz
aaa
repnz
test
cltd
xor
xchg
pop
xchg
xchg
je
or
rcrl
test
cmp
or
ret
push
or
xlat
je
enter
aad
jmp
addr16
fsubrl
into
mov
gs
pop
insl
loope
outsb
and
rolb
fidivs
shrl
push
jnp
rcll
gs
cmpsl
fadd
mov
fadd
lock
bnd
push
pop
adc
mov
inc
mov
inc
jg
and
call
sbb
mov
or
push
mov
insb
mov
add
dec
in
mov
cmp
mov
insl
inc
mov
push
mov
les
adc
jecxz
dec
inc
mov
lods
or
xlat
test
pop
fsubs
inc
aaa
xor
push
pop
sbb
jne
aam
in
jg
inc
pop
pop
cmpl
shll
pusha
scas
mov
xor
dec
pause
pop
add
int3
fisubrl
das
inc
adc
push
mov
mov
mov
add
leave
adc
cmpsb
or
es
add
mov
ja
sbb
test
addl
push
jg
adc
push
sbb
loop
rorl
loop
sbb
mov
iret
shll
es
scas
jae
in
addr16
xlat
push
xchg
mov
lock
sbb
hlt
add
test
fs
mov
adc
sbb
mov
clc
ret
shrb
sub
or
call
mov
xor
dec
mov
cltd
pop
frstor
cmp
iret
mov
loopne
icebp
jg
cwtl
and
pop
test
dec
sbb
sti
mov
jae
mov
or
cltd
xchg
mov
lods
and
ret
lds
cmp
leave
sub
sbb
aad
cld
mov
arpl
iret
clc
imul
push
adc
mov
or
pop
fwait
loopne
mov
ficomps
push
dec
xchg
aaa
inc
dec
aaa
lods
movsb
leave
leave
addl
mov
push
push
in
mov
dec
mov
inc
lcall
aad
and
imul
pop
sbb
sbb
ret
mov
pop
das
mov
push
in
mov
ljmp
push
mov
mov
add
xchg
nop
cwtl
out
push
sbb
sub
das
inc
add
cmp
mov
dec
dec
pushf
inc
pop
hlt
int3
repz
mov
jecxz
inc
fs
or
test
sub
mov
lds
pop
mov
addr16
dec
enter
add
fcoml
shlb
pusha
mov
jbe
les
or
movsl
sbb
lock
in
or
jb
dec
push
pop
add
ficompl
add
inc
jns
sub
mov
mov
jae
inc
movsl
dec
out
and
cmp
es
sahf
pop
inc
repnz
scas
bound
or
mov
insl
repnz
inc
lahf
fstps
js
mov
add
es
fcompl
rorb
cmp
les
adc
lret
and
mov
xchg
aaa
andl
arpl
icebp
bound
ljmp
cmp
dec
ja
icebp
insl
jnp
bound
mov
adc
stos
mov
xor
insl
cmp
call
popf
aaa
xor
xchg
pushf
jb
cld
push
loopne
pushf
loope
lds
fldt
pop
xor
pop
imul
andb
out
loope
mov
jbe
xor
inc
movsl
mov
and
rcl
hlt
addr16
mov
pusha
xchg
shl
inc
sbb
scas
aam
mov
sbb
add
inc
add
pop
aaa
cltd
pop
add
ja
iret
jns
dec
sbb
mov
mov
xchg
daa
xor
cmpsl
mov
pop
dec
lods
dec
sbb
or
in
adc
dec
iret
or
les
xor
insb
std
test
outsb
xchg
leave
fistps
js
aaa
push
xor
xchg
lods
insl
push
mov
sub
jne
ljmp
jo
mov
sbb
push
cmp
arpl
jne
mov
cli
push
lcall
out
push
jbe
fwait
cmc
in
movsl
je
es
lcall
adc
stos
pop
nop
ret
pop
hlt
sbb
cmp
out
sti
mov
mov
rolb
aad
bound
out
fstpl
xor
test
sub
adc
add
stos
shll
mov
aaa
mov
lret
add
std
imul
push
ljmp
pushl
adc
ljmp
fwait
sbb
sarl
xor
les
pslld
add
jge
pop
test
imul
lret
bnd
push
jnp
cwtl
decb
adc
dec
adc
xor
push
xor
outsl
sub
or
out
rolb
and
pop
dec
out
fisttps
stos
psrld
iret
lods
jl
mov
sub
xor
stos
jl
movsl
lret
nop
es
add
cmp
xchg
enter
fbld
popa
sbb
mov
and
imul
out
shrb
add
mov
ja
daa
idivb
movsb
cmpsl
push
lds
out
cltd
andl
cmp
cltd
imul
repz
lret
jecxz
xchg
sbb
es
mov
lock
push
adc
push
rorb
mov
lea
mov
add
jns
cwtl
fisttpll
sub
in
test
push
ljmp
jo
add
stos
xor
jb
sub
fdivrs
xchg
out
push
adc
mov
push
data16
pusha
push
fisttpl
mov
mov
insl
mov
fadds
out
fisttpl
jae
inc
jnp
mov
dec
sub
movsb
leave
loop
add
fsubs
push
repz
jb
dec
or
xchg
dec
mov
and
inc
jle
mov
pop
jno
sub
loope
add
fisubrl
in
scas
fsubrl
xchg
stos
negl
test
xchg
inc
jmp
aas
cli
xchg
adc
leave
xchg
leave
sbb
aaa
cmp
pop
cmc
mov
pop
adc
call
mov
inc
testb
stos
cmp
and
pop
lret
mov
fdivrp
stc
pop
jb
push
cmp
hlt
cmp
lea
enter
adc
pusha
dec
cmp
jae
xchg
bound
insb
cmp
mov
test
pop
fucomip
rcll
stos
mov
mov
sbb
inc
daa
insb
push
or
outsb
sbb
rolb
mov
js
pop
enter
cmpsl
adc
mov
pop
sbbb
lds
xor
cmc
pop
outsl
pop
lcall
push
icebp
cld
imul
or
xlat
xor
out
sarl
frstor
mov
mov
xor
mov
mov
and
fisubs
in
sub
mov
jg
addl
rcl
pop
andl
lahf
inc
sbb
push
xor
fbstp
imulb
js
insb
sub
push
dec
adc
dec
fildl
pusha
iret
imul
in
sub
or
pop
mov
pop
ss
iret
bound
push
dec
or
test
out
ss
xor
cmp
out
rcr
fistps
repz
mov
mov
pop
sub
fdiv
out
cmp
sbb
pushf
xchg
lret
jl
mov
push
sbb
popa
sbb
xchg
sbb
rcrl
sti
sbb
or
outsl
ljmp
mov
adc
ret
fwait
in
push
sbb
xchg
loopne
adc
jns
lock
adc
out
push
pop
adcb
push
dec
mov
jns
lods
and
movsl
xor
ja
lret
ljmp
lahf
xchg
repnz
jmp
mov
cwtl
insl
cli
or
mov
xor
lcall
ret
ja
jg
iret
cmpsb
daa
xor
push
sbb
cmp
or
jnp
xor
repnz
jp
fmuls
into
lret
ret
jp
repnz
rcr
fistpll
scas
mov
ljmp
mov
mov
rcrl
popf
jno
stc
mov
fsts
gs
dec
subb
pop
or
inc
jne
aam
lret
ficompl
mov
iret
mov
jl
lods
xor
dec
add
test
mov
mov
mov
xor
or
in
add
or
mov
dec
sbb
fstpl
jp
pop
jbe
adc
xor
mov
sbb
mov
inc
add
inc
push
adc
jmp
pop
pop
adc
xchg
pushf
xchg
mov
mov
subl
inc
inc
jo
inc
ffree
inc
sub
data16
jmp
sub
mov
sub
cmp
mov
inc
insl
mov
aaa
adc
mov
test
xor
xchg
and
rcrb
sbb
push
jno
and
lods
lret
gs
pop
ss
stc
push
push
push
pop
ret
jle
pop
ljmp
mov
es
mov
jmp
lods
addr16
cltd
addr16
imul
mov
push
cmp
into
scas
jmp
add
mov
pusha
or
fcoms
and
es
out
in
xor
hlt
popa
loopne
push
dec
pushl
adc
jg
cwtl
popa
cmpsb
mov
mov
dec
jbe
pop
sub
sub
cli
jno
sbb
or
shrb
outsb
push
iret
cs
inc
adc
cmp
mov
dec
sub
inc
inc
sbb
mul
test
xchg
jmp
pop
jle
or
popf
insb
or
repz
mov
cmp
sub
inc
push
cltd
lock
mov
pop
sub
adc
loope
insl
add
pop
mov
sbb
cmp
cmp
push
lret
add
sub
jns
jg
insl
cmp
lea
icebp
adc
movsl
pop
pop
call
inc
mov
in
insl
scas
mov
xchg
ficomps
test
cli
or
stos
mov
cli
inc
mov
fldt
std
and
push
xchg
fs
and
hlt
ljmp
test
mov
pop
xchg
cmovs
int
mov
xor
dec
cmp
sbb
inc
mov
adc
in
pop
or
cmp
loope
cwtl
lret
loopne
imul
jae
push
aaa
fistpll
push
icebp
lods
in
mov
xor
or
and
push
mov
sub
xchg
mov
std
mov
int
xor
push
dec
pop
pop
lds
ljmp
dec
clc
imul
daa
faddl
out
xchg
sbb
mov
mov
or
xchg
xchg
mov
xchg
mov
sub
or
pusha
and
cmpb
sub
fisubl
scas
cmp
mov
xchg
push
mov
add
pop
imul
popf
pop
push
sarl
call
jp
popf
addl
jg
insb
mov
shrl
mov
push
jnp
cmp
addr16
out
ficoml
fstpt
repnz
dec
dec
idivl
shl
test
or
lahf
mov
popf
icebp
mov
or
test
cmp
lret
subl
push
mov
sbb
fdivs
fistl
arpl
andb
mov
loope
add
dec
in
std
aam
fidivl
sti
sbb
jbe
fwait
lods
ss
fnstenv
sahf
je
and
adc
and
or
test
xchg
lret
mov
int3
xchg
rorb
ljmp
and
mov
push
int3
dec
outsb
xor
test
xor
cmp
pop
dec
or
in
pop
mov
pop
fdivrl
cmp
push
inc
push
pushf
or
lret
stc
xor
and
nop
cmp
in
xor
adcl
add
cmp
and
aam
test
stc
mov
arpl
je
push
add
xchg
xchg
pop
adc
and
pop
repnz
lahf
shlb
nop
and
insl
push
and
jp
insl
jmp
iret
cmpsl
negb
pop
or
outsb
inc
and
fidivrs
jae
aaa
xchg
fdivrl
push
sub
cmpsb
scas
push
subb
jbe
dec
cmpsb
sub
sub
cmp
insb
pop
mov
int
inc
xorl
cmc
nop
jg
dec
cmp
add
adc
push
cwtl
mov
and
cmpsl
fwait
jge
mov
sbb
mov
cli
cmp
test
clc
pop
sbb
adc
inc
arpl
cmc
sbb
repz
int3
dec
xchg
out
aad
jb
cmpl
ret
mov
addr16
shr
dec
or
in
mov
or
or
push
out
out
adc
mov
js
fwait
and
push
jbe
xor
push
push
push
pop
enter
push
add
inc
addl
fcmove
dec
push
ret
insl
aaa
stos
jle
jbe
movb
call
mov
push
push
lods
daa
imul
test
arpl
sbb
add
push
adc
xchg
movsb
add
adc
iret
test
fwait
push
dec
and
rcll
out
insb
hlt
lea
xchg
cld
add
inc
jmp
addb
fidivrs
inc
mov
fisttpl
and
movsb
aam
fmuls
pop
fldt
cmp
mov
out
pop
sbb
mov
pop
xor
repnz
add
push
lds
cs
std
adc
mov
rcr
fildll
push
cli
pop
push
out
stos
mov
lods
dec
jo
sbb
cs
mov
mov
sub
adc
popw
xor
jb
push
nop
jae
jns
dec
sub
mov
bound
push
fdivp
xorl
xchg
into
test
mov
shr
sbb
es
dec
pop
cs
inc
push
mov
mov
decl
jo
jno
lods
xlat
mov
cmp
and
arpl
icebp
iret
clc
dec
pop
and
andb
mov
pop
add
or
mov
negl
cmpsb
xchg
pop
mov
insl
mov
dec
and
dec
scas
sub
es
enter
xchg
mov
pop
ds
push
add
pop
andb
aad
mov
shlb
pushf
cmp
sub
sbb
inc
mov
outsl
rclb
lcall
in
mov
inc
adc
adc
ljmp
push
out
mov
xor
mov
test
push
loope
scas
lahf
cmp
push
mov
mov
imul
rorb
testb
rclb
mov
xchg
mov
nop
shll
jne
mov
fs
fcmovbe
test
mov
mov
adc
cmpsl
decb
js
and
xor
lahf
jecxz
dec
jns
xor
lahf
iret
mov
push
pushf
adc
lret
cmpsl
imul
add
icebp
fimull
ja
dec
dec
xchg
jle
or
sub
mov
loop
roll
mov
xor
sub
lods
subb
arpl
adc
test
dec
jecxz
loope
pop
imul
and
bound
mov
lret
fwait
repnz
xor
mov
subb
mov
push
inc
divb
je
insl
xor
dec
adc
mov
pop
pop
mov
adc
addr16
shr
movsl
jle
imul
mov
hlt
sbbb
xor
mov
idivb
mov
rclb
out
fldcw
ss
cmp
ret
ror
mov
es
pushf
adc
jb
loopne
aam
xor
inc
xor
mov
daa
bnd
push
lods
mov
adc
lea
sbb
in
dec
sbb
and
fisubrl
out
jne
fs
les
test
push
dec
jge
push
test
mov
sub
mov
add
xor
insb
mov
sbb
test
ret
sbb
fisubrl
test
xchg
cltd
push
pop
ds
scas
fiadds
mov
or
inc
ds
or
fstps
dec
adc
and
mov
adc
push
imul
scas
cmp
mov
jae
lock
or
shll
mov
dec
xchg
lods
inc
mov
cli
sub
lsl
xchg
pushf
in
add
jns
shl
push
repz
add
cmpb
xchg
in
jo
clc
fwait
rorb
clc
aaa
and
out
push
aaa
sbb
and
repz
mov
or
pusha
addr16
lock
mov
add
dec
add
repz
sti
sub
push
or
fidivl
add
insb
pop
or
lock
cltd
xor
cmp
ja
dec
sub
mov
popf
ljmp
in
repnz
out
inc
lods
mov
lods
cmc
mov
ret
mov
inc
mov
aad
imul
push
and
inc
or
lea
push
sarl
adc
xor
icebp
cmpsb
push
adc
cmc
dec
fldenv
mov
aad
cmpsb
mov
xlat
clc
jp
xor
lcall
hlt
cmp
adc
mov
xor
and
cli
cmp
movsl
pop
gs
sbb
or
cltd
icebp
cmp
lret
iret
les
sub
aad
xor
mov
jmp
xor
inc
push
pusha
add
mov
clc
not
inc
pop
loope
xchg
mov
movsb
xlat
stos
pop
cltd
sbb
sbb
imul
and
jae
mov
pusha
ss
mov
inc
mov
dec
pop
sbb
sahf
repz
call
mov
and
mov
inc
push
repnz
or
sub
add
nop
mov
cltd
dec
leave
icebp
lea
mov
dec
in
std
pop
cmp
outsl
cs
sub
out
arpl
sub
in
xor
addl
add
movl
lea
mov
movl
mov
movl
cmp
movl
jbe
subl
addl
jmp
orl
addl
sbb
mov
sbbl
xor
sbbl
inc
incl
add
movl
cmp
movl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
orl
mov
andl
sub
add
mov
xor
negl
sub
xorl
ror
xor
mov
add
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
jmp
lds
lea
jns
jbe
lret
mov
xor
cmp
jp
sub
xor
cli
cmp
stos
mov
lahf
push
js
hlt
adc
and
jns
fstpt
xor
in
dec
out
pusha
mov
mov
sbb
ja
pop
pop
push
and
fidivl
and
std
mov
xor
test
cld
loopne
outsl
mov
imul
sarb
stc
call
popf
sti
sbb
jae
cltd
mov
xor
mov
push
aas
push
imul
in
lods
push
jb
lock
leave
pop
shrl
sub
lods
xchg
xchg
mov
fstpl
mov
push
enter
aam
mov
jmp
cltd
cld
loope
ja
mov
jbe
nop
lods
lods
in
sub
and
mul
xor
rcl
insl
jp
jle
pop
stos
dec
dec
mov
stos
int
addr16
imul
sarb
arpl
sti
jnp
cld
inc
push
jae
inc
adc
movsb
jnp
dec
pop
mov
xchg
mov
and
lea
mov
sti
pop
xchg
add
push
and
lcall
hlt
or
mov
dec
xlat
inc
test
mov
outsb
movsl
add
mov
mov
arpl
sub
ss
adc
push
or
jmp
cmp
fcom
repnz
in
cmp
pop
dec
push
xchg
inc
repnz
pop
pop
popf
xor
jnp
mov
test
add
pop
divl
data16
pop
fcmovnbe
pushf
or
lock
loop
mov
test
xlat
push
or
in
mov
xor
xchg
xor
cld
mov
xor
pop
cmp
imul
xchg
shll
popf
xor
inc
mov
push
daa
or
xor
push
mov
notl
test
enter
je
ret
lret
dec
in
dec
inc
outsl
mov
jb
out
jp
aas
lods
std
sub
pop
xchg
sbb
adc
add
dec
pop
out
or
dec
xchg
sbb
or
mov
ja
mov
fwait
jbe
pop
ja
xchg
mov
pop
mov
push
xorl
test
mov
stos
ss
and
push
imul
cwtl
cmpsb
in
jae
stos
shrl
loop
push
jns
mov
mov
and
push
insb
xor
in
aam
fwait
aas
mov
pop
fmulp
mov
push
xor
lret
aas
dec
mov
and
mov
lcall
daa
fwait
not
push
xchg
aad
fadds
dec
push
lds
not
jg
or
out
loopne
pushf
cmc
mov
adc
stc
dec
das
mov
pop
pop
stos
cmp
rcll
lods
cmp
xchg
sub
or
push
insb
int
sbb
out
addr16
cmp
imul
movsl
outsl
dec
adcb
adc
jle
cwtl
in
subl
push
fwait
cmp
repz
js
stos
jo
inc
dec
dec
sbb
stos
clc
pop
arpl
and
mov
jg
mov
xor
fs
mov
popa
fsubrp
loop
inc
cmp
add
in
xor
ss
pop
repz
pusha
insl
movsl
xlat
inc
add
mov
lods
jl
jecxz
movsb
inc
aaa
mov
sub
xchg
push
mov
rcrl
sbb
hlt
dec
icebp
pop
inc
adc
and
pushf
jae
pushf
test
enter
mov
and
xchg
sub
sbb
inc
ret
loopne
cmovae
imul
xlat
mov
clc
adc
test
call
sbb
lret
pop
in
hlt
add
add
cltd
cli
je
movsb
popf
test
mov
lods
adc
inc
in
sub
nop
cmpb
and
cs
xchg
jg
add
and
dec
icebp
mov
cmpsl
and
mov
addb
adc
int
cmpw
inc
lea
daa
add
push
fldt
fidivl
lods
push
cwtl
arpl
in
inc
pop
adc
call
adc
add
lds
das
pusha
push
arpl
dec
mov
clc
aad
fsubrp
and
and
sbb
dec
xchg
jne
movsl
rorl
jg
stos
xchg
test
jmp
and
mov
fistpl
xor
frstor
adc
rcrl
adc
mov
lds
dec
cli
cmc
add
xor
cld
inc
push
inc
pop
arpl
push
push
je
cmpsb
or
test
scas
mov
dec
mov
cld
cmpl
push
xor
jg
sub
insl
imul
shll
orl
cmc
lcall
out
push
mov
xor
fcmovnbe
xchg
xor
jbe
sub
addr16
and
inc
lea
shrb
setle
ret
outsb
xorl
iret
pop
xor
jnp
es
add
lcall
negb
cmp
xchg
pushf
adc
add
add
jae
and
aaa
cmp
stos
xor
pop
icebp
stc
push
xor
pop
aad
mov
xor
mov
or
out
leave
pop
push
out
popa
lods
popa
scas
jg
cltd
sbb
pop
outsl
fwait
pop
add
insl
xor
data16
shl
je
scas
aas
incl
mov
clc
sub
cltd
xorl
mov
imul
aad
inc
das
jnp
or
arpl
bound
stos
subl
sbb
mov
sub
arpl
ljmp
cmp
das
loope
xor
out
sub
sub
sub
jo
adc
cld
inc
cmp
cmp
leave
scas
xor
or
sub
loopne
xchg
cli
fbld
add
enter
pop
je
cmpsl
stos
or
jp
add
insb
inc
test
push
mov
test
mov
push
popf
dec
rorb
or
mov
mov
shrb
fimuls
xor
mov
pop
push
sahf
pop
jg
xlat
es
sub
pop
jne
movsb
mov
fst
fnstenv
jle
sahf
dec
in
or
pop
jmp
xchg
pop
cmc
adc
lahf
fdivrl
dec
lods
cltd
call
lahf
mov
xor
iret
mov
xchg
lds
jns
out
leave
mov
cmpsb
push
loope
xlat
cmpsl
mov
xchg
mov
stos
mov
hlt
sub
rolb
fwait
shlb
data16
jbe
cmpsb
push
std
fistpl
out
dec
xor
mov
adc
and
xchg
icebp
push
or
adc
or
sub
jne
sahf
push
sarb
test
pop
aaa
ja
lods
jp
jle
lcall
loop
lahf
or
decb
pop
sbb
lcall
fs
xor
jnp
fstpt
sbb
pop
shrb
lcall
test
adc
rolb
cmp
push
sub
and
jbe
scas
cmp
popa
fstpl
xchg
xor
xchg
mov
fistps
dec
out
sbb
sarl
sub
add
jmp
sbb
out
movsb
fstps
dec
inc
jge
xchg
fidivrs
or
xor
mov
stos
lods
in
ja
out
add
aaa
cmp
iret
or
dec
push
add
dec
push
test
dec
lahf
jmp
call
pop
call
aam
sbb
fwait
sub
in
sub
adc
imul
push
mov
xor
jne
insb
enter
sbb
outsb
xor
fdivl
ret
popa
mov
jns
lea
insl
and
xor
loope
cmpsb
sahf
cld
mov
movsb
cmp
xor
stc
fsubrs
cmp
shlb
in
fstpl
int
outsl
test
cmc
gs
jmp
xchg
push
shrb
mov
dec
rclb
mov
dec
lds
ds
lcall
mov
imul
mov
lret
cmpsb
rorb
lock
mov
pusha
mov
xchg
jne
inc
fisubs
push
out
outsb
imul
or
loop
mov
sbb
xchg
cmpxchg
mov
sti
or
push
lcall
cld
fstpt
mov
pop
mov
fcmovbe
jmp
cmp
test
sub
je
test
sti
dec
je
repnz
fisttpl
loopne
or
xchg
push
imul
icebp
fs
pop
data16
xchg
aam
cmp
scas
xor
mov
lahf
lcall
jl
in
cmp
push
pop
xchg
inc
xor
aaa
inc
imul
subb
pop
popa
dec
loop
in
push
dec
sbb
adc
sub
adc
test
pop
cmp
es
shr
add
adc
ss
int
mov
stos
ret
inc
xor
subl
or
filds
out
js
xchg
fidivrl
sub
pop
push
cmp
insb
stos
adc
std
pop
cmp
cmp
sbb
lret
pmaxsw
push
dec
lret
xchg
adc
or
dec
test
pop
sbb
xor
cld
stos
in
testl
xchg
dec
mov
mov
fsubrs
pop
mov
fildll
lahf
repnz
loopne
lfs
fcoml
add
int
outsl
sbb
xor
loop
mov
pushf
jne
pop
dec
out
mov
add
ficompl
dec
imul
outsb
pushf
xor
dec
scas
jmp
test
bound
mov
pop
mov
icebp
popf
scas
dec
imul
jle
adc
scas
and
push
leave
cmc
push
pop
cmp
jb
dec
incl
roll
fsubrs
mov
adcl
mov
out
sbb
cmp
in
sarl
add
and
cmp
xor
cmc
and
push
sub
fs
dec
and
sub
mov
jl
xlat
lcall
orw
sub
push
cltd
jle
cmp
movsl
stos
jb
sbb
push
and
jb
cmp
push
xchg
xchg
push
sbb
jl
pop
nop
imul
cmp
in
daa
loopne
xlat
sub
clc
lods
jo
mov
pop
test
or
jl
and
lcall
and
mov
sub
push
popf
insb
push
jecxz
jae
jns
push
sbb
mov
shr
jbe
jle,pt
outsb
sub
cwtl
test
mov
cmp
mov
cmpsb
or
into
xor
xchg
aam
loop
sbb
xor
stos
add
in
roll
jb
cld
imull
aad
jmp
outsb
sti
pop
mov
stc
and
pop
aaa
cmp
add
sbb
dec
pop
pop
sub
push
and
add
add
inc
and
shll
jmp
jnp
dec
cmpsb
fstpt
test
popf
sbb
dec
imul
mov
or
inc
jecxz
and
inc
stc
int3
push
dec
insb
das
scas
lods
dec
xor
jge
jb
fsubrs
sub
aas
dec
aam
jbe
xor
mov
cmpsl
cmp
jae
pop
shrb
pop
dec
into
test
hlt
mov
loopne
aam
into
lcall
mov
xchg
popa
test
add
arpl
fstps
mov
das
ds
mov
std
sbb
jb
orl
pop
pop
jns
cli
loopne
mov
test
lahf
mov
les
mov
cmc
out
bound
int3
add
mov
jne
mov
sbb
xor
pop
lods
lods
jl
jmp
in
mov
xchg
lahf
or
icebp
dec
and
stos
inc
out
dec
sar
mov
ret
and
pop
js
and
pop
cwtl
cmp
jge
cmp
sub
dec
rcrl
out
mov
push
popf
dec
jae
cmp
fnstcw
mov
cmp
int3
xor
arpl
mov
push
icebp
jbe
mov
and
xor
popa
adc
push
inc
scas
cli
mov
xchg
arpl
push
jo
push
movsl
or
enter
mov
xchg
std
gs
out
lods
cli
dec
lods
add
out
and
icebp
and
xchg
mov
out
mov
rcr
addr16
pop
inc
pop
mov
xlat
fisttpll
rcl
stc
push
mov
cltd
push
popf
test
mov
test
stos
xchg
xlat
jns
or
sbb
cmp
jecxz
bound
cmp
jmp
push
dec
es
stos
add
mov
mov
sbb
out
jne
pop
fbstp
sahf
adc
mov
and
out
xchg
jno
mov
nop
scas
jb
mov
xchg
insb
dec
repnz
je
clc
jg
in
fwait
test
aaa
add
mov
addb
outsb
repnz
adc
pop
push
jno
push
int
dec
add
jnp
fs
jns
in
es
adc
stc
int3
pushf
hlt
add
jge
and
popl
ds
sub
lods
addb
inc
push
test
sub
pusha
mov
push
xchg
stc
sbb
fsubl
push
dec
ret
xor
xor
arpl
inc
sub
sub
call
cmp
and
adc
mov
imul
adc
or
rcrb
int3
int
scas
pop
movsl
pop
divb
mov
xor
test
pop
lea
pop
pop
pushf
mov
imul
movsb
push
pop
movsb
jg
add
jno
inc
aaa
mov
inc
lds
and
cmp
lcall
adc
rclb
mov
add
pop
pop
rep
or
mov
lcall
into
jg
lods
nop
test
movsl
and
mov
lahf
int
scas
in
sub
adc
idivl
dec
aam
enter
or
mov
cmp
dec
add
push
scas
push
aad
cli
lds
jb
sub
sbb
or
xchg
fs
test
inc
rcrl
cmp
test
pop
push
sbb
pop
mov
push
int3
xchg
mov
inc
inc
xor
repnz
in
push
pop
in
or
adc
sbb
inc
push
or
cltd
cmp
xchg
fidivs
dec
pushf
arpl
mov
stc
pop
dec
inc
push
sub
shll
rcrl
push
outsl
xchg
xor
fisubs
sub
xchg
push
pop
sbb
aam
fimull
movsl
mov
adc
icebp
lods
mov
addr16
cmp
cmp
test
jle
lret
cmp
ds
push
jmp
out
cli
mov
sub
aas
fst
sbb
cmpsb
cmc
or
jae
mov
shr
cmp
pop
jbe
mov
xor
jp
call
lods
xchg
and
lcall
and
ret
xchg
inc
ret
cld
jmp
xchg
cld
psraw
sub
ret
fcmovnu
mov
imul
idivl
pop
push
scas
dec
icebp
js
int
imul
xor
lods
mov
aad
adc
mov
shrl
dec
jae
jl
js
std
inc
leave
mov
mov
in
mov
and
push
push
jmp
cmp
repz
inc
or
dec
mov
dec
pushf
pop
adc
dec
add
out
imul
sub
xchg
loope
add
xchg
addr16
jne
dec
popf
push
lret
or
sarl
lods
mov
lea
shl
gs
fists
xor
fnstsw
dec
aaa
sarl
or
and
dec
rol
xor
inc
cwtl
fnstenv
cld
fstl
hlt
adc
ja
js
and
je
mov
imul
add
sub
or
push
jg
roll
mov
pop
push
iret
xchg
or
rcrl
aaa
ja
pop
hlt
insb
sbb
out
jge
mov
daa
je
ja
or
mov
divb
jb
fwait
and
icebp
sub
mov
lcall
loope
test
out
push
out
mov
add
sub
adc
mov
das
sbb
addr16
lock
mov
arpl
or
add
repnz
mov
lret
fdivrl
cmp
mov
push
lret
imul
repnz
addr16
or
subb
int3
mov
pop
push
test
test
xlat
mov
scas
add
push
ret
and
cmp
sub
mov
push
js
leave
test
sub
inc
bnd
sbb
cmp
lahf
in
cwtl
loop
cmp
out
push
sub
adc
cs
cmp
dec
loope
mov
jns
es
sahf
and
movsb
sbb
push
adc
lods
xor
pop
sbb
mov
or
mov
out
lock
lcall
mov
addr16
sub
dec
dec
sbbl
cmp
adc
inc
imul
mov
pop
add
repnz
mov
aam
xchg
mov
xor
cmp
loope
adc
aas
test
mov
pop
add
movsl
or
mov
lock
sub
enter
sti
mov
jp
mov
add
leave
mov
add
fiadds
outsb
outsb
in
mov
cmp
test
adc
rcl
xor
and
subb
xlat
sbbl
add
mov
pop
cmp
xchg
mov
cmc
in
sbb
aam
pop
jmp
repz
xor
and
in
pop
adc
mov
xchg
je
mov
icebp
neg
rorb
pop
push
mov
and
into
adcl
aaa
inc
xchg
push
cmp
movl
pop
sti
sbb
push
push
dec
mov
sbb
sti
fstl
call
dec
mov
icebp
les
stos
sbb
pop
or
mov
xchg
rcll
out
outsb
addl
cmp
xor
mov
mov
pop
xchg
mov
mov
out
jo
pop
out
push
xorb
cli
mov
push
call
cmp
sti
ss
mov
or
lret
cwtl
dec
add
fwait
push
sub
xchg
inc
imul
lret
lock
sub
mov
jmp
data16
movsb
cli
mov
into
pop
mov
and
mov
loopne
jge
data16
cmp
push
add
aam
inc
fcoml
int3
leave
ret
push
push
adc
pop
ficompl
xchg
jns
scas
mov
das
and
xor
cmp
iret
mov
lea
xor
mov
movsb
movsb
add
loopne
dec
call
pop
mov
jmp
xor
ja
dec
add
pop
push
pusha
out
xor
and
out
negb
push
cli
add
cld
sub
jo
jg
lock
jg
sbb
faddl
in
jle
mov
and
and
lea
xchg
mov
popa
sub
sbb
xlat
jg
jge
icebp
inc
sti
adcl
arpl
sub
add
stc
jge
pop
or
pop
sub
cltd
repnz
mov
shll
subl
xchg
sysexit
inc
cli
sahf
movsb
ret
inc
mov
stos
in
xor
roll
cmpsl
xchg
add
daa
pop
pushf
mov
xor
mov
int3
cmc
and
fs
jmp
push
xchg
stos
inc
pop
ljmp
jmp
inc
jl
mov
outsb
push
sarb
add
aaa
imul
out
or
ret
fisubrl
test
xchg
out
and
sbb
pop
mov
xchg
jecxz
dec
adc
ljmp
shl
add
mov
iret
loop
arpl
push
bound
mov
imul
jo
js
int3
jns
int
cli
pop
call
lahf
inc
sahf
inc
cmpsl
pop
jmp
movsl
mov
mov
mov
jne
pop
cmp
vmovaps
pop
ret
xor
dec
push
jnp
add
sbb
loop
jbe
inc
push
push
les
call
into
jmp
fnstenv
cmpsb
fisubrs
ss
mov
hlt
cmp
ret
pop
in
adc
stos
pop
loope
dec
and
in
out
pusha
push
or
fiaddl
mov
mov
inc
jecxz
movsb
pop
mov
mov
ficoms
scas
jle
push
jb
adc
ficomps
jbe
sbb
ret
or
sub
push
mov
xor
movsl
lahf
jno
sub
cmp
les
jg
lahf
out
in
roll
cltd
cmc
inc
stos
shrb
test
mov
xor
gs
popf
jae
push
sti
pop
dec
enter
ret
pop
cld
outsl
test
jo
jbe
nop
or
xor
xchg
cmc
out
ret
add
dec
hlt
push
add
xor
sub
sub
inc
les
adc
or
mov
outsl
rol
push
hlt
sti
pushf
xchg
nop
roll
lahf
pop
shrl
enter
stmxcsr
ret
push
mov
jecxz
pop
aam
mov
pop
fucomp
push
mov
jmp
shl
mov
xchg
in
jp
xchg
pop
repz
pop
jne
lods
dec
addl
daa
in
js
lods
sbb
gs
and
call
sbb
shll
push
flds
xor
fwait
jmp
push
pop
andb
mov
mov
or
or
pop
ficompl
movsb
push
xor
movl
int
and
out
inc
subb
cwtl
push
mov
test
fsubrl
xor
jae
mov
daa
or
scas
and
repz
xchg
mov
test
insl
adc
add
loope
or
pop
pop
mov
testb
in
inc
cmp
popf
jecxz
not
mov
leave
adc
mov
repz
mov
sub
cmp
stc
or
inc
movnti
xor
inc
adc
sahf
adcl
mov
sub
pop
mov
mov
jge
pop
and
icebp
and
sub
out
roll
mov
fildl
push
xchg
mov
in
inc
repz
in
clc
test
out
jo
pop
adc
sbb
mov
mov
lds
addr16
arpl
cmp
mov
push
pop
and
int3
test
mov
xchg
sub
aad
mov
mov
fs
sbb
pop
mov
les
ret
bound
lods
adc
xor
adcl
in
sub
test
pop
pop
in
and
cmp
jp
out
add
xor
xor
push
xor
mov
test
in
xor
sbb
cmp
flds
jns
or
jl
scas
pop
mov
inc
dec
xor
push
daa
aaa
loopne
les
loopne
enter
movsl
call
jb
shrl
adc
lret
inc
or
sub
xor
push
es
out
es
push
mov
lds
push
jbe
push
push
lahf
push
dec
data16
lock
in
jno
bound
push
lret
add
add
and
insb
adc
xor
in
jmp
into
sub
ret
sbb
out
inc
in
sbb
iret
iret
push
outsl
lahf
mov
xchg
stc
push
fsubl
icebp
jbe
ljmp
cli
rcrb
out
pop
imul
jnp
add
pop
pop
aaa
xchg
iret
sbb
gs
cs
pop
pop
sub
std
repnz
adc
adc
and
and
aaa
std
or
adc
cmp
add
rcll
sbb
and
cwtl
pop
inc
iret
fsubp
jbe
pop
cmp
std
bound
add
add
adc
sbb
popf
inc
movsl
fistpl
dec
sbb
sbb
lock
xor
out
aaa
and
rorl
mov
and
pushf
inc
shl
mov
call
imul
sbb
rcl
neg
ret
ja
icebp
flds
xchg
popa
adc
xor
clc
dec
mov
rcr
shr
fsubrs
aas
out
es
or
jbe
xchg
sbb
push
inc
push
add
mov
outsl
ljmp
aas
pusha
leave
lods
pop
cwtl
ljmp
fisubs
test
xchg
dec
mov
in
or
les
jmp
fnstsw
mov
popf
or
push
jno
cld
das
add
fistpl
imul
cmp
stc
cltd
mov
pop
cld
pop
shll
and
inc
repz
call
imull
sub
xor
in
js
loope
sub
fcompl
test
ja
sbb
mov
mov
rol
outsl
pop
or
jle
clc
add
push
sbb
sbb
cmp
mov
dec
pop
pop
xchg
outsl
and
add
rclb
jno
xchg
mov
or
push
out
mov
lods
mov
das
dec
mov
iret
push
cwtl
nop
adc
leave
mov
lret
adc
test
faddl
bound
mov
mov
in
jp
stc
mov
jbe
xchg
mov
adc
and
mov
stos
call
or
xchg
std
rcrb
cmp
imul
out
mov
add
inc
cmpl
mov
outsl
test
pop
jge
push
jg
int3
push
lret
xchg
cltd
in
adcb
jecxz
dec
add
sub
pusha
nop
inc
arpl
stos
fistpl
ret
sbb
jb
mull
xchg
jmpw
popf
mov
lahf
jne
add
arpl
sub
sti
jp
fnstcw
test
sbb
xchg
push
push
pop
sahf
or
gs
sbb
xchg
add
adc
call
xor
insb
xor
mov
ljmp
and
adc
mov
push
rcrl
xchg
add
mov
push
ficompl
push
iret
insb
push
xchg
aas
lcall
inc
jnp
out
xchg
in
sti
jbe
jge
mov
cmp
push
fucomp
sbb
adc
les
shll
fdivrs
dec
scas
mov
lret
or
inc
jns
test
in
add
lods
jle
or
mov
sub
lods
lahf
cmp
fiaddl
and
dec
por
daa
pop
or
mov
push
mov
fcmovnu
jmp
cmpsl
sti
inc
xchg
inc
add
xchg
in
out
enter
or
pop
loopne
adc
mov
adc
pop
mov
cmp
aam
xlat
out
stos
pusha
adc
adc
xchg
bnd
xor
popa
xor
aaa
fsubrl
xchg
adc
out
xchg
lret
pushf
rcr
xchg
lock
xchg
adc
adc
subl
in
dec
rcl
adc
jne
fldl
mov
dec
cmp
mov
add
sbb
sbb
adc
xlat
mov
jp
xorl
sbb
outsl
cmpsl
das
push
xorl
add
jno
pusha
hlt
out
sar
xor
movsb
cmpsl
loopne
aas
fwait
xor
push
frstor
adc
popf
stc
in
dec
mov
repnz
xor
pop
push
mov
mov
aas
add
pusha
mov
mov
sbb
inc
imul
fstpt
std
pop
mov
dec
xchg
scas
clc
and
pop
test
dec
mov
add
mov
out
adc
add
lock
push
das
dec
scas
adc
push
push
daa
pop
test
mov
ljmp
sbb
out
ret
push
xorl
in
lods
jp
cmp
lcall
imul
xchg
fistpl
fyl2xp1
cltd
push
in
adc
add
repnz
mov
xor
loope
shr
mov
ds
es
mov
outsb
out
ret
das
jmp
jbe
sub
dec
scas
sbb
xor
xor
in
lret
lahf
movswl
fidivrs
pusha
aad
jnp
lahf
pop
cld
cmp
cmpb
dec
nop
dec
cmpsb
push
inc
shl
mov
cs
shr
sbb
mov
aas
or
aam
pusha
out
pusha
movsl
or
ficompl
jp
fnstcw
mov
xchg
mov
icebp
cs
js
mov
jl
fwait
cltd
outsl
in
nop
cmp
sarb
pop
cli
xchg
mov
sbb
adc
push
mov
xor
sub
sbb
gs
in
aad
xor
nop
pop
enter
inc
pop
repnz
xchg
mov
pop
or
cmp
hlt
mov
gs
push
insb
cmpl
adcb
jp
aas
std
pop
xchg
adc
addr16
jmp
adc
lods
dec
shrb
cltd
pop
sbb
pop
hlt
sarb
lret
dec
icebp
aaa
pop
push
adc
jno
pop
test
xchg
into
sub
lock
adc
push
pop
lods
daa
lahf
cmp
mov
sbb
aaa
xchg
and
pushf
jmp
pop
jns
mov
testb
aad
cwtl
mov
push
jnp
or
int
push
adc
scas
mov
push
adc
negb
adc
jecxz
shll
and
push
lret
fmuls
jle
jb
gs
mov
data16
jbe
add
lods
imul
outsb
and
mov
pusha
mov
popf
mov
loope
insl
leave
add
push
jno
push
scas
xchg
rcll
mov
out
rcr
cmp
cmc
pop
lret
pop
push
lahf
mov
push
shll
outsb
push
jmp
insl
and
fists
movsb
ret
imul
cmp
adc
inc
pusha
mov
jge
js
xor
movsb
jecxz
lock
notl
in
int
mov
jg
adc
stos
pop
mov
adc
mov
or
clc
insl
jmp
mov
mov
mov
mov
outsb
ja
pop
cmpsb
cmp
out
and
inc
add
lods
lcall
gs
push
stc
sar
and
cltd
jne
mov
push
sub
fninit
movsl
xchg
push
jecxz
jg
dec
stos
imul
add
je
test
pop
shr
or
pop
push
adc
cmpsl
sti
nop
mov
cs
pushf
adc
aaa
xor
out
jnp
dec
stos
jle
and
ja
xchg
imul
test
sbb
rcr
imul
inc
add
pop
mov
dec
adc
mov
xchg
cmpsb
dec
enter
out
or
mov
in
dec
pop
je
mov
sbb
aaa
adc
adc
aas
mov
sub
xor
addr16
dec
cmp
frstor
frstor
popf
inc
mov
mov
scas
xchg
les
push
mov
xor
icebp
ss
mov
adc
push
out
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
jmp
iret
xor
addl
adc
insb
ds
jp
pop
jp
or
cmp
les
adc
jecxz
or
and
mov
add
pop
mov
dec
cmpsb
fwait
adc
sbb
pushf
pop
test
sbb
nop
ret
cmpsb
repnz
mov
fprem
mov
sti
sub
ja
stos
cmpl
and
mov
cmpsl
mov
jo
mov
rclb
insl
pop
scas
test
xchg
dec
or
or
sub
mov
pop
ss
xchg
std
xlat
mov
add
or
std
lds
and
dec
sahf
inc
ljmp
int
jmp
and
outsl
shl
mov
jae
inc
cmpsl
mov
mov
sub
dec
and
mov
adc
arpl
pop
dec
pop
ret
cltd
inc
je
test
les
hlt
dec
jp
mov
xchg
ficompl
add
fsubrs
in
lahf
jge
jae
jle
jmp
loopne
cmp
lds
sub
mov
cmp
jmp
ret
andb
cwtl
outsl
jbe
adc
scas
and
insb
daa
add
xchg
push
in
mov
dec
adc
nop
xchg
dec
mov
lahf
inc
mov
push
mov
imul
gs
jb
insb
xor
pop
pop
jns
fucom
in
push
sub
xor
cltd
xchg
push
aad
push
lods
mov
inc
sub
in
adc
dec
mov
fiadds
cltd
xchg
arpl
sbb
push
pop
sbb
arpl
jnp
sub
int
imul
int
push
arpl
inc
lods
jo
cld
movsb
repz
or
daa
inc
int
push
push
jo
push
fstpl
pop
lock
out
xchg
push
xchg
mov
adc
loope
xor
fiaddl
mov
cmovg
or
inc
dec
inc
jo
xor
shll
cmp
and
add
mov
xchg
loopne
mov
jnp
loop
xor
pop
push
jge
sarb
scas
fwait
dec
inc
int3
mov
lods
xor
out
clc
arpl
lret
icebp
xor
push
mov
inc
aad
test
pop
movsb
xchg
fcoms
mov
cmpsb
std
movsl
xor
adcl
mov
push
push
aaa
cmpsl
shlb
out
ret
adc
sbb
mov
cltd
fwait
push
xor
push
es
mov
sbb
cmpsl
subb
cmc
jne
je
or
xchg
sbb
aad
push
and
fcmovnbe
push
dec
nop
gs
movsl
fildl
fdivrp
clc
cltd
addb
test
sub
es
loope
adc
mov
jmp
dec
sti
popa
out
mov
adc
or
popf
sub
mov
orb
xchg
fabs
mov
in
mov
rcrb
xor
cli
sbb
lods
jbe
aas
movsl
out
mov
mov
shll
dec
arpl
adc
loopne
mov
jns
call
add
and
pop
lret
and
sub
add
xchg
or
clc
xor
fdivs
adc
lds
cmp
pop
sub
inc
mov
or
and
cmpb
pop
test
push
push
int
cmp
lea
jle
xchg
jno
ljmp
sti
sub
push
push
bound
cmc
adc
je
add
xor
imul
pop
popa
lds
mov
mov
int
mov
pop
or
loopne
pop
jp
or
mov
push
and
ljmp
ret
jg
testb
aad
xorl
les
test
aam
push
mov
aaa
pusha
lahf
mov
xchg
stc
arpl
xchg
xchg
scas
jbe
jl
jmp
or
mov
sbb
clc
dec
jge
mov
lods
ja
mov
adc
inc
negb
popf
push
add
and
dec
xchg
or
scas
push
outsl
dec
xor
pop
jae
mov
mov
jb
dec
out
add
lahf
in
leave
and
add
dec
repz
cmpb
jne
jp
cmpsb
ret
addr16
sub
test
jno
inc
loop
and
or
outsb
pop
movsl
cmp
std
pop
dec
lock
jno
mov
popa
add
aas
call
scas
hlt
lret
pop
jge
enter
jnp
xor
pop
push
cmpsl
sbb
and
movsb
lret
arpl
or
lds
dec
add
addr16
mov
or
pusha
xchg
dec
pop
cs
xor
repz
jmp
jg
ss
jbe
sub
jle
test
jb
aad
xchg
jnp
ss
loop
add
sbb
addr16
jle
aam
popa
xchg
mov
fmull
daa
and
int3
adcb
xchg
fincstp
push
cmp
xchg
out
shrl
repnz
adc
lds
jecxz
push
clc
mov
sub
mov
add
xchg
out
int
or
and
jp
cmp
xchg
stos
call
inc
inc
inc
and
and
icebp
xchg
addr16
test
jno
xor
sarl
outsb
cmc
test
fcoml
mov
sbb
pushf
sub
sub
cmp
mov
dec
pop
or
mov
jbe
lret
imul
pusha
call
jne
dec
cs
int3
xchg
mov
es
rolb
push
in
in
cli
arpl
aas
shll
mov
mov
xor
and
lods
or
ret
iret
mov
inc
test
cltd
in
pop
cmp
jp
jb
pop
pop
xchg
pop
sbb
jge
jle
out
sarl
mov
shrb
ja
pushf
sub
es
adc
mov
mov
pop
and
push
jmp
mov
test
sbb
ret
xor
aad
pop
fnstenv
int
lahf
shl
movb
data16
dec
pop
pop
sub
ltr
add
ja
mov
pop
push
fucomip
inc
repnz
ss
js
in
pop
inc
adc
cmpsl
adc
popa
idivb
lret
pusha
mov
fisttps
nop
or
in
dec
lea
fstpl
cmp
cmp
cltd
lods
enter
repz
sub
xchg
cmp
lret
jae
jle
icebp
test
das
enter
adc
add
push
sbb
sbb
or
add
jg
pop
mov
mov
lods
adc
movsb
lret
sub
outsb
testb
sbb
sbb
or
stc
cmp
adc
pop
call
sub
aad
aam
xor
pmulhw
add
lds
inc
or
out
xlat
in
ljmp
or
movsb
fisttpll
sub
jne
lods
stos
mov
daa
mov
dec
loopne
mov
add
cli
jbe
pop
xchg
add
movb
sbb
push
ss
mov
idiv
push
sub
or
push
pop
ljmp
bswap
rorb
or
aad
jmp
or
frstor
test
lahf
aam
mov
dec
cmp
cld
cmp
push
fldt
into
mov
sub
mov
fwait
mov
jle
mov
dec
mov
sbb
fbld
test
in
ljmp
pop
or
repz
loop
shr
imul
inc
mov
aaa
repz
xor
sub
fstl
inc
imul
mov
sbbb
test
push
cmp
add
aam
dec
cmp
jmp
sbb
sub
insl
clc
xchg
push
sub
cld
and
mov
jmp
mov
mov
ret
nop
xchg
push
or
cmp
push
and
loopne
movd
addr16
lods
in
pusha
popa
fisttps
xchg
push
je
ret
test
or
decb
ret
out
test
fiadds
mov
hlt
xor
cmp
popa
push
xor
push
xchg
mov
insb
push
cmp
insl
mov
pop
adc
and
sbb
xchg
mov
addl
cmc
stos
rorb
push
cwtl
xchg
mov
push
pop
in
sub
mov
lea
lcall
push
pop
lods
lods
mov
gs
sub
data16
loope
jp
add
push
add
dec
and
das
add
push
aas
fildl
enter
mov
mov
mov
imul
test
xchg
cmp
xchg
iret
jecxz
sarb
or
je
xchg
cwtl
cld
adc
movl
mov
test
or
and
mov
bound
imul
aad
inc
scas
add
cmp
out
sbb
mov
aad
std
or
and
push
nop
xchg
cmpsl
sub
movsb
adc
sbb
xorl
imul
fcmovbe
jl
lahf
jge
pushf
push
mov
dec
adc
fwait
pop
js
dec
cld
outsb
in
xchg
nop
xchg
mov
ret
inc
int
mov
jecxz
jns
sti
sbb
mov
aad
mov
mulb
in
pusha
xor
add
mov
stc
out
dec
mov
or
rol
pop
mov
jnp
gs
in
mov
xchg
mov
xor
out
fildl
loope
popf
faddl
mov
push
mov
or
and
shlb
imul
scas
or
push
bound
cmp
ret
inc
and
in
push
loopne
rol
hlt
sub
jmp
in
push
xchg
mov
lods
mov
shrb
xor
inc
inc
insb
imul
outsb
pop
dec
adc
xchg
sub
or
jnp
std
rolb
or
das
call
notl
in
jbe
call
icebp
mov
or
mov
pop
mov
dec
jns
lcall
popf
add
mov
sbb
orl
loopne
and
orl
add
or
repz
gs
adc
mov
or
fs
push
in
sub
mov
mov
aaa
test
adc
loope
in
and
pop
jmp
mov
mov
sti
les
adc
stos
sub
push
loopne
stc
test
inc
dec
pusha
mov
or
negb
insl
xlat
inc
cmpsb
pusha
popa
adc
in
loope
or
das
mov
stos
dec
mov
movq
in
push
mov
xor
dec
add
mov
movsb
insl
mov
jle
in
mov
fs
push
cmp
icebp
arpl
mov
leave
xchg
dec
add
push
lret
scas
push
xchg
mov
xchg
pop
sarb
outsb
xchg
loop
adc
cmpsl
gs
jb
sub
xor
lds
mov
std
fst
mov
int
fildll
pop
enter
test
lods
mov
or
lret
imul
nop
cltd
xor
mov
fistpl
push
sahf
add
imul
int
xorb
ret
dec
inc
pop
sarl
idiv
mov
test
ss
idivl
lds
xchg
ret
repnz
test
xchg
out
or
add
xlat
push
jnp
or
dec
jo
xchg
cli
arpl
out
subl
nop
cmp
xchg
aas
inc
int3
in
jae
adc
lcall
sub
repz
mov
mov
fildl
xchg
xchg
incb
icebp
test
hlt
jmp
lock
sbb
or
sbb
js
pop
inc
daa
jbe
dec
sahf
fwait
jno
xor
sbb
out
fisubs
adcb
shll
mov
xlat
bound
arpl
push
sbb
cmp
xor
mov
mov
xlat
scas
mov
inc
xchg
outsl
aas
xchg
xchg
gs
sub
mov
cltd
xor
rorl
push
cld
or
ljmp
je
mov
add
icebp
rorl
aad
mov
sbb
add
das
jg
sub
jge
sbb
cld
sbb
sbb
imul
mov
enter
sub
or
inc
mov
jbe
repnz
push
add
enter
ja
mov
adcl
add
mov
loopne
aad
mov
cltd
jo
test
mov
inc
in
or
sbb
mov
ljmp
xor
or
outsl
fidivl
dec
xor
and
sub
or
cmp
inc
mov
pop
or
je
cmpsb
xor
flds
scas
dec
int3
lret
sbb
inc
div
pop
lahf
dec
and
arpl
push
jmp
insl
aad
mov
movb
and
dec
les
out
movl
jno
iret
sbb
rorb
jg
xchg
fimuls
insb
adc
or
xchg
fcmove
pop
mov
fwait
cmp
and
add
mov
mov
inc
pop
cli
scas
jmp
mov
mov
mov
adc
es
outsl
adc
and
pop
rcrl
or
cs
jbe
dec
pop
pop
int3
jno
lods
mov
push
mov
sti
lds
dec
add
stos
lea
push
in
adc
add
xor
xor
loopne
add
inc
imul
addr16
shll
pushf
mov
adc
js
inc
fwait
cmp
push
xor
pop
ds
insb
stos
xor
fisubrs
fisubl
push
idivl
orl
cmp
or
test
pop
not
lods
or
fstpl
pop
add
jno
jge
add
leave
test
sbb
push
cmp
fnsave
mov
scas
sti
cmpsb
jne
dec
in
push
cmc
fdivl
repnz
xor
pop
imul
insb
out
xor
out
and
into
pop
mov
ja
inc
push
jecxz
lds
stos
pop
cmp
cmp
inc
orl
jecxz
push
add
mov
cmpsl
xor
mov
cli
outsl
stc
ret
jne
nop
pop
dec
scas
mov
jmp
mov
xchg
cmp
icebp
popf
popa
jnp
aas
movsl
mov
pop
dec
loope
adc
pop
sub
fnsave
sub
jnp
std
or
add
cmp
adc
mov
in
pop
sti
repnz
dec
inc
pop
cli
and
xchg
pushf
pop
stos
jns
xchg
loop
xchg
lds
pop
fidivrl
es
jecxz
repz
push
in
test
mov
add
xor
and
jle
push
xor
loopne
and
out
fs
lds
sbb
sub
dec
rep
rorb
mov
pushf
push
pushf
rolb
fs
jne
cmc
flds
popa
mov
gs
dec
add
adcb
int3
sbb
pop
mov
xor
push
push
mov
dec
pop
cmp
mov
fadd
cli
insb
xor
pop
imul
movsl
fisubrl
inc
and
jmp
push
xor
les
jmp
cmp
push
enter
nop
mov
test
test
sbb
decl
sub
inc
add
popa
sub
push
jae
ret
stos
mov
adc
clc
fcmove
xor
hlt
jmp
pusha
aas
sbb
xor
pusha
scas
clc
shr
pop
xchg
adc
inc
push
adc
test
in
flds
cmpsb
in
pop
dec
inc
cli
mov
xor
loopne
out
sarb
add
int3
push
mov
sbb
lret
loop
xor
push
imul
fs
or
clc
jle
pushf
ljmp
nop
push
call
imul
into
mov
imul
fcmovu
js
das
out
rcrb
mov
push
xchg
pop
dec
inc
outsl
push
enter
or
pop
jbe
subl
imul
cmp
lds
dec
popa
sub
sub
jl
push
lock
jmp
xor
fsubl
add
movsl
shrb
lods
es
pop
sarl
adc
push
out
gs
jne
je
xor
xor
andb
inc
stos
jle
std
out
sub
mov
addb
lahf
pop
xchg
insl
or
fs
adc
insb
fs
rcrb
sbb
xchg
fdivrs
cmp
pusha
aad
inc
loope
lret
movsb
pop
inc
fsts
sub
or
pop
pop
movsl
shlb
sbb
pop
cmp
repz
mov
jnp
pop
push
mov
div
dec
fadds
add
scas
mov
xor
ss
xlat
push
gs
jp
jbe
jle
inc
iret
push
inc
sahf
aas
aam
int
pop
lret
loope
dec
fnstsw
xchg
add
inc
hlt
jle
es
pop
sub
imul
out
add
cmpxchg
mov
mov
test
mov
lcall
cmp
mov
fisttpll
stos
lds
in
dec
and
mov
or
nop
imul
ficompl
and
push
loope
and
push
adc
fsts
clc
mov
cwtl
mov
push
lahf
jnp
adc
insl
cmovge
imul
cltd
pop
adc
int3
inc
cmp
dec
rorb
lods
add
dec
pop
dec
push
adcl
pop
fldcw
fisubrl
push
jo
cmp
mov
fwait
scas
sub
imul
aas
les
int
sahf
push
lcall
xchg
mov
inc
sbb
lock
sub
stc
mov
sub
dec
aad
and
cmp
ljmp
mov
into
loop
imul
push
negl
stos
scas
call
mov
xchg
xor
aas
ljmp
sbb
add
adc
or
jnp
mov
pop
shll
dec
xchg
mov
add
mov
fisttpll
mov
sbb
or
mov
lods
mov
and
dec
hlt
push
lahf
cmp
sbb
ljmp
aas
push
add
mov
repz
push
or
sub
out
push
and
cmp
cmpb
movsl
lds
pop
stos
daa
adc
out
arpl
ret
push
sub
and
xchg
mov
fistpll
mov
jnp
pop
sbb
mov
jle
in
fistps
mov
dec
int
xor
fildll
inc
outsb
mov
xchg
cmp
xor
bound
dec
xchg
pushf
daa
dec
aam
add
es
inc
mov
adc
xor
pop
cmc
sbb
movsb
or
aaa
mov
clc
dec
adc
iret
add
push
sub
in
mov
xor
push
adc
pop
adc
cmc
sti
outsl
outsb
sbbb
and
mov
js
iret
sub
popf
dec
and
adcb
lcall
addb
and
fdivrs
test
mov
fcoms
sbb
mov
inc
jno
sbb
mov
test
jae
ret
lods
mov
and
add
fmuls
sub
fiadds
mov
push
hlt
dec
sub
fstpl
bound
fcomps
lds
and
mov
push
xor
jmp
imul
dec
cs
inc
loopne
sub
aaa
xchg
es
dec
cwtl
data16
adc
mov
out
or
jge
lcall
ds
xor
movl
iret
imul
inc
push
int
leave
xchg
dec
jbe
scas
xchg
pop
add
stos
push
das
ret
lcall
loop
push
jne
clc
leave
imul
cmpl
pushf
movsb
mov
cmpsb
icebp
in
pushf
xchg
mov
es
mov
in
jne
sbbl
dec
inc
pop
popa
xchg
cwtl
scas
in
out
cmp
mov
xchg
ja
lahf
div
in
xlat
xchg
mov
jl
mov
fisttpl
popf
cmp
add
sbb
lods
push
ljmp
inc
scas
or
xlat
shll
adc
out
mov
mov
inc
popf
sbb
mov
inc
adc
cmp
dec
inc
cs
adc
test
in
cmp
cwtl
loope
dec
mov
fmuls
cmp
jge
shll
and
or
sti
sub
fmul
test
mov
add
push
call
jnp
ror
mov
mov
sbb
jp
adc
pop
pop
ja
push
mov
cmp
jo
repz
test
lods
dec
out
sahf
xchg
sub
or
jle
dec
xchg
popa
mov
rcl
xchg
outsb
pop
inc
cmpsl
cmc
into
stc
and
rorb
add
out
int3
pop
mov
pop
js
iret
out
lods
inc
adc
fcmovne
imul
mov
or
cmp
or
mov
xchg
repnz
mov
sbb
out
xlat
cmp
in
pop
lret
hlt
je
rclb
or
mov
int3
push
lods
mov
lea
cmc
dec
enter
push
clc
call
stc
mov
mov
test
jns
mov
push
fsub
leave
mov
mov
clc
pusha
push
dec
movsb
in
xor
dec
popf
dec
ljmp
xchg
mov
jo
push
jnp
shll
sbb
das
call
notl
adc
and
xor
pushf
cs
jl
fisttpll
pop
mov
adc
xor
xchg
jns
fcom
xchg
icebp
jle
xor
rcrl
imull
test
mov
fldt
inc
push
popf
in
add
sub
inc
dec
loopne
xor
jb
ja
mov
add
jae
sub
jns
insb
insb
adc
jo
sub
lret
idivb
and
lock
adc
pop
adc
pushf
cld
icebp
mov
add
and
pushf
jecxz
out
xlat
adc
rorl
lcall
mov
xor
ffree
movsb
out
in
and
je
inc
in
jne
loope
inc
ja
mov
push
test
sbb
pop
sub
xor
dec
clc
jbe
in
mov
cmp
mov
cmp
ljmp
sbb
inc
add
int
iret
pop
iret
hlt
loopne
add
sbb
je
jge
xor
xchg
push
mov
popf
push
xchg
xchg
pop
adc
jae
int3
xchg
xlat
push
icebp
jns
inc
shufps
data16
orl
dec
orb
sub
cmpsl
jnp
or
cmpsl
jo
aas
jno
lret
cmp
fcmovb
mov
movsl
enter
cld
and
sbb
outsb
jnp
pushf
arpl
cmp
mov
in
in
aad
jb
pop
push
jmp
call
push
adc
mov
inc
insl
xor
mov
cwtl
data16
cmp
mov
in
cld
dec
push
jb
xchg
std
mov
mov
and
ret
cmp
sub
int
ret
mov
sub
and
jp
sub
adc
mov
ds
imul
mov
push
xorb
cs
out
mov
sahf
adc
outsl
push
rcrb
cmpsb
in
inc
dec
movsl
cmp
cs
fsubr
call
ficomps
dec
jecxz
inc
int
pop
or
fdivr
adc
mov
in
leave
xor
bound
cld
test
push
pop
int3
loop
scas
xor
jg
repz
or
and
mov
mov
mov
movsb
xchg
and
mov
mov
ja
cmpsl
adc
or
jbe
mov
pop
cmp
hlt
add
dec
imul
xor
ljmp
out
push
dec
xchg
mov
pop
mov
movsb
jo
sbb
jae
cwtl
mov
std
sbb
rclb
fmuls
mov
and
mov
bound
hlt
cmp
loope
jmp
push
sti
push
popa
fst
jmp
sbb
adc
or
mov
inc
xlat
orl
lea
dec
rcll
lods
xchg
mov
into
mov
jmp
add
mov
push
or
in
imul
and
imul
out
lds
insb
movsb
mov
xor
pop
out
aas
jmp
xchg
xor
es
cmp
dec
push
movsb
cmp
pop
icebp
fidivl
pusha
cmp
repnz
and
push
add
aam
dec
adc
mov
mov
test
jg
dec
adc
lret
sub
and
cltd
push
pop
sar
popf
add
xchg
in
decb
loopne
push
fcom
scas
xchg
stc
cs
or
fistpll
subl
jg
pop
out
pop
and
rclb
imul
in
xchg
or
scas
lods
adc
add
dec
mov
stos
ds
jecxz
or
jecxz
ja
push
repnz
gs
leave
ds
lret
addr16
push
jnp
or
add
push
cmp
pop
pop
in
mov
jg
jmp
inc
mov
xchg
sbbb
repz
test
or
aas
out
stos
mov
jo
or
call
jnp
jns
or
pop
pop
xor
jns
test
arpl
fistpll
cmp
jae
sub
data16
fmulp
xlat
pop
rcll
dec
data16
jbe
xchg
rcll
and
stos
fnstsw
push
jb
fs
testb
mov
in
scas
adc
movsl
xchg
ljmp
pop
cmp
lret
stos
xchg
add
push
and
stos
ja
scas
loope
push
xchg
or
testb
pop
inc
fwait
jmp
dec
imul
ret
jecxz
dec
ret
jnp
mov
sbb
sbb
fwait
mov
and
sbbb
jmp
cwtl
jle
negb
xchg
ja
mov
in
imul
or
pop
push
lcall
jmp
fistpll
ret
pop
inc
and
jae
cli
mov
pop
insl
je
dec
mov
icebp
xchg
push
mov
inc
int3
ret
in
push
mov
sub
aaa
cmp
lods
xchg
int3
mov
outsb
aaa
add
daa
push
shll
xchg
or
adc
dec
insl
xchg
xor
mov
mov
push
push
jne
dec
scas
mov
mov
xchg
add
cmp
push
adc
inc
mov
xchg
pop
std
push
cmpsl
loop
pusha
cmp
cmp
pop
std
mov
lret
lret
adc
ja
mov
push
loop
outsl
adc
cmp
jmp
jecxz
into
pop
xchg
outsb
das
mov
iret
mov
adc
push
adc
fisttpl
mov
mov
aaa
sbb
jmp
push
jb
push
iret
cmpl
sbb
scas
or
push
inc
adc
ja
add
ror
or
pop
js
rorb
ret
sbbl
and
out
inc
pop
call
pop
movsl
lret
sub
pop
notb
xchg
subb
rcll
int3
pop
sbb
xlat
lahf
jno
inc
add
sti
int
and
xchg
aad
jb
das
and
adc
jno
push
jne
xchg
sub
sbb
out
adc
dec
mov
xchg
mov
stos
cs
enter
adc
cli
cmc
xor
or
mov
pop
addb
lret
test
cmp
mov
outsb
push
repnz
lock
cld
imul
xor
movsl
pop
je
scas
mov
pushf
add
sub
les
sub
imulb
mov
dec
cmp
hlt
lock
sbb
adc
mov
cmc
je
pushf
xchg
xchg
stos
sbb
add
xor
xchg
test
xchg
sbb
mov
mov
pushf
jge
arpl
outsl
in
pop
dec
and
jecxz
mov
lahf
inc
ljmp
stos
xchg
xlat
mov
and
sbb
lcall
pop
add
lret
sub
push
insb
movsl
push
pushf
dec
or
pop
jbe
mov
stos
rclb
iret
jmp
ficoml
das
pop
into
jle
xor
cwtl
stos
in
adc
es
adc
push
mov
sbb
pop
sbb
shr
and
mov
xchg
daa
push
mov
outsl
aas
cmp
mov
ss
jle
aas
mov
xchg
mov
jg
dec
pop
lahf
inc
mov
pusha
test
xor
les
in
test
or
ret
ret
dec
arpl
inc
push
decb
xchg
xor
push
xchg
mov
xchg
push
loop
pop
das
jle
mov
jmp
mov
outsb
jp
stos
rorl
push
repnz
xlat
jno
icebp
push
mov
sub
pop
inc
add
rcrb
cmp
push
lcall
loop
leave
push
xchg
in
xorl
ret
cli
movsl
out
dec
cmp
mov
inc
xor
and
lahf
das
and
push
pop
arpl
sub
scas
and
mov
popf
pop
mov
push
int
push
iret
mov
pushf
lahf
push
ds
movsl
pop
sbb
pop
adc
push
adcl
test
mul
leave
insl
mov
loope
sti
mov
int3
xchg
stos
scas
mov
add
mov
out
adc
icebp
adc
push
xor
mov
ja
xchg
cmpsb
mov
fldl2t
ss
fidivrs
pop
pop
bound
bound
inc
out
inc
ljmp
cltd
xlat
je
fsub
push
cwtl
lcall
scas
inc
xor
and
jle
mov
or
mov
imul
aad
out
lods
xlat
fstpt
pop
jmp
gs
push
rcll
imul
test
fldcw
in
cmp
sbb
mov
xor
mov
mov
mov
sahf
push
iret
icebp
fwait
xor
sarl
cmp
arpl
and
and
lcall
sbb
aam
sub
lret
push
fwait
mov
jecxz
test
ret
cmp
aaa
pop
popa
into
jge
nop
pop
push
cmp
mov
stc
loop
imul
xchg
test
mov
xchg
dec
adc
adc
iret
sbb
andb
aad
test
push
jp
nop
int3
and
inc
mov
cltd
jb
sub
cmp
mov
test
mov
in
fidivrl
mov
inc
in
fdivrs
clc
push
hlt
or
jg
fsubs
mov
lret
aam
jl
dec
mov
and
jbe
fs
and
pop
fcoml
sbbb
ja
mov
push
inc
mov
jmp
mov
sbb
js
jecxz
sub
aas
add
in
lods
les
insb
dec
aam
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
pop
inc
mov
mov
clc
jge
sub
xchg
jp
cmp
jp
decb
sub
es
sub
popa
fdivl
je,pn
fld
sbb
cmpsb
xchg
jae
xchg
pusha
mull
push
sbb
dec
dec
adc
in
arpl
mov
fnstsw
dec
pop
js
je
shl
sub
in
jecxz
sarl
negb
lahf
out
jb
jmp
sbb
outsl
jbe
and
int
incb
jne
push
out
aaa
sub
enter
lcall
mov
repz
in
jge
mov
cmp
loop
dec
sbb
sahf
int
push
out
stos
jne
les
xchg
int
fiaddl
jg
cmc
int
fs
jecxz
fadd
or
cmp
sbb
push
add
jns
test
pop
add
bound
xorl
out
add
dec
sbb
out
cltd
mov
and
jno
push
loopne
mov
int
pop
xlat
cmp
pop
sahf
addr16
js
ficoml
jbe
cmp
arpl
mov
jbe
fsubrs
xchg
pop
jmp
fiadds
mov
dec
xor
insl
fwait
jnp
leave
push
push
mov
pop
fsubrl
sub
leave
and
rolb
pop
jb
lahf
cmpl
scas
sahf
icebp
fmul
mov
and
imul
xorl
mov
in
mov
lahf
test
mov
fisubrl
pop
push
cmp
pop
jge
imul
std
push
pop
jns
and
add
dec
cmpsb
outsl
dec
pop
sub
mov
addr16
iret
sbb
xchg
daa
mov
sahf
sahf
ret
ljmp
fmull
inc
mov
les
mov
les
pop
pop
iret
jp
push
dec
outsl
bound
mov
push
dec
shl
mov
into
orb
ja
lahf
dec
test
je
jno
leave
fists
iret
adc
xor
mov
subl
stc
mov
ja
dec
mov
jnp
jecxz
xchg
loope
lods
outsb
xchg
dec
pop
sbb
dec
mov
jge
gs
repnz
mov
cltd
and
outsb
push
ret
inc
sub
xchg
ret
in
sbbl
xchg
mov
mov
inc
jge
mul
sahf
xchg
fsubrp
xorb
mov
andl
in
push
mov
jbe
xchg
dec
inc
dec
imul
mov
mov
enter
inc
jecxz
jnp
cwtl
add
sbb
ret
xchg
push
int3
or
repz
icebp
mov
pop
pop
or
or
mov
inc
outsb
loopne
fistps
imul
push
mov
sbbb
inc
xor
lods
out
inc
test
mov
pop
icebp
imul
push
pushf
data16
push
addr16
inc
scas
addr16
dec
cwtl
and
dec
xor
fcompl
cs
int
mov
sub
mov
daa
fcmovnb
loopne
inc
sbb
es
idiv
cmp
sub
mov
popa
loope
push
testb
stos
test
test
movsl
add
pop
push
mov
test
movsb
lret
fildl
out
or
jp
stos
dec
lods
in
mov
cmpsb
adcb
dec
and
dec
fidivrs
dec
push
mov
jp
xor
in
push
dec
fst
bound
lods
mov
iret
pop
push
xor
sbb
mov
and
pushf
xor
in
push
les
mov
xor
inc
pop
push
xchg
mov
sahf
cld
cmpl
iret
movsl
xor
push
ljmp
in
jns
fsubrs
fld
loop
js
popa
pushf
int
xor
xchg
enter
xor
idiv
into
xrelease
fldenv
sbb
pop
popa
adc
aas
jae
iret
int
repz
fistl
fwait
add
mov
inc
out
scas
ljmp
xor
mov
int3
mov
enter
ret
ds
and
out
loope
xchg
div
pop
hlt
out
out
add
jg
push
fistps
sub
xchg
lods
fwait
and
xchg
jge
mov
cmpsb
lods
in
jne
daa
lcall
push
cmp
push
xchg
pop
xor
cltd
inc
push
aad
aam
or
imull
push
test
jns
loope
or
lods
imul
cli
bound
push
pop
mov
xchg
xor
cli
inc
cmp
push
js
push
and
pop
mov
mov
andl
movsb
lcall
mov
xchg
sahf
test
ljmp
or
cmp
daa
and
dec
daa
adc
scas
pushf
jl
popa
test
mov
or
call
testb
orb
imul
inc
imul
adc
test
and
mov
mov
push
sbb
imul
and
fdivs
movl
test
xchg
cli
mov
jo
popf
ds
jmp
enter
pop
inc
lock
test
pusha
lock
addr16
pop
mov
insl
push
movsb
mov
jbe
xlat
insl
into
dec
add
adc
std
pop
out
repz
xchg
xchg
mull
and
idiv
dec
cmp
and
or
js
repz
jb
dec
xchg
mov
outsb
scas
adc
ret
int
cmp
ss
cmc
cmpsb
in
or
pop
rcrb
pop
and
aam
movsb
sub
fidivs
loopne
inc
dec
mov
mov
pop
mov
repz
test
add
es
rclb
int3
xor
pop
insb
ja
clc
fwait
mov
mov
out
ret
dec
leave
cmpsb
mov
add
rorb
pop
int3
cmp
or
xchg
jle
dec
xchg
pop
cmp
mov
ret
lods
xor
jmp
cmpsb
sahf
add
jp
out
fiadds
aad
in
fsubrs
ss
shl
add
xchg
dec
mov
cmp
cmpsb
sahf
mov
jl,pn
lods
icebp
ss
in
jge
jo
aas
test
or
sahf
bound
mov
and
ss
jmp
mov
cmp
fdivrp
adc
cmpsb
sbb
xchg
cli
and
mov
adc
jb
xchg
sbb
xor
mov
aam
inc
mov
and
push
cmc
pop
cmp
ret
dec
pop
cltd
ds
push
mov
or
outsl
jno
ret
mov
fldl
icebp
inc
rolb
dec
push
xchg
mov
ljmp
mov
and
lret
or
mov
sub
inc
jle
lret
push
jge
jmp
lcall
sub
jge
and
aaa
pop
incl
push
mov
xor
add
popf
mov
sub
aam
jp
fsubs
pop
ret
mov
shll
popa
cwtl
jns
ret
ja
subl
inc
lret
mov
mov
mov
test
es
inc
sbbb
push
push
pop
in
jae
cltd
adc
addr16
cmp
subl
and
pop
cs
jne
push
pop
xchg
icebp
iret
xlat
add
jb
mov
es
xchg
mov
or
test
lret
sbb
fistl
jb
mov
mov
and
push
or
andl
sbb
dec
js
mov
mov
inc
int
arpl
cwtl
jmp
mov
icebp
mov
sti
repz
test
negl
dec
add
dec
aaa
push
mov
movsb
xor
xor
ja
mov
out
call
and
push
pop
jbe
and
push
outsl
sub
cmp
mov
pop
test
inc
jmp
mov
inc
inc
adc
icebp
jle
adc
xorl
sarl
push
or
in
pop
cmovl
mov
loop
add
out
push
jmp
add
dec
icebp
push
adc
insb
xor
lret
adc
xor
push
nop
outsb
sub
jb
add
sbb
jecxz
aam
jne
stos
xor
add
cmp
push
imul
or
shll
cmp
xor
and
shl
xor
enter
outsl
jbe
and
rolb
xor
sbb
jmp
inc
shlb
pop
mov
pop
jbe
int3
outsb
ficoml
sbb
es
push
inc
test
xchg
js
icebp
cmpsb
xchg
lahf
push
jl
jge
ret
movsb
and
mov
xchg
shlb
mov
fs
xor
orl
test
lcall
push
cmpsl
mov
pop
mov
xor
cmp
sub
imul
xor
int3
cmp
mov
fwait
ret
fmuls
jg
imul
dec
aad
mov
daa
out
out
ljmp
and
push
push
call
and
mov
or
ljmp
mov
in
mov
enter
mov
test
mov
jp
ret
leave
xor
cmp
sub
ljmp
cmp
xor
jo
daa
adc
movsb
xchg
mov
add
jge
add
dec
mov
mov
std
dec
inc
inc
shr
jae
adc
add
sbb
imul
adc
cmp
in
add
bound
out
xchg
push
pop
sub
xchg
rclb
adc
lret
mov
dec
loopne
jnp
imul
sti
cmpsb
xchg
repz
inc
pushl
sbb
mov
dec
or
mov
inc
xor
jne
lahf
pop
ret
test
rcrl
ficompl
adc
jle
push
xchg
mov
mull
mov
test
pop
pop
inc
in
lds
jno
mov
insb
jb
dec
lret
lcall
movsl
adc
dec
ror
mov
and
jb
and
push
dec
test
add
sti
sahf
insb
xchg
bound
inc
loopne
mov
lcall
cmp
test
xor
insl
jne
ret
bound
jle
mov
push
sti
mov
inc
mov
push
sbb
pop
jne
sbb
sub
xchg
or
inc
jae
adc
push
mov
jbe
dec
pop
xchg
loop
pushf
shr
aaa
jo
push
jp
add
hlt
mov
mov
rclb
jns
fwait
dec
adc
xor
mov
mov
push
cmpsl
sub
aad
push
and
and
icebp
inc
ss
aad
xchg
fstl
mov
pop
pusha
notl
daa
mov
fs
add
std
aas
cmp
cwtl
cltd
or
and
popa
mov
rcl
jnp
test
testb
jle
cmp
jnp
jge
adc
inc
or
push
push
push
fstpl
es
je
aad
xchg
adc
mov
push
sbbb
sub
sub
jp
sub
sbb
push
pop
repnz
cmc
fisttpl
mov
iret
xor
push
inc
popa
loope
pop
sub
jnp
adc
popa
cmpsb
xor
mov
and
in
and
loope
inc
push
sarb
je
loopne
add
push
out
jge
std
jo
nop
or
mov
das
fldenv
xchg
js
pusha
aaa
repz
inc
or
inc
orl
fldcw
adc
push
mov
dec
cmp
jae
pop
push
adc
pop
mov
or
jge
inc
jecxz
inc
or
inc
pop
mov
lahf
or
xor
notb
push
jno
push
xor
lret
rolb
jb
inc
fidivrl
mov
sub
sbb
aas
or
inc
adc
mov
and
stos
neg
daa
in
addr16
dec
xlat
sbb
cmp
daa
mov
dec
xlat
popf
fwait
xchg
lds
xchg
lret
imul
sub
outsl
adc
push
mov
out
in
push
mov
jne
fidivs
xor
sahf
mov
call
jge
xchg
fdiv
xchg
popl
mov
xor
xchg
xchg
push
inc
lock
in
jl
stos
sub
fisttps
sbb
test
lea
loopne
adc
enter
roll
dec
xchg
push
sub
mov
repz
pop
cmpsl
stos
inc
in
cmpsl
lret
subb
movsl
loop
mov
fs
stc
xchg
push
sarb
cld
shrl
jno
and
or
lock
adc
test
mov
xchg
mov
mov
orl
dec
cld
pop
shlb
mov
jg
orl
loop
adc
insl
testb
orl
sbb
out
or
scas
add
popa
jmp
fidivs
push
iret
arpl
fildll
dec
push
not
adc
std
sub
rorl
xchg
aas
inc
dec
int3
push
outsb
xchg
dec
cli
add
sahf
sbb
xor
jbe
and
push
pop
mov
lcall
daa
jge
icebp
notl
cmp
push
and
or
adc
jne
mov
inc
cmpsb
mov
testl
pusha
xor
push
add
repz
std
in
sahf
sub
stos
es
cmp
addr16
das
pusha
std
sarl
es
daa
add
sbb
lods
in
sbb
or
pop
ficompl
test
mov
push
pop
add
cwtl
ljmp
xchg
sbb
jno
inc
test
sub
dec
adc
mov
ljmp
push
jns
arpl
mov
insl
jnp
call
dec
pop
fwait
movsl
and
sahf
cmp
ret
mov
push
dec
add
pop
xlat
pop
and
mov
aas
sahf
repz
enter
jmp
or
das
loopne
jp
push
sub
jecxz
mov
decb
popa
xor
pop
xchg
sbb
sub
sbb
adc
lahf
cmpsb
jb
popa
jae
dec
in
push
mov
int
fwait
rorl
repz
fisubrs
xor
pusha
dec
rolb
and
call
mov
cmp
xchg
int
pop
cmpsb
sub
sbb
adc
push
push
inc
jae
ret
jle
pop
dec
mov
sbb
dec
fisttps
sbb
mov
fucom
popa
inc
pop
mov
repnz
mov
jae
xor
cmp
add
imul
dec
adc
xor
addr16
push
rolb
imul
cmc
mov
mov
mov
jae
test
outsl
popf
pusha
sti
scas
add
sahf
ret
mov
mov
pop
dec
sarb
add
repnz
imul
cli
mov
in
xchg
dec
fildl
cmpsb
mov
sahf
das
cmp
xor
sub
aas
sti
icebp
aas
out
push
and
cmp
mov
test
setnp
inc
sub
jmp
pop
add
adc
int
jne
mov
dec
or
jecxz
or
hlt
jb
outsl
jecxz
jbe
sbb
push
bound
inc
arpl
insl
mov
test
inc
mov
mov
test
shll
xchg
lret
mov
dec
jae
jle
or
aam
lcall
mov
call
roll
leave
decl
faddl
sahf
hlt
xor
enter
shl
out
dec
add
cmc
fisttps
mov
jnp
fs
in
dec
in
repnz
jecxz
mov
cwtl
add
iret
fsubrl
dec
mov
imul
daa
aad
xchg
cmp
add
dec
push
add
push
repz
fstps
ret
insb
lock
in
cmp
inc
les
sbb
adc
cmp
jge
xor
out
xchg
dec
jo
jecxz
fcom
lods
not
mov
pop
out
add
aas
enter
mov
xchg
xor
mulb
inc
fildl
shl
addl
cld
sbb
movsb
pop
adc
push
test
rorb
mov
outsl
push
loopne
and
jl
fmull
lcall
and
pop
hlt
xor
imul
rcrb
jnp
cmc
push
in
xlat
cmp
mov
fstpt
movsl
sbb
ja
mov
mov
cld
das
loopne
xor
jo
adc
jg
loopne
js
lods
cmp
nop
push
cmovp
es
js
pop
xchg
sbb
adc
out
mov
mov
scas
mov
jp
add
mov
mov
mov
and
inc
repnz
ds
repz
int
lea
ficoml
jle
xchg
sub
ss
ds
adc
icebp
and
pop
mov
nop
add
test
xchg
out
push
jo
out
je
sahf
lds
fiaddl
in
xlat
dec
idivl
cmp
or
ljmp
mov
je
and
cltd
outsl
dec
scas
push
push
imul
or
dec
shll
jno
push
sbb
sub
push
push
adc
lds
mov
lret
jp
sub
mov
add
sbb
sti
mov
jl
rcrl
call
dec
in
out
and
xchg
add
lea
ror
inc
test
int
test
jp
push
fcoms
sti
xchg
lds
cwtl
mov
dec
xor
jle
push
sbb
insb
pop
sbb
sub
leave
push
insl
or
cmp
in
aas
pop
cmp
cli
jb
xor
enter
xchg
mov
cmp
push
out
inc
movsl
outsb
mov
push
dec
sub
jo
cmp
js
je
xchg
push
stos
sub
fnstcw
mov
mov
fsub
movsl
sub
inc
aaa
stos
in
sub
push
or
adc
sbb
jl
adc
leave
fsub
add
pop
cmp
xchg
jle
jecxz
xchg
aam
int3
mov
test
jns
mov
dec
ja
mov
xor
push
jo
fcmove
push
cmc
inc
roll
adc
popa
push
cmpl
or
iret
loop
inc
adc
rcll
mov
daa
cld
lock
mov
sbb
rorl
jle
les
rorb
hlt
inc
mov
sahf
xchg
cmp
arpl
jge
and
int
cltd
dec
adc
addr16
int
xor
fsub
xchg
pop
jb
not
ss
xchg
fdivrs
add
clc
dec
insb
scas
push
mov
xor
test
adc
add
sbb
xchg
roll
inc
push
dec
pop
or
in
mov
aad
mov
outsb
xchg
in
jo
mov
jle
movsl
int3
or
jp
jae
adcl
xor
mov
sarl
mov
aam
out
repnz
jl
out
cmp
fisubs
jmp
cmpsl
loopne
les
jne
int3
cmp
ficoms
arpl
jmp
sbb
mov
stos
add
mov
adc
lds
std
jno
push
push
xor
dec
push
clc
fisttpll
scas
ds
push
std
or
push
movsb
push
push
mov
mov
inc
into
subl
push
mov
xor
sub
cld
dec
pushf
push
insb
std
mov
fwait
xlat
dec
mov
lea
shl
push
mov
push
pop
stos
jbe
jo
inc
pop
push
popf
jmp
outsb
ret
jbe
fcmovnbe
jae
mov
cmpsb
mov
std
ret
leave
jne
pop
mov
loop
mov
jnp
dec
orb
bswap
and
xor
cmp
cld
cld
cmc
out
leave
ficomps
cs
jmp
xor
movsb
mov
dec
mov
fsubl
gs
fwait
lea
dec
pop
jns
stos
mov
xor
js
js
nop
insb
push
orl
pushf
xlat
lahf
jbe
cli
imul
clc
xchg
cltd
xlat
or
mov
shlb
cmp
inc
xchg
mov
jle
cmpsb
aad
jp
inc
inc
xchg
xlat
xor
pop
lods
and
fimull
sbb
jo
jns
mov
or
in
mov
popf
das
and
xor
clc
imulb
jmp
mov
push
jnp
out
jo
ret
xor
lds
cwtl
jno
push
adc
jg
lods
or
in
dec
adc
inc
fs
in
jns
loopne
in
or
test
scas
dec
xor
popa
bound
xlat
movsb
aas
inc
push
lcall
lret
lret
push
lods
adc
and
notb
mov
pop
push
dec
inc
xchg
sbb
inc
loop
mov
mov
push
out
stc
or
in
test
jmp
xor
std
addb
mov
js
fdivl
xor
dec
sub
popa
cmp
rcl
or
mov
pop
mov
jl
testb
pop
push
das
pop
jns
xlat
roll
in
dec
rcll
inc
lods
sub
rorb
mov
imul
fiaddl
add
push
or
mov
mov
shlb
loop
add
imul
sub
scas
fdivrl
out
icebp
jno
movsb
inc
aam
sahf
push
dec
insl
inc
mov
push
nop
pop
add
repnz
call
insl
jp
or
ss
jecxz
repz
mov
xchg
stc
mov
cwtl
fcompl
sub
insl
inc
push
faddl
int3
dec
mov
cmp
jle
or
jl
xor
enter
sbb
mov
jnp
fidivrl
rcr
div
call
outsb
lea
jnp
insl
adc
es
and
out
mov
pop
mov
xchg
call
xchg
or
mov
addl
cld
sbb
scas
jl
pop
imul
popa
pop
xchg
lret
push
xor
in
ret
enter
cmp
xchg
mov
call
fidivl
aaa
cmp
in
lcall
popa
enter
loope
inc
scas
stos
fs
pop
fwait
and
add
or
mov
mov
or
xor
xor
sub
sub
jo
sub
icebp
pop
jae
jl
sbb
negl
aas
xor
add
xlat
sahf
movsl
push
mov
lret
lahf
cmpsb
ljmp
dec
jmp
mov
mov
jae
pop
and
rcl
mov
adc
sbb
lret
inc
in
cli
pop
pop
imul
leave
loop
testb
aas
daa
icebp
jnp
add
sub
pop
movd
rcrl
ja
insb
repz
sbb
lcall
adc
xchg
jl
rolb
dec
mov
xchg
or
loopne
movsl
push
pop
aaa
sarb
jne
mov
add
add
dec
idivb
outsl
je
repnz
dec
rclb
ror
and
arpl
in
es
lahf
sbb
push
xor
cmp
mov
pusha
add
mov
lods
xchg
sbb
ror
xor
jmp
or
or
imul
xchg
outsl
dec
push
pop
adc
push
imul
jg
test
mov
or
fstpt
in
mov
fildl
das
es
add
daa
subl
test
es
mov
and
fwait
xor
gs
out
dec
push
loop
mov
clc
cmc
mov
lea
pop
repnz
rcll
xor
fcoms
movsb
and
mov
push
subb
roll
xchg
xor
xchg
fxch
daa
imul
push
sub
jne
call
fbstp
arpl
mov
mov
les
mov
jge
xchg
adc
psadbw
pop
stos
mov
inc
push
cmp
and
mov
lods
and
pusha
xchg
jmp
test
out
pushf
cs
mov
push
push
mov
mov
mov
and
inc
dec
pop
iret
push
imulb
jmp
cmp
cmpb
lret
popf
sub
fwait
inc
inc
mov
jmp
dec
in
add
int3
hlt
jp
sbb
jns
je
xor
pop
test
mov
push
mov
test
sarb
push
jg
sbb
stos
or
or
bound
xor
aas
fwait
mov
sbb
jns
lret
jmp
xchg
cmpb
push
lea
cmp
sarl
insl
nop
ja
sti
cmpsb
aad
or
insl
adc
push
jns
aam
push
pop
stos
loopne
movsb
addr16
jns
addb
test
mov
xchg
adc
mov
jns
pop
ljmp
sub
bound
mov
and
pushf
or
or
push
imul
dec
jl
add
imul
mov
pop
into
cmp
mov
mov
call
fsubrs
cwtl
cmpsl
lea
addr16
fwait
repnz
insb
mov
dec
bound
mov
jno
in
and
cmp
push
ljmp
jns
add
std
and
push
add
and
loope
inc
pop
sub
mov
fidivl
push
xchg
jae
nop
push
inc
xchg
mov
xor
xor
int3
mov
int
mov
push
cmp
mov
cmpsl
mov
lahf
xchg
dec
dec
push
jne
addl
fbld
push
jge
push
mov
bound
sub
sbb
aaa
pushf
mov
fwait
std
repnz
aas
rcrl
mov
cmp
insb
or
jp
out
mov
rolb
jecxz
icebp
mov
call
jp
sub
ljmp
jns
jnp
int
mov
les
jnp
inc
inc
nop
sahf
jmp
cld
jge
cmpsl
jle
add
add
in
es
lods
jnp
aaa
adc
dec
shrb
sub
pcmpgtd
clc
jge
not
xchg
jp
push
icebp
lret
movsl
push
in
lods
jb
mov
adc
rolb
insl
ret
scas
fmuls
je
mov
faddl
out
mov
test
aaa
sbb
push
hlt
data16
mov
cmp
cltd
mov
es
jmp
f2xm1
in
leave
lret
sub
add
in
nop
fstpl
inc
mull
inc
adc
fsubrs
repz
daa
repnz
pop
aam
daa
mov
push
mov
push
pop
outsl
ret
out
or
or
push
addr16
mov
scas
scas
testb
lret
popf
ljmp
and
sub
push
pop
push
add
jno
aam
xlat
inc
loope
adc
shrb
sbb
xor
insb
mov
xlat
test
in
mov
cmp
xorb
test
jnp
aaa
loopne
push
cltd
int
dec
out
inc
les
pusha
in
jo
mov
and
shll
rcrl
int3
aaa
rcrb
rolb
repnz
cld
in
sub
fxch
les
inc
ljmp
ja
mov
xor
insb
es
mov
lods
jle
fisubrl
mov
sub
adc
push
sbb
ret
add
cmp
loopne
out
push
outsb
outsl
test
insl
pop
adc
push
pop
sub
dec
pop
or
xlat
push
popa
out
sbb
xor
out
mov
jp
faddl
scas
popa
cwtl
mov
add
es
jae
xchg
mov
sbb
xchg
mov
call
jbe
scas
mov
pop
lret
push
repz
divl
xor
ret
cltd
scas
cmp
xchg
pminsw
sbb
out
icebp
out
dec
jmp
xor
mov
mov
jg
inc
pop
dec
push
mov
ret
aad
fadds
push
nop
imul
out
jnp
jnp
fwait
mov
cmpsb
inc
push
mov
mov
in
addr16
push
sarl
push
mull
inc
es
jne
scas
mov
divl
gs
sahf
pop
int3
hlt
cmpsb
insb
cmp
xchg
inc
mov
xchg
loope
les
add
cltd
pop
les
stos
and
aad
add
xor
adcb
addr16
shlb
push
push
or
cmpb
daa
outsl
fiaddl
inc
fcompl
pop
sbb
jge
and
fs
ret
loopne
hlt
push
pop
add
ret
jbe
sub
incl
ljmp
stos
dec
mov
cmpb
or
push
mov
es
add
mov
mov
push
jne
loopne
div
cmc
push
lods
insl
dec
xor
mov
push
fnsave
xor
enter
pop
incl
test
cltd
xor
inc
lretw
add
mov
addr16
rcr
push
xchg
sub
adc
fildll
cmpl
cmpsb
es
cs
std
pop
movsb
into
mov
scas
sub
mov
push
pop
xor
cmp
int3
scas
push
cmp
dec
dec
jp
fwait
inc
loope
outsl
xorb
xchg
adc
sbb
xor
lahf
scas
cmp
mov
and
jne
mov
sti
inc
lcallw
lock
fdivs
mov
push
xchg
pop
pop
push
xchg
lahf
fstps
pop
pop
pop
bound
cmp
ficoms
ret
pop
jns
inc
aad
popa
ja
fcompl
popf
outsl
pop
test
daa
les
jle
sahf
xchg
xor
test
ret
add
cmp
push
setle
inc
jmp
cmp
mov
dec
scas
lock
mov
std
xchg
fwait
jecxz
or
mov
shrb
call
pop
std
lcall
dec
mov
adc
sbb
cmc
add
jmp
call
cmpb
and
arpl
xor
xor
mov
adc
pop
daa
cmp
insb
in
add
into
cmp
sub
jo
hlt
lods
xlat
test
sbb
mov
movsb
lea
push
loopne
movd
lea
xchg
lock
sbb
mov
lea
add
mov
cmp
mov
shrl
int3
sar
pop
scas
loopne
aaa
sub
int
mov
std
lds
xchg
adc
lret
ret
loop
mov
fwait
sahf
into
daa
sbb
push
and
outsl
insb
sbb
jp
mov
scas
fwait
pop
sbb
scas
cmp
inc
popf
aaa
rcr
dec
sub
or
adc
fmuls
inc
stc
dec
pushf
cmpsb
adc
cmc
mov
dec
push
pop
jle
cltd
or
iret
call
sbb
int
notl
roll
jl
icebp
xchg
aam
xchg
stc
xchg
adc
cmp
in
aas
cwtl
adc
imull
and
fisubrl
fwait
and
js
aam
sub
inc
pushf
leave
cmpl
lret
pop
push
sub
push
cld
gs
mov
inc
cmp
pop
data16
scas
xor
fdivl
mov
lea
push
pop
lds
jae
shrl
mov
jmp
les
adc
dec
int3
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
movl
add
push
movl
xor
mov
push
mov
or
mov
mov
xorl
xor
andl
push
mov
add
orl
mov
sub
mov
sbbl
test
movl
je
mov
adc
mov
mov
mov
sub
xor
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
adc
mov
add
mov
xor
add
add
mov
mov
add
mov
xor
xor
add
or
mov
mov
addl
jmp
inc
mov
roll
sti
jne
adc
fiaddl
jp
add
fs
xlat
push
xor
mov
bound
inc
imul
test
icebp
fistpll
xchg
jb
jno
cli
mov
inc
jle
repz
fsubrs
outsl
push
bound
sbbb
imulb
lret
pop
or
mov
es
ret
cmp
shll
sbbb
popf
push
lods
lea
and
mov
cmp
std
fnsave
or
inc
cli
outsl
negl
mov
sti
sub
aam
inc
xchg
sbb
mov
aaa
dec
orl
push
ja
lock
xor
push
and
in
inc
fs
call
insb
pushf
loope
adc
xchg
dec
je
dec
scas
dec
mov
ret
add
pop
ja
sbb
jecxz
mov
push
jb
out
inc
xor
dec
sub
push
pop
xchg
push
sbb
mov
fcoml
jmp
aas
sarl
test
or
jb
mov
dec
cmc
mov
cld
xor
int3
cmp
fsts
imul
mov
push
repz
adc
push
lret
mov
es
js
xor
ffree
pop
sbb
cmp
jo
add
mov
adc
add
jge
lods
lods
cs
add
lret
mull
pop
movsl
lea
in
lahf
fistl
cmp
outsb
push
add
fs
adc
pop
push
scas
adc
in
or
xchg
orl
sbb
je
es
mov
sub
sbb
pushf
inc
mov
jnp
fsubs
out
inc
nop
into
bswap
das
add
in
mov
xchg
lock
lods
hlt
test
gs
daa
rorl
inc
sub
xor
and
mov
mov
dec
outsl
inc
pushf
out
or
xor
aaa
fsts
je
jle
push
test
jg
push
jae
push
sahf
aad
aad
push
sub
sti
cmp
insb
bound
in
repz
imull
jmp
shll
xchg
jl
xor
pop
dec
sarb
or
es
inc
ljmp
dec
or
xchg
frstpm(287
pop
flds
inc
cvtpi2ps
push
adc
xchg
or
adcl
xchg
test
push
int
or
cmp
rol
cmp
xorb
push
enter
mov
xor
sar
sbb
inc
and
movsb
lods
in
lea
jb
xor
fs
or
xor
inc
sbb
add
mov
mov
and
test
push
into
push
and
adc
outsl
pop
cmpsb
xchg
repnz
add
mov
mov
into
scas
xchg
out
mov
inc
xchg
jmp
lcall
dec
sbb
xor
add
or
cmp
jmp
lods
leave
sub
cmp
sbb
repz
arpl
in
sbb
mov
mov
dec
mov
push
incb
jno
nop
pop
dec
cmp
push
shll
fiaddl
hlt
dec
lds
ficompl
std
icebp
roll
add
int3
test
mov
or
mov
hlt
mov
mov
lea
mov
sbb
mov
mov
es
mov
cmpsb
or
xor
sbb
out
cmpl
lods
mov
clc
mov
es
and
xor
jae
inc
insb
push
sub
scas
and
mov
imul
iret
cli
jge
jbe
int
xchg
jno
dec
out
jge
pop
pop
stos
xor
jge
mov
or
add
fsub
testl
pop
and
mov
push
iret
shlb
bound
movsb
pop
mov
fdivs
ja
push
in
cmc
or
xchg
push
pop
cmpsl
dec
cli
lds
andb
mov
loopne
dec
int3
imul
lret
repz
aas
or
and
cmp
test
xchg
shll
test
jge
add
fimull
pop
lods
dec
push
jge
mov
into
xor
sbb
inc
jns
mov
jne
xchg
repnz
adc
mov
sbb
add
cmp
dec
es
dec
pop
fsubrl
adc
loopne
hlt
push
imul
test
scas
or
fs
movsl
xor
sub
pushl
popa
lea
pop
das
add
dec
andl
xchg
adc
pop
sub
pop
pop
fsts
loopne
pop
faddl
out
hlt
jb
add
add
jb
adc
cmp
pop
mov
push
jno
shrl
loopne
mov
test
lds
mov
mov
test
xlat
outsb
loop
mov
imul
sbb
popf
mov
cmp
sub
xchg
push
or
stc
dec
xchg
out
outsb
sbb
call
lret
sbbb
pop
gs
sub
or
cmp
stc
dec
cld
sub
cs
repnz
iret
popf
pop
add
bound
and
je
aaa
push
cmpsl
dec
loop
mov
popa
mov
adc
cmp
fimuls
or
jge
push
flds
sbb
cmpsl
clc
in
dec
mov
repnz
shlb
fcompl
ja
jecxz
xchg
ljmp
cld
sub
pop
rcr
nop
and
sbb
aaa
orl
loopne
js
leave
cmp
stos
cmp
jl
or
ffreep
cmp
mov
add
icebp
scas
adc
outsl
mov
test
push
into
mov
sub
pop
out
adc
cltd
lods
jbe
fisubl
shlb
gs
out
movnti
popa
fldenv
cmp
rcr
rorl
mov
das
xor
sub
test
mov
and
push
xchg
push
jle
lds
loopne
xchg
loopne
mov
and
push
push
outsb
call
movsl
jno
jae
mov
sub
je
pop
sub
pusha
into
es
push
sub
shll
mov
pusha
pop
sub
jne
or
xor
aad
jo
sbb
roll
cltd
rcl
xlat
ljmp
mov
mov
loop
cmp
sahf
inc
push
repz
xor
adc
out
or
xor
stc
lret
mov
xor
jbe
arpl
pop
fcomps
lock
js
fisubl
adc
insb
sub
mov
fadd
mov
cmp
cli
sbb
xchg
or
test
xchg
sub
jno
mov
push
mov
jp
inc
jg
inc
mov
add
inc
push
adc
add
sub
lods
jne
shrb
ss
dec
out
sub
cwtl
and
stos
test
gs
mov
xchg
push
insl
mov
or
daa
shll
aad
push
cltd
xchg
in
mov
js
inc
repz
lods
adc
and
lock
cmp
loop
inc
into
push
adc
aad
nop
ret
adc
mov
adcb
cmpb
mov
pop
dec
jne
mull
mov
jo
cmpsb
jns
popf
pop
out
push
add
js
cmp
mov
inc
shll
adc
cli
cmp
data16
push
addb
arpl
mov
inc
mov
fwait
and
pop
aad
jnp
movsb
insl
ljmp
in
push
aad
adc
into
xchg
mov
enter
aam
loop
mov
loopne
scas
aad
popl
add
sbb
lds
je
insb
adc
enter
dec
jno
jmp
leave
xor
mov
call
and
iret
out
jge
or
js
cld
dec
adc
xlat
mov
xchg
insb
sub
outsl
addr16
and
mov
ja
inc
aad
fists
xlat
mull
sub
and
fcoml
pop
sti
test
lods
push
inc
mov
jecxz
push
pop
push
scas
fsubrs
rcr
dec
les
es
ret
out
jno
mov
pop
sbb
icebp
mov
adc
data16
inc
outsl
mov
arpl
pop
mov
shlb
jns
push
sbbb
hlt
cmpsl
fsts
shl
inc
mov
insl
sub
mov
or
imul
outsb
jnp
aas
lock
mov
sub
mov
pop
adc
add
test
pop
sub
test
cmp
outsb
sbb
and
mov
int3
pop
pop
cmp
fwait
test
out
push
inc
scas
mov
jg
stc
pop
sub
jb
jle
js
xchg
mov
in
fs
loopne
out
xor
jl
xchg
leave
add
jecxz
mov
and
sub
sbb
fstl
sbb
dec
testb
jl
aaa
or
movsl
stos
bnd
loopne
shl
dec
dec
popf
popa
inc
dec
jl
xor
in
mov
sbb
mov
das
fmuls
loope
and
outsl
add
jmp
cmp
repnz
aam
dec
push
loope
pop
mov
mov
mov
pop
data16
dec
aad
mov
cmpsb
sub
arpl
dec
rol
test
outsb
cmp
dec
fdivs
out
and
and
or
or
mov
xchg
jp
xor
lcall
sub
pop
data16
push
dec
je
in
adc
xor
push
movsb
dec
add
int
arpl
push
sub
pop
sbb
es
addl
icebp
add
xorb
inc
cmp
lret
lds
test
jle
push
aaa
push
js
sub
and
fsubl
cli
nop
sub
test
cli
scas
pop
pop
lods
out
rcll
bnd
adc
aaa
popf
push
test
stc
add
jle
in
mov
int3
xchg
adc
dec
shrl
sub
in
xchg
inc
add
jle
popa
or
jl
fiaddl
les
inc
nop
push
outsl
sub
push
mov
xor
ljmp
repz
jne
xor
xchg
loopnew
ss
push
inc
xlat
sub
mov
xor
xchg
inc
in
cmp
add
lods
sub
cmp
mov
pop
mov
jge
bound
loop
mov
xor
inc
jge
xor
int3
pop
imul
ss
int
xchg
or
xchg
jmp
hlt
jmp
jno
inc
cmp
or
arpl
stc
jecxz
mov
fwait
in
xor
out
test
outsl
shrl
push
rcl
and
pop
pop
sbb
arpl
or
dec
xor
adc
pop
fwait
add
jg
cwtl
add
xor
cmp
mov
cmp
mov
ja
jb
dec
movsl
movsb
idivl
jmp
and
jb
mov
pop
pop
pushf
ja
out
xchg
popf
gs
imul
sbb
pop
dec
mov
or
lret
xchg
adc
and
push
js
push
adc
not
rorb
std
xchg
pusha
ret
repz
dec
xor
cld
lds
dec
sub
clc
pop
jge
xorb
mov
cmp
adc
sbb
sub
xchg
aam
outsl
jo
and
pop
inc
push
scas
je
cli
je
andb
ret
call
jb
popa
shrb
adc
repnz
inc
sti
js
iret
xchg
xchg
cmpsl
enter
adc
fs
cmp
incl
xchg
xchg
mov
lret
mov
adc
loope
enter
jp
inc
dec
pop
mov
mov
adc
xor
xor
cmp
push
lret
fmull
loop
mov
jno
test
and
test
mov
movsb
hlt
cwtl
popa
ds
arpl
out
xor
dec
clc
scas
test
into
jmp
xor
out
loopne
stos
pop
data16
idivb
jbe
inc
lret
xlat
xchg
leave
push
icebp
outsl
maskmovq
testl
stos
mov
daa
das
mov
in
jle,pt
and
divb
ss
fisttpll
and
mov
nop
mov
push
push
fldl
pop
arpl
movsb
mov
xor
or
bound
hlt
dec
sub
aas
mov
sub
xchg
mov
jmp
mov
mov
mov
cmp
ljmp
popa
stos
jo
sti
jge
scas
cmp
stos
scas
bound
fwait
lods
and
xchg
push
adc
mov
push
sub
sahf
cmp
jle
pop
gs
jl
in
cmp
mov
mov
xchg
cmp
add
mov
mov
test
ljmp
or
into
lcallw
hlt
stos
insl
or
loope
in
cltd
cli
setge
mov
mov
imul
add
lods
pop
sub
das
adc
push
sub
cmp
jnp
xor
push
or
sbb
and
stc
push
or
lods
pop
sub
inc
into
mov
jecxz
push
mov
push
jg
xchg
addl
les
mov
jbe
adc
test
std
inc
dec
sbb
jae
add
frstor
inc
lahf
cmp
movsl
std
xlat
jl
sub
test
fwait
lret
xchg
in
iret
into
dec
add
fs
jge
xlat
mov
inc
ja
cmp
gs
into
pop
or
push
subl
icebp
xchg
jge
lock
outsl
sarb
stc
ljmp
mov
addl
inc
or
popa
movsb
sarb
mov
mov
int
push
inc
out
and
testl
adc
out
decb
mov
ds
mov
push
jb
out
dec
and
push
repz
ret
test
daa
popf
xor
scas
pusha
or
add
ror
add
insl
sbb
fs
jg
and
inc
xor
push
inc
aam
sbbb
fadds
adcl
iret
insl
mov
fimuls
adc
add
repnz
test
pusha
mov
lea
andl
dec
mov
lret
arpl
lds
int
jg
loope
pop
aaa
div
bound
ret
int3
add
xor
dec
lds
inc
inc
inc
out
rcrb
sbb
cmpsl
sbb
pop
cwtl
xor
adc
sbb
ds
out
jg
cli
xchg
or
mov
adc
es
aad
or
repz
int3
ret
and
fisttpll
jno,pt
fiadds
dec
call
dec
or
imul
shll
scas
mov
test
stos
es
or
cwtl
push
and
pop
mov
mov
test
pop
clc
or
mov
fcmovb
lock
enter
fldenv
je
pusha
cmpsl
das
and
push
ja
fimull
mov
je
fsubr
pop
stc
jl
push
adc
or
pop
adc
push
icebp
xlat
cmc
and
lods
mov
in
adc
lret
mov
mov
test
sbb
dec
int3
int
jmp
mov
push
arpl
fcoms
mov
adc
mov
in
ret
cld
adc
pop
pop
fdivs
loopne
cwtl
insl
repz
cmp
cmp
rclb
push
xchg
pop
cmp
jg
jae
cli
lret
adc
arpl
and
adc
pop
testb
dec
loopne
add
dec
push
cmpsl
inc
ss
imulb
arpl
xor
xor
lods
movsb
pop
cmpsb
push
icebp
cltd
add
js
adc
ja
and
iret
or
cli
cld
std
add
testb
int
pop
imul
push
js
and
jae
add
out
ret
aas
adc
xchg
push
mov
jb
ljmp
xor
xchg
lret
das
mov
in
sub
pop
or
mov
cld
mov
lcall
pop
movsl
lcall
cmpsl
addr16
jecxz
stos
inc
incb
adc
pop
aad
sbb
sbb
repnz
jmp
push
movsl
adcb
gs
ret
aad
pop
xchg
sbb
lahf
inc
mov
mov
out
mov
mov
insb
out
je
dec
fwait
dec
nop
inc
movsb
repnz
pop
sbb
cld
add
xchg
inc
jb
test
mov
rol
sbbb
add
sti
mov
xor
aad
ss
pop
or
inc
stos
fdivs
add
xor
fisubs
fstl
orb
or
push
push
bound
push
daa
xchg
in
jl
mov
fimuls
ja
icebp
sbb
jnp
add
cld
jle
int3
out
adc
xchg
clc
rolb
cmpsb
cmp
mov
sbb
xchg
fwait
add
frstor
xlat
push
fwait
cmp
rorb
lret
dec
inc
sub
push
shl
cmpsl
call
and
lea
adc
dec
push
mov
jmp
in
dec
adc
enter
rcll
sub
jno
adc
inc
push
lret
mov
es
dec
lods
or
cmpb
aaa
shl
andb
pop
cmp
push
in
gs
fdivrs
push
in
mov
mov
mov
int3
mov
sbb
add
shll
je
jb,pn
xor
mov
xchg
add
pop
icebp
add
mov
js
adc
or
mov
fsubr
and
call
insl
jnp
xlat
testl
fisubrl
sub
inc
dec
adc
and
pop
or
xor
cmc
rcrl
pop
xchg
and
mov
mov
fcomps
mov
fucomp
and
adc
sub
pop
loopne
mov
or
xor
int
ss
mov
or
jp
or
insl
and
xchg
jb
in
adc
mulb
out
ja
adc
mov
int
or
movb
pop
lds
sbb
lret
mov
mov
fs
inc
mov
scas
adc
fwait
mov
lret
add
aas
mov
pushf
push
fimuls
sub
xchg
mov
push
sbb
adc
sbb
xlat
fstpl
stos
fstps
adc
pushf
addb
aad
or
dec
orb
hlt
sub
mov
or
sbb
rol
call
scas
fwait
pop
ja
mov
pop
and
add
jecxz
bound
ds
leave
testb
sahf
jge
mov
cmpsb
int3
inc
shll
jb
sar
std
fmulp
sbb
mov
inc
bound
dec
adc
inc
pop
and
xor
inc
mov
mov
adc
mov
jnp
lcall
pop
dec
xorb
add
shll
cmpsl
cmp
sbb
mov
pop
mov
xor
decl
mov
mov
adc
das
adc
pop
sahf
jo
pushf
enter
test
mov
sti
xchg
lahf
jno
cmp
imul
xchg
xchg
or
sbb
jne
repnz
pushf
adc
pop
je
inc
fisubrs
andl
sbb
negb
call
lahf
js
inc
loop
jecxz
jo
xchg
scas
pop
mov
rorl
pop
icebp
pop
mov
mov
sub
inc
pop
xchg
sub
or
push
setae
shll
xor
lods
or
lods
xor
dec
inc
jb
mov
sub
mov
incb
push
inc
pop
inc
sbb
and
inc
mov
aas
add
cmp
pop
jno
and
inc
out
test
aas
xchg
ret
addr16
add
lea
push
lods
pop
mov
pop
jecxz
inc
adcb
sahf
loope
and
pop
sar
fwait
add
fwait
sbb
push
jbe
dec
mov
fcoml
into
jne
cli
mov
mov
movsb
dec
ret
or
pop
int3
cmp
adc
insl
cmp
xchg
movsb
movsb
xchg
jae
or
bswap
cmp
lret
loope
and
push
pop
ret
push
fisubs
comiss
shrl
xchg
push
hlt
sbb
fisubl
mov
pusha
adcb
jle
fisttpl
outsb
lods
insl
adc
pop
in
mov
xor
pop
add
pop
mov
in
xor
xchg
fldenv
imul
dec
arpl
inc
ss
fiadds
jge
add
dec
fstpt
jge
rcrl
jl
add
fstpt
idivb
sub
dec
clc
add
lea
inc
or
cmpsl
fisubs
insl
jecxz
xlat
push
xchg
test
ss
jb
jmp
incb
enter
test
ja
push
mov
cld
addr16
mov
xor
pop
jne
aaa
bound
scas
shl
sub
ljmp
imul
in
sbb
enter
mov
out
pop
je
stos
dec
outsb
loop
and
or
push
lret
lods
sbb
push
sti
divb
xor
clc
adc
fidivs
push
jmp
dec
jle
hlt
adc
in
fcomp
gs
push
cmp
outsb
mov
sahf
push
sbbb
inc
negb
xchg
outsl
jnp
adc
cmpsl
sbb
mov
and
xchg
mov
imul
mov
mov
pop
mov
sub
xor
xor
popf
lret
jmp
lret
sub
cmp
cmp
cmp
pop
adc
in
ds
pop
pushf
fdivl
pop
xchg
dec
lcall
outsl
fnstsw
sub
mov
ds
push
inc
lret
or
leave
mov
jae
jbe
xlat
outsb
adc
add
call
or
js
pop
cmp
jb
dec
hlt
push
pop
adc
imull
or
cmp
stos
mov
arpl
mov
dec
imul
push
addl
das
imull
gs
push
lcall
push
add
leave
rcrb
test
sbb
xor
mov
sub
xchg
lds
sbb
stc
xchg
mov
sub
dec
cmp
cli
jno
mov
or
inc
test
mov
mov
mov
je
jg
lock
fwait
and
lret
jnp
roll
jb
aas
push
movsl
cmp
ljmp
jg
ss
xor
lock
cli
jne
sub
mov
pusha
cmpsl
mov
sub
dec
mov
dec
arpl
fdiv
adc
sub
lahf
or
push
add
stos
push
outsb
in
gs
notb
imul
and
xchg
sbb
jnp
and
mov
mov
add
mulb
xor
push
jl
insb
iret
rorl
cld
aam
push
xchg
test
mov
ljmp
addr16
out
fisubl
jb
add
addl
enter
decb
sub
js
cmp
jnp
mov
sahf
movsl
lahf
cld
cmpb
int
popf
in
lcall
loope
cmpsl
les
popf
loopne
pop
xchg
leave
shl
xchg
inc
inc
jne
dec
in
subl
cmp
cmp
inc
pop
mov
and
dec
rcrb
add
mov
adc
test
sub
fstpl
inc
add
or
mov
sti
or
mov
mov
mov
popa
bound
loope
sub
fisttpl
push
outsl
inc
pop
inc
pop
cmp
ss
nop
into
rorb
push
imul
rcl
push
je
mov
in
js
aas
mov
outsb
adc
fwait
jnp
out
adc
sbb
push
nop
and
arpl
mov
popa
or
scas
enter
rcrb
popa
push
and
icebp
mov
push
jmp
pop
inc
movsl
popa
lds
mov
cwtl
xchg
xchg
repz
sahf
mov
jnp
cltd
push
popa
leave
rcrb
dec
pushf
loop
add
mov
pusha
add
mov
mov
lea
or
cli
cmp
cmp
mov
inc
mov
pop
movsb
push
dec
mov
call
nop
lods
jl
mov
bswap
aaa
out
lds
fs
aas
mov
mov
push
jne
hlt
jno
pushf
jl
inc
movsl
cs
jle
dec
xchg
inc
fdivrs
xchg
lcall
push
xor
xchg
jnp
mov
push
gs
xchg
sti
push
aam
pop
stc
sbb
xchg
sub
fildl
popf
push
and
mov
mov
push
inc
aam
inc
add
in
clc
in
insl
je
lods
bound
mov
jne
lds
sti
dec
sti
ljmp
xor
and
xchg
or
cmp
loop
stc
and
das
ret
cmp
pushf
sbb
and
xor
jmp
in
pushf
cltd
jl
adc
pop
pop
popa
pop
jmp
mov
dec
xchg
pop
fstpt
jo
in
dec
ljmp
imul
push
les
call
add
add
fmuls
popf
add
in
outsb
dec
mov
mov
mov
aad
pop
mov
lret
xchg
jg
je
jl
or
mov
push
pop
cmp
add
push
adc
adc
scas
dec
jle
pusha
cli
push
pop
or
test
nop
inc
cmp
jae
jbe
add
sub
sti
mov
pop
push
mov
test
out
aas
cmc
jmp
dec
out
inc
add
xor
xchg
pop
push
xchg
lea
mov
dec
fwait
jno
rclb
lods
sub
shl
mov
adc
fldcw
jmp
cmp
jno
jl
lcall
mov
push
mov
jecxz
mov
or
pop
or
out
movsl
in
mov
mov
test
or
rcl
xchg
jle
out
icebp
jo
add
mov
mov
push
das
aas
push
mov
inc
fcompl
test
xchg
sarb
xchg
xorb
mov
xchg
dec
xchg
dec
lods
and
inc
sahf
into
mov
cld
inc
clc
inc
mov
lret
mov
xlat
mov
xor
jmp
clc
sbb
sahf
fsubrl
enter
ljmp
outsb
bound
push
pop
jae
jl
lds
ret
icebp
pop
mov
sbb
jg
repz
jge
jmp
pusha
xchg
push
xor
xor
push
adc
aaa
xchg
xchg
outsl
sub
pop
aam
fadds
adc
clc
mov
jnp
fidivrl
mov
into
pop
ret
add
mov
sbb
loop
and
inc
in
fdivrs
in
pop
pop
push
xor
jecxz
pminub
sbb
test
fdivs
fldt
mov
push
adc
fadd
dec
fucom
sub
adc
out
jecxz
or
lds
ficoms
movsw
shr
adc
scas
out
movsl
fisubrs
popf
filds
cs
cmc
ja
aam
pop
cmp
xchg
sub
hlt
aas
cmp
cmp
cmp
or
sub
in
sbb
icebp
jb
xchg
cwtl
xor
pop
xchg
js
pop
mov
idivl
insb
or
cmp
mov
scas
test
pop
loopne
stos
xchg
repnz
inc
loopne
mov
mov
leave
jle
xchg
je
push
push
cmc
movzwl
mov
mov
cld
push
aad
inc
cmc
sti
push
in
je
and
mov
lret
data16
mov
out
outsb
ds
dec
and
adc
shlb
ja
jae
cld
lods
rcrb
pusha
imulb
push
mov
push
xchg
mov
inc
push
inc
fsubs
cld
std
lods
sub
lahf
push
pop
push
mov
clc
inc
mov
stc
lods
dec
aad
std
cmp
push
daa
add
mov
insl
cmp
cli
xchg
hlt
push
stc
daa
lods
and
or
andb
sbb
js
cs
lahf
jecxz
cmpb
mov
inc
shr
dec
lcall
add
xchg
rcl
and
pusha
imul
rorb
pop
push
add
mov
or
jnp
in
mov
fwait
and
dec
sahf
cmp
inc
loopne
xchg
mov
test
mov
or
outsl
les
cmc
testl
daa
cmp
imul
mov
cmp
stc
push
pop
mov
fmull
or
add
mov
or
std
aas
sub
movsl
jae
movsb
rol
adc
add
cmpsb
dec
lds
std
clc
xchg
shl
neg
push
dec
sbb
es
add
fisubl
cmp
xchg
push
fnstenv
cmp
mov
jbe
cmp
pop
cs
fdivrs
inc
ds
fistps
rorb
inc
push
xchg
mov
adc
mov
scas
sub
add
jno
out
psubsb
mov
rcl
mov
fimull
sub
lds
jg
mov
cwtl
out
sbb
push
jge
inc
gs
clc
in
pop
ja
movsb
sbb
cli
js
les
sbb
cmp
loope
mov
or
mov
imull
dec
jnp
adc
mov
and
mov
pop
insl
outsl
test
aam
bound
lock
inc
mov
fucom
inc
mov
jb
testb
lahf
es
jmp
mov
jle
sub
add
mov
outsl
or
xchg
inc
and
mov
scas
icebp
add
push
dec
push
mov
loop
mov
in
push
cmp
pop
dec
cmp
aaa
mov
push
push
and
and
arpl
aas
xchg
push
mov
mov
inc
add
adc
adc
lahf
fs
xchg
mov
xchg
jne
xchg
jns
xor
mov
mov
ficoms
jb
jl
mov
mov
divb
and
addr16
inc
cmp
sub
daa
mov
fstl
mov
xchg
pop
sbb
jo
or
add
stc
pop
xlat
pop
pop
sub
jo
or
push
scas
xor
std
ficoml
pop
pop
sub
add
mov
inc
arpl
xor
adc
data16
lret
inc
jae
mov
pusha
mov
addb
and
out
and
add
loope
dec
mov
xor
enter
mov
sbb
xor
clc
push
dec
cmp
rcrb
fistpl
xchg
les
mov
mov
mov
dec
cmp
mov
and
ret
dec
test
imulb
sub
adc
int3
subl
js
sti
bound
pop
mov
decb
rolb
ret
or
in
xchg
cmp
mov
add
adc
xchg
pop
sbb
fs
lock
inc
mov
dec
sahf
dec
ljmp
aad
inc
ja
adc
das
xor
fcmovnbe
adc
mov
jno
jge
inc
lret
add
mov
mov
adc
gs
add
push
aad
hlt
scas
jno
pop
xchg
neg
add
ds
push
cld
xor
addl
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
lea
movl
xor
orl
xor
movl
cmp
movl
je
andl
xor
add
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
subl
add
cmp
jne
pushl
call
mov
orl
mov
or
mov
adcl
xor
xorl
add
movl
cmp
je
pushl
orl
pushl
andl
call
dec
mov
xor
mov
adc
mov
subl
xor
adcl
add
movl
cmp
movl
je
xor
mov
mov
mov
subl
mov
movzwl
sbb
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
incl
add
sbbl
mov
mov
mov
sub
mov
subl
add
mov
movl
jmp
sub
mov
mov
mov
adc
mov
andl
add
add
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
call
jmp
mov
andl
xor
incl
add
cmp
jmp
push
push
or
inc
xor
xor
mov
add
into
scas
jp
add
jge
inc
out
stos
test
cmpsl
mov
cld
jmp
pop
mov
in
sub
imul
mov
popa
or
sub
dec
jae
add
mov
adc
jl
or
leave
push
bnd
lods
xchg
pop
dec
loopne
stos
std
jle
dec
jmp
dec
fdivrs
fisubrs
mov
mov
test
fisubs
fwait
or
mov
xor
filds
cmp
mov
push
push
jb
xchg
inc
bound
test
fs
pop
ret
jmp
xchg
scas
cmp
adc
jo
mov
icebp
dec
add
ja
dec
lcall
imul
ret
push
movsb
out
ds
mov
fldcw
iret
mov
sub
cmp
lds
shlb
adc
push
jne
jb
out
fmuls
push
es
stos
je
scas
shlb
mov
rcll
mov
lods
lock
outsb
outsl
sub
xor
in
shrl
neg
or
outsb
push
ds
mov
jo
sbb
mov
jmp
popa
mov
xor
push
insl
leave
mov
sbb
jg
xchg
mov
arpl
in
daa
ljmp
icebp
mov
or
adc
insl
sub
dec
xlat
mov
mov
fstps
add
xchg
lahf
cs
in
lods
inc
mov
dec
push
shl
adc
inc
rolb
jbe
xor
jns
and
or
inc
jo
pop
aaa
stc
insl
pushf
push
outsl
or
cltd
or
mov
icebp
push
mov
xchg
addb
push
lret
cmp
jp
pop
cs
and
cmpsb
push
mov
sub
or
test
pop
mov
jbe
rol
pop
arpl
imul
mov
push
push
imul
divb
cmpsl
cs
mov
sub
push
mov
sbb
push
mov
sbb
xchg
mov
sar
lret
xchg
mov
push
cmp
sub
or
aad
mov
imul
int
mov
mov
jle
outsl
out
cmc
xchg
cld
xor
loop
cmp
mov
inc
inc
push
and
jb
lahf
es
cwtl
cltd
add
out
lcall
adc
stc
imul
nop
pushf
rcl
mov
mov
outsl
mov
xchg
mov
dec
adc
push
sub
mov
call
cmp
inc
jmp
pop
add
add
adc
pushf
aad
pop
hlt
sahf
or
adc
test
aaa
mov
cld
adc
mov
bound
in
jl
jle
push
or
dec
stc
jne
cltd
popa
outsl
daa
sbb
push
mov
ret
and
outsl
daa
js
mov
dec
dec
popf
and
sti
fisubrl
xchg
dec
sbb
mov
push
aad
push
insb
push
popa
fldcw
jg
sahf
mov
fdivrl
sarl
in
into
icebp
mov
cli
sar
out
movsl
nopl
pop
rcrb
sti
insl
jle
pop
push
lahf
xor
and
xchg
lahf
adc
hlt
or
fstps
fnstcw
lea
xor
iret
and
cmp
sbb
dec
pushf
add
loope
fildll
popa
aad
sbb
inc
add
push
xchg
scas
lea
sub
imul
mov
inc
inc
pop
dec
xor
add
or
push
mov
and
rcrb
dec
add
lea
bound
adc
popf
add
sbb
mov
mov
pop
nop
decb
jae
xor
lods
push
dec
call
jbe
xor
aam
jbe
pop
into
imul
ss
pushf
ss
scas
lahf
ret
dec
xor
and
pop
cs
mov
das
jnp
add
je
inc
push
inc
dec
add
xlat
packuswb
and
in
into
push
jbe
jmp
fs
xchg
in
int
cmp
cmpsl
sti
dec
mov
cvtps2pd
in
hlt
repz
sbb
aam
and
mov
cli
cmp
mov
jle
mov
subl
enter
jbe
push
in
dec
jmp
dec
ljmp
cli
add
ret
cli
or
dec
das
xchg
adc
bound
or
inc
and
add
dec
cwtl
dec
popa
cwtl
ja
out
mov
jge
sub
cs
fimull
xor
push
add
jmp
mov
div
stos
test
mov
xchg
jge
inc
xchg
xchg
arpl
stos
loope
sbbl
ja
addr16
stos
out
jge
fcompl
fistl
cmp
mov
inc
cmp
in
and
cltd
stos
out
pop
cmpsl
call
repnz
cmp
bnd
mov
add
je
xchg
mov
sub
outsl
pusha
cmp
pop
dec
jo,pn
cmpsb
aam
in
and
outsb
xlat
pop
fistpl
sbb
cmpsb
in
and
movsl
lds
imul
repnz
xchg
shl
addr16
sbb
sar
lahf
or
inc
mov
fsubrs
jnp
out
out
mov
ja
test
mov
xchg
mov
pop
mov
enter
lret
mov
mov
pushf
ss
aaa
cmp
jb
add
rcll
hlt
inc
mov
cmp
jns
test
div
jne
movsl
mov
jae
mov
mov
in
insl
jge
add
cmp
xchg
adc
mov
inc
sbb
pushf
ror
fistl
sbb
lret
cmp
lods
stos
cli
in
aam
pop
push
and
xchg
jnp
mov
jbe
negb
dec
iret
mov
inc
lcall
xor
sbb
add
dec
int
cli
mov
xchg
loop
test
ss
jecxz,pn
xchg
mov
repnz
mov
pop
shl
cmc
rcrb
sbb
aam
cli
mov
out
divl
mov
aad
xor
aaa
cli
in
or
lods
fidivs
xor
stc
les
movsl
int
cwtl
and
jl
stc
jp
xor
dec
sbbl
sub
push
mov
loopne
inc
dec
ljmp
inc
or
imul
adc
mov
iret
in
and
jmp
lds
popa
in
cwtl
mov
inc
fidivrl
ss
sbb
pop
mov
xchg
aas
mov
fisttpl
rcrl
add
mov
push
f2xm1
fs
inc
pushf
sub
shll
jmp
push
or
aam
xchg
repnz
ja
adc
pop
sti
aam
pushf
daa
pop
incb
dec
pop
outsl
push
mov
dec
xor
pop
xchg
xchg
cli
ljmp
lea
cmp
sub
sbb
fadds
or
negl
shlb
enter
jns
push
adc
mov
ret
sbb
xorl
arpl
call
out
adc
pop
popa
fisubrs
jne
mov
pop
push
mov
mov
clc
ljmp
push
or
inc
push
mov
lods
pop
xor
mov
mov
and
add
mov
mov
ret
ja
push
nop
fidivs
sub
cmp
sub
inc
js
push
pusha
sub
fcoml
repnz
jge
out
sub
jmp
in
sub
fs
adc
cmc
adc
mov
scas
xchg
or
dec
addl
sub
fbstp
fldl2t
cmpsl
loopne
jne
mov
sahf
jge
hlt
adc
cmc
xor
data16
insb
jns
pusha
pop
gs
adc
mov
cmc
mov
dec
pop
xor
cld
data16
cld
popf
xor
xor
pushf
xchg
cli
mov
js
and
ret
cmpsl
jp
data16
and
sub
fs
sub
lods
out
or
adc
push
and
xchg
jno
jmp
shrl
xchg
js
inc
lock
pop
xor
mov
gs
loope
mov
mov
bound
or
das
jg
imulb
cmovb
pop
xchg
push
dec
mov
in
std
es
lret
inc
dec
xchg
ljmp
stc
stos
shlb
mov
fildl
repnz
mov
sbb
add
push
sub
shll
jb
dec
push
shll
sub
adc
xor
adc
xor
dec
push
das
jecxz
xor
test
rorb
pop
inc
fisubl
int
neg
das
mov
std
out
dec
sbb
xlat
mov
insl
test
into
dec
ret
imul
aad
call
xor
movb
pop
lock
xchg
in
jle
fs
sahf
add
aad
mov
cli
mov
aad
or
sub
jge
enter
inc
push
and
bound
lret
push
adc
sbb
mov
nop
fwait
push
sub
ljmp
pop
xchg
mov
lret
ljmp
int
xchg
mov
xchg
mov
xor
sahf
mov
push
cltd
inc
loope
dec
inc
mov
outsb
repz
or
sub
mov
pop
xor
imull
mov
jo
lock
icebp
mov
loope
or
pushf
std
cmc
or
loope
adc
pop
push
andb
adc
mov
xchg
notb
sbb
ljmp
popf
pop
mov
and
sbb
inc
mov
ss
cmp
mov
daa
adc
push
popf
ljmp
fistpl
out
or
cmp
cs
sbb
sbb
nop
sbb
cmp
cmp
mov
push
inc
adc
mov
add
push
push
xchg
repz
xchg
mov
xchg
mov
es
popa
jns
sbb
push
roll
pop
scas
xchg
push
je
inc
clc
cli
and
mov
inc
imul
call
in
jno
aad
mov
in
mov
pop
roll
int
push
fstpt
xor
pop
fdiv
fcompl
mov
sbb
mov
mov
dec
xchg
stos
push
les
jbe
ds
ljmp
mov
push
adc
pop
mov
add
inc
shl
leave
sbbb
jle
int3
lcall
jnp
jae
cmp
dec
outsb
dec
jb
pop
lock
adc
lret
je
sbb
and
out
xchg
cs
arpl
sub
pop
mov
mov
enter
adc
cmp
int3
or
pop
inc
lea
push
mov
pop
ljmp
mov
xchg
add
out
pop
cmp
push
popf
stc
flds
int
in
jl
fildl
and
add
add
xor
or
das
ss
jg
sbb
outsl
outsl
shll
dec
out
mov
cmpb
push
xor
pop
sub
or
jmp
mov
popf
fsubr
jl
inc
pop
sub
mov
sbbb
or
xor
loope
sub
scas
dec
outsl
dec
adc
adc
fnstenv
bound
cmp
push
push
leave
loop
sbb
out
cmc
stos
add
xchg
sub
ror
add
push
movsb
xor
aaa
test
or
ret
add
sub
and
cltd
jmp
flds
jnp
lcall
nop
pop
and
notl
aam
xor
sub
divl
dec
sub
in
cwtl
add
arpl
mov
cmp
push
push
mov
fwait
mov
pop
dec
pop
inc
dec
into
lock
enter
bound
dec
shrb
push
pushf
gs
jae
jbe
mov
push
pop
mov
insb
lea
das
xchg
push
sti
lods
pop
pushf
andb
cld
and
mov
sbb
js
adc
and
mov
sarl
adc
mov
jmp
in
mov
rcl
lret
push
sbb
loope
push
add
movntq
fwait
adc
stos
sahf
cwtl
add
push
mov
xlat
pop
dec
add
fnsetpm(287
mov
jl
mov
adc
sub
dec
loop
mov
ret
mulb
pop
sub
jns
test
xchg
rcrl
ret
arpl
cmp
push
lret
mov
fs
cmpsb
outsl
aam
inc
ret
inc
xchg
xchg
insb
arpl
or
decl
out
jp
xor
and
inc
mov
jg
mov
movsl
pop
mov
jo
orl
push
outsl
jns
or
xchg
mov
mov
mov
cmp
loop
mov
and
ja
xor
dec
inc
out
clc
sbb
xchg
jg
gs
ret
mov
cmp
dec
ret
out
jle
mov
mov
mov
leave
in
push
jp
jg
and
pop
outsl
push
aad
pop
aam
push
and
and
add
test
repz
xchg
cmp
jne
xchg
pushf
fldenv
and
loopne
mov
and
aas
mov
push
cmc
into
dec
mov
imul
xchg
jne
adc
xchg
or
sahf
xchg
pop
or
mov
xor
enter
movsb
ja
pop
mov
jns
ja
or
lcall
movsb
gs
roll
push
xor
or
pop
push
cs
jmp
fs
jo
dec
xchg
arpl
mov
or
mov
and
add
arpl
mov
fisttpl
movsb
xchg
inc
ja
jecxz
sub
mov
ljmp
cmpsl
sub
xor
mov
leave
pop
out
fcmovnb
jmp
cs
jl
adc
sub
mov
lods
nop
mov
lods
into
popa
bnd
mov
je
xchg
lcall
pop
mov
cmp
xsavec
mov
push
out
data16
data16
xor
xor
jnp
js
dec
cld
push
dec
stos
gs
sbb
bound
cmc
pop
in
xchg
jne
cmpsl
repnz
js
pushf
shlb
jl
idivb
test
fmul
into
push
shll
int3
ja
ja
add
push
cmp
nop
mov
cs
out
inc
aaa
pop
popf
mov
mov
dec
adc
cltd
push
dec
cmpsb
roll
and
stc
lcall
insl
rcr
test
dec
sub
sti
insl
xchg
and
cmpb
bound
xor
jo
call
mov
inc
and
dec
ds
mov
loope
orb
cmc
ss
sarl
inc
and
push
in
dec
and
or
iret
xchg
jecxz
popa
sbb
mov
push
mov
sti
fnclex
fbld
jnp
sbb
jae
push
push
push
out
dec
push
push
and
iret
outsb
fidivrs
dec
sub
inc
jns
pop
push
iret
int
mov
xor
loopne
into
pop
jp
das
jbe
pop
ja
adc
mov
bswap
hlt
add
mov
sub
fdivrl
or
fildll
jl
jmp
ficoml
jbe
ss
jne
bound
cli
test
insb
dec
fldln2
scas
adc
sub
insl
push
add
imul
out
jne
xor
mov
push
gs
mov
sub
xor
pop
jb
leave
push
sub
cmp
xor
les
insl
ror
inc
pop
xchg
jecxz
loope,pt
xchg
add
pop
cltd
stos
mov
ja
jmp
add
xor
xor
add
out
xor
xchg
insb
das
inc
fdiv
mov
push
mov
int3
xor
inc
push
sahf
pop
aam
gs
mov
test
pushf
fcoms
sbb
push
pop
mov
push
aam
ret
addr16
out
jge
cmp
dec
data16
movsb
adc
pop
mov
push
adc
mov
mov
add
jmp
lret
cld
xlat
xchg
mov
xchg
sub
and
lcall
cmpsb
or
cmp
repnz
ret
cmp
mov
test
mov
push
mov
push
movsb
in
xchg
pop
jmp
add
push
sub
cwtl
jnp
jmp
cmpl
xor
inc
leave
jnp
dec
aaa
jecxz
push
clc
cmpsb
mov
clc
cmp
jl
popa
lock
lahf
mov
jnp
mov
shrb
out
out
cmp
pop
call
inc
mov
mov
cmp
jl
adc
rclb
cld
pop
popa
loop
fcmovnb
sahf
jg
xchg
xchg
mov
sub
sub
push
mov
in
ret
push
push
push
jne
dec
orl
pop
jle
aaa
lock
mov
aam
cmpsb
iret
sarb
pop
and
ret
bound
xchg
jnp
cltd
pushf
pusha
lcall
std
inc
cltd
lret
out
jg
cmp
jecxz
repz
or
push
or
rorb
arpl
je
pop
xchg
insb
adc
xor
fisttpll
lods
lret
mov
or
stos
adc
ret
jae
fcomip
movsb
jle
and
adc
fimull
icebp
fcoms
adc
xor
int
imul
scas
or
xchg
jle
cld
push
inc
movsb
pop
popa
push
rclb
insl
add
inc
in
sarl
pusha
popf
pop
arpl
or
int3
pop
add
mov
push
shll
fidivl
popf
cld
xchg
sub
outsb
clc
push
push
imul
js
js
shll
add
aas
mov
in
dec
enter
sbb
mov
divl
out
fcoms
mov
push
push
mov
stc
mov
jne
call
out
dec
fisubs
or
dec
in
roll
int3
call
xor
loopne
jle
xlat
push
inc
stos
inc
cmp
pop
adc
dec
xchg
xchg
cmp
movsl
mov
jl
das
pusha
cmc
lea
fsubr
sub
mov
inc
dec
xchg
mov
insl
int3
dec
aaa
xchg
push
movsl
enter
nop
mov
sub
sbb
jmp
mov
dec
ds
sub
movsl
inc
adc
out
out
popa
lea
add
push
push
pop
out
push
push
mov
lock
test
push
push
into
dec
inc
movsl
bound
adc
nop
sahf
ljmp
xlat
movlps
push
jmp
push
pop
adc
rcl
stos
loopne
aas
pop
adc
rorl
push
adc
xchg
dec
push
mov
daa
sub
lahf
adc
xchg
lock
push
das
mov
jno
shrl
stos
pop
lret
cltd
inc
pop
hlt
mov
std
je
stos
sbb
aam
sub
push
ja
mov
mov
add
call
cs
shrl
lock
pop
frstor
sbb
fwait
icebp
mov
loopne
pop
sub
jnp
in
in
out
aad
jge
inc
push
and
ficoms
fbstp
and
fs
stc
push
or
adc
pop
xchg
xchg
inc
dec
clc
loope
lret
rcll
xchg
add
out
xchg
data16
jae
mov
xor
cltd
sbb
cmp
push
shr
sub
stos
sahf
push
scas
icebp
jae
mov
pop
data16
xor
pop
pop
or
loope
adc
in
xchg
xchg
decb
or
mov
mov
lahf
insl
add
jl
lcall
xor
adc
repz
dec
inc
and
jecxz
insb
popa
jmp
mov
cwtl
pop
add
call
sbb
cld
insb
dec
arpl
ljmp
xchg
push
sti
out
mov
pop
fisttps
xor
pop
sbbl
leave
inc
mov
and
mov
mov
out
push
or
and
or
mov
push
jle
sbb
jo
jecxz
mov
push
mov
jp,pn
roll
cmp
push
dec
leave
pop
and
xchg
fidivl
xor
sub
mov
inc
mov
sarl
imul
pop
fsubs
mov
stc
stos
mov
and
aad
inc
sub
adc
xor
push
insb
cmp
add
jle
nop
das
mov
mov
leave
pusha
cmc
sarl
aaa
leave
xor
jae
jo
jecxz
imul
ret
es
or
mov
loop
mov
fldl
pop
nop
mov
int
inc
sti
xchg
rcl
add
cmp
mov
dec
and
mov
sbb
pop
mov
loope
xor
lds
stos
xchg
repz
cmp
inc
insb
sub
inc
fadds
or
cmp
imul
icebp
adc
adc
icebp
fisubl
lods
popf
jl
rolb
lds
sbb
mov
adc
jle
pop
xchg
push
sub
pop
mov
dec
xchg
sub
adc
or
and
and
rcll
and
mov
mov
inc
in
int
jne
xor
pop
iret
adc
out
ss
xchg
ffree
jge
js
jecxz
jno
repz
lds
xor
test
icebp
insl
aas
mov
data16
xor
sti
push
ds
outsb
int3
adc
je
add
int3
push
pop
call
call
loope
jno
mov
sbb
cltd
out
dec
xchg
movsl
mov
imul
sub
inc
jecxz
loop
adc
pop
dec
and
cmp
ja
add
and
push
int3
addr16
add
pop
mov
dec
cltd
push
jecxz
fsubrs
stc
shlb
out
test
dec
ret
push
popf
cs
mov
push
cli
inc
cmp
loope
xor
sbb
es
jno
mov
hlt
sar
repnz
cmpsb
rcrb
subb
loopne
xchg
fs
sub
fmull
pop
sbb
add
jne
and
mov
and
sbb
adc
enter
sub
cmp
sbb
jo
pop
lret
pop
jne
pop
rol
push
pushf
mov
jne
popa
gs
adc
add
sub
cmpb
xchg
jmp
stc
sbb
or
pushf
jge
out
inc
mov
sub
jne
or
xor
cmc
stc
inc
loopne
pop
add
in
mov
inc
in
push
add
les
jg
pop
cmc
ffree
pop
mov
push
mov
scas
mov
cmc
lods
push
sahf
insl
in
mov
jns
mov
shl
xchg
imul
xchg
cmpsl
pushf
cs
push
dec
jg
sbb
jl
in
cmc
mov
xchg
or
or
je
mov
adc
lock
mov
sbb
push
insl
and
dec
xor
imul
leave
dec
jge
jle
rorl
push
rcll
jle
ja
xlat
push
sub
lock
jbe
mov
pop
mov
fmuls
inc
fs
add
mov
cmp
xor
push
cld
inc
outsl
test
mul
jnp
movsb
aad
lods
sub
jae
adc
xor
sub
jae
cmc
pop
jg
inc
clc
lret
cmp
shrb
sbb
xor
push
sahf
daa
and
push
ljmp
mov
adc
jle
or
orl
into
inc
movsb
in
in
ljmp
lcall
cmp
pop
cmc
scas
popa
pop
or
cmp
adc
cmpsb
push
mov
jnp
cli
jae
dec
leave
add
pushf
mov
adc
fisubrs
add
dec
xchg
jo
inc
test
sub
add
fistps
sbb
sub
out
add
shlb
or
enter
popa
sbb
roll
jg
lods
jge
pop
jbe
add
popf
bound
popf
inc
mov
push
js
call
jae
in
jecxz
adc
jns
sbb
hlt
mov
lcall
jmp
adc
out
jb,pt
cmp
mov
test
lcall
pop
jmp
mov
push
cmp
xchg
adc
bound
out
cltd
lods
adc
in
pop
or
xchg
or
xor
in
xchg
outsl
fs
lds
inc
cmp
xor
in
cmp
push
stc
stos
popa
dec
in
jp
or
sbb
inc
daa
stos
xor
arpl
push
enter
mov
es
leave
ret
int
lcall
lods
xlat
cmp
pop
mov
jne
adc
or
data16
and
imul
cmp
adcb
or
nop
loop
pop
in
sub
push
pop
xchg
adc
adc
push
aaa
ret
adc
js
cmp
repz
cmp
cmp
mov
iret
icebp
cmpsb
jns
mov
push
jp
imul
jmp
mov
or
roll
rcll
fnstenv
inc
dec
dec
icebp
add
rorb
sbb
sbb
out
outsl
pop
jnp
in
lcall
sbb
push
add
imul
shlb
int
shrl
fdiv
jmp
xchg
lock
dec
leave
inc
xchg
cmp
pushf
xor
arpl
loopne
sub
xchg
dec
sbb
dec
lock
or
outsb
add
dec
push
adcb
lock
push
push
xchg
cmp
mov
adc
mov
jnp
dec
mov
sub
jae
cwtl
je
iret
mov
fbstp
dec
fs
popf
add
orps
inc
jge
pop
ret
mov
xchg
lret
push
mov
mov
in
inc
xor
pop
loop
cld
lods
sub
jnp
test
cmp
mov
xor
inc
or
xchg
sub
in
lahf
add
sbb
popa
lahf
pop
inc
push
mov
mov
mov
jbe
xchg
jl
je
ja
mov
jle
fstps
test
enter
push
sub
arpl
xchg
lods
mov
les
or
push
jp
inc
insb
push
adc
mov
sub
shlb
in
lret
imull
lahf
or
cmpsl
lret
lahf
sub
lret
out
dec
xor
sub
inc
dec
adc
adc
xchg
gs
mov
and
or
xor
and
pop
mov
clc
jns
xchg
lock
ja
test
out
jmp
jo
ljmp
fimuls
pop
arpl
sub
jle
fildll
into
xchg
scas
and
cmpsl
data16
mov
fldenv
mov
gs
xor
imul
movsb
insb
xchg
sbb
xorb
icebp
add
sbb
lret
mov
mov
cmp
jnp
jns
out
in
mov
in
fdivrl
push
ret
iret
mov
aas
jae
fxch
lcall
mov
test
inc
pop
cld
mov
xchg
pop
dec
push
dec
movl
pop
jbe
int
jmp
push
jo
push
add
imul
cmpl
mov
xor
mov
dec
out
mov
lahf
mov
pop
adc
pop
iret
sub
jg
lock
inc
jmp
sete
mov
adc
and
push
out
adc
add
in
mov
in
in
mov
orb
pop
sub
xchg
pop
cmp
es
push
fcmovne
pushl
mov
pop
xor
push
shrb
jl
loope
mov
cmc
subl
call
adc
pop
rcr
mov
push
aam
cmc
in
inc
inc
loope
cmp
pusha
jg
mov
test
cmc
jb
adc
sbb
aad
mov
mov
bnd
cmp
int3
stos
ja
cmp
ds
jo
fadd
shrb
mov
movsb
aas
movsb
mov
arpl
std
lahf
push
xchg
andl
push
nop
or
loope
sub
or
push
cmp
sbb
mov
repz
pop
and
test
loope
push
lock
inc
rcrb
lock
adcb
xchg
das
faddl
in
inc
add
mov
pop
mov
push
xchg
add
rorl
inc
std
inc
jmp
outsl
rcr
and
insl
sbb
jae
popa
sub
fst
push
mov
out
inc
push
xchg
push
mov
xor
dec
xchg
fld1
jnp
add
add
xchg
sbb
fucomp
cmp
xor
loop
popa
xor
imul
xchg
es
imul
pop
int
out
scas
jbe
fdivrl
ds
inc
mov
out
mov
cmc
repz
lods
jmp
and
add
inc
js
xchg
add
mov
rcrb
stos
jecxz
test
mov
mov
int3
push
aad
add
jbe
out
push
and
cwtl
lahf
jbe
int3
icebp
mov
adc
mov
movsl
jo
or
sub
mov
add
sahf
popf
popf
fmull
jb
push
insb
fcmovbe
fs
mov
inc
loop
ljmp
pop
inc
ficompl
das
pop
lock
xor
shlb
pusha
loopne
imul
cmp
or
cli
ja
xor
in
jle
adc
mov
dec
lret
call
mov
stos
imul
xchg
add
es
adc
insl
xor
data16
jecxz
push
fucomi
mov
ss
and
dec
xchg
mov
cmp
addb
idivb
lock
sarl
aas
cmpb
iret
add
xor
movsl
mov
mov
mov
xchg
mov
adc
movsb
fidivrl
and
adc
scas
mov
mov
mov
js
scas
mov
add
push
testb
mov
outsb
adc
lahf
jmp
xor
push
sub
mov
ret
xchg
add
inc
in
jge
adc
sbb
out
jnp
mov
mov
repz
lods
call
push
jp
pop
mov
in
loope
dec
loope
jne
outsl
fildl
stc
add
mov
xor
xor
pop
repnz
xor
ret
sti
in
in
in
sub
out
xor
testb
lahf
aaa
push
pop
xorb
push
cltd
cmp
push
mov
idivb
pushf
data16
xor
cs
int
add
dec
xchg
jae
adc
fidivl
lcall
test
aad
mov
loopne
push
in
scas
stos
movsb
mov
inc
xchg
jo
mov
cmp
pop
mov
sahf
sub
and
shlb
inc
xchg
call
lret
adc
pushf
inc
jle
sub
sbb
or
into
ret
outsb
dec
pop
sarl
push
leave
sub
lea
mov
lock
mov
mov
and
inc
mov
pop
icebp
sbb
into
mov
jmp
inc
xor
mov
cwtl
jnp
mov
fnstcw
sub
jecxz
aaa
push
test
ret
in
xchg
sub
or
or
mov
push
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
jmp
js
jno
arpl
test
dec
cmpl
pop
jp
pop
fisubl
inc
dec
popa
adc
or
mov
and
mov
lods
jae
fstl
cwtl
mov
daa
xchg
rol
add
addr16
sbb
in
xor
rorb
mov
sbb
adc
jns
in
rolb
xchg
ja
pop
pop
jno
hlt
mov
jmp
mov
push
jb
mov
inc
mov
dec
and
lcall
aam
int3
lods
in
rcl
popl
orb
dec
jo
ds
sbb
shlb
fs
mov
push
popa
cmp
and
cmp
cmp
push
sub
adc
out
push
jae
xchg
inc
or
push
jae
or
popf
push
imul
jle
loope
incl
mov
sti
pop
mov
lods
dec
dec
mov
psadbw
jp
push
imul
lea
insb
jno
sarl
test
int
sub
test
pop
xlat
stc
jg
push
dec
enter
cli
or
stc
push
adc
rcl
adc
mov
push
push
dec
mov
addr16
and
sti
pusha
add
push
mov
sub
mov
cs
mov
inc
inc
dec
sub
in
sbb
add
jecxz
and
adc
je
in
cmp
push
mov
scas
test
xor
jns
and
paddusw
lds
cmc
in
paddsb
jl
mov
insl
inc
dec
cltd
and
adc
icebp
call
hlt
xchg
out
loope
in
sahf
js
inc
test
ret
bound
out
and
movsb
and
test
xor
out
nop
test
sub
sub
pusha
xchg
mov
call
jmp
pop
dec
jg
mov
testb
mov
jecxz
push
pop
or
xor
pop
mov
cwtl
repnz
pop
aad
repnz
lcall
lods
xor
loop
pop
ret
sub
mov
sub
hlt
inc
mov
cmp
xchg
insl
add
fdivs
mov
push
or
xor
orb
test
in
lcall
iret
push
popf
repnz
inc
and
cmpl
mov
sahf
aas
popa
inc
mov
enter
bound
in
loopne
je
dec
xchg
movsb
adc
mov
push
xchg
mov
push
scas
inc
imul
into
pusha
push
or
imulb
and
clc
addr16
xchg
jb
stos
inc
pop
and
mov
pop
push
and
call
pop
mov
dec
inc
pop
dec
xchg
push
mov
ljmp
enter
rcrb
out
lock
mov
int
push
aam
add
adc
mov
sti
aam
rcll
pop
xchg
fiaddl
sub
idivl
into
mov
dec
sub
mov
out
subb
xchg
push
add
adc
orl
repz
jns
out
mov
mov
adc
fwait
pusha
mov
incl
mov
dec
scas
jecxz
out
dec
dec
dec
mov
jbe
mov
pop
add
cmp
movsl
popa
out
dec
dec
mov
push
and
mov
jmp
pop
adc
dec
push
pop
push
pop
and
sub
loopne
mov
std
xorb
sbb
inc
cmp
je
decl
xor
movsl
shr
aad
cmp
push
sbb
jo
int3
dec
push
lods
mov
xor
pop
xchg
lea
out
call
dec
pop
or
push
shlb
js
daa
adc
les
pop
jl
sbb
mov
xchg
hlt
add
arpl
xchg
mov
push
fnstenv
cmp
sub
cmp
arpl
in
or
add
fidivrs
xor
lock
orb
pop
aaa
fwait
sub
fisttpll
cltd
loope
scas
mov
into
push
int3
add
sti
cmpl
sub
in
inc
adc
mov
loope
mov
aam
jp
std
sbb
cmp
xor
cltd
std
push
sahf
mov
nop
je
xchg
lret
idivb
cltd
addr16
inc
iret
les
add
addb
inc
test
rclb
adc
cmp
lea
pusha
dec
les
mull
cmpsb
dec
pop
in
rsqrtps
push
inc
jecxz
adc
sbb
sahf
jecxz
or
cmpl
mov
mov
sub
out
stos
mov
adc
insb
scas
lds
mov
sarb
std
mov
inc
jg
ljmp
pop
cmp
popa
repnz
mov
div
sahf
pop
mov
xor
add
mov
mov
jno
sti
aam
or
mov
in
xor
out
clc
xor
aas
loop
pop
or
jo
xchg
das
leave
xor
das
sub
jno
mov
cmp
cmp
insl
or
stc
mov
or
icebp
adc
stos
jl
pushf
inc
mov
or
mov
shl
jbe
dec
push
mov
cmpsb
mov
sbb
xchg
call
sub
mov
jmp
lock
lock
cmp
dec
mov
push
adc
clc
xchg
dec
sub
out
pushf
frstor
ret
cmp
xor
popa
dec
cltd
leave
lcall
dec
mov
loopne
mov
out
add
in
mov
int3
fildl
xor
dec
cmp
add
sbbb
into
push
adc
push
dec
mov
mov
dec
stos
popa
fiadds
mov
sub
fcoml
sub
call
cmp
fldcw
ret
repnz
jecxz
dec
mov
popl
push
adc
pop
jno
jp
push
test
ja
add
dec
adc
rcrl
adc
arpl
daa
push
push
cli
lret
push
arpl
in
push
stos
or
vrsqrtss
mov
rcll
dec
pushf
dec
ds
cmp
mov
and
pop
xchg
loopne
dec
jmp
mov
es
xlat
dec
andb
arpl
mov
push
push
jae
adc
xchg
fdivr
xor
outsb
mov
and
jmp
pop
add
adcl
aam
stos
adc
clc
dec
add
xor
adc
mov
or
xchg
repnz
adc
hlt
bswap
xchg
mov
aas
stc
or
lret
pusha
jne
insb
cwtl
sub
sub
popa
lret
inc
add
jp
sarb
notb
test
outsb
jno
dec
out
mov
pop
rcrb
adc
or
cltd
adc
insl
arpl
push
mov
rcrl
nop
loop
inc
push
add
jmp
adcl
sbb
je
add
jp
stos
inc
sahf
aam
inc
sub
adc
roll
outsb
or
in
repz
movsb
out
cs
jns
xchg
mov
pop
push
mov
shl
jb
pushf
xchg
adc
xor
loope
fsubl
xor
cmp
dec
mov
ss
push
push
push
mov
jp
lock
inc
pop
and
adc
out
or
ficompl
xchg
shlb
aaa
mov
stos
and
enter
add
dec
or
mov
mov
pop
add
nop
lds
mov
and
mov
push
sahf
cs
dec
sahf
lods
mov
mov
rcll
mov
lret
leave
hlt
push
push
dec
icebp
loop
lret
divb
xchg
in
sub
scas
xchg
fwait
inc
int3
jecxz
imul
or
jecxz
dec
out
cmp
cmp
cmp
mov
or
std
xchg
test
daa
ud0
sarb
adc
insl
clc
fildl
mov
jb
std
aad
sbb
push
sets
mov
jo
loope
repnz
ljmp
xor
mov
dec
jbe
jae
leave
push
movsb
test
jp
jnp
sahf
test
sub
mov
aas
bound
fistl
mov
mov
add
inc
mov
and
mov
inc
popa
push
enter
adc
or
adc
mov
sti
push
faddl
inc
mov
xor
sub
mov
les
xchg
mov
sbb
push
gs
dec
sub
mov
inc
fnstenv
das
stos
lods
sub
cltd
mov
push
lods
pop
cmpsl
es
push
xchg
pop
mov
sbbl
or
jmp
push
std
repnz
xor
and
push
dec
insb
and
mov
jecxz
pop
push
sub
xor
data16
jb
xchg
sbb
pop
jle
adc
arpl
rorb
dec
or
mov
iret
dec
aaa
mov
mov
cmc
movsl
mov
xor
jns
xchg
cwtl
hlt
xor
les
lahf
cmc
mov
or
mov
inc
mov
mov
cmpsb
mov
test
insb
push
mov
mov
test
mov
and
dec
cmp
shll
cmpl
fisubrl
pusha
add
mov
jle
mov
stos
inc
cmp
pop
arpl
lock
cmc
sti
jp
push
sub
pop
or
jbe
into
out
jno
push
mov
insb
sub
push
ss
push
clc
sbb
and
adc
daa
imul
mov
jg
xlat
shl
push
adc
aaa
adc
inc
adc
dec
lahf
jle
call
fadds
fwait
stos
xchg
jecxz
mov
push
ja
or
mov
aad
out
icebp
insb
push
nop
lods
call
dec
enter
ss
cmp
sbb
cld
movsl
int
or
int
sbb
jo
add
mov
pop
dec
pop
imul
dec
enter
dec
popf
incl
test
xor
dec
cmp
vsqrtsd
jecxz
mov
sub
mov
loope
xchg
cmc
xchg
and
mov
adc
xchg
pop
js
es
hlt
xchg
adc
fcmovu
inc
cmp
xchg
fcoml
push
sbbl
mov
icebp
jnp
aam
xchg
mov
dec
movd
or
sub
stos
push
xchg
xchg
mov
xlat
retw
pop
fbstp
test
mov
mov
scas
pop
jae
sbbb
jns
pop
pop
sarb
insl
and
jmp
insb
pop
xchg
mov
ret
testl
cld
mov
inc
fs
cmp
push
test
loopne
xorb
sbb
out
adcl
fisttps
mov
sub
ficompl
pop
fisubs
mov
pop
mov
jmp
hlt
xor
mov
push
imul
clc
out
cltd
xchg
mov
lods
push
hlt
mov
jbe
pop
xchg
outsl
add
addb
imul
movsb
pop
or
pop
xchg
aad
test
ret
xor
test
sub
mov
out
jg
xchg
psubd
sbb
xchg
arpl
or
scas
and
lock
leave
idivb
insb
pushl
enter
adc
push
jecxz
mov
jns
adc
int3
mov
mov
lods
add
cltd
push
bound
dec
cmp
roll
mov
repnz
in
popa
loop
push
and
mov
xor
and
and
inc
sub
lahf
int
incl
lahf
xor
insb
pop
fwait
xchg
shrl
dec
sbb
insl
ljmp
and
sub
test
xor
pop
pusha
mov
in
int3
mov
xlat
decb
mov
push
into
cli
and
lods
and
imul
xor
jbe
mov
lcall
leave
daa
fldt
in
xchg
pop
mov
inc
push
negb
cmp
mov
cmp
mov
lds
or
loopne
in
roll
xchg
jmp
mov
pop
push
je
mov
cmpsl
or
cmc
stc
mov
cs
clc
sbb
and
dec
mov
into
ret
push
xor
pop
jne
mov
cmp
and
out
pushf
sarl
mov
xor
cmp
movsb
adcb
jb
jbe
adc
sbb
insb
push
ds
ljmp
inc
popa
and
into
das
mov
fstpt
fcomp
add
pusha
jg
xchg
mov
xor
adc
divb
xchg
mov
dec
push
iret
aas
shll
lock
pusha
imul
or
test
outsl
inc
scas
adcb
xor
movb
lcall
mov
fdiv
cwtl
aas
clc
aam
mov
pop
cmp
sub
sbbl
insb
fs
mov
xor
fcom
shl
js
pop
pop
mov
pusha
outsb
dec
data16
jl
fbld
daa
adc
pusha
lods
mov
push
jge
nop
cmovns
cli
adc
les
mov
push
jnp
xchg
xor
jl
fwait
mov
inc
inc
aam
jl
filds
shll
cmpsb
fstp
inc
cmpsb
gs
inc
int
dec
mov
loopne
dec
mov
mov
or
cmp
in
es
cltd
or
int3
dec
jae
push
aam
daa
mov
mov
push
dec
mov
shl
cmc
out
sahf
cmp
pop
or
xor
sbb
out
shlb
mov
and
je
sbbl
outsb
adc
or
mov
pop
notb
push
cli
pop
jmp
aad
lea
repnz
ficoml
loop
xor
mov
lods
stos
mov
cs
ret
mov
ds
sarb
mov
sub
nop
mov
xor
popl
xchg
xlat
pop
sahf
xor
or
fcmovnbe
mov
and
in
jmp
aad
sub
mov
cmp
fistl
stos
mov
ljmp
out
dec
cltd
cli
jne
mov
pusha
insl
mov
lea
lods
fwait
scas
mov
cmp
inc
rclb
cltd
test
enter
xchg
mov
adc
sbb
pushf
ljmp
pop
sbb
push
add
fisubs
out
xlat
adc
lock
iret
push
enter
pop
xor
out
push
arpl
jge
imulb
adc
jmp
lock
pushw
pop
xchg
icebp
faddp
jle
mov
mov
test
sbb
jnp
in
sbb
pop
into
test
mov
push
cmp
test
push
mov
cmpsb
or
and
mov
sbb
push
mov
popw
jo
aaa
mov
ret
hlt
push
lret
popa
hlt
data16
sbb
sub
hlt
sub
mov
movsl
adc
mov
sub
mov
fisubl
xchg
jmp
xchg
inc
aad
inc
fstpt
js
cltd
and
cwtl
movsb
add
mov
cmp
shrb
mov
sbb
in
mov
aam
insb
daa
mov
jnp
aaa
sbb
push
pop
das
les
push
jmp
push
notl
fwait
mov
fbstp
clc
orl
rcl
negl
repnz
jae
and
lret
cmp
mov
lds
pop
pusha
sbb
movsl
dec
sbb
test
loope
push
stos
jecxz
pushf
add
popf
jl
cmp
jno
jmp
mov
adc
fsubrs
shll
or
or
xchg
subw
lcall
add
jg
rcrb
enter
mov
adc
pop
movsb
in
adc
xchg
mov
test
adc
pop
cmp
or
int
add
mov
daa
pop
loopne
push
xor
add
pop
xor
cwtl
jg
ror
aaa
in
sub
dec
xor
iret
push
adc
sub
sub
sub
test
das
push
adc
insl
xchg
movsl
lret
ficomps
js
xor
sbb
jmp
xchg
or
stc
sub
and
add
cltd
adc
sub
pop
mov
int3
xchg
and
imul
cmp
in
and
aam
push
lock
xchg
add
xor
push
div
inc
xchg
addb
sub
xor
std
inc
int3
test
loope
stc
or
les
ljmp
sti
mov
into
sub
mov
sbbl
sarb
mov
in
movsb
popa
and
push
push
jle
lahf
lock
mov
std
xor
jp
addr16
negl
jae
cmp
mov
lea
fidivs
jg
jecxz
stos
xor
sub
or
sbb
mov
mov
xchg
jo
les
pop
push
in
ret
adc
adc
or
pop
mov
loope
jmp
cmp
dec
leave
jns
jecxz
push
jge
stc
jmp
jg
dec
adc
scas
sub
xlat
mov
hlt
loopne
dec
jp
adc
push
stc
test
imul
mov
add
or
js
imul
cld
nop
jmp
bsr
adc
subb
aad
cmpsl
xchg
mov
popf
outsb
cmp
mov
xchg
xor
cwtl
xlat
arpl
adc
or
mov
mov
icebp
hlt
ja
mov
inc
ljmp
cli
jge
lcall
pop
andl
adc
xor
sub
sub
nop
outsl
fcoml
push
inc
cmp
lods
ds
clc
mov
lret
xchg
fsubrl
into
xchg
dec
cmpsb
inc
push
sbb
sub
jbe
dec
add
addl
ss
sarl
jg
sbb
out
dec
dec
mov
jg
fadds
test
cli
cmc
cmp
sub
test
mov
add
xchg
icebp
sub
push
or
aam
inc
xor
call
mov
jb
xchg
ljmp
push
icebp
push
inc
jo
loop
push
cmp
lods
gs
sbb
or
push
xor
outsb
push
jg
mov
clc
stos
lods
in
into
push
jmp
jns
call
fcmovnb
xchg
test
rcrl
ja
cmp
loope
cmp
xchg
hlt
shrb
insl
dec
cmpsl
xor
xor
xchg
fisubrs
sub
mov
loop
jbe
imulb
mov
jg
test
jnp
and
pop
sub
lea
push
and
inc
mov
cmp
sahf
push
shll
xchg
jg
mov
aam
inc
out
dec
jecxz
cs
lcall
in
incl
sbb
and
lods
repnz
rorb
push
shll
and
cmp
ljmp
push
es
sub
out
inc
adc
nop
dec
push
push
fs
inc
aam
or
sbb
mov
pop
mov
insb
xor
sub
jl
int3
mov
sbbl
xchg
cmp
jnp
movsl
jno
movsb
out
loope
in
inc
push
inc
aam
mov
jl
add
push
pop
out
cmp
daa
int
pop
xchg
xor
jg
xchg
inc
lcall
test
daa
cmp
pop
xor
outsl
xchg
dec
add
mov
or
mov
jle
or
and
inc
iret
out
imul
inc
jo
inc
jp
loopne
and
or
xor
fcoml
adc
xchg
loop
push
aad
adc
pop
pop
mov
mov
xlat
or
cwtl
arpl
sahf
xor
mov
dec
push
fstpt
in
sub
inc
sub
adc
inc
repnz
inc
stos
inc
jge
into
sub
dec
sub
adc
mov
push
sub
xchg
add
psubb
fstl
sbb
inc
subl
leave
addr16
rorl
cli
mov
gs
sub
les
cmp
adc
and
mov
shl
ss
je
leave
jp
push
pop
das
mov
mov
or
pop
fnstsw
subl
cmp
imul
xchg
xchg
mov
dec
and
push
push
mov
cmc
imul
test
into
int
mov
sbb
shl
sarb
and
xchg
outsl
or
add
cltd
add
jmp
add
fsubp
rcll
pop
jns
daa
or
ljmp
jmp
xchg
mov
popf
adc
push
cltd
je
mov
shlb
aad
lods
dec
xchg
pop
inc
sahf
aad
test
lret
insb
sbb
call
mov
mov
cmp
loop
cli
xchg
cmp
dec
sarl
gs
in
cmp
addb
ret
jo
test
xchg
aad
mov
stc
lods
cmpsb
and
stc
inc
or
xchg
insl
in
movsb
xor
sbb
jg
push
push
cmp
mov
adc
das
jge
dec
push
out
sbb
pop
cmp
adc
cld
stc
int3
movsb
imul
sbb
fmull
mov
test
cmpsb
inc
mov
pop
sbb
sbb
dec
adc
clc
iret
dec
xor
mov
or
repnz
out
fsubrl
fchs
push
push
mov
cld
mov
bound
cmp
bound
lret
or
inc
sbb
pop
sbbl
cmp
mov
mov
sbb
hlt
mov
or
cmp
rcl
xor
aaa
les
dec
jb
cmpsl
cld
jae
test
or
mov
sub
cwtl
mov
mov
mov
adc
fidivrs
outsl
add
xorb
or
lea
cwtl
jno
sub
inc
fcompp
fs
icebp
xchg
cmp
xor
std
sub
scas
lds
aas
xchg
icebp
xor
std
mov
fldt
adc
aas
std
shl
aaa
sbb
loope
out
or
cmpsl
sub
ficoml
add
iret
loopne
add
push
aam
jecxz
mov
mov
mov
xchg
pop
scas
imulb
add
dec
mov
sbb
lds
cltd
xchg
or
push
dec
add
xor
xor
iret
das
icebp
and
inc
lcall
jmp
aaa
call
into
call
notl
in
sbb
lods
lret
mov
pop
jo
lods
pop
push
lret
cmp
xchg
or
mov
dec
shlb
dec
jb
aad
add
sbb
aam
test
test
mov
add
or
hlt
mov
movsb
in
out
daa
notl
jns
dec
adc
mov
shll
xchg
sbb
pop
stc
lret
bound
imul
add
cmpsl
clc
sub
ja
fdivrl
and
mov
sbb
cltd
xchg
jb
jl
adc
adc
pop
and
push
push
test
std
lock
pop
or
sub
push
ds
flds
pop
mov
jb
movsb
ds
mov
jmp
cmp
test
roll
dec
jge
std
nop
mov
xchg
xchg
mov
mov
test
xlat
push
mov
fisubrs
pop
rcl
dec
xchg
jo
push
aaa
rcr
pop
push
pop
out
sbb
or
orb
popa
and
stc
inc
pop
push
xchg
into
movsl
fistpl
movsb
fidivrs
lods
jecxz
push
jecxz
and
or
cwtl
leave
push
insb
int3
sub
adc
inc
out
dec
in
push
jmp
inc
sbb
aam
in
shlb
mov
flds
sbb
jl
call
and
cmc
adc
sub
popa
xorb
mov
xor
or
pop
int
mov
nop
ret
dec
push
inc
icebp
jns
pop
mov
jae
pushf
pusha
jecxz
mov
inc
cmpsb
pushf
add
fimull
cmp
inc
dec
mov
cs
ror
movsb
xlat
movsb
adc
mov
cmp
xor
fsubrp
loope
cwtl
jecxz
vpsubw
xlat
repz
fcompl
loopne
fldz
call
mov
jmp
jbe
dec
sti
outsl
sub
sub
add
insb
mov
test
iret
ret
into
lret
push
jl
je
dec
mov
jae
inc
iret
push
insl
or
popa
iret
jecxz
into
jl
iret
push
idiv
popa
shl
mov
xchg
xor
push
xchg
dec
dec
dec
cld
fucom
mov
js
imul
mov
orl
ljmp
ret
cmp
ljmp
push
enter
sahf
xor
push
mov
push
lcall
or
jb
imull
ds
scas
jle
sbb
xchg
jl
fmulp
fs
enter
std
pushf
aas
sbb
dec
and
dec
push
inc
movsb
imul
stos
push
out
cmp
mov
dec
into
or
lea
jo
hlt
adc
xchg
cwtl
dec
jae
insb
pusha
sbb
mov
cmc
idiv
lret
loope
in
fisttps
stos
jb
dec
rcr
mov
int3
dec
test
cmc
cmp
mov
adc
imul
imul
aad
cmp
and
loope
cld
push
mov
enter
sub
cmp
sbb
or
xor
or
adcl
loop
mov
push
aad
sbb
insb
xor
jbe
addl
dec
pop
sub
sbb
add
icebp
bound
rol
inc
mov
das
or
jnp
dec
pop
icebp
rolb
leave
mov
insl
cmp
dec
xor
dec
mov
les
jmp
sahf
pop
xor
cltd
inc
popa
popa
std
push
sbb
lahf
jg
sbb
xor
pop
pop
push
mov
fcoml
mov
imul
lret
sub
divl
call
pusha
push
jmp
mov
cmpb
pusha
leave
add
rep
pop
test
fwait
adc
bound
hlt
lret
mov
xchg
loope
test
shlb
sbbl
outsl
mov
cmp
repz
imul
cmp
rcr
jge
xchg
aad
es
stos
mov
adc
sub
scas
bound
or
adc
dec
mov
loop
fdivr
loope
mov
call
cwtl
dec
add
in
pop
sarl
punpcklwd
push
in
or
js
gs
push
data16
scas
mov
mulb
mov
cmp
xchg
sbb
clc
xor
out
inc
add
out
out
or
jbe
das
push
push
lcall
test
push
xchg
xlat
faddl
inc
cmp
lahf
in
add
orb
cld
mov
xor
xchg
sub
pop
sub
imul
push
mov
sbb
jmp
xor
insl
dec
cmp
sti
shlb
test
sbb
jno
cmpsl
inc
in
pushf
push
imul
les
xchg
push
sub
jbe
lret
cmp
add
mov
jbe
cwtl
std
push
stc
cmpsb
shrl
jae
push
mov
aam
pop
inc
jle
mov
inc
adc
jae
in
jo
test
pop
sahf
pop
jle
stos
dec
stc
sub
ret
in
xchg
and
out
sub
aad
xchg
cmp
and
lret
outsl
dec
dec
les
sbb
sub
sub
pop
inc
push
cmpsb
jbe
mov
cmpsl
aad
jno
ret
pop
and
test
adc
mov
gs
dec
or
movsb
push
sbb
negb
xor
scas
je
jae
sbb
push
xor
aaa
nop
mov
dec
out
bound
idivb
push
lods
xor
push
jns
jne
dec
daa
mov
in
add
xor
mull
mov
sub
es
xor
rcll
clc
lods
test
mov
lret
lods
lods
sub
mov
push
jnp
out
adc
push
mov
sti
push
pop
jb
scas
sbb
test
cwtl
in
call
and
push
cmp
jo
fcoms
xchg
mov
and
lods
or
test
leave
inc
xlat
jns
orb
shr
xchg
xor
mov
jbe
jbe
nop
dec
fistps
mov
and
movsl
enter
into
in
push
cwtl
cs
mov
xor
xor
aaa
scas
pop
sub
mov
cmp
jbe
mov
pusha
movsl
loop
sub
hlt
pop
out
pusha
push
pop
sbb
ret
rcr
push
in
rorl
sahf
cmc
stc
fwait
subb
push
popa
mov
sbbl
fimull
mull
xchg
push
and
pop
shl
lock
add
inc
enter
pop
notb
or
adc
jnp
test
nop
das
sti
shll
inc
xor
add
sub
cmp
mov
xchg
sub
enter
pusha
jge
inc
cmc
decb
inc
cs
loopne
adc
pop
and
subb
jns
movsb
scas
mov
mov
xchg
xchg
sbb
in
in
and
adc
xchg
andb
es
sub
out
lds
outsl
cwtl
push
xor
mov
rorb
insl
shrb
mov
inc
mov
divl
sub
test
push
mov
mov
movsb
adc
test
rcl
mov
nop
push
fcoml
xchg
shll
in
popf
xchg
dec
pop
sbb
in
mov
and
insb
jge
movsl
cmpsb
lret
xchg
mov
jbe
push
addl
push
pop
ds
or
cmpsb
popf
sti
push
mov
insb
mov
pop
fidivrs
jle
or
sub
xor
dec
or
aad
mov
inc
aaa
xlat
xor
or
test
push
fxch
and
mov
inc
daa
clc
stc
movsl
xchg
sbb
stos
popa
pop
test
mov
mov
push
and
dec
and
cmp
add
jno
mov
and
lret
sarl
inc
and
pushf
adc
pushf
jno
nop
cmp
ret
in
shl
inc
into
or
std
inc
pop
add
jmp
iret
sbb
mov
cmp
sbb
cmc
cmpsl
lods
adc
mov
push
dec
mov
rcrl
xorl
fcoml
out
mov
pushf
xor
push
sbb
pop
scas
sbb
into
in
pop
dec
xchg
andl
stos
stos
adc
jae
dec
test
enter
push
mov
movsl
loopne
pop
subl
xor
jle
dec
rolb
aam
lock
icebp
pop
lret
xchg
xlat
pusha
pop
pop
adc
ror
cmpsb
repnz
sub
inc
xor
aas
sbb
push
ffreep
clc
pushf
out
add
jbe
cwtl
sbb
dec
lds
mov
add
push
inc
neg
mov
or
mov
pop
xchg
out
mov
jo
mov
bound
jns
jl
inc
daa
lods
sub
out
push
iret
ret
loop
xchg
fisubl
in
cwtl
jmp
or
jo
ret
adc
jnp
jg
mov
loope
xor
scas
ret
or
push
push
arpl
push
cmc
jno
or
popf
es
jecxz
loopne
cmp
inc
jmp
xor
mov
inc
sub
lds
push
mov
jns
int
xchg
subl
mov
gs
sub
mov
and
sahf
mov
fdivl
jecxz
push
hlt
out
cmp
dec
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
jmp
pop
adc
test
fadds
add
test
add
das
mov
cmp
sub
repz
cmp
adc
mov
mov
add
mov
jmp
push
or
mov
cmpb
movl
pop
sahf
inc
sub
jl
ja
shld
idivb
add
outsb
pop
jp
adc
je
test
mov
lret
out
mov
mov
pop
lods
or
adc
mov
aaa
jbe
je
dec
push
xor
fstl
xchg
leave
jb
cmp
scas
stos
cltd
aas
push
test
dec
lock
gs
and
je
cmc
dec
jmp
in
mov
sahf
imul
in
mov
loopne
in
loop
inc
mov
lods
or
adc
lahf
in
cs
cwtl
out
stos
ret
inc
dec
adc
mov
mov
jle
jecxz
fsubl
xchg
outsb
je
cmp
cmpsl
push
sub
mov
lock
and
fs
push
jno
fwait
ret
xchg
pop
out
sbb
inc
daa
pop
das
add
in
lahf
xor
xchg
jns
test
shlb
arpl
push
adc
gs
cmp
mov
jns
dec
inc
ficoml
mov
das
mov
cmc
repz
sti
mov
dec
dec
or
and
jmp
leave
mov
aaa
repnz
and
xor
inc
test
xchg
call
xchg
inc
push
mov
inc
and
pop
repnz
mov
jg
cli
mov
adc
sub
cld
push
stos
stos
or
pop
fcmovb
lods
sub
dec
push
call
aad
aad
xchg
jp
or
inc
sti
add
mov
loopew
and
or
repz
ficoms
sub
cmp
dec
push
adc
mov
cwtl
mov
inc
cmp
fbld
hlt
and
jmp
jg
xchg
xchg
mov
and
adc
or
mov
out
add
mov
xlat
pushf
pop
imul
insb
adc
cs
mov
sqrtps
imul
ja
addl
loop
pop
jns
mov
adc
dec
imul
stos
cli
pushl
movsb
or
in
pop
inc
mov
jecxz
fs
fscale
imul
outsl
jg
test
orb
cmovbe
push
mov
stos
sbb
les
push
icebp
xchg
adc
xor
pop
into
jns
out
adc
aaa
sub
outsb
fsubs
push
jns
jnp
jg
lods
jbe
inc
push
insb
xor
or
lret
les
in
inc
enter
fwait
popf
mov
in
stos
test
xchg
xor
iret
cli
mov
mov
jg
test
ret
ds
jne
icebp
subl
sahf
or
pop
pusha
mov
nop
leave
nop
jno
jge
cmp
cltd
int
in
jnp
inc
pop
das
scas
cmp
lock
ffreep
insb
lcall
adcb
leave
imul
xlat
mov
ret
sub
inc
mov
popa
cld
ds
cs
xor
pushf
sub
mov
int3
dec
mov
adc
pop
popf
std
pop
jo
push
popa
scas
int
fwait
push
cmp
scas
loope
jg
nop
cmp
mov
mov
cmpl
jne
imul
outsb
js
jns
rcll
and
pop
or
sahf
inc
jns
mov
push
rol
jmp
or
sbb
ja
inc
sub
or
mov
or
dec
lcall
rolb
into
xor
aaa
loop
xor
xor
adcb
add
sbb
ffreep
mov
xor
dec
ja
testb
push
stos
add
pop
push
jmp
cmp
orl
aam
and
aaa
stos
cmpsl
jecxz
mov
les
in
out
out
inc
mov
xchg
push
dec
call
push
and
mov
add
nop
mov
jns
pop
sarb
inc
jl
or
cmp
fstpl
mov
pop
mov
inc
jnp
mov
xchg
stc
and
adc
gs
stos
pop
inc
push
repnz
xor
lret
or
outsb
cwtl
shl
jmp
jb
test
push
clc
lcall
inc
movsl
out
int
insl
mov
push
adc
or
push
pop
sbb
scas
mov
mov
xchg
jg
sub
mov
adc
push
aas
or
jge
aad
sahf
sbb
cltd
aaa
xchg
icebp
ror
and
add
pushf
pop
lods
jo
jl
cmc
mov
sbb
ljmp
scas
xor
mov
pushf
lahf
cltd
and
mov
mov
push
mov
clc
frstor
mov
dec
sbb
mov
xor
jge
jno
divb
mov
mov
xchg
in
push
cmp
jl
sub
push
test
jb
out
jbe
sub
out
hlt
daa
leave
xor
pop
iret
sub
rdpmc
sbb
loope
pushl
js
test
leave
nop
pushf
dec
je
mov
pop
aaa
loop
imul
mov
jne
mov
and
ds
or
adc
push
mov
inc
shr
out
dec
sub
inc
test
cmp
jmp
je
jmp
mov
inc
jecxz
mov
mov
rcll
aad
movl
lea
jnp
inc
mov
xor
and
ja
into
add
loop
lret
loope
or
inc
pop
push
jae
data16
dec
jne
jne
scas
dec
mov
lock
adc
xchg
outsl
pop
cmp
fs
and
in
inc
leave
fistl
std
loopne
test
push
pop
push
mov
sarl
sub
shll
mov
pop
loopne
gs
mov
mov
int
in
hlt
pop
mov
mov
cmpsl
fildl
insb
mov
push
inc
sbb
dec
jg
jnp
or
mov
push
pushf
in
lock
pop
cmp
loope
cmc
popa
stc
add
aam
cmp
cmpsl
mov
adc
lcall
aas
andb
xchg
mov
jmp
in
movsb
fdivrs
add
pop
add
test
xor
xchg
or
jl
jp
test
push
dec
pushf
fcmovne
mov
dec
sti
xor
sub
cmpb
stos
stos
shrb
adc
or
inc
out
loopne
or
xor
test
test
push
pop
pushl
call
add
jecxz
xchg
jbe
loope
mov
fsubrl
jle
dec
jle
add
sbb
cld
sub
addr16
jae
je
test
lods
cmpsb
adc
cmp
addr16
add
into
aas
movsb
xchg
pop
pop
and
jmp
or
mov
push
cld
in
jnp
push
insl
mov
or
fcompl
cmp
adc
xchg
mov
iret
jle
das
inc
imul
test
dec
cwtl
iret
sti
in
mov
outsl
xchg
scas
ljmp
inc
xor
imul
test
or
jo
dec
jnp
mov
test
push
rcrb
jle
sahf
sahf
ss
fnstenv
jp
rcrb
fiaddl
pop
and
push
add
test
push
aam
push
jp
addr16
xchg
xor
popa
cmpsb
jne
mov
dec
sub
in
orl
pop
aas
adc
movsl
negl
jecxz
xchg
imul
lds
push
jbe
or
mov
pop
mov
sbb
push
popa
imul
mov
mov
push
inc
enter
cli
or
push
stc
cltd
pop
mov
int3
mov
sub
add
mov
inc
inc
jne
xchg
push
mov
mov
pop
loop
lods
mov
insl
out
js
mov
dec
mov
mov
pop
cwtl
cmp
shl
gs
push
icebp
cmc
aaa
fdivl
xchg
xchg
cmp
inc
pop
jbe
iret
je
jo
lahf
and
ss
mov
and
movlps
cmpsl
xchg
fldl
inc
cwtl
lea
out
dec
aas
push
jne,pt
addb
jne
roll
pop
dec
push
xchg
push
xlat
dec
inc
outsb
arpl
dec
adc
cmp
mov
fildl
xchg
inc
adc
out
or
pusha
and
lods
fidivs
xchg
inc
adc
cmpsl
outsb
sub
push
lret
or
xchg
or
rcrb
mov
dec
aam
sbb
je
pop
rorl
and
mov
sub
sub
fsubs
cmpsb
lds
sub
jg
mov
incb
loopne
dec
or
pop
add
adc
dec
mov
xor
xor
fwait
xchg
mov
imul
jbe
cwtl
adc
lds
xchg
lods
movsb
cmp
cmpsl
push
xor
mov
rcrl
lods
and
shrl
jo
pushf
xor
adc
cmp
fwait
cli
daa
stc
cli
cmp
lahf
enter
jb
in
fcompl
dec
mov
icebp
xchg
dec
adc
mov
jle
inc
rclb
popa
cmc
lea
fs
dec
mov
adc
jle
fdivs
lds
or
inc
ficompl
es
pop
mov
push
test
jg
in
je
in
cmp
jb
hlt
arpl
jmp
push
scas
aad
fldt
sbb
mov
iret
dec
and
cmp
pop
mov
gs
adc
push
lret
adc
fisttpll
inc
xchg
pop
mov
jle
test
mul
lcall
xor
add
test
xchg
jp
aas
push
imul
lock
ja
xor
fistpll
push
out
out
push
lds
cmp
cmp
cli
mov
out
mov
movsl
out
xor
pop
sub
xorl
dec
sbb
enter
fdivrl
adc
inc
push
shr
and
and
sub
sbb
inc
imul
and
sbb
push
js
mov
mov
pcmpeqd
test
push
mov
dec
daa
dec
test
test
popa
ss
cmpb
xor
test
dec
test
or
xchg
mov
or
ja
fadds
xchg
sti
mov
test
ss
fstl
out
sarb
mov
jp
jae
ja
sarl
roll
mov
cli
xchg
xorl
shll
xor
rorb
jbe
addr16
mov
xchg
push
xchg
daa
inc
lods
mov
outsl
and
pop
adc
cmp
sub
pop
int3
test
ret
xor
xchg
ret
pop
xor
loop
add
testb
lahf
addr16
push
sbb
pop
lods
fcomip
mov
shll
jg
lahf
movsb
rcr
clc
lret
adc
scas
push
stos
inc
lret
icebp
sbb
mov
jge
cwtl
jo
lea
sti
mov
sbb
mov
sub
fldt
faddl
test
rorb
jge
movsl
mov
movsb
lahf
dec
pop
mov
or
xor
imul
jecxz
mov
xchg
pop
int3
pop
repnz
mov
jl
jbe
mov
dec
arpl
nop
xchg
ret
testl
repz
repz
insl
incl
sub
xor
xor
pop
ficoms
popf
ficomps
imul
and
jecxz
xor
popf
mov
ret
pop
xor
jns
insl
iret
sbb
add
rcrb
jae
imul
nop
incl
or
cs
pop
xchg
xchg
cmp
jno
dec
hlt
scas
xor
fistl
aas
jge
sbb
jno
jecxz
fsubrs
cli
xor
rorl
loopne
push
mov
push
sub
lods
mov
pop
inc
das
negb
mov
iret
adc
sbb
push
cmp
loop
xor
outsb
and
shll
rcrl
dec
repz
adc
adc
push
mov
inc
addb
cwtl
std
iret
fcoms
lock
mov
outsb
inc
mov
cs
adc
mov
call
sub
in
cmpsl
lds
adc
icebp
dec
out
pop
inc
and
jg
xchg
in
jno
dec
xchg
out
cli
mov
xchg
je
popf
outsl
jae
mov
mov
jge
imull
divl
ja
pop
sub
lret
inc
xor
lret
xchg
mov
push
jbe
dec
jge
das
outsl
pop
adc
inc
pushf
out
out
loope
test
cmp
cld
add
into
test
mov
aad
mov
sti
xchg
mov
pop
sbb
xchg
int
icebp
pushf
dec
jae
out
pop
insl
jle
inc
mov
pop
jnp
xor
xchg
mov
pop
jmp
lret
adc
push
lret
xchg
and
mov
into
jecxz
mov
jo
mov
jg
ds
in
mov
and
and
pop
sar
aam
push
and
sahf
out
fwait
inc
adc
dec
pop
fs
pop
dec
inc
daa
loop
aaa
sbb
and
sub
movsl
fsubs
mov
inc
jl
sbb
enter
repnz
cmc
icebp
dec
jl
adc
aas
es
in
pop
ret
xor
call
outsl
js
xchg
testl
in
jecxz
insl
push
ja
sub
pop
sbb
test
insb
or
and
rorb
push
mov
sbbl
fxch
imul
jl
adc
aaa
xchg
hlt
icebp
push
or
and
jnp
adcb
cmp
ret
scas
mov
insb
lret
test
cmp
mov
or
jmp
mov
dec
xlat
shrb
cmp
or
pop
bound
clc
push
and
lds
adc
clc
out
pushf
enter
scas
cmp
add
mov
push
icebp
cli
aad
mov
cld
jbe
pop
xchg
addb
aaa
stos
out
pop
mov
jo
hlt
jno
xchg
mulb
arpl
mov
repnz
lcall
loopne
sub
or
fisttpll
lret
lret
imul
or
call
dec
jmp
fs
or
bound
xchg
mov
cli
sub
jne
jb
jns
pop
inc
aaa
popl
sub
jecxz
mov
xorb
popa
lahf
fnstsw
pop
insl
test
mov
hlt
ja
or
sahf
in
dec
int
xor
push
scas
mov
loop
mov
xor
xor
push
mov
pop
mov
xorl
dec
sub
cli
xorl
popa
cmp
mov
lret
cli
sbbl
xchg
gs
aam
sbb
dec
push
aad
lret
aaa
rcrb
lea
outsl
sbb
into
aas
push
roll
pop
mov
jecxz
dec
lea
je
clc
aam
adc
nop
aad
mov
xchg
clc
scas
cmpb
push
cmpsb
lods
mov
push
jno
mov
cmp
cmp
rcll
cmp
shll
sbb
scas
imul
xchg
pop
pop
cmc
test
data16
push
push
push
sub
fiadds
negl
xchg
arpl
lret
lods
hlt
jl
pop
inc
cmp
pop
test
add
cs
pop
in
push
aad
jno
test
imul
mov
jo
vmptrld
mov
icebp
mov
sbb
leave
sbb
sub
mov
dec
cmp
call
mov
push
jp
into
insl
icebp
mov
xchg
ret
mov
arpl
outsl
lcall
add
jo
inc
insl
mov
les
in
inc
jg
lods
addb
fwait
dec
jne
jle
cmp
xor
add
aas
std
in
push
pop
cmp
test
lea
nop
inc
cmp
mov
and
push
pusha
imul
jb
push
sub
add
adcb
xor
scas
popa
faddl
int
fimull
mov
and
ret
sub
xchg
jne
xlat
aas
xchg
aad
sub
push
add
jnp
imul
fwait
call
outsb
pushf
inc
inc
dec
mov
dec
das
xchg
mov
mov
or
adc
push
popa
sbb
aaa
xchg
cmp
mov
out
lds
and
mov
fwait
xchg
inc
and
dec
lods
add
int
and
fisttps
test
xor
lods
push
ja
sub
xchg
pushl
in
movsb
dec
test
dec
gs
adc
fisubs
sub
adc
dec
jl
cltd
outsb
lods
or
es
xchg
dec
std
nop
add
insl
adc
mov
push
test
out
jg
adc
movsb
mov
mov
movsl
ss
mov
inc
sti
loopne
adc
out
sbb
push
repnz
es
push
fstpl
in
xchg
int3
mov
outsb
hlt
mov
stc
scas
shll
add
repnz
scas
lods
inc
dec
cmp
out
mov
or
adc
dec
cmc
xor
enter
aam
call
je
std
shlb
inc
jo
data16
add
mov
in
decb
mov
sbb
pop
mov
fiaddl
sbb
inc
shlb
pop
outsb
leave
mov
cmp
pop
push
pop
sub
test
jge
inc
imul
inc
xor
lahf
sub
jge
lea
loope
ret
dec
mov
lcall
add
jbe
in
aas
mov
cmp
and
xchg
int3
test
mov
mov
imul
not
push
or
dec
cmp
mov
imul
nop
scas
test
xchg
imul
mov
jns
inc
sub
pop
shll
mov
scas
and
shll
cmp
scas
inc
mov
jb
lea
mov
inc
add
test
clc
call
movsl
sti
pushf
xor
movsl
jnp
and
adc
loopne
adc
mov
ja
fldenv
repnz
rcrb
add
mov
pop
xchg
fstp
adc
cmp
cmc
add
ret
mov
stos
repnz
push
fisubrl
shll
in
cmp
inc
dec
inc
mov
js
mov
lods
cmp
ljmp
out
jnp
pop
mov
orl
insl
jae
sti
jne
enter
movsl
xor
aaa
cwtl
test
lcall
std
arpl
and
scas
notl
xor
clc
push
in
or
and
arpl
adc
enter
lea
adc
xchg
lods
inc
mov
and
sub
adc
cwtl
add
enter
xorb
rorl
pop
pop
add
xor
out
sub
mov
jns
outsl
dec
mov
push
les
sbb
jecxz
fisttpl
jae
pop
pop
arpl
leave
xor
imul
jle
fxch
and
addb
mov
rcll
cmp
cld
or
test
cli
lahf
je
jge
into
dec
dec
and
pop
loop
jb
and
add
and
enter
popf
xor
add
mov
loope
pushf
mov
inc
subl
dec
push
test
in
bound
nop
mov
movsl
lock
mov
dec
push
push
data16
push
pop
enter
inc
pop
or
or
mov
scas
push
push
or
adc
shl
hlt
dec
sbb
sub
out
test
data16
stc
push
shr
jl
sub
in
xchg
sbb
sar
fmul
das
dec
jl
inc
dec
out
lods
call
cld
inc
or
adc
cs
out
jae
jno
popf
pop
cmp
jne
ds
sbb
push
lret
daa
push
ficomps
outsb
xor
jge
leave
cmp
aam
in
mov
sbb
iret
cltd
hlt
mov
and
shlb
psrlw
pop
xor
pushf
sbb
sbb
in
xchg
adcb
sbb
ficompl
imul
fs
icebp
push
jnp
test
mov
inc
scas
cmp
add
and
xchg
test
jo
cmpsb
mov
cmp
cmpsl
icebp
inc
ret
imul
sti
jb
push
sub
xor
sahf
xchg
pop
sbb
or
sub
xor
sbb
push
aad
and
pop
pop
mov
aaa
aad
stc
les
call
idivb
lahf
pop
jp
inc
push
hlt
or
stos
dec
pop
and
jmp
hlt
pop
sbb
add
and
inc
pusha
shlb
jbe
xchg
imul
subl
mov
or
fsub
sbb
sub
adc
cmpsl
mov
repnz
inc
jae
mov
pop
pop
rcl
mov
cmpsb
nop
sub
fs
jo
outsb
fwait
je
push
push
outsb
sbb
outsb
pop
int
sub
lahf
divb
in
dec
mov
ret
mov
addr16
mov
int
test
mov
sub
imul
inc
scas
cmp
pop
xor
arpl
inc
nop
pop
fs
repnz
inc
rorl
sub
out
nop
aaa
scas
pop
mov
nop
pop
lds
rcrb
popa
gs
xlat
enter
stos
jns
in
push
jg
fdivs
xor
and
push
insl
hlt
pop
loop
mov
add
add
pusha
push
out
mov
mov
pop
cmp
rclb
or
dec
ss
cmp
push
push
cmpl
repnz
push
mov
sbb
int
mov
sbb
adc
lcall
sbb
mov
mov
xor
fwait
sbb
dec
and
dec
and
dec
xlat
orl
push
and
and
or
and
xor
mov
pop
mov
cmp
and
int3
xchg
cmp
sbb
push
mov
inc
dec
loope
ja
lret
nop
out
stos
pop
int3
outsb
fxch
add
and
adc
cmp
test
mov
testb
rcl
movsb
outsb
mov
out
cmp
and
sub
mov
cmovge
les
xlat
mull
lock
push
shr
into
shl
aaa
mov
out
sbb
mov
das
xor
cmp
push
dec
daa
fstpl
stos
inc
push
sbb
dec
and
pop
sbb
sbb
aaa
cmp
rol
movb
xchg
dec
xchg
iret
pop
jecxz
adc
dec
jp
test
xor
clc
dec
aas
or
sbb
lods
sti
sbb
lcall
and
mov
cli
push
mov
test
add
mov
pop
push
lock
aas
popf
sub
movsl
sub
lods
popa
int
or
sbb
inc
aam
dec
xor
push
add
adc
push
add
rcrb
sbb
xchg
out
dec
hlt
mov
mov
jnp
lcall
fldcw
rcpps
loopne
mov
js
inc
and
arpl
lods
sbb
push
movsb
iret
cmp
repz
inc
iret
xor
mov
adc
in
test
or
mov
std
idiv
and
mov
lret
sti
jg
and
xlat
pop
iret
rolb
ss
and
dec
sub
mov
clc
jge
jmp
add
popa
jp
dec
shll
clc
mov
iret
cmc
mov
sub
xchg
jl
dec
cmc
add
xor
push
jle
mov
push
jle
adc
cmp
pop
dec
pop
and
cmp
ficoms
movsb
fwait
mov
sub
jb
sbb
outsl
jmp
mov
jecxz
popa
pop
adc
dec
loopew
fcmovnbe
std
xor
mov
out
sub
fldl
stc
push
sub
shll
mov
sbb
push
xchg
rcll
mov
xchg
mov
mov
insb
repnz
test
cmpsb
ds
push
sbb
xchg
xor
add
adc
and
adc
outsl
cli
aam
insb
out
insb
xor
fwait
movl
arpl
stos
push
mov
or
aaa
dec
jbe
mov
sti
cli
pop
pmulhw
stos
out
lea
or
or
insb
add
xchg
notb
out
js
testl
sti
jbe
add
cmp
sub
dec
data16
arpl
push
fidivrl
pop
out
inc
loopne
shl
sbb
andb
aam
out
xor
push
fs
fisubrs
loope
mov
cmpl
add
cmp
leave
arpl
mov
mov
xchg
sbb
mov
imul
in
mov
lods
arpl
sub
cmp
xor
sub
mov
xchg
mov
dec
sub
mov
imull
dec
add
int
es
dec
and
out
stos
popf
insl
cmc
pop
cmp
insb
in
lds
pop
cld
test
push
cli
mov
push
push
movsl
dec
lahf
xchg
into
and
rolb
movsl
dec
cltd
and
adc
mov
jle
test
decb
fnstsw
fmull
pop
lock
imul
or
jle
gs
out
jg
mov
cmp
mov
andl
xor
mov
stos
xlat
mov
inc
cmp
stos
add
jne
fidivl
bnd
mov
mov
sbb
mov
rcrb
inc
rorb
mov
xchg
nop
aad
out
jmp
push
mov
jae
nop
divl
jnp
in
lods
ljmp
test
cmpsb
dec
jnp
mov
push
pop
add
add
ficoms
sub
push
sub
scas
push
enter
mov
inc
sub
aad
shll
inc
inc
jns
subb
xchg
or
mov
scas
fmull
and
je
loope
ficompl
shl
pop
mov
xchg
pop
xchg
shlb
test
add
mov
into
imul
negl
lds
aas
xor
int
dec
mov
add
mov
add
sub
test
fisubs
dec
ret
cli
sbb
scas
push
mov
pusha
inc
xchg
mov
out
push
testb
sbb
mov
cmp
ret
ja
cmp
loopne
lcall
mov
inc
fldcw
xor
nop
sub
adc
lcall
push
fdivrp
pop
jg
adc
lret
xor
test
mov
mov
lds
cs
inc
jns
sahf
jle
or
push
push
mov
mov
adc
pop
gs
jge
dec
jmp
fbld
xorb
outsl
xchg
adc
ja
shrl
repnz
pusha
cmp
xchg
sub
hlt
or
jnp
push
lock
addb
ret
out
mov
mov
and
imul
cli
gs
mov
lahf
test
xchg
dec
sub
sub
pop
daa
push
test
cmp
ret
daa
fs
insl
sahf
std
mov
jle
sbb
lods
negb
test
inc
test
sub
aad
dec
xchg
scas
fwait
jmp
mov
js
add
imul
sbb
popa
in
or
lcall
lret
testb
ja
mov
xor
push
lea
or
test
or
ret
fstpt
sbb
sarb
addr16
mov
sub
pop
add
pop
nop
sti
sub
std
sub
out
xor
mov
lock
inc
popa
clc
mov
mov
mov
inc
mov
decl
adc
jne
mov
inc
lahf
inc
sbb
fidivl
rcll
aas
mov
push
and
shrl
jmp
inc
sub
neg
xchg
repnz
test
aaa
sub
ljmp
popf
xor
loope
fimuls
sbb
sbb
mov
push
in
or
pop
in
cmpsb
shlb
out
addl
iret
das
mov
popl
sbb
nop
xor
jbe
int3
adc
enter
mov
test
jecxz
xor
popa
imul
push
cld
popa
jae
inc
in
xor
and
jge
xor
outsb
insb
mov
lds
hlt
mov
xor
imul
add
hlt
xchg
push
mov
rclb
push
jmp
sub
cmp
xchg
xor
gs
pop
mov
mov
jecxz
mov
cmp
adc
bswap
in
mov
cmp
or
sbb
xor
and
iret
ss
mov
int
icebp
jmp
insl
lret
adc
sbb
in
xor
dec
ret
cmp
mov
ficomps
mov
jns
movsb
rorl
pop
pop
addr16
xor
push
data16
ss
jle
sbb
add
mov
push
lea
add
out
push
push
push
dec
pop
cltd
stos
or
cmp
imul
roll
bound
sbb
int
dec
xor
rorb
inc
mul
imul
imul
scas
sbbb
insb
mov
insb
inc
or
push
xchg
int3
lcall
lcall
inc
les
jnp
test
idivl
add
mov
jg
lret
dec
sbbb
scas
call
sub
lcall
sbb
cli
pusha
push
cmc
cltd
test
les
pusha
sbb
fcomip
xor
icebp
jo
cwtl
stos
mov
ret
ror
fwait
sahf
jne
pop
rol
xchg
dec
add
xorl
mov
jg
xchg
fdivl
adc
adc
nop
sbb
cltd
das
in
cld
int
jp
addr16
ljmp
pop
loope
inc
insb
dec
push
xor
mov
popf
jno
jae
cmp
testb
xchg
pop
movsl
push
repnz
push
aaa
xor
fwait
or
sarb
rcrl
sbb
push
xchg
test
dec
insl
or
xchg
dec
stos
cwtl
pop
cli
mov
rcrl
xchg
fbstp
push
xlat
jmp
mov
mov
push
or
xchg
lods
imul
sub
loop
lcall
in
gs
pop
aas
dec
dec
or
addr16
add
inc
cmpsb
xor
mov
mov
hlt
ds
aas
pop
inc
dec
jno
shrb
sub
rcll
xor
out
repnz
aam
jnp
mov
sub
push
test
add
cmp
adcb
push
or
leave
push
jbe
or
jle
ret
or
xor
mov
jecxz
mov
add
daa
mov
cmp
and
ret
xchg
sbb
ffreep
push
xlat
add
add
ja
sub
fdivrp
fstl
bnd
push
jmp
ljmp
sbb
xchg
inc
in
fs
and
mov
dec
das
mov
roll
sub
dec
or
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
or
mov
dec
mov
xor
add
adcl
mov
sub
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
sbb
mov
mov
mov
xor
mov
xorl
add
movzwl
mov
andl
movb
adc
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
subl
mov
xorl
xor
addl
sub
addl
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
andl
push
notl
movl
mov
addl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
andl
xor
mov
xor
mov
sbbl
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
cmp
movl
jb
mov
xor
add
jmp
sub
mov
mov
or
mov
xor
mov
addl
add
adcl
movzwl
movl
mov
mov
movzwl
addl
xor
adcl
add
mov
mov
mov
inc
inc
mov
cmp
jmp
shl
inc
dec
cmp
push
mov
pop
cmp
xor
jp
mov
mov
call
mov
jae
mov
push
mov
dec
xor
pushf
cmp
mov
fistpl
inc
bound
pop
adc
lea
es
jmp
rcr
xor
xchg
cmp
imul
cmp
push
nop
test
mov
je
add
mov
cmc
int
cmp
push
mov
pop
leave
ja
push
or
add
neg
xor
or
jnp
aas
int3
dec
dec
pop
sub
faddl
mov
xchg
aaa
cmp
lcall
jb
inc
in
ret
lods
pop
mov
mull
adc
cmp
xor
popa
movsb
xor
je
addl
xor
loopne
or
push
jp
jmp
pop
push
push
adc
mov
aas
in
inc
mov
xor
pop
rcrb
imul
ret
daa
outsb
push
dec
ja
outsl
cwtl
sbb
pop
stos
lret
je
lds
jne
gs
pop
clc
dec
jg
jnp
outsl
aad
lcall
xchg
dec
mov
js
inc
mov
xchg
insb
mov
jae
in
xchg
sub
pop
dec
fsubp
push
fsubrl
xor
loope
int3
jp
fst
pop
cmpb
pop
fistpl
xor
adc
js
into
xor
cmp
out
lods
in
jmp
and
daa
jns
xor
mov
js
movsb
mov
sub
or
daa
jmp
dec
es
cs
mov
cmpsb
shll
mov
and
cwtl
push
or
sub
sbb
and
sbb
and
fisubl
rcrl
jmp
mov
push
push
and
pop
push
shll
sti
cmp
lcall
scas
popf
xor
ljmp
loop
and
idivb
jle
addr16
add
adc
add
sbb
sub
out
xor
sub
mov
push
xchg
sub
rolb
sti
fnstsw
dec
decl
add
push
cmc
out
arpl
jle
outsl
or
movsb
movb
or
push
test
mov
mov
ja
jp
sbb
nop
mov
mov
aad
jg
xchg
cmp
adc
int
shrl
inc
loopne
es
xor
inc
pop
arpl
popa
lock
out
or
daa
mov
sbb
sub
xchg
xor
call
add
sub
mov
adc
pop
or
add
lret
sarb
adc
adc
sub
and
push
mov
xchg
mov
ja
add
nop
xchg
or
sub
dec
mov
add
mov
loope
ret
mov
mov
mov
jnp,pn
lcall
stos
adcl
cmpsl
loope
rolb
mov
sti
pop
cmp
jbe
insb
mov
push
jae
xchg
cmp
outsl
repz
sbb
iret
jo
bound
ljmp
pop
and
jmp
testl
add
cmp
cltd
adc
push
jl
and
pop
sti
xchg
sub
xchg
mov
sub
adc
push
mov
out
mov
sub
mov
inc
loopne
inc
cwtl
dec
sbb
repnz
and
push
and
fs
in
sub
cmc
pop
ds
das
bound
fs
mov
mov
adc
jae
ljmp
pop
outsl
das
push
mov
sbb
outsb
xchg
pop
sub
hlt
mov
jo
outsl
add
loop
ja
mov
cmp
and
add
push
fwait
hlt
xor
mov
or
movsl
and
and
outsl
jb
rclb
mov
shll
jae
jmp
mov
gs
ficoml
mov
sbb
cmpsb
xchg
addr16
pushf
ss
xor
and
cmc
negb
push
daa
push
xor
jl
push
push
push
cmp
out
xchg
test
push
dec
bound
inc
push
fmul
pop
lret
lock
dec
outsl
add
ficoml
aas
adc
dec
mov
xchg
adc
xchg
outsl
dec
dec
or
scas
mov
push
jle
je
mov
fildll
shr
lods
xorb
lahf
push
adc
fistpl
or
sarl
xchg
pop
out
cmp
out
inc
push
es
jge
lahf
mov
or
adc
xchg
std
scas
xor
lea
jne
pop
cmpsb
pop
repz
or
lahf
and
add
outsl
sahf
lods
divb
out
movsl
aam
inc
and
shl
mov
sub
pop
leave
lahf
cmc
sbb
xchg
insl
mov
jmp
dec
or
or
ret
imul
sbb
insb
cwtl
pop
sbb
stc
pushl
add
out
add
scas
jb
std
cmp
or
mov
sub
push
leave
into
mov
daa
test
out
cmp
fldt
adc
or
cmc
out
adc
in
ss
cwtl
ror
icebp
hlt
jne
in
cli
dec
mov
xor
lock
int
std
jecxz
jmp
sbb
mov
fidivrl
push
jecxz
push
dec
xor
stos
leave
mov
shlb
dec
xchg
xchg
add
incb
xchg
ja
mov
aas
in
xlat
lcall
mov
dec
sahf
mov
insl
adc
fs
rcrb
out
iret
cs
out
aam
leave
pop
movsl
jge
cmp
sub
ret
mov
sub
popa
adcl
lcall
dec
repnz
jae
mov
jmp
and
cmp
lahf
dec
pop
mov
popa
loop
ret
mov
add
iret
test
fsts
leave
call
xchg
loope
int
dec
movsl
jns
and
shlb
dec
cli
repz
inc
or
jbe
mov
mov
cmp
mov
or
inc
ret
movsb
repnz
mov
lret
popa
or
cmp
fisubl
roll
or
fimull
lods
xlat
mov
call
mov
fcmovb
scas
sub
daa
mulb
and
or
push
jno
and
xor
in
ret
imul
mov
aad
dec
jge
mov
mov
rcl
xchg
pop
aam
fst
adc
fwait
jp
cwtl
push
add
pop
push
es
adc
xchg
outsb
nop
add
out
add
pop
jbe
or
fs
push
fiadds
xchg
ds
mov
mov
movsb
or
push
hlt
dec
nop
cmpsb
xchg
inc
arpl
or
mov
aaa
push
sbb
jns
pop
jo
pop
mov
add
adc
xchg
or
pop
out
incb
test
xchg
test
and
cld
divl
iret
movsb
mov
cltd
popa
add
xchg
push
jne
sub
xchg
hlt
jmp
stos
and
in
add
call
outsl
add
cmp
out
cs
sub
cmp
fisubrl
add
leave
ss
cmc
movl
scas
fdivrs
jge
std
jb
or
mov
add
pop
aam
rol
aam
inc
dec
rorl
loopne
mov
cmc
lods
sub
sbb
mov
xor
jle
nop
push
imul
scas
icebp
stos
sbb
add
sbb
shll
dec
xor
jno
mov
dec
lahf
mov
lret
cmp
cwtl
dec
aad
add
inc
sub
mov
aad
and
imul
cmc
test
fwait
out
push
ss
push
ficompl
inc
test
lock
lods
pop
leave
mov
sub
jno
aad
ljmp
in
scas
aaa
jbe
and
mov
jmp
out
aaa
loopne
or
loop
dec
push
jno
lret
sub
aaa
inc
mov
pop
jbe
push
imul
andb
shll
ljmp
inc
cmpsl
dec
sbb
push
jae
ja
adc
cmpsb
push
rcll
out
out
aaa
add
jno
mov
fs
dec
movsl
dec
cmp
push
mov
xchg
dec
movsb
ficomps
pusha
dec
push
in
xlat
pop
sbb
sahf
xor
fs
jg
mov
xchg
das
or
lret
cmp
mov
push
mov
xchg
adc
sti
xor
push
les
es
pmaxub
test
pop
mov
sti
adc
inc
out
cltd
out
mov
mov
and
add
fstps
out
rorl
rorb
int3
hlt
test
add
in
mov
or
lods
xchg
cmp
gs
int3
sbb
push
dec
pushf
mov
icebp
adc
push
dec
xchg
aam
mov
inc
cs
sbb
pop
push
lods
into
mov
lcall
add
and
dec
push
fmul
cmp
mov
fisttps
hlt
xchg
jbe
test
imul
test
orb
lret
dec
sub
cs
imulb
test
shr
repnz
loope
mov
add
insl
dec
imul
inc
dec
cli
push
in
jb
cld
sbb
daa
daa
adc
jp
pop
loop
mov
enter
xlat
ja
sbb
cmpsb
xchg
and
cmp
test
xor
lcall
cmp
cld
xor
or
in
scas
nop
lea
enter
jbe
xor
rcrl
mov
xchg
nop
imul
das
sarl
jno
out
sub
js
gs
push
and
fmul
and
jl
mov
movsl
rcrb
push
test
and
xor
sub
mov
jecxz
lods
faddl
sub
scas
in
push
mov
xor
jno
cmp
gs
into
and
push
sbb
loop
repz
add
in
mov
ret
mov
ds
movsb
inc
jo
test
clc
pop
and
hlt
shlb
push
loope
mov
jae
adc
les
jae
and
pusha
or
data16
or
arpl
shlb
lds
or
jbe
cmp
rcr
dec
xchg
js
push
xchg
push
mulb
and
pop
subl
and
push
dec
push
add
ret
pop
add
cmp
ficoms
loope
sarb
sbb
and
xchg
lea
adc
push
les
int
pop
in
xor
jne
cmp
mov
popa
push
inc
movsb
cld
mov
fwait
leave
pop
sub
or
cmp
push
fistl
adc
or
push
divb
ret
int3
inc
inc
fstps
jno
nop
dec
xor
repnz
cmpb
sbb
imul
pop
dec
test
enter
fbstp
arpl
jnp
pop
into
mov
dec
enter
mov
aam
mov
mov
imul
mov
shlb
lock
mov
push
movsb
cmp
fdivrs
icebp
lcall
ficomps
jnp
push
jbe
icebp
nop
pushf
xor
push
leave
lret
xor
jl
cmp
ds
mov
rcr
and
xor
imul
js
sbb
decb
mov
jl
mov
xor
test
fisubs
imul
scas
mov
mov
mov
dec
outsb
adc
loopne
fcomps
adc
popa
mov
mov
leave
lea
add
or
mov
cmpsl
fmull
xor
mov
outsl
inc
inc
push
mov
xchg
jge
mov
mov
push
add
push
out
out
and
sub
inc
add
repnz
dec
or
es
mov
xchg
dec
push
movsb
outsb
cld
jmp
sbb
push
dec
rcrb
or
and
mov
pop
stos
fwait
jmp
pop
dec
add
scas
inc
mov
mov
xor
lods
lock
pop
dec
lods
dec
inc
fcomps
hlt
pop
or
add
into
lret
push
jnp
sbb
push
pop
bound
mov
lock
mov
lods
jl
adc
sub
cli
pushf
int
int
xchg
mov
push
inc
lock
xor
or
in
lock
loope
jbe
popa
xor
int3
dec
sbb
mov
mov
mov
push
das
mov
fldl
call
push
sti
mov
sub
imull
es
mov
jne
mov
mov
idivb
mov
adc
jae
adc
mov
lds
push
add
xor
dec
pop
add
aad
cli
notl
or
jmp
mov
icebp
rol
pop
mov
int3
xor
jmp
shrl
repnz
fstpl
inc
add
dec
cwtl
scas
mov
jns
push
pop
and
int3
clc
or
mov
inc
lcall
pop
mov
pop
xchg
imul
inc
xchg
les
cwtl
cmp
jmp
and
cwtl
es
std
mov
pop
or
repz
popf
movsl
cmpsl
jns
outsb
inc
sub
fisttps
xchg
mov
sub
jnp
fadd
test
lea
arpl
xlat
cwtl
fstpl
cmp
cmp
push
sub
imul
jne
cmp
push
adc
xor
movb
xchg
xchg
daa
cld
inc
ja
xor
sub
pusha
daa
out
arpl
jmp
xor
rclb
lods
or
sbb
jmp
fdivl
push
lea
jb
jmp
mov
popa
iret
fadds
shr
sub
mov
xchg
out
lds
push
into
aas
jnp
lods
push
sub
sub
sub
jbe
cmp
mov
mov
ss
jo
mov
adc
push
inc
popf
add
fisttpl
xchg
jmp
not
ret
add
sub
cmp
gs
fldcw
inc
sti
decw
cmp
insl
cmp
in
cmp
jo
je
insb
jle
lahf
int
xchg
cmpsl
cs
mov
jle
repz
cmpsb
xlat
nop
add
cmpsl
gs
inc
repnz
pop
adc
aam
fistps
je
js
lret
in
cmp
inc
mov
jp
mov
lods
push
xor
sub
xlat
jns
adc
lods
cmp
cmp
or
cltd
xor
or
sbb
pop
repz
pop
push
es
mov
sub
iret
gs
add
pop
jbe
jl
mov
push
xchg
out
jne
mov
in
hlt
cmp
cmp
adc
in
push
jmp
call
and
add
adc
sti
mov
sbb
movsl
sub
pop
into
mov
les
inc
icebp
xchg
mov
mov
cmpsl
mov
or
pop
pop
mov
dec
testl
jno
scas
ret
xchg
loopne
xor
popf
enter
xor
stos
xchg
jnp
pop
sar
inc
pop
repnz
jmp
mov
push
lcall
xchg
mov
jp
int3
and
mov
xor
mulb
mov
popa
cmp
and
push
dec
loopne
mul
ja
push
cli
je
adc
push
stos
arpl
mov
inc
add
or
xor
mov
lods
imul
push
and
jl
mov
and
xor
sbb
jg
hlt
jne
out
mov
movsb
out
jecxz
push
mov
cmc
cmpsl
add
push
add
fsub
lods
pop
repz
out
in
sbb
mov
mov
enter
jg
push
into
out
out
pop
and
ljmp
xor
lods
scas
iret
xchg
sbb
dec
xor
or
xchg
jne
testl
cmc
jle
and
leave
cld
mull
mov
sbb
sbb
xchg
pop
lret
xorl
xlat
or
xlat
out
loopne
xchg
sbb
sub
imull
add
xchg
add
movsl
fistps
scas
pop
and
bound
cmp
add
inc
enter
ja
push
movsb
push
jb
out
adc
adc
fs
jne
xchg
lds
bound
xchg
xor
pop
push
and
ret
add
inc
jecxz
push
jne
pop
dec
pop
test
jbe
fmuls
sti
cltd
bound
lods
fldenv
testb
fpatan
addb
push
push
in
push
cmp
push
xchg
sub
push
cld
sub
loop
iret
pop
mov
push
test
aaa
int
ret
imul
inc
inc
lds
test
inc
push
mov
xchg
dec
test
sarl
nopl
mov
pushl
sub
les
jb
add
cmp
clflush
repz
les
mov
jecxz
cwtl
xor
and
cmp
xchg
pop
imul
out
lahf
xchg
push
loope
jbe
test
lcall
mov
arpl
dec
xchg
xchg
fwait
xlat
inc
cmp
jp
leave
pop
inc
clc
mov
or
jne
nop
shrb
shlb
pop
inc
push
daa
dec
lock
xchg
fldt
mov
mov
in
leave
ljmp
inc
and
and
jo
or
jno
cmc
xlat
lcall
fldcw
pop
cltd
popa
and
adc
sbb
jl
ljmp
bound
jp
pop
xor
imul
push
mov
mov
and
aad
scas
adc
xlat
into
mov
sbb
out
and
in
cmpsb
sub
loopne
lods
jmp
adc
xchg
fstpl
mov
in
sub
out
mulb
mov
xchg
mov
fisubl
mov
sti
xor
xchg
jne
shll
aas
dec
dec
or
lret
inc
jge
bound
cmp
inc
jle
out
pop
outsl
sar
stos
lahf
out
xchg
jmp
and
dec
cwtl
inc
xorl
push
shlb
cmp
clc
cld
dec
pop
adc
movsb
popf
sbb
imul
jae
sti
dec
sub
mov
push
decb
push
fidivl
fsubs
iret
in
or
orl
aam
bound
gs
dec
mov
ljmp
lret
fcomps
add
sub
pop
js
and
xor
popa
sub
inc
mov
sub
lcall
ljmp
fstpl
int3
inc
mov
outsl
cmp
or
sub
out
fstpl
shl
inc
and
scas
rcr
icebp
sbb
cmp
jae
leave
dec
push
pop
push
mov
je
or
cmovle
loope
aas
dec
pop
lock
mov
test
xor
divl
mov
jbe
addl
add
adc
fnstenv
movsl
adc
out
in
pop
dec
call
sti
push
adc
sbb
mov
mov
test
pop
jno
mov
test
inc
xor
xchg
xor
or
inc
dec
pop
dec
shll
insl
sub
out
mov
ret
in
je
xchg
add
dec
bound
mov
sub
arpl
outsl
mov
pop
xchg
int
repnz
int3
fidivrl
adc
in
dec
cwtl
mov
push
cmp
sbb
push
dec
or
xchg
ret
pop
nop
fistpll
stc
cmpsl
loope,pt
sub
cmp
mov
sbb
mov
int3
mov
push
xor
xlat
aas
jg
div
mov
or
inc
loop
jae
rclb
xchg
adc
in
cs
inc
sub
or
pop
out
push
xchg
aam
mov
mov
dec
dec
addb
in
scas
mov
out
sti
cmpb
sub
rcrb
lds
loope
inc
ret
out
inc
mov
add
sbb
in
inc
fistl
jmp
jae
cmp
mov
jne
jnp
push
cmp
jns
imul
pop
sub
push
sub
in
dec
repz
nop
push
jle
in
sbb
adc
daa
mov
push
lret
stos
jge
rcrb
in
mov
bound
or
add
sti
stos
mov
dec
movsl
xor
add
mov
leave
insb
cmp
push
push
xacquire
into
cmc
nop
sub
mov
inc
aam
cltd
mov
inc
or
xchg
jns
adc
mov
imul
les
jo
divl
loope
dec
sub
fidivs
or
insb
out
sbb
popa
gs
fstl
push
sub
mov
and
cld
sub
cld
adc
pop
cmp
roll
gs
mov
movsl
into
xchg
jne
push
ret
cld
cld
stc
and
test
subl
mov
jns
push
inc
cmc
cwtl
push
mov
ficompl
adc
pop
adc
mov
enter
xchg
fucom
dec
jl
lock
dec
lods
pop
loope
ror
cmp
xchg
cmp
pop
cld
sahf
push
xlat
xchg
cmpsl
or
jno
rcll
fdivrl
add
mov
aaa
fistl
mov
pop
out
jle
jp
orps
push
cmp
adc
pop
mov
shll
xlat
xchg
enter
cltd
mov
aas
pushf
push
rorl
cmp
jno
push
or
jae
into
add
hlt
popf
pushl
mov
mov
je
push
push
xchg
push
arpl
push
inc
inc
cmp
push
dec
inc
arpl
cltd
jge
and
mov
add
sub
test
cmc
mov
jae
push
cmpsl
or
and
mov
pusha
mov
xchg
add
pop
les
adcb
pop
das
out
mov
sahf
add
imul
out
cmpsl
lcall
clc
repnz
ss
cltd
rcl
jne
mov
mov
and
mov
xor
cmpsl
stc
daa
push
sbb
pusha
jb
xchg
nop
dec
pop
lods
mov
testl
sub
sbb
clc
xchg
lods
push
fnstenv
int3
inc
sti
aaa
ret
inc
jmp
add
mov
xchg
scas
inc
xchg
lock
adc
repnz
lock
inc
stc
inc
arpl
js
cmpl
xchg
dec
xchg
mov
xor
test
bound
clc
lea
sub
jge
call
js
jb
imul
stos
or
imul
loopne
enter
sbbl
insb
push
lods
bound
jo
dec
fistl
pop
jo
inc
cs
arpl
test
scas
pop
je
movsb
sbb
mov
loop
jl
test
jno
ret
mov
mov
or
js
xor
cmp
and
jnp
cmp
movsl
popf
sti
xlat
arpl
xchg
sahf
inc
dec
loope
sub
ret
and
orb
pop
jnp
ret
repz
addr16
cld
mov
dec
popa
push
jg
or
mov
aad
mov
fs
xor
push
dec
adc
mov
jp
xchg
ds
pop
std
mov
cmp
mov
dec
lods
dec
sub
pop
imull
jge
and
leave
adc
int3
mov
shll
rclb
lods
and
add
out
aas
insb
mov
xchg
cld
hlt
cld
adcb
in
cld
xchg
dec
leave
jb
sub
pop
or
mov
pcmpeqw
out
popf
mov
mov
stc
in
mov
pop
mov
adc
ja
fistps
jb
push
out
iret
jnp
and
inc
xchg
out
lock
lret
cwtl
sarb
arpl
or
popa
mov
ret
xchg
mov
lds
dec
arpl
push
sbb
pop
pop
push
lahf
cmp
jl
mov
lock
js
loop
fs
mov
dec
inc
sub
scas
mov
lods
in
inc
stc
shl
sar
lock
inc
outsl
or
lret
in
xchg
jle
push
jmp
or
xor
fisttps
sub
fldl
stc
mov
mov
lock
jae
clc
jns
push
and
pop
scas
out
cwtl
ljmp
imulb
adc
push
clc
cmpsb
add
int
lret
mov
sub
cld
jns
sbb
xlat
jle
xor
and
das
adc
and
ror
mov
cmove
pop
sub
add
jg
or
lock
lds
xchg
pop
lea
loop
mov
jecxz
mov
adc
add
push
adc
test
movsb
or
fcmovnbe
and
pop
imul
add
cmc
in
rclb
or
and
ret
jmp
xchg
mov
dec
fisubl
shr
or
sbb
jbe
sub
and
push
sub
sbb
dec
add
popa
rcl
mov
push
mov
cmp
cmp
in
push
adcl
jge
push
hlt
mov
jg
adc
mov
mov
fwait
out
mov
pop
jp
dec
sbb
sbb
out
std
scas
daa
inc
mov
mov
insb
popf
mov
push
lret
inc
mov
rcll
xchg
aad
outsl
out
lret
scas
cmp
xchg
mov
and
lock
add
mov
cli
outsl
movsb
sub
ja
cwtl
stos
test
hlt
or
mov
test
in
mov
sub
pusha
mov
mov
lods
les
imul
dec
inc
scas
mov
mov
adc
jmp
sub
xchg
pop
or
nop
fimull
scas
imul
sub
adc
jae
xchg
push
pop
pop
fcompl
cmc
push
es
and
add
in
xchg
mov
and
pushf
push
and
dec
scas
stc
out
lock
xchg
mov
js
xchg
mov
sbb
jbe
push
call
fidivl
pop
cmpsl
iret
sub
fnsetpm(287
mov
cmp
outsl
popa
test
xchg
mov
pop
movsl
push
into
cltd
outsb
popf
mov
test
sbb
test
sbb
into
mov
stos
arpl
mov
jne
cli
adc
sbb
nop
ficoms
push
fsts
mov
in
jmp
jne
fisubrs
dec
pop
mov
aad
clc
adc
repnz
or
sub
lods
sbb
fdivrs
pop
add
xchg
loop
or
fcoml
lds
imul
in
sbb
adc
testl
mov
or
mov
mov
out
xor
push
inc
in
popa
adc
mov
mov
mov
xor
test
mov
and
cmpsl
ret
imul
orl
add
jg
arpl
xor
add
jnp
jg
sbb
in
jle
loopne
or
mov
jp
pop
cmp
lods
pop
push
xor
test
aam
push
pop
mov
call
dec
flds
jg
push
int3
cmp
sbb
sbb
pop
cli
xchg
int3
push
and
xchg
adc
stc
and
bound
out
les
cld
idivb
ffreep
push
andb
inc
pusha
nop
aam
xchg
ds
aas
mov
xchg
or
jbe
sbb
and
cmp
push
sbb
sub
scas
mov
cmp
daa
and
pop
xchg
sbb
add
mov
test
icebp
gs
add
cs
stos
jae
lcall
cmp
sub
sti
gs
in
fldenv
push
xchg
cmc
jo
push
loop
xchg
aaa
rcll
dec
adc
sbb
adc
jnp
sub
sub
mov
add
xor
jb
maxps
ret
adc
mov
mov
push
outsb
pushf
sbb
push
push
dec
adc
or
push
push
or
shll
int
fcomps
mov
sub
xchg
add
ja
repz
adc
and
jo
mulb
sub
daa
push
and
jo
xor
or
lahf
xlat
pop
jmp
or
sbb
inc
add
add
testl
sub
push
xchg
rol
verw
lahf
jle
into
fnstcw
mov
jecxz
cmovp
sbb
mov
adc
or
dec
sbb
mov
fadds
and
out
lods
cmp
jnp
mov
imul
push
adc
jnp
add
mov
and
pop
inc
sbb
aam
int3
jmp
or
pop
out
or
xchg
or
lret
stos
popa
cmpl
or
cmpsl
xor
movsl
sub
and
mov
mov
cld
loope
fucomip
mov
xor
test
dec
jne
clc
sbb
stos
adc
dec
sub
cmpsl
sahf
xor
dec
icebp
push
in
jge
jl
out
mov
add
imul
mov
ss
in
pop
dec
in
push
xlat
rcr
pop
mov
adc
cli
and
mov
pop
jl
dec
stos
sub
inc
inc
loopne
dec
pop
std
dec
fidivrl
jecxz
sbb
add
lds
or
or
mov
scas
lret
dec
insb
or
shrl
and
mov
pop
jge
jns
push
sbb
cld
xor
pop
arpl
cmc
inc
jno
mov
jle
dec
and
adc
or
dec
fstpl
push
fcoml
sti
mov
ret
ljmp
mov
sub
dec
xorl
cltd
pushf
pop
outsb
or
add
xor
orb
or
dec
int
cltd
icebp
adc
jle
test
cwtl
mov
lcall
cmc
outsb
adcb
jecxz
decb
jmp
loopne
ret
loopne
dec
ja
loopne
fnstcw
xchg
mov
jns
fdivr
inc
insb
add
and
scas
jns,pn
jnp
jae
lahf
stos
mov
rcll
xchg
jbe
loop
or
pop
pop
scas
sbbl
push
loope
adc
jno
adc
rcrl
inc
inc
ljmp
mov
adc
clc
sbb
pusha
or
jg
or
push
sbb
inc
not
pop
sbb
inc
mov
jns
dec
inc
push
hlt
jnp
cmpsb
cld
stc
xchg
insl
ds
xor
or
add
ret
faddl
inc
iret
clc
loopne
cmc
inc
js
mov
sub
jp
in
sub
mov
fwait
mov
iret
cmp
pop
loopne
les
mov
test
push
jbe
les
xchg
add
std
cmp
dec
das
jo
decl
jmp
popa
inc
and
dec
lcall
andl
mov
mov
jl
dec
jns
hlt
cld
out
out
in
test
fdivr
incl
add
xor
add
adc
cmp
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
xor
xor
or
mov
xor
sub
add
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
movl
movl
movl
xor
or
adc
mov
mov
add
mov
xor
adc
add
not
mov
movl
mov
je
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
xor
xor
andl
sub
sub
xor
sbb
mov
xor
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
subl
imul
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
mov
subl
add
or
and
mov
mov
xor
mov
addl
add
xorl
xor
mov
xor
mov
adc
mov
adcl
add
and
mov
xor
mov
mov
xorl
lea
mov
and
mov
adc
mov
sub
sub
add
incl
mov
mov
xor
xorl
add
jne
jmp
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
mov
mov
sub
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
decl
mov
sub
mov
or
mov
xor
xor
sub
xorl
sub
andl
xor
movl
mov
mov
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
andl
xor
andl
sub
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
call
jmp
xor
or
mov
mov
mov
subl
add
addl
imul
movzbl
or
mov
mov
subl
mov
xorl
add
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
pushl
push
pushl
call
jmp
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
stos
fsubrl
sti
mov
add
iret
lret
jge
xor
jp
jp
jmp
ret
je
push
popa
or
je
pop
mov
and
movsl
mov
and
aaa
aad
pop
fistl
outsb
add
mov
push
cli
dec
dec
and
dec
pop
push
ret
cs
push
dec
pusha
pop
jge
push
cmp
jl
and
hlt
fsubl
xchg
push
fiaddl
daa
daa
push
jae
cmp
xchg
mov
push
and
divl
mov
push
xchg
push
add
lret
push
sbb
cmc
aaa
ret
push
js
xchg
xor
scas
mov
js
cld
pop
pop
cmc
push
orl
pop
adc
fs
pop
pop
gs
cmpsb
lahf
fiaddl
sahf
inc
xchg
sub
insl
add
movsl
adc
dec
movsb
stc
leave
outsl
andb
jbe
jmp
sub
mov
out
jne
lock
stos
repnz
ljmp
js
shrb
push
out
xor
mov
jmp
test
pushf
dec
out
jnp
mov
add
mov
test
add
fldenv
out
cmp
repz
and
mov
pop
icebp
test
jmp
lret
mov
push
add
push
xchg
dec
add
push
inc
test
sub
ss
or
mov
aaa
adc
mov
xor
cmp
mov
fildll
imul
push
mov
out
insl
lret
sub
adc
sarb
imul
aad
adc
orb
cmp
pop
mov
and
je
mov
aas
out
push
push
inc
jg
mov
mov
cmp
cmp
jnp
cmp
adc
mov
sti
pusha
fists
add
ja
movsl
xor
mov
adc
or
push
stos
fsubl
add
outsb
or
fcmovu
xor
mov
xor
pop
jle
or
lret
mov
sbb
dec
pop
imulb
push
jle
and
ljmp
iret
dec
fcmovb
js
cmpsl
jge
int3
push
aam
fsub
xchg
dec
je
xchg
push
add
je
verr
pop
stc
inc
popf
xor
loop
into
inc
scas
lods
push
test
xchg
mov
test
mov
mov
out
jg
mov
cli
add
dec
leave
and
xchg
jb
mov
je
enter
ret
movsb
sbb
lret
ds
sub
mov
add
pop
mov
inc
xor
test
jge
sub
adc
jae
sbb
adc
arpl
adc
push
dec
xchg
add
adc
stos
pop
out
fs
fsubs
lds
mov
xchg
sarb
in
adc
ret
sub
into
mov
and
das
sbb
sbb
outsl
jle
out
clc
push
mov
cld
or
movq
sub
dec
xchg
popa
xor
jns
xchg
hlt
pop
adc
stc
ja
bound
pop
popf
hlt
in
pushf
jmp
adc
pop
sub
mov
push
inc
cmc
aad
into
xor
mov
pushf
xor
xchg
outsb
sahf
ja
jnp
jb
imul
adc
cmp
xor
mov
mov
shlb
jle
pop
dec
mov
jmp
push
sub
das
je
add
mov
sahf
imul
adcb
call
scas
addb
pop
or
andl
out
pusha
sti
outsb
out
popf
out
cmp
in
adc
cwtl
mov
cs
subl
push
jmp
in
add
and
sub
stos
bound
in
mov
insl
add
sbb
fidivl
adc
jbe
push
jbe
cmp
fisubrl
and
push
xchg
push
inc
push
dec
pop
jae
adc
pushf
aas
xor
sbb
xorl
out
sbb
xor
and
or
dec
sbb
push
jp
sahf
les
mov
pop
mov
jnp
jge
dec
push
mov
mov
fstpt
adc
roll
aam
xchg
ljmp
dec
and
and
jbe
jcxz
pushf
mov
mov
rclb
and
jle
push
int
push
jo
mov
hlt
stc
lods
xor
mul
aas
pop
scas
xchg
xlat
cld
xor
cwtl
fadds
test
nop
cwtl
lea
cmp
dec
and
cld
mov
sbb
mov
lock
movl
inc
jle
test
les
xchg
sti
in
jbe
ds
pop
test
shll
dec
lahf
es
into
cmpsl
leave
jg
cmp
mov
push
or
pop
gs
ja
out
add
cmp
icebp
ret
lret
scas
scas
sub
pop
in
fimuls
or
or
fisttps
mov
push
lock
mov
mov
popf
test
fwait
jns
scas
inc
add
mov
movsl
cmp
popf
mov
cltd
pop
fbld
iret
gs
fwait
mov
push
repnz
mov
sub
add
push
movsb
add
lea
fistl
pop
mov
mov
int3
cltd
xor
fucom
loope
push
nop
lds
out
mov
mov
incb
xor
mov
mov
dec
test
or
cmc
loope
push
hlt
cmp
inc
mov
push
xor
cmp
cmp
loop
ljmp
in
sub
xor
jnp
call
xchg
aas
cwtl
cmpsl
sub
int
jp
mov
insl
out
xchg
add
cmp
push
fistl
sub
adc
rcll
outsl
lea
xchg
sub
inc
pop
inc
imul
pop
fistl
popa
fmull
popa
xor
xor
idivb
xchg
mov
iret
das
mov
push
inc
inc
testl
sub
je
mov
outsl
sarb
mov
xchg
mov
test
dec
ret
jne
cs
fdivs
or
pop
ljmp
sub
std
jno
xor
sub
jne
aam
adc
mov
call
pop
dec
lds
sbb
fstp
les
mov
fwait
jle
adc
adc
nop
lret
mov
bound
or
shlb
mov
pusha
or
add
in
or
fsubr
xor
xor
jne
push
jecxz
leave
push
loopne
mov
push
adcl
dec
subb
subb
xorl
inc
push
mov
and
jno
ret
pop
aam
leave
jae
sbb
pop
and
call
gs
ret
dec
dec
psrad
jmp
ss
ljmp
jne,pn
and
leave
add
sub
clc
adc
mov
cli
mov
pop
sti
sub
call
mov
test
popf
sbb
inc
test
cmc
cli
jge
pop
cltd
out
loop
out
jo
fwait
cmc
ds
das
leave
jb
lods
adc
mov
fdivrl
and
lea
cmp
lret
push
or
stc
ja
addr16
pop
sti
out
mov
fisubl
cmp
jae
out
xlat
inc
jg
add
jb
pop
in
fists
scas
jl
ds
and
int3
xchg
push
cmp
fidivs
xchg
mov
mov
int3
addr16
jg
test
cs
iret
cli
xlat
jne
cli
mov
mov
popw
enter
mov
sti
or
and
mov
mov
mov
std
xor
add
mov
adc
repz
push
sti
ljmp
insl
xchg
shl
mov
or
jle
mov
add
push
jl
push
loop
repz
cmp
and
outsb
mov
gs
jae
xlat
jno
mov
jnp
push
xor
movsl
xchg
dec
jmp
cmp
lea
dec
push
cmp
rclb
jae
not
adc
iret
lods
jmp
and
push
repz
xor
repnz
xchg
xchg
xchg
lcall
faddl
pop
rclb
ret
and
movsl
jne
mov
push
bound
fbstp
xchg
ret
testl
jne
xchg
adc
push
ljmp
push
fmuls
int
push
int
pop
stos
adc
scas
fildll
je
jg
pop
fwait
addr16
mov
or
jp
orb
jbe
mov
cmp
pop
pop
ret
jl
std
mov
aaa
fsub
and
jl
ret
shrb
cmpsb
and
ret
call
scas
outsb
fidivs
in
and
insb
or
pop
mov
cmp
sbb
fcompl
sbb
in
rcll
jbe
cltd
sub
std
inc
jp
aad
test
jb
insb
jo
push
jne
pop
pop
ret
inc
fs
das
rcrl
push
int3
sub
jns
push
xchg
shl
mov
jo
inc
add
and
pop
ljmp
cltd
sahf
xor
cltd
push
out
or
and
fildll
xor
mov
aas
or
bound
in
and
jp
jp
push
inc
loop
xchg
ficomps
fcoml
push
out
cmp
sahf
push
stc
or
sti
dec
mov
arpl
inc
jno
adc
add
or
mov
sub
jl
cmp
and
stos
add
sub
mov
mov
shrb
sbb
leave
fnsave
inc
cwtl
mov
out
sub
roll
gs
shr
sahf
inc
ljmp
xchg
push
jmp
dec
stos
xchg
adc
inc
data16
outsb
sub
sbb
sub
xchg
aam
push
shrb
pop
pop
and
movl
sub
pop
imul
iret
int
inc
enter
fiadds
mov
jle
pushf
jo
nop
in
push
push
and
mov
into
aam
out
ficoml
loop
ret
shll
cmp
imulb
stc
imul
loop
xchg
jge
sub
mov
insl
adc
imul
and
imul
mov
push
inc
popa
dec
les
add
neg
mov
mov
mov
scas
int3
pop
imul
popf
jmp
push
mov
mov
fbld
mov
in
mov
jae
xchg
xchg
add
orl
and
inc
mov
mov
out
popl
adc
inc
sbb
xchg
jnp
pop
jns
pushf
mov
std
mov
jne
ret
ss
test
jbe
push
mov
adc
or
jae
mov
sbb
rorb
icebp
pop
pop
out
xor
jmp
mov
les
adc
inc
movsb
push
loop
inc
xor
aam
pop
xchg
pop
cmpsb
lods
and
mov
adc
nop
out
xchg
rcrb
xchg
lret
into
loopne
rcrl
mov
jb
inc
fisubl
mov
int3
dec
jle
add
mov
or
iret
mov
sub
mulb
and
ret
dec
insl
lds
cli
aaa
mov
or
mov
inc
inc
or
pop
cld
int
push
mov
lret
adcb
add
pop
sbb
ss
push
adc
lock
cmpsb
rol
mov
repz
jbe
gs
push
jno
data16
cmpsl
xor
out
cmpsb
pusha
jg
es
daa
sub
push
push
push
faddp
add
andl
inc
push
rcll
or
xchg
stc
xchg
clc
inc
movsb
or
push
lea
mov
sub
push
aas
ret
inc
jmp
xor
mov
sub
dec
ss
sbb
or
fucomp
inc
mov
mov
mov
sti
jno
insb
and
push
xchg
lcall
mov
jnp
cmp
sub
movsb
je
add
std
xor
jb
jnp
repz
push
sub
ss
mov
cmc
mov
insb
sbb
pop
jle
arpl
push
jp
in
push
xchg
shl
enter
mov
mov
mov
out
clc
adc
cmp
sbb
sahf
push
jo
xchg
adc
ja
xorb
dec
mov
sbb
sbb
jno
or
dec
in
pop
rolb
mov
dec
jno
xchg
mov
xchg
dec
mov
dec
lods
in
andb
jle
sbb
jns
movsl
call
pop
sbb
sbb
inc
push
stos
shlb
inc
jb
cld
insb
dec
push
int
mov
dec
outsb
fwait
jg
push
cld
pop
jns
dec
test
sbb
in
dec
je
dec
fwait
pop
popf
ljmp
push
mov
es
xchg
insb
cltd
mov
mov
push
jg
dec
aad
lds
cli
stos
dec
xlat
and
hlt
jno
rorl
leave
sbb
adc
lock
push
adc
or
out
jb
lods
fldcw
out
nop
cmp
sub
inc
mov
push
movsb
dec
adc
test
mov
scas
push
cmc
pop
push
dec
xlat
fcom
push
add
xor
push
scas
mov
sub
cmpsl
mov
xor
test
xchg
rorb
mov
imul
adc
test
movsb
push
mov
movsl
repnz
cmpsl
xchg
mov
test
das
nop
jb
fidivs
dec
or
push
lods
jp
cmc
pop
xor
jecxz
leave
dec
loopne
mov
cmp
pop
mulb
loopne
fninit
inc
sub
push
loop
repz
mov
push
cmp
andl
loope
fildll
sbbb
outsl
in
lahf
or
sub
add
push
mov
jp
icebp
sahf
call
mov
sub
xor
cmpsl
shrb
or
in
jo
adc
addb
in
mov
jbe
dec
clc
mov
xchg
push
loop
dec
jle
adcl
emms
and
jge
sub
stc
xor
rcr
test
pop
pop
lods
xor
jmp
arpl
inc
sar
xchg
inc
and
loop
imull
rcrl
js
aam
jo
pop
rorb
sti
adc
lds
fstp
cmpsl
push
cmp
fwait
test
aas
xchg
hlt
cwtl
inc
pop
cltd
inc
sti
mov
pop
das
jmp
pop
sbb
pop
in
xchg
sub
scas
clc
push
xchg
cld
inc
sub
jecxz
xchg
adc
in
call
insb
dec
stos
aas
xor
adc
cmp
cld
clc
je
out
mull
jl
stos
mov
lods
mov
dec
adc
and
jl
push
jecxz
sub
mov
sbb
xlat
mov
push
or
mov
push
pop
movsb
pop
adc
pop
jne
or
ja
sub
nop
sub
int
cli
sub
pushaw
je
sbb
mov
pop
xchg
add
in
xchg
idivl
stos
inc
jbe
cmp
lds
in
add
loop
add
mull
ficoml
add
xor
adcb
pop
daa
es
xor
mov
cmovl
cmp
out
xor
mov
xlat
divl
adc
rcrb
in
aad
mov
jmp
sahf
clc
mov
mov
push
ret
lds
mov
les
sbb
xor
sbb
int3
adc
jo
or
nop
out
mov
stos
jl
mov
pop
xor
loopne
pop
and
push
mov
cmp
cmp
or
jg
nop
cmpsl
dec
mov
mov
xor
outsb
loope
jo
push
cwtl
rcrl
lock
mov
xchg
mov
shll
jb
aas
xadd
pop
loopne
inc
pop
lds
mov
imul
rorl
adc
xchg
mov
lret
jmp
fnsave
dec
loopne
in
fiaddl
and
fnstcw
ffree
jbe
mov
mov
xchg
cmpsl
dec
pop
dec
aaa
inc
dec
pop
sub
mov
cmp
cli
dec
mov
dec
pop
adc
mov
dec
adc
mov
jl
sub
sub
data16
cld
out
sbb
or
sub
test
mov
sahf
int
loopne
in
pop
gs
inc
xchg
jno
pop
mov
loopne
scas
jge
xchg
mov
jecxz
push
adc
xor
mov
leave
jb
sahf
nop
pop
int3
test
xchg
lcall
mov
idivl
mov
fisubs
jmp
outsl
into
js
jge
jg
dec
outsl
mov
loopne
push
mov
js
sub
sub
aaa
mov
movsb
icebp
mov
sub
dec
aaa
push
xchg
cltd
cmc
mov
inc
mov
sub
sub
adc
int
cmc
shrb
dec
sti
in
out
out
mov
shll
stos
mov
mov
out
mov
and
lret
rcrl
lret
xlat
xor
cli
repz
dec
push
mov
pushf
xorl
test
data16
push
iret
sbb
ret
jge
jp
mov
enter
js
push
ljmp
add
pusha
lret
mov
or
push
shlb
pop
add
mov
cmp
lds
je
popf
fs
shll
xchg
push
pmulhw
loopne
insb
fadd
sub
sti
into
mov
lods
lcall
cmc
mov
rorl
mov
test
cmp
repz
sbb
aaa
xchg
jg
or
iret
dec
nop
mov
cmp
xchg
xchg
pop
fs
inc
and
adc
jle
dec
push
lahf
std
push
dec
mov
lahf
push
lea
sub
xchg
cmc
mov
xor
and
stos
pushf
or
call
pop
insl
xchg
mov
sub
int3
adc
or
mov
aam
cmpsb
jnp
xchg
rclb
jg
loope
add
out
into
pop
mov
out
in
std
imul
dec
push
insl
filds
arpl
pop
add
aam
js
mov
bound
idivl
pop
or
pop
inc
rcr
fst
sbb
push
pop
bound
in
testl
jge
sub
out
gs
js
insb
inc
jno
mov
out
and
jne
push
nop
rcrl
sti
mov
in
flds
sub
jo
or
fldl
addb
adc
add
out
and
iret
xchg
fisubrl
adc
sub
cmp
mov
aaa
lods
xor
or
inc
arpl
rol
in
enter
and
cmp
mov
push
mov
inc
mov
inc
adcl
sub
or
stos
sbb
push
sbb
pusha
sub
xor
ret
mov
and
cmp
add
roll
jo
adc
xchg
add
int3
stos
inc
cmpsb
dec
dec
dec
shll
frstor
ret
mov
push
scas
lods
inc
repz
data16
orl
dec
jo
gs
xor
xor
lds
loopne
popa
loopne
cmp
pop
jl
xor
or
in
pop
fcomi
int3
dec
arpl
adc
pusha
dec
adc
pop
out
ljmp
lret
cmp
adc
sub
sbb
push
dec
xchg
test
xor
inc
aaa
cwtl
imul
mov
xchg
addb
iret
movsb
push
ret
out
adc
xor
jns
inc
mov
aam
mov
cmp
sbb
xchg
dec
mov
call
mov
andb
hlt
and
push
fs
jno
or
pushf
repnz
adc
test
xor
cltd
iret
mov
out
icebp
inc
lods
push
test
dec
cmpsb
aam
mov
testb
push
jp
jne
jo
sub
sti
push
mov
addr16
pop
cld
mov
inc
fnstenv
xor
orb
mov
out
lcall
dec
out
cs
jecxz
repz
pop
pop
sub
loop
sar
test
mov
sbb
jns
inc
dec
mov
dec
pop
add
sub
xchg
xor
insb
iret
add
mov
push
cmp
push
or
imul
fsubs
cltd
sub
ret
inc
mov
jmp
hlt
xchg
mov
icebp
mov
add
cltd
cmpsb
and
out
sbb
mov
xchg
add
fsubr
xor
mov
cld
push
cmc
imul
fs
adc
mov
into
int3
xchg
negl
sbb
and
push
pop
bound
mov
dec
cmp
jge
xchg
ljmp
lret
sub
fs
loope
call
sti
mov
and
cmp
addr16
or
lds
stos
ficompl
cmpsl
jg
mov
mov
in
lret
popa
fldcw
adc
lahf
insb
outsl
hlt
cmp
or
xchg
xchg
enter
dec
sahf
fistpl
mov
xchg
insb
jge
call
mov
push
shlb
jae
sbb
sub
and
sub
sahf
push
mov
adc
xchg
jl
mov
js
pop
or
lcall
scas
mov
mov
mov
mov
outsl
push
int3
jecxz
mov
pop
adc
inc
ja
jp
mov
test
imul
andl
std
adc
enter
ret
sbb
mov
loope
fwait
xchg
mov
out
pushf
test
cmpsl
sub
push
mov
mov
and
dec
inc
mov
test
mov
loop
das
cmp
adc
aad
inc
push
pop
out
sahf
sub
add
rorl
add
popf
leave
aad
sub
hlt
sbb
inc
or
or
jns
dec
and
push
inc
and
int
clc
sub
je
jle
dec
fxch
mov
cmp
bound
pop
outsb
leave
inc
shrl
out
sti
mov
pusha
rcrl
test
inc
fcoml
fcomps
movsb
or
jo
mov
imul
xor
xchg
jns
inc
out
arpl
mov
inc
mov
icebp
dec
jnp
out
or
jne
lcall
mov
gs
fwait
lahf
xchg
and
lcall
movsl
sub
test
scas
sub
pop
scas
outsb
xor
std
popa
loopne
cmp
out
lret
xor
in
jg
aas
mov
fidivl
ficompl
lods
push
mov
repnz
stos
cmpsl
imul
sbb
add
pusha
jp
lret
inc
sub
lret
fadds
outsl
cmp
mul
xchg
clc
mov
jnp
cld
cmp
in
out
mov
into
dec
and
inc
popf
xchg
add
rorl
push
imul
jns
fidivl
pop
stos
push
outsb
inc
out
dec
inc
out
pusha
adc
and
xchg
mov
test
inc
jl
push
hlt
mov
imul
scas
and
pop
in
repz
stos
sbb
icebp
adc
das
fwait
cltd
data16
and
cld
lods
add
addr16
and
sbb
pop
sub
or
addl
mov
and
dec
mov
jecxz
sub
push
aaa
add
add
jge
jne
call
ret
std
lods
sub
aad
in
xor
scas
stos
outsl
sub
or
push
int
xchg
mov
lret
or
add
sbb
test
lods
fisttps
xchg
jmp
outsl
clc
daa
push
xor
pop
xchg
loop
mov
dec
adc
nopl
and
aam
ja
xchg
in
push
and
cwtl
dec
out
ss
mov
ficoms
sub
and
mov
movsl
fs
repnz
mov
incb
insl
adc
push
jnp
into
xlat
test
jb
into
fnstenv
es
push
mov
and
popfw
push
xchg
push
stc
lods
scas
cmp
in
ds
or
mov
jno
push
scas
mov
inc
push
pop
imul
jl
push
push
pop
icebp
mov
mov
jnp
mov
aas
jbe
fnstsw
and
inc
ds
into
cltd
gs
pop
dec
and
xor
cmpsb
insl
ret
in
push
adc
lods
adc
gs
xchg
dec
jg
pop
or
xor
and
dec
sbb
shl
lahf
iret
mov
xor
jl
push
fidivrs
mov
outsb
mov
imul
mov
movsb
scas
mov
mov
cmp
insb
sbb
xchg
pop
ljmp
dec
jge
ds
call
orb
jmp
dec
mov
vmovsldup
and
mov
out
out
xor
inc
filds
mov
sub
dec
jg
pop
lahf
xor
repz
sub
or
call
clc
stos
xor
lods
sub
fs
lds
push
push
adc
mov
sub
lea
data16
arpl
jne
outsb
adc
jl
dec
movsl
cmpsb
mov
pop
pop
rol
fdivr
cmpsb
push
xchg
push
xchg
shlb
jp
sub
mov
int3
xchg
lds
jl
in
xor
and
jns
add
mov
cmpsb
dec
mov
clc
jne
push
push
lret
push
mov
jl
mov
push
shl
lock
cli
jle
stos
xchg
xchg
sbb
or
fbld
in
arpl
mov
cmpsl
push
cmp
outsb
jnp
or
or
inc
or
pop
or
hlt
stos
les
xchg
orb
mov
cld
add
push
test
pusha
mov
adcb
adc
dec
fnstsw
cmp
push
push
jge
in
push
xor
ljmp
sub
push
push
cmp
sbb
fiadds
out
mov
and
leave
add
int3
or
sbb
cli
das
jecxz
jmp
mov
pop
add
or
inc
stc
in
and
mov
xchg
and
push
mov
mov
inc
jo
inc
fbld
inc
inc
inc
lret
stos
dec
xor
sub
lods
pop
outsl
mov
or
rcrb
cmp
sbb
add
xor
mov
adc
lret
loope
lock
fwait
xlat
lea
fnstcw
pop
sahf
dec
in
je
xchg
stos
sub
negl
mov
push
shr
jg
jno
inc
dec
testl
xchg
in
test
cltd
mov
jnp
xchg
sub
cmp
push
mov
cli
push
xchg
jns
jns
pusha
fidivrl
sbb
inc
mov
cli
adc
mov
stos
sub
hlt
cmp
clc
sarb
mov
enter
push
push
fnsave
cwtl
int3
mov
pop
sbb
jmp
iret
sub
mov
pop
sub
xchg
mov
xchg
inc
les
jnp
xlat
or
pop
inc
xchg
push
rorl
mov
jb
xlat
pushf
or
je
call
xor
adc
or
xchg
jg
sbb
in
sbb
scas
addl
jmp
jge
inc
pop
popf
push
xchg
inc
dec
cmp
push
sbb
gs
cmp
fdivrp
insb
or
mov
stos
lret
fstps
jb
inc
pop
mov
jns
test
fnsave
rcl
push
xor
testb
mov
js
mov
leave
jbe
adc
xchg
out
sub
push
lods
or
out
cwtl
mov
sti
or
push
movsl
mov
enter
fistl
pop
or
hlt
pop
stc
cmc
xchg
lret
loopne
jns
xchg
imul
jbe
cmp
addr16
jo
sub
dec
pop
mov
push
int3
dec
and
push
xchg
push
aaa
and
sub
push
adcl
jp
push
movsb
adc
les
pop
mov
pmulhuw
adc
jns
mov
mov
shrb
fs
dec
cli
add
mov
push
cltd
shrl
pop
scas
daa
outsl
iret
es
test
call
dec
es
pop
lcall
push
pushf
sbb
aaa
inc
xchg
and
mov
cmpsl
stos
and
insl
rorb
adc
cmp
adc
xchg
aam
xchg
iret
xor
lods
testb
imul
adc
jo
test
pushf
mov
loop
int3
sbb
loope
ds
clc
pop
js
lahf
sarl
test
mulb
inc
movsl
push
mov
or
stos
adc
incb
xchg
std
xlat
sub
out
mov
repz
sub
in
push
or
pushf
je
mov
inc
mov
add
adc
jl
adc
xor
jae
cmp
movsb
mov
imul
insl
mov
mov
add
int3
pop
imul
cmpl
push
inc
sbb
arpl
out
inc
jbe
cs
mov
fs
in
xchg
test
loope
sbb
sub
inc
jmp
mov
sub
test
cmp
gs
orb
fidivrl
cmp
mov
mov
stos
stos
scas
sub
pop
inc
jge
xchg
jae
jno
stc
pop
arpl
sub
cmpsl
nop
xchg
add
lea
jl
cmp
cmpsl
inc
pop
cmpps
pop
xor
and
jl
ret
xchg
jmp
lods
mov
jo
add
int3
jle
and
stc
pop
pop
negl
aaa
sub
and
iret
push
fnstsw
mov
mov
out
adc
or
pop
sbb
int3
sbb
inc
outsl
outsl
xor
pop
sbb
xchg
das
pop
pushf
lcall
inc
ds
ljmp
repnz
cmp
movsl
fisubs
insb
cmp
push
mov
popf
es
mov
xchg
pop
jns
ljmp
std
jnp
lods
sub
jnp
pop
ret
ret
jmp
fstps
mov
fucomip
add
sbb
fdivp
fcom
mov
outsb
fbstp
xchg
mov
jmp
mov
je
cmpsb
pop
mov
data16
insb
lcall
ds
adc
test
jo
push
fs
and
imul
addb
push
push
push
dec
and
jg
repz
add
xchg
adc
in
std
sbbb
int
push
fisubl
dec
pop
cmp
or
pop
std
or
mov
and
stc
clc
pop
xlat
jmp
sti
cmp
push
sub
in
push
xchg
xchg
movsl
dec
sub
stc
jo
in
jmp
in
jae
push
or
imul
repz
mov
loop
call
iret
pop
jbe
pushf
cs
inc
je
xor
pushf
sbb
nop
sahf
call
or
rolb
xchg
push
icebp
sub
jb
push
add
adc
mov
add
out
xor
ret
lret
lcall
out
push
inc
mov
cli
sbb
fwait
into
mov
push
imul
sub
adc
aaa
pop
fadds
das
ds
push
cs
and
outsb
mov
xchg
dec
movl
mov
js
cmpsb
std
add
mov
mov
faddl
pop
ret
es
lahf
xor
and
lcall
and
das
jle
pop
into
inc
push
das
or
repnz
push
jb
and
jle
sub
mov
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
popa
cmc
cwtl
mov
pop
popa
mov
or
jge
xor
jp
in
mov
divl
fidivrs
jb
gs
pop
jb
adc
test
ret
fistpl
leave
mov
das
xlat
mov
add
adc
ret
mov
hlt
xor
ss
rorb
imul
mov
insl
push
aam
js
rcl
xchg
in
xchg
dec
jno
loope
and
pop
in
mov
les
ja
or
sbb
test
fistps
mov
aas
insb
in
in
das
fldl
std
imul
add
lds
test
xchg
out
js
sbbb
test
stc
test
push
inc
jle
notl
ret
pop
add
jmp
jle
movsl
aad
addr16
mov
push
adc
xchg
imul
and
sub
in
push
dec
fwait
out
and
and
cmp
xchg
into
dec
xchg
push
jnp
jle
push
ds
in
ljmp
loop
lret
mov
or
fsubs
jb
dec
mov
push
jo
dec
dec
cmp
out
aam
and
loopne
test
test
jl
data16
pop
lods
pop
pusha
pop
jmp
fsubrl
lods
mov
clc
fdivrl
popf
fbld
sbb
jbe
sti
ljmp
mov
cmp
out
cmpsb
jnp
stos
dec
lods
jp
loopne
out
xchg
fdivr
scas
xchg
sub
lock
and
inc
scas
cmp
mov
pushf
loopne
das
ss
dec
add
les
mov
test
or
repnz
xlat
nop
cmp
enter
cmp
xchg
cmp
jp
add
mov
xchg
test
lret
pop
push
inc
xchg
and
in
cwtl
jb
mov
loop
jns
rorl
out
iret
roll
out
lret
push
adc
pop
insb
dec
mov
data16
mov
xor
xor
and
stos
xchg
or
cmpb
sub
push
sub
pop
mov
jo
and
mov
xor
sbb
mov
mov
lcall
popa
loop
shlb
pop
pop
mov
mov
adc
jmp
insl
insl
mov
adc
subb
jg
std
xchg
push
or
stos
outsb
es
cmpsl
and
or
dec
push
lret
mov
pop
jnp
xchg
sbb
push
dec
adc
push
pushf
inc
jno
jle
adc
pop
push
add
sbb
js
fwait
lret
enter
lahf
sbb
jne
out
inc
dec
jns
or
jecxz
pop
movb
inc
in
and
repz
mov
dec
adc
push
push
out
jae
lock
cmp
adc
cmp
push
dec
ja
leave
or
sbbb
cmpsb
xlat
cmpsl
cmp
sub
sti
out
out
popf
sarb
push
jnp
jbe
es
adc
push
cs
or
int
add
xchg
cltd
inc
loop
xchg
arpl
push
dec
aad
sbb
fs
mov
stos
xchg
icebp
mov
ds
je
inc
shlb
fstl
sub
add
jmp
mov
test
pushf
jle
call
fs
lods
or
cld
cmp
dec
mov
repz
cmpsl
mov
into
popa
jge
stos
sub
movsl
mov
mov
jmp
out
mov
xchg
pop
cmc
arpl
jnp
inc
add
lret
push
cmp
xor
mov
ss
mov
mov
in
push
rcll
das
jno
sbb
shlb
mov
xor
outsl
cltd
jbe
push
mov
shld
into
out
inc
dec
jo
cmp
cwtl
mov
in
mov
inc
jbe
jl
mov
loopne
push
ret
movsl
int
icebp
jno
lock
dec
xor
das
ja
pop
lcall
dec
mov
xor
into
daa
outsl
and
stc
inc
shlb
adc
sahf
das
adc
call
test
xchg
sahf
add
mov
rclb
cmp
mov
cli
xor
mov
xchg
inc
xor
inc
aaa
out
addr16
sub
les
add
mov
push
ja
pop
sahf
lret
xchg
or
jbe
cmp
lahf
mov
sub
arpl
inc
xor
xor
push
jecxz
sbb
sub
lds
fildll
add
lods
cmc
add
sahf
jge
xchg
fwait
mov
inc
jmp
inc
push
enter
leave
xchg
rcrb
fwait
pop
and
pop
mov
push
scas
jge
popf
call
inc
mov
jbe
add
cmp
ljmp
daa
sbb
jno
or
and
andl
push
in
nop
int
mov
lea
add
out
add
mov
adc
and
je
into
dec
sbb
or
addb
jge
add
out
adc
adc
jnp
cs
sub
hlt
mov
sub
pusha
rorl
insb
xchg
mov
loope
fcmovnbe
pop
dec
fldcw
mov
insb
icebp
fildll
lds
and
sahf
loopne
cmpsl
aam
loope
fsts
xor
loopne
aas
inc
xor
sahf
cltd
mov
mov
pop
dec
xchg
add
negb
popf
or
fistpl
nop
jle
cwtl
sbb
vcvtps2pd
jb
lea
pusha
insl
mov
sub
inc
imul
cmp
idivb
out
fcoml
insl
xchg
xchg
loop
test
dec
dec
mov
sti
call
cmp
pop
push
xor
and
xor
in
jno
jecxz
dec
bound
pop
cs
xchg
popa
push
es
inc
adc
fsubr
nop
sbb
inc
push
mov
scas
or
mov
in
dec
ja
mov
movsl
hlt
notl
jl
add
stc
insb
cmp
xchg
popf
pop
jg
pop
out
pusha
insl
vpermilpd
enter
test
shr
pop
and
stos
lcall
pusha
adc
in
jb
jae
out
repnz
lea
xor
push
jno
bound
cmpsl
movl
dec
adc
ljmp
cmp
and
cltd
xor
adc
push
xlat
hlt
arpl
mov
add
movsl
fcoms
das
push
lret
aaa
mov
jge
mov
out
jae
and
mov
data16
add
negl
in
mov
sub
add
hlt
xor
sti
mov
cmp
addr16
movsl
movsb
jae
lret
jp
fcmovnbe
cmp
add
ss
cltd
mov
dec
gs
iret
inc
lods
or
add
push
out
stos
movsb
sahf
mov
sbb
or
xor
test
jb
jne
out
sub
mov
push
and
inc
repz
push
inc
out
sbb
jnp
pop
sti
jle
xchg
pop
cmp
cmpl
push
pop
add
leave
sarb
sbb
push
sbb
push
xor
call
lods
jle
fwait
mov
out
pop
dec
lahf
mov
call
mov
rclb
fwait
inc
mov
xor
ret
add
pop
sbb
xchg
cmp
les
aad
mov
aam
xor
sbb
icebp
nop
aad
add
test
dec
testl
jne
mov
add
cmp
xchg
loopne
sub
mov
movsl
movsb
lea
outsb
mov
das
mov
inc
in
sbb
dec
in
dec
pop
lds
ljmp
mov
ficoms
int
or
cmpsb
jg
push
in
daa
cmpb
or
cltd
testb
js
and
lahf
or
inc
hlt
mov
and
pop
lret
int3
jecxz
dec
xchg
je
sub
lock
daa
xor
data16
stos
or
les
sbb
jns
xchg
ljmp
xor
jecxz
jg
pop
jbe
jmp
push
sub
xor
clc
xchg
sub
sbb
sti
jae
xchg
sub
in
insb
mov
fidivl
mov
jl
add
fstps
movsb
aad
push
jmp
pop
repz
and
aas
test
dec
fnstenv
sbb
mov
lret
cli
inc
idivb
cmpsl
test
scas
pop
adc
sub
mov
sbb
adc
xchg
out
ret
push
xchg
push
mov
sub
cmpsb
aad
addr16
std
sub
loope
cmpl
repnz
mov
mov
shlb
adc
mov
jbe
pop
adc
mov
rcr
sti
shr
stos
lds
push
sub
or
or
jmp
pop
pop
fmul
sbb
fidivl
ret
pop
lods
mov
fdiv
js
nop
sub
push
fcmove
stc
xor
popf
pop
fdivp
ds
mov
dec
xor
lret
std
fnstsw
test
or
lods
aad
mov
cs
jo
xchg
scas
inc
mov
into
int
push
sbbl
jae
push
std
sbb
loope
out
mov
fildl
inc
mov
fidivrs
cmpsb
jbe
insl
jge
xor
xchg
add
sarl
push
adc
push
aaa
ds
out
mov
or
nop
shlb
add
ljmp
sub
bound
xor
adc
shlb
jp
loop
scas
cwtl
jns
ret
dec
add
daa
pop
cltd
add
cmpsl
dec
aas
cmp
call
test
cmp
repnz
cmp
or
sti
inc
sbb
ljmp
lods
cmc
and
jmp
sub
shll
mulb
sub
dec
dec
mov
ss
xor
rcrl
fmuls
mov
aad
outsb
flds
dec
mov
dec
pop
lods
nop
and
das
add
xchg
dec
std
cld
insl
mov
xchg
daa
daa
loop
xor
adc
pop
repnz
mov
jno
fwait
or
out
fcoms
cwtl
int3
xorl
inc
daa
inc
xor
gs
cmpsl
lret
ret
data16
fimuls
pop
pop
fdivp
xor
rorb
xor
bnd
jl
push
loopne
sbb
cld
pop
repz
in
ljmp
test
movsl
jb
and
aas
jmp
stos
xchg
push
pop
fs
push
rorb
ljmp
pushf
dec
sar
inc
mov
js,pn
out
mov
and
jle
cmp
jecxz
cmp
inc
mov
push
popf
jns
sub
jbe
stos
jae
fcmovnu
cmp
pop
stc
out
xor
mov
scas
je
cli
idivb
xchg
jle
jo
imul
mov
cmc
or
jle
pusha
adc
add
or
enter
jle
sarl
pop
cmc
loope
xorb
int
scas
mov
inc
jecxz
push
mov
push
xchg
adc
sub
shlb
dec
popa
dec
jnp
loopne
iret
negb
out
test
stos
je
pop
pop
call
movsl
or
sti
push
subl
jl
cmp
push
mov
add
jns
pop
push
xlat
shlb
in
xlat
sbb
adc
adc
push
mov
test
lahf
add
add
push
cmc
add
popf
inc
cmpsb
fsubr
cmpsb
adc
notl
and
sti
add
lods
sbb
sahf
mov
cmp
jnp
xchg
dec
in
daa
xor
popa
stos
mov
in
adc
sub
push
sub
call
mov
sbb
loope
out
insb
push
jbe
adc
mov
lcall
or
xor
loopne
mov
xchg
cmp
leave
mov
hlt
mull
mov
push
addr16
sub
andb
add
xor
mov
or
mov
sub
aam
fcomi
lahf
jp
mov
push
inc
push
bound
push
mov
sbb
jle
inc
pop
or
push
in
aad
sahf
push
rolb
test
popa
imul
movsl
sub
jno
int
mov
mov
mov
dec
scas
jb
xchg
arpl
loopne
repz
roll
ss
dec
jp
pop
mov
sti
push
int
cmp
sub
push
pop
pop
movsb
pop
jno
mov
jg
cmp
pushf
xor
xchg
xor
jp
mov
hlt
leave
sbb
xor
in
or
sahf
pop
push
xor
getsec
push
jle
fs
and
rcll
daa
loope
lcall
rcrl
sub
cmc
mov
mulps
inc
cmp
cli
pop
cmp
pop
outsb
mov
mov
mov
push
lea
pop
push
sbb
fsub
cli
sub
mov
sub
loope
mov
jecxz
and
fildl
test
test
xor
jg
imul
clc
fistps
cmp
out
int
dec
orl
push
and
mov
jmp
dec
and
pop
adc
cmp
pop
jle
cmp
pop
mov
arpl
gs
sbb
inc
dec
fwait
stc
push
mov
data16
jl
xor
ficomps
sub
test
mov
bound
scas
push
xchg
jbe
jle
pop
repnz
mov
mov
adc
push
scas
out
xchg
dec
inc
repz
mov
movsb
xor
into
dec
in
and
loopne
ljmp
inc
jmp
cld
or
xlat
clc
xor
jns
xor
push
push
cmp
dec
int
mov
fcoms
inc
inc
scas
scas
adc
add
sbb
ss
xchg
cmp
pop
jge
cmpsb
cmp
sub
cs
jmp
mov
pop
std
mov
xchg
jg
push
add
dec
out
dec
pop
imul
scas
xor
sbb
push
jne
test
mov
sahf
aaa
js
mov
into
into
push
fldcw
outsb
aas
add
ja
cmpl
insl
daa
ss
jae
lret
cmp
jbe
stos
mov
push
enter
in
lahf
sarl
cwtl
jl
adc
fs
in
lea
sub
daa
xbegin
push
lahf
add
into
adc
pop
int
cmpsl
iret
iret
cmc
sub
cmp
mov
mov
fcomps
fucomp
xchg
or
scas
in
stc
mov
push
jg
jbe
mov
sahf
xlat
insl
cmovno
hlt
inc
xor
into
jne
into
insb
xchg
fisubl
mov
jns
in
cltd
pop
repz
xchg
sbb
lods
jno
loopne
adc
icebp
andl
cltd
push
xor
je
jns
in
mov
aas
data16
daa
fdivs
test
add
sbb
jne
cli
mov
push
or
testl
popa
or
aad
cmpsl
push
cli
dec
dec
pop
ss
sub
pop
fldl
mov
inc
shll
cli
mov
xor
pusha
mov
out
adc
jecxz
jg
add
sbb
jno
mov
jp
jmp
pop
adc
addr16
shlb
cwtl
imul
mov
inc
gs
sbb
stos
fisttps
jl
cld
pop
sub
or
imull
xchg
lds
mov
mov
push
lcall
ror
xchg
dec
insb
inc
mov
and
xor
fisubrs
and
pusha
xchg
pusha
cltd
in
adc
pop
outsb
mov
adc
dec
mov
sub
and
cli
sbb
in
lahf
push
fsubr
xor
fsubr
and
mov
xchg
lds
inc
out
and
scas
pop
xchg
test
add
shlb
sub
ljmp
push
or
mov
pop
outsb
sbb
cld
repnz
cmpsb
mov
cmp
cmp
jno
loope
inc
das
or
push
mov
sub
mov
ror
mov
inc
pop
or
aas
mov
clc
mov
push
repnz
mov
sub
mov
xor
push
popf
or
in
mov
sti
lea
mov
das
or
xor
cli
xor
fisubrs
cmp
iret
mov
mov
mov
adc
ror
popf
and
aam
pop
push
popa
leave
mov
and
mov
stos
cmp
dec
xor
mov
jb
daa
loop
pop
xor
mov
mov
sbb
pop
mov
and
or
icebp
bound
pop
inc
sub
mov
in
push
jmp
jl
mov
jge
push
adc
mov
subl
push
push
jecxz
inc
cs
jns
or
repnz
outsb
fldenv
enter
sub
mov
or
nop
scas
mov
dec
cmp
xor
inc
xchg
call
fcoml
sahf
nop
enter
daa
mov
in
inc
xor
sbb
test
fwait
mov
insl
data16
arpl
xchg
ficompl
xchg
mov
sbbb
cmc
cmc
mov
adc
cmpsl
sbb
add
push
xchg
dec
push
adc
fnstenv
jb
lcall
jle
sbb
mov
lret
movsb
add
mov
mov
xchg
push
fidivl
push
or
dec
fisubs
std
mov
jo
fcoml
rorl
imul
clc
and
xchg
ljmp
fnstenv
fstpt
enter
sbb
push
pushf
cmc
rcrl
ss
mov
sub
push
xchg
and
das
mov
lret
ss
sub
add
iret
imul
and
cld
cmpb
and
cs
lahf
nop
je
jecxz
mov
dec
data16
hlt
and
xor
mov
pop
aad
mov
enter
cmp
dec
xor
dec
add
xorl
negb
repnz
mov
pop
adc
jp
sub
movsl
jle
pop
xor
fildll
jl
std
test
push
xchg
lret
mov
rorl
in
dec
dec
inc
into
shll
xor
pop
std
mov
sbb
pop
jecxz
sbb
adc
cltd
sub
push
mov
decb
push
das
cmpsl
imul
xchg
ja
jno
xchg
out
lret
push
fbld
or
into
outsl
es
js
out
lock
adc
dec
xchg
out
dec
jp
lret
jp
dec
xlat
aam
or
pop
fld
inc
xor
insl
stc
mov
or
xor
cwtl
cs
mov
repnz
sbb
cmpsb
pop
dec
push
xor
in
push
xchg
inc
push
sar
ds
push
dec
lds
rorl
push
mov
in
mov
or
jle
pop
cmpsb
iret
sbbl
add
add
mov
cmp
insl
scas
xchg
leave
push
mov
test
mov
push
lock
push
cltd
lret
mov
dec
push
or
addr16
in
ljmp
pop
hlt
push
enter
xor
xlat
andb
dec
hlt
cld
repz
mov
frstor
dec
lds
sbb
adc
call
or
sub
stos
pop
push
xchg
sbbb
mov
enter
adc
lahf
ret
dec
stc
mov
aas
rorl
push
fcomps
jcxz
mov
or
and
movsb
rorl
sub
enter
sub
aad
in
xchg
lahf
das
xor
f2xm1
aad
pop
pop
nop
and
sarl
xchg
and
lcall
pop
ljmp
cmpsb
hlt
mov
jecxz
movsl
je
cld
adc
ret
mov
fistpll
jne
sub
in
ds
dec
dec
lcall
fisttpll
popf
insl
hlt
push
insl
pop
sub
adc
mov
mov
mov
jbe
cmp
jmp
ficomps
add
jecxz
jg
inc
pop
xchg
je
inc
add
fcomps
fcoms
sbb
push
adc
test
mov
rolb
jno
add
add
push
inc
jae
loopne
int3
mov
cmp
mov
mov
xor
outsb
mov
dec
out
outsl
push
and
add
iret
fcmovb
and
mov
jne
mov
arpl
loop
push
sub
add
in
clc
push
test
sti
lea
pop
imul
sahf
int
adc
xchg
sti
das
fidivs
xchg
aad
pop
imul
cmp
test
jne
je
push
fdivr
aam
aam
loope
inc
push
push
fstp
jp
and
sbb
or
pop
xor
pop
lods
fdivrp
jg
sub
sub
imul
aas
dec
xchg
sbb
xchg
or
lock
das
inc
pop
or
sarl
xchg
jg
push
insl
popf
mov
add
dec
dec
ds
pop
mov
mov
xor
insb
inc
mov
add
mov
sub
lods
cmpsl
loop
sysret
out
cmc
pop
js
outsb
xchg
js
mov
push
shrb
ror
mov
mov
insb
xor
push
xchg
inc
les
add
sub
push
arpl
xchg
jle
mov
dec
sub
mov
mov
es
out
fadd
std
inc
mov
xchg
ss
xor
push
dec
fsubr
cmp
or
sbb
mov
push
negl
push
sti
fstps
in
or
push
and
or
pop
adc
lcall
add
sti
fistl
ror
fiaddl
cltd
or
add
mov
or
pop
xchg
jp
cli
jg
pop
xlat
jbe
jae
testb
fadds
mov
lcall
pop
mov
add
push
dec
jnp
inc
sbb
push
mov
ret
out
fs
mov
mov
jae
and
repnz
gs
lea
insb
jmp
and
jle
lret
fldcw
test
ret
repnz
push
cmp
lret
xor
adc
arpl
aaa
movsb
mov
dec
das
adc
cli
cmp
and
inc
mov
cmpsb
and
push
cli
inc
pop
cmpsl
adc
jae
mov
gs
inc
adc
int3
mov
leave
scas
cltd
test
add
cwtl
sbbl
iret
aas
pop
test
div
movsl
jecxz
mov
jo
push
mov
decl
sub
out
lret
idiv
out
xchg
call
pop
xchg
mov
cwtl
or
mov
leave
lds
test
mov
cwtl
daa
mov
in
jbe
je
mov
inc
inc
xor
mov
push
aaa
mov
push
pop
jo
mov
loop
sbb
and
in
insb
jo
stos
cltd
mov
mov
lods
stos
jl
ret
repz
xlat
ret
push
push
pop
inc
mov
cmpsl
adc
les
inc
mov
ss
mov
or
in
pop
jns
dec
insb
mov
imul
sete
hlt
insb
repnz
in
int3
push
lahf
loop
cmp
push
ss
and
ficoml
sarb
insb
xchg
mov
imul
ds
stc
xchg
mov
mov
and
std
xor
xchg
movsb
push
out
addl
inc
cmp
jmp
fisubrl
stc
push
fs
out
int3
sub
inc
icebp
test
lret
mov
mov
stos
mov
dec
push
in
push
lds
aam
pop
xchg
mov
or
pop
mov
arpl
out
mov
lahf
hlt
mov
loop
push
xor
jno
and
test
inc
pop
add
addr16
mov
insl
lock
js
in
js
ret
les
xorb
jae
lock
cmp
pop
inc
push
sbb
dec
pop
push
inc
test
add
dec
rcrl
xchg
movsb
cmp
xchg
mov
or
sarb
cmp
jns
mov
hlt
dec
mov
push
testl
or
push
add
mov
outsl
jg
xchg
inc
jp
or
mov
xchg
xor
jmp
mov
loop
dec
inc
push
xchg
inc
dec
add
jmp
xlat
lret
sub
lods
cmp
sahf
sub
xchg
jo
xchg
xchg
sub
out
inc
xchg
stos
dec
lock
sub
mov
popa
jae
rcrb
lods
outsl
lods
lds
sbb
push
and
cmp
scas
sbb
dec
push
pop
push
cmp
xor
sbb
jle
lea
xor
jne
insb
and
test
test
test
jle
jecxz
faddl
shl
and
jmp
fisttps
xor
xchg
shll
pop
shl
outsb
stc
and
lock
mov
pop
lret
ss
or
cmc
mov
sub
lods
dec
sarb
jecxz
sub
cmp
enter
lock
test
cmp
pop
in
int3
inc
push
xlat
mov
jle
pop
mov
xchg
and
loope
adcb
movsl
in
sarb
ljmp
sub
pop
mov
dec
lock
push
data16
aam
fs
movsb
imul
pop
test
movsl
aas
sbb
sbb
es
fcoml
adc
fwait
mov
sub
mov
inc
mov
mov
dec
test
fstp
incb
mov
xor
loope
jge
xchg
sub
scas
movsl
inc
xchg
cmpb
ljmp
bound
in
ss
jecxz
xchg
ds
pop
push
cmpsb
clc
rcll
jmp
divb
fimuls
push
mov
aas
fdivrl
addr16
cmp
cmpsl
cmp
pop
push
sbb
pop
xor
inc
push
pop
adc
dec
call
xor
rcrl
insl
ss
clc
mov
jl
xchg
mov
sbb
mov
das
ss
scas
sub
jno
mov
add
or
adc
data16
xlat
insb
test
jae
pop
into
and
xchg
sbb
or
bound
mov
jae
cwtl
adc
popf
leave
cmpb
xchg
xlat
repz
cmp
outsb
cmpsl
sti
ficoms
lret
sbb
push
sbb
gs
fdivrl
mov
shll
push
out
and
mov
and
sarb
push
xor
jnp
sbb
cld
clc
push
sbb
rcrb
cmovs
into
or
adcl
push
cmp
ret
test
leave
mov
or
insl
ss
loopne
es
fstpl
push
hlt
js
lahf
and
sbb
cld
scas
fcoms
sbb
js
lods
mov
fincstp
icebp
and
pop
cmp
push
jecxz
mov
incl
loope
imul
push
mov
sbb
cmpsl
mov
adc
jb
shll
lds
shlb
push
rcrl
push
push
rolb
mov
jle
mov
sahf
cwtl
fcomip
cmc
jge
out
jge
xchg
cmp
jno
xchg
aam
mov
lret
jg
adc
xchg
gs
push
inc
sahf
sti
cmpsl
inc
je
sahf
lea
lds
subb
push
sub
gs
mov
mov
push
jle
dec
loopne
sti
mov
pop
stos
shll
fidivrl
xchg
or
dec
and
inc
ret
loope
pusha
sbb
xchg
jnp
jns
test
mov
mov
or
jp
shrl
scas
pop
lock
sub
call
stos
push
cmpb
loop
xor
sub
lret
sbb
sub
sbb
cmp
test
test
loop
mov
insb
push
in
cmp
test
cwtl
mov
and
fildl
dec
xchg
stc
sbb
mov
in
xchg
adc
pop
adc
push
pop
mov
stos
inc
push
pop
arpl
pop
insl
sbb
aas
pushf
jae
jmp
pop
orl
out
xchg
out
jno
add
std
inc
fwait
je
inc
inc
lret
cmp
jp
add
call
push
addr16
jno
xlat
jae
pop
inc
iret
or
mov
push
cwtl
rorl
out
enter
ja
xchg
enter
das
sbbl
cwtl
mov
xchg
pop
iret
inc
xchg
xor
sbb
test
pushf
xor
test
mov
ja
and
pushf
filds
xorb
cltd
xor
ret
pop
mov
rcll
or
cmp
shl
push
ficompl
dec
xchg
adc
ds
mov
mov
movsb
cmp
cld
pop
stc
hlt
pushf
inc
push
test
pop
out
push
sbb
adc
pop
pop
sub
add
and
cld
loope
add
mov
shlb
pop
das
das
pop
inc
sbb
push
js
adc
add
jae
jge
sub
fstpl
pop
cmp
lods
cmpsb
es
lock
ficompl
mov
push
add
add
outsl
sbb
mov
cltd
fdiv
mov
xchg
sbb
aaa
xor
or
mov
insb
sub
mov
adc
popa
in
xchg
gs
sbb
mov
inc
xchg
or
mov
sub
sarl
in
pop
dec
icebp
sarb
add
lea
push
rclb
js
cmp
mov
jle
push
xor
push
xorl
iret
pop
gs
js
cmp
push
jnp
adc
mov
in
int3
loopne
movhps
mov
mov
in
jl
je
push
fstl
sub
cli
xchg
in
mov
out
out
data16
roll
add
lcall
rcl
xorb
ja
out
faddl
out
rcl
idivl
mov
aad
pop
push
push
push
mov
lods
fistpll
xor
ret
out
sub
scas
mov
out
mov
adc
pop
test
pop
cmpsb
std
outsl
xchg
je
iret
xchg
sub
lcall
into
sub
xlat
add
mov
mov
lahf
sub
aas
call
out
js
out
out
sub
in
out
fcoms
je
and
shll
and
ljmp
mov
lea
jg
aaa
add
call
mov
pop
or
cmp
jns
xor
gs
push
in
sub
xchg
lahf
push
xchg
sbb
xchg
repnz
mov
mov
xor
jo
or
fdivr
jne
lock
aaa
popa
movsl
jp
push
out
xor
rorb
pusha
inc
ficoml
inc
call
fs
add
es
shll
cwtl
test
sbb
sub
xlat
lods
les
and
sbb
lods
add
sub
and
das
cmc
xor
jae
adc
out
pop
push
pop
pop
addb
and
mov
or
jae
mov
mov
mov
mov
or
fnstsw
ds
sbb
xrelease
arpl
inc
test
inc
mov
dec
shrl
aad
mov
aam
cld
fs
fidivl
sarb
inc
aad
loopne
adc
fdivl
xchg
xchg
or
xchg
push
mov
sarb
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
jmp
bound
push
fsubl
xchg
inc
hlt
imul
inc
jp
pop
insb
cmp
insb
xor
daa
flds
add
addr16
mov
dec
ss
xor
mov
jle
xchg
das
add
jbe
addb
mov
fs
dec
and
cmp
nop
test
cmpsb
adc
mov
imul
pop
jbe
divps
sti
int3
outsl
add
sub
addr16
xchg
pop
pusha
cmpsl
insl
mov
mov
flds
or
jbe
bound
or
fstpl
pop
pushf
movsb
scas
lds
frstor
push
out
dec
cmpsl
add
addr16
adc
push
out
add
js
rorl
push
pop
push
lahf
cltd
stc
fldt
orb
push
inc
cwtl
dec
pop
andb
decl
jnp
lea
xchg
adcl
xchg
push
shlb
add
push
dec
push
pop
jo
sbb
push
lds
jns
mov
adc
cmp
jns
loopne
sub
or
dec
pop
jge
je
fisttpl
mov
insl
insl
cmp
es
fildl
insb
cltd
mov
or
pop
push
pop
mov
xlat
mov
xchg
in
sub
lret
jb
cmc
mov
jecxz
xchg
sbbl
cmp
subl
into
leave
inc
pop
rcrb
shlb
xchg
out
mov
inc
aad
xchg
pop
lods
andl
add
push
and
or
loop
mov
repnz
xor
or
push
js
fsubrl
xchg
pop
push
bound
cs
das
pushf
cmp
adc
or
and
rcl
xchg
lods
cltd
jge
mov
or
cmp
icebp
jg
cmp
mov
push
iret
faddl
or
clc
adc
ret
roll
xchg
fwait
pop
adc
or
sar
mov
push
push
les
xorb
mov
scas
popf
inc
xchg
insb
mov
sbb
inc
add
fidivl
int3
mov
insl
sbbb
imul
hlt
xor
add
lods
and
stos
mov
mov
mov
test
sbb
sub
hlt
shrl
pop
or
jl
lahf
cmp
mov
out
inc
aaa
pop
and
xor
push
loope
movl
jmp
jae
outsl
adc
leave
sbb
jmp
mov
fs
inc
stos
mov
scas
and
arpl
push
sub
mov
cltd
push
cmpsl
push
sub
or
sub
movsl
mov
pop
adc
or
je
les
mov
cmc
lahf
mov
and
ljmp
mov
addr16
aaa
adc
adc
pop
mov
mov
pop
sub
pop
test
pop
pop
xor
ret
add
adc
mov
dec
cmp
subb
pop
lret
add
pop
sbb
shrl
insb
in
xchg
push
loop
repz
xchg
xchg
in
notl
dec
cmp
leave
cwtl
mov
test
repnz
fimuls
outsb
lea
addr16
jmp
and
xchg
adc
pop
and
xchg
lahf
pop
sbb
jae
jl
adc
jp
test
in
fstpt
and
push
fucomip
inc
mov
sbb
sub
mov
out
sbb
andb
call
mov
sbb
ja
push
pop
dec
cmp
sub
aaa
xchg
sbb
jnp
jle,pt
and
sahf
inc
mov
fcmovne
clc
testb
inc
or
push
and
jbe
imul
mov
inc
xchg
cmpsl
lods
scas
jge
pushf
jnp
push
pusha
or
js
adc
cmpsl
rcl
or
xor
es
jo
mov
xor
and
jnp
fistps
out
pop
or
mov
or
lock
test
pop
pop
cmp
inc
icebp
inc
sub
outsl
jge
pop
test
push
popf
xchg
mov
loopne
mov
cmpsl
loopne
jle
fstl
mov
rorl
or
push
mov
in
cmpsl
pop
xor
push
aad
fdivrl
push
sbb
mov
mov
jo
jae
xor
std
das
icebp
pop
mov
lret
cwtl
lds
cmpsb
cmp
xor
push
and
popf
and
aam
fnstsw
sbb
ret
cmp
aaa
pop
jne
into
int
jle
repz
stos
pop
hlt
sub
pop
out
add
mov
fsubrs
mov
inc
mov
and
in
xchg
sbb
push
cld
ret
or
inc
jne
mov
pop
inc
test
out
jbe
rclb
dec
and
mov
test
dec
inc
pop
cwtl
stos
out
loopne
mov
xchg
cli
or
sbb
mov
sub
pop
in
lods
and
sub
fidivrs
aaa
scas
in
fsubl
inc
lea
dec
test
or
cmp
mov
cmp
push
incl
popf
mov
mov
mov
inc
sbb
push
out
mov
inc
mov
ficoms
ljmp
cld
shll
les
ja
daa
testb
fldenv
sub
xchg
mov
mov
pop
outsl
xlat
into
repnz
add
xchg
or
scas
je
fsts
insb
xorl
lret
mov
jge
adcb
stos
fadds
and
pushl
outsb
jge
leave
inc
movsb
inc
adc
jl
inc
jns
cmc
lock
loopne
sub
pop
mov
and
call
mov
cs
hlt
test
and
call
lcall
popf
cmp
incb
stos
jl
lods
push
lahf
orl
or
cmp
xlat
shlb
cmpsl
pop
mov
xchg
sub
xor
push
fildll
movq
insb
je
rcrl
xor
mov
sahf
cmp
sub
adc
repnz
int
lahf
pop
jp
cmp
mov
inc
nop
pop
decl
js
add
sti
jbe
xlat
mov
mov
mov
nop
imul
cwtl
pop
leave
jecxz,pt
cld
adc
jg
mov
pop
aaa
pop
jno
adc
cwtl
add
sbb
arpl
xchg
test
scas
jnp
lods
pushf
ret
mov
call
mov
mov
daa
std
daa
call
mov
adc
adc
push
outsb
rclb
aaa
dec
xchg
out
cltd
cmp
outsl
movsb
scas
in
jbe
insl
std
adc
cmp
adcl
or
xchg
rclb
out
lret
fisubrl
loop
popw
clc
scas
out
inc
fwait
cmp
and
sbb
sbb
stos
test
rorl
adc
add
pushf
add
jbe,pn
leave
movlps
push
cs
add
pop
mov
xchg
push
mov
test
jecxz
call
mov
cld
jp
dec
repnz
jb
mov
in
insl
mov
xchg
aas
arpl
cmpsb
or
lock
fwait
jno
mov
out
adc
or
adc
push
ds
push
and
scas
js
mov
pop
ss
pop
jp
xor
js
sbb
adc
push
int
adc
sti
push
xor
aam
cmp
sub
mov
sub
cmp
aad
cli
lock
lds
loope
push
xor
xorb
test
ret
mov
cmp
xchg
outsl
push
shll
add
dec
sub
push
fisubs
stos
mov
sub
dec
repnz
leave
sub
mov
pop
add
test
add
mov
push
jae
xchg
mov
movsb
insb
out
sbbl
mov
imul
je
fstps
xchg
dec
jb
out
jl
cmp
or
pusha
pop
mov
cmp
pop
pop
and
ss
or
xchg
xor
inc
pop
lea
xchg
cmp
fistpll
push
push
push
addr16
ja
sahf
xchg
inc
push
inc
inc
into
hlt
inc
pop
fnstsw
dec
fildl
mov
stos
les
lds
ds
push
lret
pop
push
xchg
test
clc
push
inc
loop
or
movsb
push
gs
cmp
fsubl
ja
mov
aaa
jns
inc
outsl
jns
jae
push
pop
sub
mov
stos
push
test
aas
pop
fstpl
imul
sub
pop
push
lahf
lret
cmp
gs
lea
jne
fiadds
cld
outsl
cld
movsl
and
movsl
or
xchg
pushf
test
sbb
inc
test
and
jae
cmp
stos
lods
pusha
jb
mov
push
dec
mov
sahf
xor
xchg
shl
pop
dec
and
mov
add
imul
dec
or
lcall
sbb
push
xchg
xchg
xorb
insl
push
adc
jnp
xchg
popf
push
push
push
outsl
in
xor
mov
aam
mov
aad
xchg
ljmp
lea
call
lods
and
mov
push
scas
das
push
fstl
dec
add
push
fsubs
dec
imul
ds
xchg
pop
aam
aaa
and
sbb
test
push
add
mov
lods
mov
sbb
jnp
inc
repnz
pop
decl
cmp
or
mov
mov
dec
inc
ret
int
jge
push
mov
sbb
sahf
pop
cmc
mov
adc
ja
repz
addr16
inc
mov
imul
sub
xchg
xchg
sbb
mov
inc
xor
insl
test
mov
xchg
std
fsubrl
insb
dec
inc
mov
lea
push
pop
cs
and
mov
dec
imul
cmp
stos
lret
jle
lret
cmc
je
jl
sub
or
sub
aad
fldenv
imul
mov
jno
mov
add
and
in
dec
inc
jmp
xchg
aam
daa
jp
loopne
out
or
jae
test
inc
imul
dec
popa
pop
and
inc
adc
push
dec
ret
lds
mov
mov
imul
push
lret
pop
addb
fsubl
popf
adc
dec
scas
pushf
movl
fistpl
imul
mov
mov
inc
lock
push
mov
push
sbb
jno
or
xchg
mov
repnz
mov
sarl
aas
ret
mov
out
sub
js
xchg
es
jne
inc
sbb
mov
add
leave
jb
mov
cmp
sbb
xchg
mov
jl
and
sbb
cmp
xchg
pop
and
or
scas
in
ljmp
cli
stos
rcr
insl
add
iret
clc
inc
mov
jmp
sarb
add
mov
fldt
pusha
inc
pop
mov
into
add
and
add
cli
int3
inc
sbb
pop
mov
lret
loope
mov
inc
loop
int
mov
sub
lahf
xor
movsb
mov
inc
loop
push
push
jbe
and
xchg
fildll
into
leave
dec
mov
call
ss
nop
adc
mov
cmp
fcoms
movsl
dec
push
lea
hlt
cmc
inc
popf
stc
push
scas
push
pop
adc
pop
mov
repz
outsb
mov
adc
push
ret
mov
sub
pop
imul
out
add
out
cld
iret
adc
test
mov
pushf
addr16
push
xchg
dec
test
popf
fstpt
inc
sub
fcomi
loop
inc
mov
push
test
add
xchg
lods
jl
iret
lahf
xchg
and
dec
jns
dec
jmp
stos
mov
outsb
stos
fstpt
rorl
outsl
mov
push
ljmp
push
and
cwtl
push
jb
cld
shlb
ja
fwait
sti
dec
cmp
scas
push
sbb
xchg
mov
scas
jns
sub
sub
mov
cmp
test
rolb
in
sub
into
fidivrl
and
sahf
test
lds
cltd
and
mov
add
pop
pushf
jmp
xchg
adc
cli
fcoml
ret
mov
out
add
and
les
pop
out
test
dec
das
adc
jmp
cmpsl
mov
sti
or
xorl
jp
stc
fcmovb
mov
ja
loopne
pop
adc
jne
rolb
jne
xchg
in
roll
insb
fsub
data16
aam
or
test
lcall
test
jo
out
sbb
fdivrs
in
inc
pop
ljmp
push
std
fisubl
gs
loope
or
cmp
or
aas
stc
mov
cli
mov
mov
xor
mov
jns
in
lods
or
aas
adc
decl
aaa
xor
int3
sahf
mov
or
push
test
cmp
pop
add
ljmp
imul
mov
jp
repz
adc
hlt
cmpsb
xchg
mov
pop
jno
inc
mov
sub
pop
xchg
xor
xor
mov
imul
negl
test
push
cmp
push
mov
pop
mov
fs
fisttpl
outsb
pop
jbe
fcom
pop
repz
xor
xchg
mov
mov
adc
aaa
jb
mov
mov
nop
repnz
dec
insb
sahf
leave
and
bound
insl
jmp
add
sub
jne
add
mov
xchg
cmp
ss
adc
or
in
push
aas
mov
add
ret
xor
sbb
jae
test
in
shrb
pop
sbb
jns
inc
adc
pop
sub
jno
ret
sub
adc
orl
data16
in
popa
adc
movsl
out
stc
mov
mov
mov
in
popa
and
xchg
jle
jbe
cmp
xor
mov
popf
out
mov
notb
test
add
or
mov
fwait
call
sbb
js
mov
andb
push
popf
mov
sub
or
mov
adcb
adc
push
loop
sbb
arpl
inc
xchg
dec
xchg
xlat
sub
inc
mov
out
lret
ret
das
pop
xchg
pop
stos
mov
scas
sub
pop
dec
pop
fists
mov
cmpsl
dec
dec
mov
xchg
es
lahf
cli
arpl
aaa
push
push
in
cmp
inc
popa
out
frstor
insb
jo
adc
loopne
dec
aaa
jle
pusha
leave
mov
inc
pop
xor
roll
in
inc
mov
mov
into
xchg
out
add
xorl
jae
insb
and
icebp
lea
sarb
lcall
and
xor
aad
das
mov
add
out
idivl
push
cmp
test
push
push
mov
test
xorb
mov
add
shrb
cmpsb
cli
sub
add
adc
cld
sti
mov
pushf
mov
lret
rorb
andl
cmp
xor
out
adc
mov
xor
icebp
fsts
mov
lea
pushf
repnz
mov
loopne
aam
xor
shll
jle
xorl
cltd
jp
mov
add
andb
pop
mov
add
inc
mov
in
mov
adc
shl
mov
cmp
rolb
push
loop
loopne
mov
mov
push
xchg
ror
test
mov
dec
sti
bound
add
js
sti
and
mov
cmpsl
adcb
scas
add
clc
jle
les
mov
test
inc
sbb
je
call
lods
and
vpcmpgtw
sub
push
cltd
jecxz
xchg
out
cmp
mov
clc
js
aad
dec
mov
test
xchg
out
popa
add
xor
ljmp
hlt
insl
sahf
jmp
and
test
ja
cmp
xlat
pop
ljmp
jecxz
jg
push
test
inc
mov
or
icebp
xchg
jmp
int3
hlt
jbe
mov
das
cmp
inc
cs
sbb
sub
adc
data16
xlat
sbb
test
inc
movsl
cmp
mov
xlat
ds
mov
xor
pop
mov
cmc
paddusw
jbe
cmp
lods
push
xchg
sti
inc
lods
dec
dec
int3
cmp
xchg
mov
mov
js
insl
das
lods
mov
jnp
push
dec
sar
or
idiv
imul
jecxz
call
mov
lods
push
push
push
fidivrl
adc
iret
inc
xchg
movsl
jno
xor
inc
pop
xor
call
test
movzwl
scas
bound
sbb
shlb
cmp
int
adc
and
mov
xchg
hlt
lret
mov
jo
outsb
bound
push
xchg
sbb
xchg
xchg
sbb
clc
jb
stc
and
xor
xchg
pop
fs
or
das
cwtl
xchg
add
insl
add
orl
or
mov
dec
cltd
mov
insl
mov
add
xchg
jle
insl
mov
popf
popa
jecxz
add
ficomps
and
jo
movsb
loopne
or
jb
mov
rorb
sub
mov
sbb
xor
out
shr
cmc
gs
xor
inc
cmp
push
cmpsl
mov
jle
test
mov
mov
aam
push
lahf
fdivrl
adc
xor
fsubrp
test
inc
stos
lahf
test
mov
dec
cmpsb
out
mov
pop
pop
push
or
testl
stc
dec
out
cmp
aas
xchg
pop
inc
mov
pushf
xchg
sub
test
jmp
mov
dec
cmp
pop
fiadds
lahf
xlat
fstl
cmp
pop
sub
push
hlt
notl
movsb
js
jecxz
cmpsl
dec
mov
and
cmp
mov
into
data16
pop
lahf
data16
and
lcall
idivb
repz
lcall
xor
out
pop
mov
push
sub
add
sub
inc
pop
cmp
stos
ja
push
sarb
test
lds
int3
and
out
test
cmp
sub
ret
mov
lds
pop
lods
es
popf
inc
xlat
fsts
test
adc
push
cmp
cmpsb
or
mov
popf
cmpsb
mov
jmp
ret
repnz
mov
pusha
fcmovu
dec
repz
cs
int
inc
fldt
std
jmp
and
addb
inc
inc
push
jns
xchg
jp
nop
aaa
imul
pop
xchg
jecxz
es
sbb
in
cltd
jge
or
bound
outsb
push
add
push
adc
cmp
adc
cmp
sbb
daa
repnz
data16
and
mov
lret
test
and
pop
fstpl
test
leave
add
cs
aam
out
add
repz
rorb
imul
les
push
negl
jns
dec
out
sahf
jmp
jge
ds
pop
inc
mov
filds
jl
cmp
add
mov
popf
pop
sahf
testb
pop
xor
cli
pop
int
in
ffreep
mov
inc
daa
movsl
mov
shlb
mov
movsb
mov
out
cld
lcall
and
fcmovnu
cltd
outsl
inc
fistps
aam
out
sbb
add
lods
jae
lock
int3
into
test
ljmp
adc
cs
clc
push
lds
xchg
pop
push
cmp
xor
or
xor
and
push
and
xor
mov
std
pop
iret
and
add
mov
ss
ret
or
movsl
mov
ret
into
lret
inc
jb
sbb
popf
push
jno
adc
ret
mov
ss
lcall
call
ret
mov
cmpsb
mov
mov
cmpsb
xchg
shll
pop
stos
cmpl
cmp
and
pop
adcl
sbb
push
pusha
mov
sahf
lahf
xchg
movnti
inc
mov
jg
roll
stc
adc
or
scas
add
mov
aam
cwtl
cwtl
popf
add
and
inc
out
cltd
mov
mov
in
push
pushf
mov
mov
repnz
and
rolb
insl
loop
ds
hlt
rcl
cmp
fnstcw
ljmp
jmp
imul
data16
mov
xorl
jnp
fcomps
roll
in
sbb
jnp
jg
mov
inc
lock
subl
inc
pextrw
mov
sbb
jmp
push
xchg
cmp
pop
imul
int
insb
inc
repnz
jmp
aaa
lret
lcall
cmp
mov
js
inc
mov
xor
mov
jo
leave
test
scas
push
aam
jbe
pushl
add
xchg
popa
adc
and
loope
rcrb
jmp
testb
stos
pop
lods
pop
or
out
add
inc
incl
adc
and
xor
pop
lret
inc
clc
inc
rolb
ja
pop
adc
add
ret
pop
push
add
inc
lcall
inc
push
and
xor
pop
lcall
adc
mov
fisttpl
pushf
cwtl
pop
pop
add
pushf
stos
inc
int
outsl
lds
insl
gs
rorl
add
xorb
fsts
fcmove
sahf
pop
out
jp
jbe
rorl
pop
loop
push
sub
cltd
or
aad
repz
fnstcw
test
enter
cwtl
cmpsl
xor
jg
add
jmp
jg
adcl
pop
add
mov
dec
loop
jle
jae
pop
sahf
outsb
cltd
xchg
xchg
adc
lahf
fbld
dec
xchg
jmp
ljmp
aad
ja
mov
xor
into
pop
jp
jecxz
mov
in
sbb
dec
loop
xchg
pop
cmpl
int
mov
lock
outsl
cwtl
les
push
das
outsl
sbb
std
sub
enter
pushl
pop
pop
xchg
mov
inc
add
mov
bound
shlb
je
add
bound
pop
les
cmpsb
push
shll
in
dec
stos
adc
push
add
rolb
movsb
xchg
cwtl
dec
imul
mov
jle
mov
int3
mov
mov
out
xchg
jno
sub
mov
into
push
xlat
in
mov
jno
aam
or
call
std
in
lock
inc
sahf
push
ja
dec
xchg
xor
dec
xchg
test
inc
lret
imul
or
lock
lret
xchg
mov
inc
rep
jno
std
xchg
mov
push
dec
iret
cld
jg
jno
rcrb
xor
cmp
mov
sti
pusha
decb
stos
or
shll
xchg
out
lret
es
jb
mov
mov
mov
lcall
inc
insl
inc
das
scas
adc
pop
ret
sahf
loopne
rorl
jne
iret
fdivrl
mov
lea
mov
into
cli
sub
inc
ds
dec
test
mov
stos
push
clc
sbb
and
xor
clc
rcrl
loope
jmp
outsl
xchg
jmp
ret
dec
add
out
repz
inc
inc
jae
pop
add
jmp
dec
adc
adc
pop
mov
sub
loopne
mov
mov
mov
dec
aam
movl
dec
add
imul
dec
push
push
cmp
jno
out
mov
lret
lret
ret
push
xchg
pop
test
sub
push
fiadds
scas
sub
push
fwait
mov
adc
adc
aad
div
rorw
roll
sbb
mov
testl
mov
test
sub
std
mov
cmp
and
pop
xor
xor
cmovl
iret
dec
adc
lea
pop
outsb
mov
in
push
xor
xchg
or
jne
call
clc
mov
sbb
fwait
shrl
xchg
or
sbb
ret
fisubs
lods
shll
lods
loope
cmc
sbb
inc
sub
cmp
jns
in
sub
idivb
fistpll
and
in
xchg
add
in
fwait
jle
lods
out
add
mov
xchg
mov
mov
insb
pop
lods
pop
sub
test
push
dec
push
inc
bound
ss
sub
pop
and
repnz
xchg
sub
jno
and
sbb
in
cmp
push
cltd
xchg
xor
gs
pop
xor
inc
mov
mov
nop
lds
scas
in
lahf
mov
arpl
out
stos
mov
imul
int3
mov
jno
ds
lds
out
add
jae
cs
rcrb
scas
loop
mov
aaa
int
sub
ret
xchg
out
dec
jecxz
xlat
nop
mov
sub
push
test
sbb
push
mov
cmp
mov
pop
jecxz
pop
out
jge
ljmp
sub
xchg
jnp
lods
xchg
dec
es
push
hlt
rclb
lahf
frstor
insb
cmpsb
pop
lods
loopne
mov
xchg
outsb
lcall
push
call
lods
jae
pop
mov
and
and
xor
mov
pop
cwtl
pushf
movsb
addr16
inc
sub
inc
xchg
inc
mov
notb
jp
insl
jge
dec
inc
and
jns
imul
push
push
xchg
aam
push
and
gs
leave
dec
outsl
hlt
push
or
imul
call
ja
or
fisubs
data16
cmpsb
dec
cs
add
mov
add
out
and
dec
cmpsl
in
mov
movsl
cs
dec
mov
jno
fisttpll
adc
cmp
pop
push
jecxz
les
lock
xchg
leave
xchg
xorl
imul
aaa
clc
out
cmp
fwait
sub
xchg
jo
in
aas
fnsave
mov
push
mov
ret
fldcw
jle
mov
pop
arpl
mov
js
adc
inc
inc
cld
xchg
cli
pop
push
add
lret
or
data16
cmpsl
test
nop
notb
adc
adc
aaa
clc
push
shrl
mov
pop
imul
outsl
addr16
mov
mov
adc
iret
or
xor
test
inc
mov
jne
sbb
mov
sbb
sub
inc
data16
sbbb
xchg
push
mov
sbb
ja
es
jecxz
addr16
cwtl
mov
adc
sub
pop
orl
mov
mov
aad
cmp
cmpsl
mov
inc
mov
ret
sbb
pop
or
jmp
aas
in
mov
push
xchg
loope
mov
sbb
leave
jbe
test
call
cmpb
mov
jns
cld
scas
xor
notb
jge
cmpsl
jbe
xor
xorl
lods
mov
push
mov
mov
xchg
out
xchg
mov
cmc
div
jge
sarb
imul
adc
jo
stos
or
add
or
jb
push
mov
mov
pop
mov
insl
ret
cmp
into
jg
dec
inc
cmc
and
loop
lahf
adc
mov
arpl
and
lret
mov
xchg
sub
repz
scas
dec
mov
xor
ss
cmp
shr
push
and
das
or
push
into
mov
test
call
mov
jl
ds
mov
repnz
scas
fwait
xchg
aas
dec
add
inc
gs
push
cmc
xor
dec
jne
mov
sub
add
test
jl
gs
mov
sub
pop
push
repz
or
mov
push
sbb
insl
sahf
pop
xchg
popf
lahf
test
cmp
sbb
jge
dec
hlt
je
arpl
cli
mov
pop
rorb
cs
shlb
es
xchg
push
cwtl
enter
cltd
std
pop
push
mov
daa
sub
addr16
out
jnp
cld
jle
xchg
dec
sarb
or
or
pop
popa
push
xchg
cmpsb
lret
xorl
punpckhbw
mov
aas
xchg
push
fistps
stc
lahf
sbb
sbb
pop
add
or
jb
push
out
stos
aad
push
lahf
pop
out
int3
cmp
and
dec
stos
bound
inc
repz
mov
adcl
push
sub
mov
ljmp
and
cmpsl
cmp
movsb
push
xor
cmp
fwait
hlt
decb
push
popa
push
mov
or
mov
mov
sub
sbb
xchg
mov
mov
loope
pop
gs
je
mov
cmpsb
pop
mov
mov
inc
rorb
xor
adc
jmp
push
push
pop
jge
add
push
fwait
sub
adcb
lahf
dec
xchg
pop
fcmovbe
je
push
inc
or
pusha
sub
sbb
pop
or
jne
add
sbb
sub
insl
es
xchg
push
and
in
adc
sub
shufps
pop
sbbb
mov
or
xchg
xchg
adc
and
jp
jg
scas
hlt
fwait
adc
iret
lret
loop
dec
push
aaa
inc
cwtl
enter
mov
loope
dec
pop
mov
push
pop
fwait
clc
sub
rorl
add
aam
jns
and
fcmove
testb
and
outsb
shll
enter
cmc
rclb
mov
mov
popa
fcoml
rclb
push
sbb
mov
das
push
pop
mov
sbb
icebp
sub
xor
jl
push
push
lret
vmovaps
les
iret
inc
xchg
lea
lock
dec
ror
jbe
cmc
sbb
pusha
push
dec
sub
adcb
in
push
or
cmpsb
pop
sub
mov
jmp
xor
cmp
inc
xor
lret
loop
loope
add
flds
pop
int3
and
dec
jle
and
test
jno
in
dec
movsl
testb
add
mov
xchg
jp
les
ret
inc
xor
sub
pop
push
dec
rolb
inc
outsb
pop
repz
pusha
arpl
xchg
cli
adc
mov
pop
loopne
sbb
sub
xchg
jb
mov
shll
sbb
fdivl
mov
cmp
in
loope
enter
std
fcomp
adc
lret
mov
sbb
call
dec
jg
jecxz
pop
and
inc
ret
xchg
divl
jl
cwtl
js
test
mov
lret
xor
stc
sub
jbe
sub
lcall
push
lods
filds
cmp
int
pop
mov
jle
ret
push
mov
ret
push
insl
fists
sbb
xchg
aam
loop
xchg
lret
mov
and
pop
push
inc
dec
aam
popa
dec
mov
jmp
inc
fnsave
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
jmp
loope
xchg
xchg
fisttpl
aad
lret
addb
jp
pop
jp
sarb
mov
sbb
inc
je
jns,pn
inc
hlt
andb
push
gs
sub
jb
sbb
push
repz
mov
ret
cmp
imul
push
dec
aad
call
jmp
xor
and
fwait
adc
in
add
xorb
je
sbb
pop
rcrl
scas
pop
inc
cmp
inc
xchg
cmp
add
xor
push
cmp
mov
xchg
xor
mov
filds
and
cli
xchg
mov
xchg
in
arpl
mov
inc
dec
pop
dec
xor
xchg
dec
inc
insl
in
idivb
inc
fs
loopne
pop
cmp
inc
mov
and
cmp
repz
xor
aaa
insb
cli
sti
pop
pop
int
fwait
sub
push
mov
sbb
push
movsl
sbb
xchg
fsubs
cmp
jmpw
in
daa
or
dec
imul
fdivs
jo
scas
mov
jnp
lods
inc
int
sti
jo
jo
pop
out
cmp
sbb
and
out
lea
mov
test
pop
maxps
mov
inc
fs
adc
jle
hlt
and
inc
and
adc
pop
and
mov
push
pop
test
add
xor
notb
xlat
jle
mov
into
cmc
inc
rcll
fmuls
mov
sbb
das
fidivrl
sarb
decb
xchg
mov
mov
jbe
ja
ret
leave
inc
repnz
xchg
sbb
mov
pop
jg
aaa
lods
dec
pop
int3
inc
xchg
mov
mov
cmp
cmp
out
icebp
jge
dec
cmp
andb
rolb
ljmp
fwait
cmp
out
ljmp
sbb
and
jbe
pop
sub
mov
jp
or
sbb
std
loop
shll
push
push
test
pop
fwait
mov
sbb
mov
cmp
repnz
lahf
sub
inc
inc
fmul
and
repz
shrl
sub
or
push
pop
cmp
mov
mov
and
bound
dec
fcmovnbe
adc
pop
cmp
or
test
jae
jle
ror
insb
pop
orb
xchg
xchg
imul
pop
adc
daa
push
shrb
inc
imul
mov
add
xor
fwait
xchg
mov
xchg
inc
add
cld
andb
addr16
movsb
and
repz
mov
adc
lock
sahf
int3
cmp
add
mov
mov
mov
push
sarb
mov
std
enter
mov
or
bound
pop
out
inc
popa
lea
sub
popa
sti
xchg
mov
test
aaa
fisubrl
lret
fmull
jnp
adc
dec
leave
pop
aaa
push
push
test
pop
mov
cmpsl
out
arpl
addr16
jae
iret
cmp
pushf
insl
pop
js
lock
bound
add
inc
hlt
inc
mov
push
jle
mov
out
test
mov
add
add
ror
pop
mov
aad
dec
mov
cmpsb
pop
adc
arpl
jg
dec
sbb
sub
int
je
xchg
pushf
cmp
ret
xchg
mov
bound
sub
loop
sub
mov
cmp
jge
jge
test
sbb
jb
bound
mov
jge
inc
rcll
mov
stc
scas
jmp
aas
or
repz
into
add
push
cmpsl
xchg
into
aaa
sub
test
or
xor
sub
sahf
jl
push
ja
mov
push
add
outsb
pop
lea
stos
call
sti
mov
xlat
sbb
cs
std
outsb
mov
iret
lock
xchg
xor
ja
and
xchg
cs
inc
cld
xor
gs
sbb
or
and
std
mov
dec
jno
rcr
loop
nop
call
mov
test
or
adc
jmp
push
out
aas
xchg
mov
push
rorb
inc
pop
xor
xlat
pmaxub
mov
je
clc
adc
mov
push
cwtl
adcl
mov
jmp
pop
dec
sbb
cli
xorl
arpl
dec
out
int3
lock
push
pop
lret
cltd
jmp
in
xor
mov
sbb
inc
out
divb
sarl
fmul
xchg
sti
nop
sub
jge
add
add
popf
add
sbb
mov
les
addb
movsl
les
push
push
mov
sbb
add
scas
xor
je
dec
ss
mov
add
cmp
xor
sbb
lea
sahf
inc
mov
xor
mov
lcall
mov
xchg
add
fldenv
jb
arpl
and
aaa
mov
add
mov
xorb
pop
in
mov
andb
mov
rclb
data16
sbb
out
int3
or
rol
push
pop
xor
and
hlt
dec
xchg
rorl
ret
lds
sbb
movsl
stos
push
add
inc
jp
jbe
or
stos
lret
or
subl
stc
rcrl
adc
sbb
clc
sub
jne
gs
adc
je
aaa
stos
cmpsb
jns
lea
xchg
jmp
mov
mov
int
call
sub
fidivrl
dec
adc
xor
lea
jb
add
pop
push
sbb
mov
scas
xchg
pop
xor
repnz
sbb
jb
lods
mov
std
cwtl
jle
mov
outsl
pop
mov
xchg
sbb
jmp
jle
fisubs
shlb
cmp
fs
mov
xchg
icebp
dec
js
lret
int
movb
stc
and
mov
push
add
imul
xor
mov
jns
or
sahf
dec
xor
fsubs
std
adc
xor
adc
xor
fistps
jo
mov
push
movsl
inc
es
mov
movsl
ret
pop
mov
scas
subb
adc
xchg
js
into
das
adc
data16
or
cmp
out
inc
push
jbe
or
dec
pop
dec
rolb
add
nop
inc
sub
sbb
mov
xor
mov
xlat
push
mov
xchg
iret
lret
cmp
and
push
mov
push
mov
pushf
mov
or
cmpsl
lret
out
sub
sbb
popa
addr16
sub
das
cli
loopne
mov
insb
fistl
xchg
lds
mov
frstor
and
dec
add
jp
lret
mov
or
and
loope
in
dec
lock
push
inc
push
cmp
incl
xchg
stos
test
pop
stos
out
jl
ss
ss
pushl
into
orb
dec
enter
push
repz
js
or
xor
push
aam
loopne
xor
dec
push
xor
daa
mov
orb
out
and
jbe
dec
mov
dec
loop
in
je
insl
cmc
sbb
daa
int
lock
xchg
pop
pop
xor
jns
mov
push
imul
pop
test
cmpsl
fadds
adc
rcll
mov
fnstsw
jl
add
mov
mov
rorl
add
lcall
aad
jb
lcall
lcall
mov
sbb
inc
lahf
aas
push
inc
add
int3
sub
or
xchg
fs
test
mov
xchg
iret
xchg
or
mov
sub
daa
pop
aam
sbb
popa
mov
aad
test
sbb
xor
std
mov
jbe
mov
mov
inc
mov
lods
xor
fwait
shrl
adc
add
push
lock
outsl
ljmp
pop
fldenv
push
sahf
sti
lock
pop
scas
cltd
inc
sub
or
pop
ret
fidivrs
xlat
dec
xchg
sub
push
pop
loopne
xor
xor
roll
push
jmp
pop
jnp
lcall
push
das
test
je
push
fstpl
out
arpl
insl
dec
rorl
leave
out
xor
sbb
hlt
or
pop
inc
lods
jno
mov
movsb
test
cmp
xchg
adcl
inc
mov
popf
jl
pop
jle
sbb
stc
mov
shrb
adc
lcall
push
adc
out
xchg
inc
out
fmull
jle
stc
mov
cld
movsl
cs
neg
jecxz
ljmp
add
sahf
mov
mov
leave
or
pusha
repz
jg
dec
xchg
stc
rol
js
adc
jae
mov
bound
and
enter
cmp
dec
pusha
cmp
push
lahf
jp
mov
xor
lahf
das
andb
sbb
inc
cmpsl
rorb
push
xor
test
cltd
xchg
jge
dec
dec
lods
stos
push
inc
xchg
lods
mov
lret
push
lea
cmp
sbb
clc
pop
add
pushf
xchg
fwait
out
ss
pop
pop
push
add
pop
pop
lret
clc
jnp
mov
add
mov
aad
sbb
mov
lcall
push
mov
fadds
sbb
xchg
mov
push
repnz
fs
xchg
pop
sbb
out
stos
and
rorb
inc
ret
add
push
in
sub
mov
mov
push
rcll
and
fwait
xor
mov
movsl
pop
call
sub
icebp
cmp
cwtl
test
daa
xor
sahf
in
dec
cs
push
ss
or
cmp
dec
or
pop
jle
popa
cwtl
repz
push
mov
jne
popf
mov
daa
sbb
sbb
mov
lret
sbb
jmp
mov
and
lret
out
dec
divb
popa
test
in
int3
testl
sub
cmp
icebp
xor
orb
shlb
daa
and
xchg
mov
test
in
ja
adc
mov
cmc
and
aad
pop
add
and
dec
jbe
mov
xor
sbb
pop
adc
je
inc
mov
lods
call
arpl
cwtl
iret
ds
shrb
xlat
push
cltd
cmp
push
mov
dec
into
imul
pop
popa
cmp
gs
sahf
fsubrp
and
pop
adc
jbe
cmp
mov
sarl
push
xchg
std
pop
aam
xor
add
cltd
hlt
xor
xchg
fs
mov
movsb
es
out
lods
pop
dec
xchg
sbb
or
add
mov
or
inc
or
out
repz
add
inc
add
jl
pop
pop
rorl
or
int3
lcall
pop
pop
mov
jne
ljmp
add
iret
dec
repz
xchg
es
arpl
dec
pusha
movb
mov
pop
xchg
jbe
js
sahf
xlat
loop
pop
dec
sub
outsb
pop
lds
inc
imul
out
sbb
push
jecxz
pop
clc
pop
mov
xor
adc
sub
adc
fisttps
push
rcl
repnz
mov
dec
mov
leave
xlat
outsl
rcrb
das
inc
leave
adc
push
ja
aad
lds
rep
in
or
out
mov
mov
jo
pop
add
std
sahf
movsb
dec
and
jbe
repnz
enter
pop
inc
lods
lcall
insl
mov
mov
push
mov
ja
scas
add
insl
mov
ret
push
int3
sub
scas
mov
mov
lock
adc
pop
jl
scas
xchg
loop,pn
cmpsl
xor
cmp
test
or
into
xor
fsubl
add
jae
ret
mov
nop
int3
inc
sbb
push
mov
fists
push
xchg
mov
push
pop
nop
jl
pop
sub
cmovl
cmp
sbb
movsl
divl
sbb
xor
inc
fnstsw
inc
fs
aas
js
inc
repnz
sub
or
xchg
inc
in
popf
cmpsl
rorb
sub
push
xchg
lds
mov
cmc
shl
adc
inc
jp
add
ficompl
imul
cli
stos
xchg
inc
scas
and
aas
dec
xchg
push
cli
sar
clc
inc
mov
ret
int3
xor
dec
popf
pop
scas
xchg
repz
xchg
push
inc
push
clc
add
negl
outsb
push
imul
mov
out
dec
mov
shr
pop
in
cmp
cli
repnz
loop
pop
sbb
mov
sbb
and
push
lea
pop
sbb
sub
xor
mov
in
sbb
xchg
add
call
int3
das
xor
inc
pop
fimull
setle
jno
repz
shl
mov
sbb
outsl
imul
mov
loope
je
sbb
fldt
cmp
or
leave
andl
inc
sbb
or
ret
or
pusha
movsb
data16
cmpsb
ficomps
inc
fwait
mov
mov
int
dec
mov
dec
enter
mov
test
pushf
mov
scas
push
das
sub
cmp
xchg
dec
inc
jl
pop
pushl
jb
sbb
sbb
aad
sbb
pop
bound
jo
dec
sub
push
or
sbb
mov
rcr
test
lcall
mov
adc
outsb
or
ficomps
dec
cmp
inc
out
sub
xorb
imul
or
lods
aaa
xor
dec
jbe
mov
jl
mov
fucom
popf
push
sbb
in
sbb
insl
cli
mov
or
adc
bound
lods
ljmp
out
xor
lret
mov
push
fldt
repnz
xchg
outsb
mov
cmp
sbb
mov
and
lock
imul
cli
jecxz
fbld
xor
gs
mov
lret
pop
jno
aad
pop
mov
fcmovnb
je
lret
pop
ljmp
aad
push
js
and
das
imul
jg
imul
clc
dec
adc
shll
mov
dec
xor
out
mov
inc
inc
test
cmpsb
flds
xchg
mov
mov
add
push
push
dec
jb
mov
aad
xchg
push
cmp
repz
aad
pop
out
sahf
clc
xor
mov
movsb
push
test
mov
xor
ljmp
stc
decl
sbbl
jle
scas
in
cwtl
add
mov
das
rcrb
not
mulb
mov
cltd
pop
xor
mov
mov
test
xor
jge
cmova
xor
in
or
xchg
xchg
sub
stc
or
jb
rcr
mov
lahf
cmp
cli
inc
add
jo
jnp
mov
xlat
mov
outsl
adc
inc
fwait
outsl
sub
push
sub
add
and
pop
mov
xor
add
sbb
dec
iret
shrb
lock
pusha
sbb
or
mov
stc
push
pop
les
mov
repz
pop
shll
push
lret
addr16
leave
test
outsb
adc
repnz
xor
sub
jmp
jbe
in
dec
shrb
lods
in
push
mov
xchg
data16
inc
sub
int
les
movsb
mov
sub
mov
iret
mov
imul
mov
adcl
pop
inc
rclb
mov
jle
out
lods
jmp
xor
cmc
or
jb
jp
cli
sbb
dec
mov
popf
repnz
je
jecxz
fnstcw
dec
push
movsb
shlb
fwait
cmp
mov
cmp
dec
imul
push
sti
sbb
sbb
pop
fidivl
outsl
xor
imul
add
push
inc
std
jne
inc
inc
lret
and
push
jmp
lods
repnz
sbb
mov
cmp
int
xor
cmp
nop
mov
dec
mov
dec
sbb
outsb
cmp
sub
mov
in
gs
push
sub
pop
mov
jb
sbb
addr16
sbb
imul
xlat
pop
sub
jnp
insl
cmp
das
int3
sbb
push
add
jo
std
out
jb
adc
pop
test
mov
pop
ljmp
repz
out
xchg
test
jg
xchg
mov
and
dec
movsl
das
mov
pop
orl
or
jmp
loope
inc
imul
pop
dec
push
jae
int3
scas
push
push
cmp
sub
je
cmp
pop
lcall
movsl
fisubrl
mov
inc
ss
cmp
jmp
push
push
xchg
xchg
add
testl
psubsw
lods
xchg
imul
mov
fdivl
sub
mov
cs
mov
into
pop
add
push
in
rorb
xchg
test
imul
adc
pop
pop
dec
shlb
add
push
ljmp
mov
inc
ds
mov
scas
movsl
int3
push
adc
ret
jnp
movaps
stos
pushf
outsb
add
outsb
testb
mov
leave
xor
mov
in
bnd
inc
jmp
dec
fcmovb
mov
or
adc
and
ds
and
mov
mov
inc
dec
pop
hlt
mov
mov
push
xchg
hlt
sub
call
pop
outsl
dec
jl
push
xchg
aam
inc
mov
add
mov
sbb
cmp
push
sti
dec
mov
mov
dec
aad
mov
dec
jp
cmp
sbb
sarb
mov
cmpb
mov
jmp
pop
inc
inc
sar
mov
pop
cli
add
sbb
mov
int
mov
cld
push
push
shrb
shll
insb
out
dec
pop
scas
adcb
sub
push
push
jmp
dec
imul
sbb
pop
xchg
add
jno
stos
mov
inc
cwtl
dec
or
rcrb
fcoml
dec
xchg
and
jmp
push
mov
in
rorb
std
mov
rorl
test
xlat
sahf
mov
and
fwait
cmpsl
or
xchg
cmpsl
lock
xchg
cmp
pop
ss
and
cli
ficomps
scas
fcmovb
lods
fwait
cmp
fstpl
sub
jns
aaa
ljmp
rcr
jno
lret
inc
dec
lret
jmp
xchg
sub
and
stos
out
mov
mov
sub
push
in
cmp
mov
cld
sbb
sub
andl
cmp
sahf
adc
cli
jecxz
outsb
lock
push
cmp
mov
dec
xor
jge
sub
dec
in
mov
dec
into
jg
mov
nop
add
dec
dec
mov
pop
js
sbb
scas
cmpsb
sarb
loop
stc
les
loop
dec
dec
jo
jbe
or
jnp
mov
push
shl
sahf
pusha
paddusb
ret
mov
aam
gs
sub
jle
dec
out
xchg
sub
add
pop
xchg
xchg
stos
mov
ja
sbb
push
cmpl
push
out
mov
sbb
push
gs
repnz
in
xor
jecxz
xor
or
mov
jmp
add
jno
sbb
pop
xchg
pop
adc
or
jl
xchg
mov
pop
lods
pop
ljmp
ds
icebp
das
add
jg
movsl
jg
sbb
or
push
insl
add
out
hlt
fst
std
xchg
loopne
and
gs
mov
cli
xchg
pop
dec
or
std
dec
mov
mov
pop
push
xor
stos
into
pop
jecxz
xadd
cli
mov
adc
sbbl
pushf
xchg
ret
inc
ficompl
push
xor
rcrl
orb
aas
pusha
decl
mov
sahf
stos
scas
mov
ja
jge
push
mov
fstp
pop
fldcw
cli
sub
in
outsb
mov
lret
inc
js
pop
fistpll
cmp
nop
jns
sbb
pusha
imul
mov
xchg
stc
iret
sbb
ficoms
and
lret
insl
xchg
mov
mov
scas
push
inc
dec
ja
popf
rcr
lret
jae
and
ds
jnp
mov
adc
cmp
push
outsb
mov
outsl
add
mov
addr16
adc
addb
and
inc
xor
or
fidivrs
daa
jae
adc
mov
sbbl
mov
stos
mov
xchg
inc
dec
pop
push
mov
lods
outsl
jmp
icebp
test
rolb
es
push
jne
mov
inc
fucomp
mov
out
out
mov
push
inc
or
xor
or
sbb
jo
pop
jg
and
sbb
cmp
fcmovnbe
add
sbb
xchg
sbb
inc
xor
dec
fcmovb
fwait
and
pop
cmp
xor
sbb
loop
repz
push
inc
dec
clc
insb
push
fisubrl
dec
and
lret
mov
pop
test
mov
push
lea
xchg
test
and
fistl
stos
cmpsl
and
enter
push
aam
xlat
jmp
cmp
lahf
push
pop
or
inc
or
xchg
dec
and
dec
sub
int
call
jne
push
inc
mov
adc
loop
jmp
push
or
sbb
jnp
fs
xor
pop
jo
xchg
idiv
aam
dec
stos
or
mov
pop
xchg
inc
scas
stos
and
mov
arpl
xchg
inc
stos
popa
mov
sub
shll
mov
jp
sub
mov
jecxz
fimuls
out
cmpb
dec
inc
data16
bound
shrb
std
ljmp
add
dec
jno
cmpl
cmpsl
dec
xchg
ljmp
lahf
sbb
jae
andb
popf
dec
out
fwait
sbb
adc
xor
test
sbb
mov
and
jmp
add
xlat
cmpb
xor
arpl
loopne
pop
xchg
xor
cmp
adc
and
mov
xor
scas
xor
mov
jmp
into
in
adc
test
test
loopne
dec
outsl
push
invd
hlt
xor
push
je
jg
pop
idivl
pop
fistpl
xor
jbe
jnp
xchg
in
mov
sub
xchg
sti
int3
mov
jae
push
or
cld
xor
incb
jmp
inc
pop
movb
push
inc
inc
or
xlat
mov
int
xchg
and
repz
push
push
add
lock
mov
gs
pop
xchg
subb
dec
call
popa
and
sub
jno
lds
inc
in
dec
das
scas
jb
mov
mov
sbb
xchg
dec
sbb
jns
xor
inc
xor
fdivrl
or
inc
dec
stos
mov
inc
out
in
or
loop
add
fimull
and
cmovns
add
xchg
imul
daa
cmp
and
out
cmpsb
lods
dec
adc
fdivp
xlat
mov
lahf
push
jmp
pusha
jo
out
lods
push
in
mov
imul
ror
add
stos
push
inc
cmp
dec
scas
mov
and
mov
cmp
les
xchg
add
jle
test
imul
lahf
shll
pop
xor
jnp
push
push
rcl
adc
outsb
adc
xor
inc
xchg
mov
push
add
sbb
and
into
xor
push
mov
mov
dec
iret
mov
mov
adc
jl
shlb
pusha
mov
mov
jae
fs
pop
sbb
lea
jp
fildl
repz
xchg
dec
idivl
pop
cmp
dec
mov
xchg
mov
jp
icebp
test
or
mov
add
sub
dec
aam
lret
lods
jge
call
sbb
in
or
and
mov
lods
jo
call
add
aas
ret
out
mov
mov
inc
pushf
mov
fcoml
loope
jmp
lds
insl
mov
sub
mov
push
js
iret
inc
pop
xor
lock
je
xchg
cmp
and
in
and
fldcw
lds
jne
imul
cmp
sbb
pop
jne
insl
sbb
add
sbb
cmpsl
jne
les
and
pop
notl
add
in
and
es
add
sbb
adc
mov
and
xor
dec
call
mov
add
mov
pushf
push
inc
xchg
notl
dec
and
mov
xchg
mov
dec
stos
inc
xor
or
pop
mov
rclb
loop
punpckhwd
ret
pushf
cmp
mov
mov
pop
push
js
inc
cmp
mov
int
cmpsl
mov
cwtl
sti
cmp
lock
fcmovnb
in
arpl
fisttps
xor
call
and
jae
xchg
rorl
enter
ja
bound
sbb
xchg
into
push
jp
inc
test
enter
xchg
aas
xor
insl
test
dec
rcl
add
jo
or
ret
pop
arpl
mov
mov
pop
in
jle
sub
mov
mov
xchg
mov
and
loop
cmpsl
lods
fbld
aaa
out
notl
push
movsb
mov
cmp
in
stc
sub
jecxz
icebp
test
aas
dec
or
nop
mov
scas
ret
ljmp
xchg
sarb
leave
arpl
mov
sbb
rclb
lret
mov
cmc
fisubrl
cwtl
outsb
test
stc
mov
rol
nop
jle
push
jno
out
dec
cmc
push
sub
mov
in
and
mov
mov
loopne
mov
cmp
test
popa
lcall
iret
jge
pop
cmp
xchg
jp
rol
xchg
xlat
adc
ljmp
mov
aaa
push
cmpb
ljmp
sub
and
lahf
loope
inc
pop
mov
fcmovnbe
mov
xor
mov
push
mov
in
cmovge
scas
push
stos
pop
pop
lcall
or
aaa
cmpsb
mov
cmp
xchg
jno
int3
jge
mov
nop
jb
push
ss
leave
add
mov
dec
out
loope
fadds
imul
mov
sbb
adcl
popf
dec
imul
ja
xlat
add
and
and
movsl
push
imul
outsb
inc
mov
push
mov
cmpsl
lods
rcr
in
pop
scas
icebp
iret
cmp
mov
fdivrp
insl
popa
andl
test
xchg
or
push
mov
or
ss
fcmovbe
jp
adc
sbb
jmp
sbb
mov
adc
fsubrp
insb
push
gs
or
pop
add
mov
ss
adc
mov
jno,pn
jmp
shll
data16
mov
jbe
cltd
mov
mov
sbb
and
fnstsw
lock
popa
loope,pt
pop
mov
orb
aaa
xchg
mov
test
mov
daa
jmp
and
mov
in
inc
lcall
and
dec
lahf
mov
add
popa
sbb
mov
jle
in
les
jae
and
xor
or
jbe
out
add
mov
leave
addb
mov
xlat
jns
fistl
add
in
out
inc
jg
jmp
int
setp
mov
test
icebp
shrl
pop
push
adc
xlat
inc
scas
inc
movsb
int3
imul
aas
push
mov
into
fstpl
jmp
in
dec
outsb
cltd
pminub
icebp
into
jg
adc
aam
enter
sbb
or
jle
movsb
or
dec
add
sti
scas
out
sbb
jns
out
dec
scas
or
xor
stos
out
add
rol
and
mov
test
pop
mov
das
push
ljmp
or
stos
push
bound
push
or
inc
incl
mov
mov
xchg
imul
popa
lea
and
mov
dec
jp
rcrb
or
mov
mov
div
out
je
into
mov
lock
je
bound
mov
test
adc
push
push
lret
mov
sbb
xchg
fbld
aas
adc
test
mov
cmp
sahf
xlat
or
fmuls
xchg
adcb
dec
jae
and
outsl
mov
xchg
ja
fadds
daa
sarl
add
xchg
insb
lock
cmp
notb
sbb
jmp
adc
xor
in
stc
icebp
and
sarb
mov
cmp
adc
gs
je
neg
mov
ds
cmp
cmp
xor
fldcw
roll
cwtl
adc
mov
enter
cwtl
in
push
fs
pop
xchg
add
lahf
jo
and
jne
push
movsl
rclb
leave
mov
movsb
and
and
inc
iret
add
insl
inc
or
mov
loope
das
imul
pop
loope
cs
aaa
push
xor
leave
fwait
add
xlat
in
pop
cmpsl
mov
cmpsb
mov
fwait
cs
imul
jns
inc
out
loop
repnz
loop
jle
inc
shll
movsb
or
xchg
mull
enter
lods
sbb
jecxz
xlat
add
aam
test
jbe
orl
jns
pop
mov
jnp
inc
xorl
loope
dec
dec
ret
lea
sbb
jnp
sbb
push
mov
lds
ret
add
cmc
or
lds
cmp
fs
pop
test
push
ds
xor
xchg
cmp
aas
mov
push
sub
shl
imul
and
adcb
push
testl
scas
mov
sahf
faddl
sbb
xchg
or
sub
sbb
dec
mov
ja
out
sbb
jecxz
adcl
aad
cmc
lea
and
movl
shrl
jnp
addr16
lret
sub
pop
or
xchg
lcall
xlat
test
leave
shrb
ret
jmp
mov
dec
sbb
lea
into
push
rolb
movsl
js
inc
pop
sub
mov
xlat
into
clc
mov
ss
jnp
aad
cmpl
push
out
mov
test
test
scas
in
push
bound
stc
nop
or
xchg
dec
std
cs
xchg
sub
repz
scas
mov
mov
pop
loopne
gs
inc
mov
jle
arpl
scas
and
stc
ret
sbb
movsb
xchg
es
xchg
xchg
aas
adc
inc
je
pop
mov
loopne
movsb
mov
daa
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
push
mov
adc
mov
and
mov
adc
mov
mov
mov
sub
or
andl
sub
movl
movl
mov
mov
not
sub
mov
xor
mov
incl
xorl
xor
xor
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sub
mov
sub
orl
mov
mov
or
sub
mov
jmp
lea
test
fbld
jae
mov
pop
push
and
and
xchg
rolb
out
cmc
jecxz
mov
inc
jp
jo
mov
fldcw
or
mov
test
iret
les
in
mov
ljmp
or
shll
sbb
cmp
int
xor
loope
cmp
xor
es
scas
out
test
in
or
sub
add
shrl
das
inc
pop
aas
dec
dec
in
mov
jo
dec
jle
pop
insl
pop
test
jmp
ja
mov
dec
pushf
or
sub
ret
ljmp
arpl
ljmp
cltd
xchg
inc
mov
je
in
les
jecxz
fucomip
shll
nop
mov
xlat
cmp
cmp
xor
push
subb
imul
cmpsb
mov
pop
push
add
push
call
pop
mov
in
push
push
in
pop
test
insb
xchg
mov
xor
lods
les
mov
and
pop
mov
addl
add
shll
push
or
mov
outsb
xchg
pop
inc
and
xor
cmp
aad
addb
adc
xchg
movsl
out
shrb
adc
nop
mov
std
push
aam
jno
mov
xchg
outsb
xchg
mov
call
stc
push
mov
mov
mov
hlt
push
jnp
shrl
cmp
and
out
jo
pop
or
jnp
sbb
orl
cmp
inc
jno
mov
dec
push
shrl
xchg
sub
sub
stos
xchg
stc
rcl
xchg
cwtl
and
repnz
adc
jno
mov
scas
mov
push
xor
push
ss
xchg
push
jns
punpckhwd
int3
movsb
inc
pop
push
aaa
insb
mov
pop
cmc
imull
pop
cmp
adcl
push
push
mov
cs
xchg
into
data16
jge
ror
movsb
ret
mov
dec
inc
sub
lds
lahf
cmp
push
add
inc
outsl
pop
mov
test
mov
inc
sti
or
and
cmpsl
mov
lcall
idivl
cmp
out
sbb
popf
mov
jg
call
xchg
xor
les
jns
scas
jo
xchg
loop
push
test
test
jb
adc
test
decl
dec
iret
movsb
fwait
mov
dec
das
xor
stos
push
push
sbb
rsqrtps
adc
sub
cltd
push
push
mov
add
inc
inc
sti
inc
dec
dec
jbe
addr16
cs
dec
jne
outsb
push
add
cmp
mov
mov
mov
sbb
push
bnd
pop
adc
addr16
sti
pop
ljmp
xor
mov
adc
sahf
out
lock
push
lds
add
mov
dec
cmp
xchg
aas
mov
mov
jmp
add
pop
or
dec
mov
mov
push
loope
ret
insb
in
loope
clc
xchg
ja
jo
mov
and
outsb
popf
push
setbe
dec
jge
mov
and
mov
xchg
mov
ja
inc
xor
aas
sarl
xor
sbb
gs
jecxz
int3
fwait
out
sbb
rol
clc
lahf
adc
jno
scas
decb
cmpl
inc
lret
push
jb
xor
mov
clc
adc
cmpsl
shll
jnp
dec
sahf
ljmp
jb
fsubr
push
into
xor
paddsw
push
pop
stos
sbb
ljmp
lods
push
mov
popf
addl
scas
push
jp
pop
push
das
stos
xor
ljmp
pop
pushf
xchg
mov
mov
jo
popf
sti
push
xchg
lret
push
xor
pop
lock
xchg
sub
or
shll
xor
shrl
call
xchg
leave
std
jle
ret
mov
bswap
mov
sahf
pop
mov
mov
dec
jp
or
mov
stc
pop
jne
icebp
inc
aam
mov
jmp
push
pop
bound
and
mov
mov
movb
xor
sub
insl
inc
push
jb
cltd
loop
jnp
xor
out
mov
mov
arpl
ljmp
lret
loope
mov
and
jne
out
mov
xchg
dec
call
cli
in
ds
stos
add
sahf
xchg
push
aas
leave
jne
mov
popf
fs
int3
mov
in
jge
ss
mov
test
movsb
fstpl
test
jg
and
jge
push
ss
xchg
leave
cltd
in
xor
mov
ja
in
sbb
sbb
add
pop
jmp
imul
aaa
ljmp
imul
leave
pop
jecxz
inc
mov
jne
ja
or
fs
test
pop
repnz
sti
cmc
daa
pop
pop
fisttps
fsubl
pushl
mov
bound
icebp
add
sarb
jnp
clc
pop
sbb
mov
sub
cmp
mov
testl
mov
xor
xchg
add
xchg
dec
push
popa
jnp
int
lcall
std
inc
loope
jl
cmpl
mov
pop
sar
pushf
addr16
test
in
clc
and
scas
xchg
and
es
sbb
cwtl
fldcw
mov
pop
rcrl
aad
shrl
sub
icebp
adc
fstps
fwait
mov
xchg
and
arpl
pop
shlb
dec
pop
outsl
sahf
xchg
icebp
das
mov
mov
xchg
and
mov
adc
dec
mov
pop
js
aad
jl
jno
aas
test
insl
mov
sbb
movl
xor
pop
sbb
or
shrb
push
mov
and
cmp
ficoml
mov
pop
sbb
movsl
sar
leave
jmp
inc
add
mov
jb
call
and
fidivrl
inc
out
adc
rorl
in
dec
adc
movsb
fisttps
pop
inc
call
mov
dec
push
cwtl
shrb
inc
daa
cmp
sbbl
fisubrl
loop
pop
lock
loopne
lods
repz
fimull
and
das
pop
daa
icebp
sti
push
fsubrl
pop
test
aas
cmp
pop
clc
sub
xchg
je
jo
cli
enter
mov
xchg
gs
in
inc
mov
jns
fs
mov
inc
pop
dec
jg
notl
inc
xor
push
mov
jae
in
jg
xchg
dec
std
mov
jne
sbb
cltd
orl
lds
mov
inc
rorb
addb
cmc
xchg
clc
push
or
in
sbb
ja
or
mov
flds
pop
mov
dec
add
sub
test
loop
sti
push
test
in
cmp
ficoms
in
icebp
ja
into
outsb
xchg
loop
nop
leave
add
inc
mov
jns
mov
cld
jl
nop
lock
jnp
arpl
leave
test
iret
jo
sbb
push
mov
lahf
leave
pop
in
call
jmp
lea
push
mov
or
cmc
movsl
ret
or
mov
xlat
sub
aad
adcb
add
lahf
rcrb
adc
push
adc
mov
sub
xor
or
or
or
es
cmpsl
mov
data16
fisttps
mov
add
addr16
cmp
incl
ret
int3
mov
shr
sbb
or
fs
push
ret
or
jmp
lods
popa
mov
add
repnz
mov
mov
sbb
test
icebp
push
aas
xor
jmp
xor
push
cmc
push
jmp
movsl
sub
adc
and
mov
fwait
lea
decl
dec
stos
int
lcall
dec
faddl
xor
jmp
shlb
adc
lods
mov
fidivs
stos
frstor
aad
lret
cltd
cmp
dec
repz
fucomp
cltd
push
pop
es
inc
dec
imul
pop
inc
push
rcl
xchg
mov
in
adc
push
sbb
sbb
jp
xor
dec
clc
test
lock
inc
insl
mov
and
push
jo
arpl
lea
lret
adc
cmpsb
dec
lahf
mov
ret
dec
shrl
jmp
lds
das
aam
dec
mov
sbb
jno
fnstenv
add
icebp
cli
cmp
out
xchg
mov
cwtl
nop
repnz
mov
mov
rol
rcrb
cmc
fmul
xchg
roll
mov
sub
sahf
stos
test
fwait
xchg
jbe
jno
inc
stos
lahf
fisttpll
pop
loope
xchg
lock
daa
fbld
and
pop
insl
and
or
aad
int3
jae
or
dec
popa
test
add
shlb
cli
int3
rcrb
hlt
and
mov
sbb
mov
jno
fstpl
adc
or
and
in
push
ret
or
or
sahf
sub
scas
jno
mov
popf
shll
sbb
or
in
jge
sbb
xchg
lcall
out
lret
aam
loope
stos
stc
ret
scas
js
sub
jae
push
sbb
shrl
sub
sti
xchg
outsb
cmpsl
mov
stos
loopne
mov
movsb
push
jb
xlat
and
leave
fsub
fmuls
decw
shll
nop
sbb
popf
xchg
cld
push
leave
jo
dec
out
roll
sub
and
hlt
outsl
neg
cltd
stos
test
dec
cmp
sbbb
mov
and
cs
mov
shl
adc
cmpl
jg
mov
and
add
leave
push
bound
stos
into
jmp
outsl
shlb
jo
and
mov
test
hlt
aaa
jns
ret
cltd
bound
sub
movsl
mov
jo
push
mov
add
ljmp
pop
leave
lcall
fidivs
inc
xor
std
mov
xor
xor
in
shll
mov
xchg
scas
inc
dec
xor
mov
or
insl
adc
push
clc
in
movsb
aaa
or
xchg
stos
ljmp
inc
mov
scas
std
insb
jl
inc
in
popf
or
sub
pop
jne
ss
push
cmp
rorl
pop
xchg
iret
and
sbb
and
out
int
cmpps
pushf
and
in
gs
mov
xchg
inc
in
adc
adc
lods
mov
pop
xor
stos
jp
lea
and
in
je
test
test
cmc
sbb
aaa
xor
sbb
add
addr16
or
test
push
pop
or
xchg
adc
or
jno
push
test
adc
fistpl
adc
sti
or
sbb
ds
sub
mov
test
repnz
add
loopne
pop
add
call
pop
fcomi
enter
adc
mov
or
jne
xchg
or
and
fldenv
fnstcw
or
addr16
mov
or
movsl
hlt
jb
fisubrs
cmp
cs
lcall
lock
jbe
cld
xlat
mov
gs
sub
aam
ljmp
stc
and
loop
mov
int3
ror
add
fadd
rolb
push
xor
mov
push
jno
fcmovne
aad
icebp
dec
or
mov
xlat
pop
shlb
mov
nop
lea
mov
push
dec
stc
int
jo
cli
xchg
dec
and
or
add
sub
dec
mov
jp
mov
in
adc
pushf
mov
push
and
sbb
push
imul
test
scas
jno
xor
movsl
mov
jnp
or
out
fmuls
jno
outsl
pushf
jl
pop
mov
cmpsb
push
pop
push
fcmovne
popf
mov
cmp
xor
push
cmp
js
cmp
push
outsl
add
or
push
inc
or
xchg
inc
jbe
xor
notb
dec
inc
movsl
and
fldt
rol
cmpsl
cltd
xor
push
cli
imul
or
inc
mov
ds
cmp
lods
js
addr16
xor
mov
shll
jbe
rorl
pushfw
pop
std
gs
xchg
xchg
push
mov
pop
cmp
enter
mov
mov
mull
jg
xorl
xchg
push
aas
scas
inc
jne
iret
pop
jp
in
adc
mov
xchg
sub
sbb
ds
adc
mov
jp
lea
jle
inc
sbb
addr16
jbe
jl
fildl
and
int
loopne
jp
js
adc
scas
sub
ja
cwtl
xor
test
std
lock
mov
sub
pop
movsl
sub
lock
inc
stos
pop
cmp
orl
or
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
push
call
cmpl
jb
mov
movzwl
adc
sub
xor
xor
sub
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
and
mov
mov
sub
mov
sub
mov
mov
sbb
mov
or
mov
xor
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
xor
add
add
push
mov
mov
movzbl
add
lea
or
mov
mov
and
mov
sbb
mov
adcl
xor
subl
add
mov
adc
mov
mov
mov
sbbl
add
movzbl
add
mov
push
movl
mov
and
mov
adc
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
call
cmpl
jb
xor
mov
add
mov
adcl
add
cmp
movl
je
mov
movl
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xorl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
addl
mov
andl
xor
adcl
add
imul
mov
xor
andl
add
cmp
notl
mov
movl
push
movl
je
adc
mov
add
sub
mov
andl
mov
xor
adcl
add
imul
mov
movl
jmp
adcl
mov
xor
mov
add
mov
mov
xor
xor
mov
mov
andl
sub
add
movzwl
adc
mov
or
mov
adcl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
xor
sbbl
xor
lea
xor
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
push
andl
call
mov
sbb
mov
sbbl
push
call
adcl
test
je
push
adcl
push
addl
push
andl
call
movl
jmp
push
xor
or
sub
mov
mov
addl
lea
push
xorl
push
decl
call
test
movl
je
push
movl
jmp
sbbl
push
call
test
movl
je
adcl
push
push
push
addl
call
jmp
xorl
lea
sbbl
push
negl
push
call
sbbl
test
movl
je
orl
push
subl
call
jmp
movl
mov
sbb
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
movl
lea
adc
mov
lea
sbb
mov
inc
mov
mov
add
mov
mov
mov
movl
xor
sbbl
push
sub
mov
adcl
add
movl
mov
mov
mov
cmp
jne
mov
incl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
xor
or
add
xor
mov
mov
adc
mov
mov
sbb
xor
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
movzwl
and
mov
mov
adcl
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
or
mov
mov
xor
mov
dec
mov
or
mov
movl
adc
mov
sbbl
xor
add
jmp
mov
addl
xor
subl
lea
andl
push
movl
mov
addl
xor
andl
lea
xorl
push
adcl
mov
addl
pushl
call
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
xor
add
dec
mov
jmp
lea
neg
mov
adcl
mov
xorl
xor
andl
xor
add
mov
andl
xor
movl
lea
movl
cmp
movl
jbe
mov
mov
sub
mov
sub
mov
mov
or
mov
addl
sub
addl
xor
movl
mov
not
mov
movl
cmp
jne
xorl
lea
mov
sbbl
lea
mov
orl
mov
test
je
addl
push
call
addl
test
movl
je
push
push
movl
push
jmp
orl
lea
addl
push
xorl
push
orl
call
orl
test
je
movl
push
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
mov
not
mov
sbbl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
mov
dec
mov
jmp
mov
xor
or
mov
sbb
mov
mov
mov
notl
mov
add
cltd
mov
dec
add
mov
adc
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
push
xor
add
push
push
pushl
pushl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
push
mov
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
test
je
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
movl
movl
movl
movl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
push
add
push
lea
push
call
push
call
test
je
push
push
push
call
jmp
lea
push
push
call
test
je
push
call
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
and
mov
mov
mov
sub
xor
movl
xor
xor
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
call
jmp
push
dec
mov
xor
xor
orl
mov
push
decl
mov
adcl
add
cmp
movl
je
mov
adcl
mov
addl
xor
orl
xor
orl
add
xorl
add
movl
adc
sbbl
xor
xorl
mov
mov
xor
push
subl
xor
sub
xor
add
mov
sbbl
add
movl
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
jmp
mov
movsbl
mov
or
sub
mov
decl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sbb
push
add
mov
or
mov
movl
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
or
adc
mov
mov
mov
not
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xorl
xor
movl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
add
push
aas
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
add
add
inc
push
jnp
ja
fisttpll
insl
ret
stos
aas
add
add
inc
cmp
insb
gs
and
popa
and
pop
inc
data16
jb
popa
jb
jns
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
aas
or
add
inc
mov
pop
mov
or
pop
adc
pop
or
pop
or
addl
lret
repz
dec
lret
ret
xchg
stc
sbb
cmp
cwtl
movsl
orb
repz
dec
xchg
xchg
sub
ret
lcall
push
cltd
mov
lret
ret
imul
sbb
push
lea
sbb
pop
lret
add
push
pop
aad
lret
ret
fnstenv
dec
aad
addl
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
