push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
mov
jo
in
jo
rcl
aad
ror
rol
pop
push
add
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
dec
clc
cmp
mov
xlat
mov
jp
inc
mov
mov
inc
call
rol
mov
mov
adc
imul
adc
insl
test
insb
test
xchg
jnp
cwtl
sahf
add
repz
shrl
fucompp
inc
adc
push
repnz
jp
jb
scas
nop
iret
push
popf
jp
mov
xchg
das
in
mov
push
fstpl
adc
jo
cmp
icebp
aam
dec
pop
mov
fstl
movl
xchg
mov
xchg
mov
lock
or
cwtl
and
dec
outsl
movups
add
popa
mov
adc
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
inc
sbb
scas
push
sub
test
and
fiadds
push
shrb
dec
xchg
outsb
lds
adc
push
push
mov
fsubrl
or
arpl
mov
aaa
lret
dec
js
in
sti
loop
push
jle
sub
cmpb
ret
xor
ds
mov
imul
dec
ss
cmp
pop
add
stc
arpl
aaa
xchg
pop
ds
adc
pavgb
sub
pop
stc
dec
push
push
xchg
roll
add
scas
negb
movsb
inc
inc
dec
fs
mov
pop
lock
xchg
test
out
ret
sub
and
or
out
adc
push
dec
clc
fwait
mov
divb
ss
scas
test
mov
inc
shl
lock
daa
xchg
pop
adc
scas
add
stos
add
aad
push
mov
loope
inc
xor
add
xor
aas
inc
adc
sbb
repnz
inc
movsb
push
or
imul
xchg
xchg
dec
cmp
int
scas
add
pop
out
insl
pop
or
adc
mov
es
sub
push
bound
bound
lcall
mov
mov
pop
inc
xchg
xchg
sbb
and
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
mov
jo
in
jo
push
lcall
lock
and
testl
adc
lock
repz
mov
popa
out
push
dec
mov
sti
leave
rcrl
scas
mov
aam
shrl
push
out
xchg
hlt
push
xor
mov
das
jnp
or
xor
push
mov
xor
bound
ja
repnz
push
cmc
lret
push
aas
cmp
pushf
lret
popa
imul
lahf
in
enter
clc
mov
sbb
add
imul
jae
mov
insl
movsl
xor
mov
cli
cli
or
or
icebp
push
or
int
or
popf
push
add
scas
inc
cmc
fstps
xlat
jmp
flds
ror
fwait
test
mov
cmp
sbb
adc
out
or
sub
rclb
jo
test
xor
call
fnstsw
sbb
addr16
mov
cmp
mov
and
or
arpl
icebp
push
out
mov
mov
ret
lret
xor
outsl
xchg
hlt
pop
ret
mov
daa
cmp
insl
sbb
xor
inc
fs
fs
adc
mov
leave
push
test
push
fucomp
sbb
mov
lret
mov
rorl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
mov
jl
jo
jg
jo
aad
shr
mov
xlat
popf
jg
and
mov
aad
out
scas
bound
xor
daa
mov
lea
ja
sahf
sub
add
mov
shl
hlt
out
test
imul
scas
not
orl
aas
sbb
inc
jmp
sub
mov
xorl
fwait
lea
mov
mov
out
push
aas
cmp
xchg
lods
inc
pop
pop
jecxz
xchg
arpl
or
xchg
enter
push
pop
dec
insb
pushf
es
fmuls
ljmp
lahf
add
and
out
insl
add
jns
mov
cmpsb
negl
enter
mov
int3
mov
pop
cs
xchg
lret
mov
xchg
add
cwtl
push
mov
aam
push
ds
mov
jge
js
mov
cmp
cmp
adc
fcompl
outsb
jl
imul
popa
insl
xchg
xchg
lods
in
dec
lods
outsl
sub
jns
addr16
pop
gs
call
mov
xchg
mov
fcmove
add
jnp
jge
cmp
pop
inc
addb
sub
adcl
pop
cmp
add
xlat
mov
xorb
lcall
cli
ret
mov
push
mov
in
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
aas
clc
adc
xchg
jge
jo
into
and
fcom
out
cmp
or
mov
xchg
mov
into
in
pusha
xchg
mov
inc
push
xchg
negb
fwait
add
add
mov
inc
cmp
cli
int3
cwtl
mov
inc
dec
mov
dec
ljmp
test
ficomps
cmp
into
mov
aad
inc
aad
ret
hlt
ret
lret
jbe
and
int3
push
fmulp
lret
push
mov
aam
dec
push
cltd
xor
aaa
nop
stos
inc
repnz
adc
mov
push
xchg
mov
xorb
loopne
cmp
add
xchg
aaa
icebp
scas
mov
aad
das
aad
aas
scas
mov
mov
sub
adc
mov
leave
ret
inc
pop
hlt
aas
ja
adc
cmp
inc
hlt
adc
movsl
dec
sbb
iret
aas
mov
dec
push
pop
push
xor
xchg
lds
scas
fucomip
in
das
orl
pushl
in
ret
lods
pop
cmp
sbb
sbb
sahf
jecxz
sbb
shrb
call
mov
mov
enter
jnp
push
xor
ret
pmulhuw
mov
push
shr
inc
dec
fs
je
mov
jecxz
or
jg
loop
aam
xor
lock
dec
lock
shl
push
add
enter
pop
mov
push
add
out
cmp
sbb
lods
test
push
pop
addb
adc
push
pop
scas
lods
push
test
int
adc
out
gs
mov
push
shrb
outsl
ss
xchg
idivl
out
rolb
out
sar
pop
mov
and
das
lea
jo
in
add
stc
pop
push
xchg
and
and
outsl
jp
xchg
cmpsb
jbe
sub
push
push
in
daa
pop
push
insl
stos
pop
pop
clc
sbb
movsb
adc
test
scas
jecxz
arpl
cmp
or
movl
lods
push
test
addb
sbbb
sarl
mov
dec
loopne
fnsave
xor
movsl
fnstcw
jo
dec
sbb
mov
push
pop
gs
mov
inc
lret
test
lret
cmc
and
aas
or
ret
andb
xor
and
and
or
cld
mov
testb
test
iret
lcall
xor
sarb
je
and
xchg
ds
cmpsl
pop
or
nop
sub
push
dec
in
push
icebp
subb
adc
pusha
les
jno
sbb
mov
notb
movsb
jl
pop
pop
ljmp
movsl
cli
repnz
lods
add
push
insl
clc
push
into
mov
ss
je
gs
push
aad
mov
add
test
das
imul
int3
loope
leave
adc
dec
hlt
pop
stos
fadds
jb
adc
xchg
bound
ds
in
hlt
data16
cli
xor
mov
out
imul
aaa
mov
sbb
xor
sub
mov
or
cmpsb
test
mov
adc
arpl
cld
mov
lret
sbb
outsb
decl
push
loopne
out
mov
loope
mov
cmpsb
sub
adc
fdivr
inc
and
repnz
adc
jmp
rorl
out
inc
add
sub
mov
sbbl
jmp
add
arpl
dec
pop
mov
xchg
jge
jo
and
push
aaa
in
push
orl
xlat
in
and
dec
rcr
cmp
inc
or
out
sub
xchg
stc
lret
stos
mulb
sub
stos
and
in
das
pop
and
or
movsb
dec
fbstp
cmp
lret
fistpl
mull
mov
mov
std
int
cwtl
pop
mov
adc
inc
cld
adc
iret
adc
pop
lock
scas
or
xchg
int
out
jmp
sub
fs
jecxz
mov
movsb
icebp
or
mov
rorb
ss
add
lahf
clc
icebp
bound
mov
xchg
pushf
les
test
fcompl
pushf
sbb
push
and
pop
push
enter
dec
sbb
loope
lahf
jge
add
adc
mov
dec
fsubrs
insb
and
xor
push
out
mov
ficompl
push
cltd
and
aad
loop
out
dec
push
sbb
fistl
in
sub
test
pop
insl
sub
ret
or
rcl
and
aas
nop
mov
movsb
inc
add
movsl
fistps
push
imul
dec
out
inc
xchg
sub
dec
pop
faddl
rorb
sti
and
cmp
je
in
push
cmp
mov
dec
std
enter
test
aas
incl
sbb
or
repnz
adc
sbb
out
push
ficoms
inc
sbb
pop
jp
pusha
xchg
jg
mov
outsl
add
xchg
dec
mov
inc
mov
js
mov
loopne
mov
lret
pop
roll
add
dec
xchg
xlat
cmpsl
out
mov
xor
add
js
cmc
cs
inc
sub
les
sub
dec
sub
cmp
and
add
movsl
bound
xor
and
mov
mov
xchg
scas
cmpsl
add
dec
sbb
pushf
sbb
pushw
pop
out
mov
into
jle
dec
idivl
imull
dec
and
mov
fwait
in
mov
dec
add
cwtl
dec
out
popf
fdivrs
fbld
insb
rcrl
movsl
push
lret
fstps
stc
sbb
in
stc
cld
test
add
fwait
test
xor
jle
add
test
push
hlt
pop
jnp
mov
xlat
mov
mov
mov
gs
pop
lea
mov
lret
push
mov
mov
dec
sub
imul
test
mov
int
mov
out
dec
jne
setne
rorl
mov
push
lea
lods
movb
data16
inc
stc
std
jmp
daa
push
insb
jb
cmovo
adc
fs
psllq
fimull
adc
adc
mov
mov
mov
jo
mov
mov
in
jle
test
pop
subl
rolb
stc
mov
adc
aas
adc
js
and
mov
scas
in
lock
testb
enter
jp
adc
call
fmul
es
xchg
in
xor
cmp
test
inc
add
daa
inc
add
mov
add
in
lock
mov
push
scas
int3
cmpsl
ret
xchg
jo
xchg
jge
jo
addb
pop
mov
iret
aas
xchg
xchg
mov
fdiv
inc
jne
dec
mov
aaa
shr
test
and
mov
push
sbb
ret
lea
jne
jo
addr16
lea
sub
inc
sbbb
xchg
cmpsb
add
sub
mov
cmp
test
adc
pop
insb
jno
mov
aam
daa
es
outsl
fcomps
push
sbb
mov
xor
ror
adc
pop
sbb
lods
jg
add
mov
or
in
addr16
pop
xor
inc
mov
xchg
xor
mov
pop
push
fisubrl
idivl
cmp
xchg
jbe
inc
pop
in
inc
mov
shll
ja
ret
xor
inc
ss
sub
cs
and
ffree
jg
xchg
cmp
sub
and
lea
add
push
jns
and
icebp
mov
stos
push
jns
jmp
sbb
mov
jno
insl
xchg
mov
mov
das
jae
into
or
std
test
sbb
call
roll
popaw
jl
mov
cld
lcall
fiaddl
decl
fs
lahf
addr16
jae
lods
adc
out
mov
mov
mov
scas
sbb
mov
dec
int
push
fsub
mov
test
lods
neg
lret
ret
enter
repz
lret
mov
mov
es
mov
or
push
inc
aad
aaa
bound
mov
or
int3
imul
and
add
sbb
jecxz
rcl
test
inc
xor
push
add
mov
push
xchg
jge
lea
imul
jmp
add
cs
insl
subl
mov
jg
enter
stc
fwait
repz
sti
aam
test
sbbl
ja
pop
rolb
popf
ja
cmp
iret
xchg
sub
lret
xchg
mov
aam
fldcw
cmpb
pop
pop
pushw
ss
cmp
mov
out
xor
sbb
xlat
pop
fcoms
stc
cli
mov
rolb
in
sub
notl
fcmovbe
add
mov
cltd
inc
mov
mov
pop
sbb
fisttps
pop
or
add
jae
rorl
sbb
pop
orl
iret
cli
inc
mov
add
lock
push
pop
dec
pop
jle
push
arpl
mov
stos
dec
shl
hlt
mov
and
inc
sbb
insb
insl
adc
sub
cmp
sub
clc
fcoml
imul
cmp
push
or
mov
jo
addr16
movsb
add
mov
dec
fists
in
add
and
sub
icebp
inc
incl
mov
mov
jne
push
push
out
icebp
push
pop
es
sbb
pop
push
test
out
mov
mov
mov
pop
mov
pop
ja
xchg
cmp
push
inc
xorb
scas
inc
pop
je
mov
and
push
shlb
sub
adc
cld
or
jg
aas
loopne
jecxz
jg
dec
pop
dec
cmpsl
pop
cmp
sbb
jmp
cltd
insb
mov
mov
push
adc
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
ficoms
push
add
xchg
jge
jo
aaa
push
xor
dec
stc
cwtl
js
jae
frstor
pop
mov
enter
and
movsb
inc
cmpsb
push
pop
ret
jmp
jp
sub
js
fs
push
xor
ljmp
aaa
std
dec
mov
xor
sti
dec
movsl
es
rolb
inc
sbb
lret
and
dec
push
frstor
xchg
into
mov
insb
add
stos
jns
jb
jns
and
sub
outsb
test
sti
std
fs
ja
or
pop
sbbl
add
out
jmp
jbe
pop
outsb
cmp
lahf
testb
adc
loopne
in
outsb
sbb
cmp
repz
mov
das
cmpsl
mov
inc
jg
rcrl
pop
xchg
push
repz
pop
fildl
in
inc
fsubr
cltd
cli
js
mov
add
and
or
jns
mov
mov
pop
mov
xchg
inc
xor
inc
stos
cmp
add
fimull
sbb
and
cmp
jne
dec
lds
xlat
movsl
or
lret
aad
mov
scas
repnz
pop
andl
pop
xor
cmpl
scas
dec
inc
jne
repnz
sub
add
outsl
shll
push
das
and
stos
mov
xchg
adc
sahf
je
or
inc
sbb
mov
sbb
lds
cmp
aas
lret
push
xor
neg
in
shl
jno
mov
in
ljmp
rcll
sbb
out
fwait
into
pop
mov
dec
xchg
sbb
pop
pop
xor
mov
or
xchg
sub
cmp
xorl
cld
cmp
out
loope
cmpsb
hlt
mov
jmp
es
push
xchg
in
pusha
gs
ja
sti
les
imull
lcall
mov
sahf
sub
cmp
sbb
or
jecxz
mov
jo
ljmp
mov
bound
add
push
sti
out
lret
aas
decl
in
repz
popa
movsl
fsts
insb
subb
sbbb
inc
enter
js
or
cmp
inc
dec
iret
lock
jmp
out
mov
lds
xchg
inc
xchg
jp
inc
cmpb
mov
cmpsb
jle
dec
in
xor
and
sahf
sub
jb
stc
push
movsb
push
add
jge
inc
in
add
data16
xchg
sub
pop
sub
call
or
fstps
cli
ret
cmp
sbb
fisttpl
imul
es
pop
int
addr16
mov
or
sbb
push
add
orb
pop
lods
add
into
sbb
std
add
mov
dec
pushf
mov
addr16
push
int
test
fistpl
dec
mov
scas
mov
movsb
mov
cld
jecxz,pt
lret
add
flds
std
pop
cmpb
ret
xor
cwtl
jge
add
es
lret
lea
and
xor
gs
xchg
mov
add
xor
imul
cltd
mov
jne
xor
pop
ja
mov
mov
pop
addr16
fstps
add
mov
mov
dec
mov
push
dec
scas
jno
mov
test
inc
jns
test
cli
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
push
str
jo
jge
jo
pop
push
divb
ljmp
sub
sub
loopne
pop
cmp
inc
push
dec
cld
xor
dec
push
or
cmp
jl
inc
hlt
imul
rcr
mov
adc
rclb
test
mov
push
or
sbb
repnz
mov
add
pop
int3
and
popf
ret
pop
lahf
lods
xchg
mov
jecxz
sbbl
mov
and
in
jmp
in
out
imul
xchg
or
inc
in
int
xchg
lahf
add
add
lods
push
icebp
inc
fsts
add
dec
sahf
fndisi(8087
push
bound
fldenv
and
fstl
outsb
fabs
pop
xor
jns
sarb
repnz
jae
xor
popa
aaa
xchg
jg
cmc
xor
loop
mov
mov
xor
out
call
test
orb
dec
imul
mov
xor
xchg
pop
sub
mov
orl
test
push
add
outsb
imul
mov
xchg
xchg
cli
mov
add
cwtl
arpl
adc
jns
stc
adc
push
jp
and
xchg
int
mov
rcll
mov
push
imul
fildll
xchg
mov
pop
lock
xchg
pusha
and
cwtl
aad
cmp
mov
push
jnp
das
dec
pusha
repnz
push
je
and
pop
imul
inc
dec
add
jmp
mov
push
dec
arpl
add
and
es
stos
mov
sbb
cmp
push
push
adc
adc
xchg
push
jo
out
call
in
lahf
sbb
loop
jno
jne
inc
mov
shll
insl
cmp
pmaxub
sbb
push
mov
clc
dec
mov
pop
push
pop
jecxz
adc
inc
imul
jl
sbb
sub
xor
pop
xchg
ret
loopne
rcrl
out
cs
mov
repz
enter
ja
xchg
iret
out
addl
mov
lods
xor
xchg
mov
outsb
xor
je
pushf
push
adc
repz
push
lcall
cmpsb
xchg
inc
sbb
sbb
or
jecxz
pop
push
lret
push
sub
sbb
xor
scas
xchg
ja
dec
int3
pop
add
call
jmp
into
xor
pop
xchg
nop
and
loop
loope
scas
insl
dec
jb
mov
mov
in
cwtl
push
jne
fs
adc
ljmp
idivl
les
cltd
cmpsl
repz
mov
daa
pop
movsl
negb
dec
lods
pop
stos
iret
cmp
add
pop
repz
cmp
sub
lret
pop
inc
mov
jg
mov
jecxz
int3
popa
cmp
fucomip
mov
inc
pop
push
sub
cmp
mov
dec
mov
push
psubb
jmp
dec
push
rol
daa
fstpt
add
mov
fisttps
adc
mov
std
dec
and
or
xchg
mov
sahf
inc
xor
pop
popf
add
insb
mov
fwait
or
js
repz
shlb
popa
sbb
out
iret
xor
jmp
cs
loopne
in
jnp
jmp
lods
ja
dec
cmpsl
or
xchg
jge
jo
sub
adc
push
lea
loop,pn
pop
cld
and
jp
aaa
call
ret
inc
pop
icebp
sbbb
xor
jmp
clc
hlt
xor
jg
das
mov
adc
dec
pop
iret
sbb
pop
scas
pop
pop
shrl
sbb
and
xor
outsb
add
jnp
dec
sahf
sub
mov
cld
jmp
jae
cmp
add
xchg
add
popf
loope
test
dec
scas
pop
in
into
dec
push
inc
pop
cli
mov
sbb
fidivs
arpl
fs
jg
into
push
dec
push
in
int3
cmp
nop
jne
icebp
add
xor
in
sbb
push
arpl
or
leave
cwtl
cmpsl
imul
jnp
mov
xchg
inc
push
pop
dec
ss
push
pop
faddl
daa
lcall
cmp
aaa
das
xchg
xchg
inc
sub
pushf
sub
mov
fldcw
lods
inc
inc
enter
inc
lret
lahf
sub
movups
jbe
popa
in
sbb
out
dec
ret
je
insl
stos
out
cld
bound
dec
gs
jge
lock
sub
icebp
pushl
shl
repnz
sub
push
int3
scas
and
loopne
jne
repz
dec
inc
in
adc
mov
ds
loop
pop
mov
imul
adc
inc
fwait
in
fsts
xchg
push
dec
stos
push
fcomps
add
xor
ja
and
sub
enter
dec
dec
dec
cmp
cmp
loope
push
insl
leave
sub
jge
cmpsl
out
push
inc
popf
sbb
int3
jb
adc
push
aad
sti
lods
xchg
jl
inc
push
dec
jecxz
sub
adc
repnz
outsl
lahf
sbb
push
jne
fdivs
push
lods
sub
orb
and
lods
int
lret
movsb
xor
stos
int3
or
cmp
adcl
cs
outsb
pusha
add
and
cwtl
pop
shlb
mov
push
movsb
call
fs
cmp
imul
subl
jle
shlb
decl
int
or
mov
jnp
mov
dec
jo
cmp
outsb
es
test
xchg
and
add
cmp
les
sarl
gs
pop
sbb
push
mov
in
dec
lahf
fnstsw
xor
lods
push
imul
cmp
out
lock
pop
jge,pt
test
lds
jl
insb
mov
push
and
xchg
inc
loope
nop
jbe
mov
les
push
jo
out
push
daa
lea
test
lds
push
pop
addb
xchg
lret
lea
inc
enter
fsubp
dec
aaa
hlt
xor
mov
xlat
mov
pop
popa
scas
pop
nop
mov
sub
mov
dec
popf
in
fldcw
aad
ljmp
leave
std
push
inc
aaa
notl
xchg
jnp
dec
mov
fst
adc
pop
ret
xchg
sbbb
lret
pop
add
jecxz
outsb
fisttpl
or
sub
fs
loop,pt
cmp
gs
xchg
mov
shll
xlat
cmp
jl
or
mov
mov
xorb
jge
cld
pop
popf
int
scas
std
lcallw
xchg
xchg
xor
jmp
data16
in
int3
jne
popa
jno
imul
mov
xchg
jge
jo
xor
xchg
push
mov
call
mov
mov
pushf
sub
push
push
jno
test
and
lret
add
dec
bound
nop
hlt
jle
into
aad
fmull
std
push
inc
loopne
loop
mov
jae
push
out
cs
imul
sub
inc
jb
pop
inc
into
xchg
or
fsubrl
leave
shll
cmpsb
fldt
arpl
push
xor
std
adc
jmp
push
inc
sub
jbe
adc
cltd
cmp
outsl
faddl
int3
lods
push
adc
dec
jbe
leave
adc
std
xchg
sbb
lea
push
and
mov
out
test
aas
or
dec
loop
jo
adc
or
or
leave
scas
scas
dec
and
mov
imul
adc
mov
sbbb
sbb
pop
shl
dec
cmpsb
mov
cmp
adc
and
add
jb
push
imul
aas
cmp
mov
arpl
fimuls
mov
jb
sub
lock
ss
or
rsm
pop
sti
inc
popf
inc
xlat
rorl
dec
push
lahf
adc
loopne
xchg
push
mov
daa
jmp
cs
pushf
cmp
add
dec
dec
sarb
mov
sub
leave
aas
int3
popa
or
and
stc
sbb
imul
adc
bnd
mov
sbb
and
mov
xlat
pop
popf
cmc
pop
push
movb
js
mov
cwtl
mov
icebp
mov
and
mov
inc
xor
aaa
out
repnz
xchg
in
jl
mov
or
mov
and
jmp
in
adc
jmp
and
mov
mov
or
sub
jnp
xchg
xchg
adc
sbb
cmp
push
add
inc
das
or
dec
sub
push
int
movsl
cltd
dec
jns
push
incl
mov
rcl
dec
call
adcl
jne
daa
outsb
xchg
test
ss
andl
adc
lret
ds
xchg
cmp
aaa
inc
push
fdivrl
sub
adc
fcoms
js
mov
and
cmp
or
cmpsb
mov
jmp
divl
out
cmp
lock
jp
xor
push
ja
mov
add
mov
adc
pmulhuw
imul
dec
xchg
arpl
or
rorl
xchg
push
xlat
jecxz
push
insl
iret
daa
fldcw
cmp
fiadds
sbb
les
sahf
sbb
testb
sbb
scas
outsb
and
xor
arpl
das
xabort
in
insb
pop
aad
lahf
sbb
cli
cld
and
push
out
jns
sbbb
cmpl
rcrl
xchg
lds
pop
xchg
pop
scas
test
lods
dec
aam
xchg
push
jl
pop
add
xchg
es
jns
push
nop
inc
in
pop
test
lahf
and
xchg
mov
or
lds
xor
iret
pop
xchg
sub
xor
inc
or
cmpb
lret
mov
or
inc
xchg
dec
or
aad
mov
enter
int3
cmpsl
es
ss
loopne
jo
test
xor
jne
lods
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
mov
jo
xchg
jge
jo
pop
ss
out
add
mov
out
jae
lods
nopl
xor
jb
movsb
test
and
fisubs
arpl
lods
movsb
inc
int
ja,pn
cmpsl
test
mov
int
loope
xor
lret
xor
push
and
nop
sub
dec
lea
and
xor
mov
jp,pn
jnp
sbb
sahf
or
lahf
fldenv
insl
cmpsb
or
lock
jmp
imul
mov
jle
lods
add
rorb
sbb
fnstsw
repnz
ja
js
add
push
inc
pop
sbb
hlt
leave
jnp
inc
cwtl
or
mov
mov
sub
in
repnz
mov
lcall
lds
and
dec
xorl
call
pop
sub
leave
and
add
addl
repz
mov
push
xor
push
mov
call
insl
lret
or
sbb
pop
xchg
sbb
jnp
fisubrl
jmp
inc
aad
mov
lods
ret
xor
xor
mov
cli
outsl
cmp
out
xchg
fcomp
fdiv
addr16
loope
sbbl
push
in
cmp
xchg
inc
jne
sbb
dec
add
lods
ret
or
mov
in
lock
out
jl
and
subl
mov
repnz
mov
push
out
scas
addb
dec
inc
push
negl
fsubl
sbb
test
mov
cmp
xchg
or
push
mov
pop
movsb
fwait
test
jecxz
adc
negb
test
cmovle
push
lret
lea
int3
imul
shrb
sbb
mov
stos
jl
sahf
out
sti
add
mov
out
fnstenv
and
add
mov
insl
lahf
and
pushl
in
and
cs
data16
xor
cmpsl
movsl
add
pushf
test
pop
sbb
inc
mov
stos
jae
outsb
loop
cmp
fwait
dec
addl
das
call
stos
and
push
sub
cmp
mov
adc
cmp
not
lock
mov
js
and
and
outsb
jge
and
sbb
jae
incl
aaa
jnp
mov
jp
pop
lcall
inc
pop
jne
hlt
fcmovnb
cli
ss
push
jne
dec
and
or
sti
mov
or
pop
addl
pop
inc
pop
cmpsb
jae
mov
out
push
inc
fs
sub
idivb
dec
dec
xor
push
jno
stc
mov
cmp
jle
and
repnz
data16
push
cmp
out
push
cltd
pop
cltd
push
std
out
enter
decl
sti
xchg
jp
outsb
add
xor
jns
nop
pop
subl
jno
scas
lods
fdivrl
jnp
sub
outsb
aam
lods
adc
shl
mov
xor
xor
repnz
adc
insb
xorb
insb
cmp
jmp
scas
and
nop
xor
fldenv
inc
lods
cli
sbb
movsb
out
mov
push
mov
push
jmp
push
sub
insb
and
cmc
cs
hlt
cmp
leave
cmp
jnp
jl
xchg
sub
ja
cmp
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
pop
mov
in
push
jo
sbb
jo
jecxz
cmp
sbb
out
pop
jns
jecxz
in
xor
mov
test
adc
mov
adc
and
pop
xchg
xchg
mov
cli
in
ljmp
lcall
movhps
ret
mov
mov
mov
popf
aad
in
xor
cmp
test
pop
mov
fnsave
addb
roll
and
xchg
enter
mov
sub
xor
xchg
movsl
xchg
shll
xor
fidivl
clc
fs
mov
cmp
repz
scas
faddp
mov
xor
das
mov
mov
dec
cli
das
or
or
cs
lods
movsl
out
jne
sub
out
push
mov
out
aaa
jg
ret
xor
cwtl
sub
cld
xchg
enter
sub
mov
mov
aas
addr16
scas
sub
mov
push
icebp
sbbb
mov
jle
das
out
push
jae
les
out
rcr
dec
insl
push
leave
dec
sub
das
std
pop
push
les
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
sub
sbb
jo
and
pop
sahf
incl
push
les
dec
pushf
outsl
jns
pop
es
adc
scas
mov
repnz
push
mov
insl
aad
dec
in
xchg
inc
lds
pop
out
push
stc
int
lret
and
stos
cmp
or
or
cwtl
inc
ret
popa
cmp
pop
test
push
cmpb
xchg
cld
add
dec
imulb
addl
out
cmp
cmpsl
add
xchg
mov
iret
fwait
iret
lods
add
cmp
cmp
data16
pop
fiaddl
test
pop
enter
cmp
aam
lea
adc
inc
fildll
out
call
dec
je
or
js
cmp
xor
pop
stos
jae
push
xor
jl
insb
nop
loopne
dec
xchg
push
jmp
dec
fstpt
mov
mov
cmc
xchg
in
adc
dec
popa
outsl
fwait
lds
outsl
push
adc
int3
cmc
adc
insl
sbbl
leave
xor
xchg
out
mov
shr
hlt
jge
lahf
adc
push
cmpsl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
ret
addr16
mov
jg
jo
shrl
pop
mov
movsl
lea
sbb
insl
movsb
test
adc
ljmp
add
lds
xor
cmp
mov
hlt
cld
pop
xchg
stos
add
test
out
shlb
addr16
cmpsl
dec
jbe
push
sbbb
cmpsb
push
cmp
or
and
or
cmp
hlt
mov
push
test
ret
lret
jg
das
push
jge
jmp
jnp
xchg
nop
pop
cli
int
cmp
int3
popf
push
inc
xlat
cmp
rol
lock
test
mov
in
mov
jmp
fdiv
fsubs
push
adc
pop
mov
xchg
lcall
leave
sbb
loopne
jnp
xor
push
jmp
add
mov
cmp
add
inc
mov
sbb
push
imul
ret
push
lea
adc
out
pop
stos
movsl
mov
dec
mov
adc
xchg
dec
pop
sarl
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
mov
sbb
sbb
jo
sub
sbb
push
call
cmpsb
jg
sbb
sbb
loope
pop
lds
dec
and
add
test
lahf
arpl
adc
and
lods
jbe
test
mov
jecxz
pushf
mov
xor
ror
or
jne
sbb
shld
and
sub
jg
aaa
cmp
shll
and
enter
mov
out
frstor
mov
sbb
jb
iret
mov
dec
mov
jge
test
jecxz
sub
adc
outsl
or
mov
or
sub
add
add
inc
and
test
inc
inc
fildll
lods
xor
arpl
and
icebp
loope
out
mov
mov
shl
cli
push
out
push
aas
out
cmp
outsl
sub
xchg
cwtl
adc
jo
xchg
loopne
pop
fistl
mov
mov
in
das
and
pop
fsubl
in
scas
inc
and
jb
movsl
lea
mov
inc
cli
jecxz
push
xchg
push
pushf
pop
xchg
adc
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
mov
and
loop
and
mov
outsl
mov
into
and
sub
push
icebp
mov
mov
jbe
popa
adc
inc
xor
mov
push
jg
mov
pop
push
es
push
scas
lods
out
icebp
pop
fsts
xchg
lea
incl
mov
sub
leave
sbb
and
and
xor
mov
mov
int3
adc
push
mov
in
push
sti
xor
pop
dec
push
daa
mov
sub
fisttpl
mov
mov
lret
dec
push
addr16
mov
jnp
stos
xchg
das
icebp
xchg
stos
xchg
repnz
imul
or
sub
sbb
std
xor
inc
fnstsw
push
out
aam
bound
mov
xchg
ret
sbbl
push
fadds
sti
push
and
sbb
imul
stos
and
rcl
mov
xor
xchg
andl
ret
scas
in
jns
sti
rolb
imul
jno
inc
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
adc
sbb
sbb
jo
lcall
mov
push
mov
inc
in
inc
ljmp
sbbl
sbb
mov
ret
nop
pop
sar
notl
sti
jl
insl
daa
nop
stos
and
jae
daa
sub
cli
cmp
subb
into
mov
stos
inc
daa
out
aam
das
push
or
dec
ret
fmulp
push
int3
jae
mov
loope
xchg
hlt
dec
insl
mov
push
outsl
pusha
xchg
loop
pop
cmp
nop
xchg
data16
cwtl
adc
daa
mov
lret
sub
jbe
mov
jae
cwtl
sub
dec
outsl
inc
add
pop
dec
and
mov
cmpb
iret
add
dec
dec
aas
mov
cmc
aas
sub
out
sub
shlb
add
jo
and
jge
sbb
in
mov
fs
cmc
jl
and
pop
push
ljmp
shlb
pop
outsl
js
sbb
inc
push
cltd
das
mov
icebp
mov
and
jl
sbbl
test
outsb
mov
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
rcl
sbb
jo
sbb
jo
push
data16
in
mov
fdivrl
fdivrs
cmp
push
sub
mov
pop
icebp
mov
lahf
adc
inc
adc
test
mov
add
and
dec
ss
xchg
cltd
in
lret
aaa
cmp
push
push
sbb
push
call
adc
mov
jb
jecxz
bound
pop
or
gs
cmp
jge
cli
mov
inc
mov
loop
pop
sub
sub
pop
dec
test
bound
rolb
lods
out
pop
cs
mov
xchg
test
pop
jg
jge
adc
add
dec
in
in
mov
clc
data16
push
adc
pop
jae
pop
sti
cmp
mov
ret
sbb
sbb
cld
unpckhps
fsubrl
into
push
jge
sbb
push
cmp
shl
xor
add
out
sub
scas
sbb
bnd
inc
push
pop
or
inc
add
in
add
je
lahf
mov
xchg
inc
mov
leave
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
pop
out
pop
test
jo
sbb
jo
inc
inc
iret
addr16
xor
cmp
nop
imul
ds
daa
inc
fidivs
mov
out
inc
stos
and
inc
mov
fidivrl
or
or
inc
adc
or
sbb
dec
mov
xchg
cmp
mov
test
addl
pop
and
in
mov
pusha
das
add
lods
push
xor
lods
adcb
sub
in
or
ljmp
mov
or
xchg
push
dec
jecxz,pt
dec
jp
loopne
add
cmc
jo
pop
mov
or
rcll
aas
lods
and
test
imul
imul
inc
ret
mov
pop
testb
sarb
int3
fwait
or
add
cmp
jg
ljmp
ret
dec
std
mov
arpl
adc
push
sti
jns
call
hlt
and
repz
fcoml
in
orb
dec
inc
cmp
inc
cmp
les
adc
roll
cmp
jmp
mov
gs
nop
sbb
xor
jo
jg
jo
dec
cld
jle
cmp
mov
nop
jmp
js
mov
pop
fistl
pop
push
jmp
inc
rclb
sub
push
sub
xorl
loopne
fwait
cmp
mov
fwait
mov
xlat
mov
test
cmpsb
insb
sub
mov
test
pop
add
imul
aad
fdivs
cltd
pop
adc
arpl
sarb
push
outsb
adc
shlb
xor
loopne
jno
xor
arpl
adc
pop
fisubl
add
lods
push
in
loopne
outsb
nop
sbb
inc
add
mov
mov
aam
scas
mov
sub
jl
mov
jecxz
xlat
and
xor
movsb
rcrb
add
lds
imul
xchg
xchg
mov
shr
dec
sub
cli
push
icebp
add
ljmp
nop
clc
xchg
mov
pop
push
movsb
movsb
sub
outsb
push
nop
popw
xchg
inc
lods
ljmp
push
lock
mov
adc
xchg
in
iret
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
scas
icebp
push
sahf
push
and
jo
jg
jo
push
idiv
mov
jo
xor
or
jp
add
dec
and
rcrl
cs
sbb
cli
push
scas
pop
iret
lods
lock
adc
mov
inc
mov
dec
cmp
xchg
dec
sbb
call
xor
outsl
xchg
xor
dec
divb
lret
xlat
xchg
lret
mov
push
arpl
sub
jo
jecxz
ror
xchg
gs
sbb
and
add
cmp
push
mov
les
and
rcll
mov
cli
icebp
or
in
xchg
mov
xor
lods
mov
lods
cmp
dec
sbb
in
loopne
inc
leave
sbbl
rcpps
hlt
bound
test
push
dec
popa
dec
bsr
sbb
sbb
andb
xlat
lret
adc
push
mov
loope
xor
out
inc
sbb
loop
xor
jle
mov
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
cmpsl
sbb
bound
test
cmp
jl
aas
outsb
clc
sub
xchg
lds
loop
cmp
inc
pop
inc
pop
and
dec
adc
push
aam
sub
pop
xchg
mov
cld
insl
mov
les
mov
fwait
sub
pop
out
and
inc
jmp
jnp
push
jae
xchg
push
lods
mov
repz
cmp
hlt
add
sti
pop
ss
es
insl
imul
and
pop
pop
shl
xor
xor
cmpsl
shll
fiaddl
mov
mov
insb
test
pop
jo
lret
pop
mov
mov
and
out
leave
lcall
mov
xchg
jg
in
js
lock
testl
enter
jo
out
add
inc
rorl
push
js
push
enter
pop
inc
out
xchg
mov
adc
inc
adc
add
mov
pop
lea
cld
pusha
inc
mov
lods
mov
test
incl
jmp
jmp
cmp
xor
sarl
cld
lds
jo
sbb
jo
push
imul
or
lds
daa
and
out
pop
aaa
mov
shrb
mov
fs
xor
xchg
xor
sub
int
push
lods
pop
pushf
and
lret
adc
push
inc
jp
iret
cmpsl
mov
iret
lret
or
imul
cld
ret
adc
sbb
cmp
arpl
cmp
inc
xor
add
or
cmp
mov
fs
push
adc
in
iret
jle
xchg
in
insl
in
xchg
add
jb
pop
out
out
hlt
push
add
ds
or
add
fdivl
inc
into
imul
mov
push
ja
daa
fisttps
lret
xor
outsl
out
jbe
and
sub
aam
push
cmp
inc
inc
popa
mov
or
mov
push
pop
dec
lods
ja
add
imul
inc
int
sub
add
push
jg
fistpl
mov
inc
inc
sbb
lea
cmp
xchg
and
add
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
ss
jns
xchg
sub
add
push
test
xchg
cmp
inc
stc
xchg
xor
cmpsb
into
cmpsl
aas
data16
dec
fs
pop
jb
rorl
std
lea
cmc
and
and
push
push
pop
xor
xchg
ret
das
or
and
cmpsl
xchg
add
or
aaa
sbb
and
xor
inc
mov
jnp
fimull
mov
jle
inc
or
fdivs
nop
pop
ja
orb
lcall
cli
adc
shll
imul
bound
test
add
mov
mov
outsl
stos
mov
nop
pop
jle
sub
pop
sbbl
adc
mov
mov
mov
jae
mov
mov
jb
or
inc
xor
xor
ret
imul
add
jmp
xchg
sbb
addb
lret
mov
sub
pop
lcall
xor
add
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
xorb
hlt
das
jo
fnstcw
jo
loop
mov
aaa
jns
mov
add
mov
insb
js
add
push
and
aaa
add
clc
cmp
push
xchg
add
mov
push
shrl
mov
push
add
jnp
shll
popa
xchg
push
mov
cmpsb
jae
cli
xchg
pop
mov
jg
dec
fsubrl
xchg
push
inc
sbbl
pop
clc
iret
push
jae
lods
mov
xchg
aaa
sbb
mov
cmpsl
mov
fistpl
sub
sarb
out
in
rcll
fwait
mov
je
push
and
aaa
shll
jge
fadd
rorl
mov
std
jnp
dec
adc
lcall
pushf
ret
lock
arpl
incl
and
and
cmp
mov
sbb
adc
sub
jae,pn
inc
test
jbe
fs
icebp
cli
lcall
stos
cmp
je
scas
dec
movsb
fadds
addr16
es
sub
pusha
out
mov
sbb
sub
pop
ljmp
or
mov
pop
movsb
popa
push
pushf
cltd
jg
test
in
push
ss
inc
dec
adc
mov
cmp
test
or
ror
xchg
inc
fisubl
scas
cmp
cltd
int
into
hlt
cmp
lret
stos
lods
or
addb
dec
add
insb
fisubs
aas
lahf
ljmp
jecxz
cs
sub
or
push
add
mov
add
icebp
sub
jle
mov
clc
xchg
mov
dec
out
mov
out
imulb
jnp
pushw
push
jbe
xor
push
leave
jmp
xor
ss
push
cs
mov
popf
inc
lds
imul
push
jo
pop
scas
ret
sub
cmp
enter
xor
xor
jbe
ror
call
into
xor
stos
es
pop
xchg
cmp
aaa
xchg
jmp
jg
push
jg
jle
xchg
jb
aas
imul
xchg
pop
and
mov
into
clc
icebp
fwait
and
divb
push
add
pop
or
dec
leave
pop
fwait
in
lock
and
sub
cmp
ret
sbb
call
icebp
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
and
test
fnstcw
jo
mov
mull
cmc
addr16
mov
dec
fsts
arpl
shlb
sti
and
xor
jmp
or
push
std
and
mov
insb
or
test
dec
jge
mov
js
or
add
fwait
dec
inc
push
ljmp
data16
sbb
imul
ret
add
add
mov
pop
mov
iret
scas
je
insl
sbb
stos
pop
and
pop
mov
adc
sbb
aas
mov
mov
ret
add
and
loop
leave
mov
stc
sahf
lret
pop
inc
dec
adc
jge
inc
enter
lret
gs
dec
aad
ja
leave
jp
cld
lcall
pop
enter
sub
insb
or
in
pusha
add
aas
and
xor
push
adc
ret
ret
out
sub
xor
mov
xor
push
xor
inc
mov
in
dec
mov
add
aaa
jns
iret
xchg
jecxz
out
cmp
test
pop
push
movsl
dec
inc
test
mov
jbe
dec
dec
xchg
cltd
mov
push
int
add
jg
in
pop
dec
nop
mov
loop
ljmp
pop
cmp
lods
sahf
fdivrl
addr16
cmpsb
cltd
or
mov
nop
cmpsl
pop
pushf
or
add
nop
jl
jb
test
cli
or
push
in
in
push
rcrb
arpl
jae
sti
scas
mov
xchg
mov
dec
mov
jge
pushl
xchg
adc
cmp
jmp
xchg
xchg
out
fdivrs
pop
push
jecxz
jb,pn
in
lock
add
int3
push
xorb
add
std
pop
lds
fst
adc
in
add
push
inc
lcall
push
cli
stos
mov
lcall
aad
mov
jns
mov
pop
mov
shrl
mov
mov
fs
cld
cmpsl
mov
inc
repnz
pop
out
out
jnp
mov
sub
mov
cmpsb
dec
mov
std
mov
and
into
pop
ljmp
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
adc
sub
fnstcw
jo
lods
outsl
mov
push
inc
add
pop
mov
and
mov
jae
or
add
mov
add
mov
lds
arpl
stos
xchg
push
sub
lods
stos
jae
ljmp
jae
jo
popf
lcall
push
or
push
rclb
or
and
pop
inc
mov
adc
jno
lea
cli
sub
dec
scas
mov
enter
je,pn
jp
ds
mov
icebp
mov
sarb
xchg
inc
and
or
pop
xchg
xor
mov
cmp
xchg
and
jmp
ret
dec
and
jnp
xor
stos
loope
insl
add
xchg
dec
push
dec
sub
mov
push
sarl
push
mov
pop
pushf
lret
gs
sub
test
pop
lock
sub
jno
aad
pop
call
mov
adc
sub
jne
lods
fmull
cmp
stos
sbb
fwait
dec
popf
fwait
ja
fsubrs
and
dec
test
cmp
mov
cmovl
add
loope
mov
jno
inc
lods
sbb
out
loope
popf
mov
push
add
fistpll
out
ss
into
bound
insb
push
std
mov
nop
pop
ds
jle
sub
fcom
add
adc
call
rolb
xchg
mov
jp
xchg
mov
and
hlt
cmp
sbbb
rcr
out
and
or
in
jge
repnz
mov
lret
aas
outsl
into
jmp
lahf
loopne
decb
and
ja
mov
mov
add
idivl
int
mov
dec
jbe
push
jae
mov
fldcw
jae
popa
in
dec
pop
jns
sub
jg
adc
jnp
cmp
ret
in
cmp
mov
dec
add
or
jo
data16
mov
xchg
dec
outsb
sahf
cmpsl
sub
sub
fdivrp
mov
ret
int
inc
cmc
dec
or
std
sbb
jmp
push
dec
inc
add
jp
inc
call
push
inc
sbb
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
in
sub
les
jo
or
cld
lahf
mov
insl
jb
jmp
or
pop
xlat
lock
pop
sahf
inc
mov
mov
xor
out
aaa
fsubrp
adcb
sub
and
ja
xchg
xor
dec
inc
lahf
mov
push
sbb
sub
out
jmp
or
inc
mov
push
cmp
ret
fs
dec
js
cld
pop
cmpsb
and
test
lret
les
lret
mov
lret
sub
fcmovu
xchg
lret
push
into
jl
stos
clc
rcrb
arpl
sbb
stos
jno
jmp
jg
div
sub
mov
std
mov
negl
mov
outsb
or
dec
and
arpl
adc
loopne
adc
js
xchg
aad
mov
push
pusha
xchg
cmp
xor
mov
ret
fdivl
mov
mov
cmpsb
fisttps
dec
stc
and
cli
fldcw
mov
xor
push
pop
mov
loop
adc
jmp
jecxz
fildll
stos
xchg
imul
add
imul
arpl
jg
outsb
pop
aam
subl
jne
push
sub
and
pop
jmp
push
xchg
or
pusha
mov
adc
add
add
add
add
adc
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
push
mov
jo
jg
jo
xor
rclb
jns
add
and
sub
push
ret
movsl
lahf
xchg
and
xor
testl
mov
jge
lods
cmpsb
in
mov
xchg
pusha
adc
mov
push
aaa
in
into
mov
cmp
xchg
popl
stos
xor
pop
dec
mov
dec
call
lods
jno
out
insb
outsl
clc
mov
into
sub
xor
dec
xorl
rcrl
xor
and
sub
insb
sbbb
mov
jnp
lods
enter
and
dec
mov
insl
push
test
jecxz
xor
testl
enter
scas
push
bound
lds
mov
pop
imul
mov
out
lds
add
push
sub
add
cmp
jecxz
sbb
mov
out
orps
xchg
fdivrl
push
sti
sar
adc
inc
mov
aad
or
xlat
int3
sbb
lods
stos
dec
or
xchg
cmpb
stc
aas
xchg
add
loopne
sar
dec
cmp
and
adc
pop
lret
sbb
in
inc
or
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
push
xor
jo
inc
xchg
iret
imul
inc
jb
movsb
insl
testb
cmp
lahf
mov
shll
adc
mov
gs
repnz
pop
lahf
dec
cmpl
push
push
sbb
or
repz
aas
sbb
pop
mov
mov
stos
int
push
inc
icebp
out
xor
or
xchg
ret
ret
pusha
in
js
rolb
pusha
xor
and
mov
andl
sub
inc
test
gs
add
outsb
shl
test
dec
lds
leave
orb
orl
ja
jp
imul
lods
pop
cs
in
leave
loope
inc
push
pop
mov
inc
loopne
ud1
lahf
add
shll
popa
add
andl
mov
xchg
fcoms
movsb
rcrb
add
or
mov
int3
and
xor
lods
push
ret
jne
inc
pop
pusha
push
insb
ret
pop
mov
daa
lcall
jecxz
push
xchg
das
int
dec
std
rcl
or
lret
adc
popf
in
aas
pop
jo
push
sbb
mov
mov
ffreep
les
add
out
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
adc
mov
mov
jo
jge
jo
mov
imul
imul
cmpsb
xor
jg
or
stc
cwtl
mov
pop
in
inc
jl
push
push
fstpt
sbb
insb
test
xchg
mov
test
jb
jbe
sub
fsubrl
imul
clc
fimull
cmp
inc
jmp
fnstcw
dec
add
in
sub
data16
fnstcw
add
sti
add
aam
rcr
xor
pop
xchg
mov
xlat
jno
add
jne
inc
lds
loopne
addr16
sbb
dec
into
sarl
lret
leave
cmp
push
das
adc
pop
stos
or
insl
push
inc
cmpsl
dec
leave
add
pusha
popf
adc
cmpsb
sub
ror
es
pop
pop
lret
mov
outsb
movsb
data16
jle
push
mov
loop
cmp
or
mov
lea
fwait
in
hlt
orl
and
push
xlat
jae
inc
insl
and
testl
sub
xor
mov
mov
adc
scas
sbb
aam
xchg
rorb
and
jecxz
sbb
mov
cmp
sub
mov
lds
mov
xchg
rcrl
push
shlb
jecxz
mov
int
inc
je
or
inc
loopne
out
js
fs
cmpsl
pop
fbld
fnsave
inc
mov
xchg
imul
ljmp
cmpb
mov
pop
pusha
icebp
ret
jo
jecxz
or
xchg
scas
xor
sbb
nop
adc
aad
sbb
je
gs
mov
insb
mov
push
and
adc
sbb
jg
cltd
dec
ret
je
decl
xor
test
xorl
pop
pop
jo
out
das
mov
mov
mov
jl
aad
mov
daa
xchg
fwait
andl
orl
add
ret
gs
loopne
lret
fwait
repz
out
call
std
adc
pop
repz
icebp
test
int3
mov
mov
call
test
xor
sbb
loop
cmc
lcall
mov
ds
aaa
xor
sbb
jl
stos
jecxz
and
xchg
sub
xchg
hlt
push
lea
ficompl
fcompl
or
push
test
cltd
dec
or
and
cmc
cmpsl
xor
mov
sub
lret
fwait
inc
inc
xchg
dec
sbb
jnp
inc
das
pop
or
push
push
out
mov
ss
inc
cli
sub
cmp
lret
sbb
and
pop
test
pop
aaa
pop
adc
lods
sub
mov
mov
ljmp
mov
fcoml
adc
xor
adc
js
ss
outsb
pop
xor
pop
and
pusha
popa
mov
mov
mov
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
xor
sbb
mov
jge
jo
ss
sbb
mov
imul
repz
or
mov
dec
ds
cld
mov
push
push
add
test
inc
xchg
enter
mov
movsl
sbb
test
lods
iret
scas
xchg
movsb
cli
aaa
fdivp
aad
lcall
mov
gs
sub
les
inc
mov
out
fdivl
mov
jnp
inc
shrl
mov
fldcw
push
subl
ja
sub
andb
lods
mov
aaa
cld
iret
dec
sbb
aaa
aas
into
cmp
dec
push
and
cli
mov
sub
mov
fimull
push
cmpl
loopne
sti
push
xor
mov
mov
xlat
and
rcr
rcr
out
out
jbe
mov
nop
mov
lcall
cmpb
les
add
dec
mov
adc
xor
pushf
mov
sbb
jl
or
and
mov
add
jns
loop
ret
pop
xchg
movsb
jg
sbb
ret
sbb
jecxz
cld
pop
mov
iret
add
mov
lahf
fbstp
and
test
or
or
pop
mov
outsl
test
sbb
mov
mov
mov
stos
adcl
mov
xchg
adc
xchg
int3
outsb
iret
aas
sbb
and
jns
jg
jnp
arpl
inc
fisttps
push
inc
xchg
xorb
ja
cld
cmc
xchg
das
repz
push
mov
inc
lret
ss
fbld
outsl
xchg
push
xchg
pop
inc
ljmp
in
lret
cwtl
adc
xchg
pop
loopne
insl
jnp
int3
and
ljmp
cmp
or
out
sti
adc
mov
xor
pop
outsl
loop
mov
mov
dec
stc
jg
rcrb
repnz
xorl
adc
mov
outsb
sbb
sbb
rorl
dec
and
push
pop
inc
loop
mov
dec
in
add
pop
inc
xor
call
jae
xlat
xlat
gs
lahf
xlat
int3
inc
mov
fmuls
scas
scas
mov
adc
mov
mov
test
xor
je
mov
push
loop
pusha
aam
push
cmp
xlat
pusha
stos
mov
js
jmp
pop
aaa
push
push
pushf
pop
add
adc
lahf
call
enter
icebp
cwtl
cli
sub
cmc
push
dec
or
jp
stos
pop
out
aad
or
mov
test
aas
ljmp
jecxz
ss
xchg
xchg
jno
or
pusha
ss
mov
push
cmp
sub
jp
movsl
pop
and
mov
ljmp
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fistps
sbb
jo,pt
and
jo
test
cmpl
pop
cwtl
in
inc
cmp
jne
mov
fimuls
int
xor
adc
gs
mov
mov
mov
pop
shll
sbb
xor
sti
jne
enter
sahf
out
test
xchg
lret
cmpsl
ja
mov
icebp
lods
pop
jp
ljmp
mov
les
dec
fwait
jecxz
call
sbb
out
pop
das
repnz
repz
repz
jg
lods
stc
xor
nop
jae
cmp
mov
jle
imul
aaa
cmpb
ret
mov
inc
push
push
xor
es
sbb
cmp
push
cld
mov
push
push
mov
loopne
mov
pop
sbb
sahf
test
push
int
jo
or
fldt
lods
mov
mov
cli
sub
cmp
ror
iret
test
pop
call
mov
adc
insb
pop
cmc
jecxz
dec
cmp
cmpsb
dec
pop
cmpsb
lret
das
push
sub
jge
les
lock
lds
int
andb
cmp
adc
sti
xchg
dec
sahf
add
jmp
push
fidivs
push
pop
dec
add
sti
sub
pop
push
pop
inc
inc
icebp
test
stos
push
jg
xchg
xchg
lcall
dec
jb
test
out
fisttpll
adc
sub
ljmp
dec
inc
mov
inc
aas
out
addr16
and
iret
fadds
push
xchg
mov
in
repz
sub
incb
pop
out
mov
imul
mul
sub
sbb
fstps
or
mov
stos
add
in
push
xchg
or
mov
pop
cmpsb
fwait
lods
negb
std
cmp
sahf
mov
push
cmc
sub
scas
movsl
test
imull
enter
lahf
lds
jno
push
aas
pop
mov
lods
fcmove
adc
xchg
fisubs
subb
inc
lahf
pop
xor
xchg
dec
fdivrs
icebp
xorl
ds
imul
repz
movsb
nop
mov
aaa
xor
adc
jg
loope
fidivs
mov
loope
aam
adc
jecxz
jo,pt
jne
jb
mov
inc
fwait
dec
shrl
in
loop
outsb
ja
clc
or
sbb
xchg
sub
mov
mov
imul
jns
aaa
jns
js
pop
loop
and
daa
xor
repnz
cwtl
mov
add
mov
aad
aad
decl
push
mov
and
nop
scas
mov
sbb
sti
add
add
inc
mov
stos
cli
imul
xor
inc
xchg
xchg
cmp
mov
lret
cmp
add
xor
popf
bound
out
addr16
sbbl
pop
mov
daa
jae
clts
jb
jecxz
mov
add
jno
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
pop
lret
sbb
jo
and
jo
shll
adc
inc
mov
loope
stos
jne
ret
bound
ret
ljmp
jmp
mov
xchg
outsl
dec
push
mov
inc
in
fisttpll
js
cli
xchg
insb
ret
in
inc
xor
rolb
jns
adc
loop
popf
psraw
out
mov
fidivs
pop
or
inc
mov
popf
mov
xor
aaa
xlat
mov
cmpsl
add
ret
in
imul
inc
lret
push
inc
stc
andb
daa
fldt
and
sub
pop
shlb
pop
push
data16
cwtl
jmp
sbb
xor
insb
fiaddl
mov
pop
sub
cmp
lahf
inc
dec
cmp
notl
leave
cmp
and
ret
sub
push
and
sbb
mov
pop
pop
push
mov
fs
jo
negb
notl
lahf
pop
leave
add
stc
jne
xchg
add
sbb
adc
lret
cld
pop
and
repnz
ficompl
push
stc
pop
cmp
jb
pop
cli
and
inc
sub
push
insl
fildl
pop
ja
fcmovnbe
int3
sbb
push
ret
addr16
xchg
push
add
jo
nop
lcall
into
imul
stc
xchg
cmp
movb
inc
aad
imul
test
notl
fidivs
popf
jge
fstp
sbb
jmp
aaa
andb
xchg
jb
ret
jns
adc
testb
ret
addl
dec
xchg
inc
out
lea
int
dec
or
inc
jb
and
loop
ret
xchg
sahf
fsubrl
in
xchg
mov
cmp
and
iret
pushf
push
lods
lret
daa
cmpsl
in
repz
jo
and
ret
cltd
fwait
sub
add
fst
and
xchg
and
fstpl
sbb
jae
stc
repz
loop
jg
sarl
mov
mov
repz
xchg
ror
lret
in
xchg
int
mov
xchg
nop
scas
cmp
sbb
adc
mov
in
jmp
sub
push
adc
dec
stos
leave
les
or
fs
data16
inc
mov
add
aad
jne
inc
add
xchg
add
pusha
bnd
jg
sub
xor
and
xchg
mov
dec
xchg
test
mov
nop
lds
push
xor
mov
cmp
pop
inc
in
mov
test
dec
mov
imul
add
pop
dec
testb
sub
inc
pop
testb
pop
ficoms
push
xor
sub
sahf
and
sub
pop
fs
push
and
leave
mov
rolb
pop
dec
adc
sahf
mov
rcrb
cmp
push
iret
dec
adc
pop
je
sbb
cmp
out
and
xor
inc
sahf
lea
stos
or
and
shlb
enter
lret
pop
xchg
inc
xor
pushl
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
sub
jo
and
jo
jno
dec
xchg
xchg
mov
aam
add
mov
adc
scas
rcrb
xchg
shl
adc
ljmp
push
mov
xor
cld
xchg
pop
popa
add
pop
rolb
mov
push
nop
mov
push
xor
negb
inc
mov
xor
in
test
orb
ret
push
aam
sbb
add
mov
xor
rolb
movsb
outsb
ficoms
push
xor
pop
mov
dec
dec
insb
lret
xchg
dec
xchg
imulb
and
mov
test
xchg
outsb
cmp
fs
sahf
sbb
and
xor
aad
insb
adc
jnp
fwait
cmp
jns
lret
xor
jne
aad
lret
add
adc
or
and
adc
ret
movb
inc
fs
imul
inc
outsl
mov
adc
ret
add
xor
out
or
sub
push
add
jne
lods
stos
mov
mov
and
fidivrl
pop
das
xchg
add
lret
xor
lahf
mov
pop
mov
jmp
cmp
stos
pop
mov
jl
mov
jecxz
add
fcmovbe
cmpsl
loopne
push
stos
xchg
aas
and
out
outsb
test
in
xor
mov
and
and
imul
push
add
in
mov
je
dec
inc
inc
shll
push
int
cmpsl
xchg
idivl
xor
and
adc
in
and
or
test
mov
sub
inc
cmp
xor
call
in
jb
jg
fnstsw
push
mov
mov
call
mov
push
bound
nop
xchg
xchg
dec
fsubrs
dec
subb
and
ret
mov
inc
mov
dec
dec
lcall
pop
int3
fmulp
mov
stc
out
les
shrb
mov
fs
xchg
divl
mov
dec
cmp
insl
inc
cltd
dec
jl
sub
ljmp
sti
inc
in
push
imul
repz
cs
push
push
mov
pop
pop
push
cmc
mov
sbb
mov
dec
js
or
jae
rorl
jb
cmp
push
popf
dec
sbb
xchg
push
pop
pop
or
sahf
push
fstl
cmp
dec
call
ret
test
fimull
insb
mov
lahf
sti
add
mov
pop
push
fistpl
fimull
cld
out
mov
push
daa
es
sbbl
bound
and
dec
and
adc
pop
sbb
add
negb
adc
test
dec
cmpsb
sbbb
push
movsb
adc
fldl
lahf
add
movsb
mov
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
int3
fsubr
mov
ds
inc
jge
inc
rorb
jmp
mov
lods
mov
cmc
cltd
outsl
sub
outsl
addr16
xchg
lahf
out
xlat
mov
add
jmp
cmpsb
mov
test
mov
lahf
mov
and
sub
cmp
shll
clc
cli
jb
add
cld
in
xor
jne
mov
xor
adc
jns
sbb
push
mov
inc
or
push
and
popf
jnp
jae
jo
mov
pop
or
mov
lahf
dec
or
mov
cli
pop
and
jmp
sub
pop
jns
lret
js
lods
in
cmp
test
jle
sub
icebp
inc
xchg
fimull
movsl
fidivs
add
dec
xor
repnz
loope
ficoms
pop
and
inc
arpl
popf
xchg
sbb
insl
add
fdivrl
out
rcrl
cmc
shrb
add
or
lock
sbb
mov
les
push
pusha
add
or
push
out
inc
sbb
jbe
addb
mov
iret
sbb
jo
movsl
dec
jae
fst
fists
mov
cmp
inc
stos
movsl
push
sub
sbb
cmpsl
sbb
lret
decb
xor
pop
test
adc
scas
cs
or
inc
scas
cmp
imul
adcb
iret
and
js
js
repnz
out
popf
aam
iret
mov
bound
dec
pusha
dec
or
ljmp
xchg
je
adc
fwait
icebp
cli
daa
aam
ds
not
lcall
rorb
xorl
int
in
mov
loopne
es
hlt
mov
or
add
xorb
aaa
inc
xchg
jno
dec
or
imul
int3
fcom
das
jg
dec
fs
inc
mov
addb
ss
pop
stc
bound
lds
xor
out
call
push
popf
test
pop
dec
ss
imul
arpl
hlt
int
jle
sub
and
insb
imul
cmp
icebp
cmpsl
push
or
sahf
and
push
xlat
pop
fwait
push
in
jp
adc
shll
movsl
mov
pop
das
imul
leave
fmull
test
divb
and
jmp
cli
or
mov
pop
pushl
mov
in
jmp
out
ret
xchg
push
iret
dec
inc
repz
jl
push
outsb
cltd
jb
cmp
lods
scas
xor
pop
xlat
iret
cwtl
out
in
das
sub
push
lret
or
push
sti
push
xchg
inc
sub
xchg
jae
sub
hlt
test
mov
dec
lret
das
adc
lcall
out
insl
rorb
pusha
pop
cmp
mov
cmp
adc
insb
dec
push
cmp
add
scas
fwait
pop
aam
sbbb
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
sbb
jo
and
jo
xor
pop
jo
ret
out
sbb
mov
mov
xlat
movsl
pushf
sti
mov
jle,pn
and
sbb
cmp
sbb
xchg
fs
ds
push
xchg
jb
gs
add
mov
mov
mov
sub
xchg
imulb
cmp
xchg
cmp
cmp
nop
dec
sahf
inc
es
movsl
jle
sub
mov
inc
popa
mov
sub
and
inc
clc
and
cmp
stos
adc
clc
jle,pn
xchg
insb
mov
mov
xor
cmp
cli
jnp
gs
push
dec
inc
dec
enter
hlt
add
in
movsl
add
or
fsts
xor
jmp
roll
sub
inc
arpl
push
add
add
mov
mov
inc
mov
stos
jle
add
push
movsl
ret
ret
lods
add
test
mov
idiv
in
mov
out
bound
sahf
xor
xlat
sub
mov
int
dec
dec
dec
test
vpaddq
pop
movsb
arpl
lock
cmp
ss
add
push
fwait
add
pop
mov
inc
ja
aas
inc
push
jmp
lcall
xor
ds
or
shll
loopne
mov
adc
push
stc
and
ret
sbb
mov
aaa
cld
je
dec
jns
sub
test
enter
nop
ror
sbb
and
and
test
push
hlt
pop
sti
push
lret
xor
jnp
and
jmp
jb
lret
out
insb
enter
jg
push
sbb
jb
cmp
sbb
jmp
pop
dec
lahf
jo
inc
lret
iret
pop
and
pop
lods
xchg
aad
loopne
dec
and
mov
mov
xor
mov
adc
pop
xor
jno
es
fnstenv
int3
ficoms
cs
cmp
pop
pop
xchg
mov
movb
negl
dec
xchg
nop
out
das
dec
outsl
cmp
xchg
test
leave
inc
adc
sub
and
xchg
mov
and
negl
mov
adc
xchg
in
mov
jb
fcomp
xchg
stos
and
out
sbb
pusha
cmp
lret
cmp
rcr
cli
sub
std
lcall
addr16
movsl
and
xor
xor
mov
jmp
push
cmpsl
xchg
cmp
and
roll
push
push
jmp
shll
and
inc
lret
aad
push
lods
imul
ret
leave
xor
popa
aad
dec
jns
push
cmp
dec
jecxz
add
push
popa
add
inc
pop
xor
lcall
jo,pt
sub
std
mov
adc
js
mov
sbb
leave
inc
in
cli
mov
or
pop
push
cmpsb
push
add
or
mov
mov
dec
cmp
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
mov
adc
jo
jg
jo
mov
xor
ljmp
insb
hlt
pop
dec
negl
movsb
pinsrw
out
int
mov
inc
movsb
clc
ljmp
or
ss
insl
pop
lcall
cmpsb
scas
pop
add
sub
lcall
push
movsb
paddsb
add
mov
sbb
cmp
xor
sub
out
add
movsb
sub
daa
je
and
mov
push
inc
push
mov
sarb
or
enter
and
jns
sti
fsubr
mov
ffree
cltd
jns
cli
push
mov
sti
in
cmc
add
push
mov
fs
ret
or
add
cmpb
pop
adc
in
in
mov
dec
push
jo
xchg
sub
mov
lods
inc
fildll
jo
fstl
push
movsl
pusha
xchg
outsl
decl
push
lds
xchg
ja
jns
popf
pop
testb
xor
arpl
rorb
sti
ja
int3
xor
push
insb
mov
add
add
jle
pop
js
add
lret
cmc
mov
adc
inc
push
cs
sub
cwtl
or
stos
orl
lcall
pusha
jl
fildl
out
push
dec
testb
scas
xchg
cld
repnz
orb
jae
mov
out
ljmp
fs
pop
dec
adcl
xchg
push
pop
or
jbe
lea
jb
sarb
stc
jle
rolb
iret
pop
andl
mov
jge
jnp
and
arpl
pop
cmp
add
sub
jbe
or
jne
push
cmc
mov
fstl
xlat
je
movsb
mov
fiadds
fisubl
jns
inc
pop
add
mov
enter
xor
loopne
fimull
push
in
je
jbe
mov
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
mov
push
int3
jo
imul
repnz
adc
adc
cld
rolb
not
adc
cmp
and
scas
cmpl
inc
daa
or
fwait
jo
sub
sbb
dec
mov
rcll
xorl
outsl
pop
loope
ret
jb
pop
push
fisttps
adc
xor
xchg
cmp
imul
jg
lret
fs
pop
popa
popf
adc
jne
inc
push
xor
int3
aaa
pop
cmpb
mov
das
ds
mov
and
cltd
sbb
xor
xor
push
mov
in
jle
fsts
xlat
sbb
dec
pushf
dec
lods
lock
fdivrl
cmpsb
jnp
data16
movsb
push
aas
jg
mov
mov
std
repz
dec
pushf
mov
xor
sarl
cmpsl
aam
adc
popf
pop
jo
mov
mov
int
pop
hlt
xor
lock
mov
pop
dec
mov
adc
das
and
fnstcw
pop
aam
push
aad
adc
xchg
inc
mov
ljmp
push
jp
cmp
jecxz
add
loope
stos
mov
popf
add
out
jnp
rorl
lret
and
push
pop
gs
test
sub
jg
jne
jg
cmpsb
outsl
in
sub
mov
jae
cwtl
fdiv
pop
clc
and
cs
loop
push
pop
ljmp
shl
xchg
int
scas
xchg
adc
test
jecxz
cld
push
mov
mov
imul
in
sub
mov
fidivl
mov
scas
dec
adc
add
and
ret
fisttps
adc
imul
mov
loope
mov
leave
cmpsl
mov
jns
mov
and
xchg
or
jns
xchg
dec
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
adc
jo
jg
jo
scas
stos
cwtl
jg
popf
fildll
pop
int
dec
mov
loop
es
jo
xchg
or
pop
cmp
lock
xor
filds
xchg
mov
and
add
outsb
pop
jg
jg
mov
daa
das
lcall
cmp
mov
hlt
jle
into
pusha
and
imul
ret
fildll
xchg
pop
sbb
push
pushf
or
push
ret
dec
cld
push
sti
in
mov
jp
call
repnz
mov
xchg
jl
loope
fwait
pop
push
and
push
out
xchg
std
add
das
out
out
sub
mov
or
sub
jns
outsl
in
dec
adc
movsl
push
call
cmp
jbe
dec
rclb
lock
sub
addr16
cli
cmc
in
mov
push
xchg
imul
and
cs
mov
push
jmp
repnz
mov
call
dec
std
push
fiadds
cltd
mov
xor
mov
mov
fadds
pop
stos
add
decb
frstor
rcl
fsubl
inc
or
sbb
add
sub
add
lret
push
add
out
scas
add
cmp
adc
jb
adc
mov
mov
icebp
sarl
inc
aas
in
icebp
mov
icebp
cmp
ror
loop
dec
cld
mov
in
inc
stc
into
lock
pop
mov
divb
cmpsl
in
add
mov
cs
push
sub
push
and
mov
in
inc
xchg
dec
adc
out
sub
aam
or
fidivrs
loope
xor
or
loop
xor
adc
inc
or
sbb
sbb
add
cmp
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
test
or
enter
jg
jo
and
and
iret
in
insb
adc
sbb
int
cmp
inc
jae
push
std
cmp
or
incb
xor
jge
mov
sbb
lods
inc
xor
dec
outsb
aas
push
xlat
pusha
add
lods
lahf
push
imul
mov
mov
sub
lds
repz
fmul
repz
popf
sub
mov
inc
pop
sti
icebp
and
pop
cwtl
and
mov
leave
dec
jno
out
jo
dec
aaa
xor
dec
in
and
imul
adc
fsubrl
jbe
mov
hlt
mov
nop
push
lods
sub
stc
das
pop
je
rclb
ss
ds
inc
cli
mov
inc
and
ret
hlt
lods
pop
sub
lret
dec
ds
movsl
aaa
clc
aas
jbe,pn
outsl
and
das
hlt
pusha
mov
and
inc
ss
pushf
jp
sbb
leave
lock
add
adc
jae
loope
mov
mov
adc
inc
mov
movsb
repnz
in
xlat
repnz
or
cld
std
sub
pop
hlt
cmp
outsb
inc
jl
cmc
stos
push
xchg
xchg
push
xchg
ret
cli
pop
inc
push
jnp
add
aas
inc
add
test
add
cmpsl
cltd
cmpsb
add
jl
sbb
lods
test
pop
in
xor
lcall
cs
xor
insb
imul
inc
sbb
adc
lret
ss
cli
mov
adc
int
xor
imul
idivb
int3
test
outsl
int
and
arpl
aad
inc
loope
imul
cmpsl
shrl
pop
dec
ja
jne
pop
popf
leave
sbb
adc
pop
jno
xor
cltd
xor
push
das
push
and
cld
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
aad
cli
dec
mov
jg
jo
rcrl
lcall
test
mov
in
pushf
and
mov
je
push
jb
cwtl
movsl
fmuls
test
fcomps
cwtl
popa
imul
mov
sub
divb
les
jge
mov
mov
stos
aad
jge
cli
mov
and
lret
cs
or
sahf
pmaxsw
movsb
addr16
xchg
sbb
mov
out
int
pop
jp
addr16
xor
clc
jbe
mov
add
test
lcall
cld
in
adc
ljmp
push
mov
mov
iret
push
daa
or
cwtl
mov
mov
ss
rcll
cmp
xchg
cmp
shrb
jl
lock
sbb
inc
xor
or
jl
test
int3
sub
add
jb
scas
mov
xor
or
xorl
test
mov
jnp
inc
dec
xor
push
sub
push
and
xchg
inc
ljmp
or
mov
testl
sub
jmp
fs
sbb
movsl
mov
dec
lds
cmp
inc
out
dec
addr16
es
das
pop
mov
inc
arpl
enter
into
sti
adc
or
lock
mov
mov
lcall
jnp
mov
mov
div
mov
pushf
mov
insb
enter
addr16
les
mov
or
in
cmc
sbb
mov
add
pop
pop
std
call
iret
adc
jno
pop
mov
pusha
mov
or
jae
push
xchg
pushf
cmpsb
xchg
test
jno
sti
fstp
mov
cmpsl
repz
fucomip
out
mov
stc
mov
sbb
add
lds
add
push
cs
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
mov
xor
imul
and
push
mov
in
xor
inc
xor
jne
shlb
push
lea
inc
xchg
xchg
add
repz
call
in
mov
mov
inc
scas
push
mov
fstpt
mov
mov
sti
jnp
push
jg
scas
insb
cmp
and
mov
jns
sub
js
pop
call
les
imul
pop
sbb
push
lods
lds
loop
xchg
fwait
rorb
inc
inc
sub
jb
in
fnstcw
cmc
push
inc
push
push
test
add
data16
xor
fwait
mov
outsl
ficomps
mov
ljmp
xchg
aam
pop
loopne
xlat
lcall
jne
sub
sbb
in
inc
ss
pop
repnz
push
fildl
fisttps
cmp
pusha
inc
dec
mov
in
pushf
xor
xlat
push
sbb
jge
mov
shlb
negb
mov
add
minps
add
ja
sbbl
jnp
rolb
in
jl
ja
mov
lahf
ret
push
inc
mov
mov
mov
adc
fcmovb
jge
enter
dec
adc
pop
test
pop
inc
inc
xor
icebp
bound
or
pop
xor
adc
scas
stos
mov
or
outsb
lods
mov
movsl
ret
mov
push
dec
repz
inc
mov
inc
ljmp
mov
outsb
pop
pusha
sub
jp
flds
mov
add
mov
cmp
adc
pushf
adc
pop
test
inc
aad
popa
mov
adc
gs
divb
rolb
rol
add
out
and
add
pushf
add
add
xlat
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
andl
jo
or
mov
loope
cld
insl
int
mov
dec
aaa
mov
ja
push
shlb
lret
stos
cmp
add
mov
clc
mov
xchg
icebp
call
cld
imul
xchg
add
inc
insl
mov
and
fs
jle
add
adc
ret
pop
outsl
mov
test
push
jle
popf
dec
imul
pop
push
inc
dec
add
lds
pushf
xchg
imul
xor
ja
loope
mov
test
mov
xlat
mov
pop
jne
sbb
arpl
scas
inc
filds
jbe
inc
fidivrl
add
jae
mov
mov
stos
les
les
pusha
xor
test
sbb
popa
divb
add
dec
jae
test
mov
push
sbb
in
dec
or
push
iret
sbb
mov
pop
in
lock
lcall
xor
sbb
imul
sub
push
xchg
mov
or
clc
cld
pushf
jp
inc
mov
xchg
push
cmp
xor
outsl
fcmovne
push
pusha
loop
in
sub
stc
mov
ljmp
sub
fsubrl
adc
loop
loop
hlt
sbb
cmpsb
movsl
andb
sub
test
sti
sub
push
subl
lret
into
or
cmpsl
dec
jmp
push
adc
jp
push
sbb
movsl
inc
lret
inc
filds
jae
or
fndisi(8087
jno
lcall
ja
mov
jmp
jmp
addr16
jns
inc
jo
mov
dec
push
sbb
fbstp
sarb
loopne
addr16
and
or
fstpl
lcall
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
sub
jge
shlb
imul
xchg
outsb
push
xor
fsubs
sub
sahf
mov
cmp
mov
xchg
cwtl
in
xchg
inc
cmp
rcr
dec
xchg
loop
sti
popa
cli
sbb
xchg
push
sahf
incl
push
stos
fwait
testl
mov
test
faddl
arpl
cmpsl
add
data16
pop
and
sbb
aad
sti
enter
sub
cmpsb
fnstcw
nop
in
rorb
cli
and
jp
sub
cmp
faddl
jb
fildl
inc
imul
lock
xchg
jl
pop
fidivrs
fs
pushf
jmp
lcall
popa
xchg
adcl
dec
jle
dec
dec
xor
fistps
stc
mov
lret
ss
dec
mov
enter
push
xchg
push
pop
into
movaps
roll
repnz
fildl
pop
stos
xchg
iret
repnz
clc
and
mov
pop
popf
mov
popa
jg
push
sbb
js
xor
push
sbb
enter
push
ja
cli
mov
dec
inc
aad
in
enter
and
stc
cmp
int
xlat
movsb
mov
push
jl
push
add
aad
push
or
mov
xor
sbb
push
loope
ljmp
push
daa
pop
push
and
fcompl
int3
dec
push
ds
fmuls
jo
test
out
stos
dec
mov
jle
xor
aaa
pop
andb
rol
dec
shr
mov
push
sbb
ret
sub
jo
mov
dec
add
xchg
cmp
outsb
addr16
scas
xor
sub
jnp
lea
sub
aaa
xchg
mov
xchg
push
cmp
iret
xchg
call
pusha
imul
ljmp
sub
push
enter
hlt
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
ljmp
jo
jg
jo
lods
cmp
aas
push
pop
test
ds
xchg
pop
inc
in
cmpb
pop
jo
stos
xchg
ret
mov
sbb
outsl
cmp
stos
iret
sbb
subl
fidivs
or
fisubs
inc
pop
xchg
add
movsb
sahf
movsb
xor
push
sarb
insl
push
push
pop
scas
jns
ror
cmpsl
jl
mov
shrb
lahf
imul
aas
or
leave
repnz
push
cmp
dec
outsb
xor
inc
hlt
lds
lret
outsb
rorl
push
mov
dec
mov
pop
adc
test
dec
cwtl
push
sub
fucomi
push
jg
ret
push
loopne
loopne
inc
and
mov
ficoml
scas
test
sub
mov
out
addr16
pop
idivl
mov
ret
mov
mov
lods
push
mov
inc
cmp
mov
scas
or
dec
cwtl
lock
outsl
and
lahf
lock
mov
mov
inc
leave
dec
in
push
xchg
pusha
nop
mov
std
jne
mov
add
lret
lahf
fiaddl
or
push
xchg
das
int3
jae
insb
ret
push
out
lods
xchg
fcoms
add
fs
cmpsb
adc
repz
nop
dec
mov
out
movsb
outsb
jae
idivl
int3
push
add
inc
testb
add
hlt
bound
divl
imul
dec
jns
gs
mov
fcoms
fisubs
clc
mov
xor
dec
popa
pop
fnsave
jo
mov
cmp
mov
fsubl
js
pop
dec
xchg
pushf
scas
sbb
movsb
and
mov
roll
dec
out
sbb
aad
lret
push
xor
push
lea
jmp
jle
arpl
xchg
pop
pop
sahf
and
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
pushf
xor
jo
imul
nop
scas
adc
ljmp
pushf
pop
and
clc
arpl
push
lret
mov
push
gs
dec
add
out
fdivrl
shlb
pop
sbb
or
inc
and
mov
xchg
sbb
adc
and
pushf
pop
fwait
mov
in
int3
sbb
leave
inc
or
scas
pop
cwtl
movsl
test
fcom
out
addl
cmp
and
mov
xor
xor
mov
jle
scas
clc
jle
test
dec
jge
mov
rolb
cld
and
stos
rclb
jne
mov
cli
out
popa
jb
mov
adc
cmpsb
sub
and
add
daa
mov
inc
or
inc
cmp
sbb
icebp
sbb
imul
mov
push
sub
sub
fistl
dec
or
xchg
jne
ret
adc
lahf
ja
test
xchg
dec
fwait
jb
sub
int
ret
test
je
mov
out
in
rorl
mov
in
mov
fistpl
jge
lock
lods
clc
sbb
dec
or
xor
xchg
aaa
movsb
daa
cmpsb
push
mov
xchg
mov
pop
aas
cmp
jge
xchg
push
xorb
inc
subb
out
cwtl
push
inc
je
push
popf
mov
push
lods
cld
stos
rcll
jae
jge
and
pop
xlat
mov
and
nop
sbb
dec
sbb
mov
sub
pop
addl
push
xchg
mov
fcmove
xor
or
sub
ja
sub
cs
scas
jecxz
xor
popa
inc
cmpsl
jmp
pop
gs
jecxz
jae
pop
nop
daa
and
sub
mov
add
test
pop
mov
stos
out
pushf
pop
jmp
xchg
mov
aad
add
jmp
sbbb
cltd
js
mov
ljmp
jo
jg
jo
jno
addb
fists
negl
adc
outsl
mov
clc
sub
nop
in
lret
pop
dec
addl
push
and
pop
sub
aad
push
or
hlt
aam
adc
xchg
push
fstps
es
clc
sub
cmc
cmp
iret
mov
xchg
pop
loopne
push
movl
pop
dec
lods
insl
inc
daa
mov
push
push
add
mulb
movsb
addl
jmp
sti
xchg
movsl
je
hlt
test
fiadds
subl
fsubrl
xchg
mov
int
xor
scas
lea
jno
xchg
pusha
cld
iret
in
fiadds
sbbb
jle
lret
mov
push
jb
ret
ret
mov
cmp
scas
inc
jns
dec
jg
mov
lds
jge
jge
arpl
lods
loope
cmc
fiaddl
cmp
call
je
sub
clc
push
cmp
sub
push
xor
rcrl
iret
mov
icebp
fwait
popf
cli
movsb
loope
leave
sub
jnp
pop
mov
incl
out
or
jecxz
add
cwtl
mov
add
mov
jbe
sti
adc
mov
dec
ja
or
cld
add
and
lock
fldl
loopne
addb
sbb
or
cld
ljmp
ret
das
mov
or
ljmp
mov
inc
mov
movsb
dec
repnz
pusha
push
sbb
add
xor
inc
call
mov
pop
and
jnp
jp
in
xchg
jne
popa
and
iret
stos
nop
mov
dec
leave
cmp
je
cmp
pop
or
repnz
mov
scas
xlat
jmp
clc
icebp
mov
icebp
ficompl
stos
jns
fdivs
imul
pusha
mov
repnz
sbbb
jl
jge
jmp
lea
ret
mov
mov
fidivl
push
fucom
push
in
out
inc
xchg
imul
xchg
repz
imul
pop
fisttpl
cmp
shlb
pop
sbb
std
cltd
flds
addr16
call
cwtl
sbb
daa
outsb
jge
xchg
data16
xchg
rol
push
push
mov
push
adc
add
inc
and
or
jno
inc
outsl
xchg
cs
and
repz
mov
je
es
imulb
adc
clc
fidivl
xor
sbb
sbb
call
dec
adcl
or
scas
out
mov
push
push
jp
jp
stc
icebp
fnsave
imul
out
push
and
mov
int3
push
adc
adc
daa
adc
cltd
cmc
xor
out
imul
pop
jle
xor
or
rcll
mov
repz
insb
sbb
xchg
js
pop
mov
or
adc
inc
push
and
and
lods
nop
sbb
bound
xchg
and
push
pop
test
mov
push
dec
adc
add
negl
mov
sbb
cmp
or
add
or
push
fsubrl
cmp
inc
arpl
and
insb
aaa
jnp
adc
je
icebp
ret
mov
sub
cmp
adc
xor
loopne
cmc
mov
mov
in
bound
xlat
cwtl
pushf
lcall
dec
and
mov
or
rorb
imulb
push
or
pop
pop
xchg
xor
cmp
cmpl
inc
pop
inc
sub
mov
dec
in
das
adc
in
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
xor
shl
out
jo
jg
jo
jl
int3
arpl
xchg
aaa
fimuls
ds
sub
or
lock
cmc
cltd
insl
mov
je
repz
adc
idiv
xor
jb
aam
loopne
xchg
push
lds
mov
movsb
inc
push
pextrw
test
cltd
mov
dec
insb
fcmovu
xchg
sbb
and
or
fbld
iret
int
test
jg
pop
cli
enter
ja
xor
pop
fcomps
ds
test
push
mov
gs
add
pop
rcr
jae
and
cmpsl
lds
mov
or
aad
popf
mov
adc
es
imul
shlb
fstpt
sti
push
arpl
leave
decl
movsl
pop
sub
push
mov
in
mov
in
xchg
sub
outsb
gs
push
mov
add
add
data16
lock
cmp
cltd
mov
dec
xor
inc
dec
daa
icebp
push
enter
shlb
cmp
adc
out
fwait
sub
clc
pop
sub
addr16
or
xchg
shll
pop
cmp
aaa
jb
mov
fidivs
nop
xchg
jge
rorl
and
push
inc
cmp
inc
cmp
outsl
mov
xchg
imul
sbb
ja
sbb
jecxz
push
andb
add
or
add
loope
into
mov
out
and
pusha
fcmovnb
iret
movsl
fwait
or
test
jne
cmpsb
dec
push
aad
mov
dec
shlb
adc
pusha
lods
mov
dec
aaa
aad
add
dec
xchg
mov
insb
xchg
hlt
add
sbb
pushf
andb
insl
movsl
ret
shl
inc
aas
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
mov
jo
imul
rolb
adc
mov
dec
xchg
mov
adc
and
xchg
repz
sbb
add
and
push
in
icebp
dec
pushf
adc
xchg
mov
and
out
dec
and
dec
fidivs
ret
xor
loopne
sbb
faddp
add
jl
dec
loope
dec
sbb
addl
nop
aaa
inc
inc
and
fnsave
addr16
and
fstp
js
xor
xor
das
leave
aad
rorl
add
out
arpl
cmp
insl
push
sahf
enter
icebp
test
jno
imul
mov
outsb
jecxz
cld
mov
stc
fsubl
jmp
mov
fstl
cmp
xchg
xchg
jno
push
mov
test
shr
iret
js
repnz
cmc
mov
sbb
daa
dec
adc
and
scas
mov
push
cmpsb
lods
jmp
jecxz
push
cmp
cmp
or
jge
loop
int
or
inc
xchg
lea
mov
jecxz
sub
je
fistps
adc
imul
fst
das
repz
mov
bnd
lret
inc
cmp
sbb
push
lock
xchg
pop
add
mov
xchg
cmp
enter
push
test
lmsw
pop
pop
imull
subb
imull
inc
mov
es
in
into
xchg
xor
pusha
mov
and
movsb
and
aad
repz
mov
lret
js
add
jae
outsl
imul
cmp
add
repz
fsubr
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
loop
jo
jg
jo
pop
hlt
in
xor
xchg
fistpl
mov
pusha
push
out
push
adc
or
dec
fdivs
call
pop
rorb
sub
movsl
adc
lods
xchg
lahf
lahf
cmp
mov
push
jo
inc
cli
insb
jns
mov
pop
xor
out
test
dec
notb
pop
sub
inc
sub
addl
xchg
push
jmp
mov
or
jmp
cmp
xor
inc
or
fwait
xor
int
sub
pop
rolb
mov
mov
mov
ficomps
pop
imul
bound
mov
mov
jno
ja
mov
or
mov
lods
mov
jns
popl
dec
inc
jns
imul
push
push
xor
lcall
xchg
sti
push
cwtl
stc
sbb
cmp
out
mov
inc
fisubrs
into
dec
mov
call
pop
dec
xor
das
dec
lret
xchg
mov
sub
xlat
push
div
xor
push
xor
rclb
inc
outsb
inc
sbb
add
inc
mov
mov
lds
push
jbe
sti
jb
ficomps
cmp
js
adc
and
ds
subb
dec
mov
leave
and
sbb
clc
dec
cmp
ja
mov
mov
aaa
push
lahf
jl
xor
insb
mov
icebp
or
fdivr
popa
mov
mov
push
mov
out
jg
and
jecxz
mov
fcomip
mov
fldcw
pop
stos
je
dec
pop
pop
push
ljmp
push
sbb
cmp
sub
jecxz
jnp
mov
pusha
push
jae
fstpt
lock
xchg
cmp
fwait
xlat
das
cmp
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
cwtl
pop
dec
push
shl
jo
xchg
jg
jo
out
add
test
pcmpeqw
sbb
xchg
dec
mov
mov
jmp
inc
es
popf
sbb
cs
push
std
pop
push
dec
jle
xchg
mov
jmp
cmp
xchg
sbbb
xor
pop
leave
mov
push
xor
lret
mov
xchg
adc
pop
jno
sub
ret
fxch
mov
mov
or
dec
mov
dec
pop
es
in
jge
inc
lret
lret
mov
pop
inc
negl
out
sub
fcomp
pop
rorb
int
cmp
inc
cmp
btc
dec
xchg
pop
loope
mov
scas
inc
push
mov
leave
cmp
rcll
and
pop
xor
jo
jae
dec
enter
in
lcall
nop
dec
xchg
mov
pop
push
dec
inc
icebp
cmp
movsb
dec
adc
mov
jmp
lahf
les
outsb
xor
ljmp
call
mov
andb
push
mov
hlt
or
xchg
adc
bndldx
inc
add
sub
xor
sbb
xor
out
int3
cmc
mov
popf
mov
out
sbb
out
adc
incb
push
lahf
push
lods
mov
sub
jns
mov
ret
jecxz
mov
mov
int3
mov
mov
inc
out
test
mov
lret
mov
icebp
sti
jbe
insl
mov
clc
inc
icebp
xchg
lret
push
push
push
jmp
mov
jae
jno
mov
hlt
or
pop
or
jo
xchg
jg
jo
mov
pop
adc
mov
adc
movsl
test
cs
push
push
xor
loop
xor
add
dec
daa
sbb
mov
data16
inc
push
movsb
ret
or
inc
jae
stc
push
ss
data16
dec
pushf
shrl
jmp
jo
push
stos
cmp
push
lods
sub
insb
push
aad
mov
std
pop
xchg
pushf
les
rcll
xor
subl
cmp
sub
inc
mov
xor
jnp
dec
lret
mov
xor
xchg
dec
in
icebp
ret
mov
push
push
int
sarb
jge
mov
jns
cltd
rcl
lods
jbe
dec
ljmp
mov
fsubs
punpcklwd
cli
out
add
inc
bound
pop
imul
rolb
xchg
adc
fwait
or
stc
hlt
pop
cmp
push
add
loopne
js
inc
pop
pop
addb
mov
xchg
jbe
clc
pop
ljmp
cmp
mov
add
out
jecxz
push
jmp
ljmp
mov
add
and
stc
loop
mov
out
inc
arpl
rorb
mov
aad
andb
push
and
add
out
test
pop
xchg
push
pop
xor
filds
or
out
test
imul
fcmove
pusha
fiadds
jb
mov
mov
es
aam
leave
loope
dec
daa
outsl
loop
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
stc
jns
mov
jo
xchg
jg
jo
iret
and
stos
sbb
and
cmpl
xor
push
mov
fldl
dec
shrl
mov
mov
jle
push
in
outsl
mov
sbb
xchg
jmp
mov
aas
leave
xchg
sbb
dec
ljmp
stc
mov
filds
sub
push
lods
jnp
imul
push
push
jne
lret
push
sbb
cs
xor
in
xor
jmp
scas
jmp
push
xchg
jge
push
js
mov
arpl
movsb
jnp
inc
cmp
mov
jnp
pusha
and
fwait
lods
loope
bound
xor
pop
adc
cwtl
xor
jbe
out
out
or
xchg
sub
cld
outsb
pop
ficomps
pop
subl
into
jns
into
or
or
xchg
inc
push
sbbl
sub
repz
xchg
nop
xor
data16
ds
dec
push
or
shll
cs
js
lods
shll
fwait
or
or
bound
push
xor
lods
bnd
inc
adc
roll
fcoml
dec
negl
jo
je
or
mov
std
dec
orb
das
in
cmp
adc
push
mov
push
testb
or
ret
xchg
add
or
fwait
pushw
fbstp
outsb
or
rorl
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
dec
and
jmp
jo
jg
jo
xor
mov
sbb
mov
push
jmp
fwait
mov
mov
aam
sarb
pop
movsl
push
xchg
jmp
sub
cld
or
jbe
xor
test
hlt
imul
add
clc
jge
cli
call
and
lahf
jns
xor
fcmovb
and
mov
testb
fs
fs
movsl
dec
mov
pop
inc
jmp
dec
aad
andb
lea
clc
or
imul
pop
xchg
les
nop
loop
pop
test
jne
jns
fsubl
insl
cmc
mov
cmc
sar
adc
ja
cmp
stc
sbbb
clc
aaa
sub
mov
and
dec
inc
sbb
pop
in
cs
fisubs
decl
or
sbb
and
out
das
add
jnp
punpckldq
nop
sti
mov
mov
mov
jecxz
popf
cltd
fists
sbb
movd
or
rcrb
sub
cmc
stc
in
loopne
push
cld
pop
insl
fldenv
imul
dec
pop
push
inc
call
mov
sbb
jg
mov
in
xchg
sahf
or
pop
out
xchg
xlat
add
sbb
add
xchg
es
inc
pusha
jg
and
or
jns
jne
push
mov
loopne
jg
es
mov
and
repz
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
add
push
cmovbe
jo
xchg
jg
jo
push
jno
dec
xor
pop
xchg
pop
lds
ds
out
inc
dec
dec
bound
push
add
fsub
mov
mov
clc
jmp
insb
call
in
das
add
sti
call
loop
std
pop
inc
pushf
mov
into
cwtl
dec
movsl
lods
icebp
ficoms
aas
cmp
mov
in
mov
sub
add
loop
mov
mov
mov
xchg
push
and
sarb
sahf
sbb
mov
jl
in
push
cmc
idiv
lret
incl
fistl
xchg
cltd
testb
out
daa
mov
add
and
cmp
mov
and
out
mov
and
mov
in
inc
sti
pop
into
test
cmp
mov
or
jb
dec
cmpsl
rcl
in
jo
into
cmp
dec
sbbb
jmp
mov
mov
sbb
jbe
pop
scas
mov
imul
jae
cmp
push
inc
xchg
gs
mov
out
jecxz
fsts
lcall
subb
jae
ljmp
mov
fidivl
sbbl
dec
outsl
jp
sub
mov
scas
push
clc
leave
sbb
cmp
shl
lods
cmp
sbb
push
push
jge
xor
mov
sub
cld
sub
rorl
jbe
pusha
and
xchg
lcall
sbb
call
add
int
add
add
rorl
add
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
xor
xor
fucomi
jo
xchg
jg
jo
ret
enter
out
outsb
arpl
add
rcrb
leave
or
xchg
mov
inc
inc
mov
lea
mov
add
adcb
addr16
or
es
fadds
lds
lods
sbb
aad
pop
jno
mov
test
xlat
in
sub
mov
mov
lea
mov
sub
repnz
push
popa
xchg
pushf
jmp
dec
mov
sbb
popa
fbstp
popl
lods
ja
xor
in
inc
sub
xor
ja
mov
sbb
mov
ljmp
aam
ja
adc
jbe
adc
and
outsl
stos
ss
lcall
cmc
iret
popf
xchg
enter
xchg
int3
inc
push
pop
pusha
imul
in
inc
push
mov
or
pusha
and
mov
xchg
push
es
push
fimull
aad
ret
push
jle
add
leave
scas
lock
mov
xor
out
dec
cmp
inc
icebp
xchg
adc
idivl
sbb
mov
pop
xchg
movsb
loop
jo
adc
sbb
test
mov
sub
add
cmp
and
push
mov
hlt
or
mov
js
es
mov
inc
and
sbb
std
lds
daa
pusha
inc
insl
aam
sbb
jbe
inc
add
arpl
pusha
loop
das
ret
xlat
jnp
and
add
add
icebp
mov
push
int
mov
jo
xchg
jg
jo
mov
mov
xorb
and
jae
aas
mov
sbb
data16
mov
into
popa
pop
jecxz
mov
add
jae
xor
mov
xchg
stos
test
nop
bound
lea
data16
adc
adc
xor
sbb
mov
mov
int3
jmp
ss
and
push
xor
add
jl,pn
cmp
pop
mov
mov
dec
xchg
rcll
jb
lret
or
push
xor
cmp
jbe
test
fldt
out
std
mov
mov
sbb
add
aas
dec
mov
ficomps
fcomi
jecxz
pushf
cmp
and
imul
xchg
mov
add
jbe
clc
popa
add
xchg
mov
movsb
iret
mov
loop
aad
cs
xchg
cmp
insl
push
loope
mov
arpl
lcall
faddl
lods
outsb
mov
cs
out
pushf
movsb
jl
pop
mov
xchg
ljmp
aas
or
mov
add
leave
or
movb
dec
pusha
ja,pn
test
sub
xchg
les
mov
inc
mov
jmp
icebp
and
xor
and
data16
push
imul
into
dec
fildl
sub
repnz
std
cmpsl
in
pop
pop
sar
dec
xchg
in
mov
cmpsl
out
mov
sbb
dec
hlt
jecxz
push
lock
fisttpll
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
divl
xchg
jg
jo
shll
imul
sub
sbb
int
faddp
add
add
int3
nop
or
pop
xchg
jecxz
adc
mov
adc
aaa
jae
or
cmc
lahf
push
rorl
movsb
inc
repnz
shr
mov
repnz
or
out
aas
mov
xor
ror
pop
jno
cmp
dec
das
fnsave
sub
es
in
sbb
mov
inc
jmp
insl
pop
shl
mov
test
pop
test
sbb
push
pop
push
jmp
cmp
xchg
or
sub
push
xor
pop
mov
adc
inc
lahf
movsl
mov
test
out
fcompl
frstor
adc
jbe
push
xor
inc
lea
mov
cmovle
bound
sarb
pop
cs
rorl
ficompl
jb
add
push
gs
lret
and
jns
out
mov
mov
lea
push
dec
jmp
in
mov
rclb
push
xlat
in
xchg
push
push
fisubs
dec
dec
xor
cld
jmp
cmp
xor
mov
adc
xchg
dec
test
pop
sbb
rcrl
fcomp
pop
mov
je
add
daa
xchg
dec
scas
adc
mov
gs
bound
adc
call
cmp
movb
test
xor
or
mov
mov
jmp
frndint
std
imul
mov
xor
lret
movsl
xchg
sub
jo
xchg
jg
jo
jmp
jnp
out
loop
ss
cmp
mov
push
dec
xor
mov
test
inc
fstps
test
mov
cli
inc
pop
sbb
or
pop
pop
dec
das
cmc
enter
pop
pop
cmp
ficoms
cmpsb
pop
jns
or
add
push
test
aaa
enter
pop
movsb
inc
rorl
loope
int3
sti
add
cmp
mov
lock
sbb
jns
jnp
mov
outsl
lahf
xor
cmp
mov
adc
enter
lea
pushf
lret
pop
push
mov
fsubrl
daa
loope
aam
lret
or
leave
xchg
push
aaa
cmc
dec
cld
jns
in
popa
stos
xlat
jl
or
popf
push
or
dec
lret
pop
pop
cld
sub
xor
daa
js
xor
mov
inc
inc
cmpxchg
mov
mov
lock
jo
insl
adc
inc
jle
add
inc
test
fwait
hlt
jnp
lock
cmpsb
clc
std
ss
cli
ljmp
fwait
push
adc
stos
hlt
test
pop
das
sbb
cmp
cli
add
add
lods
sub
cmp
aas
repz
pop
pop
adc
xchg
repnz
shrl
iret
cmp
enter
xor
xchg
aaa
or
mov
jno
gs
mov
xor
fiaddl
sub
sub
adc
mov
int
mov
mov
add
jmp
hlt
sbb
rep
cmp
aaa
pop
add
dec
bnd
xchg
jg
jo
xor
sbb
hlt
pop
dec
push
in
or
js
scas
scas
add
ljmp
pop
pushf
mov
sahf
xchg
push
out
cmc
cmpsl
lahf
push
adc
xchg
and
jecxz
dec
clc
mov
push
mov
clc
pop
daa
push
push
mov
repnz
leave
lret
ret
adc
sub
nop
pop
mov
cmp
subl
insl
mov
out
nop
add
sub
lock
mov
loope
xchg
and
testl
mov
fildll
inc
pop
insl
int3
xchg
or
and
leave
leave
cmp
or
int
in
insl
mov
inc
fcoml
aaa
aaa
mov
mov
mov
inc
mov
xchg
pop
std
xor
cmpsb
push
cmpb
jmp
js
jo
sub
mov
stos
jge
int
mov
xchg
inc
pusha
clc
and
jmp
mov
shll
lds
in
push
scas
jp
mov
jp
mov
xchg
pop
sbb
or
loopne
int3
xchg
inc
loop
mov
sub
add
mov
push
leave
int
mov
push
es
dec
pop
lods
movsb
pop
in
jg
icebp
addr16
popa
push
jne
shrb
mov
cmp
movsl
cmpsb
sarl
in
sbb
push
dec
cmpsl
out
cmp
sbb
xchg
test
mov
sbb
loopne,pn
mov
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
dec
shl
jo
xchg
jg
jo
ljmp
stc
push
jmp
rolb
or
pop
lock
inc
mov
addr16
loope
jne
int3
push
test
dec
ja
icebp
mov
push
mov
cmpsl
jecxz
sti
movsb
cmp
pop
push
push
jae
and
fists
rcrb
repnz
repnz
sahf
mov
mull
push
xchg
rclb
in
insb
subb
dec
ss
xor
ret
cwtl
movb
push
xchg
enter
sub
mov
subl
or
mov
xchg
push
bndldx
mov
movsb
adcb
add
dec
adc
cltd
js
push
jns
push
loopne
pop
sbb
xchg
nop
mov
push
dec
lret
mov
jnp
push
ja
in
adc
jnp
jno
js
sbb
push
gs
cs
and
and
mov
inc
leave
cs
sahf
jbe
mov
lret
test
ds
orl
jp
jae
je
cmp
aaa
push
fldl
pop
inc
push
jns
mov
mov
cmp
dec
mov
lret
adc
or
or
mov
popf
shll
shlb
mov
movsb
bound
mov
jbe
push
test
aaa
add
mov
fildl
shr
jle
mov
pop
outsl
jb
arpl
daa
add
mov
cmp
pop
cmc
lret
lea
into
ds
xchg
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
mov
or
sbb
stos
iret
iret
and
in
cmpsb
sbb
sbb
ljmp
add
int
xor
stos
or
out
ja
mov
sbb
lret
dec
add
sbb
jp
mov
add
jl
jg
aas
stos
xchg
imul
mov
xchg
icebp
xchg
out
arpl
repz
dec
sbb
cmp
shrl
mov
dec
adc
pop
dec
inc
adc
jb
idivl
or
sbb
je
push
dec
dec
lret
fadds
mov
scas
xchg
xchg
mov
or
mov
mov
xor
xchg
mov
cmp
test
loop
jg
js
mov
jecxz
popa
mov
stos
jle
dec
popa
or
xchg
loopne
scas
loope
es
je
es
pop
add
stc
pop
adc
inc
sahf
adc
sbb
test
dec
push
insl
add
ficoml
lret
test
enter
push
mov
dec
loope
sbb
leave
mov
xor
sbb
pop
popf
inc
dec
inc
stc
in
call
mov
jns
test
daa
imul
cmp
jae
push
mov
mov
into
pop
dec
in
movsb
xor
mov
rcll
imul
or
popa
sub
add
or
fcoms
enter
test
int3
add
iret
xor
push
push
lds
test
out
aas
mov
ret
push
add
popf
mov
js
aad
mov
mov
mov
gs
cmp
push
mov
inc
add
mov
mov
xor
aad
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
cld
jo
jb
jo
cmpsb
dec
loope
sub
add
pop
and
pop
inc
add
and
inc
push
push
jno
jp
cmp
jae
jg
sbb
mov
lock
les
xor
fists
negl
rcrb
cmp
sbb
rcrl
sbb
sub
pop
xchg
or
mov
cmc
xchg
push
imul
lret
or
push
push
sahf
sub
popl
into
int3
jo
pop
mov
in
lahf
cmp
int
cmp
fwait
cmc
insl
dec
and
int3
les
jne
lock
ss
xchg
pop
cs
out
mov
in
mov
ds
clc
ss
jle
jmp
iret
cmp
jnp
adc
mov
fs
sub
jo
cmp
stos
in
xorb
lods
lods
stos
in
in
sub
dec
and
mov
push
lret
fs
notb
mov
cld
and
out
hlt
push
inc
dec
cmp
in
inc
jle
adc
mov
das
cltd
out
out
out
or
jb
test
int3
das
pop
or
xchg
lret
fwait
jnp
cmp
test
jp
iret
jmp
test
sbb
repz
inc
add
sbb
out
pop
inc
inc
push
les
stos
dec
lock
mov
pop
or
jle
mov
lods
hlt
sbb
subl
inc
mov
fisttps
xchg
inc
xor
jmp
jp
out
stos
or
push
mov
jb
shlb
popf
lds
cltd
inc
jae
repz
mov
pop
mov
xchg
test
jne
je
pushf
xchg
dec
cmpsl
pusha
push
cmp
xchg
mov
and
test
mov
push
mov
loopne
rcr
es
cmp
sub
push
jbe
sub
jns
pushf
test
je
jne
sti
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
cmpl
jg
jo
and
stos
jns
stc
in
test
popf
inc
sub
xor
iret
sahf
arpl
aas
das
rclb
jb
mov
js
int
jns
or
sub
mov
rorb
inc
mov
push
jp
sbb
xor
clc
cmp
scas
loope
int3
pop
adc
pavgb
mov
pop
mov
lret
add
loope
mov
inc
push
xchg
mov
data16
sub
xchg
sub
ficoml
sarl
sub
jmp
xchg
and
mov
mov
dec
jl
das
fbld
xchg
sbb
adc
and
sahf
jae
sub
pop
inc
ss
mov
ret
aas
out
push
dec
cmc
clc
sbb
ret
pop
lods
jbe
jle
fsubrl
or
xor
add
repz
jl
call
and
gs
nop
inc
jge
adc
xchg
mov
insb
jb
jecxz
adc
pop
fcom
cmp
dec
sarb
mov
ss
xorl
pop
out
mov
sbb
adc
adcl
es
adcl
popf
and
push
pop
shll
setno
pop
mov
xchg
pop
mov
sbb
push
in
mov
out
pop
pop
push
cs
pop
add
or
loopne
cmpsb
mov
f2xm1
push
pop
repnz
enter
loopne
sarl
ja
push
mov
ret
cld
and
inc
pop
xchg
movsb
out
sbb
bound
test
mov
mov
test
test
xorl
ret
pop
xchg
fs
inc
mov
mov
cmpsb
mov
mov
dec
jmp
loopne
xchg
aaa
or
or
movsb
fwait
enter
sub
push
outsl
jl
and
add
jl
xchg
pushf
icebp
dec
jb
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
add
jo
jb
jo
jbe
std
push
mov
mov
push
jge
ss
mov
mov
mov
lods
sarb
mov
adc
js
lea
pop
out
and
dec
mov
push
pop
in
jg
mov
sub
or
bound
jmp
out
cli
enter
mov
outsl
add
mov
adcb
push
test
out
cmpl
mov
daa
mov
sbb
cmpsb
nop
jo
mov
sub
push
inc
push
mov
add
mov
cs
adc
data16
pop
jo
lods
dec
pusha
mov
push
and
cmp
test
fstp
push
jl
adcb
jb
pop
pop
inc
push
xorb
dec
pusha
dec
out
mov
mov
xlat
loopne
stc
mov
sbb
das
xchg
pop
int
stos
bound
leave
sti
roll
cwtl
add
stc
mov
cltd
mov
push
jle
je
in
jmp
mov
popa
mov
pop
adc
mov
fs
cltd
mov
aas
sahf
pusha
hlt
mov
int3
fcomip
adc
jbe
incl
imul
pop
sbb
daa
sahf
dec
mov
push
fsubs
or
sbb
xchg
ja
xor
xor
sbb
xadd
xchg
aaa
lods
aam
fcoms
mov
icebp
ljmp
rolb
movsb
push
adc
cmp
dec
ret
sub
dec
and
mov
mov
popf
loop
sbb
adc
add
icebp
mov
lea
jp
push
xchg
loop
inc
pop
bound
add
or
jl
inc
mov
mull
in
jecxz
push
and
fbstp
jmp
dec
int
fistpll
pop
mov
sbb
inc
lret
test
mov
xor
jmp
jnp
xchg
les
sub
and
push
xchg
jb
jo
mov
hlt
inc
push
shll
notb
mulps
test
mov
lret
and
push
jmp
fidivl
jno
mov
adc
jg
xor
cmpsb
js
out
popa
pop
repnz
js
mov
imul
pop
aad
dec
push
jmp
jmp
adc
add
xor
jno
push
inc
mov
adc
inc
adc
push
fwait
push
int3
popf
cmpsl
pop
jo
je
push
xchg
fyl2xp1
sub
lahf
lret
repnz
bound
addb
je
cmp
cmp
xchg
mov
adc
lcall
into
xor
cmp
hlt
cmp
xor
inc
int3
cmp
sbb
pusha
cmpsl
into
mov
cmp
shrb
shll
mov
jmp
aas
cmp
lret
pop
cmp
jnp
add
dec
sub
sub
add
mov
and
xchg
rorb
stos
xor
movsb
inc
aam
nop
adc
jp
lds
frstor
and
out
shll
fdivl
fcmovnb
enter
cli
sarb
pop
sbb
mov
add
es
outsb
sub
add
pop
sbb
mov
iret
sbb
adc
pop
inc
stc
xchg
repnz
mulb
adc
out
push
test
mov
clc
inc
lods
xchg
fmuls
adc
mov
sbb
jb
inc
fnstenv
ficompl
hlt
outsl
popf
pop
mov
cmp
mov
or
fildll
pop
popa
sbb
pusha
call
nop
add
and
outsb
dec
cmpl
xor
ss
lret
fwait
loop
cmp
in
inc
jne
cmp
and
add
push
or
loopne
pop
jle
or
push
push
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
ror
subl
leave
jle
jo
pop
ss
xor
outsl
inc
jmp
inc
in
xor
add
inc
lock
mov
inc
dec
orb
das
xchg
push
and
xchg
xchg
flds
cmp
test
xor
jmp
arpl
jae
outsl
gs
mov
leave
push
push
clc
addb
ret
adc
fs
xchg
mov
or
xor
jno
sti
jg
sbb
ret
das
outsb
jb
fadd
mov
xchg
mov
ffree
lea
enter
scas
pop
add
sub
pop
and
mov
inc
lds
adc
dec
stos
push
sub
jl
mov
pop
xchg
insl
outsl
jp
add
jmp
adc
je
notl
popa
lret
das
or
cmc
inc
lret
xor
xchg
xor
sahf
sub
jle
enter
cmpsb
mov
xchg
mov
dec
pop
sub
xchg
adc
pop
fs
lds
sahf
sub
pushf
test
or
sbb
sbb
push
add
push
cmpsl
das
rcrb
xor
jp
jle
and
jecxz
pop
dec
sbb
orl
fwait
imul
or
in
push
clc
add
shll
mov
cmp
cmp
outsb
sbb
mov
xchg
xor
sub
dec
push
fisttps
icebp
sbb
popl
dec
stc
cmp
popf
clc
icebp
out
clc
mov
and
fsubs
push
inc
das
mov
loop
jne
xor
lock
repnz
imul
call
dec
push
jns
fnsave
mov
push
xchg
dec
push
loop
mov
jae
mull
jge
push
fsubl
cmpsb
mov
mov
sti
mov
leave
inc
jb
call
jmp
js
into
xchg
jecxz
stos
and
push
leave
xchg
xchg
stc
inc
divl
mov
xor
xor
out
lret
push
aad
mov
fwait
sub
adc
leave
and
aam
cmp
lods
dec
mov
outsb
adc
imul
jbe
fst
enter
lahf
xchg
adc
cmp
fcomps
push
push
inc
jge
add
aad
aad
outsl
or
ss
inc
sbb
mov
sti
data16
leave
xor
xchg
rcrl
and
adc
add
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
fildl
test
xorb
jle
jo
lods
fdivrl
test
add
push
into
lds
mov
mov
xchg
sbb
clc
loopne
ret
inc
stc
sbb
frstor
sahf
cmp
in
fidivs
ja
mov
lea
mov
cltd
outsl
push
adc
pop
es
and
pop
aas
stos
jne
mov
das
shl
stos
cli
inc
cmp
cmp
in
dec
sbb
jnp
cmp
lods
mov
cli
dec
mov
js
aaa
cmp
mov
push
mov
inc
mov
sbb
sbb
mov
out
nop
roll
push
lret
aam
stc
frstor
iret
push
lcall
inc
inc
lcall
ljmp
dec
xchg
rcr
pop
test
je
imul
mov
mov
bound
loopne
jecxz
push
xchg
or
jp
sub
jb
movsl
mov
fadd
sub
jnp
loope
and
adc
mov
lret
jge
rolb
test
adc
cmp
repnz
jp
loope
in
push
ja
jecxz
or
ret
jg
ss
imul
and
cltd
mov
mov
out
xor
push
imul
fistpl
divb
mov
xlat
push
pop
push
movsl
dec
fisttps
adc
push
dec
sbbl
jl
lock
cwtl
mov
mov
loopne
xchg
sbb
pop
fidivrl
mov
neg
push
aaa
test
xchg
and
pop
sub
xor
or
aas
cwtl
sti
movsb
cmpsb
jle
add
jle
je
cmc
sub
int3
add
mov
push
andl
and
hlt
add
jae
and
sub
and
jo
pop
sahf
dec
cld
add
std
aas
loopne
push
adcb
xor
pop
push
sbb
cs
xor
hlt
insl
test
adc
aad
in
add
push
mov
jb
mov
sub
shrb
xchg
out
scas
pop
push
dec
pusha
fsubr
outsb
les
nop
pop
jne
add
jmp
ja
and
dec
xchg
sbb
leave
jle
jo
mov
jne
mov
mov
out
lret
subb
scas
std
std
stc
gs
or
loope
fs
cwtl
leave
jno
inc
leave
xchg
pop
int
loop
push
pushf
stos
jb
push
adc
push
cmpsb
xor
sub
xlat
shll
fs
out
subl
add
jecxz
add
test
test
mov
gs
add
add
pop
pop
inc
lea
pop
bnd
or
mov
push
scas
xchg
pop
bound
andl
pusha
imul
je
cmp
cltd
adcb
cmp
xchg
mov
adc
add
addr16
xor
xchg
cmp
xor
mov
or
cltd
or
or
ret
jbe
loop
inc
dec
popf
pop
push
call
int3
shrl
pmulhuw
aaa
inc
int3
adc
xlat
push
xchg
mov
imul
mov
outsb
loopne
leave
jp
fbld
dec
mov
lahf
dec
and
ffree
ret
dec
bnd
mov
dec
mov
jne
pop
xchg
cltd
les
add
fwait
in
pop
imul
shr
outsl
shll
push
and
mov
lds
insb
dec
cmpsl
adc
push
cmp
add
gs
sti
mov
adc
inc
jae
mov
mov
mov
test
imul
mov
xlat
call
and
leave
popa
mov
imul
sub
push
mul
jo
in
or
push
add
xchg
shlb
push
sub
xlat
and
mov
pop
adc
jl
test
sahf
mov
mov
inc
mov
push
cmp
adc
imul
adc
sbb
xchg
shrb
imul
ficoms
arpl
lods
sbb
jo
cmp
rorb
mov
jne
ljmp
out
or
and
jp
jle
fisttpl
lcall
daa
add
mov
enter
cmp
jecxz
mov
sub
jecxz
ds
xchg
xchg
jnp
push
inc
or
add
fs
imul
inc
sub
bound
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
jl
jle
jo
dec
jge
jo
fildl
xchg
icebp
xchg
jmp
push
jo
mov
xchg
sub
lret
mov
sahf
xchg
js
test
es
cmp
repz
adc
pop
testb
aaa
ljmp
lahf
aas
mov
in
dec
pop
fsubr
push
sbb
mov
push
dec
add
dec
adc
xchg
mov
pop
leave
push
out
mov
sub
sbb
mov
sbb
sub
pop
sbb
gs
sub
rcrl
hlt
cld
inc
push
xor
cld
and
xchg
fwait
out
mov
mov
popa
add
ja
mov
scas
daa
cmpsl
lahf
cld
add
das
test
jmp
mov
mov
out
sbb
lret
mov
pushf
repz
mov
mov
ljmp
cmp
ffree
out
cmp
pop
mov
pop
add
mov
cmpsl
dec
testl
testb
notb
cmc
xor
adc
mov
test
sbbl
into
cmc
pop
or
jno
push
pop
ret
sbb
dec
add
daa
rclb
iret
cmp
insb
lret
fildll
sahf
repz
out
mov
test
inc
inc
loopne
xor
inc
je
cld
pusha
jle
cwtl
ds
add
mov
or
test
sub
data16
ret
test
sbb
adc
outsb
mov
adc
inc
xchg
js
fildl
add
fidivrl
ja
rclb
aam
xor
add
ja
xchg
in
jle
pop
push
pop
add
rorb
mov
sub
dec
pop
shr
jnp
sbb
cmpsl
cmp
and
mov
inc
adc
xor
scas
or
inc
or
cld
mov
in
jns
jp
cmpsl
adc
jbe
mov
xchg
stos
icebp
push
xchg
add
gs
jno
add
repz
iret
test
dec
sbb
test
mov
cmp
push
enter
jg
adc
stc
cs
dec
inc
into
adc
or
or
popf
iret
cwtl
adc
and
loope
stos
loopne
push
or
mov
andps
jg
push
fs
and
rcrb
daa
icebp
xchg
andl
cmc
add
inc
sub
inc
out
fxch
pop
shll
dec
jge
movsb
xor
lret
jle
jnp
mov
outsb
pushl
pop
sub
sbb
xchg
xor
iret
sarl
pop
jecxz
fmul
mov
cmp
or
sub
and
mov
adc
movsb
mov
pop
dec
cli
push
pop
adc
push
xor
mov
add
stos
loope
sub
sub
cmp
cmp
adc
xchg
es
iret
xor
mov
dec
mov
lret
sahf
xchg
out
scas
movsb
dec
xor
mov
inc
sbb
mov
add
in
cmc
push
mov
dec
les
add
xor
xchg
mov
je
sub
outsl
pop
jo
cmp
inc
decb
push
je
or
and
dec
test
cld
lods
lret
mov
popf
sbb
nop
mov
add
xabort
xchg
loopne
jl
mov
xchg
sub
jne
sarb
xchg
call
xchg
sub
xor
ror
cwtl
in
or
mov
scas
push
imul
dec
push
imulb
push
jae
add
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
adc
jo
dec
jge
jo
jo
mov
or
sub
std
push
out
jno
add
mov
and
js
xor
std
daa
shlb
mov
das
out
mov
push
jne
xchg
dec
jo
xchg
call
jl
call
je
mov
pop
movsl
into
in
loopne
das
ss
mov
inc
add
inc
outsl
in
pop
paddw
fcmovne
fbstp
inc
mov
inc
mov
arpl
pushf
jne
push
pushf
mov
push
mov
mov
int3
ror
icebp
lret
push
push
ret
stc
clc
inc
mov
test
loopne
mov
mov
push
pop
push
iret
or
jmp
ss
loop
lret
shlb
mov
mov
not
xchg
outsl
addb
popa
imul
cmp
mov
ret
outsl
inc
push
gs
lret
fsubrs
movsb
jae
lret
into
cmc
insb
add
icebp
cmpsb
add
add
pop
fldenv
stc
daa
cmp
and
roll
outsl
das
cld
andb
or
xchg
scas
adcb
aaa
in
inc
outsl
jl
lods
lret
cmp
mov
adc
in
shlb
in
fldt
pushf
push
mov
or
ficoml
mov
cli
imull
jmp
cmp
adc
adc
jp
or
sbb
adc
movl
fwait
shrb
adc
daa
fwait
inc
addr16
data16
jecxz
nop
enter
mov
mov
xor
pop
xchg
adc
lcall
enter
pop
in
add
jg
in
xor
in
pop
outsl
cltd
and
ds
sti
and
cmp
sub
in
and
xlat
andl
cmp
jp
cmc
dec
mov
cltd
ds
mov
in
cmp
pop
out
out
inc
add
popa
sbb
and
movsb
sbbl
pop
xchg
cwtl
iret
jo
pop
in
jae
inc
iret
or
push
in
mov
leave
sbb
xor
mov
movsl
ss
mov
xchg
repz
cmpsl
or
fnstcw
cmc
lds
cmp
aas
sbb
gs
popa
mov
ja
bnd
pushl
or
mov
outsl
add
mov
pushw
inc
pop
pusha
push
lds
lods
cmp
je
movsb
and
mov
pop
shll
repz
adcb
add
outsl
pop
xchg
mov
cs
jp
daa
outsb
sbb
outsb
arpl
mov
jae
cmp
or
out
mov
jmp
and
inc
std
push
cmp
jge
fildll
adc
inc
rcrb
cmp
in
in
jo
mov
xchg
and
pusha
push
mov
or
addr16
mov
xchg
lcall
out
mov
iret
inc
out
adc
cli
fldl
loop
addr16
cmp
repnz
inc
into
jl
imul
out
push
cs
stos
rcl
jne
out
mov
aaa
les
inc
clc
je
adc
cmp
popf
or
sahf
jecxz
lds
insl
test
in
xchg
sbb
dec
mov
popa
cmp
cmp
movsl
or
cmp
mov
pop
and
push
ljmp
lcall
xor
cli
cmpsl
std
jb
inc
xor
lahf
dec
dec
inc
pop
int
mov
fistps
add
lock
pop
xor
mov
inc
orb
mov
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
stos
mov
dec
jge
jo
aad
leave
rolb
jge
lahf
mov
mov
jmp
cmpsl
or
add
cmp
xchg
and
roll
addb
dec
mov
sbb
jno
addb
mov
mov
mov
adc
test
idivb
js
jo
and
cli
in
jnp
icebp
mov
outsl
out
loope
push
roll
adc
mov
mov
sbb
jne
cli
pop
pop
xchg
insb
jg
movsl
mov
mov
fwait
lret
mov
xor
push
in
cmp
push
outsl
sbb
cmpsl
mov
sbb
ficomps
push
cs
add
in
lods
add
out
mov
aaa
add
test
cmp
sub
or
out
rcl
sub
mov
adc
ja
cmp
and
inc
push
out
sbb
sub
imul
xchg
rcr
xchg
or
dec
addr16
aad
ret
or
es
sbb
pop
mov
sbb
sub
outsl
faddl
adc
je
ja
push
push
pop
rorl
repnz
cmc
sti
pop
push
inc
push
and
inc
popa
loop
mov
add
popf
repnz
mov
ja
add
push
mov
mov
lock
push
xchg
mov
mov
xchg
pop
push
or
jbe
mov
mov
shl
movsb
das
push
sub
sub
or
xor
sub
call
outsb
xorl
jecxz
xor
jge
sub
das
jne
sar
jnp
outsl
ds
cwtl
idiv
or
mov
mov
xor
sub
fmull
sbb
mov
js
inc
cmp
xchg
jmp
pop
push
stos
in
insb
xchg
adc
adc
sbb
mov
sbb
mov
in
xchg
subb
pop
jno
mov
fs
loope
pop
push
leave
push
popf
mov
jecxz
jae
faddl
flds
mov
mov
cmp
mov
ret
or
fs
mov
mov
push
clc
ret
adc
loop
divb
sti
pop
mov
mov
push
mov
mov
and
pop
leave
mov
out
adc
stos
out
test
jle
mov
or
aam
jns
loop
movsb
adc
jbe
lock
xchg
xchg
adc
lds
adc
popa
sub
sarl
loop
outsb
xor
lret
subl
add
pop
xor
mov
jo
ds
std
in
loopne
out
ljmp
jno
xorb
out
mov
cmpsl
imul
dec
test
xor
and
or
add
mov
or
arpl
ds
xchg
add
jmp
jns
mov
pusha
in
movsb
dec
push
pop
pop
jp
inc
repz
jmp
lahf
add
xor
fwait
cmp
mov
add
add
xchg
pop
inc
out
insb
cmpb
jno
add
inc
je
in
daa
cmp
mov
sbbl
push
dec
inc
xlat
xor
pop
push
jnp
iret
icebp
adc
sti
xchg
subl
ja
push
mov
imul
mov
incl
lret
mov
mov
mov
jmp
xlat
frstor
pop
testl
mov
stc
xchg
jo
dec
jge
jo
lds
sbb
shlb
or
jno
pop
enter
mov
xchg
or
popa
leave
and
xor
jmp
push
jecxz
stos
jb
push
shr
jge
xchg
in
loope
std
aas
test
pop
pop
push
aas
subb
jmp
outsb
enter
jnp
addr16
test
sub
and
inc
and
push
in
icebp
mov
cmpsb
lahf
popa
scas
xor
inc
jecxz
push
into
and
mov
cmpl
mov
outsl
jl
push
and
mov
cmpb
xorb
adc
jb
mov
lret
ljmp
cmp
pop
adc
add
add
jno
lret
int3
xchg
cmc
in
stos
and
mov
lea
mov
in
pop
sub
cltd
cmp
loope
mov
jbe
pop
aaa
jmp
adc
and
pop
sbb
inc
iret
call
je
sbb
sbb
je
mov
jmp
mov
lds
sahf
sahf
push
inc
jo
xchg
and
sub
sub
mov
dec
out
mov
mov
or
xchg
inc
jle
xlat
add
or
inc
push
aad
or
js
pop
push
out
adc
jnp
jg
cltd
inc
inc
mov
popl
arpl
arpl
scas
dec
and
and
mov
pop
loop
in
call
or
leave
sbb
mov
cltd
int3
lock
sub
stos
into
jo
dec
cmp
push
rcrl
inc
js
jp
inc
xchg
xorb
divl
mov
adc
aad
sub
xchg
mov
ja
pop
pop
in
paddd
mov
lea
int
jne
push
or
in
cmp
jne
mov
jge
ljmp
jl
pusha
outsl
mov
push
sbb
imul
cmp
push
mov
les
inc
ja
std
pusha
mov
mov
lea
adc
cmp
fldcw
out
pop
cmp
sub
mov
ret
inc
in
into
mov
subl
shl
sbb
push
add
inc
loopne
cmpsb
out
pop
dec
es
mov
mov
xchg
ljmp
ret
mov
or
orb
cwtl
test
mov
xchg
sub
add
mov
adc
jmp
push
aam
lahf
mov
fistpl
mov
add
popa
sbb
fmul
sub
mov
mov
sub
jae
es
jmp
mov
outsb
push
faddp
mov
jbe
inc
fsubp
sbb
push
in
xchg
pop
pushf
test
hlt
cltd
ja
push
cmpsl
mov
xchg
int
lahf
xlat
add
mov
pop
ljmp
in
add
sti
addr16
sbb
jle
popa
push
andps
iret
dec
fcoms
dec
adc
fisubl
dec
cmp
movsw
xor
pop
insl
lret
sub
loop
xchg
add
or
or
clc
or
xchg
jl
and
repnz
push
or
arpl
mov
in
push
add
sbb
add
fwait
mov
jecxz
dec
inc
mov
popf
mov
mull
divb
sbb
add
mov
add
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
int3
xor
add
sahf
jo
dec
jge
jo
sbb
mov
sbb
rcll
cld
lods
xor
push
and
mov
xchg
mov
test
into
cli
dec
lahf
mov
pop
xchg
jmp
xchg
pop
xorl
adcb
scas
ret
dec
cmp
push
and
sti
push
std
mov
je
push
cld
ficompl
lods
sar
pop
lahf
aaa
pop
push
or
jo
das
addr16
xchg
std
add
addb
ret
cli
push
xor
xor
jg
mov
mov
addb
add
test
xor
jg
sbb
sti
push
nop
xlat
ret
mov
and
in
outsb
mov
popf
mov
aaa
pushf
ficoml
mov
and
sti
mov
cs
or
inc
outsb
lods
sub
cmp
ret
mov
xchg
push
and
push
outsb
adc
xor
in
dec
rclb
xchg
daa
xchg
in
push
fimuls
inc
cld
add
push
lds
xchg
mov
push
jecxz
pop
inc
and
cmpsl
pusha
cmp
stc
mov
ret
int
cmpsl
mov
mov
inc
push
mov
cs
sahf
dec
stos
dec
pop
push
adc
adc
jne
stos
shll
inc
cmp
xchg
ret
mov
or
sbb
push
cmpb
xchg
repz
stc
fwait
mov
imul
and
dec
pop
in
sbb
fcoms
pop
pop
cmc
cwtl
pop
add
xor
jg
and
sti
ret
pop
hlt
sub
mov
add
xor
add
fcmovbe
ljmp
lods
sbb
movsl
push
cmp
adc
mov
and
sbb
push
sbb
lret
add
xchg
inc
and
out
sub
imul
rcll
xchg
add
or
jecxz
xchg
jb
mov
and
mov
sub
push
sbb
int
std
roll
push
dec
xchg
cmpsl
cmpl
adc
mov
cltd
ds
fcmovne
adc
sbb
insb
ret
rorb
push
mov
mov
stos
enter
jbe
mov
dec
cmp
popa
insl
fwait
cmc
ja
sbb
stos
nop
sbb
pop
test
mov
loop
xchg
xchg
push
xchg
sub
add
pop
add
mov
repz
jl
mov
int3
adc
into
inc
push
fsub
push
jnp
lea
pop
adc
pop
jae
push
mulb
inc
dec
js
mov
test
mov
leave
pop
stc
and
rcrb
xor
loop
cmp
test
mov
popa
mov
xor
adc
iret
daa
in
les
ljmp
sub
shlb
test
and
daa
sbb
mov
push
repnz
push
ss
popa
movb
lock
pop
xor
nop
leave
xlat
cmp
lods
sti
fsubrs
imul
sbb
in
sti
test
movsb
mov
cmp
rcr
cmpsb
outsl
popa
and
dec
lea
in
or
mov
xor
mov
adc
xchg
dec
hlt
popf
rcl
fmuls
mov
add
pop
int
fisttpll
std
pushf
repz
pop
push
jne
mov
mov
outsb
jp
mov
movsl
jns
aam
out
mov
dec
icebp
sbb
lcall
xchg
sub
and
jl
ss
aam
or
cli
and
arpl
jb
js
pushf
stos
and
xor
jg
int
pusha
cmp
sub
cmp
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
ficoml
lcall
stos
rcrb
lahf
push
cmp
fldt
or
mov
cwtl
xor
aas
mov
daa
loop
push
jnp
jno
outsb
enter
adc
push
push
mov
call
xchg
sub
push
int
inc
in
sub
mov
cmp
dec
sub
jbe
xchg
rclb
xchg
repnz
mov
or
adc
push
lret
sahf
aam
mov
cmpsl
movl
jle
and
inc
je
lret
jecxz
shlb
inc
dec
scas
jno
jg
xchg
insl
mov
sarb
ret
pop
mov
sti
repnz
xchg
and
xchg
sbb
inc
je
mov
loop
pop
inc
jl
adc
cmp
add
in
sub
stos
mov
mov
pop
divl
add
pusha
mov
sbb
std
push
test
enter
cmp
cmp
or
or
repnz
dec
push
xchg
std
leave
lcall
xor
fsubp
xchg
push
fbstp
shlb
adc
dec
push
mov
sub
mov
inc
sbb
jp
mov
xor
adc
xor
jnp
and
push
popa
push
out
pop
cmp
jb
test
pop
sbb
sub
gs
xchg
inc
pop
test
fmul
mov
xor
mov
mov
sahf
stos
sub
outsl
mov
sub
cmp
push
inc
je
mov
pop
pop
mov
adc
scas
pop
mov
xchg
xchg
inc
xchg
sbb
fcmovu
pushf
or
mov
loop
call
adc
test
leave
lret
or
jp
dec
call
js
mov
je
out
outsl
inc
call
sahf
ret
hlt
mov
mov
test
jmp
push
mov
adc
ljmp
andb
adcl
dec
adc
pop
js
sub
xchg
push
mov
test
add
lods
lcall
roll
xor
ret
or
mov
mov
cmp
loopne
cld
addr16
dec
dec
cmpsl
insb
data16
mov
mov
and
lods
xchg
data16
add
cmp
sbb
repnz
xchg
jb
dec
fldt
pop
mov
dec
add
lods
push
and
jp
ja
out
inc
enter
add
test
cmp
ret
lods
roll
nop
xor
ljmp
pushf
rorb
pushf
cmp
daa
sbb
adc
inc
mov
cs
lcall
adc
xchg
dec
das
mov
adc
dec
adc
mov
dec
test
subb
sub
jnp
lret
adc
arpl
cmpsb
cmpb
pop
lret
xor
imul
les
and
and
stos
jecxz
ss
push
das
rcrl
inc
into
mov
pop
stc
push
or
push
cmpsb
add
xor
jno
sub
aad
lahf
cmp
fmull
add
dec
out
insb
mov
lcall
cmp
sbb
pop
testl
sub
add
aas
push
clc
inc
mov
pop
dec
out
pop
adc
cmp
pop
ret
adc
xor
add
sub
and
add
inc
lret
decl
sub
lret
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
out
cmpsb
jo
dec
jge
jo
sbb
roll
jle
bound
daa
mov
loopne
inc
or
lock
and
insl
lods
ja
jns
mov
pop
or
jnp
inc
ljmp
fwait
ja
mov
and
pop
sbb
shll
pop
imul
addr16
push
push
xor
mov
scas
mov
sub
and
lods
inc
jbe
or
daa
sub
xor
mov
rcll
jae
pop
jae
jle
lods
aaa
sar
loopne
popa
xor
adc
mov
cmpsb
inc
mov
mov
int3
xchg
hlt
cmp
adc
xlat
ret
ficoml
out
jbe,pt
outsb
jg
mov
mov
out
xchg
add
outsb
adc
lret
jecxz
mov
push
mov
inc
xor
push
cmp
push
push
adc
or
sub
sub
xor
repnz
sbb
jg
mov
inc
cwtl
fistpll
xchg
xchg
fstpt
imull
mov
call
rolb
pop
repz
xor
sti
addr16
out
jne
inc
add
scas
gs
xchg
jne
adc
inc
fdiv
cmp
inc
xor
mov
test
jmp
repz
xchg
dec
lcall
xchg
test
xchg
adc
xchg
icebp
xchg
add
repnz
in
push
add
lods
into
xor
jecxz
and
jo
lret
scas
loopne
mov
in
fstp
daa
xor
mov
rcrl
jl
mov
js
ret
enter
fistl
mov
nop
enter
jp
clc
insb
adc
cmp
imul
dec
shrl
lcall
stc
xchg
push
push
pop
lret
xchg
ficompl
ljmp
fwait
mov
dec
jmp
inc
fidivrl
or
xor
into
mov
or
mov
add
xlat
test
sbb
mov
xor
fistpl
dec
movsl
and
or
test
dec
fs
cmpsl
xchg
in
add
test
aas
stc
xlat
adc
or
and
cld
imul
sub
mov
loopne
adc
in
into
cmpsb
sbb
and
ljmp
sub
adc
mov
leave
add
pusha
dec
mov
xchg
sbb
mov
xor
aaa
jbe
jl
jle
fdivrs
mov
jg
cwtl
cmp
fnstsw
and
rorl
mov
lret
xor
cwtl
sub
and
cmc
push
fucomi
xlat
in
adc
call
test
icebp
pop
xor
xchg
cltd
pop
push
test
ds
mov
out
dec
mov
fmulp
sub
jae
mov
faddl
cmp
mov
repz
pop
test
and
xor
xchg
jns
push
cmp
xor
cs
push
iret
in
ljmp
push
mov
cmp
cmp
faddp
cmp
sub
mov
je
outsb
loop
jo
lds
push
mov
ret
pop
pop
inc
data16
ret
repnz
das
cmp
sbb
mov
addr16
mov
movsl
cmpsl
fistps
xchg
inc
xchg
lods
cmc
pop
inc
push
pop
fdivrp
and
mov
jbe
aad
and
adc
repnz
ds
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
sub
jo
jge
jo
inc
pop
cmp
in
xor
jbe
and
lret
inc
inc
icebp
in
jae
push
mov
mov
das
jb
inc
xor
inc
add
adc
loope
std
sub
mov
cmp
mov
pop
xchg
mov
nop
adc
repnz
mov
pop
xchg
xchg
dec
push
adc
adc
inc
or
sub
xor
sti
pop
pop
sub
xor
js
cmp
xchg
aas
rclb
cs
push
and
sub
js
fildll
ja
mov
sbb
or
ret
ljmp
xchg
imul
xlat
ret
sub
movsl
imul
dec
insl
rclb
loopne
jmp
cmp
cmp
wbinvd
sbb
mov
ds
shll
xor
pop
mov
in
sahf
add
aas
aam
stos
adc
xchg
in
leave
stos
aam
mov
lods
dec
sahf
adc
lret
push
mov
mov
ja
aad
and
dec
mov
movsb
test
xchg
scas
adc
fwait
and
call
pop
cmp
mov
inc
jge
inc
fnstcw
adc
lret
arpl
cmp
outsl
int
xchg
cmp
jbe
cmp
pop
jp
shlb
add
xchg
pop
fidivl
and
lret
pop
mov
jmp
stc
fcoml
insb
js
movsl
push
or
stos
xor
mov
sub
test
cld
push
dec
js
dec
rol
jnp
sbbb
push
fdivr
pop
and
in
push
sbb
arpl
jnp
push
stos
pop
xchg
cmp
mov
aam
popa
inc
jnp
ljmp
jle
out
mov
out
shrb
hlt
pop
sahf
cmc
inc
das
mov
lret
fiadds
sub
pop
mov
lea
mov
jae
daa
pop
hlt
gs
cmpsb
bound
jnp
jbe
and
pop
fsubp
dec
mov
icebp
xlat
cmpsl
addb
daa
adc
cmpps
sti
xor
mov
or
inc
in
fidivl
sbb
popf
ret
idivb
dec
hlt
pop
jo
mov
push
sahf
testb
push
enter
nop
fimull
jo
sub
loopne
sti
stos
aas
push
xor
cli
fs
mov
lahf
sbb
push
and
adc
sbb
sub
cltd
int3
xchg
mov
adc
or
xor
pop
cmp
add
cltd
jne
shl
cmp
sbb
mov
out
mov
mov
mov
push
lds
icebp
xor
lods
add
pop
cli
sub
mov
aam
pop
sub
push
repnz
sbb
sahf
gs
jmp
jo
cli
adc
mov
test
jge
mov
mov
fcmovne
sub
nop
push
dec
inc
and
mov
inc
lods
push
lcall
fdivrl
negb
dec
lea
jnp
dec
cs
std
lods
sahf
mov
jmp
jo
out
mov
pusha
testl
out
push
movsb
push
cmp
xchg
mov
int
loop
mov
ds
xchg
adc
dec
lock
and
jne
cmpsl
xor
mov
xchg
xchg
add
sub
loop
inc
lahf
push
jae
inc
test
jnp
dec
sbb
xor
push
andb
sti
lds
xor
mov
fnstenv
add
or
mov
add
fdivp
orb
rorl
cmpb
xchg
jge
cmc
jle
inc
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
jne
inc
mov
jo
dec
jge
jo
addr16
mov
dec
ret
test
adc
andb
xor
cmpb
add
mov
sub
pop
pop
or
repnz
xchg
in
orb
pop
sbb
jb
mov
sbb
and
add
cmp
fldt
mov
cltd
aas
out
mov
testb
ljmp
lods
sub
dec
pop
rorl
mov
cmc
popa
jne
pop
repnz
push
mov
and
imul
jno
jb
adc
sub
pop
leave
jb
sub
push
jns
mov
pushf
test
or
sbbb
sbb
call
out
notb
jb
jb
jbe
leave
aad
ljmp
push
adc
push
mov
out
pop
mov
in
int
xchg
insb
sub
jl
push
dec
dec
mov
add
adc
xchg
cwtl
pushf
or
sub
hlt
es
imul
add
xor
lcall
cmp
sub
mov
inc
out
mov
test
loope
lods
add
jb
bound
imul
adc
mov
mov
sbb
mov
arpl
outsl
cmp
ljmp
nop
xor
mov
xchg
adc
das
jg
sbb
dec
out
cli
stos
xchg
stc
and
sub
in
push
in
and
leave
imul
or
mov
insb
pop
sbb
mov
xchg
int3
inc
leave
mov
popl
out
mov
dec
push
or
inc
mov
mov
jnp
sub
lea
sbb
cmp
dec
inc
sbb
leave
mov
adc
cmpsb
fsubs
and
push
push
dec
xchg
stos
sub
inc
mov
push
adc
rcrl
cmp
sti
or
push
inc
fs
pushf
jmp
int
and
in
mov
scas
pop
cli
cli
push
dec
lcall
inc
pop
in
insl
es
pusha
imul
pop
cmpb
pop
push
xor
cmp
pop
iret
mov
testl
sbb
lret
add
es
sub
add
shlb
lret
sbb
and
aam
dec
push
inc
ds
pop
jp
daa
add
cmpsl
push
cmp
push
mov
repz
lret
sub
xchg
mov
jmp
sbb
insl
inc
mov
les
adc
sbb
movb
shll
rclb
inc
daa
push
test
inc
shrl
pop
scas
rorb
repz
cmp
add
mov
das
adc
dec
mov
push
jnp
mov
insb
sub
ss
ds
in
sbb
mov
sub
sub
mov
stc
and
jle
pop
repnz
and
mulb
inc
and
in
cld
jl
shll
mov
or
fsubrp
sub
dec
add
stc
cmp
rorb
insl
pop
inc
mov
cmp
pop
arpl
pushf
cs
dec
bnd
ja
int
repnz
sti
bound
lea
imul
in
fmul
jecxz
sbb
cld
push
xor
or
pop
or
fmuls
fwait
push
add
mov
sti
repz
les
sub
xchg
or
stos
push
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
movsb
lods
xchg
stos
jo
dec
jge
jo
into
cmp
adc
cmp
xlat
sbb
dec
dec
cs
je
insl
sbb
add
mov
popf
rcrb
out
aaa
inc
mov
push
jg
pop
or
in
and
ss
add
int
jl
loop
enter
mov
fistl
cmp
or
out
mov
imul
mov
popa
jmp
sbb
shlb
jmp
mov
pop
and
lock
mov
mov
outsb
dec
fstps
jp
ret
sbb
jp
scas
inc
cwtl
mov
push
jle
imul
into
fcmovb
jne
jmp
repnz
or
inc
xor
lret
rcr
lea
cmp
stos
pop
lea
or
movsb
dec
fidivs
push
jl
test
inc
mov
je
push
aam
sbb
fisubrl
jns
sub
lea
ja
mov
jge
mov
xchg
clc
mov
dec
arpl
inc
les
es
stc
nop
sbb
pop
fidivrl
xchg
into
ljmp
out
cli
cmp
jge
xor
enter
cmp
sub
mov
movsl
cwtl
push
add
jno
xor
or
gs
mov
nop
xor
xchg
lret
inc
jl
pop
sti
sahf
push
lods
sbb
cmp
jnp
fucomi
cmc
pop
sub
ja
jb
sub
adc
fistpl
xor
sub
or
or
dec
ss
mov
sbb
ss
ja
mov
pop
idivb
pop
jmp
pop
jl
push
and
push
outsb
les
sbb
lahf
jge
add
and
and
jmp
jb
notl
jg
inc
xchg
and
push
lret
mov
mov
aas
outsl
ret
clc
ja
lods
mov
push
repz
loop
jne
lcall
inc
pop
je
cmp
xlat
sub
mov
test
push
cmpb
lock
pop
insl
fwait
jle
les
xchg
xor
mov
mov
or
lods
mov
or
dec
lahf
pushf
adc
sbb
out
adc
adc
stos
xchg
mov
mov
lret
or
into
dec
and
xchg
or
jmp
sbb
lods
cmp
or
xor
in
pop
push
popa
sub
inc
push
std
outsb
inc
fbld
fwait
cs
push
cmp
and
pop
add
fwait
popa
rclb
add
popf
das
outsb
les
inc
dec
cli
sbbb
ds
mov
std
adc
dec
xor
shl
leave
ficoml
jbe
shll
dec
mov
inc
and
aad
shl
rep
sbb
movsl
add
dec
outsb
pop
andl
mov
adc
jge
sbb
sbb
jne
test
negl
out
shlb
int3
pop
ret
call
jno
xor
dec
or
movsb
ror
fcompl
mov
push
and
cmp
mov
and
mov
arpl
rcrl
xor
cwtl
int
dec
lret
popf
or
mov
and
cwtl
clc
movsl
lcall
mov
imul
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
stc
lcall
dec
jge
jo
loop
xor
loop
push
addl
mov
xorb
cmp
mov
mov
lea
mov
mov
out
int3
mov
in
xchg
pop
mov
jne
xchg
jecxz
inc
cmp
lret
cmp
nop
dec
sub
lds
test
or
add
stos
sub
test
jp
lret
or
jp
adc
mov
sbb
rcrb
mov
data16
out
aaa
xchg
jge
rcrl
jns
stos
mov
std
fdivs
lahf
push
and
jnp
jo
jae
lock
rorb
adc
rcr
cld
imul
jne
jae
mov
dec
jl
dec
icebp
xchg
aas
dec
nop
outsl
rcrl
dec
push
mov
xchg
sub
mov
ja
addb
insb
outsb
stos
sub
push
inc
pushf
cmp
cld
or
mov
imul
xchg
loopne
test
add
ja,pt
dec
cmp
mov
out
test
or
rcrl
mov
imul
xchg
fisubrs
es
bnd
jg
xchg
std
cmp
adc
jnp
xor
addr16
ljmp
popa
push
and
setg
lods
fnstenv
movsb
lds
push
mov
test
stos
mov
and
sahf
cmp
les
push
mov
insb
push
jle
in
pop
into
jle
pop
into
fistpl
cmp
es
sbb
test
add
adc
pusha
out
inc
sub
jns
lret
add
adc
fiadds
add
in
add
pop
jno
xchg
mov
jae
jb
mov
jg
pusha
jae
push
sbb
lock
mov
push
out
fcoms
mov
sbb
add
leave
sub
and
cmc
jmp
xor
or
lea
pop
lret
cli
push
and
mov
jecxz
in
adc
push
in
in
cltd
push
cltd
loop
mov
xor
lods
iret
int
in
dec
inc
leave
test
push
cmp
out
loopne
mov
popf
aas
or
add
outsl
add
xchg
in
loop
pop
call
movsb
std
dec
das
add
or
mov
xor
adc
and
rorb
cmpsl
dec
lcall
in
lahf
rclb
inc
cmp
cmp
je
sar
sub
leave
sub
adc
mov
aas
mov
mov
jbe
ret
sbb
jo
pop
pop
mov
sub
scas
sbb
ss
mov
push
jecxz
scas
aaa
mov
push
adc
fiaddl
add
mov
ret
xchg
fwait
sbb
mov
scas
fwait
cmpsb
cmpsl
in
mov
sub
fildll
ljmp
cmp
sub
mov
push
movsb
in
imulb
mov
sti
lods
add
push
push
push
inc
adc
lahf
mov
mov
pop
arpl
nop
gs
xchg
andl
stc
test
cmp
repnz
into
jnp
data16
add
aam
sub
aaa
sbb
push
sub
ja
loope
testb
jo
inc
jns
pop
adc
loop
neg
repz
jmp
dec
pop
fwait
mov
and
lahf
scas
aam
and
sub
sti
jp
pushf
push
mov
mov
mov
adc
lcall
or
inc
cld
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
push
mov
jo
jge
jo
movsb
dec
xchg
jmp
int
adc
popf
pop
push
mull
mov
dec
daa
mov
cmp
int3
adc
sub
in
push
daa
add
jne
loope
fcomip
adc
adc
movsb
les
push
mov
pop
xchg
cmp
mov
xor
or
imul
cmpsb
mov
sbb
js
test
lds
bound
add
pop
icebp
sub
sbb
cmp
mov
mov
dec
dec
xchg
dec
sbb
icebp
pop
enter
jo
cs
mov
jmp
lahf
ss
aas
push
mov
fcomip
in
fisubl
arpl
jge
orl
nop
pop
sahf
sub
jae
cmp
stos
outsb
rcll
loop
pop
arpl
or
lock
mov
in
aas
push
inc
jae
pop
cmpl
pushf
sub
les
inc
stos
imul
aas
call
loop
fs
mov
xchg
push
int3
pop
in
cli
push
push
mov
add
out
mov
cltd
sbb
or
xor
xchg
hlt
jmp
arpl
pop
sbb
push
outsb
mov
loop
push
insl
mov
fistps
fnstcw
xor
sbbb
shlb
arpl
mull
cmpsb
dec
cmp
and
inc
mov
cli
and
jge
movsl
das
push
mov
iret
add
cmpsl
call
xor
push
jmp
loop
xchg
stc
adcl
dec
dec
sbb
pop
mov
xor
mov
cmpsl
push
fwait
mov
and
pop
mov
and
push
iret
out
dec
inc
or
lahf
out
pop
jl
adcb
jb
pop
testb
test
mov
dec
pop
hlt
psllq
das
out
add
clc
lcall
dec
add
add
push
mov
aad
push
fidivrl
mov
sub
repz
xchg
mov
add
outsl
pop
inc
clc
daa
sahf
mov
xchg
in
jmp
call
cmpsl
push
jbe
push
lea
lods
pop
cmp
imul
cmp
test
jmp
dec
out
push
mov
popa
sub
cli
psrld
add
shl
jne
inc
jbe
stc
push
test
test
push
das
dec
loope
mov
rorb
sbb
adc
fsubl
dec
in
add
fimull
in
sbb
or
test
aas
inc
scas
cmovle
adc
mov
outsb
aam
leave
jmp
mov
pop
and
pop
imul
popa
data16
gs
lods
mov
ret
lock
leave
xchg
pop
fiadds
push
lds
lods
dec
or
cs
xchg
pop
mov
fsubrs
insl
xchg
mov
movsl
mov
jbe
jg
scas
gs
mov
add
xlat
pushf
rorb
int
lahf
ljmp
enter
sbb
stos
sub
ja
mov
mov
xor
cmp
mov
cmpsb
test
iret
fsub
rcl
gs
adc
scas
add
sar
or
mov
leave
enter
pop
ret
addr16
xor
sti
xchg
cwtl
push
mov
jmp
int
cli
sbb
out
mov
sbb
mov
sub
add
mov
and
xor
inc
pop
loope
pop
loop
sarb
add
into
mov
in
cld
mov
adc
loopne
mov
or
or
xchg
lret
shr
xlat
mov
sbb
cltd
sub
jbe
jecxz
je
fs
mov
je
mov
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
rcrb
or
jo
sbb
and
jns
hlt
fnstcw
loopnew
cli
into
sub
push
sarl
stos
jne
adc
outsb
add
sub
in
inc
xchg
mov
push
mov
adc
jo
into
outsl
mov
mov
pop
scas
and
mov
rcrb
mov
cmc
shrb
imul
cmp
getsec
mov
pop
pop
rolb
insb
push
leave
cmp
jmp
fs
or
scas
dec
adc
enter
jmp
adc
mov
jg
out
sbb
lcall
lods
sbb
inc
adc
fsubrs
mov
stos
push
cmc
mov
push
mov
xlat
jns
out
insb
dec
xchg
lcall
popa
pop
scas
mov
sarb
ficomps
dec
dec
in
mov
mov
or
jmp
lods
cmp
mov
mov
sub
jns
xor
js
xor
aaa
xor
xorb
pop
ss
call
push
mov
cltd
sub
inc
dec
xchg
add
jmp
in
dec
xchg
inc
ljmp
dec
addr16
add
adc
in
adc
dec
mov
fldcw
mov
and
pop
adc
test
shll
mov
and
out
xor
jnp
into
out
mov
mov
lods
add
leave
push
sbb
aam
lret
lds
xor
popf
movsl
roll
cltd
inc
mov
cmp
popf
inc
iret
outsl
xor
cmp
inc
inc
xchg
fimull
push
push
clc
into
xchg
adc
aaa
mov
push
pop
jecxz
bound
fisttps
adc
sub
movsb
add
xor
xchg
lret
mov
mov
rorl
lea
in
aaa
neg
mov
push
jo
or
outsl
bound
sub
movl
jge
hlt
imul
mov
insl
add
hlt
mov
outsl
inc
lret
push
mov
cwtl
and
sahf
adc
loop
adc
adc
push
mov
adc
out
dec
dec
push
shll
in
sub
fwait
push
push
pop
add
ret
pusha
inc
inc
into
mov
jg
in
aam
xlat
xchg
mull
sub
lcall
inc
jb
jle
mov
ret
xor
jbe
ret
pop
push
loop
xchg
and
xchg
jl
dec
movsb
aaa
push
lcall
jae
lods
testb
test
and
add
sub
rcr
jle
cs
xchg
push
or
xchg
fimull
lods
push
mov
mov
inc
inc
dec
dec
stos
sbb
imul
xchg
sbb
lds
lahf
loop
mov
pop
aam
std
add
xlat
adc
pop
jns
or
push
xor
sar
sbb
mov
and
pop
push
or
jo
cmp
out
insb
xor
cmpsb
out
shlb
imul
dec
jg
aad
sbb
jmp
movsb
mov
xor
fadd
push
jp
popf
enter
sti
xor
adc
adc
jns
add
adc
mov
pop
xor
jg
aad
ror
cld
cmp
adcl
sub
data16
lds
mov
sarb
in
pop
into
mov
lcall
push
push
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
adc
movsb
lret
jo
dec
jge
jo
sbb
pop
bnd
gs
cld
push
and
inc
pop
pop
test
push
push
xchg
mov
cld
sub
adcl
mov
jmp
popa
inc
pop
addl
fcmovb
pop
jg
icebp
insb
sub
dec
incl
imul
mov
mul
fcom
cmpsl
ret
mov
cli
jl
in
cltd
sub
and
jb
iret
pop
dec
push
push
sub
loope
lods
fcompl
pop
popf
or
outsl
mov
lods
mov
jge
or
sti
fiadds
or
xor
lcall
pop
cld
jns
popf
adc
mov
pop
xor
xor
adc
out
push
xor
aam
out
imul
out
push
stos
add
out
pop
insb
inc
hlt
and
pushf
sbb
add
mov
add
lds
js
ljmp
or
mov
rorl
jge
xor
cltd
ret
mov
adc
jne
loop
ds
dec
pop
add
add
shll
mov
or
and
jo
fucomip
adc
negl
aad
mov
or
xor
cmp
cmp
jnp
jae
rcrl
cmp
andl
mov
jo
cmp
data16
jb
lcall
push
add
push
daa
and
aas
imul
pop
add
fwait
sub
addr16
in
sbb
sub
mov
cmpb
pop
mov
pusha
sbb
enter
push
pop
cmp
adc
lock
rorb
xchg
add
mov
mov
adc
insl
cmpsl
xlat
aas
dec
push
pop
mov
cs
jl
dec
pop
mov
cmp
mov
push
aaa
aas
dec
cmp
js
lcall
mov
or
xlat
cltd
int3
push
xchg
imul
push
xor
sti
mov
sub
fisubrs
sub
iret
cmp
int
pusha
shlb
adc
mov
jae
pop
shl
aad
fwait
inc
cli
loope
incb
lods
std
cmp
sbb
xlat
xchg
inc
movl
adc
fcomps
dec
punpckhwd
leave
and
push
push
push
insl
push
rorl
and
add
pop
repz
movsb
inc
pop
push
mov
mov
movsl
mov
rcll
out
mov
adc
adc
in
or
xchg
aam
nopl
subb
jb
xor
push
pusha
jmp
in
arpl
fnstsw
push
aad
mov
push
je
rcll
cmp
je
lahf
fdivp
out
out
scas
xchg
rcll
addl
add
fstpt
sbb
popf
inc
push
inc
pop
testl
int3
cmp
dec
fisubs
dec
push
in
in
cmc
lods
push
pop
xchg
call
loope
adc
enter
add
jbe
pop
cmp
sub
or
cmp
push
scas
loope
les
xchg
mov
mov
rsm
adc
or
jp
inc
mov
jns
jmp
ret
ja
mov
xor
out
fdivl
cli
or
xor
cmc
adc
sbb
repnz
sahf
inc
fwait
mov
mov
mov
cmp
rcrb
es
loop
int
test
int3
or
fisttpl
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
dec
jg
add
fiadds
mov
adc
out
shlb
in
incl
add
pop
insl
push
mov
lods
cwtl
adc
int
arpl
ds
sbb
lods
pop
dec
pop
sub
sbb
ja
sbbb
jae
push
dec
scas
rcr
add
out
push
ficomps
icebp
dec
stc
mov
push
and
sub
repnz
enter
adc
ds
addl
jno
sahf
pop
mov
jns
scas
xchg
cmp
dec
mov
lods
cs
cmp
push
adc
pushf
sbb
xor
dec
out
xor
ret
lea
rcl
lret
xchg
fldl
mov
cmp
test
call
pop
lea
pop
xchg
stc
mov
pop
aam
jo
or
pop
lcall
rorb
jns
and
xor
mov
adcb
cltd
cmp
pop
andl
ud0
fcomp
add
fwait
scas
cs
mov
xchg
xchg
and
xor
mov
push
inc
scas
adc
lahf
pop
call
mov
add
fidivrs
or
call
sub
sbb
push
push
or
mov
dec
or
jae
sti
leave
test
mov
cwtl
and
push
int3
dec
gs
arpl
mov
cld
icebp
loopne
inc
push
mov
jne
sbb
ret
mov
outsl
fistl
jns
push
lcall
fs
xchg
test
insl
mov
push
mov
nop
icebp
sbb
jo
in
sbb
aad
dec
adc
mov
out
dec
xor
inc
in
fstpt
add
lods
push
cmp
mov
mov
xor
das
xchg
leave
bound
fnstsw
inc
mov
pxor
shl
imul
ret
push
out
fyl2xp1
sub
xor
lock
adc
mov
or
fldcw
xchg
mov
inc
negb
test
jae
and
or
dec
cmp
into
data16
fdivrs
cltd
adc
jg
cltd
lret
rorb
jb
pusha
lds
mov
dec
add
xlat
enter
cmp
imul
aaa
clc
rorb
cmpsl
pop
faddl
movsl
inc
mov
pop
scas
rcl
popf
mov
daa
and
mov
add
jne
xor
jnp
mov
mov
js
movsb
jle
jbe
stc
decl
xchg
cmp
lods
outsb
fbstp
push
cmpsb
popf
sti
pop
adc
lcall
jg
loope
imul
pop
movsl
push
mov
jbe
ret
mov
insb
and
xchg
push
loope
popa
sub
sub
aad
or
imul
and
push
inc
push
lds
sub
add
imul
das
mulb
cmp
xlat
movsb
stos
adc
dec
test
mulb
stos
shr
xor
cmp
xor
jno
mov
inc
lcall
in
das
ljmp
pop
jle
das
jb
sub
daa
stc
mov
sbb
push
jb
jecxz
fs
pop
in
jns
lret
pop
iret
add
lods
sahf
ror
sub
imul
aam
scas
adc
adc
rorl
jne
stos
sbb
jne
sub
scas
sti
jb
dec
inc
clc
std
inc
xchg
push
mov
sti
faddl
fs
aad
fwait
add
sub
sbb
rorl
add
call
add
jae
roll
int
add
dec
jge
jo
mov
testb
cs
data16
jl
ja
add
daa
imul
and
push
jl
inc
dec
mov
inc
mov
out
mov
and
mov
sti
arpl
and
jb
mov
out
pusha
movsb
adc
gs
and
adc
repnz
adc
jl
mov
andl
push
inc
xor
repz
and
sbb
xor
iret
jp
push
xchg
inc
xor
jg
xchg
dec
cmc
idivl
lahf
outsb
mov
add
test
or
mov
lods
pop
js
cmp
fdivl
lret
push
adc
add
nop
lock
push
mov
pop
mov
jns
push
out
std
and
pushf
repnz
mov
daa
jecxz
jo
lds
in
xor
cmp
or
js
jnp
jl
push
lds
pop
aaa
fyl2x
std
mov
call
and
push
mov
lock
mov
pop
add
test
mov
xchg
sub
cmc
mull
ret
nop
sub
test
inc
push
jne
js
mov
fwait
mov
mov
mov
push
and
push
andb
fdivrs
mov
fs
js
jp
sub
lods
outsb
aaa
cmp
sahf
aam
out
mov
jo
pop
dec
xchg
in
sbb
into
jb
push
sbb
mov
jmp
sub
pop
in
cmp
mov
das
les
pop
jns
insb
jno
out
mov
push
dec
addr16
dec
iret
decl
xchg
mov
or
pusha
pushf
mov
xorl
ds
jmp
out
or
data16
pop
pusha
fsincos
orl
std
jbe
ja
pop
call
decl
stos
jmp
fisubl
xchg
and
das
cmp
lret
and
inc
xchg
or
inc
in
sbb
and
lahf
imul
and
outsl
lods
add
adc
mov
xchg
xchg
adc
cmpl
sub
insb
imul
pop
or
je
push
sbb
mov
sbb
sbb
aam
xor
leave
mov
push
fisubl
mov
xchg
cmpl
dec
cltd
ja
in
xchg
in
scas
pop
lea
mov
fwait
in
xchg
cmp
xchg
test
inc
div
cmp
mov
xchg
call
outsl
iret
pop
mov
movsl
add
or
je
push
xlat
fwait
jne
add
xchg
sub
pop
jecxz
fmull
jne
fs
cmp
movsl
or
cmp
or
je
jmp
and
in
sbb
das
mov
jg
xor
push
mov
popa
mov
loope
orl
clc
push
xchg
lock
mov
xor
in
push
xchg
call
rcl
bound
insl
pop
sbb
pop
in
xlat
icebp
lods
std
lret
sub
mov
or
rorl
mov
sbb
out
ret
or
add
mov
lods
out
fsubrl
cmp
or
imul
cmp
inc
cld
and
pushw
cmp
sub
ds
pop
roll
jle
loop
into
sbb
push
pop
mov
sbb
xlat
push
and
xchg
das
cltd
inc
leave
cmp
mov
fcompl
mov
mov
sbb
mov
dec
xor
push
adc
roll
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
fistl
adc
dec
jge
jo
push
cmp
popa
sar
movsb
test
daa
inc
sub
xor
sub
loopne
mov
pop
sbb
push
ljmp
lea
negl
fmull
cltd
mov
push
mov
xchg
subb
dec
fs
mov
mov
insl
add
daa
xchg
fnsave
outsl
push
outsl
xchg
or
dec
adc
jno
and
jno
ss
sbb
sarb
push
imul
icebp
adc
jmp
sub
pop
adc
pop
inc
xchg
pop
mov
adc
mov
mov
push
sarb
xchg
or
jge
mov
pop
out
mov
cli
inc
sahf
add
loope
repnz
pushf
pop
int
jnp
adc
in
int3
ds
scas
inc
jecxz
pop
es
jo
pop
insl
ss
cmp
lcall
fcoms
cmpsb
sub
xchg
pop
cld
ret
test
ljmp
pusha
in
adc
fcmovnb
inc
pop
push
jne
loop
cltd
and
dec
cmp
jno
in
outsb
cmp
repnz
or
jp
xchg
and
mov
push
add
mov
loopne
pop
out
fstpt
inc
test
push
stos
inc
mov
jnp
inc
mov
mov
es
lret
inc
lods
iret
xchg
xchg
inc
outsb
adc
outsb
clc
lods
cwtl
addr16
in
cld
imul
mov
aas
test
pop
notl
nop
mov
mov
jecxz
cmpb
mov
jb
xchg
xor
jle
xchg
adcb
or
cld
pop
rclb
mov
cmc
xchg
mov
and
or
ja
xchg
and
inc
sti
pusha
adc
arpl
std
stos
pop
inc
sub
jp
add
pushf
adc
cmpsl
outsl
push
not
out
gs
sbb
and
sub
js
loop
push
xor
int
fisubl
xchg
dec
dec
adc
xor
fcom
mov
pop
in
sbb
addr16
mov
nop
negl
je
shll
mov
and
mov
pushf
popf
push
in
jg
jge
xchg
jnp
popa
xchg
ja
inc
inc
inc
in
mov
and
loopne
cmp
lea
push
pop
push
adc
pop
cmp
xor
mov
js
pop
sbb
mov
mov
stos
pop
dec
pop
jbe
fmull
xchg
sbb
jne
movl
push
addr16
lods
jmp
sbb
xchg
rclb
lret
and
shrb
cmp
and
cld
push
mov
int3
add
lods
jge
cmpsb
push
xchg
push
fistpl
dec
enter
ljmp
je
shll
js
push
sahf
and
data16
out
loopne
jge
cmp
mov
mov
dec
pop
clc
aam
test
sub
ret
push
jmp
rcrl
stos
ja
les
pop
push
and
xchg
push
fsubl
push
mov
aam
xchg
and
pop
mov
pop
xchg
lahf
sbb
xchg
fistps
rcrl
in
adc
mov
fisubl
push
lds
push
aaa
inc
xchg
popa
mov
negl
xchg
insl
or
xor
fstpl
sti
aad
inc
lods
into
test
sub
addr16
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
adc
dec
jge
jo
cmp
mov
sahf
push
jecxz
push
cltd
mov
sbb
cmp
int
inc
or
mov
sub
xor
xor
xor
int
push
jae
js
lds
test
jbe
adcb
lds
aas
inc
cmc
in
rolb
in
push
pop
enter
shll
outsl
or
sti
sub
idivl
jno
movsl
add
dec
pop
call
sub
or
pop
inc
loopne
xor
divl
push
aas
gs
inc
adc
ds
inc
push
gs
pop
lret
in
jnp
xor
inc
mov
jmp
mov
lods
in
pusha
pop
fildl
or
cmc
inc
dec
adc
jnp
in
and
test
xchg
add
or
mov
xchg
add
inc
add
in
mov
nop
imul
xor
test
push
mov
lds
inc
cmp
push
out
mov
jo
repz
rorl
push
insl
sbb
jns
rcrb
std
dec
in
mov
jnp
xchg
dec
cmp
sbb
stos
jle
hlt
mov
cmpsb
mov
int
push
and
cli
or
dec
int
and
xor
xchg
or
push
inc
and
fcoms
fsub
cmp
mov
add
sti
cmpsl
bound
sub
cmp
mov
ret
push
jae
push
mov
pop
add
xchg
stc
notb
lret
incb
sbb
push
aam
mov
cmp
fiaddl
out
jns
movsl
out
mov
jno
push
mov
adc
or
mov
push
and
xchg
adc
push
mov
or
cmp
arpl
inc
mov
aam
dec
add
cmp
xorb
inc
imul
and
jecxz
addr16
lds
and
mov
sub
cmp
cmp
pop
push
loop
loopne
sbb
fidivrs
xor
loopne
mov
sub
sub
pop
push
ret
leave
js
popf
mov
pop
sub
push
xlat
inc
scas
out
sti
dec
mov
ss
pop
ret
pop
xchg
push
stos
mov
cwtl
ret
inc
jo
testl
xchg
lds
outsl
adc
je
mov
int3
loop
out
cwtl
push
out
lcall
adc
add
test
xlat
mov
call
leave
inc
popa
and
push
rcr
pop
adc
xchg
lds
xchg
enter
jns
test
mov
mov
jmp
insl
sbb
leave
sbb
jg
popa
ret
push
add
mov
js
es
lcall
cli
test
imul
repnz
sarb
xchg
push
pop
aam
mov
data16
xchg
insl
mov
out
sbb
loopne
jmp
rcll
and
inc
push
mov
fcomip
inc
movsb
sub
fmuls
ret
adc
aaa
mov
out
pop
fld
inc
insb
push
lea
and
mov
push
pop
push
rol
scas
jo
test
insb
test
sbb
repz
jp
mov
push
mov
or
ljmp
movsb
xchg
fwait
and
and
stos
jne
or
mov
int3
xchg
insl
xor
mov
xchg
mov
cmp
inc
shrl
and
data16
popa
dec
push
mov
daa
cwtl
rcll
clc
adc
xchg
dec
lahf
pop
xor
jae
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
mov
fwait
xchg
adc
jo
jge
jo
js
inc
mov
roll
es
mov
and
sbb
jno
out
xchg
dec
andl
cmp
rcr
inc
dec
roll
push
cmp
aaa
sahf
jle
push
insl
or
or
sbb
bound
cmp
scas
pop
push
jp
mulb
mov
mov
gs
mov
xchg
notl
pushf
mov
sbb
sub
or
cwtl
inc
loopne
movsb
or
and
insl
mov
loope
and
adc
dec
outsl
cmp
cmp
enter
insb
repz
call
dec
mov
xchg
xor
and
and
adc
jmp
daa
mov
int
enter
out
out
jecxz
dec
shll
loop
into
aad
pop
out
mov
jno
aas
dec
jb
or
mov
fstl
mov
int
lods
shlb
bound
outsb
dec
leave
por
es
pop
test
sbb
out
insb
aam
adc
mov
in
les
adc
addr16
sub
fistpl
jp
xor
mov
add
cmpsl
fucomip
cmpsl
lods
jno
jno
popa
sbb
mov
mov
std
mov
addr16
lcall
call
sahf
xor
aam
mov
repz
mov
mov
mov
or
and
movsl
mov
fnstenv
cmpsb
dec
je
mov
shll
outsb
inc
mov
or
add
and
sbb
jle
sub
sbb
iret
sbb
sbb
stc
mov
or
jp
sub
pop
hlt
mov
cmp
push
repz
fnstcw
pop
mov
xor
fcomi
mov
inc
pop
insl
lea
test
ja
mov
pusha
pop
nop
dec
adc
imulb
inc
cltd
add
stos
dec
xchg
lods
adc
adc
xchg
add
cld
push
pop
flds
adc
mov
aaa
and
scas
push
cmpb
rcr
jmp
sbb
push
inc
stc
cwtl
pop
xor
xchg
push
mov
pop
out
push
xchg
stos
add
pushf
mov
sbb
pop
xor
push
and
mov
inc
mov
jae
push
in
scas
and
lret
sti
ja
data16
jbe
dec
and
std
loope
mov
xor
aad
adc
and
xchg
loopne
aam
cmp
adc
fdivrs
jbe
push
std
and
data16
pop
add
add
mov
cmp
loop
ficoml
jnp
ja
mov
cld
aam
cmp
mov
jns
outsl
js
xor
leave
push
aas
cs
int
lahf
adc
shrb
shll
cli
mov
jae
mov
jmp
popf
cltd
popf
jl
mov
pop
mov
roll
js
hlt
aam
ja
imul
sub
push
pusha
jno
out
mov
mov
iret
mov
les
xchg
ret
pop
mov
add
mov
fnstenv
or
hlt
fistps
test
jmp
rcrb
imul
or
fimuls
test
fs
jle
dec
xchg
xchg
stos
mov
into
ret
sub
lods
test
jecxz
dec
sbb
hlt
push
pop
sub
or
lock
push
in
mov
xchg
push
dec
scas
mov
call
cmp
pop
jp
dec
xchg
cltd
mov
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
