push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
int
xchg
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
in
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
outsb
out
ljmp
push
aas
pop
mov
xchg
mov
pushf
mov
cltd
rolb
shl
lret
dec
xchg
and
inc
add
mov
pop
fdiv
or
in
xchg
cwtl
cmpsb
add
dec
push
push
inc
and
pop
test
cli
test
out
cmpsb
pop
adc
cmp
xor
pop
int
lea
cmp
pop
jmp
jmp
mov
push
jle
outsl
mov
inc
fwait
sbb
mul
xchg
mov
jo
jns
sub
add
dec
test
mov
cltd
lcall
add
ja
fcompl
xchg
rcl
out
les
mov
mov
scas
stos
int
insb
pop
dec
sub
jge
mov
pop
xchg
fidivs
and
adc
popf
mov
cmp
cmp
es
fldenv
cmp
jb
lods
cld
pop
mov
dec
sbb
scas
imul
sbb
icebp
mov
shll
xchg
add
lret
cmpsb
inc
fwait
mov
dec
and
dec
or
inc
ffree
cwtl
adc
mov
mov
movsb
clc
jae
je
insl
push
sbb
cmpsl
cmp
sub
sbbl
pop
cmc
mov
mov
jmp
clc
icebp
mov
icebp
ficompl
ss
jo
jo
push
push
xchg
into
xchg
ja
das
adc
and
jg
jbe
adc
mov
nop
adc
stc
push
jb
lret
aad
lret
mov
add
cmp
jp
sbb
lgdtl
in
negl
ljmp
shlb
outsl
mov
mov
jns
sub
cwtl
lds
leave
jmp
scas
jns
divl
es
loop
mov
out
dec
insb
daa
mov
mov
xchg
je
in
mov
mov
cmp
imul
imul
loopne
mov
icebp
loop
lds
xor
lods
cmpsl
xor
inc
and
int
adc
je
and
jb
xchg
jno
test
ja
outsb
dec
mov
push
push
cmp
aaa
test
xor
mov
stc
rcrl
sbbl
jg
sub
inc
jbe
dec
add
and
mov
adc
adc
pop
mov
cmp
repnz
rorl
mov
fs
xchg
cmp
lret
pusha
pop
adc
mov
inc
xor
inc
xor
pop
inc
push
mov
sub
add
test
inc
gs
sbb
scas
fnstcw
or
adc
jle
mov
add
push
je
cli
xchg
dec
mov
test
cmc
inc
xor
jmp
sahf
mov
mov
inc
adc
in
fs
enter
or
lods
divl
lcall
inc
mov
das
and
lods
push
mov
adc
lds
push
pop
insl
inc
cli
cmp
popf
subl
adc
pop
imul
xlat
push
loop
or
mov
inc
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
fimuls
pushw
jl
jo
jle
jo
mov
dec
add
push
clc
lock
js
cmp
icebp
add
fstps
adc
scas
fbld
xchg
jo
adc
aaa
inc
mov
xor
ffree
pop
repnz
sbb
aaa
pop
int
stos
sbb
mov
mov
add
or
imull
adc
in
roll
ja
pop
pop
sbb
pop
sub
ss
testb
outsl
stos
pop
push
fwait
mov
movsl
test
dec
mov
add
mov
loopne
into
movsl
inc
fcoms
cld
sti
and
loopne
sbb
pop
mov
nop
mov
lods
fsubs
aam
pushf
mov
pop
hlt
mov
inc
adc
nop
ja
lret
cs
push
out
mov
inc
adc
sbb
mov
data16
mov
dec
mov
mov
div
test
xor
xchg
inc
scas
xchg
dec
rcrl
inc
pushf
mov
cltd
xchg
xchg
xor
pop
aam
gs
inc
loop
das
mov
mov
dec
ret
inc
sub
push
addr16
jno
adc
and
xchg
popa
mov
test
pusha
cmp
sub
xor
sub
sub
pop
shll
xchg
dec
mov
fistl
pop
sbbb
call
rcll
dec
dec
ss
dec
xor
push
dec
jne
fwait
xchg
mov
xchg
std
or
mov
je
add
cmp
pop
aad
test
mov
jg
in
adc
mov
rcrl
pushf
rcrl
xchg
xchg
jbe
fs
inc
mov
inc
loop
cmpsb
mov
test
mov
push
push
nopl
gs
pop
roll
sub
lret
hlt
inc
enter
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
push
cwtl
les
jo
jo
jo
jecxz
pusha
dec
push
jg
push
mov
pop
xor
int3
sub
sti
mov
inc
dec
mov
sub
mov
and
pop
insb
mov
and
pop
test
mov
push
jbe
int3
pop
insl
mov
push
jnp
out
mov
sbb
pop
clc
inc
adc
cwtl
mov
or
push
nop
ret
add
mov
cld
in
fisubl
mov
push
ffreep
cmp
xchg
mov
jb
dec
pop
xchg
or
incb
loop
pop
mov
and
fdivrp
mov
in
mov
cwtl
jle
popf
aas
ret
int3
add
mov
fwait
push
mov
ljmp
stos
push
loop
rorb
int
loope
dec
jg
div
fistl
insl
inc
xchg
mov
add
fidivrs
cwtl
ds
mov
stc
lahf
mov
lds
sbb
pop
adc
les
rcll
andb
jns
jp
add
incb
push
in
mov
call
mov
adc
test
jle
mov
call
les
jne
mov
push
adc
mov
sarl
mov
flds
or
add
mov
push
out
jge
mov
icebp
mov
pop
sub
sub
jo
sub
sbb
push
and
mov
pop
add
in
push
je
aam
adc
arpl
xor
ret
pop
xor
and
lods
cmp
jns
sti
outsb
add
mov
jo
cmpsl
rclb
js
stc
lahf
call
movsb
cltd
sahf
insl
adc
sbb
lds
rcrb
mov
push
out
rol
jl
jno
dec
lret
mov
gs
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
js
jo
jle
jo
mov
adc
jmp
nop
in
pop
pop
push
jno
sub
aam
push
inc
out
ja
sub
mov
lret
mov
inc
lea
sahf
pop
push
ja
aas
cmc
orb
hlt
mov
xchg
das
imulb
sbb
add
jbe
xor
jg
enter
fcmovne
pop
push
cmp
fs
inc
leave
cltd
out
loopne
mov
fstpl
subl
xchg
mov
mov
pop
mov
lahf
insl
xor
fsts
add
ja
cmp
scas
xchg
cwtl
test
xor
cwtl
sbb
xchg
adc
sub
incl
in
mov
cmp
leave
sbb
sub
test
mov
adc
jmp
jmp
dec
push
xchg
fsubrl
xchg
ret
cmp
mov
out
lods
xchg
popa
push
sahf
mov
sub
test
fmuls
rcrb
pop
mov
jge
jmp
bound
pusha
mov
cmp
mov
push
xor
pop
xchg
cltd
xor
int
scas
orb
jne
insb
arpl
pop
pop
fstpt
iret
lds
fadd
xchg
adc
sti
dec
jl
ret
mov
in
xor
imul
lds
push
sub
dec
xor
pop
jl
mov
xchg
mov
js
std
cli
jne
rcrb
sbb
andl
lods
cwtl
vsqrtss
movsl
inc
ljmp
cmpsl
cmp
rolb
loop
jl
inc
in
push
push
clc
iret
das
in
ds
mov
cmp
sub
lcall
lods
leave
dec
shll
stc
jno
adc
jne
mov
fsubl
sub
jl
les
mov
dec
popf
dec
shlb
insl
shl
mov
xor
aam
cld
jo
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
cli
add
jo
jo
jo
mov
daa
and
inc
xor
sub
xlat
sbb
and
jne
fisubs
mov
popf
ss
rcll
adc
xor
fildll
and
pop
out
xor
fsubr
push
call
roll
push
pop
rcl
jecxz
xor
or
stos
sub
imul
jbe
mov
push
pop
roll
push
jo
arpl
push
xchg
push
mov
test
and
scas
xor
inc
push
fs
outsb
push
in
ret
sahf
dec
or
cli
test
outsb
sub
in
push
inc
clc
bnd
out
data16
mov
loope
std
or
fsubs
pop
and
lret
or
scas
enter
jle
inc
mov
jle
mov
sbb
insb
mov
jmp
mov
ss
and
fisubs
cld
lock
sahf
loopne
punpcklbw
cmp
js
pop
aaa
sub
jns
rorl
testl
jb
push
sbb
ljmp
icebp
shl
and
lds
aas
add
xchg
hlt
jg
icebp
movsb
xor
scas
push
ss
ror
ret
cmc
fdivrp
or
and
pop
sbb
dec
lret
jo
inc
or
sub
jl
or
lret
test
xchg
gs
andl
adc
mull
mov
push
inc
pop
leave
fwait
addb
add
inc
rorl
outsl
dec
daa
jno
not
ret
aam
leave
xlat
cmpsl
xor
or
daa
push
or
popa
dec
push
int3
cmpsb
cltd
popa
sbb
dec
dec
loopne
leave
mov
ror
cmp
sub
iret
dec
aad
pop
ret
dec
push
mov
mov
push
mov
xor
mov
pop
mov
mov
out
cli
rcr
imul
jecxz
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
add
add
add
jo
jle
jo
rclb
lahf
in
test
push
push
pop
or
push
js
sbbb
stc
shlb
gs
mov
add
fnstsw
and
orl
icebp
jb
pop
mov
daa
fnstsw
inc
sbb
lods
lods
and
subl
and
filds
imul
mov
hlt
outsb
dec
cmp
mov
jo
mov
jbe
push
sbb
das
mov
test
lcall
xor
mov
movsb
mov
pusha
pop
cmp
lahf
push
aam
jmp
rcrl
cmp
add
lods
jecxz
xchg
roll
loope
imul
pop
movsl
inc
cmp
leave
pop
sbb
fwait
xchg
fmuls
and
add
hlt
insl
outsl
fcomps
pop
xchg
pushf
and
enter
mov
movsl
scas
ja
sub
fsubrl
movsb
xchg
jg
or
ss
dec
sub
jbe
dec
mov
sub
nop
gs
pop
or
push
stc
dec
fidivrs
xchg
dec
or
shrl
out
test
add
in
iret
sub
mov
inc
pop
mov
aam
bound
mov
test
gs
pusha
jp
pushf
pop
iret
sub
ja
mov
pushf
adc
aas
mov
cwtl
notb
rolb
xchg
ds
imul
xchg
stos
adc
das
repz
push
sbb
cmpb
cmp
aas
movsl
lcall
pushf
xor
dec
dec
pop
fsubs
xchg
pop
adc
xlat
mov
xor
es
cs
insl
in
lea
push
add
mov
or
in
jns
hlt
inc
push
cmp
xor
mov
inc
sub
adc
cmp
stos
sub
pusha
cltd
popl
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
fs
jo
jle
jo
lcall
or
adc
in
cmp
lret
imul
stos
sub
in
jb
fsub
inc
jne
mov
pop
je
lret
mov
jg
imul
insb
lods
test
out
enter
xor
dec
orl
add
inc
imul
cmpsl
pusha
pop
sahf
movsl
xor
pushf
pop
sub
out
inc
mov
pop
jmp
and
hlt
pop
in
aas
jae
mov
arpl
push
mov
rcll
ret
loop
ljmp
icebp
add
jg
push
push
daa
add
shrl
jge
pop
and
xor
xorl
in
in
mov
dec
cmpsl
push
leave
in
iret
and
fnstcw
push
pop
xor
fwait
lods
xor
movsb
or
or
test
sub
and
inc
and
movsb
loope
xchg
push
test
lea
or
iret
cmp
xor
orb
pop
into
pop
mov
rcr
aas
enter
sbb
sbb
and
xor
push
bound
addr16
inc
adc
xchg
add
std
repz
push
mov
ljmp
adc
pop
bound
call
loop
fsubs
inc
pop
ficoml
sub
xchg
into
mov
bound
adc
push
test
jge
adc
sub
inc
pop
cmp
gs
orb
ljmp
movsl
ret
or
mov
and
pop
cmpsl
stos
jns
fdiv
in
mov
les
hlt
fdivrl
pop
int
scas
xor
xchg
test
daa
mov
or
pop
xchg
sub
psllw
out
inc
and
push
rol
cmpsl
pop
insb
negl
je
std
rolb
jmp
cmp
push
daa
pop
mov
sarl
jne
test
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
xchg
jo
jo
jo
jo
add
and
out
xchg
sbb
out
and
push
sahf
fsubrs
pop
adc
jmp
daa
test
adc
in
xor
xchg
pusha
into
jp
xor
aad
inc
sub
inc
inc
cmpsb
inc
imull
inc
cmp
sbb
mov
notb
mov
add
inc
lods
or
mov
mov
xchg
lcall
dec
cs
ret
sahf
sub
jbe
mov
psadbw
push
xor
xchg
mov
les
mov
pop
lock
popa
push
ret
and
lret
fwait
leave
add
sahf
je
dec
shrl
pusha
call
sub
lea
test
dec
rcrl
pop
rorb
pushf
cmp
or
dec
stc
imul
xlat
push
xchg
mov
test
xor
std
mov
add
xchg
lcall
mov
push
call
mov
cmp
jecxz
or
or
lret
repnz
and
dec
insl
ds
stc
mov
adc
and
data16
iret
lods
jns
mov
sbb
cltd
sahf
push
mov
cmp
jl
inc
mov
sub
sahf
popf
sub
das
call
cmp
xchg
jo
out
dec
cld
cmp
shl
mov
xor
mov
in
cmc
and
push
int3
mov
mov
loope
ret
inc
lcall
int3
and
mov
lds
mov
xchg
push
mov
sbb
in
jbe
cmpb
fdivs
cs
pop
daa
or
mov
rcrb
cmp
mov
push
int3
das
pushf
in
imul
das
mov
outsb
pop
ret
rol
xor
push
xchg
icebp
cld
repz
push
pushf
movsb
xchg
mov
adc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
inc
mov
sbb
les
add
aam
sarl
push
roll
jne
bound
arpl
sbb
sti
mov
push
dec
xor
push
out
outsb
mov
rcr
or
xchg
imul
clc
or
leave
inc
xchg
cmp
call
mov
sbb
fistps
add
cmp
call
push
adc
daa
mov
aad
jmp
inc
pop
sbb
lret
push
lahf
das
sbb
insl
cmp
push
jg
mov
inc
xchg
test
jns
jns
lcall
xchg
imulb
sub
std
xor
gs
pop
push
ret
in
pusha
jge
ss
outsl
call
xlat
push
loopne
push
and
add
in
jo
gs
xor
rorl
xchg
popf
or
mov
adcl
push
and
or
out
in
mov
mov
push
jb
xchg
addr16
cld
out
mov
inc
hlt
dec
xchg
xor
xor
mov
rorb
imull
mov
pop
lret
xorb
adc
pop
andl
fwait
dec
aam
sub
scas
loope
cmp
mov
std
lret
or
or
loopne
dec
out
repnz
pop
insl
outsb
mov
mov
xchg
sbb
sbb
and
cmpsl
ret
xchg
push
ret
push
mov
adc
sub
ret
test
push
ss
test
mov
push
fisubs
pop
lret
sub
fildll
roll
xor
cmp
pop
pop
addr16
lea
fs
es
or
pop
mov
push
jle
xchg
jle
adc
mov
mov
cld
xor
xor
adcl
sub
lret
inc
cli
cmp
addr16
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
les
insb
inc
pushf
xlat
pushl
ss
fwait
inc
xchg
mov
out
jecxz
mov
inc
dec
in
cld
icebp
add
mov
leave
xor
imul
loopne
adc
add
and
sbb
and
mov
popf
insl
inc
aas
xor
jns
sub
sbb
cmp
lods
or
loop,pn
xor
xchg
jno
jno
pop
stos
or
sub
popa
adc
and
fcmovb
enter
add
in
fbstp
or
xor
inc
cmpsb
and
aas
rcll
mov
jne
dec
scas
adc
add
mov
in
mov
jae
add
add
mov
mov
jl
fs
stos
sub
imul
inc
lods
adc
stos
mov
cmp
loope
popf
and
fcoml
xlat
fsubr
in
ja
sub
test
negb
and
push
xor
aam
push
pop
xor
push
fdivrp
out
lcall
sub
mov
jbe
cwtl
mov
fwait
cmp
dec
adc
fcoms
jecxz
inc
orl
imul
cwtl
std
inc
stc
adc
scas
xchg
sub
cmpsb
popa
or
cmp
lret
sbb
call
pop
fistpll
es
push
loop
dec
js
and
and
lret
inc
push
adc
xor
jmp
push
jae
push
cmp
pop
add
int
imul
inc
arpl
and
ror
mov
mov
sbb
sub
push
push
shrl
lret
insl
cmp
scas
sbb
jnp
test
dec
or
push
idiv
pop
xor
loope
jns
int3
test
fucompp
pop
jae
and
lahf
fwait
daa
mov
or
ror
jns
cmp
jg
ds
xchg
pop
push
sub
repnz
testb
sbb
sbb
jg
iret
adc
dec
cmpsb
test
xor
push
ret
xor
loopne
push
sbb
ss
lods
pop
mov
and
sbb
xchg
jne
jb
cmp
in
xchg
dec
adc
xor
push
xchg
inc
imul
mov
mov
leave
push
lds
repz
add
cmp
jle
add
sbb
cmp
fsubrs
lahf
cld
pop
outsb
lret
arpl
sub
push
dec
mov
sub
lret
mov
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
imul
or
mov
jne
pop
lret
flds
cmc
xor
dec
jno
cmpsb
mov
jmp
cmp
add
sbb
xor
pop
mov
sti
add
jns
out
xchg
xlat
inc
das
orl
or
mov
cmp
or
insb
sbb
test
sub
push
jg
fbstp
and
mov
xchg
outsb
mov
sbb
rcrl
adc
inc
stos
push
subb
sarl
push
shl
add
mov
adc
inc
ret
add
fsts
test
aam
hlt
dec
xchg
gs
xchg
adc
in
das
in
ljmp
pop
cmp
loop
or
in
pop
jno
test
mov
roll
mov
xchg
pop
mov
dec
jg
imul
jnp
xor
inc
psubw
push
stos
fwait
add
fcmovnb
ret
jne
ja
lcall
je
insb
ja
stos
mov
lock
or
mov
into
xchg
stc
mov
mov
sub
sarb
cmp
fsubp
inc
mov
shll
mov
shlb
bound
aas
cmp
cs
cmp
xchg
add
jle
das
mov
fsubl
sub
or
iret
mov
repnz
mov
push
fcmovnb
in
rsm
xchg
xor
push
in
xor
add
push
fldl
ds
sub
out
push
pop
into
mull
sub
mov
ret
xor
inc
dec
and
dec
sbb
loopne
sub
inc
fadd
cwtl
adc
aaa
mov
mov
jnp
mov
or
inc
mov
mov
cltd
mov
das
inc
dec
cs
xlat
push
xor
iret
negl
mov
sti
movsl
and
test
cmp
jp
pusha
adc
lods
xlat
sbb
icebp
loope
jecxz
fcom
movsb
ret
les
icebp
xchg
enter
jp
mov
stos
jnp
xchg
dec
xchg
in
and
push
in
jp
call
shl
mov
add
cs
add
es
subl
xchg
out
outsl
rcll
cmc
movsb
xor
pop
shll
in
cmpsb
lahf
jo
loopne
mov
adc
scas
popf
aaa
clc
or
in
push
push
inc
mov
sbb
xor
fldt
decb
mov
icebp
pop
mov
mov
xor
mov
mov
xor
add
jmp
fistl
loope
lds
add
mov
stos
cld
pop
jo
mov
fdivs
shlb
and
leave
pop
icebp
pushf
int3
lret
sub
loope
push
inc
sub
shlb
mov
sub
sbb
jp
inc
arpl
mov
xor
rclb
mov
movups
inc
push
or
into
sbb
xor
sub
push
mov
push
outsl
xchg
pop
or
mov
mov
cwtl
pushf
dec
fs
mov
cmc
imul
inc
dec
ret
iret
sbb
pop
outsb
dec
xor
xor
loop
out
loopne
out
mov
shll
outsl
pop
roll
decb
inc
pusha
aaa
jmp
or
dec
mov
add
sbb
sub
iret
sub
xor
inc
fwait
mov
insb
dec
push
test
dec
and
pop
or
sub
add
inc
push
cmp
pop
roll
or
fcmovbe
mov
sar
imul
pop
rol
ljmp
sbb
pop
add
das
rol
and
pop
add
and
ret
xor
movsl
sbb
mov
loope
cmp
or
dec
into
lahf
out
nop/reserved
lret
push
mov
mov
lea
ret
fwait
lcall
adc
xlat
mov
repz
pop
leave
iret
in
xor
pusha
push
pushf
inc
and
and
push
cmp
mul
and
ror
cli
mov
nop
xor
in
in
ret
ror
loop
mov
inc
nop
std
push
push
std
out
hlt
lret
test
xorl
stc
test
jne
mov
popa
or
xor
sub
mov
adc
adc
sub
mov
lcall
dec
test
pop
inc
or
mov
xlat
daa
hlt
orl
je
fs
fcmovb
dec
mov
aaa
roll
sbb
lods
mov
xor
test
int
fnstenv
aaa
sti
stos
je
aad
sti
xchg
sub
push
pop
int3
dec
mov
xor
bound
add
mov
fcmovnb
sub
sub
push
loope
push
fisubrs
inc
adc
shrl
imul
stos
mov
lea
mov
push
inc
push
sub
jmp
lods
es
outsb
cs
cmp
xor
xor
push
adc
imul
out
cs
in
xor
ja
adc
stos
pop
pop
int3
adc
jle
mov
stos
aaa
jecxz
cli
lahf
aam
cmp
sarl
jecxz
push
pop
pop
sub
or
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
out
pop
pop
dec
cmp
jo
jle
jo
push
mov
cli
ficoms
inc
mov
or
mov
cmc
xchg
mov
andb
jg
and
mov
test
jne
xchg
int3
lea
dec
cs
sti
xchg
mov
cmp
test
aaa
imul
repnz
iret
xchg
les
jne
in
pop
call
xchg
sbbb
lret
insb
js
js
mov
inc
xor
fwait
inc
mov
sbb
and
inc
xor
push
mov
sub
stos
sarl
shrl
xchg
cwtl
sub
inc
aaa
xor
jecxz
rclb
and
lea
jp
inc
sarl
cmp
xchg
int3
add
xchg
mov
popa
lahf
mov
mov
mov
ja
mov
cmp
lods
movsl
mov
xchg
adc
int3
jb
mov
fidivrl
cmp
pop
sub
or
rclb
jne
mov
mov
outsb
push
and
lcall
fcmovne
mov
or
icebp
testl
aas
cmpsb
fildl
and
push
mov
loop
enter
pop
mov
cld
mov
dec
fidivs
mov
push
roll
leave
jg
pop
mov
dec
mov
sahf
and
rolb
adc
adc
ret
mov
into
imul
sub
mov
or
and
adc
dec
cmpl
push
or
mov
lea
dec
rcll
dec
mov
or
mull
cmp
sub
jae
cltd
daa
cs
arpl
add
push
daa
jnp
or
test
ret
mov
xchg
movsb
and
inc
lret
add
pop
push
seto
decl
sub
in
push
jne
jle
cld
adc
fs
dec
add
in
leave
mov
mov
mov
or
rolb
stc
roll
es
xchg
test
int3
das
add
adc
sbb
push
nop
pop
xor
mov
sahf
daa
cmp
rcrb
mov
in
xor
sub
pop
imul
dec
mov
repnz
mov
jno
int
inc
mov
loope
xchg
leave
sbb
jb
aam
sub
xchg
jno
mov
or
sbbl
jo
stos
bound
xchg
and
xlat
int3
into
daa
pop
add
pop
leave
nop
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
out
inc
js
jo
cmp
int
test
call
leave
pop
xchg
cmc
mov
inc
loope
mov
cmpsl
lcall
push
jnp
push
mov
call
pop
mov
mov
and
inc
test
shrb
jne
push
hlt
data16
insb
jle
div
add
xchg
daa
pop
sbb
adc
push
out
inc
push
out
dec
push
mov
jno
jo
cmp
data16
pop
cmpsb
test
xor
mov
mov
clc
movsb
in
cwtl
notb
mov
ret
test
sbbl
lds
dec
xchg
enter
adc
call
aas
sti
adc
jns
or
push
mov
test
movsl
mov
mov
sub
push
mov
sub
pop
test
lret
adc
jne
es
cs
icebp
mov
popa
mov
dec
es
call
in
cmc
arpl
sub
mov
or
dec
dec
add
jp
push
mov
ja
negl
sub
mov
and
fsub
fidivrl
inc
xchg
mov
sbb
mov
sbb
adcb
inc
fildll
mov
jae
sbb
test
arpl
das
into
out
lcall
cmp
pop
adc
lcall
or
rcll
adc
adc
outsb
mov
jge
mov
cmp
cld
sbb
loop
add
dec
push
jb
sti
mov
xor
mov
in
and
mov
bndldx
dec
inc
les
ja
or
mov
test
out
xor
push
fwait
push
jecxz
dec
sbb
pop
ficomps
xchg
pop
cmp
mov
sbb
sti
lcall
cwtl
mov
rcl
push
cmp
or
xchg
cmp
mov
jns
lock
or
sbb
push
in
add
xchg
xchg
das
repnz
mov
pshufw
and
out
les
push
jb
negb
push
aad
xlat
and
in
xor
cmc
cwtl
jns
stos
jg
pop
cwtl
pop
push
dec
mov
rcrl
cwtl
dec
or
stos
add
jp
or
es
aad
rcll
add
push
lahf
cld
cmpsl
loop
xchg
pop
push
gs
mov
mov
push
dec
push
and
pop
or
lods
jge
cmp
shlb
mov
push
mov
cmpsl
dec
xor
dec
mov
pop
pop
xor
add
pop
or
mov
popf
dec
mov
sahf
rcr
out
outsl
imul
mov
arpl
rol
test
popf
mov
sbb
jmp
xchg
or
xchg
lea
mov
xchg
sub
pop
icebp
pusha
imul
xchg
aam
cmp
xor
xor
into
mov
ss
push
fcmove
lahf
adc
lods
mov
je
loope
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
repz
jo
cmp
jp
aam
fwait
push
cmpsl
cmp
aad
cmp
fisttpll
jecxz
jb
cmp
jg
push
cmp
xchg
pop
sub
mov
pop
shll
push
jno
pusha
jg
mov
add
pop
loop
mov
fisttpll
pop
mov
call
mov
pusha
dec
push
mov
aaa
int
stos
fsubl
movsl
inc
cld
lret
push
cmp
popa
or
mov
cmp
dec
bound
jp
adc
and
daa
jle
or
push
leave
sarb
jno
inc
dec
xchg
cmpsb
jno
insb
jg
dec
dec
mov
fnstcw
out
mov
negl
stc
dec
stos
das
lret
aaa
sub
ja
fstl
inc
jb
inc
sub
iret
ret
dec
cmp
scas
fiadds
push
xor
mov
idivb
mov
iret
test
adc
pop
jo
jge
vcvtdq2pd
lret
xor
adc
dec
lock
cwtl
jno
stos
dec
inc
lahf
or
les
dec
in
adc
movsb
push
int
cs
add
rcll
mov
mov
into
mov
mov
push
jp
dec
nop
cmpsl
jge
int
cmpsb
cmp
push
or
into
ja
sub
pop
lea
push
lret
push
mov
cld
cs
or
imul
sbb
enter
mov
add
fmuls
mov
scas
int
mov
jg
mov
sarl
cli
push
stc
pop
mov
lds
int
loope
inc
aam
pusha
sbb
cmp
sbb
scas
movsl
push
pop
mov
mov
adc
popf
or
pop
xlat
stc
sub
in
js
mov
or
and
imulb
inc
xchg
lret
fwait
pop
cld
xor
vhaddpd
inc
lcall
fnstenv
jecxz
repnz
mov
or
push
in
sub
xchg
lea
mov
repz
jge
sub
sti
sub
add
xor
or
ds
test
adc
xor
push
popa
xchg
lea
mov
bound
xor
pop
clc
mov
add
or
mov
ret
icebp
cmp
mov
mov
lock
pop
arpl
push
leave
loopne
int3
jnp
xchg
repnz
jne
jmp
mov
mov
jne
dec
sub
loopne
sbb
add
loope
or
movsb
mov
xor
shll
or
jg
stos
aas
add
fs
aad
fldenv
dec
xchg
dec
gs
js
cld
in
dec
decb
repz
mov
adcb
and
or
leave
mov
xchg
sub
icebp
sti
sbb
aam
push
sbb
enter
mov
cmc
jns
pop
test
scas
add
test
push
or
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
pushf
outsl
sbbb
jo
jge
jo
outsb
jmp
jae
sub
sbb
ret
clc
fsts
sbb
rorb
cmp
bound
out
cmp
lock
call
sub
mov
mov
fisttps
push
jl
out
scas
fcoml
xlat
pusha
lea
or
xchg
and
cmp
rcr
pop
mov
mov
xchg
or
pop
mov
inc
jge
mov
repz
jmp
mov
in
fnstsw
cwtl
aas
mov
dec
jb
call
orb
aad
arpl
in
lcall
sub
and
sarl
push
shl
adc
fcomip
sub
ljmp
mov
mov
das
inc
stos
test
jae
jg
dec
inc
in
mov
jae
or
iret
pop
push
add
sbb
adc
stos
adc
dec
mull
add
cmpb
jp
lds
mov
push
push
mov
push
jmp
out
lcall
out
lret
iret
jle
lret
inc
hlt
push
jecxz
enter
jmp
out
sbb
mov
pop
aad
flds
inc
add
insb
out
outsb
dec
jae
out
cs
pushf
fs
inc
pop
enter
jne
sub
pop
sub
or
ss
push
je
test
sub
push
lret
jbe
push
out
push
mov
push
adc
jne
pusha
test
cltd
xchg
add
and
mov
mov
or
fidivrs
or
jae
sarb
pusha
scas
xor
mov
xor
sub
shll
jle
daa
imull
pop
lds
or
fcom
add
push
jno
cld
push
movsl
mov
adc
xchg
scas
lds
mov
les
in
xor
int3
dec
loopne
pop
pop
mov
mov
xchg
mov
les
imul
popf
mov
in
in
mov
in
div
test
cmp
sub
leave
ja
xchg
mov
aaa
fistpl
inc
cmp
mov
jnp
lods
mov
int3
sbb
pop
add
pop
and
and
cwtl
inc
ljmp
fcmovu
insb
jnp
cwtl
lods
push
nop
scas
dec
mov
push
jne
jp
xor
push
ret
and
sbb
pop
mov
and
xor
divl
xchg
dec
mov
popa
jb
xor
mov
int3
jb
push
sbb
jns,pt
cmpsb
pop
ja
lock
xchg
addr16
pushl
or
jae
cmc
jge
out
push
mull
mov
xchg
sub
pop
in
adc
mov
aas
jae
mov
jle
pop
aas
das
hlt
cmc
ror
xlat
fstpt
mov
and
mov
pop
mulb
pop
jl
or
push
das
push
mov
pop
jmp
pop
mov
popf
sub
mov
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
setb
jo
cmp
or
jns
jp
adc
xor
or
jl
xor
mov
jns
cmp
idivl
rcrb
test
push
clc
mov
pop
xchg
cmp
mov
adc
fcompl
sub
pop
sti
dec
outsb
loopne
jno
lahf
filds
lock
lret
pushf
inc
xor
test
pop
fs
lock
mov
jge
dec
cmp
and
xor
fimull
rep
cld
into
pop
adc
pop
int3
push
icebp
jl
sarb
mov
push
loop
mov
jl
push
cmp
cmp
cmp
loop
inc
mov
cmc
sti
stc
filds
xor
push
pop
pop
inc
shl
and
jae
lret
out
cmp
test
xor
ljmp
les
into
sbb
cli
mov
and
jmp
clc
or
ja
test
or
incb
outsb
inc
xchg
jp
pusha
lods
push
stos
xchg
ds
add
dec
scas
sarl
cltd
popl
mov
push
cmpsl
in
sub
sbb
cmpsb
cmp
and
inc
ret
cmp
cs
xchg
stos
sub
pop
shrb
cwtl
repnz
shlb
das
inc
pop
add
mov
pop
or
mov
inc
mov
xlat
adc
mov
lock
testb
fdivrl
dec
stos
cmp
sub
and
in
sub
mov
sti
xchg
xor
push
pop
mov
add
mov
fmuls
iret
outsl
pusha
test
decl
sbb
in
inc
push
ljmp
lods
movsb
inc
std
fmulp
int3
xchg
icebp
repz
divl
scas
inc
pop
aam
push
popa
push
clc
jae
cld
rclb
cmp
in
pop
repnz
jecxz
push
addr16
or
test
jmp
cli
jno
mov
jg
mov
test
push
xor
push
js
out
enter
outsb
mov
ja
aas
xchg
xchg
mov
mov
mov
sub
mov
testb
xchg
rclb
inc
mov
test
sub
dec
pop
pop
cwtl
addr16
sub
pusha
xor
icebp
outsb
je
xchg
pop
add
lock
enter
push
adc
jmp
pop
inc
outsb
mov
clc
push
push
shlb
addr16
sbb
sbb
pop
jbe
push
push
out
xchg
pop
hlt
cmp
inc
cmp
dec
out
xchg
add
xchg
mov
mov
sbb
loope
rorb
inc
fsubl
mov
mov
sti
mov
cmp
fsubl
jp
push
dec
adc
sub
mov
jl
pop
mov
lea
daa
leave
push
inc
xchg
push
dec
sbb
inc
mov
int
sub
lock
int
jge
adc
fimull
push
in
xchg
mov
sbb
or
mov
sub
lods
cmp
jne
fcmovnu
in
loope
jmp
addr16
mov
stc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
push
mov
jo
jge
jo
cmp
adc
stos
jp
movsb
fcomp
hlt
dec
mulb
dec
lret
in
shl
cmpsl
je
aas
xchg
or
outsb
xchg
mov
lods
repnz
sbb
mov
in
mov
scas
pop
iret
stc
dec
bndldx
pop
xlat
out
popa
fisttps
std
add
cmp
xor
push
mov
or
jecxz
outsb
pop
lock
pop
jle
lds
in
fbstp
push
sbb
jne
mov
sbb
ja
add
xor
fcoms
and
and
add
insl
mov
pop
insl
lock
jbe
addr16
mov
cmpsb
addl
jg
in
lahf
cmp
jae
mov
xchg
xor
repz
loopne
es
nop
stc
mov
mov
fcmovnb
inc
mov
pop
inc
and
scas
mov
fdivr
sbb
or
dec
cli
mov
push
sahf
inc
adcb
call
mov
mov
add
or
push
in
ja
lock
push
inc
sbb
jbe
sub
dec
popf
inc
mov
mov
cmp
stos
mov
add
xor
cmp
mov
nop
dec
daa
mov
lock
mov
gs
arpl
incl
sbb
scas
out
lret
lret
in
jne
shrl
jb
inc
pop
fwait
jge
ljmp
rorl
push
gs
cli
push
and
es
xchg
sub
lods
popa
push
jae
andb
mov
inc
fldenv
jbe
sahf
out
pushf
dec
in
push
xchg
xchg
mov
inc
xchg
aam
int3
xor
lahf
andl
mov
mov
mov
je
xlat
mov
xchg
push
sbb
mov
mov
mov
movsl
bound
or
test
aam
lea
mov
loop
aam
push
add
pop
sub
mov
dec
jg
rclb
add
push
scas
mov
sbb
push
jo
movsl
xchg
stc
pop
push
inc
mov
mov
cmp
cmp
cmp
sub
and
and
mov
push
and
mov
mov
mov
rcll
sarl
adc
dec
or
in
dec
es
or
add
sti
and
in
jo
mov
jge
sub
push
loope
or
xor
mov
bound
ret
int3
push
jns
push
dec
xchg
and
stc
jmp
bound
lret
dec
mov
jmp
pop
cmp
xor
lret
incl
shll
xchg
push
mov
aam
ljmp
in
out
jecxz
out
xchg
shrb
fsts
xor
pop
xchg
shr
jno
imul
lea
cmpsb
aaa
lcall
lea
imul
pop
jbe
sahf
ljmp
or
fldl
addb
xlat
sub
imul
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
mov
test
cmp
into
fwait
shr
fmull
cmp
cmp
gs
jl
insl
sti
adc
test
xlat
icebp
xor
ljmp
push
je
push
pusha
daa
lcall
ds
inc
testb
fndisi(8087
js
xor
xchg
pop
jo
pop
inc
pop
stos
ds
mov
or
inc
clc
xchg
leave
push
push
cmovp
jae
jp
repnz
mov
mov
aad
jecxz
cwtl
mov
push
cmpsl
mov
mov
test
sub
loopne
xchg
test
add
imul
adc
fadds
adc
dec
stc
dec
sti
mov
jge
mov
in
inc
mov
jg
pop
mov
inc
aad
jno
pop
adc
pop
out
mov
and
rorb
cltd
adc
movsb
add
xor
sub
mov
adc
mov
movsb
mov
imul
push
xor
pop
sub
pop
popf
push
clc
jl
or
dec
cld
sub
dec
dec
popa
scas
inc
movsb
cmpsb
fisubrl
xchg
sub
movsb
mov
sbb
jp
mov
dec
divb
xchg
jle
mov
imul
iret
movzbl
and
loope
push
mov
fs
pop
test
adc
mov
cltd
int3
adc
mov
aas
add
ret
jecxz
imul
dec
shrb
fwait
xchg
fimull
mov
stos
pop
and
cmp
hlt
hlt
arpl
js
push
lahf
test
jl
lods
lcall
jl
or
loopne
push
ret
dec
rcrl
inc
out
add
jg
cmp
ret
es
pop
push
jne
popf
sub
sbb
fnstenv
sahf
mov
fdivs
scas
push
sbbl
rclb
into
pop
aas
ret
insb
mov
push
lock
cli
orb
fsubl
fcoms
push
shrb
test
les
push
jmp
fisubs
add
pop
jo
mov
lds
movsl
and
pusha
dec
das
jb
pop
mov
push
jb
dec
inc
call
cmp
and
xchg
repnz
inc
jp
or
push
leave
sub
mov
and
sarl
add
jo
cmp
jmp
sub
jnp
add
fnstcw
push
inc
mov
sti
out
rdpmc
popa
mov
adcb
mov
and
sbb
push
je
shlb
mov
mov
pop
js
jg
ds
paddq
mov
loope
pop
int3
mov
push
jecxz
lods
es
ja
mov
jmp
testb
sub
lea
inc
pushf
stc
ror
cmp
lock
adc
mov
push
xor
stos
icebp
test
sahf
inc
cmp
sub
dec
jge
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
ja
adc
jo,pn
cmp
rcrl
sbb
imul
ret
into
push
pop
hlt
xchg
daa
outsb
push
add
dec
aas
xor
mov
push
mov
mov
das
xchg
pop
jg
or
inc
cmpsb
jnp
mov
incl
mov
jmp
add
xchg
stc
sbb
in
clc
jns
stc
rol
adc
mov
sbb
pusha
in
imull
ja
es
mov
push
lea
mov
mov
movsl
and
gs
mov
out
adc
clc
aas
cmp
inc
xor
pop
imul
push
jae
push
aad
xchg
in
pushf
adc
sub
out
add
or
or
lcall
in
add
test
inc
repnz
imul
or
xchg
rcll
jo
adc
xorb
jo
jnp
lahf
out
and
sbb
jnp
jmp
xchg
cs
ret
inc
xor
rclb
add
negl
out
movsl
shrb
push
imul
out
mov
cmp
lret
xlat
pop
pop
pop
and
mov
adc
ret
stc
popf
leave
lret
sub
push
int3
insl
inc
inc
xchg
shlb
fcoms
sbb
inc
sbb
sbb
out
daa
int3
mov
pop
data16
mov
int
adc
cwtl
push
mov
mov
and
mov
or
cmp
jb
mov
lahf
fistps
sbb
test
pop
movsb
stos
xor
mov
inc
popf
push
jae
push
xchg
push
ljmp
xchg
adc
ljmp
insl
inc
or
pop
out
scas
mov
stos
and
jne
rolb
jge
jns
add
xor
mov
mov
sub
adc
iret
push
fimuls
enter
les
ret
mov
jno
addr16
notb
popa
daa
movsb
cwtl
cwtl
frstor
xchg
mov
sbb
into
mov
popa
add
pop
lods
pop
test
and
int
aam
imul
jne
xchg
in
imul
xchg
sbb
add
pop
push
fcom
dec
es
ds
pop
sbb
push
outsb
ja
push
and
imul
pop
adc
sbb
je
lods
and
shrb
stos
push
stos
int
sub
testb
mov
inc
jne
mov
popa
adc
push
mov
fcom
pop
negb
lods
mov
addl
mov
inc
ljmp
adc
sub
rclb
fld
lret
jae
sbb
add
jo
shlb
push
mov
or
test
sahf
mov
cmp
dec
outsl
fldl
es
out
sarb
push
loope
pushf
test
pop
sti
lea
lods
inc
outsb
movb
sbb
sub
cli
mov
push
lds
or
out
shlb
xorl
sub
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
jne
sub
cmp
test
xchg
xor
mov
lock
divl
sub
mov
jmp
xor
je
inc
ret
mov
imul
gs
inc
int
inc
in
sub
imul
imul
mov
or
std
or
test
adcl
dec
lret
mov
sbb
pop
stos
mov
roll
repz
dec
int
xor
or
adc
sub
insb
lret
xor
lret
lcall
out
roll
mov
in
shlb
subb
enter
mov
test
test
orl
out
inc
jo
inc
imul
or
nop
or
xchg
outsb
ret
ret
pushf
jle
pop
es
lods
pop
dec
xor
inc
bound
and
decl
faddl
sbb
sub
test
popf
call
jl
push
push
dec
cmp
jle
enter
testl
test
cmp
mov
cwtl
push
sbb
xor
jle
mov
rcll
pushf
fstl
lahf
sbb
push
gs
dec
pop
fmull
push
inc
mov
mov
lods
pop
aam
fstps
sbb
mov
nop
xchg
cmpsb
aaa
mov
adc
ljmp
popf
xchg
mov
mov
loop
mov
adc
aaa
jmp
repnz
aam
loop
xor
ja
mov
push
in
mov
aam
mov
or
sbb
pusha
repnz
dec
inc
rclb
rorl
mov
pop
xor
les
ds
arpl
sub
pop
inc
lret
test
out
dec
or
mov
imull
popa
or
cmp
es
and
add
adc
dec
mov
or
imul
jg
scas
adc
aam
cltd
mov
xchg
es
push
mov
pop
lds
stos
loop
arpl
out
and
outsb
sub
ss
shll
push
sbb
lret
je
scas
mov
stc
inc
fst
fwait
and
push
test
or
pop
inc
dec
jbe
cmp
rcr
repnz
pop
xlat
dec
jge
and
pop
out
push
dec
cwtl
mov
xchg
jae
mov
sub
sahf
lds
xor
xchg
add
std
inc
out
stos
sbb
inc
pop
cmp
sbb
ret
push
sbbl
into
imul
jnp
rcll
std
popl
sub
pop
jnp
lret
ds
jnp
test
insl
xor
mov
imul
jo
cmc
outsl
ret
iret
push
test
sarb
fucomi
mov
push
lret
stos
mov
cmpsl
jle
sbb
add
adc
jmp
stc
ror
sti
adc
cmpl
push
dec
cmp
repz
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
pop
cld
mov
adc
jo
stos
jle
jo
movb
jg
inc
ret
sbb
int
daa
lret
mov
jmp
push
aas
pop
rorb
sub
js
imul
rclb
enter
movb
imul
mov
fadds
xchg
mov
pop
jecxz
cmp
jmp
add
mov
sub
adc
mov
lret
dec
popf
sub
testb
ss
and
cmpsl
dec
xor
jge
or
inc
add
cltd
pop
data16
notl
or
loope
push
cmpsl
mov
or
fmul
xor
add
subl
xchg
add
fimull
in
cmpl
add
push
sub
and
lods
and
mov
in
mov
not
std
sbb
jb
mov
insb
sbb
outsb
mov
lret
mov
stos
repz
in
into
sub
lcall
roll
mov
lds
cmp
or
mov
mov
jp
push
icebp
push
je
adc
call
xor
mov
sub
mov
push
mov
cmpsl
xchg
xor
pop
adc
fs
inc
mov
lock
xchg
data16
je
add
cwtl
inc
fsubl
or
test
xchg
or
add
in
xor
nop
jge
dec
add
or
test
inc
push
pushf
lods
dec
jl
repz
clc
mov
movsl
dec
js
jge
xchg
jne
sbb
xchg
sbb
mov
mov
ret
push
in
pop
jmp
out
mov
jecxz
fsubrl
test
mov
fsubp
sbb
mov
fmuls
and
stc
sbb
xchg
inc
jne
jg
mov
filds
xor
gs
imul
xchg
mov
inc
sbb
mov
les
outsb
ss
mov
push
pop
sbb
jne
mov
stos
mov
dec
sbb
daa
pop
nop
out
popf
pop
cmp
jle
and
adc
test
movsl
ror
aas
es
push
sub
mov
mov
enter
enter
aas
add
inc
sub
inc
out
mov
push
xchg
xchg
rorl
jl
cmp
lock
xor
cmp
adc
out
lret
rcr
pushf
test
push
jb
aaa
and
int3
icebp
lods
clc
stos
adcl
std
inc
add
add
mov
jmp
ja
and
dec
xchg
and
jo
stos
jle
jo
jg
ss
fistpl
mov
push
movsb
fwait
mov
and
inc
cwtl
or
jae
popf
mov
adcb
add
sub
fisttpll
mov
jae
mov
push
sub
aam
es
pop
in
cmp
int
in
mov
scas
mov
lock
js
push
mov
cmp
cmp
cs
cli
mov
mov
mov
int3
sub
cld
mov
inc
dec
pusha
sarl
cwtl
in
adc
adc
fs
lds
test
dec
jecxz
fildll
in
packssdw
jns
nop
faddl
outsl
movsb
dec
jg
mov
push
or
rcrb
out
test
js
sbb
mov
inc
int3
or
inc
lds
mov
inc
loope
xchg
mov
popf
ds
and
stos
mov
sarl
or
lods
lret
pushf
cmc
xchg
pop
aas
outsl
cmp
sahf
aam
add
mov
nop
jo
js
ljmp
cmc
std
push
mov
jno
clc
fcoml
adc
sbb
mov
jge
ljmp
andb
popa
sbb
or
xor
push
sbb
fnsave
scas
or
call
mov
fs
cld
js
pop
pop
push
adc
insb
hlt
sbb
gs
adc
adc
inc
dec
mov
stos
jle
test
ficompl
pushf
pop
push
popf
ret
ror
xor
testb
dec
adc
icebp
xchg
mull
pop
out
pusha
xor
imul
test
mov
jge
or
dec
mov
pop
xchg
cmp
int3
rorb
shl
mov
pop
enter
lret
scas
or
sub
and
sti
mov
fldcw
xchg
push
fsts
out
jl
rclb
inc
outsl
loopne
cltd
and
fisubs
mov
xchg
sub
ljmp
das
push
cmpsl
lcall
lcall
xlat
lret
pusha
push
inc
pop
xchg
imul
int3
ret
jle
cmp
or
test
int
xchg
inc
xchg
inc
or
jo
int
adc
lea
adc
addb
pop
mov
pop
outsl
pop
outsl
ja
scas
push
imul
stc
pop
ffree
in
je
jg
and
or
shlb
scas
testb
lods
vunpckhpd
loop
jno
hlt
xchg
pusha
imul
hlt
push
icebp
xchg
inc
adc
sub
xor
fs
negb
xchg
popf
test
int3
pop
shrl
mov
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
repnz
jo
stos
jle
jo
popa
pop
repz
sbb
imulb
mov
mov
and
divl
nop
add
xchg
out
inc
aam
jl
inc
and
icebp
test
cmpsl
dec
clc
imul
mov
into
andl
mov
ljmp
xchg
test
daa
dec
sub
das
stos
mov
aad
xor
cmp
movsl
xor
pushf
push
je
pop
popf
cmp
mov
popf
repz
lret
fwait
repz
dec
divb
repz
push
repnz
adc
into
dec
jne
test
shlb
out
push
cs
mov
sbb
push
xchg
lret
sub
jae
sahf
jno
stc
mov
fdivrl
xorb
jb
es
sub
push
rcll
sahf
pop
or
xchg
test
nop
inc
stc
fwait
js
push
insl
and
dec
leave
adc
outsb
xchg
arpl
mov
push
mov
mov
cmp
inc
movsb
xor
sbb
dec
inc
mov
mov
scas
push
in
push
jae
data16
pop
sub
xor
mov
cmp
adc
divl
fisttpll
mov
push
xlat
fimull
fucomp
mov
or
jg
shl
pushf
inc
js
sbb
mov
push
push
loope
jns
xchg
cmpsb
lcall
inc
cmp
outsb
ds
fidivrl
popa
dec
cmp
in
fisttps
insl
inc
ret
loope
into
sbb
cmp
pop
mov
fwait
pop
setle
lock
idiv
mov
mov
iret
add
jb
mov
cli
mov
and
adcl
pop
dec
xchg
insb
mov
mov
pusha
jns
pop
push
scas
es
mov
pop
mov
mov
or
pop
pop
pop
and
repz
xlat
sbb
faddl
fadd
pushf
mul
pop
mov
fnstenv
xchg
pop
imul
cmpb
pop
int
aas
pop
mov
nop
jp
stc
xchg
dec
mov
mov
lock
mov
mov
loop
fistpll
stc
adc
xor
xor
mov
push
arpl
idivl
enter
aas
ficompl
and
jae
repnz
in
push
push
pusha
sbb
and
stos
pop
dec
sbb
test
adc
ficoms
pusha
add
cmc
out
int
cmp
aad
psubq
or
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
pop
hlt
addr16
jo
cmpsl
jg
jo
daa
mov
into
ret
out
mov
jnp
stos
dec
mov
sub
lret
inc
mov
lret
inc
fsubrl
jle
or
fdivs
subl
mov
xchg
adc
rclb
or
fidivrs
loopne
pop
pushf
adc
sbb
lret
std
sub
adc
mov
ljmp
iret
enter
mov
js
fwait
cmp
sbb
sbb
fdivrl
in
push
movsb
xor
mov
aaa
lds
xchg
sahf
adc
stos
mov
or
add
xchg
lahf
and
lret
jnp
outsl
adc
dec
inc
xchg
ss
loopne
in
and
push
hlt
or
or
movsl
jle
jp
xchg
mov
popa
xor
push
inc
sub
jg
xchg
ret
ret
sbb
lret
cwtl
add
pop
call
jl
enter
fs
xor
push
pop
sbb
cwtl
mov
xor
out
push
negl
mov
xor
xchg
xlat
fcmovb
mov
lcall
xor
pusha
sub
jle
adc
dec
dec
icebp
sub
add
aas
enter
dec
cli
insl
sti
adc
cmp
and
pushf
fs
ja
test
int3
xor
cmpsb
pop
jno
inc
sub
psrlq
movsb
out
jecxz
cmp
dec
or
xor
sbb
mov
or
iret
push
dec
inc
sbb
lods
inc
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
icebp
gs
cmpsl
jg
jo
mov
xorl
mov
push
push
pushl
and
cli
xchg
jecxz
js
sub
out
adc
and
fsubs
inc
in
sub
pop
and
inc
or
fcom
aaa
cmp
sbb
dec
push
scas
in
push
in
pop
dec
jns
pop
insb
cmp
dec
hlt
xor
xchg
push
repnz
sub
outsl
and
lea
fdivl
aaa
inc
pop
mov
ficomps
mov
or
fildll
popa
cwtl
pop
stc
adc
xchg
jns
lods
mov
lds
dec
test
loope
cmp
and
xchg
test
sub
or
sub
lods
xor
roll
inc
call
stos
mov
push
frstor
repnz
cmc
pop
sub
push
outsl
inc
in
dec
pop
std
stos
xchg
and
xor
pusha
ds
mov
rcrl
mov
mov
scas
ret
adc
sbb
int3
sbb
sarl
mov
out
and
loopne
add
out
std
inc
jb
xor
sub
cld
push
pushf
inc
push
jbe
stos
mov
push
mov
sub
ja
xor
mov
js
in
int
ret
sub
mov
andl
leave
push
std
subb
setnp
aas
and
add
sbb
mov
and
fstl
mov
push
mov
outsb
data16
sahf
out
lret
inc
sbb
mov
inc
add
std
inc
add
jae
inc
add
repnz
inc
add
add
add
add
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
rcr
adc
cmpsl
jg
jo
pop
cwtl
jle
jns
lret
jp
stos
cld
daa
lcall
xor
xchg
in
mov
push
dec
out
imul
js
lcall
mov
bswap
bound
mov
xor
pop
cmp
mov
out
mov
jno
dec
xchg
je
push
pop
pop
sbb
mov
jae
pop
pop
dec
fs
xor
in
xor
xor
or
pshufw
iret
imul
add
xchg
fwait
int3
jnp
sahf
dec
jo
or
filds
ja
imul
adc
mov
sub
sub
stos
imul
adc
fs
sub
and
fwait
in
out
rcll
iret
lea
push
js
pop
jmp
xor
cld
pop
jmp
nop
fdivrs
out
lcall
lock
add
cmp
repz
cli
pop
outsl
add
mov
test
xor
mov
jne
mov
xchg
dec
cmc
adc
push
jg
add
stos
imul
xchg
push
dec
jmp
or
xor
lods
pop
lods
pop
sbb
lds
bound
jl
sub
push
adc
repnz
xlat
push
and
cld
and
hlt
scas
jno
lcall
mov
sub
xchg
into
pop
stc
inc
inc
xchg
fdivrp
shll
mov
mov
clc
imul
fiadds
and
pop
fs
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
sub
cmp
loop
jo
jbe
dec
rclb
pop
inc
imul
test
pop
mov
movsb
xor
xchg
jge
inc
aam
inc
push
cmc
jb
push
cmc
sahf
roll
loopne
xchg
adcl
sarl
pop
sbb
into
pop
rcrl
dec
cwtl
es
mov
loop
loop
and
mov
hlt
gs
sti
push
cmp
mov
xchg
xor
scas
add
inc
sbb
xchg
fldenv
and
mov
nop
sbb
js
lret
insl
test
mov
mov
jge
repnz
add
in
cmp
mov
cmp
dec
xchg
jle
bound
adcl
pop
fsubl
xor
cli
lock
push
popfw
ret
punpckhwd
sbb
xor
cmp
dec
ds
arpl
scas
mov
inc
hlt
inc
push
in
rcll
cmc
sub
shll
data16
sbb
mov
scas
mov
ja
jl
xchg
ja
out
xlat
outsb
hlt
sbb
xchg
sub
push
test
adc
aas
pop
lds
cmp
mov
ret
adc
fwait
or
aam
xor
jns
and
pop
inc
lods
dec
sub
mov
xchg
push
ficoms
jnp
mov
sbb
sub
xor
pushf
push
pop
cmpsl
add
sub
icebp
fs
inc
sahf
add
mov
ljmp
push
shr
add
mov
pop
mov
push
incb
jne
outsb
push
mov
out
lods
xchg
inc
push
cwtl
push
xchg
aaa
std
fldcw
lods
sub
xchg
inc
js
fcmovne
push
pop
pop
in
sub
fildl
mov
jle
popa
sub
repnz
jecxz
xor
and
add
push
fcoms
mov
adc
dec
movsl
mov
mov
test
jge
push
jo
push
inc
js
push
mov
decb
push
test
int
mov
insl
xchg
push
sub
xorb
mov
dec
out
test
xor
int3
into
add
cmpsb
dec
aam
aas
dec
andl
and
mov
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
push
loopne
cmp
loop
jo
fnstenv
arpl
sub
lret
insb
lds
inc
mov
repnz
push
xchg
incl
cwtl
jnp
es
cmpsl
gs
lea
inc
xchg
sti
insl
jge
jge
out
adc
jb
orl
addr16
add
add
mov
dec
es
push
lods
fisttpl
fmuls
push
cld
mov
cmpsl
mov
inc
adc
mov
push
xchg
push
test
inc
pop
pop
adcb
js
test
jns
popa
inc
sbb
mov
cwtl
in
mov
data16
adc
jb
and
xor
bnd
fwait
add
and
je
mov
aaa
push
lcall
pop
mov
or
jns
push
les
inc
mov
cli
xor
adc
xchg
rcll
xchg
push
mov
test
lock
xor
aaa
mov
lret
sbb
xlat
xchg
or
ja
xor
test
push
xchg
es
xchg
cmp
loopne,pt
pop
or
dec
xchg
sbb
je
clc
jp
mov
arpl
lock
pop
and
leave
or
inc
jae
pop
push
mov
daa
popa
les
sub
push
cmp
cmp
dec
test
and
sbb
mov
lret
adc
sbb
inc
pop
and
ss
push
jecxz
sbb
sub
mov
adc
dec
inc
ds
pushf
mov
hlt
scas
mov
xor
jnp
and
xchg
ljmp
push
pop
inc
lcall
jbe
adc
dec
cmp
cmp
inc
push
test
push
mov
mov
mov
daa
stos
pop
sbb
pop
push
or
movsb
and
call
pop
fs
icebp
xchg
bound
and
out
jg
clc
push
pop
repz
in
pop
mov
rcll
push
cli
jg
cli
test
movsb
fucom
jge
sbb
pop
lcallw
sbb
jmp
leave
cmc
loope
xchg
ret
imul
sbb
push
loop
out
mov
sub
add
xor
aaa
ja
fisubrl
cld
push
hlt
xchg
cmp
cmpsl
mov
mov
mov
shrb
mov
ljmp
pop
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
xor
pop
lds
and
jo
fdivrl
jge
mov
push
adc
das
inc
mov
mov
nop
mov
inc
mov
sarl
cmp
add
mov
jge
mov
jb
add
in
jge
ret
mov
rorb
out
dec
mov
je
ljmp
jo
fisubrs
stc
lds
fucomp
pop
jmp
hlt
pusha
mov
cmp
icebp
out
jecxz
jne
add
push
aaa
push
test
pop
sti
lcall
cmc
gs
cwtl
push
or
mov
jns
into
pop
mov
lret
jb
xchg
imul
pop
dec
push
add
xor
fidivl
fdivrs
inc
inc
repz
scas
push
gs
aam
arpl
lods
rclb
jmp
filds
bound
pop
xchg
in
rclb
loop
or
nop
jo
mov
cmp
pop
ja
stos
hlt
mov
and
sbb
mov
leave
shl
popf
jae
add
mov
loope
ss
mov
pop
shrb
mov
pop
sbb
or
dec
aam
rcrb
dec
inc
and
aaa
sub
aas
push
cmp
iret
pop
mov
pop
or
push
int
add
lea
cmpsb
mov
and
push
out
jnp
mov
push
rorb
je
cwtl
mov
fwait
stos
int
fsubr
aam
fisubrs
mov
je
push
int
pop
mov
insb
nop
mov
lods
lahf
inc
bound
es
add
inc
push
lods
movsb
ret
and
mov
pop
stos
sbb
mov
xor
adc
push
lcall
push
pop
les
fiadds
daa
pop
push
rcrb
jmp
sbb
inc
inc
xor
sbb
xor
shlb
aam
cmp
sub
mov
pop
out
adc
and
add
jecxz
pushf
cmc
jae
mov
fcomps
inc
mov
stos
std
ss
or
xchg
pop
pop
int
bound
mov
or
mov
cld
fwait
cmc
pop
pop
out
mov
int
jae
icebp
pop
fs
leave
out
sbb
incl
je
pusha
push
sub
ds
icebp
inc
call
js
cmp
dec
mov
push
adc
lods
ja
jns
xor
int
or
pop
dec
jp
sti
inc
stc
push
flds
dec
pop
dec
push
inc
scas
popf
aad
das
negb
sti
sub
cmp
orb
dec
inc
adc
or
std
bound
scas
jb
sbb
cmpl
lods
jbe
jl
inc
jne
xchg
in
push
data16
cld
push
lods
inc
pop
mov
gs
testl
popf
push
cmp
push
and
pop
lcall
iret
jge
ret
jg
add
dec
call
xor
push
pusha
add
sub
push
lea
hlt
test
movl
ret
pop
es
dec
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
data16
dec
mov
jo
aaa
mov
jl
pop
inc
add
jnp
mov
mov
bound
rorl
std
stos
aaa
fcomip
or
imul
add
mov
cmpsl
out
cmc
fs
pop
aam
mov
jmp
jg
adc
sbb
cmp
xor
lret
mov
push
xchg
outsb
popa
cmp
inc
xchg
add
out
ss
inc
test
jne
mov
loop
lret
jns
repnz
and
sbb
into
jmp
push
jecxz
arpl
mov
std
stos
cmpsb
mov
stc
push
stc
popl
jns
inc
daa
int
mov
mov
sbb
xor
lock
out
movl
clc
dec
int
lods
lods
insb
adc
fldt
inc
filds
ret
dec
sbb
imul
push
cld
test
scas
fdivrp
out
insb
xor
mov
add
movsl
push
and
and
loop
lret
mov
add
inc
orl
push
xor
inc
sub
ss
mov
fwait
pop
inc
mov
xor
out
jmp
pop
fidivrs
adc
add
xchg
jnp
or
inc
repnz
loope
mov
in
mov
add
mov
in
adc
rcll
flds
ficomps
cmp
aaa
xor
dec
jl
xor
repz
xchg
sub
pop
test
xor
inc
xor
mov
inc
into
adc
inc
aas
sub
and
mov
ds
cld
mov
pop
mov
mov
sbb
sub
sbb
sbb
imul
dec
xor
jae
lret
jecxz
and
in
rorb
iret
lret
loope
je
push
lcall
fs
aad
adc
and
push
nop
cwtl
sub
or
daa
mov
jns
add
push
into
es
push
cmc
cld
je
fdivr
stos
dec
fdivrl
dec
jecxz
es
pop
lret
and
adc
clc
imul
aam
mov
jnp
add
fistps
cmp
bound
pop
sub
or
adc
xchg
jmp
lret
inc
movsl
xchg
inc
push
lods
or
mov
gs
in
outsb
mov
or
dec
arpl
lea
fidivrs
fmuls
lret
jnp
inc
pusha
pusha
les
dec
aaa
imul
dec
call
loope
and
mov
jmp
mov
xchg
repnz
imul
push
mov
mov
jo
cmpb
std
inc
stos
xor
es
adc
sbb
inc
movsb
cmpsl
sub
cmpsl
roll
adc
shll
inc
fbld
push
and
add
insl
out
insl
add
outsl
insb
cmp
push
test
int3
scas
aas
jecxz
loopne
lods
dec
mov
test
insl
mov
push
xchg
jge
inc
pop
outsb
mov
outsl
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
mov
adc
test
jo
push
jne
add
jne
add
or
fs
inc
dec
push
cltd
fs
xlat
decb
push
sbb
addb
xor
es
call
sub
dec
mov
hlt
cmpsl
xlat
sbb
jmp
mov
sbb
cmp
fisubrs
pop
jmp
out
adc
jge
jne
lret
cld
fsub
mov
pop
arpl
sarb
mov
loop
test
sbb
nop
xor
add
push
loop
push
popa
sub
outsl
shll
push
into
sarl
fs
jle
dec
sti
rcr
imul
out
aas
add
les
imul
mov
pop
sub
push
xor
fsub
pusha
ja
and
cmp
push
mov
mov
push
and
stos
mov
and
in
stc
cli
dec
mov
testl
out
into
cmpsl
jne
outsb
cltd
mov
aas
cmp
adc
movsl
icebp
out
neg
lds
inc
cmpsl
lods
cmp
lods
cmp
movsb
js
scas
push
pop
pop
mov
sbb
mov
sub
sub
push
mov
lods
sub
pop
icebp
jae
and
fabs
rorl
mov
ljmp
lock
inc
ja
pushl
adc
loop
data16
sub
xor
lret
je
push
mov
jecxz
adc
add
shll
jmp
pop
rol
lds
leave
cmpsb
imul
mov
sti
mov
imul
shlb
mov
stos
imul
cltd
xorl
cmpb
jno
add
mov
xor
out
mov
fstpl
push
maxps
adc
sub
push
or
inc
mov
cmp
xor
imul
ds
shll
jns
inc
lock
xor
xor
push
add
add
arpl
insl
scas
lahf
aad
inc
and
shlb
xchg
push
cltd
pusha
fimuls
loop
into
pop
push
cmp
inc
clc
xchg
outsb
pushf
arpl
scas
xor
xchg
fdivl
and
shrb
cltd
sub
popf
loopne
mov
jmp
mov
sbb
and
push
ret
or
mov
arpl
call
push
push
push
arpl
add
sbb
gs
cli
mov
and
cmp
sti
pop
cld
and
lret
int3
into
push
lods
idivb
fprem
addr16
pusha
xor
and
popf
sub
es
bound
ja
or
xchg
and
andb
arpl
cmp
inc
cld
ja
ds
or
mov
das
pop
pusha
shld
insb
lret
or
je
add
xchg
mov
test
cmp
sub
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
mov
xchg
cmp
jge
jo
or
pop
and
iret
cmp
dec
repz
jnp
mov
lcall
out
jmp
cmp
fwait
std
lret
loop
icebp
xchg
pop
sub
mov
cld
jge
out
lock
mov
xchg
iret
test
pop
incb
xchg
ret
xor
jae
pop
sub
loope
inc
xor
xchg
mov
mov
push
sub
or
f2xm1
sbb
dec
cmp
inc
mov
leave
and
lcall
cmp
stc
pop
push
mov
loopne
test
mov
in
lods
and
imul
shlb
fidivrl
jl
addr16
ja
jmp
inc
js
outsl
cmp
imul
sub
xor
ljmp
test
or
adc
push
cltd
loope
pop
imul
aad
jmp
iret
sub
inc
shl
imul
fcmovnb
pusha
mov
test
je
mov
jno
adc
stos
dec
add
mov
pop
fidivs
mov
push
inc
xchg
loope
xor
mov
and
adc
add
adc
mov
mov
jns
dec
jns
and
inc
or
lret
cmp
test
xor
popf
xor
or
out
mov
pushf
xchg
repz
mov
into
cld
pop
pop
and
andb
sti
add
dec
push
pop
clc
push
push
pop
mov
xor
pop
and
jecxz
inc
push
sub
fdivr
mov
adc
lods
aad
cmp
andl
les
aam
sub
adc
mov
dec
inc
dec
add
inc
cmp
insb
js
pop
jae
sbb
psraw
cli
mov
pop
pushf
subb
jns
pop
mov
pop
push
arpl
mov
and
lret
mov
ret
arpl
call
cld
cmp
mov
mov
jg
sbb
sbb
in
mov
adc
adc
jns
push
jns
mov
stos
scas
imul
fsubl
xchg
mulb
or
stos
leave
mov
jmp
mov
addr16
cmc
pop
pushf
and
sti
cmpsb
jle
stos
and
sub
sbb
push
loope
imul
addr16
push
pop
add
popf
sbb
mov
cmovp
mov
shlb
call
xor
js
and
fbld
test
mov
push
adc
mov
cltd
mov
jl
lods
sbb
pop
nop
mov
jnp
add
pop
push
mov
das
xchg
adc
mov
sbbl
xchg
pop
inc
movsb
sub
cli
xchg
xchg
jns
inc
lods
and
repz
pushf
xor
jbe
inc
fidivl
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
aas
test
jo
and
jo
xchg
enter
and
fistl
enter
iret
mov
xor
notb
mov
cmpsl
sub
ret
add
out
mov
out
iret
mov
adc
add
and
lcall
jno
jno
ret
mov
adc
pop
pusha
push
mov
jg
cltd
sbbl
dec
and
pop
mov
mov
addr16
es
cmp
int3
lds
outsb
sbbb
sahf
pop
fcmovu
cmc
mov
push
aaa
adc
mov
add
test
incb
push
dec
push
call
pop
fimuls
xchg
lds
dec
fists
xor
cmp
pop
pop
pop
movsb
xorb
fisubrl
leave
lds
dec
jnp
cmp
fisubrl
ret
dec
mov
inc
pop
outsl
test
mov
or
out
add
inc
sub
bound
mov
sub
sbb
cmp
cli
or
xor
es
mov
or
ret
sbb
ss
mov
push
imul
outsl
std
movsl
mov
mov
insb
jo
in
mov
add
xor
xor
push
cld
cmpsl
ja
stc
push
pop
mov
fs
push
xor
imull
mov
mov
fs
inc
outsl
out
ret
call
xor
rcrl
data16
sahf
and
pop
mov
fs
jo
mov
dec
inc
dec
subl
sub
sarb
mov
cmp
stos
sub
out
cli
test
adc
fmull
jbe
xchg
stos
add
push
add
test
xor
or
stc
and
mov
out
push
and
js
test
popf
ficoml
cmp
mov
mov
in
inc
lea
shr
ret
into
leave
or
mov
loope
pop
ja
and
pop
pop
imul
daa
les
into
mov
cltd
jo
stc
sti
xchg
push
fstp
xchg
fistl
cmp
les
mov
repnz
imul
call
sub
mov
jnp
cmp
xor
rolb
cmpsl
movsb
add
sbb
loope
mov
or
testb
dec
jno
pop
xchg
pop
jbe
mov
or
push
inc
dec
cmp
inc
push
imul
or
das
pop
inc
push
pop
or
std
dec
add
out
pop
mov
or
adc
hlt
lret
les
repz
insl
data16
xor
roll
ret
cmp
insl
inc
mov
decl
hlt
insl
cmpsb
add
jne
mov
popf
cmpsl
mov
push
xor
repnz
add
jne
xor
sbb
cs
ficomps
sub
and
mov
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
or
jo
and
jo
andl
jnp
sti
xchg
aam
sub
xlat
aaa
and
stos
cmpsl
cmc
ret
xchg
movb
cmp
in
cmc
pop
leave
aas
cs
stos
adc
pop
mov
les
out
repz
and
inc
movsl
ds
ror
sbb
or
pop
or
xchg
jo
pushf
filds
xor
push
sbb
scas
arpl
pop
ret
movq
mov
test
sbbb
jg
and
adc
and
or
imul
mov
lea
ret
rolb
stos
cmp
adc
xor
cmova
outsb
jb
movsl
cs
popf
loopne
pop
das
scas
inc
shrl
leave
arpl
cmp
inc
je
push
and
movsl
push
mov
stos
fiaddl
xchg
jns
jle
mov
xchg
sbb
add
das
nop
cld
daa
ljmp
pop
push
add
mov
and
push
ret
aaa
mov
fsts
rcll
xor
lahf
js
xor
or
test
out
cmc
sub
add
hlt
or
test
mov
data16
scas
loope
jo
jnp
pop
std
repz
inc
inc
mov
ss
nop
jns
pushf
pusha
push
and
dec
fdivr
hlt
ja
mov
jne
xchg
push
cld
sub
mov
fs
sar
inc
data16
fcmovb
add
mov
lock
cmp
sub
or
sbb
roll
test
adc
and
scas
adc
jge
dec
fwait
mov
shrl
push
add
in
sbb
xchg
outsb
xchg
in
jecxz
test
dec
jmp
dec
call
jp
lock
ret
and
sub
stc
or
stos
push
push
in
mov
mov
and
into
fwait
jo,pt
xor
pop
cltd
pop
inc
jno
int3
out
cld
dec
fsubp
scas
fisubrs
js
decb
mov
jnp
lahf
cmp
ljmp
push
xor
insl
sbb
hlt
jmp
mov
cmpsb
enter
adc
inc
shlb
dec
sbb
xor
mov
dec
mov
jmp
jge
je
mov
in
cwtl
pop
ret
sub
push
cmp
inc
cmpsl
cs
mov
fsubrs
lea
cmpsl
fs
pop
popf
pop
enter
subb
xor
sahf
roll
cmp
rcrl
in
dec
out
pop
add
adc
dec
mov
js
sahf
test
fs
push
das
nop
addr16
outsb
mov
push
and
out
pop
ljmp
inc
iret
xor
pop
and
fdivs
out
jg
adc
lea
addr16
jbe
insb
add
rolb
pop
movsb
add
jmp
cmpsb
sub
lahf
popf
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
inc
popf
cs
and
jo
jno
call
sub
push
mov
xchg
mov
adc
dec
push
shl
lcall
jnp
les
pusha
mov
decb
rorl
ret
mov
xor
shll
test
sub
jb
jb
cmp
pop
mov
cmc
add
lods
mov
and
loopne
lea
cmp
leave
jg
lret
and
jbe
pop
scas
lret
data16
inc
shrl
leave
fs
dec
jl
fsubrl
xor
fs
aad
sahf
sub
mov
faddl
outsb
add
popf
test
sub
push
inc
xor
aaa
adc
bound
fnstsw
pop
je
mov
arpl
fs
pop
pop
or
push
mov
push
and
ss
lods
push
movsl
push
int3
jo
and
jecxz
xor
mov
xchg
push
cmp
imul
dec
push
or
mov
lods
aam
pop
xchg
fisubrs
add
mov
or
sub
sahf
push
lcall
push
cmp
ss
lods
fisubrs
ljmp
or
js
jne
dec
jno
and
bound
cli
dec
popf
add
add
lret
hlt
dec
inc
cld
aaa
mov
inc
cmp
js
leave
xchg
jecxz
push
jo
pop
ret
add
mov
push
push
lea
movsl
sub
sbb
je
js
jae
loop
push
dec
mov
xor
cmp
mov
mov
imul
fcmovbe
mov
pusha
adc
out
mov
mov
inc
sub
xor
iret
jg
sahf
cmp
repz
cs
hlt
scas
stos
xchg
test
inc
ja
je
imul
call
cmp
jb
fucomp
mov
xchg
jcxz
mov
arpl
and
xchg
dec
jmp
add
iret
lock
mov
inc
mov
cmp
lahf
dec
jmp
jmp
inc
xor
fcompl
add
stos
mov
enter
xor
enter
neg
cmp
clc
push
xor
adc
jle
xchg
lahf
lahf
inc
into
ret
xor
cmp
xchg
loope
fbld
mov
sbb
leave
mov
xor
push
aaa
xchg
repz
repnz
cmpsl
popf
std
xchg
dec
enter
xor
ja
iret
adc
cmc
out
pop
and
cmpsl
mov
push
std
mov
rorl
fisubs
in
jbe
mov
daa
std
push
mov
xchg
lods
repnz
mov
in
movsl
js
mov
ja
mov
and
ret
out
lret
adc
push
mov
mov
xor
mov
jne
inc
push
xchg
push
clc
add
popa
jae
cld
or
iret
out
xor
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
testb
adc
jb
sub
pop
mov
lea
xor
sbb
jbe
aam
sarl
pushf
cmpl
shl
mov
imul
push
dec
pop
or
fildl
sbb
cmp
int
bound
inc
fcompp
jp
aaa
dec
cmp
popf
sbb
lods
mov
sbb
mov
sbb
add
inc
mov
dec
out
mov
xor
push
sub
out
js
mov
lock
imul
push
int
je
jno
adc
inc
out
imul
and
fwait
mov
fwait
inc
insb
adc
lock
jb
ds
cmp
int3
mov
mov
loopne
rol
sbb
in
jns
in
sahf
inc
in
loope
or
push
aaa
add
jne
inc
ja
mov
outsl
jg
int3
movsl
lret
sub
and
mov
data16
sub
xchg
or
mov
out
repz
aas
lock
mov
mov
fstps
outsb
lea
out
mov
cmpsl
sub
movsb
push
add
add
pop
add
in
adc
xchg
push
pop
pop
cmp
in
test
shl
in
pop
addl
xor
mov
test
cltd
repnz
fxch
lods
out
out
jb
cmp
stc
push
jbe
cwtl
enter
sub
pop
inc
das
ret
iret
ret
push
fcoms
js
jge
outsl
mov
sub
jmp
ret
fisubs
or
insb
sub
jle
push
jecxz
mov
or
cmpsl
jne
sub
cmp
adc
outsl
inc
inc
cmp
outsb
clc
sti
jg
lods
aas
cld
lods
gs
fcmovb
andl
pop
jae
fisttpll
outsl
shrd
xchg
fsub
adcl
mov
rcrl
stc
jnp
push
lcall
int3
cmpsl
shll
ret
pusha
xchg
cmpsb
cmp
sbb
bound
pop
adc
mov
push
fcomi
add
inc
add
fcmovne
insl
repz
lods
mov
arpl
and
add
cmp
rcl
insb
mov
cmc
pop
dec
lock
and
push
xchg
jg
cmpsb
mov
mov
push
addr16
imul
jecxz
dec
inc
bound
pop
out
mov
sbb
mov
aas
xor
xchg
rcr
bound
and
movsb
mov
and
ss
xchg
sub
mov
mov
pop
or
adc
loope
sbb
xchg
js
imul
call
cs
mov
scas
sbb
scas
and
not
add
mov
idivb
mov
cmp
jle
hlt
addl
and
out
mov
cmpsl
add
xchg
push
jge
inc
dec
jbe
sub
xchg
rcl
inc
js
adc
sbb
in
dec
inc
sbb
add
add
dec
push
bound
xor
jecxz
dec
cmp
jne
jnp
andb
test
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
div
ret
jo
and
jo
sub
xchg
cmpsb
dec
rcrb
rorb
mov
mov
pop
test
pop
xor
push
dec
add
orl
sahf
inc
aam
jnp
dec
cmpb
jmp
jecxz
scas
dec
test
fdivl
out
call
and
xchg
push
mov
xor
cmp
js
pushf
xchg
pop
loop
das
mov
outsl
adc
add
adc
ret
fabs
aaa
inc
loop
add
pop
sahf
sbb
or
cld
outsl
pop
inc
das
or
hlt
daa
popa
rcr
mov
adc
out
cli
icebp
call
mov
dec
lods
inc
stos
mov
push
imul
outsb
addl
jecxz,pn
cmp
ficoml
pop
test
ljmp
andb
insl
jmp
or
sbb
jecxz
lcall
adc
dec
add
test
aad
or
lar
fwait
loope
mov
xchg
or
fcmovnbe
add
mov
je
lcall
punpckhbw
mov
jno
sbb
cmpsb
mov
pop
adc
loop
jae
hlt
fs
xchg
pop
outsb
xor
mov
or
push
inc
daa
rol
jns
in
inc
mov
xchg
fwait
popa
xchg
adc
pop
sarl
sub
xor
test
sbb
xchg
test
cmpb
nop
setl
cmp
shrl
mov
and
sbb
cwtl
outsb
or
or
test
out
mov
sub
arpl
push
mov
sti
mov
push
dec
sbb
push
in
mov
sbb
rclb
push
out
into
idivl
mov
test
mov
out
mull
lea
push
mov
outsb
add
ret
jle
dec
jnp
fs
scas
dec
inc
jg
xchg
add
in
lea
jnp
add
sub
lahf
jecxz
dec
loop
mov
repnz
pop
xor
adc
std
xchg
test
dec
push
sub
gs
js
dec
push
ficompl
jns
repnz
nop
add
mov
fs
lahf
mov
sbb
add
add
xor
in
jmp
test
jge
mov
pusha
cmp
xchg
inc
mov
out
outsb
and
lds
jae
xor
scas
test
shll
gs
adc
adc
cmpsl
push
sub
lret
inc
xchg
sbb
add
aad
das
xor
incl
popa
bound
sub
popa
pop
ret
test
stos
pop
cld
cmp
scas
mov
mov
inc
notb
cmpsl
xchg
mov
push
test
shll
push
mov
scas
daa
cmp
outsl
push
aam
push
sahf
pop
pop
cmp
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
xorl
jge
jo
stos
cli
add
sbb
sub
mov
push
mov
leave
push
mov
mulb
pop
hlt
push
jno
mov
or
sub
jo
sub
xor
add
sub
negb
imul
fs
mov
stc
mov
push
dec
jno
push
add
jb
sub
int
insb
mov
pushf
add
sub
aad
mov
pop
add
or
and
sub
xchg
xchg
xchg
sbb
out
in
push
push
ja
dec
add
push
push
lods
test
bnd
mov
pop
insl
jbe
sti
and
repnz
test
ds
mov
mov
mov
adc
xor
lea
sub
xchg
and
int3
push
mov
add
lea
mov
subl
pop
inc
dec
shrb
pusha
in
lds
sbb
shlb
je
popf
or
mov
clc
jne
jnp
cmp
fs
xor
xor
aaa
imul
fldl
or
cmp
pop
imul
pushf
imul
fwait
dec
pop
add
jecxz
pop
jle
jne
dec
iret
nop
sub
push
std
out
sub
loop
mov
ds
adc
leave
pop
cmp
pusha
sbb
js
ds
cmp
pop
adc
xor
inc
sbb
outsl
push
inc
nop
mov
jb
jecxz
xor
mov
pop
ret
xor
ret
push
xchg
loope
insb
loopne
cltd
daa
sub
jle
in
fisubrs
cmp
push
in
push
and
pop
enter
in
sbb
outsl
mov
push
mov
jno
mov
arpl
loop
insl
out
mov
int
lret
out
insl
shlb
sub
lcall
jmp
cltd
lods
cmp
push
mov
lods
mov
mov
and
sbb
mul
inc
xchg
cmp
repnz
pushl
push
movsb
out
jnp
popf
popa
cmpsl
ljmp
cmp
je
pop
xor
jge
sbb
scas
stos
int3
jno
cli
ss
xchg
mov
daa
lods
ret
aaa
mov
ret
sti
fldenv
lahf
ljmp
pop
movsb
ret
sbb
mov
sbb
push
out
fcmove
sbb
push
cmpsb
outsl
rorl
and
mov
cmp
out
mov
sarb
mov
xchg
cmp
cmp
push
jge
inc
mov
in
jb
xor
inc
fdivrl
sbb
jo
aaa
cld
sti
popl
nop
sub
adc
fwait
into
imull
ljmp
test
sub
jnp
inc
shrb
push
sub
leave
mov
lahf
pop
xchg
xlat
sub
pop
jo
mov
sbb
xor
add
dec
add
add
out
out
xor
call
xor
cmp
jo
and
jo
push
push
loope
cmpsl
idivl
jbe
shrb
les
std
or
pop
adc
frstor
gs
xor
into
mov
lret
insb
loopne
stos
add
les
push
lahf
jb
mov
or
adc
push
xchg
leave
jo
data16
add
sub
std
jge
add
movsb
fidivrl
es
jp
add
cltd
jl
aaa
hlt
jl
iret
mov
pushf
sbb
mov
cmp
add
hlt
jle
jnp
sbb
mov
sbb
imul
push
mov
mov
test
mov
mov
cmpsb
or
stc
cmpsb
sbb
repz
adc
je
mov
mov
pop
loop
and
test
pop
adc
xchg
sahf
xchg
scas
xchg
lea
cmp
and
enter
jge
je
jbe
daa
cmp
sbbb
mov
test
mov
push
adc
leave
push
mov
into
int3
out
cmpsl
cli
sbb
roll
sbb
aaa
inc
jmp
scas
cli
hlt
xchg
arpl
xchg
ret
add
clc
pop
push
lds
mov
movsb
dec
pusha
cs
and
push
mov
pop
insl
dec
fiaddl
popw
mov
xchg
fisttpl
pop
js
pop
mov
sbb
push
js
js
js
xchg
lock
dec
sub
xor
cmp
out
jp
push
add
mov
fwait
in
ds
push
sbb
jg
or
pop
sbb
push
popa
aas
insl
cwtl
mov
add
mov
mov
repz
cltd
mov
and
imul
or
fnstsw
pop
lcall
add
lds
addr16
outsb
pcmpgtw
inc
mov
nop
cmpsb
mov
and
mov
test
mov
jmp
and
xchg
sahf
mov
out
mov
cmpsl
and
sub
rep
mov
xor
push
das
scas
and
jno
stos
stos
outsb
stos
mov
movsb
arpl
dec
push
and
mov
inc
mov
inc
mov
into
and
mov
xchg
inc
inc
inc
mov
adc
inc
push
rorl
out
call
imul
cmp
out
push
popa
popa
push
pop
repnz
shrl
out
jno
out
pop
dec
cwtl
mov
push
ja
cli
sbb
enter
test
xchg
add
pop
xlat
pop
repz
mov
dec
rclb
sbb
aam
mov
mov
sub
mov
dec
idivb
inc
idivb
or
jl
inc
outsb
out
mov
arpl
inc
in
cmp
leave
pusha
mov
movsb
lock
push
jmp
sub
sti
xchg
fisttps
adc
add
mov
xor
jb
jmp
cmpl
inc
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
icebp
xorl
loop
jo
jge
jo
pop
sbbb
sarl
add
in
xorl
or
cmp
xchg
es
push
xchg
push
jge
loop
cmp
ja
loopne
fbld
or
xchg
mov
repnz
or
push
inc
jecxz
inc
je
icebp
addl
mov
xor
test
add
cmp
pop
dec
adc
or
pop
es
push
dec
pushf
push
inc
mov
mov
pop
adc
jbe
movsb
mov
mov
in
outsb
loop
xchg
sbb
inc
rcrb
xchg
pop
testb
jmp
jge
aas
jge
xor
aas
popf
iret
push
dec
jne
lret
sub
xlat
xor
add
mov
sahf
out
clc
xor
fisubs
cmp
test
lods
xchg
xor
xchg
sub
ljmp
out
mov
push
jno
movsl
jne
incl
or
fsubl
hlt
repz
mov
out
cs
xchg
dec
push
divl
adc
cmp
sub
les
xor
insl
shrb
outsb
xor
inc
out
add
mov
shl
cmp
out
fcmovu
insl
insb
and
xor
and
hlt
and
test
add
mov
cwtl
pop
ja
sub
cmp
stc
sbb
xor
cmp
rcrl
jne
mov
cmc
pop
dec
mov
xor
jne
mov
xor
dec
clc
xlat
clc
lret
xor
sub
add
mov
pop
leave
fisubrs
out
movsl
mov
adc
imul
cli
pop
imul
imul
je
in
rorb
push
jns
jb
pusha
xor
and
inc
mov
addr16
inc
into
or
cs
push
add
xchg
push
push
scas
lret
cmpsb
jl
rcr
inc
push
cmp
jp
push
jl
sub
pop
mov
fs
inc
or
int
adc
out
mov
push
sub
roll
and
jno
and
jns
push
mov
push
sub
mov
sbb
sub
adc
and
push
pop
repz
insl
cmp
aas
sahf
pop
sahf
xor
adc
push
into
repnz
mov
fisttpl
push
cmc
dec
lret
loope
mov
cld
sub
leave
mov
or
push
mov
push
in
mov
rcrb
inc
lret
in
cmp
mov
cmp
insl
in
xlat
in
out
cmpsb
repz
aas
pop
adc
xchg
inc
jns
pushl
ljmp
cmp
sahf
loop
xchg
and
js
sbbb
pop
or
dec
enter
mov
movsb
scas
push
enter
cmpb
stc
and
iret
int3
roll
jne
cmp
push
scas
and
xor
bound
imul
loopne
or
jmp
out
mov
ja
add
xchg
les
and
jo
sbb
aad
sbbb
decb
xchg
cs
jo
insb
loop
orb
rcr
push
or
repz
push
int
test
movsl
in
and
pop
xchg
push
xor
js
dec
sbb
popa
sbb
cmpsl
rorb
movsb
sub
movsb
mov
sbb
mov
into
pop
sub
mov
or
clc
notl
mov
mov
lods
xor
jno
mov
mov
fs
xor
mov
insl
sbb
pop
clc
shlb
into
pushf
mov
ds
repnz
cmpsl
pusha
movl
mov
and
mov
arpl
les
push
cmp
in
shll
push
dec
pop
mov
in
stos
jge
dec
sub
or
jl
mov
add
pusha
bound
mov
cmp
xchg
ds
mov
fldl
xorb
inc
mov
jp
int
cli
xchg
mov
sub
lods
icebp
xor
pop
cmp
mov
push
clc
je
test
inc
scas
or
outsl
lds
and
stc
test
mov
inc
mov
sbb
out
fwait
dec
jbe
psrlq
push
in
loopne
or
cmp
in
sub
pop
outsl
jmp
pop
out
shl
icebp
mov
sbb
mov
sub
jb
add
lret
jno
mov
pushf
jne
scas
jp
and
imul
lahf
es
je
and
xchg
pop
das
push
inc
pop
cltd
cmpsb
dec
push
jo
outsb
call
scas
sub
mov
shll
lods
mov
dec
push
push
or
dec
sbb
negl
add
xchg
in
stos
and
jno,pn
jle
jecxz
push
scas
jg
sub
jp
and
push
addr16
cmp
sub
adc
std
not
sbb
neg
mov
ss
aam
cmpsb
push
popf
add
push
jb
xor
mov
add
into
mov
mov
adc
mov
loop
out
icebp
pop
push
jmp
repz
insb
fnstenv
xor
dec
inc
dec
sub
inc
mov
inc
popa
xor
cwtl
movl
mov
addr16
sbb
hlt
push
loop
mov
push
fisttpll
jmp
cmp
dec
pop
iret
sub
or
outsb
outsb
xor
jno
fcoml
dec
jl
bt
xchg
lahf
orb
repnz
bound
jne
out
mov
jno
cmpsb
lcall
and
pop
ror
fists
pop
mov
lods
jmp
pop
arpl
icebp
jne
and
insl
addr16
mov
jge
bound
jp
mov
clc
add
xchg
adc
test
cmp
mov
cwtl
fstl
sub
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
int3
testb
jge
jo
add
lahf
fdiv
movsl
aam
sbb
mov
mov
ss
jo
and
add
inc
add
pop
mov
outsl
pop
test
push
dec
adc
jbe
cmpsl
aad
into
outsl
addr16
xor
pop
rcrl
xchg
popf
dec
and
mov
imul
sbbl
dec
outsl
cmpsl
pop
push
int
int3
mov
stos
icebp
addr16
fs
mov
movsb
xchg
jne
scas
jno
jge
jne
repz
jmp
dec
mov
popf
sahf
popf
filds
sbb
out
out
inc
mov
jbe
push
jne
cmp
fisttpl
dec
fiadds
sbb
in
ljmp
aam
popf
dec
dec
jl
icebp
idivl
mov
xchg
cmp
nop
pop
mov
and
fnstcw
xor
nop
mov
dec
inc
call
lcall
pusha
mov
fs
or
cmc
cld
pop
cltd
lahf
call
lahf
loop
jg
lret
je
sbb
lcall
or
test
push
sub
fnstcw
push
jae
mov
mov
sub
and
pop
push
mov
loope
js
sarb
mov
sarl
cmpsl
mov
dec
add
jmp
jno
popa
mov
punpckhwd
adc
mov
add
js
sar
rcr
rorl
adc
push
int
dec
or
cltd
shrl
rcr
xor
push
or
int3
jno
push
scas
call
xor
fstpl
cmp
je
leave
mov
adc
xor
in
or
add
imul
jo
push
jno
inc
pop
dec
stc
pop
out
cmp
dec
aas
xchg
pop
dec
and
fdivr
addr16
testl
inc
test
or
pop
xchg
mov
dec
icebp
sahf
pop
cmp
xchg
cmpsl
sub
xorb
inc
fidivl
stos
inc
cmc
ss
push
std
adc
mov
jg
dec
sbbb
fwait
mov
loopne
iret
cmpsb
ret
add
nop
std
jne
out
xor
cld
int3
ja
iret
or
pushf
mov
imul
jg
fdivs
pusha
int
popa
sub
cmp
and
mov
xchg
adc
or
idivb
inc
or
dec
loope
popf
lds
rcr
enter
out
lds
and
inc
out
loope
call
imul
mov
aad
or
clc
mov
fcom
jae
sub
fsubl
mov
cld
sub
lds
ret
xor
outsb
xor
cmp
cmp
mov
mov
pop
inc
scas
dec
sub
or
push
addr16
cs
mov
sub
push
mov
call
scas
xor
adc
stos
mov
lret
jle
sbb
adc
push
fwait
or
inc
pop
sbb
andb
dec
jp
and
fisttps
jne
call
int3
int
add
cmpsl
dec
pushf
not
xor
testb
pop
add
and
fisttps
pop
dec
icebp
xchg
xchg
xchg
mov
mov
stos
les
cld
inc
daa
xchg
or
push
stc
sbb
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
cwtl
sub
push
es
jo
push
push
xor
jl
mov
movsl
or
out
sub
jmp
pop
fstpl
ss
inc
imul
dec
test
stos
add
mov
out
mov
xlat
push
mov
cli
inc
push
or
jmp
push
cltd
call
push
mov
mov
add
xorb
addr16
jge
push
test
pop
test
and
sub
xchg
dec
mov
nop
dec
movsl
inc
leave
mov
psubsb
outsb
ljmp
adc
mov
adc
popa
lahf
mov
subl
insb
adc
mov
inc
pop
gs
mulb
pop
lahf
and
ficompl
jns
movsb
mov
mov
das
popf
or
sub
add
dec
in
sahf
mov
pop
int
test
jge
mov
xor
lret
inc
aad
sub
popa
pop
adc
insb
jmp
lret
push
aad
or
push
inc
xchg
stos
mov
lahf
mov
xor
in
add
dec
mov
mov
pop
mov
dec
cs
sub
xchg
mov
cmp
scas
xor
cmpsb
adc
mov
out
xchg
push
out
push
data16
test
fidivrl
or
xor
int3
or
or
cltd
sub
into
sbb
sub
fs
lcall
jo
cmp
loop
mov
xchg
jecxz
das
inc
arpl
xor
jl
mov
ret
cmpsb
adc
lcallw
inc
inc
xchg
mov
mov
loopne
lcall
adc
jae
inc
jo
iret
add
push
add
jmp
lods
sub
icebp
es
pusha
cmp
movsb
jle
xchg
inc
xor
sub
out
mov
sub
cmpsl
out
or
sub
lods
gs
and
push
shrb
arpl
mov
and
pusha
das
ret
adc
clc
dec
xchg
sbb
adc
test
sti
outsl
add
dec
rcll
pop
outsl
xchg
or
sbb
fcmovnb
or
sub
cld
xchg
loope
les
bound
dec
mov
xchg
movsl
dec
loope
and
xor
mov
mulb
sub
mov
test
mov
inc
mov
pop
hlt
or
loope
pushf
test
ss
inc
xchg
sbb
add
push
pop
and
popf
gs
cld
imul
pop
sub
jmp
imul
inc
divb
cs
insb
add
bound
mov
inc
je
out
inc
fiadds
stc
jb
ljmp
jp
jp
sbb
or
xchg
push
push
xor
icebp
cmpsb
pop
add
sbb
das
std
inc
and
mov
test
inc
lret
lcall
clc
lea
sbb
mov
xor
pop
pop
sbb
jb
jo
jns
hlt
push
ljmp
je
xor
test
es
loopne
adc
xchg
xor
movsl
xchg
imul
jbe
mov
repnz
mov
push
xor
jg
add
mov
xchg
movsl
rcr
lods
js
sbbl
roll
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
mov
cmc
jo
lahf
jge
jo
pusha
xchg
dec
xorb
pop
xchg
insl
pop
lahf
inc
sbb
lods
and
inc
inc
dec
das
xchg
enter
jae
aas
repnz
pop
xor
loope
xchg
jl
jo
leave
cltd
lret
shr
or
push
add
cmpsb
les
push
lds
xchg
arpl
add
nop
pushf
daa
cmp
xchg
aam
jle
pop
leave
test
cli
addr16
cli
or
inc
pusha
cli
loopne
imul
daa
mov
cmpsl
pushf
jae
jbe
mov
out
test
lods
jne
cmp
test
sbb
nop
pop
sbb
test
ss
mov
push
paddsw
in
pop
mov
sbb
adc
sahf
xor
dec
nop
mov
add
xor
cmpl
loope
sbb
outsb
and
ficoms
push
in
rolb
jb
dec
cs
outsl
xor
and
sti
outsb
pop
and
push
enter
roll
jmp
loop
cmpsb
mov
sub
cmp
cmp
imul
mov
inc
jbe
mov
int
ss
cmp
cli
cli
jo
fcomps
sahf
fwait
cmp
sbb
inc
mov
lret
dec
sbb
outsb
pop
out
or
ds
jl
jnp
out
std
daa
mov
mov
sbb
pop
popa
fadds
into
or
es
jnp
ficoml
ret
andl
add
xor
lret
add
xchg
jbe
int3
pushf
test
xor
cmp
pop
adc
int3
mov
scas
in
cmp
mov
movsb
or
ret
cltd
mov
xchg
mull
mov
lods
add
or
push
daa
ss
lods
adc
and
jmp
jp
pop
fcmovbe
lds
stc
into
push
sbb
jns
addl
andl
fnstsw
cmp
pop
xor
ljmp
mov
adc
rol
loope
xchg
data16
loope
popa
jp
outsb
pusha
in
push
lods
push
dec
repnz
jno
xchg
add
in
enter
or
gs
pop
sbb
test
mov
fcomp
leave
insb
sub
rcll
add
push
mov
or
lret
mov
xchg
pop
mov
and
xchg
ss
adc
rcrb
cmp
pop
xlat
pop
and
frstor
scas
in
or
pop
cmp
mov
sbb
or
mov
jb
cmp
cltd
and
aam
lret
pop
xor
negl
mov
dec
into
data16
mov
sbb
fimuls
mov
lahf
mov
dec
int
iret
ffree
fisubs
ds
adc
push
in
hlt
out
dec
adc
stos
test
pop
repnz
cwtl
sbb
push
or
int
push
mov
jge
hlt
push
test
and
push
mov
stos
adc
imul
pop
fldt
lds
xchg
mov
in
shlb
dec
mov
out
jecxz
pop
inc
cmp
pop
adc
mov
jecxz
js
dec
mov
aas
iret
cmpsb
aas
and
ja
push
inc
sub
mov
fidivrl
or
pop
or
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
fstpt
jo
lahf
jge
jo
jge
lds
adc
insb
pop
jl
stos
mov
fildl
push
stos
lcall
mov
int
movsl
fwait
mov
inc
pusha
mov
jo
popa
loope
push
push
inc
cld
aas
lea
sub
enter
and
aaa
cli
jge
cmp
dec
inc
or
inc
test
adc
xchg
mov
pop
in
mov
movsl
mov
enter
neg
in
xchg
xor
xchg
and
cli
jne
imul
adc
jo
sti
ret
fld
imul
push
aaa
push
inc
add
mov
xor
fstpl
mulb
shll
cmc
in
inc
std
fmuls
mov
repnz
lret
xchg
loop
jae
filds
dec
fistpl
dec
fdivl
cwtl
inc
jp
and
dec
jbe
fnstenv
mov
xchg
inc
adc
add
jle
je
inc
adc
out
jg
xchg
loope
pop
jl
mov
push
dec
ss
jg
lret
xor
outsl
cmpsl
and
fcomps
push
aam
mov
stos
ds
jg
je
aas
movsb
mov
xchg
test
pop
jbe
orl
pop
xor
fbld
pop
inc
pop
movsl
dec
out
jns,pt
inc
mov
in
dec
and
cmp
adcl
je
jecxz
xor
pusha
jno
jne
jae
scas
xchg
xchg
bound
pusha
and
mov
inc
inc
mov
movsb
fstl
cwtl
sti
pop
mov
stos
jb
adc
out
mov
arpl
push
ret
loope
cmp
in
or
sbb
add
xor
xor
fdivp
cmp
lcall
jmp
les
jg
cmp
repnz
in
add
mov
lahf
xchg
pop
jge
popf
cmp
int3
ja
xor
pop
cmpsb
or
mov
adc
mov
inc
aaa
popa
std
mov
mov
arpl
test
into
cmp
fisttpll
pop
repz
jl
pop
jno
adc
test
ret
add
jmp
mov
mov
push
fcoms
mov
pop
incl
mov
xchg
roll
adc
xchg
mov
cmp
test
in
mov
jge
sub
xor
nop
sbb
fldcw
push
adc
cwtl
pop
orl
ja
mov
xchg
pop
pop
xor
push
icebp
adc
jbe
stos
lds
pushf
repz
jo
bound
addr16
sub
das
mov
in
mov
inc
hlt
pop
insl
pop
repnz
mov
fdivl
push
mov
ljmp
cmc
dec
or
int3
shll
mov
out
xor
insl
push
inc
fdivrs
je
mov
test
mov
cmp
enter
stos
repz
data16
jg
jne
dec
lahf
pop
lea
stc
add
or
movsb
scas
loopne
xchg
sub
lcall
fisubrs
movsb
imul
or
push
and
and
inc
xor
push
orb
inc
mov
sbb
mov
push
mov
jl
mov
jmp
inc
std
cmp
fs
cmp
int
or
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xchg
xlat
add
jo
lahf
jge
jo
xchg
in
add
shrb
push
pop
int
call
lock
outsb
inc
mov
jo
xchg
fs
gs
or
lea
das
test
test
imul
out
push
add
fldenv
andb
shl
inc
int3
pop
cmp
shlb
cmp
jge
mov
test
xchg
push
movsb
cltd
andl
andb
pop
xchg
call
and
mov
cmp
js
mov
test
inc
cmp
sarb
js,pn
add
les
push
push
mov
loope
outsb
out
mov
mov
data16
jb
inc
sub
fld
jns
hlt
sbb
mov
add
xor
jno
mov
lea
and
jne,pt
xchg
daa
push
stos
cmc
shlb
jle
lea
or
push
sbb
adc
xchg
loope
jo
and
adc
add
loopne
in
mov
orl
lcall
in
xchg
adc
dec
push
lret
sarl
insb
ja
add
push
xchg
decl
adc
fsts
jb
das
mov
outsl
mov
inc
in
mov
pushf
inc
dec
dec
adc
loop
imull
fs
ret
sub
cwtl
icebp
enter
pusha
cmc
inc
aas
roll
lahf
mov
xor
pop
sahf
mov
pop
inc
inc
roll
orl
add
xchg
loope
mov
xchg
mov
inc
jae
ret
dec
in
jmp
xor
sbb
jmp
loope
repz
lock
inc
push
cs
sbb
jb
pushf
nop
mov
xlat
daa
sbb
popa
pop
dec
jae
popf
movsb
adc
data16
xor
mov
sub
push
dec
repz
test
popa
or
ret
adcb
mov
js
and
mov
dec
or
push
or
lret
add
mov
adc
neg
jmp
push
rep
sbb
mov
sbb
test
imul
jno
or
cmc
or
cmp
stos
je
pop
roll
ret
mov
adc
jp
popf
iret
test
scas
std
mov
mov
sbb
loope
std
dec
jns
pop
or
mov
push
loopne
data16
inc
fwait
pop
dec
ss
int
and
insb
enter
dec
cmp
cmp
hlt
aam
xor
aad
addl
popf
fisubs
ljmp
xchg
inc
inc
push
xchg
inc
ss
stc
ret
daa
mov
fistpll
jb
xchg
adc
adc
pop
divl
cmp
and
ret
sbb
mov
sub
push
mov
mov
sbb
insl
ja
mov
fucomip
popf
fdivs
outsl
fcomps
mov
loope
push
sti
cwtl
movsb
js
add
ss
rcrl
mul
mov
daa
shlb
jl
js
lret
jecxz
and
test
and
xchg
fstl
jmp
push
adc
cli
frstor
or
out
inc
push
mov
pushf
jecxz
pop
push
in
or
or
dec
mov
or
mov
and
popa
cmp
push
icebp
rcrl
add
jmp
shlb
sub
lret
je
je
mov
jge
jo
xor
insb
jg
std
stc
jno
test
outsl
orl
inc
jge
adc
ret
jae
or
sbb
adcl
rorl
sub
sar
push
mov
cs
adc
mov
std
pop
out
xchg
test
sub
fwait
andb
add
pusha
and
popf
shll
push
stos
mov
mov
add
xor
dec
jo
rcll
add
sub
add
stos
jge
stos
sub
mov
leave
outsb
subb
dec
add
push
and
or
inc
jnp
mov
out
or
mov
xorb
adc
ja
pop
mov
int3
into
xor
pop
gs
push
call
add
cmpsl
ja
test
or
arpl
or
shll
jbe
inc
test
jle
add
push
rorb
ljmp
mov
cmp
in
pop
sub
fists
fs
jmp
add
and
pop
jbe
push
cmp
push
stos
pop
sti
pop
push
andb
sbb
jae
fidivrl
dec
mov
dec
jne
cmp
push
jge
sub
stc
iret
add
popf
cli
sbb
cmp
dec
testb
stos
pop
cmp
xchg
push
daa
idiv
fwait
dec
subl
call
loop
push
mov
mov
adc
lock
dec
and
xchg
clc
ficomps
ljmp
mov
cltd
jno
jbe
sbb
xor
sbb
and
mov
or
lret
mov
loop
inc
mov
iret
cli
dec
mov
add
cmp
jbe
push
xor
xor
dec
push
insl
inc
dec
cmp
xchg
mov
cmp
popf
sbb
sub
pop
push
les
lret
loope
clc
xchg
and
inc
xchg
push
pop
cmp
jnp
jbe
mov
push
lcall
rcl
adc
pushf
sarl
sbb
aad
or
movsl
xchg
mov
mov
out
cli
push
roll
jb
push
popf
xchg
xchg
mov
in
xchg
add
cmp
arpl
gs
repz
push
int3
sbb
aad
pushf
add
jb
push
fcompl
fwait
pop
lea
mov
xor
test
jno
adc
inc
sarb
sbb
sbb
scas
xlat
les
dec
or
cmp
jnp
adc
push
push
xchg
jg
mov
daa
aad
mov
fld
mov
dec
out
and
and
or
aas
mov
std
movsl
inc
jle
sbb
push
mov
sub
call
push
mov
inc
or
sbb
pop
rcll
inc
leave
sbb
iret
pop
dec
mov
pop
fdivs
add
cmp
dec
add
push
and
imul
xchg
cwtl
xor
cmp
fdivs
mov
and
mov
stos
jge
sub
jmp
dec
sub
sub
xchg
adc
enter
test
icebp
inc
sti
les
adc
mov
stos
aas
cmp
pop
cmp
loope
xor
adc
adc
test
sub
or
mov
iret
outsb
mov
fmuls
dec
sub
arpl
or
stc
jnp
in
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
mov
xchg
lahf
jge
jo
fisubl
jp
out
xchg
jecxz
mov
jl
mov
insb
movb
lcall
fldenv
push
lret
sub
repz
cs
call
jmp
pop
sub
lret
mov
mov
xlat
mov
xchg
insl
push
mov
shrl
dec
sbb
xor
daa
jo
cmpsb
sbb
dec
push
xchg
jle,pt
pop
xchg
jmp
negb
pop
cwtl
jp
mov
test
dec
sbb
pop
inc
clc
mov
xchg
dec
sarl
stos
popl
sbb
jmp
cwtl
adc
das
xchg
jb
dec
out
pop
or
lds
sahf
outsb
mov
fistpll
pushl
inc
inc
mov
fstpl
scas
lock
sbb
loope
inc
xlat
and
and
lea
int
mov
repz
mull
pop
cmp
and
add
xor
or
pop
adc
or
push
mov
gs
pop
cmpsb
mov
stc
xchg
xchg
mov
jecxz
nop
fistps
mov
mov
pop
mov
or
dec
out
lods
shr
arpl
xor
pushf
add
dec
adc
mov
add
clc
pop
dec
xor
push
stos
popa
mov
mov
push
xor
pop
cli
arpl
push
outsl
cmc
sbb
jno
cmp
xchg
dec
dec
popf
xor
ds
fidivs
xchg
test
ficoml
sarb
xorl
int
jo
sti
jp
push
adc
shrl
pop
stos
mov
arpl
inc
push
lret
push
aas
fistps
mov
jns
rcrl
test
mov
nop
in
mov
add
ds
xlat
add
pop
push
int3
out
gs
xchg
outsl
lods
popf
outsl
push
lods
imull
mov
pop
inc
data16
mov
xchg
aaa
xor
lock
rcl
xchg
dec
push
lret
jae
jns
xchg
negb
rcrb
mov
push
push
pop
pop
popa
or
mov
dec
fs
jnp
imul
xor
jge
xor
add
and
or
dec
sbb
jno
mov
insl
lods
loop
and
pop
ret
out
test
pop
popa
sbb
sub
and
cmpsb
insl
mov
imul
xchg
push
sbb
mov
loopne
mov
rcl
adc
in
jno
in
inc
lret
dec
inc
jbe
xchg
lea
mov
stc
lret
xlat
mov
fistpll
mov
fdivrs
adc
xchg
popa
outsb
repnz
xor
lret
lock
jmp
or
push
in
lods
insl
mov
lret
loope
fsubrs
or
cmpsl
hlt
xchg
loop
and
test
dec
stos
pop
pop
sub
add
push
imul
fldt
jo
inc
pop
fdivrp
pop
fmuls
fwait
or
push
cmp
fisubl
jecxz
dec
mov
mov
andl
push
jmp
jp
aas
mov
jns
inc
xor
jp
out
cmpsl
push
sbb
inc
mov
stc
mov
sub
dec
jns,pt
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
js
pusha
xorl
jge
jo
add
mov
outsl
pushf
xchg
jns
arpl
pushf
mov
pop
dec
gs
xchg
sub
pop
sar
and
mov
and
mov
xchg
aas
into
outsl
lret
inc
mov
aad
mov
addr16
sti
and
pusha
pop
and
or
cmpsb
call
and
fisttpll
je
cld
ja
and
pop
movsb
setl
out
mov
cmp
sbb
fcom
pop
fsubs
loop
pop
out
test
jo
cmpsl
outsb
mov
aam
push
cltd
cltd
adc
ljmp
sbb
xchg
add
inc
movsl
push
pop
jg
sub
inc
mov
out
push
adc
iret
jl
stc
test
pop
mov
xchg
xchg
adc
cmp
push
fisubrl
insl
xor
mov
call
jp
push
mov
cli
cs
fucom
dec
push
les
push
pushf
dec
xchg
or
into
mov
stos
push
test
arpl
loop
mov
icebp
pop
adc
sub
dec
shrl
test
out
dec
std
jg
ficomps
jge
cmpsb
mov
cli
add
aas
xchg
adc
stc
fdivl
inc
mov
shll
fisubrs
lret
lret
pop
fcoms
xchg
or
dec
jecxz
ss
xor
sahf
in
mov
pushf
cmpsl
stos
adc
lret
insl
xchg
add
xchg
jbe
cmpsl
in
fnstsw
pushf
test
push
xchg
fnstsw
inc
sbb
add
push
xchg
adc
insl
add
adc
inc
lahf
mov
and
insl
fimull
enter
or
jmp
mov
jl
aaa
int3
push
push
scas
adc
mov
out
xchg
push
or
imul
lods
jnp
sub
rcll
test
insb
cs
fucom
cmc
inc
cmp
addr16
push
lods
les
mov
outsb
lds
mov
add
xchg
mov
jae
sbb
imul
test
push
push
in
ja
jb
test
scas
mov
in
push
pop
addr16
popf
add
jnp
rorl
std
jge
aam
out
in
mov
lods
sbb
xor
mov
lret
pop
pop
add
mov
out
add
xchg
dec
cmp
xchg
arpl
insl
iret
and
das
inc
mov
enter
orl
mov
int3
mulb
call
sbb
sarb
xchg
xor
and
mov
lret
xchg
or
imul
inc
jae
and
test
inc
pop
jle
ret
jne
scas
in
je
mov
std
int
cs
ret
test
jle
call
mov
loop
fmuls
mov
push
jo
fisttps
test
andl
push
inc
mov
les
xchg
adcb
in
mov
repz
inc
insl
or
cmpb
cmc
test
mov
popf
stos
out
lret
xor
cmpsb
sti
cmp
js
scas
sub
stos
imul
dec
xor
leave
xchg
pxor
xchg
sbb
mov
addr16
icebp
ficomps
leave
orb
sbb
test
enter
mov
jle
test
imul
in
xchg
cli
sub
mov
cmc
or
popa
push
cmpsl
aad
mov
xchg
adc
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
ljmp
lahf
jge
jo
jg
xchg
in
fisubl
lahf
data16
inc
mov
sahf
lret
loopne
out
popa
sahf
repz
dec
filds
push
mov
mov
into
imulb
push
push
movsl
mov
icebp
je
mov
addr16
inc
lea
mov
mov
repnz
xchg
jbe
test
das
es
add
outsb
dec
sbb
cmpsb
inc
pop
or
ja
dec
lahf
leave
inc
cmp
inc
call
mov
lea
pop
clc
stos
das
xchg
cmp
pop
jbe
insb
mov
cltd
add
aaa
push
lea
test
or
push
daa
inc
hlt
lcall
sbb
jns
dec
mov
or
cmp
xlat
and
jne
push
mov
dec
or
fldl
ret
mov
or
inc
arpl
test
xchg
outsb
sbb
sbb
adc
out
and
pop
sub
ret
sbb
ret
lea
push
int3
fldcw
faddl
rcrb
sub
popa
stos
jl
cmovs
mov
inc
sarl
inc
dec
fistpll
jns
data16
clc
push
icebp
sarl
mov
mov
out
pop
or
mov
mov
std
xor
icebp
or
jle
pushf
loop
ret
xchg
cmc
xor
dec
cmp
jo
into
testl
mov
ret
mov
adcl
mov
insb
bound
fistl
jg
mov
sbb
movsb
dec
jno
lahf
frndint
xchg
mov
jp
add
xor
or
or
lock
icebp
in
pop
mov
dec
insb
xchg
mov
push
dec
cli
cmp
ljmp
pop
pop
mulb
mov
xchg
xchg
sbb
xchg
mov
ds
sub
pusha
sub
xchg
lahf
data16
xlat
dec
pop
push
rolb
incb
dec
and
mov
enter
xchg
aad
insb
adcl
fimuls
push
mov
mov
lds
imul
jae
or
adcb
jmp
push
mov
mov
dec
dec
mov
movsb
xchg
rorb
push
xor
inc
lock
dec
adc
xor
lods
pop
or
fbld
mov
loop
and
lcall
pop
mov
lock
sbb
mov
outsb
out
mov
pop
daa
add
pop
xchg
xor
sti
ljmp
in
cmp
aam
int3
push
test
outsl
and
sub
flds
jns
inc
cmpsb
insb
mov
push
jge
xor
cmc
pop
pop
cld
enter
lock
push
sbb
in
xchg
fidivrl
ret
fs
repz
movsb
adcl
rcll
clc
and
lods
jl
mov
mov
and
les
mov
push
xchg
or
add
jecxz
mov
rcrb
cmp
cli
fs
je
push
ss
sub
mov
pop
ja
out
out
lcall
insl
xchg
ja
sti
jmp
in
ret
in
add
iret
pop
and
fistpl
and
jle
test
inc
dec
jns
ja
mov
cmp
and
pop
inc
shll
fmuls
rorb
pusha
xor
out
sahf
xchg
push
js
xchg
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
dec
das
mov
lock
inc
stc
lods
mov
popf
sti
lods
jno
scas
add
add
dec
adc
lcall
test
lcall
xchg
loope
mov
xchg
out
add
or
xlat
cmpsb
or
jbe
mov
jp
adc
enter
cld
adc
addr16
pop
popl
paddsw
out
sub
rorl
jle
jbe
sbb
and
mov
dec
movsb
jns
popf
cmp
imul
mov
push
mov
cld
pop
sub
in
and
xor
out
sahf
xchg
sub
aas
andl
xlat
sub
pop
push
dec
mov
pop
adc
data16
jecxz
movsl
push
outsb
out
cmp
cmp
or
xor
std
add
cmp
and
push
xchg
dec
pop
sub
fisubs
fistl
enter
lock
dec
sub
pop
movd
fmul
aaa
sub
dec
add
mov
divb
push
sbb
sub
inc
and
insl
pushf
ret
imul
in
jp
jmp
in
frstpm(287
and
and
adc
jp
push
sbb
pushf
and
sbbl
sbb
hlt
imul
jno
lods
cmp
fdivs
add
inc
outsb
stc
pop
inc
idivl
addb
in
lock
iret
int
pop
xor
lcall
push
arpl
xchg
cmp
lods
sub
js
mov
adc
lret
push
xchg
hlt
push
mov
sti
in
es
sti
pop
div
mov
and
sbb
ret
in
fs
and
pop
cmc
or
inc
adc
fnstcw
lcall
loop
mov
test
ljmp
jmp
loope
cmp
scas
add
in
adcl
cmp
aad
push
test
mov
lret
in
in
cltd
pop
imul
popf
rcrb
push
jbe
pop
pop
fcoms
bnd
bound
hlt
and
daa
push
frstor
shl
arpl
punpckhdq
or
insl
and
jno
daa
add
lahf
or
inc
mov
out
daa
sbb
and
test
test
cmp
lcall
aas
mov
mov
or
ds
popf
cmp
pop
pop
roll
mov
lods
fcmovnb
cmp
iret
arpl
test
sub
adc
or
lods
cs
fcmovnb
jl
and
pop
outsl
andl
stos
xor
std
push
inc
sub
fcmovbe
shrl
std
std
pop
sub
add
xor
jo
xchg
ficompl
xchg
into
aas
aas
lods
xlat
stos
mov
push
pop
gs
cmp
sub
and
xchg
outsb
cltd
hlt
aaa
scas
or
iret
pop
jl
cmp
push
filds
push
xchg
enter
jb
jo
inc
fimull
mov
cmp
mov
lds
addr16
es
push
add
jns
scas
shll
andl
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
scas
sub
jo
jge
jo
repnz
aad
ja
mov
mov
rorl
xchg
xchg
les
popf
enter
sub
xor
bound
test
jmp
pop
xchg
aas
lahf
repz
mov
hlt
ds
lock
mov
mov
add
int
inc
int3
push
sbbb
roll
leave
jnp
cmpsb
mov
fstpt
mov
bound
or
xor
fidivrs
add
push
fs
cmc
aam
mov
out
push
ret
or
xchg
mov
out
pushf
and
fstl
xor
jecxz
add
testl
fstps
mov
mov
xor
push
aas
mov
inc
mov
dec
stos
out
repz
jne
sbb
addr16
incl
xchg
scas
ret
push
xchg
xchg
int3
jle
div
in
push
add
les
addr16
ss
aaa
and
jmp
mov
sbb
mov
dec
push
movsl
lahf
sarl
shll
push
mov
popf
insb
cmc
insl
pop
out
cmp
xlat
leave
push
mov
roll
lods
cmp
or
jmp
scas
sbbl
stc
fstp
in
dec
pusha
sub
repnz
push
js
or
test
sub
mov
loope
test
or
adc
push
ljmp
mov
jb
std
or
ret
xchg
dec
pop
lret
sbbl
fwait
shrl
push
cli
test
adc
jp
sub
mov
jnp
out
mov
lods
pop
cmp
aam
adc
pop
inc
sub
divl
mov
pusha
enter
push
push
dec
jg
add
lea
or
cmp
into
cs
mov
xchg
cli
js
xchg
xchg
adc
sbb
sub
dec
adc
or
test
shl
mov
and
cwtl
arpl
pop
scas
in
push
pop
cltd
adc
int3
mov
rcll
insb
push
fdivrl
inc
xor
lods
cmp
or
outsb
mov
push
pusha
push
push
sbb
push
xchg
lcall
xor
and
outsb
or
pop
add
insl
mov
pop
lcall
mov
jg
xlat
rorl
mov
dec
cmp
xor
jne
std
add
inc
pop
fnstsw
xor
or
mov
add
cmpsl
fisubl
pop
fadd
jno
cltd
or
cli
pop
jmp
movsb
cmp
add
shrb
adc
loopne
test
jecxz
popa
dec
push
cmpsb
mov
shlb
push
ja
push
inc
inc
hlt
in
xor
mov
insl
sub
clc
rorl
jnp
sub
imulb
sbb
cmc
mov
lahf
cltd
adc
mov
mov
push
sub
mov
in
stos
sub
lds
fisttpll
lcall
stos
sbb
jns
or
sbb
xchg
movsb
iret
mov
aam
jle
sbb
jmp
add
pop
cs
popa
mov
mov
lds
jg
add
mov
jno
mov
jno
jno
call
pop
inc
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
lock
in
xchg
jo
lahf
jge
jo
pop
push
jp
aam
gs
daa
adc
into
sbb
dec
push
dec
repnz
lcall
into
push
push
or
in
mov
jecxz
les
and
minps
stc
mov
pop
mov
jns
ss
ss
dec
arpl
je
mov
sbb
sub
adc
mov
repnz
mov
adc
and
test
jae,pt
fisubs
sti
das
jmp
mov
adc
ljmp
adc
xor
loop
gs
mov
clc
into
lcall
loopne
jo
out
loopne
mov
add
mov
dec
lcall
in
push
mov
and
jmp
jnp
sarl
xchg
imul
add
pop
push
or
jl
daa
call
loope
cmp
xlat
mov
shl
push
xchg
cli
pushf
popf
shrb
mov
cmp
push
hlt
jmp
insb
or
js
push
lret
jecxz
addr16
sti
in
les
sarb
test
and
mov
sarb
scas
daa
repz
sbb
jb
jl
pop
fildll
hlt
mov
and
rcr
xchg
aas
mov
cmp
out
aad
or
push
and
mov
mov
mov
ret
xor
push
imul
jae
dec
jnp
adc
lret
lret
xchg
sbb
repz
loope
mov
das
mov
out
shll
mov
cmp
sbb
lods
jno
push
mov
ds
lds
pop
fistpl
icebp
and
sub
shll
arpl
mov
push
scas
add
mov
add
inc
stos
dec
roll
dec
in
xor
cmp
andb
cmpsb
inc
pushf
sub
pop
and
movsb
mov
adc
mov
in
int3
jmp
enter
mov
leave
insb
in
daa
or
stos
jle
add
lret
xchg
ds
pop
mov
popl
jb
mov
lods
iret
xchg
dec
dec
sarb
fldenv
inc
jno
jbe
mov
xchg
mov
imul
mov
cmp
ja
int
clc
mov
outsb
notb
inc
cmp
pop
mov
mov
popf
sub
sbb
andl
insb
stos
sti
cmp
mov
adc
stos
cmp
pusha
jo
ds
mov
int3
add
insl
cmp
jns
and
dec
int
add
push
xchg
dec
ret
add
std
negb
fistl
adc
and
pop
inc
cmpsb
jno
inc
rorl
cmp
mov
sti
movsb
test
insl
sti
les
enter
inc
mov
cmp
xchg
shll
jg
xchg
inc
jg
in
lret
add
das
sbb
fldenv
fs
addr16
icebp
mov
loop,pn
xlat
in
inc
add
sbbb
xchg
test
pop
mov
loope
pop
sbb
adc
cmpb
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
cmpl
nop
icebp
or
jo
repnz
jp
enter
pop
daa
sbb
fcomp
push
inc
dec
pop
orb
addr16
cmpsb
mov
gs
mov
xchg
jns
pop
cmp
mov
xchg
mov
mov
dec
lock
sarl
stc
das
inc
dec
aaa
sbb
add
loop
xchg
mov
jmp
xor
daa
shrl
jg
inc
bound
das
jo
in
xchg
int3
insl
loop
iret
loop
pop
popa
mov
dec
dec
sbb
fmull
cmp
and
or
mov
lods
inc
scas
repz
adc
or
adc
int3
inc
lock
sub
in
jae
lods
and
sbb
test
ficomps
mov
cwtl
imul
lods
cmp
fdivs
int3
outsb
inc
lds
fcmovnb
repnz
pop
fdivs
lret
nop
add
stos
stos
mov
or
jnp
mov
das
cmp
mov
loope
inc
sub
mov
mov
inc
xor
cmp
decl
mov
cmp
push
clc
dec
mov
movsl
jb
lods
aaa
mov
add
push
les
in
movsb
sub
jns
push
cmp
xchg
cmc
lea
jae
cwtl
mov
fwait
pusha
pop
lcall
sbb
add
scas
push
push
xchg
lcall
jb
popf
sub
lods
jle
std
fcompl
dec
pusha
aam
pop
movsb
ss
sbb
push
add
dec
mov
jg
cmp
sti
inc
sbb
xor
and
sbbb
pop
pop
push
dec
dec
mov
data16
cmp
jp
pop
out
sub
loop
in
arpl
cmp
mov
scas
push
inc
pop
push
shll
mov
pop
fdivl
dec
dec
and
xor
out
cmp
dec
mov
jns
test
cmpsl
int3
mov
ljmp
mov
jecxz
loopne
add
ljmp
and
sahf
push
inc
outsl
cmp
sbb
xor
inc
pop
mov
push
loope
add
jl
shlb
add
or
shr
mov
movsl
add
lock
movsb
add
jbe
or
lock
cwtl
jns
enter
int
xor
shll
repnz
mov
and
lret
jbe
jbe
mov
and
jp
cmpsb
out
mov
scas
cmp
inc
jge
int3
lcall
push
xor
jns
fmuls
data16
add
mov
and
stc
cwtl
or
scas
movsl
pop
out
scas
sub
mov
fisttpl
mov
hlt
add
imul
mov
in
in
pusha
push
inc
inc
inc
dec
addb
or
aam
push
lds
mov
mov
stc
nop
push
sti
adc
jb
lods
inc
pop
push
push
dec
cltd
sahf
cmpl
fdivl
adc
aaa
or
jmp
xorb
cmc
movsl
rol
and
gs
push
dec
fsubs
mov
iret
pop
dec
call
fsubp
xorb
pop
daa
mov
jge
cmpl
scas
sbb
mov
repz
repz
fsubl
push
cmp
push
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
jo
lahf
jge
jo
mov
xchg
mov
xchg
movsb
inc
sub
lock
mov
loopne
neg
fdivrl
inc
movsb
inc
aam
dec
lret
inc
dec
shlb
in
cmp
repz
or
jg
sbb
aam
dec
roll
and
mov
cli
push
and
xchg
cmp
sub
xor
mov
or
mov
bound
jbe
fistpl
dec
jmp
out
pop
int
jbe
and
loop
jo
jno
pop
jg
push
mov
in
cld
push
xor
dec
shl
xchg
inc
push
fldcw
mov
inc
ss
push
pop
adc
dec
imul
aam
mov
mov
xchg
iret
lds
inc
adc
mov
mov
xchg
jl
push
or
pop
addl
scas
out
mov
movsl
sbb
sub
pop
test
enter
shlb
jg
xor
cmpsl
aas
aam
xchg
out
and
mov
lods
pop
ss
jae
jno
insb
adc
in
cwtl
push
inc
lock
gs
fbld
push
loopne
cmp
rorl
fidivl
dec
push
out
push
scas
fbstp
push
mov
andnps
mov
add
repz
xor
mov
ret
repnz
push
mov
clc
scas
jmp
xor
rcll
mov
hlt
sbb
inc
jnp
push
iret
pop
out
inc
or
in
aas
or
and
xchg
icebp
test
xchg
mov
loop
jecxz
mov
fiadds
lret
mov
jg
jno
sub
imul
adc
cli
push
mov
shl
fdivs
xor
cmc
jecxz
push
adcb
xchg
xchg
jge
std
adc
je
dec
mov
jo
rcll
pop
aad
inc
cmpsl
and
icebp
fadd
imul
pop
enter
loopne
clc
inc
push
test
dec
adc
nop
and
cmpsb
into
dec
xlat
adc
xchg
sahf
sbb
cs
orb
fistl
pop
mov
shl
jge
dec
out
sbb
arpl
dec
xchg
xchg
dec
les
pop
adcl
cld
lahf
or
jnp
pop
mov
out
mov
movsb
push
mov
ret
sbb
repnz
add
aas
testl
mov
fsubp
xor
scas
pop
imul
inc
ret
adc
mov
and
sbb
aad
adc
insb
adc
pop
mov
in
mov
sbb
xor
or
hlt
pop
xor
rclb
or
add
cmp
cmp
jle
daa
cmpsl
int
jp
and
sub
std
or
mov
sub
mov
into
out
into
pop
gs
xchg
popa
mov
push
mov
and
shrl
addr16
inc
push
in
pop
lcall
push
dec
fcompl
lods
ret
adc
mov
fisttpl
inc
xchg
or
jmp
mov
sbb
pop
adc
test
rcrb
cltd
jl
adc
pop
iret
and
push
fldcw
std
jg
scas
xchg
xchg
std
stos
js
sbb
cmp
shrb
lds
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
push
xchg
inc
leave
cltd
jo
lahf
jge
jo
popl
add
push
stc
aad
popf
div
subb
sub
mov
scas
loope
ret
cmp
adc
pop
std
divl
sti
lret
mov
push
daa
lds
pop
mov
les
mov
mov
pandn
or
stc
fs
or
ret
adc
sub
outsb
cltd
fs
sahf
incb
addl
adc
into
fiadds
cmp
cmp
popa
aam
sarl
adc
andb
lock
idivl
call
push
imul
jnp
cmpsl
or
sub
ljmp
mulb
add
xlat
sbb
sbb
mov
mov
push
mov
std
inc
in
mov
cli
sbb
clc
jns
adc
and
rcrb
decb
sub
test
pusha
inc
outsb
sbbb
loop
sub
adc
mov
dec
sub
es
mov
sbb
push
jp
jno
repz
adc
inc
cwtl
stos
subb
jnp
xchg
aam
jnp
push
fmul
aam
cmp
inc
xchg
stc
mov
pop
lds
js
add
adcl
lods
pop
xchg
lret
push
inc
out
bound
mov
mov
inc
ja
mul
inc
mov
sub
sub
cmpsl
mov
fbstp
xor
les
mov
out
adc
mov
jne
or
std
jmp
fisubrs
loopne
testl
arpl
add
sub
sti
jp
mov
insb
jg
mov
jae
ret
and
lcall
pop
pop
loope
aam
enter
inc
sub
rcll
mov
push
fiadds
incb
sbb
dec
in
inc
imulb
cmp
pop
push
push
pop
aas
cmc
lods
movsb
out
sti
repz
push
mov
inc
fildll
jo
enter
leave
sbb
mov
cmp
rolb
mov
stos
fisubrl
add
shlb
into
das
out
mov
arpl
fisttpl
cmpl
xor
mov
xchg
movsl
cmp
sti
popa
es
mov
pop
subl
movsb
mov
test
mov
sub
xlat
outsb
inc
jbe
jo
dec
lcall
inc
sbbb
js
and
and
sbb
sbb
fsubrs
or
stos
and
dec
es
ret
xchg
popa
cmp
mov
sub
scas
and
fldt
out
je
mov
push
scas
data16
in
fcmovnu
repz
sbb
adc
sub
mov
lds
jmp
daa
in
std
das
add
gs
pop
sub
scas
inc
push
stos
dec
gs
ja
xor
rcll
loope
outsb
gs
sti
lock
add
mov
arpl
ljmp
scas
daa
push
pop
add
pop
aad
xor
sbb
insl
out
and
enter
and
xchg
clc
movsl
test
sub
insb
push
push
test
or
push
fnstsw
push
fistpl
es
dec
loop
repz
pop
lods
pop
jg
xor
in
out
or
pop
or
inc
fldcw
push
cmp
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
mov
cmpsb
jo
ret
jg
jo
xchg
decb
sbb
sub
sbb
jno
jmp
and
xchg
aas
add
cmp
or
notl
cmpl
cmp
or
sahf
sti
shlb
fwait
cli
push
subl
hlt
adc
sbbl
mov
and
xchg
jl
sub
mov
sbb
pop
vmovdqu
add
data16
inc
inc
fistps
cld
nop
insb
lds
lock
pushf
insl
pavgb
cwtl
test
testl
fwait
bound
add
das
iret
stc
test
sahf
jmp
outsb
mov
sub
xchg
mov
mov
in
or
inc
cmp
ret
fstp
ja
add
push
and
jecxz
inc
jmp
cmp
fsubrl
rcrl
shlb
mov
jmp
xorl
mov
xor
call
enter
xor
xor
mov
jo
push
fimull
sbb
lret
loope
fs
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
mov
movsb
jo
ret
jg
jo
out
out
sti
sarb
dec
xchg
dec
lods
and
sub
repz
xchg
sub
stos
fucomip
lcall
cmpsb
aaa
push
mov
jne
call
dec
sti
mov
or
mov
mov
jbe
insl
jno
xchg
lcall
fmuls
inc
int
xchg
aaa
cmp
dec
xchg
jle
enter
mov
push
mov
scas
adc
out
jb
xchg
lret
daa
xorb
or
imulb
mov
mov
fisubrs
nop
push
mov
int3
adc
mov
je
push
mov
push
and
cmpsl
mov
cmpsb
out
lods
or
mov
stc
pusha
xchg
lock
adc
dec
cld
enter
inc
out
aad
loop
push
into
jb
lds
lds
cmp
imul
jns
add
xchg
test
mov
pop
pop
ja
lret
ficompl
jb
mov
js
jb
pop
push
fmuls
scas
xchg
mov
dec
in
inc
jge
add
insl
dec
add
sbb
pop
int
int
cmpsl
inc
hlt
clc
scas
jbe
and
cld
cltd
adc
rol
call
and
lea
mov
jmp
rorl
sbb
movsl
fmuls
jg
jo
call
out
jne
lods
fldenv
scas
lea
aaa
and
add
loopne
push
or
mov
or
sarl
das
adc
sub
idivl
nop
mov
xchg
ljmp
data16
leave
xchg
cli
dec
cmp
lods
lods
and
jecxz
push
jb
mov
je
in
xchg
les
clc
ds
mov
dec
inc
xor
and
loopne
imul
xchg
jbe
jecxz
sbb
pop
leave
dec
inc
scas
cmc
test
lcall
aas
xlat
fsubrs
dec
xor
lret
shrl
inc
add
dec
jne
clc
mov
sub
pop
mov
inc
add
lock
cmp
pop
add
daa
inc
addl
xchg
out
pushf
xchg
fisttpll
push
fisubrs
lds
scas
cmc
sbb
sub
std
pop
pop
js
lods
sbb
pop
jne
pop
es
loopnew
push
out
jp
mov
loop
mov
cwtl
es
mov
fisubrs
lret
popa
shlb
outsl
stc
cmp
and
inc
xchg
pop
ss
lahf
fcom
outsl
dec
push
cmp
cli
cld
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
jle
out
mov
jo
or
jle
inc
ret
push
jno
mov
dec
dec
es
popa
and
jp
sbb
mov
fiaddl
push
mov
das
shl
xor
sub
pop
adc
nop
or
lock
fldl
scas
lods
and
out
ret
jle
or
xchg
sub
adc
fisttpll
inc
sbb
aad
xor
pop
pop
cmova
add
sub
lcall
mov
inc
lcall
xchg
xchg
pop
dec
inc
mov
testb
sahf
mov
lea
jne
gs
ret
xor
sarb
testb
int
or
mov
movsl
scas
add
push
cmp
add
lods
dec
push
push
je
jge
jecxz
jns
arpl
cltd
jo
lahf
pop
adc
popf
sub
xchg
fiaddl
and
xchg
int
cmc
gs
mov
lret
call
push
and
ljmp
mov
fisubrl
stos
xchg
fsts
fcomp
out
push
movsl
xor
cmp
mov
and
jno
push
push
cwtl
psubusb
mov
pop
xchg
adc
imul
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
jl
cmp
and
jo
ret
jg
jo
push
push
cmp
mov
movhlps
fiaddl
fstpl
xchg
xchg
pop
adc
cs
pushf
mov
clc
popa
int3
xchg
repz
aas
push
bound
mov
or
cmp
sub
testb
xchg
cwtl
cmp
mov
jne
and
jb
adc
sarl
mov
or
or
cs
rorl
testb
inc
fs
fwait
or
pop
push
sti
mov
lds
lock
icebp
rcll
stc
cmc
xor
fstpt
xchg
jb
loopne
and
sbb
xor
pop
add
pusha
mov
xchg
dec
movsl
out
dec
nop
and
mov
xor
pop
out
pop
add
mov
outsl
inc
subb
push
cs
adc
xchg
rcll
addl
xchg
add
loopne
mov
test
jmp
adc
call
int
das
add
xor
mov
cli
insl
ljmp
sub
fs
iret
out
jg
lea
xchg
pop
mov
dec
adc
rol
and
cmpb
lods
mov
lods
add
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
ret
ja
imull
jo
dec
and
daa
push
jecxz
and
int3
stos
dec
popa
les
lcall
lret
lahf
mov
jp
inc
stos
lea
mov
scas
pop
test
mov
inc
mov
std
lret
push
and
sbb
iret
addr16
or
rcrl
dec
data16
jl
dec
cmp
mov
insb
dec
cmpsl
lods
stc
add
xor
in
pop
xlat
into
adc
mov
push
loopne
cli
pop
pop
pop
dec
xor
add
cs
fidivrl
jge
cmp
push
push
xchg
adc
mov
ret
ds
lds
xchg
jecxz
push
test
xchg
cld
clc
fstpl
mov
xchg
lock
xor
outsb
and
add
cmc
cmpsb
leave
shrb
call
ficoml
and
and
pop
xchg
fldcw
push
add
sub
jb
outsb
add
movsl
in
and
int3
sbb
out
mov
sahf
loop
std
adc
jmp
pop
jno
inc
xor
fistpll
xor
dec
inc
fwait
mov
out
aad
test
pop
xor
jno
mov
je
cwtl
mov
rcrb
addr16
mov
xchg
push
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
clc
xchg
and
ret
jg
jo
jbe
dec
sub
test
push
sub
jle
or
inc
shr
or
xlat
inc
fwait
or
lret
inc
test
and
mov
out
pop
mov
dec
sbb
cltd
pop
cmp
leave
cmc
fidivrl
sbb
xchg
sbb
ret
lock
inc
or
lods
xchg
imul
insl
cli
sub
loopne
loope
cmp
jne
xor
sbb
cmp
xlat
mov
push
cmp
add
mov
out
lea
adc
adc
aaa
mov
xchg
xchg
repz
mov
add
negl
xchg
jecxz
and
jg
dec
fisubrl
roll
in
adc
xchg
pusha
xor
push
or
cmpl
pop
push
xchg
xor
insl
cmp
inc
jbe
scas
mov
and
enter
fidivrl
and
push
call
jmp
sub
jne
rcl
xchg
or
push
pushf
stos
sbb
xor
filds
jge
lcall
ja
xor
in
jmp
xorl
add
add
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
jo
mov
lods
jo
ret
jg
jo
stos
mov
mov
and
pop
inc
push
jmp
cmc
or
cli
xchg
lret
or
out
add
cmpsb
push
icebp
mov
fwait
lret
mov
js
push
dec
add
or
dec
lds
scas
jne
push
mov
xchg
cwtl
fidivs
mov
movsb
inc
pop
dec
movsb
dec
add
icebp
std
mov
ds
dec
aaa
decb
dec
shll
mov
cmpsb
ss
pop
or
dec
pop
lahf
jne
mov
inc
inc
jp
repnz
mov
loope
add
mov
and
inc
xchg
test
push
fistpll
jbe
add
mov
mov
fs
jge
orl
mov
mov
cmc
cltd
add
rol
push
and
sbb
loop
lret
ljmp
mov
sbb
mov
push
repz
in
mov
push
lods
arpl
push
sub
mov
ret
sub
adc
outsb
les
push
sbb
adc
mov
popa
cmp
pop
jmp
int3
xor
jp
lock
push
and
in
mov
or
loopne
ffreep
mov
dec
sbb
imul
xor
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
repnz
jo
ret
jg
jo
enter
sub
inc
arpl
lea
pop
dec
pop
loopne
mov
xchg
not
add
rcl
aam
lahf
int3
xchg
addl
pop
push
adc
xchg
loopne
js
shr
pop
mov
xchg
add
in
lods
icebp
mov
shrl
hlt
push
and
shll
mov
jne
imul
ja
cmc
or
int3
in
or
clc
loopne
std
in
push
xchg
push
std
mov
push
dec
xor
push
inc
in
jo
push
xor
mov
sbb
sbb
sub
in
pop
xchg
je
and
into
sbb
mov
mov
bnd
outsb
or
insl
cvtpi2ps
call
pop
add
jl
sti
or
mov
fisttpl
ljmp
mov
xchg
lods
cs
push
sbb
adc
add
fs
mov
leave
and
pop
lret
lds
sti
std
je
imul
sub
inc
fwait
jbe
adc
cs
add
sub
lahf
pop
test
test
jecxz
mov
cmp
add
xchg
and
call
cld
or
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
stos
jo
ret
jg
jo
mov
repz
mov
icebp
xchg
nop
sahf
inc
fwait
push
mov
or
rcrb
popa
loop
movsl
movsl
rcrb
mov
add
inc
pop
jbe
pop
mov
or
push
nop
cmpsl
adc
test
fadds
out
xor
cmp
mov
mov
mov
icebp
incl
sub
pop
xor
and
xchg
cmp
sbb
outsb
shrb
inc
sbb
xchg
cli
test
insl
icebp
test
repz
sti
add
mov
dec
je
das
cli
out
xlat
xchg
or
cmp
mov
fldenv
out
mov
mov
popa
jb
cmp
sbb
fistps
xor
dec
daa
in
sbb
push
call
adc
xor
leave
jb
out
imul
cltd
or
xchg
push
test
imul
or
mov
das
bsf
sub
xchg
ret
arpl
mov
sbb
mov
xor
stc
add
shll
es
push
mov
xorl
jmp
int3
xor
imul
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rorb
in
cmp
test
jo
std
sarb
adcb
cmp
cmp
xchg
mov
and
cmp
subb
scas
ljmp
and
sti
shl
out
pop
mov
ds
inc
iret
in
outsb
push
mov
inc
or
sub
repnz
mov
jmp
mov
out
jmp
dec
pop
out
out
outsl
pop
repnz
inc
lcall
jno
insb
and
stos
lds
pop
loope
stos
sahf
jo
mov
adc
push
cmp
or
add
inc
sub
jae
jb
xor
sub
dec
and
in
adc
pop
jb
push
sub
xchg
les
popa
add
cmp
ret
mov
jp
and
pop
aad
dec
arpl
test
aam
jo
add
mov
xor
pop
push
sub
mov
mov
test
sbb
mov
xlat
sub
sub
add
pop
icebp
mov
push
inc
jmp
lcall
rolb
outsb
pop
or
mov
and
xor
fisubrs
nop
mov
xor
mov
push
mov
jmp
inc
gs
icebp
imul
fwait
push
jmp
cmp
jo
fcmovnb
jne
outsb
sysret
cli
or
insl
sub
or
mov
mov
ljmp
out
hlt
sub
jns
inc
ljmp
out
mov
mov
ss
mov
add
ljmp
xchg
xlat
lcall
mov
pop
hlt
sbb
cld
int
inc
xlat
idivl
lds
mov
ljmp
imul
js
out
nop
ja
int
pop
mov
mov
fld
cltd
sbb
and
mov
xor
lret
fwait
or
ss
aad
mov
bound
scas
imul
mov
aam
cltd
inc
adc
inc
or
popa
xor
negl
mov
dec
mov
push
xchg
jne
mov
mov
test
mov
mov
rep
ds
pop
test
pop
lahf
shll
push
xor
stc
and
dec
test
pop
bound
fsts
mov
pushf
insb
sbb
push
mov
clc
mov
ds
jg
fstl
popf
pop
scas
cmp
fistps
jb
ficoms
add
mov
rorl
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
pop
lods
mov
jo
jg
jo
testb
jmp
adc
push
sbb
dec
repz
subb
sub
repnz
mov
sub
jge
xchg
xorps
pop
imul
rcll
lcall
mov
or
dec
arpl
movsl
jmp
push
out
push
pop
in
push
lcall
cmp
test
mov
cltd
mov
loop
js
das
addl
std
pushf
and
in
inc
cmp
mov
mov
mov
roll
jl
mov
sub
movsl
and
loopne
mov
mov
daa
aad
and
push
xor
lcall
rorb
cmp
xchg
mull
push
shl
sub
and
lock
mov
push
hlt
icebp
sub
push
aam
rorb
insl
and
aaa
and
cmc
int3
loop
repnz
rcr
shr
repnz
jnp
fnstsw
lret
stos
movsl
mov
xchg
jmp
out
je
cld
cld
xorb
loop
push
dec
xor
xchg
loope
outsl
sbb
iret
mov
jle
cmp
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
jo
pop
mov
jo
jge
jo
data16
lcall
adc
jbe
pop
nop
insb
mov
adc
loope
in
insl
mov
addr16
sbb
or
adc
adc
fidivs
int3
and
mov
xchg
xchg
and
call
cmp
and
rcll
mov
in
enter
jns
jbe
in
in
fldenv
imul
mov
add
or
mov
mov
stos
repz
or
sub
arpl
xchg
dec
iret
xor
push
fcoml
inc
shrb
out
cwtl
xchg
inc
test
inc
mov
lods
mov
push
mov
mov
loope,pt
or
jmp
sub
mov
jbe
js
ja
or
cmp
ret
xlat
mov
cmpsb
or
scas
sbb
cmp
mov
dec
test
mov
dec
insl
sbb
jle
lods
fidivrl
mov
pop
repz
jecxz
aam
cmpsb
addr16
pop
movl
test
pushf
lds
loop
xor
jecxz
xlat
push
sahf
sahf
scas
sub
inc
jae
mov
dec
dec
mov
movsl
sub
or
add
and
test
ret
fimull
pop
xchg
jo
outsl
stc
int3
movsb
push
dec
mov
mov
aaa
imull
sub
mov
xor
add
xchg
test
incb
aas
xchg
sub
mov
jmp
jg
add
mov
xchg
ljmp
pop
scas
movsb
mov
ss
pop
popa
inc
jne
xlat
inc
outsl
dec
jne
test
or
or
jecxz
fisttpl
in
dec
xor
sahf
inc
mov
cmpsb
push
jmp
in
pop
or
dec
fs
lds
mov
inc
sbb
jl
lods
sub
jp
cmp
lahf
lods
jo
xor
pop
pop
mov
scas
and
stos
out
inc
xchg
aam
sub
outsb
iret
xchg
fsubs
out
pusha
adc
out
std
pop
mov
leave
dec
pop
lret
add
inc
pop
outsb
les
sbb
xor
insl
mov
cwtl
sub
fwait
jecxz
mov
loopne
jns
inc
mov
cmpsb
cmpsl
pop
sahf
repnz
sub
mov
pop
push
xor
xchg
inc
ds
mov
es
mulb
fidivrs
je
pop
and
dec
scas
mov
js
adc
xchg
scas
test
cltd
push
mov
mov
cmp
fld1
xor
in
jo
test
mov
cmp
mov
xchg
adc
mov
jmp
mov
and
shl
adc
test
lcall
out
test
push
imul
xor
fwait
andnps
ret
roll
sbb
xchg
push
enter
pop
fisttpl
fs
dec
cmp
lods
cld
lea
add
push
mov
and
mov
les
cmpsl
and
andb
insl
jmp
fstl
stos
sahf
mov
sti
add
jg
ss
jbe
mov
or
ljmp
loopne
add
lds
add
mov
cli
xor
testb
jle
mov
jo
jge
jo
mov
push
xor
aam
lock
sbb
iret
mov
inc
pop
test
mov
sub
inc
jne
das
fdivrs
fs
sbb
inc
mov
pop
inc
jae
es
mov
dec
fildll
push
sbb
jp
and
loopne
insl
lcall
sbb
mov
sbb
cmp
jge
les
pop
repz
sub
call
cmpsb
pop
fcomps
mov
imul
and
xor
cmp
ja
xor
adc
rcll
and
ds
fstpt
andb
cmpb
popa
xor
or
push
repz
adc
xchg
mov
lret
pop
push
jno
subb
jl
dec
mov
in
repz
rcr
repz
mov
xor
inc
test
or
dec
and
sbb
testb
mov
push
notb
ss
xor
pop
add
out
lcall
repz
lret
inc
pop
add
xchg
or
mov
imul
pop
imul
sub
dec
xor
push
or
test
mov
das
push
es
mov
arpl
out
std
aas
mov
xchg
ret
pop
into
pop
mov
or
cwtl
mov
clc
lock
dec
dec
movsl
aaa
mov
or
xchg
jp,pn
das
mov
add
insb
xor
pop
mov
lds
and
push
leave
imul
int
dec
pusha
and
imul
xor
jl
jmp
cmp
adc
dec
push
sti
pop
loop
idiv
or
jns
add
inc
popl
push
sbb
mov
pushf
fdivrl
xchg
dec
stc
mov
fdivl
in
xor
push
outsl
xchg
das
cmp
or
dec
jns
dec
fistl
or
mov
xchg
push
or
pop
sub
ret
push
add
in
fcmovu
jle
cltd
outsb
xor
push
filds
inc
pop
or
setno
loope
lods
xchg
pop
adcl
dec
bound
and
mov
xchg
add
hlt
sub
mov
inc
xchg
cmp
xchg
mov
cmp
push
push
push
sbb
inc
int
mov
movsb
aaa
cmp
movsb
fwait
sbb
mov
fwait
sbb
mov
dec
sub
jecxz
ljmp
sbb
outsl
ret
push
insb
stos
push
dec
xchg
stos
pop
push
lahf
or
mov
pop
movsl
cmpsb
divb
fmuls
and
push
pop
sub
repnz
mov
sbb
jl
mov
pop
cli
stos
ret
call
cmp
jge
stc
xor
int3
inc
mov
push
inc
jg
mov
jb
fwait
lret
mov
mov
lds
xchg
daa
cmpsl
jp
jle
bound
add
ss
mov
jmp
pushf
int3
adc
push
icebp
cmp
xor
stos
jge
xchg
and
fldt
xchg
mov
shlb
mov
out
cwtl
cmp
jae
mov
mov
sbb
adc
and
mov
and
ror
or
or
pushf
rcr
rolb
dec
mov
add
pop
mov
cld
xor
or
loopne
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
pop
cmp
push
xor
jge
jo
je
jge
sbb
and
jecxz
push
divb
xchg
lret
xchg
sti
int3
mov
sbb
aas
sahf
dec
mov
loop
dec
mov
hlt
rcll
add
cwtl
js
ds
xor
pop
cmpsb
addr16
enter
pushf
leave
hlt
inc
lods
mov
push
lea
or
out
pop
outsl
mov
inc
mov
and
mov
mov
stos
mov
mov
in
call
jg
jbe
mov
mov
notl
stos
es
cs
cld
adc
adc
mov
fadds
dec
int
mov
dec
lds
out
int3
out
lret
outsl
jne
pop
adc
xchg
pop
lods
add
jge
repnz
xor
inc
adc
lret
pop
lret
test
sbb
cmp
lods
or
push
gs
aaa
jne
sub
test
cmp
test
into
call
cmp
or
cmp
mov
incl
fsubrl
andb
and
mov
insb
inc
and
xchg
outsb
jmp
jns
jge
orb
rclb
jno
jns
into
dec
andb
add
adc
cs
cmp
gs
xchg
jle
aad
add
cmp
pop
addl
loope
in
sub
jmp
or
in
ret
out
pop
jmp
push
adc
cmc
addr16
pop
mov
out
insb
fdivl
mov
sub
jecxz
xor
dec
lods
adc
loope
lcall
cld
xchg
ret
pop
sahf
es
sub
or
or
pop
dec
outsl
and
sbb
lret
das
fwait
dec
fsubs
daa
jmp
cli
mov
or
mov
jle
mov
xchg
test
pop
lahf
pop
pop
pop
ret
and
pop
sub
push
jp
decb
dec
cmp
and
fiaddl
nop
sti
mov
out
subl
popa
imull
adc
dec
out
mov
push
mov
jl
adc
rorb
arpl
cmp
sbb
lahf
jp
testl
in
mov
push
sbb
jmp
enter
cmc
cwtl
xchg
mov
dec
add
lahf
cmpsb
adc
lahf
jo
or
push
pop
outsl
xchg
or
cmc
decl
xor
xchg
push
in
or
adc
sub
push
add
sub
xor
push
pushf
leave
sbb
jl
mov
mov
sub
nop
int3
sub
in
jmp
mov
sub
fldcw
xchg
jne
and
jo
lods
stos
jns
aam
push
out
insl
mov
rcrb
adc
das
lret
loop
push
mov
pop
jne
roll
lahf
pop
or
ret
filds
xor
xor
adc
int
out
mov
data16
int3
out
jle
cmp
inc
mov
xchg
or
das
mov
bound
shr
xchg
gs
pop
pop
jge
mov
test
push
mov
stos
rcrl
sub
push
push
cltd
ja
xchg
jg
loope
ljmp
or
xchg
pop
push
fidivs
aam
add
adc
mov
add
mov
das
dec
fisubrs
pop
jp
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
out
imul
test
sbb
or
cltd
outsb
lds
jge
dec
sbb
mov
imul
push
hlt
icebp
pusha
call
push
lods
mov
jo
jae
sbb
out
cltd
inc
loope
mov
sarb
aam
mov
push
sub
aam
xlat
test
outsb
cli
loopne
in
inc
incl
jge
pop
sub
push
imul
faddp
sub
insl
push
sub
addr16
fsubrp
fs
scas
cmp
out
popl
cmc
push
xchg
cld
pusha
adc
test
popa
rcl
push
ljmp
push
mov
cmp
push
cmp
jae
pop
dec
int3
xorl
dec
xor
cltd
and
dec
pop
out
xchg
test
add
daa
dec
xchg
or
push
push
pop
int3
sbb
mov
pusha
push
xchg
mov
outsl
jge
mov
fcomps
out
mov
rolb
ret
repz
notb
ds
pusha
call
sbb
inc
xchg
fcomps
test
mov
sub
ret
push
int3
mov
into
sub
xchg
clc
adc
mov
inc
sbb
scas
xor
jb
into
xchg
xor
mov
mov
sti
add
lcall
push
out
sub
fildll
je
popa
cmp
mov
sub
aam
inc
insl
sub
add
repnz
xlat
scas
test
loop
in
popf
es
movsb
mov
fnstcw
scas
je
lea
dec
repnz
and
and
ss
in
sub
add
dec
jbe
idivb
loop
dec
mov
mov
hlt
das
mov
pop
mov
dec
mov
jno
sub
dec
and
xchg
mov
xchg
inc
jno
inc
cmpsb
xchg
and
cmpsl
dec
dec
push
je
icebp
add
ja
and
movsb
mov
jnp
and
fwait
ret
jno
out
lods
ret
xorl
push
out
jge
imul
insb
adc
mov
mov
leave
mov
push
inc
sbb
mov
push
mov
inc
sahf
adc
out
into
fiadds
jae
mov
inc
jb
sub
push
fcompl
notl
call
lahf
imul
into
xor
mov
subb
sub
jo
scas
push
mov
mov
es
add
loop
cmp
lret
loope
pop
ja
rclb
push
jno
push
cld
sub
and
lcall
jl
jmp
movsb
les
ljmp
mov
jle
pop
ret
cmp
xchg
fwait
cmp
pop
mov
iret
pop
out
adc
fcmovu
or
mov
inc
iret
in
lds
test
popa
xchg
das
adc
loop
scas
leave
test
mov
in
popl
sub
sub
jae
cmove
inc
pop
outsl
cmp
inc
outsl
xor
leave
mov
jmp
pop
cmp
dec
xor
dec
sbb
dec
xlat
idivb
mov
mov
ss
int3
jp
shll
movsb
stos
jl
gs
jge
pop
xlat
or
mov
push
cmp
lods
xor
mov
mov
les
or
add
add
jmp
outsl
mov
or
imul
mov
inc
jo
mov
mov
add
xchg
pop
sub
mov
lds
vpcmov
ror
pusha
gs
inc
sub
int3
adcl
jle
jo
dec
jecxz
sarb
xor
cld
loopne
cmpsb
inc
dec
cltd
scas
insb
pushf
jle
inc
push
stos
imul
shr
cwtl
fstl
adc
roll
xor
adc
mov
push
imulb
xor
jl
lcall
add
inc
fmul
lods
mov
and
inc
pop
roll
jmp
or
add
mov
lds
nop
mov
subl
xchg
mov
sahf
mov
mov
cmp
ja
pop
jmp
mov
mov
test
call
add
xchg
addl
out
mov
aam
or
aas
scas
and
pop
call
cmp
mov
adc
scas
adc
repz
mov
jns
pop
xchg
pop
xchg
cmp
inc
cltd
test
stos
push
or
stos
les
rolb
pushf
lods
xor
stc
mov
sub
pop
in
nop
push
filds
cmp
mov
in
mov
sti
fisttpl
ja
test
int
inc
jl
daa
sarb
cmpsl
sbb
jle
jg
jb
sbb
fstpl
push
sub
pop
sub
loope
cltd
mov
mov
data16
push
mov
jne
movb
xchg
mov
and
cmp
mov
lret
push
mov
lcall
xor
mov
jno
push
and
xchg
jb
pop
dec
out
dec
dec
and
push
jge
or
lret
roll
pop
adc
jo
or
inc
mov
pop
out
fiaddl
mov
mov
push
enter
mov
lret
sub
mov
sbb
sarl
rclb
xchg
pop
add
sbb
int3
inc
stc
ret
inc
aas
mov
enter
cmp
xchg
xor
pusha
cmp
lahf
jbe
es
iret
in
sub
aas
sub
fwait
cmp
mov
cli
dec
hlt
xor
fst
pop
xchg
inc
push
pop
stc
insl
adc
ds
adc
mov
sbb
test
clc
imul
cmp
xchg
ljmp
mov
adc
ja
jl
shll
sub
mov
lock
std
mov
pop
imul
popa
push
cmp
sub
xor
cld
mov
cmp
insl
lcall
mov
cmp
inc
mov
les
xchg
jb
ret
adc
xorl
adc
es
mov
cs
mov
outsl
lods
popf
fucomp
xchg
jge
shl
rclb
mov
stos
pusha
jb
dec
xchg
dec
cmpl
leave
mov
lahf
and
fbld
pop
fdivrl
push
push
cmp
push
sbbb
jle
call
push
cmp
mov
mov
test
xchg
adc
addb
pop
sbb
fldl
movsb
inc
daa
sub
mov
fsubs
mov
je
jno
cs
add
mov
sbb
jbe
inc
loopne
xor
dec
fmuls
cld
inc
push
outsl
push
jno
fcmovnu
dec
cmp
gs
sub
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
ljmp
pop
jge
jo
cltd
popf
xor
in
mov
cli
xchg
lock
rcll
cwtl
cmp
dec
cmp
mov
out
mov
sbb
add
cmp
into
movsb
imul
loopne
popf
sub
xor
mov
aad
or
test
dec
adc
sbb
mov
sub
bound
inc
ret
cli
loope
sub
adc
loope
mov
loopne
rclb
adc
movsl
sbb
rorb
xor
mov
scas
insb
popa
push
xchg
jle
vorps
push
xchg
nop
cmpsl
inc
or
out
and
xor
outsb
in
inc
sbb
jne
popf
adc
push
lods
and
jno
jge
mov
aas
dec
mov
mov
jle
shl
push
cld
rclb
es
jge
mov
inc
xchg
dec
mov
sub
push
sub
adc
cmp
inc
icebp
les
enter
popf
dec
inc
cltd
imul
outsl
das
popa
mov
pop
sti
pusha
xor
ret
adc
mov
popf
sub
xlat
scas
in
stos
pop
int3
or
daa
sub
ret
add
mov
mov
leave
es
daa
mov
inc
mov
fsubrl
inc
in
jo
inc
sbb
test
test
mov
fcmovnb
add
mov
lcall
imul
lea
les
add
daa
xchg
sub
jmp
mov
xchg
ss
push
popf
inc
fildll
out
adc
lock
clc
dec
pop
lock
push
test
stc
arpl
cli
sub
subb
and
jo
mov
mov
inc
outsl
scas
inc
push
dec
fs
pop
ja
or
jno
incl
daa
sarb
out
popa
xchg
lock
loop
xor
hlt
inc
cmp
sub
fadds
add
imul
jmp
jmp
outsl
lock
jbe
or
pop
push
xor
mov
mov
sub
cwtl
jg
add
in
idiv
jnp
clc
daa
out
or
push
pop
aas
cmovae
fldenv
ja
jb
cmpsb
sbb
into
ffreep
out
mov
roll
shl
cmp
xor
or
aaa
call
fcom
sbb
push
pushf
sbb
push
jnp
xchg
sub
arpl
mov
aaa
test
push
adc
lock
addr16
loopne
xor
pop
push
xor
std
adc
adc
incb
rcl
mov
jecxz
lret
cwtl
cmp
jecxz
mov
push
xor
mov
pop
xchg
fsubrs
and
jecxz
loopne
sar
cs
jno
aas
mov
xchg
xor
outsl
data16
lea
test
imul
or
xchg
cmp
scas
test
push
lahf
imul
push
sub
dec
xor
adc
add
pop
dec
mov
cltd
lea
or
mov
mov
mov
addr16
fisubs
iret
xchg
pop
aam
cwtl
xchg
movsl
pop
imul
jnp
jge
mov
cmp
fsubl
mov
lods
aas
and
out
out
aaa
loopne
mov
jl
stc
loope
pop
xor
ds
xor
test
ja
lahf
test
ljmp
jnp
sbb
and
inc
jae
mov
pusha
jg
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
arpl
or
pop
xor
ret
out
add
pop
add
mov
xchg
rorl
mov
inc
mov
movsl
push
dec
sub
icebp
xor
das
aas
test
push
and
out
mov
cmp
rcl
xchg
push
int
mov
loope
mov
mov
xor
lcall
or
dec
jle
push
mov
aas
lods
in
pusha
imul
lcall
hlt
inc
rorl
xorl
sub
jle
pusha
andl
jmp
out
add
cmp
or
or
push
ss
pop
in
lds
cmp
jno
xchg
dec
jecxz
fwait
pop
popl
pop
out
jnp
jae
out
dec
add
nop
dec
lds
cld
pop
fdivl
js
loop
idiv
divl
push
fs
or
mov
xchg
mov
into
add
xchg
leave
lods
ljmp
and
insb
pop
inc
pushl
ret
cmpsl
pop
stos
xor
push
test
dec
add
dec
pop
or
movsl
es
mov
xchg
pop
shl
mov
push
xchg
je
aaa
fnstsw
test
xor
push
cmc
popa
pop
mov
in
inc
xor
pop
mov
repz
mov
subb
and
pop
push
icebp
mov
das
sarb
mov
test
testl
jle
push
ljmp
insb
or
std
add
das
notb
jmp
fs
mov
insb
push
add
adc
and
or
outsl
jae
jle
cmp
mov
sub
or
mov
xchg
mov
ficoml
test
shlb
fcmovnbe
aas
xchg
repnz
mov
leave
adc
push
in
insl
iret
mov
cltd
loopne
mov
pop
jmp
ljmp
fildll
push
stos
pop
jg
pusha
enter
xor
sti
jl
les
jmp
adc
fsub
jnp
ljmp
mov
aad
ficomps
in
sti
mov
xchg
pop
lds
or
loope
xchg
cmp
add
add
lret
xor
xchg
ret
sub
cmp
sti
ret
push
jg
out
cmp
mov
je
std
and
mov
sbb
js
lcall
mov
mov
add
push
sbb
in
call
inc
fwait
xor
or
mov
mov
jnp
cmp
pop
dec
push
cltd
push
mov
xorl
xchg
cmp
jg
cmp
sub
mov
fcoml
cmp
adc
sbb
es
push
test
stos
mov
testb
or
nop
lret
loope
xchg
inc
aas
jle
mov
movsb
imul
pop
addr16
cmpsb
inc
lds
pop
and
mov
push
fs
or
sbb
nop
popa
inc
mov
xchg
jae
push
andb
xchg
xlat
adc
xchg
leave
jecxz
loop
inc
mov
je
outsb
cmpl
jb,pt
push
xor
lds
addl
std
and
mov
xchg
mov
push
nop
ds
xchg
fsubl
mov
jns
sbb
insl
and
test
out
xchg
push
adc
fs
adcb
lods
mov
js
mov
int
xor
int3
aaa
push
or
in
mov
scas
xor
add
in
add
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
mov
jo
jge
jo
subl
iret
or
push
shl
dec
lods
call
aad
jbe
adc
das
das
dec
dec
jae
aam
xchg
sti
cmp
mov
fldcw
push
inc
pop
push
out
adc
scas
mov
sub
add
or
out
or
sbb
inc
push
dec
dec
movsl
jge
ret
sbb
jle
call
push
rclb
adc
sub
cmp
fisttpll
in
lea
mov
into
dec
ret
mov
or
faddl
mov
mov
lea
jns
push
int
hlt
push
xchg
ja
cs
sub
jnp
inc
test
outsb
push
mov
adc
push
push
adc
loopne
xor
or
cmp
imul
lret
test
aam
insl
inc
sub
dec
adc
ljmp
jle
mov
mov
sub
xor
cld
cmp
xchg
jne
mov
sub
inc
ja
xor
cmp
aas
repz
imul
jge
cwtl
out
add
je
int3
out
aad
push
jle
imul
add
or
es
jae
js
sti
sub
push
imul
mov
popl
sub
pop
out
movsb
mov
sub
push
sub
das
int
int
and
scas
inc
adc
jns
xor
add
jle
push
stc
shlb
loope
cmp
cmp
jno
shrl
or
repnz
leave
clc
inc
inc
sub
das
sub
jge
mov
inc
mov
cwtl
dec
xchg
and
fiadds
push
sbb
or
and
cmp
in
add
jle
test
nop
mov
pop
mov
repz
iret
xchg
ds
in
and
sub
movsl
xor
mov
push
and
cli
es
popa
fnstsw
sub
push
mov
jno
call
pop
out
popa
stc
imul
and
lea
dec
push
es
ds
in
fsubr
movl
jno
xor
and
out
imul
push
stc
sub
xchg
imul
fisubl
ret
xchg
pop
jl
cmp
jnp
xchg
orb
adc
mov
in
inc
aas
sbb
add
mov
rcrl
and
lret
idiv
pusha
inc
mov
pop
mov
cld
shll
mov
sbb
cld
or
jge
and
repnz
mov
inc
sub
inc
in
sti
rorl
jo
dec
out
xorb
mov
scas
cld
outsb
jecxz
lods
rcl
sbb
stc
into
ret
int3
pop
mov
jle
push
sbb
sbb
mov
int3
xor
pop
in
xchg
je
lock
dec
jl
push
aas
mov
lahf
or
fwait
daa
sbb
sbb
leave
movsl
imul
arpl
and
mov
fs
daa
int
jno
imul
push
je
repz
loope
je
into
add
lods
sbb
hlt
scas
add
and
rcrb
rol
push
add
cmp
sbb
inc
sub
popf
lret
adc
pop
jbe
jmp
sub
aas
inc
jmp
out
xor
sbb
push
mov
movsb
cld
fnsave
ficoml
pop
repnz
mov
mov
and
out
leave
xchg
mov
add
sbb
sbb
dec
push
stos
shrl
mov
pop
lahf
dec
outsl
xchg
push
mov
pusha
sbb
mov
popa
mov
sub
out
aaa
xlat
mov
mov
mov
fucom
inc
xchg
adc
push
mov
enter
or
ret
jne
inc
add
jg
add
rol
cli
cld
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
adc
jo
pop
jge
jo
pop
jp
fwait
sub
in
test
dec
popf
add
xchg
mov
rcr
lds
insl
mov
jo
pop
in
negb
outsl
inc
sbb
xchg
add
pushf
cmp
add
mov
push
test
adc
sbb
push
xor
inc
and
sbb
mov
or
push
mov
jp
jns
rcrl
add
ja
inc
or
lea
or
sti
das
stc
mov
xchg
inc
sub
fcmovb
inc
mov
mov
cli
inc
inc
push
test
fbstp
hlt
mov
loop
mov
and
xchg
push
dec
mov
cmpsb
sarb
ljmp
xchg
mov
and
sbb
xchg
jmp
andb
jno
mov
popf
or
cli
dec
add
stos
repz
mov
lcall
jno
lods
iret
sbb
aam
aad
xchg
test
lea
icebp
push
lock
clc
push
pusha
pusha
sub
lahf
dec
mov
rol
std
andb
pop
out
je
sub
sub
push
pinsrw
push
out
dec
fisttpll
popl
and
call
inc
sbb
inc
or
sub
in
or
sub
sbb
roll
inc
les
lds
pop
inc
lret
loop
inc
pop
maskmovq
imull
cmp
dec
dec
addr16
les
jmp
sar
data16
pop
cmpl
cmp
sub
lock
gs
sti
push
test
aam
mov
mov
lods
pushf
ja
repnz
or
mov
pop
and
and
xor
xchg
xor
lahf
fmull
testb
sbb
in
test
into
fidivl
cwtl
dec
leave
pop
addr16
loop
dec
mov
adc
inc
popa
push
pop
dec
dec
addr16
addr16
jmp
jg
inc
lahf
or
cld
arpl
rcrl
scas
inc
inc
pop
psllw
jecxz
xor
inc
push
inc
enter
and
stos
fimull
push
lea
dec
cmp
sbb
ds
lcall
aam
ficomps
pop
mov
adcb
push
inc
pop
dec
mov
orb
push
inc
lods
xor
ds
mov
adc
adc
dec
sar
data16
adc
jmp
xchg
jnp
leave
in
xchg
push
mov
adc
les
mov
xchg
nop
aaa
sbb
fadd
and
ljmp
jle
popf
pop
aas
push
sbb
ja
mov
inc
sub
xlat
in
adcb
and
aas
cmp
iret
sub
cmp
add
sbb
repz
addr16
push
in
xchg
iret
mov
pop
dec
mov
call
insb
subl
inc
out
add
mov
jmp
jne
inc
das
xchg
fidivs
lods
mov
cmp
mov
popf
fcoml
pop
out
pop
add
mov
scas
out
pop
std
pop
and
leave
pop
push
mov
adc
dec
fsubs
jle
jbe
shll
sbb
cs
shr
inc
add
ljmp
mov
lods
mov
fwait
ss
cmpsl
push
mov
aad
cmp
sub
jo
jae
mov
dec
repnz
enter
aam
in
cmpsb
mov
jns
sbb
xchg
nop
push
sbb
mov
mov
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
add
jo
pop
jge
jo
sub
ja
mov
jmp
mov
push
clc
ljmp
nop
mov
mov
mov
and
int
push
xchg
imul
and
addb
pop
push
mov
jp
mov
jle
lock
int3
lcall
addl
cmp
pop
and
mov
dec
fsubl
jecxz
icebp
lods
adc
ds
rcr
fdivr
mov
pop
push
mov
fldenv
mov
cmova
jl
add
in
pop
sub
cmp
call
mov
aam
adc
out
push
dec
in
out
adc
shll
and
and
mov
stos
insl
xchg
ja
mov
aam
and
scas
mov
repnz
mov
dec
cmc
sarb
jg
dec
in
inc
pop
push
push
jnp
inc
sti
xchg
into
and
jb
icebp
icebp
cld
cmpsl
add
pop
lcall
inc
xor
repz
orl
in
inc
frstor
jl
pop
push
mov
and
add
arpl
sbb
xchg
ficoml
and
clc
les
mov
fwait
ja
stos
pop
mov
movsb
nop
arpl
xor
data16
bound
mov
gs
jne
lea
lahf
mov
repnz
fnstenv
ret
inc
mov
es
stc
hlt
insl
sbb
cli
push
mov
dec
sub
mov
int
add
mov
xor
repz
arpl
add
and
add
fcoms
or
xor
mov
mov
out
adc
in
mov
jns
in
outsl
lret
add
adc
jb
cwtl
mov
or
and
out
aas
push
loop
movsb
popl
ss
and
repz
inc
mov
pop
dec
sbb
dec
jno
bound
push
cmp
subl
les
mov
pusha
roll
test
mov
push
pop
dec
and
or
notl
cmp
in
mov
outsb
sarl
inc
aas
push
stc
cwtl
inc
jnp
mov
repnz
sbb
out
adc
aas
fstpl
push
mov
pop
cmc
inc
shl
mov
arpl
in
sub
fisubs
jp
bound
scas
xor
fnstenv
push
rol
mov
push
imul
lret
jno
push
dec
movsb
adc
mov
adc
xlat
dec
jge
shrb
mov
mov
cmp
pop
lods
mov
nop
xor
cs
mov
int
pushf
int
lahf
inc
dec
or
xchg
je
cmpsl
pop
pop
lahf
xchg
ljmp
xchg
aad
fldt
inc
sub
in
cmp
fistps
fstpl
scas
rcrb
shll
cld
inc
jb
xchg
loopne
sub
pop
es
sahf
out
sahf
outsl
mul
mov
mov
js
sarl
mov
pop
es
out
lret
in
stc
dec
xchg
roll
push
pop
push
cmpsb
cmpl
and
dec
cli
sbb
xchg
xchg
inc
mov
xor
xor
push
rorl
sbb
mov
out
cmp
push
sbb
jmp
jbe
mov
dec
xchg
inc
mov
cmp
in
int3
add
and
lahf
addr16
dec
icebp
inc
adcb
lret
pushf
pop
movaps
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
inc
stos
pop
roll
jo
mov
icebp
cmpsb
fstps
bound
xor
xor
sbb
ret
and
pop
add
bound
sub
fists
fnsave
cmp
mov
scas
jp
jnp
inc
xchg
mov
popa
fs
mov
ja
xchg
lock
and
cmc
xlat
jp
or
rorb
dec
adc
outsl
inc
addl
and
sub
xchg
xor
mov
xchg
aaa
pop
dec
pop
out
popa
cmpsb
jbe
dec
cmpl
lock
cmp
pop
adc
int3
dec
mov
jns
aas
in
mov
pop
mov
movb
mov
adc
pop
mov
flds
mov
mov
inc
dec
pop
mov
push
popf
jnp
add
and
mov
movsb
mov
xchg
pop
add
mov
loope
jb
out
lock
sbbl
out
ds
mov
cltd
adc
pop
sarb
mov
xchg
out
xor
jmp
xor
push
scas
xchg
push
les
inc
test
cs
out
push
test
adc
jno
lods
jge
dec
jb
mov
mov
call
xor
ret
aad
nop
add
dec
rcll
addb
or
icebp
inc
sbb
test
xchg
push
and
xor
cs
leave
sub
shrl
or
data16
aad
sub
shrl
jns
jo
mov
loope
push
cltd
lds
enter
push
lds
notb
push
xor
gs
jno
sbb
popa
sbb
out
insb
aad
mov
call
data16
and
jae
lea
stos
mov
roll
mov
jp
bound
pushf
rcr
test
pop
in
scas
fimuls
ds
mov
mov
jp
dec
in
jmp
scas
lods
inc
sahf
jmp
adc
xchg
cmp
pop
stc
jg
loop
adc
lahf
mov
popf
js
leave
out
icebp
cltd
jp
mov
stos
or
inc
movsl
add
movsl
sahf
pop
nop
sti
lea
movsb
rdtsc
sub
in
xor
lods
arpl
sti
mov
adc
movsb
xchg
and
add
sahf
loope
and
pusha
inc
adc
add
add
fbld
push
enter
mov
mov
and
imul
nop
sbb
fisttpl
pop
cwtl
push
cmpsl
cwtl
add
xlat
cwtl
lds
xlat
inc
int
xor
hlt
add
sbb
cld
roll
push
fs
outsl
pop
dec
push
sub
sub
xchg
sldt
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
pop
mov
jo
mov
pop
mov
aad
mov
push
das
ret
inc
cli
lods
ret
cmp
repnz
imul
push
xchg
aaa
jmp
adc
imul
push
cld
ds
jge
test
add
in
adc
movsb
std
stc
mov
mov
cmp
jo
ja
cli
add
bnd
cmc
mov
jo
push
dec
mov
in
xor
pusha
push
xchg
sbb
inc
push
sbb
inc
rorl
lret
nop
dec
lahf
mov
mov
aas
xchg
lock
push
test
outsl
icebp
mov
mov
imul
jle
mov
shlb
mov
sbb
imul
cmp
movsb
sub
jnp
mov
cmpsl
mov
test
out
fisttpl
sbb
xchg
mov
inc
or
and
mov
out
roll
xlat
cmp
je
cli
imul
or
out
imul
mov
out
or
jnp
imul
mov
add
pop
mov
and
adc
mov
je
sahf
dec
mov
lret
xadd
mov
inc
xor
adc
lds
popf
ljmp
test
ret
mov
cmp
mov
lret
pop
incb
sbb
xchg
ror
adc
jbe
xchg
adcl
or
scas
and
hlt
cmpsl
lahf
mov
mov
push
call
movsl
jnp
cmp
xchg
in
les
loope
inc
pop
scas
mov
xchg
cmp
popa
mov
cld
in
sub
sbb
fwait
push
sbb
jns
mov
popf
mov
xlat
lds
inc
mov
xor
lcall
and
dec
sub
mov
push
and
ret
push
test
dec
adc
popf
insb
movsb
add
sahf
outsl
movsb
mov
sub
lods
test
push
jno
out
xor
jge
add
mov
lea
insl
stc
pop
dec
popf
adc
xchg
push
and
add
dec
mov
jns
fimull
frstor
ss
fxch
testb
push
call
and
jne
pop
dec
xor
insl
jmp
adc
ret
mov
push
insl
xchg
xor
add
shlb
jle
loop
or
inc
stc
mov
sub
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
mov
lahf
mov
sub
mov
out
and
mov
mov
pusha
out
aas
dec
or
and
ja
in
test
dec
imul
or
outsb
cmp
push
shll
in
xor
mov
jcxz
enter
int3
inc
cmp
shrb
push
fstpt
adc
dec
ja
sub
xor
dec
mov
mov
test
enter
insl
sbb
dec
gs
lcall
fldenv
xorl
data16
cmc
andl
mov
xor
cmpsb
movsl
jne
mov
inc
pop
adc
pop
hlt
es
cmp
bound
out
push
decb
lret
test
inc
jne
ljmp
enter
inc
inc
mov
stc
push
mov
fdivrs
push
mov
xlat
jbe
inc
mov
sbb
push
scas
mov
jp
jle
xchg
lods
leave
and
leave
orb
push
sahf
push
test
ja
or
jl
std
jns
shrl
xchg
stc
lock
jecxz
or
xchg
fst
xchg
test
testl
test
andb
adc
xor
in
shlb
inc
add
jno
xchg
cmpsl
or
inc
jmp
push
adc
or
imull
mov
mov
in
add
fdivr
xor
in
jecxz
repz
ret
dec
jns
pop
clc
mov
imul
mov
mov
sub
int
scas
ror
lds
lret
jns
dec
dec
test
outsl
and
mov
push
pop
lods
iret
fdivp
xchg
enter
into
xlat
jmp
xor
call
mov
stos
dec
mov
push
aaa
lods
mov
mov
repz
xor
bound
mov
push
mov
mov
pop
mull
outsl
divl
jb
jecxz
jmp
lea
mov
cli
incb
aam
adc
rorl
bound
adc
cmpsb
bound
out
mov
imul
push
lahf
jo
and
scas
cmpsb
scas
push
pop
sbb
cmp
sbbb
insl
sub
insb
mov
jns
xchg
in
jmp
adc
test
lock
push
cmp
dec
loope
test
leave
js
aaa
pop
pop
aam
jb
lea
addr16
jbe
fildll
stos
jb
mov
push
sbb
add
add
mov
or
testb
cld
inc
add
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
push
jns
adc
jo
jle
jo
shrl
pop
sub
das
push
inc
sub
ss
cltd
outsl
lret
addr16
and
jecxz
mov
xchg
push
add
jo
orb
fisttps
dec
jo
xchg
xor
pop
add
ja
xor
shll
mov
jnp
ret
fst
jae
test
arpl
jle
xchg
cmpsb
out
fcompl
lds
cmpb
xlat
scas
test
rolb
insb
cmpsl
ret
cmpsl
movb
scas
xchg
sbb
je
and
pushf
xchg
pop
arpl
testl
push
xor
xchg
or
imull
sbb
sub
xchg
repz
lods
lods
decb
and
and
jl
mov
or
popa
jo
xchg
push
xchg
sbb
inc
addr16
cmc
ficoml
jg
cltd
ss
lds
add
mov
ss
xor
test
movsl
sarl
sub
sahf
push
outsl
test
pushf
dec
test
test
sarl
test
push
scas
stos
ja
mov
sbb
mov
xor
test
ljmp
pop
incl
inc
int3
es
xor
sub
sbb
cld
push
sbb
lock
inc
mov
scas
adc
ret
inc
jge
pop
dec
jns
dec
inc
ja
xlat
xchg
ss
call
push
dec
and
sub
push
repz
stc
push
insl
stc
ret
cwtl
add
shlw
fld
push
dec
movsl
js
mov
dec
add
mov
or
sub
jge
xor
jo
add
xchg
cmp
push
adc
jecxz
dec
add
mov
mov
jo
lds
icebp
test
fnstsw
cmp
test
xor
sub
hlt
jns
pop
fists
aas
sbb
xor
xchg
push
dec
cmp
nop
or
lods
in
jecxz
mov
leave
pop
xor
jo
dec
cmp
jae
adc
cmpsb
popa
aam
unpcklps
push
clc
aad
push
sub
push
sbb
sbb
jmp
roll
mov
jo
pop
xchg
add
pop
shr
mov
mov
push
popf
xor
and
mov
cwtl
pop
xor
jo
jno
lds
xor
jp
push
jae
mov
xor
lea
repz
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
cmp
adc
fs
mov
imul
cmp
xor
dec
sbb
sbb
add
jae
aad
xchg
add
add
mov
sub
adc
scas
pop
rcrl
enter
mov
call
sbb
daa
ja
lcall
lret
xchg
les
push
mov
imulb
sti
jg
jle
lds
mov
sbb
jno
inc
inc
or
mov
movsb
sub
xor
cld
pop
addr16
fbstp
xchg
xchg
or
cwtl
es
pushf
sub
mov
scas
mov
or
pushl
ljmp
stc
sahf
ljmp
aam
pop
movsb
in
mov
mov
rcrl
test
fstps
xor
scas
push
lods
push
inc
fistpll
bound
outsl
rorl
inc
cmp
mov
sbb
lock
xor
and
call
adc
push
iret
cmp
test
loop
mov
lock
mov
stc
stos
and
std
add
or
add
scas
pop
jbe
push
jns
fsub
fcmovnbe
jne
dec
ss
lods
pop
and
sbb
test
push
je
mov
jge
cltd
sub
push
dec
mov
push
jae
jl
sbb
mov
fs
out
add
sar
clc
mov
hlt
out
or
lock
sbb
adc
dec
dec
inc
push
add
loop
sub
aaa
inc
mov
bound
adc
pop
sub
mov
dec
fs
sub
lret
add
popa
adc
and
cmpsb
inc
and
jmp
sub
and
aas
cmp
sarb
add
pop
ja
push
int3
or
aam
in
push
int3
pop
rorl
cli
lods
xchg
test
cmpsb
adc
roll
mov
cmc
mov
outsl
push
lds
xchg
sti
mov
cmp
lcall
popl
adc
sub
sub
pop
sbb
out
xor
lds
inc
sahf
inc
xchg
pop
in
iret
adc
mov
movsb
sahf
inc
das
dec
stos
aad
les
or
mov
pushf
and
nop
lods
fadds
push
test
adc
add
or
in
cltd
inc
push
or
gs
leave
adcl
xchg
in
lahf
or
mov
jo
jl
sar
xchg
push
daa
pop
std
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
push
or
adc
jle
jo
hlt
ret
cmp
mov
leave
movsl
pop
std
push
loopne
sahf
pop
shr
scas
out
js
sub
dec
xchg
out
xor
popf
into
xchg
and
lcall
xchg
pop
cmc
or
das
xchg
lock
xor
adc
arpl
aam
adc
dec
jb
rorl
add
pushf
xlat
andl
lods
lock
enter
pop
enter
mov
sbb
sub
rolb
outsb
loopne
xchg
outsl
arpl
lea
jecxz
dec
stos
mov
pop
stos
out
xchg
call
mov
roll
xchg
mov
jge
dec
jge
cld
mov
lret
daa
lcall
inc
repnz
test
sarl
mov
adc
out
push
mov
sub
pop
outsb
movsl
ja
cmp
in
mov
test
test
mov
adc
in
adc
or
add
mov
sahf
popa
adc
or
mov
xor
pusha
sti
and
jg
xor
shl
push
cmp
mov
inc
in
aam
sahf
and
ds
cmp
arpl
adc
in
loop
sbb
xor
idivb
outsb
jl
xchg
test
hlt
xchg
cmp
push
xchg
fcomps
add
leave
cmp
mov
ret
xor
stos
mov
inc
icebp
jae
mov
icebp
ja
enter
stos
xchg
test
cmpsl
mov
hlt
and
add
and
fildll
or
fadds
movsl
mov
dec
bound
sub
ja
scas
lock
sub
dec
adc
adc
clc
pusha
add
adc
pop
rorb
jmp
enter
imul
xor
aam
mov
add
std
cmp
addr16
sub
adc
jns
daa
das
push
cmp
pop
inc
out
and
repnz
clc
daa
inc
mov
in
outsl
scas
mov
dec
lods
fnstcw
jo
add
in
cmpsl
in
xlat
and
adc
mov
jle
mov
testl
xchg
push
cli
adc
ss
pushl
xor
inc
sahf
dec
jl
mov
lahf
and
hlt
cmp
ljmp
js
bound
inc
cli
mov
mov
clc
push
mov
push
clc
mov
jno
push
mov
les
sbb
push
sbb
rorb
mov
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
xor
mov
inc
adc
aaa
xchg
enter
push
popf
movsl
cmp
mov
cmp
idivb
aaa
push
push
stos
enter
movsb
sub
arpl
xchg
xchg
and
cmpsb
flds
and
add
sarb
sub
cltd
add
mov
pop
shld
out
jnp
push
push
jg
out
mov
je
cmp
push
pushf
mov
pop
dec
lret
outsb
xor
fsubr
jns
xchg
push
lea
push
adcb
lcall
test
dec
stc
mov
aam
mov
cmp
clc
push
mov
popa
or
xchg
xlat
mov
cmp
or
mov
sbb
jg
fdivrs
cmc
test
push
push
hlt
pop
cmp
jns
add
ficomps
jle
add
pop
dec
rorb
fdivrp
out
das
pop
aam
cmp
test
xor
hlt
lret
movsl
je
lods
sbb
jb
push
cmpsl
js
mov
loope
insl
mov
shr
xor
adc
dec
and
dec
js
arpl
repz
gs
ja
in
xchg
popw
or
enter
dec
push
int
in
mov
clc
pop
cmp
fs
jg
cs
lds
xlat
cmp
scas
int3
push
dec
fs
stos
xchg
mov
aad
std
cmpsb
jno
push
pop
sbb
punpckhdq
pop
cmpsb
int3
in
push
inc
inc
addl
fdivs
push
outsl
inc
jno
lret
rol
sahf
mov
cmp
cmp
inc
cld
or
sub
and
inc
int
jmp
js
xchg
xor
inc
fmull
rolb
loope
stos
dec
push
arpl
mov
stos
push
out
movb
out
push
inc
adc
adc
mov
push
inc
add
fisubrl
fwait
lahf
dec
dec
jns
es
stos
hlt
movsb
sub
fwait
addr16
in
fidivrs
loopne
mov
or
pop
mov
lahf
jecxz
mov
mov
push
scas
push
inc
mov
jne
scas
leave
jg
icebp
dec
sub
int
daa
les
cmp
es
adc
inc
mov
std
cld
mov
cmc
xchg
test
outsl
cmp
mov
mov
push
clc
push
mov
ja
and
lahf
push
fistps
nop
cmc
aad
lds
push
loope
mov
insb
mov
xlat
cmpsb
imul
xor
rcr
and
filds
popf
fldt
stos
fwait
adc
clc
movsb
fsubr
loop
repnz
jne
pushl
jmp
and
lods
shrb
in
sbb
mov
jo
jle
jo
ficoms
fsubrl
hlt
loopne
loop
mov
jge
mov
pop
xor
sbb
pop
sbb
cwtl
lret
sbb
cmpsb
jno
jge
mov
movsl
adc
gs
enter
dec
pushf
fisttpll
imul
addl
pop
add
fcmovu
adc
fcoml
mov
outsb
mov
insb
mov
data16
mov
arpl
rclb
pop
push
ret
iret
repnz
and
int3
out
shll
pop
je
add
dec
inc
jb
cmp
xor
pop
insl
call
and
adc
add
xchg
leave
and
xchg
cmp
loop,pt
scas
mov
call
jnp
inc
adc
dec
jae
sub
in
push
mov
xor
ss
sbb
jmp
xor
inc
cs
push
jmp
cld
idivb
imul
sub
push
mov
into
call
xor
lea
ficompl
mov
adc
cmc
fidivl
push
push
sti
rep
int
daa
lahf
sti
mov
jns
lret
pushl
and
rol
stos
sub
es
or
mov
rcr
das
lods
jp
inc
repnz
ja
sub
test
dec
push
test
stos
and
inc
test
mov
adc
adc
push
jo
cli
stos
jl
mov
movsb
push
adc
or
push
and
lahf
hlt
imul
divl
adc
subl
ja
add
sarb
int3
ljmp
shr
test
lock
mov
pop
inc
add
nop
cmp
bound
fiaddl
mov
inc
and
mov
arpl
mov
push
in
loopne
cmp
mov
mov
ret
insb
repnz
mov
imul
add
mov
adcl
push
stos
adc
nop
lds
mov
add
cwtl
leave
outsb
out
and
xor
cmp
and
inc
js
jp
mov
lods
mov
add
xlat
fnstsw
xchg
jecxz
jno
lret
xchg
movsl
xchg
mov
gs
dec
ja
sbbl
xchg
mov
repnz
fcmovnb
int
int3
aaa
mov
xchg
mov
mov
out
sbbb
test
dec
mov
movsl
ud0
mov
in
mov
jge
ja
jmp
pop
insl
and
xor
insl
jp
or
mov
push
jo
test
subb
add
mov
jmp
rclb
bound
hlt
incl
cwtl
pop
shlb
dec
jecxz
sbb
mov
data16
test
fcomi
cwtl
jno
mov
lahf
dec
test
cwtl
in
mov
adc
push
xchg
cmc
mov
dec
int
jae
adc
insb
out
xchg
or
leave
fs
push
test
dec
xchg
push
scas
mov
fidivrl
shr
add
outsb
jns
sahf
dec
jno
sub
and
adc
cmc
addb
cmpsb
jmp
lcall
push
into
mov
mov
add
jns
mov
sahf
lods
mov
push
xchg
int
mov
cmp
mov
fnsave
fsubrs
jb
lods
mov
dec
pop
push
cld
or
lds
fucomp
add
jge
push
cmpsb
cmp
nop
repnz
dec
sbb
pop
add
xchg
sub
in
lods
jge
sub
pop
add
jle
mov
mov
iret
out
repz
jp
cmc
and
jnp
popf
push
jmp
out
mov
pushf
xchg
pop
inc
xor
bound
imul
mov
sbb
add
cmp
popf
arpl
dec
mov
shlb
stos
sub
cs
add
jne
rcll
or
adc
push
xchg
mov
cs
jle
bound
sub
leave
ret
push
pop
call
mov
out
push
lods
pop
int
jne
int
stos
xor
pop
lcall
cli
mov
jl
mov
mov
stos
mov
fdivr
stc
xor
vmovntps
push
mov
push
mov
and
or
and
enter
push
lods
mov
rcr
les
push
ss
cltd
push
testb
out
cmp
arpl
adc
data16
xchg
dec
or
and
aas
mov
pop
cmp
mov
cmpsb
outsb
into
add
xchg
xchg
xchg
js
sbb
call
mov
sbb
mov
push
dec
sahf
js
xor
xchg
sti
cmpsb
subl
jo
jle
rol
jne
pop
fucomp
je
push
sbb
sub
or
sarl
adcl
xor
hlt
pop
movsl
sbb
pop
sub
out
std
cs
jmp
and
nop
sub
loop
ja
and
aas
icebp
mov
jmp
xchg
fiaddl
sbb
fcomps
mov
mov
ficoms
push
jae
or
or
test
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
xchg
pop
or
inc
jbe
jo
jle
jo
stc
adc
lods
xor
outsb
sbb
dec
movl
push
bound
dec
dec
mov
or
cmc
jns
popa
fisubl
add
mov
in
adc
insl
imulb
clc
fdivl
repz
push
dec
fs
jp
lods
adc
add
dec
and
jns
fiaddl
sbb
adc
push
xor
outsb
mov
scas
xor
or
pop
xchg
cmp
call
pop
jno
insb
push
xor
xchg
cmp
aas
dec
add
arpl
mov
repz
cmp
mov
or
pop
fwait
add
mov
push
mov
lods
pop
xchg
stos
fucomip
inc
sbb
xlat
xor
sub
and
mov
jg
push
cmc
push
adc
insb
imulb
into
or
adc
in
and
inc
lea
daa
xlat
sbbl
cmp
and
inc
fsubrp
cmpsl
iret
push
aam
xchg
push
mov
pop
imul
jne
adcl
imul
bound
xchg
pop
jge
lret
push
gs
stc
and
xchg
mov
pop
pop
icebp
sub
add
mov
sar
mov
aaa
ljmp
aaa
inc
test
or
push
inc
mov
jmp
sbb
mov
ret
mov
push
pop
call
mov
repnz
imul
or
stc
cmp
jge
push
jb
hlt
mov
pushf
jle
sti
lods
mov
or
or
les
push
icebp
mov
sarb
out
jmp
inc
mov
lods
psllw
add
aaa
or
pop
stc
repnz
pop
ja
lods
cwtl
mov
jno
lret
mov
dec
movsl
inc
mov
ja
mov
aas
test
lock
inc
test
fiadds
xlat
mov
pop
hlt
cmp
push
sub
inc
adc
divb
mov
out
xor
mov
pop
ror
notl
xor
mov
and
push
adc
aas
push
mov
add
test
xchg
stos
mov
outsb
jae
ficompl
adc
sbb
scas
sahf
gs
hlt
insb
sub
and
and
push
push
sub
insb
out
repz
call
mov
inc
pusha
xor
aas
sbb
jp
xchg
xchg
addr16
negl
pop
or
in
addr16
addr16
jnp
lods
pop
mov
pop
mov
sti
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
shlb
xorb
mov
jns
pop
xchg
leave
xlat
lahf
mov
aaa
mov
test
push
mov
pop
fcmovb
xchg
sub
daa
sub
dec
push
add
jo
pop
push
mov
arpl
fiaddl
out
xchg
push
pop
mov
out
push
repnz
dec
push
and
hlt
outsl
sti
mov
fidivrl
loop
or
inc
or
and
ja
xor
xchg
xchg
aam
jno
xor
push
fwait
inc
adc
jmp
add
sbb
jg
or
gs
clc
mov
xchg
gs
mov
xchg
cmp
mov
push
in
hlt
inc
or
sbb
xchg
sub
cltd
xor
jecxz
mov
rclb
xchg
lcall
push
dec
jae
and
and
sub
mov
popf
out
sub
insb
out
imul
out
add
rcrl
std
xchg
testl
dec
xchg
sarl
ja
outsl
jge
into
lret
cmp
lods
adc
into
decl
in
pop
mov
pop
pop
jae
mov
lret
jns
pop
dec
adc
outsl
lcall
xor
sbb
add
lahf
pop
add
cmpsb
push
jo
pushl
lcall
imul
aaa
repnz
pusha
pop
iret
mov
call
sub
pushf
mov
dec
inc
mov
addr16
cmp
xchg
adc
movsb
push
sub
add
hlt
mov
aas
adc
imul
inc
rorb
stos
fists
lret
cmovae
stc
movsb
out
test
stos
sbb
fstps
lahf
mov
and
mov
cmp
xor
push
jl
cmp
movsl
inc
dec
data16
insb
pop
jo
clc
jmp
vpxor
cwtl
or
jns
inc
scas
loopne
push
cwtl
outsl
sub
mov
je
xchg
stc
sahf
inc
push
ja
loope
test
mov
inc
add
mov
jno
push
sub
jbe
pop
adcl
shrb
fistpll
inc
idivl
cli
inc
jae
test
lret
insl
dec
inc
mov
sub
dec
mov
pop
sub
lret
mov
adc
lcall
fdivrl
jns
loop
shll
xchg
cs
pop
aam
je
mov
ret
outsb
or
mov
sbb
fdivr
xor
in
shlb
mov
xchg
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
rolb
jle
jo
mov
jmp
push
les
jns
inc
dec
les
mov
int3
stos
add
popa
push
mov
in
dec
jmp
sbb
cltd
loope
pop
mov
nop
adc
and
inc
and
push
ret
fwait
push
loop
sub
js
lahf
cmp
divb
in
and
xchg
push
aam
inc
pop
sbb
dec
fidivrs
jnp
call
daa
test
cmp
mov
xor
push
jmp
hlt
roll
mov
lret
in
sahf
stos
sub
pop
pushf
mov
out
dec
mov
addb
or
cwtl
arpl
fists
enter
lret
out
or
lahf
into
adc
sub
jbe
cmpsb
xchg
pushf
sub
rcll
add
pusha
cmpsb
and
aaa
outsl
fsts
and
inc
addb
cli
lods
out
lcall
arpl
arpl
aad
test
jl
xor
sbb
jae
mov
stc
xchg
sar
loope
dec
jne
pop
push
or
jmp
stos
mov
add
inc
jo
push
xchg
xor
sub
pop
adc
test
pop
mov
movsl
adc
outsb
pop
cltd
pop
movntq
mov
adc
adcl
insl
lahf
cmp
rcl
ret
or
push
jmp
sbb
mov
and
add
aam
sbb
jge
push
push
or
pushf
les
popa
pop
mov
cmp
inc
shrb
in
popa
fs
fsubrp
lods
sub
repnz
xlat
stos
dec
in
out
mov
pushf
pop
loop
mov
jnp
mov
mov
out
cwtl
shl
movsl
ss
jnp
clc
fsubl
bound
je
test
sbb
aad
mov
push
fstps
inc
xrstor
ret
fucomi
adc
cwtl
sti
sahf
imul
push
xchg
lods
mov
xor
xchg
mov
in
jnp
clc
fs
rcl
and
xor
idivl
stos
repz
movsb
cwtl
inc
mov
inc
push
sbb
not
les
sahf
mov
and
sbb
fucom
mov
sub
pop
iret
dec
popf
fidivl
sti
imul
and
adc
outsl
pop
and
xchg
xor
add
bound
xor
xor
jmp
add
mov
jb
jge
jge
mov
pop
adc
jo
jle
jo
cld
xchg
int
sbb
ds
jo
loop
xchg
pop
push
test
mov
mov
rolb
insb
data16
rorb
enter
insb
add
mov
xor
or
push
pop
fimuls
test
jo
mov
jmp
scas
ret
sbb
aad
mov
push
xor
ljmp
pop
or
scas
mov
ds
scas
fcomps
jmp
adc
divb
fists
pushf
cld
jp
push
jno
int
push
in
pop
pop
loop
ss
add
arpl
ss
pop
cmovp
cwtl
pop
sub
bsf
sub
xchg
divb
in
and
mov
dec
cmp
lds
or
sbb
or
jno
pop
cmp
adc
push
pop
jmp
movsl
es
decb
pop
fbld
cmpsb
add
add
fs
in
add
pop
cltd
cmpsl
lock
sti
pop
xor
lock
pop
xor
sbb
lret
add
test
jb
aas
jns
mov
mov
xchg
pop
in
jp
mov
lds
loope
cmovae
stos
inc
lret
call
scas
lahf
pop
shll
add
jle
push
idivl
dec
cmpsb
arpl
andl
shll
mov
push
gs
daa
cld
cmpsb
inc
sar
cmp
mov
popf
push
dec
push
pop
and
xor
lret
or
add
xchg
adc
addb
sub
pop
xor
daa
sbb
sbb
cmc
fsub
out
bound
pop
xor
cmp
mul
fs
sahf
sbbb
xor
cmp
ret
popf
fcom
fiadds
inc
fucomip
xorl
nop
jb
int
stc
fldcw
stos
std
out
outsb
add
ret
cmp
psrlw
dec
leave
out
pop
outsb
cs
sub
ljmp
jecxz
mov
cmpl
addr16
les
mov
pop
test
fdiv
xlat
add
lods
fs
ss
dec
dec
xorl
adc
mov
insb
pop
sbb
repnz
rolb
lret
xor
pop
loop
sub
pop
mov
enter
lret
adc
icebp
mov
and
aam
fisubl
sub
pop
test
adc
movsl
push
xchg
imul
jbe
insl
shlb
adc
pop
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
orb
jo
jle
jo
test
imul
cld
pop
jbe
cmp
inc
stc
mov
test
rcll
idivl
jbe
sbb
mov
lahf
pop
cli
imul
lahf
sub
xchg
out
pop
mov
mov
popf
jle
out
adc
cmp
push
cs
push
lahf
mov
jmp
stos
jns
and
jmp
adc
loop
fnclex
push
daa
bound
pop
pop
inc
jmp
mov
push
adc
lods
jmp
rcr
sbb
sbb
mov
mov
xlat
add
hlt
push
test
das
xchg
mov
pop
add
mov
cmp
xor
dec
mov
jno
jnp
lcall
adc
dec
movsb
cwtl
dec
pop
and
mov
xchg
or
sbb
dec
dec
mov
mov
mov
jnp
xor
inc
jbe
popl
lcall
xchg
les
mov
mov
test
mov
adc
iret
loop
jbe
jmp
cmpsb
xchg
cmp
in
mov
mov
loopne
jbe
repnz
pop
mov
stc
inc
mov
push
daa
fldcw
stos
lods
loopne
inc
aad
push
sub
imul
lds
inc
imul
ja
bound
bound
ja
mov
out
repz
add
outsl
lock
loopne
in
xchg
pusha
imul
sbb
rolb
push
loopne
inc
xor
lahf
push
hlt
fdivl
pop
lret
inc
mov
pop
jno
je
rorb
stc
push
jp
and
and
jge,pn
sbb
mov
lock
adc
in
cmpl
pop
adc
push
mov
jge
push
stos
mov
push
cmp
ret
lds
ljmp
popa
faddp
popa
mov
addr16
test
test
cmpb
push
sub
orl
sarl
mov
dec
add
jg
pop
push
daa
iret
sub
mov
jle
ret
je
xor
and
inc
cmp
adcb
xchg
divl
mov
shll
js
pop
std
mov
nop
inc
inc
add
push
lahf
or
xchg
outsl
loope
dec
sti
push
mov
test
mov
or
mov
add
andl
cld
cmp
dec
jb
je
sbb
sarl
sti
imul
mov
outsl
pop
sub
int3
adc
lret
jle
xlat
ja
aas
lret
ds
sub
push
xlat
sarb
jp
sarl
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
insb
dec
push
leave
movsb
js
jo
jle
jo
fisttpl
lret
fwait
and
data16
lock
add
out
das
les
outsb
push
fildll
sub
rol
je
in
xchg
mov
outsl
in
pop
and
dec
in
mov
dec
mov
inc
daa
stos
jnp
int3
shrl
adc
fisubrs
outsl
jecxz
out
jmp
push
sbb
push
out
mov
pop
aam
fistps
sbb
xlat
mov
add
mov
daa
xor
jno
lock
adc
imul
aam
mov
in
aad
push
cmp
out
mov
je
test
push
mov
mov
shlb
inc
jae
mov
dec
inc
scas
cmp
loope
cmc
xchg
mov
insb
add
lret
lret
mov
insb
jmp
sub
popf
aam
jb
add
addr16
mov
enter
ss
pop
jl
test
fidivs
imul
lcall
add
fbld
jmp
push
in
sbb
inc
jp
arpl
xor
inc
add
sarl
testb
mov
ret
fdiv
es
das
mov
ror
mov
lcall
dec
in
stc
push
scas
adc
jg
incb
pop
ret
les
xor
hlt
mov
adc
inc
inc
inc
mov
mov
pop
inc
or
jae
sbb
and
and
lock
jecxz
jl
mov
push
lret
fsubrs
pushf
and
mov
inc
daa
inc
jle
jb
jle
inc
add
lahf
adc
dec
pop
call
movsl
mov
cmc
dec
cltd
push
out
scas
push
scas
adc
or
enter
fsubrl
sti
sub
arpl
pop
sti
cmp
sbb
push
dec
mov
les
aaa
push
rcll
mov
inc
stc
sub
sub
nop
popf
add
mov
xor
inc
faddl
xchg
mov
jne
pop
test
mov
mov
xchg
jne
cld
adc
aam
mov
mov
sbb
or
mov
js
iret
les
cld
push
sub
jno
xchg
out
mov
push
push
lret
mov
mov
fldl
sbb
pushf
lods
scas
setb
mov
sar
cmp
gs
add
fcmovne
imul
inc
jns
div
iret
lods
fimull
call
cltd
cmp
in
push
xlat
orb
ja
mov
sbb
loopne
fmull
or
xor
mov
jmp
mov
jne
pop
push
fnstenv
add
jo
jbe
cmpsl
push
dec
out
insl
add
mov
fsubrs
loop
inc
inc
xchg
stc
ljmp
or
adc
ljmp
sub
mov
push
ljmp
cmp
mull
and
outsb
push
mov
ja
in
sti
rcrl
sub
add
sarl
lret
fistl
xor
fstpt
jp
cmp
out
xchg
and
dec
pushf
adc
sbb
sub
dec
adc
movsl
fdiv
or
insl
xor
or
jp
decb
mov
gs
ljmp
out
fs
adc
repnz
lahf
cmpsl
sahf
mov
lahf
and
rep
je
xchg
sbb
jg
pop
xor
pop
rorb
lods
jo
js
int3
shlb
jb
mov
cmp
lahf
popl
mov
jae
popf
loope
and
push
imul
jle
adc
loopne
add
fdivl
adc
in
mov
scas
mov
pop
divb
sub
addr16
out
push
ja
cmp
dec
mov
sti
adc
movsb
fadd
sarl
enter
sbb
call
sbb
enter
inc
rcll
mov
lods
adc
mov
mov
stc
mov
jmp
lea
push
ret
cltd
in
test
divb
dec
jne
jge
dec
push
cmp
insb
mov
daa
and
add
imul
idivl
scas
icebp
aaa
bound
iret
pusha
ljmp
mov
push
das
sub
test
out
adcb
pop
add
in
push
test
subb
in
mov
cmp
aad
hlt
mov
xor
lock
repnz
jbe
cmp
loopne
inc
or
dec
movsb
outsb
add
popa
lock
shll
rol
popa
push
stos
sbb
adc
sahf
adc
call
out
lret
movsb
sti
insb
pusha
adc
ret
ja
shlb
add
orb
inc
fldl
xchg
mov
adc
xchg
inc
test
aas
mov
sti
inc
jmp
inc
mov
daa
xchg
push
cmpsl
or
cwtl
mov
pop
sub
mov
xor
jb
into
sbb
sbb
sbb
in
mov
ds
jmp
sub
insl
cmp
mov
fs
lock
leave
aam
out
cmpsb
fmulp
sbb
les
out
bound
push
xchg
mov
incb
mov
xchg
mov
addl
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
lods
fisubrs
add
mov
lods
mov
fsts
dec
mov
push
jg
loopne
clc
mov
add
push
push
movl
lret
mov
lahf
xlat
dec
mov
es
cs
cs
sub
push
inc
cmpsl
jecxz
sub
out
pop
inc
cmovne
int3
and
lods
dec
jo
mov
dec
fidivl
cmpb
mov
jno
das
insb
jns
xchg
fldl2e
repz
adc
paddd
pusha
jb
xchg
in
pop
cltd
movsb
imul
mov
daa
shlb
jp
push
imul
insl
fisubrl
fists
int
mov
mov
mov
ja
ljmp
cltd
push
dec
push
aam
mov
jno
je
pusha
mov
xor
test
lock
call
sti
stos
pop
or
bound
leave
jmp
sar
sub
lret
int3
dec
ja
std
or
mov
stc
out
sbb
mov
add
xor
int
outsl
popf
xchg
mov
fwait
pop
cld
add
fidivl
sbbl
int3
mov
lock
xor
cld
push
mov
pop
lcall
jge
mov
pop
sti
in
test
mov
scas
adc
mov
out
push
jae
pop
sbb
or
faddl
arpl
jmp
leave
imul
sbb
inc
repz
cs
jg
push
lods
cli
je
add
imulb
lds
insb
dec
mov
mov
rorl
mov
adc
std
mov
loope
pop
mov
jg
fnstenv
mov
xor
adc
xchg
mov
out
mov
cwtl
mov
insl
mov
pop
add
mov
xchg
xchg
sub
inc
pop
cmp
xor
add
scas
push
push
lods
fs
outsb
and
xchg
jmp
out
push
adc
inc
je
clc
sbb
sub
outsl
nop
clc
sub
add
andl
jbe
ret
cmp
test
iret
mov
inc
orb
push
jnp
in
leave
adc
pusha
push
add
cld
sbb
scas
xor
mov
jecxz
xchg
sbb
sub
mov
call
fsubrl
xchg
in
frstor
lds
aad
outsb
push
in
out
out
pushl
adc
lahf
test
adc
cmp
emms
jae
jo
adc
ret
jno
cmp
negb
aas
movswl
int3
mov
mov
pop
push
in
daa
lods
jle
outsl
scas
inc
gs
xchg
clc
mov
sbb
cmp
js
loope
pushf
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
xchg
sbb
dec
adc
in
in
roll
push
int
ss
push
inc
sbb
mov
push
jl
xchg
fstps
in
pop
gs
and
mov
jno
and
dec
xorb
dec
cmp
dec
pushf
out
daa
and
inc
ljmp
push
repz
insl
imul
in
inc
insl
ret
fnstsw
subb
pushf
stos
js
xchg
push
hlt
push
push
adc
mov
sub
and
or
inc
inc
mov
movsl
xchg
cli
and
jge
fdivrs
mov
push
neg
test
les
mov
push
push
scas
jg
mov
roll
inc
fldenv
int
lret
xor
push
cmpsb
jl
pop
mov
in
les
cmp
adc
push
mov
xor
xor
mov
gs
cwtl
xor
lds
xchg
sub
stos
test
stc
pop
mov
lcall
mov
pop
or
les
sbb
jbe
insl
movsl
mov
xchg
push
jecxz
cmp
fimull
int3
andb
rcrb
push
pop
out
les
cs
mov
rep
inc
push
mov
push
pop
rorb
adc
adc
outsb
fwait
call
dec
loop
push
daa
mov
in
cli
and
jno
movsl
cmp
outsl
outsl
iret
xlat
orl
mov
jle
fdivr
hlt
sbb
mov
jle
dec
hlt
dec
andl
pop
xchg
rclb
mov
adc
pop
xor
movb
push
insl
rorb
dec
mov
xchg
lcall
notl
sbbl
pop
add
xor
cmp
mov
mov
push
jno
loop
jo
push
popf
subl
faddl
xor
gs
push
sbb
pushf
lods
mov
push
jne
adc
fistpl
mov
lcall
jbe
mov
cwtl
mov
movsb
mov
int3
mov
adc
int
lea
enter
std
add
sbb
std
imulb
out
insl
add
rcr
out
inc
xchg
cmpsb
cmp
sti
dec
xchg
std
push
inc
inc
xchg
mov
mov
and
and
ja
mov
jle
inc
movsl
cmp
push
stc
jl
or
lahf
mov
nop
pop
mov
ljmp
in
popa
call
push
pusha
stc
add
push
pop
inc
roll
je
int
pop
jl
xor
fucomi
jle
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
mov
or
jo
sub
popa
mov
push
imul
cmp
jmp
pop
and
sarl
ficoml
cmp
dec
rolw
rclb
push
xor
adc
pop
in
lret
pop
pop
fsubp
loop
mov
clc
fstps
stos
test
adc
adc
sub
jb
dec
mov
dec
rcll
popa
pop
xor
mov
cli
ret
into
inc
dec
pop
call
or
sbb
mov
cli
shll
xchg
lds
jne
pop
pop
sub
call
or
mov
lret
xchg
lret
xchg
pop
push
ljmp
inc
xchg
push
fistpll
push
xlat
mov
sbb
sbb
or
arpl
sub
subl
mov
shrb
cld
push
mov
mov
adc
das
and
mov
mov
fs
jle
inc
ds
outsb
movsl
rcl
mov
dec
test
dec
lcall
enter
fisttpl
xor
pop
sbb
enter
in
xchg
pop
and
bound
insl
push
loope
or
rcr
lods
lret
cmp
stos
jb
or
dec
in
into
mov
or
jnp
scas
jb
andb
addr16
xchg
xchg
mov
daa
ret
pop
call
and
jo
inc
stc
xchg
insb
pushl
adc
pop
add
ja
and
rorl
adc
int3
fchs
cmp
dec
mov
inc
mov
sbb
int
cmc
lret
dec
adc
lods
mov
popa
adc
adc
cmp
int
faddl
test
rcr
rorb
add
mov
out
or
ret
pop
sub
cmp
jle
out
arpl
jle
loop
in
push
addr16
out
add
pop
cli
mov
out
jns
adc
xchg
jecxz
push
dec
push
loopne
mov
cmp
xchg
cmp
cmp
mov
clc
mov
mov
sbb
adc
xor
xchg
movsl
and
inc
outsb
out
popa
or
popf
mov
jge
cmpsl
push
push
and
js
jecxz
cwtl
sub
cmp
test
dec
stos
mov
jge
xor
adcl
pop
inc
out
sub
adc
add
inc
loope
xor
mov
adc
test
mov
push
leave
inc
sub
lret
sub
push
add
jl
mov
mov
inc
and
daa
into
mov
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
push
fst
outsb
orl
jo
and
push
cli
push
push
pop
lret
lock
or
or
icebp
icebp
aam
pop
stc
lret
push
cltd
cmp
or
icebp
sysret
orb
xchg
xchg
push
cwtl
mov
push
int
arpl
in
daa
arpl
movsb
sub
inc
xor
rcll
pop
es
mov
gs
sbb
out
sub
mov
xor
scas
sbb
rcl
adc
cmp
sbb
push
nop
mov
cmpsb
cld
in
ja
sub
inc
rcrl
daa
pop
int
dec
pushf
adcb
jne
push
fisubrs
movsl
cmp
rcrl
add
movsb
add
subl
sbb
iret
jnp,pt
cmpsb
mov
call
es
add
xor
mov
xor
cmp
cmpsl
push
dec
inc
clc
mov
dec
push
pop
lods
divl
sub
mov
xor
and
add
les
nop
out
push
sbb
mov
adc
jge
loope
lock
cmp
rcr
dec
cmp
cmp
sbb
adc
push
pusha
or
inc
das
push
ror
int3
fimull
pop
aad
test
jp
mov
adc
mov
jne
xchg
or
dec
xor
int
clc
out
push
dec
and
test
cmp
lods
ljmp
adc
xor
fistpl
and
dec
jge
in
call
ret
xchg
fcoms
imul
jle
sbb
fistpl
pop
mov
push
cmp
sbb
lcall
mov
mov
outsb
push
push
mov
sbb
push
push
push
movsb
imul
stos
jp
fstpt
pop
ret
xor
jb
jg
pusha
rcrl
aam
dec
lret
std
jb
lds
pop
mov
xor
stos
out
jae
ljmp
mov
jae
cmpsl
add
push
and
jg
cmpsb
dec
ja
and
jns
lret
inc
xor
push
stc
pop
std
or
in
stc
or
aas
sarl
fidivrs
pop
xor
ljmp
mov
jno
dec
fidivrs
ss
andl
loope
loop
cmp
call
or
inc
push
call
stos
push
loope
dec
adc
sbb
inc
dec
mov
je
pop
ffree
push
pop
lods
pop
je,pn
xchg
stos
xorl
mov
add
popa
pop
inc
fcoml
dec
inc
inc
mov
dec
inc
bound
jge
movsl
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
mov
sahf
lret
jo
jle
jo
xor
mov
adc
ss
imul
pop
or
adc
icebp
cs
scas
mov
push
cmpsb
pop
jo
xchg
sub
movq
in
lea
or
sub
jae
mov
xchg
mov
fiaddl
pushw
xchg
and
lret
sbb
leave
movsl
xor
fisttpll
cmp
xchg
mov
stc
and
in
xor
scas
test
addl
fistpll
repnz
cmp
dec
and
inc
push
lods
mov
lock
and
rorl
pop
mov
ds
iret
ficompl
mov
test
jle
cltd
mov
in
data16
mov
out
mov
jno
add
fists
sub
jns
cmp
jg
cwtl
nop
add
rclb
xchg
js
push
shr
jbe
push
in
push
sub
mov
dec
ss
cmp
cmp
outsb
sub
cmp
mov
and
xlat
cwtl
in
add
xor
ds
dec
adc
cmp
jge
pop
jmp
sbb
js
push
jnp
jp
sbb
popa
sub
fdivrl
ljmp
repz
cmp
add
test
lods
or
jo
jb
cmp
cmp
mov
push
push
inc
ret
decl
pop
jns
fwait
ret
enter
into
dec
shlb
outsb
inc
and
cmp
add
mov
leave
sub
pop
cmp
push
sbb
mov
dec
pop
cmp
aad
imul
mov
notl
loope
repnz
pop
addr16
mov
mov
jle
mov
add
jl
ljmp
lret
and
fs
cmp
xor
sbb
cmp
loope
push
xorb
push
jl
adc
out
add
in
jnp
std
sub
fidivrs
mov
cmp
bnd
xchg
xchg
jnp
jne
test
popf
rorl
hlt
call
and
movsl
outsb
and
aam
scas
aad
adc
ret
xchg
push
daa
daa
jnp
xor
icebp
jbe
lret
popa
loop
push
sub
jo
cmpsl
jne
in
jmp
popf
ja
pushf
jb
insb
or
fisubrl
int
xchg
sub
outsb
sbb
jbe
push
pop
xchg
aam
mov
and
inc
mov
rorb
or
jbe
lcall
mov
and
test
mov
imul
outsb
jnp
subb
mov
jbe
mov
sub
push
enter
or
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
lea
adc
jo
jle
jo
mov
fwait
aad
lret
and
lods
mov
jne
xchg
imul
pushf
jle
mov
jnp
int3
nop
inc
sub
std
aas
mov
mov
cmp
jmp
xor
popf
dec
out
ret
les
xchg
push
push
ret
fcompl
push
sbb
sub
lock
jmp
xchg
xchg
into
fnsave
jo
mov
mov
jno
jge
pop
fiadds
xor
mov
add
mov
jns
inc
lret
ret
fldenv
and
push
cwtl
pop
xor
test
mov
cld
inc
repz
push
into
ret
and
mov
sub
pop
inc
xor
imull
mov
daa
push
in
mov
xor
pop
sub
adc
movsl
sbb
pop
sbbb
xchg
lock
and
sbb
dec
xchg
push
jae
and
push
cmp
popf
roll
hlt
or
push
push
in
or
movsb
mov
adc
sub
jp
loopne
lds
mov
jnp
imul
sub
sub
sti
mov
aaa
cltd
lea
inc
push
shll
aad
das
dec
repz
or
push
ret
fcmovbe
xchg
inc
mov
ljmp
mov
inc
push
scas
mov
pop
jle
jle
adcb
int3
clc
int3
sub
cmc
mov
mov
dec
xchg
jg
fnstcw
cmc
xchg
outsl
xor
dec
or
and
adc
xor
mov
mov
mov
jg
aam
in
ja
mov
pop
subb
xchg
cwtl
std
in
loope
dec
sbb
add
mov
xchg
xor
jo
add
jg
out
ja
mov
inc
sub
inc
jecxz
jl
push
imul
inc
iret
push
xor
jno
push
std
das
adc
pop
dec
add
fldenv
xor
dec
xor
repnz
sti
lcall
scas
shl
push
push
mov
test
ljmp
aaa
cmp
prefetch
or
mov
in
inc
adc
jbe
mov
dec
dec
adc
mov
pop
add
leave
test
mov
pusha
enter
dec
push
pushf
rclb
xchg
inc
into
mov
std
cwtl
frstor
add
pop
sbb
in
cmpsl
repz
pop
sub
and
push
imul
sbb
xlat
or
sub
mov
jb
dec
scas
test
mov
adc
fucompp
push
or
adc
pop
or
mov
mov
outsb
mov
inc
push
push
mov
arpl
dec
cmc
jbe
stc
push
jmp
insl
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
enter
adc
mov
push
pop
push
dec
sahf
vunpcklpd
mov
mov
mov
dec
scas
pop
in
int3
cmp
xchg
je
mov
out
push
aas
sbb
les
xor
jbe,pn
xlat
fsubl
cmp
jecxz
lret
nop
iret
jnp
push
test
iret
cwtl
xor
sbb
add
xor
mov
push
cmc
shl
dec
hlt
pushf
and
dec
cmc
loopne
insl
sub
push
bound
mov
aas
lock
sbb
test
mov
test
pop
in
add
mov
enter
or
or
sbb
dec
data16
jmp
jno
fildl
gs
add
mov
sahf
std
aam
add
dec
std
les
sub
sbb
adc
jae
and
fs
cwtl
mov
cmp
nop
fisubrs
shll
xor
popf
xchg
lahf
xchg
and
in
mov
xchg
stos
leave
rolb
fisubl
iret
js
mov
lret
dec
cmp
mov
cmpb
icebp
adcl
mov
dec
scas
sbb
cs
pop
jge
mov
iret
in
xchg
adc
mov
loope
sub
mov
int
mov
movsl
jb
pop
push
or
addr16
jp
adc
dec
dec
pop
test
inc
outsl
stc
inc
call
lods
cmp
cs
cmp
in
mov
mov
dec
mov
sarl
push
das
cltd
std
lock
or
push
loop
outsb
cmp
imul
add
adc
mov
pushf
jle
int3
gs
sub
test
mov
cmp
pop
and
fs
mov
lods
repz
fs
xchg
lret
gs
pop
mov
xchg
ret
jb
arpl
repnz
ljmp
ds
adc
das
cs
mov
mov
add
jg
jge
inc
sbbl
or
pop
push
in
fcoml
and
push
pop
mov
ror
aam
and
mov
lret
out
adc
adc
out
inc
push
pop
sbb
sbb
sub
dec
jmp
scas
pop
mov
push
xlat
loopne
sub
push
push
mov
xchg
test
in
inc
aad
xlat
adc
loop
and
and
lret
xlat
add
std
repz
loop
mov
mov
inc
push
sub
inc
push
mov
fs
test
or
das
enter
scas
in
sbb
pmullw
inc
pop
idivl
lret
jmp
cmc
std
fs
jno
mov
test
jg
mov
jnp
ss
aam
jns
sbb
xchg
mov
aad
push
clc
scas
std
or
lret
test
push
test
movsl
imul
cmp
cli
sub
call
cli
jle
mov
jle
ret
or
mov
xor
lea
js
and
outsl
mov
sbb
lcall
push
ja
cmp
movsl
mov
xorb
addl
jbe
jnp
sbb
imul
sub
loope
mov
push
mov
lds
pop
or
rorb
inc
mov
out
mov
fs
mov
cmpsb
push
add
lods
dec
jl
xchg
call
xchg
mov
cmp
icebp
inc
dec
adc
jae
xchg
mov
xor
mov
or
mov
sti
sahf
es
sub
push
sbb
popa
out
mov
adc
mov
jp
xchg
test
cmp
push
xor
and
cmp
jmp
and
or
aam
or
addr16
out
sbb
dec
repnz
es
scas
fstpl
jmp
dec
ljmp
js
loopne
pop
xchg
add
call
js
adc
jnp
or
addb
add
add
push
mov
and
dec
adc
negb
insb
or
repnz
mov
ret
cmp
and
dec
xor
inc
test
inc
jge
gs
push
out
daa
lahf
adc
push
lock
push
mov
jle
sbb
mov
inc
call
xchg
shll
lods
adc
adc
lret
xor
pop
rol
add
jb
pop
jnp
sbb
sbb
push
mov
scas
fisttps
cwtd
testb
mov
and
clc
adc
xchg
ljmp
repz
mov
cltd
jg
insb
add
inc
fists
aas
jbe
cmp
or
lods
cltd
dec
cmpsb
xor
test
adc
cmpsl
adc
shll
mov
dec
js
repz
push
cs
nop
lods
hlt
mov
mov
ret
lret
mov
movsl
arpl
lea
sarb
bound
mov
iret
push
cmp
subl
idiv
push
mov
push
inc
cld
stc
adc
jg
fucom
mov
out
sub
and
andb
cli
in
roll
cli
sub
jb
jl
xchg
je
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
jl
repnz
sbb
jo
jle
jo
in
sbb
xchg
or
xor
or
mov
or
jg
add
cmp
mov
outsl
xchg
call
mov
out
and
mov
cli
jo
scas
sbb
sub
les
xor
nop
test
in
dec
and
rcrl
push
lods
xchg
lcall
adc
dec
ror
cmp
push
adc
jne
or
pop
test
emms
push
mov
out
addl
js
dec
sbb
add
fisttpl
xchg
sbb
cmpsl
push
and
xor
rorb
icebp
mov
xor
pop
push
and
cmp
int3
add
js
cmp
icebp
les
add
iret
aas
leave
stos
push
pop
outsl
jecxz
push
aas
jle
dec
outsb
movsl
orb
push
ljmp
add
cmc
mov
shrb
mov
mov
mov
call
lret
stc
pop
ja
jnp
fdivl
add
aam
or
and
sub
jne
out
jge
sub
xchg
fwait
addr16
ficoml
xchg
test
dec
clc
cs
adc
jmp
xor
mov
fdivrp
mov
push
xor
jecxz
jne
dec
insl
xor
mov
jbe
jb
arpl
shl
jmp
ja
cmp
out
insl
pusha
arpl
jecxz
data16
xchg
das
imul
push
pop
pop
jbe
and
sbb
ret
mov
pusha
test
inc
fwait
dec
sbb
xchg
xchg
inc
ds
or
dec
sub
ljmp
mov
mov
repz
add
push
loop
xor
mov
fidivrs
mov
xlat
dec
std
mov
pop
dec
cmpsl
shll
mov
or
clc
mov
icebp
dec
push
dec
pusha
repnz
mov
lds
mov
fsubs
jmp
push
push
je
cld
pop
mul
cli
add
aaa
xchg
adc
jecxz
addb
lcall
mov
in
in
stos
cld
mov
sub
aas
xchg
adc
scas
sub
sbb
ds
xor
es
negl
popa
jno
cmp
or
mov
xchg
int3
adc
adc
mov
setl
xchg
les
mov
inc
aad
xchg
cmpsb
dec
arpl
mov
push
sti
mov
sahf
sbb
out
mov
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
mull
stos
aad
sbb
mov
jne
dec
inc
aam
int
dec
outsl
lock
out
jns
add
xchg
sub
hlt
mov
dec
add
mov
imul
xchg
pop
pushf
fwait
cmp
hlt
pusha
adc
leave
in
popfw
lods
jmp
iret
pop
cmp
jo
jo
aam
jl
dec
xchg
mov
xor
icebp
sub
add
xor
shrb
pop
add
mov
jge
std
dec
mov
jle
loopne
sbb
call
sbb
in
pusha
xchg
dec
jle
decl
jl
dec
pop
outsb
loop
add
fsubs
xchg
sbb
imul
mov
pop
jno
jnp
xchg
pop
sub
clc
hlt
pushf
push
rorl
mov
mov
test
jnp
mov
je
test
xchg
in
push
sbb
in
outsb
out
ja
fisubrs
sbb
std
scas
nop
lcall
xchg
jbe
out
push
adc
mov
sbb
xchg
cltd
or
into
dec
adc
or
cmp
xor
sbb
test
fsub
inc
loopne
push
add
jbe
repnz
sahf
js
ret
loope
or
inc
fnstenv
data16
push
in
mov
xor
mov
jae
mov
cmp
outsb
movl
call
adc
inc
mov
mov
push
fimuls
mov
sub
add
mov
jb
es
cld
test
lret
sbb
sbb
mov
cmp
dec
adc
int3
jne
mov
inc
inc
fdivr
repz
add
loope
jmp
in
sub
insl
mov
push
arpl
jle
test
movsl
or
inc
ljmp
mov
cltd
and
cmp
aaa
movsb
in
dec
push
or
lods
mov
push
sahf
sub
aas
out
mov
jecxz
clc
pop
andb
popf
push
addl
mov
andl
add
xorl
call
push
cli
dec
mov
outsl
scas
ret
mov
or
pop
and
pop
xadd
mov
push
iret
gs
movsl
cmp
inc
adc
in
mov
nop
popf
xchg
push
lahf
in
push
xor
inc
pop
push
pop
adc
je
lods
mov
and
pushf
sub
gs
lret
adc
in
and
add
pop
add
xchg
push
ljmp
jmp
fsubp
stos
mov
insb
leave
pop
sub
cwtl
sahf
inc
dec
jo
jg
mov
xlat
jo
cmp
cli
sub
push
and
jg
and
jge
mov
in
xchg
push
es
pop
cmc
cmpsl
int
adc
fnstsw
pop
lea
mulb
aaa
sub
cmp
andl
insb
repz
inc
inc
pop
mov
insl
cmc
inc
push
shrl
adc
xchg
pop
loop
test
or
cmp
dec
lods
lret
mov
in
dec
pop
mull
cmp
in
negb
and
dec
and
popf
mov
lcall
addr16
inc
jnp
lods
jne
inc
aaa
jns
enter
das
sub
out
in
loope
sti
or
add
xor
mov
out
lret
mov
ds
sub
popa
inc
adc
cltd
mov
idivl
out
sbb
inc
loop
mov
mov
xchg
ret
hlt
push
xor
jbe
lret
fs
mov
push
imul
adc
add
stos
and
aam
fnstenv
pop
jo
rclb
push
fstl
cltd
cmp
cs
mov
pop
mov
out
mov
jo
jno
inc
jecxz
or
pusha
xor
jb
jo
outsb
movsb
stos
lahf
adc
push
pop
jnp
andb
ret
xorl
or
popa
lds
rcrl
fimull
xor
inc
and
and
std
sub
mov
cmp
push
in
push
outsl
xlat
xchg
jnp
in
jnp
push
lret
add
dec
add
dec
xor
leave
fildl
call
aas
push
mov
fs
pop
jne
mov
mov
mov
test
shlb
out
int
lcall
lock
cmpsl
in
jo
xor
jmp
pusha
add
lods
mov
arpl
arpl
and
jnp
sbb
popa
imul
test
imul
dec
mov
es
insl
mov
out
add
ds
in
cli
mov
cmpsb
adc
gs
call
mov
inc
mov
push
dec
mov
sbb
xor
popa
mov
or
or
aaa
cwtl
adc
push
or
ss
lret
rorl
push
adcl
pop
aas
aas
xor
std
adc
push
pop
test
push
jb
lahf
lret
movsl
and
and
clc
cmp
push
pop
push
sub
mov
lret
cltd
fnstsw
mov
mov
dec
xor
xor
data16
adc
add
shlb
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
test
mov
jle
jo
adc
mov
mov
imul
sbb
daa
xor
or
ficompl
out
mul
fimull
inc
sub
div
js
pusha
test
das
dec
mov
in
pop
mov
movsb
add
leave
mov
test
mov
sbb
sahf
decb
add
daa
push
leave
xor
jns
sub
mov
fsub
push
popa
ds
push
sbbl
cmpsl
mov
sbb
fld
mov
mov
out
jge
ret
lods
orl
jae
pop
pop
sbb
sbbl
imul
sbb
cmc
dec
xchg
pop
les
adc
lret
jnp
pop
mov
out
ret
xchg
inc
sub
jb
loop
out
loopne
ret
push
dec
sahf
push
enter
clc
adc
int3
jge
cwtl
insb
out
test
jecxz
jno
outsl
call
scas
in
adc
mov
das
int3
xor
mov
jnp
sbb
and
mov
cs
stc
inc
rorb
loopne
adc
sub
lret
sbb
add
push
rol
lods
mov
pop
adc
xor
add
dec
out
mov
jmp
addr16
mov
lcall
loopne
or
adc
cld
dec
out
arpl
cmp
popa
jle
xchg
push
mov
jno
pop
scas
mov
mov
icebp
fucomip
inc
arpl
sbb
fsubrl
js
push
mov
mov
pop
and
hlt
fidivrs
jae
sbb
or
push
xor
lods
mov
sbb
adc
sub
mov
movsl
shll
push
pop
imull
lret
dec
dec
xlat
je
add
inc
push
mov
pop
rcl
mov
jnp
test
or
mov
fldl
mov
sub
mov
jle
loopne
inc
sbb
lret
popa
pusha
int3
outsl
loopne
nop
cwtl
add
sub
xor
push
fcompl
scas
and
test
bswap
jmp
mov
cltd
pop
mov
mov
rorl
mov
cs
xchg
xorb
sbb
pop
ss
mov
data16
push
add
sti
pop
out
rcrl
mov
test
mov
mov
pop
and
xchg
test
and
mov
lock
push
divl
out
push
enter
inc
fistps
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
