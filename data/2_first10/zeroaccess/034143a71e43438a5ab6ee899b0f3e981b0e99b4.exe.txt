push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
sub
adc
adc
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
sub
xlat
pop
inc
insl
dec
sub
jb
mov
jg,pn
fadds
stc
xor
xor
fldcw
mov
insb
mov
inc
imul
mov
push
sbb
pop
sysret
jmp
orl
add
inc
push
xchg
repz
mov
inc
rcl
addr16
cwtl
lods
rcl
add
stc
sub
lea
cmp
xchg
jmp
and
movsb
ljmp
add
sti
jle
push
sbb
and
int3
push
push
inc
jg
decl
in
out
iret
mov
lret
mov
shr
xor
pop
sub
cld
mov
repnz
sbb
mov
mov
adc
xor
add
mov
dec
push
das
out
and
cmp
repz
push
jle
xchg
push
pop
das
pop
mov
out
sahf
outsb
es
and
jmp
in
decl
in
lcall
sbb
jle
jge
in
ret
mov
cmp
enter
arpl
jns
aaa
in
sbb
xchg
loopne
jmp
push
jo
test
jg
into
and
xchg
aad
jge
push
jmp
cmp
mov
xchg
int
inc
clc
xchg
dec
cmp
aas
rcl
or
jnp
out
sti
movsl
addr16
mov
outsl
mov
sbb
popf
movsl
cli
subb
sbb
adc
mov
push
jbe
jle
sbb
sti
xchg
dec
jb
mov
push
jmp
sbb
out
int3
mov
mov
out
mov
or
das
sub
dec
fidivl
inc
sub
sub
jbe
adc
leave
fwait
cmp
stc
xchg
pop
mov
push
pop
pop
push
mov
pop
in
mov
icebp
nop
add
mov
or
dec
mov
sbb
addr16
in
daa
dec
sub
and
rcrl
adc
stos
or
jge
into
mov
or
inc
and
jae
push
and
dec
cmp
mov
and
aaa
push
aaa
xlat
cld
adcb
scas
push
or
xor
fsubrl
cmp
loopne
mov
xchg
inc
inc
daa
aad
sub
movsl
call
xchg
pop
fsts
xchg
iret
sbb
jle
inc
mov
bnd
adc
jae
xchg
sub
cmc
stos
loop
scas
inc
xlat
jle
je
sbb
inc
xor
xor
dec
and
in
mov
repnz
push
xchg
ret
jb
scas
mov
jae
mov
sub
xor
jge
out
xor
out
cltd
or
mov
pop
ja
mov
mov
xor
out
pop
out
sub
dec
push
push
xchg
mov
sahf
sub
adc
jmp
repnz
cld
repnz
sahf
mov
dec
xor
jns
mov
lods
mov
mov
ljmp
pushf
and
lock
or
test
notl
cs
jmp
sub
test
outsb
add
xchg
jl
cld
outsw
fdivl
push
jecxz
ret
dec
mov
imul
push
sti
xchg
rolb
jo
cmpsl
jge
add
jl
push
dec
aas
sub
pushf
or
rclb
and
sbb
or
push
out
xorl
cltd
and
out
dec
imull
sbb
pop
push
jno
jl
out
jle
inc
lret
shlb
std
pushf
mov
pop
sbb
in
jp
mov
movl
xor
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
vcvtdq2ps
daa
cli
adc
daa
cli
adc
fpatan
lock
cwtl
insl
scas
jmp
in
stos
add
pop
adc
subl
jge
test
or
xchg
mov
std
in
sub
sbb
sbb
cmp
pusha
add
mov
ja
dec
adc
pop
ret
adc
xchg
jo
notb
or
and
fbld
and
jns
sbb
mov
sbb
mov
out
dec
mov
loop
adc
inc
in
fldenv
push
push
adc
or
cltd
push
add
popf
aaa
dec
es
test
stos
and
xchg
cwtl
shrl
or
xchg
cltd
inc
aaa
inc
adc
ret
pop
insl
mov
jp
es
xor
mov
stos
out
adc
fistps
or
lahf
leave
mov
insl
pop
mov
imul
push
test
adc
outsb
push
jnp
pop
jo
sbb
sub
cs
hlt
fistl
shll
jg
lret
in
aaa
xorb
and
inc
cmp
icebp
push
cmp
jle
repnz
xor
test
push
xchg
cmp
xchg
loop
sub
outsl
cld
shll
push
arpl
inc
cmp
xchg
out
in
add
push
sbb
out
lds
fwait
mov
push
in
mov
out
push
fcmovne
outsb
push
fmull
inc
jl
divb
loope
xchg
inc
mov
xchg
push
xor
mov
bound
push
xor
clc
push
test
dec
push
bound
inc
adc
xchg
jle
mov
movsl
pusha
je
sub
xor
cmp
push
xor
ljmp
sahf
cmp
fldt
rcl
movsl
mov
adc
push
pop
fwait
sbb
xchg
int3
sarb
andb
cs
outsb
push
sti
sbb
inc
xor
imul
lret
into
inc
mov
scas
mov
neg
aas
cmp
lahf
or
xor
pop
jbe
pop
imul
negl
int
inc
daa
xchg
jle
add
mov
pushf
add
xchg
pusha
sbb
dec
inc
ja
xor
cld
cld
dec
bound
scas
in
call
push
stos
push
mov
adc
mov
fwait
xor
adc
push
push
addr16
enter
sub
and
fwait
fs
sub
push
push
push
sbb
adc
and
aad
std
leave
es
leave
and
call
mov
testl
inc
sub
and
daa
mov
mov
dec
sbb
xor
fiadds
test
mov
push
dec
xor
inc
fwait
mov
xor
dec
mov
jle
add
scas
cmpsl
mov
push
mov
loopne
rclb
fldl
stos
or
adc
cmpsl
popa
and
sub
bound
add
inc
jnp
mov
sub
daa
mov
sbbl
push
push
xor
mov
stc
sub
scas
add
aaa
sti
cwtl
je
popf
pop
dec
fildll
push
push
mov
repz
dec
nop
lds
movb
inc
cmc
sub
imul
lret
pop
loope
xchg
std
pop
push
xchg
mov
mov
daa
cpuid
jle
xchg
mov
out
jge
pop
jae
test
mov
sub
std
and
and
xchg
or
inc
je
sarb
out
out
pop
lods
scas
popl
mov
fdivrs
cmp
pushf
movsl
or
add
fucomi
fcompl
sub
std
das
outsl
mov
insb
es
lds
jg
gs
push
call
push
sub
rcrb
subl
in
dec
or
xchg
cmp
iret
ds
jae
scas
idiv
push
je
ret
scas
pop
inc
inc
adc
mov
leave
lret
lock
loopne
jae
fsubrl
stc
jo
and
movsb
xor
mov
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
stos
aaa
dec
pop
add
adc
cli
adc
push
sub
push
or
call
push
or
test
pop
jbe
outsb
hlt
mov
mov
push
loop
aas
es
xchg
stc
out
xor
pop
fcmove
cmp
in
xorb
sub
xcrypt-ecb
cmpsl
lret
ds
cmp
jle
mov
dec
fsubrl
addl
daa
jle
inc
cltd
insl
fsubp
fidivrs
inc
popf
inc
pop
mov
scas
ret
xchg
adc
rolb
lods
inc
movsl
jmp
test
andb
mov
aam
jmp
notb
iret
jle
xor
jmp
xchg
aas
movsb
fwait
or
pop
push
pop
cmc
mov
outsl
ret
sbb
ror
cs
push
push
clc
xchg
sbb
dec
add
lret
adc
gs
push
ds
sahf
jo
in
fcoms
dec
insb
dec
jp
rorb
cmp
inc
shll
or
xor
pop
enter
rep
ret
data16
inc
ss
lds
mov
adc
xor
xchg
ljmp
xor
sub
leave
je
sti
jae
and
xlat
dec
mov
fidivl
jns
or
in
cmpsl
xor
add
add
enter
fucom
or
rclb
adc
mov
add
inc
rol
inc
mov
mov
sub
mov
ret
fcmovnbe
xor
lret
jge
sub
out
xchg
pop
aad
les
cmp
dec
dec
aas
xor
add
fdivs
mov
mov
mov
adc
je
jb
xchg
daa
ror
cld
jbe
out
lahf
sub
popa
mov
cs
jle
mov
lret
and
jp
push
dec
loope
inc
push
xor
cmpl
fwait
mov
int3
xlat
lahf
dec
imul
aas
dec
or
inc
out
push
test
mov
pop
subps
xchg
mov
aas
lahf
cli
shll
add
orb
mov
int
or
inc
push
fidivrs
mov
xor
xchg
bound
sbb
add
lea
jno
add
popl
mov
adc
in
jne
dec
dec
in
mov
outsl
repz
shrb
xchg
mov
mov
iret
adc
out
divb
push
pop
jl
add
cmp
fnsave
insb
add
sub
fs
outsb
mov
mov
xor
pop
push
and
sub
xlat
or
test
pop
push
aaa
mov
loope
push
ljmp
sub
sbb
adc
sbb
insl
and
sarb
mov
mov
cmp
mov
std
ret
sbb
mov
loop
gs
jp
dec
add
and
fbstp
jne
ror
lds
xchg
and
pushf
jns
mov
xorb
xchg
andb
sub
lcall
pop
test
inc
pushf
lods
and
and
mov
es
sub
mov
xor
sahf
inc
sub
test
int
xor
cmc
subb
inc
out
cmp
loopne
stc
stc
cmp
or
cmp
add
mov
mov
imul
sub
mov
xchg
lahf
test
das
and
in
and
xor
frndint
add
push
clc
mov
lret
sbb
push
insl
shl
cmc
lret
cli
int3
push
xor
movsb
leave
mov
mov
and
fsubrl
jo
sbb
ja
addb
push
clc
or
mov
add
push
dec
mov
loopne
andb
dec
daa
jno
cmpsb
rclb
jae
scas
mov
scas
loope
out
lret
sbb
mov
out
dec
inc
mov
insb
jp
dec
adc
lods
je
in
test
pushf
lret
dec
xchg
adc
gs
push
fistl
sub
stc
stc
outsb
pushf
addb
adc
ja
cli
jno
dec
in
inc
imul
jmp
int3
test
and
mull
lock
daa
cli
adc
adc
lahf
mov
out
jmp
sbb
pop
sti
sbb
leave
ljmp
lret
outsb
out
mov
xor
sub
std
jb
push
negb
xor
and
push
and
lds
test
loope
cmp
pop
push
inc
dec
mov
inc
arpl
pop
dec
xor
outsl
push
lret
inc
mov
sti
xor
xchg
insl
and
xor
out
cld
bound
jno
jle
in
js
pop
lods
sbb
js
mov
mov
mov
sti
cld
rcll
jl
popf
and
scas
inc
adc
cmpsb
call
and
enter
push
inc
loopne,pt
cld
enter
sti
fildll
fsubrl
mov
outsb
shld
pop
and
insl
inc
mov
pop
cli
xor
and
cli
clc
mov
cwtl
xchg
cmp
popa
sti
mov
sti
inc
adc
push
push
stos
add
dec
sbb
scas
jle
fisubrl
ret
hlt
sub
add
stc
fwait
and
mov
mov
pop
jmp
lahf
out
cmp
ret
jp
les
push
lods
dec
loope
daa
mov
and
outsl
arpl
push
push
jmp
jle
jl
dec
mov
test
shrb
ret
divb
cmp
dec
icebp
addb
add
cmpsb
fcomi
pop
jns
dec
clc
movsl
pop
int3
sub
inc
ror
sub
pop
sbb
cmp
dec
int3
add
or
inc
mov
xchg
mov
xchg
mov
inc
and
mov
mov
cmp
mov
inc
mov
bound
mov
cmp
cmp
loopne
shlb
scas
sub
xor
pop
xchg
pop
pop
mov
sub
rcll
adc
in
jb
push
or
iret
mov
mov
xlat
dec
cli
ret
test
fcompl
mov
pop
inc
sbb
jecxz
mov
nop
jp
test
add
and
xchg
pop
xchg
inc
push
mov
hlt
xchg
jecxz
push
lret
mov
inc
ja
xchg
jo
push
lds
fs
cmp
inc
es
int3
push
loop
dec
iret
iret
idivl
cld
cmp
mov
incl
jno
and
or
jne
xchg
xchg
or
fadds
mov
mov
call
pop
fldt
leave
int3
js
mov
fstps
js
dec
push
mov
addr16
and
test
jge
repnz
xor
ljmpw
sti
push
lahf
or
lret
or
inc
xchg
jecxz
pop
movsb
sbb
scas
sub
push
mov
int
and
dec
fdivs
inc
out
jb
mov
scas
cmp
add
andl
xchg
mov
push
fldcw
cltd
nop
pop
les
dec
fidivs
cmp
cld
cmp
mov
cwtl
add
fdiv
ror
jo
mov
add
aaa
push
mov
pop
lds
data16
repnz
jl
mov
xor
mov
test
adcl
xchg
adc
imul
iret
xor
pop
cmc
sti
cmc
sbb
xchg
sub
jb
daa
adc
sub
in
in
insb
xchg
sahf
add
js
and
mov
mov
lods
sbb
fisubl
lcall
mov
stc
dec
inc
mov
xchg
ficomps
in
cld
sub
push
adc
lahf
fisubl
stc
mov
fwait
sahf
push
xchg
out
scas
mov
mov
jae
scas
jbe
sub
xchg
jle
mov
jp
shrb
into
into
addr16
cmp
in
sub
cmp
push
leave
jne
das
nop
data16
ja
leave
ret
scas
jmp
xlat
jb
popl
push
imul
mov
rcr
fistl
lock
xlat
pop
xor
xlat
shll
jmp
addr16
or
test
cli
mov
stc
and
sbb
in
out
jge
addl
push
orl
call
cmpl
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
push
xchg
ret
adc
cli
adc
shll
xorl
movsl
adc
jmp
jmp
mov
adc
mov
test
sbb
and
cmp
or
and
enter
enter
push
mov
add
dec
cmpsl
add
decl
popf
notb
cmp
dec
pop
or
adc
les
outsl
pusha
imull
sbb
mov
xchg
jl
rcrl
add
jb
dec
aam
mov
dec
jae
lods
test
stos
leave
sahf
shr
js
cmpsl
pop
out
push
scas
stc
ja
and
or
sub
jno
rclb
mov
jle
jnp
stos
icebp
sti
popa
mov
and
sub
push
cmp
mov
or
stc
mov
pop
xor
adc
subb
imul
xchg
jbe
dec
pusha
imul
dec
stos
leave
jge
jle
jnp
mov
icebp
mov
cmpb
repz
lea
aas
lret
ret
dec
pop
lods
sub
fs
dec
aad
xlat
mov
dec
adc
cwtl
sarb
or
adc
pop
push
cmpsl
mov
sbb
hlt
lock
sbb
test
jns
out
lods
popf
jle
pop
hlt
sbbb
out
sti
cltd
and
sub
jp
mov
jmp
test
mov
jg
pop
fnsave
pop
pop
aas
dec
and
push
and
and
add
leave
mov
inc
xchg
adc
xor
out
scas
xor
scas
xchg
xchg
sarl
mov
daa
je
ret
adc
push
jbe
das
mov
sub
adc
gs
inc
iret
out
xlat
push
imul
dec
cltd
xchg
iret
in
jb
add
addb
out
mov
imul
xchg
mov
fbstp
insb
ret
jle
imul
fdivs
inc
push
lock
pushf
mov
sbb
test
into
and
cmc
out
push
jbe
test
sbb
mov
sbb
aad
aaa
psrlw
out
test
out
pop
sarb
mov
push
or
mov
dec
loopne
xor
jge
push
out
add
mov
test
stc
out
daa
mov
xor
lahf
je
scas
punpckhbw
test
pop
sbb
insl
jo
outsb
xchg
xchg
andb
arpl
popa
in
pusha
iret
bswap
loope
lods
cltd
xlat
adc
ljmp
jb
das
arpl
arpl
and
fstpt
mov
std
mov
push
imul
mov
and
jle
popl
jae
data16
jp
test
int3
pop
xor
lea
xor
js
imul
push
adc
les
mov
in
out
pushf
xchg
dec
into
sbb
sbb
or
cli
add
lock
fildll
aaa
data16
lock
push
adc
jb
shrb
pminsw
stos
ret
pushf
into
movsl
xor
ret
push
jb
mov
rorb
sti
push
std
cmc
push
sbb
inc
sub
mov
insl
sub
lret
sbb
les
adc
jae
call
mov
out
test
std
cmp
mov
cs
ja
add
lret
xchg
arpl
xchg
dec
sbbb
insl
rcr
lods
sbb
fdivl
out
mov
enter
fisubl
ljmp
in
mov
jnp
dec
mov
xchg
sub
cmovne
push
stos
nop
fisttpl
mov
stos
mov
pop
imul
mov
add
pusha
sub
sahf
sbb
or
stc
loope
sub
inc
inc
stos
repnz
repz
lcall
add
es
js
mov
lods
int3
fistps
incb
mov
cli
movsb
fwait
mov
add
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
into
in
xlat
fists
adc
cli
adc
xorl
adc
lret
sbb
hlt
inc
cmp
lock
or
pop
sub
mov
adc
inc
pop
stos
movsb
sbb
and
push
movsl
sbb
or
dec
vmovups
mov
push
cmpb
jno
fistps
loope
and
leave
out
lcall
jl
and
push
icebp
es
mov
push
cwtl
mov
jns
fdivr
fldcw
sbb
jl
cmc
aam
pop
inc
mov
jo
lds
mov
jo
inc
psubusw
cld
test
loopne
in
cs
dec
rcrb
test
loopne
fsubrl
into
rorl
repz
test
or
pop
lea
cltd
pop
fisttpl
mov
ret
stc
jae
and
fimull
pop
sbb
cs
in
push
add
and
sub
sarb
xor
into
gs
aad
leave
sbb
cmp
mov
arpl
sub
xor
jne
xor
dec
dec
jns
stos
repz
je
sub
ficoml
scas
pop
mov
lock
adc
iret
mov
cltd
xchg
adc
and
jb
push
push
push
dec
fmuls
aaa
sahf
mov
mov
and
loope
es
add
push
mov
faddl
mov
lret
pop
push
fwait
dec
or
xor
xchg
xlat
aam
in
fxch
mov
dec
es
jbe
mov
mov
setp
in
scas
xor
fdiv
out
sub
pushf
scas
ror
data16
scas
outsl
or
mov
sub
or
xor
cmpsl
or
sbbl
inc
mov
push
jl
pop
movsb
adc
mov
rorl
and
xor
inc
and
pop
clc
ja
mov
lahf
mov
gs
das
or
out
xchg
pop
push
mov
pushf
inc
xorl
xor
mov
mov
stos
inc
pop
out
sti
xor
loopne
dec
dec
jbe
pop
mov
cmp
stc
cli
pop
add
xor
or
test
js
jae
addr16
xchg
add
outsl
sub
aad
dec
push
xor
push
out
inc
dec
daa
jns
lret
aaa
sub
jecxz
sahf
sbb
rol
push
bound
mov
loopne
enter
cmpsb
add
inc
mov
or
pop
test
push
inc
mov
daa
mov
mov
xor
fs
adc
mov
lods
mov
addb
popf
sub
add
inc
daa
xchg
pop
outsl
push
pop
das
test
das
pop
pop
and
inc
test
inc
cmp
ficomps
les
leave
mov
sbb
mov
leave
in
call
xchg
cmp
int3
das
mov
fnsave
cmp
imul
mov
and
decl
nop
pop
ret
dec
stos
mov
scas
mov
mov
add
cld
pop
add
add
xor
out
xor
xchg
cmp
jae
mov
jmp
inc
lret
sub
push
adc
push
inc
fidivl
adc
in
cli
test
pusha
mov
data16
les
sbb
push
adc
sub
add
in
push
push
movsb
in
and
push
rorl
add
lcall
jp
pop
inc
andb
and
ss
sahf
xor
sub
add
adc
dec
adc
mov
mov
in
test
outsb
cld
jecxz
and
je
mov
add
aam
and
add
mov
fstps
push
test
mov
idivl
push
int
scas
leave
jg
mov
inc
mov
sub
iret
or
loope
leave
call
add
outsb
scas
test
adc
or
or
pop
out
push
add
xor
popf
mov
xchg
ret
cld
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
cmp
iret
mov
daa
cli
adc
fidivl
pop
jmp
imul
ret
sub
jne
imul
ja
or
sti
inc
add
xlat
fwait
adc
test
sub
sysenter
ljmp
ret
xchg
cmpsb
jo
dec
mov
leave
outsl
xor
jmp
xlat
dec
movb
jge
adc
xchg
mov
mov
aam
xchg
fldenv
sbb
and
xchg
repnz
pusha
xchg
in
pop
pop
mov
cmp
pop
or
dec
xchg
add
jecxz
divl
xchg
int
clc
test
ss
jnp
inc
cmpsb
mov
lds
rorl
sub
gs
imul
sbb
scas
lret
adc
les
outsl
pop
cmp
lods
pop
loop
pop
mov
sub
inc
ja
sarb
push
sbb
std
icebp
pop
dec
loopne
mov
xchg
test
sbb
cmp
lds
mov
lods
popa
inc
repnz
adc
sub
lods
js
xor
sti
insl
data16
pushf
out
insb
fyl2xp1
add
and
andl
insl
lods
rcrb
out
sbb
lock
jns
test
aas
sti
or
or
test
adc
lahf
jmp
xor
jb
sub
sti
scas
adc
rolb
mov
fidivl
imul
or
mov
popf
sub
or
pop
sub
xchg
mov
shlb
mov
cmp
iret
jns
out
insb
mov
test
mov
subl
cmp
cmpsl
cltd
cmpsb
inc
pop
push
push
data16
stos
nop
test
ret
cmpl
lret
pusha
adcl
in
sub
repnz
jne
mov
stos
daa
sub
jnp
iret
das
cmp
mov
sbb
fs
xchg
pop
pop
mov
sub
push
cli
ja
lahf
in
call
fsubs
lcall
dec
mov
xorb
lcall
popf
xchg
pop
cmp
pop
jb
inc
add
and
push
xor
inc
add
sub
push
xchg
sub
cmpb
pop
cmp
jae
cld
mov
inc
cmp
xchg
or
cmp
incb
pop
cld
push
test
test
pop
insb
sarl
shr
sarl
or
and
fisttps
pop
inc
loope
and
inc
xchg
js
scas
and
inc
insb
hlt
mov
fwait
lods
xor
mov
cli
ss
jo
into
insl
movsl
sub
xor
fidivs
jns
out
lock
popa
aam
sbb
fldcw
push
pop
sbb
add
jg
shlb
sub
and
jno
outsl
push
xor
cmpsb
hlt
mulb
sub
je
and
mov
and
scas
shr
cmp
andl
xchg
push
sbb
jmp
and
dec
test
arpl
jl
test
sahf
in
xchg
lds
dec
push
mov
add
enter
out
ljmp
clc
jno
adc
pop
adc
pop
stos
and
pop
sbbl
mov
or
outsb
mov
mov
jecxz
sub
dec
fxch
xchg
push
fmull
ss
fnstsw
pop
das
mov
cmp
dec
jns
fisttps
mov
mov
movsl
sub
stc
pop
or
stc
in
rcrl
repz
pop
mov
cwtl
lds
push
cld
cmp
cmc
xor
out
jmp
mov
mov
cmpl
data16
jle
hlt
out
fiaddl
sub
pop
dec
push
mov
mov
push
daa
xor
sub
mov
leave
push
xchg
imull
and
cmpsb
add
mov
cmp
hlt
inc
sbb
jl
shl
lahf
aas
test
pop
cmp
adc
insb
mov
or
sub
xchg
xor
negl
push
std
repz
push
dec
cld
and
lock
imul
adc
mov
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
dec
cmp
out
jge
mov
fcoms
sbb
cmpsl
popa
mov
inc
in
out
mov
aam
inc
iret
mov
bound
clc
imul
enter
xchg
dec
mov
adc
or
cltd
in
stc
clc
stc
pop
dec
out
data16
imul
lds
aad
nop
test
jae
fs
push
add
iret
sub
mov
push
out
jmp
stc
cmp
iret
jp
pop
lahf
in
aas
dec
mov
sti
xchg
arpl
cbtw
or
xchg
pop
or
das
out
inc
cmp
cwtl
cmpsl
mov
add
sbb
or
test
lea
pop
les
movsl
insb
mov
subb
add
gs
cmp
decb
ja
dec
pop
dec
gs
push
call
mov
dec
sbb
add
fstpt
bound
enter
clc
nop
cmp
aas
push
repnz
mov
push
nop
out
inc
mov
xchg
push
inc
data16
dec
jle
cld
test
lret
sub
dec
or
addb
xor
xchg
outsb
sti
or
out
int
fimull
xor
call
fsubrl
ds
icebp
into
mov
notl
mov
adcl
xchg
cmc
cmc
adc
jp
and
icebp
lods
lret
sbb
addr16
out
jo
adc
cli
adc
push
push
jl
push
ret
adc
sbb
push
dec
outsl
scas
ja
push
push
inc
push
pop
mov
add
out
inc
lods
in
inc
fstps
rcrb
data16
repz
test
lock
out
loop
sub
mov
incl
leave
pop
popf
push
add
or
mov
daa
ds
sbb
pop
adc
inc
insb
xchg
clc
cmpsb
inc
lock
mov
pop
in
jle
jnp
sub
pop
push
popa
ss
xchg
ror
dec
cmp
dec
in
outsl
inc
or
or
ficompl
das
int
mov
pop
inc
sub
in
xchg
shrl
stos
inc
fldcw
int
adc
loope
iret
pop
inc
fucomi
iret
cmp
std
fistps
dec
minps
jmp
xor
sub
mov
jge
xchg
jmp
imul
mov
sub
jmp
pop
movsb
es
or
xchg
adc
fcoms
pop
jp
out
mov
out
aas
dec
push
xor
lods
int3
sbb
mov
into
mov
xlat
dec
pop
gs
cmpsb
loop
jnp
enter
jle
dec
sub
cli
mov
repnz
movsl
fildl
inc
fstl
out
jnp
xchg
insb
add
test
insb
mov
enter
lret
pushf
mov
jge
sub
mov
inc
enter
jg
into
fnstcw
subl
jmp
push
call
fcoms
mov
pushf
ja
popa
dec
fmul
call
xchg
inc
test
cmp
add
enter
sub
mov
cmpsw
scas
xchg
push
ja
dec
divl
jnp
bound
sub
pop
lcall
aam
mov
cmp
ret
jnp
xor
jecxz
mov
mov
ss
dec
fidivs
lock
pushf
jg
iret
mov
mov
mov
dec
fcmovne
cmpsb
adc
sub
mov
dec
lea
sti
and
jmp
fmuls
ds
xchg
adcb
test
dec
loope
psllw
mov
subb
xor
xor
pop
sahf
and
xchg
enter
pop
push
pop
adc
dec
mov
mov
out
xchg
outsb
adc
xchg
movsl
daa
cmp
pop
cmpsb
jbe
sahf
pop
lods
enter
lret
xchg
xchg
mov
test
mov
repnz
add
repnz
jg
pop
jp
mov
push
mov
and
shrb
mov
cmpsb
outsb
cmp
daa
test
mov
mov
sub
test
sbb
das
push
dec
xor
add
clc
xor
add
scas
cmp
mov
add
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
add
aaa
cli
adc
ss
push
add
fcompl
dec
in
mov
and
cli
in
or
add
add
pop
adc
mov
push
mov
cmp
xor
shr
int
pop
push
push
lcall
xchg
jne
push
or
sbb
mov
jns
fwait
mov
cmc
movsl
xchg
push
in
loopne
insb
xchg
ljmp
cmp
rol
mov
insl
sub
or
repz
sub
shl
inc
add
movsl
sub
stos
xchg
int3
popa
fdivrs
inc
shlb
and
cld
out
sub
mov
fidivrs
hlt
pop
popl
stc
in
jmp
daa
mov
and
xor
sbb
ljmp
jp
ret
lcall
add
cmp
test
call
or
pop
inc
decl
int
mov
mov
jl
dec
imul
mov
rcll
push
cmpsb
arpl
divl
neg
push
jmp
adc
pop
sar
std
dec
mov
sub
dec
test
add
jecxz
aas
arpl
mov
loopne
jl
in
sbb
pop
je
mov
mov
arpl
fimull
fwait
mov
adc
push
sub
jl
mov
iret
faddl
xor
sub
lock
jbe
int
xchg
adc
adc
sub
mov
imul
pop
xchg
loope
mov
adc
mov
ret
jp
xor
nop
push
mov
js
testl
fwait
mull
pop
ljmp
inc
xor
in
sti
imul
and
loopne
jl
sub
or
stos
ror
xor
mov
inc
jne
pop
jle
xlat
lret
xor
pop
loopne
fimull
in
pop
adc
push
pop
mov
cmp
lret
pushf
std
mov
ss
mov
or
inc
sbb
int3
arpl
jmp
push
xor
cli
inc
cmp
inc
mov
dec
ljmp
mov
jl
or
aas
or
dec
xor
ret
sbb
test
adc
mov
cmp
xchg
pop
push
and
iret
cli
enter
sub
xchg
insl
adcb
shrl
int
arpl
sbb
xchg
insl
pop
cmp
pop
pop
pusha
test
and
jno
mov
inc
push
cmp
mov
mov
cmp
fcoml
push
icebp
mov
inc
scas
push
pop
out
pcmpeqd
or
adc
mov
adc
testl
sahf
xor
mov
xlat
loop
lock
mov
xor
xlat
cmp
pop
and
add
icebp
sub
pusha
int
jno
cmpsl
loopne
mov
jbe
stos
adc
inc
icebp
push
xlat
mov
cmp
cld
mov
mov
stos
jb
mov
or
jne
dec
mov
mov
pushf
stos
inc
mov
movsl
and
adc
inc
sbb
mov
sbb
movsl
sbb
push
mov
shrl
dec
push
sbb
sbb
push
sbb
test
std
xchg
adc
dec
add
int
jmp
xlat
xchg
out
call
in
dec
clc
inc
ds
pop
push
jp
shll
dec
pop
mov
shr
cmp
mov
dec
and
repnz
cmp
sbb
enter
mov
data16
adc
sub
push
pop
rorl
fisubrl
fwait
out
int
aas
clc
or
cmp
pop
pop
xchg
add
cmp
jb
cmpb
dec
sbbl
sahf
ja
gs
pop
lcall
iret
out
jns
cs
cwtl
or
std
imul
mov
inc
add
ficompl
cmp
add
xchg
add
add
add
add
sbb
add
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
js
or
cli
icebp
sbb
mov
test
dec
pusha
jg
cmp
push
pop
jecxz
iret
push
fwait
ljmp
xchg
inc
jmp
adc
sub
insb
loopne
and
ret
loope
inc
adc
push
nop
sub
divl
cmp
leave
dec
test
cli
dec
pop
icebp
outsb
sar
jg
pusha
cli
in
add
lret
xchg
fucom
rorl
push
xchg
xchg
lret
aad
js
pop
xchg
jecxz
in
jnp
push
xchg
mov
sbb
mov
mov
hlt
mov
mov
popf
mov
xor
or
fs
ja
test
mov
pop
fdivr
imul
jle
lods
push
addl
iret
in
adc
xchg
gs
jnp,pn
sub
and
mov
mov
jg
jmp
cli
in
es
push
jl
scas
and
rcrb
ds
or
daa
jae
or
sub
xor
add
mov
adc
incb
icebp
push
sti
dec
lods
popf
xchg
in
pop
lret
mov
xor
mov
in
dec
xlat
aaa
xchg
add
fsin
int
jg
ljmp
sub
mov
dec
clc
je
cmp
xchg
decl
push
jbe
notb
mov
ss
dec
addr16
adc
adc
gs
push
inc
or
mov
or
push
lock
pop
fcoml
mov
sbbl
xor
lahf
out
icebp
and
int3
dec
jge
sbb
dec
out
adc
push
mov
out
int
mov
mov
mov
int3
je
jl
test
pop
out
mov
and
loop
and
jae
and
leave
and
and
dec
push
dec
ja
xchg
mov
mov
flds
adc
push
movsl
ficomps
jecxz
std
dec
lahf
shl
mov
sbb
pop
jne
daa
stc
pop
jbe
rolb
fstpt
lahf
inc
adc
push
xchg
dec
or
push
add
xchg
test
sahf
mov
inc
je
daa
std
adc
mov
popl
icebp
insb
mov
dec
inc
rorl
mov
rcl
leave
mov
mov
lds
mov
addr16
int
or
imul
jno
mov
xor
addr16
outsl
into
xor
mov
mov
mov
or
in
jns
popf
nop
bswap
es
imul
pushf
mov
add
adc
rcll
xor
leave
mov
ljmp
stos
outsb
add
adc
jecxz
or
push
inc
aam
ret
stc
jae
jg
push
xchg
sub
mov
or
rclb
push
push
push
lods
lahf
mov
jne
icebp
out
cltd
pop
ss
cmpsl
aaa
pop
inc
lock
lods
fsubs
ljmp
pop
scas
lret
mov
loope
mov
add
in
getsec
sub
xor
dec
dec
mov
or
pushf
fmull
test
rorl
mov
xchg
int
mov
jl
test
mov
sahf
flds
adc
stc
xchg
and
popf
pop
cld
or
fstpt
dec
ds
adc
inc
dec
repz
push
xlat
mov
sub
xchg
cli
outsb
push
pop
push
jns
mov
movsb
pop
imul
es
lods
fisubrl
cli
and
cmpsb
pop
sub
stc
scas
and
imul
ficoms
ja
int
push
dec
push
cwtl
pop
cwtl
je
ja
fcom
cmp
sub
jl
stc
adc
mov
inc
pop
fstpt
jno
ret
clc
lds
stos
loop
adc
fisubrl
stc
dec
imul
inc
movsb
pop
pop
jecxz
push
or
aas
cmp
xchg
sbb
push
fstl
push
jmp
fwait
test
push
mov
jge
rcrl
fs
leave
jp
fldenv
dec
cmpsb
xor
out
sub
cli
cld
stos
sbb
movl
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
sub
stos
adc
aaa
cli
adc
ds
scas
mov
adc
ds
sbbl
fwait
jge
and
aas
pop
test
repz
int3
dec
mov
and
shlb
push
pop
scas
loop
push
daa
pop
jae
mov
mov
stos
bswap
mov
testb
jg
mov
and
inc
insb
mov
shll
neg
mov
sub
push
icebp
stos
nop
jbe
scas
mov
sub
insl
gs
movsb
jb
cltd
push
mov
adc
in
xchg
xchg
test
push
lods
push
imul
inc
mov
in
or
sbb
aad
and
mov
hlt
dec
xchg
mov
or
pop
mov
subl
cs
cli
inc
and
insb
adc
in
and
pop
sub
enter
jle
xor
push
insl
stc
dec
mov
pop
stos
mov
mov
stos
push
cmpb
jns
sarb
fldcw
rcr
add
xlat
adc
xchg
shll
je
dec
pusha
cmp
adc
push
mov
pop
prefetch
iret
loop
or
imul
pop
push
adc
pop
or
aas
fsub
loopne
outsb
inc
add
push
pop
push
shrb
inc
sub
cmpl
xor
pop
cmp
sbb
hlt
aas
je
jecxz
negb
rol
sbb
xor
addl
and
push
in
aaa
push
adc
jno,pn
aam
cli
dec
cmpsb
dec
les
fmuls
jno
inc
inc
mov
xchg
gs
push
pop
std
dec
gs
xor
xchg
fstpl
addb
cmpsb
xor
test
push
inc
popf
cld
bound
lahf
xchg
add
lods
stos
sbb
jl
cmp
inc
push
dec
or
insl
imul
xchg
push
cltd
cmp
loop
int
bound
lret
sub
fidivs
pushf
pushl
imul
mov
test
test
sub
pop
adc
xor
mov
mov
out
bound
lds
shl
das
lcall
jmp
iret
xchg
scas
sbb
inc
shlb
cmp
sbb
cmp
push
aad
lcall
adc
push
pop
punpckhdq
mov
scas
outsb
push
leave
fcomps
xor
ret
xchg
adc
push
xchg
popa
dec
popa
inc
shll
or
or
cmp
sub
jnp
je
imul
in
out
xorb
ret
repz
stc
gs
pop
test
inc
push
sub
cmpsb
xor
or
enter
pop
adc
ja
adc
sub
sahf
add
test
mov
cltd
or
dec
cmc
xor
mov
adc
mov
add
rcr
shr
testb
outsb
arpl
out
mov
je
push
push
fildl
and
inc
insb
in
cmp
xchg
mov
inc
sahf
or
cmc
xor
jg
mov
add
xchg
sbb
mov
and
push
lock
in
mov
cmp
dec
aam
fisubrs
aam
shll
lahf
dec
xor
sti
mov
fistl
pop
jns
ds
jl
pop
scas
outsb
xor
dec
nop
insb
repz
test
sbb
ljmp
xlat
test
cmpsl
mov
pop
sub
gs
loope
push
imul
je
add
mov
jl
leave
inc
les
pop
sub
sbb
mov
lahf
mov
rclb
xchg
mov
int3
cs
inc
sarb
inc
pop
stos
jnp
add
push
jne
es
hlt
fistl
leave
lods
pop
xchg
mov
in
dec
imul
add
fmul
and
lret
mov
xchg
lods
and
mov
les
xchg
repnz
cmp
adc
mulb
mov
sub
cmp
mov
pop
test
adc
sbb
xor
fisttps
sub
mov
inc
add
adc
add
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
aad
sub
adc
cli
adc
outsl
fcomp
or
mov
shl
es
mov
push
mov
test
push
xor
mov
xchg
cmp
movsb
or
sub
mov
repnz
loopne
shrl
mov
stos
pop
gs
pushf
mov
loop
ljmp
xchg
out
into
mov
data16
xchg
sarl
insb
or
fsubs
mov
mov
jb
or
mov
shlb
ja
out
mov
xchg
pop
out
gs
add
std
pop
lock
cmp
cmc
dec
popf
insl
pop
dec
add
ret
push
out
lea
xchg
xor
ret
negl
imul
xor
out
addr16
and
out
jl
sbb
insb
mov
loop
popf
arpl
pusha
daa
cld
std
xchg
loope
xchg
mov
ljmp
ror
fcmovnbe
xchg
lods
jmp
jle
xor
movsl
push
scas
pop
pop
push
push
aad
popf
mov
sbb
mov
shl
iret
fstps
mov
xchg
or
fstps
mov
and
lcall
scas
lods
dec
jge
or
int
mov
aad
mov
in
mov
sub
jge
sub
push
dec
mov
and
mov
mov
shrl
lret
enter
adc
jb
cmpsl
outsb
cmp
sti
pop
ffree
sub
sbb
push
insl
aad
cs
es
pop
pushf
or
into
loope
mov
cmc
ss
sub
int
xorl
fwait
pop
push
arpl
rcll
fistl
inc
pop
inc
gs
xchg
xchg
xor
inc
mov
ret
rcrl
pop
push
jmp
out
std
mov
mov
push
loop
nopl
adc
mov
lock
addl
adc
stos
inc
pop
cmp
andb
mov
popf
outsb
popa
push
mov
fdivrl
mov
add
xor
xchg
xchg
imul
ss
mov
inc
clc
pop
imul
cmpsb
repnz
mov
pop
add
aam
int
int3
mov
popf
cs
cltd
xchg
push
xchg
inc
rcr
sbb
sbb
mov
addr16
stos
or
jne
xchg
inc
movsl
jg
bound
adc
daa
fiadds
out
adcl
loope
ficompl
xlat
imul
fcmovbe
xor
mov
hlt
out
adc
pop
push
sbb
jmp
sub
loope
adc
xchg
dec
adc
div
sbb
mov
inc
stc
adc
sahf
mov
mov
push
pusha
test
dec
es
nop
out
push
jg
add
push
mov
mov
and
icebp
ja
lret
stos
insb
dec
push
inc
inc
sbb
stc
ljmp
mov
push
dec
shlb
negl
adc
andb
push
pop
in
jb
mov
mov
outsl
js
fidivl
negb
mov
in
out
scas
mov
inc
push
fs
fbld
fwait
imul
inc
call
pop
loope
and
pop
xor
inc
stos
lds
jo
sbb
add
sub
sub
mov
ljmp
and
push
test
xor
nop
push
inc
loop
jns
cmp
test
mov
and
cmp
xchg
fdivrl
push
push
jae
in
negb
or
scas
js
mov
scas
push
push
or
pop
mov
xchg
mov
push
xchg
mov
out
and
jmp
test
pop
adc
mov
sti
mov
or
aas
xlat
xchg
aas
into
fstp
dec
cmp
push
push
or
test
xchg
aad
adc
lret
add
fwait
ja
xor
je
aas
aas
movswl
jno
cmp
nop
sub
fcoms
mov
xor
add
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
dec
test
adc
aaa
cli
adc
sub
std
push
sub
js
pop
aad
lahf
jns
mov
cwtl
xchg
outsb
sub
rcl
inc
xor
cli
repnz
push
js
flds
lea
mov
call
test
mov
mov
outsb
xchg
add
js
rclb
xchg
repnz
out
push
cmc
cltd
push
mov
movsb
add
aam
cli
les
pop
dec
sub
dec
fs
repnz
mul
fdivrp
call
mov
jbe
ret
jnp
cli
rcr
sbb
add
sbb
aaa
ss
inc
or
or
les
xor
push
adcl
lods
mov
jbe
inc
and
add
js
fstl
pop
jnp
xor
xchg
out
arpl
adc
mov
sub
mov
imul
adc
cmp
mov
push
fcomp
inc
mov
in
insl
xchg
jle
leave
popf
scas
mov
je
lret
inc
imul
enter
clc
fxch
daa
ljmp
cltd
jnp
addb
bound
mov
ds
sahf
dec
int
cmovno
xor
xchg
mov
mov
pop
pop
ret
sbb
scas
fwait
inc
and
cmp
inc
dec
xchg
mov
push
inc
inc
push
call
mov
sbb
ss
jge
clc
aad
jo
ret
inc
cmp
adc
jo
inc
je
xor
into
cltd
dec
scas
mov
or
xchg
arpl
xchg
jb
in
rcll
dec
pop
cmp
xor
rolb
mov
xor
lods
jne
cli
cmp
lods
mov
addr16
enter
movsl
push
fdiv
outsl
push
lret
repnz
mov
daa
popl
xchg
mov
scas
jp
jae
mov
add
mov
jnp
xchg
mov
lods
sub
aaa
repz
movsb
add
test
lret
or
scas
data16
hlt
jle
aas
jmp
jg
mov
push
frstor
add
js
mov
pop
aas
and
lret
mov
and
fstpl
jb
mov
imul
xchg
mov
in
push
jl
xchg
arpl
dec
push
mov
aaa
hlt
xchg
mov
mov
and
and
in
hlt
ret
data16
adc
push
xchg
enter
rolb
pushf
popf
shrb
lea
movsb
pusha
das
fidivs
adc
scas
les
cmp
jb
lods
sub
lret
inc
mov
mov
mov
int3
js
dec
and
dec
sahf
cld
mov
sub
lahf
xor
js
sbb
ret
outsl
aad
mov
jae
clc
cmp
mov
aam
iret
int
in
xlat
pop
sti
repnz
jg
mov
fildl
cmc
pop
cltd
inc
int3
jae
and
inc
sahf
mov
movsl
pop
mov
dec
dec
xor
shlb
pop
in
mov
cmp
subl
mov
andb
inc
ja
mov
xor
out
loope
out
cmp
add
push
cmp
mov
sbb
jg
mov
pop
jno
sub
inc
mov
push
repz
icebp
dec
movsl
cltd
iret
test
jo
aaa
pop
insl
aaa
loopne
and
pop
mov
sbb
mov
ret
jmp
lea
dec
js
shrl
test
daa
and
add
setbe
call
mov
enter
xor
mov
adc
repz
xchg
addr16
add
cltd
xlat
mov
inc
out
push
and
gs
cmc
lret
sbbl
fs
fmuls
push
fwait
mov
xchg
fsub
pop
inc
cmp
inc
lahf
mov
xor
mov
int
in
push
loop
stos
pop
test
cmpl
or
gs
cmp
in
jmp
adc
mov
add
sarb
mov
mov
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
mov
mov
adc
cli
adc
or
dec
xor
les
dec
int3
adc
jp
or
jnp
jno,pt
xchg
mov
mov
cmpb
mov
mov
repz
lret
dec
pop
enter
mov
ret
bound
inc
xchg
jo
ret
mov
inc
sub
aas
xchg
enter
pusha
mov
or
dec
iret
add
jb
xchg
add
cmp
xor
insb
jnp
push
cmp
mov
mov
and
or
cmp
add
daa
sub
rcrl
mov
push
scas
js
jle
dec
shr
clc
lret
fstl
out
aaa
test
orl
add
sbb
in
aad
push
inc
pop
shr
adc
movsb
mov
mov
lods
pop
ja
inc
or
call
cmp
inc
filds
sbb
cmpsl
add
imul
inc
push
imulb
ja
es
fisttps
xor
pop
inc
aas
jbe
xor
or
jl
and
pop
int
xchg
scas
iret
xchg
subb
or
mov
loope
mov
mov
lds
cwtl
outsl
setp
inc
jge
lods
cmpsl
jmp
shrl
int
je
fidivrs
shrb
sub
sub
rorb
xchg
mov
hlt
lock
das
movsl
dec
dec
sbb
shll
repnz
mov
or
in
mov
cmp
sub
mov
mov
adc
sbb
push
test
xchg
add
dec
xlat
lahf
cmp
iret
pop
push
and
xchg
mov
repnz
mov
rol
push
mov
cltd
mov
fisubs
mov
add
test
cwtl
push
xchg
mov
enter
aam
jbe
shlb
add
cld
shrb
and
jbe
xor
fdivl
sbb
aas
movsb
shll
aad
cmp
sbb
lcall
add
adcb
jg
call
pop
addb
in
sub
in
rcl
xchg
filds
mov
dec
movsl
lcall
push
sbb
out
jnp
pop
mov
and
jmp
mov
or
adc
cmp
rorl
mov
and
pop
push
jo
push
cwtl
lret
xor
leave
xor
loope
stos
cmp
push
movsl
sub
lock
mov
xor
std
fisttpl
xor
mov
loop
mov
pop
insb
repnz
and
shlb
jb
adc
or
sbb
movsb
loopne
aam
cmc
push
jne
ret
popa
fmulp
lds
sbb
fstpl
add
stc
or
inc
fmuls
sub
sbb
loop
cmp
jo
add
movsb
adc
xchg
xchg
negl
mov
movsl
jns
push
in
add
gs
cwtl
out
mov
xchg
mov
test
sub
push
aas
push
pop
sub
push
jne
stos
mov
push
shll
ss
push
mov
loopne
mov
shlb
xchg
or
jecxz
movb
inc
push
test
cmp
fwait
call
in
punpckldq
movsl
mov
pop
xchg
lcall
xchg
lret
adc
popa
pushf
mov
arpl
sar
lahf
loopne
test
xor
mov
add
adc
cmc
inc
mov
int
push
ljmp
xlat
cmp
sbb
add
push
push
push
xchg
xor
push
cmp
inc
mov
sub
add
mov
test
das
in
inc
cmp
insl
adc
into
push
les
cmp
mov
icebp
xor
decb
pop
dec
xchg
fsubrl
xor
sub
aam
inc
int3
scas
pop
out
rolb
mov
data16
insb
lods
jge
mov
and
mov
mov
mov
js
push
imul
lods
roll
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
leave
ljmp
aaa
cli
adc
mov
mov
enter
rorb
sbb
dec
pop
mov
je
inc
andl
push
loopne
std
mov
mov
sub
dec
sub
xor
sbb
lahf
add
mov
cmp
xor
ficompl
xlat
cmpsl
add
bound
lahf
pop
mov
cmpsl
popa
xor
xchg
adc
lods
cmc
xchg
pop
xchg
ja
movsb
idivb
xchg
mov
ja
jle
xor
test
ss
mov
and
mov
lahf
scas
mov
testl
lret
mov
out
cmp
sahf
popa
test
in
add
push
notl
adc
cmp
psllq
and
jl
stos
lahf
stos
sub
push
xor
xchg
xchg
cmpb
or
sahf
xor
xchg
std
jge
in
sub
cli
sbb
aad
ss
fdivrl
xchg
fnsave
call
jo
out
arpl
sarl
cmp
dec
clc
push
or
push
jl
cld
lcall
xorb
mov
test
ret
xchg
dec
lods
pop
rolb
cmp
and
xor
sub
es
inc
arpl
aaa
outsb
pusha
outsb
inc
ja
lret
adc
int3
cs
mov
pop
add
std
lea
imul
test
cmpsl
xchg
jg
adc
outsb
pop
xor
mov
nop
lock
adc
pop
push
and
adc
sbb
subb
inc
xchg
adc
pop
scas
sbb
push
out
popf
fdivrs
js
imul
pusha
xor
in
push
int3
jmp
cli
xor
mov
iret
adc
iret
push
cltd
xchg
enter
xor
adc
pop
dec
add
sti
fsubr
vpsubb
xchg
in
jb
adc
pop
into
call
pushf
jne
jl
mov
push
jb
dec
ficoml
pusha
adc
int
adc
gs
mov
repnz
cwtl
fidivrs
fs
fdivr
sti
shld
and
mov
inc
rorl
fisttpll
xchg
inc
lret
jno
sub
mov
ficomps
scas
mov
arpl
lods
seto
sti
rcrb
sbb
pop
cmp
jmp
and
sub
mov
jae
push
hlt
cwtl
in
or
es
xor
sbb
and
jnp
out
clc
push
or
or
call
sub
xchg
pop
aad
scas
mov
sbb
sbb
jo
fmuls
cmp
test
icebp
das
xchg
test
iret
mov
pop
inc
mov
fwait
inc
dec
pop
sub
push
sub
iret
loopne
push
cmpsl
cwtl
ss
xchg
sub
je
clc
arpl
cmp
mov
xlat
popa
testl
je
xchg
mov
fisubrl
add
outsl
ficompl
imul
or
shr
jae
loope
mov
and
andb
push
cli
cmp
das
cld
sbb
mov
jbe
sbb
call
out
jno
jl
test
jmp
inc
jg
jno
je
cmpsb
js,pn
mov
sub
mov
call
in
lock
ds
out
movsb
test
repz
fsubs
cmc
in
loopne
pop
jmp
adc
outsb
pop
mov
into
repz
add
xchg
cmp
xchg
inc
lahf
ret
rorb
shlb
jecxz
cmp
push
fst
jl
ret
leave
jmp
xchg
jl
incl
cld
mov
xor
push
das
hlt
jo
push
test
and
sbbl
js
mov
test
cmpsl
jne
xchg
fdivs
xchg
adc
call
cmpsl
loop
into
inc
jo
divl
jno
lret
mov
outsl
or
mov
stos
mull
popf
mov
mov
jns
ja
pop
inc
pop
fimull
mov
cld
stos
out
cmp
repz
negl
stos
mov
inc
mov
and
in
adc
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
adc
xchg
stos
mull
add
lods
fistpl
push
lretw
out
outsl
and
xchg
shl
sti
push
mov
xor
sbb
push
and
aad
into
dec
dec
sahf
aas
sbb
push
add
mov
jb
ja
insb
and
xchg
outsl
sarl
sub
out
es
mov
orb
iret
loop
xchg
add
mov
dec
idiv
sti
sbb
inc
aas
jle
jno
sbb
mov
and
mov
inc
sub
emms
adc
add
sbb
add
clc
xchg
adc
mov
or
iret
jnp
and
jno
movsl
sti
inc
add
push
jecxz
or
mov
jno
mov
mov
mov
mov
mov
cmc
popa
imul
pop
lods
xor
xchg
lock
jg
sahf
cmp
mov
shl
popl
and
mov
ljmp
fcoms
cmp
inc
or
mul
push
loopne
hlt
cwtl
or
leave
cmp
addr16
mov
popf
add
and
hlt
adc
je
xorb
jo
dec
cs
adc
cmp
xchg
mov
mov
jo
pop
enter
mov
cmp
popa
inc
xchg
or
push
mov
jp
stos
mov
jae
and
or
jns
pop
sub
mov
repz
lds
inc
enter
or
int3
jmp
push
xor
shrl
fadds
and
or
inc
push
inc
adc
sbb
enter
mov
sarb
add
xlat
test
fistpl
xor
mov
scas
mov
mov
sahf
jl
xchg
mov
push
add
aam
lcall
add
jmp
pop
lcall
mov
jg
mov
jge
into
nop
fildll
push
or
xor
cmc
movsl
divl
xchg
xchg
mov
push
or
loopne
in
mov
inc
rcl
aas
sbb
dec
push
arpl
idivb
adc
pop
in
xchg
pop
lcall
or
push
js
aas
xchg
mov
push
pop
ret
or
stos
lahf
aaa
sub
fxch
mov
into
scas
cmp
xorb
xchg
and
std
nop
loope
xchg
dec
fidivl
adc
and
xchg
mov
mov
inc
test
pop
jle
jns
sub
jbe
lcall
call
iret
and
not
lods
inc
cmc
imul
sub
mov
dec
adc
scas
inc
dec
jbe
das
push
add
pop
outsl
fmull
jne
cmp
mov
push
dec
dec
repz
in
imul
push
in
jno
imul
nop
inc
push
adc
jecxz
xchg
sub
cwtl
add
je
fcoml
je
and
push
fcmovbe
mov
push
and
addr16
add
jmp
inc
int3
lcall
cmp
ss
jge
aas
mov
movsb
loopne
cld
popa
cmp
pop
mov
hlt
imul
cmp
pop
cmpsb
mov
pusha
sub
roll
fcomps
cmc
jns
lcall
lods
lods
sbb
sahf
enter
add
test
setg
push
hlt
repnz
xchg
into
jmp
daa
lock
leave
fucom
cmpsl
xor
leave
stos
imul
push
mov
jge
sbb
stos
push
add
lret
into
movsb
sub
or
fucomp
ss
dec
mov
or
mov
outsb
pop
test
xor
pop
jp
mov
repz
mov
mov
ja
je
add
push
mov
add
dec
adc
std
ret
das
pop
inc
sub
push
push
mov
les
fsubr
cmp
mov
outsl
add
lods
or
xor
leave
pop
cltd
adc
pushf
test
mov
xor
addl
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
jl
jecxz
push
jg
adc
cli
adc
shlb
outsb
outsl
push
fstpl
movb
xor
inc
jmp
mov
rcr
movb
push
imul
xor
sarb
fnsave
xor
mov
loope
jnp
std
int
cmp
mov
insl
and
sbbb
mov
push
ret
in
add
or
repnz
dec
rorl
pop
sbbb
mov
jbe
gs
push
jg
sub
mov
lods
lret
int3
mov
fldenv
dec
mov
inc
dec
mov
add
adc
or
popf
xor
push
push
jecxz
jo
mov
mov
xor
outsb
mov
lcall
and
in
mov
test
pop
xchg
push
gs
push
testb
dec
dec
ficomps
add
sbb
jmp
pop
stos
sub
repnz
movsb
mov
fcompl
pop
out
cli
sbb
and
pop
mov
dec
jo
in
dec
inc
in
xchg
ret
mov
add
cmpsb
and
add
push
call
dec
xchg
pusha
je
rcrl
daa
js
ret
fstpl
and
push
and
cmp
icebp
adc
jge
mov
sbb
adc
add
cmp
sub
jb
popf
ret
call
imul
and
or
lcall
loope
adc
fwait
inc
pop
in
pop
aam
mov
movsl
jle
jg
in
jmp
or
inc
cmp
dec
enter
mov
cwtl
add
cmp
int3
insb
roll
repnz
rolb
pop
inc
loop
movsl
pop
frstor
inc
int3
fildll
mov
clc
cli
pop
push
ja
or
inc
jb
inc
and
pop
mov
xchg
setge
sbbb
test
stos
scas
test
cli
sahf
jmp
int
leave
insb
and
es
stos
mov
dec
add
cld
nop
xchg
jns
and
push
test
movsl
cmp
addr16
sub
stos
adc
in
lret
in
push
rorl
lcall
xchg
lret
cs
push
lret
ljmp
in
cwtl
outsl
jb
xchg
jae
aam
mov
in
aad
test
mov
inc
inc
adc
xor
int3
iret
mov
xchg
repz
jmp
push
sub
inc
adc
and
fs
icebp
lods
jne
pusha
in
sub
inc
sbb
scas
loopne
jae
dec
jo
push
xor
dec
mov
jns
jecxz
pop
lcall
inc
pusha
jmp
pop
sub
pushf
out
lcall
push
andb
fbstp
mov
fwait
jp
mov
into
add
mov
push
in
imul
into
cmpsb
leave
mov
inc
push
xchg
shl
call
and
insl
cmp
xchg
sar
inc
inc
jns
sbb
jle
or
test
xor
mov
icebp
stos
insb
or
fs
repnz
sbb
sbb
das
mov
add
out
ljmp
mov
mov
push
mov
lret
sbb
sarb
mov
pop
adcb
repnz
dec
cmp
push
outsb
in
das
mov
mov
inc
pop
mov
ds
imul
push
inc
add
or
in
inc
fwait
pop
repz
sub
jecxz
in
pop
xchg
mov
mov
ljmp
and
cmc
shlb
enter
or
icebp
jnp
push
fbld
lcall
scas
adc
pop
jle,pt
loop
imul
fiadds
mov
or
sub
add
loop
pop
data16
stos
sarl
mov
sub
mov
dec
inc
ret
jnp
in
jg
testb
aad
push
fcomip
std
and
cltd
out
test
stos
testl
push
out
cs
xor
push
iret
mov
mov
or
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
enter
mov
sub
bound
aad
ds
stos
push
adc
pop
pushf
je
sub
dec
fucomi
jle
push
dec
iret
and
outsb
in
int
pop
sub
adc
cmpsb
adc
scas
and
sbb
jbe
cld
or
inc
or
cltd
inc
push
out
nop
sbb
mov
and
sbb
sub
stc
inc
fwait
pop
ss
jno
jbe
or
mov
sub
sbb
sub
and
cltd
sbb
mov
mov
sub
xchg
mov
lds
pop
gs
cmp
xor
incl
js
push
jecxz
xchg
loopne
repnz
cltd
mov
scas
jns
out
xchg
out
dec
mov
out
test
jae
dec
dec
jl
add
idivl
lcallw
cmp
mov
jnp
sub
js
addr16
jmp
mov
enter
mov
scas
add
ds
mov
mov
jg
lret
cmp
push
push
gs
scas
ret
or
out
jb
in
fsubr
es
cmc
cwtl
mov
lock
cmp
push
ljmp
sub
mov
mov
incb
mov
push
fistpll
xorb
arpl
mov
push
cmc
cltd
add
mov
xchg
cmc
cmpsb
andb
xor
jg
add
mov
mov
jbe
out
xor
js
mov
dec
jbe
jbe
popl
loop
aas
push
mov
lods
mov
aaa
and
out
or
dec
or
pop
push
adc
arpl
mov
xor
nop
mov
cmp
mov
rolb
sub
xlat
add
and
mov
cmp
ss
or
mov
xor
mov
or
pop
or
fadds
lret
cmpsl
mov
ss
fisttpll
cmp
ret
jl
loop
test
mov
mov
lret
fsts
insl
mov
sub
repnz
push
cmp
les
cmp
cwtl
mov
mov
cmpsb
flds
dec
push
inc
cli
std
or
fsubs
adc
xchg
test
in
push
mov
fsubrs
mov
pop
mov
mov
jo
or
cld
pusha
loopne
mov
sub
push
pushf
js
stc
insb
fs
add
in
fsincos
xchg
dec
jo
ljmp
sub
jmp
jle
cmpb
push
mov
dec
loop
cmpsl
jbe
icebp
sub
pop
jb
add
in
repz
js
mov
lret
imulb
mov
xchg
dec
cmp
adc
jno
lret
cli
jo
inc
mov
negb
insl
or
adc
and
sub
imul
sti
outsl
xorb
fwait
popa
flds
cmpb
push
add
jmp
mov
cli
push
lret
jecxz
sub
in
int3
lods
cwtl
inc
sbb
add
shl
push
sti
repz
fcmovnb
xor
dec
stos
rorl
jne
cwtl
inc
jp
test
adc
movsb
sub
loop
xchg
mov
lret
scas
push
or
out
imul
push
mov
add
and
iret
add
push
mov
loope
pop
test
ret
inc
mov
cmpsl
lods
push
test
sbb
push
mov
dec
movsl
leave
std
mov
xlat
jg
and
xor
push
add
jecxz
mov
iret
daa
das
dec
imul
sbb
xchg
lea
ret
cmpsl
out
xlat
mov
sub
inc
popl
mov
xchg
mov
mov
in
mov
add
pop
xchg
inc
fdivs
mov
dec
jg
addr16
sub
push
inc
xchg
subl
xor
out
xor
out
adc
lods
scas
sub
pop
bound
enter
imul
insl
data16
lea
ficoml
loop
imul
mov
adc
mov
shrd
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
dec
mov
cli
adc
adc
adc
mov
or
fbld
or
lods
adc
mov
xchg
aad
cmp
cltd
mov
out
sub
mov
and
test
dec
pop
pop
icebp
ja
imul
inc
mov
orb
add
jp
cmpb
call
repz
cltd
xchg
adc
test
push
and
mov
and
and
movsl
rcll
in
mov
testl
les
insl
cmp
in
sarb
xchg
pop
sbb
jbe
movsb
jl
cli
aas
and
sti
adc
jp
mov
movsb
mov
fldt
fimull
fstpt
pushf
or
clc
adc
cmpsl
ss
out
insb
rcrb
es
mov
leave
clc
daa
pusha
mov
fisttpll
outsl
test
in
inc
call
mov
pop
das
inc
testb
push
addr16
mov
push
bound
push
cmp
shll
xchg
clc
das
pop
in
mov
mov
divb
fidivl
and
inc
xor
inc
mov
jno
imul
inc
sub
pop
xor
mov
mov
inc
out
adc
aam
or
mov
pushl
ret
orb
mov
repnz
push
lret
scas
clc
mov
pusha
xchg
jae
jnp
ja
shrb
add
jge
nop
fwait
cltd
xorl
lcall
dec
ret
hlt
movsb
imul
cmpsl
es
xor
add
pop
aas
xchg
in
lret
jmp
sub
mov
mov
mov
push
push
ljmp
mov
movsl
mov
mov
mov
inc
jae
dec
pop
xchg
pop
xor
xchg
lds
outsl
bound
or
out
pop
popa
stos
in
lds
sbb
andl
into
lods
push
mov
dec
lods
lds
inc
cmp
jecxz,pn
stos
jae
or
add
stc
xchg
dec
mov
clc
in
jnp
jne,pt
in
pop
aam
pop
test
mov
gs
jle
add
cmpsl
ja
fptan
lcall
or
int
sbb
jge
in
or
bound
negb
lcall
fstp
mov
push
or
es
or
pop
mov
mov
fstpt
lods
mov
mov
andb
rorl
ja
insl
pop
stc
cs
dec
sahf
notb
adc
mov
mov
inc
xchg
fisubrl
add
lea
outsl
sbb
mov
rcl
mov
negl
mov
ret
jae
and
pop
adc
fst
outsb
into
test
xchg
jp
loopne
and
and
or
push
fmul
mov
lods
jl
aad
imulb
pop
cmp
sbbl
mov
or
test
fdivr
push
js
adc
xor
mov
outsl
repz
dec
sbb
daa
repz
adc
add
cmovs
and
pushf
push
repnz
popa
lods
arpl
shrb
lods
jae
dec
xor
popf
fstpl
mov
test
fistps
sbb
in
xor
mov
cmc
xor
sbbb
mov
data16
mov
pushl
pop
shl
aad
add
jmp
movsl
pop
imul
out
inc
jmp
je
shlb
ja
sbb
cmpsl
jg
lret
cmpsb
add
out
cli
mov
xor
fcoml
movl
pop
fldl
mov
mov
jo
scas
adc
imul
jns
push
sarb
xchg
fnstenv
fwait
inc
add
testl
inc
xchg
jns
dec
mov
ret
test
dec
out
adc
and
lcall
mov
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
mov
mov
adc
cli
adc
jl
inc
mov
cmp
fbstp
dec
into
pushf
iret
sbbb
ja
sub
push
xlat
xchg
je
negl
push
pop
jmp
lock
adc
mov
in
jp
imul
jmp
scas
stos
cwtl
jle
frstor
lret
inc
xchg
out
sbb
mov
sbb
inc
scas
jns
dec
cmpsl
jnp
stos
ds
adc
lock
xchg
xchg
leave
mov
mov
jle
jo
lods
movsl
or
pop
mov
jg
or
arpl
insl
adc
mov
fistps
push
ffreep
mov
je
push
popf
mov
pop
lahf
lds
into
and
xor
xchg
fiaddl
sbb
subb
mov
imul
insb
aas
sbb
add
dec
mov
mov
ja
mov
xor
imul
mov
jmp
sti
jle
loop
cmp
dec
adc
decl
lret
jg
bswap
int3
cli
sbb
push
dec
sub
ss
movsl
fdivrs
push
sub
xchg
xchg
xchg
mov
xor
mov
and
dec
sbb
rcr
or
sub
in
add
inc
pop
adc
cmpsl
lods
cld
mov
repz
call
cwtl
xchg
movb
push
iret
push
cld
out
lret
mov
sahf
in
dec
xchg
xor
mov
jb
leave
inc
xchg
xchg
pop
and
out
and
out
pop
dec
xor
push
sub
sbb
mov
dec
mov
out
push
enter
lret
xor
jbe
cli
bswap
jo
dec
jne
pop
sbb
les
and
ficoml
mov
sub
jae
bnd
jg
and
inc
mov
adc
fsubrl
mov
flds
pop
sub
or
insl
cltd
das
movzbl
mov
scas
loopne
or
pop
xlat
xchg
cs
jnp
push
sbb
sub
lea
cwtl
dec
sbb
pop
aas
call
mov
iret
orl
jmp
test
xchg
clc
add
jbe
xchg
jl
pop
dec
lock
pop
int3
cltd
xor
clc
inc
jns
aam
mov
fnstcw
fiadds
xchg
fildl
jo
push
pop
mov
dec
dec
cmp
push
sbb
shlb
jecxz
outsb
into
fsubrs
xchg
pusha
cmp
inc
inc
adc
mov
inc
repz
xchg
cld
mulb
adc
repnz
fwait
mov
xor
sahf
mov
test
sbb
iret
int
mov
xor
jmp
lret
xchg
dec
adcl
popa
movb
adc
into
je
lock
push
mov
push
push
stc
stos
cmp
xor
clc
inc
or
cmpsb
mov
mov
xlat
std
xchg
mov
and
dec
lods
mov
or
mov
ret
or
adc
cvtps2pi
push
data16
rcpps
jge
out
jp
push
pop
lret
mov
test
int
mov
ss
mov
adc
popa
cs
ss
cmpb
jnp
xchg
testb
scas
ja
out
cmp
scas
ss
push
leave
xor
jbe
xor
test
popa
scas
in
inc
mov
enter
jg
sarl
in
pop
fnstenv
lods
and
clc
cmovp
cmp
or
mov
sub
pushf
out
cmp
xchg
stos
dec
mov
clc
cmp
inc
es
subb
inc
loope
insl
add
jae
out
mov
inc
sbb
out
xchg
xchg
mov
mov
mov
jecxz
jne
lret
jns
xlat
daa
in
pop
push
mov
mov
dec
int
xabort
cmp
test
dec
arpl
dec
inc
imul
sbbl
sub
jmp
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
stos
movsl
arpl
aaa
cli
adc
popf
fsubs
xchg
pop
push
push
mov
inc
sar
push
or
xchg
sub
mov
jge
inc
iret
pop
lock
addr16
dec
aad
xchg
sub
ja
test
fadd
inc
lods
mov
ss
addb
push
mov
sbb
xor
sbb
pop
mov
ljmp
movsl
cmc
xor
int3
shrb
jge
fs
mov
int3
dec
dec
xlat
xchg
sub
inc
xor
jmp
andb
xor
inc
pop
jl
fs
dec
jnp
icebp
inc
js
jbe
mov
jb
outsl
iret
pushf
sahf
xchg
jae
sub
enter
fbld
pop
ja
xchg
cmp
adc
ret
dec
jae
and
xor
ficoms
jmp
pop
out
jo
cmp
sbb
cli
clc
das
repz
sbb
lods
into
pop
jecxz
push
test
fiaddl
leave
aam
inc
jns
lea
push
int
or
adc
xchg
dec
lock
xor
xlat
into
fnstenv
test
out
clc
aam
cmp
dec
sarl
mov
adc
jno
inc
add
and
dec
mov
push
cs
sbb
push
adc
sbb
rolb
jo
mov
cmp
test
jne
subb
bound
rorl
dec
jg
clc
mov
and
mov
mov
emms
ljmp
cwtl
push
adc
into
push
mov
sub
mov
mov
inc
mov
jb
dec
jmp
pop
push
inc
lret
movsl
add
mov
sbb
daa
mov
cs
stc
je
xchg
fnstcw
bound
add
fmull
les
cmp
xrelease
scas
xor
aam
push
lret
ja
mov
cwtl
pop
outsb
in
xchg
bound
adc
cltd
and
and
in
in
out
sbb
push
ds
push
cwtl
repnz
jge
mov
mov
stc
std
xor
jno
pop
pop
jge
into
sbb
xchg
loopne
insb
aam
aam
mov
pushf
dec
addr16
pop
adcb
add
lods
pop
inc
aas
std
shll
lahf
or
mov
fs
dec
push
xchg
add
loopne
adc
push
loop
cltd
fdivrl
mov
add
ja
iret
dec
mov
jbe
dec
call
rorb
fimull
add
and
sbb
stc
insb
test
repnz
bsr
inc
negb
xor
jne
mov
pop
rol
icebp
lods
add
mov
jl
jnp
fdivrs
mov
fidivrl
loop
jecxz
outsl
int3
dec
inc
mov
pop
xor
test
insb
sti
and
xor
cli
int3
out
bound
push
ret
dec
shll
repnz
lret
stc
cltd
aaa
xor
sarl
ds
xchg
sbb
fldt
lret
lock
add
aam
sti
push
mov
cmpb
das
jne
add
test
xchg
ljmp
jo
pop
or
add
ret
cwtl
cmp
jle
push
add
repz
add
fldt
repnz
mov
mov
outsl
or
cli
or
dec
in
pop
push
and
xor
adc
xor
jmp
cmp
stos
push
xchg
icebp
inc
ss
adc
and
mov
hlt
mov
aaa
je
insl
repz
ss
aaa
jmp
imul
aam
xlat
int3
mov
xchg
jp
sub
pop
out
cwtl
popl
insl
push
adc
mov
jno
cmp
cmpl
int
popa
pushf
push
push
out
xchg
testl
mov
xchg
insb
or
cwtl
ficomps
adc
dec
jecxz
adc
push
cld
and
cmp
stos
mov
pop
inc
push
inc
inc
xchg
jbe
fisttps
dec
adc
xor
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
outsb
and
fbld
jmp
ficompl
cmp
daa
inc
push
cmp
sub
subb
ficomps
mov
cwtl
sbb
mov
movsb
push
arpl
lcall
js
fdivl
test
pop
loopne
cmpsl
cmp
stos
xchg
push
sub
mov
pop
lds
ds
into
iret
loop
movsl
out
dec
mov
mov
in
in
cmp
pop
pop
out
gs
mov
fsubr
jecxz
aaa
jae
xor
or
rorl
lret
mov
xor
fwait
push
loope
sbb
push
out
cmpsl
movsl
or
je
aas
xchg
push
jl
dec
aaa
jge
mov
movsb
push
lret
add
jnp
stos
in
cmpsl
sbb
inc
subl
outsl
int3
mov
jnp
aam
popa
add
or
mov
loopne
mov
sbb
cli
mov
dec
xchg
leave
push
aaa
sahf
add
push
aas
jbe
xchg
xor
pop
xor
mov
adc
cld
ret
push
arpl
add
ds
out
add
aad
sbb
push
pop
notb
sti
ret
test
cmc
jbe
js
movsb
loop
mulb
popa
call
dec
xchg
lea
mov
icebp
lahf
pop
fcomip
mov
stos
jecxz
jmp
jb
scas
gs
outsl
sbb
xchg
dec
mov
popa
dec
cmpsl
stc
jecxz
adcl
aas
jae
stos
outsl
mov
mov
pop
inc
pushf
stos
and
cld
aaa
sbb
adc
aaa
mov
sbb
inc
and
fwait
mov
loopne
popf
inc
int3
cmp
adc
push
mov
cmc
lahf
push
cmpl
lahf
push
sti
fldl
mov
test
fdivl
mov
pop
ficoml
and
mov
idivl
pop
into
xor
push
adc
jmp
and
dec
daa
loope,pn
mov
mov
orl
cli
outsb
daa
jno
sahf
shlb
mov
jbe
mov
nop
mov
cmpsb
mov
inc
jle
rcrl
and
stos
xchg
xchg
xor
movl
out
inc
stos
add
mov
je
and
mov
dec
scas
iret
dec
xchg
and
int3
lcall
adc
jle
mov
test
aad
sbb
mov
inc
in
pushf
int
out
or
leave
fwait
jo
cltd
stos
and
lcall
jo
and
mov
lret
push
sbbb
or
inc
fdivp
jnp
xchg
aam
lret
xor
xor
fadds
bound
inc
dec
stos
jge
xor
jno
inc
xchg
jge
jp
outsb
xorl
cmp
shlb
jne
into
and
push
iret
add
cs
jg
das
add
pop
mov
clc
pop
es
add
mull
loopne
sar
into
sub
and
xchg
add
fs
mov
fcoml
fstps
arpl
lahf
adc
dec
lods
pop
and
fmuls
lret
mov
dec
or
jo
push
icebp
push
or
jae
jecxz
pop
ja
inc
sbb
mov
jecxz
sarb
aas
stos
dec
sbb
pop
mov
imul
mov
jle
sbb
std
cmc
sub
and
add
pop
lock
lea
or
imul
mov
and
cmp
push
mov
pop
mov
popl
xchg
mov
push
mov
adc
pop
fbstp
push
jnp
and
enter
popf
xchg
and
sub
icebp
ds
pop
fisubl
fcoml
push
jecxz
stos
jmp
lret
sbb
jp
sti
repz
mov
inc
dec
dec
out
imul
jmp
lret
sub
jg
repz
mov
push
push
addr16
insl
fsubs
jmp
push
cltd
rolb
lds
inc
cld
out
bound
lret
lods
movl
add
jmp
push
add
sbb
ret
cmp
add
movl
add
loope
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
add
aaa
cli
adc
jb
xlat
inc
ret
jnp
je
xchg
ljmp
jge
mov
test
jp
daa
stos
cmp
push
jnp
in
mov
aam
xchg
in
in
scas
dec
inc
imul
pop
mov
decb
pop
and
xor
aaa
addl
test
add
pop
pop
rol
psadbw
ret
movsl
cmc
sub
in
js
in
mov
pop
add
add
ret
lret
inc
loope
sbb
jo
out
test
mov
pop
xchg
js
adc
popf
testl
andb
pop
insl
jno
neg
and
stos
sbb
mov
xor
mov
sbb
add
out
mov
or
sub
mov
mov
push
std
sbb
jb
sbb
jge
jecxz
pop
inc
mov
call
mov
pop
dec
sahf
das
test
arpl
fidivl
lock
pop
and
push
add
mov
ja
popa
dec
lods
dec
cmpsl
inc
add
push
dec
int
xor
mov
cmpl
push
jecxz
and
cmp
mov
aad
insb
xchg
sti
fcompl
cmp
int
mov
sub
je
imul
loop
dec
arpl
ss
adc
rcrl
mov
adc
cmc
mov
jp
or
dec
jp,pn
push
sbb
jnp
lcall
shll
mov
xchg
cli
repz
jns
push
push
jl
sbb
cmpb
mov
sub
imul
lock
push
loope
fwait
mov
std
out
mov
push
cmp
xor
repnz
mov
adc
jg
pop
add
or
lea
xor
nop
lret
dec
ss
mov
jae
fldl
push
test
inc
aad
pusha
jne
cmp
adc
aaa
sub
xor
lret
xlat
idivl
cwtl
fdivl
insl
sub
cmp
push
test
sarl
sub
rolb
das
enter
scas
roll
movsb
add
add
or
inc
jb
mov
and
xor
and
lcall
mov
rclb
push
jp
outsl
sti
loop
cld
aaa
hlt
jnp
xchg
call
repz
push
push
test
and
mov
mov
ds
push
mov
cmp
mov
xor
ss
ss
pop
aaa
rcrb
sbb
ret
jecxz
pop
cld
fmul
jae
cltd
add
ja
mov
xchg
jb
into
aam
xor
aam
cmpsb
add
add
dec
cwtl
js
mov
and
push
push
outsl
sub
inc
mov
sub
lret
push
push
sub
pop
push
push
enter
ja
add
xor
scas
imul
fwait
adc
outsl
daa
inc
stos
adc
decl
jle
stos
cmc
js
sub
fs
xchg
mov
jne
lock
insl
sbb
adc
fiaddl
in
movsb
dec
cmovnp
popf
mov
sbb
lcall
mov
sub
arpl
mov
insl
ret
in
mov
and
mov
and
test
hlt
cltd
inc
lret
loop
push
insl
inc
sbb
mov
mov
out
mov
mov
xor
cwtl
add
dec
cmp
jbe
mov
pop
add
jp
clc
mov
push
sbb
ljmp
sub
mov
ljmp
mov
cmpsb
pop
push
test
js
cs
jo
lock
lods
mov
addb
cmp
mov
jne
pop
mov
mov
cmp
sbb
sbb
std
and
in
jmp
cmp
outsl
push
add
jbe
sub
movsb
and
sub
mov
test
and
enter
ljmp
jle
cmp
dec
imul
pop
cmp
shr
sbb
mov
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
popl
inc
adc
aaa
cli
adc
loopne
pop
shll
fsubl
lret
outsb
bound
sbb
sahf
mov
pusha
dec
shll
scas
aaa
sbb
fucom
jo
test
outsb
dec
test
mov
mov
or
sbb
mov
push
or
mov
push
mov
daa
sbb
int
jge
dec
xor
dec
aad
sbb
mov
pop
xchg
adc
jb
stos
sub
sbb
les
mov
mov
dec
adc
adc
adc
flds
sarl
sbb
repnz
mov
negb
jo
sub
mov
xchg
xchg
mov
jmp
pop
mov
sbb
cmp
jl
sti
stos
int
or
loop
fbstp
shrb
stos
jbe
in
repz
stc
std
push
sahf
lods
inc
aad
add
xor
cmp
add
mov
int3
fld
ljmp
jns
jno
xchg
stos
xchg
adc
sahf
xchg
inc
dec
lret
xorl
mov
scas
fwait
pop
mov
std
pop
cmp
inc
or
sbb
sbb
out
imul
pop
xchg
cmp
mov
daa
out
xor
jno
xchg
or
inc
shlb
mov
fisubrl
mov
xchg
adc
scas
sub
pop
dec
pop
lods
dec
setge
inc
sub
cwtl
xchg
cmpsl
cmpsl
mov
ja
test
xor
mov
dec
imul
push
movsb
fidivs
and
and
jle
lret
int3
mov
cmp
stos
pop
cmp
mov
dec
push
dec
add
das
lock
and
jle
jns
push
jmp
leave
jecxz
pop
push
test
negb
fcompl
jge
aaa
cmp
test
xor
sbb
je
sub
loopne
roll
insb
or
int
push
in
test
and
sub
add
test
and
push
push
inc
pop
push
cmp
arpl
dec
out
jbe
push
jl
repz
push
push
pop
inc
sti
movsl
iret
notb
pop
es
dec
sbbl
cld
outsb
in
xlat
xor
and
mov
pop
push
mov
aas
addr16
dec
add
or
mov
and
cmp
add
sbbb
mov
lods
adc
sar
push
fnsave
dec
pushf
pusha
inc
mov
push
faddp
popa
dec
push
push
dec
mov
mov
cmp
pop
fs
add
aaa
dec
lods
mov
test
fcmovnb
in
push
imul
cmp
push
xor
sarb
xchg
jge
jmp
out
mov
outsb
dec
int3
sub
data16
push
xchg
inc
subl
pop
cmpsb
sbb
push
cmp
cmp
imul
cmp
add
push
loop
call
mov
movsl
or
fcomip
dec
lods
push
idivb
push
lods
ret
sbb
jb
nop
out
or
pop
xchg
and
insl
insb
mov
sbb
mov
rorb
movsb
mov
sub
idiv
iret
movsb
sahf
in
ss
jmp
scas
jne
fwait
neg
cmp
mov
mov
mov
sbb
loop
fidivs
add
xor
adc
mov
lock
add
in
add
lock
xchg
mov
sarl
adc
jae
sub
loop
mov
mov
mov
sub
mov
fildll
loop
jns
inc
adc
loopne
xchg
jecxz
mov
add
and
shrb
mov
jp
jp
mov
lahf
jb
loopne
test
inc
inc
dec
jne
and
xor
idivb
lret
idiv
sbb
pop
inc
dec
sbb
andb
xchg
cwtl
fwait
sub
mov
popf
jp
mov
cmp
adc
dec
lret
jns
mov
mov
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
sub
adc
cli
adc
and
or
lock
jl
cmpsl
insb
jno
xor
mov
adc
xor
push
push
xlat
data16
adc
fs
aad
xchg
mov
sub
shll
in
dec
ret
push
cmp
pop
mov
je
or
cli
dec
lret
adc
jl
add
sbb
test
cltd
sub
ds
xchg
ror
aas
insl
jl
addb
cmp
fsubl
cmp
sbb
xchg
mov
sbb
sub
jge
pop
adc
inc
insl
jo
lret
inc
pop
sbb
fsubrs
shll
dec
mov
hlt
xchg
cld
mov
adc
mov
push
insb
jbe
jp
mov
lea
xor
outsb
pop
jns
movl
icebp
loop
divl
inc
sub
lods
xor
push
lahf
test
fwait
mov
xchg
rcrb
push
push
int3
push
test
sub
adc
outsb
pusha
nop
mov
pop
mov
xlat
inc
insl
push
lea
sbb
imul
fstpl
ret
xchg
push
jae
test
insl
scas
lahf
jae
add
dec
filds
fnstcw
add
ds
cmc
fdivr
xchg
aas
xchg
mov
fsubl
call
ss
pop
scas
rcl
lods
xor
inc
and
cs
mov
repnz
mov
fbld
jne
enter
popf
ds
push
add
jo
out
jno
push
push
xor
mov
loopne
or
leave
test
jne
sbb
adc
sub
or
outsb
dec
xor
hlt
in
test
pop
pop
lret
orb
out
cmp
mov
nop
in
fnstsw
ljmp
push
lret
dec
jl
in
pop
jo
leave
popa
push
jmp
adcl
icebp
xchg
movsl
dec
cmp
repz
mov
xchg
jl
adc
cli
mov
das
js
push
ret
rcl
repz
mov
mov
in
std
xchg
rcr
push
and
mov
sbb
and
mov
aaa
movsl
out
inc
mov
adc
jnp
popa
out
pushf
pop
mov
adc
mov
jge
scas
or
out
mov
push
jecxz
andl
cmp
dec
js
jnp
mov
sarb
int
into
cltd
sbb
push
sti
test
stc
ljmp
jmp
and
xchg
in
test
and
mov
push
stos
std
inc
pop
gs
out
mov
mov
lods
mov
addr16
sqrtps
mov
fldt
cli
in
xchg
and
lahf
jo
rcrl
inc
xchg
loope
jl
adc
push
rcrl
aaa
les
dec
jge
rcrl
mov
pusha
xchg
jl
or
sti
fmull
lods
sarb
aaa
mov
add
inc
mov
test
icebp
stc
fbstp
cwtl
inc
mov
loope
test
sub
lret
aam
mov
cmp
sbb
mov
int
fsts
movsl
mov
mov
outsl
push
rclb
adc
pop
add
push
iret
mov
ds
outsb
and
jno
and
ficoms
inc
or
aaa
cmp
ss
mov
push
test
or
cmp
xchg
or
std
jmp
mov
add
dec
ljmp
mov
pop
dec
dec
or
xchg
adc
jecxz
stc
sti
inc
lods
fwait
add
cmpsl
push
daa
xchg
mov
dec
outsl
jge
adc
scas
out
js
pop
cmp
icebp
mov
inc
or
inc
mov
adc
aad
xchg
add
lock
jne
and
cmp
or
mov
push
cmp
mov
mov
sub
cld
push
cmp
ss
mov
cmp
test
push
xchg
xor
subl
or
inc
mov
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
and
push
xor
adc
cli
adc
into
push
inc
sub
mov
xor
insl
aam
sub
mov
or
sub
add
ds
jp
cmc
cmp
mov
mov
hlt
mov
icebp
mov
or
stos
jns
pop
lods
sub
movsb
js
dec
dec
adc
cmp
fistpll
inc
cmp
clc
insl
dec
mov
sbb
jns
jnp
dec
lcall
xor
into
pop
xchg
mov
in
xchg
popa
mov
repnz
js
pushf
es
mov
imul
test
add
push
mov
dec
arpl
mov
lret
or
push
inc
sahf
fnstenv
sub
pushl
pop
push
cmpsb
dec
xor
cwtl
cmp
mov
pop
lock
jmp
xor
or
fsubrs
das
in
jp
mov
adc
cli
xchg
adc
scas
xor
mov
mov
jp
mov
mov
loopne
test
jp
int
lret
in
movsl
arpl
aam
adc
jp
mov
push
pop
ljmp
mov
test
into
push
xorb
mov
mov
and
ja
cmp
pop
xor
and
push
movsb
hlt
and
or
lds
jl
xor
dec
outsl
pop
cmc
enter
jg
inc
jmp
sub
cmp
sub
in
int
mov
mov
or
jno
push
mov
bound
loope
ret
mov
mov
cli
jmp
insb
shlb
and
jmp
cmpsb
cltd
loop
ret
push
adcb
mov
adc
lea
jp
adc
lret
out
cwtl
jae
mov
lret
in
add
out
enter
punpckhbw
mov
stos
std
adc
sbb
insb
push
sbb
push
push
cld
addr16
sarl
inc
movsl
inc
push
or
push
cmp
jns
mov
sub
mov
ret
fst
push
pop
outsb
xor
mov
xchg
jne
dec
mov
mov
dec
in
cmc
cli
stc
int
jg
cmp
inc
ret
clc
out
mov
testl
push
out
pop
je
xor
dec
mov
sbb
cmp
xchg
pop
out
push
divl
movsl
loopne
in
inc
aaa
cmc
shlb
pop
adc
int
and
push
popf
hlt
cmp
and
aam
mov
int3
mov
stos
adc
jge
adc
xor
daa
shlb
shlb
xchg
jge
in
sub
jo
xlat
jg
lock
rcrl
call
dec
test
aam
pop
fs
lret
mov
je
mov
cmp
ret
jl
adc
lret
jnp
inc
adc
ret
stos
dec
adc
scas
jbe
mov
xor
jecxz
xor
int3
std
sub
jle
or
test
inc
mov
pop
adc
xchg
add
push
data16
fnstcw
lret
ds
xor
and
pop
xor
xchg
push
mov
push
dec
rcl
sbb
cld
mov
mov
add
stos
sbb
mov
mov
jb
or
cltd
mov
popa
sti
sub
insl
cmp
jle
jl
hlt
inc
stos
push
adc
add
popf
in
inc
outsb
mov
add
outsl
inc
cmpl
dec
in
adc
pop
jo
mov
std
sub
sbb
mov
movsb
daa
or
dec
loope
popf
test
loopne
sbb
setb
or
arpl
out
pop
xor
mov
push
call
add
push
push
pop
and
inc
push
sbb
dec
add
out
pusha
pusha
pop
lcall
insb
xor
inc
aaa
pop
jae
loope
ds
push
imul
jle
jae
cmp
ss
test
insb
push
xchg
pop
fimuls
adc
pop
es
or
mov
pop
mov
inc
adc
add
loopne
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
xor
pop
adc
aaa
cli
adc
rorb
scas
ret
cltd
test
push
mov
loope
mov
add
push
mov
imul
push
repnz
stc
out
xchg
clc
jg
and
mov
mov
clc
clc
lahf
nop
lea
je
and
shlb
xor
adc
jle
adc
sbb
repnz
rol
mov
mov
bound
mov
and
mov
fldenv
pop
lahf
sub
fildll
mov
test
sub
das
das
mov
sub
xchg
xchg
das
sbb
and
mov
lods
inc
popa
jp
jle
push
out
loop
sbb
out
arpl
ret
mov
flds
pop
cltd
bound
gs
in
int3
lret
stos
dec
test
inc
pop
in
mov
sbb
and
repz
pop
sub
clc
pop
jmp
fsubrl
stos
xchg
jmp
stc
aad
ljmp
je
std
xor
cmp
fsubl
mov
lret
cmc
sti
mov
pop
ja
bswap
loopne
sub
adc
push
flds
ret
fmull
or
ja
adc
mov
ljmp
or
xchg
jae
pop
lods
mov
mov
shrb
adc
negb
xchg
push
lock
insl
ss
orb
inc
insb
fldl
pushf
xor
pusha
out
js
je
out
frstor
pop
inc
cmp
push
cmpsl
ja
lret
xchg
clc
add
dec
cs
lret
pop
outsb
test
lahf
fwait
push
sbb
in
dec
movsl
xchg
cmpsl
fidivrs
in
push
les
xchg
stos
dec
testb
and
movnti
mov
inc
and
push
pop
fs
rclb
lock
fisubs
ficomps
icebp
and
mov
push
push
aaa
mov
insb
loopne
sub
and
xchg
pop
dec
mulb
pusha
iret
pop
test
test
std
xor
ret
mov
xchg
test
xchg
add
daa
jmp
xchg
jno
mov
aam
xchg
or
test
popf
pop
fnstsw
sbb
decl
mov
cld
out
xchg
fldt
lcall
popf
sbb
pop
fcomps
std
std
cmp
mov
rcll
pop
stos
bound
shr
xchg
add
jbe
or
sahf
mov
xchg
imul
mov
mov
ficompl
aad
mov
inc
or
sar
xchg
add
push
dec
out
sbb
adc
repz
pop
das
mov
push
sbb
repz
rcll
filds
rolb
adc
inc
les
pusha
mov
movsb
dec
insl
shl
addl
popf
push
inc
jb
lds
cs
push
push
cltd
lock
push
enter
in
jno
stos
or
in
push
decb
in
jbe
sbb
mov
jb
mov
add
cmpsb
out
xor
aad
xlat
mov
repz
rdpmc
repnz
mov
mov
mov
pusha
xchg
addr16
pushf
pop
and
pop
rolb
lods
mov
adc
cmp
pop
xor
cmp
jae
enter
dec
lcall
fucomi
adc
add
out
in
in
and
cmp
mov
shll
pop
mov
fcmovbe
inc
sbb
xchg
mov
in
mov
sbb
sub
popf
mov
test
mov
sbb
push
arpl
mov
pushl
adcb
mov
mov
adc
pop
mov
jle
or
test
inc
pop
xchg
pop
mov
loope
jnp
loopne
fldl
loop
xchg
enter
cmc
inc
mov
xchg
xlat
int
mov
sub
jnp
cmp
fwait
dec
push
sarb
mov
xor
data16
int
or
insl
push
push
test
cmpsb
mov
xchg
lahf
push
cwtl
clc
cwtl
jmp
ss
push
inc
or
cs
dec
lret
pop
and
arpl
pop
dec
xchg
mov
mov
jmp
add
sbb
mov
pop
push
xor
ficomps
adc
aaa
cli
adc
sbbb
mov
mov
xor
das
jo
pop
popa
sahf
faddp
mov
mov
mov
sbb
push
pushf
xlat
loop
sub
or
mov
mov
mov
push
inc
dec
xor
fs
sbb
jb
jmp
js
push
shrb
insl
cld
movsl
mov
cmpb
popf
subb
or
pusha
mov
dec
sbb
sarb
fsubrs
push
out
xchg
push
nop
in
push
cmc
jo
push
jge
adc
push
inc
in
push
and
outsb
push
mov
sbb
icebp
pop
dec
mov
in
pop
or
cmc
out
inc
fbstp
cmp
bound
mov
mov
rcll
mov
insb
repz
add
lock
push
arpl
xchg
in
fsubrs
daa
and
loopne
out
mov
loop
leave
ds
add
xchg
xchg
mov
cs
mov
sub
aas
mov
nop
jns,pt
mov
push
adc
mov
orb
mov
loope
cld
sub
pop
xchg
mov
and
mov
ret
xchg
add
push
ret
dec
push
lcall
dec
and
xchg
jge
sti
cmpsb
mov
sub
iret
popf
push
inc
jmp
push
fiaddl
ja
xor
adc
clc
xchg
bound
adc
xor
imul
out
lods
xor
lret
out
pop
cltd
js
mov
jo
mov
mov
mov
jbe
popf
mov
sub
cmp
xor
mov
xchg
sbb
aas
aad
xor
dec
jnp
lods
inc
mov
push
loope
aad
jne
mov
sub
repz
add
add
mov
mov
cmpsl
adc
repz
incl
lcall
dec
sbb
repnz
mov
add
jge
push
rcrl
mov
lds
test
jo
dec
sbb
jle
push
or
xchg
pusha
iret
adc
mov
clc
lea
xchg
mov
daa
dec
jp
ret
lods
mov
test
lret
xchg
pop
fiadds
imul
add
insb
xchg
or
iret
out
pop
nop
imul
dec
cmp
jmp
je
adcb
add
sub
stc
lea
push
incb
popl
push
mov
fildl
lcall
daa
inc
daa
out
fistps
or
xchg
push
mov
push
dec
cs
mov
mov
orl
xchg
mov
inc
rcl
pop
mov
je
out
cld
lcall
inc
dec
dec
data16
clc
pop
lret
and
clc
mov
lcall
aad
push
sub
sbb
mov
dec
inc
mov
repz
aas
xchg
out
sub
jbe
dec
lret
scas
xor
xchg
pop
cltd
push
lods
cmc
push
call
mov
dec
or
xor
push
int
enter
enter
mov
mov
cmp
inc
pop
xor
adc
jo
sub
or
jl
fwait
inc
pushf
in
ds
shrl
test
aad
xchg
sub
int3
push
notl
movsb
mov
shrl
push
push
cmp
cmp
and
loopne
repz
mov
arpl
xor
into
sti
pusha
lea
scas
loopnew
ja
jg
xchg
call
test
cmp
sub
arpl
mov
and
mulb
in
mov
mov
push
push
std
push
cmpsb
sub
xor
test
add
mov
cmp
pusha
call
in
sarl
je
aas
dec
jns
addl
popa
cli
sbb
ss
push
sub
movsl
push
and
lea
mov
adc
lods
enter
add
shlb
enter
add
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
dec
mov
adc
aaa
cli
adc
sub
fdivrl
push
je
lcall
add
lcall
inc
adc
and
sar
daa
fsubrs
test
or
movsb
int
fs
ljmp
fldl
xchg
shl
inc
loope
sub
mov
mov
pop
incb
pop
aam
and
mov
mov
std
push
cmc
cmp
hlt
mov
lahf
adc
adc
add
iret
xor
pop
pop
and
jo
aas
jg
arpl
shrb
lret
int
or
daa
adc
or
xchg
js
scas
sbb
cs
test
scas
jo
pop
or
mov
xchg
shl
aas
fidivl
test
stos
imul
incl
mov
sbb
stos
int
insl
sbb
mov
cmp
test
mov
jmp
pusha
fwait
repnz
fmuls
add
sub
gs
mov
test
lea
xchg
sbb
xchg
xchg
mov
insb
lea
add
lea
lret
inc
or
mov
div
gs
jnp
ljmp
ja
ret
jl
pop
pop
sub
push
or
int
test
ss
js
jp
mov
insb
jbe
sbb
sub
mov
fimuls
or
inc
out
pop
lret
insl
sbb
aad
cmpsl
jb
mov
dec
jge
jne
cli
xor
xor
push
and
mov
pop
mov
sub
mov
sbb
push
bound
in
js
mov
mov
fisubrs
xor
xchg
in
pop
pusha
loop
xchg
lret
xchg
xor
movsl
test
mov
sub
ret
bound
inc
call
add
aad
lock
gs
push
xor
aas
adc
sbb
jns
lock
lds
jbe
push
mov
or
mov
jge
lcall
repz
sbb
add
or
movsb
pop
jge
cmpsb
cmp
mov
jne
dec
in
and
cwtl
test
xchg
push
test
mov
outsl
mov
sub
dec
xchg
push
stos
enter
push
addr16
mov
hlt
or
cs
cmp
lcall
stos
arpl
dec
es
fnstenv
fidivl
fcoms
lods
out
fidivrl
push
mov
mov
fcmovnbe
insb
xchg
outsl
push
popf
xchg
pop
cld
dec
fwait
scas
or
inc
rclb
jg
mov
lods
imul
scas
lods
or
mov
ja
movsl
test
lret
in
mov
jp
mov
inc
pop
xchg
xor
add
mov
pop
iret
sub
ret
xlat
sub
ret
nop
loope
pushf
ficompl
cld
in
jb
adc
fisttpll
fdivl
inc
inc
into
xor
cld
into
pop
sub
popf
and
rcrl
addr16
dec
sarb
jb
push
cs
test
aaa
xor
subl
sahf
out
xchg
inc
test
mov
sbb
scas
outsb
push
mov
and
arpl
pop
cmp
push
xchg
push
mov
push
mov
inc
dec
pop
addr16
xlat
bts
cmp
fiadds
dec
mov
mov
int
add
outsb
push
outsl
stc
and
push
sbb
sub
push
and
dec
iret
xor
mov
sbb
pop
dec
push
jb
mov
mov
xor
inc
sub
cld
in
loopne
mov
add
jle
pop
xchg
pop
pusha
xchg
int3
mov
aam
sti
push
test
test
dec
and
sbb
rcrl
data16
xchg
mov
fstps
cmp
outsl
je
and
decl
loopne
lods
scas
or
jae
lret
leave
mov
inc
adc
fwait
jnp
mov
call
adc
and
out
push
lahf
adc
xchg
xor
dec
xor
xor
mov
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
push
adc
aaa
cli
adc
sbb
push
push
mov
xchg
jl
cmp
push
sub
jg
and
jge
and
dec
push
mov
test
ja
loop
xchg
mov
pop
repz
lock
mov
int
push
fs
jmp
inc
push
jo
push
dec
mov
and
test
lods
lret
data16
and
inc
lods
cmpsl
aaa
sti
mov
or
mov
adc
cmpsl
pop
lock
pop
stc
pop
popf
rclb
popf
jnp
aad
call
mov
nop
xchg
pop
out
add
xchg
decl
mov
popa
call
mov
pop
ljmp
out
ret
cmp
pop
jns
xchg
dec
ficomps
xor
jecxz
push
pop
movsl
or
scas
test
mov
rol
inc
gs
xchg
jg
dec
lret
xlat
sti
inc
aaa
xchg
fcom
movsl
inc
insb
dec
pop
jle
and
negb
out
cmp
inc
dec
loope
lods
outsb
pop
inc
mov
je
push
stos
cmp
je
jecxz
push
push
fistl
mov
add
cmp
test
xor
mov
pop
inc
mov
dec
cli
call
dec
sbb
sahf
xchg
cmp
adc
cs
add
cs
push
aam
mov
rorl
xor
and
cmp
mov
fisubs
daa
and
test
mov
or
ret
clc
cltd
sbb
sbb
jae
xor
lods
lcall
add
sub
or
js
js
jmp
xor
push
cli
push
add
push
in
into
mov
cmp
int
mov
push
popa
mov
cmpsl
jecxz
or
sti
xor
lret
shl
push
fimuls
pop
outsb
cmc
inc
mov
out
add
sub
movsb
icebp
cwtl
jge
dec
sbb
pushf
scas
incl
fsubl
cltd
sbb
or
dec
out
iret
scas
fwait
sub
adc
lods
fstl
iret
push
adcl
dec
or
ror
xor
fld
cmc
pop
pop
cmp
xchg
xor
out
and
sbb
sbb
arpl
aad
jne
push
inc
jp
push
jle
lahf
orb
out
mov
push
in
lds
or
lahf
mov
xchg
or
mov
xchg
stc
inc
inc
mov
fs
je
pop
bound
lcall
mov
push
inc
pop
in
mov
xchg
lahf
into
cmc
mov
mov
dec
push
and
cmp
cmp
adc
aas
iret
inc
jl
dec
inc
gs
push
es
sar
test
data16
xor
ret
inc
and
pop
jecxz
test
adcl
fdivrs
dec
mov
sti
or
jnp
movsl
mov
push
or
pop
push
dec
subb
ret
mov
loopne
rclb
gs
stos
call
mov
mov
into
cld
nop
xchg
pop
fstp
pop
and
insl
jo
jae
adc
mov
dec
mov
sbb
sbb
flds
cmp
lcall
dec
out
jbe
leave
dec
cmp
jecxz
and
stos
mov
mov
or
js
in
ljmp
bound
addr16
in
mov
dec
pop
mov
out
sbb
hlt
jo
lret
jl
rclb
imul
pusha
push
ret
das
addr16
mov
cmp
xor
sbb
rcll
xchg
push
dec
in
inc
dec
gs
mov
or
and
roll
inc
xor
movsl
out
cmp
imull
xchg
in
pop
shlb
lea
mov
mov
inc
ljmp
inc
enter
adc
cltd
sub
scas
inc
jae
dec
xchg
adc
pop
xlat
lock
imul
push
xchg
dec
pop
call
and
popa
sub
pop
mov
inc
and
jo
insb
xor
fstpt
dec
cwtl
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
std
adc
aaa
cli
adc
lds
fnsave
ret
outsl
adc
test
adc
and
movsl
pop
jmp
out
or
lds
fwait
cmc
fdivl
pop
pop
fsub
dec
stc
pop
sbbl
outsb
push
ficompl
mov
sbb
ret
xchg
das
sub
cmc
mov
pop
cmp
jb
insl
dec
imul
cmp
testl
mov
push
jp
dec
mov
gs
idivl
mov
xchg
adc
out
lret
stc
xchg
sub
adc
mov
adc
cmc
in
xchg
gs
arpl
lock
jo
push
pushf
pushf
repz
js
mov
cld
sahf
xor
stc
pop
test
and
cmp
mov
mov
test
hlt
mov
adc
cwtl
rolb
mov
popa
xchg
mov
jmp
or
out
xchg
mov
lods
inc
outsl
clc
pop
sub
cli
mov
jae
loope
inc
sub
or
and
aam
mov
push
push
add
ret
popf
mov
test
pop
mov
vmaxss
dec
sbb
nop
outsl
fs
data16
fdivrs
sar
cmp
xchg
hlt
or
addr16
aaa
dec
dec
aas
iret
mov
add
push
cmp
sub
stc
scas
jmp
push
add
sub
ljmp
push
cmp
cmp
xchg
cmpsl
sbb
or
es
ljmp
outsb
push
pusha
mov
popf
ljmp
das
xor
xor
sub
nop
push
scas
scas
daa
pop
cmp
sti
jb
add
dec
sbb
xchg
incb
push
mov
add
jne
push
out
push
mov
popa
hlt
mov
in
mov
sub
fcmovnb
ss
aaa
cmp
fbld
or
mov
fsts
lea
ret
xchg
das
lods
testb
idivl
cmp
ss
enter
dec
dec
sub
es
pop
or
cli
aas
out
push
sbb
xchg
lock
mov
in
movsl
js
mov
lahf
popa
push
dec
hlt
pop
rcll
xchg
fisubs
sbb
das
push
add
add
sarl
mov
sub
mov
xor
mov
fbstp
movsl
xorb
in
bound
sub
pop
shll
iret
leave
stos
js
adc
cmp
pop
dec
lods
sub
sahf
adc
jmp
inc
adc
loope
or
mov
dec
or
mov
aad
mov
lahf
jae
push
inc
movsb
adc
daa
in
movsb
mov
ds
mov
rorl
jns
adc
mov
cmpsb
and
in
pop
xchg
scas
jno
xor
shlb
mull
mov
inc
sbb
mov
or
xor
pop
leave
inc
push
scas
mov
rcrl
xchg
dec
xlat
and
stos
xchg
and
jo
ss
outsb
lret
lea
jge
jl
jle
pop
divb
cmp
push
inc
dec
aaa
loopne
push
test
notb
jns
jl
adc
add
pushf
pop
mov
andb
push
pop
rcll
push
out
inc
aam
movsb
xor
sub
pop
xor
aas
sarl
in
pop
xor
sbb
xchg
dec
cmp
out
jb
mov
and
shrb
mov
adc
popa
lcall
popa
pshufw
out
sbb
gs
ret
mov
stc
xor
and
arpl
fsub
jp
shll
mov
js
sbb
adc
dec
mov
aaa
arpl
dec
mov
jne
stos
inc
ja
sbb
jmp
pusha
push
loope
fwait
ret
negb
cld
and
lea
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
dec
iret
add
adc
cli
adc
fstps
inc
pushf
dec
movsl
mov
arpl
xor
mov
dec
push
inc
aas
push
sbb
jg
pop
int3
dec
stos
and
ja
fisubrl
test
aad
std
mov
scas
loop
fnstcw
xchg
jno
outsl
lea
out
adcl
inc
loopne
pop
and
leave
pop
adc
mov
cmp
mov
jp
xor
pop
sub
jge
andl
mov
push
icebp
adc
test
jg
rcr
xor
repz
loopne
cli
out
xchg
sbb
imul
xchg
dec
inc
js
divb
inc
pop
ja
jmp
pop
js
adc
sbb
scas
movsb
js
jno
or
inc
gs
mov
xor
cli
lea
sub
or
lret
dec
and
loopne
or
mov
mov
mull
sahf
push
loop
cmpsl
mov
sbb
out
mov
cmp
aad
int3
std
mov
sub
mov
xor
shl
rcrb
inc
ret
adc
rcr
out
jae
and
cli
fidivrl
pop
push
mov
test
pop
mov
loope
int
mov
in
and
dec
aad
cmp
jl
test
push
lret
inc
aas
enter
scas
addr16
es
mov
js
adc
outsb
push
pop
fildll
push
mov
es
push
mov
into
nop
fcmovnu
icebp
sub
and
mov
jecxz
lret
pop
pop
cmpsb
repz
jge
fistl
pusha
gs
lods
inc
hlt
ret
xor
push
or
lret
imul
scas
gs
addr16
mov
cmp
les
inc
add
xor
cmpsb
or
fidivrl
cmp
stos
addr16
mov
push
mov
clc
daa
outsb
ret
mov
jns
push
ja
pusha
pop
jmp
inc
fdivrl
add
sahf
fcoms
or
in
jmp
or
popl
stc
cmp
jp
mov
pop
loope
daa
pop
and
outsb
sahf
jae
sti
push
mov
sub
lock
sub
add
dec
push
ret
fwait
xchg
xor
or
cld
xchg
pusha
xchg
sub
mov
cmp
aaa
cmp
rcrb
out
hlt
mov
and
jns
loope
inc
rorb
jbe
xor
test
sahf
jb
ja
inc
das
lahf
cmp
cmp
pop
fists
add
mov
push
jnp
insl
imul
jp
popf
dec
aad
cmovl
out
fdivrl
cli
ficomps
inc
lret
push
pop
sub
mov
arpl
jns
sbb
pop
xor
int
mov
xchg
sarb
or
push
hlt
subl
imul
cs
add
mov
stc
jle
sti
push
mov
sarl
and
jle
aas
push
xor
jb
push
jge
roll
sbb
mov
adc
xor
mov
iret
mov
xchg
movsb
in
cmp
scas
sbb
mov
frstor
push
mov
out
lods
inc
dec
pop
pop
xor
loope
jo
add
out
mul
popf
fnclex
icebp
fdivrs
addr16
jne
insl
pop
xchg
loope
mov
arpl
in
subl
jno
in
das
pop
add
in
cwtl
dec
jg
cld
jmp
incb
add
clc
imul
sbb
push
fcmovne
dec
shll
outsb
fidivl
or
icebp
popa
in
mov
imulb
pop
fcmovbe
lods
repz
push
pop
sar
and
leave
push
lds
pusha
sub
pop
pop
fcmovnbe
cmp
stos
cmpsb
in
push
repnz
aaa
aaa
inc
test
xchg
jp
pop
andl
pop
rcll
sbb
mov
ljmp
scas
sub
add
gs
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
adc
adc
aaa
cli
adc
clc
daa
js
jns
pop
xor
push
add
mov
outsb
jl
pop
aad
enter
xor
inc
mov
insb
inc
xchg
adc
or
repnz
int3
sbb
stc
push
push
mov
xor
pop
hlt
fdivrs
mov
and
aaa
dec
sbb
mov
inc
cwtl
in
push
js
pop
push
lods
sbb
sbb
cltd
jg
fsts
mov
pop
movsb
xor
sti
ja
cltd
or
stc
aam
testb
push
dec
mov
in
imulb
push
int3
icebp
cmp
adc
neg
test
cmp
shll
jnp
mov
sahf
push
push
rcl
pusha
pop
inc
scas
repnz
xchg
sbb
dec
bound
xchg
push
js
dec
inc
fsubrl
inc
dec
push
dec
mov
insl
sbbl
or
aad
lret
mov
adc
mov
in
es
cmp
inc
cmpb
and
mov
dec
or
decl
stos
cs
dec
mov
shll
in
stos
cmp
mov
pop
xchg
cmp
or
mov
and
lahf
jnp
ljmp
cmpsl
and
push
pop
rcr
stc
pop
outsb
dec
pop
sbb
in
xchg
sub
scas
xor
sarl
jno
test
pop
daa
and
push
out
xchg
push
test
and
mov
imul
dec
call
clc
or
push
addr16
rcll
push
adc
pusha
cmp
aad
adc
or
leave
and
xchg
loop
xor
pop
jae
mov
adc
pop
adcl
rorb
cmp
mov
cmp
ja
jae
jp
cli
xchg
jo
sub
push
add
repz
jne
push
pop
call
jnp
shlb
jmp
pop
in
dec
mov
sbb
push
inc
add
pcmpeqd
jno
sub
js
sbb
scas
mov
rolb
imul
cmp
popa
outsl
inc
add
orb
cwtl
rclb
dec
clc
orb
shlb
addr16
cltd
sti
mov
int3
jmp
js
lock
sbb
add
leave
xorb
ret
mov
dec
int3
jl
stc
mov
push
int
cmp
and
rcrb
inc
js
ja
es
cmp
sbb
cmpsb
shrb
mov
mov
les
shl
aad
push
inc
inc
push
test
sub
out
outsl
mov
mov
jnp
push
adcl
stos
dec
into
mov
test
loop
rcrl
je
jmp
addr16
xchg
mov
and
mov
les
xchg
inc
dec
jae
loope
int3
mov
xchg
jmp
inc
outsl
dec
rcr
cmpsb
mov
mov
mov
sbb
in
mov
push
pushl
es
data16
cmpsl
loopne
cmp
lods
sahf
test
dec
shrl
daa
push
jo
or
enter
jg
idivl
cmpsb
jb
xchg
fimull
jae
add
jmp
pop
push
addr16
out
cmp
adc
push
lret
push
stc
sbb
mov
dec
push
iret
and
push
mov
repz
pop
mov
gs
push
out
dec
sub
aam
xor
or
and
lret
inc
sub
mov
ror
add
inc
lret
xor
or
das
dec
mov
xchg
sub
lds
pop
lods
cli
scas
aad
push
inc
fildll
call
das
scas
sahf
mov
dec
and
cmpsl
sub
imul
mov
std
gs
ret
push
push
jge
mov
fs
arpl
in
aaa
sub
or
inc
and
sub
xor
xlat
and
addr16
aad
daa
lret
inc
xchg
stc
lods
adc
mov
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
out
dec
roll
aaa
cli
adc
imul
mov
push
test
xor
in
push
jl
imul
add
sbb
xchg
call
xchg
or
in
add
xor
sbb
add
arpl
add
int
xchg
aaa
ds
in
pushf
or
js
add
sbb
jge
adc
sbb
and
cltd
into
push
mov
xchg
push
les
ficomps
mov
adc
cmp
inc
push
cmp
push
xchg
xchg
push
xor
mov
lret
sbb
lret
test
aaa
addr16
mov
fisubs
jl
sub
cmpsb
inc
cli
mov
fimull
lods
pop
js
sarl
sub
pop
test
mov
mov
pop
xchg
cmp
push
xchg
jnp
mov
stc
negl
or
testb
mov
and
inc
pop
pop
lods
dec
shrl
scas
jle
mov
imul
lods
sub
rclb
xchg
test
popa
imul
lahf
pop
xchg
ja
addr16
call
and
loope
test
data16
and
pop
ds
out
stos
jecxz
outsl
sub
mov
xor
pop
lahf
enter
ret
or
mov
mov
and
mov
pop
pop
xor
mov
sub
and
loop
sub
aad
movsb
in
cmp
icebp
xor
into
subb
hlt
in
ror
fxch
in
and
orb
add
and
push
and
cwtl
mov
hlt
sub
fidivs
loop
iret
sbb
jb
das
test
jle
arpl
mov
out
adc
cmpsb
adc
dec
push
xlat
add
or
add
popa
prefetch
pop
xor
sbb
aam
notl
outsl
leave
inc
je
icebp
mov
add
hlt
add
jmp
nopl
xchg
sahf
mov
xor
das
ds
mov
idivl
in
cmp
mov
shll
cld
pusha
sbb
imul
int
jo
inc
imul
iret
adc
lea
jp
dec
fsubs
xor
push
jge
mov
ja
jbe
push
pop
cmp
xor
xchg
movl
cwtl
push
mov
xchg
outsb
lods
cwtl
mov
testl
jns
inc
jmp
xchg
pop
and
loop
jb
inc
call
sbbl
test
clc
int3
mov
packuswb
pop
cli
mov
imul
dec
sbb
xor
stos
sbb
adc
mov
inc
jno
cltd
sub
aam
outsb
jb
clc
mov
cltd
or
jne
ror
pop
push
fisttps
imulb
aad
iret
fcoms
out
mov
pop
test
ds
enter
xlat
repz
lock
enter
pop
pcmpgtw
inc
xchg
pop
sub
cmp
mov
cwtl
fisubs
jne
jns
and
fisubl
xchg
hlt
push
mov
inc
rcr
xchg
sub
out
aad
xor
rcrl
mov
adc
add
jmp
pop
fisttps
test
out
int
cmp
es
frstor
mov
push
mov
cmp
out
adc
inc
and
je
xchg
push
adc
sub
rorb
sahf
mov
sbbb
and
pop
decl
mov
xchg
data16
xchg
int3
or
jno
dec
jne
and
pop
xlat
ss
nop
fcmovne
js
push
lret
mov
jb
lock
negl
jae
stos
test
xchg
mov
add
mov
mov
call
pop
adcb
xchg
and
fcompl
call
jl
aad
jecxz,pt
outsl
xchg
sub
imul
fwait
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
adc
adc
aaa
cli
adc
test
pop
pop
xchg
mov
dec
mov
sahf
test
outsb
ss
mov
jno
cmp
and
cmc
mov
mov
jle
xor
xchg
inc
loope
push
loop
xchg
sbb
cli
xchg
movsl
sbb
lds
jp
or
mov
and
fwait
inc
inc
inc
cmp
sub
mov
jne
movsb
mov
cwtl
sub
mov
sbb
movsl
into
add
inc
mov
pop
pop
sysexit
xor
sbb
lret
xchg
fs
fisttpl
mov
sbb
movsb
iret
pop
xchg
mov
and
cmc
jb
js
faddp
cmp
xor
out
outsb
xor
pop
jae
pop
rolb
cs
or
add
mov
jnp
repz
ret
mov
dec
xchg
std
xchg
mov
inc
jecxz
mov
cmpsb
scas
cld
pushf
int
add
loopne
and
pop
mov
adc
mov
add
dec
adc
divb
sub
xchg
xchg
mov
xor
je
adc
shrb
lret
mov
repz
or
mov
pop
and
xor
stc
addb
popa
lods
adc
xchg
mov
dec
lds
dec
sbb
pusha
add
mov
push
mov
ret
add
xor
add
pushf
test
pop
les
popf
jns
ret
push
mov
outsb
sbb
cmpsb
loopne
in
dec
cmpsl
pop
ror
data16
or
cmp
lock
add
mov
mov
push
movsl
add
mov
loope
stos
jl
push
adc
and
cli
pop
jmp
in
mov
aaa
loopne
test
fdivl
das
adc
leave
sub
lods
je
cmc
mov
xchg
mov
mov
ja
jne
xchg
dec
stc
lds
adc
sarl
loopne
and
jnp
cmpsl
jae
fisubs
call
into
cmpsb
xcrypt-ofb
cmpsl
sub
out
sbb
loop
mov
jbe
cmp
jecxz
lods
cld
popf
test
push
sub
rorl
inc
pop
lret
ja
and
idivl
xor
mov
clc
mov
nop
jg
jns
cmp
ds
inc
out
mov
xor
sbb
iret
dec
xchg
pop
rorb
jno
lahf
testb
pop
and
rolb
pop
fldenv
mov
jmp
rorb
sbb
cmp
addb
icebp
xlat
mov
cs
add
outsl
pop
adc
xchg
sbbb
mov
pop
sbb
jl
mov
sub
loop
cs
outsl
adc
sub
fnstcw
mov
push
aas
inc
xchg
fildl
sahf
push
adc
xor
pop
rcr
sub
pop
ret
mov
jnp
aas
sahf
sti
cmp
pop
jne
push
jl
jmp
lock
bound
and
out
xor
lds
femms
test
adc
jmp
incb
lcall
push
movsb
sbb
hlt
sub
loop
push
mov
fnstenv
adc
gs
pop
lods
test
sahf
es
fnsave
cld
and
adc
icebp
stos
out
outsb
aas
into
in
push
xor
inc
lods
mov
aam
dec
lret
stos
fldl
or
inc
adc
and
imul
pop
scas
arpl
push
jno
pop
mov
jecxz
fucom
cli
jb
fwait
mov
mov
popa
call
cmp
mov
xor
les
pop
rol
mov
mov
mov
mov
mov
out
shr
mov
popf
js
cmpsl
xor
andl
dec
pop
adc
jns
out
jl
rcrb
adc
cmp
mov
mov
adc
lahf
adc
mov
mov
loopne
jl
or
lret
fcmovne
sub
and
test
push
rorb
pop
inc
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
pop
rcll
cli
adc
cmpsb
sbb
jb
movsb
stos
arpl
fimull
lock
addb
pop
xor
and
pushf
and
mov
imulb
ja
fistpl
dec
lods
out
sahf
stos
mov
or
les
cmp
sbb
xchg
shl
xchg
mov
and
xchg
or
jg
add
fwait
sub
add
xchg
add
cmp
xor
or
and
xor
xchg
jecxz
es
ret
fadds
dec
mov
inc
in
hlt
loopne
lcall
cmpsb
std
std
outsb
cmc
sub
or
es
sbb
les
adc
push
push
jle
loop
jg
fwait
fs
test
outsb
and
mov
push
sub
fsts
and
sbb
test
mov
push
adc
outsb
xor
jno
or
cld
enter
inc
out
adc
mov
xchg
pop
push
mov
std
xor
xchg
xor
dec
pop
sbb
stos
test
jne
mov
xor
mov
loop
popa
push
std
shrl
pop
leave
add
xor
loop
scas
stos
sarl
sbbb
test
jnp
imul
inc
lret
jb
push
les
add
sbb
push
sbb
mov
lods
frstor
movsl
xchg
dec
shlb
mov
out
inc
push
lret
ret
push
mov
or
push
xchg
outsl
adc
mov
and
mov
mov
mov
xor
mov
movsl
divb
push
gs
xor
mov
mov
push
dec
mov
xchg
subl
lret
mov
cmp
dec
arpl
cltd
frstor
std
out
out
jno
jne
cmp
xchg
clc
scas
dec
fsubl
mov
xor
mov
es
jno
or
add
inc
inc
and
sub
rorl
jne
mov
sub
or
rolb
mov
fists
sbb
mov
pop
mov
in
and
xchg
push
push
inc
in
push
jo
dec
xor
rolb
jbe
bound
divl
dec
gs
jp
mov
pusha
mov
imul
and
and
iret
lods
daa
mov
mov
sbb
cmpsl
lock
out
cmpl
lcall
inc
push
sarl
insb
jmp
sbb
aad
add
notb
xorb
mov
test
shrl
xchg
push
cmp
notb
dec
sub
fstl
sti
lock
call
ret
fiaddl
into
adc
test
inc
pop
mov
lea
mov
clc
mov
inc
ret
cmp
scas
mov
out
in
test
test
movsl
lods
in
clc
fsubrl
sarb
inc
mov
arpl
movsl
dec
jle
xor
orb
cmc
bound
mov
mov
stc
mov
outsb
fisttps
or
scas
sahf
lahf
pop
jle
mov
cltd
adc
sbb
or
jp
inc
movsb
and
xor
cwtl
lock
andl
loop
or
xchg
enter
xor
clc
xchg
mov
gs
rorb
push
rclb
push
inc
in
lret
jno
enter
leave
adc
in
sarl
fbstp
jnp
movsl
dec
ret
cmp
movsb
fdiv
shl
stos
sbb
lret
push
mov
jp
mov
mov
push
cmp
ds
shrb
cmp
sbb
mov
bnd
lret
push
mov
cmp
lds
stc
fmull
dec
adc
stc
rol
xchg
in
cmp
mov
mov
sti
rcrl
pop
pop
inc
test
gs
jmp
lea
adc
leave
xor
test
adc
cli
adc
popa
inc
inc
lods
call
cwtl
into
mov
mov
xchg
mov
pop
int
push
xchg
int
or
fwait
aas
mov
push
cmp
sub
push
ljmp
out
cmpsb
jp
cmpsb
dec
popf
fwait
add
mov
ljmp
repz
jmp
stos
pop
mov
and
inc
scas
leave
add
adc
mov
fwait
add
jns
fmulp
push
push
push
or
popf
jno
adc
cld
jnp
pop
orb
mov
and
adcb
dec
jb
add
imul
xchg
out
jp
stc
shrl
sti
add
cmp
data16
push
orb
cmpsb
pop
sbb
jbe
lods
mov
xlat
pop
adc
fldt
je
xor
leave
lods
mov
outsb
ds
pop
jge
xchg
or
xor
mov
aad
ret
sub
jle
mov
repnz
push
jmp
sbb
loop
jg
xor
mov
jbe
xchg
push
xor
inc
sbb
js
dec
out
lret
jmp
pop
jae
int
mov
dec
inc
test
mov
pop
jno
aaa
outsb
and
in
jle
mov
mov
fldt
cmpsb
nop
fidivrs
cmp
jno
inc
shrl
jb
dec
xor
add
leave
daa
idivb
add
dec
inc
add
xchg
loope
loopne
cmp
hlt
pop
and
mov
cmp
jmp
ror
adc
mov
stos
pop
xchg
movsl
pop
push
sbbl
mov
push
adc
insl
mov
push
or
aas
movsb
decl
sbb
mov
xor
insl
push
lcall
jle
sbb
shll
rcr
cli
dec
xor
mov
and
cwtl
xchg
push
rcr
jg
xor
mov
jae
leave
xlat
jns
or
cli
bound
mov
insl
cmc
lea
xchg
repz
negb
into
fistps
xor
mov
fdivrl
insl
xchg
and
sbb
cmp
into
jmp
mov
fnstcw
sub
fcompl
sbb
dec
neg
nop
mov
mov
xor
dec
js
fsubr
mov
and
xchg
int3
add
movsl
in
and
or
fmull
fstl
les
pop
dec
or
mov
lds
sbb
ret
mov
cmp
pop
add
rcll
or
pop
movsb
je
pop
mov
out
mov
or
sbb
adcb
xchg
je
jmp
sub
out
xchg
sbbl
cli
sbbl
inc
push
xchg
jle
pop
inc
xchg
fnstenv
movsb
or
popf
inc
mul
sub
xlat
or
or
sub
cwtl
xor
idivl
sbb
jg
leave
or
dec
insl
sbb
pop
mov
or
and
fadds
mov
dec
out
cmp
mov
je
nop
or
lock
add
mov
or
leave
adc
cmp
mov
xchg
add
pop
mov
or
xchg
fldt
jecxz
into
scas
dec
push
add
fiaddl
out
pop
mov
outsl
add
push
cmpb
jne
add
out
inc
jge
or
je
xor
push
aam
jmp
pop
inc
add
xlat
jl
call
andb
or
loop
dec
fiaddl
ss
mov
into
mov
pop
arpl
call
xchg
inc
and
xor
fst
cs
in
fcoms
in
jno
das
and
into
adc
rcll
loop
mov
mov
ret
mov
mov
add
in
xchg
cmp
lods
enter
add
ljmp
out
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
adc
stos
neg
call
xor
repz
xor
popf
inc
aad
adc
mov
fbstp
and
subl
add
mov
and
sbb
lret
mov
dec
sub
mov
pop
adc
pop
pop
loop
sbb
sarl
add
imul
cs
pop
addl
call
mov
inc
or
nop
ret
jg
roll
ss
dec
mov
pmaddwd
into
add
mull
and
sbb
call
addr16
pop
sar
pop
movb
mov
jns
xchg
lods
mov
jl
dec
out
jp
fcompl
mov
mov
nop
jmp
dec
dec
scas
addr16
adc
inc
jbe
inc
jb
arpl
repnz
aam
inc
push
jg
nop
ret
cwtl
xor
scas
xchg
sti
mov
adcb
and
in
push
lea
out
mov
insl
pop
mov
inc
outsb
loop
pop
sbb
or
pop
push
movsb
inc
sub
lock
punpcklbw
jle
jno
das
sub
out
xchg
shll
mov
jns
pop
les
mov
mov
test
and
pushf
shlb
fistpll
in
cltd
mov
fmul
enter
ljmp
push
imul
mov
gs
mov
xor
inc
cmc
xchg
sbb
or
faddl
pop
lea
popf
stc
lods
and
mov
xchg
dec
inc
popf
mov
mov
daa
fs
mov
sarl
fnstcw
dec
hlt
jno
gs
adc
scas
shll
add
jae
sub
sub
and
enter
rcrb
sbb
in
xchg
pusha
lods
or
adc
push
add
pop
fistps
test
or
jbe
mov
leave
int3
add
jb
jecxz
inc
cmp
ret
stos
sbb
fidivs
jne
jecxz
dec
add
mov
mov
mov
es
push
ret
mov
fstpl
xchg
or
dec
fdivl
int
std
std
les
dec
or
out
not
jle
in
and
pop
mov
bnd
dec
cmp
dec
loop
or
cmpsb
je
jo
sub
cltd
in
notb
sbb
pop
jo
stos
icebp
fimuls
sub
push
cli
or
and
movsl
bound
cmpsb
pusha
aam
inc
bound
arpl
mov
fcompl
shrl
push
cwtl
lds
push
subb
dec
js
mov
rcrl
cmp
mov
fiaddl
xchg
js
jns
mov
dec
ss
out
cmp
cmp
sbb
or
pop
lods
bound
mov
cmpsb
les
and
mov
cmpsl
cmp
sbb
cmp
in
imul
subb
imul
jae
cmpsb
jmp
or
adc
pop
xor
cmovge
icebp
lods
dec
sub
sarb
mov
dec
add
fdiv
sbb
push
scas
pop
es
dec
cmp
jno
jbe
out
sahf
test
subb
push
stos
lods
insb
dec
lret
pop
pop
adc
fdivrp
shll
std
lds
test
mov
xchg
mov
inc
not
mov
add
or
mov
push
hlt
adc
shr
cmp
sbb
sti
inc
aas
xchg
call
sbbl
xchg
subl
push
xor
sbb
loope
mov
cltd
mov
pushf
mov
addr16
mov
rcrl
push
add
push
mov
sbb
das
mov
jno
push
shl
xor
lcall
mov
lahf
and
insl
jb
testl
dec
fisttpll
push
mov
jbe
aam
flds
pushf
imul
sub
es
inc
or
add
movsb
ret
lret
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
mov
adc
xchg
imul
or
mov
leave
call
lods
mov
inc
xchg
fldenv
test
cmp
push
push
repz
jecxz
and
push
mov
mov
add
insb
pop
in
push
movsl
ret
mov
sarb
sahf
es
negl
cmp
ljmp
mov
pushf
cmpsb
xor
or
scas
adc
ret
aas
lods
aam
pop
cmpb
push
mov
sti
daa
lock
and
mov
mov
sbb
mov
jns
movsl
cmpsl
mov
movsl
dec
or
push
xchg
movsb
or
das
pushf
addr16
std
in
shrb
and
repnz
outsl
fadds
ret
mov
shrb
sub
sbb
fldcw
jmp
inc
sub
cmc
stc
xchg
mov
and
mov
sub
push
aaa
inc
dec
repnz
pop
dec
xchg
cmp
ret
mov
lods
inc
outsb
xchg
cmp
fs
std
std
clc
mov
addr16
inc
jbe
enter
pop
loopne
fs
sbbl
stos
in
pop
push
jl
cmp
pop
icebp
dec
sbb
and
fidivrs
mov
movsb
mov
orl
jmp
jg
and
xlat
push
in
and
and
add
aas
in
ret
loop
xor
mov
push
inc
jmp
fistpll
push
pop
dec
fnstcw
pop
in
xor
pop
cmpsl
and
mov
mov
test
into
sbb
mov
adc
fwait
ret
xor
les
js
aaa
mov
push
jne
jecxz
dec
outsb
cs
xchg
mov
fisubrs
shr
test
push
mov
pop
stos
mov
mov
sti
pop
xchg
xor
jo
adc
mov
pop
imul
or
stos
ret
mov
cs
gs
jae
and
push
push
or
sbb
cmc
sahf
add
std
jp
pop
push
nop
and
cmp
clc
sbb
shlb
mov
add
insl
scas
outsl
xor
cmp
and
jbe
sbb
push
pusha
cmpsb
sbb
loopne
popa
jbe
jo
or
or
es
and
fbstp
fimuls
mov
repz
daa
js
scas
addl
fimull
xor
dec
adc
cmp
loop
scas
or
repz
cmp
push
dec
loope
lahf
aaa
call
cli
push
cmp
dec
push
test
sub
dec
push
cmc
or
pop
jl
inc
inc
pop
out
daa
mov
iret
fcmovnb
inc
adc
out
push
cmp
stc
popl
push
stc
pop
shl
mov
aad
sub
ret
jmp
aad
scas
jo
ret
inc
mov
loope
test
out
jno
jle
rclb
aaa
or
xchg
mov
dec
pop
data16
pop
out
in
add
popa
stos
lea
ret
lock
mov
xor
cmpsl
sahf
xchg
daa
out
movsl
jmp
xor
int3
dec
lea
push
popf
dec
jne
mov
mov
repnz
xor
dec
fdivl
mov
ja
fidivrs
cli
mov
cld
add
push
stos
jbe
std
adc
mov
xchg
cmpb
lahf
pop
dec
leave
arpl
aam
scas
lods
xor
lock
or
or
mov
pop
adc
aam
stos
cld
int3
and
outsb
lea
push
inc
pusha
test
xchg
iret
xor
jb
push
jnp
rolb
push
cmpsl
mov
mul
mov
push
fstp
repz
cli
pop
int3
push
iret
into
arpl
shrl
cli
pop
dec
xchg
call
mov
sub
dec
mov
ljmp
sub
and
mov
lods
scas
mov
jns
mov
pop
neg
das
adc
sti
leave
xchg
test
sub
xor
stos
leave
repnz
mov
test
jmp
lods
cld
xchg
jmp
xchg
loope
test
fsubl
scas
lods
adc
aaa
cli
adc
sub
mov
repnz
and
xchg
cmp
rcl
cwtl
cwtl
imul
xchg
fdivs
push
sub
jp
leave
mov
xor
xchg
add
hlt
movsl
leave
jb
aaa
xor
mov
sub
add
lock
and
subl
loope
push
dec
jg
jae
cwtl
mov
cmp
sarb
adc
sub
pop
mov
nop
rolb
rcl
ds
jle
push
mov
push
bound
sbb
icebp
ljmp
pop
fistpl
data16
jns
ds
sbb
fs
sub
repnz
pop
cwtl
pop
mov
push
mov
pusha
addb
mov
push
cwtl
movsl
pop
push
mov
cmp
les
sbb
aad
jne
stos
popf
loope
lcall
out
lock
stc
movsl
and
sti
xchg
fucomi
std
mov
js
or
mov
mov
dec
or
insl
dec
das
ret
movl
adcb
in
insl
push
lcall
push
jae
and
push
pushf
cmp
loopne
push
fdivrs
loopne
mov
mov
add
dec
and
je
sbb
cwtl
xchg
in
insl
das
inc
or
iret
push
inc
loope
xor
dec
std
dec
adc
jecxz
pop
mov
ss
lock
mov
scas
dec
push
out
jle
sbb
dec
pushf
pop
and
sub
xchg
or
scas
dec
xchg
cltd
mov
pop
sub
jb
xor
mov
outsl
repnz
xchg
stc
xchg
out
mov
mov
scas
sbb
xor
xchg
data16
sub
fdivrs
mov
es
add
mov
fistps
jl
out
sub
repnz
and
repnz
push
dec
hlt
lods
xor
in
test
outsb
mov
das
xchg
jmp
cld
aas
and
mov
shl
sti
sub
imull
fimuls
lcall
cwtl
xor
jl
call
test
mov
xchg
stos
jno
fsts
daa
enter
pop
icebp
lods
fnstsw
addl
jl
lods
into
xlat
lahf
int3
cmp
cmp
cmp
xor
ret
push
pop
cmp
mov
sbb
inc
js
xor
orb
cmpsb
xlat
mov
xchg
outsb
fcmove
in
jp
adc
cmc
cwtl
div
cmp
je
xor
cmc
outsl
movb
ret
xchg
mov
sub
aaa
daa
pop
inc
or
movsl
add
out
cs
adc
arpl
out
sub
dec
mov
stc
pop
dec
enter
inc
xchg
inc
popa
push
les
or
push
test
inc
sub
push
sub
orl
jmp
lret
jge
lahf
lret
lret
mov
sbb
xchg
xor
push
dec
jl
cld
sbb
jb
xchg
stos
loope
cmp
cmp
sub
sbb
xchg
lahf
push
sbb
jp
cmp
mov
mov
out
push
ss
pusha
pop
xor
push
dec
out
push
jb
je
sub
add
push
jmp
enter
or
xor
roll
flds
fimull
or
popf
int3
cmp
cmpsl
das
xor
test
and
fabs
rolb
in
inc
std
push
dec
movb
iret
outsl
jmp
pop
xor
mov
xlat
je
cmp
in
in
adc
in
sbb
mov
cltd
les
ss
push
fmull
cmc
sub
sahf
in
nop
roll
push
pop
movsl
cli
adc
push
add
loop
out
arpl
push
sub
inc
popa
cmpsb
hlt
sbb
mov
cmp
cltd
cmp
mov
test
inc
scas
or
adc
push
jg
shlb
and
loop
jmp
mov
stos
cltd
push
loopne
ret
std
cmp
mov
icebp
movsb
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
cmc
jno
push
repz
adc
cli
adc
jns
shrl
dec
push
mov
xor
push
xor
ja
insl
cmpsb
out
aam
mov
add
push
leave
and
mov
cmp
or
mov
not
ret
fisttpl
enter
orb
mov
xchg
int
push
movups
jae
adc
cmp
fldt
and
cmovae
iret
xor
jecxz
push
cmc
lcall
sti
popa
push
mov
fdivrl
test
push
cld
outsb
hlt
cmp
cwtl
add
arpl
adc
push
dec
gs
lock
mov
divb
insl
lods
sub
mov
sahf
out
aad
dec
es
or
out
faddl
xchg
mov
fmul
loope
pushf
imul
repnz
shll
loope
out
lret
repz
mov
xor
mov
mov
popa
mov
scas
pop
mov
push
rcll
adc
jecxz
pop
dec
cmpsb
mov
sbb
cli
imul
push
dec
arpl
pop
jl
mov
lds
loope
sub
fdivrp
jmp
data16
adc
cmc
mov
insl
inc
in
arpl
lock
les
adc
jno
push
inc
jl
dec
aas
sbb
movsb
outsb
data16
mov
cmp
push
es
cli
lods
pop
sub
xor
fsubrp
inc
cli
test
mov
dec
movsb
cmp
push
sub
jecxz
adc
push
cmp
or
add
jp
incl
xchg
jb
xchg
movsl
aam
sbb
sti
sbb
xchg
addr16
lret
adcl
xor
cmpsl
icebp
pop
loop
jmp
stos
fistpll
jl
adc
dec
arpl
mov
mov
arpl
es
push
clc
sbb
mov
aad
add
xrelease
and
or
aam
push
out
sub
lcall
iret
mov
aad
jbe
lcall
call
xchg
mov
lcall
shlb
ds
or
daa
push
jmp
push
js
push
mov
push
push
imul
xor
fiadds
mov
cwtl
mov
leave
pushf
mov
xlat
fidivrs
cmp
adc
dec
add
sub
outsl
enter
xor
popf
je
xchg
shlb
mov
jg
test
sub
or
cwtl
in
push
imul
aaa
adc
insl
and
orl
rorb
sbb
fstps
mov
pop
and
sub
rclb
pop
std
cmp
aad
lret
sbb
mov
call
sub
and
and
movsb
test
sti
add
adc
xlat
xchg
mov
inc
mov
mov
xchg
inc
mov
subb
testb
jecxz
jecxz
xor
cmp
jmp
push
je
ja
ret
xchg
scas
jbe
add
xchg
fisubrl
orl
icebp
adc
aam
xor
addr16
in
addr16
jbe
inc
jb
cltd
or
dec
fcomp
jge
out
sbb
int3
or
jle
rcrl
or
jns
jecxz
rcll
clc
shrb
ret
or
cmp
push
stc
xchg
push
shlb
ljmp
mov
shll
cmp
insb
js
icebp
divb
insb
imul
jo
xchg
adc
fld
icebp
test
lds
mov
cmpsb
outsb
aad
xchg
daa
jb
shlb
mov
scas
clc
rcll
mov
sub
xchg
cmp
push
ret
push
dec
fsubl
cmp
cmc
frstor
fstpl
jno
mov
jp
jle
push
dec
outsb
mov
stos
dec
pop
je
out
insl
dec
add
mov
aam
repnz
outsb
and
pop
dec
shl
scas
ret
scas
adc
movsl
aad
jg
fwait
lahf
pop
jg
dec
fnstenvs
lds
sahf
jb
inc
enter
mov
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
and
pushf
adc
aaa
cli
adc
and
iret
addr16
xchg
test
adc
push
icebp
adc
pusha
jns
pcmpgtw
fisubl
mov
jmp
push
push
xchg
mov
jae
mov
out
mov
out
jae
loope
or
push
and
xchg
je
jne
sbb
mov
add
ret
ljmp
mov
mov
mov
jmp
imul
enter
out
mov
fsubs
and
mov
outsl
add
inc
mov
test
mov
popf
sub
jmp
cmc
bound
add
jge
xchg
xchg
lret
or
sbb
es
outsl
lcall
out
jp
data16
arpl
xchg
insb
es
push
test
out
decb
in
sub
xchg
mov
add
xchg
fidivrs
fisubs
outsb
sub
mov
and
or
dec
stos
mov
jmp
push
jo
cmp
push
pop
fstps
xchg
and
inc
adc
ret
sahf
inc
insb
scas
in
and
jnp
mov
sub
ljmp
xchg
cmp
sub
pop
jmp
gs
int
iret
mov
jg
data16
pop
cwtl
pop
adc
lret
in
fcompl
xor
fucomp
loope
mov
add
sub
mov
inc
insl
push
gs
xchg
xor
and
pop
es
cmp
mov
xor
ds
insl
xchg
or
push
jno
cmp
jnp
lahf
mov
ret
cmp
jbe
popl
gs
mov
mov
and
dec
lea
sub
and
inc
clc
stos
jmp
icebp
cld
inc
cld
clc
in
or
arpl
hlt
int3
add
iret
cmp
ja
sub
mov
adc
or
sub
mov
sub
test
pop
xor
fs
js
popa
mov
push
mov
sbb
push
es
popf
nop
stos
call
mov
pop
in
cmp
mov
pop
cmpsl
std
lock
jbe
sub
mov
aas
das
into
sti
cltd
pop
mov
clc
mov
imul
jge
daa
and
inc
push
outsb
xchg
orl
dec
jmp
imul
push
xor
outsb
fsts
mov
mov
jle
adc
adc
loope
push
fwait
adc
jo
sbb
cld
xorl
cmp
das
cmp
cmp
pusha
jnp
add
inc
test
mov
pop
or
out
mull
lods
jne
test
adc
leave
pop
add
pushf
stos
shll
in
iret
loopne
push
in
inc
and
xor
test
push
bound
lahf
add
movsb
xor
stos
sbb
setb
cmp
pushf
inc
mov
cmp
pop
andb
adc
inc
add
xor
out
scas
inc
add
jp
inc
inc
scas
icebp
out
pop
stos
add
repnz
aas
inc
jbe
test
ficompl
repz
movsb
mov
fsub
or
in
mov
data16
dec
add
bound
or
test
adc
xchg
inc
inc
popf
mov
data16
std
mov
or
sahf
cli
insl
nop
mov
std
push
pop
outsb
push
rcll
jmp
xor
insl
cld
pop
or
fucomi
ja
lretw
pushf
pop
cs
inc
sub
testb
inc
je
lahf
and
mov
or
out
loopne
and
ds
out
subb
sbb
adc
jge
arpl
push
push
pop
div
ss
dec
in
cld
sbb
sub
pop
jne
movsb
outsl
adc
es
nop
push
jae
addb
test
inc
mov
lret
mov
jno
push
xchg
cld
shrl
jmp
in
lcall
call
je
lods
or
cltd
cmp
xor
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
lds
adc
aaa
cli
adc
push
push
adc
rcrb
push
aad
push
mov
fs
mov
fmull
inc
cli
test
xchg
aaa
enter
data16
pop
dec
in
out
lods
sbb
mov
jge
jae
jl
xchg
or
ljmp
cmp
or
fwait
pop
jne
cmc
cltd
add
loope
and
cmp
mov
mul
fisubrl
loop
inc
push
push
dec
jmp
sub
jo
fiaddl
pop
stc
or
pop
xchg
adc
inc
push
pop
out
jns
fmul
adc
aad
mov
cld
psubq
pop
aam
sbb
shll
pop
out
xlat
pop
orb
shl
je
insl
jae
fsubrs
outsb
xor
cmpl
adc
addb
pop
shll
sahf
adc
cli
popa
push
call
adc
xor
jne
int3
pop
cli
mov
mov
lods
sarb
mov
sub
faddl
push
dec
push
mov
out
inc
xchg
jmp
mov
call
adc
jl
mulb
and
pop
jp
lods
push
int
shlb
push
mov
pop
sbb
dec
cmpsb
sbb
movsl
ja
inc
xor
aas
pop
or
xchg
sbb
mov
imul
lret
es
int3
popf
inc
xor
dec
jo
inc
cs
fistl
add
and
fsubl
push
dec
adc
or
repnz
gs
inc
lea
out
xor
andl
dec
mov
sbb
test
cld
pop
lock
cmp
ljmp
mov
dec
mov
xchg
mov
fnstsw
je
loop
insl
int3
sub
add
inc
jnp
xlat
pop
pusha
and
add
aas
test
jle
dec
shrb
adc
jg
sbb
jnp
gs
in
fucomip
aas
movsl
stc
mov
loope
ds
das
es
jecxz
or
sub
pushf
jl
dec
inc
dec
pop
sbb
and
cmp
inc
je
scas
or
into
sbbb
mov
push
dec
or
jecxz
pop
and
gs
stos
loope
cmp
fs
stc
jns
popf
pushf
popf
inc
cmp
xchg
in
inc
push
inc
fnstenv
push
or
popf
pop
jbe
cmc
xchg
hlt
or
test
sub
daa
mov
js
or
xor
mov
add
mov
lods
ds
add
stc
outsl
pop
jbe
jle
fs
aam
cltd
enter
adc
gs
xor
pop
mov
dec
or
dec
sub
popa
dec
movsl
fistl
setle
push
or
outsb
test
dec
dec
in
push
pushf
sti
inc
add
jle
movsb
xor
stos
add
fimuls
jmp
js
adc
mov
adc
jno
lock
mov
popl
xchg
xor
sbb
dec
xchg
sub
fisubs
lds
mov
add
mov
arpl
jge
xor
mov
push
call
scas
and
inc
push
sahf
insl
jb
push
mov
mov
jo
jg
adc
fs
cmp
xchg
out
xchg
out
fwait
arpl
push
pop
int
mov
cmc
dec
push
movsl
stc
xor
pop
fisttpl
outsb
cmpsb
mov
cmpsl
lret
cwtl
leave
sub
dec
mov
test
imul
loopne
sbb
dec
in
sbb
jle
xchg
mov
xlat
test
ret
push
out
fidivrl
fdivs
repz
add
insl
pop
in
or
sub
and
loope
outsl
adc
push
jns
int
cmp
pushf
sbb
add
je
insb
push
push
sbb
or
ja
in
dec
pop
or
dec
sbb
sbb
pop
fnsave
sub
negb
dec
bound
test
mov
add
and
cwtl
xchg
jbe
stos
jl
mov
sub
sbb
stos
imul
and
test
push
test
fsts
addl
mov
and
mov
xor
or
jmp
mov
je
lods
mov
imul
sahf
mov
adc
cli
adc
and
lock
lcall
inc
sbb
xchg
push
fdivl
jge
adc
xor
es
cmp
pop
cmp
std
out
das
and
mov
mov
push
lahf
lcall
xchg
lcall
inc
pusha
cmp
dec
cld
js
icebp
and
pop
mov
sub
xor
sbb
fs
call
push
push
add
int3
js
ficomps
adcb
mov
addr16
psubsb
jnp
stos
xchg
clc
cmp
add
pushl
je
leave
sbb
jl
loop
arpl
or
or
mov
jge
fnstcw
jae
mov
push
arpl
add
dec
aad
xchg
lea
adc
or
out
mov
mov
add
push
mov
jge
jmp
and
pop
ret
pop
xchg
add
mov
mov
inc
ss
jmp
sbb
out
sbb
sarl
inc
rcrl
xchg
leave
add
fnstenv
mov
inc
mov
addr16
or
and
aas
add
add
pop
int3
adc
mov
add
sub
jecxz
lock
xor
std
lret
int3
aam
out
stos
test
in
xchg
je
fs
add
dec
or
adc
or
fisubrl
outsb
adc
mov
dec
cmp
test
dec
mov
add
aaa
in
push
lea
dec
cmp
and
inc
scas
xchg
jmp
or
lock
cltd
add
dec
int3
xchg
inc
scas
addb
sbb
scas
add
adc
sub
xchg
ds
shll
xor
or
cmp
sub
mov
xchg
incb
adc
xlat
pop
mov
xchg
pop
pop
pop
mov
dec
daa
jg
push
sbb
cwtl
fstpt
inc
adc
dec
and
dec
cwtl
mov
cmpsb
mov
test
fcomip
cwtl
inc
xchg
inc
das
cs
arpl
jne
ret
or
out
outsl
loopne
cmc
aam
cmpsb
dec
jle
loope
stc
adc
mov
lahf
dec
mov
sub
push
or
mov
int3
xchg
inc
cs
arpl
pop
das
mov
jo
ljmp
int
shl
divb
ljmp
int
inc
sahf
sbb
add
mov
daa
jg
jnp
sbb
aad
mov
test
jecxz
xchg
mov
in
push
cmpsl
test
pushw
fcmovnbe
inc
jle
dec
cli
outsl
hlt
sti
out
sbbl
dec
test
xor
ret
xchg
xchg
in
in
pop
jns
pop
test
lret
outsb
cmpb
es
dec
mov
mov
inc
push
adc
jo
inc
sub
lods
das
popa
in
jg
push
dec
cmp
fwait
test
rcl
andl
outsb
in
or
dec
push
mov
in
stos
les
rcr
scas
adcb
or
mov
xor
mov
js
es
popf
push
insb
xchg
cld
pop
iret
mov
scas
lea
mov
leave
jne,pn
lret
pusha
push
cmc
mov
jle
aaa
imul
inc
cmp
insl
mov
pushf
xchg
inc
int3
or
jmp
into
out
out
cmp
dec
das
xchg
pop
adc
aaa
sbb
shl
mov
ja
dec
adc
stos
aad
lahf
pop
lods
or
xor
mov
lret
adc
sub
mov
xchg
mov
cmp
ret
btr
enter
fdivl
adc
enter
mulb
pop
or
sbb
jae
sbb
jo
xchg
pop
adc
inc
push
mov
xchg
jnp
imul
ret
jg
lds
sbb
jne
scas
mov
and
outsl
and
pusha
arpl
aaa
jecxz
jb
jg
jle
sub
lea
hlt
repnz
mov
call
push
mov
mov
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
jle
or
adc
cli
adc
popa
movsl
fildl
mov
xchg
fwait
or
repnz
aaa
mov
divl
addr16
xchg
dec
dec
movsb
mov
mov
xchg
out
or
addr16
jb
and
mov
jmp
sbb
jb
ficompl
sub
sbbb
movsl
outsb
aaa
aas
sbb
sbb
mov
in
push
dec
xlat
and
sbb
add
push
cli
std
mov
sub
xchg
arpl
dec
in
or
mov
pusha
in
push
and
and
sbb
mov
push
inc
pop
ja
insb
ret
aas
in
fs
mov
pusha
mov
xchg
pop
xor
fadd
iret
add
jmp
inc
loopne
cmpsl
cmp
rol
sbb
jg
sub
lods
sahf
xor
inc
xor
cwtl
pop
mov
or
cmp
int3
or
mov
add
mov
sub
sbb
mov
and
jecxz
push
push
addr16
iret
xchg
adc
push
lods
xchg
cmp
sahf
jg
mov
pop
movsb
inc
mov
loope
fimuls
movsb
in
sub
pop
ja
stc
aas
mov
test
dec
mov
out
int
xor
cld
sub
mov
insl
push
lods
popa
sub
fstps
cmp
mov
adc
outsb
stos
or
mov
jns
and
aad
push
scas
int3
mov
sub
jg
jnp
and
shll
jge
outsb
movb
cmpsb
push
jp
dec
movsl
adcl
xlat
out
dec
sbb
adc
ret
aad
cmp
in
or
insl
sbb
pop
sahf
jno
imul
loopne
fs
jae
mov
leave
mov
imul
sbb
sbb
cwtl
outsl
fs
inc
adc
rcl
les
std
add
bound
fmull
ja
cbtw
and
shl
push
ss
in
push
or
mov
cmp
lods
jbe
test
repz
inc
out
dec
in
adc
ret
repz
in
faddl
testb
pop
cmpsl
inc
pop
test
lock
sbb
jno
scas
cmp
adc
bound
adcl
roll
push
pop
inc
cmpl
mov
xchg
or
cmpsb
cmp
mov
dec
ss
test
add
call
inc
test
shl
ficoml
fwait
adc
pop
aam
test
mov
out
arpl
jb
xchg
sub
mov
mov
loop
jge
es
pop
mov
pop
outsl
push
pop
ljmp
lods
push
or
sbb
push
dec
movsb
push
or
or
inc
jnp
cli
js
daa
shlb
inc
mov
push
inc
mov
xor
pop
mov
mov
mov
add
fimull
enter
loopne
sti
add
pop
aam
je
cld
pop
in
pop
cmp
push
pop
inc
pusha
pop
cltd
mov
cmc
adc
data16
mov
mov
adc
mov
mov
dec
inc
stc
add
push
dec
sbb
jle
dec
stos
popf
mov
mov
or
or
mov
and
push
fwait
into
ss
and
jb
mov
ret
cwtl
lret
mov
cwtl
neg
adc
mov
xor
lods
dec
lock
xor
add
lods
leave
cmp
or
cmpsb
sbb
test
test
add
test
xchg
cmpsb
sub
and
pop
in
popf
mov
mov
lods
pusha
mov
jno
mov
sbb
shll
xchg
lods
or
mov
pop
xlat
aaa
je
popaw
sub
push
pusha
ror
je
out
xchg
ljmp
cmp
lods
pop
inc
add
gs
inc
dec
add
addb
dec
and
sub
inc
sbb
shrd
shr
mov
mov
xor
xor
or
add
shl
jmp
add
push
adc
dec
loop
dec
pop
adcb
aaa
cli
adc
pop
push
or
test
xchg
clc
xchg
mov
or
insl
movsl
lcall
cmp
cli
cmp
mov
in
or
mov
je
jo
push
loope
aaa
sbb
sub
mov
dec
in
je
in
sbb
mov
and
dec
mov
cmpsb
add
mov
mov
cmp
out
sbb
in
rep
jg
les
lretw
mov
stos
cmp
jbe
lahf
xor
mov
sub
pop
mov
ljmp
popf
inc
fwait
lret
sub
add
movsb
push
inc
xorb
xor
fdivrs
mov
lods
or
aam
icebp
rclb
sbb
and
xchg
nop
cmp
xchg
scas
loopne
inc
or
rcrl
cs
or
sbbl
xor
ret
in
inc
ret
or
mov
pop
mov
mov
adcl
jb
lretw
pop
lods
ljmp
js
mov
jbe
outsl
adc
shl
insl
add
adc
sbb
mov
inc
sahf
mov
and
nop
lods
ret
stos
movsl
jle
inc
int3
sbb
negb
outsl
jmp
inc
cld
push
push
pop
or
and
add
xlat
jnp
dec
jb
xchg
sub
pop
or
je
imul
pop
add
cmpb
ljmp
incl
pusha
sbb
stc
ss
jmp
dec
cmp
in
lods
lea
cmc
shlb
test
or
mov
and
les
jge
mov
push
mov
inc
jnp
sahf
sbb
mov
scas
sub
lods
in
sahf
add
fwait
push
sahf
imul
cmpsl
shlb
data16
icebp
movsl
scas
sbb
test
pop
xor
pop
add
xchg
lcall
ljmp
mov
push
add
pop
add
notl
arpl
and
jmp
cmp
out
xor
push
mov
add
pop
push
out
cltd
jge
call
push
mov
fimuls
jle
test
push
aad
cld
lds
cmp
or
cmp
cmp
jmp
pop
out
inc
nop
int3
imul
movl
pop
adc
pop
mov
fimuls
and
mov
mov
outsb
lret
pop
adc
mov
cwtl
push
fsub
or
jae
mov
add
stc
into
rorl
test
jae
gs
xor
add
inc
aaa
shll
enter
scas
aad
mov
dec
jbe
lar
dec
leave
bound
shll
int
or
jmp
xor
imul
ret
call
sbb
xor
mov
setge
pop
sbb
pop
mov
cli
xchg
pop
mov
lahf
mov
and
js
ret
xor
repnz
imul
movsb
stos
push
sub
faddp
sub
cmp
cmpsb
mov
int3
movsl
lea
mov
push
movsb
popf
movsb
not
push
ljmp
loopne
pop
fcomp
mov
mov
je
mov
xlat
xchg
pushf
lds
test
jnp
adc
lock
subl
std
xchg
clc
adc
aam
xor
insb
aad
shll
mov
jae,pt
fsubrl
repz
rolb
mov
xor
loope
xchg
subps
stc
cmc
ja
mov
loop
mov
mov
repnz
stos
rcll
add
sahf
jmp
adc
orl
mov
xchg
mov
sub
rcl
jbe
jge
rcll
adc
ret
out
cmp
test
outsl
imul
dec
dec
xor
lods
ss
movsb
arpl
out
and
mov
out
sbb
adc
aam
dec
push
adc
orb
out
popa
imul
shrd
jmp
frstor
dec
xchg
movsb
cmp
mov
push
adc
adc
sub
jns
inc
loope
enter
pop
outsb
inc
push
jp
adc
mov
lods
mov
call
clc
stc
push
pop
lcall
jbe
jmp
push
test
or
lods
lahf
jb
movsl
lahf
jne
fisubs
lods
sbb
jb
ret
popf
insb
insb
mov
lcall
mov
push
fistpll
mov
call
mov
mov
pop
pop
arpl
inc
popa
mov
mov
pop
mov
or
jo
xor
clc
xor
or
pop
mov
lds
dec
xor
aas
xor
in
xor
out
sbb
adc
in
cmp
outsl
in
xchg
mov
inc
out
xchg
xor
mov
stc
cwtl
retw
inc
mov
mov
adc
aad
jl
pop
adc
jmp
mov
push
pop
lds
and
cmp
jge
scas
jo
xchg
leave
add
sub
sub
lods
scas
add
stos
mov
adc
push
inc
or
lea
sbb
xchg
sbb
test
jg
mov
sbb
pop
mov
fcmovbe
mov
orb
dec
roll
roll
data16
sub
std
test
and
add
test
nop
or
call
xchg
ljmp
or
xchg
arpl
stc
inc
ret
stos
push
std
or
lret
sbb
push
dec
fildl
jmp
push
sbb
sti
movl
jecxz
int3
pop
push
les
subl
lock
jbe
jnp
cmp
add
cmpsb
mov
dec
cmp
std
xchg
sub
daa
add
mov
or
insb
mov
ds
test
xchg
fildll
ss
lea
jo
gs
jo
push
dec
push
ret
je
mov
leave
stos
inc
xchg
mov
ret
movsb
outsb
stos
pop
push
cmp
ljmp
jb
inc
mov
jns
addl
or
mov
mov
addb
cwtl
jg
mov
data16
adc
ljmp
dec
push
push
or
inc
pop
push
sbb
mov
mov
aam
jmp
dec
xchg
pop
xor
test
sbb
or
mov
xchg
in
loopne
loop
adc
mov
mov
cs
or
xor
mov
sub
dec
mov
adc
test
and
jno
mov
pop
leave
inc
push
push
sbb
iret
push
xor
mov
ja
aad
push
pop
std
dec
sub
and
dec
sbb
out
lcall
addr16
aas
pop
sub
mov
mov
adc
jbe
mov
fdivrp
mov
push
dec
ror
adc
mov
lock
and
lods
dec
mov
push
dec
or
clc
and
pusha
stc
mov
test
or
jmp
bound
in
or
sbb
pop
jns
bound
and
aas
cmp
or
add
mov
xor
addb
stos
mov
stc
cmp
adc
daa
pop
adc
sub
loop
stos
mov
add
jecxz
jl
mov
inc
push
js
out
loopne
repz
popl
ret
push
aad
popa
nop
movsl
dec
xor
mov
or
lods
mov
cmpsb
cmpsb
push
nop
rorb
xor
sbb
add
jne
push
pop
or
lret
fbstp
push
repnz
mov
mov
inc
push
das
jg
mov
stc
cltd
loop
mov
and
nop
cmp
je
movsl
mov
das
and
and
movsb
loopne
lret
cmp
daa
push
and
xor
test
cmp
enter
shr
mov
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
mov
lods
nop
fidivs
dec
pop
imul
pop
cmp
jb
cltd
imul
les
fildll
sub
aas
xor
inc
jp
clc
inc
mov
fadd
xor
push
movsb
jo
and
roll
pop
add
icebp
or
sbb
and
push
repnz
test
pop
push
dec
cmc
adc
sub
cwtl
or
in
je
or
inc
aas
xchg
das
mov
pushf
or
push
fsubl
test
jno
loope
jae
mov
xor
jno
jbe
fiadds
repnz
cmpl
stos
push
push
stos
loop
mov
cmp
ja
mov
fninit
fsts
insb
jno
fstpt
clc
hlt
xchg
push
stos
push
scas
push
rclb
test
adc
sub
int
leave
jg
cld
idivb
aas
loop
push
push
cmp
adc
jge
mov
lret
add
loop
insb
fidivrl
ret
push
enter
add
and
gs
xchg
rclb
dec
xor
sub
adc
add
xor
fs
movsl
lds
js
and
jb
pop
mov
ja
divl
sbb
in
ret
ds
adc
out
mov
jo
cmp
mov
xchg
add
mov
push
or
icebp
mov
mov
call
inc
pop
cmp
pop
xchg
adc
rcll
out
testl
inc
sub
pushfw
push
inc
xor
push
mov
cs
cmp
sti
mov
push
xor
and
push
sbb
arpl
jnp
std
jo
in
dec
add
mov
pop
lock
loope
gs
repnz
out
mov
je
mov
xor
cmpsl
lret
jne
adc
vpackssdw
addr16
jne
push
ja
lods
jle
and
push
lods
mov
xor
cltd
shrl
rclb
xchg
fnstenv
idivl
cmc
popa
shl
sub
mov
mov
inc
add
push
add
test
aaa
js
xchg
add
test
mov
insl
mov
sbb
ss
movsl
in
pop
mov
mov
jne
popf
cmpsl
mov
jnp
rcr
daa
and
js
dec
in
and
cli
enter
movsb
push
outsl
inc
mov
adc
pop
mov
or
add
stos
mov
ja
mov
cmp
in
sbb
ror
insb
mov
dec
pop
sub
push
add
addb
dec
out
inc
jne
sbb
dec
shlb
in
cmp
inc
fnstcw
jg
scas
fucomip
push
addr16
mov
pop
rorl
xchg
xlat
aam
xlat
or
sbb
mov
addr16
push
addr16
pop
adc
cmp
mov
loope
int3
stos
push
sub
pop
popf
inc
adc
cltd
popa
mov
cltd
pop
push
mov
jns
or
out
int3
ds
insb
lock
adc
xchg
bnd
loop
ret
xor
iret
pop
mov
mov
rcll
fnstsw
inc
pushf
mov
loope
or
mov
cs
aam
jne
das
repz
rolb
call
stos
in
cmc
out
push
nop
jmp
xor
xchg
mov
and
fnstcw
adc
mov
int3
or
scas
inc
and
lahf
div
mov
jae
inc
sbb
imul
mov
insb
clc
cld
cmp
lods
filds
pushf
cmp
aam
mov
xchg
gs
mov
adc
pop
jmp
pusha
pop
addr16
sub
jbe
xlat
adc
in
xor
mov
mov
lods
xor
jl
sub
std
dec
lock
lods
das
xor
or
xor
test
fwait
jnp
mov
fs
mov
aaa
add
testl
movsl
adc
ljmp
mov
mov
jmp
mov
dec
js
fs
xor
adc
push
xchg
xchg
rclb
adc
cli
adc
loop
cmc
pop
fwait
scas
repnz
testb
jns
adc
and
dec
mov
sub
lods
cld
scas
sahf
in
subl
mov
sbb
add
ret
lret
popf
mov
add
sbb
adc
sti
jmp
push
outsb
push
lret
inc
stc
or
mov
gs
push
or
inc
pop
enter
xor
test
sbb
jns
push
pop
dec
mov
cwtl
xchg
outsb
insl
cmpsb
aaa
mov
mov
rol
sub
aam
aas
mov
cwtl
addr16
pop
or
or
ret
xlat
xchg
sub
adc
xchg
jmp
cmp
lock
dec
movsl
shr
loop
mov
cwtl
or
sahf
imul
xchg
in
xor
arpl
jb
add
insl
bound
call
push
mov
aaa
jge
or
push
pop
add
inc
jbe
mov
fisubl
mov
popf
xor
push
icebp
inc
sub
outsl
sbb
pop
push
dec
je
jmp
or
adc
rcrb
setp
int3
outsl
add
clc
arpl
cs
scas
scas
push
cmp
data16
rcrl
icebp
mov
test
dec
sbb
and
cli
mov
mov
xchg
mov
rcll
aas
ja
test
clc
iret
in
push
inc
out
mov
ficomps
inc
test
mov
jge
pop
dec
mov
jmp
std
inc
cwtl
and
xor
inc
insb
mov
sbb
xor
cmpsl
lods
push
sub
icebp
bound
call
sub
mov
jl
jl
push
xchg
test
subb
or
pop
jo
addr16
cli
push
mov
lea
cmp
pop
cwtl
repz
jg
pop
and
mov
xor
into
or
mov
sbb
or
xchg
out
movsb
or
xchg
jb
mov
scas
pop
xor
push
xchg
test
pop
adc
gs
mov
push
std
pushf
add
dec
stos
xchg
add
or
jae
and
out
fadds
popa
dec
dec
mov
cmpsl
sbb
push
mov
mov
pop
sub
push
or
sub
daa
xchg
dec
mov
push
sbb
jle
mov
out
mov
les
adc
pop
dec
and
popf
push
out
cwtl
cltd
xor
lea
rcrl
jmp
inc
push
gs
mov
sbbb
xor
repnz
sahf
shr
jns
push
hlt
jnp
jge
cwtl
ret
push
jb
mov
xchg
mov
aas
inc
popf
and
popf
fcoml
imul
test
jmp
cli
lahf
dec
xchg
push
push
mov
es
xchg
mov
shr
loope
push
push
add
fiadds
push
ja
imul
adc
pop
shrl
rcrl
jecxz
add
das
fidivrl
fwait
cwtl
push
mov
ja
adc
mov
das
xor
push
jecxz
dec
dec
sub
pop
mov
sbb
mov
push
xchg
pushf
xor
add
or
sbb
push
imulb
push
mov
imul
pop
scas
lret
orl
sbb
stc
aad
pop
int3
lret
outsl
movsl
ret
lods
xor
and
mov
push
cmp
adc
shl
dec
dec
lahf
cmc
test
mov
add
or
inc
rclb
cld
sub
cmp
sbb
jo
and
stos
xor
outsl
add
sbb
xchg
mov
out
mov
fisubl
and
xchg
ljmp
ja
mov
flds
jo
loopne
ljmp
loopne
mov
fistps
add
mov
or
test
lods
mov
xor
cld
mov
sti
mov
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
jmp
push
mulb
aaa
cli
adc
loopne
cmp
mov
sub
les
xchg
pusha
xchg
xchg
loopne
xor
loopne
jbe
mov
dec
cmp
movsb
es
movsb
lahf
jo
mov
sahf
leave
iret
stos
fwait
aad
stc
hlt
xor
dec
ja
insb
push
out
lods
lahf
addr16
lcall
xlat
cmp
test
into
mov
or
shr
outsl
lock
or
icebp
cmpsb
fsubp
loope
icebp
adc
sbb
scas
xor
pop
jne
and
movsb
ror
in
add
ljmp
xor
xchg
cld
add
leave
sub
sub
and
jmp
movsb
int3
xchg
or
mov
xchg
cli
sub
rcl
pop
adc
mov
xchg
add
jae
sbb
fcoms
jle
inc
adc
pop
repz
mov
xchg
and
pop
movsl
mov
sbb
add
lock
cld
shll
call
cltd
cmp
xor
paddusb
mov
sbb
jae
sahf
sub
iret
cli
jmp
add
dec
push
xor
iret
incl
cmpsb
xlat
cmp
xchg
ret
mov
and
pop
xchg
xor
aad
fnstsw
in
nop
push
jmp
mov
lahf
push
arpl
mov
xcrypt-ctr
cmpsl
popf
out
xchg
mov
in
aaa
clc
mov
aad
xorl
mov
cmp
jo
and
mov
xchg
xor
sbb
push
imul
inc
dec
sti
push
cli
or
cmp
inc
orps
jmp
xchg
clc
sub
icebp
cwtl
mov
inc
lret
push
xchg
in
iret
mov
aaa
push
in
jo
pop
mov
xchg
outsb
ret
or
outsb
adc
or
pusha
mov
out
outsl
xchg
out
mov
mov
xchg
andl
lahf
in
imul
leave
stc
iret
or
rcl
inc
push
stos
mov
jae
scas
adc
push
adc
movsb
test
push
repz
xor
pop
jmp
or
push
and
and
scas
js
mov
into
dec
and
sahf
inc
push
pop
jge
jle
xor
mov
cmp
mov
xchg
push
ret
fisubrl
jno
bound
ljmp
sub
movb
sbb
mov
pop
notl
call
pop
sti
pushf
mov
daa
cmp
pop
inc
xor
sti
bound
aaa
mov
add
pop
sub
inc
cmpl
mov
test
pop
stc
jnp
dec
push
push
sub
cmp
mov
shlb
loopne
test
inc
jge
test
inc
cwtl
mov
arpl
popa
sub
inc
xchg
fs
cmp
cld
mov
ljmp
lcall
pop
mov
jle
inc
ror
test
or
push
dec
out
xor
dec
ss
pop
rclb
inc
das
mov
testb
xchg
leave
rcr
fsin
mov
ja
lea
cld
rol
sbb
adc
cmpb
or
add
adc
push
sub
arpl
dec
pop
jmp
jle
and
mov
pop
lock
or
mov
xchg
mov
mov
lahf
pop
jp
popf
mov
ret
dec
mov
cli
fwait
inc
sbb
lods
jmp
push
pop
adc
mov
lods
jae
shl
add
and
adc
adc
or
push
mov
test
pop
push
sub
sahf
xor
stos
push
xchg
insl
js
lahf
jp
pushf
imul
fisubrs
sub
push
cmp
loop
int3
mov
lret
pop
jp
lahf
sbb
jae
add
xor
std
orl
lret
inc
jne
jp
jnp
loope
mov
fcoms
pop
outsl
loopne
xor
test
sahf
mov
lret
mov
mov
shrd
add
jmp
push
fsubrl
dec
or
push
fistpll
dec
adc
aaa
cli
adc
dec
repz
or
adc
jg
jge
into
js
sbb
pop
cltd
ret
and
ds
outsb
pop
int3
call
and
inc
sub
and
imul
pop
cli
jns
mov
outsl
or
mov
cli
mov
lods
add
jg
cmp
mov
xor
or
push
cmp
sahf
cmp
cwtl
pusha
stos
sbb
pop
sub
ret
jbe
inc
aad
icebp
std
repz
mov
pop
sub
jbe
dec
mov
cld
fucompp
mov
rclb
shll
stc
and
rcr
lret
call
ret
mov
jmp
in
sub
adc
xor
add
std
push
lock
aad
sarl
xor
xchg
add
jae
push
push
push
adc
sbb
add
jae
jl
pop
fcoms
aaa
xchg
jns
add
mov
int3
pusha
fisubrl
cmc
movsb
push
out
mov
test
add
sub
sbb
or
adc
in
cwtl
lcall
in
push
xchg
xor
cld
push
jmp
mov
aaa
jle
arpl
jl
dec
sub
pop
inc
dec
adc
nop
xchg
lods
xor
mov
jbe
jl
cmp
sarb
cmc
push
sahf
mov
sbb
jnp
in
fidivl
aaa
fsubl
adc
aam
in
les
dec
mov
mov
call
mov
repnz
jns
in
jmp
inc
jo
imul
or
xchg
inc
pop
lret
or
push
std
mov
cmp
add
pop
cmp
lock
mov
jae
push
add
div
ret
cmp
fwait
notl
add
dec
iret
ljmp
lock
lcall
push
rorb
jo
ficompl
fldl
pop
xchg
inc
fnstenv
movsl
xchg
sub
cli
lret
negl
sahf
sub
mov
testb
cmc
mov
cmp
shl
or
fisubrs
jnp
imul
pop
inc
fisttpll
movsb
sub
js
test
or
push
jle
subl
imull
sub
mov
pop
add
cmp
jmp
clc
outsl
mov
mov
outsb
add
popa
mov
lds
adc
cltd
dec
inc
ds
jae
adc
es
pop
xor
mov
push
adc
xor
xor
mov
test
or
push
adc
incl
imulb
xor
add
nop
mov
bound
js
iret
pop
call
xlat
movsl
cld
dec
or
sub
scas
cmpsl
ja
mov
fwait
lcall
bound
stos
mov
sub
dec
and
lock
mov
bound
iret
xchg
shrl
lret
pusha
arpl
aam
dec
movsb
popa
jnp
add
cmp
mov
cmpsl
imul
outsl
inc
lock
call
pop
test
and
rorb
adc
jmp
test
xor
loopne
shlb
hlt
lea
mov
inc
addr16
pushl
mov
stc
pop
push
ret
xor
push
or
dec
pop
ljmp
lcall
das
or
mov
mov
clc
jl
or
in
jne
in
bound
pop
rep
mov
sbb
pusha
lea
pop
insl
cmp
jo
lods
jle
or
addb
inc
lea
imul
pop
mov
mov
es
fsubs
les
and
mov
mov
inc
or
pop
xchg
sub
loope
sbb
cmp
lcall
xor
int3
imul
push
out
pop
xor
addr16
test
mov
ljmp
int3
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
lds
push
adc
aaa
cli
adc
fbld
lcall
dec
xchg
xor
mov
fbstp
mov
push
sub
jo,pt
cli
arpl
mov
push
push
sbb
xchg
fsubl
jne
out
scas
xor
in
jl
mov
lods
and
lods
sub
in
or
or
rcll
hlt
fsubrp
call
lea
fwait
jne
ficoml
aam
loop
mov
push
add
and
rep
les
mov
push
push
mov
insl
lods
inc
jle
jne
cmpsb
xlat
push
test
dec
dec
mov
lahf
enter
out
test
orl
add
adc
subb
shrl
xorl
test
and
popa
outsl
push
inc
mov
pop
and
mov
sub
sti
push
in
jae
mov
dec
leave
cmp
sub
popf
mov
jl
std
push
and
xor
and
jbe
repnz
pusha
add
sub
mov
xor
cmpsl
in
mov
and
aaa
repz
es
and
mov
jecxz
inc
jmp
out
int
pop
push
add
push
imul
rclb
gs
inc
sub
sub
and
int
andb
rorb
ja
add
push
jnp
repnz
sbbb
add
in
inc
mov
loope
jl
pop
fwait
sub
pop
dec
pop
mov
bound
inc
xchg
repnz
dec
pop
enter
push
aam
in
push
in
jns
dec
fsubl
push
sbb
inc
sbbb
lahf
push
sub
popf
add
ds
enter
rorb
sbb
pusha
push
mov
or
dec
lea
xor
push
add
lds
pop
add
pop
sbb
mov
cld
inc
push
cs
cmp
inc
mov
aam
mov
fimull
cwtl
in
xchg
addb
jb
or
shl
loope
cli
add
es
sub
xchg
mov
mov
mov
cwtl
mov
mov
jge
out
mov
adcl
inc
jp
loopne
imul
jg
scas
pop
xchg
inc
inc
add
and
in
scas
orb
adc
sub
jno
mov
cmpsb
mov
fldcw
ret
pop
dec
outsb
lock
jae
push
lret
subl
jle
or
arpl
movsb
mov
nop
push
xor
or
mov
mov
xchg
push
mov
pop
cmovae
fs
pop
adc
ss
xor
test
adc
mov
cltd
sti
or
push
mov
mov
aad
cwtl
xchg
mov
into
add
cwtl
push
push
scas
fs
jne
pop
push
or
adc
and
mov
xchg
xor
or
sub
xchg
sub
xor
ret
in
pop
ret
dec
sbb
mov
push
pusha
imul
or
sub
in
sbb
orb
dec
arpl
push
mov
hlt
dec
and
mov
sub
lods
test
inc
xor
mov
subl
cmp
sti
xchg
test
push
dec
push
insl
sbb
xchg
shlb
xor
mov
and
es
dec
insl
test
ds
lock
shll
scas
ss
scas
negl
lea
xor
rorl
sbb
sbb
vpand
icebp
push
xor
cwtl
push
in
mov
jp
xchg
imul
fs
jae
adc
lds
int3
mov
ret
mov
push
imul
sub
mov
push
dec
pusha
cmp
jg
sbb
push
or
lods
out
inc
xchg
subl
adc
iret
nop
in
cs
addb
faddl
jg
scas
and
pop
adc
mov
xchg
mov
jbe
inc
xor
xchg
jge
adc
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
mov
cmp
adc
cli
adc
stos
mov
pop
fucom
repz
adc
sub
and
pop
out
inc
jno
pop
and
jecxz
and
and
lret
xor
jg
cmp
js
mov
movsb
jno
mov
stos
jecxz
popf
addl
push
es
push
inc
scas
inc
out
or
adc
icebp
jl
ja
inc
pop
das
dec
sti
rcll
aaa
cli
ljmp
gs
push
adc
test
and
add
leave
jecxz
loopne
ss
test
stos
push
jae
push
nop
cwtl
jo
jo
test
stc
bound
insl
inc
sbb
mov
or
jbe
mov
xchg
mov
sbb
in
adc
js
mov
scas
mov
or
jmp
cmc
nop
divb
lds
addr16
gs
push
jo
cwtl
mov
jb
pushl
ret
fisubl
adc
xor
push
cmp
icebp
pop
fs
mov
es
jo
inc
mov
push
add
fsts
add
dec
in
clc
push
insl
loope
aas
leave
xlat
ret
sub
repz
dec
lds
mov
nop
sbb
shll
xchg
cwtl
jno
testl
xor
loop
stos
adc
xor
or
adc
dec
pop
inc
jo
cmp
adc
add
add
and
jg
adc
cld
stc
jno
fadd
xor
lret
xor
subb
jno
xchg
inc
push
xchg
insb
rcrl
push
or
daa
mov
test
push
inc
add
mov
andl
push
mov
jmp
fldcw
pusha
inc
loopne
ljmp
sub
and
xchg
inc
fdivrp
mov
enter
mov
jle
or
cmp
push
mov
xchg
lret
inc
pushf
jb
push
lea
inc
and
dec
and
jb
mov
cli
pop
jg
jmp
sub
ljmp
lods
std
cs
rorl
pop
negb
adc
push
add
stc
ds
adc
loope
sahf
jne
adc
jno
push
pop
fcoms
lods
subb
pop
int3
xchg
sahf
in
xchg
pushf
pop
fisttpll
into
lock
std
scas
shlb
xor
sbb
sub
fdivrl
decb
int3
mov
mov
pop
daa
mov
inc
mov
and
ret
testb
rolb
adc
pop
adc
and
sbb
pop
add
je
push
sbb
stos
or
cli
xchg
xchg
js
test
gs
stos
add
sti
pop
jecxz
mov
sar
pusha
adc
rorb
cwtl
sbb
push
sbb
xor
xchg
push
sarl
sahf
in
and
and
mov
mov
les
pop
mov
fisubl
int3
outsl
or
ret
lret
out
loope
mov
daa
inc
imul
mov
hlt
gs
adc
cmp
cmc
and
repnz
popf
pop
cmpsl
bound
sub
aad
add
adc
or
or
in
outsb
out
mov
fcom
xchg
hlt
aam
stos
push
or
addl
and
mov
xor
enter
jmp
addr16
jo
sbb
mov
sbb
and
xor
enter
mov
cltd
and
mov
test
shll
sub
pop
fwait
sahf
jae
icebp
ret
insl
push
add
inc
mov
test
out
scas
ficomps
jecxz
mov
stos
or
mov
bound
pop
or
flds
cmp
mov
xchg
daa
loope
pop
dec
cwtl
cmp
pop
sarb
test
and
xchg
shrb
and
test
jge
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
mov
adc
aaa
cli
adc
test
stos
movsl
jns
inc
out
adc
sbb
dec
sbb
and
test
mov
sub
mov
ret
push
push
sbb
es
in
test
insb
imul
adc
xor
test
stos
add
jbe
adc
dec
out
flds
fs
fwait
inc
pop
sub
pop
or
jb
jl
arpl
lret
neg
jne
adc
push
into
das
ret
cmc
mov
stos
aam
push
mov
lea
mov
cwtl
push
mov
push
jle
xchg
ret
inc
cmp
xchg
loop
jmp
shrb
xchg
incb
fwait
nop
loop
inc
leave
test
mov
or
js
jnp
mov
out
daa
lods
je
xchg
push
movsb
in
inc
xchg
and
lock
mov
int3
dec
sbb
movsl
xchg
ss
inc
push
inc
mov
mov
and
sti
fsubr
or
ret
repnz
loope
mov
repnz
sub
call
jl
sbb
sub
mov
mov
sub
scas
fadd
push
inc
negb
sbb
cmp
pop
mov
xor
out
rcrb
xchg
mov
popf
jb
push
and
in
push
pop
pop
les
in
mov
jbe
cmpl
pop
xchg
inc
jmp
or
nop
dec
aas
nop
pusha
cmp
call
popa
loopne
shlb
xor
jno
sub
dec
pop
cs
inc
add
mov
fs
push
sub
je
outsl
movsb
mov
lret
movsb
dec
jb
adc
lcall
jmp
mov
push
adc
lret
dec
mov
inc
cltd
aad
sbb
inc
mov
sub
adc
addr16
stc
bound
lods
pushl
pop
popf
or
dec
mov
fstl
cmpsb
pop
and
imul
movsb
aam
and
movsb
pop
and
inc
int3
sbb
xor
test
imul
dec
mov
add
in
int3
nop
jle
data16
jecxz
add
push
mov
push
mov
or
fisttpll
push
addr16
shl
cld
push
data16
inc
mov
jae
pop
sub
stos
pop
insb
jns
arpl
lea
test
imul
add
out
out
ficompl
ficomps
ficoms
addr16
out
adc
in
lcall
jp
insb
push
jg
aam
inc
fs
cmp
mov
cmc
jo
test
test
mov
incl
cwtl
dec
adc
bound
mov
and
shrl
rcrb
mov
pop
cmp
xor
les
jge
xor
xchg
mov
in
paddd
test
dec
movl
jae
movsb
je
aaa
pop
sub
in
sub
adc
cltd
lods
popa
aaa
push
jbe
xor
or
mov
xchg
xchg
mov
sub
pop
aaa
jno
cli
pop
and
fldcw
push
push
insb
mov
adc
add
dec
int
jb
movsl
pop
xchg
out
push
mull
test
clc
adc
test
enter
add
mov
pop
sti
je
imul
push
loopne
adc
jnp
fwait
inc
and
sub
sahf
jge
and
sub
dec
enter
bound
mov
pop
mov
ret
jl
sbb
pop
pop
data16
or
out
pop
outsb
add
jle
shl
cli
je
xor
loopw
mov
xchg
mov
push
pop
sub
iret
sbb
lcall
push
mov
xor
adc
aam
aaa
shll
mov
xchg
pushf
iret
sub
and
imul
xchg
shr
mov
add
add
and
or
js
mov
sub
adc
aaa
cli
adc
xor
testl
andl
test
rcrb
inc
getsec
pop
lret
ljmp
cltd
lcall
test
outsl
dec
inc
inc
testl
aaa
outsb
pop
out
in
adc
and
outsb
pusha
lret
mov
mov
mov
mov
and
imul
jns
das
enter
adc
sbb
mov
out
mov
xor
dec
add
jnp
xor
push
mov
mov
inc
ja
pop
test
cmc
fisttpll
fiadds
stc
push
add
xchg
clc
xor
jbe
sub
xchg
xchg
and
sub
adc
xchg
call
repnz
jbe
sub
dec
adc
mov
fdivr
sub
and
call
mov
mov
cmc
loope
jecxz
add
fimull
pop
ljmp
xor
movsb
es
sbbb
dec
clc
lahf
mov
hlt
cmp
in
roll
sub
or
arpl
jmp
inc
sbb
fistl
cmp
adc
dec
xchg
xor
das
inc
lods
addr16
pop
repnz
push
sti
mov
fdivrs
xchg
mov
mov
and
outsb
les
adc
jns
shrb
cmp
pop
inc
push
lods
mov
pop
or
orl
ficomps
mov
mov
xchg
std
test
sbb
arpl
es
adc
sarb
jmp
mov
jp
push
mov
fs
cs
jo
sbb
push
pop
mov
int3
inc
pop
pusha
mov
bound
adc
and
pop
or
sarb
add
outsb
cs
and
push
aad
mov
psubsb
add
rorb
lds
or
lea
fs
dec
mov
inc
les
and
adc
and
nop
inc
cli
mov
mov
popf
out
jle
xchg
and
clc
hlt
jnp
dec
sbb
push
outsb
pop
add
stc
xchg
jne
push
lret
pop
jb
outsl
movsb
inc
stos
xchg
pusha
mov
xchg
gs
std
aam
std
fdivrp
fldt
ljmp
add
push
dec
push
inc
lods
jb
inc
fucomp
sbb
or
bnd
sbb
mov
movsb
sbb
cmp
push
pop
out
rcll
mov
pop
pop
dec
cltd
shlb
jne
push
fistpl
ja
ljmp
jns
popf
mov
in
fiadds
pop
push
mov
movsb
roll
and
ljmp
scas
pop
pop
lods
insb
out
or
lods
mov
repnz
push
insl
mov
sub
ljmp
add
push
sbb
clc
repnz
cwtl
stos
xchg
xchg
mov
fistpl
es
adc
mov
das
scas
xchg
fs
in
pop
mov
push
scas
int3
repnz
fisubl
pop
stos
or
adc
data16
inc
pop
jge
cmp
inc
and
test
mov
jb
push
stc
mov
push
mov
andb
mov
inc
pop
in
movsl
mov
int
popa
cmp
leave
shll
repz
mov
das
pop
inc
adc
mov
ds
or
cld
sbb
jecxz
jae
lahf
adc
mov
insb
fwait
cs
fdivrl
jge
jno
dec
push
ficomps
stc
xchg
dec
not
mov
sbb
mov
andb
flds
hlt
cmpsb
scas
jno
pop
cmp
push
mov
sahf
ljmp
sub
adc
lds
cs
adc
ljmp
insl
int3
lods
jl
into
mov
add
orb
gs
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
rcr
xor
aaa
cli
adc
or
adc
and
clc
jb
pop
cmp
or
xlat
jmp
lret
mov
and
xchg
dec
push
adc
or
stc
and
in
cmp
cmp
xlat
pop
js
mov
sbb
cmpb
std
mov
mov
aad
or
push
sub
aad
in
xlat
test
clc
jg
pop
insb
pop
and
pop
das
je
cmp
movsl
mov
and
jae
push
or
sub
les
jl
dec
sbb
pop
pop
mov
and
repz
or
mov
cmp
mov
mov
sub
shr
mov
jnp
stc
dec
or
push
mov
fcmovnu
lds
lea
push
je
xchg
enter
inc
and
jmp
xchg
adc
stos
mov
mov
xchg
out
jb
sub
sub
popa
or
mov
in
call
rorb
sbb
out
ja
shrl
jge
mov
cmp
xor
mov
ja
lods
mov
sub
adc
popf
pop
mov
ds
adc
add
cld
jb
dec
and
push
hlt
jne
xchg
pop
mov
push
addr16
mov
outsl
stos
insb
add
rcrl
hlt
push
fstl
in
movlps
cmpsl
pop
sub
shlb
and
arpl
popa
dec
inc
pop
push
rclb
bnd
mov
rcrl
sarb
lret
pop
fsubs
xchg
scas
insb
or
mov
mov
outsl
xchg
adc
mov
sbb
sub
jne
outsb
loop
inc
jecxz
pop
jo
nop
std
gs
fsts
jge
into
js
inc
sub
adc
call
lock
add
leave
out
xor
xchg
add
decb
out
int
and
cltd
add
daa
mov
xchg
mov
aaa
or
xchg
mov
lds
xchg
jb
addr16
push
pop
push
stos
add
xor
fidivl
push
push
cmp
testl
push
mov
mov
push
jle
inc
push
sti
add
cs
cld
pop
inc
and
sub
pusha
mov
adc
add
arpl
lods
xchg
pop
movsl
insb
add
push
in
or
adc
in
es
pop
lret
out
dec
or
cmpsl
cs
pop
pop
xchg
inc
or
ret
mov
inc
jge
ficompl
push
jno
nop
rcrl
jle
add
insl
cmpsl
inc
adcb
cmp
mov
xlat
adcl
rcl
into
inc
xchg
inc
dec
in
std
jmp
xchg
sarl
mov
inc
in
bound
fbstp
loopne
loop
inc
push
vmovhpd
scas
ret
in
add
add
pop
pop
inc
in
inc
stc
into
push
loope
stos
gs
sbbb
xchg
cmp
push
mov
adc
adc
rcrl
push
fnstcw
cltd
push
jmp
into
cmp
lock
in
dec
adc
sub
sbb
mov
outsb
jmp
dec
out
push
dec
sbb
test
adc
loope
loop
xor
bound
dec
xor
loopne
jns
leave
imull
sbb
pop
les
fidivl
sahf
cmpsb
insb
adcl
cltd
pop
cs
and
cvtdq2ps
pop
int
jp
dec
jb
cmp
jecxz
pop
push
push
je
xor
ljmp
pop
addb
mov
and
out
stos
or
mov
sti
jmp
push
out
push
ret
cltd
add
rolb
enter
and
mov
add
xchg
xor
cld
dec
es
ss
cmp
out
mov
lret
sbb
insl
shr
mov
cmp
loope
in
xchg
mov
into
outsl
pop
faddl
inc
hlt
jo
dec
mov
sbb
daa
mov
mov
or
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
add
gs
mov
adc
xchg
cli
adc
frstor
xchg
arpl
test
push
cmp
mov
dec
jae
mov
xchg
in
outsb
sbb
cmp
lret
idivl
xchg
addr16
dec
xlat
lds
mov
push
jnp
decl
dec
insb
or
daa
and
outsb
lds
test
pop
in
das
enter
cmp
cmp
rorb
bound
imul
mov
mov
cmp
push
inc
add
cmp
outsl
dec
mov
and
xor
sub
mov
dec
inc
les
xchg
sbbl
fmul
sbb
or
sbb
jg
fisubs
mov
pop
push
mov
frstor
fidivrl
call
fisttps
out
xor
push
lret
dec
mov
jle
and
stos
inc
mov
or
dec
and
lock
mov
nop
ja
lar
jns
data16
mov
mov
shll
jb
and
ljmp
test
dec
mov
pop
subb
jns
xor
fwait
jbe
inc
rcll
pop
and
jg
aaa
in
mov
add
out
jg
shrb
pop
ror
xchg
sub
sbb
fistpl
mov
inc
and
mov
jae
push
icebp
adc
in
pop
movsb
xor
int3
adc
hlt
lcall
mov
mov
xchg
xor
fwait
mov
es
mov
call
add
xor
mov
fcmovnu
or
adc
lea
in
pop
loop
test
cmp
push
fs
cmpsb
repz
test
cmp
add
aaa
jb
xchg
imul
sbb
and
rcrl
inc
add
int
sub
xchg
xor
cli
mov
jmp
pushf
jl
shr
jle
in
pop
int
cmpsl
push
jno
std
mov
rol
mov
push
jge
push
push
mov
mov
shl
mull
mov
aam
or
pop
cmp
mov
out
mov
sub
jnp
xchg
das
mov
dec
addr16
jns
sbb
and
stos
rcr
mov
cltd
pop
negb
negl
mov
push
cli
mov
in
inc
lods
insb
out
out
mov
push
cmpsl
adc
cwtl
dec
mov
into
mov
movb
cli
jb
pop
addr16
mov
ret
test
mov
jmp
fisubrs
xchg
push
xchg
inc
fs
mov
js
shl
rolb
mull
mov
xchg
xchg
out
ret
scas
and
mov
pop
mov
stos
xchg
pop
dec
lds
pop
lcall
mov
das
ret
push
pusha
lcall
int3
add
and
in
sbb
jecxz
les
fstps
int3
gs
pop
adcl
cmp
nop
add
add
adc
pop
or
inc
cmpsb
or
and
test
sbb
dec
push
rcrb
push
sbbl
test
push
stos
out
add
les
stos
dec
inc
sub
or
call
mov
sub
mov
pop
popa
sbb
frstor
mov
mov
outsl
movsl
in
mov
addr16
test
and
fistpl
cltd
add
cwtl
or
outsl
iret
testl
inc
sbb
sahf
icebp
out
mov
add
and
jmp
divb
in
ds
xor
ret
push
jecxz
out
jnp
or
adc
test
lods
mov
cmp
stc
pop
imul
fdivrp
mov
mov
das
sbb
xchg
sub
mov
rcl
ljmp
xchg
repnz
push
pop
dec
cmp
inc
or
and
ljmp
pop
daa
lods
jge
dec
xchg
ljmp
loopne
aam
and
es
shrl
out
vpcomd
lock
out
scas
jo
xchg
inc
mov
dec
fwait
add
sub
pop
out
inc
int
aam
ror
repz
xchg
add
sbb
pusha
jns
roll
mov
fs
gs
cltd
add
lret
push
in
pop
out
cs
sbb
xor
inc
ss
jbe
mov
sbb
mov
popf
push
and
pusha
or
call
pop
clc
add
mov
rep
in
push
icebp
mov
das
jns
add
sub
xchg
sbb
dec
icebp
xor
sbb
leave
test
mov
push
daa
add
out
and
loop
jae
int
push
cmpsl
cmp
loope
cmp
xor
out
enter
xchg
aas
xor
repz
cld
and
enter
aad
shrb
lock
or
aaa
sbb
lods
cld
fs
lea
js
mov
imulb
sahf
fadd
andb
data16
arpl
mov
mov
in
pop
cmp
in
cmp
pop
inc
shlb
ret
jb
and
adc
sbb
rcrl
aam
cld
and
xor
mov
push
ljmp
aas
mov
imul
test
push
adcb
sbb
or
dec
xchg
inc
xchg
ja
lret
jle
cld
add
aaa
mov
jnp
not
jmp
jns
pop
aam
or
and
mov
loope
cmpsb
loopne
stos
orb
out
test
adcl
add
pop
out
xlat
cltd
cmp
pop
dec
xchg
std
dec
jo
push
nop
jo
into
push
rcrb
mov
outsb
cmp
dec
in
outsb
leave
pop
pop
jmp
lods
out
pop
push
and
mov
and
pop
or
fnstcw
cmp
xchg
xchg
fidivl
outsl
inc
and
and
mov
push
push
pushf
add
and
call
bnd
adc
inc
gs
aad
movsb
push
scas
test
popl
xchg
mov
push
xchg
cmp
jge
jae
jnp
and
or
into
inc
add
ret
push
xor
movsl
scas
add
inc
cmp
sbb
in
mov
ja
call
aad
push
std
rcrb
lret
lods
sub
xchg
xor
pop
mov
cmpl
sub
sbb
lods
into
mov
je
imul
lock
add
jl
sub
cmp
lods
xor
in
addr16
inc
or
in
shl
sub
adc
pmaddwd
sarb
inc
cmpl
xor
sbb
notb
push
mov
repz
mov
stc
sub
movb
hlt
divl
fcoml
inc
xchg
mov
mov
jns
mov
mov
jecxz
push
adc
pop
std
push
out
or
test
imul
mov
fwait
push
inc
xchg
mov
clc
ljmp
lea
and
in
js
cmp
xorl
sub
cmpsb
cs
jno
data16
xor
mov
sub
fbld
mov
addl
sbb
sbb
stos
data16
jp
ret
sub
or
mov
movsl
ret
cmpl
inc
pop
add
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
adc
mov
xchg
cli
adc
jge
pop
xlat
fisubl
push
push
mov
xchg
pop
inc
fsubp
and
test
lret
jns
mov
outsb
cwtl
andl
add
pusha
adc
dec
inc
push
mov
cmp
out
inc
lcall
pop
jb
fcomp
sarl
inc
ja
stc
add
cs
bound
je
jecxz
dec
cmp
in
pop
xlat
bnd
and
clc
leave
loop
inc
out
adc
and
mov
es
lahf
cmp
ds
rclb
mov
aas
or
jno
xor
sahf
mov
push
sahf
outsl
lods
dec
test
ja
sub
insb
and
adc
fcmovne
icebp
pop
aam
mov
lret
push
xchg
data16
lock
mul
or
nop
jns
mov
mov
es
inc
cmp
arpl
loop
sbb
jmp
jmp
and
add
mov
add
sub
sahf
dec
ljmp
fistl
push
mov
lcall
cltd
subb
cld
mov
mov
or
sub
mov
test
push
movsb
out
daa
inc
inc
jecxz
lret
pop
stos
dec
cmc
mov
jp
sbb
pop
inc
out
push
loopne
repz
hlt
inc
lahf
leave
insb
sub
test
xor
push
xchg
jo
xor
adc
dec
pop
into
outsl
adc
mov
pop
jae
add
iret
rclb
sub
idivl
inc
int3
js
out
cs
mov
out
dec
leave
jle
xor
or
and
and
leave
push
sub
push
sbb
addl
int3
out
fidivl
shrb
lahf
je
inc
lret
sub
pop
mov
rorb
xchg
dec
xlat
cmpsb
leave
scas
shrd
sbb
hlt
les
jns
int3
fsubr
mov
mov
push
test
sub
mov
jnp
scas
add
and
adc
xor
cmc
adc
xor
repnz
aad
pop
inc
mov
out
mov
lods
insb
scas
mov
mov
mov
push
inc
pop
dec
or
push
jno
adc
imul
and
fmuls
sub
xchg
inc
sub
outsl
push
inc
xor
mov
inc
lock
mov
stos
add
test
inc
stc
pop
push
xchg
dec
stc
and
jg
enter
lret
or
decb
repnz
or
aaa
sbb
sbb
jecxz
dec
dec
inc
insb
jno
lds
jmp
dec
call
fistpll
popf
cld
sub
lock
lahf
or
imul
fcmovnbe
mov
sub
push
or
mov
add
pusha
push
cmpsb
aaa
push
pop
lock
xorb
cmp
lcall
pop
mov
dec
and
test
sbb
xor
js
lret
cmp
mov
push
orl
in
and
cli
mov
push
testb
mov
pop
mov
les
mov
popf
sub
cmc
mov
popa
sub
les
out
inc
or
add
mov
adc
pusha
out
jecxz
jecxz
fisubs
mov
in
xchg
sahf
pop
push
sbb
jno
sub
jnp
add
clc
adc
test
iret
cmc
iret
adc
jns
sbb
and
jg
mov
shrb
xchg
ss
xor
jmp
push
rolb
fprem
jbe
push
cld
stos
mov
rcl
mov
mov
xor
mov
xchg
adc
je
pop
test
loopne,pn
push
or
cmp
or
les
cmp
sarb
je
fiaddl
push
push
adc
movl
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
dec
xor
adc
aas
cmc
loopne
test
pop
adc
leave
iret
push
and
adc
mov
lcall
jo
sbb
test
pop
jp
ds
mov
push
test
and
outsl
fucomi
pop
pop
ret
mov
repnz
pushf
orl
inc
pop
cld
or
scas
pop
pop
int3
mov
sbb
pusha
sahf
sbb
xchg
sub
inc
pushf
fsubrl
and
jns
or
gs
roll
xor
xorl
cmc
sub
pop
push
xchg
and
popa
call
xor
or
push
lods
mov
xor
jbe
repz
add
popf
aam
icebp
pop
and
outsl
insl
int
pop
lret
es
push
cmp
cmpl
or
sub
fildl
pop
sbb
adc
xor
sbb
clc
lcall
loop
and
bound
dec
cmp
xor
jno
or
aam
cmp
sbb
lods
repnz
cltd
outsb
jge
mov
add
loope
xchg
push
sub
jmp
das
push
pushf
or
test
fldt
mov
test
and
sahf
push
mov
js
xor
ret
cmp
xor
shlb
or
js
sub
pop
aas
and
or
fstpt
frstor
icebp
cmp
pop
rolb
dec
mov
push
xchg
lods
sbb
adc
fisubs
out
mov
mov
arpl
inc
in
sbb
addr16
mov
fwait
test
rcll
fldt
in
ljmp
jnp
ftst
adc
inc
cwtl
mov
fbstp
stc
inc
jp
test
mov
inc
nop
fldt
pop
pop
cmp
dec
arpl
addr16
push
sahf
iret
or
dec
sub
adc
mov
je
sbb
les
addr16
xor
test
cltd
adc
or
cltd
lods
xchg
inc
and
test
and
iret
and
shrl
sub
xor
filds
testb
mov
cmpsb
outsl
sbbb
mov
dec
mov
pop
leave
mov
push
in
pop
rcrb
cwtl
mov
xor
test
xor
cmpsb
call
pop
inc
rcll
lahf
add
fdivr
in
bswap
jno
push
dec
dec
popf
xor
aas
aad
rcll
sub
inc
adc
xchg
mov
mov
pushf
and
icebp
lahf
idivl
add
jle
inc
push
cli
clc
pop
push
cmp
mov
xchg
ss
jl
imul
fucomip
sti
push
push
xor
and
push
jns
data16
or
cvtps2pi
sbb
scas
shll
mov
mov
mov
test
int3
pop
xchg
push
stos
sbb
mov
xor
mulb
mov
adc
lods
fcomps
outsb
mov
mov
xlat
fsubs
lahf
outsb
cwtl
mov
mov
clc
mov
daa
fsubrl
dec
outsl
mov
xchg
pushf
ret
mov
jo
push
into
imul
fisttpl
dec
dec
ficoml
mov
leave
mov
faddl
mov
pop
or
xor
add
int
pop
cmp
ss
std
movsb
sti
xor
nop
int
aam
faddp
cmpsb
test
xchg
imul
sub
fs
pop
scas
call
dec
jmp
or
jle
jge
xchg
repnz
adc
add
adc
mov
addr16
sbb
xor
outsl
pusha
aas
mov
shr
inc
hlt
loope
ljmp
test
mov
or
in
push
add
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
jnp
clc
adc
mov
int
stc
adc
mov
into
mov
dec
cmpsl
mov
imul
repnz
push
lret
arpl
mov
or
mov
pop
insb
jo
cli
pop
pop
dec
stos
cmp
xchg
xor
xchg
jmp
rcrl
testl
inc
cs
pop
cmp
pusha
push
cmpsb
ja
outsb
lock
shrb
test
leave
and
sbb
inc
xchg
ds
cmpsb
and
out
dec
dec
dec
aas
mov
mov
insl
inc
loop
lea
pop
pop
das
mov
inc
in
out
in
dec
aam
push
jne
addr16
movsl
loop
sbb
sub
cmp
pop
jecxz
mov
mov
daa
stos
mov
jecxz
outsl
add
mov
dec
push
cmp
arpl
pop
xchg
and
ffree
xor
xor
shl
and
sub
mov
cmpsb
mov
jg
fists
loopne
loope
gs
fstpl
fldenv
adc
ljmp
mov
shrl
pop
xchg
sbb
mov
xchg
jne
mov
push
mov
aad
pushf
out
push
arpl
dec
xorb
dec
rcll
mov
mov
into
sub
mov
sti
enter
mov
clc
inc
or
add
xchg
fadd
mov
iret
outsb
out
adc
ja
sub
sahf
and
ljmp
xchg
push
xchg
lds
sbb
adc
push
xor
and
call
dec
aad
push
add
repz
pop
cs
dec
jb
inc
aaa
pop
add
adc
out
push
mov
jbe
jle
inc
cmp
sarb
mov
adc
fcmovb
out
stos
leave
jnp
out
xchg
iret
xchg
rcrb
clc
adcl
xor
adc
and
mov
cmpsb
add
ret
in
jmp
add
cltd
int3
mov
stc
xchg
cmp
adc
ja
lcall
push
std
pop
ss
out
movsb
ss
mov
aaa
out
inc
push
mov
cmp
sbbb
fldt
pop
sub
lret
cli
pop
addr16
push
lahf
jo
jecxz
mov
das
ds
mov
sbb
adc
or
jbe
inc
mov
ss
xchg
test
into
sbb
adc
add
clc
xchg
and
xor
push
adc
popa
scas
iret
mov
or
loope
repz
aam
jb
cmc
outsb
lahf
pop
jne
or
mov
push
sub
dec
add
loope
inc
push
rcll
ja
mov
push
std
out
enter
pop
pop
or
mov
arpl
adc
mov
mov
pop
push
ja
mov
pop
sti
adc
sbb
jle
mov
lcall
cmp
pop
lahf
pop
jp
xor
data16
push
mov
push
jmp
lds
mov
add
test
call
push
sub
es
sahf
add
shl
inc
push
push
shlb
fisubl
dec
dec
lahf
adc
lods
jge
pop
in
insl
or
mov
into
mov
imul
sbb
mov
js
sub
mov
dec
mov
push
lock
add
xchg
iret
add
xlat
sbbb
and
popa
dec
in
cmpsb
fiaddl
dec
dec
sub
add
pop
lret
lcall
pop
inc
imul
data16
mov
sbb
aas
insl
jl
daa
dec
mov
dec
mov
icebp
addr16
imul
movsb
mov
dec
pop
or
fnstcw
lds
pushf
ljmp
inc
mov
iret
fmull
aad
adc
ljmp
int3
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
jge
sub
xchg
cli
adc
xchg
repnz
shrl
fs
into
dec
sahf
xor
enter
push
js
sub
es
mov
movsb
lock
xchg
mov
push
inc
xchg
repnz
sbb
sahf
and
dec
mov
mov
add
fdivrl
pop
adc
xor
roll
out
lahf
and
jge
sub
xchg
inc
dec
mov
add
outsb
xchg
xor
mov
push
xchg
inc
orl
sub
mov
or
icebp
lahf
xchg
or
cld
xor
mov
inc
cmpsb
loope
call
test
fldl2e
xor
xchg
fistps
cmpsl
insb
fstl
scas
or
xor
iret
pop
mov
xlat
ret
mov
loopne
insl
lea
xchg
mov
mov
mull
das
leave
ss
lahf
cmp
inc
sti
mov
ljmp
adc
xchg
add
inc
adc
mov
mov
out
scas
sbb
ja
sbb
out
rclb
ss
xchg
push
lods
cmp
mov
addl
sub
lret
test
stc
lea
push
push
jmp
lods
imul
popf
adc
addb
lods
aam
push
add
cmp
dec
and
sub
mov
inc
in
loopne
and
jmp
test
in
aad
test
xor
add
out
pop
jns
mov
mov
sahf
lods
cmp
cli
xchg
lret
aad
dec
fisttps
popf
notl
cmc
addl
pop
and
in
lret
scas
xchg
lahf
in
xlat
sbb
mov
xor
stc
xchg
leave
cld
xor
xchg
pusha
dec
sbb
js
mov
iret
ds
jmp
mov
xor
jp
pop
xor
cwtl
loop
jae
sub
mov
sbb
cmp
clc
in
pop
and
ds
outsl
aam
push
and
fcoml
addr16
mov
iret
dec
std
sbb
js
mov
mov
roll
push
or
lock
pop
scas
daa
adc
movsb
int3
dec
mov
push
fbld
fldt
and
and
sbb
ss
aam
stos
cmc
jae
add
push
lar
fwait
pop
cmc
fisubrl
or
sub
lcall
jae
mov
in
dec
cmp
lds
mov
add
fs
mov
outsb
hlt
mov
sbb
xor
jmp
cs
repz
aam
cmp
jns
inc
push
jno
fs
repnz
jge
ljmp
in
jecxz
fildl
mov
stos
push
ja
mov
loopne
sbb
and
adc
fdivrp
shrl
shlb
ja
push
mov
xchg
into
mov
jb
xchg
ds
cmp
loope
mov
test
xchg
icebp
je
add
jnp
out
outsl
pop
mov
adc
dec
lahf
xor
push
int3
lds
in
jl
in
dec
add
icebp
inc
lret
dec
test
push
stc
mov
jne
and
inc
adc
outsl
inc
xor
sub
adc
mov
jecxz
mov
xchg
call
icebp
icebp
jb
int3
xchg
dec
jp
adc
pop
sbb
repz
iret
sbb
mov
inc
imul
mov
jle
fnstsw
int3
mov
ja
test
jnp
insb
rcrl
outsb
and
adc
pushf
nop
push
dec
cmp
ljmp
jl
inc
sub
movsb
fmull
int3
push
dec
rclb
std
stos
mov
mov
inc
arpl
das
repz
fs
inc
out
xor
mov
push
push
mov
sbb
push
push
jp
enter
aas
leave
out
out
or
xchg
inc
shlb
inc
sub
loop
adc
add
decl
cmp
incl
add
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
ffreep
repnz
adc
leave
jns
jnp
rorl
jns
push
sahf
out
es
push
inc
pop
daa
into
aam
xor
out
nop
jb
hlt
inc
push
lfs
mov
sub
popa
in
addps
xor
mov
hlt
push
jp
in
fisubl
or
sti
xchg
cmp
std
add
je
adc
and
fsubr
add
js
data16
std
cli
add
fldt
idivb
shlb
xor
jo
inc
mov
out
add
push
dec
pop
xchg
div
pop
or
xorl
movsb
add
xrelease
paddw
xchg
into
push
mov
insl
jbe
pop
das
dec
outsl
mov
lret
jp
in
in
shlb
out
dec
sbb
loopne
sahf
push
ja
mov
or
xchg
ror
inc
sbb
mov
lret
ss
mov
dec
and
cld
shlb
icebp
jb
add
lahf
mov
mov
sbb
cld
or
mov
mov
lahf
test
cmp
decb
and
sub
jg
outsb
pusha
in
call
in
and
call
mov
pop
clc
shlb
mov
xchg
cltd
loope
pop
repnz
push
pop
imul
jge
loop
sbb
loope
add
add
das
add
mov
jg
mov
xor
xor
in
int3
and
test
push
inc
xor
push
scas
inc
into
push
pop
test
enter
sbb
ds
sbb
mov
sub
mov
jmp
add
stc
push
in
mov
movsb
fidivrl
arpl
mov
aas
jbe
repz
stos
sbb
aad
das
or
mov
pop
sub
inc
inc
stos
push
inc
mov
in
mov
gs
and
push
or
xchg
cltd
stos
inc
inc
mov
mov
lret
leave
leave
adc
into
or
mov
adc
push
test
test
in
jl
dec
popa
pusha
sbb
and
lock
or
testb
rorl
mul
inc
shrb
sbb
ror
inc
stc
insb
stos
xchg
xor
ljmp
xor
call
pcmpeqb
sub
jl
xchg
sarb
cmpb
data16
xchg
stos
js
sbbl
cmp
test
cmc
loopne
fidivl
rcrb
fs
pusha
cmp
or
mov
pop
xchg
pop
or
pop
push
mov
mov
mov
jo
push
mov
inc
cmp
lcall
cmc
jb,pn
pop
insl
or
lcall
pop
jns
rorl
cmpl
in
mov
div
cmc
jmp
cmp
cs
mov
lods
test
push
mov
std
inc
mov
out
int3
test
icebp
or
pop
push
into
je
and
loopne
lods
xor
and
lea
mov
jne
mov
imul
hlt
in
xor
in
adc
es
imul
xor
jne
ljmp
fstps
cmp
test
sbb
ds
mov
cwtl
loopne
xchg
and
test
or
sub
jb
xchg
loope
cmp
inc
shll
sbb
lcall
jmp
repz
stos
sahf
dec
or
fistpl
aad
push
bound
mov
push
rclb
adc
stos
outsb
dec
or
test
jbe
pop
sub
cli
sbb
inc
mov
lcall
adc
lods
rcrl
shll
adc
inc
inc
insl
mov
mov
xor
mov
sub
add
mov
xor
div
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
clc
adc
orl
pusha
fisubrs
and
lahf
inc
int
push
mov
fs
dec
insb
repnz
jmp
lcall
jb
imul
push
push
insl
xor
insb
jecxz
aas
mov
adc
mov
mov
lods
sub
sbb
ret
pop
mov
rorl
pop
es
adc
push
jge
sbb
test
mov
pushf
rcrb
dec
cs
fidivl
jo
icebp
mov
xor
iret
push
inc
jnp
shrl
or
fisubrl
xor
mov
arpl
xchg
lcall
lret
mov
test
out
and
call
sbb
jb
pop
ja
jl
xchg
or
ljmp
int3
shrl
in
sub
inc
es
mov
loopne
lcall
pop
jle
cltd
inc
xchg
mov
fadds
jno
adc
dec
incl
jnp
int3
mov
fstpl
pop
push
testl
jns
mov
push
or
xor
outsl
push
fnstenv
sbb
inc
add
and
test
shlb
xchg
insl
mov
inc
fs
jg
mov
enter
jne
inc
lods
pop
stos
cs
cmp
xor
mov
xchg
faddl
and
xchg
jp
test
subl
cmpsl
xor
mov
xchg
imul
sub
push
das
sub
shl
dec
test
push
lea
pop
call
mov
xchg
ljmp
mov
mov
mov
pop
test
inc
insb
inc
add
lods
mulb
adc
xor
inc
mov
add
fsts
insb
imul
mov
fisubrl
jmp
scas
in
ja
or
out
fs
adc
pop
mov
dec
xor
mov
cmc
pop
das
jmp
cmp
pop
adc
mov
fsubp
in
lods
cltd
loope
std
lahf
cmp
outsb
pop
push
insb
aad
icebp
mov
arpl
and
push
out
sub
test
mov
cli
push
mov
ror
cmp
sub
add
addr16
fldl
xor
sub
repnz
outsl
data16
ja
ja
sub
jne
mov
sub
pop
ds
scas
cs
push
push
out
pop
fisttpl
outsl
dec
orl
in
mov
cs
leave
aam
and
xchg
daa
mov
mov
push
lahf
icebp
aas
xchg
ret
jo
dec
jge
hlt
mov
lds
sub
shll
sti
mov
stc
and
sbb
iret
and
out
scas
pusha
mov
pop
xchg
je
lock
bound
ret
xchg
jp
xor
push
pop
stc
mov
lahf
cmp
lods
lcall
cmp
jnp
fsubrl
jbe
outsb
fwait
jecxz
rol
mov
push
fadds
shrl
fdivrl
rolb
je
xchg
cmp
jecxz
icebp
arpl
mov
sbb
loopne
clc
sub
in
subl
in
mov
mov
mov
add
addr16
movsl
xchg
pop
sti
ret
dec
outsb
mov
fsubr
jbe
loopne
ret
shlb
in
pop
jg
fcomi
mov
sbb
xchg
xchg
decl
sub
dec
sbb
push
bound
sub
call
pop
xchg
lock
outsl
int
cmp
cmp
das
pop
rorl
lock
popa
test
fmul
mov
dec
repnz
push
push
xor
insl
mov
inc
and
and
adc
outsl
xor
and
pop
xor
and
mov
push
jle
pop
jne
inc
mov
cmpl
mov
xor
inc
enter
add
inc
faddl
add
add
inc
fdivr
add
add
inc
aam
insl
add
mov
mov
jmp
and
mov
out
jno
mov
mov
xchg
cli
adc
lods
imul
sub
not
mov
sub
mov
add
movsb
cli
hlt
add
loope
orl
out
dec
pop
call
mov
mov
jp
xchg
jno
pop
movsl
mov
fmul
inc
ljmp
push
stc
scas
sbbb
lahf
push
push
and
add
xchg
jno
fisttps
filds
aad
mov
ds
bound
out
jg
cmp
shll
out
addr16
mov
or
fistpll
dec
ss
loopne
test
rclb
insb
or
jmp
mov
arpl
lods
xor
mov
aam
iret
or
test
mov
cmpsl
nop
inc
outsb
outsb
or
test
push
push
stos
sbb
sbb
fimuls
adc
and
fs
jmp
xor
fwait
icebp
cmp
test
lret
mov
mov
ret
sbb
aas
ret
or
sub
das
cmp
rorl
inc
sarb
push
ret
js
lods
mov
test
cmc
or
in
xchg
mov
inc
cmp
cmp
sub
shlb
jmp
or
adc
ljmp
jle
std
stos
insb
or
adc
hlt
dec
mov
in
insb
leave
out
dec
flds
mov
call
sbb
std
add
and
inc
sub
fsubrl
test
xor
cmp
cmp
mov
mov
decb
rcr
lods
mov
repz
sti
fs
inc
sub
ja
into
divl
sub
lea
pop
rcll
xlat
dec
sbb
lds
cltd
mov
mov
pusha
nop
aas
push
xchg
vandps
mov
cmp
inc
xor
pop
aad
xor
movsb
jg
or
push
adc
jmp
lock
jp
sub
out
mov
jno
mov
mov
loopne
push
ds
jge
cli
jle
cmpsl
in
mov
xchg
clc
rcll
shlb
pop
inc
ss
and
mov
or
imul
mov
jl
mov
repnz
ret
mov
decb
fisubl
adc
bound
inc
arpl
roll
jge
push
sarb
lea
jmp
pop
lcall
lods
jg
cmp
or
flds
mov
hlt
pop
mov
mov
movsl
mov
scas
mov
repnz
aas
add
xchg
imul
addps
adc
xor
mov
mov
dec
adc
lods
gs
inc
fsubrp
jl
out
or
loopne
scas
rcr
dec
rcl
pop
inc
fidivrs
fs
cmp
lcall
push
cmp
dec
mov
hlt
adc
jns
and
movsl
lahf
insl
enter
pushf
pop
and
cltd
popa
mov
test
lret
in
in
pop
in
ja
mov
mov
xor
xor
hlt
push
mov
push
mov
xor
mov
jmp
cmp
arpl
cwtl
adc
pop
clc
inc
xchg
ds
pop
out
jnp
mov
cltd
sub
push
shrb
mov
mov
mov
aam
inc
lcall
jmp
fnsave
jmp
xor
inc
cwtl
icebp
lock
je
outsb
iret
shl
adc
xor
dec
stc
rcrl
mov
les
cmp
push
fildll
iret
mov
inc
int
cmp
dec
mov
popf
mov
movl
add
ret
shr
dec
add
add
xlat
mov
xchg
stc
mov
xchg
pop
int
adc
dec
fstl
mov
aad
mov
movb
mov
and
out
jp
jno
or
xchg
div
iret
cmp
mov
call
flds
aad
outsl
pop
and
scas
popa
push
sub
xor
inc
int
sub
dec
dec
pop
sahf
pop
sbb
outsl
pop
lods
fsub
and
icebp
ds
and
rcrb
cmpb
enter
jno
mov
push
enter
into
cli
xorl
loope
leave
sbb
fcoml
popa
dec
lret
aam
adc
outsl
das
sub
enter
shr
mov
and
mov
jbe
sub
int3
test
ljmp
mov
ror
cmp
std
mov
jne
loop
mov
cld
rorl
push
xchg
jle
or
adc
pop
pop
clc
arpl
xor
nop
push
and
and
dec
popa
jo
xor
dec
ret
sub
jnp
and
mov
inc
fnstsw
ret
mov
rcl
xor
mov
lds
je
nop
and
inc
fs
cmpsl
arpl
fdivr
insl
pushf
or
in
pop
mov
mov
outsb
adc
mov
lods
or
adc
gs
lcall
dec
lcall
fwait
push
pop
inc
fs
mov
push
push
jae
pop
jge
lock
imul
addl
cmp
loop
cli
inc
lret
dec
xchg
mov
xor
std
push
test
es
icebp
jno
sub
repnz
sbb
add
mov
sub
and
mov
int3
mov
add
and
outsb
mov
imul
add
inc
hlt
cmp
outsl
xor
add
ss
cltd
jae
fldenv
leave
xchg
mov
test
or
test
rclb
jl
push
mov
lahf
pop
stos
std
es
ret
add
fs
jbe
xor
sar
push
push
aaa
cmp
loope
inc
iret
fiadds
sbb
xlat
sbb
dec
mov
push
cld
mov
xchg
push
lds
and
pop
cmpl
mov
pop
neg
scas
sub
aad
or
out
xchg
inc
cld
icebp
jnp
mov
sub
jne
test
movsb
shl
incl
popa
inc
les
pop
aam
stc
push
cmp
add
add
out
mov
sub
fadds
leave
cmp
xor
jns
mov
das
faddl
xorb
clc
xchg
aad
dec
xor
and
outsb
and
iret
cld
inc
sub
fidivs
cmp
cmpb
inc
cmpsb
pop
cld
cmc
sub
mov
adc
mov
mov
sub
mov
orl
pop
adc
arpl
dec
pop
mov
lds
js
sbb
jne
ja
push
mov
jge
xchg
lods
shrb
mov
mov
shlb
dec
jmp
jecxz
pop
pop
jns
and
xchg
aaa
or
pop
and
add
ja
dec
loopne
inc
inc
dec
sub
ljmp
shl
call
xor
push
push
rcrb
sub
sub
cmp
testb
test
ds
ja
ja
lods
out
cmp
mov
cmp
stc
xchg
rcll
loopne
cmp
lret
push
sti
cmp
adc
pop
sahf
push
push
jg
jge
mov
lahf
fsubrs
jle
and
ret
das
cmp
icebp
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
push
mov
cli
adc
sub
dec
cmpsb
sbb
mov
ficomps
sbbl
inc
pop
mov
or
icebp
lret
sub
push
mov
sbb
icebp
and
mov
mov
daa
sub
repnz
aam
ss
dec
inc
pop
mov
push
mov
call
in
or
popa
adc
mov
aam
mov
push
test
mov
rorl
jnp
mov
int
lods
inc
inc
insl
push
adc
cli
mov
jnp
cmp
cmp
repz
jns
jle
jno
pop
or
ds
pop
cli
or
cli
dec
ljmp
fimull
dec
int3
mov
mov
lret
push
push
insb
jo
jg
outsb
push
ja
add
add
loope
push
shrl
sbbl
add
add
cmp
outsl
push
sbb
pop
sti
repz
fisttps
cmp
repnz
add
jge
xchg
out
icebp
mov
pop
dec
xlat
xor
xchg
jne
inc
cmp
mov
ja
outsl
xlat
and
or
cmp
leave
nop
jle
sub
pop
or
dec
imul
mov
lret
add
sbb
dec
stos
add
inc
cwtl
and
popf
pop
test
lcall
loope
out
es
sub
clc
inc
push
sub
inc
stos
adc
sub
or
sbb
jmp
idiv
xchg
mov
sbbb
mov
mov
movsb
and
jl
aam
mov
outsb
ds
fidivrs
dec
xor
adc
inc
jne
sahf
test
lods
scas
cmp
xchg
iret
outsb
pop
outsb
sub
push
mov
inc
pop
mov
lds
push
sbb
pop
les
jg
nop
ljmp
jae
jg
std
stos
xchg
outsl
pop
loope
cs
insb
xchg
jg
cmp
rcrl
cmp
add
lods
jne
mov
fadds
xor
inc
ja
out
movsb
lahf
inc
add
scas
adcl
pop
loop
fabs
fistpll
jecxz
scas
mov
mov
repnz
xlat
xchg
pushf
mov
adc
dec
leave
sbb
hlt
xor
loop
inc
sbb
pusha
nop
mov
lret
cmp
inc
leave
call
ror
xor
out
sub
and
sbb
repz
sbb
cmp
pop
pop
dec
adc
imul
rolb
sbb
cmp
or
es
cli
cmp
into
fisubs
xchg
sub
outsb
sub
add
aam
jnp
insl
push
jg
int
fisubl
jp
fistps
cmpsl
cli
sbb
rorl
add
cmp
push
mov
push
repz
cmp
mov
push
int
mov
cwtl
test
dec
mov
lcall
ja
test
faddl
jp
mov
jle
pop
lods
lea
push
scas
fcomps
inc
imul
mov
or
ret
subl
jle
flds
xor
lcall
jg
std
mov
test
sub
aam
jnp,pt
rcrb
and
sub
push
mov
imul
push
outsb
mov
dec
dec
inc
insl
fcmovne
sbb
out
rcl
jle
sub
aam
cli
jns
or
push
lea
imul
add
pop
out
add
repz
push
mov
lahf
push
or
aas
pop
mov
pop
mov
pop
fisubrl
mov
sbb
arpl
sbb
test
pop
mov
mov
xor
rorb
pop
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
jbe
dec
pop
mov
adc
xchg
push
lock
cltd
sarl
int
loopne
orl
cli
ja
test
mov
and
movsb
ljmp
out
pop
cmp
jl
dec
pusha
aad
stos
pushf
and
fildll
mov
xor
xchg
movsl
cmp
jbe
stc
push
fmulp
or
aas
mov
inc
or
and
add
lcall
sbb
out
pop
xorl
xchg
outsl
xlat
push
cwtl
pushf
shll
mov
sbb
adc
mov
sub
scas
lret
pop
inc
das
jg
iret
pop
xchg
insl
push
push
xlat
test
insb
sarb
mov
das
xor
loop
aad
jl
dec
jns
xor
adc
outsb
rclb
in
push
push
testl
mov
mov
enter
push
push
mov
rcrl
lahf
push
inc
xchg
in
and
add
and
mov
sbb
rol
shrb
cltd
sub
clc
push
xor
divl
test
movsb
shr
inc
mov
jp
lret
fcmovnbe
pop
aam
dec
imul
and
mov
cld
mov
cli
pusha
orb
bsr
jg
push
adc
xor
jl
mov
push
sub
jecxz
and
movsl
mov
popa
les
bound
mov
add
add
lcall
push
mov
adc
and
sti
or
xchg
jnp
xchg
adc
adc
jl
jp
mov
fidivrl
adc
mov
push
shll
pop
rorl
mov
push
scas
mov
jmp
test
jo
push
ret
int3
enter
cmc
mov
cmp
inc
maskmovq
mull
pusha
push
xor
rcrb
das
push
iret
dec
ret
test
les
sbb
insb
inc
aad
mov
idivb
int
das
pushf
add
and
mov
adc
into
loopne
das
es
lock
jp
ja
cmp
mov
mov
sub
outsb
faddp
add
popa
jb
pushf
aam
xor
mov
and
fisubrl
cmp
adc
push
sub
jle
sbbb
int
mov
cwtl
mov
mov
ja
mov
mov
dec
dec
popa
xlat
loope
ljmp
sbb
lods
inc
push
xor
xchg
rorl
inc
jb
and
mov
outsl
bsf
gs
push
mov
scas
in
dec
jge
addb
sub
ret
add
leave
imul
int
stos
jmp
adc
and
jecxz
decb
inc
xchg
mov
mov
jp
and
xorl
push
jae
mov
cmp
iret
outsl
movsb
dec
in
pop
lods
test
movb
dec
inc
shrb
sub
mov
inc
data16
or
sub
mov
call
lahf
shrl
fsub
sub
mov
ret
pop
and
adc
mov
xor
addl
nop
inc
mov
loope
ss
testl
push
pop
push
and
jae
shrb
pop
call
scas
aam
xchg
repnz
fldenv
dec
pusha
sbb
sbb
hlt
cmp
mov
ds
push
push
sub
sbb
jbe
push
and
shrl
cld
sub
and
xchg
xchg
stos
loope
nop
out
mov
sub
push
pop
push
cmp
mov
lods
mov
lds
lea
in
mov
lea
push
in
mov
inc
mov
jmp
rcll
pop
clc
dec
aad
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
sbb
fists
xor
and
mov
arpl
in
jne
or
rcll
sbb
dec
inc
lea
test
sub
sub
cmpl
inc
jbe
sub
hlt
imul
cmpb
loop
pop
aas
cmp
iret
pop
clc
cmp
incb
mov
xor
sbb
sti
out
pop
jbe
pusha
and
inc
cmp
bound
mov
movsl
in
adc
insb
imul
faddp
fildll
rcrb
lods
or
add
nop
mov
sahf
push
mov
xor
jno
xchg
mov
pop
lods
dec
push
or
push
cmpsl
jp
jmp
jle
pop
xchg
xchg
stc
or
js
and
fsubs
jle
popf
xchg
scas
xor
mov
jg
loop
flds
arpl
add
jbe
lcall
mov
in
insb
xchg
es
jg
jecxz
xchg
push
in
sbb
das
push
sahf
xchg
and
jg
dec
xchg
inc
test
sub
adc
test
pop
mov
push
ss
or
jb
xor
mov
in
repz
loopne
add
into
mov
fdivp
pop
pop
inc
jl
stos
cmp
mov
adcb
jb
rcr
sti
fmuls
dec
jno
or
jmp
and
ret
test
xchg
jmp
sbb
inc
outsl
push
xchg
xor
and
test
cmpsb
xor
fistpll
arpl
repz
loope
mov
mov
loopne
and
sahf
push
shlb
pop
add
xor
fnstcw
mov
lahf
dec
hlt
sub
add
popa
aad
xchg
ljmp
and
and
adc
pop
mov
xchg
enter
jp
mov
cwtl
repnz
sti
mov
xchg
xor
sahf
cmpsb
mov
mov
pushf
xchg
shlb
stos
adc
out
clc
ror
push
rcrb
loop
pop
push
push
sbb
inc
stos
inc
xor
jecxz
and
jge
push
hlt
repz
xchg
scas
mov
push
jo
mov
push
aaa
mov
sub
sub
nop
iret
mov
pop
add
decb
pop
fildll
push
mov
imul
push
push
in
cwtl
fs
stc
pop
jle
andb
mov
jge
mov
mov
test
bound
mov
mov
ss
mov
mov
jns
pop
testb
sub
fdivrs
xor
aad
mov
jns
push
mull
pushf
fs
loopne
call
test
rcl
xchg
fistpll
mov
notb
cmp
pop
ficompl
mov
push
ret
and
gs
pop
jecxz
mov
xor
xlat
sub
pop
sub
in
mov
insb
outsl
and
mov
sub
xchg
push
push
jg
dec
inc
jecxz
pop
inc
orl
cmp
mov
in
clc
or
xchg
fcom
rorb
jae
jmp
aad
push
mov
inc
mov
enter
test
pop
lret
inc
loope
sti
loope
inc
cmp
ds
das
lcall
inc
repnz
movsl
fwait
jne
popa
ror
flds
mov
mov
sub
lods
inc
or
push
xchg
sbb
jge
jns
fistps
frstor
fnstsw
stc
lds
sarb
aaa
push
int3
cld
pop
and
sub
movsl
sti
fs
arpl
pushf
mov
xchg
hlt
mov
xchg
xchg
clc
imul
cli
cmp
sbb
inc
xor
mov
test
or
jp
xor
mov
push
stos
jmp
pusha
shrl
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
jg
rcl
mov
dec
cmpsb
xchg
repz
les
pop
test
pop
sahf
fmull
lahf
popf
adc
cmpsl
mov
pop
mov
pusha
mov
xchg
mov
dec
test
push
adc
mov
inc
mov
fsubrs
dec
mov
push
outsl
push
gs
and
mov
fbstp
arpl
lret
fldl
jl
inc
in
ljmp
lret
clc
jmp
fldl
aad
inc
fnstcw
inc
mov
hlt
fdivl
push
cmc
sub
lea
xor
and
mov
sbb
out
jmp
scas
lahf
push
mov
sbb
mov
out
adc
test
push
xchg
inc
or
enter
jmp
stc
std
adc
adc
adc
rorb
std
stos
addr16
dec
jmp
mov
and
mov
pushf
shr
fsubs
or
ficoms
sub
push
nop
cmp
mov
out
cmp
mov
loop
fs
pop
push
push
scas
jmp
les
jmp
popa
stos
ja
jno
jno
das
mov
stos
xchg
insb
mov
xchg
js
lcall
cmp
lcall
fisubrs
push
imul
lds
xor
adc
pop
mov
incb
push
push
lret
mov
insl
insl
push
add
cmp
lea
in
sti
mov
mov
ficoms
data16
arpl
xchg
in
sbb
jae
pop
test
push
mov
and
lahf
mov
xchg
popa
and
push
cli
sbb
popf
xchg
loope
out
outsl
dec
add
popa
push
movsb
sub
push
sbb
and
mov
aas
cltd
adc
pop
xor
xor
dec
sub
test
testb
sbb
lods
push
jno
addl
mov
pusha
aaa
lods
xchg
mov
mov
inc
adc
pop
push
imul
adc
lret
adc
jmp
cmp
rcr
das
das
mov
fnsave
out
xor
out
mov
inc
xor
ljmp
dec
mov
adc
aas
lea
movsb
das
pop
dec
sahf
call
sub
sbb
sub
icebp
dec
test
fcompl
fdivrl
cmp
push
out
xor
inc
push
mov
fidivrl
push
or
adc
fs
into
push
mov
xchg
and
inc
das
jecxz
stos
cmp
outsl
scas
mov
inc
push
add
mov
popa
sarl
xor
outsl
adc
pop
cmpsb
idiv
cmp
testl
and
rolb
add
shll
mov
sbb
ss
test
inc
popa
or
test
js
and
xor
pop
cs
xlat
pop
push
stos
lods
icebp
test
std
xchg
xor
je
mov
adc
xor
jle
bound
inc
mov
mov
inc
mov
fstpt
xchg
mov
mov
movsl
cmp
inc
aad
mov
push
inc
fsubs
sahf
fwait
xor
icebp
cltd
push
testl
lahf
pop
roll
sahf
insb
push
je
iret
push
dec
call
movsl
add
icebp
sub
aas
pop
test
mov
js
test
pop
or
jbe
adc
popf
arpl
mov
aaa
lds
fbld
dec
mov
mulb
test
jle
ds
stc
mov
lods
mov
jno
stos
lcall
mov
jno
mov
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
mov
xchg
cli
adc
mov
into
pop
fsubr
xor
loope
push
sbb
int
lret
lods
inc
mov
xor
jnp
adc
mov
sub
hlt
cmpsb
dec
pop
mov
and
cmp
pop
mov
dec
in
loop
nop
cwtl
xchg
inc
andb
int
xchg
sbb
cmp
adc
call
xchg
inc
dec
add
push
and
scas
mov
xchg
jne
in
inc
add
sbb
fbld
add
data16
xchg
out
cmp
lods
sub
inc
popf
xorl
popf
out
dec
push
jl
mov
adc
sub
shll
jnp
jns
in
mov
in
sarl
popa
dec
xor
jge
fdivs
mov
popf
pop
repnz
xchg
popa
xchg
gs
sub
sub
fwait
js
das
pop
inc
and
jge
fwait
into
pushf
jge
sbb
cmpsb
sbb
and
stos
cmovs
mov
sub
inc
loopew
push
or
test
or
mov
repnz
inc
bound
roll
ds
in
pop
jle
inc
cmp
movsl
test
mov
pop
add
daa
inc
lods
cmpsb
lahf
imull
not
jnp
inc
push
jmp
pop
mov
hlt
into
ficoms
lods
xchg
mov
add
mov
stos
outsb
leave
mov
stos
push
add
insb
ficompl
loopne
call
and
inc
mov
ret
cli
lds
fneni(8087
inc
fsubl
jo
sbbl
divl
pop
jge
lret
sub
fs
insl
cmc
shlb
imul
mov
stos
mov
fldt
pop
mov
popf
pop
mov
jne
rcl
mov
jnp
test
mov
lret
xchg
mov
addr16
jbe
gs
rorl
sbb
xor
or
sbb
scas
out
std
jns
comiss
js
into
hlt
jno
mov
pop
iret
pusha
cli
imul
cltd
lods
cmp
cmp
inc
dec
fs
adc
aad
pop
lock
lods
decb
xchg
adc
mov
sti
lcall
or
mov
sbb
leave
push
rcrb
outsl
sbb
negb
dec
xchg
lahf
jbe
and
jle
add
push
scas
sti
fldl
pop
test
adc
scas
andl
cs
and
dec
inc
add
push
jmp
pop
or
inc
inc
mov
sub
mov
pusha
xchg
cmp
jo
mov
push
outsl
rclb
ja
adc
dec
inc
mov
pop
movsb
sbb
stc
xchg
popf
push
in
dec
je
test
sti
in
pop
je
xchg
les
pop
xchg
jns
sbb
inc
jo
add
hlt
loop
adcl
bound
push
cmpsl
jns
sub
in
data16
push
movsb
mov
movsl
and
dec
mov
iret
loope
mov
in
lock
hlt
ja
or
je
mov
sbb
int3
sbb
rcl
xchg
push
enter
ljmp
outsl
popa
sub
ret
pusha
or
or
aad
gs
cmc
lds
repz
ljmp
and
arpl
cmp
and
repz
push
lret
nop
or
push
loop
scas
ror
bound
sbb
fisubl
adc
int
aad
lods
inc
mov
int
je
stos
xchg
mov
shrl
mov
add
lods
leave
aad
les
in
dec
dec
mov
mov
popa
xchg
adc
scas
ss
in
int3
lods
lods
sbb
push
mov
out
arpl
pop
int3
add
popf
xor
push
addl
out
push
xchg
in
fstpt
sahf
mov
popa
xchg
pop
xchg
pushf
xor
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
aam
into
fwait
clc
adc
inc
sar
fistl
cmp
fcmovb
inc
stc
ds
lock
sub
idiv
xor
push
rolb
arpl
xchg
jecxz
dec
or
mov
sub
push
fdivrl
ret
psubd
sub
and
shrl
push
add
icebp
pop
pusha
inc
les
hlt
jl
sub
out
nop
lods
jne
cwtl
stos
mov
xor
fldenv
imul
cmpsl
pop
and
inc
test
push
test
movsb
sbb
jno
rcrl
cli
in
push
nop
daa
loopne
jg
push
mov
xchg
fldl
mov
icebp
addr16
sbb
inc
js
push
cmc
jmp
push
xor
or
loopne
cmp
sbb
aam
shl
outsb
cltd
jbe
push
fdivs
fldl
push
mov
test
mov
aaa
pusha
and
addl
adc
push
xchg
sub
pushf
xchg
xchg
int
mov
roll
xor
push
in
int3
loope
xor
fildl
imul
ja
je
mov
loope
inc
mov
xchg
lea
mov
sbb
or
mov
roll
outsb
mov
sub
cmpb
int3
lret
cmp
xor
jle
sbb
sarb
filds
xchg
pop
in
outsl
imul
sub
cltd
shrl
pop
cwtl
push
xchg
lods
cli
inc
pop
pop
aaa
or
fdivrl
std
adc
xchg
xlat
cmp
leave
push
xchg
push
and
fs
sbb
cltd
mov
push
int3
shl
fnstsw
ds
xlat
mov
aad
xchg
jne
mov
movsl
int3
stos
pop
shrb
stos
adc
inc
ja
push
inc
arpl
arpl
dec
jnp
in
js
mov
imull
jnp
sbb
xchg
dec
fnclex
hlt
int
push
mov
test
insl
sbb
lahf
addr16
mov
rorb
lea
adc
jae
adc
pop
pusha
out
divb
mov
cmpsb
inc
dec
in
cwtl
std
out
or
fldl
jg
rclb
hlt
xor
sti
sub
mov
xchg
sbb
xlat
mov
adc
dec
and
and
ficomps
repnz
xchg
cltd
push
pusha
jb
mov
jno
pop
int
xchg
dec
stc
adcl
sbb
test
loop
fiaddl
inc
and
je
rcl
rorl
shl
xor
inc
pop
pop
push
dec
pop
out
xchg
jns
gs
adc
iret
add
jns
fistps
sub
push
inc
scas
pop
cmp
loopne
call
pop
push
fwait
push
mov
das
es
fmull
adc
xchg
mov
sub
add
jp
sbb
scas
mov
xchg
leave
push
inc
inc
in
adc
add
push
sbb
add
add
cmpsl
jnp
pop
xchg
aad
mov
cmpsl
sahf
das
in
mov
or
mov
push
aam
or
fistpll
inc
mov
scas
mov
jns
sahf
stos
insb
in
lahf
pusha
pop
mov
xchg
hlt
shll
xor
lret
rcrb
and
loopne
stos
inc
push
jl
insb
icebp
or
sbb
mov
xorl
push
dec
or
imul
scas
nop
mov
sti
xchg
and
sub
es
jno
in
insl
and
jle
add
sbb
test
inc
jg
jns
xor
imulb
xchg
in
sub
stos
push
test
xor
js
out
xor
lock
sbb
movl
jns
popa
mov
icebp
push
das
lock
and
adc
sbb
pop
cmpsl
int3
push
loop
cs
or
in
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
mov
adc
stos
add
add
sub
arpl
mov
sub
push
pop
mov
push
add
pop
mov
fucomi
xchg
pop
push
and
stos
dec
fidivs
jae
test
push
loop
mov
fdivrl
andb
pop
sbb
cmp
jo
mov
sub
shll
sub
lcall
nop
imul
lds
add
sub
pop
add
mov
cmpsb
push
fs
adc
mov
push
stos
inc
incb
out
or
dec
sub
mov
popf
mov
pop
push
popa
test
jg
adc
inc
aaa
mov
mov
mov
inc
pop
add
fsts
mov
mov
cmp
rclb
das
jp
out
mov
lds
pop
push
cmp
aad
pop
lods
xorl
push
cli
inc
test
pop
push
out
and
lock
fwait
xor
push
rol
dec
outsl
mov
aas
clc
ror
pushf
xchg
mov
mov
add
ljmp
sub
xlat
sbb
adc
addr16
xorl
imul
mov
adc
sub
jno
jl
xchg
pop
mov
imul
aas
les
dec
movsb
ja
cmp
sbb
pop
cmp
fs
adc
cwtl
int3
adc
mov
pop
dec
sub
xor
popa
adc
sbbl
inc
add
psubq
les
mov
insb
and
lcall
dec
xlat
mov
sti
push
enter
roll
sub
dec
mov
fldl
pop
pop
fnstenv
lock
dec
xchg
xor
mov
xor
push
cmp
jne
mov
push
add
jnp
pop
cmp
dec
int3
pop
inc
xchg
adc
mov
push
scas
xchg
or
cld
aaa
in
clc
mov
ljmp
jo
and
mov
dec
incl
fnstenv
inc
jl
lock
pop
pop
test
fbstp
mov
inc
xchg
add
loop
pop
aaa
push
sub
mov
cltd
addr16
inc
pop
push
or
cwtl
ret
fadd
subb
xor
pop
jecxz
iret
mov
add
mov
add
iret
push
rcl
into
je
dec
test
imul
clc
pop
fwait
hlt
mov
xor
xchg
jbe
push
pop
mov
sbb
imull
sti
sub
loopne
jne
cmc
add
jecxz
ss
lahf
pushf
add
arpl
in
sub
js
mov
adc
xchg
sbb
jg
enter
push
xchg
xchg
push
mov
cs
or
add
add
inc
sbb
scas
in
inc
add
in
fwait
push
cmpsl
std
pusha
pop
outsl
jle
clc
mov
add
cmp
push
push
adcl
cmp
mov
inc
inc
out
pop
in
adc
shl
add
xchg
aam
movsb
test
mov
je
cmpsl
adc
in
or
test
dec
inc
cmpsb
mov
mov
push
jl
or
mov
out
aaa
adc
stc
jl
std
xchg
jl
ljmp
dec
dec
push
sub
mov
lock
xchg
mov
aaa
addb
imul
adc
xchg
mov
sub
mov
xor
shll
xchg
clc
movsl
fiaddl
pop
out
xor
xchg
jb
xchg
mov
lods
cwtl
pop
pop
jb
push
psubb
or
jge
or
and
push
mov
fidivrl
cld
xchg
lods
add
loopne
cmpb
dec
dec
add
inc
insb
jle
testl
pop
jle
dec
out
adc
sbb
lds
mov
imul
andl
nop
movsl
aam
sbb
ret
mov
xor
rcl
xor
push
push
mov
mov
data16
arpl
mov
mov
insb
push
out
out
int3
pusha
stc
mov
jns
int3
mov
cmp
mov
rorb
inc
sti
jg
dec
mov
cmp
jae
rcrl
insl
test
push
loope
sbb
stos
pop
sbb
push
dec
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
cmp
adc
adc
repnz
sbb
insl
sub
popf
ljmp
andps
adc
popf
ficomps
jecxz
cld
xor
mov
pop
jmp
sahf
das
jge
xchg
push
mov
in
inc
testl
inc
ss
insl
dec
push
icebp
mov
xchg
pop
sub
inc
push
dec
call
and
pop
jge
mov
inc
fidivrl
jl
adcl
test
push
imul
mov
cmp
fldl
sub
lods
shlb
pop
pop
adc
test
sub
mov
out
iret
scas
xor
push
jmp
push
or
cmp
rolb
pop
sbb
inc
jns
popf
mov
stc
aaa
mov
add
ret
imul
iret
dec
mov
push
mov
inc
adc
cld
or
lret
pop
jg
in
xor
pop
xchg
ret
xchg
cmp
out
imul
stos
inc
add
fimull
dec
dec
sbb
push
shld
lret
jnp
sbb
cltd
popa
out
stos
jb
outsl
lret
lock
sbb
hlt
test
xchg
jo
in
push
dec
inc
jp
bound
cmpsb
sub
test
and
call
jp
add
adc
sub
mov
sbb
adc
mov
add
iret
push
sbb
inc
mov
push
xchg
sbb
and
and
cli
jmp
gs
not
inc
ljmp
cmpsb
out
repnz
pop
mov
mov
cwtl
and
lock
xor
push
mov
repnz
lahf
inc
xchg
push
addr16
or
dec
xor
daa
or
fidivs
and
std
mov
hlt
mov
jge
in
mov
dec
sar
ds
ljmp
jg
sbbb
mov
jg
gs
sub
mov
popf
in
popa
loop
pop
ss
dec
frndint
pushf
das
add
xchg
jb
gs
xor
outsl
in
in
xchg
aas
xor
int3
adc
pop
sbb
adc
ror
fisttpll
push
inc
and
xchg
mov
ja
and
jecxz
push
subb
ja
cmp
call
sbb
iret
cmp
fwait
push
sbb
decl
or
cld
add
inc
fistpl
sub
scas
int
xchg
test
xlat
mov
push
cmp
xchg
sbb
xor
and
push
iret
add
and
mov
xchg
and
adc
pop
push
sbb
mov
std
call
jo
in
cmpsl
push
lds
int3
stos
test
cwtl
fldl
out
cmp
mov
lahf
clc
sub
idivl
fwait
xor
movsb
test
sbb
js
stc
pop
mov
sub
in
mov
push
arpl
and
std
insb
leave
mov
pop
popa
sub
pop
lcall
ret
int
or
and
sbbb
dec
scas
je
ret
fdivrl
in
sub
push
jo
jbe
xchg
add
popf
ja
lea
fbstp
lcall
xor
and
or
mov
sbb
test
mov
sub
mov
fistps
mov
jnp
jo
and
sub
inc
adc
pop
fs
fxch
mov
add
cli
push
mov
pop
pop
lahf
adc
add
push
sub
or
jnp
dec
clc
or
push
test
and
call
dec
in
or
sahf
mov
jno
lcall
in
mov
loope
jge
jnp
out
out
out
arpl
fs
cmp
shll
int3
js
pop
xor
into
jg
mov
movsl
pop
mov
pop
mov
cli
imul
bound
sbb
stos
out
sub
rcr
enter
imul
push
addr16
sub
sbb
lods
pop
fdivl
dec
sbb
sti
fwait
adcb
cmpsl
push
sub
popa
bound
and
push
xchg
iret
stos
jle
insb
xchg
adc
xchg
mov
fwait
cmp
stos
mov
sti
fdivrs
or
sbb
inc
hlt
jb
add
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
jecxz
lds
ja
adc
adc
pop
xor
popa
sti
pop
fmuls
hlt
leave
inc
aam
add
push
orl
mov
push
jo
mov
jg
inc
les
addr16
cwtl
movsl
leave
adc
cmp
jl
xor
out
xorb
cwtl
dec
inc
dec
mov
popa
add
add
insb
popa
fldt
jge
lock
xor
pop
je
mov
sarb
xor
icebp
test
mov
roll
testl
jge
fwait
icebp
jno
loop
loope
sbb
lods
pop
xchg
nop
xchg
sub
test
inc
stos
test
dec
jb
sbb
inc
ffreep
pop
jb
xchg
sbb
mov
xchg
add
lret
lahf
es
hlt
jne
rcrl
out
in
cwtl
dec
lods
xchg
cmp
sub
adc
xor
test
mov
jmp
cmp
jle
push
fwait
scas
mov
std
ret
sub
push
xor
inc
cmpsl
lds
jno
mov
and
das
mov
jb
fsubrp
dec
and
pop
mov
push
xor
test
mov
arpl
mov
xlat
inc
pop
call
jns,pt
sti
or
in
cmp
adc
push
leave
xlat
repz
or
inc
xor
xlat
push
push
int
je
insb
je
leave
push
lds
inc
dec
scas
mov
add
add
dec
sub
lea
std
popf
mov
xchg
test
dec
mov
mull
jecxz
mov
cmp
cmc
fsubrl
push
sbb
mov
shlb
jge
push
lret
adc
xchg
inc
or
sub
lret
jl
ss
adc
push
gs
mov
ja
lahf
mov
cmp
mov
adc
dec
push
inc
aad
mov
hlt
inc
jg
dec
leave
lret
xor
mulb
dec
push
loop
pop
mov
inc
mov
rep
dec
mov
xchg
shll
cli
fcmovbe
fwait
dec
lret
jno
cmc
xchg
pop
imul
cmp
ja
or
notl
in
dec
aam
and
pop
jl
push
or
add
lret
pop
mov
mov
jecxz
xchg
shrl
nop
inc
push
jns
mov
sahf
cld
cs
das
or
movb
cli
jl
int3
and
push
daa
sub
pop
nop
mov
stos
sub
cmp
adc
dec
mov
repz
fucomip
adc
clc
fisttps
aaa
xor
pop
outsb
sub
mov
inc
mov
or
cmpsl
or
adc
cwtl
lret
add
aam
fadds
and
mov
shlb
mov
je
fcmovnbe
frstor
cmp
mov
adc
lret
sti
dec
xor
test
test
inc
xchg
addr16
mov
and
xchg
inc
mov
lock
cmpsb
and
shll
mov
jg
sarl
jg
cmp
adcl
xchg
xlat
mov
std
movsl
mov
jbe
imul
xor
push
xchg
rorl
mov
movsl
movsl
sbb
sub
push
or
mov
js
mov
cmp
dec
pop
mov
add
mov
pop
pop
shrb
jbe
add
lcall
add
insl
fildll
cmp
sbb
insb
lahf
testb
push
es
cwtl
jns
imul
push
mov
jle
insl
jp
xor
testb
aas
bound
lods
xor
shlb
add
pop
adc
sahf
xchg
or
add
pop
jne
shll
dec
mov
adc
sbb
imul
adc
mov
out
xchg
mov
dec
push
mov
mov
jbe
push
push
mov
lods
das
add
and
pusha
mov
mov
xor
ret
jge
out
pop
test
out
add
jge
mov
cmp
mov
mov
test
fmuls
pop
cltd
jp
sub
xchg
aad
jnp
aaa
and
sub
and
cmp
jno
mov
inc
fwait
out
mov
adc
and
mov
adc
pusha
je
out
pop
xchg
push
dec
sub
bound
push
dec
and
mov
add
stos
add
adc
dec
int
js
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
mov
test
adc
adc
sti
pop
movsl
dec
mov
adc
aaa
aaa
mov
outsb
push
das
imul
xchg
iret
stos
push
mov
scas
fwait
push
data16
outsb
push
jg
sbbb
dec
xchg
lea
shl
leave
adc
adc
pop
scas
fadd
cli
movsl
or
sti
imul
out
mov
dec
xchg
add
mov
add
out
dec
push
sarb
test
rol
lock
mov
aad
mov
andl
subl
int
in
rorb
adc
mov
push
fwait
pop
adc
int3
in
gs
in
out
hlt
mov
inc
pushf
pop
ja
mov
jl
ljmp
into
mov
xor
xchg
xchg
xor
or
sub
push
mov
je
sub
int
inc
lcall
add
ja
sub
adc
inc
imul
push
adc
mov
push
push
dec
jnp
cmp
int
push
or
dec
xchg
iret
icebp
jmp
jns
push
push
loop
push
xor
lods
jno
popl
cmp
sbb
sbb
and
sbb
cmpsb
lea
andb
repz
jl
or
jno
adc
test
push
or
es
jmp
xor
pop
mov
xor
inc
in
or
test
inc
bound
insl
enter
inc
inc
lcall
and
lcall
outsb
mov
clc
mov
pop
sub
dec
movsl
mov
ret
test
jmp
jo
and
sub
mov
push
fs
sbb
mov
bound
out
out
jb
andl
xor
sbb
cmp
es
push
ret
gs
clc
stos
int
add
fimull
stos
inc
push
popa
inc
cmovb
jle
rorb
jno
cs
leave
add
and
push
test
dec
inc
and
push
inc
dec
adc
jb
jbe
push
mov
or
in
gs
int
mov
loope
or
lret
jbe
aas
or
hlt
loope
inc
sub
pop
push
scas
push
pushf
scas
xor
test
lds
sub
std
das
mov
lds
lea
xlat
or
repz
jb
movsb
mov
and
bnd
pusha
jbe
stos
fmul
or
pop
sbb
push
adc
xchg
dec
mov
in
and
mov
mov
inc
add
dec
mov
jmp
dec
mov
sbb
clc
bnd
jmp
pop
and
fsubrs
in
fldenv
cld
jne
stc
mov
aam
xor
adc
call
test
sbbl
cmc
mov
gs
sti
jg
div
scas
or
push
inc
shll
iret
les
mov
shlb
insb
gs
clc
xchg
ss
cmp
in
mov
push
inc
cmc
ret
xchg
sbb
aas
cmp
push
add
outsb
lods
dec
mov
lea
xlat
in
push
cmp
mov
pop
jns
adc
rcrb
jecxz
jg
int3
adc
hlt
es
pusha
push
aaa
mov
push
mov
add
mov
fnstenv
pop
repz
jmp
jle
lea
mov
mov
neg
xlat
fwait
add
popa
ja
rcll
push
xchg
aaa
add
mov
add
hlt
sbb
add
lahf
xchg
or
arpl
or
and
jg
push
cmp
ss
and
ficomps
cltd
mov
lock
pop
jle
bound
dec
sbb
inc
ja
repz
test
fwait
inc
dec
in
push
int3
outsl
repz
clc
xchg
jge
aad
push
psubw
mov
mov
pop
pop
inc
sbb
xchg
pop
pop
scas
fwait
push
mov
jne
jp
orl
loopne
xchg
push
nop
inc
push
jbe
push
mov
stos
bound
xor
flds
lds
clc
pop
add
pop
mov
jmp
adc
jge
data16
mov
dec
sti
scas
fdivs
adcb
ret
pop
popf
leave
outsl
inc
idivl
cli
push
cwtl
iret
insb
mov
cmpl
sub
mov
sbb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
fldl
sysenter
inc
fwait
mov
add
popf
cmpsb
inc
cmpsl
lret
iret
stc
xchg
mov
dec
sahf
aas
divb
mov
cld
or
dec
xchg
adc
mov
pop
ss
xor
xor
fcmovnb
notb
sub
clc
fwait
push
imul
cmpsb
pushaw
sub
roll
jle
inc
sti
or
jge
icebp
fsub
nop
jnp
in
ja
icebp
fwait
mov
out
ds
leave
in
and
xchg
jo
mov
adc
vpcmpeqd
rcrl
pushf
lret
pop
mov
repz
outsb
shrb
nop
rorl
les
stos
xor
or
mov
inc
sub
sub
mov
mov
mov
adc
nop
sub
dec
push
pshufw
fildll
iret
pushf
fdiv
mov
push
fdivrs
xchg
out
pop
xor
fiadds
cmp
mov
mov
cli
mov
hlt
push
iret
ja
mov
cmp
scas
daa
arpl
sub
mov
xchg
add
inc
insb
mov
movl
sbb
push
leave
pop
into
fildl
int
mov
adc
add
sub
cs
call
sbb
mov
mov
fisttps
add
lods
inc
aaa
mov
test
ds
mov
cmp
dec
repz
ljmp
jl
fs
jle
psubsw
pushf
ss
pop
xchg
xor
adc
xchg
mov
ficoml
dec
push
sub
fbld
jle
xchg
jbe
nop
and
pop
pushl
mov
add
sahf
popa
mov
adcl
rol
sub
xor
xor
adc
decl
fsub
or
daa
les
aad
mul
xor
insb
cmp
mov
scas
inc
fistl
pop
aam
lcall
pop
ja
int
popa
clc
dec
mov
or
mov
xchg
jmp
iret
loopne
sub
jne
and
adc
cmp
fwait
pushf
jp
sarl
jns
daa
out
adc
lcall
jmp
add
ds
scas
xchg
and
jno
test
aam
les
sbb
repnz
sub
mov
nop
xchg
cs
xchg
sub
rcr
xor
ror
jo
mov
cmp
jg
repnz
addr16
xchg
push
cld
mov
cmpsl
ss
mov
inc
mov
jle
dec
or
adc
repnz
push
sub
jmp
dec
fcoms
inc
xchg
mov
pop
fwait
test
push
das
das
fdivl
shll
pop
push
sarb
dec
inc
pop
in
icebp
mov
mov
enter
enter
sbb
push
cmpsb
pusha
out
fcmovnbe
pop
push
cmp
call
outsb
lcall
int3
adc
sbbb
add
mov
lods
js
stos
out
loopne
mov
enter
inc
adc
bound
mov
out
insb
in
mov
jnp
sbb
xorl
fldt
loopne
inc
shll
mov
mov
int
rorl
jge
xor
les
test
xchg
jge
mov
ljmp
test
andl
imul
pop
xlat
fstl
stos
rclb
out
and
inc
nop
add
ret
call
xchg
mov
xchg
adc
push
xor
popa
ret
cmp
cmp
push
mov
xchg
movsb
ficoml
or
cmpsl
out
add
mov
inc
add
stos
sbb
mulb
dec
mov
jae
inc
and
mov
mov
mov
inc
jle
testb
adc
scas
das
hlt
adc
inc
xor
pop
mov
xchg
outsl
aad
lock
or
or
jge
arpl
sti
js
inc
ss
fdivl
lret
lods
adc
pop
dec
inc
outsb
xor
jbe
xor
fsubl
add
xchg
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
mov
clc
adc
adc
stc
maskmovq
mull
pusha
scas
sti
push
mul
es
movsb
mov
ret
and
mov
mov
cmpsl
enter
dec
neg
jge
xchg
mov
mull
out
rcll
fmulp
inc
loope
push
sbb
sarb
clc
loope
mov
std
dec
out
mov
dec
and
movsl
jne
dec
jno
xlat
sub
ret
call
push
incl
jne
inc
movsb
adc
jmp
mov
aad
outsl
pop
xchg
into
adc
in
lahf
jmp
mov
or
xor
mov
and
xchg
push
std
test
sub
ljmp
push
sub
ds
scas
cltd
jbe
stos
fdivrs
call
add
scas
daa
cld
aam
fld
mov
dec
rolb
in
sarb
mov
xchg
inc
jg
or
cltd
call
cmp
in
ret
bndldx
rcr
cmp
pop
xchg
cmp
xor
dec
lcall
mov
addr16
mov
int
inc
nop
es
int
dec
mov
push
xchg
lods
addl
mov
add
lock
inc
rorl
and
mov
stos
mov
pop
mov
lods
stc
xor
jle
sar
and
fldcw
aaa
push
adc
lods
enter
pop
cmpsl
iret
cmp
popa
hlt
gs
sbb
dec
lods
cmpl
in
std
mov
cmpsl
nop
mov
ret
pop
xchg
dec
pop
xchg
push
xchg
xchg
ljmp
daa
mov
mov
movsl
imul
mov
lods
insl
and
fldt
jne
in
sub
or
mov
xor
imul
aas
mov
call
mov
xchg
xor
add
jge
mov
in
push
jae
jp
push
cmp
sub
imul
in
or
xchg
or
repnz
data16
cmp
movsb
and
leave
incb
gs
mov
lahf
cs
mov
mov
cmc
mov
add
mov
pop
add
mov
adc
mov
insb
sarl
xchg
xor
add
sti
sbb
pop
imul
into
rorl
sbb
mov
or
pop
sub
push
mov
xor
dec
movsl
pop
clc
adc
and
mov
mov
hlt
popf
inc
jecxz
mov
dec
fstl
add
push
je
mov
lea
loope
xor
mov
sbb
lret
push
popa
movsb
xchg
sbb
inc
mov
in
push
push
add
in
sahf
jmp
xchg
data16
xor
mov
sub
push
out
jb
mov
movsl
sti
outsb
dec
add
jmp
dec
add
xchg
pop
out
adc
fiadds
push
or
add
aad
mov
mov
jne
hlt
imul
ja
rcrl
fwait
iret
int3
mov
test
jmp
lds
in
sahf
or
push
mov
aad
add
cmpsb
mov
xor
push
push
outsl
mov
or
lret
and
push
les
pop
repnz
inc
mov
mov
test
vpcomub
mov
sbb
mov
mov
inc
popa
pop
and
dec
cmp
jns
int
out
mov
aad
lods
iret
icebp
jl
int
popf
adc
pop
fsts
xor
imul
iret
cmp
ss
fnstenv
call
jno
ret
cmp
jbe
lods
jmp
and
mov
cld
stos
jnp
jle
out
adc
push
sub
mov
mov
adcb
pop
ret
xchg
scas
in
xchg
inc
nop
or
loopne
pusha
pop
cmp
pop
xor
nop
xchg
ss
dec
inc
in
jl
push
fiaddl
inc
xor
push
cwtl
pushf
mov
test
sub
aaa
mov
adc
pop
test
cmc
sbb
mov
stc
xor
cwtl
clc
inc
int
jmp
fisubrs
clc
xor
in
push
mov
inc
mov
xor
fldl
cld
icebp
xor
jge
add
cltd
mov
bound
pop
sbb
pop
push
stos
frndint
adcb
sbb
daa
fdivl
cld
in
inc
xor
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
or
clc
adc
adc
push
enter
xchg
ss
and
mov
and
sahf
or
cmp
fucom
mov
xchg
pop
mov
das
fildl
jg
lret
lods
push
xor
or
sbb
movsb
fnstcw
push
jne
out
add
adc
inc
and
and
dec
jne
sahf
cmp
test
or
cmc
lret
nop
sahf
aad
loopne
lahf
hlt
pop
dec
lea
mov
lods
mov
xchg
jg
into
cwtl
pop
adc
into
fcomi
mov
mov
out
mov
fs
inc
push
insb
in
mov
popf
lret
rcrl
xlat
xchg
push
mov
and
rcll
inc
aas
lock
ret
hlt
daa
jb
cmp
xor
xchg
add
fcoms
lods
daa
jb
cmp
lods
pop
lea
or
or
push
loop
xchg
pop
mov
xor
jbe
mov
xor
daa
dec
cmp
add
cmc
dec
sub
bound
dec
cs
adc
or
sarb
and
dec
arpl
fidivl
push
mov
stos
cmp
and
pop
cltd
lods
mov
imul
out
push
cld
inc
sbb
inc
sub
loopne
mov
sti
adc
shrl
ss
pop
into
mov
mov
sub
loop
outsb
xchg
jge
xchg
mov
inc
sbb
sub
jp
xchg
sub
and
sub
adc
or
jne
mov
mov
inc
add
aad
gs
ljmp
stos
in
jg
and
test
push
sbbl
das
lds
add
add
out
call
pop
jecxz
dec
sbb
imul
inc
roll
and
fstpl
sbbb
lret
in
mov
xlat
fimuls
pusha
pop
inc
pop
mov
in
scas
add
push
mov
addb
sub
fcoms
jae
cmp
mov
lret
ljmp
dec
lods
inc
inc
inc
lods
fs
pop
inc
dec
int
and
insl
xchg
fwait
jno
lcall
aaa
bound
jmp
xchg
cwtl
inc
cmp
outsl
mov
adc
int3
xor
mov
dec
outsl
mov
in
mov
xchg
fnstcw
mov
out
sub
subl
punpcklwd
pop
fbld
inc
loopne
fnstcw
push
push
jp
rorb
mov
pusha
lods
add
mov
cmc
outsl
fsubrl
mov
adc
lret
jge
sahf
fdiv
sbb
pop
and
shrb
inc
fcmovbe
decl
push
mov
test
jecxz
sbb
lods
adc
mov
adc
sub
testb
idivb
adc
sbb
xchg
mov
mov
mov
mov
pop
push
xor
inc
pop
mov
fldt
stc
mov
icebp
pop
push
pusha
das
jge
pop
or
fcomp
es
pop
adc
fists
inc
xorb
pop
xor
sbb
jnp
fwait
add
or
iret
test
aam
adc
out
inc
mov
push
sarl
mov
jmp
mov
xor
and
adc
insl
inc
xor
aad
dec
insl
mov
icebp
shl
popa
iret
das
pop
xor
or
lcall
mov
xor
dec
add
mov
push
mov
ffree
mov
xlat
mov
xchg
pushfw
pop
xchg
pop
in
frstor
and
js
adc
paddw
pusha
popa
pop
sarb
hlt
and
nop
fsubrp
ss
popf
xorl
fiadds
in
das
cmp
sub
inc
dec
mov
push
adc
dec
push
mov
jl
add
fsubrp
clc
in
pop
mov
addr16
push
mov
cwtl
jmp
push
scas
sahf
lret
jp
clc
mov
int
jnp
xchg
mov
dec
xchg
mov
shlb
lods
jmp
dec
sti
cmp
cli
shrb
adc
sbb
and
and
ljmp
lret
jo
push
inc
leave
icebp
daa
ja
jnp
outsl
mov
mov
mov
mov
and
sub
jmp
push
mov
cmp
xchg
push
xchg
jne
clc
adc
adc
cmp
add
push
lahf
pop
movl
lds
bound
push
push
insl
int
push
sbb
and
push
add
dec
scas
pushf
cmpsb
pop
mov
int3
addr16
cmp
cli
xchg
jecxz
enter
fmull
aam
mov
mov
sub
cld
das
aas
jno
xchg
cwtl
or
pop
cs
sub
sbbb
and
and
lods
cmp
pop
mov
cld
xorb
push
jae
mov
or
add
and
push
jbe
popl
pop
ss
faddl
mov
jmp
jp
ljmp
xchg
clc
mulps
xchg
mov
js
cltd
mov
jns
leave
int
mov
stos
pop
push
fs
mov
sub
popa
xchg
pop
lahf
shlb
bound
and
add
push
in
xor
mov
insb
sub
jp
xchg
and
loope
cmp
leave
lods
in
sarb
xchg
mov
sub
lea
test
cltd
loop
jmp
inc
in
adc
jb
add
movsl
push
es
mov
dec
pop
arpl
adc
sbb
xchg
xor
fwait
iret
or
cltd
in
dec
cli
insb
dec
cmp
dec
push
and
pop
repz
or
loopne
jne
lods
scas
xchg
addr16
inc
xchg
ret
mov
mov
dec
aaa
out
jns
les
mov
dec
orb
inc
lock
or
or
and
data16
ss
bound
sbb
pushl
pop
popa
add
sbb
push
pop
mov
popf
pop
jo
lea
stc
jl
clc
push
iret
inc
clc
and
xchg
sub
aam
mov
xor
xor
mov
lods
fs
popa
mov
xchg
gs
nop
rclb
call
pcmpgtd
nop
xchg
sub
outsb
and
and
lea
in
test
or
out
ljmp
out
cmpsl
pop
arpl
mov
or
bound
popf
and
rcll
cmpsl
dec
push
pop
xchg
pop
pop
add
add
jns
imul
xor
loop
sbb
ljmp
push
mov
ss
sahf
or
std
insb
push
outsl
pusha
arpl
daa
pop
jbe
xchg
leave
mov
aam
lret
idivl
push
cmp
push
cli
ss
cld
mov
sbb
mov
fwait
adc
mov
xchg
add
adc
scas
sti
outsb
adc
mov
xor
mov
and
sub
push
adc
aaa
pop
mov
out
cmp
sub
out
les
insb
es
jge
int
push
movsl
or
xchg
or
psraw
or
lock
jg
loope
ja
mov
jp
sub
jns
adc
lcall
test
add
pushf
inc
pop
sbb
pop
push
mov
shr
push
jmp
cmp
sahf
inc
mov
mov
sti
lods
cmp
xchg
mov
dec
cli
ljmp
mov
popf
rcl
cmc
jecxz
popa
mov
cmpsl
cli
xor
lock
sbb
jge
adc
ss
pop
mov
xchg
mov
ljmp
mov
sub
and
push
add
repz
lahf
mov
cltd
and
sub
push
push
aaa
lahf
inc
bound
or
in
mov
pusha
enter
loope
mov
sub
in
mov
adc
pavgb
stc
imul
fbstp
stc
std
aas
mov
dec
xor
or
mov
push
pop
int3
inc
rcrl
into
stos
sbb
int
pusha
ud1
sbbb
sub
dec
mov
or
or
adc
sahf
loopne
inc
in
xchg
push
inc
xor
mov
fiaddl
or
jle
sbb
jb
cltd
loopne
or
aam
dec
pop
mov
out
mov
jne
jo
popf
add
pop
mov
std
fisubl
mov
in
lcall
arpl
insb
dec
xor
out
sub
sub
pusha
push
dec
stc
gs
sbb
mov
add
mov
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
insl
push
daa
and
lret
es
fcoms
sbb
mov
sbb
sub
xlat
jmp
and
jne
mov
loop
and
repz
cmp
xor
gs
out
ss
enter
popf
xor
pusha
arpl
call
lcall
mov
daa
cmp
hlt
sub
sub
add
lods
mov
inc
out
popf
and
push
rol
popf
add
cmp
stos
lods
sub
test
in
ljmp
outsl
fdivl
sbb
cwtl
jp
jg
das
and
js
add
jle
test
cmpsb
ljmp
lcall
cmc
fdivl
push
cmp
orb
push
and
insl
dec
adc
sbb
cli
fcoml
jl
into
out
lea
inc
aaa
dec
adc
adc
xchg
iret
cli
mov
in
push
loope
je
mov
and
pop
pusha
or
xchg
cwtl
xchg
and
adc
jp
dec
stos
inc
orb
xor
cmp
sub
or
jge
jmp
push
fsubr
or
cs
out
aas
aas
jl
xchg
dec
cld
aad
fdivrp
lret
pop
mov
movsb
dec
pop
xor
fwait
lret
or
mov
xchg
movsb
loopne
add
leave
rcll
scas
xchg
sbb
clc
adc
add
cmc
clc
mov
or
mov
loopne
jecxz
lret
mov
mov
dec
jle
jle
iret
popa
sub
leave
fcomps
loop
sub
sbb
mov
test
inc
in
mov
data16
mov
cvtps2pd
add
jne
sub
jl
in
xchg
sar
data16
pushf
stos
cmp
pop
sub
dec
xchg
or
inc
xchg
shlb
cwtl
inc
insb
fidivrl
and
adc
push
jno
mov
stc
sbb
bound
int3
mov
shlb
rcll
das
cs
loop
dec
inc
lahf
mov
fstpt
push
cmpsb
icebp
adc
aaa
test
fwait
sub
add
and
movb
xlat
pop
lcall
insb
xor
push
pop
xchg
lea
fistl
fiaddl
clc
or
xor
inc
xchg
pushf
mov
inc
xor
xor
cmpsb
gs
cmpsl
js
cmp
adc
scas
pop
inc
xchg
sub
out
adc
or
mov
popf
cwtl
lcall
jp
inc
and
lods
push
mov
imul
mov
adc
out
insb
mov
mov
leave
dec
push
mov
jg
push
push
subb
out
mov
xchg
mov
xor
xchg
fs
mov
pop
adc
add
pusha
jns
xchg
jg
mov
push
std
add
pop
add
testb
inc
aad
push
sti
mov
xorb
shl
in
sti
cmc
pop
data16
cmpsb
fnstsw
int3
lret
ret
out
rol
and
mov
and
push
loop
xor
adc
mov
or
fs
push
outsb
imul
sbb
sbb
cwtl
and
push
in
or
mov
out
mov
pop
jl
or
js
pop
test
cmp
pop
sahf
jecxz
xchg
add
mov
jl
add
mov
sti
push
add
lods
lret
xchg
ljmp
xchg
pop
push
inc
mov
sub
inc
mov
dec
mov
inc
jb
test
stos
mov
push
xchg
adcb
adc
inc
ret
jne
in
test
and
pusha
arpl
cmp
and
clc
cltd
insl
inc
call
push
fcmovnb
xchg
adc
hlt
and
jg
xchg
or
mov
cmp
adc
and
ja
decb
mov
adc
inc
cmpsl
in
sub
adc
sub
jp
fcmovnbe
lods
pop
mov
push
mov
mov
cli
jo
jg
stos
leave
fld
cs
mov
xchg
icebp
je
push
push
sbb
sbb
cmp
imul
repz
gs
add
lock
add
es
push
xchg
ficompl
iret
movsb
inc
outsb
jbe
push
adc
loop
stc
cmp
in
std
ret
je
test
xchg
movsl
sbb
fsts
push
inc
add
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
lds
inc
mov
cmp
adc
gs
fucom
das
add
cmpsl
sub
imul
push
orb
push
jbe
arpl
inc
ljmp
cmp
hlt
sti
daa
enter
in
jle
cmp
jb
cmp
outsb
adc
into
mov
arpl
aas
mov
lcall
jns
subl
popf
xchg
arpl
or
xor
add
fadds
addb
cltd
and
and
or
cvtdq2ps
mov
push
popa
mov
adc
inc
sbb
add
sub
sti
mov
jp
lcall
jno
incb
jg
jb
xorb
insl
int
andl
jae
xor
cmpb
pop
jae
fcoms
rolb
test
lods
ficomps
sbb
push
pusha
push
jne
adc
cmp
adc
mov
ja
jbe
jge
stos
ret
jae
sbb
movsl
mov
scas
inc
cmp
imul
adc
dec
ret
mov
daa
or
lea
adc
pop
adc
cwtl
mov
or
jo
mov
fdivrl
aad
xchg
sqrtps
sbb
icebp
cmc
mov
icebp
dec
jle
add
sub
sti
dec
std
xchg
cmp
in
in
loopne
bt
cmc
test
bound
mov
in
push
daa
jecxz
inc
jne
aas
out
jnp
cmpsb
pop
lods
sti
pcmpeqd
out
cld
decb
daa
movsl
fcmovu
sarl
roll
mov
bound
xchg
push
pop
inc
push
xlat
sbb
mov
sahf
mov
xchg
push
mov
inc
hlt
inc
xor
int
sub
cmpsb
jmp
sbb
sti
xchg
pop
pop
in
fmuls
movsl
mov
in
repnz
jbe
testl
adc
and
test
aam
sub
movsl
add
push
xorl
loope
pop
mov
xchg
cmpb
jp
xchg
test
idivl
in
mov
test
mov
mov
lcall
pop
lock
add
add
mov
and
insb
sbb
pusha
or
sub
insb
xor
cld
rcll
sub
add
das
sbb
pop
pop
test
pop
repz
testl
pop
mov
aam
inc
inc
and
mov
sbb
sub
dec
clc
imul
and
scas
bound
inc
loope
test
adcl
andb
sbb
adc
jmp
adc
sarb
push
mov
jg
shlb
cmp
push
jae
dec
loopne
popf
pop
clc
rorb
add
pop
js
popf
lea
mov
sarl
cmc
xchg
out
push
jo
jge
lock
mov
imul
dec
pop
mov
push
and
sbb
imul
push
mov
cmp
aam
insl
pop
push
add
loope
loop
cmp
add
lret
mov
add
orb
dec
and
mov
push
into
push
out
sbb
sub
vhaddps
push
rcl
inc
sbb
pusha
mov
mov
pop
jg
sub
aaa
int3
mov
scas
fwait
imul
repnz
lcall
jl
out
lds
dec
mov
sti
dec
ret
cmpsl
fcom
mov
shl
pop
cld
faddl
insb
shll
jbe
mov
xchg
lret
and
jp
in
dec
adc
jo
push
mov
cmc
push
dec
mov
int3
push
mov
inc
fisubrs
sub
pop
cmp
mov
pop
fwait
mov
pop
push
pop
mov
inc
push
adc
inc
mov
sub
movd
sub
xor
lcall
dec
mov
pop
daa
inc
mov
xchg
jns
mov
mov
mov
cmp
iret
jae
mov
test
out
mul
push
fldenv
mov
add
inc
push
cmp
sbb
loope
cli
dec
add
out
push
xchg
mov
and
nop
into
mov
jmp
nop
test
adc
sub
dec
xchg
jno
xchg
cmpsb
inc
clc
adc
adc
outsl
outsb
sbb
dec
pop
cmp
daa
cmp
in
mov
mov
leave
xchg
lock
test
fucomip
lcall
push
popf
and
repnz
jmp
les
loop
lds
lcall
sbb
inc
inc
jns
repz
cld
push
jno
dec
jmpw
aam
js
mov
mov
mov
jb
daa
fmull
jnp
or
mov
cmp
sarl
jne
cmpsb
cmp
and
pop
jo
pop
pop
cmpsl
and
cmp
sbb
movsl
iret
pusha
mov
sub
fsubr
clc
jg
dec
cmpsb
jne
sub
lahf
cmc
adc
push
inc
bound
jae
daa
dec
test
mov
clc
pusha
mov
lahf
loop
prefetch
push
sub
js
dec
out
xchg
fiadds
jmp
dec
mov
mov
insb
test
in
stc
or
mov
xor
lds
ffreep
jnp
stc
or
pop
pop
jle
sbb
sub
sahf
jp
inc
movsl
mov
mov
insb
ficomps
push
xor
mov
lods
shlb
dec
cwtl
mov
mull
xlat
jmp
ja
push
test
mov
ret
pusha
push
push
push
sub
pop
inc
add
mov
sbb
scas
or
cmp
movsl
push
push
xchg
sub
dec
xchg
shl
cmp
notb
cltd
lcall
sub
fisttps
loop
nop
dec
add
pusha
fisttpl
enter
inc
push
pop
out
loop
mov
cmp
sbb
or
jg
movsl
lcall
push
push
in
aam
jo
loopne
dec
aas
mov
push
or
fsts
stos
repnz
rol
or
dec
stos
cmp
add
push
rolb
test
imul
push
add
push
pop
inc
movsl
loopne
repz
ja
out
pop
ja
mov
add
add
add
aaa
call
out
inc
icebp
xor
add
ficompl
and
dec
hlt
xchg
orl
xor
and
cld
pop
jae
xor
xchg
cmp
push
mov
add
pop
add
and
movsl
out
movsl
sub
clc
cmp
test
add
adc
mov
test
or
and
xchg
inc
inc
cmpb
stos
add
cltd
icebp
and
mov
fimull
out
pop
rol
jb
ret
lock
data16
push
pop
mov
into
cmp
popf
movb
in
or
test
xchg
and
fstpl
int
in
cli
fmull
daa
push
cltd
inc
xor
pop
push
aad
add
outsl
jb
dec
push
xchg
xchg
and
jne
or
loopne
fs
mov
imul
sub
scas
clc
icebp
add
xor
inc
ds
inc
lods
mov
repnz
sub
mov
fisubl
sbb
add
mov
or
adc
repnz
mov
cmpsl
out
in
pop
jnp
cmc
push
inc
and
xchg
outsb
pop
xchg
mov
fidivrs
xchg
adc
add
stos
cmp
xchg
inc
inc
ss
or
mov
jns
popa
dec
fisubrs
mov
aaa
xchg
fildl
inc
jp
and
dec
xor
insl
jno
adc
ja
push
adc
jl
jbe
test
pop
or
sub
cmp
pop
cmp
nop
popf
or
mov
mov
fwait
cli
jle
dec
adc
loopne
test
mov
push
and
pop
push
or
out
lea
cmp
loop
fs
jp
xchg
aad
mov
or
fs
aaa
cltd
stos
inc
jecxz
mov
stos
inc
mov
add
pusha
test
insl
fidivrl
xchg
jp
movsl
xor
dec
xlat
pop
mov
jmp
pop
push
ja
and
jne
inc
sbb
loop
aam
mov
mov
call
insb
orb
fisubs
dec
mov
sti
fnstsw
xorl
xor
adc
jmp
stos
pop
add
ret
cmpsl
cmp
cli
pop
sub
ret
pop
cmpsl
adc
or
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
scas
adc
xor
adc
adc
fdiv
xchg
mov
dec
out
dec
std
push
sbb
adc
xor
and
push
inc
jnp
lret
pushf
ficompl
test
sub
into
pop
inc
sub
push
adc
mov
mov
push
mov
jl
xchg
jno
jns
std
pop
or
fimuls
decl
mov
cmpb
mov
jge
mov
test
arpl
and
inc
xchg
out
out
out
add
mov
adc
jmp
or
insb
int
xor
dec
sbb
adc
or
sub
lea
mov
dec
or
sbb
outsb
enter
je
pop
mov
adc
jmp
stos
pop
inc
sub
mov
ja
cmp
lret
jle
out
cmc
icebp
cmp
sbb
js
add
scas
outsl
xlat
jno
and
xchg
mov
addr16
xlat
dec
mov
xor
pmaxub
mov
popf
inc
dec
xchg
jae
dec
dec
insl
mov
mov
popa
or
lods
xchg
xor
inc
push
imul
mull
dec
ss
std
das
orb
dec
dec
inc
or
xchg
or
mov
add
jne
sub
and
lock
push
dec
test
loope
jb
popf
sub
rorb
repz
in
push
fmull
xchg
rcll
add
or
ja
sub
enter
sbb
rcl
pop
lock
call
add
movsb
stos
jp
pop
xorl
cli
les
into
roll
data16
inc
fsubrl
xor
popf
test
add
pop
mov
push
dec
add
call
imul
mov
cmp
shll
fdivl
in
and
lods
test
mov
test
lds
mov
icebp
fabs
inc
aam
cmp
sti
pushf
imul
cmpsl
pop
popf
testb
jmp
xchg
push
pop
add
movsb
push
adc
aas
fdivr
scas
xchg
push
lcall
pop
mov
scas
mov
push
jno
mov
std
adc
daa
mov
dec
pop
cld
cmp
pop
test
xchg
xchg
push
jo
rolb
outsb
mov
cmp
jp
jne
out
jle
or
inc
aad
mov
xchg
mov
repnz
mov
push
mov
mov
pop
xchg
popa
mov
xor
loopne
loop
repz
push
jbe
call
int
mov
icebp
xchg
xor
cmp
repz
in
fstpt
lds
insb
xor
sub
out
aam
pop
adc
push
test
out
in
int3
mov
sub
imulb
dec
out
dec
adc
or
sar
repnz
or
test
and
int3
ret
pop
aaa
add
push
pusha
push
cmp
jb
fnsave
and
xchg
jle
decl
push
inc
ret
roll
mov
xchg
sti
sbb
cmp
ret
into
stos
lods
mov
dec
sub
test
xchg
gs
lret
dec
pop
mov
mov
ror
xchg
adc
mov
sbbb
bnd
adcl
bound
push
lret
sbb
imul
loop
mov
cmpb
imul
imul
xor
or
adc
aam
fmull
and
int
je
shrl
sar
lcall
mov
cmpsl
adc
scas
dec
das
cmp
mov
mov
xchg
test
iret
jl
movsb
aad
in
cltd
pushf
orl
sub
push
xor
mov
ss
or
pop
dec
mov
in
push
pushf
lea
faddl
aaa
push
cmc
out
sub
jl
dec
inc
xlat
sub
adc
test
push
mov
mov
mov
and
jl
pop
call
loop
sub
lret
sbb
mov
jle
fcoml
popa
je
negl
mov
push
xchg
or
mov
add
ret
lds
sub
mov
nop
mov
aam
and
mov
rcl
fsubrl
es
out
call
aas
cltd
sub
push
dec
cld
sarl
faddl
ljmp
adc
mov
inc
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
fwait
or
push
popa
fadd
orl
jge
sub
test
mov
add
mov
sbb
jmp
faddp
andb
inc
lds
rcll
push
rcll
cmpsl
cmpsl
xor
int3
sbb
cmp
cmp
mov
dec
jp
outsb
jge
iret
or
iret
adc
xor
and
push
push
addb
xchg
leave
imul
add
clc
xor
daa
sub
cmp
cmpsl
insb
jo
in
out
sub
les
push
lods
daa
std
sbb
jb
xor
sbb
add
xchg
out
rorb
sub
fdivrs
and
leave
fs
push
cwtl
mov
xchg
fimuls
jns
pop
push
cmp
xchg
inc
cmpsb
mov
xor
jns
fsubr
addr16
jo
enter
test
pop
lods
into
mov
mov
into
cmp
sbb
clc
push
push
xor
jo
js
inc
xchg
sbb
push
mov
shrb
cmp
or
sbb
sub
popa
cltd
mov
iret
int3
push
mov
mov
js
test
loopne
adc
test
xor
into
aas
jne
mov
jb
fisubrl
jo
xlat
cmpsb
jmp
xchg
adc
or
mov
mov
jecxz
idivb
xorb
inc
ret
adc
jmp
push
adc
cld
mov
push
lock
leave
stos
xor
inc
daa
les
aaa
fidivrs
dec
mov
dec
or
clc
scas
xchg
sbb
pop
cli
nop
lea
cmpsl
loope
testb
enter
or
rolb
jle
rclb
scas
add
and
xor
push
fwait
scas
and
and
imul
sbb
shl
cli
lods
lret
dec
sub
aas
test
cmc
jbe
int
sub
mov
mov
push
sbb
orb
out
and
popa
and
lcall
jbe
test
jg
jno
inc
xor
mov
mov
in
das
rclb
pop
or
mov
lds
rcrl
inc
push
mov
out
sub
les
sub
inc
jg
or
sbb
lods
cmp
pop
icebp
sub
lock
addr16
inc
sbb
cmp
push
mull
mov
jno
adc
pop
sub
mov
aam
mov
cmp
pop
mov
xchg
cmp
or
out
pop
cltd
dec
maxps
adc
pushf
and
sti
jno
mov
dec
sti
dec
stos
inc
xchg
in
jne
je
push
or
repnz
cmp
push
mov
es
add
fsts
mov
icebp
into
add
fadd
mov
inc
fs
fdivs
idiv
das
ja
int
pop
mov
fwait
mov
lds
and
xor
repnz
das
mov
jmp
pusha
imul
adc
inc
sbb
pop
lcall
push
aas
in
aam
imul
into
xor
sub
imul
xchg
fcomps
lret
cmp
fnsave
out
pushf
arpl
and
inc
sub
push
int3
inc
ja
xchg
fwait
scas
bound
and
push
test
or
jns
daa
rcl
movsl
or
inc
addl
jo
and
iret
jg
sbb
jae
adc
cmc
lds
hlt
or
aaa
shlb
xchg
pop
js
repz
jmp
in
xor
test
lret
loop
sbb
ja
cmp
inc
mov
mov
aad
rcrb
int
sub
mov
mov
in
mov
mov
adc
cld
mov
cmc
clc
pop
lcall
sbb
sub
inc
in
sbb
rsqrtps
in
dec
and
ret
cmp
fstpt
dec
add
add
into
in
mov
dec
dec
jmp
out
xor
mov
push
inc
sub
sarb
push
scas
pop
fwait
push
sub
adcb
mov
fstp
sbb
mov
cmp
cmp
imul
test
inc
ss
in
jns
faddl
jg
xorb
pop
mov
imul
fdivrp
mov
mov
cs
cs
loope
lds
fmuls
add
add
push
mov
into
mov
cmp
and
adc
jge
loope
add
adc
dec
sub
mov
repnz
xor
cmp
faddp
jne
jge
aam
std
mov
inc
push
sti
sbbl
addr16
fwait
mov
pop
jns
cmpsb
dec
aad
cmp
cmp
push
adc
or
lahf
sub
jecxz
add
loop
push
or
add
testb
lcall
dec
aad
sub
cmp
int3
cld
fistpl
mov
inc
lds
mov
daa
test
pop
inc
mov
stos
fldenv
and
stos
fdivrl
dec
pop
mov
push
add
lret
inc
test
fwait
dec
add
jp
jl
ds
and
inc
xchg
mov
mov
push
push
xchg
sbb
or
out
sti
test
dec
movsl
mov
dec
jg
bound
sbb
and
cli
mov
bound
loopne
cltd
cmp
rcr
ret
jg
in
ficoms
ds
repnz
sbb
mov
out
pop
jp
jl
lods
dec
sbb
int
imul
sbb
call
shll
add
testl
js
sub
outsb
hlt
bound
or
dec
daa
xchg
aas
xchg
pop
pop
mov
or
adc
pop
or
xchg
mov
jp
cltd
add
mov
pop
mov
or
movsl
cmpsb
mov
xor
sub
shl
adc
cmpl
shr
test
pop
pop
fs
mov
push
dec
jo
test
scas
cmp
adc
sub
lods
mov
das
inc
push
jl
add
insb
aaa
jle
cmp
push
das
mov
inc
xor
popf
test
sahf
lods
push
loop
les
aaa
or
stc
xor
push
xchg
loope
negb
test
outsl
mov
pop
vmovups
mov
push
mov
mov
add
sti
mov
mov
inc
out
mov
jl
push
cmp
lea
sub
ljmp
negl
inc
cmp
andb
mov
ret
repz
xor
out
push
lret
sub
fs
add
lock
out
or
xchg
je
push
pusha
pushf
mov
ja
push
ljmp
sbb
mov
push
push
inc
and
std
shll
inc
push
inc
jp
mov
xchg
jo
cltd
cmpb
fdivrl
fsubrs
sub
push
leave
or
imul
aam
add
out
iret
cmpsl
dec
pop
jnp
dec
shrl
das
mov
rcll
lret
jae
pop
cmpb
movsl
stos
add
je
test
insl
shl
lods
xchg
sbb
or
adc
hlt
xor
push
xor
jae
inc
and
mov
pop
scas
pop
insl
cmp
loopne
andl
popa
jl
xchg
or
pop
popf
pushf
aas
jo
xorb
rclb
adcb
mov
push
pop
testl
std
test
lock
cmp
mov
dec
mov
cmpsl
lea
jmp
push
adc
mov
push
rcl
push
scas
add
jnp
sahf
cs
inc
cmp
push
lahf
lock
mov
cwtl
scas
jnp
cli
pop
and
repz
rclb
inc
mov
inc
and
dec
leave
popa
mov
cmc
push
sahf
mov
sub
and
inc
iret
push
dec
out
inc
sti
pop
popf
mov
push
es
ljmp
les
movsb
fs
gs
sub
in
rcrl
pop
aam
pop
pop
xor
push
jb
pop
cmp
pause
add
add
xor
dec
js
xadd
and
cmp
out
push
inc
pop
inc
sub
fdivs
add
pop
xchg
dec
pop
xor
andl
and
pop
icebp
aaa
into
cmp
loopne
aam
cli
push
dec
ffree
pop
sub
mov
sub
pop
negl
int3
add
cmpsb
test
pop
imulb
fwait
test
das
cmp
cld
rolb
dec
nop
dec
cmp
and
sahf
push
inc
inc
fs
lea
mov
sbb
cmp
in
adc
or
xor
xchg
push
gs
jbe
jbe
xor
ficomps
mov
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
mov
outsb
or
adc
ror
push
fidivrs
push
dec
je,pn
imul
xor
and
shl
add
stos
jns
dec
dec
xchg
and
mov
insb
lahf
jmp
push
cmp
mov
shrb
std
orps
jb
mov
in
lret
jmp
fsubrl
addl
mov
pop
rsm
rol
rclb
fadd
ljmp
in
pop
pop
mov
addr16
jge
into
roll
insl
inc
daa
xchg
adc
adc
add
inc
outsl
flds
je
enter
jnp
mov
dec
mov
jecxz
scas
popf
mov
test
cmc
lret
mov
cmc
clc
sub
cmp
mov
dec
sub
push
icebp
push
xchg
or
or
or
add
sub
and
dec
stos
and
push
pop
in
mov
inc
jno
adc
push
push
xchg
and
inc
dec
test
add
scas
cmpsb
or
cmpsb
xlat
test
hlt
cli
add
or
xchg
mov
mov
pop
push
and
mov
adc
and
jb
sub
jl
fcmovb
outsl
mov
inc
push
push
xor
ret
fists
cmp
sub
pop
inc
sti
fprem
sbb
inc
fs
xor
mov
push
adc
push
fildll
cs
fiaddl
pop
test
mov
nop
mov
inc
add
sbb
fsts
sbb
cmp
imul
xor
pop
mull
inc
test
fstpl
cmp
sbb
sbb
lea
mov
fidivrl
sarb
mov
add
mov
test
mov
push
inc
arpl
loopne
jns
and
inc
in
add
arpl
sahf
pop
fwait
pop
and
push
mov
adc
sarl
shr
mov
call
push
inc
jb
push
repz
mov
aam
jecxz
iret
sub
out
aas
out
jae
push
mov
sbb
cltd
pop
cmpsl
cwtl
addr16
test
lret
pop
aam
cltd
inc
je
xchg
fistps
lret
ljmp
adc
aas
outsb
cmp
aas
sub
push
xchg
test
outsb
mov
inc
adc
pop
das
inc
xor
stos
outsl
and
add
mov
and
push
rorl
test
dec
cwtl
mov
and
push
mov
pop
inc
nop
icebp
mov
cmp
add
cmp
mov
mov
pop
out
in
arpl
out
sbb
xchg
leave
loope
out
test
shll
cmp
outsb
repz
inc
dec
jnp
jbe
adc
out
lret
lds
lea
inc
mov
popf
cmp
jae
inc
push
mov
dec
sub
repz
andb
mov
xchg
push
out
lock
mov
mov
outsl
data16
adc
mov
stc
xchg
mov
mov
iret
movsb
pop
in
jg
adc
sahf
xchg
mov
adc
sbb
test
insl
loopne
lahf
mov
je
xor
fistpll
test
dec
pop
lock
or
mov
pop
sar
stos
cmp
push
rcrl
iret
insb
loope
jae
mov
outsl
lahf
loopne
mov
insb
cmp
dec
or
cmpsb
fistl
and
int3
leave
cmp
inc
push
ja
sub
inc
push
dec
push
bound
jge
xchg
push
inc
rcrb
pop
xor
dec
scas
std
bound
pop
enter
xchg
ss
cmp
lcall
xchg
imul
and
stc
dec
sbb
adc
dec
inc
mov
stos
cmp
outsb
jne
sbb
and
add
inc
vpaddw
dec
rcll
push
add
xchg
xor
scas
pop
sbb
and
gs
lahf
adc
out
lea
out
pop
pop
loope
ror
loope
das
mov
inc
cmp
xor
mov
popf
pushf
imul
subl
cmp
bound
and
and
lea
out
adc
or
loop
adc
cli
cmpsl
mov
icebp
add
out
repnz
mov
in
sub
pop
pop
lds
mov
mov
inc
cld
movl
jmp
mov
test
adc
inc
and
int3
cli
mov
push
or
inc
push
xorl
xchg
jmp
mov
inc
inc
clc
xor
mov
jecxz
repnz
call
jnp
push
cmp
jecxz
push
xor
xor
sub
scas
push
jle
in
dec
xor
cli
mov
xchg
out
ds
test
bound
or
jp
sbb
dec
aas
pop
mov
pop
hlt
mov
inc
dec
dec
fidivl
ljmp
sbb
dec
js
mov
shl
subb
cmp
call
push
test
xchg
lea
negl
fldenv
pushf
push
cmp
push
push
cmpsb
mov
sbb
adc
mov
xchg
scas
dec
jp
jns
rol
sub
push
sti
insl
in
fisttpl
sbb
in
pop
in
loope
pushf
mov
pop
pushw
in
pop
xchg
adc
push
movsb
fimuls
aam
in
push
shlb
inc
into
outsl
mov
enter
jmp
lods
push
inc
mov
jns
add
mov
dec
or
les
or
lcall
adc
xchg
pop
inc
out
test
lahf
inc
cwtl
aas
dec
loop
mov
add
push
decl
jp
popf
and
sub
and
insb
arpl
sub
movsb
mov
sub
ret
testb
or
arpl
inc
adc
mov
push
pop
mov
insl
jg
ja
fcompl
inc
jns
sbb
sub
aas
lret
xchg
sub
dec
mov
dec
inc
sahf
jp
sahf
into
outsl
xchg
add
mov
sbb
pushw
mov
pop
rcll
faddl
or
fdivs
pop
test
pop
jge
pop
xchg
dec
mov
test
mov
repnz
into
mov
les
in
out
mov
into
inc
pop
xor
out
cltd
sarl
ss
or
movsb
or
mov
inc
dec
loop
jle
mov
lods
jns
sarl
lock
pop
adc
and
lods
ss
cmpsb
and
push
in
je
lcall
movsl
xor
ds
lock
jl
stos
or
sbb
mov
xor
and
fimull
jo
mov
inc
xor
movsb
out
es
xchg
pop
mov
xchg
jns
loop
lock
arpl
in
fildl
call
push
xor
enter
jl
shl
sahf
mov
sub
jae
dec
mov
shlb
dec
dec
xchg
or
pop
mov
test
addr16
in
out
fbstp
sar
mov
sti
jbe
shlb
cmp
xchg
sarb
jmp
sub
les
add
mov
xchg
inc
mov
das
int3
test
xchg
icebp
out
test
out
or
lock
inc
pop
mov
jne
adc
stos
xchg
repz
and
pop
jne
sti
addr16
add
sbb
gs
dec
fmull
and
scas
bound
fstl
adc
and
jae
adcl
insl
sub
xor
jmp
jp
jb
or
ret
dec
adcl
xchg
aaa
push
mov
jg
jp
sbb
fs
mov
lods
or
jnp
lods
or
add
test
cmc
out
insb
adc
clc
jne
add
in
rorb
push
cmp
mov
dec
dec
or
fcmovb
xchg
ret
adc
les
jae
adc
sub
je
adc
jmp
inc
fsubrs
lods
mov
aaa
sbb
dec
push
scas
arpl
leave
lods
out
dec
and
lock
jnp
sbb
out
push
pop
mov
push
inc
lcall
in
mov
movsl
scas
outsb
fbstp
mov
push
and
fcoms
out
and
adc
repnz
das
cmc
cli
loope
outsl
adc
in
sarb
inc
pop
cmp
repz
js
mov
sub
dec
leave
xor
add
xor
lods
push
loop
cmpl
cmp
inc
or
adc
pop
or
bound
fldl
pop
clc
fistl
cmc
mov
inc
add
gs
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
enter
xchg
mov
dec
push
sbb
add
pusha
xor
and
mov
cli
pop
dec
popf
push
xor
push
les
or
cwtl
mov
hlt
jo
cmp
test
les
inc
inc
sarb
lret
cmc
adc
sbb
adc
icebp
push
or
add
mov
inc
sub
arpl
inc
mov
fbld
pop
pop
sub
mov
and
sbb
jae
shll
mov
mov
push
inc
sti
inc
sbb
mov
jne
cmpsb
mov
addr16
outsl
insb
cmc
xchg
xchg
jb
add
int
xor
cmpsb
leave
push
jb
pusha
dec
pop
sub
test
xchg
or
sbb
sbb
mov
test
dec
push
mov
adc
sbb
pop
cmpsb
cld
nop
das
dec
div
cwtl
add
mov
gs
and
or
gs
xor
dec
and
adcl
sahf
sub
mov
popf
notb
push
xchg
jnp
jle
cwtl
xor
fs
or
lock
stc
dec
es
push
cmpsl
jmp
or
inc
test
fisttpll
les
dec
and
push
insl
cwtd
loop
insb
insl
mov
jmp
fsubrs
inc
jae
addr16
sub
or
pop
add
mov
mov
or
fiadds
fld
jp
bound
jnp
inc
stos
std
iret
mov
xor
mov
jnp
lahf
movsb
clc
mov
test
xchg
push
je
imul
cmc
cmc
orl
mov
fs
repz
adc
test
icebp
cmp
mov
es
fldl2t
fmulp
or
push
ljmp
add
mov
or
lods
mov
xchg
mov
mov
das
sti
sbb
icebp
incb
jl
xlat
sub
enter
cmp
div
sub
adc
shl
cmp
stos
pop
hlt
xchg
test
mov
fisubrl
rclb
aad
jnp
sbb
add
outsl
fwait
pop
or
cmpsl
je
xor
add
pushf
dec
push
xor
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
