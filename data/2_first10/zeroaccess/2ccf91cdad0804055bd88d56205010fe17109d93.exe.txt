push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
xchg
pushf
lods
adc
adc
int
adc
daa
jecxz
xor
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
mov
mull
in
enter
adc
imul
sub
push
rorb
pop
or
lods
jnp
sub
lret
push
cmc
or
jns
adc
aaa
jnp
repz
dec
push
xchg
cmp
xchg
xor
dec
add
push
push
add
insb
aad
mov
xchg
jne
dec
sahf
jno
inc
pop
ss
sbb
je
jmp
out
or
jl
aam
paddusb
fisttpl
sub
ret
pop
sub
jmp
inc
or
jmp
leave
testl
out
cs
ja
pop
dec
std
sub
loopne
data16
adc
push
ret
test
rclb
xorb
push
sub
popa
or
adcb
outsb
sbb
insl
sbb
lds
subl
cmp
push
adc
adc
add
out
arpl
cmp
or
out
mov
aas
scas
fildl
xchg
outsl
out
hlt
pop
xlat
mov
add
js
pop
rorb
adc
int3
arpl
mov
add
pusha
mulb
ljmp
adc
mov
sbbb
pop
dec
push
xchg
sbb
mull
pop
jae
inc
lods
sarl
xor
iret
inc
sahf
sahf
adc
pop
inc
ret
inc
xchg
jbe
fistpll
pop
sbb
iret
add
mov
roll
and
push
adc
sub
mov
add
mov
mov
mov
adc
jl
mov
clc
jp
pop
ret
mov
insb
out
insb
test
rorl
js
sbb
testb
lock
push
jnp
popf
jg
adc
js
push
flds
repz
inc
push
std
push
testl
xchg
dec
loope
arpl
sbb
jecxz
sbb
mov
pop
jmp
in
imul
rorb
sub
imul
lret
inc
fwait
jne
mov
adc
rorb
out
popa
push
hlt
adc
clc
dec
add
and
sub
jb
sbb
sub
xchg
inc
and
out
xchg
push
stos
clc
jle
stc
dec
test
in
mov
repnz
pop
ret
jns
or
pop
sbb
cmpsb
jl
push
cmc
jp
push
mov
rorl
xchg
sbb
in
mov
adc
push
and
jecxz
pop
sbb
addr16
and
movsb
xchg
mov
imul
mov
push
mov
lods
rcrb
in
clc
cmp
lods
filds
sbb
into
and
lea
dec
roll
or
lahf
pop
shll
popa
sbb
movsl
mull
inc
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
insl
xor
int
adc
int
adc
cwtl
test
mov
outsl
jl
popf
add
sbb
fwait
data16
out
or
shlb
xchg
arpl
and
mov
mov
push
add
std
gs
dec
push
sbbl
inc
mov
hlt
pop
xor
loope
stos
mov
into
sbb
mov
popa
mov
fidivrs
out
insl
pop
and
std
sbb
pop
and
jae
stos
mov
and
xor
iret
jb
cmp
lcall
mov
stos
pop
jo
xor
outsb
jg
lahf
insb
sub
cmpb
popf
inc
lret
push
xchg
es
lcall
and
mov
repnz
aas
push
sub
push
into
mov
gs
sbb
pop
ja
mov
push
jne
ljmp
shl
cmp
nop
xchg
fdivrp
add
stc
jb
mov
mov
mov
inc
sbb
movsl
xor
repnz
enter
pop
mov
scas
jg
lods
xor
mov
mov
es
push
das
stos
mov
cmpl
jb
cwtl
push
and
out
xor
mov
pop
je
divl
mov
aad
outsl
int3
dec
mov
and
loope
inc
icebp
push
push
hlt
pusha
mov
mov
lods
add
push
push
js
test
inc
je
add
dec
inc
inc
add
or
cltd
xor
clc
rolb
cmp
fadd
lret
aad
fs
bound
jo
inc
cld
ret
cmc
iret
mov
cmp
sub
scas
mov
loopne
out
jb
insl
pop
xorl
inc
dec
inc
pextrw
ja
mov
mov
imul
test
das
and
sub
cltd
sub
dec
movsb
xor
inc
mov
push
sti
jg
xor
leave
sahf
test
add
ja
push
fs
sbb
stos
pop
mov
xrelease
inc
push
xorb
mov
ret
jp
sarl
jge
lahf
rcl
stos
sarl
sbb
sti
add
stos
sub
lods
mov
aaa
push
imul
clc
or
out
xchg
xor
ljmp
in
push
cs
insl
or
shrb
mov
popa
jg
pop
aas
and
jbe
ret
xchg
ljmp
xchg
pop
cmc
fsubs
ljmp
je
push
loope
and
adc
mov
adc
call
out
fwait
sbb
push
ss
dec
xchg
jp
dec
sbb
outsb
jmp
mov
inc
iret
add
xor
cmc
mov
lods
inc
cmp
cmpsl
mov
xor
insb
jg
jge
mov
mov
or
loopne
and
lcall
jne
xor
pop
cmp
sub
lds
xchg
add
pop
cmpsl
mov
jl
push
push
popa
andl
push
jb
stos
test
sbb
jmp
inc
inc
push
and
mov
cmpsl
enter
cmp
or
push
xchg
xor
inc
jl
cs
xlat
push
add
repz
sbb
hlt
add
jge
sbb
mov
cmp
add
adc
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
push
pusha
scas
insb
orb
adc
adc
adc
sub
decb
ja
stos
loope
pop
xchg
nop
ficoms
lahf
xor
mov
out
cmp
cs
in
ret
cwtl
add
jp
cmp
sti
movsb
adcl
fs
dec
or
sub
cmp
jg
pop
sub
repnz
dec
adc
jp
arpl
adc
and
xchg
or
jno
shrb
scas
xorl
xor
popa
test
in
pop
shrl
lock
and
cmp
ret
test
dec
lret
jle
ffree
dec
mov
ljmp
push
or
sub
test
mov
shll
mov
mov
mov
mov
stc
sbb
ja
cmp
push
ficoms
inc
and
jno
xchg
cmp
cmpsb
shll
or
or
testb
jle
sar
and
sbb
add
dec
loope
xchg
inc
pop
xor
sub
jmp
popa
push
mov
sbb
adc
push
subb
mov
push
ljmp
adc
cld
lret
rcr
add
adc
sub
arpl
dec
mov
cmp
int
cwtl
out
lods
clc
mov
fisubs
xchg
mov
out
in
mov
xchg
add
and
in
or
pop
lret
or
in
std
sub
adc
jecxz
or
ss
xchg
lock
pushf
sub
cltd
popa
adc
outsl
or
je
ja
mov
xor
push
jne
push
aas
loop
iret
adc
dec
dec
push
enter
fiaddl
xor
icebp
js
mov
hlt
dec
pushfw
mov
mov
adc
out
sbb
ljmp
test
out
jle
repz
cmp
jecxz
hlt
popf
insb
cmp
orl
inc
sbb
push
mov
lea
xchg
inc
es
dec
data16
push
jae
cmpl
inc
push
sub
mov
popa
aaa
jecxz
jns
push
ret
hlt
add
lock
xor
inc
ja
mov
leave
xchg
mov
clc
nop
mov
ud2
pop
mov
pop
rorl
adc
lock
mov
fwait
mov
inc
ss
push
mov
orb
int3
jmp
addl
jg
repnz
pusha
xor
inc
or
xchg
cwtl
shll
fisubl
sbb
mov
inc
test
mov
cld
xlat
adc
imul
sub
insb
adc
mov
inc
lods
gs
hlt
movsb
mov
pop
mov
out
nop
and
and
mov
repz
inc
popf
repnz
cwtl
outsb
inc
imul
mov
decb
pop
dec
push
repz
aam
outsl
adc
jge
movsl
cltd
inc
and
or
jo
xchg
cwtl
dec
xchg
fdivrl
outsb
les
std
and
fs
loopne
sub
rorl
stc
cmp
sbb
sub
dec
fnstcw
in
pop
or
cs
das
xor
pop
pop
mov
daa
fisubl
arpl
mov
push
mov
or
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
dec
jnp
jmp
rcr
push
sbb
mov
cmpsl
in
cmp
adc
and
aaa
jg
lods
cli
sub
clc
or
insb
and
cwtl
or
and
rcrl
push
imul
lds
xchg
pop
mov
jae
pusha
pop
pop
es
mov
insl
ljmp
idivl
sub
mov
fcmovb
out
jo
pop
popa
sbb
mov
mov
es
pop
decb
xchg
test
dec
fsts
movsb
and
movsl
in
inc
sub
mov
movsb
bound
hlt
add
or
adc
push
sbb
dec
and
pop
lods
cmp
xor
pop
stos
mov
rorl
xchg
cmpsl
ljmp
jl
cld
pop
jle
mov
xchg
dec
xor
scas
das
jbe
inc
pop
data16
sbb
jno
aam
lods
ret
sbb
or
test
mov
cmp
sbb
jbe
mov
ds
or
bound
xchg
mov
ret
leave
adc
xchg
cmp
dec
jbe
cmp
adcl
push
outsl
in
mov
push
int
arpl
popf
adc
enter
nop
sarl
xor
or
cmp
stc
xchg
lea
cmpsb
cmp
data16
xor
pusha
push
mov
icebp
jp
idivb
inc
push
jl
cmp
aas
fldcw
or
loopne
jae
lock
pop
in
cmp
jo
cmp
ret
fdivs
push
push
aas
in
das
mov
ret
adc
and
push
sar
ror
add
mov
in
jbe
jo
loop
inc
inc
sarl
or
inc
imull
ljmp
aas
push
stc
stos
push
imul
jne
xchg
in
xor
aam
negb
out
bound
fnsave
stc
cli
ja
add
xor
push
mov
icebp
jns
sub
cmp
fwait
add
lock
inc
pop
in
fldcw
imulb
outsb
and
lods
mov
insb
jmp
in
jge
or
xor
and
icebp
int
xchg
xchg
and
xor
jle
std
lahf
xchg
movsb
es
mov
rcrb
cli
pop
add
xchg
cmp
adc
xchg
das
mov
jp
scas
mov
xchg
add
jb
mov
xlat
mov
add
outsb
or
rcll
int
movsb
shrb
or
fisttps
daa
sbb
out
aad
fwait
adc
movl
mov
xchg
inc
lret
or
jge
dec
mov
cltd
and
lahf
and
jg
and
jns
pop
fmuls
push
cltd
insl
mov
push
mov
jp
inc
in
in
mov
inc
fcoms
scas
rcll
popf
mov
pop
jp
gs
dec
cmp
sahf
insb
fadd
out
enter
sbb
insb
dec
jle
les
sub
cltd
sbb
pop
cmp
push
jl
push
imul
nop
das
adc
xor
dec
popa
js
mov
and
jl
insl
lock
dec
jb
popf
int3
pop
xor
fsub
iret
push
outsb
dec
mov
push
push
xor
xor
icebp
push
xchg
pop
mov
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
fsts
adc
adc
adc
cwtl
inc
or
loopne
rorl
aam
sub
sbb
push
inc
push
rorb
fs
ds
jbe
push
fadds
out
xchg
shr
shll
insl
sbb
scas
xchg
ror
in
in
fsubrl
dec
jl
mov
lret
cmp
and
imul
insb
repz
fwait
cmp
adc
ljmpw
in
ljmp
jge
dec
mov
mov
add
je
fcomps
mov
popf
mov
mov
in
sbb
mov
mov
pop
mov
aas
addr16
nop
dec
push
cmc
out
loopne
sub
out
rol
inc
mov
cmpsb
ret
lds
push
iret
jnp
add
gs
add
loope
adc
add
xor
movsl
xchg
sbb
sub
adc
ljmp
lret
js
imul
push
pop
mov
in
pop
xor
insb
or
movsb
in
pop
inc
add
mov
bound
add
test
arpl
insb
sub
push
test
push
outsl
sub
test
cltd
ljmp
inc
pop
ds
lea
addr16
mov
pop
pop
aas
and
mov
sti
repnz
and
subl
movsb
xor
outsb
fs
cmpsl
sbb
shrb
adc
rcrb
dec
sub
sub
gs
fadds
loop
fwait
push
xchg
jb
or
sub
push
stos
out
aaa
cld
dec
repnz
pushf
dec
nop
dec
ret
lea
or
jl
je
or
rcrb
add
addb
add
xor
add
pushf
popa
cwtl
movsb
testb
and
xchg
xchg
orl
xchg
ret
fidivrs
adc
stc
cmpsl
loope
push
jge
test
dec
das
dec
mov
pop
outsl
insb
addl
movb
js
clc
outsl
pop
add
repz
daa
cmp
mov
jl
sub
or
inc
xor
lahf
scas
mov
mov
sub
idivl
and
push
stos
stc
cmp
aaa
or
cltd
jns
cltd
push
push
or
mov
cmp
adc
mov
lret
pop
sub
mov
movl
orl
xchg
lret
pop
sbb
add
hlt
and
nop
lahf
outsl
dec
outsb
jbe
pop
jnp
push
adc
ljmp
mov
pop
xchg
data16
out
adc
xor
mov
es
lahf
aaa
xchg
je
insb
ljmp
mov
fists
out
iret
jge
les
jb
cmp
sub
stos
inc
ljmp
fstpt
roll
jae
in
add
ds
xor
inc
stos
in
cmp
lea
inc
push
push
mov
stos
iret
insb
sub
mov
jns,pt
pop
cmpsb
push
idivl
popa
cwtl
or
lds
inc
mov
enter
stos
sbb
clc
dec
dec
test
fwait
cmp
mov
movsb
clc
and
cmc
arpl
loope
mov
xchg
lret
and
mov
xor
mov
push
adc
xchg
shlb
aaa
inc
rorb
cmp
cmp
mov
in
inc
aam
clc
jmp
sahf
xor
movb
adc
out
adc
inc
cmp
je
xor
inc
loope
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
xor
aam
cmpsb
out
adc
int
adc
jb
sub
andb
jo
xor
orl
push
aas
pushf
pop
cmc
test
shlb
mov
filds
mov
add
icebp
popa
push
adc
cmp
jns
and
jno,pt
test
hlt
or
divb
rcrl
repz
es
mov
sub
aam
pop
ja
xor
mov
daa
mov
adc
xor
test
inc
iret
pop
push
push
fnstcw
and
clc
dec
jnp
ljmp
mov
mov
jb
or
loope
test
mov
adc
mov
adc
jnp
adc
fildll
or
fsubl
cmc
xchg
cld
inc
scas
jbe
mov
push
cmp
inc
psubw
fmull
nop
pop
sbb
cltd
mov
out
insl
xor
cmpsl
mov
pushf
add
mov
aas
out
setp
arpl
mov
loopne
fcmove
xchg
loope
cli
jne
xor
push
ljmp
clc
add
in
xchg
es
jnp
or
movsl
enter
push
ret
in
lcall
fmuls
test
repnz
divl
arpl
push
repz
inc
xchg
fs
adc
xchg
in
das
dec
int
lock
dec
push
je
out
or
xchg
into
mov
insl
data16
es
stc
mov
movsl
mov
and
xchg
xor
push
adc
pusha
sub
js
call
cmpsl
call
jge
iret
inc
push
aad
and
jmp
and
sub
cmp
enter
xlat
xor
imul
pop
mov
add
movsb
es
cs
lds
mov
add
pop
sarb
ficompl
jecxz
sti
shlb
add
xchg
or
xlat
mov
mov
xchg
out
cmpl
sub
xor
bound
jne
inc
test
push
sbb
in
adc
repz
xchg
outsl
and
mov
ljmp
jecxz
push
jne
or
xchg
jnp
cli
hlt
je
push
iret
mov
in
sti
sti
cmpsb
aaa
jb
push
cs
pop
shl
pop
fisttpl
lahf
test
cwtl
push
test
pop
inc
test
mov
mov
push
fidivrs
ss
push
jbe
dec
cs
jge
xlat
aam
loop
and
daa
pop
xchg
push
aas
in
enter
push
push
in
fs
outsl
daa
stos
jl
and
sahf
or
fsubrs
scas
xor
mov
xor
xor
and
sub
mov
pop
dec
lahf
mov
add
ficoml
adc
mov
mov
push
mov
xchg
test
cmpsb
push
loopne
es
and
lahf
clc
pushf
mov
push
adc
pop
cmp
or
call
loope
xor
mov
aaa
mov
dec
sub
lahf
movsl
adcb
mov
outsl
pop
and
pusha
orb
cmp
mov
or
outsb
xchg
add
mov
mov
mov
dec
in
fdivrs
lcall
dec
add
in
mov
sub
and
mov
mov
cmp
push
xor
push
les
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
sbb
in
adc
int
adc
inc
lds
mov
loope
dec
fistl
int
pop
in
pop
jb
xchg
add
cwtl
and
sbb
push
aad
ds
adc
sbb
mov
jno
inc
cmp
scas
add
mov
cmp
adc
insl
ds
xchg
mov
mov
in
and
jl
ss
lcall
adc
daa
and
mov
filds
outsb
sbb
rclb
popa
in
test
addr16
xchg
or
cs
sbbl
mov
push
call
cld
shl
push
rorb
popf
in
and
arpl
pushf
movsl
addl
xchg
jns
xchg
mov
inc
in
sub
jbe
push
mov
xchg
jg,pn
pop
mov
fdivrp
bound
xchg
fidivrs
add
xor
flds
fisubs
fldl
fistps
jecxz
repz
push
xchg
xorb
xchg
lock
cmp
pop
fadds
cld
pop
das
add
push
dec
lret
icebp
fisubrl
mov
shl
cmc
xchg
outsb
loop
jg
xchg
fnstenv
cmp
add
sbb
sbb
pop
add
movsb
cli
and
mov
ss
mov
ret
sbb
inc
js
cmp
fs
add
lock
push
mov
jmp
lds
or
sbb
ficoml
jl
lret
or
iret
pushf
and
fcoms
out
mov
call
movsl
sub
mov
pop
add
int
test
xchg
call
in
jge
or
ret
xchg
nop
scas
adc
dec
out
mov
andb
dec
test
and
mov
nop
fsts
xchg
cmp
mov
ret
mov
fldt
and
push
sbb
out
dec
ret
out
pushf
jle
mov
js
sub
shll
fstpl
mov
dec
sbb
cltd
iret
cs
xchg
xor
lcall
adcl
mov
int
push
cltd
mov
je
movsb
cmp
movsb
or
pop
mov
lcall
cmp
mov
cltd
pushf
adc
jbe
or
mov
fs
movsl
test
pop
bound
lock
hlt
idivl
cmp
xor
xor
ret
mov
imul
pop
lret
mov
mov
fimuls
xchg
sub
ss
fsubl
jmp
add
mov
xchg
clc
adc
decl
ja
mov
je
mov
fmul
mov
push
movsl
mov
aad
xchg
dec
lret
lock
jo
fs
inc
sub
and
mov
orb
call
xlat
xchg
mov
push
push
scas
std
push
push
fs
mov
je
jbe
lea
jge
pop
push
sub
push
fistpl
inc
dec
push
stc
mov
inc
adc
in
sbb
mov
sub
imul
sbb
mov
hlt
adc
fisubrs
stc
aam
js
and
fldt
lret
push
xlat
fwait
mov
xor
sub
scas
sbb
les
scas
push
xchg
xchg
inc
sbbl
cmp
mov
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
lea
adc
adc
int
adc
add
ds
out
xchg
jnp
fdivs
test
fdivrl
adc
cmp
jno
aas
es
mov
mov
jbe
adcl
cli
xor
pop
or
std
xchg
rorl
scas
cmp
jl
xchg
adc
les
xchg
dec
arpl
or
push
sbb
pop
ljmp
sbb
cmp
jle
fcomp
and
fisttps
repnz
xor
cmpsl
mul
xor
push
dec
in
mov
and
mov
mov
xchg
pop
pop
sbb
lret
xchg
popf
dec
add
sub
push
decl
fstl
ljmp
add
lahf
scas
add
dec
repz
fcompl
fcomp
sub
pusha
jno
add
cmpsb
xchg
jo
or
jge
jne
aas
fistps
outsl
fs
cmp
lods
js
jl
add
punpckhbw
rol
mov
pop
aam
and
fldcw
scas
sti
stos
push
mov
xor
inc
pop
cwtl
pop
cmpl
jb
push
in
or
scas
cs
icebp
mov
mov
sarb
pusha
xchg
ds
or
mov
adc
mov
in
adc
xlat
cmc
mov
cld
popa
fcom
jmp
xor
sub
sbb
loop
fildl
ljmp
xorl
sbb
aad
lock
je
and
cs
cltd
imul
xchg
dec
inc
inc
mov
test
cmpsb
adc
orl
fisttpll
jns
push
sbb
push
movb
ror
or
jno,pt
cmpl
fs
repnz
lcall
ret
jnp
xchg
in
pusha
insb
sbb
push
mov
into
xor
fstpt
sbb
sub
add
mov
aam
sbb
insl
mov
xchg
push
jb
sahf
or
repnz
jb
xor
lods
lods
std
adc
call
imul
inc
sti
mov
mov
decb
sbb
sbb
les
or
ficompl
mov
push
fstpl
sub
bound
dec
shr
fstps
pop
xor
icebp
dec
mov
test
sar
jp
nop
sub
and
adc
or
xchg
dec
inc
data16
add
jecxz
dec
cmp
std
jecxz
or
aad
pop
jne
pop
in
daa
push
sbb
imul
push
xor
mov
or
mov
adc
pop
jns
testb
out
mov
mov
cltd
movsb
ja
cmp
lret
xchg
addr16
shrb
pop
dec
fisttpll
mov
hlt
xor
sub
loope
dec
ret
push
inc
pusha
xchg
jbe
mov
jge
add
lds
popf
outsl
jmp
mov
pop
cmpsb
mov
pop
add
mov
shlb
fnstsw
add
xchg
xchg
fs
into
push
insl
mov
pop
imul
sub
mov
sbb
js
stos
pop
adc
pop
mov
jae
adc
mov
in
xchg
movsb
inc
mov
cld
lods
inc
add
cmp
rcll
lcall
adc
aad
jle
stos
call
and
jns
in
pop
in
mov
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
scas
jne
stos
ficoms
adc
adc
adc
xchg
adcb
out
daa
imul
in
xor
loopne
or
decb
jae
xchg
leave
test
dec
daa
bound
cli
ret
lahf
or
jl
jb
cmp
push
xor
dec
cmpsb
push
pop
dec
dec
cmp
jns
iret
dec
xor
mov
das
ss
mov
cmp
and
mov
jnp
bound
cmp
fldl
cmp
and
out
dec
jb
and
push
fimull
ret
bnd
imul
fidivl
xlat
mov
jl
repnz
jmp
dec
sub
mov
sbb
mov
int
mov
sbb
aaa
sarb
or
cmp
xchg
imul
cmpsl
jmp
ss
bound
andb
incb
psrad
mov
jbe
je
mov
xor
dec
std
mov
mov
dec
out
call
testb
sbb
popa
insb
imul
shr
sbb
es
push
in
int3
mov
movsb
incb
fwait
xchg
inc
fsubrs
in
roll
push
and
jb
pop
fs
jbe
xor
mov
andb
add
fistpl
mov
aas
add
aam
cmp
int
pop
cmc
in
xchg
jp
and
mov
add
lret
shlb
or
pop
xchg
loope
daa
sahf
subl
mov
push
mov
clc
jnp
adc
xchg
add
cwtl
lods
imul
test
sub
push
es
xchg
jb
sub
lret
jmp
lods
mov
mov
es
push
xlat
xchg
add
mov
ljmp
adc
movsb
movsb
lret
jae
rcr
lea
xor
cltd
xor
dec
add
js
push
into
int
cmp
mov
int
insl
jmp
aas
iret
sbb
dec
push
sbb
cmp
push
or
movsl
cs
xchg
addl
sub
mov
lea
xchg
lret
insb
inc
mov
mov
lret
cmpl
pop
fs
dec
nop
or
or
add
je
push
lahf
inc
sub
in
xor
cmp
pop
dec
arpl
loope
les
adc
pop
das
aaa
push
in
pop
mov
add
or
jp
js
cmpsl
push
inc
aas
data16
push
pop
inc
mov
sub
push
nop
jae
mov
add
mov
int3
pop
cmp
inc
cli
pop
ljmp
cmp
stc
in
xchg
mov
fildll
mov
shll
stc
imull
sbb
add
pop
outsb
jbe
sbb
pop
fisubs
fwait
iret
xchg
jnp
xor
and
add
sarl
lahf
hlt
mov
mov
negl
shl
push
addr16
mull
fwait
lock
aaa
scas
add
lret
add
mov
mov
and
pop
stos
pop
dec
daa
lock
js
daa
cmp
jae
fldl
arpl
xchg
mov
movsb
xchg
aam
and
fdivr
mov
jnp
push
inc
popf
dec
les
pop
mov
sbb
bnd
in
pop
sbb
inc
jl
mov
fistps
add
jmp
mov
shl
jmp
fmuls
sbb
lcall
adc
adc
adc
enter
cmp
rorl
sbb
inc
xor
cltd
in
xchg
loope
pop
in
dec
pop
sbb
push
pop
arpl
xchg
rol
test
je
cld
jne
cmp
mov
addr16
mov
pop
sbb
movswl
sahf
ret
insl
fucomip
inc
and
jae
call
leave
mov
mov
inc
sbb
fldt
push
and
iret
out
test
mov
fisttpll
mov
loope
out
loope
fdivl
clc
add
movsb
adc
lea
xchg
pop
loope
sub
add
call
test
out
jbe
fwait
mov
aaa
gs
mov
fwait
leave
lret
rol
or
lret
pop
inc
cmp
xchg
cltd
insb
popf
into
sub
fwait
stos
push
lret
test
mov
dec
mov
lcall
mov
ja
or
or
mov
xchg
jne
lcall
xchg
pusha
loope
inc
fwait
add
adc
mov
jns
sahf
add
daa
lret
jbe
loope
out
xchg
sti
jecxz
sti
repz
cltd
ljmp
or
clc
bound
lods
and
ss
in
cmc
mov
xchg
and
outsl
push
pusha
push
ss
lock
jae
out
mov
xchg
insl
loop
imul
mov
mov
add
and
fcompl
arpl
jg
jne
aam
in
imul
enter
js
aas
cltd
aaa
mov
jecxz
inc
cmp
cmpsb
popf
mov
andl
aaa
mov
je
adc
and
test
into
in
sti
mov
inc
into
mov
pop
imul
ljmp
je
mov
lcall
sub
adc
xchg
push
fimuls
test
push
mov
cmp
jae
xchg
mov
sar
and
inc
subb
pop
scas
adc
int
jne
pop
cmp
shrb
pushf
test
loop
pop
loope
incb
xchg
jo
insl
flds
cmp
lcall
adcl
jno
add
sub
mov
js,pn
inc
gs
and
jne
xor
insb
add
cmp
mov
add
mov
and
aad
push
rcr
fldl
sub
jmp
loop
push
inc
mov
int
ljmp
cld
cs
test
and
sbb
xor
inc
cmp
mov
mov
pop
outsb
lds
adc
cltd
cmp
sub
aam
pop
in
sbb
push
les
push
in
mov
cmp
popa
dec
dec
pop
inc
pop
push
mov
inc
xor
jbe
and
je
and
pop
popf
sbb
add
arpl
das
xor
arpl
insl
sub
jecxz
leave
add
outsl
leave
mov
sbbl
xchg
out
add
cmp
and
jae
and
xor
pop
loope
stc
pop
mov
scas
mov
push
xchg
aas
jno
mov
test
lods
xchg
push
js
mov
push
adc
pusha
inc
mov
jb
test
call
and
dec
and
xchg
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
mov
mov
adc
adc
adc
jp
fwait
xchg
and
mov
mov
cmpsb
shrb
push
in
mov
or
push
and
or
test
add
or
jle
mov
fnstsw
mov
mov
movsl
cmpb
call
xchg
fwait
add
lea
mov
in
dec
sbb
inc
std
dec
cltd
xchg
sahf
scas
pop
mov
mov
in
xorb
pop
jo
in
pop
adc
clc
xor
sbb
shlb
and
xchg
sub
pop
movb
mov
push
insb
dec
pop
sbb
jge
cltd
mov
cmp
sbb
push
inc
add
sti
jae
sti
pop
es
inc
xlat
push
es
sub
add
push
jl
ret
enter
or
es
xor
adc
lcall
jmp
jp
leave
cmp
or
loopne
and
ret
adc
and
push
frstpm(287
scas
out
pop
or
lods
mov
sbb
mov
and
jns
mov
hlt
mov
pop
imul
xor
jae
call
jb
imul
and
imulb
jns
add
xor
xchg
popa
js
and
imul
mov
cmp
mov
mov
dec
stc
pop
push
clc
loop
sar
push
add
addr16
mov
pop
xchg
jp
mov
mov
lret
imull
push
add
ljmp
into
inc
jp
xchg
cmp
sbb
jmp
xor
xchg
scas
add
popf
leave
jnp
xor
dec
jns
rcr
ljmp
mov
loope
cmp
shl
dec
jp
jnp
mov
add
pop
jge
cmp
xchg
call
aam
inc
push
bound
push
aad
cmp
imul
xchg
aam
cmp
inc
cmp
inc
mov
and
jnp
jecxz
push
cmp
sbb
rcl
mov
out
pusha
pop
inc
js
sbb
add
cmpsb
negl
and
pop
mov
pop
rcrb
push
arpl
lock
aas
mov
cmp
je
xchg
test
mov
cltd
add
sbb
shrl
inc
mov
in
lret
aas
lahf
xlat
xor
and
cmp
mov
or
popa
lret
ss
mov
and
lods
dec
outsb
outsl
pop
xor
jns
scas
repz
mov
xchg
xor
sub
push
sub
movsb
cmp
mov
pop
lock
jp
outsl
fldcw
out
push
add
cltd
sub
cmp
gs
shlb
mov
stos
jo
lds
xor
insb
push
add
out
in
mov
lods
mov
test
sbb
ret
enter
idivb
push
inc
jg
je
outsl
mov
cli
clc
sub
push
sbb
xor
popa
jg
xchg
add
mov
pushf
out
rcrb
pop
ret
push
sti
sub
pop
std
jns
popf
cwtl
jo
jmp
cmp
xor
push
mov
dec
inc
and
mov
cmp
sub
and
rcrl
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
push
jb
stos
ljmp
adc
imul
mov
cwtl
es
push
cmp
movsl
sbb
mov
jno
out
sbb
into
lock
or
pop
insl
out
dec
jg
imul
enter
adc
dec
pusha
xchg
fwait
add
fildl
insl
jmp
into
cmc
fisubrl
outsb
and
push
mov
mov
mov
bound
and
loop
nop
add
scas
in
mov
lds
lcall
xchg
jecxz
testb
pop
ljmp
push
ficompl
cmpsl
int
mov
in
jecxz
mov
test
cli
pop
and
pop
iret
fcoml
test
cs
sbb
rorb
jmp
in
jbe
sbb
stos
mov
sub
cmp
mulb
cmp
lods
mov
push
or
add
lock
pop
iret
fisubl
pop
xchg
push
mov
out
outsb
ss
rorl
jg
xor
stos
nop
loope
je
mov
add
jbe
dec
inc
dec
xor
mov
jl
arpl
mov
cmp
fwait
iret
mov
sbb
or
pusha
jae
sbb
in
icebp
jno
outsl
iret
les
push
mov
leave
out
push
movb
or
sbb
test
into
pushf
mov
enter
inc
dec
imul
in
xlat
mov
fcom
stos
and
movsb
pusha
aaa
int3
fiadds
dec
and
adc
jmp
jb
pop
imul
sar
sbb
pop
andb
std
mov
lea
xchg
add
pop
decl
jo
pop
mov
xchg
pop
and
out
pusha
andl
sbb
adc
imul
push
fiadds
xchg
xchg
adc
ret
bound
out
inc
scas
inc
arpl
lret
pop
jbe
mov
addr16
test
mov
mov
and
xchg
jb
pop
inc
dec
cs
add
lock
adc
int3
mov
cmp
xchg
cmp
stos
je
into
sahf
mov
jg
mov
popf
jne
xor
in
jg
push
mov
adc
push
pop
movsb
xchg
mov
orb
not
or
insb
and
imul
jns
mov
pop
gs
adc
xchg
out
clc
xor
mov
mov
push
add
inc
pushf
loope
lret
ret
sarl
in
xor
fisubrl
sbb
xor
shrb
inc
mov
sub
sub
lret
sbb
cmp
out
adc
jp
jmp
cmp
xchg
and
sti
push
inc
xor
xor
rcrb
call
adc
and
movsl
nop
pop
jns
cmp
or
mov
pop
clc
xor
cmpsb
iret
shll
pop
xchg
fists
jp
sbbl
add
ret
mov
xor
mov
jge
push
js
push
xchg
xchg
loop
rcll
sarl
mov
cli
inc
scas
insl
inc
dec
jg
adc
adc
adc
fsubrl
dec
add
xchg
inc
add
lcall
dec
fadds
mov
adc
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
dec
stos
rep
fwait
ret
int
adc
stos
sbb
les
sub
loopne
pusha
dec
mov
ja
xchg
stos
pusha
mov
iret
fwait
push
int
int3
jl
sbb
sub
scas
cld
mov
or
add
movsb
pop
push
in
popl
mov
imul
push
or
add
mov
clc
mov
sub
movb
loop
arpl
add
mov
push
pushf
les
jmp
loope
call
jns
out
cli
repz
pop
lock
push
ret
rorl
mov
imul
je
rcrb
popa
lcall
fwait
leave
fildl
das
push
sub
insl
or
dec
fiaddl
jo
cwtl
inc
mov
dec
rorl
jmp
gs
fs
clc
xchg
adc
jp
clc
pop
inc
sbb
xchg
or
jecxz
xlat
ss
int
pop
mov
pop
jne
into
mov
sti
loopne
call
push
mov
mov
js
mov
add
pusha
pop
adc
dec
mov
pop
repnz
push
cmp
push
adc
popf
stos
push
or
mov
mov
shlb
xchg
ret
cli
outsl
aaa
pop
pushl
ss
mov
xor
mov
pop
jmp
and
xchg
rcrb
addb
fs
ficompl
add
mov
xchg
add
lods
gs
call
hlt
dec
in
test
stos
pand
into
xor
jg
cmp
xchg
inc
dec
sbb
cmpsb
orb
sub
mov
enter
add
xor
lea
push
sub
add
les
jb
jb
add
mov
push
sub
aam
popa
stc
xor
in
and
inc
sarb
or
push
push
sbb
daa
sbb
or
mov
sub
int
mov
in
test
xchg
jmp
or
inc
adc
adc
sub
jne
scas
loopne
fs
es
mov
lea
ds
cmp
xor
out
xor
add
push
movsb
hlt
fidivrs
dec
aaa
cmp
lahf
push
call
out
shll
push
push
inc
push
or
push
fidivs
insl
loopne
pop
jo
push
aam
sub
fstl
add
mov
push
pop
and
dec
imul
out
in
and
jl
dec
jge
mov
pop
push
pop
cmc
dec
sti
stc
adc
pop
gs
sub
repnz
add
lock
fwait
ret
adc
ret
arpl
xchg
cwtl
loop
dec
sahf
dec
mov
lret
or
leave
jg
inc
adc
pop
arpl
sar
imul
adc
pushf
inc
xor
pushf
sbb
repz
std
xchg
or
idivb
inc
pop
aam
in
cmc
add
fdivrs
xchg
fucom
jl
iret
jnp
std
xchg
out
or
aaa
jmp
imul
push
loopne
jne
pop
dec
notl
test
outsb
aas
adc
jns
das
jmp
fwait
div
sti
xchg
andb
and
dec
inc
mov
mov
mov
std
cmp
jge
int3
inc
data16
and
jge
push
cmp
leave
out
stos
lods
jae
shll
cmc
xor
cli
add
pop
push
cli
add
fbstp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
out
adc
mov
adc
xor
fcompl
push
and
fdivl
mov
sbb
cmp
ret
loopne
cmp
fdivl
popf
popa
out
jmp
pop
push
dec
mov
dec
pushf
aad
lock
xorb
add
iret
push
push
dec
cmp
addr16
dec
inc
lock
sbb
cli
ret
jecxz
dec
dec
lret
jnp
fiaddl
jp
adc
or
adc
cmpsl
lcall
in
mov
das
push
std
xorl
cltd
inc
add
mulb
or
repz
call
and
stos
in
mov
inc
sbb
insl
and
xchg
sub
into
scas
idivl
ret
aad
jp
pusha
jb
push
out
loopew
call
mov
cmpsb
push
push
add
dec
xor
push
adcb
pushf
cmp
sbb
mov
add
cwtl
aad
fnsave
add
ret
fmul
negl
xchg
pusha
mov
scas
inc
push
out
in
cmp
hlt
or
fcomi
add
cmpsl
push
xlat
xchg
lock
mov
sbb
aam
inc
in
jnp
in
pop
inc
stos
aam
and
xor
repz
pop
xorb
pop
lahf
arpl
ret
data16
sub
push
lock
xchg
push
outsl
gs
or
addr16
xchg
dec
and
mov
mov
push
inc
les
sbb
jg
and
adc
or
mov
and
lods
fsubl
add
adc
out
fisttpl
xor
dec
out
push
mov
adc
pop
loop,pt
mov
aaa
xchg
xchg
inc
pop
movsl
movsl
fs
ret
sbb
jmp
aad
js
ljmp
inc
pop
imul
push
mov
mov
jmp
stos
and
cmc
xor
cwtl
cmp
cmp
enter
ret
pop
sub
mov
push
punpckhwd
clc
sub
inc
and
popf
dec
ret
mov
loope
addr16
aam
mov
test
and
push
aaa
dec
jo
jns
mov
subl
aaa
cs
xlat
push
mov
fisubl
dec
jns
stos
or
ret
mov
jae
in
push
jnp
jmp
mov
push
mov
adc
data16
pop
test
jns
dec
cmp
xchg
inc
sbb
sti
loope
add
push
movsb
in
repnz
mov
gs
mov
add
fmulp
jecxz
fsubrp
ret
or
lea
xchg
in
call
mov
jnp
das
add
es
sub
and
aad
rclb
add
pop
mov
aaa
je
hlt
repnz
jbe
shll
jg
and
ret
rcrl
je
sub
mov
loope
or
adcb
push
dec
pop
dec
push
sub
cld
add
inc
fidivs
insb
mov
lds
and
add
jl
sbb
idivb
inc
paddsw
ljmp
and
add
xchg
push
push
outsb
ljmp
sub
inc
ret
ljmp
dec
mov
dec
inc
std
aad
push
test
xchg
shll
test
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
and
and
pop
mov
adc
adc
adc
fsubrp
pop
ja
or
fcmovbe
dec
adc
ffree
mov
and
jb,pt
ljmp
jnp
fwait
sarl
adc
cmp
dec
daa
or
xlat
jl
mov
pop
fsubp
loop
xchg
mov
or
cmpsb
dec
jo
push
test
push
addb
lret
mov
pop
mov
lret
out
int
aad
shll
mov
lea
nop
sti
dec
dec
cmp
cmp
fnstenv
hlt
mov
iret
decl
lods
int3
mov
subl
sub
jne
push
lock
rolb
pop
hlt
jne
xor
xor
sbb
ja
fbld
sub
out
pop
dec
pusha
aam
jle
add
test
stc
test
leave
mov
insl
mov
inc
call
or
lods
mov
xor
leave
gs
negl
fists
inc
popa
mov
mov
xchg
hlt
subb
inc
in
repz
clc
enter
andb
stos
cmpb
cld
dec
mov
pusha
and
aad
cmp
out
lret
js
jo
dec
jmp
pop
jns
cli
adc
mov
fcomps
mov
jge
mov
dec
dec
push
sbb
xor
das
data16
aad
cmp
sub
jae
mov
xchg
push
adc
jbe
jmp
iret
fcoml
mov
repz
pop
fcoml
lock
xchg
lret
popf
je
mov
rorb
outsl
mov
insl
cmp
push
rol
sub
jle
stc
mov
sbb
dec
loopne
shr
popa
fisubl
addr16
dec
pop
xor
vpcmpgtd
mov
dec
and
and
mov
push
sbb
or
jl
push
mov
push
xor
mov
ljmp
dec
enter
fdivs
xlat
fs
test
add
cmp
mov
dec
xor
and
repz
mov
test
pop
and
aad
cmp
or
sbb
ja
mov
outsl
jbe
stc
into
pop
jno
cmp
cmp
imul
hlt
and
dec
cmpsb
pop
rorl
stc
sbb
aaa
arpl
mov
ljmp
xchg
xor
mov
das
cmp
push
adc
pop
sbb
jno
pop
xor
pop
sub
pop
sbb
loop
xchg
popa
dec
aad
sbb
outsb
mov
cmc
push
mov
jnp
sub
sub
nop
daa
sahf
test
ret
mov
iret
in
adc
and
movsl
jl
lods
subb
lea
cwtl
sub
in
aaa
bsr
cmp
or
xchg
mov
jo
jo
sub
xor
popa
shl
cmpsl
call
leave
outsb
push
ret
cmc
cltd
inc
adc
and
cmp
daa
adc
mov
mov
xor
lret
jge
or
and
imul
adc
sbb
cld
xlat
aam
ret
mov
cwtl
push
and
pusha
imul
dec
jg
dec
push
daa
xchg
jle
cltd
outsl
add
xchg
push
fadd
mov
addr16
jnp
pushf
sti
lods
mov
int3
or
out
iret
out
ret
xor
fnstcw
xchg
add
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
mov
shrl
adc
mov
jecxz
aad
xor
pop
sbb
xchg
mov
aas
cmp
ret
jmp
das
inc
dec
mov
aaa
mov
in
lea
jae
jae
jnp
mov
test
inc
outsb
jnp
pushf
ss
int3
push
cmp
aas
shr
jo
or
mov
xor
add
push
sub
jle
enter
cli
dec
and
and
sbb
cmp
cmp
int3
psubq
pop
jns
xor
adc
ret
mov
lods
cmp
inc
sbb
push
cmpsb
and
pop
out
cmp
stos
fldenv
es
enter
and
cmpsb
and
pop
mov
and
pop
xor
sbb
sbb
sahf
jbe
div
xor
xor
ss
and
loop
dec
cmp
or
mov
aaa
test
mov
cmp
xchg
pop
pusha
daa
ljmp
lods
jnp
fisubrs
add
inc
jo
mov
push
pop
ret
pop
adc
out
or
dec
shll
cmp
into
je
pop
pop
outsb
adc
xor
hlt
mov
arpl
jecxz
pop
fmul
xor
insl
in
shr
sub
and
aad
cmp
dec
fwait
xor
mov
leave
sarb
cmp
xchg
nop
or
leave
mov
push
inc
add
push
fmuls
cmc
lods
pushf
je
bswap
iret
fiadds
push
inc
aas
cmp
mov
es
sar
push
mov
or
fxch
leave
and
out
lods
pop
rclb
mov
push
sbb
flds
push
mov
and
fidivl
push
pop
mov
cmp
sub
push
aas
inc
pusha
mov
fstpt
shll
out
lods
inc
mov
lea
fcmovnb
pop
lcall
rorl
inc
icebp
xchg
stos
xor
lock
std
shrb
cmpsl
sbb
push
push
push
push
sbb
jo
lahf
cmpsl
aam
pop
sub
movsl
insb
dec
pop
push
jo
les
add
push
and
add
jl
sbb
dec
lock
ret
lock
add
xchg
shrb
test
enter
pop
ljmp
xchg
icebp
add
leave
shrl
push
scas
sub
mov
xchg
mov
add
or
jle
add
incb
and
adc
jle
sub
aas
pop
scas
aas
jecxz
and
outsl
inc
dec
jb
pop
xchg
repz
pop
std
xchg
xchg
inc
and
sbb
ja
stc
pop
jbe
jbe
hlt
repnz
scas
orl
inc
cmp
pop
jmp
sbb
or
mov
pop
mov
or
mov
dec
push
push
adc
xor
or
testl
push
and
clc
jecxz
arpl
jns
lcall
in
mov
icebp
cmpb
mov
mov
adc
cmp
bndstx
or
push
mov
and
in
pop
out
push
out
pop
xchg
push
test
or
shll
xor
je
shr
inc
sahf
int
or
jecxz
nop
jae
daa
fwait
adc
xor
negb
repz
jmp
mov
add
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
mov
mov
adc
sub
insb
loop
out
aas
ret
push
xor
push
test
cld
roll
and
fst
gs
int3
pop
sbb
push
cmp
inc
in
xor
sbb
lret
sti
lock
movsb
cwtl
js
sub
sti
sti
into
hlt
mov
mov
or
mov
int3
push
test
mov
lcall
jno
push
inc
loop
movsb
push
popa
push
subl
leave
push
xor
ret
mov
push
push
inc
mov
sbb
xchg
mov
lret
imul
ja
jno
lret
pop
repnz
inc
imul
and
and
sbb
stos
jg
and
es
xor
adc
aam
loope
jge
mov
inc
ljmp
stc
pop
add
mov
mov
sbbl
mov
push
andb
sub
test
xor
and
cmp
call
sub
lock
mov
xchg
jno
test
outsb
jl
xorb
and
mov
jg
repz
xchg
pusha
cmp
add
shl
mov
vlddqu
clc
xor
mov
mov
xor
inc
or
aam
jmp
xor
hlt
mov
xor
mov
mov
repz
addr16
ljmp
fnstenv
mov
cltd
inc
pusha
adc
dec
inc
das
pop
cli
add
insl
iret
popa
mov
mov
push
xchg
and
cld
ljmp
pop
mov
pop
sbb
pop
and
mov
xlat
mov
movsl
jno
out
bound
mov
leave
xchg
xor
bnd
ds
push
sbb
inc
inc
pushf
mov
mov
inc
jae
jae
dec
arpl
jmp
add
sahf
fcoml
shl
testl
mov
lret
pop
lds
jnp
rorb
and
add
rcll
cmpsb
push
pop
jae
sub
das
and
mulb
mov
xor
sub
jmp
mov
jb
and
pop
mov
dec
pop
add
shll
ja
data16
sub
rorb
les
sub
pop
lcall
loop
icebp
icebp
jb
stc
cmp
scas
sub
sub
pop
lret
cmp
jo
add
mov
xchg
jo
dec
repnz
xor
lock
xor
inc
push
sbb
into
shl
cmp
dec
test
and
jl
ds
sub
movsb
mov
roll
xchg
inc
inc
in
pop
fisubl
mov
stos
or
cmp
fcmovne
lds
icebp
mov
jne
jno
mov
out
in
mov
jo
cld
scas
add
cmp
sub
pusha
push
fwait
es
loop
or
or
ss
or
sub
jae
and
test
mov
inc
setb
and
inc
push
in
leave
cli
inc
fildl
add
cwtl
imul
imul
push
arpl
insl
xor
movsl
and
icebp
jbe
fstps
stos
stc
xchg
stos
ret
jmp
push
inc
insb
ret
fimuls
pushf
call
inc
mov
negl
shlb
pop
push
mov
pop
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
jmp
adc
int
adc
push
xlat
jae
test
jecxz
pusha
int3
dec
mov
and
mov
pusha
mov
in
roll
push
sub
inc
mov
push
stos
es
pop
add
mov
in
int
pop
insb
mov
adc
sbb
jnp
adc
and
ret
mov
xchg
and
xchg
sub
inc
stos
psubsw
push
mov
test
xchg
cmpsb
test
dec
repnz
cmpsl
cmp
hlt
leave
inc
inc
add
lahf
pusha
lock
inc
sub
aas
adc
mov
mov
mov
xchg
aas
sbb
pop
mov
ficomps
xlat
mov
cmp
sbb
shrb
loop
in
rcrl
adc
jb
xchg
sbb
adc
imul
mov
lcall
cs
mov
sub
jns
sub
add
in
cmp
rorb
ret
and
and
cli
xchg
sbb
xchg
fcomps
iret
cmc
dec
in
xor
mov
push
push
push
call
lcall
aaa
cld
adc
lret
cmp
lds
test
xchg
ret
popf
and
repnz
mov
or
fidivs
stc
lock
jne
adc
repnz
jge
sbb
mov
xchg
push
jns
std
sbb
sbb
ss
je
leave
arpl
fwait
xchg
dec
add
lret
mov
in
inc
inc
xchg
cmp
jge
mov
or
add
push
cmp
push
dec
fwait
add
scas
adc
sbb
dec
lock
sbb
in
cmp
mov
adc
lds
dec
xor
xor
mov
out
mov
fs
dec
int
cmp
aad
adc
negl
or
inc
mov
aad
aad
lahf
stos
lods
fcmovu
inc
dec
imulb
xlat
lock
sahf
mov
punpckhwd
inc
push
andl
xchg
xor
mov
insl
xchg
lret
mov
mov
repz
jl
inc
iret
out
pop
lea
lods
inc
insl
cmp
cli
xor
leave
data16
jp
and
outsb
mov
add
mov
jns
int
push
xchg
arpl
sub
fmuls
xchg
xor
jmp
nop
xor
pop
dec
fldcw
addb
rcll
lret
cmp
fadds
rol
jb
mov
fisubrl
pop
rcrl
clc
pop
jno
add
push
sub
cmp
add
popa
xchg
push
xor
jb
test
mov
stos
mov
sbb
js
xchg
jle
xor
popa
or
enter
mov
sub
lds
cltd
out
pusha
repz
stos
or
adc
faddl
mov
movsb
test
inc
mov
cmp
xlat
cli
jns,pn
push
push
adc
sub
loopne
sub
stc
sbb
subl
ret
ss
iret
push
jmp
jecxz
into
mov
rcll
jle
inc
in
sub
xor
sar
jbe
mov
dec
dec
ljmp
shl
mov
dec
dec
jecxz
mov
cmp
mov
hlt
jl
jns
clts
out
xchg
scas
mov
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
rcl
loope
xor
mov
enter
es
sub
fdiv
mov
adc
pop
and
cld
sbb
pop
jp
mov
scas
pop
iret
inc
in
dec
push
mov
lahf
dec
fldt
or
shrl
lds
sarl
in
xchg
adcb
push
jne
lods
cwtl
xor
cs
cld
and
repz
cmpsb
inc
scas
sbb
push
xor
daa
scas
call
mov
sbb
lea
push
repz
xlat
jmp
xlat
ret
ret
jae
cmpb
insl
cli
addr16
aam
jl
pop
repnz
or
scas
std
data16
imul
iret
enter
outsb
xor
cmp
pop
pop
repz
mov
jp
mov
xchg
jecxz
sub
cltd
in
sar
sub
sbb
lcall
xchg
les
mov
pop
fistpll
add
dec
ret
jecxz
mov
ret
in
jne
dec
cmpsl
call
and
in
jge
cli
clc
fldlg2
pop
xchg
mov
fstpt
mov
pop
aaa
xorb
rorl
add
mov
sub
mov
cmpsb
es
fmul
shlb
call
sbb
lcall
cmp
stos
shlb
sub
mov
xor
mov
test
popa
push
mov
fs
dec
and
jb
cs
sarl
add
pushf
mov
or
pop
mov
insb
cmp
inc
and
mov
ss
push
mov
add
push
in
fistpl
cmp
popf
xor
push
jge
jle
sbb
push
pop
mov
add
or
xchg
sbb
mov
add
mov
std
lock
xor
pusha
xor
loopne
jae
test
arpl
push
xchg
int
fs
lods
sub
flds
push
add
cmpsl
jg
mov
pop
stos
pop
jne
push
out
jnp
jb
adc
push
imul
fwait
test
sub
adc
jle
xchg
xchg
push
jbe
xchg
cs
daa
out
ror
push
leave
or
push
in
into
loop
jl
add
cmpsl
aas
inc
inc
xor
mov
stc
jmp
mov
cwtl
sub
lock
sbb
mov
dec
fcmovnu
insb
scas
ds
cmpsb
sbb
mov
bound
pop
adc
lods
sahf
inc
xchg
sbb
sti
psubsw
push
xorl
fldenv
jb
cltd
js
pop
es
ss
sub
push
notl
push
pop
dec
sbb
jb
cmp
xor
ss
insl
inc
adc
js
movsb
pusha
or
jmp
adc
imul
negl
mov
int
jecxz
repnz
or
sbb
dec
push
test
mov
dec
pop
out
aad
mov
icebp
pushl
out
aas
mov
negl
imul
inc
inc
mov
inc
dec
int3
mov
ret
inc
pcmpeqd
mov
fldln2
cmp
shlb
mov
icebp
jmp
mov
pop
ja
std
bound
jns
lds
movsl
je
xchg
je
lahf
pop
and
or
lcall
cmpb
or
mov
cmp
fcomps
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
sarb
mov
adc
adc
adc
sbb
or
jl
add
cmp
loop
fildl
pop
lret
mov
jecxz
xchg
jns
jmp
mov
nop
dec
arpl
bound
scas
push
adcb
push
inc
pop
or
add
sub
pop
push
fiadds
mov
dec
cs
jmp
clc
movsb
pop
cld
shlb
int
fiadds
push
xlat
popf
outsb
ret
xchg
sbb
loope
sbb
sbb
or
aas
adc
and
sbb
push
lcall
fiadds
adc
jecxz
roll
jb
dec
xchg
lea
ret
rorl
push
pushf
enter
stc
mov
cmpsb
enter
jb
dec
mov
filds
push
dec
loope
in
cwtl
mov
aad
sub
and
fsubrs
xchg
and
jnp
les
mov
mulb
mov
lret
fsubl
addr16
adc
sub
mov
imul
and
mov
mov
inc
test
cwtl
cmc
cltd
push
test
xor
andb
imul
popa
adc
push
pop
cli
cmc
cmp
lock
or
in
dec
xchg
aad
xor
mov
fwait
inc
mov
orl
pop
sub
ret
test
fmull
bound
sbb
scas
into
mov
adcl
pop
fidivs
xchg
or
es
ljmp
push
adc
cmpsl
call
clc
pusha
pop
adc
bswap
enter
adc
add
mov
add
mov
fs
xchg
daa
das
sarb
or
xor
hlt
fistpl
in
arpl
push
adc
push
shll
cmp
push
js
adc
mov
sbb
das
jae
push
mov
in
mov
scas
sbb
mov
and
cmpsl
sarb
cmpsl
and
mov
adcl
subb
mov
dec
xchg
int3
dec
inc
jno
fcomp
jae
arpl
lds
cltd
lea
loopne
mov
add
xor
cmp
fwait
cmp
inc
inc
movsl
aam
cmp
sub
ja
in
sti
aad
ja
aaa
inc
ljmp
xor
adc
jnp
mov
xchg
cmc
not
lret
fimuls
jb
push
xor
mov
cli
mov
add
mov
test
xchg
aas
pop
fidivs
int
jle
lods
mov
insb
pop
loope
jns
mov
sti
adc
ss
mov
adc
xchg
dec
mov
les
js
sub
and
jae
xchg
pop
pop
enter
mov
adc
xchg
test
popf
mov
fmuls
int
dec
iret
fs
add
cmp
mov
imul
popf
mov
loope
mov
jg
mov
leave
xor
aaa
outsl
inc
out
push
lods
arpl
push
xorb
jp
nop
cmp
fwait
and
divb
into
add
lahf
popf
mov
or
imulb
lea
aaa
cmp
push
or
cwtl
add
outsl
add
adc
loop
lods
push
mov
jecxz
dec
out
xor
cmp
jnp
inc
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
fs
sub
test
adc
adc
adc
dec
shl
sub
lock
add
pusha
sbb
xor
mov
aaa
inc
aam
jg
aas
movsb
mov
sbb
inc
sub
shll
mov
dec
dec
mov
pop
cmp
mov
aad
lcall
fcmovnu
rorb
or
cltd
dec
jg
pop
adc
les
scas
jb
inc
push
dec
fbstp
je
scas
push
ja
pop
jnp
xchg
sbb
cmp
or
dec
mov
mov
or
test
jbe
nop
cmp
mov
sub
adc
inc
push
sbb
xor
daa
push
cmc
int3
add
or
xchg
mov
mov
pusha
out
ja
out
and
mov
lea
inc
into
rcll
into
push
sub
push
sub
out
stos
daa
xchg
into
jne
push
cld
arpl
sub
mov
mov
pop
pause
or
outsl
push
xchg
cmpsb
sub
loope
and
out
loopne
xchg
adc
pop
mov
gs
push
es
mov
mov
inc
daa
sub
cmpb
sub
jg
push
cmp
and
into
repnz
pop
inc
adc
add
sbb
in
movsl
xchg
cmp
xchg
cmp
mov
fnstenv
sbb
andb
inc
lods
sbb
lods
addr16
mov
inc
xchg
add
cwtl
jp
push
repz
andb
clc
jo
jmp
mov
lds
imul
shl
aas
pusha
je
scas
mov
ds
jl
xor
int3
sub
mov
loope
ret
inc
and
cld
div
lahf
loop
out
imul
sbb
gs
loop
adc
or
rcl
xchg
sbb
inc
call
fisubrl
and
inc
lods
loope
sub
lds
xor
icebp
mov
cmc
push
xchg
pop
and
orb
cwtl
cmp
ljmp
imul
test
bound
inc
xor
add
js
pop
mov
and
push
mov
adc
imul
test
fsubrs
sub
pushf
and
pop
mov
mov
sbb
sbb
fisttpll
stos
ret
jp
int
decb
stc
popa
ficomps
out
imul
fdivl
rolb
dec
mov
xchg
or
fbld
mov
dec
jns
sbb
into
fbld
sub
movsl
sbb
jnp
jmp
sub
and
jns
dec
cli
call
or
mov
lods
or
sahf
jecxz
cmc
clc
gs
popf
in
add
leave
adc
dec
sbb
and
lret
xchg
pop
outsb
jmp
ret
insl
test
int3
jnp
push
cmp
lcall
or
loopne
mov
pop
and
imul
adc
pop
inc
in
ret
aam
jecxz
sbb
pop
adc
push
or
xchg
jns
fdivs
xchg
mov
pop
sub
jae
push
sub
push
test
inc
add
repz
sub
cmp
and
lea
ljmp
into
mov
jb
mov
jg
mov
mov
sti
jge
mov
lret
insl
inc
loop
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
pop
insl
and
jl
adc
adc
adc
out
cs
loopne
mov
in
sti
mov
and
into
lcall
popf
dec
adc
xchg
mov
cmpsb
mov
inc
xor
mov
es
pop
js
fistl
leave
fbld
jb
pop
iret
sbb
add
outsl
inc
cmp
adc
shr
push
dec
jns
xorl
jne
dec
fnstsw
adc
bound
leave
xchg
scas
mov
pop
loope
shrl
gs
shlb
movb
mov
fildl
rcrl
int3
add
sub
lods
mov
mov
scas
shll
fs
nop
lret
lret
cld
xor
dec
cmpl
repnz
lds
lret
jo
dec
push
jns
xchg
cld
ss
jecxz
jp
inc
movl
xchg
add
enter
dec
and
pop
lds
and
pop
and
or
shrl
adcb
dec
into
xlat
shrb
cmp
dec
rcrl
adcb
inc
test
add
out
mov
adc
sub
or
fadds
xor
mov
xor
or
or
dec
or
cmpsl
stos
sub
scas
repz
jmp
inc
mov
cmp
sub
sbb
sti
cmp
incl
sbb
xchg
cltd
out
push
rolb
lahf
mov
sub
dec
rolb
les
and
cmpsb
sub
push
pop
and
push
stc
stos
mul
cmp
out
js
popa
pop
lcall
cmp
je
mov
cli
fstl
inc
decb
mov
adc
push
or
dec
add
pop
leave
sbb
ljmp
ljmp
dec
push
push
call
pusha
popa
jl
imul
sbb
mov
pop
dec
fbstp
notl
mov
stos
repz
frstor
je
xor
jecxz
inc
inc
inc
sbb
pusha
call
jp
sbb
sbb
xlat
jecxz
dec
inc
pop
fsubl
push
lcall
out
xchg
stos
sub
push
enter
mov
sub
and
and
xor
jmp
jmp
jmp
das
sbb
ljmp
popf
push
cmp
lock
fisubs
int3
rol
sbb
push
mov
cmpsb
lret
lcall
outsw
loopne
lahf
sub
lods
mov
fs
into
add
sbb
mov
adc
or
jb
aad
push
cmpsb
cmp
jle
js
cmp
popa
xchg
lock
xchg
dec
pop
shl
pop
stos
mov
fsubl
cli
lock
or
pop
mov
pop
dec
into
xor
lds
xlat
push
inc
and
iret
test
out
mov
out
aad
pop
mov
int3
dec
inc
in
std
and
ret
test
popf
inc
mov
mov
lds
loop
add
cmp
pusha
dec
jno
cli
pop
dec
lds
std
call
aad
fs
loopne
popf
xchg
daa
stos
insb
and
push
add
outsl
repnz
mov
mov
and
jl
mov
adc
mov
dec
imul
out
out
push
int3
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
enter
mov
adc
adc
idiv
call
xor
in
adcb
mov
in
lret
dec
clc
std
hlt
adc
or
outsb
dec
insl
sti
jmp
rcll
jne
dec
into
jle
sti
xor
ds
or
arpl
adcb
loop
lea
push
call
idivb
inc
mov
test
pop
pop
pop
out
leave
inc
or
sbb
aaa
mov
sbb
movsb
inc
xor
or
nop
lcall
in
pop
inc
inc
popa
insl
mov
sahf
jbe
cmp
mov
cmp
stc
xchg
cs
mov
mov
mov
cmp
std
dec
int3
faddp
cmp
stos
jnp
jmp
adc
jae
idiv
subl
push
mov
pusha
pop
pop
sub
repz
or
int
push
and
js
negl
shll
aam
inc
inc
test
imul
rorb
outsl
and
jo
sarb
push
sbb
or
inc
jnp
test
outsl
pop
movsb
sahf
std
xor
mov
imul
iret
gs
jbe
int
and
sti
inc
mov
loop
push
cmp
icebp
popf
cmp
push
jle
aam
mov
push
xchg
sub
fwait
adc
adc
and
leave
xchg
mov
mov
sbb
xor
stos
fisttps
call
rcl
fs
es
and
jl
in
scas
mov
add
xor
addr16
int3
loop
ret
pop
or
xor
push
mov
xchg
cmp
or
cld
push
fsubs
es
notb
rcll
jecxz
adc
stos
jl
cmpsb
xor
nop
push
mov
pop
jnp
sub
hlt
adc
dec
push
shlb
pop
mov
push
insb
call
lds
je
sbb
fwait
test
jge
inc
icebp
jne
mov
in
shl
mov
mov
add
xchg
daa
push
xor
ljmp
das
incl
pop
scas
sar
jl
scas
mov
mov
scas
pop
fisubl
mov
aad
jg
jnp
out
int
jle
lea
ret
dec
in
push
sub
sti
cwtl
imul
loopne
aam
fs
mov
mov
ror
adc
inc
add
call
test
xchg
cltd
or
jmp
xor
mov
jns
dec
pop
xchg
sarb
out
xchg
sub
sub
aaa
push
iret
inc
mov
into
fisubrs
out
adc
loop
lea
outsl
into
insl
out
xor
xor
push
popa
pop
int
mov
adc
jns
xchg
scas
scas
cmpsb
adc
xor
test
sahf
xor
je
pop
mov
scas
xchg
sbb
ja
jne
mov
shrb
mov
fwait
push
jl
test
cs
outsl
movsl
and
push
mov
sbb
push
adc
adcb
stos
test
insb
jle
pop
loope
pop
jbe
add
lds
jg
mov
stos
add
dec
or
xor
mov
call
rclb
push
out
daa
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
or
loop
jno
adc
int
adc
adc
sbb
pop
add
stc
cld
sarb
sbb
add
mov
out
and
nop
out
lcall
stc
loopne
arpl
test
mov
sub
pushf
jg
xchg
insb
dec
push
sub
pusha
lock
jnp
std
dec
jge
sbb
adc
outsl
cmc
add
cli
call
iret
es
std
popa
dec
inc
mov
dec
xor
mov
push
stos
in
sbb
mov
in
outsl
add
inc
fists
lods
cmp
fs
loope
das
sbbb
push
and
push
cmp
fs
in
pusha
and
and
lods
fsubl
mov
pushf
mov
pop
adc
orb
out
lahf
je
xor
addr16
andb
or
push
dec
xchg
inc
movsb
dec
cmp
shll
lock
ljmp
xor
sub
pop
in
aad
bound
daa
cld
and
fisttpl
lea
enter
inc
shl
out
outsb
int
dec
and
iret
pop
push
cmpsb
push
push
add
inc
cmpsb
call
xor
out
clc
xchg
or
jmp
jmp
sub
mov
dec
movsb
mov
pop
and
adc
repz
push
movsb
js
push
and
sbb
pusha
cmpsl
jo
nop
ret
sub
jnp
jge
test
inc
insl
cli
shlb
xlat
xlat
sub
mov
adc
xor
push
fbstp
and
xor
dec
hlt
fnstsw
pop
fdivr
movsl
fidivrs
aas
gs
cmpsl
enter
push
ss
data16
cltd
fsubl
loopne
loopne
popf
inc
insl
lret
test
adc
cmpsb
ret
lret
stos
sbb
inc
mov
shr
lock
mov
dec
das
cmc
outsb
push
stc
mov
cmp
sub
mov
pop
sarb
jmp
add
popaw
adc
dec
imul
sbb
pop
add
sbb
ds
jb
nop
outsl
xorb
xor
mov
imul
fs
cmpsb
sub
sub
dec
mov
dec
fs
sbb
mov
sbb
xchg
add
gs
pushf
mov
push
and
lea
icebp
xchg
push
call
inc
imul
inc
pop
mov
inc
dec
xchg
cwtl
imul
in
jg
adc
test
lret
push
shrb
cmp
inc
cmp
jge
or
jno
mov
or
mov
mov
sub
sbb
fistpl
cmove
inc
dec
dec
test
push
cld
cwtl
lock
cmp
fiaddl
push
xchg
xchg
lds
mov
adc
shrb
pop
orb
cmp
sub
mov
mov
cmp
inc
aas
adc
dec
adc
enter
or
shrb
sbb
add
xor
xor
negb
mov
mov
xchg
pop
cld
repz
push
add
sub
loop
mov
sub
rclb
lock
pop
fidivs
mov
add
mov
sti
insb
in
sti
cli
push
mov
sub
mov
test
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
pushf
xchg
xchg
js
push
adc
adc
adc
xlat
sub
in
inc
xor
fldl2e
and
loop
std
jmp
pop
and
out
mov
stc
xchg
lods
sbbb
lret
cs
js
inc
movaps
shll
jne
jb
and
sbbl
mov
mov
adc
cmp
shrb
inc
mov
clc
fnstcw
inc
lea
es
sub
and
lock
jecxz
fistl
lahf
repz
rcll
push
pop
mov
dec
jno
pop
jne
daa
add
mov
test
xchg
pop
push
jg
jo
adc
jge
ret
xor
mov
loope
adc
aad
into
aad
sub
adc
mov
push
inc
out
cld
movsl
jns
into
cmp
push
xchg
add
xchg
dec
cli
ret
into
movsl
cmc
aad
lods
rol
pop
loope
sbb
jns
mov
imul
push
sbb
dec
fs
mov
inc
pop
mov
sbb
mov
mov
push
xchg
add
clc
subl
insl
pop
adc
dec
push
xor
imul
cmp
inc
fstp
dec
push
sar
aaa
or
and
loope
mov
mov
loope
jmp
push
loop
mov
adc
mov
xchg
cmp
inc
je
xchg
rcrb
mov
rcrl
xlat
test
fistpl
pop
aad
lods
or
push
xchg
xchg
xor
jge
pushf
xor
lods
xchg
lret
arpl
or
les
jb
inc
ret
pusha
and
fwait
stc
pop
loope
ret
mov
out
adcl
rorb
in
cltd
dec
cmp
add
xor
scas
mov
ret
xor
inc
jnp,pt
je
push
out
xor
push
add
sub
or
and
mov
add
sbb
xchg
sbb
pand
mov
xchg
jmp
sti
dec
insb
lock
sbb
dec
or
xor
add
sbb
jl
push
in
mov
and
mov
dec
ljmp
xor
dec
into
test
mov
sbb
fcom
loope
dec
ret
pop
std
jecxz
out
sti
out
rcrb
xor
mov
push
or
sbb
dec
cmp
xor
sbb
in
add
push
adc
fs
jns
push
lods
sbb
stc
int
iret
sub
mov
sbb
and
mov
mov
pop
pop
mov
xor
leave
inc
mov
add
cld
jb
cmpsb
xor
outsb
in
xchg
push
mov
jbe
int3
mov
and
test
add
pop
movsb
lock
xchg
rcl
test
xchg
cmpl
xchg
pop
push
loop
into
sbb
jae
ljmp
data16
or
mov
sub
xor
xor
sub
outsl
fidivl
ljmp
or
cs
ret
jns
lea
lret
sti
stos
mov
das
hlt
arpl
shl
jno
aas
cmp
mov
lcall
cli
push
scas
sti
sbb
mov
lods
arpl
outsb
jle
and
or
mov
mov
jmp
adc
inc
mov
cmp
pop
push
or
fdivr
xor
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
mov
bound
adc
adc
mov
mov
cmpsb
insl
push
inc
push
xchg
into
mov
jmp
clc
jg
mov
pop
in
outsl
push
cmc
dec
and
jmp
adc
push
lahf
sbb
push
popa
lods
out
xchg
inc
mov
adc
pop
or
mov
or
jbe
add
mov
loop
nop
out
adc
or
imull
sbbl
jecxz
fcmovbe
jecxz
mov
xchg
lcall
mov
push
jle
jb
pop
cmc
scas
fsubs
fdivl
clc
jecxz
push
sbbb
test
or
pop
add
scas
jne
mov
push
rclb
jae
popf
mov
add
fnsave
pop
in
shll
add
adc
addr16
lahf
insl
test
push
loop
and
add
sarb
adc
cmc
adc
data16
cli
xchg
test
push
adcb
cmp
incl
adc
lret
dec
pop
mov
mov
dec
rcll
movsb
movsl
adc
adc
xchg
fnsave
mov
sbb
cmp
jge
jg
test
xchg
push
mov
dec
addr16
adc
std
jne
fisubrs
dec
cld
test
add
dec
and
pop
jne
scas
mov
inc
cmp
or
mov
cmpsl
les
addl
sbb
stos
mov
stos
sub
stc
rcrl
cmovbe
xchg
pushf
aam
shrl
lret
cli
mov
pop
pop
sub
dec
scas
out
aas
mov
inc
aas
test
test
cld
lea
mov
sbb
pop
xchg
mov
cwtl
pop
jle
mov
fwait
xlat
dec
jb
mov
sar
adc
sbb
adc
jg
or
pop
or
je
or
mov
mov
add
jmp
ret
xchg
adc
mov
push
mov
lea
pop
sbb
testl
orb
mov
sbb
aaa
cs
nop
je
aad
mov
in
push
push
pop
jo
jne
xor
subb
xor
inc
mov
cmpb
rcl
jmp
pop
push
pop
rorl
sub
sbb
and
lock
popf
sbb
and
scas
repnz
ss
mov
jmp
mov
sub
mov
inc
cwtl
cmpl
mov
adc
es
int
js
in
jno
push
fwait
xor
dec
aas
xchg
mov
lds
add
mov
xchg
lret
or
imul
mov
stos
mov
push
decl
scas
inc
mov
fld
xchg
mov
mov
lock
les
in
inc
push
or
lock
push
jg
jae
cltd
inc
cmpsl
push
adc
fnstcw
pop
testb
sbb
fisttpll
sub
xchg
outsb
cmp
sub
lret
leave
aaa
xlat
xchg
repnz
sbb
pop
mov
sbb
repz
stos
pushl
cmp
pop
daa
jmp
lret
push
sub
insl
xchg
arpl
fucom
es
fdivs
mov
mov
jae
inc
adc
pop
push
and
loopne
mov
mov
insl
out
js
add
pop
dec
loop
fsubl
shlb
pop
dec
cwtl
stc
add
sbb
cmp
loope
push
das
repz
sbb
outsb
mov
cmp
stos
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
pop
adc
xor
adc
sub
xor
scas
or
sbb
jns
mov
icebp
fs
lds
movsb
inc
jae
adc
push
lea
push
imul
ficoms
scas
loopne
in
cmpsl
mov
lea
int3
xchg
aad
jmp
subb
push
jmp
jg
test
sub
into
xor
xchg
pop
loop
int3
cmp
in
loop
in
dec
pop
pop
loopne
enter
jne,pn
ss
or
loopne
std
mov
jbe
dec
pop
aaa
push
cs
shrl
sahf
lcall
and
cwtl
add
aaa
nop
push
mov
jno
stc
sub
daa
dec
into
adc
add
xor
xchg
adc
mov
push
ds
xor
int3
dec
out
test
xor
stos
das
add
add
ljmp
lods
adc
add
pop
pushf
pop
aam
xor
inc
cmpl
mov
cwtl
test
jo
cs
push
jae
mov
add
push
lods
je
rorb
cmp
sarb
jmp
movsb
xchg
out
xchg
fwait
lds
repz
cs
inc
and
xchg
dec
jae
push
pop
je
sbb
xchg
push
dec
mov
stos
sbb
int
push
push
int
sti
sbb
scas
movsl
adc
jns
aas
les
add
ret
lret
fmul
sbb
ljmp
stos
push
and
xchg
lret
scas
dec
cld
cmp
lock
pop
repnz
lcall
andb
mov
xchg
jno
xchg
sbb
push
aas
or
or
cmp
movsl
fmuls
dec
inc
inc
adc
std
rcll
ja
sub
aaa
in
inc
mov
in
push
push
scas
sbb
xchg
cmp
test
sbb
mov
inc
stos
jmp
testb
cs
imul
and
push
mov
add
or
jl
inc
mov
pop
imul
fsubr
push
iret
mov
ret
in
xchg
shl
gs
clc
xchg
fdivrs
fidivs
out
cmpl
shrl
in
mov
mov
je
lods
jmp
sub
mov
push
cwtl
gs
xlat
inc
jle
sbb
in
fwait
je
sbb
pop
jb
popf
iret
ret
cmp
jbe
pop
outsl
pushl
mov
movsb
lea
fistpll
mov
cmp
push
sahf
jbe
imul
inc
pop
rol
fmul
enter
add
mov
push
mov
repz
pop
cmpsb
ret
lock
loopne
cwtl
ret
lds
jmp
arpl
popf
mov
loopne
es
mov
push
xor
xchg
scas
outsl
pop
sbb
mov
pushl
scas
sub
sbb
out
rcrl
test
xor
sub
les
jmp
and
or
push
inc
xchg
ret
sarl
arpl
lds
outsl
xchg
pop
mov
adcb
push
mov
adc
pop
push
sbb
pusha
out
xor
in
in
mov
push
sub
jle
stos
stc
mov
dec
sub
movsl
cmp
jne
insb
jg
je
fs
sub
jne
add
iret
xor
push
cmp
xchg
ret
cmc
add
out
sbb
repz
outsb
push
cmp
gs
cs
das
test
pusha
cmp
xor
rcll
gs
mov
jbe
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
pop
sarb
adc
adc
inc
pop
loop
sub
or
and
adc
sub
std
sbb
pop
mov
js
mull
mov
xchg
push
and
pop
mov
jb
pushf
adc
cmp
and
cmovg
jecxz
dec
adc
mov
sbb
outsb
cmpsl
push
stos
push
dec
sub
fnstcw
pop
movb
data16
pop
cmp
jecxz
in
jno
pop
add
dec
dec
push
imul
sbb
gs
xor
inc
repnz
movsl
lcall
jecxz
add
ds
mov
aas
ja
jno
jmp
jp
xchg
mov
dec
jg
fldl
lret
out
mov
lcall
sbbl
cltd
or
pop
inc
adc
xchg
rdtsc
sub
mov
test
pop
mov
loope
cs
mov
push
mov
ss
or
push
mov
lods
aad
gs
lea
fists
mov
jo
sub
arpl
es
int
mov
shrl
jb
cltd
dec
loopne
loop
pop
mov
jno
in
gs
ret
or
and
lods
cmpl
lcall
ljmp
xchg
and
dec
dec
cli
js
mov
ret
sbb
rcll
sbb
xchg
scas
xchg
jge
and
idivb
iret
jp
xchg
fs
rcrl
fists
sbb
pop
repz
fcoml
xchg
in
sub
sub
gs
push
push
sbb
rolb
pop
cli
outsl
pop
test
dec
push
adc
cmc
test
push
stos
push
shrb
pop
inc
sub
mov
cld
mov
pop
popf
test
push
repnz
push
sbb
outsl
rcl
mov
and
loopne
sahf
inc
inc
xor
cli
sub
cmp
jle
xchg
ret
movb
add
jp
pop
mov
sbb
mov
jno,pn
dec
jecxz
pop
rolb
mov
fistl
std
adc
sub
dec
adc
sbb
outsb
xchg
lock
dec
add
cld
sbb
pop
hlt
sub
or
aam
stos
jecxz
mov
mov
aad
out
aad
push
push
push
fisttpll
sub
pop
bound
into
push
dec
jo
es
loopne
jge
pop
and
or
lret
sub
arpl
jo
das
negb
lret
fimuls
test
pusha
pop
inc
fmuls
pop
dec
lods
cmp
insl
cmp
push
jge
cli
int3
stos
push
fbstp
cs
push
mov
dec
mov
add
jnp
std
or
inc
cmp
xlat
popa
push
pushf
inc
in
shl
mov
lcall
fwait
sub
and
xchg
jne
fsubs
mov
mov
cmp
fsts
and
mov
mov
push
movsb
jns
push
inc
test
sti
in
push
int
loope
and
cli
add
sub
push
inc
lcall
jp
mov
xor
orl
inc
sahf
mov
jl
sbb
mov
test
mov
xlat
xchg
xchg
popf
lret
ret
sbb
test
fistl
jno
arpl
jecxz
into
sub
jge
dec
inc
inc
or
dec
xchg
sub
fcmovne
js
xor
imul
mov
in
fdiv
mov
jle
shrb
gs
cld
xchg
pop
xchg
and
mov
mov
xchg
sbb
mov
xor
je
mov
or
xchg
sbb
add
aas
in
mov
dec
xchg
lds
fcomps
subl
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
ja
mov
xor
adc
sbb
push
call
jbe
xor
mov
jge
push
mov
in
divl
push
sub
dec
jp
xchg
or
cmp
imull
push
out
pop
pop
cmpsb
mov
mov
mov
dec
adc
cmp
inc
push
and
loop
in
cmp
iret
out
sub
rcr
or
repnz
cmp
test
add
fisttpl
mov
mov
add
jecxz
xchg
dec
movsl
dec
mov
faddl
pop
xor
adc
inc
bound
push
cmp
dec
sbb
adc
and
mov
fbstp
pop
add
add
mull
xchg
sub
ljmp
pop
cwtl
or
enter
jmp
xor
inc
int3
addl
xor
push
jl
xchg
in
into
lea
mov
es
inc
mov
and
adc
jecxz
add
xchg
sbb
push
push
mov
mov
fdivrs
sbb
mov
jae
mov
mov
and
sub
xchg
inc
int3
and
adcb
lahf
int3
mov
into
ja
inc
leave
mov
adc
xchg
adc
cmp
sahf
icebp
leave
pop
sti
movsb
cmpsl
pop
mov
and
insb
mov
mov
push
xchg
cwtl
jbe
pushf
sub
stos
add
add
test
stos
xor
movb
subl
xor
je
mov
xor
lret
push
mov
inc
pop
das
int3
xchg
xchg
and
inc
lret
fldln2
dec
mov
jnp
cmc
mov
arpl
call
jo
aaa
mov
cmp
clc
fstps
adc
dec
daa
mov
popa
push
in
std
mov
clc
rcll
and
fisttpll
je
add
sbb
adc
sub
sahf
stos
sbb
adc
mov
or
push
fwait
or
lock
fimuls
sub
movsb
movsl
xlat
inc
movsl
sbb
add
test
add
jnp
jmp
dec
push
imul
mov
mov
jns
cmp
lcall
dec
xor
pop
adc
or
xchg
mov
sbb
pop
jge
fisttpl
and
popa
add
mov
aas
jmp
shll
ret
or
sub
fwait
mov
mov
pusha
testl
stos
imul
adc
cs
in
dec
mov
cld
jne
inc
filds
repnz
lock
or
add
push
and
xchg
add
mov
pop
cmp
pop
popw
jle
xchg
xchg
jns
push
fists
stos
lret
inc
repnz
cwtl
xchg
xor
repnz
out
and
dec
sub
inc
jl
add
sbb
in
mov
ret
cltd
ja
push
fsubr
adc
mov
push
inc
and
mov
dec
orb
mov
ret
xlat
aam
subl
mov
xchg
mov
mov
and
stos
xor
xchg
jl
jo
in
movsb
pop
adc
test
mov
fwait
jle
movsl
andb
and
sbb
inc
scas
push
xor
or
faddp
out
std
cmp
aaa
insl
fcoml
push
scas
dec
enter
add
les
sbb
push
jo
and
scas
mov
lds
cli
call
sbb
aas
jecxz
adc
cltd
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
cmpsl
mov
loopne
jle
push
add
aaa
mov
lret
xchg
sub
mov
add
xor
std
and
pop
jecxz
mov
xor
push
add
aas
sarl
inc
jl
sbb
push
je
fidivrl
test
shl
xorb
lahf
or
and
pop
inc
hlt
test
lock
mov
call
pop
push
rep
push
and
or
cltd
and
sub
mov
insl
roll
or
cmp
and
inc
and
mov
mov
std
push
loope
ds
loopne
jge
subb
adc
lea
daa
mov
fdivrs
pop
mov
cmp
mov
xchg
pusha
into
sbb
xchg
jle
mov
cmpsb
sub
xor
adc
jae
leave
clc
insl
xor
fs
subb
fists
xor
or
mov
cmp
rcrl
xor
ljmp
fwait
add
mov
pop
jae
fmull
pop
inc
jb
fsubrs
lock
mov
push
and
mov
fyl2xp1
rorb
sub
bound
pusha
fdivrl
jl
faddp
jb
sbb
xchg
jbe
dec
mov
or
stos
sub
loope
lds
stos
jae
mov
ja
add
icebp
mov
das
and
pop
call
xor
in
popa
out
jmp
push
fdiv
mov
adcl
cmp
and
mov
mov
mov
sbb
jg
inc
pop
cli
iret
adc
dec
jl
insl
jnp
icebp
fwait
xor
std
aaa
andl
ret
aas
pusha
xadd
push
std
adcl
xor
lods
cltd
stc
ljmp
dec
lock
leave
inc
dec
bound
or
aad
vpinsrw
out
jnp
xor
xchg
into
cmp
inc
push
sub
and
or
bnd
repnz
sbb
iret
aam
push
aad
mov
out
xchg
push
in
push
xlat
xlat
dec
cs
gs
fistl
jb
subb
push
cmp
push
fwait
js
adc
daa
cwtl
cmp
mov
sbb
ss
cmp
into
stc
jo
outsb
mov
mov
xchg
int
xor
testb
test
dec
sbb
cmp
and
mov
sbb
and
lcall
mov
es
cmpsb
cmp
push
clc
or
aaa
mov
add
addr16
mov
xchg
and
lds
jg
add
stos
cmp
jne
push
pop
repz
push
xchg
mov
mov
icebp
mov
addr16
loop
sbb
ja
scas
aaa
movsl
mov
lret
mov
adc
aas
pop
lahf
jp
cmp
ret
mov
mov
adc
xlat
leave
inc
fcmovbe
and
mov
movsl
sub
mov
lods
mov
xchg
sbb
mov
inc
not
mov
imul
in
xlat
std
out
sub
mov
push
in
cmp
jl
dec
add
inc
scas
loopne
push
test
ja
repz
loope
in
and
stc
mov
ljmp
mov
jge
test
jno
jmp
jge
imul
jge
and
xchg
out
xchg
ffreep
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
data16
cmp
adc
adc
adc
sahf
push
enter
mull
push
jbe
out
add
push
xor
loope
mov
cltd
ja
lods
xor
xchg
xor
rcll
nop
mov
arpl
aad
adc
or
xor
pop
fcoms
decb
jmp
stos
or
dec
jmp
or
nop
out
mov
or
dec
stos
jb
xor
pusha
popa
lret
not
jmp
rorl
enter
test
orb
pop
pop
ficoms
mov
jecxz
jl
imul
cmp
fsubr
in
pushf
lcall
es
push
sub
mov
mov
fdivp
stc
movsl
mov
sbb
js
movsl
pop
lcall
add
mov
sub
adc
jl
int
lret
nop
or
popa
push
or
pop
push
cmpsl
shl
add
insl
jb
sub
movsl
test
and
cwtl
aas
test
xor
punpckldq
fisttpl
push
mov
in
movsb
cs
sbb
fs
setl
jnp
sub
mov
and
jb
push
and
rol
add
jp
mov
jbe
jo
mov
add
lods
push
jecxz
adc
roll
xor
rolb
push
in
rorb
lds
xor
shr
xor
repz
call
sub
jl
ds
aad
push
sub
jb
out
jns
stos
in
inc
adc
inc
shrb
js
mov
push
cs
inc
jbe
out
movsb
enter
adc
test
cmpsl
cmp
jle
std
inc
cmp
sub
stos
repnz
insb
adc
rorl
data16
test
sub
mov
and
cmp
out
pusha
pop
add
xchg
int3
test
insl
add
push
mov
jne
cmpsl
jmp
das
xor
dec
lds
ret
mov
sbb
jg
pop
mov
fistpll
inc
mov
rclb
cld
jl
jecxz
popa
or
inc
xor
add
mov
inc
nop
notl
jmp
mov
or
popf
enter
xor
scas
aad
pushf
mov
pop
inc
insl
cmpl
call
cmp
shrl
fisttpl
movsb
add
jmp
aaa
inc
jne
loope
adc
jmp
dec
jbe
add
xor
cmpl
divl
adc
dec
jno
aas
std
xor
inc
fildl
cltd
cmc
mov
fwait
aad
add
adc
dec
jb
cli
mov
xor
jae
imul
cmp
aad
cmp
mov
outsb
in
addl
sbb
jb
lods
std
adc
stos
push
rcrb
lea
inc
xchg
mov
jno
repz
movsl
stc
popa
frstor
outsb
dec
cmpsb
fnstcw
and
aam
cli
jle
cld
pop
fldcw
jns
cmp
xchg
push
adc
fisubl
add
cmpsb
cmp
pop
jge
add
xor
dec
insl
lock
bound
inc
add
ss
lea
rcrb
pop
lcall
dec
lahf
cmp
mov
dec
sbb
mov
aas
ds
sub
mov
cmp
dec
lea
lret
es
mov
push
int
into
jb
cwtl
int
xchg
mov
xchg
xchg
jg
mov
mov
xor
xorb
les
std
pop
inc
mov
inc
in
jecxz
xchg
pop
pop
mov
push
out
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
pop
inc
popf
test
insl
imul
pop
cmp
mov
in
adc
or
cmp
repnz
xchg
jbe
stos
adc
xchg
and
jle
inc
cmpl
in
jle
ja
inc
mov
mov
je
sub
in
sub
push
mov
xchg
arpl
dec
pop
pop
add
sbb
out
test
mov
mov
push
push
loopne
mov
jb
jo
lcall
inc
cltd
jnp
pop
xor
sahf
icebp
std
stos
pop
push
ds
bound
inc
ret
movsl
adc
adc
fucomi
pop
xor
fmulp
aam
fs
cs
bound
int
outsl
nop
inc
add
add
loope
and
push
jmp
jns
mov
mov
adc
mov
in
loop
out
xor
jecxz
xchg
arpl
add
enter
xchg
lods
mov
pusha
add
xor
pop
or
adc
repz
fimuls
or
xchg
pop
fdivrs
bound
out
push
test
push
inc
or
xor
jmp
jmp
dec
fldenv
cld
ror
dec
notb
dec
cli
fnstsw
cmp
ja
add
out
push
pop
push
out
xchg
xor
clc
xchg
mov
addr16
inc
int3
sahf
leave
push
xorl
scas
push
je
sub
jp
out
scas
lds
pop
or
jae
in
push
ljmp
and
ret
ret
dec
jge
cmp
xor
rcr
adc
cs
dec
sub
test
fdivr
push
lea
std
sbb
scas
inc
test
mov
fwait
and
adc
dec
pop
pop
jnp
leave
dec
mov
pop
ret
movsl
or
out
or
fdivrp
int
pop
sbb
scas
or
mov
ljmp
scas
sahf
aad
mov
lods
cmp
lret
outsb
jp
cmp
jg
jo
nop
xchg
ljmp
shlb
jmp
rorl
in
stc
inc
pop
fwait
imul
pop
repnz
in
in
test
push
sub
xor
mov
push
adc
jp
adc
pop
fnstcw
mov
adc
inc
outsb
test
pushf
add
push
jns
inc
sbb
mov
pop
inc
push
mul
out
lea
mov
rcll
bound
into
out
jmp
sbb
jecxz
mov
out
ds
xchg
jp
mov
push
mov
subb
dec
dec
xchg
mov
sub
xchg
insb
cli
dec
jge
xor
decl
cltd
xor
jmp
aad
pop
sbb
pop
sbb
out
sub
imul
pop
jno
push
add
mov
push
mov
inc
ja
iret
pop
cld
ror
faddl
jg
add
shrb
fisubrs
loopne
daa
xor
es
xor
lahf
data16
loop
pop
aaa
call
mov
cmp
mov
mov
out
and
hlt
stc
cli
inc
or
mov
inc
imul
push
sub
scas
fwait
sbb
mov
in
adc
sbb
sbb
pushf
lds
adc
loopne
sbb
shrb
icebp
aaa
lret
mov
pop
dec
mov
jmp
mov
addr16
mov
outsb
ds
dec
shlb
daa
es
mov
add
sbb
ljmp
ror
mov
push
in
shrd
xor
jmp
mov
popa
lcall
aam
push
sub
adc
adc
adc
ficomps
sbb
ja
dec
push
mov
scas
les
fistpll
testb
cmp
jl
out
insb
sarb
pusha
and
mov
pop
dec
or
sub
or
xor
fwait
out
mov
divl
out
lods
popf
push
xchg
pop
sub
test
test
sbb
mov
mov
adc
sub
cmp
lods
cwtl
xlat
sbb
mov
cmpl
ret
mov
dec
je
mov
inc
loopne
pop
pusha
pusha
mov
or
ja
jno
nop
fcomip
sbb
loop
push
push
and
mov
pusha
andl
xchg
dec
dec
scas
push
fistpll
mov
dec
jmp
daa
mov
sbbb
dec
test
xlat
sbb
mov
mov
popf
rcl
sub
js
icebp
repz
lret
pop
insl
cmp
orl
jmp
xchg
push
jl
push
adc
push
mov
incb
xor
xchg
movsb
inc
clc
idivl
jnp
adc
push
imul
dec
test
fnstenv
ret
cmpsb
jecxz
sbb
cmp
cmc
fsubl
popa
incl
repnz
nop
gs
inc
push
sti
mov
xchg
and
and
add
stos
pop
xchg
scas
les
fcmovnu
push
leave
lret
movsl
mov
or
sahf
sub
sbb
movb
xchg
lret
pop
mov
and
pop
test
addl
jns
jbe
jo
jb
pop
pop
dec
push
test
out
lret
loope
hlt
inc
test
or
push
push
and
daa
push
lock
mov
lods
jp
in
and
cmc
jl
lods
xor
movsl
inc
dec
sbb
outsl
shll
push
pop
mov
cmp
or
cmp
push
pop
and
inc
ljmp
ja
dec
mov
into
adc
pop
stos
push
mov
add
fwait
inc
lds
in
fcmovnb
movsb
sub
pop
xchg
and
faddl
sbb
cmp
sub
push
fnstcw
loop
add
inc
or
lcall
mov
ficomps
dec
jmp
mov
das
push
jle
cmc
stc
bound
scas
loope
jmp
adc
mov
int3
cmc
push
packuswb
ja
and
hlt
lahf
push
in
aad
pop
iret
xchg
rolb
adc
xchg
out
mov
add
sbb
hlt
add
mov
and
out
jg
sahf
inc
orl
jmp
ror
loopne
cmp
cltd
fisttps
or
dec
in
insb
dec
loopne
jge
es
aaa
xchg
mov
out
and
ljmp
test
mov
lods
loop
sbb
mov
push
pop
pop
pop
push
imul
push
imull
sub
xor
test
lcall
mov
addr16
nop
xchg
mov
imul
xor
data16
fidivrs
xchg
pop
adc
cmp
jmp
pop
add
sub
aas
xor
out
sbb
inc
inc
movsb
cli
and
add
mov
mov
or
xchg
imul
sarl
aam
popf
xchg
jmp
fidivl
pop
mov
mov
mov
out
xchg
repz
out
pop
aaa
fsubp
in
out
out
mov
popf
repnz
nop
mov
add
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
mov
adc
fmull
adc
scas
lods
imul
lods
sub
adc
mov
and
call
adc
cmp
adc
daa
cltd
shl
sub
mov
fwait
xchg
fnsave
xor
jg
in
jle
jb
cmp
or
xchg
add
hlt
je
adc
push
rcrl
dec
pop
push
sub
adc
test
cmp
nop
dec
out
adc
or
add
dec
subl
mov
xchg
push
mov
fnstsw
pop
xchg
jmp
xchg
sub
pop
pop
push
dec
lods
push
mov
rcrl
scas
jnp
mov
aas
mov
fsubl
mov
push
and
stc
out
or
data16
adc
in
enter
inc
popa
addl
cmp
movsb
jnp
cmp
mov
mov
add
mov
rcrb
arpl
out
cltd
or
mov
sub
push
nop
inc
js
insb
or
or
icebp
adc
cli
addb
lds
repnz
inc
andb
fmul
popa
je
sub
out
jecxz
cmp
in
shr
fstpl
dec
xchg
rol
mov
movsb
mov
test
outsb
bnd
fs
scas
cmc
icebp
mov
cmc
cwtl
nop
jno
pushf
dec
push
adcb
xchg
cwtl
test
pop
inc
jnp
out
js
pusha
pop
in
fisttpl
jo
or
dec
push
xlat
or
ficomps
sbb
stos
lcall
push
scas
je
inc
push
data16
mov
sahf
out
mov
mov
arpl
into
popa
pop
mov
mov
fcoms
xchg
add
mov
mov
pop
insl
inc
mov
lahf
out
mov
rclb
mov
or
sub
jb
cmpsl
pop
shlb
adc
out
add
pop
pop
jge
jecxz
pushf
insl
imul
js
mov
insl
lcall
push
pop
inc
adc
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
cmp
in
jle
sbb
adc
movlps
mov
and
cmp
pop
orb
stos
or
dec
lahf
inc
push
arpl
add
jecxz
and
imul
or
jb
iret
out
adc
jp
push
add
mov
loop
out
bound
push
xchg
pop
sbb
cmpsl
leave
lcall
ja
leave
cmpsl
sub
push
lret
mov
notb
jne
and
and
stc
sbb
decb
jo
mov
adc
fstl
push
popa
mov
and
testb
push
mov
je
lds
mov
fnstcw
pop
pop
fldenv
jg
mov
sbb
es
insb
xchg
sub
jecxz
jnp
je
dec
inc
sub
test
sub
jne
ret
mov
or
repz
gs
add
cmp
call
das
cmp
add
les
sub
push
lods
mov
mov
inc
jge
pop
lahf
movsl
pop
lcall
sub
xor
out
in
stos
cmp
push
jle
inc
xor
ltr
mov
inc
jae
mov
jp
std
pop
data16
pop
test
lea
cmp
xchg
sub
insb
popa
inc
jno
push
jmp
adc
add
scas
sub
xchg
cwtd
jnp
es
and
inc
sub
mov
dec
imul
or
jp
push
push
push
inc
stos
sbb
ss
aad
sahf
pop
jle
mov
insl
jp
lock
pop
popl
dec
dec
pop
jnp
sub
movsb
xor
lock
push
cmp
push
jge
and
cmp
subb
sarl
test
mov
xchg
and
test
sbbl
xlat
aad
jns
or
std
mov
jge
sbb
addr16
mov
outsl
mov
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
sub
insb
pop
sbb
adc
movlps
lcall
push
mov
jo
dec
cmp
sbb
inc
das
test
addr16
lds
clc
mov
aas
cmpsl
sub
mov
fsubr
inc
xlat
scas
and
push
mov
cmp
mov
cld
fnclex
xchg
lods
xchg
gs
icebp
add
mov
test
pop
testl
leave
popf
shl
sub
jnp
and
dec
fucomp
inc
xorl
mov
pop
xchg
inc
sub
ds
jo
add
push
dec
xchg
adc
xchg
orb
cmp
cmpsl
cmp
push
in
ret
sub
lahf
rorb
jnp
jle
dec
mov
call
pop
clc
xor
xchg
jmp
int
push
jg
test
xor
cmc
mov
clc
loope
xor
inc
sbb
subb
orb
imul
rorb
outsb
cmpsb
sub
leave
inc
fwait
mov
in
xchg
lahf
mov
jmp
test
out
xor
xchg
mov
jae
movsb
mov
popf
scas
scas
add
mov
shlb
cmovle
jo
mov
ljmp
push
sbb
ds
out
aad
movsb
jge
sub
dec
push
jl
pop
push
jmp
repnz
daa
aam
mov
aam
idivb
sub
push
lret
and
jno
dec
in
mov
jp
insl
in
xor
nop
sbb
shll
cmp
lods
dec
orl
mov
fldl
push
push
push
scas
out
xchg
xor
js
jg
xor
push
inc
int
sarl
clc
xchg
dec
jne
push
jmp
popf
fstp
dec
cmp
ret
pop
add
mov
nop
pop
dec
cmpl
jns
movsb
cmc
mov
mov
add
xor
sti
pop
mov
addr16
int
popf
lds
push
or
std
sub
or
jge
sub
iret
adc
xchg
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
push
dec
mov
fmull
adc
lahf
in
call
test
and
sbb
int
mov
dec
xchg
fwait
ds
adc
xor
outsl
pop
cmp
icebp
imul
icebp
arpl
xorb
in
xlat
mov
xchg
push
mov
adc
push
push
xor
mov
cli
mov
mov
jnp
mov
xchg
inc
fstpt
es
js
adc
dec
cmp
mov
aas
xor
aad
push
lds
adc
sbb
mov
push
push
push
push
aas
jae
lods
popf
jno
loopne
jae
andb
pop
ja
incb
lahf
cmpb
ljmp
andb
dec
ja
sub
fnstcw
movsl
fildl
les
iret
call
xchg
addr16
pop
pop
jle
dec
push
jo
dec
push
in
adc
lret
or
jecxz
xchg
mov
repnz
rcr
push
pop
or
pop
jno
add
nop
inc
mov
into
push
imul
pop
jmp
aaa
mov
push
jnp
pushf
sbb
imul
cli
and
pop
pop
mov
imul
sbb
xor
cmovns
pop
cmp
add
data16
in
pop
sub
push
xchg
dec
sbb
cltd
xchg
out
popl
js
mov
xor
xor
adc
sub
inc
and
inc
jns
sbb
lahf
jle
push
std
sbb
not
pusha
xlat
mov
mov
dec
jbe
inc
mov
sbb
aam
repnz
outsl
lret
jg
lods
xor
cmc
clc
loope
dec
or
mov
add
add
adc
je
lret
mov
cs
imul
bound
adc
jnp
in
movsb
sbb
and
dec
push
jp
push
xchg
lods
loop
dec
add
and
mov
data16
xor
call
dec
jmp
xchg
lahf
hlt
jae
or
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
fdivrl
in
adc
adc
movlps
dec
cmp
jns
lret
jecxz
add
dec
sbb
enter
adc
leave
lds
les
arpl
mov
and
inc
pushf
or
mov
test
jle
sar
mov
lods
or
es
mov
ret
mov
or
cwtl
fmuls
pop
or
jmp
stc
xchg
in
sub
jae
cmpsb
int
xchg
lock
xor
cmpsl
sub
cmpb
repz
gs
inc
cmp
icebp
xchg
xchg
cmp
stos
addr16
fdivr
fisubl
push
cmp
pop
and
sub
inc
jle
push
and
out
fs
or
cld
jmp
in
dec
loope
pusha
jns
or
shrb
jnp
sahf
mov
inc
xor
cmpsb
clc
into
js
das
insl
add
mov
sbb
xor
jbe
mov
fsubrs
push
insl
jb
push
mov
mov
mov
cmc
lods
stos
roll
scas
cld
jns
mov
cltd
xchg
pop
pop
pop
push
inc
repz
rolb
mov
enter
cmp
adc
mov
cmp
dec
push
push
js
fdivr
ja
sub
push
or
outsb
mov
test
jnp
adcl
mov
xorl
jecxz
pusha
mov
hlt
lret
mov
sbb
jecxz
movsb
jge
dec
jns
jle
dec
mov
jae
inc
dec
pop
dec
stos
repz
rorb
lcall
sub
mov
stc
mov
mov
mov
adc
inc
ja
fldl
or
es
mov
test
mov
pop
xchg
inc
mov
out
out
arpl
add
ss
xchg
push
sub
iret
movl
rolb
sub
push
fistl
ja
pop
mov
mov
dec
and
xchg
dec
add
fsincos
inc
jo
xchg
mov
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
ret
loope
rcll
stc
sbb
sbb
outsb
push
push
push
pusha
push
jge
push
inc
cmpb
dec
and
imul
jb
mov
add
push
insb
ljmp
sbb
mov
adc
inc
pop
sub
in
outsl
out
ja
insb
mov
std
and
or
xor
testb
xchg
repz
loope
pop
arpl
jae
jmp
xchg
out
pop
cwtl
cmovo
xor
pop
scas
sbb
add
in
aaa
stos
mov
or
pextrw
mov
and
rolb
inc
dec
inc
xchg
mov
sbb
popa
int3
in
xchg
adc
dec
mov
pop
push
jge
ror
mov
xor
push
int3
sarb
jge
jbe
xor
fldcw
inc
and
jle
jg
cmc
sub
fs
pop
js
jge
sub
mov
bound
mov
sub
mov
imul
sbb
push
or
sbb
xchg
ret
testl
cmp
sti
lods
fs
jnp
push
push
stos
ljmp
or
notl
pop
cmp
scas
add
pop
std
test
mov
insb
dec
dec
int3
or
dec
xor
or
stos
or
xchg
cmc
xchg
mov
push
mov
jne
fs
cmp
mov
jb
cld
sub
lods
gs
insl
mov
xlat
repz
dec
sub
test
stos
sar
loopw
xchg
add
jmp
pushf
dec
adc
push
lret
jmpw
push
pushf
pop
jl
mov
std
jg
push
push
inc
pop
jmp
inc
test
mov
ds
scas
subb
cmp
in
pushf
xchg
push
lcall
lcall
andb
inc
cld
adc
out
add
cli
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
sub
adc
fmull
adc
jo
popf
sbb
adc
popf
mov
xchg
sub
mov
or
pop
cli
cmp
into
mov
and
push
pop
movl
test
inc
jne
adc
jecxz
cmpb
mov
xchg
cmp
add
xchg
iret
imul
pop
jnp
mov
sub
jge
and
pusha
mov
int3
jecxz
pop
pop
add
cmp
cltd
mov
jecxz
mov
cltd
mov
and
int
xchg
in
cld
fistl
test
push
fcompl
xor
inc
popf
xchg
cmc
test
cld
sbb
or
dec
cmpsl
repz
test
jbe
sbb
ret
aam
aas
imulb
aad
ret
shrl
leave
xchg
js
pop
add
inc
cmpsb
lock
push
jg
push
push
andb
add
in
popf
mov
inc
js
mov
notb
rorl
pop
and
pop
sub
cmp
cmc
in
or
js
push
pushf
mov
add
test
xchg
pop
in
inc
loope
mov
add
pop
dec
mov
adc
rorb
jb
sahf
ret
push
mov
and
sub
jecxz
dec
daa
aaa
sbb
leave
stos
imul
inc
das
mull
addr16
fdiv
inc
pop
pop
xchg
stos
aad
sbb
ja
pop
cmp
pop
in
pop
in
lahf
add
or
xor
repnz
rcrl
les
test
inc
mov
test
daa
push
add
ror
aad
dec
dec
test
arpl
push
xchg
es
and
inc
pusha
jle
mov
arpl
arpl
cmp
arpl
inc
movl
das
addr16
pop
fwait
sahf
sub
ss
adcb
into
das
popf
loopne
cmpsl
setno
or
shlb
pop
in
dec
movsl
sub
mov
push
dec
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
pminub
jl
and
int
push
outsl
cmpsb
out
shll
in
out
jge
adc
cmpsb
xor
jb
faddp
rcrb
dec
or
xor
jmp
enter
shrb
sbb
xor
in
xor
imul
mov
lods
pop
ret
fs
jo
lret
xor
ss
imul
pop
das
imul
mov
mov
pop
and
inc
sbb
movsl
lret
into
bound
sbb
mov
fs
hlt
vaddss
add
cwtl
into
cmpb
hlt
ret
pop
lds
cltd
test
jge
xchg
cli
jno
jb
add
test
rclb
pop
and
mov
jge
outsl
es
push
dec
cmpsb
or
jg
add
stos
shlb
lds
andl
out
inc
fwait
xor
popf
cmp
mov
decl
xchg
stos
push
gs
push
out
js
in
int3
lock
mov
mov
loopne
int3
stc
push
jg
xchg
mov
xlat
xlat
stos
aad
sub
fildll
inc
test
jns
cmp
xchg
jbe
je
sub
pop
bound
mov
loop
repnz
push
and
push
dec
fmul
xchg
mov
arpl
add
stc
lds
sbb
cmc
fucom
sti
fwait
xor
pop
int3
mov
inc
pusha
aam
sub
lock
fcomp
test
push
and
and
cwtl
test
inc
cmp
cmp
xlat
testb
add
lods
sbb
and
ss
fistps
ftst
mov
out
push
xchg
scas
xchg
dec
jo
sar
das
inc
mov
je
sahf
loop
jecxz
cmp
push
mov
xlat
mov
test
mov
push
test
sbb
add
xor
push
mov
xchg
or
push
mov
insb
popf
scas
jecxz
aaa
scas
and
xor
movsl
add
jne
inc
and
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
pop
fisubl
sbb
repnz
sub
das
ja
pop
pop
call
jle
pop
pop
sub
ret
scas
stos
adc
pop
cmpsb
in
cwtl
pop
or
test
pop
sub
mov
bound
xor
dec
jb
in
mov
aad
jno
popa
inc
push
sti
aas
loop
xor
jo
adcb
test
pop
sub
cltd
adc
sti
bound
and
test
xchg
shl
adc
xor
push
mov
jmp
jno
or
and
mov
or
lods
push
data16
sbb
push
shlb
int3
adc
shl
bound
mov
lcall
jb
inc
mov
push
cwtl
sarl
or
mov
fmuls
pop
dec
bound
pop
imul
jmp
add
mov
xor
notb
fstps
scas
push
sarb
shrl
imul
test
xor
mov
push
nop
push
push
or
stos
lret
cli
int3
sub
pop
pop
push
cmp
clc
cli
cmp
xchg
push
nop
hlt
dec
les
pop
lods
cmpsl
sbb
adc
in
stc
pop
ljmp
pop
aas
cmc
cmpb
fs
adc
jno
push
sbb
jb
xchg
push
mov
mov
push
test
cli
enter
mov
cmp
inc
pop
jne
popa
mov
jmp
cli
into
sbb
cmpsl
fildll
into
push
jbe
cltd
pop
inc
mov
loopne
fists
cltd
stos
leave
mov
ret
inc
mov
and
jo
adc
int3
jmp
xor
sub
int3
lods
inc
xor
lret
push
shrb
mov
shl
and
je
nop
int3
icebp
mov
dec
mov
out
pop
daa
es
cltd
push
shl
rorb
je
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
out
sbb
fmull
adc
pop
pop
add
mov
mov
idivl
mov
inc
mov
xor
dec
jecxz
push
fsts
aad
int3
clc
cmp
pop
ret
cld
out
push
fcom
pusha
push
call
push
sbb
xchg
lds
add
ror
je
push
fisubl
adc
shlb
idivl
lock
cs
fcoms
mov
mov
movsb
je
repz
xor
mov
or
inc
sbbl
subl
es
cmpsl
lahf
insl
cmp
inc
cmp
and
lcall
inc
aam
lock
nop
inc
and
xchg
and
xorl
idivb
and
xchg
data16
mov
mov
xor
cmpsl
cmc
xor
sub
push
sbb
xchg
daa
ja
frstor
cmp
jg
or
cmc
xor
pop
leave
mov
mov
cmp
ret
nop
ja
inc
push
pop
les
stos
push
sbb
adc
jg
and
sub
lcall
mov
lar
pop
out
dec
cmpsl
inc
mov
inc
gs
add
ds
xchg
loope
sub
sti
xchg
loopne
xchg
adc
add
or
inc
fnstsw
arpl
jge
mov
xchg
ja
jbe
in
in
adc
jp
stos
pop
incl
cld
push
fldl
fcompl
stc
stos
xor
in
out
pop
xchg
insb
mov
inc
in
and
andl
cmp
sub
ds
movsl
clc
mov
cmp
jl
cmp
inc
ret
test
dec
push
je
or
mov
xor
xchg
xchg
add
cmc
jns
mov
mov
mov
pop
xor
lods
mov
mov
repz
aaa
mov
hlt
jle
cld
movsl
jmp
in
add
std
push
xchg
and
repz
mov
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
fcomip
sub
popf
cli
adc
fmull
adc
sub
out
cmpb
adc
rcr
popf
loop
mov
addb
mov
add
popa
mov
sbb
fisubs
aam
fstl
lea
test
sbb
pop
jp
mov
cltd
addr16
ret
bound
dec
fsubrl
and
sahf
push
adc
test
sub
ret
dec
or
and
arpl
std
test
jl
aaa
js
jle
orb
cli
rol
fs
out
roll
pop
inc
loopne
sub
subb
rcrl
lods
mov
daa
repz
pop
popa
push
dec
les
int
insb
push
push
cmpsb
and
cwtl
jle
add
cmp
shrb
stos
bound
addr16
icebp
xchg
lods
cmp
pop
pop
mov
mov
lret
xchg
stos
sub
add
test
out
sbb
dec
mov
or
imul
mov
je
adc
shll
sbb
in
xorb
and
rcll
sbb
pop
add
cltd
pushl
pop
mov
mov
stos
sub
addr16
pop
popf
jg
cwtl
leave
xchg
jae
add
cltd
xchg
or
lods
movsl
dec
loop
ds
mov
call
dec
in
nop
fwait
loope
push
test
xchg
fs
jno
push
xor
dec
adc
pop
cld
inc
add
push
mov
xchg
lds
pushf
cmp
test
aam
sti
mov
sub
leave
and
in
insl
sub
iret
inc
mov
test
inc
insb
popa
cltd
push
ret
aas
and
movsl
mov
dec
pop
cli
data16
sbb
popf
lahf
dec
ss
rcl
test
xchg
pushf
sbbl
xchg
jl
xchg
pop
fists
sub
imulb
clc
sbb
sbb
outsl
push
pop
daa
out
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
imul
stos
notb
adc
movlps
ja
jo
inc
xchg
jmp
add
dec
arpl
dec
xchg
inc
cmpsb
mov
xchg
popa
fcoml
ficompl
ret
movsb
push
into
movsl
add
outsl
xchg
and
cmp
gs
out
or
push
mov
add
addr16
popa
add
inc
in
push
outsb
push
rcrl
jne
out
push
mov
stc
aas
jnp
sbb
or
cltd
lahf
call
sub
stos
pusha
push
pushf
js
lods
fstps
push
push
push
aas
jmp
mov
mov
idivb
mov
and
out
jb
push
mov
inc
jne
add
aaa
adc
mov
pusha
pop
scas
mov
jns
mov
mov
sbb
or
hlt
xlat
adc
das
into
cwtl
sub
or
aas
pop
xor
imul
loopne
scas
dec
cmp
sub
cmpsl
xchg
push
mov
jle
out
mov
mov
test
xorl
mov
inc
push
mov
nop
out
out
add
je
fwait
mov
addr16
jge
loope
mov
out
xchg
cmp
aas
lods
xchg
es
out
cli
test
or
dec
xchg
cmp
hlt
testb
lds
sahf
ss
les
cmp
xor
pushf
in
cmp
ficomps
pushf
mov
push
mov
mov
adc
and
push
shl
scas
jnp
jb
mov
mov
insb
aas
jge
ss
insl
and
mov
rcll
jne
loop
faddp
in
push
push
xchg
push
gs
add
out
fldenv
inc
jno
mov
jle
mov
and
mov
mov
notb
aas
mov
cwtl
rcll
dec
test
xchg
mov
mov
je
sti
dec
or
or
mov
inc
in
push
inc
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
mov
add
fisubrs
mov
in
outsb
cld
enter
scas
push
dec
addr16
je
out
scas
ss
in
jmp
pop
lock
scas
lret
lret
stos
inc
and
ret
add
add
xchg
pop
out
out
sub
mov
daa
or
push
adc
or
inc
in
push
jmp
xchg
adc
sbb
dec
mov
jecxz
sbb
fcmove
loope
mov
add
push
cmp
mov
insl
idivb
fstpl
stc
clc
mov
sarb
cmc
mov
imul
push
inc
repz
jne
rcr
push
xchg
push
dec
lahf
imul
aad
sbb
insl
ror
xor
mov
push
jg
in
aam
cmpsl
inc
cmp
orb
sub
adc
stc
lahf
pop
xor
insb
pop
sub
iret
es
pop
in
ret
mov
xor
and
xchg
jbe
xchg
insb
cmc
fnstcw
mov
pusha
mov
hlt
lods
roll
inc
cmp
mov
add
fwait
dec
adc
out
push
lcall
mov
xchg
push
fadds
inc
ja
in
sub
mov
lret
jne
xor
jg
xchg
mov
test
pushf
jae
pop
cli
xchg
add
cwtl
out
jne
mov
clc
fildl
xchg
ja
sarb
push
cmpsl
popa
jecxz
mov
pusha
and
mov
jne
sbb
enter
push
out
int3
imul
push
push
ret
test
dec
ss
bound
leave
mov
ss
cmpsl
ljmp
adc
adcb
fidivl
dec
sahf
in
sub
imul
pusha
in
ret
ds
fcmovnbe
xchg
dec
ja
xchg
xchg
scas
in
bound
or
lret
add
bound
pusha
push
and
xchg
in
lcall
dec
popf
stos
mov
mov
pop
mov
and
loopne
fdivrl
lods
jg
mov
inc
in
insl
es
std
insl
negb
es
mov
mov
mov
add
scas
call
pop
pop
cmp
jecxz
fnstcw
out
push
cmp
cmc
add
and
fldz
lea
lock
scas
inc
jnp
daa
mov
sub
dec
aaa
test
jne
xchg
lods
sahf
xchg
push
ret
or
pop
shrl
sub
lds
in
stc
xor
loope
jmp
rclb
mov
into
sub
cmpl
dec
rclb
sub
pusha
mul
mov
fwait
lret
mov
dec
or
jl
test
cld
lret
add
jmp
or
repnz
shlb
notl
dec
rclb
ja
int3
movsb
sbb
into
clc
mov
dec
ds
fwait
cli
rcrl
jo
xor
gs
sbb
inc
outsb
cmp
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
pop
mov
adc
adc
adc
xorb
jne
jp
pop
pop
pop
bound
daa
stos
into
add
sub
pop
fs
jb
fldenv
mov
xchg
inc
push
in
lret
xor
scas
sti
mov
adc
mov
lcall
sbbl
lods
dec
pop
xchg
push
loop
jns
ljmp
call
jnp
inc
pop
add
mov
dec
inc
sbb
aaa
test
stos
repz
data16
popa
jbe
and
sub
cmp
xlat
aaa
mov
mov
sbb
jg
fistl
fiaddl
mov
cld
sbb
out
out
sub
and
cmp
rclb
aad
jmp
push
mov
mov
popa
lds
std
in
lods
mov
sbb
or
xchg
pop
xchg
mov
clc
xchg
mov
pushf
mov
or
cltd
pop
xchg
xor
fstpt
inc
pushf
imul
push
clc
pushf
cmpsb
push
and
fsts
xchg
jmp
in
adc
das
inc
push
sahf
dec
inc
popa
xor
fcompl
rcl
es
xchg
cmpsl
push
and
in
pop
push
sbb
insl
pusha
xor
cmp
xor
mov
paddq
xorb
xchg
frstor
mov
mov
orb
mov
adc
sahf
test
pop
push
xchg
lea
add
push
push
dec
mov
push
cwtl
mov
sub
mov
add
dec
loope
addr16
mov
sub
push
xchg
pop
orb
dec
pop
es
sub
xchg
bound
cmpsl
mov
pop
mov
adc
scas
push
movsb
xor
xlat
nop
xchg
cmp
jge
je
and
testl
mov
aaa
push
jb
repnz
repz
es
cmpsl
les
inc
insb
fisttpll
cmp
enter
jl
int3
xchg
mov
jmp
xchg
jne
aad
mov
nop
mov
adc
mov
pop
js
jae
sbb
rcll
lahf
and
xlat
orb
jmp
leave
cmpb
mov
rcr
test
addr16
cmp
insb
jbe
mov
xor
inc
add
outsl
add
loopne
sub
and
movsl
sbb
cs
or
and
flds
xchg
mov
pop
aas
data16
jmp
dec
aaa
mov
mov
push
enter
out
or
scas
mov
test
or
xorl
inc
mov
jle
jp
jecxz
bound
enter
incl
std
lret
xchg
cwtl
inc
lock
hlt
push
xchg
stos
xor
sbb
xchg
adc
dec
ja
mov
add
rorl
dec
cli
ljmp
cmp
vmovapd
cmp
in
test
std
cmp
sbb
fisttpl
fisttpll
sarl
punpckhdq
gs
repnz
xchg
xor
dec
das
cld
dec
out
out
cltd
push
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
xchg
mov
adc
adc
add
xor
mov
mov
adc
mov
stos
rclb
jae
pop
mov
call
fs
mov
add
cmc
idivl
bound
insb
jb
inc
lods
xchg
nop
xchg
adc
inc
roll
ljmp
fists
fwait
xchg
and
xor
lea
mov
in
jbe
push
mov
push
and
fwait
add
cmp
adc
cmp
mov
sub
or
fnstsw
imul
xchg
xor
in
aad
std
ret
popa
push
jle
das
mov
add
jnp
rol
dec
ret
lods
and
lret
and
stos
rcll
fists
test
aam
fcmovne
ret
adc
scas
mov
ds
mov
and
xchg
push
xlat
and
add
mov
jle
jb
insb
insl
pop
pop
cmc
rcll
gs
xchg
hlt
mov
dec
pop
cmc
mov
jmp
fsub
pop
dec
mov
ds
xor
and
js
popf
sub
rorl
lods
xor
xchg
bound
pop
negb
aam
mov
jge
and
das
cmp
je
mov
jne
adc
jge
or
scas
mov
cltd
into
pop
mov
sub
cmp
int
pop
dec
testl
jno
add
xchg
and
mov
shlb
mov
fisubs
push
cmp
jbe
jno
sti
mov
int3
jns
rclb
or
out
icebp
xor
mov
mov
pop
fistpll
iret
pop
pop
mov
sbb
aam
je
xchg
data16
sub
mov
pop
movsl
mov
subl
mov
cld
xlat
xchg
scas
cmp
negl
lahf
sub
xor
pop
pop
cmp
sub
test
mov
jp
dec
and
gs
aas
test
xchg
int
mov
int3
shlb
mov
aas
add
fsubr
or
push
sbb
mov
in
cltd
sbb
ja
inc
jo
insb
dec
scas
insl
mov
lret
sub
jge
cmp
movsl
sti
mov
call
xchg
leave
loopne
loopne
sbb
inc
lods
or
push
or
jns
out
outsl
sub
mov
push
stc
xchg
scas
dec
sbb
sub
adc
in
pop
add
sti
push
gs
xlat
std
faddl
ss
dec
and
or
loopne
testb
xchg
fidivl
cmpsb
test
mov
and
xchg
inc
jmp
pushf
stos
daa
dec
stc
xor
pop
fdivrp
iret
jge
sti
fadd
and
push
lretw
ja
daa
shl
ds
test
bound
cmp
sti
jg
pop
jmp
loopne
inc
js
push
sbb
adc
bswap
popa
sbbb
xorb
mov
js
dec
sub
out
add
popa
int
xchg
xchg
adc
inc
mov
into
jle
aam
mov
pop
fldl
outsb
nop
xorb
pop
push
jg
cmp
mov
popf
adc
mov
out
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
bound
adc
adc
mov
push
mov
and
popf
popf
jecxz
inc
sub
sub
cmp
xor
jge
nop
outsb
repnz
bound
fldenv
add
aaa
push
cmp
sub
jne
push
adc
mov
and
push
pushf
lahf
popa
sbb
popa
idivl
inc
jns
hlt
push
pop
dec
sub
xlat
and
dec
stc
pushf
jbe
aam
xchg
jo
cltd
cmpsl
mov
jnp
mov
ret
test
mov
mov
pop
int
and
pop
or
push
fistpll
insl
inc
sbb
cmp
lret
jmp
cmp
inc
sbb
jge
in
add
mov
pop
sbb
mov
and
loopne
or
out
outsl
aad
ret
fldcw
push
in
js
pop
xchg
jne
jecxz
and
test
push
and
insb
aaa
stos
sub
pop
mov
push
hlt
xchg
movsl
repz
out
pop
daa
xchg
jb
and
mov
xchg
jge
cmpsl
sbb
sbb
sub
inc
inc
pop
lods
arpl
loopne
pushf
pop
inc
outsb
ss
sub
jmp
mov
xchg
xchg
sub
and
mov
jle
mov
mov
aam
fdivrs
mov
push
cmp
fcmove
jo
lock
decl
in
sub
lock
rclb
mov
nop
enter
stos
adc
lahf
shll
mov
imul
sbb
pop
jne
xchg
cmpsb
fwait
mov
mov
repz
sbb
inc
xchg
pop
call
xor
imul
ljmp
mov
jp
stos
xchg
test
lcall
xchg
push
xchg
jb
mov
or
imull
xchg
sub
ret
push
ret
in
sub
jns
mov
or
test
notb
xor
pop
testl
xlat
mov
mov
push
jns
jb
mov
out
add
xchg
in
xchg
bound
pusha
out
mov
mov
mov
outsb
and
push
stos
xchg
bound
sahf
insl
jmp
add
pop
sub
adc
mov
mov
cltd
movsl
fisubrs
xchg
in
push
out
stc
push
cli
cmpsl
cwtl
bound
idiv
adc
cmp
xor
mov
xchg
negb
pop
mov
mov
addr16
cli
and
ds
shr
xchg
sbb
cltd
or
ds
sub
je
orb
inc
pop
lock
dec
sbb
add
adc
je
rorl
mov
js
jp
cmp
sti
jmp
arpl
jnp
xchg
mull
lea
push
sub
pop
cmc
cmp
jno
outsb
or
mov
mov
test
popa
fstpl
test
imul
cmp
pop
ds
jne
jg
jae
jecxz
xchg
lods
fldt
or
cld
xlat
mov
or
jecxz
sti
in
rol
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
rcll
mov
jo
adc
mov
add
shlb
pusha
test
test
xor
sbb
loope
movsl
jl
cmp
push
mov
and
ret
mov
outsl
pushf
int3
pusha
ret
pop
shrb
dec
repnz
sbb
mov
int
orl
mov
mov
cmp
test
jmp
sbb
loop
andl
xchg
xlat
push
ret
loopne
cs
imul
test
call
movsl
mov
inc
clc
mov
xor
pop
test
popa
inc
cld
push
push
cmpsl
dec
push
fwait
ljmp
cmpsl
add
dec
xchg
add
cmpsl
mov
or
arpl
stos
cwtl
dec
pusha
arpl
fistps
and
dec
mov
andb
test
fidivrl
lods
fnstsw
in
mov
hlt
enter
scas
scas
es
imul
sub
ss
mov
xor
and
int
dec
xchg
adc
and
fldl
pushf
lds
scas
dec
outsl
mov
imul
or
enter
test
jmp
mov
lods
xorl
shl
in
adc
stc
xchg
pop
xchg
pop
fs
rcrl
aas
xchg
aad
stos
ret
lea
js
arpl
popa
mov
rcr
jbe
mov
popf
mulb
out
dec
mov
cmpsb
fstl
orb
outsl
xor
fbstp
int3
fwait
imul
cmp
inc
push
shl
sub
inc
mov
mov
cmp
and
shrl
int
sbb
add
sbb
xor
lret
xor
xchg
jl
or
cmp
and
jl
dec
jbe
ja
pop
test
call
xchg
popa
push
popa
push
cmpsb
push
mov
lock
add
aas
mov
add
adc
mov
xchg
xchg
pop
sub
je
sbb
insb
mov
jb
orb
imul
test
sub
mov
and
mov
sub
add
jbe
push
sti
ds
dec
shlb
jns
pushf
addr16
rcrb
mov
jne
repnz
sti
imul
adc
imul
adc
push
mov
xor
sarl
adc
fbstp
loopne
in
sbb
out
and
mov
fimuls
jo
lods
add
dec
xchg
test
inc
loop
sub
jb
repz
mov
inc
movb
jmp
mov
push
add
add
lahf
mov
jnp
xchg
adc
repnz
mov
sbb
and
pop
xchg
out
cmp
mov
cld
pop
or
std
scas
aam
out
push
int
aam
sbb
subl
push
pop
add
sub
sti
xorb
rcll
pushf
inc
pop
das
dec
add
jg
jbe
pop
pop
pushf
mov
test
lret
rcll
jecxz
pop
cmp
cmp
adc
je
pop
cwtl
outsl
sbb
jno
ss
mov
fmuls
leave
incl
decl
mov
or
jmp
xchg
decl
cmp
adc
stos
lock
lods
insb
cli
lret
adc
jo
adc
imul
xchg
clc
icebp
lcall
test
stc
pop
or
sbb
rorb
adc
js
das
push
aas
mov
cld
inc
push
imul
jbe
pop
cmpb
mov
adc
mov
pop
push
jmp
cmpsl
dec
or
lahf
jg
inc
sbbl
fidivrs
sbbb
rorl
sub
cmpsb
fdivr
ljmp
push
push
dec
jbe
add
stc
jmp
aaa
lret
xlat
faddl
pop
cld
pushf
sbb
lods
mov
test
shr
fsubrs
arpl
fistl
xchg
cld
insl
fsubl
xor
popf
jmp
and
adc
por
cmp
pop
xchg
bnd
or
mov
inc
push
xor
pop
dec
ja
imul
popf
enter
inc
cmp
in
sti
or
mov
sbb
mov
cmp
imulb
cmp
dec
mov
call
and
imul
adc
pop
mov
lods
sbb
dec
int3
mov
pop
in
outsl
cltd
dec
inc
sti
xor
push
jbe
ret
xor
call
pop
jb
daa
jnp
repz
test
das
out
stos
dec
sub
xchg
sbb
sub
mov
sub
pop
fstl
pushf
inc
xchg
addr16
aaa
stos
add
daa
dec
cmp
jg
lret
mov
sahf
rorb
jl
js
pop
aas
ds
test
movsl
mov
cld
in
adc
mov
leave
xor
cmp
jnp
inc
clc
fnstsw
out
daa
pop
cmp
add
pusha
and
push
orb
ss
push
xchg
pop
sbb
sub
or
xor
outsb
insb
out
icebp
addb
mov
cld
cmpb
push
andb
pop
gs
mov
ss
lcall
mov
into
test
mov
sar
push
pop
jl
sbb
cmp
push
out
stos
jo
popa
je
out
mov
sbb
rcl
fistps
lea
mov
repnz
xchg
out
mov
and
inc
aad
outsl
insl
pusha
aam
insl
push
aaa
sub
xchg
das
or
out
sub
mov
mov
iret
jmp
test
cmpsl
jge
and
ss
or
pusha
daa
cmpsb
sub
mov
cmp
scas
outsl
sbb
adc
and
iret
dec
inc
and
lcall
std
nop
std
repnz
xlat
mov
loop
pop
inc
fs
cs
test
aaa
cmp
call
xchg
jae
inc
push
xchg
xlat
adc
out
xlat
jp
les
adc
ja
dec
loopne
pop
mov
xchg
data16
lock
pushf
outsl
rorb
inc
pop
nop
sub
repnz
mov
cs
fisubrs
pop
lock
pushf
andl
mov
inc
fisttps
in
xchg
cmpb
int3
loope
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
subb
jae
dec
dec
lea
idivb
lods
sahf
dec
das
enter
jae
roll
jmp
repnz
adc
or
mov
mov
and
add
rcr
sbb
ret
mov
sbb
pop
dec
cmp
push
mov
cmp
ret
jge
sub
adc
filds
mov
jecxz
gs
and
push
scas
mov
data16
call
lret
stos
filds
ja
lods
xor
lods
lds
mov
pop
orl
adc
pop
push
out
and
cld
pop
fdiv
clc
inc
pop
pop
popf
daa
mov
mov
lods
dec
and
fwait
add
dec
pushf
sbb
xor
ja
mov
test
icebp
push
out
mov
movsl
mov
inc
fisttps
ret
push
mov
push
and
mov
mov
lods
mov
dec
test
cmp
xchg
and
fcmovu
mov
stos
imull
pop
jle
pushl
lcall
pop
into
and
cmp
inc
mov
roll
and
stos
setg
add
add
sub
in
xchg
outsl
mov
dec
dec
sbb
pop
fcmovnu
lea
mov
ds
sbb
cmp
push
fs
pop
adcl
and
and
cltd
sub
ret
nop
arpl
ficomps
sbb
mov
push
dec
aas
in
xor
mov
bound
push
insb
push
dec
int3
pop
cwtl
jl
loopne
cli
cltd
sarb
ficompl
push
lock
mov
mov
cli
ret
adc
or
movsl
mov
sub
rcrl
incl
sub
das
mov
jne
test
push
xchg
cmp
arpl
xor
cld
mov
sahf
jb
pop
push
neg
sbb
add
xorb
or
sbb
xchg
enter
and
repz
mov
pushf
insl
scas
nop
push
xchg
mov
xchg
xor
cmp
mov
inc
inc
iret
fstpl
or
sub
cmpsb
xor
imul
int
inc
dec
lds
rcr
mov
cs
adc
pop
or
mov
add
jno
aas
jae
stc
out
push
sbb
mov
test
jb
stos
cmc
jge
sub
insl
mov
add
mov
inc
pop
popf
popa
fadds
sbb
mov
push
adc
lds
or
scas
orl
adc
and
out
test
inc
int3
inc
ss
push
xor
and
sbb
adc
jo
push
mov
sub
lea
xor
and
rep
int
mov
xor
roll
fs
call
jns
stc
orb
popf
repnz
out
sbb
jb
sbb
mov
push
xor
xor
xorl
pop
pop
repz
pop
pop
sarb
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
ret
enter
rcll
jo
adc
cwtl
or
ljmp
and
sub
es
adc
push
cmp
inc
push
lods
or
push
jle
in
mov
insb
outsl
test
cmpsl
fnstenv
iret
outsb
adc
jg
sbb
or
mov
inc
jne
xchg
pop
xchg
popf
lock
icebp
cli
cmp
sti
or
xchg
insb
push
sbb
roll
lcall
xor
movsl
cwtl
shr
out
test
dec
test
in
addl
adc
pop
or
jae
imul
ret
pop
lock
add
cmp
divb
nop
adc
inc
cmp
inc
shrl
xor
mulb
fistpl
addr16
test
iret
or
sub
jl
sbb
or
pop
imul
nop
cltd
add
imul
in
cmp
lock
dec
cmp
and
jns
in
inc
aaa
mov
mul
ja
lcall
mov
test
mov
xchg
subb
cld
push
mov
mov
xchg
out
xor
addr16
or
mov
dec
cmp
psubusb
andl
jnp
inc
adc
fucomip
cwtl
push
sahf
out
lea
aam
or
jle
outsb
fdivl
insb
or
add
cmpsb
jmp
and
add
mov
stos
inc
cld
mov
cmp
inc
frstor
leave
mov
sub
into
inc
and
in
ret
lock
fmull
je
or
and
int3
adc
jbe
sub
push
enter
int3
fisttps
loop
inc
negl
in
mov
push
inc
xor
movsl
or
pop
xor
cmp
dec
lds
repz
push
adcl
mov
push
cmp
clc
aaa
imul
dec
and
sbbb
and
roll
divl
pop
ret
inc
test
adc
mov
ficoms
mov
jl
fcom
loop
mov
xchg
dec
addb
movl
push
jne
adc
lahf
push
mulb
or
int
je
xor
test
xor
out
add
fs
dec
loope
sub
mov
xchg
cmp
dec
add
fcompl
out
or
xchg
push
repz
in
mov
adc
push
mov
dec
lea
outsl
fisubs
ss
add
in
inc
add
xchg
cmp
out
xor
pop
scas
push
adc
scas
cmc
and
mov
mov
lock
mov
adc
xchg
push
rcr
fidivrs
outsl
mov
cmc
arpl
cwtl
enter
aaa
sti
movsb
and
push
stos
and
mov
popa
lret
pop
pop
lahf
cmpsb
out
mov
inc
add
daa
pop
sbb
push
pop
std
jbe
lret
cs
push
mov
mov
lcall
mov
movsl
xchg
xchg
cmpsl
add
push
pop
jmp
push
enter
lock
push
fistps
ss
inc
pop
xchg
mov
cmp
push
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
cmp
es
mov
adc
adc
mov
jmp
ljmp
cmpl
cld
sbb
loope
flds
dec
cmpsb
mov
sbb
mov
loopne
sbb
divl
mov
push
mov
mov
jo
mov
popa
mov
jne
lods
add
mov
call
adc
ja
call
orl
test
push
fs
ds
cwtl
sbb
or
fs
in
sub
ss
push
outsl
xchg
pop
dec
fnstsw
ret
movsb
divb
jl,pn
in
test
pop
add
pop
les
fmuls
faddl
stos
jae
jnp
mov
push
adc
addl
and
push
mov
out
shrl
nop
and
divl
cmp
push
fstpl
xchg
sbb
mov
bound
add
das
hlt
cmp
jo
inc
push
loop
sub
pushf
mov
xor
push
inc
sub
ret
mov
cmp
fisttpll
test
cmp
es
or
pop
sbb
enter
sub
outsl
pusha
fidivrl
mov
sbb
inc
insb
lock
mov
cld
jmp
imul
rcrl
shll
xchg
fwait
ss
push
push
sub
jle
in
sarl
xor
fstpt
in
jecxz
sti
aam
xor
push
cli
adc
mov
and
push
inc
sti
push
or
repz
jae
leave
das
subl
dec
ror
fs
mov
mov
fimuls
jae
pushf
adc
mov
or
pop
pushf
dec
ljmp
fisubs
notl
push
jne
xor
cmc
hlt
loopne
iret
sti
push
test
sbb
ret
sbb
and
ffree
adc
xlat
stc
jb
loop
call
movsb
arpl
or
pop
push
aam
cmpl
ret
sbb
sahf
adc
ds
mov
fwait
and
pop
or
out
fnstcw
int3
test
pop
pusha
fwait
loop
pop
icebp
sbb
xchg
mov
or
pop
mov
inc
decl
popf
push
imull
orl
test
mov
add
cmp
mov
loop
sub
jl
dec
cmpsb
add
cld
insl
sahf
leave
insb
in
sbb
insl
fwait
or
inc
cmp
jge
jo
sbb
xor
xchg
push
adc
cli
sub
add
jne
xchg
out
sub
inc
loopne
or
mov
je
xchg
sbb
jbe
popa
xor
stos
clc
out
sub
cli
or
nop
aad
xor
movsl
fdivs
dec
fmuls
cmp
ds
sbb
and
or
mov
jne
pusha
add
test
inc
dec
pop
push
or
andb
sub
xor
mov
xchg
fmul
es
xchg
pop
iret
daa
dec
sbb
xor
pop
test
push
add
les
push
mov
insl
pop
gs
adc
dec
push
clc
jae
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
and
cmp
xchg
dec
ss
add
pushw
mov
repnz
add
pop
fwait
dec
fdivl
outsl
int
movsb
jbe
push
ds
loopne
push
outsl
and
sbb
and
add
push
cld
pop
sbb
loop
pop
movsl
lahf
lcall
dec
pop
sahf
adc
pop
adcl
pushf
mov
add
push
or
out
in
pop
mov
rcrb
mov
mov
es
pop
sarb
adc
mov
jno
fucom
iret
popf
shlb
and
lahf
cmp
scas
or
sub
jae
test
sub
jno
sbb
xchg
lea
jo
imulb
and
push
pop
loopne
jmp
inc
pop
adc
mov
add
icebp
cmp
xchg
addl
movsl
loope
jecxz
and
gs
mov
xchg
das
sub
jnp
out
rcr
pop
repnz
dec
sub
jge
jecxz
mov
and
cmc
fs
push
jne
movsb
iret
mov
lods
adc
jne
add
lds
pushf
das
outsb
sub
jbe
lock
sbb
in
inc
iret
xlat
movsl
adc
mov
testb
mov
icebp
scas
fucomi
adc
jle
jmp
pop
mov
cmp
xchg
cmp
imul
xchg
xlat
lahf
movsb
js
adc
pop
jl
and
jg
dec
jmp
pop
cmp
shl
lea
or
adcl
repz
push
ljmp
jbe
add
ljmp
pushf
addr16
divl
xchg
dec
enter
out
jae
dec
lock
pop
xchg
shll
xor
dec
jle
test
mov
adc
jbe
les
dec
pop
push
pop
lret
icebp
cwtl
std
jo
dec
mov
das
stos
jne
adc
lahf
pop
lock
ss
jl
vpaddsw
loop
cmp
iret
pop
mov
sub
cmp
sbbl
loopne
add
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
cmp
stos
adc
stos
movlps
xor
sub
adc
or
push
aad
and
xchg
pusha
and
repz
inc
mov
test
pop
and
ret
out
pop
push
add
shl
je
mov
lret
inc
fsts
or
cmp
push
sbb
aad
test
stc
sbb
or
test
dec
adc
or
sub
repz
cwtl
and
add
scas
in
negl
mov
arpl
push
int
and
shl
inc
scas
push
into
scas
push
cli
std
lds
xchg
jl
jle
popa
fstps
jg
lcall
stc
out
testb
in
inc
and
xchg
test
lea
addr16
xor
shrl
jl
push
jno
mov
dec
arpl
sarl
pusha
jmp
ret
dec
scas
cli
outsl
jge
jno
les
enter
sub
roll
notb
ljmp
mov
aad
xlat
pop
cld
outsl
mov
std
mov
jo
jp
or
jp
mov
mov
scas
add
in
jo
pop
fstpt
push
stos
mov
pop
imul
shl
adc
lret
and
sahf
ja
push
sbb
enter
out
push
sahf
negb
push
jp
push
in
sbb
xchg
movsb
lret
push
je
rcrl
xchg
mov
jmp
add
pop
and
push
jecxz
lcall
mov
out
push
inc
add
fisttps
adc
ljmp
inc
sti
add
sub
push
loope
dec
jne
inc
and
adc
lret
sbb
sbbb
call
fisttpll
fwait
mov
scas
or
adc
mov
add
dec
add
shll
pop
lds
mov
sbb
bound
aam
and
sbb
fimull
dec
mov
add
cmpsb
ja
xorb
repz
inc
loope
lock
fisttpl
aad
inc
cmp
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
fwait
dec
mov
stos
movlps
pop
cmp
out
jg
push
adc
pop
lea
popf
pop
addr16
lods
data16
js
in
lahf
inc
mov
pop
pop
cmc
mov
cmp
outsb
test
movsb
inc
int3
and
xor
jp
add
mov
xchg
faddl
mov
cwtl
sbb
and
mov
and
sbb
test
sbb
out
fstl
inc
fwait
mov
add
mov
lret
sub
mov
mov
mov
mov
jbe
xor
and
jp
pop
adc
jno
xor
push
pop
bnd
or
pop
dec
sub
inc
mov
pusha
psllq
iret
insb
jno
aad
or
or
out
cwtl
stos
xchg
rol
pushf
stos
adc
push
adc
jl
cmp
sbb
add
outsb
or
insb
mov
jmp
ljmp
adc
andb
gs
mov
add
mov
fbld
dec
mov
popa
mov
loopne
cmp
cmp
xchg
add
sbb
sub
inc
xchg
xor
call
int3
push
add
adc
mov
push
out
adc
pop
cmp
loopne
xor
aas
mov
and
inc
insl
mov
cmp
loope
data16
cmp
aaa
mov
fisttps
lea
test
cmpsl
mov
push
gs
mov
cld
pusha
inc
aam
dec
ljmp
dec
adc
ret
gs
inc
repz
cmpsb
mov
or
mov
in
cli
and
mov
int
push
mov
mov
js
and
jge
sbb
ficoms
in
je
mov
cmp
sbb
fiaddl
jecxz
push
pop
xchg
and
ret
cmp
mov
ret
mov
cwtl
and
scas
mov
loope
inc
mov
lea
mov
mov
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
adc
mov
sbb
adc
stos
movlps
lock
push
mov
jmp
popl
mov
jb
xchg
xor
or
mov
les
faddl
int
push
int
mov
pusha
rcrb
jo
bnd
mov
jne
xchg
add
pop
aam
dec
xor
jno
mov
loope
push
inc
imull
in
inc
dec
cmp
xchg
cwtl
xchg
pop
dec
and
mov
int
inc
scas
subl
dec
adc
push
leave
and
outsl
xchg
ljmp
fbld
and
push
pop
add
pop
jne,pt
aad
jle
lret
and
xchg
adc
in
xchg
scas
insl
rclb
fnsave
jae
mov
adc
lods
mov
repnz
enter
xor
cltd
das
jo
loopne
icebp
lods
lcall
in
mov
add
test
and
and
aam
inc
mov
and
sbb
loope
shll
adc
push
mov
cwtl
ret
push
jle
imul
test
pop
cmpsb
and
enter
or
outsl
add
pop
popf
aam
lret
jo
or
mov
paddb
loopne
push
stos
cmp
sarl
je
test
data16
pop
xlat
inc
subb
popf
inc
mov
cld
iret
and
faddp
jb
movsb
hlt
imul
ret
imul
mov
and
les
jge
aas
adc
imulb
leave
add
addl
xor
ljmp
loop
dec
cwtl
add
pop
xchg
imul
sub
dec
fldenv
iret
or
push
xchg
popf
or
out
scas
or
mov
andb
mov
mov
inc
cmp
test
mov
add
push
out
cmpsb
mov
aad
test
clc
stos
std
test
addr16
or
mov
pop
xchg
rcll
mov
imul
cmp
sbb
lahf
jae
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
scas
cmpb
movlps
andb
loopne
jl
mov
push
arpl
cmpsb
and
in
cli
xchg
lea
or
lods
das
movsb
arpl
pop
into
push
adc
in
or
mov
jnp
imul
push
inc
gs
aas
stos
gs
stos
jp
mov
sub
xor
pop
mov
mov
xchg
mov
popa
insl
xlat
inc
into
cmc
xchg
mov
es
mov
cmpsb
loope
and
push
cs
jbe
insb
shrl
aad
adc
mov
out
inc
scas
jle
cli
inc
mov
ds
shll
xchg
insl
mov
rolb
arpl
push
sbb
fs
mov
mov
mov
lods
in
les
pop
fbld
xor
mov
jle
jno
and
cld
daa
cmp
insl
shrl
sbbl
and
lods
out
inc
jge
mov
fisttpl
and
out
jae
add
testl
inc
and
fdivrl
sub
imul
insb
fs
mov
mov
lret
bound
inc
sbb
adc
sub
cmp
dec
inc
notb
ja
jne
pop
jg
sub
jno
inc
mov
jnp
jo
lock
mov
in
dec
jmp
push
addr16
stos
cmpsb
push
lea
mov
inc
sub
sub
mov
ds
call
push
jp
out
xchg
es
xor
divb
addr16
pop
jns
sarl
in
sbb
jmp
xor
mov
mov
cli
iret
adc
int3
stos
sbb
inc
mov
jmp
movsb
repnz
or
ja
arpl
cmp
roll
xchg
dec
insl
adc
out
fsubp
shrl
rcll
mov
jbe
cld
dec
jge
sub
das
add
dec
lcall
aaa
and
add
lods
or
and
mov
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
xor
jp
into
pop
fcomi
sbb
repz
fldenv
stos
cmpsb
fdivs
dec
fldcw
test
in
add
push
stos
xchg
pop
ja
cmp
les
rclb
xor
das
icebp
inc
pop
mov
fs
rcrl
jo
mov
pop
test
fs
cmp
mov
test
icebp
mov
mov
ljmp
xchg
movsl
insl
js
cltd
sbb
lret
into
pop
push
jl
cmp
mov
mov
dec
daa
movsl
mov
pop
fwait
mov
ss
mov
xor
hlt
mov
inc
cs
stos
fnstsw
add
lcall
sub
sahf
jae
mov
mul
movq
popl
repz
out
jp
mov
pop
cmp
les
in
pop
push
jns
jmp
leave
fbstp
sub
add
mov
mov
add
mov
inc
push
out
add
adc
xor
outsb
pop
adc
jle
push
ret
test
iret
test
adc
mov
inc
xor
xchg
call
ja
cmpsb
xchg
jecxz
sbb
ret
add
in
jae
pop
into
push
mov
xchg
js
jle
je
in
jnp
cmp
and
sbb
shlb
negl
jae
cmp
sbb
inc
movsl
test
in
xchg
cmp
lret
mov
pop
repnz
loopne
or
xor
dec
or
ret
stos
or
and
adc
mov
out
pop
enter
aas
out
cmp
dec
jnp
cmpl
pop
or
ret
sub
xorl
pop
aas
lahf
jge
or
cmp
dec
inc
ss
xchg
jp
sbb
xchg
imul
inc
repz
dec
mov
mov
dec
in
add
add
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
xlat
adc
in
and
pusha
ret
mov
shlb
das
dec
cwtl
imul
inc
ficoml
inc
pusha
jge
pop
add
cmp
sbb
cs
out
inc
outsl
dec
stos
mov
je
mov
mov
vmovsd
mov
out
out
rcr
push
aad
mov
cwtl
xor
xchg
pushf
xchg
and
cmp
xor
cwtl
xchg
dec
jnp
shr
pop
lods
xor
stc
and
pop
mov
pop
jno
fisubl
sub
lret
sahf
inc
jbe
dec
dec
and
shrl
cmp
movsl
jne
mov
test
add
cltd
js
stos
jl
popa
add
aaa
mov
sbbl
filds
loop
into
xchg
push
sbb
test
xor
mov
enter
sbb
mov
sub
mov
ja
inc
lods
les
and
jnp
divb
dec
push
and
jl
jae
in
sbb
xchg
subl
pusha
jge
dec
jp
fimuls
gs
mov
jne
sub
inc
mov
gs
jne
hlt
xor
xor
adc
insl
repz
adc
adc
out
imul
cltd
test
popa
push
add
cmpsb
icebp
push
xchg
and
jle
sbb
lea
pop
scas
push
jb
addr16
fs
cld
imul
push
fisttpll
dec
and
push
cmc
cltd
push
xor
es
jnp
movsl
stc
mov
test
rolb
fimull
or
jbe
sbb
mov
mov
pushf
sub
fcmovnu
addl
mov
xchg
sub
mov
and
mov
shll
rcrb
fdivs
dec
cltd
add
mov
pop
add
inc
mov
subb
jae
andb
sbb
mov
vpmacsswd
fsub
dec
push
pop
adc
mov
das
ss
sub
ss
scas
dec
pop
xlat
fnstenv
dec
div
decb
mov
popf
push
imul
loopne
nop
dec
movsb
in
xor
icebp
add
call
or
js
test
sahf
cmp
fstps
sarl
pop
push
sbb
inc
movsl
pushf
pop
out
inc
add
xchg
cwtl
mov
sub
mov
xchg
and
mov
in
mov
add
inc
arpl
fisttpl
test
out
sbb
xor
pop
fdivrs
mov
mov
stc
add
mov
dec
inc
add
mov
and
test
cmc
scas
jbe
push
jle
outsl
xchg
pop
subb
sarb
sarb
sbb
shl
inc
mov
inc
loope
dec
pop
mov
or
lret
mov
aas
adc
repz
mov
jg
icebp
xchg
es
sbbb
addr16
push
sub
cli
xor
jae
xchg
xchg
sub
pop
dec
push
pop
lret
jae
clc
sahf
dec
shl
push
pushf
test
fnstenv
sti
mov
bound
shlb
xchg
xchg
faddl
jnp
push
and
jge
inc
stc
bound
in
sbb
sub
pop
mov
mov
xor
in
shll
xchg
add
out
idiv
add
jp
inc
enter
add
pop
inc
mov
sub
iret
loop
jg
dec
mov
cmpsl
cmp
push
sti
pusha
mov
add
inc
ljmp
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
cmp
loop
adc
pop
adc
adc
and
jne
dec
outsb
adc
dec
mov
add
jp
dec
push
fildll
and
xor
cs
fiaddl
daa
scas
push
sti
pop
aad
jo
popa
and
sub
rolb
cmc
inc
push
or
mov
test
lahf
mov
ljmp
test
pushf
clc
fimull
lods
je
add
bound
and
shrl
mov
mov
sub
inc
out
dec
sbb
das
loope
sbb
int
jecxz
andl
mov
cmpsl
jmp
mov
pop
push
jecxz
movsb
mov
das
dec
cmp
xor
pop
add
rorb
push
jmp
in
test
ds
push
cmp
pop
jmp
xchg
dec
cli
sti
lea
leave
in
xchg
inc
scas
lods
fdivl
dec
push
jge
call
xor
ja
dec
or
ret
sbb
sub
dec
dec
push
sbb
add
cmp
lcall
jns
xor
push
xchg
outsl
inc
scas
cmp
jne
mov
pop
ja
jg
and
shlb
mov
push
add
les
mov
push
daa
pop
xchg
fwait
mov
push
jae
xor
inc
xchg
sub
je
lock
cwtl
cmovs
push
movsl
and
push
xchg
pushf
xchg
lods
negb
testb
jp
sbb
or
into
pop
cmp
fimull
mov
sbb
fnstenv
jl
mov
fisttps
fst
shrl
pop
push
push
das
inc
adc
pop
xchg
shll
mov
into
or
and
insb
pop
std
jmp
call
jns
bound
insl
pop
mov
les
orl
sahf
inc
cmp
movsl
in
push
aam
outsb
mov
sub
sbbb
pop
pop
inc
pushfw
call
push
sub
xorl
test
mov
jns
popa
mov
push
mov
iret
sbb
xchg
hlt
or
lcall
mov
sahf
pop
ja
xor
xchg
gs
nop
mov
popf
pop
cwtl
cs
push
adc
lcall
jb
add
push
jnp
lret
cld
pop
push
mov
jnp
jae
shlb
mov
adcb
xchg
fidivs
lds
mov
add
cmpsb
cwtl
pop
xchg
test
fucom
sub
gs
jle
jb
push
push
repz
out
pushf
fcompl
adc
mov
mov
pop
pop
pop
mov
mov
blci
adc
cmpsl
leave
outsl
mov
movsb
lock
mov
jmp
in
in
adc
cwtl
sub
push
inc
hlt
cmp
xchg
jbe
pop
aad
xor
insb
mov
inc
jl
pop
add
subb
or
sub
aas
fcmovnu
rorl
and
adc
int
in
cltd
mov
cmpsl
cmp
mov
enter
adc
sub
push
inc
jae
dec
or
dec
inc
mov
jl
cwtl
jecxz
inc
sub
aam
add
push
xchg
lock
fsubrs
repnz
dec
cmc
push
dec
cmc
pop
mov
mov
shll
mov
arpl
dec
push
popf
add
dec
out
inc
mov
sbb
fsubs
pop
std
ret
mov
addr16
das
shr
jle
sub
push
cmpsb
cmpsl
jl
lret
inc
outsb
in
cmp
or
cmc
arpl
orl
mov
hlt
notl
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
lds
insb
in
mov
adc
movlps
mov
insl
shr
pop
mov
ret
fmull
sbb
lahf
mov
jmp
cs
mov
xchg
iret
mov
test
cld
xchg
repnz
in
or
mov
dec
lret
subb
pop
sub
sahf
pop
mov
sub
mov
cwtl
pop
pop
ja
sti
push
push
fildl
mov
cli
pusha
pop
mov
add
ret
cmp
mov
out
aad
pop
mov
dec
adc
or
fs
imul
xor
loope
popa
push
ficoms
mov
or
lods
adc
addr16
sbb
nop
out
xor
movsl
dec
push
xor
push
mov
jne
es
sbbl
nop
adc
xchg
add
add
out
in
xor
or
loop
and
ja
cltd
pop
fsubl
cmp
outsb
orl
xor
xor
fisubrs
push
cs
divl
int
sub
inc
divb
fisubl
repz
outsl
mov
sub
sbb
fucomi
rol
fisubrs
cmpsl
daa
rclb
das
iret
andb
inc
inc
jle
add
and
cmp
ja
cmp
or
adc
adc
adc
fs
and
imul
pop
sbb
fstpl
push
push
xor
and
mov
xor
xchg
xchg
shll
int3
mov
outsb
jle
sub
adc
jbe
adc
push
into
xor
insl
mov
sub
xor
pop
inc
dec
ljmp
addl
pop
pop
int
lods
pushf
shlb
fs
xchg
scas
and
jne
popa
test
notb
push
movsl
or
stos
das
mov
sub
mov
adc
xchg
out
mov
leave
jae
fistpll
pop
imul
fwait
in
mov
loop
and
cli
mov
sarb
xchg
push
adc
or
cltd
mov
pop
fwait
inc
lea
outsl
sbb
in
enter
test
adc
cmc
inc
aad
andl
dec
test
push
xchg
add
dec
jmp
adc
pop
leave
scas
xchg
int3
mov
outsl
pop
mov
adc
arpl
test
fstpl
fcoms
mov
das
jnp
mov
aaa
ds
cli
aam
push
in
lea
nop
rcrl
jne
ret
mov
andb
ds
decb
int
repz
sbb
dec
out
adc
cmp
cmp
pop
dec
insl
inc
inc
scas
push
inc
lret
adc
inc
neg
pop
lods
jg
into
dec
stos
mov
das
push
aas
repnz
xlat
shrl
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
call
mov
mov
je
testl
in
daa
insl
icebp
push
jno
cld
movsb
xchg
xor
inc
sbb
xor
mulb
lds
jecxz
inc
decl
jne
ds
mov
xchg
xor
fstpl
gs
adc
outsb
and
cmp
addr16
imul
shll
pop
cmc
scas
mov
sub
ljmp
dec
jns
mov
jge
negb
data16
pop
cmp
test
push
pop
dec
leave
mov
xchg
add
gs
fcomi
xor
mov
outsl
jp
lock
movsl
mov
pop
jo
fsts
inc
mov
pop
adc
sbb
xor
inc
xchg
aaa
aaa
pcmpeqd
je
ret
mov
xor
sbb
loope
into
add
fmull
addr16
mov
in
push
mov
adc
stc
dec
or
mov
subb
nop
adc
xchg
push
adc
dec
cmp
xchg
sub
mov
stc
add
aaa
dec
mov
cmp
adc
xor
add
fisubl
cmovle
adc
test
jmp
test
add
jne
inc
sahf
aas
push
ret
stos
pop
insl
xorb
sarb
jg
mov
jne
outsl
adc
pop
in
or
ja
lret
scas
repnz
lock
adcl
inc
fs
pop
es
inc
stc
xor
xor
push
pop
xchg
ds
sarb
xlat
clc
pop
add
cmp
ljmp
push
addr16
inc
or
test
loop
fadd
xchg
lahf
movl
jecxz
cmp
aad
loop
jno
xor
stos
push
loope
int
insb
insb
pop
sub
mov
nop
cli
icebp
je
add
dec
mov
jbe
sbb
jg
xchg
imul
xor
mov
js
sbb
jl
movsl
sbbb
mov
mov
cwtl
repnz
xchg
or
dec
xor
fisttpl
test
cmp
adc
jnp
out
cmp
ret
cmp
in
pop
push
xchg
rol
xlat
xchg
sub
pmulhuw
pop
mov
push
xchg
movsb
mov
adc
int
arpl
jae
ss
stos
mov
outsl
sbb
rol
xlat
rcl
sbbb
mov
mov
shrb
fs
out
jp
push
pop
cld
leave
int3
lret
testb
jg,pt
cld
jl
aaa
imull
lods
test
mov
xchg
aam
mov
mov
rcll
int
xor
std
cmp
jno
and
xchg
es
add
xor
and
sub
lods
jmp
shl
and
add
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
and
jge
adc
movlps
lret
pop
in
push
mov
lds
inc
jo
loope
stos
cs
shlb
leave
mov
lock
jge
mov
or
leave
imul
xchg
mov
inc
add
ljmp
sbb
xor
dec
dec
imul
adc
ja
or
jge
in
dec
ret
out
mov
adc
enter
cmp
loope
loop
jp
mov
fstl
sbb
jbe
sbb
popa
mov
clc
push
sbb
ret
es
jb
stos
in
negb
mov
ds
aas
movsb
adc
mov
xchg
ss
inc
add
ret
lret
cmp
out
mov
mov
jne
dec
push
pop
and
push
pop
mov
aaa
daa
push
out
or
xchg
out
or
inc
dec
aad
call
shlb
out
xlat
lret
fyl2xp1
stc
push
or
jns
lods
repnz
mov
adc
lock
push
out
jmp
mov
ja
out
or
mov
xchg
sarl
dec
shlb
rclb
lret
das
push
movsb
out
sti
sbb
pop
jecxz
mov
sbb
mov
roll
pop
add
scas
aas
fsubr
std
mov
popf
sub
jo
push
rorl
vmovlpd
rcr
xor
pop
xor
mov
nop
pavgw
and
stos
sub
or
sbb
dec
mov
mov
test
jmp
jno
add
repnz
sub
cmc
jbe
or
gs
and
jmp
mov
push
adc
jbe
dec
sub
pop
push
out
stc
pop
fwait
adc
cli
mov
and
aad
dec
loope
fs
out
mov
outsb
mov
pop
dec
jge
rolb
push
jl
xchg
sub
test
or
rcrb
dec
dec
cmp
dec
pop
cmpsl
out
jge
jo
cld
int3
push
push
and
mov
fcomp
mov
mov
imul
or
out
dec
pop
add
add
arpl
hlt
mov
or
int
mov
ja
insb
out
dec
jp
mov
mov
push
adc
push
adc
add
aas
inc
xchg
lcall
cmc
sub
int
das
sti
mov
popa
aad
cmp
inc
sub
xchg
mov
jne
jae
mov
xchg
mov
clc
mov
roll
push
shll
mov
enter
pop
xchg
xor
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
mov
jp
pop
jae
adc
mov
push
jge
fimull
cmpsb
hlt
fwait
and
inc
mov
inc
xchg
adc
cld
mov
sub
add
ds
and
lret
pop
andb
and
mov
mov
push
orb
je
or
movsl
shrb
into
sub
adc
sbb
addb
jl
push
dec
pusha
push
jne
loop
cmp
mov
lock
mov
cmp
std
jnp
pop
loop
loopne
js
dec
add
ror
xchg
insl
mov
push
cmp
pop
lock
bound
cmp
adc
add
fdivrp
sub
stc
xchg
mov
aas
push
sub
in
or
adc
cmp
out
insl
mov
adc
mov
cmp
push
sub
jl
cmp
sub
lret
in
mov
jae
sub
inc
lahf
dec
aas
enter
and
adcl
mov
ss
sarb
sar
or
pop
movsb
cmc
mov
movsl
mov
movswl
add
mov
mov
and
inc
stos
ret
ret
sbb
dec
xor
rcl
aad
jne
ffreep
scas
cs
out
jg
daa
inc
mov
cmp
xor
cmp
movsb
adc
xor
ljmp
mov
or
jnp
nop
popa
xchg
subl
cmpsb
sbb
cmp
lret
fcomps
jbe
orb
xchg
cld
push
in
push
pop
pop
dec
push
loopne
sbb
nop
repz
pop
dec
mov
mov
shl
or
insb
mov
xor
jl
inc
ret
adcb
clc
mov
or
ss
cmp
sti
or
aad
bound
dec
jbe
mov
push
xchg
push
cmpsl
adcb
scas
cli
fmul
cmp
dec
dec
ret
in
cmp
aas
or
mov
xchg
xchg
jae
or
aaa
or
lods
jge
pusha
xor
nop
cltd
dec
mov
je
xchg
les
xor
pop
daa
inc
lods
dec
inc
faddl
std
sbb
mov
jbe
cmpsl
pop
jbe
sub
push
lcall
popw
cmp
aas
ret
jbe
scas
inc
dec
adc
mov
js
xchg
pop
xchg
mov
lods
imul
mov
test
or
xchg
and
fcompl
mov
sbb
add
fdivrl
popf
xlat
aaa
xor
gs
cmpsl
mov
daa
loop
out
cs
xchg
sbb
xorb
inc
xlat
outsb
js
fstps
mov
arpl
sbb
repnz
or
jnp
in
and
xchg
imul
repnz
ja
inc
sbb
lea
or
stc
fdivrs
dec
arpl
add
loope
pop
sarb
lcall
fstpl
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
insb
popa
loopne
bound
in
xor
int3
sbb
xor
aad
and
jae
pop
inc
mov
faddl
jmp
cmp
push
leave
inc
jns
inc
loopne
sbb
imul
insl
mov
insl
ja
lea
mov
xor
pop
imul
popf
sbb
and
inc
fisttps
cmp
xchg
xor
cmp
jmp
sub
addl
sub
sti
inc
cwtl
ss
std
xchg
addr16
inc
push
pushf
push
xor
xchg
std
out
ss
lods
aam
push
andl
mov
int
add
sub
mov
push
sbb
xor
dec
inc
and
push
mov
pop
cmp
jb
jns
mov
sbb
cmpsl
push
or
sbb
cmpsl
cmp
aaa
in
dec
divl
mov
xor
les
cltd
and
dec
mov
stc
add
cmp
mov
addr16
pop
xor
mov
xor
dec
adc
xlat
or
nop
test
mov
sub
imul
mov
xchg
int
push
in
dec
mov
adc
inc
in
add
jp
lds
insl
xchg
pop
cmp
call
inc
jl
push
pop
pop
push
ja
aaa
and
pop
aad
mov
int
jge
cwtl
fmuls
outsb
in
mov
and
xor
popa
cmc
in
sarb
xor
cmp
sbb
cld
ds
jnp
jns
lock
repz
gs
popf
jo
sub
mov
mov
mov
pop
lret
dec
movsl
jno
xor
mov
shll
sbb
loop
repz
xor
and
fwait
push
in
rorb
and
push
adc
add
out
jb
and
pminsw
imul
pushf
loopne
inc
mov
and
inc
dec
clc
sbb
xchg
xchg
ljmp
cmc
adc
pop
mov
fisubrl
jl
das
mov
jg
xorb
pushf
push
xchg
das
enter
ret
mov
mov
xchg
mov
cmp
cmp
sub
iret
lods
jecxz
lahf
fcmovne
ljmp
sahf
xchg
ret
arpl
cmp
push
mov
push
loope
mov
in
xchg
dec
push
scas
test
dec
add
outsl
pop
int3
mov
push
mov
adc
push
lea
out
and
adc
lcall
cli
ds
mov
mov
add
jae
cmc
mov
adc
and
incl
addr16
es
pop
inc
lcall
lahf
mov
repnz
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
rcll
adc
or
jecxz
call
dec
fcoml
cmpsl
xor
add
shrb
push
outsb
stos
mov
xchg
outsb
sub
cmpl
lock
push
fisubrs
or
dec
sub
jnp
inc
mov
lcall
sti
fbstp
push
sbb
push
mov
insb
in
sub
lret
xchg
test
xchg
test
lds
push
xchg
xor
pop
fldcw
movsb
or
adc
ss
clc
cmpb
aam
xor
pop
push
dec
sarb
inc
sbb
cmpsl
cmp
fbstp
mov
dec
sub
add
mov
sub
sub
pop
mov
adc
inc
add
mov
movb
push
xchg
jle
mov
dec
jae
and
mov
fiaddl
sti
into
das
dec
dec
push
bound
xchg
push
sti
loop
pop
and
int
dec
sar
je
outsl
cmpsb
cmp
movsl
imul
enter
sarb
mov
pop
xchg
pop
test
cmpsb
lock
out
pop
pop
call
cmp
inc
or
sarb
mov
push
rcrb
in
lods
mov
addr16
das
dec
scas
mov
fsubp
test
enter
adc
int
jnp
and
pop
inc
call
loop
dec
add
mov
pushf
jmp
inc
inc
imul
lret
cmp
push
fsubs
sbb
adc
repz
pushf
popf
mov
out
aaa
jecxz
or
int3
add
push
sub
clc
popf
popa
mov
shrb
mov
inc
sub
pushf
sbb
ljmp
cmp
std
cmc
sti
mov
rcll
and
sub
mov
or
jg
fisubs
lods
mov
mov
cmp
push
adc
mov
inc
xchg
cld
pushw
lret
xchg
js
insb
xor
xchg
add
pop
shrl
xchg
arpl
jge
sbb
push
mov
push
jecxz
cmp
dec
add
pusha
xor
bound
daa
xor
rol
pop
xchg
or
jle
ret
sbb
mov
daa
cmpsl
sub
fimull
and
aad
rcrb
imul
and
fmull
sarl
iret
int
dec
pusha
adc
xchg
scas
mov
jecxz
aas
std
mov
enter
rolb
repnz
or
sub
jb
jno
push
sub
push
mov
andl
jg
jp
dec
lods
xor
call
adc
jnp
int3
fdecstp
inc
ja
lock
push
add
lret
jecxz
dec
shll
jbe
xor
lahf
jnp
fisubrl
lock
and
and
sbb
mov
rol
push
inc
imul
bswap
mov
rcll
sbb
fsubl
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
fldenv
xor
sahf
test
sahf
sbbl
in
mov
out
addr16
push
cmp
es
lahf
dec
fadd
xchg
out
xlat
and
dec
stc
fdivl
mov
jle
or
add
fadds
sub
movsl
xchg
jecxz
out
loop
fnstenv
and
push
pop
icebp
scas
divb
mov
push
repnz
mov
outsl
mov
push
ret
mov
add
out
inc
push
add
popf
sub
xor
fadds
sbb
xor
mov
xlat
fimull
repnz
fisttps
imul
jnp
jbe
cmpsl
jle
jae
jb
adc
mov
push
fwait
mov
popa
in
popf
adc
and
in
ds
mov
adc
sbb
add
push
arpl
mov
ljmp
or
push
daa
clc
and
daa
xchg
enter
idivl
jle
dec
lret
mov
xor
pop
fidivrl
in
iret
daa
ja
xchg
add
imul
mov
test
sbb
mov
fldl
mov
ljmp
ja
repnz
das
pusha
dec
adc
mull
mov
data16
or
mov
push
fwait
fwait
push
fcomps
xchg
int
rorb
outsb
ds
mull
mov
jno
sub
cmpsb
ljmp
inc
aaa
mov
sbb
jae
fcom
mov
push
ficompl
dec
xchg
adc
jo
adc
jnp
jl
mov
repnz
push
icebp
sbb
bound
and
sub
cli
xchg
dec
mov
cmp
mov
pop
insl
lock
out
inc
roll
dec
lods
pop
xchg
out
sub
sub
cmp
scas
out
pop
xor
xchg
jle
mov
inc
cltd
cmp
jmp
xlat
clc
in
aas
mov
loope,pt
jnp
push
inc
leave
xor
inc
lret
pop
shlb
mov
std
push
shlb
jne
mov
js
xor
push
adc
dec
inc
stc
cmp
inc
les
mov
sub
aaa
push
stos
lret
push
lret
mov
push
movsb
fs
inc
xchg
imul
push
adc
push
xor
lcall
cmp
dec
mov
xor
adc
sbb
lock
jecxz
push
xchg
mov
ficoms
adc
and
out
lds
jae
les
mov
xchg
push
or
lret
xor
jnp
nop
pop
ss
nop
into
xchg
mov
mov
orl
fs
imul
bound
sbb
jl
jmp
bound
adc
jae
nop
dec
push
lahf
nop
pushf
sub
add
pusha
fildll
mov
jge
push
icebp
roll
jl
ljmp
jecxz
dec
add
cmpl
push
ss
fisubl
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
lcall
adc
adc
push
jo
das
andb
stos
cwtl
jmp
insl
adc
push
jo
mov
push
negb
jnp
pop
xchg
jecxz
dec
sbb
xorl
fimull
lock
cmpsb
out
rcrb
xor
inc
or
xorl
popa
stos
jmp
cmpsl
das
out
pop
out
shr
cmpsl
dec
jp
jno
cmpsl
rcl
loop
cli
lods
push
or
data16
out
xchg
enter
loope
mov
xchg
mov
adcl
mul
jno
outsb
adc
sbb
fistpl
mov
add
cmpsl
dec
scas
jle
pop
andl
out
pop
in
xchg
push
in
cltd
pop
rcr
add
xlat
ret
outsb
fistpl
dec
bound
test
movsl
repz
ror
jle
inc
aam
stos
sahf
jae
jae
lock
cmp
je
lret
cmp
or
push
xchg
cmp
jp
popa
pop
mov
push
jg
inc
add
and
jg
push
int
ja
add
and
jmp
mov
jl
adc
pop
adc
push
pop
pop
or
mov
ret
ds
ja
lea
xchg
push
push
in
pop
jmp
clc
aam
add
jo
cmpsl
or
pop
iret
mov
sub
push
sbb
mov
push
js
dec
add
push
mov
jg
loopne
cmc
mov
xchg
insb
gs
aam
aam
push
xorb
fadds
dec
mov
cmp
inc
pop
sbb
mov
xor
jmp
xor
repz
or
bound
cld
xchg
rcl
into
jl
rol
push
mov
imul
outsl
jge
mov
sbb
imul
xor
je
dec
sub
jmp
jns
pop
int
jb
jne,pn
mov
clc
or
add
mov
adc
jmp
sbb
lret
in
adc
test
xchg
cmp
call
and
or
xor
int
ret
xchg
jmp
xchg
aas
xchg
cmp
push
inc
and
adc
fcoml
in
mov
js,pn
inc
in
repnz
mull
mov
jbe
pop
jge
xor
sbb
mov
mov
sbb
push
dec
and
inc
mov
push
cmpsb
xor
inc
aam
add
dec
sti
ret
fs
dec
inc
sub
push
fadds
rclb
popf
xchg
mov
bound
mov
sbb
xor
insl
sbb
pushf
xor
xor
jge
jmp
outsl
es
ss
movsb
dec
cmp
rorb
aas
cmp
sti
push
dec
fsubrl
scas
xchg
lods
outsl
std
xchg
mov
dec
inc
jb
inc
ret
imul
inc
out
je
adc
jle
in
fwait
mov
mov
jbe
out
cld
test
add
dec
jecxz
cmp
leave
push
pop
cmp
cmpps
insb
jp
stos
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
push
sahf
jle,pn
pop
adc
jp
adc
dec
inc
shl
push
xlat
dec
les
pop
and
add
sbb
jno
je
jmp
mov
in
jo
adc
loope
jecxz
jae
mov
aas
add
sbb
popf
xchg
ds
pushf
scas
ljmp
adc
push
bnd
jbe
and
mov
sbb
pusha
mov
cmpsb
mov
icebp
lret
dec
sbb
imul
ret
lds
cmpsl
adc
mov
fsubrl
ret
in
adc
adc
fld
adc
test
dec
aas
out
outsb
mov
test
aam
stos
xchg
mov
outsb
add
jl
fdivrp
jmp
cmp
mov
adc
int3
or
cld
mov
sbb
out
add
add
iret
adc
inc
lahf
dec
aam
out
mov
push
pop
push
cmp
xor
dec
rolb
mov
cwtl
test
inc
xor
push
mov
add
ja
adc
push
fstpt
cmpsl
jb
fstpt
add
mov
ja
pop
push
nop
xchg
fwait
adc
jbe
inc
push
mov
aam
out
dec
cmc
cmc
add
fldl
stos
shll
fcompl
xchg
xor
xor
adc
push
aaa
je
add
addl
sbb
inc
mov
mov
xor
arpl
mov
inc
dec
adc
push
mov
mov
inc
scas
pop
dec
push
pop
add
jmp
imulb
lock
mov
cmp
in
iret
sub
adcb
mov
pop
inc
inc
xor
ret
mov
jmp
testb
jae
mov
shrb
cmp
jle
sbb
sub
or
and
mov
data16
jno
mulb
jge
adc
jb
imul
jecxz
stc
ret
sub
sub
out
cmp
rcl
xor
dec
imul
call
mov
lahf
cmp
sti
mov
push
aas
dec
std
fisubrs
dec
pop
scas
and
xchg
sub
inc
mov
arpl
dec
lea
fstpt
fsubs
jb
add
pop
and
and
xchg
jne
pop
mov
jbe
sub
mov
shlb
mov
cmpsl
sub
sbb
fsubrl
das
push
fidivrs
mov
dec
sbb
sub
pusha
pop
mov
jg
gs
push
pop
int
int3
mov
sbb
adc
add
aas
jl
sbb
xor
pop
and
push
xchg
loope
add
rcrl
dec
hlt
xchg
xor
pop
stos
xchg
ja
inc
sbb
int3
cmp
dec
das
xchg
add
jp
setle
xor
roll
and
ss
sbb
sahf
fst
les
js
sub
mov
jg
lret
mov
imul
imul
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
sahf
lods
pop
push
adc
jp
adc
out
mov
xor
movl
jle,pn
aaa
or
movsl
js
mov
cmpsl
add
mov
mov
dec
add
cmp
out
xchg
and
adc
mov
dec
push
push
jp
imul
ja
xchg
mov
mov
lea
cmpsl
mov
xlat
leave
pop
and
xchg
stos
mov
mov
in
stos
aaa
xor
adcb
sahf
cmc
cmpb
aas
rcrb
test
mov
daa
push
mov
cmc
inc
jg
arpl
xchg
sti
adc
add
push
xchg
mov
mov
sbb
jl
nop
dec
pushf
sub
and
leave
sbb
push
in
cmp
cmpsl
lods
push
jae
pusha
xorb
cmp
rcll
adc
or
out
stos
sbb
sub
adc
add
jns
mov
and
stos
dec
jnp
mov
pop
lods
xor
xor
cltd
cmp
outsl
xor
and
ficomps
pop
sbb
xchg
ds
dec
cwtl
outsl
shrl
pop
test
push
add
push
loopne
cmp
pop
mov
cmp
repz
pop
lahf
testb
cmpsl
icebp
inc
stc
or
push
jns
and
and
or
xchg
cmp
inc
orb
push
adc
clc
xchg
das
lret
fwait
cmpsl
lods
sub
jge
adc
rorb
cmpsl
pop
adc
bound
or
loop
pop
lods
into
rcr
adc
add
insl
les
push
add
iret
stos
mov
adc
clc
sahf
and
jecxz
adc
lret
fistpll
das
sub
into
adcb
mov
cwtl
popa
call
sub
loopne
mov
jp
imul
mov
sarb
mov
push
iret
adc
adc
pop
adc
es
mov
xchg
inc
jne
xorl
pop
mov
insb
into
rorl
popa
mov
in
cmpl
in
dec
xchg
fsincos
loope
scas
jp
pop
stc
sbbl
pop
sbb
push
bnd
cmp
jnp
cwtl
push
repnz
imul
aam
sbb
mov
and
inc
in
stos
roll
pop
xchg
and
les
pop
aam
inc
mov
sub
and
inc
js
mov
cmpl
pop
cmp
icebp
mov
and
imul
sbb
lret
mov
jnp
mov
jg
scas
into
fadds
int
or
mov
movsb
fstp
daa
and
xchg
xchg
adc
add
xor
out
fisubrs
out
imul
sub
or
repnz
mov
mov
pop
cmp
stos
out
inc
pop
call
mov
icebp
mov
sbb
adc
cmp
lds
es
jge
inc
repnz
hlt
in
ja
shlb
out
stc
insb
push
xor
xor
int3
xchg
aas
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
hlt
ss
outsb
inc
adc
lea
adc
cmpsl
push
mov
or
pop
pop
and
cmpsl
or
xor
mov
jmp
lods
int
stos
mov
scas
sbb
dec
jecxz
fldenv
lea
pusha
sbb
adc
loop
mov
in
xchg
and
sbb
mov
adc
dec
rorb
pop
xchg
pop
sbb
lods
out
dec
mov
push
outsb
push
mov
cmp
sbbb
aad
daa
out
jg
and
and
nop
stc
icebp
call
push
frstor
and
fdivs
adc
cmp
ret
mov
or
or
aam
push
dec
fsubr
xor
dec
in
mov
sbb
dec
ret
xor
bound
insb
leave
test
sub
mov
cltd
sub
xchg
sub
rclb
jle
out
mov
xor
jno
fwait
or
movsb
call
mov
lods
adc
jge
inc
xchg
movsb
sbb
xorps
push
pusha
filds
dec
data16
fcmovnb
cltd
test
ret
pop
ds
sbb
nop
sbb
and
fwait
loop
adc
dec
push
iret
in
pop
mov
xchg
scas
push
mov
jg
aam
stos
xchg
aas
and
in
aam
mov
xor
rclb
push
clc
test
inc
bound
mov
and
test
jle
dec
test
pop
pop
lods
and
pop
clc
dec
or
fisubl
add
push
dec
xor
decb
sbb
ret
pop
cmp
jp
aam
jge
mov
inc
pop
cltd
xchg
mov
adc
mov
xor
inc
lret
xchg
add
dec
mov
push
shrb
out
lret
sbbb
jp
repz
insl
mov
and
ds
mov
ret
jae
or
xchg
scas
enter
or
jecxz
scas
cld
pop
lcall
inc
sub
mov
push
int
fs
mov
xchg
outsb
sub
cmpsb
stc
mov
rcrl
push
jno
inc
into
mov
and
xor
stc
cltd
jne
sahf
out
xor
ja
int
inc
mov
add
pushf
int3
xor
ja
sub
mov
fstl
or
jne
into
xchg
mov
pop
daa
xchg
repz
frstor
ja
lahf
pop
jmp
push
rcl
mov
repnz
lods
add
mov
add
inc
sbb
cmp
adc
jecxz
dec
pusha
scas
pop
xchg
jecxz
or
xchg
mov
lock
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
aaa
cmp
std
rcr
sub
jns
jp
push
xor
lods
into
xor
lahf
hlt
and
mov
fsubs
xchg
add
hlt
cmpsl
ja
scas
mov
int
xchg
sbb
flds
lret
pop
out
into
ja
jo
clc
pop
push
add
stos
jl
sub
lahf
inc
scas
mov
aad
lcall
push
sbb
xchg
mov
xor
mov
sbb
or
pop
stos
test
test
jl
loopne
imul
fadd
cmpsb
xchg
fwait
les
push
cltd
inc
sarl
lret
cmpsb
jecxz
and
mov
jae
sub
lds
pop
xchg
mov
scas
jns
xchg
pop
inc
iret
or
sbb
xor
outsb
sbb
jmp
jg
mov
ds
pop
pop
and
sub
aam
test
bound
pop
mov
xchg
in
out
sub
aaa
jecxz
jo
test
addr16
adc
cmp
lods
sub
ja
stos
xchg
std
sub
lods
mov
xor
into
sub
inc
mov
cltd
lret
inc
sbb
lods
mov
fdivrl
dec
loopne
add
jp
bound
mov
test
je
ss
mov
sbb
test
and
lea
add
dec
mov
push
xchg
push
or
dec
insl
add
in
dec
and
jno
inc
dec
push
jnp
insl
pop
int3
jne
add
sbb
cmp
xchg
imul
enter
inc
sbb
inc
inc
mov
popf
or
bound
and
adc
mov
cmp
or
ja
jns
mov
mov
mov
sub
xor
xchg
mov
call
fcmovne
pop
and
jecxz
movl
xchg
in
push
mov
pop
or
sbb
aam
jg
jbe
mov
data16
and
dec
mov
sbb
fwait
dec
fstl
enter
ret
add
call
into
pushf
aaa
dec
shlb
mov
imul
enter
rolb
adc
fdivl
mov
mov
lds
cmp
sbb
adc
fimuls
lcall
cmp
in
sub
xchg
inc
cmpsb
cmpsb
pop
mov
cmc
popa
dec
inc
stos
cmp
out
out
push
es
outsl
repnz
push
mov
add
xchg
or
sbb
mov
cmp
ret
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
stos
sub
jbe
and
pushf
lret
je
aad
sbb
adc
pushf
jmp
es
and
or
add
mov
call
push
mov
in
mov
push
push
push
cmc
je
dec
xchg
jp
rcrb
fisttpll
ret
movsb
push
mov
pop
lahf
fnstsw
ret
xor
xchg
int3
xchg
dec
lret
push
test
or
mov
dec
inc
push
lahf
adc
mov
adc
addr16
inc
push
imul
ret
or
nop
xor
pop
adc
mov
nop
xor
out
xchg
dec
hlt
cs
ret
dec
nop
add
xor
js
pop
adc
fwait
push
fsubrl
lds
call
addb
lea
and
jle
add
sub
and
lds
or
stos
or
push
pushf
sti
add
dec
rep
xchg
jae
adc
sub
sbb
lock
sub
mov
roll
test
inc
in
and
cmp
sub
mov
xchg
mov
shl
incb
inc
mov
or
cmp
add
xor
xor
orl
pusha
mov
repz
xchg
stc
sbb
sub
fadds
mov
or
aas
sbb
push
gs
hlt
mov
cmp
cmc
je,pt
lods
fucomp
mov
subb
adc
cmp
in
and
cld
loope
stos
adc
pop
out
int
inc
inc
jae
jecxz
sub
mov
sbb
mov
xchg
or
ss
pop
xchg
cs
call
xchg
and
lret
insb
gs
pop
paddd
cmpsl
and
in
sub
jb
icebp
icebp
lods
shlb
ljmp
inc
aaa
dec
andb
out
sbb
push
push
das
fwait
cltd
imul
movsb
adc
pop
mov
mov
daa
xchg
push
mov
jg
or
mov
or
insl
stc
dec
mov
jmp
pop
sbb
and
dec
cmp
mov
push
clc
test
and
sbb
scas
or
lret
add
jnp
lds
mov
xchg
movb
clc
cmp
aad
push
mov
lret
xchg
push
xchg
adc
or
inc
pop
ja
dec
cmpsb
std
jne
add
pushf
or
mov
add
lds
mov
lods
adc
rorl
out
add
enter
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
inc
popf
xchg
js
aaa
adc
lea
adc
mov
and
push
out
pushaw
fnstcw
out
jne
xchg
cs
jg
shll
outsb
loopne
cld
mov
jp
fwait
push
xchg
arpl
inc
xor
and
inc
sbb
push
movsb
pop
adc
inc
push
cwtl
movsb
push
fwait
inc
add
incl
xor
xlat
cmp
adc
push
pop
adc
pop
jp
push
int
ret
loope
pop
push
lods
scas
aaa
aaa
xor
push
or
xor
aaa
add
js
into
pop
add
ja
or
adc
bound
into
pop
sti
scas
add
jbe
lahf
lock
push
xchg
cltd
in
sbb
fidivl
in
pop
loop
mov
push
cmp
sarb
mov
jecxz
fidivrl
popf
cmpsl
loop
movsb
stc
in
cs
and
jp
cmp
je
roll
fidivl
mov
inc
jmp
sub
and
cwtl
repz
repnz
fbstp
add
fmull
sbb
mov
pop
notb
push
jp
outsl
pop
in
push
dec
or
call
daa
inc
stos
popl
mov
in
push
push
mov
jno
add
jb
test
dec
out
mov
icebp
or
imul
idivb
push
fisubrs
repz
mov
sub
mov
aam
add
cld
sub
sbb
mov
ljmp
cs
movsl
jecxz
ror
cmovno
pop
add
dec
pop
ljmp
inc
pop
xor
sub
xlat
out
sahf
fists
jp
xchg
push
fmull
test
sbb
sbb
test
dec
jecxz
loopne
mov
aaa
out
lods
mov
jns
ret
movsl
push
add
pop
loopne
jo
or
mov
dec
xchg
pop
mov
dec
loopne
and
out
cmp
xor
sbb
repz
out
in
push
sub
mov
fsubrs
mov
xchg
test
insl
out
mov
jecxz
das
adc
shrl
popf
adc
jb
test
mov
jp
jg
insb
jge
clc
test
shlb
xchg
cmp
push
out
popa
iret
and
sub
push
es
fcompl
sbb
sbb
int3
cwtl
mov
arpl
into
rcll
test
or
enter
mov
dec
imul
int
out
cmp
pusha
data16
leave
mov
mov
stos
push
inc
jbe
push
mov
pusha
sub
xor
or
push
pop
fildl
and
mov
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
sbb
push
xor
adc
cmpl
into
movsl
in
cld
enter
jns
lods
sub
cmp
push
adc
mov
insb
mov
dec
insl
pop
xchg
mov
inc
outsb
gs
call
loopne
jmp
jle
mov
xlat
shr
dec
je
ss
imul
mov
mov
sar
hlt
cmpsl
adc
pop
pop
lea
inc
mov
jg
jne
stos
add
aas
clc
shrl
adc
pop
hlt
adc
sub
into
push
mov
sbb
jge
mov
cmpsl
cmp
movd
pop
fstp
pop
or
mov
add
loop
lcall
dec
imul
es
jnp
xchg
loopne
jnp
mov
ja
dec
add
outsl
adc
sbb
cmp
and
sub
insl
stos
loop
out
cmc
jno
inc
pop
movsb
push
xor
add
test
jno
idivl
lret
jmp
xchg
adc
call
mov
jns
adc
xchg
out
mov
imul
or
sbb
popf
inc
aad
pop
mov
and
dec
insl
pop
bound
and
sbb
sub
mov
jmp
push
or
adc
cld
cmpl
lock
cmp
and
cwtl
lds
es
jbe
imul
pop
leave
movl
push
dec
jo
mov
jnp
inc
mov
mov
push
or
xchg
jg
fadds
sbb
jnp
xchg
inc
inc
imul
cmpsb
insl
or
add
mov
jno
sub
sub
add
les
jge
imul
adc
outsl
pushf
lods
sarb
in
outsb
jmp
mov
mov
dec
test
fwait
dec
or
jno
movsl
shll
scas
pop
push
add
push
adc
test
rolb
mov
fdivrl
mov
cmc
dec
mov
bnd
jo
xchg
cmp
add
aad
fcomp
add
ja
loopne
jge
int
or
pusha
pop
leave
icebp
sbb
inc
push
mov
enter
movsl
les
xchg
push
push
arpl
ljmp
clc
xchg
lcall
cltd
hlt
and
into
and
pop
imul
add
mov
add
das
add
arpl
xchg
cmc
pop
clc
add
fbstp
jns
inc
lock
adc
out
inc
fstpt
pop
addr16
cmpl
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
xchg
pop
mov
lea
adc
div
cmp
jnp
or
aam
and
les
adc
test
jb
sti
fs
insl
rcr
xor
push
fbld
xchg
int
adc
lcall
rcrb
fiaddl
adc
and
mov
cmp
lret
arpl
pop
js
push
out
pop
mov
addr16
mov
into
or
push
adc
lahf
das
lcall
mov
cmp
imull
xorl
call
push
or
mov
js
cmp
out
gs
mov
adc
aaa
ffreep
int3
and
jnp
xor
inc
je
imul
in
cmpsl
ss
sti
cmp
add
pop
pshufw
and
and
imul
movsb
pop
or
movsb
xor
jle
sub
int
clc
ds
popf
pop
mov
lods
popf
inc
aaa
test
fstp
lret
cmp
js
mov
inc
jns
xchg
in
lea
mov
std
cmpsl
insb
sbb
iret
jns
es
mov
lcall
sub
xchg
mov
and
aad
mov
cli
aaa
jecxz
mov
gs
xor
pop
xchg
in
adc
and
cmc
mov
gs
aam
dec
push
push
js
adc
jnp
mov
enter
pop
bound
fsub
fsubrs
mov
test
mov
jmp
pop
lock
fistpl
in
push
add
pop
cmp
push
hlt
jl
and
sbb
add
cmpsl
pop
icebp
push
inc
fsubr
mov
iret
fisttpl
lods
lret
les
fs
cmpsl
push
mov
inc
bound
bound
and
lock
rep
mov
addr16
call
repz
inc
loop
mov
js
lret
fs
adc
sbb
jbe
add
cwtl
jmp
mov
out
mov
mov
lahf
xor
or
loope
int
out
out
push
push
adc
mov
push
xchg
sbb
popa
jge
pop
push
in
out
mov
popf
sub
je
jbe
fbstp
or
out
or
sbb
das
jmp
nop
mov
mov
inc
lods
sub
push
js
jmp
setge
jp
xor
xchg
push
mov
pop
fmuls
add
pop
pop
inc
jle
sbb
mov
ja
aas
lahf
roll
stc
sti
shrl
stc
out
push
pusha
das
add
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
daa
test
xor
adc
lea
adc
jmp
dec
jno
outsb
adc
xchg
or
mov
fnsave
fmulp
pop
cwtl
sbb
xor
xor
push
and
in
mov
pop
clc
test
int
sbb
xor
sub
cmc
test
cmp
xchg
rorb
or
js
push
and
and
dec
xchg
xor
adc
ret
mov
int
and
in
sub
loopne
repz
mov
mov
popa
scas
js
lds
adc
jmp
sub
repnz
adc
cmp
or
out
jle
xchg
mov
cmc
jno
shrl
inc
push
lea
inc
inc
push
mov
lock
out
mov
xlat
loope
in
mov
ja
ljmp
clc
push
mov
xchg
jp
in
or
nop
stos
ret
xchg
sahf
jmp
jno
mov
or
pop
pop
xor
dec
rolb
xchg
add
mov
clc
mov
jecxz
iret
lods
inc
out
stc
ret
scas
xchg
xchg
mov
sbb
push
aam
pushf
dec
lahf
pop
popa
cmp
fnstcw
jnp
xlat
adc
outsl
cmpsl
nop
ret
cmp
xchg
int3
xor
sbb
push
into
push
ljmp
orl
xor
gs
pop
das
push
clc
into
dec
jns
in
std
xchg
push
pop
loop
adc
cmp
xchg
testb
add
out
lods
and
adc
sub
sbb
pop
dec
mov
out
or
cld
adc
xor
pusha
push
mov
jmp
cmc
movsb
or
lds
femms
add
dec
daa
iret
dec
jmp
xchg
sub
std
sub
lea
push
sub
xchg
jmp
pop
aas
out
test
js
push
mov
dec
mov
pushf
and
repnz
dec
xor
add
aad
dec
out
in
pop
in
adc
adc
ljmp
sub
das
sub
aaa
nop
jne
sbb
push
sub
mov
mov
adc
or
lret
mov
and
mov
mov
aas
cli
xchg
mull
dec
xor
cs
pop
xchg
xchg
inc
xchg
sahf
mov
out
adc
imul
mov
pop
sbb
dec
adc
mov
aam
push
adc
aam
pop
inc
sub
js
mov
loop
cs
jle
sub
aas
xchg
loopne
fldz
shrl
jp
fildll
insb
adc
sbb
and
orl
sub
nop
lods
mov
cmpsb
mov
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
and
ljmp
inc
sbb
stos
jge
jge
popf
daa
icebp
mov
insl
out
sub
jne
and
insb
xor
dec
mov
fldcw
lods
sub
sahf
out
push
pop
aas
ja
ret
stc
xorl
lea
mov
lock
push
pop
mov
shl
push
fsubp
pop
in
cmc
out
aad
xchg
jns
fsubp
sub
out
lods
out
add
xchg
cld
mov
jge
xor
or
dec
in
adc
dec
mov
iret
repz
sbb
xor
adc
loopne
or
sbb
push
jg
jne
dec
adc
push
and
shrl
ficomps
stc
pop
pushf
jbe
jmp
sub
mov
ficompl
mov
mov
insb
aas
mov
fisubs
mov
mov
loopne
in
insl
aam
mov
test
sub
mov
sbb
scas
jmp
xor
imul
loop
pop
rcr
mov
scas
adc
xlat
sbb
adc
jmp
je
ret
test
jp
push
xchg
popa
push
mov
push
jge
dec
cmp
cli
loop
out
push
xlat
cwtl
xchg
ds
cmp
arpl
dec
mov
roll
and
push
mov
xor
outsb
xchg
fnstenv
cmpsb
test
cwtl
or
push
popa
imul
fdivrl
and
test
sbb
lock
and
inc
bound
lods
cmp
ret
pusha
and
lods
pop
adc
enter
push
push
push
int3
jp
jb
adc
dec
or
sbb
mov
inc
divb
cld
inc
data16
dec
arpl
mov
xor
jo
jmp
test
cwtl
sub
add
sub
int
mov
push
push
adc
bound
mov
popa
mov
push
add
lret
mov
mov
pop
es
jae
sbb
mov
xchg
push
add
jecxz
adc
mov
jge
pop
mov
test
ficompl
jnp
insl
add
subb
mov
mov
adc
test
mov
call
cld
pop
push
call
in
pop
mov
imul
pop
pop
sub
mov
fisubl
push
push
sbb
jl
jl
adc
insl
insl
inc
pop
adc
dec
int
in
arpl
and
inc
int3
jg
ficoms
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pop
lods
push
sbb
adc
mov
xor
insb
int
ficoml
push
daa
and
add
les
sbb
dec
loopne
cmp
jge
sahf
rolb
aas
cld
sbb
mov
jb
lahf
inc
xchg
xchg
mov
movsb
cld
jecxz
jge
jp
lea
loope
jle
mov
fwait
fs
movsl
inc
sub
push
lret
jmp
push
rorb
shll
repz
fbstp
xor
js
and
mov
add
loopne
jmp
mov
ficompl
sti
rcrb
pop
cmc
mov
adc
mov
inc
mov
addb
push
push
and
ret
jge
or
mov
jb
popf
and
push
cmp
in
and
dec
jnp
pop
push
ja
repz
mov
lahf
jnp
lret
cmpb
pop
decl
add
sub
cmc
push
jno
ret
dec
xchg
mov
in
repnz
fucom
pop
xchg
or
daa
dec
and
jl
xor
out
cld
fidivrl
xor
lods
xchg
mov
mov
imul
pop
pop
mov
lock
cltd
jl
bound
sbb
fwait
adc
icebp
pop
lock
insb
xchg
xor
fwait
dec
pop
int3
ljmp
and
adc
mov
lret
or
fcoms
add
push
cmpsb
sub
jnp
mov
jne
fdivrs
pop
xchg
pop
and
popa
and
shl
xchg
ret
cld
imul
pop
mov
add
out
xchg
cmp
cs
in
popf
mov
call
xchg
lea
jns
push
push
loope
mov
push
cmpsl
pop
sub
push
rorl
leave
pop
push
inc
pop
sub
or
pop
test
xor
pop
nop
sbb
sbb
and
loop
xor
cwtl
fists
or
sub
xchg
jne
and
aam
stos
xchg
adc
push
jecxz
scas
jp
out
xchg
cmp
movsb
push
loop
and
inc
inc
mov
outsl
sbbb
imul
xchg
setnp
dec
jecxz
jp
add
and
sbb
push
push
xor
xchg
stos
arpl
add
xchg
jge
loope
pusha
dec
pop
mov
pushf
sub
and
lock
cli
jle
jbe
push
pop
js
icebp
and
xor
sbb
pusha
mov
in
sbb
int
mov
cmp
fbld
out
jb
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
push
mov
adc
mov
mov
and
test
je
xchg
cltd
clc
pop
pop
into
xorb
sub
outsl
mov
test
mov
scas
fidivs
jecxz
adc
mov
decb
ds
jl
jno
daa
cmp
mov
das
pop
mov
test
xchg
cltd
ret
les
cmp
imul
ljmp
cld
and
outsb
or
xchg
movsb
jle
xchg
aad
hlt
or
testl
loope
cld
or
mov
loop
sbbl
mov
mov
push
add
movsl
faddp
outsl
out
shl
stos
inc
jl
in
dec
cmc
xchg
test
je
push
cmp
pop
xchg
int
inc
fs
xchg
add
add
push
roll
fdivp
fnstsw
in
mov
mov
pop
stos
and
mov
push
xchg
cmp
fcmovb
cmp
sbb
or
inc
lock
ss
mov
jo
inc
xchg
cmpsb
jmp
and
mov
sub
es
out
fldl
stos
push
mov
outsl
push
xlat
dec
sub
mov
ss
sub
notl
add
cli
fwait
std
inc
fcompl
icebp
lods
cmovno
ss
sub
sbb
mov
mov
je
ds
mov
ret
cmp
sbb
sub
sub
pop
nop
jl
hlt
stos
jo
jmp
adc
mov
sbbb
mov
pop
or
inc
and
or
scas
stos
fnsave
lcall
popa
inc
and
cmp
imull
dec
insb
fisttps
aad
fstpt
mov
lret
jge
sub
mov
lods
fucomp
cmp
push
or
inc
stos
cmp
mov
inc
sbb
jnp
lea
andl
pushf
push
sbb
push
les
inc
inc
mov
mov
inc
sub
push
mov
and
and
push
pop
cmp
mov
cmpsb
adc
sub
int3
pushf
mov
inc
int
int
dec
push
pop
insb
push
jmp
imul
fcmovnb
aam
inc
test
ds
xchg
into
sub
lds
js
cmp
repz
and
jb
popa
mov
out
loopne
inc
dec
es
leave
jnp
dec
cmp
jbe
call
les
aad
sub
mov
popf
int
push
and
mov
mov
xor
fs
mov
insl
rclb
insb
or
imul
sti
popa
jge
mov
add
repz
fisubl
add
outsl
in
mov
add
mov
xchg
push
dec
or
rcl
outsl
mov
fisubl
jne
jbe
sub
ljmp
inc
loope
ljmp
out
xor
movsl
push
pushf
adc
jp
inc
sbb
cmpsl
and
cltd
icebp
adc
inc
ss
pop
jge
hlt
sti
into
clc
mov
insl
mov
leave
cld
adc
repz
mov
add
movsb
push
cmp
sbb
cwtl
in
fwait
cld
into
nop
lret
or
and
sub
ja
mov
cmp
mov
mov
mov
rcrb
adc
cmp
aad
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
lea
jle
unpckhps
mov
add
and
sub
inc
pop
fmuls
sbb
icebp
mov
loop
sub
sub
cmpb
out
loopne
mov
push
ds
adc
pop
pop
mov
dec
in
jbe
mov
push
mov
push
sub
or
int
push
cmp
lcall
push
adc
clc
mov
ret
jb
repz
pop
or
lret
xor
int
xchg
xlat
sub
scas
in
cmp
mov
adc
xor
mov
cmpsb
dec
mov
bound
xchg
mov
clc
adc
sub
imul
and
and
pop
push
add
jge
xchg
ja
and
dec
mov
jnp
xchg
in
dec
mov
xchg
shl
cmp
sbb
mov
aas
or
aaa
lods
dec
sub
addr16
pushf
or
inc
fxch
xor
sub
xchg
jmp
in
das
stc
cmc
push
sbbl
dec
shll
jp
inc
movsl
sbb
outsl
xor
fchs
into
sbb
cld
mov
jl
xor
push
movsb
out
xchg
stc
jb
pop
pop
xchg
mov
pop
jg
shlb
test
lahf
jo,pt
gs
inc
sbb
inc
mov
pop
or
sarb
mov
mov
xchg
shll
push
xchg
mov
pop
test
push
nop
add
jne
adc
insl
push
sbb
stos
cmp
push
insl
push
pushf
xchg
icebp
mov
mov
dec
dec
mov
das
jecxz
mov
js
mov
aad
inc
movb
add
inc
jno
add
mov
dec
add
inc
es
imul
dec
sbb
mov
xchg
stos
lods
mov
dec
mov
scas
lock
ds
inc
mov
xchg
and
push
xor
and
pop
cmpl
cmp
xor
loop
lret
lock
sub
mov
test
sbbb
fildl
xchg
out
lods
int
insl
xlat
lcall
iret
or
insl
ret
aas
xor
xlat
fists
sbb
std
pop
andl
lahf
push
adcl
add
outsl
jb
push
faddl
jb
fst
cwtl
icebp
mov
push
xchg
push
rcr
mov
int
and
int3
sub
jnp
or
sub
mov
mov
sbb
addb
lock
div
sbb
jg
rorl
jbe
test
enter
xor
inc
mov
push
ja
pop
addr16
movsb
mov
adc
mov
push
shlb
xchg
push
jae
lret
push
jp
inc
nop
enter
xchg
lods
jne
lahf
push
sbb
xchg
lods
dec
pop
jb
sub
add
mov
and
dec
pushf
lret
mov
mov
testl
test
fucom
jle
ret
sbb
dec
pop
pop
lds
outsb
pop
out
mov
cmpl
push
cmpsl
jne
ja
xor
add
aam
and
lret
arpl
adc
xchg
insl
xchg
pop
pop
sbb
scas
leave
decb
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
stos
filds
adc
adc
dec
lcall
and
inc
xor
and
xor
pushaw
push
dec
std
mov
enter
mov
mov
jne
mov
jge
std
shl
pop
cs
repnz
movsl
jae
cld
jno
xor
imul
adc
dec
addr16
mov
fsub
aas
sbbl
sbb
fiaddl
in
mov
outsb
and
mov
or
push
aam
xlat
lcall
sbb
mov
jnp
das
push
loopne
lods
aam
jmp
adc
inc
sub
lods
mov
rorl
sahf
push
push
adc
dec
cmp
stos
insl
xor
shl
push
sub
push
add
jecxz
fiadds
clc
jmp
inc
and
mov
movsb
sub
daa
sbbb
sub
jmp
inc
mov
dec
cwtl
pop
dec
daa
popa
dec
push
xor
mov
push
dec
sbb
in
pusha
aaa
adc
inc
sbb
lcall
jmp
in
dec
aam
mov
or
les
adc
cmpsb
shlb
cmp
jo
out
insl
jecxz
push
inc
adc
and
mov
jb
inc
out
dec
iret
sbb
jno
jbe
push
or
fs
imul
and
jle
xchg
fbld
push
lods
or
mov
cmpsb
cmp
xor
dec
jl
repz
aam
mov
es
popf
lret
nop
js
gs
fisttps
mov
sub
orb
and
inc
repnz
int3
xchg
and
push
nop
leave
dec
fstpt
popf
and
into
orb
mov
and
int
sub
stos
xchg
mov
std
jge
pop
inc
ret
pop
jge
inc
mov
lods
push
lds
jl
lcall
fcoms
inc
testb
mov
or
mov
sub
flds
data16
int3
sbb
jge
in
mov
insl
stc
mov
add
sub
adc
mov
std
lods
jno
xor
jns
aaa
insb
andl
jp
cwtl
aas
daa
mov
lcall
or
notl
sub
or
xchg
ljmp
in
mov
imul
add
clc
in
inc
or
xor
stos
jnp
xor
hlt
pop
jl
mov
out
pop
arpl
out
fucomip
lods
mov
jecxz
out
xor
mov
mov
xchg
cwtl
adc
aas
jb
das
xchg
add
mov
sbb
add
out
pop
fs
shrl
addr16
push
and
rorl
cmp
fisubs
sub
jo
cld
jno
mov
enter
js
gs
cmpsl
loop
fidivs
pop
mov
insb
dec
fstps
mov
mov
rolb
repz
push
push
jge
shrb
movl
sbb
rcrl
in
aam
les
cmp
outsl
aam
sbb
or
adcl
mov
outsl
add
scas
cwtl
jno
dec
int3
nop
mov
rcrl
lret
shll
inc
push
jbe
mov
std
mov
push
sub
lods
mov
jnp
aam
dec
loopne
gs
sbb
fidivl
gs
roll
mov
or
out
shl
sub
or
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
cmp
icebp
stos
mov
adc
adc
sbb
nop
rorl
shlb
adc
loopne
mov
popf
inc
mov
scas
dec
pop
and
enter
mov
mov
inc
adc
stc
int3
pushf
mov
fldt
cld
test
cltd
and
pusha
cmpb
add
or
dec
or
push
xchg
pop
mov
and
stos
cmp
fcompl
sahf
into
xchg
cld
or
int3
jmp
int3
in
cwtl
sub
push
lcall
xchg
sarb
xchg
in
xchg
sbb
add
fmull
pop
dec
xchg
verr
and
popf
aam
jge
test
into
out
inc
ret
push
out
mov
xor
sbb
cld
scas
xlat
lock
das
clc
push
xchg
cmp
aad
mov
mov
push
outsl
rcrl
aad
ret
mov
lds
stc
push
in
xchg
cmpsl
dec
ret
es
pop
andb
jmp
xor
jmp
leave
mov
rorl
into
popl
xchg
leave
lret
shr
push
aaa
xchg
inc
sub
inc
mov
add
dec
sti
mov
les
rolb
loope
fimuls
pusha
cmpsb
and
and
jge
out
insl
jp
repz
fstps
or
jmp
sbbb
sub
cmpsl
push
addr16
into
sbb
aaa
cmp
push
push
pop
or
pushf
adc
aam
pop
imul
sti
inc
inc
mov
repz
es
lock
and
inc
mov
int3
nop
inc
sbb
sbbl
mov
in
pop
iret
jge
fwait
push
dec
add
push
jne
pop
or
je
fistl
popa
push
es
pop
xlat
mov
out
add
insl
push
ss
adc
push
out
aam
xor
out
mov
mov
push
pop
pop
mov
cli
sub
or
out
stos
mov
xchg
or
jne
inc
fwait
iret
leave
jg
adcb
inc
scas
mov
and
jae
fisubs
pop
loopne
int
or
cmovnp
push
lock
test
cltd
popf
cld
leave
push
sub
in
std
fcompl
dec
mov
clc
mov
inc
sub
mov
cltd
stos
in
mov
mov
daa
test
imul
cmp
mov
int3
xor
mov
dec
cmp
or
and
out
and
xor
mov
adc
push
mov
into
jnp
fldcw
call
add
inc
and
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
sub
std
adc
adc
in
out
xchg
pop
loopne
clc
mov
popa
repz
xchg
or
mov
les
pop
jl
ret
std
fdivl
cmp
push
mov
out
adc
lds
hlt
mov
jmp
jbe
testb
sti
mov
pop
orl
leave
cmp
mov
movsb
fldenv
xchg
mov
fisubrl
repnz
sbb
mov
rclb
int
push
sti
push
mov
sbb
out
je
and
lret
pusha
and
pop
fisubrs
lods
push
xchg
icebp
cltd
inc
xchg
leave
or
mov
gs
push
in
in
sbb
cltd
xor
and
sub
sbb
cmp
mov
daa
data16
adc
cmp
gs
jno
ror
cmp
inc
inc
dec
ror
add
dec
subl
outsb
dec
hlt
and
pop
add
mov
adc
cltd
sub
adc
pop
xor
stos
clc
stc
xorl
into
mov
add
clc
sbb
insl
dec
pop
ret
or
scas
add
fsubl
adc
push
mull
cmp
push
icebp
add
divb
sbb
mov
inc
cmp
stos
jl
sbbl
pushf
inc
push
dec
jmp
pop
sub
mov
dec
sub
and
mov
pop
stos
shrl
pusha
dec
out
or
push
stos
rol
scas
cmc
add
cmpsl
mov
jb
test
pop
jg
sbb
enter
mov
fldl
jae
cli
inc
dec
sub
out
popa
xchg
outsb
push
loopne
mov
cmp
add
loopne
jne
and
push
fildll
leave
pop
xor
adc
mov
sub
mov
xor
ret
dec
add
dec
and
cwtl
adc
jae
jnp
cmpsb
adc
in
jl
or
add
inc
pop
std
rol
fdivs
cmpsl
lods
scas
scas
loop
pop
push
aas
mov
jbe
lcall
mov
aam
jecxz
insl
xchg
inc
into
das
push
arpl
adc
mov
fdivrp
int
roll
inc
or
sub
push
pop
iretw
xor
rorb
enter
xchg
mov
inc
jmp
dec
sbb
ja
inc
fnstcw
push
dec
mov
pop
pop
or
lahf
jns
add
stc
adc
push
rolb
pop
mov
gs
mov
cld
hlt
dec
inc
data16
xchg
insb
xor
xchg
jmp
ret
leave
je
sbb
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
jg
mov
xchg
movlps
xchg
cmpsl
dec
call
scas
jecxz
inc
and
cwtl
fcomps
lods
rol
bound
xchg
mov
mov
mov
lret
lret
gs
inc
or
icebp
sbb
adc
pop
and
push
dec
adc
dec
insb
ljmp
icebp
push
gs
cmpl
sbbl
sub
jo
mov
push
loope
sbb
sbb
mov
adc
pop
adc
xor
cmpsb
cmp
sbb
xor
inc
clc
ret
pop
das
cmp
xor
sbb
loop
fldl
xchg
push
sub
jecxz
out
xchg
adc
xor
mov
addb
addr16
adc
add
out
ret
sahf
push
xchg
test
xchg
xor
js
jmp
test
mov
and
fisubrs
jp
sub
and
push
mov
popa
mov
dec
cmp
inc
aam
xlat
movsl
mov
lea
add
fistl
xor
pop
ret
std
mov
xor
add
push
cmp
xor
stc
add
mov
xor
push
xor
push
mov
test
or
movsl
mov
and
fnstenv
sarb
vmread
mov
pusha
stos
cmp
outsl
test
rclb
xor
or
into
xchg
sub
jbe
mov
sbb
out
scas
aaa
leave
mov
dec
xlat
das
mov
fnsave
leave
push
ja
shl
fldl
in
add
add
xchg
xchg
adc
sub
fisubrl
lds
pusha
ja
fisubrl
adc
lods
sbb
and
es
call
lret
xor
sub
add
ja
jg
adc
int
dec
bound
idivl
scas
xor
or
loopne
fcomip
push
push
outsb
sbb
cmp
es
xchg
aas
loop
test
ljmp
jne
push
pushf
inc
ss
fwait
shlb
icebp
or
pop
inc
mov
add
ret
push
gs
dec
imul
adc
fidivs
pop
test
hlt
jbe
pusha
push
jmp
sub
movsb
push
test
insl
xlat
inc
es
sbb
movsl
mov
push
mov
repnz
push
lds
in
out
add
rol
add
inc
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
ss
adc
mov
lret
je
cmpsb
push
sti
jle
push
inc
inc
fs
adc
in
cmp
imul
push
loope
cld
mov
cmp
adc
or
outsl
jo
xchg
lods
leave
add
pushf
fildl
mov
adc
and
sbb
stos
dec
push
popf
and
jg
mov
fbstp
lds
js
pop
sbb
mov
pop
jmp
or
test
test
lods
enter
xchg
je
stos
mov
mov
sahf
adc
nop
mov
scas
add
test
add
jns
pop
test
shlb
adc
pop
dec
fidivl
jmp
enter
filds
adc
add
add
sti
fdivs
js
sbb
leave
xchg
or
outsb
jno
jno
std
pop
rorl
jne
cmpsl
movaps
stos
cld
jecxz
out
ficompl
ret
stos
ja
test
fidivrs
hlt
sub
add
loopne
add
movsb
enter
fdivrl
fldcw
in
or
push
mov
add
xor
pop
inc
pop
or
jns
and
in
or
jle
xlat
fmull
pop
jno
nop
xor
lods
adc
je
leave
out
insb
push
stc
or
add
dec
add
sahf
fcmovne
mov
mov
sub
js
fisttpl
xchg
fsts
pop
pop
mov
sti
inc
out
sub
mov
imul
adc
inc
jl
jae
push
mov
cmc
mov
mov
mov
adc
inc
jl
nop
inc
xchg
fwait
dec
leave
stos
mov
aad
sub
out
loopne
add
shll
aad
outsl
les
jmp
or
mov
stos
test
pop
enter
dec
cld
pop
dec
xchg
lods
es
adcl
mov
fcomip
mov
or
jge
push
sar
pop
push
xchg
cs
mov
jle
test
jne
out
arpl
repz
adc
lahf
fistps
jmp
mov
mov
sahf
or
test
or
fwait
jo
push
dec
pop
in
xor
add
ffree
cmp
sahf
mov
fcmovnu
cld
inc
js
push
jmp
sbb
fbld
enter
sahf
and
cltd
pop
cld
iret
mov
lods
fildll
clc
rclb
xlat
flds
aaa
mov
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
lds
adc
adc
jns
or
sti
sbb
mov
je
xor
mov
adc
fwait
mov
les
insb
mov
pushf
scas
popf
faddp
cmpsl
or
xlat
dec
pop
jp
push
popf
push
push
xor
lea
mov
popa
lret
cmp
fnstenv
aam
cmp
ret
fsub
push
je
scas
cmp
inc
ljmp
mov
mov
push
xchg
orb
mov
stos
jmp
adc
jns
dec
sti
push
xchg
or
jns
mov
pop
iret
mov
outsl
scas
push
lds
bsr
jg
fisubl
adc
xchg
xchg
pop
mov
sbb
sbb
movsl
stc
cmp
stc
repz
mov
scas
comiss
fs
jb
int
and
adc
lcall
mov
jecxz
lods
mov
mov
out
jl
dec
add
hlt
dec
add
test
sbb
je
adc
lock
sar
out
add
gs
dec
sar
gs
rorb
lods
into
pop
pop
xchg
outsl
cmp
jb
mov
popf
pushf
fs
repz
xchg
fildl
dec
ret
outsl
icebp
add
pop
add
ljmp
stos
xchg
adc
cwtl
inc
push
and
popf
mov
sbb
jle
dec
mov
xchg
xchg
mov
xchg
jb
outsl
mov
cmpsl
ljmp
push
mov
into
push
daa
sbb
xlat
cltd
push
jge
test
jge
dec
dec
sbb
mov
std
daa
cltd
insb
mov
pop
imul
cld
inc
call
fwait
loopne
sub
pop
mov
mov
add
frstor
lret
imul
sbb
hlt
fisubrs
xor
mov
lcall
mov
popa
mov
hlt
adc
imul
aam
gs
clc
test
sub
inc
jmp
push
hlt
movq
pop
into
scas
mov
add
cmp
mov
add
jp
mov
sbb
mov
inc
jns
movsl
pop
mov
scas
xor
inc
ljmp
std
xor
inc
push
jp
pop
sub
lods
mov
push
jne
lods
stos
not
fisttpll
sub
test
xchg
lock
mov
sbb
test
ss
ds
add
push
cmp
mov
cwtl
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
xchg
aad
js
in
adc
loop
fistpll
push
fwait
adc
xchg
icebp
or
ja
xchg
aam
in
push
mov
jecxz
sub
bound
or
xchg
and
test
je
mov
cmpsb
jmp
lahf
inc
bound
mov
add
test
clc
xor
ret
icebp
outsl
and
dec
aas
mov
cltd
pop
loop
or
stc
xor
jns
ja
mov
rolb
adc
jne
adc
fcoms
inc
push
call
add
pop
mov
xchg
in
mov
jge
lret
mov
xor
xor
push
pop
adcl
cltd
pop
push
lret
pushf
push
jg
popa
outsl
inc
lcall
sub
scas
jo
aaa
adc
fisubrs
mov
xchg
orl
cmp
test
dec
jecxz
xchg
sbb
repnz
pusha
sbb
mov
and
lds
or
add
sahf
cmp
rcrb
and
pusha
insb
mov
push
mov
cs
ja
fmull
inc
mov
cmp
vsqrtps
das
pop
cmc
inc
xchg
ret
mov
addl
cs
mov
scas
push
inc
mov
inc
dec
pop
inc
lds
fldenv
push
add
cmp
and
and
pop
out
push
mov
mov
push
ret
ja
sub
xor
outsl
je
xchg
sub
jmp
sbb
sti
outsl
mov
adc
inc
int3
or
sbb
frstor
pop
fnstenv
not
dec
xchg
push
fdivs
cmp
decb
ljmp
cwtl
filds
test
xor
pop
or
push
lods
inc
ljmp
jp
stos
in
enter
mov
movsb
push
jmp
hlt
das
ret
dec
sbb
movsb
outsl
movsl
mov
push
add
jnp
cmp
sub
cmpl
in
sub
call
movsb
out
outsl
stc
cmpsb
scas
cld
mov
paddq
clc
fstp
push
xor
ret
sbb
mov
xor
shrl
shlb
inc
xchg
mov
rcrl
adc
imul
mov
testb
push
and
and
lea
pop
inc
shll
dec
push
mov
stos
pop
pop
out
ja
sub
sti
add
icebp
mov
or
aaa
ds
push
fwait
stos
or
mov
sbb
mov
icebp
int
in
das
mov
aas
nop
jg
pop
aad
jnp
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
sbb
loopne
adc
or
addr16
inc
rcrl
or
jno
loopne
jne
or
and
jae
push
mov
mov
xchg
ror
xchg
aad
xchg
rolb
fcomps
add
data16
cmc
subl
xchg
xchg
mov
insl
mov
ret
xchg
cmp
movsl
xor
negb
adc
sub
jo
fsts
cmpsb
and
jno
in
gs
adc
push
insl
int
sub
push
cmp
ficompl
test
sbb
cmpb
aad
data16
jecxz
push
pop
sahf
mov
push
xchg
insb
or
xchg
and
or
cmp
pop
imulb
sbb
cmc
outsb
push
fidivl
mov
fwait
sbbl
out
or
sbb
lods
inc
aaa
loope
gs
and
dec
push
mov
push
mov
push
call
adc
xchg
mov
mov
push
sub
bound
mov
pop
fldl
std
popf
stos
mov
rol
or
in
xor
mov
gs
mov
xor
push
aas
cmp
xchg
mov
hlt
jbe
cwtl
in
arpl
dec
sbb
je
sub
push
push
mov
loop
mov
mov
mov
lods
inc
imul
inc
jbe
sti
adc
mov
mov
lret
push
gs
cmp
in
outsl
dec
pop
fnsave
out
into
mov
sbb
xor
mov
aaa
je
leave
js
imul
xchg
clc
pusha
xchg
aaa
jp
pop
roll
push
mov
pushf
sarl
and
inc
popa
test
cmp
push
cld
jge
cld
inc
rcr
pop
movsl
sti
cmc
cmc
mov
mov
sub
mov
add
cld
jmp
xchg
lcall
ljmp
ja
orb
mov
mov
lods
sti
and
outsl
jns
cmpsb
mov
lahf
bound
outsl
add
add
xchg
lcall
push
pop
dec
out
dec
sbb
mov
adc
or
mov
lods
mov
or
ja
fldenv
pusha
mov
and
mov
cs
gs
ror
cmp
les
popf
adc
pusha
icebp
sbb
ret
rcrb
ja
shl
repz
rcrl
push
pusha
sbb
outsb
push
mov
jo
jp
mov
and
xchg
sub
cmp
dec
and
pop
into
aas
and
aas
sbb
les
sbb
sbb
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
nop
cmp
int
xor
mov
sbb
lcall
dec
xor
hlt
test
inc
jge
out
adc
test
push
hlt
or
xor
xor
add
or
ds
arpl
pusha
push
fidivl
into
sbb
and
cmp
cs
jp
imul
out
pop
xchg
adc
jno
cmc
test
aas
jge
test
sbb
int3
mov
out
jp
cltd
cmpsl
mov
adc
xchg
das
sbb
mov
movsl
adcb
fnstcw
mov
adc
mov
sbb
push
mov
loop
fadds
lock
bound
std
jae
sub
fcmove
cmp
sub
test
out
mov
movsl
adc
inc
push
mov
stos
jge
aam
cmp
pop
rolb
sub
add
mov
lds
inc
xchg
inc
subb
or
pop
mov
jno
outsb
pop
xor
cmp
out
mov
out
mov
ret
popw
imul
dec
jg
mov
and
sub
addr16
cmp
mov
jbe
mull
js
sbb
dec
pop
scas
pop
pop
jle
fstps
dec
sub
in
push
push
scas
jbe
push
lcall
pop
test
dec
xchg
jae
nop
movl
cmpsb
fsub
sub
pop
daa
lock
test
movb
mov
adc
add
ret
push
shrl
push
fwait
jmp
repnz
jg
mov
adcl
enter
jecxz
sub
jne
les
cmp
imul
ds
push
pusha
fiadds
mov
aad
jl
jbe
test
xor
mov
adc
mov
insl
fsubs
aas
call
mov
jl
movsl
incb
lods
jo
in
add
fs
aaa
adc
lret
push
loop
out
xchg
sub
fwait
adc
ror
ss
jg
cwtl
sub
sub
repz
in
lods
out
lret
cmp
pop
jecxz
xor
jnp
stos
mov
leave
push
xor
insl
out
popf
inc
fimull
cmp
add
outsl
call
xchg
or
or
mov
int
mov
mov
adc
inc
sub
movsb
dec
mov
or
sub
ds
xchg
ret
addr16
jb
push
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
aas
sbb
aam
adc
dec
leave
das
es
or
jbe
pop
xchg
add
fimull
inc
notl
mov
sub
pop
popf
jmp
cli
rorl
push
arpl
int
mov
mov
ret
adc
jp
dec
nop
pusha
mov
xchg
mov
push
xor
xor
xchg
aam
sub
lods
jmp
ficomps
popa
pusha
push
pop
or
movsl
test
push
dec
div
addl
jnp
aam
arpl
ficoml
and
mov
xor
dec
or
mov
rcrb
cld
outsl
lea
mov
out
int3
sub
jle
mov
or
ds
xor
pop
int3
call
hlt
xor
cmpsb
mov
cmpsb
and
test
inc
movsl
mov
cld
cmpsb
push
push
and
jns
pop
cs
pop
ljmp
das
mov
fcoml
push
lret
push
jne
inc
xlat
es
sahf
or
mov
repnz
jmp
stc
jl
das
hlt
cmp
mov
sti
lds
xchg
and
add
imul
dec
es
or
les
xor
mov
addl
push
pop
mov
test
call
bound
inc
lods
mov
fldcw
pop
mov
cmpsl
mov
shll
cmp
add
dec
xchg
sbb
mov
push
dec
mov
mov
stos
cmp
icebp
ret
ds
pushf
lock
xor
push
lret
cmc
lods
in
popa
movsb
dec
cmp
push
cwtl
leave
inc
sbb
jmp
insl
cmp
lods
pop
push
xchg
xor
cmpsl
out
sti
push
xchg
rcrb
mov
ja
lahf
sbb
mov
daa
inc
jge
hlt
fwait
push
stos
inc
call
fiaddl
jle
jmp
jle
aad
mov
cwtl
into
or
or
xchg
test
add
pop
jns
cmp
lds
dec
dec
mov
not
inc
pop
cmp
sbb
outsl
insl
pop
fcom
inc
mov
pop
add
test
add
mov
sub
add
dec
xchg
jb
fwait
gs
mov
data16
js
popf
xor
loopne
mov
test
cmp
ret
les
or
jle
addr16
cmpsl
xor
push
lea
stos
out
repnz
push
add
jge
stos
pop
fs
cmp
push
aad
inc
mov
and
cmp
leave
out
xchg
lahf
cmp
and
les
xchg
inc
xcrypt-ctr
cmpsl
pop
jae
test
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
faddl
pop
arpl
ret
and
xchg
xchg
jle
loopne
je
or
imul
inc
adc
pop
sub
add
clc
and
jb
lock
or
mov
xor
mov
mov
lret
inc
popf
cld
loope
fiaddl
xor
xchg
dec
and
xchg
ret
loop
into
or
cmp
push
push
rorl
lods
data16
call
and
pop
outsb
push
jge
push
enter
push
push
sbb
xchg
mov
addl
dec
mov
cmp
movsl
cmp
dec
lea
js
or
aad
in
mov
pop
mov
repnz
mov
push
popf
mov
ror
inc
dec
out
mov
push
xor
out
mov
push
aas
inc
sub
je
rcll
jbe
jne
push
pop
lret
cld
xchg
push
lds
mov
sar
lcall
push
adc
push
sub
pusha
xchg
add
sti
dec
add
mov
xchg
xchg
mov
out
lret
hlt
lcall
rclb
inc
jno
xchg
lcall
icebp
cmp
shlb
insb
dec
ja
scas
mov
hlt
xchg
push
jb
cmpb
push
mov
lods
enter
xchg
outsb
stos
imul
jno
pop
mov
sub
sbb
jl
into
pushf
dec
stos
and
ja
xchg
rorb
jo
dec
das
jae
ljmp
ljmp
jecxz
mov
sbb
or
sti
jmp
test
call
jbe
loop
adc
enter
or
mov
push
mov
and
movsb
das
aam
shl
iret
in
subl
jecxz
sbb
out
jae
frstor
sub
cmp
stos
int
leave
inc
je
add
incl
add
call
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
ret
scas
into
adc
adc
mov
sbb
movsb
fnstcw
inc
push
fs
inc
outsb
lods
out
xchg
or
movsl
and
js
pushf
dec
lods
sub
movsb
repz
cmp
push
loope
cmp
inc
push
sub
push
adc
sbb
into
xlat
sbb
arpl
mov
push
movsl
andl
dec
in
jmp
xchg
adc
push
jp
mov
mov
cmp
cmp
adc
mov
add
movsl
out
std
sbb
rcr
stos
or
test
sub
movsb
ret
mov
call
inc
jns
jg
jmp
ret
xor
jecxz
aam
sbb
sbb
jmp
cwtl
push
mov
in
outsb
aas
aaa
push
pop
aad
dec
jecxz
cmc
mov
loope
jnp
loop
push
out
xchg
ja
sbb
call
cmp
xchg
dec
lods
dec
mov
cmc
insb
out
lods
sbb
ficoml
test
xlat
dec
adc
subb
jl,pt
incl
xchg
icebp
jp
psllw
nop
fistpl
mov
sarl
xor
sbb
push
adc
and
mov
or
mov
test
jp
pushf
int
push
mov
mov
adc
xchg
mov
xor
mov
js
shlb
push
inc
repnz
push
inc
push
mov
pop
cmpsl
xor
jle
pusha
adc
xor
leave
dec
bound
mov
out
or
mov
push
aam
pop
pusha
mov
ret
jb
inc
std
setne
sbb
xchg
insb
push
inc
inc
inc
mov
jecxz
mov
adc
stos
jmp
hlt
ret
mov
je
xchg
rorl
mov
push
outsb
mov
pop
enter
sbb
lods
sbb
mov
xor
in
mov
mov
pop
xor
in
lahf
pop
mov
xor
shll
test
inc
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
pop
mov
adc
movlps
cmp
dec
mov
dec
xor
push
mov
fwait
aad
ljmp
xchg
and
fmull
stos
lock
sub
inc
shlb
fdivp
mov
hlt
in
mov
mov
repnz
push
sbbl
jge
sbb
outsl
inc
loop
mov
inc
xchg
fsts
or
pop
xor
mov
lret
sub
xor
xchg
xchg
dec
repz
movsl
dec
jle
rcrl
jmp
sbb
fs
iret
cmc
inc
xor
mov
test
cwtl
ret
or
pop
sub
jno
mov
and
sub
mov
xor
push
xor
nop
cmpsl
jno
les
test
insl
cmp
out
fidivs
inc
gs
pmullw
popa
xorl
mov
scas
push
cmp
inc
xchg
rolb
mov
push
test
inc
int
add
insl
sub
and
fcompl
mov
jo
int
add
aam
and
fstl
gs
ret
add
and
cmp
cwtl
pop
or
cmpsl
xor
cs
sub
les
test
mov
adc
jb
fimull
in
cmp
mov
call
dec
movsb
iret
les
out
xor
inc
enter
in
fisttpl
cwtl
add
jae
and
shrb
cs
rorl
and
xor
test
xchg
pushf
mov
iret
push
add
and
mov
sub
fstpl
fbstp
aaa
pop
iret
test
stc
test
or
sub
daa
and
aam
inc
or
sti
jnp
es
cmp
rcrl
push
and
mov
inc
gs
xor
pop
fwait
cmp
or
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
sbb
js
adc
adc
cmp
loope
jecxz
out
or
adc
sti
in
push
pop
insl
mov
fistpll
push
sti
sub
pop
push
cs
xchg
jae
jb
les
lods
stos
jnp
jns
rcrl
into
cmp
sub
xchg
incl
into
enter
sahf
enter
xchg
push
sbbb
adc
imul
cmp
cmpsb
pop
inc
insl
cli
or
lods
test
mov
mov
scas
icebp
lock
popf
jmp
sahf
test
adc
int3
push
andl
aas
mov
int3
hlt
loopne
out
xchg
test
int
iret
or
js
movsl
imul
pop
cmpb
in
mov
inc
mov
ret
lock
insb
in
xchg
inc
les
mov
jp
xor
lds
pop
cltd
lds
out
mov
call
loop
or
sbb
sub
cmp
aaa
pop
aam
enter
sub
push
pop
xor
mov
mov
subl
shll
dec
pop
outsl
jge
cli
mov
mov
cmp
mov
lock
addr16
dec
or
push
and
jge
xchg
test
xor
mov
dec
mov
mov
pop
mov
push
add
aas
sahf
xchg
lea
lret
mov
divb
pop
add
shrb
fwait
sbb
mov
jmp
arpl
mov
cmp
in
pop
pushf
push
adc
popf
in
jbe
sbb
pop
or
push
lock
cmpsl
mov
arpl
and
aam
push
cld
pop
xchg
cwtl
mov
pop
jb
daa
rorb
repz
push
fidivrl
sbb
lods
cmpsb
inc
dec
inc
pop
jg
aaa
out
divb
xchg
test
sub
xchg
xchg
mov
or
inc
pop
add
mov
fnsave
adc
mov
or
xchg
pop
push
inc
aas
add
arpl
andnps
pop
adc
ljmp
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
xor
enter
cmpsl
sbb
fwait
xlat
push
sub
divb
xor
inc
out
dec
xor
mov
hlt
fwait
jbe
xor
mov
fildll
repz
fucomi
aam
xor
dec
cli
xor
popa
cmpsb
jae
adc
enter
sub
outsb
dec
adcb
xor
jge
pushf
cld
sub
in
xor
push
pop
sub
stos
call
xchg
rorl
mov
mov
pop
stos
push
jo
xchg
inc
mov
mov
enter
adc
daa
jp
gs
lock
js
jp
gs
mov
mov
jle
pop
addr16
lret
xchg
sub
and
mov
jmp
jge
sub
fmuls
adc
dec
jl
mov
mov
or
mov
repnz
data16
stos
jge
add
popf
ficoml
mov
cltd
adc
sbb
sub
out
sbb
mov
add
fsubs
out
loope
into
and
stos
out
cmpsl
mov
test
dec
and
xor
mov
lods
fidivs
inc
pop
or
push
mov
negb
aad
cs
jnp
pop
adc
xchg
mov
add
inc
and
outsb
jnp
cltd
adc
mov
add
sub
pop
sbb
cmp
jge
repnz
xor
xor
imul
rorl
pop
in
fcoms
fwait
iret
pushf
jecxz
and
popa
ljmp
enter
ljmp
inc
repz
xchg
ret
jg
cmp
or
pusha
in
xor
cmp
int
and
in
adc
into
cwtl
jns
in
adc
jecxz
xor
enter
ljmp
pop
ss
xchg
aad
ret
xlat
inc
sub
jmp
mov
jecxz
outsb
es
addb
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
lcall
enter
mov
sbb
adc
xchg
in
sbb
in
fimuls
jne
adc
pop
cltd
pop
iret
cmpsb
add
xchg
xor
mov
lcall
loope
pause
inc
call
push
or
fwait
mov
notl
ljmp
ret
clc
mov
push
sub
ja
dec
dec
add
call
mov
and
rolb
sub
push
inc
cmp
outsl
jp
sti
sysret
jl
mov
xor
int
jmp
shrb
mov
adcl
int
mov
mov
test
jae
push
into
pop
fabs
mov
dec
fadd
lahf
and
jl
fmull
lods
ljmp
cmp
mov
jp
aas
dec
sti
lret
and
sbb
xor
sbb
sbb
xchg
ja
in
mov
outsl
std
xchg
test
arpl
shlb
sahf
sub
adcb
mov
or
jo
out
in
push
imul
cli
pop
repz
adcl
movsb
adc
jns
out
shrb
jbe
fldcw
sub
add
sbb
int
clc
or
inc
cmp
push
pop
ja
divl
stc
add
xchg
sub
ret
inc
inc
fisubrs
ss
loopne
pop
stos
movsb
aad
pop
add
cs
out
out
cmpsb
rol
repnz
adc
mov
stc
push
popf
nop
pushf
andb
push
fstpt
aad
mov
and
pop
cmp
sti
mov
sahf
aad
insb
clc
shlb
movl
sbb
fisubrs
mov
imul
xchg
cmpsl
push
gs
pusha
cli
shlb
cmpsl
dec
fwait
mov
test
xchg
inc
int
in
fisttps
pusha
shl
jl
dec
dec
sbb
pop
xchg
sub
stc
mov
jo
incl
testb
adc
test
cltd
out
add
mov
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
std
jle
mov
adc
shr
xchg
jmp
loopne
push
mov
stos
insl
nopl
outsl
mov
cld
push
pop
ss
cld
imul
and
inc
insl
mov
push
dec
cld
pushf
fdivrs
sbb
aad
das
pop
pop
add
cmp
pop
leave
push
mov
subl
push
data16
sub
shl
loop
std
cs
push
js
test
jp
jg
jnp
sbb
cmp
je
inc
ficoml
add
mov
lret
pop
fildl
lock
inc
jns
in
pushf
shr
push
jns
stos
and
pop
jle
and
and
out
xchg
cmp
push
sub
dec
jae
add
jbe
insl
lahf
inc
mov
add
test
js
xor
jl
iret
adc
xchg
push
sub
sbb
faddl
loopne
lock
jg
lods
xor
cmp
je
subb
dec
ds
and
mov
push
insb
mov
cmp
jmp
add
add
call
fldl
mov
nop
sbb
sub
lods
and
repnz
mov
test
inc
popa
es
inc
popa
sbb
insl
ss
cli
mov
push
clc
scas
leave
ficoms
outsb
push
les
jne
cld
adc
push
inc
sarl
and
inc
sub
add
sbb
or
test
popf
mov
push
insb
xchg
xor
mov
pop
out
jl
inc
pop
xchg
xchg
shrl
outsl
jecxz
cmc
lahf
shlb
pand
add
or
xlat
xchg
push
test
push
push
je
repz
daa
movsb
inc
ja
fcoml
divl
lods
push
test
cwtl
sti
adc
lock
idivb
stc
shll
outsl
clc
mov
inc
sahf
js
js
lret
out
mov
movsb
shl
lahf
sub
sbb
sbb
lret
loopne
xchg
jg
push
add
out
xchg
mov
jnp
addr16
jg
jbe
lock
mov
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
sub
enter
sub
test
pop
lahf
xchg
xchg
and
mov
or
adcb
sub
je
test
adc
lods
push
movsb
aam
arpl
int3
push
jl
fstpl
xor
sbb
imul
sbb
mov
fwait
je
enter
dec
popf
mov
stos
movsb
aam
int3
adc
lcall
in
cli
xchg
std
shrl
es
repnz
bound
mov
sub
hlt
es
push
lret
outsl
xor
int3
pop
in
sahf
inc
inc
mov
pop
leave
test
mov
pop
dec
mov
iret
pop
iret
pop
xchg
adc
pop
and
shl
out
sahf
and
mov
xor
cltd
jno
jmp
xorl
xor
ds
std
ret
ja
xchg
cmpl
dec
stos
xchg
mov
mov
push
pop
ja
pop
notl
dec
mov
shlb
sub
nop
imul
fldcw
sbb
lods
xchg
xlat
dec
fldl
sub
cmp
movsl
stos
loope
xchg
inc
mov
xchg
xor
cmc
sub
mov
shlb
lods
pop
dec
adc
add
jns
outsl
lea
mov
adcb
push
icebp
fnsetpm(287
push
int3
adc
in
dec
cwtl
mov
add
mov
roll
sbb
nop
insb
movsl
xor
mov
aas
mov
inc
scas
xor
xchg
push
cmp
inc
dec
mov
pop
adc
je
cmp
inc
inc
adc
imul
iret
mov
imul
scas
cmp
add
xchg
dec
cmpsl
popf
push
pop
dec
mov
mov
lods
or
int3
sbb
jbe
jge
stos
repnz
sub
popa
lahf
mov
test
jle
xlat
mov
cmp
adc
push
cwtl
imul
fsts
sbb
mov
fstps
gs
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
test
adc
adc
ljmp
sti
push
jle
shrb
lret
add
cltd
faddl
fwait
shrl
xchg
jbe
inc
sub
mov
pop
hlt
cmpb
xor
adc
jo
adcb
push
pop
loopne
test
js
mov
add
cmp
jno
out
sbb
push
dec
lea
rclb
or
cmp
and
ja
pop
mov
dec
jb
mov
dec
cld
jge
jae
inc
jbe
xorb
das
cmovp
mov
fs
adc
lret
in
dec
movnti
pop
cld
hlt
jp
in
lcall
in
imul
pop
iret
adc
aaa
add
frstor
jns
mov
fldenv
push
mov
lods
call
aaa
mov
ja
xor
fst
sti
sbb
jae
je
mov
dec
vmovsldup
aas
pop
xor
fucomip
stos
push
xchg
adc
lea
pop
neg
jecxz
aam
jecxz
je
out
in
xchg
sbbl
jb
push
cmpsl
movsb
sbb
mov
call
push
sarl
add
xchg
lods
insb
mov
sub
add
push
sbb
es
daa
or
lcall
sub
xchg
addl
and
jne
faddl
push
dec
insl
and
push
jae
in
sbb
subb
aam
push
jnp
xor
jg
js
mov
xor
cmp
mov
xchg
adc
imul
push
pop
pop
pop
jmp
and
and
sbbb
jo
add
fcoms
add
imul
mov
jle
xchg
inc
sub
pushf
jb
addl
mov
inc
inc
lea
das
imul
mov
les
fmul
and
inc
cmpsb
pop
popf
scas
add
sub
sbb
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
out
mov
adc
adc
jmp
inc
or
mov
stc
dec
push
or
jp
push
cwtl
add
and
fisttpl
aad
mov
push
push
xchg
comiss
mov
mov
xor
mov
movsl
fstl
outsb
xor
aas
inc
xchg
mov
add
pop
mov
dec
adc
inc
out
loop
ja
push
pop
inc
hlt
pop
call
int
mov
pusha
adc
sbb
cmp
jle
nop
inc
xor
std
jl
mov
dec
fistpl
hlt
xchg
xchg
jae
inc
rolb
sahf
pop
das
add
jne
icebp
xchg
lods
sti
jge
xor
shlb
leave
lret
xlat
outsl
jge
xor
push
cmp
jp
loopne
inc
in
lahf
cwtl
mov
int3
dec
es
sbb
jae
mov
fdivr
push
push
in
jle
test
arpl
xor
data16
or
ja
lcall
dec
xchg
mov
mov
iret
xchg
inc
jg
hlt
and
inc
pop
sub
xchg
inc
lods
cwtl
mov
imul
ret
xchg
ret
leave
mov
aaa
xchg
xchg
pop
mov
mov
lcall
push
rcll
leave
pop
shl
int
addr16
sub
mov
and
push
pop
out
pop
lods
ret
movb
lods
and
mov
es
mov
les
outsl
repz
xchg
xchg
call
push
loope
in
jl
mov
sub
xor
dec
ficoml
lds
mov
in
mov
fnstcw
sub
insl
daa
jno
pushf
scas
or
leave
sbb
out
push
pop
arpl
push
idiv
cmp
stc
jge
xchg
jae
les
arpl
mov
stos
mov
hlt
or
xchg
ljmp
dec
xlat
test
lret
xor
lret
push
jp
dec
xor
and
cwtl
sbb
dec
in
cmc
mov
push
scas
popf
outsl
mov
mov
mov
pop
mov
push
sub
xchg
sbbb
adc
ret
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
insb
jle
add
adc
jns
das
aad
mov
mov
pop
movsb
cmp
xchg
dec
add
sub
xlat
xchg
xor
pop
pop
imul
push
xor
popl
lea
test
mov
add
cmp
sbb
les
mov
jge
cmp
mov
dec
cmp
movsb
nop
imul
pushf
ljmp
inc
rorl
aad
mov
mov
cmpsb
mov
movsb
sub
rolb
pusha
test
dec
cmpl
jmp
subb
cltd
jb
dec
lods
mov
ret
add
pusha
out
jmp
mov
nop
stos
add
mov
sbb
shrb
ja
xchg
mov
cmp
inc
outsl
pop
and
or
xor
xor
dec
clc
lret
enter
stos
push
scas
popf
popf
mov
insb
jmp
rorl
out
push
in
jo
mov
or
pop
xor
mov
dec
mov
jecxz
outsl
push
xor
dec
lods
ror
cld
pandn
clc
fisubrl
aad
cwtl
je
arpl
add
pop
jmp
fisubs
mov
loop
scas
adcl
mov
aaa
cld
adc
cld
adc
or
popa
xchg
sbb
jg
fists
cmpsl
add
ss
mov
fstpl
jl
stc
mov
mov
pop
push
push
into
jno
sub
lahf
add
or
push
push
cli
jg
dec
enter
xchg
lds
or
cmp
int
adc
ret
test
fsubrl
pusha
fadd
or
sti
arpl
test
pop
add
xchg
pop
std
stos
aad
shrb
or
jle
pushf
push
es
icebp
movsb
fcoml
xor
dec
push
sbb
jns
lea
rcll
lret
sbb
fcoml
push
jbe
movsb
loopne
movsb
mov
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
inc
adc
mov
adc
loop
and
subl
jmp
xor
cmp
mov
add
movsl
jo
in
push
mov
xor
in
sbb
data16
sbb
or
fs
add
xchg
cwtl
mov
pop
stos
rcrb
inc
sahf
les
mov
rorb
xchg
and
sub
sub
add
lods
mov
jbe
loop
pop
and
push
mov
dec
lods
test
push
jg
dec
ss
inc
pop
ret
add
dec
mov
imul
lds
in
pop
dec
dec
or
movsl
ds
icebp
inc
insl
in
mov
out
jmp
sbb
rcrl
fidivrs
or
add
cmc
mov
dec
mov
mov
mov
fcomps
incl
and
or
rep
mov
sbb
jg
sahf
sbb
push
push
mul
out
jb
xlat
mov
pop
mov
jo
fnsave
sbb
mov
pop
pop
jg
jnp
fnstcw
rcrb
add
ljmp
cmpsb
adc
loopne
ss
jmp
sbb
iret
cmp
inc
cmp
mov
mov
xchg
movsl
cmp
jo
aaa
and
sti
sub
jecxz
add
jns
mov
aad
push
pusha
divb
sbb
dec
jnp
aad
out
sub
pop
inc
xchg
xor
pop
fnstcw
lahf
fstpt
push
jle
out
in
insl
divl
pop
fcoml
lods
cmp
movsb
sbb
test
dec
push
mov
cmp
jp
xor
pop
shrb
cwtl
pop
fcomp
add
outsb
outsb
xor
ficomps
mov
stos
cmp
pop
incl
jl
push
mov
fsubl
movsl
pop
or
cwtl
and
sbb
xorl
popf
repnz
sub
leave
test
push
rcrb
pandn
mov
push
mov
pushf
xor
addr16
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
push
pushf
adc
adc
loop
pop
movsl
outsl
movsl
pop
jb
adc
or
mov
push
cwtl
daa
aad
push
out
sbb
mov
and
jle
xlat
sbb
inc
jmp
hlt
mov
dec
cmc
js
aam
jmp
shll
out
sub
xor
xlat
jns
inc
dec
mov
mov
and
fdivp
ret
repz
sbb
and
rol
mov
insl
fldl
lahf
dec
jo
aas
jge
divl
cmp
inc
movsb
js
xor
andl
sbb
js
cld
mov
mov
arpl
dec
shlb
imul
pop
std
ja
sub
push
dec
mov
les
cltd
mov
push
fldl2e
idivb
xchg
fldenv
inc
mov
gs
cmc
iret
xchg
loop
sbb
xchg
fdivl
mov
adc
decb
dec
add
outsl
das
stos
icebp
mov
addr16
sub
xorl
add
and
inc
fcmovnbe
int3
push
gs
mov
push
lcall
sbb
cmc
xchg
rorb
sbb
push
mov
sarl
test
jmp
push
pop
dec
lock
and
push
jb
ret
hlt
mov
dec
mov
mov
push
inc
push
sti
outsl
push
pushf
pop
icebp
test
cld
nop
or
mov
push
add
std
aam
or
popf
sub
out
xchg
sub
insl
std
mov
test
jecxz
xor
loop
in
mov
push
jg
ja
out
cmc
add
jne
aam
push
shrb
push
loope
push
cmp
push
loop
out
push
hlt
push
adc
or
cmpl
sbb
jnp
sbb
cmp
lds
xor
jecxz
negl
pop
push
cmp
sub
gs
inc
mov
fldcw
ds
xchg
in
scas
imul
or
bound
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
jne
mov
enter
pop
scas
loop
add
je
pop
xchg
jb
push
jp
frndint
dec
aas
int3
mov
test
movsb
mov
dec
sbb
test
mov
in
sub
ds
cwtl
scas
dec
sub
or
xor
enter
xchg
jns
mov
mov
add
pop
or
jmp
add
outsb
dec
test
push
and
fcompl
push
push
xchg
sbb
push
repz
fs
repz
rorl
cwtl
out
push
xor
sub
pop
cld
mov
lcall
xchg
pop
push
mov
cwtl
xchg
out
mov
insl
or
jnp
test
push
rcrl
subb
in
in
cltd
push
imul
mov
fyl2xp1
lea
mov
mov
xchg
sub
les
xchg
dec
rcl
push
fcomps
mov
dec
add
out
aam
xchg
fnstsw
es
mov
mov
sbb
push
fwait
xor
icebp
mov
xor
int3
hlt
pop
mov
ds
test
cld
sahf
mov
div
jmp
js
adcb
mov
xchg
shlb
fistpl
jae
xchg
sub
sbb
cwtl
xchg
sbb
rorb
leave
inc
mov
mov
mov
flds
movsl
jp
xorb
aaa
std
mov
lods
mov
add
test
jae
lahf
rcrl
push
mov
xchg
sbb
and
gs
add
jle
sbb
je
push
and
xlat
cmc
inc
je
inc
dec
mov
jg
dec
test
push
popf
adc
ds
enter
les
mov
jle
das
fsubs
push
mov
pop
sbb
xchg
icebp
sbb
mov
jbe
loop
xchg
into
lahf
push
xchg
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
mov
js
xchg
adc
adc
daa
fbld
sbb
out
sarb
or
add
jae
incl
mov
dec
xchg
mov
or
add
out
shrb
lods
enter
or
mov
out
xor
xor
push
int3
push
xchg
pop
mov
and
mov
push
repz
mov
enter
jae
hlt
sti
testl
pshufw
enter
mov
clc
jp
pop
dec
fistl
and
sub
cmp
cli
mov
iret
inc
cmp
add
lds
lcall
pop
push
ds
insl
stc
xorl
aad
ds
adcb
rol
xchg
add
pop
imul
cmp
xor
int3
addr16
xchg
add
push
pop
lock
ja
aas
lahf
add
sbb
lret
xchg
lcall
mov
ret
dec
dec
inc
aam
sub
jae
jbe
mov
add
mov
jge
push
popa
and
sbb
xchg
int
lea
dec
test
nop
or
xchg
or
and
add
sahf
xchg
fisubrl
fists
sbb
inc
lods
ja
test
int3
xchg
cmc
xchg
lock
in
cltd
jnp
jmp
mov
loop
popa
fdivs
push
in
cmp
jb
inc
push
lcall
dec
cwtl
loopne
adc
sbb
cmp
das
popa
dec
xor
movsb
lcall
add
pusha
push
dec
ret
das
std
sti
jp
mov
xchg
arpl
in
fimull
into
push
je
jge
xchg
mov
leave
imul
sbb
cmpsb
or
adc
adc
insb
adc
push
jmp
enter
dec
fndisi(8087
jns
rorb
sub
aam
shlb
adc
rclb
cmp
jbe
add
ret
add
xlat
push
pop
out
js
inc
bound
daa
jl
xchg
ljmp
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
xorl
test
scas
loop
jge
stos
add
ljmp
push
pushf
jp
in
xchg
jae
movsl
dec
mov
add
rcrl
mov
fmuls
pop
add
push
scas
push
aad
stos
xchg
out
xor
lea
xor
mov
dec
mov
push
mov
aad
mov
cld
subb
dec
mov
mov
push
loope
or
push
test
sti
lock
fdivp
jae
sbb
shll
jl
dec
push
jmp
or
cwtl
add
stc
or
aam
jnp
xchg
mov
mov
push
iret
std
cmp
mov
adc
test
bound
cmpsl
test
mov
popf
inc
andb
sub
push
sub
sahf
pop
xchg
ljmp
pop
aas
das
adc
mov
jle
js
fcmovbe
push
xchg
lock
dec
jp
outsb
dec
and
jg
sbb
movsl
sub
js
repnz
adc
jns
xor
daa
nop
sbb
sbb
lods
or
shll
cmp
aam
jl
shll
push
pop
dec
and
mov
jbe
mov
push
in
shll
sahf
test
inc
frstor
sahf
mov
movsb
mov
mov
dec
lcall
push
clts
jnp
fwait
outsb
sbb
sub
xor
sbb
fwait
sti
mov
inc
push
mov
lret
call
rol
xlat
icebp
mov
dec
pop
push
push
dec
or
fnstsw
or
lcall
adc
push
push
mov
loopne
pushf
sbb
push
jne
mov
and
cmp
jb
test
arpl
sub
cmpsb
add
scas
sti
jne
js
jg
jne
lcall
ret
ret
dec
ret
sub
je
call
testb
lds
mov
loop
aas
lahf
push
push
mov
clc
add
sub
add
adc
sarb
push
stos
cmpsb
dec
adc
jp
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
or
adc
adc
pusha
sbb
mov
mov
lahf
loope
fldt
sub
and
fisubl
rol
arpl
push
sbb
jb
cmp
aaa
bound
clc
sti
js
adcb
shrl
and
rcll
repnz
pop
and
add
pop
adc
js
jb
or
call
lret
enter
enter
nop
hlt
add
ffree
mov
test
mov
in
repnz
pop
fdiv
aas
pop
loopne
sbb
movsl
xchg
and
mov
cs
xchg
jnp
and
and
js
test
aas
jp
inc
lahf
pushf
push
inc
sub
icebp
or
rolb
pop
push
mov
cld
lea
rorb
dec
xchg
xor
add
sbb
jno
sti
mov
fstpl
repz
jg
stos
int
push
movsl
pusha
mov
iret
pop
push
cs
mov
incb
lea
jmp
movsl
aam
or
mov
imul
jle
xchg
and
and
add
adc
dec
xchg
jl
nop
addr16
push
dec
pop
xor
fisubrl
sub
arpl
scas
push
idivl
stos
cmc
jp
mov
leave
lods
mov
push
cmp
xchg
cmp
into
inc
rolb
or
pop
pop
pushl
js
sub
loope
inc
dec
decb
push
mov
pop
dec
sar
fisttpl
xlat
sub
cmp
or
lret
mov
jmp
int
mov
pushf
xchg
scas
shl
push
rcrb
mov
sbb
insb
lds
or
and
std
enter
pusha
dec
push
in
add
sar
outsb
jo
push
push
repz
sahf
jo
jns
mov
inc
mov
pop
jle
cld
inc
cmpsl
mov
adc
hlt
or
mov
gs
mov
xchg
xor
push
mov
fwait
mov
test
rorb
stc
pop
dec
lret
adc
pop
loopne
sub
testl
cmp
cltd
adc
add
rcrl
mov
pop
divb
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
sub
mov
aaa
jge
dec
shlb
xor
nop
or
mov
cs
rclb
jnp
fimuls
sbb
js
or
dec
xchg
xorb
scas
sbb
loop
mov
hlt
xlat
popa
sbb
adc
sarl
mov
pop
adc
jge,pt
xchg
lret
push
lret
aad
mov
lods
popf
faddp
sub
popf
mov
push
and
jmp
adc
mov
and
and
call
mov
cs
push
adc
fadds
sbb
jo
jae
sub
sar
and
or
inc
aas
es
lock
mov
mov
mov
push
and
jl
gs
cs
out
push
pop
sbb
push
jno
mov
shrl
inc
mov
xchg
bswap
mov
and
cld
xchg
cltd
mov
dec
pop
repz
sbb
fidivl
or
out
aad
lret
sub
inc
adc
mov
lea
add
stos
gs
testl
sahf
adcl
cmc
lahf
jl
push
stc
jmp
in
adc
mov
les
sbb
xchg
and
mov
mov
dec
out
jge
xchg
loopne
and
jae
icebp
sbb
fidivrl
les
fstpt
ret
std
pop
or
popa
mov
inc
mov
addr16
mov
add
rorb
loop
fldenv
xchg
push
jbe
dec
mov
daa
mov
int
jnp
rcl
jae
inc
xchg
mov
lret
push
sti
jmp
dec
pop
add
clc
sbb
stos
jg
dec
or
sbb
jl
and
lds
movsb
adc
mov
pop
inc
cmp
cmpsb
mov
inc
xorl
sub
lret
fmuls
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
aas
insl
test
enter
test
insl
loopne
ljmp
inc
sub
fimull
mov
out
out
inc
mov
ja
mov
mov
mov
xor
cmp
out
adcl
add
sahf
cmp
inc
divb
fcmovb
xor
add
outsl
out
jle
test
int
into
xchg
jle
lods
je
push
pop
in
sbbl
sbb
addb
mov
cmp
mov
mov
sub
mov
xchg
nop
inc
jnp
aad
push
jl
outsb
xor
test
out
leave
add
shll
outsb
sbb
testl
shrl
inc
test
mov
sbb
xchg
xchg
lods
cmpsb
inc
movsl
lds
faddl
jnp
jecxz
outsl
cmp
mov
testl
push
pop
outsb
pop
loopne
mov
arpl
loope
xor
push
sbbl
push
jbe
sti
fidivrl
pop
cmp
and
mov
inc
push
icebp
pop
add
test
loopne
fistl
pop
mov
mov
xor
in
mov
stos
sbb
jnp
fwait
mov
lods
jbe
add
xchg
sbb
pop
cmp
popf
scas
add
cmp
xchg
sbb
and
and
dec
mov
sbb
pop
jae
sbb
cmpsb
iret
or
xor
add
mov
sub
dec
jno
rorb
push
das
sti
mull
hlt
pop
mov
int
mov
mov
sbb
xchg
add
stos
insl
mov
pop
add
popf
or
adc
add
testb
je
loop
xchg
mov
xor
push
ret
mov
mov
incb
sub
jl
pop
add
je
test
jns
mov
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
aaa
jbe
push
adcb
ja
mov
cmpsb
add
ljmp
test
lea
mov
jmp
call
icebp
jne
lret
aas
frstor
or
add
imul
push
bound
pop
or
mov
jbe
cs
test
nop
stos
push
nop
cmp
into
iret
cmp
adc
xchg
and
push
sbb
arpl
aad
mov
lret
shlb
jb
adc
push
leave
movsl
sahf
pushf
movsl
aaa
xchg
insl
rcll
push
imul
adc
add
icebp
xorb
lcall
insb
mov
repnz
push
xor
add
dec
stc
aaa
popa
mov
gs
shrb
mov
mov
mov
push
mov
mov
loopne
repz
push
mov
ja
ja
lods
int3
add
sub
inc
sar
dec
and
cwtl
xor
shr
jae
cmc
or
pop
inc
sahf
mov
mov
dec
push
mov
add
dec
idivl
out
std
xchg
in
push
popf
mov
arpl
xchg
pop
mov
mov
pop
sahf
stos
outsl
mov
popl
add
notl
std
aas
dec
inc
pop
pop
cmp
xchg
push
push
and
jno
test
stos
pop
cmc
mov
lea
into
adcb
jg
fistps
mov
leave
fwait
push
mov
movsb
mov
mov
test
add
or
or
mov
push
xorb
mov
mov
ret
lods
sahf
aad
test
into
xchg
mov
push
es
cli
cmc
popa
mov
jge
sbb
pop
or
sbb
cmc
cmp
mov
or
enter
xor
jg
mov
jo
jnp
push
mov
loope
mov
std
cmp
xorb
das
jae
in
sub
xor
stos
pop
into
insl
cmp
push
xor
mov
mov
movsb
lret
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
xchg
stos
or
adc
movlps
or
scas
sbb
inc
adc
xor
inc
loope
mov
cli
dec
fsubrl
mov
ficompl
and
out
pop
cmc
jne
pop
fxch
mov
add
jns
imul
aaa
fs
jmp
aas
pop
addb
pop
jno
jle
push
mov
push
jecxz
aad
sbb
clc
in
or
stos
cwtl
xchg
icebp
stc
cmp
aas
mov
mov
mov
xor
ficompl
or
outsb
sub
mov
fs
hlt
cld
data16
pop
addr16
xchg
loope
push
fistps
jmp
aas
adc
mov
sbb
mov
sti
pop
flds
sbb
inc
ja
jg
cmp
fnstenv
test
cmc
imul
lock
stos
cmp
jno
icebp
ret
inc
aaa
scas
test
sbb
rcr
dec
dec
lds
clc
ret
popf
cmp
mov
dec
jg
inc
icebp
cmp
pop
nop
cs
insl
and
sbb
inc
push
sarb
pop
and
sahf
add
pop
lcall
mov
xor
push
xchg
and
jecxz
out
xchg
les
fs
rcrb
test
sub
adc
andl
imul
gs
xchg
arpl
insl
and
imul
xchg
xchg
outsl
add
dec
push
xlat
cmp
cmp
into
pop
pop
jle
out
out
js
jns
lods
rclb
inc
jno
in
push
push
fstpl
mov
loopne
sbb
lods
jle
mov
lahf
pop
mov
test
push
sahf
jo
pop
int
fsubr
fidivrs
pushf
loopne
fisubrs
hlt
xchg
in
pop
cmpsb
loope
fiaddl
sbb
popf
cmp
pop
mov
cmpsb
daa
or
mov
ljmp
or
xor
mov
inc
icebp
xlat
mov
insb
or
les
outsb
mov
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
mov
adc
adc
fiadds
shlb
or
sub
mov
mov
push
jno
movsb
dec
outsb
cmc
mov
mov
and
sub
lods
add
addr16
mov
sub
xchg
adc
in
jmp
or
cmc
outsb
in
and
ret
std
inc
push
js
pusha
mov
push
leave
and
mov
jo
stos
inc
movsb
clc
inc
jnp
imul
fsubrs
push
ds
lods
scas
fsubl
xchg
pop
jmp
sbb
lahf
inc
and
dec
scas
mov
adc
addr16
pop
mov
test
jo
sbb
movsl
mov
cmp
pop
adc
into
xchg
shlb
fs
jns
pop
lahf
test
dec
push
das
pop
notb
fisttps
dec
adc
das
dec
aam
and
daa
sub
insb
les
out
mov
stos
xor
in
je
jp
fwait
insb
test
in
lods
push
xor
out
stc
jl
xor
jmp
arpl
aas
push
mov
cmp
pop
jae
pop
aam
cmp
decb
lds
cmp
mov
sbb
sub
lods
fdivl
sub
cmp
push
mov
add
es
or
jg
adc
sub
cmp
das
dec
jbe
cwtl
lods
ss
aas
inc
out
push
push
test
xchg
shlb
xor
or
and
xor
push
outsl
out
sub
call
mov
je
add
or
cmp
nop
addr16
hlt
xor
or
out
dec
pop
jbe
inc
inc
sbb
sahf
insb
jmp
jecxz
out
pop
xor
into
loopne
stc
adc
out
lret
scas
testb
fadds
push
movsb
cs
les
sbbl
mov
adc
loope
popa
mov
scas
and
aaa
push
in
mov
mov
jmp
adc
sbb
adc
or
rcrl
push
sub
fsts
rorb
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
out
insb
jb
adc
adc
stos
hlt
aaa
and
stc
sbb
aam
ss
push
and
fimull
mov
jl
loop
ficomps
in
notl
inc
cmpl
dec
popa
aad
std
arpl
xlat
adc
pop
mov
stos
aad
std
out
lcall
sbb
sub
nop
and
push
add
loop
xchg
jbe
or
jnp
mov
sbb
dec
out
pop
in
fidivrs
call
push
or
xor
loopne
inc
and
jecxz
and
push
pop
adc
push
inc
mov
sahf
sub
lret
cmp
sub
inc
stos
lds
shll
mov
leave
xchg
adc
lods
fidivrs
lods
movsl
add
mov
mov
pop
pop
pushf
insl
repz
xchg
dec
mov
and
sbb
mov
cmpsb
or
ret
sbb
into
outsb
push
scas
addb
push
mov
out
mov
pop
xor
lret
lret
cld
pop
out
addb
fs
ret
add
dec
dec
je
repz
leave
ficompl
shll
lret
sub
inc
stos
cmp
jae
sub
or
sahf
push
push
xchg
cmp
mov
cltd
pop
pop
lock
fisubs
addr16
loop
lods
inc
inc
int3
bound
mov
dec
jae
cld
in
sahf
loop
add
pop
mov
and
leave
ja
mov
mov
and
data16
mov
xchg
mov
adc
rcrb
cmp
cld
je
push
pop
cmc
ret
xchg
push
cmp
int3
pop
dec
mov
xchg
in
xchg
out
or
push
fiaddl
sub
xchg
imul
aad
addr16
js
aad
mov
mov
mov
xor
jecxz
and
loop
dec
xchg
cmpsl
pop
and
je
ljmp
call
shrb
fists
dec
dec
mov
leave
mov
ja
and
xchg
push
xor
pop
lods
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
js
pop
lods
es
adc
adc
dec
adc
mov
xchg
sub
imul
cmp
js
aam
xchg
insb
sbb
xor
test
dec
jne
push
or
pop
mov
jno
adc
stos
into
add
sbb
pop
outsl
mov
jecxz
movsl
add
iret
sub
lret
add
lcall
arpl
mov
js
cmpsb
push
inc
out
xor
pop
xlat
jo
mov
sahf
stos
fbld
xchg
nop
sbb
xchg
inc
outsl
sub
fists
add
test
inc
int
movsb
scas
cmp
loope
inc
push
dec
leave
lret
dec
test
jb
cmp
push
iret
cli
or
xlat
and
cli
mov
mov
push
push
sbb
test
mov
movsl
cmpsb
in
decl
inc
jecxz
mov
push
push
div
xchg
cmpsb
push
mulb
sahf
dec
enter
jae
fwait
js
inc
mov
mov
add
mov
cmp
fstpt
mov
adc
jle
and
enter
pop
test
aaa
int3
mov
and
sub
mov
xor
xchg
and
ret
es
jae
cmp
loopw
sub
lods
repz
and
movsl
arpl
and
negl
add
rclb
jecxz
imul
cltd
adc
outsl
or
insl
mov
inc
mov
add
test
mov
xchg
les
fldt
in
cmpsl
mov
sub
xor
andl
movsb
test
jg
inc
das
jge
stc
sahf
add
xchg
and
xchg
pusha
dec
or
xchg
jle
add
loop
add
cli
mov
stos
int3
dec
push
and
cmpl
inc
popa
xlat
sub
xchg
out
rol
mov
mov
mov
stos
loope
pop
daa
popf
add
shlb
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
ret
jle
push
adc
mov
jp
std
push
adc
or
fs
aas
push
pop
ret
into
lahf
lahf
fcompl
insl
test
mov
in
mov
xorl
pop
lcall
lret
sbb
mov
lods
repnz
not
pop
cmp
mov
mov
ret
std
fsubs
push
xchg
cmp
xor
loopne
or
or
push
jg
and
sbb
dec
pushf
aas
pop
inc
fcomps
imul
fstl
xor
ret
mov
and
repnz
xchg
rorb
pop
mov
add
insl
lock
std
jp
hlt
nop
sahf
es
lock
xchg
jg
jle
mov
adc
mov
push
jecxz
dec
sub
scas
push
sbb
pop
sub
push
shll
sahf
frstor
enter
mov
sbb
mov
push
jmp
loopne
jbe
icebp
hlt
mov
jl
sbb
inc
aas
or
imul
fwait
push
cltd
sub
push
ret
sarb
mov
push
cmpsl
into
xchg
lcall
stos
cs
imul
lods
in
xor
into
mov
adcl
add
jp
lcall
add
fsubr
imul
jne
adcb
test
push
fucomip
mov
mov
iret
mov
xlat
mov
adc
and
icebp
mov
cld
insb
sbb
stc
pop
jg
into
cwtl
stos
mov
les
jns
mulb
loopne,pn
jae
xlat
or
je
mov
dec
sbbb
nop
xor
stc
pop
sbb
pop
leave
lret
jle
lods
mov
sbb
add
xor
in
movzbl
jo
add
adc
ret
pop
inc
mov
cmp
jns
jb
test
xor
sub
jle
xchg
loopne
pop
pushf
dec
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
loop
lea
enter
imul
add
xchg
cmpsb
addr16
mov
inc
shlb
faddl
or
jg
cli
and
ret
pop
mov
sbb
ja
icebp
clc
hlt
out
gs
sbb
lds
mov
xchg
aam
mov
xor
aam
ljmp
ja
ljmp
push
ljmp
lock
imul
push
and
test
clc
shr
int3
xchg
dec
sbb
mov
sub
push
addr16
push
or
in
mov
push
cmp
bound
pop
cmpb
and
mov
stc
stc
jae
sahf
and
jb
push
cmp
adc
sahf
ds
repz
xor
ficoml
lods
shll
adc
xchg
push
mov
cmp
sub
xchg
adcl
lret
shrb
xlat
dec
adc
lahf
inc
mov
test
sub
bnd
fnstenv
insl
pop
mov
outsl
das
ret
mov
cld
pop
jns
pop
mov
add
shll
jl
or
or
xchg
inc
sub
leave
ljmp
movsb
icebp
mov
in
clc
or
inc
fwait
lods
jo
lds
fwait
xor
xor
into
add
int
out
int3
jbe
movsb
arpl
jb
popa
sbb
push
lcall
push
in
outsl
push
repz
cltd
sbb
mov
mov
ds
xlat
and
adc
cmp
repnz
das
iret
cmp
loopne
popl
dec
jge
in
xor
leave
and
xor
inc
ficompl
pop
dec
push
cltd
inc
lret
out
pop
dec
loopne
clc
aas
jne
mov
sub
test
filds
popf
sbb
xor
xchg
inc
aas
dec
aad
lret
fs
sbb
test
orl
adc
xchg
popf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
andb
test
push
into
sahf
test
pop
div
mov
jp
nop
xchg
sbb
insb
and
test
test
pushf
mov
push
adc
lods
jmp
loope
xchg
sub
dec
js
cmp
in
xchg
cmp
out
call
adc
scas
ljmp
add
jge
je
mull
mov
mov
add
push
inc
gs
sub
cmp
mov
pop
notb
and
mov
iret
add
imulb
cmp
leave
mov
pop
add
leave
lret
inc
sub
or
xor
xchg
lds
leave
sub
inc
pusha
cmpsb
mov
cmc
inc
rorl
xor
fdivrl
ja
stos
mov
lods
push
xchg
push
imul
fldenv
add
adc
cmpsl
ds
mov
mov
dec
fstpt
mov
ljmp
loop
cmp
adc
mov
mov
loope
aaa
pop
hlt
stc
ljmp
push
sarl
and
cmp
iret
shr
ret
aas
push
in
sub
add
rcll
insb
jno
scas
mov
fs
mov
dec
sub
xchg
adc
cmc
stos
or
stc
push
pop
mov
mov
or
clc
les
movsb
outsb
outsb
clc
dec
aaa
pop
add
in
xchg
push
imul
in
aam
mov
xchg
xchg
fsubrl
and
dec
test
jbe
movsl
cmp
lods
stc
ret
or
setbe
loopne
scas
xchg
dec
data16
test
inc
mov
pop
imul
xchg
inc
les
inc
cmp
mov
into
inc
filds
aaa
add
cmpl
pop
mov
popl
pop
incl
andl
push
insb
jns
add
mov
xchg
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
cmc
rorb
adc
movlps
pop
out
dec
xor
sub
and
pop
bswap
cmc
jne
xchg
stos
jb
rorl
sbb
xchg
ret
outsb
mov
xor
aam
inc
fcmovnbe
pushf
mov
fwait
iret
xchg
adc
sub
mov
mov
jbe
xchg
jae
lds
dec
dec
push
imul
inc
shlb
xchg
pop
xchg
sub
aam
dec
and
les
adc
outsl
jnp
sbb
stos
in
xchg
fdivrs
scas
inc
test
testb
push
mov
xor
out
ret
pop
test
js
jp
repnz
xchg
dec
icebp
inc
in
adc
xlat
aas
lock
shlb
mov
xor
test
inc
sub
fucomi
xchg
aad
sti
inc
sbb
ja
cmp
and
out
shr
add
mov
orl
pop
mov
xchg
pop
std
fnsave
mov
adc
out
pop
aaa
scas
testl
loopne
cmp
xchg
fiaddl
out
les
outsl
xchg
loop
sarb
inc
inc
ljmp
stos
and
stc
les
fcomp
lea
daa
inc
jle
cmp
cld
pop
xor
mov
sbb
jmp
xchg
popa
push
add
push
scas
xchg
cmp
repnz
in
out
jmp
ljmp
fwait
std
adc
add
or
push
aam
mull
jmp
cli
adc
in
mov
ficoms
fimull
cld
sti
in
lret
fistpll
and
enter
pop
fisubrs
jno
inc
xlat
dec
dec
loopne
or
pop
cmp
ljmp
mov
or
repnz
xchg
outsb
or
sub
test
jbe
mov
inc
rclb
addr16
pop
mov
or
push
adc
das
pop
jge
mov
jne
fidivs
mov
push
ret
ret
call
and
push
mov
xchg
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
sbb
insb
stos
pop
adc
adc
inc
into
xor
xchg
cli
inc
mov
jno
xor
shl
fimuls
mov
push
jbe
dec
repnz
lods
cwtl
movsb
jno
mov
sbb
cltd
cmp
push
insb
ret
cmp
shll
popa
aad
dec
xlat
jp
ja
adc
xchg
leave
cli
es
lods
and
xorl
jbe
adc
movsl
pop
cwtl
dec
pop
jne
ret
fcomps
shll
shrb
push
es
stos
and
sbb
fwait
loope
xor
dec
out
test
and
aas
insl
fs
pop
push
mov
mov
movsb
mov
pop
xchg
dec
pop
rolb
loop
jno
addr16
les
ss
and
jmp
mov
movsl
mov
jns
lret
push
dec
jb
cmpsl
nop
xchg
xor
pop
mov
sbb
sub
dec
and
rorl
lods
dec
mov
push
loopne
pushl
inc
mov
and
or
jge
insl
dec
in
aam
ds
aad
xchg
clc
lds
movsb
divl
fwait
sbb
sub
adc
jb
cmc
jecxz
enter
or
arpl
sub
imull
or
and
sahf
lods
lea
dec
add
and
mov
adc
mov
push
xor
sbb
push
push
adc
jge
push
stos
mov
bound
push
dec
dec
testb
imul
sti
test
orl
inc
jp
xchg
loop
scas
mov
fwait
jne
cmp
cmpsl
stos
push
cltd
in
pop
mov
dec
dec
xor
ds
sub
ret
push
inc
ficoml
pop
xchg
add
rolb
in
sub
leave
callw
cmp
pop
sbb
jp
arpl
in
adc
aad
fucomi
xlat
cmp
cli
stos
jno
cmp
sub
sub
jge
bound
call
adc
scas
xchg
mov
sub
std
fcoms
jp
sub
scas
cld
push
sar
aaa
aam
loop
push
xchg
in
icebp
lret
jp
mov
imul
repnz
inc
repnz
notb
pop
notb
addr16
movsb
ficompl
js
mov
fmulp
sahf
in
inc
int3
jb
push
hlt
pop
jb
popa
int3
pushf
sub
cmp
test
lcall
imul
cmpsl
and
fld
xchg
pop
mov
insb
mov
addr16
jb
adc
cmp
jns
push
sbb
push
je
push
enter
ljmp
xchg
rorb
inc
inc
sbb
loope
add
fisttps
orl
pop
or
fadds
dec
cld
js
mov
lret
or
addb
cmp
aaa
mov
jle
lcall
es
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
jle
push
adc
adc
orb
das
std
jae
xchg
xor
out
out
push
adc
cli
cld
std
mov
or
idivb
mov
mov
repz
ss
pop
xchg
lahf
jp
andl
mov
xor
iret
cmp
xchg
pop
fnstcw
cmp
mov
lods
and
cmpsb
outsb
push
xor
mov
daa
pop
js
inc
mov
icebp
sarb
xlat
or
adc
pop
mov
pop
push
fbld
call
xor
fimuls
cmp
xchg
in
pop
test
imul
enter
push
std
mov
pop
out
je
sarl
mov
inc
arpl
jo
cmp
fdivs
push
pop
dec
stos
pop
mov
gs
int
fidivl
cli
or
adc
addr16
jecxz
mov
cwtl
xor
testl
sbb
mov
arpl
xchg
jno
mov
cmp
jno
arpl
dec
add
incl
push
pop
popl
out
mov
sub
xchg
out
pop
icebp
and
aad
lcall
cmp
sbb
sub
dec
jns
adc
or
cmpl
adc
ffree
je
out
mov
jp
rcll
xchg
xchg
test
in
sbb
inc
fbstp
lods
cmp
loope
sub
inc
popf
inc
cs
rcrb
push
mov
xor
stos
mov
stc
neg
movsb
inc
inc
push
jnp
sbb
inc
mov
jmp
stos
dec
cli
and
int
mov
and
inc
mov
sbbb
push
cmp
jecxz
inc
push
or
sub
adc
subl
ss
out
movsl
mov
mov
mov
dec
adc
and
das
pop
lret
and
jno
push
push
inc
sub
idivl
push
mov
pop
movsb
es
pop
cmc
sbb
sbb
cs
mov
mov
adc
and
sub
fcmovb
jp
dec
shl
inc
xor
jecxz
jnp
scas
push
das
jbe
hlt
adc
xor
pop
push
fistl
or
xor
mov
aad
cltd
test
stos
int3
or
push
push
xor
xchg
int
inc
xchg
movsb
daa
pop
pop
sbb
and
stos
sub
shrb
jmp
int3
sbb
xor
repnz
lahf
arpl
mov
inc
idivl
bound
sbb
shll
jg
fisttpl
mov
xchg
cmp
ja
add
xchg
inc
adc
mov
je
push
mov
push
xchg
or
ljmp
xor
mov
nop
stc
loopne
aad
mov
bound
pop
xchg
js
movsl
push
cld
mov
inc
xchg
pop
arpl
adcl
mov
jmp
or
xor
sahf
fisubrs
test
xchg
scas
lods
out
xorl
outsb
jge
loop
subb
ret
loop
mov
lds
sarl
pop
mov
and
pusha
sbb
ds
test
xchg
jo
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
