push
mov
sub
mov
mov
jmp
adcb
shrl
mov
jle
jle
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
jle
fwait
push
mov
repz
lret
imull
push
movsl
outsb
inc
mov
xchg
push
jno
mov
pop
cmp
pop
scas
movsl
cli
jbe
ficoml
mov
ucomiss
scas
mov
xchg
in
loop
mov
or
dec
lret
sub
mov
jns
sub
push
mov
imul
enter
jo
lea
or
rcrl
ret
iret
in
pop
sahf
adc
push
insb
daa
inc
andb
add
adc
adc
pop
es
pop
xchg
xor
repz
adc
mov
push
sti
lods
cmpsb
push
jno
nop
jbe
fs
xchg
xor
push
sbb
into
adc
ja
test
or
and
add
test
out
fdivr
loop
sbb
and
push
fisubs
leave
cmp
pop
cltd
test
ds
sub
clc
scas
xorl
jle
bound
rcl
cmp
xor
loopne
das
ffreep
clc
jle
aaa
mov
mov
rcrb
pop
fsubrl
sbb
cmpsl
dec
subb
xchg
add
cli
popa
push
or
lret
cmpsl
push
and
repnz
inc
adc
pop
icebp
outsb
push
mov
cmp
mov
sbb
xor
stos
mov
mov
rolb
xor
loop
cld
outsl
lea
xchg
mov
in
les
inc
clc
xchg
lods
sbbl
fs
mulb
lret
stos
adc
ds
clc
mov
data16
xor
inc
xlat
xor
imul
hlt
imul
test
test
test
les
sbb
daa
daa
xor
cmpsl
jne
pusha
test
xlat
and
xor
into
and
jns
dec
in
cmp
stos
xchg
enter
jmp
outsl
out
lret
mov
push
mov
call
mov
int3
hlt
or
mov
sbb
mov
gs
inc
cld
cmp
sbb
pop
xchg
jo
lahf
icebp
add
cmp
inc
mov
add
lock
loop
xchg
sbb
xor
jg
and
lock
pop
pop
cmp
sub
push
or
inc
inc
jbe
add
stos
mov
testb
sub
addr16
xorl
lods
push
pop
aas
cmp
test
xchg
mov
lock
cmp
iret
enter
out
stos
or
mulb
fisttps
push
fsubl
pop
xchg
call
into
xor
jno
hlt
mov
ss
cltd
cmp
sub
add
scas
add
fistps
adc
inc
shll
bound
std
jb
mov
sbb
shrl
mov
fbld
xor
jae
test
cld
test
mov
dec
fcom
inc
xor
movsl
cmp
inc
mov
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jle
outsl
jge
jle
jge
jle
das
add
ljmp
ljmp
outsl
push
lock
sbb
xchg
xchg
xchg
adc
adc
mov
mov
mov
add
loope
shrl
xchg
out
mov
je
push
rcrb
jl
xlat
sub
adc
addb
mov
aas
xchg
mov
pop
pop
jns
push
aas
lcall
inc
ds
inc
loop
repz
inc
cwtl
mov
enter
jg
pop
or
inc
inc
test
repz
lcall
pop
or
ficomps
les
les
test
in
push
mov
iret
jp
sbb
lods
mov
fnsave
sbb
or
pop
adcb
and
in
loope
cmp
ljmp
adc
pop
push
das
nop
sbb
scas
insb
fbstp
cltd
lret
sbb
mov
inc
pop
jnp
push
mov
sahf
in
scas
ret
leave
pop
in
push
mov
test
sub
test
sbb
add
jbe
xchg
cmp
fidivrs
cmp
lods
xchg
xor
cmpsl
leave
test
cmp
mov
add
dec
daa
sti
jmpw
dec
fucomi
pop
pusha
xor
and
sub
into
out
dec
sbb
cwtl
repnz
sahf
cs
push
inc
cld
inc
stos
cs
push
or
sbb
sub
cs
repnz
in
clc
xchg
pop
xor
sbb
push
sarb
cmp
daa
popf
jl
movsl
jne,pn
jle
inc
cmpsl
xchg
push
test
mov
pop
push
insl
cmp
sarl
push
mov
inc
xlat
stc
push
loop
cs
push
jo
outsb
jl
adc
adc
or
outsl
fs
mov
push
xor
negl
div
mov
sbb
sti
nop
adc
movsb
inc
dec
repz
mov
ds
test
adc
mov
jno
push
xchg
ret
cli
add
loopne
mov
fimuls
stc
scas
repnz
sub
pusha
out
sub
cmp
jg
dec
xor
les
sbb
xchg
aaa
dec
mov
adc
addb
sbb
inc
jmp
lea
insl
pavgw
mov
pop
pop
sub
ret
jbe
or
pop
and
inc
loope
outsl
iret
shll
jb
arpl
mov
shlb
popa
push
fnstenv
int
sbb
orb
lahf
stc
ljmp
push
adcl
mov
jle
scas
sub
scas
xor
int3
xlat
test
mov
or
pop
pop
mov
sub
or
jl
push
mov
or
mov
test
xlat
ja
rcrl
aam
mov
push
mov
jbe
fprem1
lds
pop
addr16
std
insl
cmpsb
negl
jno
mov
adc
sub
std
mov
lahf
shr
scas
into
jg
add
xlat
mov
shr
out
jle
push
test
ret
xor
and
fists
adc
popf
push
sbb
push
jge
jnp
fs
int
add
js
repnz
xor
and
push
test
sub
mov
pop
bound
fucom
cmpl
test
inc
jmp
stc
xlat
rep
dec
je
inc
mov
jmp
sbb
ljmp
sbb
out
movl
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
stos
mov
jle
jge
jle
int
adc
push
mov
in
fwait
pop
popa
lfs
push
sbb
lcall
scas
loopne
sbb
or
dec
mov
sbb
or
sbb
adc
shl
sbb
add
in
pop
fwait
rorl
mov
fwait
roll
out
cmp
mov
stc
cmp
lret
xchg
inc
sarb
xor
jp
ljmp
rorl
mov
lea
cmp
cmp
dec
jns
in
pop
jno
push
inc
jmpw
fidivs
sub
dec
add
mov
xor
and
mov
xchg
mov
insl
add
push
or
or
rcrl
push
bound
push
add
lock
movzbl
pusha
add
popl
inc
jg
fwait
test
mov
mov
ret
loop
call
mov
push
pop
pop
cmpsw
clc
inc
dec
in
inc
mov
jecxz
pop
adc
mov
icebp
add
dec
mov
push
pop
loop
dec
add
sub
jg
mov
mov
xchg
sub
loop
aaa
lahf
add
shl
push
push
adc
xorb
adc
mov
rorb
cmp
mov
cmp
or
cld
imul
sub
jg
movsb
icebp
sarl
jb
xchg
jns
mov
rclb
mov
dec
adc
cld
push
ss
lds
push
loop
add
popa
add
rcll
stos
mov
sbbl
push
xor
ffreep
mov
arpl
scas
jns
fisubrl
push
mov
lret
push
ret
push
mov
fdivl
mov
mov
rorl
sbb
js
cwtl
arpl
pop
pop
mov
dec
push
outsl
scas
icebp
fnstcw
jge
in
mov
imul
mov
rcll
sub
mov
sub
insb
jl
push
push
sub
lods
and
les
pop
les
mov
insb
jmp
pop
popl
mov
or
fisubrs
imul
xlat
out
pop
sub
mov
imul
sbb
push
sbb
push
out
push
loope
lods
xchg
es
ja
rorl
fidivl
pop
sbb
cmp
sub
stos
add
sbb
leave
in
cmp
push
int
sbb
dec
popf
sar
icebp
fiaddl
cmpsl
scas
ret
sub
xchg
insl
push
lea
cmpsl
popa
and
inc
jge
xchg
repz
sub
pop
push
mov
push
sti
jg
xor
dec
into
mov
inc
push
lods
into
stos
aad
push
inc
sti
test
clc
adc
jecxz
outsl
test
jle
popa
mov
rol
data16
aam
sbb
mov
andl
jle
push
mov
cld
subb
add
lods
pusha
std
pop
inc
roll
pop
or
cmp
insb
cmp
mov
lret
add
xchg
add
in
jp
movsb
push
inc
shrb
mov
idivl
dec
and
jb
push
insl
into
mov
push
incl
push
cmp
sbb
idivl
pushf
xchg
adc
inc
lret
lea
movsb
xor
cmpsb
jle
ljmp
adc
gs
lea
enter
test
out
pusha
and
scas
das
xchg
out
fstpt
or
sub
mov
insb
xcrypt-ofb
cmpsl
das
hlt
pusha
mov
inc
or
cs
inc
or
add
inc
repz
xchg
fwait
leave
dec
sub
rcr
dec
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
cwtl
fistl
dec
add
jle
or
cmp
or
sub
aas
mov
mov
jno
inc
xchg
sbb
jmp
xlat
out
fimuls
or
or
push
pop
rorl
pop
cltd
pop
jb
xor
icebp
call
outsb
mov
mov
out
push
outsl
xchg
xchg
in
ds
dec
cmp
data16
add
imul
cli
push
sahf
pop
xor
test
sbb
xchg
aas
sub
fbld
jmp
sbb
inc
rcl
ret
pusha
xchg
jp
adc
jl
sub
into
and
insl
ljmp
dec
adc
inc
fldl
insb
jg
or
jp
js
push
inc
addr16
dec
pop
sti
or
fwait
mov
lods
sub
ret
push
jne
jg
lret
mov
adc
pop
aam
dec
and
movb
inc
add
and
mov
dec
sub
push
cltd
add
out
add
mov
pop
shrl
xchg
int
push
lahf
and
mov
sub
fldenv
scas
pop
and
xor
pop
dec
sbb
leave
aam
add
push
or
and
pop
jbe
adc
push
movsb
addr16
je
cmp
leave
add
cmp
out
movsb
jbe
cmp
jp
xchg
out
imul
je
arpl
lret
mov
pusha
push
xchg
bt
jno
mov
or
iret
xor
cmp
sub
call
cmpsb
ret
lds
clc
adc
cli
and
jmp
cmovle
dec
js
or
lock
mov
jmp
in
sbb
xchg
adc
cmpsl
inc
lahf
sub
sbb
cmpsl
xlat
push
dec
cltd
pop
xchg
bound
cmp
into
out
adc
inc
jno
jbe
out
popa
dec
sbb
popl
adc
lea
subb
mov
jno
inc
sarl
push
divb
and
and
inc
pushf
idiv
std
dec
into
xchg
pushf
mov
out
sahf
xlat
stos
rolb
pushfw
and
adc
sbb
pop
push
pop
push
pop
pop
imul
inc
fiaddl
sub
test
in
xor
rorb
jle
lahf
ja
int3
sub
pop
imul
inc
arpl
inc
inc
push
pop
push
imul
dec
testb
jo
das
lock
adc
testb
dec
lret
pop
into
icebp
jl
inc
dec
pushf
mov
add
je
or
xchg
in
add
rclb
sbb
int
adc
inc
inc
mov
mov
xchg
jns
add
xchg
cli
jp
in
cmp
add
adc
sbb
mov
shlb
stos
add
pushf
movsb
cmpsb
jge
nop
mov
movsb
loop
push
rol
mov
push
pop
jns
dec
sub
jns
jmp
pop
addr16
adc
jnp,pt
cmp
cmp
nop
clc
outsl
cmc
pop
out
pop
pop
movsb
mov
mov
ljmp
out
cmp
outsb
dec
cmc
xor
call
pop
pop
int3
andl
cli
leave
shl
loope
mov
mov
les
push
sbb
pop
cwtl
or
push
or
push
xor
mov
pop
pop
fbstp
hlt
sbb
push
mov
mov
and
dec
mov
add
push
dec
lds
mov
out
inc
mov
sbb
pop
out
or
insb
popa
loopne
pop
shlb
jecxz
sti
pushl
test
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
jmp
mov
jge
jle
psrad
int
push
jae
cmp
pop
int
jg
in
mov
pushf
fiaddl
xor
lret
mov
call
aas
mov
loop
add
scas
add
imul
lahf
aad
in
mov
jns
fimull
fcompl
push
and
lret
adc
test
jmp
mov
lds
jae
into
stos
jg
ja
in
jno
scas
mov
nop
cwtl
and
test
xlat
icebp
iret
and
sub
and
lret
and
int3
and
jecxz
out
or
insl
insl
mov
cmp
pop
sub
adc
mov
ret
rorl
out
je
aad
cld
jae
inc
inc
inc
adc
in
adc
push
popf
cmp
xlat
aas
and
cmp
repz
sarb
rcl
rcr
mul
lahf
adc
xor
mov
fsubs
andb
jg
in
mov
int
dec
sbb
lods
mov
push
inc
fs
push
and
dec
add
jl
sbb
adc
add
dec
addr16
cmp
dec
call
mov
and
cmp
jmp
stos
test
cmpsb
add
mov
sbb
and
shll
daa
pop
mov
out
loop
push
mov
inc
cmp
in
dec
daa
and
sub
sub
pop
shl
test
enter
mov
jns
enter
or
into
lgs
rclb
in
mov
insb
jnp
shr
xchg
addr16
push
inc
push
cwtl
mov
cltd
xchg
xlat
cmp
sbb
sbbb
pop
mov
xchg
add
mov
imul
hlt
mov
inc
pop
cmp
aam
in
jg
inc
xchg
and
lcall
add
mov
icebp
sahf
shlb
push
outsl
scas
xchg
mov
loope
mov
sub
pop
fwait
scas
inc
aas
sbb
das
and
call
or
xchg
add
mov
fs
xchg
addl
push
es
leave
loope
dec
add
mov
cmc
or
inc
sub
jmp
jmp
inc
mov
sub
pop
lods
lret
jmp
push
xor
mov
mov
test
imul
mov
popa
fimuls
enter
sub
iret
pop
negb
loop
jno
out
addr16
xor
outsb
mov
jg
xor
subl
test
sub
adc
mov
mov
js
jo
test
inc
mov
mov
or
cmp
scas
into
jns
add
dec
lea
xlat
push
adc
sar
jns
repz
stos
insl
addr16
nop
mov
dec
push
sbb
pop
pop
call
lret
fs
mov
aam
or
inc
ss
and
mov
dec
mov
sbb
jmp
dec
mov
fldl
dec
and
aam
lret
shrb
shl
lea
clc
push
cmp
inc
jae
sub
push
test
pop
out
mov
lret
mov
lods
and
pop
xchg
mov
loop
push
mov
jo
gs
aaa
movsl
push
inc
mov
inc
mov
inc
xchg
stc
ss
sahf
dec
jmp
pop
repz
push
push
rclb
inc
rorb
or
inc
int3
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
stc
dec
sub
cmpl
sahf
mov
loopne
leave
pop
dec
add
cld
xorl
inc
repnz
mov
xorb
add
inc
call
sub
stos
cs
loope
add
movsb
cmpsl
jmp
ljmp
inc
inc
or
jae
cmc
fisubs
pop
daa
or
lock
mov
addr16
fiadds
out
xchg
imul
dec
push
test
loop
mov
or
lds
outsl
jnp
lahf
lret
pop
call
pop
pop
aam
int
mov
sti
lret
fidivl
xchg
push
mov
pavgw
outsl
nop
sub
sub
mov
test
lods
pop
lret
fs
add
in
mov
fimull
or
pop
hlt
ss
xchg
or
jnp
das
push
adc
inc
inc
das
sbb
imul
sbb
push
into
lds
pushf
adc
cs
lods
ds
xor
aad
in
inc
cld
fs
cmp
jg
int
sbb
fidivs
mov
mov
ret
mov
dec
push
sub
out
jno
mov
adc
xchg
inc
mov
fisubrl
sub
xchg
ljmp
in
mov
mov
addl
mov
mov
mov
jbe
stc
bound
mov
add
inc
out
subl
adc
call
dec
das
shrl
mov
scas
lds
lahf
inc
and
movsb
xor
mov
psubsb
lods
push
mov
pop
aad
or
enter
out
je
lret
sub
outsl
ret
mov
aam
maskmovq
notl
cmpsl
sbb
jl
in
push
andl
add
movsl
push
dec
mov
adc
and
adc
inc
decb
push
push
push
mov
sub
mov
in
mov
mov
xor
insl
mov
add
inc
es
movsl
jg
repz
fnclex
and
call
pop
mov
lcall
inc
lock
or
stc
fnstcw
add
hlt
sub
pop
push
dec
fmuls
push
xchg
icebp
pop
fdivrs
icebp
mov
mov
shlb
jne
and
jecxz
push
mov
movsl
sahf
jecxz
xorb
mov
das
lahf
jecxz
js
dec
mov
iret
mov
ljmp
lods
lds
sarl
jo
mov
inc
leave
jle
jge
xchg
push
inc
cmp
test
jae
ds
pop
mov
adc
mov
gs
lods
mov
cmp
data16
xchg
incl
add
mov
fdivrs
or
jge
mulb
dec
jb
loopne
test
adc
jne
lcall
xor
sbb
xchg
in
clc
cmp
das
fs
mov
insb
xor
cmpsl
iret
mov
lret
cmp
inc
int
cmp
mov
in
xchg
pop
ret
stc
hlt
fnstsw
mov
xchg
clc
mov
xor
out
inc
mov
xor
ficomps
rolb
and
xchg
ss
mov
sbb
inc
lds
mov
xchg
xchg
jno
push
inc
mov
sbb
jle
int
hlt
mov
xchg
out
add
pushf
xor
cmpsl
adcl
jp
aad
pop
and
out
adc
xchg
mov
mov
fisttps
testl
xchg
jo
out
push
mov
xchg
lock
addr16
inc
mov
test
sbb
mov
stos
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
outsb
dec
in
cwtl
or
outsl
jge
jle
mov
adc
mov
push
lret
fistl
and
dec
es
xchg
aam
in
jns
je
inc
out
ret
cmp
sarl
mov
add
mov
pop
jns
jae
cmc
jne
test
into
inc
mov
add
repnz
aas
ret
adc
movsw
sbb
nop
inc
ljmp
mov
fnstcw
fadd
inc
daa
into
push
call
cs
sub
arpl
ret
jl
mov
mov
mov
out
xchg
test
std
dec
out
sbb
mov
jbe
adc
cld
enter
xchg
out
push
out
in
ret
ds
xor
jg
mov
cld
insb
xor
ret
xchg
js,pn
jge
push
dec
cltd
in
pop
roll
xchg
lahf
sbb
adc
xchg
cmp
out
sub
mov
in
sbb
enter
inc
sti
mov
int3
fbld
dec
add
into
cmpsl
pop
push
xor
inc
subb
outsb
mov
mov
addl
loope
or
iret
test
fisubl
add
add
lods
sti
in
jle
mov
das
pop
pop
xor
sbb
movsb
mov
clc
orl
push
repnz
test
out
mov
loopne
into
mov
lods
aad
jne
leave
rclb
xor
sbb
xor
pop
push
push
in
jnp
ja
or
pop
call
popf
push
leave
push
movsl
jnp
and
cmp
push
adc
mov
xchg
shl
mov
cmp
cmp
add
mov
xchg
pop
and
push
flds
push
mull
ss
jbe
xchg
lahf
dec
sbb
sti
stos
mov
ret
push
fdivrl
pop
in
lock
lock
out
jns
adc
mov
xchg
dec
sbb
stos
fdivr
jmp
xchg
inc
mov
sbb
xor
in
mov
mov
inc
sub
xchg
icebp
out
xor
jnp
ret
dec
dec
iret
fstps
cmc
or
scas
out
fwait
push
push
lahf
push
clc
les
xor
push
inc
or
ds
fnstcw
clc
or
xchg
movsb
mov
cmp
cwtl
mov
cmp
mov
dec
inc
clc
gs
inc
xor
fimuls
pusha
ds
sbbl
xchg
repnz
xchg
push
or
jge
js
push
and
cs
leave
adc
jmp
call
jge
hlt
jecxz
icebp
test
jo
insb
hlt
stos
insl
lcall
cltd
pop
adc
mov
pushf
push
adc
add
cpuid
es
ret
pusha
pop
adc
xor
push
and
lret
dec
dec
stos
adc
pushf
mov
imul
adc
jne
pop
xor
sub
inc
addb
lcall
ds
jge
mov
push
fdivrl
seto
lods
xlat
add
jbe
insl
fcoms
pop
inc
es
je
fbstp
scas
cld
dec
imul
xor
mov
mov
inc
mov
cmp
xor
xor
enter
push
out
or
sub
test
add
std
sarl
fxam
scas
xor
sub
clc
dec
test
mov
ret
sub
push
fstpt
stc
fsts
sarl
aas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
xor
jle
outsl
jge
jle
inc
sbb
mov
mov
bound
rolb
jb
leave
xchg
mov
mov
mov
add
in
lcall
lret
loop
fwait
mov
mov
out
add
pop
ret
jbe
ja
rcl
sub
cmp
jle
ja
inc
sbb
pop
jmp
ret
sub
add
mov
stc
imul
jne
jge
in
stos
loope
push
sbb
push
insl
add
out
lock
outsb
xchg
fucomp
xchg
mov
mov
or
movsl
pop
lods
ret
lods
ret
adc
xor
out
or
leave
cmp
lahf
sub
jbe
xchg
aam
imul
ja
fistpll
inc
sbb
aad
mov
pop
mov
pop
cmp
xchg
imul
shll
pop
jae
shll
xchg
dec
push
in
cmp
mov
lret
and
jge
in
add
test
cmp
mov
and
mov
in
jns
notb
out
mov
das
test
dec
movsl
loop
pop
dec
push
les
sbb
push
sbb
jne
xchg
xchg
add
dec
loop
in
icebp
jmp
out
pushf
xchg
push
movsl
xchg
iret
xorl
push
inc
adc
mov
push
inc
and
cmc
mov
mov
add
and
iret
test
jne
icebp
mov
shl
and
jno
or
xlat
inc
cltd
test
popf
cmp
inc
out
mov
mov
mov
sub
inc
sub
xchg
movsb
dec
mov
jmp
test
add
movsl
stos
pop
adc
ds
dec
pop
cmp
loope
fimuls
cmp
loopne
sbb
jo
cs
adc
dec
shlb
sti
jno
cli
inc
dec
xor
loope
lds
mov
push
lcall
mov
sub
orl
pop
pop
fdivs
jnp
out
cmp
pop
xor
jp
fsubs
sbb
es
bound
cmpsb
jg
dec
fmulp
cmc
popa
adc
cmc
mov
fwait
aaa
shll
push
in
daa
es
sbb
xor
or
mov
xchg
ljmp
repz
jl
cmp
mov
mov
add
int3
add
test
shl
mov
mov
cmp
mov
cli
and
addl
icebp
aad
decb
dec
xor
sub
test
xchg
mov
push
and
jmp
xchg
push
les
jecxz
sub
xchg
xor
nop
mov
xlat
lret
repnz
xchg
in
scas
jecxz
add
inc
popf
adc
loope
incb
into
mov
cld
sub
inc
mov
xchg
xchg
stos
inc
in
outsb
scas
or
aam
popf
lahf
dec
ret
out
jl
js
pushf
movsl
es
ss
rcrl
push
cmpsl
add
aas
mov
out
in
shrl
mov
outsb
adc
stos
jmp
fisubrs
xor
sti
sub
fwait
dec
xchg
mov
fldt
xor
cmp
inc
fsubl
pop
add
mov
push
test
imul
push
lahf
xor
push
push
sarb
lss
xor
mov
dec
mov
mov
shlb
mov
pop
mov
or
imul
out
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
sti
lcall
outsl
jge
jle
data16
jb
inc
jl
dec
or
push
mov
mov
jmp
cwtl
pop
stos
adc
lock
sub
std
frndint
in
adc
mov
pop
loop
cmp
gs
lret
jns
mov
in
mov
mov
add
sbb
adc
outsb
aaa
repz
fidivl
dec
jne
cltd
insl
pop
push
iret
je
lret
xchg
insl
mov
cmpl
push
cs
mov
dec
mov
jnp
sarb
fs
stos
pop
sbb
jg
cltd
pop
in
insl
sub
inc
cmp
mov
icebp
imul
mov
iret
int
imul
int3
psrad
sbb
sbb
dec
cwtl
pop
xorl
lds
adc
jecxz
xorl
shll
add
or
sub
scas
mov
mov
cwtl
sti
imul
xlat
pop
lcall
je
aam
cmp
mov
xchg
lret
cmpsb
inc
je
mov
adc
fstpt
psrld
pop
sbb
lds
out
outsl
jb
xchg
inc
adc
inc
sbb
adc
adc
dec
out
push
mov
jns
lret
xchg
stos
mov
lahf
mov
cmp
and
cmp
pop
and
in
into
xchg
and
xchg
ret
fstp
sub
sub
sub
outsl
adc
loope
xchg
add
shl
sarb
adc
inc
aad
xchg
cmp
cmp
cmp
jp
mov
cmc
mov
es
pop
or
lods
hlt
adc
and
in
sub
scas
pop
loop
repz
push
lret
pop
mov
rcrl
btr
mov
inc
pop
ret
xchg
std
and
cmc
jnp
dec
mov
push
mov
xor
pusha
int3
cmpl
imul
cmp
lods
jecxz
std
cmpsl
sbb
add
sbb
cmp
mov
cs
arpl
in
cmp
insb
pop
xchg
and
psllw
cli
dec
imul
dec
fistpl
cmp
pop
out
mov
xchg
cmp
rcrb
rcrb
pop
mov
cmp
jmp
movsl
add
loope
add
mov
mov
jl
in
repz
jge
cmp
mov
cmp
adc
dec
mov
cmp
jne
mov
mov
in
int
rcrl
mov
cmp
xchg
test
cmpb
ja
mov
sahf
scas
ror
hlt
jmp
mov
or
xrelease
inc
sbb
insl
lods
test
mov
ja
mov
sub
lea
enter
jmp
es
add
call
inc
frstor
leave
push
xchg
add
insl
mov
xor
push
aam
mov
lods
cltd
aam
xor
lods
loope
jmp
in
mov
test
add
dec
adc
push
push
sbb
push
inc
call
cmp
jae
mov
es
fwait
dec
call
sub
cmpsb
aas
pusha
loope
mov
insb
xorb
push
test
or
mov
bound
sahf
lret
mov
cmpsb
aam
aam
mov
icebp
add
sub
loopne
cli
lods
das
jae
inc
jmp
test
sahf
pop
gs
or
jecxz
xor
mov
fbld
push
insl
xor
push
pushf
adc
cmpsb
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
jle
movsb
xor
sbb
jle
pushl
cmp
and
js
pop
outsl
fidivrs
fimull
mov
aaa
lea
inc
fdiv
push
mov
fldcw
aad
addl
sub
sbb
sbb
pop
lock
loop
test
es
popa
lods
fldcw
icebp
out
aad
movsl
inc
mov
test
bound
lock
sbb
ljmp
mov
xchg
js
xchg
add
push
mov
jmp
pop
aas
sbb
fs
ds
fidivrs
sahf
lret
push
loop
lds
and
xor
mov
ds
xlat
adc
mov
sahf
jae
es
mov
pop
pop
mov
imul
stc
and
sbb
cmc
mov
sub
push
pop
mov
xor
test
in
cwtl
loopne
outsb
adc
xchg
pop
sub
add
dec
push
fisubs
sub
jbe
mov
and
das
sbb
loopne
rcrb
adc
pop
push
xchg
rcrb
xor
inc
gs
mov
mov
lock
cwtl
xor
mov
cmp
repnz
or
test
scas
cmp
adcb
mov
mov
mov
ds
popf
jecxz
or
imul
dec
fdivs
sti
inc
adc
mov
iret
inc
push
cmpsb
rorl
scas
xor
jle
and
insb
les
mov
cmc
jmp
pop
pop
mov
addr16
jb
sarb
xchg
je
push
mov
cmp
mov
jge
stc
mov
or
cmp
sti
mov
xchg
cli
sbb
or
test
xchg
inc
fwait
jecxz
inc
stc
push
popf
lods
sub
mov
cmp
scas
xchg
xor
test
xor
xchg
loopne
andb
lea
jp
lcall
sbb
popf
xor
dec
sub
rclb
nop
pop
xchg
add
sub
mov
ljmp
jns
loopne
out
cmc
xor
ret
arpl
cmp
sbb
lcall
test
mov
insb
add
adcb
test
xchg
ret
and
insb
fs
es
icebp
ret
rolb
xor
cs
je
inc
stc
iret
outsl
xor
aaa
sub
orl
or
inc
mov
cmp
in
inc
sbb
cld
dec
dec
mov
test
ja
insb
fisttpll
shll
in
sbb
scas
adc
repz
inc
shrl
pop
push
and
jp
adc
aam
iret
test
mov
xchg
push
mov
fcompl
pop
fstpl
jo
enter
aaa
pop
in
sbb
xor
aaa
add
mov
aas
mov
sti
mov
pusha
mov
xchg
fisubrs
cld
nop
mov
mov
jo
xor
popf
jbe
fisubrs
adc
into
sbb
pushf
lods
fdivrl
mov
clc
in
outsl
mov
adc
jbe
mov
push
mov
lods
push
ficoms
xchg
nop
xchg
daa
negl
pop
sbb
mov
icebp
xchg
fdivs
push
xor
mov
jnp
pusha
shlb
fstl
adc
mov
push
mov
mov
adc
jnp
notb
mov
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
in
pop
insl
in
jle
outsl
jge
jle
mov
rcrl
xchg
leave
push
xorb
pop
mov
mov
outsl
daa
and
and
mov
out
fisttps
mov
movsl
int
stc
punpcklwd
lcall
cli
addb
test
arpl
pop
lock
mov
inc
aam
sub
push
push
in
xchg
out
sbb
pop
adc
fcompl
push
xlat
cmp
aas
adc
jl,pt
dec
stos
add
inc
xchg
loopne
fistpl
sbb
jns
enter
int
enter
pop
out
sub
mov
pop
jnp
sahf
dec
jp
add
test
leave
stos
sbb
mov
int
add
outsl
sbb
jmp
repnz
adcb
xchg
pop
aaa
mov
mov
insb
xor
clc
or
loope
sub
gs
lret
stc
sahf
ljmp
hlt
gs
add
push
lahf
arpl
bound
cmp
in
and
adc
jo
xor
popf
jp
and
mov
enter
lret
push
lahf
sarb
adc
mov
inc
inc
ret
call
aam
xchg
and
fistps
mov
repnz
mov
jmp
inc
out
pushf
pop
and
fdivl
out
aam
pop
dec
dec
lea
mov
adc
lcall
mov
ret
mov
pop
in
pop
cmp
push
insl
test
xor
ret
sub
xor
ficomps
push
call
aad
adc
arpl
add
or
insb
bound
leave
sbb
in
gs
dec
xor
pop
je
adc
test
inc
dec
out
jae
in
sbb
fcmovb
jle
mov
aam
sti
lcall
nop
outsl
dec
aas
imull
mov
xchg
pushf
jnp
lods
insb
rcll
arpl
xchg
pop
push
mov
sub
mov
sub
cmp
icebp
bound
icebp
cmp
or
es
pop
popa
dec
jno
xchg
adc
fdivrs
xor
jmp
mov
sti
lret
or
xchg
dec
lret
dec
cmp
cwtl
std
outsb
pop
fisttps
leave
cltd
shrb
sahf
fsubrl
dec
push
call
cmp
inc
cmpsb
clc
js
out
mov
sahf
push
dec
xchg
repnz
mov
int
mov
dec
inc
cmp
xchg
or
mov
pop
ret
ds
stos
repz
mov
xor
cmc
add
cmp
lcall
hlt
jmp
mov
scas
fs
push
push
and
out
push
xchg
sahf
adcb
popf
outsb
ljmp
push
jmp
das
shll
cvtdq2ps
inc
dec
mov
mov
jbe
add
or
mov
push
xchg
mov
shlb
mov
mov
push
subps
mov
inc
jecxz
push
movsb
cmp
scas
mov
mov
or
call
inc
or
popf
popa
and
stos
mov
sub
or
lret
lods
mov
pop
jp
movsb
adc
xchg
inc
mov
push
add
xor
mov
dec
out
cld
adc
xlat
rolb
mov
repnz
das
adc
aas
sbb
xor
ret
cmp
xchg
aas
adc
mov
je
in
mov
sub
lods
dec
leave
mov
outsl
test
pop
jmp
xchg
mov
or
outsb
jmp
push
pop
lcall
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
lock
outsl
jge
jle
in
pop
sbb
sets
and
dec
lret
cmc
scas
inc
xchg
aaa
das
rorb
push
mov
sbb
int
lds
or
dec
add
jne
insb
mov
loope
js
mov
jecxz
xchg
fimull
adc
dec
mull
jle
cmp
lods
sub
cmpsb
mov
daa
dec
pop
test
js
xchg
test
sub
jg
xlat
or
addr16
cmpsb
fwait
jnp
icebp
repnz
or
scas
and
testb
jnp
scas
push
repz
cmp
cmp
jns
inc
stc
inc
mov
outsb
jo
es
pop
xlat
pop
dec
jl
mov
lcall
xor
test
pop
inc
inc
outsl
loopne
lahf
push
push
lret
shrb
mov
fs
lods
adc
ljmp
scas
hlt
pop
inc
xchg
out
lods
jle
mov
xor
in
std
and
fildl
iret
sub
sub
ret
ja
cmpsb
hlt
jbe
inc
pushf
dec
mov
out
sbb
mov
jle
pop
mov
inc
loop
add
popf
loope
jb
int
loopne
mov
les
sub
psubd
push
push
inc
jge
icebp
pop
ret
popf
daa
fistpl
and
rorb
fiaddl
inc
inc
popa
jbe
adc
xchg
testl
inc
push
push
lods
pop
int
lcall
fscale
sbb
sbb
dec
push
fildll
and
inc
jecxz
shlb
push
jle
rcl
pop
mov
sbb
add
shll
xchg
scas
add
cltd
adc
lds
insl
cs
pop
clc
into
sbb
sbb
popa
sbb
jl
mov
xor
nop
mov
adc
movsb
sub
inc
mov
push
scas
cld
lea
inc
arpl
repz
mov
dec
pop
iret
int3
cmp
rolb
inc
jge
adc
outsl
xchg
pop
xor
mov
inc
cmpsl
pop
cmp
mov
push
fs
dec
dec
stos
sbb
cmc
push
add
jecxz
ljmp
cmc
test
sub
fwait
sarl
mov
jle
lret
mov
mov
daa
mov
mov
fistl
test
push
enter
cmp
sarb
mov
cmpsl
sar
fisttpl
ljmp
pop
popa
and
imul
push
cmp
push
inc
sbb
cmp
in
dec
push
dec
arpl
adc
dec
cmp
xchg
fistl
lds
das
cmp
fldcw
sub
rcl
pushf
mov
test
icebp
or
and
mov
xchg
pop
pop
push
shl
mov
les
push
ret
push
mov
xor
sbb
cmpsl
or
sbb
cwtl
movsl
scas
or
xchg
dec
sbb
fsts
cmpsb
ja
add
lahf
lret
inc
sbb
inc
xchg
mov
out
daa
and
aad
das
pop
push
divl
fwait
rcll
add
fcmovu
pusha
and
jbe
sub
sbb
jb
inc
adc
loope
aaa
arpl
mov
pop
and
les
in
ss
pop
cld
loope
pop
adc
xchg
ficoms
fsubl
push
rolb
stos
cmp
jne
adc
xchg
jbe
in
leave
sbb
mov
insl
test
lret
lahf
movsl
and
fidivl
cltd
dec
jp
fsubrs
and
sbb
mov
scas
fdivs
inc
jl
or
xlat
cwtl
or
test
xchg
sub
out
inc
aad
inc
bound
loope
cs
pop
xor
push
pop
test
out
sbbl
popf
pushf
cmp
add
xchg
shll
scas
ret
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
mov
outsl
jge
jle
push
sub
mov
sub
jns
ficoml
scas
test
mov
test
adc
es
movsb
pop
xor
movsl
push
mov
iret
pop
pop
xlat
push
dec
sbb
push
push
aaa
pop
int3
cmp
sbb
cltd
jno
and
dec
jle
and
insb
mov
loopne
aam
mov
enter
mov
add
dec
sbb
mov
sbb
add
mov
cmpsb
nop
in
shlb
rclb
pop
outsb
dec
test
sub
rcrl
adc
hlt
add
movsl
and
repnz
pop
sub
iret
test
sub
lcall
movsb
ficoml
pop
lahf
sub
fmuls
push
fwait
xchg
insl
daa
cmp
cmpsb
lcall
xlat
pop
sbb
enter
jmp
xor
ret
push
sub
out
mov
xchg
test
repz
jb
ljmp
jne
hlt
in
cmc
adc
mov
movsb
cld
pop
xchg
cmp
lods
subl
movsl
mov
cmp
sbb
cltd
inc
hlt
adc
mov
clc
insb
adc
jg
ljmp
test
push
pop
rcll
orl
xor
jns
loope
push
dec
adc
jle
pop
cs
adc
into
shlb
xor
scas
icebp
pop
jmp
lods
and
loop
xchg
ss
and
sbb
adc
xchg
jp
pop
add
jmp
mov
sbb
add
push
sub
cmp
addr16
sahf
adc
push
bound
inc
adc
out
stos
and
push
hlt
add
mov
dec
cmpsl
mov
sub
sub
mov
xor
mov
push
xchg
cmp
push
fsub
or
or
xor
cmp
cwtl
inc
loop
xchg
xchg
cli
mov
pop
outsl
pop
fdivr
dec
loop
cmp
xor
icebp
aaa
testb
lods
cltd
repz
loopne
in
leave
ljmp
fs
cmp
push
outsl
cmp
pop
cmp
cli
xor
movsb
in
popf
push
je
test
jge
adc
cmpsl
int
ss
pop
clc
push
mov
pop
outsb
or
clc
add
not
paddsb
sahf
arpl
sti
cli
sahf
inc
jae
in
jle
dec
movw
jmp
mov
or
test
mov
sbbb
push
insb
repz
inc
test
negl
mov
jge
xchg
cmpsb
outsb
jl
arpl
enter
mov
sub
and
add
push
enter
inc
adc
test
add
jl
repnz
push
iret
stos
push
xchg
ss
js
ret
fcoml
and
mov
stos
push
shrb
mov
enter
cmc
xor
sti
jb
push
ss
out
or
sub
lock
mov
jmp
sub
adcb
mov
adcl
stos
ret
dec
dec
add
mov
mov
push
js
js
adc
lds
dec
jge
cmp
loope
repnz
and
cmp
cld
pop
pop
xchg
adc
jmp
xchg
cmp
repz
je
mov
push
insl
pop
sub
adc
sti
lahf
mov
jle
dec
xor
mov
sarl
mov
add
xchg
movsb
xor
shrb
cmpsb
push
cli
xchg
in
aas
pop
xchg
fcmovnbe
xor
jb
and
sub
hlt
cmpsb
xor
cmpsl
inc
sub
jmp
xor
mov
and
shrl
xor
movsl
cmc
jge
std
sbb
and
into
bound
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
pop
es
push
les
sub
sarb
push
std
subb
pop
mov
jbe
push
es
rcl
jns
push
inc
mov
pop
jg
push
in
nop
pop
mov
jmp
adc
imul
repnz
xchg
pop
xor
push
fbstp
lea
fdivs
lret
sar
adc
pop
mov
xor
test
cs
xor
or
mov
push
mov
mov
adc
fs
rorb
mov
add
test
pop
dec
repnz
test
jne
loop
in
cmp
roll
in
or
daa
shlb
mov
ljmp
inc
mov
pushf
clc
ret
cmp
loope
popf
insb
inc
and
or
mov
push
sbb
dec
push
cwtl
mov
push
lea
pop
sub
cs
bound
xor
mov
movsl
repnz
pusha
jo
xlat
imul
lcall
dec
cli
adc
adc
out
in
mov
mov
push
or
mov
jns
and
dec
or
adc
daa
cmpb
add
sub
xor
mov
jp
adc
sarb
and
out
cmp
andl
ret
jae
pushf
nop
hlt
mov
push
jae
ja
or
cld
pop
stos
cmpsl
push
addr16
jg
fbld
push
jbe
flds
dec
dec
mov
mov
js
pusha
or
repnz
shll
cmp
fistl
loop
dec
xchg
and
push
cmp
loop
fisttpll
js
push
test
xorb
sbb
add
out
jg
popf
fmul
fcomi
sub
leave
pusha
loope
adc
inc
jle
das
sbb
inc
imul
mov
mov
or
push
iret
shll
sub
jo
sub
or
in
leave
mov
aaa
inc
dec
cs
pop
cmc
andl
xor
fucom
sbb
test
pop
or
cmpsl
xchg
decl
adc
mov
vpmacsdd
xlat
sub
js
and
mov
cmc
xchg
cmc
int3
lret
test
push
pop
adc
lds
pop
adc
gs
xchg
mov
and
repz
subb
nop
mov
jge
ja
dec
mov
inc
stos
lahf
scas
repz
leave
cmp
sbb
dec
popf
xor
xor
dec
sbb
mov
jns
clc
xchg
xor
xor
iret
clc
bound
mov
dec
cld
out
adc
repz
mov
loope
mov
jle
add
pop
test
xorb
gs
jne
pop
pop
ret
cmp
sub
and
aad
inc
push
or
mov
pop
xchg
out
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
aad
js
hlt
sub
xor
jle
dec
push
test
arpl
rcll
or
or
add
and
popf
icebp
dec
leave
out
xor
stos
sbb
ffree
into
lds
sbbb
cmc
cmp
mov
sbb
push
adc
cmp
insb
es
int3
mov
rorb
xchg
das
sub
cmpsb
pusha
mov
test
mov
adc
cli
bound
cmp
hlt
and
jp
stos
and
xor
jecxz
push
divb
ret
pop
cli
cmp
push
addb
pop
cltd
sti
push
scas
test
icebp
jns
sarl
mov
add
cmpsb
fwait
cld
push
cmp
pop
inc
imull
das
ffree
add
into
add
jg
movsb
push
andl
push
inc
faddl
movsb
pop
xchg
jbe
adc
mov
ret
xchg
shlb
mov
xchg
jp
test
aad
cmp
daa
and
cmp
inc
testb
in
lock
mov
pop
int
jecxz
inc
movb
arpl
mov
or
fldt
xchg
push
test
enter
push
cli
mov
push
int
mov
jns
aad
push
rclb
lock
pop
mov
mov
pop
mov
jns
loope
aad
dec
mov
adc
sub
repnz
dec
movsb
mov
xchg
loop
or
and
inc
outsl
xchg
notl
xor
pop
test
xchg
pushf
ret
sbb
rcrb
les
lahf
jmp
and
sub
fwait
pop
mov
mov
or
popa
mov
xlat
mov
xchg
aad
aaa
fidivl
test
repz
test
dec
sti
and
sbb
in
ss
ds
jp
inc
pop
adc
test
inc
sbb
mov
xor
popf
pushf
inc
jp
sub
cmp
fincstp
push
lea
mov
adcb
cli
loopne
xchg
maskmovq
mull
mov
aas
push
ljmp
test
inc
mov
mul
jnp
inc
jne
sbb
xchg
cmp
lcall
pop
iret
rcl
xchg
adc
jo
xchg
dec
sbb
shll
xchg
divl
pop
mov
insl
ja
dec
pop
jo
js
ljmp
dec
in
sahf
mov
dec
sarb
les
std
sti
ja
fildll
xor
inc
add
cs
mov
cmp
and
in
rcrb
loopne
les
ret
inc
mov
lds
arpl
jne
aam
pop
pop
pop
adc
sbb
bound
jp
and
inc
xchg
sti
cmpsb
lds
mov
mov
inc
mov
out
shll
or
inc
cmp
inc
ds
jmp
insb
jmp
fsubrl
cmp
xchg
popf
jbe
mov
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
test
pop
add
rcll
test
xor
jo
es
insl
pop
std
mov
repz
cmc
jo
dec
sub
data16
cmp
jns
into
and
mov
jg
aam
pop
jno
sub
movsl
scas
fistpl
cmp
mov
dec
jae
ja
xchg
out
cmpb
pop
adc
push
mov
sar
in
imul
push
jmp
outsl
lcall
sub
enter
add
and
cmp
int3
stos
es
pop
mov
sbb
leave
pop
ds
inc
jecxz
loope
outsb
push
adc
mov
xchg
std
jb
fcmovnbe
scas
and
pop
movsb
stos
mov
loopne
addb
pop
jge
mov
dec
add
in
aam
mov
pop
shll
test
mov
cmp
loopne
mov
imul
aad
mov
mov
mov
pop
outsl
jnp
lret
js
mov
xchg
sub
jo
shll
xlat
movsb
pop
and
mov
outsl
xor
xchg
xor
mov
andl
sti
mov
dec
jns
int
rorb
mov
push
add
js
mov
cmp
mov
add
add
lcall
xor
mov
push
std
movsb
icebp
and
imul
push
mov
sbb
add
xchg
fildll
inc
loope
icebp
ljmp
push
sbb
data16
or
xor
sbb
fstps
lahf
icebp
push
pop
inc
nop
dec
jmp
testl
sbb
xor
test
test
inc
mov
pop
dec
push
clc
les
out
inc
nop
test
mov
ss
add
jbe
std
cltd
dec
outsb
nop
subb
jmp
fistl
pop
mov
ret
pop
jecxz
xchg
mov
test
out
xlat
adc
mov
stos
int3
cmc
jmp
shrl
push
daa
push
lcall
add
add
and
je
mov
sahf
mov
jmp
mov
push
inc
ret
cmpsl
ja
loope
xchg
popf
dec
fwait
inc
sbb
inc
adc
sbb
pop
jp
adc
mov
push
lret
arpl
mulb
xchg
mul
orb
pop
jnp
into
aad
sub
repz
fcmovnu
enter
xchg
sbb
or
nop
push
lds
std
jno
movsb
faddp
icebp
sbb
dec
xchg
ja
scas
mov
sbb
xor
mov
pop
xchg
faddl
js
mov
lret
cltd
movsb
test
out
push
xlat
dec
rcrb
dec
add
xchg
and
cs
dec
cld
pop
sbb
lds
pop
icebp
mov
sbb
and
bound
outsb
xor
sbb
int3
rclb
cmp
pop
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
imul
xor
jle
bt
jb
movsl
mulb
xor
pop
push
sub
add
aam
scas
test
loopne
mov
and
jg
daa
dec
fdivl
mov
in
out
push
sub
sti
test
inc
fldt
cmpl
mov
sbb
int
outsb
cmp
int3
jmp
inc
adc
mov
and
pusha
pop
inc
jae
imul
addb
scas
enter
mov
inc
cli
aad
mov
lcall
hlt
inc
or
jp
lret
cmc
cmp
fadd
xchg
push
inc
xor
sbb
daa
add
stc
dec
mov
xchg
fwait
adc
dec
popf
xchg
pop
lcall
fnstenv
iret
inc
inc
jae
roll
push
xlat
inc
adc
pop
js
vpmovsxwq
shlb
xor
jb
mov
add
jne
push
inc
dec
push
push
adc
cmp
push
cmp
cmp
ret
push
add
test
and
pop
sarl
mov
push
fcmovu
in
aam
inc
lods
test
push
nop
mov
in
dec
es
dec
das
inc
sub
push
push
xchg
lret
ffree
daa
fwait
push
jns
pop
pop
xchg
outsl
cs
mov
ss
aad
mov
and
dec
add
jne
lret
sahf
repnz
or
jo
mov
xchg
jno
sbb
inc
sub
fldt
add
sbb
call
hlt
push
sbb
fsubs
xor
mov
mov
cmp
insl
fwait
pop
lcall
mov
xor
sti
mov
mov
movsl
into
mov
in
sbb
xor
lcall
xor
sarl
shll
ret
dec
pop
insb
popa
loope,pn
lmsw
xlat
mov
xor
or
dec
jmp
scas
cli
xchg
xchg
xchg
test
pop
ja
xchg
dec
cld
inc
lock
add
popl
xor
sub
mov
roll
mov
push
leave
imul
or
shll
sub
movb
adc
aad
jae
or
dec
lock
jnp
mov
roll
pop
out
mov
mov
and
jae
in
cli
comiss
repnz
and
push
hlt
psllq
or
lret
xchg
int
imul
and
jl
xchg
loop
imul
lock
xor
aam
push
mov
lret
das
int3
adc
and
mov
aas
loopne
stos
aad
leave
cli
push
xchg
pop
pushf
and
adc
dec
rclb
lea
shlb
movsb
movsb
sahf
jmp
xor
dec
imul
jno
aas
bound
cmp
out
xchg
sbb
aam
and
cs
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
in
sub
xor
jle
jecxz
dec
test
leave
dec
cmp
mov
xor
add
mov
fcomp
rcrb
mov
in
jl
enter
sub
movsb
repz
xor
rcrb
fnstcw
cli
pop
push
mov
push
movsb
sbb
push
out
inc
stos
inc
stc
xchg
inc
inc
cli
add
push
adc
test
xchg
mov
lretw
adc
dec
out
movsb
gs
mov
outsl
gs
std
scas
divl
fdivrp
xor
xor
cmpsl
repz
jmp
cltd
ds
cmp
push
mov
xor
cmp
pop
adc
and
pushf
movsb
mov
popf
xchg
add
add
pop
fsub
jecxz
and
and
jne
icebp
test
les
addl
jae
lods
sub
xor
push
inc
insl
dec
filds
mov
out
rcll
mov
xchg
xchg
hlt
loop
mov
cmp
lods
popf
dec
cmc
sub
pop
cmc
push
xchg
in
add
std
jecxz
imul
aas
xchg
ret
hlt
dec
outsl
push
imul
iret
enter
xor
ja
cmc
stos
mov
loopne
mov
inc
mov
xchg
in
aas
push
cwtl
pop
popf
mov
add
mov
iret
imul
dec
and
jne
lods
es
imul
lds
cltd
test
fs
inc
inc
data16
mov
mov
and
dec
ljmp
call
dec
adc
mov
sub
rcrb
out
roll
and
inc
iret
sbb
cmp
jg
repz
fldcw
sbb
xor
es
lcall
mov
pushf
push
sbb
mov
mov
mov
sbb
mov
stos
xchg
mov
mov
push
arpl
daa
pop
mov
inc
mov
movsl
fwait
cmp
rep
mov
imulb
fsub
jp
sub
and
push
ret
outsl
pop
xor
stos
pushf
addl
sub
addb
stos
push
jo
ret
dec
adc
cmp
mov
xchg
mov
fwait
push
popfw
inc
outsb
push
jbe
mov
xchg
test
push
aad
enter
push
push
cmp
daa
jno
mov
iret
int3
inc
push
out
or
and
xor
aas
stc
ret
scas
es
xchg
cmpsb
sbb
inc
das
xor
jl
and
mov
loop
pushf
or
pop
or
sbb
mov
repnz
scas
pushl
mov
mov
inc
mov
dec
sub
or
ja
jns
nop
insl
dec
jb
in
push
or
lods
icebp
dec
and
data16
mov
adc
shrb
jmp
xor
fidivrl
fimull
add
add
jno
ja
shrb
jno
popa
loopne
jle
xor
jle
xchg
bound
test
aas
and
and
dec
dec
inc
insl
jle
cmpl
cltd
or
divl
outsb
xchg
daa
ret
scas
sub
jo
mov
inc
inc
in
mov
test
mov
dec
clc
xchg
imul
inc
pop
movsb
jecxz
mov
add
xchg
jp
inc
pop
and
cltd
xor
jge
xchg
in
mov
movsb
stos
push
sub
mov
mov
jle
cmc
jmp
mov
mov
les
jbe
add
inc
cmc
pushf
fucom
scas
adc
xor
lods
data16
in
dec
daa
mov
xchg
cmp
pop
xchg
sbb
stos
ljmp
movsl
je
push
clc
sub
daa
nop
faddl
mov
insl
jb
sbb
inc
jne
xor
mov
mov
and
sub
pop
dec
loop
and
xchg
mov
push
rcl
pop
and
mov
inc
push
jecxz
and
fwait
sahf
ss
inc
flds
iret
sub
cmpsl
sti
add
fisubrs
sbbl
stos
fcoml
xor
mov
adc
je
cmp
jp
aaa
push
lcall
mov
xchg
push
dec
pop
lods
pop
fs
cmpsl
in
aad
jmp
ficoms
insb
xlat
ss
lea
dec
sbb
mov
push
push
cwtl
mov
add
inc
inc
outsb
add
cmp
push
fsubrl
scas
leave
cmp
and
pusha
push
addr16
in
mov
or
lcall
xchg
ljmp
test
movsl
push
and
jg
insl
lods
push
icebp
insb
pop
into
popa
pop
aad
sbb
inc
fmull
mov
adc
mov
fwait
cmpl
mov
sub
fcomps
fidivs
adc
aaa
add
jge
cmp
inc
cmp
pop
popa
mov
mov
aaa
push
ss
bnd
insb
xlat
jbe
inc
sbb
mov
add
fwait
mov
mov
jnp
fmuls
movsb
add
stc
imul
stc
add
pusha
sbb
adc
js
dec
imul
jle
out
fildll
jle
sbb
leave
dec
sub
or
pop
std
add
sub
cmp
jno
jnp
or
or
bound
xchg
add
push
sub
loopne
pop
add
jmp
jecxz
leave
push
push
mov
pavgb
xchg
mov
pop
outsl
xor
insb
loopne
pop
xorl
lds
int3
iret
mov
lcall
scas
xchg
sbbb
jbe
push
xchg
sbb
std
mov
or
sbbb
nop
or
dec
xchg
mov
fcom
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
and
movsl
cmp
xor
jle
dec
xchg
lods
and
jo
pushw
jle
fwait
sbb
adc
repnz
and
dec
xchg
adc
jne
dec
aas
xchg
adc
iret
fstpt
ja
dec
cmp
shlb
mov
mov
pop
sbb
sbb
orl
jle
leave
mov
jl
mov
xchg
push
cld
mov
mov
pop
mov
test
dec
pop
xor
pop
clc
pop
outsb
jne
pop
xchg
lret
sbb
lods
mov
push
loopne
decb
pop
test
sti
dec
dec
cs
mov
int
subl
jno
loope
or
mov
add
push
loopne
lods
xor
out
out
push
in
mov
sbb
test
into
push
jg
xor
mov
cmpl
cmp
and
mov
jg
jns
fwait
push
mov
sbb
push
hlt
add
cwtl
pop
xchg
dec
inc
jmp
dec
jbe
jge
inc
cld
xchg
inc
test
aad
pop
in
mov
adc
xor
xchg
fwait
jnp
adc
cmc
sbb
pop
lods
sarb
test
push
xchg
adc
out
pop
add
jae
jo
xor
icebp
sbb
lods
pusha
mov
inc
pop
nop
std
add
sti
dec
js
pushf
ds
dec
mov
test
ja
pxor
cmp
ja
cmp
mov
std
xor
pushf
add
pop
lcall
loop
cmp
and
cmp
mov
cmp
inc
xchg
test
sbb
pop
fstp
mov
xor
scas
lods
or
and
andb
mov
pop
ret
xor
cmp
xchg
call
clc
fs
jns
sbb
jbe
xchg
sub
int
inc
and
aad
mov
lret
pop
ljmp
leave
cltd
mov
cmp
sahf
pop
mov
and
cmpsl
movups
xchg
pop
fs
lret
or
andl
aad
out
cwtl
bound
cmp
movsl
jno
or
mov
flds
repz
push
mov
adc
xor
mov
shrl
sbb
stc
sub
in
lods
insb
lods
pop
jecxz
cmpsl
bound
add
inc
jl
jno
add
mov
sbb
inc
adc
std
ja
xor
inc
sbb
mov
jne
xchg
sbb
pop
dec
negl
xchg
cmp
fnstenv
js
push
adc
mov
das
mov
mov
movsb
add
mov
xchg
adcb
sbb
into
mov
mov
test
jmp
cmp
xlat
ja
in
mov
out
inc
shrl
jl
dec
jne
bound
push
xchg
divl
mov
mov
clc
and
xchg
mov
jl
repz
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
fdiv
pop
data16
jle
fistpll
pop
aas
inc
fsubs
add
insl
mov
inc
arpl
and
mov
dec
push
ret
loop
jno
mov
adc
inc
inc
mov
cmpsl
cmpl
test
jmp
mov
ja
cmp
adc
aam
jge
sub
call
dec
lret
push
cmp
lret
add
orl
pop
push
imul
cmp
xchg
lret
es
jns
xor
and
mov
push
cltd
xchg
sbbl
xlat
call
cwtl
popf
test
or
aad
je,pn
mov
out
popa
andl
call
mov
jmp
jmp
mov
mov
xor
addb
cld
jns
lcall
xor
sbb
mov
pop
adc
mov
rcll
jge
dec
push
push
sub
daa
negl
pop
sbb
mov
pop
rol
lea
out
xor
inc
decl
push
movsl
lret
jae
loope
push
adc
insl
out
sub
shll
iret
jbe
loopne
test
lret
add
xor
jmp
or
xor
jae
imul
out
inc
jg
scas
cmp
dec
dec
arpl
sub
add
or
push
push
lock
clc
repnz
jne
jne
jmp
sbb
pop
or
xor
sub
dec
mov
test
rclb
adc
adc
emms
rep
jnp
cs
jle
inc
sti
sbb
in
ror
mov
mov
js
out
dec
pop
add
push
sti
in
xor
roll
mul
add
add
repz
xor
mov
xchg
inc
stc
lcall
and
inc
movsb
popl
mov
and
push
cltd
cmp
lds
scas
ret
lods
jbe
out
cmp
adc
mov
cmp
push
cmc
cli
subl
arpl
adc
adc
cld
shlb
fs
je
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
in
mov
fistpll
push
mov
mov
pushf
mov
lahf
xor
xor
pop
sub
jno,pn
iret
gs
stos
js,pt
jle
cltd
popf
fwait
out
xchg
dec
mov
jbe
adc
dec
add
mov
pop
fs
out
inc
pusha
imul
in
add
movsb
or
adc
push
sub
test
les
rcrb
xchg
pusha
iret
scas
cmpsb
and
jge
fcoml
out
push
sti
or
shrl
or
dec
xchg
xor
ljmp
sub
mov
gs
in
jbe
outsb
mov
xchg
ljmp
call
jecxz
pop
xchg
push
ret
lds
xchg
inc
les
pop
jb
adc
sbb
sub
cmp
lret
push
lods
repz
add
mov
and
adc
xor
push
loopne
cli
arpl
mov
inc
sahf
jp
lret
jl
in
stos
dec
add
pushf
stos
pop
or
out
cltd
nop
fs
lret
incl
push
popa
adc
cwtl
push
or
lods
test
cmp
scas
cmp
call
scas
mov
fcmovb
pop
lods
jns
test
ss
sbb
pop
outsb
imul
cs
nop
pop
enter
sti
mov
mov
cmp
push
dec
and
dec
ret
lock
cmp
mov
sub
or
daa
inc
push
mov
push
js
pop
cltd
rorl
and
push
jl
jl
mov
and
pushf
cs
mov
or
arpl
shr
out
clc
scas
fmull
dec
scas
sub
call
pop
xor
in
shlb
mov
out
stc
and
jae
dec
insl
fistpl
push
lock
mov
or
js
sarb
and
cmp
sbb
adc
mov
notl
and
mov
pop
sub
hlt
xor
mov
push
nop
add
jecxz
decl
imul
pop
jae
pop
jae
outsl
in
or
push
idivb
scas
addl
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
popa
dec
xor
jle
jge
jle
lea
inc
out
xchg
dec
jge
mov
xchg
nop
clc
out
lret
rcrb
std
inc
lcall
mov
or
scas
sub
testl
fsubl
div
and
xor
cmp
cld
shll
mov
fdivrs
daa
add
fildl
cmp
shrb
aam
and
in
xor
or
mov
xor
int3
mov
incl
and
pop
rolb
repnz
push
stos
hlt
shlb
jecxz
mov
push
sbb
pcmpeqd
repnz
ss
mov
movsb
movsl
leave
mov
push
add
mov
testb
or
stos
inc
mov
pop
dec
aad
ss
sub
push
mov
pop
push
loop
sbb
jecxz
xor
push
sub
push
sbb
jnp
data16
sub
cmp
sub
in
jbe
xchg
gs
sti
xchg
jo
addr16
popa
or
pop
lods
push
cld
push
mov
cmpsl
inc
pop
or
inc
xchg
or
dec
dec
jl
and
and
add
aas
jns
or
jg
jmp
cmp
mov
mov
leave
movb
into
xor
ficompl
sub
lods
nop
sbb
jno
cmp
sub
stos
sbb
jbe
inc
shrl
stos
mov
cmp
push
mov
dec
mov
inc
test
add
push
mov
sbb
cmpsb
or
adcb
pop
in
mov
push
push
ficoms
outsb
sub
adc
iret
jne
ret
pop
ret
adc
in
rclb
loopne
mul
and
aas
cwtl
sahf
add
push
adc
out
movsb
aaa
cmpsl
xorb
mov
xchg
jns
es
mov
xchg
jle
neg
mov
xlat
jp
lahf
addr16
pushf
pop
mov
pop
fsubrs
fwait
sbb
es
leave
sbb
jnp
push
ss
cmpb
dec
dec
adc
cmp
fs
sbbl
rcrl
jle
mov
xchg
test
xor
mov
jae
or
sub
arpl
arpl
mov
xchg
xchg
fistps
lea
in
imul
jns
das
adc
testb
stc
cltd
fldz
xchg
push
mov
jnp
xor
xor
aas
stc
adc
xchg
fadd
jmp
dec
inc
fldcw
bound
pushf
cmp
jge
xchg
pop
divb
and
cmp
mov
clc
sub
push
and
and
shrb
shrl
cmc
repnz
in
mov
push
out
jmp
push
jno
mov
imul
or
fidivrl
shr
sarb
sub
lret
sti
add
jp
or
pop
or
dec
or
insb
mov
imul
add
gs
add
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
sub
out
iret
jle
and
jle
cmpsb
mov
int3
jg
out
pop
sub
sbb
cmc
cs
int
inc
mov
clc
sub
mov
pop
dec
pusha
fimull
mov
inc
fisttpll
inc
push
pushf
cmp
and
xchg
jb
cmp
mov
push
sub
fadds
aas
xor
and
fildl
lods
int3
popa
mov
mov
lret
sub
adc
iret
int
add
ds
pop
mov
xchg
int
fldcw
cmp
repz
cwtl
jle
inc
pop
test
lahf
les
mov
pop
je
xor
pop
and
sub
adc
cmpsl
cmp
pushf
push
sbbl
pop
add
in
inc
jl
add
sbb
shrl
sbb
xchg
cltd
push
jl
cltd
xchg
lcall
jne
addb
sub
jl
adc
adc
or
add
sub
fidivs
jbe
int
dec
test
push
xchg
cmp
lret
stc
aas
mov
arpl
imul
mov
dec
and
add
adc
cmp
cmp
cmovo
nop
in
push
rcrb
jae
ja
dec
cmp
add
fstl
pop
fildl
pop
cmpsl
imul
pop
stc
inc
stc
jl
mov
testb
xlat
and
pushf
jp
out
lea
adc
ret
pusha
mov
mov
test
shrb
jp
pop
push
fcmovb
inc
cmp
test
xchg
jge
ds
pusha
call
out
mov
adcl
fmull
and
cmp
repz
lods
add
movsb
and
lea
and
xchg
or
add
stos
out
pop
mov
mul
mov
data16
adc
push
cwtl
ss
mov
jl
call
inc
out
or
xor
xchg
fxch
aas
fisubrs
shr
pusha
lods
cltd
pop
out
adc
xor
jbe
mov
mov
push
andb
push
dec
pop
pop
shlb
dec
bound
cmc
push
repnz
and
jge
pop
std
xor
xor
or
pop
rolb
and
cmpsb
add
mov
sahf
push
shlb
in
or
adc
mov
popf
and
in
mov
or
and
push
testb
dec
and
xor
je
test
inc
enter
and
push
pop
inc
in
outsl
mov
xor
and
das
clc
inc
cmp
pop
outsb
or
hlt
sbb
inc
aaa
and
add
add
sbb
pop
fwait
or
mov
aas
cs
dec
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
in
jg
js
jle
and
jle
sbb
loope
fnstenv
or
xchg
cltd
scas
ds
fldt
xchg
mov
push
clc
and
xor
adc
dec
jle
push
fwait
mov
gs
and
cld
dec
sti
push
jo
es
mov
lds
movsb
lods
push
pop
push
dec
add
xchg
fs
or
add
push
clc
and
pop
aas
stos
out
out
lods
sbb
lea
cmp
pop
fdivp
cld
sub
cmp
daa
aaa
sbb
data16
arpl
lods
shll
pop
cmpsb
cs
sbb
repnz
inc
inc
jle
out
mov
test
lds
push
adc
adc
add
shll
sbb
jmp
jmp
and
dec
movsl
mov
imull
pop
dec
add
outsl
loopne
negl
into
dec
popf
add
pop
pop
or
pop
clc
in
insl
es
std
clc
out
je
jge
dec
adc
and
cmpsl
loopne
dec
call
xchg
popa
pop
pop
pop
pop
cmpsl
and
ss
sbb
imul
pop
cmp
jecxz
mull
cmp
push
mov
push
adc
mov
lret
icebp
lds
sbb
cld
add
lahf
inc
mov
popa
mov
movsl
mov
pop
add
test
jbe
and
int
mov
adc
pop
push
adc
push
out
sub
imul
adc
stos
cmpsb
push
cmp
dec
roll
inc
in
movsl
mov
mov
add
insb
cmp
xor
aad
sarl
or
out
jmp
mov
mov
repnz
add
mov
xor
movsl
and
test
in
cmc
sub
ret
xor
aas
mov
fnstsw
dec
cmc
cmpb
push
movsl
push
orb
std
rorl
mull
mov
mov
jb
and
xor
shlb
xor
mov
xchg
cmpl
mov
fwait
sbb
je
push
call
xchg
into
int3
jp
mov
mov
test
or
stc
sub
movsl
cwtl
jnp
aaa
gs
sarl
and
mov
aas
call
jecxz
inc
inc
sbb
and
pinsrw
sbbl
pop
loopne
adc
jl
sub
pop
insb
test
push
fs
xor
add
mov
icebp
sbb
mov
push
inc
lcall
cwtl
xchg
push
sbbl
fwait
adc
hlt
gs
inc
push
sub
idivb
pop
fsubrs
shrb
jns
scas
sub
jne
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
loope
imul
in
jle
adc
dec
mov
divl
pop
push
pop
push
dec
jp
sub
xchg
imul
movsl
lods
mov
icebp
icebp
daa
xchg
xchg
jb
cmc
push
adc
jecxz
dec
nop
push
lcall
push
loopne
pop
and
adc
fnstcw
das
imull
or
sub
xchg
xlat
out
rolb
fisubrl
adc
push
loopne
ret
movsl
mov
ljmp
addl
pop
movsb
add
into
test
imul
stc
jae
mov
push
lods
fidivs
subl
mov
fisubl
sub
out
dec
es
pushf
js
pushl
movsl
adc
pop
cld
sub
mov
adc
sar
shll
aad
shufps
lock
int
mov
add
sub
movl
movsb
mov
daa
adc
mov
xchg
into
push
push
cltd
xchg
cmp
mov
into
mov
mov
and
or
xchg
leave
popa
push
lods
cli
push
popa
ret
jmp
movsl
pop
int3
outsl
mov
mov
and
sti
movsl
hlt
je
inc
push
cmp
andb
outsb
orl
mov
dec
lret
ljmp
icebp
lods
inc
jmp
inc
mov
inc
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
mov
jg
jle
inc
dec
repnz
test
incb
push
xchg
inc
xchg
dec
jge
test
pop
nop
pop
je
mov
mov
sub
xlat
jb
xor
lock
repz
adc
cmp
jbe
cmp
push
inc
adc
jno
mov
movsl
mov
push
leave
inc
sbb
in
jg
test
fdivr
dec
xlat
rep
pop
hlt
and
and
jecxz
jns
repnz
push
pop
scas
pop
les
aaa
dec
std
adc
es
cmp
adc
jo
fiaddl
and
adc
shrl
imul
arpl
arpl
sub
fdivl
in
jb
push
mov
push
lods
idivb
mov
xchg
push
jns
inc
xor
lea
flds
out
sbb
cltd
jmp
jae
mov
dec
pusha
stc
mov
fmull
lds
jge
xor
push
ret
push
xchg
pcmpeqb
inc
push
inc
or
mov
cmp
lcall
enter
jg
aam
lahf
jmp
ljmp
sub
push
test
sarl
cwtl
mov
dec
push
sbb
pop
pop
pop
movsb
mov
mov
jg
ret
daa
push
ja
sbb
dec
add
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
pop
push
rclb
or
mov
jno
fnstsw
dec
int
adc
mov
or
daa
xchg
mov
ds
out
jge
or
cli
out
lret
and
pop
push
idivl
pop
arpl
push
insb
popf
mov
cmpsb
mov
xchg
push
mov
mov
mov
pushf
xor
xchg
jb
mov
sub
fcmovbe
xor
push
sub
xchg
cmc
xchg
lcall
cwtl
adc
and
inc
pop
movsl
jne
push
insl
std
xor
mov
sahf
call
js
pushf
push
pop
sbb
test
shlb
and
in
dec
mov
popf
xchg
mov
aad
push
bound
rorl
push
push
sbb
pop
mov
push
dec
aam
xchg
clc
dec
adc
aaa
je
loop
imul
into
add
xor
sbb
inc
nop
push
mov
or
rorb
adc
mov
arpl
and
sbb
inc
push
cs
aam
mov
sbb
inc
cmp
mov
insb
sub
mov
add
sbb
jle
cmp
sub
in
cmp
aaa
or
lods
pop
xchg
lcall
mov
loope
out
jns
xor
test
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
jmp
dec
repz
sarb
in
jle
scas
add
dec
int3
sub
mov
xor
out
idivb
adc
push
jno
adc
cwtl
popf
fsts
mov
inc
test
push
out
lds
cmp
pop
jecxz
js
mov
std
sbb
pop
cmp
mov
ret
dec
jnp
out
xchg
mov
push
cmp
je
and
insl
call
cmc
mov
out
xchg
add
pop
xlat
xchg
mov
xchg
push
push
imulb
jle
xchg
je
outsl
jo
dec
mov
mov
subl
ljmp
jg
lcall
mov
insb
ss
dec
and
mov
sbb
adc
mov
dec
pop
out
xor
daa
inc
cltd
xor
outsl
clc
fisubrs
loope
xchg
push
cmp
fadds
mov
popf
call
loopne
mov
pop
mov
jge
inc
sahf
sbb
popa
js
cmp
xor
das
in
sahf
in
pop
jle
loope
out
sub
fsts
stos
imul
pop
fidivrs
push
sbb
mov
in
shlb
or
pop
jecxz
push
insb
leave
jne
mov
notl
test
mov
lea
push
mov
mov
push
jbe
mov
int
lds
jns
lahf
xor
mov
xor
add
jmp
adc
test
or
sarl
in
jle
mov
stc
jp
mov
jg
sub
mov
push
cmc
pusha
loope
out
push
lret
out
adc
mov
cltd
inc
icebp
adc
test
decl
mov
das
push
mov
sbbl
fwait
xchg
push
add
das
xor
push
sub
or
incl
cmp
cmp
push
stc
inc
inc
imul
sti
mov
pop
xor
sahf
sbb
pop
jg
aad
pushf
shl
mov
cwtl
bound
push
call
scas
ja
mov
shlb
mov
cmpsl
cltd
sub
les
das
out
xorl
in
or
shlb
popf
or
xchg
imul
rcrl
or
pop
enter
scas
jb
mov
inc
movsl
adcb
and
xchg
sar
and
shrl
mov
add
repz
pusha
cld
mov
mov
and
setle
mov
int3
push
popf
jl
pop
fcmovnbe
xor
mov
adc
stos
stc
mov
and
aad
adc
insl
mov
dec
sbb
adcl
fcomps
data16
lock
push
mov
inc
aas
cs
addr16
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
push
inc
cmp
jle
in
jle
inc
mov
cmp
jg
das
movsl
inc
scas
int
add
mov
cwtl
push
mov
pop
mov
push
fwait
push
adc
loopne
cmc
mov
mull
xchg
or
out
and
lods
or
xlat
adc
add
mov
jmp
jge
sbb
jmp
imul
mov
sbbb
mov
cmp
xchg
pop
jmp
xor
pop
and
mov
call
js
mov
sbbb
imul
fnstenv
mov
fisubrl
nop
sbb
xor
cmp
mov
cmp
pop
sub
push
sbb
sbb
pop
pop
dec
hlt
xchg
jbe
dec
jmp
jo
mov
jl
lods
std
rcll
daa
mov
pop
sahf
daa
xor
mov
enter
insl
mov
jns
mov
sbb
mov
push
es
fnstenv
mov
inc
sbb
jb
movsb
fcomps
imul
in
loop
popf
lcall
push
mov
fnstsw
mov
mov
imul
ret
lcall
pusha
jno
mov
loopne
ret
sbb
imulb
cmp
lods
push
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
push
jg
jl
fidivrs
in
jle
fdiv
pop
loope
fs
push
xor
repz
and
sbb
jae
fwait
jne
xor
mov
out
pop
stos
in
lret
mov
div
jmp
dec
jmp
test
jmp
dec
jmp
jnp
int
movd
mov
lahf
and
or
lret
repz
imulb
test
ja
dec
jg
aad
or
pop
mov
mov
xchg
jle
xchg
in
clc
jp
repnz
cs
js
sbb
orl
sub
and
jg
lock
cmpsl
mov
or
in
and
sbb
sbb
jbe
bound
mov
mulb
jb
pop
fsubp
scas
or
fs
push
jg
sub
fimuls
scas
out
adc
mov
test
mov
shr
mov
adc
iret
imul
scas
jne
cwtl
xorl
dec
hlt
imul
out
mov
lock
pop
call
sub
dec
stc
mov
sub
push
push
xor
aad
test
push
test
or
mov
jle
sbb
sti
cs
jge
outsb
xor
jae
push
adc
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
push
les
mov
fdivrl
in
jle
push
leave
les
push
and
aam
cmpsl
ret
test
push
sbb
cmc
cmp
outsl
xchg
out
ja
popa
cld
mov
or
loop
aaa
jle
lds
or
jecxz
fcomi
inc
mov
ret
sti
lds
jmp
add
mov
cmp
cmc
xchg
add
xor
mov
jo
mov
test
imul
sbb
mov
nop
cmp
test
dec
iret
lahf
addb
movsl
pop
mov
adc
loopne
sub
sub
push
pusha
fs
inc
mov
and
mov
xchg
imul
xor
sub
cli
and
in
imul
jp
movsl
cmpsl
nop
or
push
test
imul
addr16
mov
cmpsl
jb
mov
hlt
sahf
add
inc
push
idivb
mov
cmp
gs
ret
cltd
outsb
leave
jmp
sub
enter
mov
call
jecxz
lahf
mov
push
adc
jnp
jmp
sbb
xorb
mov
inc
mov
scas
mov
daa
aad
fisttps
adc
movsb
lock
roll
sub
ret
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
mov
pop
pop
mov
pushf
jbe
pop
ret
jmp
mov
jbe
mov
addr16
in
xor
push
fs
cmp
cmpsl
ret
jle
stc
push
adc
sti
cmp
cld
pop
arpl
mov
pop
cs
outsl
popa
out
fwait
pop
fmuls
leave
lea
mov
push
mov
sbb
or
jle
fcompl
lcall
ret
fdivrs
cli
cmp
inc
sbbb
gs
and
fsubr
xor
mov
lret
shll
xor
adc
call
adc
pop
fsubrs
mov
sub
xchg
fildl
rcrl
pop
dec
cmp
pushf
scas
push
test
enter
cmp
stos
adc
shr
xor
ficomps
pop
add
pop
jecxz
lahf
jp
fnstenv
jo
and
or
xor
sbb
loopne
jp
pop
jg
int3
mov
fs
jl
xor
call
mov
subb
sub
mov
hlt
lock
mov
repnz
ret
cwtl
sti
fldcw
push
test
loope
fsubr
dec
push
dec
ds
lcall
sub
mov
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
sub
jle
jp
jle
jb
xchg
pushf
or
push
test
pop
jmp
adc
jge
push
rcr
mov
ss
sub
fsubs
or
aaa
imul
add
cwtl
dec
ret
dec
mov
xchg
enter
sbb
and
lret
ljmp
pop
fldl
pushf
jae
adc
sbb
lods
sbb
xchg
icebp
cmpsb
mov
xor
xchg
notl
and
aad
add
sbb
xchg
dec
ret
xchg
inc
stos
mov
roll
jp
pop
xchg
in
xchg
imul
add
fwait
push
sub
fimuls
leave
mov
scas
jle
test
jg
mov
outsl
arpl
dec
xchg
inc
sub
mov
push
dec
in
pop
adcb
rcll
and
adc
add
gs
addl
int3
push
loop
or
sahf
sub
cwtl
aad
mov
lock
inc
and
repz
bound
xlat
sub
sub
sbb
into
mov
decl
xchg
xlat
decb
sti
es
repnz
pop
xor
cmp
or
adc
mov
and
ss
in
mov
int
add
js
ljmp
xor
cmp
cmc
jns
loopne
cwtl
in
mov
mov
mov
jno
push
popf
sub
sbb
jmp
lods
mov
xchg
push
jge
jb
pop
add
cld
xchg
outsb
enter
mov
scas
sbb
rcll
and
lds
adc
dec
xchg
sub
dec
cmpsb
loope
inc
gs
stos
mov
test
dec
mov
outsb
inc
dec
add
sti
inc
xchg
iret
xchg
mov
stc
fnsave
xchg
dec
sti
lcall
sub
iret
stc
gs
cwtl
ficoms
sbb
mov
inc
insb
mov
out
je
xchg
pop
or
jb
shlb
xchg
inc
pop
hlt
jnp
inc
in
jns
test
xlat
xchg
pop
and
lcall
mov
fcompl
fildl
cmp
sub
sbb
mov
push
mov
jmp
pop
add
adc
mov
out
into
cmpl
inc
pusha
cwtl
adc
and
pop
or
mov
aaa
adc
ret
ja
out
insl
shrl
push
xchg
cmp
and
pop
pop
enter
test
sbb
and
loope
andl
orb
pushw
xchg
repnz
mov
lcall
sbb
mov
mov
cmp
jno
fldl
repz
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
test
jle
jge
jle
rcrb
pusha
rolb
sbbl
jns
aam
cmp
push
popf
add
jecxz
outsb
aam
call
stc
shrb
icebp
js
iret
add
cmpsb
mov
arpl
jns
xchg
fcomp
cli
out
jp
cmpsl
bound
xchg
enterw
sub
ror
fwait
test
lahf
je
ja
test
jb
jnp
in
sti
nop
in
mov
adc
pop
cli
movsl
adc
xor
lods
add
adc
mov
or
leave
mov
dec
dec
stos
stos
mov
ja
cmpsl
jle
and
sbb
mov
rcl
adc
mov
imul
mov
mov
in
sub
out
sbb
xchg
and
jmp
sarb
xchg
add
ja
std
sbb
push
pop
das
adc
push
mov
outsl
loop
in
popf
negl
ljmp
cltd
mov
jmp
shlb
xchg
push
out
or
stos
add
int
inc
popa
imull
mov
call
xchg
mov
into
outsb
pusha
leave
into
push
xchg
cmc
push
ud0
or
fcompl
dec
daa
mov
mov
test
push
inc
ljmp
pop
mov
leave
roll
cltd
imul
and
movsl
es
cmp
adc
add
jb
call
lock
mov
mov
xor
pop
ljmp
outsl
or
mov
mov
mov
xchg
cmp
add
mov
push
cwtl
xor
popf
insb
clc
cmp
rcrb
pop
push
jp
outsb
sahf
cmp
add
xchg
lea
push
cld
mov
cs
push
movsl
mov
push
out
push
xchg
int3
loopne
stos
fisttpll
push
rcrl
mov
mov
push
lea
fisubrs
out
fwait
xchg
fiaddl
js
movsl
mov
or
dec
bound
inc
fnsave
call
push
push
dec
stos
rcll
dec
lret
mov
mov
pushf
inc
cld
test
shl
push
aam
sbb
jmp
push
hlt
push
movsl
ucomiss
hlt
outsb
popf
cwtl
sub
movsb
shl
dec
pavgw
sbb
ds
mov
repnz
cli
pop
into
inc
jecxz
test
call
fcmovne
pop
imul
add
push
push
dec
mov
divl
lahf
test
push
ret
loop
rorl
popa
data16
test
ret
sbb
pop
pop
dec
outsb
add
push
outsb
dec
add
arpl
jb
cwtl
into
adc
test
xorb
xchg
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fnsave
rolb
push
jge
jle
ss
sti
lret
mov
shlb
mov
cmp
jo
xchg
jmp
xlat
mov
push
out
jno
scas
mov
sbb
pop
xchg
movb
mov
call
mov
cmp
cmp
repz
inc
outsb
loop
sbb
mov
lret
mov
xor
lcall
je
sbb
push
jne
xor
jbe
ds
mov
addr16
in
test
or
imul
sbb
jge
je
in
shrb
fadd
pop
fisubrl
pop
jge
shll
jnp
ficompl
xchg
dec
popf
xchg
sbb
jge
jo
stos
aas
pop
dec
flds
dec
adc
add
mov
mov
push
imul
push
pop
push
pop
adc
fcomip
inc
fiaddl
mov
add
push
loop
daa
inc
dec
pop
and
and
rclb
movsl
repz
adc
outsl
nop
jmp
inc
add
nop
add
push
xchg
shll
ret
ret
cmp
pusha
xchg
insb
pop
loop
cmp
push
cli
mov
sti
xor
test
repnz
test
sbb
xlat
jo
jle
and
dec
loop
shl
xor
xchg
imul
adc
retw
cmp
in
aaa
adc
mov
sar
rclb
shlb
push
push
add
adc
int3
fcoml
push
pop
jbe
clc
mov
ljmp
ficoms
clc
fs
test
cmc
sbb
adc
aaa
mov
leave
inc
loop
imul
and
or
cmp
adc
jns
add
dec
and
cmp
jo
xor
ljmp
lea
testl
dec
push
movsb
jb
cmp
in
push
dec
sub
mov
cli
negb
mov
xor
ret
mov
push
inc
aas
add
je
mov
loop
cmc
ret
dec
fisubrl
mov
lahf
mov
iret
mov
shll
push
sbb
out
xchg
lret
push
movsb
push
js
or
cmp
roll
mov
loope
push
les
xlat
inc
aam
sbb
enter
sbb
and
aas
loopne
pop
lret
and
aaa
mov
ficoms
mov
pushf
iret
sbb
adc
xorl
outsl
jns
cmpsl
mov
decl
push
ljmp
in
mov
push
orb
jl
movsb
xlat
dec
testb
jl
pop
enter
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
xor
add
jle
jge
jle
adc
repnz
sbb
dec
lods
stos
inc
outsl
mov
ss
fdivp
push
add
cs
aas
xchg
sub
jne
mov
sub
hlt
xor
orl
dec
fldpi
movsb
and
pop
leave
lret
mov
fisttpl
popa
cld
loope
or
ja
scas
ja
lea
lods
push
mov
test
mov
xchg
cmpsb
lret
dec
pop
arpl
push
popa
sub
ljmp
sbb
mov
xchg
push
sbb
pop
je
add
inc
dec
or
aas
decb
in
dec
in
or
in
jecxz
adc
cltd
dec
arpl
xor
add
es
subb
scas
cmpb
int
xor
dec
dec
cmp
fdivs
dec
icebp
jmp
xor
or
gs
xchg
push
mov
or
out
mov
imul
fists
mov
inc
ss
and
pop
mov
test
iret
mov
jg
dec
arpl
push
mov
icebp
es
arpl
out
mov
xchg
repz
jmp
roll
fnstsw
mov
dec
pop
movsl
dec
loop
fs
outsl
and
cmp
arpl
ret
pusha
fistpll
push
cwtl
rcl
dec
bound
pop
flds
das
std
push
scas
cmpsl
addr16
mov
stos
mov
and
jo
push
stc
rcll
outsb
sbb
cli
fmul
lcall
push
xchg
push
xchg
push
pop
dec
sbb
enter
sbb
stc
mov
insl
jb
fs
jnp
std
rorl
cmpsb
scas
pop
insb
test
xchg
jo
lahf
fisttpll
imul
adc
mov
adc
jge
inc
dec
cmp
dec
lods
sub
jl
jmp
lret
sub
hlt
xor
dec
cmpsb
test
adc
cmp
in
repz
loope
call
aaa
cmc
add
in
and
sub
pop
lcall
adc
imul
das
pop
insb
inc
xchg
pop
fwait
mov
lahf
mov
mov
jae
mov
lret
pop
push
sarl
rorl
add
rcr
mov
mov
out
cmp
gs
mov
and
xchg
jp
fldenv
fistpl
sti
pop
pop
insb
lods
or
adc
adc
cmpl
inc
ja
rolb
pop
pop
js
lds
fxch
insl
sub
mov
in
mov
daa
sub
aad
mov
stc
ja
mov
scas
loopne
insb
push
mov
pushf
jle
out
sub
add
mov
mov
mov
jmp
enter
enter
sbb
mull
cmc
push
mov
jp
jle
fs
repz
in
daa
int3
xor
sub
xchg
nop
add
dec
int3
shll
inc
nop
lcall
dec
stos
jle
push
add
pushf
leave
shlb
and
sbb
inc
icebp
xlat
cld
ja
cmc
adc
loope
sbb
push
pushf
mov
cltd
push
pushf
mov
aaa
xchg
mov
out
jle
xchg
push
inc
cmp
dec
mov
sub
xchg
gs
lods
ret
sbb
ja
lcall
jno
cli
aaa
cmp
sub
insl
mov
int3
in
or
jle
jmp
push
pop
ds
pop
mov
adc
inc
sahf
jno
and
popf
inc
pusha
test
sbb
jge
or
cli
mov
les
je
rol
jne
or
sarl
in
rcrl
imul
in
dec
inc
add
negb
shrl
in
xor
adc
jmp
repnz
daa
sub
push
daa
mov
jg
adc
inc
pop
ret
push
sub
daa
rcrl
mov
xchg
and
cmp
stos
aas
xchg
mulb
jecxz
mov
push
jo
daa
and
add
fbstp
sti
imul
mov
pop
sub
push
xchg
loope
je
add
out
dec
push
dec
xchg
fdivs
jb
sbb
add
add
in
xchg
or
xchg
lcall
dec
mov
lahf
push
movsb
sub
js
push
xchg
cmp
outsb
rcpps
outsl
int
dec
daa
insl
shlb
incb
jmp
add
inc
cltd
inc
push
pop
andl
ret
mov
cmc
push
mov
leave
imul
mov
inc
pop
inc
fwait
mov
ja
movsb
rcr
and
mov
aaa
lds
add
shlb
iret
movsl
cli
jno
bound
mov
sbb
gs
mov
pop
xor
jecxz
popa
sub
call
mov
fadds
mov
adc
aas
shll
mov
push
lock
in
imul
mov
scas
ja
mov
rclb
sti
dec
insl
js
cltd
mov
cli
pop
cmp
ja
imull
hlt
insb
cmp
imul
sti
jmp
adc
inc
sbb
adc
fstpl
aas
int
ds
inc
jl
add
call
iret
jg
sub
stos
pop
lods
in
jmp
mov
pop
inc
or
mov
add
mov
out
inc
sbb
jb
mov
outsb
adc
stc
imul
pushf
ret
cmp
int3
push
dec
arpl
rcll
dec
lahf
push
stc
push
pusha
xor
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
adc
jle
jp
jle
adc
bound
xacquire
pop
add
jp
push
sub
mov
adc
sub
mov
pushw
add
int3
testb
xchg
cmc
push
outsl
fs
push
xchg
mov
push
js
xor
inc
rcl
in
sub
lcall
loopne
movsl
sub
and
or
lods
mov
jmp
insl
sub
push
cli
push
add
inc
jb
jns
add
jns
xor
add
ret
aas
out
in
movsb
adc
jp
pop
jae
pop
les
inc
ljmp
add
xchg
inc
or
pop
mov
push
cmc
dec
xor
pop
popa
in
aas
stc
jno
push
lock
xchg
scas
jnp
inc
jmp
mov
dec
ja
in
add
xor
and
xchg
jns
insb
jnp
fsubl
xor
hlt
mov
jmp
imul
adc
mov
popa
push
out
pop
pusha
dec
dec
fdivrl
cmp
inc
sbb
xchg
rol
out
and
and
std
xchg
dec
ds
rcrl
addr16
inc
xor
sbb
stos
jg
in
adc
inc
in
mov
rcl
or
pusha
or
sbb
imul
std
xchg
cld
inc
fdivrs
cmp
fwait
adc
add
mov
sahf
mov
add
cmpsl
subb
jo
in
aaa
sbb
push
push
dec
and
inc
les
mov
mov
rcl
mov
leave
test
dec
push
and
outsb
mov
das
mov
cmp
fcoms
fidivl
or
sbb
sub
xor
or
cwtl
mov
fbstp
hlt
mov
pop
fs
xchg
pop
cmp
sbb
jnp
addr16
cmp
aas
rorl
out
sahf
pop
push
adc
jg
loopne
popa
fwait
mov
fxch
hlt
insb
xabort
popa
push
loope
xor
stos
popa
mov
pop
out
cli
pop
mov
inc
std
negl
pop
loope
jle
cmpsl
dec
xor
sarb
jnp
sub
add
mov
xchg
mov
mov
and
mov
inc
push
cmpsl
idiv
dec
cltd
mov
out
sbb
scas
add
dec
imul
adc
xchg
add
dec
push
leave
push
sub
insb
jne
shrb
int
mov
mov
cmpsb
push
rorb
mov
jl
cli
adc
cli
or
sub
sbb
xchg
mov
addr16
js
bound
test
lea
pop
outsl
lahf
push
int3
mov
addl
cltd
iret
in
jl
pop
cmpsb
dec
hlt
rolb
sbb
add
in
notb
sub
int
adc
jle
jp
jle
cmove
shlb
jmp
mov
loope
push
fldt
movsl
btr
sub
cmp
pop
dec
mov
jmp
add
xchg
fnstcw
aaa
and
jbe
mov
xlat
xor
stos
push
fdivr
test
adc
sub
sbb
and
pop
lock
repz
add
add
cmc
cmp
pusha
and
in
stos
mov
and
mov
sbb
xor
pushf
adc
dec
rorb
ja
adc
addr16
fbld
popa
cmp
pop
mov
add
fadd
xor
mov
and
rdpmc
mov
jnp
scas
aad
cs
cwtl
insl
cmp
inc
idivl
xchg
add
inc
mov
out
jb
cmp
xchg
adc
mov
cmpsl
mov
loopne
sbb
enter
cli
push
cwtl
pop
jle
or
test
aas
dec
out
fbstp
divl
insb
js
mov
push
loop
call
insl
sub
leave
outsb
pop
mov
sahf
add
out
xchg
sti
adc
push
add
jne
sbb
and
mov
test
hlt
notb
sbb
or
jmp
scas
mov
jl
stos
mov
xchg
sub
pop
xchg
movsb
jmp
mov
push
imul
or
adc
sub
cmp
and
fs
mov
pop
int3
cmp
cmp
pop
pop
dec
and
lea
lock
sub
mov
jge
jo
cmp
shll
sub
lods
jae
xor
dec
sbb
lods
fsubp
add
in
js
sahf
faddl
pop
mov
or
or
lret
mov
nop
movsl
cwtl
and
jl
adc
ljmp
or
pop
xor
fistpll
cld
pop
and
mov
pusha
std
pop
cwtl
push
shll
lahf
ret
fsubrl
repz
sbb
sub
xchg
jle
cmc
lcall
in
fldenv
movsl
in
popa
and
fisubs
and
shll
pop
or
std
adc
jge
mulb
out
xchg
or
adc
mov
cmp
jp
push
jbe
add
sbb
inc
movsl
in
lds
jne
xchg
adc
cmp
inc
or
aam
jge
pop
pop
dec
imul
aaa
mov
call
cmp
sub
adc
in
out
xchg
repz
add
testl
mov
test
shlb
lods
int3
mov
pop
mov
push
mov
cmp
mov
ljmp
sarl
push
adc
sbb
ret
imul
rcrl
mov
cwtl
jmp
dec
pop
or
jbe
movsb
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
test
add
jp
jle
ret
push
and
xchg
fwait
push
mov
lcall
test
leave
inc
or
mov
fnstcw
cmc
xor
jl
cmp
push
push
in
lock
in
dec
cmp
cmp
test
mov
pop
cmc
leave
rcrl
push
xor
mov
inc
icebp
data16
xor
and
xchg
jge
dec
xlat
xor
xorb
repz
rcll
push
add
mov
faddl
rcrb
pop
sub
inc
lret
cmc
fcmove
push
dec
mov
mov
ljmp
cmpsl
jb
sub
push
push
pop
lea
xorl
std
faddl
xlat
cmp
mov
or
sub
pop
ret
ljmp
insb
sbb
cs
mov
jae
dec
inc
mov
sub
outsl
jb
mov
jmp
sub
or
jg
push
dec
xchg
das
outsl
imul
rorl
stos
cmpsb
out
shrb
xchg
pusha
test
mov
push
xchg
mov
arpl
ret
jo
outsb
jo
or
shl
inc
stc
fdivrl
inc
jb
mov
pop
imul
or
cmp
mov
xchg
rclb
dec
sbb
out
out
or
jl
mov
in
shr
sbb
xor
lea
xchg
mov
push
mov
movsb
imul
jg
shr
fstps
fwait
mov
jge
je
dec
fistps
sbb
insb
rcrb
and
push
push
loop
sbb
pop
xor
sti
fidivrl
repz
int
inc
or
sbb
dec
int3
movsb
out
lahf
stos
data16
call
xchg
cld
jno
rcll
aad
push
mov
popf
insb
adc
jle
out
aam
test
mov
pop
call
mov
js
mov
jne
xchg
add
cld
push
nop
sub
xor
sbb
dec
cs
cmp
scas
jmp
cltd
xchg
popf
cmp
push
imul
and
hlt
movsb
mov
outsl
call
ja
cmp
lret
daa
jne
notb
mov
jecxz
inc
cmp
es
dec
aas
lret
xor
cltd
test
ficomps
nop
repz
push
xchg
cmp
cmp
xor
and
test
or
movsb
xchg
je
popf
js
xor
jmp
les
xchg
or
out
nop
push
loope
sub
test
inc
ret
fs
call
lret
mov
orb
fisubl
xor
sbb
addl
jae
sbb
jns
pop
sub
ds
ds
fisttpll
and
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
testb
jle
jp
jle
xchg
pop
jmp
aam
movsb
jge
adc
push
sbb
dec
movsb
addr16
add
mov
cwtl
inc
bound
xchg
nop
mov
mov
jns
xor
mov
push
push
lods
pushf
dec
push
pop
cwtl
idiv
movb
stos
adc
mov
out
shl
push
adc
xchg
jb
add
pop
mov
inc
adc
fsubrl
sub
jno
cwtl
xchg
mul
jmp
in
gs
aad
bnd
or
cli
rorw
jge
and
imul
aam
or
jb
sbb
or
xchg
dec
addr16
mov
mov
inc
lds
sbbb
ss
incb
mov
dec
dec
scas
push
inc
mov
mov
push
aas
mul
mov
dec
or
lcall
lea
mov
sbb
jno
ds
roll
stos
lcall
jne
sbb
mov
lods
sub
mov
jmp
fnstcw
dec
cmp
xlat
xchg
dec
aaa
test
out
pop
adc
xchg
inc
jo
add
jmp
mov
test
ljmp
adc
mov
lods
arpl
inc
aam
cmp
fwait
mov
imul
call
xchg
push
dec
add
pop
dec
and
push
mov
mov
xchg
or
mov
lods
out
movsl
fnsave
mov
sarb
mov
lods
or
dec
fidivrl
mov
or
xchg
dec
movsl
xchg
call
fistpl
xlat
pop
jbe
push
aam
mov
dec
or
imul
mov
in
add
mov
inc
nop
repz
pop
push
mov
int
test
int3
adc
in
fsubrl
push
adcl
push
je
push
jle
push
pusha
jb
pop
loope
fucom
neg
ret
popf
setno
xchg
aaa
sub
or
sub
push
dec
sti
inc
add
lea
shrb
loope
xor
sub
add
xchg
jae
cltd
sbb
xchg
lods
outsl
rcrb
ret
js
or
xor
sub
out
or
inc
mov
add
xor
out
cmpsl
sub
or
or
fisttps
punpckldq
std
push
fstpt
out
mov
dec
fdiv
fs
icebp
ds
or
mov
mov
cltd
shl
mov
mov
aaa
pop
and
and
push
and
xorl
int3
or
out
sbb
daa
push
mov
lret
insl
mov
fwait
das
and
cmpsl
mov
push
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
dec
xchg
mov
jle
jge
jle
enter
sub
iret
jae
xchg
inc
mov
jg
xor
fwait
mov
ljmp
push
sti
stc
jge
cmpb
xchg
out
jno
fdivrs
add
push
cltd
imul
scas
mov
gs
xchg
jne
ljmp
sub
mov
push
icebp
sbb
out
pop
add
mov
dec
test
ja
mov
inc
mov
sbb
pusha
jae
jne
test
mov
pop
clc
imul
test
push
inc
ret
sub
jae
xorb
mov
aad
adc
inc
jp
pop
dec
fdivs
aaa
jno
js
xor
popa
push
sbb
repnz
xor
cmpl
ret
mov
adc
lret
repnz
mov
xor
and
andb
shrd
adc
int3
fnstsw
dec
shlb
add
aas
popa
stc
sub
xchg
jno
cld
bound
and
xchg
pusha
add
loop
xadd
xchg
add
push
mov
add
push
stos
aas
daa
push
daa
fs
subb
mov
ja
xchg
idiv
push
mov
mov
sub
sub
mov
sbb
adc
imul
push
dec
test
js
fldenv
frstor
mov
fs
cli
add
xor
aaa
mov
or
pop
xor
repz
movsl
ret
pop
cmpsl
mov
and
mov
sahf
mov
aaa
xchg
imul
call
popa
push
js
movb
je
orb
push
jge
jp
or
ret
jno
and
push
adcl
jmp
imul
adc
jge
inc
clc
lods
push
inc
pop
cmp
icebp
dec
notb
mov
push
pop
xchg
sub
mov
jg
inc
popa
jge
out
inc
cmp
lods
xchg
pop
and
gs
or
lea
fstps
stos
and
push
push
xchg
nop
fwait
pop
aad
adc
stos
shl
mov
pushf
or
or
sbb
pop
dec
sbb
pop
ret
lods
jl
call
mov
ficoms
in
adc
push
mov
push
pop
movsb
or
clc
mov
in
shrb
sub
push
or
mov
pusha
mov
mov
stos
sbb
sbb
popf
in
cmpsb
daa
mov
cmc
sbb
stos
xor
adcb
mov
xchg
in
pop
xchg
mov
or
repnz
dec
sub
mov
xchg
adc
mov
jbe
mov
test
or
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
pop
add
gs
mov
fstpl
push
push
lods
xchg
push
push
cwtl
lret
fistl
jae
and
jno
fs
sub
fisubrl
xlat
mov
sti
movq
sub
int3
mov
or
mov
xor
sub
xchg
xchg
add
pop
dec
movsb
js
adc
mov
pop
shrb
xlat
mov
mov
xor
dec
mov
sti
fndisi(8087
sbb
imul
jp
add
test
outsl
scas
mov
bound
outsl
aas
inc
insb
pop
ljmp
mov
mov
push
mov
mulb
in
push
mov
popa
mov
nop
xor
enter
xchg
les
test
pop
mov
xchg
mov
popf
loopne
inc
pop
clc
repnz
sbb
sbb
js
daa
lret
ret
xchg
das
sub
jnp
or
adc
jae
fstpl
dec
icebp
stc
pop
push
fstps
sub
mov
lds
adc
fidivrl
std
mov
mov
or
int3
test
jae
cmpsl
push
inc
int3
loope
popf
adc
dec
aad
in
fildll
mov
mov
xchg
andb
movsl
inc
mov
pop
in
mov
dec
xor
jl
xor
mov
repnz
lret
sti
cmp
sub
es
insl
ss
icebp
ret
stos
mov
xchg
scas
mov
stc
pop
cmp
into
cmpsl
lahf
xchg
add
sbbb
lret
movsb
mov
addr16
sar
sbb
data16
jmp
rol
rcr
cmc
hlt
mov
lcall
mov
cmp
add
push
testb
popf
popf
ja
push
cwtl
xchg
addr16
jl
xchg
xor
xor
and
in
jp
push
xor
das
mov
push
orps
cld
pop
stos
push
mov
bound
sub
ljmp
test
fnstsw
xchg
std
sbb
dec
sbb
insl
into
mov
das
xchg
cmp
jl
es
mov
jecxz
ds
push
mov
jno
imul
shlb
hlt
mov
incl
in
mov
clc
lods
out
dec
sbb
sti
sti
xor
push
ret
adc
xchg
pop
leave
notl
adc
testl
out
pop
lahf
dec
fdivl
mov
and
xor
test
sbb
pop
push
loop
jno
cmp
test
repz
shlb
cmpsb
in
rcl
test
dec
movsl
pop
cli
xchg
jmp
add
sbb
mov
mov
mov
mov
fcmovnbe
pop
int3
push
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
or
jle
jp
jle
cmp
shr
inc
and
fadd
leave
and
cs
int
clc
es
xor
lock
push
xlat
lret
dec
jb
cmpsl
test
std
and
mov
sbb
lods
mov
scas
jmp
shrb
pop
sub
mov
jno
xchg
stos
dec
xor
outsb
jbe
imul
scas
mov
mov
xchg
mov
dec
jmp
add
aaa
out
xchg
pushl
lock
mov
out
xchg
sbb
mov
or
rorl
xchg
adc
cwtl
sbb
pop
out
leave
fisttpll
out
mov
sbb
xor
jp
ja
addl
ss
sti
ds
and
repz
out
push
push
cmp
fbstp
jmp
xchg
sub
pop
pusha
out
test
test
jb
adc
dec
inc
dec
adc
into
lods
push
sub
insb
shl
je
icebp
aad
mov
add
and
cmp
int
shlb
pop
ljmp
xchg
or
jns
pop
pop
pushf
arpl
pushf
mov
scas
outsb
lods
inc
aas
sbb
jp
movsb
rcrb
daa
mov
out
mov
xchg
cld
push
cmpsb
ljmp
mov
lea
sub
add
mov
leave
dec
pop
cmp
fwait
test
arpl
mov
cmp
and
imulb
ss
call
jno
lds
test
add
mov
jne
mull
xchg
sbb
adcb
pop
gs
popa
loop
lcall
xchg
mov
test
mov
add
shlb
push
mov
mov
sbb
mov
mov
cmp
clc
ljmp
notl
push
das
mov
sub
jnp
pop
mov
push
sbb
sahf
cld
insl
aam
cli
aas
inc
sbb
repnz
xchg
mov
in
je
xchg
push
mov
outsl
add
pusha
or
rcl
aam
sbb
inc
xor
sub
inc
add
scas
outsl
shll
pushf
cltd
add
fisttpll
sbb
stos
dec
subl
xor
mov
mov
mov
mov
test
dec
inc
mov
mov
popf
adc
mov
push
stc
outsb
fcomi
repnz
fiaddl
sahf
fisubrs
inc
loopne
jo
xchg
loop
jl
cmpsl
xchg
sub
sub
test
or
jecxz
sbbb
fnstcw
andb
out
aaa
scas
mov
rcr
or
xlat
pop
les
inc
divl
arpl
and
scas
inc
xor
adc
gs
and
loope
jl
imul
nop
xlat
sbb
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
or
jle
jge
jle
fmul
out
or
ret
jb
adc
and
aad
adc
lods
cmpsl
pop
mov
icebp
test
jae
xchg
add
mov
ror
cmpsl
outsl
sti
cmpsb
rolb
push
scas
xchg
pop
push
and
pop
sbbb
pop
mov
rolb
sbb
push
pop
mov
jle
std
leave
xor
push
adcl
sti
jge
lret
sbb
leave
pop
es
or
aas
loop
fsts
pop
jo
sub
lods
aas
mov
int
in
shl
jp
pop
scas
outsl
out
rclb
cmp
xchg
pop
leave
inc
mov
sub
lods
test
js
push
push
xlat
ds
stos
lahf
sub
outsb
and
sbb
cmp
and
ret
pop
inc
addr16
iret
cltd
mov
into
inc
les
xchg
add
iret
cmc
test
inc
dec
push
nop
call
inc
adc
lods
cmc
mov
insl
add
imul
add
add
or
inc
xchg
fiadds
andl
das
push
jmp
inc
sub
aas
hlt
cwtl
add
daa
in
pop
xchg
jne
call
dec
mov
cmp
mov
adc
dec
cltd
add
out
pushf
cli
frstor
nop
data16
adc
push
mov
cmp
fld1
push
jp
inc
cltd
pop
stos
pusha
dec
adc
sahf
xchg
jp
pop
mov
icebp
addr16
xchg
cwtl
mov
shll
or
inc
pop
aaa
inc
push
xorl
dec
jnp
mov
jae
movl
adc
cltd
sti
mov
adc
add
ret
or
nop
rolb
or
mov
xchg
inc
mov
fsubrl
popa
or
into
mov
sti
xchg
fs
xor
subb
stc
jp
lcall
sub
sar
jle
cmp
int
sub
out
pop
mov
mov
lret
lcall
shl
pop
les
sahf
add
xor
jp
les
sbb
or
adc
pop
test
into
ss
dec
mov
aam
xor
dec
fs
pop
rcrl
push
leave
in
or
cmpb
std
adc
inc
repz
dec
loopne
jne
mov
dec
mov
or
nop
mov
lahf
fs
xchg
cwtl
cmp
jb
dec
pusha
aad
nop
fs
mov
add
mov
jno
dec
fldl
and
nop
enter
or
xchg
out
or
outsl
iret
hlt
pop
cmp
rclb
out
pop
dec
pop
xchg
jb
adc
mov
cmp
outsb
jbe
jbe
or
add
out
xor
mov
loop
into
xor
xchg
out
sub
jle
jge
jle
cmpsb
outsb
or
outsl
cwtl
leave
cmp
mov
add
push
xlat
cld
cmp
loopne
outsb
dec
xchg
mov
mov
dec
push
xchg
xchg
adc
dec
sub
aas
into
sub
jb
jg
xor
inc
pushf
loop
insb
ret
push
jb
push
daa
fadds
xor
in
adc
mov
mov
cltd
add
movsb
adc
mov
inc
pop
jnp
or
mov
lock
imul
das
cmpsl
mov
sub
jmp
dec
xchg
aaa
mov
lock
sub
pop
sub
daa
mov
cltd
sub
in
outsl
mov
push
pop
nop
aas
nop
das
cmp
push
mov
dec
sub
sub
sbb
dec
into
add
movsl
popa
xchg
mov
cs
loopne
cmc
sti
leave
mov
push
and
into
jl
insb
xchg
or
mov
into
dec
adc
in
dec
sti
ret
jne
pusha
inc
fists
xrelease
aas
xchg
push
pop
insl
in
xor
rorl
jp
push
outsb
scas
insb
notl
jae
mov
push
mov
mov
sbb
rcrb
pop
xchg
clc
in
pop
and
sub
mov
or
xchg
inc
sbb
imul
mov
mov
nop
in
xchg
jno
aas
test
insb
xor
jl
sbb
pop
daa
dec
mov
lods
shlb
scas
pop
fcompp
fistps
or
js
popa
cwtl
and
sub
popf
xor
lock
subb
jl
xchg
fbld
jae
cmp
xchg
shrb
jb
jo
out
sahf
and
mov
fcmovbe
dec
stos
icebp
mov
jmp
stc
pop
push
sahf
xchg
dec
in
shl
rorl
jno
fisttps
stos
push
ficoms
mov
cld
add
in
xchg
test
lahf
jbe
mov
cmp
xor
mov
ljmp
or
mov
sub
push
std
es
fcmovne
sbb
and
adc
loop
sub
pop
mov
aaa
sbb
dec
ret
pop
jne
push
popa
stc
mov
dec
cli
adc
adc
mov
inc
ror
lret
in
fsubs
dec
sbb
xchg
sbb
jp
xor
pop
cmp
in
push
aaa
adc
adc
sbb
push
push
hlt
sbb
xchg
lret
add
sbb
mov
push
cltd
cmpsb
nop
popa
les
mov
lds
ror
ljmp
addr16
adc
jmp
jp
xor
pop
insb
cmc
pop
icebp
enter
out
cmpl
sub
xchg
stos
or
ss
adc
in
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
in
xchg
sbb
jle
dec
mov
xor
fstps
rorb
pop
in
addr16
or
inc
or
data16
lea
mov
aad
scas
xor
sub
cli
incb
inc
xor
mov
mov
xchg
sbb
xchg
movsl
mov
iret
les
xor
jns
std
mov
leave
pop
jmp
insb
inc
jne
mov
inc
cmp
sbb
sub
aam
dec
mov
xor
lock
arpl
stc
jmp
rolb
in
add
fiadds
and
lahf
int3
in
inc
jl
sub
cmpsb
jge
mov
pop
mov
out
sub
pop
inc
je
jmp
jl
lcall
pop
jg
int3
mov
adc
sbb
les
rclb
aad
test
adc
mov
pushf
sbb
pop
popf
inc
xchg
add
int
pushf
in
dec
cmpsl
push
fwait
mov
and
loopne
aam
pop
lods
lcall
sti
jns
popa
bound
roll
scas
sbb
dec
dec
dec
mov
pop
push
cwtl
loope
loope
mov
jl
shrl
lock
xlat
int3
push
add
test
mov
mov
or
int3
jmp
mov
fildll
loop
shrb
pop
push
mov
xor
insl
js
jb
sub
or
scas
mov
jbe
and
cmpsl
jae
out
enter
into
or
and
ljmp
adc
mov
cmc
cmpsb
imul
adc
jbe
and
pminsw
lahf
mov
scas
mov
cltd
xor
dec
test
pusha
leave
adc
cwtl
dec
jbe
mov
add
ljmp
jmp
insl
pop
jnp
sbb
cmp
sarl
mov
jnp
mov
neg
mov
xchg
lret
jmp
lds
mov
cmp
inc
sbb
lods
push
lret
mov
add
sbb
add
inc
sub
leave
lea
mov
mov
cmp
pushf
lcall
xchg
in
adc
sub
add
push
inc
das
mov
and
jno
jg
push
cwtl
gs
jge
outsl
cli
xor
cltd
insl
cld
jne
nop
sub
add
add
out
into
jge
and
push
cltd
mov
test
jmp
rcll
lods
cmp
sarb
leave
xchg
jo
out
js
lcall
sbb
into
or
jle
and
leave
cmpsl
les
or
out
repnz
call
lcall
ljmp
fsubrl
pop
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
out
in
daa
mov
jge
jle
in
mov
xor
sbb
loop
jo
repnz
mov
in
repnz
dec
dec
insb
dec
mov
fwait
and
push
popf
inc
into
shrb
lcall
mov
dec
and
mov
test
mov
cmpsl
leave
xlat
inc
and
aaa
scas
pop
push
cmp
jecxz
mov
pop
push
sti
jae
jg
cmp
push
mov
inc
int
pop
test
add
xchg
call
test
mov
jl
and
insb
dec
xor
pop
insl
cmpb
or
loope
or
sub
sarl
sbb
aaa
cmp
mov
pop
subb
pop
out
fld
std
inc
or
pop
cs
sbbb
push
imul
dec
in
add
es
mov
fst
sar
ja
in
fildll
adc
jle
fwait
xchg
inc
mov
or
lods
andb
fwait
inc
xor
clc
push
test
arpl
es
xchg
adcb
sahf
pop
sub
fistpll
dec
loop
mov
ret
je
inc
xchg
xlat
nop
in
insl
sarl
xchg
hlt
sub
in
das
pop
test
pop
lahf
push
add
imul
ret
or
inc
arpl
pusha
addr16
cmpl
cmp
cld
xor
push
adc
rorb
mov
flds
nop
jge
lcall
notl
cld
std
outsb
int3
sbb
cmp
sub
fidivrs
test
jecxz
push
cli
and
mov
push
clc
or
xchg
adc
cltd
cmpsl
jne
inc
add
rorl
adc
repz
add
js
push
cmp
inc
sbb
mov
xchg
cmp
repnz
mov
push
arpl
movsl
clc
loop
lahf
out
inc
pop
je
cs
or
loop
nop
lahf
lahf
out
mov
pop
dec
loopne
in
add
lahf
xchg
cmp
dec
les
test
fdiv
xchg
xor
push
daa
ss
mov
dec
jbe
jle
imul
aas
xchg
jg
outsl
std
lret
scas
out
jg,pn
in
ja
push
imul
cmpsl
lret
lds
lcall
mov
add
add
cs
push
sahf
push
add
jne
aas
mov
rorl
pop
jne
add
xchg
out
inc
push
and
jg
add
dec
das
rcrl
jno
rcrl
mov
mov
pop
das
pop
cmp
dec
lcall
loop
lret
in
push
lret
push
xchg
dec
dec
inc
cmc
push
lret
out
icebp
aas
lahf
aad
aaa
inc
lods
testb
cmp
push
rcrl
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
clc
xor
test
fs
lret
mov
ja
or
popf
lock
lcall
imul
rcrb
xchg
jp
sahf
lcall
add
mov
iret
jo
pop
jae
push
mov
ja
add
hlt
adcl
or
cld
je
out
xchg
mov
and
lret
sbb
or
andl
scas
imull
mov
add
push
dec
cmp
addr16
cld
sarb
xor
js
jl
adc
mov
into
xchg
sub
and
lahf
outsl
in
rorl
lods
lods
pop
mov
and
cmpsl
je
mov
out
pop
imul
shlb
push
lret
push
pop
sbb
pushl
lcall
cmp
addl
call
aad
push
dec
sbb
call
sar
cmp
mov
jno
mov
xor
sub
imul
shl
dec
mov
das
or
notb
cbtw
lods
std
jmp
mov
jno
jns
mov
in
shr
iret
sbb
mov
das
xchg
pop
icebp
mov
js
lds
inc
mov
mov
ja
and
shlb
daa
mov
xchg
insl
pop
test
icebp
sub
addr16
scas
inc
mov
rorb
call
ja
je
insb
lds
push
rol
jns
cs
pop
pop
stc
cwtl
dec
pop
push
js
inc
and
add
pushaw
dec
push
cmpsl
mov
out
in
mov
je
in
pop
xor
or
fimuls
jle
xchg
ud2
sub
fsubl
icebp
mov
lods
lahf
jp
sub
outsl
daa
add
or
dec
inc
movsl
cmp
imul
pop
lret
jo
lret
sbb
or
jno
addr16
das
and
mov
lret
cs
lret
faddl
loope
dec
mov
int3
cmc
lret
int3
dec
jle
inc
push
cmp
in
mov
mov
lea
fldl
mov
int
dec
push
xchg
inc
xchg
jns
push
cmovne
jnp
outsb
and
lahf
pop
push
and
outsl
push
mov
ds
cmpsb
adc
lret
adc
push
xchg
in
int
add
fwait
je
cmp
dec
imul
in
call
mov
xchg
jge
lods
lahf
mov
pop
and
and
mov
xor
aaa
xor
sahf
pop
inc
ret
add
jno
ret
fldlg2
rcll
jne
cmp
je
mov
call
int
shll
and
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
aaa
nop
fisubs
xchg
jle
jge
jle
stos
add
dec
xchg
and
test
mov
lret
push
stc
push
push
xlat
xchg
jae
xor
gs
mov
jnp
loop
or
jb
pop
lret
pop
sub
hlt
jns
adc
mov
inc
sbb
stos
dec
lock
aaa
push
and
pop
or
cwtl
lods
lods
xor
popa
enter
cmp
inc
call
cmp
xchg
testl
fldlg2
je
std
push
adc
icebp
hlt
test
inc
into
and
bound
mov
fwait
mov
adc
sub
or
cmp
jae
nop
mov
fcmovnb
push
lock
xchg
push
je
xor
in
add
cli
inc
pop
fs
leave
sub
sbb
push
int
rorb
push
pop
pushf
xor
scas
mov
add
xchg
orl
das
in
xchg
mov
push
lret
scas
rorl
mov
popa
mov
push
push
das
mov
inc
lock
lahf
push
stos
loop
in
xor
mov
jmp
push
and
scas
cmp
inc
inc
inc
cli
cmp
add
leave
sbb
push
sub
iret
push
and
push
pop
repnz
pop
neg
jo
andl
xor
in
mov
cmp
dec
popf
test
dec
sbb
inc
sti
jmp
xor
sub
leave
imul
sub
jb
xchg
data16
ds
cmovo
fcomps
lcall
xor
outsl
popa
fstpl
sub
faddl
cli
mov
call
xor
xchg
xchg
or
rclb
dec
js
push
aam
cmp
pop
sub
mov
xchg
xchg
int3
stos
push
dec
mov
push
int
or
jl
cmp
pop
mov
xor
dec
xor
add
test
flds
lahf
pcmpgtd
push
enter
repz
das
sti
arpl
mov
idiv
daa
jae
lret
out
pop
lea
ja
cmpsl
cmp
add
add
mov
sarl
popa
jge
dec
or
rcrl
mov
into
int
insl
ja
inc
lret
sbbb
xor
sub
inc
inc
loopne
cmc
and
scas
notb
cmpsl
cwtl
and
adc
gs
fsub
ret
adc
cmp
cmp
loop
ds
xchg
sub
stos
push
xchg
cmpsl
ds
inc
fdivl
andl
rep
scas
xchg
xchg
xchg
repnz
jmp
mov
movsb
lods
xchg
negl
mov
mov
movsl
cltd
or
mov
push
dec
xchg
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
inc
push
xchg
loope
xchg
jle
jge
jle
ror
ljmp
adc
lahf
loopne
cmc
fnsave
push
sub
int3
xor
mov
clc
mov
fs
stos
or
dec
dec
imul
stc
jns
fwait
lods
sub
sub
dec
and
sbb
loopne
lahf
and
inc
insl
xchg
lock
pushf
cmc
andb
pop
mov
or
fmuls
mov
xchg
mov
out
inc
fs
sbb
je
fistps
es
repz
push
test
out
sub
cltd
adc
pop
addr16
jmp
and
push
shrb
jno
cmp
sub
adc
and
adc
shlb
lea
jecxz
xchg
shlb
xor
mov
test
sub
aam
push
mov
push
mov
xchg
jno
loop
sbb
fs
inc
jmp
add
xchg
pop
pop
push
push
xchg
mov
cmp
ds
push
xchg
mov
icebp
imul
mov
stos
rcr
movsl
inc
mov
insl
cli
inc
or
shll
xchg
call
mov
cmpsl
xlat
mov
clc
test
xchg
and
push
lods
in
sbb
push
out
and
es
xchg
je
push
mov
das
and
mov
dec
mov
cltd
xchg
xchg
pushw
lea
movsb
pop
pop
or
arpl
jge
sbb
imul
test
push
js
pop
inc
pop
push
sbb
into
adc
sub
and
test
loopne
sbb
xchg
mov
movsl
push
loop
rolb
int
cmp
ja
mov
sbb
mov
mov
ret
and
pop
or
call
das
rorb
fcoml
out
and
xor
popa
shlb
cmp
push
stos
xchg
sbb
jmp
mov
mov
f2xm1
xchg
mov
and
imul
data16
fstps
xchg
stos
jns
xlat
and
push
adc
pusha
xor
mov
adc
jle
roll
add
outsl
aam
mov
sahf
mov
ljmp
cmp
fistl
xchg
sbb
mov
inc
mov
cmc
stc
jl
jp
jecxz
pop
jl
pop
outsl
pusha
dec
jb
nop
clc
aam
lock
jb
out
lea
nop
fidivrs
insl
into
pushf
push
mov
shrl
shrl
sbb
into
push
jo
das
loopne
fstl
lods
ja
shr
cld
mov
pop
pop
or
repnz
xchg
inc
lret
movb
and
jle
jg
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
out
test
nop
jle
jge
jle
or
xor
or
adcl
fidivl
or
or
mov
xor
cmp
fwait
xlat
jb
inc
jl
mov
ds
call
mov
cs
sbb
xchg
mov
imul
mov
jb
cwtl
int3
mov
pop
and
movsl
js
popa
daa
leave
daa
inc
xlat
mov
imul
jge
dec
into
leave
xchg
or
testb
mov
insb
adc
cld
jnp
adc
lret
rclb
pusha
aaa
stos
lret
in
or
and
les
lock
dec
fdivrs
mov
cmp
mov
dec
or
repnz
and
out
sbb
mov
mov
dec
sbbl
push
test
test
lock
jne
lock
int3
inc
jns
imul
xchg
icebp
enter
fists
and
push
jg
fistps
add
lock
pop
sbb
shl
xchg
lds
dec
enter
jge
add
jge
loopne
sbb
dec
ss
ficoms
aad
ljmp
leave
adc
pushf
cmpl
push
pop
dec
mov
inc
and
jg
mov
sbb
jnp
loop
push
les
daa
js
add
sbb
xor
popa
ret
clc
xchg
sbb
push
mov
int3
jmp
lods
idivl
sub
aam
out
sarb
sub
test
dec
sbb
dec
pushf
cmpsl
jbe
dec
lea
cs
inc
inc
cmc
jp
dec
scas
add
daa
andl
mov
pop
std
inc
repz
or
clc
pop
pop
mov
or
jae
aad
lods
jge
mov
incl
mov
pop
mov
ret
fs
push
inc
subb
repz
pushf
jle
ret
in
adc
and
mov
frstor
mov
scas
pusha
xor
or
push
jnp
es
push
cmp
stos
push
ficoms
insl
mov
and
stos
repnz
sbb
add
insb
je
sar
out
mov
out
nop
mov
jae
inc
shll
jb
iret
insb
xlat
shr
lahf
dec
push
push
hlt
in
xor
pop
mov
lods
sub
inc
or
mov
sbb
iret
std
sar
dec
mov
xchg
cmc
gs
cltd
or
movsl
cmp
pop
fists
mov
jne
sub
popl
sub
push
xor
pop
scas
mov
fisubrs
xchg
bound
sub
pop
mov
rorl
xor
jmp
das
subb
mov
xor
cmp
push
ss
jle
jge
jle
divl
mov
jo
rcr
lret
aam
imul
xchg
fs
mov
sahf
fsubr
inc
push
pop
lcall
dec
pusha
dec
pop
cmp
mov
inc
sbb
not
ss
push
int
adc
sub
dec
push
xchg
dec
add
mov
loope
xchg
shl
push
jmp
push
std
jg
andb
dec
insl
shrl
mov
repz
pusha
mov
lret
call
mov
jecxz
sbb
jl
adc
push
cltd
cmp
imull
sahf
mov
mov
push
jnp
add
out
dec
les
hlt
mull
dec
inc
mov
xchg
imul
addr16
mov
or
in
xor
pop
push
fcmovnb
sub
cmp
dec
imul
test
repz
lret
orb
jnp
test
dec
or
and
xchg
ret
xor
into
loopne
enter
mov
test
add
test
ds
add
mov
push
arpl
repz
dec
adc
adc
or
std
inc
mov
les
xchg
pop
lock
in
push
test
and
fcomps
jne
mov
mov
push
ljmp
jnp
cmp
sub
and
lds
mov
inc
adc
lret
test
pushf
push
jmp
add
mov
mov
lret
lds
outsb
dec
mov
leave
les
lcall
jle
and
bound
es
mov
sbb
popf
pop
add
test
xchg
rolb
call
enter
push
inc
lock
push
jo
loop
mov
and
inc
push
push
push
and
jno
shrl
lret
jp
adc
sub
les
int3
test
jle
cmc
jne
pop
cmp
cvtps2pd
pop
repz
pop
cltd
mov
mov
pop
and
mov
outsl
adc
test
jnp
neg
jne
push
push
sbb
mov
mov
rcrb
pop
or
sub
mov
jge
jbe
in
stos
shll
adc
incl
push
fsubr
sbb
outsb
inc
jo
sbb
scas
or
pop
mov
aas
clc
lret
test
movsb
and
push
inc
push
cmpsb
int3
push
rcl
repnz
dec
std
and
loope
mov
add
subb
cmp
xor
push
adc
adc
jmp
fwait
sub
mov
jecxz
or
pop
add
dec
rol
ljmp
mov
mov
lods
xor
addr16
aad
bound
js
push
sub
mov
in
inc
lods
insl
mov
jge
jmp
repnz
adc
aad
fcoms
xor
jge
jle
lods
enter
js
mov
cltd
mov
outsb
sub
dec
mov
adc
loope
cmpsl
out
ljmp
aaa
scas
xchg
xor
jno
repz
push
xlat
or
xchg
xchg
cld
adc
push
loope
lret
js
jp
jg
jo
mov
mov
push
fimull
ja
mov
push
repz
mov
mov
cltd
mov
pop
add
cltd
cmc
xor
dec
sub
mov
aas
cmp
jp
mov
add
mov
add
loope
inc
stc
jmp
inc
adc
adc
and
aas
mov
mov
mov
mov
addl
mov
adc
xchg
mov
mov
fwait
adc
ret
sbb
mov
les
xchg
das
push
mov
sti
xlat
jl
es
cmp
mov
out
aas
mov
inc
mov
mov
sbb
fldl
cmpps
notb
jb
test
mov
rcrl
insl
into
jns
lds
mov
push
shlb
gs
scas
sbb
mov
sbb
fdivs
push
pop
sbb
or
mov
pusha
mov
leave
jl
pop
cmpsb
pop
or
pop
jb
daa
push
sbb
fwait
sbb
cmp
inc
movaps
or
push
xchg
mov
xor
push
jo
adc
ret
cmp
mov
pop
and
mov
xchg
or
sahf
push
rcr
outsl
inc
jp
mov
xchg
sub
adc
cld
leave
xchg
xchg
pushf
xor
pushw
sarl
mov
lods
sub
sbb
push
push
movl
fsubrl
in
aaa
push
mov
fldt
test
movsb
jl
jl
jl
in
cmove
jmp
cmp
mov
dec
xchg
daa
pusha
cmp
and
fnsave
lock
mov
sti
stos
jg
mov
jae
ljmp
or
pop
sbb
cmp
lret
mov
mov
call
add
pop
repnz
jnp
add
mov
inc
incb
mov
push
xchg
mov
mov
loopne
loope
outsl
pop
test
fimuls
or
jno
sub
fidivs
pushf
adc
xor
adc
stc
fidivl
sub
sbb
leave
push
cmpsb
sti
test
dec
sbb
mov
sub
daa
in
fwait
lea
or
repnz
push
out
fcmovu
adc
or
sub
call
rorl
add
call
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cmovge
arpl
cltd
jle
jge
jle
lret
test
inc
cmc
fcmovu
jmp
inc
jmp
cs
sub
and
push
jb
cwtl
sbb
fnstsw
bound
jo
pop
testb
sbb
pmulhw
pxor
sub
addr16
fmul
orb
or
pop
cltd
cmpsb
jbe
fisttpll
sub
and
xchg
mov
adc
mov
push
outsl
push
cmp
mov
pop
es
sbb
decb
cmpb
pop
insb
popa
add
and
xchg
stc
pop
or
fidivrl
pop
scas
cltd
cwtl
xchg
pusha
nop
mov
mov
sahf
outsl
test
xlat
leave
fsubs
test
pusha
pop
icebp
bound
inc
inc
enter
add
and
mov
push
mov
and
jle
pop
jns
hlt
xorb
add
jne
mov
jne
and
cmp
mov
fldl
call
mov
push
sti
scas
loope
ds
repz
xchg
mov
outsl
pop
xchg
mov
fsubr
jp
inc
stos
je
or
scas
sbb
add
sub
pop
insl
cmpsb
out
sub
adc
aad
pop
fs
sub
push
sbb
mov
pop
inc
std
add
faddl
cmp
mov
push
cmp
in
insb
lock
cltd
cmp
std
jle
adc
mov
pushf
loopne
push
xor
mov
test
loope
or
movsl
xchg
fistpl
dec
iret
pop
std
rcrb
jl
push
pop
fildl
pop
add
test
inc
movsb
fmul
and
push
call
adc
add
and
lret
xor
repz
jg
inc
clc
fstpl
mov
add
aas
test
lods
and
xor
pop
je
xor
pushl
dec
nop
pop
dec
push
and
pop
push
dec
sub
or
pop
out
fisttpll
das
lock
inc
jb
inc
call
dec
js
test
sub
icebp
push
loop
pop
sbb
sbb
cmp
dec
pushf
sub
repnz
fadds
out
pop
pop
mov
ret
add
orb
sahf
dec
jle
mov
sub
mov
sbb
ret
in
sub
xchg
adc
ffree
in
jg
xlat
shrb
or
in
call
cmp
mov
xchg
sbb
fdivrl
test
cs
or
mov
adcl
arpl
insl
xor
cs
out
sub
push
adc
mov
jno
add
aam
pop
out
fnstenv
xchg
cmp
test
loopne
or
lret
mov
mov
pop
ja
dec
or
in
push
repnz
pop
stc
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
jnp
loope
aas
movsb
jle
push
jg
jle
sbb
push
cwtl
hlt
xchg
sub
shlb
mov
lea
aad
add
mov
inc
pop
in
pushf
iret
sbb
outsl
movsb
sti
js
test
pusha
inc
gs
xorl
or
jp
push
aaa
inc
add
adc
pushl
jmp
jmp
mov
mov
icebp
jae
ret
lcall
pop
loopne
lret
leave
pop
mov
lret
mov
push
mov
in
daa
in
enter
addl
adc
mov
test
sbb
cmp
mov
inc
fiadds
xor
les
xchg
addl
and
lret
cmpsl
and
or
sbb
stos
push
lcall
or
mov
add
negb
arpl
jo
push
mov
scas
cmp
xchg
lea
xorb
mov
xchg
popa
icebp
adc
jmp
sbb
aam
aam
mov
je
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
mov
jle
jg
jle
add
imul
jp
xor
jb
and
in
dec
push
unpckhps
ds
dec
dec
adc
adc
jg
cmp
jno
shl
push
push
dec
shrl
movsl
xlat
repnz
lock
mov
loope
ljmp
out
mov
sbb
shrb
movsl
mov
pop
dec
pushf
lcall
mov
rcrb
pop
mov
cld
jl
cmc
stc
fsubl
std
icebp
adc
adc
sbb
and
enter
mov
xor
lcall
jbe
mov
stos
or
imul
xorb
mov
js
testl
test
mov
fldenv
pop
loop
jmp
jno
xchg
popa
es
push
in
outsb
loope
sbb
xchg
imul
ss
jns
cmp
daa
cmp
sbb
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
aad
fbld
jle
xorl
negl
into
lret
or
cmp
xchg
push
push
sub
lods
loope
js
dec
in
adc
arpl
and
or
fs
sub
leave
mov
and
pop
shl
mov
xor
ja
je
ret
xchg
mov
loope
inc
jnp
mov
sub
sbb
add
es
cmp
icebp
popf
test
das
out
sbb
sbb
or
and
mov
inc
mov
andb
push
jle
cmpl
push
mov
mov
mov
mov
push
mov
call
cmp
je
pusha
cmpsl
lea
lret
xchg
clc
stc
cs
pop
ja
je
add
or
call
pop
push
mov
pop
push
lcall
outsb
aam
push
mov
or
dec
mov
inc
cmpsb
ds
mov
mov
add
dec
in
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
jp
sub
mov
jle
aas
and
push
leave
lods
mov
std
mov
into
int3
call
adc
inc
lcall
loop
mov
sbb
lret
mov
cmp
enter
jmp
pop
out
outsl
inc
loope
dec
data16
push
dec
mov
mov
mov
bound
aas
cmp
inc
mov
jnp
mov
and
jae
and
out
and
xchg
icebp
ja
stos
cmp
push
pushf
cltd
cltd
dec
xchg
scas
stos
mov
xchg
ljmp
jo
pop
loop
mov
sub
xor
xchg
mov
ret
lea
adc
mov
adc
ret
pop
in
adc
into
xchg
or
pop
movsb
dec
pop
pop
or
std
mov
mov
jbe
js
xchg
insb
pop
scas
ret
xlat
add
pop
in
mov
sbb
mov
into
js
push
dec
nop
mov
ljmp
mov
adc
and
divb
fs
cs
push
rcrb
xlat
es
pop
gs
pop
jb
jae
into
xchg
pop
jmp
jp
adc
dec
loope
dec
into
cmp
sti
out
mov
out
xor
cmp
into
sub
out
movsl
dec
mov
sahf
clc
arpl
jnp
jnp
pop
push
jle
xchg
dec
push
adc
push
das
jno
es
adc
xchg
stos
adc
sbb
mov
jbe
sbb
jmp
ret
xchg
movsb
cltd
pop
aam
jle
leave
pop
stc
stc
jo
sbb
mov
and
push
mov
pop
and
jmp
pop
in
popa
fistpl
mov
loop
mov
in
dec
test
mov
mov
pop
mov
xchg
repnz
cmp
mov
orl
repz
inc
lret
shr
loop
mov
out
add
dec
xchg
shrb
jmp
or
mov
add
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
incb
fs
clc
adc
sahf
mov
jecxz
aaa
outsb
xchg
or
fidivrs
mov
push
imul
pop
jo
cmp
aas
inc
std
or
pop
ljmp
fsubr
jmp
fiaddl
inc
mov
inc
lock
cwtl
je
push
and
vandnps
jg
cmc
push
call
loope
les
inc
fcmovnu
sbb
test
pop
xor
dec
insb
xor
pop
loope
imul
daa
aam
mov
push
int3
jge
leave
inc
cltd
xor
pop
std
data16
stos
pusha
inc
incl
mov
je
lret
mov
push
scas
inc
jno
push
mov
pop
jo
loope
jge
mov
sbb
pop
repnz
outsl
out
dec
imul
jbe
inc
xchg
pop
repz
mov
dec
push
lock
dec
dec
mov
lea
mov
inc
add
fdivs
test
xor
add
and
xor
adcl
jne
aam
push
es
andb
or
aas
stos
xchg
and
cmp
test
xchg
push
aas
scas
and
cmp
jl
mov
cmp
stc
mov
out
sbb
push
jne
mov
jb
minps
xor
mov
mov
xor
stos
rolb
inc
cmp
popa
popf
or
pop
xchg
push
push
rcrb
inc
outsb
dec
push
aas
dec
lds
jo
leave
sbb
addr16
mov
xchg
lds
fcomps
cs
mov
and
outsl
mov
mov
jmp
inc
push
mov
jg
lods
cmc
rolb
sbb
mov
xchg
insb
loope
fwait
pop
loopne
mov
and
xor
das
bound
xorl
push
push
fdivs
sbb
cmp
sbb
movsb
ja
ss
cmpsl
xchg
test
inc
adc
mov
popf
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
push
outsb
adc
mov
aaa
idivl
cwtl
sbb
push
xor
add
fisubrl
xchg
add
test
andb
mov
cmpsb
sahf
xchg
jmp
add
stos
mov
ret
jmp
loop
daa
sub
jge
addr16
lea
ficompl
repnz
lea
scas
fidivrs
mov
add
sbb
addb
movsb
sub
lret
cwtl
inc
xchg
aas
ret
xor
pop
and
mov
insb
jle
jmp
int3
repz
imul
sbb
mov
pop
lock
cmp
push
pop
mov
inc
cld
push
mov
pusha
add
addl
push
xor
mov
fcoml
dec
divb
and
xchg
pop
pusha
mov
cwtl
xlat
dec
jno
push
jmp
cmp
inc
sbb
fucomp
push
jnp
adc
jne
pop
aad
loope
scas
adc
jae
pop
and
out
mov
les
or
out
int
insb
cmp
or
fcmovnu
and
lods
push
push
dec
xchg
leave
mov
or
push
in
and
sti
in
lock
mov
or
rcrl
xchg
movsb
imul
sub
xchg
test
pop
cmpsl
call
cmp
sub
or
cmp
and
or
iret
cwtl
push
data16
lds
incb
push
adc
jbe
mov
ss
adc
xchg
in
clc
call
dec
pop
push
rcll
cltd
loop
add
jnp
filds
scas
adc
jl
fsubr
in
mov
aam
sbb
fistpll
ja
in
or
lods
data16
mov
jle
pop
mov
clc
icebp
sbb
popa
xchg
jge
and
sub
pop
dec
mov
rclb
jmp
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
rsqrtps
inc
icebp
imul
xor
sub
and
cld
loopne
fwait
dec
outsb
dec
cmp
or
inc
ja
out
mov
call
add
xorl
xchg
cmpsl
test
stos
push
xorl
xlat
cwtl
xor
push
rorb
adc
in
and
into
addl
jl
and
lock
jecxz
jns
sbb
pop
out
push
inc
ja
jg
addr16
sbb
insl
and
add
mov
push
divl
push
mov
inc
xor
in
enter
aad
ljmp
loope
call
cmp
mov
fistpll
subb
cmp
mov
lea
das
add
cld
in
scas
mov
push
push
mov
insb
inc
dec
sub
xchg
lds
daa
call
in
aad
call
push
nop
mov
jae
imul
arpl
inc
ss
jecxz
sahf
cmp
and
popa
lahf
dec
xchg
ds
incb
jge
out
lcall
int3
fcomps
sbb
lahf
and
mov
jecxz
adc
xor
call
pop
dec
dec
stc
and
rcrl
std
mov
mov
pushf
mov
pushl
xchg
add
imulb
mov
iret
cmp
mov
xchg
ret
and
fwait
roll
dec
rclb
and
sbb
sbb
loop
lea
xor
xchg
cmc
or
mov
cltd
out
xor
and
mov
mov
xor
popf
mov
adc
dec
dec
sahf
mov
adc
fildl
ljmp
push
add
jb
aad
shrl
leave
inc
in
lret
and
or
fstpl
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
imul
shrb
jle
scas
dec
add
lcall
arpl
sbb
aam
es
insl
mov
pop
fisubrl
push
xchg
sbb
xor
hlt
test
jns
rorl
aad
cmpsl
test
aaa
andb
mov
cwtl
inc
rcll
out
adc
and
mov
inc
inc
das
outsb
fsubrs
adc
dec
sbb
jg
inc
and
or
fcoml
out
into
push
add
ret
fs
push
mov
lret
ret
ljmp
and
push
subl
lret
mov
ja
cmp
std
jne
push
and
xor
add
pop
aaa
cmpsl
aad
dec
loopne
mov
dec
add
pop
xchg
inc
call
mov
mov
dec
mov
ja
dec
pop
add
inc
mov
jne
ficoms
jae
js
repz
or
jno
mov
dec
insb
add
jle
aaa
bound
iret
mov
xchg
adc
add
cmpsw
stos
ficompl
test
pop
mov
sub
adc
mov
cld
pop
push
push
pop
add
push
push
xchg
cltd
lret
add
mov
or
ja
push
sbb
adc
mov
aaa
xor
and
push
cmpb
cld
lahf
test
xchg
push
inc
stos
popf
js
das
mov
outsl
xchg
mov
push
cs
jge
cvtpi2ps
js
push
nop
cmp
jns
loopne
pop
sub
pop
lahf
mov
xor
pop
mov
ja
imul
ss
sub
dec
jne
rol
fwait
mov
notl
add
out
jae
pop
lods
add
mov
je
adc
mov
pop
out
mov
or
call
dec
fnstenv
xlat
je
pop
xchg
inc
mov
push
rcr
dec
int
jb
incl
jnp
sub
push
nop
mov
adc
sub
sti
push
loop
pop
push
rcll
and
pop
xchg
or
insb
rorb
xorl
sub
mov
add
ror
xchg
out
and
sbb
test
or
inc
mov
lods
adc
mov
jmp
mov
shlb
push
jmp
inc
outsb
sbb
roll
loopne
and
sub
push
cmpsb
hlt
jp
les
xlat
enter
adc
xor
rol
cld
xor
daa
aaa
inc
add
add
mov
addl
jmp
insb
xchg
xchg
in
or
jno
mov
jle
jl
jle
pushf
sub
int
and
icebp
cmp
inc
jno
shll
mov
fstps
adc
fadds
adc
lret
pop
arpl
test
and
push
out
or
mov
xlat
out
aad
adc
mov
jnp
dec
in
insb
mov
mov
pop
lcall
insl
cmpsl
and
imul
div
and
outsb
sbb
mov
dec
in
push
mov
pop
addr16
adc
cmp
pusha
cmpb
fcompl
xchg
hlt
mov
lahf
mov
ds
push
pop
xchg
jl
jno
mov
sub
cltd
bswap
ds
imull
aas
jmp
adcb
movsl
mov
and
xchg
xchg
pop
dec
adc
mov
and
mov
jae
out
dec
xor
inc
lock
sub
push
pop
call
popf
test
pop
das
int
jecxz
iret
data16
and
mov
popf
pop
push
clc
lcall
and
int3
mov
stos
push
filds
push
inc
jb
loop
ss
rorl
popf
sub
inc
jg
and
sahf
mov
xor
push
psrad
in
imul
jecxz
std
add
fisttpll
cs
sbb
sub
insl
pop
pusha
loop
adc
push
cmp
inc
cmp
sub
call
fdivrl
out
rolb
ja
xchg
lea
lea
imul
push
fs
push
sbb
jp
jle
mov
negl
cmp
fdivl
in
add
pop
addr16
adc
and
push
lods
mov
hlt
adc
mov
pusha
and
imul
and
icebp
imul
rorb
pusha
mov
fimuls
pop
into
sbb
aad
lret
sub
jae
movsl
in
mov
lret
iret
xchg
lcall
sarl
or
jb
sbb
xchg
inc
jnp
mov
aam
jns
data16
push
push
mov
repz
jb
ss
push
mov
pushf
jne
inc
shl
and
cmp
mov
dec
cli
fsubrs
mov
dec
cmpb
subb
xor
mov
inc
lahf
ss
adc
sbb
leave
es
mov
stc
sbb
cmp
pop
inc
mov
sub
mov
in
sub
int3
imul
pop
pop
or
push
jnp
xor
mov
inc
cmpsb
shlb
xor
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
jo
dec
push
or
jle
push
aas
or
push
sahf
testl
adc
fbld
mov
and
or
or
push
pop
inc
iret
pop
mov
ds
mov
pop
sub
or
cmpsb
sbb
xchg
and
push
subb
or
outsb
push
in
mov
or
negb
jnp
xor
push
xor
lds
ljmp
stc
ljmp
outsb
ljmp
je
jg
pop
enter
cmpl
dec
subb
shlb
pop
nop
mov
test
js
xor
loope
in
cwtl
mov
cmp
mov
fxch
mov
pop
pop
jo
mov
loopne
mov
lock
pop
mov
fdivs
loope
mov
jge
mov
xlat
or
mov
add
push
insb
cmpsb
ret
inc
outsl
dec
js
sbb
mov
mov
shll
iret
sbb
cwtl
les
lea
pop
js
mov
pusha
nop
rcl
push
iret
jmp
xchg
dec
lods
int3
idiv
loopne
dec
les
sbb
push
mov
sbb
jp
xchg
push
stos
fwait
adc
jecxz
pop
int
and
adc
lods
pop
pop
cld
cmp
lahf
lods
mov
lods
add
movsb
push
andb
mov
cmp
fsub
cli
test
dec
or
mov
mov
add
jmp
idivb
int3
jecxz
adc
dec
lret
cwtl
pop
cs
and
je
inc
stc
and
sbb
test
mov
test
cmp
lock
negl
ljmp
adc
imul
flds
sbb
sbb
fdiv
sub
int
pop
cmpsb
jne
or
out
xchg
pop
dec
std
xchg
sahf
xor
cmp
je
lods
sub
movsl
into
pop
and
fistps
jecxz
lahf
movsl
ds
jmp
bound
fnstenv
and
jbe
mov
into
mov
lret
insb
push
or
aam
or
fiaddl
and
fisttps
pop
jno
aas
sub
mov
add
ja
clc
js
and
stos
mov
or
cmc
nop
sbb
adc
pop
bound
icebp
add
jmp
lock
arpl
sub
scas
ret
shrl
xchg
ud1
jle
xor
pop
add
add
inc
adc
push
sub
ret
popa
popa
add
inc
inc
iret
xchg
imul
repnz
adc
repnz
pop
push
add
std
push
xor
xor
cmp
scas
adc
out
add
pop
or
movsl
push
adc
pop
lods
mov
cmp
inc
xor
inc
or
int3
dec
xchg
jb
enter
pop
adc
data16
or
fbstp
mov
divl
jae
mov
std
lea
add
mov
or
push
stos
es
adc
movb
mov
lret
mov
push
std
cmp
cmp
fs
sub
je
sarb
je
cli
out
js
shrb
mov
inc
xchg
call
jmp
into
cld
test
jle
jg
loopne
or
xor
ss
xchg
cmpsb
jp,pt
jnp
adc
sti
cmpsb
xchg
fcoml
inc
pop
imul
cwtl
cmpsb
frstor
gs
out
enter
shlb
xor
dec
iret
pusha
push
ss
push
xchg
clc
std
cli
test
push
pop
mov
lods
jge
xchg
mov
stc
and
mov
fcomps
push
cld
xorl
mov
cvtpi2ps
lds
pop
popa
cmc
fs
push
fsubs
mov
mov
repnz
pop
push
pop
mov
inc
shll
rclb
sbb
mov
aam
mov
add
xor
scas
outsl
sbb
jp
outsl
jns
outsb
pusha
mov
adc
mov
mov
xor
xchg
push
pop
gs
mov
dec
mov
lea
ret
jb
subb
leave
cs
ljmp
test
xor
mov
pop
xor
shlb
mov
cmp
sub
cmp
add
cwtl
movsl
out
testl
je
or
sub
mov
push
adc
iret
out
fldl
std
hlt
aad
add
jle
xchg
cwtl
cmp
inc
andl
rorl
xor
sub
inc
aas
add
xor
cmc
aas
dec
mov
out
arpl
subl
mov
xchg
lcall
fdivrl
pop
inc
int
mov
inc
add
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
enter
jle
lods
jl
jle
dec
cmpsl
mov
scas
jo
dec
xor
dec
jl
mov
sub
popf
cmp
cwtl
repz
cmp
sbb
jp
xchg
adc
pop
cmpsl
mov
cmp
inc
mov
adc
shlb
movsl
dec
xchg
cmp
sbbl
add
pop
jp
xchg
nop
push
jmp
mov
xor
repz
in
fistps
mov
inc
mov
jg
outsl
repz
shrl
cltd
add
dec
call
ror
stos
repz
adc
fmull
jp
movsl
ja
or
stos
call
cli
jecxz
pop
movsb
in
adc
sub
and
pop
jb
jo
mov
dec
fucom
push
jecxz
adc
call
rcrb
sub
iret
xchg
fwait
lret
adc
out
faddl
sbb
sub
fwait
jg
mov
lret
lock
pop
jae
and
pop
decb
and
cmp
lea
jmp
xchg
jmp
mov
cld
adc
pushl
xor
jl
pop
lret
jo
icebp
mov
mov
jbe
mov
insl
mov
mov
and
jo
in
cmp
jecxz
iret
fistps
mov
dec
adc
adcl
xor
ds
insl
es
push
sbb
dec
ret
dec
fs
pop
xchg
loope
ret
pop
cmp
mov
xchg
sbb
out
cwtl
stc
ss
in
dec
clc
rcr
xlat
sub
pop
mov
scas
dec
iret
les
test
andl
inc
scas
inc
jb
and
adc
fwait
test
jb
lds
jb
push
std
inc
in
and
stc
add
adc
push
push
mov
cwtl
xor
ds
lcall
sbb
mov
mov
data16
add
adc
lret
fwait
jle
outsb
loope
loop
outsl
xor
je
lds
mov
cwtl
btcl
mov
push
les
and
jae
pop
inc
pop
lret
cld
adc
xchg
lcall
push
arpl
or
cmpsl
mov
arpl
sarl
pushf
or
incb
pop
mov
mov
mov
xchg
push
push
lret
fistpl
stos
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
pop
sbb
mov
and
andb
lret
movsl
xchg
sub
inc
js
mov
in
test
les
in
lods
add
sub
repz
aas
cmc
shlb
repnz
mov
push
inc
mov
adc
pop
test
cmp
jp
arpl
aaa
dec
jle
sbb
jns
pop
xchg
xchg
add
jno
push
fisttpl
out
test
insl
int
lods
pop
into
jl
arpl
xor
xchg
jne
scas
inc
xchg
clts
xchg
aas
sahf
jmp
insl
jnp
leave
xlat
mov
xchg
pop
loopne
pop
jp
sub
fistl
pop
jp
jp
mov
jae
pop
xchg
inc
inc
mov
xorb
inc
subb
nop
mov
loope
mov
jp
fldt
cmp
mov
or
or
fs
gs
cli
pop
jo
or
loop
cwtl
adc
lcall
or
cmp
dec
test
jle
jl
mov
sahf
rorb
pop
pop
mov
xchg
cmpsl
xor
push
lds
int
adc
inc
int
xor
inc
add
das
enter
test
push
aas
in
pop
icebp
cmpsl
xor
out
shrl
sub
test
or
xchg
jbe
dec
and
stos
xchg
and
test
lahf
cmpsb
and
out
pop
outsl
and
cmpsl
into
sub
sub
mov
xchg
cmpsl
aaa
xor
cwtl
push
fistpl
ljmp
or
inc
and
adc
fisubl
in
add
mov
int
xchg
add
fimuls
inc
pop
call
adc
xor
cmpsb
jmp
jl
test
loope
mov
hlt
sbb
push
sbb
pop
lea
out
int
ja
or
sub
mov
cli
data16
jp
je
push
or
clc
jle
lahf
popa
sub
sbb
inc
or
dec
jae
nop
push
into
or
xlat
xchg
lret
cmpsb
jg
stos
mov
scas
and
roll
inc
popa
repnz
dec
add
movsl
cmp
dec
or
enter
dec
in
cmp
adc
xchg
sar
rep
jle
mov
jb
outsl
push
lds
scas
mov
inc
in
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
leave
xor
inc
xchg
mov
jle
pusha
std
push
pop
or
ds
loopne
ud2
xchg
mov
adc
ljmp
icebp
inc
ss
mov
mov
and
sahf
inc
xchg
fcoms
icebp
xor
pop
stc
ja
mov
jle
dec
mov
insl
mov
and
mov
jno
xlat
push
push
dec
aad
xor
loopne
lahf
dec
mov
out
push
aad
cmpsb
stos
jne
je
mov
xor
lea
pop
stc
xor
ret
and
cmp
lds
push
mov
sub
movsl
jnp
movsl
pop
insl
std
out
in
jmp
dec
stc
outsb
pusha
call
jmp
fidivrl
dec
out
bts
cmp
inc
lret
sbb
ja
mov
jmp
add
mov
loop
fwait
add
adc
and
xor
dec
lahf
mov
mov
adc
call
jno
ds
mov
or
mov
inc
jbe
sbbl
popf
or
leave
in
sbb
push
sub
lret
pop
out
sbb
add
adc
jg
mov
mov
gs
bound
fyl2xp1
test
dec
mov
addr16
dec
and
loop
sbb
mov
or
add
ficomps
or
in
les
pop
xlat
or
pop
cmp
xor
icebp
cmpb
mov
adc
mov
mov
dec
leave
pop
mov
push
fsin
fildll
out
xor
aam
es
scas
or
mov
add
jo
push
sub
mov
adc
mov
les
jmp
cmpsb
push
lret
cwtl
xor
lea
or
mov
add
pop
loop
xchg
pop
cmp
mov
sbb
push
cld
push
test
mov
pop
add
cltd
ss
test
mov
pop
outsb
xor
nop
xchg
aad
add
xor
sub
push
fisttps
sbb
pop
fs
push
insl
dec
cmp
dec
dec
das
or
and
pushf
adc
ret
mov
bnd
movsb
adc
mov
popf
xor
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
inc
insl
inc
scas
or
jg
jle
int3
clc
adc
mov
push
xchg
pushf
insl
test
mov
jae
dec
add
ret
pushf
or
add
clc
adc
sbb
xchg
sbb
negl
push
xchg
adc
mov
int
ret
cli
mov
nop
rcrb
imul
sub
stos
push
fsubl
aaa
inc
int
lret
pop
test
int3
cmpsb
xchg
hlt
nop
imul
xor
cmp
inc
scas
sbb
jae
mov
cmp
test
jno
cmp
int3
bound
xchg
mov
repnz
push
or
cltd
cmpsl
outsb
adc
mov
mov
pop
lods
cmc
sub
mov
fldl2e
roll
ljmp
in
mov
cmp
rolb
popf
dec
xchg
adc
mov
mov
xor
dec
enter
sub
xor
daa
xor
push
and
les
out
push
add
mov
pop
test
out
bound
dec
cmp
or
or
xchg
stos
incb
gs
adc
mov
and
xor
arpl
inc
ret
jb
push
cmp
xlat
push
call
or
mov
and
pop
mov
aad
scas
mov
cmc
movsl
aaa
inc
mov
sbb
int
mov
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
xor
inc
jle
icebp
jg
jle
jl
test
aas
mov
mov
std
je
orb
insl
loopne
mov
mov
test
push
es
lret
aad
js
fcmovbe
pop
into
xor
xor
gs
loop
movsl
arpl
aaa
dec
cltd
inc
fidivrs
out
outsb
fwait
xchg
xchg
mov
cwtl
sbb
outsl
sbb
dec
clc
mov
dec
sbb
cwtl
sub
leave
push
pop
xor
js
sub
jnp
out
push
and
stc
lret
adc
jmp
mov
mov
mov
push
bound
adc
and
stos
mov
loop
push
add
dec
inc
les
cwtl
or
jle
and
or
pop
jge
mov
or
loopne
dec
pop
ss
lcall
xchg
xchg
loopne
inc
dec
es
lock
push
repz
and
test
jge
das
jb
add
pop
push
ret
cmp
cmpsl
jns
cmp
fwait
out
mov
out
mov
inc
pop
aaa
mov
cmp
xor
hlt
add
or
aad
jg
repnz
xchg
cmc
adc
xchg
jecxz
repnz
roll
sbb
add
aaa
and
lcall
cmp
addr16
mov
jnp
int3
sbb
inc
sbb
inc
lods
pop
dec
sub
push
xchg
sub
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
in
fwait
pop
or
icebp
jg
jle
mov
push
orl
add
rcl
push
xchg
imul
jecxz
test
ret
mov
fstpl
mov
sub
fisubl
dec
iret
pop
nop
mov
xlat
icebp
test
lahf
mov
pop
fcoms
sbb
adc
int
push
dec
movsb
cmc
nop
jne
sub
mov
movsb
mov
cld
xchg
rclb
inc
adc
jno
es
xchg
jge
mov
jg
test
mov
and
cli
nop
mov
cs
lods
or
lret
adc
popa
push
sbb
sbbb
xchg
mov
sti
popf
mov
xchg
push
into
scas
sti
outsb
scas
stc
sub
cli
outsb
ret
mov
push
aad
or
hlt
bound
adc
ljmp
pop
mov
dec
rclb
lods
inc
inc
mov
mov
pushf
arpl
lods
xor
jg
sbb
xchg
aaa
fwait
push
sub
or
sub
or
popa
je
test
sysret
addb
jo
aaa
js
leave
sahf
sub
js
movsl
imulb
je
add
rol
jecxz
lret
outsb
mov
dec
js
mov
cld
sbb
mov
pusha
mov
sub
sbb
or
ljmp
out
jge
cld
arpl
pop
sub
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
shlb
jg
jle
out
loope
jge
xchg
ss
mov
push
test
idivb
aad
xor
sbb
pmullw
add
fldcw
dec
movsl
mov
xorl
and
cmp
insl
push
jns
sub
shlb
inc
inc
sbbb
loop
das
mov
mov
cmp
ds
sub
push
sub
or
ror
mov
loop
aad
lds
xlat
in
sbb
call
ret
pop
loope
pop
addr16
fistl
out
leave
andl
jns
pop
inc
int
in
shll
adc
mov
stos
jle
cltd
mov
imul
cmp
icebp
jo
pop
insl
sbbb
in
fwait
in
adc
xchg
xchg
xlat
or
mov
mov
add
push
es
fwait
ljmp
adc
or
mov
add
cmp
push
xchg
scas
lock
push
adc
jb
push
call
mov
cli
inc
or
cmpsb
pop
inc
imulb
pop
popf
mov
out
sti
lods
clc
pushf
or
push
out
sti
mov
into
clc
pop
mov
repz
rcll
lret
bsr
scas
jp
fsubrp
fistps
stc
pop
test
pop
xchg
int
jae
repnz
js
notl
push
push
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
xor
inc
jle
icebp
jg
jle
lods
cwtl
and
sbb
push
ds
or
xchg
sub
xor
jmp
or
push
mov
push
inc
xor
jne
stc
lods
push
leave
jmp
xor
adc
sbb
cs
pop
or
lcall
aas
mov
add
loope
push
pop
aaa
and
nop
push
sbb
test
pop
repz
and
sti
mov
dec
outsl
cmp
cmpsb
pop
cmp
fcompl
cltd
addb
mov
test
push
jnp
mov
mov
sbb
leave
push
adc
in
pop
clc
dec
xorl
xorb
jmp
loopne
sub
ret
enter
jbe
push
xchg
dec
es
out
mov
insl
adc
hlt
or
push
xchg
inc
dec
ljmp
mov
pop
test
push
int3
jg
aas
stc
lods
mov
ds
pop
or
loop
or
ljmp
flds
shlb
dec
inc
xlat
inc
jp
imul
pop
enter
lods
movsl
std
jmp
std
cltd
and
and
cmp
cmp
dec
cli
or
sub
add
test
aas
mov
and
xchg
outsb
inc
dec
push
pop
enter
push
adc
sub
in
ret
xor
pop
cld
decl
jmp
ljmp
jo
fidivs
mov
sub
jle
jg
jle
push
in
cmp
mov
mov
dec
push
fsts
mov
ja
sub
mov
add
inc
in
insl
mov
fcomps
notb
mov
mov
dec
jbe
mov
xor
out
and
pop
sahf
dec
popa
dec
mov
jle
xlat
cltd
stos
sbb
lret
pop
xor
dec
cmc
dec
loop
push
test
inc
out
mov
sub
stos
cli
pop
addb
dec
aam
dec
js
xchg
test
cmp
into
mov
mov
repz
loop
add
adc
add
jns
pop
mov
sub
repz
out
xchg
add
in
ss
movb
mov
mov
mov
rcrb
push
dec
popf
xchg
sbb
and
jne
aas
xchg
cwtl
cld
cmp
ds
out
dec
pop
repnz
adc
in
push
outsb
dec
xchg
lea
xchg
xor
movsb
sub
add
pop
es
or
pushf
xchg
das
xor
mov
popf
push
insb
jnp
jg
js
scas
fildll
mov
lock
sbb
xchg
pushf
add
ss
sti
cmc
fldl
adc
imul
aad
insb
cmp
das
mov
notl
or
or
push
filds
xlat
lahf
fstps
std
popa
pusha
sbb
dec
adc
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
xchg
mov
adc
sub
adc
mov
mov
xor
ja
jnp
mov
fsub
inc
cmp
test
out
xlat
rclb
icebp
bound
xlat
cmpsl
pop
cmc
jo
inc
gs
shlb
cmp
xchg
add
jl
jmp
repnz
xchg
sbb
mov
xchg
shlb
in
inc
push
lea
shll
lcall
jbe
xor
pop
adc
lret
dec
in
cs
pop
nop
adc
into
hlt
mov
test
push
pop
and
cli
pop
mov
adc
out
sub
mov
es
xchg
loopne
and
xchg
lock
inc
or
outsb
pop
enter
cmc
fisttps
dec
sub
stc
in
jo
mov
jge
cs
mov
dec
mov
ds
sub
sbb
hlt
sub
test
repnz
mov
adc
mov
mov
and
cwtl
push
dec
adc
fisubl
cwtl
pop
mov
in
sub
jns
push
adc
sbb
cmpl
jne
std
mov
jg
sbb
call
stos
xchg
insb
xchg
push
sbb
push
sti
pop
inc
inc
fs
orl
and
mov
popf
shl
gs
adc
mov
nop
and
fcmovnbe
andb
test
fldcw
pop
jge
scas
sahf
mov
pop
cld
inc
cmc
fwait
addr16
pop
inc
mov
or
xchg
jmp
int3
int
out
dec
xchg
cmp
sarb
adc
add
sti
mov
rorl
int3
aas
mov
lock
sub
mov
cmp
daa
ficompl
xor
adc
outsb
iret
call
jp
pop
pushl
cmp
mov
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
push
fisubs
jle
adc
jnp
roll
add
xor
sbb
aam
outsl
in
roll
mov
scas
xor
test
mov
dec
cld
push
imul
aas
push
inc
inc
test
fmull
jg
mov
icebp
bound
push
cmp
xchg
lret
les
aas
flds
push
gs
xor
cmp
lods
push
ja
mov
add
ja
xchg
jb
cld
jbe
pop
or
mov
sti
clc
jns
cmp
inc
aam
in
loop
rol
inc
xorl
inc
stos
dec
mov
inc
imul
into
sar
je
fildl
enter
lret
xchg
cmp
in
std
out
lea
jb
inc
and
and
repz
mov
das
push
sub
mov
adc
jle
ret
mov
shll
gs
xchg
mov
pop
stos
lret
cmp
jne
dec
jp
push
or
push
cli
mov
sbb
dec
mov
push
rolb
xchg
mov
dec
jo
mov
add
jno
fnstenv
negl
shlb
aam
dec
xchg
cld
jo
idiv
dec
ljmp
je
in
inc
in
jle
fsts
sbb
or
push
lea
xchg
sbb
mov
leave
cmp
xchg
cmpb
popa
sahf
in
sarl
xchg
fcomp
repnz
cmpsb
mov
pushf
or
cs
cli
push
aam
arpl
sbb
push
mov
in
push
push
adc
sub
icebp
daa
inc
test
out
fnsave
ficomps
jecxz
add
jg
mov
ljmp
imul
lcall
das
adc
nop
div
push
and
iret
cld
jg
mov
mov
xchg
push
inc
addb
inc
loope
jl
mov
fxch
adc
inc
or
ret
jne
mov
add
jmp
mov
imul
sahf
and
dec
jle
adc
dec
inc
push
fisubrs
gs
insb
mov
pop
fidivrs
stos
jne
pop
fimuls
mov
or
call
movsl
ret
xchg
pushf
lret
pop
mov
mov
ret
outsl
lret
sar
jb
adc
incl
xchg
loop
in
xlat
stos
mov
xchg
cmp
push
in
mov
clc
in
sub
les
int3
insl
add
push
mov
mov
lahf
int
sarb
repnz
cmp
out
je
pop
out
orl
inc
mov
add
mov
mov
fisttps
fwait
and
fcmove
pop
push
in
lcall
pop
jno
mov
repz
sub
and
sbb
dec
ljmp
sub
mov
mov
inc
int3
inc
cmpsl
lcall
bound
div
mov
mov
mov
cmpsb
in
pop
jmp
nop/reserved
push
arpl
inc
shl
out
inc
jb
mov
data16
scas
sub
sahf
clc
loopne
push
and
addb
dec
test
pop
mov
cli
cmpsb
ss
or
stc
adc
xlat
ret
mov
pop
xor
or
cli
sub
adc
stos
mov
andb
in
fldl
shrb
dec
xor
mov
out
jmp
push
jae
shll
fsub
push
lcall
xor
lcall
or
dec
mov
scas
stos
shl
mov
cmp
jbe
cmp
jmp
scas
cmp
pop
xchg
push
lcall
mov
lods
xchg
sbb
loop
mov
ljmp
outsl
pushf
leave
dec
mov
dec
adc
xor
nop
inc
mov
fs
in
lods
sbb
flds
dec
mov
pop
dec
les
mov
cmpsb
mov
mov
out
mov
push
stos
arpl
xor
mov
test
inc
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
add
fucomp
xlat
add
add
add
and
pop
repnz
inc
popf
bound
pop
out
clc
xchg
repz
and
mov
lcall
dec
fs
sbb
push
or
cmp
jge
mov
add
aad
iret
nop
sahf
into
shrl
std
pop
xor
lds
add
xchg
pushf
xor
xor
mov
mov
jp
xchg
jb
dec
sub
outsl
mov
adc
mov
dec
fcoms
iret
mov
inc
out
arpl
in
mov
mov
repnz
and
out
sub
pop
gs
pop
int
inc
inc
sub
scas
test
int
inc
xchg
push
mov
dec
fwait
addr16
movhps
jns
test
xchg
or
popa
pop
dec
lods
xchg
daa
int
push
push
out
mov
fistl
cmpsl
xchg
or
xchg
sbb
pushf
lea
pop
ficoml
in
jle
lcall
dec
fadds
add
add
add
sbb
cmp
jo
or
pop
adc
mov
aad
dec
mov
nop
inc
movsl
and
jo
sbb
fwait
popf
dec
sahf
adc
jo
sub
jl
inc
and
into
push
jno
out
xor
and
mov
add
ficoms
movsl
stos
mov
and
mov
leave
inc
mov
push
sbb
mov
cmp
and
push
xlat
jns
push
xor
dec
sub
pusha
pop
pop
jnp
dec
xchg
icebp
inc
mov
pop
sub
fadds
pop
inc
mov
lret
mov
adc
out
lock
pop
push
pop
int
xchg
adc
subb
icebp
jg
iret
jp
call
lahf
xorl
lods
lret
out
and
mov
inc
jns
inc
mov
dec
orb
sub
ja
daa
mov
cmp
add
add
adc
mov
mov
push
jecxz
ds
flds
add
add
add
pushf
cmp
stos
leave
fists
pop
or
or
in
jecxz
fnstenv
sahf
in
test
inc
sub
pop
jbe
push
rcr
dec
sahf
xchg
hlt
jmp
leave
cltd
cmp
imulb
sbb
loope
int
pop
sbb
rcr
ss
sub
mov
inc
fisubrs
idivb
mov
mov
cmc
jns
inc
in
ficoml
push
ja
push
negl
test
push
das
mov
in
in
das
fistps
aam
daa
imull
mov
push
adc
aas
lahf
mov
pop
add
cmp
mov
or
sub
sbbb
pushf
jae
adc
vmread
pop
sub
movsl
pop
cmp
or
jns
pop
adc
mov
fs
jne
xor
xor
mov
inc
mov
sbb
aam
mov
inc
cli
inc
dec
mov
shl
add
add
subl
roll
test
or
fiaddl
add
add
add
lods
push
or
push
pop
mov
adc
cltd
pop
imul
insl
das
aad
lds
loope
call
mov
scas
adc
xchg
and
jecxz
jp
mov
popa
pusha
lcall
xchg
cmc
lret
adc
xchg
pop
xchg
push
xchg
sub
inc
cli
xor
dec
out
jge
or
and
fidivs
pop
dec
xchg
jbe
notb
pop
inc
dec
notb
int
test
dec
in
pop
sbb
clc
mov
lods
jmp
mov
sub
cmpsb
jne
dec
das
adc
jmp
sbb
add
test
lds
pop
mov
in
add
fcomps
sarb
and
sbb
cwtl
xchg
sti
out
sbb
stc
mov
pop
mov
dec
lock
clc
mov
fsubl
xchg
xor
stc
jnp
sbb
stos
sub
and
inc
and
add
add
add
inc
or
pop
dec
or
stc
sbb
fildl
add
add
add
loopne
les
inc
imul
fisubl
mov
mov
mov
cwtl
dec
call
dec
dec
xchg
mov
ss
js
cmc
inc
lret
jge
and
imul
sbb
movsl
popa
cltd
add
outsl
in
xor
repz
and
sbb
sbb
sahf
insl
mov
jecxz
dec
bnd
adc
test
rolb
xor
movsl
stos
mov
or
jne
cmp
clc
ja
dec
scas
push
mov
mov
or
mov
icebp
push
mov
rcl
inc
sbb
push
in
push
imulb
sbb
xlat
lret
lea
jae
xchg
rcl
iret
fidivl
nop
xchg
lret
jbe
fwait
xchg
push
out
fidivrl
outsb
add
adcl
adc
aam
repz
jne
loop
push
push
sti
mov
jg
cmc
insl
cmc
out
lcall
enter
in
ret
faddl
add
add
add
subb
cmc
add
sub
mov
scas
lods
push
cmp
xchg
fsubs
out
jmp
jbe
out
xchg
cmc
adc
shl
loopne
insl
xor
hlt
test
pop
pop
push
mov
das
pop
mov
int3
sub
inc
and
bound
out
gs
adc
dec
pop
imul
andb
dec
jnp
fadd
es
adc
mov
xchg
fucom
xchg
pop
outsb
lahf
incl
cmp
les
test
sub
mov
jbe
imul
inc
lret
in
stc
mov
imul
mov
outsl
call
pushf
mov
scas
or
jg
xor
push
mov
test
out
pop
push
adcb
shlb
fbstp
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
mov
pop
xlat
mov
sahf
mov
xor
sub
into
ss
pop
fucomp
mov
cwtl
sahf
and
push
jb
fsubr
rorl
sbb
jp
cltd
es
push
mov
cmp
mov
push
cs
mov
fists
stos
xchg
divb
movsl
pop
int3
sarl
cmp
xchg
insb
mov
pop
add
pop
mov
out
push
xchg
sub
shl
popf
test
and
xchg
ds
les
mov
sarl
sbb
and
sahf
call
nop
xor
sbb
mov
cmp
xchg
and
xor
ja
mov
inc
xchg
jl
cmc
cmp
leave
aaa
pop
or
mov
cwtl
testb
sub
adc
test
inc
cs
imul
outsl
mov
lea
dec
sub
or
mov
add
add
jle
and
scas
sti
jle
pop
push
pop
add
jb
fiadds
add
add
add
loope
gs
mov
push
hlt
xchg
cli
adcb
inc
out
shll
push
test
repz
xchg
cmpsb
xchg
and
mov
cmc
mov
popa
scas
push
cli
lret
stc
repnz
pop
pop
mov
and
push
dec
cwtl
ja
mov
fiadds
pop
in
pop
outsl
jae
je
mov
adc
mov
in
test
jo
sbb
cmp
inc
fidivl
stc
adcl
pop
add
add
xor
jecxz
int3
lahf
mov
ljmp
cmp
add
jbe
xchg
lods
cmpl
pop
cmp
sbb
mov
pop
mov
loop
and
dec
mov
pushf
xor
xchg
fdivrl
fistl
sbb
idivl
push
test
and
in
xchg
push
cmpl
push
movsb
in
xor
ds
rorb
add
cmp
lahf
fnstcw
ss
lahf
stc
bound
lret
filds
add
add
add
cwtl
cmp
testb
jmp
stos
xor
pop
inc
imul
inc
ficoml
enter
sub
icebp
mov
lods
jmp
pushf
mov
push
pop
daa
out
sub
and
sub
icebp
es
nop
cmc
pop
imul
enter
mov
and
push
mov
push
or
adc
outsb
mov
xchg
jnp
in
aaa
xor
in
aam
test
push
movsb
push
push
add
mov
test
inc
jno
mov
cltd
shl
adc
es
out
xor
aad
int3
popa
mov
mov
test
push
pop
cmp
dec
dec
stc
mov
negb
cmpsl
or
push
inc
xchg
aaa
das
lds
sub
stos
jmp
loope
fwait
jno
push
shll
inc
popf
stos
xchg
sbb
in
adc
and
movsb
mov
iret
adc
shrd
add
xor
push
jl
jle
insb
out
adc
sub
add
add
scas
mov
movsl
or
sub
jge
dec
loope
jb
or
ljmp
mov
xchg
mov
fisubrs
sub
fsubrs
mov
pop
mov
push
xchg
adc
dec
iret
jp
leave
in
pop
xor
js
iret
jno
xchg
sub
das
sahf
xorb
je
pusha
imul
mov
mov
jbe
mov
ret
add
dec
out
jg
in
inc
cld
shlb
pop
sbb
imul
jae
ja,pt
mov
rorb
lcall
out
adc
test
scas
jns
outsb
fildl
insl
aam
mov
roll
mov
or
jl
leave
cmp
lret
or
push
add
lods
imul
sbbb
lea
sub
enter
xor
or
icebp
or
repz
cmp
imul
add
fwait
mov
in
xor
adc
loopew
add
add
add
cmp
les
mov
ja
mov
pop
cmp
enter
xchg
rcll
pop
xor
xchg
push
mov
aas
dec
fldl
fcompl
push
dec
push
insb
rcrl
mov
shrl
and
push
cmp
mov
pop
sti
cmp
push
push
clc
rorb
gs
scas
insb
iret
out
jae
je
insb
jbe
repz
ss
popa
pop
daa
sbb
lahf
jne
mov
outsb
and
add
popa
adc
sbb
das
ret
jns
inc
and
mov
ret
popf
jb
mov
scas
popa
fsts
cmp
xchg
std
test
lret
jmp
xchg
shl
out
pop
jecxz
xchg
jb
out
in
dec
jl
push
jbe
mov
fdivrs
aad
adc
loop
dec
aam
push
cmpsl
jo
repz
add
les
xchg
adc
aaa
data16
jne
mov
lcall
add
add
add
pcmpeqb
and
hlt
outsl
das
sarl
and
pop
jno
call
jnp
cmp
out
fidivrs
lret
mov
or
adc
sub
rclb
cmp
jecxz
mov
push
or
mov
sti
jbe
insl
stos
mul
aam
xor
add
out
hlt
push
loopne
stc
push
push
in
xor
pusha
in
rcr
les
jb
ds
stos
lods
dec
out
dec
add
lret
sub
into
cs
xor
iret
and
mov
jbe
es
mov
leave
sub
xor
lret
cmp
xchg
loope
xchg
add
sbb
sahf
and
cmc
push
lock
jle
stc
roll
fs
lods
test
divb
leave
xor
movsl
lods
mov
movl
fsubrs
jnp
add
jnp
sti
xchg
lahf
mov
dec
stc
jcxz
add
add
add
dec
into
cltd
xor
into
mov
addr16
pop
icebp
outsb
scas
jns
pop
dec
xchg
loopne
xor
movsb
mov
int
mov
push
pop
fld
xchg
pop
push
test
jns
xlat
jecxz
lahf
xor
sar
pop
sbb
lods
out
fnsave
and
leave
fwait
xor
ljmp
and
xchg
inc
mov
fcoms
cwtl
pop
loopne
enter
xchg
cmp
push
mov
fdivs
push
jg
mov
stc
sbb
iret
decl
jbe
lret
fucom
pop
xchg
pusha
xchg
or
push
and
lods
inc
mov
xor
sub
or
les
pop
test
test
mov
lret
sub
push
inc
pop
lahf
or
mov
aas
mov
gs
sub
jmp
insl
ja
mov
loop
add
pusha
xlat
shlb
cli
xchg
lock
add
sub
pop
sarl
mov
fsubl
add
add
add
cmp
inc
test
sub
clc
push
shl
jg
xchg
dec
sbb
arpl
adc
jl
add
sub
xchg
sbb
xchg
xor
pusha
and
subb
cmp
mov
rolb
ss
mov
lds
xchg
dec
cltd
xor
stc
push
icebp
bound
test
dec
pop
not
jg
dec
ds
pop
cmp
jns
cwtl
mov
push
lret
jl
jo
dec
sbb
pop
fwait
mov
mov
call
cmp
mov
sbb
jne
fdiv
dec
and
jge
cltd
cli
imul
cmpsl
adc
cmp
aam
movsl
insl
nop
mov
inc
cmp
jne
notl
pop
stos
cmp
lret
andb
addr16
xor
push
fcompp
js
test
cwtl
xchg
out
mov
sahf
push
and
outsb
roll
ret
mov
inc
mov
add
repz
std
repz
adc
xchg
addr16
add
add
add
cli
mov
jle
stos
pop
push
cmpsl
xchg
cmc
test
xchg
leave
mov
mov
sahf
jb
cmp
cmp
sbb
inc
jmp
pop
test
cmpl
lods
jns
arpl
out
push
push
stos
popa
test
xor
repnz
inc
pop
fmull
pop
in
cli
je
sbb
inc
jb
cmp
sbb
sbb
inc
js
lahf
sbb
jo
mov
push
ja
lock
xchg
jae
leave
outsb
and
push
sbb
mov
sbb
int
mov
jno
mov
xchg
aad
mov
xor
lahf
fildl
clc
xor
xor
jge
pop
bound
inc
sub
cs
cwtl
add
and
push
pop
push
and
ljmp
mov
int
subl
pop
adc
pusha
push
iret
popl
and
mov
ljmp
in
sub
cmp
arpl
je
mov
or
add
add
mov
inc
mov
or
lea
xchg
fdivrl
mov
mov
xrelease
loopne
imul
or
inc
jae
or
mov
notl
sbb
dec
pop
popf
pop
imul
pop
dec
inc
add
bound
jmp
inc
cmp
pop
ss
adc
push
js
jecxz
test
dec
lret
push
sbb
and
pop
or
sub
in
add
cmp
mov
lahf
and
sbb
xlat
xor
iret
add
popa
dec
cld
jp
add
ja
out
in
push
inc
scas
lcall
add
sub
lahf
or
je
inc
mov
out
in
lea
inc
xor
scas
jecxz
cmp
rorl
imul
cs
push
inc
fstl
mov
inc
add
iret
mov
sahf
pop
sahf
jmp
sub
insl
lcall
mov
inc
sub
inc
add
addr16
add
add
add
filds
cmp
dec
add
das
lret
mov
test
and
int
mov
sar
sub
fldcw
dec
push
jmp
mov
and
cmpsl
sub
add
adcb
out
dec
sub
cmp
mov
mov
fxch
shll
les
test
cmp
shl
mov
pop
cmp
cwtl
mov
in
stos
pop
cmpsl
mov
andb
xchg
daa
mov
jo
test
pusha
push
push
test
popa
xchg
jns
fs
cmp
cmpsb
pushf
outsl
sbb
sbb
jg
outsb
pop
jecxz
sbb
cmp
xchg
and
push
fs
sub
clc
cwtl
xchg
xchg
pop
jb
dec
shll
nop
xor
cli
pusha
pop
popa
ret
cwtl
shr
ja
je
loopne
xchg
xchg
xchg
rclb
dec
add
shl
xchg
ret
lret
xchg
in
mov
incl
sar
adc
add
add
add
and
cltd
call
fsubs
sub
stc
out
lock
negb
pop
dec
jg
lcall
dec
push
movl
mov
jne
test
mov
out
sub
or
and
xchg
sarb
jno
rcrl
clc
dec
lcall
icebp
jp
mov
dec
pop
dec
inc
or
add
jno
sar
cld
mov
pop
idivb
cld
out
loopne
adc
sbb
outsl
mov
arpl
bnd
and
add
inc
ss
push
stos
je
or
leave
dec
mov
dec
sub
loope
icebp
addr16
dec
rol
jmp
movsbl
push
jp
outsl
fiadds
push
pop
mov
repz
arpl
lahf
popa
or
movsb
lods
jl
jle
push
shlb
mov
jecxz
test
jno
cli
insl
jns
out
ja
inc
mov
in
negl
sub
movsb
xchg
cmpl
add
cmc
sbb
sbb
xchg
fcmovnbe
jmp
dec
ret
daa
in
sbb
mov
jb
sub
mov
ret
jno
ret
sti
lock
mov
fwait
pop
cmp
shrb
sbb
dec
xor
es
inc
shrl
fiadds
call
fstl
pop
in
lock
add
popf
pop
and
lret
negb
aaa
imul
jmp
jnp
inc
rclb
arpl
inc
data16
aad
popa
push
faddl
xchg
and
scas
inc
leave
not
cmp
mov
rclb
xor
cs
push
pop
or
jnp
sbb
clc
arpl
scas
mov
pop
mov
mov
shll
lods
gs
xchg
or
mov
arpl
xor
or
fistpll
stc
dec
push
fdivrl
ljmp
mov
xor
jg
fcom
ljmp
xor
fdivs
mov
inc
fadds
mov
std
cs
or
jle
jo
es
inc
test
push
stos
or
call
aad
icebp
shl
scas
enter
push
xor
aam
bound
xor
subb
mov
popf
xchg
subb
loopne
out
aam
mov
push
lahf
fiadds
mov
dec
ja
mov
hlt
push
sbb
push
sub
adc
xor
repnz
push
mov
mov
pop
dec
das
popf
push
adc
mov
aaa
xchg
js
mov
pop
loop
mov
stos
js
inc
std
push
push
xor
jb
push
inc
gs
andl
shrb
inc
pop
sub
dec
mov
cmp
in
mov
or
lods
dec
add
add
add
adc
push
push
push
mov
stos
addr16
add
add
add
jp
inc
cmpsb
dec
dec
push
inc
fs
insb
cmp
popf
jge
inc
sub
dec
leave
xchg
in
adc
xchg
fstpl
rcrb
xchg
dec
pop
dec
jle
pop
add
dec
sub
notb
mov
push
push
sbb
sbb
sbb
ja
ret
mov
jae
cmp
cli
and
mov
icebp
aam
insb
lds
inc
add
push
cmp
mov
aam
inc
pop
jne
ja
add
mov
in
clc
rorb
pop
sahf
xchg
pop
les
sub
test
dec
inc
or
cmpsb
jae
ss
pop
mov
aaa
test
xchg
or
insl
xchg
cmp
push
rclb
xchg
clc
sub
dec
sbb
les
fistpll
roll
outsb
push
xchg
fs
jge
data16
xor
jae
add
add
add
repnz
add
pop
lcall
les
adc
jns
in
add
add
add
cmp
adc
out
in
pop
pop
inc
fmull
hlt
xor
imul
mov
into
pop
insl
mov
mov
movsb
iret
ret
sub
mov
inc
dec
mov
adc
xor
ljmp
outsb
push
and
dec
pushf
sbb
leave
sub
sbb
movsl
jae
push
sbb
and
mov
mov
xchg
mov
sbb
dec
clc
test
bound
lret
add
outsl
adc
dec
jmp
popf
in
pop
mov
and
mov
mov
mov
out
xchg
imul
pop
dec
imul
stc
add
ret
sub
push
mov
jge
mov
sbb
cmpsb
pop
ljmp
lahf
jbe
mov
add
jmp
in
imul
les
or
aad
mov
inc
xchg
movhps
dec
add
adc
add
pop
mov
push
decl
imul
ret
add
add
add
adcl
stos
mov
bound
cmpsl
cwtl
xchg
xchg
sti
inc
jbe
rorb
pop
jl
addr16
lahf
je
mov
into
test
mov
mulb
mov
clc
pusha
pop
adc
jnp
flds
push
clc
inc
fs
pop
pop
sbb
in
int
jae
aad
hlt
jp
sbb
jno
scas
call
hlt
mov
packssdw
leave
mov
les
jge
inc
int
push
ds
sbbb
into
pop
add
out
lock
mov
scas
fidivl
scas
dec
sti
into
cmp
or
inc
orb
dec
mov
repz
test
pusha
mov
loop
xchg
lods
sti
xor
jp
jae
xchg
xchg
inc
or
scas
push
xchg
mov
sub
cwtl
jp
lods
movsb
shrb
push
std
add
ret
dec
enter
add
add
jmp
in
push
sub
xor
add
add
add
cmp
pop
out
iret
ret
insl
negb
iret
into
cmp
xchg
cmp
out
push
push
lret
push
stc
js
shll
push
dec
test
xchg
adc
push
dec
fstl
call
enter
lret
pop
icebp
aad
inc
js
mov
xor
adc
mov
sub
scas
adc
shr
cld
adc
xchg
int
shl
mov
movsb
fisttpll
lret
ficompl
ret
enter
add
or
and
data16
or
nop
or
out
mov
jb
fisttpll
dec
ret
int
jmp
xor
mov
cld
ret
roll
out
inc
push
fs
or
cli
sahf
push
test
mov
jle
gs
sub
cmp
mov
arpl
mov
mov
jb
std
cmp
and
and
mov
lcall
out
add
add
add
jb
xlat
stos
and
hlt
andb
test
push
adc
inc
or
fwait
push
mov
jecxz
inc
lret
mov
aam
repnz
js
cmc
mov
fisubrs
ror
shrb
lock
pop
roll
lds
cld
xlat
adc
adc
cmpsl
inc
orl
sbb
movsb
shr
lds
stos
test
mov
jno
xor
add
jns
mov
sbb
imulb
out
mov
mov
push
dec
mov
xchg
clc
stos
pop
es
icebp
push
or
out
fsts
lcall
push
in
lahf
in
sub
cld
xchg
les
daa
add
xor
push
xchg
and
add
mov
sub
mov
fisttps
call
lret
pop
xor
dec
push
jns
movsb
pushf
ljmp
add
inc
ror
lock
jnp
xor
xchg
inc
or
add
add
add
test
jge
xor
mov
decl
gs
mov
dec
dec
dec
aas
into
pop
ljmp
ljmp
push
jns
pop
xchg
inc
add
adc
ja
arpl
mov
sub
outsb
mov
mov
dec
aad
add
movsl
mov
adc
xchg
push
repnz
xor
xchg
mov
or
or
mov
lahf
aad
jae
leave
repnz
or
nop
dec
sub
lds
arpl
pop
or
xchg
dec
mov
lcall
cmc
shrl
packssdw
mov
jmp
out
lods
jle
and
jbe
repz
js
lock
add
gs
push
arpl
mov
xor
jg
loopne
mov
cmp
fildl
jmp
repnz
pop
repnz
sub
outsb
or
enter
mov
add
and
repz
fisubs
aam
add
add
add
add
add
fcoms
and
pop
sbb
adc
leave
lret
bound
dec
lea
cmp
pop
paddd
mov
or
leave
adc
jbe,pn
shll
andb
cmp
frstor
gs
roll
fwait
xor
loopne
push
pushl
out
movsb
into
std
dec
inc
mov
ljmp
push
pop
pushf
pop
mov
clc
jmp
lcall
push
stos
jecxz
push
notl
push
cmp
jbe
cld
repz
inc
mov
push
int3
mov
or
call
xor
adc
sbb
cwtl
out
addr16
lret
mov
es
and
push
xchg
imul
sub
pop
popf
push
aaa
jmp
xchg
sbb
sbb
leave
mov
or
jmp
mov
outsb
shrb
in
fldl
and
out
jnp
ljmp
add
out
sbb
cmpsb
cwtl
sbb
add
add
loope
or
xchg
cmc
mov
cli
daa
mov
sbb
dec
hlt
dec
adc
sbb
mov
sbb
mov
pop
jecxz
mov
das
andb
pop
pop
loope
add
mov
rol
pop
mov
in
lods
and
into
in
cmc
mov
test
mov
movsb
scas
insb
sahf
sahf
xor
arpl
xchg
pop
insl
xchg
push
scas
cmpsb
ficoml
ficompl
ret
pop
test
mov
mov
jle
fmulp
mov
push
sahf
lods
jle
test
mov
push
dec
insb
sbb
rol
aas
jns
push
lods
and
mov
or
outsl
cltd
call
sub
xor
or
decb
imul
fildll
push
xor
lret
daa
stos
popl
loopne
inc
cwtl
push
fisttps
jbe
mov
add
jmp
sub
add
scas
push
repz
cmc
scas
sub
mov
repz
add
add
and
mov
mov
es
sub
mov
fwait
mov
cmp
sbb
push
stos
call
xchg
push
stc
leave
in
xchg
es
jecxz
sahf
fists
mov
xor
add
aam
lods
sub
fistps
or
cld
jae
inc
or
mul
mov
mov
inc
dec
jge
xchg
cmp
insb
dec
xor
mov
xchg
jp
cmp
push
sub
push
lock
jns
das
mov
icebp
xor
mov
inc
cmp
mov
or
inc
lds
jl
repz
jg
sbb
xchg
mov
hlt
fildll
or
pop
push
rcll
mov
std
fisubs
repnz
mov
addl
adc
push
or
pop
addr16
bound
fsubrs
add
jecxz
lret
pusha
rorb
cmpsb
mov
jp
addr16
add
add
add
js
jo
loopne
test
aam
repnz
adc
xchg
fadds
dec
inc
adc
fwait
mov
xchg
mov
mov
out
add
pusha
loope
sub
sarb
cmpsb
lods
jo
pop
xchg
mov
cmp
pusha
cmp
adc
mov
adc
adc
sub
xor
mov
cli
xor
pop
jno
add
stos
mov
or
inc
jl
scas
stos
sub
nop
cmp
xchg
mov
cmp
xor
mov
mov
cmpsl
sub
daa
mov
mov
lahf
mov
jl
ffree
shlb
sbb
mov
lods
cmpsb
mov
xchg
mov
xchg
shl
das
loop
arpl
dec
lods
outsb
cmpsl
xlat
adc
ljmp
adc
sub
test
std
cmpsb
lds
jmp
jecxz
push
testl
mov
jae
cmc
add
add
add
push
pop
movl
cld
add
pop
sub
add
add
dec
call
cmp
mov
or
or
aas
repnz
icebp
mov
jb
dec
test
cli
daa
pop
jnp
popf
std
cmp
in
sbb
jbe
mov
pushf
frstor
add
mov
sub
nop
imul
xor
jns
test
xor
sahf
push
rcll
movsl
inc
addl
push
jle
lea
mov
jl
ret
stos
int
mov
dec
dec
or
dec
cmpsl
sub
jo
movsb
sbb
jmp
pop
add
cmpsl
mov
push
in
pushf
push
mov
ss
or
push
je
cli
add
xchg
xor
jp
pop
out
sbb
jbe
inc
dec
gs
push
shll
pop
mov
filds
sbb
lret
and
mov
aaa
mov
mov
repz
mov
and
daa
lahf
mov
pop
das
and
das
dec
testb
add
add
incb
push
clc
xchg
sti
push
or
ljmp
mov
enter
xor
fbstp
std
xor
adc
adc
push
ret
dec
nop
push
test
icebp
sub
jecxz
lds
dec
sbb
mov
push
pushf
mov
xchg
das
mov
jle
pop
push
push
pop
pop
lret
mov
divb
lret
stos
outsb
outsb
data16
lahf
std
jecxz
pop
enter
and
mov
loopw
and
stc
nop
cmp
inc
jmp
sahf
fs
addr16
and
aad
sbb
add
movsb
inc
imul
jno
pop
mov
inc
mov
cmpsl
xchg
cmpl
jne
mov
test
daa
pop
andl
xchg
jmp
lea
cld
call
mov
aas
xorl
inc
mov
add
add
fucomi
xor
pop
sbb
add
add
inc
dec
lods
dec
insl
push
rcll
mov
or
cmpsl
mov
mov
xor
and
xchg
xchg
add
fsubrl
or
mov
cmp
inc
push
push
sub
or
js
shll
fcoms
cmp
push
addr16
sub
or
jbe
mov
rcrl
or
dec
jge
imul
pop
add
imul
mov
shr
jae
push
mov
sbb
inc
add
jp
shrl
dec
lret
push
sbb
jae
aas
fsubr
daa
les
aam
xor
jbe
pop
aam
das
jae
pop
std
mov
cmc
int
cmc
movsb
push
pop
popf
xchg
dec
test
push
lcall
test
mov
mov
mov
mov
xchg
xchg
and
sti
shl
cmpsb
stos
pop
lods
jbe
push
inc
pop
jns
aas
loopne
sub
mov
add
add
add
push
das
scas
cltd
or
mov
jns
shl
mov
mov
stc
sbb
sahf
aam
mov
cmc
sbb
insl
cmp
fisubrl
in
or
stc
pop
fwait
push
xchg
push
adc
mov
dec
addl
push
les
inc
jbe
cmpsb
sahf
ret
lcall
pop
call
and
jecxz
cltd
js
adc
bound
cltd
dec
int
jg
fldenv
cmp
add
cli
push
rorl
mov
add
ret
add
push
in
fisttps
idivb
dec
lds
and
mov
adc
ja
fwait
cmp
adc
dec
mov
pop
insl
jae
xchg
pushf
sbb
dec
mov
mov
or
lea
xchg
int
sbb
ret
add
mov
movsl
dec
cmp
mov
cmp
cmp
mov
scas
dec
xor
pop
cmpsb
sbb
jnp
mov
xor
ja
addr16
add
add
add
dec
data16
sti
or
or
aad
imul
fildll
xchg
ret
das
pop
leave
lcall
jge
xchg
jmp
out
fdivr
enter
outsl
dec
aas
imul
ja
in
insl
push
jb
cmpsl
mov
adc
mov
cmp
imul
imul
xchg
pop
push
or
into
mov
push
jo
sbb
nop
push
test
and
add
mov
pop
xor
mov
rorl
cltd
jmp
pop
sub
insb
xchg
add
test
lock
cld
shrb
loop
mov
iret
popa
leave
sub
push
fldcw
xchg
cld
cld
mov
sub
jae
push
pop
adc
xchg
dec
hlt
jnp
int
dec
pop
dec
cmpl
lds
sub
ljmp
in
and
rolb
add
add
xlat
pop
xlat
jg
mov
or
addr16
add
add
add
nop
adc
repnz
rclb
out
cmp
xchg
adc
inc
lret
jns
sarb
xchg
xchg
leave
cmp
stos
xchg
movsl
jecxz
xchg
jmp
scas
mov
xchg
lods
or
mov
call
push
sub
mov
adc
mov
fildll
or
mov
mov
dec
fsubs
in
pop
mov
pop
sar
adc
repz
fwait
insl
cmpsb
and
xchg
sbb
sarl
sub
or
fs
and
sub
inc
neg
in
repz
mov
adc
fdivrp
add
addb
jmp
push
aas
stos
mov
cmpsl
jl
adc
pusha
mov
and
icebp
or
sub
lcall
outsl
add
xor
test
dec
not
mov
add
roll
push
xorl
outsb
mov
mov
push
mov
jmp
pop
insb
mov
add
xchg
mov
idivl
push
fsubr
addr16
add
add
add
jmp
jp
sti
or
adc
addb
lock
xchg
jmp
int
add
cmpsl
xor
pop
ljmp
mov
push
test
fimull
sub
cmc
mov
mov
imul
adc
or
mov
sbb
cmp
test
mov
ljmp
mov
dec
mov
adc
or
jnp
cmp
repnz
adc
pop
xchg
pop
dec
insl
mov
sub
jge
outsb
jge
outsb
dec
divb
mov
scas
xlat
mov
jno
bound
nop
mov
inc
push
sbbb
cs
sub
sbb
inc
inc
push
push
add
and
jbe
rcll
mov
pop
cmp
xor
scas
xor
or
sbb
mov
dec
sbb
or
mov
imul
and
test
mov
fiaddl
xchg
cld
or
add
add
add
lods
pop
or
inc
adc
sbb
mulb
sub
xlat
das
and
mov
cltd
push
cltd
jl
addb
mov
or
lock
bound
cs
adc
imul
sbb
lcall
mov
add
insl
inc
rorb
ret
cli
add
movsb
mov
loope
xor
mov
mov
js
or
call
dec
inc
mov
faddl
push
sub
jmp
mul
addr16
iret
ret
lock
fstl
push
sbb
dec
out
sahf
dec
or
shlb
push
sub
mov
jl
arpl
pop
in
fs
xchg
jmp
daa
jp
dec
mov
mov
aad
or
mov
rcll
push
imul
jbe
imul
stc
jle
cwtl
xor
fistpll
fwait
mov
jle
lret
jo
insl
cmc
out
push
mov
ret
xor
sbb
add
add
push
pop
push
jmp
rolb
xchg
xlat
addr16
add
add
add
and
sub
dec
inc
xchg
inc
in
aaa
xchg
push
pusha
sahf
out
push
lcall
shll
xor
jae
push
pop
jae
fcmovnb
adc
lods
leavew
jo
loope
mov
pop
sub
fidivrs
mov
sub
jne
and
jbe
pop
sub
ret
push
dec
or
push
xor
cs
out
imul
imul
mulb
insl
hlt
in
sub
ljmp
stos
dec
sarb
ret
lds
mov
icebp
mov
mov
inc
movsb
sahf
pop
cmp
out
cmp
dec
imul
test
jg
xor
stc
arpl
mov
mov
add
wrmsr
out
jl
adc
loope
mov
leave
stc
xchg
or
neg
loop
and
or
movsl
mov
cmp
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
push
in
sbb
add
add
add
push
arpl
push
and
iret
out
inc
mov
lds
mov
inc
repnz
test
xchg
sbbl
jge
mov
sub
push
adc
ret
cmp
aam
inc
sub
ss
cmp
xor
cmp
mulb
int3
cmp
insb
xchg
jg
test
inc
xchg
push
and
cmp
adc
or
iret
sub
jp
sbb
cli
out
sub
mov
call
rclb
imul
ja
scas
xor
pop
js
idiv
les
outsb
mov
dec
pop
jo
inc
xor
and
lahf
sub
add
ds
dec
test
push
dec
orl
xchg
xchg
mov
add
dec
xlat
pusha
mov
jecxz
mov
dec
out
cmpsb
and
mov
sahf
hlt
les
stc
mov
lock
and
clc
leave
push
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
ljmp
dec
xor
out
adc
aaa
fs
mov
xor
dec
jbe
lahf
nop
lcall
shl
lea
push
sahf
xor
mov
xchg
and
mov
dec
into
pop
xchg
sub
icebp
mov
mov
mov
cmpb
mov
negl
mov
addb
jl
stos
sbb
hlt
or
jae
cli
mov
mov
mov
lret
arpl
dec
ds
mov
jne
pushf
clc
jnp
cmc
shlb
and
rclb
lret
pop
test
xor
mov
or
jp
stos
fiaddl
sbb
ret
adc
jmp
out
cmp
add
dec
lods
mov
mov
leave
push
cmc
addr16
movsb
add
ficoms
shlb
xlat
add
mov
nop
test
aam
int
aaa
das
aam
mov
add
add
add
add
jle
lods
xchg
decl
sbb
cmp
test
mov
lret
mov
arpl
repnz
in
xchg
push
inc
cld
and
sbb
xchg
pusha
mov
dec
pop
add
mov
aas
call
xchg
loope
jnp
jno
outsb
test
mov
inc
aas
movsl
lahf
je
xchg
rcrl
sbb
pop
frstor
sti
loope
add
inc
shlb
jae
shl
shl
sbb
shll
fsubrp
mov
jmp
insl
jb
test
pop
pop
cli
and
mov
aas
mov
adc
pusha
aad
data16
mov
pop
add
push
out
testb
pop
jno
in
push
and
cs
icebp
jmp
mov
pop
stos
inc
mov
mov
add
pusha
icebp
cmp
test
bound
mov
and
imul
xchg
mov
movnti
push
pop
arpl
addr16
sub
adc
mov
add
add
add
cld
scas
jae
lcall
dec
mov
lods
sbb
inc
jnp
push
dec
arpl
cmpsl
das
insb
ds
scas
outsb
fmul
lret
fs
out
gs
mov
sbb
mov
push
cvtpi2ps
cmp
pop
sub
mov
test
fwait
shrl
loop
and
xcrypt-ofb
cmpsl
sub
outsl
pop
jl
sub
shlb
popf
cmp
bnd
mov
xor
test
aam
pop
loop
add
jmp
out
loope
cltd
jmp
cmp
sub
das
movsl
jnp
or
je
cmpsb
pushf
push
or
add
in
pushf
daa
sub
hlt
lahf
pop
lret
mov
add
popf
mov
inc
inc
scas
cmpsl
push
push
jbe
fisttpl
mov
std
pop
fistpl
popf
pop
rorl
mov
mov
pushf
cmp
sub
add
sarl
out
cmp
cmp
pushl
xchg
xor
push
xor
add
add
pop
or
bound
adc
xchg
cmp
sbb
or
pop
push
pop
ret
lret
jne,pn
fidivrs
fidivs
lcall
movsl
adc
mov
hlt
or
inc
ret
fwait
mov
ss
push
ret
fs
mov
les
jle
in
rcrb
mov
fdivl
shrl
movsb
inc
jo
movsb
int3
adc
rdpmc
ds
xchg
push
push
xchg
xor
mov
in
sub
data16
xor
xchg
lahf
xchg
sub
dec
add
pop
lea
sub
outsb
xlat
cmp
daa
push
sub
clc
lret
xor
adc
nop
inc
inc
sbb
adc
stos
push
imul
mov
pop
mov
mov
push
mov
pusha
stc
cmp
sahf
push
shrl
jmp
add
test
push
scas
mov
popa
repz
add
add
add
add
pop
lods
xchg
loopne
xor
push
mov
jns
xchg
mov
add
test
fildl
cmpl
xor
loop
hlt
int3
sub
and
xchg
push
int3
test
les
fnstenv
jno
ret
pop
adcb
inc
push
xor
adc
cmp
cmp
lock
gs
add
mov
inc
and
stc
cltd
cmp
aaa
aaa
push
pop
lea
push
cmpsl
gs
inc
mov
and
das
push
stc
push
sbb
fst
mov
push
movsb
cmp
shl
or
shl
dec
sub
or
and
xchg
and
inc
ret
dec
lret
cmp
iret
xor
jg
xchg
stos
mov
mov
insb
call
sbb
das
cs
adc
mov
xor
lds
push
xor
push
jno
or
sub
aaa
xchg
and
movsl
mov
mov
mov
cwtl
mov
add
add
adc
cmpsb
xor
mov
dec
mov
repz
in
scas
mov
dec
fsubrl
jne
pushf
pop
sub
sub
adc
inc
int3
popa
adcb
jge
cli
cwtl
mov
std
outsl
scas
jno
and
mov
hlt
mov
mov
ss
sbb
dec
mov
popa
or
fnstenv
arpl
mov
subb
into
sub
mov
mov
xchg
stos
xchg
std
aas
sbb
call
and
loopne
in
imul
xor
mov
mov
xchg
lods
push
mov
or
mov
das
cld
dec
sbb
xchg
in
daa
sbb
icebp
lock
mov
sti
push
inc
pop
mov
ja
sbb
ss
addr16
push
ljmp
inc
sar
inc
adc
fstps
xchg
xchg
push
sahf
fdivl
mov
testl
add
sub
pop
loopne
add
fs
test
push
testb
mov
fnstcw
or
push
jmp
jne
out
fs
pop
jge
in
pop
cmp
mov
sbb
fadds
pop
sbb
push
push
ror
xchg
cmp
jb
xchg
scas
fstp
sub
rcrl
lock
nop
xor
mov
iret
sarb
repnz
push
and
dec
xchg
outsb
cmc
sub
aad
adc
andl
jmp
test
xlat
jne
cmp
inc
out
int
aas
sti
imul
jp
and
test
aad
lret
cmc
sbb
aaa
mov
dec
aas
mov
inc
jmp
push
or
dec
xchg
test
mov
xchg
loop
addr16
pop
in
int3
mov
inc
stc
mov
mov
lods
imul
shl
push
pusha
addr16
add
add
add
pop
sbbl
jge
nop
inc
in
sahf
movsl
dec
pop
mov
jnp
repz
pop
cld
movsb
fisttpll
in
ss
jns
bound
loope
jno
add
test
iret
inc
jbe
std
and
into
out
js
mov
cmpsl
mov
rcl
xor
mov
pop
adc
xor
xchg
popa
push
pop
mov
pusha
rcr
pushf
dec
adc
jns
sbb
arpl
test
mov
mulb
xlat
mov
jb
fistpll
call
pop
mov
repz
mov
fidivrl
add
call
add
cld
push
or
add
les
add
lds
xchg
shr
mov
adc
stc
ds
sahf
mov
and
jge
xchg
add
push
das
out
lock
adc
pop
inc
dec
inc
sti
movsb
mov
xchg
sub
scas
or
cmp
int
mov
addr16
add
add
add
js
pop
push
es
dec
push
pop
xchg
out
jmp
mov
jae
inc
xchg
lods
xchg
xor
icebp
out
jne
xchg
adc
popa
lock
lcall
cmpsb
add
push
mov
and
int3
or
pop
ja
hlt
data16
cmp
dec
push
mov
flds
loope
leave
xor
cs
add
adc
repz
mov
rolb
fnsave
mov
clc
jne
scas
ja
lcall
fwait
adc
push
aaa
rcll
and
hlt
sarb
or
or
jecxz
data16
fwait
inc
aas
sbb
rorb
xorl
or
ja
push
mov
aad
dec
aad
das
push
shlb
dec
je
cld
cmp
sub
nop
sbbb
mov
nop
xor
pop
adc
pop
xchg
enter
push
fbld
imul
lods
or
add
add
add
dec
xchg
mov
fnstenv
loop
test
je
sbb
data16
mov
mov
mov
movl
sahf
push
push
cmpsb
cmc
inc
cmp
push
sub
cmc
adc
pusha
mov
outsb
sbb
mul
add
jge
push
clc
ss
sub
or
pop
movsl
mov
inc
mov
xor
sub
lcall
cmp
xor
mov
cmp
inc
jmp
xchg
sbb
pop
push
inc
out
xchg
push
in
mov
mov
inc
into
mov
mov
je
mov
nop
lret
xor
scas
cltd
std
inc
in
mov
rcr
andb
popf
mov
sahf
mov
adc
gs
or
pop
cmpsb
movsl
xchg
lret
ljmp
mov
into
fwait
add
mov
bound
add
add
add
dec
or
pop
cmp
pop
shlb
and
pop
lea
aaa
jmp
dec
ficomps
aas
ss
aas
sahf
sub
dec
sbb
mov
pop
mov
push
inc
mov
out
testl
pop
test
ret
cld
pop
pop
and
decl
or
out
or
das
inc
in
imul
or
mov
imul
mov
cmp
mov
in
inc
clc
aad
inc
into
inc
icebp
xlat
test
jecxz
mov
ficoml
rcrl
push
dec
dec
adcb
xchg
shlb
mov
mov
sub
out
mov
aaa
push
inc
sti
iret
jecxz
adc
cld
aaa
mov
popa
push
adc
xchg
test
arpl
neg
pop
frstor
mov
dec
jp
out
les
push
pusha
inc
movsb
push
mov
ss
push
jl
test
out
mov
pop
sarb
in
mov
add
add
add
dec
add
lds
test
ds
mov
ja
pop
xchg
mov
aad
inc
mov
jl
scas
mov
pop
or
lahf
cmp
lcall
lret
sub
lret
xchg
xor
or
lahf
mov
inc
insl
subb
xor
push
cmc
push
in
pop
inc
xor
xchg
popl
xchg
fdivr
popa
repnz
testb
leave
sub
cwtl
inc
out
dec
mov
fidivl
mov
pop
repz
je
or
bound
or
push
out
dec
mov
push
mov
loope
ret
adc
lods
mov
dec
pop
lahf
fbld
mov
int
dec
out
add
cmp
add
jg
sarl
push
inc
jb
and
sti
adc
fidivrs
cwtl
jae
mov
push
jle
sub
test
std
jle
popa
jns
or
sti
inc
out
aas
mov
shrb
mov
movsb
or
add
add
add
adc
int
popa
pop
pop
jl
xor
out
inc
imul
add
dec
cmp
sub
jge
xor
in
popl
push
add
or
xchg
push
add
xor
iret
rcr
push
xchg
iret
jmp
ljmp
cmp
movsb
ja
xchg
cwtl
xchg
xchg
jl
push
or
aaa
shll
in
lret
addr16
cmc
repz
cs
lods
sub
out
xchg
jbe
lea
mov
adc
pushf
repnz
dec
xor
jo
jbe
push
imul
xchg
movsl
outsb
mov
add
cmp
push
sub
test
mov
ficoml
xor
test
aad
pop
iret
repz
aaa
mov
test
push
sub
sbb
cmpl
pop
mov
jbe
stos
jb
push
pop
xchg
jno
xor
lcall
loop
inc
loope
insb
or
push
bnd
dec
leave
and
lret
addr16
add
add
add
or
xchg
cwtl
test
jecxz
xchg
and
loope
into
jle
mov
cmp
lea
lahf
jbe
popf
aaa
and
push
mov
push
fdiv
les
mov
sub
add
xlat
sbb
movsl
push
out
xchg
pop
xchg
pushf
mov
mov
mov
ss
das
pop
in
test
in
jge
push
pop
pushf
lds
jle
ret
outsb
into
xlat
jo
pop
xchg
mov
cmpsb
jo
jle
push
sub
les
mov
inc
idivl
mov
clc
mov
jp
out
ja
cmp
mov
in
pop
mov
imul
inc
cwtl
lods
ljmp
mov
or
ret
int3
cmp
adc
cmp
mov
adc
addr16
push
nop
aas
inc
js
sti
mov
mov
mov
outsb
loope
cmc
push
imul
jmp
into
imull
push
inc
mov
mov
sbb
in
out
ja
filds
repz
or
add
push
fwait
xor
aaa
pop
adcb
out
push
pop
jl
sub
and
lods
stos
leave
mov
icebp
or
mov
push
jmp
icebp
mov
sbb
movsl
int
pop
adc
rclb
xor
or
jg
int
movsb
mov
scas
fistl
xor
push
sti
inc
movsl
xchg
aad
imul
cld
mov
sahf
outsb
stc
jb
jno
lahf
or
mov
jge
popa
inc
sub
aaa
outsb
out
pop
nop
or
xchg
mov
xchg
inc
pop
mov
xor
dec
cs
ds
fnstcw
popa
cld
pop
mov
or
icebp
xchg
or
in
xchg
mov
xor
push
enter
subb
inc
roll
inc
fnstsw
sbb
imul
out
addr16
scas
test
in
inc
push
or
addl
add
or
sahf
lret
jns
and
add
lods
and
in
jg
jns
cmp
dec
inc
mov
jae
jns
or
pop
ficoml
add
in
xor
outsb
push
sbb
dec
into
sbb
jnp
xor
scas
out
notl
add
sbb
dec
and
aaa
and
xchg
xchg
mov
or
jnp
js
cmp
push
or
fnstcw
jb
mov
mov
imul
adc
cmp
sub
pop
sub
mov
jnp
fs
psubw
push
adc
add
or
xor
cmp
pusha
jb
dec
sub
or
popf
and
pop
js
lds
mov
mov
add
out
pop
ds
add
jecxz
repz
ror
mov
pop
add
push
mov
jg
neg
pop
daa
inc
push
pop
and
add
add
push
lods
roll
adc
mov
shll
and
mov
and
xchg
movsb
or
push
sub
data16
sbb
lcall
push
or
ljmp
and
or
in
int
xor
mov
adc
pop
sbb
dec
or
and
or
inc
sub
cmp
and
pop
idivl
pop
int
out
sub
cmp
adc
push
lcall
lods
xchg
sbb
push
out
lea
adc
mov
in
fnsave
punpckldq
sbb
push
fstpt
insl
or
mov
push
lcall
fdivrl
mov
sahf
xchg
mov
add
clc
test
nop
arpl
dec
mov
mov
fldl
in
pop
xlat
dec
pop
pop
hlt
adc
add
add
cmp
sti
jg
cmp
je
jnp
int
adc
add
add
add
stc
or
repnz
lds
popa
jle
hlt
push
jns
jecxz
fs
jecxz
shlb
push
pop
jbe
pusha
and
daa
mull
jge
mov
je
into
jp
ret
rcrl
lret
sbb
faddl
pop
xor
shll
push
pop
lcall
add
mov
adc
dec
scas
fstps
sti
push
inc
dec
cli
rcll
pop
fldl
mov
xchg
popf
cmc
add
ror
into
mov
adc
leave
push
xor
fidivs
push
xor
inc
pop
lods
mov
fs
test
popa
jl
icebp
addr16
xchg
pop
jg
cmpsl
cmp
es
mov
scas
push
fsubs
lret
sub
sti
fsubrs
scas
jle
pop
out
cwtl
xor
mov
mov
mov
lret
pop
xor
jo
stc
cmp
or
loopne
add
add
jnp
fstp
fcompl
rclb
adc
add
add
add
leave
and
jne
xor
lret
xchg
daa
movsb
push
xor
lock
lods
lock
mov
mov
jmp
lahf
adc
ret
std
and
add
or
push
das
mov
icebp
faddp
in
cmp
icebp
xor
inc
lgs
mov
pavgb
push
sub
lcall
movsl
lcall
imul
cltd
pop
dec
mov
ret
pop
cmp
mov
sub
pop
cwtd
cmp
mov
adc
adc
xor
push
sarb
dec
fmul
mov
loop
mov
mov
lods
ljmp
pop
add
pop
push
out
mov
push
test
mov
mov
jo
pop
filds
sub
mov
pusha
leave
jecxz
push
push
sbb
dec
cli
shrl
mov
jno
std
outsl
mov
add
jb
push
add
add
push
jle
nop
mov
shrl
cmp
inc
lods
je
adc
shlb
cmpsb
loop
add
dec
jecxz
mov
iret
mov
sub
mov
push
pop
adc
sub
movsl
mov
adc
cwtl
popf
sti
gs
out
dec
pop
push
aaa
mov
inc
cltd
out
in
idivb
insb
fs
sbb
lret
dec
pop
push
test
dec
xor
rorb
add
adc
xchg
inc
dec
or
roll
nop
jae
lret
xor
mov
divb
adc
pusha
outsb
xchg
lea
cwtl
xor
xor
hlt
pushf
inc
jnp
cld
inc
cld
inc
cwtl
mov
imul
mov
jle
cmp
lock
xchg
ret
mov
pop
dec
mov
adc
lret
sbb
pop
cmp
fmulp
jecxz
sub
sbbb
loope
jmp
fstpl
xor
adc
add
add
add
push
push
cs
imul
sub
and
pop
out
push
push
cmp
pop
fldl
inc
into
call
bound
stos
les
push
jl
ret
and
mov
push
jg
stos
fnstsw
fwait
addl
dec
cmp
jle
jp
fsubl
jns
imul
push
mov
jl
jb
aam
or
push
jp
dec
push
aaa
xchg
les
lea
jno
mov
pop
popa
jecxz
shll
loop
pop
inc
lea
push
pusha
mov
test
xchg
lea
cmpsl
cmp
jp
in
ds
out
cmp
adc
insl
mov
or
add
jle
jecxz
and
repnz
testb
js
daa
in
mov
pop
rcll
fmuls
sbb
adc
movsb
inc
pop
cwtl
xor
mov
lret
pop
movb
add
xor
xchg
lds
rcll
int
adc
add
add
add
mov
sub
xchg
mov
dec
cmp
jne
jb
mov
xor
sbb
daa
int3
ret
xor
test
xchg
mov
lcall
push
sub
inc
bound
sub
sti
pop
mov
cmp
add
and
xchg
iret
push
out
test
inc
xor
cmp
mov
lahf
ffreep
jae
xchg
mov
iret
outsb
push
je
jmp
push
cmovno
testl
jp
pop
xchg
mov
sub
mov
lret
add
jno
mov
mov
inc
shl
testb
mov
stc
sti
xchg
sub
mov
pop
stos
sub
hlt
adc
movsl
int
mov
aad
into
or
jg
inc
mov
stos
int
clc
and
dec
jns
fistps
push
inc
inc
jo
addl
jg
cs
sub
pop
call
add
dec
cli
inc
jg
int
xchg
lods
or
mov
cmp
add
add
xchg
lods
fs
sub
cli
mov
mov
pop
sub
or
aas
aam
pop
call
lods
mov
repz
pop
icebp
das
cmc
lahf
test
enter
and
loop
lcall
pop
ljmp
xchg
rclb
insb
adc
testb
xor
lods
sahf
mov
mov
push
pop
mov
mov
mov
popa
lods
push
fs
js
nop
test
fwait
mov
fs
cli
int3
repz
sbb
sti
mov
insl
pop
mov
jbe
mov
icebp
mov
fisubrl
out
and
and
mov
jge
lods
and
into
push
es
jo
sahf
les
fs
add
out
cli
push
bswap
dec
das
int
mulb
into
lcall
jae
mov
add
add
xchg
std
cmp
jle
fistpll
fisubrl
push
add
add
add
push
jl
sub
adcb
pusha
xchg
insl
dec
inc
mov
shrb
adc
shl
push
pop
and
es
dec
xchg
ret
sti
insl
add
int3
aaa
stos
cld
cmp
cwtl
pop
jae
pop
daa
pop
bound
inc
xor
jb
fistl
movsb
cltd
mov
cmp
xor
es
cmp
inc
xlat
fcomps
sti
enter
ficoml
fisubrl
push
rorl
imul
mov
filds
test
icebp
mov
dec
fsubrl
cmp
push
mov
sub
or
ret
movsl
xchg
mov
scas
fstp
nop
shrb
adc
nop
or
shll
stc
ficoml
push
jo
jae
pop
mov
add
jg
dec
xchg
cli
jmp
dec
fwait
jmp
pop
xor
lock
cmp
cmc
push
mov
push
std
popa
test
add
add
iret
xlat
ficompl
inc
jno
fstpl
add
add
push
mov
sahf
fwait
mov
jnp
cmpsw
mov
cmp
fisubrl
mov
push
mov
inc
pop
mov
mov
in
in
add
scas
push
adc
dec
dec
mov
and
mov
paddq
leave
insb
aam
pop
les
test
fdivr
push
scas
test
inc
add
cmpsb
in
xchg
mov
add
mov
mov
mov
or
stc
pop
adc
pop
jge
jmp
es
sbb
iret
mov
cmp
xchg
adc
int3
js
sub
pop
arpl
aam
and
push
xor
or
cmp
adc
sbb
out
mov
mov
aaa
mov
int3
lods
and
jp
ja
push
fistpl
inc
rcrl
inc
pop
fisubrl
test
jl
cmpsb
sbb
or
dec
jmp
dec
scas
iret
outsb
jmp
push
test
and
add
add
add
int
sbb
sbb
subb
test
or
xchg
mov
std
sub
mov
xchg
subb
xchg
sti
loop
es
ret
xchg
adc
popf
out
mov
cmp
mov
stc
add
adc
ss
jmp
in
enter
into
xchg
mov
cmp
je
mov
push
ja
mov
jnp
clc
mov
mov
sub
loope
mov
push
arpl
aam
adc
loop
data16
mov
fdivp
mov
aas
sahf
xchg
fnsave
lret
mov
js
xor
into
inc
fidivrl
inc
xchg
jg
xchg
data16
add
sub
sub
fs
movsb
adc
xchg
cmp
add
std
sbb
stc
cld
or
mov
out
push
sbb
add
add
add
dec
daa
lahf
push
fadds
out
cld
jno
sub
or
lea
mov
push
push
adcl
es
xchg
push
aas
or
pop
fnstsw
pop
push
mov
add
mov
and
mov
xchg
dec
nop
sbb
add
adc
push
daa
clc
js
je
push
sti
xor
sub
leave
and
aam
mov
cmp
je
xor
test
aas
jnp
adc
jg
mov
adc
mov
add
lods
push
ljmp
push
ja
push
lret
mov
cmp
and
sbbl
dec
shll
mov
outsb
lcall
inc
mov
adc
dec
scas
ret
std
out
add
dec
mov
xor
mov
rclb
or
std
and
imul
cmp
and
mov
lahf
sbb
rcll
xor
negl
adc
pop
xchg
cmpsb
scas
cli
out
or
add
add
and
add
jecxz
mov
adc
lahf
and
and
sbb
pop
mov
cmp
out
dec
and
sbb
outsb
adc
lods
pusha
fucomp
das
mov
mov
adc
push
dec
xchg
mov
xchg
mov
dec
imul
das
ljmp
arpl
ret
cmp
pop
popf
dec
xor
add
aad
sbb
sub
and
cltd
cmp
iret
in
lahf
xchg
pop
cli
in
das
pushf
mov
cmpsl
pusha
sub
adcl
sahf
add
fnstenv
addr16
cs
loope
in
fldenv
enter
cmp
push
sbb
sbb
jmp
mov
mov
repz
call
sahf
jge
mov
je
push
push
or
int3
inc
icebp
adc
daa
mov
add
mov
dec
pushl
lods
mov
fbld
add
add
add
stos
jo
cmp
mov
cmp
int3
inc
mov
xor
jp
sbb
jno
jb
lret
mov
jg
mov
xchg
sub
push
repnz
mov
stc
outsl
adc
xor
mov
imul
rcrl
or
push
hlt
add
xchg
cmp
jecxz
ljmp
fdivs
std
imul
movsb
shll
lcall
sub
inc
mov
push
adc
ret
movsb
push
add
addl
adc
dec
fisubl
inc
mov
sbb
xlat
push
cmp
fidivrs
adc
cmp
sub
mov
ret
inc
mull
inc
and
iret
sub
cmp
xor
dec
mov
enter
lea
stc
lcall
push
insb
ret
cltd
pop
out
or
pop
sub
inc
ja
pop
aas
dec
push
aam
addr16
add
add
add
pop
test
icebp
inc
inc
mov
cmp
sub
ret
push
in
or
out
in
aad
inc
jns
ret
test
xor
idivb
mov
jae
pop
clc
pop
jp
adc
adc
out
mov
pop
cmp
scas
cmp
out
cli
repnz
xchg
and
cs
fcoms
scas
int
imul
nop
cmp
cwtl
arpl
mov
jl
cli
push
dec
push
and
jnp
inc
imul
inc
shl
mov
xor
mov
std
int3
insl
pop
mov
push
sti
cmpsl
in
pop
loope
jo
aad
inc
adc
in
xlat
mov
stc
das
in
aaa
xchg
insb
pop
clc
mov
cmp
enter
outsb
daa
push
mov
inc
je
aas
mov
inc
add
loope
psubusw
sahf
add
arpl
adc
insb
dec
and
mov
je
dec
aad
aas
xchg
popa
arpl
add
add
xchg
jae
ja
div
mov
sbb
sbb
add
repz
in
stos
data16
pushf
call
iret
bound
pop
aaa
fistpl
xchg
jp
xor
std
hlt
shlb
push
imul
mov
or
pop
jg
and
cmp
inc
in
lcall
orl
and
inc
test
dec
leave
je
data16
sbb
mov
lods
push
sub
fsubrp
inc
aad
pop
test
pop
or
jecxz
jns
mov
cmp
insb
aad
mov
ja
adc
mov
js
jmp
inc
push
nop
xchg
popf
arpl
push
aas
push
arpl
mov
xor
in
clc
xchg
pop
xchg
ret
lcall
mov
ret
pop
mov
scas
ret
mov
sbb
inc
pop
pop
pop
pop
fwait
dec
pusha
insl
pop
mov
xor
cli
std
jg
push
pushf
dec
int
dec
xchg
addr16
add
add
add
outsb
xchg
cli
xchg
test
out
xchg
mov
sbb
adc
es
jmp
clc
cmpsl
lock
mov
incb
jmp
cmp
outsb
mov
mov
and
push
xlat
jl
lea
fwait
cmpl
mov
in
lods
scas
dec
std
stos
push
fstl
clc
mov
push
es
std
mov
mov
sarl
aas
jo
cmovno
xchg
sub
cmp
cmpsb
aad
cmp
aad
imul
es
icebp
sbb
jo
jmp
inc
cmp
sbb
xchg
lods
pop
in
dec
ja
dec
in
lret
fs
in
pop
mov
js
jne
pop
xchg
jmp
shrl
fidivl
cmpsl
loope
into
nop
add
into
pop
and
sbb
aas
sbb
add
xor
sbb
xchg
inc
stos
or
loop
out
or
add
add
add
mov
std
incl
sbb
insl
mov
jge
pop
add
add
add
mov
imul
fs
sbb
pop
xchg
loope
aaa
scas
hlt
dec
outsb
jbe
scas
xchg
sbb
dec
dec
in
call
push
out
mov
jmp
cli
lods
and
add
arpl
es
pmulhw
push
les
inc
mov
mov
cwtl
stos
jge
jp
test
rol
adc
mov
pop
mov
mov
push
aad
call
les
cld
xchg
and
add
scas
sbb
lea
or
xchg
sbb
lds
push
xchg
popa
push
sub
cmc
jmp
lret
ret
loop
into
xor
xchg
add
scas
mov
and
jne
nop
rorb
mov
pop
gs
adc
cmc
fisubrs
sbb
lahf
les
xor
xor
add
mov
aam
mov
mov
je
movsl
mov
xlat
xchg
add
add
es
jg
pop
or
xor
mov
add
add
add
inc
sbb
push
int3
or
lcall
ret
js
int3
mov
cld
dec
xor
insb
addl
jecxz
mov
sbb
nop
les
ret
int
pop
lea
mov
adc
in
push
out
adcb
and
fiadds
xchg
lock
and
mov
lea
popf
sbb
clc
pop
mov
add
adc
xchg
xor
lock
mov
repnz
stos
pushf
hlt
fidivrl
push
insl
fsub
sub
movsb
mov
lods
pop
push
pop
xchg
shrb
xchg
mov
dec
cltd
in
cmp
sub
orl
jae
inc
and
mov
cmp
shrl
jne
scas
sbb
sbb
xchg
xchg
popf
nop
inc
jmp
lahf
ja
ja
cmp
stos
mov
insb
jae
mov
fs
or
inc
in
enter
test
add
add
add
or
dec
push
cmp
and
add
add
add
push
jns
inc
lds
outsb
xchg
mov
adc
push
jecxz
sbb
stos
push
adc
ficoml
rclb
ds
daa
out
add
loopne
push
lret
sar
lock
mov
pop
sbb
cmp
out
in
loop
cs
jl
pop
rclb
add
jae
movsl
jbe
xor
add
std
repz
orb
lods
outsb
popa
mov
cltd
hlt
pop
out
lock
notl
std
pop
and
xchg
or
xchg
js
fs
adc
mov
rcl
adc
notb
das
popf
cltd
dec
mov
incl
mov
or
push
and
ficoml
into
scas
pop
ret
sub
pop
xchg
xchg
dec
xchg
push
jnp
dec
mov
mov
out
push
insl
pop
add
mov
cli
pop
inc
aam
jg
fwait
jl
in
scas
xchg
repnz
sub
xor
mov
pop
mov
add
add
add
loopne
jecxz
inc
mov
rcrl
aam
arpl
sbb
lret
pop
and
dec
movsl
les
mov
stos
push
pop
xor
mov
cwtl
jp
in
cmp
xchg
add
jecxz
jbe
mov
nop
aaa
mov
mov
rorb
mov
jle
mov
ret
xor
sub
iret
pop
or
into
mov
add
inc
outsl
aam
imul
addb
data16
rcrl
addr16
push
add
dec
push
sbbb
xchg
mov
je
mov
negb
fcompl
cmp
out
jb
bound
cmpsb
push
mov
jno
jmp
jle
add
or
sub
inc
cwtl
cli
stc
mov
inc
jmp
mov
mov
mov
rcr
pop
aas
arpl
ljmp
jle
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
sub
pop
cmp
das
push
out
into
sub
ja
andl
adc
je
mov
sbb
cmp
lahf
in
aad
push
into
sub
imul
add
push
mov
cmpsl
roll
insl
pop
test
add
adc
je
psrlw
out
rorb
ret
add
stos
dec
dec
das
sbb
out
xor
and
daa
cmpsb
push
into
ss
mov
dec
mov
lcall
jns
or
test
mov
xchg
mov
jl
out
pop
sbb
aam
cs
cmp
jnp
mov
sar
pop
sbb
in
shlb
push
xor
shrl
cmp
sbb
and
push
jg
jg
adc
in
cmp
xor
jo
outsb
mov
imul
aas
into
inc
aas
outsl
mov
cmpsb
pop
outsl
or
in
mov
jo
xor
test
add
add
in
out
stos
jge
or
push
addr16
add
add
add
dec
mov
cmp
sbb
sbb
xchg
xor
lods
loop
jp
shl
out
sbb
test
or
xor
orl
pop
jmp
pop
xor
scas
push
pop
cmp
nop
lcall
or
iret
add
jno
rcr
add
sbb
stos
dec
mov
ljmp
enter
sbb
sub
popa
push
jecxz
clc
scas
mov
mov
jnp
pop
push
mov
mov
lret
mov
mov
xchg
jae
push
out
inc
mov
mov
xchg
scas
push
rolb
dec
add
loopne
js
xchg
fadds
push
cli
loope
fisttps
inc
rclb
fisubl
xor
xchg
les
xchg
data16
mov
insl
cmp
dec
cld
int
push
cmp
insl
xor
jo
scas
mov
aad
rolb
add
sbb
out
xchg
iret
push
aas
sbb
addr16
add
cmp
sub
mov
jecxz
cli
ss
shlb
sbb
push
aam
mov
xchg
pop
mov
sbb
in
aas
mov
int3
out
int3
cwtl
gs
fwait
lds
loopne
scas
xchg
cwtl
fiaddl
sub
out
add
inc
mov
pop
xchg
cmp
iret
jmp
scas
sbb
mov
int
mov
rclb
mov
jmp
sbb
repnz
js
cmp
push
jns
les
inc
cmp
jl
push
inc
lds
and
loopne
jns
out
lods
repz
fisubl
sahf
enter
cld
pop
dec
or
jno
adcb
jg
leave
jb
jmp
loope
pop
jg
push
mov
ljmp
add
sub
frstor
adc
into
call
and
mov
bound
js
and
enter
into
les
add
add
in
add
cmp
out
loope
jns
dec
scas
lods
add
add
add
pop
lret
xorb
repz
pop
test
dec
xor
les
jmp
jecxz
ret
sub
lret
mov
icebp
insl
mov
lret
dec
push
xor
int
insl
cld
mov
scas
lea
faddl
lea
daa
sub
cwtl
push
sub
pop
add
cmpsl
mov
add
je
orl
fs
mov
ret
push
cmp
in
adc
dec
mov
xor
repnz
scas
push
push
nop
fsts
and
scas
addr16
lds
leave
fildl
fstps
pop
out
clc
push
and
lret
xchg
jnp
divb
jl
push
scas
fwait
add
outsb
cltd
adc
push
jno
insb
scas
add
aas
test
movsl
repz
icebp
mov
dec
decb
cs
mov
add
dec
mov
xor
nop
pop
test
sbb
sti
push
mov
cmp
imul
add
add
add
mov
push
or
pop
sbb
jg
mov
jno
jmp
arpl
rorb
push
mov
jae
dec
fwait
fwait
xchg
xchg
sbb
cmp
push
addl
sub
in
sbb
popa
pop
cmp
xor
inc
xor
mov
dec
pop
sbb
adc
jl
cs
and
imulb
mov
dec
jecxz
dec
jecxz
popf
mov
sbb
pop
adc
cmpsb
testl
jnp
mov
push
loope
jp
mov
call
enter
icebp
cmp
add
add
loope
pop
dec
enter
push
dec
sbb
out
pushl
push
jo
adc
div
sahf
jp
hlt
andb
push
cmp
iret
sbb
ret
adc
push
mov
bound
mov
add
or
or
outsb
inc
add
add
add
jg
cld
ret
add
rcl
stc
sub
add
add
add
mov
fcompl
std
ss
scas
inc
pop
xor
ret
out
fs
dec
mov
mov
mov
icebp
sbb
fwait
aas
mov
mov
inc
lods
xor
shll
adcl
push
ja
xchg
imull
and
fmull
movsb
cmp
repz
adc
in
inc
xchg
js
cmc
jl
jns
add
or
ror
lahf
jl
dec
mov
dec
aaa
cmpsl
data16
imul
loop
xor
inc
sbb
fidivs
xor
mov
test
aam
and
loope
fwait
jae
icebp
test
ja
int
insb
mov
cmp
jl
push
xor
test
jno
insb
push
imul
cli
pop
push
pop
inc
inc
out
mov
sub
cmp
mov
sbb
ret
mov
iret
mov
mov
inc
sub
add
add
add
adc
loop
in
mov
push
fcmovu
test
popf
daa
inc
and
push
lret
les
sbb
lea
lcall
mov
mov
add
rol
es
push
outsl
jo
pop
cmp
mull
outsb
cmp
int3
arpl
dec
sarl
jns
sbbl
mov
xlat
loope
push
mov
inc
loopne
insl
push
xor
dec
repnz
stos
mov
lahf
ja
mov
and
shrl
call
into
dec
in
mov
enter
inc
sbb
and
push
mov
inc
jne
testl
dec
aas
mov
mov
fmulp
test
lret
repnz
mov
arpl
add
test
xor
hlt
xchg
dec
shlb
mov
jbe
and
jl
iret
test
push
add
add
or
jg
arpl
jmp
das
sub
add
add
add
cmp
dec
cmp
xorl
inc
mov
push
pop
cmp
loop
add
mov
call
ja
lcall
add
mov
mov
shlb
add
pop
mov
jmp
pop
fisubrs
in
mov
push
fwait
xchg
outsl
xchg
testl
aad
mov
jmp
lock
jmp
cltd
imul
pop
dec
int3
and
int
lea
mov
add
jae
or
cmpsw
sahf
lods
sbb
cmp
iret
popf
add
fcomp
jle
bound
and
add
sarb
mov
xlat
push
sahf
cwtl
inc
ret
clc
jge
hlt
pop
and
push
aad
add
jge
outsb
or
or
insb
xchg
jno
sub
pushf
daa
mov
push
jae
enter
cmpsl
pop
jge
stc
ret
ss
aaa
out
mov
mov
add
add
xor
clc
cli
clc
sarb
sti
mov
das
pop
sub
add
add
add
mov
test
dec
xchg
mov
shrl
test
xchg
dec
inc
dec
arpl
or
stc
jno
jp
int3
shrl
dec
mov
push
insl
es
sbb
mulb
int
divb
pop
outsb
mov
dec
cmp
mov
js
call
popa
inc
xor
mov
lods
or
and
inc
in
or
xchg
pop
lret
and
test
cmp
aaa
and
xlat
test
loopne
movsl
push
maxps
pop
sub
cmp
adc
cmp
cmp
and
xchg
dec
fwait
xor
lret
jl
adc
loopne,pn
add
mov
sbb
in
aam
pop
jne
iret
and
mov
and
mov
cltd
insb
jnp
addr16
ror
mov
cmpsl
or
push
xlat
jb
sbb
ficoms
push
dec
push
je
dec
test
imul
mov
mov
add
add
add
and
icebp
bound
mov
sarb
jb
pop
mov
test
int3
add
std
in
mov
pop
add
jl
hlt
xor
dec
xor
xchg
testl
cwtl
pop
shrb
xor
jge
add
mov
mulb
pop
cltd
cmpsl
loopne
cltd
lea
nop
xor
pusha
pop
insl
xchg
inc
pop
scas
stos
pushf
pushf
mov
jmp
mov
push
fbld
gs
mov
std
push
push
pop
fstp
xchg
and
xchg
cli
add
gs
cli
adc
movsb
sbb
fsub
sbb
les
inc
inc
shlb
out
into
inc
mov
es
sbb
in
push
repnz
mov
mov
sahf
or
inc
outsl
adc
inc
lcall
mov
mov
sbb
popa
orb
cwtl
dec
fldenv
xchg
xor
xchg
int3
xor
add
add
es
data16
insb
daa
mov
jle
push
out
addr16
add
movsb
jno
push
xlat
xchg
mov
sbb
cmp
inc
inc
push
addl
roll
into
sbb
shlb
add
pop
jo
mov
ljmp
inc
lds
int3
addr16
lahf
cli
incl
mov
jp
mov
push
pop
int
filds
fwait
push
pop
mov
add
sbb
and
pop
mov
outsl
push
push
mov
and
push
xchg
outsl
adc
push
cli
jp,pn
movl
pop
setns
push
push
aam
roll
xchg
inc
cltd
imul
jle
xor
mov
stos
jns
and
icebp
jge
jne
shl
test
rcll
cs
mov
lahf
push
andb
iret
lahf
xor
nop
xchg
dec
jecxz
loop
jge
dec
dec
clc
xor
lret
xchg
pushf
sti
jmp
pushf
jb
add
add
dec
mov
imul
cmp
add
add
add
mov
in
repz
or
lret
mov
sub
in
test
aam
jp
icebp
sub
out
push
xor
mov
dec
sarl
pop
adc
sbb
imul
push
xchg
fadd
stos
xchg
push
dec
jmp
mov
jo
cwtl
lds
icebp
insb
out
mov
insl
call
push
loope
outsl
or
xor
mov
stos
leave
cmp
xchg
inc
pop
mov
lds
mov
adcb
sub
arpl
inc
mov
lods
call
and
xchg
pop
jne
jo
scas
inc
jp
or
inc
repz
cmp
mov
mov
mov
cs
out
mov
dec
addr16
rcll
mov
mov
xchg
mov
inc
inc
sub
adc
test
iret
repz
int
or
add
add
repz
push
sti
cmpsl
enter
mov
sbb
add
add
add
popf
lret
push
add
xchg
fldcw
xchg
lret
and
dec
sub
mov
aas
jno
lods
aaa
push
pop
mov
push
push
inc
push
dec
fcompl
int3
push
fs
mov
cmp
push
gs
popf
mov
mov
sub
adc
movsb
outsl
push
mov
das
cmpb
jg
js
adcl
adc
jmp
js
imul
jmp
mov
jb
jmp
adc
or
cwtl
add
xlat
orb
arpl
bound
jbe
int3
mov
les
fcoms
mov
fdiv
xchg
test
push
push
cwtl
rol
gs
xlat
mov
test
pop
pushf
pop
hlt
or
add
mov
add
adc
movsb
mov
lret
mov
mov
pop
push
fadds
cli
popf
test
xor
insl
mov
sub
add
push
and
std
mov
dec
push
mov
xor
add
add
add
lods
inc
xchg
stc
into
fnsave
mov
iret
add
out
popa
and
mov
jge
shll
mov
jle
pop
cwtl
popa
xchg
push
popa
int3
ja
add
popa
add
sub
nop
mov
xchg
call
imul
pop
jne
dec
xchg
dec
mov
ds
mov
pop
adc
test
push
imull
addr16
int3
xlat
stos
and
dec
jle
pop
mov
ljmp
add
jmp
mov
aam
mov
into
test
add
push
outsl
cld
xchg
inc
stos
jno
mov
xor
icebp
ret
sub
push
mov
ficoml
fildll
mov
cli
les
dec
xor
push
add
into
dec
xor
inc
ret
mov
mov
fcoms
cmc
mov
xor
subl
ja
xor
add
add
and
jecxz
and
lcall
add
add
add
rorb
cmp
adc
sub
pop
jb
pop
imull
fbstp
xchg
cmp
outsl
popf
jae
mov
add
adc
fisttpll
dec
js
inc
mov
mov
jecxz
push
xor
cmp
rclb
mov
fs
loope
add
jmp
out
jo
loope
add
mov
and
jg
fcmovnu
insl
jge
ret
mov
mov
xchg
jge
dec
insl
decl
outsb
xor
cwtl
push
inc
push
divb
jae
cltd
mov
negl
push
ret
je
sbb
in
sub
js
test
cmp
jecxz
adc
or
adc
push
pop
lods
cmp
lods
leave
es
jne
inc
add
xchg
popf
inc
xor
pop
push
repz
testl
and
enter
stos
xchg
xchg
ret
subl
je
sbb
add
xchg
fiaddl
ret
ficomps
cmp
lahf
fldenv
sbb
add
add
add
add
add
jle
fldz
xchg
push
jmp
mov
in
sbbl
into
ret
cmpsl
add
fisubs
adc
pushl
adc
mov
jp
leave
les
sub
mov
outsl
pop
mov
jg
mov
adc
lock
cld
lcall
insl
dec
fldenv
xlat
push
xchg
adc
pop
sbb
dec
out
dec
out
and
or
into
sub
dec
pop
or
push
imul
jp
into
std
jecxz
loop
adc
adc
dec
sub
fisubs
negb
lret
sbb
into
shrl
mov
sbb
aaa
es
ds
bound
imul
dec
mov
mov
test
popf
xchg
nop
pop
mov
add
nop
imul
sti
out
fdivrl
lea
add
add
lods
xor
mov
cmp
cmc
mov
popf
xor
add
add
add
dec
push
pop
mov
les
dec
addr16
push
cmp
jp
pop
mov
ja
dec
pop
push
and
inc
mov
cmp
jbe
test
pop
ds
mov
cmpsl
lock
push
pop
bound
and
bound
sbb
fisubrs
ljmp
pop
dec
cmp
sub
push
inc
popa
loopne
pop
sbb
mov
inc
or
jo
es
jo
cld
test
and
out
sbb
mov
jl
sub
xchg
mov
dec
cmpl
and
jmp
aad
fsubrs
fs
adc
sub
stos
das
mov
jnp
inc
mov
and
into
or
lcall
xchg
sub
loope
push
repnz
mov
sbb
push
or
les
lcall
cmpsb
xchg
jp,pn
add
add
lret
mov
or
je
cs
add
add
add
xchg
dec
dec
leave
jg
inc
xlat
or
xchg
cmp
in
or
out
fbld
outsb
mov
xchg
inc
sbb
cmpsb
jg
push
inc
ds
outsb
mov
push
mov
adc
addr16
sbb
add
xor
lahf
sbb
scas
xlat
mov
imul
add
pusha
shrl
push
cmpsl
lods
fildll
sbbl
sbb
ljmp
sbb
xor
in
jmp
or
aam
lahf
inc
into
dec
stc
aad
and
mov
mov
ret
js
mov
mov
loop
sbb
mov
popf
ret
ficoml
xor
mov
dec
dec
xchg
arpl
loop
dec
in
fdivrl
aad
jne
test
sbb
lcall
xchg
jb
inc
push
sub
mov
ljmp
push
push
cmp
mov
idivl
mov
or
add
add
sti
pop
jge
neg
hlt
add
in
addr16
add
jo
xlat
loopne
xchg
mov
mov
hlt
push
cmp
int
inc
int
das
push
mov
pop
sub
add
sbb
and
test
stos
cmc
outsl
insb
fstl
add
loope
negb
xlat
pop
int3
mov
or
and
popa
ret
push
sub
pop
mov
push
aad
clc
leave
test
lahf
jb
enter
fmul
xor
add
sbb
ljmp
and
jns
push
inc
xchg
sub
dec
add
sbb
adc
movb
stc
jnp
mov
and
divl
pop
mov
mov
shl
sub
adc
mov
cmp
xchg
pop
subl
xchg
shl
xor
mov
mov
xchg
adc
repz
xchg
inc
jl
jb
test
mov
and
lcall
xorl
movsl
pusha
cltd
fsub
std
in
popf
in
stc
jmp
inc
lcall
add
add
pop
adc
sub
lret
cmp
out
jnp
dec
mov
add
xor
pop
cmp
js
xor
adc
xor
loope
pop
xor
pop
in
out
mov
sbb
jg
les
movsl
push
lods
lahf
es
pop
and
icebp
inc
and
andl
lret
fucomp
mov
adc
mov
mov
pop
ljmp
push
and
xchg
rclb
sub
push
mov
xor
fiaddl
int3
and
roll
divl
jo
icebp
mov
imul
push
lock
lret
pop
mov
call
and
push
popf
sub
dec
gs
icebp
ds
lahf
ljmp
mov
ljmpw
xchg
sbb
test
rclb
add
add
jp
jnp
sti
xchg
jle
jp
lods
cwtl
push
adcl
add
add
daa
add
jno
mov
push
or
adc
aam
fisttpl
mov
mov
cmp
mov
lcall
pop
push
iret
sub
inc
bnd
js
test
push
popa
push
mov
enter
inc
mov
and
pusha
pop
jecxz
mov
in
sbb
pop
jecxz
rol
les
jmp
rcrb
mov
mov
add
mov
repnz
hlt
lahf
repz
jp
mov
xor
data16
lock
insb
pushf
push
cmp
sub
inc
pop
mov
nop
xor
stos
dec
xchg
mov
cmp
sbbb
cltd
jb
push
dec
mov
inc
pop
gs
stc
inc
dec
imul
testl
cmp
xchg
rorl
mov
mov
jne
ret
cs
add
mov
push
sti
decb
mov
or
add
add
add
jp
add
sbb
mov
rorl
mov
mov
nop
xlat
sub
movsl
or
jae
movsb
adc
sub
cwtl
loopne
pop
xor
mov
outsl
adc
loopne
push
dec
jbe
mov
dec
or
push
push
and
cmp
mov
cmpl
mov
mov
push
cs
ja
in
loopne
pop
and
xchg
ret
cmpsl
aam
pushf
mov
mov
call
int
inc
fcomi
sub
pop
dec
sbb
or
ror
daa
sub
jbe
add
or
push
stos
and
fisttpll
and
cmpsb
xchg
adc
and
aaa
in
arpl
repz
sub
push
vandps
into
adc
push
pop
das
pop
xchg
mov
int3
add
ja
jmp
test
add
xlat
mov
xor
ja
mov
shll
push
ret
cmp
xor
hlt
popa
or
adc
cmp
add
add
add
cmp
mov
jns
jns
out
fldt
push
jg
fldl
outsb
add
imul
negl
test
jnp
xlat
cmp
push
out
gs
inc
xchg
clc
icebp
push
into
aam
stos
loope
sbb
sbb
movsb
testl
add
cmp
cmp
addr16
xor
dec
sub
push
pop
adc
aam
sub
xchg
cmp
cltd
lret
add
test
pop
sub
adc
inc
lock
push
mov
jno
scas
fs
jb
mov
in
fld
add
rcr
sub
ljmp
faddl
cmp
sbb
sub
lock
in
cmp
int
loop
push
ds
movsl
mov
cmpsb
mov
movsb
mov
xchg
dec
idivl
add
ret
cmpsb
shlb
adc
add
add
cmp
jge
stos
lea
shrb
dec
andb
add
add
add
cltd
jae
or
inc
add
pop
mov
roll
fnsetpm(287
mov
adc
pop
xor
outsb
sub
in
movsl
sub
insb
lret
push
inc
sub
nop
gs
xor
adc
push
sbb
in
cmp
pop
jecxz
clc
jne
adc
sti
aas
inc
jecxz
mov
mov
or
and
xor
mov
repz
jle
cs
lcall
adc
mov
mov
pop
or
enter
loope
push
in
jg
cmpb
sub
cmpsl
sbb
ja
xchg
mov
rcrl
test
push
jo
and
cmpsb
push
lods
loop
sahf
pop
icebp
cmp
xchg
xchg
jl
scas
cli
subb
cmpl
sub
and
iret
loop
scas
das
test
mov
in
jmp
mov
mov
stos
sbb
shrb
divb
rclb
nop
lcall
cmp
add
add
add
inc
in
push
testl
idiv
shr
adc
push
and
popa
ret
jle
pop
lods
inc
add
jle
add
jecxz
roll
call
sbb
js
mov
ret
sahf
popf
cmpsb
xchg
fidivs
fldcw
push
rcrl
movsl
loopne
test
insl
repnz
ljmp
pushl
je
and
scas
sbb
mov
ljmp
decw
hlt
push
mov
lods
pop
mov
ds
loop
call
test
mov
dec
mov
pop
cmp
out
push
ret
aaa
push
rcrl
sub
subl
aam
clc
hlt
mov
jns
dec
lahf
jne
dec
sbb
stos
lock
inc
inc
mov
mov
in
xchg
cld
jle
push
outsl
nop
in
scas
mov
cmc
inc
movsb
inc
cmp
mov
imul
add
jl
dec
jbe
idivl
or
mov
push
addr16
add
add
add
sbb
fcomps
push
je
into
cmp
test
xchg
fidivrs
or
push
sbb
clc
ja
fiaddl
rcrl
and
mov
mov
gs
leave
sub
xor
mov
push
push
mov
leave
push
ffree
scas
mov
adc
adc
in
cmp
shrb
clc
pushf
jmp
stos
mov
pusha
cmpsl
arpl
xchg
xchg
add
adc
push
js
imul
sti
xchg
push
incl
inc
add
mov
mov
adc
add
insb
sub
shll
add
jo
enter
jbe
jg
and
or
push
inc
xchg
repz
xchg
rol
pushf
jns
test
outsb
int
imul
in
fdivrs
pop
and
push
fldcw
add
add
outsb
sub
stos
fs
jmp
leave
aas
dec
fwait
arpl
add
add
mov
mov
mov
div
sti
and
movsb
fs
xchg
aaa
dec
mov
dec
xchg
pop
dec
data16
dec
insb
les
add
sbb
int
int
and
add
es
stc
addl
or
cmp
inc
cltd
xor
jbe
ret
mov
xchg
js
test
fcoml
pushf
shl
mov
fimull
cli
fwait
xchg
test
call
xchg
test
ds
xchg
call
aad
and
and
repz
lods
fimuls
push
mov
scas
outsb
ret
pop
cwtl
xchg
rclb
arpl
fwait
xchg
cld
movsl
mov
rcrb
dec
mov
pop
stos
arpl
push
pmaxub
mov
pusha
andl
ret
loopne
mov
dec
cmpsb
jge
cltd
repnz
jnp
lods
jecxz
arpl
daa
loope
cld
sbb
cli
mov
lock
pop
mov
les
scas
fistpll
outsl
gs
mov
adc
add
add
add
jp
sahf
pop
imulb
mov
stc
test
push
shlb
mov
popf
rcrb
out
pop
pop
mov
outsb
dec
pop
ret
stos
push
or
push
andl
not
aad
and
and
rcl
mov
inc
push
int3
mov
or
mov
enter
xor
insl
dec
inc
outsl
and
out
pop
inc
mov
push
push
lea
add
cmp
or
sarb
xchg
jae
dec
or
std
mov
enter
aas
cs
lds
adc
and
add
mov
mov
sbbb
adc
cmp
in
push
pop
jns
mov
adcl
call
sub
iret
inc
mov
mov
jmp
mov
dec
inc
loop
dec
mov
fcmovnbe
movsl
xor
gs
leave
ret
subl
add
add
cmp
movsb
push
sbb
mov
dec
addr16
add
add
add
scas
add
sbb
mov
inc
loopne
xchg
lea
sbb
inc
inc
push
dec
mov
sub
scas
fs
fwait
mov
loope
sub
pushf
mov
test
sti
mov
inc
and
inc
fucomp
mov
cld
imul
ficompl
out
scas
jle
int
cld
push
pop
test
xchg
xor
pop
mov
adcb
xlat
cmc
pop
sbb
mov
mov
in
jne
rcrb
fistps
push
push
xchg
inc
movsl
push
pop
xchg
and
out
push
scas
fisubs
ret
lcall
pop
aas
and
aaa
insb
cmp
and
sbb
jg
mov
adc
xchg
outsb
mov
adc
cmp
out
lock
cmp
jl
mov
loope
add
or
enter
fildll
das
jnp
jno
fbstp
and
lret
negb
add
outsl
lret
mov
out
jmp
stc
clc
insl
addr16
add
add
add
in
sbb
daa
shrb
xchg
mov
cwtl
push
mov
add
in
add
in
hlt
out
int3
test
jge
scas
pop
push
sbb
addr16
mov
push
mov
mov
or
popw
shrl
outsb
xchg
adc
dec
aas
repnz
shll
iret
icebp
loop
push
jb
cli
mov
loope
out
mov
and
push
in
test
in
std
rclb
xchg
popa
adc
pop
jmp
aam
movsl
test
shll
ja
sahf
lahf
imul
mov
in
jo
into
es
js
lock
xchg
jbe
jno
clc
ljmp
add
xchg
ds
push
push
dec
cmp
add
sbb
test
out
stos
arpl
jge
or
fwait
or
adcb
or
mov
xor
int
pusha
inc
cmpl
aam
fstl
lahf
mov
add
and
das
cmp
lods
repz
mov
call
inc
add
add
add
pop
push
mov
fldl
call
pop
dec
icebp
jae
mov
jmp
out
adc
dec
sub
scas
in
add
push
test
pop
or
stos
ljmp
iret
jbe
out
sti
jp
loop
jae
pop
xchg
ret
xchg
stc
testb
je
lcall
fwait
sbb
clc
mov
daa
fiaddl
jl
dec
cmp
mov
sub
jge
je
in
pop
fistl
xor
sub
subl
repnz
cmp
add
in
mov
sbb
xchg
fstl
popf
outsl
push
aad
sbb
out
xchg
adc
jb
dec
js
xchg
mov
jmp
mov
fcoms
push
sub
ret
outsb
repnz
sub
xor
sub
arpl
xlat
adcb
mov
lods
mov
rcrb
pop
dec
push
nop
xchg
fwait
andl
in
dec
push
add
aas
daa
push
cld
push
std
jmp
dec
push
faddl
addr16
add
add
add
bound
cmpsb
adcb
mov
cmc
jns
mov
and
and
pop
cmpsl
jp
gs
fcoms
dec
cmpsl
dec
xchg
mov
sbb
lods
cmp
inc
jp
xor
lock
out
mov
test
adc
idivl
mov
outsl
decl
and
or
and
xor
stos
or
aad
iret
sbb
js
nop
lds
mov
pop
add
mov
icebp
inc
xchg
cmc
mov
add
sub
fistpll
in
leave
insl
mov
xchg
into
cmp
pop
mov
push
pop
sarb
mov
or
mov
ud0
mov
mov
pop
add
pop
cwtl
jns
cmc
rorl
inc
pop
or
lcall
enter
sahf
push
jns
icebp
lock
pop
inc
addr16
aam
lds
mov
adc
cs
fisttpl
clc
test
add
add
sbb
dec
push
out
aad
daa
sbb
add
add
add
loop
sub
adc
cmpsb
inc
popf
pop
cmpsl
and
dec
enter
add
popf
or
fwait
hlt
xchg
lods
mov
das
decb
fistpl
adc
repz
je
pop
sahf
cld
das
das
push
stc
inc
or
xchg
cmpsb
add
inc
loopew
imul
popf
daa
int
test
sbb
or
add
addb
into
pop
ds
fadd
mov
push
sarb
mov
rcr
inc
int
std
popf
push
fsubrl
or
outsb
fwait
sti
enter
sahf
outsl
filds
ds
xor
scas
adc
xor
pop
xor
in
add
fsubp
out
cmpsb
mov
imul
push
clc
cmpsl
fsubrp
adc
sub
cmp
roll
shrl
std
outsl
mov
jo
inc
out
adc
fstpl
or
dec
jnp
lahf
ret
mov
add
stos
add
push
mov
or
add
addr16
add
add
add
fadds
mov
mov
dec
lret
imul
into
jmp
jl
lea
and
push
scas
gs
int
push
bound
mov
xchg
xchg
dec
in
mov
rcll
ja
push
push
mov
ret
jb
stos
addr16
xor
out
orb
imul
insl
out
xchg
dec
adc
or
pop
es
adc
dec
mov
mov
gs
mov
xchg
pusha
icebp
cld
scas
cld
or
jecxz
test
mov
and
fiaddl
pusha
cmpsl
insl
add
push
jmp
fmull
movsl
repz
int3
pop
xchg
sub
lea
push
jmp
insl
xchg
loope
adc
aad
sahf
adc
fadds
xchg
outsb
sbb
lahf
in
pop
mov
or
imul
inc
add
xchg
aam
pop
inc
and
jbe
test
insl
ret
add
mov
ja
jg
xchg
orl
sub
add
add
or
pop
jecxz
pop
out
test
push
stos
int3
std
jns
inc
sub
test
lret
std
push
sub
xor
or
push
cmp
filds
out
pop
xor
mov
sub
mov
adc
cvtps2pi
lods
mov
shrb
dec
loop
jns
loope
imul
mov
stos
sub
or
sub
push
les
arpl
xor
push
jle
aas
std
sub
jae
outsb
jo
cmp
icebp
imul
jae
sub
inc
xchg
jle
lea
movsb
jb
pop
dec
mov
and
xchg
add
nop
sub
and
stos
add
daa
icebp
shrb
add
icebp
pop
inc
add
mov
inc
jg
xor
inc
pusha
sti
popa
arpl
fmuls
pusha
stos
jnp
cmc
adc
test
andl
jp
mov
shll
imul
sahf
push
js
jnp
ljmp
and
dec
lret
jmp
imul
aaa
je
adc
add
add
add
mov
jg
ret
test
out
fcomip
mov
xchg
xor
pop
pusha
push
or
rcll
pop
lret
jbe
push
out
cmpsb
cmpsl
pop
sub
inc
mov
ret
dec
and
or
xor
cld
xor
lock
or
inc
out
hlt
outsl
xor
inc
out
and
xchg
lods
fs
cmp
sbb
or
imul
fs
mov
jb
std
pop
push
out
cltd
mov
imul
sbb
faddp
jo
or
daa
adc
jne
cvtps2pd
subb
pop
and
cwtl
es
shrl
cli
data16
pop
add
scas
xor
icebp
and
inc
in
cmpsb
sbb
mov
push
das
mov
loope
jmp
push
push
nop
xlat
or
adc
xor
mov
test
jl
sub
adc
loop
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
cmp
inc
add
add
add
es
jecxz
js
sub
adc
hlt
inc
ljmp
lea
push
ds
movsl
fwait
aam
stc
dec
sarb
stc
inc
movswl
xchg
daa
mov
cld
inc
fistl
repz
and
dec
jae
aas
cmp
cmp
jb
pop
jg
in
ret
xchg
std
aad
es
scas
and
ljmp
sub
cs
or
mov
xlat
mov
pusha
rcrl
fmuls
mov
cwtl
mov
aaa
push
sbb
out
loop
inc
imul
xor
push
and
adc
fiadds
mov
jnp
push
out
lahf
pop
aas
or
jo
add
sub
lods
jl
pushf
aad
jnp
xchg
lds
xor
lcall
fistpl
dec
push
dec
ret
outsb
sub
stos
mov
dec
movl
add
add
jns
xor
jg
ret
addr16
add
add
add
aaa
addl
inc
push
cmpsb
ret
pushf
xchg
pushf
popf
or
jb
arpl
mov
cmpl
out
adc
test
call
rcll
iret
das
lods
sbb
mov
loop
imul
sbb
cwtl
shll
mov
sub
cmpsb
fidivs
popa
push
fdivs
jmp
xor
xor
mov
xor
mov
leave
xor
cltd
adc
repnz
push
mov
mov
pop
mov
dec
xchg
inc
jae
xor
add
js
outsl
push
inc
and
fisubs
nop
or
xchg
jb
dec
icebp
or
xchg
imul
fdivrs
imul
in
pop
add
and
sub
jp
xor
arpl
jmp
dec
jle
inc
movsb
in
les
dec
pushl
or
pop
mov
testb
js
ret
jg
decl
rol
add
movsl
cld
addr16
add
add
add
mov
in
push
test
fsubrl
loopne
insb
mov
add
repz
iret
repnz
leave
pop
xor
ror
jmp
aam
mov
in
insl
xchg
aas
cmp
add
lahf
js
dec
stc
push
ja
jne
outsl
rcrb
jg
fdivl
ljmp
adc
lret
mov
adc
loop
stos
pop
jmp
pushf
loop
lret
jb
inc
loop
dec
jl
and
mov
push
insb
push
popa
aad
in
mov
sub
sbbb
inc
mov
loopne
mov
mov
lcall
cmp
jo
mov
movsb
fmul
xor
in
push
fs
loopne
fdivr
cmp
sahf
add
sbb
aad
xchg
lret
adc
leave
std
inc
in
sbb
adc
data16
jle
out
enter
cmpsl
push
leave
shl
jns
push
or
adc
mov
out
aad
lcall
add
add
lds
sub
fisttpl
lds
xlat
data16
jno
or
lcall
pop
andl
sbb
daa
push
xor
insl
adc
mov
jecxz
push
sbb
xor
push
fs
mov
dec
test
cltd
out
test
mov
mov
push
int
pop
pop
mov
xlat
and
repz
push
mov
mov
mov
sub
lds
push
out
push
ja
pushf
sub
loop
sub
jp
popa
cmpsl
in
iret
mov
adc
ret
jecxz
pop
sub
fisubrl
ret
cmp
jmp
aad
jmp
repnz
xchg
inc
mov
xchg
stos
adc
or
mov
outsb
stc
xchg
aad
mov
mov
orb
xor
in
sbb
test
adc
ljmp
push
add
inc
icebp
hlt
gs
dec
adc
pushf
pusha
addr16
add
add
add
loop
js
js
cwtl
lea
movsb
cmp
arpl
aam
mov
xor
dec
push
inc
mov
leave
jmp
adc
mov
xlat
mov
scas
enter
push
int3
dec
ss
popf
push
sahf
add
out
xchg
jmp
icebp
stc
stc
inc
ficoml
mov
mov
mov
push
shrb
jg
push
mov
push
sbb
lds
popa
mov
pop
jne
jecxz
movsb
xlat
or
pop
cmp
and
in
cli
jnp
pop
fisubrs
lea
lock
sbb
mov
inc
iret
jge
mov
mov
sbb
into
in
sbb
cmpsb
pop
add
sbb
mov
add
jmp
std
xor
adc
enter
sub
cmp
mov
jmp
pop
fidivl
imul
pop
push
and
inc
ljmp
add
add
aas
gs
pop
repnz
dec
add
add
add
in
cltd
and
push
push
inc
rcrb
cmp
jo
mov
idivb
gs
or
mov
int
mov
sbb
add
cmp
mov
add
sbb
and
mov
dec
push
popf
xor
or
add
dec
sub
fistl
mov
test
enter
les
sub
movsl
imul
or
or
push
add
jbe
mov
adc
xchg
mov
cmp
lcall
sub
faddp
jg
jo
and
sub
jbe
sahf
and
adc
pop
jb
push
sarb
push
addl
ror
scas
sub
xor
dec
sub
inc
lret
dec
mov
rclb
rcl
inc
adcl
dec
fildll
sbb
test
cli
push
mov
scas
jae
dec
mov
out
fisttpll
lock
sbb
add
add
add
data16
sub
xchg
jae
sub
test
or
sbb
push
lea
lahf
xchg
dec
jmp
icebp
jnp
test
sti
push
sub
nop
push
add
cmp
outsl
cmp
repnz
inc
in
or
les
mov
test
mov
ds
insl
pop
popf
repnz
mov
pop
mov
std
push
push
fstl
sbb
aaa
movsl
mov
jmp
push
mov
cs
sarl
pushf
jno
repnz
dec
and
push
popa
xchg
loope
cmpsl
pop
cmpsb
mov
in
dec
mov
movsb
jge
lcall
xor
jp
mov
fs
jno
inc
mov
jno
mov
pop
jo
js
insb
popf
aad
dec
mov
mov
insl
jg
iret
xchg
mov
incl
push
jno
xor
sub
in
ret
sub
add
add
mov
ljmp
add
add
add
cltd
xchg
xor
cld
xlat
ljmp
push
mov
add
inc
adcl
push
jne
repz
rcr
and
inc
and
jnp
mov
cmpsb
jge
mov
loope
jbe
insl
mov
adc
mov
mov
mov
cmp
shlb
testl
xchg
jecxz,pt
outsb
jnp
cmp
dec
ret
lock
lods
or
fnstenv
lahf
mov
lahf
aad
jae
xchg
inc
fnsave
push
into
stos
js
pop
test
popf
push
push
dec
pop
mov
dec
sub
push
sub
xchg
sbb
outsb
arpl
sub
lods
clc
adcb
xor
or
fs
aad
dec
scas
xor
cmp
adc
mov
pop
dec
xor
lret
push
fadds
add
add
jmp
out
aas
jo
sahf
jb
ret
xchg
addr16
add
add
add
out
inc
aas
lret
ret
dec
movsb
pop
outsl
push
negb
mov
push
fbstp
xor
in
aad
xchg
push
js
nop
pop
adc
mov
rclb
int
cld
mov
push
gs
sbb
xor
out
stos
ret
dec
xchg
iret
jae
gs
in
cmp
adcb
mov
out
adcl
mov
xlat
push
fwait
sub
inc
rorl
xor
mov
stc
arpl
mov
or
pop
push
push
adc
xchg
test
call
or
out
test
iret
adc
jge
mov
mov
fs
ror
adc
jmp
cmc
fwait
add
sbb
ret
enter
ss
xorl
out
fcmovnu
dec
mov
push
or
mov
ret
aam
pop
arpl
or
aam
sbb
and
adc
js
cmp
imul
out
mov
mov
aas
call
addr16
add
add
add
call
negl
ss
cs
movsl
inc
jmp
pop
xor
je
adcb
jns
sub
lock
mov
lcall
inc
adc
xor
add
cmp
push
fwait
xorb
pop
mov
fldenv
inc
ret
lea
and
mov
test
push
mov
cli
shl
xchg
fsave
mov
pop
icebp
sub
or
cmp
dec
xlat
dec
movsl
jo
push
adcl
adc
mov
pop
adc
aam
nop
mov
in
call
shll
push
out
faddl
mov
out
sbb
sbb
or
or
loopne
or
push
lea
jo
xchg
push
dec
pop
sbb
mov
or
stos
push
shll
sarb
sub
xor
icebp
call
add
add
dec
stc
mov
ljmp
addr16
add
add
add
loop
and
mov
sbb
mov
xchg
jno
jno
jb
push
addl
stc
es
outsb
mov
adc
jno
addb
dec
iret
int3
inc
sbb
ss
mov
push
xor
movl
pop
jecxz
xor
fcomps
add
int
dec
in
sub
lret
or
push
lods
frstor
xorb
jle
inc
sbb
pop
movsl
lret
bound
cmp
scas
xor
inc
jp
add
pushf
scas
out
adc
repz
add
mov
mov
ret
jne
lahf
mov
xchg
mov
lcall
lcall
std
and
mov
push
and
mov
cwtl
jecxz
cmc
daa
lock
call
xchg
cmp
jle
jg
cld
lcall
fldenv
add
add
add
mov
rcll
vmovdqa
xchg
dec
inc
fbld
sbb
popa
jmp
cmp
adc
std
inc
test
lcall
add
dec
lret
cld
arpl
outsl
xlat
icebp
ljmp
test
push
xchg
sub
xor
fwait
in
jbe
jle
inc
jae
cmp
sub
jb
sub
sbbl
pop
sub
test
adc
and
jmp
dec
ret
ficompl
sti
sub
pop
pop
or
sub
push
xchg
aas
push
in
mov
fs
sahf
adc
or
std
mov
adc
lds
xor
stos
add
and
push
sub
cmp
lcall
xchg
sti
adc
enter
mov
repz
repnz
and
add
add
jno
es
or
add
mov
xchg
mov
pop
lret
data16
addr16
add
add
add
jo
ficoml
sahf
jns
in
cmp
push
stos
jae
test
mov
sub
ja
testb
shl
ret
iret
pop
scas
mov
xor
int3
orb
mov
xchg
add
lcall
out
mov
pop
and
sbb
das
repz
push
fnstcw
fistpll
lcall
xchg
pop
lcall
dec
push
sub
sahf
xchg
jmp
cmp
mov
leave
adc
leave
add
je
jno
sbbb
sub
loope
and
out
scas
dec
xor
sub
orb
or
ja,pn
in
xchg
jg
daa
out
cmp
sub
xor
jle
jge
sub
pop
jp
aad
xor
shl
sub
xor
fstp
add
das
jmp
xchg
ret
sub
push
sub
xor
push
dec
imul
or
mov
and
adc
addr16
add
add
add
push
cmp
and
add
out
mov
xchg
sub
popa
jne
dec
cmp
stos
sbb
mov
or
cmp
ljmp
dec
sub
nop
push
and
or
or
cld
mov
push
clc
or
in
inc
out
enter
sbb
inc
xchg
scas
fcoms
add
dec
dec
mov
jno
int3
sub
ds
pop
and
imul
jnp
ss
sahf
inc
sbb
and
mov
mov
or
popf
push
pop
adc
divl
jno
testl
sub
sbb
jbe
enter
inc
idiv
ja
scas
mov
push
adc
adc
cltd
movsl
push
mov
dec
lcall
push
stos
test
or
xchg
pop
lds
pop
pop
loope
mov
jecxz
mov
fsubrl
mov
out
cmp
ret
or
cmp
xor
add
add
mov
jecxz
outsl
ret
js
stos
push
xlat
sub
and
and
mov
test
imul
and
xchg
sub
insl
into
sub
out
cmc
sub
aam
mov
mov
sub
adc
inc
mov
inc
xor
ss
cmp
sbb
inc
test
add
data16
jmp
mov
popa
fs
inc
push
dec
pop
and
mov
xchg
test
inc
inc
xchg
mov
xor
push
mov
lock
mov
int
rcrl
cmpl
std
sbb
cwtl
push
mov
dec
out
xor
mov
sub
sti
test
push
js
pop
jno
shll
inc
mov
lock
xorl
sub
and
ljmp
hlt
mov
insl
ucomiss
aaa
inc
sbb
ret
pusha
fmul
clc
or
push
shll
out
pop
pop
pushf
push
nop
test
add
add
add
pop
jo
lahf
adc
mov
xchg
pop
clc
lods
outsl
fsubs
xor
das
and
inc
xor
or
stos
in
sub
ljmp
arpl
aam
mov
or
in
push
popf
mov
lea
add
mov
pop
sub
je
add
test
inc
sub
cmpsl
mov
mov
push
xchg
in
aaa
movsl
cwtl
push
add
lret
dec
xorl
xor
xchg
mov
sub
das
mov
stos
add
pop
nop
inc
adc
cmp
scas
lret
add
leave
or
orb
add
gs
lahf
cmp
xchg
mov
arpl
jo
je
xchg
decl
hlt
mov
jb
add
add
out
lcall
hlt
mov
enter
push
add
add
add
insb
scas
cs
fwait
mov
jecxz
ret
ret
iret
lahf
mov
xchg
mov
xchg
mov
push
dec
lods
inc
pop
pop
add
inc
inc
ficomps
inc
push
rcrl
and
add
add
iret
call
sub
push
inc
adc
fists
xor
and
mov
push
loopne
xor
out
sbb
int3
mov
iret
out
stos
xchg
jmp
jno
ficoms
jae
mov
push
ret
jge
iret
das
push
insb
add
cltd
nop
aam
div
fimuls
inc
inc
xor
push
xor
or
rcll
jne
clc
mov
hlt
jg
int3
scas
adc
pop
and
ret
sbbb
cmpsl
pop
jb
ror
dec
pop
icebp
pop
jns
les
clc
lods
xor
sahf
and
test
xchg
push
jg
and
sbb
in
stos
insl
addr16
or
les
insl
ja
cmpsl
je
pop
bound
imul
mov
add
add
add
in
dec
mov
dec
pop
add
in
push
lods
mov
psubw
xor
jp
sbb
out
adc
movsb
dec
and
mov
jmp
mov
fbstp
insb
mov
lret
daa
dec
jbe
dec
pop
jnp
mov
sbb
cmc
das
jne
ljmp
bound
mov
int
fcomip
xor
bswap
pusha
test
dec
aad
outsb
aam
jb
fiaddl
std
inc
popf
pop
xchg
xchg
mov
or
jae
clc
pop
leave
clc
sbb
ficoml
sbb
data16
fsubrl
test
out
pusha
test
movsl
cmc
cmpsb
or
test
fcompl
inc
pop
xor
sub
imul
mov
test
xlat
dec
pushf
and
repz
leave
push
fisubrs
lcall
jl
adc
add
add
jae
fwait
cmp
stos
sarb
addr16
add
add
add
idiv
sub
out
cmc
inc
mov
xor
rclb
leave
and
addr16
inc
enter
jb
dec
sbb
xchg
dec
adc
push
adc
popf
cmp
pushf
cltd
inc
aas
faddp
mull
les
mov
inc
or
jge
adc
dec
xchg
out
xchg
pop
cmp
mov
inc
lret
xchg
pop
jle
mov
push
sub
mov
pop
dec
xor
lahf
cmp
shll
cmp
cmpsb
rcrl
push
sub
pop
sub
xchg
mov
out
scas
mov
cli
pushf
jg
jl
jecxz
aaa
sub
lock
pop
and
cmp
insl
inc
fcmovnb
addr16
je
lret
jae
outsl
pop
push
sub
xchg
push
outsl
repz
dec
xor
pop
aad
dec
nop
mov
cli
add
loope
jno
mov
add
scas
cltd
mov
and
add
add
clc
mov
and
hlt
jle
adc
pop
add
add
add
xchg
jae
add
movsl
lret
scas
mov
mov
fistl
jno
lods
push
out
xchg
pop
movsl
or
fistpl
int
dec
pop
bound
mov
mov
cmp
and
dec
inc
cld
in
daa
add
jg
add
adc
stos
and
sub
push
cld
or
cmp
es
loop
js
addb
mov
jnp
cmpsb
xchg
adc
push
and
js
into
repnz
and
pushf
movl
in
stc
mov
cmc
lret
mov
xor
call
mov
faddl
pop
sub
xchg
mov
lds
mov
std
adc
mov
push
out
adc
test
int3
stos
xor
mov
xchg
pop
and
scas
xchg
push
adc
out
mov
pusha
pop
sub
add
add
imul
mov
mov
sbb
xchg
fndisi(8087
test
repz
mov
push
lret
mov
mov
xlat
mov
fiadds
sbb
clc
sub
rclb
insb
fs
outsb
test
repz
lock
dec
lds
popf
stos
push
movsb
xchg
shll
jb
dec
dec
jecxz
sbb
cmc
inc
mov
in
adc
mov
les
push
mov
std
mov
test
cmp
mov
sarb
roll
push
gs
bound
push
dec
and
flds
fs
mov
xor
movsb
sbb
or
in
sub
push
mov
mov
add
js
mov
or
je
cmc
pusha
cs
subb
mov
cmpl
add
test
or
fdivs
and
addr16
add
add
add
aas
mov
mov
out
push
test
pop
add
sub
sti
xchg
mov
mov
fsubrs
xor
repnz
addr16
stc
and
fsubr
into
adc
mov
ret
movl
inc
scas
or
movsl
addr16
lea
insb
jp
arpl
jle
push
pusha
sti
fsubrl
aad
insb
cmc
in
and
out
add
jmp
add
add
sub
jl
lret
aam
in
arpl
cmp
push
adc
std
outsl
sub
mov
les
mov
movsl
lret
das
outsl
sub
clc
sbb
inc
add
repz
insb
nop
lcall
xor
sbbb
aas
call
rcll
aad
jg
aad
xchg
mov
mov
jns
lret
repnz
adc
jge
dec
lahf
jno
jge
aad
fsubrl
rol
xor
fldt
inc
popf
dec
cmp
stc
scas
cld
loope
or
shrl
sub
popf
aam
push
mov
and
das
cmp
pusha
imul
sbb
addr16
add
add
add
pop
jno
mov
daa
add
push
xchg
bound
push
in
pop
xchg
jmp
cmp
add
mov
xchg
call
ss
mov
sub
xor
inc
pop
push
dec
push
inc
fldt
xlat
scas
cmp
mov
call
cmp
mov
ret
in
cmp
dec
loopne,pn
imul
dec
jg
jb
inc
insl
jg
xor
repz
adc
lcall
add
aad
fsubs
imul
fimuls
in
lret
int
shlb
dec
dec
or
adc
js
dec
in
xor
or
xor
xor
insl
fwait
mov
push
push
jns
scas
ja
add
xchg
lock
adc
inc
inc
ret
xchg
jmp
sbb
test
jb
mov
dec
fists
dec
mov
add
fsubl
mov
ja
mov
xchg
fisttpl
add
add
cmpsb
lds
mov
out
mov
jo
jb
pop
mov
cmp
iret
xchg
clc
pop
int
shlb
rolb
lret
fimuls
mov
shrb
popf
fcom
out
adc
out
bound
pop
fs
cmp
loopne
and
adc
jmp
cmpsb
sub
jge
push
lret
js
lock
and
ja
out
out
sub
dec
xlat
iret
pusha
mov
xor
push
cld
mov
push
mov
insb
lahf
stos
push
xor
jnp
jo
jg
pop
inc
lods
sbb
in
fldcw
cltd
dec
and
insl
pop
mov
aaa
outsb
pop
cmp
or
inc
sub
sbb
jnp
stos
inc
lock
push
ret
imul
ret
mov
ja
orl
ds
mov
mov
adc
cwtl
push
je
sbb
add
add
xor
xlat
out
cld
cwtl
push
dec
outsl
addr16
add
add
add
xchg
push
cmp
insb
push
test
iretw
repnz
xlat
lcall
testl
mov
or
pop
adc
mov
icebp
leave
mov
clc
test
dec
clc
push
xchg
cmp
lahf
jp
sub
jmp
arpl
movsl
out
push
and
inc
mov
mov
leave
dec
out
orb
push
jnp
push
adcb
mov
push
out
jns
ficoms
jge
mov
mov
popf
rsqrtps
mov
and
xlat
cmpb
jno
inc
or
pop
scas
ret
jae
mov
pop
cmp
es
push
pop
fstpt
js
subl
mov
lds
cmp
fcompl
stos
pusha
test
addr16
adc
inc
jnp
mov
dec
pop
mov
mov
in
pop
test
add
add
add
cmp
rorl
rolb
jne
das
xchg
jns
sub
ja
cmp
sarb
dec
push
jno
test
add
loope
test
mov
sub
outsl
mov
shll
into
mov
insl
cmpsb
notb
outsb
jne
xor
fstl
push
stos
mov
rorl
push
dec
and
jl
testl
je
mov
ds
mov
sub
ficompl
adc
stc
or
ret
jmp
popa
adc
cmp
jge
mov
cmp
inc
jo
adc
adc
stos
jns
and
and
push
fstpt
and
sahf
test
lret
lods
mov
ds
mov
popf
rorb
jmp
cmp
sbb
dec
mov
cwtl
cmp
ja
jns
pusha
arpl
or
aam
movsb
pop
mov
cmpb
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
lret
das
cmp
ljmp
fdivrp
mov
add
stos
shll
adc
mov
add
test
outsl
mov
adc
ret
push
or
jmp
cmp
jle
and
lret
inc
mov
lods
rorb
pop
dec
mov
xchg
pop
cmp
insl
bound
xchg
ja
fcompl
xor
push
and
ljmp
adc
or
sahf
int3
mov
inc
std
cld
mov
jb
add
int3
in
mov
cmc
sar
mov
pop
mov
sbb
jmp
pop
add
filds
loop
adc
cs
or
div
adc
lret
movsl
lock
pop
nop
rcll
cvtpi2ps
mov
hlt
adc
cwtl
mov
ret
xor
jbe
jno
repz
xor
out
fadds
sub
in
dec
loop
fwait
add
test
add
and
mov
jg
or
bound
add
add
add
pop
lcall
loope
cmp
mov
loop
dec
jnp
je
push
push
add
or
xor
push
sub
mov
pop
mov
call
bound
dec
scas
inc
addr16
adc
lahf
jns
add
push
cmp
shlb
and
sti
fsubrp
mov
add
sbb
pop
inc
outsl
imul
arpl
hlt
fistpll
test
cmp
sbb
fiaddl
jnp
dec
cld
shrb
movsb
pop
call
sub
lcall
test
xchg
push
aad
adc
in
in
and
cmc
pop
imul
adc
int
arpl
lods
mov
mov
dec
sbb
sahf
sbb
pop
and
inc
push
repnz
xor
iret
popa
pop
pop
jge
push
fs
jmp
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
adc
add
add
lds
movsb
das
mov
add
test
pop
pop
stc
push
adc
ret
jg
pop
lcall
aaa
lret
xlat
popf
in
and
movsb
jae
mov
pop
dec
mov
jmp
into
jo
into
mov
jl
test
into
xchg
cltd
mov
test
inc
and
pop
mov
adc
and
sbb
adc
inc
push
repnz
xor
xor
popf
jo
pop
fsubl
shll
into
cmc
shr
and
aas
jl
mov
mov
lock
stos
add
jmp
mov
cmpl
loope
push
adc
scas
filds
in
push
push
pop
nop
dec
dec
lret
xchg
pop
push
ss
not
xor
adc
sahf
xchg
mov
dec
inc
push
ds
cltd
mov
test
or
shll
push
mov
add
in
bound
xchg
mov
test
add
add
idiv
jg
sub
xor
add
add
add
and
inc
jl
dec
or
rcll
add
iret
or
scas
test
pushf
ss
rol
add
cmp
push
mov
jns
mov
pop
in
xlat
addr16
mov
aad
les
int
mov
xchg
pop
mov
pop
sub
aas
lret
push
ljmp
lods
jecxz
ljmp
pop
push
inc
imul
movsb
sub
ja
sbb
mov
push
or
movsb
imul
call
cwtl
mov
fisubl
dec
adc
or
push
jmp
ret
in
lret
shl
mov
xchg
out
adc
xchg
lock
loop
shlb
xor
mov
xchg
pop
jo
ror
insl
or
test
lret
mov
lods
and
and
add
std
sub
out
jmp
fsubl
jno
add
add
pop
mov
fstps
lods
mov
add
add
mov
and
xchg
in
insb
fcmovbe
shlb
movsl
pop
jb
mov
push
xor
pop
test
mov
bound
mov
out
loope
mov
or
lret
mov
mov
push
outsl
ja
jne
fsubl
add
insb
sbb
lahf
push
movsl
jge
popa
jmp
aad
sbb
fs
add
outsl
add
and
dec
push
add
das
test
jnp
pop
scas
ja
xchg
cs
ficompl
inc
push
ja
push
xchg
es
pop
xor
dec
xorl
xlat
sbb
push
and
cmpb
xchg
add
push
pop
subb
mov
rorl
test
push
hlt
sbb
aam
imul
xlat
inc
jmp
mov
leave
andb
add
add
repnz
movsb
jle
arpl
xchg
pop
add
add
add
mov
in
inc
lahf
aaa
xchg
loopne
dec
dec
mov
push
jl
xor
xchg
fs
inc
rcll
std
inc
or
mov
leave
mov
jo,pn
addr16
adc
push
sub
enter
dec
lret
pop
cltd
cwtl
aad
sbb
jecxz
ljmp
movsb
xorl
in
popa
clc
sub
cmpsb
dec
es
xchg
neg
mov
jno
cli
arpl
pushf
jne
sub
sbbl
pop
sub
dec
push
test
cmpsb
adc
das
inc
movsl
movsb
scas
insb
mov
jp
xchg
shrl
loope
es
fsubr
test
jbe
push
push
mov
mov
jle
fwait
leave
notb
mov
mov
jg
jg
test
cwtl
insb
aas
cmp
insb
into
xor
sbb
sub
scas
cmp
add
jno
stos
sub
stos
out
jmp
sub
pop
lods
adc
add
add
add
cwtl
or
mov
pop
lahf
sbb
cmpsl
and
das
adc
cs
imul
iret
mov
adc
and
xor
ja
call
dec
adc
dec
push
lods
lods
jle
sub
dec
mov
aam
mov
xor
rcr
pop
mov
mov
test
sti
iret
xlat
mov
pop
sub
hlt
insb
xor
enter
sub
cmp
addb
sbb
movsb
sbb
aas
mov
xor
pushf
insb
mov
inc
jb
scas
cwtl
xlat
dec
mov
js
xchg
add
mov
ret
cmpb
pusha
loop
dec
or
dec
pop
pop
xor
mov
add
and
stos
arpl
mov
sbb
lret
ss
or
xor
mov
sbb
repnz
filds
ror
faddl
add
add
mov
fnstenv
adc
cmp
addr16
add
std
sub
jg
dec
push
enter
xorl
into
test
xor
mov
ficomps
mov
dec
insb
adc
nop
or
and
fwait
cmp
out
add
or
mov
xor
ss
int
xor
cmp
lds
lds
fwait
ds
aas
xchg
sti
fadds
loopne
jnp
stos
je
xlat
cli
sbb
xchg
lods
into
and
scas
xor
scas
lret
jne
jns
xchg
mov
iret
push
inc
add
inc
repnz
lods
lods
cmpsb
sbb
popf
mov
cs
cwtl
ds
cs
shl
xor
iret
sub
xor
lods
pop
sub
cmc
into
mov
push
cltd
clc
xor
or
fidivs
dec
stc
sbb
sub
adc
inc
pop
inc
sub
jnp
fs
mov
or
xchg
xchg
adc
out
mov
sbb
pop
pop
mov
xor
xchg
pop
cmp
cld
je
jbe
jns
sbb
jecxz
mov
imul
add
ret
ss
add
scas
fistpl
dec
mov
xorl
mov
orb
lret
fstpl
and
sbb
andb
mov
fwait
int
imul
test
movsl
mov
scas
jp
adc
in
xor
pop
push
add
shlb
and
cli
or
sub
xchg
fwait
pop
or
sub
imul
xchg
mov
sub
into
xchg
loop
leave
sbbl
loop
test
pop
dec
adc
and
push
inc
and
mov
dec
jbe
push
mov
test
pop
xor
and
jae
xchg
mov
mov
aad
mov
xchg
push
xchg
cmp
aam
es
jp
test
inc
int3
sub
icebp
insb
sub
std
stos
mov
mov
es
add
cltd
jmp
fildl
or
inc
ds
add
add
add
adc
mov
out
add
pop
testb
pushf
mov
das
add
mov
inc
push
iret
jge
cmpb
mov
mov
cmc
push
xlat
jmp
daa
adc
clc
inc
dec
mulb
push
adc
xor
mov
pop
pop
out
push
aad
in
sub
mov
sub
mov
out
push
aam
mov
mov
inc
jmp
mov
adc
mov
imul
or
xchg
adc
cmp
notb
jmp
repnz
mov
mov
out
aaa
push
jno
popa
xchg
sub
sub
mov
shll
rolb
ss
jnp
in
xchg
imul
jle
xchg
in
movsl
dec
jns
lea
or
out
sub
add
mov
mov
push
jg
dec
xchg
dec
jae
xchg
imul
add
add
adc
icebp
outsb
bound
adc
sbb
xor
out
fwait
push
fdivrs
jno
out
or
jle
lock
in
sub
aaa
dec
mov
xchg
dec
jns
fucomip
xorl
mov
pop
adc
fidivs
insb
divb
mov
xor
push
popf
shl
adc
cmpsb
lret
cmp
imul
incb
xchg
fisttpl
ret
inc
ljmp
add
mov
mov
enter
sahf
mov
lret
call
dec
or
rorb
add
mov
loop
add
inc
into
je
sbb
test
mov
insb
ret
jb
xor
or
test
add
jno
push
and
add
shll
test
sbb
ret
iret
mov
fucomip
push
insb
xor
xor
inc
push
insb
add
add
add
or
sbb
jbe
pop
fst
or
xchg
test
out
adc
out
sub
pop
mov
ljmp
jmp
dec
rol
loop
loopne
or
push
add
xchg
test
pop
cmp
out
jle
cmpsb
cmp
sub
push
test
hlt
repz
or
mov
cmp
jl
addr16
or
mov
push
lret
adcl
mov
rorb
sub
pause
stos
jecxz
stc
rolb
mov
call
mov
arpl
adc
or
aad
pop
cld
scas
nop
fs
sbb
cld
lret
decl
mov
adc
dec
rcrl
nop
xchg
faddp
jno
clc
lods
scas
add
aad
arpl
je
loope
rep
mov
enter
sbb
mov
aas
push
mov
pop
sbb
mov
jae
in
cs
subl
test
mov
inc
imul
dec
out
iret
jmp
aas
in
push
outsw
std
out
insl
add
add
add
sbb
out
inc
aad
aas
lret
inc
loopne
repnz
loop
push
popa
and
das
jge
adc
sbb
movsl
adc
pop
jo
test
and
push
xlat
shlb
repnz
jae
mov
cwtl
inc
push
xchg
ja
gs
icebp
call
addb
sbb
xchg
jae
xor
leave
sbbl
ja
sbb
daa
cltd
ss
movsl
sub
rol
pusha
loop
stc
mov
faddl
out
mov
add
jno
or
sbb
inc
jno
pop
push
and
shlb
fists
push
test
dec
test
jmp
jne
push
jmp
push
ja
adc
mov
cmp
mov
lods
sub
lcall
push
pop
nop
jle
icebp
sbb
xchg
sub
jns
out
adc
outsl
jecxz
push
add
dec
mov
push
cli
cmp
inc
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
xchg
mov
add
add
jle
adc
inc
imul
sub
mov
xchg
mov
std
jne
sbb
lea
add
mov
ljmp
and
dec
sbb
mov
mov
fisttpl
cmc
or
mov
mov
mov
ret
sbb
jns
or
dec
out
mov
insl
mov
mov
push
test
addr16
imul
mov
scas
das
jnp
xor
rcll
aas
sbb
int
cmp
sub
mov
test
pushf
or
lods
ret
int
sub
cmpb
enter
shll
je
or
pop
cltd
scas
cmc
ret
das
sub
dec
dec
mov
cli
in
call
xor
int3
pushl
out
test
and
lods
andb
aas
sub
jge
sti
movsb
sahf
xchg
mulb
cmp
pop
jecxz
add
add
neg
std
sub
dec
xorl
add
add
add
addr16
push
inc
xor
or
fstpt
mov
iret
mov
push
test
dec
jl
iret
sti
hlt
add
sbb
or
cmpsb
or
add
lret
inc
add
xchg
and
lahf
mov
inc
leave
out
sbb
mov
add
adc
aad
leave
jne
cli
add
xor
add
ret
pushf
sub
ja
shll
js
and
mov
add
les
lcall
push
adc
xchg
pop
push
lahf
dec
dec
les
dec
into
call
out
sbb
or
inc
push
xor
nop
and
push
lcall
push
lret
and
mov
daa
add
pop
stos
test
loopne
not
sbb
cltd
mov
out
dec
mov
shll
add
push
subb
in
push
mov
or
jo
add
add
add
mov
ret
inc
in
jns
or
cmp
jbe
call
lret
push
jg
xor
fadds
push
ja
ljmp
jb
and
ret
adcl
arpl
jge
outsl
cs
inc
mov
enter
inc
mov
lods
jp
mov
popf
pop
mov
sti
jo
arpl
mov
dec
mov
aas
popfw
mov
loopne
xchg
iret
fdivr
xchg
sub
fsubrs
mov
lods
fidivrl
pop
adc
push
fmuls
imul
shl
and
cmc
mov
adc
adc
adc
mov
xchg
test
gs
in
xchg
jno
aas
mov
sub
lret
cmovle
xchg
pusha
jne
popf
pushl
xor
je
push
repz
mov
pop
repnz
xor
insb
or
test
lcall
out
sbb
cltd
mov
jno
add
add
add
out
inc
dec
popf
pop
mov
shl
sub
gs
int3
out
jbe
lret
je
mov
jl
into
jmp
push
test
das
nop
cmpsl
cmp
call
jae
ds
or
iret
pop
movsb
xchg
cmpsl
int3
popf
mov
mov
mov
jb
push
mov
jg
outsb
xchg
and
adc
fists
jnp
lahf
adc
dec
into
push
dec
mov
nop
aam
mov
notl
lcall
jno
mov
or
std
in
in
adc
xor
add
aad
xchg
xchg
popa
add
mov
inc
lret
cmp
sti
int3
lock
mov
sbb
fildl
add
shlb
push
test
push
fstpl
out
cmp
dec
dec
lea
adc
lret
xchg
out
movsb
sbb
jle
aad
cmp
add
add
sub
ja
mov
ret
addr16
add
add
add
and
and
aad
mov
inc
pushf
adc
ret
shlb
rcr
xchg
lea
adc
cmp
jns
js
fcmove
mov
js
push
sti
jb
sub
inc
cmp
mov
jl
icebp
mov
int3
mov
adc
mov
mov
aad
push
pop
pop
mov
jns
aam
lock
adc
pop
cmc
mov
mov
arpl
xchg
cwtl
stos
or
test
daa
sub
or
in
dec
pop
daa
sar
lret
inc
sahf
pop
xchg
fptan
pop
push
or
jg
xchg
xlat
xchg
jns
cmpsl
jns
leave
sub
mull
rcrb
imul
mov
aam
sub
jl
xchg
mov
xchg
lcall
aam
movsl
repz
push
push
out
sbb
push
add
mov
out
mov
push
jns
stos
ret
subl
rorl
int
mov
jnp
outsl
cmpsb
loopne
test
inc
addr16
add
add
add
fs
mov
jle
shll
sub
sbb
mov
arpl
psubsb
pushw
fnstsw
add
icebp
mov
add
mov
add
adc
stos
mov
pop
ret
jecxz
and
pop
fcomi
icebp
xchg
jle
inc
out
add
jle
inc
sti
and
push
js
or
addr16
xchg
dec
stos
cltd
ljmp
jp
jmp
mov
mov
and
ds
and
out
sub
cmp
lcall
sahf
dec
test
lods
shll
push
dec
fdivrp
dec
adc
inc
test
cmp
or
cltd
mov
inc
sub
and
pop
fcomps
daa
rcrb
pop
mov
lea
or
xchg
add
je
cmpsl
iret
das
xlat
out
pushl
add
add
cli
xchg
jle
push
je
push
popf
cmpsl
lock
add
add
add
daa
fwait
loope
mov
xor
enter
ret
jge
test
data16
xchg
xor
loop
cltd
xchg
int
in
add
push
dec
mov
shl
xchg
sub
in
gs
les
dec
int3
cld
push
cmp
ja
loop
icebp
mov
sbbb
xchg
ret
dec
test
mov
rcll
mov
in
aad
lods
mov
sub
repnz
hlt
sarb
mov
pop
adc
mov
repnz
push
push
hlt
incl
mov
in
mov
rcll
out
fwait
sub
stos
fisttpll
les
xchg
test
pop
jl
mov
lret
cmova
mov
pop
int3
fcompl
aam
and
mov
leave
sbb
mov
dec
int
mov
leave
dec
sti
jns
push
aam
mov
xchg
roll
add
add
fwait
jnp
aad
sbb
imul
dec
fucom
push
cmpsl
inc
mov
gs
or
stos
mov
int3
mov
call
xchg
mov
adc
out
jl
fildll
push
nop
xor
pushf
mov
push
sub
jnp
mov
mov
pop
loop
stos
pop
fwait
test
lret
je
int3
incb
jb
pop
fdivs
dec
mov
pushl
jne
xchg
ret
add
out
test
leave
in
add
aaa
stc
jp
jnp
sti
jnp
cwtl
inc
inc
xor
add
pop
ret
xor
sub
movsb
mov
pop
mov
test
dec
in
mov
add
mov
lods
add
fwait
stc
arpl
jg
xchg
in
pop
roll
nop
pop
mov
dec
iret
add
ret
xor
cmp
lods
jns
neg
jl
call
bound
iret
mov
mov
movsb
xor
add
add
std
mov
sub
jbe
add
add
add
cmpsb
pop
js
cmpsl
imul
mov
ret
fldl
mov
rcrl
inc
negl
xor
hlt
pushf
xchg
imul
or
stos
push
or
sti
insb
test
scas
mov
shlb
sub
sbb
jmp
mov
adc
and
xchg
and
xlat
iret
mov
popf
je
pop
mov
inc
pop
aas
sub
sbb
jle
flds
inc
xchg
hlt
jle
xor
lahf
loope
mov
in
dec
cmpsb
pop
mov
leave
outsb
icebp
popa
cmp
scas
or
jnp
jno
push
andb
aad
pop
cmc
mov
or
bound
mov
mov
inc
jmp
out
xor
mov
or
lock
out
inc
xor
or
jns
push
adcl
xchg
fisttps
mov
add
add
add
add
iret
sbb
pushl
jo
mov
in
jecxz
arpl
outsb
sbb
outsl
imull
scas
testl
add
xor
cmp
cs
ljmp
add
sbb
lods
leave
mov
pop
adc
sub
add
loopne
add
jp
clc
outsb
jp
xor
add
gs
mov
adc
mov
lea
outsb
pop
shl
lods
cwtl
cwtl
dec
and
faddl
or
imul
inc
jg
mov
and
xchg
ja
sub
mov
inc
dec
popa
add
fsts
cmpsb
sbb
sbb
inc
shrl
in
stc
pop
inc
mov
addl
cmp
add
xlat
sahf
mov
sti
ss
mov
iret
jnp
cld
sbb
push
mov
pushf
jo
fstpt
adc
inc
in
mov
mov
out
sub
sbb
js
add
add
add
popl
outsl
aad
mov
out
mov
popa
mov
mov
pop
fwait
add
push
pop
cli
xor
adc
cltd
dec
hlt
adc
cmp
test
push
inc
or
cmpsb
addl
or
popf
xchg
into
add
inc
fbstp
xor
dec
push
xlat
xor
std
ljmp
cmp
inc
rcrb
ja
and
adc
and
mov
out
mov
out
mov
into
outsb
dec
rcl
daa
inc
lcall
jne
rcrb
add
dec
notl
pop
jl
push
rcrb
cltd
fistpl
mov
stos
fsubrs
cmp
pop
lods
jmp
fisubrl
daa
imul
fiadds
bound
jmp
and
je
jns
lcall
xor
iret
cs
movsb
pop
jns
divl
in
sub
addr16
add
add
add
je
data16
ficompl
jle
push
pusha
inc
pop
cltd
pop
mov
out
xchg
int3
aaa
pop
mov
mov
push
test
iret
loope
adc
test
loopne
or
pop
xorl
pop
jb
js
dec
out
insl
je
sub
pop
jg
mov
mov
ja
pushf
mov
push
jbe
jo
pop
pop
sti
pop
jbe
mov
sbb
lret
mov
int3
shll
icebp
mov
mov
push
mov
fdivs
mov
sbb
je
movsl
inc
shrb
aam
repnz
jmp
sbb
test
mov
and
pushf
sub
fsubl
mov
xor
popa
mov
dec
imul
mov
loopne
xchg
inc
mov
sbb
fidivs
lds
sbb
call
sbb
sub
add
add
fisubs
mov
mov
arpl
addr16
add
add
add
pop
inc
enter
mov
aaa
fisttps
add
sahf
xor
pop
xchg
das
outsl
outsl
or
cmp
andl
aaa
mov
into
cmc
dec
sbb
cmp
dec
and
gs
movq
lcall
cmp
xchg
xor
scas
loop
xchg
pop
ja
call
leave
cmp
rcll
gs
and
in
mov
lret
push
fdivl
imul
shlb
cmc
lret
les
add
shll
add
push
inc
iret
adc
hlt
fisttpll
cmp
dec
rcrl
jns
es
sti
and
lret
xor
ret
orb
push
je
mov
outsb
push
mov
movsb
mov
popf
pop
pop
popa
repz
mov
fldenv
fimuls
sbb
add
cmc
test
std
lret
movsl
xchg
sub
test
lods
push
fwait
lret
pop
dec
data16
mov
sub
adc
add
add
mov
outsl
jne
ljmp
cmp
addr16
add
add
add
mov
xchg
push
cmpsb
pop
mov
adc
mov
ja
mov
mov
rcl
mov
fwait
xchg
mov
add
shl
fnstenv
popa
aas
ret
sbb
lea
jl
and
push
sub
sbbb
lock
test
inc
fs
or
mov
mov
sbb
jg,pt
incl
xchg
pop
outsb
jmp
test
ret
stos
aas
mov
xchg
or
jg
adc
cmp
das
xchg
or
popa
jns,pt
cmc
dec
xor
pop
dec
cmpsl
adc
adc
inc
shl
mov
cmp
ficoml
push
jae
out
into
pop
pop
clc
cwtl
ficomps
xorb
cmpl
lock
mov
out
jb
push
mov
pop
cld
clc
rcrb
pop
test
fiadds
add
add
testl
sbb
jl
add
add
add
and
jo
pop
das
sub
mov
cmc
mov
push
repz
mov
sbb
test
loopne
flds
mov
xor
in
or
lds
ficomps
test
loopne
sti
mov
jecxz
sub
mov
scas
xchg
mov
sbb
addl
dec
mov
loop
out
ds
mov
and
mov
xor
pop
outsl
ljmp
cmpsl
xor
ret
mov
sub
xor
or
imul
add
or
ficoml
sbb
sbb
mov
mov
popa
sbb
es
jne
sti
xorb
xlat
inc
js
push
aas
pushf
incl
mov
jae
mov
lods
ljmp
push
cmpsl
cs
lods
jp
push
cmp
push
ljmp
lret
adc
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
fsubs
out
fistpll
sub
jno
push
stc
add
rcll
mov
mov
pop
ljmp
hlt
dec
cmp
pusha
pop
lcall
sub
adc
add
or
es
dec
mov
aam
leave
pop
and
cld
xchg
es
xchg
ds
repz
or
mov
nop
outsl
test
xchg
fisubrs
decb
lret
push
inc
adc
inc
cmp
fbld
sub
sub
sti
sbb
inc
arpl
ds
xor
or
popa
scas
sbb
hlt
rcll
lahf
pusha
aas
jo
ljmp
dec
add
inc
stos
dec
enter
aam
out
subl
int
pop
pop
in
lcall
adc
add
jbe
or
ret
int3
test
bound
dec
xor
ljmp
xor
out
dec
dec
jb
flds
add
add
cmpsb
push
sbb
loopne
addr16
add
add
add
ja
mov
add
xor
xor
test
filds
iret
dec
ficoml
test
lahf
ret
xor
pop
lahf
mov
iret
leave
sbb
xor
or
xchg
jae
push
es
push
mov
dec
sahf
fdivrs
add
mulb
jg
into
push
out
add
movsl
sbb
push
aas
sbb
int
test
stos
cltd
xchg
and
push
mov
fsubs
mov
fimuls
xchg
lods
push
ds
mov
xor
adc
mov
loopne,pn
bnd
shll
scas
sbb
push
ret
inc
jne
sub
sub
scas
xchg
pop
fsts
sti
and
loopne
inc
popa
and
pop
in
jo
xor
mov
push
and
shrb
pop
int3
cmp
std
test
push
mov
jmp
xor
cli
mov
xlat
out
aam
jg
add
add
add
jp
cmp
bound
lcall
push
shl
mov
dec
pop
hlt
pop
add
inc
jnp
popf
jle
test
xor
adc
xor
mov
dec
jge
pop
ret
add
subb
push
mov
push
test
lods
and
dec
int3
repnz
ljmp
lods
int
mov
push
and
xchg
lahf
cmp
mov
jle
cmc
xlat
cmp
orb
ret
mov
mov
test
jge
mov
pop
les
or
adc
xchg
or
mov
dec
ror
shlb
addr16
aas
xchg
orl
or
jp
test
mov
mov
xor
cmp
lret
inc
xor
test
icebp
pop
outsb
inc
pop
cwtl
jg
adc
mov
jg
sarl
mov
cmc
push
std
test
lcall
adc
xor
add
add
add
sub
mov
mov
sub
insb
lods
sti
jae
jne
cltd
std
pop
inc
and
inc
andb
inc
sbb
sbb
scas
out
push
sahf
icebp
std
adc
jo
add
xor
and
bound
lods
cmpb
jne
add
adc
cmp
xchg
into
ljmp
stos
jno
mov
call
inc
dec
fidivrl
lods
sub
jns
test
into
adc
movsl
out
inc
sahf
sbb
mov
mov
lcall
sahf
enter
inc
sbbl
sbb
sub
fisttps
lcall
mov
stos
xchg
inc
fdiv
sub
imul
dec
lret
sbbl
push
shrb
jnp
jmp
stc
into
mov
inc
pop
icebp
fcmove
lods
lods
and
pop
inc
fldl
push
inc
push
fsubs
testb
daa
mov
ja
addl
add
jbe
cmp
pop
inc
push
test
jp
jbe
jae
incb
repz
sti
in
repz
jbe
dec
movsb
js,pt
cmc
lret
and
push
xchg
sahf
xor
out
andl
push
scas
icebp
cmp
into
fdivl
ja
std
jp
push
aad
in
scas
and
in
mov
push
adc
mov
gs
repz
lret
mov
mov
add
sbb
sti
dec
scas
push
xchg
fs
sti
mov
xor
and
xor
pop
dec
mov
adcl
dec
push
repz
pop
cli
sbb
push
lods
rclb
clc
pop
xor
add
adc
cmp
cltd
inc
movsl
jns
daa
loop
mov
imulb
daa
or
pop
xlat
test
aam
inc
sbb
inc
or
aad
sub
xor
scas
lcall
adc
sbb
test
add
addb
add
add
test
dec
daa
call
into
in
fwait
lret
xchg
rcrl
loop
cld
movsb
neg
add
xchg
je,pt
pop
mov
adc
testb
push
lret
enter
sarl
mov
pusha
repnz
mov
nop
ds
shrl
pusha
pop
call
fdivrs
add
and
push
mov
cs
mul
aam
int
xor
push
and
ja
sahf
out
fsubr
push
xchg
fmuls
repnz
fldl
mov
xchg
jns
pop
clc
jne
std
pop
mov
or
andb
inc
adc
mov
mov
stos
lcall
je
rcr
pop
das
mov
ss
mov
mov
add
dec
rcll
popa
xor
mov
sub
sbb
dec
jmp
jl
cs
idiv
jne
iret
repnz
add
add
add
xchg
sub
xorl
and
mov
dec
mov
rorl
xorl
sub
and
cld
cmp
add
adc
inc
xor
sbb
mov
inc
jmp
mov
loop
mov
and
xchg
add
xlat
imulb
cli
daa
and
int3
xlat
int
movsb
lcall
mov
mov
add
fists
jne
pop
jns
sub
daa
mov
xchg
or
mov
inc
adc
sub
dec
stc
loope
jge
add
xchg
pop
or
idivb
cltd
pushf
das
popa
in
mov
test
lret
jne
enter
adc
inc
rcll
repz
lock
lods
test
and
clc
push
inc
ds
mov
xchg
sub
rorl
pop
aas
addr16
pop
aas
xchg
into
inc
inc
mov
xchg
pushl
sub
cwtl
movsl
ret
test
add
add
add
cmc
inc
mov
nop
xor
ljmp
leave
iret
xor
ret
mov
jns
pop
pop
adcb
mov
sbb
sbb
hlt
sbbl
ljmp
xlat
lock
mov
ret
fisttps
sub
or
fidivrs
in
repnz
and
pusha
mov
xchg
scas
add
sub
and
subl
popf
push
xor
jae
aam
imul
dec
in
stos
inc
stc
sbb
xor
mov
js
in
mov
mov
sbb
inc
cli
push
adcl
sbb
dec
cmpb
mov
pop
daa
ret
movsb
mov
rcrb
das
push
fpatan
out
ds
add
push
fs
js
out
mov
and
jp
mov
daa
pop
mov
add
add
sti
iret
ss
push
jno
pop
push
add
add
add
push
das
fists
mov
jecxz
xor
lds
or
leave
jg
addr16
dec
push
xchg
add
jmp
aaa
sub
push
lcall
adc
cmp
add
gs
leave
xor
mov
mov
mov
clc
sub
mov
loop
int3
iret
lret
push
mov
push
sti
pop
js
andl
mov
sub
and
imul
adc
jo
shlb
or
data16
adc
cmc
aas
adc
fmull
sub
arpl
in
cmpsl
jnp
xor
inc
pop
jnp
fstpl
pop
mov
xchg
pop
push
out
and
lahf
jge
mov
movsb
sbbl
mov
mov
mov
cmp
aam
push
gs
pop
pop
repz
push
std
inc
shrb
jmp
lcall
aam
dec
and
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
mov
xchg
add
add
add
cmc
or
mov
outsl
or
mov
pop
out
push
aaa
push
xor
sti
hlt
clc
jb
lock
and
loopne
popa
es
daa
icebp
call
daa
je
insl
xchg
pop
push
xchg
loopne
in
stos
lret
cmp
into
fists
jg
mov
scas
adc
xchg
push
ret
arpl
adc
sub
mov
jp
jae
clc
pop
dec
adc
sbb
pop
push
out
orl
fiaddl
out
pop
fstps
add
shlb
fwait
adc
aas
mov
pop
mov
cmp
mov
in
mov
jp
aam
js
popf
adcl
jmp
mov
fs
call
shrl
pop
jmp
pop
mull
and
test
mov
pushf
xchg
add
test
sti
jmp
add
mov
mov
xchg
add
add
add
jmp
push
adc
dec
sbb
lock
push
out
sub
cmp
adc
in
sub
push
rorl
lods
leave
pop
movsl
jo
sbb
and
das
dec
and
inc
aad
out
das
mov
loop
aas
cmpsl
les
fcomps
xchg
jmp
fprem1
xchg
fs
mov
push
xor
pop
fimuls
xor
dec
pop
loop
cltd
and
jo
repnz
xchg
pop
lcall
adcb
mov
std
in
pop
in
adc
mov
mov
mov
imul
les
repz
shrl
mov
mov
inc
xor
jb
lds
scas
or
imul
add
cmp
mov
push
stos
pop
in
push
ja
cmpl
push
xchg
test
jg
loopne
sub
pop
repnz
xchg
mov
jbe
sub
scas
insl
dec
inc
cmpsb
inc
aas
adc
push
dec
test
add
add
pop
test
ljmp
lock
xchg
test
push
jno
mov
add
add
add
xchg
push
push
adc
out
and
mov
cmp
js
sub
jb
push
ljmp
add
push
pop
jge
or
cwtl
mov
ljmp
sbb
dec
popf
fwait
xor
es
dec
iret
mov
fsub
sub
inc
jo
scas
sub
mov
shrb
repz
in
cld
cmpsb
scas
lahf
lea
repz
das
shl
insb
mov
xorl
pushf
sbb
xchg
push
scas
cmc
outsl
out
orl
xor
and
lret
sti
mov
pop
push
inc
pushf
sti
sbb
mov
mov
sbb
rorl
sahf
pop
in
pop
push
aam
bswap
subl
inc
xchg
hlt
stos
cmpsb
subl
xor
sub
nop
sub
mov
lea
dec
popa
jp
cld
sub
imul
push
jnp
sbb
push
xor
mov
mov
add
add
add
or
lods
fsubr
jmp
les
sbb
pop
stos
and
mov
jge
loop
stc
sub
jge
xor
shll
enter
dec
mov
mov
sti
int
outsb
add
mov
fnsave
lea
push
lcall
inc
jle
mov
and
or
lods
sti
or
imul
into
es
clc
insb
dec
lods
push
xor
popa
int3
sbb
jle
mov
insl
jmp
insl
outsb
out
out
dec
xor
push
insl
sub
daa
mov
cmp
lret
push
fsubrp
cld
xor
outsl
std
out
mov
sar
mov
mov
cmc
and
cmp
mov
movsl
popa
jg
les
lret
cmp
cmp
or
xchg
push
out
cmp
mov
andb
pop
dec
out
popa
ret
data16
and
inc
xchg
jg
sti
cli
mul
aad
add
add
aas
or
mov
out
xor
mov
add
add
add
sbb
adc
scas
leave
cmpsb
sbb
sarb
mov
negb
repz
inc
jo
inc
sub
repz
dec
into
mov
std
fwait
jle
and
imul
arpl
mov
adc
and
int
stos
bsr
and
ret
insb
stc
or
idiv
nop
leave
adc
popf
sbb
fdivl
sub
xor
xchg
out
dec
mov
cmp
jmp
pop
test
and
inc
push
fiaddl
inc
pushf
ret
in
jp
shrl
cmp
xor
pop
xchg
shll
mov
testb
cmpsl
in
test
aam
push
push
addr16
jb
mov
inc
cmp
stos
pop
xor
icebp
out
shlb
aaa
enter
cmp
mov
and
jb
ja
cmp
popa
inc
insb
fidivl
bound
movsl
adc
add
add
add
mov
cwtl
out
pusha
mov
jmp
gs
sbb
mov
movsb
leave
and
test
add
insb
xchg
test
fwait
lods
push
ss
cmp
add
or
jo
xchg
dec
inc
dec
sbb
jno
negl
mov
push
mov
fs
pop
cmpsb
dec
mov
push
std
jae
sub
hlt
sbb
xor
or
aaa
mov
adc
jl
sbb
add
aas
xchg
and
cld
mov
cmpsl
call
adc
aam
and
cmpsl
ja
popf
leave
mov
push
xor
add
sbb
sbb
icebp
iret
mov
sub
loope
xlat
fwait
jns
cmp
aad
pop
enter
cwtl
sbb
stos
mov
hlt
lods
lods
xor
sarl
add
pop
inc
push
scas
dec
popa
xor
sbb
nop
orb
jmp
test
add
add
mov
jns
out
mov
add
add
test
xor
lods
sbb
push
pop
fildll
je
es
dec
rcl
in
cwtl
jmp
adc
stos
push
mov
int
cmp
or
lods
imul
mov
pop
cmp
nop
jmp
sub
aas
int
dec
xchg
mov
es
aam
cld
cmc
pusha
jge
dec
loope
ja
sbb
mov
jb
pop
mov
pop
xchg
shll
rcrb
clc
rcr
pop
jno
cld
cmp
jge
test
mov
add
cmp
xor
sbb
mov
repz
in
push
not
orb
and
jns
push
mov
push
stos
xchg
sub
in
pop
enter
cmp
test
cmpsb
pusha
jp
daa
xor
adc
aam
fcoms
repnz
or
movsl
cltd
jbe
fwait
bound
push
push
jp
scas
add
shl
pop
in
scas
mov
mov
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
sbb
add
add
add
sbb
pop
enter
mov
fwait
pop
scas
fcoms
loop
xchg
mov
xchg
adc
cmp
xor
loop
push
lods
and
push
adc
stos
roll
fs
xor
xchg
fstps
xchg
ss
sti
add
mov
roll
mov
dec
push
sbb
mov
sarl
lcall
adc
iret
popa
mov
pop
scas
jge
pop
adc
in
fcmovne
int3
push
xlat
mov
insl
bound
das
inc
cmc
pop
adc
stos
inc
or
sbb
iret
jns
push
dec
and
sbb
hlt
cltd
xchg
push
out
ljmp
sub
gs
mov
or
mov
push
mov
jmp
pop
mov
mov
dec
and
mov
cli
fprem1
sbb
pop
in
data16
or
test
scas
shlb
xor
adc
cmp
bound
add
add
adc
std
out
ljmp
mov
add
add
add
cmpsl
cltd
mov
repnz
sub
test
ds
das
pop
pause
dec
jo
xor
cli
clc
jbe
lods
aaa
stos
aaa
cmp
icebp
nop
imul
add
fwait
mov
out
mov
cmp
das
adc
or
cwtl
clc
nop
clc
pop
xchg
insb
enter
mov
cld
adc
movq
test
or
sub
adc
in
aad
sub
ret
adc
xor
adc
popf
cs
fistpl
lret
cmp
fistpl
in
arpl
insl
lcall
in
repz
or
push
jg
mov
fidivl
mov
hlt
jmp
xchg
out
out
push
outsb
loopne
mov
div
cmp
xor
push
mov
sbb
in
dec
adc
jae
shlb
add
add
mov
icebp
not
jnp
popl
add
add
add
fucompp
imulb
mov
mov
ss
mov
jecxz
lea
psrlw
lret
in
movsl
xor
aaa
push
cmp
mov
test
mov
movsb
aas
inc
fisttpl
jg
jecxz
jns
mov
scas
icebp
imul
sub
dec
addl
aas
fwait
cmp
pusha
xchg
mov
imul
sub
and
shrl
push
lahf
push
push
in
sub
loopne
rcr
cmp
lods
pop
cmp
dec
lcall
add
dec
adc
dec
es
stos
pop
adc
sub
int3
pushf
idivb
pop
stc
outsb
lock
push
outsb
mov
and
mul
jne
out
sbb
ljmp
flds
xchg
xchg
incl
enter
add
inc
or
test
fcomps
add
pop
push
addr16
add
add
add
mov
int
cmp
sub
jp
mov
insl
rclb
mov
xchg
xor
test
mov
mov
mov
je
jns
push
dec
adc
adc
or
push
dec
pop
gs
in
push
mov
xchg
push
mov
mov
sub
stos
sub
mov
dec
xor
sahf
jecxz
push
cmp
adc
pop
push
push
cmp
sbb
lret
shrb
xchg
inc
add
jge
or
cwtl
fstl
push
push
dec
mov
imul
mov
jns
sub
stc
iret
lods
nop
rol
popa
push
in
scas
xchg
popa
pop
cs
adcl
push
iret
ds
sbb
push
mov
mov
and
xchg
adc
repnz
push
push
mov
dec
stos
xor
inc
inc
mov
xchg
stc
pop
pop
push
inc
gs
and
add
ljmp
dec
mov
fidivrl
add
add
bound
jl
cwtl
mov
loopne
je
jl
sub
insl
jnp
add
jns
xchg
lds
cmp
mov
add
popf
stc
push
mov
in
push
mov
push
and
call
lcall
jge
push
ret
xchg
bound
sub
add
xchg
sbb
mov
bound
or
mov
jp
xchg
jno
into
cltd
mov
pusha
faddl
lret
and
iret
rorb
sar
and
pop
push
sbb
icebp
sbb
std
xor
scas
fimull
daa
or
lret
mov
cmpsb
lods
movsb
test
adc
dec
inc
imul
xchg
dec
sub
push
pop
cmp
add
sub
sahf
fsubr
popf
lret
push
lea
pushf
imul
repnz
mov
push
sbb
mov
push
cli
fdivp
pusha
or
add
aaa
shlb
cmc
div
testl
sbb
xchg
add
add
add
pop
jns
mov
mov
push
int
fldcw
pop
ss
jmp
mov
lahf
mov
adc
shlb
inc
rcll
repnz
lcall
push
icebp
lods
cmp
gs
or
jb
dec
or
cmp
outsb
ljmp
jmp
dec
pushf
inc
pop
mov
dec
scas
cmp
es
ret
shrl
xchg
push
movsb
daa
pushf
mov
sbbl
xorb
and
push
jecxz
jmp
pop
sbb
push
cwtl
mov
repnz
fstpt
mov
mov
ja
scas
fwait
cmpsl
aam
enter
pop
fmul
dec
ss
mov
mov
insl
mov
loop
sub
xor
xchg
xchg
ja
and
mov
imul
pop
into
mov
pop
mov
js
mov
cmpsl
xchg
cmp
movl
add
add
push
sahf
rcr
pop
adcb
loopne
cmpsl
push
add
add
mov
outsb
sahf
pop
lcall
fcomps
or
ret
xor
inc
fsts
ret
es
xchg
popf
and
out
aad
mov
in
popf
sbb
repnz
jae
push
lea
jmp
daa
js
mov
sbb
dec
iret
pushf
add
mov
mov
fsubrs
movsl
mov
mov
cmp
out
mov
pop
sbb
pop
cmp
icebp
fmul
or
and
mov
mov
int3
movsl
sti
dec
push
scas
mov
inc
inc
imul
bound
repnz
mov
adc
outsb
and
mov
xor
jae
dec
xchg
sbb
or
dec
addr16
outsl
jmp
mov
mov
in
push
jnp
xor
inc
cmp
jae
fstl
outsl
cmp
jnp
or
push
or
cli
stc
orb
xchg
insl
stos
mov
cmc
push
outsl
fsubrs
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
xlat
and
add
mov
sbb
pop
push
mov
and
cmp
and
jne
sbb
in
cltd
pusha
rorb
add
mov
popa
out
test
in
add
test
test
stc
jbe
and
cltd
mov
inc
sub
jb,pn
aad
addr16
outsl
add
out
es
mov
fldl
movsb
sub
test
cs
fistpll
mov
pushf
and
xchg
lods
xchg
push
cmc
push
pop
cmp
cli
ret
lret
cltd
outsb
sahf
jbe
pop
stos
addb
test
add
xlat
fcomps
fidivs
and
orl
adc
sbb
xchg
sbb
xlat
push
add
push
sbb
sahf
add
push
fldenv
out
mov
out
ljmp
mov
adc
in
dec
fimuls
nop
in
rolb
add
add
clc
jnp
jg
in
cli
enter
and
xchg
add
add
add
int
cmp
sbb
mov
push
daa
pop
and
xor
sub
push
add
in
cmpb
push
lods
in
mov
xchg
cmpsb
or
gs
jb
add
stc
js
aad
aad
jns
add
sti
arpl
lret
pushf
popa
mov
lret
cmp
ds
es
inc
dec
ljmp
mov
insb
mov
test
int
test
pop
jns
cli
add
jo
xchg
outsl
ret
lds
push
or
push
inc
jo
rol
insb
adc
add
mov
xchg
in
outsl
push
enter
int
sbb
sbb
std
cmp
or
scas
xchg
movsb
mov
test
add
test
inc
lcall
hlt
xchg
inc
dec
lret
pop
xorb
jb
push
in
mull
push
sbb
insl
add
fldl
add
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
mov
stc
xchg
cmpsb
loop
out
stos
pop
add
aad
test
adc
and
jmp
push
add
shll
das
mov
fists
sbb
data16
imul
xor
jb
mov
cltd
lods
dec
loope
mov
or
dec
ds
inc
mov
xor
jge
ljmp
push
mov
into
lret
inc
stc
jnp
ja
push
out
jecxz
dec
mov
jae
dec
inc
gs
in
insb
mov
or
std
repz
les
loope
rcll
or
outsb
mov
cmpsl
les
ljmp
adc
call
arpl
fs
addr16
scas
xchg
sbb
mov
mov
mov
cmp
ljmp
xor
ljmp
out
sahf
fdivl
pop
mov
rorb
add
add
add
jl
sar
std
jle
pop
popf
scas
push
shll
add
add
add
xor
rol
jnp
loopne
add
and
push
repnz
xor
jmp
mov
pop
sbb
mov
dec
sbb
call
xchg
and
mov
mov
call
xchg
loopne
mov
or
mov
cmpsl
je
movb
push
xchg
push
roll
ds
mov
pop
push
iret
mov
inc
pop
or
jg
mov
or
inc
std
rol
fbstp
pop
shrl
dec
js
adc
or
pop
or
jle
aam
fisubs
data16
aas
cs
ja
push
mov
loop
jnp
xlat
cmpsl
dec
pop
adc
sbb
out
mov
sarb
xor
push
dec
ss
cs
test
xchg
push
xor
enter
sbb
cmp
add
add
cwtl
or
stos
xchg
cmp
in
aam
dec
sti
addr16
add
add
add
mov
rorb
fwait
adc
enter
pop
push
dec
xor
xor
mov
out
es
jno
shrl
dec
xchg
ss
rcr
sbb
mov
dec
cmpsb
in
sbb
je
mov
test
shrl
mov
lahf
divl
stc
aas
ljmp
cs
xchg
mov
adc
jbe
ret
sti
cmp
popf
test
pop
in
add
idivl
nop
sub
dec
cwtl
inc
aaa
insb
scas
mov
xchg
dec
mov
mov
add
cs
and
pop
ret
mov
xchg
subl
xor
mov
adc
mov
hlt
call
movsl
mov
mov
or
in
cmp
adc
mov
mov
repnz
cmpsb
jmp
flds
sbb
lds
add
add
outsl
sti
mov
mov
decl
mulb
add
add
add
dec
adcl
jge
add
mov
xchg
pusha
jmp
mov
push
adc
add
jae
call
cmp
push
adc
hlt
xchg
loope
xor
push
pop
mov
lret
jnp
pushf
xchg
enter
out
cltd
mov
jl
add
inc
shlb
mov
xchg
out
and
scas
xlat
push
call
in
ljmp
mov
stc
xor
sbb
movsl
data16
sti
loope
xlat
adc
pop
mov
cli
adc
xor
sbb
movsl
scas
outsl
and
xlat
or
mov
xchg
sbb
outsb
insl
adc
adc
and
mov
imul
bound
pop
inc
adc
cmpsb
sbbl
aad
jns
mov
mov
rcll
pop
adc
testb
add
inc
stos
sbb
lahf
add
pusha
ljmp
add
add
dec
std
out
xlat
aas
dec
sbb
or
addr16
push
pop
push
jnp
jno
and
pusha
jmp
xchg
xchg
pop
int3
lret
add
pop
ljmp
xchg
scas
mov
outsb
sarb
out
movsl
ss
leave
xchg
and
sbb
xchg
mov
lds
dec
sbb
and
movsl
and
popf
ffreep
mov
add
mov
jns
cmp
movsl
ret
jno
xor
sub
adc
sub
clc
lds
pop
lock
cmp
pop
in
mov
pusha
stos
sbb
lock
cmp
adc
cmp
test
mov
cs
enter
stc
pop
add
inc
cli
inc
mov
shll
fwait
shr
ret
ds
stos
sbb
stos
fmull
subb
cld
push
inc
lds
in
cmp
or
mov
stc
rcll
dec
mov
in
gs
xchg
and
push
imul
outsl
vmwrite
jne
fwait
add
add
add
sub
push
les
pop
insb
std
lock
cs
stos
xor
mov
cld
clc
and
jo
ds
clc
insl
add
shll
mov
jns
ljmp
pop
shl
or
icebp
les
mov
inc
or
mov
adc
push
xchg
rclb
sbb
insl
bound
icebp
fcompl
cmp
aaa
push
aam
hlt
fwait
pop
mov
ficoml
sbb
mov
data16
dec
push
adc
idivl
xor
sbb
jb
push
dec
rorb
mov
cltd
push
lods
test
mov
push
inc
rep
sahf
mov
dec
or
cltd
jecxz
adc
push
insb
jecxz
movsl
dec
mov
pop
sub
dec
inc
mov
mov
push
push
outsl
mov
mov
inc
pop
test
or
sub
adc
sbbl
popl
outsl
mov
add
add
cmp
inc
imul
and
stc
mov
cmp
jmp
cmpsb
popa
mov
andb
inc
cli
or
lods
pop
cmp
pop
lahf
mov
in
addr16
js
je
push
sbb
lock
push
jmp
loope
mov
gs
sbb
mov
stos
ret
mov
mov
icebp
dec
pop
roll
orb
push
adc
inc
call
jmp
mov
pusha
pop
xor
sbb
xor
cmp
insb
mov
push
push
fsubs
pop
enter
cli
test
mov
imul
or
push
xlat
pop
xlat
push
lret
cmp
xor
or
fimuls
push
aad
cltd
mov
jl
mov
movsb
push
fdivs
push
pop
in
cmc
pop
adc
jno
les
add
add
inc
cmp
xor
add
mov
imul
movsb
and
add
sbb
add
add
push
jbe
mov
sub
sub
adc
jns
mov
or
mov
push
dec
cld
pop
push
loop
imul
fcompl
cmp
xor
cmpsl
mov
in
or
or
lret
xchg
xchg
insb
sub
adc
dec
push
xlat
mov
ret
xor
fcoms
pop
fcompl
test
jmp
push
fisubs
les
test
imul
int3
and
dec
inc
jae
dec
mov
jg
jbe
addr16
and
sti
aas
jmp
mov
imul
fcomps
sbb
dec
aaa
cmp
repz
sahf
adc
mov
push
xchg
mov
mov
aaa
and
mov
stos
repnz
mov
es
movsb
int
pop
sbb
cmovg
jb
add
scas
mov
cmp
jno,pn
pusha
nop
gs
pop
add
cli
mov
jge
jg
ljmp
in
lahf
mov
sahf
add
add
add
mov
or
mov
repz
outsb
pushf
sub
pop
test
fcmovu
sbb
aad
mov
or
xor
sar
dec
sti
or
stc
fs
lret
frstor
shlb
lock
pusha
adc
adc
pop
mov
int
or
mov
js
hlt
loop
mov
jmp
and
jg
jmp
mov
js
adc
push
inc
mov
bound
ret
shlb
mov
add
xlat
xchg
roll
push
mov
xchg
mov
adc
jge
repz
cmp
push
fwait
xor
fs
pop
fwait
and
dec
add
mov
out
add
jae
inc
call
fisttps
dec
lea
inc
mov
push
outsl
pop
aam
mov
cwtl
rclb
inc
push
mov
aam
jno
fwait
cltd
sub
out
inc
sub
or
cmp
add
add
add
xchg
pop
arpl
cwtl
jae
popa
or
pop
push
jmp
rorl
or
xchg
insb
lods
sbb
add
imul
cs
fdivrl
push
imul
dec
jp
sub
pop
jmp
out
lods
into
out
clc
out
or
ss
addr16
sbb
and
mov
lahf
test
pop
int3
or
xchg
out
stc
lods
mov
jl
fcomp
push
xor
push
es
stc
push
push
fnsave
jp
lea
add
cmp
lock
es
mov
mov
mov
bound
dec
and
cwtl
ret
lock
pop
mov
pop
inc
pusha
jo
mov
mov
inc
mov
xor
mov
push
or
mov
les
popf
mov
sbb
test
fsubl
adcl
add
loop
test
mov
cld
mov
addr16
add
add
inc
out
and
movsl
shr
jge
add
outsb
push
inc
or
aaa
test
xor
cmp
nop
mov
sbb
sub
das
adcl
pop
jecxz
pop
mov
xor
vpunpcklwd
pusha
or
xsha256
cmpsb
push
in
adcb
cli
push
cmp
lahf
insl
stc
add
mov
add
outsb
xchg
sti
rolb
nop
stos
sbb
push
call
xor
mov
jbe
add
xor
and
sub
out
fistpl
jmp
pop
mov
pop
inc
ss
dec
push
call
and
das
pop
xorl
dec
das
in
call
mov
test
lds
inc
lds
mov
data16
fdiv
hlt
pop
jne
sahf
sbb
and
jle
leave
lds
adc
add
mov
repz
repz
pop
sahf
xchg
addr16
add
add
std
mov
jne
push
lods
pop
xor
jno
push
arpl
mov
clc
mov
push
pop
xchg
jnp
add
sub
fcoms
and
aas
imul
push
inc
or
push
movntq
lock
mul
aas
out
xchg
stos
push
das
cmp
out
in
push
dec
sub
popf
aam
outsb
dec
mov
mov
icebp
out
dec
repz
nop
mov
dec
mov
movsl
nop
mov
iret
jne
inc
add
or
cld
and
xor
scas
aas
dec
imul
mov
pop
inc
jp
xchg
fwait
xorb
add
jne
jb
mov
lods
push
push
or
lock
xchg
scas
push
dec
pop
lds
cmp
in
adc
cld
ss
int
nop
pop
push
jno
lds
int3
aaa
xlat
movsl
sbb
fstl
xchg
inc
loope
mov
movsb
mov
mov
inc
inc
add
mov
add
sbb
mov
imul
test
push
pop
insb
inc
mov
clc
inc
mov
mov
out
lock
mov
mov
xor
shr
cmp
cmp
cld
cmc
add
sbb
push
pop
lea
mov
movsb
mov
or
mov
add
insb
fisubrs
jl
mov
jns
cmpsl
inc
push
adc
call
mov
mov
mov
jp
mov
movsb
rcll
iret
sbb
pop
xchg
mov
insl
popf
out
arpl
pushf
les
pop
mov
test
push
push
rclb
sub
je
fwait
cmp
ret
push
lea
imul
add
dec
in
inc
test
pushf
pcmpeqb
jo
ret
or
stos
test
imul
mov
lretw
scas
or
xchg
inc
jecxz
stos
push
jb
cmp
inc
dec
lock
jns
mov
or
sbb
inc
mov
mov
addr16
add
add
xchg
dec
rcrb
or
jmp
xchg
outsl
mov
push
sub
mov
jb
adc
lds
stc
xchg
xchg
popa
loopne
test
int3
fadds
cld
mov
push
ficompl
sbb
push
lds
mulb
mov
push
dec
test
jmp
add
sbb
enter
addl
jb
lcall
cmp
aas
or
insl
subb
pop
and
add
fisttpl
int3
mov
lret
inc
sbb
and
lcall
mov
fisubrl
push
fidivl
jo
adcl
stc
addb
sub
and
add
cld
and
jbe
mov
nop
lcall
mov
lahf
add
jo
lret
rcrl
popf
fucomip
fwait
les
sub
rcrb
push
inc
fdivl
push
dec
mov
movsb
add
add
add
insl
int3
aaa
stos
data16
lret
mov
leave
dec
xchg
movl
pop
imul
sti
leave
jb
jp
scas
mov
mov
adc
dec
out
cmp
loope
mov
pop
ret
repnz
lea
sub
iret
inc
movsl
mov
movsl
movsl
xlat
imul
movsb
movsb
cmpsb
cli
outsb
jg
or
xchg
dec
lods
sbb
popf
jge
push
adc
inc
fcomi
mov
or
push
cmpl
bound
mov
jmp
dec
or
xchg
loopne
daa
xorl
push
inc
and
iret
movsb
and
cmp
fldenv
inc
arpl
test
inc
cld
adc
inc
jl
adc
push
sub
in
into
data16
or
jecxz
mov
in
and
mov
dec
lret
icebp
lds
push
out
push
jnp
notl
push
pop
xchg
outsb
mov
or
add
add
sbb
mov
sbb
das
and
add
add
stos
stos
arpl
aaa
scas
add
jg
in
mov
imulb
ja
adc
and
add
sahf
jne
popf
js
filds
int3
push
adc
addb
add
mov
dec
add
popf
adc
scas
mov
mov
loopne
dec
dec
nop
les
inc
lret
cli
xor
mov
jne
out
mov
icebp
xchg
rolb
ss
icebp
out
mov
sub
sbbl
and
jecxz
mov
dec
adc
sub
xchg
icebp
dec
ror
scas
arpl
sahf
or
scas
fstpt
mov
mov
jg
shlb
aaa
xor
push
sbb
pop
sti
push
lcall
fiaddl
mov
and
add
mull
dec
stc
dec
ficoml
insl
loopne
xorl
jne
push
rsqrtps
cwtl
xchg
mov
add
pop
test
stos
hlt
jmp
cmp
jbe
mov
mulb
add
add
add
cmp
xor
lcall
inc
loop
add
adc
fs
sub
pop
add
add
mov
xchg
stc
sub
mov
jnp
pop
push
pushf
mov
lret
xchg
sub
js
das
sub
pop
mov
sub
push
loopne
outsb
mov
cld
test
loopne
mov
push
cwtl
add
scas
and
mov
lret
xchg
stos
add
loop
mov
jae
je
dec
clc
adc
dec
and
fnstenv
add
lahf
lock
xor
sub
std
rep
and
xor
iret
int
das
mov
pop
inc
outsb
orb
cli
jbe
push
stos
fwait
cmp
push
xlat
mov
jp
rclb
cmp
mov
mov
jnp
cli
shlb
fimull
dec
xchg
imul
sbb
xchg
add
mov
mov
add
out
xlat
out
jg
in
xor
fldenv
cwtl
dec
movsb
cmpsl
add
add
add
add
inc
dec
mov
test
pop
popa
jne
jl
xchg
cmp
cld
call
aaa
xorl
cmp
mov
pop
test
dec
inc
jns
pop
jl
or
xchg
fstpt
lret
sub
movsl
lret
jnp
loopne
outsb
push
adc
xchg
mov
and
adcb
dec
arpl
jnp
lcall
stos
aad
adc
int
sub
or
or
lret
fpatan
sub
push
mov
mov
idivl
mov
inc
jl
xor
and
push
insb
add
xchg
std
or
fcompl
push
sbb
adc
inc
call
ffreep
or
clc
mov
or
in
or
insl
sub
loopne
push
leave
insb
jne
mov
add
mov
jge
mov
out
js
pushf
mov
xchg
jae
inc
and
add
add
sbb
pop
fbstp
fldl2e
stos
mov
addr16
add
add
add
lods
pop
outsb
shll
sbb
mov
xor
pop
aam
sar
inc
mov
addb
les
and
sub
xchg
dec
pop
movsb
mov
sub
and
sarl
jp
xchg
sbb
mov
and
mov
jl
daa
sahf
fwait
jmp
pop
fisubl
mov
stos
cld
ret
hlt
push
or
sarb
movsb
mov
test
add
add
adc
pop
lret
sbb
mov
test
inc
mov
lret
add
bound
testl
pop
push
test
test
aaa
push
pop
out
adc
sbb
test
jo
in
sub
and
push
adc
test
hlt
enter
outsl
cld
jo
leave
and
fcoms
jnp
sbb
dec
jge
dec
stc
xchg
pop
pop
scas
ffree
aad
add
add
mov
fadds
addr16
add
out
sbb
hlt
lods
ret
nop
stos
sbb
icebp
movsb
or
outsb
loop
rclb
ljmp
or
pusha
loope
icebp
add
mov
cmpsl
xchg
fnsave
stos
dec
sub
out
lods
int
inc
mov
push
push
jo
out
ficompl
push
mov
lds
xor
jl
jnp
or
stos
jecxz
in
mov
pop
xchg
or
in
bound
dec
mov
mov
std
and
leave
vpminub
pop
jb
pop
popa
adc
mov
les
adc
xchg
loopne
dec
movsb
cmc
cmpsl
add
xchg
and
jns
gs
or
inc
pop
cmp
in
in
jle
stos
ret
insb
ja
and
cli
jg
fisubl
pop
lods
add
mov
push
xor
movsl
push
pop
outsb
cmp
sub
push
add
push
lret
jnp
sti
jmp
push
mov
not
mov
add
add
add
lods
xchg
lock
mov
inc
std
enter
xor
sbb
imul
pop
adc
xor
push
xchg
or
mov
add
lret
pop
fistps
ja
loop
cmp
dec
movsl
or
mov
call
pop
in
jg
add
sbb
repnz
lret
ds
inc
stc
adc
test
and
test
int
lock
shrb
hlt
dec
sub
mov
pop
das
int3
pop
sahf
loop
sub
jne
xor
shr
ret
sbb
adc
test
lcall
lods
or
or
adc
popf
dec
push
lods
insl
into
ljmp
sub
xchg
jp
imul
sbb
adc
ret
cmp
inc
fs
pop
cltd
inc
lds
mov
push
aas
test
test
filds
push
out
push
loopne
enter
add
jecxz
lock
shl
stos
add
add
add
aad
mov
cli
dec
in
cmp
adc
sbb
jnp
pusha
mov
inc
les
inc
ds
xchg
xchg
jns
into
idivl
xor
push
test
repz
ss
push
orl
push
cmp
mov
add
jne
cmp
pop
ret
jns
in
call
lock
push
rcll
mov
mov
faddl
xchg
or
dec
js
push
roll
cmc
add
and
sub
mov
or
stos
jle
stc
pop
shlb
mov
ficomps
add
pop
adc
mov
stos
gs
and
sub
js
mov
inc
pop
xorb
add
jo
inc
addr16
and
inc
dec
scas
mov
clc
sbb
fsubrp
jae
in
js
addr16
stos
xchg
fistpll
pop
add
scas
std
mov
js
or
mov
dec
pop
mov
dec
xor
xchg
sub
mov
cld
mov
leave
mov
lods
add
add
add
mov
scas
xor
jo
mov
and
pop
xchg
push
dec
movsb
cli
push
and
test
jl
mov
mov
or
jne
sti
loop
cmp
sti
mov
fstpl
dec
mov
outsl
std
and
loopne
lahf
xchg
push
je
testb
arpl
std
mov
aad
jge
cmp
das
mov
int
rclb
outsb
xchg
sahf
dec
out
sub
dec
ret
std
stos
and
fdiv
pop
mov
sub
jp
mov
nop
adc
lcall
add
mov
ss
xor
pop
add
push
cmp
ja
xchg
stos
and
mov
push
sub
out
pop
ja
dec
mov
imull
fisubrl
repz
mov
psllq
mov
mov
dec
mov
add
add
out
cmc
mov
pop
jp
push
lods
add
add
add
sbb
dec
mov
inc
mov
lret
lahf
cmp
iret
subb
inc
and
adc
add
or
cmp
mov
lea
dec
xor
push
daa
inc
mov
adc
call
push
mov
jge
xchg
nop
mov
dec
inc
push
mov
aaa
mov
lods
push
inc
clc
adc
jl
push
push
movsl
movsl
xchg
dec
inc
sub
test
and
dec
inc
repnz
cmpsb
fcomps
lret
cmp
or
push
ror
and
sbb
lods
sti
sub
dec
lods
hlt
xchg
jmp
or
xlat
jp
movsb
adc
and
test
adc
adcb
aas
xchg
sahf
int
add
inc
push
sahf
fstps
loop
lret
fdivrl
adc
jle
ja
mov
mov
and
push
mov
push
ficoms
setno
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
adc
mov
add
add
add
mov
test
outsl
int
jne
mov
std
mov
jbe
loop
add
insl
add
testl
mov
sub
dec
mov
test
xor
xor
in
into
sbb
mov
add
das
into
jo
lret
push
inc
mov
xchg
jmp
cltd
or
loopne
loope
mov
jge
imul
leave
adc
sarl
xchg
icebp
cmpsl
mov
stc
fs
sub
xchg
js
cmc
fcompl
jb
jae
test
sbb
sub
lret
jno
xorb
or
hlt
adc
popf
mov
lods
add
xchg
test
mov
or
dec
push
mov
jl
cmp
sti
xchg
mov
push
int
jp
scas
addr16
lcall
mov
sbb
or
cli
inc
iret
and
jge
push
pushf
popa
fidivs
loop
ljmp
int3
shlb
add
add
pandn
movsl
rcr
xor
mov
js
sub
dec
dec
sbb
cmc
xor
dec
out
add
addr16
pop
xchg
mov
test
xor
cmp
and
fldenv
pop
and
push
push
pop
xchg
lods
jno
addr16
adc
push
push
lds
loop
scas
pop
cmp
mov
add
inc
js
scas
dec
jo
leave
movsl
mov
outsl
cs
adc
pop
push
jecxz
enter
mov
or
push
ss
push
loope
addr16
addr16
inc
push
daa
mov
xor
xor
inc
mov
mov
test
iret
xchg
jae
imul
out
lds
ds
dec
inc
or
movl
mov
pop
loop
xor
aad
les
aad
divl
lea
std
les
add
add
xchg
jg
jmp
std
mov
xchg
sbb
addr16
add
add
add
jne
push
xlat
pop
add
call
int3
push
and
or
test
jmp
inc
sarb
push
pop
dec
xor
xor
mov
popf
popa
sub
pusha
inc
adc
mov
idivl
lds
dec
dec
xchg
fistps
jge
dec
data16
add
out
push
mov
mov
sub
sbbl
pop
nop
mov
mov
push
sub
movsl
enter
pop
cmp
pop
int
add
test
movb
push
dec
jnp
mov
and
sub
daa
out
mov
ljmp
push
pop
mov
jecxz
cmp
nop
pop
inc
or
fcom
pop
push
xchg
lds
add
or
xor
mov
jb
add
jb
pop
ss
inc
aaa
mov
add
xor
inc
mov
mov
add
add
add
inc
stc
pop
data16
jl
pop
sbb
out
push
sbb
push
fdivrl
xor
aas
aas
sub
push
imul
daa
fiaddl
das
shrb
aam
gs
test
daa
shll
loopne
dec
xor
test
rcll
leave
orb
jno
xorl
mov
jecxz
jo
and
movsl
xor
in
add
aaa
mov
aas
or
js
sbb
outsb
mov
dec
mov
xchg
out
mov
mov
xchg
jb
and
mov
outsl
pushf
fsubp
mov
imul
sti
bound
adc
das
shrb
mov
psadbw
rcl
add
cmp
les
adc
out
dec
mov
pop
addl
add
into
cmpsb
outsb
jb
push
pop
xor
cmp
inc
call
mov
add
add
add
lds
addr16
push
enter
enter
shlb
adc
lret
jnp
sbb
sar
cmp
cld
lods
mov
fsubrs
jb
sahf
mov
fwait
add
push
loopne,pt
stos
fnstsw
sbb
movntq
out
xchg
xor
movsb
ja
jo
mov
cmpl
loop
mov
ret
xor
xchg
fcoms
std
dec
xchg
pop
add
out
dec
addr16
jnp
jecxz
movsb
hlt
fcompl
cmp
add
cltd
cmp
mov
sub
push
and
push
mov
les
mov
inc
mov
pop
out
loopne
mov
and
int
out
scas
push
mov
call
mov
outsb
mov
mov
xlat
xchg
popf
pop
fs
jmp
imul
leave
fsts
scas
pop
frstor
sbb
pop
inc
les
aaa
push
adc
xchg
jg
and
mov
fcmovnbe
mov
aaa
adcl
add
add
jp
les
mov
arpl
mov
add
add
add
enter
pop
mov
cmpsl
lds
lock
cmp
adc
push
pop
cltd
fwait
jae
push
inc
mov
test
cmpsl
pop
xor
sub
adc
xor
cmp
pop
jmp
repz
or
lds
lock
mov
insl
pop
mov
adc
xor
push
pop
outsl
sbb
push
mov
xchg
inc
mov
fs
mov
adc
movsl
or
sti
js
inc
or
repnz
fstl
cmp
loope
std
addr16
es
hlt
add
cwtl
or
xor
insl
ret
notb
mov
cmovnp
mov
std
out
fldenv
ud0
or
inc
inc
add
pushf
stos
loope
mov
lods
repnz
sbb
leave
adc
add
xor
inc
in
inc
sub
add
add
clc
pop
stc
out
push
pop
bound
andb
add
add
add
jbe
call
aad
sbb
dec
xor
sbb
pop
sbb
stos
inc
xor
scas
sbb
xor
aaa
mov
or
jp
mov
dec
fimull
sbbl
fistpll
lock
in
mov
lcall
cmc
xor
dec
insl
and
mov
xor
pop
lds
xor
hlt
mov
pop
sub
cwtl
xchg
and
lret
jl
fisttps
and
shrd
xor
outsl
pop
push
test
mov
sbb
imul
les
pop
push
mov
enter
mov
sbb
in
sbb
xlat
cs
jbe
das
or
shlw
or
flds
xchg
pop
mov
inc
js
in
insl
cmp
not
stos
cwtl
sbb
stos
jl
popf
push
mov
cmc
add
xor
out
dec
mov
fsubr
pop
outsl
out
mov
add
push
mov
lcall
push
addr16
add
add
add
sti
dec
shl
inc
inc
das
xchg
imul
outsl
cwtl
mov
and
aaa
dec
and
lea
faddl
mov
cmp
mov
cld
inc
cltd
mov
cmp
sarl
inc
push
jle
or
mov
or
popa
aas
jae
xor
icebp
dec
popa
xchg
btr
stos
or
dec
test
lret
push
rolb
out
mov
cmc
and
fstps
popa
mov
or
jle
xchg
ss
mov
lods
sub
int
dec
shl
cmp
repnz
fs
loop
sbb
xchg
add
mov
push
or
mov
js
lods
sbb
addr16
add
cwtl
out
sub
scas
repz
push
mov
scas
std
mov
stc
adc
andb
icebp
lea
cmp
adc
sub
add
xorl
insb
lret
or
addr16
add
add
add
or
and
jns
jo
add
mov
movsb
xchg
jmp
pop
pusha
push
mov
inc
stos
insb
xor
ret
pop
mov
mov
test
sbb
aaa
pop
neg
push
in
sbb
aas
in
push
rcrb
adc
out
push
and
fs
jl
sbb
cmpsb
push
out
jecxz
test
hlt
bound
cmp
popl
mov
add
fsts
xlat
mov
xlat
cmp
cmp
mov
pop
mov
enter
mov
inc
jecxz
lahf
test
jl
es
mov
pop
xchg
mov
jg
fisubl
ret
inc
mov
sti
stos
lods
inc
inc
add
and
js
cmp
call
push
and
lret
sarl
inc
sbb
xchg
mov
xor
sbb
fimull
leave
fldenv
arpl
mov
enter
xor
sub
dec
pop
pop
sbbl
fstp
rorl
pop
mov
add
add
add
rorl
loop
mov
pushl
roll
out
rclb
gs
sbb
out
test
cmpsl
call
imul
xchg
mov
ffreep
ss
pusha
dec
inc
inc
lret
jge
icebp
jg
scas
jmp
cmp
cmpsl
mov
insl
ret
push
sub
rcrl
pop
mov
add
dec
cltd
into
jns
add
cltd
std
lock
jp
cltd
jecxz
test
daa
cmp
inc
mov
movsl
insb
test
mov
notb
push
adc
mov
or
lds
sbb
mov
dec
clc
out
out
mov
dec
inc
and
pop
add
sub
rcl
es
pop
popf
lock
jno
inc
testl
mov
inc
hlt
std
mov
pop
repz
cmp
add
andb
loope
mov
jecxz
out
mov
test
mov
add
jle
push
arpl
inc
jno
ja
jle
jmp
leave
add
les
iret
inc
xchg
test
or
add
ret
jl
adc
mov
and
mov
insb
dec
repnz
mov
mov
xchg
jne
mov
pop
or
xchg
popf
fiaddl
clc
pop
or
mov
lea
cmp
add
cltd
fadds
test
inc
pop
fdiv
xor
test
or
ret
xor
cld
in
inc
es
in
cmp
jecxz
fistpl
adc
and
dec
sub
push
mov
pusha
outsl
and
jnp
sub
push
lods
and
movsb
test
mov
pop
add
sbb
jg
test
add
inc
jp
dec
dec
mov
dec
cs
aaa
inc
out
adc
xor
pop
add
add
add
std
test
jg
into
lret
orl
add
add
push
test
jg
aad
fprem
adc
mov
dec
inc
imul
sahf
fdivs
mov
test
sbb
jmp
or
inc
mov
or
mov
xchg
aas
rol
mov
insl
fildl
cmpb
mov
das
into
nop
sub
xor
movsb
cmp
dec
aas
push
and
cs
lods
test
jmp
cmp
mov
mov
inc
out
in
or
in
dec
and
lods
mov
shl
inc
mov
push
adc
xchg
or
cwtl
loopne
pusha
jnp
push
xor
imul
cmp
lret
add
lods
jecxz
jae
dec
insb
flds
sbb
movsb
sbb
cmp
movsl
mov
js
mov
and
stos
inc
loopne
out
rcr
push
dec
icebp
jmp
mov
lock
in
lcall
jae
dec
mov
frstor
add
add
xchg
sbb
popf
sub
mov
mov
xor
out
add
mov
cmpl
ret
push
imul
in
popa
lods
adc
les
dec
nop
pop
movsl
pop
mov
mov
xchg
test
popa
pusha
loop
imul
loope
push
insl
inc
lcall
sbb
addr16
stc
in
inc
mov
xchg
test
lahf
inc
notl
mov
cli
mov
pop
vpmovd2m
jo
xchg
ljmp
in
loope
fwait
inc
repnz
dec
jno
mov
es
shrl
add
movsl
cmp
xchg
mov
imul
jg
sub
clc
cld
jns
popa
loope
mov
ret
pop
push
mov
cmp
mov
testl
xchg
fidivs
test
dec
test
nop
or
repz
add
dec
or
jg
dec
arpl
and
add
add
add
sti
push
nop
aad
daa
jb,pn
push
aam
fistl
andl
adc
imul
mov
int
xchg
sbb
test
mov
xchg
rcrb
jae
xchg
mov
test
adc
es
aam
stos
mov
sti
adc
or
mov
jb
add
and
loopne
into
mov
int
movsb
add
cwtl
jae
int3
jne
outsl
lds
add
test
sbb
push
test
mov
jl
mov
loop
andl
outsl
mov
popf
sbb
enter
jno
shll
push
sbb
aas
push
push
inc
shll
and
icebp
movsb
xor
repz
js
sti
pop
push
inc
andb
xchg
sbb
into
mov
cld
insl
sbb
outsl
mov
or
mov
add
test
pop
pop
lods
fwait
mov
popa
mov
mov
mov
jle
cmc
and
sbb
ret
mov
fimuls
cwtl
scas
rcrl
mov
incb
push
dec
insl
cmp
mov
push
add
add
xchg
mov
arpl
xchg
lds
sti
cmovs
xor
sti
subl
sti
inc
ds
ljmp
fidivrl
mov
or
call
jmp
ss
lret
outsl
xor
lods
rorb
les
xchg
xchg
mov
hlt
lock
ljmp
dec
xchg
leave
aad
sub
cmc
xchg
shr
inc
repz
ja
and
adc
scas
inc
mov
ljmp
inc
xchg
scas
movsl
add
inc
xor
outsb
ljmp
mov
popl
xor
mov
pop
xor
stos
or
add
add
add
cmp
xchg
imul
ret
add
adc
xor
rclb
test
fwait
lcall
aaa
lret
jle
mov
lcall
in
push
xchg
and
cmc
ret
cmpsl
movsl
call
cmp
loope
inc
cltd
fdivs
in
push
push
mov
out
lea
gs
jecxz
sbbl
mov
sbb
jbe
pop
and
movsl
adc
cmp
cmc
inc
dec
dec
sahf
mov
jl
mov
xchg
out
lods
jl
loop
scas
rcl
stos
movsl
inc
cmp
fxam
shrl
arpl
add
icebp
sbb
arpl
xchg
sbb
enter
xchg
cmp
test
in
movl
test
ss
lret
adc
in
add
add
fistpll
call
xchg
push
push
addr16
add
pushf
pop
fmuls
ret
rcr
icebp
popa
sbb
out
jmp
iret
repz
adc
lock
pop
and
adc
and
dec
adc
jecxz
pop
mov
cmp
mov
test
mull
xorb
sub
pop
mov
xlat
cltd
mov
pusha
jp
ret
mov
cld
or
enter
cmc
adc
das
and
mov
out
xor
in
nop
ljmp
dec
xlat
dec
jnp
data16
add
push
mov
pop
ficoms
push
push
inc
out
scas
je
jmp
sub
div
sarl
or
outsl
add
les
sbb
jno
fdivrp
ret
test
pop
dec
or
sbbb
or
cli
cwtl
inc
xor
test
repnz
out
add
ss
jne
sbb
sub
jecxz
pop
fnstcw
sub
into
std
sti
leave
sti
iret
jmp
ja
mov
add
add
mov
aaa
aas
sahf
sahf
mov
jmp
cmp
divb
pcmpgtw
xor
out
loope
cmp
out
and
sbb
and
test
scas
xchg
mov
ds
icebp
dec
mov
jmp
out
mov
lahf
icebp
and
dec
xlat
shlb
in
sar
push
ljmp
jb
popf
lret
seta
outsb
xchg
fildll
add
jns
enter
xlat
lahf
cmp
xchg
adc
xlat
mov
in
or
aaa
or
mov
outsl
loop
ja
cmc
sub
into
xchg
mov
in
jne
cmc
popa
cmp
loope
adc
ds
cli
mov
xchg
push
mov
and
arpl
xchg
or
aaa
cmc
test
out
xor
inc
ret
jno
stos
push
inc
mov
mov
xor
jmp
dec
rolb
add
add
jecxz
pop
fcmovb
lea
lret
inc
ss
cmp
fucomp
sub
push
or
mov
xchg
add
and
mov
ret
jb
in
and
jl
sti
mov
dec
scas
inc
rcl
popa
imul
mov
mov
stos
clc
and
pop
and
ja
outsb
mov
and
out
xchg
stc
lods
icebp
mov
jmp
scas
popa
adc
sub
dec
daa
and
add
push
popf
stos
xor
sub
negb
fisttps
fwait
mov
mov
pop
sub
push
sbb
fnstenv
add
call
hlt
push
push
int3
aad
jl
mov
or
sub
add
das
iret
cli
int3
arpl
scas
mov
or
add
test
ja
mov
mov
addr16
call
cmp
cmp
repnz
rcrl
cmp
minps
pop
fwait
mov
or
jg
mov
sahf
loop
mov
roll
add
add
jnp
xor
jecxz
es
pusha
mov
iret
addl
insb
fwait
subl
in
test
push
inc
rcr
std
pop
int3
jle
xchg
out
mov
in
push
xor
jne
sub
mov
or
ss
xchg
sti
dec
sti
cltd
adc
scas
mov
adc
jns
inc
push
add
lahf
std
jecxz
imul
mov
mov
pop
fstpl
xor
shll
call
enter
ret
test
loope
lahf
jp
mov
inc
notb
pop
add
xor
sbb
inc
and
adc
insl
dec
out
push
gs
es
sbb
test
sbb
les
pop
push
testb
sbbl
cmova
mov
sub
push
test
js
das
loop
push
push
shrb
clc
addr16
std
add
out
insl
cmpsb
dec
adc
add
add
inc
enter
pushl
cld
sbb
addr16
add
add
inc
fldpi
and
inc
push
les
adc
daa
or
or
inc
pop
mov
add
loop
ret
arpl
fmul
in
push
xchg
cmp
mov
pushf
stc
mov
daa
xor
push
mov
scas
bound
daa
shrb
ffreep
xor
mov
or
pop
pop
cmp
lods
ja
aas
mov
mov
cmc
out
sub
dec
jge
fwait
notb
push
adc
fisubl
or
add
or
outsl
sbb
int3
je
dec
dec
pop
lcall
lcall
js
jmp
pop
fxch
inc
dec
xor
ret
hlt
out
add
xchg
fdivrs
xor
popa
out
xor
mov
pop
mov
mov
xchg
shlb
stos
xchg
ljmp
xchg
push
mov
sbb
sti
in
aam
dec
mov
xlat
pushf
shrb
lcall
jmp
nop
mov
add
add
xchg
pop
dec
mov
pop
ret
into
or
out
mov
leave
loop
lcall
das
jno
stc
mov
mov
stos
xchg
cwtl
out
ficoml
ds
mov
xchg
xchg
cld
roll
loopne
jne
xor
ss
idiv
adc
dec
ret
cmc
aas
mov
lret
lods
shlb
int
out
pop
dec
stc
inc
cld
iret
mov
inc
jne
fadds
cmc
mov
dec
rcl
xor
mov
or
xlat
xor
orb
outsb
cmp
daa
add
mov
aaa
push
jp
dec
dec
pop
movsb
fmuls
and
jnp
xchg
push
mov
test
dec
sub
insl
fcompl
std
pop
xchg
dec
or
repz
xor
repz
ja
adc
stos
in
cmc
rcll
enter
cmpsl
fs
sub
push
jmp
jle
mov
inc
adc
add
add
test
mov
aas
scas
flds
cmc
xchg
les
add
add
add
rcll
jmp
mov
loope
inc
jge
mov
lock
fnsave
and
fs
je
test
pop
xor
mov
xor
adc
xor
iret
cmp
movsl
outsb
ljmp
arpl
pop
or
pop
adc
repnz
mov
sub
mov
sbb
jb
lret
mov
xchg
mov
mov
fldl2t
aas
sub
dec
mov
add
cmp
inc
cmc
jle
xchg
out
pop
out
jo
jp
fidivrs
dec
fwait
das
push
lcall
mov
mov
push
das
adc
fcomps
cmp
out
and
insb
cmpsl
xor
fs
jae
sti
notb
les
inc
pop
scas
mov
and
dec
sub
jb
loop
popf
jns
jno
in
push
sti
dec
jmp
dec
sbb
aam
jg
jne
jne
jg
loop
mov
call
add
add
prefetcht2
bnd
in
mov
hlt
add
push
xor
jbe
bound
orl
incb
negb
leave
nop
inc
mov
enter
sub
aad
cmpsl
je
sbb
ds
mov
mov
sub
or
bound
xchg
mov
daa
mov
sbb
mov
cmp
push
daa
push
dec
dec
push
add
ret
pusha
xchg
and
lret
add
cmpsb
test
xchg
cmp
aam
shl
test
sub
shll
mov
dec
cmp
pop
cmp
xchg
mov
and
test
sbb
xor
insl
pusha
pop
push
xchg
nop
jmp
imul
popa
dec
in
inc
aaa
rcl
pop
ret
and
rorl
mov
jae
sarb
sbb
mov
cmc
mov
imul
add
jmp
mov
lods
cmc
xchg
sar
xor
xchg
nop
or
ljmp
inc
push
test
cmp
mov
loopne
jge
sbb
add
jp
loope
in
lcall
in
enter
sahf
stc
xchg
push
jnp
inc
jb
jg
pop
mov
inc
int
pop
out
push
cmpsl
mov
test
dec
inc
into
pop
sub
cld
sbb
push
inc
xlat
xchg
je
xchg
mov
inc
scas
adc
sub
add
data16
dec
cs
or
pop
flds
mov
and
mov
sub
adc
cltd
cmc
hlt
jmp
sub
mov
enter
not
add
das
lea
add
mov
andl
fs
fdivr
fdivrl
rcl
dec
adc
dec
mov
jl
fidivl
cwtl
stos
sarb
lods
inc
mov
mov
mov
dec
and
or
mov
int3
outsb
cmp
testb
add
add
outsb
jle
lods
testl
movl
add
jmp
push
xor
jno
faddl
lahf
and
gs
mov
mov
inc
add
dec
sbbb
mov
pop
push
movsl
test
das
sbb
push
fs
int3
imul
sbb
jecxz
push
sub
push
mov
and
add
repnz
jb
ds
fnstcw
pop
repz
push
jae
cmp
xchg
aad
movsb
rorb
stos
push
jns
sbb
sub
sti
popl
mov
shl
xor
pop
ljmp
dec
pop
cmp
cld
mov
fnsave
dec
mov
xchg
rcll
sti
pushf
hlt
xchg
add
push
bound
cli
loopne
iret
shrl
outsl
loope
popa
mov
stc
shlb
imul
mov
roll
mov
xchg
adc
sar
fdivrl
leave
xor
xor
test
mov
mov
add
out
and
add
add
add
lret
insb
int3
int
sub
clc
fucomi
pop
pop
fs
mov
or
in
xor
lcall
ret
cli
push
outsl
shl
pop
fs
in
lds
xor
lahf
push
cmp
pop
imul
cmp
add
mov
rclb
adc
jae
inc
cmp
sbb
lea
fdivl
jl
or
push
fs
push
xor
insl
jge
clc
insl
addr16
outsl
cmpsl
sub
mov
or
lds
jp
rorb
mov
pushf
push
lods
fisttps
xchg
cmp
mov
orb
adc
cltd
push
pusha
or
xlat
mov
mov
mov
je
jge
pop
pop
push
xor
data16
outsb
sbb
imul
popf
sbb
jb
ret
add
jnp
inc
test
fmull
add
add
out
sti
xlat
in
aad
mov
jb
addr16
add
add
add
jp
push
aam
sbb
cmpl
sarl
das
lods
mov
aam
shrb
push
mov
jle
fcompl
pusha
into
jg
test
push
cli
xor
and
lods
inc
dec
shll
ftst
jno
ds
jae
lods
lea
aad
ss
mov
sub
pusha
lahf
push
popf
pusha
je
jo
add
ret
dec
sub
hlt
xor
das
lret
iret
or
and
data16
cwtl
mov
fidivrl
sbb
shrl
testl
mov
cltd
cmp
dec
arpl
push
outsl
push
xchg
cmp
out
xor
fcmovnb
sti
add
inc
or
pop
jl
mov
push
pop
mov
test
mov
adc
subb
ss
bound
std
ret
shrl
outsb
pop
imul
mov
cmp
or
int3
mov
pop
ds
sub
cmp
jg
and
mov
loope
pop
mov
add
add
mov
xlat
push
dec
sti
std
inc
fldl
sbb
dec
fwait
sbb
and
les
pushf
jl
dec
and
jnp
dec
aad
sar
roll
mov
repz
popf
xor
les
aam
xchg
pop
andb
hlt
mov
mov
hlt
mov
or
inc
bnd
test
hlt
or
bound
jge
sbb
pop
das
and
sbb
mov
dec
add
es
scas
fdivl
adc
ret
adc
ljmp
inc
fldcw
cmp
mov
push
mov
mov
pop
mov
push
iret
aam
add
push
insb
imul
test
mov
out
ja
fstpl
and
icebp
call
mov
cmp
push
out
daa
in
jmp
jl
xlat
xor
pop
xor
das
cmp
daa
pop
js
cmp
jmp
ds
repz
fcoms
fwait
clc
sub
lret
add
add
add
pop
mov
test
push
xchg
dec
pushf
ret
dec
bound
lret
pop
movsb
sbb
mov
inc
mov
call
sbb
pop
mov
in
sub
cmp
jp
out
test
add
enter
loope
and
inc
mov
adc
andb
push
sub
xchg
testb
jnp
xor
es
arpl
push
fidivrl
leave
fldt
ljmp
and
xchg
es
addl
dec
sub
push
shrl
pusha
cwtl
push
and
sub
movsb
test
lds
lret
add
outsl
movsb
add
stc
insl
and
in
sub
xchg
into
push
bound
push
xchg
sub
iret
add
mov
arpl
lret
mov
jb
push
or
lods
insl
sbb
jns
inc
mov
mov
mov
imul
add
add
add
and
xchg
movsb
ljmp
ja
aaa
pusha
pop
adc
in
cs
push
sbb
mov
test
leave
push
pop
sbb
je
mov
cmp
rolb
sahf
pushf
lea
sub
mov
imul
andl
adc
or
cmpsl
adc
pop
shlb
out
lcall
mov
jne
jle
cmovne
sti
sub
push
bound
jns
pop
mov
lods
cs
sub
rep
xor
xchg
jle
mov
cmp
aam
adc
adc
aaa
fsubr
in
mov
lret
dec
test
inc
in
push
xchg
mov
sti
stos
scas
jge
shlb
mov
xchg
xchg
rcll
shlb
adcl
hlt
jae
pushf
loope
fadds
sub
shlb
push
insl
dec
in
pop
jno
stc
enter
in
sbb
push
inc
push
jae
addr16
add
add
add
das
xor
aam
stc
inc
movsl
mov
jb
das
das
dec
ja
fsubl
dec
cmp
push
aas
ss
pop
dec
fadd
fisttpl
add
movsb
sbb
movsl
push
das
dec
testb
xchg
jns
sub
nop
hlt
addr16
jb
jp
pushf
sub
out
push
lret
shlb
repnz
xor
or
xor
or
xchg
mov
jne
sbb
mov
pushf
adc
mov
lcall
add
lds
sub
mov
mov
mov
mov
jnp
adc
les
shlb
adc
addr16
lds
or
or
rcrb
stos
icebp
fidivrs
ret
add
dec
outsl
mov
pop
or
lock
mov
xchg
test
adc
fcomps
decl
jne
imul
cmc
call
inc
push
popa
adc
mov
add
add
add
shll
icebp
ret
ss
jae
out
xchg
frstor
inc
cld
pop
les
add
xchg
mov
jge
jle
lock
and
inc
hlt
lods
dec
addr16
enter
aaa
jae
xchg
ror
jge
adc
lret
adc
dec
negb
mov
dec
dec
xor
insl
aad
into
clc
lods
mov
jecxz
jae
stos
mov
push
push
mov
stos
lea
addr16
andb
mov
bound
loopne
mov
inc
rorb
dec
pusha
add
or
push
sbb
inc
dec
ss
testl
add
mov
fwait
sbb
mov
push
mov
loope
or
jl
fsts
stos
dec
sub
dec
dec
hlt
call
sti
insb
cmp
out
push
call
or
mov
lds
movl
pop
repnz
movsl
mov
iret
sub
and
dec
addr16
add
add
add
pushf
xor
cmp
mov
arpl
in
pop
dec
add
xlat
dec
mov
movsb
lcall
jmp
arpl
sub
in
push
in
mov
dec
or
aad
lds
mov
cli
and
mov
mov
js
cmp
pop
push
scas
fisttpll
dec
add
cmpsb
add
bound
and
pop
inc
adc
test
sub
xchg
sti
stc
jnp
test
cmpsl
cmp
add
cmp
add
negb
into
or
xor
cmp
push
push
insb
shrd
lds
cmp
mov
inc
jae
lods
mov
je
mov
out
js
cltd
stos
push
ljmp
aam
sahf
mov
mov
nop
mov
push
ret
fbld
or
pop
movsl
xchg
iret
movb
pop
scas
mov
push
mov
pusha
mov
out
out
out
into
gs
cld
test
or
dec
rolb
add
add
add
push
and
sub
push
adc
aam
js
or
xor
into
cmpsl
outsl
pop
sub
ldmxcsr
in
adc
shll
sbb
jecxz
xchg
int
gs
cmp
imul
inc
mov
add
fstpt
inc
mov
jp
outsb
mov
pop
pushf
jbe
or
dec
arpl
sbb
pop
cmpsb
sub
out
mov
dec
adc
xchg
inc
and
mov
fsub
xchg
mov
or
aam
mov
lea
mov
in
cli
int3
xchg
and
testl
pop
add
mov
mov
pop
inc
call
nop
int3
hlt
pop
mov
into
add
or
push
hlt
and
sub
ljmp
dec
xchg
insb
out
psubsw
sub
loopne
and
je
out
mov
pushf
inc
mov
add
add
add
rcl
xor
les
pushf
xchg
lret
sbb
int
mov
rol
les
jbe
pop
dec
pushf
add
pop
sub
and
cmpsl
xchg
xchg
jne
aaa
dec
xchg
aam
sbb
add
or
mov
mov
mov
dec
add
loop
fbld
xlat
js
adc
fadd
xchg
out
push
mov
push
inc
mov
push
or
out
int3
mov
inc
ss
call
mov
push
fisttpl
sub
or
pop
push
sub
popf
pop
jmp
or
cmpsb
jmp
sub
jecxz
and
mov
mov
add
cltd
dec
in
fsubrl
pusha
add
cmp
mov
cmpsb
bound
dec
push
fbld
adc
in
dec
cmp
cmpsb
stc
lret
loopne
inc
xchg
outsb
xchg
pop
cmp
out
sub
fildl
add
add
dec
daa
dec
das
outsb
imul
push
xchg
pop
inc
dec
imul
add
add
add
rcr
adc
inc
bound
jb
jmp
xchg
lods
cli
inc
outsl
orl
jge
mov
imul
jnp
inc
add
mov
sub
fwait
xchg
lret
push
mov
or
push
jae
xor
sarb
sahf
mov
add
cmp
out
ds
xor
mov
inc
test
mov
pop
fdivl
xchg
sbb
mov
inc
or
mov
sbb
pop
push
and
mov
lcall
movsl
lea
pop
leave
mov
dec
xchg
push
outsb
xor
mov
dec
adc
mov
gs
inc
aas
test
out
dec
dec
cmp
in
loopne
xor
repnz
inc
sbb
addr16
mov
lahf
test
push
int3
pushf
aad
fld
popa
sbb
test
add
add
add
popf
mov
lahf
ret
or
mov
add
add
add
mov
dec
cs
out
dec
repz
inc
sbbb
ds
scas
gs
push
js
mov
mov
lds
jmp
cmpsb
mov
popa
or
fwait
test
dec
and
mov
xlat
and
xchg
sub
inc
xor
add
out
das
xchg
outsb
xchg
popa
xchg
and
mov
cwtl
mov
and
inc
or
xchg
cmpsl
jg
sub
mov
ret
out
insl
jb
in
fidivrl
loopne
fdivrs
inc
dec
mov
cmc
pop
push
cmp
test
iret
ret
push
paddd
lds
push
insl
rolb
jbe
daa
andb
lods
cmp
fs
mov
imulb
arpl
or
sbb
fstpt
and
pop
or
roll
test
jg
ljmp
aam
add
add
neg
outsl
push
xchg
or
mov
add
add
add
incb
xor
aaa
repz
cmc
out
out
dec
call
out
cli
sub
out
data16
iret
mov
sub
pop
loop
inc
mov
mov
mov
les
xor
imul
js
or
or
rcll
adc
pop
add
testl
loopne
je
jl
mov
in
lea
xor
dec
inc
lahf
pop
or
fisubrl
out
pop
cs
mov
outsb
lret
xor
jb
mov
mov
inc
mov
lods
enter
mov
jnp
js
xor
pop
js
dec
cmp
int
roll
jecxz
shl
lods
invd
scas
nop
lds
call
arpl
scas
out
out
and
cs
pusha
ja
stos
push
jae
lock
pop
sbb
cmp
add
xor
add
sbb
sub
dec
xchg
sub
addr16
add
add
add
and
mov
lret
jns
jnp
xor
dec
mov
jb
pop
mov
stc
dec
push
cmp
xchg
mov
clc
mov
inc
pop
test
mov
xlat
xor
mov
out
push
sub
nop
push
movsb
push
mov
xchg
daa
cli
lock
sbb
jmp
inc
icebp
push
cli
inc
push
pop
mov
xor
mov
in
repnz
in
mov
push
add
repz
jb
rorb
cld
add
loope
and
inc
fmull
push
ljmp
in
pop
js
inc
roll
add
push
out
inc
bound
rep
andb
insb
fucompp
push
jge
movsb
mov
push
sub
dec
add
out
lret
adc
mov
lcall
mov
movsl
sbb
xchg
dec
mov
test
xlat
dec
add
mov
add
mov
pushf
adc
ds
jae
push
fsubs
addr16
add
add
add
fwait
dec
inc
mov
test
sbb
insb
xchg
cwtl
xchg
call
and
fisttpl
out
pop
pop
xor
std
jecxz
bound
test
pop
stos
push
loope
xor
sub
add
jmp
mov
lods
or
call
sub
ja
mov
xor
test
insb
test
push
push
xor
pop
push
pop
and
mov
sub
xor
test
xchg
pop
adc
daa
out
push
enter
jnp
push
nop
jno
jle
pop
ficoml
fnsave
jg
jecxz
push
xor
imul
in
xlat
icebp
out
rcll
xor
jge
imul
bound
xchg
mov
xchg
sub
mov
push
popa
stos
aam
lds
xchg
or
lret
mov
ret
imul
xchg
and
idiv
lahf
insl
mov
dec
jne
xlat
add
add
add
faddl
call
pop
push
addb
lcall
mov
aam
in
or
loop
inc
subb
movsb
cltd
mov
pusha
loop
dec
test
outsl
inc
mov
add
pop
cltd
mov
out
push
inc
mov
jg
sub
sarb
inc
stos
fdivl
cmp
insl
sub
mov
adc
mov
lods
aaa
stos
cltd
daa
mov
jle
cmp
sub
das
jg
inc
jno
aam
cvttps2pi
pusha
call
inc
push
testl
sbb
pushf
mov
jmp
stos
xchg
xchg
mov
dec
lcall
gs
mov
xor
dec
nop
jmp
rorb
daa
lods
imul
xor
mov
gs
mov
repnz
xchg
sbb
repnz
pop
rorb
mov
or
sahf
sub
add
in
xchg
dec
lods
repnz
jae
xchg
cmc
cmp
jg
leave
or
mov
fadds
add
add
add
into
loopne
push
mov
ret
xlat
out
push
arpl
push
xchg
mov
in
mov
inc
loope
in
or
cs
jp,pt
call
lods
ja
stos
pushf
mov
pop
cltd
imul
pop
mov
and
mov
outsb
mov
dec
imul
sbb
xor
mov
jmp
push
inc
or
mov
sbb
xchg
fs
or
pop
xchg
jp
imul
sub
testl
xor
adc
aaa
cmp
mov
fldenv
mov
sti
scas
ljmp
fs
dec
cmc
sbb
mov
popa
lahf
inc
aad
dec
ja
and
pop
cmpsb
pop
dec
js
dec
push
mov
mov
push
test
test
pushf
outsl
inc
sbb
bound
sbb
mov
mov
mov
add
int
out
out
imul
nop
xchg
movsb
es
flds
add
add
add
sub
fcmovnu
push
xchg
ss
and
inc
sub
lret
test
testb
cmp
xlat
scas
out
jecxz
arpl
sub
aaa
outsb
notl
mov
cmp
or
cmpsb
xchg
jnp
pop
fidivs
movsl
fsub
mov
enter
lea
lock
clc
dec
or
mov
mov
and
in
outsl
adcb
loopnew
aas
les
lods
pop
dec
arpl
xor
jns
sti
inc
mov
push
leave
jmp
jmp
xor
or
shlb
mov
sub
add
xchg
or
cmpsb
cmc
sti
adc
xchg
jmp
enter
push
add
dec
sub
dec
bound
dec
push
adc
shr
dec
mov
inc
int
add
push
xchg
add
mov
mov
or
fidivrl
add
psubusw
push
in
sub
pop
fiaddl
add
add
add
mov
clc
push
loope
cmp
cmp
push
ret
jg
stos
das
std
or
loopne
stos
xor
xchg
or
popa
or
jns,pn
sbbl
loope
xchg
cmpsb
pop
mov
mov
xor
test
cld
scas
dec
mov
insl
sub
push
cmp
mov
jp
ja
cs
aas
push
repnz
adc
loope
loope
insb
mov
push
shrl
push
stc
mov
mov
call
inc
xchg
add
dec
mov
gs
nop
pop
leave
ss
shl
addl
fisubs
or
test
loop
push
pop
cmp
repnz
leave
and
les
movsl
stos
push
pop
or
and
or
movsl
pusha
fdiv
movsb
xor
mov
movsl
or
xchg
xchg
in
rol
in
int
cmpsl
cmp
mov
fs
sbb
ljmp
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
mov
fildl
add
add
add
xchg
dec
cmp
sub
xchg
cmp
stos
sub
pusha
or
in
push
leave
sub
and
mov
push
mov
cmpsb
or
roll
inc
sbb
out
fwait
rorl
push
cmp
mov
jge
mov
push
jmp
leave
es
mov
mov
loop
std
jb
or
aas
push
cltd
es
pop
push
mov
mov
cmpsl
in
divl
mov
popf
xchg
fwait
shlb
xchg
subl
jno
push
popa
ret
and
xchg
clc
aaa
sub
bound
into
xor
lods
jmp
aad
call
cmpsb
mov
sbb
mov
dec
jmp
mov
das
adc
mov
push
std
int
inc
mov
daa
and
and
add
add
jle
jg
std
fstpt
inc
in
faddl
add
add
add
adc
pop
mov
mov
popa
sub
cmp
sarl
jge
loop
cmp
pop
mulb
pop
cmp
push
mov
xor
jp
lods
pop
mov
fdivl
push
iret
mov
jnp
aas
into
iret
or
mov
sbb
popa
enter
jno
dec
xchg
imul
call
popa
rdmsr
mov
out
repz
xchg
inc
jg
xchg
jl
js
in
mov
std
cmpsb
push
aad
push
fnstcw
std
movsb
jmp
pop
dec
xor
jg
and
or
cmp
push
dec
lds
inc
and
sub
mov
push
jbe
icebp
cmp
or
sbb
pop
pushf
or
setl
mov
mov
gs
inc
sub
jb
mov
mov
aad
insb
sbb
jecxz
test
cmp
ljmp
pushf
add
add
add
add
nop
inc
jae
jnp
repnz
imulb
outsb
popa
cmp
addr16
dec
mov
jg
je
rcr
lahf
test
sub
push
push
jg
push
outsb
inc
pop
xchg
push
push
repnz
pop
pop
in
mov
cmpsl
out
mov
pop
sti
test
sahf
sahf
mov
repz
and
sub
xchg
inc
arpl
sbb
sarl
sub
bound
fsubrs
shlb
fidivrs
jle
push
pop
push
mov
pop
pop
ja
inc
bound
lahf
pop
das
add
cmp
mov
cmp
aaa
xchg
cmp
je
cmpsl
out
jne
or
push
iret
scas
mov
or
jb
scas
sbb
inc
mov
add
loop
in
push
push
jl
mov
ss
lret
outsb
cmp
sahf
fcmovnu
sbb
idiv
imul
xchg
cmc
push
sub
pop
ret
mov
int
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
mov
leave
sbb
in
dec
ss
xor
dec
pusha
adc
and
lea
mov
in
xor
lcall
xchg
lds
jge
xchg
in
cmpl
inc
adc
dec
ficomps
imul
dec
filds
sbb
mov
mov
jmp
rcr
push
ficomps
adc
outsl
and
loopne
movsb
cmp
imul
lcall
mov
insl
push
add
insl
fildl
adc
adcb
dec
inc
outsb
mov
stc
ljmp
lock
stc
cmp
mov
shlb
sub
xor
mov
push
rcrb
addr16
bound
pop
scas
enter
loopne
lds
js
sub
cmpsl
fimull
faddl
nop
dec
filds
add
add
add
aas
cmp
jae
js
inc
test
push
push
push
scas
enter
loop
mov
xor
xchg
pop
scas
xor
cmpsl
pop
sbb
xchg
push
cmp
inc
cmp
adc
test
mov
or
xchg
out
sub
or
xchg
cmpsb
fsubrl
sub
sbb
inc
push
jp
mov
sub
setg
js
in
rorb
dec
mov
mov
loope
lock
repz
mov
in
cmp
in
stos
push
repz
xor
mov
mov
iret
jno
cmp
addl
push
in
pop
jecxz
inc
add
push
stos
scas
pop
cmc
sbb
js
insl
repz
aam
mov
or
xlat
loopne
cmp
jg
mov
xchg
and
pop
or
stos
testb
push
lods
movsl
dec
shr
into
ss
jno
es
addr16
fildl
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
jle
push
imull
roll
or
xchg
lods
sbbb
dec
clc
add
sbb
js
add
jns
cmp
inc
sbb
xor
mov
sub
out
and
clc
out
cmc
aad
inc
push
out
std
test
mov
testb
and
dec
mov
jp
dec
addb
inc
fscale
test
repnz
out
pop
incl
xor
or
pop
mov
push
add
out
aam
popa
int
mov
pop
int
xchg
add
xor
sbb
mov
inc
xor
dec
sti
loope
push
xchg
adc
cltd
pop
fists
ljmp
xchg
and
aam
push
test
subl
inc
fwait
adcb
out
sub
inc
jae
sbb
das
sbb
mov
pushf
insb
sbb
xor
mov
and
fcmovnu
xchg
add
or
test
add
add
mov
jns
xchg
xchg
mov
mov
add
add
add
stos
testl
xlat
sbb
imul
lods
jle
mov
pop
es
adc
push
popa
divb
add
cmp
jmp
cld
pop
out
push
addl
mov
mov
dec
jno
fdivr
sub
mov
scas
push
movl
inc
shll
jmp
nop
stc
call
mov
sbb
test
jg
bound
jle
cmp
or
test
fdiv
mov
push
xchg
imul
jg
push
mov
sub
shlb
adc
in
mov
clc
inc
xchg
push
outsl
mov
mov
hlt
leave
xor
pop
pop
lcall
or
cmp
fdivl
retw
xlat
movb
xchg
or
les
lcall
sbb
xchg
sbb
dec
bound
pop
push
inc
mov
add
fadd
fsubp
jnp
or
cld
les
loope
loop
add
add
add
cli
sub
jle
inc
daa
mov
or
outsl
pop
jb
adc
jne
inc
decl
xor
fists
mov
in
cwtl
sbb
fidivs
mov
jne
jmp
test
faddl
mov
sahf
xchg
int3
push
sbbl
xlat
mov
scas
ds
pop
popa
xchg
out
jmp
sub
hlt
and
push
add
cs
sub
cli
imul
int3
cmp
lock
add
mov
and
loopne
add
adc
mov
fnstenv
push
gs
rcr
or
mov
mov
cld
shll
ret
pop
movl
das
mov
cmpsl
mov
push
mov
sbb
cwtl
fsub
mov
pushf
xchg
or
add
sub
cld
cli
jle
dec
nop
xor
mov
jcxz
add
add
add
outsb
rorb
inc
jl
jg
cmpsb
out
sub
rclb
rolb
popa
push
fwait
push
pop
scas
mov
shll
rcl
mov
lret
mov
xchg
push
hlt
das
mov
ret
movsl
dec
or
xor
pop
adc
js
xor
roll
pop
fsts
push
add
sbb
cmp
call
push
out
jne
sbb
inc
sub
jns
add
push
push
dec
cmpsl
outsl
pop
hlt
lret
fs
pop
cmc
outsl
pop
sbb
lea
nop
sub
loopne
mov
mov
in
es
ret
inc
add
jnp
push
mov
popf
sub
or
push
sbb
sbb
int
xchg
lea
popf
cmpsb
mov
push
mov
pop
lods
lret
inc
add
mov
addr16
loop
lret
mov
jmp
adc
popaw
sub
lea
pop
jbe
ja
sti
aaa
out
ja
shll
in
add
add
add
xchg
adc
or
fsubr
fcmovnu
xor
add
dec
mov
xchg
add
mov
fs
pop
rcrl
push
incl
dec
popa
cld
repz
push
scas
into
fildl
movsl
push
je
add
dec
test
xchg
adc
mov
mov
in
push
jb
test
adc
aad
xor
xor
fistpll
fmul
shll
imul
out
insl
jns
lds
pop
cmp
pop
lds
fcoms
mov
orl
sub
insb
push
xchg
add
dec
jmp
xor
sub
adc
adc
mov
dec
cmc
scas
data16
push
mov
out
adc
inc
sbb
sbb
add
inc
pop
into
in
movsb
pop
ret
sahf
inc
scas
loope
mov
cld
shrl
outsb
int
movsl
ror
cltd
outsl
mov
aaa
pushf
adc
aas
addr16
add
add
add
pop
sub
sbb
push
out
pop
mov
cld
sbb
popf
sti
lcall
outsl
iret
push
dec
fstpt
or
outsb
add
ja
ss
mov
jb
cmp
popf
adc
and
dec
pop
inc
cwtl
and
mov
into
push
test
ficoml
xorl
clc
pop
xchg
out
mov
jbe
bound
push
add
fimull
add
xchg
rcll
scas
pop
shll
mov
inc
jnp
lret
xor
icebp
lods
inc
sbb
aad
test
dec
jg
add
pop
pop
or
mov
and
inc
sub
push
jge
add
inc
in
cmp
sbb
out
out
xchg
adc
fiaddl
lret
push
clc
inc
push
jns
xchg
test
xchg
or
mov
mov
dec
out
add
push
aaa
mov
add
add
ja
lcall
mov
outsl
addr16
add
add
add
fcmovbe
loop
es
adc
cltd
mov
xor
cmp
sub
adc
pop
aas
loopne
cmpsl
les
pusha
daa
sarb
pop
dec
cmpl
pop
clc
cltd
add
pop
in
mov
xchg
test
das
or
and
stc
fidivs
mov
xchg
xchg
aaa
pop
sbb
fstps
or
jne
mov
jae
jne
outsl
lahf
pop
adc
xchg
jmp
push
pop
mov
inc
fwait
mov
popf
test
push
cmp
jle
mov
mov
jmp
enter
iret
jge
icebp
fcoms
repnz
or
push
pop
dec
mov
adc
stos
xor
cmp
add
push
shll
repnz
movsb
cmp
and
test
mov
push
or
outsb
shll
and
repz
lock
jg
in
and
pop
xor
addr16
add
add
add
ds
cmp
xchg
call
sub
and
xor
jl
push
shl
dec
nop
push
xchg
ret
enter
jg
cmp
sahf
ret
sub
in
jb
and
pop
sbb
push
pop
pop
js
push
jno
xchg
lcall
mov
mov
jnp
ljmp
or
and
cwtl
mov
and
pop
ljmp
and
mov
add
std
pop
cmp
fucomip
aad
xor
scas
pop
mov
or
dec
fdivrl
lret
andl
divb
lods
fldl2t
shrl
cmpsl
pushf
or
xor
mov
test
imul
mov
dec
negl
jmp
add
dec
shll
xlat
aam
shll
lret
mov
fisubrs
and
sbb
sti
mov
lret
cltd
xchg
cs
jmp
insb
mov
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
ljmp
add
add
das
in
mov
adc
sbb
pcmpgtw
insl
leave
test
es
sub
dec
push
xchg
out
in
cmp
bound
scas
push
mov
xchg
hlt
xor
xchg
jg
fnsave
outsl
cmpsb
fld1
xor
adc
sub
je
pushf
sahf
jbe
das
sqrtps
jns
ss
dec
clc
das
and
jmp
mov
xor
fsts
in
out
ret
xchg
or
fidivrs
pushf
xchg
sub
iret
leave
mov
mov
fwait
push
cltd
push
mov
iret
sub
cltd
jecxz
imul
sbb
std
inc
sbb
inc
inc
sub
jmp
jo
push
sub
inc
jg
sub
mov
je
pop
push
jmp
push
in
jne
lods
inc
cmpsl
loope
lret
pop
aam
push
jns
xchg
cmp
add
mov
dec
js
stc
mov
dec
int
cmp
add
add
add
stc
iret
popa
fmull
lds
pop
addr16
add
mov
dec
jo
mov
or
xchg
jo
inc
xchg
adc
aaa
push
xchg
jecxz
push
xchg
mov
jno
lds
lods
push
sub
daa
stc
mov
enter
inc
lods
or
push
imulb
fistpll
mov
push
cmp
xlat
cmp
cmp
in
dec
stos
jbe
jp
cmp
ss
pop
cmp
push
xchg
mov
xchg
dec
fstpt
outsb
test
or
jmp
fisubrs
push
push
or
fcoms
sub
push
xchg
xchg
lock
adc
sarl
daa
movsb
xor
push
sbb
push
loopne
push
cmp
lcall
xlat
dec
adcb
sub
testl
aas
dec
test
pop
push
data16
or
mov
add
insl
repz
fwait
jns
jns
mov
inc
addr16
repz
sbb
and
dec
lods
ret
test
aam
inc
inc
fmull
xor
dec
mov
repnz
and
out
ja
jge
imul
rclb
bound
dec
and
addr16
xlat
lods
out
cmp
lret
mov
gs
push
push
or
adc
cmp
aas
ret
xchg
lcall
dec
add
test
pop
addl
adc
xor
jge
mov
rorl
inc
fsubl
add
push
cld
push
jnp
jns
jle
hlt
xchg
inc
inc
addl
movsl
pop
mov
shll
fcmovnu
ret
fcomps
cmc
xchg
scas
cmp
fsubs
xchg
scas
adcb
xchg
cltd
push
cmpb
test
or
dec
mov
insl
jb
push
xchg
lret
out
jecxz
cmp
lret
dec
mov
cs
je
cmp
jnp
adc
jne
dec
fsubrs
add
add
add
or
inc
ds
pop
mov
data16
xor
or
push
das
out
clc
mov
xor
shl
ret
iret
pop
incb
in
mov
xchg
jnp
iret
jmp
jne
mov
jge
imul
movsl
out
int3
out
lods
das
mov
imul
les
cmp
adc
loopne
mov
repz
pop
pop
jp
and
add
jno
imul
xorb
cmc
imul
loopne
sbb
mov
fdiv
cmp
jge
cmc
cmpsl
mov
jnp
adc
mov
leave
push
clc
test
add
add
add
fwait
ljmp
sub
insl
mov
dec
enter
fs
in
inc
testb
test
mov
and
loop
pushf
imul
dec
sbb
or
jge
add
add
subb
fistl
das
fsubrl
sti
addr16
add
add
add
ds
push
out
das
sbb
pop
jo
je
adc
xor
repz
inc
lods
xor
mov
dec
jmp
scas
cmp
out
fcmovnu
lods
mov
lock
jecxz
test
pop
xor
mov
addl
sbb
push
adc
cmp
in
fsts
out
xor
cmp
xchg
mov
pop
addl
mov
jbe
loop
aas
aam
jp
leave
cltd
cwtl
bound
pop
fstp
ret
pop
inc
mov
data16
pop
inc
cltd
mov
insl
loopne
arpl
mov
cmp
adc
inc
out
sbb
dec
leave
mov
stos
or
fs
xchg
jg
add
push
jle
fisubl
mov
mov
and
or
call
add
cmpb
ss
cmp
sbb
cmp
add
add
jb
scas
decb
fisttps
lret
addr16
add
add
add
push
push
les
sbb
sub
pop
adc
jnp
add
scas
and
xor
jge
and
test
push
jge
xchg
push
cmp
push
repnz
inc
mov
lahf
mov
ljmp
dec
inc
int
push
pop
insb
std
and
xlat
and
movsb
leave
xchg
jae
nop
movsb
out
pop
je
ja
cld
add
in
jne
lods
ret
jmp
sub
jb
insb
pusha
and
fld
sarb
pushf
add
cwtl
xchg
sbb
loopne
insl
and
out
lods
sbb
push
std
popf
imul
je
push
pusha
outsb
in
xor
sub
xchg
push
pop
gs
mov
js
xor
push
add
jns
mov
roll
cmp
inc
add
mov
jnp
mov
cmp
cmpb
fwait
stc
xchg
dec
or
pop
imulb
inc
jbe
mov
out
fistl
int3
jns
add
add
xlat
mov
xchg
scas
pop
mov
out
add
add
add
cmpl
cltd
and
aas
mov
lret
shl
xchg
testl
cmpsb
dec
loope
sarb
negb
fisubrs
add
ds
mov
push
mov
stc
gs
mov
fwait
xchg
jae
gs
js
outsb
paddw
mov
fwait
pop
xchg
aam
xchg
jle
mov
test
mov
ret
clc
jne
stos
ret
pop
sbb
movsb
iret
icebp
sub
cwtl
mov
xorb
in
lret
cmpsb
push
fnstsw
adc
add
lds
mov
les
and
push
outsb
std
mov
mov
repnz
inc
jne
inc
xchg
clc
pop
inc
mov
ss
jbe
xchg
rcrb
mov
jle
jbe
xor
sub
xchg
movsl
xor
push
push
bound
push
cmpsb
sbb
mov
jmp
add
add
mov
aas
mov
xlat
dec
addr16
add
add
add
jb
je
inc
stc
scas
sbb
xor
mov
adc
cmp
cmp
xchg
xlat
fcmovnbe
outsl
push
lcall
cmp
cwtl
xor
imul
pop
pop
mov
pop
pop
sbb
mov
sub
pop
xchg
adc
fwait
nop
dec
in
add
test
push
mov
mov
jnp
imul
not
insl
scas
adc
outsb
lock
pop
mov
cli
rcrb
or
orb
mov
fsubl
dec
bound
imul
push
mov
sbb
sbb
ficoms
aam
push
movsl
mov
jne
jp
les
cs
cmp
push
fwait
jne
outsl
xor
jg
dec
mov
adc
ret
xor
adc
sub
pushf
or
fimuls
das
movsb
xchg
lret
sahf
in
push
xor
pop
sbb
loop
fadd
sti
mov
lods
add
add
add
add
into
push
or
lcall
arpl
pop
jns
mov
pop
insl
cmp
shl
test
push
lea
lret
xchg
iretw
push
mov
dec
lock
push
inc
std
mov
lea
pop
cmpsl
scas
lahf
mov
xchg
pop
int
sbb
pop
movsb
je
sub
fiaddl
mov
mov
inc
xchg
xor
and
pusha
and
lods
mov
sub
cmp
jg
xchg
mov
jp
xchg
xchg
sbb
enter
lcall
adc
mov
ret
out
dec
mov
lods
mov
jle
stos
shr
scas
adc
clc
cmp
in
jge
gs
jno
mov
xchg
mov
outsb
imul
sub
push
cs
out
jecxz
lret
gs
jmp
pop
andl
add
add
into
adc
neg
jge
xchg
jns
adc
addr16
add
add
add
pop
dec
out
jbe
inc
lahf
xlat
xchg
or
push
subb
enter
or
orb
shll
stos
jo
mov
filds
or
sbb
jp
stos
mov
sub
hlt
sbb
clc
outsl
mov
std
or
je
cmp
into
outsl
dec
or
pop
push
jecxz
mov
and
test
dec
loop
and
bound
inc
and
int3
sbb
mov
push
adc
in
push
push
daa
pop
les
fnstenv
mov
and
and
icebp
icebp
mov
das
sub
fisubl
insl
xor
jae
outsb
sarb
pushf
jecxz
or
push
sti
call
lret
jle
mov
mov
push
pop
pop
test
je
sti
sbb
stc
pop
dec
test
xchg
add
push
jae
ja
mov
or
xorl
mov
jecxz
idivb
pop
cmp
outsl
jg
jg
sub
ficompl
repnz
add
add
jecxz
fs
or
pusha
fs
sbb
adc
mov
test
pop
xchg
mov
mov
testb
or
mov
jle
jge
imul
sbb
ret
mov
arpl
lret
ret
inc
out
inc
xchg
and
jnp
push
sub
mov
pushf
pushf
or
or
rcll
push
int3
add
movsl
insb
xchg
test
mov
and
das
mov
movsl
hlt
rcrl
jae
ror
in
mov
addr16
xchg
sbb
in
adc
into
jns
pop
lds
cmp
jecxz
jg
mov
jae
movsl
mov
xchg
cmpsb
sbb
mov
push
jbe
xchg
stc
push
add
jnp
mov
iret
or
sbb
sarl
mov
push
iret
fmuls
mov
and
or
dec
mov
jnp
pop
out
repnz
add
ret
ja
and
aaa
divl
mov
and
repz
add
add
xchg
aas
xchg
cmp
cmpsb
jp
adc
jle
pop
testl
cmp
pop
es
aad
dec
jno
gs
repnz
ret
movsl
xchg
ja
cs
adcl
adc
call
mov
jno
add
cmp
enter
cmp
push
mov
add
out
or
mov
mov
sub
clc
idivb
test
cltd
mov
lea
nop
out
sbb
leave
push
subb
shrl
imul
mov
std
jbe
jo
fwait
pop
or
mov
inc
ss
bound
pop
and
sbb
add
les
mov
mov
mov
jnp
outsb
or
gs
out
mov
add
xor
pop
ja
mov
jo
scas
cs
notb
pop
pop
xchg
and
in
xor
push
inc
xchg
in
xchg
jecxz
jmp
mov
int
fldenv
add
add
add
sar
insb
or
push
jmp
lcall
sub
adc
test
out
mov
jns
test
inc
cmp
fnstsw
dec
std
xlat
ss
rcrb
fdivr
movsb
movsb
xchg
push
outsl
imul
notl
popf
mov
mov
push
add
xchg
dec
insb
fcompl
mov
sub
call
aas
jns
cli
lea
mov
das
aas
xlat
xor
adc
data16
inc
imul
or
xor
scas
xor
fdivs
sbb
out
out
mov
xchg
pop
sbb
ds
stc
daa
dec
pop
insb
mov
pop
sub
test
jbe
dec
call
push
and
sbb
shl
andl
xor
jecxz
rcl
loopne
jbe
fmuls
adc
cmp
test
jnp
pop
test
lret
dec
int
push
pusha
jno
pop
add
lahf
inc
ret
add
add
jne
pusha
popf
pop
sub
cmc
add
add
add
ja
jne
jle
lret
fisubs
or
inc
jo
sub
pop
out
es
push
inc
div
insl
mov
lea
aam
out
in
je
lea
nop
pop
negb
dec
fldcw
push
jg
js
mov
push
mov
mov
test
pop
xor
aas
aaa
xorl
xorl
repz
icebp
cli
jae
icebp
xchg
mov
es
jno
cli
cmp
lods
and
repz
pop
loope
mov
hlt
dec
push
lea
mov
push
call
cmp
nop
xchg
jno
lcall
outsb
sub
adc
lcall
sub
dec
loope
pop
mov
mov
dec
arpl
int
shll
repz
dec
cmp
divb
imul
xchg
pop
mov
sbbb
pop
add
add
add
imulb
mul
xor
dec
testb
add
add
hlt
repz
jecxz
pop
stos
int3
xchg
out
pop
pusha
into
dec
push
mov
and
cltd
lret
je
add
mov
lcall
call
sub
lods
ret
test
es
loope
cltd
pushl
lcall
rcrl
stc
into
xchg
jge
ficoms
sbb
and
pop
jnp
dec
mov
pop
scas
and
jmp
cmp
loope
shrl
push
xchg
xor
pop
jnp
add
pop
or
inc
jbe
add
pushf
aas
mov
adc
push
sbb
aad
jmp
jae
mov
xor
mov
bound
mov
sbb
aaa
out
cmp
push
adc
ja
enter
mov
pop
test
add
push
mov
push
and
enter
dec
fs
inc
pop
movsb
scas
icebp
fstpt
mov
aam
into
dec
lret
inc
subb
ret
add
xor
jb
jae
xchg
xor
add
add
add
dec
fnstenv
xor
jle
dec
mov
daa
popa
cmp
and
adc
enter
push
cmp
pop
jmp
loope
xchg
xchg
push
sbb
mull
stc
dec
aad
xchg
push
mov
js
pusha
pop
cld
inc
stos
sub
rcrb
bound
and
and
cltd
in
push
sbb
neg
iret
pop
cmpsl
aad
nop
jmp
divl
pop
push
out
ret
push
shl
test
xacquire
adc
fisttpl
es
lcall
mov
test
push
inc
jmp
insb
movl
and
or
and
sbb
xor
dec
adc
or
aam
sbb
lods
jnp
imul
or
insl
arpl
addl
lock
push
xor
cmpl
jne
and
mov
inc
adc
int
in
idivl
js
mov
insb
mov
add
add
add
xor
ss
imul
shrb
gs
xor
mov
jbe
sbb
test
aad
test
mov
pcmpgtb
cld
push
ficompl
inc
pop
jne
movsl
jmp
test
add
xlat
inc
call
dec
in
inc
jp
xchg
cmpsb
lods
fistpl
xchg
gs
jo
xchg
cld
push
ficompl
ret
cwtl
les
jns
sub
loop
sub
inc
movsb
je
stos
out
xor
xchg
jbe
pop
sbb
jae
mov
ret
jecxz
jl
xchg
pop
subl
jp
idivl
mov
dec
pop
sub
stos
inc
add
and
sub
addr16
out
sbb
sbbl
push
and
jno
dec
pop
scas
dec
cmp
fisubl
aas
dec
xchg
xor
in
dec
push
idivb
inc
iret
jb
movsb
loop
dec
jmp
pop
ret
into
pop
es
inc
cli
aas
into
lret
sbb
add
add
add
iret
ljmp
frstor
shll
xchg
push
mov
loopne
leave
cmp
or
xchg
mov
outsl
push
dec
add
xor
out
jmp
in
or
test
movsl
sub
jae
lahf
adc
into
fnstenv
outsb
aam
mov
xchg
addl
call
fs
mov
shl
push
lahf
sub
push
adc
jno
jb
xadd
push
jg
aaa
loop
mov
dec
sub
or
jns
mov
loopne
out
jb
jb
ljmp
out
fimuls
lcall
or
jle
out
xchg
les
cld
mov
ja
inc
flds
push
cltd
iret
out
inc
inc
jecxz
mov
jp
enter
jae
inc
xchg
mov
je
push
enter
repz
jne
rclb
mov
mov
lcall
mov
xchg
pushf
addr16
add
add
add
inc
sbb
cmp
push
lret
es
test
ret
add
mov
mov
mov
xchg
jmp
rcrl
xor
lds
in
test
jg
out
enter
push
pop
test
or
fimuls
sub
mov
cmp
jb
lcall
sub
test
stc
imul
test
mov
sub
jb
mov
ja
mov
push
pushl
push
adcl
mov
hlt
push
inc
jbe
push
adc
add
xor
sbb
test
and
mov
push
icebp
fstl
in
dec
nop
inc
lea
call
loop
cmp
push
das
adc
sti
push
push
jg
mov
aam
add
popf
repz
mov
dec
xor
lret
pop
push
adc
inc
push
adc
xchg
aaa
jae
cltd
dec
mov
jno
pop
xor
jge
sti
add
add
add
cmpsb
rorl
ss
sub
push
xor
or
aaa
mov
xchg
sbb
vdivps
inc
cmp
adc
xchg
xor
mov
xchg
adc
outsb
or
loopne
hlt
adcl
sub
fnstsw
or
pushf
sbb
and
in
adc
xchg
fimuls
inc
ja
inc
dec
push
sbb
pop
mov
push
inc
sub
cmp
cmp
lret
mov
mov
mov
les
cmp
insb
in
mov
repnz
popa
loop
test
test
mov
les
test
mov
rol
mov
dec
or
out
push
cmc
adc
ja
cltd
addr16
xor
xor
aaa
imul
sbb
mov
xor
stos
mov
lock
xor
jnp
ds
into
nop
out
cwtl
jle
push
sub
dec
stos
neg
mov
add
add
xchg
pop
mov
jbe
repnz
pop
sub
or
fldcw
push
stos
jecxz
cmp
sbb
mov
popa
xor
insl
pop
adc
sbb
aaa
ficoml
push
inc
sub
mov
fstp
dec
mov
add
sti
sub
dec
push
pop
mov
push
push
mov
mov
mov
lea
mov
xchg
mov
aad
fisubl
filds
push
cltd
ret
mov
mov
imull
subb
mov
xor
mov
ret
bound
sahf
aad
addr16
add
pop
cltd
in
cmp
icebp
js
xchg
lock
lret
pop
cmpsb
pop
xchg
stos
dec
xor
cld
and
or
mov
jge
outsl
dec
bound
hlt
dec
faddl
add
add
test
jg
push
pop
push
mov
addr16
add
add
add
mov
adc
and
popf
cmp
pop
cmp
or
sahf
sbb
ret
lahf
push
pop
xchg
push
adc
sbb
and
jo
jle
sbb
fld
mov
leave
test
jecxz
mov
leave
cmovns
stos
pop
insb
adc
mov
sbb
ret
fsubr
pushf
mov
sub
je
xor
push
aas
scas
lcall
mov
add
inc
cmpsl
int
jb
mov
jle
add
cmp
xlat
lock
popf
loopne
sub
scas
outsb
inc
fs
and
dec
out
or
clc
mov
push
sub
sarl
pop
es
out
xchg
or
cltd
nop
push
popf
mov
xchg
xchg
stc
push
sbbb
imul
nop
mov
xchg
jmp
mov
pop
add
sbb
call
push
in
out
loop
push
add
add
movsb
push
in
cmc
jne
sbb
js
das
xor
add
add
xchg
fisubrl
jbe
pop
cmpsl
cmp
xor
xorl
shl
ficoms
inc
or
in
pop
dec
dec
shl
lods
data16
mov
aas
cmp
test
data16
mov
push
mov
insb
je
mov
dec
loope
sbb
loop
dec
jmp
or
es
popf
fs
jbe
sub
pop
insb
add
movb
cld
inc
inc
dec
inc
xor
jo
popl
push
cwtl
mov
int
dec
jns
sbb
mov
mov
jl
cmp
and
inc
faddp
fstl
std
test
sbb
xor
ja
pop
divb
movsb
jecxz
popl
mov
outsb
out
mov
mov
push
jo
repz
outsl
outsl
cmp
xlat
das
test
cld
in
insl
and
aaa
cltd
and
cli
mov
adc
sbb
push
sbb
fildll
add
out
shlb
aas
out
int3
mov
mov
incl
add
add
add
das
add
mov
fcmovnu
int
lahf
sub
mov
add
mov
test
add
inc
add
sbb
ja
inc
mov
pop
push
inc
cmp
cmp
push
mov
aam
mov
xchg
loop
jle
shl
fstp
icebp
out
pop
cld
notl
fwait
jno
mov
movsl
xchg
mov
sub
call
xchg
jp
test
adc
rcrb
imul
mov
inc
int
cmp
clc
sbb
nop
es
es
bound
mov
out
arpl
bound
ss
xchg
out
dec
jne
fsubr
sbb
jnp
notb
lret
loope
lods
xchg
mov
mov
push
xor
test
xchg
leave
xchg
fstps
fnstenv
or
arpl
add
mov
mov
cld
or
mov
and
sbb
add
add
add
add
lret
cltd
lods
or
pushf
pop
jmp
push
mov
xlat
jmp
mov
or
fs
or
ja
adc
inc
into
jl
filds
aam
outsb
jge
mov
xor
shlb
pop
loope
pop
sbb
jg
les
iret
arpl
jne
pop
icebp
xor
and
hlt
cmp
add
insl
lea
mov
mov
mov
push
sub
loope
sub
sbbb
aad
jecxz
cli
les
mov
sbb
cmp
shr
movsl
enter
adc
jno
mov
movsb
sub
fnstenv
shl
lea
int
mov
dec
xchg
cmp
addb
ret
insb
rcll
sahf
cmp
es
sarl
fmuls
dec
lods
or
cltd
jb
push
mov
ret
negl
dec
rol
lret
clc
cmc
inc
stos
repz
xchg
or
add
add
cmp
fbstp
aaa
mov
mov
mov
mov
inc
fwait
inc
sbb
in
xchg
ss
xor
in
jecxz
enter
fs
adc
lret
repz
iret
pop
sbb
push
xor
lods
arpl
mov
or
and
push
clc
cmc
mov
jbe
sti
pop
sub
jmp
inc
sbb
mov
add
cmp
fnstcw
mov
jnp
mov
adc
stos
pop
xchg
mov
aas
push
cmp
loop
adc
mov
push
mov
clc
mov
mov
std
ja
mov
inc
mov
cli
lahf
lds
jnp
sahf
enter
cmp
push
stc
or
cltd
pop
cld
and
jns
lret
je
mov
fldt
mov
and
sub
fcompl
aaa
daa
mov
or
or
add
std
aaa
mov
shll
outsl
add
add
sub
add
fcomps
loope
push
jl
outsl
movsb
fcompl
lahf
cwtl
xor
or
aaa
xor
sti
add
sub
pop
dec
fildl
icebp
sbb
aas
sub
jnp
cltd
xor
push
bnd
sbb
mov
cs
jae
iret
outsl
xlat
notb
data16
mov
addr16
sub
std
sahf
stc
mov
addr16
push
movsb
mov
mov
pushl
lods
pop
mov
mov
sbb
adc
incl
adc
pop
call
xor
jl
outsl
and
inc
imul
add
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
ret
mov
cli
lea
loop
jge
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
