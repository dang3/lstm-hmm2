push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
jne
int3
lahf
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
xchg
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
cltd
mov
dec
or
aaa
fisubrl
fiadds
std
lcall
xor
adc
repnz
xchg
jle
shll
pop
fnstsw
cli
xor
mov
cmpl
sub
dec
xchg
stos
push
and
add
push
dec
sub
aaa
inc
out
ljmp
adc
int
mov
add
inc
ret
lret
aam
jbe
fs
mul
sahf
mov
shl
fldcw
les
cmp
out
js
xor
mov
aad
lret
mov
loope
ret
xchg
and
int
jne
movsb
stos
lahf
push
xchg
or
mov
sub
into
cmc
or
lds
sahf
fsts
mov
jae
xor
push
in
add
jae
push
sub
mov
adc
cli
or
cmp
movsl
sbb
rcr
pushf
jecxz
and
sbb
les
lret
inc
int3
aas
cmp
inc
xorl
out
leave
sarl
push
cli
or
les
hlt
sub
xor
fbld
jl
sbb
shlb
imul
pop
jge
push
dec
jg
and
adc
iret
mov
jmp
clc
icebp
mov
icebp
ficompl
mov
jo
jle
jo
push
sarl
xor
or
ja
sahf
test
cmp
pop
in
push
jmp
jp
xor
dec
pop
dec
jg
sbb
ja
adc
movsb
lock
and
into
ljmp
sbb
inc
and
lahf
shl
fistps
scas
mov
aad
ret
movd
outsl
dec
hlt
mov
jecxz
loop
loop
stos
sub
sub
les
and
adc
or
cltd
jne
mov
bnd
sbb
sub
icebp
push
xchg
xlat
dec
cwtl
fsub
or
and
popf
call
sub
js
stos
frstor
and
addr16
loopne
jne
je
daa
fwait
out
xchg
jbe
cs
popf
test
sahf
pop
out
fisubs
fdiv
mov
cmc
rclb
sub
pop
mov
pop
shlb
and
push
sub
insb
movsl
push
mov
test
mov
xlat
sub
push
and
stos
iret
cld
imull
cmpsb
xor
jne
xlat
push
mov
mov
nop
out
push
leave
pop
test
xchg
pusha
scas
add
imul
popf
xor
into
sub
negb
arpl
sub
pop
mov
jecxz
push
push
insl
je
pop
jg
xor
sarl
arpl
lods
xlat
or
out
jns
fdivrs
data16
xchg
nop
dec
dec
test
js
push
cmpsb
mulb
xchg
in
rcrb
js
gs
dec
inc
and
and
xor
sbb
in
popf
push
stos
push
dec
inc
aad
in
packsswb
mov
scas
dec
loopne
mov
fwait
out
gs
lret
insl
cwtl
or
int3
xor
addr16
gs
sub
mov
popf
sub
push
fidivrs
push
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
sub
ret
jo
jo
jo
fisttps
std
jns
xor
dec
dec
ficoms
jg
bound
fiadds
adc
sarl
arpl
cmp
xchg
inc
mov
daa
sbb
shll
jl
shll
and
neg
adc
pop
pop
sub
mov
mov
test
xor
inc
sahf
ljmp
dec
mov
sub
xchg
aad
inc
xor
add
dec
and
movl
mov
pop
les
in
inc
mov
xlat
sbb
jbe
clc
lcall
test
add
xchg
pop
fnstsw
into
out
push
stos
out
xchg
fbstp
inc
cld
aas
testb
mov
push
cmpsb
repnz
daa
xor
adc
jg
mov
add
mov
or
xorb
cmp
mov
jg
int3
fdivr
scas
push
mov
add
sub
cmp
bound
test
mov
sub
and
fdivrl
call
sbbl
pop
mov
ror
xchg
push
jb
lods
imul
cs
std
lods
jo
nop
mov
gs
cmp
add
icebp
xchg
sbbb
test
insl
mov
test
and
cmp
jns
add
test
sbb
inc
insl
inc
hlt
insb
mov
pop
jnp
inc
inc
ja
push
cmp
out
daa
jecxz
or
shrb
fs
addr16
bound
arpl
inc
cmp
xchg
sub
dec
scas
iret
sub
push
pop
adc
jb
xchg
mov
cmp
movsb
mov
iret
xor
mov
aam
cmp
xor
fisubrs
sbb
jg
mov
xchg
movsb
xor
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
int
xorl
jo
pop
mov
jge
cmc
mov
push
jecxz
loop
push
and
lret
xchg
mov
mov
pushf
push
pop
and
pusha
mov
gs
add
sub
mov
mov
inc
mov
daa
bound
and
loopne
pop
repz
mov
rol
add
dec
popf
xchg
or
mov
mov
adc
mov
sti
cs
call
mov
ljmp
pop
hlt
scas
sbb
xor
push
lahf
mov
xchg
mov
test
into
mov
sub
into
dec
push
rorb
ljmp
rclb
lret
push
pusha
ret
fst
jnp
aas
and
not
pop
push
xor
scas
sub
mov
fisttpl
jbe
sti
out
jo
sub
in
and
repnz
mov
pop
test
aam
nop
inc
jb
dec
xchg
jnp
pusha
rclb
push
std
lahf
mov
sub
add
add
jmp
mov
sub
sub
je
inc
aaa
xor
jmp
out
adc
cli
fadds
jns
add
jmp
mov
icebp
fxch
mov
clc
test
fimull
push
mov
cmpsb
mov
inc
daa
push
and
ja
enter
test
push
subl
stc
je
and
mov
bound
cmp
add
mov
stos
add
stos
aam
cltd
pop
and
in
rorb
shll
adc
pusha
pop
sub
out
xlat
loopne
inc
jne
inc
shl
inc
mov
negb
rorb
sbbl
adc
sbb
sub
pushf
push
dec
adc
push
into
pop
mov
movsl
popa
mov
dec
push
ficoml
jmpw
cmp
pushf
pop
test
adcb
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
mov
dec
jo
jo
jo
jo
dec
cli
mov
dec
cld
mov
andb
test
or
fcomps
ss
jo
mov
movsb
cmpsb
cmc
rorl
mov
sbb
cmp
pop
mov
idivb
mov
xchg
fldt
shlb
scas
mov
mov
push
test
mov
xor
lret
scas
popf
adc
mov
mov
gs
dec
push
lahf
popa
mov
cmpl
push
push
iret
adc
dec
std
mov
es
xor
mov
movsb
scas
mov
sub
pop
push
cltd
xor
lahf
mov
rorb
sbb
cmp
mov
test
fmull
mov
cmpsl
ss
xchg
sbb
mov
mov
in
pusha
mov
ds
stos
movsb
ficomps
ljmp
out
cltd
sub
push
push
in
sub
cmp
mov
mov
aas
test
xchg
mov
jmp
or
pop
mov
or
xor
aas
imul
data16
jb
std
pusha
std
dec
cmpsl
arpl
jmp
je
dec
pop
in
pop
pop
xchg
lcall
and
icebp
es
xlat
bound
lea
js
test
repz
pop
and
popf
xor
push
push
mov
movsb
sbb
lret
jb
int
mov
fistl
xchg
or
mov
sbb
pop
mov
scas
jp
jl
ret
cli
sub
popf
loopne
sbb
bound
stos
fwait
jl
mov
jle
jmp
out
scas
xor
mov
and
daa
fdivrl
or
jge
lret
test
add
add
cltd
sbb
add
sub
add
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
pop
aas
jo
jo
jo
jo
mov
out
add
lods
js
in
xchg
add
mov
sub
and
or
sahf
dec
iret
mov
sahf
add
and
leave
test
mov
es
popa
movsb
dec
xor
jnp
std
fildl
mov
mov
cli
out
mov
inc
cmp
dec
add
loop
adc
out
sti
das
cmp
mov
mov
jno
inc
jg
cmp
movsl
pop
mov
push
xchg
xchg
movsl
mov
das
lods
sti
fimull
aad
sub
hlt
ret
enter
enter
xchg
xor
daa
nop
pushf
lret
dec
pop
mov
adc
nop
out
ja
addb
mov
pop
nop
push
shrb
mulb
mov
jge
sahf
rcrb
out
or
jnp
jno
inc
jno
pop
push
repnz
or
call
jecxz
enter
pop
data16
mov
inc
data16
bound
shlb
sahf
xchg
dec
in
into
or
daa
imul
lds
popa
stos
push
xor
loope
pop
mov
pusha
xor
dec
insb
pop
gs
in
sbb
adc
push
or
mov
jmp
hlt
xor
lcall
or
jnp
push
loope
sbb
push
movsb
xchg
push
leave
orl
daa
xor
pusha
fsubl
fwait
fwait
scas
sub
xor
mov
mov
adc
xchg
dec
dec
jle
dec
aam
in
and
les
xchg
pushf
adc
jb
dec
sub
imul
cli
imul
insl
or
mov
xchg
xchg
adcb
mov
aam
repnz
and
or
stos
das
sarb
cmp
and
and
inc
push
xchg
das
incb
and
pop
dec
movsb
pop
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
xorb
or
add
jo
jle
jo
or
inc
arpl
test
ret
daa
xchg
test
insl
mov
in
movsb
mov
add
push
mov
pop
imul
mov
cmpsb
aaa
idivl
mov
or
or
pop
iret
xchg
jmp
jo
adc
iret
xor
cmc
sub
mov
repz
js
push
sbb
add
jp
aad
scas
adc
inc
roll
mov
add
rcl
pop
xchg
test
jge
js
or
push
lods
mov
mov
cmp
jg
rcll
pop
lds
jae
xchg
addr16
sahf
push
mov
adc
push
stos
data16
and
lods
scas
pushf
hlt
rorb
cmp
repnz
or
fwait
cmc
mov
add
mov
test
add
in
mov
fucom
inc
popf
aas
imul
lods
fsubl
push
mov
fnstsw
das
imull
pushf
mov
mov
pop
cmp
and
mov
mov
jle
fcmovnb
sub
add
cli
mov
mov
adc
sbb
sarb
pushf
jecxz
inc
adc
lahf
repz
aaa
mov
inc
ss
xor
stos
adc
cmp
push
sti
mulb
cli
push
mov
jae
imul
cwtl
xor
pop
ss
arpl
cmp
and
jbe
pop
sbbb
push
testb
mov
shlb
mov
cmp
push
mov
fidivrl
mull
inc
push
sbb
inc
push
nop
movsl
mov
popf
loope
mov
xchg
pop
cmp
test
nop
insl
pop
mov
mov
leave
lcallw
dec
push
iret
bound
lret
adc
fwait
outsb
pusha
cmc
xchg
push
push
jmp
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
imul
jo
jo
mov
mov
mov
push
int3
jns
sub
mov
ror
test
dec
or
mov
dec
add
mov
mov
insb
clc
out
push
cmp
bound
into
xorb
bound
mov
dec
mov
push
cld
xchg
xorl
ret
int3
cmp
jecxz
test
sti
or
ss
scas
lcall
and
clc
push
xor
jbe
shl
adcl
hlt
mov
ljmp
push
loopne
mov
ss
push
leave
mov
invd
sub
adc
fsubr
sti
or
popf
aaa
loop
dec
xor
push
mov
popa
loope
jecxz
xchg
lods
push
jle
es
fwait
pop
insl
stc
out
sub
push
inc
call
int
inc
lcall
out
mov
stos
push
sar
fisubrl
mov
fsubl
mov
addr16
push
shr
mov
mov
mov
and
push
imul
sbb
loop
cmpsb
rcrl
js
cmpsl
ror
test
iret
xor
xchg
inc
sarl
lock
rclb
push
lea
imul
lahf
faddl
imul
jmp
pop
shll
ljmp
sub
fisttpll
dec
adc
jg
popa
gs
xchg
jno
out
adc
jns
jmp
jmp
mov
aas
out
push
test
mov
pop
mov
repz
addr16
pop
lock
fsubl
lods
call
subb
jns
sti
ficomps
outsb
mov
outsb
cmp
or
push
lds
les
cld
xchg
js
add
movsb
push
daa
dec
insl
stos
popa
test
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
inc
jo
jo
jo
jo
punpckldq
or
inc
lods
testl
mov
popf
push
sbb
loope
add
sub
enter
sbb
lds
subb
and
push
sbb
mov
pop
mov
inc
mov
mov
dec
pop
cmp
mov
adc
adc
mov
insl
test
addr16
mov
sbb
mov
add
xor
jnp
mov
xchg
imul
mov
outsb
lds
add
aas
add
mov
repnz
jl
out
les
clc
sub
leave
jecxz
loopne
movsl
sbb
nop
pop
data16
xchg
andb
xor
iret
in
fisubrs
or
movsb
adc
or
ret
rcr
or
ljmp
or
cmpsb
mov
popf
jae
jmp
dec
mov
pop
cmc
push
lock
sbb
xor
push
test
mov
push
ljmp
mov
arpl
sub
mov
cld
daa
adc
push
add
pop
fbld
cltd
cltd
dec
cmp
dec
inc
ret
out
or
or
cmc
scas
mov
sub
pop
dec
jb
mov
stc
cmp
loope
push
lea
jb
pop
add
jne
movsl
in
imul
push
and
les
mov
mov
out
fistpll
out
inc
scas
pop
daa
lret
xor
movsb
addb
push
add
ret
stos
fcoms
arpl
int3
jns
mov
repnz
adc
lcall
lret
outsl
fistpll
lock
js
mov
mov
test
js
or
arpl
fwait
stos
and
dec
push
popf
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
std
cmp
push
jp
out
and
dec
fdivs
in
adc
mov
int3
sub
ret
fidivrl
scas
and
call
and
xchg
adc
adc
mov
call
daa
cld
pop
sub
add
sub
movsl
cmp
cmpsb
hlt
jle
pop
jbe
push
call
js
xchg
push
dec
cmp
pop
inc
mov
add
insb
clc
xor
xor
inc
or
js
mov
xor
notl
xlat
out
mov
dec
lea
mov
in
dec
inc
lds
sub
imul
ret
or
cmp
inc
mov
aam
int3
jae
in
mov
xor
xchg
add
rcl
xchg
setp
stos
clc
jp
lods
jl
fsubrs
push
loope
test
aas
jne
lods
mov
push
add
outsl
aaa
sbb
xchg
jge
sbb
push
jmp
lock
cmp
in
dec
ss
mov
lcall
stos
xor
shr
jae
pop
add
pop
mov
mov
lods
test
pop
dec
cmp
aam
dec
ss
dec
push
sub
fs
push
notl
pop
idiv
jne
mov
pop
filds
mov
aas
add
test
clc
ficomps
mov
out
gs
push
pop
mov
sub
push
dec
xchg
sub
mov
jle
lods
adc
sub
lahf
inc
add
stos
test
data16
mov
movsb
ficoms
jo
fsubr
into
cmp
enter
popf
fs
inc
cmp
jno
and
and
lods
lods
clc
cmpsb
pop
in
and
aas
pop
xchg
xor
cmp
adc
add
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
les
jmp
inc
jge
mov
insb
mov
mov
dec
pop
jmp
pop
pop
js
cmp
jp
mov
push
xchg
ret
ss
fidivl
sub
mov
popa
bound
lcall
mov
add
loopne
pop
aas
sar
loop
sub
subb
popf
cli
scas
adc
nop
push
xor
in
cli
pushf
sti
test
jl
or
lock
mov
xor
adc
bound
pop
add
movsl
jae
test
dec
scas
push
rorl
pop
iret
pop
data16
xchg
loope
push
or
push
repz
sub
and
cmpsl
sti
add
cmpsb
mov
sub
push
push
jg
sarl
pop
mov
movsl
fsts
mov
sub
jae
xlat
dec
dec
push
sbb
push
or
pusha
cltd
push
repz
jmp
out
xor
aaa
push
sbb
pop
dec
mov
xlat
rcrb
mov
dec
xor
or
mov
cmp
inc
in
inc
ljmp
mov
repnz
int
ja
mov
mov
cmp
pop
inc
mov
push
adc
jmp
ffreep
inc
cmp
mov
sub
into
push
sub
jecxz
push
mov
lret
push
add
jno
push
mov
fstpl
lret
int3
jecxz
jnp
jbe
jg
fdivr
pop
mov
add
ja
add
outsl
insl
xor
sbb
rclb
scas
or
inc
cli
cmpsb
xchg
cmc
xor
pusha
sub
ljmp
push
stc
mov
stos
jae
ss
testl
push
loop
cmp
out
dec
mov
mov
enter
mov
push
jmp
or
fwait
xchg
adc
cmc
xchg
jmp
loop
into
sbb
pop
sbb
sub
dec
shr
outsl
cmpsl
xchg
movsl
ljmp
fists
adcl
iret
push
jnp
push
inc
aad
ret
xor
add
push
fadd
adc
lock
insb
imul
icebp
xchg
inc
test
in
cmpsb
fimuls
adc
inc
inc
je
imul
scas
je
or
shll
jge
sub
mov
cmp
push
push
mov
lods
lods
sbb
js
sbb
xor
lcall
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
int
push
sub
jle
jo
jle
adc
mov
pop
rorl
stc
arpl
dec
das
xor
es
mov
lods
rclb
inc
mov
loope
lods
aas
sahf
add
mov
daa
sub
hlt
daa
movsb
inc
push
cmc
cmp
mov
fistps
mov
xor
cld
mov
mov
inc
lock
movsb
xor
mov
out
push
popa
std
stc
sub
addl
lods
lea
pop
movsl
cmp
xor
fisubrs
add
inc
xorb
fidivs
sub
jle
fcomi
aad
shl
push
adc
sbb
imul
jae
xchg
mov
xchg
sub
in
mov
jae
mov
xor
mov
imulb
adc
inc
pop
sbb
insb
in
xchg
ja
jmp
out
dec
jmp
cmpsl
lahf
mov
inc
filds
push
mov
fcmovnu
fwait
push
push
push
jl
cmpsb
dec
dec
movsl
mov
lcall
jp
jmp
adc
adc
nop
jb
cmc
scas
pop
shlb
jmp
cli
roll
fimuls
mov
icebp
imul
jno
scas
nop
xchg
cmc
lea
sbb
and
push
adc
xchg
icebp
mov
cwtl
mov
jno
inc
cmpb
cmp
mov
in
push
cld
icebp
pop
icebp
imul
mov
pop
in
inc
pop
lahf
lcall
mov
inc
jmp
sarb
push
dec
test
cmp
lds
rorb
jbe
pop
cs
mov
adc
lods
push
iret
cmp
cwtl
mov
dec
sbb
and
pop
icebp
lock
pop
sbb
call
push
daa
or
shll
push
sbb
xor
xor
xor
lds
mov
popa
add
adc
mov
push
aam
jg
pop
les
stos
pushf
jl
jno
jl
jnp
adc
cmp
xchg
andb
pop
cmp
inc
into
das
push
bound
xor
out
add
in
push
mov
stos
ffreep
notb
push
jns
fisttpll
dec
cli
lret
cwtl
dec
jp
dec
outsb
cmpsl
daa
aam
push
enter
fcomps
lock
gs
or
clc
loopne
fmuls
shlb
pop
pop
outsb
hlt
das
mov
inc
iret
add
sub
stos
pop
repz
pop
add
sbb
fimuls
out
shll
xchg
aam
cmp
pop
dec
andb
pop
pop
inc
dec
imul
xor
jo
jle
dec
sub
mov
mov
xor
add
jmp
fistl
loope
lds
add
mov
and
pop
jo
mov
mov
dec
lods
mov
std
out
jno
xor
mov
stos
movsb
lods
icebp
mov
add
shl
sbb
add
int3
test
mov
dec
mov
mov
ss
xor
js
jno
push
add
pop
lret
daa
dec
xor
pop
insb
push
orb
lahf
push
out
cltd
cld
ja
mov
and
insb
int3
shlb
mov
sub
imul
fisttpl
dec
fisubrs
daa
imul
push
lea
jae
push
adc
push
les
sti
cmpb
shlb
scas
mov
mov
mov
push
pop
push
mov
mov
mov
orl
das
inc
rcrl
fldl
jb
jmp
push
lahf
mov
fiaddl
outsl
imul
pusha
nop
adcb
cmp
imul
repnz
lock
xchg
fnstenv
push
xchg
cmp
stc
xchg
les
inc
rclb
in
int3
jmp
jbe
mov
mov
adc
sub
mov
or
and
cmp
out
mov
jecxz
dec
iret
xor
cmovae
lods
mov
cltd
dec
fcmovnbe
mov
cmp
leave
test
push
sti
mulb
in
xchg
lods
bound
movsb
ss
adc
les
sahf
add
ds
bound
loop
sbb
hlt
dec
push
or
das
bound
negl
dec
ret
and
jg
xchg
inc
rorl
sahf
ds
fwait
cmp
mov
sub
mov
div
imul
pop
push
lahf
sub
pop
inc
adc
shlb
add
icebp
mov
test
subb
inc
mov
inc
jecxz
xchg
lds
pusha
out
cmpl
fnstenv
push
adc
rcl
xchg
dec
fldl
push
int
scas
xchg
imul
dec
stos
fiaddl
ja
je
push
bound
xchg
and
out
sahf
sarl
pop
ret
jg
ror
ss
jp
push
xchg
inc
popa
inc
call
add
insb
push
popa
int3
dec
cmp
cmp
leave
rclb
and
and
cmp
in
sbbl
xor
lods
cmp
ljmp
les
sbb
fmuls
add
xchg
or
jp
add
sbb
mov
das
mov
popa
lods
stos
xlat
pop
cmc
push
jl
pop
clc
jb
es
leave
ja
jne
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
rcrb
jo
mov
and
cmp
add
dec
mov
mov
insl
stc
mov
ds
push
or
popl
shll
rol
lock
mov
sbb
cmp
daa
inc
or
cmp
cmp
xor
lods
outsb
adc
or
lock
gs
js
push
outsb
inc
xchg
or
xchg
add
pop
sub
sub
loope
mov
nop
dec
xor
out
test
mov
mov
fldt
mov
divl
xchg
add
scas
xchg
ss
les
ss
pop
sub
scas
inc
xor
in
icebp
call
xchg
popf
loopne
mov
sbb
jl
ja
pop
mov
push
adc
aad
adc
cmp
mov
out
add
push
shl
loope
cmp
or
scas
xor
fucomi
rol
inc
test
lret
incb
sub
or
gs
pushf
call
jmp
sahf
sub
push
and
mov
cmp
push
xchg
nop
push
movsl
inc
xchg
test
dec
insb
repz
pusha
lahf
inc
iret
testl
and
push
fdivrs
jge
sbb
pusha
pop
sub
push
sbb
repz
xlat
dec
push
iret
inc
sbb
mov
mov
arpl
sub
cmp
sub
sahf
mov
mov
jbe,pn
inc
lret
scas
cmp
mov
rcl
aas
push
sub
and
push
addr16
movsb
add
aad
inc
inc
jbe
ja
fs
push
mov
ja
pop
mov
neg
fiadds
sahf
mov
mov
push
add
ret
pop
fildll
mov
push
push
imul
shr
push
xchg
stc
pop
notl
dec
insb
cmp
push
inc
andb
xchg
mov
out
movsb
jecxz
inc
notb
jmp
stos
mov
xchg
push
in
mov
dec
imul
mov
pop
cld
sbb
in
xlat
cli
xor
push
mov
or
sbb
scas
mov
sahf
orl
jb
pop
jg
or
sbb
stos
jb
xchg
je
xchg
mov
out
loopne
lret
lock
pushaw
gs
sub
mov
nop
rol
lods
add
add
adc
or
xchg
mov
dec
and
mov
pop
fcoml
jp
sub
fsubs
repnz
mov
mov
push
roll
jge
sbb
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
shr
popf
stc
push
lcall
std
das
cltd
add
insl
jbe
jle
jle
arpl
aad
sbb
pop
jne
in
pushf
mov
out
mov
scas
shll
fdivl
jo
or
adc
mov
add
dec
stos
sub
xchg
add
mov
sub
fbstp
leave
shl
xchg
inc
xor
loopne
and
mov
cmpb
aam
pop
std
xchg
repz
outsb
adc
mov
push
add
cmp
fwait
loope
test
mov
adc
mov
aad
aam
mov
stc
mov
js
adc
imul
mov
jb
cmc
jge,pn
pop
xor
test
sbb
addr16
xorl
push
sub
adc
mov
rol
jecxz
add
ja
loopne
filds
dec
or
mov
aaa
lea
bound
or
inc
aad
xlat
je
mov
mov
cmp
popa
and
out
xlat
fcoml
pusha
pop
outsb
pop
adc
xor
sub
sahf
iret
aad
divb
lods
push
decl
jg
in
adc
in
mov
and
clc
add
push
aam
nop
add
sub
nop
mov
mov
jecxz
or
push
xor
and
xchg
xchg
push
out
xchg
imul
test
rclb
dec
add
jo
sbb
stc
jl
cmc
and
xlat
lods
jo
inc
and
sub
lea
addr16
xlat
fbld
rcl
cmc
mov
sub
push
fisttps
mov
ja
jnp
push
lds
push
push
cwtl
xor
aaa
pop
das
adc
lret
movsb
push
sti
fucomi
jb
push
ja
outsb
aas
in
mov
aad
inc
mov
jnp
sub
insl
mov
lret
ret
adc
mov
fildll
mov
xchg
fwait
dec
adc
dec
rol
addr16
adc
data16
mov
addb
and
sbb
jmp
mov
jl
push
cmpsl
mov
push
out
fidivrs
mov
rorb
adc
lock
rcr
fldt
pop
test
outsb
fistpl
jg
cld
ljmp
in
sub
lea
pop
and
outsl
push
mov
push
jmp
bound
das
shlb
repz
ds
call
xchg
shl
and
mov
lds
cmc
lock
addr16
rcrl
adc
push
aad
clc
test
push
pop
cli
push
fwait
and
inc
shrb
arpl
movsl
push
or
in
aad
and
ljmp
out
fists
sub
out
sbb
fsts
pop
pop
xchg
test
ror
push
pop
pop
xor
gs
mov
sub
insb
jmp
outsb
add
das
cmp
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
mov
push
jo
cmp
cmp
cmp
mov
enter
jge
sbb
pop
enter
cmp
enter
and
jnp
lret
repnz
out
lea
imul
ffreep
push
jmp
outsl
mov
sti
adc
sbb
fsubr
cmp
and
andb
repz
rcll
sbb
mov
test
out
std
push
jg
out
push
inc
jbe
mov
fadd
cmp
ret
call
out
rorb
imul
dec
dec
mov
xchg
stc
push
fnstsw
push
mov
inc
fs
or
out
rcr
adc
push
adc
sub
scas
clc
add
pop
jno
loope
pop
push
lret
push
clc
js
dec
mov
scas
or
and
nop
sub
push
aad
or
inc
loop
enter
adc
jno
test
fmuls
repz
clc
mov
mov
mov
lds
shll
movsb
fistpl
jg
inc
mov
jle
notb
xor
and
adc
add
ds
dec
fwait
daa
dec
cmpsl
sti
sub
in
cltd
xchg
test
mov
sbb
ja
fbstp
mov
pop
xchg
cli
lcall
cmpsb
lahf
hlt
mov
iret
ret
bound
fdivrs
les
pop
movsl
xlat
scas
ljmp
sub
sub
aam
cmc
lret
shlb
pop
pop
jmp
rorl
lea
and
enter
outsl
fs
lds
notl
sbb
ret
jecxz
xchg
add
mull
mov
sub
arpl
dec
jb
dec
mov
pop
repnz
sbb
jbe
xchg
ret
popf
xchg
push
iret
mov
arpl
add
push
push
scas
imul
ret
bound
adc
pop
mov
cmp
sub
xor
dec
pop
pop
sub
sti
pop
jl
cmc
rorb
push
dec
int3
lds
mov
push
fsubrl
xchg
inc
cmc
addb
cli
pop
mov
cmp
xor
cmp
pop
push
rcr
aaa
idiv
into
and
xchg
mov
xchg
add
jbe
jmp
dec
push
inc
clc
jmp
call
mov
pop
push
shl
dec
jo
clc
mov
xchg
cmp
sub
shll
outsb
pop
outsl
pop
and
xorb
bound
rorl
mov
mov
and
outsb
aas
hlt
adc
mov
xchg
push
pop
sbb
mov
es
cli
fimull
popa
jns
jl
into
jp
push
sbb
mov
inc
gs
jne
push
hlt
imul
subl
jno
repnz
inc
and
xchg
mov
xor
cmp
imul
adc
icebp
xchg
sub
ret
push
jbe
das
xlat
outsb
std
sub
dec
dec
inc
nop
fwait
pusha
push
or
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
jg
sbbb
jo
jge
jo
adc
push
adc
test
leave
test
mov
mov
in
push
ficomps
mov
in
inc
into
iret
xor
jno
aam
pop
jp
xchg
sbb
jnp
push
fsubrs
dec
frstor
xchg
iret
idivl
pop
dec
mov
movl
cmpsl
xor
outsb
imul
data16
xor
adc
adc
adc
testb
dec
test
dec
pop
xchg
mov
es
jns
xor
aad
cli
stos
cwtl
adcl
subl
scas
inc
xor
roll
jnp
std
movsb
pop
sbb
mov
into
sbb
pop
xor
push
push
fwait
sbb
sbb
dec
pop
les
sub
pop
andl
pop
lcall
leave
call
lahf
and
mov
jmp
and
mov
xor
jecxz
pop
add
loop
sbb
ljmp
dec
cmp
xor
jnp
xor
rol
mov
cmp
lods
negb
jne
push
popf
ret
push
adc
xchg
leave
mov
push
imul
movsb
cli
mov
pop
mov
lock
lcall
jg
dec
sbb
cmp
add
das
stos
or
scas
add
test
ret
imul
fisubrs
sbb
xchg
xchg
and
in
inc
in
push
xorb
rcrl
popf
mov
popf
sbb
xchg
rep
or
mov
sbb
mov
ret
in
sbb
aaa
lods
jl
jl
lcall
dec
pop
out
cmp
sbb
rcl
ret
add
rcr
lods
push
jno
or
xchg
dec
bound
cmpsb
jnp
fbstp
stos
mov
cmp
dec
into
out
out
scas
push
jle
jae
xchg
out
jne
stos
dec
testl
stos
xor
xor
stos
ds
mov
popf
cwtl
cmp
pushf
enter
outsb
aas
fscale
out
out
cmp
pop
imul
cmp
arpl
rorl
leave
xor
std
jg,pt
lret
gs
jo
arpl
mov
push
in
inc
xor
sub
in
gs
fists
mov
lds
xorb
test
jecxz
rorl
clc
out
or
movsb
stos
insl
mov
sbb
mov
mov
jecxz
add
pop
jo
push
mov
fnstenv
call
adc
movsl
ret
neg
mov
aaa
cmp
sbb
pop
push
add
push
pop
ss
fmuls
fwait
xchg
push
dec
lods
xor
cmp
jns
cmp
nop
sub
mov
aad
xor
pop
rorl
mov
inc
rorl
push
xor
dec
jmp
ds
pop
cmp
sub
ljmp
repz
add
pop
push
add
aas
dec
xchg
loope
xchg
pop
fmull
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
packsswb
and
sbb
cmp
push
jb
pop
stos
cmpsb
jl
xor
cmovnp
jbe
out
aam
shrl
daa
dec
and
xchg
out
cmp
int3
xor
xor
jl
addb
cmovns
adc
popa
cmp
stos
cmp
ja
jne
mov
inc
dec
loopne
mov
pop
inc
iret
fst
push
je
dec
pop
xchg
test
xchg
fcomps
adc
fldt
adc
scas
push
jle
or
lods
iret
jecxz
stos
xchg
pop
icebp
jb
and
bound
xor
lods
das
ret
out
add
mov
mov
lcall
addl
jp
jmp
lret
pop
sbb
fcoml
push
inc
dec
push
jb,pn
enter
pop
cli
call
add
sub
in
sub
push
pop
pop
out
test
shlb
sar
add
push
xor
xchg
pushf
lds
xchg
insl
loop
test
mov
mov
mov
ljmp
xchg
mov
ja
mov
sbbb
sarl
lahf
pop
mov
bound
jae
cmp
jno
in
lods
cld
popa
or
test
xchg
mov
out
mov
mov
xor
mov
js
inc
aas
cmpsl
ficompl
pop
fwait
ja
lods
gs
push
lcall
pop
scas
fnsave
fwait
xlat
and
inc
push
push
js
sub
aas
lret
and
push
xchg
std
pop
out
pop
in
inc
fisttpll
negb
daa
push
divl
lds
cltd
jmp
cs
stc
fmuls
push
xchg
ret
ret
loope
add
lahf
mov
pop
jnp
inc
out
hlt
or
ret
lret
hlt
rorb
add
mov
cmp
mov
mov
mov
call
inc
arpl
faddp
in
imul
cltd
out
or
mov
and
mov
xchg
testb
shrb
pop
and
xchg
mov
enter
or
jecxz
jg
out
mov
push
movsb
mov
mov
adc
cmc
daa
pop
push
dec
push
hlt
adc
jecxz
out
dec
shlb
icebp
fldl
push
out
jno
pop
cld
sbb
adc
repz
pop
jp
mov
int
pop
scas
insl
adc
stos
jl
int3
sub
push
rclb
and
xlat
mov
jp
rorl
xor
xlat
sub
sbb
mov
roll
xchg
mov
xor
mov
push
and
push
js
lahf
fdivp
push
push
push
test
xor
add
movsl
in
pop
lods
cld
rorl
sbb
sub
push
flds
sub
or
adc
xchg
xor
daa
enter
imull
mov
lret
jp
enter
or
sar
out
popf
es
mov
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
cld
mov
mov
cmp
ret
scas
sbbb
mov
mov
or
aad
pop
idivb
push
repnz
fists
mov
dec
movsl
mov
and
jno
mov
push
inc
inc
cmp
cmc
mov
mov
add
loop
xchg
fldenv
pusha
push
shr
add
and
inc
dec
pop
push
leave
stos
mov
inc
cmp
mov
clc
fs
jl
pop
jno
lods
cmpsl
push
jo
and
ljmp
pop
inc
jmp
xchg
out
scas
sti
insb
pusha
jnp
pusha
test
out
push
xor
arpl
jg
leave
add
push
pop
jns
or
dec
hlt
jo
jg
lods
in
ret
adc
inc
je
cmp
sbbl
sub
lahf
add
xchg
mov
or
sub
jnp
inc
popa
mov
out
fistl
stos
repnz
aas
pushf
fs
es
pop
out
mov
push
jns
mov
jp
pop
cld
int
inc
or
lahf
insb
or
dec
pop
iret
push
push
xlat
adc
mov
mov
lock
push
mov
les
inc
mov
adc
dec
addr16
adc
push
lds
mov
out
pop
pop
insl
je
inc
cli
jmp
lret
xor
add
mov
adc
ror
xor
dec
xchg
xchg
mov
push
gs
xor
mov
lock
xchg
je
sarl
mov
int3
in
mov
cmc
or
dec
inc
popa
mov
cmp
lret
frstor
clc
scas
mul
mov
dec
cmpsl
pop
outsl
loop
inc
loopw
fsubl
scas
outsb
sbbb
ss
out
adc
fidivl
xchg
loop
out
movsb
daa
into
jge
dec
rclb
inc
mov
nop
enter
mov
clc
xor
js
bound
push
add
int3
sbb
les
sub
sub
outsl
pop
sti
jnp
scas
imul
and
lahf
ds
cld
dec
cld
je
push
xchg
movsb
out
inc
xor
add
repz
or
mov
sbb
jmp
inc
sbb
sbb
fstl
lods
lea
movsb
faddl
mov
jno
xor
adc
movsl
adc
sub
push
adc
mov
xorb
mov
mov
xor
stc
cltd
xor
push
xchg
pop
dec
gs
outsb
push
imul
jb
pop
jmp
mov
cmp
andb
inc
mov
inc
jg
movl
insl
sub
add
sarb
lcall
push
jg
inc
add
jae
shlb
mov
inc
ljmp
cltd
stos
bound
sahf
mov
pushf
jg
sahf
in
xor
js
mov
shrb
pop
jo
in
cltd
mov
cli
pop
jle
cmp
aaa
repz
call
pop
loopne
jp
out
mov
fisubs
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
sub
mov
leave
and
cmp
mov
pushw
fidivl
and
inc
enter
xor
jmp
add
mov
cmp
pop
sub
sti
push
push
push
xchg
mov
shlb
aam
or
sub
js
pop
adc
and
jo
fmuls
jp
fs
xchg
mov
jl,pt
jns
mov
mov
cmpsb
ret
stos
xchg
and
push
xchg
mov
sbb
mov
fwait
addr16
in
and
rcl
or
stc
aaa
push
cltd
mov
out
and
jmp
pop
mov
sbb
ret
popa
lret
into
push
pop
imul
mov
out
push
repnz
call
test
jo
popa
je
shrl
pop
dec
rorb
cwtl
push
repz
idivb
and
je
jl
out
sbbb
mov
stos
cmpxchg
out
pop
xlat
mov
and
sub
mov
add
fucomi
clc
rclb
add
sbb
ud0
xchg
mov
xor
mov
in
jbe
aam
pop
jae
jle
pop
lods
pop
jg
xor
insb
out
or
pop
xchg
ljmp
mov
jge
add
ds
leave
xor
subb
xchg
icebp
mov
pop
push
and
jmp
cld
xchg
push
int
dec
dec
jl
sbb
mov
sbb
data16
and
clc
xor
das
out
jge
int
addr16
fnsave
fldenv
adc
lea
mov
mov
inc
sub
jmp
push
cmpb
lahf
dec
sub
xor
stos
and
sub
fidivrl
outsb
sub
cmp
and
dec
stos
add
loopne
jl
and
xchg
arpl
xor
inc
int3
dec
cltd
push
dec
decl
mov
sbb
les
pop
test
jle
pop
jg
bound
jmp
test
pop
adc
and
add
cmp
cmc
push
rclb
cmc
pop
pop
lcall
jmp
mov
sbb
jns
push
gs
daa
cmp
mov
cmp
ret
push
jae
xor
xchg
dec
adc
xor
dec
jl
mov
out
push
decb
cltd
stos
ljmp
xchg
cs
stos
jnp
ret
push
bound
add
imul
push
adc
mov
lock
adc
dec
pushf
packuswb
pop
leave
in
test
aam
das
aam
movsl
pusha
pop
in
sub
ljmp
jecxz
outsb
dec
and
out
sub
push
je
ljmp
mov
cmc
dec
mov
or
scas
pop
push
mov
xor
dec
or
mov
pop
jno
dec
sub
fs
push
pop
mov
adc
cmp
push
jae
test
xchg
call
cmp
pop
cmp
jae
out
mov
roll
mov
jg
inc
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
test
jo
cmp
xchg
push
mov
shlb
rorb
mov
nop
iret
cmp
icebp
outsl
add
movsb
stc
cmp
daa
sbb
mulb
xchg
stos
or
mov
sub
test
and
arpl
mov
loop
loope
or
add
shrl
sahf
negb
pop
mov
and
pop
jbe
pandn
inc
sub
setle
cmp
int
adc
push
mov
lret
xor
imul
in
pop
data16
pushf
cmp
push
push
arpl
mov
push
mov
aaa
xchg
icebp
stc
imul
or
inc
pop
call
shll
dec
mov
sbb
aaa
scas
mov
jl
aas
lea
sbb
jle
hlt
arpl
inc
cwtl
leave
sub
dec
loop
xorb
dec
and
and
add
les
ret
xchg
mov
pop
cld
jb
je
push
and
push
sbb
mov
add
xorl
cmp
imul
scas
cmp
pop
imul
lret
xchg
pop
inc
mov
cmp
movsl
add
or
les
sub
pushf
lds
jne
pop
hlt
mov
or
cmp
out
popf
pop
gs
cmpsl
add
xor
mov
imul
xchg
jl
in
stc
jp
roll
or
fnstcw
sbb
xor
aad
cmp
push
xchg
push
pushf
or
dec
int3
mov
jg
outsb
push
inc
mov
push
or
je
cli
cs
sub
mov
mov
lods
scas
jae
cmpsl
mov
dec
aaa
adc
cmp
cli
rcrb
mov
movsl
jecxz
adc
push
mov
sub
xor
daa
jg
out
shrb
mov
push
ja
int
aam
adc
stos
mov
push
mov
adc
dec
clc
cmpsb
cmp
lret
cltd
jmp
fmull
inc
fucomip
movsl
jl
xor
xchg
rcrb
adc
jg
pop
push
dec
data16
sub
pop
jns
mov
jmp
aaa
xlat
cmpsb
mov
neg
in
adc
xchg
jmp
dec
or
imul
in
in
testb
fadd
or
nop
inc
jns
dec
jecxz
adc
loope
pop
int3
int3
mov
push
hlt
lcall
lods
dec
push
jmp
sbb
bsr
pushf
not
lods
ss
or
sub
stos
pop
int3
pop
mov
lret
int
pusha
test
out
and
jns
mov
lods
std
lret
xor
roll
or
sbb
add
mov
sub
dec
rorb
mov
and
adc
insb
mov
daa
mov
shrb
pop
xor
popf
inc
aas
js
mov
cld
popf
into
rol
xchg
cli
pop
add
repnz
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
roll
push
insb
push
sub
cmp
scas
scas
xor
lret
push
je
scas
cmc
ljmp
lods
scas
inc
cli
ja
loopne
loopne
mov
shr
and
push
cmp
cwtl
daa
inc
push
push
ret
sbb
sbb
ja
insb
bound
scas
xchg
xchg
dec
pop
xlat
add
popa
ja
xchg
jg
repz
mov
icebp
fdivp
rcll
push
push
mov
jno
push
cmpsb
xchg
mov
push
dec
movsb
push
dec
loope
es
mov
int3
cmp
pop
xchg
out
pop
rorb
js
pop
push
ljmp
and
mov
inc
jmp
es
test
or
je
or
mov
lods
mov
pusha
xor
mov
mov
je
data16
add
xor
leave
lahf
loop,pn
xchg
je
into
aaa
arpl
out
mov
push
repz
mov
rcll
inc
test
push
roll
or
imul
cmp
and
add
movb
xchg
imul
fwait
pushf
lods
push
test
leave
xchg
xor
in
jbe
jp
inc
or
ja
sub
pop
pop
xchg
push
sahf
cmpb
jp
dec
push
or
xor
iret
scas
xor
insb
bound
pop
mov
jnp
mov
mov
jmp
inc
cwtl
pop
insb
lahf
test
ret
fdivl
test
sbb
xchg
add
in
cmp
cltd
pop
push
jo
cmp
dec
push
and
push
pop
ret
dec
sub
cli
xor
loopne
push
sbb
push
push
xchg
dec
xchg
mov
into
xor
pop
mov
cmpsl
lds
ror
lret
dec
movsl
std
sub
inc
out
imul
jae
add
cmp
mov
push
pop
dec
repnz
jp
mov
and
sub
xor
sub
stc
inc
jl
inc
jle
pop
sbbb
dec
filds
sbb
adc
jl
and
mov
dec
and
fcmovb
lea
std
and
icebp
fwait
daa
fcomps
hlt
pushf
movsl
std
jns
mov
stos
and
das
lds
gs
dec
mulb
xchg
mov
test
adcb
jo
imul
add
mov
push
dec
fisubl
sbb
pusha
fcompl
add
mov
adc
mov
int
call
cmp
push
rcr
popa
adc
adc
push
or
dec
stc
push
dec
pop
test
shlb
outsb
cmp
sub
mov
xchg
hlt
decl
adc
sub
sarl
cwtl
xchg
inc
push
negb
out
dec
popf
jecxz
adc
cwtl
mov
imul
add
inc
cld
lea
dec
cltd
adc
pop
enter
push
pusha
icebp
shll
push
stos
bound
cmp
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
ljmp
jo
jle
jo
jmp
sbb
cmp
stc
call
and
ss
add
mov
mov
aaa
out
or
rclb
push
sub
pop
aam
scas
cmp
adc
aad
call
insb
adc
repnz
ror
dec
daa
cmpsb
pop
dec
xchg
add
popa
mov
xor
sub
lret
ljmp
aam
inc
mov
push
mov
and
int
icebp
cmpb
jge
pop
sub
ret
sbb
adc
call
adc
loope
push
mov
orb
jnp
test
out
pop
mov
push
ficoml
adc
shlb
dec
mov
mov
xchg
movsl
call
xchg
xor
mov
lock
fxtract
xor
jl
xorl
jg
aam
dec
stc
xchg
or
cmp
mov
dec
jnp
scas
test
cmp
inc
xchg
stc
jl
jnp
js
lods
pop
adc
ds
mov
imull
jmp
sbb
clc
test
mov
xor
cmp
xchg
push
cmp
cltd
mov
fwait
and
jns
and
jecxz
cli
fisubs
ds
add
xor
rorb
jb
leave
sub
pop
push
lret
dec
mov
inc
nop
movsb
xchg
lret
mov
pop
jg
lcall
xor
fildl
insl
adc
push
adc
xchg
daa
pusha
lret
in
xchg
jne
pop
outsb
les
arpl
movsb
mov
dec
ffree
iret
mov
imul
je
jg
push
sbb
pop
dec
mov
pop
arpl
dec
dec
cmpsb
movsl
pop
cmp
lcall
stc
sub
add
mov
and
or
imul
fwait
shrb
inc
movsb
xchg
test
roll
dec
mov
and
jae
mov
loope
pop
movsb
jne
in
ds
out
jle
das
xchg
das
mov
cs
sbb
fmulp
pop
insb
mov
mov
pop
pop
xchg
xor
jp
mull
cmp
or
adc
push
stos
out
das
lea
push
jge
subb
mov
arpl
mov
push
clc
inc
mov
or
push
stos
adc
add
inc
ror
repz
fcompl
or
sbb
sub
mov
sbb
ret
cwtl
shrb
addr16
jnp
popa
jge
push
shll
cmp
mov
push
std
inc
add
add
mov
jmp
ja
and
dec
xchg
jg
dec
xor
jo
fucompp
push
mov
imul
aad
add
push
shll
sahf
ds
add
mov
fwait
mov
or
nop
enter
inc
mov
movsbl
pop
adc
inc
push
xchg
mov
or
mov
mov
and
cs
out
ljmp
push
shr
push
ds
xchg
dec
pop
dec
push
pop
jp
je
and
jg
jo
xor
push
or
xchg
xchg
dec
sbb
das
push
notb
lods
adc
and
mov
inc
adc
nop
inc
movsb
xchg
andb
jg
fwait
fwait
fwait
cwtl
subb
test
adc
icebp
jl
mov
sarb
sbb
orw
push
cld
daa
xor
sbb
sti
bound
or
fs
ret
aad
dec
das
add
xchg
mov
stos
sbb
mov
inc
add
fbstp
xlat
pop
mov
push
adc
xchg
pop
mov
mov
cwtl
iret
out
in
xor
push
popf
sbb
sbb
push
xor
mov
mov
fwait
rolb
dec
cmp
js
mov
addr16
outsb
daa
sub
outsb
jnp
imull
xor
push
mov
push
cmp
mov
dec
jbe
jne
cmpsl
push
rcl
jle
mov
mov
dec
mov
cld
leave
fistl
leave
ret
in
jg
pop
xchg
dec
dec
data16
call
clc
jae
dec
or
jmp
ret
fsubrl
jecxz
dec
pop
mov
shll
movsl
mov
test
ss
adc
je
sti
sbbb
out
lret
rcll
decl
adc
dec
pop
jno
enter
imul
into
mov
sarb
stos
fsubrl
aad
jbe
pusha
xchg
push
push
mov
sub
jne
sahf
inc
fisubl
jp
lods
xor
pushf
pop
mov
iret
shrb
sub
push
jle
mov
and
cs
ljmp
imul
leave
pop
mov
popf
roll
addr16
cmp
outsb
push
lods
dec
mov
rolb
mov
xchg
or
push
jae
subb
das
std
movsl
test
lods
lods
or
cmpsl
cmp
ss
or
xchg
in
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
and
jo
jle
jo
ljmp
clc
movsl
dec
mov
jae
mov
test
mov
idivl
cwtl
xchg
mov
mov
mov
orl
jp
addl
sahf
arpl
out
mov
mov
je
lock
out
xchg
shl
sub
out
pop
arpl
add
ficomps
in
ja
push
adc
shll
inc
repz
xchg
jp
mov
xor
push
push
outsl
add
push
xchg
outsl
das
gs
test
fadds
out
add
mov
pop
mov
cmp
idiv
xchg
jp,pt
mov
ss
cmp
cmp
cwtl
arpl
sub
sub
stc
pop
pop
pop
mov
and
add
cltd
mov
test
sub
adc
mov
mov
mov
inc
mov
movsl
dec
sub
ljmp
leave
jp
stos
sbb
rcrb
fsubp
stc
and
mov
dec
lock
insb
sbb
or
sarb
sub
jo
mov
aaa
les
cmpb
fbld
inc
cmp
mov
xchg
add
pushf
jge
imul
xchg
into
out
pop
mov
scas
push
in
rcrb
fwait
adc
push
push
mov
aas
or
out
dec
mov
jo
cmp
and
aad
pop
mov
lea
or
mov
jmp
sbb
fs
inc
jo
dec
lcall
outsb
xorb
movsl
jmp
mov
jecxz
xchg
outsb
push
mov
hlt
mov
fs
push
faddl
push
sti
mov
sbb
adc
mov
daa
mov
jne
cs
stos
outsb
mov
mov
mov
xlat
dec
mov
mov
jle
rol
add
add
inc
call
add
mov
sbb
add
out
loop
jmp
divl
inc
lret
adc
mov
cmp
cmpsl
jp
mov
negl
cmp
push
js
es
stc
xlat
cltd
xor
repz
cmp
mov
stos
ficoms
pop
leave
xorb
pop
addr16
aad
icebp
xchg
and
lret
sbb
js
add
gs
les
inc
aas
nop
jbe
mov
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
popf
xor
ds
jo
cmpsl
jg
jo
ret
ljmp
movsl
pop
pusha
dec
aad
stc
sbb
mulb
rcr
insb
fisubl
in
orl
push
or
jnp
jnp
popa
add
lds
xor
mov
addb
stos
jb
in
pop
stos
fwait
outsb
pop
cli
xchg
loop
shr
cmp
fisubrl
inc
push
pop
jle
bswap
imul
das
mov
jmp
aad
shr
pop
jno
inc
outsb
pushl
and
mov
call
adc
sbb
shrb
xchg
call
stos
xchg
xchg
xor
add
xchg
and
inc
fsub
jecxz
lds
ja
adc
sub
es
push
push
repnz
movnti
insl
aaa
pusha
movsl
lock
push
jno
addr16
bound
cld
mov
cmp
mov
sub
jmp
sahf
cmpsb
mov
lahf
cmp
adc
dec
pop
sub
sbb
es
push
adc
cmp
jne
lods
mov
and
dec
adc
sbb
testb
das
jl
or
jmp
stc
data16
xor
incl
mov
or
dec
jo
jno
shld
mov
andb
cs
dec
jge
jae
sahf
fstl
fbld
push
ret
cmpb
pop
into
adc
adc
sub
mov
cs
cmp
dec
jb
xlat
sub
nop
in
sti
mov
insb
ljmp
sbb
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
scas
gs
cmpsl
jg
jo
fbld
stos
int3
sarb
sub
mov
out
rclb
leave
repnz
mov
lds
lcall
push
movsb
ror
subl
dec
jo
test
xor
xchg
mov
scas
mov
ljmp
mov
push
xor
out
lcall
movsb
or
add
dec
lods
scas
jne
js
insb
cmp
stc
push
or
mov
gs
sbb
adc
insl
shrl
int3
jg
and
mov
mov
push
cli
movsb
mov
test
push
mov
ljmp
outsb
stos
stc
cwtl
mov
cmp
cmpsb
ljmp
stos
dec
mov
and
shll
xor
add
xchg
mov
adc
pusha
cmpsl
adc
or
mov
pop
aam
rorb
aam
xor
je
call
xorl
leave
pop
cld
push
lods
xor
fimuls
loope
stc
arpl
popf
jb
aad
decl
hlt
es
fwait
outsb
imul
dec
jnp
push
sub
lea
mov
int
aas
lods
cmp
in
int
aad
in
mov
pop
push
pop
xchg
inc
call
insl
out
jns,pn
inc
push
loope
cld
stc
test
fnstenv
lods
inc
sbb
adc
popa
shll
cli
and
mov
data16
add
push
xor
dec
cmpb
insb
sarl
ja
in
cmpsl
insb
pop
pushf
pop
mov
adc
add
std
inc
add
jae
inc
add
repnz
inc
add
add
add
add
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
dec
jno
pop
mov
jo
jg
jo
sub
push
push
insb
insl
jo
or
cmp
dec
ljmp
ret
in
jb
fmull
bound
xchg
ja
sbb
dec
push
xor
and
push
andb
inc
mov
das
jle
shlb
aad
jns
in
sub
add
jmp
ficoms
icebp
lahf
jmp
mov
jns
mov
aaa
dec
addb
out
xor
out
jl
pop
pop
or
cs
xchg
mov
adc
jne
dec
lret
xchg
fisttpll
inc
test
cwtl
jl
repnz
jmp
pushf
and
xchg
je
leave
adc
sub
imul
mov
sbb
fisttpl
and
jge
jno
test
add
scas
add
sbb
fcoml
mov
cmp
ja
stos
test
jmp
and
ljmp
pop
cmp
outsb
jb
adc
adc
fdivrl
arpl
or
jle
mov
aas
lcall
cmp
mov
sub
rcll
ja
or
neg
cs
out
mov
jno
or
xor
fcoml
and
daa
push
hlt
mov
mov
sub
push
mov
cmp
out
jne
pop
cs
push
push
sbb
sub
movsl
icebp
clc
and
data16
jae
test
pop
push
xchg
clc
call
mov
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
mov
scas
pop
xor
jo
loop
jo
mov
hlt
imul
adc
adc
insl
pop
inc
repnz
adc
cmpl
pop
cltd
inc
dec
adc
xorb
and
fiadds
subb
inc
test
scas
dec
add
xor
dec
dec
stos
fisubs
loope
and
out
jne
push
lea
jb
dec
jge
dec
repnz
xchg
in
inc
push
loop
mov
scas
out
shrb
pop
adc
xor
loope
add
mov
les
int
call
loope
push
mov
inc
sahf
pop
mov
xorb
or
ljmp
insl
adc
pop
xchg
jl
cld
fsubrs
and
imul
sti
inc
mov
and
dec
loope
rcrb
js
adc
cs
dec
push
adc
sub
fldt
pop
mov
pop
pop
scas
rclb
lods
xor
sbb
mov
fcmovb
sub
and
dec
cs
scas
shlb
push
loop
lret
in
bound
inc
or
sbb
sahf
add
inc
repnz
jne
out
fstpl
shr
and
mov
icebp
ljmp
inc
sbbl
in
pop
inc
cwtl
mov
aas
leave
in
pushf
push
jne
ret
mov
add
adcl
cmp
test
mov
pop
adc
xchg
pop
das
out
push
xor
mov
xor
aad
movsb
or
mov
jecxz
xchg
gs
cmp
dec
mov
cltd
and
data16
repnz
test
lcall
shrl
xchg
fcmovnbe
imul
mov
inc
pop
or
xorb
mov
jb
or
scas
dec
fs
or
jo
in
cmc
dec
mov
fnstsw
in
aam
inc
mov
aam
sbb
pop
xor
lock
pop
jmp
js
push
cli
jp,pn
int3
cld
lods
mov
jge
rol
cmpsb
loopne
ja
push
sub
xchg
push
lret
jns
push
or
das
imul
mov
in
cmp
inc
mov
in
fs
aad
mov
incl
sbb
gs
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
daa
or
jle
cmp
loop
jo
and
hlt
jle
xor
rcrb
test
add
sub
aas
xlat
cmp
mov
negb
cwtl
rolb
insb
jecxz
push
sub
addl
xlat
mov
jae
stos
loope
into
nop
xchg
nop
and
sbb
pop
dec
das
daa
ret
sahf
xchg
fistpll
lea
in
rol
sbb
push
mov
jno
lcall
xor
rclb
push
sbb
dec
cmp
notl
daa
lock
fucompp
jmp
mov
cmp
adcb
or
or
js
sub
push
adc
pop
pop
jmp
cmp
shl
clc
push
insl
jg
in
adc
imul
adc
mov
cmp
ss
shlb
pusha
iret
push
out
push
idiv
repnz
notl
mov
and
pop
decb
inc
jg
lds
xor
arpl
mov
push
mov
xchg
cmp
js
mov
sbb
cli
add
adc
sarb
jl
pop
dec
mov
and
and
arpl
and
inc
das
frstor
ret
pop
call
data16
aam
scas
outsl
push
push
pop
add
leave
outsl
aad
cmp
js
push
ret
cmp
xor
dec
cmp
imul
imul
pop
mov
into
push
mov
loope
insl
or
xchg
roll
sbb
xchg
pop
mov
sub
xchg
rolb
push
mulb
dec
add
lret
cmc
lret
sbb
fildl
sub
idivb
repz
fucom
sub
jecxz
rorl
pushf
xchg
hlt
pop
sahf
jle
ljmp
jne
mov
mov
stos
outsb
adc
sub
movsb
shll
icebp
lcall
inc
mov
adc
xchg
icebp
dec
ss
and
add
add
adc
std
je
test
aad
xchg
pop
into
sbb
jg
mov
sbb
pop
dec
cmp
inc
mov
testl
hlt
and
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
or
inc
pop
lds
and
jo
push
sub
mov
outsl
aad
dec
les
sarb
je
rcll
ret
test
cmp
cmpl
sub
mov
xchg
jmp
hlt
data16
push
xchg
test
mov
or
aas
enter
scas
add
test
std
xor
aaa
inc
dec
push
arpl
inc
xrelease
and
shlb
xlat
xchg
mov
mov
xchg
arpl
adc
cmp
xor
stos
shrl
push
out
test
rorb
aad
push
xchg
mov
push
loop
mov
in
inc
mov
rclb
cld
es
int3
push
sub
pop
sbbb
jl
loope
js
mov
cmp
inc
dec
push
sub
jg
xor
js
or
out
daa
mov
sub
pop
in
insl
sbb
cwtl
ja
mov
jle
sti
jp
test
xchg
ret
xchg
in
imul
pop
sbb
js
rcll
out
pop
xchg
fdivrs
sar
ja
adc
lods
jns
in
pop
sbb
fisubrl
xor
flds
test
fistpll
xchg
cmp
inc
ss
push
int3
mov
adc
insb
sub
jecxz
xor
xor
cmp
or
adc
and
or
mov
loopne
and
jge
cmpsb
or
mov
xchg
mov
add
lds
inc
idivb
jo
push
jae
insb
les
repz
mov
push
mov
jno
xor
dec
xchg
repz
daa
cmp
sbb
inc
rorl
mov
sbbb
pop
iret
or
mov
aam
or
and
pop
cli
mov
jmp
xor
adc
lods
je
popf
add
adc
xchg
mov
in
pop
mov
rclb
in
mov
cld
insb
push
call
popa
sarl
mov
in
addb
int3
test
xchg
stos
repz
cmp
dec
cltd
or
or
pusha
add
mov
mov
ljmp
imul
jecxz
cmp
jecxz
inc
mov
cmpsb
into
add
mov
jmp
adcb
pop
nop
loop
jecxz
xor
xor
jb
out
mov
adcl
cmpsb
je
jae
push
push
pop
mov
nop
mov
adc
mov
mov
and
ret
arpl
movsl
mov
add
push
lea
and
data16
enter
fmull
cld
movsb
xlat
jp
mov
mov
push
ljmp
das
mov
js
adc
test
and
clc
add
sbb
test
inc
cmp
xchg
mov
loopne
cmp
xchg
idivb
push
push
inc
in
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
lcall
jge
jo
jecxz
dec
mov
xchg
dec
mov
mov
js
sub
movsb
inc
mov
bound
push
mov
mov
dec
jbe
fldcw
faddl
mov
jge
je
add
aaa
stos
push
lods
pusha
sysret
pop
clc
aam
jbe
fwait
dec
rol
jae
and
cltd
jp
call
ljmp
fistl
cmp
mov
push
lea
in
mov
pop
sbb
daa
in
int3
xchg
sbb
or
addr16
xchg
inc
shr
push
sbb
pusha
adc
lret
add
adc
lret
cli
test
mov
jecxz
fs
mov
sti
add
jnp
jp
repz
jge
mov
push
push
roll
ficompl
out
ret
hlt
imul
inc
xor
sbb
mov
pop
inc
lret
imul
jle
insb
adc
loope
shlb
jb
or
loop
adc
fiaddl
pop
clc
push
movsb
inc
test
sub
and
std
mov
inc
cltd
push
ret
mov
out
sbb
lds
decb
imul
loope
and
xchg
loopne
js
aas
mov
jg
mov
mov
jbe
hlt
and
mov
xchg
mov
cmpsb
push
mov
mov
aas
push
mov
adc
out
out
sbb
cmp
dec
aad
jmp
hlt
loop
ljmp
xchg
pop
and
or
jle
add
jge
inc
int
inc
pop
ljmp
data16
andb
adc
or
adc
xorl
sti
xor
movsb
xor
sub
ret
sahf
mov
je
aad
sbb
lock
xchg
or
jnp
xor
sub
pop
lds
lock
in
and
jg
cwtl
fisubrs
orb
hlt
fcom
cmovb
icebp
push
mov
bound
and
push
adc
xchg
nop
mov
lods
mov
ss
test
fadds
sbb
and
iret
add
bound
mov
push
cmp
push
pop
add
popf
sbb
outsb
add
mov
and
xchg
xchg
add
test
popf
and
subb
xor
dec
xchg
dec
push
mov
pop
and
pop
rcrl
sbb
lret
in
cld
jle
sub
enter
adc
push
jge
daa
cmc
sub
mov
in
adc
dec
add
mov
test
push
mov
adc
bound
pushw
popf
out
add
and
ljmp
xorb
loopne
add
adc
mov
int3
lods
fwait
dec
adc
ja
pop
dec
push
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
cwtl
mov
xor
jo
and
jo
fcompl
cmp
pop
popa
mov
jns
jno
jno
ljmp
pop
push
lock
lret
mov
jecxz
mov
call
pop
xchg
inc
or
jo
sub
repz
lods
les
xchg
cmc
push
mov
arpl
sub
cwtl
fsub
inc
dec
sub
lods
pop
xor
xor
dec
or
xchg
jno
nop
jmp
out
das
inc
in
sarl
into
mov
iret
out
les
add
cmpl
xchg
aad
xor
add
jecxz
in
lods
je
xchg
mov
je
xor
aas
sarb
sub
add
push
sub
xchg
mov
in
clc
xor
jl
mov
jbe
hlt
in
or
aas
mov
xchg
mov
repnz
mov
stc
mov
sbb
mov
pop
fdivrl
mov
xchg
lret
xor
nop
ljmp
pop
inc
cmpsb
inc
mov
add
xchg
or
xchg
andb
xlat
addr16
sbb
fidivl
or
cwtl
inc
test
or
dec
les
rcll
ljmp
cmp
sbb
dec
sti
ja
add
sbb
divb
sti
test
lea
sub
mov
add
xor
sahf
stc
cmp
push
pop
push
shlb
jno
jnp
push
repnz
cmp
inc
push
pop
adc
in
mov
push
mov
jae
gs
mov
xchg
outsb
daa
pop
mov
outsb
pop
xchg
sub
imul
and
sbb
stos
adc
test
mov
xorb
into
ja
cmp
mov
fisttps
mov
fcompl
mov
sbb
sti
outsb
lods
cmpl
ljmp
repz
sbb
sarb
das
xor
int3
jns
cltd
shrb
sub
test
addl
or
out
push
stc
clc
movsb
out
imul
dec
ret
movsl
mov
jmp
stos
dec
mov
scas
pop
in
xchg
adc
and
repnz
jl
scas
fmulp
push
and
in
jbe
outsl
test
xchg
adc
adc
aaa
iret
mov
fsubl
jp
aaa
inc
repz
xlat
mov
mov
jbe
sbbb
bound
sub
ja
or
nop
or
aam
cmp
loope
out
cmc
sbb
and
push
sbb
mov
add
mov
push
jg
fiaddl
sub
sahf
xor
fstl
stos
mov
mov
push
iret
jle
and
jmp
or
sub
bound
fstl
jl
loop,pt
ret
sbb
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
cltd
bound
xor
jge
jo
xchg
add
inc
and
push
dec
xlat
inc
push
pop
adc
repz
and
in
sub
cli
scas
lods
add
lret
xchg
hlt
xchg
dec
cmp
cwtl
xor
lock
adc
fsubs
lods
inc
push
inc
pop
cmc
testl
lods
outsl
in
loopne
sbb
jnp
adc
xchg
out
push
push
les
and
fs
adc
out
jl
call
sti
outsb
xor
dec
pop
hlt
pop
mov
stc
movsl
or
mov
into
mov
pop
xchg
mov
hlt
enter
movsb
nop
and
or
and
fwait
sahf
mov
push
mov
xor
inc
subl
sbb
cmc
xor
add
push
mov
push
lret
nop
outsb
xor
in
lret
mov
lahf
vmread
ror
push
adc
decb
cmp
aas
jmp
repnz
xchg
pop
pusha
test
xlat
and
or
jmp
sti
sub
cmp
mov
push
mov
jno
cmpsl
out
xor
xor
les
lahf
sahf
add
jmp
leave
arpl
and
inc
or
or
cwtl
mov
fsubrs
xor
inc
jecxz
inc
hlt
addr16
xor
test
and
imull
iret
adc
mov
bound
adc
into
out
arpl
mov
ficoms
add
gs
pusha
xchg
fildl
shll
adc
aam
loope
sub
cmpsl
mov
pop
outsb
jns
ss
std
cmc
movsb
imul
jnp
adc
xor
into
pop
subb
les
out
xchg
andb
rcrb
loopne
jle
fcmovu
pop
jo
ds
lods
push
sbb
jg
push
imul
lods
adc
adc
push
mov
setge
sbb
sbbb
ja
shrl
sub
inc
popa
dec
push
call
fimuls
or
xchg
add
insb
pop
stos
addr16
sbb
andl
jge
jmp
push
fisttpl
add
dec
fincstp
xor
xor
hlt
inc
and
adc
scas
xchg
in
cmp
pop
cmp
cmp
lods
or
icebp
mov
lods
inc
inc
add
rclb
into
rcl
mov
xchg
xor
jmp
push
gs
inc
or
push
lods
add
mov
subb
nop
inc
out
adc
ja
xchg
mov
mov
jge
fwait
bound
sub
cmp
sbb
xor
push
jp
sbb
stos
stc
jge
leave
xchg
and
pop
out
cmc
test
pop
and
pop
and
mov
push
pop
xchg
es
add
out
notb
fadds
test
inc
out
cmc
das
cmp
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
xor
leave
jo
and
jo
pusha
or
mov
fsubrs
jg
lods
paddsb
bound
shll
dec
int3
insl
inc
movsb
xlat
arpl
xchg
or
jmp
pop
add
mov
mov
lds
test
cli
and
mov
mov
add
aaa
pop
adc
jb
add
push
in
xor
andb
jae
mov
or
xchg
dec
inc
lret
cmp
imul
movlps
lahf
mov
shll
cmp
into
imul
shlb
inc
arpl
push
hlt
and
sbb
js
pmaxub
mov
mov
cmp
cmpsb
outsb
pop
outsb
scas
dec
aam
sub
popf
mov
pop
pop
push
add
xlat
push
mov
hlt
push
movsl
popa
mov
imul
cmpsb
loope
adc
rolb
xchg
jns
xor
sbb
xor
inc
inc
scas
das
es
xchg
xlat
inc
mov
dec
pushf
loope
ret
push
jge
pop
test
ficoms
mov
ds
xor
xchg
fwait
js
fwait
in
xor
sbb
adc
outsb
xlat
adc
xchg
mov
or
mov
gs
mov
aaa
popf
and
adc
jns
lock
imul
insl
imul
cltd
out
push
mov
les
cltd
outsb
ja
jae
jp
call
inc
lds
lret
sbb
xor
call
sub
flds
pop
cld
lea
add
push
cmpsb
xor
mov
cmp
ljmp
sbb
sbb
lret
dec
pop
or
sbb
pop
cmp
cmpsl
push
ds
xchg
in
loopne
lret
xchg
inc
push
lea
sbb
xchg
into
cltd
testb
lret
sub
insl
mov
sub
cmc
sbb
mov
mov
pop
shll
iret
xor
hlt
std
in
adc
mov
and
fcmovbe
leave
icebp
pop
mov
jl
lods
rol
loopne
cs
sbb
jg
in
xchg
in
add
mov
mull
into
xlat
mov
mov
iret
lcall
cmp
fisubrl
sti
cmc
loop
lea
js
push
pop
fstl
fsubs
nop
xchg
jle
cltd
cmp
loop
jl
pop
push
movups
lods
fdiv
mov
push
fxch
add
bnd
jmp
aam
out
sti
mov
aam
cmpl
out
cltd
dec
pop
mov
or
dec
pusha
sbb
add
test
add
mov
stos
push
mov
xor
xchg
leave
inc
mov
cmc
fwait
cmpsb
imull
inc
sub
push
les
pushf
and
xor
and
cld
movsl
hlt
mov
or
push
xchg
cmp
cmp
xlat
push
je
xor
push
xor
movsb
jbe
add
test
inc
fwait
dec
bound
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
pop
lds
jo
jge
jo
test
std
mov
mov
into
pop
mov
fadds
stos
roll
add
fwait
sub
ss
outsb
xor
mov
jbe
pop
out
push
je
fsubrs
or
dec
pop
pushf
out
mov
dec
pop
jecxz
xchg
aad
add
cwtl
nop
mov
out
mov
mov
ljmp
mov
sbb
out
mov
push
xor
lret
cmc
popf
mov
adc
sbb
dec
jl
addr16
fisubrl
lock
adc
push
rorb
popf
dec
push
xchg
inc
fwait
pop
sbb
aas
pop
lret
mov
sub
mov
sub
mov
or
shrb
scas
push
cmp
xlat
scas
bound
push
push
sub
jae
dec
sahf
jbe
xchg
dec
in
dec
pop
push
daa
loop
out
adc
mov
inc
das
add
cld
push
mov
sbb
cltd
mov
fsubr
imul
pop
aam
and
lods
aaa
out
insl
cmpsb
cmp
clc
ja
push
cmp
aaa
adc
aad
lret
pop
and
clc
cmp
jnp
dec
rorl
cmp
pusha
inc
gs
enter
mov
jnp
or
pop
push
pop
daa
add
das
jb
in
test
push
and
scas
mov
loope
pusha
inc
jne
or
mov
cmp
stc
insb
push
fs
and
dec
outsb
ds
insb
leave
jne
xor
es
int
in
mov
pop
xchg
out
enter
adc
cmpsb
call
lods
in
cmp
xor
jl
push
dec
lds
int3
mov
sbb
fdivrl
pop
es
pop
lods
cld
imul
in
xlat
jns
rorb
sbb
push
stos
mov
in
jp
jp
jmp
dec
mov
js
mov
mov
in
push
movsb
and
dec
push
mov
cmpsl
pmulhw
rcl
stos
push
ja
movl
jns
fs
xor
fwait
dec
pop
add
divl
out
imul
ja
and
out
sbb
seta
cmp
mov
jns
or
popw
adc
cmpsl
sbb
imul
pop
xchg
test
add
jle
ret
lods
loop
shll
or
fcomps
dec
mov
pop
lods
sahf
mov
xor
in
xchg
mov
fisubs
sub
sbb
push
mov
lret
push
js
popa
inc
daa
sub
cmp
clc
ret
call
testl
xor
mov
push
mov
cmpsl
dec
xchg
ret
mov
push
in
cld
sahf
fstl
shll
movsl
cmp
into
cmpsl
inc
add
inc
mov
mov
jns
fnstsw
ret
mov
sbb
lcall
mov
fstpt
and
out
aas
decl
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
movd
xorb
jo
and
jo
add
scas
idiv
ljmp
adc
xchg
and
xchg
fdivrl
pop
push
movsl
jae
jmp
mov
push
scas
idiv
aam
data16
xchg
lar
add
es
subl
mov
je
in
ret
inc
mov
jae
and
sarl
xlat
subl
in
mov
shrl
sub
push
lahf
lret
je
out
repnz
int3
push
lret
cld
mov
iret
sbb
sbb
xchg
andl
bound
hlt
ss
dec
mov
nop
jecxz
push
fwait
int3
xchg
mov
ret
fistps
sbb
pop
ja
mov
mov
or
mov
push
stos
sbb
out
xchg
lods
pop
lods
fcoml
aas
subb
addr16
mov
loop
jne
xchg
lock
push
sub
fcoms
jge
jae
scas
imul
push
mov
sub
jno
jg
loop
loope
adc
push
and
dec
out
sbb
pusha
ja
mov
les
jnp
push
dec
aad
out
jbe
repz
lret
mov
das
jg
hlt
in
inc
scas
push
imul
mov
sub
cvtps2pi
push
push
dec
sub
xchg
cltd
mov
sub
adc
jno
int
pop
std
xor
jle
xor
cmp
test
lcall
and
sahf
xchg
sbb
xchg
xor
imul
cmp
xchg
cmp
faddl
ja
int
jl
aam
cmp
out
cltd
pop
ja
dec
sbbb
mov
das
scas
iret
movsb
pop
fsts
sbb
int3
negb
sbbb
add
pop
adc
out
ffreep
bound
adc
push
push
lock
lods
mov
fadd
and
mov
cld
mov
imul
loopne
push
pop
mov
add
or
push
outsl
pop
adc
addr16
in
test
mov
addb
lds
dec
mov
stos
lds
stc
or
xchg
sbbb
cmp
data16
scas
sub
adc
aad
das
and
ss
cmp
jb
stos
push
xor
pop
mov
xchg
adc
sub
leave
jl
pop
outsl
cmpsl
stos
or
je
sar
adc
fildll
ja
push
cmp
sub
xlat
or
lods
sarl
addr16
mov
mov
loope
pop
xchg
mov
or
incb
loop
mov
loope
add
sti
jne
loopne
int3
inc
pop
mov
push
xchg
cs
push
mov
sbb
fistpll
lahf
or
sub
xchg
mov
mov
mov
push
adc
popa
arpl
push
xchg
cmp
aas
orl
out
into
cld
add
dec
leave
pop
not
push
mov
or
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
cltd
push
ja
fisubl
jp
dec
jl
mov
add
sub
jae
mov
movsl
or
arpl
add
adc
in
stc
add
cmpsb
mov
cld
mov
lea
loope
test
cmp
je
int
loope
add
lahf
add
xor
mov
sbbl
and
or
stos
jl
mov
and
lcall
ret
iret
and
cmp
push
cmp
push
and
dec
incl
lds
jg
je
push
xchg
call
hlt
jne
cmp
push
jge
jp
dec
mov
bndldx
sbb
push
push
xchg
ds
cwtl
movsb
imull
or
dec
add
in
jne
fidivs
or
insb
and
aas
in
pop
imul
push
push
add
mov
push
lahf
jecxz
stos
push
mov
or
jl
mov
adc
lods
add
and
test
lret
sbb
sti
jmp
pop
mov
mov
xorl
lods
cltd
scas
iret
insb
je
dec
inc
dec
pop
jp
and
call
add
into
jl
or
inc
dec
cwtl
test
dec
pop
bound
dec
out
sbb
xchg
xchg
pusha
pop
in
jl
mov
adc
insb
pop
aam
bound
out
les
hlt
popf
mov
in
in
pop
xchg
xchg
jecxz
gs
xchg
fwait
arpl
sti
push
mov
out
pop
xchg
shll
lcall
push
cmp
sbb
dec
xchg
cmp
pushf
xchg
inc
mov
push
clc
cltd
test
into
aas
aad
nop
aaa
cwtl
rcll
cmc
adc
jmp
xor
dec
xor
outsb
in
dec
jns
cmp
imul
pop
and
or
pusha
loope
inc
out
push
xchg
or
scas
mov
mov
outsl
jb
lcall
repz
dec
and
fildll
mov
adc
jbe
pop
lods
rcr
in
cld
mov
pop
push
inc
popa
xchg
add
imul
cmp
mov
cmp
adc
or
and
inc
mov
cmp
bound
mov
sub
xor
call
int3
aad
push
addl
inc
mov
mov
sbb
mov
das
push
popf
pushf
xchg
rorb
jle
xchg
leave
fcmovu
mov
adcl
shll
test
in
lret
adc
addb
jne
idivb
xor
addr16
ret
xchg
or
mov
push
test
adc
push
inc
rol
mov
outsl
mov
test
test
fwait
push
iret
xor
das
cmp
inc
jge
push
jno
outsl
cmp
sar
fsubrl
stos
and
outsl
mov
mov
pop
pusha
and
and
mov
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
sbb
jo
and
jo
dec
pop
mov
cmc
out
cmp
cmpsb
dec
and
push
jl
dec
cs
xchg
std
or
pop
sub
xchg
call
out
pop
inc
ds
rcl
pop
in
into
jnp
ss
mov
xchg
add
and
stos
out
pusha
xchg
scas
xchg
adcb
push
lock
aaa
leave
mov
popa
stos
adc
mov
lods
int
sarb
pushf
mov
cmp
mov
cmp
push
aaa
pusha
dec
movsl
mov
mov
pop
inc
in
int3
fstps
fwait
adc
mov
sahf
inc
mov
pop
call
mov
mov
adc
scas
test
ss
jo
xlat
pusha
inc
roll
gs
push
xorl
js
sbbb
inc
cmp
sti
push
ja
cmc
or
lret
inc
das
pop
popa
int3
cs
cmp
cmp
sbb
stos
cltd
cli
das
cli
adc
add
ret
xor
mull
xor
bound
inc
fisubl
mov
jecxz
rorb
push
add
loopne
jo
stos
or
xor
repnz
out
popf
mov
mov
pushf
int
cltd
sub
pop
or
and
aam
push
mov
pop
mov
inc
loop
push
xchg
push
push
fstpt
inc
xor
push
mov
push
adc
add
jbe
cltd
mov
es
fidivs
sbb
mov
pop
data16
jbe
push
push
xchg
inc
push
jp
sbb
xlat
mov
shl
or
data16
movsb
ss
mov
pop
inc
xchg
lds
aam
dec
sbb
sbb
aas
notl
push
cli
and
push
aas
test
mov
mov
sbb
mov
cmp
adc
addr16
pop
mov
adc
push
dec
inc
cmpb
fwait
pop
add
icebp
jno
pop
pop
fldt
ret
jb
add
int
into
cmp
cwtl
jo
cmc
and
xor
pop
out
shr
pop
sub
inc
add
lods
in
sub
xchg
repnz
inc
sbbb
fcomps
pop
mov
andb
pop
stos
mov
pop
add
mov
notb
push
das
xor
jl
fcomip
jg
std
sbb
mov
insl
mov
fcomi
push
dec
int3
fadd
imul
out
addr16
cmc
repnz
jae
add
sbb
push
test
inc
les
addr16
add
and
push
shll
sbb
or
icebp
rclb
enter
sub
dec
jae
movsl
or
sbb
lahf
sub
lods
pop
pushf
sub
cs
and
jmp
mov
pop
ja
push
push
sbb
xor
sbb
pop
mov
xchg
xchg
mov
dec
movsl
dec
mov
ret
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
lcall
jge
jo
imulb
xchg
cmpsl
ss
push
hlt
imull
arpl
mov
push
push
leave
add
mov
in
dec
repnz
call
cmp
js
xlat
adc
jle
ja
fidivrs
push
push
mov
jne
jl
adc
in
jmp
rcll
addr16
xchg
test
out
sahf
int3
aas
mov
sbb
fwait
mov
inc
add
stos
in
pop
jl
cmpl
insl
xorl
cmp
daa
xor
mov
adc
subl
ja
jne
sti
sub
notb
addr16
aaa
or
jg
jbe
mov
loop
sbb
xchg
inc
dec
je
xchg
pop
and
outsl
andl
xchg
mov
pop
push
add
insb
mov
call
jge
pop
xchg
aaa
push
cwtl
inc
xchg
dec
cmp
aad
mov
inc
xor
mov
in
mov
imul
scas
inc
cmp
addb
mov
int
ret
jg
sub
or
ds
dec
js
insl
shrb
adc
repnz
flds
push
rcrb
jns
or
sbb
loop
dec
cltd
xor
icebp
push
mov
cld
pop
mov
lds
gs
pop
push
lods
mov
mov
push
fs
add
xchg
gs
jns
xchg
adc
aas
cmp
mov
push
fists
pop
jecxz
mov
les
scas
jae
push
addr16
jns
dec
ret
loope
je
les
aas
jno
cmpsb
in
das
cmp
data16
mov
mov
daa
sti
movsl
shll
addl
inc
pop
pop
mov
mov
outsl
out
mov
adc
andl
adc
add
fnstsw
subl
loope
push
inc
jmp
inc
test
iret
jecxz
push
pop
repz
push
fcoms
cmp
jecxz
dec
int
xchg
jmp
fisubs
rorl
leave
cmp
dec
xor
inc
in
hlt
repz
mov
insl
adc
test
stc
fs
add
roll
fwait
cmpsb
cli
sbb
fs
push
lea
push
mov
std
push
add
mov
or
pop
jge
pcmpgtw
into
add
repz
ja
adc
or
outsl
rolb
fmul
ficompl
pop
outsb
xchg
mov
add
out
sub
or
xor
jl
jmp
aad
popa
or
pop
add
pop
push
adc
pop
insl
call
rcrl
into
daa
sar
loop
xor
je
sbb
cld
mov
sbb
adc
dec
inc
adc
sub
push
push
xchg
shl
loop
xor
pushl
lea
jmp
add
out
out
xor
call
xchg
hlt
data16
jo
and
jo
dec
push
add
inc
mov
inc
es
mov
cmc
nop
ljmp
inc
or
mov
scas
mov
xlat
sub
mov
jmp
lret
mov
push
rcr
fdivr
adc
scas
push
arpl
outsl
xor
out
pop
lods
jle
sub
shrb
in
insl
outsb
sahf
ds
dec
jmp
mov
shlb
mov
mov
dec
cli
in
cmp
jmp
jnp
mov
jle
mov
leave
loope
dec
and
pop
inc
fcomip
out
add
test
popf
int
fstpl
jns
cmp
mov
cli
insb
test
enter
arpl
ljmp
scas
or
mov
adc
inc
decb
lea
jp
sbb
fcomps
fcomps
xor
rcrb
insl
fwait
inc
popa
pop
sbb
push
dec
sbb
sahf
shlb
pop
or
jo
sbb
test
enter
xchg
lock
inc
dec
inc
and
dec
mov
and
ret
cld
push
xor
mov
aaa
mov
dec
pop
push
call
in
add
pop
cmp
fisttpl
inc
adc
and
leave
das
insb
addr16
inc
push
popf
fidivrl
xchg
int
test
jbe
dec
out
mov
hlt
jmp
loopne
adc
adc
mov
loopne
out
ja
dec
mov
xor
and
cmp
cli
sub
and
or
test
push
cltd
or
pop
xchg
xor
movsb
cld
push
push
popf
sahf
push
xor
popa
jp
xchg
sub
mov
and
mov
or
fs
out
push
add
inc
mov
jne
negl
cmp
negl
insl
and
push
inc
mov
cmc
lcall
lods
lock
dec
push
pop
xchg
mov
jl
gs
test
test
insb
push
pop
xor
push
ret
sti
fisubrs
sub
adc
pop
lock
sbb
dec
pushl
hlt
push
out
iret
push
pushf
or
mov
inc
adc
int3
mov
cmpsb
aaa
cmova
fisttps
mov
cmp
mov
cmp
mov
adc
add
call
jo
jmp
xchg
dec
dec
jae
scas
mov
fwait
mov
jbe
xlat
out
inc
fwait
test
xchg
notb
cld
ds
push
lods
or
fwait
rol
cmp
dec
mov
call
into
movsl
divl
leave
loopne
out
pop
lret
out
out
mov
and
ret
dec
add
push
mov
repnz
jne
or
cli
sqrtps
hlt
mov
inc
cli
cmp
jmp
fbstp
push
movsb
xor
mov
or
ret
inc
dec
mov
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
cs
jmp
and
jo
mov
cld
mov
shrl
xor
shl
sbb
jnp
aad
add
xchg
bound
shll
pop
pop
jmp
xlat
sbb
test
xor
int3
leave
out
sub
jae
scas
and
dec
sub
sub
aas
in
inc
dec
popf
imul
das
pop
fs
xor
stos
fs
test
xor
es
xor
jae
enter
xor
or
mov
dec
pop
gs
subb
mov
fwait
std
mov
xor
pop
js
lahf
paddsw
dec
imul
mov
inc
cmp
push
fimull
cmp
mov
or
mov
and
gs
arpl
int3
jne
std
lods
adc
bound
xchg
sub
cmpsl
xchg
out
daa
mov
mov
das
fcmovb
jns
sarb
in
push
test
adc
ljmp
shl
dec
mov
cli
mov
pop
sbb
popa
adc
and
pop
mov
les
aas
lcall
enter
lret
in
jne
inc
clc
mov
das
jg
xlat
test
fnsave
insl
or
jo
adc
or
ljmp
stos
cmp
mov
daa
xor
lcall
mov
hlt
xchg
scas
push
push
rcrb
lods
add
mov
pop
xchg
pop
sub
mov
leave
into
sysret
movsb
xor
mov
mov
shrb
mov
mov
adcl
xchg
cmpsl
aas
out
mov
push
ret
cs
out
mov
ficoml
mov
repnz
shl
xchg
sub
or
jo
xchg
and
jne
pop
mov
jne
ret
test
pop
mov
mov
xlat
in
adcb
sbb
or
stos
fs
push
mov
mov
dec
xor
push
movsb
test
mov
mov
push
xor
and
and
adc
adc
cli
jns
lahf
pop
repz
ss
pushf
mov
pop
adc
rorl
xor
fiadds
aas
pop
cmc
ret
jmp
in
xor
mov
aas
push
int
cmp
daa
push
sti
cmpl
fwait
push
cmp
outsb
cmp
pop
mov
adc
pop
jmp
sub
and
icebp
rep
sbb
add
xlat
insl
out
mov
xchg
fcompl
lods
call
loop
movsb
jnp
hlt
sub
mov
xlat
or
and
scas
hlt
daa
js
sbb
lea
rorb
fcoml
mov
imul
jl
xchg
pusha
sbb
jg
adcl
shlb
mov
dec
dec
loop
sub
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
mov
and
jo
mov
sarl
outsl
xchg
or
cmpl
sbb
inc
loope
xor
out
pushf
scas
jecxz
ds
cld
sub
popf
xor
lahf
add
jo
in
xorw
sbb
sbb
xchg
pop
cmp
sti
mulb
aam
and
dec
mov
or
and
inc
jb
pop
dec
jp
push
test
loopne
pop
jnp
mov
mov
pop
shrb
cmp
pop
leave
ror
and
lds
jns
xchg
inc
mov
in
mov
push
popf
lcall
stc
dec
aad
push
pushf
fdivs
inc
inc
push
stos
dec
int3
mov
jl
in
and
jmp
mov
pop
inc
hlt
divb
out
addr16
mov
shl
sahf
and
test
jmp
rol
cmp
xchg
js
icebp
testl
shlb
fmul
fcmovu
push
ja
pop
push
jns
dec
push
test
jnp
cmpb
mov
or
jne
imul
mov
or
mov
xchg
xchg
inc
rorb
mov
inc
jne
mov
xor
and
sbb
lds
popf
mov
inc
add
mov
scas
pushf
jmp
pushf
out
lcall
add
pop
fs
and
jg,pt
xor
outsb
jecxz
test
popa
sbb
push
outsb
loopne
sar
ret
loopne
push
cs
or
mov
adc
call
mov
cmp
sub
jl
cmpsl
jge
adc
aas
in
lock
fnsave
dec
hlt
dec
mov
jns
daa
pop
lret
lea
rolb
inc
and
mov
dec
test
pop
jecxz
mov
mov
mov
setl
loopne
popa
sub
sub
fidivrl
ja
rclb
xchg
iret
scas
and
fisttpll
arpl
xor
pusha
dec
adc
imul
cmp
pop
int
and
nop
xor
push
jecxz
repz
popa
mov
mov
idivb
xchg
and
clc
out
jmp
leave
cwtl
push
fildll
inc
aam
xchg
xchg
jmp
cmpsl
inc
fisubrl
ds
add
jle
insb
mov
in
mov
or
jg
mov
jg
lcall
add
shl
pop
mov
push
cmpsb
xchg
pop
stos
cmp
and
and
nop
popf
pop
les
inc
insl
nop
hlt
repz
jbe
imul
outsl
pop
loopne
xor
or
in
aam
mov
mov
stc
lods
pop
lds
xchg
movsl
std
xchg
dec
ds
jg
aam
xlat
sbbb
pop
mov
pushl
cmpsb
sub
dec
test
test
mov
jnp
mov
popa
lret
fcomi
pusha
inc
mov
enter
call
dec
ds
cmc
test
cmp
and
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
in
jo
lahf
jge
jo
mov
movsb
fwait
cmp
and
daa
adc
dec
mov
cli
pop
dec
jecxz
and
fldt
nop
ficompl
in
mov
cmp
pop
or
lret
out
das
pop
lret
xchg
int3
add
cmp
xchg
sti
cmp
std
fld
push
fistpll
pop
loopne
sarl
in
dec
movsb
cwtl
dec
test
xchg
into
popf
fs
jnp
xchg
mov
test
fcoms
mov
js
adc
lcall
mov
cli
mov
inc
add
leave
xchg
push
test
mov
mov
lock
adc
out
jecxz
ss
cwtl
sub
xchg
lret
dec
mov
rclb
lods
cwtl
aas
sub
jbe
xchg
xchg
add
push
aam
pop
lods
add
push
fnsave
adc
push
adc
enter
sub
xchg
and
sbb
ficoml
cli
aam
mov
hlt
sbb
idivl
or
mov
in
sarl
dec
xchg
filds
adc
popa
clc
shlb
loop
out
inc
xchg
adc
cmp
push
imul
insl
cld
lahf
aam
movsl
cmc
adc
sahf
scas
loop
mov
ror
inc
popf
and
dec
dec
loopne
cmp
xchg
in
cli
fcoml
cmc
inc
inc
adc
and
xor
nop
faddl
push
push
dec
mov
xlat
shll
mov
in
cli
ja
or
mov
mov
push
cmpsl
mov
mov
nop
aam
lcall
daa
jl
cmp
cmp
adc
inc
aas
sub
dec
pusha
in
mov
pusha
rcl
ljmp
sarl
push
xchg
adc
andb
arpl
fsubr
arpl
mov
dec
aad
mov
test
sti
and
dec
sahf
inc
cmp
add
aam
jb
jmp
dec
mov
in
popf
mov
sub
pop
clc
ljmp
mov
xchg
adc
xchg
addb
leave
clc
scas
js
popf
hlt
je
pop
xor
iret
jl
fdivrs
adc
outsb
push
mov
sub
mov
push
mov
push
push
xchg
mov
pop
psubsb
hlt
jno
out
mov
lods
pusha
out
xchg
cwtl
rorb
push
out
sbb
mov
xor
xchg
push
mov
test
imul
sahf
addl
sbb
hlt
mov
out
jmp
fs
fisubs
cmp
sbb
dec
pop
rorl
shlb
out
dec
mov
xchg
inc
mov
imul
or
push
inc
mov
inc
scas
and
cltd
mov
or
or
lods
aas
or
mov
add
cltd
mov
jae
sbb
ljmp
fdivrs
push
in
stc
jnp
push
mov
mov
not
pop
gs
and
dec
popf
ss
and
jo
popf
or
test
mov
sahf
leave
push
fistps
call
enter
fbld
cld
xlat
sub
jl
outsb
and
sbb
push
jo
inc
pop
and
xchg
xchg
loop
push
test
cmc
das
popf
dec
lahf
sti
pop
mov
test
lea
lods
jg
push
cli
hlt
test
mov
and
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
imul
jo
lahf
jge
jo
jns
test
roll
adc
in
mov
clc
or
mov
and
pop
aas
pop
xlat
sub
repz
sbb
sbb
pusha
sahf
cmp
sarl
jnp
mov
fisubl
xor
sti
cli
pop
dec
xor
stos
dec
fsub
add
in
std
push
pushf
mov
mov
clc
xchg
pop
xchg
divl
or
daa
loope
dec
std
sahf
sbb
dec
xor
ror
popf
leave
arpl
and
adc
mov
push
xchg
sub
or
jo
or
lock
out
mov
jb
movsl
jnp
test
shl
push
rorl
or
xchg
mov
push
push
mov
push
add
out
subl
pop
test
fsubs
pop
pop
cwtl
or
mov
fsubl
sub
cwtl
mov
mov
ds
dec
gs
sbb
jg
xchg
fstps
sub
mov
cmp
dec
test
out
adc
xchg
je
fst
sar
repnz
xchg
xchg
das
fnsave
push
pushf
insb
pop
adc
cltd
fnstcw
cld
pushf
push
aaa
push
ss
mov
mov
fimull
in
sub
mov
outsb
out
mov
cs
lock
pusha
ljmp
mov
sub
imul
and
adcb
je
pop
xor
and
outsb
mov
mov
enter
mov
xchg
mov
inc
push
ret
sub
js
push
lods
pop
stos
mov
mov
cmp
cmp
or
cmp
ret
orb
inc
dec
push
xchg
les
push
cmp
movsl
flds
les
or
pop
es
outsl
or
fsubs
int3
mov
out
dec
dec
jp
fwait
mov
hlt
sbb
add
adc
movsb
pusha
pop
movsw
inc
sarb
outsb
in
mov
repnz
ss
inc
cmpsb
rcrb
dec
pop
stos
aad
mov
jne
push
jns
lea
xlat
and
mov
cmp
and
pop
sbb
jmp
pusha
or
cwtl
movsb
pop
clc
jbe
psadbw
stc
jl
sub
in
popa
cltd
sub
or
push
cmpsb
loop
pop
add
jo
stos
sar
jne
jbe
mov
pop
sbb
add
dec
or
sub
push
xor
add
sbb
add
xchg
cmpsl
mov
pop
xor
cmc
inc
xor
fldcw
rcrl
dec
pop
inc
cwtl
mov
out
mov
lods
mov
and
xor
pop
test
int
scas
xchg
mov
xchg
mov
cmp
mov
aaa
and
call
dec
xchg
dec
notb
mov
repnz
fists
xchg
lret
xchg
mov
enter
in
xchg
aad
inc
jecxz,pn
mov
fsubp
xor
add
nop
sti
repz
imul
xchg
mov
enter
nop
ljmp
and
adc
pushf
orb
sarb
xchg
xchg
outsb
rcl
xchg
push
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
aam
pop
sbb
jo
lahf
jge
jo
and
xchg
jnp
imul
pusha
mov
add
mov
jg
mov
sbb
outsl
or
mov
push
push
xor
je
ljmp
sahf
adc
inc
fmull
pusha
outsb
jg
push
push
mov
shrb
popf
fwait
test
ja
out
pop
lds
ja
gs
ljmp
add
cmpsl
stos
test
cld
scas
xchg
ret
mov
in
push
lock
lea
into
enter
add
push
rorb
mov
rol
shrl
xlat
jbe
cwtl
cmp
cmp
push
and
inc
out
inc
dec
mov
sub
enter
jnp
or
mov
out
testb
testb
sub
or
lods
fldl
sbb
aaa
push
mov
mov
xchg
lds
jp
lds
or
shr
fistl
stos
sbb
dec
sub
add
pop
repz
fs
inc
das
dec
adc
in
push
ljmp
cs
push
jae
push
cwtl
sub
orb
dec
dec
or
int3
mov
mov
adc
sbb
je
dec
int3
jp
lds
inc
xor
notb
ss
push
in
addr16
adc
ret
aaa
notb
das
dec
sbbl
jno
movsl
sub
dec
lcallw
pop
mov
imul
cld
and
push
ja
ss
mov
leave
mov
loopne
gs
add
movsb
addr16
and
add
cmp
jae
add
sbb
leave
or
adc
adc
pushf
notb
or
sbb
adc
jge
fnstenv
dec
sbb
dec
jp
push
dec
bound
aad
aaa
mov
aas
stc
lods
mov
repnz
fmuls
xchg
loop
sbb
jno
pop
xor
popa
xchg
mov
adc
sub
outsb
xor
icebp
mov
xchg
add
fwait
bound
mov
push
or
hlt
mov
push
addl
inc
iret
ss
rcrl
mov
mov
or
sub
rcl
xor
adc
subl
aad
cmp
aaa
xorl
cwtl
scas
cs
pop
xchg
cmpsb
sahf
mov
mov
fwait
mov
mov
jns,pn
fst
or
pusha
inc
das
dec
aaa
lret
sub
lock
inc
xor
mov
sahf
punpcklbw
pop
fucomi
push
imul
roll
push
pusha
sub
into
jo
notb
inc
daa
jl
mov
ds
lret
bound
das
loop
call
xor
lret
cmpsb
andl
cmp
lods
in
in
test
loop
test
ljmp
adc
sub
ljmp
out
mov
xor
push
scas
rol
mov
icebp
jle
in
sub
add
leave
inc
insb
popa
adc
out
imul
fwait
stos
and
lds
pop
inc
cmp
fwait
out
jne
lods
sbb
cld
addl
nop
por
in
popa
incb
rcr
loope
pop
loopne
jne
sbb
pop
push
sbb
jge
xchg
addr16
push
pop
add
in
push
cmc
enter
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
popa
push
stos
jmp
lahf
jge
jo
cwtl
cmp
imulb
ret
sub
outsb
sbb
jl
dec
mov
repnz
sbb
jmp
or
xchg
push
xlat
inc
xor
xor
fs
xchg
xchg
loop
psadbw
mov
sahf
popf
pop
mov
xchg
fmuls
cmp
mov
push
dec
add
repz
rclb
sub
imulb
fmulp
dec
imul
out
xchg
inc
pop
enter
inc
xchg
jge
lret
bound
rorb
pop
insb
dec
cmpsb
pushf
je
and
mov
mov
js
xor
movsb
fcompl
popf
insb
fs
jle
xorl
in
in
repz
xlat
aad
sbb
push
cs
cmpsl
inc
xor
xlat
ss
push
sbb
sub
dec
cmpsl
push
inc
inc
push
inc
enter
fucomi
out
ljmp
dec
in
repnz
dec
xor
int
inc
fldcw
jecxz
pop
call
pop
jb
aad
jns
mulb
idiv
mov
pop
in
push
xchg
addr16
or
mov
imul
mov
mov
frstor
sti
fucomip
push
test
cli
mov
push
cwtl
jg
pushf
movnti
inc
repnz
das
adc
mov
loop
sub
out
repnz
jle
xor
outsl
cltd
dec
xor
imul
fisubrl
fisubrs
and
jl
xchg
sahf
shr
jg
fprem1
adc
fldenv
sub
inc
pop
inc
cmp
ss
iret
xor
into
mov
push
and
in
sub
add
add
aam
mov
dec
cwtl
push
or
inc
sbb
dec
in
fsubl
scas
incl
mov
lret
shrb
sub
mov
and
fldl
jmp
push
call
mov
das
nop
test
push
test
jl
add
push
repnz
insb
loopne
psadbw
aad
nop
popf
dec
lods
lea
call
cmpsb
dec
and
ficoms
xchg
add
fists
pop
dec
push
or
ret
xor
jb
repnz
pop
fcoml
inc
jae
pop
call
ja
clc
mov
jae
xchg
jge
adc
push
xor
mov
xor
push
loop
jo
call
mov
lds
add
jbe
push
pop
mov
mov
hlt
mov
xchg
ss
and
test
add
jns
aaa
mov
xor
jmp
dec
push
test
ja
cmp
mov
in
popa
jmp
push
cld
cmc
xor
sbb
outsb
pop
and
and
add
adc
and
pushf
add
sub
insb
adc
cmpb
addr16
sub
outsl
ds
in
jle
xlat
ficomps
jne
ret
xchg
test
xchg
push
fstps
into
divl
dec
lods
arpl
outsl
pop
push
and
nop
xor
xchg
xchg
xchg
or
and
mov
mov
int3
fcomps
dec
sub
orl
cli
movb
xchg
cmp
add
mov
and
cmp
aam
jnp
sti
mov
fs
cmp
in
xchg
add
movsl
arpl
dec
loop
sub
add
push
repnz
mov
mov
out
lods
call
mov
dec
dec
inc
pop
jae
and
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xchg
fs
add
jo
lahf
jge
jo
adc
andb
cltd
mov
je
lahf
cmc
mov
adcb
dec
xor
mov
xchg
inc
jle
iret
je
jmp
jge
testb
sbb
lods
push
ret
jmp
lret
xchg
xchg
mov
fxch
mull
cltd
mov
js
or
je
fmuls
out
push
bound
loope
out
stos
imul
mov
jb
fnsave
not
shlb
stos
sti
out
out
lock
or
cmp
mov
cmp
mov
xor
mov
sbb
sbb
fbld
inc
repnz
clc
mov
dec
stos
cmp
outsl
imull
daa
fs
lahf
jl
in
int
pop
jae
xchg
pop
leave
mov
inc
xor
outsl
mov
mov
into
inc
cmp
push
into
push
mov
xchg
xor
iretw
shll
mov
sbb
dec
jg
icebp
inc
test
cld
out
mov
pusha
and
aam
sbbl
push
sbb
sahf
lcall
sub
shlb
dec
rcll
mov
lds
in
and
xlat
pushf
mov
xor
inc
loope
mov
cwtl
xchg
dec
mov
xor
hlt
xor
adc
sbb
mov
clc
stos
and
mov
sub
xor
ret
jecxz
adc
stos
aas
mov
ljmp
mov
lret
aam
add
popa
cmp
mov
inc
sbb
decb
ljmp
mov
stos
dec
jns
or
fs
inc
outsl
outsb
add
test
dec
mov
cs
xlat
or
mov
cmp
in
xchg
dec
cmp
xor
ret
pusha
add
test
fcoms
xchg
notl
scas
lea
shll
sahf
pop
xchg
cld
sub
test
jnp
cwtl
sbb
push
lds
and
jae
cmp
repz
xlat
loope
inc
and
sub
sub
mov
and
or
dec
push
push
mov
xor
imull
jl
jmp
loop
jne
outsb
push
inc
leave
popa
xlat
mov
fildll
mov
lea
lea
lcall
lret
loope
andl
cld
inc
shl
or
or
loop
add
xor
test
out
icebp
cltd
mov
jle
and
xorb
inc
sbb
mov
sti
scas
jns
out
jnp
xchg
dec
sub
push
inc
leave
cltd
sub
and
outsb
loop
inc
xor
out
fistpl
loopne
add
fwait
mov
fidivrl
enter
mov
sub
fcoms
fwait
dec
inc
sbb
ret
jle
lahf
orl
mov
mov
pop
jae
je
in
jbe
cmp
int3
leave
mov
data16
fdivrp
push
mov
cmp
ds
inc
cs
adc
cmpsb
push
sti
mov
repnz
push
ljmp
jp
das
xor
xchg
pusha
das
cltd
fsts
stos
iret
and
popf
mov
pop
xor
lea
std
xor
arpl
frstor
push
les
add
jmp
shlb
sub
lret
push
out
test
jge
jo
xchg
or
inc
cmc
out
xor
pop
cs
adc
je
in
cmpsb
mov
mov
out
push
aas
int
hlt
mov
adc
sbb
and
lahf
cli
or
sbb
cld
sub
jne
nop
shlb
nop
xor
pop
and
sbb
fnsave
jge
movsl
xchg
xchg
push
and
inc
out
sub
sub
cld
push
in
int
mov
stc
dec
jns
lret
icebp
aas
push
stc
sbb
lahf
fstp
mov
dec
inc
push
loope
dec
in
adc
dec
add
jge
mov
mov
mov
imul
fsubrl
in
xor
inc
push
popf
jno
lret
or
jae
push
mov
stos
push
jo
aam
out
fisubrl
mov
ret
pop
sbb
jns
stc
mov
inc
fisubs
add
nop
pop
ss
mulb
aad
sti
add
push
outsl
cmp
in
sahf
and
mov
mov
jmp
add
loop
cmp
and
outsl
pop
sbb
mov
jbe
xchg
xchg
fwait
sahf
jb
in
pushf
mov
fstps
and
pop
mov
rorl
andl
out
jbe
ret
movsl
jae
shlb
xchg
leave
push
inc
incl
fldcw
pop
sub
push
bound
or
addr16
and
test
pop
adc
cmpsl
in
pop
daa
inc
mov
jg
loopne
xchg
cmpb
insl
imul
mov
jae
cmp
pop
dec
in
repnz
jle
pop
lock
jge
lcall
ss
xchg
jmp
mov
pop
lret
and
mov
jle
out
pop
call
stos
pop
orl
add
pop
mov
push
mov
mov
mov
jmp
arpl
push
nop
jge
push
cmp
and
push
imul
ret
iret
jnp
cmp
jg
and
pushf
xor
xlat
add
xchg
dec
dec
mov
xchg
push
stos
mov
and
cmp
cli
xchg
enter
pop
icebp
roll
or
bound
mov
cmp
test
mov
loopne
adc
push
in
mov
pusha
je
xor
xchg
push
push
lcall
testb
jno
ds
test
iret
jnp
ljmp
dec
aad
jecxz
int3
adcl
xlat
cmp
test
jno
jb
dec
cmpsl
je
lea
pop
js
cmpsl
dec
adc
int
lock
lds
popf
lods
jecxz
les
ret
aaa
pop
imul
xor
popf
inc
sub
adc
lock
pop
mov
aam
mov
scas
mov
test
enter
stc
or
push
xor
xor
repnz
mov
int3
pop
nop
repz
adc
jne
pop
cmpb
out
sub
mov
pop
int
test
xchg
mov
mov
xchg
cmpsb
cmpsb
ja
pop
gs
int3
arpl
fwait
stc
popf
pop
in
arpl
jne
mov
shrl
outsb
and
xchg
lcall
loopne
sub
jl
rcl
and
jne
push
enter
jmp
movsl
aam
sbb
outsl
shlb
out
mov
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
jge
nop
add
xchg
lahf
jge
jo
mov
dec
in
xchg
or
adc
xchg
popf
or
adc
xor
clc
fidivs
shlb
test
ds
cltd
fstp
idivb
mov
and
mov
pop
pop
in
cmp
mov
add
pop
adc
ret
les
mov
dec
cltd
aas
sub
sbbb
pop
sub
xchg
fisubl
pop
fdivr
shll
push
daa
popf
pop
sub
sub
hlt
mov
negl
jle
mov
inc
xchg
insl
cmp
dec
aaa
rcr
jo
xor
mov
push
sub
xor
cmp
inc
in
out
out
ljmp
jge
jecxz
adc
dec
es
rdtsc
or
mov
sbb
fdivp
aas
fisttpll
jge
lods
lahf
rcl
sbb
pop
xchg
negl
add
loop
cmp
or
lret
mov
sbbb
imul
or
jo
and
sbb
jnp
pop
test
cmc
adc
adc
insl
pop
shll
jnp
lock
outsl
dec
jne
fwait
or
and
mov
inc
or
je
pop
sub
inc
mov
or
in
cltd
pop
xchg
xchg
out
push
sbb
mov
sub
ds
add
and
xchg
lcall
inc
dec
test
xor
mov
dec
dec
clc
sbb
xchg
dec
test
sub
ljmp
adc
xlat
xchg
jne
xchg
mov
shl
lret
add
aad
hlt
sub
int3
dec
ffreep
adcb
in
daa
pop
cmp
lcall
pop
lock
push
hlt
testb
call
fisubrs
aam
adc
rcrl
fcoms
pop
movntps
xor
fistps
ja
lret
in
dec
xor
negl
mov
sbb
insl
insb
and
push
pop
and
out
cwtl
subb
pusha
repnz
cmp
mov
mov
js
xchg
out
and
inc
jmp
cli
lock
cmp
rolb
push
mov
push
sar
lret
icebp
pop
push
xchg
push
test
sahf
push
dec
mov
cmp
add
pop
mov
pop
shrl
out
jno
sbb
or
loope
shrl
scas
mov
pushf
gs
xchg
sbb
aam
out
scas
sbb
sub
jl
adcl
pop
ficoml
call
xchg
mov
sbb
mov
jg
push
test
or
or
sub
rcrb
repz
adc
sahf
and
sti
insl
xchg
mov
adc
repz
lret
dec
push
lahf
mov
pop
cwtl
add
fwait
icebp
cmpsb
pop
sub
inc
adc
pop
pop
sbb
pop
jp
repz
jge
mov
and
push
pop
ret
inc
cld
sar
sub
xchg
fbld
icebp
cmp
dec
lcall
pop
dec
ljmp
dec
xchg
ds
out
mov
jg
jb
je
inc
add
pop
push
mov
xchg
pop
lret
push
mov
adc
adc
and
mov
pop
int3
ds
loop
cltd
leave
inc
pop
push
in
and
push
lret
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
imul
xorl
jge
jo
test
outsb
fisttpl
ljmp
cs
bnd
mov
add
push
mov
inc
daa
cmp
in
scas
push
jno
pop
cmp
les
vsubps
aaa
mov
ja
xor
add
jnp
and
inc
bswap
test
inc
cmp
push
mov
push
inc
dec
mov
cmp
sbb
sarb
mov
movsb
scas
loope
loopne
icebp
movsb
xchg
aam
movsb
and
add
xor
fstpt
mov
mov
aam
and
rcrb
fisubrs
push
jg
fsubrp
lock
or
sbb
ss
sub
xor
scas
addr16
xchg
add
pop
inc
scas
testb
add
sbb
cli
cmp
lods
shrb
lds
stos
imul
adc
mov
adc
jecxz
cmp
sbb
mov
int3
xor
mov
sub
jno
out
lahf
push
pop
pop
mov
and
or
cmp
popa
mov
loopne
stc
jle
fbstp
pop
incl
bound
and
jae
cmc
fwait
cli
jo
idivl
fwait
test
mov
imul
mov
aam
jne
testl
pop
movups
inc
cmp
jb
xchg
rcll
loopne
mov
std
int
test
test
dec
xchg
inc
sub
mov
and
or
cmp
mov
mov
enter
cmpsb
add
or
xchg
stc
xchg
push
or
fsubrs
outsl
push
cmpsl
out
out
xchg
jb
xchg
ljmp
push
jmp
stos
daa
push
sbb
outsb
xchg
sbb
hlt
fucomp
hlt
out
loopne
cltd
mov
jle
sub
pop
push
out
xor
sahf
mov
mov
aad
pop
add
cli
sbb
sub
pop
push
ror
ss
jmp
pop
test
xor
repnz
sub
sbb
cmp
cwtl
enter
popa
fldcw
add
movsl
pop
jecxz
cmp
xor
push
xor
sub
jmp
addr16
xorl
or
mov
stc
aad
lcall
jno
ret
or
mov
adc
loop
cmc
cmp
add
loopne
shll
mov
jne
mov
or
dec
test
or
mov
pop
sub
js,pn
sbb
fs
jnp
xchg
cmp
inc
dec
jmp
repnz
mov
sbb
ds
push
lods
int
lock
or
xchg
sub
push
shlb
cmp
xchg
test
test
stos
mov
fidivrl
mov
jno
push
push
xchg
hlt
out
fwait
sbb
dec
cmp
movsl
push
mov
std
add
aas
adc
sub
rorl
xor
xchg
fs
or
sbb
fistpl
jae,pn
push
pop
jmp
loopne
mov
aad
sbb
rorl
test
sbb
test
sbb
mov
pop
rolb
push
dec
enter
inc
pusha
fwait
or
cmp
jg
outsl
cmp
dec
jne
das
mov
mov
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
cli
insl
jo
lahf
jge
jo
pushf
mov
fdivl
dec
and
lods
imul
jge
icebp
jmp
aad
xor
adc
push
mov
cmp
in
mov
mov
add
scas
pop
pcmpgtb
test
push
jmp
cmp
jo
imul
cmp
ja
je
sbb
scas
outsl
outsl
inc
frstor
jl
pop
lea
jnp
dec
jb
loope
nop
cld
fsubs
inc
adc
jle
sbb
sub
adc
cmc
pop
sub
push
aam
push
inc
push
inc
ljmp
cwtl
ret
pusha
loop
lds
sub
shlb
es
pop
fs
popf
rolb
mov
aas
ret
cmp
cmp
movsb
test
cmp
lret
sbb
imul
sub
xchg
pusha
jecxz
mov
xchg
outsl
fistpll
leave
xchg
inc
adc
repz
mov
adc
sarb
cmp
cmp
lock
test
out
popa
stos
pop
test
insb
shlb
fcoms
or
jae
fwait
aad
mov
mov
pop
enter
push
pushf
in
push
fisttpl
sub
cmp
sub
fldl
outsb
inc
mov
lods
mov
cmp
jmp
test
in
mov
mov
rclb
and
adc
outsl
rcrl
xchg
xchg
pop
pop
icebp
mov
xlat
or
insl
lret
mov
repz
add
subps
add
into
jl
imul
xor
dec
lret
fmuls
cli
add
jle
mov
xor
pop
cmpsb
pop
push
push
push
mov
dec
mov
push
leave
cmpsl
or
shll
add
movsb
lahf
arpl
mov
mov
push
inc
sub
dec
pop
xor
cmp
xchg
scas
jb
cmp
and
jle
pop
push
idivb
xor
out
aam
mov
and
sbb
movsb
fdivrp
or
cli
cmp
or
and
out
xor
and
sbb
out
ljmp
mov
ret
mov
outsb
sbb
ret
or
loop
jnp
loop
inc
pusha
enter
and
in
in
ja
xor
and
push
add
in
lods
aaa
xorb
sahf
out
leave
int
fwait
xor
movsl
test
idivb
xchg
lea
adc
sbb
les
xor
test
cli
sub
sbb
mov
aas
idivb
pop
mov
loope
mov
stc
daa
notb
mov
ja
shrb
sbb
popf
mov
adc
mov
mov
xchg
or
lock
into
and
ds
fnstsw
lcall
aas
pop
cmp
jae
arpl
repz
mov
ret
dec
sub
or
xchg
push
jmp
in
std
push
xchg
fcoms
shll
aam
out
sub
repz
jae
rcll
pop
sti
lds
pop
bound
scas
sbb
xor
pop
and
jb
pusha
loope
pop
sbb
add
aad
adc
arpl
cmp
pop
ja
cmp
pop
xchg
cmp
sbb
jl
call
jecxz
add
fildll
mov
negl
jecxz
xchg
movsl
sbb
xchg
fdivrl
dec
adc
aaa
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
int3
in
mov
lahf
jge
jo
scas
lret
aaa
lahf
mov
jp
test
rcrl
xor
xchg
roll
sbb
data16
repnz
sahf
inc
adc
xor
ss
xor
push
lea
cmp
bound
lahf
sbb
mov
mov
sub
mov
jecxz
pop
ret
sbb
test
scas
or
fucomip
mov
and
aas
sub
pop
jecxz
or
inc
scas
sbb
xchg
mov
call
rcl
bound
ret
mov
insb
xchg
cmp
push
add
pusha
cmc
sbb
movsl
xchg
aad
jne
lea
and
aas
cltd
mov
int3
aam
jmp
ds
jecxz
lret
mov
mull
pop
sub
xor
adc
mov
test
mov
loop
pop
xor
btr
mov
loope
out
push
mov
cltd
jmp
or
xchg
mov
mov
cwtl
pop
xlat
pop
mov
pop
repnz
cmp
mov
inc
mov
jmp
test
js
dec
out
fadd
cmc
push
inc
movsb
adc
push
push
xor
sbb
dec
and
fisttpl
shll
inc
inc
sub
fmulp
lcall
pop
inc
popa
or
lds
mov
sbb
mov
mov
ds
mov
pop
sub
mov
xchg
push
movsb
test
jnp
movsl
mov
inc
mov
xchg
xchg
sub
mov
lds
sbb
push
add
cmc
mov
rorl
lods
inc
add
mov
or
iret
mov
stos
mov
sub
out
int3
or
data16
jbe
xchg
jae
jne
and
or
adc
loop
inc
inc
fwait
adc
out
add
dec
add
mov
xor
cmc
addr16
insl
lods
jp
addl
dec
sbb
mov
subb
or
jp
jb
std
mov
gs
daa
adc
pop
cmp
fisttpl
xor
sbb
stos
push
xchg
movsl
ja
push
mov
lret
cmp
push
and
mov
adc
leave
aaa
sbb
mov
sbb
sbb
pop
xor
mov
xchg
xchg
into
in
and
lods
shrb
test
add
je
daa
inc
xchg
stc
aam
out
add
cmp
push
insb
pop
mov
imul
repz
inc
mov
lret
pop
or
iret
int
push
push
mov
cmp
xchg
and
sti
enter
jmp
add
mov
cltd
cwtl
pop
add
sti
pop
arpl
mov
mov
pop
jle
aaa
jg
sbb
push
loope
lret
or
out
cs
inc
dec
fwait
cli
imul
cmc
inc
cmc
loop
cmp
push
jnp
setae
sar
mov
jnp
pop
aaa
sbb
sub
sbb
mov
cmp
cmp
and
push
sarb
xor
cmpsl
leave
stc
mov
jno
push
addl
daa
pop
aad
dec
xor
arpl
xchg
test
inc
dec
mov
leave
fildll
jo
xor
andb
and
shll
cmpsl
xchg
inc
in
test
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
and
mov
lahf
jge
jo
lret
lret
push
lods
rcrb
sbb
fwait
mov
ret
pushf
jl
repnz
xchg
cmp
das
lock
in
pop
inc
push
push
mov
rol
in
stc
mov
lods
roll
lods
ljmp
data16
push
fidivs
and
pusha
pop
shlb
dec
in
jle
sub
cs
xchg
adc
lcall
fisttpll
int
xchg
sahf
gs
adc
xlat
outsb
lcall
inc
ss
adc
lret
rcl
enter
lahf
lods
and
dec
push
mov
shrb
push
mov
sbb
jno
inc
dec
inc
fwait
adc
pusha
jno
rdtsc
lds
shll
mov
xchg
sbbl
pop
bound
jne
mov
pop
js
mov
xchg
lahf
jl
dec
xor
je
add
add
jl
andb
or
adc
shrl
sahf
jbe
mov
mov
outsb
stos
jge
xchg
mov
push
push
mov
nop
mov
push
pop
jb
sbb
pop
lods
or
enter
inc
idiv
mov
pop
scas
mov
adc
and
aaa
int3
inc
pop
add
push
mov
adc
inc
popa
mov
sub
rolb
cmp
mov
call
test
imul
pop
stc
in
outsl
xchg
in
out
arpl
inc
cmp
pop
or
popf
vfrczss
pop
mov
inc
jns
ja
mov
in
roll
sbb
and
ret
sbb
sbb
lods
pop
or
jns
sbb
sbb
jmp
xorl
arpl
inc
xor
or
fwait
daa
xor
lret
and
jle
lock
dec
sbb
mov
push
mov
popa
pop
inc
inc
mov
add
mov
popf
mov
mulb
push
or
push
mov
inc
ss
cld
xor
out
sub
jnp
or
les
jp
dec
add
ja
mov
mov
mov
jbe
rorb
pusha
inc
or
lods
aad
test
or
rol
jnp
pop
xchg
cmp
ja
outsb
popa
jns
jb
jmp
inc
outsb
sbb
lahf
xchg
insl
out
push
jp
and
and
repz
xchg
adcl
shl
add
cli
ss
sub
push
lahf
cmp
and
leave
mov
jns
mov
ds
mov
add
lea
cmp
sbb
jp
dec
xor
cmp
push
jmp
scas
daa
jl
xchg
sub
dec
inc
cli
mov
xlat
je
xchg
leave
ja
mov
orl
sbb
jne
jmp
fisubs
push
pop
scas
clc
gs
add
cmc
xor
fsub
loopne
stos
loop
inc
pop
or
pop
add
ds
mov
lods
dec
test
mov
imul
dec
out
sbb
scas
cmc
sub
or
aam
lret
fcmove
cmp
xor
mov
mov
push
push
jb
es
stc
loope
je
shlb
xchg
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
xchg
notl
pop
in
xchg
jo
lahf
jge
jo
rcrl
xchg
fdivrl
cwtl
fidivs
mov
in
jnp
out
repnz
cmpsb
xchg
test
in
cld
add
fnstenv
adc
jmp
cmp
pop
cmp
cwtl
popf
jnp
mov
aaa
aaa
xchg
addb
jbe
ljmp
push
sbb
fbld
fld
inc
ret
lahf
pop
or
push
shlb
lds
inc
stos
pushf
sbbl
leave
cmpb
scas
sub
and
pop
shlb
int
repz
xchg
outsl
mov
sub
jp
nop
mov
xchg
ja
addl
enter
lcall
add
push
mov
pop
mov
push
hlt
mov
mov
or
loop
das
inc
mov
mov
push
out
adc
lods
outsl
pop
dec
scas
xchg
fistpl
pop
repz
jecxz
adc
bound
out
fstpt
xor
mov
aad
mov
leave
or
add
xor
push
lret
xchg
jl
mov
negl
lahf
inc
dec
xor
addr16
cmp
out
push
push
scas
mov
sub
ss
sti
and
and
sti
test
int
mov
mov
mov
shr
lods
scas
cmp
and
pop
xorl
pop
mov
cmpb
into
out
mov
imulb
imul
mov
loop
sub
fadds
leave
inc
jecxz
jae
popf
in
push
dec
fcmovnb
scas
scas
xchg
sbb
push
int
push
inc
xchg
ljmp
dec
xor
lds
inc
movsl
dec
jmp
cmp
jp
es
je
add
scas
mov
xchg
fisttpll
stos
pop
push
push
pop
xchg
loop
xchg
mov
mov
cmp
xor
gs
or
int
or
lods
jp
mov
cld
js
hlt
sbb
pop
adc
or
cmp
insb
cmpl
cmp
adc
sbb
call
insb
inc
pop
loop
cltd
ds
push
dec
push
mov
inc
mov
inc
mov
add
dec
leave
push
mov
sbb
andb
ficomps
arpl
in
pusha
mov
lods
cmc
sar
shlb
loope
cmp
sbb
xor
sbb
add
xor
xchg
fwait
or
sub
and
fildl
scas
push
dec
or
mov
and
sbb
push
stc
sahf
mov
sub
and
push
les
lock
arpl
xchg
mov
mov
sbb
xor
pushf
dec
out
loopnew
push
jb
cmp
js
push
dec
ret
aam
fst
adc
aas
popa
cmp
mov
xchg
sbb
lock
mov
inc
nop
ret
push
in
dec
je
and
insl
jmp
and
gs
add
adc
mov
pusha
call
bound
mov
nop
jae
add
pop
imul
dec
scas
jecxz
sahf
pop
loopne
pop
cltd
ljmp
jnp
jnp
dec
mov
in
call
mov
mov
cs
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
subl
jo
lahf
jge
jo
mov
sbb
cmp
aam
rcl
rcrl
cmpsl
push
imul
mov
xchg
xor
xor
out
fstl
fildll
jo
call
mov
inc
call
cmpsb
push
add
pusha
fmuls
aaa
inc
push
xlat
test
scas
xor
xor
sbb
jne
xor
and
andb
ficoms
sub
sbb
or
adc
scas
test
xchg
dec
fs
jp
mov
loopne
ja
ljmp
jo
fs
sbbb
stc
loop
lret
lret
lods
aaa
push
cmp
mov
cmp
js
test
or
and
insb
inc
hlt
shrl
jl
sub
push
lret
imul
mov
xchg
inc
pop
xchg
cltd
pushf
mov
mov
outsb
jg
pop
adc
rcll
jo
cli
xor
cld
fsts
mov
loopne
lds
add
jae
stos
xor
jo
sub
mov
sub
cmp
and
imul
loop
jno
in
dec
pop
xlat
dec
ret
dec
dec
aaa
pop
inc
cmp
cmp
jge
int
out
jne
and
leave
xchg
sbb
add
sahf
in
push
xor
jmp
shll
dec
rcll
dec
pop
xchg
sub
mov
mull
mov
pop
add
in
out
xor
mov
ja
adc
inc
add
pop
dec
adc
adc
xchg
cltd
pop
fdivl
das
dec
ja
out
ds
mov
push
jecxz
outsl
push
iret
mov
movsb
dec
lea
mov
rorl
cmp
jg
sbbb
sbb
out
pop
sub
sarl
xor
scas
mov
scas
js
leave
mov
mov
call
rcrb
xlat
outsb
mov
add
cmpl
mov
sub
mov
dec
mov
cmc
cmp
pushf
mov
xorb
stos
push
sub
pushf
push
cltd
sub
mov
add
pop
fwait
push
xchg
lret
popf
out
sbb
iret
pushf
mov
lds
fldt
inc
sub
xor
scas
fxch
push
icebp
mov
jmp
pop
addl
lea
repz
xor
mov
cmp
scas
rcrl
cmc
mov
daa
fdivr
pop
lret
ss
push
rclb
outsb
scas
hlt
adc
add
lret
dec
push
pop
out
inc
movsb
jo
in
lods
cmp
stc
pusha
icebp
and
sbb
jle
pop
arpl
mov
pop
aad
rorl
pop
push
xchg
sub
cmp
imul
sti
sub
pop
lcall
jg
dec
in
xor
sub
dec
pushf
jno
or
adc
push
mov
sub
cmp
mov
hlt
arpl
or
dec
icebp
rcr
push
pop
ja
push
lock
adc
mov
scas
jo
std
icebp
dec
fidivrl
shll
mov
aam
bound
cmp
mov
icebp
dec
out
cltd
lea
jae
fwait
mov
xor
cld
xlat
mov
jb
es
test
add
repnz
lock
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
jo
lahf
jge
jo
push
xor
jp
scas
dec
and
add
iret
dec
pop
out
pop
ja
fucomi
sub
in
cmpsb
inc
jbe
push
inc
pusha
shll
pop
imul
mov
in
pop
lods
adc
insl
test
jae
jl
shrb
fisttpl
add
mov
mov
mov
add
fistps
sahf
in
lret
loope
leave
mov
icebp
push
xchg
xor
and
fs
arpl
ljmp
mov
cmpl
imul
scas
sbb
cmp
loop
xchg
xchg
pushl
mov
pushf
add
cld
clc
clc
mov
aaa
inc
xchg
adc
push
ret
cmp
das
jo
dec
ret
les
or
dec
divl
xchg
pop
push
inc
dec
inc
ljmp
and
push
jb
pop
fildll
imull
sub
xchg
mov
inc
and
test
ficompl
dec
push
stos
xchg
xchg
xchg
pushf
mov
repnz
loopne
daa
mov
add
sbb
clc
stos
jl
lahf
push
inc
push
loope
mov
and
bound
jo
icebp
cltd
push
sub
and
cmp
adc
adc
imul
mov
pop
sarl
fwait
addl
bound
enter
call
test
scas
sbb
xchg
icebp
push
imul
out
movsb
cmp
lds
cltd
nop
mov
mov
xchg
loope
pop
adc
int
pop
movsl
sub
fnstcw
lcall
in
jle
jg
push
loopne
add
adc
dec
test
jnp
jmp
repnz
imul
adc
cmpsb
cld
leave
xor
mov
pop
lret
dec
jmp
je
dec
inc
iret
scas
movsb
mov
cld
std
mov
adc
dec
es
dec
mov
dec
shl
fwait
mov
inc
and
out
jp
fldt
cmpb
pop
pop
mov
mov
xor
fstpt
mov
push
xchg
jne
call
sbb
xchg
cmc
inc
xlat
mov
and
sbb
call
sub
lods
dec
es
and
out
movsb
pop
push
mov
push
loop
hlt
stc
rorl
movsb
jg
mov
cwtl
lds
xchg
sbb
xchg
add
jl
dec
sbb
je
cmpsb
mov
sbb
ret
sub
adc
add
cs
push
cwtl
sbb
jge
popf
aas
repnz
xchg
incb
sbb
gs
mov
jbe
jmp
hlt
mov
ficompl
pushf
sbb
pusha
inc
cmpsl
gs
pop
dec
xchg
shlb
jne
cmp
xor
sti
enterw
mov
adc
push
movsl
jp
sbb
mov
sahf
xchg
add
adc
cld
icebp
ret
xchg
movsl
outsb
ja
cmp
jmp
mov
xchg
setl
in
cmp
jo
add
pusha
push
mov
mov
js
fcmovne
xchg
iret
push
fimuls
mov
out
nop
mov
dec
std
sbb
repz
je
bnd
xor
dec
cmpsl
and
xchg
cmp
pop
in
xorl
xor
icebp
push
add
mov
pop
inc
mov
dec
dec
cmp
les
clc
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
mov
leave
cltd
jo
lahf
jge
jo
or
inc
cwtl
mov
pop
rclb
test
fistps
push
push
mov
pop
push
iret
ficomps
out
sti
mov
sub
jl
popf
test
and
loop
xchg
push
scas
fcompl
xchg
cwtl
loope
shr
sbb
ds
in
out
in
add
test
push
xchg
sbb
sbb
and
jl
or
movsb
imul
pop
jecxz,pt
sub
xor
aad
in
ja
pop
inc
std
imul
adc
push
mov
fimuls
push
mov
jg
or
push
push
mov
hlt
stos
pop
ret
roll
mov
cli
ds
nop
addb
push
movsl
jp
mov
lds
insl
inc
cmp
dec
shll
ret
xchg
mov
in
ljmp
mov
popf
xchg
shlb
dec
push
sbb
or
jae
int3
xchg
dec
addr16
icebp
dec
fsub
sub
push
insb
hlt
xchg
int
dec
imulb
aas
cs
adcb
icebp
jecxz
mov
int
xlat
inc
fldcw
pop
aad
sti
shlb
lcall
jmp
sahf
in
push
hlt
dec
sbb
shlb
xchg
jo
dec
push
cwtl
or
mov
inc
pop
or
mov
imul
cmpsl
rclb
dec
icebp
addl
in
push
mov
xchg
out
push
rcr
sbbl
dec
cmpl
xchg
xorl
push
fsubp
sub
push
subl
outsb
xchg
or
cltd
sub
or
mov
enter
out
orl
mov
mov
push
test
popa
jne
push
xor
lret
test
fildll
adc
out
jno
pop
lahf
sar
mov
mov
lods
ret
lss
ret
fiaddl
repz
loope
aaa
std
mov
sbb
jb
loopne
shrb
xchg
xor
movsb
adc
cmp
sbb
sbb
les
jmp
xor
and
sbb
cmp
cmc
cwtl
add
push
lahf
cmp
stos
jmp
pop
cs
lret
mov
arpl
sbb
mov
push
add
mov
push
in
je
or
sti
out
cmova
js
faddl
sbb
popa
clc
cli
cltd
fdivl
jne
popf
in
cli
je
jmp
jbe
imul
aam
pushf
push
cmpsl
scas
out
pop
test
sbbb
scas
adc
mov
inc
in
popf
cmpsb
fldenv
push
call
push
and
mov
xchg
jp
ja
pop
fisttps
movsl
arpl
hlt
add
sub
push
scas
lock
out
jp
cmp
push
inc
push
push
enter
fcoms
lret
push
jle
mov
or
loop
lret
adc
aas
jle
mov
out
mov
jno
mov
add
roll
cmpsl
fld1
dec
push
mov
pop
or
jmp
cmp
jnp
push
xchg
xlat
push
push
call
push
dec
int
in
mov
fwait
mov
es
sub
or
mov
outsl
xorl
mov
lcall
dec
cmpl
mov
les
mov
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
xchg
push
jg
jo
and
pop
xchg
jo
mov
out
cmpb
lahf
mov
push
out
icebp
cld
fstl
fs
cmp
mov
pop
sbb
stc
sbb
cmp
adc
jbe
daa
popa
mov
cli
fldt
sbb
adc
mov
xchg
icebp
mov
dec
aad
mov
rorl
mov
mov
jb
adcl
repz
fiadds
stos
fcmovb
mov
sub
fs
clc
insb
mov
iret
test
les
jle
jmp
scas
jl
push
mov
mov
or
ds
insb
lret
lahf
cli
inc
fisubrs
fstps
dec
int3
jae
mov
xlat
push
jbe
xor
or
jno
jnp
jmp
adc
pop
mov
scas
test
and
pushf
in
sbb
addb
and
mov
movsb
push
test
pop
dec
lea
add
sti
xor
mov
js
cmp
and
jg
ss
out
mov
std
jg
fwait
xor
fisubs
xor
aad
fcompl
mov
daa
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
scas
jne
and
movsb
jo
ret
jg
jo
shrb
lock
xorl
inc
into
insb
dec
push
fcmovne
mov
xchg
adc
mov
loope
lock
pop
lods
xchg
dec
pop
fcoms
and
lret
dec
test
ret
dec
jns
cmp
rcrb
jg
push
jl
out
inc
and
sbb
mov
jecxz
shr
xor
cmc
push
into
stos
lock
fs
and
test
jns
je
dec
add
add
icebp
ljmp
sbb
fcmovnu
inc
adc
int
sbb
sub
sarb
cmpsb
push
pop
cmpb
int
in
lcall
std
cli
adc
stos
fwait
lahf
ror
mov
xchg
jle
ficoml
add
imul
push
jns
sub
fadds
in
cs
aad
lret
ds
push
jne
movsl
xchg
mov
sbb
mov
and
daa
pop
and
xlat
call
dec
adc
dec
xor
inc
scas
aad
lock
pop
adc
jbe
outsb
lds
cmpsl
mov
inc
test
mov
lahf
jp
cld
and
outsb
xor
mov
jne
pop
mov
inc
or
cltd
pop
enter
pop
inc
int
cs
xor
lcall
mov
jmp
rorl
sbb
rcl
mov
jo
ljmp
push
fimuls
add
xchg
stos
aas
cmp
subb
lods
int
std
in
pusha
inc
add
and
adc
push
mov
aam
cmp
mov
pop
adc
cmpsb
in
pop
mov
push
add
sub
stos
clc
dec
mov
loope
inc
adc
jno
into
stc
shlb
xlat
sbb
pop
or
pop
repnz
shl
cltd
sbb
sub
or
mov
dec
mov
add
ljmp
xor
adc
sbb
mov
stos
xchg
sbbl
jbe
sub
jp
push
es
pop
sub
leave
out
mov
aad
jge
add
push
push
and
cmp
icebp
gs
xor
jno
dec
sbb
cwtl
out
add
or
loopne
cmpsb
or
icebp
into
jmp
sbb
cwtl
out
sbb
jge
push
push
sbb
setl
mov
out
push
ds
out
mull
lea
jg
sbb
ret
jo
pop
aaa
outsl
lods
dec
outsl
loop
xchg
sbb
mov
fcos
icebp
int3
adc
add
jl
repz
cli
ret
inc
mov
mov
gs
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
outsl
cmp
pop
push
mov
jo
xchg
das
popf
lahf
add
leave
pop
xchg
sub
loope
sbb
cs
lret
js
xchg
lea
cmp
loop
fldl
sahf
mov
inc
cld
or
adc
mov
add
fdivrs
jp
and
sahf
pop
xchg
les
jb
jne
lock
sub
in
push
adc
daa
lcall
lret
fisubrl
outsb
in
fcoml
les
xor
lahf
cmp
sub
lcall
sbb
mov
mov
sbbb
push
xor
sub
xchg
xor
movsl
data16
dec
sbb
jp
scas
aas
push
test
lock
shlb
in
rorb
addr16
and
outsl
mov
divl
push
fs
enter
bnd
add
mov
jae
pop
sbb
pop
push
iret
cmpsb
xor
fdivrl
push
push
cmp
ss
inc
push
lock
mov
push
loopne
jnp
inc
add
outsb
add
mov
adc
addr16
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
add
mov
jo
std
fstps
pop
cmpsl
dec
sbb
je
nop
or
orb
mov
icebp
mov
mov
pop
popf
pop
imul
push
adc
pop
das
inc
inc
cli
gs
lcall
rclb
jp
jecxz
test
aas
in
inc
and
es
jb
test
jae
sub
jp
xor
pop
jne
les
jae
xchg
and
fnstcw
es
mov
mov
mov
aad
addr16
pop
ljmp
ss
loop
aad
xchg
mov
mov
dec
xchg
insb
dec
loope
mov
sub
bound
dec
das
sub
js
xchg
adc
jae
lods
xor
xor
pop
or
dec
lret
push
in
test
pop
outsb
scas
dec
shll
mov
add
or
inc
lcall
movsb
nop
pushf
int3
mov
jbe
mov
adc
es
daa
push
or
clc
xor
xchg
jl
imul
iret
pop
mov
dec
les
jg
setbe
into
jb
stos
xor
mov
in
push
test
sbb
insb
dec
cmp
test
lret
or
add
gs
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
mov
sahf
imull
jo
aaa
mov
negb
std
shlb
sbb
sbb
cmp
inc
add
adc
arpl
and
mov
rcll
mov
jnp
sbb
std
or
xchg
shlb
js
mov
pushf
push
or
mov
imul
push
faddl
sub
cwtl
and
adc
jg
push
movsl
les
xor
and
test
cmp
dec
dec
push
sub
roll
sbb
push
fistpll
or
xchg
lods
in
pop
xchg
mov
mov
aaa
mov
push
test
jne
pop
xlat
insb
idivb
lea
pop
pop
out
and
push
jmp
cmp
aas
sbb
ret
jmp
cwtl
jno
mov
push
js
and
push
sub
xchg
hlt
dec
nop
inc
xchg
stos
fcompl
lcall
sbb
popf
and
xor
xor
hlt
inc
jp
in
pop
xchg
add
xchg
imul
lods
bound
inc
sbb
out
cmc
lock
es
inc
push
iret
lcall
jo
xchg
cmpsb
sahf
xor
cmpsl
dec
cmp
jmp
push
or
rorl
cld
jmp
movntps
push
rep
mov
push
jle
insb
addr16
mov
jg
jo
adc
ret
pusha
cmp
xchg
testb
lods
mov
mov
pop
loope
pop
aaa
mov
loop
mov
push
mov
jo
rcl
push
cmc
push
mov
add
jae
add
push
jbe
mov
push
mov
adc
cmpsb
mov
mov
push
xchg
pop
pop
lahf
fnstenv
sub
mov
movsb
leave
test
fisubs
xchg
adc
jns
ljmp
mov
movsb
sar
mov
and
jle
adc
outsb
js
xor
mov
xor
fcompl
lds
cld
test
jb
cmpsb
sti
sti
fsubs
jns
mov
cmp
sar
xchg
mov
inc
call
shl
sbb
inc
std
pop
shl
lea
jge
cmp
pop
cmp
lahf
pop
mov
shl
lock
xchg
cmp
pop
icebp
jne
adc
sti
jno
insl
mov
ljmp
add
in
xabort
push
outsb
push
xchg
shrl
stos
sahf
inc
add
cmp
adc
frstor
gs
push
push
ret
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
aam
adc
lods
jo
ret
jg
jo
push
mov
out
cld
out
mov
mov
adc
lds
ds
xor
outsb
out
xchg
push
mov
mov
daa
cwtl
push
add
aaa
es
jg
sub
js
lcall
negl
imul
addr16
int3
stos
adc
push
enter
mov
cmc
cmpsb
cmp
pop
repnz
mov
arpl
and
cli
popf
dec
sti
stos
or
xor
data16
mov
mov
mov
ret
pop
clc
adc
fdivrl
xchg
cmp
or
andb
mov
push
mov
test
fwait
dec
jl
andb
loope
xchg
push
sti
inc
daa
ret
arpl
loop
cwtl
mov
cltd
aam
jmp
or
popa
jo
adc
std
shl
and
out
lret
dec
insl
cmpb
incb
movsl
add
pop
loope
jecxz
add
dec
mov
aad
adc
mov
or
jbe
sub
inc
lret
cmp
mov
xchg
cmp
xorl
jp
mov
dec
loop
popf
mov
or
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
jle
out
mov
stos
jo
ret
jg
jo
push
lret
int3
inc
sahf
mov
inc
cmp
scas
or
arpl
inc
int3
jno
sub
scas
pop
addr16
cvtdq2ps
shl
in
adc
mov
inc
repz
pop
es
cli
lock
sub
in
mov
lahf
mov
clc
scas
pop
movsb
pop
jno
mov
data16
jl
sarl
cmp
xchg
adc
mov
jb
repz
pop
cmp
jmp
and
jno
xor
les
or
pop
scas
mov
add
push
mov
jo
mov
mov
push
out
cld
popa
orl
addl
sbb
enter
xor
daa
jl
sub
adc
in
mov
sub
mov
jno
notl
lahf
jae
cmpsb
pop
xor
mov
jno
jnp
push
xchg
imul
fcom
aaa
hlt
mov
scas
stos
mov
jae
rcll
ljmp
pop
xchg
out
xorb
or
movsb
mov
push
aas
cli
sub
aas
lahf
aam
mov
pop
adc
aaa
mov
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
hlt
imul
jg
jo
sub
gs
loopne
xchg
xchg
add
xchg
fcoms
dec
pop
dec
out
push
adc
adc
das
jecxz
stos
inc
cmp
push
mov
or
int
repz
jp
cs
out
dec
jge
mov
js
xor
xchg
xor
adc
pop
sti
mov
mov
sbb
cmpsb
or
xchg
mov
adc
shl
mov
add
sarb
mov
enter
stos
in
xor
xor
pusha
in
adc
shrl
test
mov
into
int3
shll
ss
in
pop
loopne
addl
int
adc
nop
adc
dec
hlt
sbb
xchg
lea
imul
cmp
in
cmp
and
nop
test
dec
or
push
mov
inc
les
fmul
pop
xchg
mov
je
sub
fs
jnp
cwtl
mov
cmpsl
fiadds
aam
dec
jae
inc
lods
emms
cmp
cwtl
inc
cmp
mov
or
mov
lret
out
push
cmc
xchg
lahf
out
cmpsl
push
pushf
pushf
sbb
add
out
cmpsb
jg
and
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shlb
inc
adc
jo
ret
jg
jo
out
call
jb
push
jl
out
in
cmpsl
mov
cli
fst
sbbl
mov
ljmp
mov
add
ja
push
jbe
orl
xor
popa
dec
add
iret
cmc
fwait
dec
fmuls
imul
fwait
xor
sub
test
rorl
pop
ljmp
mov
out
cltd
push
and
dec
dec
xor
cmp
rorl
lock
stos
sahf
xchg
pop
or
jne
ljmp
xor
fcom
adc
imul
adc
aas
repnz
xor
jmp
out
jae
addr16
insl
mov
inc
xchg
movb
imul
jmp
popa
xchg
popf
mov
out
test
and
mov
push
xor
popa
mov
inc
jo
ljmp
loope
hlt
inc
psubd
adc
cmp
add
jns
hlt
push
xorl
jge
in
in
cwtl
sub
sub
adc
lcall
xchg
sbb
out
dec
lcall
sub
mov
imul
negb
xor
adc
out
xor
add
add
ror
icebp
imul
fwait
mov
sbb
mov
jo
jg
jo
out
out
xor
addr16
add
jo
shl
xchg
dec
out
scas
lds
pop
xchg
mov
inc
outsl
mov
movsl
jnp
dec
mov
ljmp
lods
enter
push
sbbb
mov
sbb
jne
pop
popf
test
insb
cld
aad
cld
xor
mov
icebp
sbbl
in
pushf
xchg
test
inc
rcl
push
cltd
repnz
pusha
mov
mov
push
je
cmp
mov
xlat
adc
pop
sub
ss
stos
push
adc
imul
or
aas
aas
push
jb
xorl
ret
cmc
lea
cwtl
std
or
aas
js
je
stos
inc
adc
faddl
or
mov
xorb
mov
fdivrp
lret
xchg
les
push
pop
xchg
sub
mov
std
sbb
js
mov
adc
cmp
jno
ds
cltd
es
loope
leave
sbb
xor
sbb
aaa
inc
cmpsl
adc
lea
gs
push
pusha
push
scas
cmp
lahf
dec
sub
stos
push
ror
mov
and
ret
mov
test
std
imul
sti
mov
lret
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
sarl
mov
jo
inc
mov
leave
out
repz
ss
gs
mov
arpl
inc
out
push
adc
cwtl
push
mov
gs
cmp
ss
push
mov
lods
lcall
in
pop
fistpl
pop
xor
mov
inc
aaa
pop
cmpsl
xchg
fdivrl
inc
rcr
dec
push
add
mov
push
mov
fisubl
inc
push
and
stos
mov
scas
xor
adc
movsl
dec
jmp
pop
pop
adc
ja
int
repnz
pop
dec
push
mov
mov
mov
lret
xor
stos
push
mov
pop
xchg
sbb
pushf
xchg
sub
popf
or
inc
mov
sub
push
jl
fldt
mov
into
test
mov
aad
lcall
das
push
iret
in
cmpsb
inc
cmp
mov
rcl
sub
pusha
mov
out
mov
scas
shr
jecxz
cmpl
xchg
jbe
cmpsb
and
addb
fadds
cmpsb
and
jmp
ljmp
cmc
add
int
or
mov
pop
mov
mov
les
and
sub
orl
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
adc
jo
mov
cmp
pop
rcrl
aaa
jg
xor
scas
stos
push
adc
cmp
jl
icebp
push
fsubr
add
pushl
into
iret
xchg
jmp
sbb
adc
ficoml
xchg
cmpsl
mov
stc
out
rcl
xlat
sahf
pop
in
mov
stc
sahf
cwtl
mov
mov
adc
cli
int
outsl
sub
repz
test
fwait
adc
pop
cld
sbb
cmp
mov
in
xchg
cmc
loop
mov
mov
and
xchg
pop
cwtl
jl
daa
xor
stos
pop
or
xor
rcl
int
lock
stos
jb
inc
xchg
stos
xor
out
rorb
leave
aad
aaa
ret
jbe
sbb
addb
cltd
xchg
in
sbb
ja
push
adc
mov
add
pop
xor
imul
enter
jo
or
enter
mov
sbb
pop
js
sbb
pop
push
cld
loope
iret
xor
insb
subb
sbb
hlt
adc
mov
jecxz
pop
jg
sbb
cmp
sti
cwtl
push
in
mov
add
nop
fs
sbb
das
cmp
xchg
pop
xlat
and
mov
hlt
sbb
test
inc
fmul
insl
lods
xchg
cs
hlt
adc
mov
insb
mov
mov
xchg
outsl
push
push
jns
mov
sbb
dec
pop
test
jne
add
hlt
push
pushw
fs
inc
jns
scas
or
and
add
xor
cmp
push
pop
and
das
pop
pop
lea
jmp
pop
lds
jne
mov
loope
mov
cmpl
cld
fnsave
push
cltd
dec
mov
daa
cmpl
jnp
sbb
test
sbb
in
cmpb
pop
lea
jecxz
std
lods
inc
and
ja
dec
data16
mov
outsl
xor
cmp
test
orb
push
sub
ficoms
jmp
mov
gs
sub
push
dec
cmp
inc
fwait
mov
push
push
mov
int3
mov
jge
cli
insl
ds
outsb
ljmp
push
mov
lods
mov
add
xor
stos
pop
aaa
inc
add
jnp
cltd
mov
or
clc
sub
daa
mov
fistpl
cmp
or
lret
into
outsb
pop
negl
fcmovb
cmp
cli
jg
xchg
push
mov
cli
cld
dec
inc
dec
and
lcall
ds
cwtl
ret
sub
add
loope,pn
gs
jp
imul
inc
lret
out
in
out
ja
lret
icebp
cmp
loope
es
negl
pop
mov
call
push
mov
ljmp
push
movsb
dec
jnp
dec
ds
push
sub
or
movsl
inc
cmp
xchg
fmull
das
push
stc
iret
fsubs
sbb
adc
imul
inc
push
pop
push
ljmp
pop
sti
inc
jae
xlat
mov
mov
mov
imul
inc
out
or
popfw
xchg
mov
ds
sub
mov
jo
and
add
stos
inc
lcall
outsl
fcmove
jle
or
push
negl
jmp
mov
cli
xor
testb
lret
mov
xorb
jo
sub
lods
scas
sti
sbb
lret
jecxz
inc
sbbb
and
test
cmp
ficoml
mov
lret
dec
xchg
mov
fwait
xor
out
rorb
je
mov
aad
jmp
mov
mov
rol
cmp
xor
push
cmp
jecxz
mov
fimull
test
jle
add
xchg
inc
loop
add
scas
mov
cmpsb
cmp
je
nop
cmc
in
test
dec
mov
aam
jnp
cli
sbb
lds
xchg
mov
neg
pusha
mov
sbb
scas
cli
fstl
dec
lret
mov
shl
push
adc
push
test
mov
mov
push
icebp
push
add
cmp
xchg
adc
fistl
aaa
roll
xor
pop
adc
dec
int
mov
in
lret
and
mov
ljmp
xchg
inc
outsb
je
scas
cmp
test
idiv
incl
hlt
xchg
jp
sbb
jns
in
mov
jae
jo
outsl
jno
adc
sub
and
jns
xor
or
cmpsb
add
jle
and
jecxz
int3
mov
clc
stos
stc
loop,pn
gs
fimuls
sub
cmc
test
push
jg
inc
push
pop
outsb
loop
jge
mov
rol
in
cmp
dec
shlb
add
sbb
add
test
dec
sbb
test
movsb
lahf
hlt
pop
outsl
sbb
inc
imulb
jb
orl
xor
mov
pop
les
adc
xlat
mov
fsubrl
loop
ret
pusha
and
jmp
imul
sbb
fwait
adc
push
je
loop
xor
dec
inc
add
push
sub
cs
mov
lret
xor
jmp
xchg
xor
in
pop
xchg
cld
xchg
or
adcl
mov
xchg
test
or
int
cmpsl
lods
out
jecxz
inc
insb
or
notb
xchg
push
jge
les
add
sub
enter
lcall
fdivs
loope
push
pop
xchg
sub
jl
mov
push
push
pop
mov
ftst
cmp
out
mov
pop
xor
and
orb
popf
scas
into
insb
test
addr16
or
subb
pop
test
sbb
fildl
cltd
or
and
add
dec
test
jbe
dec
daa
out
das
sbb
xchg
dec
adc
popf
enter
lret
xchg
jecxz
ret
mov
or
stc
dec
dec
adc
aaa
push
test
fildl
aad
lret
dec
mov
shl
stos
mov
push
test
mov
sbb
js
fidivrs
sahf
cmp
out
mov
andb
jne
jb
in
dec
push
or
pop
ljmp
adc
inc
jle
sarl
fs
mov
pushf
cli
popf
mov
cmp
lret
loopne
dec
dec
ljmp
pop
mov
adc
jge
pop
testl
les
mov
repz
jo
sbb
sbb
jne
ret
hlt
push
or
jo
das
pop
lret
dec
sbbl
loopne
push
push
and
dec
mov
jle
test
lcall
jge
idivb
pop
adc
shll
sbb
push
call
aam
push
mov
imul
test
add
add
cmp
add
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
shrl
ret
jo
mov
fimuls
xor
sbb
sbb
fyl2xp1
mov
adc
dec
dec
jns
loopne
push
std
dec
adc
pop
mov
jb
shlb
test
jae
int3
shll
cmc
lahf
fisubs
repz
fsts
loopne
in
and
pop
jns
in
jmp
ljmp
mov
scas
lret
jno
sub
inc
out
leave
daa
pop
pop
and
aad
lea
cmp
dec
fisubl
and
pop
fsts
pop
hlt
mov
mov
in
cmp
sti
mov
insl
mov
lods
and
sbb
or
push
adc
ud2
into
pop
sub
inc
outsl
and
xchg
inc
push
clc
mov
sbb
arpl
mov
jb
dec
cmp
push
sbb
mov
nop
cmpsb
xchg
into
psubd
pop
in
out
sbb
xor
int
lcall
cwtl
push
pop
adc
rorl
pop
cmpsl
add
mov
and
iret
jno
lods
sbb
xchg
mov
mov
mov
mov
outsb
test
cmp
cld
loopne
dec
aam
js
mov
leave
mov
xchg
xchg
arpl
sub
push
jl
cltd
push
pop
xchg
jecxz
lock
and
add
inc
lgs
in
mov
repz
and
add
mov
push
adc
adc
or
xlat
jno
lds
and
xor
mov
addr16
fistps
in
xor
xchg
add
out
pushf
call
mov
outsl
ljmp
incl
imul
insl
jmp
jno
mov
sub
les
fiadds
push
jb
mov
adc
xchg
add
mov
int3
in
xor
xchg
inc
repz
loopne
and
push
jb
adc
xor
sub
mov
mov
in
stos
cmpsl
xor
push
mov
jo
inc
std
push
popf
out
jl
das
scas
je
cmp
ret
lahf
dec
mov
jnp
lcall
iret
mov
stos
mov
cwtl
test
rcrl
stos
cmp
aaa
notb
dec
repnz
je
or
pop
cld
sub
inc
push
aaa
insb
aam
push
mov
jno
inc
push
jb
pop
je
stos
test
xchg
inc
lock
xchg
out
mov
jne
repz
aas
call
add
xchg
xchg
adc
aaa
mov
adc
ret
rcl
fcmovne
ret
pop
mov
xchg
or
vpshaw
inc
sub
adc
and
push
dec
add
xchg
out
xor
sahf
jbe
dec
test
fldt
adc
mov
icebp
mov
sbb
inc
adc
pop
pop
sar
subb
push
and
shlb
cmpsl
shl
or
push
xchg
mov
adc
sub
inc
out
xor
add
adc
jg
inc
jne
and
xchg
mov
adc
mov
jp
dec
bound
add
sbb
xchg
scas
add
cmpsb
std
insb
adc
add
mov
push
fldt
mov
int
sahf
push
iret
mov
or
adc
and
add
test
inc
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
dec
les
hlt
outsb
pop
add
lret
rcrl
test
and
loopne
jns
lahf
jmp
mov
add
idivl
pop
mov
movsb
ljmp
stos
xchg
nop
popa
mov
or
or
arpl
pop
les
repz
jnp
imul
pop
pushl
loopne
jns
lods
cmc
jmp
and
cs
pop
mov
scas
jmp
mov
bound
cltd
xchg
int3
push
movsl
sub
mov
pop
stos
pop
out
call
mov
gs
lahf
jo
je
mov
inc
fldcw
xchg
inc
rorl
xor
ljmp
inc
dec
out
lods
movsl
aad
mov
lret
cmp
aad
mov
cwtl
or
push
nop
mov
xchg
mov
sbb
call
fmul
xor
mov
repnz
jns
das
cmp
jns
xchg
or
add
cmpsb
adc
pop
xchg
sbb
in
shrl
rcrl
add
mov
movsl
cmc
mov
addl
fisttpll
test
int
inc
cs
das
mov
xlat
lret
fs
rcrb
leave
mov
pop
outsb
jge
xchg
adc
mov
out
inc
outsl
call
out
pop
in
mov
insb
adc
clc
mov
pop
pushf
popa
popa
sbb
inc
aad
movb
mov
lds
lea
sub
push
dec
cltd
or
aam
scas
rorl
xchg
dec
lods
call
xorl
inc
mov
popf
mov
testl
dec
pop
or
outsl
das
xchg
adc
pop
stos
mov
in
push
cmp
repz
and
lcall
pop
les
sti
divb
push
mov
nop
sbb
addb
test
add
xchg
pop
add
test
icebp
addb
jb
mov
push
mov
inc
push
jbe
mov
cmpsb
push
lret
dec
out
repz
out
out
fsub
mov
jbe
outsl
int
sub
push
mov
js
pop
std
les
movsl
inc
stos
xor
add
subb
push
cld
imul
sub
in
jno
mov
testl
mov
mov
or
jmp
pop
stos
push
imull
mov
lahf
and
jg
xchg
mov
mov
push
inc
mov
or
inc
sar
dec
dec
int3
inc
sub
pop
and
mov
in
dec
xor
mov
pop
add
inc
icebp
in
call
ret
inc
push
and
mov
call
xchg
cmpsl
pop
fildll
jne
adc
out
pop
aas
jl
into
push
cmpb
out
mov
int
loopne
in
or
dec
call
cmpsl
shl
mov
dec
xchg
add
mov
mov
idivb
cltd
ja
inc
xchg
add
push
fidivrl
mov
pop
adc
sahf
sub
cmc
repz
sbb
adc
jo
jl
outsb
out
push
call
mov
inc
jns
cwtl
dec
lahf
adc
inc
lea
lcall
sub
mov
dec
pop
cld
subl
pushf
sbb
cmp
dec
xchg
sub
push
lcall
push
lods
mov
dec
mov
mov
sbb
mov
add
jmp
outsl
mov
or
imul
pop
xchg
mov
jo
jge
jo
mov
decb
inc
repz
mov
lahf
aas
test
mov
sbb
outsb
clc
test
cld
cmp
popf
push
mov
and
adc
fstpt
xlat
jne
fs
test
dec
push
pop
in
push
or
xchg
xorl
xchg
nop
xor
add
xor
add
int3
dec
mov
mov
scas
movsb
add
mov
xorl
ljmp
jbe
or
js
movsl
daa
sbb
mov
test
dec
loopne
ss
push
loope
frstor
int3
ss
xchg
mov
es
stc
mov
mov
in
rcrb
shl
push
movsb
rorl
aas
iret
push
adc
pop
jne
cmpsl
lds
push
dec
movsl
lds
fcoms
into
inc
or
jl
add
xchg
sbb
dec
in
push
inc
mov
cli
lea
ja
jno
je
add
cmp
push
mov
stos
push
mov
jle
outsl
push
ret
dec
mov
adc
mov
or
xor
test
je
xor
xchg
lret
push
mov
mov
lds
mov
fwait
push
jae
sub
sahf
fbld
jb
push
pop
movsl
push
cmp
sbb
push
fcomip
mov
sub
jns
les
stos
add
inc
push
push
movsb
popf
data16
scas
popf
inc
outsb
xchg
cmp
in
mov
lret
js
mov
jo
pop
loop
adc
mov
jp
flds
imul
jo
jne
ficomps
jl
adc
idivb
ds
pop
jmp
mov
wbinvd
cld
adc
cmp
mov
mov
or
sar
xor
ds
pop
or
or
imul
or
repnz
andl
mov
dec
xor
push
add
push
daa
testb
jl
adc
fsubrl
pop
popf
test
xchg
inc
arpl
jl
negl
pop
lds
pop
cltd
or
dec
mov
movsl
sbbb
js
bound
adc
lods
andl
sahf
data16
jl
mov
pop
jno
push
cmpsb
jle
in
loop
pop
orl
into
xor
rep
mov
fmull
scas
pop
mov
mov
xadd
mov
jno
gs
or
cs
sbbb
sub
push
subl
pop
les
sbb
jno
sub
mov
enter
lcall
fsubrs
mov
aaa
imul
popa
jno
push
jb
sahf
fcmovnbe
and
inc
shrl
ja
mov
mov
add
mov
cmp
scas
mov
mov
call
add
into
jle
insl
adc
jnp
movsl
push
ret
jne
pop
mov
xchg
aad
lret
mov
imul
fsub
xchg
and
jecxz
inc
rcr
mov
jno
sub
sahf
inc
inc
lock
mov
loop
outsl
ret
shll
inc
xor
fs
out
ds
push
stc
addb
sub
push
ss
inc
mov
mov
sub
push
push
sbb
mov
xchg
out
push
fbld
shlb
adcb
lcall
jns
enter
dec
dec
call
push
sbb
mov
rorl
sbb
ss
std
js
sub
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
dec
and
pop
jge
jo
cwtl
ja
scas
pop
fidivs
and
insb
cmp
mov
out
push
das
ds
mov
fistl
inc
mov
mov
xorb
xchg
pop
iret
or
xor
scas
scas
cmp
or
sbb
or
sbb
dec
in
movsl
imul
mov
arpl
insb
jns
push
sbb
dec
sbb
cmp
adc
ret
xchg
es
mov
add
test
xchg
mov
or
out
xorl
aas
or
in
xchg
test
cmp
nop
lahf
or
push
or
jae,pt
shlb
push
sub
dec
mov
mov
or
inc
mov
cld
pushf
pop
lds
jp
add
int
dec
aas
mov
iret
mov
mov
xchg
cmp
adc
push
inc
in
inc
adc
dec
cmp
or
mov
pop
imul
dec
add
mov
dec
outsb
mov
hlt
or
sbb
adc
fs
movsb
outsb
cltd
popf
xchg
enter
mov
enter
and
test
add
icebp
divb
dec
aas
scas
mov
jae
bound
in
jp
push
daa
fwait
pop
push
mov
mov
sar
rorb
dec
pushf
clc
addr16
mov
pminsw
pop
repnz
lods
jg
mov
push
cmp
xor
or
popa
iret
enter
mov
dec
lea
add
mov
adc
sarl
test
sahf
movsb
mov
repnz
shlb
imul
test
movsb
add
test
push
iret
jp
scas
xlat
or
push
jns
or
icebp
data16
loope
mov
add
inc
pop
std
xor
or
xor
pushf
popa
dec
popa
in
adc
arpl
in
in
lock
mov
aam
movsb
mov
xor
iret
pusha
pop
pop
mov
xor
sti
movsb
xchg
das
and
jno
pop
inc
fs
and
inc
shlb
mov
jns
and
inc
call
daa
imul
or
mov
cld
push
xchg
sbb
fwait
xchg
mov
inc
data16
dec
mov
in
inc
loope
dec
cltd
ljmp
out
repnz
sub
rclb
xor
addl
sbb
cmp
pop
dec
and
xor
aas
and
shll
scas
movsl
push
or
dec
pop
mov
jne
sbb
in
xor
fisubrs
add
inc
inc
xlat
xor
adcb
mov
mov
fwait
scas
mov
sub
fnstenv
xchg
xchg
ds
and
mov
and
dec
lcall
dec
std
adc
jnp
sti
mov
cmpsl
jb
mov
sub
or
jge
fisttpl
cmp
pop
fstpl
fcompl
cli
sub
mov
mov
sub
jne
cmpsl
pop
xchg
mov
cmp
lret
inc
push
dec
test
fcmove
pop
outsb
or
xchg
loope
inc
ja
dec
pop
sub
mov
and
jge
aam
xchg
push
or
andb
xchg
les
mov
sbb
call
sti
cs
jbe
movsl
push
sbb
xchg
fiadds
daa
cmpsl
pop
out
roll
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
test
or
icebp
jmp
jle
inc
inc
lods
test
arpl
iret
adc
and
cs
into
bound
jle
bound
mov
sub
lds
mov
cmp
lea
test
sbb
dec
stc
xor
cltd
inc
xchg
fcoms
or
pop
cli
fs
adc
mov
xchg
jbe
add
fisttps
ds
es
hlt
push
jb
dec
popf
lds
out
out
and
icebp
add
loope
lea
mov
pop
int3
and
add
pop
xchg
aas
fwait
out
std
push
dec
jo
in
sub
and
add
dec
mov
rorl
ss
jl
pop
add
push
push
xchg
push
insb
cld
int3
jge
xor
jp
adc
mov
dec
repnz
jmp
js
cmp
js,pt
filds
add
push
mov
push
in
sub
mov
mov
leave
xchg
mov
lds
aaa
jae
push
xlat
add
lahf
jae
out
dec
mov
lock
insl
or
jbe
stos
jbe
sub
push
bound
pop
pop
mov
jecxz
lcall
sub
pop
fdivl
pop
sbb
and
clc
push
loope
out
cmp
int3
inc
cmp
and
lret
inc
push
jnp
add
sar
into
cs
nop
into
push
xchg
or
fsts
mov
das
cmp
xlat
jmp
jle
in
in
xor
mov
clc
imul
xor
dec
mov
andb
sbb
xor
jecxz
dec
into
sbb
sahf
outsb
dec
mov
cmp
mov
testb
jl
cwtl
es
mov
clc
fiaddl
lea
aam
pusha
adc
mov
xchg
push
dec
repnz
movsl
jns
imul
xor
add
mov
jmp
add
aas
jne
imul
lret
fisttpll
pusha
bound
loop
out
lock
lock
inc
dec
lret
bound
sub
and
testb
fcom
jb
movb
or
enter
jne
pop
add
push
bound
sbb
popa
aad
bound
cmp
or
hlt
data16
mov
cmp
mov
sahf
aad
fnstenv
xor
cmc
jb
inc
incl
mov
lret
jo
orl
mov
mov
repnz
push
mov
inc
mov
mov
call
std
dec
call
sub
mov
sbb
cld
xchg
jp
adc
sbb
mov
mov
pop
fdivs
jg
stos
rorl
test
jle
loop
pop
fcoml
orb
or
loope
test
lock
jno
pop
inc
in
sbb
mov
aas
adc
jbe
rolb
es
nop
popl
xor
pop
xchg
dec
mov
fcom
add
popa
inc
mov
stos
je
pop
dec
sub
push
ds
sti
arpl
ret
and
fs
xchg
cmpsl
and
push
test
lret
cld
ja
and
push
jge
pop
or
je
jns
ds
cwtl
dec
sbb
mov
sbb
xor
sub
lahf
and
push
xor
addb
add
mov
nop
mov
inc
repnz
mov
jno
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
mov
mov
pop
jge
jo
or
aam
sbb
movsb
sahf
mov
xchg
mov
xor
out
pop
loope
lock
cmp
mov
fsubrs
cmp
adc
push
xor
xchg
int3
mov
sbb
xor
cmpsb
cmp
mov
jno
lea
out
sahf
aaa
push
add
jno
shr
mov
test
fistps
iret
std
push
add
add
icebp
push
mov
out
shrl
sbb
mov
scas
pop
mov
mul
or
jmp
sar
push
sbbb
cltd
je
rorl
mov
aam
dec
jno
push
push
fadds
fcomps
or
push
mov
jns
sub
mov
mov
xchg
aad
cmovg
mov
jne
adc
sbb
std
mov
push
fsubrs
xor
or
cs
lahf
mov
in
mov
and
mov
sbb
mov
cld
jp
pop
aam
inc
pop
jmp
xor
dec
shr
xchg
push
scas
aam
rolb
fists
mov
cmp
in
insb
test
xchg
cmp
cmp
and
das
sub
mov
sbb
dec
sbb
enter
and
jmp
add
ss
cmp
idivl
jg
mov
jae
and
and
dec
std
jmp
xor
pop
mov
jp
cmp
loope
pop
scas
jno
inc
xchg
inc
pop
test
imul
or
cld
pop
jmp
and
addr16
lret
mov
mov
insl
dec
data16
sbb
xor
lahf
mov
testb
mov
mov
test
sbb
mov
pop
dec
xchg
mov
jl
jo
sbb
xchg
xchg
inc
pop
daa
pop
sbb
mov
adc
jnp
sarl
pop
pop
xor
pop
adc
sub
cmp
xchg
xchg
outsl
test
inc
xchg
addl
mov
cmp
loop
insb
push
adc
sub
cld
jmp
cs
xchg
mov
jg
addr16
ss
xor
mov
imul
fs
jno
mov
and
and
cli
out
sub
mov
mov
and
xchg
imul
lcall
out
test
cmpsl
sbb
cli
std
add
mov
iret
int
rcrb
mov
int3
ret
js
xchg
cmp
ss
mov
cwtl
xor
pop
ds
sub
hlt
cmpsb
popl
dec
pop
dec
pop
and
or
push
adc
outsb
mov
in
fdivl
xor
xor
pusha
fbld
dec
or
pop
or
mov
sti
ja
jbe
xchg
jl
cmp
dec
pop
cmc
mov
sbb
mov
rcrl
jmp
leave
insb
fwait
imul
cmp
movsl
in
sbb
sbb
jp
pop
xchg
add
jecxz
int3
xchg
popa
lea
inc
or
sbb
fmuls
hlt
add
sub
stos
ret
push
fsubp
nop
mov
int
mov
addb
xlat
les
pop
sub
arpl
call
inc
data16
ljmp
push
push
dec
push
xor
pop
inc
inc
aas
mov
aas
daa
inc
adcl
rorl
cmp
lret
sahf
orl
inc
shlb
cmp
bound
xchg
je
and
out
sbb
test
mov
mov
sbb
int
or
mov
push
imul
sub
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
fbstp
jo
pop
jge
jo
xchg
fwait
scas
sub
add
xchg
push
mov
inc
inc
lea
adcl
std
and
and
scas
lcall
lret
lea
push
stos
jno
mov
dec
mov
xor
mov
and
movsb
leave
dec
mov
je
xchg
movsb
or
or
sbb
dec
adc
in
inc
js
data16
or
fcoms
clc
pop
popf
pop
out
shlb
push
nop
xchg
lods
subl
sbb
jp
mov
pop
bound
aaa
sbb
inc
lods
out
test
sbb
addr16
rclb
in
adc
add
nop
shlb
aaa
pop
cmpsb
outsb
xor
outsb
mov
mov
jbe
gs
push
mov
shll
sub
cmc
jecxz
mov
pop
popf
cli
cld
repz
mov
pushf
insb
and
push
jp
inc
jl
movsb
cmp
push
inc
loope
inc
out
sbb
sub
fisubrs
int3
sarl
push
adc
fs
mov
outsb
mov
push
sti
ret
aam
rorl
aam
or
cld
push
cmc
int
sub
hlt
xchg
mov
js
cmp
pop
repz
sbb
fs
mov
inc
mov
into
sub
sbb
sub
sub
das
pop
fs
lock
repnz
cmpl
adc
add
cmp
push
or
xchg
pushf
insl
mov
call
inc
int
or
adcb
ret
outsb
mov
cmc
imull
xchg
pop
fsubrp
lret
push
pop
push
sbb
stc
int
ret
push
clc
inc
dec
jp
jp
push
pop
jecxz
adc
pop
fldl
push
leave
sbb
pop
inc
cmpsb
add
dec
jmp
popa
movsb
push
hlt
pop
shll
fidivrs
jge
jge
pop
pop
add
dec
mov
mov
fsubrl
fnstcw
xor
in
fimull
in
dec
data16
pop
mov
xor
add
loop
pop
mov
or
adc
out
lret
jecxz
sbb
popa
adc
xchg
enter
adc
mov
loope
and
xchg
lock
test
inc
pop
pop
pop
cmp
sub
outsb
push
sbb
fcmovu
dec
jge
out
nop
sub
sbb
movsl
dec
cmp
inc
test
mov
pop
scas
jo
sahf
mov
in
cli
clc
xchg
lea
xor
mov
orl
test
into
inc
shll
out
movsb
push
mov
xchg
jmp
loope
mov
jg
jo
dec
das
cmp
xchg
lcall
xlat
les
jo
or
iret
add
das
int3
sbb
push
dec
cmp
clc
sbb
rol
jnp
jge
lret
adc
lret
dec
js
pop
mov
cmp
xlat
mov
dec
sub
int
or
mov
pop
sub
dec
push
rcll
movsw
stos
mov
popf
fs
pop
lock
xlat
jge
enter
jne
push
popa
mov
ret
cmp
lock
movsl
mov
push
sbb
test
fsubrl
xor
push
rcrb
clc
push
lcall
jecxz
xor
push
ret
mov
int
jmp
flds
or
js
sahf
xor
in
ljmp
sub
gs
pop
repnz
test
and
iret
dec
add
push
xchg
sbb
ret
call
dec
pushf
sub
push
es
inc
divb
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
add
push
jo
pop
jge
jo
into
xor
dec
or
adc
mov
xchg
imul
and
icebp
int
push
jle
adc
sub
inc
fcompl
stos
xor
dec
xchg
push
jno
sti
dec
push
std
add
mov
push
jmp
push
sbb
pusha
insb
in
add
stos
xchg
add
icebp
cmpsb
mov
shlb
inc
xor
inc
pushf
fnstsw
hlt
test
arpl
cltd
inc
xor
insb
mov
add
pushf
adc
push
sbb
inc
clc
adc
mov
jae
out
or
fs
lock
fsubs
cmp
cmp
into
mov
adc
adc
je
push
not
pop
lahf
sbb
dec
mov
push
inc
dec
ret
icebp
sbb
and
xor
cltd
roll
push
mov
or
adc
and
imul
jno
cmpsl
cmp
dec
inc
and
cmp
rcrb
jge
pop
test
jb
push
push
adc
cmp
sub
adc
lods
rolb
push
adc
sbb
xchg
mov
enter
popf
fstpt
fwait
lahf
sub
aam
repz
pop
jo
mov
lock
cmp
mov
adc
mov
dec
test
dec
pop
sti
push
in
xor
pop
das
iret
mov
and
xchg
cs
pop
mov
push
sub
or
cmp
and
loop
lea
stc
dec
push
lea
cmp
mov
sbb
cmp
into
lret
iret
add
jne
sar
mov
fwait
cwtl
pop
mov
pop
sti
in
mov
movsb
call
sub
fisubl
out
mov
sti
pop
xchg
outsb
dec
in
or
and
xchg
ds
scas
adc
mov
scas
push
inc
mov
imul
test
imul
pushf
xlat
fstpl
push
adc
pop
adc
movsb
mov
adc
mov
jmp
pop
push
dec
inc
xchg
jns
aam
pop
add
push
xchg
cld
lahf
out
push
aam
leave
xor
push
out
inc
mov
aam
nop
dec
dec
insb
jge
inc
sub
rcl
lea
shll
push
ret
addr16
clc
mov
fistl
mov
fsts
das
ljmp
sarb
push
and
pop
add
imul
dec
outsb
mov
pop
and
sbb
jmp
clc
outsl
dec
in
push
cmp
pavgw
fdivs
in
xchg
mov
xchg
pop
icebp
pop
add
mov
dec
push
push
lods
xchg
insl
aaa
add
xchg
push
xchg
mov
lcall
jbe
xacquire
popa
nop
jl
sub
roll
push
add
adc
pop
fmuls
inc
pop
add
frstor
jne
call
int
add
sub
fdivs
xor
xchg
pop
je
adc
pushf
test
pop
test
adc
cmp
xchg
dec
pop
pushf
jno
sbb
sub
add
sar
popf
pop
lret
movsb
sub
add
push
mov
add
pop
ss
sbb
mov
pop
rcl
adc
mov
aaa
ret
in
xchg
cmp
xchg
fwait
xchg
out
sbb
adc
dec
adc
outsl
je
add
dec
push
fnstenv
push
push
out
orb
xchg
movsl
sbb
mov
mov
ljmp
das
dec
cs
adc
xor
lret
addr16
jmp
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
add
or
pop
jo
mov
test
lea
push
mov
pop
adc
aas
shrb
jbe
out
xchg
call
mov
dec
jb
push
call
and
mov
xor
sub
and
or
sub
dec
sub
test
dec
jmp
fsubl
addb
sub
inc
push
cmc
mov
lea
rcll
std
mov
xchg
test
sbb
xchg
fldl
repnz
out
mull
cwtl
push
dec
jg
std
cmp
cmc
jle
xor
out
cmpsl
ja
jge
mov
mov
adc
or
xor
inc
rorb
lods
cmpsl
xchg
or
xor
fldl
push
sub
push
in
lret
add
mov
cmp
push
imul
pop
scas
mov
mov
ror
or
lds
lods
addr16
inc
and
sbb
mov
fidivrs
xor
jge
jle
sub
jg
fwait
jg
sbbl
in
lods
popa
loope
es
in
dec
push
aam
neg
mull
ficompl
cmp
and
sahf
sbb
xor
sbb
dec
sbb
push
mov
aaa
stos
push
jns
out
bound
dec
lcall
push
mov
int
mov
imul
cmpsb
cmp
test
mov
in
outsl
or
jge
nop
push
sub
mov
sub
adc
jmp
leave
stc
fwait
es
cli
cld
rorl
lods
sti
sub
xchg
jae
and
sub
iret
adc
aaa
ds
sub
in
js
inc
adc
or
xchg
jnp
gs
xor
lods
shlb
sbb
sbb
mov
stos
dec
inc
xchg
cmp
add
inc
push
add
daa
test
jp
test
mov
xchg
sbb
push
rcl
inc
xor
das
cmpsb
outsb
jb
mov
push
int
aaa
cmp
dec
insb
pop
aad
xchg
jmp
pop
dec
enter
movsl
or
or
adc
xchg
fxam
cltd
dec
clc
jl
fwait
dec
jno
mov
mov
dec
scas
or
pop
sbb
or
cmp
add
pop
mov
popa
pop
push
mov
scas
jecxz
mov
pop
ret
out
fidivrl
gs
out
xor
call
leave
xchg
cs
cmp
ljmp
jp
lret
shll
inc
das
popa
lea
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
lds
jo
mov
cltd
mov
rorl
sub
int3
or
int
shrl
pop
es
arpl
and
mov
mov
imul
and
rcrb
das
div
sbb
pop
adc
and
add
lcall
xor
or
mov
mov
je
adc
push
inc
or
push
xor
in
push
ret
cld
ret
fucom
push
xchg
movsb
lods
cmp
int3
pop
inc
xor
popa
add
sub
push
xor
arpl
les
jg
fadds
cmpsb
add
mov
fcomi
je
mov
imul
call
push
mov
mov
cltd
std
and
pop
dec
fmuls
adc
xlat
popf
les
inc
in
mov
mov
push
cmp
jmp
in
repnz
adc
fwait
add
mov
cmp
sbb
and
rcl
jno
jne
mov
jp
es
sbb
mov
or
adc
mov
jl
add
dec
jmp
aad
xchg
int
sub
add
push
repnz
outsl
sarl
or
in
push
in
stos
rcrl
outsb
arpl
test
jge
xor
movsl
pop
out
mov
mov
outsb
mov
fldt
mov
mulb
jge
pop
mov
shlb
inc
dec
int
aam
ss
stc
insl
es
stos
push
cld
cmpsb
pop
fmull
orl
pop
inc
xchg
xor
xchg
mov
mov
sub
mov
pushf
sub
adc
cld
addr16
adc
xchg
shrd
fstps
dec
pusha
sti
out
jo
xlat
mov
mov
jns
jge
pop
mov
push
xor
pop
jae
sti
fnstenv
inc
es
inc
mov
scas
nop
push
jle
xchg
push
sub
push
cmp
sub
pop
std
pop
cmp
cli
and
adc
inc
cmp
shlb
sub
or
push
adc
leave
sbb
mov
mov
repnz
outsb
jl
pop
sbb
enter
popf
loop
add
jg
add
jbe
loopne
xor
mov
cmp
rclb
out
sbb
ret
xchg
data16
stos
lea
icebp
inc
and
das
in
dec
out
xchg
push
and
daa
add
ljmp
out
mov
push
add
dec
in
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
push
jo
mov
out
cmc
mov
ljmp
int3
adcb
jns
movl
addr16
pusha
test
xor
or
scas
sbb
pop
mov
int3
dec
xchg
test
fsubrp
lds
subl
sti
repnz
mov
or
push
imul
ljmp
push
add
and
leave
nopl
mov
rcrl
sbb
add
or
jns
in
movsl
sub
add
mov
mov
jecxz
das
or
jecxz
sub
int
pushf
int
cmp
pop
arpl
sahf
stos
subb
mov
pushf
loop
in
push
jbe
lds
je
lea
adc
jmp
pop
mov
and
sbb
and
scas
in
arpl
rclb
mov
xor
lods
test
pop
mov
sub
xor
mov
scas
scas
xchg
cmc
repnz
shrb
iret
add
out
or
push
ds
test
jns
stc
push
out
pop
arpl
add
mov
jp
aad
xchg
fnstcw
cmp
jo
hlt
or
jg
sbb
add
mov
jns
pop
and
mov
or
out
xor
mov
dec
pop
adc
jl
aaa
stos
dec
scas
pushf
test
imul
cmc
int3
lea
and
iret
mov
je
aam
jmp
or
or
push
sbb
add
push
mov
fstpt
and
dec
push
adc
out
pop
out
scas
iret
cld
mov
lret
mov
or
adc
xchg
xor
mov
or
test
xor
movsb
mov
notl
inc
mov
mov
lea
xchg
sbb
in
call
pushl
jp
cwtl
pop
jo
inc
xchg
fisubs
and
dec
imul
imulb
inc
dec
cmp
icebp
mov
pop
cmpsl
push
dec
push
mov
das
sti
rorb
mov
pop
jbe
ret
bound
and
pushf
jae
loope
rolb
add
out
mov
xlat
cmc
aas
mov
shll
rorb
loop,pt
icebp
out
xor
xor
pusha
inc
cli
cmp
mov
sub
xorl
fdivp
or
jg
incl
jno
mov
dec
lods
xchg
daa
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
jne
jmp
mov
fldt
cmc
in
cmp
push
clc
xor
and
popa
popf
data16
testl
add
lock
lret
lcall
mov
aaa
es
int
dec
test
daa
rcl
xor
lock
jle
aad
push
push
ss
scas
fs
xor
add
push
and
lahf
push
push
jnp
outsl
movsl
pop
push
xor
jns
push
lea
sbb
xchg
cwtl
in
int
lods
lds
cmp
jmp
test
cmp
sbb
loope
sub
in
pop
xchg
sbb
mov
mov
imul
jg
mov
push
icebp
inc
jno
imul
aaa
repz
pop
jo
sahf
cmp
imul
mov
mov
or
mov
test
mov
xor
addb
jbe
dec
add
sahf
mov
push
and
lret
popa
aad
dec
les
and
out
je
mov
and
add
xor
mov
cmp
push
loop
movsl
sahf
clc
mov
shl
push
pop
test
inc
cmp
cli
jge
sbb
in
dec
ret
ss
adcl
dec
loop
shr
test
popf
mov
repz
mov
cmp
enter
jecxz
cmp
int
mov
lods
dec
inc
fmuls
popf
js
stos
add
mov
dec
lret
aad
aad
incb
xor
mov
pop
inc
mov
push
fists
shll
jecxz
adc
xchg
xor
lret
lret
mov
and
test
test
scas
rol
dec
mov
push
mov
lcall
fidivrs
ss
rcl
xor
dec
xor
orb
cmp
push
cmp
inc
hlt
mov
movsb
addl
xor
pop
fwait
sub
or
fs
daa
jmp
aaa
push
lret
pop
mov
push
xor
fsubrs
cmpsb
mov
bound
orb
mov
pop
lret
pop
aad
loopne
sahf
push
fistl
ffreep
xorb
cmpsb
mov
ret
lcall
push
sbb
ss
mov
sbb
fs
or
dec
add
dec
in
je
popa
arpl
ja
pop
in
rcll
and
adc
cmp
es
scas
ds
fcomps
lock
stos
ljmp
add
push
lahf
popf
lods
jae
mov
mov
movsl
lcall
inc
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
ljmp
mov
not
cmpsl
inc
xchg
mov
dec
mov
imul
daa
shlb
cs
xor
add
fxch
mov
jb
mov
mov
mov
dec
mov
and
shl
pushf
xor
push
inc
add
dec
fistl
js
fmuls
mov
into
aas
fcmove
in
ljmp
xchg
les
pop
sub
sub
xchg
int3
arpl
xlat
out
jg
subl
sbb
cmp
sbb
pop
mov
imul
adc
lods
imulb
gs
fmul
in
lds
cmp
stos
jle
outsb
jnp
addb
xchg
add
lods
mov
jmp
xchg
fmuls
mov
pop
mov
scas
push
pop
jns
cmp
or
ret
cmpsb
jl
in
fwait
aad
inc
and
hlt
pop
fwait
sbb
jecxz
jg
rclb
fs
lds
fadds
int3
and
jno
push
loop
and
int3
into
stos
xchg
dec
jno
sbb
inc
dec
xor
pop
or
jno
in
xchg
jnp
cwtl
dec
nop
ret
out
push
mov
scas
cld
push
mov
bts
push
add
push
adc
scas
mov
jg
addl
std
decw
aas
rcll
adc
lods
push
clc
xor
xchg
out
sub
pop
push
cmp
inc
outsl
flds
lret
adc
push
data16
mov
add
lcall
sub
add
dec
cmp
cltd
mov
jns
push
loop
out
xchg
int
push
mov
add
fwait
cli
push
pop
les
pop
das
in
cs
sbb
loope
mov
add
daa
jecxz
adc
js
xchg
and
leave
sbb
jmp
cltd
dec
inc
sub
mov
out
daa
jge
popf
in
test
sahf
insb
push
xchg
lock
leave
adc
scas
loope
and
sbb
in
loope
and
push
movsb
add
mov
fdiv
jge
pop
mov
sub
cmp
sbb
xchg
fs
push
loop
leave
jl
adc
jbe
dec
popf
imul
leave
fmull
xchg
data16
int3
or
in
imul
adc
add
stos
jno
xor
adc
or
dec
mov
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
inc
adcb
mov
cmp
mov
pop
xchg
je
adcb
lahf
adc
mov
mov
mov
in
cmp
add
mov
xor
dec
mov
popf
xchg
and
dec
push
out
and
in
cltd
fcoml
pop
mov
test
int3
and
mov
out
add
and
mov
flds
xchg
pop
test
dec
gs
lds
jmp
addl
adc
sub
or
int
es
int
fdivrl
dec
or
or
loopne
lods
dec
rcr
loop
cmp
xchg
mov
scas
cltd
fmulp
push
jp
cmp
shl
out
repnz
outsl
es
xor
mov
mov
out
pop
xor
cli
fnstcw
sub
push
dec
push
lret
aaa
jp
loope
inc
sub
in
fsubr
jge
sahf
xchg
andl
cmp
pop
cmp
inc
mov
fiadds
xchg
int
mov
dec
scas
push
call
pusha
test
xor
je
pop
scas
cmp
or
movsl
repz
mov
push
pop
or
jne
sbb
ds
jbe
lret
jae
dec
jbe
jb
xlat
push
arpl
inc
push
cmpsb
xchg
addr16
and
insb
push
in
xchg
inc
dec
push
leave
jge
ret
push
mov
push
pushf
aas
xor
mov
pop
rclb
inc
sub
xchg
arpl
sub
inc
dec
idiv
rolb
cwtl
ret
sub
mov
bound
insl
ret
mov
mov
lret
jbe
pop
ss
cmpsb
rorl
mov
jbe
stos
sub
xlat
mov
or
cmp
js
movsb
mov
outsb
or
pop
push
or
les
add
mov
aaa
mov
cli
test
cmp
negb
popf
repnz
call
movsb
mov
lods
ljmp
jno
sbb
and
mov
xchg
dec
push
jge
loop
dec
xchg
scas
jbe
cld
pop
fwait
adc
aas
mov
dec
lret
jbe
inc
inc
xor
out
aaa
mov
aaa
push
in
gs
jecxz
insl
ficomps
mov
or
adc
push
loop
shlb
push
stc
xchg
les
enter
in
sub
and
mov
jecxz
jle
fcomi
xchg
outsb
jecxz
cmp
loop
ss
dec
push
dec
pop
negl
int3
arpl
xlat
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
add
outsb
jo
mov
mov
push
mov
jge
push
xchg
movhpd
jmp
inc
cmp
pop
mov
and
je
jne
xchg
insb
mov
out
and
mov
je
mov
leave
shlb
jb
sbb
addr16
sub
leave
pop
cmpsb
subl
mov
fsubs
mov
or
test
jne
test
or
push
lods
repz
cmp
mov
lea
cmpsl
lock
xor
cmp
std
ret
negb
xchg
dec
push
and
sahf
push
es
pusha
inc
mov
add
or
mov
mov
stos
adc
cmpsl
xorl
and
scas
sbb
jmp
add
sub
or
dec
popa
add
loopne
push
iret
aam
or
lods
push
push
leave
push
xchg
push
and
lea
ljmp
push
sub
or
xor
fwait
inc
int
fdiv
decl
aam
push
inc
mov
xchg
mov
int3
test
pop
dec
sti
inc
push
cmc
inc
mov
shl
mov
inc
imul
enter
loopne
xor
stos
jnp
call
add
pop
movsl
outsb
neg
daa
jne
rclb
sti
sbb
imul
cmc
bound
popf
cmpl
pop
dec
fs
fstpl
xchg
xchg
sbb
cmp
or
inc
pop
and
test
sub
outsb
arpl
xchg
sub
cltd
cmp
xchg
pop
adc
mov
push
jbe
mov
pop
push
lea
in
or
push
adc
shlb
ret
insl
loopne
fstp
insb
cmp
out
bound
xor
in
es
cwtl
inc
push
mov
lcall
adc
rol
in
inc
pop
insb
pop
xchg
jae
ja
outsl
mov
jno
and
cs
sub
popf
je
sbb
fldenv
cmp
mov
mov
and
pusha
in
xchg
movl
pop
xorl
lcall
daa
jbe
push
xchg
or
scas
push
dec
add
sbb
popl
scas
jge
push
mov
fnstenv
mov
push
inc
stos
jp
mov
mov
in
in
sarb
fsubrl
rcll
cmp
pop
fcmove
cltd
xchg
mov
shll
mov
es
lds
sbb
clc
jne
pushl
jmp
and
lods
shrb
in
jne
mov
jo
jle
jo
std
or
lea
add
add
mov
and
cmp
int
pop
repnz
faddl
leave
lcall
add
mov
lea
cmp
mov
cli
xor
sub
fmuls
loop
sub
popa
rorb
out
xchg
in
fucomip
movb
mov
sbb
cmpsl
push
jge
push
sub
not
dec
enter
imull
fldl
xchg
test
insb
and
sub
repnz
jmp
jno
sub
shlb
or
in
out
pop
xchg
push
adc
push
push
movsb
aaa
xchg
xor
mov
fsubrl
mov
pop
insl
push
xchg
rcrb
ljmp
adc
je
jp
add
outsl
cmp
mov
add
pop
cmpsl
jns
ss
cmp
iret
add
and
repnz
or
pop
dec
mov
xchg
inc
sbb
popa
test
or
fwait
rcr
ret
inc
and
jecxz
mov
sbb
jnp
push
test
xor
jl
stos
icebp
mov
inc
popa
jns
xlat
inc
cs
push
fs
mov
clc
das
push
mov
movntps
mov
test
cli
out
sbb
pop
xor
pop
adc
mov
mov
aaa
scas
push
bound
jmp
out
cmpl
inc
incl
cmp
addr16
in
jmp
mov
jo
test
imul
jp
adcl
pushf
outsl
mov
lret
fcmovnu
test
push
jns
lret
jae
push
inc
enter
sbb
jns
sub
jne
jp
lds
push
pop
ds
cmp
and
add
rorb
popf
cld
adc
mov
ss
mov
add
out
pop
jns
pop
inc
inc
insb
ficomps
lahf
fucom
sub
mov
mov
stos
push
jns
dec
pop
mov
repnz
push
in
or
out
leave
pushf
stc
sti
pop
dec
test
jne
addr16
fstpt
ljmp
xchg
outsb
mov
mov
xor
sbb
add
sbb
push
popf
mov
mov
mov
dec
pop
xchg
fwait
cmp
pop
ljmp
loope
mov
je
push
cwtl
inc
aam
ret
call
jmp
pop
insl
and
xor
insl
jp
or
cmp
adc
jo
mov
mov
jo
add
and
call
ficoml
xor
and
or
insl
push
movsb
push
pop
lcall
xchg
xor
xchg
cmp
dec
adc
inc
mov
jne
popa
xorb
jnp
xchg
cmp
sub
sbb
nop
cmp
push
adc
dec
out
jg
dec
jp
into
sbb
nop
ret
adc
sub
sub
and
sbb
cs
out
mov
dec
sub
add
fadd
pushf
cld
or
rcrl
push
stos
dec
jp
out
push
inc
xchg
fsubrl
int
xor
loopne
xor
sub
aad
rcr
mov
jns
ret
dec
loope
push
sub
test
enter
mov
xchg
jecxz
dec
dec
int
or
lds
mov
andb
and
push
sbb
loope
dec
mov
test
dec
ljmp
pusha
data16
test
jne
or
ds
lods
cld
push
xchg
test
xor
sbb
aas
sub
pop
mov
jl
xor
dec
add
xor
or
lds
je
inc
sti
es
pop
inc
sub
push
and
imul
imul
and
sbb
cld
pavgw
imull
adc
cmp
js
cmp
xor
jbe
pushf
fmuls
cltd
shll
jmp
add
lods
repnz
lret
lret
iret
repz
cmpsb
add
or
leave
fildl
jmp
pop
cmp
sub
scas
movsb
or
adc
adcb
cmpsb
push
mov
jbe
dec
dec
dec
mov
sbb
fmull
lea
rcrb
jb
jne
and
sbb
mov
pop
pushf
clc
jne
push
cli
das
sub
push
sbb
cs
lret
mov
add
jns
mov
and
mov
fistpl
repnz
add
frstor
sarl
cmp
add
test
mov
fwait
xor
test
push
gs
iret
mov
pop
xchg
push
fadds
mov
imull
xor
in
and
xor
stos
subb
out
jnp
stc
arpl
cmpl
dec
and
popf
sub
cvtpi2ps
mov
pop
inc
mov
stos
sub
and
adc
cmp
xchg
inc
sbb
jbe
ds
sbb
mov
mov
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
clc
adc
jo
jle
jo
std
push
mov
inc
in
cmp
es
mov
mov
std
stos
bound
jge
mov
mov
push
dec
sbb
fsubrl
add
xchg
insb
xchg
stc
xchg
mov
jge
loopne
dec
pop
add
pop
mov
mov
lcall
sbb
cmp
scas
jns
int3
popf
out
jb
pop
rclb
mov
inc
pop
js
adc
stos
sub
sub
sub
scas
inc
movsl
add
pop
and
call
cs
xor
push
lock
mov
stos
aam
xchg
inc
icebp
scas
sub
and
andl
cmp
push
mov
or
insb
fstpt
pusha
pop
xchg
mov
mov
hlt
xor
cltd
jecxz
cwtl
es
popf
pop
mov
shlb
int
mov
cmpsl
cwtl
push
jae
gs
ret
cmp
xor
mov
cmpsb
into
in
notb
push
test
in
push
ljmp
add
hlt
xor
movsb
jno
dec
pop
cld
mov
test
pop
mov
xor
insl
clc
cmp
push
or
lds
outsl
lock
mov
mov
mov
mov
lds
add
and
lahf
dec
jmp
pushf
addr16
mov
fwait
push
pop
push
shlb
xchg
inc
push
jecxz
lea
mov
rcl
xchg
mov
mull
fisttpl
or
inc
mov
add
fsts
xchg
push
insb
pop
xchg
or
inc
xor
outsl
dec
fstl
mov
mov
sbb
lods
jno
cld
out
sahf
test
mov
bound
test
and
inc
sbb
sbb
and
or
push
scas
mov
hlt
lock
push
adcl
sbb
xor
in
aam
sti
faddl
ret
pop
and
out
xor
mov
rcrb
aam
mov
bound
pop
mov
lret
call
jns
ljmp
push
push
sbb
dec
mov
lods
jmp
push
sub
cmpsl
repz
jmp
in
sbb
out
or
mov
nopl
adc
xor
imul
ds
sub
inc
mov
xchg
hlt
xchg
fwait
add
mov
jmp
mov
and
sbb
cmpl
dec
mov
jo
ds
add
loope
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
pusha
les
jae
jo
jle
jo
mov
in
icebp
xor
iret
jg
jbe
and
icebp
jg
mov
ss
push
mov
mov
sbb
dec
xchg
mov
mov
sub
and
cmp
inc
sbb
cli
cltd
xchg
push
in
pop
mov
push
pop
and
mov
test
pop
int
mov
add
xchg
cmpsl
adc
push
jbe
sub
test
sub
movsb
mov
mov
insb
cmp
popf
pushf
pop
xchg
inc
test
mov
sub
lret
pop
adc
loop
aaa
xor
jecxz
or
mov
xchg
jb
inc
pop
jne
push
jo
cmp
jns
ret
lahf
roll
frstor
popf
sti
mov
in
jns
add
jge
out
xor
pop
leave
mov
std
add
mov
std
je
leave
shlb
movsb
int
jp
adc
and
imul
out
call
repz
pop
sahf
test
add
jnp
cmpsl
in
cli
lds
mov
and
xor
imul
xchg
jg
pop
xor
xchg
xorb
cmpsl
clc
outsl
adc
fwait
mov
gs
mov
bound
and
or
data16
test
std
enter
int3
push
ss
leavew
jmp
ljmp
adc
pusha
repz
ret
pop
mov
lods
mov
mov
pop
pop
test
rolb
test
mov
push
int3
add
arpl
aas
xchg
jns
clc
ja
mov
fs
faddl
popf
pop
fwait
mov
jle
push
popf
jmp
loope
jmp
iret
ss
insb
loope
ret
lods
cld
mov
dec
gs
adc
lods
ja
jle
ffree
test
fstl
push
add
into
mov
lret
clc
sbb
outsl
lock
xchg
adc
pop
shrl
cltd
or
dec
das
add
mov
lock
test
int3
jmp
inc
popa
push
shll
cmp
pop
inc
inc
repz
cmp
adc
int
jle
in
fwait
adc
cmp
fildll
sbb
push
xor
lea
out
mov
mov
mull
or
xor
out
adc
arpl
jnp
mov
enter
loope
adc
stc
jp
mov
push
mov
mov
xchg
xor
orb
in
lea
pop
sbb
jb
cltd
sub
sbb
xchg
loopne
dec
scas
pop
aam
inc
push
test
insb
cmp
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
les
leave
jo
jo
jle
jo
sahf
xor
and
je
test
sbbb
pop
ljmp
xchg
push
dec
cs
jmp
rorb
out
test
ret
jp
mov
push
aam
inc
mov
mov
pop
push
push
adc
push
cmpl
pop
pop
jns
push
aam
mov
and
sbb
pop
ret
adc
in
and
arpl
je
mov
jo
mov
jl
lock
xorb
mov
mov
pop
mov
and
stc
push
sbb
jae
psubb
addr16
hlt
mov
insl
pop
sub
das
pop
and
jp
adc
mov
int
sbb
pop
cmpsl
jnp
scas
fwait
out
pop
int
lea
dec
xchg
mov
mov
inc
int
cmc
or
cmc
jl
xchg
leave
ss
shrl
fistpl
mov
cli
mov
dec
mov
repnz
js
pop
mov
mov
iret
pop
cwtl
es
push
inc
fists
inc
mov
aas
nop
test
cmpsb
jp
sbb
ret
jle
int
jmp
data16
js
mov
mov
and
add
xchg
repz
les
xchg
adc
lret
imul
xorb
in
ficoms
jae
lods
fimull
pop
movsb
out
add
adc
aas
bound
hlt
mov
cmc
adc
sti
inc
jg
mov
mov
jno
xchg
fistpll
sbb
cli
ja
jp
or
mov
fcomi
or
push
jbe
mov
xor
call
xchg
mov
out
mov
jle,pt
fwait
mov
gs
ss
arpl
stos
ds
push
inc
mov
mov
xor
cmpb
mov
popl
loope
mov
outsl
icebp
mov
incb
lds
push
mov
fidivs
inc
js
dec
jge
fcompl
pop
add
dec
ret
cmp
leave
push
push
pop
xlat
lcall
subb
ficoml
insb
mov
loopne
push
iret
stos
int3
ss
in
xor
inc
add
jnp
stos
incl
stos
mov
loop
jl
js
in
test
and
xchg
jnp
scas
nop
aas
mov
inc
push
imul
xchg
arpl
sbb
dec
mov
adc
in
adc
sarb
inc
mov
sbb
lahf
pusha
out
xchg
dec
das
inc
jb
push
arpl
mov
xor
jmp
add
mov
jb
jge
jge
es
ja
jge
jo
jle
jo
aam
ficompl
jno,pn
psubd
lock
mov
nop
mov
lret
jne
pop
fs
lock
fisttpll
or
aad
into
popl
out
inc
pop
sbb
inc
inc
inc
js
mov
mov
cmpsb
jl
mov
xchg
lret
dec
xorl
dec
js
andb
pop
movsb
jmp
xchg
mov
jg
and
ucomiss
outsl
pop
decl
push
sbb
sbb
testb
adc
mov
or
aaa
stos
aad
adc
dec
aad
jns
pop
inc
push
jbe
rolb
pusha
pop
mov
shlb
pop
and
xchg
scas
lcall
rol
data16
scas
push
sub
and
outsl
fdivl
mov
adc
inc
xor
pop
imul
into
mov
mov
jns
cmp
xchg
inc
outsb
subb
imul
es
mov
jg
hlt
lock
cmc
lahf
inc
mov
or
das
sub
cmpsb
lcall
adc
or
cmp
scas
jne
jl
ja
sbb
fcoms
call
jno
xor
dec
sahf
push
xor
stos
insl
xor
lock
test
dec
cltd
jne
mov
dec
pop
rclb
jb
xlat
cli
lahf
lods
popa
xorb
lcall
mov
pop
sub
xor
ror
sbb
push
inc
or
sbb
mov
enter
data16
fcoms
outsb
push
and
inc
xor
leave
repnz
pop
ficomps
xchg
and
jl
dec
push
xchg
jmp
adc
cltd
mov
cmp
rorl
xor
enter
cs
xchg
or
stos
add
and
repnz
pop
mov
ss
fsubr
addr16
push
lods
adc
or
xchg
push
push
pop
test
fstpl
stos
sub
add
xchg
pop
test
rorb
jno
and
mov
or
mov
adcl
addr16
stc
adc
or
jge
lods
nop
movsb
lahf
movsl
jno
mov
movsb
cmp
mov
aam
pop
jno
jge
mov
lcall
xchg
cmp
add
loope
jne
jmp
cmp
sbb
repnz
and
imul
ret
gs
dec
outsl
mov
pushl
add
cmpsb
shr
mov
ret
add
outsl
inc
sub
cli
rolb
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
cmp
inc
cmpsl
pop
jnp
jo
jle
jo
mov
fs
jae
ficomps
sbb
sub
decb
mov
dec
lock
mov
cld
loope
fidivs
mov
adc
jle
mov
test
fs
stc
lcall
inc
mov
pop
repnz
push
popa
pop
fmuls
shlb
xor
mov
outsb
xchg
test
ficomps
gs
adc
in
ljmp
push
repz
push
jae
aaa
out
insl
and
divl
pop
and
clc
ffree
mov
cmp
add
iret
fisubs
in
adc
push
test
mov
sti
hlt
mov
jp
cmpsb
cli
push
mov
das
les
push
cmp
into
rcl
leave
jge
hlt
ljmp
sahf
mov
adc
mov
push
add
shll
sub
add
add
dec
icebp
testl
and
ret
mov
shlb
push
dec
pop
add
jl
popf
mov
xlat
or
inc
out
add
frstor
cli
in
clc
mov
cmp
pusha
lret
sbb
test
jmp
push
stos
repz
jne
jecxz
jl
dec
inc
inc
decb
fiadds
pop
add
dec
lahf
mov
int
repnz
pop
cmp
repnz
inc
data16
in
inc
push
xchg
mov
xor
inc
aad
mov
inc
xchg
push
adc
popf
sbb
mov
mov
iret
sub
sub
xor
or
in
lds
mov
add
shrb
pop
jecxz
jno
pop
cld
fstps
movsb
mov
inc
pop
cmp
xor
sti
int3
shll
lret
adc
mov
scas
pop
and
in
addb
mov
stos
mov
repz
or
cmp
clc
add
ljmp
repnz
push
cwtl
sbb
pop
mov
push
and
mov
mov
jns
mov
sti
out
lods
out
arpl
out
or
lcall
data16
sarb
dec
push
push
push
add
lock
sub
js
stos
jl
mov
add
shrl
or
cmp
jmp
sub
adc
mov
xchg
sbb
in
subb
fnstenv
mov
pop
jle
std
cmp
mov
mov
xchg
int
orb
xorb
cs
call
inc
cmpsb
outsb
icebp
adc
fwait
ljmp
cltd
stos
mov
add
movsl
push
ficomps
add
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
sub
js
jo
jle
jo
sbb
in
ret
clc
push
sub
pop
mov
push
mov
adc
cmp
clc
je
mov
in
in
out
repz
hlt
mov
fnstsw
and
mov
add
jg
mov
movsb
js
lret
push
lcall
cmpl
fisubrs
enter
fcom
gs
xor
fsubl
pop
divl
subl
xchg
and
je
push
xchg
or
mov
ds
mov
ret
punpckhwd
push
scas
out
pushf
dec
mov
lcall
mov
dec
jb
xchg
aam
fwait
int
insl
xor
fidivrs
clc
or
or
lock
cmpsl
pop
call
or
sub
xchg
or
cmp
pop
mov
mov
cmp
fnstenv
jnp
imul
int3
pop
push
lahf
addr16
add
test
sti
and
jo
adc
jae
jb
and
fstl
test
leave
pop
fadds
lds
mov
nop
mov
jp
or
sub
addr16
mov
movsl
mov
push
ljmp
xchg
adc
faddl
and
std
jp
aam
imul
xchg
rcrl
sbb
lea
in
and
pop
xor
cmc
cmp
add
inc
and
jle
push
push
jnp
and
jne
scas
loop
xchg
jns
pop
fcmovnu
cmp
fcomp
mov
sti
adc
jmp
daa
loopne
enter
xor
adc
outsl
mov
pop
adc
flds
fsts
cmp
mov
and
shrl
pop
shl
lret
jns
test
addl
cli
fdivl
mov
push
in
aaa
incl
lods
push
aaa
aaa
js
jmp
cmpxchg
pop
sti
fxch
push
filds
data16
jns
dec
mov
divl
ss
inc
stos
hlt
jge
mov
inc
jl
fdivr
repz
push
xlat
and
add
popf
fwait
sub
add
arpl
dec
sub
jne
push
jp
mov
dec
ret
inc
sbb
scas
scas
daa
rcrb
stos
sub
loope
mov
nop
andl
pop
mov
push
movsb
inc
dec
insl
aam
sti
aaa
pop
jg
insl
mov
sbb
mov
mov
in
imul
inc
push
and
lock
cmp
iret
ja
cli
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstcw
add
in
add
jo
out
int3
je
popf
pop
idivb
inc
cmp
xchg
rorl
cmp
rcrb
arpl
inc
mov
push
shrb
cld
and
inc
jbe
sbb
or
pop
cmp
or
je
xchg
cld
jns
cmp
inc
mov
scas
add
or
adc
repz
cmpb
push
xor
or
movsl
pop
dec
sub
jae
add
lds
scas
sub
adc
cwtl
je
mov
pop
fbstp
or
insl
nop
test
js
push
jnp
jmp
mov
in
adc
stc
jmp
lret
lock
dec
lret
loop
pop
mov
shrb
repz
shll
daa
shr
jo
sub
sub
pop
and
lahf
mov
xlat
das
cs
mov
cs
pop
in
js
cs
xchg
mov
jmp
enter
sub
and
inc
pop
lcall
out
xlat
out
out
cmpsb
ja
sub
bound
scas
loopne
dec
decl
scas
in
mov
cmp
dec
inc
push
test
insb
pop
cld
les
loope
inc
xchg
xor
shll
sbb
jne
repnz
cwtl
frstor
inc
cmp
cmp
sub
and
mov
dec
ds
lcall
aad
jne
cmp
jle
push
mov
mov
hlt
ja
lcall
inc
adc
bound
int
stos
xchg
int3
sub
cmovno
cmc
lcall
pop
fxtract
in
popf
pop
cmc
add
aaa
clc
ljmp
dec
cmp
jno
xchg
fisubrl
imul
inc
lahf
stos
ret
jle
icebp
and
lods
dec
in
jb
mov
fnstenv
out
addl
lods
pop
lods
dec
stos
pop
ja
cmc
push
mov
push
sbb
lret
or
daa
test
ret
cmp
loop
mov
test
imull
imul
pop
mov
mov
push
xchg
std
test
pop
or
test
jbe
jnp
pop
mov
movsb
lea
in
aad
adc
and
sahf
push
aam
cmp
xchg
inc
cmp
jnp
imul
push
bnd
out
cli
and
stos
xor
mov
xor
leave
pop
add
in
outsb
mov
add
divb
xchg
jns
int
push
mov
cmp
mov
mov
push
lahf
mov
jno
fcomi
cmp
icebp
or
jae
push
dec
and
push
push
andb
ss
cli
add
dec
sub
xor
incb
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
sub
add
mov
sarl
icebp
arpl
cwtl
dec
mov
popa
dec
loop
insb
iret
push
mov
in
outsl
in
out
pusha
in
jnp
mov
jb
popf
lret
sub
hlt
xor
and
sbb
icebp
iret
ljmp
lods
mov
xchg
push
xor
push
or
adc
lret
test
add
inc
pop
data16
pop
inc
jl
enter
and
std
std
dec
jne
xchg
push
pop
lret
jae
les
inc
aad
sub
mov
cmp
inc
xchg
dec
push
mov
fistl
fstl
push
hlt
cmpb
andb
loope
mov
sbb
aam
jle
stos
push
cmpsb
xchg
mov
jns
mov
in
clc
mov
mov
or
ficoms
and
js
fisubs
lods
pusha
clc
mov
inc
mov
lods
fwait
aas
loopne
fadds
enter
and
jle
imul
xchg
jae
push
xchg
insl
jne
cmc
cmp
sbb
sarb
cli
inc
xchg
add
push
push
pop
inc
sub
das
mov
gs
and
insl
adc
push
lods
mov
mov
lea
aaa
lock
xchg
cmpsl
nop
and
dec
ret
dec
data16
iret
repnz
call
shll
scas
mov
fidivrl
or
adc
inc
lods
add
loop
cmp
mov
jo
das
xchg
inc
jg
sub
in
mov
insb
xchg
dec
movsb
hlt
jle
pop
movsb
sbb
mov
in
ret
add
out
jae,pt
jno
loopne
div
out
sub
mov
aam
sbb
in
and
add
pop
in
inc
cmp
or
imul
and
shll
andl
xor
lock
pop
dec
jg
and
call
adc
mov
mov
add
push
mov
xor
push
push
jl
adc
lahf
sub
into
fistpl
inc
enter
lods
mov
push
ficoms
push
rorl
mov
popl
or
adc
xchg
sub
lock
testl
lcall
out
mov
sbb
movsl
jge
jmp
or
loop
std
cli
fwait
nop
mov
into
ds
jno
cmpsl
mov
cli
sbb
dec
mov
popl
mov
in
mov
and
cmc
icebp
push
inc
mov
cmpsl
xchg
or
pop
scas
je
pop
nop
shrl
outsl
loopne
sbb
insl
cmp
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
out
cmp
jns
jge
mov
push
int
mov
data16
test
aam
cmp
xchg
xor
mov
push
mov
mov
cmp
xchg
mov
lods
mov
pop
push
lock
adc
stos
jno
test
inc
and
popf
jle
in
out
fwait
lock
mov
dec
js
fcmovne
clc
mov
ret
lret
loope
mov
sbb
push
push
enter
mov
lods
cmpsl
push
stos
and
lds
scas
mov
jb
int
cmp
loopne
jo
mov
repz
fdiv
fcmovbe
push
push
loop
jp
or
ss
mov
rcrb
js
dec
popf
gs
clc
fldl
or
push
icebp
mov
xor
int3
repnz
cmp
inc
aam
rorb
xchg
add
jmp
or
dec
push
mov
mov
test
push
lods
movsl
pop
pop
arpl
and
stc
out
push
or
lret
clc
or
outsl
int3
rclb
push
cmpb
mov
loopne
bt
inc
xchg
add
nop
inc
fbld
pop
inc
pop
out
add
cmpsb
dec
popa
shr
test
inc
push
test
mov
movsl
mov
enter
out
sub
or
lock
mov
dec
sbb
lods
mov
cmpsb
popf
mov
sub
sbb
or
mov
in
sub
jecxz
mov
scas
adc
sbb
aas
test
jge
fcmovnbe
ficomps
out
mov
lea
insl
or
sub
jle
xor
lods
and
or
cmpsl
add
lret
mov
cmp
test
orl
xlat
cld
mov
idiv
movsl
cwtl
nop
pop
sbb
in
pusha
cli
lock
pop
popf
dec
sub
cmpsl
push
or
jmp
jge
test
pop
inc
int3
or
sub
mov
std
push
repz
test
push
mov
and
in
xchg
testb
pop
add
xor
je
pushf
std
pop
dec
mov
insl
cmp
rcr
lods
cmpsb
es
mov
int
outsb
mov
pop
testl
mov
mov
cmp
add
clc
movb
in
adc
or
imul
rcll
in
add
enter
inc
xchg
in
and
inc
cli
mov
daa
inc
shrb
adc
cli
pop
test
push
sbb
push
mov
fwait
cld
jecxz
and
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
cmp
jg
mov
cmp
mov
xchg
frstor
test
push
cmpsb
stos
movsb
test
push
xchg
push
xchg
jmp
fldl
fbld
sbb
dec
xchg
es
aad
push
sub
mov
repnz
add
fidivs
scas
cmpl
aad
pop
fs
pop
test
ret
push
mov
imul
and
jmp
imul
xchg
shrb
mov
mov
popl
cltd
sbb
movsb
pop
rorb
mov
leave
add
out
pop
cmpsb
and
stc
jmp
pusha
cmp
push
addr16
cmp
jnp
sahf
imul
pusha
jl
xlat
or
or
pop
mov
mov
push
add
xchg
mov
ret
lret
imul
ss
cmp
pusha
adc
aaa
adc
xchg
cmp
call
fdivs
movsl
pop
cmp
ljmp
jns
inc
jge
setl
loopne
push
xchg
in
fists
mov
in
movb
ljmp
incl
xor
fcomps
dec
nop
outsl
add
repnz
bound
xor
ret
nop
or
xor
arpl
into
rol
test
fstl
dec
outsb
mov
loope
jbe
mov
jns
mov
and
xchg
hlt
aad
rorl
addr16
rcrb
in
dec
data16
push
mov
pop
or
hlt
add
xorl
wbinvd
jle
outsb
fcmovb
mov
outsb
mov
xchg
pop
fldt
sub
call
mov
mov
iret
cmp
rcrb
test
dec
mov
mov
test
sbb
test
je
xor
push
mov
gs
push
sub
movsl
or
jl
cmpsl
outsl
mov
loop
mov
mov
aaa
pushf
rclb
pop
cwtl
sbb
mov
aas
lods
nop
jbe
scas
dec
sbb
push
xor
outsl
and
dec
add
add
movsb
ljmp
mov
xor
cmp
mov
or
and
pop
or
lret
cltd
mov
insb
jmp
and
and
lret
std
es
mov
adc
jl
inc
daa
loope
or
push
je
test
imul
loope
out
xchg
lods
xchg
jnp
loop
inc
lcall
push
pop
pop
sub
add
scas
stos
jbe
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
jl
cmpsl
inc
orl
jo
inc
adc
mov
push
dec
jne
popa
test
xchg
and
sbb
in
add
out
scas
xchg
cs
and
idivl
push
shl
xchg
cmc
sub
daa
sbb
ja
jnp
fisubl
insb
sarl
jae
mov
mov
add
sub
push
ds
inc
or
xchg
xchg
fsubl
adc
jnp
in
sub
dec
pop
repnz
or
push
shrb
cmp
imul
mov
mulb
enter
inc
stc
das
out
sbb
cli
sub
inc
or
xchg
dec
cmp
cmp
push
mov
or
test
out
popa
mov
stos
sbb
scas
xchg
xchg
and
leave
jae
push
fiaddl
ja
out
inc
inc
mov
or
dec
mov
xchg
adc
subl
adc
add
stc
nop
xor
sahf
mov
int3
jmp
fwait
xor
push
ret
mov
mov
jbe
mov
adc
das
enter
xor
incb
imul
push
cmp
lcall
mov
aad
add
jge
xchg
fbld
mov
jle
mov
mov
aaa
ljmp
cmp
andl
sbb
cmp
inc
mov
loopne
sub
mov
cs
dec
cmp
push
inc
test
pop
xchg
minps
inc
lcall
jge
ret
lret
xchg
lods
inc
ss
add
imul
jecxz
test
ret
aaa
mov
and
jno
out
jmp
push
jno
sbb
mov
cmpsl
jg
mov
adc
push
mov
bound
std
cmp
push
fbld
repnz
push
mov
jg
loopne
cwtl
mov
imull
mov
enter
jp
xlat
fisttps
or
sub
call
stc
sbbl
sarl
push
inc
push
nop
sahf
pop
mov
arpl
jmp
sbb
loope
push
bound
inc
fs
xor
shll
inc
dec
lock
add
mov
enter
inc
in
push
mov
lret
adc
dec
stos
jmp
xchg
push
fiadds
test
mov
pop
cli
mov
out
xchg
sub
ss
ficomps
add
sub
pusha
repnz
pop
pop
inc
loopne
pop
leave
jne
add
dec
lret
add
cmp
push
sbb
lcall
push
add
sarl
cmpb
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
aad
inc
lret
jo
jle
jo
daa
or
adc
jle
rclb
sub
sbb
aas
mov
or
or
pop
adc
xchg
sub
xor
in
test
mov
sbb
mov
ficompl
adc
mov
cmc
and
lret
arpl
mov
dec
xor
xor
cmp
lock
out
aas
call
cs
inc
test
mov
icebp
pop
outsl
or
test
mov
xor
scas
jne
loop
xchg
sub
inc
loop
push
outsb
clc
cs
xor
xchg
test
cwtl
jge
pop
testb
ljmp
mov
in
fisttpl
cmp
and
fsubrl
add
loop
sbb
adc
scas
pusha
inc
inc
std
mov
aam
push
jb
inc
pop
and
in
mov
loopne
pop
dec
xor
push
in
pop
cmpsb
and
adc
jb
leave
sbb
or
mov
fucom
fnsave
inc
xchg
mov
push
aas
inc
sbb
push
vcmpps
mov
pop
inc
in
movsb
xchg
jg
adcl
adc
mov
inc
lret
jl
jg
ret
mov
loop
aad
jge
imul
adc
cs
mov
sub
jbe
loopne
push
mov
fwait
pop
gs
in
cltd
ss
adc
jbe
mov
inc
and
or
in
into
dec
inc
lahf
repnz
test
clc
cmpsl
push
rcll
xor
sahf
mov
xchg
gs
sbb
inc
rorb
mov
push
ret
sbb
and
xchg
test
push
push
inc
sub
adc
inc
iret
les
dec
ljmp
add
addb
aam
xchg
sub
push
ficompl
push
es
lcall
ds
pop
lea
fsts
inc
cmp
mov
xchg
enter
iret
push
lds
insl
in
pop
js
cwtl
stos
fadd
mov
pop
sub
sbb
xor
test
sbb
jle
adc
fcompl
pop
xchg
sbb
pop
or
xchg
sub
xchg
scas
sub
jbe
js
mov
insb
outsb
mov
lds
sahf
mov
in
inc
jge
stos
mov
mov
dec
cs
push
push
fistl
ja
test
xor
sbb
cli
test
or
adc
lea
pop
inc
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
add
jle
jo
mov
cs
iret
xor
sbb
sbb
lret
movsb
popa
sbb
call
ljmp
pop
arpl
aam
out
cmp
icebp
mov
push
mov
mov
dec
push
push
test
jbe
pushf
xorb
sub
inc
sahf
push
fstpt
aas
sub
dec
xor
out
xchg
xchg
sub
pop
inc
enter
jge
push
call
sarl
cmp
out
sub
add
mov
pop
pop
and
test
movsl
mov
test
mov
push
adc
mov
cmpb
and
sbbl
fwait
std
push
stc
pop
pop
jmp
ret
xor
sub
inc
mov
adc
int
mov
or
cmp
jae
loopne
and
int
mov
pop
dec
push
dec
lahf
jmp
lret
adc
cli
lock
js
mov
test
inc
lods
sub
cld
rcrl
dec
adc
jo
mov
pushf
std
test
fnstenv
cmc
pop
cmpsb
test
mov
mov
rcrb
cli
push
daa
ret
dec
or
or
pop
lods
lret
jmp
outsl
xor
fs
out
in
xchg
jg
mov
mov
mov
xor
jbe
lock
outsl
scas
out
cmp
mov
push
insl
aad
pusha
mov
jmp
into
out
stos
scas
je
arpl
or
jg
incb
adc
loopne
insb
lret
mov
pop
sbb
sbb
dec
shl
or
jne
imul
lcall
xlat
jmp
in
push
fisttps
adc
fwait
mov
push
dec
sbb
cld
jb
insb
mov
push
jmp
aad
test
sub
xchg
mov
scas
inc
pop
jno
mov
or
sbb
mov
inc
cmpsl
lret
pop
loope
dec
push
in
or
les
sub
add
and
adc
ffree
int3
jne
cmp
ja
push
xlat
pcmpgtd
ds
rclb
data16
dec
stc
xchg
cli
or
sti
mov
lcall
lret
call
mov
ljmp
popf
push
cli
shlb
mov
into
lods
xchg
test
mov
mov
stos
movsl
aas
cmc
leave
in
loopne
clc
adc
xor
inc
jns
jg
add
cmp
rcrl
mov
test
push
mov
xor
das
sahf
repnz
fiaddl
popa
arpl
ss
cmp
enter
shl
out
or
inc
dec
sti
lock
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
shll
adc
mov
dec
aam
mov
lods
rcr
movsb
insl
adc
lds
xchg
out
sub
pop
lcall
repz
mov
sub
test
pusha
inc
push
push
mov
in
adc
push
mov
sbb
js
or
push
xchg
push
ficoms
jns
lods
outsb
push
roll
out
adc
in
fcmove
ss
sarl
inc
push
or
mov
sub
sub
out
or
mov
out
xchg
or
push
sbbb
js
or
inc
iret
push
dec
daa
repz
mov
inc
divb
adc
sub
mov
adc
testb
jmp
aam
sahf
adc
mov
add
sarb
in
mov
cmp
fisubrl
jp
mov
push
ret
or
add
fistpll
pop
popf
dec
xor
fwait
ret
int3
loop
dec
fsubrs
xchg
aad
push
mov
mov
push
or
mov
repz
adc
les
aas
popa
sub
cli
xchg
mov
mov
movsl
mov
xor
rcll
mov
inc
fwait
andb
pop
push
pop
shl
sarl
mov
orb
sub
shlb
xor
fstps
inc
outsb
ds
sbb
mov
adc
and
pop
outsb
and
aaa
pop
test
xchg
or
pusha
fwait
jp
lahf
fbld
pop
mov
pushl
cld
mov
ja
les
stc
mov
bound
test
out
cmp
imul
push
and
adc
imulb
mov
cmp
push
inc
jns
xchg
pop
dec
test
jb
dec
xchg
sub
mov
loopne
ljmp
aaa
cltd
and
mov
push
or
dec
mov
mov
xor
bound
scas
xchg
sbb
dec
lret
adc
ret
push
mov
jns
dec
lahf
sbb
inc
addr16
enter
mov
mov
sbb
xchg
pop
repnz
xchg
lods
pop
jg
adc
enter
dec
sub
and
push
or
shll
pop
dec
or
mov
aaa
sbb
out
sub
cmp
jmp
sbb
or
xor
mov
sarb
mov
lahf
pop
int3
ljmp
scas
addr16
mov
mov
lret
loop
cmpsb
inc
jmp
mov
jmp
cmc
std
fs
jno
mov
pop
inc
ud0
jle
jo
call
jle
outsb
dec
jl
xor
push
mov
push
pop
mov
gs
cs
jge
mov
push
ljmp
push
dec
sbb
xor
enter
jmp
pop
fcomi
stos
ja
xorl
sbb
mov
cmp
mov
dec
jg
cmp
xchg
mov
cli
cld
out
add
xchg
cmp
inc
aas
fbstp
xchg
int3
jmp
push
sarl
and
outsl
iret
enter
mov
or
push
push
std
xor
dec
push
scas
enter
sahf
cmp
rcll
mov
mov
add
stos
out
test
stc
xor
imul
xor
adc
data16
inc
popa
mov
sub
test
mov
mov
dec
jns
aam
stc
jo
xor
inc
push
pop
push
add
adc
add
push
xchg
cmc
jg
icebp
jo
xchg
mov
pop
add
ret
out
xor
into
cmp
ljmp
cwtl
jle
cwtl
xchg
es
pop
lods
xlat
ret
sarl
pop
or
ss
mov
cmp
out
mov
out
sbb
loop
daa
mov
sub
mov
jne
push
dec
mov
je
lahf
lea
inc
push
clc
pushf
rol
mov
mov
js
shll
xchg
mov
jnp
sbb
repz
xor
fimull
dec
pop
jmp
into
add
mov
xchg
push
pop
ja
mov
incb
out
mov
inc
stos
hlt
push
sub
mov
fwait
es
ds
es
dec
insl
push
cltd
mov
fcmovnbe
imul
into
jo
repnz
popa
hlt
push
mov
mov
rcll
cmpsb
movsl
ss
sbb
movsb
xor
inc
repz
and
leave
popa
call
cmp
push
ficoms
loopne
mov
js
insl
push
gs
fstpt
in
mov
sbb
fcmovne
push
add
ja
test
imul
lahf
vmovaps
inc
stos
inc
push
int3
adc
aaa
gs
mov
or
int3
ret
adc
ret
stos
imul
mov
jo
xor
stos
ljmp
adc
xlat
ret
imul
into
xor
mov
xor
insl
mov
mov
push
stc
xchg
jbe
xor
xchg
hlt
mov
test
mov
test
xchg
add
fdivl
leave
je
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
xchg
mov
out
sbb
jo
jle
jo
sub
fdivp
xchg
sub
stos
lret
dec
or
jb
rcrl
xchg
popf
adc
ja
add
dec
mov
or
fdivrs
mov
shl
fistl
mov
je
stc
sbb
frstor
movsb
decb
inc
xorb
xor
aas
ror
out
roll
popa
pop
sbb
fcom
in
pop
lods
sub
or
sub
dec
sub
or
ficomps
bound
rorb
push
jne
mov
stos
arpl
cli
call
xorl
mov
arpl
sbb
shll
sbb
adc
mov
cmc
fs
popf
pop
adc
jge
into
pop
mov
and
pop
jp
sbb
lock
xchg
lock
mov
data16
xor
push
aad
push
dec
cmp
in
inc
or
inc
lods
sbb
decl
pop
adc
lahf
outsl
sbb
xchg
push
dec
push
pop
loop
fstpt
daa
lcall
add
rolb
dec
xor
inc
xchg
popf
loope
sbb
aam
push
clc
mov
faddl
pushf
das
ja
std
push
adcl
mov
pop
mov
mov
sbb
addr16
jge
repz
sub
mov
nop
fmuls
loop
insb
and
push
scas
push
addr16
es
in
lcall
pop
xlat
pop
mov
scas
dec
loope
mov
sbb
stos
lods
fsubrs
xor
jnp
cltd
icebp
pop
cmpb
aam
cmp
divb
stc
or
in
scas
jle
sbb
inc
fisttpll
lea
pushf
test
aas
lcall
pop
das
mov
in
mov
fs
fcom
repnz
int3
push
insl
out
and
or
sub
pop
rolb
shlb
fistpll
data16
shll
sbb
and
or
mov
cli
fwait
mov
mov
enter
ja
cmpsb
xchg
pop
clc
or
rolb
or
dec
mov
pop
jge
insl
add
mov
mov
pop
bound
notb
cmp
pop
in
out
jl
inc
mov
and
jmp
mov
xor
and
pop
lahf
pop
mov
adc
mov
ja
fidivrs
or
lods
pop
out
dec
out
adc
cmp
jns
rorb
pop
sti
xchg
shr
cmpsb
rclb
push
movsl
mov
out
mov
fimull
cwtl
add
sbb
mov
loopne
push
xor
mov
jmp
cmp
push
add
data16
and
test
sbb
mov
jnp
fiadds
fiadds
dec
jle
jnp
xlat
or
das
dec
sub
icebp
and
lret
in
push
mov
daa
lcall
sub
outsl
ja
mov
hlt
inc
stc
testl
cmc
jge
mov
outsb
xor
mov
sub
adc
icebp
mov
mov
pop
cmpl
sub
mov
shl
add
mov
sbb
popf
add
pop
mov
in
xor
jle
xchg
adc
push
dec
xor
lds
es
pop
aam
push
leave
cli
cmovs
pop
adc
cld
jae
test
jnp
cmp
jnp
pushf
cmp
cs
dec
out
dec
das
lcall
mov
mov
mov
in
nop
mov
xor
fisttpll
outsl
pop
imul
dec
fisttps
cwtl
and
and
xchg
in
sub
ficoms
gs
jle
jno
stc
ljmpw
pusha
and
flds
pop
fstps
sub
daa
inc
hlt
fimuls
imul
loop
and
xchg
dec
push
dec
movsb
cmpsb
inc
shrl
loopne
imul
pop
rolb
aas
sbb
rorl
adc
inc
outsb
pop
mov
bound
add
mov
lods
addb
cmp
ss
jmp
mov
rorb
mov
iret
pop
mov
lock
test
dec
lret
sahf
push
or
sbbb
dec
neg
dec
adc
std
cmp
aad
and
mov
pushl
ret
push
stc
into
aad
icebp
dec
jl
rcll
aas
pop
lods
add
gs
ret
lea
lea
push
test
loopne
rolb
scas
mov
es
cmp
pop
pop
int3
mov
pop
mov
aad
jo
enter
cwtl
pop
xlat
ljmp
push
xor
in
or
lods
adc
pop
ljmp
dec
daa
addb
shrb
lock
add
insb
loope
push
or
mov
sti
test
push
jg
rcrl
xor
shlb
mov
lods
jns
xlat
loopne
cmp
into
adc
jo
and
mov
aam
cmpl
inc
pop
pop
or
jns
adc
movsb
int
mov
push
adc
or
or
inc
jge
js
push
jecxz
not
push
sbb
dec
dec
inc
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
mov
adc
mov
push
and
mov
add
cli
test
lcall
daa
fildl
push
pop
xchg
cmc
insb
jbe
jns
pop
and
ret
and
aam
push
push
lods
mov
xchg
in
fs
movsb
pop
fcmovu
and
sub
mov
mov
mov
sub
fmull
jnp
adc
out
movb
jg
or
les
into
xchg
add
cmpl
sub
cmp
cmc
clc
fs
loope
xor
sub
test
ljmp
popf
inc
mov
add
push
insb
ljmp
cmpsb
jecxz
divb
stos
inc
sbb
movsl
les
xor
add
xor
enter
cmc
sub
call
mov
popf
ljmp
in
lds
mov
push
jo
mov
or
popa
dec
mov
cld
xor
lea
fstpl
inc
cmp
cmpsb
push
movsl
fisubs
adc
cwtl
sarb
cmpb
mov
fcomi
mov
pushl
lods
mov
jnp
bound
add
push
in
int
jmp
or
inc
ljmp
cli
ds
das
xchg
pop
mov
or
jo
scas
jno
cmp
sbb
push
adc
push
and
push
sbb
out
push
call
dec
dec
push
sub
out
ret
rol
ja
and
je
xchg
jno
push
cltd
sub
adc
push
pop
idivb
cld
add
mov
push
xchg
out
xor
xor
fld1
lahf
sbb
xor
pushf
add
pop
pop
lahf
sbb
xlat
pop
test
sahf
mov
jb
xchg
sti
cmpsl
fildl
or
andl
test
stos
sub
out
adc
mov
in
aam
in
sbb
push
movb
out
test
xor
aas
es
movsb
cmc
std
ret
add
out
xor
aad
hlt
test
and
jnp
sbb
mov
or
push
stc
mov
inc
fistpll
push
jb
mov
fwait
jno
sar
popf
gs
mov
sub
cmovle
insb
xchg
pop
notl
scas
mov
and
sbb
insb
jecxz
jl
in
adc
or
add
sub
icebp
xchg
popa
mov
out
in
xchg
jns
js
out
mov
add
push
scas
ret
fs
addr16
push
outsl
cltd
ret
cmc
xchg
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
arpl
mov
js
add
ds
and
inc
fiaddl
xor
cltd
negl
xor
out
sbb
adc
xor
sbb
repz
and
fstps
movb
sub
pop
mov
out
jl
sbb
loope
cmp
dec
std
xchg
data16
pop
mov
xchg
repnz
in
daa
inc
xor
int3
inc
xor
mov
test
mov
xor
repz
je
divb
xchg
int
mov
inc
fbld
push
daa
iret
insl
pop
out
adc
adc
scas
or
push
stc
cmp
test
aam
pop
stc
inc
sbb
sbb
jno
push
xchg
cmp
pushl
jne
in
cld
cmpsl
sarb
mov
mov
scas
inc
mov
incl
imul
sub
icebp
daa
jecxz
and
mov
sub
shll
sbb
int
sub
fwait
stos
into
lcall
xchg
outsl
js
jl
sub
sub
jmp
lds
jnp
xchg
in
lea
sbb
imul
aam
cmp
xchg
fcmovnb
jecxz
lods
cmpsb
ja
movsl
ljmp
mov
xchg
sbb
cmpsb
sub
add
popf
or
sahf
xor
or
push
mov
sbb
cmp
push
leave
jno
push
sbb
sub
pop
pop
loopne
push
pop
ret
fwait
xchg
ds
xor
xor
hlt
jae
in
aam
and
lds
pop
sti
test
jns,pt
pop
inc
cmp
arpl
pushl
pop
dec
repnz
scas
adc
xor
outsb
mov
insl
xchg
pop
testl
ja
push
xchg
xor
push
xchg
add
fs
mov
popf
mov
xchg
jns
or
gs
or
pop
test
jl
pop
loopne
mov
loopne
ret
inc
cmp
xchg
mov
ja
out
sub
inc
cmp
loope
std
shrb
xchg
inc
and
and
mov
flds
xchg
dec
int3
or
or
pop
das
fs
mov
mov
arpl
aam
notb
negl
adc
pop
pop
adc
andl
xor
xchg
fsub
sahf
mov
shrl
movsl
std
xchg
sub
mov
xchg
dec
sub
out
fisubrl
in
fsub
push
dec
cmp
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
