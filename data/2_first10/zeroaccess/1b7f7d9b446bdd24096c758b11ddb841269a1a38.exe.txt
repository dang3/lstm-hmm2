push
mov
sub
xor
jmp
into
rcr
aad
mov
bound
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
loopne
movsb
ret
add
punpcklbw
sti
inc
sbb
xchg
pop
push
je
mov
fwait
ret
clc
mov
popf
movsl
xlat
lock
xor
movsb
mov
out
ss
mov
pop
cld
in
mov
dec
sub
push
push
fdivl
push
adc
shrl
ds
mov
xor
mov
leave
xchg
roll
cwtl
and
adc
insl
imul
xor
xor
and
repnz
mov
aam
pop
inc
mov
or
mov
push
mov
shr
leave
fidivrl
les
imul
sub
xlat
outsl
inc
cmpsb
mov
ds
adc
insl
negl
out
scas
mov
mov
xchg
out
out
sahf
xchg
xor
push
ss
ljmp
aaa
dec
je
imul
lock
pushf
ss
cmpsb
divb
xchg
xchg
insl
cmc
loopne
or
push
lock
mov
ss
clc
xlat
sbb
imul
push
xchg
ds
pop
mov
add
mov
pop
pushf
push
push
sub
mov
lods
iret
add
pop
test
dec
mov
mov
push
cs
loop
mull
xchg
mov
ret
in
imul
aam
inc
mov
cwtl
adc
push
xchg
sbb
mov
inc
push
addl
gs
or
mov
mov
daa
lahf
divl
popf
cld
cmp
push
pop
outsb
fldt
sub
incl
out
mov
add
mov
pop
out
fisttps
mov
hlt
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
pop
sbb
jle
js
pop
push
adc
mov
shll
adc
lret
inc
mov
xchg
xchg
testl
sub
hlt
push
fdivr
cmp
cmpsb
or
cmpb
lcall
xor
mov
les
mov
or
jb
mov
loope
xor
les
adc
or
js
pop
fwait
xor
add
popa
into
adc
ret
mov
mov
fbstp
cmpsb
push
movsl
push
fcomip
icebp
pushf
push
push
push
dec
mov
in
jae
scas
mov
push
das
inc
orl
repz
mov
ret
pop
adc
push
jecxz
lcall
or
je
pop
jb
push
adc
data16
xchg
mov
jp
sbb
jmp
xor
pop
sub
movsb
xchg
ds
arpl
lods
dec
lret
sti
clc
scas
fs
fldenv
sbb
mov
in
or
push
int3
jo
repz
sub
push
cmc
fcom
mov
sbb
movd
iret
sbb
repnz
mov
outsb
adc
pop
sub
push
mov
lock
inc
mov
mov
and
fnstcw
xor
movsl
sbb
es
imul
out
flds
in
faddl
add
sbbb
int3
inc
js
adc
in
enter
pop
addl
jno
cmp
inc
inc
add
adc
pop
mov
sub
testl
pop
mov
stc
lods
push
inc
loopne
popa
cltd
bound
sbb
test
subb
movl
xor
mov
les
jae
arpl
nop
hlt
add
das
fstps
out
cmp
loop
sbbl
negb
iret
dec
inc
jmp
xchg
ljmp
push
movb
mov
xor
dec
popa
xlat
loop
mov
cli
decl
pop
or
sarl
pop
sbb
xchg
mov
jnp
inc
popf
divb
cmp
jae
cmc
and
pop
inc
movb
adc
jae
jb
ljmp
dec
addr16
pop
adc
dec
fistl
fisttpl
add
jge
repnz
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
icebp
cmp
js
jle
js
lahf
mov
xor
jb
lea
imul
inc
cmp
xchg
fisubl
or
aas
leave
inc
std
jg
push
and
xchg
ja
add
into
ret
data16
mov
fdivrs
pop
push
jo
imul
add
fstl
mov
pop
cmp
cmpl
test
ret
push
in
lret
dec
js
inc
and
mov
xchg
inc
jg
mov
ds
jmp
adc
sbb
imul
test
xchg
pop
mov
or
sbb
lods
lahf
add
je
movsl
pop
jo
imul
aaa
mov
and
xor
ljmp
xor
and
add
cmp
jp
add
sbb
jl
sti
xor
sbb
add
push
int
mov
mov
xor
jns
dec
xor
cmpsl
mov
adc
std
xchg
insl
jl
popf
mov
arpl
add
jecxz
inc
stos
fidivs
adc
lds
xor
push
les
and
jns
and
push
scas
aaa
popa
scas
adc
pop
pop
dec
imul
aas
cmp
push
rcrb
aam
xchg
mov
push
cltd
sub
loope
sbb
jecxz
mov
pusha
or
loopne
push
in
cli
adc
push
mov
fwait
xchg
fcoml
xchg
jg
push
pusha
inc
jle
fsubp
mov
and
sub
sbb
xor
adc
call
mov
mov
test
sahf
clc
xchg
jbe
mov
leave
pop
mov
bnd
lret
stos
popa
sub
cmc
inc
xchg
addr16
jmp
add
pop
loopnew
pop
xchg
js
movsl
add
ret
imul
lcall
ja
cli
or
mov
mov
nop
js
shlb
scas
into
movsb
sub
jae
pusha
shll
cmp
adc
mov
icebp
stc
stos
pop
and
lea
fistps
loopne
in
adc
jbe
pushw
insl
sbb
add
sti
xor
cmp
iret
data16
rolb
mov
cmp
scas
cmc
and
in
add
mov
pop
fimull
cwtl
fsubl
pop
fwait
adc
testb
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
mov
add
jle
js
xor
fisubs
scas
xor
pop
dec
cmp
pop
mov
flds
and
sbb
daa
das
mov
aad
dec
add
mov
xlat
pop
ret
test
add
pop
inc
repz
inc
mov
movsb
int
sbb
out
imul
cmp
xor
js
icebp
dec
and
loope
mov
jae
xchg
xchg
cmp
pop
rdpmc
mov
outsl
lock
lock
add
inc
sbb
dec
push
adc
pop
mov
mov
lahf
push
jns
add
or
inc
and
gs
jp
testl
xor
push
fimull
std
ret
push
or
aad
or
inc
test
cs
aam
std
aas
stc
push
cmp
xor
dec
mov
imul
jnp
pusha
xchg
sbb
fyl2x
incl
sub
jmp
sbb
cmpsb
inc
fidivl
clc
imul
pop
xchg
add
mov
fs
xor
mov
pop
mov
mov
xlat
pop
xchg
cmp
pop
pushf
scas
pop
jns
add
mov
inc
push
sti
dec
mov
mov
sbb
sbb
int3
push
lods
xchg
lcall
pop
jbe
mov
loopne
jmp
repz
dec
out
stos
xchg
rcl
ffreep
add
call
fadds
lods
push
push
xchg
add
ja
inc
js
or
fildl
dec
pop
into
and
pop
pop
or
scas
cmc
jp
mov
pop
dec
pushf
dec
xchg
les
ss
mov
and
enter
mov
in
das
mov
mov
or
sti
in
pop
add
cli
lods
adc
fwait
out
sarl
pushf
jne
inc
mov
loop
fstps
cmp
sbb
sbb
inc
xchg
dec
sbb
pop
mov
cmp
mov
fsubs
icebp
pop
xchg
in
ja
loopne
fs
and
add
arpl
add
mov
out
sbb
inc
jle
sub
push
mov
add
pop
sbb
push
stos
ja
jo
cmp
popa
outsl
insl
adc
inc
push
rcrb
push
dec
push
jnp
push
sbb
pushf
sub
sub
push
mov
sti
out
adc
movsb
gs
adc
cmp
inc
loopne
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
into
push
outsl
add
js
jle
js
fs
cmc
push
loope
pop
xorl
xchg
lea
pop
mov
inc
mov
push
push
dec
add
cmp
xchg
rorl
sub
mov
push
test
sbb
sub
fnstcw
cmp
movsl
add
loopne
cs
std
jl
sbb
imul
popl
rcr
lds
enter
inc
aam
pop
hlt
loop
jle
jp
in
testl
sbb
mov
sbb
pop
xchg
cmp
push
and
aas
out
popf
leave
sahf
out
ds
fsubr
pop
add
fsubl
jmp
inc
daa
xor
ljmp
jns
icebp
shlb
push
pushf
mov
popa
fidivrs
xchg
push
push
mov
push
xchg
daa
push
jge
xchg
add
mov
jbe
sbb
fnclex
pop
out
push
mov
leave
inc
fs
loop
cmp
cmpb
add
jl
lods
loopne
fidivrl
pop
leave
xor
sub
shll
gs
daa
mov
mov
outsb
test
sbb
xchg
idivl
pop
adc
inc
loope
push
mov
imul
inc
fcoms
sbb
mov
out
outsb
dec
and
mov
cmp
lods
fistl
call
dec
jmp
ret
dec
pushf
ret
lods
dec
movsb
lret
mov
inc
sahf
inc
lahf
mull
jg
inc
add
xlat
mov
repnz
call
mov
xchg
fwait
push
ficoml
ss
inc
cwtl
mov
xchg
pop
inc
pushf
das
in
test
mov
xor
nop
xchg
dec
mov
mov
mov
cmp
inc
cmp
mov
mov
cmpsb
ret
pop
xchg
loope
inc
jmp
int3
or
popf
sub
shll
stos
leave
ret
push
pop
push
int
cmp
xor
outsb
bound
rcll
out
adc
mov
jle
sbb
or
sti
sar
outsb
cmp
xor
xor
movsl
outsl
jle
data16
mov
popf
je
jl
cmp
xor
mov
add
adcb
mov
inc
test
push
ja
mov
ja
repnz
in
adc
sub
pop
adc
xorl
mov
mov
outsl
dec
adc
rolb
cmp
mov
test
add
icebp
cmpsl
inc
add
inc
or
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
sub
xchg
js
jle
js
fnstenv
shrb
or
outsb
cmp
xor
ds
in
loopne
inc
pop
incw
xor
adc
mov
loopne
adc
inc
jl
pop
leave
lcall
fidivs
lea
mov
mov
cmpsl
daa
mov
addb
push
pusha
imul
and
out
imul
shl
pushf
mov
mov
les
xor
cmc
jo
sub
lods
roll
add
movsl
test
ret
pop
cs
movl
cmp
fistpl
mov
mov
cmp
arpl
dec
xlat
daa
mov
and
loop
fsubrs
aaa
imul
ret
mov
mov
sub
cmp
jnp
sbb
es
jnp
jg
out
cwtl
enter
or
jns
bnd
bound
ljmp
outsb
cld
sahf
cmpsb
add
push
mov
pushf
xchg
adc
enter
cltd
jne
push
sbb
das
inc
jbe
jmp
fiadds
jl
pop
sub
cmp
jbe
dec
pop
outsb
mov
xor
pop
cmp
xor
sbb
test
mov
pop
jp
jo
and
ja
xor
lahf
sbb
lahf
jg
cmpl
outsl
jb
cmp
sbb
or
push
pushf
test
rcrl
sarl
enter
mov
pop
dec
lods
cwtl
sbb
loop
stos
cltd
pop
cmc
xchg
inc
mov
dec
popf
sbb
aaa
sbb
push
and
packsswb
pop
and
clc
scas
cmpsl
add
push
inc
sub
andl
dec
cli
scas
or
daa
mov
pop
filds
cmp
iret
push
jmp
mov
pop
mov
lahf
sbb
pop
sbb
mov
or
pop
pop
mov
dec
lcall
imul
cs
sub
imul
mov
cmp
push
jl
inc
xchg
pop
mov
mov
cli
hlt
mov
mov
stos
or
imul
fildll
push
cmp
scas
shlb
lods
and
pop
adcl
and
mov
cmp
adc
pusha
out
fwait
jl
add
and
mov
inc
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
sub
add
js
jle
js
pop
jnp
sahf
jp
test
jmp
cmp
test
fwait
inc
mov
clc
notl
mov
xchg
inc
push
jg
repnz
call
cmp
out
mov
pushf
xchg
cld
jae
lods
leave
dec
fwait
inc
andl
loope
in
xor
mov
push
shrl
jg
and
into
mov
cmp
popf
pop
insb
ljmp
mov
daa
add
addl
xchg
in
les
jae
jmp
mov
add
pusha
add
shlb
les
xchg
mov
call
bound
inc
pop
fs
mov
lock
push
mov
das
push
pushw
fs
mov
cmpsb
sub
pop
adc
movsb
mov
scas
jb
mov
cmp
jl
jl
call
decl
int
pop
popw
pop
xchg
test
addb
sbb
shlb
mov
imul
icebp
insb
aam
ds
push
mov
mov
push
insl
add
xor
js
xchg
inc
mov
imull
loope
mov
xor
mov
add
add
jnp
dec
mov
in
adc
insb
cmp
cmpsl
test
or
imul
stc
aam
lea
fisubrs
add
je
sub
inc
pop
pop
mov
cmc
mov
mov
push
out
add
ficoml
jmp
in
mov
adc
bound
shrb
stos
sub
pushf
cmpl
loope
xchg
lds
inc
aaa
mov
mov
push
dec
pop
pushf
invd
je
mov
jo
jb
jl
xchg
das
mov
aas
mov
mov
pop
in
scas
and
push
cli
jb
clc
mov
and
jge
cmpsl
mov
jae
aaa
cmc
fwait
cld
pop
jl
rclb
pop
or
pop
or
sub
ret
lss
fstpt
mov
mov
cltd
lret
out
leave
test
arpl
xchg
das
and
and
lcall
dec
pusha
repz
call
inc
mov
mov
mov
fcmovnbe
divb
xor
nop
je
xor
int
jae
imull
xchg
iret
inc
mov
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
rcll
js
jle
js
rorl
sbb
out
pop
test
push
cmp
aas
fadds
or
pop
inc
pop
pop
push
jle
dec
sbb
ss
and
movsl
js
push
stos
gs
pop
sbb
sbb
adc
dec
push
push
test
cltd
pop
adc
pop
push
or
xchg
das
shrb
xchg
movsb
add
sub
xor
sahf
cmc
cmp
xor
iret
sbb
unpckhps
popa
sub
and
dec
pusha
inc
xchg
xor
pop
push
pop
xchg
decl
loope
or
inc
sar
push
xchg
fmull
in
fwait
jae
xor
or
mov
mov
dec
jb
xor
mov
push
sub
pop
mov
or
sarl
or
inc
and
pusha
mov
push
out
rcll
dec
call
add
xor
mov
out
hlt
dec
jae
cs
mov
fisubrs
imul
roll
cwtl
xchg
pop
loopne
in
xchg
pop
rolb
jb
and
mov
scas
mov
andl
jb
xor
sbb
shl
and
bound
or
push
adc
fidivs
cmp
cmp
into
or
sub
fs
pop
xchg
jae
pop
mov
testb
ds
cmp
and
push
push
or
push
mov
dec
push
fimull
aad
dec
pop
xlat
out
stos
pop
inc
add
ret
and
sbb
inc
cli
mov
shrl
outsb
push
xchg
lea
cmpsb
add
nop
push
movsl
jns
or
scas
mov
xor
movsb
dec
out
xchg
stos
fucomp
into
lock
mov
mov
sbb
pop
out
shrb
push
cmp
jne
xchg
call
dec
mov
xor
xchg
loopne
scas
ret
sub
xlat
or
jbe
repz
mov
pop
hlt
mov
and
iret
jl
cmpsl
aam
jle
jo
andl
ljmp
push
call
out
push
pop
adc
pop
fsin
or
pop
cld
mov
push
adc
int
cmp
pop
loop
fmuls
jbe
xchg
lahf
sbbl
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
stos
je
orl
jle
js
sti
mov
les
aas
xchg
xchg
and
jb
enter
std
xchg
movsb
push
xchg
and
je
outsb
fadds
sbb
mov
mov
fsubl
hlt
wbinvd
push
sbb
mov
push
pop
in
fisubrl
add
les
cwtl
xchg
mov
sbb
cmp
mov
xor
mov
mov
jmp
scas
sub
adc
mov
sub
movsb
adc
jecxz
notl
fwait
inc
dec
and
cmp
jnp
xchg
mov
cmp
add
mov
andl
lcall
fprem1
cmp
sub
popf
bts
imul
in
or
add
mov
int3
stos
pop
pusha
inc
or
pop
sub
fwait
mov
xchg
sbb
pop
fidivl
or
or
js
cwtl
cmp
add
push
repnz
lock
mov
fdivs
repnz
mov
into
pop
mov
enter
mov
cld
sti
mov
into
push
test
sub
pop
fs
lret
mov
adc
mov
nop
xor
jl
dec
fmuls
and
pop
test
fldl
sub
mov
repnz
jmp
sbb
data16
cltd
cmp
jge
push
mov
push
or
push
cmp
daa
dec
cltd
sti
mov
lcall
or
test
aad
inc
or
jne
xchg
jbe
nop
es
fwait
pop
imul
clc
out
add
sub
cmpsl
sbb
aad
fnstcw
jns
repz
pop
lret
pushf
mov
sbb
lods
jg
les
xor
scas
addr16
mov
in
lock
rcll
movsl
icebp
mov
lods
in
inc
fsts
js
test
mov
mov
lock
movsl
dec
sub
neg
xlat
jbe
cmp
sbb
fistpll
mov
push
lea
idivb
outsb
xchg
and
repnz
loop
cwtl
xchg
pop
mov
pop
adc
sbb
pop
into
pop
scas
xlat
stos
sahf
inc
imul
cmpsb
pmaxsw
ljmp
loopne
sbb
lret
xchg
xor
sbb
enter
add
ror
int
rcr
aad
bound
and
fists
jle
js
out
repz
xor
int3
sub
sbb
xor
cli
int
dec
idivl
mov
sbb
cmpsb
std
xor
or
lcall
push
adc
or
inc
inc
roll
insl
dec
xor
idiv
mov
mov
lret
pop
mov
es
add
stos
jge
cmpsb
sbb
orb
push
adc
mov
jg
mov
or
inc
popf
mov
gs
pusha
scas
mov
fists
push
clc
or
jno
nop
jp
sbb
in
xchg
orl
mov
and
and
push
cmp
push
nop
rorl
push
cs
sarl
mov
sbb
bound
movsl
jae
push
xor
mov
xor
inc
jno
sbb
rcll
push
cmp
dec
cmpsb
rclb
and
pop
xchg
pop
jno
xchg
int3
les
mov
ret
pusha
mov
add
in
fwait
or
pop
shrb
push
or
or
gs
mov
mov
mov
and
scas
push
in
lods
gs
cmpsl
jae
pop
clc
rolb
dec
shrb
cmp
std
mov
sbbb
jmp
mov
add
fistpl
mov
adcb
rcrb
movsb
in
data16
adc
incb
lahf
push
std
or
fdivrp
ret
and
jo
xchg
sub
sub
sub
fldcw
or
in
push
inc
xchg
mov
jb
mov
cmp
stc
in
inc
in
loop
mov
outsl
rolb
or
into
jno
bnd
stos
jbe
mov
inc
cmp
imul
hlt
mov
test
pop
sbb
dec
sbb
movsl
push
fcomps
xchg
pop
test
addr16
sub
sbb
pop
and
push
adc
movsl
xchg
adc
sbb
or
mov
out
mov
lea
push
pop
cmp
pop
out
shll
mov
push
scas
pop
dec
pop
jo
push
daa
cli
and
aam
jne
mov
xlat
test
pop
fistpl
mov
lea
inc
dec
and
arpl
addr16
sarb
dec
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
push
cli
stc
cs
js
jle
js
insl
shll
mov
hlt
test
add
sub
or
iretw
xor
iret
out
xlat
fmulp
ja
or
sbb
and
or
xchg
dec
jb
or
subb
push
js
fidivl
mov
jno
rol
icebp
dec
xchg
add
imul
fdivrl
lock
mov
sahf
loope
shl
jle
aad
test
cmp
fsub
lea
push
xchg
testl
es
sub
xchg
cmp
xor
test
jmp
sub
adc
test
outsl
sub
lock
jmp
aas
dec
test
rorb
sub
cltd
lock
sahf
or
cld
test
lock
nop
mov
mov
repz
rorb
shrb
adc
fwait
divb
in
mov
xor
or
jo
fisttps
mov
pop
jge
cmp
xchg
xor
cltd
popf
cmp
leave
sti
sbb
fbld
dec
or
or
mov
sahf
push
xchg
jae
loopne
aam
inc
jns
mov
jns
sahf
ljmp
adc
pop
lret
mov
dec
popa
adcl
scas
in
push
mov
pop
pushf
outsb
stos
xchg
fistl
pusha
cli
sbb
lods
mov
sub
nop
adc
and
sub
sbb
mov
ja
repnz
pop
jns
popa
aas
mov
lods
xor
dec
inc
daa
out
in
fstpl
and
mov
loop
push
adc
xor
adc
xchg
and
inc
or
xchg
sbb
loope
sarl
mov
mov
mov
dec
lahf
or
std
mov
pop
and
stos
out
gs
adc
insb
sti
add
fcoms
xor
and
in
vminps
outsl
sbb
cmp
dec
repz
jmp
movsl
push
dec
dec
mov
nop
push
or
jge
stc
addr16
rclb
aad
lahf
rclb
scas
xchg
inc
rorl
jmp
mov
sbb
adc
inc
sarb
imul
lock
lahf
push
mov
mov
jmp
ror
ror
ror
test
xchg
push
pop
sub
js
jle
js
push
xchg
push
inc
fs
inc
nop
shll
mov
inc
iret
inc
xor
adc
aad
cmp
mov
xor
and
add
sub
xchg
sub
daa
cmp
lods
jl
push
sbb
icebp
mov
stos
xchg
push
pop
mov
mov
cmp
pushf
adc
sub
or
jnp
jle
xor
andb
rcrl
inc
xchg
xor
dec
xchg
adc
js
jo
lods
in
pop
out
and
dec
test
jnp
inc
mov
cmp
and
iret
add
and
jge
aas
push
or
pop
mov
push
fnstcw
movsl
ret
cld
ss
aad
in
mov
leave
or
pop
sub
or
mov
adc
mov
mov
or
aam
popf
lret
movsl
inc
das
dec
test
rol
bound
xor
loope
loop
lods
xchg
mov
mov
xlat
test
leave
sahf
mov
js
push
mov
gs
xchg
ss
ds
push
and
jne
aaa
sti
cmp
loope
adc
mov
mov
mov
cmp
push
or
cmp
mov
inc
enter
ret
push
mov
pop
aaa
xchg
sub
xor
iret
inc
lods
iret
jge
or
fstps
inc
into
movsl
out
pop
outsl
sbb
mov
cmp
push
into
stc
in
jnp
pop
and
push
mov
adc
cmp
mov
xchg
int3
sub
xor
ficoms
bound
mov
les
mulb
rolb
pushf
pop
pop
push
aad
int
mov
and
mov
jmp
imul
jbe
mov
cmpl
inc
les
stos
mov
lods
shlb
add
push
inc
pusha
jle
inc
and
sub
dec
push
adcb
pop
cmp
ljmp
jle
cmpsb
daa
push
mov
imul
and
mov
cs
stos
out
shlb
sbb
aaa
jb
mov
jmp
mov
mov
sbb
int
xor
jnp
bswap
fsubr
cltd
imul
aaa
fstpt
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
in
cwtl
adc
js
jle
js
lock
lea
mov
mov
adc
pop
sbb
add
xchg
in
and
into
out
fidivrl
inc
mov
in
cmp
sbb
push
insb
xchg
jg
push
enter
es
jne
daa
mov
xchg
jg
mov
enter
lds
push
pop
rcl
cltd
aam
fstl
xchg
xchg
sub
es
das
jle
xor
add
cmpsl
sarl
sarl
stos
push
mov
adc
daa
clc
inc
xor
jo
sub
sbb
insl
jecxz
xchg
jecxz
je
add
push
data16
add
dec
fs
xor
inc
jnp
sbb
and
adc
in
movsl
imul
icebp
push
lret
inc
dec
xor
add
or
xor
pop
out
fsubrs
fisttpll
loopne
sub
xchg
in
jo
mov
xor
xchg
es
stos
in
popf
adcl
lea
nop
mov
pop
xorl
pusha
ret
inc
js
mov
iret
mov
pop
mov
xchg
sub
mov
xchg
add
mov
stos
dec
ret
ret
add
jl
fwait
das
xchg
or
imulb
movq
pop
mov
cmp
xchg
popa
jmp
test
pop
cmpsl
pop
fwait
popa
imul
out
fdivrs
adcb
mov
lret
js
ljmp
ljmp
cmp
into
das
test
cmp
push
cmpb
psubw
out
xchg
dec
cli
pop
mov
in
fisubs
fxch
mov
inc
adc
push
mov
inc
cltd
test
jmp
aaa
cs
clc
ficoml
adc
push
push
or
jp
xchg
push
fsts
mul
xor
xor
je
nop
ja
push
fstl
and
add
mov
add
ret
xor
add
dec
jns
popa
clc
std
sbb
add
test
jle
testb
xchg
lods
mov
xchg
dec
inc
sbb
rep
sarb
xchg
enter
out
adc
add
fucomp
mov
les
in
ds
pop
or
cmp
sub
cmp
or
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
ja
sar
insl
das
and
xor
mov
loop
jno
mov
shlb
imul
and
mov
addr16
inc
adcl
test
and
pusha
and
ds
leave
in
mov
cmp
repz
push
xchg
lock
imul
xchg
dec
add
and
sbb
cmp
data16
idivb
stc
sbbb
dec
jge
xchg
push
dec
pop
mov
xchg
jg
out
js
outsb
fwait
cltd
pusha
adc
lcall
andl
xchg
push
test
xor
popf
insb
insl
xor
call
inc
les
in
and
cmpsl
or
xchg
cli
ljmp
mov
dec
les
sbb
cmp
lret
les
lret
sub
mov
sahf
sbb
stos
adc
pop
push
cmp
jne
xchg
xor
mov
mov
mov
jecxz
adcl
or
enter
repz
push
lret
int
inc
mov
lods
mov
inc
sbb
aaa
fistpll
and
lock
push
and
outsl
xor
pop
pushf
and
aam
adc
jne
xchg
xor
mov
out
ret
lcall
mov
stos
js
int
mov
dec
les
add
adc
enter
mov
xchg
jle
sub
mov
jbe
or
xor
lret
aas
ss
rdtsc
or
mov
cmp
fistpl
je
inc
fwait
imul
sbb
push
arpl
adc
bound
pop
adc
int
outsb
jl
sbb
pop
hlt
fwait
lret
es
and
and
xlat
stc
mov
push
pusha
fmul
adc
ss
adc
mov
xchg
dec
lret
popa
xchg
cmp
add
fstpl
cmc
xor
sbb
nop
jns
out
pushf
repz
shll
jae
xchg
xchg
shlb
sub
sarb
cmp
or
dec
cmpb
pop
adc
adc
andb
in
test
xchg
and
int3
and
sub
js
sahf
sub
jb
fisttpll
nop
pop
out
xor
ficoms
leave
push
sbb
xchg
add
jmp
into
rol
ror
mov
sub
mov
sbb
js
imul
cmpsl
mov
xorl
imul
jge
mov
pop
insl
addr16
lods
imul
lods
jge
jno
lods
or
lret
sbb
iret
mov
ret
or
ret
lods
iret
push
mov
cli
mov
sbb
mov
lods
and
into
cmp
ret
pop
data16
lds
sub
inc
pop
jo
push
out
into
jge
outsl
mov
mov
push
orb
push
push
ja
or
lret
mov
xlat
inc
ljmp
push
pop
out
lock
fsubs
pushf
mov
cmp
dec
mov
mov
das
jl
sbb
xor
stc
mov
pop
inc
push
test
push
hlt
add
mov
inc
jb
lcall
pop
mov
lret
jae
test
js
push
jmp
nop
sarl
test
in
mov
mov
mov
pop
inc
incb
jno
out
inc
sub
and
sbb
mov
or
inc
inc
fisubrl
push
popf
push
sub
popf
push
scas
cmp
push
and
imul
pop
xchg
das
imul
jae
jecxz
jecxz
sti
xchg
imull
enter
or
lcall
movsl
inc
add
push
je
mov
add
sub
int3
jae
sbb
frstor
xor
xor
cli
sub
popf
sar
lret
sbb
and
scas
cmpsb
lods
cli
pop
xchg
adc
mov
test
test
outsb
jae
pop
pop
inc
pop
lock
test
in
inc
outsb
sbb
jo
cli
call
seto
inc
cmp
rep
pushf
jmp
orb
in
insb
stos
xchg
mov
mov
pusha
into
ret
pop
push
std
add
add
cmp
push
movsb
jno
leave
push
repnz
add
mov
inc
dec
mov
cmp
mov
add
testl
jb
lods
jno
jns
mov
imul
push
in
icebp
cmp
imul
enter
cmpsb
inc
mov
loop
xor
mov
jge
mov
fdivrs
jo
sbb
pushl
xor
cmpxchg
cmpps
fs
mov
cmp
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
inc
jge
sub
jle
js
std
cmp
incl
insl
mov
das
xor
pushf
mov
and
add
jb
adc
aas
ds
je
jg
popa
cmp
fisubrl
cmpsb
xor
pop
pop
insb
xchg
popa
rcrl
sub
jno
fs
jg
out
or
out
inc
add
and
shr
out
fcmovnu
jmp
ret
cmpsl
repz
mov
call
push
xlat
mov
cmp
bound
mov
mov
stos
pusha
lds
xchg
or
cmc
imul
jne
hlt
js
repnz
ret
xor
xchg
push
and
jp
addl
insl
mov
dec
and
movsl
mov
mov
scas
sbb
je
fmuls
inc
cmpsl
rcl
call
dec
lcall
jecxz
lock
sbb
or
mov
ljmp
in
jge
and
xchg
push
data16
repz
xor
push
push
xor
sub
dec
int3
add
jbe
aaa
ret
push
mov
cmp
adc
ds
and
and
mov
pop
xchg
lahf
add
xchg
std
jo
adc
push
jg
pop
in
mov
sbb
mov
jp
cmp
hlt
dec
cmp
lock
sbb
pop
xor
pop
call
test
dec
push
adc
lret
into
push
imul
scas
add
mov
popf
push
shll
jbe
popa
cli
aad
add
mov
andb
cmp
cmp
pop
outsl
cmpsb
cltd
enter
stos
cmovne
orl
loop
je
movsb
adc
push
int3
jle
or
test
cs
xor
hlt
and
cmpsb
dec
mov
shrb
pop
mov
dec
xchg
fwait
fwait
cmpsl
push
popa
and
lahf
mov
pop
mov
add
jmp
inc
sbb
fisubrs
mov
insb
sub
mov
ret
xchg
nop
jnp
imul
mov
or
lods
leave
stos
mov
sub
sub
jecxz
mov
popa
xchg
addl
in
push
mov
fisubl
daa
rcr
rorl
int3
sbb
imul
data16
xor
xor
iret
bswap
push
test
inc
mov
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
ret
sbb
js
jle
js
pop
jmp
adc
stos
mov
mov
xor
stc
cmp
sbb
pop
mov
pusha
imul
cmpsb
in
lret
jge
cmovno
cmp
jl
movsl
mov
fcmovnbe
lea
vmovd
jo
sub
jne
leave
xlat
and
xor
aas
push
jp
dec
cwtl
insl
arpl
xor
in
pop
or
shl
or
fsubrs
in
inc
shlb
loope
or
dec
fldl
and
imul
mov
mov
pop
aad
pop
xchg
jno
test
inc
ret
pop
icebp
push
dec
lret
jp
dec
xchg
fadds
xchg
ljmp
cmp
sub
pushl
jae
mov
add
sub
pop
xchg
aas
inc
inc
outsl
cwtl
sbb
fwait
ljmp
stos
jmp
sub
xchg
mov
mov
pop
roll
jb
call
test
cmp
xchg
out
inc
mov
sahf
fcmovnu
sbb
mov
cli
test
out
dec
pop
or
pusha
sahf
ret
das
adc
mov
cld
jo
stc
add
xor
jae
int
sbb
mov
orb
and
neg
clc
setg
cltd
jae
cmp
mov
in
mov
scas
and
adc
nop
add
daa
fildll
rcll
adc
jg
ja
std
adcb
cli
xor
in
repnz
xchg
dec
outsb
mov
jb
pop
aad
adc
sti
mov
add
pop
push
mov
mov
fists
gs
sbb
sahf
data16
mov
gs
and
ss
add
mov
stc
arpl
cmp
mov
mov
lds
imul
jge
cmp
xor
adc
jg
mov
fistpl
jnp
nop
xchg
cld
out
aam
push
rcrl
call
or
push
add
cmp
pop
std
and
inc
sti
xlat
loopne
pop
adc
rcrb
pop
mov
sbb
test
nop
xor
lds
mov
lds
lahf
xchg
gs
inc
sarb
std
add
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
fsubrl
js
jle
js
and
out
inc
cmp
imul
mov
aam
jle
cli
enter
orb
lcall
cmp
mov
add
out
imul
sarl
adc
sbbl
push
mov
add
dec
aad
mov
out
pop
fisttpll
ss
lcall
add
daa
test
lret
iret
sbb
xchg
or
xor
imul
pop
enter
out
jno
cmp
lods
out
adc
mov
sub
clc
or
jg
push
out
push
pop
or
push
sub
sbb
mov
push
sub
lock
cmp
test
push
jo
jo
int
dec
mov
test
sbb
aad
inc
sarl
aas
data16
pop
dec
jns
arpl
push
rcll
and
mov
mov
and
jno
push
orb
rolb
mov
mov
inc
mov
aas
cmpsb
dec
decb
lret
xchg
or
push
icebp
pop
dec
addl
cmpsl
pop
addr16
mov
jb
sahf
int3
lea
sub
addl
jnp
jg
int3
mov
dec
add
fsubs
adc
lds
jb
and
sbb
loope
sbb
mov
sbb
bound
jbe
xor
inc
jnp
dec
or
cmc
sahf
or
mov
popa
iret
add
mov
sbb
outsl
cmc
std
jno
push
cmp
sub
ficoms
and
adc
addr16
xor
mov
mov
inc
mov
and
fsubl
mov
xchg
aaa
iret
insb
out
rolb
hlt
xor
aad
gs
dec
nop
cmpsl
mull
sub
mov
ds
ja
dec
pop
sbb
ja
push
pop
adc
imul
pop
lock
clc
mov
pop
cmp
lret
sbb
rol
mov
shrb
loopne
dec
mov
inc
shll
es
notl
pop
jb
stos
adc
cld
out
pop
push
gs
mov
and
inc
push
and
test
negl
stc
sub
xor
or
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
movsb
into
sub
sbb
js
dec
jle
js
cmc
cmp
xor
xchg
ret
xor
sub
cli
mov
jb
mov
mov
push
test
jmp
lcall
jns
ds
cld
inc
mov
sbb
loope
inc
std
pop
cmpsb
test
pop
add
test
in
adc
cs
dec
aas
dec
fsqrt
aaa
cmp
add
jp
js
xchg
cmpsl
int
mov
filds
sbb
fwait
icebp
das
stos
subb
push
xor
adc
add
mov
mov
adc
dec
jno
lret
xchg
cmp
sub
or
fwait
inc
dec
fisubrl
sub
arpl
inc
push
sbb
icebp
push
add
fldt
add
and
pop
nop
pusha
sub
mov
in
aad
scas
inc
lcall
mov
push
adc
lock
test
scas
nop
dec
cmc
and
stos
push
outsb
sbb
jg
push
js
jb
dec
xlat
shrl
dec
shlb
jnp
cmc
ficoms
sub
std
pop
adc
subb
mulb
and
call
mov
subl
mov
lods
adc
add
cmp
inc
imul
mov
inc
ret
sub
sbbb
cmp
ret
notl
es
dec
sub
xchg
or
pop
stos
inc
addr16
pop
popf
or
push
push
push
stc
les
fildll
sbb
push
dec
cmp
loop
pusha
mov
lret
out
xor
outsl
cmp
popf
ja
pop
in
add
repz
jnp
jbe
mov
jge
mov
xchg
leave
push
add
fs
into
cld
mov
pop
sbb
scas
pushf
jg
lea
mov
ja
je
jno
lods
cwtl
inc
inc
in
add
ljmp
pop
pushf
push
and
pop
add
jp
aad
and
jl
inc
mov
adc
arpl
and
jp
loope
cli
add
pop
adcl
jg
mov
xchg
mov
fsubl
fcompl
cmp
les
cltd
inc
jecxz
sbb
xor
sub
vmwrite
fisubrl
dec
adc
dec
and
mov
xor
fistl
dec
ror
pop
sbb
xchg
cmpl
push
mov
pop
xchg
test
test
outsl
clc
stos
je
shlb
rcll
mov
xor
mov
add
add
shlb
fisttpll
mov
mov
inc
mov
int
jo
rcrb
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
hlt
xor
js
dec
jle
js
ja
dec
pop
mov
push
cli
loope
jo
mov
jnp
lods
shlb
dec
inc
jbe
lret
mov
mov
loope
mov
mov
add
pop
mov
mov
and
fstpl
sub
push
lret
out
mov
or
mov
xorb
inc
jge
sbb
xlat
subl
xlat
imul
jge
pop
movsl
xchg
decb
outsl
xchg
repnz
xor
jl
test
push
sbb
add
and
dec
inc
stos
push
cs
popa
jb
xlat
leave
cli
pop
pop
leave
ljmp
loop
sbb
mov
jmp
out
fs
icebp
mov
test
stos
jp
daa
test
movsb
scas
or
xor
xchg
xchg
leave
mov
push
ret
int
mov
in
or
in
mov
cmpl
loopne
dec
pusha
lods
sbb
push
sub
cmpl
add
pop
leave
add
dec
and
loopne
push
inc
aam
jnp
add
outsl
jnp
mov
adc
mov
jnp
cld
enter
mov
ds
imul
fstps
inc
arpl
mov
clc
add
sub
cwtl
dec
ljmp
jae,pt
push
iret
xor
ret
dec
es
fimuls
push
test
mov
gs
pusha
jae
roll
jno
adc
icebp
mov
das
in
mov
lret
or
jns
scas
fdivs
inc
repz
adc
jnp
ret
das
mov
jmp
dec
pop
enter
inc
dec
adc
stos
lods
cmp
push
dec
in
mov
sub
mov
xor
pop
scas
movsb
cmpsb
in
mov
xchg
call
fnstenv
pop
ljmp
jb
cli
adc
sub
stos
daa
dec
popf
repnz
jns
xchg
mov
xchg
cmp
push
call
pop
xchg
jp
out
sbb
xlat
sub
lds
cmp
and
xchg
push
xchg
mulb
fwait
cmp
jg
mov
pop
xchg
mov
and
sbbb
aad
fists
repz
into
addb
dec
mov
sub
jae
sbb
insl
fisttpl
push
fwait
pop
dec
mov
dec
mov
mov
sub
xchg
scas
rcrl
mov
scas
cmp
mov
lret
clc
add
push
dec
adc
xor
loope
add
pop
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
cs
js,pn
dec
jle
js
ficompl
cmp
jno
int3
inc
or
push
jp
rol
dec
push
jae
push
in
jmp
xor
pushf
les
out
sbb
inc
push
xchg
dec
or
and
lds
mov
push
movsb
popa
leave
inc
push
les
sti
aad
add
enter
in
rorb
push
xor
pushf
lods
mov
loop
push
jmp
jae
lods
mov
dec
hlt
fistpll
std
iret
fnstsw
and
pop
cmp
pop
pop
push
mov
jae
and
cmp
mov
adc
fiaddl
xor
ret
out
cmp
xor
bound
bound
or
lods
jbe
cli
imul
loopne
icebp
cmc
outsb
dec
or
sahf
push
imul
lret
add
fildll
pop
in
sub
out
xchg
out
rol
in
pop
pop
mov
fimuls
xor
and
iret
xlat
ret
scas
stos
and
outsl
inc
inc
add
aad
mov
sahf
mov
mov
cmp
add
xchg
insb
daa
xchg
dec
push
test
sub
les
call
cwtl
popf
stos
fists
incl
dec
out
pop
cwtl
jl
gs
loop
push
push
sbb
rclb
and
inc
add
mov
dec
movb
dec
push
mov
push
inc
add
mov
test
ljmp
or
push
add
mov
outsl
jo
js
jns
adc
xor
push
not
inc
mov
inc
shr
pop
push
inc
jnp
and
movsl
in
mov
xchg
aaa
lret
dec
insl
xchg
lret
jae
inc
xchg
xlat
mov
inc
jb
mov
mov
inc
xchg
fsub
ss
mov
push
push
dec
cmp
in
jne
imul
sbb
push
jo
add
mov
push
jae
movsl
jno
flds
sub
outsb
dec
jbe
pushf
jnp
dec
rorl
sbb
push
add
mov
and
fnsave
lock
stos
fwait
cltd
insb
sbb
movl
sbb
add
nop
pop
jg
lods
fwait
cmp
fadd
mov
mov
call
cmp
push
add
xor
adc
sbb
nop
jne
push
arpl
fistps
jg
add
lahf
jl
mov
adc
jl
jnp
das
inc
lahf
and
add
push
jns
js
sbb
xor
mov
icebp
xor
in
loopne
sub
xchg
cld
and
lret
xor
cltd
or
es
sub
mov
fnstenv
imul
mov
pop
and
push
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
pop
out
or
jle
js
es
pop
lret
xchg
lods
int
lods
push
adc
push
lret
movsb
or
adc
in
outsl
mov
xchg
mov
mov
hlt
pop
vpminub
adc
cmc
add
push
je
push
sbb
sahf
mov
sub
nop
insb
or
mov
or
pop
lds
xor
negb
sbb
pop
gs
lds
ljmp
int
bound
inc
into
dec
push
jns
in
cmp
jge
subb
jle
jle
rorb
mov
mov
stc
xor
adc
push
sbb
movsb
in
lcall
dec
nop
mov
xchg
jno
xchg
aas
ljmp
bound
add
inc
lods
push
push
push
dec
mov
mov
sub
mov
movsb
jmp
adc
lods
mov
mov
enter
sub
sbb
rcr
mov
test
rorb
and
roll
lret
aam
outsb
dec
mov
adc
lahf
push
in
nop
cmp
or
aas
push
popf
enter
test
fs
mov
das
jg
mov
cmpsl
popf
mov
scas
loope
adcl
test
mov
stos
mov
roll
mov
loop
adc
sbb
js
inc
lds
mov
rcl
shll
arpl
cwtl
divl
push
mov
xchg
scas
outsb
iret
mov
add
fwait
jmp
rcll
test
loopne
arpl
std
xchg
icebp
jl
sti
gs
xor
pop
mov
nop
xor
jns
pusha
pop
aas
lret
rcrb
dec
push
push
out
pusha
sbb
shl
inc
and
bound
cwtl
test
sub
mov
or
lock
push
xor
insb
dec
mov
sub
roll
mov
jg
incb
out
mov
or
sbb
lret
data16
sbb
cmp
jl
sub
or
orl
mov
pop
sahf
in
idivl
mov
inc
sub
aas
push
jnp
jbe
xor
loopne
xchg
cld
xor
js
lcallw
cmpsl
out
scas
jg
fwait
shl
aam
adc
jo
in
adcb
incl
lds
lock
es
cli
dec
cmpsl
sti
in
pop
test
xchg
mov
mov
icebp
lcall
mov
sub
rcrl
sub
mov
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
loopne
xor
dec
jle
js
test
dec
test
repnz
daa
lcall
mov
push
insb
jge
xchg
je
pop
mov
xchg
pop
adc
stc
ja
dec
or
repz
loop
xchg
sti
mov
in
out
daa
std
push
ficomps
pop
pcmpgtw
add
aas
dec
out
insb
jnp
or
aaa
and
js
popf
and
fistl
xor
mov
xchg
mov
pusha
sub
sub
aaa
cmp
xchg
cmpsb
test
arpl
jo
outsb
rorl
fistps
mov
mov
mov
popa
push
jge
insl
int3
pop
pushw
jbe
mov
jmp
push
cmp
sbb
mov
add
pop
cmpsl
xchg
test
jmp
aaa
pop
mov
ret
jbe
pop
and
frstor
int
push
stc
int
xor
add
xchg
dec
std
movsb
pop
insb
xor
xor
or
and
sub
js
imull
addl
xorb
popa
inc
je
loopne
cld
inc
lods
les
mov
xchg
xchg
iret
jecxz
hlt
fsubl
in
addr16
pop
cld
push
fnsave
inc
into
repz
out
repnz
mov
mov
aas
jge
std
loope
iret
clc
cltd
lds
inc
push
pop
xor
in
addr16
xchg
ror
lret
ficoms
xor
cmp
sub
add
je
mov
sbb
out
iretw
sub
xlat
add
sbb
add
je
dec
push
lods
test
aas
dec
sbb
pushl
testl
in
cld
dec
mov
std
adc
test
cmpsl
add
jl
andb
jns
jle
rol
aad
test
iret
lods
in
xlat
inc
inc
lods
mov
xchg
je
ret
sbb
mov
dec
stos
test
adc
jne
lods
cmp
jnp
push
add
push
sub
jl
rcr
inc
clc
in
mov
and
fstl
push
pop
icebp
movsb
ss
scas
cmp
rcrb
and
test
add
rclb
data16
or
in
cltd
jne
hlt
jl
sub
push
movsb
push
stc
bound
jg
scas
fcoml
cmpsb
and
lds
roll
dec
mov
aas
or
mov
fldt
mov
negl
adc
in
sahf
xchg
cmc
fldcw
pop
jb
loope
pop
loop
lcall
mov
ljmp
cwtl
aas
mov
sub
push
fsts
xchg
sub
xor
inc
clc
jmp
int
rol
ror
aad
inc
jecxz
fdivl
xor
js
xchg
or
in
je
je
sub
mov
scas
insb
mov
push
ds
jns
lock
je
mov
adc
cmp
mov
and
mov
rorb
jl
test
inc
shl
fadd
loop
pop
roll
jb
lcall
pusha
hlt
push
lea
and
lcall
mov
movsl
sub
sarb
loop
int3
pusha
fsubrs
js
mov
pop
call
hlt
test
lods
clc
jge
jle
gs
notl
cli
sub
add
cmpsl
jg
adc
mov
and
in
mov
push
dec
and
jmp
pop
xchg
mov
int
in
je
int
ret
test
ljmp
ja
js
shlb
fsts
sbb
pop
jae
xchg
rol
aaa
sahf
mov
push
cmp
mov
stos
mov
daa
push
fwait
cmc
clc
outsl
or
mov
mov
add
call
in
sti
cmp
test
cmpsl
mov
lret
sbb
nop
sub
mov
add
cmp
mov
dec
jle
inc
mov
mov
jae
inc
adc
icebp
insb
sub
call
pop
cld
mov
inc
mov
mov
in
push
popf
dec
idiv
xchg
push
dec
mov
pusha
popa
adc
js
and
cmpsb
call
inc
jnp
add
sbb
inc
inc
es
cmpl
mov
bound
sub
sbb
mov
imul
stos
adc
jecxz
jecxz
in
mov
xchg
aam
rclb
and
pop
mov
ret
cld
sbb
pop
or
jno
es
lea
inc
inc
jns
cmp
je
push
or
mov
mov
push
xor
pop
fisubrl
cs
and
ret
xchg
mov
and
mov
and
inc
insl
es
push
out
dec
nop
call
lods
mov
cmp
and
and
pop
int
in
ss
ss
test
sbb
out
call
and
lret
leave
ffree
stos
std
aas
xchg
jl
shll
or
xchg
xchg
jae
dec
out
add
and
xor
pop
repz
stc
cmpsb
inc
test
lea
popf
mov
fcomi
jp
test
and
xchg
xor
add
lcall
movsb
pop
lahf
sub
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
inc
xor
push
adc
js
dec
jle
js
sbb
test
inc
pop
ss
xchg
sub
mov
mov
sti
or
cmpsb
ss
decl
sub
pop
push
push
mul
jnp
cmp
jecxz
jle
adc
test
in
jp
subl
push
jl
std
pop
mov
ljmp
fs
ljmp
mov
adcl
fwait
js
mov
andl
or
jbe
push
mov
subl
mov
mov
xchg
and
fwait
add
insl
test
xor
pop
es
cmpsb
mov
test
jns
rsqrtps
push
add
in
add
ret
push
add
das
movsl
sub
sbb
ss
add
aam
int
arpl
sub
adc
sbb
jmp
sub
nop
out
inc
add
mov
loope
popf
es
aaa
sbb
out
movsb
jmp
shlb
mov
or
scas
lds
jge
pop
lds
and
and
xchg
rcrl
clc
jl
dec
pop
imul
jae
pop
adc
inc
std
mov
lahf
cmpsb
pop
push
inc
push
and
and
mov
pushf
sub
sub
ja
dec
xor
repnz
and
mov
cs
mul
mov
mov
or
iret
add
push
xchg
xchg
push
cmpsl
mov
xchg
mov
mov
sub
xchg
mov
jle
adc
shr
cmc
out
hlt
std
add
rcrl
mov
pop
dec
push
mov
fcmovu
xchg
or
pop
mov
push
scas
lock
mov
addr16
add
iret
jp
fists
jecxz
lahf
mov
int3
scas
adc
fdivs
mov
test
jge
repnz
std
daa
test
sub
fimull
sbb
pop
imul
inc
xlat
jp
mov
xchg
sub
xchg
jae
mov
pop
or
inc
jle
rorl
test
pop
jae
enter
push
cs
lds
adc
push
jnp
popa
enter
push
xor
xchg
xor
xchg
jp
in
sbbb
mov
add
jp
xchg
cmp
jb
cmp
xchg
pop
scas
iret
lahf
adc
dec
xor
pusha
test
jnp
xlat
outsb
xlat
mov
cmp
or
dec
jmp
sti
inc
push
xorl
and
inc
test
mov
jne
mov
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
call
js
dec
jle
js
dec
out
mov
xchg
sub
lds
movsl
mulb
pushw
fildl
jno
lds
push
lods
cmp
test
mov
dec
lcall
sub
shr
pushf
sahf
jns
ret
sub
scas
bound
sub
sahf
lods
andb
push
push
or
in
add
pop
ljmp
movsb
mov
mov
clc
inc
lds
jns
push
mov
repz
aam
mov
inc
jbe
mov
imul
dec
pop
test
or
pushf
push
insb
jns
daa
cli
inc
adc
mov
xor
int3
inc
xor
fidivrl
pop
mov
jae
xlat
ja
and
xchg
add
in
and
jno
add
adc
pushf
stos
out
jo
mov
adc
cmp
dec
mov
popa
test
or
xor
xchg
xchg
aad
pop
cmpsl
xchg
mov
test
ds
push
stc
dec
out
ss
jbe
out
fidivrs
adc
popf
aas
pop
dec
dec
mov
ret
cld
and
or
cwtl
xor
scas
add
sub
in
imul
aas
add
or
out
test
bnd
xor
popf
mov
jecxz
push
fs
lcall
sub
sgdtl
enter
test
ljmp
orb
out
inc
sbb
sub
cmc
jmp
jae
adc
jne
jnp
and
icebp
xchg
int3
test
xchg
arpl
out
mov
mov
movsl
sub
mov
andb
ljmp
ret
pop
jmp
jmp
sbb
cmp
jmp
jle
imul
jle
add
mov
push
sbb
cmpb
call
pop
popf
cmc
scas
xor
inc
push
and
imul
movsl
jb
adc
or
xchg
cmp
xchg
push
lret
jmp
inc
fisubrl
jmp
ret
loope
xor
addr16
push
scas
mov
imul
dec
inc
data16
xchg
mov
pop
aam
cwtl
xchg
mov
repnz
jl
imul
push
mov
arpl
pusha
fnstsw
xchg
lea
inc
sbb
mov
push
sbb
aad
jnp
sahf
adc
cmp
out
pop
iret
add
sub
mov
lret
xchg
cmc
cld
out
pop
or
pop
scas
test
mov
push
adc
pop
nop
dec
xor
jmp
rol
ror
leave
rcr
aaa
mov
or
mov
js
dec
jle
js
xchg
cmpsb
test
cwtl
pop
xor
flds
mov
sbb
in
inc
rolb
push
pushf
sub
bound
adc
jno
clc
dec
sbb
cmpsl
sahf
and
or
cmp
cmpsb
dec
adc
shrl
out
pop
scas
mov
push
scas
data16
xor
pop
push
in
jmp
mov
jo
xor
fiadds
pop
cltd
stos
in
fisubrs
jg
xchg
loope
subb
addr16
sub
mov
pushf
aad
rorb
pop
mov
or
hlt
lret
mov
lret
push
insb
in
jmp
fistpl
ret
sbb
mov
lds
or
mov
cmp
test
xor
jmp
jmp
jne
cld
fiadds
addb
idiv
jae
lods
decl
sbb
jg,pt
loop
or
ja
dec
xor
rcrl
repz
inc
sub
adc
mov
mov
xor
inc
arpl
das
repnz
daa
popa
jge
jle
sbb
je
arpl
inc
ret
sub
into
xchg
pop
frstor
mov
pop
cmc
adc
mov
int
arpl
inc
xchg
aaa
jae
ret
loop
jnp
adc
cs
adc
dec
jne
jg
call
push
inc
pop
lea
jecxz
xchg
aam
aas
faddp
pop
movsb
shrl
repz
inc
jp
in
les
dec
mov
push
jle
xchg
test
push
add
cwtl
push
outsl
loopne
pop
sbb
or
inc
repz
cmp
mov
lods
sbb
xchg
aas
daa
jle
push
fistps
data16
outsb
dec
or
push
lcall
ficomps
push
mov
aam
out
cltd
arpl
and
mov
loop
fcmovu
cmpsl
or
insl
jmp
popa
push
pop
ljmp
xchg
ret
mov
mov
fldt
pop
out
test
ret
mov
leave
lret
pop
pop
xchg
or
orl
or
jecxz
mov
add
dec
cmp
xchg
cli
jmp
push
dec
scas
arpl
xor
adc
in
fisubrs
jmp
mov
pop
or
mov
insl
jae
notl
lcall
mov
or
mov
xor
shlb
mov
orl
ds
and
mov
sub
addr16
pop
or
leave
push
mov
cmpsb
jns
in
xor
jmp
xor
mov
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
sbb
push
ret
dec
jle
js
fnstcw
push
jp
mov
mov
andb
pop
daa
sbb
add
mov
mov
or
clc
mov
stc
and
rolb
jge
inc
hlt
add
push
mov
clc
pushf
mov
cmpsb
lcall
lahf
mov
pop
mov
lds
lahf
push
jb
xor
cmp
inc
fcoml
mov
lock
and
sub
int3
adc
test
cs
xor
jmp
daa
das
lcall
xor
int3
popf
lret
lock
adc
clc
bound
aam
pop
xlat
push
imul
xchg
xor
jno
dec
call
add
mov
pushf
idivl
xchg
fs
je
adc
stos
mov
sbb
in
cmpsb
xor
push
movsl
in
das
add
in
mov
xchg
cmp
jmp
dec
lret
clc
in
call
outsl
cmp
sbb
test
cmc
call
mov
cwtl
mov
xor
inc
into
gs
test
js
lods
pushf
rcl
xchg
shll
repz
cmp
fldcw
add
mov
jno
sub
dec
mov
cmp
fs
pop
lods
imul
sub
lods
xchg
loope
lcall
call
movsb
push
lds
inc
jmp
nop
mov
js
lret
testl
mov
mov
stos
pop
pop
dec
sub
cmp
jbe
or
mov
push
mov
xchg
mov
lahf
sub
dec
adc
cmpsl
jecxz
mov
rclb
pop
and
dec
pop
hlt
stc
test
or
pop
mov
mov
mov
lfs
loop
xor
pop
inc
call
clc
cmp
xchg
sub
addr16
loop
mull
loop
loop
mov
mov
idiv
mov
push
into
fdivrp
or
pusha
aaa
adc
shlb
lods
movsl
sub
roll
cmpsl
jmp
xor
sub
adc
shrb
jbe
clc
test
add
xchg
cmpsl
and
je
addr16
sub
shrb
dec
pop
add
fwait
jle
out
out
push
stos
cmp
fnstenv
xchg
addb
aas
mov
lret
emms
imul
jbe
jo
sti
pop
icebp
push
sbb
test
rclb
sbb
sti
xchg
leave
int3
enter
mov
push
and
into
xchg
jp
and
sub
imul
mov
icebp
mov
jmp
aas
ret
rol
sbbl
loop
js
dec
jle
js
mov
fisubl
mov
sbb
mov
shlb
outsb
mov
pop
data16
sbb
cmp
je
push
imul
arpl
add
jp
pop
dec
jb
push
data16
or
sub
mov
push
jge
mov
decb
lods
aad
sbb
adc
sti
dec
sub
lds
jmp
scas
pop
adc
inc
xor
in
push
shll
add
rorl
lret
in
xchg
rorl
xor
push
push
pusha
pop
add
sbb
mov
mov
inc
mov
add
dec
je
dec
nop
or
lret
inc
dec
pop
imul
xchg
popf
sbb
lahf
sub
pop
mov
cltd
sbb
sub
or
sbb
lea
sahf
hlt
mov
sub
out
mov
xor
lret
sbb
sbb
aad
lods
int
loope
mov
sti
in
push
pop
jle
xchg
add
jge
loop
stos
btsl
loop
mov
jecxz
dec
inc
loopne
mov
xchg
lods
xchg
xor
aad
mov
and
hlt
dec
movsb
sbb
add
cmp
mov
clc
arpl
cmp
test
rolb
scas
dec
xchg
mov
mov
and
push
scas
rorb
std
fdivr
xor
xor
xor
idiv
sar
pop
mov
push
sbb
pop
lods
ret
into
mov
jo
andb
icebp
jne
inc
jnp
sbb
sub
jae
adc
and
xchg
adc
mov
mov
mov
xchg
in
fbstp
out
and
jno
dec
sub
in
push
test
fildl
andb
idivl
xchg
popa
in
inc
sub
repz
xchg
insl
test
adc
mov
das
dec
insb
and
test
hlt
pcmpgtw
out
out
jno
pop
lds
fcmovbe
adc
add
mov
fisttpl
cmp
adc
sbb
into
out
inc
lock
adc
sub
jo
push
xor
jno
mov
daa
call
and
mov
or
dec
inc
mov
popa
push
aaa
movsl
lds
frstor
dec
jmp
pop
inc
jne
arpl
out
inc
lods
mov
push
sub
cmp
sub
test
mov
inc
scas
xchg
pop
sbb
lret
jb
push
mov
mov
cmp
in
dec
dec
mov
enter
sbb
jmp
ds
cmp
mov
dec
test
xor
js
dec
jle
js
sub
push
daa
imul
fsubp
mov
push
pushl
inc
dec
add
mov
or
lahf
xchg
cmp
xchg
cltd
pop
xchg
out
aas
ja
roll
mov
adc
sbb
call
lret
rcr
ljmp
pop
or
pop
jne
mov
inc
and
jp
push
sahf
imul
out
test
scas
ret
lock
jg
dec
and
sub
arpl
adc
mov
mov
mov
sub
xlat
dec
or
mov
icebp
push
mov
bound
std
daa
dec
adc
mov
mov
inc
jnp
sbb
push
sub
movlps
pop
lret
fdivrl
inc
rcl
cmp
lahf
mov
jb
jg
add
jnp
std
mov
dec
sub
or
es
inc
stos
ja
fld
cmpsb
orl
push
dec
push
sub
jp
push
dec
jle
inc
ss
rolb
arpl
xchg
mov
out
mov
inc
in
pop
jle
xchg
pop
jb
subb
mov
cmp
cld
loope
jge
jno
mov
popf
dec
mov
cmp
mov
daa
push
push
push
gs
pop
and
or
insb
mov
outsb
sbb
dec
call
cmp
out
and
xchg
sbb
gs
pop
add
int3
aad
add
es
dec
jle
push
fwait
mov
or
in
mov
xchg
push
enter
cmpsl
cltd
insl
sbb
xlat
ds
test
mov
jbe,pt
push
sbb
inc
xlat
psllq
cli
scas
push
push
push
mov
sahf
jl
test
loopne
xor
lds
jmp
cmc
rep
int
out
fadds
sbb
inc
mov
jbe
cmp
fwait
add
andl
not
out
jbe
mov
popl
mov
rcrl
loop
mov
dec
xchg
xlat
daa
cmp
mov
push
add
mov
mov
pop
adc
jge
sti
ret
scas
out
jg
stos
test
lret
sbb
imul
jno
das
mov
mov
cmp
or
mov
xor
xor
dec
add
mov
lods
or
jne
sbb
cs
pop
jmp
pop
dec
stc
xchg
sub
xor
notb
lcall
or
push
jge
inc
aas
jle
fistpll
adc
jbe
ljmp
insl
stos
cld
js
lret
cmp
shr
outsl
pushf
icebp
jl
es
test
sbb
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
xchg
js
fs
js
and
or
outsl
in
jbe
sbb
hlt
jo
sub
pop
ljmp
xchg
icebp
push
push
pop
jge
xlat
jecxz
push
es
mov
fwait
cmp
daa
jg
sub
je
pop
in
mov
popf
test
stos
imul
push
call
cmp
xchg
test
mov
dec
mov
or
lods
add
pusha
adc
andb
add
push
pop
dec
adc
test
int3
hlt
push
jg
cmp
push
into
nop
fbstp
xchg
gs
jge
mov
repnz
and
lds
insb
imul
scas
cmc
insl
push
push
loopne
std
pop
test
xor
xchg
xor
sarl
push
fildl
lcall
jg
dec
fstpl
dec
add
loop
cld
or
mov
out
idivl
scas
and
aaa
insl
jmp
in
push
jecxz
jge
push
xchg
cs
sarl
aad
cmp
pushf
push
icebp
ja
repz
sub
icebp
mov
cmpsb
aas
mov
ss
insb
jl
xchg
icebp
jo
aas
pop
js
mov
jne
sbb
mov
daa
xlat
int
les
pop
xchg
push
test
add
call
shrd
loopne
sbb
repnz
cmpl
or
fs
jge
scas
in
jge
inc
es
xor
push
and
test
loope
lods
imul
out
xor
sub
int
int3
jge
cltd
pop
cltd
inc
data16
xchg
rolb
sub
pop
stos
addr16
cld
mov
addr16
minps
adc
or
jne
xchg
mov
test
jge
push
clc
js
pop
push
decl
pop
sbb
shll
push
ljmp
xor
or
es
movsl
mov
xchg
out
loop
mov
test
mov
cli
xchg
nop
js
cli
out
adc
jle
pcmpeqb
mov
gs
jae
lret
ret
push
jmp
stc
and
cs
bound
inc
mov
test
mov
lret
xchg
cmpb
pop
mov
out
enter
shll
adc
inc
shl
enter
push
ds
mov
test
or
mov
faddl
int3
ret
adc
scas
jle
dec
xchg
js
mov
shlb
jge
dec
test
push
je
sbb
mov
movsb
scas
out
cmpsb
insb
mov
sub
mov
lock
jbe
lock
xor
mov
lret
out
mov
mov
add
add
dec
add
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
rcrb
iret
js
fs
js
or
clc
mov
sub
adc
shlb
mov
cmpsl
xor
push
adc
jno
scas
insl
mov
pop
add
addb
sbb
ds
fs
cld
pop
sarl
mov
mov
sbb
scas
xchg
mov
loope
movsb
cltd
mov
push
in
aam
jb
std
adc
xchg
clc
inc
mov
mov
jge
and
mov
ss
inc
push
and
adc
xchg
lock
jl
xlat
inc
pusha
cld
push
lahf
add
inc
jge
push
rorl
cmp
dec
mov
test
test
mov
fsubr
in
out
sub
fadds
std
adc
leave
xor
jg
es
xlat
push
roll
mov
stos
mov
mov
call
je
into
mov
out
dec
mov
inc
insl
mov
ficoms
add
mov
insl
pop
or
lods
jg
cmpb
in
es
icebp
lods
xchg
ret
dec
mov
ljmp
jle
mov
loop,pn
fs
sbb
mov
outsb
aas
and
out
ret
dec
mov
mov
rcrb
xor
inc
inc
mov
jl,pn
sbb
sub
and
sbb
adc
mov
mov
adc
xchg
ret
xor
push
dec
and
xchg
cmp
std
sbb
xor
or
xchg
mov
jbe
xchg
roll
out
mov
pop
aaa
out
mov
mov
cld
dec
mov
or
repnz
mov
loop
repz
cwtl
ljmp
add
shlb
push
jo
loopne
outsb
adc
leave
mov
inc
add
cmp
mov
xor
loope
scas
outsb
lods
nop
sbb
sbb
aaa
or
shlb
pop
sub
bound
xchg
jo
dec
icebp
push
insb
or
mov
xchg
incb
repnz
push
mov
mov
inc
loop
lods
sbb
jmp
dec
adc
shlb
rorl
xor
testl
and
lods
out
cmp
into
or
pop
roll
cmpsb
mov
push
loop
mov
loopne
notl
inc
insl
fimuls
sti
pop
adc
mov
or
nop
jge
aad
or
push
and
pop
add
scas
mov
lcall
mov
jecxz
mov
or
or
or
push
out
cltd
stos
and
and
inc
das
rcrl
jmp
xchg
mov
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
andb
pop
int3
js
fs
js
jns
fdivrs
test
mov
lret
lock
mov
jg
into
imul
mov
int3
jae
out
push
cmp
loope
stos
shr
dec
mov
adc
pop
sbb
sbb
pop
pop
inc
mov
cmp
ljmp
repz
push
clc
push
int
sarb
lods
adc
popa
out
in
out
andl
xchg
sbb
inc
pop
jno
cld
jp
xchg
loop
jle
and
mov
sbb
cmc
stos
test
pusha
mov
sbb
sub
imull
and
mov
add
insb
mov
mov
push
add
dec
mov
lahf
adc
test
adc
cmp
inc
pop
outsb
inc
lahf
push
xor
std
dec
xchg
or
fdivs
pop
lret
cmc
xorl
out
add
int3
nop
int
pop
sti
pop
scas
inc
inc
aam
rorb
clc
xor
xchg
push
fwait
scas
mov
pop
mov
sub
scas
adc
add
add
dec
xorb
jl
pop
stc
les
mov
subl
ret
and
clc
mov
xchg
repz
stc
or
mov
test
inc
pop
xchg
test
sbb
add
cmp
call
push
mov
mov
das
inc
and
idivl
insl
fcomps
adc
mov
shrb
inc
lock
jno
and
fldenv
in
inc
jno
rcr
pusha
cltd
aad
shlb
and
jno
cmp
loopne
scas
decb
jns
pop
lahf
jmp
xchg
outsl
mov
inc
dec
cmp
pusha
and
loopne
gs
lds
in
xor
pop
cmc
xor
mov
lea
adc
outsl
xor
pop
inc
repz
sub
adc
or
lahf
sub
push
dec
mov
orb
dec
idivl
fsubs
loop
int
and
jbe
imulb
imul
push
mov
xchg
pop
shll
scas
rcl
jmp
xor
xlat
cmp
xchg
addr16
pop
adc
sbb
mov
call
mov
jmp
xlat
jns
bnd
mov
jno
and
push
dec
gs
adc
jo
call
int
adc
call
mov
mov
andb
imul
sbb
push
add
mov
sub
or
mov
push
jg
fsubr
into
jecxz
fstpt
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
aam
xor
sbb
xchg
imul
or
mov
aam
repz
inc
stos
pop
jae
xor
call
jle
push
std
jae
out
sub
push
jbe
push
mov
test
insl
hlt
push
pop
add
je
test
adc
dec
sub
inc
pop
pop
popf
xchg
push
xor
jns
lea
add
adc
div
xchg
iret
add
dec
inc
or
mov
sarl
lods
xor
lcall
imul
into
dec
push
mov
jb,pn
mulb
gs
xor
psraw
xcrypt-ctr
cmpsl
mov
aas
mov
fstl
mov
fsubp
pop
dec
mov
fwait
mov
mov
adcb
movsl
mov
out
inc
cli
mov
jmp
mov
loopne
jo
mov
in
adc
cld
loop
push
mov
loopne
mov
ret
cs
inc
imull
daa
add
xchg
aam
rcrb
nop
adc
in
pop
or
pop
stos
or
loope
pop
movsb
cmp
fadd
lods
xchg
xorb
xchg
push
add
sub
cmpsb
lds
fiadds
pop
mov
mov
in
sub
mov
sub
cld
mov
in
sti
pop
or
mulb
push
xchg
js
push
fwait
mov
or
or
pop
add
ljmp
cmp
lret
add
in
adc
mov
pop
addr16
or
fldenv
sbb
fs
jle
lret
aad
adc
dec
in
inc
cltd
dec
inc
jns
jae
jmp
mov
push
pop
push
cmpsl
cmpsb
dec
pushf
push
pop
add
dec
sti
test
insl
ljmp
xor
mov
jecxz
popf
xor
outsl
sub
aaa
out
sub
les
loop
lods
dec
pusha
fdivrp
jg
or
int
in
cmpsb
test
ja
mov
lahf
sub
es
out
lea
hlt
in
jmp
filds
out
and
xor
or
leave
imul
sbb
lret
cmpsb
cmp
imul
out
lcall
loopne
lods
xlat
lret
mov
cmpsl
into
and
pop
fwait
mov
movsb
cmpsl
arpl
xlat
xor
add
iret
mov
hlt
sub
push
dec
push
jae
insl
fwait
sub
out
es
mov
fsubrs
and
mov
xchg
sub
push
xchg
adc
cli
rcr
lahf
lds
das
or
sahf
cmp
jno
or
push
jmp
mov
mov
imul
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
movsb
jp
mov
js
fs
js
pusha
push
dec
mov
imull
mov
mov
jg
pusha
shlb
rorl
jbe
subb
mov
and
jg
inc
mov
mov
into
into
scas
aam
dec
lret
leave
dec
mov
scas
pop
inc
cmp
jae
hlt
bound
mov
fnstenv
adc
pop
jo
ja
adc
fbld
pop
scas
inc
xchg
add
pop
mov
inc
nop
in
ds
lret
popa
xor
mov
sbb
out
push
test
sub
mov
inc
add
sub
jg
in
iret
lahf
out
sub
int
movsb
pop
push
not
fldlg2
mov
push
mov
mov
mov
into
sub
and
test
pusha
sub
movsl
cmp
es
leave
fildl
sahf
out
lcall
fmuls
push
aas
jns
mov
mull
test
push
outsl
sub
push
xchg
and
clc
in
xor
out
pop
cwtl
push
cwtl
in
jne
xor
xor
mov
mov
adc
outsb
pop
xchg
jl
aas
movsl
shlb
mov
loopne
fdivl
push
xchg
je
push
mov
cmp
sub
lea
in
rorl
inc
loopne
test
cmpb
fstps
dec
mov
xchg
scas
lods
in
sahf
shll
inc
and
rcll
pop
push
movsl
xchg
sub
popa
push
ja
pop
inc
push
int
push
ret
gs
add
fdiv
test
mov
pusha
lods
shlb
aaa
jae
pcmpgtw
mov
cmp
lods
iret
ljmp
insl
and
sbb
mov
jb
test
in
jmp
outsl
xlat
in
sbb
insl
or
mov
fcmovnb
scas
sub
jle
inc
hlt
adc
sbb
mov
in
add
pop
adc
adc
pop
addl
inc
fcmove
jp
sbb
xor
repnz
outsl
shl
push
insl
movsb
xchg
lahf
aam
or
add
into
jne
notl
xor
js
sbb
xchg
jne
or
out
ret
and
mov
inc
sarb
mov
in
cli
shll
and
sarl
daa
mov
ss
cwtl
xchg
sbb
xchg
sbbl
fsubs
add
nop
sbb
sub
xchg
jecxz
jp
jnp
dec
lds
sbb
in
mov
sbb
mov
pop
aaa
dec
into
mov
lea
shlb
xchg
lret
sub
jl
out
repz
rolb
lea
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
div
aaa
inc
pushf
fstpt
fs
js
jl
jb
neg
in
xchg
pop
enter
imul
and
xchg
mov
mov
inc
pop
push
jmp
sbb
xchg
outsl
pop
xchg
adc
mov
xor
call
ja
out
loop
mov
xor
mov
push
inc
add
inc
jp
ss
cltd
dec
pop
cmp
sub
and
xlat
pop
cmpsb
sti
mov
xchg
dec
push
and
cs
in
and
mov
popf
or
ror
xlat
iret
cwtl
sbb
sub
shlb
sub
xchg
cmp
aas
pop
lock
pusha
movsl
sub
decb
inc
or
jg
iret
movsb
sbb
xchg
pop
mov
cmp
addl
jg
jmp
lea
xor
pop
insl
arpl
inc
xor
jmp
repz
bound
mov
adc
or
adc
shl
in
test
test
xchg
mov
xchg
js
adc
inc
cmpsb
repz
rol
sarl
bound
scas
lock
jmp
mov
fwait
push
iret
rorl
and
jg
dec
xlat
mov
pop
mov
nop
and
and
sbb
aam
insl
int
icebp
dec
push
pop
sub
and
rclb
pop
pop
cmpsb
xor
test
inc
dec
pop
iret
inc
adc
rcr
xchg
jle
adc
das
fsub
fisubrs
lods
xchg
xchg
es
aam
push
mov
sbb
xchg
and
pop
sbb
ljmp
pushf
imul
roll
and
stc
hlt
lcall
lock
adc
les
mov
movl
data16
mov
cmp
jns
mov
loopne
daa
mov
rorb
fwait
xchg
daa
shll
gs
inc
outsl
ss
mov
mov
loopne
fsubl
xchg
lret
adc
lea
es
or
jnp
cmp
loopne
add
lods
sub
add
and
rolb
mov
jp
or
jnp
and
int3
bound
cmpsb
enter
sub
inc
lret
in
je
sbb
sub
pop
ret
cmp
pushf
cwtl
insl
idivl
push
std
popa
fisttps
and
pop
stos
sbb
sarl
mov
add
lock
pop
gs
pop
push
stos
pop
and
push
imul
and
mov
loope
int3
adc
xchg
fucomip
sub
mov
pop
daa
setns
cli
push
loopne
fisttpl
push
mov
cmpsb
pop
out
sbb
icebp
mov
insl
dec
xchg
cmpsl
dec
fimull
sub
and
mov
lcall
mov
mov
jmp
lret
ret
fld
add
fdivs
adc
js
jle
js
push
cmp
cltd
fidivs
adc
outsl
xchg
xchg
in
cmp
repz
idivl
ret
pushf
add
jbe
shrl
sub
and
mov
xor
dec
imul
dec
push
outsb
mov
lods
jb
icebp
cmovo
mov
out
jle
push
and
xor
stos
cmp
mov
movsl
jecxz
pop
aad
in
shr
es
ret
out
outsl
repz
and
pop
cwtl
inc
loopne
xlat
xchg
inc
xor
imul
sub
fcmove
cmp
adcb
inc
mull
sub
mov
mov
out
push
mov
fcoml
int
cld
pop
xor
and
out
insb
lods
fsubrl
push
xchg
add
ss
push
movsl
pushf
mov
pop
imul
inc
pop
inc
loopne
or
dec
les
mov
fs
lret
mov
jns
cmp
dec
lcall
xor
inc
or
jmp
int
adc
jle
pop
push
orl
mov
outsl
movsb
fsubl
rorb
inc
int3
pop
push
out
inc
nop
mov
sub
jmp
add
fsubl
in
icebp
lods
and
cmp
subl
cs
stos
jb
pop
and
mov
jb
xor
test
aad
insb
ds
lods
and
jmp
pop
or
scas
push
and
dec
xchg
mov
xchg
xor
inc
or
in
or
jb
cpuid
test
ja
cmpsb
test
jae
das
loopne
in
dec
clc
xchg
nop
jne
cmp
jno
roll
mov
aas
dec
insl
dec
mov
std
insb
aaa
xor
jb
xor
hlt
pop
add
mov
cld
jo
mov
sbb
xchg
nop
push
fs
scas
xchg
sbb
daa
ror
mov
inc
mov
dec
dec
shll
outsl
add
mov
xor
addb
fidivrs
or
add
pop
cmp
push
into
call
pushf
push
ja
and
jns
shlb
add
fdivrs
or
pop
sub
js
xor
fnsave
cltd
lock
jg
sbb
pop
rolb
add
in
aaa
aaa
stc
pusha
out
dec
fnstcw
inc
or
pop
xor
pop
fcompl
pop
out
push
shll
fucomp
dec
xchg
fistl
jnp
lods
or
sti
pushl
sbb
mov
movsb
test
movsb
cmp
outsb
sub
jmp
mov
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
pop
hlt
fnstsw
fs
js
aad
movsl
adc
fs
push
adc
inc
and
mov
jl
sub
lcall
divl
shll
shl
cmc
lds
mov
out
xor
cmc
sbb
mov
incb
mov
lret
xchg
xchg
dec
xchg
sbbb
push
rep
pop
push
lret
and
xchg
and
insb
clc
fs
mov
and
pop
lret
ret
mov
cwtl
mov
ret
mov
mov
xor
pop
test
fsubr
inc
ds
lea
lods
jae
jo
cmovb
rcrl
mov
fsubl
out
aas
iret
fwait
xchg
adc
mov
std
mov
fldt
pop
adc
mov
nop
add
xorl
mov
leave
pop
adc
mov
fisubs
shll
and
stos
add
jmp
pop
jge
int3
mov
shlb
xchg
jmp
shll
adc
out
xor
outsl
dec
sbb
fdivr
mov
pop
mov
pop
js
dec
push
add
jmp
mov
out
pop
push
data16
cwtl
in
and
mov
cwtl
xor
mov
lea
jg
pop
push
mov
push
add
sub
mov
inc
mov
iret
stos
mov
negl
and
cmp
jecxz
mov
jecxz
ud0
aas
dec
push
lds
je
cmp
ror
out
lods
push
mov
xor
test
fistpl
inc
push
orl
xchg
in
aam
xchg
sub
std
cltd
xchg
cmp
loopne
jbe
scas
inc
test
pop
inc
sbb
inc
pop
add
xlat
cmpsl
sbb
sub
xlat
inc
dec
insb
dec
mov
leave
fwait
xchg
pushl
popa
and
stc
std
stos
push
sub
mov
ss
ss
leave
fstpl
test
cmp
repnz
sub
lret
in
add
jnp
fisttps
mov
sub
clc
and
gs
or
pop
test
push
leave
cmp
mov
mov
seta
sub
in
into
jmp
dec
mov
mov
ds
or
xchg
jb
fisttpll
inc
adc
xorl
mov
jp
ds
ret
cmp
cmp
sub
xchg
imul
icebp
jmp
shll
data16
test
iret
aas
imul
addr16
mov
pushf
push
lret
sbb
stos
lds
jo
mov
push
sbb
jb
jns
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
out
inc
sub
xor
lds
sub
push
inc
and
in
adc
sub
cmp
xchg
lcall
mov
inc
insl
shld
inc
jno
mov
stos
add
and
pop
pop
mov
mov
push
pop
pushl
jp
dec
or
lret
daa
aaa
test
addl
mov
subl
jmp
adc
add
in
icebp
push
xchg
pop
pop
test
loope
insl
outsl
push
mov
pushf
pop
mov
lds
inc
fsubrl
push
test
fwait
das
lcall
jle
mov
mov
shll
and
dec
cwtl
sub
pop
xchg
fistl
dec
insl
sarb
jns
pushf
mov
xlat
jns
ret
jae
dec
jb
xor
push
into
insb
dec
loop
cmp
and
sub
fiaddl
flds
xor
jge
addr16
into
jae
cwtl
fs
push
cmpsl
in
and
leave
sbbl
repz
addr16
or
cmp
testl
and
push
pusha
nop
into
jo
cmp
mov
loope
sar
or
stos
stc
xorl
jge
or
xor
icebp
lret
adc
xor
loopne
rol
daa
mov
rolb
loope
or
gs
inc
dec
rep
xchg
loope
iret
inc
and
aas
ljmp
ret
pop
pusha
lods
cmp
push
pop
xor
aas
mov
xor
pop
mov
leave
stc
sbb
pop
pop
pop
int
xchg
or
inc
sub
xchg
popa
adc
sub
push
adc
xlat
nop
inc
xchg
aaa
pusha
sub
cmp
mov
push
adc
mov
and
mov
adc
sub
inc
mov
lea
mov
andb
mov
test
push
or
push
pop
mov
xchg
scas
pusha
xchg
hlt
mov
mov
cld
popl
cld
in
imull
nop
dec
sub
inc
movsl
outsl
scas
sub
test
mov
icebp
jb
lahf
mov
add
movsl
xor
pop
inc
test
iret
xlat
mov
push
int3
pop
push
lds
or
mov
push
or
jo
mov
int
dec
and
test
shl
inc
lds
cmp
cmp
fs
lock
pushw
pop
mov
adcl
int
pop
jnp
bound
add
xor
cmpb
fwait
gs
pop
je
mov
cli
vmread
cmp
lret
push
ret
repz
call
inc
in
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
mov
inc
cmp
out
js
jle
js
fdecstp
push
sahf
add
mov
fisubs
pop
mov
cmp
mov
bound
cmp
rcll
push
sbb
cmp
js
neg
mull
movsl
lock
cld
xor
cmp
cltd
mov
push
mov
push
jno
dec
std
bound
xchg
lcall
mov
jns
fnstsw
cmp
and
inc
or
lret
outsl
mov
leave
es
pop
push
sbb
push
dec
push
mov
push
outsb
xor
mov
jb
mov
push
iret
orl
inc
jbe
sar
push
mov
add
femms
pushf
cwtl
rorl
leave
cli
in
or
jmp
jle
sbb
mov
aas
mov
and
adc
xor
enter
call
aam
jns
xor
dec
cmp
in
es
mov
xlat
sbb
fcoms
jge
or
int
adc
mov
jge
inc
mov
or
fildll
dec
pop
fwait
cmp
inc
test
jae
cmpl
repz
push
inc
out
and
mov
call
dec
push
and
pusha
iret
cmpsb
rcrb
cmp
shl
xchg
fistps
xchg
iret
or
mov
mov
and
lods
imul
adcb
movsl
xchg
mov
pushf
pop
adc
mov
loop
inc
int
jp
dec
mov
pop
movsl
sbb
pop
sbb
into
push
out
and
add
push
inc
jg
lds
and
xor
nop
mov
cmc
aad
xor
mov
aam
ss
pop
add
mov
push
addr16
mov
popf
xchg
push
rcrl
rcrl
jbe
xor
sub
adc
sbb
data16
add
xchg
add
xchg
pusha
inc
and
out
xor
nop
dec
popa
xchg
push
sbb
add
adc
movl
in
movsb
cld
stos
cmp
jno
push
mov
push
fsubl
repnz
arpl
imul
clc
rcrb
pop
imul
ljmp
xor
faddl
imull
test
inc
mov
and
dec
sub
leave
push
push
mov
mov
sub
shrl
ficomps
pop
divl
lea
sbb
xorb
push
enter
in
aaa
out
stos
stos
xor
loopne
sub
out
loope
dec
adc
inc
in
add
loope
ret
jns
stos
xor
pop
mov
mov
pop
leave
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
out
add
in
js
jle
js
iret
pop
pusha
out
scas
xchg
push
jle
ljmp
loope
xchg
ss
mov
aas
fisubs
cmpsb
test
icebp
rorl
stos
sbb
movsl
shll
sub
cwtl
cmp
push
repz
sysexit
lods
aad
mov
js
dec
in
arpl
pop
adc
pop
and
jb
mov
ret
rorl
loope
test
imul
mov
and
sub
loope
pop
pop
imul
dec
jmp
add
mov
shlb
add
mov
xchg
cmp
mov
sbb
or
jne
in
jnp
sub
mov
mov
push
mov
cmp
xor
mov
inc
cmp
lds
cmp
in
add
icebp
xchg
or
addr16
sub
stos
push
js
push
fsubrl
xor
mov
daa
dec
dec
out
xor
call
sbb
test
popf
add
ffreep
pushf
sub
inc
loope
push
daa
cmp
jne
push
xchg
cltd
dec
xchg
test
jns
jl
push
mov
and
stos
aad
xor
dec
mov
repz
dec
and
inc
jle
movsl
lahf
mov
or
nop
repnz
pushf
andl
mov
pop
sbb
xchg
rcl
jge
cmp
fstpl
aam
cmp
hlt
rorl
xor
xchg
sub
cmp
sub
add
scas
or
mov
mov
pop
xor
repz
out
cwtl
mov
psrad
push
push
pop
cmp
add
leave
dec
es
dec
xchg
shlb
negb
dec
in
imul
pushf
repnz
ljmp
stos
fmuls
lock
add
sub
jmp
and
iret
dec
jbe
insb
adc
ret
fwait
inc
sub
pop
xchg
or
jno
push
int
imul
notl
xor
add
or
movl
out
jge
inc
inc
out
fisttps
fcomps
lret
dec
mulb
xchg
or
and
fnstenv
cs
xchg
jle
outsl
adc
insl
insb
sbb
dec
in
cmp
pop
pusha
lret
unpcklps
lods
es
cmp
jge
add
loopne
jbe
into
jge
cmp
cwtl
inc
sub
and
lods
insb
jl
jns
das
add
xlat
push
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
js
addr16
xor
jb
inc
xor
fscale
subb
push
jns
xor
mov
into
pop
and
andl
jmp
dec
jne
insl
jno
mov
outsb
sbb
cmp
xchg
dec
in
es
mov
test
scas
imul
orl
lods
ja
fwait
jg
cmpsl
pop
mov
push
xchg
scas
bound
jnp
in
xlat
mov
fdivr
jo
inc
int3
adc
mov
cwtl
mov
fbld
imul
insl
adc
js
xor
fstps
rclb
lods
test
sbbl
sub
sbb
leave
scas
pop
push
fistpll
mov
add
adc
fistl
bound
cmp
fisttpll
outsl
inc
and
repz
jns
sbb
inc
mov
and
sbb
mov
shlb
jns
inc
out
popf
lods
test
popa
cli
stc
jge
dec
stc
add
pop
ja
out
int3
sub
fidivrl
in
ds
cmpsl
mov
in
push
aad
mov
sarb
add
in
xchg
adcl
test
xchg
xchg
subb
imul
ret
pop
out
mov
push
jbe
add
xchg
fidivl
xchg
and
jp
in
xor
mov
not
pop
or
mov
push
and
lahf
frstor
cli
leave
lret
mov
aam
je
daa
mov
and
ds
cmp
call
jns
sub
fistl
cmpsl
popa
sbb
jg
outsb
fcmove
loope
dec
in
stos
push
adc
xchg
in
imul
sti
mov
fwait
cmp
mov
mov
into
aad
add
or
jp
add
aaa
addb
test
jo
stc
or
cltd
mov
mov
and
add
push
popa
mov
pop
push
mov
push
aad
cmp
sbbl
stos
movsb
data16
cmp
cmp
das
shl
dec
mov
jae
push
stc
addb
scas
add
adc
sub
xor
mov
test
jae
push
decb
push
jo
cmp
and
xchg
jo
xchg
and
mov
sbb
dec
mov
jecxz
imul
rol
push
push
and
loope
stos
xor
cmp
lret
add
psraw
repz
mov
lock
jne
jmp
lret
cmp
mov
pop
inc
mov
js
cmpsl
jle
js
mov
xchg
daa
into
nop
sub
lds
push
int3
pop
ds
push
dec
lahf
fdivrl
or
insl
fistps
push
outsl
xor
mov
mov
inc
jl
mov
jnp,pt
xor
sub
adc
scas
sbb
cmpsb
ja
in
lahf
sbb
int3
scas
jg
mov
cmp
shrb
stc
mov
sbb
les
std
in
mov
dec
cmp
fnsave
stos
test
pop
xor
in
add
stc
xchg
pop
hlt
push
and
xchg
imul
push
aas
andl
hlt
mov
sbb
and
sbb
test
jecxz
outsb
lcall
mov
fs
popa
add
rcll
cmpsb
sbbl
leave
xor
lds
lds
in
sldt
aaa
push
mov
pop
mov
stc
lock
enter
stc
xchg
ret
enter
adc
xchg
mov
dec
outsb
jae
les
pop
stos
ror
xor
test
mov
subb
loop
scas
mov
jae
jnp
push
in
cmp
adc
rcl
and
push
int
xor
push
pop
in
int
mov
jns
push
mov
cmp
xor
pushf
pinsrw
mov
add
xchg
movsl
mov
test
sbb
push
test
inc
aad
fsubs
xchg
test
xor
das
icebp
push
push
jns
cmpsl
rdtsc
loop
xchg
int3
cwtl
popf
push
and
jp
into
xchg
ds
jle
add
mov
repnz
mov
pop
in
add
xchg
test
fmuls
cmc
loop
pop
mov
sbb
xchg
mov
imul
pop
insb
dec
int
pop
or
daa
fwait
mov
fiadds
inc
shlb
loop
inc
mov
insb
sub
scas
sub
insb
mov
cs
dec
xchg
movsl
sub
cld
aam
sub
push
mov
push
xor
imulb
lret
and
jmp
push
push
cmp
sysenter
mov
in
test
mov
outsb
pop
lcall
scas
hlt
dec
pop
adc
sbb
mov
aas
or
and
cmpsb
nop
clc
xchg
int
ret
mov
daa
push
inc
in
fsubrp
jae
push
mov
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
dec
leave
xor
jle
js
cmc
sub
daa
xchg
inc
ljmp
fistpl
data16
jnp
out
lahf
push
xlat
jne
int
in
pop
mov
pop
es
or
andl
negb
sbb
push
cltd
sbb
mov
in
cmp
hlt
dec
xchg
fcompl
out
enter
cltd
sbb
mov
jo
push
sbb
xchg
scas
popf
repz
inc
loope
rorb
call
or
jl
push
ljmp
xchg
into
dec
cwtl
dec
into
inc
addr16
xchg
rclb
aaa
mov
jg
mov
mov
jl
adc
pop
pop
popf
mov
adc
add
xchg
jg
add
mov
pop
in
add
xlat
shlb
jl
mov
aas
mov
lea
sahf
and
sbb
mov
adc
sub
out
lahf
insb
shll
mov
cmp
fiadds
scas
shrl
xchg
adc
or
mov
pop
xlat
bound
in
sub
movsb
mov
mov
das
icebp
loop
jmp
stc
add
cmc
xlat
push
fimull
cld
jb
xchg
lret
mov
hlt
js
mov
adc
hlt
mov
xchg
sub
inc
sub
push
or
mov
xorb
add
or
xorl
testl
inc
jge
pusha
das
cmp
adc
popa
out
dec
test
xor
xor
cmp
enter
scas
jno
pushf
xor
sbb
or
lds
jne
dec
pusha
pop
add
mov
xlat
adc
jne
xor
adc
mov
cwtl
pusha
test
ret
mov
mov
sbbl
in
repz
push
push
rcrl
jg
mov
lcall
cs
fwait
lahf
adc
out
xor
inc
addl
dec
sarb
adc
cmp
fbld
sbb
ret
xchg
jae
mov
adc
das
jge
in
jmp
es
sub
jbe
mov
and
sti
push
add
jl
pushf
rcrb
cmpsb
pop
imul
xchg
lret
jg
pop
enter
pop
push
lock
jnp
aad
cmp
pop
dec
iret
xor
aam
ficompl
mov
cli
inc
xor
sub
jmp
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
lcall
push
jle
js
lds
notb
pop
call
shrl
cmc
mov
sbbb
mov
jl
jp
lea
shrb
push
push
and
xchg
cmp
sarl
and
les
mov
addr16
xchg
jo
int3
cmp
xchg
sbb
inc
in
push
jecxz
mov
and
fadd
lcall
inc
or
xor
push
cmp
in
adc
fwait
fwait
pmaxub
gs
cmp
add
les
mov
adc
lods
fisubs
adc
jg
inc
inc
imul
sub
add
inc
sti
sub
xor
jl
std
jge
iret
jecxz
and
leave
icebp
push
jle
iret
pop
adc
stc
movsl
inc
enter
pushf
push
vandps
stc
pop
cmpsl
mov
stc
enter
xor
jmp
sbb
stos
xor
pushf
lcall
push
mov
test
mov
mov
push
in
fmull
cmp
adc
test
pop
or
add
mov
mov
sbb
scas
loope
cltd
int3
sub
and
mov
dec
mov
xchg
xchg
pop
cwtl
in
arpl
pop
xchg
mov
movsb
sub
fwait
jp
outsb
cmpl
xlat
int
arpl
and
sbb
cmp
inc
or
inc
flds
push
jp
cmpb
xor
mov
cmp
shll
cmp
iret
inc
scas
cs
or
sbb
pop
clc
movb
call
mov
adc
nop
cs
adc
mov
cmp
insb
push
push
loopne
dec
pop
or
lret
cmc
shrb
pop
cld
xor
fdivrs
cli
int
enter
in
hlt
xor
mov
cltd
dec
push
out
jecxz
or
int
mov
mov
xor
jns
jae
inc
dec
clc
or
push
sub
in
push
cs
mov
sub
ficompl
loope
ja
jcxz
cli
and
inc
add
lahf
ss
and
aad
das
mov
xchg
xorl
mov
mov
pop
xchg
jb
pop
dec
xor
gs
icebp
cmp
jae
mov
xor
adc
shl
in
test
aaa
jno
xchg
pop
stos
inc
rcrb
mov
lret
fimull
and
sbb
push
push
xor
cli
or
shll
cmp
daa
bound
cmp
lret
inc
ss
sbb
mov
gs
pop
clc
push
mov
push
mov
movl
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
ror
cmpsl
mov
js
push
jle
js
scas
pop
mov
icebp
cmpsb
jno
pop
inc
jp
dec
jo
pop
in
cld
jno
inc
lods
xor
mov
dec
adc
iret
jmp
insb
das
xlat
out
jns
leave
hlt
cli
push
xor
lods
and
sub
jle
lods
cmc
fs
mov
int
insb
shlb
cld
mov
dec
fdivrl
and
mov
orb
jne
and
push
jg
push
mov
into
lahf
push
imul
lds
push
lret
insb
call
out
xor
xchg
mov
xchg
sbb
jg
inc
andb
dec
push
xchg
and
mov
and
xor
jge
add
int
cmc
test
push
sti
stc
pop
repz
dec
sbb
testb
or
stos
in
sbb
sub
jecxz
cmpb
xchg
test
shlb
push
rcrl
clc
jnp
mov
daa
mov
incl
in
rcll
call
or
adc
mov
loopne
pop
xchg
das
lods
pop
fists
inc
pop
loopne
mov
jb
ds
imul
pop
pop
jle
dec
mov
mov
pop
mov
fsubrl
push
push
cmp
sbb
test
lods
cmp
ljmp
xor
cld
add
cwtl
mov
or
cmp
mov
xlat
into
leave
sbbb
mov
test
test
add
mov
adc
dec
cmp
lods
pop
push
stos
das
icebp
sahf
cwtl
lds
aad
sbb
jmp
lret
jecxz
jae
add
test
or
or
shlb
stos
out
dec
dec
adc
push
inc
pop
adc
jnp
inc
mov
push
popf
test
pop
mov
and
scas
sbb
adc
pop
add
push
pushf
fldenv
andb
mov
pop
lock
je
idivl
xor
jecxz
fiadds
lahf
sub
xchg
pop
call
jns
or
data16
insl
mov
cmpsb
fcomi
inc
lods
xor
cld
push
jae
inc
push
xor
cwtl
pop
dec
inc
cs
std
jge
and
ficompl
notl
testb
inc
movsl
add
adc
push
dec
loope
popa
std
loopne
mov
test
fnsave
lods
lret
fisttpll
jns
out
jns
das
pop
cmp
sbb
sbb
dec
dec
aas
das
rolb
push
fsubp
lods
aaa
jno
xchg
in
rcll
rorb
sub
ds
and
dec
jb
or
int
and
mov
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
iret
ds
push
iret
xchg
sbb
cwtl
jae
clc
push
shrl
or
mov
cltd
mov
shlb
repnz
adc
test
pop
mov
fcoml
sbb
sahf
dec
push
enter
in
xor
mov
inc
xor
or
or
das
mov
mov
sbbl
adc
push
push
push
jl
lds
pop
mov
pop
sub
fdivrs
jmp
mov
jl
adcl
dec
cmc
ljmp
lods
inc
pop
or
jge
rcrl
out
test
decb
cmp
mov
pop
adc
jl
iret
clc
fucomi
sub
inc
je
jmp
sub
fadds
jne
imul
push
repz
out
mov
rorl
movsl
inc
or
rcr
dec
imul
dec
lret
and
leave
sub
push
in
repnz
push
cmp
xor
cmp
inc
mov
paddsb
test
test
mov
arpl
fwait
gs
imul
sub
jns
jmp
sbb
lods
imul
lods
hlt
mov
push
loop
fldenv
push
adc
xchg
daa
mov
je
mov
cmp
test
inc
rorl
jo
cmpsb
pop
inc
jno
mov
push
rcr
cmc
arpl
fistl
pop
lods
mov
imul
int
cmp
or
dec
movsl
out
ret
negb
sbb
jne
sahf
ja
adc
cmc
add
aad
repnz
or
or
sbb
adc
cmp
cld
dec
imul
push
dec
sarb
push
mov
subb
xchg
lret
rcr
jne
jge
insb
negl
mov
mov
or
and
mov
jp
or
test
mov
imul
pushf
sbb
inc
dec
push
pusha
inc
pusha
pushf
ja
and
les
divb
add
jb
mov
sub
mov
jo
test
mov
mov
lock
leave
fsubrs
lret
inc
into
or
js
stc
xor
mov
fst
imul
popl
xor
les
rclb
outsl
int3
in
mov
shl
mov
xorb
jp
and
mov
sbb
nop
mov
adc
es
xor
sbb
idivb
jle
cmp
cmc
mov
lret
loope
sub
or
xchg
fwait
enter
dec
or
adc
out
daa
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
ja
loop
js
je
js
pusha
xchg
sarb
and
sub
mov
popw
sub
fnstenv
stos
imul
xor
dec
sarb
push
fistl
out
sbb
pop
movsb
xchg
mov
je
pop
aam
in
mov
xor
or
jg
or
or
dec
cmp
add
mov
jno
sub
mov
xchg
rorl
gs
dec
es
or
cwtl
dec
lock
rcrb
push
icebp
daa
adc
scas
cmpl
push
lret
data16
sbb
testl
sti
jge
jb
in
cs
mov
nop
mov
push
les
mov
imul
mov
movsb
push
into
jae
pushl
and
cmp
test
cmpsl
cmc
ficoml
sbb
mov
sub
add
mov
rolb
vpunpckhbw
pop
je
dec
or
xchg
aad
arpl
cmp
loopne
sbb
lret
inc
or
loopne
xchg
sbb
test
jno
stc
sub
add
scas
cmp
adc
add
inc
jbe
dec
add
shlb
push
cmp
add
les
sub
in
incb
int
xlat
push
add
mov
popf
cwtl
in
jmp
xchg
lea
popf
arpl
fildl
stos
nop
je
mov
pop
out
lods
mov
popf
aad
dec
ss
out
sbbl
mov
cmpsl
and
jb
movb
mov
stos
pop
pop
cmp
lcall
fmulp
sbb
mov
mov
leave
aam
data16
or
das
into
xchg
andnps
repz
nop
lret
hlt
or
icebp
push
cmp
inc
test
leave
cltd
and
fwait
lret
push
mull
aaa
shll
inc
sub
dec
icebp
mov
jbe
sub
lret
and
popa
je
outsl
rol
vpaddsb
dec
iret
dec
pminub
push
push
gs
xchg
pop
popf
add
jl
mov
aam
insl
rolb
inc
adc
aaa
pop
mov
cs
sbb
popf
fnstsw
fistpll
movsb
loope
testb
push
gs
jbe
xchg
inc
or
cwtl
pop
filds
jmp
adc
inc
scas
cmp
mov
std
cmc
lret
das
xchg
adc
jg
out
cmp
cld
xchg
jmp
push
mov
xor
les
pop
dec
sbb
ret
xor
ja
cmpsb
addr16
sbb
xlat
or
jno
jmp
sub
inc
faddl
add
cmpsl
inc
add
mov
add
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
sbb
js
je
js
sub
ljmp
mov
xchg
stc
inc
insl
orl
mov
imul
andb
dec
jnp
sbb
fadd
out
jbe
mov
fst
mov
push
je
cmp
lret
mov
out
das
xor
sub
xchg
jmp
cmpsl
xchg
dec
pushf
inc
bound
and
test
repnz
jge
cmp
clc
mul
mov
jno
sub
js
xor
repz
add
push
test
push
mov
mov
inc
insb
jp
cmp
adc
inc
push
and
inc
xor
xor
dec
mov
out
push
jg
scas
ret
es
mov
mov
push
ds
insb
cmp
xchg
or
nop
dec
mov
mov
pop
cli
push
je
cld
into
sub
enter
push
outsl
and
aam
inc
mov
loop
mov
push
sbb
push
test
xchg
testl
push
das
jp
in
repnz
es
mov
subb
rorb
xor
out
mov
cs
xor
out
fstps
lods
hlt
js
rclb
ds
xor
vmovlps
loop
arpl
add
repnz
adc
pop
cmpsl
aas
lahf
mov
jp
xor
cli
adcl
cmp
cltd
sub
fabs
sub
iret
push
mov
icebp
rclb
fimull
ret
mov
mov
push
mov
push
xor
ja
xchg
sarb
test
fsub
inc
inc
stos
out
leave
mov
mov
out
xchg
mov
cmp
in
rolb
push
pop
hlt
sti
or
push
cmp
jle,pn
pop
push
jo
stos
jecxz
push
or
push
xchg
mov
pop
jl
lock
xchg
pop
stos
push
inc
or
dec
insb
add
dec
jmp
out
ja
lret
pop
test
jge
inc
lock
xchg
sub
adc
and
mov
or
in
test
push
cwtl
mov
xchg
mov
lahf
daa
les
and
leave
inc
sarb
adc
push
lods
xchg
mov
out
pusha
orb
rcrb
arpl
mov
jnp
pop
adc
xchg
mov
aaa
push
push
out
fdivl
sub
push
clc
ret
pop
lea
sbb
imul
push
push
cli
xlat
sub
clc
xchg
stos
popa
jo
cs
cli
inc
call
and
test
jb
test
and
pop
xchg
xor
xlat
dec
fidivrs
adc
lcall
cli
fcmovnb
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
arpl
fiaddl
js
jl
in
test
pop
fs
jne
sbb
aaa
loope
dec
fs
pop
bswap
mov
ljmp
adc
dec
insl
pop
mov
cli
scas
cmp
add
psubb
mov
ja
cmp
repnz
adcb
xchg
popf
ficoms
fs
mov
mov
sub
dec
test
inc
or
jge
inc
dec
push
and
xchg
cmp
std
push
outsl
fadds
scas
leave
pop
jge
fmul
mov
inc
lock
jle
or
sarb
flds
enter
jp
adc
mov
xor
stos
jmp
or
xchg
pop
xor
fstl
dec
jne
iret
pop
cmp
icebp
in
mov
xlat
push
or
mov
imul
jmp
lcall
pop
das
sbb
jge
mov
in
mov
pop
inc
clc
push
out
and
sar
xor
outsl
aam
inc
std
xor
adc
arpl
pop
pop
hlt
jno
xchg
lret
push
mov
lret
lock
jmp
adc
inc
push
dec
xor
lcall
sbb
pop
xor
loop
xchg
outsl
mov
mov
mov
rolb
fistpl
scas
lds
xchg
cmpsb
iret
lea
jns
push
jae
jmp
adc
outsl
andb
mov
push
add
or
out
jb
dec
xor
sub
pop
mov
ret
fs
xchg
pushf
push
movsb
movsb
stos
sub
movsb
fiadds
push
sub
pop
in
or
adc
xchg
inc
xchg
lea
xchg
jmp
fsubr
mov
sub
add
adc
imul
rcrb
push
sub
and
shrb
test
xchg
cmp
js
fistpll
shlb
xor
xor
mov
sti
mov
decb
sti
icebp
paddq
in
mov
or
xchg
jb
ss
xchg
test
mov
pushf
cmp
cmp
cmp
ljmp
lahf
scas
fcmovnu
imul
cmp
data16
rolb
call
les
mov
stc
lods
sub
incb
mov
or
fwait
shlb
mov
testl
inc
and
lods
rcll
jp
jno
push
add
rcl
cmp
cs
jne
call
pop
sub
sbb
inc
lahf
mov
mov
shll
and
push
aas
incl
or
hlt
xchg
shl
pop
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
cmova
js
je
js
or
xchg
leave
mov
cwtl
sbb
pop
adc
cmpsl
jns
ss
push
xchg
push
xor
es
pop
inc
inc
jo
enter
popw
lds
adc
pop
les
xchg
sub
mov
aam
xor
mov
sbb
xadd
pushf
sahf
jle
jns
movsb
in
inc
and
or
inc
jb
aaa
scas
cmpb
dec
stos
xor
sub
pop
arpl
out
sbb
dec
pop
cmp
inc
jnp
rol
in
repnz
out
in
les
push
mov
hlt
pop
or
mov
js
mov
loop
adc
xchg
adc
in
inc
pop
push
cmp
stos
shrl
sub
sub
pop
and
les
add
xchg
xor
pusha
inc
test
xchg
xchg
lods
popa
xchg
inc
xchg
mov
addl
pop
mov
cwtl
push
imul
scas
push
and
pop
popa
test
cwtl
and
cmpsb
push
std
jne
xchg
js
imull
prefetcht1
sub
ret
pop
add
or
lods
cmp
sahf
or
aam
push
cmp
scas
imul
add
pushf
add
and
lret
stc
xchg
push
fisubl
push
sbb
movsl
fs
gs
sub
dec
loope
std
and
in
pop
out
cmp
imul
or
arpl
push
lods
xorb
cs
jne
insl
or
dec
scas
sti
fsubr
lea
gs
xchg
add
or
sarb
cmpl
mov
xchg
es
fwait
mov
lahf
fistl
cmp
movsb
jmp
pop
pop
addb
xor
loope
pop
repnz
outsb
mov
mov
shl
fcmovnb
cmp
push
xchg
push
lock
pop
mov
pop
ror
notb
loope
mov
loop
or
loope
cmpsl
aam
inc
xchg
dec
loopne
lcall
dec
shlb
out
cmpl
dec
mov
pop
ror
cmp
add
fdivrl
pop
mov
dec
add
nop
xor
add
es
xor
jecxz
popa
jae
fimull
cmp
insb
ja
shlb
test
mov
or
fs
and
dec
mov
js
xlat
and
je
dec
lods
out
mov
pop
mov
mov
outsb
out
imul
cltd
xchg
mov
adc
xchg
clc
mov
mov
dec
outsb
roll
inc
rorb
adc
in
test
mov
jmp
sarl
fcmovne
mov
fsubr
cwtl
mov
mov
test
je
js
into
dec
les
cmp
inc
cmpsl
in
stos
pop
popf
mov
ret
aaa
fadds
cwtl
mov
jo
add
add
int
shrb
sbb
hlt
ja
sete
adc
push
mov
adcl
fs
xchg
and
je
pop
minps
pop
xor
test
test
jnp
lahf
sarb
mov
cmp
mov
inc
adc
repz
pop
mov
arpl
mov
add
leave
sti
daa
inc
pop
lods
movb
pop
lods
xchg
add
xor
pushf
xor
call
or
rclb
test
inc
xor
push
cwtl
arpl
clc
jmp
cltd
xchg
test
or
mov
inc
leave
out
ret
xor
and
and
push
xor
mov
pop
pop
jno
lds
enter
test
sbb
sar
sbb
mov
jecxz
outsl
fcomp
xlat
push
lcall
jmp
mov
mov
or
pop
xor
dec
fcmovnu
push
les
loope
sub
add
aaa
shr
lahf
jp
repz
ds
mov
push
adc
sub
fld
mov
mov
lret
sbb
clc
dec
inc
stos
add
pop
push
or
xchg
pop
mov
add
inc
jo
rolb
adc
leave
sbb
adc
aaa
xchg
cmp
in
shrl
mov
imul
add
inc
push
fcom
movsb
imul
mov
loope
jp
popa
jge
dec
data16
imul
out
out
cmpsb
in
faddp
xchg
or
or
sub
xor
mov
push
jo
mov
push
inc
ret
ds
imul
scas
aam
jnp
xchg
fisttpl
arpl
mov
std
enter
add
pop
push
jno
lret
enter
mov
ret
sbb
pop
cmp
enter
scas
mov
shrl
inc
test
sub
mov
movsb
jecxz
mov
es
popf
into
inc
inc
cmp
adc
or
cli
les
sti
sub
ja
sub
mov
stos
mov
and
inc
test
out
sti
test
mov
xchg
sbb
call
cli
movsb
insb
fwait
mov
push
sub
test
xchg
leave
mov
cmpsb
mov
aaa
stos
mov
lahf
or
stos
cli
orb
sbb
in
ja
inc
ljmp
add
or
popa
sahf
jge
add
sbb
in
dec
addr16
rorl
mov
and
push
jge
out
push
cs
inc
cmpsb
orl
and
andb
jbe
xchg
sub
add
add
rol
fcmove
rcl
pop
mov
adc
into
mov
je
js
xor
sarb
pop
and
lock
push
rcll
outsb
push
xor
iret
mov
in
cwtl
or
xchg
int3
dec
out
mov
push
insb
mov
loopne
shlb
adc
lea
push
dec
repz
and
bound
jg
sbb
jbe
or
jle
aas
loop
sbb
sub
cmp
sbb
jmp
jne
fsubr
adc
mov
stc
test
daa
fcomi
in
add
sub
or
loope
pop
lret
nop
outsb
sbb
add
pop
insl
test
test
mov
sub
adc
dec
pop
pop
mov
lretw
rcrb
lds
push
into
or
out
adc
js
mov
mulb
push
or
and
orb
xchg
or
push
mov
adc
jne
dec
outsl
pcmpeqw
add
jbe
mov
dec
mov
pop
scas
into
repz
add
test
imul
pushf
pushf
popa
sbb
popa
out
subl
dec
lds
movsb
outsb
rorb
lods
pop
stos
cmp
fiadds
negl
movsl
add
jle
ja
das
xchg
out
in
rclb
push
mov
pop
sti
fwait
idivl
push
inc
call
dec
imul
add
das
gs
adc
push
psubd
lret
iret
xchg
subl
lret
daa
sahf
pop
jge
stos
mov
dec
rol
mov
jns
insb
xlat
es
or
in
sarl
jge
flds
call
sub
push
test
sbbb
and
cmpsb
in
mov
pop
xor
or
push
mov
mov
sbb
negb
nop
aad
outsb
enter
sub
cmp
jae
in
or
lahf
push
adc
aam
imul
fildll
fldt
sbb
orb
mov
popf
hlt
sub
dec
in
pusha
or
cld
lods
jbe
iret
xchg
incl
aam
sub
cmpsb
sub
pop
mov
int3
stos
rcll
and
adc
inc
ficompl
rcr
call
cld
cwtl
inc
sub
insb
mov
push
enter
icebp
sub
xor
notl
fmull
mov
inc
mov
int
das
ds
push
push
mov
sbb
mov
mov
jns
jo
nop
icebp
ficompl
mov
cmp
aad
das
shll
xor
push
or
enter
sub
pop
sub
xchg
fldlg2
sbb
pop
add
add
popf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
daa
sbb
je
js
push
push
push
adc
sub
adc
rcl
jmp
inc
inc
sub
stos
mov
add
cvtdq2ps
sub
xchg
mov
mov
sbb
pop
in
scas
mov
xchg
sbb
inc
push
mov
push
lds
dec
ret
inc
inc
leave
mov
enter
int
popf
aam
gs
loope
cmp
xor
mov
mov
xchg
cmc
and
mov
mov
mov
outsb
inc
mov
jle
insl
jg
or
mov
mov
aam
int3
and
xor
sbb
inc
sbb
xchg
insl
stc
push
pop
je
fwait
jmp
dec
daa
push
push
addl
mov
jecxz
ja
dec
cmp
mov
lods
or
cmp
fisttpl
push
jecxz
sub
jecxz
mov
movsb
pusha
push
addb
stc
adc
sbb
mov
test
loopne
addl
mov
add
in
ja
aad
dec
jne
insl
stos
in
inc
jbe
push
mov
mov
aas
cmp
cs
or
rorl
or
xor
sub
pop
dec
sub
and
hlt
add
cmp
notl
int
inc
and
andb
jecxz
movsb
add
pop
lods
shlb
lcall
jno
aad
inc
and
jbe
loop
lret
enter
push
lret
sbb
xor
inc
loop
enter
ds
iret
loop
jl
cmp
mov
dec
dec
mov
bound
das
cmc
push
iret
mov
pop
pop
loopne
mov
dec
adc
ror
out
ror
mov
push
enter
pop
mov
in
loopne
mov
pop
dec
dec
enter
aaa
aam
sbb
cmpsl
stos
jae
mov
or
or
push
and
or
out
test
sub
inc
add
shl
lea
add
pop
xor
notb
enter
into
dec
pushf
mov
dec
mulb
inc
mov
and
repz
ja
fidivrl
inc
scas
or
scas
imul
bound
icebp
out
call
xor
clc
inc
sbb
add
out
mov
lcall
sbb
jl
add
pushf
jo
aas
cltd
sub
in
inc
inc
mov
fadd
ljmp
xor
mov
push
jp
inc
psllw
enter
pop
mov
sbb
push
loope
test
in
and
mov
sub
and
flds
cld
cli
jle
jno
xor
xor
mov
sbb
int3
mov
iret
mov
pop
or
push
inc
add
enter
pushl
test
orl
mov
mov
andb
iret
push
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
rcrl
js
je
js
addb
lock
pop
inc
xchg
mov
lcall
jl
cld
pop
xor
or
subb
mov
push
jmp
popf
cmpsb
arpl
aaa
aam
imul
rorl
sub
push
mov
sub
ja
jle
stc
daa
xchg
cwtl
int
jns
loopne
add
sub
fwait
cld
es
movzwl
mov
push
add
pushl
call
movsl
xchg
pop
xor
aam
push
cs
lods
aaa
jge
jge
call
jns
jnp
icebp
mov
mov
rcl
in
mov
imul
test
repnz
add
or
xor
xchg
mov
sub
xlat
les
push
xchg
mov
in
add
inc
and
mov
mov
mov
jae
nop
repnz
cmpb
mov
mov
divb
xor
ret
sbb
test
push
sbb
cmp
jo
xchg
adc
lret
jns
fcoml
pop
fidivrs
nop
inc
mov
ss
lock
lret
mov
sarl
cmpsl
jo
fiadds
mov
test
fwait
test
clc
aas
pusha
push
fmul
mov
adc
outsl
xchg
xchg
pusha
jmp
cmpsb
dec
lret
int3
lds
mov
and
jb
out
and
mov
pop
mov
xchg
gs
jmp
pop
xchg
add
inc
pop
mov
adc
test
outsb
jmp
cmc
test
mov
mov
xchg
iret
mov
mov
jae
je
fwait
into
lcall
cmc
inc
xor
insl
inc
bound
nop
cltd
cmc
outsb
dec
push
ljmp
sbb
ss
pop
jae
loop
shll
xor
sbb
in
cmpl
into
xor
xor
jl
push
sbb
lods
add
andl
push
xchg
mov
adc
int
push
xor
sbb
xor
jnp
jmp
sbb
mov
mov
xchg
xchg
or
cltd
or
mov
mov
ret
xor
and
stos
ja
mov
mov
test
jae
call
imul
cltd
jne
cmp
sub
jmp
mov
adc
cmp
das
adc
test
out
lcall
sbb
gs
push
dec
push
popa
inc
pop
int3
sbb
test
xor
mov
nop
push
outsl
insl
xchg
imul
inc
int
stc
dec
fdivrp
and
ret
pop
or
xchg
dec
ds
or
aam
pop
cmp
inc
sub
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
out
gs
xchg
js
je
js
fdivl
lahf
xorb
scas
and
pop
cltd
pop
outsl
xor
testb
cwtl
dec
fnsave
mov
push
repnz
or
mov
scas
in
mov
dec
lahf
imul
int
mov
cli
fmuls
inc
add
ja
ficompl
mov
mov
test
lret
mov
outsb
lods
or
xchg
stos
loop
jno
mov
adc
les
mov
out
inc
shrl
mov
test
jbe
sub
mov
adc
xchg
shr
repnz
jb
dec
lods
not
lret
push
ret
stc
pop
jbe
mov
mov
pop
shlb
lret
dec
or
scas
fistpl
xor
and
repnz
outsl
imul
test
cld
mov
insl
lret
and
jge
int3
xchg
rcll
aaa
xor
and
pop
jl
daa
mov
cli
pop
sbb
cli
dec
arpl
rcrl
cld
bsf
scas
cmp
and
mov
verw
and
call
and
add
sti
jle
dec
pop
je
sub
call
pop
xchg
call
lods
xchg
in
sahf
cmp
mov
dec
cwtl
in
sub
dec
pusha
xchg
mov
and
sub
int
push
dec
cmp
sarb
cltd
jp
les
sub
push
add
xorl
or
pusha
clc
adc
call
nop
mov
daa
inc
sub
fcompl
mov
mov
lcall
xchg
arpl
nop
mov
lea
mov
sti
test
inc
out
push
xchg
ffree
enter
out
out
and
or
or
pop
push
jmp
stos
xchg
loope
inc
mov
cmpsl
jbe
loopne
sbb
test
jbe
int
add
mov
cmp
int3
cmp
aas
daa
cmc
bound
pop
out
movsl
loopne
jns
cs
pop
lea
fcmove
stc
mov
xchg
scas
clc
adc
das
lods
mov
xchg
adc
jns
int3
shl
ret
cltd
fmuls
popf
xchg
dec
es
popf
mov
mov
cli
inc
pop
addr16
test
or
lcall
cltd
push
or
add
push
cmp
pushf
das
daa
add
adc
stos
push
ret
sbb
push
cltd
xchg
xchg
push
sub
icebp
popa
cmc
ja
push
mov
mov
adc
adc
jle
js
mov
mov
push
push
or
aaa
pop
shlb
sbb
daa
hlt
jmp
jecxz
pushf
sub
ja
xchg
inc
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
out
lea
lahf
ds
js
je
js
inc
add
jnp
pop
mov
jnp
sub
cmp
dec
add
out
dec
stc
repnz
scas
push
pop
jno
movsb
insl
lret
dec
ja
xor
adc
push
insl
aas
imul
repz
xchg
rcl
ret
loopne
outsl
mov
out
cmpsl
sub
or
aam
lcall
mov
data16
push
xor
test
xchg
cmc
lret
inc
push
and
xchg
or
adc
pop
sub
mov
ljmp
imul
fisubs
repz
int3
call
adc
jl
mov
loop
testb
out
sub
outsl
cmp
test
ljmp
addb
out
mov
add
rolb
enter
in
add
push
iret
add
jae
xchg
sbb
cmpb
jb
pop
iret
add
loopne
aam
pop
insl
xlat
test
in
jne
sub
lahf
cwtl
dec
mov
jmp
fwait
lock
xchg
orl
mov
lds
jecxz
call
mov
int
fsub
mov
cld
loopne
icebp
loope
pop
stos
sub
xchg
insl
stc
sub
push
das
lods
sbb
std
cmp
popa
js
std
sub
push
sahf
push
pop
sub
fldcw
xchg
insl
cmpsb
adc
dec
lret
sbb
mov
mov
push
jo
out
daa
in
mov
add
cmp
adc
or
repz
mov
movb
clc
imul
xor
fwait
lock
out
jge
mov
lret
xchg
pop
jge
popa
iret
push
dec
ljmp
add
push
sub
sub
fmulp
xorb
push
or
or
lret
or
fisttpl
jl
xorb
xchg
mov
lret
sti
sub
xchg
pop
mov
cmp
dec
jo
mov
jge
mov
cld
adc
bound
dec
pop
dec
sbb
add
or
pop
shll
mov
push
add
add
mov
lcall
sarb
mov
mov
xlat
sti
and
cmp
mov
jmp
outsb
fimull
out
xor
rol
jne
mov
mov
sar
jbe
push
js
lret
enter
adc
mov
xor
mov
or
and
adc
mov
pop
in
leave
lods
or
sbb
sti
loopne
and
xlat
push
xchg
gs
mov
pop
jg
ljmp
mov
shrb
test
in
and
xor
pop
aad
xor
jecxz
mov
pop
cmp
pop
ret
popf
call
push
pop
mov
mov
fsubs
jge
mov
jmp
xlat
cmp
ds
js
adc
cmp
cmp
js
cld
pop
xor
add
cltd
scas
and
lcall
pop
ljmp
xchg
mov
push
pop
pop
cmp
push
and
or
pop
cmp
sbb
data16
int
sbb
int3
sub
scas
adc
adc
leave
scas
ds
enter
or
adc
rol
lsl
cmp
call
and
add
mov
xchg
cmp
bound
inc
loopne
xor
addr16
xchg
inc
mov
push
push
enter
ret
push
jno
cld
adc
push
sbb
cmpsl
stos
sub
test
mov
stc
test
add
sub
ljmp
mov
sarl
fstps
mov
dec
mov
mov
sub
and
cmp
aam
jge
data16
lea
outsb
mov
mov
mov
test
inc
mov
mov
mov
dec
orb
xor
mov
and
imul
or
mov
mov
sarb
xchg
jne
cwtl
lret
add
test
lahf
lcall
xchg
loop
or
scas
out
fisubs
adc
mov
insl
rorb
out
imul
inc
sbb
ds
inc
mov
out
jb
pop
mov
sub
and
pop
movsb
mov
add
pusha
insb
push
jno
inc
jle
add
jbe
ret
xor
jno
adc
or
fwait
sahf
cmp
fisttps
fsubr
xchg
push
inc
fwait
arpl
aas
cs
dec
push
mov
and
jmp
inc
std
push
jg
xor
lcall
rorb
faddp
or
dec
mov
add
push
jp
sti
rclb
nop
jg
mov
cmp
mov
dec
sbb
adc
mov
pop
adc
dec
push
ja
mov
shll
mov
ljmp
and
sub
xchg
inc
jnp
out
or
jbe
or
es
xchg
insl
iret
inc
cmpsb
nop
and
add
in
xor
js
adc
pop
jmp
mov
fimuls
fnsave
pop
cmp
sbb
and
pop
sbb
lahf
jmp
ja
and
rcrb
dec
jmp
hlt
aas
or
mov
or
int3
je
in
cmc
xchg
xchg
cmp
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
add
ss
js
je
js
jns
mov
lods
push
mov
addr16
dec
jnp
jmp
or
fsubp
sarl
out
sbb
mov
push
lret
iret
add
stos
pop
clc
add
cmp
mov
xor
pop
add
test
ja
into
cs
or
adc
inc
mov
mov
push
jno
imulb
cmp
cwtl
rcr
das
in
mov
loopne
in
xchg
fbstp
mov
std
add
sahf
out
push
or
mov
sub
push
mov
cs
out
mov
mov
movsb
jg
les
mov
call
fcoml
mov
mov
loop
xchg
test
add
xchg
jle
call
and
test
loope
mov
fnstsw
mov
sti
mov
cld
mov
out
jmp
lret
popa
fnstcw
jle
and
mov
xlat
lcall
jno
xlat
scas
sbb
ret
pop
add
jne
or
fneni(8087
nop
pop
inc
test
mov
push
ret
dec
call
or
lock
jo
cmp
stos
mov
dec
xchg
outsb
dec
mov
push
cmpb
movsl
jne
repnz
lret
or
mov
xchg
sti
ss
push
imul
mov
inc
mov
aas
in
pusha
mov
cli
lock
pop
lods
add
xor
fiadds
xor
or
inc
push
add
and
mov
test
in
loopne
xchg
inc
and
int3
push
lds
fmuls
jnp
mov
xchg
and
out
std
repz
in
outsl
mov
inc
add
scas
loop
or
arpl
push
mov
nop
xor
push
shl
or
xor
adc
jge
push
int3
fs
imul
jecxz
xchg
xor
ret
imul
mov
xchg
popa
xor
aaa
daa
pop
dec
rclb
and
xchg
fistpll
inc
sbb
iret
roll
adc
cmc
dec
imul
aam
fiaddl
repnz
fnsave
and
mov
adc
inc
sbb
sub
or
or
or
jg
out
cmp
loopne
lods
data16
or
std
sbb
pushf
enter
leave
fwait
mov
sahf
pop
adc
in
mov
adc
or
aas
adc
mov
sbb
xchg
sub
jnp
clc
pusha
pop
mov
and
xor
inc
sarb
mov
jno
cmc
add
xor
jnp
aam
cmp
push
cmp
dec
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
jne
cmp
popf
js
je
js
pop
dec
out
stos
mov
fmul
ror
add
xchg
push
jge
stos
mov
mov
jge
in
adc
fnsave
xor
insb
dec
mov
and
cmpl
inc
mov
ss
mov
iret
push
and
xchg
mov
or
cmpsb
mov
cmpsb
pop
jge
mov
adcw
cli
jle
fdivl
lods
mov
clc
pop
in
xchg
clc
daa
sbb
arpl
jmp
pop
cmp
fld
sub
cmpsb
cmp
les
ljmp
insb
and
push
jg
fidivs
repnz
decb
adc
xor
dec
mov
in
das
in
jle
cmpsl
in
xlat
shlb
jns
jbe
pop
dec
aad
loop
jp
cwtl
insl
mov
ret
inc
push
pop
jbe
cld
pushf
sub
sbb
mov
shl
ret
xorl
pop
dec
sbb
mov
and
adc
cltd
ficompl
jns
sub
lret
lods
in
out
dec
stc
push
add
popa
aaa
push
or
inc
lcall
pop
inc
push
lods
subb
xor
push
shlb
push
cmc
and
int3
cltd
dec
add
aaa
sub
lahf
push
pop
das
or
bound
xor
mov
jnp
fidivrl
push
pop
adc
add
inc
idivl
cs
cmp
jns
mov
pop
adc
adc
imul
out
ds
adc
cmp
daa
fnstenv
mov
loopne
ds
sbb
adc
mov
lods
push
sbb
aas
iret
add
cltd
lret
and
adc
scas
dec
mov
push
mov
mov
push
mov
or
lods
int3
lds
xchg
fldt
scas
test
or
in
or
jg
mov
cmp
stos
ss
lcall
pop
fidivs
pop
xchg
mov
adc
std
sub
inc
xor
popa
cmp
pop
mov
fs
mov
inc
mov
les
adc
mov
and
fld
aas
out
aam
or
jle
shl
outsl
add
aam
mov
mov
in
arpl
rorb
mov
add
jp
mov
mov
and
jno
cmp
sub
push
mov
push
inc
adc
pushf
leave
cmp
push
lods
or
shl
add
mov
pop
mov
cmp
xchg
fists
mov
jge
xor
or
scas
jbe
aam
je
adc
jge
push
nop
xlat
mov
enter
das
cmpsb
xor
push
pop
notb
jmp
rol
ror
aad
xchg
mov
aad
scas
jge
mov
js
inc
inc
lahf
sub
stos
sub
mov
and
nop
sub
mov
sub
jge
out
mov
fistps
cmp
mov
xchg
imul
es
in
scas
mov
mov
js
pop
inc
imul
scas
test
xchg
add
xor
pop
push
adc
pop
stos
adc
mov
dec
xchg
andb
aas
dec
cmp
sub
dec
repnz
inc
das
mov
or
imul
out
stos
sub
aam
inc
repz
mov
shlb
out
xor
inc
xchg
int
movsl
pop
loop
xchg
out
ss
push
or
and
mov
inc
shll
mov
mov
ret
jns
test
int3
push
xchg
ljmp
and
out
push
sub
popa
stos
jg
cli
adc
test
rcr
loopne
jb
arpl
sti
add
mov
jne
dec
mov
jno
or
xchg
cmpsl
fcmovu
popf
xchg
outsl
in
xor
sar
jo
cs
insb
lea
xor
inc
popf
fldt
push
mov
push
push
int3
mov
leave
mov
repz
adc
sub
les
cmovo
lods
mov
jmp
hlt
add
into
cmp
hlt
int3
cmpsl
sbb
inc
add
pop
shlb
fs
jecxz
aad
loopne
pop
adcb
ja
inc
js
aad
cmp
or
fcoms
cmc
lock
hlt
mov
sbb
xor
repz
inc
mov
xchg
mov
bound
mov
lcall
inc
nop
jge
loop
enter
push
out
leave
loopne
stc
in
or
loop
iret
adc
outsl
sub
cld
cli
imul
or
add
les
sub
sbb
and
rol
insl
outsb
and
lea
or
insb
inc
dec
cwtl
imul
fists
lock
and
xchg
cmpxchg
or
push
dec
jmp
leave
imul
push
sub
out
mov
arpl
into
sarl
mov
xchg
dec
mov
leave
aad
dec
jbe
repnz
lods
add
push
and
pop
mov
jmp
fmull
push
iret
jae
push
cmc
pop
outsb
int3
out
cs
andl
pop
push
and
arpl
or
icebp
or
sbb
cmpb
or
mov
dec
push
into
sbb
fldl
push
adc
ret
lods
push
aaa
inc
out
mov
into
insl
and
dec
xchg
adc
ficomps
xor
xchg
popf
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
mov
cmpsl
js
xor
lds
dec
andb
mov
mov
daa
loope
mov
sbb
push
mov
and
sbb
cmp
lret
push
inc
orb
out
aam
mov
sub
lea
add
jp
and
not
sbb
movsb
inc
jmp
mov
push
jmp
push
popa
add
sbb
inc
mov
lods
mov
fildl
mov
enter
imul
and
xchg
cltd
call
pop
xor
jnp
pop
rorl
cltd
pop
jmp
mov
push
or
mov
bound
pop
mov
in
lods
popf
push
rorl
fbstp
jge
daa
ret
icebp
sahf
sbb
js
pop
movsl
mov
mov
loopne
pushf
dec
jns
mov
paddd
out
push
mov
outsb
xor
pop
movsb
shrl
pop
jl
xchg
out
jo
pop
jbe
jmp
addr16
add
data16
test
in
xor
imul
insl
ret
jge
std
xor
fistpl
pop
adc
dec
add
int
fbld
jno
sbb
push
addr16
dec
aad
popf
or
jmp
mov
fmuls
movsb
pop
daa
cmp
xor
aam
add
rcrl
popa
outsl
push
mov
pushl
stc
mov
je
cmpsl
or
fwait
xor
jbe
lods
cltd
in
fwait
xor
icebp
mov
mov
stc
or
and
mov
insb
sub
push
inc
fistps
xor
and
out
out
mov
outsl
jmp
iret
cmc
gs
mov
push
sbb
shll
xor
cli
dec
mov
mov
ficoml
mov
dec
ljmp
adc
ret
pop
cmpb
mov
sbb
jg
gs
popa
ret
scas
adc
lret
xlat
jle
pop
testl
pop
movsl
add
jns
stc
mov
xchg
jge
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
scas
push
xor
movsl
js
xor
lret
cli
sub
add
mov
gs
sarl
fwait
mov
sti
aaa
ss
dec
loop
push
js
adc
loop
mov
stos
xchg
outsl
push
clc
insl
sti
add
dec
stc
inc
js
add
fldl
out
int3
std
lcall
push
mov
test
xor
out
icebp
mov
inc
mov
shr
push
push
xor
xor
xlat
or
ret
mov
dec
mov
popf
dec
int
push
add
popf
scas
adc
pop
push
rcrl
mov
jne
mov
mov
or
dec
cmp
jno
sbb
fstl
mov
xor
in
lahf
ja
sub
iret
xor
and
outsl
xor
inc
rcrb
cltd
push
sub
lock
lret
xor
scas
ja
adc
ret
xor
inc
insl
movsb
lock
inc
dec
xor
xchg
hlt
xchg
mov
shr
push
out
mov
and
arpl
adc
push
lea
and
lods
gs
leave
ret
lds
dec
loope
pop
jno
inc
je
dec
les
mov
dec
pop
sbb
sub
ljmp
mov
arpl
mov
cmp
mov
jg
dec
es
pop
inc
jp
inc
dec
cmp
push
sub
or
push
adc
ret
pcmpeqw
pop
lods
cmp
cmp
xchg
cmp
clc
sbb
fstpl
inc
jecxz
xchg
add
negl
scas
rcrb
enter
xchg
mov
call
mov
in
imul
out
sbb
clc
pop
add
lods
dec
mov
stos
into
ss
add
fiaddl
orl
xor
popf
mov
mov
jp
push
jge
test
pop
push
adc
add
jecxz
jns
mov
fcoms
xchg
cwtl
pop
aam
lods
pushf
mov
dec
adc
cli
jmp
xchg
andl
in
mov
test
push
aad
pushf
call
clc
test
xchg
inc
add
sti
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
jmp
out
pushf
stos
js
xor
movsl
push
push
or
or
cmp
cli
bound
jne
add
push
cmc
xor
and
xchg
mov
xor
outsl
cli
and
pop
daa
movsb
shl
push
mov
sbb
cmpsb
add
aam
iret
sub
dec
out
adc
outsb
sub
adc
fsubl
cmp
imul
insb
pop
out
call
dec
or
mov
and
test
andb
and
inc
fdiv
push
aaa
adc
arpl
push
mov
inc
rclb
mov
dec
and
inc
cwtl
popa
or
mov
cmpsb
mov
ficomps
dec
xorb
push
and
jl
into
push
ljmp
jo
movsb
push
frstor
push
xchg
popa
mov
mov
jecxz
push
pop
cwtl
pop
jno
xor
ljmp
sub
push
vmwrite
inc
out
shlb
sub
les
mov
cwtl
rcll
repz
add
jge
pop
jnp
xchg
les
adc
dec
sub
push
push
and
and
shll
fcomps
mov
inc
inc
cmp
mov
xor
sbb
mov
jmp
or
mov
cmp
xor
loope
aad
add
cmp
dec
jg
mov
xchg
push
aam
fwait
xchg
mov
in
mov
or
fcmovbe
hlt
inc
jnp
mov
mov
lret
xrelease
adc
mov
loop
popf
jb
xor
enter
stc
xchg
fwait
ljmp
mov
or
sarl
jge
jmp
mov
call
mov
sahf
call
sub
pop
ret
mov
xchg
mov
cmp
popf
sbb
outsl
enter
jmp
out
or
sbb
lock
dec
and
xchg
data16
mov
imul
iret
sub
movsb
ret
cmp
movl
jne
and
jmp
int
into
aad
lea
mov
js
jle
js
mov
jns
aam
mov
xchg
xchg
mov
jne
cli
aad
mov
insl
sub
test
lods
clc
fxch
push
aad
or
push
xor
cmp
ja
pusha
pop
cmp
imul
and
cmpl
add
mov
daa
xchg
mov
in
mov
js
push
push
sub
sbbl
stc
pop
sti
jge
mov
shl
test
shr
mov
jmp
xorb
mov
dec
in
test
cmp
fsubrp
jnp
and
stos
fildll
add
sarl
jne
enter
lar
jae
cmpsb
das
divb
cmpsl
gs
hlt
aad
rcll
jl
sub
in
push
fisttps
push
pop
lods
xor
cmc
inc
add
inc
inc
call
movl
pop
leave
cmp
add
xchg
in
xor
dec
mov
cltd
fimull
imulb
fcompl
js
movsb
das
mov
test
push
cltd
scas
push
stos
add
mov
cs
cli
mov
push
and
pop
stos
into
je
sub
fmull
inc
pop
dec
insb
frstor
pop
sub
or
aad
dec
aaa
fs
sti
push
xor
xchg
or
push
lds
mov
lds
out
and
sub
cmp
mov
repz
sbb
push
call
int3
loopne
stos
mov
repnz
stos
cmp
test
jg
mov
idiv
pop
inc
push
jmp
sbb
test
push
insb
jp
lds
std
popa
pop
jl
incl
inc
jp
add
mov
fsubrl
mov
xorb
sbb
jno
lret
pop
xchg
xor
aad
dec
cmpsl
out
les
cmp
jb
mov
pop
mov
out
xchg
mov
ss
rorb
jp
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
sarl
push
scas
js
xor
repnz
stos
pop
xchg
add
pop
cmp
test
ret
jle
pop
daa
rcrl
cmp
xchg
add
outsb
loop
hlt
jns
dec
and
clc
mov
repz
fwait
rcl
mov
test
insl
sub
div
testl
mov
test
out
icebp
imul
jae
in
push
sbb
lahf
and
mov
int
fcom
stc
push
sbb
add
dec
and
add
std
clc
add
jecxz
stos
rcrl
sub
loope
sbb
cmpsl
sub
cmp
cmpsb
mov
ss
or
or
dec
jns
fsubs
out
lret
adc
addr16
sar
ds
data16
inc
addr16
inc
pop
in
out
das
repnz
mov
mov
xor
lods
repz
mov
pushl
mov
mov
jae
or
ljmp
cs
mov
jnp
xchg
xchg
add
ds
xor
ret
data16
daa
jp
clc
mov
mov
mov
lret
fcomip
ror
mov
xor
sub
sub
cmc
push
sti
push
add
ds
push
filds
cli
push
adc
add
dec
xorb
pop
xor
add
lret
and
pop
mov
pop
pop
aam
jb
arpl
insl
or
shll
sub
push
shlb
nop
mov
sub
fsts
lret
out
xchg
xlat
xchg
sbb
repnz
jl
ficoml
xchg
lock
add
mov
shll
mov
or
sbb
inc
nop
or
add
xchg
pop
dec
imul
notb
adc
popa
lock
cltd
mov
icebp
shl
repz
das
lods
and
mov
cltd
popa
xor
mov
adc
test
and
jl
jmp
std
add
pop
pop
ret
cs
cmc
sub
sahf
aas
imul
fwait
cmp
jmp
cmp
mov
incb
inc
or
add
add
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
loopne
xor
js
jle
js
pop
mov
or
sub
ljmp
jne
ret
mov
cmp
push
push
test
testb
fs
insl
loope
jo
stc
mov
scas
cmp
inc
adc
jmp
ljmp
pop
out
shrb
bound
test
imul
mov
push
outsb
xchg
push
and
movsb
aam
dec
andl
mov
addr16
call
mov
mov
leave
xchg
loopne
push
fs
xchg
inc
mov
pop
scas
mov
bound
mov
mov
fidivs
fucom
lret
add
mov
std
jnp
pop
loopne
call
adc
pop
andb
es
lods
arpl
xor
adc
shlb
jge
ret
mov
in
push
and
insl
fsubrs
mov
fwait
mov
jg
or
add
push
enter
ret
int3
add
cmovp
and
xor
cmc
mov
pop
lods
mov
pop
test
sbb
pop
push
jbe
iret
outsb
mov
jne
dec
mov
mul
or
ret
loop
jae
mov
rcr
and
jmp
xor
faddl
int
mov
shll
rcll
pop
ror
xchg
mov
arpl
pop
lret
aas
aad
jnp
dec
push
lahf
in
pop
inc
mov
ds
inc
rcr
cltd
inc
or
aam
cmpsb
fnstcw
or
mov
aad
addr16
pop
xchg
in
cmp
add
adc
cmp
hlt
pusha
insb
jnp
bound
jl
out
inc
leave
lea
rcll
inc
aaa
into
adc
pop
aam
subb
mov
test
shrb
and
mov
iret
push
sub
pusha
aam
sub
lods
push
sahf
mov
dec
testl
push
sub
cmp
ret
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
inc
icebp
in
mov
js
jle
js
fdivl
ss
cmp
mov
call
jae
dec
push
and
pop
cs
or
mov
mov
add
daa
test
rorl
clc
in
cmp
in
xchg
jecxz
push
imul
rcr
xlat
dec
call
jbe
lods
movups
test
jb
in
movsl
imul
clc
pop
push
sti
shll
out
aam
sbb
jne
aad
inc
into
and
mov
hlt
lods
mov
cmp
cltd
mov
mov
mov
out
loop
or
test
dec
push
jg
and
fdivrs
hlt
sub
in
xor
dec
fadd
in
adc
dec
and
jl
jo
les
mov
sub
add
scas
fisubs
out
test
jecxz
or
cmp
xchg
std
loopne
xor
mov
daa
clc
sti
pop
mov
daa
pop
lds
mov
pop
notb
mov
add
stc
fistpll
popf
out
cli
push
mov
scas
lods
and
insb
push
aas
add
push
inc
inc
jne
sub
jle
inc
xor
sbb
cwtl
and
iret
dec
test
or
mov
mov
adc
je
add
inc
cmp
cltd
and
xchg
test
pop
mov
xchg
push
pop
pusha
add
xchg
push
jne
dec
xchg
xchg
mov
push
pop
xchg
jle
arpl
xchg
orb
nop
ret
pop
outsl
in
jbe
xchg
and
ds
and
outsl
test
data16
mov
jl
pushf
mov
push
in
inc
add
fwait
bound
xlat
cltd
subl
aad
das
lods
mov
sbb
xchg
or
dec
dec
mov
stos
push
fdivrs
jns
mov
inc
ss
xlat
pop
ficomps
in
out
pusha
stc
out
addr16
jecxz
out
push
adc
repz
daa
cmp
jge
pop
jge
sbb
pop
mov
and
sub
mov
push
jmp
xlat
lret
fcmovu
aas
cmp
push
pop
mov
js
xor
pop
pop
mov
inc
mul
gs
arpl
pop
adc
rep
daa
jo
addl
or
dec
inc
sbb
outsl
and
mov
cmc
setno
mov
cld
push
into
xchg
mov
jns
pop
or
insb
shrb
sahf
fs
int
mov
sub
data16
push
aas
out
movsl
xlat
mov
mov
mov
loop
add
or
xorl
lahf
imul
and
xor
arpl
inc
popf
adc
es
shlb
xor
pop
jp
mov
mov
push
inc
outsl
pop
inc
subl
cwtl
push
ret
int3
sub
adc
sub
adc
lods
gs
imul
daa
push
pop
add
cmp
mov
mov
jo
insb
or
or
hlt
test
es
stos
pop
cmpsb
pop
pop
sbb
out
fldl
push
xchg
call
in
fcomip
mov
sbb
xor
dec
pop
mov
xchg
cmpsb
js
or
sbb
push
leave
jge
cmp
stos
test
mov
repnz
aad
inc
push
xchg
or
mulb
mov
push
adc
mov
xchg
pusha
mov
adc
cmp
in
fldl
scas
xchg
jg
out
mov
fwait
xchg
cmp
das
mov
dec
mov
int3
jl
cwtl
sbb
cmp
mov
sahf
je
and
lock
insl
fimuls
xchg
mov
and
lods
xchg
jl
out
gs
or
in
loopne
fs
out
stc
bound
or
cmpsb
test
mov
cmp
sbb
jne
dec
push
mov
pop
add
and
xor
or
je
pop
cli
jle
sub
and
dec
inc
jge
jo
jecxz
cmpsb
mov
push
iret
call
add
push
aam
fdivrs
and
cmp
xor
pop
xor
jmp
add
ljmp
lods
add
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
popf
add
mov
js
jle
js
cmp
repz
notb
dec
mov
cmpsl
dec
jb
scas
pop
cmp
lcall
int3
shlb
cmp
insl
mov
aam
xor
jnp
sbb
sub
fldenv
mov
insl
cmpsb
insb
ret
pop
out
cmp
xchg
bound
out
ficoms
aas
addr16
mov
jecxz
and
jo
shrl
test
adc
pop
cmp
sarl
mov
jge
xchg
ss
movsl
mov
sbb
and
inc
inc
xchg
adc
xlat
pop
outsb
pushf
lods
adc
fmuls
add
cmp
mov
aaa
fucom
aas
out
xchg
mov
fwait
loopne
mov
ret
popa
shrb
lock
fisttps
imul
mov
pusha
mov
xor
cltd
pop
lretw
dec
push
push
sub
fstpl
call
xchg
dec
add
push
test
adc
cmc
lds
and
fstl
push
shll
pop
jbe
or
fdivl
ss
int3
mov
test
js
jae
aam
add
add
inc
mov
add
push
sub
aas
in
aas
cltd
aam
shrl
push
cmpsb
cld
aas
dec
cmp
insl
nop
fildll
hlt
mov
pop
testb
cmpsb
out
in
ja
in
add
cltd
jo
jle
roll
clc
mov
js
mov
pop
adc
dec
in
mov
xchg
ds
or
or
mov
push
fiadds
fisubl
mov
clc
outsb
cmc
int3
test
mov
sbb
xor
dec
xchg
cmp
mov
inc
leave
sub
adc
pop
or
hlt
fsts
sbb
fisubrl
dec
inc
jmp
lret
sahf
pop
clc
test
test
mov
adc
call
fucomip
sub
mov
rcrl
aaa
std
lods
or
push
adc
adc
aaa
test
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
neg
out
mov
xor
dec
cmp
or
cmpsb
std
jb
rcr
xchg
insb
and
or
and
adc
in
jle
or
sti
repz
or
flds
mov
sbb
stos
lds
out
xchg
lret
bound
or
pop
lods
mov
mov
fstpl
push
xchg
xlat
gs
test
jmp
push
xor
pusha
dec
pop
pop
sbb
cmp
bound
lahf
add
imul
pusha
lahf
out
ret
add
mov
enter
loope
adc
push
scas
push
sub
jns
fwait
mov
testl
shrl
in
and
daa
icebp
cwtl
pop
dec
inc
rclb
in
add
sbb
leave
sbb
and
repnz
mov
jecxz
or
aam
lds
dec
sub
and
xchg
sub
jno
mov
xor
fistpll
push
jmp
aad
mov
sti
xor
cli
xchg
stc
imul
xchg
add
sbb
cmpsb
iret
xchg
out
xchg
das
mov
es
fisubrs
enter
int3
fcompl
mov
rorb
dec
icebp
cmp
jb
xchg
cmp
sarb
push
fdivrs
xor
adc
scas
in
jo
inc
mov
dec
pop
mov
and
das
mov
cmp
dec
or
fstpt
out
je
or
jb
xor
aam
mov
mov
lds
hlt
popl
inc
ljmp
iret
inc
test
out
dec
pop
inc
cmp
mov
imulb
test
inc
xchg
xchg
pcmpeqb
sti
gs
or
mov
aaa
push
fcoms
cltd
xchg
xchg
and
adc
mov
jl
mov
xchg
loopw
and
sarl
pop
jp
adc
out
jp
aam
lods
cwtl
ja
daa
mov
sub
cmp
in
hlt
mov
add
xor
jbe
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
and
mov
js
inc
push
cli
mov
dec
jmp
add
jle
fmull
push
jecxz
jns
push
mov
sub
push
jo
jae
adc
lret
pop
outsl
insb
mov
adc
cmpsb
stos
mov
mov
or
sub
sub
pushf
xor
lock
test
or
mov
daa
cmp
sti
and
aam
push
jb
or
pop
test
jecxz
cmp
fadd
push
mov
and
jne
loope
dec
jmp
repnz
dec
mov
imul
adc
jp
fidivrs
mov
mov
mov
jnp
shl
movsb
mov
adc
rcll
ficoms
ds
leave
lret
hlt
xchg
iret
push
rcrl
pushf
mov
rcr
inc
jmp
xor
jl
sbb
cmpsl
cmpsl
sahf
push
out
mov
ror
jmp
arpl
popa
std
inc
shll
push
or
icebp
or
lret
inc
and
adc
pop
out
outsb
xlat
dec
repz
ret
jp
mov
and
pushl
dec
notb
adc
sarl
les
mov
imul
test
insl
movups
lcall
jo
mov
sub
jne
imul
repnz
sarl
mov
pusha
mov
add
movsl
popa
lcall
sarl
adc
jp
rcl
lods
movsl
into
inc
loopne
mov
adc
in
les
test
subb
lds
inc
cmp
xchg
push
test
pop
test
sahf
movsb
rolb
inc
mov
fcomip
and
pop
mov
popa
jp
jns
cwtl
jb
or
mov
in
mov
sbb
cmpsb
stc
lock
call
add
or
pop
cltd
movb
inc
adc
push
aad
jo
pop
mov
xchg
je
sbb
mov
dec
jecxz
pop
fwait
xchg
sbbb
cmc
ret
mov
ds
adc
lods
dec
cmpsb
cmpsl
aaa
mov
fldenv
shll
sbb
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
mov
xchg
movsb
popa
mov
js
push
sti
aad
testb
fsts
test
sti
dec
cwtl
adc
repz
clc
movsb
or
lds
std
movsb
clc
jb
jl
mov
lret
mov
loop
aam
pop
pop
hlt
dec
and
adc
xchg
xchg
cmp
jge
movsb
je
inc
scas
pop
and
outsl
loope
es
jne
pop
mov
inc
push
add
and
cmc
mov
shlb
rep
sbb
nop
xchg
push
push
stos
mov
arpl
lret
push
lock
cld
ficompl
xchg
mov
cmc
mov
imul
pop
pushf
mov
jg
data16
or
pushf
repnz
lret
jle
fiaddl
je
add
dec
int3
inc
mov
push
xor
mov
addr16
lods
int
jl
pop
addr16
xor
scas
xor
xor
mov
sub
mov
cmp
mov
movsl
ljmp
cli
testb
adc
popa
cmp
cmp
movsl
jo
pushf
fadds
cld
push
and
icebp
pop
test
popa
and
ja
push
mov
pop
push
inc
not
mov
mov
inc
xchg
add
xlat
mov
cmp
mov
inc
sub
sub
dec
mov
add
cmp
imul
pop
insb
lock
cmc
sbb
adc
pop
ret
mov
rorl
clc
mov
cs
out
aad
add
clc
dec
sahf
das
jae
and
lahf
movsb
std
sahf
jnp
or
shlb
push
pop
out
insb
fimull
jmp
sub
out
inc
aas
cmc
push
inc
stos
adc
inc
adc
cltd
and
fucomi
and
iret
cs
dec
push
sahf
add
scas
arpl
loopne
call
xchg
push
arpl
loop
inc
sbb
cmpsb
jecxz,pt
ja
cs
fdivl
lds
pop
add
cli
push
sbb
adc
imul
push
cmp
loope
inc
mov
pop
ffreep
pop
xor
fnsave
push
mov
cmovl
mov
mov
add
daa
xchg
add
mov
pop
mov
push
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
dec
xchg
in
js
jg
out
call
fdivrs
addl
sub
push
loope
hlt
jge
call
mov
xchg
jl
xchg
fwait
xor
mov
sbb
lret
push
lcall
nop
xor
mov
sbb
out
mov
negb
jb
xchg
fcmovnbe
in
cmp
popf
xchg
mov
pusha
jecxz
in
idivb
mov
in
or
sbb
inc
out
or
outsb
cmp
cld
and
mov
and
mov
les
aas
adc
jle
insb
lcall
mov
ret
lods
inc
aaa
mov
out
pusha
iret
clc
cli
shl
adc
shll
cld
mov
out
rolb
loop
aaa
std
sbb
inc
lea
sbb
push
int3
jno
mov
cs
mov
mov
adc
jle
shll
sbb
sub
mov
pop
push
stos
jl
test
sub
std
sarb
testb
aad
and
scas
rol
stos
cltd
je
mov
data16
cmc
pop
sahf
push
dec
int3
cmp
sub
stos
inc
inc
ds
sub
cmp
cmp
in
lcall
adcl
adc
mov
push
hlt
inc
mov
mov
sub
add
js
cmp
jl
lea
mov
cmpsb
in
jle
adc
out
cmc
test
pop
aam
and
arpl
imul
and
nop
push
sbb
xchg
jae
out
jle
jno
gs
add
add
shl
push
or
out
pusha
push
adc
inc
inc
cmp
arpl
pop
test
int3
shlb
mov
gs
js
mov
gs
adc
mov
or
cmp
enter
cmpsl
sub
fiaddl
mov
bound
push
repz
inc
cmpsb
mov
inc
or
push
dec
jl
aam
cmp
lcall
xchg
cmc
dec
popf
lret
adc
adc
roll
std
sbb
mov
loop
test
jecxz
xchg
xchg
or
aas
faddl
std
add
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shr
sbb
inc
js
in
js
pushaw
mov
pop
xchg
jp
clc
and
mov
inc
or
jno
mull
addr16
enter
add
dec
test
cmpsb
xlat
adc
repz
cmp
lods
push
add
mov
out
xorb
or
mov
sub
fwait
sbb
add
into
inc
jmp
pop
aas
push
mov
es
test
mov
test
sahf
pop
aas
lea
push
sbb
jo
aad
inc
push
dec
scas
mov
jmp
dec
jle
rorb
and
add
inc
fidivl
jl
js
mov
dec
cltd
and
sub
pop
xchg
mov
pop
into
lea
pop
addl
fdivrs
data16
adc
add
movb
jnp
cwtl
divb
ja
and
mov
mov
cld
hlt
js
jns
jp
cmp
ja
les
lret
jns
fistl
and
mov
and
ss
xchg
mov
lock
repz
xor
jb
xor
dec
je
pop
pop
xchg
pop
repz
loope
clc
or
mov
insb
repnz
scas
cs
das
pop
iret
pop
mov
xor
data16
stc
xor
or
xchg
push
gs
pushf
mov
iret
rorl
add
sbb
push
or
lods
outsl
mov
xlat
mov
mov
jmp
in
dec
in
andb
dec
or
cmp
and
and
fnsave
mov
jnp
ret
in
inc
sub
push
sub
xchg
ret
pop
and
aam
dec
dec
fdiv
sar
fcmovnb
jmp
push
add
andl
mov
xchg
stos
aad
insb
loopne
ror
lods
sbbl
jns
cmpb
dec
xchg
std
jecxz
shll
stc
xor
lods
inc
xchg
icebp
out
fcompl
mov
dec
pop
mov
mov
mov
sub
mov
or
iret
fsubs
mov
push
xchg
lock
adc
xchg
and
fnstsw
jl
mov
jp
inc
pop
cltd
mov
fmuls
aam
stos
shll
adc
in
inc
cld
loop
mov
fdivrs
pusha
pusha
mov
adc
sarl
cli
movl
jmp
ret
ret
lret
test
enter
js
jle
js
jnp
add
xor
pop
mov
cmpsb
lcall
bound
out
test
lock
pushf
pop
push
mov
sbb
push
and
jle
lcall
push
and
and
int
stos
sub
data16
out
cmp
fcomps
out
insl
xchg
bound
push
inc
lahf
cmp
mov
push
pop
adc
mov
pop
fnstcw
inc
les
add
xchg
or
movsb
jns
stc
mov
insb
sbb
jp
hlt
add
pop
lea
push
cli
add
add
int
jecxz
dec
cmp
out
xor
push
mov
cmpsb
mov
out
pop
fidivs
dec
jae
fstpt
movsl
xchg
xchg
mov
fimuls
dec
jge
pop
aaa
pop
cwtl
leave
pop
sbb
repnz
inc
sti
pop
fwait
and
inc
jmp
adc
aaa
cmc
push
out
push
inc
sub
inc
mov
push
movsb
insb
inc
mov
jecxz
in
addr16
test
push
xor
mov
jge
lret
sub
mov
sbbl
pop
mov
add
jl
dec
jl
popa
jmp
xchg
jmp
cli
shrb
in
pop
cwtl
mov
sar
push
pop
shl
and
dec
movsb
pop
les
mov
out
fldcw
imul
push
and
imul
lock
push
mov
jecxz
imul
mov
xchg
mov
cli
adc
fidivl
shll
repz
adc
les
jnp
aam
mov
pop
xchg
imul
push
and
pop
pop
cmp
movsb
mull
test
mov
fcoms
inc
jno
mov
and
and
cmpsb
inc
xchg
sarb
rolb
dec
dec
cmpsl
jp
jecxz
adc
outsl
jb
les
dec
mov
dec
cli
test
pop
cltd
popf
ljmp
loop
mov
out
xchg
push
dec
cmpsb
jns
adc
pusha
dec
hlt
inc
daa
dec
mov
jno
ret
bound
cmp
and
mov
aas
add
leave
fcoml
cmp
cld
shrb
popa
je
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
push
js
in
js
in
jl
mov
adc
mov
imul
jl
push
push
and
pop
pop
cmc
ds
fistpl
ja
cs
lret
mov
xchg
xor
cs
fstl
or
bound
fs
sarl
adc
mov
sbb
or
and
mov
aaa
outsb
xor
or
push
cld
sub
xchg
movsb
pop
mov
xchg
mov
push
xor
int3
addl
xor
daa
xchg
push
movsl
add
daa
cs
es
enter
imul
je
push
sub
je
bound
cld
jl
cmp
scas
xchg
pop
stos
lcall
das
dec
xchg
inc
fucomip
imulb
or
adc
cmp
ja
test
js
sub
aam
ds
rcrb
xorb
xchg
push
imul
adc
rorb
push
dec
pop
and
out
mov
pop
pop
fcmovbe
loopne
imul
jb
jge
inc
adc
pop
mov
mov
cmc
cmp
sbb
andl
push
or
push
cli
outsb
imul
ljmp
in
mov
les
xor
sti
cltd
das
aas
inc
mov
mov
xchg
in
and
imulb
cltd
icebp
xchg
mov
xchg
outsl
fmul
addr16
and
pop
js
std
pop
cmp
ret
testb
xchg
mov
negl
aas
pushf
lret
jb
test
jno
mov
mov
or
jns
xchg
rol
mov
test
ljmp
popf
push
lods
xor
xor
test
fsts
jle
ret
mov
divl
mov
int
movsl
push
jb
mov
frstor
push
outsb
test
jo
adc
iret
and
inc
jbe
pop
addr16
xchg
dec
push
inc
jno
popa
xor
stos
scas
push
push
cmp
test
mov
mov
ljmp
add
repnz
pop
leave
ss
or
out
lock
jl
mov
adc
sub
aad
shlb
int3
loop
out
jl
or
dec
lods
sub
mov
cmc
sub
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
in
adc
cmpb
js
jle
js
enter
in
int3
xchg
add
push
shl
data16
insb
mov
push
orb
jno
xor
mov
xchg
addr16
fmul
sti
dec
popa
rorl
in
dec
lret
es
adc
dec
je
aas
mov
fsubl
pop
xchg
repz
mov
mov
std
mov
jg
fsts
mov
sbb
push
add
lock
xchg
mov
pushf
or
lcall
cmc
shrb
xchg
nop
sbb
cld
jbe
mov
jge
mov
mov
fsubp
cmpsb
lret
push
mov
mov
inc
int3
push
or
or
inc
sbb
cmp
pop
call
cmp
mov
inc
add
and
repz
sbb
inc
dec
sbbb
hlt
popf
add
sti
inc
dec
in
push
clc
or
or
cmp
mov
sbb
jns
test
arpl
pop
sub
in
repz
clc
cmp
sahf
dec
test
call
push
shl
cmpsb
xchg
inc
push
outsb
inc
lock
cltd
pusha
pop
insl
mov
add
pop
lea
and
cli
pop
or
out
mov
add
lahf
or
fwait
insl
std
scas
ds
and
je
add
cli
bnd
sbb
imul
xor
out
push
imul
add
sbb
insl
jo
mov
ds
adc
xor
roll
std
jno
xchg
test
push
inc
push
fcmovu
movsl
das
rcll
add
push
fmulp
mov
aaa
fsubrp
icebp
in
sbb
dec
bound
repz
mov
rcrb
jnp
cmp
ret
sbb
popf
lea
test
xchg
sub
cld
sarb
aam
xor
in
sbb
cmc
mov
roll
imul
push
lock
std
xchg
imul
enter
andb
pop
fs
movsb
fadds
cmp
push
push
icebp
imul
mov
stos
subb
and
inc
jno
cmc
movsl
mov
fsub
in
mov
xor
sbb
xchg
or
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
push
nop
push
pusha
out
js
in
js
jb
pusha
mov
pop
data16
pop
and
stos
sbb
repz
pop
nop
push
mov
in
cli
and
sub
mov
ljmp
mov
xor
insl
popf
js
mov
xor
pop
orl
leave
ficomps
or
cmp
aaa
mov
or
jnp
push
in
into
sbb
int
fwait
shl
dec
mov
adc
jo
inc
shl
scas
cmp
pop
push
mov
in
clc
iret
push
mov
inc
jno
dec
ja
aas
pop
in
pop
imul
idivb
into
xlat
sub
push
rcl
push
adcb
xchg
sbb
test
and
xor
add
ljmp
mov
push
out
je
test
data16
sbb
and
xchg
sub
loope
fwait
stc
mov
sub
adc
test
mov
cld
mov
lahf
xorb
jnp
fadd
icebp
sbb
movsl
push
mov
loop
pop
inc
shrb
mov
ficoml
mov
pop
pusha
mov
cmp
je
xchg
push
cli
jecxz
ret
cmpsl
jle
xor
push
xor
ds
out
adc
xchg
push
iret
loop
adcl
xchg
leave
lret
rorl
loop
dec
in
pop
jns
pop
xor
sub
clc
cmp
and
push
aad
nop
jge
movsl
shll
popf
inc
sub
rcrl
test
xor
scas
movsb
popf
dec
stos
pushf
add
jecxz
adc
or
sbb
jns
jmp
xor
popa
cmp
or
push
enter
push
outsl
ja
jns
jl
testb
add
xor
mov
ljmp
push
aad
sarb
xchg
push
or
lret
jmp
sbb
into
stc
push
int
dec
into
dec
dec
lcall
or
ret
bound
out
insl
dec
fnstsw
inc
mov
lea
fcompl
push
aaa
loope
cli
mov
mov
sub
sbb
mov
cs
dec
and
ss
aad
push
int3
sbb
inc
lds
lock
dec
pop
fidivs
pop
mov
adcb
mov
dec
or
in
add
jmp
ret
int
into
xchg
jle
popa
and
js
in
js
xor
shll
ds
cmp
call
lds
sahf
and
popf
aaa
jns
sub
pop
and
sub
sub
gs
push
loop
push
cmpsl
aam
mov
xchg
scas
push
leave
pop
pop
dec
lods
add
shlb
push
jg
xlat
in
sbb
lea
shlb
imul
stos
sub
hlt
fwait
jbe
or
pop
sub
push
enter
leave
icebp
stos
clc
xchg
les
mov
push
push
cmp
lods
lods
adc
ljmp
dec
clc
mov
lods
push
jnp
int
out
mov
xchg
pop
je
mov
shrl
inc
add
pop
fildll
in
or
fldcw
lahf
jnp
jae
sahf
popf
aad
lock
into
mov
xchg
jbe
xor
js
inc
fwait
lcall
inc
push
cli
xchg
dec
mov
sarb
mov
popf
pop
pop
iret
pusha
sbb
jne
inc
orl
test
test
out
movsl
outsl
add
scas
xchg
dec
xor
ds
jne
in
dec
gs
icebp
out
data16
loopne
jl
lods
aad
dec
pop
cmpsb
mov
fcmovnb
jbe
push
loope
pop
and
and
pushf
fdivr
adc
pop
dec
lds
rcr
xbegin
xorb
push
call
mov
xchg
cmpsl
pop
test
xor
xchg
push
dec
cmp
jns
stos
sbb
negb
jp
in
mull
pop
cmp
lods
mov
in
jo
int3
adcl
sbb
mov
push
xchg
adc
mov
fists
cmpsb
ret
orl
ret
out
imul
roll
xchg
repnz
xor
fwait
es
cmp
hlt
nop
add
adcb
push
pop
shrb
or
mov
ret
jl
pop
xchg
fcompl
mov
jmp
mov
mov
cmc
cmp
pop
mov
adc
lds
iret
jne
dec
sarb
arpl
mov
cmp
movsb
pusha
lea
adc
pop
lods
adc
int3
cmp
jp
addb
and
test
leave
aas
inc
and
es
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
xchg
xchg
in
js
mov
nop
or
jae
pop
inc
xchg
mulb
and
push
adc
lock
sbb
cmp
jo
insb
leave
or
test
out
data16
fidivs
fadds
ret
jnp
push
push
fdivs
xor
lret
loopne
xor
cld
outsb
jecxz
ss
adc
je
push
jb
arpl
ret
jns
mov
cmp
add
fs
in
fcomps
push
mov
jmp
sahf
movb
fadds
insb
cmpb
ljmp
loop
mov
cmp
mov
xor
mov
pop
daa
sub
shl
xchg
sbb
iret
lods
xchg
mov
mov
pop
gs
jle
scas
scas
push
stc
inc
movsb
inc
inc
popa
pop
lds
sbb
ret
mov
cmp
xchg
les
jle
in
cmp
test
clc
jns
push
push
cltd
rclb
jle
sahf
xchg
loop
lahf
filds
xor
ret
cmp
or
lret
test
xchg
in
imul
cs
inc
filds
add
or
hlt
insl
sbb
loopne
int
or
cld
adc
push
les
sub
xlat
hlt
fdivl
ss
lea
xchg
mov
sub
cmpsl
jbe
popf
scas
jp
add
mov
insl
mov
xchg
and
xor
push
jecxz
enter
inc
loopne
push
divb
sub
sahf
loope
gs
mov
sbb
call
mov
mov
and
or
loopne
testl
lcall
test
andl
cmpsl
cmp
xor
clc
call
cwtl
loope
sbb
pop
dec
mov
jecxz
insb
fwait
stc
jae
ds
lahf
mov
daa
xchg
test
rolb
loopne
test
dec
push
add
int3
mov
push
xchg
inc
mov
aaa
aad
jg
xor
imul
jbe
std
inc
into
inc
inc
test
lds
xor
nop
add
test
leave
push
or
les
and
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
push
out
or
cmpsb
push
js
in
js
fdivs
pop
mov
adc
lret
popa
in
pop
mov
pop
roll
push
add
mov
xlat
or
inc
sarl
add
je
dec
icebp
mov
scas
mov
sbb
mov
sbb
xor
or
cmc
outsl
into
sub
movsl
sub
inc
pop
bound
scas
scas
mov
insb
cmp
pfcmpge
sbb
lods
pop
cli
cmpl
out
dec
sub
pop
int
mov
pop
push
adc
pushf
mov
adc
nop
push
loopne
jle
jb
mov
xchg
sbb
cmpsb
push
xor
insb
insb
test
xchg
or
pop
mov
mov
les
or
push
loop
ja
and
mov
pop
add
jmp
push
popa
mov
pop
lds
mov
shll
sbb
cld
xchg
fdivrs
loopne
es
add
mov
pop
popa
bswap
sbb
test
jne
andl
bound
pushf
adc
iret
mov
jecxz,pt
xor
cmp
mov
arpl
dec
or
xchg
mov
xor
shr
jb
test
fiadds
push
inc
jmp
jb
stos
jecxz
pop
jmp
pusha
fsubrl
adc
jb
mov
aad
or
loop
dec
ja
lret
pusha
adc
xchg
sub
ljmp
jnp
jnp
lret
sbb
jno
xchg
add
lret
fists
push
lret
and
or
dec
pop
push
in
fs
pmaxsw
in
fnstenv
test
sub
push
dec
push
adc
lea
fdiv
jns
out
mov
pop
adc
clc
hlt
add
adc
add
ret
iret
sbb
iret
stos
bound
iret
inc
xchg
mov
clc
out
cmp
ss
xor
or
popa
dec
ds
movsb
call
in
adc
push
insb
roll
adcb
lods
stos
jbe
movsb
pop
dec
lret
ss
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
test
push
js
in
js
push
aad
lods
pop
cmpb
and
mov
dec
jge
pop
ja
or
adc
repnz
in
imull
int
sbb
das
mov
pop
sbb
mov
xor
sub
pop
loope
lret
mov
mov
inc
adc
fucomi
lods
fwait
mov
shrb
cmpsb
push
mov
sub
aad
push
dec
pop
decb
loopne
mov
cmp
lret
nop
inc
mov
sbb
cmp
mov
cmp
cld
pop
cli
or
bound
fisttps
inc
adc
movsl
test
enter
adc
pop
shlb
xlat
inc
sbb
and
iret
enter
dec
mov
xchg
dec
fs
dec
ficompl
stos
mov
adc
fstpt
push
sti
push
lods
sahf
push
lret
loope
jo
lcall
test
xchg
dec
fsubl
mov
nop
sub
test
mov
jge
cltd
clc
pusha
adc
bsf
sub
adc
adc
pop
sub
xchg
adc
je
add
pop
add
push
mov
sbb
pusha
repz
pop
mov
add
imul
jnp
sti
loop
and
cmp
dec
xchg
lds
jle
sub
test
push
mov
cmp
dec
push
fimuls
sahf
ja
xor
test
shlb
adc
add
xor
sti
bound
out
dec
xor
dec
fwait
les
lock
push
inc
jge
ja
jae
add
andb
ficompl
push
mov
dec
mov
rcrl
daa
pop
cmp
or
call
sub
lock
or
imul
jae
cmp
cmp
rcrl
add
insb
movsb
test
jae
xchg
inc
enter
and
cmp
repz
inc
xchg
ljmp
ds
pop
and
and
adc
sub
mov
and
pop
cmpb
movsl
xor
inc
dec
loope
call
ret
xchg
outsb
cmp
jb
xchg
aaa
sbb
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
xor
js
in
js
mov
sub
enter
xchg
loopne
ret
scas
ss
push
lahf
mov
sbbl
int
adc
xor
fcmovbe
ljmp
shll
fdivrs
movsl
add
lds
in
or
aas
int
xchg
icebp
cmpsl
lods
ja
scas
mov
fiadds
push
cmp
jl
cltd
and
mov
into
fistl
pushf
pop
pop
pop
jecxz
mov
in
push
lds
cs
enter
mov
push
fsubrp
cmp
mov
inc
push
std
push
outsb
loopne
jecxz
inc
mov
sbb
xchg
cmpsb
xor
inc
sbb
dec
mov
mov
out
dec
xorb
adc
add
sti
xor
repnz
lcall
sbb
test
mov
add
or
fld
cltd
sub
sbb
mov
pop
aam
mov
mov
pushf
jns
dec
lock
sub
and
xchg
les
popa
leave
loop
cmp
sub
stos
xor
and
mov
xchg
sub
out
mov
inc
lods
and
xchg
inc
adc
xchg
lods
movsl
pop
std
push
dec
cmp
cs
gs
gs
mov
mov
jns
popa
mov
fsubr
loope
aam
rcr
roll
jmp
pop
aaa
sub
pop
ljmp
push
mov
sub
sbb
out
sub
mov
cmc
rcr
stc
pop
jp
int
lea
mov
aad
ljmp
mov
push
mov
pop
push
js
mov
mov
jbe
mov
fwait
adc
jmp
jmp
xor
addr16
scas
sbb
sbb
mov
push
mov
loopne
jge
and
cld
push
insb
into
pushf
cmpsl
cld
jecxz
fs
push
inc
pop
dec
test
add
xchg
jae
cltd
jbe
jbe
pop
notb
mov
loopne
sbb
pop
pop
inc
out
jl
pop
xor
xor
ret
ja
mov
es
push
and
jno
cli
out
jge
aaa
and
push
pushf
shll
sub
xor
out
loopne
cmp
lahf
mov
adc
stc
jmp
int3
into
ror
rcl
into
jbe
inc
sub
js
in
js
arpl
xchg
jge
xor
fisubrl
jle
popa
mov
and
adc
sub
push
ja
mov
aaa
sbb
daa
dec
testl
and
jl
add
push
push
inc
mov
jge
adc
sti
pop
shrb
shlb
pop
sub
jnp
sub
gs
loope
xchg
inc
fcompp
fwait
cltd
pop
scas
cmp
inc
lret
mov
cmp
or
movsl
call
mov
repz
sub
lret
or
test
dec
pop
aaa
sub
icebp
arpl
push
aas
mov
mov
out
push
call
ja
adc
mov
and
xor
pop
addr16
arpl
jb
push
dec
or
push
pop
std
flds
xchg
stos
mov
mov
xor
rcrb
lea
aas
adc
sub
pop
mov
pop
jge
enter
mov
mov
orb
test
cwtl
and
test
jle
xchg
add
iret
out
sbb
lcall
or
xchg
iret
out
idivb
sahf
fisubl
cmp
adc
in
xorl
je
adc
xchg
sarb
jne
mov
mov
sbb
in
shlb
jg
bound
fwait
pop
loop
or
repz
out
orl
mov
jl
fildl
fs
mov
jb
imul
lods
stos
sbb
and
int3
cmp
cmp
or
shrb
sub
and
into
aaa
jge
loope
pop
xor
inc
pop
andb
cmp
cmp
mov
mov
std
addb
cli
xchg
ss
aam
sub
hlt
sbb
pop
jne
popa
add
shlb
pop
mov
aaa
or
xor
mov
mov
adc
js
cli
mov
int
jnp
sub
popf
pop
enter
ficomps
hlt
lods
call
jmp
jns
clc
enter
fsubrs
add
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
loopne
out
rcrb
js
jle
js
faddl
and
jle
js
aas
add
and
fisttpll
dec
push
fsqrt
repnz
jecxz,pn
pop
loop
xchg
stos
in
lahf
je
sub
ret
stc
add
add
and
in
inc
inc
imul
notl
sub
cmp
sbb
adc
lret
ds
es
dec
fwait
sbb
es
lahf
popf
mov
das
mov
mov
das
bound
sti
jmp
mov
fimuls
mov
inc
into
cltd
ret
and
fcomps
jo
jnp
sub
daa
xor
inc
dec
or
mov
shl
or
cmc
test
or
xchg
cmp
dec
push
scas
pushf
lcall
jb
xlat
mov
xchg
js
cmpsb
inc
into
cmpsb
stos
std
adc
sub
nop
arpl
xor
hlt
lods
adc
clc
xchg
shll
test
mov
jo
imul
dec
jns
shl
inc
sarb
aaa
adc
mov
js
fbld
loopne
adc
ljmp
adc
push
fsubl
fbstp
lods
inc
pop
and
cmpsb
lock
or
push
xchg
sub
inc
fwait
mov
stos
sahf
ret
out
movb
sub
jns
mov
mov
inc
add
repz
add
shrb
hlt
pop
jbe
inc
or
dec
sbb
daa
scas
fisttpl
es
mov
popa
imul
cmp
push
mov
int3
and
mov
lods
ljmp
je
pop
aad
inc
jecxz
sti
fsubl
or
fstp
call
pop
subb
add
in
and
jb
pop
sbbb
clc
mov
or
stos
js
sti
aad
fwait
dec
es
dec
icebp
jmp
inc
push
arpl
cmp
dec
push
push
inc
mov
adcb
cmpsb
in
das
jne
lea
xchg
out
pop
jp
sbb
and
mov
scas
push
repz
lea
aad
pushf
pop
add
xchg
sbb
adc
icebp
push
xchg
sub
fdivl
loopne
pop
adc
add
push
sbb
xlat
ljmp
dec
imul
hlt
sbb
mov
mov
sub
cmp
ja
jmp
rol
xor
pop
push
jo
mov
jle
js
outsl
adc
insl
ja
pushaw
and
pop
mov
and
fstps
xchg
pop
cwtl
sbb
xchg
mov
sarl
rcrl
outsb
dec
push
and
dec
pop
jae
adc
ret
dec
jo
arpl
shrl
mov
and
nop
addr16
insb
or
sbb
jae
loope
popa
cmp
push
fldenv
cmp
adc
insl
ffreep
cmpsb
stos
sub
push
lret
je
or
and
xchg
cmpsb
cs
ljmp
and
sahf
outsb
mov
or
pop
cltd
dec
mov
adcl
insb
je
push
pop
or
rorb
pop
out
scas
cmpsl
adc
push
mov
cli
cmc
mov
ret
adc
dec
daa
push
add
jns
jp
data16
ss
sub
inc
mov
mov
lds
jge
div
leave
ror
cltd
rorb
pop
xor
sub
jmp
pop
push
dec
push
xor
ja
xor
cmp
pop
sbb
popa
adc
jecxz
push
adc
xlat
adcb
ret
fstps
out
add
jecxz
rolb
sbb
pop
outsb
add
cmp
lock
fisubs
mov
cmpsb
jmp
add
jno
pop
arpl
cmp
int
ds
cmpsl
mov
aam
in
jmp
sbb
enter
mov
and
mov
dec
cmpl
negl
loop
out
stos
mov
outsl
sub
in
or
movsb
int3
iret
lea
mov
push
xchg
mull
xlat
xor
add
sub
mov
jae
je
push
mov
in
das
pushw
and
dec
ja
and
fiaddl
mov
enter
adc
loop
ss
fsub
mov
divl
mov
inc
mov
aad
or
mov
and
mov
stos
jl
mov
daa
cmp
and
jno
dec
addb
rolb
mov
jmp
mov
mov
sub
stos
repz
pushf
and
lret
adc
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
lret
mov
js
in
js
xchg
cmc
fsubl
mov
mov
adc
hlt
xchg
xchg
mov
das
lods
mov
repnz
sbb
repz
cmp
inc
sbb
je
pop
setno
ficoml
in
jno
dec
sub
and
xchg
aad
mov
jbe
jg
cmp
or
inc
mov
addl
idivl
adc
leave
std
xchg
jp
sub
les
add
add
jnp
ret
mov
xor
lea
shrl
push
data16
push
xor
mov
out
leave
jecxz
aam
rcr
stc
lret
mov
testl
ds
or
sub
push
push
lods
pushf
imul
test
fnstcw
lds
jg
sub
cmp
mov
test
call
dec
daa
test
movsb
stos
jne
jae
hlt
jno
mov
scas
adc
jnp
pop
dec
mov
in
test
cmp
push
faddp
stos
inc
leave
int
push
mov
aam
or
int
imul
xor
out
stc
mov
cmp
mov
push
repz
xchg
lock
fs
test
rclb
inc
pop
mov
mov
mov
mov
push
adc
pop
outsl
xchg
icebp
pop
push
mov
stos
sbb
and
movsb
xor
ss
imul
push
sbb
add
mov
xchg
pop
stos
and
arpl
je
mov
pusha
test
inc
sar
and
fcmovnu
sbb
jno
imul
notb
xor
aas
or
xchg
test
mov
push
stos
popf
sbb
dec
adc
pop
xor
or
iret
ret
in
push
mov
mov
inc
and
mov
fidivrs
and
inc
xor
inc
stos
sub
pop
test
add
add
sub
scas
dec
mov
inc
cmpsl
jnp
mov
out
cmp
imul
sub
xchg
cmp
pushl
in
inc
pop
or
add
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
mov
js
in
js
and
xchg
movsl
inc
jmp
mov
pop
xchg
fdivl
or
mov
push
out
ds
mov
xor
xchg
repnz
cld
into
or
mov
cmp
lahf
pop
in
adc
add
xor
push
jae
add
gs
pusha
subl
pop
adcl
and
mov
dec
fimuls
mov
fildll
xlat
jo
jo
inc
sub
outsl
push
or
ss
cwtl
cmpsl
lahf
shll
or
jbe
and
mov
cmp
in
mov
pop
in
sti
mov
mov
les
jmp
test
or
fmull
outsb
cli
or
popa
xor
mov
jno
andl
stos
cltd
icebp
lds
and
mov
fwait
adc
xor
mov
mov
mov
dec
testb
dec
in
fisubl
mov
pop
ret
stos
jne
bound
aaa
jg
sbb
out
push
xor
cmc
mov
adc
mov
xchg
mov
stos
addb
adc
dec
dec
jno
mov
mov
call
sub
imul
bound
sbb
dec
shlb
es
xor
mov
or
mov
mov
push
push
and
lds
cmp
xchg
add
ja
aam
mov
pop
add
xchg
les
filds
and
insl
clc
stc
dec
dec
out
out
int3
xchg
pop
in
cmp
jmp
push
xchg
xchg
js
sbb
jl
cmp
sub
pand
loop
push
cmp
add
daa
bound
xor
xchg
inc
clc
pusha
leave
dec
daa
mov
dec
cld
cmp
inc
xchg
cmpsb
rep
cmp
adc
movsl
dec
sbb
fwait
enter
adc
aaa
xchg
out
loope
lods
aad
mov
or
mov
cli
adc
testb
das
bound
fwait
ds
xor
inc
outsl
inc
movsb
adc
insb
leave
loope
in
outsl
sub
cmova
sbb
cmc
xchg
cs
imulb
popa
dec
rcl
mov
push
ficoml
mov
daa
pop
out
cmp
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
jmp
js
in
js
repz
inc
and
push
les
push
leave
mov
das
shll
add
icebp
inc
mov
xor
jnp
stc
out
cmc
jo
inc
int
test
adc
lock
jnp
lcall
mov
ss
sbb
enter
fdivs
mov
lretw
xor
push
aas
pop
jp
adc
dec
out
xchg
aaa
adc
mov
into
push
mov
xlat
add
sbb
cwtl
inc
icebp
push
scas
sbb
clc
mov
pop
cli
mov
mov
sub
mov
dec
push
cmpsl
and
xor
arpl
jg
pop
in
mov
add
mov
inc
fs
fstl
adc
ss
xchg
and
sbb
sbb
ret
imul
in
fs
out
gs
nop
or
adc
jmp
int3
inc
push
insb
push
pop
xchg
push
movsb
test
mov
loopne
lahf
sbb
and
xchg
add
lods
xor
push
aaa
or
cli
pop
jmp
jns
movsb
sub
aaa
xlat
sbb
addr16
dec
inc
jnp
fdivrs
and
jb
xorl
jns
ret
jnp
dec
mov
fwait
and
ds
fwait
clc
rcrb
jp
add
repnz
cli
inc
ret
icebp
daa
add
insl
lea
inc
cmp
lock
jne
pusha
cwtl
pop
push
pop
adc
es
lea
addr16
rcr
jle
pop
dec
roll
loopne
rol
popa
or
aam
xchg
dec
popf
jge
out
mov
stos
popa
cmp
aad
and
xor
sahf
jmp
test
ss
ds
mov
cs
test
hlt
xchg
push
fwait
shll
jnp
xlat
sub
cld
setl
sbb
stos
jbe
dec
roll
je
mov
rcrb
lcall
sub
lods
pop
mov
jne
insl
dec
outsl
in
sub
jno
test
rcrb
or
jae
ljmp
cs
push
xorb
cld
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
jle
or
js
jle
js
mov
ret
cmp
mov
mov
adc
nop
lods
xor
arpl
iret
mov
adc
fcmove
xchg
dec
test
or
adc
adc
test
in
test
bound
nop
lods
adc
into
je
jp
in
and
mov
lea
das
xchg
loopne
sbb
mov
mov
push
icebp
xchg
scas
movsl
ds
cmc
ljmp
inc
cmp
incb
enter
sbb
jb
mov
andb
popa
lea
lea
cmp
pop
pop
clc
push
xlat
int
pop
push
addr16
roll
xchg
lahf
mov
sbb
dec
mov
js
loop
enter
leave
mov
add
or
push
mov
in
pop
jg
lods
pop
lahf
iret
aaa
int
pop
lahf
movsl
jle
clc
mov
sub
jle
jne
ret
push
negl
add
daa
sbb
rcrl
movsl
or
movb
rolb
cmpsl
jns
in
mov
adc
pop
dec
std
jo
out
push
and
xchg
fadds
ljmp
pop
sar
in
jno
stos
inc
orb
and
lret
popf
add
pop
fnstsw
xlat
adc
lods
jmp
pop
fnsave
pop
in
or
daa
mov
lahf
ss
cmc
add
jo
mov
xchg
and
iret
rorl
fsubrp
sti
pusha
in
inc
ret
and
mov
sub
dec
push
xlat
mov
fiaddl
jl
sub
mov
movsl
scas
sbb
je
repnz
or
orl
cwtl
popf
push
mov
adc
xor
push
je
dec
inc
dec
fdiv
xchg
or
jo
xchg
jno
cwtl
pcmpeqd
mov
jb
xchg
cmpsl
adc
xchg
or
pop
je
cmp
push
int3
fs
push
xor
pusha
xchg
mov
sub
cmpsl
xchg
es
sarl
cltd
cli
mov
cmp
out
dec
adcl
inc
dec
popf
imul
dec
push
adc
outsb
shll
xchg
xor
stc
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
fcoml
jge
push
imul
dec
outsb
inc
dec
xor
nop
ljmp
cmpb
jg
fisttpl
mov
lret
int
mov
js
mov
and
mov
ds
js
sub
push
loope
ja
mov
jle
mov
cmp
gs
cwtl
push
enter
popf
push
xor
xlat
push
jnp
mov
out
pop
sti
jp
hlt
jb
dec
cld
xchg
insb
mov
lods
sub
dec
loope
icebp
jnp,pt
mov
cli
xor
xchg
adc
adc
cmp
xchg
sub
test
mov
mov
mov
loopne
aas
add
aad
subl
or
mov
pop
out
cmp
cltd
jle
mov
jne
ss
pop
jl
cmp
and
push
aaa
inc
bndstx
loope
jecxz
ffree
arpl
xchg
fisubl
pop
xchg
mov
cs
ds
lret
cmc
std
rorl
dec
xchg
mov
aad
and
ret
in
lds
popf
outsb
divl
shlb
loope
into
iret
jne
outsb
pop
movsb
mov
mov
stc
mov
arpl
lods
popa
add
and
jae
into
lcall
adc
push
dec
sbb
shll
sbb
xor
shrl
out
jle
add
adc
push
and
xchg
jmp
imul
jno
adc
dec
cmp
in
fldenv
lret
call
loop,pt
fisttpl
jl
jns
jp
jl
popa
imul
cmpsl
arpl
rep
and
push
dec
adc
xor
rclb
jecxz
inc
jb
xlat
cmpsb
jl
rorl
pusha
jg
in
lret
xchg
inc
push
loopne,pn
push
xor
sbb
lcall
int3
push
fwait
inc
cmp
orb
inc
jno
pop
xchg
mov
int
in
loop
pop
or
lret
adc
repnz
xor
movsb
adcl
xchg
ja
push
fnstsw
or
in
je
dec
cltd
pop
in
bound
outsl
pop
bound
icebp
stos
dec
xchg
daa
push
cwtl
in
pop
sarb
mov
fiadds
jmp
iret
ret
rol
fcmovnu
mov
dec
es
cmp
jle
js
mov
outsb
insl
inc
lods
stc
subl
loope
bound
jg
jle
popa
repnz
test
and
mov
lret
cmp
and
lcall
out
je
loope
ljmp
fwait
and
push
sub
adc
mov
cmp
jecxz
mulb
in
jno
pop
int3
jb
push
loope
repnz
cmp
cmc
push
test
sub
out
aam
call
dec
sub
pop
repnz
inc
jge
push
mov
jp
jno
loop
int3
jae
mov
scas
rcrl
xlat
push
out
mov
sbb
jne
gs
jne
in
push
mov
mov
fistpl
xchg
aam
rcrb
push
mov
clc
fidivl
arpl
sbb
or
sbb
inc
out
and
cmp
pushf
popa
xchg
add
in
jecxz
lea
cmp
dec
mov
nop
mov
daa
jns
add
cmp
add
pop
xor
push
mov
jno
and
add
jo
arpl
xlat
lcall
daa
inc
repz
xchg
mov
fiaddl
mov
push
pop
subb
mov
mov
test
sbb
or
iret
sahf
lret
cwtl
fistpl
push
imul
inc
retw
mov
hlt
and
gs
mov
inc
les
mov
dec
push
add
fdivrl
jns
xchg
push
ja
mov
cmp
in
cmpsl
outsb
mov
popf
es
lods
dec
jp
push
jp
mov
cli
in
stc
int
ss
ljmp
push
sub
xor
fcmovbe
inc
fwait
enter
insb
jnp
fstpl
leave
cld
jbe
push
pop
mov
in
das
je
or
fstl
and
lret
pushf
rolb
aad
jb
add
repnz
lret
pop
mov
mov
rorb
mov
es
mov
sub
mov
fimuls
dec
push
sub
jnp
mov
clc
das
cltd
adc
mov
pushf
cs
cwtl
adc
inc
hlt
cmp
mov
jmp
int
ror
fcmove
leave
sub
mov
insb
js
in
js
pop
in
adc
ljmp
movsb
arpl
adc
xchg
sub
aad
cld
mov
mov
leave
and
dec
mov
das
mov
js
fstpl
cmc
xor
out
push
popf
or
loopne
jbe
test
sbb
call
scas
or
outsb
xor
and
sbb
aas
out
mov
lods
cwtl
inc
incl
ljmp
aas
lods
inc
cmc
mov
dec
and
rcll
ljmp
arpl
std
lock
sub
shlb
mov
jb
cmpsl
scas
adc
and
inc
imul
cli
rcll
mul
jle
mov
rep
and
mov
push
aaa
cmp
xlat
sbb
jo
ret
xchg
fnstcw
jno
and
or
fisubs
pop
hlt
lea
dec
push
cld
ret
lock
into
je
int
xchg
jo
push
or
hlt
fwait
mov
sub
sub
cwtl
dec
mov
shlb
enter
sub
sbb
leave
int
and
gs
mov
outsb
jns
insb
int
inc
dec
outsb
jge
push
xor
adc
mov
int3
in
lret
lea
pop
xor
sub
outsb
mov
mov
dec
or
xor
out
cmp
aaa
sbb
hlt
cs
cmp
dec
pop
lcall
add
ret
pop
inc
test
shr
imul
push
or
xlat
and
dec
jbe
sub
xorl
xor
mov
bound
adc
dec
jnp
mov
xor
clc
enter
jmp
pushf
inc
or
pop
xlat
int3
cmp
divb
lret
mov
in
xor
popf
jno
jle
les
xchg
int
imul
out
sub
xor
daa
or
mov
movsb
and
mov
nop
testb
movsb
pop
inc
hlt
and
clc
cmpsb
sbb
fbstp
sub
stc
ja
xor
cmp
pushf
jne
cmp
mov
and
lret
mov
adc
push
and
mov
xor
add
jmp
mov
xor
add
jmp
ret
xlat
data16
outsb
and
pop
jno
js
jle
js
jle
add
fidivs
outsb
stos
sbb
mov
inc
adc
xor
mov
mov
mul
jmp
sbb
pop
mov
adc
mov
and
cli
rclb
jnp
rcll
inc
fdivr
mov
ret
adc
cmp
pop
xor
xchg
jb
xchg
mov
jb
jne
mov
imulb
inc
push
pop
lcall
cs
inc
mov
lret
adc
sbb
push
mov
sahf
jp
sub
into
jb
adc
cltd
cmp
loopne
xchg
push
push
adc
pop
into
cmc
subb
push
jnp
lret
pop
sub
mov
jg
frstor
mov
xor
les
into
pop
stos
andl
sbb
pop
outsb
sub
jge
xchg
out
inc
jno
sub
jns
mov
dec
dec
and
in
mov
xor
xor
lret
mov
xchg
subb
mov
add
adc
dec
adc
enter
in
push
inc
push
xor
or
inc
scas
mov
imul
xor
push
jns
gs
xor
mov
pop
jae
icebp
push
std
lcall
jmp
fs
mov
icebp
inc
das
movsb
pushf
rcrl
jnp
mov
fldenv
ret
stos
fcompl
xor
into
outsb
shrb
loopne
mov
fmull
jp
das
ljmp
cmpsl
dec
inc
jl
mov
inc
and
inc
sub
xchg
or
imul
and
orb
push
ljmp
lods
jl
add
inc
lea
xchg
divb
and
push
pushf
fcoml
hlt
mov
lret
outsl
daa
shlb
or
adc
jae
sub
incl
inc
jmp
dec
xchg
pop
popa
inc
sub
ret
push
cmp
ljmp
test
les
icebp
mov
cmpsb
repz
inc
mulb
pusha
lods
out
mov
cmp
ret
aas
inc
cwtl
imul
in
cmpl
loop
xchg
repz
jp
dec
enter
xchg
sub
mov
xchg
cmp
addl
add
int3
xlat
enter
shll
std
xchg
or
cld
ja
js
jle
js
int3
mov
out
data16
leave
inc
push
dec
sub
pushf
or
dec
les
jnp
jb
fisubs
fwait
mov
mov
inc
pusha
push
out
sar
adc
xor
sarl
pop
fwait
xor
or
hlt
mov
sub
fisttpll
stos
mov
ljmp
repz
mov
mov
inc
mov
ljmp
inc
xor
sub
popa
sbb
mov
std
mov
lock
and
lret
out
dec
fsubrs
push
cltd
fbld
mov
movsb
ljmp
mov
call
ja
mov
roll
dec
pop
adc
and
mov
das
jne
mov
repz
sub
enter
mov
push
loopne
bswap
aas
mov
int3
pushf
lea
mov
mov
addr16
dec
or
jne
ljmp
jp
lods
and
lcall
popa
dec
mov
repnz
cmc
data16
sub
lds
jp
pusha
clc
stos
loop
addb
test
stos
and
adc
adc
nop
adc
lock
mov
jg
push
int
or
dec
test
inc
test
mov
xchg
mov
push
sub
fldt
and
adc
int3
push
adc
push
imul
inc
push
mov
mov
sub
insl
mov
outsb
pop
aas
mov
mov
adc
mov
cmp
dec
sub
jns
adc
adc
push
inc
push
lock
fdivl
jbe
fwait
xchg
clc
sbb
jns
cli
inc
mov
test
and
inc
ljmp
cmova
lret
add
xlat
cmp
shll
int3
adc
push
data16
ret
sub
dec
and
adc
push
in
mov
addl
dec
fsubl
cmp
fwait
mov
shl
addr16
nop
pop
outsb
sbb
faddl
mov
adc
cld
bound
std
sahf
or
data16
aad
shlb
mov
mov
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
mov
js
in
js
push
cli
test
push
and
rorl
dec
pop
or
movsb
cmp
fwait
inc
add
xchg
sahf
adc
jnp
dec
jb
lods
shll
sub
xor
and
mov
scas
stc
movsb
sub
cs
adc
rcrb
es
fnstsw
sbb
dec
jne
fdivs
or
jae
ficoml
leave
mov
jmp
sahf
add
repnz
out
or
fwait
adcb
add
xchg
sbb
cmp
xor
push
or
xor
mov
test
inc
imulb
stos
orb
cltd
mov
sbb
addr16
pop
jmp
int3
mov
adc
push
ret
mov
mov
rorb
sarb
ljmp
dec
jmp
arpl
lods
or
ljmp
cs
lahf
sti
shl
add
repnz
in
mov
outsb
jne
mov
pusha
mov
dec
add
fidivrs
test
cmc
bound
xor
sahf
cmp
cmc
in
gs
xchg
stc
pop
loopne
ja
fs
jb
mov
sub
pop
mov
mov
or
push
mov
pop
in
sub
loope
fildl
add
pop
sbb
test
jp
mov
lcall
jecxz
outsb
add
pop
cs
mov
jne
and
mov
and
push
test
rorb
outsb
aam
loope
pop
adc
mov
lcall
fstps
mov
mov
push
in
rol
inc
sub
ds
or
jmp
push
sub
mov
aam
mov
cmp
push
mov
sbb
es
cmp
and
add
xchg
cmpsb
fwait
add
int
out
movsb
mov
out
jno
mov
mov
jg
lcall
xor
pop
fwait
clc
pop
jmp
icebp
sbbb
and
pusha
test
mov
jae
jecxz
sti
push
lahf
push
adc
out
sub
push
sti
or
xchg
or
das
cs
push
xor
jge
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
ja
leave
adc
jle
js
je
mov
dec
mov
inc
xchg
mov
movsb
and
jae
pushf
fwait
jno
inc
hlt
mov
mov
push
and
add
movsl
imul
push
sbb
outsb
xor
lds
jno
sarl
daa
mov
int
mov
mov
cmp
scas
mov
push
inc
push
mov
imul
mov
pushf
cmpsl
push
mov
int3
mov
jb
outsl
cmp
xchg
pop
out
inc
jl
aad
movl
mov
ss
loopne
pop
sub
call
lods
mov
cmp
ljmp
sbb
or
outsl
xchg
inc
repnz
mov
sbb
in
out
out
and
cmc
js
and
xor
mov
es
sub
divl
or
xorb
pop
pop
dec
pop
test
je
sub
icebp
insl
dec
add
in
xchg
push
shll
in
jl
mulb
mov
ret
arpl
cmpsb
fisubrl
inc
movb
dec
or
mov
xchg
xor
and
inc
cmp
mov
mov
mov
movsl
push
push
dec
cmc
cmp
orb
in
cli
jle
call
mov
add
pop
inc
sub
jmp
xlat
sub
pop
cmpsl
rcr
inc
sub
mov
lods
pop
push
jo
sahf
mov
sub
enter
xchg
stos
xchg
mov
data16
in
in
push
mov
shrb
stc
inc
or
jl
insl
test
fdivrl
xchg
lods
mov
rol
dec
sub
out
jo
sarl
pop
push
mov
jno
add
inc
add
leave
movsl
stc
pop
aam
imul
inc
or
les
out
leave
es
scas
dec
add
cmpb
cwtl
xor
xor
in
addr16
sub
pop
cmp
in
mov
mov
pop
fcmovu
rorb
pop
mov
and
mov
idivb
add
mov
cmp
mov
or
push
out
jle
cmp
in
mov
mov
jmp
enter
cld
imul
jge
js
js
jle
js
ss
jg
stos
mov
cld
push
bound
and
sub
ds
pusha
movsb
or
mov
xorl
jle
pop
and
mov
cmp
cmc
or
jbe
xor
jno
adcb
mov
js
sub
js
bound
cmp
data16
mov
jno
ss
fdivp
jmp
jecxz
pop
xor
xor
daa
and
mov
jns
push
dec
jmp
sahf
jne
dec
lcall
pop
adc
cld
imul
mov
mov
jmp
jbe
fsts
jmp
cmc
sub
jp
and
mov
sub
sbb
int
mov
mov
int3
fldt
push
imul
ljmp
mov
mov
sbb
adc
dec
sahf
cli
mov
lahf
pusha
dec
sub
jb
lods
dec
repnz
lds
adcb
les
inc
xchg
cmp
xchg
push
mov
fwait
mov
in
mov
repnz
notl
jl
inc
jne
mov
push
push
jnp
mov
cmp
jnp
imul
lock
std
gs
xor
clc
xchg
pop
jge
imul
lcall
or
pop
push
fsubs
inc
rol
lds
ret
xchg
mov
xor
lods
xchg
or
pop
adc
xchg
imul
clc
mov
pop
mov
push
pop
sarl
sbb
cli
fadd
cs
pop
inc
int3
imul
in
mov
addr16
aad
mov
or
clc
mov
fimull
jo,pn
out
cwtl
push
xchg
inc
add
mov
xor
std
push
insb
or
dec
jbe
or
stos
pop
dec
wrmsr
xor
mov
outsl
nop
cmp
ja
jne
pushf
mov
inc
sti
fiaddl
and
fidivrl
fs
sub
outsb
sub
pop
fldcw
sbb
push
sub
es
pop
adc
mov
adc
jecxz
jbe
jmp
adc
mov
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
adc
sub
js
jle
js
add
mov
insb
push
add
fstpl
mov
jl
nop
loop
es
dec
push
pop
in
pop
pop
inc
fiadds
das
out
mov
incl
push
cltd
add
sub
fcoms
cmc
push
sbb
lcall
gs
mov
icebp
incl
xchg
add
jmp
jo
aad
aam
or
mov
inc
adc
mov
lods
scas
sub
add
ficomps
mov
orl
out
jb
jecxz
fcmovnbe
negb
imul
lret
fwait
ljmp
and
cmp
fldt
mov
jp
insb
sbb
ds
jle
popf
and
loop
pop
mov
lret
push
jecxz
xlat
or
push
cmp
imul
pusha
lods
dec
dec
in
and
call
cmp
inc
adc
insl
and
mov
fimuls
stc
dec
repnz
xchg
test
jo
adc
jb
push
test
xchg
cmpsb
mov
pop
jae
leave
std
cmpl
fcompp
jb
xor
xchg
roll
xchg
pusha
xor
dec
in
dec
or
and
shlb
mov
xor
adc
jnp
lret
pop
cmp
js
cmp
mov
pop
test
stos
cltd
adc
jae
pushf
ror
and
push
ret
insl
loopne
fidivrs
mov
dec
clc
mov
test
jno
and
mov
mov
addr16
adc
aad
cmp
mov
mov
push
sbb
inc
pop
xchg
and
jmp
cs
xchg
cmpsb
mov
xor
xchg
in
inc
adc
pusha
mov
mov
xchg
cli
cli
sarb
push
lock
arpl
mov
in
mov
ret
shrb
addr16
bound
push
xchg
mov
cmc
or
mov
xchg
lahf
lahf
sahf
push
dec
jae
dec
jp
test
sub
xchg
jns
mov
fwait
cs
xor
sbb
test
add
mov
ficoml
test
scas
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
mov
jg
in
js
mov
dec
push
mov
hlt
jmp
mov
mov
shll
mov
test
iret
pushf
iret
pop
cmp
push
xor
iret
xor
ja
test
js
icebp
cli
xchg
jl
push
sbb
inc
mov
jecxz
and
mov
imul
inc
adc
cmp
testl
fidivl
das
mov
cli
aaa
jl
enter
rcrl
jmp
sbb
and
dec
xchg
mov
mov
fwait
pop
or
nop
in
jle
imul
add
pop
ja
xor
xchg
xor
push
loop
icebp
cltd
les
int3
leave
std
les
rol
add
rorl
adc
push
lea
test
out
fsub
pusha
or
aaa
adc
inc
test
mov
repnz
mov
dec
mov
mov
loope
ret
cmpsl
push
or
add
push
mov
cmpb
add
xchg
cmp
lods
in
cmp
cmp
add
jnp
hlt
je
mov
std
insb
aaa
mov
ss
fimuls
call
dec
xor
xor
xchg
jp
jbe
imulb
movsb
and
xor
addr16
add
das
rorl
sbb
data16
push
filds
mov
and
fcoml
cwtl
xchg
adc
bound
outsb
cmp
shrb
and
ljmp
add
cmp
adcl
std
cmp
clc
adc
clc
fmuls
das
aas
addr16
clc
cmp
xor
lret
scas
sbb
in
inc
inc
fistps
mov
loopne
adc
fmull
test
pushf
popa
lods
inc
inc
out
cmpsl
xchg
leave
xor
mov
div
ljmp
movsl
mov
rcrl
xchg
cmc
push
sbb
dec
insb
cld
mov
add
fadds
out
add
cmc
inc
xor
mov
xor
shr
dec
in
inc
ret
pop
int3
imul
fiadds
subb
call
jl
popf
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
sub
mov
add
jg
in
js
jp
repz
or
push
xchg
push
sub
pop
movsb
jae
push
pop
fmull
jbe
fstpt
frstor
not
pop
js
sarb
call
push
xor
sub
clc
jnp
insb
mov
shrb
or
jle
sbb
test
xchg
or
adc
fs
mov
outsl
enter
lahf
mov
add
outsb
cmpsl
pop
xchg
enter
cmpsb
gs
and
push
mov
cmp
or
dec
adc
sub
pop
jl
sbb
hlt
aad
incl
and
push
insb
xlat
cmp
popa
dec
add
mov
ja
pop
sti
jp
mov
pop
shr
aaa
inc
adc
and
jbe
hlt
fwait
mov
mov
les
out
inc
pop
dec
shrb
imul
push
in
movb
dec
xchg
andl
mov
push
adc
sbb
out
jg
and
mov
jge
imul
xorb
inc
sti
or
dec
xchg
dec
cltd
in
fsubl
mov
rclb
idiv
test
mov
sub
inc
push
push
pusha
push
cs
xor
lret
xchg
mov
ret
data16
mov
arpl
sub
xchg
sub
clc
jnp
sub
jp
stc
jmp
jns
decl
mov
add
sbbb
dec
or
pop
mov
adc
aad
mov
xchg
insb
sbb
sbb
ss
sbb
push
sub
stos
iret
mov
popf
cltd
push
les
std
ret
sub
jge
fsubrl
push
push
call
test
cmp
aam
push
xor
fs
jp
cli
andb
outsb
mov
lock
jle
fsubrs
insb
xchg
mov
int3
cli
jmp
adc
adc
or
xor
cs
out
xchg
cwtl
lret
mov
cmp
push
mov
push
test
cmpb
mov
push
fs
cltd
jg
popf
repz
adc
jnp
cmpsb
loop
cmp
push
aam
fbld
mov
push
cwtl
dec
popf
lock
jno
shl
push
sub
xor
in
and
adc
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
adc
push
jg
in
js
cld
sbb
cmp
out
inc
dec
mov
mov
mov
cld
cmp
aad
push
push
movsb
add
push
push
pop
add
sti
xor
mull
aad
push
lock
addl
xor
push
push
loopne
lds
dec
sub
mov
xor
xor
arpl
xchg
sub
push
jbe
rolb
jnp
arpl
add
enter
dec
lds
sub
sub
jns
lds
push
fwait
xor
jae
cmc
stos
add
mov
push
adc
mov
ljmp
jo
sahf
mov
mov
dec
pop
mov
jae
xor
inc
ja
and
and
loope
jnp
lods
pop
sbb
and
cmpsb
fildl
fiaddl
mov
xor
pop
xchg
call
insl
sbb
fisubs
gs
pop
inc
cltd
pop
push
daa
or
mov
jne
in
mov
sbb
pop
dec
sarl
sbb
mov
sub
pop
dec
loope
inc
mov
cmpsb
jp
addb
pushf
pop
aam
lcall
mov
out
sub
call
sub
sbb
sti
add
jecxz
add
and
mov
lds
jmp
mov
push
lret
insb
jb
fdivl
ficoms
aaa
not
std
cmp
imulb
mov
sbb
sbb
mov
xor
ret
push
int3
out
and
mov
cwtl
out
dec
stc
fsub
jb
fsubl
or
inc
int
enter
sub
fcmovb
dec
xchg
add
ret
mov
fsub
lds
push
mov
dec
pusha
repz
ljmp
sbb
in
pop
adc
xor
int3
push
and
pop
adc
stos
or
pop
ja
call
mov
xchg
rcrb
cmc
push
push
mov
std
mov
mov
mov
js
inc
sbb
cmpsl
jle
lcall
mov
sub
addr16
push
hlt
lahf
adc
mov
movsl
cmp
inc
iret
lea
jge
sahf
xor
hlt
ja
inc
fsubs
adc
add
add
aas
int
aam
mov
jl
arpl
js
jle
js
mov
repnz
insb
pop
les
cmp
sub
fs
aas
adc
mov
inc
cltd
add
cmp
rcr
mov
sbb
jae
lcall
mov
or
adc
jmp
insl
call
jno
jae
clc
dec
mulb
rolb
sub
xor
test
aas
mov
js
adc
sub
ret
insb
add
or
cltd
jne
gs
popa
mov
ficoml
lahf
fsts
pop
xchg
flds
fdivr
add
adc
shrl
fdivrs
clc
arpl
lods
lods
sahf
dec
push
fmul
pop
push
cmpsl
cmp
movsb
repnz
push
lcall
aas
fbld
aaa
dec
sub
scas
inc
imul
add
fwait
aas
adc
sbb
mov
jno
sub
mov
adc
xor
js
push
fidivrl
jb
adc
lds
and
in
inc
jbe
adc
mov
fstpl
pop
pop
or
cli
roll
cmp
ret
repz
shr
xchg
push
stos
adc
cmp
inc
jg
sbb
xchg
pop
pop
mov
es
cmpsl
pop
inc
cmc
out
and
inc
pop
or
in
push
mov
sbb
daa
call
std
mov
sbb
addr16
out
jns
out
inc
divl
sub
popw
sub
das
and
loope
dec
adc
movsl
rcll
or
ret
sbb
pop
dec
pop
push
dec
and
mov
xorb
clc
push
fstpl
xor
mov
lcall
xor
stc
add
sar
jb
xchg
sbb
das
ficoms
mov
in
sarl
push
rorl
mov
and
sbb
cld
cwtl
ljmp
test
hlt
push
dec
popl
cmp
cwtl
xor
push
mov
into
pop
ljmp
mov
loop
mov
xlat
iret
mov
mov
mov
xchg
cmp
mov
dec
stos
dec
test
jno
scas
mov
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
push
rorl
js
jle
js
outsl
xchg
sbb
hlt
out
xchg
mov
leave
cmpsb
aas
pcmpeqw
inc
pop
or
push
xchg
cmc
pop
out
adc
xor
iret
dec
arpl
jmp
sub
lods
xor
jg
inc
jp
push
cmpsb
sub
movsl
push
jb
add
cmp
orb
lods
cmp
cmp
subl
sahf
jbe
xor
and
iret
enter
daa
and
pop
mov
add
push
insb
add
mov
shrl
loop
push
mov
stos
fidivrs
icebp
adc
leave
cmpsb
jno
push
add
movsb
push
dec
inc
or
cld
cli
push
flds
popl
dec
cmp
or
sbb
mov
xchg
lods
fistl
outsl
je
xor
push
xchg
pop
sub
mov
nop
lods
xchg
jmp
inc
sbb
add
dec
in
les
dec
dec
movsb
sbb
pushf
pop
cmp
out
or
in
dec
pop
popf
arpl
nop
mov
mov
fsubs
shll
pop
je
sub
and
fwait
movsl
in
xchg
dec
clc
jb
lcall
cli
fnstenv
popf
lret
mov
pop
jge
pop
fdivs
sar
mov
rcrb
cmp
test
int3
insl
popa
movsl
les
lock
adc
dec
mov
cmp
cmc
xlat
lret
sahf
push
xlat
cmp
jecxz
pop
ds
fs
jle
dec
inc
mov
xchg
mov
pop
enter
std
pop
dec
dec
dec
test
push
xor
addb
and
xchg
nop
aaa
les
cld
mov
pop
pop
leave
push
inc
sbb
aas
adc
cmp
mov
call
xor
inc
cmp
adcl
or
xor
xchg
xlat
or
lcall
cwtl
sub
dec
fistps
push
ret
pop
adc
xchg
xchg
out
xor
mov
out
fsubp
mov
data16
clts
loope
and
jecxz
add
jae
lods
mov
cmp
push
xchg
scas
push
add
out
lods
or
xor
pop
cltd
sub
inc
mov
out
cld
jo
inc
je
imul
mov
jmp
lret
ret
vpand
ret
xorb
jmp
scas
movq
jle
js
sbb
pop
cmp
pop
sbb
out
iret
and
sbb
sarb
mov
or
ss
ss
xchg
sbb
push
pop
shl
cmp
mov
mov
push
pop
test
aas
aad
pop
inc
dec
dec
push
xchg
sbb
scas
cmp
add
xor
push
out
les
inc
movsl
push
das
adc
xchg
mov
ja
mov
push
push
loopne
sti
and
and
ss
cld
mov
mov
out
enter
inc
call
jl
xlat
mov
adc
pop
xor
jg
andb
xor
adc
pushl
stos
cmp
fwait
pop
lcall
aam
xchg
movsl
inc
ds
and
sarb
loope
aaa
popf
mov
adc
ds
adc
mov
jb
jnp
lcall
jmp
mov
jae
popa
cmp
mov
daa
shll
mov
outsl
push
push
sbb
cmc
sub
stc
sub
xchg
adc
xor
icebp
arpl
loope
cmp
daa
xor
pop
jl
adc
or
call
mov
xchg
stos
jle
sub
addr16
ds
out
inc
setbe
dec
je
inc
insb
setns
daa
shrb
je
pop
cmp
mov
lret
stc
dec
hlt
aaa
mov
cmp
shrb
js
adc
pop
mov
fisubl
adc
cmp
mov
das
xor
insl
outsb
pop
mov
push
lret
mov
dec
insb
aam
adc
gs
mov
mulb
or
mov
xchg
adc
mov
popl
nop
in
popa
outsl
pop
enter
mov
fists
jp
movsl
shlb
cltd
loope
jmp
hlt
xchg
fldt
xor
push
push
sub
leave
jbe
nop
scas
jnp
aad
xchg
jecxz
rorb
outsb
subl
shl
jecxz
rcl
mov
lods
js
xor
push
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
inc
or
or
js
jle
js
xchg
or
neg
lea
fldt
je
test
push
push
cmpb
out
loop
pusha
stc
mov
mov
mov
mov
and
in
and
ja
outsl
lock
js
fwait
leave
mov
sbb
cmp
sub
cltd
pop
jge
rorl
call
mov
xchg
out
mov
loope
out
arpl
push
dec
mov
cmp
xchg
add
xchg
fstps
jp
outsl
ret
movsl
ss
adc
mov
sub
dec
or
arpl
pop
push
enter
xlat
cmp
dec
int3
ds
sub
cmp
jnp
dec
lret
xor
mov
mov
loop
or
cmpb
out
push
mov
push
xor
cmp
push
inc
js
xchg
push
jmp
push
xchg
lods
andb
repnz
xchg
jb
lds
fs
ficoms
xor
mov
nop
out
js
dec
fisttpl
sub
imul
add
push
xor
push
adc
popf
mov
push
xor
jne
data16
mov
and
jmp
mov
cmp
cmc
inc
mov
icebp
mov
scas
out
int3
pop
es
xor
and
sub
imul
mov
mov
popa
sti
cli
and
arpl
mov
insb
and
adc
mov
push
xchg
mov
fildll
push
xchg
cli
cmp
xchg
out
push
sbb
and
lahf
aas
xchg
mov
mov
mov
or
mov
out
int3
and
pop
movsb
push
sbb
inc
lea
adc
pop
in
lods
dec
mov
fwait
push
loop
icebp
xchg
out
call
adc
jne
mov
icebp
and
pop
test
mov
cli
decl
and
dec
or
lret
fucom
push
icebp
int
xor
es
cmp
jge
jg
sub
clc
pusha
test
js
xchg
fiadds
int
add
jge
adc
decb
jle
xor
lret
bound
rorl
scas
sarl
xlat
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
mov
lods
testb
js
push
arpl
sahf
and
enter
stos
cmc
fnstsw
mov
stc
adc
mov
hlt
pop
sub
fistl
and
and
cmpsb
mov
popa
cltd
mov
fidivl
dec
insl
sub
xchg
jne
mov
xchg
and
scas
out
xor
cmovno
pop
arpl
movsl
inc
div
cmpsl
mov
insb
mov
dec
add
jle
or
inc
bound
xor
sbb
or
add
xchg
stos
clc
lahf
setne
mov
movsb
mov
adc
dec
andb
push
lahf
lds
inc
jne
fs
cmp
cmpsb
xchg
andb
mov
mov
push
aad
cltd
call
mov
and
push
imul
cltd
iret
cs
cs
les
jns
mov
cltd
rcrb
sti
test
xor
bound
inc
adc
sbb
stos
scas
loop
xchg
ds
cld
sbb
cmpsb
gs
mov
sahf
pop
lret
mov
pop
sub
mov
sti
sub
add
iret
mov
fcomp
pop
enter
into
mov
fwait
addr16
outsb
sahf
inc
ds
shrd
xor
aad
stos
inc
mov
scas
mov
cmp
xchg
sbb
push
mov
aas
fsubrs
adc
bound
out
xchg
test
cld
idiv
cmp
inc
fisubrl
mov
insb
or
into
jg
push
das
pop
or
rcrb
lcall
push
add
dec
je
insb
sub
outsb
cmp
repnz
dec
adc
mov
and
fneni(8087
jb
es
or
dec
and
roll
cmp
xchg
test
mov
add
std
cli
je
push
cmp
inc
sbb
pop
cmp
in
jl
inc
inc
lds
sahf
lcall
cmp
and
bound
arpl
or
fildll
dec
test
inc
stos
mov
inc
sub
lcall
arpl
sti
or
in
xchg
push
test
mov
pop
imul
fcmovb
bound
bound
mov
xchg
orl
data16
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
loop
sbb
xchg
jle
js
jno
pop
xchg
inc
scas
inc
in
out
fistpl
and
stos
cli
jg
gs
arpl
and
lea
cmpb
mov
xor
cmpsb
ss
pop
test
cmpsb
scas
jns
ret
push
jne
xchg
pop
adc
aad
and
sahf
repnz
sub
or
sub
lcall
add
leave
push
dec
pop
jns
movsl
fwait
and
inc
in
out
fdivs
jecxz
hlt
jl
test
jle
pop
add
adc
sbb
or
push
xorb
daa
xor
jns
push
mov
dec
pop
push
cli
arpl
enter
insb
sub
or
adc
mov
fimull
cmpsl
jge
sub
add
ja
xlat
lds
cmp
push
or
xor
or
dec
imul
sbb
jl
mov
adc
add
adc
ljmp
rclb
in
mov
mov
sub
mov
ja
sahf
in
cmpsb
cmp
icebp
mov
or
xchg
xchg
test
xchg
pusha
jbe
and
inc
or
mov
push
mov
aas
pop
lock
jne
fcoml
rolb
bound
adc
sub
mov
fldl
std
es
enter
ja
inc
jnp
jnp
out
arpl
jmp
or
cs
add
jmp
loopne
pop
out
les
bnd
xlat
fcompl
xor
pop
in
adc
push
xchg
aad
addb
push
sbb
inc
and
mov
enter
inc
lods
jb
cmp
mov
aaa
rorl
je
lret
test
clc
mov
ss
mov
add
lods
pop
sub
push
jl
mov
pop
mov
cmp
or
loopne
jecxz
cmp
mov
inc
push
lods
fdivp
jne
in
mov
jns
xlat
pop
in
jmp
or
sahf
es
inc
mov
je
mov
push
jecxz
dec
fbstp
xor
pop
cmpsl
or
je
int3
test
out
jno
fildl
fwait
push
cmp
fisubrs
dec
out
sbb
jbe
jnp
push
dec
pop
repnz
imul
pop
mov
pop
sbb
insb
add
xchg
scas
cmp
sbb
or
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
imul
insl
mov
js
bound
dec
cs
sbb
fcompp
mov
adc
test
mov
ret
and
adc
sbb
add
sub
xchg
es
xchg
rcl
pop
ret
outsl
add
arpl
inc
inc
loope
pusha
jp
pop
sub
lds
test
test
in
adc
fistpll
or
mov
hlt
pop
add
cmpsl
adc
inc
sub
sbb
mov
call
cmpsb
inc
mov
dec
mov
fs
loopne
cwtl
xor
sub
stos
pop
mov
movsb
arpl
aam
mov
push
in
xchg
fcomps
xchg
cmp
ret
push
scas
repz
sahf
mov
scas
lods
fbstp
fcomp
dec
xchg
mov
mov
jge
xchg
adc
mov
xchg
mov
mov
std
sarb
stos
inc
xchg
jo
inc
roll
in
xchg
clc
fwait
shrb
stos
jne
sti
dec
in
push
add
cltd
xchg
mov
or
mov
xlat
jge
ljmp
pop
push
out
jle
lret
pop
mov
in
mov
adc
ret
add
ret
inc
js
ficoms
mov
pop
fdivp
add
push
lret
das
aad
leave
mov
mov
push
in
mov
jo
inc
lds
insl
push
mov
adc
xchg
ret
js
rclb
testb
lea
movsl
or
jo
loopne
inc
add
xor
and
inc
shll
sti
push
test
mov
inc
lcall
xchg
mul
cli
decl
jg
mov
xchg
xchg
lret
loope
mov
mov
ds
jnp
xor
fidivrl
addr16
ljmp
mov
cmp
xchg
je
xchg
xchg
mov
push
push
push
dec
mov
pop
mov
mov
es
xchg
mov
repz
out
cmp
movsb
mov
or
push
lods
or
icebp
mov
or
das
cmc
add
cmp
add
xchg
js
mov
into
pushf
mov
mov
xchg
jbe
push
fisubs
dec
icebp
in
sbb
lahf
and
sbb
lcall
stos
popa
stos
call
les
or
ret
leave
and
test
out
xor
testl
xor
add
inc
add
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
stos
xchg
addr16
daa
sbb
xchg
jle
js
pop
sbbl
xchg
sub
loopne
jge
sub
fwait
pop
sbb
fstpl
sti
and
push
je
cmc
add
js
mov
cmpl
xor
cmp
adc
xlat
ficompl
div
pop
adc
jb
push
ret
dec
push
add
dec
xor
mov
or
incb
arpl
into
sbb
in
outsl
dec
fists
jg
cmpsb
jae
leave
or
push
test
gs
popa
pop
jg
jo
es
or
jle
sti
mul
cltd
loope
cwtl
jbe
add
subl
push
xchg
push
jp
test
mov
add
jge
xlat
pop
mov
lcall
jb
scas
cmc
les
add
movsl
mov
lock
mov
add
lahf
popf
push
les
hlt
lcall
orl
stos
insl
adc
or
mov
les
sub
mov
pop
loope
rol
loop
das
and
adc
mov
cs
ret
jo
arpl
cltd
mov
ret
jb
pop
mov
cmc
lret
mov
cwtl
shll
or
shl
scas
inc
repz
ss
mov
std
repz
mov
and
aad
xchg
push
jle
mov
shlb
mov
xchg
lock
inc
jno
test
inc
adcb
jge
stos
mov
xor
lods
lea
sbb
jl
mov
addr16
in
es
fcmovnbe
cltd
sar
mov
xchg
mov
dec
jns
repz
sub
ds
adc
xchg
pop
in
jp
bound
mov
jmp
xor
pop
sbb
outsl
in
in
movsb
add
mov
inc
or
jge
ja
call
pushf
hlt
mov
roll
adc
mov
addr16
ljmp
adc
pop
jo
adc
shl
adc
stos
add
dec
ds
fadd
and
mov
enter
lock
mov
mov
fstp
loope
lods
mov
and
cmp
das
inc
jge
fidivl
and
xchg
or
mov
pop
test
aad
negl
fwait
xchg
lret
push
add
test
and
cltd
int
icebp
lret
ds
cltd
out
popa
bound
lret
pop
jno
aam
sub
push
sbb
xchg
jb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
pop
mov
jle
js
mov
in
pusha
push
call
mov
mov
fiaddl
xchg
stos
es
or
sbb
xor
sar
mov
mov
mov
xchg
lods
mov
xor
adc
ds
stos
inc
stos
outsb
add
or
push
xchg
pop
pop
jl
in
cmp
nop
enter
push
jg
push
push
and
push
adc
mov
int
aaa
icebp
dec
xor
dec
xchg
xchg
clc
insb
call
lods
xor
mov
stos
and
mov
pop
out
mov
xor
out
sub
inc
addr16
call
adc
push
sahf
dec
dec
pop
aas
cmp
xchg
mov
cs
sti
out
cmp
or
mov
jmp
bound
out
pop
rep
xchg
cmp
bound
leave
sti
xchg
xchg
je
mov
cmp
aam
adc
lea
xchg
pop
xchg
insl
mov
jo
or
cmp
int3
mov
ds
inc
add
clc
sti
jle
cmp
jecxz
xorb
cmc
jnp
icebp
push
ja
pop
inc
push
cmp
jns
outsb
dec
pop
adc
push
ret
jmp
out
ret
inc
shrb
idivb
pop
mov
mov
mov
push
mov
pop
lret
adc
cmpsl
loopne
sbb
add
jmp
lahf
hlt
fisubs
lods
orl
fucomp
xchg
insl
pop
cmc
scas
sbb
enter
push
nop
jmp
inc
std
fwait
jl
cmc
lock
mov
shlb
movaps
rorl
out
pop
ud2
push
and
cmpsb
mov
fsubrl
out
hlt
or
xchg
and
cwtl
sbb
and
xchg
mov
mov
push
jg
shrb
roll
mov
cmpsl
jae
or
lret
pop
inc
jns
lods
push
inc
into
aaa
add
mov
mov
xchg
lods
and
jns
arpl
int3
insl
and
sar
push
es
imul
xchg
mov
mov
or
ljmp
sbb
add
or
jp
gs
fwait
lcall
rcrb
jge
xchg
xchg
sbb
jge
xor
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
cmpsl
movsb
test
sbb
js
in
pushf
xchg
mov
sar
add
lods
and
stc
lret
pop
mov
xor
add
std
test
jb
jne
ljmp
inc
rorb
add
xor
add
pop
aad
clc
fwait
popa
popf
in
xchg
jp
adc
mov
add
popf
nop
pop
inc
sbb
jno
adc
and
push
dec
mov
sbb
cld
pop
sbb
aas
cli
test
lret
lahf
sbb
cmp
sbb
in
inc
jb
pop
fisubs
call
test
daa
add
in
push
jg
out
and
pop
pop
mov
jne
pand
testl
pop
xlat
ss
adc
loop
mov
movaps
or
jmp
movsl
ss
xor
jmp
mov
daa
jecxz
jmp
mov
jmp
stc
or
mov
ds
pushf
push
xorb
jge
je
in
and
es
pusha
mov
addl
cmp
mov
movsl
sbb
icebp
dec
xchg
in
cmp
sbb
mov
push
incb
adc
sbb
out
aas
out
add
jno
pushf
loop
pop
pop
and
bound
lods
leave
dec
pop
clc
cmpb
push
ficoml
and
and
cmc
xor
test
in
out
mov
dec
push
lret
xchg
jl
rcl
in
and
push
lock
add
mov
jge
pop
roll
mov
pushl
mov
or
jne
fcoms
adc
inc
add
jo
cmpl
pushf
adc
jae
shll
lock
lods
nop
xor
testb
push
cmpsb
sub
cltd
shl
mov
aad
in
int3
scas
orl
xchg
test
sub
push
lods
mov
ljmp
xor
mov
push
xchg
sub
out
test
mov
add
mov
fmuls
push
cmpsl
xchg
sub
cmp
sarl
add
shlb
and
outsb
dec
push
js
add
add
lds
shlb
xlat
xchg
jbe
repnz
push
mov
cmc
jnp
ret
fists
sbb
pop
or
adc
stos
out
mov
lahf
scas
test
repnz
into
xor
loopne
add
or
add
mov
add
ds
int3
lret
xchg
aam
mov
jg
xchg
jle
js
mov
or
mov
fs
dec
daa
xchg
sub
insl
cmpsb
inc
aad
and
repnz
stos
das
xchg
jecxz
scas
push
shl
fucomi
icebp
fsubl
and
in
mov
in
in
dec
xchg
cmp
push
in
push
push
add
jmp
ja
mov
push
movb
jp
add
das
inc
cmc
pushf
dec
xor
dec
and
bound
push
mov
mov
sub
in
das
mul
aas
lcall
add
out
cs
in
push
fstps
mulb
movsb
shlb
outsl
mov
das
in
cltd
xchg
and
mov
sbb
pop
jne
lods
pop
push
xchg
daa
cmp
lock
mov
imul
xor
push
pop
xchg
jno
mov
enter
push
lea
or
adc
inc
mov
add
add
sub
jno
mov
insb
arpl
jle
xchg
jbe
dec
dec
cmp
sub
fld
pop
ret
orl
bound
jne
ljmp
repnz
dec
lods
or
arpl
int
inc
test
aad
pop
dec
lock
ret
jns
add
lock
dec
lret
xor
dec
ret
in
fs
ss
jne
inc
jmp
xlat
shlb
xor
cmpsb
sbb
and
xchg
movb
imul
xchg
xor
pop
push
jnp
pop
mov
cmpsl
pop
lock
out
push
push
pop
cltd
pusha
nop
jecxz
and
pop
pop
dec
cmp
push
loopne
faddl
bound
jg
and
sub
das
ja
les
mov
mov
sub
fiadds
popa
test
xchg
shl
call
xor
jo
iret
movb
xchg
test
arpl
lea
mov
add
add
call
jnp
jno
les
mov
cmovp
adc
xchg
ds
push
jge
stc
xor
cwtl
aad
mov
fcomi
clc
jmp
mov
xchg
dec
loope
es
jmp
popa
dec
mov
test
mov
cmc
fisttpl
xchg
or
loop
add
lea
cmp
insb
std
clc
cmc
test
mov
cmp
xor
dec
push
test
mov
pop
std
es
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
pop
in
fwait
xchg
and
xchg
jle
js
push
call
repz
test
sbb
hlt
push
dec
adc
leave
adc
sbb
fs
popa
mov
mov
sbb
and
int3
adc
mov
xchg
imul
pusha
repz
mov
movb
push
jecxz
movb
clc
cmp
sub
dec
lea
jle
cwtl
gs
and
sub
aas
lock
shll
pusha
or
dec
xor
clc
mov
stc
pop
fidivrs
scas
sarl
jecxz
test
shrl
xor
mov
xchg
lock
mov
cmp
ss
lods
mov
stos
into
ret
test
jbe
add
ljmp
mov
in
mov
add
in
sbb
xor
fcoms
insb
leave
outsb
testl
dec
lds
lcall
popf
data16
out
lcall
pop
pop
inc
pop
adc
inc
rcll
out
xchg
sti
and
mov
fbstp
jae
imul
mov
xor
mov
fwait
and
icebp
sbb
push
mov
mov
not
leave
sbbl
leave
or
out
jl
push
hlt
inc
shlb
mov
cli
pop
inc
loopne
cwtl
and
dec
js
out
add
adc
lds
dec
inc
ds
pop
cmp
dec
or
subb
mov
jne
lahf
fcomi
push
and
cmpb
sub
or
jmp
leave
roll
push
pop
xchg
test
mov
into
jle
repnz
dec
faddl
cmp
aad
jnp
jp
in
js
int
or
ret
xchg
mov
stos
dec
cld
cmp
pop
cmpsl
lcall
push
xchg
inc
mov
mov
cmp
push
or
fs
and
sti
pushf
push
and
fucomip
popa
js
or
mov
pushf
imul
ror
jp
fldl
lea
sbb
sbb
roll
outsl
add
in
rorb
in
push
fdivrs
jns
or
mov
xchg
jnp
lret
adc
mov
call
fs
outsb
int
hlt
mov
lds
ret
jae
in
mov
adc
dec
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
ss
xchg
out
stc
test
ret
pop
pop
lds
mov
mov
inc
adc
or
jp
bound
mov
push
popa
mov
adc
sub
xchg
call
jno
sbb
nop
lds
pop
sbb
mov
inc
or
or
mov
shlb
inc
arpl
lcall
xchg
mov
rcr
cmp
lcall
jae
icebp
loop
cmp
scas
cmp
es
sub
call
adc
jmp
push
cmp
repnz
fisttpll
pop
insl
xor
xchg
sub
movsb
mov
cmp
mov
mov
pop
out
fnsave
frstor
dec
loop
outsl
aad
leave
jg
into
cmp
imul
jl
pop
inc
shll
scas
ror
call
mov
mov
loop
jo
adc
adc
leave
xchg
test
bound
movq
repnz
stos
cmpsb
cmp
dec
je
sbb
pop
sbb
in
and
mov
sbb
into
test
inc
jecxz
outsl
jl
adc
inc
push
les
sbb
imulb
adc
movsb
mov
xchg
shl
mov
fisttpl
jmp
dec
in
adc
or
iret
jno
mov
lahf
and
and
pop
adc
enter
dec
and
push
mov
xchg
push
mov
repnz
stos
jne
lret
pusha
sub
rcrl
pop
mov
mov
jo
or
pop
or
push
cmp
repnz
mov
inc
cmpsl
or
inc
std
push
pop
ret
add
ret
movsb
mov
dec
in
rcl
nop
xchg
aaa
bound
mov
mov
ss
popf
pushf
adc
push
rclb
call
jle
or
sub
test
orl
leave
fdivs
lea
inc
jns
outsb
xchg
pop
jne
push
push
jle
int3
push
xchg
xlat
sar
mov
cmp
adc
cmpl
mov
add
xchg
mov
jp
es
in
cmp
neg
outsb
dec
inc
stc
stos
notb
lock
dec
dec
add
adc
faddl
cmpsb
ret
les
mov
cltd
inc
cmp
sbb
mov
mov
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
clc
inc
sub
xchg
jle
js
lods
divl
idivl
mov
flds
sbb
lea
pop
dec
and
mov
dec
test
push
je
loope
vunpckhps
es
inc
sub
cmp
repnz
out
fcomps
jae
daa
fwait
xorb
test
out
push
sbb
cmp
daa
fimuls
and
push
or
data16
mov
add
sub
mov
mov
push
and
push
and
enter
or
cmpsb
rcrb
jecxz
sarl
cmp
or
dec
mov
lods
cld
test
mov
outsl
inc
cmc
mov
push
add
xor
sub
hlt
popf
bound
sbb
adc
push
lcall
ljmp
xchg
mov
push
inc
cwtl
fwait
outsb
cwtl
outsl
jecxz
mov
movsl
mov
and
push
adc
test
lret
repnz
stos
mov
mov
cs
mov
push
stos
xchg
lret
fdivrs
sub
jle
mov
cmp
add
into
xchg
cmpsl
out
sahf
dec
stos
push
fcoml
jmp
add
std
mov
or
push
loope
xor
jp
jb
and
adc
sbb
or
jae
lret
shrl
sbb
dec
out
inc
add
and
jne
sub
subb
dec
popf
cmc
inc
out
je
xchg
out
in
in
dec
add
jecxz
mov
mov
ret
pop
jae
push
sub
fcmovu
in
jbe
ffree
xchg
dec
jecxz
test
bound
std
sbb
xor
scas
and
cli
fldcw
sub
rcrb
mov
xchg
andl
clc
shll
cmc
test
je
ret
cmp
dec
inc
test
mov
hlt
cltd
sbb
jb
lods
push
and
xor
mov
aam
xchg
and
cmpsl
push
xchg
jne
jno
or
xchg
sub
pop
adc
mov
addr16
lea
out
std
jp
push
shll
fdivrs
push
xchg
xchg
stos
jg
xlat
mov
inc
sub
movsl
xchg
popf
jle
sub
or
xchg
fwait
repnz
loopne
out
sub
loope
jb
int3
dec
sbb
fs
adc
mov
rorb
dec
mov
ds
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
rorb
sub
xchg
jle
js
out
mov
std
mov
inc
int3
call
fucomip
add
cs
cmpsb
repz
add
insb
nop
cmc
or
xchg
scas
pop
add
sub
dec
clc
adc
ret
inc
imul
test
lock
out
out
xchg
xor
inc
sbb
inc
pop
adc
in
insb
out
dec
mov
jb
out
scas
mov
add
jb
or
or
and
push
lcall
adc
add
inc
mov
sub
inc
pusha
mov
and
cmp
loope
testl
hlt
inc
aaa
cltd
add
or
inc
and
push
sbb
mov
loop
dec
push
xchg
movsl
fisubs
inc
cmp
ja
stos
pop
nop
jns,pt
loope
frstor
imul
ret
mov
flds
xor
fcoml
xchg
loope
ret
pop
outsl
push
fimuls
add
dec
add
outsb
add
cmp
inc
imul
xchg
sti
fisttpll
shrl
pop
shlb
rep
mov
adc
cmp
add
ficomps
repz
dec
jecxz
add
adc
sbb
inc
sti
adc
add
mov
repnz
xorl
dec
ds
mov
inc
out
outsl
inc
dec
cs
or
mov
dec
jno
out
popa
sub
aam
push
mov
pop
push
imul
jb
ror
xor
sahf
cmp
jp
decl
push
mov
movd
dec
ljmp
aas
dec
test
lcall
aaa
mov
mov
sti
sbb
ret
add
mov
in
sub
stc
fiaddl
jnp
mov
sbb
sbb
and
leave
and
sub
js
dec
jb
ds
int3
push
mov
mov
cltd
sti
mov
subl
adc
mov
jg
push
pop
cmp
in
popf
cmp
pop
add
sub
fisubrl
mov
sti
xchg
faddl
xchg
data16
jbe
scas
mov
stos
fcoml
nop
dec
pop
sbb
pop
inc
mov
fcmovu
dec
mov
cmpsl
stos
shll
push
mov
add
mov
pop
fldl
ds
test
sub
pop
or
sbb
lea
daa
insl
fldcw
mov
dec
mov
or
xor
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
push
test
jg
jg
add
dec
call
test
mov
imul
movsb
push
mov
popf
add
and
and
cs
mov
outsb
inc
push
loop
arpl
das
sarl
inc
in
cwtl
sbb
sbb
popa
fs
leave
dec
pop
ret
or
call
jecxz
sarl
das
jl
sub
dec
ljmp
pusha
xchg
add
mov
stc
movsl
fwait
mov
leave
imull
sub
nop
lcall
xor
pop
or
enter
pop
pop
sarl
scas
add
and
mov
push
pop
xchg
cmpsl
jmp
jb
cli
mov
decb
push
add
nopl
flds
lods
imul
test
pop
jno
push
sarl
ja
mov
sbb
push
jle
or
rcll
mov
jl
stc
and
js
addr16
pop
into
inc
xor
leave
jl
addl
and
jl
jns
mov
xchg
cmp
jg
jnp
xchg
mov
jbe
push
jae
sub
and
dec
and
repz
bound
stc
xor
xchg
sub
fsubr
jmp
sti
test
adc
hlt
and
adc
sub
movsb
into
outsb
mov
test
and
mov
push
cwtl
xchg
sub
fldenv
inc
icebp
jo
jmp
xor
inc
outsl
adc
cmp
int
in
sbb
xchg
inc
faddl
je
inc
or
inc
and
outsl
faddl
out
les
sub
sbb
fisttps
fmul
jge
test
mov
inc
push
pop
sbb
pop
flds
scas
inc
or
stc
sbb
mov
in
pop
or
int3
aas
ficomps
sub
mov
test
test
test
dec
aas
add
jmp
cmp
aad
aad
popa
adc
xor
adc
js
jle
js
mov
push
inc
les
mov
ja
xchg
add
mov
out
push
mov
adc
mov
js
arpl
repz
in
ret
cli
jl
xor
cmp
inc
inc
movsl
push
stc
into
ret
addb
ljmp
sub
sub
int
inc
lds
cmp
fadds
and
sub
in
and
gs
adc
scas
mov
test
dec
inc
xor
aad
push
loope
sbbl
jle
stos
mul
daa
mov
in
and
pop
call
addr16
pop
pushf
rol
into
pop
aas
fmul
sti
lcall
rcl
test
test
stc
incl
jp
outsl
adc
in
aas
js
add
xchg
movsb
push
xchg
xor
aas
pop
xor
call
aam
xchg
outsb
jl
xor
lods
clc
addl
sub
movsb
pop
mov
out
sub
lods
gs
adc
fnstsw
jg
lock
pop
enter
out
push
insb
repnz
xor
mov
sub
test
shll
into
sub
pop
add
scas
jne
sub
aad
loop
jbe
dec
jo
jne
push
sub
push
sub
test
icebp
lods
arpl
popa
fsts
push
cmpsb
gs
fdivrl
imul
sti
and
fwait
adc
mov
cmpl
stos
lret
addr16
lods
push
or
pushl
adc
das
push
mov
bound
mov
insb
outsb
adc
rorl
insl
outsl
and
pop
repnz
test
loopne
add
jb
inc
xor
sub
cmp
mov
adc
js
cmp
in
outsl
out
cld
in
jnp
mov
mov
push
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
lcall
js
cli
outsl
daa
xchg
push
addb
iret
inc
loop
inc
pushf
inc
jnp
mov
fadds
adc
lret
negl
lods
lock
xchg
push
inc
imul
sbb
push
filds
push
push
loope
cmc
fcom
jbe
scas
fcmovnu
mov
aaa
lds
push
sbb
xchg
outsb
jp
sbb
lret
mov
dec
punpckhwd
rcll
gs
int
fimuls
or
push
les
xchg
ret
mov
xor
mov
fldt
frstor
or
loop
cmp
xor
sbb
push
or
inc
dec
dec
sbb
mov
sbb
add
dec
sarl
leave
mov
xor
adc
mov
and
dec
outsb
and
out
out
add
add
jnp
mov
pop
push
scas
xor
add
fisttpll
push
cs
ds
lret
xor
inc
ljmp
loopne
enter
dec
inc
adc
mov
pop
ret
push
test
fimull
mov
mov
andl
js
leave
lea
mov
xlat
cmp
sub
and
adc
cmc
mov
xchg
out
add
adc
lahf
xor
or
cli
sbb
das
cmp
subb
xor
xchg
sbb
jae
fbld
lret
jne,pn
and
jmp
test
and
mov
mov
rcrl
push
outsl
lock
rolb
cmp
xor
cmp
adc
test
mov
mov
push
ffreep
xor
std
jo
pop
jecxz
mov
adc
inc
loop
rorb
mov
gs
cmp
cmp
fldl2e
pop
mov
pushf
out
mov
jno
dec
sub
rcr
leave
loope
inc
sahf
stos
mov
outsb
aam
and
insb
frstor
push
pop
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
call
push
sbb
jnp
js
shrb
mov
out
or
fwait
push
xchg
out
cli
aam
test
fsubl
pop
test
les
xchg
push
sub
pop
mov
repnz
push
imul
sbb
daa
cs
leave
xor
lret
gs
cmpb
fstps
adc
lcall
addr16
leave
test
add
emms
xchg
sahf
cmp
adc
and
push
sbb
sub
test
int3
mov
arpl
or
jmp
leave
sbb
loope
cwtl
jnp
in
in
arpl
jno
movb
shlb
jbe
fwait
loopne
test
bound
ret
push
xchg
setno
mov
mov
or
mov
into
cli
add
jns
fistl
je
sbb
dec
and
lods
mov
inc
insl
iret
incl
adc
aaa
jbe
aaa
ds
xchg
add
pop
cltd
cmc
push
cmp
sbb
or
es
cmc
mov
xchg
dec
pop
arpl
aam
daa
and
and
idivl
scas
ret
out
jecxz
xchg
lock
jecxz
jbe
jb
fldenv
js
cmpsb
push
and
sarl
das
test
fistps
sahf
dec
mov
in
pop
jmp
rolb
xor
out
sub
or
jo
xor
shlb
ret
sbb
lock
in
ljmp
ret
inc
cltd
aad
sub
xor
out
cmp
lret
pop
pop
fwait
rdtsc
push
in
popf
adcl
dec
rolb
add
fdiv
add
inc
xchg
ss
dec
rclb
lcall
idiv
xor
mov
jbe
mov
push
sbb
jmp
push
idivb
mov
push
loop
xor
add
push
shrl
mov
xor
mov
bound
cwtl
mov
mov
movsl
icebp
shll
and
push
or
push
push
out
add
dec
xor
mov
lret
sub
je
push
stos
fldt
add
pop
sbb
lock
pop
jl
divb
mov
mov
and
pop
cs
mov
xchg
into
xorl
cmpsl
push
cmp
sbb
jmp
cmc
adc
push
in
jbe
add
sbb
push
pusha
xchg
inc
inc
cmp
gs
gs
jl
loope
int3
cwtd
jg
inc
mov
pop
sub
dec
test
lret
out
inc
stos
sbb
fwait
inc
mov
into
sbb
pop
loopne
push
inc
stos
scas
or
in
mov
mov
ret
pop
leave
xchg
mov
xor
xor
lea
xor
jmp
sarb
xlat
xlat
loope
pop
mov
mov
xor
js
jle
js
shll
sbb
mov
repnz
or
add
cwtl
pop
sbb
pusha
mov
lret
push
imul
in
mov
sbb
jae
and
adc
shl
lea
imul
xchg
pop
pop
mov
cs
pop
mov
leave
out
pop
push
insb
pop
cmp
inc
mov
and
aaa
push
xor
cmp
sub
or
cld
or
xor
lcall
jae
xor
out
xchg
inc
sti
shrb
jnp
outsb
cmpsb
iret
call
cmp
cltd
daa
sub
test
rclb
mov
mov
sub
loopne
dec
out
sub
inc
pop
movsb
xchg
and
add
push
and
mov
jns
and
adc
int
jo
or
jl
test
in
push
aas
xchg
or
and
pop
or
xchg
mov
pop
mov
pop
fsts
je
aaa
jge
add
sbb
jmp
mov
fldcw
push
stc
incb
insb
sarb
rcll
inc
mov
push
outsl
jecxz
add
out
pop
xor
call
pop
out
ja
sbb
adc
mov
or
xor
adc
xor
jmp
cmc
dec
and
push
stos
dec
sbb
xchg
jno
inc
xor
in
imul
insl
gs
inc
sub
dec
dec
pop
fnstsw
test
rcrl
icebp
movsl
xor
jmp
jge
mov
mov
repz
xchg
xlat
jae
mul
out
push
push
repnz
mov
jbe
je
fidivs
push
mov
adc
and
mov
jo
aam
dec
mov
adc
enter
cmp
or
lock
mov
aad
mov
mov
dec
bound
sub
mov
or
sbb
pop
or
adc
xor
es
cmp
les
insb
cmp
mov
mov
ja
cmpsl
out
lods
dec
mov
push
mov
sub
mov
aad
pop
ja
sub
jecxz
pop
lret
das
arpl
push
mov
cmp
mov
dec
scas
int
jno
pop
mov
sbb
in
push
jae
sbb
dec
and
pop
ret
and
cmpsb
clc
pop
add
and
stc
mov
adc
stos
mov
push
aaa
cltd
or
leave
loope
lahf
je
inc
pop
mov
xchg
ret
cmpsl
data16
add
fisubrs
in
nop
in
cmc
fidivl
sbb
jae
in
push
sarl
push
mov
dec
mov
stos
push
pop
in
pop
jno
mov
jae
out
ds
stc
sub
inc
stc
jmp
jmp
int3
les
aam
ror
mov
dec
imul
js
xchg
xchg
jge
mov
in
shll
dec
aad
mov
ja
out
push
icebp
add
xchg
pop
stos
inc
push
cmpsl
adc
mov
adc
and
sub
sbb
jmp
fs
scas
sub
es
and
adc
push
inc
mov
data16
mov
popf
cmp
pop
daa
or
mov
addr16
inc
std
leave
fildll
inc
in
add
cld
sbb
xor
cmpl
loopne
push
mov
or
xor
cli
xorb
pop
shrb
movsl
adc
cmpsb
adc
xor
les
pusha
out
xor
inc
sub
pop
sbb
fmuls
mov
shll
cmpsb
jne
jecxz
std
ja
cwtl
pop
mov
push
inc
dec
and
push
add
mov
nopl
sub
jp
dec
jno
xor
push
lret
iret
cld
out
xor
pop
out
adc
and
xchg
out
sub
insl
shrl
dec
xor
jne
sarb
addr16
hlt
mov
pushf
xor
flds
mov
enter
push
bound
mov
sbb
mov
aaa
xor
cld
test
and
xor
jge
ljmp
jae
mov
popa
pop
in
ret
push
sti
push
mov
addr16
js
shll
daa
test
jb
in
cmp
pop
xor
repz
sub
shlb
jbe
xor
adc
in
std
bound
in
testb
sub
stos
and
and
outsl
mov
imul
popa
push
xorb
imul
inc
cmpsl
idivl
prefetch
or
bnd
and
aad
or
mov
or
dec
sub
xchg
rcrb
mov
pop
into
add
out
es
into
mov
jge
xchg
push
gs
pushf
push
scas
pop
mov
adc
mov
inc
add
sbb
push
daa
cmpb
pop
bound
add
push
xor
push
mov
sbb
call
jmp
jge
cmp
ret
xchg
lds
sbb
dec
and
mov
sub
ficompl
mov
mov
pop
ds
adc
hlt
test
fdivr
test
fdivrs
xor
mov
mov
test
movsb
inc
jo
cld
add
xchg
dec
pop
iret
cli
xchg
jle
das
inc
jno
cli
cmc
jbe
and
add
gs
jb
pop
cmpsb
in
dec
dec
mov
cmp
arpl
repz
add
adc
shrl
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
pop
mov
jg,pt
jnp
js
push
fisttpll
loope
imulb
xchg
in
jmp
mov
push
cmc
sbb
lds
movsb
dec
pop
fldl
adc
lock
rcll
dec
dec
inc
jp
jmp
sub
mov
mov
ret
inc
or
sbb
sbb
xrelease
lcall
call
movsb
xor
mov
pusha
dec
shl
fnstenv
cmp
mov
push
mulb
mov
mov
lcall
pop
cmp
clc
jo
or
push
dec
cs
push
xor
cmp
jl
add
dec
and
cmp
call
dec
cs
ljmp
pop
sti
adc
mov
xor
sahf
pop
out
mov
filds
hlt
cmp
negl
outsb
gs
push
mov
pop
fcmovnb
mov
cmp
mov
mov
jbe
mov
pop
push
movsl
shll
jno
shlb
push
das
mov
cmp
adc
in
pushf
clc
movsb
mov
sub
cli
mov
mov
or
nop
stos
add
orb
imul
ss
test
fwait
dec
mov
dec
mov
mov
test
xchg
cs
push
test
mov
sub
std
xchg
sbb
cmpsl
mov
mov
mov
mov
cli
adc
mov
popa
xchg
xchg
test
mov
paddusw
sub
jp
sbb
stc
enter
mov
and
mov
push
das
mov
lock
cmc
dec
sahf
lcall
btc
lods
cmp
data16
cltd
or
frstor
xchg
cmpsb
cs
mov
repz
pop
jo
and
popa
mov
push
dec
xchg
jb
xor
jl
leave
dec
out
dec
outsl
mov
insb
es
mov
imul
fwait
sbb
ds
insl
pop
mov
enter
movsb
and
fmull
insb
mov
lret
inc
push
scas
inc
cmpsb
xor
xor
mov
jnp
jmp
cs
xor
mov
jbe
jmp
fdivrl
push
addl
sbb
out
insb
jb
mov
pop
mov
jmp
mov
xlat
outsb
push
jmp
scas
push
aaa
out
xor
jl
shlb
insl
into
in
mov
out
mov
mov
pop
lock
pop
add
fsubl
pop
xor
imul
push
add
sbb
xor
inc
cmp
pop
push
arpl
mov
mov
clc
xchg
cmpsl
mov
jmp
stos
xor
fsubrs
sbb
dec
jg
xchg
pop
shlb
pop
lods
enter
inc
add
mov
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
insl
lea
adc
jg
jnp
js
cmp
repz
pop
pop
xchg
and
sti
and
or
out
inc
ror
into
mulb
mov
jecxz
leave
loop
and
cmp
pop
add
or
sub
push
sahf
adc
pop
movsb
repz
push
mov
je
lret
mov
adc
ficoms
push
cli
mov
mov
or
test
jg
dec
jl
inc
lret
adc
inc
clc
inc
int
jl
mov
mov
lods
imul
gs
dec
call
cmpsl
lret
in
mov
push
arpl
mov
mov
fisubs
adc
mov
sahf
mov
adc
lcall
sub
mov
test
push
jmp
in
and
sub
mov
mov
fistl
sub
cmp
lea
mov
jbe
sbb
mov
mov
mull
inc
outsb
inc
add
xor
mull
jl
imul
inc
adc
inc
enter
mov
xor
sbb
sub
xor
pop
cmp
loope
jns
mov
jmp
sbb
sub
pop
faddl
pop
shrl
pop
xor
mov
xchg
lret
and
push
sub
lea
dec
and
xor
addr16
jae
xlat
cmpb
jmp
out
sub
mov
mov
inc
dec
std
shll
rclb
fstpl
cmc
adc
xor
sub
outsl
fmull
mov
pop
adc
fildll
dec
jmp
aad
xor
and
sub
ss
adc
and
xchg
test
push
and
sub
xor
scas
test
cmp
pop
jle
insl
jns
xchg
pop
push
pop
pop
mov
inc
push
cli
mov
aas
aam
mov
pop
aam
xor
ss
xchg
pop
adc
and
push
call
and
rcl
add
imul
inc
mov
or
mov
in
frstor
movsl
pushf
inc
sbb
sti
mov
mov
je
mov
mov
mov
sbb
xchg
aas
adc
bound
push
mov
xchg
cmpsl
dec
jnp
or
negl
xchg
sbb
and
je
mov
js
ss
es
xchg
addr16
lock
or
pop
inc
enter
enter
xor
neg
aas
std
jne
sub
sbb
push
xor
imulb
fsub
mov
scas
mov
jb
mov
inc
mov
and
xor
add
add
rol
leave
shll
add
js
jle
js
mov
or
xor
mov
and
cld
dec
xor
jns
cmp
loopne
add
lahf
mov
fs
in
and
sub
aaa
inc
mov
mov
pushf
inc
js
nop
sub
sti
movsb
push
mov
hlt
adc
mov
pop
pop
push
lock
arpl
jge
popf
dec
hlt
scas
iret
cmp
inc
sub
adc
mov
push
cs
repnz
aaa
jo
mov
jg
cmp
or
dec
mov
mov
pop
cltd
ret
mov
data16
int
sbb
imul
into
sub
stos
push
lds
cld
xchg
popl
mov
mov
sbb
sbb
insl
lcall
les
cmp
dec
xchg
lea
cmp
or
push
sub
cmp
inc
push
push
movsl
imul
push
lcall
push
pop
or
inc
test
aaa
and
imull
push
jb
fdivl
je
cltd
ja
push
in
jecxz
lret
mov
sbb
push
imul
cmp
repz
shlb
xchg
push
stos
mov
int3
push
inc
hlt
shll
xor
mov
in
adc
push
mov
not
outsl
add
or
mov
ret
push
xor
faddl
mov
mov
push
pop
lret
jmp
adc
call
push
scas
scas
or
push
ret
rcrl
adc
ljmp
and
pop
mov
pushf
xlat
mov
mov
sub
xchg
sarl
xchg
fistpl
fxam
test
jmp
fnstsw
dec
leave
decb
scas
sbb
cli
or
out
shl
mov
fiaddl
mov
sub
ljmp
cmpsl
mov
lds
jb
push
xchg
xchg
inc
outsl
jecxz
dec
inc
cltd
push
scas
mov
xorl
cmpsl
test
test
mov
fwait
aam
xor
xchg
and
adcl
pop
xchg
or
add
lds
fimull
jmp
pop
push
sbb
cli
nop
call
in
sub
cltd
lds
f2xm1
sti
fwait
mov
inc
pop
mov
pop
jg
jae
fmull
mov
push
ja
negb
idivl
fwait
loope
jg
xor
add
fs
sahf
cs
xchg
push
data16
popf
add
stos
orb
xchg
insl
insl
in
adc
in
or
into
sbb
cmp
cmpsl
add
sbb
xlat
icebp
push
repnz
call
call
jmp
mov
leave
ret
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
and
psubw
imul
jecxz
jbe
cli
pop
jmp
mov
popa
mov
out
jae
mov
ljmp
mov
je
fmul
lahf
sub
outsl
lcall
mov
subb
stc
test
xor
pop
sbb
and
stos
out
fidivl
xor
mov
cmp
or
shr
pop
test
pushf
icebp
shll
clc
loope
mov
mov
pusha
fstpl
push
adc
jge
movsl
adc
cmpsl
test
lret
enter
ret
xor
or
outsb
sbb
xor
mov
xor
jl
repz
cld
rcrl
mov
add
negb
inc
mov
testb
dec
lds
sub
pop
orl
xchg
std
stos
cld
mov
in
idivl
jge
xor
and
nop
lcall
shll
icebp
icebp
push
nop
mov
and
lret
push
mov
aad
adc
stos
bound
xchg
in
hlt
dec
inc
test
shrb
daa
xchg
jo
jns
mov
outsb
inc
popaw
fsubl
cltd
lds
cmc
sbb
add
jmp
push
jb
and
xchg
push
sbb
popa
push
xchg
inc
mov
adc
mov
mov
and
jle
mov
or
notb
push
push
mov
jl
sub
sbbb
bound
xchg
dec
pop
es
lods
inc
test
dec
mov
shl
mov
inc
outsb
inc
negl
ficoms
sbbl
sub
sub
and
movsb
rorl
ja
mov
mov
enter
xchg
aad
ljmp
inc
cmp
ds
cmpsb
sub
sub
loop
outsl
xor
push
or
nop
ljmp
loope
out
loope
in
scas
mov
push
sub
in
mov
mov
test
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
jns
lret
jg
adc
js
add
lcall
jp
inc
pop
xchg
add
test
or
sub
dec
or
dec
or
mov
lahf
adc
pop
push
cmpsl
adc
or
mov
adc
ds
push
mov
fldenv
dec
mov
xor
sbb
add
push
pop
ss
cmp
repnz
xchg
rcl
xor
sbb
jl
adc
arpl
xchg
repnz
and
xor
push
mov
enter
out
jns
mov
dec
sarl
dec
pushf
pop
in
mov
hlt
sbb
stc
aad
mov
les
push
jae
push
adc
call
in
stc
out
bound
or
lahf
xlat
ljmp
adc
push
mov
test
push
ret
clc
dec
cltd
xor
dec
pusha
sarl
lcall
adc
hlt
mov
loopne
sub
fwait
cmc
stc
pop
push
adc
out
dec
in
in
add
mov
push
jae
cmp
int
lock
sahf
les
push
push
fistpll
xchg
pop
add
or
popf
lock
pop
inc
aam
stos
dec
jge
idivb
pop
xchg
loop
pop
xlat
shl
cmp
sub
xchg
out
jg
loopne
insb
mov
and
xchg
fstl
mov
into
fidivrs
fsub
jae
inc
sbb
cld
cmp
or
mov
inc
or
cmc
mov
sbb
cs
pop
imul
cli
push
jnp
stos
ja
or
ret
outsl
fiadds
pop
dec
mov
adc
cli
int3
inc
push
lahf
adc
push
in
in
push
sbb
push
add
std
fbstp
and
add
sbb
push
pop
aaa
negl
cwtl
adc
ret
xor
jp
sub
inc
fiadds
fwait
pop
push
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
push
lds
leave
jg
adc
js
pop
lret
addr16
idivl
lods
push
div
fimuls
lret
shll
add
or
xchg
xchg
xchg
push
sub
clc
and
dec
test
pop
sub
ljmp
cmpsl
fldt
sub
xchg
and
mov
mov
call
dec
pop
dec
out
loopne
add
cmp
ljmp
out
insb
aad
cmp
sub
xchg
xchg
inc
fwait
ret
pushf
repz
xchg
sbb
popf
jno
rcl
cmp
or
xchg
pop
fidivrl
pop
jge
mov
fsubs
sbb
xchg
ret
and
out
xor
test
loopne
test
iret
mov
imul
enter
pop
ds
jo
mov
in
dec
xchg
faddl
lret
xchg
mov
add
lcall
out
sarl
loopne
xchg
enter
pop
mov
adc
imul
xor
jns
fidivs
pop
dec
push
mov
aam
mov
dec
mov
out
adc
dec
adc
push
sbb
les
mov
fwait
ret
push
repnz
pusha
scas
mov
in
mov
cmp
dec
mov
rcr
push
insl
mov
adc
push
lret
je
dec
hlt
ficoms
sar
add
dec
out
mov
xor
jp
pop
jecxz
scas
jmp
xchg
daa
add
dec
sbb
out
and
cli
jae
fisubrs
push
fisubrl
cmpsb
mov
cmc
and
sub
pop
leave
roll
cmp
mov
roll
sarl
int3
addr16
sti
addr16
call
and
dec
leave
fmulp
mov
sbb
popf
cmp
mov
sub
rcrl
sub
hlt
inc
cmp
dec
inc
in
and
shl
ret
dec
jecxz
addr16
sub
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
imul
js
jle
js
sub
cmp
jno
out
mov
xor
inc
bound
inc
xchg
pop
andl
daa
and
stos
jo
jo
push
dec
sbbl
pop
adc
iret
lcall
popl
sbb
imul
lds
lods
xor
and
xchg
push
leave
sub
jl
adc
sti
aaa
xor
or
pop
cs
and
sbb
sbb
insl
iret
xor
jg
popf
lcall
addb
mov
movsl
jo
pop
fmul
mov
ffree
les
xor
add
fists
jge
in
outsl
xchg
notl
mov
test
mov
out
in
pop
lret
sub
rorb
xchg
enter
out
frstor
ret
push
gs
loop
andb
shl
cmp
mov
xor
in
pop
push
test
sbb
add
cmp
xchg
xchg
jmp
push
inc
dec
aaa
dec
test
out
fstpl
test
loop
adc
repnz
hlt
pop
pusha
stc
addr16
out
psubd
imul
push
je
mov
cld
lret
aaa
scas
mov
push
in
fcomps
inc
cltd
add
jns
push
xor
xchg
xchg
jmp
adcb
lods
inc
test
ss
fistpl
loop
push
push
jns
popf
mov
mov
nop
aas
sbb
xchg
push
sahf
cmp
mov
std
jg
cmc
xchg
rorl
jb
and
mov
jl
and
cmpsl
pop
test
pushf
aam
adc
aam
gs
mov
push
pushf
mov
jl
in
xor
repz
adc
arpl
lds
aas
call
inc
into
out
int3
pop
movsl
dec
xor
inc
mov
adc
int
shlb
fidivl
push
mov
stos
imul
inc
mov
faddl
pop
and
dec
sub
push
nop
xchg
jbe
sbb
inc
loopne
test
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
in
aam
call
jle
js
mov
insb
pop
fcoml
es
jne
popa
loopne
call
int
stos
adc
call
cmpsb
lods
aad
mov
repz
test
mov
adc
stos
xchg
in
sti
mov
lods
shl
cmc
push
sbb
or
jns
sub
push
lea
sub
mov
lock
jae
or
aad
xchg
xor
mov
sub
push
sarl
ja
xchg
orl
cmpsb
out
cmp
pop
and
cli
jno,pt
lds
or
dec
dec
movsb
inc
inc
pop
push
push
std
mov
addr16
shrl
mov
sbb
sahf
adc
leave
jae
mov
stos
push
call
pop
pop
cld
push
fsubrl
out
repz
loopne
mov
mov
test
jns
jge
rclb
sti
adc
lahf
iret
ret
add
cmp
sti
lret
repnz
mov
jnp
repnz
cmpsl
adc
insl
rorl
js
add
sbb
or
lahf
sbb
scas
arpl
outsb
sbb
movsb
mov
adc
cmpsb
cli
xchg
rcll
aaa
sub
xchg
push
cmc
rcrb
fstpt
inc
jns
mov
js
jmp
ja
imul
jb
jg
pop
jno
movl
ret
mov
xchg
jns
jmp
loope
push
pushf
clc
inc
arpl
gs
push
mov
std
out
je
orb
push
ret
and
lock
fistl
mov
in
sahf
mov
or
sub
xchg
bound
in
mov
sarb
scas
xor
mov
mov
pop
scas
in
jg
inc
ja
add
outsl
scas
cmp
subb
mov
lods
fcmovnb
jae
adc
arpl
std
push
popa
jo
push
mov
add
add
inc
add
jne
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
std
pop
fadds
jle
js
test
mov
out
xor
pop
shll
hlt
add
pop
pop
xlat
mov
iret
sub
cwtl
add
repnz
aaa
push
cmp
pop
aam
xchg
rcr
movsb
push
mov
mov
out
jge
sbb
cmp
cs
sti
push
jbe
jmp
jbe
mov
sbb
xlat
mov
cmpsb
ret
js
or
push
in
mov
cmc
or
nop
decl
xchg
arpl
or
xchg
sub
in
jns
xchg
das
lret
mov
arpl
pop
cwtl
jle
jns
fisttpll
aam
test
testl
push
cmp
mov
inc
inc
pop
arpl
inc
xchg
lock
xor
add
ja
cmpsb
pop
lea
mov
cmp
sti
push
sub
fisubrl
push
jo
daa
dec
pusha
and
fcoms
xor
test
hlt
shll
sbb
pop
rcrb
push
mov
inc
mov
xchg
jnp
or
aad
in
add
pop
loop
sbb
mov
jmp
icebp
mov
xor
sbbb
sub
mov
push
sub
mov
sti
lock
loopne
or
cmpsb
inc
imul
inc
dec
and
pop
shll
sub
insb
enter
shrb
rorb
adc
out
ficoms
pop
mov
dec
push
jp
cwtl
std
dec
in
push
prefetch
or
lret
fdivr
and
dec
clc
dec
mov
dec
test
pop
arpl
insl
loop
dec
jb
or
xor
leave
and
jecxz
rcrl
out
add
mov
dec
or
mov
and
adc
cmp
jge
insb
fdivrl
push
pop
sti
std
es
aaa
and
stos
sub
pop
rcr
imul
dec
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
mov
int
sarl
adc
js
xor
sbb
sbb
pcmpgtw
or
ljmp
ss
out
lds
pop
or
push
repnz
lds
dec
clc
imul
mov
push
and
sti
push
push
dec
je
rcrl
leave
jge
cmp
xchg
add
cmp
adc
push
xor
mov
movsb
icebp
mov
mov
cmp
std
js
xor
inc
xor
insl
mov
adc
dec
sahf
test
fldcw
pop
mov
das
shlb
cmp
rol
pushf
out
adc
cmpsl
dec
sub
and
and
lods
fldenv
push
das
push
shll
das
loopne
test
dec
xor
push
ljmp
push
add
xor
push
test
cmc
and
pop
test
leave
movsb
je
in
xor
cli
jg
push
fwait
cmpsl
fisttpl
xchg
pop
pop
hlt
xor
aaa
push
adc
fmuls
lods
cmc
dec
and
mov
mov
fucomi
xchg
fmull
testb
imul
inc
lods
aaa
cmpsb
test
add
imul
dec
sbb
cmp
or
sbb
lret
and
loopne
es
pusha
scas
sub
push
cmp
gs
sub
pop
sub
leave
rol
cmp
ret
sbb
fistps
sub
lret
test
and
arpl
mov
ret
mov
popa
inc
into
add
xor
sbb
inc
test
or
les
mov
push
jp
xor
in
mov
adc
imul
mov
std
push
or
test
jne
lea
stos
fsubrs
jno
pop
jecxz
add
outsb
mov
movsb
test
jge
ds
pusha
pop
shrl
add
cmpsl
repz
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
fidivrl
jg
adc
js
cmp
mov
pusha
and
ss
in
aas
jmp
outsb
or
lock
push
xlat
jp
cwtl
in
negl
andb
inc
out
mov
fwait
in
cmp
data16
sarb
mov
lds
inc
loopne
inc
mov
out
pop
repnz
jne
dec
arpl
cltd
xchg
and
push
les
mov
push
mov
sete
add
lods
push
cmp
enter
mov
sub
ret
addl
movsb
xchg
es
sbb
sub
adc
in
jmp
adc
bound
jo
fdivr
xchg
addr16
push
notl
fistpll
je
push
lahf
stos
jnp
xor
sbb
jg
mov
add
sub
inc
fs
movsl
adcb
mov
lods
push
sti
pop
push
adc
cmc
sbb
add
aam
pop
pop
push
inc
xchg
ljmp
out
lock
out
mov
jge
adc
adc
fdivr
into
imul
test
cmp
mov
lahf
ja
sahf
sahf
sub
pop
jae
ljmp
out
sti
xchg
jb
dec
jp
sbb
ds
fnstenv
xor
das
xchg
inc
sahf
pop
mov
jae
and
push
jns
or
pop
xor
mov
fcoms
aam
cltd
adc
and
aas
sbb
in
jb
mov
popf
cmp
inc
sub
cli
insb
push
inc
inc
gs
rcrl
push
xor
mov
pop
iret
cltd
mov
fs
cmp
inc
iret
dec
jg
cli
ja
js
push
pop
insl
add
dec
lods
xor
hlt
bound
add
shl
adcb
inc
sbb
mov
rcl
push
or
inc
retw
jo
das
mov
in
ja
lret
mov
xchg
popa
fstpl
stos
outsl
cmp
nop
add
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
subl
inc
dec
aad
js
jle
js
push
push
into
dec
enter
fcmove
push
in
inc
push
adc
into
sub
xlat
ljmp
fidivl
enter
dec
gs
and
leave
mov
rorb
inc
jbe
lea
inc
stos
xchg
pop
ljmp
iret
cmp
ljmp
test
mov
lods
les
xor
icebp
dec
fs
stos
mov
syscall
or
xchg
xchg
daa
shrb
sbbb
jecxz
pop
or
dec
das
sub
pop
ror
jnp
mov
dec
outsb
sbb
push
fwait
mov
in
nop
jnp
mov
cwtl
imul
adc
sahf
fidivrl
sbbl
inc
mov
jb
cmp
aas
jmp
cld
popa
call
jns
and
adcb
jmp
filds
lcall
sub
insb
cmpsb
je
jns
dec
xchg
mov
les
movsb
fisttps
xchg
sahf
cmpsb
pcmpgtw
sub
subb
xchg
mov
js
cmp
addr16
mov
mov
je
xor
les
arpl
mov
jl
dec
in
mov
xchg
cld
out
cli
test
popa
mov
cmc
rcrb
hlt
into
sbb
xchg
insl
pop
mov
jb
call
leave
adc
lods
xor
dec
es
jge
es
orb
int3
leave
loop
pop
mov
das
dec
aas
adc
pop
or
sarl
stc
mov
or
mov
cwtl
push
lret
in
xor
enter
pushf
inc
cmp
adc
push
rcrl
sbb
cmp
sbb
pop
jo
lcall
out
cs
repz
leave
pop
pop
adc
xchg
xor
clc
adc
testb
sbb
vmovapd
jl
mov
or
and
mov
mov
dec
pop
jmp
rcl
aas
leave
cmp
pushf
mov
lock
fstpt
adc
js
and
inc
sub
jno
adc
outsl
xlat
pcmpeqb
xchg
push
ja
es
xlat
in
and
icebp
int3
pop
pop
jae
insb
lcall
sub
jmp
adc
cmp
lds
mov
mov
pop
cmp
adc
std
mov
and
xor
add
pop
cmp
lock
xchg
hlt
rorb
adc
mov
mov
cld
int
pop
sub
loopne
outsb
cli
xchg
negl
out
incb
sub
les
lret
cmpsb
les
cmp
fdivr
fucomi
pop
and
push
test
leave
fwait
ss
mov
test
aad
rcll
push
fdivl
int
int
stos
mov
shrl
mov
das
call
add
xor
loope
sub
sbb
xor
adc
lods
mov
xchg
sub
jecxz
icebp
push
iret
inc
in
cmp
xchg
adc
jmp
push
sbb
arpl
mov
andl
xchg
aam
lahf
pop
ljmp
jo
ret
hlt
cld
andb
in
in
inc
pop
xchg
aas
push
rolb
and
and
inc
jne
sbbb
out
adc
xor
cmc
sbb
imull
xchg
and
fldenv
mov
outsl
xchg
xchg
clc
jmp
push
sbb
dec
sub
cmpsb
or
jmp
pop
aam
inc
jnp
ds
mov
adc
xor
add
adc
bound
push
insb
cli
aaa
pop
jmp
lods
hlt
ret
pop
sahf
div
shrl
dec
pusha
fdivl
imul
repnz
cmpsb
orl
push
ljmp
fwait
dec
fs
call
mov
cmc
and
xchg
sub
jmp
ret
aas
fxch
rcr
mov
mov
jg
adc
js
sahf
test
mov
seta
roll
push
ret
hlt
aam
dec
cli
dec
loopne
sbb
movsl
jbe
push
jle
repz
sbb
test
outsl
aad
xor
out
cltd
icebp
addr16
imul
mov
test
imul
sub
sub
lock
mov
adc
rorb
pop
test
add
lds
jno
mov
mov
xchg
out
and
popf
ja
add
mov
enter
push
cmc
enter
mov
int
xchg
mov
jns
or
push
movsl
test
fldenv
xchg
jae
sbb
test
mov
jmp
push
ret
mov
xchg
notb
ret
or
subl
jmp
repnz
roll
negb
mov
out
sti
adc
adc
mov
adc
dec
mov
scas
or
loop
rclb
movsl
add
and
lock
into
rol
push
pop
shll
adc
andl
and
imull
iret
jle
repnz
dec
or
xor
insb
lcall
push
pop
mov
adc
cmp
inc
arpl
aaa
out
das
push
loop
shll
fcoml
inc
jecxz
cmp
add
xor
cli
pop
mov
inc
lds
mov
daa
sub
inc
cmp
daa
xchg
movsb
test
loope
ja
test
fidivl
sbb
dec
xor
fchs
test
das
cmp
ficompl
mov
adc
movsb
xchg
mov
sahf
mov
dec
scas
jmp
xchg
mov
sahf
aaa
push
sbb
lods
stc
enter
and
fwait
call
outsb
arpl
or
sbb
jmp
mov
ja
or
xchg
jmp
int
int
fnstcw
jg
mov
fidivrs
adc
js
sbb
in
lods
mov
xchg
jl
in
mov
int
cmp
movsb
aam
scas
jno
pop
sub
fwait
dec
or
xor
xchg
fnsave
popf
rcl
pop
lcall
enter
lock
imul
cmp
cli
test
fwait
sub
in
mov
or
cwtl
lods
cmpsb
sbb
cmp
push
mov
lock
hlt
jne
repz
xlat
movsb
aas
sahf
mov
rcll
jge
rorb
cld
inc
fwait
xchg
push
jnp
push
pop
repz
mov
push
scas
icebp
sub
mov
add
sub
gs
fmull
mul
daa
and
or
cwtl
testl
inc
push
dec
add
mov
push
in
lods
or
inc
cmp
push
fistpll
rcrb
ja
cmp
dec
inc
xlat
push
fdivr
ret
sbb
adc
aaa
int3
mov
adc
sarb
cld
gs
test
scas
hlt
dec
adc
add
xor
data16
inc
ljmp
push
in
and
dec
xchg
mov
insl
push
test
cli
mov
xorl
xor
pop
bound
rcr
or
in
imul
and
mov
dec
clc
lds
icebp
pop
inc
xchg
das
mov
jnp
and
xchg
shll
stc
and
adc
lods
inc
push
fs
fadds
ds
mov
lock
outsl
xchg
pop
pop
out
lods
jg
or
lret
mov
pop
sub
pop
pop
lds
je
push
mov
jmp
adcb
fwait
movsb
or
xchg
lock
inc
mov
and
mov
mov
push
iret
lahf
jecxz
icebp
shll
mov
inc
pop
pop
out
inc
ss
mov
jmp
iret
enter
fcmovnu
xlat
push
sarb
inc
sub
jg
adc
js
ss
fucom
leave
inc
mov
xchg
xchg
pop
mov
xor
je
je
in
and
adc
aad
mov
push
and
xor
mov
iret
sub
in
xchg
xchg
negb
das
sub
orl
movupd
inc
and
mov
cmc
jmp
rcr
sub
enter
scas
lds
pop
inc
dec
addr16
push
ljmp
xor
cld
ljmp
jmp
inc
testl
aam
in
ljmp
pushf
cwtl
popf
movsb
sbb
outsl
push
and
pushf
xlat
fcmovb
out
jecxz
push
sahf
test
mov
mov
mov
insl
movsb
mov
pmulhuw
lods
mov
push
xor
adc
and
fmuls
sub
inc
imul
les
push
loopne
andb
iret
sbb
dec
je
shl
cmp
mov
out
cltd
and
ret
push
xchg
cmp
data16
pushf
mov
push
jge
popa
pop
push
out
cltd
cltd
push
test
and
idivl
imul
aaa
rcrb
xchg
pop
popf
addr16
mov
jo
or
leave
dec
push
ljmp
in
push
xchg
mov
and
mov
shll
adc
clc
shll
push
xchg
cmp
cmc
aaa
or
pop
inc
ja
mov
mov
in
jb
andb
lock
sbb
negb
nop
cmp
addr16
pop
lret
out
jae
pop
inc
push
mov
add
jle
mov
in
pushf
xor
cs
mov
je
incl
xchg
dec
fs
fistpl
fcom
cwtl
inc
lods
or
inc
jl
fistl
pop
movb
xor
push
gs
or
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
int3
lods
or
jg
adc
js
cmp
lods
stos
cmp
xlat
jo
pop
sbb
sbb
js
sub
jle
adc
inc
cmc
into
jno
loop
aam
sbb
and
iret
add
mov
mov
mov
xor
dec
mov
sbb
inc
jne
fs
or
in
xor
add
xor
mov
popa
jmp
mov
ljmp
fidivs
gs
mov
pop
pop
test
sub
dec
imul
inc
insl
sub
cmp
lret
mov
push
or
icebp
out
dec
shll
fnsave
in
movsb
adc
push
jns
rcrb
jno
xorl
mov
jecxz
dec
dec
fldcw
popw
imul
loopne
ficoml
shr
imul
adc
fisubrs
in
xor
scas
gs
push
mov
adc
lret
or
cmpsl
orl
cmpsl
add
sahf
faddp
in
jp
lea
pop
push
xor
mov
push
flds
dec
mov
vmulsd
fs
xor
lds
shlb
push
push
pop
ss
cltd
das
adc
add
cmpb
xchg
roll
or
jmp
in
out
rolb
push
jmp
pop
sub
jnp
mov
ja
sarb
jbe
sbb
add
inc
outsb
push
cwtl
and
stos
daa
add
or
icebp
jo
sarl
sub
lahf
lea
addr16
inc
inc
inc
sub
test
adc
mov
jb
xor
sub
aam
mov
cmp
pop
jmp
cwtl
jo
int
sub
and
mov
sahf
or
test
xchg
sub
outsb
mov
mov
cli
loopne
xchg
lahf
sbb
inc
inc
xchg
sub
incl
int3
xchg
arpl
dec
in
lret
xor
adc
sarl
popa
xor
add
jmp
int
int
rcl
int
cmp
pop
lcall
js
add
das
out
dec
cmpsb
adc
stc
xchg
sub
or
mov
movsb
and
pop
int3
pop
mov
add
lahf
lods
stos
iret
subl
mov
rol
mov
lock
fld
xchg
scas
fistps
inc
inc
fs
xchg
sub
adc
mov
cmpsb
inc
mov
xchg
fnsave
mov
adc
imul
cmp
adc
sub
pop
insl
out
gs
push
insb
aaa
lcall
jno
jmp
bound
add
cmp
enter
jo
je
lahf
sbb
dec
pop
or
data16
mov
and
mov
rcr
sub
cmc
int3
lock
add
mov
mov
cmpsl
sbb
out
pop
mov
adc
pop
cmp
adc
pop
adc
and
push
notl
sub
orl
pop
les
outsl
mov
jno
mov
movsb
aam
loope
lahf
into
sbbl
fdivrs
push
mov
ret
pop
loop
sbb
pop
mov
adc
push
ret
pop
jmp
in
push
inc
hlt
ljmp
or
mov
or
loope
mov
jl
mov
out
xor
loopne
fwait
mov
cmpb
xor
push
and
out
dec
pop
insl
lcall
add
push
sub
cs
inc
push
out
scas
dec
xchg
fisubrs
adc
jecxz
add
cmpsl
push
shll
shlb
scas
cmp
movsl
and
mov
aas
divb
in
mov
movsb
pop
pop
lret
test
lret
jns
sub
jle
aas
sbb
push
lock
jne
cmp
push
mov
bound
mov
call
lock
add
ja
cmp
fucomip
push
dec
pop
adc
cwtl
imul
mov
jmp
lret
xlat
vpsubusw
lret
xor
fsubp
lock
js
jle
js
testl
fildll
lahf
mov
adc
push
adc
into
negb
lods
xchg
sahf
pop
xchg
lea
fstl
flds
adc
push
cmp
cs
pop
sub
leave
daa
push
jecxz
sbb
mov
or
lods
xchg
arpl
sbb
enter
mov
pop
xlat
mov
sbb
cmp
repz
aaa
push
push
sahf
fnstenv
xchg
cli
es
ja
cmp
xchg
pushl
mov
mov
scas
mov
popf
pushf
or
dec
jecxz
adc
mov
daa
pop
add
ds
push
in
int3
aad
iret
sahf
rcrl
jp
and
sbb
shr
jns
fwait
shll
imul
lcall
out
mov
insb
nop
mov
pop
testl
xchg
call
ficoml
out
lcall
daa
jns
push
cli
lret
jo
pop
dec
js
scas
outsl
sbb
lahf
push
jg
imul
push
and
adc
dec
test
adc
inc
scas
sub
mov
fdivrl
pusha
mov
int3
jl
lahf
cmc
add
lret
lods
jg
xchg
addb
aas
pusha
clc
sub
inc
cmp
or
pop
xchg
cmp
fnsave
mov
insb
insb
jl
ds
dec
mov
jecxz
ja
lcall
arpl
and
sti
dec
gs
negb
push
pop
lret
int
xor
mov
dec
insl
mov
push
cmp
insb
or
pop
aas
aas
mov
add
cmp
insb
out
fwait
sbb
ss
and
mov
push
adc
sbb
lret
pop
mov
mov
adc
sbb
cmpsl
fidivs
ror
pop
je
or
ss
adc
xchg
jmp
xorb
jmp
enter
iret
rcl
mov
out
das
mov
jg
adc
js
mov
dec
pcmpeqw
adc
sahf
xchg
mov
mov
arpl
jno
cmc
or
jno
repz
and
ss
mov
dec
pop
cmp
add
sub
xor
popa
mov
xchg
pop
inc
xor
pop
fidivl
push
orl
imul
mov
dec
mov
stos
jl
adc
xlat
dec
cmp
lahf
bound
push
sbb
mov
aam
cmp
lret
xchg
cs
or
dec
add
xchg
daa
shrb
hlt
mov
fists
xor
mov
sub
cmc
fcmovnbe
movsb
sbb
xlat
lea
add
ss
cmp
xchg
fnstenv
mov
mov
cwtl
imul
sti
pushl
fildll
cmp
bnd
adc
jl
and
repnz
pop
pushf
stos
mov
stos
ret
jmp
add
mov
and
mov
or
lcall
lods
cmp
push
sub
ret
sti
mov
jae
insl
dec
inc
push
into
lea
xchg
cmp
xor
lcall
dec
cmp
sub
push
cld
in
push
outsb
adc
lock
push
cmpsb
pop
and
or
push
mov
cwtl
mov
mov
aad
xchg
push
lret
int
fstpt
pop
sub
jmp
enter
xchg
into
pusha
dec
cmpl
lcall
in
or
mov
bound
jae
adc
fstpt
xchg
mov
enter
and
fwait
stos
push
sbb
adc
call
in
in
aas
test
fwait
out
add
pop
sub
push
pop
pop
mov
shll
in
adc
inc
popa
cmp
fcmovne
jbe
mov
fwait
int3
lret
xchg
mov
and
subb
or
xor
add
into
leave
leave
rcr
fldcw
stc
push
xchg
andb
js
and
out
mov
dec
clc
fwait
xor
mov
nop
inc
loopne
mov
xor
sbb
or
xor
imul
pushf
add
xor
arpl
imul
jne
adc
adc
in
pushf
bound
mov
dec
fstpt
icebp
int3
sub
rcrl
and
pop
jge
adc
test
out
xchg
cmpsl
into
push
iret
das
cmp
cs
js
add
cli
pop
mov
lds
push
movsl
xchg
jo
fstp
lds
mov
aas
fsubl
aaa
xor
out
jge
and
mov
cmc
jl
lret
test
or
mov
sub
ss
cmpsb
lret
das
pop
pop
push
sbbb
mov
sub
or
imul
in
xchg
imul
enter
pushf
push
and
mov
or
das
cmpb
jnp
aam
lea
mov
or
lds
add
inc
cmc
add
pop
jg
push
push
adc
jb
rorl
jae
mov
call
push
test
jno
mov
jmp
leave
rorl
test
mov
mov
shlb
mov
or
daa
daa
xchg
and
jl
push
and
add
pop
test
pushf
jnp
dec
int3
sbb
call
xor
rolb
out
and
add
das
in
jecxz
add
mov
inc
popf
mov
aad
insl
mov
insb
fmull
and
ficoml
mov
test
cwtl
mov
jbe
pop
and
jb
or
in
dec
fcmovb
mov
insl
xor
jne
shl
loope
fwait
aam
jp
mov
mov
dec
and
mov
and
pop
test
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
js
sbb
call
js
or
adc
shrl
dec
pop
push
clc
aam
outsb
inc
sarb
test
ja
push
adc
lcall
ja
adc
inc
adc
push
jo
in
push
push
mov
pop
das
adc
mov
xchg
add
gs
cmp
clc
push
sbb
cmc
lds
jo
mov
mov
iret
sub
mov
mov
repz
jp
cwtl
out
gs
mov
cmp
cmp
push
mov
pop
cltd
sahf
push
jno
jmp
xor
mov
sbb
jb
cmp
mov
lods
lods
push
mov
cmpsl
sti
jecxz
adc
jg
xchg
mov
fldcw
sbb
stos
or
adc
jg
outsl
iret
push
movsl
pushw
mov
cld
in
mov
mov
ficoml
mov
adc
jp
or
mov
les
or
pop
repnz
sbb
lods
sub
ficoml
lds
xchg
cmp
cwtl
popa
std
xor
rorb
in
mov
xchg
jnp
mov
dec
iret
pop
pop
stos
in
lret
mov
mov
xchg
into
or
outsb
mov
push
cwtl
jle
bound
push
sbb
stos
add
outsl
repnz
out
aaa
imul
jl
jmp
sbb
pushf
adc
xchg
and
nop
xchg
add
inc
xchg
and
jg
sub
in
shr
rolb
adc
in
lea
mov
jne
bound
push
outsb
mov
jge
pop
xchg
pop
add
fildll
shrb
or
xchg
jns
pop
dec
cs
scas
sbb
or
dec
fcom
mov
test
outsl
mov
es
pop
push
push
sbb
xchg
test
popf
adc
mov
xor
push
and
jae
scas
fwait
pop
add
inc
xchg
test
nop
dec
les
and
inc
add
xor
add
jmp
cmp
rol
jb
dec
pop
aad
fidivl
push
out
jg
adc
js
mov
mov
jge
inc
xchg
cs
mov
repnz
gs
pusha
push
leave
adc
mov
js
ret
notl
jnp
in
aaa
jo
stos
push
adc
gs
add
cmpsl
mov
xor
add
inc
sbb
ds
push
ss
mov
js
lods
jbe
mov
cmp
orb
dec
cmp
inc
shll
inc
jle
mov
mov
mov
pop
adc
scas
lea
inc
adc
aas
adc
dec
rol
mov
or
mov
add
stos
adc
cwtl
and
mov
call
mov
ljmp
les
jne
je
sbb
xchg
sahf
mov
cmp
popf
xchg
lock
push
mov
arpl
cmpsb
xchg
add
shr
adc
into
clc
push
add
jle
jno
loope
dec
inc
add
shl
xorps
dec
bound
xchg
rorb
or
inc
jno
xor
data16
mov
mov
data16
movd
mov
xchg
cs
inc
inc
mov
and
inc
cltd
xchg
push
adcl
push
xchg
cmpsb
sahf
cld
jb
sub
out
addr16
ja
lods
repnz
lods
pop
jp
xor
rcrl
jle
mov
jg
adc
sahf
pop
mov
aas
out
out
lea
rcrl
jne
daa
lret
push
es
jae
cmp
insl
push
mov
push
and
sbb
das
mov
call
fwait
dec
add
stos
test
and
ja
push
mov
sub
mov
jle
fsubrl
arpl
js
notl
arpl
repnz
and
xor
ja
mov
mov
mov
cmp
gs
sbb
std
pushf
les
fstpl
xor
mov
mov
inc
mov
fcompl
hlt
jmp
rol
enter
lret
pop
jp
in
pop
push
jle
js
and
adc
aas
gs
iret
out
in
sar
pop
push
ss
or
or
mov
stc
xor
call
test
not
faddp
in
jns
cmp
jns
mov
stos
aad
push
ret
pop
push
in
adc
xlat
or
pop
rorl
pop
mov
loopne
xchg
movsl
mov
bswap
jo
insl
ficompl
shrb
jmp
adc
repnz
jle
rclb
cli
inc
stos
sub
xor
mov
fimuls
sbb
push
jecxz
push
int
mov
inc
int3
sub
outsl
lods
out
testb
sbb
jmp
out
scas
shll
inc
ss
cli
jbe
es
popf
xor
js
and
movsb
fbstp
and
fistl
pop
cmp
push
sti
das
js
pusha
test
int3
vaddsubps
mov
mov
rclb
jno
imul
jp
mov
stos
out
dec
and
xchg
xchg
add
cld
cmp
cld
mov
cmpsb
xor
adc
enter
loopne
outsl
xor
imul
jns
leave
ja
fnstcw
adcl
js
mov
add
jge
push
jbe
clc
cmp
push
enter
scas
sub
sbb
cltd
xchg
in
mov
pushf
xorl
lds
call
mov
in
fimuls
sarb
cmp
sbb
mov
pop
mov
in
xchg
cmc
sub
fs
push
fstpt
mov
jecxz
add
les
or
xor
into
and
out
mov
outsb
mov
push
xor
xorb
clc
xchg
std
mov
add
inc
mov
sbb
or
push
push
jb
into
jo
pop
cmp
inc
clc
leave
push
xor
cmp
lock
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
in
add
jg
adc
js
or
add
insb
mov
add
mov
addl
push
mov
xchg
cmp
xor
loopne
adc
js
in
iret
ret
mov
outsb
js
pop
cmp
mov
xor
xor
test
daa
out
xor
loope
pop
inc
nop
push
jmp
fsincos
lods
sbb
into
jnp
cmpsb
imul
dec
fwait
popa
push
push
hlt
sahf
sbb
leave
popf
or
push
mov
ds
and
cli
aam
pop
daa
jno
xor
cmpb
jo
push
leave
jmp
mov
push
xor
das
push
dec
jnp
adc
inc
das
fwait
xchg
ljmp
mov
jb
cmp
cmp
ss
inc
lea
stos
pusha
mov
cmpsb
jae
test
dec
call
and
xchg
ds
leave
iret
lods
addr16
leave
out
inc
fnstenv
xorl
das
pop
iret
jl
sbb
mov
lcall
popf
pusha
and
rcrl
jns
add
scas
sub
cmp
push
roll
std
pop
shlb
icebp
push
cli
inc
cli
sub
clc
and
xor
push
push
imul
mov
pop
sbb
cmpsl
scas
lock
sbb
out
insl
pop
lcall
mov
call
fimull
leave
xor
pop
xchg
gs
add
shll
movsl
in
es
xor
push
jno
arpl
shl
call
jb
sbb
cmp
out
insl
inc
dec
mov
mov
jl
std
jg
mov
icebp
dec
add
imul
or
mov
pop
jae
push
mov
scas
xor
sti
xchg
sti
fcmovbe
pop
shrl
shll
xchg
add
xchg
push
dec
sbb
scas
push
add
or
test
jecxz
ljmp
sbb
rolb
pop
hlt
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
je
xchg
sbb
jg
adc
js
bound
cmpsb
lret
mov
and
sahf
fidivrl
mov
and
inc
arpl
fidivrs
scas
push
push
lret
mov
jle
repnz
mov
mov
sub
cmp
out
pop
lock
cmp
xchg
mov
or
aas
stos
adc
mov
lds
mov
test
push
orb
pop
mov
inc
jge
xor
pop
jb
inc
dec
push
into
adc
dec
sbb
push
mov
jp
inc
mov
icebp
inc
adc
and
inc
shll
adc
movsb
mov
mov
ja
ret
adc
outsb
jae
push
ja
lret
jnp
sub
out
outsl
mov
je
add
mov
dec
es
inc
mov
in
cmp
xchg
cmp
xor
aaa
jae
cmp
push
lods
push
jnp
lret
cmp
cmp
jp
pop
add
and
xchg
push
ret
enter
loopne
out
sbb
jle
mov
mov
cmpsb
in
cltd
inc
jmp
pop
pop
lret
cmp
lods
imul
xchg
mov
sub
pop
fisubrs
pop
test
pusha
das
loopne
cmpsl
js
push
jg
popa
xchg
mov
gs
cmovne
es
push
shlb
in
enter
cli
repz
in
jo
repnz
out
lods
add
inc
mov
mov
pop
or
mov
xchg
out
jne
call
add
iret
out
repz
sbb
xchg
int
jmp
and
dec
inc
addl
adc
test
xor
lock
mov
mov
loope
mov
imul
pop
mov
ss
div
adc
push
mov
clc
and
cmp
divb
mov
push
lret
add
xor
jmp
into
iret
into
ror
aad
aad
mov
jo
xor
jg
adc
js
sbb
mov
or
xchg
hlt
pusha
pop
lret
mov
test
adc
out
dec
cld
hlt
in
inc
push
and
push
pop
xor
pminub
cmp
cmpsl
add
loope
sub
lock
fs
or
jbe
loopne
fimull
add
js
loop
mov
lret
adc
sbb
xchg
push
sbb
out
adc
xlat
das
scas
loopne
lods
mov
jle
subb
inc
xor
cmpsb
or
mov
stc
fabs
mov
pop
stos
nop
popa
jmp
sbb
movsl
sbb
test
adc
lea
add
popf
lods
jl
sbb
popf
into
cmpb
into
in
sbb
aam
xor
mov
addr16
cmpsb
add
nop
aam
push
fdivs
sbb
add
clc
sbb
clc
jmp
cltd
negl
test
in
adcb
jns
ror
push
xor
xchg
scas
and
shll
pop
adc
sti
xchg
pop
dec
pushw
sub
inc
inc
xor
out
mov
movsl
out
sub
mov
rcr
aas
daa
push
add
sbb
test
lret
test
out
and
inc
adcb
adcb
xchg
lret
mov
sbbl
xor
or
mov
and
sub
and
enter
sbb
sar
std
fstp
adc
cmp
fisubrl
dec
push
mov
xor
cmp
jo
cs
sub
jg
and
jbe
outsl
sub
in
lods
add
pop
add
sbb
mov
movsb
pop
push
lods
jnp
xlat
popf
test
mov
or
mov
inc
mov
pop
dec
jns
jno
pop
hlt
xchg
jb
cmpsb
jmp
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
imul
aad
jp
loop
push
incl
sub
mov
adc
pusha
xor
adc
sahf
cmp
push
ds
cmpsb
xchg
das
jge
scas
das
dec
xchg
popa
mov
cmp
movsl
mov
jecxz
flds
pop
xor
stc
frstor
pop
test
outsl
scas
into
add
lret
daa
add
lds
fldl
fs
cmpsb
ja
lds
scas
fsts
or
mov
jl
hlt
xchg
xlat
pop
inc
push
add
fidivl
in
scas
fsubr
mov
jle
xorb
pop
clc
daa
mov
leave
add
lds
sbb
xchg
jo
adcb
jg
cmp
movb
inc
movsl
aas
add
mov
pop
pushw
ja
sbb
pop
push
pop
pop
and
mov
mov
nop
dec
daa
lea
mov
inc
leave
and
inc
lcall
pop
testl
lret
pop
mov
fcomi
test
ljmp
loope
pop
add
ret
xorb
stos
inc
mov
mov
xlat
cld
xor
pop
sub
xchg
pmovmskb
sbb
jno
inc
std
pop
cmp
mov
push
jg
mov
mov
cmp
or
mov
insl
in
not
dec
pop
cld
mov
test
pop
push
ss
pop
inc
ret
or
enter
and
mov
shrl
out
dec
add
sbb
sbb
lcall
fldt
and
jg
and
pop
mov
jl
xorl
pop
testl
xor
xchg
jbe
pushf
sub
sbb
fs
pop
mov
cmp
or
in
insb
sbb
movsb
and
mov
aas
add
cmp
movsl
in
lds
mov
push
add
xor
cmp
rol
int3
int
cmpsl
std
lahf
xchg
addr16
cmp
dec
imull
pop
or
inc
jp
dec
inc
pushf
addl
dec
nop
outsb
pop
mov
pushf
call
sbb
lods
cs
and
ret
add
xchg
repz
clc
stc
lcall
ret
mov
outsb
push
xchg
cwtl
repz
mov
rorl
mov
jmp
fistl
lahf
repz
pop
mov
dec
pop
xor
out
xchg
das
push
push
clc
add
lock
mov
incl
sub
lds
sahf
hlt
pop
xor
adc
jecxz
dec
mov
mov
stc
loope
repz
sub
xor
imul
js
in
mov
and
jns
ss
data16
or
mov
xor
push
mov
xchg
inc
test
xchg
push
xchg
int
inc
outsl
push
xlat
nop
cmpsb
cmp
xchg
inc
pushf
add
shlb
dec
mov
lds
roll
lock
popa
and
pop
ss
movsl
mov
mov
add
out
repz
inc
add
pop
orb
cmc
stos
sbb
cmp
jne
aam
ljmp
popf
push
mov
outsl
arpl
adc
sti
jg
mov
mov
jns
sbb
push
jl
adc
push
cmp
or
int
xchg
sub
adc
push
jb
loope
add
roll
std
cmpsb
sub
dec
adc
add
cmp
insl
pop
scas
mov
xchg
jg
outsl
mov
mov
ficompl
adc
inc
push
jmp
int3
loopne
das
add
lcall
or
loopne
mov
xchg
test
ret
jno
jg
insb
aad
pop
jle
ja
dec
in
fs
mov
out
les
stos
inc
and
cli
fisubrl
out
enter
dec
es
int3
add
lcall
or
rcl
repz
inc
int3
shrb
aaa
push
push
out
aas
sbb
loope
mov
movsl
repz
mov
sahf
and
bound
clc
jg
outsl
xchg
or
or
aam
loop
jge
repz
sbb
mov
pop
pop
sahf
push
stos
inc
cmpsb
xchg
xchg
pop
cmp
xchg
in
adc
add
sub
or
dec
add
jmp
push
inc
xchg
mov
sbb
outsb
xor
dec
cmp
or
sbb
sbb
jae
iret
loopne
sahf
push
inc
jo
aam
add
cmp
cmp
insl
movsl
stos
mov
sbb
nop
leave
out
mov
push
sti
xchg
lods
jae
xchg
and
inc
fnstcw
sbb
idivl
xchg
into
repnz
jle
iret
std
cmp
pop
add
adc
lods
shrl
add
orl
push
cwtl
dec
mov
int3
movl
ret
cli
push
and
mov
aaa
jmp
dec
arpl
lods
cmp
in
mov
rcrb
mov
pop
inc
cmpb
pop
dec
push
jne
dec
inc
cmpsb
mov
mov
stc
aam
or
sbb
and
mov
pop
jle
out
xchg
cli
mov
loope
push
mov
jno
imul
xchg
repz
mov
stc
fwait
cmp
fdivs
movhps
test
in
push
add
cmpb
mov
in
jbe
aad
and
sub
fsub
sub
aas
jnp
pop
lcall
push
sbb
scas
int
xchg
sahf
mov
mov
repz
movsb
mov
les
ficoms
sub
xchg
xor
push
inc
or
or
dec
lods
fdivs
mov
bsr
lret
imul
inc
pop
fcoms
popf
pop
in
inc
jo
movsb
mov
jl
addb
push
lahf
sub
mov
dec
add
add
add
add
dec
inc
pop
inc
pop
pop
shrb
stc
sub
add
addl
popa
loopne
icebp
stos
out
fdivrl
adc
fsubl
pusha
sub
or
or
push
xlat
lods
fadds
push
fstl
inc
xchg
mov
enter
or
add
pop
inc
or
xchg
xchg
call
push
dec
pop
lret
mov
sbb
das
xor
lahf
sub
add
mov
addb
push
or
aam
iret
inc
push
dec
aad
in
aaa
int
jmp
or
jns
cmp
daa
xchg
jb
pop
push
mov
loop
push
hlt
pop
stc
push
test
int
popf
and
bound
outsb
std
inc
jno
mov
mov
or
lock
inc
jg
sbb
out
add
cmp
add
dec
xchg
popf
icebp
sub
shr
cli
loope
mov
xchg
sub
call
popa
inc
test
cmpb
clc
clc
mov
addr16
sub
int
cltd
shr
push
dec
sub
decl
pop
xchg
mov
test
jecxz
push
out
cmp
add
pusha
sub
inc
xor
mov
scas
cld
xchg
mov
aad
push
pop
jne
or
popa
arpl
loopne
push
push
movsb
dec
inc
daa
insl
sbb
rolb
shlb
add
imul
sti
cmpl
push
rcrl
mov
cwtl
sub
or
lret
orb
lcall
cmp
xchg
adc
fidivs
pop
jbe
xchg
inc
pushf
insb
or
mov
sub
aad
xchg
insb
int3
jnp,pn
and
push
inc
fistps
daa
cmp
inc
ja
pop
repnz
dec
movsb
pop
jne
aaa
js
mov
pop
push
int
sbb
dec
jle
lret
mov
imul
outsb
shll
sub
cmp
lcall
movsb
arpl
mov
lahf
jne
cli
jge
nop
mov
in
inc
jp
mov
sbb
adc
or
aad
xchg
jo
xchg
data16
stos
jno
mov
ret
ljmp
hlt
or
and
and
movsl
adc
pop
inc
bound
test
std
jnp
xchg
jle
in
add
stc
mov
push
sti
gs
inc
sbb
jnp
jne
and
and
getsec
adc
outsb
add
aam
mov
mov
inc
xor
sbb
push
icebp
and
test
sbbl
sbb
loop
or
push
mov
mov
xlat
mov
pop
pop
clc
mov
shll
sbb
pop
es
scas
sbb
movsl
lock
dec
xchg
push
repnz
push
inc
rol
imull
fisttpll
shrl
push
das
mov
aaa
pop
mov
xchg
ds
cs
icebp
jl
cmp
add
and
push
pop
sarb
and
mov
fistpl
push
call
arpl
xchg
das
subl
push
jno
sbbb
mov
ljmp
pop
imul
lss
add
cmp
jno
push
dec
ss
xchg
cmpl
test
push
icebp
or
mov
xor
push
cmp
inc
jmp
xlat
cltd
inc
lahf
adc
cmp
push
sti
inc
lret
or
xchg
and
addr16
aam
mov
notb
out
push
loop
pop
ds
xchg
out
fwait
loopne
scas
cmpl
and
xchg
mov
adc
mov
pop
cmpsl
jnp
in
ja
orb
data16
iret
dec
cld
pushf
and
mov
scas
jecxz
test
out
in
jno
xchg
mov
int
mov
xchg
popa
xor
cmp
and
pop
dec
or
in
add
push
xchg
in
jmp
in
outsb
imul
mov
adc
daa
jne
sub
fidivrl
push
mov
sbb
cmpsl
arpl
imul
or
shlb
add
bswap
popa
js
icebp
jo
dec
push
xor
add
fistps
cmp
loopne
cmp
add
shrb
xchg
imul
xchg
incb
sub
cwtl
idivl
fmul
pop
fcoml
lahf
xor
cwtl
jns
icebp
adc
xor
mov
leave
pop
and
jo
or
cs
ficoml
popa
dec
sbb
sbb
cmp
lods
fdivs
ds
in
pusha
xor
mov
out
test
jecxz
aad
outsb
mov
mov
fimuls
dec
jmp
daa
notl
cmp
xor
stc
into
inc
mov
int3
sbb
testl
je
test
mov
ror
inc
cmp
mov
lock
sub
mov
fistl
push
push
cmp
scas
pop
cmpsl
xor
sbb
lods
pusha
stos
fs
mov
cmp
std
and
fcomps
shll
push
in
xchg
push
sub
pop
aas
sbb
jb
cmp
stos
insb
decl
dec
rol
push
aaa
push
test
add
inc
imull
pop
xor
insb
mov
repnz
dec
pop
push
jae
sbb
pop
push
mov
dec
xchg
enter
push
in
arpl
xor
rcrb
or
imul
xlat
shrb
xchg
mov
pop
in
je
mov
push
cmc
cmp
sub
lret
sbb
xor
xchg
cli
jns
icebp
mov
jno
rorb
mov
push
shrl
in
add
push
pop
bound
out
scas
repz
jae
push
movsl
arpl
or
out
lock
xor
fiadds
mov
in
and
sbb
mov
loope
fists
arpl
sbb
sbb
mov
xor
bound
push
add
add
dec
push
pop
push
pop
dec
mov
dec
push
add
add
addl
push
mov
adc
or
in
fcom
ss
mov
lds
int3
iret
ds
xchg
cs
jns
popf
cwtl
jne
add
jge
sub
fmull
rorl
pop
clc
mov
fdivl
cmp
pop
xchg
and
pop
jmp
cmpsl
out
adc
scas
cli
and
sbb
ljmp
jb
push
sbb
fwait
push
daa
add
dec
into
repnz
mov
pop
dec
dec
xchg
sbb
shlb
adc
xor
pushf
stc
jg
jo
in
loope
stos
stos
xchg
dec
lock
pop
into
xchg
into
and
push
add
sub
loop
xor
sti
add
shl
test
je
in
xor
adc
dec
push
pop
cmp
or
xor
jmp
sub
dec
inc
gs
pop
jns
lcall
jne
pop
repz
sub
loop
popf
xchg
rolb
sbb
leave
insl
std
xor
nop
add
in
lahf
lret
repz
aad
push
cs
xchg
addr16
out
pop
cmp
mov
insb
movsl
lds
push
divl
pushf
add
and
mov
scas
pop
orl
ret
xchg
mov
mov
shr
lcall
rorb
xchg
test
shlb
or
mov
sub
jae
sub
pop
sub
inc
scas
je
test
scas
insl
cld
in
or
lea
out
outsl
xchg
add
int3
rorb
jbe
jo
call
or
insb
stc
sahf
scas
mov
rcrb
insb
mov
pop
stos
dec
mov
ja
cltd
out
ds
mov
mov
push
jge
test
into
insl
cmp
add
movsb
insl
fcompl
testl
xor
pop
dec
push
fidivrl
ds
test
mov
mov
pop
iret
lock
out
ret
dec
lcall
gs
pop
xorb
popf
or
mov
inc
jge
pop
mov
xor
sarb
leave
sub
ljmp
adc
push
jb
inc
sbb
sub
and
sbb
lds
adc
jns
je
cmc
pop
xor
popa
jo
xchg
or
jecxz
dec
out
aas
icebp
repnz
dec
adc
sub
add
mov
and
cmp
test
inc
repnz
inc
mov
mov
int
push
jecxz
fidivrl
test
addr16
scas
or
int
adc
pop
xchg
push
or
test
aad
mov
dec
iret
lods
jmp
xchg
decl
sbb
xor
out
ficoml
inc
rorl
std
test
adcb
push
inc
pop
out
inc
pop
js
fidivrs
and
pop
mov
mov
addl
fbstp
dec
lods
cli
jge
push
or
xchg
mov
lret
sbb
and
inc
es
sub
sub
lods
movsl
and
adc
pop
jae
adc
push
inc
mov
sub
jno
clc
js
insb
inc
xor
into
loopne
adc
icebp
out
repnz
test
pop
cmpl
out
mov
ja
mov
in
pop
aaa
xor
popa
mov
mov
adc
in
nop
inc
loopne
in
daa
jge
dec
clc
mov
add
mov
mov
xchg
sub
ficompl
adc
mov
ds
or
ljmp
out
push
shl
mov
mov
add
sbb
xor
cli
nop
cli
fdivrs
pop
stc
repz
adc
push
call
or
and
jno
out
and
adc
pop
ret
push
adc
mov
rorb
push
movsl
push
scas
dec
mov
mov
inc
push
cmpsb
fidivrs
scas
push
cwtl
mov
adc
push
test
pop
test
pusha
mov
cld
jb
repz
mov
sahf
outsb
inc
in
pusha
xlat
fidivrs
lods
jbe
dec
popa
lds
dec
adc
mov
cltd
jae
inc
aam
add
fcompl
lock
adc
pop
enter
fisubrl
andl
dec
dec
push
ret
mov
cmp
icebp
into
scas
fcoml
xchg
mov
je
jl
repz
add
xor
mull
dec
clc
std
push
mov
xlat
xchg
push
push
push
jecxz
cwtl
adc
int
test
dec
in
outsb
push
stc
cmp
mov
pop
dec
pusha
lcall
mov
inc
xchg
aas
outsl
push
xor
stc
jne
fistps
lods
push
jge
das
or
filds
mov
inc
jae
lock
mov
enter
mov
cmp
jmp
xor
push
dec
dec
and
or
or
nop
sbb
sub
jg
je
imul
mov
rolb
push
jp
cltd
sbb
sub
std
into
and
inc
fadd
push
sub
push
mov
arpl
outsl
add
sub
bound
inc
dec
fisubl
popa
sahf
and
push
xor
data16
mov
add
je
movsb
loop,pt
lods
mov
sar
cs
lret
mov
jecxz
scas
mov
cltd
in
cmp
cld
cmp
ss
addl
add
setge
adc
lret
xchg
and
add
push
push
and
push
shrl
adc
sahf
lods
sbb
call
dec
or
repz
add
xchg
iret
ljmp
and
xor
enter
add
mov
cs
ss
std
lcall
add
add
inc
dec
dec
pop
pop
push
sub
xchg
cltd
cld
push
rcll
add
fldcw
jne
rcrb
inc
pop
rolb
push
mov
mov
push
mov
out
cmp
test
out
das
mov
add
xchg
mov
sub
out
test
mov
call
xchg
lods
cmp
pop
inc
sub
pop
jae
jmp
xchg
mov
inc
inc
aaa
mov
outsb
xchg
cmp
stos
inc
cmpsb
push
pop
int3
pop
daa
lcall
sbb
repz
out
cmp
sbb
mov
mov
movl
mov
dec
xor
mov
xchg
cmovle
out
ficomps
fildl
int3
xchg
lea
cmpsb
pop
xor
outsb
cmp
fistpll
ljmp
ljmp
xlat
adc
mov
clc
cltd
xor
movsl
jnp
clc
cli
fucomi
push
arpl
jp
push
and
jb
cmp
xorb
or
sub
sti
pusha
sub
or
bsf
xchg
addr16
or
xchg
inc
push
push
and
cmc
test
sti
mov
sbb
loopne
es
sbb
or
icebp
sahf
mov
xchg
jne
adc
push
mulb
jno
dec
jp
xchg
add
pop
in
xor
out
mov
test
sbb
lods
inc
adc
roll
orl
cmp
pop
dec
mov
dec
sub
lds
fidivs
sbbb
pop
pop
mov
mov
cmp
cmp
jno
xlat
and
mov
faddl
je
xchg
mov
cld
xorl
xchg
add
dec
lret
out
mov
jecxz
jl
std
push
push
xchg
out
sbb
insb
push
xor
pop
adc
xchg
mul
sbbb
loopne
hlt
add
int
add
loop
mov
shrl
push
outsl
mov
leave
fmuls
jle
inc
movsb
xchg
daa
adc
adc
cmp
lds
ret
iret
pusha
test
push
mov
push
jle
out
enter
mov
test
shrb
lret
cmpsb
push
ds
or
popf
fistpl
cmp
rcrl
mov
fadd
push
adc
push
orb
test
add
and
adc
jl
leave
loop
frstor
jnp
jmp
dec
cs
adc
pop
jecxz
dec
sbb
bound
xchg
out
lret
lahf
in
jmp
push
pop
and
push
imul
jle
jne
xchg
mov
or
push
and
pop
insb
add
imul
data16
call
jmp
stc
jo
fildl
sub
aam
pushf
ja
lods
inc
cld
jbe
out
shll
pop
inc
mov
movsb
cmpsb
test
subl
xor
enter
popf
xchg
out
scas
jmp
adc
mov
sbb
sti
lcall
repz
sbb
pop
movsl
mov
int3
les
sub
dec
mov
dec
dec
lret
add
call
xchg
add
sub
jmp
or
mov
cmpsl
push
es
loop
or
dec
push
push
xchg
jp
sub
dec
inc
mov
out
xor
jo
dec
outsl
xchg
out
cwtl
std
mov
outsl
outsl
dec
lock
jnp
dec
mov
es
xor
push
inc
fsts
pop
inc
test
inc
or
test
pusha
std
rolb
int
push
pop
out
mov
mov
stc
mov
lds
rorb
test
adc
cmpsb
fisttps
jle
es
bound
repz
push
std
mov
push
movsb
int
int
push
cs
jns
cld
ror
inc
mov
push
mov
jbe
stos
sub
mov
and
sti
lock
daa
nop
in
in
jb
incb
call
mov
fdivr
and
add
xor
jo
jns
into
lea
ret
mov
push
arpl
or
repnz
mov
sbb
into
hlt
test
pop
rclb
data16
imul
call
mov
lods
pop
mov
nop
nop
or
movsl
mov
test
popf
mov
add
jne
imul
js
pop
push
sub
sub
mov
in
jbe
dec
mov
enter
rclb
mov
or
iret
popf
into
mov
inc
xchg
inc
adc
adc
call
iret
lret
and
mov
lds
sub
lds
mov
loope
lods
in
imul
xor
jb
sbb
rorl
mov
adc
push
idivl
xchg
dec
lods
popa
jbe
enter
sbb
sub
push
mov
add
je
fcomi
push
adc
inc
icebp
out
ret
lock
test
push
int
xlat
hlt
test
scas
push
lock
xor
xor
popa
push
jbe,pt
push
jmp
adc
add
addr16
cmc
push
es
push
jb
popa
or
mov
sahf
lret
add
cli
jg
sbb
decb
test
aaa
mov
or
popa
inc
push
ss
sbb
add
in
push
pop
out
shr
fisubl
inc
in
mov
sub
add
push
scas
cmp
xchg
mov
out
ljmp
jns
mov
enter
mov
sbb
in
lret
add
stos
movsb
fdivl
lea
adc
jnp
adc
adc
xchg
adc
cli
ja
pop
popa
out
inc
mov
sbb
jne
movsb
add
jp
je
sbb
add
xor
pop
mov
add
add
add
inc
dec
dec
dec
dec
dec
inc
dec
sub
lret
add
addl
repnz
aas
inc
imull
pop
add
cmp
cwtl
test
mov
repnz
int
mov
and
roll
stos
test
mov
into
mulb
insl
fcompl
inc
les
and
repz
fistl
std
test
sub
stos
push
insb
rorl
and
adc
cmp
jo
fs
push
xor
hlt
mov
inc
decl
or
sahf
and
adc
mov
xchg
adc
ds
push
sub
movsb
jmp
stos
jp
aas
stos
sbb
mov
xor
jbe
lock
adc
int3
lea
in
enter
mov
outsl
por
and
mov
jmp
ret
in
xchg
mov
mov
and
cli
sbb
in
mov
adc
mov
xor
xchg
fsubl
cmpb
xor
adc
dec
lcall
sbb
adc
mov
sbbb
pop
jg
test
out
or
inc
pop
aad
cmp
addb
cmp
aas
xlat
add
ror
insb
ljmp
pop
push
cmc
movsb
fwait
sahf
rorb
push
push
cmp
das
mov
in
aam
rcrb
and
push
mov
jge
jmp
cltd
cs
int3
jge
test
xchg
mov
jmp
cmc
dec
xor
ret
jmp
add
aaa
cmp
pop
push
mov
pop
jle
hlt
xchg
cmp
pop
pop
hlt
mov
fldl
sub
mov
imul
xlat
mov
lahf
sbb
out
popa
int3
sbb
jbe
push
in
lahf
xor
jo
xor
mull
adc
mov
adc
or
repz
ja
cmp
shr
imul
lret
daa
inc
lret
cmpsl
sbb
xchg
push
jmp
insl
les
and
xchg
ficoml
lcall
and
das
pop
xchg
cmp
out
sbb
bound
popf
push
cmp
in
icebp
int
out
push
lods
js
mov
inc
mov
cmpsb
rorb
repnz
inc
mov
adc
inc
loope
xchg
xchg
dec
aas
or
xchg
add
stos
mov
out
lea
or
mov
xchg
push
adc
jbe
les
jge
aaa
test
adc
movsb
dec
mov
push
insl
jae
xor
or
out
ret
repnz
imul
jp
adc
cmp
xchg
add
and
mov
mov
sbb
cmpsl
add
pop
xor
mov
aad
xchg
push
and
scas
leave
cmp
addr16
xor
sbb
pop
xor
xchg
in
sti
or
cmp
sbb
fldl
sbb
push
add
ds
negb
test
aam
pop
dec
push
fs
lods
xor
cwtl
xor
loopne
dec
sti
or
cli
push
insl
pop
mov
loop
pop
aad
and
and
lods
sti
xchg
arpl
fwait
mov
dec
bound
ret
sti
call
jmp
pop
mov
cltd
pop
cmp
sbb
in
shlb
mov
dec
cwtl
pop
loop
xchg
sub
daa
push
push
dec
ret
out
repz
cli
xor
nop
and
out
sub
hlt
cmp
out
iret
add
jecxz
mov
mov
xor
pop
xchg
popf
push
sti
jp
movsb
nop
out
ds
jecxz
addb
rorb
call
pop
jecxz
adc
dec
push
ja
in
test
mov
psubw
push
loopne
dec
pushaw
sbb
sub
outsl
lahf
orb
hlt
sbb
fstps
jo
or
push
fisttpl
jo
scas
leave
xor
xchg
or
in
sbb
sub
cwtl
xlat
insb
cmpsb
cld
sub
dec
pop
cltd
or
dec
in
push
out
cmp
and
cmp
xor
imull
jns
pop
mov
push
push
xor
xlat
in
xor
adc
push
mov
add
pop
dec
js
movsl
or
fwait
inc
and
lods
ja
ss
lds
jae
aas
loop
aad
insb
aaa
inc
add
pop
jmp
cs
mov
mov
push
test
in
jns
lea
push
jge
inc
mov
repz
add
fmulp
jmp
cmpsl
dec
xor
cmp
sbb
jge
or
mov
lret
fcomps
std
out
add
and
insl
dec
in
popa
dec
sub
jnp
pop
shrl
mov
das
jnp
and
adc
xchg
movsl
pop
adc
push
hlt
loope
je
or
pop
iret
adcl
mov
popa
into
test
push
or
aas
pop
jo
push
test
inc
cld
xchg
aad
xchg
push
pop
pop
jmp
ss
jne
outsb
notl
addl
cmp
or
sbb
out
jne
jbe
add
push
pop
pop
fs
mov
jge
stos
xchg
cmp
movsl
mov
cmp
mov
aas
push
scas
ja
xchg
xor
push
daa
daa
and
testl
xor
rolb
popf
xchg
adc
inc
addr16
fists
movsb
push
or
subb
dec
and
setns
xlat
cmp
xchg
call
mov
jb
inc
pop
or
clc
cmp
xor
and
ret
int3
outsb
es
push
push
jne
xchg
sub
loope
cltd
pop
mov
jg
cs
mov
or
add
jb
dec
pop
fsubs
into
lahf
mov
stos
adc
mov
data16
adc
cmp
in
movsl
fwait
mov
shr
cltd
cmp
pushf
mov
or
jno
gs
aaa
imul
ja
imul
cmp
jge
add
add
add
add
inc
push
pop
pop
push
dec
cmp
or
adc
popf
add
addl
in
flds
jmp
push
icebp
in
popf
inc
ljmp
stc
jnp
add
xchg
inc
bnd
or
cld
fldt
adc
ja
ja
rorb
push
dec
cmp
jecxz
outsl
lret
pop
arpl
cld
in
sbb
outsl
jmp
mov
testb
int3
clc
jecxz
loopne
aaa
addr16
pop
mov
imul
btc
mov
and
enter
out
mov
lods
add
vpunpckhwd
add
dec
inc
dec
push
mov
mov
inc
jg
cld
je
call
rolb
jmp
inc
and
sub
xchg
mov
sub
and
push
sub
enter
stc
add
pop
push
mov
mov
sub
jge
add
int3
fs
lcall
rolb
mov
imul
incl
aam
inc
add
je
popf
jnp
push
pop
sbb
cmpsl
jno
ja
out
cmp
inc
clc
adc
fnstsw
sub
jno
xchg
hlt
xor
pop
add
stos
pop
pushl
out
push
jae
jmp
or
push
xchg
outsl
inc
stc
mov
inc
sub
lcall
out
mov
cmp
xchg
clc
adc
jo
jmp
mov
pusha
and
popa
and
sub
mov
scas
rcr
mov
xchg
pop
repz
pop
leave
xor
shr
out
push
int3
scas
lcall
jnp
sbb
in
mov
xchg
loop
movsb
pop
cmpsl
out
cs
ja
fisttpl
push
cmp
and
add
mov
aam
mov
or
hlt
mov
fdivl
mov
inc
pop
jge
pop
into
inc
test
fcoml
jae
xor
fidivs
arpl
divl
cli
sub
call
mov
mov
adc
or
dec
mov
mov
repnz
andl
fistl
xchg
fcmovu
mov
daa
int
bound
mov
js
andb
xor
lahf
out
es
ret
push
push
xchg
mov
cwtl
insl
fistps
lret
sti
sbb
pop
xor
insb
pop
sub
pop
inc
sbb
mulps
adc
dec
jge
sub
jbe
movsb
jno
xchg
jo
ss
mov
or
loop
outsb
in
out
cmp
jae
cld
mov
mov
outsb
cltd
push
pop
dec
mov
inc
cmc
sbb
xchg
inc
fbld
add
adc
rorb
lds
dec
test
cmpsl
jns
and
or
push
sbb
shlb
inc
fstpt
push
mov
cmpsb
stc
add
mov
repz
aas
xor
lahf
shll
cmpsb
jne
xchg
rcrb
inc
imul
pop
addr16
aad
cli
or
fs
inc
cmpsl
add
dec
hlt
push
fnstenv
cmp
test
repnz
jbe
das
xor
and
in
mov
sbb
xor
aam
fwait
pop
sbb
dec
jb
push
sti
add
shlb
or
jecxz
dec
jge
sbb
in
cli
mov
push
std
mov
roll
mov
enter
ds
das
lods
xchg
mov
mov
mov
adc
pop
cmp
cltd
sbbb
or
ffreep
loopne
xor
xor
xchg
das
mov
cld
add
mov
leave
fisubl
cltd
lock
ficoml
sbb
or
push
jl
and
push
shll
lods
add
fnstenv
shll
ret
orb
mov
mov
and
pop
xchg
pop
push
cmp
aas
add
arpl
shrb
hlt
xchg
jb
sti
lods
iret
cwtl
inc
out
xchg
dec
out
loop
sbb
outsb
push
adc
inc
mov
jle
lods
jne
inc
jl
in
fildl
pop
in
jae
push
rcr
xlat
mov
inc
adc
cmpsl
jns
and
push
das
sub
fbstp
or
inc
in
cmp
pop
loope
push
movsb
mov
xor
mov
mov
int
pop
cs
out
bound
subl
mov
repnz
int
adc
mov
push
repz
add
add
bound
pusha
dec
out
and
scas
push
pushf
sti
jmp
psrad
lcall
and
mov
lahf
jae
iret
push
loopne
addr16
mov
mov
lahf
push
push
jl
lret
aaa
mov
arpl
inc
test
xor
clc
or
push
or
mov
repnz
cmpsl
and
or
fidivs
pop
inc
lds
nop
fldl
cli
mov
out
ficoml
mov
sub
mov
adc
inc
in
jns
sbb
sysenter
jmp
subl
dec
jne
dec
sbb
cmpsb
jno
jge
mov
test
imul
je
push
fdivs
mov
test
adc
fwait
lds
add
xchg
fistl
push
pop
add
jno
int
jecxz
mov
loop
repz
inc
leave
fbstp
ds
mov
mov
cmpsl
sti
jge
xor
movsb
outsl
fidivl
mov
sbb
mov
loop
xchg
cmpsb
mov
dec
inc
fnstenv
or
cmp
xchg
pop
mov
sbb
sbbb
daa
insl
icebp
cmpsb
xchg
adc
cmp
xchg
push
cmc
daa
and
push
inc
sub
push
stos
ret
xor
sub
imul
cmp
add
outsb
xor
loope
out
dec
pusha
repnz
cmp
in
xor
mov
pop
xor
cld
push
dec
dec
aas
xchg
add
add
add
add
dec
inc
dec
push
pop
pop
push
inc
cmp
mov
addl
in
rolb
jne
lods
jp
dec
sbb
int
jp
dec
out
push
rorb
fdivl
xchg
mov
cmpsl
icebp
and
sub
jno
mov
ret
test
inc
outsl
aas
cmp
bound
pop
inc
push
jp
and
jmp
test
cs
pop
adc
and
loop
cli
inc
sbb
xor
or
xor
outsb
test
fwait
adc
dec
mov
insl
push
push
icebp
in
jb
fdivrs
xchg
in
and
push
test
push
movsb
or
push
adc
sahf
mov
pop
inc
add
sbb
scas
repnz
xlat
push
cmp
cmp
mov
out
movsb
xchg
fisubl
sti
mov
sbb
mov
hlt
cmp
pop
xchg
mov
and
pop
sbb
xor
fisubrl
daa
dec
mov
repz
rolb
adc
hlt
push
cld
mov
popa
dec
inc
aas
imul
push
ss
clc
jns
loopne
push
add
sti
pop
das
cli
jmp
cmpsb
nop
sbb
xor
xor
mov
cwtl
pop
cs
iret
xor
mov
sbbb
cmc
sub
sbb
into
bound
xchg
jmp
nop
sarb
inc
fidivl
mov
pop
xchg
iret
push
iret
xor
jp
in
cmp
xchg
lods
sub
lret
ljmp
iret
fcomp
cli
or
inc
ret
and
dec
add
mov
push
outsl
xor
ljmp
bound
adc
mov
shr
jl
lret
xlat
xchg
push
leave
mov
out
xor
add
mov
hlt
mov
mov
fcompl
pop
sub
ret
xor
mov
adc
dec
cmp
lea
lret
adc
add
mov
jp
loope
xchg
cmp
call
mov
flds
xor
dec
dec
ss
jne
icebp
xlat
mov
inc
popa
iret
roll
sbb
lahf
lods
out
daa
sarb
out
lcall
mov
int3
pushl
sbb
in
pop
lret
das
ret
icebp
icebp
rol
das
push
dec
mov
mov
push
push
cli
mov
cmpsb
xchg
test
add
and
divl
cld
adc
sbb
pop
push
sti
cld
stc
cmp
insb
or
push
rorb
jo
lcall
pop
mov
decb
push
out
xor
inc
sub
pop
pop
sub
in
mov
mov
xor
cmpsb
mov
imul
xchg
cltd
pop
sahf
lods
and
test
mov
das
add
add
inc
out
xchg
jecxz
mov
or
cld
out
and
or
outsb
pop
js
push
add
rep
push
jp
cmp
addl
roll
nop
fimull
lods
mov
xor
xor
adc
hlt
mov
mov
add
xor
jno
leave
dec
mov
push
cltd
xchg
cs
ds
popa
dec
lret
aaa
pop
xor
sti
cmp
adc
push
sti
mov
jmp
gs
mov
inc
pop
shrb
rorb
int
ficoms
inc
ret
aad
inc
stos
sub
xor
gs
mov
add
mov
cmpsb
push
iret
in
or
fs
scas
push
ret
fisubl
add
xor
jmp
inc
push
notb
mov
jle
mov
les
rcrb
fsubrl
add
popa
adc
nop
mov
out
scas
xchg
mov
in
mov
nop
dec
mov
loopne
xchg
scas
enter
adc
cs
xor
fwait
in
outsb
add
movsb
xor
insb
cltd
mov
add
jg
shlb
pop
sbb
aaa
mov
jae
and
mov
cmp
popf
add
sub
xchg
in
repnz
push
push
into
add
aaa
inc
leave
clc
shld
jno
pop
leave
aam
cld
mov
addr16
jmp
dec
sub
dec
dec
jnp
sbb
insl
mov
mov
sahf
mov
inc
cli
pxor
mov
bound
jl
es
cmp
mov
aas
xchg
sbb
xchg
sbb
mov
dec
ja
int
lcall
mov
or
add
rcl
pushf
dec
xchg
add
cmpsb
xor
sub
pusha
addb
sar
dec
xor
fistps
sahf
xchg
call
cwtl
dec
sub
movsl
xchg
leave
cltd
mov
cltd
rolb
aad
mov
cmp
jmp
inc
fs
les
jecxz
shlb
mov
mov
adc
adc
sti
das
fwait
dec
push
mov
aad
xchg
mov
loop
mov
shll
sbb
mov
shlb
xor
push
stos
movsl
adc
adc
hlt
and
sti
cmc
insb
in
sub
shlb
adc
imul
lds
ret
xor
stc
mov
addr16
sti
push
push
jmp
xor
push
inc
fldl
ja
rcl
test
addr16
jno
jp
adc
mov
int
xchg
mov
fmul
or
cmp
mov
jmp
loop
rorb
scas
jo
adc
or
enter
jne
dec
fistpll
push
xchg
cvtpi2ps
lock
add
inc
ret
cli
jb
std
fmull
int3
lcall
inc
mov
sub
imul
cmpl
and
sub
and
push
jae
xor
or
fs
mov
and
repnz
shlb
jnp
push
mov
pop
jnp
lea
leave
into
fcomp
adc
jne
jno
aam
in
rorb
mov
loope
xchg
adc
xor
daa
mov
mov
mov
pop
lahf
pop
jns
add
add
add
add
pop
pop
pop
pop
push
dec
mov
ljmp
push
add
xchg
push
adc
cmp
inc
jo
scas
or
nop
lods
cltd
int3
sbb
ret
nop
movsl
arpl
pop
rclb
sub
imul
cmp
cli
pop
cmp
sub
into
cmp
roll
dec
mov
mov
push
nop
lods
jbe
push
mov
daa
jg
imul
sub
stos
inc
insl
sbb
in
pop
xchg
sbbb
push
mov
cmp
lods
jno
lods
pop
pop
mov
pop
pop
pop
inc
mov
mov
movsl
push
push
mov
mov
fcmovu
pop
jl
lret
arpl
mov
sub
clc
inc
cmp
cltd
lods
dec
pop
insb
in
clc
int
movsb
sbb
push
mov
dec
aam
cltd
xchg
xchg
jp
jg
popa
into
jno
fists
sar
mov
loop
push
hlt
mulb
mov
mov
rorb
push
je
pop
sbb
cmp
scas
pop
in
test
lock
arpl
inc
imul
add
adc
mov
xchg
inc
jl
xor
pop
jne
push
xchg
shlb
xlat
add
sbb
movsl
fs
int3
cmpsb
cmp
cmp
mov
mov
jns
loope
pop
mov
imul
test
add
pop
roll
std
dec
add
movsb
xchg
repz
fs
nop
scas
shll
mov
sub
loope
repz
lcall
adc
mov
movsb
roll
clc
mov
loopne
call
ljmp
jmp
adcl
movsb
sbb
lods
cwtl
adc
in
aas
in
push
mov
sbb
call
ret
xor
mov
mov
stc
lds
aas
xchg
cmp
jg
loopne
mulb
mov
int3
enter
jae
sbb
lods
repnz
js
insb
xor
add
xor
out
jecxz
lea
jg
addr16
xor
fs
push
pushf
or
in
shrl
inc
mov
aam
mov
inc
insb
dec
fmuls
dec
pop
fs
xchg
add
add
cwtl
gs
nop
es
lret
add
int
xchg
pop
xchg
dec
imul
mov
sub
aad
add
xchg
push
in
xor
add
out
xchg
mov
xchg
fs
int
bound
push
dec
icebp
sbb
mov
fistpll
mov
push
stos
jno
and
push
jbe
dec
mov
fwait
das
mov
pusha
outsl
mov
mov
outsl
andb
xchg
push
xor
jp
in
xchg
enter
stos
cs
inc
out
xrelease
das
or
shlb
push
mov
dec
cld
in
pop
test
cld
sbb
test
cmp
iret
clc
xor
or
jge
lods
mov
xabort
icebp
add
fidivrl
std
dec
jne
cs
sahf
ds
mov
clc
cltd
jg
xchg
xor
mov
fimuls
adc
imull
xor
pop
cli
data16
cmp
ret
xrelease
and
jl
mov
xor
leave
and
inc
xchg
sbb
or
movsb
lock
adc
jmp
pop
jl
iret
mov
fcoml
xchg
dec
push
insl
mov
inc
cmc
repz
cmp
hlt
insl
mov
adc
jl
das
cmpsl
lahf
dec
mov
jae
fstps
xchg
jle
inc
popf
fcomps
cmc
test
add
inc
test
dec
add
sub
pop
xchg
scas
mov
mov
xor
mov
dec
push
mov
mov
cs
jne
outsb
xchg
adc
and
lcall
pop
fwait
cltd
fsubs
mov
or
mov
movsl
mov
jne
aad
test
dec
repz
push
mov
loop
repz
mov
int
sbb
pusha
sub
pop
cltd
jle
cmpsl
pop
push
cltd
sub
clc
pop
out
mov
xor
lret
aaa
ja
add
cmpl
mov
fwait
mov
jo
insl
sarl
inc
lea
loop
nop
add
add
mov
fdivl
addr16
push
jne
sub
xor
mov
lods
mov
and
stc
push
jbe
cmpsl
into
ja
icebp
push
pop
jecxz
and
aaa
icebp
stc
insl
iret
scas
or
repz
cltd
fcoml
test
adc
xor
test
faddl
decl
loop
out
out
jae
mov
clc
mov
imul
stc
xchg
scas
addr16
iret
es
xor
sbb
xchg
cmp
test
pop
cmpsb
lcall
gs
fiaddl
daa
sbb
jg
pop
sti
mov
mov
or
mov
add
addb
fld
repnz
shll
repnz
stos
roll
and
outsl
sbb
ss
inc
scas
mov
inc
test
jle
sahf
jb
ret
test
push
sbb
or
in
testl
push
cmc
loope
add
push
dec
rol
pmaxub
call
mov
insb
cmp
lahf
push
xchg
or
mov
push
inc
sub
inc
mov
cmc
sbbl
nop
aad
lcall
xor
in
xchg
pop
mov
sbb
or
imul
and
pushf
sub
ret
jl
lods
jl
ja
ss
push
out
add
test
std
or
out
xor
fildll
test
movsb
fidivl
cmp
jecxz
push
mov
xchg
and
mov
stc
arpl
xor
psubb
or
scas
in
outsl
push
jmp
push
mov
adc
mov
dec
jp
shl
inc
xor
sbbl
int3
inc
iret
xchg
ret
mov
jge
stc
pop
je
sahf
mov
add
add
inc
push
inc
push
push
push
outsl
pop
mov
fstps
add
addl
or
cmp
xchg
jb
lret
imul
xchg
mov
mov
mov
ret
inc
jb
cwtl
pop
lahf
push
xor
push
and
mov
loope
int3
mov
mov
pop
scas
nop
scas
out
sbbb
fcoms
je
shrl
lds
xor
adc
rorl
adc
das
dec
sub
xor
lcall
ja
adc
push
clc
shlb
stc
das
cmp
das
aaa
mov
lret
das
pop
add
push
and
sbb
negl
and
jb
in
ret
jmp
xor
push
mov
leave
sbb
icebp
mov
popa
inc
rorb
pop
dec
pop
sub
xor
xchg
fldt
and
stos
scas
push
inc
inc
or
dec
mov
and
jge
and
imul
pop
cmp
cmp
rcll
nop
cmpsb
int
cmpsl
and
sub
inc
enter
iret
xchg
push
mov
ss
lret
jle
mov
or
add
jl
add
sub
sti
ret
sar
cld
aaa
leave
daa
adc
std
jb
or
mov
pop
add
js
outsb
xchg
mov
hlt
movsl
xorb
outsl
lahf
addb
push
mov
mov
rcrb
ljmp
inc
shrb
aaa
mov
jp
cld
and
mov
dec
je
ret
cmp
fnsave
sub
lret
out
stc
js
and
das
jge
into
adc
xor
out
push
push
leave
jle
cmp
daa
clc
and
cli
jne
cmp
pop
in
jns
mov
repz
ljmp
scas
jp
mov
adcb
mov
fcmove
jl
mov
lock
lea
out
sub
pop
dec
sub
jns
int
and
out
fists
cwtl
jns
cli
sub
mov
mov
adc
frstor
ja
or
daa
inc
dec
in
loop
inc
into
out
mov
or
cmp
mov
cmp
sbb
add
pop
xor
test
mov
insl
dec
dec
lods
pop
xor
popa
jmp
loope
scas
jge
das
cli
out
sbb
stos
notb
cli
fsubrp
add
ds
push
xchg
inc
lods
gs
and
scas
sbb
pop
and
fisttps
cmp
fsubs
insb
es
shrl
pushf
or
mov
stos
into
push
push
mov
adc
mov
lea
xchg
xchg
fildll
cli
jo
xor
sub
imull
fcoms
push
dec
xchg
scas
cwtl
mov
xchg
sbb
rclb
jp
inc
jbe
mov
mov
xchg
xor
adc
nop
int
and
pop
repz
sub
iret
inc
ss
movsl
stos
jp
pop
push
mov
inc
pop
lock
out
stos
sub
sbb
pop
inc
jecxz
arpl
mov
ficoms
push
mov
outsb
cmpsb
loopne
mov
mov
cmp
std
fdiv
popa
lds
pop
sbb
cmp
popa
inc
pop
mov
sbb
jnp
dec
int
ljmp
jb
cmp
push
aaa
pop
push
jl
into
enter
cltd
jp
mov
fwait
adc
adc
gs
mov
mov
mov
xor
fs
out
dec
out
inc
cmp
stos
push
cld
aaa
add
inc
xchg
shlb
mov
js
stos
sahf
cmp
sbb
int
test
mov
and
insl
test
aad
ljmp
cltd
js
loopne
pop
mov
dec
or
lods
pop
dec
jo
fmul
fmulp
lret
jnp
mov
lret
into
inc
ljmp
xor
sub
icebp
std
add
imul
sbb
cmpsb
movsl
int3
pop
and
sbb
jbe
jb
push
xor
cli
mov
repz
lds
es
int3
in
and
cmp
jae
scas
in
scas
hlt
aaa
pusha
xchg
ret
lcall
pop
adc
add
fcompl
lods
shll
ds
xor
scas
xor
pop
fs
mov
sub
jae
xchg
test
je
test
push
mov
or
xchg
addr16
ss
inc
push
mov
rcrl
and
je
inc
add
int
sysret
mov
and
jbe,pt
lahf
jno
rcrl
sbb
cmp
pop
int3
testl
mov
mov
push
push
adcl
mov
ss
sub
mov
sbb
jmp
das
out
insl
sub
mov
adc
xor
xchg
add
fwait
jge
or
ljmp
push
pop
lock
inc
push
orl
repz
sti
push
lock
repnz
mov
xchg
outsb
dec
jecxz
jnp
and
out
pop
ret
test
xchg
enter
jns
pop
inc
cli
shl
ja
lahf
mov
out
jnp
dec
fucomi
mov
jnp
or
lods
aam
dec
jmp
pusha
rcrb
push
je
jne
sub
pop
cmp
icebp
mov
pop
shll
cmp
mov
fdivs
and
fwait
stos
shll
xchg
inc
ret
mov
push
ret
xor
arpl
je
leave
jle
inc
rol
pop
xor
ljmp
push
repnz
jae
inc
mov
aaa
lret
dec
fiaddl
out
or
jmp
mov
outsb
mov
jo
xlat
mov
mov
mov
aam
mov
sti
adc
stc
ds
or
jle
mov
and
mov
fisubrs
mov
or
pop
and
cmp
nop
push
add
add
add
push
dec
pop
dec
pop
push
stos
mov
stc
inc
loope
js
mov
add
sub
out
add
fwait
cld
jnp
mov
cmp
push
mov
popa
xor
les
inc
aas
sub
cmp
and
push
and
lea
cmp
xchg
xor
or
dec
hlt
pop
inc
fwait
in
cltd
mov
or
pushl
jp
arpl
stos
pop
push
cmpl
jle
daa
clc
pusha
jmp
decb
push
mov
xchg
pop
rolb
push
insb
lcall
mov
ss
insl
test
jnp
or
js
xor
mov
push
push
push
or
test
sub
xchg
into
movsl
shrl
icebp
add
ja
push
cmp
cli
test
mov
mov
or
shll
jns
cmp
xchg
jno
imul
sub
cwtl
rclb
xchg
or
jecxz
xor
cli
movb
jno
imul
aad
xor
inc
add
jae
mov
push
xchg
aam
dec
lods
jmp
xor
push
mov
popf
pmullw
jb
idivl
test
xchg
pop
stos
cli
inc
cld
clc
sbb
rorl
cmpsl
pop
pop
lret
lods
int3
add
lea
jmp
adc
pop
cmp
mov
adc
add
mov
stos
or
xchg
mov
int3
das
test
mov
xchg
cs
mov
rcr
sti
add
inc
repnz
jae
cmp
inc
mov
in
sbb
push
in
xchg
clc
clc
add
stc
fwait
out
jbe
lahf
mov
popa
inc
jge
mov
mov
pop
mov
loop
cmp
rcrb
lods
aad
mov
xchg
or
cltd
sub
aas
xor
lret
and
xlat
add
shll
popf
leave
roll
je
fsts
fstps
jle
icebp
mov
cmpsl
je
jp
push
sbb
mov
pop
popf
addr16
negb
pop
jmp
movd
dec
jmp
xchg
mov
sbb
adc
and
out
les
or
push
sub
sarb
xlat
daa
and
jns
jb
mov
nop
out
jecxz
jb
cmp
xor
aad
pop
jno
adc
jge
cmp
enter
sbb
test
mov
sti
jecxz
sub
test
test
in
dec
push
ffreep
rcll
mov
sub
add
imul
or
sub
xlat
in
mov
out
jle
pop
lods
ljmp
or
sub
jo
cmpsb
pusha
mov
aaa
mov
and
scas
je
mov
xor
fyl2x
je
pop
pop
cmp
mov
and
and
daa
cmc
roll
fcmovnb
adcb
insl
dec
xor
repz
adc
enter
frndint
sbb
mov
inc
sub
and
sbb
sub
test
cmp
inc
inc
cmpsb
ljmp
sbb
jae
out
orb
dec
sbbl
push
push
ljmp
or
dec
mov
jmp
pushl
out
test
push
pop
fimull
cs
sbbl
jno
add
sbbl
ss
loope
add
lret
lret
scas
xor
push
outsl
fcmovb
jbe
add
or
call
and
sub
xchg
add
push
rorl
ja
mov
sarl
out
sub
xchg
pop
outsb
hlt
mov
insb
add
cmp
loope,pt
imul
add
push
stc
ss
popa
jnp
push
dec
mov
fwait
xchg
repnz
in
mov
adc
dec
xchg
or
dec
add
mov
fimuls
or
or
jo
add
inc
std
adc
mov
sub
adc
mov
lret
clc
adc
lret
mov
jne
dec
fsubr
or
dec
sub
pusha
lea
fdivl
lods
jns
lcall
mov
push
cmp
add
int
pop
imul
lds
addb
xchg
jne
stos
dec
jbe
add
in
xlat
repnz
dec
repz
add
pop
scas
sub
insl
lea
ficompl
ficoms
and
mov
lret
push
loopne
pop
cmp
sub
in
out
lret
aaa
orb
in
dec
aad
testl
sbb
aas
lods
push
out
faddp
movsl
jp
stos
push
fisttps
mov
push
mov
ss
xchg
lds
addb
dec
add
ud0
mov
jne
xor
rcrl
or
enter
add
insb
in
xorl
jl
inc
cvtpi2ps
dec
aam
shrl
pop
in
imul
int3
push
mov
loopne
cld
outsb
mov
pop
push
incb
xchg
pop
aas
push
aam
xor
arpl
jo
jle
fstpt
jns
vmread
push
fcmovbe
mov
dec
arpl
pop
daa
push
pop
stos
movsb
adc
dec
test
pop
shrb
inc
lods
or
jno
or
shll
xor
mov
les
rcrl
in
in
aaa
sub
sbb
ret
sub
or
mov
push
out
fwait
cmpb
mov
es
dec
jg
xchg
out
push
paddd
dec
mov
leave
mul
in
jbe
or
and
into
in
sbb
cmpsb
jle
push
pop
cmp
lcall
outsb
scas
loopne
es
enter
mov
inc
mov
xor
push
or
arpl
push
push
adc
jae
fidivrs
or
cwtl
and
cmp
push
adc
add
pusha
dec
cli
rcr
add
dec
mov
addb
and
mov
cltd
dec
cmp
lcall
add
add
add
add
dec
push
pop
push
pop
dec
idivb
jns
xchg
xor
addl
pop
out
push
scas
adc
and
jp
push
push
jbe
mov
push
ds
jne
lock
out
dec
add
out
cmc
mov
and
xor
jle
and
cli
xchg
xchg
cmp
mov
int3
xor
sahf
lahf
leave
mov
or
std
test
xchg
xchg
push
shll
dec
stc
adc
add
fidivrl
adc
mov
fisttpll
nop
or
sbb
dec
popa
ljmp
mov
jmp
sarb
js
mov
loop
aad
jl
xchg
push
js
int
sar
arpl
sub
add
mov
pop
out
stc
pop
mov
fmuls
scas
sahf
add
fsubl
leave
dec
mov
push
ss
or
jmp
ljmp
cmc
adc
lods
pop
jp
pop
add
insb
push
cs
pop
push
aad
xchg
mov
push
mov
into
mov
pop
push
add
mov
adc
test
adc
pop
mov
jnp
lods
jo
mov
push
push
cmpl
xchg
pusha
pop
push
sub
cmp
test
push
push
push
int
pop
out
add
insb
lods
dec
mov
or
jmp
jo
into
push
pop
loop
into
int
data16
out
repnz
inc
ja
outsb
sub
push
or
xchg
adcb
mov
inc
or
sbb
and
and
lea
xlat
add
cwtl
dec
mov
sbbb
shrb
mov
scas
jmp
clc
rcr
lods
mov
inc
pop
push
push
lods
cmpb
mov
add
sbb
add
inc
sbb
and
push
cmc
jnp
rorb
repz
pop
arpl
loopne
icebp
mov
loope
push
xor
in
and
adcb
clc
push
jle
hlt
sbb
adc
cmp
push
jg
mov
adc
push
mov
mov
cmp
xor
push
or
iret
rorb
push
mov
leave
push
dec
shlb
or
jb
idivb
sbb
out
int
daa
out
out
les
jns
and
xor
imul
pushf
add
and
or
jmp
push
hlt
mov
pop
testl
stos
ja
mov
fwait
push
dec
push
ficoms
loopne
cs
push
xlat
sub
dec
cmc
xor
testl
rorl
mov
test
lea
repz
les
jns
insb
xor
loop
clc
xor
and
jbe
cld
test
lds
sub
sbb
sbb
xchg
popf
jmp
test
jns
add
scas
rorb
lds
pusha
shrl
pop
out
js
pop
jb
pushl
push
or
inc
pop
xchg
sti
sbb
pop
gs
push
outsb
or
roll
or
add
in
xor
push
push
cs
movsl
jb
rolb
mov
nop
shll
cmp
fisubrs
ja
dec
cmp
lcall
xlat
xchg
inc
lahf
jp
cmc
jg
fisubl
dec
inc
xchg
push
cld
adc
jnp
lcall
gs
test
push
jno
ljmp
push
dec
mov
and
cmp
sub
cmp
dec
shlb
stos
sbb
mov
fisubl
test
aad
mov
mov
test
fsubl
sub
hlt
rcrb
dec
xchg
into
cwtl
or
mov
sub
inc
fdiv
cld
or
jne
push
jbe
or
adc
sbb
sub
in
pop
clc
lods
mov
xchg
mov
icebp
mov
mov
hlt
cmp
inc
pusha
scas
pop
xor
pop
pop
aad
aaa
imul
imul
repnz
adcb
xchg
push
xchg
lea
data16
jns
xchg
jmp
aad
adc
adc
jo
inc
loopne
xor
subb
scas
jle
xchg
dec
sbb
xchg
ret
sub
mov
fdivr
shrl
fists
cmp
shll
mov
pavgw
sbbb
lret
lea
inc
dec
das
lea
test
xchg
push
add
dec
test
inc
push
jecxz
dec
mov
mulb
sahf
mov
or
adc
stos
lahf
stos
movl
jae
dec
adc
test
cwtl
and
jmp
cmp
adc
jge
sbb
or
pop
jmp
lods
xchg
push
add
lods
xchg
mov
lret
cwtl
jns
stos
aaa
div
jne
dec
pop
hlt
repz
dec
loop
inc
xor
add
int
pop
into
gs
cmp
popf
push
mov
insl
mov
aam
mov
in
xchg
dec
jg
jne
repz
add
call
sbb
fisubrs
mov
int
mov
jp
xchg
dec
inc
aam
inc
mov
gs
or
fistpll
mov
mov
insb
stos
add
cltd
sub
or
and
xchg
clc
push
rcrl
jge
shr
scas
push
add
repz
push
test
add
int
mov
sbb
dec
or
inc
add
xchg
push
fcomip
cmp
clc
les
jp
adc
popf
sbbl
pop
jl
dec
or
jb
leave
and
mov
push
adc
jno
mov
loopne
pop
inc
sbb
dec
or
imul
adc
aas
out
scas
cmp
mov
imulb
movl
in
jle
sbb
movzwl
fistpll
test
inc
test
lods
stos
xchg
add
add
add
add
dec
push
dec
push
pop
pop
mov
dec
xchg
sub
les
add
test
rep
loopne
data16
push
dec
pop
push
test
nop
clc
pop
int3
inc
cmp
pop
xor
je
stos
int
sub
rcr
pop
and
inc
loope
call
jb
gs
scas
shr
jmp
mov
lea
testl
inc
js
push
cmpl
jbe
subb
xchg
sahf
xor
or
shll
leave
js
in
mov
or
add
jp
aas
mov
pop
sbb
cmp
pop
push
outsl
out
cwtl
adc
sub
sub
jmp
jp
or
inc
mov
test
inc
pop
outsb
stos
push
sub
xchg
stos
js
cltd
push
inc
push
test
push
imul
cmp
movsl
mov
lret
jno
cld
pop
std
mov
repz
xor
sbb
imul
xchg
jp
adc
add
inc
fldl
lret
lods
lret
dec
lods
pop
lcall
in
mov
jmp
enter
mov
std
jns
push
xor
xchg
sbb
add
push
pop
mov
out
jb
add
fbstp
test
mov
test
mov
arpl
fs
jecxz
fdiv
xchg
loope
mov
js
mov
insl
movsl
das
adc
fs
pop
shrb
mov
rcrl
dec
xchg
cmp
push
push
mov
mov
ljmp
rclb
bound
mov
mov
stos
enter
pushl
fs
lret
cmp
cmovp
outsb
jnp
adc
setnp
ljmp
xchg
push
enter
lret
mov
mov
jno
stc
loope
test
cmc
call
insl
imul
mov
int
inc
aas
sbb
jnp
shlb
jae
mov
js
outsb
and
push
lods
jmp
stos
inc
sub
or
dec
pop
xchg
imul
jo
sarb
mov
pop
ret
mov
sub
xor
xchg
push
aad
inc
pop
arpl
jbe
pop
mov
aam
sub
mov
out
mov
test
jb
test
pop
hlt
or
add
xchg
jmp
sbb
jae
or
sbb
imul
outsl
mov
cld
in
xchg
sbbl
push
ror
pop
and
movsl
push
nop
inc
fistpll
dec
cs
shl
mov
push
xor
add
mov
xor
inc
sub
jne
sub
stc
adc
sarb
ret
xchg
xorl
jo
les
sub
adc
daa
pop
pop
push
fstpl
dec
stos
and
cwtl
add
aaa
push
mov
mov
cwtl
push
mov
xor
fisttpl
stos
shlb
xchg
lret
sbb
mov
arpl
lcall
xor
mov
jmp
mov
cmpsb
or
mov
mov
fnstsw
add
add
sahf
inc
push
in
fs
push
dec
push
dec
leave
jb
ret
scas
push
outsl
stc
mov
out
jb
lcall
and
out
pop
in
aaa
popa
ret
gs
xchg
lea
int
push
push
ljmp
loope
push
pop
bound
dec
adc
divl
mov
or
adc
pushl
fsubrl
push
jb
pop
sarl
es
cmp
incb
cmp
test
pushf
mov
sub
mov
push
cli
pushf
leave
push
lods
test
lret
xor
sbb
rcll
shlb
test
das
adc
frstor
mov
cld
cmc
loopne
aas
mov
add
lret
mov
mov
fcmovbe
or
mov
jecxz
into
loope
push
cmp
gs
mov
jl
mov
repz
hlt
in
ljmp
imul
jnp
in
aad
and
repz
pop
scas
mov
jmp
aam
cli
sub
xchg
popa
push
mov
and
repz
jns
popa
les
lods
nop
jb
mov
inc
and
addr16
jmp
icebp
mov
test
mov
jnp
push
xlat
out
jnp
fildl
aad
xor
test
mov
jae
xor
push
xchg
sub
cli
mov
rclb
popf
sub
pop
loope
into
mov
mov
jno
in
pop
aaa
addl
ret
cmp
out
sar
shlb
adc
mov
dec
mov
add
jbe
loop
add
pop
shrb
xchg
cmc
adc
imul
fldenv
shl
mov
dec
sahf
xchg
or
mov
xchg
ja
and
push
ror
lods
xchg
pusha
mov
inc
stos
mov
notl
notb
mov
andl
out
pop
fistl
nop
call
and
test
mov
or
mov
mov
loop
adc
push
cltd
push
les
sbb
inc
xor
pop
fdivs
jge
and
dec
lods
pop
mov
cld
iret
test
or
fsub
jns
sbb
ljmp
nop
inc
popa
push
outsl
or
arpl
int
je
xchg
inc
addr16
mov
scas
xchg
xor
pop
dec
les
cwtl
and
sbb
and
jmp
pop
inc
push
jl
es
mov
sub
mov
dec
xchg
pop
nop
dec
pop
out
movsb
insb
adc
out
inc
mov
mov
adc
fs
popa
dec
jne
leave
or
xor
fldl
aad
inc
fistps
xor
stos
mov
aas
iret
icebp
daa
popf
outsb
ljmp
jns
add
pop
mov
jnp
fsts
mov
daa
xor
add
add
add
add
push
push
push
inc
push
test
int3
test
add
ljmp
and
cmp
jmp
clc
test
mov
push
bound
aas
cmp
jecxz
jle
adc
cld
or
pushf
sbb
push
cmp
mov
sub
mov
loopne
mov
push
jnp
in
jae
sub
adc
sbb
fwait
push
lea
out
adc
cmp
fimull
mov
add
loop
aad
pop
addr16
mov
add
testb
aad
jno
and
ret
jl
xlat
pop
and
xchg
dec
push
rcr
dec
dec
or
out
andl
mov
dec
mov
xchg
fcomps
rcrb
daa
int
clc
hlt
dec
xor
sub
push
xchg
add
into
nop
xor
cmp
cmp
outsb
rclb
aam
fisttpll
aaa
push
imul
aam
loopne
addr16
mov
sbb
or
adc
nop
push
gs
sub
and
scas
repz
sbbl
in
jl
icebp
pop
scas
test
or
inc
cmpsl
sub
mov
lcall
loope
push
push
leave
fdivs
orb
mov
push
jl
test
jmp
adc
popf
push
int3
mov
or
jns
mov
dec
push
data16
fucomip
cmc
add
in
mov
out
cli
mov
jmp
cs
xor
outsl
cmpsl
push
sub
jl
scas
fistpl
inc
decb
aad
cmc
jbe
lretw
jmp
movsb
dec
loopne
sar
shll
lock
sub
push
adc
inc
ja
ljmp
push
sbb
rorl
fsubrs
sbb
xor
sub
sub
aas
ja
mov
jg
popa
dec
adc
scas
ljmp
xchg
fs
insl
stos
add
test
inc
sub
js
sbb
in
cmp
ror
xchg
push
xor
test
repnz
les
rcrl
fsubrp
cmp
adc
sub
lods
sbb
movsb
mov
or
cmpsl
ficoms
out
fs
test
shr
mov
into
test
aad
sub
inc
pop
pop
sahf
mov
std
lock
lods
out
jge
xchg
sub
icebp
adc
adc
add
ljmp
fwait
mov
call
mov
cld
jb
call
aaa
arpl
push
mov
xchg
cmpsb
lods
dec
shll
rcrl
cmp
jp
addr16
sbb
rcrl
xor
enter
xchg
jbe
test
stos
pmulhw
add
adc
xchg
cltd
hlt
gs
mov
inc
fimull
loop
je
pop
enter
imul
addl
test
jge
jle
and
xchg
lret
mov
aaa
shrl
lret
aam
inc
movsb
pop
fwait
adc
mov
daa
in
cwtl
adc
icebp
and
movsb
push
pop
push
sub
inc
mov
cmpsb
cltd
sub
out
pop
neg
cld
std
adc
dec
lods
push
imul
scas
das
addr16
add
clc
loop
lcall
or
mov
adc
cmpl
sbb
jp
data16
sahf
or
sbb
rorb
scas
adc
push
jg
mov
insb
cmp
std
or
or
dec
mov
es
or
xchg
aad
pop
fs
std
xchg
pop
leave
lahf
cmp
fcomi
lcall
adc
sub
or
xor
mov
and
jecxz
pop
cli
pusha
mov
bound
cmpsb
mov
fcompp
mov
pop
dec
adc
test
sub
xor
icebp
pop
jbe
push
cmp
loope
sub
out
pop
lea
inc
out
xor
mov
sub
or
inc
or
adc
iret
jge
int
sub
sub
mov
cmp
fcmovnu
scas
ficoms
push
xor
add
add
mov
push
data16
cmpb
push
fs
sub
sub
es
insb
sbb
call
repz
jecxz
pop
dec
add
ja
int3
and
mov
dec
inc
pop
ds
lock
daa
cmc
push
pop
add
repz
jns
adc
movsb
cmp
add
or
pushf
mov
int
fwait
dec
pop
sub
push
xchg
mov
notl
fs
test
push
popf
jo
cwtl
imul
fildll
or
push
ret
add
call
outsb
push
jnp
or
popa
ja
dec
arpl
mov
call
mov
jae
std
test
add
push
mov
in
mov
cli
lcall
loope
fstpl
jne
mov
test
fmuls
mov
add
insb
aaa
leave
stc
test
ret
pop
push
dec
fstl
ds
adc
inc
popl
nop
xchg
pop
cmp
scas
je
lds
out
sti
mov
test
sbb
mov
mov
push
shrb
fistps
dec
jmp
insb
int3
xchg
pop
repz
adc
ret
frstor
sarl
mov
inc
test
arpl
xchg
inc
adc
sub
inc
fnstsw
call
loopne
cld
bnd
push
outsl
cmp
nop
jge
bound
test
inc
inc
xor
sbb
xor
add
jge
pop
xchg
fldl
jbe
mov
xchg
ret
ror
das
test
mov
es
sub
cli
je
mov
or
jbe
rclb
and
xchg
and
mov
popa
jecxz
xchg
mov
test
cwtl
insb
dec
cwtl
lcall
mov
push
bound
test
jl
sbbb
mov
imul
add
add
add
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
add
xchg
fst
add
addl
jo
pop
sti
addb
push
data16
inc
jge
fiaddl
pop
or
negl
inc
add
pop
cmp
push
push
mov
push
xchg
sarb
outsb
sub
fcmovnu
insl
or
test
in
movl
cmp
stos
mov
cmc
mov
movb
mov
in
dec
xor
push
or
adc
and
gs
sbb
jle
scas
gs
sarl
cmp
ljmp
ret
rcrl
insl
call
xor
mov
outsl
je
in
jno
fildll
or
xchg
fxch
loop
and
jae
or
out
mov
push
fs
ret
and
addl
pusha
repz
mov
int3
mov
clc
add
fxch
and
cmp
adc
cmp
pop
or
xchg
incb
cmp
cltd
xor
clc
pop
mov
and
pop
push
push
orl
scas
mov
add
gs
cwtl
in
roll
cmpb
mov
push
fisttpll
push
into
nop
lcall
xchg
and
or
pop
or
lods
pushf
rolb
daa
inc
and
or
add
xchg
out
add
jae
out
pusha
mov
cmp
scas
xchg
hlt
pop
inc
cld
push
add
outsl
into
or
mov
sahf
fs
xor
xor
cmpsb
dec
and
jp
sbb
xchg
fidivrl
lds
add
dec
popl
xchg
outsb
gs
mov
mov
and
movsl
pop
jno
cltd
imul
adc
jb
sbb
mov
std
int
stc
aam
jge
std
repnz
mov
or
xlat
mov
mov
rcl
bound
lcall
aam
dec
fistl
mov
sbb
cld
aaa
push
sub
test
ja
lahf
xchg
sub
xchg
inc
jns
pop
mov
hlt
ja
out
push
sbb
sub
ljmp
inc
jle
or
lock
rclb
adc
pop
dec
mov
jle
cli
jle
xchg
and
enter
hlt
insb
je
aas
cmp
icebp
movsb
mov
popa
fsubrs
lahf
xchg
mov
popf
sub
mov
and
fistpll
stos
dec
int3
push
aas
lods
mov
lock
hlt
pop
cmpsb
popf
nop
mov
xchg
jmp
lods
add
fwait
hlt
mov
repz
call
jns
lds
negb
mov
movl
jae
xor
fldt
adc
mov
jns
push
fnstsw
adc
dec
cmp
pop
sarl
sbb
add
pop
ss
xchg
loop
scas
test
es
jle
sahf
test
jns
mov
xchg
sbb
push
lahf
ss
cmp
pusha
mov
out
add
loop
testl
std
push
cmp
xchg
push
xchg
clc
cmp
call
fisttpll
scas
mov
jmp
xorb
arpl
fnsave
xor
mov
mov
mov
xchg
mov
sti
test
cli
add
jo
frstor
hlt
xchg
movsl
aas
mov
jb
mov
inc
and
lea
test
adc
xor
outsl
dec
dec
and
jnp
mov
pop
movsb
lds
jns
pusha
int
hlt
arpl
jl
mov
out
xor
jge
jnp
repz
cltd
sub
lods
in
mov
sub
cmpsb
aam
jne
addb
add
add
mov
call
fidivrs
aas
mov
jne
int3
lock
or
inc
push
lcall
movsl
test
push
dec
mov
repnz
je
jmp
mov
push
aam
mov
fidivl
ja
sbb
dec
xlat
in
sub
cltd
sub
jae
rcl
ficomps
or
les
ficompl
test
pop
lahf
inc
out
repz
jp
pusha
sbb
das
sbb
aam
dec
push
mov
cmp
fdivr
or
imul
dec
addb
mov
or
ret
call
or
push
pop
out
mov
sbb
or
movsb
jb
push
imul
mov
fistl
ds
sub
in
cmpsb
mov
push
mov
out
mov
ljmp
push
mov
or
movsb
jne
adc
lahf
pop
out
out
and
rorl
nop
ja
clc
sub
push
outsb
mov
add
mov
xor
pop
loope
jns
rdtsc
mov
lcall
mov
push
jns
push
mov
mov
movsb
xchg
xchg
arpl
ljmp
rcr
push
loop
iret
inc
push
andl
pusha
lahf
repnz
mov
mov
shrb
outsl
add
cmp
repz
xchg
adc
sub
cmp
jo
pop
bound
xor
aaa
pop
xor
mov
mov
cltd
jo
cli
fdivs
jle
dec
sub
xor
mov
pop
inc
sbb
xor
xchg
cmp
lea
notl
pop
rcll
xor
test
pushf
lret
out
rorb
ficompl
les
inc
dec
div
dec
and
es
or
fnclex
and
hlt
push
push
cld
push
decl
jp
pop
pop
add
roll
gs
nop
jns
push
and
stc
inc
xchg
push
xor
into
or
mov
ljmp
dec
sarl
mov
stos
enter
or
inc
lcall
or
cld
xor
dec
jb
xchg
inc
xchg
add
add
add
push
inc
push
push
push
push
push
inc
rorl
popf
dec
sbbb
pop
fadds
add
or
repz
lcall
sub
bound
dec
test
pop
sbb
jbe
out
popa
cmp
mov
mov
jge
mov
ja
cmpsl
mov
movsb
inc
lods
es
sub
inc
test
fidivs
dec
lahf
or
daa
aas
adc
push
and
je
jnp
es
fisubrs
cwtl
in
jns
jmp
pop
int3
or
sub
mov
jo
lret
pop
mov
jg
push
fwait
aad
fidivrl
cmp
sub
jmp
mov
jl
push
or
mov
sbb
add
dec
xchg
add
xor
test
orb
fsubrl
aad
aam
lret
or
clc
test
jmp
test
jmp
addl
add
cmp
clc
xchg
call
jl
xor
imul
fildll
adc
cltd
push
and
cltd
jb
fs
dec
sbb
pushf
sti
push
jno
shlb
outsb
call
jg
mov
out
jecxz
fistps
inc
mov
lret
fildl
test
and
adc
pop
jo
xchg
stos
or
xchg
bound
or
outsb
incl
ret
call
icebp
adc
test
or
out
fstpl
fimuls
inc
clc
fcoml
int3
shlb
inc
out
mov
dec
fsubs
cmp
pop
in
mov
pop
cltd
dec
test
stos
mov
sbb
xchg
movsl
mov
adc
fstpt
ficomps
dec
mov
enter
stos
xchg
ret
ror
outsl
sbbl
xchg
insl
sbb
shll
sbb
xor
or
rclb
in
or
aad
xor
stc
shll
jl
push
jp
les
pop
test
dec
push
xor
cld
pusha
fistps
into
imul
inc
fldcw
test
xchg
lret
inc
out
push
shl
and
push
push
fwait
cmp
outsl
int
add
inc
das
lods
sbb
xor
jne
push
test
xchg
das
scas
xchg
push
dec
sarl
sub
push
or
flds
test
xchg
jb
push
stos
mov
push
dec
clc
mov
pop
pop
mov
xor
lds
sarl
push
dec
rcr
cmp
mov
ss
sarb
mov
xor
push
adc
test
fwait
mov
inc
push
jbe
or
aad
pop
call
push
push
stos
rcll
jmp
push
sarl
inc
dec
and
in
adc
pusha
mov
sbb
fcomps
cmp
outsl
mov
into
call
push
push
push
sub
mov
andb
pushl
cmp
insb
mov
mov
and
sub
mov
lods
dec
inc
mov
pushf
imul
push
cmp
popl
jo
out
dec
dec
scas
outsb
pop
sub
ficomps
incl
pop
xor
loop
fwait
cmp
push
push
mov
sbb
hlt
jb
sub
mov
imul
hlt
je
adc
jecxz
dec
aam
cmp
repnz
add
mov
pop
lret
push
sahf
and
ljmp
mov
jl
cwtl
loop
add
mov
add
test
dec
sub
ljmp
es
adc
pop
add
dec
into
xchg
call
dec
cld
jecxz
push
adc
sub
pop
fstp
aaa
movsl
shlb
push
xor
xchg
xor
stos
aaa
adc
ret
add
cmpsb
vmovdqa
push
push
and
in
push
jno
ret
mov
mov
ds
cmp
inc
pop
jge
lea
xlat
push
das
push
add
pop
xor
sbb
pushf
xchg
mov
test
in
std
inc
cwtl
ds
jp
push
jle
lock
aas
in
hlt
fstps
lcall
sbb
fimuls
inc
xor
rclb
ljmp
sbb
imul
and
xlat
bound
and
addl
mov
imul
mov
sbb
or
jo
and
outsb
xorb
xor
sbb
into
js
test
push
adc
mov
xlat
mov
jb
clc
inc
sbb
stos
mov
xchg
xor
adc
int3
inc
mov
xchg
lret
lods
dec
cmp
lods
popa
add
sbb
xchg
sbb
mov
jge
xchg
enter
cmp
sbb
xor
add
and
cld
dec
movsl
ljmp
cld
sbb
ror
adc
dec
push
jge
xchg
sub
les
sub
roll
mov
push
cmpb
pop
xchg
insb
movsl
shll
jmp
xor
adc
enter
out
xchg
mov
lcall
cmp
cmpsb
hlt
mov
scas
pusha
or
xchg
das
mov
cmp
rcll
pcmpgtb
xchg
dec
inc
data16
loopne
gs
rol
pop
pop
out
enter
jo
stos
scas
loope
or
jle
jmp
mov
outsl
pop
aam
testb
outsb
mov
jp
loope
xchg
adc
jmp
sbbl
fwait
push
push
aas
jle
mov
push
shlb
sub
xchg
and
xchg
pop
adc
jg
xchg
cmp
hlt
fmulp
jg
xor
mov
or
outsb
or
mov
hlt
inc
fs
rclb
rcrl
push
loopne
inc
add
pop
fwait
mov
add
add
add
push
push
pop
push
pop
pop
xchg
stos
mov
in
add
addl
and
and
xor
decb
xor
jmp
dec
jbe
xorb
jb
clc
popa
xor
rcr
aas
mov
movsb
pop
or
lcall
or
adc
sti
shl
dec
pop
enter
cs
adc
fildll
xchg
ljmp
pop
mov
lret
test
mov
xchg
mov
call
fdivrl
mov
inc
mov
mov
mov
jne
ljmp
sub
and
lds
and
push
pushf
aaa
adc
xor
mov
mov
adc
sbb
imul
sbb
dec
mov
repnz
mov
dec
xchg
aaa
jnp
mov
enter
pop
add
cld
pop
jb
dec
adc
xor
sub
xor
insl
mov
fisttpll
test
push
cmp
imul
jb
mov
or
lret
xor
fsubrs
and
in
push
mov
imul
stos
cmpsb
jecxz
xorl
bound
or
dec
cltd
scas
mov
negl
in
inc
xor
mov
cmpsl
stos
sti
or
sbb
stos
add
stos
imul
cmp
addr16
repnz
xchg
out
pop
or
xchg
and
mov
cmp
dec
test
clc
je
lcall
sbb
scas
loop
add
jae
filds
xor
cli
xor
and
lret
out
xchg
test
sub
xor
dec
cmp
dec
fadd
jne
mov
std
mov
pop
adc
sub
pop
cwtl
xchg
popl
test
cmpsb
fs
shll
mov
test
js
mov
pop
and
imul
push
int3
lea
mov
push
pusha
sar
cmp
jecxz
adc
shl
icebp
or
fidivrs
in
clc
stos
sahf
push
and
cli
ljmp
js
xchg
push
gs
pushf
cmpsb
adc
pop
jl
out
xor
repnz
fnstenv
push
into
sub
rol
sub
and
push
and
sub
das
xor
inc
push
and
dec
dec
mov
xor
xor
adc
mov
inc
sbb
jo
leave
mov
jbe
stos
inc
aas
mov
ror
mov
rorb
adc
xchg
stos
mov
fildl
aas
dec
or
into
xchg
mov
ret
jne
dec
mov
push
jo
adc
test
push
rcrb
subb
int
shlb
test
movlps
daa
mov
push
cld
adc
idivl
testb
mov
scas
mov
inc
inc
add
stos
dec
sbb
inc
lret
repz
or
out
pop
les
xor
sub
cmpsb
xchg
leave
dec
xchg
push
xchg
jae
push
adcl
lret
push
jg
loop
add
xchg
addl
cmp
rorl
mov
push
cmp
pop
xor
sbb
mov
mov
cmc
aaa
mov
mov
stos
lret
mov
push
lahf
in
push
pusha
or
sub
or
cs
ficoms
sbb
ret
bound
in
iret
inc
rcrl
cmp
dec
imul
in
je
mov
cmp
jg
mov
add
out
leave
mov
ret
pop
push
sbb
fldcw
stos
jno
jl
xchg
lret
jg
or
jl
mov
je
inc
rorl
fisubs
jle
jge
jl
loope
nop
push
fiadds
add
jo
dec
mov
xchg
sbb
gs
pop
data16
mov
aas
mov
loop
dec
popa
adc
mov
cmc
insl
pop
sbb
mov
loope
adc
jne
leave
xchg
inc
or
fs
mov
xchg
stos
inc
in
loop
pop
cmpsb
pop
inc
push
xorb
jbe
lock
aas
leave
inc
insl
std
jle
lock
into
jecxz
lods
test
pop
gs
pushf
sbb
insb
out
adc
in
negb
data16
rcl
rolb
dec
push
imul
rcl
lods
fidivrl
mov
xor
in
push
in
cmp
xchg
fdiv
lret
mov
xchg
je
xchg
push
not
jmp
pop
cmpsl
rolb
pusha
cmc
pusha
fsubrl
xchg
mov
xlat
pop
sub
mulb
xchg
shrb
push
ror
mov
imul
cmp
testl
pop
shll
jl
inc
out
inc
nop
out
mov
cltd
cmc
inc
jns
xchg
pop
xor
subl
outsb
jae
add
xor
push
pop
out
es
mov
sahf
dec
lret
out
mov
ret
push
adc
out
push
sbb
ss
jmp
add
sbb
fsubrp
stc
leave
sub
push
scas
cmp
leave
push
insl
icebp
pop
xor
leave
popa
xlat
ret
adc
outsb
adc
jmp
push
and
xchg
call
sbb
or
sbbb
into
xor
enter
sub
mov
outsl
and
mov
out
test
jb
xchg
mov
xchg
push
xchg
sahf
push
test
inc
pop
lods
in
jbe
lds
int3
sbb
or
fs
mov
pop
fildl
mov
and
jnp
outsb
mov
push
cmp
outsl
in
and
mull
inc
and
sbb
add
mov
xor
cli
xor
inc
lods
adc
clc
fcomp
pop
push
rorb
lds
dec
xlat
fmull
push
adc
out
loop
inc
nop
or
popa
jl
sbb
movsl
clc
push
insl
add
add
add
add
push
push
pop
push
dec
pop
idiv
cld
mov
addl
repz
repnz
decl
mov
std
dec
mov
out
xchg
mov
xchg
fidivrl
sahf
das
fdivrs
dec
and
push
inc
repnz
add
jbe
insl
mov
lret
mov
leave
and
or
or
xchg
sti
out
fdivrs
add
iret
jns
hlt
and
mov
outsl
mov
cmp
out
mov
inc
mov
and
mov
pop
mov
scas
aam
call
sub
out
cmp
enter
aaa
mov
push
loopne
out
cmp
dec
ds
push
push
xor
fdivl
jns
in
lods
ret
cs
sbbl
jmp
mov
inc
mov
push
adc
xchg
inc
loop
adc
decb
pop
pop
mov
shrb
mov
lock
in
fmuls
push
mov
test
and
jle
inc
adc
sub
lret
aam
adc
sbbb
repz
imul
mov
mov
adc
shlb
add
pop
cmp
jge
or
sub
iret
int3
mov
jp
xor
or
inc
fdivs
mov
mov
sub
leave
jns
jnp
pop
aad
and
fmull
cld
or
sbb
xchg
sahf
mov
or
jnp
sbbl
lret
mov
sbbb
out
mov
inc
jbe
lcall
pushf
imul
jno
xor
xor
xchg
rcl
loopew
mov
clc
lds
pop
sbb
adc
jbe
insb
jo
push
cs
loope
stos
out
sahf
xor
fimull
outsb
adc
insb
mov
lcall
lea
je
push
test
jle
pop
stos
jno
imul
xor
cmc
iret
lods
dec
fdivrs
pop
mov
push
pop
dec
xchg
and
cmp
push
outsl
xchg
movsl
xchg
sti
sbb
pop
lcall
leave
inc
mov
xor
arpl
and
cmc
inc
jp
push
xchg
push
ret
mov
mov
sub
in
push
and
call
loopne
push
mov
or
popf
mov
rorb
sub
and
call
rorl
dec
into
hlt
or
mov
mov
sbb
and
adc
in
gs
imul
xchg
pop
loopne
inc
leave
cmp
jge
lods
ret
lcall
adc
jp
lea
lea
mov
gs
fsub
mov
inc
inc
mov
jmp
addr16
je
in
add
movsl
cltd
adc
fcmovb
notb
add
out
push
aad
mov
push
lret
jns
inc
dec
cltd
es
lcall
loope,pn
xlat
sub
push
xchg
mov
mov
mov
in
sbb
sbb
in
bound
mov
fwait
push
repnz
pusha
adc
lahf
xchg
mov
pop
jno
jge
repnz
lods
cmc
or
mov
add
add
jmp
dec
cli
insb
and
stos
inc
inc
pushf
mov
fdivrs
cmc
inc
pop
add
pop
add
loope
into
jno
scas
mov
in
jns
ja
inc
inc
push
add
xlat
call
fistl
sbb
jb
pushf
mov
cwtl
repnz
add
xchg
cmp
out
pop
mov
jg
ret
cli
sbb
fcmove
cmpsl
mov
adc
mov
sbb
rorl
sbb
sub
or
push
addr16
push
cmpsl
sub
in
push
inc
cli
popf
or
or
or
jmp
jp
push
lods
les
pmaxsw
cmp
or
daa
das
sbb
test
push
aas
add
cmpl
inc
mov
adc
or
or
push
fwait
enter
mov
and
out
or
xor
inc
pop
mov
imul
push
aas
and
sub
andb
aam
pop
mov
int
inc
sahf
pop
jns
popa
sbb
mulb
pop
pop
jbe
mov
add
in
or
clc
pushf
mov
xchg
push
scas
mov
mov
sahf
stos
add
push
mov
inc
push
pop
pop
jbe
sbb
push
mov
ja
es
clc
jmp
out
lret
xor
gs
ficoml
ss
or
cmp
lcall
testb
push
jnp
fsubs
aad
addr16
scas
das
sub
sbb
pushl
daa
sbb
subb
jno
xchg
pop
pop
push
mov
ret
sub
xchg
mov
cwtl
xor
popa
and
jmp
push
jo
adc
daa
and
xchg
popf
lock
pop
mov
add
mov
les
movsb
sbb
xchg
mov
adc
cli
or
aas
dec
add
add
jne
iret
fnstcw
inc
sub
sbb
pusha
in
xlat
mov
mov
fisubrs
imul
gs
add
and
inc
popf
mov
pop
popa
mov
mov
movsb
inc
add
sbb
stos
adc
mov
inc
nop
mov
cli
dec
cli
push
cli
sub
mov
xchg
clc
test
push
jae
mov
mov
fisttps
sbb
out
cmpsb
call
jl
xchg
jb
test
adcb
jp
push
dec
in
lcall
xchg
and
mov
scas
push
push
fnstsw
mov
imul
sbb
add
arpl
add
add
add
add
inc
pop
inc
pop
pop
pop
mov
push
mov
jnp
dec
loope
add
addl
out
cmp
hlt
push
push
inc
incb
cmp
and
ret
dec
push
pop
mov
aam
xrelease
mov
sar
sub
mov
ljmp
jnp
mov
negl
cmp
lods
dec
mov
jae
das
rolb
xchg
and
pop
aaa
ja
dec
mov
jb
or
push
test
fbstp
xor
add
xor
xchg
mov
jmp
push
mov
loop
out
push
outsl
out
stc
andl
ret
or
fsub
imul
outsb
repz
mov
insb
dec
cltd
mov
into
xorb
sub
jge
insb
or
ljmp
xlat
cmpsb
mov
nop
sub
cli
negb
mov
fnstcw
aaa
loop
out
nop
push
mov
nop
lcall
ja
stos
mov
sub
sahf
cld
mov
dec
cmp
popf
or
cmp
ret
test
pop
out
icebp
out
lret
or
push
add
clc
mov
arpl
icebp
gs
frstor
rolb
push
adc
and
lea
push
mov
inc
push
mov
lods
inc
fmuls
inc
sahf
daa
mov
mov
fidivrs
enter
dec
addr16
add
test
and
mov
push
or
hlt
pushf
pop
dec
mov
sbb
outsl
ret
jbe
data16
xor
or
mov
jge
add
scas
arpl
adc
in
adc
mov
jecxz
xchg
dec
movsl
and
sub
mov
or
cmpsl
and
pop
test
sbbl
pop
int
sub
xchg
leave
dec
cmp
rol
sbb
ret
fwait
mov
aaa
or
mov
jnp
cmp
mov
out
xor
xor
mov
bound
popf
loop
xchg
cs
inc
leave
test
js
out
clc
cmp
fcmovbe
add
or
scas
add
inc
inc
add
int
leave
sahf
and
inc
data16
scas
sbb
sbb
ja
in
enter
aaa
movsl
adc
push
jns
cwtl
rcrb
punpckhbw
push
in
push
jbe
push
lret
push
or
dec
vpsrld
sarb
add
adc
pop
leave
xchg
out
enter
mov
xor
push
add
pop
jo
icebp
xlat
fstps
dec
add
cmp
fs
sub
stos
ss
mov
dec
or
sub
idivl
sub
daa
or
mov
cmpb
and
push
jb
push
in
inc
dec
jb
mov
push
mov
scas
cld
and
std
addb
mov
lods
dec
mov
addr16
andb
cmovs
scas
sbb
pop
adc
dec
push
loopne
sbb
pop
jge
mov
push
bound
enter
mov
add
mov
lea
pop
push
dec
in
fldenv
loopne
cmpsl
mov
divl
mov
loop
or
lahf
out
je
adc
cli
sbbl
mov
sub
orb
jp
ficompl
or
gs
ja
dec
inc
jb
int3
jbe
fildl
idivb
mov
mov
cli
cs
hlt
inc
push
ja
pop
pop
jo
inc
add
xchg
test
mov
sti
int
in
lret
test
jae
gs
cwtl
lea
mov
out
rcll
fs
dec
xor
inc
sub
xor
into
aad
add
xlat
dec
mov
mov
lods
and
xor
pop
fisttpll
enter
loopne
push
pop
fs
sub
push
pop
jl
stos
enter
lods
xor
adc
inc
mov
xchg
push
pop
and
iret
jno
mov
adc
sbb
cmp
push
repnz
fwait
loopne
sbb
pop
and
cs
pop
sbb
xchg
xor
sbb
mov
xchg
push
sbb
mov
or
lret
testb
test
fldenv
es
and
dec
repnz
mov
mov
js
dec
jg
out
and
sub
push
pop
pop
mov
pop
and
inc
gs
sub
adc
jge
push
insl
sub
ds
mov
in
stos
adc
imul
dec
jmp
lock
jl
fstps
mov
and
in
sub
xchg
stos
push
mov
xchg
int
adc
or
inc
nop
push
sub
xor
popf
test
aas
sbb
cmp
subb
cli
bound
push
rclb
adc
ja
hlt
push
imul
das
in
int3
repz
fildll
sub
in
jbe
ja
loop
sbb
pop
mov
mov
fbld
lock
clc
in
lods
int
cli
cltd
xchg
flds
mov
aad
or
cmp
mov
xchg
test
cmpsl
lock
sbb
outsl
cmp
dec
cmpsb
sbb
and
adc
das
pop
das
mov
aaa
cmp
adcl
sahf
sub
mov
decb
sub
and
mov
lods
int
xchg
sub
mov
pop
and
out
dec
cmp
fbld
mov
orl
mov
push
test
add
lds
mov
ljmp
call
jle
ljmp
and
lcall
sub
inc
push
fs
pop
sub
or
lret
mov
cld
stos
dec
lea
add
add
add
dec
push
inc
push
pop
push
pop
pop
ss
imulb
test
or
add
addl
adc
fbstp
sbb
adc
mov
lds
outsl
mov
sub
scas
mov
add
mov
gs
call
hlt
arpl
icebp
icebp
push
xchg
xor
mov
imul
popf
inc
nop
mov
imul
subb
mov
cmp
or
xchg
fistl
popa
inc
pop
iret
cmp
dec
cli
mov
jbe
je
imul
adc
das
mov
cmp
in
mov
shr
adc
xor
ja
or
add
rcrb
xchg
push
pushf
popf
call
nop
lock
push
rcr
xchg
aaa
in
mov
or
jnp
push
lods
stc
pusha
xchg
dec
push
aas
lock
and
mov
leave
mov
pop
pop
mov
push
fs
std
cwtl
not
lcall
pop
xor
dec
mov
insb
hlt
sahf
outsl
pop
ret
mov
hlt
leave
roll
and
xchg
cmp
jl
popf
imul
add
jns
mov
jmp
push
xor
mov
lret
inc
cs
je
ret
cli
push
adc
adc
mov
stos
lret
lds
lcall
test
repz
dec
pop
fistpl
cltd
adc
mov
cmp
adc
dec
into
push
lock
sbb
cmp
ljmp
xlat
cmp
insb
adc
dec
push
xor
push
lods
jb
frstor
paddb
or
dec
pop
lret
mov
ffree
jge
lea
push
in
xchg
and
adc
sub
mov
xchg
rcll
inc
xchg
cmp
jg
lods
movsb
xor
divl
mov
pop
mov
mov
lock
inc
sub
jge
repz
outsb
jp
mov
cmp
ljmp
cli
ja
cmpsl
std
adc
mov
lret
lods
movsb
pop
jno
adc
push
pusha
loop
inc
mov
xchg
fisttpl
repnz
mov
xchg
and
pop
in
out
outsb
mov
cmp
jno
push
outsl
push
jnp
jb
in
adc
jge
cld
and
inc
les
cltd
pop
jns
push
mov
mov
inc
sbbl
enter
fsub
dec
adc
mov
fstps
jnp
dec
mov
or
dec
sti
inc
lock
jg
lcall
pop
dec
lods
lahf
pop
adc
arpl
cld
xchg
rolb
outsl
pop
jle
inc
pusha
pushf
pop
into
nop
sbb
add
bound
adc
rorl
call
mov
js
push
cmpsb
jp
scas
mov
dec
lea
xlat
inc
mov
dec
mov
aam
fs
sub
call
mul
pop
jnp
mov
pop
inc
push
cli
jmp
pop
test
mov
bnd
mov
ret
insb
mov
pop
js
push
loope
jno
outsb
xchg
cmp
push
test
arpl
adc
mov
cmp
mov
test
into
push
cmc
push
xor
scas
mov
pop
mov
cmpsb
lods
mov
pop
repz
inc
test
mov
dec
es
test
call
add
xor
lods
dec
in
xor
clc
sbb
jmp
or
mov
mov
mov
sbb
pop
xor
orb
cmp
lret
xlat
std
push
int3
data16
call
push
in
stc
cmp
dec
lret
push
pop
fcmove
mov
jo
mov
mov
in
fists
rclb
jge
popa
add
pop
mov
bound
mov
jno
cmpsl
shll
addb
in
add
mov
jae
stc
rcll
stos
cld
out
push
inc
inc
es
mov
gs
push
fisubl
stc
pop
xchg
arpl
xchg
push
loopew
sub
push
into
stos
mov
fisttpl
xchg
repnz
call
and
mov
out
sbb
mov
repz
inc
dec
adc
pop
testl
orb
push
subb
mov
adc
xchg
push
dec
sub
jo
xor
push
mov
pop
loope
enter
repz
xlat
sbb
xor
rclb
roll
insl
aad
dec
xor
insb
dec
pushf
fists
cmpsb
adc
loope
mov
fnstsw
in
icebp
push
pop
pop
mov
out
stc
cmp
jge
inc
xor
imull
jl
and
test
out
or
push
add
xor
jg
jge
push
jmp
cmp
data16
push
mov
mov
sub
outsl
leave
outsb
repz
imul
imul
cmpsb
cmpsb
fcmovnu
inc
je
outsb
shll
aas
lods
andl
xlat
push
stc
imul
or
fnsave
adc
dec
add
popa
rolb
ffreep
mov
enter
andb
pop
mov
mov
mov
ret
fucomi
call
and
sub
in
lahf
mov
loop
fs
push
xor
sbb
add
imul
into
mov
push
out
pop
jbe
jmp
js
test
repz
adc
je
dec
push
je
dec
sbb
clc
out
inc
imul
std
xlat
cmc
lahf
fimuls
pusha
or
xor
enter
dec
aad
shrl
add
xchg
mov
xor
outsl
mov
aam
lcall
sub
pop
xchg
lea
add
add
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
insl
push
jecxz
add
jl
add
stos
sti
jmp
pop
or
sbb
in
fldenv
pop
mov
mov
das
cltd
enter
pop
in
jb
sbb
or
sbb
into
daa
int
mov
push
repz
hlt
mov
ds
jg
xchg
ficomps
push
jle
mov
cmp
xor
insb
in
jnp
cmp
sbb
mov
sbb
scas
insl
sets
pop
lcall
neg
in
add
ret
fdivrl
or
gs
cwtl
jnp
ret
jle
push
rcrl
mov
and
sub
je,pt
daa
xchg
lcall
mov
lret
jb
xchg
add
xor
pushf
or
insl
outsl
jle
lcall
xor
xchg
push
xchg
jecxz
ret
xor
dec
sub
jo
sti
repnz
ja
lret
mov
or
lret
hlt
in
xchg
shll
dec
fisubrl
out
inc
cmpsl
push
das
inc
inc
dec
icebp
xor
add
or
mov
pop
sbb
pop
pop
pop
jb
adc
ja
dec
adc
mov
cwtl
faddp
mov
pop
out
ljmp
add
ficompl
das
test
outsl
rcrl
sub
pop
popa
pop
mov
jnp
cmp
into
test
cmp
cld
in
mov
dec
mov
inc
pop
test
sbb
out
add
jecxz
hlt
push
push
sbb
pop
adc
popa
es
hlt
aas
nop
pop
mov
and
lahf
paddb
movsl
movsl
sti
popf
loope
test
pop
push
jae
iret
lods
incb
or
jecxz
push
adc
into
enter
mov
ficoms
push
mov
pop
int3
in
xor
mov
push
xchg
shld
add
fcomps
pushf
mov
ss
test
lds
inc
and
push
clc
or
jmp
add
pop
cmp
lcall
aad
jl
cs
xor
inc
rolb
sub
into
xor
or
sbb
dec
mov
dec
mov
xchg
and
ret
dec
jl
xor
push
outsb
dec
cmpsb
pop
cmp
stos
adc
out
addl
add
xchg
cmp
push
xlat
je
cmpsb
adc
addb
lea
lods
enter
or
mov
movsb
mov
mov
mov
cmp
and
movd
and
nop
mov
or
leave
push
cmp
mov
xchg
ds
inc
pop
pusha
mov
cmp
xchg
ja
rcll
sahf
iret
jl
xor
cmp
icebp
mov
mov
fdivrs
mov
loopne
push
insb
dec
jb
fdiv
push
xchg
push
pop
popa
cmp
sub
lods
inc
lds
sbbb
inc
mov
push
or
cmp
pop
jb
mov
jp
or
push
repnz
push
sub
rclb
or
mov
and
std
xor
xchg
in
pop
cmpsb
dec
adcl
and
lea
and
mov
cmp
sub
jne
jl
inc
push
push
andb
push
into
sbb
mov
lret
nop
fidivrs
mov
outsb
sub
pop
repnz
push
ss
cmpsl
dec
in
inc
mov
inc
adc
cltd
jecxz
inc
jge
mov
adc
call
call
xchg
divb
mov
adc
sarb
add
ljmp
shl
sub
inc
ficoml
sar
or
inc
ljmp
mov
pop
sub
arpl
enter
jl
dec
test
mov
out
push
icebp
addr16
sti
cmpl
in
adc
lods
popa
fucomip
pusha
rcrl
cmp
ljmp
and
das
lret
sub
nop
nop
sahf
lcall
arpl
sbb
cwtl
jne
and
pusha
negb
nop
scas
outsl
rclb
xor
dec
shll
aad
mov
stc
addl
pop
fisubs
fdivs
inc
sub
jo
and
movsb
in
iret
sarl
outsl
lds
xchg
repz
xor
lcall
rclb
jp
cs
dec
jmp
and
scas
push
xorb
push
daa
jmp
in
cmp
lret
repz
push
out
xchg
or
and
mov
push
mov
mov
mov
into
cltd
inc
add
mov
lret
test
std
and
pop
add
xchg
mov
gs
jl
dec
cmc
and
insl
xchg
adc
inc
dec
push
aad
push
cmp
and
imul
and
pop
and
aaa
cmp
inc
fbld
scas
das
dec
mov
gs
loope
nop
push
inc
sub
mov
mov
xor
adc
test
mov
push
xchg
cmc
pop
lock
fldt
or
pop
fadd
mov
popa
push
into
push
sbb
cmp
lods
push
das
or
movl
loope
cmp
xlat
addr16
jns
mov
aas
into
jg
les
fcmove
mov
imul
imul
mov
pop
and
test
outsb
daa
sbb
int
inc
push
cmpsb
outsl
in
pop
pop
cwtl
in
sbbb
movsl
mov
jle
lods
aas
add
mov
imul
or
lock
cs
mov
fists
imul
pop
add
cwtl
sbb
jge
pop
mov
test
push
scas
shlb
mov
pop
outsl
enter
ljmp
or
add
mov
out
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
pop
iret
cmp
xchg
sub
insl
sbb
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
