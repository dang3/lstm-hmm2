mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
or
nopl
jmp
mov
xlat
hlt
sub
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
js
push
rcrl
mov
lods
xchg
pop
rcr
pop
mov
xor
loopne
flds
mov
dec
pushf
sbb
adc
add
out
stos
add
adcb
out
cwtl
cltd
xchg
jle
xor
cmp
xchg
loop
gs
and
push
xchg
pop
and
jne
repnz
jnp
addb
mov
push
xor
outsb
cmpsb
nop
pop
xchg
iret
dec
mov
pushf
xor
cmpl
add
out
setno
fldenv
cmp
inc
mov
inc
push
cmp
ror
test
pop
xor
dec
ss
gs
imulb
outsl
leave
mov
fldt
mov
sahf
fimull
into
pop
xchg
mov
push
fisubrl
aam
sbb
or
sub
and
sub
loope
call
jmp
pop
push
pop
cld
pop
addr16
cwtl
cli
or
outsb
out
cmc
jge
sbb
cld
mov
dec
les
lahf
fs
pop
push
fwait
xchg
cmpsb
and
iret
cmp
ds
movsb
test
inc
fwait
call
jg
mov
std
mov
push
push
jb
scas
jb
and
mov
xor
and
cmp
aas
mov
hlt
cmpb
daa
lods
test
jge
cmpsb
dec
mov
add
and
and
stc
pop
sbb
ljmp
lods
scas
xlat
ret
je
cmp
mov
ret
out
push
pop
pop
or
loope
push
scas
cmpsb
nop
jp
test
stos
mov
sbb
push
sub
bound
and
in
js
test
clc
lock
jl
lods
pop
aad
push
mov
push
enter
pop
sbb
out
dec
mov
jae
fcmovnbe
jnp
xor
aam
adc
ja
aam
push
js
shlb
rcr
dec
push
stc
into
or
jne
push
out
clc
fwait
lods
xor
jno
inc
mov
cmpsb
or
pop
jno
xor
icebp
dec
cmpsb
shrl
lock
movsl
cmp
mov
test
imul
xchg
rcrb
pop
dec
jecxz
jp
enter
push
mov
dec
in
daa
sti
lods
test
push
incl
lcall
mov
nop
mov
cmp
arpl
into
cmp
data16
add
jmp
jl
xchg
leave
jbe
xchg
mov
add
lods
xor
add
shr
jnp
jns
or
add
clc
negl
or
fs
fbld
sbb
inc
mov
movsl
daa
out
and
adc
cmp
cltd
stos
fsubr
push
and
out
or
imul
mov
repnz
mov
sub
arpl
scas
mov
cld
imul
xchg
mov
xchg
mov
and
arpl
out
cmpsl
testl
out
xchg
add
push
rcl
cmp
mov
pop
mov
bound
xchg
cld
and
sub
lea
mov
pop
fldt
inc
push
xor
mov
xor
sbb
movsb
rclb
cmp
in
and
cmp
push
popa
imul
jl
mov
mov
pop
int
add
xchg
pop
jns
xor
add
or
jg
scas
fldt
pop
and
out
jmp
and
mov
xchg
xchg
jb
fdivl
addl
fs
std
jbe
ret
xchg
mov
adc
pop
or
scas
mov
mov
ss
xchg
mov
push
icebp
cmp
lahf
mov
aaa
or
mov
stos
xlat
repz
inc
xchg
dec
add
xchg
movsl
lods
cmp
fcomps
mov
inc
xor
sbb
lahf
sahf
repz
fnsave
jecxz
subl
mov
adc
rclb
push
inc
jle
mov
sbbb
fstl
push
inc
pushf
cwtl
push
jmp
and
xor
mov
icebp
stos
push
push
lea
or
repnz
mov
and
fsubr
cmp
push
sbb
ret
fmul
mov
jbe
add
sbb
stos
sbb
mov
jecxz
or
cmpsb
fstpt
testb
movsb
jecxz
adc
mov
sub
sbb
data16
call
int3
xor
mov
into
loop
mov
sahf
in
dec
sbb
jnp
sub
dec
lea
repz
bnd
test
mov
dec
push
sbb
xchg
pop
jmp
xchg
out
mov
push
pop
lea
cmpsb
repz
xor
int3
shrb
outsl
test
mov
dec
test
sbb
jo
sbb
cwtl
je
dec
inc
cld
push
adc
xchg
nopl
test
dec
xor
orl
and
es
and
xor
mov
js
movsb
jmp
push
mov
clc
jns
dec
jmp
adc
mov
jmp
mov
sbb
sub
add
push
and
mov
repnz
fs
sub
lcall
leave
out
inc
test
neg
pop
pop
jno
push
outsl
aas
adc
pavgw
pop
ljmp
imulb
in
mov
stc
test
sbb
sbb
jnp
mov
push
test
and
into
dec
nop
scas
xchg
stos
xor
cmp
adc
sub
jge
mov
hlt
insb
mov
sub
pop
or
ret
das
pop
push
out
mov
inc
dec
sbbb
stc
fwait
pusha
push
add
in
je
cltd
push
pop
sbb
pushf
cltd
in
cmp
out
jmp
pop
pop
enter
leave
add
dec
jge
adc
mov
pop
sbb
fdiv
inc
sti
scas
sahf
xchg
and
ja
push
adc
cmpsl
xorb
shlb
sbb
xlat
loopne
pop
push
shl
and
cmpsl
aam
xchg
icebp
xchg
dec
and
and
jb
jmp
int
fists
cmp
leave
gs
mov
adc
add
add
add
jo
add
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pfmin
jecxz
add
and
test
mov
out
out
fincstp
sbb
mov
scas
fsub
adc
inc
mov
fsubp
inc
xor
lret
out
data16
fmull
repnz
out
mov
jb
mov
pop
lock
rolb
push
xchg
push
mov
mov
movsl
push
inc
ss
testl
pop
pop
clc
mul
mov
add
punpcklwd
out
inc
nop
fcom
mov
cmpsl
or
jge
sbb
cltd
push
in
xchg
sub
xchg
ficoml
push
lds
stos
push
and
or
cmp
add
cmc
cmpsl
cmpsl
in
pop
jno
pop
and
or
out
in
imul
mov
lea
sbb
out
fistpl
jmp
mov
jle
cs
sub
aad
adc
inc
mov
mov
sbbl
or
inc
test
xchg
adc
lods
jg
scas
mulb
data16
je
cs
dec
push
sbb
lock
xchg
add
sbb
or
stos
lea
fucompp
pop
icebp
pop
mov
xchg
add
cld
jno
repz
fmull
sbb
ret
and
cli
jle
mov
cld
je
leave
aad
je
mov
jecxz
cmc
inc
rcll
push
or
outsl
js
fwait
mov
add
push
xor
inc
fwait
jge
pop
sub
and
pop
rolb
sbb
mov
push
fistpl
fimull
out
int3
shrb
lods
aad
into
cltd
cmpsb
nop
mov
xchg
int3
mov
das
sahf
cmp
orl
stos
cwtl
lods
test
cmp
xor
bound
mov
mov
inc
inc
and
loopne
shrb
or
std
loope
push
rol
sqrtps
sub
sub
adc
sub
pop
js
and
int3
and
jle
inc
mov
mov
mov
ret
test
mov
lods
ficoml
inc
push
dec
repz
xchg
sub
movsb
mov
inc
fildl
sub
arpl
pop
and
ficoms
mov
or
mov
mov
hlt
inc
mov
das
out
in
xchg
lret
aam
or
inc
mov
push
clc
push
mov
xchg
das
cmpsb
loopne
dec
int
or
lret
xchg
lret
fdiv
clc
mov
rcrb
inc
mov
movsb
mov
xor
jnp
jl
repnz
sti
loope
ficoms
mov
mov
rol
fistpll
mov
pop
inc
sbbb
loop
jno
repz
out
fisttpl
movsb
cmp
into
pusha
nop
out
dec
outsb
negb
test
jbe
pusha
je
or
imul
inc
inc
cmp
pusha
add
cmp
notb
pop
pop
lods
es
xchg
pop
fstpl
fsubp
jbe
aas
cmp
std
xlat
lds
loopne
icebp
inc
xlat
mov
and
mov
inc
bound
mov
stos
idivl
cmpsl
adc
sub
fimull
pop
in
push
mov
jo
or
add
fs
daa
and
int3
fcoms
jg
lahf
test
sti
jp
xor
sbb
rclb
daa
mov
pop
and
xchg
cmp
push
in
mov
lahf
jo
mov
shll
call
stc
jne
and
jmp
iret
cmp
push
imul
push
outsl
and
scas
jecxz
sbb
pop
pop
ja
inc
mov
popa
lds
mov
push
out
imul
cmp
mov
lods
outsb
lahf
push
mov
push
push
aad
lea
bound
cmpsl
movsl
insb
test
daa
lahf
xlat
movsb
inc
iret
inc
nop
inc
sub
subl
insl
adc
enter
xchg
mov
add
sbb
test
sub
cmp
in
mov
add
add
push
inc
lock
lret
xchg
and
xchg
xorb
jmp
and
and
pop
outsl
loop
lahf
les
sarl
pop
mov
cmp
inc
jl
lock
cmc
insl
push
xor
adc
addr16
pop
popa
mov
or
dec
repnz
sub
out
icebp
adc
cmp
push
sub
mov
stos
js
shl
test
inc
orl
subl
popf
add
out
out
jne
es
mov
and
sbb
js
sub
aaa
sti
mov
std
jp
sub
mov
cs
negl
and
pop
int
push
mov
mov
ljmp
test
xor
mov
sub
adc
aas
rorb
sbb
dec
ds
les
incb
and
movsl
mov
add
ds
pop
in
clc
int
dec
mov
xor
in
xchg
call
int
in
mov
adc
mov
out
mul
dec
mov
mov
xchg
ja
loope
fcoms
mov
mov
scas
and
inc
push
adc
xrstors
adc
lds
inc
leave
cld
fidivl
pop
jnp
and
test
in
and
mov
out
lock
adc
test
adc
and
push
cld
jp
dec
xchg
xlat
xor
leave
icebp
cmp
mov
sbb
dec
inc
push
mov
dec
data16
outsb
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
shrd
xorb
shr
adcl
sysret
xchg
cmp
pop
shll
adc
sbb
popf
loopne
cmp
jo
mov
adc
jl
sahf
xlat
adc
and
push
out
inc
das
mov
nop
aad
ds
sub
das
sti
xor
jnp
out
out
out
lcall
dec
dec
lea
call
cmp
ret
stos
es
out
repz
lret
jge,pn
cmc
push
push
dec
mov
das
mov
jne
sub
cld
adc
jle
cmp
inc
mov
mov
aad
lret
sub
pop
int
out
fs
inc
add
cmp
cmp
das
sub
lods
and
or
adc
movsb
out
test
xchg
and
aaa
xor
loopne
dec
loope
mov
sbb
fdivrp
inc
les
loopne
in
shrl
std
imul
and
iret
xor
and
pop
and
push
fisubrl
mov
push
jge
les
add
fwait
loopne
std
xchg
lcall
addr16
mov
arpl
into
xchg
sub
add
das
pop
sub
lahf
dec
inc
jmp
cli
push
push
mov
lret
sbb
imul
fistps
into
in
push
mov
out
mov
lcall
popa
cmpsl
scas
mov
pop
xchg
or
mov
scas
fbld
sahf
movsb
out
mov
sti
aas
jnp
pop
add
clc
shr
mov
stos
pop
xchg
sbb
and
fldl
mov
lahf
cli
das
movsb
jl
lret
out
lahf
push
mov
jmp
addl
push
imul
imul
pop
jg
shrl
clc
mov
lods
ds
xor
xchg
jp
add
popa
dec
pop
lock
xor
sub
cltd
out
sbb
jb
fwait
pop
pop
test
lods
sub
pop
js
jl
leave
sbb
adc
fsubrl
iret
das
ja
push
nop
adc
jno
and
dec
jecxz
cwtl
je
mov
fwait
jbe
dec
scas
or
ret
sbb
in
fs
cmp
outsb
sarl
cmp
test
fcmovne
mov
push
xchg
outsl
outsb
ja
popa
cmpsl
popl
cmp
fistl
addr16
ret
outsl
bound
add
test
pop
and
pop
sahf
les
inc
ds
hlt
dec
stos
aaa
mov
inc
rcl
push
dec
mov
adc
lahf
pop
pop
outsb
inc
popa
test
xchg
std
subb
ljmp
clc
into
mov
imul
enter
pop
or
repz
and
inc
iret
fcomp
pop
jae
rol
arpl
pop
movsb
inc
pop
loope
sub
out
pop
jge
test
int
mov
das
cli
mov
outsl
cwtl
xor
imul
jmp
out
mov
cmp
das
mov
int
add
xorl
push
stos
push
push
or
loope
test
add
dec
aad
or
inc
pop
xor
js
inc
jecxz
or
cmpsl
sbb
sub
xor
sub
mov
scas
jnp
cmpsb
cmpsl
loop
cmp
xor
or
fsts
dec
movsl
pop
in
sub
push
adc
cli
cwtl
push
xor
mov
mulb
or
cwtl
dec
xchg
jle
push
ja
lods
mov
cmp
push
scas
mov
out
cmp
adc
ja
mov
or
lret
pop
fsubr
jle
add
cmp
xlat
das
aas
xchg
add
xor
repnz
jne
mov
aad
mov
or
insl
sbb
lods
cmpsb
xor
clc
cmp
insl
and
dec
sub
adc
jbe
jnp
sub
stos
clc
lods
jle
daa
jg
and
push
dec
insl
lea
std
sti
mov
iret
mov
inc
loope
iret
xor
mov
xchg
das
shrl
in
andb
lahf
sarl
iret
imul
pop
loop
aas
daa
std
jge
scas
stos
and
mov
push
test
xor
mov
in
push
xor
sub
cmp
fs
cwtl
aas
add
mov
pop
pop
incl
and
push
sbb
push
pop
pop
and
pop
xchg
or
leave
mov
mov
cli
cmp
leave
jb
cmp
cltd
cmpsl
cmc
sub
add
imul
push
xchg
ss
rorl
push
mov
cmp
mov
mov
mov
outsb
dec
cs
push
or
mov
shrl
xchg
or
pop
and
je
ds
ret
sahf
adc
hlt
into
jbe
outsl
fisttpll
or
cld
push
jecxz
jae
mov
sbb
into
enter
jle
push
lds
xor
add
adc
test
fs
popf
mov
jecxz
mov
sub
mov
mov
and
adc
adc
xchg
ds
sub
or
mov
cltd
xor
jg
movsb
int3
addr16
mov
call
xchg
jg
out
imul
cmpsl
jmp
xchg
jmp
jno
inc
fwait
sub
subl
adc
lock
int3
pop
dec
bound
sbb
sbb
mov
insb
js
xchg
push
outsl
ja,pn
jnp
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
sub
les
xadd
in
aad
add
cwtl
dec
cmp
and
add
sbb
lret
sub
cmpsl
ret
loop
mov
pop
movsl
int
rcrl
xor
bound
cmp
xchg
std
test
lds
mov
mov
jns
fidivl
call
cld
lods
lret
dec
es
out
jle
pop
jge
sarl
ljmp
lcall
add
pusha
ret
mov
mov
mov
adc
les
popw
lods
leave
fsts
ret
addr16
push
sar
mov
mov
push
sbb
mov
mov
cmp
scas
dec
test
jne
add
ret
sub
push
lahf
lds
push
adc
divb
xchg
nop
push
pop
rcrb
jns
adc
jne
test
xor
test
sbb
ss
mov
out
cmp
xchg
jecxz
je
inc
sub
add
mov
add
cmp
push
inc
fwait
aaa
push
stc
jnp
nop
cltd
das
shrb
nop
lret
mov
insl
add
int3
lds
out
dec
dec
sbb
mov
pop
stos
add
inc
les
jb
loop
xchg
lds
mov
xor
fimuls
jp
xor
mov
popa
movsb
addr16
int
jne
lods
gs
test
shl
scas
push
jmp
test
and
push
jle
lret
sbb
xchg
mov
test
ss
xor
into
lcall
hlt
sbb
js
div
ja
lahf
test
push
dec
sbb
mov
xchg
repnz
push
fimull
jmp
fwait
cmp
xchg
sub
dec
pop
sub
sbb
fldl
ret
mov
pop
je
dec
cmp
aad
xchg
in
pop
push
fwait
push
movsb
xorl
stos
subl
inc
cmp
shr
mov
ja
outsl
dec
xchg
loope
sbb
pop
adc
popf
dec
repz
and
lock
fcmovnb
out
jg
inc
pop
rcrb
aas
addr16
cmp
hlt
xchg
std
es
stc
nop
sti
lods
dec
nop
or
add
pop
and
mov
adc
adc
sti
cmp
xchg
mov
pop
pop
xor
stos
inc
inc
cwtl
rorb
lret
arpl
mov
shl
cltd
les
dec
popa
jns
outsb
sub
ja
jnp
mov
test
push
adc
repnz
jmp
aaa
inc
add
jg
jg
xchg
jle
cli
iret
push
and
xchg
push
cmp
mov
cld
xor
adc
mov
xchg
in
cmp
mov
mov
and
sbb
test
je
stc
cli
cwtl
jns
mov
and
ja
push
cmpsl
leave
cmp
cmpsl
fisttpl
fdivr
lret
pop
jo
dec
mov
cmp
mov
ficompl
ja
enter
nop
andl
in
sub
std
shll
int3
loope
js
pop
movsb
and
aas
stos
out
xor
mov
or
mov
or
push
mov
jle
inc
inc
std
pop
and
call
xchg
adcl
mov
pop
or
les
mov
je
lea
rorl
add
out
pop
mov
and
repnz
xor
les
loopne
imul
aam
xor
fidivl
jo
ja
cmpsl
ja
arpl
movsb
iret
in
mov
pushf
das
push
mov
das
stc
push
and
xchg
cli
adc
jae
sbb
add
and
out
ljmp
andb
mov
push
shl
fmul
and
jg
or
push
pop
cld
iret
mov
adc
lods
pop
pop
sti
sub
jnp
scas
or
add
fsubl
mov
inc
inc
xchg
jnp
in
or
sub
jb
clc
xchg
inc
int3
jne
add
in
stos
sbb
jb
adc
insl
cmp
lret
jns
bound
and
mov
push
icebp
xor
sub
sbb
dec
popa
rcll
in
cmp
add
test
inc
or
movsl
leave
jno
jmp
or
or
test
push
mov
mov
ds
imul
dec
pop
xchg
test
ljmp
test
fisubl
jo
mov
lret
add
sbb
add
jmp
mov
inc
hlt
aas
cmp
sarb
out
and
sbb
leave
jle
mov
dec
dec
popa
fimull
scas
mov
xchg
and
addr16
pop
xorb
jns
in
repz
pop
scas
add
push
dec
or
cmp
sub
js
adcl
daa
rorl
inc
push
scas
ret
loopne
add
pop
enter
mov
dec
mov
movsb
cmpsb
std
xchg
cmpsb
mov
push
push
adc
out
or
cmp
xor
dec
adc
outsb
mov
andb
movsl
add
push
xchg
adc
adc
popa
pop
push
dec
incl
std
out
clc
mov
int3
dec
dec
stos
outsl
hlt
rorl
loop
adc
xchg
test
popa
lahf
xor
and
movsb
bound
push
push
ret
adc
sahf
loop
xor
insl
push
pop
fs
mov
aad
inc
icebp
push
jle
cltd
lods
jmp
das
jl
mov
js
pusha
inc
pop
sub
mov
lods
dec
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
mov
pinsrw
pmullw
cli
in
subb
mov
iret
call
xchg
mov
sarb
ja
mov
outsb
das
rcr
fists
shrw
push
pop
jno
sbb
mov
das
nop
clc
mov
test
out
aas
add
jb
xchg
in
mov
mov
sub
mov
fwait
or
decl
lret
stos
mov
lcall
adc
cmp
sbb
adc
int
enter
cwtl
lret
sbb
dec
fisubl
mov
fucom
mov
sahf
pop
pop
pop
dec
xchg
inc
cmp
add
daa
adc
or
cmp
cwtl
pop
push
sbb
or
jp
stos
or
fstpl
lds
fs
fwait
inc
cltd
fwait
roll
jb
pop
sbb
hlt
sbb
stos
xchg
mov
mov
les
dec
sub
testl
out
jnp
push
sub
mov
sub
pop
xchg
sbb
inc
fidivrs
mov
repnz
data16
or
loopne
xchg
xor
mov
test
push
stos
mov
xchg
mov
aad
out
pop
jg
sbb
jge
mov
xchg
adc
push
out
movsl
cmpsl
push
shll
xchg
ss
hlt
int
or
mov
jb
icebp
ret
push
pushf
xchg
jb
cwtd
mov
sahf
lds
cs
xchg
ror
sti
push
push
or
cmp
bound
loopne
ss
and
imulb
xchg
inc
adc
loopne
shlb
les
jb
sub
or
leave
repnz
hlt
sarl
xchg
mov
mov
mov
and
test
mov
out
xor
pushf
ja
loope
imul
push
push
pop
add
stc
fildll
int
imull
mov
jne
inc
scas
dec
shll
data16
dec
push
add
test
xor
pop
cmp
mov
mov
pop
mov
add
test
ss
xor
xor
xor
leave
adc
loop
pop
cmpsb
vmovdqa
xor
pop
lea
fildll
or
mov
xchg
arpl
cmp
mov
popa
shlb
jmp
inc
scas
adc
sbb
aaa
mov
xor
shlb
mov
call
sbb
sub
stc
mov
arpl
cmpsl
mov
leave
aam
dec
int3
stos
gs
loope
lahf
outsl
aam
movsb
ds
rorb
cmpl
mov
inc
iret
fstps
cmp
or
pop
sub
xlat
xor
jae
in
or
push
xchg
dec
mov
rcl
pop
roll
repnz
jno
mov
jbe
or
shrb
pop
pop
pop
xchg
or
lods
sti
sbb
imull
cwtl
xlat
in
mov
or
test
inc
icebp
or
cwtl
add
cmp
dec
stos
mov
cmp
idivl
pop
gs
jne
ss
out
mov
mov
mov
mov
mov
unpckhps
jbe
dec
pop
jbe
movsl
cmp
in
int3
push
dec
mov
adc
scas
lea
or
sub
adc
imul
subb
add
lea
mov
repz
les
mov
outsl
add
mov
icebp
aam
xchg
nop
sbb
imul
aaa
ffree
and
push
into
pop
addl
shlb
adc
in
ficomps
out
fistpl
dec
inc
push
mov
jbe
or
fdivs
dec
push
in
and
xlat
mov
aad
and
push
jbe
mov
ja
inc
jmp
mov
cmp
push
push
lcall
repnz
fxam
jl
push
fisubl
pop
mov
fwait
pushf
jnp
movsb
addr16
negb
mov
ljmp
or
stos
and
cltd
int3
pop
adc
cli
insl
mov
sub
sub
bnd
and
hlt
jl
lahf
test
add
jnp
jmp
fldenv
add
cmp
popf
cli
jle
adc
push
inc
std
mov
notb
add
aam
lock
imul
cmc
xchg
imul
pop
cmpb
lret
daa
rolb
test
lcall
mov
loopne
sbb
adc
jecxz
and
sbb
test
movsb
pop
sbb
jne
int3
adc
push
das
stos
movsb
xorl
or
jno,pn
sub
jp
cmp
mov
mov
jge
pusha
jmp
fdivs
aad
jno
sbbl
inc
and
orb
cltd
lds
ljmp
sbb
inc
pop
imul
add
es
and
fbld
in
lret
scas
mov
xchg
jle
cltd
sub
push
je
cltd
les
sbb
leave
ljmp
add
push
push
jg
xchg
xchg
int
les
add
gs
adc
dec
push
cmp
ds
push
fld
mov
or
push
das
inc
mov
mov
ss
or
mov
adc
arpl
out
iret
mov
or
aad
shl
mov
jle
mov
dec
shll
insb
gs
jae
pushf
pop
scas
sub
inc
aad
addr16
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
jp
in
rorb
pinsrw
mov
lret
xchg
add
test
cli
cmp
shrd
sarb
push
pusha
adc
jecxz
mov
mov
add
and
mov
cwtl
adc
fisttpll
adc
int
idivb
push
inc
push
iret
pop
push
push
and
das
push
pusha
and
pop
pop
dec
mov
mov
fbld
push
mov
cltd
pop
jne
sbb
jne
cmpb
pop
xor
stc
enter
sbb
lahf
cmp
cmpsb
wrmsr
sub
lods
addr16
mov
imul
jmp
pop
outsb
mov
sbb
imul
inc
dec
ss
push
add
sbb
adc
dec
sbb
sti
inc
sub
or
mov
hlt
adc
arpl
lret
push
jmp
in
jmp
std
and
xor
test
adc
inc
jns
mov
mov
cmpsb
xor
hlt
push
movsl
and
add
gs
repz
mov
pop
push
inc
addr16
cmpsb
push
mov
xchg
aam
mov
inc
enter
xor
test
jge
or
or
lea
jns
add
cmp
movsl
cmp
inc
test
fdivrl
mov
cmp
cmpl
std
xor
push
ja
ss
je
and
xchg
repnz
insl
clc
mov
bound
xchg
cmp
gs
add
push
dec
push
mov
shl
pop
fsts
stos
adc
or
addl
repz
in
pushf
enter
mov
scas
add
cmp
xchg
jno
cmp
sbb
cmp
and
sub
xor
cmp
mov
jge
mov
or
testl
rolb
mov
aas
inc
hlt
or
insl
lods
jle
and
stos
xor
pop
insl
and
lcall
cmp
addb
mov
dec
je
mov
cli
addr16
mov
adc
adc
call
push
pop
jae
add
jl
xor
pushf
push
cmpsb
insl
pushf
andl
loopne
xchg
xor
cmp
add
out
cmp
popf
and
mull
mov
imul
aas
cmpsl
mov
pop
movl
retw
push
push
xchg
shll
push
loopne
enter
sub
inc
pusha
les
mov
fwait
and
xchg
or
jbe
xor
in
mov
enter
aaa
rcrl
outsl
filds
cmp
addl
mov
inc
cmp
icebp
divb
ss
mov
pushf
movsl
in
test
pop
fmuls
mov
mov
loop
jnp
aad
sub
inc
out
pop
sub
outsl
xor
lods
fs
dec
cmp
in
mov
movsb
stc
mov
and
movb
push
pop
xor
ret
hlt
les
aam
pop
sbb
mov
adc
and
add
mov
xor
inc
jne
cli
popa
ror
js
mov
mov
fwait
insb
pusha
stc
loope
idivl
push
test
lea
ja
sbb
scas
jp
jnp
popa
ljmp
test
pusha
push
or
xlat
cmp
ret
pusha
scas
cmp
sahf
cmp
mov
xor
xchg
pop
xchg
pop
mov
and
cmpsb
cmc
clc
add
movsb
sub
test
pusha
pop
cmp
adc
push
jle
mov
xchg
mov
mov
fildll
mov
icebp
dec
fstps
das
cld
int3
xor
dec
ficoml
mov
mov
xchg
and
adc
lods
push
lret
ds
aam
out
js
ret
mov
mov
fisubrl
into
mov
push
stos
mov
iret
xchg
shrb
push
negl
cmp
add
jecxz
sub
rcl
imul
fucomip
push
and
sbb
fidivrl
int3
jp
dec
popf
cli
inc
test
adc
scas
dec
cltd
xchg
dec
and
test
or
cmp
movsl
mov
mov
jmp
inc
jmp
pop
dec
cmp
or
fildll
lret
test
xor
aaa
mov
ja
mov
xor
or
lock
in
fisttps
icebp
mov
pop
hlt
lods
add
push
xor
ret
orl
stos
lahf
sub
cli
mov
or
cwtl
inc
mov
jne
dec
push
fidivrs
je
pop
inc
add
mov
inc
popa
dec
sbb
movsb
dec
popa
mov
testl
sub
or
push
mov
mov
sbb
mov
sbb
sbb
mov
popa
or
cmp
cmpsb
mov
adc
jns
adc
test
int3
nop
lret
test
icebp
sub
inc
or
jbe
cmp
and
lahf
test
mov
xchg
cmp
test
lret
push
outsb
jo
pop
ss
and
adc
or
xor
arpl
cmp
dec
repnz
push
xchg
loopne
push
movsb
sarl
clc
popf
aas
and
out
inc
shr
dec
lods
sahf
cld
lods
mov
out
sbb
pop
int
in
lock
dec
orl
pop
sbbl
cltd
and
pop
std
jmp
push
xchg
mov
sbb
sbb
pop
and
sbb
mov
mov
inc
testl
inc
add
mov
sub
xchg
idivb
stc
xchg
gs
push
push
pop
nop
sub
arpl
add
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
fisttpll
push
mov
pinsrw
wbinvd
pop
lret
pop
lret
cmc
loop
das
test
or
fadds
mov
cs
in
sbb
lea
insl
pop
bound
xor
and
mov
and
pop
mov
out
and
xchg
call
push
movsb
cmpsl
mov
jbe
insb
jno
push
dec
test
rorl
push
jae
push
sbb
adc
mov
outsb
xchg
sbb
mov
inc
loopne
mov
out
out
les
push
or
or
cli
jmp
mov
cmp
bound
or
xchg
stc
cltd
test
pusha
pop
mov
stos
cmpsl
sub
mov
shrb
pop
and
arpl
cmp
adc
mov
and
cs
xchg
mov
addb
idivb
adcb
mov
daa
fstpt
loopne
cld
out
mov
xor
sbbl
aad
sub
shrl
lret
pop
jbe
or
scas
sbb
add
cwtl
addr16
mov
out
fcmovnb
dec
push
pop
and
add
and
lods
testl
bound
and
inc
in
stos
pop
loop,pn
fwait
cmp
add
or
mov
cmc
xchg
xorb
mov
lcall
addr16
fstp
mov
mov
pop
mov
xchg
loop
push
push
test
andl
mov
sbb
dec
in
or
xor
into
mov
xchg
sbb
cwtl
mov
hlt
nop
mov
stc
push
aad
daa
mov
mov
dec
adc
xchg
lea
pop
aaa
sbb
lret
sbb
js
lahf
loop
ret
jecxz
loop
sub
enter
jne
scas
loop
push
push
jae
pop
orb
push
leave
sub
xlat
xchg
cmpsb
out
popa
mov
gs
push
jns
js
or
xchg
add
cmp
das
xor
shll
lret
mov
andl
inc
mov
mov
call
adc
pushf
mov
test
push
xor
push
xchg
ret
divb
cmp
lea
ja
roll
lahf
and
cmp
inc
out
push
cmp
movsb
dec
in
in
mov
fbstp
in
mov
cmpsl
dec
ret
pop
stos
leave
cli
leave
test
or
cld
fadds
mov
cwtl
push
loope
push
pusha
rcll
jecxz
loope
arpl
push
incl
leave
xchg
lds
hlt
or
sarb
mov
mov
cltd
xchg
out
inc
loope
repnz
pusha
or
xchg
dec
popa
ds
add
xchg
popf
dec
push
inc
aad
mov
mov
insl
cmp
test
incl
jge
pushf
flds
pop
inc
inc
insl
shll
sbb
xchg
push
pop
xor
lds
jl
pop
repz
lds
das
add
ds
rolb
mov
jmp
inc
cmp
mov
into
mov
out
inc
jmp
inc
jmp
aam
shll
and
inc
adc
enter
mov
dec
jne
push
test
push
je
mov
xor
outsl
cs
cltd
inc
mov
xchg
bound
enter
icebp
mov
js
es
jb
cmp
xchg
fs
and
andl
cmp
rcll
mov
cmp
mov
loopne
je
scas
popa
shlb
add
jl
fnsave
sahf
mov
cmp
sbb
mov
popf
dec
std
adc
and
mov
inc
out
out
scas
test
push
push
stc
aaa
ds
inc
mov
movsb
pop
adc
int3
mov
sbbb
clc
int3
cltd
adc
xor
or
arpl
pop
pop
inc
mov
adc
das
push
fiadds
push
daa
ret
sub
dec
mov
ror
dec
int3
ja
jl
pop
mov
adc
cmpl
lock
adc
cwtl
addb
jecxz
pop
roll
add
out
sbb
lea
clc
and
stos
sub
fnstsw
call
fldcw
sub
push
or
xor
pop
fs
stc
mov
adc
in
loop
lret
mov
and
sahf
stos
rcrb
loope
inc
mov
scas
mov
das
subb
movsl
fisubrl
push
call
and
xchg
movsb
dec
mov
jecxz
mov
adc
ja
ficoms
call
aaa
in
jb
mov
data16
lahf
jmp
lods
pop
insl
call
push
in
cmpb
icebp
xchg
lahf
jg
sbb
ljmp
sbb
jae
mov
out
push
push
push
test
push
das
xchg
mull
cmc
cmp
mov
mov
mov
cwtl
cmc
aas
fsubl
mov
outsl
or
jo
pop
jbe
clc
pop
in
xorl
pop
insl
mov
mov
movsb
xchg
imul
mov
movsb
inc
or
ljmp
cmpsl
jne
rcr
sub
jmp
pushf
sub
mov
mov
dec
int
insb
movsb
lds
insb
mov
xchg
xor
fists
imul
xchg
xor
dec
popf
mov
xchg
cwtl
jle
jle
repnz
xchg
jl
ss
push
rclb
push
call
xor
call
das
cmpsl
fstps
add
inc
inc
jmp
or
into
sub
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
xor
pop
xchg
data16
pinsrw
sqrtps
dec
or
cmpsl
xchg
push
xchg
lds
mov
stos
cmp
fwait
hlt
lret
jae
mov
stc
cld
push
xchg
fmul
adc
fbld
negl
ja
cmp
push
addl
rol
push
test
loope
popf
in
ljmp
mov
out
aam
mov
inc
int
mov
jbe
dec
sbb
iret
xorb
cs
mov
call
int
ret
iret
outsl
cmc
aaa
stos
rolw
adc
aam
mov
xchg
mov
aas
sub
jae
enter
and
or
mov
lcall
lds
lret
and
cmp
out
outsb
repz
push
sbb
mov
mov
or
enter
push
roll
ud1
in
and
xchg
aaa
in
out
enter
push
mov
and
inc
addr16
lods
dec
jns
xor
xlat
sub
aam
repz
insl
nop
push
popa
in
or
jbe
sbb
daa
loop
jp
xchg
into
mov
or
daa
enter
js
sub
push
sti
xlat
xchg
popa
lods
cli
popf
cmp
inc
mov
xor
pop
sub
inc
rolb
inc
fs
fbld
pop
xchg
push
cmp
mov
andb
ljmp
and
stos
xchg
fists
push
jg
mov
fildll
and
imul
push
out
push
testl
jo
jb
cmp
xchg
jno
cmc
hlt
lds
xlat
pop
push
mov
icebp
or
cs
rolb
mov
mov
or
mov
xchg
mov
mov
add
data16
lret
fs
or
adc
jnp
mov
popf
and
jne
gs
outsb
into
pop
sub
stc
sarl
gs
sub
outsb
mov
lds
push
icebp
enter
inc
out
lock
xchg
icebp
mov
sub
negl
bound
push
mov
sti
jge
je
jne
stos
frstor
add
and
les
xchg
out
mov
scas
jg
loop
adc
xchg
in
repz
js
xchg
sbb
nop
test
xchg
mov
out
lock
orl
nop
jns
cmpsl
lea
pop
adc
mul
rcrb
icebp
jecxz
inc
push
jg
js
cmpsb
lahf
icebp
add
mov
fucom
psllw
popa
cmp
lock
mov
shll
pop
xchg
xor
jnp
cmpsl
mov
dec
cltd
lods
sub
jg
cmc
mov
sbb
push
in
dec
sbb
cmp
in
push
ljmp
lret
stos
jnp
xor
ss
xor
test
sarb
out
into
mov
imul
in
cmpsl
jbe
or
inc
outsl
and
sub
mov
fsts
inc
inc
mov
cmp
test
cmp
fs
nop
les
mov
and
nop
xor
xchg
or
xor
fstpt
xchg
sub
cmc
sub
xor
pop
mov
and
icebp
xorb
pop
cltd
and
xchg
in
ret
dec
adc
cmp
mov
push
mov
lret
xor
dec
cld
or
in
jbe
into
cli
push
cwtl
psubb
clc
test
pop
pop
or
ds
lahf
out
inc
mov
jnp
dec
mov
add
pop
xlat
xor
popf
jbe
std
xchg
pop
mov
mov
ja
stc
cmpsl
fdivrl
call
push
pop
sbb
fwait
loope
push
sbb
dec
add
in
add
pop
jmp
jmp
jmp
xlat
jmp
mov
es
int3
push
mov
outsb
loope
inc
xlat
jb
test
rorl
mov
shlb
pop
add
push
push
dec
sub
push
mov
pop
mov
push
imul
leave
xchg
insb
shrb
and
mov
dec
adcb
push
gs
popa
dec
inc
dec
add
push
repz
insb
popf
movsl
fldl
cmp
pop
mov
mov
push
mov
lea
je
mov
mov
lret
push
ja
or
mov
popf
mov
jg
xchg
div
push
ljmp
into
jge
in
ret
pop
cli
into
mov
pop
inc
cwtl
cld
adc
cltd
mov
add
lods
popa
or
add
int3
and
into
or
and
push
sub
xor
rclb
lds
cmp
push
mov
sub
adc
cmpl
sub
ficomps
in
mov
test
dec
xchg
mov
push
sub
loop
mov
dec
inc
test
jmp
psubusw
imul
cmc
or
repz
dec
cmp
or
std
or
icebp
xchg
jno
cmpsb
pushf
addr16
stc
nop
fistps
test
mov
pushf
sub
repnz
lock
ljmp
icebp
pop
nop
inc
lods
shl
xor
insl
test
into
mov
push
insl
push
into
nop
test
xchg
dec
adc
jg
xchg
sbb
push
idivl
loope
sahf
jg
int
or
fldt
fisubrl
push
ret
mov
dec
sub
xor
mov
das
cwtl
mov
fmuls
push
push
fcoms
mov
es
mov
xchg
pop
movsl
pop
xlat
xor
adc
mov
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
jne
movsb
js
pushf
pinsrw
punpckhwd
arpl
sbb
jo
loope
add
fidivs
mov
add
dec
ljmp
add
movsl
mov
aas
and
pusha
and
mov
push
mov
leave
cmp
jmp
or
sub
sbb
dec
mov
and
mov
xor
outsl
dec
sti
sub
adc
iret
fidivrl
ret
jns
fistpll
push
ret
jmp
jb
xor
inc
adc
jp
inc
jp
push
pushf
rolb
cwtl
icebp
pop
inc
stos
movsl
and
mov
inc
xchg
daa
push
and
sbb
pop
insb
fwait
ret
cmp
pop
into
or
in
hlt
rclb
or
je
add
mov
or
test
popa
in
add
sub
or
jne
hlt
push
sbbl
pop
cs
jbe
int
cltd
lock
dec
lret
xchg
aam
jns
dec
les
mov
fwait
xchg
pop
pop
jno
and
mov
pop
dec
xor
sbb
cmp
pushf
in
jbe
loope
dec
cmpsl
cs
and
rorl
and
jecxz
addr16
dec
out
mov
add
add
ret
jmp
or
fldenv
inc
adc
push
jnp
aam
inc
xchg
lret
push
call
xchg
inc
aad
pop
into
mov
notb
sub
fs
jmp
jg
jp
insl
out
call
xor
int
lds
adc
daa
push
icebp
and
lods
mov
imulb
rcl
push
call
jae
loopne
mov
xchg
lret
out
std
aam
pop
into
cwtl
lret
cmpsl
or
inc
mov
sbb
orb
cmc
pusha
and
xor
and
sbb
popf
inc
outsb
sbb
mov
repnz
es
sahf
xchg
lahf
idiv
stos
aas
fstpl
aaa
xchg
jp
lea
fsubrs
ret
ss
adc
xchg
mov
outsl
adc
push
out
mov
js
or
jp
icebp
fidivrl
jg
repnz
adc
mov
add
xchg
stos
cld
push
dec
fcompp
xor
shrl
push
ss
sbb
mov
inc
mov
test
sub
lret
imul
cmp
mov
dec
ss
and
aam
outsb
push
jmp
pop
jmp
mov
adc
data16
push
xor
pop
xchg
movzbl
sub
xchg
fists
xor
ret
and
sti
dec
ret
jns
mov
mov
xor
xor
xlat
inc
inc
aad
cmp
fcoms
pop
hlt
sbb
add
push
and
inc
push
loopw
and
aaa
mov
lods
cs
daa
cmp
pusha
xor
pusha
das
das
push
pusha
jle
daa
mov
ret
es
or
push
ret
mov
inc
jnp
mov
add
ljmp
sti
xchg
icebp
cwtl
inc
xor
sti
cli
je
test
int
dec
inc
mov
lcall
add
cltd
fistpll
aam
jmp
cmp
in
in
adc
scas
or
jmp
cmp
cmp
jge
and
cltd
xlat
push
sub
push
test
sub
sub
cmp
in
adc
rorb
enter
and
cltd
push
outsl
sub
loopne
in
add
mov
clc
jo
cmp
dec
dec
adc
lds
shrl
xorl
movsb
aad
in
add
mov
or
mov
and
scas
xor
cmp
sbb
pop
or
cmp
pop
or
or
mov
mov
jmp
xchg
shll
data16
fisubrs
sbb
icebp
xlat
and
cli
repz
test
mov
push
push
repnz
data16
sbb
faddl
add
pop
add
sub
icebp
mov
push
repz
aam
jbe
sbb
movsb
mov
mov
jo
call
xchg
cli
nop
dec
neg
daa
xchg
mov
fcos
icebp
sti
fnstenv
jb
out
xchg
push
sub
jle
dec
add
push
das
mov
push
jns
push
mov
lods
mov
dec
add
jo
ja
pop
xor
jmp
adc
mov
push
push
cmp
jmp
xchg
test
lea
fmul
adc
fnsave
adc
xchg
xor
pop
sbb
or
cmp
pop
jl
and
pop
bswap
int
sbb
mov
sub
jl
xor
cwtl
inc
mov
mov
fistl
loopne
fmuls
lsl
dec
aad
push
mov
push
pop
xorl
xchg
test
mov
scas
xchg
pop
add
divl
inc
shll
cld
lret
or
js
or
mov
in
push
mov
mov
cmp
xchg
repnz
xchg
test
push
sub
mov
lea
aaa
orb
dec
scas
mov
mov
out
test
cld
mov
and
mov
out
movsl
popf
inc
adc
sbb
mov
jge
pop
sub
sbb
js
bound
imul
cmpb
scas
aad
clc
pop
outsb
scas
jge
and
jno
dec
dec
adcw
add
fimuls
add
cli
daa
mov
out
test
xor
sub
clc
ja
popa
pusha
sti
repz
std
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
clc
cld
sti
xchg
add
pandn
push
pop
sbb
fs
sahf
mov
ljmp
jl
push
inc
xor
cmp
adc
in
les
subb
lods
cmp
xor
dec
jge
jne
xchg
in
lea
aam
pop
mov
dec
std
data16
popf
mov
sub
adc
sbb
adc
out
sub
sub
movsb
psubusw
daa
imul
dec
inc
gs
out
hlt
inc
sub
lods
sub
cmp
push
push
out
mov
pop
sahf
sbb
mov
pop
int
xor
fadd
enter
jl
or
mov
addr16
jb
sbb
aaa
add
mov
inc
mov
pop
adc
jmp
cmp
mov
mov
fisubl
and
test
jge
fildl
jle
pusha
mov
pop
and
pushf
push
push
adc
inc
mov
xor
sub
fistl
cmp
adc
xchg
std
lcall
inc
inc
lahf
lret
ret
and
aad
imul
mov
leave
sbb
outsb
sbb
jg
mov
mov
xor
mov
leave
inc
cmp
dec
out
mov
int
add
lock
aam
aaa
pop
add
xor
and
notb
mov
or
xchg
stc
pop
mov
outsb
mov
je
sub
and
mov
pop
jo
push
xor
rorb
mov
xor
sbb
mov
or
inc
in
cld
adc
jle
push
lock
jmp
sbb
mov
pushl
fcoml
test
hlt
add
mulb
xchg
sbb
jae
inc
leave
cwtl
scas
pop
aaa
popa
out
xchg
lahf
aas
mov
cmpb
std
int3
add
int3
adc
stos
out
push
and
mov
int
lcall
ljmp
adc
cmp
movsb
xor
mov
sets
inc
sbb
addr16
fidivs
rcl
test
pop
repnz
lods
notb
pushf
and
sub
jmp
and
xlat
je
out
je
dec
aam
push
in
fnstcw
and
sub
scas
adc
xlat
test
xchg
fildl
cld
xchg
cs
into
push
in
hlt
dec
jp
scas
push
aam
sub
inc
add
add
test
loop
inc
cld
cmpsl
loop
pop
push
fucomip
and
int3
leave
mov
pop
in
ss
pop
in
pusha
dec
push
jo
xlat
clc
or
cmc
les
or
stc
mov
jecxz
leave
addr16
mov
sbbl
dec
jae
jne
and
or
int3
mov
sbb
adc
lret
dec
and
push
or
fsubrl
pusha
add
lcall
data16
ljmp
scas
stc
jbe
aad
std
pusha
jbe
aad
sub
je
jnp
loop
inc
and
sub
adc
out
push
adc
icebp
ret
push
sub
les
push
mov
das
fstl
inc
mov
test
gs
and
inc
shrl
js
jno
push
les
pop
fistps
cmc
out
add
int
stos
xor
add
ss
outsb
inc
and
scas
push
mov
pop
pop
push
cmp
je
scas
pop
jecxz
sbb
je
out
sbb
sub
fldt
call
inc
pop
jnp
jmp
inc
fnstcw
inc
inc
cmp
repz
ss
push
xlat
and
inc
mov
mov
push
inc
lods
das
xor
mov
pushf
inc
sbb
adc
punpcklwd
push
lock
aam
ss
pop
add
icebp
popa
fisttpl
push
in
dec
mov
dec
adc
mov
dec
pop
cmpb
push
jno
movsl
sub
sub
cmp
xor
popf
es
roll
aaa
inc
pop
call
mov
dec
aas
repz
lahf
repz
add
enter
jp
jnp
lret
add
outsl
out
imul
ljmp
jge
stos
pop
mov
sub
xor
xchg
cmp
loope
push
movb
loop
hlt
popa
stos
jle
xchg
jl
movl
in
movsb
cmp
addr16
cmp
js
cwtl
cli
lods
arpl
xor
int3
arpl
popf
repz
xor
mov
inc
mov
sub
aam
jae
lods
dec
cmp
lahf
repnz
and
mov
push
jle,pt
adcb
outsb
fdiv
or
mov
cmc
cmp
ja
sbb
icebp
fsts
ucomiss
push
stc
hlt
inc
aam
jo
sub
push
push
inc
int3
mov
cmp
jmp
and
xchg
inc
adc
lcall
mov
push
mull
sbb
cmpl
iret
mov
sub
cmc
loop
sub
sbb
loope
scas
clc
xor
fdivrp
ja
in
icebp
sbb
jl
dec
push
ret
xchg
add
inc
mov
das
inc
shll
mov
push
cmp
jp
mov
push
popa
and
test
sub
cmpsb
cmp
adc
loope
fs
adc
cmpsl
jo
sbb
pop
cmp
flds
mov
call
cmp
int3
mov
and
int3
stc
push
mov
dec
push
cmp
adc
lock
loopne
sahf
fcoml
push
jl
jbe
int3
sub
or
inc
pushf
mov
out
xor
decb
into
jo
add
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
mov
pinsrw
pcmpgtb
add
jmp
rep
pop
outsb
in
fld
and
adc
and
inc
push
push
or
aaa
pushf
pop
xor
xor
lea
lds
pop
pop
push
shrl
inc
adc
cs
cmpb
or
xchg
in
jecxz
jmp
into
mov
mov
and
movsb
jae
and
cmpsb
sub
fwait
rclb
cmpl
push
cli
mov
jne
push
ds
shr
lock
pop
scas
or
jno
mov
mov
test
push
arpl
mov
andb
sbb
mov
loopne
in
dec
les
inc
test
outsb
jb
std
out
jp
mov
mov
sub
stos
scas
mov
xor
jecxz
cltd
dec
push
xchg
movsb
jns
ret
pop
repz
push
mov
sub
stos
push
aad
jb
mov
test
das
nop
nop
push
jb
movsb
ja
adc
mov
or
jae
cmpsl
stos
add
push
aas
aaa
dec
popf
and
adcl
in
cmp
xor
jmp
cld
sbb
cmp
jecxz
xor
and
popf
repz
mov
mov
or
adc
cmp
je
imul
stos
mov
pop
scas
add
pushf
jnp
sbb
pop
and
fstpl
xor
out
cmpl
js
and
inc
pop
pop
mov
out
aad
add
xor
test
adc
imul
ja
dec
mov
dec
enter
and
or
test
or
or
mov
pusha
lea
pop
imul
mov
test
xor
test
or
fistl
mov
pop
adc
shlb
mov
jl
dec
or
mov
cmp
rolb
adc
sbb
cmp
ja
les
jg
sbb
into
fld
jle
ljmp
dec
mov
mov
cs
mov
std
test
outsb
add
add
icebp
jmp
adc
adc
repnz
lahf
pop
xchg
adc
cld
mov
gs
pop
inc
push
dec
imul
pop
aad
mov
cmp
out
jbe
addb
call
cmc
sbb
std
pop
mov
and
lret
mov
adc
mov
dec
rcll
lods
shrb
mov
fwait
dec
mov
lods
or
pop
movsl
lcall
or
data16
mov
push
add
or
or
or
ret
fsts
or
rorl
or
push
mov
pop
stos
push
adc
jo
scas
je
dec
dec
and
inc
add
shlb
shlb
gs
daa
cmp
dec
pop
ss
insl
ss
cs
pop
pop
aas
test
mul
sarl
mov
xchg
mov
loope
cmpl
aad
push
mov
inc
mov
cmc
push
insl
lds
pop
adc
enter
and
addr16
jl
adcl
or
jg
testb
xlat
xchg
lods
or
fimuls
inc
scas
adc
dec
sub
pop
aad
jmp
jno
out
mov
mov
sub
mov
enter
xor
hlt
test
out
push
enter
mov
jo
stc
jo
sub
ljmp
lahf
test
push
and
fisubrl
enter
cmp
jno
mov
fidivs
sbb
mov
ficoml
lcall
std
mov
sarl
aad
fiaddl
mov
aam
rcrb
loopne
or
or
js
or
mov
jge
jmp
clc
in
lret
xchg
aas
insl
xor
cmpsb
in
cmp
lea
leave
mov
mov
and
adc
lods
adc
enter
or
lds
mov
out
in
jmp
pop
cs
and
push
and
in
stc
inc
stos
data16
or
add
rorl
insb
sub
push
or
cmpsl
mov
shrl
aam
push
clc
cs
into
aam
add
adc
xchg
jb
mov
pusha
xchg
pushf
sub
cld
jmp
mov
mov
add
or
sbb
mov
in
cmp
inc
dec
and
and
xchg
xor
out
mov
insl
ficoms
dec
movsb
mov
jl
mov
lods
mov
dec
lahf
mov
fnclex
mov
push
xlat
pop
sbb
out
lcall
inc
dec
daa
je,pt
push
popa
rclb
mov
xchg
pop
add
xor
adc
or
hlt
pusha
dec
push
sub
test
xchg
xchg
mov
mov
subb
push
fcoms
sti
cmpb
addl
movsl
cmp
frstor
movsl
cmp
or
mov
ja
and
push
add
sub
lret
pop
push
divl
xor
mov
je
scas
stc
dec
shll
xchg
pop
cmpsb
ds
stc
cmp
sar
popa
pushl
stos
gs
sar
mov
pop
dec
jp
negl
push
or
push
inc
les
xlat
popa
nop
out
cmp
loope
xlat
xchg
dec
dec
xlat
sub
ljmp
and
xchg
into
dec
adc
lods
movsl
cmc
test
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
jg
sub
js
add
addr16
data16
cmp
dec
enter
popf
shll
add
cmp
cmpsl
cmpsl
adc
gs
mov
jbe
xor
inc
gs
xchg
lods
jbe
cltd
test
inc
ljmp
xor
dec
jns
lods
adc
int3
call
push
dec
dec
pop
jb
jmp
lock
and
jge
pusha
rorl
sahf
imul
or
jne
dec
jns
or
dec
pusha
hlt
sbb
insb
adc
aaa
inc
cld
jp
popf
ss
jmp
ret
cmpsl
add
ja
scas
fwait
test
nop
pop
repnz
inc
and
lret
ficomps
adc
cmp
cmp
xchg
inc
insb
shl
mov
pop
loopne
fildl
fs
aam
ret
xchg
xorb
lea
inc
dec
clc
mov
cmc
pop
xchg
je
das
push
imul
lret
mov
mov
mov
jae
scas
jmp
dec
adc
add
stos
outsb
xchg
ds
pop
or
adc
in
or
repz
daa
or
test
jns
push
std
daa
push
cmp
xchg
sbb
out
mov
xor
jne
fdivrs
pop
push
stos
stc
mov
jbe
aam
adc
dec
dec
sbb
xchg
pop
sbb
cld
outsb
rcrl
and
sqrtps
cmp
imul
inc
cld
inc
mov
test
ret
bound
lods
shll
jns
or
rclb
and
pushf
test
int
dec
cli
jb
or
or
mov
push
fists
adc
std
add
adc
ja
fstpt
fidivl
cmp
or
dec
or
sbb
mov
adc
paddd
pop
mov
jp
ja
jae
xchg
ljmp
ja
imul
pushl
or
decl
mov
inc
jae
sbb
and
cmp
jnp
enter
sbb
pop
xor
in
add
push
cmp
dec
pop
std
in
flds
movsb
or
xor
inc
aad
push
jns
xor
mov
mov
js
stc
push
aaa
ror
dec
xchg
mov
mov
sbb
adc
clc
sti
jnp
xor
or
pop
mov
xchg
add
arpl
shrl
cltd
cmc
xor
scas
test
sub
pusha
nop
push
or
pusha
test
pusha
xor
out
jnp
js
and
jne
lcall
out
cmp
int
push
aad
rol
shlb
repnz
popf
fisttpll
xchg
into
popa
ret
push
sti
dec
mov
push
add
xor
int
cmpsb
jp
pop
dec
sub
add
nop
sti
pop
xchg
mov
adc
jb
daa
and
mov
xor
push
bound
movsl
inc
cmp
or
jg
push
cltd
lods
pop
mov
mov
push
cli
jl
push
push
mov
add
mov
fidivrs
push
adc
fs
test
add
jp
repz
das
push
fidivl
movsb
sub
call
fcompl
jmp
test
iret
mov
in
es
mov
mov
fnstsw
pop
stos
cmp
or
loope
in
mov
mov
push
in
das
xchg
mov
je
dec
mov
outsl
sqrtps
sub
cmp
xchg
jp
push
mov
aas
jecxz
cld
xchg
sbb
or
jp
lea
jns
insb
cmp
outsl
sub
cmp
cmc
jmp
adc
ss
dec
ja
xchg
or
subl
push
insl
ficomps
xchg
jns
out
in
mov
lock
popf
fidivrs
push
mov
mov
lea
push
mov
adc
repz
ljmp
dec
addr16
daa
sub
sub
mov
adc
int3
jmp
mov
push
cmpsb
outsl
movsl
hlt
push
mov
pop
dec
ret
jle
jge
xor
cmp
or
cmp
mov
xchg
sub
add
lods
fldt
aas
test
mov
or
and
ds
mov
xchg
mov
roll
sub
push
xchg
fbstp
jp
add
shr
pop
aam
rolb
xlat
adc
test
cmp
leave
push
clc
xor
nop
lahf
or
ljmp
push
sbb
mov
jle
movb
xor
jno
cs
loopne
into
mov
or
cmp
dec
cli
sbb
mov
pop
jns
mov
cmpb
cmc
stos
sub
outsl
stos
fmuls
scas
mov
lods
adc
or
stos
fidivrl
aad
sbb
movsb
ret
fwait
out
push
pop
les
scas
mov
and
xchg
xchg
sub
daa
cmpsl
pop
loop
add
mov
shrl
and
cmp
sbb
mov
les
movsl
rcrl
lret
dec
and
cmp
xlat
out
test
addb
xor
pop
pop
mov
popa
int3
psrlq
fldl
bound
cmp
mov
add
lods
std
inc
cld
lahf
cmp
push
mov
jp
inc
ret
sti
ss
test
dec
cwtl
jp
out
add
push
out
je
std
pop
lcall
aas
mov
inc
leave
pop
lret
std
into
lret
into
jbe
adc
xor
add
jmp
and
lret
mov
arpl
ret
mull
mov
push
cmp
clc
mov
inc
in
je
jge
sub
push
xor
jge
xchg
sarb
daa
jae
cmp
mov
aad
rolb
pop
adc
pop
mov
loop
dec
mov
adc
mov
add
jp
leave
jl
push
ss
cmp
xchg
add
hlt
lea
jne
xor
loope
iret
push
mov
ret
pop
bound
aam
and
inc
jmp
xchg
es
scas
dec
dec
bound
or
ret
xor
pop
hlt
pop
jl
loopne
scas
imul
insl
in
jl
and
pop
sti
mov
loop
loop
mov
movsl
pop
out
jae
push
push
sub
xor
dec
mov
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
out
sbb
repz
push
imul
pop
pop
movsl
xchg
mov
into
jns
pushf
jl
and
or
jge
or
xchg
scas
push
and
cmpl
sub
mov
dec
push
xchg
repz
add
in
jne
mov
jecxz
cmp
xchg
push
dec
sub
mov
leave
add
jbe
idiv
dec
push
mov
ret
sbb
lea
cld
das
jle
mov
cmp
aad
test
lret
cmpsl
xchg
sub
push
mov
andb
iret
and
cli
jae
add
pop
cmp
rep
sbb
lods
mov
pop
mov
je
mov
mov
xorl
nop
ret
fnsave
shrb
test
filds
jnp
pop
jl
lock
faddl
fmull
jno
cmpsl
repnz
push
pop
fdivr
xchg
subb
popf
push
out
jge
fisubl
movsb
mov
arpl
add
leave
mov
xchg
mov
inc
daa
fwait
adc
lret
insl
cmp
into
mov
xor
cwtl
mov
push
add
in
jnp
pop
bound
je
addb
mov
in
lods
hlt
sbb
sbb
jb
adc
or
xor
mov
mov
adc
sub
arpl
jl
dec
mov
mov
cmpsb
lret
cmp
push
or
stos
push
lret
aas
fadds
mov
add
cmovl
push
cs
enter
mov
sbb
or
pop
cmpsl
data16
push
push
xor
loop
ja
movsl
fwait
inc
lods
mov
shrb
sahf
aad
xchg
aaa
xorl
and
stos
jnp
push
push
mov
pushw
jbe
xchg
imul
fdiv
sub
push
sbb
pop
into
mov
popf
movsb
int3
and
loop
fcmovnbe
decl
fwait
xor
xor
mov
incb
shll
jmp
enter
jae
lcall
pop
movd
xchg
inc
push
xlat
inc
scas
mov
pop
sahf
jbe
xorb
lods
sahf
outsb
rorb
cli
xchg
pop
movsl
xchg
adc
adc
inc
cmp
out
inc
xchg
mov
hlt
je
jmp
mov
sbb
dec
push
jl
cmp
int3
aad
xchg
adc
mov
or
lahf
loope
dec
lcall
lock
xchg
shrb
fcoml
out
adc
mov
and
movsl
xor
or
sbb
cmpb
cwtl
adc
jp
rolb
dec
sub
in
and
xchg
cli
push
cli
adc
js
stc
and
fstps
xchg
jnp
xchg
mov
xor
pop
pop
testb
push
adc
lret
xchg
ror
jmp
aaa
lret
mov
aaa
test
push
adc
nop
sub
mov
nop
imul
lahf
xchg
clc
mov
mov
sti
and
mov
cmp
test
mov
add
es
jns
dec
sub
push
popa
mov
xorl
pop
loopne
daa
je
mov
pop
out
xor
out
or
mov
out
loopne
mov
loopne
inc
shll
repnz
pop
jo
rclb
mov
fs
pop
sub
mov
cmp
dec
stos
out
rcrl
ds
push
andl
adc
dec
test
int
fmull
mov
cmp
dec
sbb
jnp
leave
mov
ds
adc
test
inc
popf
pop
aas
outsb
xor
add
ret
cwtl
inc
mov
and
jns
sub
loopne
mov
adc
xchg
push
mov
aas
fstps
cmp
mov
icebp
pop
xchg
sbb
fcmovne
adc
sbb
mov
mov
sahf
mov
imul
adc
inc
mov
clc
hlt
nop
imul
cwtl
dec
stc
mov
negl
in
add
inc
xlat
push
lret
ss
filds
ja
adc
cmpsb
push
out
jb
les
cmc
sub
notb
push
mov
sti
and
stos
sub
fimull
mov
test
add
mov
mov
dec
mov
xorl
push
mov
xor
mov
cmpsb
and
adc
scas
or
shll
popa
bound
or
inc
xchg
mov
push
cmc
xchg
dec
loop
cmp
xchg
xor
shll
test
push
mov
test
dec
xchg
sarb
fxtract
inc
cmp
inc
dec
mov
xchg
into
adc
mov
mov
cwtl
push
sbb
incl
test
ret
rcrb
pop
sub
pop
ret
xor
loopne
fists
imul
jb
orb
lcall
mov
dec
push
and
insb
nop
push
jbe
fs
enter
cmp
mov
imul
lahf
in
push
mov
and
sub
xabort
inc
sbb
inc
movsl
sti
sbb
ret
and
jge
lcall
mov
xlat
and
fs
jecxz
das
and
push
stc
std
cli
or
scas
pop
fsubrs
xor
inc
or
and
xlat
sti
ret
xor
xor
and
repnz
int
pop
data16
loopne
popa
lahf
test
je
scas
mov
xchg
imul
xor
push
std
adc
ljmp
insl
rolb
out
rclb
sahf
int3
or
pop
jge
mov
push
ficoml
jno
or
cld
lret
clc
test
jp
in
test
out
popa
jno
cmp
out
xchg
stc
cmp
out
sub
fsubrl
aaa
imul
cmpsl
clc
dec
gs
ret
loope
mov
out
mov
sub
stos
mov
int3
jmp
mov
mov
aam
mov
lret
mov
and
or
xchg
scas
xchg
mov
sbb
loop
mov
xchg
sbb
add
cmp
mov
out
cltd
cmp
lea
push
stos
clc
cmc
mov
cltd
jns
movb
xlat
loope
pop
mov
stos
mov
leave
mov
and
cld
mov
imul
xchg
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
xor
push
stos
pop
add
pop
mov
adc
xchg
bound
adc
or
shr
pop
sti
jnp
aad
mov
hlt
sub
movsl
push
rclb
mov
lret
test
mov
nop
mov
and
adc
xor
dec
lods
xchg
xchg
cli
sti
inc
xlat
jle
sahf
ds
leave
scas
or
pop
xor
lcall
mov
cltd
fcmove
add
pop
mov
dec
negl
pushf
adc
scas
mov
fmulp
push
or
adc
js
std
inc
jmp
sarb
andb
add
cmp
dec
push
bswap
sbb
sarb
outsl
xchg
add
push
das
pop
adc
fwait
pop
mov
fwait
jle
pop
lcall
sub
inc
out
jge
inc
into
xorb
mov
imul
in
lods
icebp
mov
cmpsl
or
or
loopne
xor
or
jl
lret
pop
das
push
push
enter
nop
xchg
fdivrp
insl
stos
loop
cmp
add
or
adc
shll
xchg
es
jno
icebp
in
imul
pop
or
push
les
mov
les
and
inc
sub
fcmovne
in
popa
jo
out
or
loopne
jbe
add
test
mov
push
stos
sahf
stc
aaa
in
lret
fdivrs
push
jecxz
stos
xchg
push
xchg
push
mov
xchg
adc
xchg
and
adc
fs
push
outsb
dec
xlat
rcll
mov
lods
scas
pop
jmp
push
or
pop
mov
jg
int
iret
push
fwait
cld
ret
adc
ljmp
rcll
inc
sbb
insl
out
xor
aas
xchg
inc
pop
push
shlb
les
lods
cmpl
js
xchg
pcmpgtw
jnp
int
xchg
fldenv
lcall
pop
loop
arpl
mov
inc
mov
rcl
popf
subb
adc
aas
icebp
lods
icebp
test
inc
mov
mov
pop
pop
int3
add
cmpsb
std
sbb
sub
lock
pop
and
mov
dec
imul
out
cmp
insb
enter
sbb
outsl
dec
mov
les
dec
sub
repz
mov
pop
xchg
adc
pop
xchg
mov
repnz
jnp
adc
ret
add
sahf
sbb
mov
das
cmpsl
ret
rcrl
or
lea
and
mov
out
enter
push
xor
loopne
sub
dec
call
mov
xchg
jecxz
pop
xchg
xchg
cmp
fldt
outsl
ds
jg
imul
push
mov
pop
inc
xlat
mov
mov
jp
enter
mov
dec
or
loope
jnp
mov
adc
int3
mov
xlat
inc
mov
push
iret
int3
andb
or
enter
hlt
mov
mov
and
add
jle
lea
jmp
add
rcr
lea
cmp
xchg
adc
test
inc
addr16
push
jne
add
mov
rcrl
sbb
popf
cmp
testb
inc
mov
mulb
jne
xchg
ret
or
cmp
sub
cld
movsl
int3
inc
movsl
mov
lds
lahf
out
fmul
daa
push
sbb
push
inc
rolb
addr16
inc
inc
jl
fstpt
jecxz
push
ret
sub
aad
mov
pop
cmp
sti
xchg
mov
xor
ffree
push
ja
je
cmpsl
fidivrs
cmp
ret
testb
sub
lahf
cmp
stos
aad
pop
shrb
sti
push
hlt
sbb
xchg
xor
mov
push
dec
xchg
in
call
cmpsl
dec
push
outsb
xchg
fwait
push
cmpsb
cli
shlb
and
fscale
mov
push
jle
or
cli
icebp
mov
rcrb
aaa
pop
ror
lock
das
out
rcll
ret
xor
iret
jnp
mov
xchg
push
cmp
pop
cmp
repnz
xor
cld
repnz
bound
sahf
adc
xor
fmull
out
fisubl
mov
xchg
std
cltd
daa
add
cmp
pushf
and
loopne
icebp
xchg
fcompl
cmpl
stos
push
ds
or
imull
sbb
sub
pop
fidivs
sti
stos
dec
jmp
loope
mov
push
insl
std
cs
fwait
mov
in
push
stos
inc
push
ljmp
movsb
jge
sbb
aam
in
jecxz
mov
or
out
nop
lds
in
or
repz
cmp
dec
fisubrl
loope
ficoms
jo
ja
pop
cld
adc
scas
dec
popa
cmp
or
inc
cld
cmp
dec
addr16
mov
addr16
add
push
add
sub
xor
sar
inc
fs
call
sbb
loopne
rclb
push
test
imul
int3
mov
js
fs
outsl
push
rolb
cmpsl
insb
movsb
cmp
add
xchg
xlat
in
pop
dec
je
cltd
fldcw
cmp
or
subb
push
pusha
enter
lods
call
cld
arpl
sbb
stos
adc
jnp
out
push
sahf
lcall
adc
push
jo
shl
cmp
out
or
push
sub
rclb
iret
jbe
js
rcll
and
sahf
adc
lcall
xor
scas
mov
xor
pop
jbe
or
mov
cltd
scas
mov
push
sub
loope
icebp
addb
cli
fcoms
mov
push
xor
test
sbb
mov
mov
neg
and
outsl
orl
cltd
add
push
xchg
cltd
jne
dec
pushl
into
lahf
test
mov
enter
faddl
mov
sbb
mov
adc
xchg
mov
xor
imul
insb
cmpsl
dec
jnp
jo
out
loope
ja
popa
dec
add
je
cmp
hlt
inc
jns
rcr
lea
sbb
arpl
das
lret
scas
mov
int
adc
sub
dec
enter
testl
lds
jnp
pop
movl
mov
add
dec
sub
popa
or
or
out
mov
cmc
pop
outsl
adc
or
adc
xor
stc
roll
fildl
add
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
and
xchg
add
in
pop
cmp
cmp
repnz
xor
inc
sub
mov
or
lods
je
in
or
call
cmp
enter
adc
and
and
pop
adc
iret
dec
cmp
dec
bswap
push
mov
out
repnz
jle
outsb
ja
leave
xchg
jmp
std
ja
xor
cmpsb
add
out
mov
sbb
cwtd
cli
enter
mov
and
sub
sbb
ret
mov
mov
enter
aaa
out
aaa
inc
adc
mov
cmpl
pop
adc
std
dec
ljmp
shll
gs
mov
fcompl
hlt
cli
xor
mov
adc
push
imul
in
xchg
adc
aas
gs
movb
rcrb
dec
sub
dec
mov
cltd
mov
adc
fstp
das
sbb
stc
ljmp
rorl
dec
inc
loopne
and
jmp
mov
xlat
jo
push
test
jae
sub
cmp
sub
out
jo
and
adc
and
pop
mov
dec
cmpsb
test
aam
mov
ret
jl
lret
xchg
sub
mov
push
mov
in
cmp
push
jge
imul
cwtl
pop
push
ja
jae
sub
mov
in
bnd
push
xlat
push
les
push
lea
mov
test
out
popf
add
add
repz
push
aad
xchg
out
inc
fstpl
sub
jg
pop
sahf
push
cmp
add
sbb
push
mov
fnstsw
and
int
jp
fwait
fwait
popa
cld
jle
inc
pop
jo
ret
add
cmc
mov
xchg
jle
loopne
dec
adc
repnz
dec
clc
cmpl
pop
sbb
daa
push
mov
stos
je
sahf
sub
push
test
xchg
xor
add
cmpsb
inc
pop
or
adc
mov
in
jbe
mov
loop
sub
fstps
and
jmp
je
lret
scas
arpl
sbb
movsl
inc
sub
insb
or
mov
std
insb
out
jmp
aaa
add
test
int3
mov
fdiv
test
rcll
jbe
mov
cmpsl
jmp
lods
dec
mov
add
cmp
pop
ficoms
pop
nop
or
pop
ret
xor
push
jle
mov
ljmp
mov
sbb
mov
in
pop
or
aad
das
cmpl
adc
dec
mov
out
sbb
mov
loop
dec
leave
sub
ss
sub
test
ds
mov
jnp
rol
and
lds
and
sub
add
adc
flds
push
or
and
dec
in
mov
xchg
sub
rcll
cld
jno
fbld
xor
cmc
out
arpl
mov
pop
fists
aam
mov
cmpsl
mov
mov
ror
adc
call
dec
in
and
movsb
jecxz
pop
sub
xor
jge
js
das
int3
push
sub
fwait
adc
inc
pop
rcll
int3
add
out
cmpsb
imul
ficomps
sti
adc
cltd
sbb
and
cmp
dec
cmpl
push
mov
pop
dec
mull
cmp
mov
in
in
out
sbb
dec
and
sub
out
xchg
punpcklbw
adc
mov
rclb
sbb
cmpsb
or
je
pop
push
pop
fistpll
mov
pop
sbb
into
ret
add
in
mov
pushf
xor
cmp
aas
addr16
pop
hlt
lret
xor
sahf
dec
call
adc
xchg
add
popa
fistps
mov
ss
das
and
jl
loope
testb
std
adc
out
mov
sahf
sub
mov
int
mov
mov
orl
mov
stos
dec
add
ss
jl
jge
gs
adc
or
jne
xor
adc
inc
pop
inc
jmp
xchg
inc
jmp
or
arpl
ljmp
popa
fisubrs
mov
mov
mov
sub
lcall
lret
ret
pop
stos
int3
jle
bswap
mov
jbe
scas
xchg
sbb
lock
push
add
jg
subb
dec
mov
dec
dec
and
sti
int
js
push
pop
mov
mov
icebp
xchg
repnz
dec
mov
xor
jns
cmp
out
jae
shlb
xor
dec
and
push
mov
adc
insb
fs
add
inc
hlt
mov
inc
pop
jns
mov
cmpsb
fimuls
sbb
dec
or
jge
xor
and
inc
or
movsl
adc
ja
es
push
sbb
jnp
pop
mov
pop
int
out
dec
stos
sub
add
jg
dec
or
fildl
jge
cmpsb
sbb
movsb
mov
mov
mov
inc
mov
aad
loopne
or
fs
and
adc
jmp
mov
jmp
cmpsb
popa
leave
je
shl
add
pushf
push
enter
sbb
jmp
mov
lcall
and
add
pop
mov
xor
pop
ljmp
jbe
mov
pop
sub
and
mov
pop
xor
test
fnstenv
mov
testb
push
inc
mov
pop
and
dec
mov
push
push
insb
cld
ss
xor
push
pop
mov
xchg
out
and
int
imul
and
ja
push
js
shlb
sub
in
adc
or
popf
or
stc
popf
mov
into
cmp
mov
jle
add
rclb
sbb
insb
loop
call
jmp
mov
xor
push
pop
add
mov
jle
or
cmp
mov
and
sub
pushf
cmpsb
clc
and
dec
repz
mov
push
jo
push
sub
push
cmpsb
fiaddl
lahf
lcall
icebp
popf
test
ja
rorb
scas
adc
dec
and
out
test
ljmp
xchg
jae
repnz
pop
dec
or
cmp
pusha
mov
std
loope
test
jecxz
xor
in
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
loop
push
cs
add
fildll
cmp
popa
js
push
jae
inc
stos
xchg
es
sub
ds
subb
push
mov
or
lods
mov
cmp
or
je
jle
jl
mov
mov
addr16
fidivs
jae
mov
dec
sbb
cmp
or
icebp
mov
mov
xor
sbb
insl
jo
mov
mov
mov
cld
mov
mov
xor
inc
xchg
movsb
stos
cmpsb
mov
sbbl
add
sub
data16
jle
cmpsl
jmp
adcl
sbb
jmp
sbb
jne
icebp
jb
adc
test
repz
cmp
jb
out
pop
mov
icebp
icebp
mov
sub
push
push
test
adc
pop
dec
and
mov
out
or
imul
mov
add
pop
mov
sbb
or
mov
sbb
adc
imul
sbb
or
mov
or
mov
ljmp
ret
roll
in
hlt
xchg
aad
or
mov
mov
lock
inc
sbb
sbb
lock
ret
adc
add
roll
loop
mov
stc
pushf
addr16
test
adcl
leave
in
sub
jp
xchg
mov
xchg
test
and
xor
xchg
inc
pop
push
cmp
inc
into
jns
aas
push
ret
mov
push
ja
pop
adc
xchg
mov
pushf
jp
pop
das
test
pop
adc
mov
out
jle
xor
add
sub
testl
sbb
sti
insl
dec
stos
cmp
fdivl
and
xchg
idivb
mov
loopne
pusha
inc
rcl
sub
scas
xor
push
push
lret
jg
movsl
dec
adc
test
das
rcrl
push
xor
dec
aad
cmc
xchg
mov
clc
ljmp
fwait
mov
stc
jb
mov
mov
mov
sar
arpl
pusha
ljmp
add
inc
adc
ss
pusha
loop
insb
push
rcll
test
push
jp,pn
or
push
pop
popf
pop
mov
fldenv
jge
stc
mov
pop
mov
sti
sbbb
popf
inc
adc
inc
imul
pop
sub
je
jno
std
lds
add
mov
test
jl
xor
inc
push
mov
rcll
inc
stc
lods
add
push
cli
xchg
mov
fdivrl
and
mov
adc
mov
test
out
mov
stc
jns
jp
cmc
push
lahf
ljmp
testl
xchg
out
ljmp
pop
mov
scas
mov
pop
jmp
cmp
jno
ds
pop
int
iret
outsb
fwait
jl
bound
push
iret
jno
xorl
sub
outsb
cmp
jns
add
ret
jp
xchg
icebp
cltd
lock
sbb
insl
sti
xchg
mov
dec
cwtl
std
pop
stos
fidivrs
sbb
stos
orb
jle
nop
outsb
fldcw
aad
mov
sub
inc
sar
dec
sti
and
cmp
pop
pop
xchg
ljmp
test
cli
inc
imul
shrb
je
pop
ret
lods
xchg
xor
out
fwait
ret
test
test
stc
out
push
lret
mov
inc
xor
fidivrl
outsb
or
addb
test
mov
gs
divb
mov
lds
mov
mov
jl
shl
adc
or
and
dec
or
hlt
pop
inc
push
jl
into
or
int3
jmp
xor
outsb
cli
sarl
push
and
mov
fdivr
xchg
imul
shrl
sub
icebp
in
popa
out
andb
mov
jno
cmp
mov
fs
add
and
fwait
les
mov
mov
daa
scas
data16
jp
stos
shl
and
cmpsb
inc
sbb
pop
xor
roll
repnz
mov
int3
aam
jp
decb
cld
or
lods
xlat
jl
xchg
arpl
in
xor
bound
clc
jmp
xchg
pop
pop
repnz
lret
out
out
sahf
or
mov
inc
pop
inc
pop
cltd
sbb
cmp
add
inc
jl
push
fs
jecxz
lahf
and
ss
dec
xor
push
in
repz
adc
cmpsl
inc
scas
pop
std
loope
xor
mov
iret
jbe
jne
mov
push
mov
pop
rcl
test
jno
push
sub
pop
scas
mov
popf
mov
mov
stc
jp
push
xor
mov
sbb
fisttpll
lods
xlat
xor
pop
mov
cmpsl
out
ret
out
mov
add
repz
dec
mov
hlt
sub
cmpxchg
jb
and
outsb
shr
jnp
sub
arpl
arpl
push
inc
mov
xchg
stos
inc
mov
cmc
xor
dec
sahf
mov
jmp
out
outsl
or
mov
repnz
push
sub
sarl
lcall
xchg
sbb
jns
cmp
sbb
sbb
pop
sbb
roll
cli
ds
xlat
adc
loop
test
hlt
xor
pusha
repz
jp
stos
movsb
dec
push
clc
fwait
add
dec
mov
mov
cli
mov
cmp
ja
fcomip
loopne
sub
sub
sarb
mov
clc
jno
add
imul
pop
leave
push
sub
je
addr16
scas
xchg
loop
mov
dec
in
jge
jbe
xchg
call
mov
adc
push
inc
xchg
xchg
or
jnp
xor
out
sbb
add
cmp
xchg
sti
imull
mov
test
xchg
cmp
sub
mov
hlt
addr16
js
arpl
stc
mov
push
jecxz
das
cmp
cmp
repz
dec
hlt
xchg
arpl
insl
notl
idivl
jp
inc
jno
and
cld
push
dec
jge
sbbl
sub
dec
not
sbb
jnp
add
stos
xchg
sbb
fwait
inc
xor
lods
jecxz
mov
sbb
dec
aam
stos
sub
pop
xchg
pop
or
jno
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
push
es
in
inc
add
stos
cmpb
mov
fsubr
and
mov
fsubrl
pop
jo
das
pusha
mov
mov
mov
fcomi
xchg
sbb
dec
mov
or
sbb
jmp
insl
jecxz
sarl
clc
std
dec
test
adc
push
xor
cmpsb
jg
sub
mov
scas
sub
popa
fldenv
sub
pop
mov
xchg
lahf
repnz
mov
es
fdivrl
test
imul
adc
into
cmp
sbb
push
aas
mov
fmul
push
movsl
lret
test
js
lock
in
pushf
push
shrl
or
xchg
pop
test
inc
in
lret
lahf
xchg
lret
movsb
das
fwait
sbb
dec
hlt
mov
frstpm(287
pop
ds
xchg
shl
or
vmovq
lahf
testb
cmp
inc
inc
xchg
dec
jecxz
dec
repnz
dec
add
ja
pushf
test
cvtps2pi
imul
xchg
cmp
push
mov
mov
or
inc
in
add
lahf
cmp
and
jp
cmpsl
bound
sbb
clc
push
mov
jbe
out
inc
icebp
or
mov
lahf
pop
in
xchg
adc
mov
adc
and
sbb
xor
inc
pusha
inc
call
push
aas
jno
sahf
repz
in
add
imul
movl
lock
rcl
lock
fiadds
ret
ret
mov
pop
jle
add
mov
xchg
mov
xor
jp
push
adc
pusha
add
shrb
andl
adc
pushf
push
push
adc
sbb
les
ds
add
or
adc
repnz
push
pop
jp
sarl
cs
repnz
mov
add
mov
icebp
lret
rcrl
bound
adc
out
scas
mov
cltd
xchg
loope
cmpsl
cmp
and
push
mov
fs
sbb
inc
adc
ljmp
xor
push
push
sbb
mov
push
mov
push
and
xlat
outsl
ret
push
iret
xor
cs
cmc
ror
dec
and
xor
sbb
sub
int
jnp
jecxz
incb
sbb
and
dec
repz
mov
mov
mov
add
jns
adc
out
in
out
sbbb
add
in
bound
mov
mov
adc
repz
fwait
dec
sub
in
out
and
repnz
adc
inc
adc
or
ss
jmp
and
pop
shrl
fldenv
cmp
mov
jne
sub
inc
paddb
lahf
ss
cwtl
repnz
push
sahf
mov
sub
call
add
int
call
or
lret
inc
gs
pop
xlat
shr
inc
pop
cmc
jg
test
xchg
or
cmpl
xchg
jnp
xchg
pop
inc
adc
out
xchg
and
jno
cli
sbb
sti
sbb
and
mov
mov
inc
dec
xor
std
adc
gs
dec
and
add
dec
sbb
xor
adc
cmp
xorb
pop
mov
sarb
ljmp
cmp
loop
push
mov
pop
mov
sbb
push
fs
adc
mov
pop
pop
rorl
dec
mov
push
cmc
mov
mov
sbb
push
std
push
cli
push
adc
cwtl
shl
cmp
dec
in
jp
fs
pushf
xchg
jb
scas
jns
jo
mov
pop
std
mov
ljmp
jmp
hlt
push
lcall
stos
sbb
std
inc
pop
lahf
jbe
inc
mov
icebp
add
pop
jno
mov
pop
imul
aaa
into
in
js
dec
push
sbb
outsl
sub
dec
cmpsl
mov
add
repz
or
popa
jbe
sahf
loope
and
and
les
sub
mov
mov
ret
pusha
xchg
lret
sar
iret
iret
adc
frstor
xor
pop
scas
fwait
leave
pop
adc
mov
adc
mov
mov
aad
push
sbb
scas
mulb
mov
mov
sahf
les
sub
pop
push
dec
outsl
sub
cwtl
mov
pop
sub
and
xchg
adc
lods
pop
add
aad
cmova
xor
pusha
dec
add
aad
dec
sbb
and
cld
xchg
jecxz
aad
xchg
mov
lock
push
in
mov
pop
ds
jmp
sbb
adc
inc
loop
sub
sub
jne
movl
mov
pop
push
cmp
pop
cmp
jle
outsl
jle
mov
pop
mov
shll
add
mov
loopne
out
push
test
test
jecxz
mov
movsl
pop
push
std
pop
push
inc
mov
ds
call
adc
mov
gs
test
test
int3
aad
mov
or
inc
arpl
pop
mov
mov
xor
icebp
sub
in
jne
pop
repz
cmpsb
stc
xchg
ds
mov
fsts
in
mov
cltd
pop
xor
cmc
jbe
dec
mov
es
dec
cmp
imul
popf
add
mov
addr16
popf
pop
mov
push
adc
cmp
int
inc
cli
iret
mov
push
dec
mov
push
popa
in
cs
inc
inc
add
pop
jne
dec
in
jge
scas
lea
clc
or
and
repnz
ljmp
lahf
loop
loop
mov
jb
pop
push
xor
cmp
iret
or
push
sbbb
dec
scas
mov
rcrl
js
push
sub
dec
jg
sub
ja
mov
aas
inc
sahf
dec
repnz
push
sbbb
out
dec
xor
pop
nop
dec
movsl
xor
loopne
adc
daa
and
push
lahf
out
cmp
fadds
inc
push
add
jl
pop
jne
mov
jle
faddl
fdivrp
jmp
incb
aam
les
lods
sbb
dec
int3
cmp
sbb
adc
sbb
int3
stos
pop
xchg
je
ss
sub
jle
pusha
test
or
int
out
xor
adc
push
fwait
xor
mov
mov
cltd
jecxz
out
mov
imull
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
into
mov
jge
sahf
hlt
cltd
int
push
fiadds
and
push
leave
add
mov
push
fsubr
out
jbe
pop
mov
mov
mov
cmpsl
xchg
cmp
jnp
jne
loope
icebp
xchg
popf
push
imull
lret
insl
mov
inc
lahf
fstpl
xchg
push
out
test
insl
fs
mov
adc
dec
das
int
cmpsb
dec
mov
data16
fldl
fistpll
pushf
mov
repz
data16
mov
xor
xchg
xchg
sub
mov
or
rcrl
inc
fstl
dec
stc
das
test
out
xchg
pop
jg
arpl
jmp
sbb
or
test
pusha
orl
or
movsb
stos
repz
bound
cld
inc
stos
pop
in
inc
scas
addr16
sbb
scas
cltd
ljmp
jns
cmp
les
xor
pop
lds
sbb
nop
cmpsb
push
xchg
pop
mov
aaa
pop
dec
pop
xor
decl
xor
adcl
mov
fwait
xchg
xlat
dec
xchg
mov
xor
push
xchg
hlt
mov
enter
or
cmp
popa
mov
xor
lods
pop
outsl
push
lea
stc
sbb
ljmp
fidivrl
adc
lds
dec
jbe
mov
fidivrs
xchg
push
add
sahf
jbe
sub
shl
mov
xor
ror
int3
and
adc
dec
jle
fsubrl
cvtps2pi
out
cmp
mulb
add
jg
out
add
rep
ss
pop
test
mov
pop
xchg
push
push
stos
nop
icebp
leave
lods
inc
call
rcr
push
rcr
dec
ja
adc
mov
fimull
mov
cmp
pop
push
in
pop
fidivl
stos
lcall
fmull
dec
jb
es
stos
or
in
out
mov
jl
ds
inc
aam
add
imul
xchg
inc
cltd
sub
cmc
in
mov
push
xchg
lret
rcr
sbb
shlb
mov
popf
mov
mov
add
push
std
fcoml
mov
push
jno
popf
pop
cltd
jge
pop
or
bound
out
lods
lcall
cltd
addr16
inc
test
imulb
rorl
jnp
fisubs
mov
mov
cltd
jmp
jne
jge
test
mov
fwait
pop
and
xor
or
les
sbb
pop
lods
mov
and
mov
mov
dec
shrl
mov
jne
mov
stos
sbb
cmp
outsb
ror
lds
mov
sarl
jae
add
jge
ds
in
mov
xchg
pop
jnp
bound
js
test
pushf
adc
cltd
xchg
loop
sub
imul
rorb
jne
jle
mov
iret
and
pop
add
inc
loop
aas
push
xor
pop
sbb
cmp
aam
ljmp
cmp
adcl
add
jbe
fs
cs
aam
cmp
adc
pusha
pop
mov
movsb
fnstenv
pcmpeqw
fdivr
sbb
insl
int3
lea
jle
pop
cmpsb
mov
into
decb
cmp
xor
dec
orl
add
les
mov
aad
fsubrs
es
xor
scas
fdivr
ficomps
fbstp
stos
jmp
adc
es
xor
push
add
xor
mov
pop
cmpsl
lcall
mov
jb
jmp
jmp
fdivs
movsl
aam
cmp
push
xor
xlat
insl
test
das
sub
sub
icebp
fs
jmp
mov
cmpsb
ja
jmp
jae
pop
lcall
std
aad
cmp
orl
mov
int
jne
in
xchg
push
lret
xorl
push
scas
das
push
xor
clc
pop
push
imul
in
mov
sub
mov
mov
xor
xchg
popa
mov
xchg
push
mov
pop
mov
inc
shrl
adc
push
fcomps
leave
fimuls
mov
mov
cmp
gs
scas
inc
dec
mov
dec
and
sub
mov
mov
xor
sbb
inc
shl
mov
dec
popa
xlat
lret
push
mov
in
adcl
or
or
jnp
push
aas
and
cmp
ficomps
test
scas
stos
mov
std
inc
sbb
movsb
adc
arpl
adc
cmp
mov
test
mov
xor
shl
cmp
mov
inc
xlat
insl
loop
adc
lds
xchg
add
pop
mov
mov
mov
mov
jo
pop
inc
sti
mov
enter
sub
decb
ja
pop
in
push
shrl
fidivl
adc
or
lea
sub
mov
iret
jbe
cwtl
jno
int
jg
jb
jae
dec
je
addr16
inc
jge
pop
imul
fs
outsb
and
mov
test
lcall
clc
int
outsl
push
or
sub
sbb
xchg
lock
adc
pop
mov
cmc
mov
xor
xchg
repz
popa
loope
cmp
fwait
jbe
subl
push
sahf
test
pushf
popa
lahf
jmp
jg
das
out
and
int
fnsave
aad
fistpll
shll
pop
lods
addr16
sbbl
push
or
mov
push
mov
push
mov
and
mov
lret
dec
push
mov
jg
jmp
clc
imulb
mov
mov
js
or
es
jo
stos
mov
xor
aad
pop
add
aad
mov
sbbb
stos
mov
in
lret
mov
dec
sbb
arpl
jno
adcl
aas
jl
sub
push
leave
sub
int3
out
hlt
int
xchg
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
xchg
jg
add
rolb
xchg
ljmp
push
sbb
mov
pusha
xlat
pop
mov
or
adc
lds
icebp
jne
pop
xor
stos
out
xor
push
and
arpl
mov
stos
mov
jg
shll
xchg
xchg
data16
cli
pop
jae
mov
or
pop
add
cmp
lahf
inc
sbb
shlb
into
mov
pop
or
ret
inc
sub
test
jp
out
int3
mov
out
pusha
out
sahf
push
add
add
mov
test
incl
jbe
mov
push
adc
pop
insl
cmpsb
add
in
xor
sysret
andnps
orb
pop
xchg
out
movsl
cmp
jge
xor
int
push
xchg
mov
xchg
lods
push
pop
cmc
in
dec
cmp
jecxz
imul
fdiv
rorb
es
addb
std
outsb
or
jae
sbbl
xchg
mov
jl
aas
leave
inc
push
movsb
pop
pop
popf
jae
addr16
xchg
jecxz
and
cmp
mov
mov
pop
cli
adc
pop
jnp
fisubl
lret
xor
dec
mov
je
adc
int3
xchg
test
xchg
push
push
outsl
lea
pop
jae
or
xchg
lea
adc
xor
add
leave
sbbb
std
in
cmpsl
dec
jne
push
scas
pusha
mov
add
daa
xor
pop
notl
cs
mov
fsubl
pop
mov
cmp
ja
lcall
xor
or
ficoml
dec
in
lds
mov
std
popf
gs
jmp
mov
imul
fwait
xchg
and
repz
lret
xchg
xchg
arpl
fwait
mov
xchg
out
mov
mov
cmp
mov
pop
enter
jg
fs
pop
scas
int3
aad
push
repz
push
testb
clc
iret
push
pop
push
xor
add
sbb
cs
divb
fldl
mov
push
outsl
sbb
cs
bound
xchg
test
lods
mov
sub
loope
test
cmp
jbe
cmp
leave
out
cmpsl
push
addr16
sarl
stos
mov
mov
inc
jp
imul
mov
mov
ror
or
int3
aam
ret
rclb
cwtl
jnp
jae
and
push
out
shlb
rcrl
test
divb
mov
cmp
in
push
daa
je
mov
jne
push
idivb
push
and
loope
es
mov
lret
sbb
arpl
in
sahf
mov
push
sub
ret
pop
sbb
pop
orb
movsb
mov
dec
add
adc
or
imul
fnsave
bound
leave
cmp
cmc
repnz
cmpsl
mov
xchg
addl
outsl
xchg
xchg
cmp
cmc
push
push
push
clc
loopne
cmp
loope
sbb
in
das
dec
in
repnz
and
rorb
mov
nop
mov
ror
lea
fdivs
jae
sub
adc
daa
cmp
or
push
lcall
stos
cmp
popa
int3
leave
loope
rorb
sahf
gs
movsl
stc
dec
inc
pop
add
sub
rcr
inc
push
jo
xchg
pop
mov
stc
out
dec
lea
ja
icebp
sub
cltd
mov
inc
and
dec
pop
add
les
notl
cmp
dec
mov
add
sbb
movsl
into
or
cmp
lret
adc
xchg
adc
jmp
dec
fdivrs
and
outsb
test
sub
pop
popa
js
cmc
inc
xchg
movsb
negb
xor
fnstsw
cs
outsb
or
or
movsl
pushf
pop
jl
or
sbbb
jo
mov
movsb
icebp
jle
mov
jno
mov
pop
xor
popf
inc
xchg
shlb
test
movsl
cmpsl
mov
pop
movsb
pop
call
test
dec
pop
out
mov
mov
fistps
jo
loop
inc
gs
xlat
cmp
or
xor
pop
cli
shld
bound
jo
xor
orl
dec
repnz
cmpsb
pop
inc
into
movsl
in
in
jae
clc
jbe
fists
loop
bound
push
xchg
out
adc
push
add
rcll
mov
ds
inc
sub
test
dec
cmp
sbb
out
or
jb
inc
roll
sbb
shlb
sbb
pop
movsl
test
push
jbe
dec
les
mov
sbb
sbb
les
subb
sbb
cmovns
xlat
ror
xchg
loope
push
ficoml
jge
mov
mov
stc
xor
jno
stc
pop
idivb
sbbb
inc
test
cwtl
and
inc
subb
jmp
into
mov
xlat
movsl
mov
ds
clc
gs
aad
mov
sbb
push
in
inc
xor
movsl
xchg
test
int
scas
push
int3
test
aam
insl
inc
fildll
pop
pushf
ljmp
ret
lods
hlt
shlb
lds
jns
mov
dec
out
ljmp
mov
inc
inc
cmp
sbb
push
lahf
sbb
daa
sub
fwait
test
inc
in
das
jmp
dec
or
dec
and
push
dec
ljmp
jp
inc
push
pop
imul
sbb
push
popf
shll
fst
jge
std
arpl
pop
loop
and
daa
push
imul
in
cmp
fstpl
and
imul
imul
or
push
arpl
xchg
movl
fsubl
jnp
into
adc
sub
adc
daa
push
mov
jae
fstpt
add
push
inc
dec
add
out
pop
or
pop
cmp
imul
dec
lods
inc
sub
aas
push
pop
mov
adc
and
jns
imul
and
cld
push
inc
xchg
pop
das
cwtl
dec
mov
inc
xor
in
cld
mull
ds
mov
dec
ja
jp
inc
jns
jl
sbbl
out
fildll
xlat
lods
pushl
pop
xchg
sub
mov
fldl
sbb
jecxz
dec
mov
fcoms
out
xor
mov
pushf
pop
fidivrl
xlat
xchg
dec
cmp
pop
mov
add
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
js
or
add
loopne
mov
or
or
xlat
and
cs
mov
scas
adc
insl
mov
inc
scas
decb
fmuls
out
and
xchg
cmp
aad
cmc
movsl
rolb
frstor
mov
sub
pop
sahf
xorl
pop
fsubrs
stc
fwait
xchg
push
adc
mov
in
dec
nop
sub
mov
neg
jnp
push
lahf
sub
add
test
push
lahf
adc
idivl
cmp
cwtl
inc
cmp
and
stc
mov
cli
mov
cmc
or
outsb
shll
mov
rcr
inc
test
jb
iret
test
xor
jl
xchg
sub
jle
ficoms
lea
adc
xor
clc
dec
xchg
mov
movsb
aas
fcmovnu
sbb
xchg
in
jp
je
dec
test
push
xor
int
mov
outsl
xor
ret
test
cmp
jle
into
cmp
and
scas
cmc
sub
fcmovne
mov
movsb
jb
dec
in
iret
mov
add
ds
push
ret
cwtl
jbe
imul
add
pop
xor
mov
xor
or
rcl
xor
rsqrtps
test
pusha
jecxz
cmp
fisttpll
imul
std
daa
cmp
aas
add
push
insb
insl
out
sbb
push
cmc
roll
jg
dec
and
into
gs
test
fisttps
test
fcom
mov
lcall
gs
les
lock
xor
sbb
mov
addb
sbb
movsb
fidivs
mov
or
js
test
das
push
xchg
imul
test
rorb
mov
repz
cwtl
pusha
pusha
test
pop
insb
stos
mov
pop
and
stc
mov
cwtl
popl
pop
jne
pop
pop
inc
pusha
dec
jnp
daa
pop
mov
xor
and
jp
sub
popa
push
jnp
mov
sbbl
fwait
push
push
jb
mov
mov
lea
jb
mov
inc
les
push
lds
push
push
mov
jmp
jle
loope
mov
imul
dec
repnz
out
pop
pop
daa
data16
hlt
push
mov
cs
es
xor
xchg
inc
inc
mov
cmpsb
jge
mov
popa
mov
rolb
xchg
or
ffreep
push
mov
ret
jne
movsl
ret
popa
add
lret
arpl
cmp
push
inc
and
sbb
scas
daa
test
sub
push
or
insb
test
pusha
mov
dec
clc
repz
stc
or
jo
xor
jl
and
imul
scas
push
pop
into
stos
mov
add
cmp
leave
mov
jmp
stos
sbb
and
das
pop
sbb
mov
mov
shll
repnz
jmp
sbb
or
cmc
and
mov
lret
movsl
sub
insb
mov
and
test
mov
or
cwtl
das
fsubrs
roll
pop
sbb
fs
popf
mov
leave
mov
cmp
lods
insb
lea
xlat
mov
cmp
pushf
mov
add
pop
test
cmpl
add
fbld
push
int3
pop
mov
mov
push
aad
xchg
sahf
add
faddl
inc
jne
stos
dec
pop
and
mov
lret
xor
loopne
pop
jle
xor
sub
adc
cmp
clc
rcll
movsl
rorb
mov
xchg
out
mov
pop
outsl
mov
jp
insl
adc
mov
xorl
loopne
xchg
lcall
fistpll
or
popa
dec
mov
repz
insl
jmp
xchg
jl
fstpl
lret
cld
pop
xor
aaa
mov
xor
and
adc
pop
repz
jmp
loop
sbb
test
jae
test
outsb
int3
imul
and
push
repz
in
jae
jmp
sbb
ds
xor
xchg
je
pop
ficompl
inc
sahf
pop
scas
jne
imul
test
inc
pop
jmp
inc
mov
jns
push
or
or
out
in
ljmp
push
movhlps
daa
fcompl
leave
insl
sub
outsb
adc
cmpl
add
leave
or
in
movsb
dec
repnz
push
xchg
mov
dec
mov
jecxz
push
xor
mov
outsl
mov
sbb
xchg
mov
hlt
repz
gs
das
lret
push
mov
dec
fldl2e
mov
adc
dec
or
addr16
gs
cltd
rclb
popl
or
push
je
or
xchg
and
dec
or
mov
test
mov
mov
mov
fidivl
mov
fnsave
cwtl
lret
jnp
outsb
lret
cmp
cwtl
ljmp
xchg
and
pop
and
and
shll
adc
clc
push
push
adc
movsl
mov
mov
dec
sbb
in
les
test
inc
sub
xchg
jnp
fbstp
ds
add
popa
xor
mov
test
mov
cmp
mov
mov
enter
roll
dec
pop
into
lret
or
jp
les
cwtl
call
pop
in
xchg
mov
fst
ret
push
shlb
int
sub
dec
jecxz
pop
subl
mov
shl
out
and
pop
or
aad
es
mov
push
pop
sbb
push
insb
push
pop
fisubl
shl
lds
out
jmp
sti
lods
popf
enter
pop
jns
arpl
repnz
cmc
loop
xlat
push
mov
mov
jae
fiaddl
cmp
fdivl
out
pusha
cli
lds
andl
inc
movsb
xlat
sub
cmpsb
cltd
mov
xchg
sbb
lret
pop
std
std
inc
push
xchg
sbb
retw
ljmp
xor
cwtl
es
out
mov
xor
cli
jge
mov
sub
insb
rcr
cmpl
imul
mov
or
fnstcw
push
dec
xchg
iret
call
flds
adc
lods
lea
jmp
rcrl
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
aam
iret
addl
mov
xor
fucomp
test
inc
mov
jmp
loopne
xlat
mov
and
stos
rcrb
mov
sub
mull
push
ljmp
cli
and
or
ss
cld
xor
xor
insl
add
inc
insl
sub
fcomps
pop
jl
mov
fs
fwait
inc
idivl
adc
inc
mov
inc
lea
popf
jbe
out
add
inc
out
imul
sub
sbb
cmp
pop
push
or
test
daa
in
mov
xor
iret
mov
sbb
cld
lock
gs
popa
fisubs
xor
cmp
lcall
out
adc
mov
xchg
stos
pop
lods
fwait
mov
andb
cld
or
in
call
cmc
loopne
out
enter
xchg
lods
imul
cmp
roll
mov
push
nop
lret
dec
xor
shlb
ret
sbb
ret
mov
pop
sbb
loop
lea
imull
mov
repnz
xor
out
xchg
mov
xchg
cmpsb
lock
or
test
dec
lds
mov
fldl
fmull
inc
sahf
cmpsl
sub
mov
dec
cmp
cmovno
sbb
out
pop
popf
sbb
dec
arpl
dec
lea
test
mov
pop
popa
popf
pop
mov
sti
int
or
jg
lock
cmp
jno
popf
in
pop
ret
scas
push
lcall
xchg
loop
cvtps2pi
xchg
sub
test
xor
mov
sbb
div
cmp
insl
xchg
mov
dec
ds
js
call
pop
push
in
pop
int3
push
fsubs
sbb
in
mov
stos
sahf
stc
xor
std
pop
adc
cmc
sub
sbb
cld
stos
push
fsubr
cmpl
xchg
fidivl
into
mov
add
pop
pop
add
clc
sti
into
lret
je
or
int
or
xchg
inc
or
cmpb
imul
lods
nop
popa
pop
sbb
inc
andb
and
cmpsl
mov
xchg
int3
dec
imul
lds
mov
mov
shl
dec
stos
cmp
inc
add
lret
ss
add
call
xchg
sub
jl
mov
popa
rclb
sbb
pop
stos
xchg
jp
nop
test
sbb
dec
sub
add
jge
mov
aaa
mov
mov
shl
int
pusha
cmp
pop
fwait
xchg
inc
test
inc
pop
add
pop
push
sarl
or
into
lods
data16
dec
rclb
add
fs
add
jge
mov
pop
sbb
mov
ret
jns
pop
insl
bound
and
jle
out
test
sub
adc
push
adc
ljmp
adc
scas
aas
mov
and
jnp
cld
xchg
sub
jmp
cwtl
xchg
loope
hlt
pop
loope
dec
cmc
ret
or
addr16
testb
mov
iret
add
ja
insb
insb
xor
loopne
inc
or
xor
dec
fsubrl
sahf
rcl
dec
das
bound
mov
xchg
mov
testb
stos
std
xchg
or
xchg
pop
add
ja
testb
fs
xchg
clc
push
sahf
out
or
inc
push
sbb
in
pop
int
ds
leave
inc
dec
cmpsl
sbb
adc
stc
sub
int3
adc
cs
dec
lds
and
les
pop
icebp
rorb
jne
mov
pop
hlt
bound
or
and
fs
in
mov
gs
xchg
mov
xor
inc
loop
jle
push
mov
fidivs
sti
add
in
mov
out
sbb
mov
mov
lret
push
mov
loopne
sahf
mov
jne
xor
mov
fstpl
in
sub
sub
ret
mov
aas
pop
or
xchg
jne
sub
jae
inc
or
add
mov
jecxz
repz
jg
pop
decb
pusha
jle
cmpsl
insl
push
pop
sub
mov
fwait
and
push
push
inc
clc
rcl
nop
test
mov
mov
push
lds
mov
xchg
push
or
fdivrp
ds
xor
loopne
and
pushf
inc
in
cmc
pop
fldt
xchg
je
inc
mov
orb
call
pushf
xor
sbb
xchg
and
clc
lret
ja
imul
pop
in
shl
data16
jp
mov
sbb
jg
mov
popa
scas
xorb
aad
push
inc
mov
je
sbb
mov
lea
les
iret
sub
dec
jmp
pop
pop
push
jge
push
mov
bound
movsb
daa
dec
leave
mov
jns
fld
popa
loop
and
push
dec
rcl
leave
add
pusha
dec
jns
mov
push
insl
mov
ljmp
aam
or
dec
fistpl
xchg
ret
out
aam
js
pop
mov
repz
mov
movsl
adc
jns
mov
and
fidivrs
adc
ds
mov
add
push
push
es
bound
cltd
nop
fidivrl
or
and
test
clc
xor
lret
pop
mov
ret
stos
popf
nop
push
sub
imul
insl
loop
fsubrl
pop
dec
inc
jp
scas
sbb
es
test
sbb
gs
test
sbb
dec
cwtl
jmp
rclb
hlt
push
addr16
xchg
xor
or
stc
fidivrs
add
push
mov
notb
shrb
stos
sbb
mov
push
mov
jae
cmc
mov
adc
push
scas
ljmp
ljmp
mov
and
pop
push
jecxz
push
shr
dec
sbb
xchg
fs
or
cmp
xchg
fstl
or
movsb
mov
mov
cmpsb
dec
cmp
in
pop
push
gs
cld
and
icebp
daa
rcrb
push
dec
insl
dec
jp
xchg
sub
mov
repz
xchg
fisubrl
add
cmp
test
pop
adc
sbb
in
orb
nop
repz
cmp
dec
pop
sahf
mov
mov
push
arpl
fisttpl
push
push
std
inc
cmc
in
adc
sbb
xlat
pusha
jle
jl
push
movl
std
pop
rcrb
inc
stos
adc
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
pop
js
call
pandn
sub
aas
sahf
fists
shrb
push
icebp
cmp
int
int3
inc
sbb
sti
and
push
cwtl
addb
inc
cmp
ljmp
subb
js
cmc
test
fdivrs
xchg
sub
inc
inc
and
mov
pop
fucomi
inc
xchg
ss
or
bound
xor
inc
cmp
fcomi
xchg
xor
pop
push
xchg
shlb
lret
ret
dec
lods
lods
jb
cmp
pushf
mov
push
jno
xor
xchg
out
inc
and
movsl
int
repnz
sub
loopne
fiadds
pop
sub
negl
je
sbb
lcall
mov
insb
mov
xchg
movsb
jge
mov
xor
jge
dec
push
mov
dec
sbb
xchg
or
ficompl
sti
sub
inc
pop
setl
inc
sbb
cmc
lods
push
cwtl
push
mov
jecxz
rol
xchg
mov
lret
loope
or
add
mov
ror
jge
mov
mov
sub
insl
lock
aam
dec
insb
lcall
addl
add
or
jo
fs
andl
into
or
sahf
dec
cmp
xor
clc
popl
cmp
cmp
mov
fistpl
cs
in
jno
mov
xchg
mov
cmpl
repz
pop
pushf
jno
int3
push
testl
jge
mov
xor
bndldx
and
je
xor
inc
lods
or
popf
dec
imul
into
mov
aas
pop
std
sti
test
inc
jno
hlt
inc
mov
dec
ja
jae
movsl
add
jl
pop
jl
pop
or
push
pop
lahf
add
hlt
mov
pop
movsb
pop
adc
mov
orl
movsl
sub
cmpsl
test
in
push
movb
xor
js
addr16
jp
scas
int
mov
push
cmpl
fcomip
repnz
pop
iret
jecxz
push
xor
jecxz
fldt
or
je
int3
dec
cs
movsb
and
xor
daa
mov
sub
mov
fs
lds
or
and
leave
sbb
sub
pop
hlt
mov
mov
andb
test
lret
out
push
pushf
stc
add
inc
sub
sub
clc
repnz
repnz
xchg
insl
add
adcb
popa
scas
lea
idivl
mov
imul
lock
imul
aaa
mov
add
xor
loopne
pop
in
cld
push
outsb
test
jne
and
data16
fdivl
fldcw
sti
dec
xor
sti
push
mov
push
or
mov
mov
push
hlt
loop
mov
add
addr16
leave
dec
xlat
or
mov
outsb
cltd
mov
into
mov
loope
add
or
xchg
fstp
xchg
inc
dec
jl
inc
rclb
out
add
addr16
inc
mov
mov
mov
pop
xorb
push
pop
in
cmp
sbb
clc
cmp
rcl
pop
or
and
xor
xlat
addr16
pop
dec
setns
sbb
sti
ror
aam
lods
sbb
fcomps
xor
fstpl
jg
call
cmp
frstor
push
mov
mov
cmp
fwait
mov
mov
imul
mov
mov
xchg
push
les
cmpsb
pop
mov
loop
lcall
jbe
xchg
ss
scas
rol
dec
into
or
cmpsb
sbb
xor
dec
aaa
sbbl
push
mov
xor
jp
enter
movsl
mov
imul
ss
notb
test
mov
pop
cmp
jg
xor
hlt
cltd
cmp
das
mov
cmp
ds
or
cld
aaa
xchg
adc
jl
in
push
push
pop
test
int3
adc
hlt
and
mov
cmp
rorb
sti
out
ficoml
pop
jne,pt
mov
push
orl
adc
cmp
add
mov
add
fs
add
aas
sbbb
or
push
cli
jmp
sbb
xlat
lret
xor
aad
movsl
and
xchg
clc
mov
push
rorb
inc
les
pcmpgtb
jg
mov
adc
inc
rolb
fwait
inc
pop
ljmp
inc
mulb
int3
sbb
push
shll
sub
mov
add
dec
sbb
lock
or
les
je
add
cwtl
fwait
in
out
adc
jle
mov
out
cmp
push
mov
dec
add
pusha
out
dec
movl
add
out
mov
sbb
mov
mov
dec
or
aam
xlat
arpl
xchg
out
test
xchg
pop
inc
cmc
add
lret
sub
fiadds
push
mov
cmpsl
aas
jmp
jno
mov
push
jmp
adc
ljmp
add
pop
fs
or
filds
sbb
adc
jae
arpl
shr
xor
mov
out
btc
or
pop
bound
test
cmpsb
pusha
jl
mov
push
sbb
loop
adc
xchg
mov
fisubs
popf
adc
imul
xor
jnp
mov
mov
popa
push
jne
add
cmpsl
movsb
popf
inc
push
jns
xchg
sub
insb
stc
nop
mov
add
popa
jnp
andb
das
mov
adc
test
push
out
sbb
pop
lret
les
jno
les
les
add
mov
fwait
cmpsb
out
les
enter
stos
jp
cli
cli
push
mov
mov
leave
jo
fwait
scas
lds
sub
pop
sub
dec
cmpb
dec
sub
sub
hlt
pushf
icebp
inc
idivb
icebp
mov
or
mov
stc
jmp
scas
fistpl
into
insl
push
lds
jp
sub
hlt
jp
frstor
add
test
lds
or
mov
cmp
mov
cltd
dec
imul
mov
mov
adcb
xchg
fmuls
dec
fidivrs
sbbb
in
in
xor
jnp
push
mov
cltd
stos
pop
loop
adc
sbb
out
mov
jae
fstl
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
lret
idiv
pop
mov
push
lea
test
mov
nop
mov
mov
pop
xchg
xchg
jle
rcrl
arpl
sub
adc
cmp
push
lcall
ds
scas
scas
scas
dec
fmuls
jl
xchg
mov
movsb
adc
cmp
call
sbb
shl
in
push
cmp
rcrl
and
xchg
popa
cmp
in
add
out
dec
mov
add
fists
pop
lea
pop
mov
ljmp
push
push
push
ljmp
push
pop
mov
adc
int3
dec
orl
pop
in
sbb
mov
fnstcw
mov
add
shlb
shll
inc
mov
mov
lret
lods
push
jecxz
scas
push
jne
pusha
xchg
test
cli
adc
jnp
lahf
cmp
out
adc
and
add
shrl
pop
mov
mov
mov
test
lret
loop
add
and
lods
sub
xor
and
add
incb
jbe
sbb
sbb
rcrl
jae
leave
in
mov
nop
or
sub
cmp
lea
cli
cmc
xor
pop
data16
lock
or
inc
jnp
into
movsb
cwtl
xchg
fmull
je
mov
imul
push
inc
aad
mov
lcall
shlb
xchg
in
add
and
xchg
dec
xor
outsl
arpl
fldt
mov
decb
mov
aam
out
push
in
clc
arpl
ljmp
aad
add
sub
jns
mov
cmp
push
fbstp
mov
aaa
ljmp
ret
in
jg
jnp
gs
cmp
outsl
sahf
mov
mov
xchg
lds
dec
dec
test
adc
dec
data16
ficompl
or
scas
xor
clc
cmc
dec
jne
and
sub
es
xchg
shl
int
or
mov
cmp
push
xchg
ljmp
adc
roll
cmp
inc
mov
arpl
rolb
std
cltd
lahf
push
push
adc
fistps
add
dec
mov
mov
cli
movb
lock
sarb
loope
fimull
push
stc
sti
fidivl
mov
xor
lret
push
dec
cmc
hlt
imul
push
mov
mov
pushf
pop
cmp
jmp
stc
xchg
mov
add
sbb
jecxz
add
xchg
lret
sub
fistpl
inc
leave
cmp
jmp
pop
inc
cs
adcl
push
xor
push
fsubs
dec
sbb
das
aad
pop
jle
shrl
fsubp
mov
subl
push
outsb
aad
aam
shrl
ret
inc
xchg
das
or
add
jnp
dec
jp
int3
dec
pop
movnti
or
jnp
lret
popf
jmp
je
cmp
popa
nop
sbb
sub
pushf
jge
es
xor
or
or
xor
fidivrs
or
dec
pop
push
inc
mov
sub
jl
sub
cmp
cmpsb
or
mov
dec
and
cmp
mov
sbbb
push
mov
test
mov
icebp
and
aaa
cmp
mov
add
scas
mov
nop
imul
add
ret
xor
fdivrs
xor
jg
cmpsb
andl
les
adc
jmp
inc
inc
jns
mov
or
mov
fisubs
aad
dec
sbb
pop
sub
push
xlat
pop
addb
xchg
inc
inc
imul
mov
shll
jmp
jge
adc
ret
and
push
les
lcall
fisubrl
jg
les
sbb
push
outsb
mov
xor
loope
xchg
nop
fistps
jo
mov
test
cmpsb
sbb
cmp
sahf
popa
and
push
mov
xchg
in
les
shll
sub
inc
arpl
or
or
push
mov
ss
cmpsl
adcb
scas
xor
mov
loop
cmpsb
das
rol
mov
push
pop
pop
popf
ret
addl
in
orb
jo
sbb
mov
arpl
mov
sarl
jo
xchg
cwtl
adc
test
addl
push
xor
sbb
inc
xchg
loop
sub
ss
ret
and
pop
hlt
or
xchg
jno
fdivs
pop
das
push
mov
fisubrl
cmpsl
fs
mov
dec
dec
xor
jmp
ljmp
or
ds
imulb
cmpsb
sbb
inc
int3
pop
mov
shrl
mov
mov
movsb
cmp
jbe
loopne
movsl
jecxz
push
sub
mov
mov
int3
lret
pop
int
hlt
pop
stos
arpl
push
xchg
inc
push
pop
les
aas
jge
sbb
push
jae
pusha
cltd
ss
mov
je
sbb
das
pop
fistpll
or
popa
cltd
xchg
xchg
jno
mov
lret
cli
imul
dec
sti
js
imul
mov
loopne
andl
lahf
out
sbb
sub
xchg
mov
push
rcl
andl
sub
or
int
insl
jecxz
stc
push
mov
mov
cwtl
cltd
imul
push
lds
jp
rcrb
hlt
mov
or
mov
out
scas
in
xchg
aam
fisubs
cmp
jecxz
shll
mov
adc
mov
xchg
inc
lds
jl
cmc
rolb
in
movsl
clc
or
fs
xlat
mov
pop
sub
arpl
cltd
add
mov
push
push
in
imul
enter
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
mov
loope
invd
add
jno
nop
push
xor
or
or
push
or
push
loopne
push
mov
ficomps
testb
lods
js
sub
movsb
imul
sti
movsb
xor
fsubl
movsb
stos
loop
adc
push
or
jnp
std
jae
mov
mov
subb
daa
pop
cmp
and
sti
dec
mov
adc
jge
repnz
aaa
shll
rdpmc
push
mov
mov
call
pop
adc
cmp
inc
jo
add
jmp
add
mov
fnstcw
nop
push
iret
adc
jne
mov
lret
mov
and
xor
xchg
or
adc
repz
in
test
in
out
rclb
dec
fisubrl
and
cmp
movsb
int
hlt
adc
mov
xor
push
add
cmp
adc
repnz
mov
and
cmp
add
jns
jo
xlat
pop
es
mov
cmpsl
test
arpl
xor
lods
pop
fsts
les
xor
loope
sbb
cmp
aas
stos
movsl
adc
in
or
mov
data16
jno
popa
dec
mov
mov
xchg
enter
push
cltd
mov
in
ret
movl
aaa
mov
dec
cld
jp
dec
insl
jecxz
mov
dec
lock
mov
mov
mov
mov
or
or
xor
jb
dec
daa
repz
push
fiaddl
test
xor
dec
out
mov
cli
push
mov
pop
xor
test
dec
sbb
aam
hlt
rcrb
mov
mov
and
loop
out
scas
cmc
cmp
inc
out
inc
out
dec
mov
mov
mov
dec
sahf
push
in
mov
jge
mov
and
pop
lret
push
jg
or
cmc
out
stos
mov
or
testl
sbb
mov
insl
xlat
movsb
add
xchg
sbb
out
lret
mov
push
sbb
fnop
scas
addr16
jmp
ljmp
xor
lods
cmp
adc
scas
xchg
lret
jno
cmp
sbb
es
outsb
test
xor
movsl
dec
ja
push
cmp
addr16
sbb
cmp
mov
outsl
sbbb
mov
jecxz
jbe
lock
sarb
icebp
js
out
sub
movsb
leave
roll
sbb
mov
fstl
jae
orl
movsl
sub
inc
sub
xchg
xor
lahf
cmp
push
push
idivb
mov
push
pop
xorb
sub
jle
mov
aad
xchg
lock
loop
fistpl
sbb
ret
or
fisttpll
shr
mov
push
adc
pusha
xchg
call
and
jmp
into
ret
push
fildl
cli
repz
pop
daa
insl
and
jb
enter
xor
lcall
sbb
lcall
adc
arpl
mov
test
mov
inc
fistpl
js
pop
addr16
jg
test
sbb
cmp
mov
add
inc
jne
jl
xor
cmp
sub
ds
add
pop
push
mov
mov
insl
mov
dec
add
imul
xor
add
ss
or
rolb
fmull
mov
push
sub
movsl
push
aaa
clc
jne
out
jmp
mov
push
out
mov
jo
out
rcll
imul
nop
mov
ja
add
pushl
or
fildll
jl
mov
mov
je
lods
sub
jae
cmpsl
repnz
push
pop
shll
das
push
insl
sbb
int3
sbb
pop
enter
sbb
mov
or
inc
clc
rolb
adc
cmpsl
adc
or
sub
pop
imul
add
js
mov
rorb
les
xlat
mov
add
aad
push
out
pop
cld
jmp
cwtl
add
xchg
icebp
ret
xorl
lods
xchg
inc
aam
repz
daa
leave
dec
stc
ja
out
adc
cld
inc
and
pusha
leave
pusha
xchg
ror
push
adc
mov
lods
push
arpl
shll
xor
int
jle
sub
aam
into
sti
loope
ror
dec
xor
pop
adc
xor
jo
and
mov
out
push
std
xchg
jo
dec
mov
in
test
stc
gs
adc
aam
pop
shlb
xchg
mov
pop
and
icebp
dec
sbb
jbe
mov
inc
bound
mov
or
aad
lea
cmp
pop
xchg
test
lret
out
cmp
mov
fldenv
in
adc
push
les
pushf
sub
test
cmpsl
jae
sbb
icebp
mov
pusha
inc
inc
push
push
push
jp
mov
in
rcr
or
mov
push
aad
jne
mov
xchg
inc
mov
js
pop
jge
or
inc
pushf
dec
push
orl
std
lods
jo
jbe
push
mov
xor
repz
in
fisubrl
dec
pop
pop
sbb
mov
loopne
stc
out
mov
aas
lahf
movsb
ret
push
push
aad
inc
adc
nop
jns
div
xchg
or
pop
in
inc
pop
fnstenv
outsb
mov
sub
dec
loop
or
cmp
iret
ret
sarb
lods
gs
imul
and
fnstsw
loop
dec
aad
shlb
add
mov
dec
xor
test
or
add
push
iret
sbb
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
dec
push
mov
invd
add
movhps
addb
shrl
pop
imul
les
out
mov
xchg
lock
bound
pop
pushf
xchg
push
dec
mov
cld
jnp
push
sub
push
jae
bound
jle
push
fadds
sub
icebp
shlb
mov
push
lea
adc
jb
outsl
js
jo
ljmp
testl
mov
out
adc
lock
aas
sbb
or
int3
jmp
inc
insb
scas
cmpsl
nop
jb
sub
pop
notl
inc
popa
addl
fistl
xor
push
pop
xor
stos
sbb
pop
jbe
push
pop
mov
fcoms
mov
lret
mov
loop
add
test
in
lcall
mov
sub
xlat
pop
pop
popa
insb
nop
arpl
cltd
hlt
jns
out
mov
flds
div
add
rclb
loopne
addr16
rclb
insl
push
repz
sbb
mov
pop
sbb
fwait
inc
or
or
pusha
int
push
jg
pop
and
sti
mov
push
and
dec
jecxz
fwait
imul
sbb
jo
imul
shr
hlt
lahf
divl
ljmp
xlat
push
js
cmp
adc
cmp
jecxz
repz
cmp
cmpb
xorl
int3
sub
aas
gs
add
push
lea
pop
mov
mov
leave
mov
ficomps
push
jge
scas
mov
dec
test
push
sub
pushf
fldcw
add
dec
pop
std
inc
jno
icebp
in
test
xchg
cmpsb
mov
arpl
in
rolb
inc
ljmp
xchg
push
mov
ja
sbb
enter
push
testb
mov
sbb
out
jmp
inc
mov
inc
mov
cmp
stos
std
dec
or
sar
ss
mov
mov
xor
adc
adc
mov
out
mov
sbb
sbb
out
andl
xor
adc
ss
test
test
push
pop
jg
jecxz
test
in
sub
and
and
mov
add
test
scas
xchg
dec
sub
jns
std
fidivs
sbb
or
inc
fwait
nop
pop
jl
lods
call
out
cwtl
adc
dec
jmp
inc
in
iret
jl
push
add
xchg
movsb
stos
call
xchg
sub
and
or
sbb
pop
lock
inc
insb
in
xchg
nopl
mov
xor
fwait
dec
xchg
inc
dec
mov
sbb
sti
xchg
pcmpgtb
imul
sahf
fnsave
inc
push
int3
cmpl
decb
adc
sbb
pop
pusha
push
mov
fdivs
jns
lock
clc
and
xlat
xchg
mov
mov
xor
outsl
shlb
add
or
inc
mov
mov
or
stc
add
enter
and
dec
loopne
xchg
cmp
cmp
insb
loope
aad
mov
fnstenv
or
andl
fstpt
xchg
das
stos
sub
repz
inc
mov
cmp
enter
jnp
fsubp
pop
pop
pop
sbb
test
inc
movsl
enter
add
dec
and
mov
xorb
mov
aas
loop
sbb
pop
fisttpll
cwtl
hlt
push
out
adc
daa
hlt
xchg
xchg
pop
mov
push
cld
or
ljmp
fcmovnb
outsb
faddl
xchg
jns
jbe
pop
pop
xor
loope
jbe
out
mov
or
mov
dec
cmp
inc
and
pop
add
jmp
int
out
roll
add
test
testb
std
cmpsl
fsts
sahf
hlt
xchg
sahf
inc
dec
jl
mov
inc
xchg
fldcw
jg
sbb
aad
repnz
popf
sbb
inc
jbe
test
into
dec
imul
in
int
push
inc
add
lock
or
or
in
xor
and
mov
xor
test
xlat
cs
cmc
fisubl
xorb
jno
mov
mov
sub
dec
cmp
cld
dec
test
enter
lahf
in
fs
cwtl
insb
xor
push
xchg
sub
mov
out
cmp
xchg
sbb
vmwrite
cmp
jecxz
inc
sbb
pop
test
push
or
aas
push
aad
mov
loop
lret
cmp
es
add
imull
xchg
je
mov
call
les
lods
cmp
lret
xor
mov
cli
cmp
push
or
pop
ja
push
or
dec
mov
sbb
mov
scas
lods
int
push
pop
sub
cli
out
std
std
and
fnstenv
js
iret
inc
cmp
pusha
leave
xchg
jno
sub
repnz
and
fiadds
cmpsb
sub
add
dec
fucomi
aas
sbb
add
dec
notb
ficompl
xor
jns
and
aas
jo
ljmp
pop
out
cmpsb
jecxz
popa
or
inc
mov
je
jle
adc
add
and
imul
dec
pusha
inc
shll
lret
ja
enter
push
test
mov
cmp
xchg
dec
sbb
test
push
repz
inc
push
test
dec
daa
mov
xchg
insb
pop
imul
aam
dec
test
call
andb
jnp
pusha
and
das
pop
imul
push
jae
inc
imul
std
sti
data16
mov
fcoml
jp
repz
jns
inc
rcr
stos
xchg
loop
jnp
adc
movsb
aas
movsl
insb
cmp
mov
roll
mov
bound
mov
xchg
adc
xchg
stc
shlb
cwtl
data16
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
sqrtps
xor
inc
int3
cmp
add
insb
popf
or
repnz
aas
sub
xlat
inc
int3
out
fisubrs
mov
out
pushf
subl
dec
call
cmp
mov
pop
jne
icebp
pop
fadd
dec
lcall
sub
out
push
xor
xchg
jae
cmp
sub
iret
jecxz
cmpsl
insb
lret
daa
stc
fimuls
cmpl
fnstenv
call
andb
sbb
popf
gs
mov
mov
fstl
mov
roll
ffreep
lods
xchg
in
inc
add
cwtl
mov
ficoms
push
sbb
sub
cwtl
wbinvd
jmp
mov
mov
mov
lea
jo
loope
inc
add
movsl
cwtl
out
xor
add
or
inc
fldl
or
lods
mov
xchg
out
or
data16
popa
inc
into
icebp
sub
mov
jo
and
scas
xor
sbb
clc
clc
outsb
stos
outsl
loopne
or
stc
mov
or
cmp
popa
sti
out
stos
sub
cmpsb
fldl
inc
jp
test
pop
cwtl
or
xor
fadds
push
data16
xor
sub
dec
inc
cmpsl
xlat
xorl
mov
mov
push
mov
sub
add
sub
mov
inc
cwtl
pop
cltd
mov
mov
cs
icebp
movsb
cmp
cli
clc
fnstenv
pop
lret
movsl
sub
lret
dec
sbbb
leave
jmp
xchg
addl
fnstsw
add
mov
sbb
fstpl
js
in
mov
out
dec
xchg
data16
dec
and
cmp
and
cmp
test
mov
add
sbb
clc
mov
scas
call
adc
in
addl
out
aam
icebp
pop
scas
mov
push
sarb
imul
test
mov
sub
pop
cmpsb
pusha
mov
das
pop
pop
fiaddl
xorb
les
loopne
popf
inc
das
repnz
push
imul
int3
cmp
rolb
sbb
stc
cmp
jb
insb
cmp
sbb
fstpl
mov
jae
adc
sub
rolb
imul
leave
cmpsl
lods
lods
nop
popf
iret
std
sbb
mov
subl
pusha
mov
cltd
jg
inc
add
icebp
loopne
leave
dec
test
lret
daa
fs
imul
pop
push
pop
jb
pop
and
push
push
popa
or
rolb
ss
fdivrp
dec
lcall
popa
jmp
hlt
int
loopne
and
rcrb
test
xchg
mov
inc
arpl
jle
cwtl
pusha
jmp
xchg
lahf
mov
sbb
movsl
xchg
fdivrs
test
pop
ret
pop
push
pop
stos
aaa
fmull
lret
je
dec
push
clc
cmp
mov
mov
cmp
aas
aad
xchg
and
adc
pop
test
das
sbb
xor
comiss
pop
and
insl
mov
jp
add
lds
pop
movsb
cmp
ljmp
pushf
cmp
or
adc
outsb
inc
dec
rol
sub
mov
popa
test
fs
pop
out
mov
push
jecxz
stc
push
dec
push
lahf
jbe
int3
pop
icebp
xchg
nop
repnz
sbb
movsl
mov
and
push
jl
xor
push
insl
inc
ds
leave
hlt
jb
push
pop
pushf
lods
out
and
cmp
mov
mull
mov
sbb
cltd
sahf
dec
xchg
vunpcklpd
ja
or
mov
push
ret
xor
inc
fwait
into
cmp
cmp
xchg
add
push
call
mov
push
add
ror
fstpl
dec
fwait
push
pop
ljmp
mov
xchg
dec
mov
inc
and
sub
xor
repnz
mov
mov
lret
js
and
xor
stc
ret
imul
faddp
sbb
lock
ljmp
pop
stos
inc
and
fwait
xor
cmp
cmp
test
rclb
pushf
lock
mov
or
add
mov
mov
push
xchg
fcmovne
sub
mov
sub
adcb
movsl
jg
dec
fcmove
loopne
ljmp
xchg
pop
sti
daa
inc
arpl
jl
pushf
fidivrs
mov
or
repz
cmc
das
adc
out
mov
fistps
mov
and
cmc
add
mov
sub
add
shll
mov
jmp
mov
out
sbb
and
and
xor
pop
xchg
pop
int
subb
setge
pop
mov
enter
aas
cmp
repnz
add
fnstcw
insl
mov
xchg
int3
xchg
cmpsb
aaa
mov
xchg
mov
shlb
push
inc
sbb
jb
lret
jg
les
adc
add
int
test
scas
mov
bound
push
mov
mov
sub
jl
pop
scas
or
sti
xchg
jbe
jbe
mov
js
dec
xor
mov
sahf
fisubs
sbb
xchg
cld
sahf
int
xor
fyl2xp1
xor
in
xchg
out
js
imul
sub
and
jp
inc
out
sub
xchg
pop
mov
add
dec
xor
cmpsb
sub
jecxz
in
xchg
mov
or
idivb
cmp
iret
mov
pop
push
ud2
and
add
add
or
cmp
daa
adc
cltd
cltd
push
popa
inc
add
mov
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
mov
xchg
mov
or
paddq
test
xchg
movsl
xlat
or
inc
inc
jle
sbb
arpl
int3
mov
test
add
lock
or
cs
dec
lock
sbb
mov
insb
sbb
push
add
xchg
out
imul
mov
call
cli
arpl
add
out
cmc
repz
sti
push
repz
aaa
fisttps
sbb
ss
or
sbb
mov
in
inc
cli
cmp
sbb
movsl
inc
pop
or
lds
cmc
adc
enter
arpl
jo
int3
fs
pop
mov
mov
adc
xchg
insl
jne
jg
jnp
out
jg
fdivr
sbb
clc
or
out
dec
cmpsl
cmp
add
fidivrl
shll
jo
int
or
xor
dec
movsb
stos
cs
mov
cmp
ss
push
pop
add
mov
imull
pusha
mov
xor
adc
add
add
daa
out
rcrl
jmp
mov
loope
lods
push
lcall
adc
mov
sbb
mov
pop
xchg
push
mov
das
pop
mov
or
repnz
sahf
xchg
int3
pop
lock
lret
xchg
rcrl
ret
fs
ror
mov
in
imul
add
sbbb
push
mov
sub
filds
fdivrs
fwait
add
cmc
sub
sub
std
cld
aad
andb
mov
mov
cltd
mov
orb
push
imul
nop
repz
fbld
mov
mov
add
fwait
dec
adcl
mov
mov
mov
fcomp
fiadds
mov
and
lods
cmp
sbb
je
repnz
xor
sub
lock
subl
movsl
fnstcw
lret
xchg
lret
adc
pop
xor
sahf
andl
or
data16
hlt
clc
dec
out
cmp
hlt
and
rcl
insb
cmpsb
adc
jmp
hlt
mov
out
add
sahf
jns
add
popf
push
pusha
clc
push
fldt
sub
add
sbb
call
xchg
pop
jns
push
and
cmp
cmpb
call
sub
xor
pop
mov
push
std
mov
sub
push
pop
shll
xchg
mov
jge
pop
adc
sub
dec
fdivl
daa
rorl
add
mov
dec
mov
jno
pop
or
sbb
or
push
lcall
pop
jb
icebp
fadds
ret
sbb
jg
sub
xor
rorb
les
filds
sarl
pop
xchg
pop
insl
xchg
sahf
mov
lret
jo
clc
pop
bound
sbbb
or
mov
lds
fwait
in
add
insb
lds
notb
mov
and
sub
add
insl
fbld
dec
scas
mov
inc
mov
daa
fimuls
sub
cmc
icebp
into
in
add
inc
out
add
bound
mov
sbb
cltd
mov
xchg
sub
lret
dec
pop
dec
jge
cld
push
notl
je
sub
jge
mov
aaa
or
mov
cmp
sub
push
jecxz
cltd
sub
jno
repz
les
ret
int
pop
repnz
pop
lret
add
in
push
pop
out
sbb
jne
mov
rolb
xchg
out
push
pop
lods
in
shlb
pop
stc
inc
test
imul
dec
imull
mov
inc
or
out
jle
sbb
jge
sub
fsubr
mov
sub
mov
cmp
repz
fstl
push
push
pop
jne
stc
pop
and
sbb
add
or
inc
ja
jmp
push
jns
push
adc
cmp
jo
les
nop
sti
fbld
leave
loope
mov
rcll
mov
inc
icebp
inc
rclb
add
push
inc
out
and
sub
pop
lods
enter
out
sbb
or
popl
outsl
and
mov
add
inc
cmp
ljmp
add
fs
push
testb
inc
ja
cmp
xor
pop
xor
fidivrl
mov
insl
xchg
xlat
mov
jae
mov
das
rcrb
and
and
out
xor
pop
or
ja
and
mov
xlat
popf
pop
or
xor
rcrb
mov
loope
xor
stc
mov
cmp
lea
pusha
cmp
nop
adc
pop
sub
xor
out
inc
inc
test
leave
jmp
mov
pop
fmull
sbb
adc
stos
cmp
jno
jb
fdivp
nop
pop
test
adcl
sbb
icebp
shlb
add
dec
aaa
jae
xor
outsb
repz
loopne
push
int3
ret
sub
insb
xor
sub
scas
push
adc
jo
add
lahf
mov
es
leave
ret
or
push
popa
jmp
mov
cwtl
in
iret
pop
outsb
sti
jbe
sahf
scas
cmp
push
repnz
shll
and
or
cmp
pop
sti
cmpsl
cld
adc
sub
add
inc
out
scas
jle
inc
bound
cltd
mov
xchg
data16
jae
inc
sbb
xchg
into
fdivs
pop
mov
xlat
xchg
mov
popa
adc
filds
dec
addr16
sub
out
mov
pusha
inc
or
sbbb
test
push
out
movsb
daa
cmp
cs
sbb
cld
popf
cli
xchg
fs
popa
cwtl
jnp
test
les
shll
sahf
mov
xchg
push
add
mov
xchg
mov
lods
xchg
mov
or
psubusb
cmc
jae
jg
jg
sbb
push
inc
movsb
push
pusha
cltd
pop
cs
fwait
adc
scas
je
push
out
adc
or
push
js
icebp
or
xor
fsubrs
lds
adc
xchg
andps
dec
add
dec
pop
fwait
icebp
and
repz
in
mov
mov
sub
mov
lcall
cld
stos
std
inc
dec
inc
pop
pusha
mov
call
pmaxsw
hlt
das
addr16
dec
cmp
mov
gs
pop
xchg
std
dec
rcll
stos
push
loope
lret
sub
lret
pop
out
lock
sarb
or
fst
adc
cmp
adc
cmpsb
cmp
loopne
mov
fsubr
jno
in
mov
or
jne
loop
and
cmc
clc
mov
xor
xchg
cli
cwtl
add
mov
mov
rcr
jae
shr
pop
daa
out
ljmp
int
int
popf
xor
lret
int3
cli
sub
lods
leave
fcomps
pop
shl
dec
popf
mov
mov
and
out
mov
cld
mov
xchg
in
out
inc
and
xor
lods
scas
ja
stos
movsl
push
push
mov
push
fnstsw
pop
sbb
or
push
add
inc
pushf
les
clc
cmp
mov
fucom
pop
mov
idiv
sbb
aad
fldenv
inc
cwtl
lds
adc
iret
adc
stc
aad
rorb
pop
movsl
jg
adc
sbb
sub
pushf
push
addr16
pop
cmpsb
xchg
jecxz
inc
pop
negl
adc
or
add
adc
xlat
scas
and
cmp
insl
je
std
and
pusha
aas
imul
dec
mov
imul
sbb
loope
call
cld
fcompl
push
clc
loop
sbb
mov
jmp
adc
add
xor
mov
into
mov
pop
test
jmp
rcrb
pop
fldl
ss
ja
sub
cmp
and
and
dec
in
movsl
and
gs
mov
enter
outsb
inc
pop
stos
outsb
cmp
pop
or
out
mov
and
lahf
ds
jae
sub
adc
mov
add
fs
mov
es
xor
xchg
push
sub
dec
bound
and
mov
mov
adc
jecxz
mov
mov
dec
mov
loope
daa
push
inc
repz
into
aas
das
xchg
or
arpl
mov
sub
roll
out
push
jmp
or
push
mov
adc
cmc
jle
mov
std
xchg
movsl
inc
pop
cmp
addl
add
cmp
data16
fcmovb
push
clc
mov
or
push
lods
push
fildl
dec
dec
adc
lods
stos
mov
sbb
inc
dec
jg
or
pop
dec
mov
dec
mov
sub
push
test
cmc
sbb
xchg
mov
sub
in
add
das
cli
push
dec
test
inc
mov
jb
mov
lods
pop
ret
repnz
loop
xor
adc
xchg
cli
push
testl
lods
cmpsb
mov
xchg
or
fcoms
cmc
push
fildll
cmp
adc
fiaddl
sub
push
imul
xor
xchg
mov
push
cwtl
xchg
jl
push
xchg
fnsave
push
cwtl
outsl
mov
in
gs
xor
ljmp
fistpll
imul
test
std
loope
cmovns
cmpsb
pop
lcall
aas
scas
push
xor
sahf
faddl
orl
in
jnp
jge
mov
imul
cs
stc
push
in
fidivl
int
in
test
mov
mov
ljmp
int3
add
xor
push
flds
cmp
xor
orb
sti
mov
aaa
std
push
jle
pop
addl
mov
pop
cli
push
or
pop
addr16
mov
pop
sti
mov
jle
inc
cli
pop
jge
or
pop
aad
xor
ja
andl
ds
xor
ror
fcoml
adc
push
cmpsl
lret
lahf
ja
mov
xchg
add
stos
cmpsl
clc
lret
push
cmp
cmpsl
xchg
sub
mov
xor
sbb
in
into
jb
mov
jnp
dec
ficoms
aas
stos
test
mov
movsb
mov
lret
inc
pop
push
sub
aas
cmpsl
imul
cli
xchg
std
lahf
push
xorb
test
cmp
jecxz
add
add
push
adc
pop
cmp
pop
pop
enter
int3
dec
dec
test
push
insl
stos
mov
in
xor
push
jg
and
stos
mov
call
cmpsl
lret
in
sbb
idivl
js
jno
mov
test
call
and
push
push
enter
add
clc
fadd
cmp
xchg
cltd
in
out
and
xor
int
dec
jl
jb
test
or
jmp
dec
push
or
lcall
inc
mov
mov
sub
popf
inc
mov
mov
mov
cmpsl
jo
push
adc
negl
dec
mov
dec
jb
mov
and
cld
add
call
mov
inc
jae
into
mov
stc
cmpsb
sti
cmpsb
mov
lods
sbb
ds
nop
repnz
stos
dec
sub
and
cmp
leave
pusha
out
sbb
es
jno
xchg
xchg
mov
xchg
les
or
into
adcb
repnz
push
and
icebp
xor
and
fdivrs
dec
pop
dec
adc
pop
mov
cmp
fldl
popa
jne
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
mov
add
bswap
cmpsb
add
mov
or
mov
sub
pop
sub
in
out
fs
xlat
out
lcall
mov
fs
enter
sbb
xor
pop
lahf
rcrl
sarl
lret
mov
xor
mov
lock
cld
mov
adcb
sar
scas
mov
cwtl
aad
mov
lcall
adc
movsl
or
lret
mov
call
mov
push
andl
ljmp
dec
mov
inc
and
out
out
movsb
fisubrl
lods
outsl
xlat
inc
insl
fsub
fiaddl
pop
pop
push
xor
mov
mov
push
mov
decb
pop
mov
aaa
adc
lret
xchg
dec
mov
xchg
ss
outsl
or
cmp
sbb
es
test
push
xlat
aaa
sub
mov
jg
xor
xchg
sub
enter
jbe
cs
jo
pop
cwtl
ja
add
into
shr
pop
pop
loopne
jmp
lcall
call
scas
jnp
out
stos
mov
push
jl
cmpsl
call
cmpsl
arpl
repz
sbb
mov
cmp
lcall
adc
movb
jbe
xor
push
xlat
sbb
push
rcrb
and
stos
jne
popa
jge
dec
pusha
push
lcall
outsb
push
cmp
int
in
lods
sbb
jp
sbb
push
sub
mov
arpl
out
inc
pop
xchg
stos
fcmovnbe
mov
mov
jno
jmp
mov
in
fsubp
inc
pop
jns
in
jbe
pop
jnp
or
fmuls
or
shll
clc
add
into
hlt
mov
sti
xor
push
hlt
stos
hlt
cmpsl
in
xchg
xor
add
and
mov
dec
aad
sub
xor
pop
fisttps
bound
jl
adc
psubb
movsl
inc
adc
jg
pop
add
outsl
cltd
mov
clc
repnz
data16
clc
cmp
dec
mov
pop
cmp
es
imul
xor
test
xchg
movsb
fdivrs
adc
testb
jo
pop
push
jae
pop
lret
arpl
int
jecxz
jbe
cs
mov
mov
pop
mov
shlb
stc
repz
pop
sub
nop
mov
and
add
outsl
adc
xlat
ret
in
and
lret
or
mov
pop
in
pop
daa
dec
testb
filds
aad
jl
lds
popf
mov
or
imul
stc
je
add
bound
jne
maskmovq
mull
or
das
ret
mov
push
mov
xor
lcall
pop
cmp
cli
add
lock
stos
dec
into
lret
cmp
lods
lea
loopne
add
stc
les
push
mov
xorl
xchg
jecxz
lcall
or
mov
in
sti
add
imul
push
adc
inc
dec
movsb
stc
pop
lods
flds
mov
mov
int
outsb
pop
or
stos
sub
mov
popa
inc
xchg
mov
faddl
xchg
not
je
cmc
call
sub
les
stos
lahf
add
call
orb
test
in
enter
scas
mov
or
pop
or
mov
and
add
mov
mov
jb
cmp
xchg
cld
fs
xlat
fwait
pop
aam
movsb
insl
mov
cmp
xchg
dec
mov
mov
pop
mov
cmpsb
pop
repnz
hlt
mov
je
sti
test
push
lahf
sbb
xor
out
jle
jbe
rolb
xor
outsb
cmp
pop
lcall
shll
sub
and
daa
push
fninit
sti
das
cmpsl
leave
xchg
push
cltd
mov
pushf
sbb
jl
mov
sti
cltd
pop
adc
daa
push
and
cmp
lcall
mov
add
das
and
fists
mov
out
out
mov
jb
jns
out
loopne
loop
xor
shl
hlt
jbe
lods
mov
cwtl
mov
inc
andl
dec
data16
xchg
or
outsl
sbb
and
adc
pop
push
mov
sub
jg
xchg
lret
in
pop
mov
jge
fistpll
mov
or
pushf
adc
mov
cltd
roll
lds
pusha
stos
aas
mov
add
cmp
xchg
ret
das
inc
or
in
pop
inc
pop
push
xor
jo
push
pusha
mov
insl
cmp
popf
mov
push
sub
adc
jb
dec
mov
decb
xchg
sbb
inc
add
jle
cmpsl
cmp
jo
mov
ljmp
adc
stc
dec
mov
ficoml
enter
and
sub
fidivl
jge
cli
mov
push
out
scas
and
aam
enter
mov
lods
and
dec
out
mov
stos
int3
cmc
pop
push
mov
jno
push
mov
insl
fcmovnu
mov
inc
enter
popf
fprem
jae
or
push
and
mov
fisttpl
sbb
cli
pop
ljmp
mov
mov
add
sbb
fimuls
push
xchg
fnsave
pop
fistl
lcall
pop
push
aad
sub
pop
in
push
repnz
cmp
ret
int
js
lock
hlt
pop
sub
loop
jmp
lds
test
lock
dec
pushf
sbb
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
test
mov
add
cmovge
mul
sti
xor
cmp
inc
inc
mov
int
sub
pop
fs
jbe
aad
cmp
hlt
stc
nop
pop
movsb
cmp
inc
cwtl
rcr
int
xchg
sbb
stos
sbb
mov
insb
in
imul
pushw
xor
xor
jnp
rolb
or
lret
xchg
pop
mov
test
ljmp
pop
mov
inc
jecxz
leave
jne
adc
bound
inc
mov
push
cmpb
out
inc
add
insl
jnp
adcb
jle
test
int
rorb
add
and
subb
fsub
fisubrs
insb
cli
pushf
out
adc
mov
jp
pusha
mov
push
mov
loope
xchg
jnp
into
arpl
xchg
testl
out
cmp
sub
je
mov
xchg
ljmp
and
xor
xchg
sbb
dec
mov
call
ja
lock
jae
ret
pop
repnz
loope
push
xchg
out
push
rcrb
fld
mov
insb
pop
push
dec
inc
insb
inc
sub
in
nop
lret
xor
mov
gs
fsub
jns
jle
jecxz
mov
std
or
cmp
xchg
mov
int
cmp
shlb
in
xor
aam
cmc
gs
mov
imul
cmc
jg
es
enter
movsb
insl
add
and
outsb
jae
inc
cltd
cmp
fcoms
mov
push
lds
lods
out
popa
jp
xchg
jno
shll
xchg
pushf
inc
jmp
out
cmp
in
stc
xlat
fdivrl
movsl
pop
inc
sub
loope
cld
nop
fildl
xlat
jbe
and
xor
cmp
jae
and
test
dec
out
stos
xchg
jecxz
data16
sbb
lcall
ficoms
stos
call
out
push
lret
imul
jbe
fsub
mov
daa
and
jmp
xchg
mov
dec
iret
lods
mov
mov
dec
mov
cmp
mov
loope
sbb
mov
pop
mov
jp
cmp
in
lock
pop
int
dec
enter
sahf
pop
clc
int3
jb
loopne
lcall
xchg
add
enter
pop
xor
out
rclb
imul
mov
mov
cmc
mov
repz
in
xchg
outsb
push
inc
hlt
sbb
dec
fistpll
fists
out
movb
push
mov
mov
xchg
pop
add
add
lods
jg
xchg
loope
fmull
repz
sbb
addr16
loope
push
adc
cmp
ja
stos
pop
mov
dec
mov
cwtl
cmpsb
in
mov
imul
xchg
mov
lcall
pop
gs
xchg
ss
leave
mov
stos
ljmp
lret
outsb
jne
mov
or
or
int3
inc
repnz
dec
xchg
out
jno
pop
movb
outsb
inc
xchg
dec
sub
inc
mov
addr16
test
imul
dec
stos
mov
mov
add
ret
dec
das
and
push
std
les
bnd
cmpsb
dec
repnz
rcll
ds
ret
fwait
int
jl
shl
loop
lret
fwait
mov
arpl
fs
push
int3
idiv
fcmovnbe
sbb
aaa
jb
ret
iret
push
jne
mov
mov
arpl
adc
mov
add
sbb
cltd
sarl
outsl
sbb
dec
enter
mov
sbb
inc
sub
mov
adc
xor
cmp
xor
fisttpl
jg
xor
lods
test
mov
nop
mov
xor
movsl
clc
loope
sbb
loop
divb
push
test
aam
xor
mov
cmp
push
mov
int
pop
mov
jne
test
add
or
loop
mov
xchg
and
xor
jge
daa
inc
ret
mov
ss
stos
pop
mov
ljmp
xchg
cwtl
clc
cltd
mov
xor
jle
shrl
icebp
or
pusha
inc
add
rol
and
xorb
xor
mov
push
push
fistl
xchg
in
sub
sub
mov
fwait
shl
pop
xor
mov
clc
sub
test
push
shr
add
cmp
or
fsubl
inc
xor
ja
lds
jns
mov
pusha
mov
lea
add
xor
xor
repz
ds
xor
loope
mov
cmp
jge
testb
shl
out
mov
imull
adc
data16
jmp
pop
jmp
inc
mov
xorl
xchg
movsb
or
dec
xor
xor
pop
mov
dec
and
int
sbb
in
and
xor
cwtl
out
or
fstp
xchg
mov
das
sub
out
jno
pop
in
stc
mov
outsl
and
rorb
negl
and
insb
mov
mov
inc
inc
or
jo
aas
push
jo
jnp
rolb
sbb
ret
pop
mov
mov
mov
jb
rorb
sub
jg
cwtl
stos
test
call
test
pop
insb
add
movsl
xchg
les
push
fsubrs
mov
cli
rolb
into
and
mov
push
inc
popf
mov
xchg
sub
int
push
inc
sbb
mov
sbb
lahf
imul
outsb
jne
rcl
loop
ds
xorb
push
sub
arpl
pop
xor
cmp
mov
das
xor
sub
jb
daa
mov
lods
pop
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
orl
setne
inc
xchg
xchg
adc
int
vmovss
pop
popa
push
testb
cld
cmp
sbb
xchg
std
mov
mov
loop
jl
mov
dec
ja
and
pop
mov
pop
xor
mov
jge
scas
jmp
push
shll
mov
push
inc
xor
aam
jnp
xor
stos
std
mov
add
les
jne
adc
push
shll
jg
insl
sbb
xchg
push
mov
dec
mov
popf
pop
mov
mov
mov
cmp
jbe
and
lcall
es
pushf
lods
mov
fnstsw
xor
les
jp
add
or
out
ja
rcll
popa
push
ret
inc
js
leave
addr16
and
lahf
push
jp
mov
aam
mov
sbb
mov
pop
mov
mov
jo
jb
xchg
hlt
mov
push
pop
mov
mov
push
jns
bound
lahf
xchg
inc
movsb
mov
lcall
rolb
mov
iret
lcall
xchg
push
sarl
stos
jl
adc
ficomps
repz
sarb
lret
add
sub
adc
sarl
cwtl
add
shlb
lcall
cmc
push
rsm
or
pop
mov
rclb
xor
and
cld
sub
stc
jmp
fcompl
stc
xchg
loope
fcompl
xchg
loope
in
adc
lds
cltd
ja
bound
nop
lods
inc
dec
jle
adc
repz
inc
xor
shlb
fldt
xchg
pop
xor
jb
xchg
push
nop
ss
xchg
insb
fwait
in
call
mov
and
sbb
xor
push
dec
pop
out
ss
pop
inc
add
dec
icebp
mov
add
sahf
mov
hlt
bound
cmp
ss
lods
movsb
push
inc
lret
jbe
sbb
and
jo
jbe
pop
and
pop
xor
mov
inc
andl
jle
jns
cwtl
xor
mov
hlt
push
inc
arpl
dec
mov
iret
mov
stos
cs
xlat
mov
fldl
sbbl
sbb
test
stos
sub
mov
mov
sub
insb
xor
fbstp
incl
lcall
je
test
icebp
cmp
movsb
dec
jge
pop
push
jbe
mov
jno
inc
lret
or
in
inc
arpl
add
cmc
ja
in
mov
pop
cmp
cs
pop
pop
fcmovnu
cs
inc
cmp
pop
pushf
xchg
cld
adc
test
test
inc
adc
dec
pop
dec
test
popf
xchg
outsl
cmpb
mov
pop
lret
lcall
jle
loop
jnp
inc
negl
push
cmc
cmp
repz
sub
sahf
mov
and
inc
hlt
ss
add
mov
fsubl
lret
add
mov
xchg
popf
ljmp
cmp
add
test
pop
gs
pop
add
or
pop
daa
cmpsl
jns
inc
out
aam
inc
sub
or
popf
and
imul
xor
sub
xchg
pop
push
xor
ja
jnp
or
shlb
mov
ja
cmp
hlt
xchg
pushf
pop
or
popa
cmpsl
sahf
mov
mov
enter
mov
scas
iret
dec
shrl
pop
stc
stos
and
or
add
les
icebp
cmp
mov
jbe
out
dec
addr16
jae
mov
jp
in
nop
sbb
pop
rcrb
lods
sub
push
aaa
cmp
xchg
outsl
xchg
pop
lods
mov
leave
jb
in
xchg
sahf
xor
fdivrp
je
sub
or
xchg
lods
or
popf
jmp
addr16
aam
std
or
in
pusha
adc
sti
out
add
int
xchg
push
sub
test
sub
push
inc
adc
in
pop
lods
mov
mov
cmp
lods
mov
lock
subb
add
pop
dec
and
lds
les
or
sub
cmp
dec
xchg
push
push
push
jbe
imul
xor
push
sub
lods
cmp
scas
jge
or
sbb
cmp
jge
xor
jbe
sbb
divl
scas
test
imul
call
ret
imul
mov
movsl
jmp
or
mov
mov
pop
stos
scas
rcrb
xchg
fmul
sahf
test
jno
adc
ret
ja
ret
jmp
pop
and
xchg
pop
sbb
fisubl
mov
fmull
bound
rcrb
cwtl
push
std
add
cltd
xor
out
jecxz
loopne
pusha
lret
jo
faddl
xchg
cmp
or
es
mov
xchg
mov
rcrl
movsl
pop
int
pusha
mov
push
mov
dec
repz
jge
dec
cmp
and
push
popa
stos
inc
test
fstl
mov
inc
lret
push
adc
cmp
sarb
int3
mov
adc
and
lcall
in
mov
adc
cmp
push
xchg
arpl
cld
jge
jmp
sbb
test
in
jg
xor
fwait
pop
push
adc
fsts
pop
dec
or
nop
ret
jo
cs
mov
jnp
fildll
push
sub
or
sub
insb
push
leave
xchg
repnz
push
lret
insl
sahf
enter
sbb
lds
fsubp
test
ja
rorl
xchg
bound
adc
xor
outsb
mov
enter
and
xchg
adc
sti
aam
imul
xchg
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
cvtps2pd
dec
add
roll
add
inc
sub
adc
mov
add
loope
push
mov
pop
inc
xor
stos
mov
xor
pop
int3
movsl
repnz
orl
lods
int3
or
push
jns
adc
cmp
subb
aaa
xorl
imul
push
mov
sbb
fdivrs
bound
fadds
sub
mov
rcr
sub
shrl
sbb
push
cmpsb
sti
in
into
add
push
out
outsb
push
enter
leave
adc
sbb
mov
xchg
jb
lcall
jo
mov
pop
jge
adc
mov
push
or
cmp
push
popf
stc
cmp
in
dec
loope
jmp
jecxz
jae
cmp
and
out
ja
inc
pop
jg
jmp
ds
out
scas
cmp
leave
adcb
mov
test
mov
cld
gs
adc
adc
jg
mov
push
in
aad
cld
pop
and
mov
bound
mov
xchg
cmp
push
sbb
lock
hlt
ja
fdivrl
das
ljmp
push
mov
dec
aas
ret
inc
mov
rclb
adc
push
dec
lock
aam
xchg
or
add
mov
sbbb
add
lds
xacquire
mov
cmp
mov
adc
sbb
daa
push
or
sti
data16
clc
mov
dec
and
mov
call
mov
mov
es
out
dec
cwtl
icebp
in
mov
fcmovu
and
push
pushf
and
mov
fisttps
mov
cmp
daa
lcall
sbb
out
scas
jp
ss
sub
pusha
inc
out
sub
xor
inc
dec
xor
test
sbb
out
ret
movsl
or
mov
and
clc
repnz
xor
xchg
xor
ror
push
mov
ljmp
pop
mov
in
nop
roll
into
jnp
push
or
divb
adc
sbb
mov
dec
test
jecxz
iret
mov
jmp
add
xorl
in
sub
in
repz
fisttpll
test
sbb
and
sbb
jecxz
rolb
jecxz
fld
loop
or
adc
lret
movsb
rol
adc
scas
popf
fs
inc
ds
xor
fbstp
adc
or
jg
push
jle
lea
es
pop
lret
mov
ret
int3
imul
inc
xchg
mov
adc
out
mov
insl
in
scas
sub
pop
cmpsb
fstps
sbb
std
cmp
push
xor
idiv
cmp
xchg
fstps
push
jae
loopne
sub
push
gs
mov
in
lahf
inc
out
out
pop
lds
cltd
testb
cltd
out
add
fwait
mov
push
xchg
jae
mov
pop
std
sub
test
cmp
add
divb
lods
mov
out
les
das
fwait
adc
pushf
xchg
ret
mov
add
enter
sarl
ss
cmp
lods
ja
inc
int3
dec
ret
mov
add
inc
stos
jnp
lods
std
adc
clc
mov
add
cli
fs
jnp
lret
mull
leave
push
cmpsb
sub
push
sub
or
add
imul
sub
decl
dec
sbb
ret
xlat
repnz
push
xchg
xchg
pop
jle
pop
mov
dec
stos
bound
mov
pop
lea
push
lods
jb
stos
stos
repnz
cmpsb
xchg
adc
insb
pusha
mov
stc
sbb
or
adc
xchg
mov
enter
sub
push
mov
push
pop
idivb
fwait
push
repnz
insb
cmp
add
jbe
mov
or
add
xchg
push
dec
xor
movsl
push
jl
or
rcr
enter
mov
add
lret
loopne
stos
mov
cwtl
push
lret
dec
imul
fiadds
push
imul
sbb
jmp
mov
call
push
mull
mov
adc
or
push
cmp
incl
flds
jmp
jb
or
loop
pop
xor
std
pop
inc
paddusb
lock
jne
pop
or
sbb
adc
imul
scas
sbb
pop
in
mov
push
stc
dec
mov
jns
sbb
scas
divl
cmpsb
mov
mov
shl
lahf
insl
dec
mov
imul
cmp
mov
test
ret
nop
xchg
sbb
iret
pusha
out
test
movsl
in
sub
test
mov
add
push
insl
sub
jo
push
ret
lods
pop
lret
cmpb
loopne
lret
xrelease
jb
mov
sbb
and
iret
dec
add
push
cwtl
movsb
mov
mov
sub
dec
loopne
jp
pop
mov
xchg
xchg
popa
adc
mov
fmul
add
inc
repz
pop
push
enter
ror
inc
or
je
ljmp
and
pop
adc
mov
jp
scas
lcall
cmp
inc
mov
into
pop
hlt
dec
inc
mov
ljmp
push
pop
sahf
xchg
push
jnp
fisubl
mov
lods
add
pusha
cltd
push
inc
pop
mov
dec
fwait
mov
jo
outsl
movl
jae
loop
movl
loop
inc
stc
aaa
mov
test
roll
push
dec
dec
mov
xor
cs
mov
push
fs
pop
sub
sub
jmp
lret
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
xchg
and
or
cvtdq2ps
movsb
pop
xor
push
dec
cwtl
mov
rcrb
sbb
and
popa
ret
xchg
js
loopne
ljmp
lods
orl
test
sub
inc
adc
fnstcw
dec
or
shl
cmp
inc
ja
jns
pushf
lods
bound
mov
dec
enter
or
inc
loopne
push
inc
movsl
cmp
mov
insb
lods
pushf
adc
push
in
test
js
push
lods
sbb
clc
mov
adc
add
dec
std
movsl
add
pop
aaa
and
xchg
xchg
dec
or
pop
push
loope
movsb
aad
mov
push
cmovnp
ljmp
in
push
xchg
std
push
out
adcl
cld
stc
loope
jge
sub
dec
xchg
fs
lds
push
pop
or
lret
test
dec
add
xor
mov
aad
addr16
lods
popf
loopne
lret
nop
js
xchg
sbb
xor
loopne
mov
cli
pusha
lret
cmp
pop
xor
cwtl
or
movsl
or
fildll
movsb
test
test
push
add
jne
xor
or
enter
push
in
push
mov
xchg
test
sarl
gs
fistps
push
shll
enter
push
fisttpll
dec
jge
add
data16
xchg
push
xchg
cmp
mov
insl
cmpb
mov
ja
lods
push
cmp
rol
fucomp
psubb
shlb
pop
cs
jecxz
lea
xchg
in
pop
xchg
repz
jecxz
dec
js
push
fstl
add
xor
pop
mov
jbe
xor
adc
aaa
popl
loope
addr16
insb
add
adc
or
mov
repz
push
nop
popl
inc
arpl
inc
dec
sbb
cmpsb
mov
aaa
push
ret
out
push
ds
jp
nop
cwtl
lret
jle
push
outsb
pop
fidivs
mov
inc
sahf
movsb
and
test
pop
xor
jae
fdivs
mov
idiv
sti
jb
js
inc
ljmp
rcl
dec
cli
cmp
push
addb
cmp
rorl
inc
and
jne
outsl
iret
notl
cmpsl
mov
xor
ljmp
test
xor
subb
test
push
dec
mov
clc
mov
shr
sbb
jmp
nop
pop
or
mov
lea
lcall
add
xchg
add
insl
iret
iret
lret
cmp
jae
movsb
cltd
jb
xor
dec
mov
bound
notl
cld
inc
push
add
mov
aaa
jg
lahf
jg
mov
mov
scas
call
adc
callw
out
loopne
pop
shl
lea
xor
les
dec
fnstcw
adc
mov
jl
ds
loopne
out
mov
mov
and
aam
pop
cmp
mov
out
orl
mov
pop
in
xlat
int
inc
test
push
out
mov
pop
inc
sub
ret
xchg
out
xchg
fdivrs
ss
cmpsl
inc
aaa
xor
pop
lock
les
cmp
inc
mov
mov
test
ss
inc
enter
int
jge
inc
shrb
inc
mov
inc
inc
fwait
lods
xchg
test
pop
int
fnstcw
mov
sarb
lea
cmp
cmc
xchg
push
fidivrs
pop
xchg
mov
pop
loopne
shll
push
mov
sbb
in
out
repz
hlt
cli
xor
lret
mov
jb
cmp
enter
roll
sbb
imul
enter
xor
addr16
orl
mov
sub
jmp
fsubrl
ja
xchg
cmp
cmp
mov
aad
call
dec
lret
aaa
or
pop
ljmp
out
inc
push
fs
cmp
mov
incl
dec
pop
rorb
mov
sbb
jnp
sub
sbb
jle
movsb
cmpsb
and
mov
cmp
aas
and
loopne
pop
xorb
iret
add
mov
aaa
lret
js
aaa
inc
cmp
xchg
aam
inc
push
fnstsw
mov
loopne
jo
sub
jns
pop
rclb
clc
or
lods
adc
scas
xchg
rorl
jecxz
xor
jmp
cmp
call
ljmp
sbb
push
cmpsl
call
leave
or
aam
cmp
sub
aas
jnp
jmp
pop
cwtl
iret
push
les
xchg
push
stos
or
xchg
aas
or
inc
mov
adc
push
stc
ret
jnp
shl
or
cmp
inc
or
fistpll
adc
or
shr
stos
add
stos
fimuls
xchg
aaa
inc
jne
shrl
ret
dec
dec
rorl
dec
mov
mov
cmpsb
sbb
bound
pusha
jae
cld
leave
arpl
sbb
dec
sbb
xchg
xchg
in
add
sti
scas
daa
cmp
inc
iret
je
xchg
dec
sub
jno
enter
pop
sub
cmp
fldenv
es
sub
lahf
jle
shll
cmpsl
cmp
mov
sbb
insb
xorb
jo
mov
sub
pop
shll
dec
lock
lods
sub
aad
dec
mov
dec
out
aaa
inc
mov
push
push
jp
or
movb
jmp
xchg
subb
fdiv
movsb
mov
pop
cwtl
je
popf
aam
subb
mov
mov
lret
inc
cli
xchg
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
cmc
ret
jmp
invd
add
jo
mov
xchg
mov
mov
jns
fidivrl
imul
pop
inc
or
rclb
das
xor
pop
ds
sar
mov
xor
mov
rcrl
push
jnp
out
add
xor
outsl
mov
mov
scas
int
jo
or
add
dec
push
and
das
jecxz
aaa
bound
sub
rcr
or
gs
mov
sbb
jecxz
pop
xchg
jnp
addb
outsb
lods
ss
cmp
mov
lret
inc
sbb
push
repz
or
jge
dec
push
jno
cmp
jl
aas
shlb
jmp
lock
or
sti
adc
xchg
into
lods
out
int3
pop
cld
lds
orl
inc
mov
fsub
push
nop
addb
cmp
xchg
mov
xchg
lds
cmp
lds
jp
out
adc
lcall
mov
maskmovq
testl
mov
loope
push
cmp
fiaddl
les
das
xor
push
dec
dec
mov
stos
add
adc
shld
jecxz
std
adc
mov
pop
adc
jp
cmp
xchg
scas
mov
je
in
xor
adc
clc
pop
repnz
dec
ja
jle
xchg
rorl
add
stos
pop
mov
cmpsl
pop
pop
and
push
lods
xlat
pop
sbb
bnd
out
rcr
jne
push
pop
ds
or
mov
mov
addr16
mov
arpl
in
pop
jns
in
mov
xchg
or
mulb
sbb
mov
and
sarl
adc
inc
sbb
cmp
xor
mov
push
or
ret
cmc
es
mov
inc
pop
popa
mov
push
pop
loope
jle
ret
jb
dec
stc
lahf
lret
mov
or
inc
inc
sbb
dec
add
pop
dec
xor
int3
dec
int
pop
fbld
jnp
and
nop
and
sbb
xchg
jae
jle
leave
or
inc
mov
fmul
cltd
add
pop
mov
lock
lds
mov
shl
jmp
cmp
das
xchg
data16
loopne
sbb
mov
subb
hlt
mov
cmpsb
int
or
loope
mov
push
inc
cld
push
jno
shll
pusha
cwtl
mov
inc
fisttpl
clc
pop
mov
cltd
push
clc
push
pop
aaa
xor
mov
push
dec
pop
or
call
mov
addl
or
pop
jmp
jae
or
or
lods
test
popa
mov
and
mov
mov
popf
aad
nop
das
mov
popf
sub
inc
je
outsb
xchg
add
pop
cld
out
jp
sbb
in
sbb
call
adc
cli
movsb
rcll
fisubrs
xor
sub
lods
pushf
or
sahf
cld
lcall
and
or
outsb
idivl
pop
sub
stos
add
insl
adc
cmp
mov
movsl
out
lahf
push
pop
into
pop
push
mov
movsb
mov
mov
es
xorb
stos
cmp
outsl
mov
mov
into
nop
jle
pop
aas
pushf
pop
in
outsb
cmp
shlb
aas
je
mov
loope
add
sar
scas
pop
es
loop
xlat
cmpsl
and
cmpsb
or
pop
iret
add
push
mov
add
test
imul
mov
int
dec
dec
sbb
iret
mov
dec
inc
lahf
cmp
push
push
jg
add
sub
add
scas
aaa
ret
mov
jno
pop
jo
addr16
push
in
iret
xchg
sbb
mov
loopne
mov
adc
mov
popf
rcrl
loop
add
pop
and
movsl
arpl
test
or
clc
out
sbb
or
pop
pop
lods
imul
adc
in
sbb
lahf
mov
shll
push
cmp
movsb
and
inc
icebp
jmp
call
pushf
sbb
push
xlat
xchg
push
repnz
dec
fsubrs
inc
xor
int3
push
sbb
loopne
pop
icebp
into
sbbb
gs
push
gs
subb
mov
add
xor
mov
dec
jbe
jge
lcall
fiaddl
fistpl
pop
out
loope
pushf
in
or
mov
lods
sbb
pop
pop
jle
lret
in
mov
mov
inc
jmp
cwtl
xor
dec
test
xchg
jle
add
xchg
fbstp
cmpsl
in
test
and
rclb
xchg
loop
cmp
sub
cmpsl
mov
enter
pop
sub
pop
adc
xor
mov
jmp
sarb
mov
and
int
movsl
ret
loope
jo
loope
xchg
in
mov
jns
push
dec
fisubl
push
in
std
add
cmp
cmp
dec
ret
imul
insl
pop
stos
stc
imul
jecxz
adc
mov
add
ljmp
sub
xchg
arpl
dec
add
add
cmp
call
adc
jno
lret
int
lahf
mov
xlat
mov
shl
repz
dec
scas
push
mov
pop
push
adc
divps
lock
sbb
jl
xchg
cmp
xlat
adc
rclb
cmp
pop
cli
cmp
jne,pt
cld
shrl
push
imul
mov
ljmp
mov
enter
movsl
mov
cld
cmp
adc
push
into
sub
enter
les
das
pop
xchg
push
jb
ret
jo
xchg
aaa
mov
jae
lods
add
repz
and
data16
push
cli
das
add
and
clc
flds
xchg
hlt
inc
dec
adc
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
pavgw
lock
or
lds
call
push
and
pushf
and
xchg
sub
in
int
movsb
js
jmp
scas
repnz
pop
xor
je
dec
pop
aas
adc
and
mov
pop
mov
lods
js
pop
arpl
xor
fdivs
sub
js
shlb
cmp
mov
dec
loop
into
fs
divl
mov
cmp
mov
jg
out
sbb
stos
scas
xor
pusha
fsubs
sbb
mov
cmp
outsl
sbb
data16
pop
sbb
cmp
push
sub
mov
ljmp
pop
mov
jp
shll
shrl
adc
cmp
pusha
ja
cmp
push
mov
sarl
jl
sub
inc
add
inc
in
daa
es
add
add
mov
aas
jnp
stc
mov
pop
loope
cmp
xor
ficoms
in
and
paddb
jl
aas
mov
jns
mov
cmp
stc
sbb
jl
push
pop
xor
scas
jmp
lret
fwait
mov
push
rolb
test
enter
dec
xchg
adc
rclb
iret
xor
mov
rcrb
lret
fdivr
in
ret
add
jne
mov
loope
fdivs
shlb
repnz
decb
cwtl
dec
lret
jl
mov
dec
xor
add
push
jmp
jae
bound
pop
push
push
test
scas
and
addl
xchg
lret
xor
jnp
sub
mov
push
lcall
pop
push
mov
nop
mov
sub
jp
push
jbe
jecxz
sahf
into
sahf
push
js
fldcw
sub
xchg
paddd
adc
inc
fnstcw
jb
push
jle
ss
push
cld
fists
push
sbb
push
popa
ret
fstpt
pop
push
mov
dec
dec
sahf
push
les
xchg
xchg
fcomip
sub
inc
testl
and
jmp
sti
push
jbe
pop
cbtw
mov
int
stos
movsl
loopne
int3
jecxz
dec
mov
fnstcw
sub
icebp
pusha
add
or
mov
dec
push
gs
cmc
inc
dec
imul
movsl
icebp
inc
xor
xor
mov
cmpsl
mov
sbb
jp
add
mov
jle
jnp
mov
sti
rorl
jecxz
lahf
jecxz
pop
jl
mov
les
mov
jge
lock
sti
jmp
daa
inc
mov
inc
jae
pop
sti
shll
ret
cmp
frstor
fs
mov
pop
ficoms
aam
repz
rcrl
jno
push
push
mov
cmc
adc
ja
sub
pop
mov
push
fsts
or
jecxz
mov
test
and
shrl
pop
cmp
pusha
pop
enter
push
mov
fidivrl
xchg
cmpsb
cmp
aaa
xlat
xchg
sbb
cmpsb
jp
test
std
mov
jg
loopne
push
stc
incl
or
sbbl
out
imulb
outsb
cld
adc
in
or
int
sbb
xchg
adc
jge
cmp
rcr
lret
sti
fwait
pop
xor
int3
mov
inc
aad
in
adc
and
sbb
aaa
sub
pushf
adc
mov
xor
leave
inc
popf
jns
inc
into
int3
sahf
xor
testb
lds
adc
push
adc
lahf
test
mov
inc
mov
dec
frstor
dec
addb
repnz
call
adc
shld
ja
xchg
stos
adc
push
rclb
jnp
xor
cmp
cltd
sbb
mov
and
fcompl
mov
fadd
push
adc
negb
xchg
popa
xchg
gs
sarl
xchg
xor
and
pop
add
lret
in
pop
add
or
movsl
push
enter
pop
inc
xor
das
into
sti
sti
push
sub
icebp
sahf
in
leave
mov
jb
pop
int
dec
mov
jae
outsb
dec
fsts
fdivs
jae
sti
outsb
fs
mov
mov
mov
or
lret
outsl
mul
outsb
or
add
sbb
jecxz
push
jns
or
daa
xchg
mov
sub
push
cmp
sub
clc
int3
pop
rolb
dec
sbb
sbbl
jp
xchg
and
jmp
imul
mov
daa
cmp
inc
aas
push
movsb
int
mov
or
mov
mov
add
push
in
daa
sahf
jle
cli
add
dec
push
sbb
fmull
lahf
test
sub
subl
jo
xor
ret
dec
fcoms
sbb
mov
mov
add
and
in
stc
xchg
lods
stc
sub
push
in
insl
jae
or
push
jg
loop
cmp
sub
sub
adc
mov
clc
aad
or
movsl
add
adc
aaa
mov
cmp
pop
pop
pop
sbbl
xor
lret
outsb
jle
sbb
sbb
addr16
push
cmpl
jns
xchg
mov
add
lock
nop
dec
hlt
das
push
in
dec
xor
dec
cmp
out
jmp
push
adc
jnp
and
pop
cmpsb
popf
sbb
les
xor
push
pop
jbe
cmc
in
push
cmpsl
lret
mov
push
cs
and
dec
cmpsl
xchg
push
mov
aaa
push
xchg
adc
fnstsw
jg
daa
into
cmc
sarb
mov
sti
leave
cmpsb
ss
repz
push
ja
push
aad
dec
add
pop
pop
jge
or
lret
clc
or
ret
dec
lock
sbb
test
push
push
shrl
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
aaa
pop
adcb
sti
inc
sub
fldt
inc
shrl
mov
int3
mov
jns
ret
rolb
push
lahf
mov
rclb
xchg
mov
dec
inc
add
sbbl
je
sbb
pop
jnp
call
cs
cmp
sub
test
loopne
insb
push
cmp
mov
imul
pop
pop
or
and
mov
jge
arpl
pushf
xchg
int
loope
and
gs
lcall
psubd
shrb
jp
add
pop
mov
lock
sbb
adc
lahf
int
cltd
pusha
mov
int
or
or
and
dec
mov
pop
dec
push
jno
js
sahf
cltd
cmp
je
sub
int
dec
xor
mov
add
dec
int
test
dec
or
nop
xchg
xchg
lock
cmp
mov
push
movsb
jge
dec
loope
js
mov
mov
sbb
fsubrs
lds
arpl
xchg
stos
mov
push
cltd
mov
popa
insb
push
insb
sbb
jae
xchg
pop
or
sahf
jmp
repz
sarb
push
xlat
in
mov
shlb
cpuid
stc
xlat
rolb
in
push
mov
pop
aad
pop
mov
dec
lods
add
in
les
sub
lret
mov
lret
int
repnz
pop
cmp
mov
pop
inc
lds
je
fstpl
scas
imul
divl
sbb
addl
mov
movsb
xor
or
jo
scas
mov
jbe
or
add
inc
ja
or
pop
dec
sbb
idivl
mov
push
jmp
xor
movsb
fcompl
fcoms
hlt
mov
pop
push
adc
xchg
cmp
fisubrs
cmc
cbtw
xor
xchg
sub
das
int
push
sar
ret
pop
subl
xlat
mov
and
std
int
rol
int3
add
int3
push
sar
or
push
movsl
sbb
mov
loop
and
repnz
mov
push
mov
sbb
aas
dec
fwait
jae
int
push
call
xchg
xlat
insl
cltd
pop
fsubl
test
mov
jnp
aad
stc
out
inc
insb
xor
mov
mov
mov
pop
mov
and
shrl
jmp
or
arpl
call
dec
das
fildl
loop
adc
adc
insl
je
jmp
sbb
mov
sbb
mov
out
stos
lods
push
int
pushf
stos
pop
mov
xor
push
xor
nop
xor
mov
sarl
adcb
lret
cmp
inc
loopne
sahf
clc
mov
xlat
dec
ss
in
fistps
cmp
es
jnp
dec
push
insl
push
aad
outsl
mov
int3
cli
jnp
outsb
and
popf
xor
loope
adc
int3
add
adc
jmp
xchg
dec
add
mov
loope
cmpsl
push
out
stc
jae
push
clc
enter
loope
push
mov
fs
push
clc
add
sbb
inc
sbb
stos
or
adc
jecxz
sub
sahf
repz
add
dec
popa
in
mov
dec
xor
fnstsw
andl
xor
dec
in
inc
sub
daa
mov
cmp
popf
xor
mov
xor
in
enter
adc
add
mov
xchg
call
jmp
mov
xchg
adc
jp
mov
je
add
pop
cmp
pop
push
call
lret
push
out
lods
sub
add
lods
jg
jle
mov
jp
roll
inc
cmp
dec
test
jecxz
out
nop
test
pop
loopne
mov
scas
aaa
xchg
out
adc
ret
inc
out
subl
xchg
popf
xacquire
sbb
out
cli
add
icebp
test
sub
subl
push
adc
add
inc
aas
pop
jnp
cwtl
mov
aam
dec
mov
inc
cmpl
jl
mov
lcall
xchg
repz
outsl
xlat
or
movl
sbb
mov
add
lret
dec
in
out
test
adc
jne
loopne
adc
or
fs
pop
dec
or
inc
pop
sbb
dec
push
mov
sub
test
sub
and
sbb
cli
inc
pop
cmp
into
sub
lahf
je
dec
cmp
xchg
or
pop
fnstsw
rcll
es
cli
mov
jo
outsb
push
call
int
and
popa
testb
fadd
lret
mov
gs
mov
adc
sub
out
lds
shll
pop
push
sbb
push
ret
ja
cmp
mov
inc
jns
mov
xchg
jo
lods
outsl
push
adc
or
cld
out
imul
lcall
push
fwait
inc
cmp
jae
das
pop
insl
xor
jbe
popf
insb
and
adc
int
lret
inc
mov
jne
fs
cmp
add
cmp
test
inc
cmp
add
add
xchg
add
test
xor
loope
xor
repnz
ret
pop
jge
je
fcoml
into
mov
cltd
mov
loop
mov
sub
push
call
mov
jnp
scas
and
push
leave
pmaxub
xor
jp
aad
shll
and
rcll
inc
repnz
lods
shrb
cltd
sub
cli
mov
movsb
mov
lods
lods
sti
outsl
xor
out
add
sti
mov
xchg
dec
pop
mov
rcrl
addb
mov
shlb
popa
mov
sub
inc
mov
test
enter
xchg
cmpsb
outsb
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
adc
out
mov
xadd
mov
xor
rclb
cmp
adc
mov
or
into
cltd
ror
leave
sub
add
int
pop
imul
lock
adc
outsb
pop
xchg
mov
mov
enter
and
adc
test
cli
xchg
out
sub
movq
popf
loopne
sbb
xor
cld
dec
dec
jno
out
fadd
mov
xchg
int
fsts
mov
xor
mov
dec
ss
lock
divb
mov
jns
pop
cmpsl
or
leave
mov
mov
cmpsl
fmulp
mov
sub
cwtl
jne
loope
in
cmp
into
clc
jl
xchg
sub
and
shlb
and
pop
ret
mov
push
lcall
xchg
inc
stos
lock
ljmp
mov
aaa
lods
sub
cmc
test
and
sti
jg
push
out
jae
mov
jg
ja
adc
jmp
jmp
enter
push
inc
pushf
pop
dec
dec
imull
or
mov
push
mov
sbb
push
cmp
lahf
adc
mov
jb
dec
lret
repz
push
cmpsb
sarl
addl
mov
sbb
stos
movd
jl
test
fwait
movsb
mov
xchg
pop
pop
inc
ss
jg
fsub
fisubs
jno
jne
and
xor
sub
test
mov
das
xchg
lods
and
loopne
xchg
ja
sub
and
push
outsl
sbb
data16
jge
outsl
or
push
jb
ss
ja
xorb
minps
bound
inc
test
mov
jmp
adc
loope
pushf
jg
add
xchg
jo
insl
dec
jp
pop
aam
sbb
jb
test
xchg
in
mov
dec
call
outsb
movsl
push
or
add
add
repz
adc
dec
out
inc
dec
jb
stos
in
loopne
loope
cmpxchg
pusha
adc
pushf
rcrl
fistps
cli
cli
or
fwait
clc
aaa
adc
popa
xor
push
pop
mov
adc
lods
sbb
mov
xchg
cli
imul
pop
push
in
loop
inc
testb
aaa
jg
mov
xchg
stc
sub
mov
push
sarw
pop
sbb
lret
xchg
inc
in
push
call
repz
lods
pushf
inc
jae
pop
inc
or
xchg
or
loopne
aaa
mov
loopne
dec
sahf
testb
jo
or
mov
cwtl
fwait
and
insl
cmp
inc
mov
mov
mov
lret
cmp
push
fwait
mov
fs
call
mov
push
push
loop
or
dec
push
stos
xchg
inc
out
jae
xchg
dec
mov
ds
add
dec
adc
js
adc
xor
imul
xchg
ss
test
in
fiaddl
cmp
insb
adc
sub
lea
mov
cld
jmp
push
push
xor
push
lds
or
push
add
hlt
xor
fidivrl
add
add
mov
scas
cmpsb
fldenv
fnstcw
push
outsl
cmp
int
cmpsb
mov
or
inc
popf
push
insl
iret
loop
aaa
mov
rcrl
lahf
aad
mov
clc
scas
mov
test
pop
mov
push
stc
aad
and
ja
jb
das
pop
sub
inc
repnz
ds
mov
mov
das
stos
lret
iret
mov
aam
mov
dec
lret
leave
inc
movsl
cmpl
add
nop
xor
repz
cmc
repnz
sbbb
les
and
push
mov
scas
xor
test
into
adc
sub
outsl
insl
fcmovu
fimuls
jg
xchg
push
decb
mov
jmp
scas
xlat
into
inc
scas
adc
cs
fld1
inc
push
adc
fcmovnb
aad
jne
xor
push
sub
rcll
sub
ds
ss
xchg
or
adc
bound
inc
hlt
dec
xor
repnz
mov
int3
xor
dec
mov
xchg
ja
cmpsl
lea
lret
xchg
sti
pop
ss
push
xlat
jl
push
cs
xor
add
jnp
add
out
repz
xchg
dec
adc
ds
out
es
add
cmpsb
add
mov
pop
push
bound
mov
mov
pop
mov
xlat
mov
leave
add
mov
in
xor
popf
mull
xchg
and
sbb
pop
mov
xlat
lret
cld
adc
xor
les
test
add
sti
sbbb
pop
sarl
fdivr
scas
sub
xor
mov
mov
lahf
fwait
xor
or
push
push
mull
insl
sbb
push
add
shlb
xchg
pop
pop
dec
xor
mov
fisubrs
fidivrl
xor
lcall
idiv
dec
sbb
gs
mov
outsb
adc
insb
pop
std
dec
mov
sub
jmp
xchg
xchg
or
sub
push
push
es
in
pop
loop
addl
das
pop
popf
and
fidivrs
mov
push
sub
mov
aam
and
aaa
or
mov
xor
ja
sub
flds
cmc
cmp
push
dec
stc
mov
lahf
in
cld
mov
push
out
or
xchg
call
mov
outsb
jl
cmp
nop
ljmp
mov
or
insl
inc
sbb
hlt
dec
popa
sub
push
sbb
jp
nop
repz
shrl
xor
sub
mov
movsb
aaa
jecxz
sbbl
xchg
ret
ds
in
call
data16
inc
bound
and
shlb
nop
orl
xchg
inc
mov
je
std
fistl
pop
mov
mov
cld
ds
push
mov
adc
adc
cmp
xor
test
jne
imul
cmp
leave
das
cmc
insl
test
bound
sub
push
xlat
adc
jnp
icebp
push
inc
pop
sbb
pushf
lret
es
cmc
iret
jns
leave
movsl
cmp
adc
dec
ja
lret
iret
int3
adc
lea
hlt
xor
xchg
push
popa
and
in
mull
pop
loop
pop
jle
rolb
dec
loop
add
pop
fs
xlat
out
adc
dec
fildl
and
pop
in
sbb
mov
mov
ljmp
call
dec
filds
insb
mov
pop
add
clc
sbb
adc
mov
mov
push
push
ds
movsl
ficoms
test
dec
cmpsl
adc
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
or
clc
sbb
mov
pavgusb
je
stos
sbb
outsb
push
xchg
push
lock
scas
xchg
mov
mov
cwtl
fwait
repz
xchg
sti
mov
xchg
idivb
daa
imull
mov
add
sbb
fs
aaa
std
aad
lea
push
insl
pop
insb
movsb
push
aad
pop
or
sub
fistps
push
push
push
add
sbb
jbe
mov
popf
fsubr
cmc
sbb
pop
mov
jno
les
mov
dec
psrad
pop
sub
popa
out
cs
ja
sub
bnd
loope
std
xor
and
mov
xchg
out
repz
sbb
xchg
call
sbb
inc
cld
mov
xchg
not
aam
outsl
sbb
cltd
add
insb
loop
rorl
xchg
push
xchg
testl
pushf
sbb
sbb
data16
addl
leave
and
inc
jecxz
push
loop
pop
jnp
dec
dec
and
jecxz
inc
inc
je
addl
xchg
addr16
xchg
mov
mov
mov
loope
leave
xor
movsb
insl
add
dec
lods
pop
jmp
shr
sti
mov
sbb
pop
out
mov
cmpsl
cltd
clc
outsb
addb
int3
mov
je
mov
mov
cli
xor
out
rcll
lret
popf
jle
pop
orl
cmpsl
adc
fbstp
sbb
adc
add
ja
call
push
pop
adc
cmc
and
bound
shrl
mov
aas
pop
inc
mov
repnz
pop
pop
sahf
or
inc
xchg
stc
and
inc
jle
imul
loop
test
fdivrl
hlt
push
jno
inc
mov
cmp
add
sub
aad
stc
stos
sub
test
or
xchg
jmp
jae
inc
rolb
lret
subb
mov
popa
pop
arpl
sub
and
in
ds
fsubrp
aaa
aas
inc
ret
pop
mov
in
and
jecxz
mov
push
lock
and
xchg
pxor
sub
cltd
aaa
cmp
ss
mov
sbbl
cmp
mov
or
clc
pop
cmp
dec
js
sbb
xor
in
aad
mov
movsl
push
and
mov
cmc
add
pop
jnp
xchg
or
and
fsts
aad
cld
xor
repnz
in
push
push
aam
pop
inc
cld
mov
push
sub
scas
mov
jo
insb
dec
push
xchg
adc
or
add
push
inc
lods
fildl
xchg
push
or
movsl
mov
adc
cmc
or
mov
daa
xor
popa
fsubrl
xchg
push
fildll
push
pop
dec
add
fsubrs
jo
outsb
jmp
std
and
loop
adc
or
sub
into
rcll
ss
xor
dec
ljmp
mov
shrb
in
in
adcb
jecxz
ljmp
data16
pusha
inc
jmp
pop
lods
xor
mov
test
aad
aad
push
scas
ficomps
pop
xchg
cmc
inc
and
mov
sbb
cmpsl
andb
adcl
out
and
push
mov
jnp
aaa
fildll
adc
and
mov
fcompl
inc
sub
push
jle
adc
int3
rorb
cld
lods
inc
sbb
fst
ret
pop
push
cmp
mov
out
out
mov
cmp
outsl
sbb
int3
fstps
push
push
test
xchg
popa
push
call
shrb
fcompl
inc
mov
cld
imul
and
jge
jns
movsb
xchg
jecxz
sahf
or
fdivrl
sbb
or
pop
pop
ss
test
ja
mov
dec
test
daa
inc
ret
dec
lds
add
das
inc
adc
pop
push
adc
dec
add
scas
dec
daa
out
cmp
push
mov
or
sub
pop
push
xor
push
xchg
out
into
lock
ds
inc
stos
xor
mov
rep
or
sti
inc
push
dec
sbb
sbb
js
inc
cwtl
rcrl
adc
inc
das
pushf
lods
dec
mov
and
jbe
popa
scas
test
sbbl
mov
scas
rclb
xor
pop
add
out
jmp
mov
imul
xchg
pop
mov
or
subb
push
cltd
mov
into
push
and
pop
adc
pop
mov
mov
imul
jbe
fidivl
sub
sbb
sbb
sub
mov
repnz
ret
pop
int
or
out
cmp
scas
fcom
ss
lds
loop
inc
aas
fwait
dec
push
ds
xlat
sbb
jbe
dec
xor
jnp
rcr
push
lea
push
dec
stc
mov
das
xchg
xchg
push
jo
fisttps
daa
inc
int
je
mov
pop
les
inc
jp
lret
outsl
scas
mov
mov
add
mov
insb
jbe
cmp
mov
push
jo
jmp
dec
mov
adc
test
cmc
pop
push
push
daa
push
insl
lcall
aas
dec
hlt
in
jge
aas
lret
rorb
sub
jo
hlt
inc
iret
lods
pop
in
xlat
jae
lahf
sbb
sarb
jb
fdivs
out
movl
mov
add
das
push
jo
push
push
arpl
jmp
scas
and
mov
inc
jge
es
cmp
idivl
stos
cmp
add
pop
in
inc
loope
sub
add
push
pop
js
repnz
jl
outsb
mov
lea
jle
stos
jp
dec
lds
cmp
shrb
jae
les
sahf
negl
xchg
pop
xorl
inc
imul
xchg
dec
pop
mov
mov
js
mov
xor
add
addr16
push
sbb
out
subl
mov
lock
cmpsb
popa
sbb
cwtl
inc
and
fcmovnb
xor
mov
add
mov
ds
pop
lds
clc
js
incl
sub
dec
mov
mov
outsl
inc
jno
mov
add
aaa
xchg
cmp
pusha
push
ljmp
cmc
ss
dec
std
loope
mov
sbb
out
cmpsb
lock
lret
fistpl
addr16
movsl
jp
sub
in
lods
push
idivb
jae
cwtl
push
xchg
add
push
or
sbb
add
and
inc
cmp
dec
jmp
insl
out
mov
insb
out
and
mov
inc
out
dec
add
mov
cmp
sub
pushl
mov
and
inc
cmp
test
mov
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
data16
mov
and
sub
je,pt
js
mov
and
pop
xor
icebp
in
cs
and
pusha
popl
cld
jbe
sub
out
jne
add
cmp
call
leave
mov
out
sub
cmc
add
lea
mov
add
pop
sahf
mov
sahf
aas
insl
test
add
loope
movsb
dec
jnp
adc
mov
mov
lcall
mov
dec
jns
or
xor
mov
sub
dec
out
inc
xchg
mov
jge
jmp
cmp
mov
push
mov
std
or
xorb
xor
fnstsw
mov
jmp
push
bnd
mov
aad
fistpl
add
rorb
add
jmp
mov
mov
xchg
jo
scas
mov
movsl
mov
xchg
sub
push
cmc
mov
cmp
mov
mov
loop
mov
push
add
mov
hlt
fstps
lock
lock
bound
xchg
xchg
insb
pop
xchg
adc
jno
mov
int
cs
orb
xor
cltd
cmp
popa
mov
jecxz
movsb
cmp
insl
or
cmc
sbb
clc
cmc
cltd
cmpsb
jae
push
orb
inc
stos
push
mov
lods
xor
loopne
push
sbb
adc
pop
lock
xchg
mov
ficoms
mov
loop
imulb
push
js
int
pop
jno
sbb
bound
stc
lret
mov
add
cltd
sub
lods
out
inc
pop
test
stos
clc
or
xor
sahf
loopne
fsubr
fdivrs
pusha
sti
ret
fsts
cmp
sbb
call
sbbl
jo
int
cmovne
test
fisttpl
xchg
addr16
mov
dec
outsl
jbe
xor
pop
out
das
popf
mov
inc
pop
sub
rorl
shrb
repnz
movsl
push
or
lea
fcmovnb
dec
aam
rolb
in
lahf
adc
xchg
fcmovnb
cltd
ds
pop
clc
lea
xchg
jno
jbe
dec
lds
outsl
xor
lcall
pushf
dec
call
lret
jmp
mov
movsl
test
inc
sub
pusha
dec
sbb
inc
push
xor
test
cmp
mov
inc
push
and
mov
or
lods
inc
push
jae
aad
push
add
xchg
pop
push
in
ficoms
pop
and
pop
inc
in
cmpsb
mov
inc
xor
addr16
out
loopne
fildll
stos
fcmovb
mov
out
jne
inc
dec
sti
inc
xchg
sub
add
lods
cwtl
sub
fmul
mov
test
sub
or
aam
inc
cmpsb
sbbb
mov
ficompl
fwait
xchg
pop
push
shrl
mov
mov
test
cmp
pop
mov
negb
jle
adc
rcrb
sbb
add
mov
xor
imul
adc
jb
pushf
cmovno
ja
data16
mov
push
mov
mov
mov
test
sub
fbld
mov
xchg
mov
cltd
lock
out
push
mov
insl
cmpsl
cmp
loop
repnz
imul
fs
das
ret
in
pop
adc
jns
xchg
andb
nop
mov
les
dec
dec
dec
push
mov
xor
adc
movl
aas
cmpsb
pop
inc
gs
and
ret
jb
outsl
or
icebp
js
mov
mov
repnz
push
pop
pop
aad
cmp
int3
lods
pop
dec
ljmp
aam
xchg
ss
xchg
out
jnp
movsl
pop
lahf
int3
mov
and
fistl
shlb
sub
fucomi
jb
xlat
dec
mov
mov
loope
push
lcall
out
dec
dec
fwait
jecxz
jmp
push
dec
das
add
adcl
jnp
inc
adc
inc
in
sub
inc
inc
nop
out
xchg
lock
les
lds
mov
les
xchg
xlat
push
or
fs
or
rcrl
mov
outsl
xor
hlt
adc
pushf
jns
push
dec
push
dec
dec
lahf
imul
ja
das
pushf
sbb
repz
je
mov
addr16
testb
pop
orb
mov
add
lret
sarb
in
inc
mov
fdivrs
hlt
mov
or
sub
mov
in
jnp
xor
xchg
sbb
jno
mov
sar
imul
pop
push
mov
sbb
pushf
jle
cmp
xlat
fs
push
mov
jne
xchg
lret
jge
in
pop
aas
mov
inc
iret
clc
mov
jmp
add
and
cmp
cmp
adc
lahf
movsb
test
nop
add
xor
test
push
shll
dec
rolb
jb
cmpsl
psubusb
add
fs
push
mov
pusha
les
je
mov
dec
in
sbb
inc
mov
dec
cld
dec
iret
mov
in
fdivrl
repnz
inc
insl
push
movsl
pop
dec
js
cli
and
negl
inc
dec
lretw
mov
pop
lods
mov
inc
loopne
or
arpl
adc
inc
mov
or
pop
or
sub
rorb
ja
push
dec
push
jno
iret
and
std
dec
movsb
inc
lret
cmp
cld
mov
or
addb
push
push
ja
pop
testb
test
lcall
push
ret
push
nop
push
icebp
arpl
add
and
in
xchg
ja
mov
jmp
dec
daa
in
mov
adc
js
push
cld
mov
push
sub
or
or
cmc
xor
dec
and
data16
adc
pop
xchg
add
push
inc
mov
imul
scas
jmp
stos
out
add
sbb
mov
mov
jg
out
or
push
pop
inc
repz
mov
std
mov
stc
loope
lods
js
lods
xchg
sbb
or
pop
pop
leave
popf
jle
test
mov
jbe
int3
dec
jbe
pop
lret
pop
sub
and
push
jmp
lea
in
xor
push
ficoml
popf
push
cwtl
and
push
sbb
loope
xchg
xlat
push
mov
sbb
mov
je
sarb
in
inc
xchg
xor
pop
dec
imul
out
das
lea
xchg
jge
daa
mov
xchg
mov
aad
je
push
adc
push
jl
popf
fwait
mov
push
mov
enter
jecxz
sbb
cmp
dec
or
adc
das
daa
repz
jns
lret
or
lret
hlt
or
mov
pop
xchg
add
jo
in
add
adc
jmp
into
add
or
movsb
adc
mov
psllw
movsb
xor
pop
xor
push
sub
out
ret
fldl
rolb
mov
outsb
aam
lahf
inc
xor
adc
mov
or
dec
fwait
stos
int3
movsb
shrl
cmpsl
pusha
sub
pushf
outsl
pop
decl
stos
mov
sarl
xor
and
data16
push
addl
dec
jb
xchg
dec
mov
pop
sub
jno
push
imul
out
dec
outsl
stc
pop
jmp
dec
lahf
xchg
testl
sub
insb
sbb
cmpb
fisttps
cltd
stc
rcpps
call
push
and
add
add
push
pop
sbbl
pop
push
push
push
mov
movsb
divb
call
jae
das
adc
xchg
notl
and
ret
sbb
sub
movsb
jp
cmp
outsb
andb
xchg
inc
push
dec
inc
paddq
int3
lods
out
je
mov
fwait
jnp
test
inc
xchg
pop
cwtl
or
inc
loopne
fldcw
test
sub
sbb
out
daa
pop
mov
subl
mov
jbe
mov
jbe
shrb
loopne
arpl
or
mov
cmp
scas
fldenv
into
cvtps2pd
ret
outsl
cmp
push
ror
call
mov
sub
sbb
sahf
xchg
pop
cmp
mov
loopne
push
jns
int
jle
jo
mov
lods
cmp
fists
xchg
inc
sub
inc
dec
add
mov
add
mov
mov
lea
nop
dec
adc
xor
sub
push
enter
gs
int3
pop
xor
mov
popa
popa
lret
out
push
std
sub
inc
nop
cmp
push
cmp
rclb
int3
push
in
mov
imul
lea
push
rcl
inc
icebp
cmp
sub
mov
and
in
subb
add
and
nop
fsubrs
cli
xchg
jb
pop
jl
movsl
orl
add
lea
ljmp
jmp
pop
push
jo
and
and
stos
sub
pop
xchg
aaa
inc
jmp
adc
notb
or
xor
movsb
mov
push
inc
mov
lods
push
xchg
xchg
shrl
ja
mov
sub
pop
xchg
fwait
pusha
or
xchg
xchg
sub
ljmp
into
lds
or
gs
jg
outsl
add
adc
xor
daa
pop
loop
mov
and
lds
imul
push
jns
sbb
testb
jmp
icebp
sub
stos
movsl
in
js
pop
or
dec
mov
cmp
outsb
cmpsl
xchg
mov
xchg
jl
ja
cmp
in
cmp
shll
xchg
je
add
std
push
inc
leave
aaa
mov
test
add
push
pop
shrl
adc
mov
jno
into
int3
ret
xor
cmc
inc
insl
rcr
pop
out
cmc
cmp
bound
stos
ljmp
push
jb
mov
nop
nop
faddl
shll
in
sub
mov
jecxz
or
jae
and
jge
add
cmp
stos
je
movsb
cmp
in
scas
aaa
mov
repnz
dec
push
fldcw
mov
jae
fiaddl
dec
in
mov
sahf
mov
outsl
std
out
fsubs
jne
lret
outsb
xor
arpl
stos
cmp
adc
loopne
push
test
sub
test
push
push
leave
lea
imulb
mov
in
cmp
jns
jno
clc
dec
and
and
xlat
fadds
mov
pop
jmp
fisubrl
ja
clc
in
adc
test
fnstcw
fsubs
xchg
fwait
lahf
rclb
rcrb
mov
xchg
xor
notl
loopne
and
sbb
push
adc
pop
xchg
mov
out
repnz
insl
js
iret
inc
mov
in
mov
repnz
xchg
mov
imul
xchg
cld
jecxz
mov
cld
adc
out
xchg
lock
loopne
xchg
loope
xor
mov
mov
push
pop
jle
lock
stos
gs
adc
test
xchg
ja
xchg
lods
sbb
adc
mov
sbb
xchg
into
clc
dec
movsl
xor
xchg
xorb
pop
push
mov
xchg
sbb
jns
add
pop
lret
pop
and
je
jl
adc
outsb
xchg
mov
testb
push
pop
gs
shlw
loopne
xchg
mov
jne
mov
mov
movsb
jg
sbb
fstpt
dec
push
jno
sub
jnp
rcll
test
aad
adc
pop
movsl
sahf
andl
ficoml
push
jo
push
out
xlat
mov
xor
pushf
sbb
inc
xlat
js
in
cltd
in
ljmp
pusha
int3
aam
push
inc
xchg
push
aaa
jmp
lea
and
sbb
pop
push
mov
dec
inc
cld
outsl
loopne
push
xor
stc
aam
mov
jecxz
pop
sub
jge
and
pop
xor
cmp
stc
stos
sub
lret
xor
test
imul
xor
jle
outsb
adc
and
test
adc
xchg
pop
mov
popf
mov
and
xor
cmp
xchg
mov
jo
mov
and
jae
outsl
push
gs
jb
inc
orl
pop
shrb
sub
push
mov
adc
loopne
jno
cmc
pusha
push
xchg
xor
xchg
je
xor
jge
cltd
pop
ja
or
int
jg
jns
test
or
and
and
jae
lret
mov
cmpsb
imul
sub
push
dec
add
mov
aaa
jo,pt
or
adc
fiadds
xchg
outsl
aad
inc
xor
nop
mov
sbb
cli
or
cld
les
cmp
es
and
pop
mov
ret
rcrl
cmpsb
dec
outsl
sbb
fiadds
jne
push
enter
sbb
outsl
cmp
lahf
inc
mov
and
stos
xchg
hlt
int3
or
pop
push
dec
xchg
in
cmp
jp
les
jno
sbb
xchg
out
xor
in
arpl
ds
add
dec
fwait
aam
stos
sbb
sub
cmp
and
test
jg
cmpsl
into
cmp
shrl
ret
aas
and
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
push
fdiv
daa
in
adc
and
div
rolb
mov
loopne
lcall
repnz
adc
push
test
or
ret
adc
sti
mov
imul
mov
aaa
out
outsl
add
jno
test
xchg
pop
jp
pushf
lock
mov
lret
mov
popf
or
movmskps
scas
test
into
mov
mov
inc
or
in
cltd
inc
xchg
inc
and
sub
and
inc
xchg
dec
sti
pop
cmpsb
sub
push
mov
mov
ds
inc
into
sub
pop
call
push
imul
iret
jmp
inc
lods
and
xchg
add
pop
je
inc
mov
sub
ss
subl
inc
movsl
jecxz
push
cltd
daa
lahf
xchg
andl
pop
sbb
ljmp
rcrl
add
jnp
in
cmp
daa
xor
jecxz
sub
dec
test
cmp
add
insl
xor
mov
in
jns
mov
idivl
inc
sbb
sarl
sbb
inc
aad
push
dec
and
mov
xor
mov
fstpt
dec
xor
push
lea
rolb
jne
test
pop
jl
loop
lea
loopne
ret
jecxz
inc
or
jb
addb
sub
sbb
or
sti
cmp
cmc
push
int
xor
loopne
call
cltd
pop
sub
pop
insb
and
loopne
xchg
inc
push
popa
test
sahf
fimull
mov
and
andb
push
sbb
lahf
dec
push
popa
outsl
pop
push
jg
pop
mov
jl
pop
jno
call
imul
addr16
std
aaa
cli
iret
sbb
xor
and
pop
xor
dec
int
mov
arpl
sub
dec
mov
leave
add
stos
mov
pop
pop
push
mov
jnp
xchg
xlat
jbe
sarl
inc
shlb
sbbl
jbe
add
xor
mov
stos
mov
int
xchg
jg
clc
nop
dec
mov
sbb
fucomp
loopne
mov
or
stos
or
roll
sahf
sub
aas
out
inc
or
repnz
pop
and
lock
das
xor
or
ret
mov
jae
add
nop
xor
cwtd
pusha
and
add
bound
xlat
cs
mov
nop
test
sti
and
stos
adc
nop
dec
inc
mov
test
inc
roll
mov
push
hlt
lret
repz
rol
mov
sub
sub
xor
cmc
xor
push
rorl
loop
mov
jmp
popa
stc
adc
jbe
rcll
or
imul
scas
mov
and
push
cvttps2pi
dec
add
xchg
xchg
or
and
cmpsl
xor
push
out
test
pop
mov
sub
pop
in
cmpb
jae
ss
vmwrite
cmpsl
ret
jecxz
lds
mov
xchg
movsl
jmp
mov
mov
xor
jmp
jae
cld
out
insb
inc
shll
rclb
push
mov
mov
outsb
sub
cwtl
mov
add
xchg
iret
fcoml
fs
insl
mov
rorl
push
ret
insb
mov
cmp
popa
in
or
xchg
jne
inc
inc
cld
xchg
mov
loop
mov
dec
icebp
addb
movl
repnz
imul
ljmp
hlt
or
insb
fdivrs
call
and
pusha
lret
shl
add
pop
lods
insb
test
shl
xchg
sarl
popf
or
mov
fstl
stc
stc
aas
push
mov
cli
popa
adc
push
lret
pop
cmpsb
push
incl
cld
push
scas
xchg
xchg
fildl
aas
push
into
fiaddl
rclb
mov
jge
xor
add
ds
pop
outsb
cmpsb
arpl
sbb
xchg
shlb
aas
mov
xor
lods
aam
adc
jecxz
out
mov
mov
rcrb
jmp
jb
xor
add
jb
fwait
sub
ss
mov
push
mov
push
lret
aas
dec
sub
xor
mov
addr16
je
jbe
lds
jno
xchg
sbb
sub
int3
outsl
rcr
mov
mov
nop
movsl
jnp
adc
jmp
add
movd
popf
sbb
scas
push
add
test
lods
add
xlat
mov
jp
ja
jno
mov
mov
loope
aad
mov
je
and
xor
xor
push
sbb
jge
fpatan
mov
cmc
adc
mov
or
stc
loopne
rcrl
fwait
mov
es
leave
cmp
loop
xchg
scas
or
inc
pop
shll
jne
xchg
sub
cli
orl
fcmovbe
ljmp
mov
rcrl
out
cmp
outsb
push
popa
dec
pop
xchg
push
pop
and
out
aad
mov
or
jnp
aad
or
sub
dec
mov
or
lods
pop
cs
sbb
pusha
cli
mov
mov
sbb
mov
faddl
in
cmp
imul
mulb
test
out
sbb
inc
xchg
roll
ret
out
xchg
into
and
sub
lcall
sub
dec
scas
or
dec
and
movsl
cmpsb
xchg
pop
mov
outsl
fisubrs
jo
jg
xchg
inc
int3
out
or
cmpsl
mov
push
fistps
and
stos
fisubs
addr16
ret
ss
cld
scas
stos
jge
int3
test
loopne
cld
shlb
mov
add
imul
mov
scas
popf
xchg
pop
mov
mov
fdiv
mov
out
mov
push
cs
popa
fisttpl
imul
inc
push
lcall
xchg
or
xor
jns
jl
sub
mov
shrl
pop
xchg
stos
and
xor
pop
and
pop
rolb
push
in
mov
call
stos
fmuls
fs
iret
and
scas
flds
xchg
repnz
cld
pop
fdivs
addr16
sub
xor
pop
hlt
mov
push
push
jns
iret
xchg
mov
out
pop
and
jp
or
pop
cltd
cmp
and
mov
inc
stc
mov
cmp
cmpsb
mov
outsb
sub
mov
and
mov
mov
fdivl
adc
aam
and
and
imul
push
sbb
jns
and
dec
cmp
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
outsl
es
cmp
adc
and
adc
cmp
and
out
mov
xlat
pop
dec
fsubp
or
bound
add
in
push
inc
popf
mov
pop
loope
mov
sti
push
or
pop
into
rcr
xor
cs
pushf
jp
inc
xchg
push
subb
out
in
int
adc
loop
adcl
dec
mov
addr16
mov
in
rolb
add
sbb
arpl
shll
jns
aaa
sbb
xchg
les
sub
add
pop
push
jp
dec
bound
xor
cmp
sub
dec
pop
cltd
xor
test
mov
adc
mov
in
xor
test
mov
jnp
pusha
daa
sbb
adc
sahf
dec
xor
and
loopne
cs
arpl
shll
jge
ret
lods
dec
loopne,pt
ds
daa
push
rclb
xchg
mov
shlb
outsb
inc
popa
aam
jno
leave
pushf
psubsb
lock
repz
movsb
xchg
fmul
dec
xchg
cmpsb
negb
jb
in
push
repz
dec
mov
jmp
repnz
sbb
sbb
adcb
pop
aad
jne
fs
adc
insl
call
lret
mov
xchg
pop
push
scas
lcall
and
mov
or
ficoms
lds
and
iret
dec
sub
andl
mov
jbe
out
cwtl
pop
push
add
sbb
sbbl
mov
out
fcoml
aam
fdiv
push
lret
adc
adc
xchg
xchg
xchg
xchg
dec
dec
pusha
lcall
js
cmpsb
push
xchg
bswap
mov
rcr
repz
gs
xchg
cs
mov
cli
nop
adc
pop
lret
jmp
inc
or
dec
xchg
in
fnstenv
ret
aad
xchg
cmp
movsb
ja
loopne
lods
sbb
inc
pop
cmp
mov
clc
push
jae
fldcw
push
xchg
or
jle
ja
mov
pop
pop
push
dec
lret
mov
cmp
or
jne
jo
mov
xchg
sub
mov
and
push
sbb
ret
je
int
lret
pop
icebp
loope
xor
dec
pop
sbb
and
sbb
pusha
inc
fistps
adc
and
outsl
loopne
loopne
mov
push
scas
add
dec
shrl
mulb
pop
lock
pop
xor
shrb
xlat
dec
xor
mov
daa
sbb
inc
testl
enter
mov
cmp
ds
rcrb
mov
and
jbe
int
enter
ja
inc
bswap
repnz
mov
rcl
test
inc
dec
leave
jne
mov
xchg
adc
mov
arpl
mov
mov
filds
adc
pop
ficompl
sub
cmp
xchg
sub
or
fbstp
lock
jecxz
jo
xor
ss
or
cmpb
out
xchg
xchg
ljmp
xchg
shr
mov
mov
jne
jecxz
std
sarb
stc
jb
shlb
sub
scas
mov
enter
lods
push
mov
ret
loopne
or
ljmp
sti
sub
or
dec
shlb
push
aaa
mov
xchg
js
push
in
sub
jb
ss
mov
mov
xchg
cs
push
in
pop
sbb
push
cwtl
incl
mov
out
cmp
dec
std
xor
mov
or
dec
arpl
insb
xlat
xor
icebp
lahf
pop
aad
aam
add
cmp
jl
stos
pushl
mov
sbb
pop
mov
scas
xchg
sarl
stc
in
shll
xchg
xor
jl
cmpsl
or
cltd
mov
pop
and
jmp
out
cltd
rdmsr
cmp
cli
pop
lds
pushf
subl
ret
mov
in
sub
cmp
aaa
mov
adc
fwait
inc
jns
out
arpl
loop
mov
jle
mov
xchg
mov
pop
jl
mov
and
pop
fmulp
and
pop
adcl
pop
xchg
jg
mov
out
icebp
mov
jecxz
jbe
fbld
mov
hlt
loopne
subb
adcl
and
mov
lds
es
mov
lss
add
popa
ljmp
insw
dec
inc
cmp
fcomip
or
cmp
pushf
mov
mov
mov
add
cmpl
push
mov
push
ret
add
lret
addr16
rcr
je
mov
mov
jns
test
stos
aam
ss
je
lods
subb
cmc
push
push
rclb
pop
cmp
push
xchg
cmp
dec
xor
int
pop
and
jecxz
in
popa
cvtpi2ps
das
mov
pop
into
jle
xor
pcmpgtw
test
inc
sub
dec
mov
movsb
aas
mull
mov
jnp
mov
lea
stc
cmp
dec
add
inc
rcrl
jb
arpl
mov
dec
jns
push
test
sbb
fs
loopne
mov
fcoms
dec
jl
daa
outsb
out
cmp
sub
xchg
xlat
aam
pop
push
xchg
lods
mov
lcall
mov
rclb
mov
loopne
neg
dec
push
pop
sbb
and
leave
loopne
cwtl
ja
notb
lcall
sbb
bound
scas
jo
adc
call
push
vandnps
aam
gs
dec
sub
outsb
dec
movsb
fisttpl
push
xchg
std
and
ret
xor
inc
dec
inc
lret
call
lcall
fisubs
sbb
adc
pop
cmp
xchg
sbb
push
je,pt
inc
loope
cwtl
fsubrp
mov
mov
lds
pop
enter
lds
sarl
pop
std
xor
jb
lahf
stc
addr16
xor
xchg
ljmp
jge
jne
xor
ss
xlat
test
fucomip
mov
cwtl
mov
testb
and
int
jnp
push
mov
cmp
pop
call
and
pop
adc
push
add
lahf
cmp
pop
outsb
mov
mov
inc
loop
mov
mov
mov
lods
push
icebp
push
and
dec
inc
sub
nop
inc
lea
sbb
lret
xchg
test
sbb
cmpsl
mov
outsb
xor
mov
xorb
and
xchg
add
mov
jmp
cmc
xchg
cmp
push
mov
adc
fmuls
int3
adc
and
popf
imul
adc
inc
mov
cmp
sbb
popa
mov
adc
adc
lds
push
inc
fidivl
es
cmp
or
add
add
push
in
push
add
pop
ds
sub
sub
jg
pusha
jg
xchg
adc
leave
adc
jo
and
sub
hlt
adc
lds
push
pop
xchg
xor
sub
sbb
sbb
mov
pop
pop
mov
stos
aas
add
data16
jge
add
stos
lds
mov
push
and
pop
or
pop
inc
lock
mov
out
test
call
rol
js
mov
add
imul
add
rclb
mov
jae
push
out
call
or
pop
dec
adcb
ret
daa
cmp
fbld
divb
xchg
lahf
xor
notl
addr16
pop
add
and
ret
push
cld
mov
ljmp
hlt
dec
imull
adc
enter
int3
loope
cld
and
inc
or
lahf
xchg
enter
cld
dec
jle
bound
mov
test
test
lret
push
sub
adc
xchg
pusha
fcmovne
xor
pop
popa
pop
enter
ret
and
sub
mov
hlt
xchg
cmpsl
test
push
and
inc
rcrl
gs
jmp
mov
and
push
fdivs
ds
test
inc
leave
sbb
test
test
cmp
xor
push
push
in
mov
mull
push
cli
lods
xor
mov
pop
andb
sbb
adc
mov
push
xchg
jb
shrb
jno
jle
insb
out
mov
mov
nop
sahf
and
jnp
pusha
movsl
jmp
mov
pop
push
mov
cli
and
xor
int
xor
out
push
cs
sub
testb
imul
out
in
aam
add
in
cmp
sbb
nop
stc
repnz
fwait
lock
mov
aas
out
divl
cmpsb
jmp
pop
mov
scas
test
add
or
cmp
in
test
idiv
in
addr16
xlat
in
daa
mov
sub
jb
dec
sub
jg
out
adc
mov
popa
push
in
mov
jne
xchg
call
xchg
imul
adc
mov
gs
cmp
push
fwait
ret
out
cmp
outsb
outsl
mov
mov
pusha
cmp
push
push
sbb
call
pop
mov
mov
fstl
add
jae
mov
call
jle
cmp
push
xor
pop
repnz
push
inc
cs
push
mov
movsb
int
lea
stos
mov
xlat
movsl
subb
int3
jle
mov
pop
jno
addr16
ljmp
mov
iret
iret
sbb
pop
loope
arpl
sbb
jb
push
jae
and
cmp
mov
inc
bound
pop
fwait
loope
mov
std
mov
inc
insl
stos
mov
mov
cli
faddp
adc
xchg
iret
xchg
and
add
mov
or
jns
les
xchg
mov
push
mov
lret
pop
insb
gs
mov
cwtl
loope
daa
stos
clc
pop
lods
lds
fsubr
fcoms
ret
shlb
mov
into
jecxz,pt
dec
mov
and
mov
mov
in
pushf
adc
ljmp
mov
dec
call
mov
mov
cld
mov
add
dec
sub
fs
fldl
sti
xchg
sub
ficomps
adc
xchg
rorb
imul
repnz
int
in
into
mov
mov
pop
pop
hlt
mov
mov
xchg
mov
cmp
lods
inc
xchg
lods
mov
pop
mov
jo
push
pop
and
adc
fdivs
rcrl
mov
lret
repz
imull
ljmp
dec
mov
in
test
or
aam
cmp
bndldx
adc
pusha
add
sub
in
or
cmc
mov
test
sar
sbb
jle
or
cs
stos
lcall
xchg
out
inc
cmp
pop
popf
rcrl
pop
xchg
int
jg
sar
das
pop
pop
mov
jge
test
push
in
xchg
push
out
inc
and
jnp
loopne
nop
sahf
jno
outsl
xor
or
dec
jb
arpl
jp
iret
mov
xor
and
lret
mov
loopne
dec
fsubs
das
inc
or
sbb
out
inc
push
ja
xor
sbb
fwait
xchg
imul
in
sbb
sub
aas
xchg
aaa
mov
or
paddb
pop
fnstenv
stc
add
cmp
xor
gs
mov
test
mov
cmp
bound
jo
insb
das
inc
popa
fwait
sbb
inc
int3
fwait
mov
sub
div
int3
push
pop
pop
jne
jbe
lds
mov
push
or
imul
adc
sbbl
fiaddl
pop
bnd
insb
mov
push
call
inc
adc
mov
jbe
xchg
movsb
dec
cmp
lea
sbb
in
arpl
lock
cmp
jns
in
or
xchg
mov
loop
sti
mov
addr16
pop
sub
js
rclb
rcl
jae
mov
pop
or
xor
cmp
fsubl
cs
pop
cmp
inc
pusha
test
add
in
out
sub
jp
adc
insb
nop
out
pop
push
jl
mov
sub
ret
out
jl
mov
dec
rorl
or
loopne
sub
mov
lea
add
sbb
dec
gs
mov
sahf
sub
sub
lret
repnz
int3
out
lods
loop
mov
mov
jnp
mov
test
add
dec
andb
push
push
pushf
int
fmull
mov
arpl
dec
jg
jmp
xor
xlat
xor
inc
jl
cmp
mov
push
fwait
adc
inc
jg
sub
lret
outsl
int3
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
setae
mov
pop
imul
fbld
lcall
sbb
jecxz
dec
pop
inc
add
sub
jl
push
test
mov
iret
dec
mov
cmpsb
ret
scas
repnz
cld
cmp
sub
mov
inc
mov
into
pop
push
stos
push
lcall
mov
xor
aad
adc
or
aam
adc
jno
je
dec
mov
adc
jns
or
pop
popa
sub
lds
dec
int
data16
cmp
in
mov
lods
inc
sub
fwait
aaa
xchg
mov
add
fdivs
xchg
mov
loop
mov
mov
mov
je
push
cmpsb
dec
sub
jg
xchg
or
push
xchg
pop
cmpb
test
jne
adc
add
adc
add
fwait
mov
je
scas
loop
xor
mov
fcomp
stc
dec
mov
mov
push
jns
lea
cmpsb
mov
test
movsb
push
fwait
adc
ljmp
aad
cmp
fildl
testl
fs
loope
jo
sub
dec
adc
std
test
inc
or
es
cltd
xor
push
xchg
in
sbb
leave
or
xchg
add
lret
cmp
cmp
inc
in
xor
insb
ret
addr16
mov
hlt
xor
ds
lea
ret
add
jmp
jno
mov
icebp
lock
rorb
jno
arpl
mov
dec
mov
jne
adc
ret
cmp
and
jle
adc
jbe
adc
lahf
sub
lock
sub
ffreep
test
int3
mov
dec
les
adc
test
inc
mov
cmp
push
imul
mov
xor
push
add
ljmp
mov
rcr
xor
stos
cmp
das
idivb
mov
xor
js
in
sti
adc
movsb
and
mov
xchg
push
nop
mov
test
xchg
mov
and
jmp
insb
movsl
jecxz
rcrl
jae
fildl
inc
out
xchg
mov
es
cmp
add
or
jmp
pushf
aam
fs
or
mov
jmp
aaa
push
sbb
mov
jb
dec
add
xchg
cmp
or
cmc
cld
inc
adc
movsl
inc
cli
cmp
sbb
js
mov
fcoms
cmpb
and
out
inc
sub
mov
jns
push
fisubrl
aas
push
mov
and
pop
nop
jo
jge
lea
adc
push
scas
dec
aas
out
mov
pushf
imul
or
jmp
push
sbb
dec
pusha
lock
sbb
sahf
inc
jg
out
pop
cli
aas
pop
std
aaa
mov
aad
aam
inc
lcall
or
fsubp
pop
decb
add
mov
hlt
lods
lret
xor
sub
ljmp
test
push
lahf
xchg
dec
loope
add
or
in
arpl
inc
repz
push
dec
or
push
lods
lods
test
movsb
dec
or
popf
dec
jo
add
pop
sub
loope
jl
or
imul
jno
jne
daa
dec
fiaddl
or
les
sarb
pop
or
fdivl
lret
mov
out
scas
fstl
jg
out
loopne
push
adc
repz
push
add
lea
xchg
jbe
and
shlb
jnp
push
cmp
inc
nop
rcr
cmpb
jbe
cmp
test
jmp
rolb
jle
push
iret
pushf
jb
lock
popa
sti
xchg
sti
jmp
fcoml
add
sahf
arpl
mov
mov
sti
cmp
sahf
add
mov
adc
cmp
scas
addl
cmpsl
daa
lahf
ljmp
fsubs
movsb
inc
mov
into
mov
sub
xchg
mov
jnp
cmc
mov
mov
jmp
mov
mov
in
mov
pop
shr
mov
push
mov
mov
ror
rcll
movsl
mov
pxor
bound
sahf
inc
pop
ja
push
sub
lock
sub
and
in
mov
add
sbb
cmp
mov
ja
sbb
push
adc
sbbb
int3
repz
clc
jb
push
int3
push
sub
and
mov
cmp
jne
adc
sbb
pop
mov
and
fucomip
mov
out
mov
pusha
std
addr16
push
lea
xorb
push
and
cltd
test
in
rolb
aam
aam
outsl
mov
aad
xor
pop
mov
pop
mov
js
jg
or
pop
scas
rcr
ljmp
push
stos
push
shrl
adc
imul
in
in
cmp
aam
loope
add
jle
sbb
adc
mov
cwtl
shlb
lock
add
inc
inc
enter
mov
pop
xor
pushf
mov
adc
jecxz
pop
leave
add
insb
adc
push
mov
das
dec
cmp
sti
xchg
xchg
dec
fsubl
and
cld
out
mov
push
or
dec
rcrb
adc
les
inc
jmp
je
mov
nop
sbb
lcall
mov
cmp
aaa
mov
div
dec
add
test
loope
mov
xlat
mov
fisubl
xor
repz
sub
clc
lret
jl
shll
lcall
mov
imull
fdivrs
inc
cmpsl
stos
sbb
scas
test
cltd
cli
int
add
imul
mov
lea
popa
ljmp
sahf
and
ret
inc
ljmp
xchg
add
mov
sub
mov
ret
sbb
insb
insl
mov
mov
in
mov
pop
xchg
clc
popf
mov
lds
icebp
mov
iret
arpl
out
ljmp
movl
add
cmpb
adc
add
sti
pop
ret
cltd
mov
filds
or
push
mov
pushf
inc
outsl
cmp
jp
xlat
aad
outsl
ljmp
jmp
inc
cmc
mov
xor
les
jp,pt
inc
stos
test
mov
jecxz
stos
enter
push
xchg
dec
adc
jmp
jne
mov
pop
dec
cmp
ret
add
int3
sbb
mov
cmpsl
push
lock
stos
int
xchg
cmp
lcall
mov
adc
push
les
sbb
cmp
repnz
cmp
or
icebp
mov
and
and
jmp
jne
add
subl
xchg
mov
fimull
ret
and
loop
inc
sub
inc
push
push
lods
or
lea
es
and
out
inc
inc
in
xchg
mov
jne
sbb
sarl
xor
add
pop
gs
add
pop
clc
inc
push
loope
inc
and
setp
fs
mov
push
sub
test
aam
addr16
outsl
rclb
mov
data16
jl
xor
dec
arpl
xor
fstps
adc
jg
xor
in
push
testl
add
pop
int
pop
addb
cs
jnp
test
dec
and
aas
sub
cmpsl
push
in
xchg
daa
sub
lret
xchg
sti
mov
movsb
stc
xor
into
ljmp
mov
jl
inc
imul
cmp
mov
lods
inc
push
fnstcw
mov
inc
and
das
jecxz
cmp
sbb
ja
call
push
pop
add
add
jnp
cmp
int3
aad
stos
inc
dec
push
cli
jo
push
leave
mov
jnp
vmread
lret
mov
dec
xor
pop
push
lret
mov
xchg
pop
pop
adc
pop
pop
dec
xchg
xlat
jge
mov
clc
lcall
adc
xchg
pop
xor
lods
enter
add
add
pop
mov
push
pop
rolb
xchg
push
mov
sahf
xor
sbb
bnd
scas
dec
mov
int
arpl
sub
mov
and
push
sbb
sub
divb
or
jmp
gs
pop
xor
je
sar
adc
aad
jbe
or
cmpsb
out
jle
sub
mov
dec
xor
imul
xor
outsl
rolb
inc
in
push
cmp
rolb
add
sbb
mov
shl
fs
add
jg
dec
push
test
jle
inc
jmp
pop
sub
pop
mov
stc
cmc
in
or
sarl
repnz
mov
push
hlt
xchg
sarb
frstor
dec
push
fwait
leave
xor
jo
xchg
inc
in
cmp
rcr
sub
out
aas
mov
stc
ljmp
and
mov
pop
sub
movsl
dec
or
ret
mov
out
stc
leave
sahf
inc
xchg
ficoml
and
mov
lahf
jl
cmp
jmp
pop
mov
fidivrl
push
jo
shlb
mov
jns
movsl
push
mov
xchg
jge
aad
sub
ret
enter
clc
push
fwait
xor
cmpsl
mov
jecxz
inc
daa
lods
scas
popa
js
sti
cs
in
sbb
lock
sub
imul
add
rcll
mov
jp
scas
into
arpl
lret
and
pop
cwtl
mov
gs
enter
sbb
iret
ds
xchg
and
les
lds
mov
sarl
inc
xorb
mov
adc
rorl
dec
rcll
and
cmp
movsb
dec
cmc
mov
adc
adc
xor
ds
push
out
jp
and
pop
bound
pop
insb
push
push
pop
mov
mov
das
stos
jecxz
shll
dec
xlat
or
dec
cwtl
push
mulb
cmp
orb
xchg
jecxz
pop
cmpsl
pop
push
jp
mov
sub
jns
insl
sub
pop
mov
cltd
lret
xor
je
orl
mov
push
bnd
xor
jne
sub
std
sbb
dec
inc
cmp
xlat
xor
push
mov
cltd
enter
inc
or
xchg
stc
lahf
and
and
inc
or
cmp
arpl
inc
sbb
xchg
dec
jb
idivl
or
sahf
xor
out
cmp
out
subb
mov
sbb
mov
add
test
pop
shll
pop
cld
shrl
jae
mov
lahf
testb
mov
in
test
jnp
call
pop
lea
xor
sbb
push
out
push
gs
sub
repnz
jg
sub
dec
std
xor
jl
aam
sub
xor
out
insl
or
mov
test
test
outsb
fucom
dec
pop
xor
jno
xchg
and
lods
push
popl
mov
jg
divb
sub
cmpsl
pushf
sub
fimuls
mov
ret
dec
aaa
ret
mov
data16
mov
xchg
repz
and
push
and
inc
test
imul
jecxz
adc
mov
cmp
or
out
or
jbe
inc
outsb
loop
mov
pop
xchg
test
imulb
daa
push
hlt
ret
sub
dec
jno
xor
pop
xor
inc
dec
fs
and
mov
fstps
push
jnp
movsb
in
push
sub
jge,pt
popa
imul
add
push
pop
push
pop
sbb
jge
pop
jmp
jns
fildll
push
or
test
xor
fdivs
cmp
leave
inc
popf
sub
pop
xor
mov
sbb
xor
mov
sbb
jecxz
fsubrs
bnd
jb
cwtl
jmp
dec
push
daa
and
jmp
stos
pop
or
adc
xchg
inc
inc
inc
pop
daa
cmp
push
cmp
bnd
adc
cli
adc
pop
xchg
push
stos
cmpsb
push
cmpsb
incl
and
je
cmpsl
idivb
dec
mov
fildll
add
sbb
mov
std
mov
rorl
outsb
nop
loope
das
push
mov
mov
xor
rclb
pop
xor
sarl
xchg
push
std
lds
inc
addl
lahf
sbb
pop
dec
je
lfs
mov
rcrl
jb
rorl
pop
and
mov
push
pop
sahf
pop
xchg
sarb
cmp
mov
jb
mov
mov
popf
repnz
xor
add
xor
dec
gs
push
push
sub
popf
push
out
sub
pop
or
jp
mov
jbe
in
adc
gs
fsubl
popa
cli
ficomps
pop
mov
flds
or
lahf
lahf
out
add
mov
mov
or
out
dec
aad
popa
insl
jbe
shll
pop
xchg
lds
out
inc
jae
jo
shr
cmp
push
dec
jmp
cmp
out
ljmp
push
stos
popa
mov
dec
and
jae
ds
cmp
pop
shlb
es
mov
push
push
movsl
and
or
movsb
ret
and
adc
pushf
lcall
mov
mov
xor
mov
ja
cmpb
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
loopne
out
js
adc
and
sbb
stc
in
js
jge
out
sbb
scas
jmp
xchg
imul
in
fdivrl
add
lahf
jge
mov
jge
adc
andl
mov
mov
cmp
cli
fs
incl
in
sbb
jns
lea
stos
hlt
push
fists
out
loope
loopne
mov
gs
adc
xchg
xchg
jnp
jmp
xor
ljmp
mov
imul
out
cmpsl
arpl
inc
mov
aaa
out
in
in
mov
jmp
add
or
loopne
jge
loopne
adc
mov
dec
aam
outsb
push
jbe
pop
data16
xchg
cmp
outsb
inc
pop
imulb
into
nop
xor
daa
inc
ror
add
loopne
dec
jl
loope
fs
inc
dec
rorl
cmp
jmp
daa
mov
inc
fistps
dec
rol
gs
cmp
pop
pop
pop
cmpsl
sub
data16
dec
xchg
add
outsb
pushl
or
mov
inc
gs
xchg
in
fmulp
lock
popa
ds
mov
push
fmul
add
adc
adc
pop
out
rcrb
cmpsl
or
cmp
cltd
int3
outsb
cli
mov
xor
mov
jbe,pt
mov
dec
add
std
pop
xor
xor
add
aaa
scas
lock
subl
add
jne
test
inc
popf
pop
cmp
sbb
aaa
out
je
adc
cli
clc
pop
pusha
lea
sbb
test
cmp
clc
mov
cmp
xor
scas
test
loop
test
sub
mov
mov
cmpsb
scas
fcoms
dec
shrl
xor
cmc
ljmp
jbe
jns
out
push
lret
lcall
iret
sbb
stc
std
movsl
add
xchg
iret
aad
mov
or
sarb
add
xor
fsubs
aam
dec
loop
jle
clc
mov
mov
cmp
mov
sbb
or
and
int3
std
mov
sbb
pop
xchg
fwait
and
inc
dec
pop
sti
popa
call
mov
or
inc
mov
push
test
fildll
sbb
adc
fwait
in
pop
jae
ret
mov
pop
mov
add
idivb
out
leave
jge
mov
aaa
faddl
stos
mov
or
ljmp
cmp
or
data16
out
pop
xor
loopne
push
loope
sub
lret
and
dec
aam
es
adc
xchg
push
mov
mov
into
or
xchg
fildll
jo
xchg
jae
adc
fisttpll
cmp
mov
popa
int3
mov
test
loope
lret
mov
inc
mov
jg
sbb
mov
loop
test
sbb
pop
jno
mov
adc
inc
cli
inc
sahf
shrb
mov
outsl
jae
dec
jns
clc
pop
dec
push
xchg
mov
mov
inc
popa
insb
insl
mov
in
inc
xchg
popf
jae
cwtl
ljmp
int3
aas
fs
xor
jl
cmpsb
scas
add
bound
jnp
mov
xlat
dec
inc
insb
jecxz
mov
and
jae
mov
xchg
mov
pop
push
sbb
cmp
jmp
xchg
jne
add
fnsave
sahf
inc
rclb
ja
adc
dec
shlw
cmpsl
out
push
mov
leave
fmull
test
push
lods
mov
xor
jmp
and
push
inc
popf
sub
mov
mov
push
arpl
outsb
inc
jae
fdivl
into
loope
fstpl
lds
xchg
push
mov
mov
cs
cmc
cwtl
jb
ds
pop
insb
adcb
push
out
pop
adc
out
in
mov
push
shrb
pushf
pop
mov
dec
cmp
push
mov
daa
push
repnz
fisubrs
pop
sub
stos
or
nop
arpl
xchg
aaa
and
and
push
pop
arpl
dec
mov
sub
mov
and
sbb
mov
push
aam
rolb
in
add
mov
xchg
sarl
and
out
dec
jmp
sub
xor
inc
cmp
and
inc
rcll
adc
out
adc
mov
rcrl
out
in
adc
push
jo
inc
sbb
and
in
loope
fsubs
mov
outsl
mov
ja
dec
xchg
xchg
imul
mov
sbb
adc
lcall
mov
add
sbb
loop
testb
fsubrl
int3
test
dec
enter
in
test
pop
pop
inc
ss
mov
out
inc
xchg
mov
push
fidivs
in
mov
jnp
adcl
lret
or
xor
xchg
adc
cmp
inc
mov
in
aam
sbb
add
mov
data16
movsb
jle
mov
in
inc
mov
fbld
cmp
or
fidivrs
ds
mov
in
sbb
das
cmp
mov
inc
clc
mov
sub
dec
cmp
sti
decb
push
xchg
in
mov
cltd
mov
test
adcb
ljmp
xchg
push
jbe
add
daa
pop
fldenv
or
aad
repnz
sbb
push
ljmp
test
call
sub
lea
or
mov
orl
idivl
mov
loope
cmp
pop
mov
shr
jnp
pop
push
fcmovnb
cmp
push
loop
push
ds
jnp
mov
sarl
sub
pop
xchg
mov
in
cmp
dec
rclb
cltd
xrelease
inc
add
or
sbb
out
cs
jl
mov
in
push
sub
and
pop
cmp
inc
cmp
xor
sub
mov
movsb
xchg
lock
inc
dec
aaa
cmp
xchg
lret
xor
fnstenv
add
dec
cli
out
pop
adc
mov
sbb
cwtl
leave
xchg
and
mov
push
js
or
test
mov
mov
cli
inc
fsubl
ficoml
xorb
mov
mov
cltd
or
push
mov
popf
js
int3
pop
push
sub
inc
mov
loop
jo
mov
push
loop
lret
xorb
push
call
adc
push
std
das
mov
iret
and
pop
fidivs
leave
nop
out
inc
std
rcll
fs
xchg
sub
cmp
sub
cmpsl
push
imul
fdivp
sbb
aas
movsl
bound
mov
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
fs
mov
paddd
jns
arpl
sbb
dec
push
ret
and
movsb
mov
fisubl
inc
or
cmp
sub
sub
fmuls
jge
mov
jno
jno
pushf
cltd
fwait
and
jp
fists
mul
lret
mov
adc
sti
and
and
sub
sar
addr16
arpl
mov
aaa
lods
lret
dec
movsl
in
test
lods
fwait
push
fstl
xchg
ret
push
out
in
xlat
sbb
in
lock
sbb
lds
lcall
push
cmpl
pop
rol
cmp
sbb
insb
dec
xlat
jb
push
adc
xchg
fadd
mov
movsb
aad
and
cmc
mov
and
mov
pop
inc
inc
rclb
aas
xor
lods
sbb
stos
imulb
mov
push
std
jnp
cmpl
mov
push
push
cmc
shlb
and
in
andb
mov
notl
fsts
mov
sbb
mov
cmp
fcomps
sbb
in
jl
loopne
xor
sbb
out
add
and
mov
inc
movsb
adc
mov
push
out
sub
add
inc
stc
xchg
add
jne
mov
es
sub
clc
mov
xor
gs
popa
cmp
mov
gs
out
xchg
ljmp
adc
scas
push
mov
jo
mov
push
inc
jl
xor
xchg
fcoms
test
mov
jp
mov
lea
sbb
push
mov
dec
sub
inc
mov
in
mov
cld
ret
adc
cli
and
roll
add
fucomp
or
add
mov
das
adc
inc
push
xchg
fptan
push
sbbl
movsl
mov
jno
adc
dec
ljmp
ss
xchg
ficoms
pushf
in
imul
and
mov
dec
pop
stos
stc
inc
pop
jge
ret
xor
push
das
lock
jle
adc
jae
push
push
xchg
mov
insb
in
jo
mov
into
lcall
lahf
aam
jl
or
add
jl
adc
daa
out
cmpsl
ret
aaa
xchg
jmp
adc
cwtl
sbb
stc
push
jns
movsb
fistps
ror
inc
scas
push
scas
stos
jl
mov
or
lds
outsb
fistpll
aam
aaa
mov
mov
sbb
repnz
and
test
jbe
inc
cld
xchg
ret
sub
inc
mov
ficompl
mov
mov
lret
push
mov
scas
shrb
dec
aaa
mov
and
stc
push
cmp
push
sub
push
das
fistl
cltd
xor
inc
cmp
arpl
lods
stos
or
pop
xchg
or
int
imul
or
movsl
lret
xor
cwtl
sub
inc
rolb
bound
movsl
mov
syscall
mov
pop
mov
sbb
sub
or
xchg
lret
jmp
fcomip
imul
dec
mov
or
pop
jb
ret
mov
and
outsl
rcrb
mov
jbe
cmpsl
stos
inc
popf
pop
sub
ja
imul
daa
outsl
lods
fsts
cmp
negl
push
or
or
and
push
in
fidivs
mov
and
in
das
pop
ljmp
adc
test
int
adc
hlt
dec
mov
rcl
push
insl
jne
sub
fldcw
mov
fsubs
xchg
jmp
lcall
out
push
xchg
sbb
testl
call
clc
mov
and
adc
das
fisubrs
push
test
addb
xorl
jbe
jno
inc
lods
insl
jge
adc
aas
and
adcl
sbb
mov
add
loope
cmp
sub
xor
cs
jne
sub
sub
adc
fiadds
adc
cmp
mov
or
lret
notl
mov
jg
jb
xchg
in
arpl
mov
mov
or
loope
movsl
add
pop
scas
adc
mov
outsl
lret
inc
int
stos
xor
mov
ja
mov
jl
push
jmp
cmpps
out
or
jecxz
call
xor
fmull
test
in
call
and
lcall
inc
loopne
lret
lret
in
add
sbb
testb
in
lea
jae
psubb
mov
cmpsl
lock
mov
decb
insb
emms
in
leave
push
sbb
outsb
jle
lahf
movsb
iret
addr16
add
sbb
in
or
dec
pusha
dec
and
jae
jae
cmp
adc
add
or
push
xor
icebp
loope
jp
adc
in
or
push
pop
xchg
pushf
ds
lret
adc
mov
pop
ss
gs
daa
inc
loop
out
adc
push
jecxz
or
mov
xor
mov
rcll
xchg
add
cmc
nop
pop
inc
rcrl
aas
pop
push
xor
ds
enter
sub
shlb
cli
repz
mov
and
sbb
xor
push
jne
in
mov
out
rcrl
push
fldt
adc
loop
movsl
iret
pop
sti
jecxz
xchg
and
lods
in
pop
or
cmc
jge
jae
sub
pop
xchg
add
adc
push
add
mov
dec
xchg
fdivrs
loopne
dec
pop
fs
mov
add
and
aad
aaa
shrb
xor
inc
bound
jae
mov
or
pop
inc
sub
aad
fcompl
in
dec
outsl
mov
cs
adc
mov
cwtl
jb
xor
sub
lahf
add
mov
loopne
test
xor
movsl
ljmp
nop
jb
xchg
push
adc
mov
les
sbb
push
leave
mov
mov
add
jle
pop
adc
mov
fidivrs
or
add
jecxz
add
popa
bound
std
scas
push
cwtl
xor
mov
fcmovnb
or
in
jg
push
cmp
cwtl
jbe
fwait
jmp
dec
orb
push
mov
inc
popf
cmp
push
out
iret
jno
cmc
inc
sub
and
dec
divl
popf
inc
push
or
je
insl
push
xchg
pop
mov
add
cmp
xor
mov
sar
std
repz
movsb
out
imul
test
arpl
jb
xchg
fwait
aad
inc
cmp
xor
jmp
lods
js
loop
push
arpl
enter
dec
mov
shl
les
jg
add
add
cltd
ja
mov
sbb
fs
fisubrs
push
ss
push
push
jmp
sbb
push
adc
xchg
int3
xchg
lds
nop
adc
and
sbb
hlt
insl
dec
xor
xchg
push
loopne
jle
hlt
int
pop
push
fdivrl
insl
aam
mov
or
add
and
lahf
mov
popa
stos
mov
ror
jmp
jns
mov
or
fsubrl
test
lods
mov
data16
scas
mov
mov
outsl
sbb
out
adc
dec
jae
and
dec
xor
and
mov
pushf
scas
inc
jno
inc
jae
imulb
push
and
xchg
fldcw
adc
xor
mov
stc
aas
fcmovne
add
push
imul
xor
inc
stos
shlb
in
pop
leave
pop
cmpsb
lods
adc
mov
xchg
outsl
adc
adc
loope
insb
rorb
inc
enter
jl
movsl
push
mov
mov
inc
and
subb
gs
xchg
cwtl
in
pushf
mov
push
jbe
insl
push
sbb
cmc
pop
add
fcomp
das
jle
scas
ret
adc
fdivs
cmp
jns
xchg
lods
push
js
rorl
xchg
adc
leave
inc
cmpsl
fcmovb
cmp
in
fimull
or
lods
xor
inc
mov
imul
addr16
mov
mov
mov
xor
sub
mov
call
mov
lds
inc
mov
push
inc
loope
jp
and
jbe
push
add
dec
pop
out
in
bnd
aad
jo
jne
or
dec
cmp
fs
arpl
test
pop
bound
mov
mov
out
mov
or
ret
sarb
mov
jmp
sbb
test
add
sbb
mov
cs
insb
ljmp
jnp
out
adc
fistpll
mov
or
fidivrs
out
or
sbb
jns
aam
or
add
fcomp
add
mov
dec
hlt
pop
sbb
stc
insl
mov
mov
movsl
mov
mov
cld
ss
movsb
lds
sbbl
cmp
jle
lret
ja
rclb
and
fisubrs
adcb
pop
daa
scas
sti
loop
push
mov
lret
daa
xchg
lods
cmp
and
push
rcl
xor
inc
mov
dec
movsl
movsb
fstpl
xor
notl
jnp
call
iret
mov
dec
or
in
xchg
cmp
andl
jo
mov
lea
aaa
cmp
loop
pop
push
mov
enter
ficoms
mov
subb
adc
daa
push
mov
sti
and
out
mov
push
pop
mov
mov
scas
loope
cmpsb
xor
push
jecxz
push
stc
pop
out
sbb
outsb
jae
aam
mov
scas
fcoml
insl
pop
xor
push
push
aaa
push
push
add
in
popf
and
aaa
inc
cmc
dec
ljmp
repnz
and
jg
je
lahf
sahf
bound
out
aam
cld
imul
je
dec
repnz
inc
push
lcall
xor
xchg
ss
int3
or
and
scas
daa
jbe
push
fs
daa
cld
repz
fidivl
lds
popa
push
push
fsub
ficomps
inc
xchg
rcll
stos
lods
inc
jp
sti
dec
jl
icebp
jge
nop
dec
xchg
jmp
stc
mov
loop
pop
xor
lods
gs
push
out
test
push
das
xchg
adc
divl
imul
and
shrl
push
jecxz
push
sbbb
sbb
mov
lds
xor
daa
ret
fldt
or
pusha
pop
push
adc
mov
mov
mov
repnz
push
popa
push
mov
jl
dec
enter
in
in
mov
popf
jo
inc
mov
jecxz
fldcw
sub
out
out
mov
cmp
popa
fwait
out
xchg
jp
mov
push
clc
popf
scas
or
dec
fstpl
mov
in
xchg
ret
ljmp
pop
xchg
and
ja
movsl
inc
out
xchg
or
sbb
xchg
ja
jb
in
dec
mov
pop
cmp
fists
lcall
sti
mov
push
xchg
mov
adc
xor
dec
xchg
xchg
adc
sti
jl
pop
xor
rcrl
in
divb
sbb
push
sahf
out
and
dec
fists
push
mov
jp
inc
and
daa
jmp
lods
adc
dec
lret
add
popl
and
mov
push
call
mov
sahf
es
add
test
outsb
mov
mov
fldenv
mov
in
icebp
sahf
jge
or
pop
out
inc
lahf
insl
or
mulb
aaa
test
inc
loope
pop
insl
ljmp
pop
addr16
call
push
inc
stc
sub
mov
divl
arpl
and
test
roll
in
bound
rol
cmpsl
loop
add
and
and
pushf
xor
sub
jmp
aas
scas
mov
clc
and
adc
mov
out
sub
dec
lock
rorb
pop
lahf
sbb
xlat
add
mov
mov
fstps
inc
roll
add
test
and
ljmp
or
jnp
in
inc
in
fsubrs
out
aaa
aam
or
xchg
adc
xchg
movsb
shll
pop
ds
jle
dec
or
xor
rcrl
lret
in
sub
das
cli
xor
or
jo
add
or
mov
in
pop
xchg
out
cltd
jl
xor
mov
loope
stos
xchg
push
nop
repz
repnz
mov
xchg
mov
aas
inc
jg
mov
lret
movsl
pop
inc
pushf
fimuls
cmpsl
lret
cmc
shlb
icebp
pop
cltd
jle
inc
popa
mov
pop
add
add
arpl
imul
mov
insb
outsl
sbb
in
test
lret
loope
pop
rcrl
pop
mull
lahf
outsb
xor
divb
mov
cmpl
jl
jp
mov
sub
push
arpl
push
ss
shrl
xchg
pop
cmp
dec
xor
lea
daa
and
add
fcmovbe
pop
or
xchg
xlat
or
adc
iretw
mov
aad
sbb
lods
dec
pop
inc
dec
xorl
or
test
lret
mov
sahf
mov
mov
xor
and
adc
jge
int3
xchg
mov
add
mov
nop
ljmp
inc
mov
test
repz
xor
jmp
test
add
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
sbb
adc
addl
daa
fidivs
test
sbb
stos
imul
or
ja
dec
jns
inc
nop
ret
cmp
or
and
das
incl
sbb
ja
cmp
iret
fldt
push
xchg
sub
loopne
daa
jne
push
add
jnp
or
repz
inc
icebp
rclb
fcompl
xchg
sub
rcl
scas
js
mov
dec
xchg
stos
test
cmp
lock
xchg
add
adc
wbinvd
sub
xchg
adc
mov
inc
pop
ret
push
inc
lds
test
adc
movsb
loopne
xor
jbe
out
pop
or
pusha
sub
ljmp
push
pop
add
mov
ror
aas
inc
lahf
insb
cmp
mov
fwait
popf
into
adc
data16
filds
mov
adc
rcl
dec
inc
lea
lock
inc
addr16
lds
pushf
push
mov
add
mov
jae
insb
movsb
hlt
add
fisubrs
cmc
mov
xchg
adcl
lea
addl
insl
jp
fcom
and
mov
xor
jp
mulb
adc
mov
in
sbb
xchg
cld
subl
push
mov
dec
push
adc
fmull
je
mov
xor
and
xor
dec
repnz
jae
pop
cmp
pop
loope
test
jnp
fcmovnb
js
pop
test
pop
les
xor
loope
jecxz
mov
lea
scas
push
xchg
arpl
jnp
or
xchg
test
mov
fbld
pop
xor
xchg
icebp
sub
jecxz
lods
ret
lahf
push
sub
cmp
rcll
xchg
scas
loop
mov
lods
jl
test
push
test
fs
sub
loope
ja
imul
adc
xor
mov
daa
dec
cmp
dec
insl
test
clc
dec
out
outsl
add
test
jo
or
imul
fsts
stos
popa
int3
les
xor
xor
sbb
mov
outsb
test
jg
cli
test
addl
outsb
sbb
add
sub
xchg
int3
popf
cmpsb
cld
sbb
add
push
scas
xor
and
pop
xor
es
mov
dec
fmul
xchg
insl
lock
sub
setl
cwtl
insb
adc
nop
jmp
add
jae
fistpll
cmp
add
in
jp
enter
add
rolb
gs
in
pop
mov
mov
int3
rorb
or
fsts
out
inc
dec
lods
sbb
mov
sbb
test
dec
int3
jl
push
fld1
jo
jbe
das
sti
stc
into
mov
cmpsl
xchg
rcrb
icebp
cmp
out
inc
clc
mov
sub
rcll
pop
fldt
push
cmp
in
into
and
aam
xor
aad
sub
imul
rcll
sahf
inc
or
out
enter
in
mov
pop
je
mov
pop
fisttps
movsl
and
push
sub
popa
pop
jmp
out
loop
cmp
and
adc
es
arpl
dec
dec
xorl
cltd
addr16
xor
dec
fsubs
in
sarb
mov
leave
cmpsb
cmp
test
dec
loop
scas
mov
jno
push
or
call
into
jmp
pop
jb
cmpsl
fs
imul
gs
enter
sub
mov
jge
xchg
int
daa
lock
or
dec
scas
ja
pop
add
pop
daa
dec
xlat
sbbb
es
lock
inc
xor
insb
inc
cmp
dec
mov
pop
jg
mov
lods
nop
jmp
pusha
pop
push
push
mov
add
add
adc
push
push
lds
out
mov
jl
aas
iret
mov
cmp
js
mov
mov
mov
pusha
js
loop
shll
push
ficoms
sub
hlt
inc
cmc
ja
inc
repz
pop
mov
push
or
push
mov
jge
ds
repz
arpl
xlat
repnz
mov
add
xchg
xchg
sub
loop
test
lods
jne
jns,pt
fadds
or
popa
dec
jno
in
out
mov
mov
xor
mov
xchg
mov
xchg
push
call
lahf
movsl
and
dec
das
jb
push
pusha
int
fwait
or
add
xor
dec
inc
and
iret
jmp
lods
addl
lret
add
add
aad
sub
je
in
and
loope
and
pop
dec
fcmovnbe
out
out
testl
xchg
fpatan
testb
outsb
mov
pop
jne
or
mov
push
sub
fstps
cmc
loop
mov
jno
cmp
adc
or
loopne
jg
jnp
or
adc
fwait
mov
mov
sub
mov
mov
js
es
inc
lea
push
shlb
ret
iret
imul
imul
shlb
imulb
js
cmp
scas
gs
and
pop
je
int3
adc
les
and
and
cltd
les
shlb
sbb
sub
push
movsb
xrelease
cmpsl
cmp
mov
test
push
call
shll
fwait
insb
dec
nopl
jae
pop
inc
mov
xlat
dec
dec
nop
popa
cmp
mov
cld
daa
in
jnp
not
or
sub
add
sub
mov
sbb
int
loopne
outsl
int3
adc
cwtl
pop
or
enter
sar
pop
neg
dec
in
clc
out
push
insl
pop
sbbb
mov
or
sti
lea
pop
dec
std
xchg
shll
into
sbb
mov
les
mov
cli
inc
test
rorl
cmp
in
or
jmp
and
xlat
ja
shlb
pushf
outsb
movsl
mov
add
int3
dec
push
fsubrl
daa
aad
sbb
mov
sbb
xor
ret
push
xchg
jecxz
leave
xchg
insl
jle
sub
mov
in
pop
xchg
mov
nop
pop
jo
jne
and
add
sub
xchg
out
add
mov
ficoms
dec
mov
jno
in
mov
mov
test
push
cmp
xchg
xchg
dec
lods
xor
imul
shlb
stc
std
inc
inc
cmp
in
setne
ret
es
jg
lods
cs
mov
mov
cli
xchg
lock
jecxz
cmp
popa
xorb
lret
dec
enter
test
jo
imul
scas
mov
imul
push
jo
mov
cmpsl
and
nop
xor
jg
inc
lods
and
sbbb
xor
pop
lods
sub
sbbb
adc
call
loop
iret
fucomi
inc
mov
xor
inc
lcall
add
xchg
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
adc
jno
jbe
movsl
int3
dec
sbb
mov
test
les
pop
cmp
cs
idivb
test
outsl
arpl
sbb
lret
adc
arpl
mov
add
or
popa
js
std
rcll
push
loopne
aam
cwtl
cltd
data16
popl
mov
es
into
dec
fnstcw
jmp
hlt
leave
stos
outsl
or
jg
jo
jne
xchg
rcr
lret
mov
sbb
xchg
cmp
pop
jo
rorb
in
or
es
pop
cli
add
cmc
loope
pop
rol
sbb
xorl
add
jno
inc
cli
ds
imul
in
movsl
negl
xor
test
and
adc
shl
adc
fcomps
dec
or
inc
std
fcom
loopne
out
arpl
mov
mov
sub
in
mov
subl
push
out
adc
in
inc
sub
jns
xchg
idivl
or
out
sahf
sub
lahf
xor
sub
inc
and
jmp
leave
adc
push
inc
jo
mov
in
dec
mov
mov
pop
int3
xor
popf
xchg
mov
mov
pop
jl
cli
lret
cs
inc
lods
aas
sub
scas
jbe
adc
xor
fiadds
subl
xchg
cmc
push
lcall
loope
add
fwait
mov
push
jge
pop
sub
push
aas
inc
hlt
pop
add
iret
inc
push
mov
add
mov
or
int
in
loop
push
sub
jb
sbb
shlb
mov
ficoml
stos
cmpsb
shlb
and
or
sub
sub
pop
mov
mov
xchg
and
in
cmpl
daa
mov
pop
xorl
icebp
loopne
pusha
mov
sub
popa
iret
orl
adc
pushf
lds
push
push
dec
out
ret
jg
mov
adcb
mov
sub
adc
add
sbb
sbb
xchg
xor
std
sbb
xor
xor
enter
call
shll
jle
enter
push
xlat
mov
adc
jo
lds
sbb
mov
sbb
clc
rorl
lea
jg
jbe
add
inc
out
icebp
sub
dec
sub
and
es
out
sbb
jns
cmc
add
movsl
xor
mov
mov
popf
and
mov
pop
mov
fistl
inc
xor
leave
stos
pushw
sbb
or
arpl
imul
mov
xor
nop
cld
mov
pop
xchg
outsb
aas
add
imul
lock
mov
cli
scas
jnp
push
int
push
jno
ja
dec
pop
inc
adcl
loope
dec
sti
inc
rorl
js
xor
lret
gs
cmp
and
adc
cmpsl
pop
sbb
rcrb
or
and
mov
pop
push
lds
loope
mov
fistps
ja
pop
int3
mov
scas
and
call
mov
mov
add
jo
stos
outsl
or
outsb
repz
fidivrs
push
cwtl
movntq
scas
lods
mov
ret
icebp
add
loop
data16
inc
loopne
pop
stos
iret
jb
js
mov
arpl
or
jg
push
mov
aad
fisttps
out
jb
repnz
ret
jb
inc
cmp
mov
dec
push
bound
xchg
les
jns
lock
les
nop
cwtl
sbb
xchg
inc
je
and
sbb
jg
shl
into
ret
mov
outsb
add
aad
xchg
mov
sub
xchg
test
cmpsb
cli
rcpps
scas
popa
xchg
mov
cld
add
or
sbb
add
aaa
xor
lea
idivb
aas
shll
fidivrs
xchg
xchg
ds
mov
mov
enter
ja
sbb
inc
sbb
loop
loop
mov
xor
jns
xchg
adc
out
or
push
ljmp
dec
mov
rorl
scas
dec
test
jno
scas
rclb
cmp
test
xor
lcall
fs
cmp
sarl
insl
lahf
jo
pop
std
mov
xor
std
inc
mov
or
dec
js
pop
sub
ds
mov
ss
jae
push
dec
fistpll
movb
addr16
jbe
bound
dec
cs
mov
hlt
fdivrs
in
cwtl
mov
fs
push
inc
sub
rorl
mul
das
repnz
testb
insb
cmp
imul
add
push
rcrl
and
imull
fisubs
in
inc
lods
or
jmp
xor
jnp
ret
cmp
dec
xchg
xor
paddb
popa
xor
mov
xchg
mov
cld
aad
cmovne
and
insb
jno
sub
rolb
fs
popa
popa
pop
cwtl
cmp
pop
pop
or
fdivrl
mov
adc
mov
stos
jge
shl
arpl
mov
jne
int
dec
nop
pushf
lds
xor
lea
and
les
mov
sub
sbb
jns
popf
pop
shrb
inc
out
into
pop
out
pushf
push
inc
sbb
dec
insb
add
fdivrp
or
mov
xor
xor
pushf
push
movsb
js
inc
mov
inc
mov
push
subl
fbstp
ljmp
mov
outsl
aam
sarl
dec
in
jle
xor
push
mov
push
fs
int
int
sbb
insb
sub
daa
fstpl
push
push
cli
ret
scas
sti
inc
jecxz
pushf
or
mov
inc
pop
in
shll
dec
pop
inc
dec
jae
cltd
int
daa
lea
stos
and
xor
cmpb
je
dec
in
mov
mov
mov
scas
push
dec
xchg
jle
inc
mov
dec
adc
add
jl
aad
sbb
call
andb
inc
mov
push
fmul
inc
and
push
dec
xor
sub
pop
loop
cli
pop
xchg
lds
adc
ljmp
jmp
in
pop
or
mov
cmc
sbb
and
or
xchg
pop
xor
lds
push
cmp
cmp
and
mov
adc
daa
lahf
sti
sbb
add
aaa
mov
rcrl
iret
les
data16
lret
sbb
jne
mov
mov
gs
scas
push
cmp
mov
push
in
ss
and
xchg
cmp
or
push
imul
lcall
ja
dec
mov
ja
sbb
dec
and
filds
pushf
push
push
bound
add
shrb
ds
jmp
jb
daa
aad
jns
cmc
stos
dec
leave
adc
push
mov
les
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
pop
mov
mov
movups
pop
xor
ficoms
mov
call
sbb
popf
mov
fs
fnstcw
ljmp
rorl
fisubs
mov
push
dec
add
mov
jae
jecxz
addr16
cs
xchg
lods
xor
hlt
lcall
pop
cmp
lods
mov
xor
clc
dec
push
popf
cmpsb
and
jl
or
dec
or
std
in
sarl
jnp
push
cli
movsl
inc
and
fmull
jg
subl
xorl
push
cmpsl
addr16
cmp
js
cmp
or
mov
cld
cwtl
add
push
inc
mov
shrl
xchg
sbb
xorl
jmp
int3
jge
out
aam
push
sbb
test
jle
inc
popf
mov
test
dec
jg
fsubr
testl
mov
aas
dec
ja
lods
pusha
push
mov
cmpsb
adc
aad
cli
or
andl
add
out
sbb
daa
insb
push
int3
mov
sub
in
inc
test
scas
or
mov
pop
mov
sub
out
imul
jbe
dec
lods
ljmp
fs
fbstp
xor
push
cmp
push
mov
lock
mov
sbb
adc
inc
xor
or
mov
cwtl
mov
imul
pop
xor
outsl
in
fldl
and
imul
ljmp
dec
push
pop
adc
in
inc
pop
adc
or
xor
push
and
addb
idivb
xchg
repnz
aam
in
dec
and
dec
pop
pop
push
clc
shl
jle
movsl
mov
imul
shll
xor
dec
jge
daa
flds
cwtl
mov
push
notb
fdivr
or
out
cmp
repz
ret
add
inc
in
mov
pop
adc
inc
mov
inc
push
adc
and
pop
lds
sti
add
js
cli
or
jmp
ror
dec
fcoms
or
push
dec
xorl
aam
pop
fnsave
adc
add
xor
adc
xchg
lret
inc
movsb
inc
or
pop
sbb
cmp
out
es
vcomisd
mov
pop
mov
idivl
daa
verr
pop
push
cmp
pop
aas
and
mov
xor
push
sbb
dec
insb
pop
sbb
pusha
push
mov
data16
xchg
xor
xlat
or
repnz
in
popa
in
add
sbb
cwtl
enter
mov
lea
pop
and
pop
out
mov
pop
out
ljmp
mov
fldt
inc
add
xor
out
stc
xor
cmp
lods
jbe
fcomi
cmp
push
mull
jp
mov
cmp
push
jne
mov
gs
test
or
fsubl
add
inc
stc
or
xchg
cmp
das
mov
outsb
xchg
xchg
xor
cs
inc
sbb
iret
leave
push
or
push
dec
jle
out
adc
cld
das
sbb
push
popf
mov
lds
arpl
xchg
mov
mov
sub
jp
pop
popa
jl
xor
mov
in
xchg
je
mov
mov
xchg
mov
bound
inc
xor
dec
cmp
or
aaa
cwtl
cmp
adc
insl
mov
sbbb
addl
sub
dec
ficoml
push
jl
sbb
pop
scas
ret
fs
push
mov
ja
in
outsb
or
les
xor
leave
test
pop
lods
cmp
les
and
mov
adc
clc
scas
pop
pop
ja
fwait
lret
addr16
jnp
out
cltd
add
pop
cld
sbb
and
cs
gs
push
bound
insl
mov
mov
outsl
push
int3
loope
mov
ficompl
rcrb
xchg
ds
lcall
nop
fsubr
movsb
pop
xor
lsl
punpcklwd
sbb
aam
popf
inc
xchg
lods
sti
xchg
fcomps
sbbb
pop
sbb
mov
inc
loop
xor
movsl
inc
das
test
inc
jmp
ret
push
add
test
xlat
popa
mov
and
add
mov
cmp
pop
cmp
xchg
in
jmp
test
dec
aad
scas
and
fsubl
imul
mov
loope
and
mov
mov
push
and
mov
lock
jg
inc
enter
lock
push
sub
xor
or
xlat
cmp
dec
jge
dec
in
xchg
mov
lret
mov
mov
enter
adc
mov
mov
mov
gs
mov
popa
sar
rorb
out
cld
pop
cmpb
or
rorb
pop
cmp
testb
aas
mov
push
clc
out
cs
sar
xchg
rcrb
scas
insb
shl
out
adc
aam
xor
dec
adc
jae
mov
push
or
sar
mov
test
cmp
mov
jg
pop
sahf
imul
sub
das
inc
pop
add
and
mov
mov
hlt
hlt
loopne
xor
jge
push
xchg
jmp
adc
dec
cmpsl
or
repnz
mov
cwtl
mov
addr16
xchg
stc
addl
push
pop
stos
in
shl
mov
jo
push
xor
lahf
pusha
mov
ror
push
jbe
icebp
mov
fldcw
sbb
int3
pop
sarb
rolb
sbb
loop
xchg
push
push
rcrb
loopne
xchg
sti
or
scas
fwait
insb
enter
out
sahf
outsb
subb
pusha
stc
push
add
and
mov
sbb
xlat
js
and
dec
dec
xchg
inc
dec
cmpsb
push
xor
and
imul
inc
mov
test
cld
mov
mov
inc
mov
popa
push
or
add
movsl
aaa
push
jns
fbld
sbb
pop
fists
adcb
xchg
push
push
push
mov
cmp
sub
sbb
jge
jns
mov
decl
xchg
jb
push
mov
mov
and
push
idivl
adc
ja
pop
dec
aad
mov
xor
cltd
roll
in
ror
inc
sbbl
mov
enter
fcoml
ja
insb
out
mov
pause
sbb
dec
lahf
jmp
pop
sub
scas
pop
and
cmpb
nop
stos
iret
xchg
adcb
pop
rorl
inc
ss
dec
loop
jmp
mov
and
fstl
add
call
imul
leave
inc
movsb
mov
pop
faddp
mov
mov
dec
sbb
add
inc
dec
aam
xlat
scas
incb
xor
jno
or
cltd
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
dec
rclb
adc
addl
loope
cli
rorb
xchg
insb
adc
add
xchg
jns
xor
ror
fildll
aaa
dec
pop
adc
add
mov
push
xchg
loop
and
sti
adc
subb
fs
mov
adc
pop
aam
ja
push
xchg
push
sbb
jmp
addr16
fadd
mov
js
fiadds
outsb
std
pop
rcr
lret
xor
sbb
push
loopne
mov
jne
or
or
mov
in
enter
in
adc
inc
icebp
insl
insb
stos
xchg
outsl
mov
push
hlt
jns
or
mov
jne
adc
fcmovne
jmp
xchg
lret
mov
sti
faddp
dec
jmp
xchg
outsb
int3
mov
ljmp
idivl
int
xor
mov
insb
jecxz
and
xorl
dec
cmp
clc
push
insb
xchg
scas
adc
adc
ret
cmp
sub
sub
mov
dec
das
out
mov
mov
stc
insb
sub
int
test
cli
mov
mov
mov
pop
jp
aas
aas
cmp
lods
pusha
adc
fisubrl
xchg
add
fmul
cmp
fisttpll
xchg
in
sbb
roll
jne
xor
outsl
jbe
xchg
in
jecxz
sub
popa
push
xlat
int
loop
aas
inc
into
dec
sbb
jns
arpl
push
add
cmp
mov
roll
insl
shl
test
dec
ja
inc
div
mov
add
data16
add
out
mov
lods
aam
push
mov
and
pop
add
sub
adc
jne
inc
mov
mov
push
and
out
jnp
jnp
mov
cmp
sbb
mov
scas
mov
sbb
into
push
stos
adc
push
adc
leave
push
imul
loop
stc
gs
mov
add
mov
cmp
clc
pusha
sub
in
pop
fstps
subb
dec
xchg
or
push
and
fcmovnb
sbb
cmp
mov
sub
lahf
jno
cwtl
inc
in
pop
out
jo
xchg
xor
inc
xor
jecxz
pop
push
in
or
dec
arpl
xchg
nop
pop
jge
mov
add
xchg
xchg
addr16
pop
push
imull
test
push
inc
lods
movsl
cmc
pushl
inc
mov
mov
jnp
sub
aam
fidivl
test
mov
cmp
mov
mov
and
and
xor
pop
push
pop
repz
lret
xchg
enter
mov
push
mov
mov
rcr
xchg
mov
mov
jno
aad
adc
inc
push
test
fidivrl
adc
fldcw
xchg
push
push
test
shrl
push
rol
test
and
test
xchg
rorl
and
data16
cli
cmp
ret
mov
jmp
in
inc
test
cs
stos
int
je
cmp
pop
stc
roll
xchg
popa
ljmp
ficompl
pop
adc
dec
and
inc
push
fscale
xor
hlt
sub
xchg
rorb
test
mov
leave
iret
test
xchg
adc
jp
insb
mov
mov
jno
add
and
pusha
lret
cmp
daa
mov
pop
jle
lock
notb
sbb
hlt
jno
clc
xor
mov
or
imul
and
mov
pushf
sbb
jnp
cli
adc
xlat
popa
xor
std
scas
mov
jle
xor
insl
scas
jo
xlat
or
mov
cmp
adc
and
test
sbbb
jns
jg
out
xchg
or
xchg
int3
lock
mov
inc
aas
mov
inc
aas
notl
popa
test
sbb
dec
xchg
pop
and
daa
jbe
fcmove
es
loope
mov
les
xchg
sti
and
add
mov
xchg
inc
dec
dec
popf
jge,pn
sbb
pushf
xlat
hlt
jb
mov
cmp
psubusw
cltd
loop
in
inc
mov
push
xor
and
pop
inc
add
cmp
fisttps
insb
nop
sti
hlt
push
popf
fnstsw
clc
xor
pop
arpl
pop
fwait
sub
imul
lods
mov
adc
outsl
cmpsb
mov
mov
fdivs
xchg
push
pop
movsl
lods
mov
ror
shrb
add
movsb
clc
pop
jg
xor
adc
jo
sbb
fbld
push
stos
and
push
mov
and
xchg
push
rorb
add
adc
jl
cmp
xchg
repz
jns
sahf
jne
repnz
fdivrl
push
hlt
repnz
roll
xor
leave
imul
pop
cmp
mov
stc
fdiv
fsubl
push
mov
adc
mov
pop
add
cltd
loope
jo
push
fisubl
xor
jo
jo
add
pop
add
sarb
mov
push
mul
xor
cltd
or
inc
sbb
push
xor
lock
mov
xchg
adc
add
push
push
pop
mov
negb
ret
adc
jg
or
in
jl
out
push
subb
mov
sbb
and
and
jns
pop
jp
pop
repz
mov
jmp
sbb
push
lock
and
into
sbb
push
jle
lea
outsb
lock
push
loopne
sbbb
call
jmp
and
mov
dec
test
cmp
dec
fsubrl
cmp
enter
xor
sbb
xor
cltd
mov
mov
jg
xlat
cmp
imul
rol
in
cmc
in
lcall
and
shlb
ds
jl
in
cmp
mov
lds
xchg
push
sbb
je
movsl
repz
popf
lods
bound
pop
fmulp
lods
lcall
int3
mov
pop
inc
cld
roll
sbb
jne
pop
sbb
push
bound
xchg
push
adcb
filds
loopne
movsb
pop
in
in
sub
dec
mov
pop
mov
inc
push
cld
lret
stos
stos
subb
add
fprem1
cmpsl
mov
loop
ret
add
scas
insb
push
mov
mov
adc
xlat
loopne
sahf
xor
int
sbb
sub
sbb
mov
xchg
out
sub
stos
jle
std
repz
mov
aaa
and
cmp
jmp
pusha
mov
pop
mov
dec
stos
cmp
mov
sbb
lret
inc
stos
filds
out
xchg
loope
sub
or
shl
frstor
loopne
int
add
jg
call
adc
mov
pop
ss
clc
aaa
fldenv
push
xchg
test
push
shl
popf
fldenv
xor
xorb
out
or
pop
dec
mov
lods
out
sub
popa
jo
mov
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
aad
add
cmp
push
pusha
into
cwtl
hlt
xor
inc
testl
test
lods
jae
xchg
movsl
ret
push
out
insl
in
insl
adcl
sub
sub
imul
int3
jae
test
ficompl
and
bound
push
jne
xchg
popf
sub
mov
jg
mov
rorl
outsl
lcall
imulb
mov
sarl
insl
xor
inc
jecxz
fisttps
dec
adc
imul
popa
cltd
cmpsl
mov
popa
shr
jae
pop
imulw
dec
mov
push
xchg
add
cltd
ret
sbbl
fidivl
in
sarl
sbb
mov
sti
fadd
xchg
adc
insl
jg
pop
dec
nop
cmpsb
mov
aas
dec
mov
cmp
fnstenv
pusha
roll
cltd
es
ja
cmp
lret
fdiv
popa
int
lea
cmp
jae
leave
xor
sub
sbb
aad
or
xor
dec
adcb
test
outsl
xchg
mov
push
scas
xor
imul
inc
aam
push
cmp
jne
dec
fcoml
stc
dec
add
add
in
mov
jl
push
xor
roll
push
inc
mov
sbb
and
sbb
xor
dec
push
cmp
aad
iret
push
inc
push
add
xchg
test
sarl
dec
adc
lds
cmpsl
mov
not
fdivr
sbb
shlb
mov
or
loopne
fwait
push
outsb
stos
movsb
dec
add
movsb
xor
and
hlt
cmp
inc
push
cmpsl
inc
or
rorl
mov
into
mov
sbb
fsubl
cltd
aaa
mov
gs
lcall
pushf
xor
sbb
call
mov
adc
sub
stos
dec
pop
hlt
fmul
jns
rcrb
and
popa
mov
jns
lahf
xchg
inc
sub
je
mov
call
sahf
roll
stos
pop
sbb
xor
js
shrl
xchg
js
or
or
mov
push
aaa
pop
dec
mov
and
cmpsl
xchg
addr16
mov
int3
hlt
jge
jb
int
lret
pusha
popf
xor
or
sbb
aaa
jne,pt
xchg
sbb
and
or
jnp
or
mov
sub
out
dec
add
inc
adc
cwtl
adc
popa
stos
push
fxch
cmpsl
loop
xor
adc
lahf
mov
gs
inc
adc
addl
sahf
leave
in
cmp
movzwl
push
call
pop
jae
and
or
jge
or
pop
repz
imul
pop
pop
sbb
in
inc
inc
jp
cmpb
lret
insb
cmp
cmp
dec
out
inc
aas
pop
addr16
push
out
fwait
dec
xor
mov
fimuls
sub
frstor
mov
push
cmp
xor
stc
out
mov
lods
xor
cltd
xchg
outsb
ja
jg
jnp
hlt
sub
dec
xchg
push
js
mov
fadd
clc
data16
enter
jae
push
sub
jle
cmpsb
jns
insb
sub
test
cmpsl
leave
cmpsb
out
movsb
mov
push
adc
push
lea
sbb
shrl
mov
xor
push
test
aam
cwtl
mov
push
xchg
addr16
xchg
push
push
loopne
in
cwtl
movups
subb
jnp
dec
mov
aas
cltd
mov
sub
add
cmp
pop
in
jnp
leave
add
imul
outsb
iret
pop
dec
dec
cli
jl
xchg
push
push
mov
stos
sbb
pop
pop
scas
inc
ret
inc
push
aam
adcb
xor
stos
and
lock
repz
inc
loope
sub
jae
mov
mov
into
dec
jnp
testb
jmp
pop
xchg
dec
jge
idiv
repz
aaa
or
inc
ret
inc
ret
xchg
cmp
mov
in
dec
add
aaa
cmp
push
lds
push
push
cwtl
jnp
add
les
pop
in
lahf
sub
insl
and
mov
dec
mov
jle
out
pop
inc
aaa
imul
test
call
or
xchg
out
out
cmpl
lret
xor
dec
mov
aam
mov
xchg
ret
dec
out
pushf
test
mov
sbb
js
inc
mov
aad
add
mov
jo
sahf
popa
bound
scas
roll
stos
xchg
cmp
in
movsb
sti
out
lahf
cltd
lahf
cmc
mov
mov
out
outsl
or
out
test
addl
dec
dec
rol
shl
dec
dec
push
gs
cmp
int
mov
cmpsl
popf
stos
and
push
push
xchg
xchg
mov
jo
js
pop
or
adc
inc
dec
les
fmull
push
sti
jbe
xchg
push
fdivs
pop
sarb
jno
adc
lea
jl
mov
push
pop
sub
push
xchg
outsl
and
js
pop
jecxz
cmpsb
data16
mov
add
pop
cmp
push
pop
push
je
add
sub
mov
dec
push
mov
dec
je
adc
xor
push
mov
xlat
jno
push
fidivl
js
mov
lcall
pop
xchg
sub
mov
inc
and
dec
insb
mov
pop
or
test
sbb
movsl
cmp
stos
mov
add
mov
popf
or
and
stos
std
lods
flds
iret
ljmp
aam
mov
jl
jns
js
repz
rcrl
mov
push
imul
pop
xor
or
cmp
push
jae
mov
lret
adc
sbb
mov
outsb
vpaddb
subb
mov
sti
push
gs
sub
pop
insb
dec
xlat
stos
mov
cmp
dec
mov
repz
adcb
stc
mov
fwait
test
dec
in
jmp
fwait
inc
mov
call
scas
sbb
das
jo
cmpsb
enter
push
ficoml
subl
adc
and
stos
int3
das
pushf
mov
repz
pusha
fistpll
mov
lret
mov
jmp
icebp
inc
mov
outsl
mov
popl
xor
add
and
loop
int
pop
aas
dec
mov
divb
std
xchg
cltd
cmp
notl
push
add
sbb
jb
jle
mov
lea
ficoms
jp
stc
mov
adc
xchg
pop
xchg
adc
adc
sbb
subb
xchg
push
test
js
mov
inc
dec
mov
push
pop
pop
xor
int3
stos
adc
adc
or
xchg
sbb
mov
mov
dec
in
jae
mov
mov
mov
pop
xlat
and
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
add
mov
addl
mov
pop
dec
pusha
ret
inc
jecxz
imul
frstor
inc
imul
mov
fisubl
add
test
in
xchg
les
push
xor
scas
cmp
inc
sahf
dec
bound
mov
pusha
push
lods
cmp
je
add
test
and
in
push
push
adc
mov
shl
jne
xchg
mov
mov
adc
insl
xor
sbb
push
mov
sub
cmp
jg
scas
mov
jo
sti
insb
sarb
loopne
outsl
cmp
incl
lea
cmpsl
push
sahf
sub
push
push
jo
or
test
je
and
fstps
and
mov
inc
aas
or
cwtl
mov
movsl
fstps
xor
dec
or
dec
dec
jg
jbe
mov
movsb
mov
inc
pusha
pusha
cld
mov
mov
push
cwtl
stos
jecxz
and
aas
std
inc
test
scas
call
lret
dec
dec
in
lods
xor
dec
rcrb
xor
mov
pop
fwait
adc
in
cli
xchg
sub
loop
ja
mov
das
mov
cs
fcomps
dec
rcl
pushf
shr
mov
fsubp
xchg
xor
add
inc
lods
add
cs
and
mov
pop
rcrl
adc
lods
repz
sub
jge
loopne
rcrb
imul
jbe
add
jbe
pop
fs
test
aad
pop
pop
stos
mov
insl
aas
out
loope
push
int
ljmp
arpl
xchg
sbb
or
mov
xor
pusha
imul
mov
xlat
or
add
sbb
adc
jne
aaa
repz
test
mov
jecxz
sbb
mov
sub
xchg
dec
sbb
sbb
pop
mov
mov
xchg
xor
mov
adc
arpl
xor
xor
inc
outsb
movsb
jle
jno
pop
or
or
add
xchg
insb
repnz
inc
sub
cmpsb
jl
subl
pop
and
sub
sarl
out
inc
xor
daa
out
push
das
sub
xchg
cs
sti
dec
test
test
cmp
loope
andl
pop
sbb
sbb
cmpb
lea
sub
sbb
ret
pop
pop
lahf
pop
pop
push
icebp
push
out
jo
ret
into
shll
test
addr16
shr
flds
cld
or
mov
mov
mov
cmp
push
sub
iret
mov
cmpsl
and
scas
fsubrs
push
mov
rcrl
xchg
ret
xchg
and
add
lds
push
push
je
aas
cltd
pop
iret
movsl
mov
lahf
aam
xchg
rcll
lahf
cmp
out
fldt
ds
push
push
inc
insb
je
inc
aas
xchg
inc
xorb
cmpsl
xchg
lock
mov
sbb
pop
es
cmpsl
cmc
std
aas
fnsave
cmp
mov
in
pcmpeqw
in
in
aaa
jbe,pn
cmp
mov
adc
ret
incb
testl
mov
pop
aam
push
outsb
enter
insb
jbe
adc
movsb
add
jl
cwtl
mov
rorb
mov
and
and
pop
and
add
fs
inc
xchg
xchg
mov
push
dec
add
pusha
andb
mov
jb,pt
imul
fstps
pop
jbe
jae
nop
pop
cmp
xlat
stos
int
or
adc
in
shufpd
mov
xchg
push
outsl
cmp
jmp
and
scas
pop
repnz
cmp
ret
leave
repz
push
stc
mov
mov
inc
inc
movsl
dec
jecxz
lock
xchg
insl
mov
imul
scas
iret
fmull
cmp
clc
mov
stos
pop
loop
xchg
mov
cli
cli
outsl
ds
jo
sub
push
adc
loop
rcll
aaa
popa
push
mov
shr
xchg
bound
xchg
push
add
jb
dec
loope
inc
shll
xchg
xor
mov
mul
pop
lret
push
push
push
aaa
pop
sub
sbb
loop
pop
mov
mov
xor
jo
jbe
sar
pop
outsb
mov
scas
sbb
mull
or
mov
js
mov
sub
sbb
jbe
shlb
dec
add
mov
inc
cmp
aad
dec
js
sbb
cli
repz
out
dec
jnp
mov
in
xchg
add
bound
loope
mov
sbb
xchg
mov
call
jg
mov
sub
in
cli
rclb
mov
pop
mov
in
mov
scas
out
xor
mov
filds
sbb
dec
mov
and
scas
cmc
out
iret
out
ret
jecxz
inc
out
loopne
push
xor
das
pop
imul
out
insb
fnstenv
icebp
leave
es
mov
repnz
mov
push
jge
test
dec
test
flds
jb
fmul
rol
ret
scas
popf
mov
push
out
jnp
push
ss
por
cwtl
pushf
mov
mov
leave
mov
inc
int3
ja
push
movsb
out
je
das
mov
movsb
call
je
sahf
push
jns
sub
pop
xlat
std
ror
into
sbb
and
sti
fsts
iret
or
adcl
jnp
pop
out
push
inc
inc
pushf
xor
test
call
dec
lods
lret
movb
fsubrs
testb
idiv
mov
pop
ljmp
test
cltd
xor
or
add
out
push
daa
addl
addr16
push
mov
std
add
cmp
int
mov
pop
push
js
jl
xor
pop
repz
jmp
loope
sti
jnp
adc
loope
pushf
lock
icebp
fcoms
repz
add
xchg
mov
and
cmp
jmp
mov
andl
cwtl
loop
mov
outsb
inc
cmc
mov
add
push
jb
les
stos
lods
sahf
int3
jecxz
adc
push
add
dec
in
vmread
sbb
sbb
xchg
jl
roll
shl
or
cs
adc
mov
ret
ss
call
ja
insb
adc
cli
inc
nop
jnp
add
jle
push
pop
xor
pushf
call
adc
and
jbe
loope
jo
adc
gs
mov
fsqrt
jecxz
mov
test
stc
pushf
dec
adc
mov
rorl
and
inc
pop
ljmp
jb
xchg
hlt
into
fstl
in
or
int
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
adc
mov
push
imul
sbb
sub
popf
shlb
pop
shlb
setnp
out
and
shlb
jae
cmpsb
dec
orl
cmp
and
fisubl
mov
imul
cmp
dec
pop
cmp
pushl
push
fstpl
xchg
mov
ja
fcomp
mov
sub
xor
in
xchg
jo
mov
add
mov
add
sub
adc
inc
data16
cli
int3
pop
inc
add
mov
jne
les
insb
sbb
xor
adc
loope
scas
push
hlt
fimull
nop
stos
dec
lods
hlt
nop
adc
jo
test
jge
xor
cmp
notb
dec
out
iret
shrl
addl
subl
push
cli
bound
shr
ret
mov
sub
out
jge
fimull
add
shl
sti
pop
ret
mov
rcll
add
in
ds
add
loopne
movsl
repnz
add
xchg
dec
ds
aad
mov
pushf
sub
mov
nop
xchg
js
xchg
xchg
jnp
sub
shrl
dec
pop
in
or
cld
lahf
popa
and
insb
inc
mov
shl
inc
int3
mov
gs
sbb
ss
jb
cmp
jle
xor
mov
mov
jno
sub
loop
mov
cmp
inc
int
sti
insb
fmull
fscale
and
in
rcr
mov
cmpsl
xchg
pop
arpl
xchg
ficoms
xrstor
mov
dec
cli
mov
inc
out
ret
dec
insb
das
pop
iret
sti
shr
lods
mov
cmpsb
and
ja
pop
pop
push
scas
subb
and
dec
divb
shr
loop
cld
inc
mov
out
adc
popa
scas
mov
das
mov
out
dec
sub
pop
sbb
lcall
out
jae
mov
pop
movsb
sbbb
sub
ret
adc
dec
dec
xor
ja
and
pusha
or
sub
or
mov
and
or
cmp
outsl
ret
mov
mov
test
inc
loope
cmp
stc
pop
rcll
les
mov
icebp
push
lds
sbb
mov
add
sub
push
lret
cli
and
cmpsl
cltd
lcall
call
cmc
enter
mov
js
test
mov
mov
pusha
mov
popf
or
hlt
adc
sbb
inc
and
lcall
mov
push
inc
pop
pop
push
addr16
int3
ficompl
jmp
adc
and
pop
sub
cmp
js
lcall
mov
mov
and
and
icebp
movsl
repnz
xchg
mov
mov
mov
call
mov
or
mov
add
or
sbb
mov
pop
add
fisttpl
push
pop
in
sbb
incb
ds
aas
lcall
cmp
mov
loop
cmp
inc
in
loop
movsb
mov
cmp
test
sbb
std
mov
sbb
pushf
imull
adc
add
sahf
jg
insl
inc
and
stc
cli
inc
shl
lahf
xchg
dec
mov
xchg
repnz
xchg
adc
jb
fldcw
loope
push
jecxz
pop
push
sub
mov
adcl
add
outsb
mov
cmp
ret
sub
fwait
mov
sbb
add
loop
cmp
push
rolb
and
inc
adc
jmp
lock
arpl
jmp
js
dec
addr16
cmpsl
dec
pop
cli
in
or
in
sbb
daa
shrl
rcrl
fcos
aas
mov
ja
call
mov
iret
movsl
push
cltd
icebp
lret
push
loopne
in
iret
inc
into
inc
xchg
xor
test
pop
xor
es
or
test
jle
fsubrl
and
cmp
ja
jg
dec
inc
mov
inc
shll
jns
nop
fldl
in
sbb
add
mov
adc
cmpsb
sbb
mov
fmull
out
repz
icebp
outsl
notb
leave
and
sub
jmp
imul
fidivrs
insl
push
add
ror
out
lret
ss
jmp
adc
scas
es
outsl
xchg
jl
push
pop
dec
std
or
jo
aam
push
out
pop
mov
mov
gs
lods
mov
adc
jb
adc
push
dec
daa
pop
mov
mov
dec
sbb
sub
xchg
stos
adc
jmp
fcmovnb
lods
adc
aas
ficoms
lds
pop
sbb
orl
dec
cmpsl
xchg
inc
xor
aas
push
and
popf
out
mov
adc
mov
lret
inc
test
mov
pushf
scas
mov
out
les
xchg
aad
add
cwtl
mov
stos
push
fldenv
lret
movsb
dec
pop
ret
adc
xor
insb
push
imul
rorb
rclb
insb
movsl
sahf
lret
mov
push
xor
push
push
rcr
mov
cmpsb
pusha
xchg
addr16
and
mov
xchg
lret
pusha
jne
xchg
js
mov
arpl
mov
fwait
fwait
shlb
adc
jbe
sbb
movsb
lock
mov
icebp
adcb
ljmp
pop
loopne
sub
cmpsb
xchg
test
jecxz
repnz
sbb
fidivl
pop
inc
xor
imul
adc
mov
dec
imul
and
xor
pop
in
loope
push
in
into
mov
mov
push
mov
orb
mov
cmp
inc
jp
sbb
mov
int3
lcall
pop
push
sbb
mov
mov
add
pop
xchg
push
pop
xor
jno
cmp
cmp
sbb
jb
stc
and
imul
jp
mov
push
add
test
int
ds
imul
mov
xchg
mov
mov
lds
xor
repz
mov
or
dec
mov
lahf
sub
sub
add
fldenv
cmpsb
pop
cmp
mov
mov
push
jns
jge
lods
lret
test
fnsave
mov
jne
mov
add
aas
hlt
xchg
mov
mov
aam
ret
xor
push
imul
out
jns
je
cmpsl
test
shll
rcrl
sbb
fprem
gs
jle
cmc
test
pop
cmp
roll
test
mov
fwait
lahf
in
testl
pop
pushl
pop
mov
push
xchg
jge
cmp
adc
cld
or
xor
vcvtps2dq
sbb
in
aam
cmc
jg
mov
push
cmp
arpl
xchg
push
ds
mulb
push
or
aam
sbb
mov
dec
clc
mov
jns,pt
repnz
xchg
fstl
pushf
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
cltd
xchg
mov
addl
push
sbb
push
mov
mov
decb
sbb
pop
jl
mov
mov
scas
dec
negb
cmp
fildll
jno
xchg
or
lahf
cmp
addr16
ds
fnsave
pop
jns
out
jne
scas
or
call
call
inc
pop
test
loopne
mov
mov
dec
or
out
mov
in
enter
adc
subl
popa
mov
hlt
out
add
les
pop
ret
fistpll
fildll
jbe
push
jle
jno
rcll
andb
mov
xchg
sub
pop
add
mov
loope
dec
xor
fdivrl
jmp
dec
sbb
jbe
adc
inc
xchg
push
shrb
push
pop
insl
xchg
lcall
mov
and
xor
jae
sub
or
lock
orl
rcrb
iret
pop
adc
jecxz
insl
scas
xchg
xchg
daa
int
mov
mov
popf
xor
dec
adc
gs
mov
shll
mov
dec
mov
out
lods
add
ficoml
pop
cs
inc
dec
and
sahf
shr
mov
insb
loope
xchg
jno
push
push
test
mov
sbb
stos
fisubs
mov
cmpb
lcall
cmpsl
iret
ljmp
push
icebp
fcmovbe
lods
dec
andb
mov
ret
fstpt
xor
into
xlat
sahf
dec
add
int3
outsl
into
lock
pop
in
sbb
lcall
mov
int
lcall
out
sbb
and
cmp
shl
addr16
push
out
jno
pusha
mov
dec
pop
inc
out
xchg
out
adc
push
jne
mov
xorb
inc
rolb
sub
lods
pop
fists
inc
xchg
cld
jbe
cmc
outsb
adc
in
inc
fmul
leave
sub
sti
mov
push
dec
dec
inc
inc
jbe
and
sbb
loop
sub
stos
and
pop
loope
add
aam
xchg
cwtl
and
mov
js
sub
movsb
js
lds
je
jbe
int
je
xchg
lods
sahf
test
cld
xchg
pusha
popa
stc
gs
arpl
rcrl
leave
sbb
xor
lock
mov
adc
xchg
cmp
lock
and
fistpl
pop
mov
xchg
jbe
xchg
mov
cmpsb
loope
in
fimuls
dec
sbb
push
sbb
cmp
arpl
sti
movsb
scas
mov
cmp
jge
cmpsl
js
je
packssdw
nop
mov
inc
pop
loop
cmp
popf
cmp
fwait
pop
leave
jae
adc
mov
das
jp
push
cmp
sub
dec
lods
mov
pop
scas
out
cmc
cmp
repnz
je
mov
cmp
in
push
inc
das
adc
lcall
aad
and
inc
push
stos
subl
xor
into
mov
sbb
xor
xorl
xchg
std
cmp
in
pop
ds
inc
daa
testl
pop
push
iret
pusha
js
dec
movsb
push
fimull
aad
mov
or
and
xor
call
lahf
and
or
lods
dec
or
inc
rcrb
sbb
ret
push
xchg
add
loop
clc
hlt
add
pop
pushf
divl
xchg
or
inc
jecxz
idivl
push
outsb
push
cmpsl
fcoml
push
mov
jns
xchg
xchg
or
rolb
xchg
mov
add
gs
roll
popf
nop
push
sbb
and
dec
jnp
subps
pop
pop
test
pop
adc
mov
mov
mov
cmp
sub
into
jmp
hlt
lock
loopne
cltd
iret
mov
test
lods
xchg
rcr
negl
and
mov
loop
push
push
sahf
cmp
jb
adc
jmp
xorb
mov
fs
dec
adc
daa
mov
lret
jbe
ds
lds
sub
call
roll
shl
in
and
gs
lcall
add
ss
stc
sub
notl
xor
mov
adc
lods
mov
inc
inc
adc
or
outsl
lcall
imul
mov
mov
mov
ds
sbb
jg
and
mov
mov
lods
jae
mov
std
sub
cmp
aam
pop
cwtl
bound
js
push
ss
cltd
pop
cmp
xchg
sub
movsl
int3
cli
cmp
push
cwtl
xlat
xchg
sub
ja
pop
call
popa
inc
mov
daa
insb
jmp
lret
sarl
sahf
add
rorl
pop
jb
xchg
add
test
fcos
jle
jge
ret
loop
sub
xor
xchg
out
lret
mov
call
mov
data16
xor
push
aaa
pop
pop
push
adc
mov
call
cmp
cltd
xor
lret
mov
sbb
xchg
sti
push
stos
aad
jo
lods
xchg
int
push
sbb
in
add
cmp
les
mov
outsl
ficompl
roll
aad
les
flds
popl
push
ljmp
fwait
xchg
jecxz
push
int
aad
adc
pusha
test
bound
sahf
dec
movsb
push
jg
add
notb
and
xchg
mov
inc
mov
mov
out
icebp
iret
arpl
lock
inc
inc
repnz
xchg
cmp
sub
or
stos
push
cmc
add
test
icebp
mov
lods
outsl
xchg
adc
jecxz
and
pop
ds
inc
xchg
pushf
out
adc
mov
inc
xchg
fwait
rclb
push
inc
test
mov
adc
add
nop
push
shll
inc
mov
mov
mov
mov
or
not
mov
pop
ret
xor
stc
mov
mov
inc
fnstsw
lcall
dec
push
mov
xchg
insb
mov
std
pop
aam
rorb
mov
ja
popf
xchg
adc
mov
loopne
fidivrs
hlt
or
pop
xchg
sub
imul
cmp
xor
xor
scas
inc
divb
stos
int3
stos
fdivrs
mov
out
cmp
stos
add
push
sbb
lahf
mov
sub
inc
addr16
adc
push
mov
sbb
push
enter
les
push
std
sub
stc
imul
outsb
nop
rolb
push
push
pop
xor
add
shll
bound
fwait
mov
in
mov
push
scas
push
inc
sub
mov
cli
in
xchg
aaa
ret
int
lahf
fnstcw
xchg
cmpl
mov
ljmp
mov
inc
in
js
or
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
jnp
dec
push
pop
cli
adc
jne
nopl
or
sub
xchg
rcrl
pop
fwait
jg
mov
mov
outsb
push
pop
aas
fucomp
xor
ja
pop
adc
ja
test
sub
iret
sbb
out
sub
mov
xchg
in
in
test
dec
mov
imul
push
fidivrl
stos
jb
repz
flds
iret
dec
lret
popf
arpl
xlat
out
clc
mov
inc
xor
add
xchg
jge
jae
popf
mov
std
std
aam
lret
lock
inc
mov
mov
jno
jb
and
jbe
notl
pop
into
pushf
call
xlat
scas
orl
adc
jg
xchg
push
mov
adcb
dec
scas
mov
xor
aaa
jmp
aaa
add
xor
xchg
faddl
adc
scas
jmp
xchg
and
or
mov
push
lock
add
jge
insb
xchg
lret
push
mov
test
mov
out
out
xor
adc
pop
cmp
mov
mov
dec
mov
and
mov
jns
add
add
mov
imul
mov
jl
cmp
idivl
mov
sub
jno
xchg
xlat
aaa
dec
cmp
fstp
enter
nop
xor
int3
cmp
lds
popf
and
test
pop
ret
sbb
push
dec
mov
mov
das
jo
nop
popa
dec
xor
pop
hlt
faddl
aaa
xchg
dec
stc
fistl
or
jae
mov
sbbb
mov
nop
xor
rorl
mov
mov
in
inc
sarb
out
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
