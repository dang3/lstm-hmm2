push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
xor
pushw
arpl
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
pop
mov
sub
xor
aas
int
call
mov
adc
mov
add
mov
and
adc
xchg
insl
pop
out
push
mov
pop
je
add
pop
xor
popa
cs
sub
pop
and
imul
mov
jbe
and
out
sbb
dec
bound
roll
lret
cwtl
mov
xor
jo
scas
mov
imul
loope
ficomps
add
loop
or
dec
popf
nop
aam
inc
stos
pop
push
or
int3
or
jmp
cmpsb
rep
or
outsb
in
mov
jp
dec
dec
dec
sbb
ret
cmp
sub
or
adc
xorb
xor
pop
in
xchg
dec
xchg
dec
mov
mov
aad
mov
not
jnp
xchg
xchg
pop
or
xor
sar
cmp
aaa
and
fdivrl
push
mov
icebp
int3
sbb
jns
inc
xchg
test
aam
outsb
cmp
lods
lock
call
test
out
daa
jne
or
movsl
push
cld
loope
in
enter
daa
inc
cmpsl
jg
inc
loope
xchg
fucomi
pop
mov
dec
jl
sub
repnz
test
imul
mov
mov
fidivs
push
pop
lahf
sub
xlat
add
test
enter
pop
inc
adc
bound
mov
mov
xchg
pop
dec
aaa
or
sbb
push
roll
test
pop
test
adc
and
jae
and
ss
pop
shl
inc
or
sbb
xchg
or
enter
scas
jo
insl
mov
scas
xchg
int
inc
call
inc
popa
cli
test
in
outsl
in
push
lea
int3
jno
sbb
rol
dec
or
loop
sbb
jecxz
cld
insl
test
gs
cmp
mov
test
rcl
and
jns
imul
lea
addr16
out
cs
cmp
imul
dec
cmpsl
inc
sub
clc
and
cmp
cld
insb
cmp
jp
dec
jb
adc
lret
mov
mov
pop
nop
pop
add
cs
cltd
lret
jns
xchg
fistpl
xchg
mov
mov
pop
data16
adc
jle
cs
mov
sti
test
das
test
pop
aad
ja
aad
sbb
xchg
lds
or
sub
fimull
sub
jp
idivl
or
jne
repnz
out
add
push
fcompl
in
jecxz
je
xor
test
push
mov
jbe
dec
mov
in
dec
aaa
loope
cmp
jmp
inc
insb
or
bnd
sbb
fisttpll
call
add
outsl
adc
dec
push
and
xor
movsb
xor
scas
out
jg
in
fcompl
shll
adc
frstor
pop
cmp
sbb
dec
cwtl
xchg
daa
je
jmp
loope
inc
mov
pop
aas
leave
sarb
mov
mov
inc
xor
xor
lret
push
inc
mov
mov
xchg
jg
jb
movsl
sbb
add
add
decl
add
adc
leave
jecxz
inc
cmc
aas
lret
push
rolb
inc
adc
mov
mov
pop
fmul
ret
sub
push
stc
dec
cmp
cmp
fsts
push
repnz
mov
adc
inc
mov
shrb
cs
inc
inc
push
in
clc
sub
fwait
in
ljmp
xchg
ss
into
rorl
leave
cld
jge
cmp
lods
das
mov
loopne
fiadds
mov
out
pushaw
pop
daa
sub
out
aam
xor
jmp
fstl
dec
mov
push
mov
and
and
sahf
mov
or
dec
je
dec
jbe
cld
jge
inc
cs
adc
pushaw
dec
fwait
testl
adc
call
fsubr
je
adc
cmc
jae
mov
inc
out
mov
push
mov
fisttpl
push
in
add
sbb
or
loopne
sub
insb
add
jle
mov
cmpsb
push
xchg
mov
inc
mov
xchg
into
das
mov
bound
stos
leave
or
fsubr
cmp
scas
outsl
dec
or
cmp
flds
jbe
add
add
jmp
lret
cs
fnsave
sub
inc
sbb
dec
out
xchg
cmp
push
sub
cmp
adc
mov
subb
mov
jno
xchg
dec
hlt
faddp
adc
push
outsl
xor
out
nop
push
add
lock
push
icebp
and
out
in
jge
xor
insl
imul
mov
dec
stc
daa
mov
outsb
xchg
mov
pop
insb
sub
cmpsb
lods
and
dec
push
insl
sbb
mov
sbb
or
mov
and
mov
cwtl
push
jg
mov
lahf
call
gs
pop
inc
add
in
subb
fcoml
add
push
or
std
or
out
js
scas
js
push
fdivs
adc
xor
or
jge
ljmp
mov
fldl
push
loopne
lods
shlb
push
std
mov
scas
rorb
push
imul
cmp
jae
xchg
call
sbb
add
test
cmp
mov
popf
jg
rcr
mov
jb
ficompl
pop
insb
insl
push
scas
test
xor
push
lds
dec
aad
mov
aas
mov
mov
push
jno
sbb
pop
inc
test
inc
popf
aad
outsb
test
ss
enter
push
dec
cmpsl
cmp
push
test
cmp
adc
xchg
cmc
sahf
mov
mov
call
fs
sbb
xor
xchg
jnp
repz
fimull
cmpsl
push
fxch
inc
rcr
xchg
pop
mov
scas
rorb
repz
fwait
or
jle
jge
lahf
in
leave
xor
leave
daa
jl
sahf
xor
imul
lds
stc
xchg
add
cmp
stos
aaa
ret
cmpl
xchg
rol
inc
into
xchg
in
repz
sub
jmp
sti
adc
mov
and
stc
adcl
test
enter
and
leave
jge
mov
pop
xor
arpl
rcr
icebp
ds
mov
sbb
pusha
fsubrs
or
mov
cmp
and
mov
jo,pn
adc
rcrb
cmpsl
push
pop
hlt
push
mov
fiadds
xchg
mov
test
push
cltd
sbb
in
xor
das
adcl
jge
push
and
xchg
xchg
mov
mov
movsb
mov
mov
bound
xchg
aam
cwtl
lret
pop
xor
push
out
cmpb
ja
lea
jge
xor
push
lods
or
pop
sbb
cmp
lcall
jbe
mov
das
mov
arpl
mov
mov
mov
push
push
push
fdiv
add
leave
jecxz
shll
stos
cwtl
cltd
cwtl
in
sbb
out
popa
test
into
loop
xor
bound
les
xchg
shl
and
cmc
add
push
roll
sti
jo
pop
push
mov
mov
sahf
bound
aam
inc
stos
sbb
pop
cwtl
mov
add
mov
sbb
add
cmp
mov
jae
xor
mov
cld
fstl
fwait
pop
dec
mov
scas
mov
sub
cmp
cmp
lds
aaa
jecxz
push
js
cmc
add
adc
bound
xor
cmp
rclb
xor
je
adc
clc
mov
nop
add
xor
cmp
mov
iret
subb
shl
arpl
mov
or
mov
int3
push
inc
mov
lcall
ret
mov
les
ret
into
mov
mov
iret
pop
add
sub
stos
add
sbb
adc
jl
fisubrl
pop
push
dec
xchg
or
push
mov
mov
mov
pop
pushl
jecxz
xchg
js
jl
repnz
sub
lcall
mov
mov
lock
ljmp
adc
mov
data16
jp
data16
int
mov
aad
and
and
cmp
sahf
push
andb
in
inc
adc
pop
or
cmpsl
mov
movsl
leave
test
fistpl
add
xor
les
cmp
mov
push
cmp
jnp
push
cmc
or
lret
jo
pop
ficoml
push
inc
fstp
loop,pn
lock
test
les
subl
and
nop
mov
daa
fcomps
sub
push
and
cmpsl
outsl
rcr
lret
stos
push
outsb
std
xor
pop
lcall
ret
mov
pusha
sbb
mov
mov
sbb
fwait
dec
out
lods
xchg
out
pushf
filds
mov
xchg
add
pop
and
cmp
push
out
jecxz
icebp
mov
xor
inc
pop
loopne
mov
xchg
fisubrs
subl
and
xchg
ljmp
inc
pop
inc
sbbb
adc
mov
dec
addr16
pop
sbb
push
add
addr16
fisubrs
dec
jb
mov
or
inc
xor
ds
test
fadd
fstpt
lret
aaa
inc
hlt
adc
xor
aas
dec
ja
push
sti
xchg
popa
movsl
sbb
lret
sub
test
insb
cld
or
inc
mov
add
sar
push
cmp
lock
mov
aaa
cmp
outsb
dec
inc
mov
jne
rcrl
and
nop
out
out
div
or
mov
xor
fisubs
dec
mov
mov
jecxz
js
adc
mov
lods
inc
pop
and
imul
call
ja
or
out
fisubrl
push
loope
arpl
ret
mov
mov
pop
pushf
bound
mov
jbe
add
pop
and
jno
xchg
mov
fstp
cwtl
push
dec
popf
sub
popf
pop
lock
enter
int3
jne
addr16
add
imul
loop
adc
push
test
rorl
mov
jns,pt
lds
into
outsl
imul
jmp
push
fmuls
lret
int3
inc
movsb
jp
and
inc
push
or
lret
add
xchg
sub
or
jmp
movsb
lcall
out
cmc
mov
ds
add
sub
xchg
popf
jl
cmp
out
js
adc
push
out
pop
stc
mov
or
enter
push
cld
fcmovb
add
lds
cmpl
adc
add
cmp
into
jmp
mov
arpl
cmp
ds
push
stos
pusha
xchg
dec
mov
mov
push
mov
sti
ds
push
jns
out
push
mov
inc
mov
push
jle
cmc
inc
addb
sahf
rcll
mov
sbb
mov
jno
les
xchg
call
imul
dec
mov
sbb
mov
in
xchg
jmp
lock
inc
mov
nop
pop
dec
pop
inc
cmc
incl
aad
popf
mov
aam
orl
xchg
jecxz
cmp
lds
loope
lret
adc
and
stc
gs
adc
jo
sub
and
rcl
jl
fimull
dec
hlt
and
sbb
adc
ds
xorb
cltd
cmpsl
test
punpcklwd
daa
jge
dec
sub
xlat
xchg
add
jp
push
rcr
sahf
inc
adc
out
lea
mov
cmp
loop
or
outsb
das
add
jb
in
or
cmp
lock
bswap
aam
popf
pop
lock
cli
clc
sub
test
scas
pop
sti
xor
pop
mov
and
fnstsw
push
orb
movsb
cltd
arpl
mov
mov
sub
pop
cmp
aad
jnp
enter
pop
xor
pusha
pop
movsb
inc
add
pop
data16
js
movsb
add
mov
imul
cmpsb
jnp
das
xor
lret
in
or
dec
stc
les
jecxz
sbb
aas
add
dec
test
fldl
mov
icebp
push
decb
fstp
or
daa
pusha
and
out
push
addr16
mov
push
jno
ja
or
ret
ja
fidivrl
dec
mov
inc
mov
or
rcl
mov
out
mov
jno
jae
loopne
xchg
scas
dec
xor
test
jae
nop
fstpt
lret
mov
cmp
sub
mov
sbb
jo
ficompl
test
push
repz
add
sub
lds
shrl
iret
cmp
sbb
push
inc
cmp
movsb
mov
aaa
out
lret
fidivl
xor
pushf
push
stc
mov
outsb
shll
pop
pop
mov
jne
popf
out
jne
sub
add
xchg
ficompl
xchg
pop
mov
dec
mov
dec
mov
inc
repnz
or
cli
mov
xchg
xor
xor
aad
stc
lods
pop
pop
mov
or
and
xor
jmp
sti
in
daa
pop
test
jns
sub
dec
outsb
movsb
lds
mov
addl
dec
xchg
jge
push
mov
xor
inc
aaa
or
pop
cwtl
in
pop
sub
sbb
push
rcrb
push
test
pushf
out
xor
inc
xchg
test
jbe
and
sub
out
cmp
mov
nop
mov
cmpsb
push
inc
insb
jne
mov
xchg
pop
add
or
jno
js
repnz
pop
sub
jb
xor
and
cld
sbb
jmp
or
cli
inc
int3
in
je
push
mov
xorb
repz
jae
mov
and
loope
sub
push
loopne
pop
xchg
and
stos
stc
stos
clc
push
push
jbe
aam
mov
sbb
mov
lods
iret
jmp
and
lock
or
pusha
xchg
push
dec
pop
sbb
sub
or
mov
lock
sub
call
fstl
enter
insl
roll
fnsave
add
insb
xor
mov
ds
fsts
pop
or
or
nop
sbb
repz
cmp
hlt
insb
jmp
sbb
mov
aam
lahf
rcll
add
mov
enter
enter
jge
mov
xchg
sub
pop
sbb
push
cmp
and
scas
movsl
mov
fildl
shlb
rcrl
xchg
faddl
push
decb
and
adc
jle
sbb
scas
incl
sti
pop
mov
ret
aad
imul
mov
add
movsb
insl
fdivl
sbb
jle
call
lds
mov
dec
adc
push
es
mov
mov
movsb
outsl
lcall
hlt
xchg
fwait
jl
addr16
test
fucom
xlat
dec
xlat
cmp
test
adc
xor
sub
aad
iret
cmp
jns
and
mov
pop
cwtl
or
in
xor
mov
das
pop
dec
xor
xchg
imul
and
repz
stos
add
cli
pop
dec
imul
dec
cmc
or
adc
jne
push
jb
mov
lret
stos
pushf
gs
fisttpll
inc
sbb
imul
ja
movsl
sbb
in
add
pop
int3
adc
lods
addr16
jge
fnstenv
in
jecxz
jl
jmp
xor
mov
inc
or
add
js
xchg
xlat
pop
cs
adc
push
mov
out
repnz
pusha
movsb
rorb
andl
cmp
and
movups
je
out
xchg
push
mov
pop
xor
mov
dec
xlat
jl
mov
dec
shl
sarb
sub
sbb
out
jne
incb
sbb
jnp
adc
cmp
and
jle
xor
lock
roll
loopne
jp
xchg
insb
ja
lret
nop
mov
sub
or
dec
inc
or
clc
sbb
cmp
cmp
lock
je
or
jne
pop
mov
sbb
gs
xchg
test
ret
pop
add
enter
mov
int3
mov
cmc
outsl
push
enter
daa
std
push
adc
mov
sub
xchg
adc
test
imulb
popf
out
inc
sub
mov
or
xchg
shll
enter
push
adc
mov
sbb
cs
fsts
gs
sub
sbb
lea
data16
mov
xchg
pop
pop
mov
ja
jmp
adc
push
movsl
sub
push
adc
push
mov
mov
dec
sbbb
pop
sub
sub
pop
testb
mov
mov
hlt
xor
jle
adc
cmpl
movsl
sbb
loop
enter
xchg
shl
and
xchg
jbe
or
push
adc
lcall
and
scas
stos
jle
xorb
test
sbb
xor
popf
dec
loopne
mov
pop
adc
jmp
cwtl
jbe
enter
int
fdivr
loope
mov
imul
fs
loope
or
repnz
inc
sarl
xchg
push
pop
movsb
cmpsl
inc
sub
cmp
lret
and
sbb
inc
shll
push
mov
add
fsts
jle
push
inc
sub
aas
out
push
ret
arpl
mov
lds
dec
adc
cmp
cmp
imul
flds
and
jns
push
test
aad
sbb
or
shll
cli
xchg
fst
sub
and
dec
adc
jno
mov
dec
jae
lret
pop
cmp
add
aad
in
inc
pushf
stc
andl
push
or
hlt
mov
pop
push
xchg
jge
mov
outsl
xchg
cltd
xchg
rcrl
ret
mov
ret
shlb
cmpsl
aad
push
fwait
mov
dec
insl
jne
in
jae
fistps
test
pop
fsubr
stos
in
sbb
in
pushf
test
xor
leave
leave
sub
mov
into
jo
and
mov
std
sbb
push
jnp
xchg
push
sbb
mov
and
data16
mov
push
dec
dec
aas
add
das
nop
jp
ror
inc
andl
outsb
adc
scas
sbb
push
sub
add
jae
mov
sub
and
jae
cmp
loopne
into
jle
fists
imul
jmp
ds
rorb
mov
mov
xlat
insb
jl
fdivs
scas
dec
fsub
je
ret
adc
push
iret
dec
dec
xor
sub
int
movsl
push
xor
test
jb
in
or
push
xchg
les
lods
adc
dec
xlat
pop
in
rolb
jle
in
neg
push
imulb
xchg
lock
push
sbb
cmpsb
push
sbb
xor
fistpll
cmpsb
or
cmpsb
jne
test
iret
lret
jbe
fs
jo
fsubs
xchg
out
notb
orb
cmp
or
jmp
ret
and
fnstenv
loop
test
ss
lods
dec
sarl
imul
or
inc
xchg
nop
xchg
roll
inc
loopne
and
inc
and
aas
popa
out
aas
fdivr
shll
aaa
pop
loop
ret
cmp
repnz
push
xchg
incl
stos
jae
pop
jns
mov
cli
mov
push
fs
gs
fstpt
arpl
jmp
mov
stos
insb
out
xchg
jne
mov
clc
fsubr
push
aad
xchg
xchg
insl
out
mov
pop
mov
mov
or
add
cmp
imul
test
jno
arpl
popa
insb
add
sub
jmp
popf
dec
int
outsb
movsb
cwtl
cwtl
and
rorl
or
idivb
mov
dec
es
mov
cli
cmp
mov
out
sbb
jo
jp
stos
pop
les
movsl
push
loope
jae
mov
cmp
pop
mov
cmp
in
dec
mov
sbb
mov
cmp
or
jb
sub
lods
flds
stos
mov
imul
cwtl
pop
and
nop
sbbl
shrl
xor
xchg
jo
ds
inc
ss
and
iret
stc
sbb
inc
insb
push
enter
movq
sub
jae
push
add
enter
loopne
push
fildll
xchg
xor
inc
int
or
inc
leave
lock
dec
test
or
cli
dec
or
js
lret
jns
test
rorb
lds
ljmp
mov
lret
xor
or
xor
dec
mov
outsl
outsb
xor
int3
push
call
pop
dec
sbb
sbb
loope
loopne
and
in
and
sub
lret
jp
xor
sub
or
adcl
add
cmp
call
pop
movsb
sti
inc
iret
sbb
pushf
nop
mov
into
aas
dec
or
pop
and
leave
fs
cmpsl
add
xor
fidivrs
cmp
push
ljmp
ret
inc
ds
dec
icebp
jnp
cmp
imul
lret
into
xor
mov
mov
lds
add
cwtl
dec
adc
cmc
int
and
cwtl
jns
mov
jecxz
mov
inc
bswap
pop
add
pop
fbstp
adc
and
push
out
jp
mov
daa
cmpsb
jle
sub
xchg
mov
fistps
xorl
das
xor
dec
fcoms
pop
sbb
enter
dec
pop
es
mov
addr16
or
push
mov
push
xlat
pop
jmp
cwtl
sbb
push
cwtl
ja
pushf
pop
cli
mov
mov
repz
sbb
jae
cmp
mov
jae
dec
fwait
jb
fs
adc
mov
imul
or
popf
push
lahf
repnz
pop
sti
pop
cmpsb
jae
cmp
inc
dec
inc
adc
jle
dec
mov
push
push
sub
xor
outsb
cmpsl
sub
ss
adc
lods
pusha
lret
mov
push
mov
test
lock
mov
mov
les
xchg
dec
or
pop
sub
dec
mov
adc
mov
sub
jbe
stc
inc
push
ret
rcl
push
aad
mov
dec
pop
or
movsl
out
cmc
test
xchg
jb
add
inc
add
mov
push
sbb
dec
jno
mov
cmp
jno
add
into
rorl
mov
dec
test
lock
aam
push
fidivrs
loop
stos
add
shl
mov
pushl
stos
pop
subb
out
mov
jb
xchg
inc
cltd
ror
mov
cmp
imul
xchg
dec
and
inc
sahf
mov
push
adc
je
fisttpll
int3
add
outsl
je
mov
jmp
adc
xor
ss
mov
pop
mov
in
lods
fucom
daa
popa
iret
and
shrl
dec
mulb
insb
lahf
shrb
test
xlat
xchg
jp
jae
jns
aas
sahf
inc
inc
jno
sbb
sub
aad
mov
mov
adc
jle
cmc
pop
fs
fsts
pop
xchg
xchg
aam
cld
sub
sahf
notrack
add
sti
xchg
rolb
inc
add
and
pop
in
sbb
int
shr
cmp
sahf
xchg
lcall
insb
pop
push
fdivrs
rcrl
cli
adc
in
inc
push
cmp
fdivs
sar
jo
mov
mov
inc
xchg
in
xlat
mov
movsl
int3
add
daa
mov
push
test
xor
cmpsl
mov
iret
cmp
test
dec
xchg
add
xor
xchg
fstpt
lds
dec
lcall
stos
fs
xor
hlt
and
int
addr16
mov
das
das
xor
inc
movsl
xchg
mov
or
mov
rcrb
push
adc
sbb
mov
jle
pop
pop
cmp
push
repnz
xchg
repnz
jp
sbb
cld
cmp
rorb
loope
cmp
xchg
popf
sub
aam
sbb
inc
lods
jns
sub
add
int3
jl
iret
shl
test
ds
cmp
aas
pusha
test
rcrb
fcoml
xor
xchg
sub
pop
xor
shl
stc
pop
fistpl
ret
inc
and
cwtl
pop
mov
stc
mov
in
xchg
jg
pop
sbbb
out
pop
mov
lcall
sbb
sbb
shlb
loop
iret
adc
lods
nop
imul
mov
xchg
inc
xlat
add
push
xchg
hlt
lret
mov
mov
xor
xor
jb
outsl
jae
pop
and
jp
push
sub
push
popa
and
outsb
mov
add
stc
push
icebp
das
lret
insl
int
adc
inc
sub
or
loopne
jle
mov
mov
je
xchg
hlt
mov
imul
daa
sub
mov
pop
sub
xchg
je
outsb
test
test
es
test
scas
fildll
dec
mov
push
mov
or
sbb
cltd
jo
jo
sub
sbb
rcrb
faddl
jno
inc
pop
aaa
sbb
mov
push
lods
mov
and
scas
fwait
pusha
push
mov
gs
dec
sub
jb
shll
subb
imul
mov
clc
stc
cmp
jb
push
ss
fdivl
inc
lds
jg
inc
out
xchg
mov
inc
or
in
pop
mov
sarb
mov
popa
and
movzbl
pop
dec
xchg
notl
mov
call
adc
mov
in
xchg
insb
cmpb
mov
lods
test
imul
push
push
gs
aas
xchg
push
push
lock
lahf
sub
fnstenv
jp
aas
xchg
xchg
adc
lods
aad
push
jl
xchg
sub
lret
insb
dec
xchg
inc
dec
mov
das
cld
sti
lods
mov
mov
clc
pop
push
inc
stos
push
sbb
test
enter
adc
dec
inc
lret
xchg
mov
arpl
test
out
push
fsubrp
cmp
fisubs
leave
or
popf
pop
test
pop
pop
loopne
push
cmp
mov
inc
js
mov
add
xor
push
ja
pop
cmp
dec
sub
xor
dec
in
rclb
icebp
lods
stc
fsubs
inc
hlt
bound
inc
mov
imul
inc
adc
nop
mov
xchg
loop
pop
repz
inc
idivl
mov
imulb
push
jp
xor
lods
arpl
sbb
stos
call
sub
xor
shrl
jae
call
xchg
cmp
cmc
push
insl
or
jbe
jmp
add
or
xchg
fiaddl
loop
xchg
mov
mov
push
stc
or
cld
ljmp
mov
jge
lock
mov
das
or
jno
cld
test
xchg
out
jg
pushf
ja
dec
mov
add
dec
cmp
loop
icebp
pop
jg
in
fdivl
aaa
daa
xor
xor
flds
fbld
cmp
add
pop
movsb
pop
mov
inc
in
inc
in
or
lds
out
fisttpl
cmp
popf
out
outsb
jmp
inc
push
lcall
pop
or
es
jb
daa
int
andl
fiadds
sub
scas
cmp
xor
fwait
aaa
mov
dec
aad
insl
fcompl
clc
xchg
dec
inc
out
repz
push
std
inc
mov
fstl
push
fwait
jne
mov
inc
inc
es
test
adc
nop
leave
rcr
pop
push
mov
sub
lcall
adc
jle
das
mov
push
cmp
test
stos
add
add
xchg
jnp
popa
xchg
movsw
and
mov
movb
mov
shlb
aaa
add
out
add
push
adc
aad
or
out
and
pop
adc
leave
shll
xor
adc
pushl
data16
xchg
cmp
fcoml
loopne
inc
mov
loop
cmp
test
cmc
loopne
fs
or
aas
push
loope
mov
fstps
xchg
scas
xor
in
push
or
int3
shll
fsubl
xor
idiv
fimull
dec
fdivrl
negb
leave
sbb
fnsave
jno
push
pop
sbb
lret
popa
pop
pop
or
and
pop
and
daa
fdivs
or
sub
add
and
mov
sbb
pop
iret
rcl
inc
cwtl
mov
pop
or
xor
iret
jg
adc
into
sbb
cltd
insl
add
test
jb
sbb
mov
imul
scas
enter
test
push
inc
or
andl
jb
adc
cmp
test
test
movsb
mov
xchg
ljmp
sbb
dec
repnz
aas
jp
lods
aad
dec
jp
scas
int
ja
and
jne
in
push
hlt
in
xchg
adc
inc
pop
push
adc
xchg
inc
rol
inc
adcb
fwait
shlb
jp
mov
pop
dec
aam
lret
lcall
bound
jge
pop
pop
push
imul
push
xchg
cmp
mov
test
std
mov
lods
xchg
lea
push
jl
in
fsubr
mov
in
movd
insl
xchg
fsts
sub
bound
mov
pop
add
in
cltd
fnstsw
sub
and
cs
cli
in
jbe
jae,pn
gs
ljmp
addr16
rolb
sbb
stos
insl
or
ljmp
dec
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
stc
pushf
jne
xor
jp
pop
jp
popa
mov
in
les
mov
mov
mov
std
jp
pop
fs
daa
ds
adc
fs
mov
out
jecxz
lret
dec
or
jnp
xor
mov
inc
ds
inc
cmp
nop
testl
mov
xchg
rol
stos
dec
divl
mov
adc
notb
xor
lods
mov
dec
sub
pop
add
shlb
push
push
out
aam
in
fs
xlat
or
xor
mov
cmp
xor
repnz
inc
testb
mov
jne
push
lret
xor
popa
pop
adc
lods
enter
enter
sbb
out
je
xchg
mov
mov
clc
pop
push
jns
loop
loope
jno
mov
mov
scas
or
or
loop
jno
into
cltd
lock
orl
fs
fucom
pushf
mov
cwtl
mov
inc
nop
adc
lods
jnp
jbe
cli
rclb
adc
pushf
dec
mov
inc
aas
lea
test
stc
sub
popa
outsb
test
pop
add
cld
insb
mov
outsl
xchg
pop
mov
popf
mov
sbb
das
jo
pop
push
repnz
ret
out
jg
lods
push
xor
insl
inc
sub
jno
jecxz
movsl
cmp
sub
stos
adc
gs
pop
jb
test
xchg
addr16
sub
jl
lret
push
push
out
sub
movsb
lock
sahf
pcmpgtb
rol
ficoml
pop
and
xor
bound
pop
inc
sar
xlat
jp
jnp
jecxz
jae
loope
into
xchg
push
dec
push
pop
sbb
xchg
daa
sub
movsb
push
inc
iret
mov
ja
mov
out
xchg
push
push
fidivs
xor
push
das
stc
fidivs
enter
jmp
push
add
mov
scas
aas
iret
xor
mov
int3
pop
sarb
or
xor
cmp
mov
pop
ja
stc
push
testb
and
ret
xchg
lcall
pushf
add
sbb
or
push
dec
leave
jp
mov
adc
jo
lods
cld
xchg
cmpb
loope
fmull
testb
inc
mov
data16
jmpw
imul
lret
incb
mov
in
and
inc
and
cmp
popf
fsubr
mov
push
pop
ret
add
xchg
shl
push
xor
cmp
shrb
adc
or
in
mov
rcl
jo
add
pop
gs
dec
and
cli
bound
insl
inc
lret
pop
mov
jno
xor
insl
cmp
fadds
push
popa
lret
sub
jg
or
ja
scas
fwait
dec
mov
int
jbe
ret
adcb
jb
sarl
cmp
mov
imulb
lods
push
insb
loop
xchg
aaa
fs
mov
out
nop
into
xchg
jp
cmpsb
jne
mov
pop
aam
jno
dec
ds
dec
jle
sbb
fucomi
arpl
lret
cmp
imull
push
mov
fcmovu
xor
jo
jbe
sub
pusha
xor
mov
xor
mov
fisubs
mov
add
and
mov
push
push
insl
jecxz
mov
je
xchg
cli
cmc
test
loop
and
cmpsb
jne
mov
js
and
movsb
outsl
stos
data16
insb
pushf
pop
out
mov
mov
imul
and
outsb
test
out
fdivp
fnstcw
jp
sub
sub
cmp
inc
setp
sbb
mov
mov
scas
cmp
xor
sbb
cli
xchg
push
and
sub
mov
nop
jge
mov
mov
adc
xor
outsb
int
repz
jo
es
inc
sbb
dec
xchg
mov
ret
push
clc
xor
pop
dec
sbb
repnz
push
pop
mov
sti
add
rcl
sub
repz
fdivs
in
adc
push
xor
xor
mov
or
test
loope
mov
mov
rcrl
std
call
mov
pop
arpl
scas
inc
in
imul
cmp
fcoml
mov
pop
orb
cmpsl
iret
mov
je
loop
xor
jmp
xor
jno
cmp
xchg
aam
cmp
cmpsl
mov
je
push
imul
xor
push
cmp
fbstp
sub
jp
std
xchg
ficomps
bound
call
xorb
stos
outsb
mov
or
pushf
arpl
ss
sbbl
sbb
pop
add
ret
push
cld
std
push
pop
mov
mov
rcrl
or
int3
sti
test
xlat
pop
std
stc
test
mov
int3
fnstcw
jecxz
cmp
mov
in
arpl
test
sbb
test
jbe
xorl
and
stc
mov
jne
mov
repnz
int3
popf
insl
fisttps
jmp
fs
push
mov
ret
dec
jo
dec
pop
mov
testl
mov
les
add
sarl
adc
xor
push
mov
insb
xor
out
sbb
sbb
das
cmp
xchg
cmpsb
and
mov
arpl
sete
stc
pop
xchg
mov
sti
loope
adc
pusha
stos
add
test
push
mov
xchg
movsl
pop
gs
mov
add
inc
cli
and
movsl
and
sub
push
jp
jecxz
testl
mov
mov
xchg
push
hlt
dec
inc
popf
mov
inc
or
repnz
push
dec
test
das
mov
xchg
mov
loop
add
mov
pop
sub
loop
sub
rcrb
jge
adc
mov
popf
mov
cmp
sub
dec
sub
shlb
jge,pt
mov
lds
pop
hlt
sub
cmp
dec
add
or
shrl
xor
fistl
sub
in
fcomps
jmp
xor
imul
das
sarb
adc
fcoml
iret
es
out
xor
addr16
jmp
xchg
mov
inc
stos
sbb
fnstenv
stos
and
cltd
pop
mov
xor
and
mov
ja
jl
cli
jl
push
mov
and
or
inc
cmp
mov
cmp
xchg
sub
dec
popa
lea
aam
add
mov
popf
and
xchg
sub
add
mov
hlt
add
jb
int3
mov
imul
movsb
xchg
scas
dec
lcall
sbb
pop
push
sub
xchg
sub
cmc
mov
fcom
jne
ss
lcall
push
mov
or
scas
sbb
scas
sub
addr16
push
or
sbb
aas
cmp
imulb
test
xchg
adc
shlb
jecxz
dec
je
or
lcall
push
xor
push
cmpsl
sub
xchg
fisttpl
insl
pop
test
cmc
cmpsl
ds
push
pop
push
xorb
fwait
and
sub
mov
add
ficoml
rcrl
mov
fldcw
and
ja
into
mov
je
pop
aad
test
sub
mov
and
cmp
jno
fadds
cmp
adc
adc
mov
movsl
cmp
mov
outsb
pushf
pushf
sbb
shl
das
hlt
jg
cld
adc
pop
mov
adc
inc
cmc
test
loopne
cmp
inc
arpl
add
dec
xchg
lock
sti
or
rcrl
pusha
mov
fdivl
pop
stos
sub
rcrb
push
lcall
or
push
xlat
push
jo
stos
in
adc
fstpt
add
sahf
cmpsb
imul
nop
cmp
push
dec
jmp
loope
cmp
popf
cmp
adc
int
sub
imul
xor
scas
mov
mov
add
je
or
lret
and
pop
lock
into
in
lods
ffree
ret
data16
xchg
ret
mov
aam
xlat
fdivrl
loopne
dec
shlb
icebp
fdivs
lds
cmpsb
aaa
incl
sbb
xchg
push
xchg
push
out
lahf
mov
ficoms
movsl
mov
test
iret
xor
fldenv
fwait
aas
loope
js
dec
scas
mov
stos
mov
push
jae
add
sbb
push
add
fwait
nop
in
push
enter
fs
xchg
out
xchg
out
ljmp
lods
xchg
inc
cmp
cmc
icebp
dec
insb
in
lock
int3
lock
je
push
or
add
shll
sub
add
inc
outsb
test
gs
daa
int3
ret
sub
stos
jp
sub
jmp
push
nop
out
and
jge
insl
xor
imul
inc
push
fadd
xor
aad
in
jp
dec
ret
ja
dec
mov
adc
push
call
mov
dec
fwait
rcrl
ss
data16
test
xchg
and
loop
ret
lahf
jb
sbb
sub
rcrl
loop
repz
xlat
in
cmc
jne
sbb
mov
lcall
xor
xchg
inc
outsl
xchg
sub
cmc
ficoms
xchg
in
sub
fcomps
jns
adcb
fs
dec
movsl
leave
packuswb
sub
jge
stos
push
aas
rcll
sub
add
popa
xchg
adc
pop
pop
mov
jno
fcompl
xor
fwait
mov
imull
add
jns
sub
push
inc
sub
addb
fwait
add
icebp
jg
negb
loope
pop
or
adcl
inc
shll
pop
cmp
push
ds
cmpsb
in
arpl
lds
ret
mov
cmp
cmp
mov
cltd
addb
cli
in
js
icebp
push
jbe
shr
sub
aas
insl
lods
inc
ret
pop
xchg
test
push
call
pushf
lret
out
out
mov
jmp
cmp
pop
test
cmp
and
adc
ss
test
pop
in
hlt
xor
fildll
fistpll
mov
xor
or
inc
sbb
addl
pushf
mov
imul
out
cmp
sbb
xchg
test
xchg
js
sbb
inc
inc
in
jl
loope
aaa
ds
add
cmc
pop
xor
xor
mov
dec
movsl
cmpsl
mov
lds
mov
mov
lcall
mov
nop
out
mov
lret
adc
addr16
push
xchg
sar
adc
nop
mov
std
adc
in
out
int
fdivs
inc
nop
std
rorb
popa
imul
lea
dec
les
fnclex
icebp
lcall
rcll
mov
sub
jp
pop
push
arpl
imul
add
testb
jecxz
out
repz
dec
or
xchg
stos
push
in
adc
fdivr
clc
mov
jne
cmp
xchg
jmp
mov
je
popa
popa
add
push
leave
leave
dec
icebp
push
xchg
addr16
xchg
push
xchg
push
pop
xchg
push
cli
adc
out
mov
inc
jo
jne
sti
mov
call
and
adc
jbe
pop
or
popa
imul
sahf
lods
sbbb
push
sarb
xchg
xor
inc
out
jp
iret
nop
cmpsb
mov
fwait
dec
stos
movsb
cmpsb
dec
in
push
pop
xchg
adc
push
aad
inc
and
jmp
dec
and
mov
dec
adc
enter
out
cmp
dec
stos
aad
adc
rclb
jns
bound
cli
imul
mov
or
jp
stc
fdivr
mov
enter
pop
push
jae
in
movsl
popf
mov
mov
adc
div
rep
add
mov
push
add
ret
jns
bnd
idivb
mov
outsl
inc
pop
pop
cmp
jne
mov
adc
cli
movsl
leave
lret
test
shlb
sub
xchg
xchg
subb
or
les
mov
jcxz
inc
inc
in
push
loopne
lret
xchg
xchg
std
and
fadds
ss
shl
pop
xchg
incb
lods
nop
xor
sub
sub
aaa
into
hlt
jmp
push
popf
xor
out
movsl
pop
lret
push
aaa
dec
sbb
or
or
imul
imul
cld
pusha
sbb
jae
arpl
aas
sub
xor
or
or
mov
inc
sbb
xchg
in
jno
sysret
je
pop
into
mov
scas
arpl
and
push
fdivl
das
lock
inc
pop
cmpsl
sti
cmp
iret
mov
xor
sbb
nop
sub
movsl
cmpsb
pop
cltd
jae
and
jp
sbb
fidivrs
cmp
inc
mov
push
xchg
out
push
jle
push
fistpll
jbe
popa
int3
lock
jb
xor
add
mov
cmp
andl
xor
rcl
les
ret
rcll
int3
dec
cmp
daa
jge
dec
aam
sub
pop
push
add
pop
dec
xor
movsl
adc
movsb
orb
scas
cmp
aaa
gs
lcall
add
xorb
or
jge
filds
shll
aaa
mov
loopne
int3
or
xor
lahf
add
movsl
dec
in
out
loopne
leave
movsl
pop
sahf
fldt
repz
mov
adc
mov
xlat
xchg
and
mov
rorb
add
xchg
mov
bnd
xchg
insb
push
mov
mov
sub
rcrb
cld
gs
cmpb
sub
mov
cmp
lods
pushf
in
xchg
test
ret
jmp
pop
jns
leave
shll
ret
mov
jecxz
shrb
jecxz
sbb
dec
ja
add
das
add
dec
jecxz
push
jno
test
repnz
fs
push
push
sub
aam
mov
pop
adc
xlat
scas
outsl
cmpsb
jbe
rcl
mov
cmp
and
adc
cltd
xlat
out
sbb
inc
mov
enter
jne
push
adc
and
jae
dec
nop
sbb
cltd
rclb
pop
add
inc
dec
jge
fsubrs
ds
mov
sub
push
cld
xchg
in
xchg
dec
clc
xchg
insb
jge
dec
xor
inc
jp
sbb
push
pop
test
cmp
cmpl
int3
jbe
cmpsl
loop
jb
mulb
pop
jl
outsb
movsb
popf
jecxz
stos
lcall
mov
stc
or
adcb
loop
loope,pn
fldt
lea
pop
scas
sbb
ss
and
inc
testb
mov
mov
dec
imul
push
mov
lea
mov
je
aas
pusha
cmp
es
jae
mov
je
repnz
loopne
cltd
or
out
clc
inc
xchg
add
pop
mulb
mov
push
cmpsb
dec
sbb
jnp
cli
adc
inc
adc
repz
imul
inc
sti
and
xchg
es
xor
sbb
inc
cwtl
call
mov
sbb
adc
enter
push
bound
push
pop
inc
iret
cmp
cmp
xor
ljmp
inc
hlt
fnstcw
or
pushf
ljmp
push
dec
mov
ljmp
add
push
mov
loope
adc
test
pop
mov
aam
das
lock
jns
inc
or
xchg
faddp
xchg
inc
jl
dec
push
cwtl
cmp
add
loop
and
sub
add
cmp
xor
cltd
sub
mov
loop
pushf
or
pusha
push
cld
xchg
les
push
js
push
and
out
scas
mov
sbb
jle
jne
test
icebp
rcll
in
pop
daa
sbb
pop
imul
or
aaa
lods
or
jne
ret
aaa
fiaddl
lret
sub
ljmp
repz
mov
cmp
push
insb
and
adc
addr16
inc
cmp
jae
ret
pop
pop
inc
cmpsl
inc
lret
jno
adc
jo
mov
xchg
adc
es
fidivrs
push
leave
cli
inc
lods
xorb
cmp
dec
cmp
lods
mov
dec
and
add
stc
inc
jae
cmp
movsb
ss
iret
shrl
icebp
ficoml
mov
and
push
popf
repnz
decb
jnp
mov
pop
fld
aad
mov
pop
adc
sbbb
rcll
jmp
mov
cmp
in
xor
mov
cmc
shll
sub
add
sbb
mov
sbb
lea
xchg
scas
adc
dec
rorb
popf
test
jb
xchg
dec
dec
jae
popa
mov
xchg
inc
push
fdivrp
adc
testl
sbb
cmc
pop
ss
or
ret
xchg
aad
movsb
cmpsl
xchg
insl
mov
test
xor
nop
bound
ss
mov
out
mov
xor
ljmp
out
mov
cmpsl
xor
xchg
jo
push
inc
cld
mov
mov
in
divl
aas
mov
push
negl
loope
cwtl
out
jne
dec
stc
ja
jnp
sbb
mov
and
imul
add
out
and
mov
lds
jno
arpl
scas
xor
mov
std
dec
sub
addr16
pop
adc
mov
mull
shrb
ret
mov
bound
sbb
aam
pop
int3
dec
dec
in
push
out
adc
adc
js
ret
insb
cmp
cwtl
gs
adc
or
xor
lds
add
out
lea
pusha
pop
cmp
pop
cmp
jnp
sub
xchg
adcl
adc
push
mov
daa
push
stc
or
mov
sbb
insb
sub
inc
lods
addr16
adc
dec
pop
insb
fsubrs
add
sub
jge
push
lods
push
popf
and
pop
mov
mov
add
outsb
xchg
dec
dec
sbb
sub
xchg
cmp
jns
pop
aaa
pop
sub
jnp
xor
pand
aas
bnd
mov
lahf
stos
imul
dec
outsl
imul
pop
movsl
mov
pop
cmp
push
testb
or
popf
dec
sbb
rclb
adc
sahf
andb
ja
repnz
sbb
and
jbe
ss
xor
fsubl
pushf
and
into
leave
push
mov
dec
inc
mov
loopne
sbb
mov
and
ds
outsb
jbe
bnd
pop
lahf
dec
jns
fstps
dec
pop
push
pop
and
jb
testb
mov
adc
cmc
out
and
mov
xor
inc
clc
mov
cs
or
mov
sbb
pop
mov
pushl
das
add
int
xor
mov
push
push
xchg
jbe
mov
mov
cmp
push
cltd
out
outsl
sub
imul
ret
scas
sub
std
jns
inc
js
pusha
and
aad
mov
ja
xor
mov
push
imul
negl
pusha
sub
or
lods
cmpl
aaa
adc
add
cmpb
add
pop
rclb
fwait
daa
pop
adc
cs
imul
js
mov
or
lods
sub
popa
test
cmpb
push
scas
fcmovbe
jnp
cmp
cli
mov
sbb
pop
aad
rolb
fs
sbb
mov
cli
cmp
add
mov
mov
jp
sahf
les
loopne
in
sbb
mov
cs
xchg
jg
sbb
dec
cmp
pop
inc
pop
mov
into
mov
dec
fmuls
int
pushf
inc
inc
leave
mov
push
push
adcl
sub
mov
dec
push
pop
xor
in
jp
pop
fisttpll
int
cld
fcomps
dec
loop
jecxz
data16
or
jo
cld
mov
mov
add
mov
adcb
push
or
push
fs
dec
fwait
pop
out
sbb
inc
fwait
pushl
mov
lss
and
into
inc
rolb
ss
adc
pmulhuw
rorl
enter
pop
enter
out
int3
sub
inc
es
out
mov
sbb
xor
push
out
jnp
daa
jg
add
scas
cwtl
jnp
test
loop
rcll
movsb
ja
push
dec
mov
in
fldl
repnz
mov
xadd
and
and
je
nop
in
fcompl
shll
cmp
nop
pop
hlt
mov
cwtl
outsl
dec
jo
repz
mov
jecxz
inc
adc
sbb
pop
and
and
cmp
mov
mov
and
cmpsl
sub
scas
dec
mov
inc
sbb
add
adc
imul
ds
andl
jge
orl
scas
push
insl
call
lret
test
or
mov
cmpsl
loop
movsl
repz
xor
ljmp
adc
loope
jmp
mov
bound
insb
out
stos
jns
imul
sub
push
push
dec
sub
out
mov
cmp
xorb
and
popa
add
int
test
cmp
sub
jno
movsl
js
cmp
shrl
xor
lods
je
ja
push
dec
repnz
sub
pop
and
jbe
push
aad
sbb
fistpll
sub
cmpsl
xor
inc
fidivl
dec
and
mov
and
add
fiaddl
lods
pop
stos
subb
adc
fwait
out
sbb
push
inc
mov
pop
mov
add
out
pop
jmp
sti
data16
adc
xchg
jg
push
dec
push
dec
jl,pt
cld
addr16
push
mov
adc
jl
cmpsl
push
orb
xor
pop
aam
mov
cmpsb
mov
scas
mov
test
xor
insb
rorb
arpl
sarb
push
cmp
pop
jns
pop
jle
push
inc
mov
fcmovne
xor
jno
repz
aad
inc
dec
ret
or
inc
adc
inc
cli
fbld
mov
testl
psrld
bound
rolb
out
pop
lret
cltd
sbb
and
out
sti
sbb
popa
inc
cld
in
call
add
mov
addb
mov
adc
jnp
mov
inc
enter
faddl
insl
scas
xor
getsec
xchg
lret
dec
lret
out
and
in
jecxz
or
call
lock
imul
adc
nop
sahf
mov
push
sbb
outsb
push
mov
aaa
arpl
dec
push
xor
mov
push
aaa
and
dec
stos
xlat
push
int3
xlat
pop
jmp
dec
jle
or
xchg
repz
lcall
fwait
pushf
mov
pop
mov
pop
sub
push
push
jmp
fnstsw
and
js
rorb
sbb
mov
add
pop
xor
out
mov
pop
aas
jle
mov
mull
out
mov
lds
jmp
pop
out
xor
jp
push
aad
lods
repz
gs
xlat
jecxz
mov
sub
adc
lcall
pushf
sbb
and
xchg
push
out
daa
outsb
insl
cwtl
mov
xchg
cmpsl
or
stos
out
or
test
inc
cltd
and
adc
lods
dec
inc
xor
popa
xor
jge
rol
xor
scas
push
push
mov
cmc
out
adc
push
data16
fistps
icebp
imul
inc
pop
fwait
jecxz
fistpl
mov
mov
repz
test
sub
test
inc
rorb
jns
movsb
xor
push
scas
jle
cmpsb
lock
dec
sbb
add
cld
mov
mov
into
xchg
mov
insl
mov
stos
mov
popa
addb
fcmovnu
fwait
sub
pop
jge
cmp
aas
or
cwtl
std
imul
cmp
mov
jp
subb
sbb
fwait
rorl
mov
lret
push
adc
std
faddl
lock
or
stos
or
clc
pop
test
pop
or
cltd
fadd
ja
cli
cli
cld
ret
xor
adc
mov
lcall
outsb
and
cmp
mov
das
push
push
or
lods
pop
add
adc
add
pushf
clc
and
les
jl
cmp
push
iret
mov
jno
in
adc
std
sbb
fidivl
fs
out
stos
pop
push
sbb
jne
fistpl
xchg
push
sub
adcl
cltd
insb
push
enter
cmpsl
mov
push
sarb
adc
pop
add
mov
cld
push
or
loope
mov
pop
shlb
aas
out
cmpsb
add
mov
stos
adcl
insl
enter
shlb
xor
adc
into
push
pop
call
outsb
ret
pop
das
lods
cmp
ja
xchg
jbe
mov
aas
jne
imul
mov
push
pop
or
adc
dec
mov
jl
imul
pcmpgtd
sbb
in
repnz
popa
test
mov
jmp
mov
insl
jns
or
outsb
jp
test
lcall
xchg
shlb
sub
imul
inc
into
stos
mov
sbb
ss
adc
int
fidivrs
jl
mov
lahf
mul
mov
push
fldcw
dec
and
sbb
lcall
sub
push
ret
jp
sbb
inc
iret
inc
loopne
jo
push
out
adc
pusha
cmp
xor
movsb
arpl
cmpsl
stos
addl
mov
push
inc
mov
mov
and
push
xchg
adc
sbb
xchg
enter
xor
je
sbb
rol
out
int
movsl
enter
dec
jae
rcrb
dec
jl,pn
test
mov
sbb
mov
adc
pop
adc
dec
mov
or
add
inc
dec
stc
and
jae
cmp
lcall
cwtl
fistpll
inc
inc
pusha
dec
ss
call
jno
jo
insl
xchg
scas
sbb
addr16
mov
push
sub
jmp
and
clc
jno
decl
cli
mov
popa
lahf
pop
repnz
pop
jno
push
mov
sbb
outsl
xchg
dec
fidivrl
gs
xor
mov
mov
clc
xchg
jb
pop
jmp
sbb
in
xor
out
sahf
pop
sub
lods
dec
adc
mov
ror
xchg
enter
in
mov
mov
stos
add
rcr
test
mov
mov
orb
adc
into
jg
shl
jmp
pop
dec
mov
cmp
les
addr16
in
je
jns
inc
jecxz
insb
sbb
sub
cltd
outsl
and
jne
cwtl
in
fsts
lret
dec
cmp
lods
sarb
mov
add
mov
call
mov
and
mov
jmp
push
fldl
clc
xchg
jbe
xchg
dec
fidivrl
mov
mov
push
or
addl
and
mulb
out
cmp
fists
xor
dec
in
lea
xor
push
les
test
inc
xor
mov
test
dec
dec
add
fmull
sbb
notl
and
pop
orl
jne
fisubl
sbb
cmp
ss
mov
cmp
sub
enter
int
lret
inc
in
pop
movsl
jb
sbb
stos
add
lahf
mov
inc
es
loopne
push
xchg
or
or
pop
mov
sub
cmc
cmp
daa
sub
jmp
idivl
xchg
cmp
dec
mov
sbb
xor
adc
pop
sub
and
dec
lret
lret
test
in
pusha
fisubs
adc
cmp
inc
add
out
sarl
xchg
testb
mov
cmp
and
sbb
adc
ret
scas
and
insl
icebp
scas
pop
aas
mov
push
shll
mov
or
shlb
jmp
inc
popf
repz
dec
fistl
inc
mov
mov
outsb
pop
lock
cmp
rcl
lods
xor
or
negl
lods
add
lahf
push
or
stc
pop
jmp
pop
and
insl
outsl
adc
fsubl
and
mov
arpl
xor
add
lret
in
mov
cmpsb
push
adc
mov
jg
sub
mov
js
push
icebp
mov
push
sbb
push
mov
pusha
popa
retw
cmp
dec
and
xor
sahf
call
in
dec
cmp
imul
ret
roll
test
adc
xchg
add
mov
jp
xor
ret
in
jno
xlat
cmpsb
push
xor
mov
sub
inc
outsl
xor
rcr
push
lcall
mov
data16
jp
mov
insl
jle
movsb
dec
fisttps
mulb
popa
ficoml
dec
adc
cmp
in
push
sub
pop
jecxz,pn
add
jp
out
push
sbb
mov
sahf
mov
mov
stc
mulb
push
loopne
xor
sbb
dec
jp
xchg
mov
push
gs
ljmp
aam
lahf
sarb
je
and
dec
and
syscall
jp
or
imul
push
mov
inc
pusha
idivl
jmp
push
lea
jae
subb
pop
pop
out
test
mov
xor
mov
lds
aas
push
arpl
add
filds
aas
aaa
mov
jne
outsb
mov
cwtl
insl
sahf
test
xlat
ss
pushl
adc
jp
xchg
lahf
mov
jbe
cmp
pop
xchg
mov
aas
pushf
daa
scas
mov
sub
mov
add
inc
mov
fsubs
les
pop
pop
decl
in
insl
or
jle
fcompl
aam
xchg
adc
xor
sbb
call
adc
xchg
lahf
addl
test
aam
les
int
jne
sub
lods
out
dec
jle
xchg
je
je
pop
int
sub
sahf
dec
push
mov
aad
rolb
iret
daa
pop
fwait
sbb
xchg
add
mov
bnd
or
xor
jo
aas
cwtl
mov
push
popf
push
adc
sub
cmc
sbb
sub
xor
mov
popa
sahf
push
dec
or
inc
cld
movsb
test
dec
orb
psraw
mov
icebp
add
sarl
sbb
clc
sahf
mov
push
inc
ds
sub
push
xor
outsb
aaa
mov
mov
cmpsb
loopne
loop
lock
adc
std
dec
add
shl
xchg
or
dec
adc
inc
hlt
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
sbb
cmp
jp
pop
jp
insb
dec
jp
fdivr
loope
jge
xlat
mov
inc
xchg
sub
mov
push
mov
rcrl
addb
add
pop
sbb
xchg
jp
std
in
mov
pop
sbb
inc
push
xchg
dec
in
mov
mov
loope
xchg
sbb
mov
add
jns
sub
inc
jg
pop
aad
mov
sbb
jmp
cmpsl
mov
pop
inc
lcall
test
ret
es
int3
scas
pop
mov
movsl
outsb
or
mov
in
sub
lock
shl
xor
and
out
sbb
and
lea
mov
mov
xchg
lods
iret
pop
dec
jl
repz
xchg
pop
cmc
push
xchg
adc
pop
push
xchg
mov
xchg
cmc
sub
dec
jge
fidivrl
or
jnp
jp
outsb
jae
ss
rolb
sbb
in
and
aad
mov
mov
mov
mov
and
enter
push
adcl
cmp
pop
out
sub
or
sahf
or
popa
int3
orl
sarb
pop
lret
adcl
es
mov
mov
insl
sub
adc
add
and
and
add
int
cmp
inc
out
cmp
arpl
loopne
add
xor
mov
cltd
pop
loope
jae
insl
ret
sarl
or
pop
sbb
jnp
pop
xchg
movsl
dec
and
inc
push
add
dec
inc
arpl
movsl
push
hlt
cwtl
cmp
sahf
mov
mov
sbb
adc
or
and
lea
xlat
pop
jp
jno
insl
sub
rcr
mov
ss
dec
in
adc
fidivs
and
imull
sub
pop
xchg
push
int3
fildl
cmp
xchg
scas
imul
adc
inc
cmp
lds
dec
dec
scas
out
stc
fbld
xlat
sub
and
outsl
xor
jbe
fists
dec
jge
jbe
shlb
lcall
jns
push
xchg
and
push
inc
aad
inc
gs
cmp
mov
mov
mov
inc
lds
push
inc
daa
xor
sub
sbb
pop
fsub
in
pop
stos
mov
mov
aam
enter
push
test
jb
mov
popf
aam
into
adc
mov
pop
adc
dec
in
aad
movsl
insl
jecxz
mov
xchg
ficompl
fucomp
add
repnz
dec
idivl
or
mov
loop
pop
test
xchg
sub
scas
adc
mov
sub
lret
lods
inc
xchg
jl
idivb
fcmovu
xor
jb
sub
and
incl
inc
nop
inc
xchg
sub
push
xlat
add
mov
in
mov
xor
jo
fs
xor
xchg
pop
lds
clc
lods
adc
mov
mov
cmp
mov
jo
insl
pop
stos
and
roll
xchg
xchg
cmpsl
punpcklbw
test
pop
insl
shlb
testl
lahf
lea
aam
stos
addr16
clc
mov
pop
cld
loop
jle
jno
out
subl
or
stos
or
push
mov
xchg
jle
sbb
hlt
push
lds
aad
aam
movsb
andb
dec
test
test
dec
ror
jge
test
mov
jno
jmp
inc
in
or
cmp
xchg
adc
out
movsl
icebp
pop
fadds
fistl
cmpsb
xchg
jae
jbe
pop
lods
pop
outsb
cmp
mov
inc
aaa
inc
mov
aad
popa
xor
dec
mov
cwtl
sub
xor
lods
dec
pop
les
jg
sub
divb
outsb
lret
push
dec
sbb
stos
push
fcmovnb
insb
insl
mov
mov
xor
jecxz
inc
jnp
inc
aas
je
pop
xor
xor
repz
add
mov
movsb
push
insb
ss
sahf
mov
jns
or
enter
aas
daa
roll
cltd
arpl
pop
push
ljmp
pushf
pop
jle
cmp
pop
mov
mov
call
out
mov
pusha
sub
push
dec
xchg
in
std
push
sarl
xor
subb
mov
mov
or
inc
sbb
add
repnz
jl
jmp
xor
jg
and
aaa
out
in
mov
xlat
xchg
ret
nop
loope
andb
shlb
cmp
mov
pop
int
jnp
aaa
jnp
mov
out
clc
leave
jmp
lcall
inc
sahf
popf
or
inc
sub
and
xor
frstor
jmp
mov
dec
cld
enter
aaa
xchg
jp
jmp
jl
or
nop
push
out
mov
cmp
mov
mov
pop
mov
ret
pop
and
cmpb
stos
dec
int
adcb
xor
jecxz
sub
pushf
cwtl
fnstenv
movsl
clc
repnz
iret
daa
xchg
jbe
mov
push
sti
out
cld
add
sbb
jp
sbb
fwait
pushf
pop
jb
fimull
icebp
cltd
push
mov
stos
and
mov
fs
out
push
mov
shufps
cvtdq2ps
jmp
test
lahf
jl
dec
inc
movsb
xor
add
xchg
pop
push
ret
repz
jecxz
in
inc
pop
imul
jg
testl
ret
mov
add
fnstenv
test
loope
popf
sbb
mov
mov
dec
outsl
sbb
lret
mov
push
cltd
sbb
or
add
inc
cmp
mov
cmp
pop
aad
imul
mov
xor
mov
loope
pop
pop
adc
mov
rorl
fildl
jne
xlat
sub
lret
ds
push
add
shl
and
sti
push
pop
insb
sbb
xor
push
sbb
xchg
jnp
mov
ficoms
enter
into
mov
sbb
test
pop
fists
out
jae
pop
or
out
and
sub
sub
mov
call
movsl
lahf
test
or
call
push
jo
xchg
jae
pop
and
push
push
cltd
pusha
sub
call
aam
insb
loopne
jg
ss
out
sbb
fsubp
das
or
repnz
mov
jae
jp
jne
arpl
sub
js
pop
push
icebp
mov
mov
loopne
aas
into
adcl
or
js
xchg
ja
lock
shlb
jmp
lahf
jbe
pop
mov
dec
mov
jge
aam
out
adc
movsl
sbb
jg
test
dec
je
xchg
or
xchg
inc
or
or
push
jbe
lds
mov
gs
jl
fwait
mov
push
lret
dec
je
test
push
adc
push
movsb
sbb
loope
in
adc
or
push
jno
sbb
cmp
lcall
mov
and
sbb
xor
arpl
jmp
cld
sbb
cli
or
dec
mov
mov
movsb
pop
pop
das
xor
insl
clc
xchg
push
xor
insl
jecxz
cmc
cvtpi2ps
push
cmp
sub
loope
ljmp
add
popa
shlb
out
cwtl
xchg
sub
mov
push
and
adc
push
pushf
scas
sahf
xchg
in
jmp
mov
fwait
repnz
test
in
sbb
add
cmc
jmp
cwtl
xlat
ljmp
mov
repz
adc
mov
mov
or
popa
bnd
add
jae,pn
repnz
sbb
aas
pushf
cmpsl
push
or
ja
fldcw
mov
inc
pop
pushf
repz
xor
les
pop
insl
nop
xor
inc
imul
pop
mov
pop
mov
cmp
push
cmpsb
xor
aam
andl
sub
cmpsb
lret
leave
add
ret
adc
add
xchg
jae
aad
dec
pop
add
fmull
inc
xor
fs
aas
mov
mov
imul
rclb
inc
pop
cmp
and
cld
popf
in
cmp
mov
mov
outsb
jmp
xchg
xor
lret
aam
lcall
jo
test
push
test
aam
int3
inc
sub
fs
data16
cmc
jbe
shll
filds
aas
clc
xor
cwtl
jne
push
ret
imull
jo
movsb
mov
sbb
mov
sbb
or
scas
repnz
je
inc
push
pop
jp
add
mov
sbb
es
mov
cmpsb
xchg
movb
sbb
loop
lret
pusha
das
inc
into
decb
add
gs
sbb
add
push
inc
cwtl
add
cmpsb
sbb
inc
jle
mov
and
pop
hlt
aad
scas
in
adc
fldenv
xor
push
pop
cmp
test
sbb
lea
dec
dec
sahf
jmp
push
mov
pop
out
movsb
int3
push
push
cmc
sub
inc
add
lds
fistl
out
lods
lret
cmpb
pop
add
popa
int
xchg
gs
addl
lock
mov
push
in
lods
sbb
sarb
push
or
or
pop
pop
shrb
bound
lds
aas
shlb
pop
rclb
hlt
adc
scas
push
lcall
mov
sbb
incl
pop
data16
cmpsl
jp
push
jb
aam
into
mov
fcompl
sub
sbb
call
dec
cmpsl
es
pop
pushf
filds
popf
lahf
stc
cmp
repnz
jp
mov
adc
cld
mov
pop
incb
lods
adc
sbb
and
in
test
jecxz
cmc
rcrb
cltd
sarl
add
push
outsb
ficoml
xor
not
and
out
lret
cmp
push
popl
adc
cmp
insb
sbb
adc
cmp
jbe
jle
lret
pop
adcl
das
xchg
add
lea
mov
sbb
pop
repnz
pop
ljmp
aam
js
add
clc
ljmp
cld
mov
ret
enter
mov
or
pop
jle
cli
adc
mov
cmp
or
push
nop
das
es
inc
jne
pop
xor
adc
sub
pushf
je
inc
lock
fnstenv
push
mov
fwait
and
inc
or
mov
pop
adc
dec
in
lahf
inc
xchg
adc
dec
adc
imulw
and
ret
ror
pop
dec
cmc
call
inc
cmp
loope
or
dec
ja
into
xor
xor
inc
mov
je
clc
inc
push
in
or
mov
rorb
jg
stos
mov
fidivl
es
inc
or
jle
inc
xchg
mov
cli
cmp
cmp
sub
push
ret
int
cmp
loopne
sbb
dec
test
movl
nop
aam
cmc
orb
pop
adcl
mov
xor
jp
loopne
test
fcomps
and
out
jmp
push
sub
pop
popf
pop
pop
pop
mov
das
and
xchg
sub
popl
push
lods
add
gs
xchg
jne
inc
icebp
push
andl
scas
push
add
jnp
iret
es
jp
push
cmp
rclb
ret
lahf
mov
stos
sbbb
jno
std
adc
test
cmp
xor
inc
xlat
mov
sub
pop
pushf
std
xchg
sub
xchg
in
je
aam
pop
and
xchg
mov
subb
cltd
mov
xor
popf
std
cmp
cld
push
test
cs
lds
ficoms
mov
mov
lahf
aad
lock
movsb
and
sbb
loope
test
data16
insb
pusha
call
shlb
popf
popf
lods
push
stos
jb
movb
fstl
and
das
push
and
and
and
icebp
popa
rdtsc
fcoml
jle
add
cwtl
mov
mov
in
ljmp
and
dec
cmp
add
mov
cmpl
out
gs
addr16
stc
and
in
mov
insl
repnz
sbb
pop
lret
daa
scas
cli
in
pop
fmulp
imul
push
daa
arpl
pop
adc
adc
jmp
sti
je
mov
mov
and
pop
out
stos
xchg
mov
adcb
adc
jno
roll
inc
mov
mov
mov
mov
lcall
inc
or
xor
adc
fidivs
int3
lods
iret
repz
gs
je
ljmp
mov
sti
mov
jp
add
and
fwait
icebp
lea
cmp
ficoms
hlt
cmc
fistpll
ja
data16
stc
orb
bound
mov
push
adc
jp
out
shlb
mov
dec
lret
jmp
push
ret
mul
push
mov
and
cmpsl
push
popf
push
pop
sub
sub
out
nop
or
je
add
leave
xchg
int3
dec
les
xchg
sbb
out
xor
ret
push
jne
inc
aad
xor
sbb
push
mov
fcmovnbe
lds
dec
push
rcrb
addb
inc
aad
pmulhuw
loopne
mov
mov
sbb
aad
cltd
mov
sbb
cmc
sbb
enter
repz
mov
pop
lahf
push
mov
adc
pop
enter
and
aas
mov
or
out
push
loop
test
fwait
inc
fstl
pop
rcrl
jae
xchg
add
jp
lahf
cli
add
daa
pop
push
fiaddl
stos
dec
out
shlb
fiaddl
sbb
push
dec
cld
cmp
mov
xchg
lret
fcoml
movsb
mov
and
lret
pop
push
pop
xor
loope
repz
push
dec
inc
movsb
jp
notb
xor
loope
mov
sbb
xor
mul
ret
xchg
dec
sub
fisttpll
cwtl
loop
mov
mov
push
xchg
sbb
dec
inc
outsb
adc
push
call
xchg
and
xchg
xchg
addr16
sub
fidivrl
xor
subb
push
movsl
jmp
jno
sub
daa
fnsave
jmp
fcompl
cmp
sbb
jbe
add
imul
sbb
in
hlt
test
dec
rcrb
xor
xor
jno
mov
aas
cli
addr16
pop
add
jmp
or
shlb
mov
xchg
mov
xor
push
imul
jmp
enter
bound
popa
mov
mov
shll
loop
out
inc
cmpsb
mov
xchg
sbb
popf
pop
mov
in
cmp
pop
and
or
fnsave
fldl
je
aas
mov
add
aas
lret
jge
in
dec
stos
jl
xchg
add
out
decb
loopne
sub
call
mov
jmp
incl
dec
mov
pop
xchg
sbb
mov
adc
pop
nop
clc
cmp
pop
imul
fisubs
orl
xchg
movsb
xchg
rcl
jg
pop
loope
inc
repz
inc
into
xchg
mov
mov
hlt
dec
loop
stos
jg
pusha
mov
push
lods
imul
fadds
outsl
sub
mov
aas
xlat
adc
or
add
aaa
mov
enter
in
test
dec
fidivl
aad
inc
and
ds
lods
add
dec
jne
push
leave
lcall
mov
imul
and
jle
sbb
mov
inc
push
sbb
fdiv
in
decl
pop
cli
insb
add
out
mov
cmpsl
loopne
sti
rcl
pushfw
dec
ficoms
sub
inc
stc
rolb
fcmovbe
lcall
pop
add
loop
popa
fcompl
or
inc
jns
jle
mov
dec
mov
pop
pusha
js
push
sbb
xchg
stc
jno
bound
mov
sbb
inc
sbb
cmp
push
cwtl
add
cmpl
xor
sbb
cmp
dec
test
mov
mov
add
fsub
jns
popl
jbe
cmp
mov
in
and
les
mov
mov
stos
sbbb
and
ja
lret
sub
jns
shl
xor
push
aas
loope
sbb
xchg
iret
inc
pop
adc
cmp
inc
push
gs
fsubrs
adc
daa
or
xor
imul
in
push
xchg
pop
sbb
jg
push
push
push
add
sbb
push
and
pop
xchg
xlat
pop
xor
jns
rcll
mov
incl
aaa
or
add
call
int
vpshufhw
sbb
decl
inc
lds
push
push
adc
adcl
xchg
xchg
stos
push
fildl
jmp
push
jae
rorb
cli
outsl
test
int
cmpsb
ficomps
mov
jge
enter
cld
sbb
jnp
das
push
bound
mov
sbb
in
adc
xchg
sbb
push
stos
mov
jno
std
xchg
inc
dec
jge
push
test
push
js
pop
mov
in
or
jp
inc
sub
jmp
sbb
inc
cmp
mov
adc
mov
sti
insl
adc
mov
stc
fwait
xchg
jl
mov
icebp
xor
lock
inc
lock
inc
adc
mul
or
ja
pop
orb
add
or
mov
xchg
test
cmpsb
jl
ss
inc
push
pop
push
sbb
mov
insb
and
xchg
cmp
aam
clc
jne
add
or
push
divl
rolb
call
and
pop
mov
stc
neg
adcb
cmp
push
int3
sbb
mov
sub
js
lahf
mov
outsl
lret
push
je
stc
shll
inc
xchg
movsl
int
dec
aad
jbe
push
and
push
fs
pop
stos
adc
out
mov
inc
inc
fimull
push
dec
mov
loop
and
scas
sbb
dec
dec
loope
sub
sbb
mov
repz
or
xchg
adc
sub
jmp
cs
pop
cltd
fiadds
lds
ret
inc
jne
jecxz
ficoml
jb
ret
in
shl
fdivrs
dec
jne
xor
je
subl
fwait
incb
pop
faddl
or
cmp
fbstp
mov
add
fucomi
pusha
enter
insb
in
movsb
sub
mov
add
mov
inc
icebp
aaa
push
std
popa
je
ljmp
sti
xor
xlat
jnp
pop
cli
mov
out
lret
jo
rcl
loop
stc
xor
xchg
jbe
pop
mov
jns
push
fidivrl
xchg
and
test
insb
adc
lret
or
inc
cwtl
pop
mov
popa
push
iret
mulb
pop
arpl
frstor
add
cli
dec
push
cmpl
push
jge
int3
test
push
aas
imul
fcmovbe
xchg
jns
bound
dec
jo
nop
filds
jg
adc
in
pop
cltd
mov
xchg
jb
ss
repnz
sbbl
popa
or
imul
mov
cmp
mov
sbb
mov
rolb
in
test
js
test
push
mov
push
subl
pop
cmp
mov
sbb
add
sbb
pushf
and
push
jg
and
stos
or
and
push
call
scas
mov
dec
dec
dec
and
repz
cmp
mov
insb
outsb
dec
stos
push
clc
mov
jnp
add
mov
xchg
dec
mov
fs
jmp
jle
out
pop
pop
push
jae
xchg
shll
lret
xor
shlb
incb
mov
jmp
stos
adc
add
mov
out
pop
ficomps
pusha
insl
xchg
add
dec
mov
hlt
addb
jmp
mov
push
ret
in
ds
inc
arpl
loop
in
push
imul
jbe
popf
mov
cmc
jmp
in
mov
loope
cmp
push
inc
flds
std
inc
or
iret
or
rcrb
das
xchg
inc
inc
cmpl
sub
sub
lds
fisubl
mov
mov
jg
add
adc
cmp
int
inc
repnz
jo
dec
xchg
mov
std
mov
out
and
inc
mov
shlb
pop
and
cmc
leave
mov
mov
popf
in
add
mov
iret
and
inc
mov
lea
pop
jl
sub
or
push
dec
adc
mov
push
rorl
lahf
mov
dec
inc
repnz
inc
sub
dec
aad
xor
lahf
lods
adc
jnp
int3
push
test
and
fistl
xchg
out
insb
jno
data16
enter
xchg
push
aaa
adc
dec
fdivs
leave
inc
cmp
dec
xchg
dec
sub
mov
or
shrl
mov
pop
cmp
push
test
sub
mov
insl
scas
mov
pop
jmp
sar
aam
mov
cmp
mov
lds
jae
pop
mov
ja
xchg
inc
cmc
inc
jg
ljmp
insl
lcall
dec
movsl
into
adc
popa
clc
mov
cmp
sub
cmp
add
dec
xor
dec
movsl
jecxz
or
dec
adc
hlt
pop
es
xchg
push
sbb
lea
jbe
inc
mov
adcb
push
adc
iret
cltd
into
mov
mov
imul
mov
int3
adc
sub
leave
add
fcoms
test
mull
cmpsl
arpl
fisubrl
mov
jg
cltd
mov
addl
addr16
add
xor
movsl
stc
daa
push
inc
mov
push
sbb
or
cmpsb
mov
aam
pop
mov
mov
scas
lds
inc
xor
je
movsl
cmpsb
pop
xor
sbb
push
mov
adc
imul
pop
xchg
cld
and
sbb
ja
inc
js
adc
cmpsl
fwait
iret
out
je
aas
dec
mov
jbe
arpl
pop
fisttps
ds
das
xchg
mov
stc
jl
cmpsb
movsl
pop
adc
dec
cmc
inc
fdivrl
mov
cmc
adc
mov
xlat
and
test
js
paddsw
xor
mov
out
imul
leave
push
sub
xchg
mov
jle
pop
inc
js
xlat
push
es
out
push
mov
xchg
sub
mov
fwait
in
xchg
xor
pusha
push
std
decl
push
pop
mov
and
mov
xor
push
xchg
cmp
stc
out
ret
daa
cmp
adc
jle
xor
mov
lahf
dec
sbb
and
addl
dec
imul
adc
outsl
outsl
mov
dec
cltd
xor
and
addr16
pushf
or
cwtl
pop
imul
in
pusha
xchg
dec
nop
rorl
cmpsl
xchg
mov
adc
dec
call
insl
movb
das
sub
movsb
fucomp
fidivrs
mov
imul
mov
jo
jle
orl
push
dec
and
xchg
cmp
shlb
repz
and
or
shrl
sub
aaa
inc
sbbb
and
pop
in
or
push
pop
lds
out
mov
lcall
and
lock
mov
bound
daa
sub
movsb
pop
scas
shll
mov
leave
call
mov
sti
pusha
xchg
lret
cltd
mov
call
mov
int
add
dec
test
jnp
popf
imul
lret
fnstsw
test
add
mov
mov
sahf
add
sti
lahf
push
mov
incl
fbstp
cmp
out
mov
jnp
push
pop
jg
dec
imul
pop
jle
lcall
icebp
test
mov
cmpsl
mov
add
mov
test
daa
mov
cmp
pop
orl
fsubrl
add
inc
dec
push
in
pop
or
add
imul
addr16
add
outsl
jo
mov
out
add
cld
xchg
mov
sbb
shl
dec
cmp
imul
mov
pusha
and
mov
dec
addr16
fimull
add
add
shlb
pop
inc
hlt
mov
call
and
cmp
mov
jmp
xchg
jmp
cmpsb
int
fwait
loop
dec
int
or
mov
mov
cmp
pop
in
mov
test
popa
pop
xor
int
out
mov
adc
ffree
ja
fnsave
cmpsl
xor
sub
das
pop
scas
fldenv
in
js
xor
test
pop
fdiv
arpl
sahf
xlat
pop
xor
imul
adc
push
cli
adc
cwtl
cmp
jbe
mov
add
nop
sahf
pop
jns
push
mov
fdivl
mov
and
cmp
xchg
pop
loopne
rcll
cmp
mov
and
mov
mov
cld
sub
mov
nop
imul
lods
mov
push
sbb
insl
aas
push
xchg
std
add
repnz
add
pushl
das
or
cwtl
cmp
push
dec
rcll
rorb
sbb
shrl
incl
loopne
dec
loopne
cmp
push
mov
cmp
ds
addr16
adc
scas
mov
dec
inc
cltd
test
mov
jne
mov
cli
and
sbb
sub
shr
mov
and
mov
push
mov
stos
pop
loopne
aam
pushf
imul
cmp
popa
loop
cmp
repnz
pop
pop
je
sbb
pop
pop
mov
dec
xor
shll
inc
shrb
lea
push
mov
pop
in
out
sub
add
movsl
cli
cmpsl
mov
int
jnp
and
insl
jp
cmp
mov
lods
push
and
lret
out
loopne
iret
pop
mov
test
mov
or
nop
js
in
cmp
xchg
cmpsl
mov
inc
insb
in
repz
test
push
dec
cmpl
or
loope
ja
xor
dec
out
imul
mov
das
popf
push
push
ja
adc
or
sar
inc
lahf
push
iret
fidivs
dec
mov
jbe
jne
pop
cmp
mov
dec
lret
sbb
jno
sub
push
inc
pop
and
out
stc
mov
mov
aad
in
sbb
jne
hlt
inc
fimull
aad
xor
dec
inc
sub
or
insb
fsubrp
popf
mov
popw
inc
fildll
jl
push
sub
sub
dec
inc
clc
jbe
mov
adc
push
enter
leave
leave
dec
cltd
aam
mov
or
fstps
scas
add
aas
negb
outsb
jne
cmc
pop
mov
mov
xor
ds
cmpb
aam
jo
jp
int3
stos
pop
lcall
jo
adc
xchg
rorb
push
push
aad
mov
push
nop
das
mov
jecxz
cmpsl
push
push
xor
adc
loopne
sub
jno
cmc
push
test
loop
test
loope
sbb
test
int
and
mov
loope
push
cmp
stos
adc
cmp
nop
cltd
lds
xorl
pop
pop
xlat
out
out
inc
cltd
mov
cmp
add
stos
dec
pop
pop
cmp
jmp
xor
call
dec
inc
xor
mov
mov
pop
insl
out
pop
jl
les
iret
sub
jmp
inc
dec
adc
insb
int3
insl
jb
daa
add
or
mov
testb
mov
pushf
push
mov
ljmp
outsl
or
jno
jo
shll
or
lcall
push
xchg
sbb
pushf
or
arpl
mov
and
pop
sbb
xchg
jmp
mov
bound
stc
sub
xor
push
pop
ja
pushf
mov
and
push
cmp
std
clc
pushf
bswap
add
pop
cmpsl
lret
push
push
jecxz
mov
ds
xchg
add
pop
mov
cltd
mov
xor
mov
add
jns
jno
inc
cs
push
and
mov
dec
shl
jl
sbb
sub
xchg
pop
mov
pop
daa
sahf
insl
xchg
mov
push
in
leave
add
aas
add
dec
pop
jo
or
push
mov
in
lds
inc
mov
jmp
jno
cmp
sub
sti
and
je
xchg
xchg
lea
add
aas
ja
and
popa
mov
test
in
in
pop
lods
inc
push
das
mov
sbb
push
lahf
jl
dec
data16
cmp
xor
mov
negl
jg
or
icebp
test
push
pop
fimull
inc
mov
cmpsb
push
rolb
pop
es
dec
sbb
lods
inc
enter
jb
sub
xchg
aam
jl
sub
negb
adc
in
dec
mov
pop
mov
jb
xchg
pop
mov
cmp
adc
dec
pop
lods
mov
iret
jp
cmp
adc
mov
pushf
int3
outsb
push
mov
lods
out
mov
sub
dec
jno
addr16
and
jl
push
cld
mov
jns
mov
popa
popa
or
popf
insl
dec
cmp
xchg
outsl
popa
pop
in
add
andl
fiaddl
int3
push
test
push
popf
xchg
mov
mov
dec
enter
add
cmp
xchg
in
daa
in
jne
loope
movb
int
jmp
movsl
xor
fwait
in
and
movsl
pop
lret
add
cmc
das
into
movsb
aaa
inc
push
dec
aaa
mov
xchg
inc
xorl
pusha
std
pop
shll
adc
xor
adc
push
into
dec
bound
mov
cmp
mov
sbb
out
push
das
out
xor
jno
and
sub
mov
in
mov
cmp
cmp
xorl
fdivrl
fdivr
cli
mov
scas
sub
sbb
movsl
jle
and
xchg
push
daa
xchg
out
mov
push
push
inc
push
shl
mov
jae
stos
js
mov
and
jle
push
int3
jne
inc
movsl
arpl
jbe
lahf
sub
pop
and
fldl
xor
scas
jg
jmp
loopne
pop
mov
insb
push
pop
jae
out
pop
adc
adc
xchg
jne
xchg
or
outsl
rdmsr
cmpsb
lods
push
xor
loopne
sub
mov
xor
ss
adc
pop
fdivrs
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
cmp
scas
ds
inc
pop
jp
xor
mov
jmp
push
add
sub
hlt
daa
popa
xchg
stos
sbb
jp,pn
pusha
push
stos
icebp
mov
fisubs
insl
fistl
pop
mov
push
clc
imul
dec
pop
aas
lods
rcl
imul
mov
enter
push
dec
add
sbb
cmpb
clc
fldt
cmp
push
insb
dec
pop
mov
cwtl
mov
mov
pop
inc
mov
xor
or
mov
inc
add
add
sbb
add
dec
loope
popa
or
xor
adc
cmc
dec
shll
jg
pop
dec
insl
ficoml
jno
es
in
subb
mov
fwait
dec
push
scas
pop
stos
push
movsl
gs
sbb
cltd
lods
jnp
sub
outsb
mov
mov
pop
filds
or
imulb
cli
ss
add
ret
sbb
loope
cs
into
in
adc
cld
adc
outsl
sbb
into
add
or
cmp
add
xchg
dec
mov
lret
xlat
insb
mov
add
loopne
roll
stc
add
std
sbb
int
popa
adc
sbb
lock
xchg
repz
pop
lahf
mov
sub
push
aad
xchg
fdivs
push
pop
out
in
mov
or
push
repz
xchg
sub
sbb
paddq
aam
jp
je
push
xor
jb
pop
add
fiaddl
outsl
pusha
pop
jne
stos
jecxz
push
and
mov
and
mov
mov
sub
push
icebp
lods
dec
adc
lods
enterw
xchg
nop
int
int3
push
sarl
mov
clc
inc
xchg
push
mov
xchg
mov
fdivl
mov
lcall
aad
adc
stc
push
mov
call
mov
xchg
jo
insl
and
push
adc
lahf
ljmp
cmp
ret
dec
or
das
insb
mov
repz
jne
mov
out
in
or
and
into
xchg
jl
xchg
mov
xor
mov
cmp
xchg
ds
mov
in
sbb
and
jle
jge
inc
ljmp
pop
fisubrl
mov
mov
mov
fisttps
fwait
adc
pop
cmp
jg
push
sub
fnstenv
cmp
cmpsl
mov
mov
inc
mov
repz
xor
mov
cmp
bound
or
sahf
scas
sbb
jecxz
pop
inc
imul
or
je
mov
into
out
push
xor
out
scas
mov
fisubrl
ljmp
lcall
sub
dec
into
lods
imul
fimull
inc
lea
cmp
adc
inc
jl
jno
lock
mov
je
in
loop
sarl
ss
add
mov
mov
push
insb
nop
sub
jae
shlb
jp
into
test
iret
es
jp
add
sbbb
lcall
call
pop
mov
ss
imul
sti
pop
repnz
adc
imul
addr16
sbb
mov
mov
loop
jg
loopne
fistpl
mov
stos
jge
pop
mov
inc
lahf
mov
jne
ja
xor
call
divl
lds
sub
xchg
mov
repz
dec
dec
pop
dec
push
lahf
movmskps
pusha
outsl
and
xchg
pop
pop
push
push
rcl
jno
dec
adc
cmp
je
movsl
jp
pop
das
cmp
mov
aaa
in
loope,pt
mov
test
fiaddl
inc
push
sub
jne
dec
push
test
insl
pushf
push
adc
mov
mov
sti
push
mov
inc
inc
mull
jge
or
mov
ja
adc
jo
pop
lcall
cs
sbb
xor
subl
int3
repz
leave
sub
std
test
ds
out
jg
push
gs
loope
inc
and
xchg
rclb
int
iret
jb
jbe
inc
push
aas
iret
pop
fldl
ficomps
fsubs
xchg
cwtl
cmp
mov
dec
aam
mov
rorb
lret
pop
popf
dec
ljmp
dec
jle,pn
cmp
sarl
cmpsl
fidivrl
cmpsl
cwtl
les
sub
pop
sbb
ds
leave
fiaddl
mov
add
mov
add
ret
aad
lahf
add
out
mov
addr16
jae
subl
stos
xchg
jle
iret
sub
jg
into
movsl
adc
cmc
nopl
jge
clc
mov
ss
jae
xlat
mov
lea
adc
xchg
fbstp
std
and
sbb
sub
lods
divb
push
push
rol
jb
scas
lock
loope
inc
dec
int3
aas
mov
sbb
aas
test
adc
gs
aaa
sbb
xlat
hlt
mov
or
je
jge
push
add
sub
and
sbb
ja
pop
fnstsw
clc
stos
int
cwtl
aad
xchg
lods
xchg
addr16
sub
mov
push
lahf
lret
pop
insb
ss
push
lcall
jae
cld
push
inc
jmp
cmp
lods
enter
mov
inc
ret
adc
stos
jp
in
or
movsb
xchg
scas
adc
pusha
ret
jge
pop
dec
adc
mov
dec
push
and
lcall
mov
mov
or
pop
cmp
daa
mov
cltd
jae
pop
xor
loop
js
sbb
xor
fwait
sub
nop
bound
mov
jmp
mov
add
rol
nop
insb
jge
fs
dec
imul
fbstp
cmpsb
and
sbb
or
mov
jp
dec
idivb
xor
cs
push
int
dec
or
ss
bound
aaa
dec
out
movsb
adcl
filds
fnstenv
sahf
pop
xor
mov
adc
push
imul
and
xchg
jg
add
push
sbb
xchg
sbb
jecxz
inc
mov
orb
mov
call
mov
movsl
mov
xchg
dec
xorb
inc
fnstsw
adc
pop
and
fwait
in
mov
clc
and
ja
ss
lahf
jae
sub
test
dec
dec
xchg
stos
push
imulb
xor
nop
mov
cmp
xorl
js
cmp
push
jmp
jno
fstpt
push
xchg
mov
pop
in
jnp
insb
pop
dec
jo
test
jo
adc
mov
shll
jnp
lret
rcll
or
addl
js
aas
or
dec
adc
iret
orb
push
add
mov
fisubl
inc
mov
rep
inc
and
or
fwait
inc
andl
repnz
pop
xlat
mov
push
aas
cmp
gs
mov
fcmovnu
mov
sub
xorl
push
scas
inc
rcrb
repnz
insl
sub
icebp
mov
int
jbe
test
outsb
mov
mov
sbb
dec
cwtl
rep
psubsb
or
jne
test
mov
mov
dec
add
mov
pop
je
pop
mov
push
dec
mov
ds
cwtl
sub
sahf
and
out
out
dec
mov
cmp
and
push
push
pop
jp
neg
jecxz
or
mov
add
ds
imul
subps
or
cs
shrl
jge
pop
out
sbb
mov
sar
add
mull
or
int3
lods
xchg
push
dec
sti
and
movsb
sbb
out
sarb
testb
sub
cmp
sbb
dec
jnp
jp
mov
repnz
rorl
fwait
adc
mov
fcomip
and
mov
ljmp
adc
shlb
pop
ss
insb
inc
call
cmpsb
pop
lods
xchg
rorb
sub
cmp
outsb
fstpl
iret
mov
and
int
xor
stos
scas
sbb
out
gs
mov
adc
leave
pop
push
sbb
fsubl
rcl
cmc
mov
outsl
mov
add
cld
call
sbb
inc
jecxz
rorl
or
out
push
adc
xor
jg
or
leave
push
out
xchg
sub
mov
pop
mov
aas
clc
lods
cmp
mov
push
imul
fadds
adc
sub
stos
out
jge
iret
in
and
loope
sbb
lods
mov
popf
lcall
popa
inc
in
jmp
lods
loopne
sub
aad
sbb
mov
shlb
lahf
cmpsl
adc
mov
jno
or
hlt
fmull
lret
lods
lret
push
push
or
push
xchg
int
fsts
imul
ja
push
jno
inc
jg
in
shll
aam
and
dec
mov
cmpsb
mov
call
shl
push
jge
inc
cli
sahf
dec
fsubl
pop
adc
addr16
lcall
fldt
test
movsl
xlat
lea
mov
popf
xchg
test
adc
lahf
mov
js
je
xchg
loope
cmp
mov
rcrb
jecxz
mov
mov
loopne
cmpsb
jge
je
cmp
pmaxsw
xchg
xor
dec
xor
stos
dec
in
sub
jne
mov
add
inc
pop
pop
dec
push
cld
or
lret
hlt
add
bswap
jns
test
aaa
jnp
stc
mov
xor
fadd
mov
cs
adc
scas
aaa
push
cmp
xchg
hlt
push
cmpsb
inc
inc
cmp
and
in
mov
pop
cmc
cmp
je
inc
push
and
add
and
jne
in
push
ficompl
push
inc
mov
aas
push
data16
lret
sar
scas
fdivl
adc
sahf
push
int3
push
and
mov
shlb
adc
inc
dec
ljmp
mov
sub
mov
es
jp
rcl
inc
adc
cltd
jb
push
imul
xchg
call
pusha
push
rcrl
jle
out
or
lcall
jge
aaa
pop
add
add
mov
outsb
std
jg
stc
adc
fidivrs
mov
call
lea
sbb
jl
mov
push
stc
les
loope
or
add
bound
mov
sbb
sti
lock
jle
test
out
or
mov
add
mov
jg
jb
cmpsb
jmp
xchg
lods
pop
nop
ds
jg
xchg
icebp
sbb
idivl
pushf
adc
shll
fdivrp
xor
lds
mov
in
outsb
and
xchg
clc
ss
bound
sub
or
mov
mov
daa
xor
das
add
rclb
or
stos
xchg
scas
loope
dec
mov
aaa
subl
sub
rcll
dec
icebp
cmpsb
pusha
add
mov
out
arpl
sub
jne
push
inc
ds
movsb
dec
fwait
insl
add
lcall
out
mov
es
sahf
arpl
dec
xor
mov
inc
xchg
mov
cmpsl
mov
gs
sbb
mov
rorl
insb
cmpsb
stos
ljmp
sub
mov
out
fstpl
push
or
stc
adc
rclb
adc
rcrl
fs
xlat
dec
xchg
or
pshufw
aaa
and
inc
jns
jae
dec
cmp
cld
jecxz
mov
mov
addl
gs
jbe
adc
mov
inc
in
das
inc
jecxz
cvttps2pi
rcrl
pop
test
and
jl
das
inc
mov
dec
xchg
jb
das
movsb
test
in
fsubp
push
and
rcrl
lods
test
fwait
mov
aaa
mov
push
add
pop
popf
push
gs
insb
xchg
jbe
inc
ret
subps
in
inc
out
dec
adc
inc
xor
mov
outsl
xchg
dec
int3
movsl
mov
shr
inc
push
pop
test
pusha
mov
and
pop
pop
xchg
mov
adc
lods
pop
and
call
pushf
jae
mov
lahf
arpl
xor
pop
mov
out
push
jg
adc
mov
ret
aad
ss
mov
fisubrl
dec
sbb
stc
int
sarb
ror
call
jnp
mov
or
push
jp
ljmp
cmc
outsl
jg
jb
shlb
and
insb
lahf
xor
xlat
jmp
push
notl
inc
dec
inc
and
jge
xchg
das
enter
stc
and
dec
sbb
clc
push
mov
or
clc
call
cmp
lds
dec
add
ja
pop
cmp
outsb
dec
pop
sub
sub
ss
shl
les
mov
sbb
xor
xchg
repnz
pop
lcall
add
cli
jnp
cmp
das
lods
dec
cmpsl
lcall
pop
outsb
mov
fsubl
hlt
xor
insb
or
daa
mov
dec
xchg
notl
ficompl
cli
mov
popa
ja,pn
sbb
dec
pop
xchg
add
dec
mov
pop
sub
cli
enter
cmpsb
cwtl
lret
aaa
dec
cmpsb
pop
ss
fnstsw
imul
testl
pop
and
nop
mov
push
and
das
add
das
in
pop
ja
data16
loope
mov
mov
dec
jmp
add
mov
mov
icebp
test
shr
mul
inc
ds
push
push
popf
and
fs
add
int
sub
push
icebp
pop
and
daa
or
push
mov
fimull
pop
add
push
divb
inc
rorb
js
sti
pop
push
add
out
pop
jb
adc
outsl
mov
adc
ja,pn
int
stos
sbb
push
test
pop
sahf
pushf
mov
mov
jb
sahf
out
push
xor
loope
fdivs
loopne
bound
dec
pop
and
mov
or
inc
std
sbb
cld
pop
les
adc
sbb
push
dec
jg
cmp
push
cmp
lret
pop
aad
fidivl
push
push
xchg
mov
dec
sub
sub
cs
adcb
test
mov
sub
push
inc
jg
popa
adc
inc
subl
imul
adc
pushf
dec
stos
inc
adc
lods
cmp
fcoml
sub
sub
repz
mov
inc
fisttpll
sahf
cmpsl
adc
ret
xlat
sub
dec
aad
popf
test
into
pusha
ret
fldenv
jbe
sub
lahf
jg
insl
cld
jbe
imul
xor
sub
nop
insb
jl
pop
loop
rorb
xlat
rol
stc
pop
bound
test
mov
ficoml
add
dec
out
xchg
pop
xchg
sbb
add
lea
mov
cmc
ljmp
jmp
jle
sub
pop
push
adc
mov
pop
fmull
imul
xchg
or
aam
or
stos
test
ret
dec
mov
ret
ja
jp
nop
ss
scas
pop
in
and
cmp
jl
mov
jge
pop
or
mov
testl
lret
daa
rorl
repnz
jge
mov
js
add
mov
or
lret
jo
dec
add
cmp
inc
int
mov
jbe
xor
out
push
xlat
aas
jmp
sub
jle
add
push
arpl
test
mov
xor
stc
int3
gs
push
inc
xchg
std
sub
xchg
push
sbb
repnz
jl
je
xchg
movsb
mov
cmp
bound
neg
or
gs
stc
sbb
xor
sbb
ss
dec
pop
iret
mov
mov
mov
imul
jne
lcall
dec
cmp
shll
loop,pn
loop
inc
sbb
lods
jne
lds
mov
fadds
sbb
push
mov
jo
fistl
inc
push
cld
in
xchg
jae
leave
mov
cltd
push
jns
cmp
and
add
sub
leave
mov
popf
popf
jl
inc
xor
jns
dec
bound
lret
daa
in
bound
call
cld
fisubrs
dec
cmpsb
leave
push
mov
je
stc
jo
aam
xor
sbb
xorb
mov
mov
out
stos
jbe
cli
decb
and
adc
je
xchg
mov
pop
mov
or
cmp
pop
jb
in
cs
pop
dec
and
outsl
mov
out
cltd
test
adc
cmc
inc
aam
cmp
imul
loopne
xorl
sub
out
mov
pop
or
inc
cltd
mov
clc
arpl
sbb
inc
js
xchg
inc
mov
sub
lret
cmp
jne
pop
pushf
or
xorb
dec
es
mov
add
roll
mov
mov
mov
sbb
sub
push
and
lea
xor
sub
adc
adc
in
push
ret
inc
movsl
dec
jmp
incl
int
inc
lds
cltd
mov
push
xchg
ret
and
imul
shll
andb
jmp
cmpsb
ficoml
xchg
cmp
jne
test
dec
gs
add
ljmp
sub
cmpsl
shl
orb
loopne
pop
jmp
dec
mov
loop
rol
inc
loop,pn
cs
and
sub
shll
int
outsl
arpl
lea
mov
jno
lret
pushf
mov
mov
arpl
test
fnsave
cwtl
jo
sub
sub
cli
and
pop
jecxz
cmc
pop
cld
je
push
pop
cmp
dec
movsb
xchg
sbb
pop
mov
filds
jl
jbe
out
xchg
push
jg
movsl
cmpsl
sbb
repnz
fiadds
mov
mov
jecxz
outsl
sub
loop
stc
jbe
es
test
ret
test
ss
scas
push
cmp
test
loopne
pop
pop
push
lcall
sbbb
fidivs
dec
cmp
rep
test
nop
nop
es
insl
ljmp
sub
cmp
loopne
jmp
cmp
pop
or
push
addr16
adc
pop
in
les
xchg
pop
and
icebp
imul
jae
mov
mov
insl
movsl
ljmp
add
cltd
add
or
push
daa
movsl
xchg
jae
mov
mov
add
xchg
jns
xchg
inc
mov
inc
stos
xchg
push
loop
push
sbb
mul
inc
mov
jmp
inc
imul
dec
inc
jge
mov
jb
out
push
sbb
adc
dec
push
out
sbb
addr16
jg
mov
and
adc
rol
pushf
cwtl
movl
push
mov
dec
mov
xor
inc
mov
jb
mov
push
int
push
stos
push
cld
loop
pushf
cmp
cld
adcl
ja
orb
add
cmpsl
ljmp
push
pop
leave
pushf
aas
mov
lock
sbbl
pop
dec
mov
push
xor
icebp
pop
xchg
stos
cmp
jle
mov
out
mov
std
imul
out
adc
shlb
lods
into
fcmovnbe
xchg
adcl
mov
js
cmp
insl
aad
or
sub
jge
push
lret
imul
scas
sbb
jg
mov
xlat
rorb
jmp
adc
movsb
or
sub
sub
rorb
stos
and
shrb
xor
adc
shlb
cmp
orl
jno
and
xchg
xchg
imul
sahf
out
call
add
fs
lods
insl
into
jge
pop
fdivrl
pop
pop
lahf
jmp
pop
jns
popf
adc
inc
sbb
cs
jnp
jmp
xchg
pop
std
push
adc
cmpl
fwait
mov
gs
in
loope
mov
push
pop
insl
mov
and
les
and
mov
push
pop
sahf
mov
xchg
cs
jne
enter
lea
inc
dec
fwait
jle
mov
scas
sub
ret
pop
xchg
push
lods
sub
or
stc
jbe
add
scas
sbbb
lds
push
out
pop
pop
and
push
sub
jp
mov
cmp
aaa
adc
cmpb
shll
divb
inc
mov
pop
enter
xchg
int3
cmp
mov
mov
inc
sbb
dec
cs
cld
mov
jne
ljmp
loope
pop
xchg
lds
shll
mov
aad
leave
loopne
adc
xchg
pop
fadd
js
subb
aam
js
cmp
push
loopne
es
scas
dec
xchg
dec
add
sub
inc
jne
shrl
test
push
and
fisubs
dec
mov
mov
div
dec
imul
lret
sub
inc
test
push
add
repnz
or
mov
fadd
pop
fcoms
push
mov
aad
pop
jne
lds
insb
imul
inc
xlat
mov
std
fwait
inc
fdivp
cmpsl
xchg
shlb
mov
rcrl
ror
jecxz
pop
sbb
fisubl
ds
mov
aaa
mov
push
hlt
mov
sub
sahf
pop
je
testl
call
dec
xor
sub
sbb
mov
push
loopne
adc
imul
lret
mov
insl
inc
fsubrs
xor
pop
inc
mov
lods
add
imul
outsb
lods
inc
mov
jge
xchg
push
outsb
mov
mov
pop
sub
in
pop
jne
jns
push
push
inc
mov
jnp
in
shll
fstpt
cmp
inc
adc
xor
fwait
xchg
jge
es
hlt
mov
test
fwait
stos
test
stos
sbb
adc
mov
xchg
pop
pop
out
xor
jne
cmp
insl
cmpsl
imul
mov
dec
cmc
lock
loopne
dec
or
dec
mov
fidivrs
and
fcmovnb
sahf
mov
gs
xchg
sub
push
sub
pop
loop,pn
or
cmp
and
jmp
jp
inc
push
sub
repnz
out
ljmp
pop
jmp
cmpsb
roll
pop
jle
fs
xchg
mov
mov
dec
test
jbe
outsl
sub
fxch
rolb
push
enter
cld
or
mov
xchg
aam
lahf
test
inc
fcmovnb
sti
push
and
fadds
push
and
mov
xchg
pop
xor
adc
outsb
cltd
mov
orb
pop
dec
and
xchg
dec
mov
js
pop
cs
adc
push
inc
std
xchg
mov
or
jg
lods
xchg
inc
and
dec
or
pop
dec
jo
iret
adc
nop
jno
scas
outsl
lret
mov
xor
in
push
scas
test
fadds
push
lea
mov
mov
int3
or
cmp
pop
pop
dec
xchg
or
imul
sbb
or
fistpll
sub
mov
sbb
xchg
jge
jg
fs
int
cmp
push
mov
mov
or
aam
mov
and
mov
loope
jno
insb
mov
inc
popf
cs
out
mov
or
jle
pop
push
push
repnz
popf
or
test
or
lea
jp
sub
xor
ffree
mov
inc
jnp
out
xorb
fnstenv
out
je
mov
pop
aad
adc
pop
mov
cs
divl
fsubrs
push
inc
pop
cmpl
stc
mov
push
inc
out
je
xor
and
xchg
inc
popf
adc
mov
je
xchg
or
push
fwait
imul
leave
ja
sti
aam
dec
stos
enter
sbb
lret
mov
in
insl
dec
lret
xchg
subl
fldenv
insl
inc
les
mov
test
add
cwtl
lock
lea
pop
pop
dec
mov
mov
adc
sti
cwtl
jb
mov
or
pop
rcl
push
inc
inc
sub
mov
jnp
scas
sub
fisttpl
mulb
mov
pop
inc
pop
test
ficoml
mov
jmp
das
inc
ror
push
es
roll
or
sub
and
mov
or
xor
xor
xor
jp
jle
insb
push
sub
inc
jge
fs
push
mov
dec
stc
cmp
pop
jl
xchg
cltd
popf
movl
sub
test
mov
add
mov
jo
add
dec
stc
add
adc
inc
xchg
aam
pop
xchg
cmp
rcr
adc
inc
into
push
and
sub
mov
stc
les
popf
inc
nop
ffreep
sub
dec
stos
int3
sahf
or
jecxz
cmp
cmp
mov
in
dec
cmpsb
sub
loope
sbb
mov
xchg
sub
lahf
xchg
mov
pop
mov
xchg
and
in
and
push
adc
movsl
dec
imul
lods
stos
arpl
insl
pop
out
lock
fcompl
mov
inc
cmp
je
outsl
rorb
cmp
xor
loopne
and
adc
cmp
or
xor
sub
jl
popf
adc
leave
fadds
inc
in
arpl
jmp
negb
or
aas
out
cwtl
lods
sub
in
mov
push
outsl
fsubrl
push
dec
push
xchg
shll
out
neg
cli
gs
out
ret
rcrl
insb
fs
out
lods
in
lds
popf
mov
push
iret
sub
xor
fnstsw
dec
jp
test
add
hlt
jge
out
inc
jp
dec
mov
xchg
mov
fstpt
adcb
cmp
add
stos
into
inc
nop
push
xchg
addr16
test
add
jno
jle
rolb
sbb
pop
jb
rcrl
scas
and
push
ss
push
xchg
xor
add
in
ret
cwtl
pop
testb
adc
pop
cmp
push
aaa
out
lahf
pop
xchg
lock
lock
stos
xlat
cld
testl
addr16
mov
jno
enter
call
movsb
pop
out
mull
and
pusha
int
insl
repnz
jmp
jae
fildll
add
push
jnp
pop
push
mov
jg
dec
leave
pushf
out
cmp
jle
lods
iret
into
pop
ljmp
cmp
imul
push
mov
movb
lods
push
sbb
sub
cmpsl
in
pusha
jmp
jp
dec
fucomi
pushf
call
jle
fwait
or
lods
iret
or
or
roll
and
mov
xchg
mov
stos
push
stos
and
repz
leave
pop
sub
adc
mov
into
cmp
pop
clc
cmp
pop
gs
aaa
hlt
and
push
jle
dec
aaa
cmp
les
ljmp
pop
xchg
xchg
mov
ss
lock
neg
mov
call
cmp
push
ret
jmp
inc
roll
mov
cmp
pop
jl
or
mull
ss
imul
pop
fimull
ds
xor
lods
xchg
jecxz
pop
mov
adc
fwait
clc
stos
popf
pop
int
lret
sub
out
push
cmp
std
gs
call
mov
push
dec
dec
ja
cli
cmp
mov
addr16
dec
add
repnz
dec
stos
xchg
mov
fstl
call
shlb
loope,pt
rcrb
inc
orl
fwait
pop
test
aaa
inc
mov
pop
sar
stc
out
inc
pop
mov
lock
in
cmp
test
cld
mov
dec
inc
sbb
dec
js
xor
xor
pushf
ja
call
mov
mov
jns
pop
xchg
sbb
pop
rorb
lds
daa
ja
iret
cmpsl
stos
mov
jnp
fs
mov
or
stc
call
lods
adc
mov
insl
test
and
dec
ja
ss
ss
and
and
les
mov
cmp
adc
out
push
pop
lods
adc
imull
test
adc
stc
dec
into
stos
push
pop
xor
pop
and
outsw
ret
movsb
inc
testb
push
lods
out
push
sbbb
adc
sbb
cmp
popf
lods
iret
mov
sahf
jmp
lcall
aad
fbld
adc
inc
pop
int3
mov
jbe
rorb
mov
ljmp
dec
jge
clc
fnstenv
xor
xchg
mov
int3
lds
clc
movsl
fistpll
xchg
int3
inc
push
xor
and
cmc
add
stos
xchg
cmp
mov
inc
sub
ja
mov
addr16
rcrl
arpl
stc
loopne
inc
mov
out
xor
jl
in
mov
adc
stc
and
shl
cwtl
pushf
or
repz
lcall
mov
std
cmp
xchg
xchg
out
nop
fxch
adc
sahf
mov
and
add
jge
insl
jp
into
test
ds
sub
rorl
dec
in
mov
sub
mov
mov
aad
aaa
into
add
arpl
movsb
inc
cli
sbb
xlat
sub
movsl
lods
dec
jb
push
or
xlat
mov
dec
jge
jecxz
adc
xlat
sub
pop
in
push
push
repnz
stc
fwait
xchg
pop
dec
hlt
pop
int3
xchg
sub
xchg
shlb
sbb
mov
iret
imul
dec
sub
mov
jno
dec
gs
mov
and
les
push
jge
ret
mov
sbb
int
in
fisubl
xchg
jo
push
sti
cmp
adc
mov
sbb
repnz
jmpw
shll
xchg
push
test
pop
jbe
aas
xchg
iret
ss
mov
push
cld
sbb
pop
sub
dec
sbb
test
jmp
mov
pusha
xchg
push
divb
fsub
testl
cmp
pop
mov
inc
inc
mov
inc
pop
stos
outsl
int3
aas
mov
popf
mull
ret
outsb
push
stc
call
sbb
nop
sbb
iret
fdiv
inc
ja
pop
scas
mov
enter
jl
push
push
mov
shrl
inc
iret
stc
repnz
mov
dec
call
mov
adc
mov
inc
pushf
push
sub
sbb
push
sbb
mov
in
inc
or
mov
aad
ss
xor
mov
jno
push
adc
jno
xchg
or
xchg
lcall
push
enter
push
mov
ret
imul
or
fs
and
mov
and
mov
add
xchg
pop
cmp
cmp
push
testb
outsl
jmp
pusha
nop
aaa
out
dec
out
call
adc
sbb
pop
jmp
dec
ja
cmp
jae
xchg
sahf
sbb
adc
mov
push
ja
scas
shrl
hlt
mov
pop
out
mov
mov
sbb
icebp
rorb
into
xchg
and
xchg
dec
arpl
rcrl
push
shll
scas
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
pop
cltd
cmp
add
jp
mov
sub
clc
pop
xchg
xor
pop
repnz
cli
stc
add
cmc
lret
ja
sahf
or
mov
pop
ljmp
inc
sbb
or
in
jg
inc
mov
pop
aaa
sub
aam
jne
pusha
or
popa
push
lods
cmpsb
sub
frstor
das
adc
pop
out
mov
sub
sub
or
insl
xchg
insb
psubusb
sbb
pop
lods
dec
dec
mov
repnz
nop
stos
das
dec
mov
lcallw
jo
pop
pushf
inc
dec
push
cltd
mov
filds
mov
mov
mov
jns
jecxz
lock
shll
jb
dec
mov
cmc
fldl
jle
mov
dec
out
or
sub
xlat
push
mov
je
stos
pop
addr16
fcmovnbe
popa
mov
int
pop
pop
mov
arpl
mov
fsubrs
cltd
jbe
cltd
lods
scas
aam
lcall
out
cmp
push
and
rclb
or
fsubrl
sub
popa
out
sub
xchg
inc
mov
fincstp
mov
push
cmp
imul
cltd
imul
dec
aam
out
pop
sahf
divb
xor
pop
out
loop
faddl
mov
or
out
and
sub
scas
xlat
mov
sub
cmpsb
mov
fsub
pop
leave
bswap
xchg
inc
jge
mov
push
sti
mov
pop
push
mov
sti
or
data16
icebp
out
leave
stos
dec
subl
mov
sbb
rcrl
stos
cld
pop
shl
hlt
adc
movnti
cmp
shll
mov
popf
in
cmp
xchg
sub
jae
out
sarl
adc
pop
ret
push
mov
cmp
cld
pop
hlt
push
fs
shrb
loopne
xchg
sahf
xor
cmpsb
and
pop
push
push
cltd
decl
jb
mov
dec
mov
xor
cmp
outsl
mov
leave
clc
out
lea
sarb
sbb
sub
push
mov
mov
mov
andb
mov
mov
add
out
call
inc
in
pop
jg
aad
fdivrl
out
in
pop
lret
mov
dec
push
inc
enter
mov
sub
mov
and
ret
mov
add
push
push
push
cltd
or
jbe
addl
pop
sbb
jmp
jae
stos
jb
sbb
test
popf
shlb
pop
pop
loope
add
lea
dec
fistpll
aam
xchg
adc
jmp
inc
imul
seto
jle
or
xchg
sbbl
add
addr16
loop
insb
mov
andl
mov
aam
sbb
scas
or
xchg
je
test
mull
es
and
mov
lahf
in
jo
lret
adcb
loopne
out
xchg
fimull
jb
jge
daa
popf
pushf
cmp
test
adc
call
xchg
mov
xchg
dec
cli
lcall
loopne
jmp
lds
shrb
or
push
lds
fidivrl
jg
sub
and
pop
cmc
or
aas
in
mov
stos
cmc
xorb
sub
insl
mov
xor
mov
psubusb
mov
cmp
mov
xlat
fidivs
or
out
cwtl
pop
testb
adc
push
aas
lret
sub
dec
cmpsb
adc
sbb
jmp
out
aad
mov
test
jp
cmp
jp
pop
pop
sti
dec
cltd
pop
push
repz
jle
ja
inc
mov
mov
xchg
int3
sub
mov
and
inc
and
pop
jb
adc
inc
mov
sbb
sbbl
scas
leave
pop
pop
sbbl
ss
ret
mov
call
ss
imul
sti
mov
and
cli
stc
sbb
ret
jne
test
adc
ret
sub
and
loop
das
adc
testl
loop
leave
movsb
divl
dec
and
push
xchg
sub
mov
pop
cs
sar
add
xor
dec
or
cmp
pop
aaa
inc
add
pop
mov
lret
xor
das
ljmp
pop
xor
fistl
in
xchg
cmp
mov
in
cmp
xchg
cs
adc
xchg
mov
hlt
mov
inc
add
jg
mov
mov
sarb
ja
adc
fs
sbb
je
arpl
es
push
arpl
pusha
adc
mov
sub
repnz
addr16
cli
mov
bound
and
push
mov
cmc
stc
call
lret
mov
movl
jno
sub
xor
sub
and
jne
mov
mov
arpl
out
testb
stos
sti
cmc
mov
push
and
xchg
mov
push
insb
sti
test
scas
dec
cwtl
add
rcrb
xlat
mov
es
xchg
int
mov
outsl
jmp
dec
adc
rcll
shr
lods
mov
xchg
loopne
pusha
push
loopne
cmp
int
add
icebp
aas
divb
adc
jp
fldcw
mov
es
std
sbb
push
sub
dec
jp
sbb
pusha
dec
mov
mov
inc
xchg
out
mov
bndldx
das
inc
cmp
popa
xor
mov
cmp
pop
cltd
push
mov
sti
ss
xchg
imul
xor
scas
dec
popa
sub
je
out
clc
mov
push
xchg
jno
cltd
int3
inc
lods
push
loop
rep
ja
fdivrl
pop
sbb
in
xchg
insl
shll
jecxz
into
jg
push
addl
ret
addr16
push
cmpsb
push
sahf
in
add
and
push
xor
repz
icebp
pop
out
inc
sti
mov
push
xor
xchg
roll
jae
aas
sahf
cld
stos
in
sahf
pop
sbb
mov
jge
mov
addr16
movsl
pop
hlt
lahf
xchg
lcall
adc
aad
or
sub
jg
movsl
mov
mov
add
lods
rorl
sti
mov
inc
ss
push
into
xor
xor
pop
sbb
mov
mov
xor
es
push
adc
cld
mov
roll
stos
pop
xchg
xchg
test
std
adcb
nop
push
shl
push
xchg
xor
mov
xchg
dec
fimuls
jo
pusha
push
cwtl
fs
xor
ja
jno
adc
jae
lea
sbb
sahf
jno
movsl
push
sub
cmp
cmp
cwtl
sbb
mov
adc
fs
das
hlt
adc
test
addr16
lock
cmp
test
es
mov
jp
in
mov
outsb
dec
idivl
jbe
add
push
mov
out
jmp
fldenv
inc
je
inc
pop
sbb
mov
arpl
pusha
mov
loop
push
fs
xlat
xchg
cmpsb
mov
or
mov
cmp
sbb
loopne
mov
mov
jl
std
inc
test
sbb
add
sub
icebp
pminub
inc
fildl
in
in
ljmp
and
stos
test
or
adc
mov
sbb
fdivrs
imul
aad
js
dec
aam
xchg
jmp
sub
xchg
inc
and
sbb
aaa
popa
sahf
subb
jg
add
sahf
stos
shrl
scas
xchg
jns
sub
aas
jmp
jns
jmp
divl
inc
cmp
adc
sbbl
and
pop
xor
lock
gs
jle
pop
fcomps
call
or
daa
jae
in
jno
push
bound
sub
mov
sbbb
inc
add
mov
cltd
add
and
mov
adc
mov
iret
loopne
inc
test
cmc
jg
inc
aam
dec
sub
pop
mov
movsl
jnp
pop
fcmovnu
mov
inc
ja
test
in
ja
mov
push
push
js
inc
outsb
mov
push
pop
insb
lret
pop
pop
cld
insb
in
out
jns
xchg
notb
and
test
movsl
xor
push
mov
xor
pop
xor
mov
xor
js
xchg
pop
mov
xchg
mov
aad
test
pop
mov
loop
scas
nop
and
xchg
dec
loope
fwait
aad
jmp
sahf
je
xor
jb
cmp
into
mov
mov
mov
pusha
add
jne
scas
mov
sti
sti
cmp
adc
lahf
mov
adc
out
cmp
cmp
clc
push
push
shrb
push
pop
int3
jnp
scas
pop
mov
test
fwait
int
pop
in
jbe
sub
pop
cltd
sub
pop
addr16
movsb
and
hlt
jb
xor
jne
mov
rolb
inc
out
mov
cmp
jbe
cld
mov
shrl
xor
push
adc
dec
sub
nop
sub
bound
dec
or
adc
inc
jle
clc
shl
pop
pusha
lcall
adc
sbb
imul
cmpsb
xor
cwtl
ljmp
xchg
dec
xchg
fwait
pop
stos
push
shlb
stc
dec
cmc
mov
mov
outsb
and
loopne
mov
pushf
pop
dec
stos
movsl
mov
push
je
shrb
fistpl
mov
ja
push
loop
cmc
cmc
inc
out
and
loopne
inc
xor
or
fbstp
psrld
or
inc
fld
and
adc
xchg
sbb
stos
in
test
adc
pop
iret
cwtl
test
stos
aad
shlb
mov
push
out
push
push
dec
cli
rclb
dec
push
mov
call
ficompl
fs
or
add
lea
ljmp
stos
insl
stos
clc
fwait
sub
imul
mov
ja
test
aam
xchg
les
pop
push
ja
ja
fisttpl
jmp
cmpsl
ffreep
pop
jns
xchg
stos
cmp
push
xchg
and
inc
call
fxch
push
lods
int
sbb
popa
lret
sbb
mov
test
jbe
outsb
fsubl
sub
mov
fistl
xor
int3
popa
pop
jp
cltd
mov
xchg
and
and
cmp
aaa
sub
mov
andl
push
cmp
xchg
out
icebp
incl
jl
rcrb
jne
add
repnz
cld
into
add
dec
in
dec
pop
cmp
xchg
andl
xchg
test
iret
sbb
ficomps
mov
imul
mov
push
test
xchg
and
mov
test
and
repnz
cmp
add
nop
loopne
sarl
xor
jecxz
xlat
les
std
xor
cmp
push
sub
pop
mov
add
ret
repnz
daa
cmp
out
and
shrl
xchg
lods
arpl
jmp
fs
xor
test
push
mov
or
stos
mov
mov
push
jmp
xchg
notb
in
arpl
in
pop
sbb
push
lahf
push
or
rorl
push
adc
sti
je
sar
pop
adcb
xchg
jp
xchg
adc
stos
pop
sysenter
lods
test
and
push
inc
mov
in
pusha
cmp
jmp
es
jl
jbe
aaa
pop
cmpb
sbb
dec
icebp
pop
cmpsl
sahf
stos
out
cmp
inc
sub
adc
in
xor
test
add
mov
xor
dec
sub
sub
adc
test
push
mov
into
pusha
jmp
popf
and
roll
dec
jg
les
repnz
std
cmp
jb
lds
cmp
mov
int
jmp
ret
pop
add
jne
sbb
pushf
aaa
rcl
xchg
jge
int3
negl
push
pushf
and
test
cmp
inc
pop
mov
adc
ss
icebp
xor
cli
fs
xchg
cs
aas
or
push
sbb
lcall
adc
stos
inc
jmp
sti
push
and
mov
addr16
adc
pop
mov
and
inc
push
sub
mov
inc
push
mov
pop
lea
adcb
dec
lret
add
loope
hlt
jle
mov
mov
or
out
ret
adc
pop
jbe
cmc
adc
add
push
push
jp,pt
cmp
std
or
mov
push
dec
or
sarb
sbb
cld
dec
jle
and
push
sbb
cmc
and
fadds
pop
add
out
je
stos
mov
pop
fsts
xor
jno
jge
adc
add
bound
or
xchg
outsb
jns
test
fmull
adc
sub
inc
pop
aam
dec
sbb
pop
mov
mov
cmp
shrb
fists
das
pusha
test
test
sahf
adc
cmp
add
xorl
push
mov
in
jne
cmc
jne
ljmp
stos
cmp
xor
mov
pop
mov
sub
in
add
repnz
iret
pop
xor
ret
mov
push
dec
adc
negb
xchg
pop
ss
push
ret
xchg
dec
inc
inc
cmp
ss
popa
push
and
adc
lret
cmp
sbbb
sbb
pop
gs
int
push
in
xlat
icebp
rcll
push
xor
push
fldenv
sar
sub
in
daa
imul
xor
mov
push
int
push
dec
mov
cmc
ja
cmp
inc
mov
mov
ljmp
mov
jno
jmp
in
mov
sbbb
int
andb
sub
into
adc
or
ret
pop
cmpsl
movsl
dec
jae
jge
stos
fwait
sub
jno
add
jecxz
loope
sbb
jg
call
daa
mov
repz
add
add
leave
sbb
jo
repnz
inc
addl
xor
icebp
mov
xchg
faddl
add
fisubs
das
xchg
push
push
dec
or
and
test
inc
jne
jno
inc
and
push
jl
push
vpandn
or
sub
mov
cli
mov
and
lret
lret
and
add
icebp
fisttps
cmp
push
inc
jns
jmp
int3
stos
int3
in
lods
push
test
stc
shrb
add
pop
lods
je
jae
in
sbb
push
mov
jnp
insb
xchg
jge
fsubl
orb
or
fldenv
std
cmp
imul
aaa
or
add
push
aam
int3
and
jne
dec
jl
or
enter
cmp
popa
add
test
mov
mov
mov
add
pop
test
lods
mov
sbb
ja
adc
push
roll
inc
cmp
jo
mov
xchg
xor
mov
popf
mov
pop
pop
sbb
sbb
notb
xchg
mov
mov
xchg
xor
cli
jp
push
int3
and
mov
mov
shrl
push
push
xchg
aas
xchg
mov
xor
lock
inc
out
xchg
sub
or
or
sbb
pop
in
call
cld
dec
data16
mov
out
int
addr16
mov
pop
lret
movl
push
jno
repnz
lock
in
mov
loop
insb
movsl
fisubl
mov
cmpsb
scas
pop
stos
xor
mov
testl
pop
icebp
mov
pusha
mov
ret
dec
xrelease
pop
and
mov
outsb
push
ficomps
pop
fbstp
std
sub
aas
test
or
pop
fisttpl
insl
push
repnz
pop
hlt
mov
jge
mov
and
arpl
mov
inc
lea
int
mov
call
cwtl
xor
aad
add
test
sub
pop
xchg
fbstp
repnz
add
inc
dec
cmp
cmc
cs
and
dec
jge
jns
sub
addr16
jg
jge
cmp
les
into
ret
mov
jns
jae
and
pop
mov
shll
iret
mov
jno
inc
inc
add
test
xchg
push
mov
sti
bound
js
popa
pop
pop
xchg
fs
pop
jl
xchg
cmp
scas
jae
lret
sub
sbb
test
add
lret
shll
xor
std
fldl
nop
cmpsb
lods
je
aas
sbb
sub
push
and
xchg
fwait
pop
sbb
pop
dec
scas
mov
stos
or
mov
clc
movsb
pop
add
in
arpl
inc
dec
xchg
mov
and
fwait
mov
ss
jns
sti
add
cmp
cli
push
js
testl
inc
dec
mov
and
ljmp
mov
test
ret
lds
cwtl
mov
xchg
rol
pushf
inc
ret
test
popf
shlb
xor
lret
daa
sub
sti
out
test
mov
test
mov
inc
xor
fnstsw
inc
into
pop
jl
movsl
aad
out
cmp
pop
js
das
pop
sbb
fistpl
in
cld
call
push
loope
popa
cltd
std
cld
aas
mov
aam
cmp
adc
daa
dec
les
fdiv
add
insl
cmpl
fnstcw
dec
xor
int3
lahf
mov
push
jp
mov
les
ficoms
or
pop
cmpsl
sub
clc
mov
faddl
push
dec
insl
mov
addb
jp,pt
and
and
daa
aam
xor
cld
rcrb
std
sub
imul
ljmp
sub
inc
jo
pop
ljmp
xor
and
shll
in
xor
jge
or
int
arpl
inc
mov
cltd
cld
push
mov
add
wbinvd
cmc
in
adcw
fdivr
or
call
lcall
imul
push
aam
inc
fisttpl
sub
cwtl
xor
dec
movsl
jg
push
xchg
inc
insl
leave
pop
loop
add
mov
test
cld
pop
in
lods
add
xchg
push
std
jecxz
into
daa
int
inc
imul
mov
jmp
in
daa
mov
add
sub
imul
and
push
mov
mov
mov
popf
sarb
adc
sbb
xchg
insb
inc
push
incb
aaa
add
sbb
xor
xchg
loopne
out
pusha
into
push
aaa
and
xor
test
repz
daa
mov
dec
xor
ret
lret
outsb
jae
xchg
movsl
xchg
sbb
add
push
rcll
ds
scas
lret
push
sbb
iret
pop
pop
and
or
ds
add
cwtl
xor
cli
jbe
xchg
shl
push
cmpsb
pushl
add
cmp
popa
or
jns
xor
shrl
jnp
call
xchg
mov
adc
pop
in
pop
xchg
mov
adc
cmp
in
mov
xchg
repz
add
sub
out
push
es
into
fmuls
jg
ret
or
add
pop
jl
ret
ljmp
outsb
lcall
jno
push
mov
jmp
fsubrs
and
out
sub
loopne
fldl
or
insl
lds
testl
pushf
int3
adc
lods
jmp
cmp
xchg
push
xorl
and
mov
push
aad
cltd
ds
mov
push
and
sbb
pop
loopne
pop
jno
lret
int3
add
orb
int
std
cli
or
fildl
rolb
mov
rorl
push
sbb
mov
xor
insb
adc
dec
mov
test
fcoms
sub
xor
movb
xor
pop
stos
inc
loopne
cmp
cmp
inc
xchg
repnz
or
in
pop
mov
lret
cli
in
add
ss
ljmp
sub
loope
xor
pop
ljmp
sub
pop
pop
sub
inc
jbe
dec
or
pushf
lds
clc
sub
outsl
fists
gs
lret
push
add
push
inc
cmp
ret
std
enter
jecxz
push
popa
and
jl
lods
sbb
aam
cmc
test
mov
sub
xchg
pop
jmp
dec
sbb
loopne
mov
iret
jb
adc
out
popf
pop
testb
jno
jmp
pop
mov
test
imul
loop
pop
arpl
inc
mov
inc
cmp
xor
ljmp
mov
sub
loopne
or
or
xor
loope
mov
inc
fisubrs
jp
or
enter
ret
adc
xor
lret
push
sahf
xchg
pushf
fcom
sbb
jp
push
inc
jp
inc
stos
sub
jne
xor
jo
jne
xorb
xor
sub
fwait
xchg
cmp
mov
loop
push
bound
sub
cli
dec
pop
lcall
jl
movsl
pop
and
shr
sbb
sar
or
mov
pop
sbb
lods
mov
int
dec
out
pop
inc
push
nop
jecxz
and
sbb
or
call
jno
lret
das
push
cmp
mov
arpl
xor
mov
sahf
lcall
nop
out
scas
lcall
mov
push
leave
xchg
cld
pop
fs
jl
sbbb
aam
rcrb
rol
mov
mov
rcl
shrl
js
lcall
test
xlat
lcall
pop
scas
sub
pushf
rcrb
inc
inc
push
jno
jecxz
pushf
stos
rep
iret
mov
pop
test
sar
into
push
icebp
fwait
pop
dec
clc
dec
add
mov
xlat
cmpb
test
xchg
fldt
inc
inc
or
pop
mov
negl
or
shll
mov
jmp
lcall
xor
fmuls
xchg
jo
sub
pushf
ret
out
stc
movsb
filds
jmp
aad
adc
lahf
adc
mov
es
dec
lods
sub
inc
je
popl
les
int
mov
fmul
mov
push
xchg
dec
decl
push
cmpb
jp
pop
push
xchg
push
int
mov
add
clc
xchg
pop
in
dec
vcvtsd2si
mov
popa
ja
xor
jmp
push
push
lret
aas
pop
cmp
repz
cmp
mov
scas
enter
nop
add
cmp
xor
fisubs
stc
stc
pop
inc
jmp
ds
pop
rorb
outsl
jecxz
mov
test
sbb
fs
insl
add
jle
mov
xchg
or
data16
pop
stos
fwait
sbb
pop
movsl
mov
sub
sub
sub
dec
and
adc
push
xchg
and
int
mul
in
pop
adcl
js
imul
mov
cs
repz
int3
push
adc
mov
int
cmp
fnsave
in
loop
ret
data16
stos
mov
mov
pop
cwtl
jo
adc
pop
imul
leave
sub
scas
sub
rorl
ret
mov
mov
or
mov
cli
mov
add
stc
sub
mov
std
pusha
ljmp
mov
mov
xchg
pop
lret
test
scas
push
imul
lods
dec
test
loope
aas
add
int3
push
pop
pushf
mov
outsl
ja
arpl
xlat
mov
leave
shll
mov
es
imull
adc
push
lahf
jg
mov
jne
mov
sub
shrb
push
roll
adc
jle
nop
push
mov
clc
in
jnp
in
lods
je
adc
mov
xlat
or
notb
pop
outsl
push
pop
sar
xchg
popa
jp
dec
sbb
enter
testl
call
sahf
outsl
jg
push
cmp
fstpt
sbb
xchg
dec
aad
incl
adc
mov
pop
outsb
push
dec
aad
cmpsl
movsb
lock
jge
icebp
mov
ja
out
mov
dec
imulb
sahf
sbb
pop
or
push
cltd
pop
mov
sbb
jg
out
mov
rcrl
loope
mov
pushf
das
jecxz
mov
out
inc
hlt
sbb
out
inc
mov
gs
mov
pop
je
xchg
in
fldcw
mov
les
xchg
dec
mov
lds
dec
cmp
jnp
or
lods
push
push
lods
cmp
push
fcom
test
or
cmp
das
clc
jo
mov
cmp
add
add
pop
daa
push
and
data16
mov
sub
xchg
xor
and
cmp
push
jmp
jbe
fldl
mov
popf
pop
dec
xor
xlat
int3
rolb
cs
xlat
rolb
add
stos
lods
movsb
adc
repz
or
push
jge
ja
cmp
jmp
movsb
imul
pop
push
hlt
cmp
add
push
cli
dec
testb
push
lcall
or
fistl
lock
mov
and
rcrl
xchg
loope
and
xor
mov
rcrl
lods
pop
pop
mov
mov
mov
mov
stos
in
push
cmp
loop
movsl
pop
mov
add
mov
mov
mov
test
outsb
sub
iret
dec
out
out
out
notb
shl
mov
push
sbb
sbb
mov
or
scas
lahf
imul
pushf
in
mov
popa
push
push
shll
adc
push
pop
mov
loope
adc
xchg
dec
mov
je
xchg
test
ja
add
pop
push
outsl
stc
mov
sbb
addr16
aad
outsl
in
aad
dec
add
addr16
shll
fisttpl
dec
in
icebp
arpl
movsl
mov
idivl
mov
stos
push
adc
test
js
int
imul
les
outsl
arpl
push
mov
sub
push
mov
lock
cmpsl
aad
out
pop
test
mov
ret
iret
jge
dec
cli
jne
add
sahf
leave
rcrl
xor
push
xor
popf
andb
add
in
adc
dec
push
in
inc
xor
loop
sub
aam
mov
mov
mov
or
mov
aas
jnp
sub
data16
stc
add
mov
jne
inc
add
xchg
inc
sbb
jecxz,pt
call
mov
xchg
roll
in
sbb
imul
cmp
sub
dec
jo
lds
jg
jmp
adc
sbb
pop
adcb
xchg
push
cs
xor
aas
xlat
clc
cmp
out
and
push
daa
stc
pushf
cmp
jp
fiaddl
or
cmp
xchg
repz
push
cmp
je
mov
and
xchg
jne
int
pop
lods
cld
sahf
repz
dec
rcr
jmp
fwait
lahf
inc
dec
push
xchg
into
repnz
pop
testb
or
sarl
jno
and
scas
sti
mov
push
xchg
cmp
mov
js
sahf
push
mov
cld
xchg
jmp
das
add
mov
rcll
shll
lock
and
and
andl
je
ss
les
inc
je
jmp
mov
mov
test
pop
call
dec
sbb
mov
xchg
adc
xchg
push
or
fisubl
ja
xchg
or
pop
mov
shr
xchg
dec
cmp
sbb
rolb
fisubrs
scas
out
sub
rorl
subb
inc
test
mov
inc
pop
lods
scas
adc
jns
andb
push
push
mov
xchg
repz
and
mov
insl
sbb
jge
stos
mov
or
mov
xchg
rcl
mov
mov
and
mov
jno
loopne
sub
out
shlb
aaa
mov
ljmp
testl
or
dec
hlt
dec
push
mov
jmp
outsb
fldt
mov
sbb
pop
mov
ljmp
adc
out
mov
xchg
not
sahf
insl
imul
jb
xor
mov
dec
xlat
dec
mov
lock
sbb
mov
push
pushl
mov
sbb
sub
ret
cmp
xchg
lahf
xor
test
iret
mov
jp
and
adc
xchg
sbb
insb
or
inc
xor
pop
mov
cmp
aas
pop
mov
fs
popa
leave
push
aad
mov
in
xchg
jge
cmp
and
sub
xchg
stos
insb
cli
xor
shr
ss
rcl
xchg
test
mov
sub
mov
inc
loope
xchg
stc
repz
and
xor
add
mov
pusha
mov
fidivrl
repz
scas
pop
les
loopne
lret
fstps
iret
std
adc
jge
pusha
movsb
shlb
jns
or
test
out
mov
and
mov
dec
jo
sarl
mov
sbb
pusha
sub
push
insl
push
fbld
jo
jb
call
int3
repz
je
dec
shll
jmp
push
adc
xchg
hlt
mov
aam
lock
push
or
dec
rcl
adc
add
jecxz
mov
ljmp
insb
or
push
movsl
push
dec
mov
jmp
jb
mov
pop
cmc
or
sub
cmc
mov
adc
mov
test
jno
das
test
lahf
mov
mov
sbb
mov
arpl
mov
xchg
sub
das
int3
dec
in
outsl
je
sub
in
lret
pop
mov
sub
sbb
pop
cmp
jbe
and
sbb
idivl
scas
sbb
inc
xchg
pusha
rolb
pop
dec
pop
push
push
mov
jnp
lret
cs
mov
push
sbbl
out
in
jo
mov
xchg
pop
out
mov
stos
ds
xor
adc
sbb
loopne
or
ja
xchg
popa
shll
nop
jb
insl
cli
jp
jle
mov
inc
cmp
pop
mov
mov
pop
and
movzbl
ret
dec
insl
bound
adc
mov
lret
stos
mov
out
subl
and
lcall
or
ret
jmp
add
push
testl
and
add
add
xor
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
fildll
xchg
jp
add
jp
and
and
stos
and
cmpsb
cmpl
push
xchg
lea
lds
icebp
sbb
sub
sub
mov
repz
jp
fisubl
adc
int
data16
mov
hlt
adc
rcrb
sarb
pop
adc
shr
adc
xchg
fisttpl
fisubl
cmpsb
xorl
loope
test
and
pop
adc
push
xchg
sub
mov
sbb
mov
sub
in
push
aad
inc
sub
xchg
mov
lods
shrl
cs
aam
push
ljmp
pop
mov
cmp
jl
xor
fidivl
cmpsl
lock
jecxz
mov
in
stos
cmp
movsb
push
and
aaa
push
inc
xor
pop
xacquire
push
push
mov
xchg
test
mov
and
mov
add
or
in
loopne
jecxz
repnz
sbbb
mov
xchg
jno
mov
dec
fwait
mov
xchg
stos
imul
ss
lods
pop
and
push
dec
push
in
jge
loopne
dec
cmp
cmp
jno
sahf
ja
pop
hlt
lahf
jns
inc
test
or
std
adc
dec
add
cltd
jl
push
sbb
xchg
push
call
scas
mov
cmpsb
xchg
pop
pushf
gs
pop
cmp
outsb
leave
xor
in
xor
out
fisubrs
cmpsb
or
repz
stos
cmp
xchg
daa
add
xchg
insl
loope
mov
cmp
cmpsb
lock
dec
aaa
mov
xchg
jb
mov
jmp
out
lods
pop
dec
das
lea
test
aaa
aam
rorl
adc
lds
cmp
or
jg
fstp
popf
push
aas
or
pop
sub
add
dec
jl
loop
sbb
rorl
dec
ljmp
call
adc
fsubrs
les
sbb
sub
mov
and
fistl
mov
cwtl
cmp
pop
sub
mov
adc
sub
ficomps
xor
and
bound
xor
or
xor
inc
pop
call
stos
sti
or
test
pop
out
xor
daa
pop
mov
ds
mov
shlb
sti
mov
insl
leave
in
add
rolb
and
jp
push
fsubrp
test
dec
imul
sbb
jne
scas
mov
iret
or
rorl
cwtl
adc
repz
subb
pop
jp
stc
iret
sub
xchg
ret
adc
popa
mul
je
call
jae
jb
jl,pn
inc
sbb
shrl
mov
or
and
fcompl
nop
pcmpeqd
outsl
or
pusha
shlb
inc
adc
repnz
mov
fs
mov
adc
jo
fistl
push
movsb
fsubs
jge
push
add
xorb
imul
xor
pop
jl
cmp
aas
fimull
sbb
xchg
stos
push
xlat
adcb
adc
es
jle
add
mov
dec
cmp
cmp
aas
pop
cltd
mov
cmp
jg
gs
std
push
lret
pop
sbb
lahf
mov
jp
inc
loop
pop
inc
std
dec
lea
push
pusha
insb
iret
inc
xchg
clc
testb
sti
sti
adc
mov
loop
mov
mov
ror
ss
mov
push
jg
cmp
and
cs
es
xchg
mov
out
push
and
jnp
adc
je
push
sbb
js
push
push
mov
sub
mov
jae
mov
fwait
std
jne
xor
je
mov
lcall
dec
jnp
push
sbb
dec
xchg
and
adc
popf
hlt
jne
jg
jge
jne
and
mov
je
mov
dec
mov
popf
rol
dec
pop
sub
daa
dec
ja
add
xchg
jb
stc
jle
mov
std
xchg
out
out
movups
cltd
adc
inc
outsl
movsl
loopne
in
outsl
cmp
xchg
icebp
mov
shll
push
out
int
mov
push
jb
pop
lret
sbb
inc
repnz
outsb
repnz
jmp
pop
pop
add
jo
push
xor
iret
inc
loope
dec
sub
or
sbb
repnz
outsb
and
cltd
push
cmp
jns
adc
bound
sub
loop
mov
clc
xor
xchg
or
ret
push
adc
movsl
cmp
sub
out
or
insb
jl
mov
movsb
dec
fs
inc
mov
cmp
push
in
sbb
mov
sbb
jb
cmp
cmp
push
cmpsl
pop
inc
pop
mov
inc
mov
popa
mov
enter
jne
jae
jl
add
aad
lea
jecxz
call
repnz
push
inc
xor
sbb
push
scas
std
fs
dec
ja
pusha
jbe
pop
push
imul
test
or
lret
xchg
mov
sbb
mov
and
jl
test
call
out
aas
cmpsl
imul
scas
lahf
xor
int3
jecxz
cltd
xor
iret
mov
ds
mov
mov
jmp
or
push
cmpsb
test
or
dec
pushf
or
popf
outsb
outsb
sar
mov
pop
shrb
cwtl
and
mov
loop
pop
xchg
pop
and
mov
and
insl
jmp
cwtl
push
cmp
jno
sbb
mov
add
inc
sub
test
push
stc
add
ret
jg
daa
adc
fildll
mov
inc
iret
jne
cmp
push
shll
and
add
push
les
fimull
mov
cs
jnp
xchg
ja
jne
jno
in
adc
xor
mov
shlb
dec
cld
icebp
popf
fbld
popa
shl
mov
xlat
lods
js
or
and
and
mov
xchg
mov
or
ss
loop
push
cmp
fidivl
rcl
adc
lcall
cmc
fwait
jp
and
sbbl
fwait
mov
push
xchg
xchg
and
push
add
rolb
lea
aam
aam
xor
inc
xor
pop
cs
in
and
ret
ljmp
or
shrl
adc
fimull
jl
mov
and
subl
cld
xlat
sub
and
sbb
data16
xchg
lea
jecxz
adc
push
rcrl
icebp
mov
sarb
pop
jg
push
insl
js
bound
mov
inc
inc
mov
in
enter
mov
in
std
sub
std
or
mov
jae
lds
dec
jge
lahf
push
sub
aad
add
dec
pop
lret
fisttpl
sub
mov
add
dec
popa
adc
je
rcrb
insl
mov
adc
jge
sbb
sub
or
add
fwait
outsb
cwtl
jecxz
push
sbb
shlb
js
xchg
or
cmpl
js
mov
adc
jge
rclb
xor
fs
lret
push
pop
cmp
inc
lock
rcll
sub
or
imul
and
subl
cwtl
mov
push
xchg
mov
pushf
inc
outsl
inc
jg
push
jecxz
and
sub
xchg
and
outsb
jl
dec
add
mov
sbb
mov
mov
test
xor
movsb
cltd
rcrl
outsb
fidivl
sub
cmp
sbb
mov
es
sahf
bound
cmp
mov
int
out
emms
xor
test
dec
jecxz
lock
in
cmpl
add
mov
pop
and
pop
jl
pop
or
mov
jno
mov
inc
popf
mov
cmp
push
xchg
fisttpll
into
add
pop
cmc
adcl
lea
adc
mov
mov
adc
push
shrb
add
jmp
sub
push
mov
mulb
iret
mov
arpl
dec
sbb
rorl
xchg
or
mov
pop
ljmp
push
cwtl
add
add
sub
pop
cmp
sbb
int
and
cmp
into
xorl
rolb
pusha
xor
and
mov
outsl
xchg
shlb
sub
std
xchg
mov
xchg
dec
mov
xor
xor
pop
jg
aam
xchg
insb
pop
lds
call
cmpsb
sbb
pop
fnstcw
mov
jg
push
rcl
xchg
or
pushf
ja
dec
pop
sub
inc
add
inc
aas
add
fldt
cld
jmp
loopne
pop
out
sbbb
xor
inc
stos
fwait
sub
ljmp
xlat
mov
into
rcrl
popf
aaa
daa
and
sbb
sbb
xor
ret
pop
dec
mov
jge
imul
test
lcall
loop
dec
jne
inc
enter
aas
andb
mov
pop
lods
pop
nop
and
mov
mov
ljmp
icebp
push
cmp
lods
pop
and
sub
xchg
sub
inc
jae
sbb
cmp
pusha
mov
out
fistpl
fwait
js
pushf
sbb
xchg
mov
sbb
cmc
or
es
inc
jb
lds
lret
fadd
rol
and
ljmp
je
pop
mov
lret
jbe
mov
enter
lret
sub
popf
popf
mov
mov
ss
mov
adc
adc
out
xchg
and
stos
inc
mov
adc
adc
fstps
pop
xchg
popf
jo
inc
pusha
in
sub
or
dec
push
xor
xor
fcom
pop
cld
mov
pop
xchg
xchg
imul
es
and
popa
shll
adc
push
cld
mov
stc
insl
out
jns
bound
jns
sub
hlt
pop
sub
lcall
sahf
cmpsb
pop
cmp
insl
or
add
sub
iret
lret
outsb
jmp
mov
fcomip
sarb
or
addl
bound
sub
fsub
dec
out
xor
pause
shrb
or
ffree
dec
popa
mov
inc
or
in
pop
xchg
popf
add
mov
pop
push
inc
fadd
test
fcomps
jns
adc
cmp
test
push
scas
push
movl
push
outsl
in
or
hlt
int3
cmp
js
cmp
mov
imul
stos
dec
mov
icebp
jecxz
aas
jl
mov
aad
arpl
adc
ljmp
fisttpll
insl
cmp
lret
mov
in
out
fiadds
std
push
js
das
rcrb
sub
daa
adc
les
icebp
stos
mov
test
rorl
push
xor
in
fdivs
cmpsl
jg
neg
dec
xchg
loope
or
xor
std
cld
push
pop
insb
dec
push
push
pusha
lahf
jbe
imul
rcr
ja
add
in
push
int3
lahf
sub
push
sub
jge
mov
inc
pop
dec
mov
fdivrl
in
pop
mov
and
mov
imul
jnp
jmp
rcr
inc
cwtl
comiss
pop
aas
rcrb
add
pusha
xchg
lcall
or
and
mov
mov
or
mov
push
or
lret
mov
lods
repz
sub
fdivr
xor
cmpsb
adc
mov
lahf
mov
sub
fsubr
enter
mov
push
sbb
rolb
pop
adc
mov
and
dec
xor
aaa
shlb
ret
mov
pop
js
les
fidivrs
adc
out
dec
dec
dec
pop
xchg
or
test
movsb
test
ljmp
add
push
and
sbb
jmp
movsl
fwait
cmp
ret
and
sub
inc
push
das
cmp
insl
pop
jns
xlat
cmp
inc
movsl
nop
incl
addl
insb
rcrl
xor
or
add
xchg
loopne
in
jecxz
bound
mov
imul
push
cmc
sub
cmp
and
adc
lea
pop
repz
repz
stc
pop
jo
push
sub
cmpsb
push
inc
shlb
sbb
dec
stos
insb
scas
jp
rorb
arpl
jns
notl
dec
xor
int3
push
xchg
push
dec
pop
mov
fdivr
mov
mov
xor
testl
ja
or
adc
and
jne
pop
jno
adc
inc
test
mov
fcompl
ds
mov
and
pop
pusha
jge
inc
pop
or
shrb
icebp
dec
mov
jl
or
imul
lock
lds
fimull
and
cmpsl
inc
push
inc
cmp
dec
sbbl
enter
jo
dec
mov
xchg
ret
cmp
cmp
adc
sub
frstor
stc
xor
add
adc
push
mov
xchg
pop
inc
mov
dec
hlt
xor
dec
adc
push
ja
sub
fsubs
and
sbb
adc
xor
sub
iret
sarb
jmp
jmp
cmc
and
out
movsb
xchg
lds
enter
cld
repnz
repz
sub
fmul
enter
sub
out
adc
pusha
jp
mov
ss
xorb
add
pop
cmp
out
cmc
mov
lock
pushf
fucom
out
clc
push
add
mov
sub
cld
stos
cmp
in
dec
fisttps
loopne
jp
subb
andl
mov
jmp
mov
mov
mov
inc
adc
arpl
mov
xor
sub
xor
and
inc
lods
idivl
das
sbb
ja
cmp
mov
sub
jb
or
xchg
xchg
and
inc
pusha
std
into
std
fdivrs
jns
or
daa
push
jmp
sbb
sub
pop
add
cmc
sbb
push
mov
push
test
inc
rcl
pop
push
orl
or
add
in
mov
mulb
push
bnd
or
ljmp
arpl
stc
and
jo
fcmove
xlat
faddl
insb
mov
out
mov
movsl
sbb
stc
dec
test
or
jmp
inc
sub
dec
iret
pop
inc
gs
mov
lret
xor
mov
push
xchg
pop
mov
mov
pop
dec
addr16
in
out
cmpsl
lds
mov
out
aam
repnz
fidivrs
std
pop
movsb
push
push
lahf
mov
mov
fcomps
lahf
movsl
add
into
out
aaa
jne
add
adc
xor
jo
sbb
jg
insl
imul
test
inc
mov
adc
hlt
xchg
leave
out
add
in
jb
xor
popa
lds
data16
or
and
jne
popa
enter
or
scas
mov
ror
out
inc
xchg
ret
push
hlt
ljmp
mov
sahf
out
adc
mov
pop
or
fldl
jl
or
shrb
pop
push
xor
outsb
lahf
rcll
loope
call
outsl
and
stos
sub
loop
and
mov
inc
or
sti
dec
push
adc
aad
mov
inc
mov
sbb
push
or
xchg
adc
shr
stos
pop
in
in
faddl
xchg
shrb
cwtl
js
push
xchg
jle
popa
xor
shrb
pop
sahf
incb
push
sahf
test
pop
js
push
enter
addr16
cmpb
lock
cmc
gs
ficoms
dec
mov
rorl
jne
popa
mov
es
nop
push
push
hlt
out
sbb
or
jb
inc
and
ds
and
push
stos
push
scas
into
leave
hlt
fiadds
adc
inc
loope
and
sub
add
in
in
push
pop
cwtl
hlt
or
jnp
andl
dec
pop
mov
clc
adc
push
mov
cwtl
xor
mov
or
ja
jae
daa
adc
daa
pop
and
add
int3
mov
or
xchg
mov
ja
push
sub
xchg
stos
sub
mov
dec
inc
mov
popa
pop
cmp
sbb
sub
sbb
inc
mov
std
fwait
xlat
lods
sahf
jno
enter
movsb
mov
xor
test
sbb
xchg
xor
sarb
jae
adc
and
or
push
xchg
add
dec
mov
jno
hlt
fwait
add
sub
movsl
mov
inc
push
and
daa
dec
dec
insl
jno
jne
arpl
andl
mov
lds
mov
pop
push
incb
clc
lahf
popa
stos
push
adc
xchg
lods
adc
pop
shrl
sbbb
xchg
enter
xor
or
ret
jno
test
push
add
inc
fcompl
xor
adc
sbbb
es
inc
cwtl
or
cmp
inc
ds
pop
sub
add
cwtl
in
mov
ja
std
stos
pusha
movsl
add
insl
daa
rcrb
in
ret
popa
or
imul
xchg
xor
aas
pop
xchg
enter
push
inc
ss
ljmp
cli
cmp
scas
add
adc
push
jbe
cmpl
scas
adc
or
xor
push
cmp
mov
xchg
rorl
mov
dec
out
stc
jne
imul
mov
and
pop
test
fisttps
sub
adc
rclb
mov
inc
jle
sbb
ds
popf
push
repnz
lahf
loopne
insb
fisubrl
idivb
or
or
lret
adc
mov
cmpsl
sbb
andl
xor
lds
jbe
push
mov
or
and
mov
bound
push
xchg
mov
pushf
pop
pop
cmp
shl
push
mov
ds
fistpl
inc
in
dec
scas
in
xchg
dec
out
cmp
xlat
fbld
xor
sarl
pop
jno
jle
test
int
test
mov
outsl
xchg
add
jge
or
mov
and
imull
mov
nop
cmpsl
stos
dec
cmp
jecxz
stos
push
test
jae
add
nop
fwait
icebp
aad
lock
test
xchg
das
in
jne
imul
test
sbb
mov
pop
jg
mov
cmp
jl
sbb
mov
icebp
adc
mov
push
xor
xor
lds
pushf
lahf
inc
add
scas
pop
adc
mov
nop
outsb
dec
sub
inc
jp
test
push
xor
pop
lods
xor
hlt
push
movsl
pop
sub
push
test
inc
lahf
adc
mov
pop
mov
cmpb
sbb
add
jo
aad
stos
mov
xchg
rolb
cmp
sub
in
dec
lock
sub
jecxz
jbe
inc
sub
mov
mov
shlb
fstpt
mov
mov
jge
and
xor
je
rcrb
rorb
ret
xchg
ret
inc
jge
int3
addr16
mov
inc
pop
push
jecxz
mov
in
dec
pop
fs
flds
push
cmp
cld
roll
test
add
adc
ljmp
mov
sti
mov
cs
or
pop
mov
das
fcomps
jo
pop
adc
or
imul
cmp
fsubl
in
mov
adc
jecxz
adc
aas
fdiv
xchg
movsl
add
scas
cmp
add
fistpl
xchg
pop
add
inc
sbb
lcall
add
je
pop
in
in
popf
xor
sub
pop
or
jnp
pop
shll
mov
mov
cmpsl
fwait
cmp
jb
sub
mov
insl
int
aam
adc
inc
xor
in
push
lcall
arpl
std
cmpb
sub
mov
bound
add
inc
aas
sahf
pop
daa
inc
int3
pop
adc
movsl
mov
push
cmc
mov
incl
test
repz
outsl
rclw
jns
add
jle
push
les
jmp
rcrb
xchg
enter
add
jecxz
ret
mov
mov
scas
lahf
mov
dec
jecxz
pop
test
sbb
cmpsl
test
xchg
fwait
shll
dec
mov
push
jmp
jns
sub
fldenv
mov
pushf
call
sub
dec
push
adc
cmp
and
push
inc
adc
in
add
cwtl
cmc
mov
js
test
mov
jecxz
cld
mov
enter
sub
popf
add
call
and
test
push
dec
iret
jl,pt
hlt
cmc
andb
xor
sbb
out
into
hlt
sbb
mov
icebp
dec
in
jo
push
push
sub
mov
nop
je
mov
jp
dec
cli
pop
sti
lahf
out
fnstcw
daa
pop
ljmp
jnp
cs
cmpsb
enter
mov
mov
add
dec
sti
or
cmp
inc
in
or
call
mov
fwait
sbb
inc
mov
jg
aam
push
out
idivl
sub
ss
adc
xchg
pusha
mov
adc
outsl
scas
push
repz
add
add
dec
movsb
add
fdivl
push
xor
mov
sbb
ror
jmp
sub
lods
sarb
or
aam
rclb
imul
cmpsb
push
aad
pop
mov
cli
testb
mov
pusha
cld
outsl
mov
lods
pusha
add
and
pop
lock
test
push
xor
aad
xchg
mul
mov
xchg
jo
mov
int
clc
pop
xor
loopne
addr16
add
push
pop
repz
in
ret
or
test
cmpsl
and
xchg
mov
cmpsb
push
sbb
jge
fxtract
sbb
mov
testl
dec
xor
lock
push
cmp
imul
xchg
out
pop
in
mov
cwtl
in
adc
mov
repz
mov
sub
mov
ds
jo
jbe
mov
div
jle
add
mov
shrl
sub
push
adc
pop
push
pop
int
sub
rcrb
jg
cld
and
and
es
lcall
lea
and
cmpsl
jno
roll
jo
mov
or
xchg
mov
arpl
adc
cli
adc
mov
call
jl
imul
cs
adc
mov
or
inc
repz
jmp
pop
sbb
xchg
mov
push
daa
push
mov
xchg
sti
mov
sbbl
inc
xchg
xor
pushf
in
pop
mov
cwtl
sbb
mov
fisubl
loopne
shll
scas
sub
lret
cmpsl
inc
fistps
cs
xor
lar
pushf
xchg
leave
mov
call
inc
stc
pop
inc
xchg
les
inc
mov
jo
pop
les
add
lods
icebp
sahf
or
xchg
mov
sahf
sahf
xor
pop
xchg
clc
push
inc
jge
sub
xchg
mov
push
and
movsl
mov
out
int3
test
mov
ja
les
lret
inc
add
mov
pop
lcall
sub
sbb
inc
push
mov
movsl
mov
out
or
les
jge
out
jb
xchg
push
sub
xor
lcall
jne
push
fsubs
data16
push
cwtl
jg
and
pop
lock
sbb
lods
cmc
les
xor
pop
icebp
insl
pop
push
insl
ds
mov
push
xor
mov
imull
clc
sub
clc
in
imul
cmpsl
inc
jg
shlb
dec
shll
cli
push
or
jle
add
mov
push
leave
mov
stos
cwtl
inc
aas
sbb
pop
jns
pop
cli
lock
ficoms
dec
pop
xor
cwtl
lds
add
sub
push
sub
add
clc
fsubl
test
fsub
mov
or
scas
test
pop
push
incl
cmp
data16
cmp
push
rorb
sti
push
cltd
or
test
sbb
pand
jl
or
sbb
out
or
push
add
xchg
sub
jns
into
loopne
and
not
fsubs
push
out
loopne
pop
test
dec
push
xor
mov
adc
test
aas
bound
dec
stos
mov
mov
fstps
and
into
push
ret
mov
mov
jg
ja
shlb
je
dec
stos
mov
mov
cwtl
xor
bound
or
subl
pushf
fildl
push
loope
mov
push
test
rolb
dec
jmp
incb
jns
jae
and
sbb
push
js
ljmp
add
push
popa
lds
jp
jne
xor
mov
jae
fdivl
in
scas
ljmp
lret
popf
push
scas
add
lahf
jno
add
pusha
jnp
gs
mov
add
shr
and
sbb
jl
fdiv
mov
pop
fnstsw
adc
jmp
loopne
lods
sbb
xchg
mov
aaa
jmp
mov
out
dec
xchg
loop
lds
sub
and
lret
pushf
push
bound
lcall
popa
movsb
test
adc
push
xorl
pop
popa
adc
in
js
xchg
jge
mov
arpl
filds
cli
push
pop
daa
jp
cmp
push
sti
ret
enter
inc
pop
and
popa
dec
loope
xchg
dec
xlat
mov
test
xchg
cwtl
in
fwait
and
pop
cmp
inc
jo
add
xchg
dec
xchg
xchg
mov
sbb
add
outsl
dec
icebp
ja
fdivrl
ret
push
stos
lock
movsl
jbe
imul
sub
ss
cmc
out
jp
gs
xor
jne
shlb
xor
pop
mov
jbe
pop
out
push
filds
and
daa
cmp
outsb
or
mov
xchg
scas
jb
insb
mov
jmp
sub
adc
cmp
ljmp
cld
jl
aaa
ret
pop
stc
dec
pusha
jp
fnstsw
jl
mov
negl
inc
test
push
inc
sub
pop
pop
loope
mov
adc
mov
dec
scas
cmp
movsl
ss
push
fbld
repz
mov
sub
sub
dec
xchg
cli
andl
dec
add
lock
mov
cli
xchg
loopne
cmp
mov
add
xorl
addl
push
sbb
pop
or
push
lar
fwait
shlb
ret
pop
pop
add
jge
push
rclb
test
or
hlt
mov
ja
pop
lds
aaa
xor
mov
and
outsl
sub
fwait
mov
cmp
push
add
fsubrl
mov
pusha
sahf
repnz
insl
mov
inc
int3
jns
test
jge
ret
ja
iret
xor
mov
and
test
mov
iret
imulb
xor
cmp
mov
cmpsb
adc
iret
mov
mov
push
inc
fisttps
push
inc
scas
mov
mov
xchg
rcll
or
xchg
mov
leave
and
mov
das
sarl
sarb
fildll
subl
inc
jecxz
cli
je
lsl
xorb
sbb
in
cmp
mov
cld
aam
sub
xor
dec
inc
cwtl
xchg
in
xor
test
das
pop
push
cwtl
je
or
loop
lcall
adcb
pop
shlb
dec
dec
hlt
iret
pop
bound
and
pusha
test
xchg
negb
subl
shll
sbb
mov
inc
mov
sbb
mov
xor
shll
mov
cli
sbb
out
loop
jnp
in
iret
rcrb
or
pusha
adc
fwait
das
pop
mov
aaa
or
sbb
and
xchg
jbe
pop
inc
js
mov
or
adc
addr16
sbbb
xor
xchg
ffree
loop
in
arpl
iret
adc
stos
testb
test
sbb
bound
sarb
and
or
mov
test
pop
ret
xlat
cmc
mov
xchg
sbb
and
push
sub
fcmovnbe
cmp
mov
xchg
ss
stos
cltd
bound
test
mov
decl
mov
xchg
sahf
xchg
jae
adc
addl
push
and
sub
push
sub
add
fisttps
adcl
popf
movsb
loope
int3
inc
xchg
pop
mov
mov
clc
sub
imul
jns
xchg
adc
fisttpll
xchg
leave
mov
arpl
in
adc
xor
mov
cmp
mov
les
sub
mov
sahf
pop
pop
pop
pop
int3
jge
test
daa
push
ja
push
sub
add
sub
out
lods
mov
int3
imul
cli
mov
int3
jns
push
dec
pushf
cmp
movsb
add
mov
insl
sbb
scas
push
cs
shlb
leave
lret
sbb
fmul
mov
sti
mov
mov
ret
out
loopne
cmp
xchg
out
sub
lea
push
sub
adc
add
add
jle
nop
mov
mov
or
sbb
test
ret
mov
adcb
xchg
test
scas
push
mov
push
iret
pop
imul
and
shll
push
jb
pop
outsl
outsb
sar
int
cmp
sbb
lret
pop
fpatan
add
dec
outsb
xor
into
jl
insl
into
xlat
out
mov
jno
orl
mov
cs
divb
iret
cld
mov
mov
xchg
mov
jne
pop
les
pusha
jge
xchg
fstl
out
xlat
add
cmp
mov
jecxz
fdivl
cli
add
xor
ja
lahf
outsb
inc
shrb
pop
ret
stos
in
xchg
outsb
xor
bound
lea
push
int
not
dec
inc
push
pop
push
jg
push
jle
fs
jl
in
and
daa
jo
mov
pop
mov
lcall
pop
sub
test
addb
stos
fildl
and
dec
xchg
or
cmp
mov
or
sub
ds
incb
sti
aam
repnz
ds
scas
in
pop
ljmp
push
xor
push
lahf
inc
push
and
cmpsl
sti
sbb
jne
test
loop
jo
inc
inc
adc
in
movb
mov
je
cmpsb
sub
int
push
push
sbb
jmp
and
add
pushf
xor
add
cmp
rorb
mov
cmp
fs
std
mov
sub
push
lahf
sub
divb
push
or
inc
mov
movsl
xor
scas
popf
roll
xor
call
xchg
lret
ret
inc
inc
in
pushf
popa
iret
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
xor
add
jp
and
nop
fstps
jmp
in
inc
test
loope
decb
lods
adc
mov
jle
bound
les
lods
notb
pop
inc
push
das
rorb
mov
jae
cld
into
mov
cmp
dec
jbe
repz
out
arpl
sahf
add
inc
movsb
xchg
jo
les
leave
test
mov
mov
dec
add
inc
jecxz
adc
shrl
pop
xchg
xorb
out
cmc
in
mov
stc
or
mov
add
repz
cmc
sbb
pop
jecxz
insl
out
sub
dec
adc
inc
nop
sbb
xorl
aas
jb
add
push
mov
or
pop
in
notl
fstl
mov
hlt
iret
movsb
push
lfs
pop
mov
filds
mov
xchg
movsl
mov
and
xchg
push
xchg
loopne
pop
mov
xchg
mov
mov
stos
imul
aad
xor
pushf
addb
adcb
xlat
xchg
pop
add
je
pop
adc
xor
cmp
outsl
mov
ret
jge
rcr
mov
call
mov
push
cmp
push
dec
xchg
sahf
and
out
daa
sub
adc
mov
xchg
in
mov
dec
mov
mov
add
iret
jmp
je
cwtl
inc
mov
fisttps
sbb
mov
dec
mov
test
lret
inc
aaa
pop
pop
push
fstpt
int
sub
cvtps2pi
jle
ror
aam
hlt
push
inc
stos
mov
sub
fdivr
xor
ret
jmp
push
mov
ja
cmp
lock
mov
mov
cmp
lds
fcomip
fdivrs
in
sub
jno
pop
mov
call
lret
or
iret
jmp
pop
add
push
push
addl
pop
cmpsb
fs
jge
shrl
jp
sbb
push
xchg
insl
popa
jl
mov
jae
add
ljmp
subl
imul
test
or
pop
pop
pop
mov
bound
dec
aad
push
mov
gs
cld
leave
xchg
xchg
lock
add
cmc
xor
repnz
dec
or
mov
or
pushf
or
adcb
pop
aaa
stos
and
dec
adc
jp
push
leave
enter
lcall
cltd
xchg
push
sbb
or
xor
dec
loop
cmpsb
imul
xchg
xor
jns
mov
loopne,pn
lea
iret
cmp
mov
add
mov
inc
out
push
mov
mov
loopne
push
inc
loop
mov
insb
outsl
scas
jmp
add
pop
xchg
sub
inc
mov
mov
cltd
mov
jge
push
fs
loope
lods
adc
pop
sahf
inc
cmove
mov
jae
les
sub
pop
mov
sub
in
daa
xor
mov
cwtl
jne
lds
sbb
xor
vmovsldup
ret
inc
jb
adc
and
inc
jne
cli
fsts
repnz
outsb
dec
xlat
adc
aas
ds
lret
sbb
push
mov
movsb
leave
xchg
das
cs
movsb
inc
jle
push
mov
xchg
jg
sub
xchg
mov
mov
push
testb
jmp
inc
es
or
pop
pop
or
das
xchg
ds
les
pop
and
sbb
mov
jae
inc
lods
fisubl
dec
icebp
pop
sbb
ljmp
push
pop
mov
lds
dec
in
gs
sub
std
in
dec
mov
lcall
xchg
pop
js
movsl
cld
add
cmp
pop
lods
rorb
inc
sub
call
jecxz
and
sbb
sbb
push
out
lret
adc
adc
cwtl
add
xor
test
inc
mov
arpl
notb
xchg
inc
loopne
outsl
xor
inc
lahf
jge
push
imul
dec
jge
pop
aam
rcl
mov
pop
mov
test
or
inc
mov
stos
or
jg
xchg
lcall
dec
lret
pushf
and
add
shll
lcall
cmp
enter
outsb
pusha
cmp
inc
xor
mov
cmp
int3
leave
dec
cmp
mov
jb
push
cwtl
mov
mov
fst
push
xor
pusha
adc
mov
lock
mov
adc
push
adc
sbb
cmp
test
dec
test
cmpsb
dec
jecxz
dec
jbe
sbb
clc
cmp
sub
enter
add
dec
popa
shr
test
loope
inc
jl
add
and
jmp
gs
inc
jmp
pop
ret
mov
jno
and
ljmp
shlb
out
push
jae
push
popa
inc
xchg
and
aaa
xchg
jmp
or
aam
jno
mov
or
hlt
mov
xchg
push
lret
push
xor
push
fmull
mov
jo
xor
add
jg
lock
sbb
xor
push
mov
mov
jle
movsl
sar
leave
fwait
sbb
ds
push
pop
xorl
xchg
insl
mov
cmpsb
test
and
icebp
and
mov
adc
mov
sbb
rol
fs
in
adcl
push
xchg
mov
add
sub
insl
add
mov
in
add
cmpsl
dec
xchg
out
fcmovb
std
mov
sbb
loop
push
push
leave
negb
lods
push
divl
rcll
fnsave
sti
xor
jmp
jle
arpl
adc
cli
jecxz
out
popf
or
jb
icebp
lret
and
int3
into
in
js
add
cmp
xchg
push
mov
divb
mov
mov
scas
sti
add
pop
mov
pop
icebp
movsb
mov
lahf
out
mov
cmp
fcmovnu
aas
loop
lock
test
xor
test
out
out
lea
push
mov
pop
ja
movsb
mov
mov
clc
nop
sbb
adc
or
push
pushf
push
repnz
and
mov
mov
jle
stos
mov
repnz
test
ret
pusha
xor
push
les
jg
negl
cmc
dec
dec
imul
call
enter
fcmovne
rcr
negb
insb
xchg
cltd
mov
shll
or
mov
push
jae
mov
xor
pop
push
mov
push
jbe
adc
imul
pop
xor
mov
jb
cmp
test
or
test
jb
hlt
das
loopne
push
mov
stos
pop
shlb
jb
mov
push
xlat
ds
fucomp
fstpl
and
mov
xor
mov
xchg
stos
or
dec
dec
and
inc
or
das
enter
xor
aas
insl
fstpt
in
mov
adc
sbb
pop
xchg
xchg
sub
lea
jns
outsl
xchg
pop
rcr
cmp
xchg
pop
lret
mov
adc
inc
mov
mov
loopne
imul
lods
mov
mov
lock
js
adc
cmp
aam
jno
xor
pop
lods
imul
rolb
shlb
cmp
mov
sbb
mov
in
hlt
cmpsl
or
cltd
mov
mov
fmul
mov
loopne
adc
mov
push
dec
lret
add
fiaddl
or
jle
movsb
dec
mov
or
inc
int3
iret
mov
sbb
xor
mov
int3
nop
sbb
xchg
add
dec
xlat
cld
jp
adc
loopne
icebp
icebp
pop
push
js
inc
sbb
pop
push
push
sbb
dec
out
data16
fldl
push
pop
add
lahf
fsubrp
stos
jnp
popa
mov
xchg
aas
fdivs
cmp
mov
scas
xor
or
push
push
mov
mov
sbb
and
push
sub
ds
das
loop
lds
inc
pop
scas
mov
lock
stos
push
popl
loop
adc
mov
push
call
pop
and
xor
xor
sub
ja
lahf
ljmp
lea
jl
test
in
loopne
pop
shrl
leave
stc
cltd
ss
mov
fbld
out
leave
test
iret
cli
in
mov
xchg
fwait
lods
idivb
sbb
mov
movsl
push
sbb
mov
mov
mov
or
sub
mov
sahf
jno
or
int3
pop
jne
mov
in
subl
enter
dec
jb
fsts
mov
inc
push
leave
es
movsl
ret
pop
fldcw
imul
lds
aad
ljmp
mov
xor
daa
popf
sub
loopne
jns
ds
addr16
pusha
test
fstpt
pop
push
xor
pop
dec
mov
mov
cwtl
push
pushf
jae
mov
xchg
lock
jbe
and
insb
movsb
cwtl
dec
xchg
mov
xor
push
pop
in
movsl
out
mov
testl
push
imul
pop
pusha
sbb
lcall
adc
mov
mov
dec
fistpl
divb
fnstenv
dec
or
cld
mov
mov
scas
and
sub
sub
pop
and
xor
imul
dec
pop
add
stc
rol
popa
lods
jns
popa
cmpsl
aad
inc
mov
sub
loopne
sub
es
mov
xorl
mov
sarl
and
push
jle
std
cmp
or
dec
in
xchg
div
mov
popa
pop
ret
pop
ljmp
icebp
xchg
mov
jne
out
pop
xchg
loopne
inc
inc
testb
int3
or
cmp
std
mov
scas
inc
xchg
es
test
mov
xlat
out
mov
cld
or
popa
adc
in
dec
push
cld
out
pop
subb
enter
leave
mov
inc
shll
mov
cmp
mov
add
lock
out
sbb
lcall
in
fwait
cwtl
or
pop
insl
mov
inc
push
popa
ds
pop
js
in
pop
or
cli
push
aam
das
addr16
xor
in
adc
stc
add
addr16
stc
mov
enter
mov
xchg
pop
cmp
das
jecxz
jl
and
aas
data16
mov
dec
and
jg
mov
pop
test
cltd
sub
pop
xchg
mov
fsubrl
dec
clc
out
rcr
jmp
stos
cmpsb
mov
in
ficomps
mov
pushf
mov
roll
jmp
repz
mov
movsb
out
mov
imul
cmc
mov
cmp
je
mov
test
dec
push
sbb
sbb
mov
mov
inc
data16
sub
outsb
mov
adc
daa
test
lahf
or
imul
mov
push
div
lret
lea
dec
test
jle
outsb
add
rcr
mov
add
dec
and
mov
cmp
lods
xchg
or
add
mov
in
lock
enter
pop
push
sub
dec
aaa
pop
cmc
mov
cmpsl
dec
pop
test
adc
cmp
loope
push
lret
sub
outsl
push
rcll
popa
in
and
mov
insb
xchg
sbb
loope
out
push
faddp
jecxz
testl
into
dec
aam
mov
and
loopne
sub
dec
mov
sbb
mov
insl
inc
les
xchg
jl
sbb
fs
push
mov
sti
gs
mov
xchg
rsm
inc
mov
inc
lcall
popa
add
sub
dec
ds
mov
imul
pop
sbb
data16
test
adc
into
sub
ja
push
xchg
xchg
xlat
sub
ficomps
push
mov
lds
jle
pusha
mov
or
lds
aas
dec
fs
outsb
sti
rcll
stc
repz
cmpsb
xchg
and
xchg
lret
add
and
ret
jne
repz
cmp
ss
sahf
mov
insl
dec
mov
xchg
icebp
outsl
pop
lods
mov
pushf
and
test
out
test
repz
aam
sub
stos
in
imul
mov
loope
jno
add
cs
cwtl
dec
sub
sti
leave
and
push
or
or
test
lds
out
fnstsw
bound
or
xchg
addr16
aam
cmpsl
xorb
or
stos
imul
stos
jne
iret
call
into
sub
mov
add
or
jne
adc
dec
ds
in
scas
sbb
rol
mov
push
cmp
repnz
movsb
lret
sub
fwait
scas
sbb
test
inc
xchg
xchg
mov
mov
lea
mov
mov
lret
std
pop
ds
cmpsl
int3
xor
dec
sbb
mov
sub
mov
test
mov
xor
dec
lahf
cmp
push
pop
or
test
je
lcall
dec
cs
dec
lods
es
mov
and
xor
inc
mov
or
enter
adc
push
fistpl
dec
call
jne
add
mov
enter
xor
mov
mov
int
ljmp
mov
pushf
popa
jae
out
loopne
or
or
repz
aad
loope
scas
add
ffree
sbb
ds
sti
lret
stc
or
cmc
aam
xchg
enter
out
xchg
movsb
pop
popa
inc
out
cltd
sbb
rcr
inc
sarb
adcl
dec
cmpsb
ja
shll
cmpsb
fucom
mov
imul
mov
adc
or
andl
ficoms
shr
mov
dec
dec
dec
jnp
sbb
fistpll
add
and
fwait
and
ficompl
xchg
pop
or
pushf
and
add
xor
xorb
and
mov
lret
dec
movsb
dec
lahf
ja
sub
xchg
push
sbb
pushf
add
orl
aas
xchg
dec
in
cmpb
out
push
mov
lods
jne
sti
or
push
pop
xlat
insl
pusha
pop
add
imul
cmc
mov
push
pop
lret
scas
inc
jns
ret
lret
pushf
lods
and
pop
xchg
enter
in
inc
inc
adc
xchg
out
enter
jp
aas
ror
xchg
fbstp
jae
cmp
xor
mov
cmp
sub
cs
ret
scas
inc
das
or
and
bndstx
mov
fmull
loop
sub
mov
shlb
movsb
ret
fisubrl
std
sbb
sti
jnp
sbb
scas
adc
xchg
lret
xchg
mov
sti
mov
push
mov
repnz
orb
push
aad
adc
sahf
sbb
call
xor
gs
cli
inc
push
jg
mov
jg
imul
enter
rcl
jno
push
filds
loope
xchg
lcall
out
jo
mov
dec
cmp
aam
mov
repz
adc
jge
mov
add
ret
es
push
inc
gs
je
inc
jp
dec
jl
and
jmp
push
pop
mov
ret
iret
sub
pop
out
fmul
sbb
stos
inc
cmc
movsb
int3
jge
jnp
fcmovb
popa
popf
movsb
lods
das
ficompl
gs
rcrl
std
pop
icebp
nop
aaa
pop
jae
jg
pop
pop
xlat
adc
loopne
addl
dec
add
loopne
add
xor
ret
sbb
nop
lds
test
insb
and
pop
inc
add
fs
lods
out
jl
sahf
repnz
out
push
pop
es
jns
adc
fsubrl
mov
bsr
mov
ja
xchg
dec
fdivrs
mov
xor
dec
mov
pushf
push
sub
dec
mov
lcall
imul
inc
mov
push
sub
mov
push
sub
ret
push
mov
dec
jge
faddl
iret
mov
cmp
int3
push
inc
cs
arpl
and
stos
ljmp
sbb
out
cs
jg
in
pop
sti
cmp
mov
dec
mov
push
fidivl
mov
and
cwtl
cwtl
and
rcll
shll
js
aas
adc
xchg
adcb
pop
lcall
test
push
jbe
sub
outsl
insl
mov
dec
push
scas
mov
push
outsl
jae
jmp
add
ret
cld
das
pop
mov
mov
xchg
lods
add
pop
dec
dec
ret
mov
pop
test
scas
pusha
sub
mov
dec
ss
mov
pop
push
fildll
int
test
pop
fidivs
jmp
pop
add
add
out
mov
loope
fisubrl
call
push
leave
jno
stc
ds
nop
sbb
pusha
add
inc
push
int3
cmp
pop
cmp
cmpsb
into
imul
sub
jne
sbb
pop
bound
je
sbb
inc
testl
movsl
mov
sbbl
pop
mov
sbb
xchg
xor
test
rorl
xchg
mov
sub
mov
loopne
stos
ja
arpl
adc
shll
aaa
jge
int3
or
mov
and
fisubrl
jle
jb
rcl
adc
push
dec
enter
scas
popf
stos
sub
ja
jmp
addb
sub
add
or
xor
cmp
pop
inc
mov
sti
clc
outsb
xchg
or
repz
push
pusha
sbb
pop
in
mov
shll
cmp
stos
lock
dec
push
sbb
cmpsl
and
data16
push
mov
imul
stc
jge
pusha
pop
mov
fsubrs
xchg
push
jl
xchg
movsb
sub
mov
stos
sti
cmpsl
mov
jle
xor
jg
and
imul
mov
dec
cs
mov
xchg
aam
inc
aad
in
outsl
scas
ret
jp
mov
xor
pushf
push
lcall
adc
decl
mov
sbb
aad
les
and
fldenv
mov
add
cld
mov
mov
aad
xor
pop
and
data16
bound
stos
jmp
pop
sub
xchg
je
movsl
xchg
sbb
push
xchg
lods
mov
dec
std
outsb
jmp
pushf
out
inc
ret
xor
fld1
mov
repz
push
dec
lock
test
clc
xorl
push
rcl
mulb
or
roll
add
inc
push
lods
mov
loopne
xor
adc
mov
pop
subl
pop
mov
mov
or
ret
adc
push
notl
cmp
inc
lcall
mov
pop
insb
lods
and
in
mov
push
jnp
hlt
lret
dec
sbbl
test
push
add
jnp
push
mov
pop
cmp
xchg
xchg
dec
mov
mov
or
test
pop
inc
cmpb
ja
mov
roll
out
inc
out
loop
daa
cli
push
jl
and
and
mov
pop
push
inc
popa
push
test
sti
sbb
movsb
xchg
xchg
cld
jl
cmp
ja
xchg
jp
or
scas
jno
mov
lods
inc
jns
pop
fiadds
testb
clc
lock
push
dec
fnsave
mov
int3
out
xor
sub
mov
lea
inc
out
popa
arpl
test
test
fs
mov
aad
rol
xor
push
addb
adc
sub
push
push
lds
sbb
fildl
jbe
leave
pop
jmp
je,pt
mov
shl
xchg
es
fisubrl
mov
jb
pusha
insl
icebp
xchg
jge
fcomps
push
gs
scas
stos
insb
adcb
lret
loope
jae
sub
lret
push
test
sti
cmp
ja
xchg
push
int
dec
mov
test
cmp
cmpsb
dec
dec
dec
cltd
sub
adc
mov
imul
das
jle
pop
cmp
pop
cmp
sub
push
mov
ljmp
cwtl
jae
cmp
push
sub
push
arpl
mov
fstpt
xor
and
xchg
sbb
fsts
inc
int
leave
or
int
or
lret
sbb
sbb
int3
mov
xorb
xor
xor
push
repz
fstps
je
scas
inc
mov
pusha
in
jae
dec
fldl
hlt
inc
je
mov
int
inc
sti
mov
cltd
orl
fwait
shrb
pop
mov
insl
cmpsb
test
jns
and
cmpsl
sbb
mov
lea
dec
dec
aaa
loopne
out
repz
and
out
cmc
inc
stos
mov
or
lock
or
push
das
popa
dec
and
mov
sahf
xor
cmpsb
jno
stos
test
out
push
xor
flds
cmp
dec
and
les
add
mov
push
and
xchg
mov
jmp
adc
push
cmpsb
add
shlb
out
mov
das
jb
push
cmp
call
xchg
repz
imul
bound
add
stos
aas
and
push
mov
lds
jmp
mov
add
pop
rolw
in
xchg
push
test
jo
rcrl
dec
sub
shll
movsl
iret
lahf
scas
sarb
icebp
popf
sbb
xor
jnp
outsb
pop
cmp
pop
and
mov
loop
xor
push
mov
rclb
and
ds
daa
mov
es
add
or
enter
mov
and
icebp
in
sub
and
sbb
push
cpuid
arpl
dec
push
xchg
mov
mov
xchg
push
xchg
test
ja
pop
push
stos
fs
inc
insl
scas
and
cld
divl
jae
loopne
imul
or
cmc
and
mov
jno
push
cmc
stos
not
sbb
push
jecxz
mov
xor
stos
aam
jbe
mov
inc
pop
sbb
pop
sub
bound
movsb
inc
mov
rol
adc
adc
enter
lcall
mov
and
add
or
push
fwait
jne
popa
adc
pusha
jb
fcmovnbe
cmp
enter
loope
push
mov
jns
cld
add
sub
gs
scas
scas
sbb
jb
pop
daa
in
mov
adc
jae
mov
sahf
ss
sarb
in
lret
mov
dec
and
ljmp
es
lods
push
fnstenv
movzwl
inc
or
lcall
mov
test
xchg
gs
mov
fildl
popl
mov
in
sahf
inc
shll
ljmp
aad
and
mov
sub
xor
pushl
loope
cmpsb
jne
repz
and
xchg
jbe
sarb
ds
lahf
pop
fistpll
hlt
dec
xor
fnstsw
out
shll
lret
lret
and
lcall
inc
push
mov
stos
add
cmp
mov
push
mov
iret
add
xchg
add
insb
cmc
xchg
inc
and
dec
ss
jle
lcall
push
add
adc
sbb
sbb
loope
in
cmp
je
jl
int
insl
xor
bound
xchg
add
jo
ljmp
enter
jne
dec
cmpsb
out
test
stos
inc
fwait
inc
mov
out
cwtl
xchg
mov
adc
and
aas
pop
mov
dec
jbe
leave
movsb
jl
jg
xchg
jl
dec
inc
popa
inc
cmpsl
cmp
aam
mov
inc
mov
mov
pop
rcrb
jle
pop
fadds
jge
mov
pusha
hlt
mov
jp
xchg
js
je
lea
scas
sahf
imul
fisttpll
mov
clc
leave
icebp
repz
xor
fcoms
aad
pop
in
push
fnsave
jbe
adc
in
iret
sbb
adc
mov
inc
adc
mov
jl
xchg
movsb
sub
or
or
and
aad
outsl
mov
add
jg
inc
mov
out
aaa
dec
int3
je
adc
int3
lret
mov
dec
inc
adc
mov
or
sub
mov
jae
fidivl
and
out
add
fnstenv
cmovge
pop
jb
repnz
lds
rcll
stos
xlat
das
pop
lock
xor
dec
nop
adc
mov
inc
pop
popf
dec
jbe
inc
stos
push
lcall
dec
sbb
xor
aam
sahf
mov
inc
fsubrs
sub
jbe
rolb
pop
mov
mov
inc
ja
sti
andb
icebp
test
orb
rcll
bnd
xchg
cmp
mov
mov
stc
xchg
sub
dec
shll
xchg
mov
cwtl
adc
cld
mov
dec
pop
int
das
mov
addl
imul
orb
inc
outsl
add
sbb
lods
cmp
jbe
push
test
test
xor
leave
inc
fildl
mov
rorl
lods
sbb
lea
cmpsb
inc
cwtl
jns
sbb
push
data16
jae
cwtl
dec
dec
push
sbb
and
movsb
data16
add
pop
pop
xor
pushf
repz
enter
or
ret
sub
loop
push
and
lds
fwait
sbb
dec
jp
mov
hlt
scas
aas
push
cltd
jl
test
mov
inc
pop
out
or
xor
test
out
inc
push
jmp
pop
jecxz
ja
jo
sbb
stos
insb
scas
out
imul
dec
lods
xchg
or
xchg
pop
aas
fldcw
or
in
mov
adc
inc
aad
pop
repnz
scas
std
test
repnz
mov
in
and
pusha
out
ret
cli
lods
lock
xchg
mov
mov
sub
pop
sub
mov
repz
xchg
add
das
mov
in
stos
test
lods
sub
addb
es
xchg
or
sub
repz
push
notl
cld
jnp
lock
dec
das
push
dec
fidivrl
addr16
pop
shrb
xor
inc
ljmp
xchg
cmpsb
pop
dec
jle
cmpsb
and
xchg
jg
bound
sub
and
mov
outsl
mov
arpl
out
xor
fdivs
adc
xorb
cs
jle
fcomip
xchg
int
xchg
movsl
ficoml
add
dec
lock
out
mov
adc
mov
cmp
dec
push
add
shrb
jb
dec
std
inc
ficompl
aaa
xchg
cltd
xorb
fdiv
mov
pop
cmc
add
arpl
popa
xor
mov
mov
or
int
jnp
mov
inc
sub
into
mov
leave
mov
jl
jecxz
jbe
outsb
fsubrs
lahf
pop
pop
std
push
add
mov
scas
push
or
push
and
mov
pop
fadd
mov
inc
lret
sub
pop
cld
and
push
jmp
cli
movsl
sti
loope
pop
inc
lahf
cmp
lcall
enter
out
xchg
and
mov
fildll
cmp
shlb
jle
movsl
dec
movl
mov
int3
rcr
out
xchg
mov
adc
sub
push
mov
add
xchg
xor
push
or
pushl
push
cli
gs
into
xchg
inc
mov
xor
add
push
call
aaa
pop
pop
hlt
fadd
or
fcompl
fs
push
lcall
gs
sub
inc
adc
andl
pop
inc
mov
push
cmp
lea
in
cli
insb
loopne
dec
outsb
jnp
in
mov
pop
push
mov
pop
test
xchg
aad
idivb
lret
jmp
enter
adcb
outsb
jmp
adc
test
sub
cmpsb
je
decl
fbstp
movsl
dec
ja
xor
arpl
xlat
daa
dec
inc
push
mov
jl
cmpb
mov
dec
insb
pop
outsl
xchg
mov
pop
xchg
fidivrs
jne
dec
jb
stc
mov
pop
std
insl
testb
mov
pop
pop
inc
inc
xchg
stos
inc
and
jg
jb
dec
movsl
fdivl
dec
in
push
sbb
dec
jg
pop
or
xchg
dec
pop
sub
add
xchg
int3
sbb
push
in
jmp
pop
out
xchg
adc
test
lods
inc
push
pop
mov
jnp
mov
add
test
adc
aaa
adc
push
scas
in
clc
pop
leave
mov
push
pop
jb
inc
push
rorl
mov
clc
into
out
inc
jae
ljmp
cwtl
cmpsb
sti
mov
pop
faddl
jns
xchg
mov
push
jle
arpl
inc
mov
outsb
icebp
pop
test
jecxz
jo
xchg
sub
xchg
sti
fadds
std
and
push
shrl
inc
jecxz
gs
mov
xor
fsubr
sub
lret
bsf
mov
push
std
and
test
dec
sahf
insl
scas
jg
pop
lds
cwtl
je
sbb
movsb
outsl
xor
cmp
jo
mov
dec
rcr
in
pop
jo
test
notl
or
out
call
cmp
rcrb
pop
lods
lods
jecxz
cld
xchg
add
lcall
adc
sub
mov
pop
shrl
or
loop
popa
inc
sahf
xchg
lods
pop
cs
je
sahf
ret
mov
out
daa
shr
ss
es
xor
lods
and
sbb
sbbb
shll
mov
popf
cmp
add
jns
cld
sbb
test
cmpsl
push
outsl
mov
clc
sbb
mov
jp
loope
shl
sub
out
cmc
pop
fistl
xchg
push
or
scas
xchg
fldl
sub
jbe
cmpsb
rcrl
lds
arpl
adc
add
dec
repnz
ljmp
outsl
popa
pop
push
pop
pop
xor
push
dec
mov
adc
jmp
cmp
cwtl
jecxz
mov
imul
push
sahf
scas
scas
jo
jno
out
inc
shl
push
or
pop
add
mov
dec
xchg
out
and
jge
xchg
jp
push
adc
xchg
and
bound
push
aad
fldt
repz
or
pop
push
xor
lock
fsubrs
xchg
arpl
xchg
rolb
lods
pop
shl
subl
ljmp
mov
insb
xor
jecxz
lock
cmp
mov
push
int3
loope
xchg
add
scas
fwait
or
scas
test
xchg
fldt
imull
xor
mov
mov
loopne
cmpsb
mov
sbb
jns
dec
in
fdiv
add
pop
out
xor
mov
frstor
sbb
cmp
push
xor
ret
lock
arpl
sbb
jns
xchg
jle
scas
push
xorl
jmp
push
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
jae
jp
pop
jp
out
cs
es
jo,pt
mov
stos
ljmp
and
lret
adc
push
icebp
insb
aas
push
adc
inc
xchg
add
loopne
and
jne
xor
imul
and
movsl
xor
das
and
and
mov
cmpsl
mov
sbb
in
sbb
push
cmp
sti
mov
mov
mov
jb
sub
push
nop
outsb
jl
stos
push
mov
sti
rcrb
cmpl
sbb
int3
cs
stos
jb
sub
pop
sub
adc
wbinvd
sti
cmpsb
ds
cmpsl
aas
and
push
inc
xchg
add
cmp
pop
fldt
jmp
cmp
jne
rcl
ret
cmp
xor
adc
repnz
in
js
add
cmpsl
jnp
sub
inc
frstor
push
stos
mov
test
or
adcb
iret
andl
call
push
out
mov
mov
stc
data16
pop
lds
xor
add
insb
jecxz
addr16
movsl
test
and
fwait
sub
in
inc
inc
scas
push
push
popf
mov
xchg
dec
jge
sahf
fcompl
adc
not
dec
mov
imul
adc
push
movsl
mov
sbb
mov
test
mov
sub
faddl
and
push
pop
mov
mov
push
push
lds
aad
fdivl
sahf
mov
je
xchg
jbe
movsb
in
aad
addb
push
and
adc
cmp
xor
vorps
add
mov
cs
sbb
clc
cwtl
rcrl
inc
mov
out
push
or
pop
clc
sub
out
push
or
sub
dec
inc
iret
adc
xchg
mov
repz
mov
dec
mov
sbb
inc
or
ret
out
fldcw
mov
push
xlat
enter
leave
pop
or
cmpsb
stos
int
popf
fyl2x
dec
jo
sub
mov
mov
jne
mov
fidivrs
xsaveopt
call
xchg
push
sti
scas
push
repz
les
mov
hlt
or
dec
xor
push
repnz
iret
push
fildl
filds
sbb
adc
mov
loope
out
push
mov
jge
in
andb
out
xor
in
add
dec
mov
scas
stc
mov
das
mov
pushf
mov
mov
enter
mov
js
sub
fsubs
test
pop
nop
dec
aam
adc
jb
xor
mov
sbb
or
sbb
add
stos
lcall
push
inc
jns
xor
sarb
push
pop
adc
ret
push
imul
inc
dec
cmpsb
fimuls
sub
fiaddl
int3
cld
test
dec
cmovb
mov
mov
cmpsl
mov
std
jnp
pop
into
push
xor
push
test
xchg
sbb
xchg
xchg
cs
jecxz
stos
test
shrl
lea
imul
cwtl
or
pop
and
jbe
xor
and
addr16
cmc
insb
dec
mov
add
cli
mov
outsl
imul
flds
sub
leave
xchg
cmp
xchg
ficomps
push
dec
xchg
cmp
inc
sbb
sbb
cld
xor
cltd
movsb
cmpsl
add
dec
test
call
mov
and
bound
outsb
push
lock
add
ss
push
leave
mov
xor
dec
sub
push
mov
xlat
adc
test
push
or
je
cmpsl
push
xor
sub
sbb
insl
lds
scas
lock
idivb
mov
mov
mov
iret
sub
and
pop
sbb
push
notl
leave
sahf
imul
push
or
jg
loop
fistl
movsl
nop
mov
add
or
pop
add
movsl
or
rcrb
mov
mov
xor
mov
pop
pop
mov
xor
pusha
cmp
pop
xchg
cltd
pop
insl
and
sahf
lea
pushf
shrb
cli
inc
jg
mov
jle
mov
jp
iret
or
add
xor
ds
xor
int3
jp
rcrb
add
loopne
and
mov
test
mov
mov
xchg
adc
mov
fistpl
add
fnstsw
adc
negb
xchg
adc
jp
fdivr
jno
push
jnp
mov
lea
jl
push
call
repz
lret
scas
pop
cli
push
out
ficoms
shll
mov
stos
xchg
fucomp
xorl
inc
inc
jmp
cwtl
shr
insl
outsl
adc
in
subb
mov
fadd
scas
and
repnz
inc
int3
sti
mov
xor
push
add
jae
popa
mov
fwait
aaa
push
sub
cmp
sub
add
or
pop
inc
test
cld
push
dec
mov
pop
cmp
ror
mov
movsl
inc
test
dec
ja
pop
js
ret
popf
push
fldenv
or
push
iret
stc
fwait
push
inc
loopne
imul
lret
gs
inc
out
mov
mov
aam
repz
jbe
push
mov
mov
adcb
cld
scas
mov
fcompl
data16
sbb
test
inc
lods
dec
data16
mov
mov
in
mov
test
mov
dec
xchg
icebp
fs
daa
sahf
and
jecxz
mov
je
xor
out
enter
sub
pop
lret
mov
ss
jno
inc
setge
imul
imul
mov
aad
and
sbb
outsl
scas
push
inc
dec
inc
xchg
lret
js
mov
and
mov
inc
xchg
jae
mov
cmp
pop
adc
mov
or
enter
mov
push
jp
subb
aam
das
paddusw
andl
nop
test
jmp
sbb
jbe
into
xchg
out
and
push
xchg
or
std
pop
dec
push
out
pop
jl
ljmp
hlt
and
pushf
cld
push
sbb
jecxz
push
push
std
fists
lea
sahf
scas
jp
push
pop
fisubrs
dec
ficomps
mov
push
mov
xchg
pop
or
popf
pop
mov
in
pop
mov
inc
jae
jecxz
aas
lods
inc
aaa
push
and
int
in
jb
mov
push
mov
jne
pop
and
cli
mov
addb
dec
push
sbb
jecxz
dec
pop
pop
insl
inc
add
dec
arpl
mov
cmp
cmp
add
sahf
push
imul
sub
je
and
and
and
adc
xor
sbb
mov
cs
mov
cmp
mov
pop
push
dec
sbb
in
mov
stos
cmp
out
in
jb
popa
gs
mov
pop
loop
pop
in
jg,pt
inc
mov
test
fcomps
stos
sub
fwait
cmp
outsl
ret
popf
mov
hlt
dec
xor
jecxz
loopne
jg
pop
rcr
lds
cmp
push
inc
ss
int3
rclb
cmpl
and
ljmp
scas
outsb
fadds
aaa
in
icebp
cmc
dec
add
xchg
mov
push
xchg
mov
jmp
test
sahf
push
rorl
repz
push
push
daa
insb
xor
pop
jmp
in
or
sub
mov
mov
add
xor
push
cmp
vhaddpd
mov
sub
xlat
and
cmpsl
scas
mov
test
scas
push
jbe
cs
mov
and
inc
aad
data16
scas
sarl
xchg
popa
sti
jbe
imul
dec
enter
xchg
leave
icebp
movzbl
mov
jb
mov
popf
jno
sbb
call
insb
xor
leave
sub
test
sti
loop
mov
popa
jp
jno
in
mov
mov
and
jo
loopne
int
mov
or
cs
shll
xor
scas
aaa
lods
mov
dec
xchg
cs
xor
and
ss
in
sbb
ljmp
jmp
sbb
in
imul
cmp
enter
and
or
and
cs
stos
roll
adc
insl
jb
xor
mov
in
sub
mov
hlt
pushf
stos
fisubrl
aad
xchg
cmp
roll
xor
les
sbb
fbld
mov
cmpsb
lods
pop
sbb
pop
mov
mov
je
mov
or
jno
lret
ljmp
mov
lea
jne
pop
out
sub
mov
jge
pop
ficoml
iret
loopne
dec
test
mov
push
mov
into
test
xchg
lods
push
dec
scas
movups
adc
push
fwait
mov
out
or
out
cmc
adc
sbb
push
inc
nop
cmc
testl
sbb
add
xchg
xor
outsb
adcl
aas
aas
inc
or
mov
cltd
sbb
pop
mov
outsl
int
bnd
out
pop
xchg
dec
popf
in
mov
in
daa
cmp
pop
add
push
out
stc
adcb
out
push
mov
sub
push
pusha
push
and
pop
cmp
mov
incl
sub
sbb
pop
movsl
cmpb
xor
pushl
pop
inc
xchg
loop
aad
pop
sub
pop
adc
add
sahf
sub
inc
jno
mov
hlt
insb
leave
ret
or
mov
xchg
scas
dec
jge
mov
adc
std
int3
mov
sbb
push
sti
inc
fnstcw
add
xchg
icebp
leave
jl
es
push
lret
pop
jns
sbb
jnp
jne
daa
push
lahf
or
adc
xchg
popa
xor
inc
scas
push
and
push
repz
sub
mov
rorb
xchg
xlat
popf
cwtl
mov
out
pusha
fists
push
fistps
and
stos
arpl
lea
cmp
in
or
sub
shll
bound
jp
cmp
fcmovu
test
pushf
sub
adc
xor
jb
mov
scas
pop
imul
adc
mov
pop
loopne
add
mov
xor
xor
jmp
jp
aam
ljmp
inc
sahf
mov
cmpsb
adc
xchg
stos
mov
cmp
iret
mov
pop
in
and
jne
cmc
xchg
dec
daa
pop
popf
cli
loope
cltd
pop
cli
lea
sti
test
js
gs
inc
pop
mov
sbbb
mov
or
jecxz
pop
push
adc
push
lea
sahf
sub
xlat
jge
mov
test
inc
or
sub
jb
cwtl
mov
imul
int
scas
adcl
std
mov
and
mov
adc
out
loopne
jmp
mov
dec
jno
push
xchg
dec
sbb
jl
mov
test
push
stc
rol
dec
add
outsl
aad
sub
cmc
xchg
test
dec
pop
clc
scas
lock
mov
jmp
mov
mov
sbb
add
add
les
outsb
cmp
adcl
cmp
inc
sbb
mov
idiv
test
add
out
push
sahf
inc
mov
xor
add
mov
js
cmc
testl
mov
sub
sbb
mov
int
fadds
xor
minps
xchg
jmp
xor
es
rcrl
hlt
inc
cwtl
mov
pop
pop
cmp
jle
mov
dec
mov
mov
pop
roll
fwait
lret
pop
subb
mov
inc
jecxz
inc
flds
mov
stc
xchg
inc
lock
sub
mov
inc
mov
popa
sbb
clc
cmpsb
pushf
jbe
jno
aad
arpl
dec
push
adc
cwtl
pop
xchg
and
lods
mov
jp
sar
cmp
imul
lahf
pop
les
push
and
cmpsl
mov
mov
or
mov
js
lock
mov
fcomps
cmp
cmp
sub
pop
xchg
jmp
es
and
sub
daa
clc
pop
jecxz
adc
and
push
adc
dec
mov
adc
adc
lock
push
cmpsl
aam
test
dec
inc
and
shl
jb
pusha
sub
xor
pop
jg
enter
inc
jno
clc
inc
insl
into
clc
fisubs
pop
jae
jo
push
andl
testb
jne
lds
pop
dec
pop
popf
xor
jp
fwait
clc
sbb
add
xor
sarl
ss
rcr
mov
les
mov
ja
add
lahf
iret
xchg
paddb
sbb
jbe
stos
dec
or
add
divb
or
inc
lcall
push
sub
mov
push
stc
sub
mov
cmp
stos
or
jg
out
lret
addr16
sahf
mov
les
aad
and
filds
aad
popf
and
rclb
mul
jb
cmp
add
push
xlat
add
push
pop
ret
xchg
adc
xchg
aas
sub
mov
loop
mov
ret
jmp
mov
les
pop
inc
mul
and
popf
sub
mov
add
daa
ljmp
aas
and
xchg
adc
xchg
insb
and
sub
call
mov
push
fildl
jecxz
inc
dec
cltd
add
es
scas
loopne
insb
jbe
dec
lret
jno
in
jmp
pop
jb
mov
inc
in
adc
fdivrp
es
call
dec
loope
and
int
sbb
and
mulb
sub
pop
ret
cld
mov
jecxz
and
es
add
push
leave
not
mov
jo
mov
das
mov
cli
lcall
aad
jae
jnp
xchg
push
sub
cmp
or
test
fs
fs
push
daa
jbe
imulb
sbb
mov
add
sbb
xlat
mov
and
lods
mull
sbb
test
adc
mov
out
enter
mov
sti
inc
xor
fwait
lods
mov
inc
mov
sbb
in
xchg
mov
mov
inc
jg
xor
adc
push
push
test
push
aam
lods
fcomps
das
cmpsl
dec
stos
dec
fsub
dec
test
cmp
imul
dec
repz
inc
call
fnsave
loope
ret
fs
mov
xchg
mov
std
lahf
jns
out
xor
daa
adc
shr
movsl
pop
inc
andb
pop
xchg
or
jnp
int
leave
test
test
mov
fsubrl
push
dec
mov
pop
xor
jb
fnstsw
enter
stos
inc
stos
add
pop
repnz
cmp
cld
mov
pop
popf
mov
out
inc
pop
jne
add
in
pusha
popf
test
cmpsb
in
mov
add
adc
sahf
mov
inc
push
loopne
push
add
lahf
hlt
mov
cmp
adc
push
fs
stos
inc
test
sbb
xchg
mov
mov
mov
adc
pop
dec
add
mov
mov
mov
xchg
inc
lahf
sahf
xor
push
push
in
sub
or
gs
fcomp
pushf
inc
mov
jp
sbb
mov
in
testb
xchg
sub
in
and
xor
movsb
and
setle
jp
cmpsb
imul
out
and
fdivp
pop
xor
int
out
cmc
inc
out
cmp
jmp
jo
adc
mov
jnp
adc
dec
pushf
mov
imul
mov
and
fstpl
cmp
mov
mov
and
inc
imul
jne
cltd
inc
and
std
pusha
lea
xor
xchg
in
sbb
lcall
add
ret
mov
test
cmp
nop
sub
cmp
clc
xor
les
int
jg
cmp
repnz
imul
dec
sbb
inc
xchg
out
into
scas
pop
dec
adc
pop
push
fistl
jge
add
gs
pop
sarb
mov
push
fadds
lret
lods
add
in
add
sbb
stos
xchg
cmp
sbb
das
es
lcall
cmp
adc
pop
xchg
dec
jae
add
fwait
xchg
imul
andb
mov
cmp
push
jne
sbb
cli
mov
bound
fisubrl
nop
mov
cmpsb
sbb
hlt
add
fwait
test
dec
jge
fldl
test
jmp
cmpsb
cmp
cmp
jne
sbb
lcall
and
xor
arpl
test
test
adc
imul
jge
xchg
pushf
cmp
sti
in
shll
dec
mov
mov
jns
and
dec
mov
xchg
nop
sbb
das
lahf
arpl
push
sahf
pop
aas
fisttps
adc
fsubl
stos
cmp
push
cmp
fcmovbe
xor
lods
out
cmp
or
rcll
cmpsl
iret
cli
faddl
and
and
mov
ds
dec
leave
out
jb
shll
fsubr
add
pop
adc
mov
inc
sub
ja
jmp
mov
fsubrs
scas
pusha
dec
mov
or
push
mov
orl
outsb
daa
add
aas
sahf
into
lea
es
sbb
dec
push
push
push
and
in
test
fnsave
cmp
dec
scas
mov
pop
std
mov
pop
mov
aas
xchg
jno
cli
arpl
ret
mov
aas
aas
lock
aaa
lods
int3
mov
add
jge
and
shlb
outsb
inc
dec
dec
cmp
xchg
out
sbb
and
frstor
enter
call
add
inc
fldenv
es
add
repnz
test
sub
scas
mov
jmp
jnp
xor
jecxz
hlt
pop
bnd
xchg
mov
test
aas
outsb
xchg
cltd
test
mov
cltd
sahf
xchg
xchg
int
push
pop
pushl
shl
mov
pusha
and
pop
or
push
test
mov
mov
pop
push
popf
aas
adc
dec
xchg
jge
jne
stos
pop
dec
jle
dec
popf
in
test
or
addb
push
arpl
push
jno
addb
push
mov
mov
adc
add
cmc
out
pop
and
dec
testb
mov
ret
jno
pusha
jmp
xchg
shrb
ja
jl
popa
mov
hlt
push
mov
mov
idivl
aaa
stc
adc
addl
stos
inc
xchg
mov
mov
pop
cltd
inc
inc
pusha
inc
xlat
mov
dec
test
inc
int3
repnz
xchg
das
sub
notrack
and
inc
in
add
xchg
ret
push
inc
mov
push
lds
mov
jge
adcb
lret
inc
cmp
icebp
mov
ds
jo
loopne
fisttpll
leave
adc
loopne
cmp
xor
fs
or
inc
push
jns
into
pop
roll
inc
decl
fcompp
mov
jbe
jns
fisubl
lods
out
and
cmp
fldt
sub
sahf
popa
add
clc
xchg
mov
fistpll
cmc
out
inc
and
mov
mov
adc
mov
ljmp
fbstp
push
scas
xchg
cmp
addr16
sbb
mov
stos
es
mov
fsubr
mov
cltd
mov
jmp
push
jg
sbb
push
mov
aas
jae
out
aas
dec
dec
sbbb
sbb
dec
jecxz
and
addb
sub
jno
pop
push
je
dec
sbb
sahf
and
test
add
mov
pushf
mov
sbb
or
lret
jp
cmp
movsb
pop
and
movsl
sub
jb
mov
or
subl
gs
test
movb
inc
cmovns
icebp
andl
or
pop
xchg
scas
xchg
test
jne
sbb
mov
xchg
push
xchg
jne
dec
add
int3
push
sbb
and
imul
in
mov
nop
shl
mov
mov
sub
xchg
push
push
pop
loope
insl
cmp
mov
push
test
mov
xchg
dec
cltd
push
dec
and
pop
ja
ret
xor
incb
jge
ljmp
pop
mov
xchg
aas
mov
mov
mov
aas
cmp
inc
xchg
cs
and
mov
pop
push
dec
cmc
cmpl
sub
mov
xchg
hlt
popa
cwtl
push
out
mov
sbb
popf
inc
test
stos
push
out
outsb
hlt
inc
or
or
adc
pop
jns
jge
loop
sub
mov
fiadds
inc
in
dec
test
pushf
fcoml
jns
cld
and
ja
inc
inc
cli
cmp
xlat
in
nop
rcrl
ljmp
xor
inc
pop
scas
cltd
lods
out
mov
in
movsb
fdivs
pusha
movsb
mov
add
cmpsb
das
int3
pop
sub
stc
aam
add
je
outsl
or
inc
dec
cmp
lret
push
xchg
dec
mov
mov
mov
cmp
cmp
ss
inc
push
inc
inc
pusha
daa
pop
pop
iret
mov
lcall
inc
or
mov
add
xchg
outsb
mov
mov
cld
and
dec
fidivl
insb
in
inc
jns
push
clc
cmpsl
cmp
mov
and
mov
lret
aas
lods
lret
adc
loope
out
pop
movl
xor
pop
repz
sub
loop
pop
fidivrs
mov
xlat
push
pop
out
fisubrl
cmpsb
popa
pusha
icebp
or
and
pop
xchg
push
push
sti
pushf
stos
mov
jnp
dec
push
adc
jl
out
mov
adc
jb
mov
sti
iret
lds
les
pop
mov
icebp
mov
sbb
roll
shll
dec
imul
andb
jmp
cmpsb
xchg
add
das
ja
out
adc
mov
sub
ficoms
mov
data16
lods
dec
mov
out
outsl
ret
xchg
fdivp
mov
bound
fnstcw
add
jo
push
stos
push
inc
and
sar
ljmp
int
js
pop
orb
dec
pop
mov
dec
push
pusha
out
lods
sub
mov
jmp
loopne
dec
add
cwtl
movsl
aad
and
push
inc
push
dec
test
mov
jl
nop
and
fnstcw
push
xchg
mov
xchg
jmp
sub
jbe
add
ficoms
cs
popa
nop
xchg
push
mov
lret
sub
nop
cmpsl
mov
push
std
lret
xchg
xor
mov
dec
cmp
and
push
fs
inc
mov
shll
xlat
in
popa
mov
data16
popf
inc
xor
inc
mov
nop
push
dec
push
xchg
aam
pop
mov
cwtl
das
xchg
cli
out
js
in
pop
lret
ret
sarb
mov
jecxz
xor
nop
sldt
jbe
xor
roll
push
stos
and
inc
xor
aam
adc
jb
push
jmp
cwtl
sbb
mov
xor
mov
pop
or
jg
popf
clc
xlat
js
into
ljmp
mov
cmp
fsts
jmp
pusha
test
adc
add
shlb
ret
adc
mov
cmpsb
imul
add
jl
lea
sub
mov
ret
adc
sub
addr16
adc
les
or
xor
shufps
pop
shlb
sub
mov
mov
lea
ss
sub
and
lret
cld
push
adc
aas
aas
pop
shll
pop
fxch
dec
sbb
rolb
xchg
pop
idivl
cmpl
ljmp
or
pop
jl
and
shl
je
xor
jmp
pusha
and
xchg
dec
dec
hlt
push
mov
inc
or
movsb
nop
ret
xchg
out
xchg
pop
cmpsl
mov
mov
test
mov
adcb
fiadds
pop
stos
stos
fsubl
lods
daa
xchg
xchg
push
cmpsl
xchg
ret
loopne
jle
in
cmpsl
sub
shll
inc
lcall
out
shr
cmc
mov
loopne
xchg
mov
cmp
xchg
int
xchg
es
mov
lods
fnstcw
jae
aad
loope
jg
je
xchg
fdivrs
ror
push
cwtl
jne
mov
fsubr
xchg
mov
inc
inc
pop
and
ds
int
imul
out
addr16
mov
mov
add
cmc
jns
push
or
rdtsc
xchg
sbb
sub
lret
pop
xor
jae
push
fmul
sub
mov
mov
mov
imul
push
xchg
ja
adc
pop
jg
outsl
xchg
cmp
mov
daa
pop
add
rclb
adc
arpl
stos
sub
js
adc
mov
cwtl
pop
xor
push
fimuls
and
pop
lret
inc
pushf
mov
mov
pushf
out
jne
rclb
mov
jg
or
push
mov
aas
into
mov
in
inc
scas
and
sar
push
pop
mov
adc
pop
xlat
ret
inc
add
xchg
mov
add
ret
outsl
imul
jo
in
imul
jp
add
push
cmpsl
or
jns
adc
icebp
xchg
lret
mov
xor
jbe
lcall
adc
inc
cwtl
decb
jl
stc
jmp
mov
std
adc
push
sub
sbb
aaa
inc
dec
popf
ja
addr16
sbb
and
int
movsb
pop
cld
or
test
into
fdivrl
pusha
xorps
sbb
iret
mov
cmp
clc
mov
lret
mov
pop
sbb
cmc
jle
push
pop
cmp
mov
aas
jmp
in
mov
xor
mov
sahf
sbb
add
add
js
jbe
cmpsl
dec
insb
cld
sbb
ret
jmp
cwtl
lahf
mov
xor
xchg
out
xor
adc
dec
out
dec
mov
inc
rcrl
lret
pop
or
dec
pop
pop
cmp
ds
jmp
pop
add
loop
jb
and
in
gs
or
mov
stc
dec
jmp
addr16
int3
or
sub
stos
mov
dec
mov
mov
test
jnp
cmpsb
push
outsb
inc
sbb
cwtl
repnz
or
xor
xor
outsl
sbb
or
in
xor
xor
push
pushf
inc
push
push
xchg
loope
sahf
cmp
fisubrl
adc
iret
test
sbb
cmp
mov
test
jg
push
jb
add
dec
in
push
inc
cmp
adc
dec
imul
cmpl
out
lods
out
insl
in
sbb
and
push
push
xchg
sbb
std
mov
lods
fcoms
xchg
rorl
repnz
xchg
jmp
mov
sub
lret
pop
mov
mov
inc
out
mov
out
inc
and
loopne
cwtl
sub
lahf
sub
sahf
icebp
aas
xchg
fwait
int3
shll
jg
or
repz
outsl
pop
movsl
jb
xor
and
mov
pop
cld
shll
sbb
lds
dec
sub
lahf
cmc
out
popl
mov
js
mov
mov
xchg
inc
aad
into
rorl
es
mov
shrb
orl
jae
lods
and
cmp
in
cwtl
jecxz
test
mov
cli
enter
add
dec
outsb
xorb
popf
outsl
cmpl
dec
shrl
clc
adc
out
imul
sub
jmp
cmpsl
pop
or
ljmp
fistpl
xor
jmp
stc
mov
xchg
sbb
dec
sahf
ss
xchg
into
test
add
fwait
inc
xor
and
testl
jp
sub
ret
and
push
mov
test
inc
mov
fs
inc
and
sbb
inc
sbb
dec
nop
les
mov
cmpsb
out
xor
insl
add
fs
hlt
or
sub
cmp
xor
xor
out
pop
mov
inc
jp
pop
mov
dec
mov
test
test
cmp
stos
jge
sbb
test
dec
push
movq
ret
cli
bound
fsts
xchg
pop
ds
repnz
add
lahf
mov
aad
int
call
lcall
mov
inc
adc
jno
lret
cmp
inc
xchg
ror
js
mov
push
es
lahf
inc
arpl
jle
mov
out
or
jle
gs
adc
mov
ret
out
stc
mov
xchg
mov
cmp
int3
xchg
pushf
cmp
mov
sub
adc
in
mov
push
ss
mov
divl
pop
push
xor
dec
add
jnp
xor
adc
push
mov
imul
fiaddl
pop
test
inc
pop
cwtl
pop
and
mov
xchg
mov
xchg
xchg
test
sbb
adc
xor
jge
lea
fidivrs
scas
movsb
adc
xor
pop
das
xor
xchg
cs
dec
sub
jg
mov
aad
idiv
push
push
les
mov
mov
adc
mov
dec
ficoml
fidivl
shlb
arpl
sub
mov
lea
mov
mov
jb
jns
xchg
clc
test
int
add
and
xor
in
inc
sbb
add
and
imul
push
mov
push
and
das
sbb
adc
fidivrs
gs
ja
out
xchg
inc
fistps
in
cmpsb
push
inc
call
mov
xchg
inc
ja
pop
mov
negb
out
mov
decl
lcall
sub
sbb
push
inc
inc
not
fcoms
xor
or
sbb
cmc
push
and
lahf
loop
rcll
jecxz
repnz
rorl
cmp
mov
inc
call
scas
adc
push
mov
andb
dec
push
shll
popa
andl
or
mov
adc
cmp
ds
call
iret
out
mov
sub
gs
cmp
daa
bnd
sbb
xor
movnti
sbb
lea
shlb
cmp
cmpsb
jbe
fists
mov
outsb
shll
movsl
mov
lahf
loopne
sub
stc
xor
call
mov
adc
sub
test
jbe
mov
pop
test
xchg
push
mov
sub
mov
xor
pop
mov
push
enter
es
push
in
jge
push
sbb
xchg
mov
or
test
push
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
cld
ret
push
jns
add
jp
movaps
je
or
dec
xor
and
gs
subb
pop
cmpsb
test
or
and
push
je
adc
loope
scas
into
pop
jbe
cmpsl
mov
jecxz
bound
or
or
jle
cwtl
pop
inc
jp
push
jbe
rcrl
mov
lea
xor
in
cmc
int3
push
jmp
xchg
lods
ret
faddl
and
pop
ds
xchg
lock
fs
inc
pop
sub
jo
xor
aas
xchg
test
fldenv
dec
add
adc
roll
xchg
push
and
mov
mov
or
push
ret
xchg
or
stc
push
xor
imul
lock
ds
iret
pop
xchg
shrb
fstpl
jb
stos
mov
ds
lret
sub
sbb
adc
dec
subb
jge
jb
dec
xchg
mov
les
loopne
jmp
popa
les
mov
lds
pop
pop
xchg
in
stos
dec
lea
and
iret
imul
lods
aad
push
mov
lods
fwait
test
movb
loopne
inc
sarl
and
addr16
sub
ror
inc
and
loop
jg
lock
or
imul
mov
stos
add
and
jp
pop
add
cmpsb
fistps
dec
aam
pop
push
lods
lahf
inc
roll
push
popa
fs
pop
insb
and
mov
jnp
cmp
shl
adc
fcoms
add
xchg
test
sbb
or
sti
test
mov
mov
cwtl
add
test
sbb
or
fistpl
xor
loop
add
aaa
js
mov
daa
sub
hlt
cmp
add
stos
cld
in
dec
test
dec
lret
push
mov
stc
out
out
movsb
inc
jl
jno
sub
fdivs
push
add
clc
add
jnp
addr16
push
dec
sub
dec
add
jl
addr16
push
lock
add
data16
les
sarb
mov
push
sub
aaa
dec
sub
cld
cmpsb
mov
nop
stc
lahf
add
fbld
push
lds
psubq
lcall
aas
mov
xchg
in
mov
adc
inc
fsubrs
cli
push
std
iret
sbb
cmp
mov
mov
fsubs
cmp
arpl
dec
push
mov
lret
arpl
addr16
rcr
xor
mov
jg
insb
pop
andb
popa
ds
jecxz
lods
mov
inc
adc
lret
sbb
and
mov
cli
jbe
mov
mov
mov
pop
adc
rcr
jne
mov
orb
xor
not
loop
sub
scas
inc
clc
outsb
pop
rcll
jo
inc
arpl
xor
and
into
push
mov
cmp
out
and
pusha
ljmp
xchg
loopne
jne
jmp
sbb
dec
insl
pop
jge
enter
pop
insb
shlb
adc
xchg
mov
mov
movsl
stos
jae
stc
ss
fcmovnbe
xchg
loope
sub
cmp
popl
pop
xor
or
pop
and
nop
xchg
and
fstps
push
push
cmpsb
pop
jb
dec
in
cmp
inc
inc
sahf
pop
and
lods
inc
sub
int3
jbe
inc
hlt
jno
push
das
hlt
cltd
in
pusha
scas
lcall
imul
outsb
imull
sbb
mulb
or
sub
ss
sbb
loopne
mov
lods
imul
cmp
les
or
rclb
in
test
xchg
cmp
and
divb
cmc
arpl
es
fsub
clc
test
adc
lds
out
xor
push
cmp
cmp
xchg
test
cmp
subl
cmc
or
in
fs
push
pop
xor
repnz
pushf
mov
ret
hlt
xchg
or
jbe
fcmovnb
xchg
mov
cmpsb
xchg
mov
push
out
out
ficoms
xchg
daa
add
lret
pop
dec
inc
sub
leave
jb
in
loop
loope
clc
sbb
sub
xchg
jecxz
int3
pop
test
push
jl
or
pushf
mov
ja
sbb
insl
mov
cmp
fsubrl
or
xchg
jle
lahf
rolb
sub
shlb
inc
cmpsl
xor
push
test
pop
sub
sbb
daa
das
inc
and
arpl
test
mov
and
scas
test
lret
cmp
dec
test
and
jnp
and
adc
pop
xchg
cltd
fwait
and
test
mov
inc
insb
lods
cmp
sbb
insb
dec
sub
cmp
les
outsb
xchg
jge
pop
jbe
add
mov
clc
lock
test
sub
icebp
fiaddl
jne
fisubs
loopne
mov
adcl
insl
cs
xchg
or
cs
xor
ret
icebp
xor
notb
jp
outsb
cmp
cld
jns
dec
push
dec
adc
lods
cli
daa
push
sbb
or
adc
add
jl
fdivrs
lcall
popf
cmpb
mov
sahf
jmp
adc
std
cmpsl
out
dec
in
hlt
push
mov
insb
sub
stos
sbb
xchg
adc
adc
or
dec
xchg
mov
push
jne,pt
iret
mov
arpl
pop
cld
aaa
aad
xchg
outsb
pop
and
cmp
loopne
mov
mov
xlat
dec
jge
inc
ret
in
fwait
add
jae
mov
ljmp
test
shlb
mov
pop
out
ja
mov
je
pop
out
pop
test
jo
cmp
popf
inc
cmp
push
faddp
sub
jnp
xchg
adc
sahf
bound
fnstcw
and
push
xor
fsubrs
mov
aas
mov
punpcklbw
lret
scas
in
stos
call
pop
enter
pop
mov
mov
push
sub
fmuls
and
sbb
mov
sub
adc
cmp
fucomip
test
js
adc
xchg
jno
bound
and
movsb
inc
jmp
imul
cltd
add
sbbl
repz
dec
or
push
mov
inc
ret
aas
xchg
lods
arpl
loopne
in
xchg
movsb
add
push
push
test
int
lock
insl
adc
out
push
stos
dec
sbbb
dec
mov
sub
mov
outsb
lods
ds
rcr
pop
cmc
decl
pop
add
int
mov
lods
loop
sub
jae
jge
test
mov
cmp
ret
push
into
aas
jnp
push
pop
shrl
lock
iret
in
fisubs
add
fs
jbe
push
fisttps
test
loope
cmp
inc
imul
test
xor
test
shll
jne
push
andb
dec
roll
or
repnz
xchg
push
adc
cmpsl
nop
leave
jae
lret
mov
ret
out
push
pop
pop
sub
mov
aaa
pop
pop
jle
int3
xor
sbb
cmpsb
mov
and
mov
add
cli
fcmove
push
inc
inc
pop
jle
and
aam
adc
mov
mov
xor
pop
xchg
outsl
jge
dec
aas
adc
loope
or
mov
mov
insl
arpl
repnz
sahf
ja
mov
sbb
cmp
sahf
in
orb
add
in
cmp
inc
pop
push
jge
or
call
jb
test
bound
sub
push
jle
jns
mov
push
pusha
out
and
lock
fisubl
fucomi
lcall
dec
std
jmp
lret
std
inc
ja
je
mov
les
push
pop
cwtl
xchg
outsl
pop
fs
fnsave
add
stc
sub
leave
dec
pop
into
inc
cmpl
rol
jbe
or
repnz
cwtl
movsb
jne
sar
adcb
sbb
repz
cli
icebp
mov
or
cwtl
dec
dec
out
add
test
out
inc
mov
inc
scas
mov
aas
clc
nop
mov
iret
mov
stos
cmp
dec
jnp
mov
xchg
add
adc
push
add
adc
out
enter
inc
sar
sbb
or
lods
aad
jo
jle
sbbl
out
xchg
push
add
jnp
or
xor
xchg
cli
push
data16
fcomps
inc
outsb
stos
cmp
xor
mov
jmp
icebp
sub
pop
or
pop
pop
inc
mov
aas
xor
adc
jns
gs
xchg
jns
sbb
jmp
in
ja
jp
in
sar
inc
aas
shll
aaa
movsl
add
mov
andb
and
das
mov
fnstsw
int3
mov
insl
jae
mov
pop
cli
outsb
xchg
lret
popa
inc
mov
js
stc
mov
shrb
add
pushf
mov
jl
cmpsl
aam
lret
push
sti
stos
xchg
jmp
out
pop
add
mov
movsl
adc
gs
ds
xor
ja
into
inc
in
adc
in
mov
cmp
xchg
call
sub
pop
jl
sub
xlat
push
mov
pusha
pushf
shll
and
rcl
in
dec
fdivrl
outsb
imul
outsl
sub
daa
std
sbb
inc
and
lock
mov
shlb
leave
push
enter
fwait
dec
pop
outsb
js
das
jl
adc
cmp
iret
ret
clc
and
sub
mov
mov
mov
sub
test
lods
loope
mov
jne
dec
test
push
daa
insl
incb
or
sub
jmp
jge
dec
inc
sbb
mulb
movsb
fucompp
and
stos
icebp
sahf
rcr
mov
shl
in
and
adc
mov
out
out
pop
xchg
or
mov
cmpsb
cmp
lcall
adc
pop
mov
dec
push
mov
pop
aaa
in
jge
mov
repz
clc
ror
mov
or
icebp
stos
out
sbb
sarb
mov
clc
shrb
and
sbb
sbb
outsl
adc
pop
xchg
stos
dec
cmp
adc
cmpsl
aas
push
push
cld
push
aam
dec
add
scas
add
cmovb
sbb
cli
fldl
mov
xor
rorl
or
je
iret
rorb
hlt
int
pusha
jno
sbb
lret
repz
add
mov
fildl
call
inc
inc
inc
repz
ret
addr16
inc
hlt
mov
scas
dec
dec
mov
cmpsl
adc
mov
lret
or
dec
scas
repz
and
mov
movsl
imul
movsb
popf
icebp
push
movsb
or
jg
push
fwait
js
xor
es
fs
cli
test
sub
dec
pop
and
lods
aaa
jbe
out
fnsave
or
sti
fsubs
loopne
jmp
and
mov
and
pop
sub
sub
push
inc
lock
addr16
inc
fdivp
jp
rcr
adcl
sbb
jae
pushw
icebp
ljmp
adc
arpl
jmp
insb
jns
mov
stc
imul
inc
mov
push
gs
mov
jl
rcll
pop
bound
adcb
test
pushf
cmp
in
xorb
and
out
in
xchg
jge
jl
insl
outsl
sub
push
lahf
data16
sub
loop
mov
push
xor
adc
sub
push
dec
dec
xor
push
xlat
jmp
or
and
jns
cli
jnp
lea
and
jno
dec
ficomps
popa
push
stos
pop
fsubp
dec
std
push
and
push
sahf
aad
mov
cs
xor
jae
push
add
push
js
push
mov
dec
clc
out
jmp
xlat
popa
outsl
shr
push
je
inc
inc
inc
xlat
pop
sbb
jae
sbb
xor
insl
lahf
xchg
les
adc
testb
addr16
fucomip
mov
hlt
cmc
pop
test
add
dec
popa
mov
leave
cmp
add
pop
dec
negl
sti
fsubs
in
lret
stos
pop
mov
outsl
testl
aad
icebp
mov
sahf
mov
cmp
jl
cmp
push
xor
scas
mov
push
out
insb
or
xor
lea
stc
adc
xchg
inc
fwait
jnp
popa
leave
enter
cmp
jg
jb
mov
fldt
not
xor
ja
in
scas
xchg
add
sahf
jle
mov
adc
ret
and
mov
pusha
arpl
ret
or
aaa
lock
in
mov
arpl
hlt
jnp
aam
xorb
cmp
mov
cwtl
push
daa
mov
pop
movsl
push
cmp
lods
mov
xor
test
cmp
pop
fucomp
mov
jne
jbe
lods
or
jge
xchg
sub
and
cmp
cmp
xorl
mov
aaa
icebp
or
leave
mov
pop
test
mov
fdivrl
stc
int
push
in
mov
xorb
sbb
mov
int
sbb
loop
add
jne
stos
inc
data16
lods
clc
jg
pusha
push
ror
mov
or
jno
fs
xor
or
int3
jmp
mov
dec
jbe
ret
out
adcb
fwait
sbb
mov
cmp
push
imul
sbb
sub
cmpsb
inc
les
inc
push
sbb
cmpsb
scas
mov
in
and
sbb
xchg
flds
cltd
push
jns
mov
call
inc
roll
stos
add
cmp
xchg
and
xor
in
ss
ret
inc
ret
mov
jae
or
or
adc
test
pop
mov
sbb
cwtl
jmp
mov
ljmp
jmp
inc
mov
pop
outsb
jecxz
xorl
and
add
add
xlat
out
or
cmpsb
rcl
push
cmc
aam
test
daa
and
push
mov
mov
gs
xchg
lea
fwait
xchg
jno
in
mov
and
imul
inc
bound
imul
mov
xchg
fwait
push
cs
dec
movb
es
lds
adc
push
sub
lcall
icebp
sub
cmp
mov
neg
push
pop
das
sbb
mov
pop
jle
scas
scas
xor
pop
cli
cmc
pushf
mov
es
in
xor
mov
mov
sbb
and
ljmp
cmpsl
cli
mov
mov
fmull
cmp
scas
xchg
mov
cld
sub
lret
cmp
inc
push
lods
aaa
mov
sahf
test
push
or
push
xor
pusha
stc
stos
cmp
orl
adc
mov
jne
jb
adc
repnz
xlat
sub
xchg
repz
pusha
sbb
xchg
lret
lret
add
mov
sahf
loop
xchg
or
lret
add
test
jp
push
fisttpl
push
je
add
xor
add
mov
jbe
mov
cmpsl
arpl
dec
xlat
inc
mov
pop
pop
mov
fs
and
xorb
mov
xor
push
lods
xor
cmp
aad
rorb
ret
xor
ret
pop
xlat
xor
xchg
and
mov
int3
push
add
cmp
mov
push
movsl
call
stc
xor
or
cmpl
leave
xchg
xor
mov
test
sahf
fimuls
add
dec
loopne
cli
lods
inc
jge
aaa
lret
ret
aad
pop
repz
mov
xchg
xor
leave
fistps
std
xchg
cmp
pop
aaa
jl
sarb
loope
push
popa
pop
out
imul
pop
in
add
mov
loope
inc
repnz
push
inc
into
push
add
push
or
mov
fdiv
xchg
pop
movsl
shll
jne
iret
add
xor
mov
and
notl
and
sysret
sub
aas
or
into
xor
cli
outsb
fcoml
sub
repz
jo
pop
cmp
rcr
loopne
adc
pop
pop
push
xchg
jo
nop
jbe
pop
popa
push
insb
lret
repz
aad
mov
and
out
and
jnp
or
int3
mov
mov
xor
loop
out
cmpsb
out
push
stos
push
xor
bound
dec
mov
add
rolb
faddp
add
mov
sub
lock
les
mov
lcall
pop
mov
roll
xchg
push
in
pop
mov
gs
enter
hlt
inc
jmp
mov
mov
rcll
jecxz
stos
push
push
dec
ret
mov
jl
icebp
lahf
cmpsb
lahf
gs
dec
mov
loopne
aas
mov
cmp
cmp
ds
lock
fcmovb
and
jno
ss
cmc
mov
mov
jecxz
sahf
pop
pop
andb
and
adc
cmp
fdivp
adc
movsl
fidivrl
std
lds
xor
jne
roll
jg
js
xchg
lahf
or
hlt
mov
sbb
cmc
sbb
mov
dec
pop
xchg
cltd
push
inc
inc
into
xchg
mov
jecxz
or
push
nop
sbb
mov
and
inc
cmp
add
mov
xchg
stos
mov
pusha
inc
push
xchg
mov
sub
lods
imul
movsl
pop
sbb
cmpsb
xchg
insb
in
fidivrs
xchg
test
xchg
cmp
mov
inc
fwait
or
mov
push
out
stos
in
xchg
adc
push
pop
les
jle
sbb
mov
dec
test
xchg
bound
insl
inc
jae
shrl
sub
mov
lret
pop
xchg
pop
jbe
cmp
jne
cltd
mov
push
sbb
rorb
ret
nop
jb
or
sub
xor
stos
cmp
test
ss
setp
out
add
xor
arpl
sub
outsb
les
inc
mov
and
jmp
mov
mov
ja
jg
stos
nop
pop
add
fs
dec
xchg
icebp
sahf
fwait
mov
leave
jecxz
test
lods
not
inc
sarl
cmp
and
xor
mov
push
int
pusha
and
or
nop
push
pop
test
inc
dec
pop
mov
jl
into
jmp
cmc
xorb
outsb
pop
jno
lds
sahf
jmp
cmp
insl
sahf
inc
jge
into
scas
xchg
in
or
and
dec
ret
cs
sub
lahf
outsl
jg
and
imul
cmp
push
sbb
outsl
shlb
push
add
mov
and
daa
bound
jb
mov
lret
popf
fimuls
stos
jnp
xchg
mov
xlat
insl
mov
mov
popl
mov
ja
fbld
dec
xchg
pusha
leave
call
push
mov
aaa
add
jo
push
mov
or
sti
fists
popf
xchg
das
notb
aad
push
sbb
fld
sub
loop
clc
movsl
mov
cwtl
fwait
shrd
arpl
inc
mov
ret
mov
repz
out
icebp
cmp
pusha
adc
cmp
ror
push
outsb
inc
stos
push
data16
adc
fsts
fs
stos
inc
cmc
loopne
xchg
mov
cmp
inc
push
lods
insl
sub
pop
mov
push
dec
dec
jnp
push
insb
icebp
call
jb
mov
scas
out
and
aas
cmc
int
in
cmpsb
jbe
jge
mov
jge
and
push
pop
fiadds
fnsave
mov
nop
add
out
aaa
mov
sbb
adcb
jle
push
mov
int3
sbb
mov
xchg
inc
dec
int
jg
fisubrs
nop
cmc
push
mov
add
cmpsl
pop
inc
push
xchg
inc
js
leave
shrb
mov
pop
sbb
push
cmp
jge
xchg
xchg
xor
int
enter
std
fwait
lods
sub
aas
xor
mov
adc
jns
mov
push
xor
stos
popf
jecxz
sbb
rdtsc
cmpsb
xchg
or
in
and
lea
jbe
stos
xor
stc
loop
push
dec
hlt
inc
pop
rcrb
dec
adc
cld
shl
lds
gs
rolb
cmp
int3
xchg
adc
mov
sbb
pop
adc
sti
adc
sub
imul
fiaddl
cmpl
cmp
xchg
inc
sti
cmc
sbb
in
adc
shl
pushf
xor
mov
outsl
std
cmpsb
push
stc
dec
xor
cmp
adc
and
test
pop
sti
and
jmp
push
mov
mov
ror
xor
mov
jns
dec
in
jmp
test
inc
or
add
mov
or
mulb
inc
mov
ret
arpl
imul
lret
rcl
add
push
add
insl
dec
mov
jp
arpl
les
jbe
nop
and
or
stos
aaa
ret
pop
rcl
fbld
inc
adc
mov
cmpsb
cld
aad
outsb
mov
out
xor
xor
mov
jo
push
pop
movsl
and
outsb
jecxz
sbb
js
fs
sub
pop
cltd
pop
add
fldl
lds
nop
andb
cmp
leave
out
sbb
ljmp
pushf
push
aam
div
pop
int
ret
cmp
push
or
xlat
inc
push
jmp
xor
mov
inc
bound
cmp
xlat
shll
jnp
fcmovb
movsb
jg
adcb
add
xchg
jb
mov
stos
mov
inc
cltd
scas
sar
idivl
and
loope
jle
scas
push
or
push
arpl
dec
mov
fsts
je
mov
ja
stc
jno
and
outsl
js
enter
xchg
pushf
fsts
dec
testb
js
loopne
loop
mov
stc
pop
cmpsb
jb
mov
aam
repz
inc
dec
lcall
pop
adc
lret
lods
arpl
out
cmp
sub
xor
cmc
bound
roll
lds
sub
sub
jl
loop
adc
adc
imul
aad
mov
dec
cmp
in
push
das
xor
shll
das
popa
push
sbb
sbb
subl
dec
add
lahf
in
pushf
sub
imull
add
mov
sub
out
data16
push
ja
xor
rclb
mov
mov
push
mov
jne
push
icebp
popa
cltd
test
imull
out
jb
enter
into
sbb
lods
sti
aaa
adc
xchg
xchg
adc
inc
movsl
xor
sub
mov
imul
mov
jns
mov
xchg
pop
inc
mov
out
sbb
lds
and
lock
call
test
jl
hlt
aaa
xor
xchg
push
mov
or
xor
pop
and
sahf
sub
adc
ljmp
shl
pop
or
jns
add
idivl
insl
in
mov
pop
xor
push
out
fsubr
jmp
jb,pt
sbbl
sbb
data16
inc
fldt
insl
es
or
push
dec
fcompl
sub
aad
pop
jmp
ja
les
jecxz
push
lahf
add
mov
push
orl
lcall
hlt
pushf
out
cltd
mov
jns
pop
mov
mov
sbb
cli
pop
inc
fadd
xor
pop
int3
jecxz
adc
mov
or
push
inc
fimull
inc
iret
adc
push
imul
mov
fildl
sbb
or
pusha
xor
dec
lea
dec
mov
sarl
mov
lahf
mov
push
mov
shlb
xor
cmp
popa
or
stos
adc
mov
mov
add
je
test
inc
lods
adc
pop
lcall
mov
add
mov
push
pop
outsb
outsb
in
lcall
pop
pop
pop
test
push
or
mov
mov
xchg
lock
loopne
shll
outsb
ss
lahf
xchg
setns
adc
mov
push
or
mov
lds
and
xor
hlt
pushf
mov
filds
leave
test
arpl
cmpsl
add
inc
std
roll
dec
and
jbe
sbb
shrb
shr
push
jno
adc
cltd
dec
negb
shll
jno
js
jg
mov
stos
and
mov
repnz
and
repz
out
adc
add
iret
jns
cmp
jmp
fwait
jecxz
inc
xchg
add
sbb
in
int3
xchg
xor
fcomip
mov
push
lods
mov
mov
stc
insb
scas
cmpl
insl
sbb
xor
rcr
adc
js
daa
add
xchg
repz
inc
cmp
xchg
call
enter
sub
push
nop
and
mov
mov
mov
and
mov
jecxz
sbb
cmp
jge
out
inc
xchg
and
je
sbb
ljmp
adc
xchg
out
jle
mov
bound
jo
test
int
xchg
sbb
mov
xchg
popa
push
or
int3
push
imull
cmp
roll
int
cmc
dec
xor
rorl
xchg
rcr
xor
addr16
and
cmpsl
xchg
sbb
mov
rcr
orl
pop
js
sbb
imulb
xchg
mov
dec
fstpt
jns
cmp
jle
cmpsl
adc
fildll
cli
dec
xchg
fistpll
dec
push
bound
shlb
stos
pushw
push
sarl
inc
cmpsl
dec
notb
add
mov
shll
jbe
mov
lahf
xchg
fs
cmp
sar
ret
sbb
aaa
imul
shlb
lahf
cmc
loopne
cmp
pop
aam
stos
cmp
les
pusha
lahf
jl
mov
lods
dec
stos
iret
cli
and
mov
cmp
xor
xchg
cmpsb
sub
decb
gs
mov
pop
xchg
xor
sbb
mov
sbb
and
aam
scas
outsb
lcall
ja
leave
adcl
xchg
and
and
mov
scas
sub
outsl
loop
adc
fsubs
insb
xchg
cmp
or
push
clc
jmp
xor
arpl
inc
pop
stos
ret
divl
hlt
sub
pop
jne
cwtl
or
aaa
cs
mov
popa
xor
sbb
sub
lods
enter
or
mov
mov
lds
jg
je
sbb
pop
rcl
pusha
mov
mov
es
inc
dec
or
mul
push
or
mov
aad
cmpsb
cs
and
push
stc
adc
repnz
cmp
xchg
push
ljmp
shl
cmp
push
cmp
mov
xchg
orl
xchg
push
orl
jg
fcmovnbe
sti
repz
jecxz
push
inc
aam
or
push
push
sub
and
or
out
iret
mov
movsl
iret
cmc
fistpll
inc
fildll
mov
jl
std
pop
pop
push
in
add
mov
shrb
scas
mov
add
or
jnp
movb
adc
sbb
add
cmp
jecxz
mov
sti
cmp
je
jge
sti
sbb
js
and
adc
add
pop
bound
mov
or
sbb
mov
sti
mov
shll
push
jne
xchg
sbb
loope
enter
aas
lcall
jmp
sub
cmp
jbe
hlt
test
int
adc
add
pop
jo
jl
dec
filds
lods
imul
mov
aad
cli
mov
push
adc
imul
in
data16
cmpsb
test
sti
sbb
sbb
mov
or
enter
adc
xlat
repz
insl
fs
test
push
test
jmp
dec
dec
testb
call
jp
mov
jle
bound
int3
or
jns
les
shll
mov
add
loop
xor
ret
pusha
mov
pop
push
dec
popf
and
cmp
subb
leave
std
push
loopne
jmp
out
cld
je
mov
xchg
and
in
cmp
leave
scas
cmpsl
mov
int3
or
mov
mov
jbe
fidivrs
fisttpll
and
fcomps
in
cmc
mov
sbb
sbb
test
outsb
push
cmp
rorb
aam
movsl
xor
out
sbb
add
das
outsb
out
mov
imul
pushf
jno
mov
ss
repnz
push
lret
and
push
push
add
sahf
icebp
bound
movsl
aam
push
daa
mov
cmc
pop
dec
cmp
adc
pop
xchg
adc
cmp
jne
jp
add
cmp
pop
xchg
xor
push
xor
jmp
mov
inc
popa
mov
dec
inc
pop
lea
out
or
jle
popa
pop
push
sahf
stos
mov
dec
lcall
jae
sbb
or
jle,pn
out
dec
and
leave
adc
cmpsl
cmp
nop
mov
incb
xor
cmpsl
addr16
jbe
jmp
test
dec
or
sbb
outsl
outsb
and
jo
jo
lahf
mov
jnp
dec
xchg
sub
fidivrs
std
xor
xchg
pop
push
nop
pop
or
fwait
orl
std
fwait
subl
dec
sarb
es
mov
inc
xor
dec
adc
mov
pop
es
sti
and
pop
sub
insl
mov
aas
insb
jae
sbb
xchg
popa
push
jne
push
mov
call
repz
cmpsl
mov
mov
cld
nop
cmp
mov
push
xchg
sub
into
push
ja
pop
andb
add
mov
lds
mov
icebp
sbb
movsl
push
dec
les
mov
shrb
push
lods
in
or
lds
jae
push
test
inc
mov
xchg
imul
into
and
fildll
bound
add
lds
adc
scas
aad
mov
clc
loope
not
mov
pop
inc
out
mov
into
add
loope
in
in
aad
jns
jne
mov
insl
orb
xchg
inc
jmp
jge
push
dec
sbb
mov
pop
jb
or
mov
fldenv
inc
adc
pop
lret
inc
pop
leave
arpl
or
insb
jb
add
pop
lahf
add
push
fcoms
pop
into
mov
dec
clc
push
xchg
loop
add
out
in
add
lds
push
sub
add
mov
cmp
push
fidivrl
mov
scas
es
push
add
jae
lahf
push
je
insl
jno
cmp
xchg
pop
sub
sub
out
adc
sbb
push
jno
jge
dec
jb
fsub
outsl
loope
andl
ss
mov
fld
cli
or
mov
push
stos
cmp
jb
and
jl
gs
fstl
data16
loopne
les
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
rcrb
pop
jmp
jns
add
jp
shlb
push
int
xlat
cwtl
xor
in
xchg
outsl
sub
inc
lahf
cmp
mov
jo
sub
enter
sub
sbb
orb
mov
pop
aas
lahf
mov
or
and
popa
icebp
sbb
push
lea
test
cmp
in
and
mov
pop
repnz
inc
cwtl
ja
pop
ss
popa
outsb
jne
sub
jecxz
xlat
push
push
xchg
imul
pop
add
lods
xor
sub
xchg
cld
addr16
sbb
adc
xlat
mov
mov
inc
pop
es
test
sbb
ficoms
sub
or
nop
aas
pop
ljmp
lret
xchg
pusha
out
out
out
add
inc
push
mov
jp
add
inc
lods
push
jno
fdivl
sbb
testl
out
jmp
test
dec
shl
pop
scas
xorb
mov
add
sub
and
rcll
pop
test
adc
push
jmp
adc
lods
mov
inc
sbb
xchg
xor
or
jg
int
mov
push
lcall
pop
notb
in
lea
mov
add
adc
xor
mov
adc
inc
decb
lret
cmp
ret
addr16
jl
or
mov
cmpb
pop
dec
loopne
adc
dec
das
or
jg
outsb
clc
dec
fimull
clc
push
push
mov
and
cwtl
movb
sbbl
sbb
pop
pop
rcl
inc
aam
loope
jno
and
jnp
bound
js
pop
scas
jo
idivb
cmpsb
sbb
xchg
mov
adc
cmpsb
jno
negl
dec
popf
jl
cmp
popf
sbb
dec
xor
mov
ljmp
das
cmp
cmpb
popa
sub
sub
aas
jno
ret
xorl
push
push
xchg
lods
loope
add
or
sub
rcrb
lds
dec
and
adc
sbb
adcb
test
out
mov
push
int
decb
enter
movsl
push
sarb
cltd
sub
inc
mov
pop
out
mov
mov
push
and
test
dec
das
mov
das
lds
add
vsqrtsd
cwtl
inc
jl
adc
rclb
cmpsb
dec
out
jne
cmp
fidivrl
rcll
test
lea
mov
lcall
mov
jle
enter
xchg
xor
xchg
sub
dec
add
cs
in
jne
mov
iret
hlt
iret
mov
jecxz
cmp
xchg
cmpl
rcrl
mov
fcoms
lea
out
mov
shll
push
or
andb
pop
sbb
test
icebp
jl
sbbl
dec
dec
mov
mov
outsl
pop
or
mov
cld
cmp
stos
xchg
aaa
mov
push
nop
pushf
cmc
mov
sub
mov
out
xor
push
daa
mov
pop
add
dec
ds
sahf
popa
sub
fsubl
dec
jo,pt
shlb
sub
fidivl
and
push
xor
add
xchg
mov
cli
inc
xchg
jg
xchg
icebp
lret
and
int
inc
cld
in
aad
shr
lock
xchg
std
cmp
push
mov
sub
or
iret
or
jge
mov
sbb
cli
xor
cmpsb
mov
out
daa
sub
cmp
in
or
fs
jmp
sbb
mov
adc
add
in
or
fcomi
jns
sub
pop
pop
xchg
adc
jge
inc
jmp
repnz
pop
mov
jg
sbb
in
jmp
mov
outsl
adc
ds
xor
pop
in
sub
cmp
aad
imul
push
fyl2xp1
mov
loope
and
adc
loope
cwtl
aad
cmp
int3
rolb
cmp
movsl
fucomip
lea
jge
cmp
jne
sahf
xor
or
sti
fldenv
xchg
cltd
fbstp
aaa
pushf
fidivs
jb
out
lea
xor
inc
sar
add
mov
mov
dec
pop
sti
pushf
sahf
adc
pop
jne
iret
pop
ret
dec
std
icebp
scas
adc
pop
pop
dec
mov
xor
cmp
ja
jmp
sub
stos
lods
std
repnz
xchg
test
arpl
adc
add
outsb
push
sbb
jle
fimull
xor
pop
popf
or
mov
mov
or
and
sbb
int
xor
pop
sahf
xor
push
scas
adc
cmp
fimuls
mov
arpl
cwtl
les
adc
mov
xchg
cmpsl
xchg
lret
scas
in
inc
cmp
mov
sub
loope
lret
insb
dec
repnz
in
dec
sbb
jo
pop
pop
iret
mov
addl
loope
fsubrs
aaa
cmp
or
pop
shrl
mov
pop
mov
rsm
in
inc
xor
sub
xchg
idivb
lret
inc
rol
sub
loope
mov
cmpsb
jle
xor
and
jg
ret
out
icebp
mov
rep
je
pop
out
push
ret
subl
stos
mov
mov
push
jo
mov
and
cwtl
mov
push
loopne
stc
mov
fidivl
add
adc
in
xchg
sbb
nop
xchg
mov
adcb
xor
je
daa
mov
and
and
mov
jbe
movsl
xorb
push
mov
mov
repnz
push
add
cmp
inc
mov
data16
mov
std
cmpsl
pop
lds
pop
and
pop
into
mov
rorl
ret
mov
cmc
cmp
jl
imul
in
and
pop
sub
nop
shll
mov
loopne
xchg
jns
xchg
imul
aas
inc
insb
loopne
rcl
aaa
push
inc
aas
enter
push
push
addr16
lret
push
mov
fnstcw
xchg
pop
jg
adc
cltd
mov
mov
stos
sbb
sub
lods
adc
jbe
pop
std
inc
shl
cmc
loope
lret
out
stos
in
outsl
js
pop
pop
bound
jmp
arpl
nop
testl
mov
nop
pushf
test
cmpb
inc
inc
stos
push
and
inc
mov
fimull
out
dec
lods
divl
fsubrl
push
daa
mov
dec
push
inc
sbb
mov
cltd
dec
xor
je
mov
cmp
xor
out
icebp
mov
lds
mov
add
pop
rclb
pop
sbbb
jg
ss
inc
sub
jns
adc
or
xchg
pushf
daa
inc
mov
dec
adc
insl
lods
mov
pop
xor
mov
mov
sarl
in
cwtl
add
xor
sub
jmp
push
leave
pop
cmp
xchg
pop
mulb
jle
cltd
push
rcr
xor
aaa
sub
lcall
mov
in
ficompl
mov
push
pop
mov
movsb
and
mov
lds
sti
add
cmpsl
or
ljmp
or
cld
aad
or
inc
mov
sbb
xchg
fwait
icebp
idivb
adc
jne
clc
jle
and
popa
out
enter
pop
sti
into
mov
dec
gs
pop
ret
daa
hlt
inc
fcmovnbe
push
mov
xchg
xor
pushf
stos
and
push
dec
push
push
testb
push
jbe
fcoms
ljmp
fisubl
mov
or
sbb
aaa
jnp
mov
mov
inc
ficoms
pop
dec
mov
ljmp
cmp
ss
test
fildll
or
jl
pop
jns
and
fbld
and
push
cmp
pop
ja
fsubr
mov
add
loop
into
mov
sub
out
pushf
subl
and
adc
mov
inc
jno
xor
add
cld
push
mov
pop
xor
cs
dec
jl
divl
fisubl
xlat
cltd
sub
jle
pop
adc
dec
hlt
addl
out
fnstenv
mov
lret
mov
aam
aad
pop
dec
lret
adc
xchg
and
ss
dec
ret
stc
and
adc
jo
imul
xlat
adc
xor
lahf
push
das
movsb
fnstsw
jecxz
mov
adc
mov
mov
dec
jbe
int
jmp
sarb
cs
mov
scas
push
add
cmp
rclb
dec
data16
mov
push
sbb
outsl
jne
inc
push
fstpt
dec
lods
lock
xchg
loopne
cmpsl
push
jns
pop
pop
cmc
pop
sbb
fdivs
ja
xor
addr16
out
rorb
scas
sbb
fsubrl
daa
imul
dec
push
and
in
nop
pop
mov
xchg
out
or
mov
lock
and
mov
js
cmpsl
shr
call
adc
repnz
lahf
cli
and
in
fcoms
add
fucomp
sub
pop
pop
adc
push
aas
push
mov
pop
sub
dec
cmp
adc
xchg
enter
test
adc
cmp
stos
test
sbb
inc
xchg
outsb
ret
push
ficoms
rcrl
inc
jae
mov
popf
adc
jecxz
jle
sbb
pop
loope
subb
mov
es
mov
jb
push
sbb
xchg
test
movsb
fcompl
push
or
cmp
iret
dec
fcmovbe
pusha
movsl
stc
cmp
and
add
or
loop
xlat
mov
jae
pop
fwait
pop
jae
lock
shl
push
mov
inc
stos
mov
outsb
dec
cwtl
dec
and
mov
daa
mov
fsts
lock
jnp
dec
push
sub
mov
xlat
push
in
rolb
loopne
xor
pop
mov
sbb
adc
mov
inc
add
pusha
mov
sti
pop
cmp
shrl
mov
push
mov
test
jno
sub
insb
inc
test
push
rorb
mov
jae
mov
cmpsb
popa
inc
js
mov
sti
and
jns
sahf
jnp
in
mov
mov
sarl
mov
and
mov
sbb
dec
stc
mov
mov
divl
adc
cli
iret
inc
xor
out
push
mov
in
lret
add
jmp
test
jecxz
idivb
mov
add
push
add
dec
gs
pop
add
xor
imul
cmp
aad
mov
insb
lds
sbb
imul
and
push
movsl
ss
cmp
pop
mov
xor
dec
lahf
xor
loope
mov
movsl
imul
cmp
dec
clc
in
and
mov
sub
pop
fdivs
ja
mov
dec
xor
fildll
imul
js
int
push
dec
into
dec
dec
fcmovnu
dec
mov
mov
inc
sub
xorl
test
rol
mov
sahf
mov
mov
sbb
push
jle
cmc
pop
jmp
arpl
mov
pop
xchg
push
notl
stos
negb
clc
inc
aad
call
and
test
mov
pop
test
ja
xor
repz
enter
lock
pop
xchg
jl
cmp
rcl
scas
sub
cmpsl
or
cmp
sbb
add
push
jne
lcall
or
pusha
mov
inc
pop
rcrl
ret
and
sub
popa
inc
outsb
flds
ljmp
loop
push
cwtl
enter
push
enter
add
mov
jb
inc
call
stos
lods
fs
in
mov
out
orl
stc
xlat
nop
pop
cmp
lret
mov
push
dec
repz
lahf
mov
mov
mov
imul
ret
and
lcall
daa
stos
jecxz
or
push
cld
int
xorb
xor
dec
cmc
xor
jne
imul
push
insl
mov
mov
push
lods
or
shrb
pushf
dec
xchg
insl
xchg
jnp
jp
movsb
aas
mov
lret
faddl
fstpt
mov
in
cmp
mov
out
out
fwait
das
mov
sbb
and
insl
notb
mov
mov
mov
xor
jmp
imul
sbb
inc
dec
cli
insb
cmp
push
arpl
pand
push
push
push
aaa
mov
inc
in
in
inc
mov
nop
into
nop
add
aaa
enter
mov
lods
test
test
add
pop
pop
das
inc
xor
addr16
fs
inc
stos
sub
or
add
push
dec
dec
dec
imul
cwtl
sub
jmp
or
xchg
xchg
sarb
xchg
xchg
je
jecxz
adc
sysret
lods
iret
mov
js
adc
jno
clc
and
hlt
xor
pop
adc
clc
add
mov
gs
movsb
mov
stos
cmpsb
dec
sbb
jl
and
outsb
das
pushf
mov
scas
jne
jo
mov
xorl
pop
sub
adc
xlat
pop
in
imulb
lea
mov
adc
out
inc
scas
pop
cli
rcrl
jnp
aaa
mov
cmp
stc
repz
sub
xchg
sub
and
jae
aam
ds
xor
adc
mov
stos
mov
xor
push
push
movsl
pop
pusha
pop
xchg
pop
les
hlt
je
in
in
dec
cs
stc
mov
mov
jp
mov
mov
xchg
cmc
jge
insb
push
cli
stos
test
out
mov
cltd
inc
sub
cmp
bound
dec
cmp
mov
add
loop
cmp
sbb
inc
lods
decl
std
mov
ss
test
ljmp
xor
sarb
mov
add
dec
in
add
lods
xchg
addr16
shlb
xor
jo
push
mov
inc
cmp
or
gs
push
pop
push
jl
int
push
mov
inc
or
std
stc
mov
xor
pop
int
sbbl
mov
xor
push
and
sbb
test
scas
and
test
mov
cmpsb
mov
xchg
punpcklwd
push
jno
lea
xchg
mov
lods
mov
enter
jp
or
popa
orb
nop
push
inc
test
fmull
bound
xor
leave
adc
loop
jno
push
fcomp
call
cs
rcrb
out
lods
cmp
or
adc
mov
push
mov
test
mov
cmp
lret
sbb
icebp
and
cwtl
call
outsl
adcl
or
xor
and
mov
jns
sbb
pop
lcall
scas
inc
cmp
push
and
mov
mov
scas
aaa
aaa
sub
or
xchg
xor
push
mov
sti
inc
icebp
push
pop
shlb
fs
cld
xor
inc
cmp
pushf
test
jne
xchg
jecxz
or
icebp
cltd
jae
aam
rorl
daa
and
xchg
or
je
adc
sub
xor
lahf
lret
fisttpll
and
out
mov
push
cltd
cmp
mov
ffree
mov
loop
xchg
pop
mov
lods
xchg
xchg
loope
ret
cmc
sbb
xchg
fisubrl
pusha
mov
lock
adcb
cs
sbb
mov
sbb
adc
lods
paddq
xor
cmp
jp
test
inc
jmp
dec
inc
dec
aaa
xorb
inc
mov
fsts
push
xor
add
cmp
int3
dec
push
addr16
adc
stos
push
xchg
jne
jp
cmp
push
shll
push
adc
xor
icebp
sti
int3
jo
decb
push
sub
rcrl
mov
fildll
push
mov
cmpsl
stos
push
mov
mov
or
lahf
packssdw
out
loop
das
rcrb
mov
addr16
insb
add
push
shlb
jge
or
rolb
fimuls
or
and
rcll
xor
lods
and
pop
push
in
daa
mov
lods
or
cwtl
clc
mov
icebp
cmp
aas
scas
fs
xchg
cmc
sarl
mov
lret
rcr
pop
in
cmp
adc
xchg
inc
xor
leave
popf
cld
imul
rclb
mov
jp
gs
je
aas
xchg
mov
jle
mov
or
notl
or
mov
rcll
insb
mov
dec
imull
pop
mov
mov
cwtl
loopne
pop
lods
fdivrs
pop
insb
pop
mov
cmp
xchg
in
int3
mov
pop
rolb
out
xchg
ds
insb
xchg
mov
cltd
jl
pop
bnd
push
or
jbe
xchg
out
cmp
adc
fsubs
insl
or
mov
push
addr16
xchg
cmpsl
dec
jne
xchg
inc
cmpsb
repz
dec
scas
inc
enter
outsb
je
mov
iret
cwtl
add
sub
cmp
scas
inc
out
jb
mov
push
lcall
add
addl
jbe
cmc
sti
stc
inc
and
es
lods
jb
jnp
cmp
xor
sbb
mov
pop
cs
shl
fisttpll
add
mov
sbb
pop
add
ror
cmp
pop
ds
xchg
pop
mov
fildll
call
inc
jmp
fwait
pop
das
ds
mov
add
hlt
ficoms
lcall
dec
out
inc
sub
inc
nop
push
aad
mov
ret
popa
inc
adc
cmp
cli
fldl
sbb
sahf
lock
int
dec
sbb
xor
fcmovnbe
lea
test
cmp
inc
inc
cs
lcall
push
cmp
les
xchg
fidivrs
pop
pop
adc
adc
imul
nop
adc
push
sbb
cmc
test
inc
mov
jne
xor
cmp
inc
repz
xchg
mov
cld
jbe
mov
aad
push
sbb
mov
and
mov
xlat
lds
mov
ljmp
or
push
lea
outsb
add
scas
inc
repnz
sbb
or
cmpsl
sbb
cli
sbb
push
xor
sub
outsb
push
jmp
sub
push
stos
in
lods
pop
sti
or
lods
imul
mov
adc
pop
sahf
ss
insb
cmp
dec
shll
dec
pop
adc
dec
ficoml
loopne
dec
mov
mov
pop
pop
pop
insl
stos
inc
out
insl
xlat
lods
mov
adc
stos
ss
mov
pop
rolb
inc
fbld
test
pushf
pop
mov
shrl
call
mov
pop
add
repnz
call
xchg
hlt
adcl
bound
das
pop
mov
mov
mov
andl
orl
jle
subl
pop
and
mov
jo
mov
sbb
adc
cli
mov
inc
mov
movb
imul
dec
or
pop
and
ret
adc
mov
adc
adc
popf
les
dec
pop
test
jecxz
xchg
xor
mov
xchg
loopne
outsl
push
loope
jp
add
mov
aam
repnz
es
dec
fsubl
les
adc
push
dec
ljmp
cmp
adc
jo
pop
mov
pusha
cmp
bound
xchg
push
push
cmp
pop
rcrb
push
je
jge
pop
aad
sbb
and
fstpl
inc
inc
in
and
std
je
scas
add
ss
cltd
push
mov
loopne
outsb
and
mov
loopne
imul
dec
and
fsts
fwait
bts
cmpsb
add
pop
and
in
push
mov
push
lods
es
sub
mov
fs
jbe
pop
push
cld
and
fcmovnbe
cmc
pop
xor
aaa
sub
fwait
jnp
jae
mov
xor
sub
test
mov
pop
pushf
aaa
das
dec
pushf
xchg
sbb
aaa
push
dec
hlt
cmp
dec
adc
adc
xchg
mov
or
dec
cmp
cmpsb
sahf
jge
negb
out
mov
in
jbe
cmp
lea
je
ljmp
inc
jmp
pop
dec
je
cs
pop
xchg
ret
inc
xorb
daa
mov
incl
inc
loope
inc
movsl
or
sbb
dec
sbb
imul
cld
cmpsb
jnp
shl
daa
test
pop
adc
pop
inc
jae
insl
adc
jg
cmpsb
mov
aas
ret
mov
and
scas
jno
jle
mov
test
cld
sbb
pop
stc
test
mov
fwait
sbb
decb
pop
pop
mov
pusha
xor
mov
rcl
xor
cmp
mov
rcll
push
jae
xchg
push
cmp
inc
incl
fldt
mov
popf
sbb
fwait
ror
cmp
inc
aaa
arpl
xor
ds
insl
loop
adc
in
test
lock
add
sbbl
int3
mov
iret
gs
add
push
push
popf
mov
add
repz
pop
out
fs
out
clc
int
jbe
inc
ljmp
sbb
daa
incb
push
sbb
pop
mov
xchg
push
mov
cmp
mov
pop
pushf
decb
aam
bound
add
xchg
daa
es
push
mov
sbb
push
repnz
and
fldl
incl
sub
cmp
aas
dec
lods
int3
push
mov
loopne
fcoms
adc
xor
xlat
mov
pop
lret
xor
push
xacquire
jl
dec
mov
adc
mov
stos
popf
js
sbb
movsb
stos
call
addl
pop
cwtl
ljmp
movsl
sub
dec
enter
gs
ja
ror
pop
lds
outsb
sub
cwtl
pop
add
adc
xchg
jne
jnp
mov
push
in
aad
mov
stos
lret
push
sub
xchg
mov
das
mov
aad
sub
popf
out
lahf
or
jecxz
aaa
dec
xchg
mov
mov
sbb
in
adc
pop
wrmsr
aas
outsb
icebp
mov
je
jno
pop
inc
push
popf
fcomi
inc
pop
cmc
push
mov
add
xor
jb
push
lods
or
inc
enter
clc
jg
ljmp
adc
adc
pop
sbb
ret
int3
std
popf
imul
or
mov
sahf
mov
jp
mov
daa
inc
fcomps
ret
inc
push
fnstenv
jp
sbb
mov
dec
pop
xor
xchg
lods
dec
push
mov
adc
xchg
notl
stos
fdivrl
pusha
and
insl
mov
mov
xchg
or
fbstp
sub
int3
movsb
push
pop
std
std
test
das
or
call
lods
imul
in
push
js
fidivl
stos
xchg
xchg
flds
out
cli
xor
test
mov
les
mov
and
popf
lods
je
sbb
sbb
lea
addr16
jg
hlt
mov
aam
insb
xchg
push
add
fsubrl
rcrl
xchg
adc
outsb
fs
sti
mov
out
shl
cmpsl
mov
inc
mov
inc
sbb
in
mov
lahf
sbb
or
sbb
jl
push
inc
cltd
or
lods
lods
sub
fstl
popl
inc
cmpsb
jl
mov
js
mov
div
insb
push
xchg
push
pop
add
jg
movsb
xchg
sbb
arpl
sub
sub
adc
cmp
add
ret
repz
ljmp
popf
jbe
leave
ss
push
xchg
cmp
cmpsb
mov
ja
arpl
jbe
bound
and
mov
fcoml
clc
enter
shlb
cld
ja
push
push
cmpsl
loop
add
rcll
push
arpl
sbb
stos
pop
jmp
mov
jne
je
rcl
cli
les
xchg
in
jo
jecxz
fsubl
es
sbb
test
mov
pop
mov
jns
popf
popa
pop
gs
enter
cmp
mov
bound
inc
ljmp
mov
jle
mov
idivl
cs
loopne
push
hlt
lds
popa
sub
call
incl
das
inc
sbb
push
mov
jo
pushf
xor
xor
into
and
imul
push
xor
outsb
xor
pop
stos
fstpt
jbe
jg
push
lcall
aad
addr16
aam
add
gs
dec
mov
cmp
xor
fnstcw
jnp
sbb
aas
out
and
pop
jns
nop
xor
pushf
nop
test
aas
pop
data16
aaa
add
scas
jns
icebp
popf
sub
cwtl
adc
fcomps
push
jge
push
sahf
pusha
or
pop
xchg
mov
dec
shll
xchg
ss
lods
cmp
cmp
pop
fdivr
cwtl
sbb
or
xchg
push
xchg
cmp
pop
js
popf
cmp
rorl
adc
lea
add
mov
jb
push
data16
aas
sbb
pop
fimuls
sarl
push
xor
cli
mov
adc
sbb
dec
aas
add
xchg
xor
int3
xor
inc
xchg
out
pop
mov
xchg
pop
mov
pop
adc
adc
push
cmp
xor
sbb
lahf
mov
mov
or
pop
cld
jns
push
xor
mov
xor
fnstsw
and
lahf
cmp
and
dec
lock
adc
into
push
lret
bound
aas
loopne
lret
stos
movsb
add
jle
fs
pop
fwait
in
or
mov
notl
enter
popa
lret
fsubr
pop
sbb
mov
mov
imul
loopne
inc
call
and
add
faddl
and
popa
jo
mov
xchg
loope
inc
cld
add
jns
xchg
inc
out
shlb
lret
imul
aaa
iret
mov
mov
add
pop
or
push
jae
dec
jecxz
add
add
and
pop
xor
gs
push
mov
jmp
fsubrp
rolb
call
xor
lock
pop
shlb
mov
subl
adc
pop
push
lret
jp
cmpb
mov
pop
outsl
xchg
nop
push
mov
xlat
idivl
jae
dec
mov
out
daa
arpl
inc
or
mov
aad
shlb
pop
pop
adc
jecxz
inc
repnz
cmpsl
cmp
testb
enter
imul
stc
push
pop
sub
sbb
or
push
push
and
cwtl
mov
sub
mov
mov
in
pop
or
add
jge
push
mov
jp
mov
je
pop
or
add
lret
and
shrb
fwait
cmpsl
shrl
ret
int
cmp
shrb
or
jmp
pushf
pop
adc
inc
in
mov
xchg
je
std
fistpll
or
and
adc
dec
mov
mov
sti
and
pop
adc
pop
add
sub
jp
sub
jne
mov
icebp
std
pop
in
iret
or
and
je
mov
mov
icebp
decb
scas
and
jns
or
and
inc
sbb
jp
sbb
mov
adc
dec
loopne
fcoms
test
mov
or
loope
clc
aas
cmc
or
pushf
loop
adc
fisttpl
outsb
lcall
test
xor
cmpsl
add
adcb
pop
fstps
out
sarl
cmpsb
sbb
test
fs
cli
pop
sbb
jo
in
shlb
dec
mov
es
sbb
arpl
and
jge
or
add
inc
arpl
mov
pop
stos
mov
dec
push
filds
push
aaa
xchg
in
push
sub
insb
xorl
cmp
lea
sbb
test
add
pop
pop
or
test
lcall
sbb
sbb
je
int3
xchg
cmpsl
rorb
xor
mov
jo
push
mov
adcl
stos
pushw
jg
mov
dec
push
out
and
aam
sbb
std
mov
notl
xor
out
js
fstl
in
dec
add
jae
sub
inc
sti
arpl
push
popf
es
mull
xchg
mov
rclb
sub
pop
iret
movsb
jne
fnsave
jbe
mov
jle
pop
mov
or
ja
or
outsb
pop
mov
mov
out
lods
mov
and
mov
sar
mov
test
je
notb
push
dec
pop
jo
cmp
or
test
dec
or
lcall
pop
xor
popa
int3
or
sbb
cmpsb
stos
es
lcall
in
repz
enter
lret
mov
fs
xchg
push
sbb
lcall
push
jnp
call
and
test
cmpl
mov
mov
and
stos
or
xor
or
inc
mov
add
out
gs
iret
and
lock
xor
data16
push
push
xor
sti
pop
test
pop
cld
and
sbb
mov
adc
jmp
mov
loop
daa
sbb
sub
push
je
ds
add
lds
cmpsl
push
xor
cmp
jecxz
mov
imul
in
dec
aas
mov
popf
or
pop
mov
xcrypt-ctr
cmpsl
cwtl
insb
jecxz
xchg
das
jge
pop
out
sti
push
mov
sbb
inc
out
mov
or
adc
jle
sub
insb
sub
std
mov
push
and
testl
rol
in
add
push
and
dec
dec
sbb
lods
cli
inc
fs
pop
mov
pusha
pop
cltd
jno
lock
pop
sbb
ret
mov
loop
jle,pn
jp
or
mov
jb
cmp
into
sbb
cwtl
pop
xor
inc
jb
xchg
xor
pop
pop
mov
stos
mov
add
hlt
scas
add
pop
std
push
iret
add
xchg
lds
add
and
and
jle
mov
loop
add
aad
jp
lods
inc
mov
leave
adc
sbb
xchg
pushf
daa
incl
mov
pop
sbb
js
lds
mov
sub
ret
idivb
std
jb
fs
std
fadd
aaa
jae
mov
push
out
movsb
xchg
dec
or
dec
sub
cmpsl
inc
sbb
push
insl
mov
push
mov
adc
pop
sar
and
dec
mov
xchg
cld
add
cmpsb
scas
repnz
jb
insl
cmpsb
xor
stc
addl
stos
outsb
cmp
call
xchg
je
and
fsubs
int3
adc
push
cmc
xchg
dec
mov
mov
mov
mov
es
test
xor
cs
movsb
incl
mov
ljmp
outsb
stc
adc
xchg
clc
push
adc
mov
test
sar
push
add
scas
lret
test
dec
or
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
scas
push
inc
jle
xchg
rorb
sbb
lods
push
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
sar
add
xchg
add
imul
std
loopne
imul
jp
xchg
xchg
push
stos
scas
jbe
movb
jbe
in
mov
sub
xor
in
mov
subb
mov
test
inc
mov
enter
shl
in
inc
jno
sahf
mov
adc
mov
mov
lret
and
push
jnp
aad
sbb
jne
cld
mov
sub
std
or
sbb
jbe
mov
mov
xor
mov
rcl
pop
fisubrs
fldl
mov
sbb
pop
xor
cmp
sarl
icebp
xchg
in
lods
fcom
mov
mov
jae
cmp
das
std
dec
dec
incl
test
adc
cmp
mov
loop
outsl
add
add
or
push
xor
scas
int3
mov
rorl
repz
jg
inc
fsts
sub
cwtl
outsl
cmp
mov
cwtl
pop
rcl
subl
pop
xlat
dec
add
xor
push
pop
repz
mov
hlt
out
cmp
mov
cmp
es
and
ja
mov
push
xor
daa
sub
scas
xchg
dec
imul
fidivl
cmpsb
adc
mov
cmp
jne
add
sub
lods
pop
imul
add
or
mov
mov
pop
mov
rclb
cmp
mov
ljmp
pop
mov
aam
xor
lea
cli
jl
stos
and
andl
xorb
sub
dec
stos
push
sub
lret
xchg
rcl
push
pop
in
shlb
add
mov
shrl
loop
dec
sbb
flds
jmp
xchg
mov
ror
rcll
sbb
jbe
clc
imul
push
or
call
ret
xchg
ficompl
push
aam
sbb
mov
test
sbb
lea
pause
xchg
sar
xchg
dec
outsl
addr16
jnp
dec
push
test
dec
jno
dec
test
mov
lods
orb
cmp
and
loopnew
mov
jne
ret
push
and
insb
sub
addl
ja
idiv
jg
mov
mov
xchg
add
xchg
add
and
fcoml
add
adc
cmp
xchg
fscale
inc
pop
sbb
fidivrl
and
lahf
adc
ljmp
movsb
cmp
adc
mov
sbb
lret
sub
stos
mov
mov
pop
add
push
xor
shll
mov
nop
pop
lret
cltd
mov
or
jae
pop
push
fildl
nop
movsb
out
daa
je
pop
shl
push
rorb
shl
fs
mov
movsb
pop
test
adc
push
mov
or
jae
mov
jns
sbb
cmp
sahf
mov
fs
or
xor
xchg
dec
sub
adc
cmp
je
xor
mov
add
mov
leave
or
jo
and
data16
sub
push
push
movsb
or
pop
aas
xchg
xchg
or
aas
sub
mov
mov
inc
rorb
xlat
lods
enter
mov
mov
pop
sar
loop
in
sbb
lret
push
adc
jbe
push
arpl
pusha
cmp
mov
jo
enter
js
and
cwtl
jae
xchg
clc
das
push
cwtl
popa
mov
std
adc
adc
cmp
cmp
fnstenv
stc
dec
aaa
popf
repnz
testb
and
leave
es
mov
mov
or
mov
pop
das
xor
js
add
ret
jmp
xor
aaa
pop
lds
xor
mov
push
xchg
aad
or
std
gs
cmp
mov
add
xor
fsubr
add
mov
and
mov
sbb
dec
ss
aam
daa
xchg
cmc
mov
dec
sbb
xlat
movb
jno
mov
dec
cmp
mov
mov
test
sub
daa
lcall
pop
pop
or
mov
pop
sbb
pop
sbb
ds
test
pop
xchg
fs
pop
notl
sti
mov
sti
sub
movsb
rorb
pop
mov
adc
xor
in
dec
sbb
call
sbb
pop
xchg
mov
movsb
add
add
xchg
add
fwait
add
mov
inc
data16
push
lret
dec
sub
adc
ljmp
jge
popa
add
stos
add
mov
scas
mov
xor
call
adc
in
xlat
ljmp
mov
push
int
add
mov
jp
jnp
dec
sbb
cmpsl
dec
das
dec
or
inc
mov
pop
icebp
mov
pushf
fistpll
sub
data16
add
jne
mov
mov
jle
jo
in
sub
mov
sti
push
movsl
leave
imul
add
push
mov
loope
insb
cmpsl
cltd
xchg
test
and
add
mov
cmp
andps
add
ja
popa
sub
loope
mov
js
loop
lahf
xor
daa
bound
or
enter
mov
jmp
mov
les
jle
mov
sbb
int3
dec
outsl
add
inc
out
pop
int3
enter
fnclex
mov
mov
and
pop
sbb
gs
aam
outsb
lret
adc
dec
xor
add
insb
push
adc
dec
jb
rcrb
shr
adc
inc
push
popa
fbld
sbb
push
inc
data16
dec
pop
mov
leave
fistpll
aam
mov
jmp
nop
fisttps
inc
inc
in
or
mov
jb
outsl
int3
dec
jns
les
mov
cmpsb
lds
jb
lods
ds
rcll
xor
popa
dec
or
test
cmc
mov
pop
dec
pop
enter
mov
sub
xlat
xor
inc
pop
xchg
and
jl
repnz
sbb
mov
mov
bound
lahf
mov
jecxz
notb
jmp
test
lds
insb
mov
or
jb
lret
push
sub
shl
and
sub
mov
mov
push
aaa
aam
mov
pop
je
or
test
pop
sbb
dec
inc
scas
xor
into
mov
sbb
xchg
pop
and
fcoml
push
sbb
mov
dec
add
or
int3
push
push
pop
cmp
repnz
cld
add
fiaddl
jnp
jl
in
sub
jae
mov
or
lahf
fmul
pop
and
aad
fcmovnbe
pop
push
iret
jmp
add
push
add
mov
jp
push
imul
add
xchg
add
or
loop
imul
es
mov
or
or
sbb
pusha
push
and
ljmp
arpl
les
ja
sbbb
in
or
push
out
test
sub
pmullw
hlt
mov
shlb
sub
dec
nop
insb
sub
adc
adc
mov
jg
insb
mov
push
adc
dec
jle
push
mov
sub
xchg
lock
cmpsb
jb
pop
ret
mov
sbb
ja
sub
mov
mov
sbb
sub
sbb
insl
pushf
mov
push
jns
divb
cmp
xchg
add
imul
lock
pop
loope
mov
mov
test
mov
mov
sbb
aad
mov
es
out
push
aas
lods
icebp
mov
lret
cs
sub
arpl
or
inc
and
in
test
and
nop
pop
xor
out
cmpsb
bnd
fnstcw
daa
in
orl
in
sahf
outsl
ror
pop
sub
aad
cltd
ror
dec
sbb
pusha
and
in
outsl
sub
stos
mov
lock
sbb
sti
dec
cmp
inc
xorb
pop
movsb
pushf
and
adc
test
cmpsb
adc
xchg
ljmp
mov
imul
in
jl
gs
mov
mov
arpl
push
jb
mov
bound
pusha
mov
call
lock
pop
push
jne
xor
add
jge
call
scas
fdivl
sbb
pop
sahf
push
pushf
add
test
enter
jne
cmpsb
dec
cmpsb
jge
xchg
mov
or
lret
stc
cmp
jo
xchg
ss
lcall
inc
in
dec
and
notl
stos
jnp
fimull
stc
pop
out
inc
aam
push
call
std
cs
bound
daa
jo
insl
mov
and
mov
add
jae
cltd
sbb
jns
add
cmp
xchg
fsubrl
pop
jecxz
pop
iret
shrb
insl
insb
loope
cwtl
inc
sbb
jne
lods
adc
repnz
in
sahf
inc
icebp
cmp
cmc
push
int
fistpl
les
push
xor
lock
enter
mov
push
ljmp
dec
add
iret
sbb
xor
add
js
hlt
mov
std
jl
dec
pop
cmp
or
adc
xchg
add
cmp
insl
insb
lock
pop
push
dec
dec
in
clc
bound
int
ljmp
push
stc
loop
adc
sti
loop
es
aam
or
push
mov
mov
push
lods
and
cs
imul
outsl
fdivrs
or
into
jne
mov
lock
add
and
je
or
nop
xlat
nop
mov
mov
sbb
aaa
inc
push
push
mov
mov
rol
and
outsb
mov
call
xor
daa
sbb
jb
sbb
fwait
xor
inc
mov
repnz
pop
lock
out
or
scas
addl
repz
xchg
outsl
xchg
sbb
mov
pop
fs
inc
pop
or
mov
xchg
imul
adc
repnz
xor
mov
or
jp
daa
test
loope
movsl
xchg
loopne
int3
mov
movsb
sub
lcall
xchg
sbb
aaa
dec
pop
mov
push
jl
inc
xor
add
dec
dec
mov
jp
ds
xor
fildl
hlt
popf
pop
ja
pop
shrb
stos
xlat
xor
jl
pop
loope
xchg
xlat
aaa
in
icebp
push
outsl
adc
shlb
notb
pop
mov
decl
push
xchg
rolb
insb
adc
mov
fbstp
clc
nop
cwtl
iret
inc
cmp
mov
imul
sub
mov
sbb
jg
leave
shrl
dec
into
stos
inc
out
inc
push
dec
push
cmc
test
insb
orl
test
imul
xor
pop
pop
nop
out
mov
inc
gs
stos
js
add
testb
add
xor
cld
cli
cmpsl
add
stc
pushf
mov
mov
lcall
mov
pop
stc
jo
vpshufbitqmb
jecxz
addr16
in
outsb
and
movsl
mov
cmc
out
jge
ret
mov
xor
cli
mov
sbb
xchg
cmc
sbbb
fsubrl
jmp
repnz
popf
dec
push
mov
xor
aad
mov
add
in
ficompl
inc
add
lret
mov
inc
jb
pop
dec
cmp
or
jl
cmp
mov
and
cmp
add
mov
idivl
mov
xor
daa
xchg
outsb
add
xchg
add
add
or
stc
es
testb
sub
fadds
adc
pop
sub
mov
les
sbb
rclb
loopne
xor
mov
iret
adc
std
sbb
jnp
or
pop
sbb
sti
cli
sar
sub
aam
sub
aaa
sbb
xchg
push
repnz
leave
xor
ret
mov
and
lea
pop
icebp
pop
lds
or
xchg
fidivrs
jns
adc
aam
in
or
pusha
into
push
add
imul
cli
scas
push
inc
or
mov
xchg
pusha
div
imul
push
push
out
xor
inc
mov
sbbl
mov
into
xchg
shlb
adc
add
pop
add
ss
jp
lock
jo
and
int
mov
lods
mov
pop
push
mov
or
push
fucomp
pop
int
dec
or
jnp
sbb
inc
call
icebp
jle
subl
pop
out
test
mov
xchg
mov
mov
sarb
sub
out
popf
pushf
dec
jl
fnstcw
scas
mov
lock
jp
stos
inc
pop
or
call
pop
mov
sbbb
jbe
push
inc
ret
popa
cmpsl
stc
idivb
nop
mov
dec
out
movsl
pop
push
leave
enter
xchg
adc
mov
inc
xor
movsl
jecxz
test
fwait
shll
fimull
enter
xchg
push
cltd
dec
push
adc
pop
out
scas
scas
movsb
xor
adc
cmc
and
lea
rcr
popa
inc
jl
jne
push
xchg
stos
xchg
stos
sbb
ss
ds
pop
push
jne
fdivrl
cmpsb
pop
adc
mov
leave
mov
repz
out
mov
cmp
scas
lahf
scas
mov
stc
xchg
out
pop
fnstcw
inc
loop
call
add
sbb
sbb
scas
fstpl
and
cld
mov
fcompl
test
add
xchg
insb
imul
and
lods
mov
sub
dec
hlt
pop
mov
pushf
ficoms
sbb
lods
stos
fisttpl
int3
sbb
xor
xchg
ljmp
cmp
pop
push
jle
cld
in
mov
mov
add
jg
pop
aad
push
mov
addr16
add
xchg
add
mov
fiaddl
mov
or
sbb
idivb
sbb
lods
icebp
or
in
subl
addr16
incb
push
jl
frstor
fyl2x
jecxz
pop
mov
popf
cld
push
mov
ja
cmpsb
movsl
sbb
xor
mov
outsl
cli
jb
les
inc
push
outsl
in
pop
sti
xorps
fcomps
dec
mov
insl
mov
inc
adc
and
push
mov
test
push
subl
sbb
cltd
mov
lock
cmpsl
in
call
and
inc
inc
adc
inc
xchg
pop
adc
jmp
xlat
aas
mov
daa
push
stos
out
push
shll
sub
mov
push
mov
mov
aaa
popa
inc
test
lea
ljmp
xchg
test
xlat
mov
pop
lock
insb
cmp
push
movsb
ljmp
mov
xor
adc
push
inc
dec
inc
push
mov
in
pop
pushl
jmp
out
flds
or
inc
mov
push
imul
insl
sbb
mov
push
dec
adc
popa
xchg
or
xchg
test
stos
jl
outsb
gs
lods
push
dec
xchg
sub
add
lods
inc
mov
inc
push
imul
in
repnz
hlt
in
dec
and
xor
xlat
mov
ficoms
int3
cmp
and
clc
add
push
push
fidivl
insb
test
clc
fdivl
and
loopne
jle
leave
in
loope
jge
lods
pop
in
aas
adc
rorb
xchg
mov
ja
bound
add
int3
xchg
ja
sub
subl
jo
icebp
jp
sahf
push
ljmp
xchg
repnz
je
and
adc
mov
push
mov
outsb
add
xlat
cld
pop
pop
hlt
sbbb
xor
mov
jecxz
mov
addr16
push
out
mov
ss
fs
or
cmp
dec
in
sahf
scas
jbe
dec
xlat
inc
adc
xor
xor
jl
or
xor
cmpl
scas
mov
inc
mov
mov
out
int
jp
in
sbb
xorb
jbe
xchg
lods
pop
lret
fildl
mov
call
sti
enter
and
or
add
popf
paddd
cmpsl
mov
pop
xchg
mov
add
add
outsb
xor
int3
inc
inc
les
xchg
push
mov
roll
pop
in
inc
in
nop
inc
push
sbbl
sbb
sbb
pop
mov
jnp
mov
ret
gs
push
ss
or
cli
cmpsl
pop
aaa
adc
jae
dec
out
add
add
aaa
and
inc
inc
sbb
into
dec
sbb
add
sbb
add
mov
sub
sub
pop
repnz
loope
out
pop
repz
enter
adc
push
push
test
ror
scas
cs
mov
jecxz
loopne
dec
adc
idiv
les
js
pop
cmpsb
and
fisttpl
pop
into
iret
aas
sub
or
mov
jmp
scas
dec
pop
xchg
xchg
pushf
out
lcall
clc
pop
push
fs
leave
scas
or
add
jg
xchg
dec
xlat
jmp
xchg
jmp
call
xchg
data16
cwtl
shrb
push
dec
sub
sub
into
sub
jns
out
or
faddl
sbb
mov
mov
push
dec
inc
jp
push
push
adc
imul
inc
shlb
pop
pop
or
stos
xchg
rorb
push
testb
or
sahf
push
push
test
inc
int3
sahf
inc
scas
ret
into
scas
cld
sarl
shrb
sub
shrb
sub
ds
jae
pushf
sbb
loop
js
in
icebp
inc
movsl
or
cmc
pop
mov
addr16
mov
imul
or
roll
mov
mov
dec
outsl
or
stos
or
mov
mov
and
mov
das
and
inc
testb
lods
cmpsb
jge
mov
xchg
mov
pop
dec
lret
pusha
addb
and
mov
jecxz
pop
add
mov
xor
sbb
mov
dec
orb
stc
cmpsb
xchg
push
enter
les
mov
add
test
pop
xchg
mov
jmp
pop
xchg
push
dec
push
scas
sahf
in
cmp
pop
repz
nop
xor
adc
push
mov
xor
add
aaa
fmul
pop
lahf
fstpl
call
lcall
test
stos
test
jns
sbb
adc
pop
adc
sbb
jg
fdivrp
hlt
subb
movsb
lea
lods
and
mov
jbe
add
pop
dec
mov
or
dec
ficompl
fisttpl
rcll
jg
xchg
daa
mov
popf
stos
sbb
in
add
addr16
push
push
mov
jb
push
ds
mov
int3
dec
ja
dec
out
xor
int
or
lret
jnp
testl
cs
xchg
cvtpi2ps
lahf
push
and
aam
pop
push
cmp
popl
enter
sub
cmp
movsl
js
mov
testl
std
outsb
or
or
xchg
imul
stos
add
arpl
clc
mov
add
fisttpl
add
or
int
cltd
sbb
adc
scas
cmpsb
cmovge
jo
or
xor
xor
add
mov
cmpsb
retw
sbb
inc
cmpsb
xchg
incb
xchg
mov
dec
push
clc
sbb
and
mov
mov
ficoml
sbb
sbb
dec
insl
aam
xchg
stos
lret
jns
inc
mov
jmp
test
das
sub
adc
test
pop
mov
das
in
sub
int3
ja
es
pop
lahf
mov
cmp
push
mov
lods
xchg
lahf
inc
nop
out
adc
adc
push
pop
lods
xor
loopne
mov
mov
loopne
push
daa
sti
ret
cwtl
ret
and
adc
mov
sahf
loopne
std
and
inc
loope
test
sub
les
dec
in
jp
mov
xchg
jle
adc
xchg
iret
jg
icebp
cmp
pop
adc
sub
sbb
in
nop
loopne,pt
sub
bound
cmpsb
fxch
dec
cli
push
sahf
xor
mov
mov
dec
mov
dec
fbstp
mov
test
and
cld
jns
ret
in
outsb
stos
xchg
xchg
lea
push
pop
push
inc
jno
jge
arpl
fidivrl
pop
inc
jp
jp
and
repnz
icebp
xor
and
add
stc
push
ficoms
jmp
dec
dec
jno
and
dec
stos
fs
dec
inc
out
and
add
addr16
xchg
pop
fisubrs
inc
push
push
and
or
xchg
ror
mov
loopne
mov
lds
pop
dec
loope
pop
js
insb
push
lods
and
cmp
test
push
inc
scas
js
add
inc
fists
sub
xorl
fs
xchg
es
xchg
in
mov
mov
mov
dec
das
inc
sbb
pop
pop
je
test
lret
scas
cwtl
dec
stc
mov
push
test
stos
cmpsb
jae
push
shrb
mov
cli
jns
xlat
cmp
jmp
daa
insl
mov
std
cmp
outsl
xchg
add
xchg
repnz
test
mov
stos
jns
out
or
lret
pop
sahf
aas
jg
adc
jge
sub
inc
mov
fcompl
dec
inc
adc
negb
push
jbe
pop
add
xor
repnz
pop
jl
xorl
cmp
lds
dec
movsb
dec
sub
inc
dec
inc
cmpsb
imul
or
icebp
lock
xchg
call
movsl
inc
mov
iret
push
in
and
fsubs
sahf
and
clc
xor
frstor
cld
dec
push
inc
aam
dec
xchg
loopne
cmp
jg
or
mov
fldl
adc
nopl
and
push
fwait
sub
xchg
and
sbb
cmp
es
jbe
cmpsl
out
inc
cmpsb
jecxz
out
aas
andb
jbe
push
rcll
xchg
imul
les
sbb
cmpsb
iret
add
lahf
push
out
mov
gs
or
jmp
std
es
imul
cli
mov
aaa
mov
insb
ljmp
test
testl
pop
das
movsl
pop
je
jo
inc
sub
jo
push
std
mov
out
mov
ljmp
idivl
mov
adc
push
int
popa
or
cmp
mov
pusha
jle
jg
lahf
rclb
lods
enter
fisubrs
xor
add
mov
in
mov
lahf
mov
ficomps
movsl
cli
pop
dec
push
or
adc
mov
mov
in
jecxz
and
dec
jae
mov
aaa
mul
in
movsb
or
adc
in
and
cmp
xor
ds
mov
dec
push
cmp
gs
out
mov
es
push
push
xchg
add
test
xchg
std
jg
in
pop
mov
ds
xor
add
xchg
add
dec
std
adc
outsl
inc
push
sub
pop
bound
fisubrl
fldt
pop
jbe
push
rorb
fidivrl
pop
les
dec
mov
daa
and
sarb
dec
out
adc
add
sbb
ljmp
mov
mov
push
and
mov
ds
dec
ret
mov
adc
pusha
dec
jecxz
cmp
push
mov
mov
mov
bound
ja
push
insl
cmc
and
sbb
inc
pusha
repnz
mov
mov
movsl
stos
repnz
or
and
fwait
jmp
or
les
push
jae
sub
lcall
xchg
lret
int
shrb
cmp
lahf
mov
mov
or
stc
jo
jnp
lds
mov
fdiv
push
lret
pop
iret
cltd
pop
xor
addr16
arpl
inc
adc
repz
int3
je
pop
xor
add
mov
cld
and
stos
add
je
dec
pusha
popa
in
loopne
inc
lahf
pop
stos
add
pushf
mov
lahf
adc
mov
cmp
pusha
out
imull
push
out
xor
dec
test
lahf
sub
push
mov
int3
mov
mov
sbb
in
mov
adc
jne
arpl
mov
sti
das
fidivl
sbb
mov
faddl
sbb
jle
sbb
out
cmpsb
jb
in
mov
jl
or
jne
enter
and
jnp
push
and
es
jae
mov
mov
adc
cmp
test
pop
mov
or
mov
pop
into
cmp
insb
pop
mov
cmp
add
xchg
mov
or
mov
mov
xor
lcall
out
push
mov
sti
mov
rorb
mov
test
or
adc
pop
jae
call
jmp
push
jno
cmpsl
and
inc
cli
adc
cltd
cmp
repnz
repnz
shrb
xchg
sbb
adcl
add
sbb
jp
adc
xor
mov
rolb
arpl
insl
ja
push
add
enter
fidivrs
xchg
movhps
cmp
out
add
mov
idiv
iret
std
mov
adc
add
add
scas
stos
jmp
and
push
pop
push
cld
push
xchg
aam
xor
icebp
push
mov
dec
pop
and
xchg
or
rorb
cmpsl
mov
mov
cmp
mov
ret
adc
jo
cli
pusha
fwait
movsb
aaa
sbb
adcb
push
dec
aad
loope
dec
ss
es
push
inc
adc
add
cmp
dec
push
dec
lcall
or
hlt
fistl
mov
dec
pushl
jg
add
sub
in
mov
ficompl
jnp
mov
nop
xchg
adc
adc
sub
in
mov
pusha
out
addr16
cmp
dec
mov
push
push
cmp
in
test
mov
sbb
or
fcomps
mov
add
clc
push
pop
adc
mov
push
lock
mov
loope
xchg
xor
popf
xlat
jno
cmpsl
sub
in
push
inc
jecxz
mov
int
fildl
jae
insb
icebp
sbb
xchg
in
leave
push
push
jecxz
fdivl
xor
lret
mov
pop
dec
pop
leave
js
cmp
cwtl
cltd
cmpsb
jno
jg
jge
rclb
mov
stc
xchg
pop
pushf
cld
fistpl
push
lock
mov
stos
in
mov
test
aad
repnz
in
mov
mov
push
push
cmpsl
mov
pop
xor
loopne
sbb
pop
outsb
aam
dec
add
ss
inc
sub
out
nop
cmp
cmp
shll
mov
repz
cmp
adc
mov
pop
dec
pop
repnz
push
sub
jle
pop
mov
push
movsl
xor
cmp
push
sub
pop
shrl
mov
pop
inc
inc
mov
cltd
cpuid
pop
mov
hlt
pusha
test
stc
jmp
mov
ljmp
pop
jp
fcompl
ret
pop
mov
ret
jmp
fwait
or
sub
out
fmull
jae
mov
pushl
pop
out
clc
outsl
scas
and
shrl
adc
mov
pushf
inc
and
mov
mov
pushf
int
cmpl
je
and
sbb
hlt
bound
fistl
pop
add
mov
out
add
addb
xor
fwait
cmp
add
ret
mov
out
mov
roll
add
cmp
mov
add
mov
xchg
xorl
hlt
aam
push
add
jae
nop
inc
int3
add
adc
xor
mov
lahf
xchg
into
pop
or
pushf
dec
shll
aaa
int
push
aaa
adc
shrb
add
ds
loop
mov
lret
imul
iret
ljmp
repnz
and
dec
xchg
gs
out
into
enter
add
cmp
popa
and
sub
lcall
bound
push
adc
aas
call
push
cmp
loope
in
xor
out
push
push
sub
fadds
mov
in
fsubl
mov
adc
push
dec
sbb
pop
je
inc
jo
mov
mov
loope
rolb
mov
fistps
repz
add
sbb
in
ss
mov
adc
add
in
and
xchg
sub
test
mov
leave
and
inc
enter
mov
mov
sti
mov
cmp
shlb
mov
enter
bound
xor
xlat
push
movsl
inc
mov
outsl
pop
mov
sbb
mov
mov
ficompl
hlt
scas
in
jle
jno
mov
xchg
inc
adc
enter
stos
pushf
add
cmpsb
mov
lea
mov
test
outsl
testb
test
rclb
es
test
xchg
popf
add
xor
pop
int3
aad
cmpsb
rorb
mov
inc
or
adc
jae
sbb
hlt
push
fidivl
cmpsb
outsl
lods
xchg
lahf
fstl
push
sbb
pop
inc
imul
jbe
cld
testl
in
push
cmpsb
bound
dec
xor
sub
or
int3
sti
cmp
sti
sbb
push
subb
ret
mov
idivb
out
inc
call
cmp
xchg
cwtl
jp
jmp
adc
pop
jae
movsl
lret
pushf
cmp
inc
mov
in
shlb
nop
push
cli
rcrl
adc
int3
mov
loop
test
cmpsb
inc
inc
loopne
adc
addr16
cmp
cmp
adc
jo
or
add
push
push
jle
xlat
outsl
mov
lcall
add
xchg
add
hlt
or
sbb
shll
jp
xchg
mov
adc
xchg
int
lret
adc
cmp
cltd
scas
bound
inc
gs
sbb
dec
sub
fsubs
jecxz
mov
mov
clc
lods
out
add
mov
pop
mov
push
int
loop
stos
pop
popf
ljmp
ret
fisubrs
jae
adc
xor
push
xorb
xor
mov
xchg
cwtl
mov
es
ds
sbb
dec
push
inc
movsl
jl
and
jmp
jne
jg
mov
cmp
ret
hlt
inc
lcall
ret
cmc
outsb
or
pop
push
jecxz
test
aaa
mov
dec
stos
dec
jp
movsl
jno
mov
pop
adc
call
or
sub
outsb
xor
push
add
inc
mov
pop
pop
fisubrs
xchg
adc
xor
sbb
add
test
dec
lods
test
popa
sti
xchg
fsts
aam
sbb
ja
sti
xor
inc
xor
cmp
and
dec
lret
jb
add
mov
add
in
fwait
mov
in
sbb
xchg
movsb
pushf
mov
clc
xchg
mov
sbbl
es
jns
call
mov
fwait
add
push
enter
jbe
cmp
imul
xor
push
divl
adc
pop
xchg
pop
xor
and
xor
sahf
int
scas
shll
sar
add
dec
shlb
dec
cltd
cmp
cmpsl
shrb
pop
pop
subl
and
pop
pop
mov
add
ret
lahf
push
call
jne
xchg
xor
lods
mov
lods
ljmp
lret
xchg
stos
add
mov
pop
pop
mov
fadds
and
xchg
dec
fsubs
fsqrt
mov
xchg
push
sbbb
scas
int3
cmc
lahf
std
sahf
dec
push
mov
dec
dec
xor
into
pop
adc
int3
adc
movsb
pushf
std
lock
mov
sbb
cmp
in
ljmp
and
pop
lret
into
movsb
or
pop
in
mov
xchg
cltd
ret
mov
or
mov
or
orb
pop
or
pop
pop
out
adc
cli
jo
mov
iret
mov
mov
or
pop
out
repz
loop
add
add
es
ss
mov
movsb
add
jb
sahf
mulb
xchg
testb
jge
pusha
jb
push
insb
push
adc
push
sti
fists
out
push
push
call
adc
mov
inc
cs
jecxz
orb
inc
push
mov
popf
fimull
out
pop
push
rorl
test
inc
outsb
or
jle
xor
ja
in
xchg
dec
jae
pop
mov
dec
addr16
push
dec
mov
test
loopne
and
jne
inc
xor
or
xchg
mov
push
stos
scas
push
cli
lds
testb
and
ss
jmp
sbb
mov
jp
adc
mov
cvtps2pi
imul
ss
xchg
adc
arpl
popf
pop
or
mov
dec
out
cmpsb
sbb
hlt
in
dec
cmp
cltd
pop
push
inc
addr16
pop
nop
and
pop
or
jge
aaa
scas
xlat
fbld
dec
add
push
xchg
mov
mov
arpl
sbb
std
or
das
or
jp
lea
cltd
addl
and
pop
dec
sub
inc
xchg
adc
adc
iret
outsb
xlat
cmp
mov
cltd
out
jne
test
roll
add
or
addr16
test
sbb
push
xchg
adc
mov
dec
popf
push
add
rcrb
out
in
sub
mov
sbb
mov
movsb
inc
insl
xchg
jbe
dec
xchg
add
adcl
lret
cwtl
mov
and
mov
in
mov
fcoms
cmp
iret
fistl
lock
movsl
jo
scas
adc
out
and
pop
rorl
jo,pt
xor
mov
insl
arpl
xor
mov
sub
jp
ss
pop
jbe
fstpl
jmp
sahf
push
das
in
cmp
xchg
rclb
jno
sub
out
aas
je
and
sbb
inc
into
dec
sbb
stos
ljmp
xchg
movsb
cmp
adc
xorl
push
xchg
xchg
xor
adc
in
xor
inc
cmp
cmp
in
jb
inc
mov
pop
ds
cmc
jnp
jl
pushf
hlt
aad
pop
jmp
mov
push
mov
fisttpll
aaa
daa
sbb
inc
push
sbb
cltd
add
leave
xchg
insl
mov
aam
inc
fdiv
and
inc
rolb
add
cmp
pusha
mov
xchg
inc
xorb
lcall
sub
adc
mov
movsb
sub
pushw
int3
loop
fnstenv
add
push
cmp
mov
cmpsb
or
jns
mov
cmp
sahf
xlat
mov
aam
xor
dec
mov
and
loopne
mov
lods
jp
sti
stc
imul
add
push
clc
cmpsb
push
sub
lcall
movsl
inc
stos
cmp
test
mov
push
sbb
sbb
jno
es
jb
ror
or
sbb
lahf
scas
cmp
and
push
pop
xchg
aad
jle
lcall
shl
mov
xchg
addr16
shl
addr16
daa
fldt
ss
loope
addr16
mov
lea
mov
scas
sbb
add
insb
cmp
jns
insl
addr16
pop
cmpsl
sub
stos
sub
pusha
push
push
aas
cli
add
sub
mov
lods
sahf
imul
xchg
outsb
mov
push
out
pop
sub
pop
push
push
test
in
push
jbe
add
lea
cmp
hlt
adc
sub
dec
sub
pop
arpl
stos
lret
sbb
add
and
mov
cmp
inc
and
sub
cli
sub
iret
jae
sub
dec
cwtl
insb
xchg
outsb
push
mov
stos
stc
in
ret
clc
push
mov
jns
push
jo
jbe
frstor
lcall
xchg
push
loop
pop
adc
rorl
data16
mov
pop
cmpsl
pop
out
or
xor
xor
pushw
inc
adc
mov
mov
out
add
aad
pop
pop
pop
pop
mov
iret
jmp
movsl
ficoms
inc
stos
aaa
pop
push
xchg
dec
jmp
test
test
cltd
nop
addr16
dec
inc
sbb
fwait
dec
inc
insb
imul
xor
mov
xchg
inc
cmp
fimull
mov
repnz
lds
pushf
mov
ja
lea
adc
stos
lahf
in
popa
lods
dec
aaa
mov
scas
fs
sub
pop
mul
xlat
and
mov
adc
popf
mov
jmp
add
jp
push
insb
aam
cli
pop
or
fildl
add
ja
idiv
pop
out
dec
mulb
dec
and
lcall
add
sbb
cmpsb
pop
dec
mov
add
neg
movsl
pop
push
fwait
aam
jno
xor
aaa
pop
and
jge
jnp
icebp
fdivrl
adc
int
push
mov
and
dec
dec
jl
dec
sub
dec
rcrl
inc
les
or
lahf
adc
lret
arpl
fstl
jns
xchg
lock
mov
mov
mov
mov
cld
aas
xor
in
xchg
xor
fisubs
xor
out
mov
push
aam
sbb
bound
js
stos
in
sbb
pop
pop
test
fs
xor
add
icebp
push
movsb
fimuls
es
cmp
xor
mov
dec
pop
push
rclb
adc
aaa
in
sbb
pop
addr16
pop
out
pop
and
repz
sub
or
int
xchg
pop
repz
fistpll
cwtl
pop
pop
shl
push
pop
ror
and
xor
mov
dec
mov
mov
ret
imul
lods
mov
pop
popf
int
jge
hlt
xchg
movsl
std
push
adc
xchg
ljmp
jne
clc
push
jmp
pop
sub
sbbw
ds
das
pop
aad
add
mov
push
lret
inc
xor
and
xor
cs
or
pusha
inc
shll
bound
sbb
call
or
lds
repz
xor
ss
fwait
mov
dec
fwait
aad
es
and
mov
xchg
cmpsl
setnp
movsl
pop
push
popf
loopne
xorl
shll
xchg
sbb
jns
les
xchg
mov
test
dec
shlb
sbb
aam
sar
push
push
outsl
aaa
ljmp
imul
xlat
ljmp
mov
lcall
lods
ds
adc
jns
jns
cwtl
adc
setge
mov
or
in
xchg
push
aas
rolb
ret
js
ret
xchg
jg
movsl
mov
dec
int3
dec
lock
arpl
sub
pop
mov
leave
pop
mov
mov
add
shl
lods
push
mov
xor
imul
add
out
xor
pop
xchg
add
sti
mov
test
aam
mov
mov
add
sti
mov
push
repnz
test
stos
dec
inc
push
ss
scas
lret
dec
mov
out
push
outsl
dec
push
out
test
fsub
add
int3
enter
inc
mov
sbb
cmp
push
mov
ds
mov
and
out
das
aas
ja
fidivrs
jl
mov
ja
and
aaa
adc
jmp
jmp
pop
lret
ret
imul
fbstp
mov
or
sti
dec
js
cmp
test
adc
roll
sbb
das
aad
mov
iret
mov
sub
cmp
sub
aaa
pop
xchg
jns
sbb
lds
mov
cld
jp
ror
dec
jle
fidivrl
mov
add
ja
ja
dec
out
mov
adc
mov
aas
inc
jo
adc
fldenv
out
inc
jecxz
andl
lret
imul
adc
out
icebp
or
dec
lods
ja
mov
push
das
mov
hlt
shrb
dec
stc
fld
stos
stos
cmpb
out
pop
or
cmp
sarb
cltd
sub
lds
out
mov
mov
mov
cmpsb
xchg
insl
jbe
and
or
cmp
xor
leave
sbb
pop
test
pop
lock
mov
repnz
cmp
sbb
lea
fbld
adc
movsl
xchg
cmpl
mov
pop
jbe
ficompl
mov
movsb
push
xor
dec
or
movsb
bound
pop
jne
inc
dec
xor
pop
mov
xchg
push
movsl
jbe
adc
lods
mov
inc
js
pop
sub
dec
pop
inc
vphaddd
test
xchg
jb
jno
add
dec
sbb
dec
dec
popa
lea
sub
adc
ret
fs
add
cmp
ret
add
push
mov
lahf
fbstp
ss
repz
or
cmpsb
adc
sbb
outsl
flds
mov
repnz
dec
out
jle
lds
and
icebp
fdiv
stos
xchg
push
jae
fwait
dec
mov
xor
std
aam
repnz
mov
int3
daa
test
test
lods
hlt
sarl
mov
sub
jo
mov
bnd
push
neg
cmp
cmpb
sub
cmp
add
xor
sahf
xor
mov
popl
add
jnp
arpl
xchg
sub
sbb
adc
cmc
in
ja
rcr
or
mov
ja
adc
lock
inc
lods
subb
leave
xchg
add
clc
xchg
fs
faddp
xlat
push
cmpsl
adc
scas
daa
cmpsb
adc
lods
jne
jae
or
adc
sbb
iret
cmp
divl
sti
cwtl
leave
xor
jae
jmp
adc
jl
dec
pop
inc
insl
in
xchg
pop
in
stc
jae
les
add
push
mov
jmp
jne
out
add
test
enter
push
inc
dec
jae
add
push
scas
mov
test
pusha
shlb
add
jmp
inc
into
imul
cmp
je
sub
packuswb
or
xchg
aam
mov
leave
pop
cli
outsb
cmp
jo
jnp
mov
fyl2xp1
add
popa
out
loopne
sbb
aaa
push
jno
lods
pop
xor
shlb
sub
mov
add
cld
and
popa
mov
add
lods
dec
cmp
adc
mov
aad
mov
pop
push
outsl
mov
enter
ret
addr16
push
lret
stc
mov
in
mov
add
mov
rclb
mov
cmp
mull
add
jae
mov
repnz
loopne
cwtl
pusha
les
movsb
mov
out
xchg
idivb
mov
ret
cmp
ret
dec
clc
call
xchg
imul
mov
popf
cmp
ja
inc
push
cwtl
cmp
cmc
jns
add
xchg
clc
mov
mov
movsl
loope
outsb
pop
cmc
or
cvtdq2ps
ss
stos
and
insb
xchg
fwait
cmp
aad
sbb
or
int
sub
outsb
rcr
or
mov
and
add
jg
xchg
add
jle
imul
xchg
push
cmp
push
fwait
jb
push
aas
outsb
pop
adc
inc
cmp
mov
add
and
shll
out
xor
pop
es
lahf
ret
enter
sub
dec
mov
jb
inc
or
dec
add
push
lock
je
data16
mov
je
sub
inc
lea
sbbl
stc
std
in
mov
mov
std
pop
xor
in
jne
jmp
xchg
add
es
stc
jl
add
xchg
mov
pop
mov
mov
sbb
adc
into
mov
add
sbb
repnz
pop
pop
push
incl
xchg
adc
jns
into
adc
outsb
out
fstp
cmp
push
sti
dec
out
sbb
inc
scas
mov
mov
mov
push
sbb
push
jl
mov
or
int3
cmp
out
dec
cmp
mov
jg
addr16
add
es
and
adc
or
mov
mov
sub
ficomps
fldenv
mov
mov
sbb
push
push
fs
sbb
rcll
loopne
lcall
mov
test
push
jnp
jbe
in
sbb
scas
testl
stos
ficoml
pop
arpl
xchg
popa
scas
test
pop
rorb
dec
testl
pop
add
or
enter
or
outsb
and
or
das
or
imul
test
ficoml
into
das
sbb
ret
dec
ret
repnz
addr16
xor
cld
cmp
test
push
mov
movsb
scas
pop
xchg
xchg
jae
push
fisubs
stc
pusha
loope
dec
inc
repnz
mov
mov
jp
outsl
scas
jbe
out
pop
mov
inc
fcomp
push
push
dec
add
push
leave
rorl
scas
cmp
lret
cmpsl
ss
hlt
pop
jbe
test
push
add
jge
and
sbb
leave
pop
shlw
pop
sbb
fdivs
nop
js
out
jge
xor
fadds
ss
push
out
inc
dec
jno
mov
xor
aad
mov
push
adc
cs
jmp
mov
sahf
or
in
jbe
dec
sbb
fwait
aas
mov
lock
leave
ljmp
cwtl
pop
dec
mov
push
leave
mov
insl
hlt
cmp
mulb
repnz
out
sub
les
xor
mov
scas
in
jp
mov
rcrl
mov
lods
stos
jne
fistpll
insb
cltd
pop
lds
pop
divl
jns
pop
push
addr16
pop
jg
nop
imul
and
adc
rolb
out
sub
pinsrw
popf
jo
add
xchg
add
cmp
dec
xchg
sub
scas
sub
jp
cmp
xor
arpl
cmp
mov
int
icebp
mov
clc
scas
mov
mov
leave
aaa
imul
test
push
ljmp
push
jnp
inc
fsubl
movsl
jle
inc
std
mov
lcall
and
dec
cmc
jecxz
push
push
insb
adc
push
pop
jb
aaa
and
loopne
and
inc
int3
pop
mov
push
xchg
adc
lret
into
xor
or
scas
loop
xor
adc
fisttps
rep
adc
out
push
sbb
in
inc
dec
subl
lds
inc
sub
cmp
andl
sbb
xchg
push
dec
movsb
fistl
sarb
aam
sbb
cld
adc
lahf
rorb
sub
pop
mov
push
cmp
ret
repnz
dec
iret
rclb
push
or
adc
cli
insb
aam
mov
test
psraw
push
lods
testb
xchg
fstl
aas
mov
imul
cli
and
std
pop
xor
fidivs
data16
imul
mov
pop
idivl
push
test
or
js
push
hlt
sbb
cltd
jnp
dec
push
mov
add
jg
inc
xchg
pop
sbbb
mov
cmp
test
jno
xor
test
and
insl
jae
dec
and
stos
and
cli
mov
pop
fidivrs
mov
pusha
jo
inc
adc
mov
sbb
add
xor
fwait
stos
adc
aad
fdivrs
mov
adcl
adc
pop
lret
jo
mov
adc
push
rorl
fsubl
ret
lods
jb
icebp
mov
inc
inc
imul
mov
in
push
pop
decb
loopne
adc
sbb
je
mov
sbb
xchg
or
pop
jecxz
xchg
mov
mov
sub
xchg
les
add
add
sbbl
dec
and
jns
testb
add
into
outsb
add
mov
imul
test
cmpl
repnz
inc
inc
popa
data16
rcrl
xor
sbb
xchg
add
xchg
add
ljmp
jae
jmp
sti
cmc
fcmovnb
iret
pop
insl
out
fwait
pop
int3
cmp
push
dec
or
mov
xor
imul
insl
mov
add
or
and
fsub
fcmove
incl
sub
xlat
or
mov
jb
outsl
cmp
dec
sub
notb
ja
mov
cmpsl
outsl
xor
rcr
xorb
mov
inc
or
inc
lea
std
or
mov
test
or
adc
lock
add
cs
into
lock
add
ffreep
jl
push
sub
loopne
int3
sub
repnz
pop
jge
add
mov
movsb
xor
or
xchg
push
popf
pop
adc
ds
cmp
or
movsb
mov
repnz
mov
jg
cwtl
or
sub
or
arpl
nop
arpl
xor
mov
push
add
adc
pop
mov
enter
imull
mov
test
inc
dec
add
leave
data16
ljmp
jge
fstpl
pop
sub
or
xchg
add
push
sbb
int
mov
loope
jae,pn
fisttpl
ret
fwait
mov
lahf
test
test
stos
mov
aad
and
outsl
xorb
mov
push
das
mov
outsb
cmp
jg
int3
imul
push
inc
inc
lret
sub
push
xor
xor
push
hlt
sub
mov
mov
push
jno
data16
mov
sub
in
or
adc
mov
in
jb
lahf
dec
loope
insl
mov
jge
inc
cmp
inc
outsl
xor
push
xchg
movl
jo
and
cmp
repz
orl
and
dec
adc
cmpsb
push
rclb
mov
pop
adc
pop
mov
and
mov
adc
pushl
ds
xor
mov
pop
in
data16
fcmovnbe
sbb
mov
pop
shll
adc
dec
sar
shl
xchg
lahf
in
adc
mov
adc
mov
mov
dec
dec
out
mov
xor
rcrl
repz
cli
in
jg
loopne
mov
arpl
add
repnz
aas
rep
xor
pop
int3
ds
dec
rcrb
xor
push
imul
mov
cmc
or
and
mov
xchg
icebp
bound
mov
inc
dec
inc
and
lods
or
push
fcmovnb
mov
stos
insb
clc
xor
inc
loopne
andb
arpl
push
aam
ss
push
jbe
imul
ja
pop
cltd
dec
cmpsb
mov
lahf
lret
add
lahf
cltd
dec
aad
pop
dec
xchg
mov
jo
popl
adc
lock
xchg
into
xor
sarb
js
iret
or
push
shll
sub
in
movsb
stos
inc
inc
mov
pop
dec
jae
and
imulb
fldcw
sbb
jae
push
pushf
mov
repz
scas
pop
mov
dec
insb
imul
int
push
icebp
out
hlt
sub
mov
push
push
cmp
push
mov
out
adc
scas
stos
add
loope
sti
out
clc
rcrl
xchg
adc
pop
aaa
pop
adc
repnz
push
mov
dec
adc
cwtl
in
cmc
adc
cmp
and
cmp
repnz
incb
mov
imul
sbb
or
push
imul
mov
mov
sbb
cmp
bound
cmp
xor
add
xlat
pop
mov
test
pushf
int
ja
jbe
aad
lcall
jb
cmc
dec
add
imul
inc
bound
andb
shlb
mov
jns
shl
div
test
jmp
icebp
mov
adc
in
push
inc
clc
lahf
sbb
lcall
and
push
or
imulb
in
test
add
xor
arpl
stos
lahf
cmp
sub
repz
aam
rorl
pushf
ret
out
add
and
pop
and
push
jbe
outsb
cmpsb
aas
test
and
add
mov
sbb
mov
aam
test
and
lret
out
adc
or
popa
mov
pop
xor
xchg
bound
pop
dec
jmp
imul
inc
outsb
sahf
dec
jg
fwait
int
pop
add
shlb
xchg
lcall
cmpsb
and
pushf
add
xchg
add
adc
push
inc
xchg
jle
sub
jnp
xchg
mov
xchg
sbb
les
les
test
ficomps
ret
lahf
iret
push
push
mov
in
imul
push
ret
cmp
sub
int
inc
jl
sahf
into
jl
mov
jmp
push
or
or
enter
ljmp
jmp
inc
mov
and
jno
mov
sub
test
xor
xchg
push
sbb
repnz
lret
ljmp
andb
cmp
pop
daa
sub
lret
xor
movsb
hlt
scas
rorl
mov
pop
sbb
inc
loop
pop
sub
dec
loop
or
sub
mov
dec
pushf
pop
xchg
mov
fidivrl
loopne
pop
fistl
fcoml
dec
repnz
in
aaa
and
int3
js
mov
mov
mov
cmp
pushf
aam
xchg
push
cltd
scas
jne
adc
mov
lock
sub
pause
mov
stos
aad
mov
pusha
lahf
jae
aam
aas
test
sub
pop
cld
mov
lock
mov
popl
or
xchg
out
ljmp
xchg
ds
or
push
nop
lret
dec
xchg
sbb
jae
pop
les
movl
push
cmp
inc
inc
mov
add
jg
push
jb
mov
or
xlat
adc
in
leave
test
out
into
add
adc
cs
adc
movsb
repz
testl
mov
insl
stos
andnps
cwtl
jg
std
cmpb
push
ror
add
xchg
adcl
sub
add
fs
fiadds
sahf
imul
sub
jge
adc
add
push
xchg
ds
aaa
shl
mov
inc
cltd
icebp
dec
imul
jae,pt
ret
pop
loopne
push
sarb
jb
push
push
mov
test
fldenv
add
xchg
pop
xor
rcll
ss
push
mov
mov
mov
call
push
mov
fsubrl
stos
notl
add
popa
insl
sbb
imul
out
std
push
sbb
xor
xchg
clc
int3
popa
inc
xchg
lret
mov
add
cmp
mov
add
into
sbb
add
add
scas
xchg
sbb
or
call
cmp
cmc
mov
xor
ss
inc
lahf
scas
xor
fnsave
pop
mov
js
pop
xchg
mov
add
das
adc
push
lds
cmp
sbb
idivl
mov
hlt
xchg
pop
xor
cmp
xchg
shl
mov
inc
arpl
fstpl
sar
jbe
and
mov
stc
sbb
jecxz
lcall
test
outsb
xlat
jle
inc
mov
inc
cmp
push
data16
pop
add
test
push
pcmpgtd
cltd
cmp
loopne
les
fsubrp
pop
or
mov
ret
cmp
jp
fdivp
xchg
sbb
jmp
nop
push
jbe
cmp
ret
test
adc
pop
lret
lret
test
jge
cmpsl
loop
mov
es
movb
imul
popa
je
mov
mov
pushf
std
dec
out
pop
fwait
and
xchg
fisubrs
lret
lret
in
adc
arpl
call
ljmp
outsl
dec
xchg
adc
push
icebp
movsb
xor
xchg
inc
cmp
fwait
js
adc
fs
lret
inc
call
arpl
cmp
loope
inc
jge
les
push
idivb
into
push
ret
mov
mov
xchg
mov
jg
mov
push
mov
pop
verr
pop
lods
es
xor
notb
lcall
mov
mov
add
sub
loopne
and
pop
inc
and
mov
push
stos
jecxz
mov
mov
bound
push
dec
mov
and
add
popf
jno
mov
jo
repz
mov
fs
sub
lods
hlt
dec
out
xchg
xor
stc
push
mov
jbe
jns
sti
dec
pusha
cs
jge
and
inc
cmp
hlt
iret
mov
fildl
inc
popa
mov
fdivrl
call
lret
out
mov
mov
mov
loope
sarb
lods
rolb
mov
scas
pop
push
and
jmp
push
stos
push
lea
push
mov
iret
stc
jb
out
jp
stos
scas
lods
popf
int3
arpl
and
jl
loop
mov
ficomps
mov
into
in
leave
add
mov
fwait
add
inc
mov
and
push
mov
add
cmp
pop
loope
cmp
popf
data16
mov
out
adc
inc
nop
out
cmp
mov
adc
push
orb
xor
push
ret
data16
fidivl
xchg
or
push
addl
addr16
aas
jmp
push
push
xor
je
test
insl
icebp
xchg
daa
lret
sbb
xchg
fcmovnb
pop
push
jle
jno
and
rcll
aad
leave
out
mov
mov
ficoms
stos
aas
mov
rclb
pushf
das
or
loope
sahf
and
push
je
mov
xchg
dec
ficompl
inc
lret
movsb
push
cmpsb
ds
jmp
pusha
rcl
ds
int3
stos
mov
mov
push
mov
fs
mov
mov
mov
lock
or
xchg
pop
inc
xchg
or
insb
cli
bound
xor
testl
jle,pn
aam
movsb
cld
mov
pop
or
jmp
lret
clc
movsb
jne
mov
notb
dec
push
xor
cmp
xor
mov
out
popl
push
xor
lock
in
or
sub
iret
or
loopne
pop
inc
xchg
in
movd
push
and
sbb
sbb
mov
add
out
cmp
mov
aam
sbb
lea
mov
loopne
aas
adc
clc
jl
mov
mov
dec
add
jne
ja
xchg
sub
out
in
dec
pop
fildll
cltd
in
les
ficompl
insb
adc
xor
testl
fisubl
mov
jmp
dec
adc
push
mov
jbe
inc
js
pop
mov
push
mov
cmp
dec
fstps
fcmovb
jae
shl
lcall
and
fnsave
lods
dec
or
mov
int3
xchg
jb
pusha
pusha
mov
and
mov
aas
push
popa
in
roll
repnz
bound
sbb
cs
sti
cmpsl
loop
inc
push
cmp
xor
inc
notl
test
sbb
jne
sbb
scas
jl
inc
mov
adc
mov
lcall
cltd
jle
or
push
sub
stos
cmc
repz
adc
imulb
xlat
cli
push
sub
mov
push
subb
sbb
jge
bswap
or
add
mov
cmp
jle
xor
les
add
in
call
cli
sub
cs
gs
jns,pt
or
add
jo
inc
mov
xchg
xchg
push
sbb
pop
or
push
scas
int
sub
pop
lret
xor
and
xor
lods
incb
push
addl
fiaddl
out
sahf
out
and
dec
xchg
or
add
shrl
push
es
push
out
lcall
add
mov
adc
xor
fsubrp
dec
ret
adc
jbe
notl
enter
imul
test
jp
fwait
xor
sbb
aas
subl
inc
sbb
icebp
mov
fcomps
jb
push
lret
je
sbb
and
in
adc
pop
jae
adc
out
in
mov
pop
fldenv
dec
dec
inc
imulb
rcrb
notb
xor
add
jno
rclb
lret
fidivs
frstor
test
sbb
sbb
inc
adc
lahf
mov
repz
sub
lret
rclb
notl
jp
xchg
nop
lret
mov
xchg
hlt
testb
xor
or
mov
int3
or
inc
addr16
repnz
push
int3
lods
push
dec
push
dec
mov
mov
mov
jne
popf
add
inc
loope
or
out
xchg
jns
push
movsb
push
shrb
out
adc
ret
lcall
add
sbb
pusha
mov
lret
aad
push
pop
adc
aaa
scas
sub
cmp
sbb
xchg
xor
pop
xor
lock
into
adc
rcll
or
cmpsl
hlt
inc
fidivs
ljmp
sbb
iret
fisubrs
mov
data16
xchg
popf
dec
jmp
mov
aaa
xchg
mov
push
movsb
sub
inc
pop
push
fidivs
rclb
mov
push
aam
scas
push
sbb
mov
insb
jno
pop
pop
je
call
jecxz
pop
shrl
imul
and
jp
xchg
es
fistpll
xor
inc
jne
add
cmp
out
idivl
mov
sub
cmpsb
add
xchg
add
jb
mov
std
xor
mov
sbbl
int3
mov
repz
out
lods
cmovns
cwtl
inc
aas
into
fld1
lea
les
mov
shrd
loopne
call
jne
inc
cmp
inc
call
and
sub
inc
leave
mov
adc
shlb
mov
ljmp
rclb
outsl
hlt
push
fidivrs
loop
jp
cmp
sti
sub
mov
stos
and
dec
sbb
or
inc
test
cwtl
cmpsl
adc
jmp
cmp
add
mov
mov
fistpl
inc
insb
push
add
sbb
push
nop
mov
mov
jns
loope
push
bound
subb
in
js
dec
out
mov
add
jb
iret
add
add
add
iret
frstor
ljmp
mov
jg
cmp
pop
xchg
and
lods
enter
fwait
movsb
movsl
mulb
jge
repz
out
and
and
xor
jge
mov
mov
loopne
scas
mov
sub
sub
cmp
dec
lcall
mov
lret
out
jle
mov
pop
sub
es
jns
mov
arpl
ret
sub
in
sbb
jmp
movsb
push
mov
pop
jns
into
sub
sbb
or
mov
mov
mov
and
dec
les
out
out
mov
inc
and
cmpsb
es
incb
ss
insl
ret
addr16
pusha
incb
sub
pop
out
in
adc
push
into
hlt
xchg
fimull
cwtl
popa
js
pop
popf
dec
xchg
daa
sub
xor
mov
jl
xlat
shlb
adc
and
aaa
adc
daa
xor
and
loopne
or
mov
mov
pushf
rorb
int
adc
dec
add
adc
das
mov
dec
int
and
bound
inc
repnz
or
out
and
ljmp
mov
iret
es
lods
cltd
pop
mov
test
imul
push
sbb
sbb
rcll
roll
add
dec
das
add
gs
fcompp
out
gs
testb
ja
test
add
leave
rolb
push
push
pop
pop
andl
std
xchg
and
imul
xor
jb
je
pop
and
std
les
das
pop
dec
imul
lock
iret
adc
dec
jbe
xlat
mov
pop
imul
insl
or
das
jle
add
xchg
ja
push
aas
mov
ja
fisubl
push
pop
sub
test
outsb
aad
mov
pop
lock
pop
aam
fistl
dec
mov
push
jne
outsb
scas
imul
mov
add
fcoms
iret
sahf
cmpsl
std
xor
fisttpll
xchg
std
adc
jp
xchg
xchg
mov
call
jl
icebp
call
es
test
cwtl
fsubp
loope
inc
sub
mov
jne
dec
and
cmp
or
push
aam
pop
je
sbb
mov
fidivrl
aas
pop
scas
pop
mov
xorl
das
aas
dec
out
out
loope
dec
addl
jne
out
mov
push
sbb
push
mov
cmc
pushf
in
lods
or
iret
jecxz
push
call
xchg
mov
add
gs
adc
inc
fsubrp
clc
inc
pusha
scas
stos
push
add
xor
rorb
lds
divb
inc
ja
js
repnz
stos
add
test
add
notb
or
hlt
stos
fs
daa
lods
mov
add
scas
pop
mov
push
xor
mov
dec
push
and
cmc
mov
in
pop
test
push
mov
sbb
adc
and
test
sahf
pop
jg
fstl
lods
push
lock
add
pushf
cmp
js
or
ja
and
xchg
aam
nop
js
pusha
es
rep
fisubrs
loop
es
aaa
je
jb
jnp
mov
mov
jmp
dec
mov
jp
int
xchg
out
lea
bound
loope
shll
push
xchg
out
icebp
in
loop
sti
stos
movsl
pop
push
sub
hlt
adc
and
shl
out
xchg
mov
ljmp
xchg
in
add
dec
jp
add
fsts
add
cs
cmp
cs
push
mov
add
adc
add
aad
pop
dec
and
ljmp
test
add
fsubs
jmp
adc
sub
fists
stos
add
xchg
add
and
nop
inc
push
bound
sti
shld
cwtl
insl
push
and
iret
push
mov
orl
sbb
cmp
push
js
jb
jnp
jnp
roll
je
stc
out
jns
jbe
sahf
hlt
fiaddl
inc
jbe
scas
pop
fwait
rclw
das
adcb
inc
aad
not
push
mov
ret
or
inc
daa
fcompl
mov
cmc
sbb
rcrl
rolb
or
mov
cmp
xchg
or
xor
xchg
repnz
jge
sbb
test
pop
jl
add
xchg
inc
pop
adc
push
xchg
das
outsb
cs
imul
call
out
ret
cmp
inc
ljmp
sub
xchg
sarb
fwait
push
inc
scas
loope
jo
sar
push
jge
test
lods
aaa
in
or
divb
movsb
sub
outsb
leave
aad
sbb
mov
imul
roll
vpor
or
sbb
imul
mov
mov
add
imul
sarl
stos
outsl
arpl
aaa
mov
adc
cmp
push
or
xor
addr16
outsb
push
jp
shl
inc
inc
jmp
mov
cmp
fmuls
sub
xor
pop
push
addl
adc
mov
in
sbb
mov
sub
push
mov
sbb
push
jge
xchg
jbe
pushf
push
iret
dec
mul
push
jbe
cmp
dec
enter
dec
xchg
les
lret
shr
in
ficoms
mov
pop
push
sbb
xchg
sub
sahf
ret
inc
inc
clc
imul
mov
jmp
mov
mov
adc
mov
popf
leave
xor
roll
xchg
xchg
jle
adc
inc
js
stc
pushf
loope
pop
jb
push
or
mov
cmp
test
inc
and
lcallw
std
jge
scas
ljmp
hlt
mov
std
scas
stc
mov
cmp
xorb
dec
enter
ds
fdivrl
xor
inc
sbb
cmp
xor
icebp
repnz
in
mov
sarb
imulb
sbb
mov
xlat
mov
and
and
or
fdivs
mov
mov
add
and
xor
nop
sub
lods
add
xchg
add
sub
ljmp
test
mov
add
ss
sbb
xchg
cwtl
xor
adcb
lock
in
jbe
mov
mov
mov
push
jbe
out
inc
jb
clc
ljmp
test
pop
pushf
or
bound
push
jp
add
inc
pop
test
inc
push
jo
out
cmpsl
pop
and
dec
js
cmpb
jp
out
fdivrl
stos
fsubl
in
inc
add
sti
les
mov
fisttps
sub
out
mov
push
cld
jp
mov
dec
xchg
xchg
scas
loopne
push
cs
jge
enter
push
dec
cmp
and
mov
push
test
or
or
and
ss
popa
and
push
push
sub
xchg
cmp
movsb
push
dec
mov
and
add
repz
xchg
mov
mov
mov
mov
push
sahf
cmp
and
add
jp
movsb
std
adc
mov
xchg
adc
call
testl
or
cli
stc
jns
mov
add
setge
add
cmp
clc
mov
jno
mov
mov
sbb
lds
pop
xor
dec
mov
roll
pop
inc
andl
push
icebp
fwait
icebp
mov
xchg
std
addr16
mov
popa
xchg
and
loopne
arpl
and
test
jb
mov
xor
lret
int3
jnp
stc
repz
sbb
movnti
hlt
push
mov
adc
add
pop
int
fs
in
adc
sbb
mov
loope
enter
mov
fnstcw
push
rcll
mov
cld
mov
iret
cmc
ljmp
sbb
sbb
ret
sub
cmpsb
fwait
mov
clc
adc
insl
cmp
adc
pop
mov
sub
incl
je
scas
pop
je
iret
dec
cmp
mov
pushf
shl
fldcw
add
inc
add
mov
push
or
test
or
imul
and
sbb
and
arpl
fdivrl
popa
hlt
mov
xorl
add
xchg
add
and
lods
in
mulb
rcrb
nop
or
sub
and
in
mov
adc
sbb
dec
movsl
sub
mov
gs
push
test
mov
cmpsb
inc
add
pop
cmp
sbb
add
push
add
movsb
daa
xchg
xchg
fwait
sbb
dec
leave
adc
xchg
add
mov
mov
dec
jne
push
fdivrs
popf
orl
ds
test
xchg
cmpsb
ficomps
enter
nop
push
cli
scas
decb
cwtl
inc
out
xchg
dec
jp
loope
movsb
sahf
xchg
inc
rolb
jmp
arpl
aaa
lahf
cs
test
jb
rcrl
ret
lods
jae
lea
in
imul
inc
mov
nop
mov
loope
pop
inc
jle
es
add
cmc
mov
gs
or
bswap
ret
inc
jno
mov
inc
jno
xlat
insb
push
pop
mov
andl
dec
ljmp
enter
push
jg
pop
mov
loope
neg
or
jp
dec
stos
push
pop
adc
xchg
out
shlb
jge
or
insl
push
pusha
aas
or
xor
cmc
push
aaa
cli
mov
enter
xchg
inc
mov
jmp
popf
jge
mov
and
xor
and
mov
and
fwait
adc
stos
scas
xor
addr16
and
test
xor
mov
add
stos
adcb
sbb
pop
out
stc
outsb
cmp
in
pop
repz
js
shll
push
adc
xchg
insl
loopne
fisubs
push
or
pop
add
test
push
scas
leave
xor
push
ljmp
dec
test
bound
ficompl
push
push
jg
inc
inc
btl
push
in
fnsave
fstpt
sti
test
cmp
sbb
mov
push
pop
mov
fimull
mov
add
ret
lret
mov
jl
xor
cmpsl
adc
sbb
push
pop
mov
inc
and
push
call
je
outsb
imul
lock
lods
sbb
jae
lcall
xlat
mov
pop
icebp
ss
pop
insl
xchg
mov
dec
daa
cmp
inc
xor
dec
ret
loope
ffree
mov
add
inc
push
pusha
jbe
out
fnstsw
mov
add
xchg
add
sahf
or
and
add
xor
iret
xor
out
in
sbb
lret
js
jl
andb
sub
pop
in
add
popf
add
sbb
iret
ret
fnstcw
push
dec
cmp
call
sbb
fistpl
push
and
ss
cmp
or
sub
xor
sarb
jo
xchg
icebp
addr16
fiaddl
jp
mov
ret
insl
fdivl
in
nop
mov
lods
in
xor
stos
lea
daa
sbb
fisubl
pop
adc
push
ficompl
out
insl
mov
jo
gs
pop
sub
sbb
sbb
sbb
mov
add
cmpsl
mov
mov
jno
in
call
vlddqu
inc
adc
adc
or
xor
data16
jbe
sub
xchg
js
mov
xor
enter
jbe
mov
cltd
push
enter
decl
xor
imul
lretw
je
jge
int3
addb
jle
test
push
pop
data16
or
hlt
mov
jecxz
push
ja
cwtl
and
cmpsb
xchg
mov
mov
fs
dec
shrb
mov
mov
inc
mov
lret
and
jo
mov
in
push
into
xor
jmp
sub
test
shl
inc
icebp
cmp
in
aas
pop
mov
push
stos
in
push
lea
scas
or
inc
lods
add
mov
inc
and
rcll
fcoml
data16
les
inc
xor
mov
out
mov
cmpl
shrl
in
xor
xor
call
in
xchg
or
inc
cmpsl
cmp
pushf
aam
popf
lret
jle
iret
dec
test
mov
pop
pop
push
arpl
jae
push
movb
stos
sbb
sbb
and
dec
out
mov
imul
call
jge
aad
and
lret
fdivs
push
dec
call
in
fdivs
insb
ja
push
xchg
imull
insl
inc
dec
xor
aaa
xchg
add
pop
enter
add
pop
lcall
inc
adc
lret
ds
add
cli
insb
and
imul
addb
jo
outsl
mov
push
mov
lcall
sbb
jno
fsubl
sub
out
lds
test
repnz
fwait
cwtl
aad
dec
mov
lret
shl
sub
ret
ja
js
cmp
fildl
je
mov
sub
shlb
imul
push
loopne
test
rcrb
lods
fs
cltd
fdivrl
sub
and
cltd
pop
ret
xor
mov
cmpsb
xlat
loop
adc
dec
inc
icebp
mov
pop
mov
or
stos
xor
pushf
xchg
mov
lea
pop
sbb
fnstsw
fwait
or
or
jg
cmp
inc
clc
fstps
jl
adc
jle
pop
sbb
dec
mov
dec
jns
add
dec
xchg
int3
addr16
aas
jns
fs
orl
aas
mov
inc
mov
or
pusha
cmp
xor
jg
jo
stos
mov
or
xor
xlat
xorl
sub
xchg
inc
popf
mov
push
lahf
data16
call
sbb
push
mov
and
cli
or
push
pusha
inc
insl
test
jmp
nop
loop
lcall
push
inc
mov
rep
int3
hlt
bound
mov
aas
jg
rol
adc
bound
cs
repz
stos
fstl
jae
rcll
fiaddl
xchg
or
xor
mov
jne
inc
inc
sub
mov
je
adc
stos
xchg
inc
add
jmp
or
lahf
mov
sbb
mov
pop
bound
inc
test
push
dec
loope
inc
sub
hlt
addr16
adc
icebp
sahf
or
js
in
imul
mov
lcall
inc
scas
pop
xchg
test
pop
inc
mov
and
sti
or
je
ret
movsb
into
add
ja
or
mov
inc
in
lahf
outsl
mov
xchg
lods
fdivl
inc
pop
negb
dec
sarb
stc
jmp
ret
sarb
cmp
push
and
push
pop
push
ljmp
pushf
repnz
rolb
inc
in
shrl
and
dec
mov
add
insb
sub
outsl
daa
insl
push
push
stos
adc
dec
push
jns
mov
add
add
adc
pop
xchg
outsb
inc
pop
sarl
push
popa
rcll
xor
mov
fnstcw
adc
lret
add
sub
adc
mov
pusha
add
aas
aam
push
es
out
dec
lods
fidivs
cmp
shrb
inc
jp
jbe
sahf
or
mov
decl
mov
and
adc
int
xor
imul
mov
sub
inc
shl
jle
out
dec
inc
xchg
adc
idivb
shll
xchg
rcll
fwait
jae
adc
cmp
or
cmpsb
xchg
dec
add
in
sbb
and
loopew
dec
pushf
leave
dec
imul
pop
lahf
and
shlb
ds
jle
cmp
jno
xchg
push
add
mov
test
inc
mov
and
sbb
inc
mov
xor
insb
cmp
jge
add
out
pop
mov
jne
push
jl
jne
enter
mov
add
nop
xor
into
loopne
cmp
ja
adc
aas
inc
cwtl
cmp
nop
out
pop
loop
push
mov
mov
popa
pop
shll
jl
push
shl
fldt
xchg
loopne
test
cmp
pusha
subl
push
test
pusha
mov
ret
es
inc
mov
fbstp
fbld
push
push
xor
cmp
pop
ljmp
and
ss
icebp
xchg
or
xchg
jecxz
add
or
lea
fisttpl
dec
mov
or
rclb
aas
push
nop
nop
cmc
rcl
je
add
jge
in
nop
cmpsl
test
adc
call
push
sti
xor
lret
dec
stos
pusha
add
sarb
adc
push
pop
inc
lea
jle
fnstsw
mov
shlb
dec
sbb
cld
lock
ret
mov
sar
pop
lods
in
loop
fcom
add
stos
fcomps
outsb
loopne
inc
pop
fmuls
in
mov
sarl
push
adc
jg
out
iret
cmp
jge
pushf
xor
ja
jne
mov
or
mov
outsb
ss
push
ljmp
cmpsb
adc
sub
std
add
inc
lea
and
mov
out
add
lods
nop
dec
mov
add
adc
imul
lret
loope
fdivl
fcoml
lret
inc
xor
xchg
loopne
dec
push
leave
pop
mov
fwait
shrl
unpckhps
repz
ret
dec
sbb
add
xchg
repz
aam
dec
sbb
push
popl
aad
loope
jg
sbb
sbb
ret
jno
sahf
cmp
xchg
enter
jmp
or
sub
sti
xor
jb
dec
cmp
shl
insl
je
adc
das
addb
in
aam
xchg
push
les
push
sbb
out
in
sub
js
jns
push
cmp
cmpb
lock
add
test
and
xchg
sbb
imul
aad
je
decl
daa
inc
in
icebp
cmc
push
lock
mov
lock
aas
mov
cmc
mov
into
xchg
fldcw
dec
and
xchg
shr
jge
gs
jmp
push
pushf
fwait
inc
adc
jnp
nop
rolb
enter
dec
dec
xchg
pop
pusha
push
sbb
aaa
mov
or
fmuls
add
sbb
inc
cli
or
lret
and
ret
dec
sbb
fiadds
shlb
ret
pop
inc
pusha
frstor
pop
mov
fidivl
leave
cld
popa
sbb
and
sbb
sub
fnstenv
insl
dec
dec
mov
lods
mov
jp
movb
mov
pusha
adc
es
into
jecxz
or
push
loopne
and
or
jb
orb
cmp
or
mov
stos
mov
mov
lods
pop
adc
pop
movsl
fwait
mov
mov
xor
adc
insb
sbb
ret
mov
mov
xchg
sub
ja
xor
lock
mov
outsl
les
outsl
jecxz
xor
inc
sub
mov
pop
push
or
jnp
je
fadds
lods
out
cmp
cs
sub
and
addl
cwtl
decb
inc
push
mov
gs
scas
das
dec
or
movsb
leave
pop
stc
push
jne
popa
test
add
test
cmc
mov
push
ss
fcomp
lock
inc
testb
mov
int
jnp
xchg
sbb
mov
aad
bound
pusha
or
cmp
mov
cmc
or
icebp
sarb
add
mov
aam
out
ss
ljmp
pop
fisttps
inc
sub
aad
dec
inc
add
cmp
add
aam
jmp
and
insb
cmp
shlb
lea
mov
mov
movsl
xlat
cmp
xorl
test
int3
mov
inc
ss
mov
and
ret
pop
xchg
inc
stos
cmp
push
xor
aaa
pop
inc
cmp
mov
jne
fists
dec
loop
and
jp
shll
mov
repnz
or
lret
pop
inc
aad
rcll
int3
faddl
add
lret
stos
fwait
aad
xchg
lock
int3
dec
add
xor
outsb
test
xchg
bound
lea
test
cmpb
arpl
mov
cmp
and
mov
ljmp
fwait
xor
das
ficomps
xor
rcl
dec
out
shlb
jb
and
popf
mov
test
dec
pop
loopne
xchg
das
xorl
pop
out
cli
rcrb
push
cmp
push
push
pushf
push
imul
loopne
jl
add
ficoml
sub
mov
push
out
push
xor
mov
xor
dec
xchg
mov
daa
pop
and
inc
xchg
push
rorl
lret
sbb
imull
mov
out
mov
add
je
and
pop
adc
cmp
movsl
add
cmp
es
cmp
lods
and
rolb
aaa
icebp
mov
or
adc
mov
mov
aam
dec
adc
push
xor
adc
insb
sub
jp
push
scas
jno
in
das
in
dec
int3
popa
inc
jnp
roll
test
pop
fisubrs
mov
or
js
incb
push
inc
arpl
add
sbb
xchg
in
pusha
and
sbb
fwait
inc
dec
movsl
jnp
sub
mov
negl
and
adc
pop
test
fists
int3
lahf
into
and
xor
movsl
mov
movb
cltd
imul
pop
inc
mov
iret
cmp
dec
jge
sbb
add
adc
push
jae
cmp
insl
mov
nop
fimuls
lcall
mov
dec
lods
test
mov
and
out
push
add
push
ds
outsb
sbb
mov
leave
icebp
push
mov
add
cmc
xor
sub
add
aam
popf
leave
aaa
fisubl
rcll
enter
or
cli
sbb
xor
scas
xorl
jg
mov
jns
in
sub
and
push
faddl
mull
out
xor
lods
push
cwtl
xlat
mov
dec
pop
jbe
js
stos
bound
xchg
mov
test
pushf
adc
movsl
stos
or
and
jns
dec
jne
mov
lock
inc
push
jb
ljmp
test
push
mov
mov
ret
in
gs
lds
sbb
div
in
mov
jae
stos
pop
inc
mov
inc
movsb
icebp
hlt
sti
lods
fwait
lods
sbb
repnz
or
and
stos
fwait
pop
mov
in
lods
jge
jne
in
mov
push
xadd
jbe
aad
push
icebp
cmpsb
jg
rorb
pop
jno
inc
push
sbb
mov
scas
sub
lods
dec
mov
xchg
sub
jge
jmp
inc
cmpsb
jp
fwait
les
lret
sub
in
fwait
or
xor
mov
data16
mov
add
xchg
outsb
dec
popf
dec
push
dec
fstpt
push
lcall
enter
mov
adc
or
mov
push
or
sub
sbb
stos
sub
jg
jl
jmp
xor
rcrl
and
or
push
adc
inc
cmp
push
bound
push
gs
cwtl
pushf
leave
fidivrl
stos
addr16
pop
cmc
sub
lods
fs
fs
cwtl
popf
loope
repnz
sub
filds
jmp
sub
loope
adc
push
leave
xor
push
mov
mov
insb
lods
rorl
mov
jne
je
sbb
push
sbb
or
xchg
dec
sbb
lahf
push
popa
cmp
and
or
outsl
jge
cmp
xlat
inc
xchg
xor
lock
ja
xchg
xchg
jne
cmp
sbb
lret
repz
cmp
popl
and
sub
rcll
pop
jns
and
int3
lds
fidivl
test
push
mov
aad
pop
sbb
out
cmp
pop
push
mov
xchg
cld
push
or
les
les
mov
push
pop
insl
xchg
pop
cmpsl
cmp
add
mov
mov
xor
roll
xchg
add
out
test
je
daa
add
pop
pop
jle
lock
cwtl
pop
cmp
inc
xchg
xchg
add
loop
adcb
mov
add
mov
dec
sti
add
push
jae
loope
mov
sub
sub
jl
mov
subb
leave
in
push
fists
lcall
bound
jnp
mov
lock
xchg
movsl
mov
movsb
cltd
xchg
cmp
push
pop
rorb
ja
dec
leave
loop
int
pop
adc
xchg
xor
mov
mov
push
in
orb
sahf
sbb
jnp
mov
jb
loopne
push
xchg
shrl
push
out
inc
mov
popf
in
mov
fs
andb
or
mov
inc
inc
cmp
xor
mov
jns
or
dec
push
push
xchg
jbe
jg
adc
inc
mov
jae
std
mov
imul
ljmp
jne
xor
sbb
mov
cmp
sbb
adc
add
pop
lcall
cmp
dec
xor
mov
push
aaa
inc
decl
shll
lods
pop
and
aaa
pop
das
iret
push
and
cld
fcmovne
mov
enter
mov
shll
mov
je
out
lods
fs
xor
insb
or
mov
pop
mov
movsl
fs
or
and
test
jo
out
scas
add
aas
jae
test
mov
jmp
sub
jo
hlt
rcrb
es
in
in
out
out
push
hlt
mov
cs
sub
lahf
xlat
inc
arpl
out
cmpsl
cmc
or
inc
push
test
dec
lahf
out
aad
ficoml
xchg
pusha
pop
or
cs
dec
add
dec
dec
lock
stos
ja
ss
cmp
pmaxsw
sbb
outsb
pop
xchg
adc
cmpb
push
mov
jno
push
fldenv
mov
or
jne
xor
leave
lret
xor
pop
xor
dec
push
fmuls
lods
fstpt
addl
push
push
ljmp
mov
dec
hlt
lret
add
and
xchg
pop
mov
xor
add
cli
insl
enter
scas
setnp
sub
lock
adc
mov
push
cmp
add
mov
in
stos
clc
adc
popa
stos
les
add
je
jmp
push
mov
pop
xchg
sbb
iret
mov
mov
insl
sahf
xchg
stos
test
or
and
ficoml
xchg
inc
mov
test
lock
fisttpl
in
cmpsb
jmp
std
inc
mov
cmp
xor
fcmovne
shlb
dec
xchg
or
daa
xor
loopne
push
rclb
and
or
and
jg
out
je
mov
gs
stos
lcall
sbb
filds
adc
hlt
push
sub
loop
xlat
ret
sub
jb
insl
jmp
mov
mov
xlat
icebp
sub
shrb
cmp
popf
sbb
mov
push
xor
mov
stos
pop
icebp
aam
pop
inc
and
lods
sbb
cld
in
and
add
push
adc
or
rorl
arpl
jge
or
insl
lret
ja
pop
push
and
seta
and
dec
test
rorl
mov
fimuls
cld
or
rcrl
pop
dec
mov
push
ljmp
push
nop
lock
cmp
and
or
cmpsb
xchg
loop
mulb
sub
roll
mov
mov
fwait
sub
sub
aaa
cwtl
mov
xlat
dec
adc
jno
int3
and
jmp
add
das
cmp
sbb
sbb
xchg
sti
sahf
cltd
lret
cltd
jge
nop
or
adc
aaa
sahf
mov
lea
add
test
dec
lahf
popa
stos
xor
std
sub
fstl
xor
jecxz
addr16
push
out
mov
pushf
aas
repnz
in
ja
rcl
inc
icebp
mov
ds
mov
pop
outsl
pop
cmp
jbe
imul
jmp
ret
arpl
xchg
mov
fisubrs
scas
int
das
add
call
mov
stc
ds
cmp
xchg
xchg
stos
lcall
into
push
xchg
scas
gs
std
jl
mov
mov
int3
pop
xchg
push
inc
inc
shll
and
popa
or
jge
jge
daa
push
std
dec
cmpsb
inc
jne
adc
push
jo
inc
loope
mov
lret
cwtl
gs
cmp
or
mov
rcr
test
mov
add
stos
jo
dec
cli
fldcw
loopne
shl
mov
movb
xchg
add
call
mov
cmpsl
add
jmp
lcall
int3
int
xor
xor
push
mov
mov
mov
cld
jae
pop
fdivr
nop
push
ds
call
mov
mov
mov
sub
shl
int3
rclb
insb
std
mov
xchg
fisttpll
and
mov
or
icebp
mov
test
fs
push
adc
inc
arpl
pop
mov
xchg
cmp
lret
inc
mov
cmp
jmp
mov
pop
mov
cmc
lret
popf
leave
cmc
push
jge
shr
push
daa
outsb
inc
inc
addl
pop
cmpsl
pop
mov
mov
loop
xchg
xchg
bound
jae
pop
pushf
je
mov
enter
jae
loopne
subb
xor
out
hlt
das
sahf
inc
push
sti
sub
pop
aas
lcall
addr16
pushf
scas
jnp
pop
cli
mov
jl
xchg
cmc
dec
fidivl
test
test
add
adc
ss
mov
adc
sub
push
sub
jecxz
int3
inc
mov
mov
mov
hlt
pop
mov
add
ret
rcl
inc
jmp
jns
nop
push
mov
in
testb
lcall
test
sbb
push
jnp
das
shll
leave
sahf
mov
pushf
je
shl
call
mov
sub
sti
adc
mov
clc
cmp
jb
push
pop
test
xor
es
ljmp
mov
jnp
or
pop
inc
fstpt
fxch
add
push
push
xchg
fidivs
call
pop
data16
xor
imul
enter
shlb
stos
pop
ss
jge,pt
lret
js
cmp
mov
inc
jmp
stos
iret
data16
and
mov
daa
js
push
jae
add
xor
sub
mov
mov
sub
adc
dec
sub
fnstsw
rcrl
stc
push
dec
cwtl
stos
fisubrs
mov
jne
and
int3
addb
sub
mov
jbe
push
xchg
adc
push
inc
stc
push
mov
push
fstpl
cmp
mov
pop
and
hlt
out
jmp
popf
aas
shrb
cmpsl
scas
mov
add
xor
rol
mov
add
push
dec
pop
xchg
js
mov
outsb
leave
add
xchg
add
adc
cltd
mov
xor
subb
fs
outsb
je
lret
dec
movb
cs
push
adc
arpl
mov
jne
xchg
out
or
mov
and
rcl
inc
xor
insb
notl
test
xor
jb
sbb
in
pop
xlat
leave
jno
ljmp
mov
aad
sub
cmpsb
inc
aad
xchg
sub
jnp
testl
cmpsb
loope
and
dec
push
or
add
idivb
addr16
in
rolb
stc
test
dec
or
fimull
scas
sarl
pushaw
sahf
push
mov
mov
mov
jae
sub
mov
cmp
out
add
sub
push
mov
push
jmp
sbb
loope
mov
cld
out
mov
fbstp
xchg
mov
fcmovnu
sub
imul
inc
or
lock
pop
mov
jo
pop
pop
std
aam
mov
mov
mov
adc
inc
mov
pop
jge
inc
pop
int
imul
pop
xchg
rolb
cmc
sub
cmp
mov
enter
test
jecxz
sub
aaa
mulb
jb
inc
sbb
lret
loope
mov
sbb
stc
xchg
ret
rolb
sub
xchg
and
mov
xor
sub
add
andl
ret
add
shrb
or
fs
stc
aad
push
aam
enter
mov
jb
je
inc
jo
aaa
sbb
xor
push
imul
push
sbbb
sbb
daa
movsb
int3
enter
mov
addl
mov
and
pop
pushf
stos
pop
and
in
sbb
xchg
aas
addl
mov
mov
loope
sub
jbe
popf
hlt
ljmp
idivb
sbb
dec
dec
sub
in
popa
repz
or
dec
mov
and
dec
dec
gs
adc
cmp
xchg
xor
test
ret
xchg
sub
loope
jno
int3
lret
xor
repz
mov
cwtl
dec
dec
mov
pop
dec
add
or
dec
mov
jo
sar
mov
hlt
lret
add
xchg
add
insl
arpl
das
cmpsb
fistl
and
das
pop
scas
popf
jl
push
stc
into
dec
xor
sahf
add
dec
add
fisubrl
jae
mov
movsb
push
sub
inc
add
adcb
push
push
js
and
or
idiv
xchg
dec
mov
xchg
add
cmp
testb
aaa
out
and
mov
lahf
outsl
pop
xchg
pop
jns
fs
rolb
popf
shrl
xchg
pop
int
jge
and
data16
or
in
insb
gs
jae
pop
call
popf
mov
cwtl
inc
sbb
pop
add
insb
and
pop
rcrl
add
iret
les
daa
nop
push
sarl
pop
mov
add
mov
popf
push
insl
fldenv
xchg
xchg
add
popf
hlt
mov
jb
out
lock
jbe
sarb
cld
sub
shl
mov
arpl
ja
xor
stos
rol
mov
jg
jne
cmp
mov
xor
aas
and
fs
jp
mov
icebp
cmp
nop
cmp
mov
xor
or
mov
js
cmpl
mov
push
mov
cmpsl
lods
xchg
inc
fisttps
sar
push
fucomi
dec
push
hlt
dec
mov
xor
enter
rcl
push
sub
xor
cmp
fcmovnbe
mov
lea
or
add
mov
pop
and
mov
mov
pop
xchg
lret
sbb
fwait
dec
es
jg,pn
inc
sbb
cs
push
std
aad
out
int3
test
xchg
adc
fchs
push
jle
gs
mov
iret
push
loopne
jns
lret
cmp
xchg
gs
nop
sub
ret
and
inc
negb
adc
call
mov
lds
cmp
dec
jge
je
xchg
mov
jl
lea
aaa
fs
xor
cmp
pop
lahf
pop
pop
pusha
lret
sbb
sub
sbb
xor
mov
fbstp
pop
in
les
xchg
nop
mov
cs
dec
add
and
jp
pusha
ret
push
add
out
mov
mulb
cmp
add
and
dec
repz
fldt
and
add
xchg
add
mov
jecxz
pop
or
or
outsb
push
push
js
inc
sahf
mov
fisubs
lods
pcmpeqd
ret
dec
imul
jne
psubsw
in
es
inc
fcmovne
out
adc
jmp
stc
mov
inc
lahf
cli
das
jecxz
fnstcw
adc
pop
in
fidivrl
insb
mov
fisttpl
cmpl
jo
adc
mov
popf
cmp
fs
or
gs
test
enter
ffree
shr
lcall
ret
fwait
xchg
dec
lods
pop
test
xchg
inc
cmp
fadd
cmpsb
andl
lock
int
int
aaa
mov
fcoms
out
pop
roll
dec
jle
xor
inc
push
es
jmp
repnz
inc
push
int3
into
nop
scas
sahf
pop
sbb
sbb
cmpsl
fldenv
ficompl
xchg
sub
fsubl
mov
loope
inc
rol
push
inc
fs
mov
sbb
jno
and
aas
idivl
lcall
aad
xor
jg
popa
shl
fadd
adc
movsb
adc
cmp
dec
ret
sahf
outsb
add
gs
pusha
dec
or
fwait
sbb
fs
lahf
and
rclb
mov
mov
pop
add
inc
xchg
sub
ss
jns
lret
jne
push
pushf
arpl
aad
xor
and
add
pop
lret
push
les
cmp
add
mov
cmp
mov
call
gs
lea
sbb
cmp
xchg
insb
scas
cwtl
mov
mov
jae
dec
stc
mov
dec
repnz
push
push
xchg
sti
adc
out
push
push
mov
xchg
add
dec
pop
in
jl
stc
mov
ret
dec
jmp
adc
std
inc
stos
add
cmp
xchg
fldenv
fadds
pop
pop
bound
mov
addr16
xor
negb
setb
push
lahf
push
or
jae
out
mov
push
mov
ret
pusha
out
shr
jge
adc
and
cmpsl
jmp
xor
cmp
sbb
sahf
fadd
dec
add
divps
pop
pop
rcrb
adc
fiadds
test
push
add
pop
test
scas
ja
sbb
pop
sub
xchg
faddl
add
lcall
mov
int3
shll
roll
add
pop
adc
cwtl
push
cmp
fidivrs
mov
lcall
mov
cwtl
xor
call
and
fwait
inc
push
and
xchg
pushf
stos
xchg
out
jle
xor
dec
sub
cmp
jo
jbe
das
and
jo
out
push
adc
cmp
or
push
mov
scas
bound
pop
jne
ret
lgs
into
xchg
xor
inc
add
movsl
mov
movsb
and
mov
div
cli
mov
fildll
enter
in
jmp
xor
cli
sub
mov
in
ret
mov
sbb
fdivrl
iret
xchg
call
dec
jnp
cmp
lcall
stc
je
clc
imul
or
jl
insl
rorb
test
cld
jo
xor
pop
maskmovq
notl
push
push
cmp
add
sti
arpl
mov
jno
sarb
arpl
out
mov
pop
push
inc
movsb
or
cmp
mov
fdivrl
arpl
fisubs
and
mov
ds
lock
dec
push
inc
jne
lahf
lret
fisttpl
popa
cwtl
dec
cs
fstpl
cmp
mov
pushf
loope
sahf
sbb
loop
cmp
int
adc
icebp
xor
dec
jle
mov
in
dec
stos
scas
iret
lahf
out
inc
insb
jp
mov
aas
jmp
fwait
pusha
cmp
dec
xchg
jg
sub
adc
xor
js
push
sahf
icebp
fcmove
rcr
dec
pop
lcall
icebp
jnp
mov
sahf
xchg
das
das
ret
mov
mov
rolb
cmp
cld
mov
fwait
mov
cmp
cltd
insl
cmp
mov
daa
ret
ret
mov
xchg
jl
lea
xchg
jmp
push
sub
pop
sbb
xor
jl
cmp
xor
out
test
pusha
dec
jp
ljmp
movsl
iret
mov
fcmovbe
das
dec
push
mov
inc
and
lret
or
push
sbb
jbe
faddl
adc
ret
pop
inc
inc
fsts
jo
push
out
addr16
or
pushf
xchg
xchg
adc
rolb
dec
idivl
frstor
pushf
xchg
add
xchg
add
inc
push
push
push
test
imul
int3
xorb
mov
add
divb
add
shr
fabs
out
mov
scas
add
js
sbb
mulb
and
cltd
push
mov
mov
call
lods
add
fcoms
and
lock
or
das
sub
cmp
pushf
sbb
prefetch
or
mov
cwtl
int
sbb
cmp
pop
aad
pop
jmp
test
lea
lods
cmpsb
fldcw
leave
jne
sbbl
lock
mov
and
jb
push
inc
movsb
pop
adc
jns
outsl
aam
jne
ss
shrb
cmp
sbb
fcomi
adc
cmc
dec
push
enter
mov
mov
mov
jg
loope
cmp
lcall
mov
adc
jmp
leave
add
sub
and
dec
movb
int3
imul
aaa
pop
cli
outsb
sti
iret
stos
or
lsl
fnstenv
dec
xchg
push
and
dec
or
mov
add
je
lds
inc
es
mov
lea
xchg
sub
int
xor
sub
sub
fadds
aam
daa
es
or
shll
adc
pop
sahf
mov
shlb
cmp
into
jns
fstl
adc
dec
sbb
sub
pop
sbb
sbb
xchg
scas
stos
sbb
cwtl
mov
xor
mov
movsb
sub
pop
sub
cmp
fsubrs
push
fsubl
jae
xchg
loope
insl
popa
mov
repz
arpl
sub
fs
jl
jle
inc
inc
sub
fcoms
mov
mov
sbb
loop
mov
cwtl
mov
inc
lret
mov
ffreep
mov
xor
test
push
gs
mov
int
stc
popa
enter
add
xchg
scas
pop
stos
add
pop
push
mov
dec
fldenv
int
dec
or
jno
adc
loop
clc
mov
inc
inc
shll
push
mov
jl
pop
fsubr
aas
notb
out
mov
and
cli
das
lahf
pop
arpl
imul
mov
fsubl
mov
cmp
and
xor
add
xchg
add
int3
imul
xchg
out
bound
xchg
or
je
cmp
sub
push
and
stc
popf
data16
xlat
dec
pushf
pop
nop
in
add
mov
popf
mov
sub
fstl
mov
jmp
jo
mov
jle
xchg
in
xlat
scas
bound
or
mov
add
es
mov
push
xchg
cmc
test
dec
popf
cmp
cmpsl
inc
jbe
lcall
sub
lds
ljmp
lret
inc
mov
pusha
dec
mov
icebp
or
xchg
outsl
adc
pop
insb
pop
aas
mov
imul
subl
enter
or
or
mov
mov
lds
fistl
xchg
repnz
cmpsl
mov
repnz
jl
out
outsb
and
lret
inc
ror
cltd
inc
jecxz
ja
jle
fdivr
or
nop
sbb
lock
pop
test
dec
scas
jo
out
movsb
push
roll
bound
addl
addr16
test
pop
or
cmp
fbstp
or
std
jle
xchg
mov
insb
mov
adc
pop
adc
fs
pop
fwait
rcr
ficompl
and
mov
test
lcall
mov
loop
femms
pop
aad
jne
jmp
movsl
push
jl
and
inc
jle
dec
leave
decl
mov
dec
mov
adc
arpl
dec
sbb
mov
pop
nop
pop
jecxz
cmp
or
dec
lock
ss
mov
cmp
sbb
js
adc
dec
push
xor
mov
mov
xor
aam
pop
sbb
fwait
inc
cmp
sbb
mov
jp
mov
out
xor
ficomps
xor
or
lods
jmp
xchg
cmp
and
shll
mov
shrl
in
lods
xchg
test
addr16
dec
add
pop
or
adc
into
mov
dec
je
pop
rcrb
sbb
sar
aam
sub
subb
inc
pop
adc
fmuls
xchg
sub
cs
and
and
dec
cld
xchg
push
xor
mov
mov
fsub
subl
sbb
rclb
add
add
mov
push
js
xchg
push
dec
adc
sbb
mov
sarl
cwtl
pop
arpl
inc
subb
jno
int
std
xchg
loopne
fiaddl
xor
repnz
mov
clc
push
jae
loop
inc
packuswb
test
mov
add
cli
gs
loop
sub
leave
mov
adc
inc
cwtl
dec
gs
pusha
xchg
adc
mov
sahf
add
sbb
pusha
push
push
or
dec
js
in
pop
sbb
mov
aas
pop
dec
sbb
sbb
push
pop
jmp
dec
xor
clc
insl
cli
sti
xor
ret
jp
push
pop
sub
pusha
dec
push
add
pop
hlt
jno
and
jecxz
pop
scas
sti
xor
ss
imul
addb
mov
dec
adc
movsb
adc
jge
push
dec
stc
aad
xchg
xor
rol
lods
insl
or
jb
insb
cmpsb
push
inc
jbe
pop
cwtl
jmp
imul
sbb
lods
jne
lret
popf
scas
rorb
xorl
xchg
std
jns
test
xorl
xor
sbbl
in
inc
popf
lahf
push
mov
mov
xlat
inc
pushf
in
pop
and
into
mov
stos
xor
gs
mov
testb
mov
fcomip
psllq
mov
mov
mov
fmull
divl
and
outsl
jb
add
pop
lods
rol
mov
int
push
lds
push
jl
mov
mull
hlt
cli
push
jae
jnp
outsb
mov
aad
sbb
push
mov
sub
inc
pop
mov
lods
loop
mov
outsb
push
lock
cld
arpl
mov
jnp,pn
or
push
incb
mov
inc
int3
inc
push
lcall
cmpsl
mov
xchg
xchg
sbbb
int
hlt
rcll
dec
xor
sar
decl
xor
std
mov
es
std
mov
sahf
add
sahf
movsl
lock
add
xchg
xchg
ss
imul
outsl
test
rorl
cmp
dec
jb
xchg
mov
jae
and
jo
mov
ror
mov
sbb
mov
mov
mov
aas
or
xchg
jl
movsb
and
js
pop
icebp
popa
xchg
cmp
test
and
lret
add
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
sbb
add
xchg
add
xor
sqrtps
xchg
lods
jbe
les
jge
pusha
rcll
sub
push
jbe
pushf
arpl
paddw
shll
sbb
pushf
incl
xor
xor
push
rcrb
sbb
repz
xchg
into
mov
pop
xor
push
jb
push
enter
pushl
cwtl
jae
mov
jle
push
and
add
rcrl
jbe
ss
jg
inc
adc
xor
ljmp
adc
fidivrl
movl
ret
in
jnp
push
loop
mov
jge
std
incb
movsl
js
dec
daa
sub
stos
ljmp
sub
sbb
and
fsubr
inc
decl
jne
aam
and
and
gs
int3
mov
and
push
sbb
das
sub
inc
mov
and
push
lds
xchg
push
mov
jp
cmp
fisubl
pop
pop
in
iret
push
mov
or
or
mov
clc
cmp
std
add
xor
pop
cmp
xor
mov
push
lods
sub
test
inc
sbb
cltd
push
add
jo
jg
xor
mov
mov
pop
fdivp
mov
lods
xor
andb
pop
stos
or
mov
inc
rcrb
mov
scas
cmp
insb
shrb
pusha
mov
repz
jnp
or
fcompl
mov
pushf
cmp
mov
sub
mov
push
lock
cmpsb
inc
sbb
xor
jnp
test
out
fisubl
shl
stos
shr
mov
adc
sub
scas
scas
add
or
lahf
sbb
and
stos
pop
pop
pop
ds
push
xchg
stc
subb
stc
mov
xchg
loope
adc
popf
dec
and
movsl
sbb
cli
xchg
stos
push
rorl
xchg
xchg
not
test
pop
daa
pushf
sbb
or
push
xchg
icebp
jl
int3
xor
jnp
repz
mov
push
jmp
cmp
sub
adc
mov
rolb
push
pop
push
std
insl
mov
adc
xlat
jno
in
dec
dec
inc
fisubrs
loop
pop
xchg
or
js
mov
mov
arpl
arpl
stos
add
mov
xlat
push
xlat
ja
out
ss
mov
sahf
fldl
add
leave
les
dec
in
push
ficoms
int
ret
inc
mov
mov
cmc
outsb
pop
sub
pushf
rolb
pop
mov
in
mov
jecxz
or
js
js
icebp
test
lods
sub
mov
pop
aas
enter
push
mov
sti
arpl
sub
in
cmc
loope
repz
cld
imul
mov
cmpsl
scas
orl
outsb
cmp
cmp
add
mov
insb
js
xchg
push
jb
mov
jg
cmpl
lea
ss
sbb
fwait
lock
xor
push
add
xchg
push
xor
mov
aad
lock
push
bound
sbb
xor
sar
ja
iret
stos
mov
mov
hlt
mov
addr16
stc
jne
jnp
jae
xchg
sahf
dec
xchg
loopne
inc
xor
out
and
jbe
mov
pop
xor
insl
push
jo
lea
jns
jg
rcrl
lea
xchg
in
bound
sbb
dec
pop
inc
push
add
xor
adc
test
push
aad
push
lret
ret
fs
cmp
and
mov
push
stos
in
or
xchg
xchg
repz
pop
cmp
mov
or
mov
push
sub
or
and
push
jl
push
push
sub
push
ljmp
ret
aam
jmp
fcoml
out
push
add
adc
cmpsb
loop
or
sbb
jnp
les
pop
push
leave
sbb
movl
hlt
xor
in
movsl
addr16
sub
data16
pop
loop
daa
push
lahf
cmp
mov
push
ja
std
push
ret
cmp
mov
in
inc
inc
jae
inc
dec
dec
push
orl
pop
push
ja
addr16
inc
push
jnp
push
inc
sahf
and
pop
adc
xchg
mov
in
pop
lods
int3
sbbb
aas
imul
stos
lods
adc
mov
xor
std
push
xchg
imul
nop
cmpsb
sub
js
pop
push
or
dec
dec
data16
inc
or
sub
lahf
sub
js
jo
pop
mov
xchg
and
add
mov
mov
fwait
jge
dec
lods
pop
fstp
gs
cmp
mov
xor
test
fisubrl
mov
movsb
dec
clc
add
cli
rcll
pushl
inc
in
and
add
xchg
add
cmp
xor
sti
arpl
ss
inc
jg
dec
lret
or
ficompl
and
popa
adc
idivb
or
sub
rol
push
pop
fcompl
push
popf
stc
fisubl
xchg
mov
js
out
das
in
shlb
cmpsl
outsl
shrl
popl
rcr
dec
fdivs
pushl
dec
jp
pop
add
inc
adc
xor
mov
or
pop
mov
fdivrs
inc
rcrl
outsb
xchg
fldcw
pop
lds
fidivrl
sbb
jl
dec
icebp
out
paddusb
and
movsb
mov
jl
nop
lcall
jge
add
mov
cmp
sub
cltd
repz
sahf
out
pop
outsb
cmp
ljmp
fcmovnbe
jo
fmull
repnz
shl
je
cmpsb
jnp
int
mov
xchg
cmp
js
data16
cli
ret
pusha
mov
cwtl
cmp
mov
jo
inc
int3
sub
xor
xlat
sbb
or
xor
js
mov
xchg
cmc
and
addl
lods
in
out
mov
outsl
nop
fsubrl
hlt
pop
inc
cmpsb
aad
jnp
cli
lds
aad
daa
scas
and
sub
add
daa
aas
push
repz
inc
xchg
dec
jnp
add
ret
pop
in
fildll
and
in
iret
mov
dec
bound
adc
loopne
xchg
stos
daa
repz
push
mov
inc
mov
mov
cwtl
xor
ljmp
ffreep
or
mov
shr
xchg
inc
out
iret
les
scas
mov
push
pop
jp
stc
mov
scas
dec
fimuls
cmpsb
out
test
outsb
das
sbb
ret
aaa
ret
pop
mov
shll
push
push
mov
cmp
mov
mov
mov
mov
and
xor
cld
mov
xchg
or
stos
out
push
rcrb
icebp
call
pop
jp
rorb
clc
sbb
add
xchg
push
rolb
call
ds
xchg
sub
xchg
mov
sub
or
jne
aad
sub
out
xchg
xchg
mov
loop
sbb
dec
adc
mov
mov
dec
mov
add
in
fsts
push
cwtl
cmp
mov
add
iret
negb
out
lods
push
cmpsl
lods
jge
loop
add
test
lea
insb
shrl
push
xor
push
pop
stc
adc
aas
or
jb
lahf
aad
mov
lret
in
out
mov
in
in
outsb
cld
stc
icebp
dec
in
or
cmp
sar
push
in
adc
mov
addr16
test
fisubrs
bound
lock
addr16
pop
int3
xlat
stos
mov
push
adc
xor
jmp
subl
into
stos
dec
int3
test
xor
mov
push
aas
mov
mov
pusha
pushf
addb
add
cmp
test
adcl
ja
inc
xchg
cmpsb
test
hlt
push
lahf
xchg
push
sarb
iret
mov
or
pop
test
mov
dec
int3
inc
lret
pushf
andl
xchg
and
lcall
jg
push
sub
leave
adcl
rcr
mov
je,pt
add
in
jle
or
xchg
hlt
out
enter
rcrb
call
cmpl
or
pop
lret
or
test
sbb
pop
cwtl
mov
lret
test
fs
test
lret
jnp
inc
cmp
pusha
inc
push
and
pop
adc
cmp
push
mov
jecxz
repnz
scas
adc
adc
push
cmp
push
das
imul
xlat
xchg
dec
cmovo
mov
inc
jo
mov
mov
xchg
mov
jmp
lret
mov
xchg
mov
movsb
dec
das
xchg
xor
xor
xlat
std
add
jnp,pt
fstpl
pop
jns
ret
or
test
addr16
or
scas
scas
jnp
mov
mov
mov
sar
sub
xor
popa
hlt
sbbb
sbb
push
andb
xor
sti
push
mov
ret
frndint
cmc
xchg
push
sarl
mov
mov
push
cmpsb
inc
clc
lea
jge
mov
pop
movsl
cmp
adc
fsts
fstpt
sbb
das
push
cld
lret
lds
cmpsl
inc
pop
push
sbb
in
xor
xor
mov
jne
es
jg
andl
add
push
push
jnp
fisubs
or
in
add
and
dec
or
add
pop
adc
fldenv
sub
rcrl
pop
dec
je
ja
jg
and
dec
or
rcrl
dec
movsb
fmulp
mov
jp
gs
or
push
add
add
lock
xchg
test
jo
and
mov
out
mov
pop
data16
not
pushf
push
xchg
int3
cmp
int3
push
ljmp
push
xchg
inc
aaa
ds
mov
xchg
add
repnz
cli
ja
in
insl
jne
imul
push
jmp
andb
sub
jp
fisubrs
and
inc
xchg
and
daa
rcrl
or
jp
add
xchg
in
mov
inc
test
mov
iret
jo
data16
adc
repnz
mov
push
push
shlb
push
mov
xchg
filds
cwtl
fs
cmp
inc
pop
bound
xor
pushf
jecxz
add
add
xor
into
imull
ficoml
dec
cmp
sub
push
roll
push
leave
mov
loopne
test
add
push
push
jns
gs
test
call
aam
xor
jmp
inc
xchg
aas
repnz
and
mov
pop
push
sbb
inc
adc
out
or
dec
pop
daa
pop
pop
fwait
mov
mov
aaa
fisttps
lock
xchg
dec
xchg
test
cli
mov
daa
jl
sub
sub
mov
xor
fucom
mov
jns
cs
subl
sub
push
and
test
xchg
mov
out
sbb
negb
scas
pop
dec
push
les
push
xor
push
dec
lea
loop
test
cmc
cld
scas
fistps
push
jmp
fcmove
pushf
jl
fs
push
mov
int3
test
mov
jae
arpl
xchg
and
lods
mov
addr16
jge,pt
cmc
repnz
rcl
sbb
inc
mov
lds
es
jne
shlb
xor
dec
iret
cmp
jno
xchg
popf
cmc
xchg
sub
or
push
mov
cmc
fistps
mov
jmp
cmp
sbb
clc
lahf
stc
mov
push
outsb
pop
in
icebp
mov
add
xchg
add
cmp
es
es
push
sbb
fnstcw
dec
insb
mov
aad
add
add
and
in
scas
and
lock
pop
pop
push
js
inc
mov
dec
sub
pop
xlat
mov
lahf
std
adc
jge
xorb
mov
addl
dec
mov
lret
xchg
sub
jbe
sbb
aaa
shr
shll
addr16
insb
pop
pop
out
xlat
push
repz
test
push
call
fs
cmpsl
out
add
out
or
bound
in
je
push
enter
stos
mov
mov
scas
push
loopne
and
mov
push
cmpsl
inc
iret
scas
mov
or
jnp
jns
das
adc
nop
and
or
imul
cmpsl
mov
iret
aad
mov
adc
scas
push
inc
sti
xchg
add
in
test
ds
inc
dec
xor
pushf
sti
inc
loope
testl
sbb
mov
adc
pop
ljmp
adcl
repnz
add
and
loope
sbb
xchg
lret
and
insb
xchg
out
push
je
fadds
loop
ret
pop
push
loopne
scas
mov
arpl
test
rclb
push
mov
sub
rorl
mov
scas
or
xlat
iret
or
pcmpeqd
push
js
int3
cmp
outsb
int
rolb
pushf
push
mov
or
movd
sub
dec
lods
xor
imul
cmp
ljmp
pop
and
insl
int3
out
jbe
and
cmp
dec
stc
pop
lods
jp
mov
push
es
test
cmp
mov
inc
loopne
lea
stos
xchg
divb
mov
je
lret
jns
xchg
aam
mov
jl
imul
mov
sarl
repnz
nop
push
pop
movsl
sbb
fscale
jno
ljmp
and
jns
xchg
jl
cmp
xchg
or
mov
iret
insb
jno
mov
cmp
jno
jmp
sub
pop
test
jecxz
or
inc
lods
pop
pop
rclb
mov
pop
or
push
cmpsb
sub
add
sbb
jge
int3
outsb
xchg
xchg
pop
xor
cmp
add
xchg
add
sbb
push
mov
mov
cmp
addr16
pop
stc
mov
cs
xchg
arpl
push
dec
and
subb
ss
inc
sbb
insb
add
lea
mov
addr16
mov
adc
out
in
xor
pop
or
lahf
dec
jno
xchg
into
loopne
sti
pop
dec
jne
fstpl
pop
jp
push
aaa
sbbb
aad
cmp
add
ja
lods
scas
jp
inc
pushf
adc
cwtl
add
stos
or
in
push
mov
dec
lret
fcmove
das
pop
mov
inc
repnz
hlt
pop
xchg
cmpsb
jo
lds
xor
sbb
mov
pusha
jb
jl,pn
jbe
lea
and
loop
fldcw
pop
cmp
out
mov
cmpsb
xchg
xor
xchg
pop
call
loopne
push
cmp
test
js
push
mov
cmpsl
push
jne
cmc
xor
repnz
push
adc
mov
xchg
jnp
pop
mov
push
inc
add
xlat
shlb
movsl
xchg
add
jb
das
lcall
popf
fwait
hlt
inc
pop
out
gs
mov
xchg
bound
push
adc
jge
pop
or
pop
cltd
das
jo
dec
cmp
insl
inc
stc
stc
test
pop
or
push
stos
cmp
xor
mov
and
insl
stc
or
xchg
pop
inc
stc
stos
ficoms
push
sahf
dec
insl
xor
ret
mov
pop
test
mov
sub
jecxz
loope
pushf
xor
loope
loope,pn
repz
cmp
xor
xchg
test
movsb
push
ss
mov
mov
jne
int3
ud0
popf
adc
xor
push
or
or
outsb
xlat
mov
mov
outsl
cmp
lds
sub
adc
pop
inc
dec
or
das
push
into
jne
stos
xor
jno
das
lock
subb
data16
lods
lods
into
popa
lret
cmpsl
dec
add
and
mov
inc
xchg
stos
sbb
insb
repz
fwait
cli
lock
xchg
mov
test
out
ja
icebp
fldl
loope
sub
add
add
push
lcall
fwait
or
adc
mov
adc
add
roll
pop
sub
xor
add
imul
jl
cmp
xchg
rorb
mov
pop
mov
jb
out
mov
adc
daa
cmp
sarl
sahf
dec
cmp
fsts
lcall
lret
and
inc
xlat
xchg
in
nop
insb
ficompl
sub
push
dec
sub
xor
xchg
dec
xchg
aad
xor
inc
lea
adc
int3
leave
xchg
aas
out
enter
mov
sub
repz
mov
pop
inc
xor
push
test
scas
inc
in
cmpsl
dec
lret
out
arpl
sub
jbe
pop
push
sbb
cmp
mov
mov
add
mov
fisubl
leave
mov
xchg
mov
sub
and
cs
inc
loope
imul
andl
mov
mov
insb
fiaddl
js
fnstcw
pop
loop
arpl
jb
adc
pop
xor
loope
outsb
dec
into
add
mov
fidivl
out
addr16
movsb
mov
ret
rorl
popf
hlt
or
push
xchg
imul
push
or
idivb
test
idiv
iret
dec
lahf
int3
movsl
out
xchg
push
imul
add
hlt
jo
and
cs
clc
das
daa
push
mov
call
lods
xchg
mov
add
lcall
sub
and
dec
jae
jmp
add
testb
mov
cmp
sbb
mov
cltd
xchg
mov
pop
mov
scas
lods
cmpsl
mov
mov
out
lcall
ds
xchg
sbb
or
stos
pop
mov
push
cmpb
lahf
pop
out
inc
cmp
xor
jae
pop
add
xlat
lods
cmp
jl
addb
adc
inc
jp
sahf
jge
dec
mov
jge
mov
or
pop
int3
and
in
stos
and
push
jge
mov
filds
cmp
mov
cmp
xchg
mov
pop
mov
jae
xchg
xlat
sar
xchg
pusha
and
test
hlt
add
inc
inc
cli
popa
add
sbb
pushf
cli
mov
scas
aad
lret
jp
out
add
xchg
add
xchg
iret
movsl
sbb
ljmp
pop
cs
and
push
lods
pop
mov
scas
movq
sbb
loopnew
test
lods
add
addr16
sbb
push
div
inc
cli
mov
mov
loope
ja
sub
aad
mov
mov
dec
xchg
inc
mov
inc
out
test
sbb
je
or
mov
mov
push
scas
scas
xchg
fnsave
pop
mov
add
lcall
cltd
xor
sub
sbb
mov
cmp
sahf
jmp
hlt
ficoms
fcompl
mov
testl
hlt
and
rclb
pop
bound
dec
and
data16
in
inc
shrl
push
ret
inc
jp
andnps
xchg
fdivr
ja
mov
roll
mov
in
lock
pop
mov
cmp
les
shrb
push
dec
loop,pt
adc
fists
lds
xchg
push
xchg
out
pushl
call
jecxz
sbb
mov
mov
mov
lret
or
xchg
pop
mov
jl
movsl
es
and
pop
add
jnp
xchg
sub
popa
out
outsb
mov
loop
mov
insb
mov
jle
sarb
xchg
mov
push
xor
inc
jg
aam
adc
addb
jo
aaa
or
or
sbb
dec
in
adc
fcomi
lods
lods
enter
push
and
arpl
popf
inc
fcoml
xor
out
xchg
cs
dec
cltd
xchg
out
testl
mov
daa
and
movsl
xor
mov
lcall
imul
jns
shr
dec
rclb
push
xor
aas
pop
je
inc
dec
mov
lods
pop
std
inc
mov
std
aas
mov
outsl
add
lret
add
enter
or
inc
inc
xchg
mov
mov
jnp
push
cwtl
dec
cwtl
loope
in
scas
call
jle
sub
test
in
jb
cwtl
jle
pop
inc
cmp
mov
lock
or
in
js
cmp
scas
outsb
cmp
sub
pop
push
fmuls
add
add
lcall
bound
dec
mov
icebp
add
xchg
add
fcmove
jno
xorl
les
or
mov
xor
xor
dec
xchg
xor
addr16
dec
mov
lcall
test
jg
ljmp
mov
jae
movsl
enter
jle
lock
jecxz
cmp
cmp
mov
mov
jae
stc
cmp
sub
frstor
ja
push
jg
push
scas
push
cs
faddl
aad
cmp
jno
mov
push
cmp
and
cmp
cmp
lcall
xor
sub
imul
in
push
push
push
loope
inc
hlt
icebp
cli
xchg
and
leave
pop
scas
adc
xor
outsl
jno
jmp
repz
pop
mov
stos
fwait
rorb
aam
imul
xchg
adc
push
push
jg
stos
xchg
es
sbb
push
jmp
mov
sbb
pop
dec
inc
popa
fdivr
push
mov
pop
es
lock
flds
jnp
jbe
xor
out
pop
or
adc
test
push
fxch
xor
add
ds
jg
repnz
jne
or
mov
daa
stos
lret
and
orl
mov
pop
aaa
mov
fisubs
pop
xchg
lods
adc
movsl
jmp
ror
jo
pop
enter
mov
cmpb
pop
push
xchg
jmp
das
dec
pop
xlat
outsb
shll
mov
pop
aaa
cmc
cmpsl
sub
cmp
insb
subb
xchg
je
sbb
sbb
popf
push
jo
mov
movsl
adc
mov
loop
pop
mov
sub
std
xor
imul
add
sub
jo
jbe
pop
and
mov
jp
jnp
repnz
setae
mov
or
xchg
scas
jle
sbbb
mov
push
xor
cld
xor
mov
sbb
fimuls
pusha
mov
std
in
es
insb
xor
loopne
fwait
mov
mov
add
sbb
pop
daa
jnp
xlat
in
out
mulb
rorb
insl
push
loopne
pusha
pop
mov
sti
push
js
fwait
push
inc
push
outsb
pop
dec
imul
sub
xor
sub
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
push
push
and
add
inc
xchg
clc
add
lock
lret
add
or
adc
scas
push
aad
rclb
ja
mov
jg
push
mov
mov
push
push
out
jbe
cs
mov
and
sub
aas
testl
lcall
or
int
cli
cmpsb
dec
push
loopne
push
out
pop
and
cmpsb
ss
jp
mov
arpl
test
into
lret
cld
xchg
pop
clc
xchg
jbe
sub
mov
push
sub
xor
push
aad
mul
push
and
inc
cmp
mov
lahf
shr
add
xor
rorl
adc
lret
xchg
dec
push
movsl
jmp
and
lods
negl
mov
push
pop
push
push
jmp
jno
cmp
ljmp
push
inc
ljmp
jg
inc
push
mov
aam
lret
xchg
mov
jmp
cmp
fcmove
sbb
inc
add
cmp
xchg
pop
jmp
mov
sahf
rcr
out
dec
push
jl
mov
cli
cmovle
jnp
repz
xchg
mov
mov
movsb
or
shl
pop
insb
popa
jmp
sbb
push
out
call
adc
hlt
mulb
mov
in
xor
xor
outsb
cmp
movsb
je
mov
mov
pop
scas
out
xchg
inc
jns
imul
pop
adc
jg
call
dec
les
add
push
cs
lcall
and
leave
xchg
or
rclb
adc
sub
jne
add
xchg
push
fwait
stos
pop
cli
mov
lcall
jge
lcall
imul
xchg
cs
test
sarl
cwtl
incb
jns
lock
push
ja
outsb
lahf
ret
mov
inc
ss
arpl
mov
fdivl
cmpsb
daa
mull
mov
push
fsubs
test
enter
mov
movsl
adc
pop
mov
push
jne
es
pop
jb
sub
and
icebp
mov
jbe
xchg
sbb
iret
pushf
dec
mov
adc
outsl
loope
pop
push
pop
insb
cmp
inc
and
cwtl
in
mov
das
scas
pop
leave
sub
add
cmp
stc
int
xor
cmp
ja
add
xchg
add
scas
push
xlat
cmc
idivl
aam
ja
fildll
xchg
xor
insb
mov
stos
lret
ror
loopne
iret
dec
xchg
fs
ret
jmp
xor
cmp
or
pop
mov
jmp
add
mov
cmp
sbb
movsb
or
push
aaa
mov
clc
gs
adc
add
and
cmc
cmp
add
faddl
neg
stos
ret
daa
inc
hlt
repnz
lret
loop
mov
pop
js
mov
mov
push
cwtl
ret
jle
and
lock
cmpb
xchg
cmp
cmpsb
lock
pop
mov
push
inc
xlat
lret
lret
pop
mov
cmp
sub
vpshuflw
sub
jmp
mov
jecxz
das
lret
and
lods
adc
xchg
inc
pop
push
jno
jmp
pop
cld
out
pushf
and
vcvtsi2sdl
repnz
add
inc
pop
xor
dec
lahf
ret
jnp
cwtl
adc
push
push
test
add
lods
xor
lock
push
lahf
sbb
xchg
les
ficoml
cld
dec
inc
fcomps
mov
lock
push
push
adc
xlat
nop
or
add
sub
mov
xor
mov
sarb
loope
mov
or
sti
mov
mov
lods
or
jle
mov
fcomps
fmull
jae
add
icebp
jecxz
mov
call
pushw
push
dec
and
sub
testb
mov
pop
test
cmp
jno
icebp
push
xchg
sub
pop
dec
dec
mov
or
or
test
imul
mov
movsb
mov
sar
jb
adc
in
in
inc
fwait
dec
push
dec
mov
jp
push
jns
dec
inc
and
out
fidivs
test
js
test
pop
xor
mov
cmpsb
mov
jmp
cmp
add
mov
cwtl
cmp
push
arpl
cmc
push
in
dec
adc
fisubrl
xor
sbb
inc
hlt
xor
iret
mul
shrb
lock
adc
sub
sbb
jl
xchg
scas
mov
add
test
cmp
mov
insb
pusha
stc
add
pop
add
add
test
pop
