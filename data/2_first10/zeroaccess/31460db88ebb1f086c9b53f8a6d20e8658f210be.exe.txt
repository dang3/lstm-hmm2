push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
xlat
sub
jle
jle
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
cmc
stc
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
ret
int3
jmp
in
rol
test
and
jmp
fcmovne
sbb
rcl
ss
jmp
cld
aas
aam
sarb
in
out
shr
in
mov
cli
cld
or
in
shll
xor
xor
out
shr
in
jmp
into
into
xor
out
repz
jmp
out
loopne
shl
sbb
rolb
jmp
stc
fsub
roll
xor
jmp
sti
roll
cmp
aam
mov
lock
in
sar
inc
aad
int3
fdecstp
lds
cmp
repnz
mov
cld
fsin
call
xchg
in
xlat
sarl
out
loopne
ljmp
xor
in
fsub
lret
ljmp
jecxz
out
cmc
fbstp
idiv
iret
xchg
ljmp
clc
fmulp
fimuls
out
xor
aam
cmp
clc
fst
ds
std
cmpb
fcomip
ljmp
loope
mov
fdivl
sti
in
icebp
int
lock
aam
stc
mov
jmp
sbb
xchg
shl
in
call
int
test
cmc
aad
mul
ljmp
in
int3
out
xor
jecxz
sti
iret
cld
aas
jmp
stc
clc
cli
xrelease
ljmp
sbb
loop
sar
in
call
fildl
fsubr
cmp
jmp
out
in
jmp
xchg
hlt
clc
jmp
iret
das
lret
lret
iret
shl
fcmovbe
repz
in
ljmp
sti
fistl
into
xlat
call
shl
testb
and
frndint
cld
test
out
lock
iret
out
in
fsin
loopne
loopne,pt
sti
loop
in
fxtract
neg
mul
mov
decb
jmp
sti
in
out
ds
rol
ret
or
adc
call
in
rcl
xlat
repz
call
sti
xchg
fcmovbe
in
cli
fxch
ret
and
int3
cmp
cld
sar
idivb
cmc
jecxz,pt
cmpb
stc
mov
ret
jmp
enter
jecxz
out
int3
in
jmp
std
int3
in
loop
idivl
repz
shl
repz
orl
lock
xor
ljmp
ror
fdiv
xchg
rcr
call
icebp
xchg
mov
hlt
aam
repnz
repnz
std
int
shr
iret
ss
in
xlat
loop
loop
addb
xchg
into
aad
fcmovbe
in
rolb
cmp
loop
xlat
mov
lret
fimuls
lret
icebp
cmp
cli
into
icebp
test
repnz
lret
loope
rcr
iret
in
jmp
aad
lret
call
ror
xor
stc
mov
out
std
incl
fidivl
in
xor
std
shl
icebp
lock
test
fisttpl
xchg
shlb
jecxz
out
repz
sti
cmp
fcmovnbe
aad
loopne
ret
adc
fsubr
loope
call
rclb
aam
int
jmp
std
faddl
sar
fisttpll
std
lock
ret
jmp
fucomp
call
int
test
std
faddp
out
loope
repnz
aad
xor
repnz
stc
cmp
rcr
div
fld
sti
cmc
testl
aad
shr
xor
clc
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
xor
movsl
add
movsl
add
clc
lret
rcl
lret
sti
addl
in
int
jmp
nop
xchg
out
shl
rcr
out
lock
into
hlt
cli
cmc
repnz
call
jmp
xchg
xchg
lea
leave
into
out
call
cmp
mov
mov
fildl
cs
ljmp
fdivrp
int
sarb
loop
fisttps
rclb
repnz
repnz
int3
repz
cmp
sar
fstpt
ljmp
loopne
xchg
int
fists
fsubr
neg
shl
rcr
clc
sbb
rcl
std
aam
fldl2t
fcmovnbe
in
in
mov
in
jmp
sti
addb
out
inc
div
sbb
mov
sbb
iret
xor
jmp
repz
lret
ss
and
fdiv
loop
fdivr
fmull
jmp
ss
leave
rcl
cmp
clc
aad
faddp
ror
div
leave
test
or
test
out
cmp
leave
xor
adc
loopne
xchg
repz
leave
loopne
mov
xchg
xchg
cmc
aam
repnz
neg
cmp
iret
shl
call
xlat
stc
and
mov
mov
out
in
xor
cmp
cmp
not
int3
repnz
jmp
in
test
ror
rorb
fmul
into
call
stc
incb
adc
jecxz
xlat
xchg
enter
call
das
xlat
icebp
aam
out
ds
cmp
rcr
rcl
sti
leave
popl
xchg
rclb
clc
xor
fcomp
in
test
xlat
int3
test
out
out
out
in
loope
stc
stc
in
aaa
in
lret
idiv
call
cmc
sti
call
out
int3
mov
shl
ljmp
cli
aad
cmp
xlat
std
repz
sbb
fucomi
xchg
into
out
out
cmp
divb
ror
int
stc
std
aas
xor
xchg
xlat
nop
std
xchg
out
div
xor
out
stc
cli
cmp
rcr
icebp
fdiv
sti
sarb
out
out
decl
lock
stc
icebp
xor
into
lret
xlat
shl
loop
loope
in
cld
lret
out
mov
in
out
rcl
aad
cmp
aaa
loopne
loopne
and
stc
clc
xchg
call
ljmp
mul
enter
int
std
lret
aas
repz
ret
rorb
in
xchg
shl
in
cmp
xor
dec
into
inc
cmp
aas
cmc
rol
inc
ret
faddl
int3
icebp
cmp
lock
call
aaa
jmp
out
ret
fcmovu
ds
repz
in
clc
into
int3
add
hlt
xchg
fbstp
aad
aaa
cmp
cmp
cld
test
jecxz
icebp
fnclex
out
idiv
notl
aam
lret
mov
cli
aam
rol
into
icebp
iret
inc
fcmovb
jecxz
mov
in
jmp
cmp
xlat
int
cmp
or
fsincos
cmc
loope
mul
into
mov
clc
das
int
sti
fstpt
cmp
sti
lock
fdivrp
fmull
mov
rol
fnstenv
aam
hlt
hlt
fdivl
sti
aas
repnz
mul
sarb
xchg
leave
mov
mov
stc
roll
das
ljmp
out
into
cld
sti
dec
loop
lret
sub
popl
ror
jmp
neg
cmc
loop
out
cmp
mov
call
cmc
shlb
out
cmc
into
cmp
out
imul
iret
aad
rcl
mov
fcmove
incb
fsubr
in
shrb
cmp
std
fcomip
loopne
ds
lock
jmp
loop
incl
xchg
imulb
icebp
into
out
flds
fadds
test
std
testb
ljmp
cmc
cmp
ds
shr
lock
mov
cld
jmp
vpsubsb
xchg
xchg
aad
xor
fst
icebp
loopne
cmp
repz
aas
mov
loope
xchg
xchg
out
in
aam
rol
repz
repz
into
xor
ret
push
in
hlt
movl
fsub
fisttps
lds
repz
shr
leave
jecxz
aam
add
mov
fadd
leave
int
bound
inc
aad
xchg
xor
movsl
add
out
xchg
test
int3
in
fcomip
ljmp
cmp
leave
ror
int3
sub
rcr
loope
hlt
rcl
clc
test
fsubr
lret
call
aam
xor
in
repz
fcomp
loopne
rcr
loope
fmul
mov
mov
in
clc
xor
xor
incl
mov
ret
std
lret
mov
mov
mov
in
clc
fidivl
fcom
iret
iret
rcl
ret
aad
sti
stc
mov
mov
in
sub
jecxz
out
stc
int
fst
jmp
hlt
fdivrp
test
loopne
stc
leave
ljmp
int
shl
lret
into
lret
xor
jmp
cmp
aaa
xlat
iret
repz
out
stc
loope
in
adcb
call
shl
aam
cmp
clc
lock
aas
ljmp
lock
lret
cmc
ret
ret
xor
aaa
cmp
shl
test
ret
stc
loopne
loope
mov
jecxz
in
adcb
aad
aaa
lret
loopne
neg
aaa
loopne
rcl
aam
fsubp
xlat
addl
loop
shll
aam
les
cmp
cmpl
enter
in
das
out
aad
lret
aaa
sti
adc
int3
test
fcomip
in
ret
clc
jecxz
jecxz
in
rcl
xchg
aad
sub
cli
repz
std
aam
iret
lret
std
stc
shl
vpandn
cmc
jmp
mov
xchg
in
test
out
in
ss
shl
ror
fcmovbe
fcomp
aas
fcmovnu
clc
ret
int3
out
jmp
fmul
fmul
in
lds
cmp
loope
jecxz
out
aas
fdivr
mov
movl
ror
div
int3
cmp
xor
fstpt
in
loopne
idivb
testl
addl
ss
in
ljmp
lds
mov
out
idiv
loopne
lds
in
shl
int
fucomi
in
sti
or
fucomip
ljmp
in
out
in
ljmp
repz
fsubr
out
test
clc
ret
shl
mov
fisttpll
lock
ret
lock
sti
fsubr
rcl
stc
rol
in
rolb
std
in
in
lret
inc
lock
cmc
shl
aam
in
cld
lret
icebp
clc
cmp
std
out
out
sti
test
shl
lret
lock
xlat
into
fcmovnbe
sti
hlt
icebp
rcr
aad
cmp
lock
testb
call
nop
xchg
xchg
shl
out
into
fsubr
xlat
shl
add
out
cmp
sar
cld
xchg
in
stc
mov
nop
fisttpl
lock
lret
enter
ss
cmp
lret
repnz
out
out
cmp
int3
leave
xlat
cmp
std
ret
call
jecxz
lock
xor
fdivrs
xor
int3
ds
cmp
cld
mul
lds
fdivrp
xchg
loop
in
jmp
shr
int
sarl
ror
in
loope
les
add
xchg
test
cmp
ds
clc
sar
into
not
repnz
cmc
xlat
into
loop
lret
xchg
aaa
lret
cld
cmc
cmp
ret
leave
sub
iret
lret
test
cmc
into
xor
cld
loop
add
testl
out
hlt
xor
jmp
stc
cmp
repz
call
fmulp
jmp
shr
jecxz
das
xor
xlat
cmp
ret
hlt
fcmovbe
repnz
in
int
lret
rol
jmp
mov
stc
bnd
icebp
xor
imul
cmc
in
loop
flds
addl
in
xor
cmp
fcmovu
loopne
int3
fdivrp
aam
rcr
loop
stc
jmp
rcr
xchg
sub
in
in
fdivr
cmp
fmulp
loopne
in
aad
fsubr
cld
ljmp
in
rcll
in
xor
cmp
aaa
fmull
into
out
mov
fists
xor
xor
cmp
or
jecxz
orb
fdivrp
out
out
test
xor
cli
fcmovne
jmp
loopne
int
into
loope
aas
ret
out
inc
cld
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
sub
jle
movsl
add
lret
leave
enter
icebp
aam
not
cmp
in
cmpb
cli
cli
cmc
std
out
cmc
shr
test
in
jecxz
xchg
cmp
std
push
cli
xor
ds
repnz
loop
std
call
filds
ret
out
jmp
cmp
lock
aaa
ds
xlat
mov
in
testb
nop
adc
iret
fcmovu
cmp
in
in
fadd
cli
testl
rcl
fucomi
stc
int
in
int
icebp
cmpb
sti
call
xchg
xchg
xchg
nop
jmp
call
fcmovnb
cmp
iret
push
add
lds
loope
fildl
xor
sti
enter
neg
iret
fdivrp
cmc
ljmp
loope
neg
in
cmc
stc
ss
test
sarl
mov
mov
xor
jmp
cmp
into
push
cmc
jmp
or
ror
hlt
aam
jmp
enter
repnz
repz
lret
ds
test
xlat
mov
jmp
mov
test
fsubr
sar
fyl2x
lret
repnz
movb
leave
in
shl
call
jecxz
cli
leave
cs
aaa
xorl
icebp
cmp
and
xchg
fsub
pushl
into
out
stc
cmc
rcl
add
repnz
lock
shl
leave
hlt
repz
leave
cld
rorb
fcmove
out
int3
and
rcr
fadd
in
fcomp
cli
fldlg2
mov
lret
loope
sub
iret
xor
rcl
cli
fdiv
fst
ds
clc
repnz
lret
stc
in
addl
cli
out
hlt
repnz
cmp
add
out
lret
jmp
les
loop
ljmp
das
out
fdivs
int
add
ds
not
mov
sbb
into
fstp
in
mov
out
loop
lret
in
fmulp
ljmp
decb
sti
fimull
icebp
out
jecxz
out
les
clc
ds
fadd
out
aad
test
repnz
jmp
iret
aad
stc
repnz
test
aam
icebp
xlat
clc
in
fmuls
repz
rcl
repnz
call
icebp
lock
sub
xlat
lds
loop
in
sub
test
hlt
fcmovu
out
sti
out
shl
out
cmc
hlt
stc
mov
mov
out
jmp
hlt
mov
loope
in
fcmovu
xor
sub
aam
ret
in
xchg
mov
hlt
in
iret
aad
ret
ror
ljmp
flds
std
mov
fstp
fldl
xor
xor
cmp
ret
fucomi
cmp
int3
or
shl
shl
fdivrs
cmp
aam
clc
std
cmc
clc
out
out
clc
orl
sbb
xor
std
lret
cld
sub
fsub
fsubr
in
rorb
jmp
das
cmp
std
ffreep
lret
inc
xchg
aad
cmc
incb
loopne
in
jecxz
aam
sub
stc
lret
out
icebp
cmp
fstp
roll
sti
ljmp
xor
fsub
xlat
lret
xor
shl
rcr
and
fadd
mov
xor
in
loop
xor
icebp
jmp
in
test
in
out
mov
or
ret
cmp
sbb
xlat
loop
xchg
test
xor
cmc
sbb
loopne
xchg
ljmp
cmp
aaa
ds
jmp
out
out
xchg
xchg
loopne
jmp
xor
icebp
int
leave
aam
ds
ret
ret
cld
cmp
ffree
mov
sti
fmull
sub
aad
icebp
cli
jmp
int3
int
loop
cmp
jecxz
out
lret
rorl
ss
out
fcmovbe
cmp
repnz
div
loop
cld
aam
jmp
lds
out
xchg
in
in
ret
fsub
neg
cld
hlt
fdivrs
aam
loope
faddp
mov
fisttpl
mov
jmp
int3
rcl
aad
int3
call
mov
lcall
jle
mov
xchg
jmp
call
leave
cli
cmp
filds
xchg
out
ret
rolb
out
aam
cmp
repnz
xor
lock
cmc
out
rcr
adc
xlat
lret
fcmovb
mov
rcl
into
repnz
lret
out
aad
fcmovne
into
loop
sbb
neg
mov
call
sub
call
not
ss
stc
cmp
fcomp
lds
sbb
icebp
add
lret
aam
in
xlat
ror
out
hlt
jmp
lock
sarb
loopne
clc
lret
stc
fucom
test
aam
cmp
lock
adc
aad
in
div
cld
fcmovnu
and
shl
adc
xor
stc
iret
cmp
leave
out
repnz
loop
shl
repz
mov
xchg
jmp
test
repz
xor
cmc
shl
out
cmp
iret
fxtract
aam
cmc
mov
xchg
jecxz
ljmp
fcomi
hlt
clc
int
cmp
shl
cli
mov
int
icebp
mov
iret
sub
aaa
sar
sarl
fdivrp
repnz
xchg
fdivr
mov
mov
test
into
xor
cli
iret
fidivl
shl
adc
rcr
stc
mov
mov
or
in
xchg
lret
mul
call
fdivr
cmp
addb
repz
int
out
lret
call
std
aas
sbb
lock
in
cli
in
jmp
fdivrp
fmul
mov
out
in
enter
cmp
sti
fcomi
sarl
push
loope
xchg
ret
loopne
nop
in
addb
out
xor
mul
cmp
fidivrs
xchg
shl
leave
sti
test
mov
mov
rcl
in
xchg
mov
loopne
lret
leave
lret
stc
rcr
neg
repz
clc
std
ret
addb
xchg
out
repz
out
cmc
xor
hlt
enter
sti
cmp
testl
lret
cld
into
ljmp
in
sti
into
jmp
aas
rolb
sti
in
xchg
in
cmc
ror
lock
cli
xor
stc
incl
in
in
mov
xchg
fisttps
fsub
idiv
cmp
lret
int3
sti
lock
roll
or
mov
shl
out
shl
cli
rcr
cs
sarl
repz
lock
incb
stc
xchg
in
repz
ss
ljmp
repnz
cli
not
lock
ljmp
jmp
xor
jmp
sub
sarl
div
stc
out
call
in
jmp
loopne
lret
leave
rcl
loopne
repz
std
div
ret
hlt
std
int3
call
in
int3
iret
out
ss
in
int
sar
clc
icebp
loop
iret
flds
and
fiaddl
call
aad
aad
cmp
out
int3
jmp
aad
fcmovbe
loopne
in
mov
call
out
out
fdivp
loope
les
in
cmp
stc
lret
in
fcmove
repz
in
fcmovu
sti
ljmp
jmp
repz
enter
cmp
aas
aam
jecxz
loope
in
cli
fcmovnu
decb
xchg
iret
idivl
xor
fst
int3
call
xlat
fsub
aam
sub
jmp
in
jmp
rcl
fsubr
jmp
ds
aam
add
testb
in
fisttpll
ret
hlt
cli
sar
lret
in
addb
sti
jmp
nop
mov
xchg
cmc
repz
int3
enter
div
call
cmc
adc
fcom
ret
out
jmp
xchg
shr
shlb
in
cli
fdivr
cmc
ror
fidivrl
cmp
out
std
in
jmp
mov
orl
dec
cmp
cli
les
aam
loop
aam
jmp
rorb
repnz
ss
lret
cmp
cmp
fincstp
sti
neg
lea
xchg
repnz
repz
fnsave
dec
rcl
shl
into
adc
mov
fmull
icebp
mov
xlat
out
stc
ss
int3
std
ljmp
cmp
fldlg2
lret
xchg
jmp
test
aam
movl
jmp
int3
rcl
fstp
fldt
and
fcmovb
adc
jle
icebp
cmc
in
xor
repnz
roll
out
jmp
mov
cli
cld
std
cmp
fcom
out
adc
stc
test
cld
mov
fisttps
lret
iret
cmp
cmc
sti
cmp
aam
xor
icebp
fsubr
out
jmp
fadd
out
in
out
into
ss
call
cmpb
clc
sub
push
into
sti
xchg
loop
mov
icebp
jmp
lret
shr
sarl
rcl
clc
testl
fst
rol
lock
jecxz
in
std
loopne
fcmovb
icebp
cli
leave
xchg
cli
cld
std
mov
cs
jmp
fcomp
aaa
int3
lret
sub
clc
fst
ret
add
loop
out
xchg
shr
repz
in
xlat
xor
ss
rcr
ret
test
cmp
in
test
test
repnz
int3
mov
les
xor
out
icebp
shr
shr
jmp
in
shl
shl
or
out
jmp
test
hlt
icebp
leave
aaa
lret
sti
ds
test
sar
cmp
les
xchg
cmp
in
hlt
loopne
out
out
cmp
out
in
jmp
loop
into
loop
loop
aas
clc
test
call
leave
mov
test
ss
xor
fstp
icebp
inc
ffree
out
cli
clc
leave
xor
mov
int
in
iret
iret
ret
int
out
fcmovbe
hlt
cmp
ret
add
jecxz
int
cmp
xchg
loopne
out
lret
int3
repnz
out
cmp
sar
loope
aam
ret
xlat
mov
cld
fisttps
lret
lret
ljmp
neg
roll
xchg
fcmovu
jmp
cld
out
out
jmp
xor
in
iret
hlt
std
jecxz
shl
add
fildl
test
loope
lret
add
cli
jmp
cld
fst
in
sar
hlt
rcl
fildl
test
jmp
mov
cmc
cmc
shl
cmp
out
cmp
fndisi(8087
cmp
hlt
test
jecxz
dec
cld
loope
jmp
jmp
repz
in
fucomp
in
adc
cld
aas
jecxz
jmp
adcb
les
lock
aas
cmp
int
testl
xchg
cmp
int3
repnz
xorb
fsubr
roll
test
leave
in
std
test
out
lds
lock
adc
movb
shl
cmp
fnsave
call
loopne
sti
jecxz
repz
cld
jmp
into
jecxz
into
mul
cmc
fnstcw
call
jmp
rcl
fsub
loope
aas
jmp
testb
popl
out
cmp
ss
aas
iret
fdivrs
incb
ror
mov
out
loope
loopne
in
test
rcr
fcmovne
stc
loopne
fcmovnu
movl
xchg
loopne
fucomip
iret
xor
icebp
div
int
idiv
ds
repnz
mov
cli
int
test
add
lret
into
cmp
cmp
xor
cld
push
sti
jmp
testl
leave
cmp
out
cmp
loopne
fcomi
sar
xchg
enter
fisttps
test
jmp
int
out
stc
aas
std
aas
test
ret
test
lds
rorb
sub
xor
div
hlt
cmpb
fsub
out
xlat
aas
lea
out
int3
int
fsub
cld
shl
fidivrs
clc
ljmp
int3
xchg
call
shr
std
lock
fmul
cmc
sti
fsubr
out
in
fimull
mov
test
ss
shl
fidivrs
sbb
sarl
aas
ret
clc
call
out
mov
in
loop
fstl
leave
fdivr
out
sarl
aas
stc
idiv
rcl
rol
loopne
mov
icebp
loop
in
mov
ret
in
cld
out
fdivrs
lret
cmp
cli
mov
mov
out
call
int
loope
iret
fdivrs
cmp
sti
cmp
lock
rol
fldl
decl
repz
xchg
cli
sarb
vpsrlq
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
aam
xchg
fs
add
sar
out
rol
icebp
xlat
repnz
in
std
out
loop
ljmp
cmc
icebp
cmp
idivb
adc
cmp
sti
mov
loopne
xlat
aad
fdivr
xor
cld
std
shl
add
repz
addb
jmp
in
ret
cli
clc
cmp
lret
loopne
sar
loopne
clc
fiadds
test
nop
mov
mov
int
lret
aam
out
out
xlat
div
shl
out
testl
int3
nop
fcomip
in
jmp
repnz
call
fmulp
cmp
out
ret
aad
fsub
rcr
mov
fcoms
jecxz
loop
fcmovnu
ss
xor
ror
in
fadd
div
icebp
hlt
cld
fimull
xchg
fiadds
fldpi
out
cmp
xor
icebp
test
faddl
aas
enter
test
sub
lret
xor
cmp
hlt
into
jmp
hlt
ffreep
loope
jecxz
xor
cli
incb
repnz
mov
fadd
clc
xor
repz
lock
test
xchg
enter
test
sti
cmp
xor
cld
xor
lret
testb
sti
fucom
fmulp
in
decl
ret
clc
in
out
enter
cmc
stc
jmp
cld
xlat
add
ljmp
sub
cs
lock
idiv
lock
cli
out
cmp
xlat
hlt
xchg
xchg
test
lret
into
fsub
repz
jmp
sub
in
xor
aad
out
ret
clc
shl
sti
repz
jecxz
sub
cli
call
xor
lock
xor
ror
bnd
cli
iret
out
movb
std
iret
jmp
ret
icebp
int3
call
repz
cmp
std
aas
cmp
in
lock
xor
rol
jmp
cmp
into
lock
aaa
cmp
call
ret
xchg
ljmp
xor
iret
cmp
cmp
xor
repnz
repz
lret
ret
in
int
jecxz
repnz
std
aad
lret
fldl
icebp
jecxz
cld
nop
xchg
xchg
xor
int
int
cmp
shr
fdivrp
cmp
call
cld
xchg
xchg
jmp
cmc
out
into
xor
fdivr
out
out
cmp
xchg
out
in
add
out
out
faddl
sub
ret
out
cmp
xlat
fcmovnu
fdivl
inc
sarb
leave
orl
icebp
iret
out
cs
cmc
test
cmp
out
fst
fsub
neg
loopne
orl
ret
out
out
ror
cli
shl
in
in
loopne
xlat
stc
mov
filds
divb
stc
sti
int
jmp
ror
repz
into
loopne
incl
and
jmp
int
cs
xor
icebp
xor
repz
in
rol
fcomi
ffree
jmp
jecxz
nop
xchg
in
mov
cmc
shr
cmc
xor
lock
in
sbb
cli
int
lret
in
fdivs
loop
jmp
stc
aad
neg
test
cmc
aad
mov
xchg
jmp
jmp
xor
aad
test
fcomp
std
cli
loop
enter
neg
xchg
lea
lock
xor
cmp
ror
repz
ds
repz
xor
sti
or
test
in
loop
lret
fcmovbe
sarl
in
into
xor
sti
xchg
fsub
fidivrl
enter
mov
decb
icebp
sub
ror
jmp
adc
repnz
fcmove
rol
std
jecxz
fcmovne
lea
out
aad
out
lret
aaa
iret
ds
in
neg
ret
faddl
rolb
inc
cs
int3
cld
fst
leave
icebp
repnz
not
add
and
std
cli
fisttpl
loop
mov
enter
cli
aaa
repz
cmp
cmp
clc
cmc
inc
jmp
jmp
jmp
lock
xor
out
cs
cmp
sti
loopne
call
sbb
filds
loope
in
cld
lret
clc
int
lock
adc
cmc
inc
neg
fmul
ljmp
hlt
int
leave
lret
ljmp
ljmp
movzwl
jmp
ret
aas
ret
aad
aad
mov
cmp
movsl
add
faddp
aam
addb
rorb
jmp
dec
clc
fsubrp
adc
testb
out
out
cld
fsubrp
mov
jecxz
sarl
enter
call
loop
aad
fadd
ljmp
test
orb
jecxz
jmp
fcmovnbe
cmc
loope
cld
leave
mov
clc
adcb
xor
in
sub
cmp
in
xor
test
xchg
fstp
jmp
mov
aas
out
xor
cli
aaa
dec
int
int3
rcl
icebp
fsubp
std
cld
not
xchg
in
nop
enter
fcom
ss
repz
roll
aad
call
enter
out
cld
fsubr
ss
in
lret
jmp
add
in
mov
test
shlb
ljmp
std
int3
cmp
test
fst
fld
jecxz
out
in
xchg
lock
leave
ljmp
cmp
clc
incb
xlat
iret
int
out
jecxz
enter
out
cmp
not
faddp
test
enter
lret
in
call
mov
mul
in
sti
xor
fxch
xlat
cmp
cld
hlt
aas
fnsetpm(287
stc
enter
ret
jmp
mov
ret
fcmovnb
cmp
test
repnz
out
cli
loop
mov
ret
int3
fcmove
xlat
divb
cmp
in
jecxz
loope
test
test
call
jmp
aad
lret
cmc
in
loopne
sarb
std
ret
repz
rolb
mov
out
lea
aaa
shr
rcr
not
ds
clc
loopne
xor
jmp
icebp
test
lret
icebp
fdiv
in
out
hlt
cmp
iret
ds
icebp
call
fsub
sti
fimull
loop
loope
in
ljmp
ljmp
call
in
mov
iret
loopne
into
xchg
mov
xor
int
xor
imul
cmp
xor
sub
mov
ljmp
lret
stc
fcomp
int3
neg
cld
xlat
rcr
aas
in
hlt
fdivrp
nop
popl
in
lret
ret
cld
into
enter
cmp
loope
cli
loope
cli
fmulp
xchg
shl
mov
cmp
aaa
xlat
jmp
ret
loopne
mov
fmuls
lock
jmp
leave
cmp
fucompp
out
std
flds
fdivr
in
jecxz
ljmp
in
cmc
shr
test
xor
in
iret
xor
iret
shl
test
ret
in
lret
jmp
incb
out
xor
ss
ljmp
out
in
addl
ret
nop
aam
out
leave
xor
jmp
fldl2t
fiaddl
jmp
std
div
iret
loope
icebp
xchg
loope
idiv
xor
cmp
icebp
rcl
fnop
aad
aad
fsub
fldl
aad
repz
repz
cld
in
loop
aas
hlt
loop
lret
int
fiadds
in
shl
in
out
out
out
div
out
into
cli
imul
fcmovb
ret
orb
test
aam
div
sub
sar
xor
sti
cmp
xlat
lret
jmp
stc
lret
out
fucom
jmp
repnz
call
pushl
hlt
ret
xlat
cli
out
loop
loopne
out
int
lret
in
rcl
jmp
icebp
test
rolb
aam
fdivrp
mov
in
les
fsubr
aad
cmp
cmc
shl
repnz
jecxz
decb
sti
out
jmp
fidivrs
in
repz
ret
addb
out
mov
mov
xor
jmp
into
fdivrs
idiv
iret
ftst
out
or
call
nop
out
mov
out
cmp
stc
in
not
iret
hlt
idiv
iret
in
ds
jmp
loop
xchg
xchg
iret
aaa
out
in
clc
shr
cmp
shr
cmp
ffreep
leave
out
xchg
sti
mov
in
addb
ror
int3
sbb
in
cmp
shr
enter
jmp
rol
ror
rcr
fcmovnu
mov
rclb
and
movsl
add
loopne
ljmp
hlt
call
aad
in
xor
lret
aas
iret
out
jmp
stc
out
in
fnsetpm(287
jecxz
das
in
int3
into
cld
cmp
xchg
loope
in
ljmp
test
loope
int
sti
xor
jmp
ret
icebp
loope
aam
loope
jmp
iret
xchg
mov
int3
xor
lret
hlt
fsubr
clc
lock
ljmp
hlt
xlat
fcmovu
fadd
in
fcoml
aam
xor
in
int3
shr
lret
fsubr
clc
repnz
add
aad
in
in
hlt
jmp
loope
ljmp
lock
xor
ret
fcmovnb
hlt
mov
jecxz
leave
lock
loop
xor
fxch
in
cmp
cmc
fdivp
jmp
ret
cli
fdivrl
test
in
out
jmp
sub
jecxz
hlt
cld
ss
out
jmp
cmc
ret
repz
iret
cld
cld
aam
shr
out
lret
in
in
iret
ljmp
iret
rcr
hlt
stc
out
out
shll
fcmovnu
std
lock
xlat
adc
xchg
loop
nop
mov
shl
loop
in
das
fadds
aas
shl
clc
cmc
call
fucom
out
lock
icebp
xchg
out
out
cmp
icebp
int
lret
shl
and
clc
out
test
xlat
adcb
iret
repnz
aaa
repz
not
fld
stc
fcmovnu
testl
sub
in
mov
hlt
icebp
aaa
call
cmp
ret
add
in
mov
enter
in
cld
push
xor
enter
cmp
and
std
sar
orl
loopne
sub
in
xor
sti
cmc
aaa
call
clc
cmp
xlat
ljmp
fldl
out
sub
xor
fmulp
in
out
out
loope
mov
xchg
iret
xchg
xchg
shl
fldlg2
xor
xlat
sar
cmp
fadds
jmp
out
repnz
in
lret
int3
cmp
cli
div
inc
div
aad
mov
mov
nop
mov
cmc
sar
aad
std
rcr
repz
aad
jmp
std
jmp
loope
xchg
ror
clc
into
into
cmp
cmc
out
std
and
fldl
jmp
nop
out
repz
test
ret
loop
rcr
in
in
jmp
roll
loop
fxam
fld
in
lret
ljmp
stc
cs
std
std
cmp
clc
lock
ljmp
loop
filds
jmp
ss
ds
rol
cli
in
ret
iret
xchg
jmp
out
cmp
shl
and
mov
mov
fisttpll
std
nop
xchg
loope
stc
shll
iret
shll
lret
filds
lret
stc
fdiv
cs
leave
aaa
leave
aaa
aam
into
iret
icebp
cli
repnz
xlat
aad
cli
out
out
ret
cmp
rcl
enter
int3
cmp
jmp
int
icebp
std
in
testl
in
loop
icebp
in
int3
xor
in
test
cli
cmp
test
into
repz
cmc
xor
cmp
stc
in
loop
loop
cmc
movl
xchg
in
xor
iret
fnstsw
out
cmp
loope
stc
incb
sti
nop
mov
cmp
cmc
cmp
lret
mul
repz
jmp
fldl
das
cs
cmp
cmp
xchg
ljmp
int3
mov
xor
fadd
out
int3
in
iret
shl
into
fnsetpm(287
loopne
test
orl
jmp
stc
cmp
clc
sti
lock
jecxz
loopne
std
in
ret
call
out
out
ror
rol
shl
sub
aam
sarb
aad
hlt
ret
test
sbb
out
cli
jmp
aam
test
test
cmp
ror
repnz
rcr
xchg
jmp
loop
test
inc
or
mov
aad
leave
aad
fcmovnu
sub
aam
lea
jle
movsl
add
xorl
xlat
fbstp
into
cli
hlt
repnz
std
aam
mov
fld
aad
clc
mov
aam
int
cmp
cmp
out
cmp
fdivp
fdivp
iret
cmp
roll
xchg
iret
xchg
in
int
jecxz
xor
fcmovne
cmp
loopne
ds
orl
jecxz
in
fildll
clc
out
cmc
cmc
xor
in
in
std
cli
imul
les
lret
out
in
fsubrp
xorb
cmp
fdiv
aas
cmpb
shl
inc
fildl
std
mov
ljmp
out
hlt
cmp
cmp
repz
hlt
ljmp
orl
clc
leave
lock
aad
aaa
iret
in
rcr
out
rolb
test
loop
or
fdiv
leave
icebp
call
clc
jmp
in
int
loop
test
aam
fldlg2
loop
fsin
fisttps
repnz
iret
aaa
sar
cmp
cmp
ljmp
repz
out
lock
lret
int3
out
in
hlt
ds
sbb
jmp
cli
fmull
mov
xor
lret
jecxz
cmp
jmp
jecxz
rorb
loopne
clc
neg
std
jmp
out
ficoms
xor
fsubr
fcmovbe
cmp
lock
shr
fisttpll
in
sub
std
iret
xor
sti
repz
loop
test
jecxz
in
fldln2
int
addb
ret
fidivl
lock
into
lret
fiadds
mov
mov
out
and
test
hlt
int
out
hlt
ret
inc
aad
sbb
cld
loopne
fcomp
cli
out
xchg
repnz
iret
stc
jecxz
cli
xlat
das
fdivp
cmp
ds
idivl
iret
fsubp
test
idiv
out
cld
ret
in
int
xchg
imulb
shl
xor
cmp
cmp
icebp
cmc
out
test
shl
ret
loope
loope
in
addl
out
int3
xor
xor
jmp
in
fucom
test
cmc
out
lret
cmp
jecxz
xlat
repz
in
in
cmp
lret
cmc
icebp
cmp
loope
ret
xchg
test
in
dec
loope
lock
xchg
rcl
cmc
fdivr
cmc
fistpll
loopne
ljmp
icebp
cmp
cli
leave
or
mov
cs
aam
xor
xlat
std
in
aad
inc
in
xchg
mov
out
out
out
adc
out
cmp
iret
fucom
fldl
clc
adcb
jecxz
test
cmp
sar
iret
aaa
iret
ror
iret
cld
loope
stc
jmp
or
out
mov
std
dec
xchg
out
icebp
sarl
repz
sarl
out
aam
filds
in
les
xor
stc
in
fdivrs
ljmp
in
rol
call
out
cli
xchg
iret
bnd
ss
hlt
fcmovu
out
shl
ds
fcmovnu
xchg
loope
mov
cmp
fisttpll
jecxz
in
ljmp
inc
fcmovne
jmp
in
test
fmul
jmp
lret
out
loope
xlat
out
cmp
leave
out
out
sar
repz
ds
test
faddl
jmp
aam
jmp
fcom
ss
repnz
lock
sar
ret
loope
ljmp
stc
hlt
in
into
idivl
in
fmul
fsubp
fiadds
jmp
in
jecxz
cmc
aad
clc
fcmovb
cmp
int
std
xlat
repz
int3
sub
fiadds
test
das
int3
loop
repnz
cmc
cmp
add
shl
mov
fndisi(8087
iret
leave
xchg
sti
ljmp
into
fcmovbe
fdivr
jmp
loope
loope
leave
aad
lock
in
into
xchg
repnz
fdiv
cmp
aam
loopne
test
fnclex
mov
std
fcomp
jmp
sti
mov
fucomip
out
aam
fidivl
call
ror
cmp
loopne
fst
cmp
loop
loope
in
loopne
icebp
jmp
shl
int3
fnstsw
jmp
aam
shl
repz
mov
out
icebp
xchg
loopne
int
aad
clc
sar
cmp
repnz
sbb
cmp
cmc
clc
fsub
xchg
ljmp
in
jecxz
mul
in
out
lret
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fistpl
sub
jle
add
call
cmp
ds
enter
and
divl
int3
in
shr
icebp
aad
cmp
div
fcmovnu
shl
loopne
fadd
enter
xchg
in
jmp
shl
ljmp
cmp
out
lock
mov
fcmovu
int3
fisttpll
call
out
cli
lret
stc
loopne
out
in
cli
hlt
enter
jecxz
lock
icebp
xchg
loop
divb
leave
vpsadbw
enter
aas
int
fst
cmp
in
loope
aas
in
xor
xor
lret
icebp
loope
aaa
hlt
aam
test
jecxz
loop
int3
lret
mov
rcr
not
ljmp
icebp
shl
loop
call
loopne
int3
in
jmp
addl
loope
loop
cli
cmp
xlat
lret
incb
xchg
fsub
std
leave
lea
test
jmp
xor
std
ror
icebp
sar
fstpt
out
leave
mov
lea
int3
loope
out
ljmp
aad
ret
in
cld
mov
mov
mov
call
das
sar
int3
xor
rcr
in
shr
in
in
xchg
repz
shl
fsub
lock
out
xchg
leave
xor
icebp
cld
fidivrs
aas
lret
ss
sar
repnz
orl
not
mov
leave
cmp
shr
loope,pt
ds
clc
cmp
addb
out
mov
fimuls
xor
repnz
xor
rcr
sarb
lock
and
aas
ret
mov
call
ror
xchg
hlt
ljmp
xlat
aam
lret
xlat
fdivs
ss
aad
xchg
clc
mov
adc
aam
fdivs
rcr
cmp
iret
int
stc
in
testb
call
in
addl
test
repnz
iret
cmp
sti
loop
test
mul
cmp
loopne
fildl
xor
cmc
in
sti
jmp
fcomp
test
xchg
xchg
mov
jmp
fucom
xlat
jmp
imull
cmp
rcl
xlat
loope
push
xchg
loope
testl
out
lret
fldpi
call
lock
jecxz
shl
mov
fsubr
leave
call
in
ret
shll
cld
cmpb
repnz
in
repnz
xlat
test
out
xchg
nop
nop
in
xor
xlat
call
sti
cmp
repnz
in
orl
fimuls
repz
enter
icebp
ss
loopne
aam
xchg
loopne
jecxz
movl
jmp
out
enter
aam
cmp
in
and
cli
lock
cli
jmp
xor
shr
int
int
fucomi
shl
fcmovnu
test
roll
jmp
fdivl
fcmovne
lret
cmp
cmp
icebp
icebp
std
out
out
ret
mov
enter
imul
jmp
clc
call
loope
jecxz
rol
fsub
jmp
les
loopne
iret
xchg
ss
in
ss
ror
ds
jmp
cmp
ret
decb
loope
mov
out
xchg
loope
leave
out
aad
iret
cmp
test
aad
icebp
in
div
test
fsub
cld
in
loopne
in
sarl
in
cld
hlt
idivl
int
shl
xlat
sarb
in
xchg
xchg
repnz
ror
xlat
hlt
repnz
xor
fadd
sarb
mov
mov
hlt
xlat
cli
out
int
cmp
into
int3
ret
aad
cli
in
sub
out
ljmp
lock
cmp
aam
cmp
in
leave
lret
adc
jmp
out
repz
repz
cmp
cmp
lret
nop
decl
in
clc
cmp
sti
int
ret
out
xlat
out
fsubrp
std
or
ret
mov
iret
icebp
int3
out
lock
cmp
sar
xchg
xchg
lret
testb
ljmp
into
aam
fdiv
ror
shl
stc
test
adc
lret
ljmp
sub
cmp
aam
ss
decb
test
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
test
out
sub
jle
movsl
add
test
rcl
xchg
loopne
sbb
shr
cmc
ret
xor
xor
loopne
lret
repz
test
loop
jmp
mov
out
in
in
xchg
neg
xor
int
xor
incb
ds
faddl
out
mov
out
in
loopne
iret
out
xor
out
adc
rol
rol
leave
mov
incb
test
repz
xor
xor
int
shl
aad
ror
ftst
cmp
xchg
cli
into
xchg
xchg
int3
enter
into
cmp
jmp
lock
repnz
cmp
leave
hlt
in
enter
hlt
repnz
test
cmp
shl
sbb
cli
xchg
fcmove
test
out
icebp
fldl
sti
icebp
clc
repnz
fcmovnu
cmp
cmpb
sar
leave
loopne
lret
movb
into
in
xor
ss
call
jmp
in
ret
in
std
dec
in
std
stc
iret
and
sarb
lock
out
cmp
cmp
cmp
cmp
repnz
add
orb
loope
in
aam
out
shr
ffreep
adc
shl
cmp
aam
mov
icebp
repnz
loop
out
in
jmp
icebp
out
sbb
cmp
repz
enter
loopne
in
test
jmp
loopne
shrb
rcr
aad
aas
loopne
shr
aas
rol
rol
xchg
xchg
loopne
mov
aad
out
ss
into
jecxz
test
mov
lret
in
cmp
lret
aam
ljmp
int3
shr
cmp
hlt
out
repnz
mov
incb
cld
in
xchg
hlt
fdiv
xlat
xlat
in
sarl
clc
out
jmp
out
fxch
enter
test
fcmove
cld
lock
int
iret
in
xor
out
call
out
icebp
fcmovb
aad
mov
ljmp
icebp
int3
leave
lret
hlt
xlat
xor
icebp
cli
repnz
xlat
cmc
xor
clc
sti
fdiv
cmp
xchg
ret
dec
fmull
in
icebp
int
stc
rcr
hlt
out
cli
loop
lret
mov
out
in
jmp
iret
in
int3
leave
cmp
int3
std
cmpb
fnsetpm(287
and
cmp
fmull
int
xor
into
aam
in
hlt
lock
cli
fildl
stc
call
out
iret
out
lret
out
das
icebp
jmp
ljmp
cmc
sti
flds
fucomp
out
repz
das
fisubrl
filds
and
out
mov
cmc
out
fcoml
in
rcr
sar
aam
cmp
cli
fistpll
test
call
testl
sti
xlat
ss
int
leave
int
in
xchg
enter
fcom
sub
in
call
xor
shl
sub
sarl
rolb
div
in
stc
jmp
addb
rol
into
xor
out
out
hlt
cli
shlb
cld
cmp
in
loopne
shl
out
out
loope
in
loope
icebp
fincstp
shl
cmp
loop
fadd
fldl
fucomp
int3
lret
clc
in
loop
int3
repz
jmp
lock
fcmovbe
cmp
incb
int
fucom
fdivr
icebp
jmp
into
ljmp
sti
clc
fld
fcmovnu
cmpb
sub
into
jmp
xchg
rolb
cli
aad
out
rcl
neg
test
call
mov
in
out
mul
repz
repz
xor
xor
fmul
test
out
out
jecxz
xchg
popl
loop
jecxz
aam
int3
fldcw
repz
not
ret
in
ret
jmp
aad
out
mov
jmp
xor
xor
int3
cmp
out
repz
out
fdiv
lock
clc
lret
fucom
int3
loopne
mov
and
jmp
in
iret
fdivr
leave
icebp
cld
cld
cmp
rolb
xchg
lea
jmp
lret
aad
int
jmp
cmp
xor
fldl
addb
ljmp
icebp
lock
fdiv
iret
roll
shl
fadd
lret
int
cli
xchg
hlt
fimuls
out
ljmp
lock
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
xor
jecxz
push
xor
jle
shl
out
fisttpl
divb
xor
xor
repnz
in
loop
out
loop
sub
lret
loop
xorl
xor
repnz
out
out
loopne
std
in
in
neg
loopne
loopne
call
in
ss
xor
clc
out
ds
repz
fucomip
enter
shr
repz
out
in
lock
sar
lret
jmp
fmulp
ret
lock
ds
xchg
leave
loop
repz
mov
in
iret
aad
jmp
cmp
into
iret
hlt
ret
cmp
xchg
aam
out
jmp
ffree
jecxz
repz
out
call
out
leave
aaa
iret
div
cmp
in
mov
lock
std
bnd
xor
into
fdivs
in
cmp
fcmovnbe
in
fdiv
std
adc
fdecstp
aam
ror
lret
xchg
loop
fyl2xp1
into
out
fdivr
fsubr
aam
sub
std
std
in
mov
xlat
xlat
mov
rorb
xor
clc
into
xor
icebp
iret
hlt
xorb
aam
repnz
xchg
out
loop
xor
lret
cmp
rcr
rcl
into
fsin
aam
test
fmulp
xchg
test
lret
xchg
iret
mov
ret
clc
ss
cmp
std
rcr
aam
fdivr
stc
incb
in
hlt
jmp
cmp
iret
ds
cmp
hlt
aad
out
mov
jecxz
lret
rcl
shlb
xor
xlat
fcmovnu
clc
into
sarl
repz
xlat
jmp
sti
fucomip
fmul
icebp
ljmp
xlat
cli
cld
cmp
in
jmp
fdecstp
cli
roll
loopne
in
loopne
fists
out
int3
shl
xlat
lret
aam
lock
test
test
fmull
ret
aam
cmp
fcmovnbe
shl
and
mul
test
test
enter
rorb
enter
aas
sarl
lock
test
stc
loopne
sbb
call
in
in
rcl
loope
sub
cld
xor
adc
cmc
neg
shl
jecxz
rcr
fdivr
xchg
in
jmp
hlt
test
ds
loope
sti
in
ret
fmul
fldpi
testl
into
lock
ss
cld
cmp
cmc
cmp
mov
add
stc
in
xchg
in
in
lock
cld
iret
aaa
iret
lret
frndint
test
rolb
xlat
decl
call
ror
div
cmp
icebp
jmp
loope
jmp
in
lret
xchg
aas
jecxz
xor
ss
idivl
cli
clc
in
cld
int
idiv
ror
mov
test
out
sti
std
out
loop
aaa
enter
lret
into
cmp
out
cli
shl
clc
mov
fsubrp
fadds
mov
leave
loope
test
ror
cmp
repz
loop
rorl
neg
in
in
out
loopne
in
xlat
xor
fcomi
xor
cmp
sarb
loope
call
in
mov
sbb
ret
ret
int
in
int
xor
ret
hlt
faddp
or
orb
mov
nop
aam
call
fsubr
rcr
cmp
repz
iret
cmp
mov
stc
out
in
out
mov
xchg
aad
lock
fucomip
aam
cmp
repnz
rorl
loop
mov
mov
enter
fdivr
fdiv
out
xlat
xor
hlt
incb
int3
icebp
int
incl
shr
das
lock
in
loop
hlt
decb
leave
test
icebp
ficoms
stc
out
ljmp
icebp
sbb
in
rol
cld
fiaddl
and
out
cli
lock
icebp
lock
cmp
hlt
lock
iret
rcr
mov
fsubrp
jmp
repnz
hlt
iret
ljmp
stc
jmp
fcmovbe
cmp
cli
cmp
addb
call
stc
rol
cld
cld
sar
iret
sti
repz
fucomip
std
shl
hlt
addb
jmp
add
in
cmc
aam
divb
in
cld
ds
rol
out
jmp
into
fadds
mov
into
loope
cmp
int
hlt
shl
cld
lock
cmc
cmp
mov
jmp
stc
mov
loope
loopne
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
das
mov
movsl
add
loope
out
enter
lret
shl
cli
ror
jmp
cmp
in
enter
fiadds
fsubrp
nop
sub
into
sub
rcr
call
xlat
fcmovbe
test
hlt
cmp
out
flds
jecxz
xchg
out
xchg
aam
out
out
cmp
fucomp
cmpl
ret
cli
xchg
mov
rcr
xlat
rol
repz
iret
into
lret
aas
roll
fsub
aad
loope
out
xchg
out
in
xor
aaa
std
lret
clc
leave
into
into
filds
cmc
add
jecxz
in
xchg
xor
cmp
ljmp
rol
ret
fcmovnbe
mov
hlt
rorl
test
cld
cmp
sar
ret
aam
loope
fld1
out
mov
leave
cld
test
in
std
sti
rol
ror
fdivrl
test
mul
int3
cld
xchg
loope
in
jmp
fcmovbe
clc
std
cmp
xchg
int
in
jecxz
lock
aad
int3
ds
shll
cmp
repnz
cmp
xrelease
lret
rolb
ror
divb
in
ljmp
sti
fdivp
fnsetpm(287
faddl
loope
in
lock
xor
shl
loopne
jmp
loop
adc
ret
cmc
cmc
lret
mov
xchg
lret
rorb
in
xlat
cmp
xor
jmp
not
in
idiv
jmp
in
shl
leave
xor
sub
fdivrp
std
or
ds
loop
faddl
test
call
fprem1
idiv
test
cmp
in
out
fsub
cmc
ffree
call
repz
rcl
icebp
hlt
idivl
enter
fstp
ret
stc
adc
test
enter
ljmp
aad
fxtract
cmp
sti
in
cmp
loopne
loope
mov
icebp
out
repnz
sub
out
repz
in
loopne
repz
stc
call
leave
filds
sti
cmp
out
test
int3
sar
cmp
xlat
mov
orb
loop
xor
xor
out
ds
fdivrs
fcomip
xlat
fcmovnu
out
mov
nop
leave
in
in
into
fdivp
fidivrs
idivl
cli
testl
loope
xchg
ljmp
xor
xlat
out
lock
in
int
loope
leave
ret
aam
stc
test
xor
xor
repnz
fmul
sbb
call
roll
repnz
cmp
hlt
aam
shl
repnz
in
mov
aam
jmp
xchg
out
iret
int
int3
ret
in
sarl
int
xor
rcr
loope
clc
loopne
addb
out
iret
addl
int
std
fsubrp
cld
int3
iret
rcl
fsub
mov
mov
aam
xchg
into
mov
cs
icebp
ljmp
shl
hlt
xchg
aad
test
cli
out
rcl
jecxz
in
xor
cld
aad
loopne
test
flds
out
loop
mov
iret
cmp
ds
aas
cmp
xor
rcr
jecxz
cld
vcvttpd2dqx
repnz
ror
std
idiv
enter
repnz
out
aam
div
cli
ret
mov
fsub
xchg
jmp
lret
icebp
xlat
jmp
cld
aas
repz
ret
cmp
cld
stc
sbb
jmp
out
stc
fnstenv
cli
neg
xor
cld
cmp
repz
fucomi
jmp
fsubr
cmp
in
out
jmp
idiv
frndint
leave
jmp
in
sti
test
xchg
test
div
out
aaa
sarl
loopne
cmc
cmc
and
out
loopne
call
out
loope
jmp
rcr
cmp
flds
loop
mov
xchg
cli
in
xchg
out
repz
shlb
aam
repnz
cmp
lock
mul
aad
enter
into
out
orl
call
aas
shl
fcmovbe
fiaddl
addb
repz
shr
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
repz
out
out
neg
in
in
in
cmc
cmc
cmp
fldl2t
out
mov
lret
xchg
call
fdiv
int
loope
into
rcr
out
sub
jmp
shl
out
div
hlt
cmp
fnstsw
repnz
push
mov
ljmp
ljmp
int3
ss
stc
in
cli
xlat
ret
neg
fdivr
loop
in
out
jecxz
xlat
rol
rcr
clc
out
leave
adc
lock
ror
fsub
or
in
lock
rcr
out
lret
aam
or
loope
rcl
out
jmp
mov
mov
call
int3
fptan
aaa
rcr
loop
call
clc
fisttpll
rcll
aaa
repnz
repz
fidivrl
fninit
in
std
mov
fmulp
out
xchg
out
lock
divl
clc
sti
leave
fxch
idivl
cmp
fisttpl
sub
xchg
fucomip
call
aad
cmpb
test
ds
aad
bnd
mov
out
mov
iret
mov
clc
lds
cmp
int
add
aam
std
aas
in
sti
cli
loop
jmp
in
test
jmp
xor
rcl
clc
hlt
iret
ljmp
mov
in
enter
orl
hlt
cmp
repz
ds
into
fadd
rcr
imul
in
sti
leave
adcb
in
stc
rol
ljmp
in
and
shl
rcl
loope
sti
ljmp
repz
xor
int3
loopne
cmp
stc
fdivr
fiaddl
mov
xchg
or
jmp
xor
in
xor
xor
cmp
in
ds
xchg
mov
xchg
vpsubb
jmp
nop
in
repnz
call
lret
shr
cmp
and
ljmp
loop
iret
repz
lret
fmul
cmp
incl
fcmovne
sti
lret
cli
and
call
xor
int
icebp
fsubrp
roll
out
loop
icebp
repnz
xchg
leave
in
cmp
xchg
das
lret
rol
cmp
jmp
repz
cmp
rcl
in
out
jmp
ror
out
out
xchg
les
cli
ror
fxch
xor
cmp
cmp
sbb
out
fxch
ljmp
cld
test
enter
xor
xor
ret
imul
rolb
mov
out
out
xchg
aad
xor
loop
icebp
idiv
cmc
jmp
ror
cmc
fadds
loop
lock
out
std
leave
aam
f2xm1
repz
test
ret
ret
aad
test
clc
in
enter
xchg
jmp
int3
fcmove
lret
test
loop
stc
xchg
jmp
out
xor
in
repz
fabs
cld
in
rolb
xlat
test
fmull
jmp
int
shl
ds
jecxz
cmp
lret
mov
in
std
loop
xchg
int
out
xor
leave
out
clc
ds
loop
fnstcw
sbb
fisttpll
in
cld
sub
out
xor
adc
test
fdivrl
fcmovb
lds
xchg
popl
xor
divb
in
in
fndisi(8087
sti
rcl
into
clc
ljmp
cmp
jmp
leave
stc
int3
xor
call
in
fiadds
and
out
lock
int3
into
in
xchg
sub
in
call
fnstsw
ret
aas
hlt
aam
cld
fiadds
jecxz
xchg
xor
cmp
stc
into
cmp
sbb
div
vpmuludq
cmp
in
out
hlt
lret
iret
ret
ss
shlb
clc
cmp
rcr
cmp
loope
call
into
lret
lea
xor
xor
shl
xor
adc
addb
sub
lret
int
mov
xor
out
fildl
cmp
sar
imul
addb
test
jecxz
out
cmp
loopne
rolb
test
fsubr
fildl
lock
fld
shll
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
ret
jle
movsl
add
jmp
cmp
stc
loop
xchg
xchg
sbb
iret
xchg
cs
neg
call
cmp
ds
loop
hlt
cmc
sbb
std
in
enter
fcomip
fnstenv
out
enter
clc
cmp
cli
std
cld
repz
cmp
mov
loope
loopne
in
xchg
xchg
icebp
divl
into
cmp
out
dec
xlat
repz
into
icebp
filds
fsubr
in
out
cmp
leave
cli
hlt
fdivrs
out
fdivrl
aas
loopne
cmp
hlt
fcmovnb
jmp
jecxz
lret
in
fsubp
jecxz
cmc
cli
ss
neg
aam
into
ret
test
fisttpl
xchg
lret
fsubp
jmp
test
jmp
addl
xchg
iret
mov
test
into
aaa
xor
rolb
xchg
lds
in
in
rcl
aad
repnz
ret
loop
cmp
mov
stc
in
icebp
nop
hlt
jmp
and
icebp
fstpt
cmp
iret
ds
cld
out
aas
xchg
decb
test
mov
xchg
out
xor
aad
ror
lock
aam
rcl
test
mov
shr
in
lock
stc
ss
cmc
xor
repz
enter
jmp
cld
in
mov
icebp
in
shl
icebp
ror
call
in
into
in
fadds
ffreep
hlt
aad
sub
out
mov
cmp
fidivrs
jecxz
fcomp
addl
rorl
loop
xor
xor
in
rol
or
loop
loop
xchg
xchg
in
pop
repz
cmp
lret
ds
iret
loope
out
repz
cmc
fcmovne
in
mov
xchg
incl
xor
int3
call
fcomi
test
fcmovnb
ret
roll
addl
ljmp
iret
div
ds
cld
shr
inc
adc
cli
fsubrp
mov
xchg
ret
cs
xor
aaa
cmp
out
fdiv
lret
mov
orl
hlt
icebp
cmp
fadd
stc
cmp
loope
cmp
xchg
aad
fsubr
dec
enter
in
repnz
das
ljmp
icebp
cmp
ds
out
loopne
fcmovbe
std
fldl
cli
out
addb
shr
jmp
fcomip
cmp
shr
shl
repnz
hlt
loop
int
orl
call
loopne
out
int
repnz
jmp
clc
out
rcr
sub
int
ss
neg
rcl
loop
aam
icebp
fcomp
mov
cmc
neg
loope
cmc
out
cmc
hlt
xor
xor
ljmp
test
orb
sbb
in
aad
aad
xor
xor
fprem1
iret
out
fsubp
fsubr
cld
cmc
cli
jecxz
mov
addb
in
enter
fcmovbe
out
cmp
and
repz
cld
loop
leave
call
nop
out
iret
adc
in
cmp
jmp
out
lret
cmp
sti
mov
mov
ljmp
cli
fidivl
rol
cmp
fsubr
cmp
sbb
clc
cli
fdivp
out
cli
xchg
into
into
mov
fcom
xlat
cmp
xor
xor
cli
rolb
fstp
fcmove
xchg
xchg
mov
out
jmp
lret
cld
fcmovbe
cmpb
test
fcomi
jmp
fsubr
icebp
in
call
loope
jmp
repnz
in
cli
cmp
idiv
fadd
xlat
fcmovb
int
into
decl
xor
in
in
repnz
fldl
fmull
and
fsubrp
xchg
test
in
mul
cmc
aad
repnz
test
jecxz
cmc
mov
testl
loope
lret
xor
shl
repz
test
mov
testl
enter
cmp
or
into
in
ret
cmp
ffreep
fsubrp
test
aam
add
into
aad
cmp
cmp
in
in
clc
cli
aas
ret
stc
cmp
mov
mul
ljmp
aas
shl
cmp
neg
xlat
sti
jmp
jecxz
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
mov
out
enter
add
shl
fcmovnbe
ret
into
orb
cmc
loopne
lret
jecxz
in
cmp
jmp
shl
ret
loope
clc
cli
sub
in
jmp
aad
mul
int3
in
iret
cmp
sti
cmp
cmc
movl
enter
xchg
icebp
xor
out
iret
std
leave
jmp
xlat
aas
cmp
cli
roll
stc
lock
loopne
in
in
fidivrl
out
into
cmp
repz
out
aad
loop
lret
ljmp
les
xor
les
int3
int3
int3
cld
leave
fdivr
fld
rcl
jecxz
loop
jmp
cld
xchg
lock
sub
neg
shll
fcmovne
in
xor
ds
sti
cmp
test
xchg
out
std
inc
idivl
int
hlt
out
stc
int
cmp
into
shl
ret
in
enter
call
xchg
int
ret
clc
aam
out
jmp
fxch
loopne
clc
sar
leave
idivb
fdivr
fcmovu
mov
in
adc
lret
fmulp
fidivrl
jmp
loop
repnz
lret
fdivrp
sub
icebp
mov
mov
shr
imul
sar
lock
lock
aaa
loopne
jecxz
fdiv
call
out
sub
jmp
cs
ss
into
hlt
cli
aaa
test
hlt
xlat
stc
icebp
jmp
in
jmp
xchg
out
das
cmp
repnz
cld
leave
ret
rol
aad
jmp
shl
xchg
adc
shr
aad
adc
jmp
add
fdecstp
stc
cli
not
call
lret
ret
cmp
into
in
test
ror
lds
int
in
in
cld
repnz
icebp
xor
fcmovnu
cmp
idiv
ret
sbb
in
jecxz
xchg
in
cld
xchg
out
into
leave
cmc
in
test
xlat
int
aaa
into
cli
fucomip
ljmp
or
aam
call
idiv
lock
out
into
loope
aad
ljmp
cli
lock
mov
icebp
ljmp
iret
loope
clc
fmulp
cmp
xlat
lret
fimull
in
int
ret
cmp
repnz
loop
aam
rcl
iret
repnz
orl
sar
xlat
icebp
lock
cmc
lock
int
std
rcl
sub
cmc
test
in
in
mov
out
sarb
sti
xlat
jmp
xlat
fcmovb
loopne
clc
leave
fdiv
std
std
test
ficoms
out
xor
int3
xor
aad
jecxz
test
out
test
ror
rcl
xor
cmc
cmc
fidivrs
repnz
fsubr
xchg
pop
icebp
out
jecxz
loopne
out
icebp
rol
out
sti
fstpt
enter
fcomi
repnz
test
xchg
xchg
xchg
loop
leave
icebp
jmp
fmul
or
neg
sarl
icebp
rol
xchg
lret
shr
loopne
xor
xor
lret
out
ljmp
cmp
fld
mov
mov
les
xchg
xchg
ss
cmp
shr
cmp
ret
stc
roll
in
addb
xchg
jmp
hlt
shl
or
inc
mov
movb
in
jmp
ljmp
jmp
iret
icebp
xlat
out
call
cmp
rol
ss
ror
sti
in
out
cli
out
test
xchg
out
nop
std
mov
hlt
into
cmp
stc
hlt
hlt
repz
fcmovnu
addl
fmuls
iret
mov
ljmp
call
repz
rcr
loope
std
addl
std
cmc
jmp
clc
cmp
clc
lock
out
cmp
loop
hlt
test
lret
test
mov
loop
sar
enter
shl
out
cld
test
test
in
mov
loopne
cld
in
nop
jmp
lds
lock
lock
hlt
sbb
jecxz
loope
mov
out
lock
ret
iret
cmp
cld
fdivrp
test
aad
loop
xlat
fsub
mov
out
in
loop
xor
lds
enter
ror
out
rol
clc
mov
jmp
aam
mov
xor
adc
add
jecxz
sti
out
cld
ror
xorb
in
iret
enter
iret
adc
cmp
and
mov
ljmp
xchg
ljmp
clc
loope
clc
loop
fcmovnb
mov
lret
in
in
in
shll
fst
cmp
fdivr
stc
test
ret
rorb
loopne
out
cld
fcmovnu
repz
enter
in
lock
ret
loopne
test
xlat
in
mov
cld
add
roll
out
cs
aam
into
cmc
into
in
repnz
test
icebp
hlt
xchg
ljmp
loop
out
cli
in
lret
jmp
jecxz
test
loop
rcr
test
fcmovu
jmp
cmp
in
xor
aad
aad
sbb
lock
xlat
sbb
nop
ret
bnd
int
xor
aad
cmp
lock
fucom
idivb
ret
fucomp
lds
testb
in
in
rcr
iret
repz
loopne
jmp
fndisi(8087
orb
sub
hlt
out
das
aam
stc
repz
loopne
sarl
in
ffree
mov
mov
xchg
xchg
jmp
in
std
cmp
lret
ret
aam
movb
mul
mov
iret
rclb
leave
out
call
cmp
rol
faddl
xlat
clc
clc
xchg
out
enter
out
shl
xor
test
addl
out
iret
loopne
mov
int
loop
in
xor
call
jmp
loop
loopne
fisttpll
std
int3
out
xchg
lret
out
rcr
hlt
out
xor
icebp
in
aas
aas
testl
repnz
fucomp
int3
in
fcom
cmp
cmc
hlt
xor
out
rcl
aam
test
jecxz
out
loopne
iret
std
addl
rcl
sti
lret
rcr
rcr
aas
test
lret
fmul
int
fdivr
out
ror
idiv
cld
fdivl
fsubr
int3
jecxz
ds
ljmp
enter
lock
xor
cmp
push
rolb
sbb
cmc
test
xchg
lret
in
loope
loope
repnz
lret
aas
cmp
repz
mov
filds
test
mov
jmp
shl
repnz
ljmp
sar
mov
mov
lock
in
rcl
repz
xlat
cmp
clc
cmp
fidivrs
out
ret
cli
ret
mov
nop
aad
clc
in
ret
cmp
cmc
ss
in
fidivrl
clc
test
stc
orb
test
int3
jecxz
lock
xlat
enter
fcmovbe
xlat
fsub
cmp
ret
addb
fisttps
enter
cmp
cli
icebp
loope
xlat
in
clc
lret
mov
xchg
div
jecxz
out
rol
shr
jmp
icebp
loope
shl
out
stc
stc
jmp
lock
int
xor
cmp
fcmovnu
sarb
loopne
fstp
into
out
mov
fsub
jecxz
lock
shr
out
out
cmc
clc
sti
cmp
sbb
out
cld
imul
std
into
ror
out
lret
in
jmp
fdivr
jecxz
roll
xor
lock
call
shl
fdivr
ret
enter
lret
in
cld
loopne
test
xchg
xor
cmp
out
cmp
out
ljmp
ljmp
mov
int3
loope
loopne
loope
xor
out
fcmovnbe
loopne,pt
aas
repnz
fnclex
fmull
int3
xchg
out
mov
icebp
jecxz
ljmp
icebp
add
aas
hlt
aad
in
stc
enter
in
sub
aad
jmp
xor
lock
in
sar
cld
repz
clc
testb
shl
out
aad
out
aam
iret
lret
cmp
loop
addl
into
out
orb
lret
ljmp
stc
sub
xchg
in
orb
adcb
cmp
xlat
fmul
fnstcw
fcmovu
test
mul
std
mov
lret
mov
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
xor
jle
movsl
add
mov
jmp
xor
icebp
aad
loope
icebp
fimuls
cld
or
fsubr
jecxz
fsub
clc
in
call
loope
in
xor
mov
shl
cmp
in
addl
rcl
cmp
cmp
ret
shr
decl
decl
clc
lock
shl
lret
ds
iret
fcmovbe
loop
clc
mov
loopne
mov
in
sub
in
out
call
out
fnstcw
out
idiv
aas
xchg
in
jmp
and
into
shll
xor
ror
fcmovb
rcl
in
lret
loope
sar
loop
xlat
testb
xchg
shr
into
in
fsub
ss
fst
cmp
out
repnz
loope
xchg
aas
int
int3
call
fdivr
loope
cmp
xchg
hlt
jmp
idiv
mov
mov
ror
cld
shlb
cld
loopne
in
test
fcmovb
out
fcomp
into
int3
int3
int
xor
jmp
ss
fnstcw
repnz
mov
cld
lret
mov
out
in
cmp
loop
div
out
iret
ret
hlt
mov
xchg
ljmp
mov
iret
into
cmp
aam
lock
cmp
repz
cmp
int3
out
iret
and
in
mov
clc
in
rcl
in
shr
in
int3
ljmp
out
stc
loope
in
mov
shr
xchg
int3
fidivs
xor
in
out
std
xor
xor
aam
xlat
roll
jmp
mov
cmc
leave
aam
out
hlt
cld
stc
shl
fdivrl
in
ret
loope
mov
in
nop
mov
fsubr
jmp
in
icebp
lock
call
fdecstp
into
fsub
div
aas
fsubr
mov
mov
or
nop
icebp
xchg
jmp
cmp
fcmovnb
out
sarb
fcomp
repnz
int3
xchg
aam
in
lret
cmp
cmc
cmp
shl
fucom
out
cmc
mov
in
mov
shl
aad
int3
in
cmp
cli
not
jmp
into
cmc
icebp
repz
out
loope
fsubrp
xchg
in
int
aad
das
rcr
enter
sti
ds
repnz
out
ret
mov
cmp
lret
call
nop
out
xor
loop
out
cmp
shl
in
add
in
mov
shr
or
enter
repnz
aad
call
icebp
cmp
fadd
icebp
in
mov
leave
call
xchg
int3
cmc
mul
jecxz,pn
in
aam
cld
into
int3
div
cld
neg
out
lds
mov
ss
loope
mul
repnz
fdivrl
lret
shr
repz
cli
sti
out
vpor
cmc
loopne
ret
into
into
fcmovnbe
clc
std
std
in
fucomp
in
mov
in
mov
xchg
jmp
jmp
sarl
into
aaa
cmp
aas
out
out
rcr
fxam
jmp
testl
ror
leave
fmul
int
in
cmp
cmp
mov
enter
in
loope
repnz
jmp
repnz
in
lock
sarb
aas
and
fsub
cmp
repnz
jmp
jmp
out
in
cli
aaa
jmp
sar
rolb
enter
lock
jecxz
out
jmp
hlt
in
cs
fidivrs
aad
fdivrs
xchg
xchg
jecxz
fmul
ret
out
ljmp
into
ror
in
lock
cli
shl
fcmovbe
rolb
shl
ljmp
in
iret
in
ss
out
sti
jmp
aas
fiaddl
xlat
div
mov
in
xchg
in
mov
xor
xlat
in
xlat
aas
sti
int3
lock
repnz
add
mov
jecxz
mov
out
mov
or
repnz
into
xor
icebp
incl
aaa
cmp
loopne
stc
les
out
fimuls
jecxz
rcr
fdivp
clc
cmpl
out
jmp
jecxz
rcl
rcl
xlat
into
out
icebp
lret
fidivrs
in
adc
cld
mov
mov
cld
decb
sub
loop
into
rcl
stc
hlt
addl
imul
test
xchg
lret
iret
loopne
lret
jmp
mov
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
in
sub
cli
ffreep
stc
out
jmp
in
icebp
leave
int
fsubp
f2xm1
sti
iret
xor
lret
cmp
fcmovu
sar
aad
xchg
cld
sub
in
enter
cli
sarl
ds
lret
icebp
out
hlt
loop
jecxz
dec
fisttpl
jmp
leave
fcmovne
call
shl
cld
decl
fucomip
jmp
mov
iret
fmul
std
fcmovbe
cmp
out
out
aam
in
or
incb
mov
shr
icebp
shl
cmp
lret
fpatan
cmp
out
rcl
mov
out
clc
movl
fxch
in
fcomi
cli
loope
ds
ret
test
fnstsw
out
rcr
in
testb
stc
rcl
out
hlt
cmp
and
fildl
in
fisttpl
mov
xchg
int3
xor
iret
fdivrs
shl
out
and
loope
call
out
rcl
out
xor
xor
jmp
cld
ds
sbb
test
xchg
fimull
in
lea
loope
xlat
jmp
xor
cmpl
fcmovnu
leave
in
ljmp
repz
ljmp
int3
repnz
rcr
sti
fxch
xchg
nop
fdivp
int
xchg
clc
lds
fdivr
out
shl
xlat
ds
and
cmp
aam
in
and
stc
and
xchg
xor
fidivl
cmp
cmp
sub
and
nop
cld
mov
rclb
shl
fcmove
icebp
cmp
cmp
in
jmp
orl
rcl
aad
ss
lret
int3
sarb
int
in
loopne
mov
mov
loopne
fsubp
lret
lock
repnz
xor
xor
fsub
fmul
icebp
rcr
aad
test
stc
hlt
cld
mov
stc
cli
xchg
std
int3
iret
in
in
xor
repnz
ss
idivl
in
hlt
inc
flds
sub
mov
cs
stc
cmp
xlat
cmp
ret
hlt
stc
jecxz
loopne
mov
repnz
int3
lret
sub
ror
out
cmp
xor
ret
in
fcmovb
lock
fsub
out
or
lret
hlt
xor
cmp
repz
fdiv
fucomip
cmp
in
aad
fcmovu
sub
std
hlt
fisttpll
rcl
out
stc
sti
sti
stc
rcr
iret
roll
std
mov
cld
ret
cli
test
shr
iret
xor
iret
jecxz
out
xor
fst
in
call
xchg
cld
in
in
jmp
xor
aad
cli
shl
test
std
jecxz
decl
ret
mov
sub
stc
vpminsw
cmp
jmp
sarb
icebp
out
test
loope
test
xchg
leave
fsubrp
lock
iret
cmp
lret
cmp
fnstcw
lock
test
stc
jmp
mov
xor
ss
int3
xor
shr
imul
adc
aad
ret
enter
in
fxch
mov
call
repz
jmp
addl
cmp
out
mov
and
shlb
repnz
enter
std
hlt
shl
sti
xacquire
nop
xchg
jmp
in
out
repz
test
aad
loopne
cmp
std
xchg
fcmovnu
loop
cmc
out
fsts
jmp
ret
les
cmp
sarb
loop
cmp
lock
out
loope
sti
icebp
in
lret
icebp
iret
int3
icebp
xlat
iret
call
lret
in
neg
into
shl
icebp
orb
out
sbb
out
lock
jmp
cli
repnz
cmc
fsub
idiv
fadd
std
xlat
call
loop
std
aam
mov
lret
aaa
cs
or
std
stc
fdivrp
out
std
not
loope
enter
leave
rolb
jmp
in
das
in
fdivrl
test
out
fimull
jmp
sub
rorb
cmp
test
int
cli
xor
xchg
fiaddl
call
mov
loopne
repnz
xlat
fstpt
aaa
clc
jmp
cmp
ret
repnz
aam
fildl
out
jmp
sub
std
aam
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
fstpt
movsl
add
xor
fcomip
enter
lret
mov
fisttpl
not
into
cmp
sarl
clc
fdecstp
neg
hlt
addb
mov
out
out
out
shl
int
xor
mul
enter
cmc
cmp
cmp
repz
lret
fsub
in
iret
mov
into
aam
cmc
xor
lret
leave
fmul
xlat
sar
hlt
repnz
clc
sti
lret
fmulp
out
in
and
mov
fxtract
shl
cmp
std
shr
cmp
ds
loope
in
lret
xchg
jmp
out
xor
sti
xor
in
xlat
aas
out
ds
cmpb
call
test
xchg
xchg
xor
cli
icebp
xor
repnz
aam
cld
loop
cld
enter
fmulp
iret
ljmp
int3
cmp
out
in
loope
clc
icebp
jecxz
cmp
xchg
xchg
std
into
fcmove
cli
lret
jmp
repz
leave
leave
imul
aaa
dec
out
shr
cmp
mov
jmp
cmc
icebp
shl
not
out
aaa
shr
int3
into
and
addl
test
testb
out
cmp
cmp
shl
clc
in
rcr
loop
neg
fdivrp
sti
and
int
xchg
icebp
xor
in
das
repz
xor
out
xchg
mov
call
cmp
cld
clc
cld
cmp
rcl
cmp
cli
orl
or
out
fcmovbe
ret
xlat
xor
cmp
not
aad
fninit
call
std
jecxz
xchg
rcl
test
lret
repz
cmp
loopne
iret
incl
cli
mov
out
shl
xor
fcom
aad
cli
rcr
aam
int
test
fcmovu
out
jmp
sti
ljmp
in
fdiv
cmp
iret
clc
in
cld
jmp
rcl
cld
call
add
xchg
iret
jmp
das
lret
test
flds
xchg
in
adcb
aam
xor
xlat
in
sar
clc
out
idiv
aaa
aad
ret
in
jmp
rcl
test
xor
in
icebp
jecxz
div
sarb
mul
cmp
aam
div
sti
sar
in
mov
out
in
fmul
out
iret
stc
rcr
not
fdivrs
fdiv
in
addb
out
loop
aad
mul
lock
cli
lret
cmp
repnz
cmc
xlat
enter
dec
test
xchg
shr
sar
cmp
shr
fucomp
out
repnz
cmp
jmp
int
cli
int3
mov
out
test
repnz
xor
cmp
cmp
cli
roll
mov
aam
int3
loope
xlat
loopne
jecxz
int3
jecxz
cmc
lock
jecxz
repnz
cmp
imul
ljmp
aam
xchg
imul
sbb
mov
icebp
xchg
loope
out
iret
cmc
call
rcl
imul
out
ret
xor
fmul
dec
cmp
jecxz
rcr
int3
xor
aam
cmc
cld
out
sti
lock
iret
idivl
xchg
mov
test
out
into
test
neg
jecxz
int3
into
ss
ds
ljmp
rcl
loop
fucomip
jmp
jecxz
in
lock
xor
cmp
cmp
aaa
ds
cli
leave
fyl2xp1
sti
test
mov
enter
shl
or
shr
xlat
ret
addb
out
xchg
xchg
lock
jmp
xor
sti
leave
int
loope
cli
cmp
out
xchg
fstl
rol
hlt
aaa
iret
aad
fnstcw
shl
stc
sarl
cli
test
call
enter
repnz
cmp
xor
fdiv
aaa
rcr
testl
out
mov
mov
sub
repz
out
cmp
sti
lock
addb
into
mov
call
sti
cmc
fcom
xor
icebp
std
repz
out
ds
testb
loope
xchg
mov
xor
lret
jmp
xor
fdivp
neg
out
rorl
mov
xor
jmp
xor
cmp
loopne
in
stc
loop
in
lock
roll
in
in
in
shr
fsubr
ret
cmp
int
cli
jecxz
hlt
sti
jecxz
mov
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
jmp
mov
jle
movsl
add
hlt
mov
and
int3
in
repz
xor
ljmp
lret
sar
cli
cmp
lret
ffree
leave
int
xor
loop
cld
int
cmp
int
imul
ret
aas
cmc
iret
repnz
fcmovu
loopne
out
fimuls
xorb
icebp
into
repz
std
imul
xlat
cmp
in
in
mov
enter
and
roll
out
shr
lret
xlat
cmp
test
testl
out
nop
test
iret
stc
div
cmp
iret
lret
sti
mul
out
cli
rol
cmc
in
sti
lret
fistl
xchg
roll
repz
enter
leave
shl
into
int
aad
call
mov
icebp
iret
fidivs
out
lret
int
aas
cli
ret
out
hlt
adc
in
sub
mov
rclb
xlat
ret
xor
jmp
fdivrp
xor
and
call
sub
cmp
ret
iret
int
fchs
int3
int
fst
cmc
test
lret
in
testb
dec
xor
out
divb
int
ds
sti
icebp
sti
enter
call
enter
fldl
repz
cmp
fdivrl
out
cmc
and
les
aad
int3
sti
fsub
std
mov
ljmp
cmp
cmpb
in
fiadds
fdivr
ret
into
cmp
jecxz
iret
in
ljmp
cmp
loope
out
cmc
jmp
in
sbb
in
mov
out
out
out
aam
rcl
lret
aam
into
stc
fadd
aas
loope
les
repz
int
icebp
das
in
cmp
iret
aaa
icebp
cld
jmp
clc
fndisi(8087
icebp
neg
test
fcmovb
lret
enter
in
ret
lock
cmp
call
ret
add
icebp
xlat
adc
flds
repz
bnd
icebp
ror
lock
icebp
aam
shr
fadds
test
xchg
shr
lret
mov
out
in
xor
xor
adc
in
xchg
and
mul
aam
cld
lret
int3
loope
into
xchg
in
ss
fdiv
cld
jmp
and
loope
lock
idiv
lret
enter
icebp
lock
int3
cmc
faddl
mov
jmp
cmp
xchg
imul
sar
int3
loopne
lret
std
in
test
aam
fprem1
fucom
testl
enter
int
lock
repnz
rcr
in
loop
mov
faddp
xlat
fdivp
mov
mov
shll
ss
call
leave
fsubrp
jecxz
aas
jecxz
lock
fcmovnu
cli
adc
iret
out
out
in
out
in
imul
int3
fxch
iret
shr
stc
out
addl
enter
imul
int
stc
aad
into
ds
cld
repnz
enter
in
loopne
loope
into
shlb
int3
hlt
fdivrs
lock
not
sar
mul
mov
stc
out
xchg
mov
int3
jmp
vpaddq
fdivrs
icebp
lret
in
cmp
aad
sti
jmp
into
call
xor
hlt
shl
out
cli
cmp
fucomi
jmp
aaa
fadd
test
mov
nop
mov
xchg
and
lock
int3
in
loopne
cmp
cmp
xlat
testb
xchg
lret
jmp
cmp
lock
cld
stc
cmp
test
xchg
jmp
fisttps
sub
repz
cli
iret
lock
xor
out
into
and
aas
cmp
loop
enter
fcmovne
out
in
hlt
cmp
cmp
out
lock
cmp
in
addb
fildl
rorb
fdiv
int
xor
in
cld
stc
repnz
clc
add
ljmp
fists
fdivs
cmp
out
fucomp
cmp
stc
ret
enter
xchg
jmp
mov
xchg
out
ljmp
into
cmp
out
in
repz
aas
roll
loopne
lret
call
repz
xlat
in
shl
shr
loope
adc
sti
cmp
loope
into
lock
jmp
clc
out
xor
sti
ljmp
out
vpsubusb
mov
int
je
mov
mov
jmp
int3
enter
lret
int
stos
test
mov
faddp
fsub
jle
movsl
add
fucomip
xchg
loop
xchg
repnz
fnop
leave
ds
fcomi
aas
xlat
div
stc
testb
mov
and
int3
test
lret
ds
ret
decl
lret
fcmovne
iret
in
mov
int3
lds
cmc
ljmp
faddp
repnz
sti
rcr
ror
ljmp
jmp
in
cmp
int
fnop
sarl
cmp
call
dec
orb
jmp
jmp
into
jmp
sub
cmp
repnz
cmp
ret
out
in
cmc
iret
out
into
int
stc
fidivrs
icebp
xor
sar
cli
loopne
ret
mov
mov
hlt
cs
xor
aam
sti
repz
fiaddl
aad
cmc
mul
repz
sub
ret
into
xor
aam
in
aad
cmp
repz
loopne
out
loop
nop
sbb
ljmp
xlat
out
cmc
cmc
fdiv
fdivr
loopne
cmc
mov
cmp
lea
test
lret
shl
ljmp
stc
ret
mul
rcr
sti
xchg
repz
sub
in
repz
stc
lret
iret
push
add
fucomip
test
in
fcomip
call
xlat
aaa
out
fdiv
fsub
cmp
lret
shl
jecxz
ds
loopne
jmp
lock
aam
icebp
lret
xor
cmp
not
clc
icebp
icebp
leave
mov
cmc
test
jecxz
idiv
enter
ljmp
cmp
in
jecxz
sar
repnz
clc
movl
iret
test
cmp
fdivp
mul
cmc
idiv
test
fsub
cmc
hlt
ljmp
ljmp
ret
aam
clc
cli
into
in
repnz
hlt
lock
out
out
mov
test
xchg
xchg
int3
xchg
loop
loop
call
sarb
shl
out
call
leave
loope
rorb
aaa
aaa
fucomp
xlat
ss
loop
sub
fcmovne
in
fiaddl
in
cmp
enter
fdivrs
loop
xor
xlat
in
fsub
fiaddl
rcl
leave
clc
cmp
clc
into
repz
fcomi
xlat
hlt
xchg
fcmovnu
sub
mov
into
hlt
in
shr
lret
rcr
aad
test
fsubr
mov
test
out
mov
aam
lret
into
jecxz
std
lock
mov
xchg
ret
lret
fucomp
in
ss
cmp
cld
sarl
cmp
rcl
aam
test
aad
in
out
les
icebp
loop
rcl
cmp
aas
sbb
rolb
sbb
test
repnz
call
das
clc
cmp
rol
cmp
xchg
cld
orb
add
cmp
int
fdiv
xor
out
repnz
ss
leave
jmp
fdivrl
or
int3
fnstsw
iret
rcr
icebp
rol
ss
cmp
iret
cli
lock
in
aam
fdiv
lock
std
shr
std
test
shl
repnz
hlt
fsub
call
fadd
sar
shl
inc
aam
and
mov
ficoms
shll
leave
ljmp
clc
loopne
sti
stc
sar
ret
jmp
leave
xchg
fsubrp
cs
shl
cmp
lret
fucomip
lret
fidivrl
cli
stc
in
out
mov
aad
cmp
cmp
sar
in
into
out
out
clc
mov
ret
std
int3
clc
fcmovnu
lret
fsubrp
addb
cmp
shr
out
cld
icebp
jmp
rcr
lds
leave
fcmovne
stc
sar
lret
mov
jmp
sub
aad
xor
loopne
fadd
ret
loop
out
xor
test
bnd
mov
out
sti
xor
out
idivl
in
idiv
mov
mov
and
enter
cmc
in
aaa
div
xor
hlt
jmp
int3
cld
fld1
testb
xchg
repz
xlat
enter
enter
testl
xlat
addl
xchg
repnz
xor
xor
xlat
hlt
aad
cmp
shl
test
out
lret
cmp
loope
int3
out
add
int
add
add
rorl
add
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
rcl
xor
jmp
aam
iret
into
call
loope
jecxz
test
fdivrp
fsubr
out
fcomip
enter
sti
ret
in
cmp
int
iret
fdivrs
cli
stc
icebp
mov
sar
fsub
mov
lock
int3
sub
repz
call
idivb
test
mov
imul
xlat
int
rclb
ret
shlb
lret
div
div
sti
cmpl
out
aad
test
cld
jmp
mov
xor
ljmp
stc
cmp
sti
test
test
out
lea
fidivs
xor
lret
leave
fdivr
aaa
fcmovne
add
fucomip
cld
mov
out
loope
lock
in
stc
in
aam
loope
out
int3
fcmovb
les
cli
fsubr
iret
xchg
add
loop
call
cmp
jmp
ljmp
cld
xrelease
das
ss
cmc
cli
cmp
int
idiv
cmp
rcl
div
and
loope
enter
lret
hlt
icebp
jecxz
into
repnz
repz
cmp
loopne
adc
mov
incl
int
fsubr
or
fyl2x
xlat
sbb
in
fldl
in
rcl
loopne
bnd
sub
in
in
cld
sarb
fcmovne
stc
out
cmp
loop
fimuls
faddl
int3
aad
enter
stc
cmp
jecxz
ffree
sbb
test
fsubr
test
loop
iret
out
lock
out
aad
int3
mul
repz
enter
out
into
into
icebp
in
fcoml
int
jmp
cli
cmpl
clc
lret
stc
out
out
into
lock
sub
cli
vaddsubpd
cmp
aad
sarb
in
enter
addb
aad
aaa
xlat
sub
xor
fdivr
fcomi
fmul
rcl
cmc
rol
mov
int
decl
int
out
in
enter
ljmp
fsub
std
ret
fdivrp
loope
out
lret
int
jmp
div
xor
cld
ror
icebp
out
int
stc
sar
bnd
cli
fcmovne
loop
call
xor
ret
leave
jmp
repz
adc
rolb
nop
enter
cmp
xor
in
aam
idivl
fsubr
fdivr
cld
sbb
fildl
xchg
out
repnz
stc
shr
jmp
clc
leave
loop
hlt
cmp
enter
mov
mov
lret
fst
aas
aam
cmp
shl
out
lock
cmpl
rcr
call
cli
jmp
loop
sti
ljmp
ret
shl
cmp
hlt
ret
stc
cli
xchg
bnd
test
cmp
jecxz
fadd
adc
sar
in
mov
mov
loop
loop
ss
hlt
out
ds
loopne
aas
iret
stc
idiv
call
leave
stc
ljmp
loopne
fcomi
xor
repz
fdivr
ret
mov
enter
out
ror
enter
cmp
int3
cmp
icebp
cmc
stc
cmp
test
shl
cld
sub
lret
mov
enter
xlat
shr
cld
shl
idiv
fcmovnbe
ret
out
cli
rol
cmc
in
loopne
fdivr
enter
fucomip
xor
fdivrs
xor
cli
hlt
ds
loop
repnz
jmp
int3
out
in
test
jmp
lock
cmp
cld
rcr
jmp
cmp
faddp
in
xchg
int3
fmulp
jmp
xchg
in
xor
loop
in
aaa
jmp
fsubrp
lret
filds
fcom
loopne
xlat
mov
xchg
enter
cmc
cli
std
jmp
aas
cmp
xlat
mov
lock
ror
ret
in
call
ret
xlat
and
call
jecxz
lret
int3
repnz
aad
xlat
stc
out
std
cmp
int3
xlat
cli
std
ret
testl
orb
jmp
xlat
fsubrp
cmp
int
loopne
aam
mov
out
loop
out
xor
das
sub
aam
rcl
cmpl
std
test
fscale
div
aad
out
call
repz
jecxz
rol
cmp
inc
or
movb
mov
jmp
mov
fst
fxch
jg
lods
loop
sbb
and
add
cmp
ds
aam
stc
aas
loop
ljmp
jecxz
iret
in
xchg
aas
shl
aam
fdivr
aam
div
xlat
cld
ret
shl
in
lret
rcll
sub
ror
sarl
aaa
jmp
shl
aad
fildl
int3
out
xchg
xchg
loope
loop
out
stc
jmp
xor
cmc
std
and
movb
jmp
mov
enter
das
ljmp
loope,pt
incl
xchg
into
int
shrl
ret
fdiv
lock
xor
fprem1
aas
ret
mov
cmc
loop
nop
icebp
test
call
cs
clc
lret
sbb
std
repnz
rcl
xchg
xlat
loop
loopne
xchg
jmp
dec
fucomip
into
hlt
shl
faddp
std
decl
int
enter
repnz
cmp
xor
lock
aam
lret
xlat
test
div
jecxz
stc
fucom
mov
fxam
adc
jmp
out
xor
loop
jmp
idivl
or
loope
in
lea
mov
into
jecxz
cmp
call
iret
aas
cmp
repz
hlt
sbb
aam
ftst
into
xchg
jmp
xchg
xchg
xchg
leave
in
repz
xor
int3
cmp
in
ret
enter
adc
in
enter
loopne
rcr
xor
call
dec
fcomip
int
ret
ret
ret
cmc
clc
clc
incb
xchg
xchg
sub
jmp
and
cmc
loopne
aas
enter
fcmovne
rcr
int3
fisttps
aaa
cmp
sti
ds
std
shr
cld
cmp
repz
fldl
xchg
xchg
jecxz
hlt
lret
shl
sar
repnz
shl
ljmp
out
xchg
loop
repnz
int
ret
in
shl
lock
jmp
in
stc
rcr
fstp
ret
loop
ljmp
mov
rol
call
aam
loop
iret
testl
fdivr
mov
xchg
rcl
shl
out
stc
lret
enter
leave
sar
lock
loop
sar
stc
in
addl
clc
rol
int
aaa
enter
fxch
cmp
aad
out
fsqrt
int
xchg
mov
repz
icebp
clc
cmp
cmp
aam
aam
icebp
loope
repnz
ficoms
in
ret
in
out
call
aad
lret
cmp
fmulp
test
fucomip
mov
loope
test
cmp
std
aad
rcr
fildl
call
loopne
int3
in
mov
xchg
out
ror
ljmp
loopne
loopne
testl
fstp
test
in
int
loopne
cmp
ljmp
addb
loope
cmc
sti
xchg
out
mov
loope
nop
aam
idiv
xor
in
clc
std
fucom
ss
aam
sti
sarl
enter
lret
jmp
in
call
hlt
xlat
hlt
lret
shl
stc
mov
in
out
das
xor
out
idivb
cmp
in
fucom
ds
incl
test
jmp
fmul
int3
int3
xor
divb
fisubrl
sar
std
int
cmp
fdivr
ret
cmp
loopne
std
test
loope
cmp
shr
call
hlt
lret
aas
cmp
aas
sti
ret
out
or
dec
shl
into
jecxz
jmp
aam
fcmovbe
fiaddl
rolb
out
into
test
xor
in
cmp
fucomip
cmp
xor
loop
ret
std
int3
or
mov
rolb
vshufps
jmp
clc
ret
cld
stc
fsub
shr
fiaddl
ret
cmp
in
cmp
cli
std
shl
cmp
loope
stc
fsub
in
in
iret
std
in
repz
repnz
xor
cmp
iret
repz
fstpt
cli
neg
aad
jmp
out
mov
test
into
ss
ret
cmp
idiv
xlat
fcomp
hlt
enter
lret
lret
iret
xchg
xchg
jmp
shl
ljmp
sar
ret
cmp
xor
leave
loopne
loop
decb
repz
aam
into
lret
int
lret
lret
in
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
cmc
int
jle
movsl
add
cld
ds
cld
rcr
cli
in
nop
int
shl
loopne
not
icebp
ljmp
ret
icebp
repz
ffreep
out
jecxz
lret
out
icebp
out
xchg
call
repz
rcr
loopne
std
lret
loop
mul
cli
std
aad
fisttpll
icebp
in
mov
leave
out
div
sub
lret
aad
out
fstp
enter
mov
out
lret
fucomip
in
ret
int3
bnd
repnz
into
cmp
mov
enter
stc
jecxz
out
mov
xlat
shlb
xlat
ljmp
into
fdivrl
xchg
cmp
lds
xacquire
in
divb
repnz
ss
into
fiadds
loop
xchg
mov
int
ljmp
cld
std
rcl
cmc
and
add
xchg
orb
ror
lret
jmp
repnz
out
stc
rorl
mov
xor
das
cli
cld
out
cmc
lret
aas
iret
test
xchg
fdivrp
cmp
fucomi
mov
shr
lds
aad
xor
lock
lret
int3
test
rcr
xchg
xchg
xchg
mov
xchg
aam
shl
icebp
imul
std
int3
aam
aam
iret
cmc
aam
mov
fadds
xchg
aad
loop
ljmp
adc
roll
jmp
call
into
nop
nop
cmc
loopne
ss
ss
repz
ss
jecxz
clc
xchg
ret
or
leave
mov
loopne
out
xlat
in
lret
cld
int
int
hlt
sar
loopne
repnz
cld
jmp
lret
fcmove
jmp
jmp
icebp
shl
lret
cmpb
stc
test
xlat
cld
int
fisttpl
repz
cmp
cmp
iret
cmp
icebp
rcr
out
jmp
aad
fucomi
les
out
jecxz
aam
out
lock
out
lock
cmp
idivb
clc
fprem
clc
shl
sti
in
fimull
mov
in
mov
repnz
hlt
cmc
lds
jmp
fcomip
fdivrp
jecxz
xchg
int3
fmull
iret
xchg
xchg
mov
clc
repz
cmp
xor
enter
lock
mov
jmp
leave
aas
fucomp
out
leave
les
in
loope
in
cmp
cmp
cmp
mov
mov
int3
fmul
lea
ljmp
rcr
int3
fadds
test
into
test
lock
shll
aaa
loope
xor
shl
in
aaa
xlat
incl
addb
popl
shl
out
test
cmpb
lock
fcmovnb
adc
xlat
stc
fucomip
imul
leave
orl
repz
in
ret
out
cmc
add
addb
out
mov
cmc
in
jmp
cmc
lret
sar
cmp
in
neg
imul
or
sub
nop
aam
ret
xor
fucomi
shll
iret
sarb
loop
lock
shl
in
lret
out
into
into
int3
out
loope
lret
in
xor
in
int3
cld
call
out
push
loope
cli
enter
xchg
repnz
mov
out
jmp
cli
idiv
in
cli
lret
sbb
mov
hlt
clc
lret
loopne
jecxz
call
cmc
int
xor
enter
cmpb
fcmovbe
ffree
faddl
mov
xchg
ljmp
cli
int
repnz
fcmovnu
loopne
cld
fcmovnu
int
call
shlb
divb
in
in
xor
fcmovb
lock
not
mov
ljmp
fcoml
in
jmp
xor
sar
ret
aam
ljmp
out
ret
jmp
hlt
ret
in
int3
fdecstp
xor
fidivs
mov
aam
faddl
leave
jecxz
xchg
int
aam
aam
xor
hlt
stc
out
add
sbb
stc
out
lret
neg
mov
call
out
xor
aaa
cli
aad
stc
out
shl
ret
adc
dec
lret
call
jecxz
int3
jmp
shll
aaa
cli
aas
out
cmp
loopne
cmp
rcl
stc
les
rcr
popl
out
div
ds
int
ds
loope
stc
mov
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
lret
fldl
hlt
shl
cmc
in
xlat
cmc
cmp
loopne
xor
out
stc
xchg
fsubr
xchg
loope
sub
into
ror
lock
aaa
xlat
xlat
fsubp
out
cmp
sar
mov
mov
addl
ds
ljmp
orl
jmp
lret
ror
sub
sub
cmp
ds
cmc
cmp
loope
loop
xlat
ljmp
xchg
lock
sub
rcl
into
cmp
cmp
div
hlt
shl
cmpb
xlat
shl
sub
lds
adc
loopne
aad
cmp
lock
aas
ffreep
xlat
rcr
ljmp
fistl
mov
test
call
shl
clc
test
ljmp
jmp
loop
into
out
jmp
jecxz
iret
fsubrp
leave
iret
cmp
sti
lock
hlt
cmc
xchg
fsubrp
mov
int
loopne
vpmulhw
repz
cmp
fidivrl
rcr
stc
cld
int
jmp
ret
xchg
xor
imul
cmp
aam
in
fdiv
ffree
roll
add
test
xchg
in
enter
xlat
repz
repnz
incb
incl
sti
fucomi
mov
ljmp
cmp
ret
les
sti
adcl
rcl
lret
shl
cmp
jmp
hlt
out
sbb
in
repnz
rolb
in
call
cmp
ret
out
test
roll
iret
mov
lret
test
xor
lock
sti
cmp
repz
ds
cld
cmc
jmp
out
loopne
icebp
in
xchg
out
shl
imul
call
aad
cmp
cmpb
les
enter
testl
call
xlat
repz
leave
jmp
cld
ror
loopne
sar
fxch
in
in
loope
mov
icebp
xchg
out
leave
out
enter
aam
cld
clc
test
rorl
leave
in
into
ror
leave
xor
cmc
cmp
stc
fdivrs
cmpl
cmp
mov
idiv
call
xchg
in
repnz
xor
cld
fidivrl
stc
and
ljmp
jecxz
lret
jmp
cmc
fsubr
in
jmp
fcmovb
idivl
in
xor
xchg
ror
leave
xchg
rcl
stc
int
repnz
in
in
loope
in
fsubrp
call
ljmp
lock
shl
cmp
in
xor
int3
aas
out
xor
cld
rorl
incb
in
les
neg
aad
xor
cmp
clc
fdiv
xor
loopne
addb
jmp
aaa
xor
jmp
leave
repnz
cmpl
lret
loope
xor
xor
mov
xor
cmc
xlat
jmp
fcomi
xorl
fcmovbe
test
icebp
out
int3
shl
ror
xor
repnz
dec
aad
into
addl
les
loope
jmp
aam
out
in
repnz
shl
stc
cld
aas
aaa
cmp
cld
cmp
rolb
cld
mov
call
cmc
icebp
mul
out
cmp
in
rcl
iret
int
loope
out
roll
cli
lds
fists
loop
ret
sar
aad
sbb
icebp
fcmovnb
cmp
les
fninit
lret
fld
std
test
ljmp
das
cli
not
loop
cmp
jmp
in
fisttpl
int3
iret
xor
lret
loop
fmul
aaa
cmp
fiadds
cld
ds
repz
cli
ror
mov
xchg
in
in
not
cmc
ss
fcmovu
loopne
cmp
aam
sub
nop
filds
into
in
hlt
idiv
std
sti
xor
loopne
into
out
xchg
in
loopne
sti
and
mov
out
adcb
xor
in
lret
sarl
hlt
xchg
testl
out
hlt
repnz
fsub
shl
cmp
xor
test
xlat
xchg
mov
fucom
xchg
icebp
into
jmp
into
jecxz
int
in
aam
leave
ret
ds
shl
aas
mov
mov
add
jmp
aam
iret
int3
fst
outsl
fmull
push
mov
fwait
sti
jle
movsl
add
mov
dec
loop
repnz
cmc
jmp
lret
rcl
call
mov
fsubp
xchg
jmp
in
mov
hlt
sub
cmp
sti
sarl
cmp
sub
icebp
stc
in
jmp
int3
mov
out
jecxz
aas
jmp
cli
cld
or
hlt
in
into
add
clc
adc
aad
lret
adcb
out
lret
out
cmp
out
repz
into
iret
fildl
in
out
loopne
loope
xor
jmp
cmp
sti
sti
int
repnz
cld
cmp
jmp
rcr
iret
in
jmp
shll
in
stc
fnstenv
repz
out
cmp
ret
loopne
aad
fsub
mov
in
mov
fdivs
jmp
lock
fsub
cli
cmp
orb
rorl
ror
cmp
out
leave
sti
aam
fistpll
cmc
sti
out
decb
int3
in
div
out
div
aas
repnz
cmp
rol
jmp
lret
fcmovne
mov
loopne
mov
out
das
cmp
cld
cmp
neg
loop
shl
cli
ret
enter
out
mov
cld
xchg
icebp
int3
xor
cmc
leave
repnz
ds
sti
jmp
fcmovnb
ffreep
rcl
xchg
out
test
fsubr
jmp
lds
fdivp
lock
cmp
sar
shl
test
mov
xlat
jmp
out
jmp
int3
xchg
ljmp
cli
fld
aam
fcomip
call
clc
fmuls
mov
into
ror
cmc
xor
aaa
int3
out
ror
shl
clc
cmc
clc
out
and
int3
loope
repnz
xor
leave
stc
ss
ret
jecxz
stc
aam
mov
in
xchg
out
int3
divl
lret
clc
cmc
jmp
icebp
sti
out
std
aas
test
mov
repnz
out
add
aam
xlat
lret
sarl
int3
int
filds
lret
in
mov
xchg
xchg
mov
enter
hlt
rcl
into
loopne
into
sar
ret
lret
idiv
leave
lret
cmc
out
xor
icebp
xor
fcomp
shl
xlat
test
xchg
jmp
mov
jmp
loope
lock
cmp
fldln2
shl
cmc
loop
call
mov
mov
mov
jmp
jecxz
stc
cmp
repz
int
ret
rcl
in
ret
iret
mov
rol
shr
repz
jmp
std
hlt
int
xchg
xlat
sti
sub
icebp
lea
fsqrt
lret
into
cmc
ds
mov
ret
clc
xchg
mov
xchg
mov
mov
mov
loop
icebp
cmp
into
cmp
roll
ds
jecxz
ljmp
clc
out
xor
jmp
out
out
repz
iret
test
hlt
xchg
cli
testl
xchg
cmc
shl
ss
cli
aad
out
fxch
cmpb
sti
out
in
hlt
enter
mov
mov
jecxz,pn
xor
repnz
enter
cmp
in
int
mul
enter
xchg
fmull
ret
out
shl
call
cmc
in
hlt
rcl
rolb
out
sbb
fists
int3
xor
cmp
jmp
fadd
out
xlat
shl
fcom
cld
xchg
ljmp
mov
loopne
jmp
cmc
cmpl
fadds
xlat
clc
mov
out
repnz
iret
xchg
loopne
fcmovbe
out
int
in
jmp
ftst
fadd
jmp
mov
out
ljmp
out
fcmovnu
into
out
fsubp
imul
ror
icebp
cmp
jmp
loope
flds
xor
shll
hlt
ror
call
ret
repnz
fcmovnbe
enter
in
in
and
xor
shlb
iret
xor
lock
aas
lock
mov
int3
repnz
cs
sarb
leave
out
out
idivl
cld
shl
in
addl
loop
xchg
in
icebp
ljmp
cmp
out
hlt
stc
cld
loope
lock
call
cmp
std
cmp
clc
fucomp
lds
lea
jmp
in
sub
inc
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
push
cmpb
add
rcl
lock
fdivrs
ds
fcmovnb
lret
fmul
into
fst
lret
fisubrs
hlt
ret
loop
out
aad
loope
std
rcr
aad
in
dec
xlat
cld
std
loope
out
incb
shr
ror
enter
in
idivl
stc
in
stc
icebp
out
loope
xchg
icebp
nop
icebp
cmc
leave
xor
rcl
aad
int
cmp
std
jecxz
rorb
loope
mov
lock
lock
ret
xor
cmp
cli
mul
xlat
shl
std
jmp
cld
int3
dec
in
xchg
in
lock
fst
xor
aam
out
xlat
loop
not
ret
in
mov
mov
mov
sbb
fdivs
stc
cmp
lret
cmp
mov
xchg
call
rcll
into
shl
sti
cmp
hlt
add
test
leave
rolb
icebp
fcom
repnz
int
ljmp
fst
sti
loope
clc
into
std
clc
mov
out
out
icebp
repz
fnstsw
fxch
jmp
shr
out
push
rcr
mov
sbb
xchg
sub
out
icebp
into
aad
cmc
repz
ds
movl
loopne
popl
cmp
cli
ljmp
fnstcw
testb
fld
int
xchg
nop
test
cmc
in
cs
hlt
loope
clc
xlat
loop
into
in
in
ret
jmp
lret
fcmovne
jecxz
xor
xor
repz
cmp
cmp
les
jecxz
fcmove
lock
repnz
aad
cmc
jmp
fnstcw
cmp
fcmovu
jecxz
adcl
sti
repz
int3
cld
fucom
std
ds
mov
leave
jecxz
out
out
decl
in
sti
int3
cld
xlat
hlt
fcos
iret
call
faddl
fisttps
jmp
in
out
rol
aaa
imul
lret
shr
jmp
in
cmp
neg
loope
fisttpl
mov
into
xchg
in
lock
repz
fildl
mov
int
out
xchg
xchg
jmp
sub
fadds
fsubrp
enter
xchg
leave
out
mov
rol
divl
sar
repz
cmp
cld
loope
repnz
hlt
sub
xchg
out
in
icebp
hlt
sti
aam
fcom
fnstsw
sarb
test
fucomp
shr
ljmp
rorl
xor
in
lret
loopne
cmp
std
iret
in
xchg
cli
test
in
fcos
call
clc
in
aam
shl
lret
out
xor
icebp
ret
rolb
testl
jmp
hlt
aam
imul
sti
fildl
testb
jmp
mov
int
icebp
jmp
ret
fidivrl
out
int3
lock
cld
sar
hlt
std
stc
addl
out
repnz
divb
cli
jmp
fchs
cmc
cmp
into
icebp
ds
testl
shl
in
jecxz
repz
out
cmc
xor
cmpb
cmc
cmp
jmp
hlt
xchg
hlt
sub
xor
clc
int3
cmc
mul
cli
ljmp
loope
jmp
xlat
loope
xchg
in
out
xchg
xor
xor
shr
rcr
cmp
rcr
loop
ret
sti
fucomip
mov
in
aaa
sarl
xlat
repz
ss
sar
rcl
aam
loopne
fimuls
iret
leave
mov
shlb
int3
sub
lret
dec
out
loop
mov
out
xchg
lock
loop
lret
rol
xor
rol
cmc
cmp
mov
in
fmulp
mov
nop
ficoml
shl
out
aam
out
fucom
fildl
cmp
jmp
loop
loop
cli
fisttpll
lock
call
repnz
add
enter
lock
xchg
out
aaa
mul
rcr
aad
aad
lock
lds
shr
repnz
aad
lock
fdivp
loopne
clc
rcl
ret
call
mov
repz
out
out
fnstcw
cmp
jmp
je
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
shll
jle
movsl
add
out
test
loopne
rolb
mov
in
ret
neg
aaa
fdivrp
out
fdiv
fadd
lock
repz
clc
ret
mov
repz
mov
jmp
out
enter
aam
and
repz
repnz
mov
call
shr
xlat
clc
sti
hlt
idiv
call
test
xchg
in
leave
std
notb
out
repz
xor
out
call
sarl
fistpll
cld
imul
xlat
int3
mov
out
ret
enter
cld
aam
cmpb
addb
loop
xchg
out
jmp
int3
ret
in
roll
repz
mov
xchg
fsub
ret
in
loope
in
fmul
out
sar
clc
out
in
std
out
fadd
cli
aam
in
std
in
stc
mov
mov
leave
bnd
xor
cmp
fsubr
flds
lock
in
loope
ret
aad
xor
fcmovbe
fmulp
sti
test
lock
fidivrs
fdivp
fld1
clc
and
test
loopne
test
out
fstp
cmc
int3
into
jecxz
jmp
rolb
in
fucomp
or
rol
mov
xor
leave
aad
cmp
leave
ds
in
call
test
out
repz
repz
in
fcmove
cld
leave
cmp
rcr
fcomp
roll
mov
loope
ljmp
fidivl
aad
xor
cmp
les
mov
lock
xchg
fstl
ret
sar
fcmovnbe
out
iret
div
cmp
xchg
mov
in
faddl
icebp
mov
repz
out
clc
ds
cmp
test
lret
xchg
out
mov
int3
jmp
cmp
aam
cmp
iret
int3
rcl
ffreep
xabort
test
test
xchg
out
jecxz
xchg
test
xlat
call
fcos
fdivr
add
rcr
cli
in
enter
repnz
test
test
aad
cmp
test
in
lock
mov
in
ljmp
xchg
xlat
enter
hlt
xlat
shll
fldl
shl
cld
repz
cli
lret
repz
cs
int
jmp
lock
out
fcomp
testb
xchg
loop
int
shl
in
loope
cmp
icebp
ror
cld
in
std
ret
out
in
rcl
in
ret
jmp
leave
repz
xchg
xchg
xor
cmp
repnz
cmp
cmp
fcomp
ret
out
flds
incl
int3
iret
cmc
sti
cmp
loope,pt
jmp
faddl
mov
cld
icebp
loope
cld
xchg
in
jecxz
out
ss
out
hlt
cld
sarl
xlat
shl
aad
hlt
jmp
jmp
icebp
jecxz
jmp
ss
stc
xor
fdivr
test
repz
mov
iret
xchg
xchg
out
int
faddl
fld
jecxz
shl
xchg
jmp
mov
xlat
repz
cli
int
aam
aam
std
in
cmc
stc
fsub
roll
enter
xchg
shl
cmp
out
clc
in
cmp
repz
ror
mov
mul
out
in
mov
fmulp
jmp
repz
fcmovnu
fucomip
fmul
loope
loopne
cmp
leave
leave
jmp
leave
jecxz
loop
mov
int
out
lret
ljmp
clc
and
cmc
mov
cli
fistl
xor
hlt
jmp
fdivp
sar
fcmovne
jecxz
cld
enter
fisttps
int3
rolb
repz
hlt
lret
rcl
repnz
sar
div
ret
out
xchg
out
xchg
fucomp
ljmp
xor
fidivs
into
sar
repz
mov
jmp
nop
test
mov
in
fdivs
shr
out
aam
rolb
xchg
not
in
mov
jmp
loop
xor
into
sti
lds
mul
in
xor
cmc
xor
loop
int3
stc
ljmp
repnz
leave
ljmp
ror
ret
test
xchg
call
clc
sbb
cmc
call
fsubr
out
sarb
cmp
aam
add
lods
or
add
add
add
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
push
push
outsb
lods
nop
mov
movsl
add
fucomip
enter
sti
cld
mov
fiadds
ret
lock
clc
int
fcomi
loope
int
repnz
ret
cmc
in
lret
lea
aam
lock
cld
leave
fstp
sub
cmp
sar
fildl
leave
out
xchg
jecxz
shrl
ret
jmp
cmp
cmp
in
fstp
cmp
cmc
jmp
fisttpll
sar
aam
repnz
cmp
cmp
sti
repz
fdiv
in
test
out
int3
int3
iret
cld
cld
aaa
fucomp
incb
aad
les
sti
cli
int
into
mov
cmp
in
ds
hlt
test
rcl
ljmp
fldlg2
jecxz
int
xchg
leave
aad
aam
fcmove
leave
int3
out
ret
iret
icebp
hlt
add
loope
mov
mov
int
lds
xor
stc
fidivl
enter
lock
aas
xlat
lds
xchg
mov
xchg
aam
jmp
in
sti
ds
loopne
rcr
test
fdiv
fmul
out
mov
mov
adc
enter
cmp
int
test
mov
sti
les
mov
xor
iret
aad
cmpl
in
into
rcr
cmp
enter
iret
stc
cli
ljmp
lock
hlt
icebp
fstp
cld
aaa
cmc
test
loope
std
cmp
lret
int3
loopne
leave
rcr
int
jmp
cmp
out
xor
int3
ret
test
stc
movb
test
mov
mov
loop
out
aad
in
fcmove
ffreep
jmp
addb
in
shl
std
mov
in
sti
aad
repnz
lret
jmp
cld
fcomp
sarb
xchg
mov
lret
in
lret
incl
xor
repz
adc
test
call
xchg
mov
out
repz
rol
int3
cmp
std
bnd
icebp
cmp
shl
out
int
fsubr
xchg
fdivp
lret
enter
xlat
cli
cmp
sti
enter
int
aaa
shl
fdivrp
push
fcomp
in
in
in
std
xchg
ror
lret
das
repz
cmp
xlat
leave
std
cmp
flds
and
mov
sub
shlb
ds
cmp
rcr
aam
mov
lds
mov
mov
xchg
test
cmc
loop
fdivs
cmp
sti
sti
ss
shl
mov
mov
mov
fsqrt
test
out
xchg
hlt
sub
ror
xor
aaa
shr
shl
cmc
test
fiadds
cmp
in
in
sub
xor
ss
out
xlat
fucomip
sti
ret
loope
xlat
leave
aam
xlat
ljmp
nop
imul
clc
ljmp
std
cmp
ror
cmp
ret
leave
rolb
cld
fsubr
roll
shr
xor
fstp
jmp
shl
clc
sti
incl
flds
jmp
out
aad
cmc
ds
call
sar
sti
cmc
vpaddd
mov
sti
fsubp
xchg
mov
addl
ror
fdivr
repnz
fadds
cld
xchg
lret
lret
loopne
out
aad
fdivr
cmp
in
aam
shl
fiadds
cmc
clc
test
out
notb
xor
into
iret
fcmovne
xor
int
mov
ret
loope
std
mov
mov
ret
out
mov
loop
in
aaa
fxch
iret
repnz
cmp
fsubp
fdivrp
clc
sbb
xchg
xlat
rcr
in
and
shl
cmc
xor
out
aaa
aaa
enter
hlt
stc
clc
cmp
mov
fcmovnu
filds
iret
jmp
std
xlat
stc
stc
stc
shl
in
loopne
fmul
out
loopne
out
into
loope
xchg
into
ret
cmc
shlb
aam
idivb
cmc
sarb
orl
out
icebp
aad
lock
leave
iret
cmp
cmp
in
lock
lock
cli
out
mov
test
loopne
icebp
jmp
aas
leave
jmp
rol
aad
in
movl
in
ljmp
repz
cli
lret
fcmovbe
xor
repz
mov
fucom
rcll
shl
int
fst
fsincos
out
jecxz
shr
xchg
neg
cld
call
jne
jmp
int
into
fst
das
inc
aam
adc
mov
movsl
add
xchg
mov
mov
in
cs
shl
leave
jmp
fcmovbe
sar
not
cmc
loop
cld
into
xchg
das
in
ret
int3
into
in
std
stc
hlt
cld
sti
sti
ret
sti
cld
mov
orl
leave
aaa
iret
cmp
sar
fiaddl
fstp
test
aam
out
sub
out
xor
in
enter
xlat
lret
test
filds
out
in
xchg
int
mov
out
nop
xor
cli
lret
loop
or
in
sti
xchg
fcomi
cld
lock
loope
xor
shr
cmp
clc
loope
test
in
jmp
repnz
out
in
ljmp
into
in
xlat
repz
aad
aad
rcl
rcl
fld
out
xchg
jmp
iret
jmp
cmp
int
xor
jecxz
std
in
repz
fdivrp
stc
mov
in
fimull
ljmp
enter
int3
cmp
fldl
rcr
addb
ljmp
shlb
cmp
testl
int
int
loope
shl
not
vaddsubps
fscale
cmp
cld
loop
in
stc
fadds
std
in
out
in
loop
icebp
leave
das
shl
ds
cmp
clc
cmp
vpminsw
call
cld
loop
out
xchg
jecxz
fcmovbe
int3
fidivrl
clc
in
fsubr
cmp
fucomip
ret
test
loop
cld
mov
xor
fmul
sti
neg
filds
orb
loop
lock
loop
jecxz
ror
enter
fcomip
fsub
addb
jecxz
fimuls
test
hlt
jmp
shl
in
aaa
fucomi
cmp
in
enter
ljmp
xchg
call
fdiv
sti
cmp
testb
enter
xlat
loop
lret
in
out
divb
repz
into
clc
out
in
enter
sar
repnz
rcr
sbb
repz
fimuls
out
icebp
test
aam
sarl
cmp
aam
aaa
add
clc
xchg
ret
cmc
enter
std
jmp
lret
loope
jmp
cmp
stc
xor
rcr
mul
aam
testl
fbstp
in
mov
std
aam
clc
cmp
not
fcomp
iret
fmull
cld
fcmovne
mov
xchg
lock
test
cmp
xor
fdivrp
adc
fadd
mov
in
loopne
fmulp
xchg
out
jmp
fucomip
clc
cmp
jmp
cmp
call
test
fstp
sar
rcll
xor
loop
std
hlt
rcl
std
in
adc
fdiv
out
cmc
fmuls
xchg
out
leave
mov
out
int3
cli
fdiv
xor
cli
ret
ret
fsincos
xlat
lret
ljmp
hlt
sar
ror
clc
aaa
divl
fmul
cmp
aad
loop
jecxz
cli
mov
aad
cli
int3
fstl
repz
call
in
loope
ds
test
call
std
add
in
out
ret
cli
fsubr
int
ss
jecxz
cmp
fcmovnb
fcmovu
fdivrp
int3
mov
rorl
out
cli
xor
cmp
into
cld
aas
clc
iret
sar
out
fpatan
loop
cld
mov
sar
in
out
out
repz
cmp
imul
stc
sarb
div
mov
out
in
out
sub
call
lret
lock
ds
cmpl
rcl
frstpm(287
out
fld
iret
iret
loop
xchg
loope
xor
jmp
ljmp
lock
sbb
sti
mov
sub
into
ss
jmp
fcomp
cmc
xchg
ljmp
iret
xchg
xchg
cmc
int3
cmp
icebp
hlt
ljmp
loop
in
test
rcr
out
jecxz
lret
cmp
cmp
cmp
or
aas
cld
ffree
test
enter
out
std
sub
test
cmp
fxch
into
repnz
aas
cld
out
in
in
fisttps
ror
xchg
out
fcom
in
cmp
fst
icebp
fsub
shl
rol
clc
stc
shl
out
ljmp
call
mov
cmp
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
shlb
cmp
fnstsw
cmp
stc
in
shl
movl
in
fsubr
jmp
fsubrs
ret
xor
cmp
loopne
xor
in
cmp
loop
aad
jmp
mov
test
in
sbb
out
ftst
rol
hlt
imul
clc
jmp
cli
loopne
aad
fadd
loopne
clc
in
fcmovnu
in
out
orl
sti
xor
cmp
icebp
frndint
neg
rol
ret
aad
in
jmp
out
rcl
rol
sarb
call
aad
clc
ret
lret
out
jmp
and
loop
out
cmp
cmp
enter
iret
rcr
out
loope
aam
xlat
mov
faddl
clc
lock
imul
lock
ror
fdiv
rol
ret
div
test
call
xchg
lock
neg
in
fsubp
iret
or
xlat
cmc
mov
mov
jecxz
addl
in
loope
ror
in
out
fcmovnu
cmp
repnz
test
xchg
loop
cld
nop
lds
hlt
div
fstp
lret
dec
stc
loopne
loope
shl
fucomi
test
in
loope
into
iret
enter
xor
vpaddq
cmp
fcomp
iret
in
call
stc
nop
cli
xchg
addl
cmp
cmp
cli
xchg
test
int
icebp
rcr
roll
jmp
cmp
cmp
rol
and
fmul
cld
out
test
adcl
ss
loopne
ret
icebp
out
addl
in
out
std
loopne
jmp
int3
in
in
xor
loop
rol
aam
aam
lret
xchg
mov
aam
icebp
fld
cli
cmp
in
ds
jmp
out
out
addl
in
in
in
leave
rcr
rcl
loopne
stc
sbb
xchg
mov
in
lock
loopne
lret
aam
cmp
sti
xor
cld
std
fcmovne
neg
aad
filds
jmp
out
out
ss
cmpb
aam
inc
mov
sub
cld
int
mov
out
fldl
cmp
sti
call
out
cmp
out
iret
cld
lock
xchg
mov
lock
xchg
xchg
loope
ret
hlt
fcmovbe
stc
cmp
fnstsw
in
jmp
into
fiaddl
repnz
icebp
in
out
cmp
ljmp
faddp
jmp
jecxz
in
xor
xchg
out
xchg
xor
out
out
repnz
in
cli
cmp
sti
clc
mov
mov
clc
ljmp
clc
ljmp
fdiv
cmp
hlt
or
rcl
aad
out
out
out
loop
int
xor
jmp
out
fidivrl
icebp
fcomp
and
out
xchg
loop
jmp
sti
rorl
shr
jmp
in
shl
inc
fninit
cld
out
mov
fmul
ret
lret
jmp
cmc
fmul
int
jmp
fucomi
fiaddl
xchg
in
std
orl
cmp
clc
clc
std
lret
cmc
loopne
orb
int3
enter
aam
out
lret
clc
xor
std
in
mul
out
lret
cld
leave
call
fstp
call
cmp
fcomi
sar
jecxz
aad
sti
sub
sti
test
repz
sub
enter
fnstcw
shll
icebp
cmc
fadds
leave
mov
mov
into
loope
jmp
cmp
add
bnd
mov
call
out
test
xor
ljmp
test
rcl
fmull
call
hlt
ret
shl
cmp
ljmp
stc
cmc
fiadds
mov
test
in
enter
fcmovbe
icebp
ljmp
aad
test
stc
fstl
lret
into
lret
sarb
cmp
jecxz
and
filds
in
jecxz
rclb
xor
lret
lds
clc
fsubr
icebp
cmp
shl
test
in
cmc
in
and
test
std
xchg
rol
aaa
stc
test
or
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
fdivrs
push
test
jle
call
out
ds
flds
enter
mov
iret
xor
aad
out
lret
sti
cmp
stc
loope
repz
call
out
fmuls
into
ljmp
aam
call
fcomp
call
clc
test
call
int3
aam
enter
shl
cli
aaa
lret
aaa
lret
imul
stc
hlt
repz
xlat
fucom
cli
enter
nop
lea
into
sarl
sti
loopne
lret
loop
fcomip
loope
sbb
test
sti
xchg
call
cli
into
enter
loop
in
cli
fadd
xchg
mov
fdivrp
lea
aad
rcl
out
icebp
hlt
hlt
cli
xlat
out
adc
cmc
clc
addb
sti
out
repnz
in
int3
ljmp
rcr
sar
rol
in
hlt
lock
jmp
cld
clc
loopne
in
into
xchg
int3
call
shlb
enter
divl
ror
jmp
orl
mov
in
call
ljmp
aam
shl
ret
in
jecxz
in
call
cmp
rcl
idiv
cmp
test
loop
fcos
in
call
sub
aam
shlb
xor
repz
in
shl
repnz
repz
out
dec
call
into
xor
rcl
aam
fldl2e
stc
imul
fdiv
fadd
mov
repnz
out
fninit
lret
sub
cmp
aad
roll
sti
aad
cmc
sti
cli
aam
jmp
jecxz
mov
loopne
xchg
ffreep
int
cld
in
stc
cld
repz
xlat
iret
aas
shr
incl
int3
cli
int
shr
xchg
mov
hlt
enter
ds
sarl
sbb
fmull
xchg
xchg
ljmp
fdiv
repz
ljmp
fcmovne
rorb
out
test
in
call
aad
jmp
call
lret
out
in
repz
lret
out
fmuls
out
clc
ss
out
clc
cmp
xlat
repz
in
xchg
loop
clc
stc
lret
icebp
loope
ljmp
cmp
iret
stc
xor
rcr
lock
jmp
xchg
jecxz
std
xchg
mov
vpslld
into
cmp
into
fst
jmp
shl
xchg
in
test
mov
rcl
shll
out
cmc
xor
in
in
sti
fsub
lock
in
test
idiv
cmp
fildl
not
xor
out
iret
fidivl
iret
jmp
out
ret
cmp
fucomi
xchg
addb
loop
out
out
fcmovnbe
jmp
int3
out
std
in
std
inc
xlat
ret
std
xchg
lret
in
rcr
stc
leave
ljmp
xlat
out
xchg
shr
hlt
loope
in
fsubrp
nop
lret
mov
jmp
aad
aad
xor
ror
addb
fimuls
cld
int3
xchg
dec
jmp
cmp
ljmp
leave
xlat
cmp
test
in
jmp
into
out
repz
cmc
lret
loop
std
fadds
in
mov
out
rolb
ror
xor
cmp
xor
jecxz
cld
loopne
cld
std
out
jmp
loope
jmp
ss
aaa
cmp
std
loopne
rolb
int3
loop
fmull
int
hlt
ret
cmp
xlat
cmp
fnstcw
xchg
std
fcmovnb
mov
orl
aaa
fsubrp
fldl
adc
leave
mov
lret
or
shr
aam
shl
out
int
fdiv
jmp
repnz
icebp
xlat
sti
ret
fsub
cli
fimull
das
out
cmp
leave
cli
cmp
stc
shl
out
ret
out
lret
ljmp
jecxz
jmp
ljmp
out
out
fcom
addl
adcb
aaa
fdiv
into
cmp
int3
into
sti
ds
xor
xchg
in
call
std
xchg
repz
int3
xor
mul
fcmovnu
cmp
out
loop
cli
shl
ror
sti
idiv
in
add
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
jle
add
in
aad
clc
hlt
xor
fdivs
aas
rcl
shl
test
fnstsw
mov
int3
rol
lock
in
clc
xor
lret
aam
cmp
repz
mov
leave
out
xlat
mov
loopne
xchg
into
aad
repz
repz
test
addb
mov
in
shl
loope
out
repnz
in
fmul
out
fcmove
cmp
test
shl
adc
xor
in
out
hlt
div
in
fdiv
test
incl
shl
fcmovb
addb
lret
adc
mov
call
aaa
icebp
ljmp
fimuls
vcvtdq2pd
nop
rol
out
leave
fdivrs
fdiv
div
rcl
out
fsubp
faddp
cmc
out
cmc
mov
xchg
jmp
ljmp
into
into
repnz
cld
sti
mov
jmp
test
xabort
aad
fidivl
ror
xor
loope
icebp
ljmp
mov
ljmp
clc
rcr
shll
dec
lret
cmp
sti
test
not
faddp
out
inc
xchg
sti
nop
lea
mov
icebp
ror
loope
cmp
rol
aam
xchg
add
ljmp
xor
mov
in
repz
addl
fcmovb
flds
test
shll
xor
repz
ds
leave
shl
shl
ret
fdivr
rcl
div
add
cmp
aam
xor
out
int
int3
int
cmc
sar
rcr
fsub
jmp
mov
int
out
out
xor
in
ss
cmp
cmc
out
jmp
ds
ret
cmp
fiaddl
xchg
call
cli
out
cmp
iret
lret
icebp
xchg
shl
shl
ljmp
iret
std
incb
cmp
ss
fstpt
jmp
sti
aam
mov
testl
in
into
in
fdiv
into
fcmovu
rcr
std
fcmovu
aam
mov
jmp
jmp
into
orl
xor
out
out
fcos
cmp
aad
adc
out
repz
mov
fisttpll
in
rcl
shl
fcmovnbe
loope
and
out
cmc
rol
ret
fstp
leave
in
int3
in
out
test
cmp
test
incb
loope
addb
cld
fnsetpm(287
call
cmp
xlat
jmp
fcmovnbe
aas
cmp
jmp
cli
mov
out
xchg
mov
test
test
into
cmp
clc
lds
icebp
clc
out
shl
jmp
out
jmp
clc
xchg
addb
das
aam
shr
lock
out
loope
cmp
loopne
nop
out
mov
out
mov
sub
in
fstpt
cli
xor
mov
ljmp
xchg
mov
cmp
shll
cmp
cmc
lock
std
loopne
fsub
xchg
mov
mov
icebp
sub
cmp
ljmp
stc
rcl
aad
lea
lock
test
repz
fucomi
iret
out
leave
iret
sti
cli
int
clc
into
ret
mul
mov
mov
in
mov
shl
cmp
in
out
cmp
into
fstp
ror
cmp
test
fadds
rcll
rcr
leave
idivl
call
loop
iret
fdivr
repz
in
jmp
mov
loope
fsubp
out
repnz
out
rcr
enter
ret
std
add
int3
int
out
leave
jecxz
mov
in
ljmp
in
out
cmc
icebp
ret
ffree
aad
call
test
call
fisubrs
ljmp
in
sbb
ds
jmp
int3
out
orl
hlt
repnz
jmp
aaa
ljmp
ret
ret
ret
leave
mov
rcr
mov
cmc
call
clc
cmp
fnstenv
jmp
test
out
out
jecxz
ror
icebp
out
rclb
fcom
aad
cmp
icebp
clc
fucom
out
in
loop
icebp
test
jmp
repz
ljmp
jecxz
leave
fmul
lock
in
cmp
mov
sub
mov
inc
add
add
jne
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
mov
cli
fcmovbe
jmp
mov
xor
out
xor
hlt
cmp
mov
xchg
idiv
into
loopne
mov
mov
loopne
jecxz
int
clc
sti
fcmovu
cmp
lret
cmp
loope
cmc
test
int3
call
test
rcl
aaa
ljmp
adc
sti
loope
ffreep
fisttpl
clc
xchg
int3
sub
idiv
xor
aad
lret
aas
faddp
rolb
out
aas
lret
neg
sub
enter
jmp
out
mov
movl
hlt
lock
in
xor
jecxz
cmp
cmp
rcr
clc
into
into
sbb
loop
jecxz
lret
into
ss
in
fstp
fsub
cmc
aaa
addl
ljmp
out
cmp
cmp
cmp
rcl
aas
hlt
cld
roll
cld
out
clc
sti
mov
into
mov
jecxz
out
out
fcmovbe
aad
aam
fcomp
stc
shl
out
mov
into
fadds
xor
cli
out
aam
jmp
sti
jecxz
call
jecxz
call
mov
in
cli
leave
fdivp
fdivrl
inc
xchg
shl
les
repnz
jecxz
sar
sarl
icebp
leave
cmp
clc
aas
xor
fiaddl
std
repz
inc
fucom
mov
loop
sub
ror
aas
enter
ret
fcmovnb
fsubrp
idiv
int3
or
in
mov
test
into
cmp
hlt
xor
push
test
rcr
in
testl
ret
in
xor
ss
int3
cmp
lock
cli
hlt
rol
fabs
in
int3
mov
jmp
ljmp
aad
xor
lret
fst
out
mul
rcl
cmc
jecxz
imul
cli
int3
idiv
out
lret
xchg
loopne
div
xor
jmp
cmp
ret
stc
jmp
cli
xchg
lret
in
lret
test
xlat
cmp
cmc
cmc
out
cld
repz
in
sub
fiadds
shl
div
cld
rcr
out
adc
repnz
cmc
lea
adcl
iret
out
rol
hlt
cmp
loop
cmc
std
aad
enter
rorb
icebp
jmp
hlt
idiv
rol
into
flds
sbb
enter
out
test
leave
xor
jmp
xor
aad
repnz
cli
in
xlat
xchg
xchg
aad
lret
int3
cld
ret
nop
aad
ror
fcmove
fdivl
loopne
fst
hlt
fisttpll
fildl
aam
cmc
aad
hlt
icebp
iret
into
aas
lret
ffreep
std
sti
incl
mov
fists
xor
out
cli
sarl
xor
stc
cli
iret
lock
fxam
stc
test
fmulp
stc
mov
fucomip
fstp
in
icebp
shl
aam
cld
enter
into
dec
loopne
xor
add
out
lret
in
loopne
lea
xor
shl
idiv
sar
fisttpl
fisttps
jmp
loop
rol
std
cmc
hlt
cmc
cmpl
xchg
fxam
test
xchg
aaa
out
aaa
cli
icebp
ljmp
jecxz
mov
cmp
mov
loop
out
movl
out
hlt
lock
lock
jmp
and
ret
fdivr
lea
out
aam
lret
mul
jecxz
in
cmp
fxch
aaa
in
cmp
repnz
aad
std
test
jmp
adc
hlt
iret
in
aam
lret
rcl
cmc
xor
cmp
out
call
mov
mov
int3
iret
into
das
in
in
inc
repz
ds
icebp
aas
into
movb
out
enter
xchg
hlt
jecxz
ror
lret
jmp
leave
aam
in
rcl
loopne
ffreep
clc
call
fcmovnu
leave
call
mov
xor
fdivrs
ds
aad
fcompp
and
jmp
stc
sti
out
stc
out
test
jmp
out
aaa
cmp
aam
jmp
cmc
fadd
fidivs
clc
loopne
repz
cmc
orl
xor
fcmovu
iret
ss
repnz
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
jb
movsl
jle
xchg
add
adc
jmp
shl
stc
lock
xchg
shr
in
out
cmp
das
sti
cmc
out
incb
sar
fmul
mov
imul
ljmp
clc
into
in
imull
cmp
cld
repz
aad
fsub
xchg
mov
repz
ss
into
fcmovnu
aam
cmp
cli
fst
repnz
fiaddl
call
loope
repnz
sti
shl
lock
out
cmp
out
lret
int3
fcomp
out
loop
xchg
xchg
lock
ljmp
cli
hlt
loopne
out
ds
mov
sti
in
les
xchg
mov
cmp
aaa
lret
iret
fcmovnbe
icebp
repz
std
roll
nop
out
loopne
mov
ret
out
ret
cmp
cld
enter
jecxz
fadd
out
fdivr
jmp
cld
in
leave
xchg
mov
loop
in
aam
cmp
div
fadd
out
fiaddl
test
testb
sar
ror
xor
roll
adc
ret
mov
mov
jecxz
fndisi(8087
mov
sti
test
jecxz
in
xlat
shl
mov
lret
fsub
jmp
inc
xchg
icebp
loopne
into
xor
in
ds
repnz
fucomip
jmp
jmp
call
fsubrp
ret
into
ror
jmp
xor
cmp
ret
testl
int
call
cmp
stc
repnz
idiv
enter
cld
fidivrl
fildl
clc
mov
lret
fisttpll
int3
xlat
ss
int
testl
out
mov
int3
das
iret
out
stc
xor
fdiv
fucomi
lock
repz
ds
lret
loop
sub
lret
xchg
hlt
ret
cmp
xlat
fld
jmp
rcl
fld
test
loop
neg
mov
repnz
call
loop
aad
int3
out
hlt
in
into
fcmove
cld
in
fdivr
hlt
not
out
mov
ret
in
out
jmp
repz
out
aad
ljmp
rcr
aas
and
jmp
out
jecxz
jecxz
in
repz
int3
out
std
fsubr
repz
cli
incb
lds
in
in
in
das
aad
in
fstpt
cld
fsubr
shl
aas
hlt
out
add
fucomi
int
lret
in
iret
aam
out
shl
mul
cmp
jecxz
hlt
cli
faddl
loop
test
xchg
mov
stc
testb
aad
cli
fcomi
loop
mov
loope
out
loope
aaa
leave
xor
fdivs
ss
shl
fdivrl
test
std
fsubr
test
lock
not
shr
ret
repnz
cli
testb
icebp
std
fucom
loopne
test
in
testb
cmp
cmp
aas
cmp
ds
in
xchg
in
fcmovne
cld
in
lret
loop
mov
out
lock
iret
repnz
ret
xchg
orb
rcr
jmp
xlat
ljmp
fstp
jmp
sti
lret
fsubp
nop
iret
out
test
ret
in
aaa
cmc
aas
sarl
and
ror
cmc
loopne
out
icebp
mov
sub
repz
cli
ljmp
std
test
jecxz
xchg
enter
mov
dec
shl
cs
div
cmp
ss
iret
cmp
cli
xlat
mov
faddl
mov
cli
repnz
ljmp
cli
out
cmp
stc
aad
adc
out
mov
jmp
out
loop
xchg
xor
ret
xor
fucomip
std
cmp
sarl
frndint
sarb
xchg
in
fmulp
sbb
cmp
repnz
aad
repnz
jmp
jmp
jmp
ss
shr
rcr
jecxz
nop
dec
loope
std
rorb
out
repnz
in
iret
roll
mov
mov
leave
mov
out
lret
sub
lret
clc
out
leave
cmp
int3
out
out
ds
fcomip
cmp
out
lock
mov
loope
lret
int
test
lock
fcmovnb
ret
push
fadd
loop
ret
fiaddl
xchg
hlt
mov
jmp
testl
inc
add
or
add
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
sbb
gs
jle
cmc
rcl
cmp
rcr
xor
stc
ret
in
loopne
int
nop
icebp
xor
rcl
xor
out
shlb
clc
cmp
xchg
out
jmp
enter
icebp
loop
rcl
sub
jmp
cmp
fcomp
shr
leave
movl
clc
out
in
ljmp
aad
clc
test
ret
out
xlat
fadds
sar
fcomp
enter
xlat
fmulp
loop
repnz
and
or
leave
cld
out
hlt
call
repnz
stc
dec
aam
in
loopne
addb
lret
mov
hlt
adc
shll
out
enter
ret
rol
sub
lret
addb
call
repnz
cmc
lock
fisttpl
mov
loop
in
in
xlat
sub
and
clc
in
ret
jecxz
loop
cmc
cmc
loopne
mov
fisttps
sub
fcmovnu
dec
ds
filds
rcr
ret
loope
in
stc
out
test
mov
test
in
lock
iret
in
enter
int3
roll
fnstcw
dec
in
iret
addl
test
add
rolb
fucomp
lret
loopne
lea
icebp
sub
jmp
rcr
fcmovne
fcmovnbe
test
test
loope
int3
in
rol
mov
stc
call
ljmp
faddp
shl
rol
fsub
xchg
loope
hlt
shr
fcmovb
xor
cld
rcl
aas
hlt
in
cmp
std
ds
jmp
addb
call
shr
shr
cmp
cmp
ret
not
fneni(8087
out
std
int3
loop
cmc
ljmp
clc
sti
rcr
lret
cmc
rcr
xlat
out
xchg
fsub
iret
mov
ljmp
lret
in
lret
clc
into
xlat
cli
call
int3
int3
int
lret
in
in
fcom
aaa
into
hlt
jmp
faddl
out
sar
aam
ret
loop
cli
int
repz
repz
sub
into
ss
ror
cmp
fdivp
fdiv
call
mov
out
mov
out
xchg
fld
into
jmp
repnz
in
adc
xchg
fdivrs
iret
call
int
aam
ror
fcomp
iret
fsub
aam
stc
shl
sti
addb
mov
xchg
out
out
nop
mov
repnz
fxch
xor
roll
aas
inc
lret
mov
test
mov
loope
into
fcomip
leave
icebp
sar
repz
std
in
fcmovnbe
cmp
xchg
std
ret
out
call
out
jmp
aam
loope
in
int3
in
cmp
aam
aam
aas
out
hlt
fcmovnu
rorb
out
xchg
fsubrp
test
jecxz
out
cmp
xor
sti
icebp
in
fsubr
std
idiv
enter
mov
in
jmp
xchg
in
mov
in
call
test
out
cli
ds
ffree
idiv
decl
repnz
out
vshufps
ffree
cmp
repz
and
out
idiv
xchg
mov
aad
xlat
vcvtdq2pd
fucomp
ljmp
jecxz
jmp
jecxz
adcb
rol
shlb
cmp
fstpt
cmp
icebp
sbb
mov
call
loope
jmp
ror
ret
into
shl
out
jmp
fidivl
xacquire
cmc
clc
fmuls
mov
int
roll
hlt
lret
aam
cmc
ljmp
rcl
fsubr
loop
fldl
mov
out
out
lret
cmc
xlat
into
icebp
iret
icebp
sarl
aam
std
xor
fxam
ret
mov
sti
icebp
call
out
enter
repz
lret
sbb
out
fsubr
fimuls
xchg
repz
icebp
shl
out
iret
imul
sar
xor
stc
out
shl
loopne
int
jecxz
std
call
ret
xor
iret
xlat
cli
out
sarl
fcmovnu
cmp
jmp
ror
loop
loop
jmp
enter
cmp
std
imul
fdiv
out
cmp
cmc
shl
fsubrp
ljmp
div
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
cmp
lods
mov
scas
jle
xchg
add
test
ror
sti
stc
aaa
stc
repz
ds
ret
loopne
xchg
in
mov
in
lret
mov
out
iret
add
mov
shl
fucomi
aam
clc
fxch
cld
cld
fdivr
aam
test
fadds
in
out
lock
cmp
fnstsw
int
cmpb
faddl
jmp
ljmp
xor
divl
xlat
in
aas
cmp
aam
std
cld
rcr
mov
mov
lret
mov
out
xlat
leave
std
lret
repnz
cmc
idivl
filds
int
fildl
in
out
cld
xlat
cmp
faddp
out
and
mov
in
cli
fucomi
fcomi
incl
rol
out
xlat
call
imul
ds
fdivr
loope
ljmp
mov
test
in
jmp
in
shl
std
out
cld
cmp
repz
enter
stc
enter
repnz
hlt
xor
cmp
stc
sar
div
in
fst
aam
jmp
rolb
loop
int
repnz
fdivr
sarl
rcl
cli
lret
fdivr
mul
addl
mov
xchg
enter
sub
repnz
cmc
ss
cmp
aas
int3
test
cmp
int3
enter
test
into
out
aad
call
call
ror
xlat
aad
hlt
mov
loopne
mov
xor
out
sar
cmp
test
loope
aas
fdiv
mul
sti
lret
jecxz
repnz
int3
lock
enter
stc
loopne
clc
cmc
fcomi
loope
xchg
xchg
loope
out
lret
call
ret
cld
shlb
int
fstp
cmp
hlt
aam
fcomip
out
aas
jecxz
repz
in
ds
cmp
cmc
roll
out
lret
loope
shll
out
call
leave
cmc
repnz
iret
test
into
xlat
loop
fxam
loop
mov
xchg
xlat
in
hlt
aaa
out
fdivrs
cmp
rol
out
call
mov
mov
xchg
into
jecxz
jecxz
rcr
shl
icebp
fmul
int
repnz
ds
sbb
loopne
lock
sti
hlt
lock
icebp
cmp
out
hlt
fmulp
cld
stc
mov
jecxz
mov
test
out
loope
int3
ror
shr
mov
repz
int3
jmp
mov
repnz
sarl
ror
cmp
testl
out
shrb
into
test
cmp
stc
clc
cmp
std
clc
out
loope
iret
out
ret
xchg
lock
enter
ss
icebp
imul
out
std
add
rcl
test
sti
loope
decb
mov
shl
shl
ss
cld
in
aas
fucompp
aas
sti
cld
cmp
cld
hlt
rol
neg
sti
cli
cli
mov
xor
ss
into
jmp
fldl
in
xor
popl
mov
jmp
sti
xor
test
iret
sarb
jmp
clc
mov
mov
ljmp
cmc
in
icebp
hlt
cmp
in
shl
cmp
xchg
cld
repz
leave
enter
test
loop
into
xor
div
clc
int3
xor
aam
lret
idivb
xlat
ret
addb
cli
stc
ret
loopne
xchg
out
xor
out
out
sarl
cmp
hlt
shl
fcmovnbe
rorb
out
nop
out
testb
out
ljmp
xor
test
cmc
shl
std
fiaddl
cmc
repz
out
out
in
in
cld
ffree
aad
adc
std
in
in
test
jmp
test
sub
stc
enter
jmp
loopne
cld
rol
hlt
sbb
mov
mov
and
rcl
xor
cmp
cmp
icebp
int
jecxz
fld
fadds
lret
in
xchg
repnz
aaa
ret
lret
out
out
sub
out
ffree
mov
jmp
adcl
std
aad
cli
in
fsub
fidivrs
mov
ljmp
loop
xchg
int3
out
rorl
aaa
xor
cld
in
aaa
loopne
rcr
sti
fucom
sbb
mov
movb
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
dec
jg
fistl
add
fcmovu
fcoms
loop
lock
les
lret
sti
sarb
cmp
fdiv
call
mov
xlat
clc
xchg
ror
nop
mov
shr
enter
enter
cmp
in
icebp
loopne
call
fstp
xchg
xchg
xchg
ffreep
jmp
sarb
lret
leave
repnz
aam
jmp
cli
neg
aam
rorb
mov
int
iret
div
int
lret
ljmp
repnz
test
fsubr
lock
lret
rorb
call
ss
in
cmp
repz
repz
cmp
in
cli
cli
orb
ss
int3
xlat
enter
clc
icebp
cmp
fcmovne
fcom
hlt
xlat
orb
jecxz
xor
xor
sar
jmp
shr
jecxz
ds
mov
idiv
loop
ror
orb
in
jmp
in
cli
out
sbb
jmp
loope
flds
xchg
lret
fcmovnbe
clc
repz
shl
hlt
xchg
roll
in
and
out
aas
das
enter
cld
repz
loopne
sarl
out
cld
call
sti
xlat
jecxz
in
test
filds
aad
cmp
std
cli
fidivrl
addl
mov
fmull
into
cmp
shl
out
shr
icebp
into
ss
and
testl
jmp
aam
lret
xor
icebp
jmp
icebp
fidivl
icebp
hlt
rcr
imul
into
leave
mov
call
xlat
cli
iret
cmc
xor
rolb
lock
faddp
int3
int
loope
xor
into
mov
shr
cmp
cs
enter
lock
aam
fisttps
fcomip
hlt
repz
lret
cmp
xlat
divb
aad
icebp
rcl
push
test
add
stc
in
fmul
ljmp
xor
fcmovnbe
ljmp
fadd
fcomi
fcmovnu
out
les
fmulp
fldl
xor
fnsave
jmp
cld
int3
ljmp
shr
test
fucomip
enter
cld
fsubp
in
lock
repz
out
icebp
cmpl
aas
add
lret
rorb
shl
xlat
aad
enter
loopne
out
test
cli
into
out
fsts
shl
ret
sarb
cmp
addb
adc
in
out
out
sti
mov
cld
in
loope
iret
lret
aaa
fcmove
in
stc
clc
rcl
clc
shr
cmc
fsub
jmp
cld
fcmovne
lret
clc
xchg
jmp
xor
shr
repnz
rol
icebp
fstp
fadds
out
out
sti
xchg
mov
leave
loope
fnstenv
fucom
fistpll
rcr
repnz
aad
sub
sbb
jmp
out
int3
xchg
jmp
loopne
f2xm1
cli
loop
in
in
loop
in
repnz
jmp
lock
lock
in
sarb
fcmovb
xchg
sub
loopne
and
addl
ss
divl
fiadds
mov
mov
xchg
nop
icebp
out
repnz
out
xor
in
xor
lock
aas
cli
leave
roll
ret
leave
ret
cli
mov
in
orb
ljmp
icebp
cli
in
repz
xlat
fdiv
xlat
fsubr
sti
jecxz
icebp
out
out
leave
ror
in
repz
shr
lret
cld
std
stc
into
rol
fnclex
cld
lock
in
hlt
enter
ss
sbb
aad
not
jecxz
std
rol
aad
in
mov
int3
test
xor
aaa
shr
les
fcmovu
ljmp
xchg
repnz
out
cmp
in
jmp
fcomip
cmp
fldl
call
shl
call
jmp
sti
lock
out
enter
out
sarb
sbb
in
mov
int3
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
adc
mov
jle
add
call
mov
fsub
ss
cli
in
in
in
cli
mov
ljmp
into
xchg
test
cmc
repz
int
fmulp
jecxz
ret
rcr
loop
out
mov
mov
xchg
and
shl
cli
fsub
cmp
cld
aam
cli
rcr
jmp
mov
iret
out
mov
rclb
ret
iret
ljmp
cmp
out
mov
aad
jmp
mov
in
aaa
inc
or
cld
rol
xlat
ret
cld
mov
orb
out
repz
xor
cmp
loope
sarl
shl
loope
shl
roll
nop
mov
in
xlat
leave
rcl
in
cs
cmp
sar
out
repnz
movl
shlb
lock
faddl
test
sbb
lock
iret
lds
aad
int
fidivs
lret
stc
loop
repnz
neg
int3
addl
ret
out
cld
neg
fdivp
cmp
cmpl
leave
jmp
test
xchg
out
iret
mul
cli
xor
stc
fcomi
stc
repz
clc
fst
jecxz
jmp
xchg
out
xchg
xor
aad
jmp
stc
int3
cld
cmp
shl
aam
mov
clc
in
mov
jecxz
call
cli
repnz
repnz
not
fnop
ret
jmp
in
test
enter
ljmp
repnz
lock
int
repnz
stc
sar
leave
in
fadds
loope
mov
std
fdivrl
loope
jecxz
cmp
f2xm1
aam
fiadds
out
lret
lret
xor
fsubr
fsub
imul
aad
into
cmp
mul
cmp
incl
loope
int3
cmc
repz
ret
lock
lret
cmp
stc
fiaddl
out
int3
mov
fucom
xchg
loope
in
enter
aad
out
int
loopne
fcomp
add
fsub
out
stc
fists
icebp
loope
das
repnz
out
call
aas
cmp
fcmovnb
aas
testb
ret
fistl
jmp
xlat
in
aas
out
fndisi(8087
in
lock
sar
loop
test
xchg
xor
xor
lret
out
out
cmp
test
in
enter
fimull
int3
rol
clc
shl
sarb
cld
fxch
cmp
cmp
std
std
cmc
xlat
std
clc
ret
mov
addl
cmc
shr
xlat
repnz
fcmovne
cmp
sarb
int3
stc
clc
hlt
out
repz
fcoml
lret
aam
stc
in
jmp
iret
rol
loopne
in
out
cld
nop
jmp
int
lret
out
loopne
iret
xor
aam
clc
into
xor
sar
iret
cli
cmp
test
int3
xchg
std
loopne
fiadds
lret
rcl
aas
sar
in
fsub
cli
cld
repnz
lock
ljmp
cmp
shr
call
loop
std
rolb
fucom
std
into
popl
lock
out
lret
ds
aas
cmp
loop
call
lret
clc
stc
into
repnz
xchg
rcl
ss
lret
out
icebp
cli
sti
clc
fdivp
repnz
cmc
xchg
jmp
xchg
out
jmp
iret
out
shr
int3
ljmp
aam
jmp
std
roll
mov
loope
in
jecxz
out
jecxz
ret
enter
ss
ret
shl
loop
in
and
out
xchg
loop
int3
fcmovb
fsubr
cmp
shl
hlt
fcomi
xchg
xchg
loop
stc
shl
jecxz
in
xor
call
fdivp
fiaddl
loop
hlt
fscale
std
in
std
call
shll
in
stc
stc
cmp
in
cmc
loop
out
add
stc
in
in
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
repz
scas
xchg
mov
jle
fildl
mov
repz
jmp
leave
cmp
loop
test
loop
fdivr
in
xchg
loopne
fdivp
in
ljmp
leave
hlt
aad
test
ror
sarb
loope
mov
hlt
shlb
out
out
rcl
lret
out
aas
loop
fdivp
into
out
loop
ret
fsubr
stc
loop
out
std
aad
sub
cmp
lret
cmp
ret
ret
cmp
call
ret
fucomi
in
xor
clc
loop
repnz
xlat
aad
int
fiaddl
std
out
out
cld
cld
cli
fucomp
mov
loop
call
shr
cld
into
fcomp
in
test
lret
fmul
mov
jecxz
out
or
aad
sti
stc
ss
aam
mul
loopne
repnz
int3
or
xor
ljmp
fcmovnbe
test
out
idivb
mov
fadd
in
mov
mov
ljmp
cmc
rcr
adc
ljmp
ror
xchg
xchg
lret
lret
hlt
rol
into
fsub
repz
filds
lds
xchg
nop
out
into
cli
repz
aad
call
ret
ret
fsubp
fdiv
decb
xchg
repz
leave
int3
fincstp
sarl
clc
cmp
jmp
xchg
lret
in
out
loopne
int3
into
rcl
out
lret
aaa
lret
into
cmp
into
int
int
xchg
out
incl
mov
out
iret
jmp
mul
xor
fnstenv
cmp
ss
sti
test
shl
icebp
cmc
fcmovbe
in
cmp
cmp
std
iret
out
out
lock
sub
jmp
loopne
leave
test
mov
cld
adcl
in
sti
out
rcl
repnz
mul
aas
in
cmp
xlat
sbb
jecxz
int3
in
loopne
clc
iret
cli
aas
repz
stc
loope
shl
out
fsub
mov
cmp
decb
jmp
in
cmp
rcl
repnz
mov
jecxz
ljmp
xchg
neg
int3
xlat
shlb
fnstsw
repz
fdivp
jmp
loopne
popl
out
lret
xor
xor
lock
int
testl
ror
leave
out
in
lock
fdivr
call
xor
xchg
cmc
aam
clc
loope
rcl
iret
in
xchg
shrb
int
out
into
cli
out
fcmovb
loope
call
mov
test
lea
div
jmp
aaa
into
inc
shl
repz
ftst
sub
frstpm(287
stc
mov
out
out
aad
in
repz
repz
out
sarb
cli
jmp
test
and
or
out
cmp
cli
iret
sar
fyl2x
loopne
clc
cli
repz
jecxz
fsubr
cli
decb
jmp
lret
jmp
cmc
and
fiaddl
out
leave
in
mov
cmc
cli
sti
enter
cmp
xor
jecxz
add
lret
test
in
fildl
cli
xor
jmp
xor
in
std
testl
rorb
iret
lret
call
roll
test
fadds
lret
jmp
repnz
int3
fistpll
sti
cld
imul
incb
loop
fildl
out
loope
xor
in
in
cmp
lret
into
ror
in
fcmovnu
out
lret
cmp
shr
sub
xor
into
ror
cmp
aaa
ds
in
clc
loop
out
out
cli
sti
mov
xchg
mov
ret
jmp
in
iret
xlat
fdivrs
aaa
int
fadds
cli
in
fucom
shl
out
lea
fxch
in
xor
cmp
aam
iret
iret
fdiv
call
test
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
int3
jne
aam
mov
jle
rorb
jecxz
into
imull
int3
sarb
repz
sti
aas
cmpl
addl
repz
rol
loope
ljmp
cld
sti
repz
icebp
fsub
loop
in
in
lret
mov
call
clc
lret
lock
rcl
aam
ds
cmc
out
sti
sti
clc
fsubr
int
cli
sti
jecxz
in
mov
das
shlb
std
leave
jmp
hlt
loopne
cmp
call
mov
repz
jmp
ljmp
in
fcomi
stc
sti
inc
out
sbb
repnz
jmp
cmc
call
in
jecxz
sar
loope
div
test
idiv
in
fldl2t
cld
jmp
call
xlat
out
cmp
div
idivl
sub
neg
roll
ljmp
iret
in
in
in
ror
lock
jmp
cld
out
fdivrp
mov
cld
faddp
enter
xchg
test
xor
ljmp
in
hlt
clc
push
ret
les
xchg
mov
xchg
imul
rcr
call
call
aas
incl
loope
fxch
orl
icebp
fpatan
int
shl
lock
sti
ftst
incl
out
aad
out
clc
lock
int3
shl
aad
div
ljmp
out
int
fnstsw
call
std
loope
mov
sti
xchg
icebp
test
jmp
sti
fcmovnbe
aam
xor
loop
rcl
ret
sub
jmp
ljmp
shr
fsubr
in
int3
jmp
stc
in
std
aam
xchg
mov
mov
test
rcr
int3
nop
push
xchg
int3
shl
icebp
aaa
jmp
aam
into
aad
aas
ds
icebp
ret
in
fcmovbe
stc
mov
int3
xchg
xor
in
lret
aaa
ljmp
sar
shl
xchg
mov
int
loop
incb
in
ss
loop
in
cmp
test
stc
xlat
in
and
das
xor
xlat
ljmp
jmp
test
xchg
inc
mov
enter
in
ljmp
cmp
xor
not
inc
icebp
rorl
in
mov
ret
sub
mov
fcmovbe
int3
aas
fadd
neg
ret
lret
call
out
in
out
fsub
xor
xor
in
out
lret
std
loopne
test
fucomip
and
rcr
cld
mov
jmp
int3
out
xor
std
icebp
stc
fdivrp
xchg
aam
jmp
in
in
in
mov
orb
lock
aaa
lret
in
fdecstp
idiv
cld
rolb
loop
xor
shlb
jecxz
loopne
and
mov
and
lret
xor
in
xor
cld
aas
fdivr
cli
jecxz
cmp
lret
out
incb
subb
clc
leave
cmp
sar
cmp
cld
loope
mov
mov
xchg
test
xor
cmc
hlt
cmc
ds
fmulp
cmc
in
sarl
neg
mov
loopne
in
das
cs
cmp
xlat
jmp
xor
loop
cmp
sarb
in
fimull
shl
orl
lret
mul
in
int3
ljmp
rcr
fucomi
out
jecxz
jecxz
int3
aam
fsqrt
rcr
call
test
aam
xchg
ljmp
int
xor
hlt
out
fucomp
cld
call
sarb
leave
in
loope
mov
icebp
fisttpll
call
rcl
aam
sar
ds
cld
mov
call
int
cs
iret
shl
cmp
into
repz
clc
cli
std
mov
in
jecxz
cs
cmp
in
adc
xlat
inc
aas
cmp
out
in
xchg
loop
inc
lock
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
outsl
jo
sub
aas
add
shl
into
mov
lock
lret
out
xor
xchg
mov
mov
lret
xchg
in
repz
int
jmp
adc
fucomip
mov
lret
fdecstp
cmp
nop
leave
repz
test
mov
test
leave
sbb
push
stc
fildl
mov
lock
lret
sub
cmp
cmp
sar
xor
fsub
xchg
ds
testl
in
lret
in
lret
cld
sti
leave
loopne
idivb
test
out
ror
int3
out
ret
xor
iret
fcmovnu
addb
std
filds
fsubr
xchg
bnd
iret
ljmp
cmp
sar
rol
mov
fxch
iret
std
int
enter
enter
jmp
and
clc
fdivrp
mov
loope
test
das
enter
cld
neg
sarb
cmp
aad
test
cli
test
sti
ljmp
lret
lret
out
fsubrp
repnz
into
xchg
in
cmc
jmp
std
xchg
cmp
aad
hlt
fstpt
int
in
aad
cli
sar
xor
out
fisttpll
aad
aad
cmc
xor
out
aaa
int
cli
leave
jecxz
sti
sub
stc
mov
frstpm(287
jmp
fsub
sti
mov
shr
repz
ss
cmp
loop
imul
cmp
call
fucom
filds
divb
ret
fnop
fldt
out
ds
fsub
hlt
stc
out
std
rcr
jmp
nop
mov
xchg
xor
out
iret
cmp
fcomp
incl
cmc
in
jmp
cld
fisttpl
loope
clc
out
ss
ljmp
lock
out
test
loope
in
jmp
lock
jmp
cmp
cmp
out
clc
sbb
aas
ljmp
in
lock
lret
nop
out
shr
repz
shl
aaa
lret
ret
aam
loop
test
xchg
clc
sub
orl
shl
cld
loop
in
cmp
stc
jmp
ret
in
call
rorb
call
out
imul
lock
not
std
repz
loope
test
icebp
out
test
ljmp
out
cld
out
shl
addl
out
in
lea
leave
repz
lret
sarb
aad
loop
loope
out
xlat
jmp
mov
int
lret
loop
in
fxch
jmp
in
cmp
iret
ret
iret
loop
loopne
cld
test
mov
xor
out
out
lret
call
iret
fnstcw
sti
in
jecxz
test
cli
xchg
mov
hlt
rcl
fdivrl
int
neg
in
jecxz
hlt
mov
ljmp
fisttpll
ror
stc
idivb
out
fstp
out
jmp
stc
iret
cld
clc
sar
in
in
fcmovnb
out
leave
xchg
in
test
fdivp
into
rol
xlat
shl
call
aam
fdiv
mov
out
shl
in
div
in
repz
repnz
test
fucom
lock
repz
addb
lret
iret
fucomip
ss
fsub
jecxz
stc
lret
mov
jecxz
call
repz
leave
xor
hlt
sti
jecxz
fst
xchg
clc
cmp
out
fsin
in
mov
out
vpxor
stc
in
iret
int3
repz
jecxz
rcr
loop
ljmp
fcomip
loope
into
jmp
out
jmp
hlt
add
stc
call
mov
jmp
jecxz
lret
mov
in
out
jmp
out
sarl
fnstenv
clc
jmp
fiadds
jmp
aad
rol
out
xor
leave
fdivr
std
int
xchg
sar
in
int
in
mov
or
pop
jns
add
xor
add
inc
clc
and
inc
lock
test
inc
add
or
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
fdivp
aam
shl
hlt
aad
in
shl
sbb
cmp
aam
mov
test
fsub
mov
into
out
shl
iret
out
out
repnz
fcmovbe
cli
stc
cld
sti
xlat
mul
out
out
test
lock
mov
jmp
cs
in
xor
fldl
stc
cmp
sar
fcmovu
lock
ljmp
ljmp
iret
cld
out
jecxz
in
loopne
lret
in
test
shlb
fcom
ret
cmp
xor
xor
xlat
fdivr
out
enter
into
loopne
call
xchg
xor
lock
xor
lret
int3
jmp
cli
in
cld
hlt
mov
xchg
out
lret
rclb
out
jmp
aas
clc
ljmp
sbb
xchg
nop
lock
nop
fsubp
ljmp
not
leave
imul
rcr
test
cli
loop
xlat
hlt
fimull
fmul
jmp
shlb
xor
fdivrp
lret
cld
flds
xlat
and
popl
xor
cmp
shll
cmp
cmpl
test
fcmovnb
in
orb
xchg
fbstp
ss
lret
cld
lret
divb
mov
cld
mov
jmp
xchg
test
loope
sub
rcl
sti
cmp
hlt
fsubrp
lock
loop
loop
xchg
sti
loopne
jecxz
loope
mov
push
xor
out
shr
std
cmp
jmp
fdecstp
test
jmp
lock
frstpm(287
loop
xchg
out
icebp
cmp
sti
icebp
xor
cmc
ljmp
shr
nop
xor
repz
shlb
stc
ror
aas
imul
clc
into
cli
aas
xchg
mul
jmp
cli
mov
aam
out
int3
fnstenv
int
cld
fdivp
xor
std
cli
xor
std
stc
mov
stc
jmp
xchg
repz
call
cld
out
fnsave
fsub
cmp
in
clc
test
xchg
stc
loop
fstp
out
fucomp
mov
aad
enter
xor
jmp
xchg
std
sar
jecxz
in
lret
out
out
lea
iret
ret
int
cmc
icebp
into
jecxz
iret
cmp
or
lock
out
nop
xchg
lock
in
test
leave
sti
fxch
loop
out
out
or
mov
out
rol
loop
repz
lock
fsubrp
in
fucomi
aas
call
filds
repz
ljmp
cmc
sti
cmp
int3
fstp
shl
in
jmp
in
incb
out
ret
aaa
in
fadd
leave
std
ds
repnz
lock
loope
xchg
jecxz
fcomp
std
in
aam
xorb
lds
stc
out
aad
int3
out
rcr
push
aad
xlat
aas
vpmaxub
ljmp
repz
lret
fst
leave
not
cmp
sti
aam
std
jmp
and
nop
int3
test
rol
in
call
ffreep
rcl
out
in
stc
testb
call
fadd
jmp
lret
rcr
cld
loop
cld
mov
fdivr
nop
hlt
test
aad
in
into
in
jmp
lret
fcomip
incb
nop
xchg
xchg
xchg
out
xchg
in
xor
cmc
repnz
loope
in
icebp
lock
clc
fsin
addl
xchg
dec
loop
cli
ds
aad
ror
lock
aad
fmuls
jmp
xchg
in
cmp
xor
cmp
idivb
shr
fcmovnbe
cli
out
ds
out
jmp
fadds
int
mov
int
loop
cli
cld
jmp
ror
repnz
repnz
xchg
in
nop
enter
orb
call
faddl
aam
aam
cmc
sti
mov
fiadds
les
repnz
fsubrp
sti
repnz
in
lret
jecxz
mov
ljmp
or
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
mov
jle
add
lea
idivl
repz
repnz
in
roll
jecxz
mov
shl
out
std
and
ss
std
cmp
ljmp
aam
ljmp
mov
repz
lret
call
in
out
stc
cmc
int3
fnclex
out
aam
imul
fimuls
in
int
sub
rcl
cmp
lock
cmp
mov
fimuls
jecxz
jecxz
int
repz
loope
aad
ror
mov
stc
leave
lret
mov
leave
lret
test
xor
into
ret
cli
clc
std
xlat
out
int
stc
repz
mul
jecxz
fcmove
mov
int3
fsubp
fsub
int
cs
rcl
sarb
cmp
stc
in
cmpb
sti
ret
sti
ftst
loopne
lds
fcmovbe
lret
fst
ds
clc
shl
loop
fadds
int
ljmp
hlt
jecxz
icebp
int3
xor
das
cli
aaa
lock
shl
stc
faddp
icebp
stc
addb
ret
xor
out
loopne
loopne
lock
test
jmp
lock
out
div
clc
out
ror
lret
cli
loopne
xor
cld
sarb
not
aad
xchg
loop
in
int3
mov
aad
jecxz
out
ret
fadd
iret
lret
repz
cld
loope
sti
repz
cli
jmp
loop
icebp
fcomi
jmp
ror
out
in
idiv
aas
loop
rcl
test
sbb
jecxz
loop
ljmp
hlt
ljmp
out
in
xlat
into
rol
out
fcmovu
loop
in
aad
out
int3
mov
icebp
xor
ljmp
cli
stc
aam
cli
xchg
test
decl
orl
lock
fcmove
fcomp
jmp
ljmp
testb
xchg
call
cmc
in
xlat
stc
shr
loopne
jmp
loop
fnstsw
aam
sti
lret
jmp
std
jmp
out
int
xor
lock
in
in
cmpb
addl
mov
jecxz
stc
into
into
ret
sub
fxam
rol
aad
repz
in
cmp
out
sarb
xchg
in
fcos
test
out
les
das
fnstenv
std
aam
xor
xor
fprem1
xor
ds
faddl
mov
repnz
xor
ss
cli
int
lret
aas
ret
and
xlat
in
test
int3
ljmp
addb
cmp
enter
cmc
repnz
std
loop
jecxz
fsub
test
call
lock
aaa
aam
cmp
fcmovu
leave
stc
lret
fmul
test
cmp
addl
int3
in
lret
rol
enter
in
out
aaa
cli
loope
cmp
stc
xor
ljmp
fcmovnu
mov
mov
into
rol
ljmp
fdivrl
aas
ds
and
and
jmp
xchg
jmp
cmp
aaa
cmp
int3
sti
repz
cmc
rcr
call
loope
jecxz
loope
out
loop
sub
out
rcr
cmp
hlt
cmpl
xrelease
mov
enter
hlt
iret
in
fnsave
into
sar
xlat
hlt
in
in
mov
loopne
shr
xchg
ljmp
ror
int3
repz
in
ffreep
hlt
incb
fcomip
jmp
out
lock
fmul
aam
xor
fadd
cmc
loope
jecxz
in
jecxz
xchg
iret
iret
xor
in
fdivrs
stc
loope
rcr
call
xlat
sti
in
in
fisttpll
jmp
adc
jmp
int3
into
fadd
ret
fdivr
out
sub
testl
ret
sti
hlt
aaa
aad
cmp
fld
xchg
in
mov
push
and
test
shl
fmul
cli
loope
iret
hlt
addb
rcr
lret
jmp
fcmove
cld
jb
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
lret
pop
pop
push
jle
aas
add
jecxz
loope
aam
fnstenv
aad
int
in
stc
into
rcl
sti
loope
mov
decl
fisttpll
aaa
in
cmp
lock
fincstp
aam
and
ret
mov
lock
xchg
jmp
xor
in
rcr
std
int
incb
cmp
std
lret
cmp
iret
mov
out
xchg
out
les
enter
stc
lock
flds
neg
fisttps
in
mov
icebp
jmp
roll
loope
hlt
enter
test
std
fcmovnbe
nop
ret
xor
cmp
ret
cmc
fstp
fcomp
test
jmp
cli
xor
sar
cmp
or
loopne
fcom
stc
leave
ljmp
and
xchg
lock
in
clc
in
shl
out
ss
flds
ret
test
loope
and
out
out
in
test
ret
xlat
cmp
jecxz
out
enter
jecxz
xchg
jmp
sub
ljmp
cli
rcr
fadd
out
loopne
decb
ret
icebp
out
std
cmc
or
repnz
neg
rol
sarl
xlat
xchg
or
out
mov
mov
cmp
cmp
sar
in
sti
call
ret
test
hlt
int3
mov
int
cli
out
cmp
call
sarl
ds
addb
call
jecxz
icebp
clc
cmc
lret
fidivrs
loope
fstpt
cmp
out
sti
fadds
adcl
in
in
enter
jmp
ret
shl
icebp
call
jecxz
xchg
icebp
out
rcl
in
enter
in
cmc
out
cmp
std
icebp
fdivr
fadds
out
in
loop
xchg
loope
in
sub
iret
lret
iret
in
ds
ds
shl
testb
fsubp
lock
mov
das
fidivl
repz
fdivs
out
fistpll
fdivrp
rol
in
sti
jmp
lock
fsub
or
call
leave
lret
out
cmp
clc
loopne
mov
loope
fxam
ljmp
xor
in
lock
repnz
repz
int3
xlat
loop
shr
test
in
in
std
xchg
sti
int
orl
enter
iret
sar
aas
repnz
fsub
clc
cmp
jecxz
mov
lret
xor
loopne
bnd
out
cmp
icebp
fsubp
loope
std
aas
icebp
out
xchg
jmp
pop
clc
fiadds
shlb
sub
repz
lock
aam
sar
aad
stc
jmp
incl
xchg
xor
fucomi
icebp
lret
cmp
add
out
les
lea
xor
icebp
aaa
div
lret
sarl
rolb
out
leave
rcl
addb
xchg
xchg
loope
enter
clc
into
xor
loope
filds
clc
in
xchg
out
lock
cs
out
int3
fcmovnu
repnz
call
fcmovnu
out
xlat
ds
in
ljmp
jmp
out
aas
neg
test
cmp
test
test
mov
std
icebp
test
int
xor
in
in
rcl
div
test
xlat
test
lret
in
mov
enter
mov
into
in
enter
fcmovne
icebp
into
out
div
fmuls
in
loope
mov
ss
jmp
jmp
in
lock
cmp
out
hlt
vpaddb
out
addb
not
aad
repnz
idiv
ds
cmp
shr
xchg
test
aad
or
out
fmull
jmp
out
repz
lock
icebp
in
lock
and
fcmovb
lret
and
enter
xchg
shr
xor
in
cmp
clc
cmp
std
test
cli
ffree
cmp
mov
fadd
std
hlt
mov
hlt
jmp
ret
ror
ret
rcl
je
repz
sbb
add
fbstp
in
fidivl
shl
stc
aaa
fdivp
dec
shl
ret
jecxz
in
and
out
imul
xor
ret
cmc
out
test
jecxz
fprem
std
jmp
sti
call
clc
jmp
in
leave
jmp
aam
in
sti
loopne
sub
ljmp
shl
in
xor
fnstenv
aad
in
xor
out
enter
loop
rorb
enter
fdiv
fcmovnu
repz
clc
out
loop
out
shl
ljmp
int3
addl
das
lock
call
cmp
fcmovbe
aam
jmp
test
in
icebp
inc
lret
lret
out
neg
aad
fsubrp
icebp
shl
iret
div
fstp
cli
jecxz
rcl
out
dec
int3
int3
mov
out
out
icebp
jecxz
in
jmp
cmp
bnd
in
shl
ror
jecxz
mov
out
loopne
sub
icebp
lret
or
leave
ret
in
ljmp
jecxz
xlat
in
shr
or
decb
xchg
lret
stc
loop
int
ss
loopne
cli
ds
fucom
test
call
sti
test
mov
shl
hlt
test
aaa
ds
ds
in
shl
movb
in
in
out
out
jmp
in
fcom
out
aad
idiv
sti
ds
rol
mov
cld
mov
in
sub
out
lret
xor
ljmp
aas
out
repz
test
sub
clc
iret
repz
in
cli
enter
repz
aad
enter
out
int3
jmp
loope
xchg
xchg
sar
out
leave
lock
std
int
shl
fld
fsubr
sti
loop
lock
in
xchg
mov
in
aad
fsincos
cmp
sbb
cmc
xlat
out
mov
decl
shr
xchg
xchg
int
xor
hlt
fstp
iret
xor
int
test
cmp
mov
fldl2t
jecxz
cli
loop
mov
xchg
lret
leave
das
hlt
cld
ljmp
loope
sar
fildl
out
jmp
in
subl
into
in
xor
fadd
icebp
jmp
mov
iret
xor
fdivrs
out
cmc
lret
cmp
ret
aam
push
std
clc
jecxz
int
loope
repz
repz
int
cmp
clc
aad
lock
out
out
cld
icebp
fiadds
shl
lock
cmp
in
aam
jmp
int3
cli
out
idiv
aam
faddp
mov
test
xor
xor
clc
xor
shl
out
cmp
mov
mov
jmp
xchg
icebp
shlb
loope
in
in
cmp
repnz
ljmp
iret
shl
fdivrp
out
iret
out
enter
shl
xor
aad
stc
fdivrs
mov
shl
ret
mov
loop
aam
test
ret
in
lret
cli
cmc
xor
in
imul
loope
fcomi
out
aad
out
lret
in
in
das
aaa
into
aaa
fcmovne
fnstsw
loop
not
ror
rcr
fcom
out
loope
cld
in
lret
rcll
cli
in
in
out
cmp
fnstsw
loope
incb
in
cli
loope
lret
shr
cmc
shl
xor
aad
out
div
lret
xor
inc
repz
fstpt
mov
in
addl
in
fcmovnbe
xor
ljmp
mov
fdiv
fmul
notl
in
lock
enter
sar
aad
hlt
rolb
sar
jecxz
repnz
mov
hlt
idiv
repnz
loopne
rol
repz
xchg
test
fcmovu
sub
loope
sarb
aam
sti
hlt
icebp
sti
sar
fdivrl
enter
orb
in
loopne
cs
rcr
aam
imul
cmp
cmp
mov
in
mov
cli
addl
iret
vpaddusw
fstp
pop
mov
outsl
fsubs
jle
aas
add
out
ljmp
cmp
shl
aas
out
adc
sti
enter
sti
test
iret
call
jecxz
shl
fdivrs
clc
cmp
fdiv
repz
cmp
push
movb
loope
into
out
enter
cmp
int
cmp
lret
loop
icebp
sti
cld
hlt
mov
aad
test
mov
les
iret
xlat
sti
aam
xor
leave
cmp
hlt
fcmovnu
and
cld
enter
fsub
int
in
out
repz
xlat
imul
sarl
rol
int3
loopne
int
out
rcl
cmpb
cli
mov
iret
cmc
xor
icebp
clc
xlat
fsubrp
xor
rcr
rcr
loope
fsubp
mov
jecxz
mov
enter
out
hlt
std
cmp
xlat
xlat
jecxz
lret
jmp
sub
loopne
iret
out
clc
xor
cld
icebp
cmp
out
xlat
call
lock
in
shl
iret
out
jecxz
call
addb
ret
in
faddl
loope
mov
clc
int
lret
ss
fst
in
out
bnd
mov
in
mov
rcl
test
leave
loopne
stc
shr
xor
lret
xlat
cmc
ds
in
mov
fsubp
incb
fmulp
loopne
in
out
in
int3
lret
icebp
sar
ret
xchg
sub
mov
lret
jmp
repz
xlat
cmp
fcmovnu
ss
out
out
std
repz
xlat
xchg
fcmove
mov
xlat
loop
xchg
jmp
ljmp
aad
stc
fcomip
aam
jmp
mov
xlat
loope
ror
mov
lock
out
out
jmp
ljmp
adc
ljmp
int
in
hlt
into
ror
icebp
int3
hlt
shr
out
cmp
cld
test
mov
cmc
jmp
mov
mov
repnz
jecxz
fcomi
cmp
cmp
cli
out
sarb
in
xchg
ror
iret
or
lret
ror
sarb
jecxz
cli
xchg
xchg
in
fcomip
aam
xchg
hlt
in
fcmovnb
cld
repz
neg
fcom
in
icebp
ret
test
aad
add
fst
repnz
icebp
in
repnz
cmc
call
hlt
cli
ret
repnz
clc
xchg
iret
in
jecxz
test
aad
fsubrs
out
cmp
repnz
fmul
xor
jmp
mov
test
lret
clc
repnz
int
cmp
loope
jmp
int3
fcmovb
repz
idiv
not
loope
mov
loopne
cmc
jmp
sub
clc
in
shr
cmp
rol
sar
fucomi
sti
leave
sarl
loop
lret
out
std
nop
shrb
fxch
iret
in
repz
aam
icebp
jmp
jecxz
out
movl
fsubp
out
fcomip
lds
lock
cmc
clc
or
stc
cmp
std
ret
jecxz
xchg
or
sub
jecxz
test
in
lret
iret
hlt
fistpll
int3
sbb
sti
incl
int3
xor
repnz
fcomp
cmp
sti
lret
ds
in
sbb
fucompp
out
fcomip
in
icebp
aad
fyl2x
aaa
out
fidivrs
aas
jmp
fst
test
mov
fdecstp
test
loopne
mov
xlat
xor
div
cmp
stc
loopne
cmp
fdiv
aad
test
mov
mov
into
cli
xor
lret
jmp
rcr
cmp
and
stc
in
or
xchg
repnz
std
mov
aaa
fldcw
in
sti
out
loopne
cmp
xchg
fdiv
test
and
rolb
loope
ret
xor
xor
jmp
fst
lock
enter
test
cli
jmp
mov
mov
call
iret
int3
jmp
aas
out
in
loopne,pt
cli
movl
ret
int
repz
fucompp
in
cmp
aad
test
in
out
leave
repz
jmp
fcom
xlat
push
xlat
outsb
rol
xorb
lahf
pop
jle
aas
add
ret
fucomi
aaa
sarb
lret
adc
in
repnz
xchg
fsubr
idiv
loop
cmp
aad
enter
out
std
out
rcl
xlat
cmp
in
or
and
shrb
leave
cmp
xor
cmp
int
loope
ds
testb
lret
in
mov
in
ljmp
out
aam
leave
fnstcw
xchg
ljmp
fimull
call
icebp
cmp
rcr
int3
int3
rol
fsubr
sar
ret
out
int
std
fcmovu
out
repnz
add
into
out
int
loope
add
out
loop
in
mov
jmp
in
int3
rol
sub
lock
ss
aas
shl
sbb
rcl
std
aad
enter
jmp
mov
shl
ret
sti
xlat
out
in
aad
aam
cmp
test
fchs
icebp
iret
rorl
iret
xor
cld
out
cmp
loopne
cmp
ret
fildl
out
in
out
lds
cmp
jmp
xlat
sar
loop
repz
ljmp
lret
addb
iret
icebp
stc
repz
neg
aas
fpatan
push
in
in
mov
jecxz
repnz
mov
ret
icebp
aaa
fcmovbe
shl
clc
repnz
mov
test
loopne
out
popl
aam
icebp
repz
out
ljmp
fadd
aad
fndisi(8087
fidivrs
in
out
out
mov
jmp
loope
enter
rol
jmp
hlt
roll
addl
clc
int3
jmp
fisttpl
test
xor
cli
std
cld
fcmovu
cmp
icebp
int
movl
stc
leave
into
aad
aam
aaa
aam
lret
jmp
loopne
shl
int
out
idiv
repz
fisttpll
lea
lret
sarb
lret
leave
stc
stc
div
ret
clc
repnz
mov
mov
xchg
test
test
cmp
jmp
cmp
in
lock
out
leave
aad
fucomp
sti
sar
std
repz
out
xor
fsubr
std
rcr
int3
int
into
loop
fiadds
hlt
clc
sbb
mov
xor
cmc
lds
in
fdecstp
sbb
cmp
in
in
lret
mov
lret
jmp
test
aam
ret
xor
fcmovne
aaa
hlt
stc
ss
fmulp
sbb
rolb
sti
jmp
xchg
stc
out
jmp
repnz
loop
cld
enter
out
iret
repz
out
xor
sub
xor
cmp
iret
rcr
not
filds
in
cli
mov
aaa
xor
clc
icebp
in
cmp
ljmp
hlt
rcr
mov
in
icebp
enter
aad
int3
cmp
aad
cli
cmp
cli
jecxz
cmc
loope
test
in
loop
xlat
leave
in
xor
loopne
test
in
clc
cld
aam
fimull
rorl
xor
cmc
fldl
sti
out
cli
icebp
in
int
fyl2xp1
rolb
sti
repnz
hlt
cmp
jmp
rcr
mov
fmuls
lret
mov
mov
lock
xor
cld
ss
faddp
testb
test
lret
sti
fucomi
out
lock
xor
neg
sti
cmp
xor
std
loop
ret
cmp
repz
ror
cld
xchg
rorb
in
ljmp
cmp
xchg
sbb
popl
xchg
xchg
ss
clc
cld
fdivr
jmp
hlt
shr
lock
aam
fidivrl
out
out
nop
xchg
in
faddl
shl
ror
out
int3
icebp
sar
jecxz
fcmovnbe
clc
idiv
jecxz
xchg
xchg
mov
in
jmp
jmp
loop
shlb
in
sar
aaa
int3
addb
ljmp
repz
xchg
test
clc
cmp
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
insb
pop
adc
popa
jle
aas
add
cmp
cli
cmc
clc
cmp
roll
xchg
xchg
ljmp
xor
enter
repnz
neg
jmp
jecxz
jecxz
xlat
ffree
loope
sub
mov
into
cld
fcmovnb
imul
repz
cmp
xlat
cmp
repz
rorb
cli
leave
test
mov
aaa
loope
out
cli
hlt
aad
shll
rol
add
cli
stc
int3
out
cld
lret
iret
out
or
ss
call
std
rol
sti
shl
cli
mov
cld
cld
fcmovne
enter
or
shl
lock
icebp
out
into
aam
shl
int3
sbb
sti
hlt
mov
leave
repz
fxch
xor
in
repz
loopne
fdivrl
idiv
out
stc
xchg
std
fnclex
loope
mov
rcr
icebp
mov
orl
lret
call
out
loopne
roll
filds
mov
jmp
jmp
loope
loope
cmp
out
leave
in
xor
add
shr
icebp
fptan
loope
dec
int3
cli
cmp
rcr
mov
mov
aad
loop
jecxz
sar
fyl2xp1
call
cld
icebp
cmp
or
lret
fdiv
loopne
clc
xor
call
loop
loop
addb
orl
mov
in
rcl
ror
fcmove
fistpll
sar
fsubr
repz
call
in
mov
call
enter
in
cmc
in
icebp
aas
ds
cld
neg
out
stc
enter
orb
jecxz
vpor
clc
iret
loope
ret
in
fldl
mov
mov
mul
iret
jmp
leave
lret
call
xor
test
aad
in
clc
loop
mov
in
repnz
rol
in
xlat
fmul
cmp
fndisi(8087
xor
jecxz
lret
loope
fyl2xp1
int3
std
loop
ffreep
aaa
sti
not
jmp
shr
sti
adc
hlt
mov
lret
imul
int3
out
shl
aam
xor
cmp
out
std
jmp
cli
int
loop
div
loop
fcmovu
test
fisttps
shr
ljmp
aaa
rcr
addb
rol
leave
and
loope
and
shl
in
fdiv
out
out
rcr
jecxz
aas
loop
cmp
xchg
loopne
sti
in
cli
test
lock
lock
cmp
cli
sbb
xor
ret
jecxz
inc
out
sti
mov
test
fdivs
loop
lret
fdivrs
fidivrl
hlt
int
sti
idiv
call
int
fimuls
subb
xor
xor
enter
lock
xchg
loopne
lret
fildl
mov
in
lock
cli
cmc
out
fxch
in
jmp
mov
rorb
iret
icebp
xchg
jecxz
mov
neg
in
xor
ret
and
incl
shl
out
out
cmp
xlat
out
neg
adc
in
cmp
loopne
in
adc
filds
xor
out
in
or
cmp
hlt
cmc
enter
xlat
fcmovb
loope
test
icebp
cmp
fcomip
xor
out
cmp
out
in
addl
ror
jmp
hlt
cmp
ror
cmp
cmp
enter
in
test
sub
xor
div
fdivr
cmpb
hlt
lock
fld
cld
fisttpl
cmp
rcl
sti
stc
cmp
aad
cmp
lds
in
leave
fcmovnu
sub
repz
in
sti
idiv
out
cmp
lret
xor
jmp
xor
lock
cmp
sbb
repz
mov
sti
fdivr
int
repz
xchg
fildll
xor
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
sub
data16
aas
add
xor
in
shlb
out
aad
rol
out
mul
test
rcr
jmp
xchg
mov
ss
iret
ljmp
test
std
in
fcomp
lret
in
in
nop
stc
in
in
rorl
cld
xor
cmp
faddp
cmp
not
jmp
lret
clc
jmp
test
repnz
aas
loope
xor
jmp
out
cmp
aad
cmp
cld
cmc
leave
loope
mov
or
mov
ret
stc
aaa
jmp
fcmovbe
shl
repz
in
out
std
icebp
loope
repnz
shll
cmp
aad
repz
in
aad
xor
loop
cmc
sar
neg
nop
addb
xor
int
out
icebp
xlat
xor
fldl
in
lret
repnz
loopne
cs
in
xor
rcr
call
loopne
cli
clc
call
lret
rcr
xchg
mov
xchg
sub
aad
out
clc
fcmovnu
cld
fildl
fldl
repz
hlt
rcl
cmp
std
sub
shr
rorl
out
call
nop
xor
loope
fdivr
in
ds
fyl2x
into
cmpl
jmp
orl
xchg
call
bnd
cmp
repz
fdivrs
test
fcom
loop,pt
enter
mov
addl
call
aad
iret
xor
sar
cmc
cli
jmp
in
lea
sti
in
icebp
shl
shl
cld
shl
icebp
add
leave
cld
sbb
ljmp
out
icebp
sarl
shl
incl
dec
test
sub
in
aad
fld
icebp
repnz
idivb
ds
in
idiv
in
fcomp
test
ror
xor
loope
lret
int
out
test
testl
xor
xlat
fadds
std
vpsrld
and
cli
jecxz
in
in
xor
clc
repz
fdivr
std
xlat
cmp
fsubr
jecxz
out
out
jmp
orl
rcl
int3
enter
jmp
iret
and
fdivrp
out
xchg
int
mov
in
ss
xor
call
int
out
in
rol
jmp
out
mov
out
iret
dec
lret
repz
imul
ds
neg
icebp
ret
sarb
aas
repnz
ds
xlat
xchg
test
rol
out
in
shl
cld
fcom
ss
cmp
test
in
lret
out
into
in
xchg
aaa
out
ret
cmp
out
ljmp
addl
in
iret
loope
mov
into
repnz
jmp
call
cmp
clc
ds
cmp
stc
fucomip
xlat
ds
clc
or
in
cmc
shl
int3
ret
ljmp
sti
adc
loopne
mov
icebp
cld
out
xchg
xorb
in
iret
hlt
inc
cld
cld
in
sar
fcmovnbe
repnz
out
sti
test
mov
jecxz
xor
jecxz
lock
enter
ljmp
xlat
mov
fiadds
lock
repz
fucomi
fsubr
call
stc
call
ljmp
call
fidivrl
xor
sarl
aam
faddp
testl
ljmp
ljmp
cmp
not
sar
popl
das
cmp
int
div
in
into
aas
fdivr
repnz
lret
fucom
out
lret
out
into
shl
mov
test
call
xor
idivl
into
xrelease
adc
jmp
out
lock
idiv
repz
lret
loopne
xchg
mov
into
xchg
std
shlb
jge
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
and
and
jle
add
repnz
lret
lret
clc
stc
clc
clc
idiv
mov
fnstcw
std
into
clc
stc
fdivr
cld
xchg
cli
into
int
cli
cmp
frndint
test
xlat
mov
mov
int
xchg
out
in
xor
cmp
loope
cmp
ret
fdivrl
orb
orl
icebp
cs
xor
int3
fiadds
clc
adc
int3
xchg
loop
divb
shr
lock
iret
cmp
fincstp
loope
fcmovnb
aas
test
aam
loope
shrl
in
call
ror
cmp
call
out
nop
out
repz
xchg
xchg
div
lock
repnz
cmp
cmp
hlt
out
not
mov
mov
loopne
rorl
int3
sti
bnd
cmp
int
cmp
rol
int
mov
jmp
in
hlt
in
iret
call
ljmp
loope
mov
out
jecxz
out
out
shr
fdivp
leave
lock
cld
cmp
cmp
ds
aad
loop
sar
lret
xlat
mov
fsubr
out
jecxz
loop
xor
out
sti
cmp
int3
fiadds
fisttps
nop
int3
mov
loope
sbb
icebp
out
ds
lret
xor
stc
rcr
shl
out
hlt
not
std
std
xchg
xchg
fdiv
lds
aam
or
rcl
int
out
test
shr
ret
aam
icebp
lret
stc
out
xor
aas
cld
hlt
cmp
out
fimull
call
jecxz
clc
xor
out
repnz
mov
mov
into
out
mov
lret
cmp
rcr
aaa
roll
in
bnd
lret
mov
in
xchg
decl
xor
out
repnz
hlt
repnz
push
loopne
aad
ljmp
xor
fst
in
cmp
ss
in
fprem1
stc
clc
aad
stc
fcmovne
les
int3
int
xchg
ret
lret
std
cmp
add
cli
cli
ret
sti
jecxz
fcmovnb
lret
enter
iret
ljmp
in
int
stc
sar
cld
shl
cmc
jmp
leave
add
cli
iret
mov
ror
shl
out
icebp
ret
icebp
cmc
cs
clc
cld
lret
aas
clc
stc
add
loope
ret
mul
stc
out
mov
ljmp
xor
fidivrl
repz
fmul
in
fdivl
loop
sub
jmp
faddl
out
divb
ss
cmp
div
int
int
out
aad
test
loop
test
fcmovnu
leave
movb
out
lret
cmc
cld
out
int3
cli
xlat
into
in
cmc
test
in
into
mov
icebp
jmp
add
jecxz
jmp
clc
leave
xchg
std
nop
ljmp
repnz
loope
repnz
roll
fcmovnu
in
test
jecxz
clc
repz
out
fdivp
fst
stc
into
icebp
loopne
aam
filds
into
jmp
lea
fnstcw
out
hlt
repnz
fadds
in
aad
neg
loopne
std
mov
loop
xor
out
cli
aam
ss
in
incb
sti
jecxz
ret
aad
or
out
in
aaa
divl
lret
xor
cmp
xlat
lret
shr
fstpt
out
call
jmp
out
cmp
rcl
stc
or
loope
aam
aad
les
call
shl
fdivs
in
fdivrp
xlat
cmc
shr
lock
cld
in
fadds
fcmovnbe
fmull
fcomi
fdivl
idiv
cmp
out
iret
test
in
stc
in
int
sbb
xchg
ljmp
in
iret
into
xlat
ljmp
filds
fiaddl
xchg
loop
into
loop
fcompl
inc
clc
jmp
aam
fadd
fstp
pusha
shl
lahf
pop
lret
adc
add
aaa
sti
out
lock
shl
ret
test
jecxz
jmp
jmp
xor
int3
cmp
ss
iret
hlt
test
mov
test
lret
ror
jecxz
ljmp
cmp
fnstsw
ljmp
fucomp
int3
fxch
fucomp
xchg
rorb
xor
ljmp
xlat
lock
cmp
leave
in
fsubrp
test
les
leave
iret
ss
out
cmp
repnz
icebp
cmp
cmc
jmp
into
iret
ljmp
xor
sti
sub
fidivrs
fld
out
hlt
int3
call
sti
fmull
out
aaa
stc
int
div
cmp
aam
std
mov
add
lret
xchg
xchg
mov
repnz
aad
call
cmpl
loope
sub
ljmp
shl
into
xor
in
lock
filds
fdivr
in
jmp
cmp
lret
std
into
ret
test
shl
int3
out
movb
xchg
in
xchg
test
lock
sarl
fcmovnu
loop
fldl
nop
in
shl
jmp
cmp
icebp
rcl
in
fldz
rcl
icebp
not
rcl
dec
mov
mov
cmp
xchg
out
jmp
out
xor
fmul
test
fsubr
mov
jmp
into
cli
cmp
and
int3
ljmp
xor
out
std
loop
std
idiv
orl
leave
int3
and
jmp
jmp
icebp
sti
xchg
test
fildl
ljmp
aaa
das
cmp
cmp
iret
aam
shr
hlt
inc
cmp
xchg
out
ret
out
out
into
loopne
test
jmp
hlt
iret
lret
int3
sti
sti
iret
hlt
fidivrl
lret
loopne
out
in
int
out
int3
int3
leave
lret
cld
rol
in
f2xm1
repz
jecxz
cmp
in
int3
out
sbb
lret
div
iret
ret
cmp
out
idiv
cmp
loope
loope
shl
fcomi
in
enter
call
xor
neg
fidivl
idivl
loope
repnz
fcom
cmp
lock
fisttpl
into
ret
aad
repz
shr
fadds
aad
test
cld
into
fmuls
repz
in
cmc
cmp
xor
xor
sti
les
lock
xchg
out
xchg
in
out
cmp
jmp
cmc
jmp
stc
in
vpsubq
lret
ror
decl
xlat
shl
cmp
clc
enter
rcr
xor
xchg
lock
shr
ss
ds
jmp
fadd
fdiv
xlat
clc
cmp
out
fisttpl
out
into
aam
iret
int3
sarb
iret
int
cmp
sti
aad
jmp
sti
out
sti
jmp
xchg
in
aam
shl
shr
ljmp
int
loopne
cmp
std
orl
sub
icebp
cmp
ss
xlat
shl
fprem1
fyl2x
aas
out
test
jmp
repnz
in
xbegin
test
lret
xor
mov
enter
lret
enter
shl
in
out
aad
lret
out
imul
xlat
ror
jmp
loope
cmc
fstp
xchg
int3
mov
fndisi(8087
lret
lret
aad
leave
xor
jecxz
cmp
fchs
shl
fsincos
iret
aas
out
out
imul
lock
test
lret
aas
cmp
rcl
cld
test
ds
in
stc
rorb
clc
ljmp
ror
shl
ret
in
loop
test
enter
mov
lea
enter
aam
cmpb
stc
faddl
aad
cmc
loopne
in
rolb
test
out
push
adc
shr
add
add
fcomp
fistps
je
dec
or
aas
add
icebp
lret
fdivp
icebp
in
call
lds
fcmove
lret
out
fsubr
call
call
out
shl
out
enter
call
incb
into
out
leave
ds
stc
into
loope
ret
out
test
cmp
faddp
jecxz
xchg
loope
out
cmp
repnz
rol
div
iret
rcr
enter
fcmovb
loopne
fucomi
orb
shll
cmc
std
xor
cmp
loop
ret
xor
ret
shl
jecxz
xor
sarl
int3
sar
shl
cld
icebp
loopne
test
nop
jmp
fucomp
fsubrp
ret
xor
neg
in
clc
xlat
cmp
cmpb
fidivrl
lret
lret
in
testb
ror
xor
cmp
leave
shl
int3
jmp
rolb
loopne
aad
lds
and
lret
jmp
fsubr
aam
not
std
shl
mov
lret
xchg
fucomp
out
rcl
in
aam
in
stc
xor
test
mov
enter
sti
enter
out
loopne
shl
xor
cmp
icebp
enter
in
fcmovb
sti
ds
cld
clc
xchg
orb
out
aaa
leave
aam
aad
ds
aas
ds
jmp
xchg
xor
in
fabs
in
fyl2xp1
test
lock
loopne
aas
aam
std
fxch
loop
xchg
test
xor
cmp
xor
out
aam
fnstsw
xlat
fcmovb
aam
stc
mov
mov
ljmp
cmp
stc
faddl
mov
jecxz
leave
in
out
in
int3
roll
sti
shr
cld
bnd
fdivrp
shl
testb
fdivp
into
decl
xor
icebp
jmp
ret
cld
lock
leave
cld
out
loope
jecxz
fsubrp
xlat
fdivs
call
clc
loope
out
cmp
cmc
sti
aad
call
jmp
lret
fldl
cmp
lret
in
xor
cmp
lret
mov
mov
imulb
out
in
aad
idivb
aam
fucomp
stc
jecxz
rcl
cli
repz
out
test
xchg
mov
orl
shl
fcomi
in
lock
and
sti
cli
fiaddl
movl
fcmove
std
fdivr
repnz
stc
fcmovnbe
sbb
call
xchg
out
rclb
out
sub
fcmovnb
int3
aas
fdivp
rcl
std
div
loop
xchg
clc
add
iret
xchg
out
hlt
shr
out
xlat
call
in
not
and
xlat
jmp
fisttpll
xchg
loope
sar
rol
xor
sti
into
divb
repz
iret
hlt
rcr
ret
shl
mov
mov
clc
rcl
sti
int3
aam
addb
mov
fisttps
jmp
in
jmp
call
mul
div
cli
fimull
in
fstp
xchg
mov
orb
fdivrs
enter
loopne
aam
shl
cld
ljmp
in
out
ljmp
cmp
repz
int3
bnd
iret
fsub
cli
aad
mov
shl
loop
repnz
iret
ret
ror
cmp
stc
jmp
fucom
xlat
rol
std
fisttpll
in
mov
xor
fnstenv
stc
in
cmp
out
aad
cli
sbb
cli
fcmove
xchg
loop
lock
jmp
ljmp
int3
hlt
loop
xchg
ret
in
loopne
fcmove
out
dec
xchg
int3
in
fucomip
out
xor
out
cmp
ds
lock
shr
div
xchg
sbb
loop
rorl
repz
sti
out
int
aad
ss
fcmovu
repz
sar
fadd
test
out
fcomi
icebp
jmp
xor
hlt
xor
add
add
add
aas
aas
ror
rcl
ret
pushf
mov
orl
ja
jle
add
fidivs
sbb
xchg
aad
ljmp
out
leave
repz
jmp
cmp
cli
repz
in
cmp
mov
jecxz
int
shl
stc
lret
sub
lock
cmp
repz
std
aam
aad
aas
out
ljmp
loop
orl
cmp
aas
cli
jecxz
cmp
fmulp
out
in
nop
dec
fsubp
hlt
lock
sub
cmp
iret
out
icebp
repz
fsub
addb
mov
xchg
rcl
cmp
out
xor
jmp
addl
sar
cld
flds
loopne
std
mov
sub
sti
cmp
clc
stc
jmp
fmul
ds
fadd
fnsetpm(287
fisttpl
lea
jecxz
jmp
loope
ret
int
in
xlat
rcl
mov
test
xchg
out
loope
aam
aam
icebp
cld
cmc
out
imul
ds
test
cmc
aad
aad
in
test
call
loope
nop
iret
shl
icebp
jmp
lock
loop
clc
into
stc
rolb
fdivp
std
orl
test
xor
fxtract
into
iret
call
fcmovnbe
aad
mov
cld
fdiv
neg
out
sar
cmp
ljmp
xor
fiaddl
ljmp
rol
enter
lret
fsubrp
fsubr
shr
roll
add
int
fstl
aad
sti
lret
fcom
in
std
std
rcr
cmp
stc
out
mov
mov
iret
cmc
cs
leave
xor
ss
aas
jmp
icebp
leave
fdiv
sbb
out
in
sub
jmp
repz
in
out
or
fldl
dec
leave
hlt
in
jmp
loopne
sti
fdivr
xor
mov
neg
rolb
fsub
cmp
sti
iret
in
hlt
fcmovb
aam
stc
roll
in
fiaddl
mov
mov
aam
in
xor
fcom
jecxz
cmp
sub
out
mov
shr
sub
out
in
call
repnz
cmp
addb
out
std
fcoml
out
repnz
aad
mov
ds
lock
xlat
xchg
cli
ret
mov
cmc
out
rclb
clc
ror
int
clc
cmp
shl
out
repz
stc
ds
rcll
cs
stc
cmp
out
shll
adc
xor
repnz
cld
test
call
int3
das
fcmovu
shr
lock
cli
iret
or
aad
xchg
rolb
test
out
shl
xchg
clc
clc
into
clc
ljmp
and
out
fisttpll
mov
hlt
in
jecxz
stc
xor
int
fidivrs
repnz
orb
fmulp
into
addb
xor
cli
clc
cmc
repz
in
jecxz
std
adc
call
icebp
out
mov
call
leave
icebp
aad
out
loope
repz
call
jmp
loop
dec
in
jmp
cmp
sti
rolb
in
jmp
iret
adc
clc
loope,pn
repz
int
rol
repz
add
sbb
fsubp
sti
loopne
cmp
out
into
repz
in
fcom
int
fadds
fdivp
decl
mov
xor
in
jmp
xor
cmp
add
loope
fucom
orb
shll
hlt
loope
fcom
enter
int3
neg
aad
adc
les
enter
xchg
jmp
jecxz
fptan
jmp
icebp
shr
ljmp
out
in
xchg
fucomi
int3
fcoml
in
hlt
out
stc
cmp
add
add
rol
aad
pop
pop
movsb
or
lods
mov
jnp
jle
add
repnz
std
cli
ret
idiv
loope
enter
jecxz
test
iret
xor
repnz
fmul
cmc
out
out
cmp
xchg
cli
in
rolb
sub
sarl
aad
hlt
stc
and
test
div
enter
mov
jmp
fsubr
clc
in
lock
rcl
stc
jecxz
lock
aam
aam
std
mov
mul
mov
mov
in
aad
aam
icebp
idiv
cmp
cld
addb
xrelease
into
test
dec
hlt
xchg
mov
les
in
into
sti
aad
stc
rcr
aam
leave
fadds
into
jmp
xor
ret
cld
lret
sarb
std
sarb
aas
ror
mov
sti
ljmp
imul
cmp
shlb
jmp
ljmp
out
clc
cld
loop
mov
out
nop
sti
xchg
shl
repz
out
cmp
repz
call
not
fcomp
ror
sbb
test
aaa
shl
fidivrl
std
ror
cmc
leave
rcl
loop
ret
test
shl
out
lret
fildl
shrl
lret
in
fcmovnu
aas
or
int
cmp
adc
cmp
roll
enter
xor
lret
add
cmp
and
xlat
in
fdivp
nop
sub
ror
aam
ror
stc
fcmovnbe
cld
clc
aad
push
fabs
mov
jecxz
xchg
in
repz
cld
loopne
loope
ret
mov
xlat
lret
ljmp
out
ss
into
cmp
cmc
sti
sarl
faddl
std
jmp
addb
xor
xlat
shr
cli
xlat
fadd
lock
repz
xchg
cmpb
test
loopne
xchg
nop
loope
not
cmc
xor
shl
int3
lret
ds
fdivr
adc
test
cmp
idiv
fiadds
call
jecxz
cmp
fcmovnbe
fcmovu
in
rcl
ret
and
ljmp
lret
xchg
fdivr
test
shll
sub
cld
div
lock
fld
cmp
fcom
rcr
loopne
jecxz
mov
xchg
popl
rcl
vpaddusw
in
repnz
fsubr
cmp
fadd
movb
loopne
mov
out
leave
in
fnstcw
icebp
jmp
jmp
aaa
aas
fsincos
out
mov
neg
and
test
out
mov
cmc
xchg
loope
xlat
stc
stc
cmp
rcl
hlt
repnz
icebp
jecxz
mov
ret
repz
nop
loop
jmp
int
out
jecxz
int
in
aas
aaa
cmc
sar
ss
cmp
cld
aad
jmp
xchg
out
rorb
jmp
aam
jmp
cmc
fsub
repz
hlt
mov
xchg
mov
in
int
out
out
xor
cmp
ljmp
repz
cmc
lds
fimuls
cli
in
shr
cmp
shl
cmp
xchg
test
test
loop
out
cmp
fdivrl
cld
leave
cmp
int3
xlat
repz
ret
in
lds
lret
repnz
stc
les
jmp
fucomp
fdivr
int
loopne
std
mov
out
xchg
in
jecxz
mov
pop
shll
xor
repz
repz
cmp
loope
clc
incb
xchg
mov
xchg
ljmp
cmc
iret
or
jmp
aaa
hlt
cmp
hlt
test
int
sti
mov
ret
ljmp
repz
les
mov
int3
loopne
out
nop
in
sub
jmp
into
test
std
ret
fildl
lock
cli
orb
hlt
test
sbb
hlt
aad
addl
fcomip
fmul
xor
leave
out
hlt
ds
out
repnz
xchg
stc
in
aad
into
jecxz
xchg
int3
shl
out
xor
aad
shll
inc
or
add
add
ret
into
sarl
rol
rcl
ja
cs
aaa
cmpsl
jg
jle
add
loope
fcmove
sti
test
sar
fucomip
aas
int
xchg
repnz
mov
aad
cld
lret
aam
and
les
call
mov
xchg
out
hlt
enter
jmp
hlt
sarl
loope
cmc
fstpt
mov
nop
fsubrp
std
cmp
xor
in
cmp
iret
lret
fmul
int3
rcl
repnz
enter
cli
xchg
repnz
orb
in
enter
jecxz
hlt
jecxz
out
faddl
call
in
loop
xlat
aam
icebp
call
ss
out
fdiv
clc
fcmovnb
jecxz
test
lds
in
ljmp
idiv
cmp
cld
jmp
fsin
ftst
ds
ljmp
out
sbb
loope
in
int3
lret
in
enter
fneni(8087
iret
loop
in
stc
mov
incl
testb
xlat
das
cld
xlat
dec
repnz
aas
add
cli
fimull
lock
loop
in
fcmovnb
fidivrl
xor
loop
sti
xor
fldl
loop
xchg
idiv
ljmp
icebp
xlat
in
out
cmp
mov
sub
cmc
xor
not
int
lret
and
adc
lret
leave
test
decl
out
lock
call
sarl
shl
repnz
in
loop
decl
repnz
lock
fnstcw
div
rol
filds
int3
loop
loope
xchg
ret
jecxz
iret
cmc
fdivp
xor
jecxz
rcr
out
cmc
mov
adcb
repz
repz
in
fcomi
cmp
cmp
fxch
addl
jmp
out
int3
cmp
int
into
xlat
cmc
rol
rolb
in
rorl
shl
shl
in
xor
test
mov
cmp
jmp
out
out
mov
fisttpll
xor
xor
cmp
cmp
cmp
fucom
stc
fcmovu
in
loopne
mov
aam
shll
aam
iret
lret
loop
aas
shl
jmp
fdivr
int3
enter
fldl
ljmp
ds
loope
repz
fsubrp
stc
sbb
xchg
xchg
bnd
cs
out
jmp
loope
filds
cli
shl
xchg
cmc
out
ror
cmp
xor
shl
loop
fcomp
loope
rol
call
out
shl
sar
nop
inc
xor
int
cmp
call
cmp
in
ret
rol
test
fiadds
fst
out
cmc
ror
lock
test
hlt
loopne
in
sbb
fcmovne
mov
add
loop
in
fcom
int
lret
xlat
loopne
fcmovnu
inc
cmc
xlat
xchg
int3
loop
mov
adc
loop
in
lret
out
lds
das
aam
idivl
jmp
int
ds
ret
cmp
ljmp
rcl
ss
jmp
rcr
fnstsw
bnd
lock
fstp
enter
lret
icebp
xchg
int
xlat
hlt
leave
enter
std
xor
hlt
sti
int
incl
in
int3
inc
into
out
fucomi
fisttpll
lret
ljmp
lock
lock
enter
test
xchg
test
fcomp
xor
out
clc
shr
stc
ss
cmp
incb
fisttpll
sub
in
cmp
hlt
repnz
sti
xchg
call
xor
out
in
enter
lret
fcmovb
sti
out
adc
lret
mov
mov
in
jmp
xor
cmp
cmc
cmp
jecxz
fdivrp
cld
lock
fdecstp
enter
out
fmul
decb
hlt
xor
in
fmull
je
mov
mov
jmp
leave
aad
movsb
inc
jb
xlat
adc
push
add
rcr
stc
ret
and
faddl
stc
out
into
ffree
xchg
std
jmp
vpsllw
sti
int3
aad
fistpll
repnz
cmp
rcr
xlat
ret
les
adc
aam
mov
stc
cmp
enter
mul
aas
test
loop,pt
mov
cmp
icebp
in
in
ljmp
sti
div
int
lret
out
idivb
loop
jmp
mov
xchg
shll
cmc
int
fdivr
sti
fsubrp
fadd
shl
out
aas
xchg
mov
xchg
jmp
in
fcmovnu
cmp
loopne
sbb
cmp
xlat
repnz
fimuls
cmp
xor
ljmp
cmc
out
addb
stc
xchg
cli
loop
ror
out
iret
fld
divl
fmulp
repz
and
call
fcmovb
mov
xchg
jecxz
xchg
xchg
idivb
xabort
sar
int
xor
ret
int
hlt
stc
test
mov
fmulp
lret
xchg
in
xor
ret
in
shl
fcmovu
fcom
hlt
into
fld1
aas
ljmp
test
in
xchg
shlb
test
loopne
ret
in
roll
decl
cmc
icebp
cmp
xor
int
divb
aam
shl
clc
fst
fildl
mov
call
xor
ljmp
rcl
out
fidivs
add
xchg
call
addb
xor
hlt
stc
jmp
loopne
ds
ljmp
out
decb
into
aad
ljmp
cmp
jecxz
jmp
in
in
xchg
int
xor
loop
ljmp
fidivl
loopne
fcmovne
ret
cmc
fmul
in
orb
aam
ror
ss
ss
cmp
add
loopne
fmuls
filds
repz
out
ss
aad
cmp
fsub
lock
sti
std
aad
lds
in
adc
cmc
iret
in
enter
clc
repz
repnz
idiv
lret
jecxz
xchg
rclb
cli
fcomp
out
rcl
fcomi
aad
roll
mov
cli
call
jmp
cmp
int
shl
cmp
cmpl
idiv
xchg
jecxz
shr
sti
repnz
repz
in
aam
test
sarb
loope
mov
mov
xchg
ljmp
hlt
jmp
cld
adc
out
rol
fcmovnu
ret
fdivrp
std
cli
jecxz
enter
aam
xor
aam
les
fcomp
enter
out
fidivrs
xchg
aad
std
in
in
mov
mov
aas
xor
sti
fdiv
iret
lret
cmp
repz
and
test
out
mov
jmp
repz
std
int3
shl
test
roll
call
fmulp
mov
fcomp
xor
into
jmp
sbb
repnz
aad
rol
aad
mov
loopne
jmp
xchg
test
out
jecxz
leave
int3
xor
lock
repnz
repz
out
shl
shl
in
cld
out
aaa
lret
in
call
adc
xchg
in
sub
stc
cmc
fsubr
cld
cld
aam
in
loope
xchg
mov
jecxz
out
xchg
in
int3
lret
aaa
shl
ror
aas
clc
sbb
add
sbb
loope
rcr
out
hlt
lret
jmp
fcom
in
int
ljmp
hlt
cmp
fimuls
sub
in
fstpt
enter
aaa
adc
ret
icebp
loop
shr
jmp
ljmp
aam
ret
ret
icebp
cmp
aam
ss
ds
fucom
ljmp
out
shl
repnz
fyl2xp1
rcr
lret
idiv
enter
or
add
test
sub
add
add
add
into
aam
aad
fst
stc
hlt
stos
xchg
pop
jle
push
sub
jg
aas
add
out
in
xor
shl
vpaddsb
int3
repnz
nop
loope
lret
out
das
aad
int
cmp
loope
lret
sar
and
fiadds
lret
jecxz
loope
out
shl
lret
xor
cmp
icebp
sbb
clc
xchg
jecxz
out
sub
jmp
adc
iret
sti
leave
fcmovne
roll
cld
sar
ret
sbb
jmp
shll
cmc
repz
rcl
frndint
into
in
aad
test
out
out
hlt
mov
out
imul
stc
leave
cmc
int
std
ljmp
sti
cli
ror
shl
movl
ror
fcmovnbe
iret
rol
std
cmc
rcr
icebp
rolb
enter
lds
jmp
cs
lock
xlat
int3
xbegin
rcl
test
fiadds
stc
fldl
divl
enter
iret
leave
icebp
int3
xor
loopne
ljmp
fdiv
lret
leave
mov
loope
shlb
in
rcl
repnz
clc
shl
jecxz
test
ljmp
mov
int3
xchg
ret
rcl
in
cmp
in
cmp
cmpl
out
fsub
enter
in
cmc
rol
cmp
xlat
into
rcr
cmpb
aas
stc
stc
mov
mov
lea
call
int3
out
push
sar
fcos
test
and
jmp
test
repz
xchg
ret
xor
aam
aam
fcomi
hlt
fcmove
in
rol
fst
in
mov
lret
ljmp
cmc
out
out
ljmp
sarl
in
lock
xlat
xchg
loop
cld
and
jmp
cmc
xor
ror
int
in
shl
xlat
in
call
std
std
in
mov
test
in
fcmove
sti
std
into
lock
hlt
loopne
std
not
cmp
test
mov
fmul
enter
leave
cmc
iret
cmp
cli
out
mov
lret
lret
ffreep
xor
fdivrs
lock
call
jmp
test
shr
cmc
fsub
clc
call
loop
int
cli
icebp
sti
fcmovu
xlat
fistpll
sarb
ds
sbb
rorl
div
jecxz
call
cmp
loope
cmp
bnd
loope
flds
icebp
rolb
in
int
cmp
addl
and
xchg
lock
sub
rcr
xlat
rcr
std
into
cld
fmulp
loopne
repz
jmp
fcmovnu
icebp
out
loopne
ret
int
aam
enter
cmp
int
clc
loop
jecxz
ds
mov
fstl
lret
xlat
int3
repz
icebp
enter
cmp
fxtract
rcl
call
lret
xlat
mov
mov
fcmove
in
test
enter
hlt
sti
lock
filds
rcl
div
hlt
lret
xlat
movl
ret
aaa
rcl
lock
lds
neg
cli
fdivr
loop
mov
repnz
call
cmp
fcmove
clc
add
rol
lds
ljmp
in
adc
leave
xor
lock
fdivp
out
jmp
repz
icebp
out
stc
sti
sub
leave
nop
in
mov
shl
enter
int
cld
call
stc
aad
sar
rol
jmp
enter
lea
out
shlb
into
cmp
lret
div
cmp
ds
aam
call
ljmp
lret
cli
sar
iret
add
out
sar
fsubr
fadds
fldl2t
icebp
repz
cmc
leave
hlt
shl
std
cmp
sar
iret
in
shl
idiv
clc
std
out
icebp
mov
leave
rcr
fnsave
lret
fdiv
iret
cmc
in
test
test
lret
cmp
test
mov
jmp
aaa
in
cld
hlt
int
cmc
rorl
adc
pop
add
add
rol
aad
fstp
movsb
ficomps
out
or
jle
add
int3
loope
clc
flds
ljmp
sub
in
ret
sar
lock
call
test
fdivp
roll
mov
loope
test
fucom
jecxz
fcmovbe
neg
out
out
inc
hlt
sbb
stc
in
jmp
in
test
divl
in
shll
test
rol
repz
testl
mov
divb
xor
lock
call
jmp
test
sub
icebp
in
iret
rcr
xor
aad
cmp
loope
fsubr
in
in
fcomi
in
rcr
rol
in
in
fidivrs
cmp
xlat
fdiv
out
out
ret
cmp
leave
xchg
xchg
loope
into
shr
mov
loop
repz
jmp
loopne
fnstsw
std
sarb
filds
fpatan
out
xchg
lret
into
in
sti
out
xor
repnz
in
cli
rcr
loope
sub
ffree
mov
repnz
sub
aaa
cmp
idiv
stc
in
fcmovnu
test
fiadds
fucom
out
xlat
filds
aam
lock
rcr
aam
jmp
fcomip
in
ret
testl
test
fdivs
cmc
fdivrl
loopne
iret
aad
rcl
ret
fucomi
mov
xor
loope
ret
fucomp
fdivr
not
rcr
loope
fdivrl
std
ljmp
lock
rolb
int
lret
sti
cld
std
xlat
cmc
fadd
fsubr
cmc
call
out
out
jecxz
aad
cmc
ret
stc
in
into
lret
int
fadds
fcmovb
out
fucomp
nop
out
ror
lea
icebp
xor
cmp
in
repnz
test
mov
and
orb
shr
jmp
repnz
lret
icebp
or
xacquire
loope
fucomip
jmp
loop
jecxz
cs
jmp
in
repnz
icebp
aad
sar
cmp
mov
fnclex
clc
and
sbb
in
in
out
cli
cmp
int3
aam
rcr
test
std
out
loop
int
xchg
test
cmc
in
shr
jmp
cmp
call
cli
clc
shl
mov
out
jmp
xor
in
rcr
cmp
cmp
in
ljmp
cmc
cmp
mov
out
out
std
out
lock
sarb
lret
clc
repnz
stc
in
out
shl
hlt
fdivp
or
out
out
icebp
lret
jmp
jmp
in
imul
ss
fdivr
sti
in
iret
test
fsub
test
loope
out
cld
out
das
enter
test
repnz
shl
std
enter
aad
orl
lock
enter
iret
fdiv
aad
cmp
aam
enter
icebp
xchg
fildll
icebp
lret
repz
icebp
hlt
add
aas
mov
enter
cmc
int
cmc
in
fdiv
in
hlt
aad
xor
adc
cli
loope
or
int3
fimull
rclb
rol
stc
ror
lret
leave
hlt
cmp
shl
lock
std
mov
xlat
test
sbb
std
fucomip
xchg
fcmove
das
leave
xlat
out
sti
shl
orl
mov
aam
rol
ss
cmc
lret
ds
cmc
cmp
loop
xlat
lock
fcmovne
sbb
nop
cmp
jmp
ret
aaa
cld
xor
stc
fdivrs
xchg
aad
sti
cli
sub
jmp
call
fidivrl
fsub
xor
sar
ret
loop
aas
cld
movl
loopne
jmp
iret
cmp
out
repnz
aam
icebp
lock
lock
ljmp
dec
ljmp
fmul
jmp
xlat
jmp
stc
mul
loopne
in
cld
into
cmp
xor
xor
icebp
ss
repz
shr
add
add
lret
enter
int
cltd
movsb
imul
sbb
adc
stos
adc
aas
add
rol
addl
jecxz
fisttpll
aam
clc
fldpi
out
loope
cmc
cld
clc
rcr
cmp
sbb
ds
xchg
fiadds
xchg
in
cmp
div
out
cmp
ds
fmulp
shl
xabort
aad
neg
out
std
mov
xor
fcomp
cld
aaa
fdivrs
std
fdiv
test
ret
imul
fmull
loop
ljmp
fsubrp
rcr
lock
cmp
ds
test
mov
in
decb
repz
into
not
out
ljmp
addl
out
mov
rol
hlt
out
ror
sti
in
in
aaa
rol
fcmovnb
aad
test
fldpi
addb
repnz
int
xor
icebp
lock
cmp
clc
loopne
test
jecxz
in
jmp
xchg
leave
iret
neg
fdivr
leave
rcr
aad
out
rcr
shl
jmp
call
mov
dec
aas
loopne
aad
int
fcomi
into
out
stc
loope
frndint
fcmovnbe
ljmp
fucomi
fucomp
xor
lret
sti
cli
repnz
repz
shl
mul
div
shl
push
int3
lock
xchg
out
fdiv
repnz
icebp
jmp
hlt
addl
loope
fdivr
repnz
repz
in
cmp
int
lret
loope
rol
test
jmp
int3
cld
cmp
adc
xchg
add
repz
aad
fidivs
clc
cmp
in
rorl
addl
repnz
fxtract
xor
aad
shl
dec
xor
adc
loopne
xchg
ret
into
flds
out
lret
stc
ss
sar
fucomi
lret
fcom
cmc
adc
fnsetpm(287
out
jmp
sub
mov
repz
ret
cmp
lock
jmp
sar
ret
call
in
fcmovnu
test
faddl
stc
div
stc
das
mul
fnsave
out
std
in
sar
ds
jecxz
cli
ret
and
out
into
repnz
call
fadds
test
mov
out
out
lock
nop
into
ret
xlat
xor
test
fdivr
cmc
cmp
addb
fdivrs
loopne
fnclex
xchg
cld
loope
jmp
fsubr
call
lret
xor
cmp
fsubr
xlat
call
mov
jmp
fcomp
das
les
int
repz
int
cmp
jecxz
fidivrl
sar
clc
out
out
fcmovbe
in
xchg
xor
xor
jmp
int3
cmp
sub
call
orb
fidivl
sub
mul
rcl
into
fildl
call
jmp
xchg
int3
loopne
int3
cmp
aaa
cmp
cmp
ret
test
mov
sbb
decb
in
out
fucomi
xor
rcr
sub
in
loopne
loope
jmp
sti
leave
fdivp
fstl
aam
hlt
ljmp
icebp
fst
lds
xchg
loope
in
nop
iret
xor
cli
shr
cli
cmc
fnsave
vpsraw
test
lea
fdivp
repz
int
fsub
repnz
jmp
into
fcomp
cmc
neg
xchg
out
cmp
out
ror
ror
hlt
divl
xor
repz
fpatan
sti
frndint
addb
lock
iret
lret
sar
shlb
ror
cmp
fstp
repz
idiv
lret
xchg
mov
fisttps
div
repnz
stc
leave
ds
into
hlt
adc
div
addb
fsubr
lret
sar
in
ss
leave
fsubrp
cli
cmp
test
loope
stc
xchg
xchg
ret
mul
lret
lock
loopne
rcr
repnz
loop
loopne
or
fldl
xor
out
mul
cmp
cmp
ffreep
hlt
roll
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
cmp
mov
addb
fistl
aam
fsubr
das
clc
fst
xlat
loop
add
ret
fincstp
fldpi
loop
int3
mov
cmp
cld
xor
cmp
in
lock
fstp
bnd
aas
cmc
xchg
jmp
loopne
std
aad
clc
sub
fdivl
enter
in
cmc
std
clc
xchg
mov
ljmp
loop
lock
jmp
out
int3
ds
xchg
loope
mov
xchg
xlat
cmc
cmp
div
xor
enter
shl
aam
fiadds
loope
mov
loop
mov
repz
dec
lret
out
fmul
hlt
cld
loopne
cmp
test
orl
lock
in
ror
in
cmp
loopne
cmp
cmp
repz
fsubr
aad
int3
testl
cs
aad
not
fsubrp
cmp
lret
ret
cmp
fcmovnb
fmul
in
in
vpsubsb
clc
ljmp
into
rcr
stc
in
ret
lock
loopne
imul
test
fisttpl
xor
ret
into
cli
out
lret
clc
cmp
add
fcomp
int
lret
mov
lock
int3
ret
cmp
idivl
cmp
out
roll
lret
xchg
xchg
decl
clc
ror
fucomi
in
xlat
rolb
out
cmp
loopne
call
sti
lret
out
sub
leave
aaa
ror
int
loop
out
rolb
leave
mov
sub
jmp
cmp
sarl
xor
cmp
aaa
icebp
cmp
mov
xlat
mov
rcr
iret
int3
rcll
cmp
out
rcr
out
aas
rol
clc
filds
mov
or
cld
mov
xchg
repnz
fcom
out
xlat
ss
repnz
rolb
xlat
lret
xchg
cmp
out
out
ds
aaa
in
stc
cmp
std
xchg
fisttps
sti
jmp
fsub
in
repz
cmc
ret
shr
aaa
cli
fdivrs
mov
call
fisttps
int
aad
idiv
cli
call
out
aad
repnz
aad
aam
mov
in
adcb
jecxz
xor
fcmovnu
loopne
into
xor
cmp
mov
mov
in
out
icebp
int3
lret
into
aam
out
int
adc
aas
ret
fstp
out
cmp
fsincos
loope
mov
ss
stc
iret
aad
cmp
mov
ret
out
lds
test
cmc
loopne
shl
cmp
int
cmp
inc
cmp
mov
leave
sub
int3
fxch
jecxz
xchg
fiadds
aam
repz
fxch
int
ret
fsubrp
loopne
addb
lret
xor
aaa
ret
out
stc
fidivs
xor
std
icebp
cld
les
cli
sbb
test
and
icebp
mov
imul
repnz
fucomp
jmp
cmp
cmp
cmp
call
in
fsubr
xchg
iret
icebp
mov
out
fprem
lock
aas
neg
cmpl
cld
les
out
int3
xchg
loope
jmp
cmp
in
call
fcmovne
out
loope
sarl
hlt
int3
loop
ficoml
mov
lret
clc
lret
xor
cld
fistpll
repz
iret
aas
mov
mov
out
test
fcomip
xor
out
rcl
loop
fneni(8087
mul
clc
repz
mov
fdivrp
in
out
into
mov
sub
out
ror
icebp
fucom
cmp
lock
loop
cmp
cmc
mov
jmp
int3
in
ljmp
iret
rolb
incb
int
out
mov
rcl
aaa
out
jmp
in
call
stc
aad
cmp
cmc
jmp
xchg
mov
shl
leave
ret
cli
lret
aam
out
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
js
repz
add
shl
clc
idiv
ret
mov
ret
lock
cmp
xlat
aam
loope
cli
ret
lock
repz
fmul
ror
out
out
test
icebp
ss
stc
incl
fcmovnu
ds
leave
adc
loopne
aam
icebp
fsincos
ret
test
repz
enter
decb
nop
xchg
aam
mul
cld
rcr
rcr
aam
cmp
fsubrp
out
loopne
int
fdiv
fucomi
out
fstl
jmp
fidivs
clc
aad
in
xchg
mov
loope
int3
lret
fmull
rcl
fcom
cmp
rcr
fidivrl
sar
faddp
in
clc
fadd
mov
int
std
adc
idiv
xor
das
cmp
in
sbb
incl
test
in
nop
into
jmp
shl
ss
cmp
clc
inc
add
decl
rolb
into
in
aam
enter
rcr
testb
int3
test
mov
shl
ret
lock
call
sti
sti
icebp
push
mov
incb
lock
repz
out
repz
sbb
fcomip
fld
jmp
fcmovne
cli
enter
into
xchg
and
out
cmc
cs
stc
cli
fldl
rcr
clc
mov
roll
in
xbegin
rcl
lret
aas
aas
cmp
ret
jmp
ljmp
out
shl
repnz
in
cmp
cmp
loopne
test
addb
in
rcr
xchg
repz
xor
cmp
cmp
into
test
cli
clc
in
mov
mov
ljmp
lret
xor
divb
cmp
shl
fcmovne
xlat
aas
ret
ljmp
in
cmc
mov
shl
xor
lock
out
repnz
cld
cli
cli
stc
out
out
jmp
test
loopne
cmp
cmp
shlb
cmc
cli
rol
in
cmp
sti
out
jmp
out
xchg
xchg
in
xor
call
repz
ret
in
xchg
jecxz
lret
rcl
call
in
lret
fcmovbe
out
ror
stc
xor
dec
lret
call
std
mov
nop
lock
shll
fcmovb
rolb
adc
aam
loopne
rcl
in
shl
in
dec
aam
ror
out
xlat
cmc
jmp
int
fidivrs
jecxz
in
fiaddl
std
mov
aad
xor
shrl
call
in
shl
clc
aad
in
fsubp
ljmp
aad
cmc
test
cmp
ss
ret
fdivrp
loopne
test
test
xchg
in
std
lock
xor
xor
leave
repz
adc
repnz
shl
fld
fimull
out
std
in
in
mul
repz
fdivs
fidivrl
xlat
fidivrs
ret
rcr
ljmp
fiadds
ror
fdivs
ljmp
ret
std
hlt
loop
in
mov
mov
jmp
out
aaa
cmp
out
int
aam
ror
incb
rcr
aad
test
xchg
loopne
jmp
out
jmp
aad
icebp
ffreep
xchg
sbb
jecxz
mov
orb
cmc
sarl
rcl
shl
roll
stc
xbegin
out
jmp
xchg
in
out
in
xlat
out
out
cli
fcom
ror
clc
ret
stc
loope
test
mov
aas
in
clc
cld
loop
loope
dec
lock
xor
fcmovbe
lret
fcomp
les
aad
loope
xchg
mov
xbegin
ss
jmp
ret
mov
repnz
jecxz
in
iret
fiaddl
in
cli
cmc
in
cmc
leave
sti
jmp
lock
lea
jmp
ret
ror
aam
mov
and
sbb
jle
test
lds
in
orb
jmp
cli
xor
fcmovnu
neg
int
rcr
in
aam
call
call
xor
fyl2xp1
ss
cld
loope
idiv
adc
rolb
lret
iret
and
int
xor
cmp
cmp
in
fdivrs
xor
hlt
out
clc
orb
jecxz
test
out
int3
cmp
out
aaa
lock
rcl
idiv
incb
lock
xor
lret
repnz
cli
rcr
call
rol
in
jmp
lret
fadds
ljmp
fnstenv
shr
lret
aad
cli
hlt
addl
loope
stc
mov
test
icebp
fcom
loop
aaa
sar
lock
iret
in
in
fdecstp
mov
out
or
call
xor
cmp
fcom
rcl
aam
lock
repz
incb
in
std
xchg
nop
repz
xor
xor
repz
lret
clc
cmp
ret
ljmp
jmp
ss
cmc
lock
stc
rcr
loope
cld
adc
in
jecxz
mov
div
stc
lret
fdivrs
lret
cmp
cli
rolb
xchg
enter
nop
call
fcmovu
ror
cmp
cmpl
cmp
xchg
cli
lret
int3
call
out
shll
in
xor
clc
imul
in
into
aas
fdivrp
repnz
sti
in
out
fdivr
fadds
into
out
in
ror
in
clc
aad
lret
fidivrs
repnz
fdivrl
sbb
fmul
mov
repnz
shlb
fdivs
jmp
sti
ret
roll
sti
fst
call
lret
fsubrs
xor
cld
ljmp
and
cmc
xchg
hlt
cmp
xor
cmp
xlat
lds
jmp
loopne
xchg
ljmp
ffree
aam
incl
out
in
stc
idiv
mov
mov
hlt
ljmp
call
aam
rcl
aam
jmp
sbb
lret
lret
leave
rorl
in
hlt
cmp
out
aam
iret
loop
stc
add
out
lock
in
jmp
shr
cmc
imul
lret
jmp
int3
into
idiv
add
mov
sbb
jmp
in
jmp
xchg
xor
in
aad
cli
cmp
rcr
sarl
repnz
loop
xchg
mov
mov
icebp
xchg
in
iret
ljmp
aam
into
loope
loop
repnz
ljmp
shl
mov
aad
in
std
cli
ljmp
icebp
test
idiv
orb
iret
xchg
sub
icebp
fcmovnbe
jmp
div
jecxz
fcomi
aad
lock
fucom
mov
int
iret
jmp
aam
fcmovnb
fiaddl
ret
aam
ljmp
call
out
jmp
fdivr
cmp
fcomi
aad
aad
in
aam
test
int
out
fiadds
neg
das
shr
out
sarl
sarl
ret
hlt
mov
jmp
loop
jecxz
aam
ljmp
aam
in
cmp
cli
jmp
int
nop
in
lds
out
cmc
xor
std
fsubr
faddp
std
iret
loop
repz
fcmove
mov
int3
lret
xchg
nop
into
lret
test
cmp
icebp
iret
cmp
cld
xchg
ror
add
sti
mov
popl
rcr
aad
lock
iret
cmp
xor
fadd
repz
aas
in
sti
and
shr
mov
repnz
xor
lock
ds
testb
xlat
cmc
xchg
stc
out
mov
jecxz
jecxz
lock
cmc
sti
cmp
into
iret
ret
cmc
stc
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
out
fcmovnbe
loopne
vpmaxub
rol
fld
repz
repz
shl
fdivrl
fsubp
mov
in
out
and
test
xchg
ret
cmp
xor
repnz
ftst
aad
clc
mov
mov
mov
aaa
icebp
cmp
fmul
xor
cmp
rcr
cmc
lock
ret
sti
mov
leave
stc
adc
rorb
loop
jmp
fdivr
clc
cmp
lret
fcmovb
mov
testb
stc
xchg
mov
shlb
repnz
out
rcr
jmp
sar
aas
fdivr
fiaddl
loop
iret
sti
mov
lret
stc
xor
hlt
fucomip
sarb
in
ret
xchg
cmp
loopne
jmp
repnz
call
aaa
ret
rcl
int
jmp
sbb
hlt
fisttpll
lock
in
cs
fsubrs
shl
int3
hlt
icebp
cmp
and
add
fldl2e
out
ficoms
cmc
ret
sti
cmp
cmp
sarb
fcmovb
in
repnz
in
iret
fists
shl
repz
enter
stc
enter
int
std
shl
sar
cmc
fnclex
lret
in
adc
cmp
icebp
jmp
xor
rcl
ret
xchg
out
leave
mov
add
in
in
xor
idiv
lret
cmp
jmp
stc
lret
out
into
addl
imull
hlt
leave
ds
test
jmp
cli
addb
leave
rcr
ljmp
cmp
repz
sbb
out
push
int3
aam
int
hlt
repz
stc
repz
aas
hlt
clc
out
cmp
cli
mov
fdiv
fxch
xchg
xchg
shl
in
sub
xor
leave
lret
fidivrs
sti
cmp
incb
shl
std
enter
fucomi
jmp
out
sar
in
clc
fcmovne
lock
loop
mov
fldl
mov
aad
aaa
div
ss
repz
xlat
icebp
xlat
xlat
aam
test
or
xor
in
lock
jmp
out
sarl
repz
mov
lds
lea
xlat
ror
div
aaa
idiv
loope
add
fildl
mul
cli
loopne
int
xchg
repz
in
xor
lret
ss
stc
sar
jmp
shl
aad
fdivr
jmp
sbb
shl
in
in
lock
fcmovbe
fst
loopne
ret
adc
enter
out
and
in
mov
enter
cmc
aam
cmp
rolb
iret
fcmovbe
out
fucom
fcomp
out
xchg
in
ljmp
xor
cmp
cmc
rcl
ret
clc
repnz
loopne
lret
cmp
mov
loope
loopne
xor
xor
in
lret
icebp
aam
sar
loope
fildl
fcomip
mov
xor
cli
fadd
out
sti
ljmp
rol
test
jmp
test
fiaddl
call
fstp
aas
cmp
lret
int
repz
fdivp
in
fldl2e
in
lret
loope
in
jmp
into
stc
out
lock
fcmovnu
fscale
out
fcmovnu
enter
enter
jmp
xor
xor
sar
in
out
not
idiv
fdivr
xchg
std
fldl
das
rcl
cs
xor
cmp
sti
loope
not
in
fyl2xp1
jecxz
mov
loope
out
aaa
sub
into
lret
out
leave
std
fdivrp
fadds
leave
cmc
aad
xchg
call
xchg
cmp
sar
out
cmc
sarb
fistpll
fmulp
ljmp
std
loope
out
cmpl
leave
out
cmp
xlat
jmp
cmp
sti
int
cmp
xlat
repz
call
xchg
into
lea
cmp
cmp
loopne
stc
repz
cmp
shl
addl
mov
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
je
and
jle
fld1
jecxz
call
sti
call
loopne
sti
xor
lock
lock
loop
xlat
fadds
sti
enter
out
icebp
loope
aam
in
cli
jmp
shl
lret
loop
test
clc
call
ret
rorb
fcom
jecxz
sar
lret
cmp
in
in
test
loope
ffree
sub
in
loope
mov
fstp
jmp
shl
xor
sarb
fcmovnbe
repnz
addb
in
roll
fbstp
xor
fcmovne
das
jmp
out
fcom
rol
and
ds
jecxz
lret
fcmovnbe
rorb
sti
in
cld
aad
cli
testb
shr
test
out
movb
mov
iret
cli
icebp
in
ljmp
adc
call
testl
repz
int3
jmp
jmp
xor
sti
cmc
ret
cmp
aas
fcomi
jmp
mov
repnz
sti
xchg
in
test
ss
leave
loopne
out
loope
aam
cmp
fsubp
rol
cli
cmc
fmuls
mov
jecxz
ror
shr
shl
stc
out
out
into
fcmovnu
sar
roll
faddl
shl
shr
xor
ss
lock
repnz
iret
cmp
int
int
rol
mov
fucom
xchg
int
xchg
jecxz
xlat
xor
stc
hlt
xor
roll
mov
lret
in
lret
mov
orl
int
cmp
xor
fstp
out
leave
xchg
mul
out
iret
and
cmc
aad
in
jecxz
cs
aad
ss
aam
cmp
ds
cld
fimull
rcr
xor
in
aad
hlt
push
cmpb
loope
rol
test
aam
cmc
in
and
lret
xchg
xor
clc
int3
sti
sti
sti
cmc
repz
loop
xlat
ret
cmc
loope
mov
fdivr
clc
std
shr
mov
out
xor
ss
aam
rcr
sarl
cld
mov
out
std
enter
out
xlat
cmp
fstp
icebp
in
lret
xor
shr
mov
in
lock
fdivr
rcr
std
cmp
cmc
addb
ds
test
jecxz
mov
icebp
xchg
loop
iret
jmp
aas
sar
ds
stc
xchg
lds
mov
leave
jecxz
hlt
rcll
rcr
hlt
call
and
rolb
jmp
shl
inc
aam
lret
shl
loopne
hlt
leave
ret
jmp
in
in
lock
call
cmp
in
rcr
ljmp
out
fiadds
jecxz
cmp
iret
iret
lret
shr
repnz
in
fiaddl
test
mov
iret
int
xchg
in
icebp
std
leave
in
dec
fst
into
fxch
repnz
lock
out
or
fsubp
call
repz
lret
aam
cld
fnstsw
cmp
sarb
in
stc
hlt
out
cmp
mov
in
aam
in
jmp
aam
hlt
xlat
out
xchg
fcmovnu
clc
loop
ljmp
call
ret
aam
fnsave
repz
fdivr
rorb
int
fcomi
cmc
loope
hlt
call
iret
fxch
fstpt
jecxz
clc
test
hlt
cmc
jmp
nop
mov
mov
xor
leave
jecxz
int
fcmovnu
lret
lock
cli
ret
ftst
ffreep
lds
xchg
test
int
cli
lret
fcmove
int3
cli
imul
fcmovu
fcomip
icebp
fcomi
repz
fucomi
loope
fld1
out
loopne
das
in
ret
ret
cmp
aaa
xor
int
std
sti
idiv
hlt
out
sti
lds
or
clc
jmp
ds
fidivrs
sar
cmp
lret
shr
nop
test
in
call
fcomp
aad
loope
incl
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
loop
sub
aas
add
rorb
fiaddl
shlb
sub
cmp
cmp
cli
add
jecxz
rolb
mov
test
int
rorl
in
test
clc
test
loop
test
jecxz
xchg
xlat
mov
push
cli
out
jmp
xor
icebp
ret
fmul
fdivl
std
cmp
cmc
jecxz
ret
test
clc
into
jmp
fnstsw
cmc
repnz
std
xor
cmp
cld
rcl
xor
fstp
loopne
call
in
xchg
not
enter
out
rcl
lret
test
stc
sti
jmp
mov
loop
int3
sub
hlt
fdiv
std
icebp
int
filds
rorb
mov
out
shl
loopne
out
int3
out
cmc
cmp
int3
shl
lock
mov
test
std
in
test
ljmp
xlat
out
enter
xor
xlat
loope
lock
xlat
mov
sti
fisttpl
mov
stc
jecxz
xor
neg
cmc
cmp
std
inc
out
enter
lret
in
loope
leave
int3
rorb
out
lret
cli
push
lret
in
loope
fcmovne
in
xchg
in
xchg
lret
repz
in
neg
leave
out
jmp
out
loop
ret
fcmovb
cld
test
xchg
nop
into
cld
jecxz
vpsubd
cli
fcomi
ds
jmp
std
shl
xlat
xchg
std
stc
std
loopne
rorl
aam
xor
aad
lret
cmp
loope
fldl
stc
xchg
lea
xchg
enter
int
ljmp
std
cmp
mov
testl
xor
lret
icebp
into
xlat
divl
clc
test
ljmp
cmc
cs
aam
aam
iret
aaa
clc
aad
fildl
xlat
in
sub
xchg
repnz
jecxz
enter
xor
int
aaa
adc
rcl
call
fisttpl
aad
clc
fxch
out
ljmp
cmp
sti
out
out
aam
faddl
fadds
cmc
jecxz
xor
xor
in
out
xlat
addb
stc
mov
out
lea
in
call
leave
in
ret
jecxz
jecxz
fdivr
fxam
incb
xchg
out
out
xor
int
xor
testl
or
lock
jmp
not
out
sti
into
cmp
idiv
clc
fnstsw
fnstsw
cmp
mov
fxch
fsubp
fadd
xchg
cmc
enter
lret
ss
cmp
leave
cmp
fucom
call
enter
out
in
xchg
jecxz
neg
fsqrt
leave
into
leave
enter
test
out
out
fcmove
fadds
call
jmp
xor
int3
shl
repnz
test
mov
fucomp
stc
leave
incl
int3
call
cmp
lret
fcmove
fucomip
fstp
clc
stc
cli
fsub
mov
into
mov
fsubrp
lea
out
out
ss
aaa
aam
cmp
into
in
aaa
xlat
cld
aas
addl
mov
shl
rol
cmp
in
cmp
ljmp
test
addb
clc
ret
fcmove
lret
or
fidivrl
rcr
shl
addb
fsub
jecxz
stc
clc
lret
xchg
icebp
mov
iret
sub
lret
lret
loopne
jecxz
test
ror
leave
out
test
xchg
mov
rol
sub
int
sti
loope
sub
fst
roll
fstl
test
out
lret
iret
lret
flds
cmp
ret
fildl
fucomp
std
loope
aam
lret
jmp
out
fnsave
addl
leave
ljmp
test
roll
idivl
fucomi
enter
out
cmp
int
cmp
call
mov
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
fimuls
cli
out
mov
out
shlb
into
std
cmp
xlat
loopne
sti
inc
jmp
loop
out
shl
in
leave
rcl
out
stc
cli
out
jmp
sar
xlat
in
xor
in
sti
fdivr
leave
in
mov
int3
xchg
cmc
xor
cmp
icebp
das
sti
cmp
cmp
loopne
in
out
mov
jmp
sti
xchg
jmp
ret
int3
cmp
std
lock
ds
neg
movl
xor
xor
xor
iret
into
filds
jecxz
test
lret
shl
int3
out
out
cmc
xor
ljmp
stc
fcmovnb
cld
aad
lret
jmp
std
xorl
in
out
xor
icebp
ss
cmp
cmp
idivl
cld
sti
jmp
mov
xchg
in
xor
clc
out
cld
xor
aaa
fidivrl
xor
cmc
test
cli
mov
icebp
rcl
xchg
ljmp
hlt
into
leave
into
lret
fnstsw
std
neg
stc
neg
in
lea
repz
repz
xor
lds
stc
iret
cmp
jecxz
not
shl
shl
fcmovne
sti
out
call
mov
repz
lock
out
int
cmp
or
test
std
fdivr
xchg
loopne
cld
mov
xchg
rclb
int3
cld
iret
int
loope
fnstsw
xchg
fcmovnb
xlat
testl
out
sti
cmp
std
xlat
repnz
fiaddl
clc
in
aad
jmp
jmp
hlt
repnz
aad
fscale
xlat
aad
fistpll
ret
cmc
cmc
test
hlt
out
vpandn
mov
cmc
fnstenv
std
in
cli
out
loop
repz
test
adc
ffree
in
faddl
icebp
lock
ret
xor
clc
aad
sbb
sti
cmc
cld
in
mov
iret
out
fucomip
mov
xchg
sub
icebp
rol
in
cli
cmp
ljmp
fcomp
hlt
ret
test
xchg
repnz
xlat
in
icebp
stc
fstp
into
int
fcomip
test
cld
icebp
aam
jmp
std
lea
out
jecxz
sti
in
neg
int3
into
fnstcw
fmul
sti
mov
int3
loopne
lret
xchg
mov
orb
in
hlt
aam
aas
in
into
test
xchg
incl
in
add
xchg
xchg
shr
xor
ret
aad
int3
fsubrp
ret
stc
loop
shr
ds
in
leave
out
fsubrp
ret
cmp
lret
cmp
clc
sub
cld
cmp
cmp
sti
iret
in
xchg
test
hlt
loope
xor
repnz
in
adc
sar
fdivrp
fsub
lock
lea
loope
clc
icebp
xor
xor
out
cmc
cmp
cmp
fcmovb
lret
jmp
addl
loopne
xlat
ret
sar
loopne
cmp
fdivr
div
aam
ds
lock
jecxz
ljmp
out
out
xlat
int
idivl
fcompp
cli
fmul
lret
xchg
xor
repz
lret
iret
clc
ljmp
rcr
fcomi
lret
in
fadd
ror
in
iret
aad
loop
cmp
stc
lret
loopne
iret
add
mov
test
xchg
xchg
in
out
in
in
in
xor
cmpb
iret
into
aad
enter
jmp
ljmp
xor
enter
ljmp
shl
adc
std
out
cld
sti
test
leave
loop
mov
in
ret
iret
out
ljmp
ds
stc
repz
out
lret
out
jmp
in
std
cmp
stc
cld
idivl
cmp
cmp
nop
xchg
ror
mov
iret
aam
int3
cld
xor
std
cmp
xlat
fcmovu
mov
testb
mov
lock
iret
hlt
aad
hlt
shl
aad
fld
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fisttpll
cmc
aad
mov
jg
scas
add
sti
int3
jmp
jmp
out
imulb
ljmp
cmp
mul
mov
cmp
std
call
leave
xor
mul
lret
idivb
int
clc
sar
sar
flds
lret
mov
sarb
out
xor
ljmp
shl
icebp
xchg
loop
cmc
jecxz
mov
cs
into
cmp
cmp
ljmp
out
cmc
ret
loopne
enter
dec
fdivp
nop
aas
xor
stc
xor
xor
iret
cmp
clc
cmc
std
ljmp
lock
int3
in
loopne
int3
vpsubsw
aaa
aam
aam
fcmovb
out
loop
in
call
jmp
repz
xor
ljmp
fcmovne
neg
inc
xchg
hlt
repz
mov
int
call
into
xor
into
lret
sti
lret
lock
hlt
loope
loope
orl
leave
fucomp
xchg
hlt
rcl
iret
into
repz
fstpt
adc
cmp
test
test
mov
enter
mul
fnstsw
sbb
in
call
std
mov
test
jmp
in
das
in
lds
cmp
fistpll
clc
rcr
rolb
call
xchg
clc
cmp
neg
shl
cli
jecxz
xlat
in
loop
not
leave
ljmp
mov
xor
ret
cmp
icebp
sti
ror
out
fildl
incl
test
fcmovne
out
int3
xchg
aas
call
out
not
enter
cli
clc
xchg
repnz
aad
fsubrp
mov
orl
jecxz
repz
ror
jmp
ds
test
sar
xor
aad
les
in
aam
hlt
out
out
into
fidivl
cmp
jecxz
rol
loop
fcomi
ffreep
lret
fisttpll
out
clc
sti
call
rcl
fsub
ret
call
or
vfrczss
int
aam
repz
std
std
fsubr
cmp
aad
fcmovne
sti
rcll
iret
aad
ss
cld
testl
xchg
orl
sub
fmulp
fsub
loope
hlt
fdivrl
lret
in
mov
xchg
in
xor
sub
repz
ljmp
rol
test
out
xor
jecxz
test
enter
sti
cli
call
lret
jmp
cmp
repz
mov
loopne
xchg
call
icebp
sarl
shl
clc
shl
cld
fisttpl
in
int
cli
ss
ljmp
cmp
cmp
aas
cmp
mov
stc
mov
nop
decb
xor
iret
sarl
lret
repnz
cmp
in
orl
shr
xor
xor
fucomip
repnz
fcmovu
fdivrp
in
lock
in
mov
mov
mov
hlt
fcmovne
ljmp
aam
xchg
aas
call
fmul
std
cld
mov
cmc
jecxz
rol
cmp
cmp
rol
sar
mov
orb
ljmp
cmc
repz
cld
hlt
xlat
idivl
fidivrs
xchg
in
loope
out
xchg
or
fimull
fpatan
aam
vmovntdq
cli
cmp
cmp
shl
mov
fldl
adcb
cli
rcl
fxch
ror
dec
roll
jmp
test
in
loope
enter
mov
iret
shr
lret
cmp
fcmovnu
lret
mul
jmp
loope
in
or
test
int
mov
enter
cmp
shl
rcr
sti
rol
hlt
cli
sbb
into
lock
xor
fcmovnbe
sti
cli
in
cmp
iret
adc
jecxz
lret
xchg
nop
call
shl
lock
out
hlt
repnz
jmp
clc
out
cli
mov
loop
fisttps
test
icebp
out
cmp
leave
cmp
rolb
mov
jecxz
lret
mov
mov
out
out
xor
out
lret
int
cli
ds
sti
adc
test
out
ret
vpxor
lock
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
or
inc
in
jg
scas
add
stc
lret
clc
cmp
cmp
xchg
fucom
mov
out
repz
ss
fsubrp
cmp
iret
icebp
sarl
fdiv
in
shl
jmp
fyl2xp1
mov
call
xor
idivb
aad
fdivrl
int3
repnz
in
out
xchg
in
out
ror
xlat
jmp
clc
fistpll
clc
into
ljmp
lds
test
xchg
test
lock
cmp
fdivrs
loopne
hlt
addb
int3
jecxz
mov
in
iret
das
ljmp
cmp
int3
aaa
add
sti
and
jmp
mov
jecxz
aam
enter
rcl
jmp
leave
ror
imul
rcr
aam
in
in
fimull
shl
hlt
xchg
out
ret
cmc
lock
enter
repnz
fnstcw
std
rcr
sti
std
mov
out
lret
loope
int
out
hlt
xor
out
int
xor
cmp
leave
xor
fucom
cmp
enter
xchg
mov
lret
xlat
ret
les
std
sarl
jmp
aam
not
xor
les
orl
divb
lret
sti
clc
ffreep
clc
lret
out
in
int
loop
leave
in
in
lret
call
cld
sar
repnz
ret
test
out
jmp
repnz
test
loop
sub
cmp
shl
aam
loop
rorl
mov
lret
repnz
repnz
enter
out
cld
call
fsub
sarb
fildl
out
test
xchg
adcl
jmp
filds
test
call
xchg
out
lret
ror
xor
repnz
xlat
in
aad
std
jecxz
xlat
in
loop
sti
int
call
in
out
aaa
in
repnz
stc
std
lret
loope
cmpl
neg
xlat
and
in
hlt
clc
in
xabort
cmp
ljmp
fiadds
in
ffreep
lds
cmp
ss
xor
ss
loopne
xchg
aad
xlat
clc
lret
in
fcomi
in
jmp
shl
repnz
cmp
hlt
fdiv
aam
aad
jecxz
lock
out
jmp
rcr
call
sub
icebp
into
out
xor
fmul
hlt
faddl
adc
fdivrp
mov
int
mov
rcr
cs
aad
aad
loopne
xor
faddl
fcmovb
fldl
faddl
ror
repnz
aam
in
ljmp
lock
xchg
jecxz
fadds
std
into
sub
into
xor
sar
into
cld
ljmp
and
loop
cld
into
loope
out
lock
mov
cmc
xor
hlt
jmp
aad
cli
ss
sti
faddl
xchg
aam
aaa
int3
out
sti
in
leave
std
lret
out
int3
rcl
fdivrl
loope
mov
out
xchg
in
shl
shl
leave
out
in
xlat
incb
stc
aas
rcl
mov
lock
xchg
aad
out
aam
xor
enter
roll
fsubrp
in
fildl
repnz
out
sub
jecxz
leave
rcl
lret
xlat
lret
in
cmp
lret
jecxz
cld
ret
in
lret
aad
repz
shl
int
cmp
xor
fptan
ret
rol
lret
in
mov
jmp
loop
into
aaa
ljmp
ss
ret
rcr
stc
enter
out
in
call
rcl
out
repnz
cmp
loope
inc
ds
cli
leave
fimuls
into
rclb
xor
out
clc
cmp
fmul
ret
iret
lock
imul
cld
lret
xchg
cmp
loopne
decb
cmc
ljmp
repnz
roll
mov
ror
cmp
icebp
cmp
int
aaa
xor
cli
xlat
int3
jmp
in
test
fadd
fstpt
cld
enter
icebp
mul
in
call
loopne
in
jecxz
xchg
in
hlt
jmp
ljmp
fnsetpm(287
sti
fidivrs
sbb
fprem1
int
mov
aad
cmp
sti
jmp
cmp
xorl
icebp
std
mov
or
cld
daa
test
add
ror
fxch
shll
or
mov
cmp
jle
add
mov
call
shr
in
rol
xor
into
shr
cmp
addb
aad
loopne
out
mov
int3
int
aaa
into
out
loop
out
loop
adc
loope
stc
fmul
std
icebp
jmp
aad
loope
in
jmp
loope
iret
and
call
ljmp
xchg
div
hlt
stc
fcmove
lret
xlat
repnz
ret
test
vpor
shl
divl
out
in
les
cmp
lret
lret
iret
rcl
ret
shl
std
in
int
mov
xchg
xchg
call
lret
xlat
rol
sti
cli
repnz
icebp
sti
loope
div
rcr
xor
inc
sar
call
iret
icebp
std
lret
cmc
shll
int3
cmp
ret
xlat
cmp
in
xlat
shl
mov
in
lock
xchg
loop
cmp
jmp
rol
and
leave
sub
leave
int3
mov
in
nop
sbb
in
in
repnz
lret
clc
adc
lock
jmp
test
in
std
repnz
aad
clc
icebp
xor
call
cmp
cmp
icebp
in
std
mov
ljmp
loope
div
lret
ljmp
rcl
fcmovbe
cli
xlat
clc
hlt
call
jmp
mov
jmp
mov
loope
xchg
sub
shlb
in
clc
call
lret
repnz
in
xchg
jecxz
loopne
clc
xlat
test
lret
iret
leave
loope
int3
ret
sti
out
ror
aaa
lock
clc
loop
xchg
test
lret
lock
xor
xor
leave
loope
aas
icebp
cmp
loopne
repnz
lret
int
fisttps
xor
cmp
in
rolb
rcr
aam
fdivr
jmp
aas
sbb
sub
iret
xchg
ljmp
lret
cld
aas
rcl
std
cmp
jmp
lock
loope
icebp
icebp
shr
cmp
clc
test
fdivr
xchg
xchg
orb
loope
out
das
std
cmp
in
ret
call
mov
enter
out
hlt
ljmp
lret
cmp
cli
loopne,pt
iret
lds
test
test
rcll
repz
jmp
fdivrl
cmp
hlt
iret
cmpl
sbb
cld
xchg
out
loop
aad
clc
out
repnz
out
xlat
in
shll
loop
xchg
xchg
ljmp
lock
int3
sti
aad
hlt
repnz
imul
out
adc
cld
std
mov
lret
xchg
shl
enter
out
cmp
repz
cld
stc
loopne
sbb
mov
out
xchg
int3
loope
out
sarb
jecxz
xlat
in
ss
fsubrp
shl
cmc
roll
in
jmp
lret
in
iret
out
test
xor
in
out
add
orl
xor
cli
fcmovu
iret
enter
and
xchg
fnstcw
xchg
cli
loope
mov
fyl2x
test
xchg
aam
out
out
cmp
fcmovb
jmp
stc
neg
repz
ret
lea
clc
ljmp
repz
lret
xor
clc
into
cmc
sub
aad
fdivr
cld
xchg
clc
loope
iret
cmp
jmp
imul
xor
jmp
imul
loopne
fucomip
test
sti
repnz
or
and
cmc
xchg
iret
icebp
aaa
cmp
sti
fidivrs
in
adc
test
fld1
out
fdivr
mov
orb
xor
fldlg2
aam
enter
cmp
rcl
roll
into
xchg
out
loop
int
lret
jmp
dec
loope
xlat
rcr
clc
loope
cld
in
fcoml
addb
in
out
cmp
cmc
cmp
hlt
fcmovnbe
fcmovbe
leave
lds
or
xchg
std
test
rcr
ss
repz
xor
cmp
ds
aam
xlat
lret
sbb
fldl
lret
clc
in
int3
rcl
lret
loopne
add
test
jecxz
loop
sbb
ret
mov
iret
in
int
test
sar
fcomi
in
fdivrp
cmp
stc
add
popl
int3
xor
fxch
jmp
idivb
stc
out
fcmovbe
hlt
in
lret
mov
lock
xchg
std
nop
das
jmp
out
in
leave
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
xor
xor
sar
in
mov
mov
sub
loop
cmp
xlat
not
fcom
adc
filds
jecxz
addl
iret
leave
in
imul
into
ljmp
test
out
xchg
leave
fsub
xchg
out
mov
sar
loop
jmp
xlat
call
ds
lret
int3
shl
cmp
flds
loopne
fchs
mov
out
shl
xor
cmp
fdivrl
iret
leave
repz
loop
fcmovnbe
add
jmp
lock
call
out
call
cmp
cmp
xchg
idivl
leave
int
mov
hlt
cmp
shll
cmc
loopne
out
xor
fsubr
out
shr
idiv
or
lret
loopne
lret
int3
aad
stc
fmul
into
out
lock
repz
aam
ss
jecxz
addl
test
ljmp
jecxz
into
cli
fucomi
iret
shr
aad
cmp
in
out
aad
aam
jecxz
dec
xchg
xchg
ljmp
in
fmulp
fld
cmp
fmuls
std
test
jmp
xor
loope
icebp
cmp
fucom
jmp
roll
mov
cmp
out
cld
jecxz
incb
ret
cmp
neg
ret
repnz
loopne
mov
and
out
test
rcll
sub
aaa
icebp
iret
repz
fnstcw
shl
hlt
xlat
std
jecxz
loop
fcmovnu
enter
xchg
mov
loopne
in
fcmovne
fldpi
sarl
and
in
std
out
loop
test
adcb
ss
xor
lock
leave
into
out
stc
int
shl
sar
in
ljmp
in
out
into
icebp
repnz
cli
aas
fdivs
call
leave
stc
out
decl
out
stc
in
into
cli
lret
std
repnz
icebp
rol
les
in
xchg
test
fsub
out
shr
cli
iret
aam
fucomp
xlat
faddp
cmc
icebp
rcl
loop
fyl2xp1
into
mov
popl
mov
out
loope
xlat
cmp
fdivr
out
into
loop
enter
ror
loopne
icebp
cli
ljmp
cmp
iret
fcomi
aam
stc
int
orl
in
lret
into
sar
fmulp
loope
ret
aam
std
jmp
and
lea
cli
out
cmp
cmp
cmp
cmp
cmp
ds
ret
stc
out
into
xchg
nop
int
ljmp
xor
shl
loope
clc
int
fcmovnu
in
faddl
dec
fildl
ljmp
ljmp
stc
rcl
test
mul
dec
cld
shl
cmc
hlt
into
into
iret
jmp
fcmovbe
stc
rcr
xor
lock
std
sti
clc
ffreep
in
iret
repz
out
lock
ffreep
sti
cli
ds
jmp
ljmp
addl
ljmp
xor
rol
cld
jecxz
std
mov
flds
in
shr
out
repz
sarb
fld
out
clc
cld
fdivr
and
ror
out
cmc
sti
cld
in
fyl2x
cmc
sti
rcr
roll
fadds
fmul
int3
out
aad
ss
int
out
in
cmp
fsubrp
test
cld
call
test
sti
call
into
shl
addl
fdivrs
imul
lret
iret
add
shl
cmp
mov
into
lret
into
loop
fidivl
sar
xor
cmp
ret
loop
cmp
in
xchg
int3
xor
in
leave
cmc
xor
cmp
xor
loopne
sbb
test
clc
xchg
jecxz
int3
out
nop
lret
fisttpll
repnz
repz
clc
call
repnz
inc
addb
mov
xchg
leave
out
fildll
lret
cmp
xor
stc
cmp
hlt
cld
xor
test
roll
int3
jecxz
jmp
adc
or
cli
enter
ret
icebp
ds
jmp
cli
call
icebp
orb
fdivrl
sar
repz
cmp
int
lds
fstpt
in
in
jmp
mov
les
cmp
shll
std
cld
fisttpll
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
pushf
cli
rolb
lds
scas
add
in
std
cld
in
icebp
xchg
jmp
cmp
stc
in
ljmp
mov
out
cmp
test
xchg
in
xor
xlat
shl
clc
lret
filds
ret
test
in
in
cs
aaa
iret
ljmp
std
fdivr
movb
fsub
fcomp
out
lock
fadd
xor
xor
aaa
out
fneni(8087
xlat
cld
into
fstpt
in
aad
xchg
clc
test
aas
loopne
loop
in
cli
cmp
aad
in
test
hlt
fiadds
leave
test
cli
in
xchg
xchg
nop
faddp
ljmp
jmp
aam
iret
fcmovnb
loope
out
faddl
into
mov
out
int3
ss
stc
in
cmp
in
icebp
loopne
ret
xchg
mov
fisttpll
fucomip
hlt
xchg
sarl
in
xlat
cmp
std
ljmp
aam
fucom
in
incl
out
in
ljmp
call
adc
icebp
lock
or
sti
sti
ret
into
mov
jmp
call
not
out
int3
xor
loop
lret
cmp
jecxz
jmp
out
ror
xor
vpsubb
cmp
loopne
clc
jmp
out
ljmp
xor
clc
in
repnz
jmp
cmp
fstp
mov
jecxz
sti
mov
adcl
ljmp
iret
repz
cmc
out
xchg
testl
leave
into
xor
lock
sar
fcmovnu
jmp
jmp
orb
out
xor
int
sarl
sti
cli
clc
cli
inc
out
aad
les
idiv
icebp
mov
int3
cmc
xor
icebp
cmp
cli
int
cmp
hlt
testb
xlat
out
in
call
jmp
out
cs
leave
xor
aad
fnstcw
stc
idiv
hlt
loop
ds
idiv
jmp
test
loopne
into
jecxz
fcom
cmp
cmp
std
into
test
stc
leave
out
fdivp
call
lret
loopne
ret
call
ljmp
fucomip
rcr
hlt
fsubr
loop
fmul
mov
incb
ss
bnd
stc
repnz
fsqrt
not
ljmp
stc
nop
int3
icebp
jecxz
loope
loopne
jmp
cmp
cmp
std
loope
neg
xlat
sarb
sti
jmp
frstpm(287
out
call
stc
fcmovne
ror
std
sti
ljmp
mov
xchg
fucomip
out
addb
iret
mul
in
out
ljmp
jecxz
repnz
out
iret
mov
xor
int
cli
cmp
aaa
cmp
cld
out
vpmulhw
cmp
repnz
shr
int
iret
xlat
rcl
rcl
cmp
loope
movl
out
test
lock
imul
hlt
clc
jecxz
mov
fucomp
add
loop
lret
in
orl
shl
fcmovnu
cmp
xor
cmp
test
int
iret
cmc
in
aad
out
sti
cmp
xor
into
cmp
loopne
fisttps
sar
out
in
cs
shr
cld
xor
jmp
ret
incl
imul
test
jmp
out
jmp
xlat
iret
rcr
stc
ljmp
cld
xchg
in
ret
fisttpl
jmp
xlat
repz
lret
icebp
cmp
clc
fidivrs
fcmovne
test
rolb
shlb
repz
xor
not
adc
cmp
enter
int
loop
xchg
rcl
out
in
icebp
ffree
call
sarl
shl
shl
fcmovb
out
and
out
int3
mov
in
aad
in
lds
ror
into
out
loop
cmp
in
fcomip
fcomip
lret
orl
sar
fsubr
icebp
cmp
xor
shl
ret
ljmp
and
std
lret
loop
xor
div
repz
test
aas
iret
xrelease
in
mov
div
in
ljmp
fyl2x
cmp
jmp
int3
jmp
loop
xor
out
aad
fucomi
xor
aad
xchg
jb
add
icebp
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
mov
push
sub
jg
scas
add
fcmovb
ds
jmp
mov
jmp
in
mov
xchg
rolb
repnz
enter
fcmovnbe
in
in
xlat
sti
addl
jmp
test
repz
out
int
fstp
sar
sbb
rorl
xchg
leave
xor
fsub
ror
cmp
roll
xlat
ljmp
int
out
shl
jecxz
xor
call
lret
cmp
repnz
shl
sub
clc
mov
mov
xlat
div
icebp
fsubr
jmp
sub
cmp
adc
cld
shl
repz
cld
lock
idiv
into
sti
sti
mov
mov
fucomp
nop
bnd
cld
fucomi
repnz
aam
add
cmp
repnz
icebp
repz
aaa
sarb
int3
shl
in
repnz
mov
in
xchg
rolb
into
fcmovnbe
clc
out
xlat
hlt
sarb
push
std
cld
fadds
test
test
filds
int
aam
cmc
sar
aaa
testb
fsub
mov
xchg
mul
int3
lret
cmc
enter
sti
cmc
in
ret
test
repz
std
lock
xor
shr
xor
stc
fiaddl
in
int3
ret
sti
xrelease
sti
repnz
aam
fdivrs
frndint
repz
leave
lret
call
fmulp
shl
xchg
call
cmp
cli
ss
rcl
repz
xlat
clc
std
mov
out
cld
lock
in
shlb
fdivr
fcom
rcl
adc
rcr
mov
clc
in
xchg
xchg
out
cmp
shl
out
fadd
icebp
in
jmp
ret
test
lret
into
into
loop
loopne
sub
clc
shr
cli
call
jmp
loope
aam
loopne
in
cli
call
xchg
or
shr
rol
fmulp
xlat
xor
ffree
fcomp
aam
ret
cmp
jmp
movl
out
hlt
rcl
fcmovnbe
loopne
hlt
test
aad
call
xchg
lock
lret
clc
shr
idivl
cmp
out
cmp
stc
and
int3
out
jmp
mov
rcl
xor
xor
int3
aad
loope
std
rcl
xchg
out
mov
lret
movl
xor
int
cmp
idiv
fdivp
roll
stc
fdivr
ljmp
into
out
out
aam
cmp
shl
cmp
test
hlt
rol
flds
into
loop
xchg
test
in
fdiv
icebp
fcmovu
cmp
jmp
sub
out
cmc
loope
mov
lret
addl
in
cs
jmp
fcmovu
lock
repz
icebp
xchg
cmc
std
dec
out
lret
xchg
in
xor
cmp
imul
loope
cmp
out
repnz
mov
mov
sarl
cmp
stc
out
cmp
cmp
repnz
loop
testb
fldl
aam
jecxz
aam
sar
shl
int3
repnz
xchg
sbb
fstp
out
icebp
iret
mov
repnz
xor
lock
repz
int
mov
dec
into
stc
fxch
lock
loop
sarb
mov
cmc
mov
enter
aam
xchg
xor
ljmp
int3
adc
repz
shl
orb
loopne
orb
std
cld
lret
adc
std
loope
jmp
fsubr
in
mov
lret
divb
into
fcmovne
sarl
out
fxtract
ffreep
loope
fildl
leave
mov
rorb
int
enter
imul
cmp
out
lock
sbb
ljmp
rolb
cli
clc
enter
loop
fsubr
loopne
fiaddl
loop
in
popl
aaa
das
int
lret
out
sarb
test
out
mov
fsubr
jecxz
in
cli
call
call
out
leave
cmp
jecxz
sarl
addl
loope
jne
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
jo
imul
jle
add
fmull
loopne
enter
xor
roll
test
clc
rcll
iret
fdivs
in
iret
shl
hlt
not
aam
stc
iret
xchg
std
aam
ret
testl
ret
ss
cli
xor
cli
sti
into
out
test
in
sti
decl
sub
repz
jmp
iret
in
test
fdivr
out
cmp
cmc
clc
xlat
fcmovnbe
out
cld
in
cmp
in
xlat
shll
int
xor
aas
in
fcom
not
cld
test
addb
test
jmp
out
sub
xor
das
cmp
jmp
addl
ljmp
mov
xor
in
xor
sar
in
orl
stc
iret
xchg
mov
sub
sub
jecxz
xor
aad
cmp
fdiv
ret
roll
leave
loop
lea
fcomp
cmp
int3
cmp
aad
in
ret
loope
hlt
shl
mov
cld
std
out
jecxz
out
mov
enter
int
hlt
repnz
rcl
repnz
aad
fmulp
stc
in
xchg
fmul
xchg
jmp
aas
in
lret
lock
hlt
lret
int
out
ret
call
fimuls
sub
int
stc
enter
call
xor
sub
repz
add
iret
cld
orb
cmp
idiv
in
in
sti
sti
ret
call
sti
fldl
xchg
clc
ror
cmp
int
ljmp
stc
loopne
loope
cmc
fcmovne
ror
enter
nop
leave
in
shrb
cmc
icebp
fadd
int
loopne
shl
mov
mov
out
xchg
loopne
repz
in
out
out
xor
inc
add
sarl
cld
cli
jmp
loop
in
out
iret
aam
into
out
stc
sti
ret
int
iret
xlat
fadd
xchg
movl
call
call
std
out
shl
fsin
loopne
fucom
repz
mov
loopne
shll
hlt
out
or
shr
fcmovnb
fiaddl
ret
jecxz
lret
sub
xor
out
xor
fsin
clc
ret
cmp
repz
int3
in
jmp
loopne
std
jecxz
out
out
lock
cld
lock
add
ljmp
nop
call
xor
enter
int3
lret
in
repz
dec
cmp
shl
lock
mov
hlt
cs
out
cmp
out
cmp
dec
icebp
sti
testb
out
repz
out
bnd
loope
leave
sar
lret
out
addb
stc
mov
test
mov
test
shl
and
jecxz
in
fmul
cmp
out
repnz
stc
out
aas
loopne
mov
iret
xchg
in
fsubp
xor
xor
cmp
xor
int
into
in
fadd
xlat
icebp
fmuls
call
out
xchg
loopne
ret
xor
out
lret
clc
cmc
out
int3
out
fiaddl
loop
hlt
xchg
lret
adcl
div
shll
ss
aaa
cld
repnz
repnz
loopne
aam
enter
ret
lea
in
mov
lret
cmp
int3
cli
aas
int
test
clc
loopne
rol
enter
std
clc
loopne
cmp
mov
test
shr
das
clc
aam
out
cmp
fcomp
fadd
xchg
out
test
call
ror
out
rcr
clc
icebp
hlt
sti
cmp
jmp
out
fsubr
jecxz
sub
ljmp
std
xor
rcr
fsubr
rolb
test
hlt
fsub
jmp
jmp
ret
shl
xlat
xchg
clc
in
into
out
iret
repz
lret
shl
cmp
lret
rcl
sarl
mov
jmp
jmp
mov
xchg
out
shl
icebp
or
shl
cli
shll
cmp
into
hlt
imul
sti
filds
orl
into
lock
shlb
xlat
xlat
pushl
aam
rcr
ret
out
ret
in
in
mov
fdivrp
test
xor
lret
shl
fidivrs
jecxz
fnstcw
xchg
std
shl
cli
jmp
repz
repnz
in
repnz
jmp
shl
fadd
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
jecxz
in
mov
jecxz
lret
in
or
enter
stc
jmp
enter
ret
cli
xchg
ret
fisttps
faddl
repnz
ds
and
mov
jmp
sub
fldl
cmp
enter
in
xlat
loop
test
mov
fiaddl
xchg
xchg
xlat
shl
cmp
jmp
ds
jecxz
aam
ds
addb
in
hlt
in
xchg
xlat
out
sti
enter
sti
in
cld
xor
rcr
clc
aas
loopne
std
jmp
out
mov
out
jmp
xor
clc
shl
clc
fdivrp
sar
cmc
ljmp
fcmovu
leave
fsin
vcvtdq2pd
xchg
ljmp
out
lock
repz
fstp
mov
lret
out
fmul
xor
or
bnd
vpsubsb
ror
aad
loopne
sbb
fcmove
movl
int
mul
jecxz
in
iret
fucomi
shl
cmp
lret
shl
xchg
mov
stc
mov
xor
xor
aad
int3
cmp
fsub
in
rolb
out
addl
lret
lret
xor
sti
ljmp
cld
cld
into
aam
lret
lret
sub
icebp
in
int
ror
loopne
loope
stc
jmp
fsub
out
add
shlb
out
out
jmp
imul
lock
movb
fdivr
frstpm(287
out
fcomip
hlt
icebp
xlat
xor
repnz
repz
cmp
xor
fprem
cli
cli
sti
int3
out
out
fucomp
aas
jmp
jmp
cmp
aam
into
lock
aas
incb
cli
lret
in
mul
shl
enter
aad
xlat
lret
icebp
cli
cld
in
jmp
in
leave
jmp
int
xchg
xchg
lret
jmp
fsin
div
fiaddl
in
jmp
out
in
int3
fcmovnbe
lock
clc
aas
aas
cmp
lock
cmp
ror
add
cli
imul
mov
call
loope
aad
cmp
jmp
xlat
std
ret
rcl
stc
cmp
fmuls
iret
fucom
call
out
cld
sti
lret
ljmp
sar
loop
repz
leave
rclb
aad
rol
out
cmc
cmp
jmp
test
out
cmc
fcom
repz
fisttpll
cld
loopne
into
aaa
iret
in
ss
xor
stc
test
mul
in
xchg
ljmp
das
cmc
xor
clc
cld
repz
sti
sarb
xor
cmc
std
in
out
rolb
idiv
in
out
out
xor
repz
xor
mov
xlat
out
into
rcr
in
in
repnz
lock
int3
sti
not
lret
loope
cmp
in
loopne
ffreep
out
decl
lret
loop
test
iret
ss
call
rcr
add
stc
movb
flds
test
cmc
loopne
loop
hlt
loope
int3
lock
div
and
testl
fmulp
in
loop
fcomp
lret
ljmp
xlat
iret
clc
add
sti
out
mov
in
xlat
lock
into
out
lret
enter
ljmp
test
jecxz
loop
lock
call
aad
aam
cmp
into
iret
out
in
loopne
cld
shl
jmp
enter
iret
ror
fdivp
int3
in
stc
aaa
cs
in
fsubr
cmp
ret
int3
and
shl
xchg
xor
cmp
repnz
aam
stc
in
loop
ss
stc
xchg
lret
out
loop
nop
shl
add
fnstcw
sar
fnstsw
clc
sar
test
rol
xor
test
mov
xor
shl
xor
cmp
iret
dec
ds
sti
jecxz
addb
fucom
loopne
loope
int
cmp
xor
icebp
xlat
div
fdivrl
div
ffree
stc
loope
in
mov
xchg
iret
mov
leave
stc
enter
ss
fdivr
sar
fdivrs
xlat
xlat
enter
ljmp
lock
in
xor
int
in
filds
sti
repnz
out
lret
lds
bnd
aas
sarl
fcmovnbe
fcmovb
loope
add
cmc
andb
scas
add
into
fimuls
sti
cld
lock
jmp
icebp
rcr
idiv
mul
mov
loope
xchg
hlt
in
xchg
jmp
stc
repnz
cld
ss
out
sub
xchg
xchg
ret
in
cli
fadds
int
aam
repz
aam
loop
aam
xchg
neg
cmp
cli
enter
dec
out
out
out
shl
out
repz
lock
push
cmpl
in
lds
fcmove
in
fmulp
fucomp
repnz
xlat
das
out
hlt
repnz
hlt
cmp
cmp
idivb
cmc
incb
fucomp
out
xor
into
fcmovne
cmp
in
stc
std
fnstsw
add
mov
std
test
xchg
in
xchg
divb
fcmove
fnstenv
clc
out
loope
hlt
xchg
in
mov
jecxz
adcb
int
out
aaa
ds
lret
cmp
xchg
and
mov
int
xchg
cmp
cli
das
cmp
rcl
repnz
clc
fcmovnb
ret
idiv
fdiv
mov
and
into
enter
out
sar
cld
leave
iret
lret
fld
fcomi
rcl
idiv
loopne
fimuls
into
loope
aaa
sarb
cli
ss
lock
neg
aam
aam
jecxz
repnz
jmp
lock
out
cld
cmp
cmp
repnz
loopne
rol
jmp
test
lea
loop
jmp
cli
xor
iret
xor
aaa
fdivrp
decl
sub
out
std
in
ss
lret
fsub
in
out
xor
fdivp
fdiv
cld
jecxz
in
cld
mov
out
stc
sti
xchg
rclb
out
int3
fsubrp
fcmovnbe
test
in
loope
fsubr
idiv
out
fsubp
vpaddq
lret
vpsubsb
fcmove
int
int3
fsubp
ret
ret
xor
call
jecxz
mov
out
clc
int3
cli
hlt
aaa
test
loop
and
fcomp
int
out
jecxz
test
out
out
in
lock
into
leave
cmp
aas
aas
sti
out
xchg
hlt
stc
out
test
test
fucomip
in
xlat
enter
cmp
lock
rolb
repnz
aad
ret
enter
clc
call
shr
cmc
mov
int
loop
int3
in
jecxz
sub
out
repz
aaa
rcl
cmp
sar
test
fmulp
call
test
xchg
lret
icebp
int
cmp
lock
cmpl
sti
fdivr
out
fstl
incl
sar
out
cli
loopne
cmc
sbb
cmp
out
cmp
cmc
jmp
mov
lret
mov
ss
int
out
into
icebp
iret
iret
sub
sti
mov
mov
ss
lret
cmp
lret
lock
out
fadds
in
orb
out
iret
aaa
lret
ret
cli
out
jmp
xlat
in
fdivr
mov
int
imul
iret
incl
fld
incl
mov
mov
mov
out
out
aam
fucom
ds
mov
ret
int3
ffreep
enter
addl
xor
out
ds
rol
fiadds
out
mov
cmp
hlt
rcr
int3
loopne
lock
ss
loopne
test
lret
flds
sti
loopne
mov
loopne
aad
leave
out
fmul
out
loope
int3
in
rcr
cli
flds
out
fsub
icebp
icebp
xchg
xchg
ljmp
xor
xlat
fadd
neg
test
mul
test
std
sbb
test
das
jmp
dec
lock
ds
loop
cmp
repz
and
stc
ror
mov
div
jmp
iret
not
aad
iret
ret
fldl
in
aas
jmp
loopne
in
xchg
in
in
lret
ljmp
adc
stc
leave
add
out
fisttpll
div
out
icebp
aam
ror
neg
loopne
aas
stc
and
repz
leave
call
vpmulhw
in
icebp
int
into
xor
into
sti
repnz
aam
xlat
lret
ret
neg
jmp
mov
in
xchg
xchg
int
xor
sti
cmc
cmp
into
aas
rcr
xlat
add
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
xchg
shl
rcl
testl
fmul
cli
xor
cmp
cld
test
lds
mov
into
out
xor
out
in
iret
shl
in
test
neg
roll
lret
in
mov
int3
les
loop
cmp
xlat
icebp
ror
out
not
jecxz
fildl
xlat
jmp
rcll
out
in
lret
cmc
fdivrp
idivl
shl
orl
xchg
xchg
ljmp
shr
cmc
into
aas
int
cli
aad
sar
mov
stc
iret
out
repnz
shl
shl
shl
lret
xor
div
in
std
std
fmull
fld1
out
ljmp
cmp
std
int3
ss
jmp
rcr
out
lret
adc
test
enter
fcomip
lock
xlat
aaa
aaa
sarl
jecxz
cli
testb
int3
in
incb
cmc
ret
fdivrs
cmc
xor
ret
test
ret
fisttpl
xchg
cs
aad
lret
aad
fmul
sti
jmp
test
ret
icebp
sbb
mov
into
iret
out
incb
int3
enter
sbb
fidivs
hlt
cmp
cmp
into
cli
loope
in
in
hlt
cmp
enter
out
lock
xchg
lds
clc
cmp
ljmp
int3
stc
jmp
call
test
repz
addb
fucomp
mov
in
out
fxch
xor
repnz
aaa
repz
roll
xor
lds
xchg
ljmp
in
clc
cmp
xlat
in
neg
in
aam
xchg
movb
adcl
out
into
ljmp
clc
ret
orl
jecxz
call
xor
sar
fdiv
aam
sub
cld
loop
xlat
test
and
mov
shl
mov
leave
cmc
xor
cmp
int3
fdivrp
out
into
fdivrp
repz
lret
push
mov
rcr
sub
frstpm(287
cmp
neg
loope
sti
fcomp
shl
imul
lret
jmp
call
cmp
out
fucomip
ljmp
hlt
fcmovnbe
mov
cmp
hlt
sub
out
in
shl
lock
roll
test
lret
call
xlat
loop
les
lret
sub
call
cld
incl
lret
into
nop
fcmovu
ror
loop
out
leave
leave
jmp
xor
jecxz
sti
ret
fsub
ret
fchs
ds
fisttpl
repnz
in
lret
iret
out
fld
lock
roll
aad
fdivrp
sub
lret
ljmp
cmp
fcom
div
aad
not
cmc
testb
leave
ljmp
xchg
cmp
in
sti
lret
shl
aam
ret
fsub
xchg
sti
mul
lret
jmp
mov
jmp
shl
ret
aad
ss
sti
rol
test
cli
repnz
aam
out
fimuls
int3
fsub
out
repnz
cmp
shl
cmp
rcr
aas
xrelease
loope
ss
stc
into
jmp
sar
mul
jecxz
shl
ret
clc
ret
mov
out
shl
jmp
neg
icebp
test
ret
xor
test
out
iret
jmp
iret
shl
xchg
idivl
divb
rcr
ds
aaa
orb
jecxz
enter
repz
fcmovbe
fsincos
cmp
fst
fldl2e
in
out
aas
repz
clc
fsub
mov
lret
incb
xchg
adcb
cli
clc
int3
aaa
in
out
lret
rcl
rcl
orl
test
lock
xor
in
repz
xor
aas
leave
jmp
xchg
ds
les
rcll
leave
rcl
repnz
fdiv
xchg
rcr
and
lret
mov
repz
fucompp
aam
int3
int
jmp
test
fst
aam
cld
jecxz
clc
in
iret
xchg
test
fidivrs
loope
repnz
cmp
cmpl
bnd
rcr
fsub
aad
enter
call
jne
jmp
rcl
aad
aad
shll
xchg
icebp
mov
scas
add
out
aaa
out
fcmovb
in
in
std
into
rcl
std
int3
rcl
loope
and
loope
lds
cmc
cmp
ljmp
xlat
int
call
loope
lret
std
cli
xchg
loopne
shl
cmc
loop
aaa
iret
rcl
in
std
cmp
loop
fst
fcomip
fxch
std
xlat
sti
loop
mov
xor
out
aad
hlt
cmp
ror
aam
std
lds
dec
jmp
nop
lret
shll
aaa
rol
hlt
jmp
sar
aaa
cmp
mov
int3
loope
loop
out
out
xchg
in
shll
fcmovu
das
sarb
cmp
cmp
in
jecxz
aad
cmc
fnstsw
out
in
cmp
movb
clc
lock
addl
mov
out
dec
mov
and
int
lret
out
clc
cmp
icebp
fstp
xor
out
roll
iret
repnz
call
not
jecxz
ljmp
loop
fcomi
fimuls
std
loopne
lea
hlt
cli
shl
cmp
sti
xor
ds
xchg
add
mov
repnz
or
cli
in
rol
push
cmp
xor
cld
cld
test
lret
dec
mov
leave
fisttpl
hlt
int3
hlt
lret
jmp
shr
leave
fcmovbe
icebp
fdivrs
hlt
fisttpl
ljmp
out
xor
into
jmp
stc
out
stc
shl
neg
fcmovnb
loop
and
into
enter
xlat
in
lret
cmp
aad
shl
aas
aam
sti
fsub
test
xchg
divb
cmc
aaa
icebp
ss
repnz
out
aad
xor
jmp
test
ljmp
leave
lock
cmp
rcl
fnstcw
loop
fcmovu
les
xchg
xchg
aaa
vpmullw
aaa
in
fdivrp
lret
in
cmp
ret
aam
fabs
into
jecxz
cli
out
xchg
xchg
in
aaa
ret
xor
fldln2
roll
loope
addb
mov
in
out
xor
aaa
enter
lock
cmp
test
cmc
std
test
sti
loopne
jmp
in
ror
adc
ss
shll
lock
repnz
rcl
fadd
call
out
repnz
xchg
fldl
in
cmp
cmp
in
enter
xchg
iret
sub
in
int
lret
lret
into
stc
shlb
shl
rcr
mov
or
in
int3
xchg
jmp
ret
clc
ss
lret
movl
jecxz
ret
lret
loop
test
xor
cld
call
cmp
ret
jecxz
jmp
cld
out
loop
lret
xchg
clc
jmp
cmp
stc
fcmovu
fcompp
fstp
fsincos
enter
test
ret
xlat
lret
ljmp
aam
mov
clc
jmp
xchg
mov
int3
xlat
out
cmp
cmp
in
aad
enter
fistl
aaa
shll
out
in
in
out
in
jecxz
cmpb
xlat
ds
stc
stc
call
jecxz
jmp
xchg
out
loop
shll
in
xor
in
jmp
out
out
aam
clc
mov
loop
repnz
in
shrb
cli
cmp
test
sbb
fnstsw
loopne
out
lock
mov
jmp
shl
repz
repz
rorl
call
leave
mov
fsubr
xlat
xlat
cli
ljmp
lock
sti
test
loop
in
fdivr
out
ror
jecxz
mov
xor
enter
jmp
jecxz
call
xlat
test
mov
fmull
in
jecxz
fnstenv
xor
xlat
hlt
fidivrs
out
faddp
jmp
loope
out
clc
mov
cld
xchg
in
sub
cmp
int3
iret
sti
lock
fdivrp
fcmovnbe
stc
fimuls
mov
loopne
in
in
icebp
xchg
aad
out
xor
ljmp
cld
icebp
fsub
repz
mov
out
test
lea
int
out
sti
rcl
fidivrl
sti
rol
icebp
add
ds
cmp
cld
mov
xchg
sub
leave
jmp
mul
aas
cmp
fcom
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
inc
xchg
or
jg
scas
add
xlat
repz
sti
in
mov
clc
std
cld
ljmp
into
enter
ds
into
shr
xor
iret
xlat
out
fcmovnbe
fsubp
loope
mov
into
xchg
ljmp
out
sar
lret
shr
incl
int
clc
stc
fimull
xor
aaa
cmp
cmc
jmp
cmpl
in
xbegin
std
xlat
orb
sar
sti
sub
lret
idiv
int3
aam
repnz
test
fcmovu
mov
fsubr
into
shl
in
call
fld1
cmp
cmp
loope
loopne
out
mov
fcom
lret
loopne
in
cld
loopne
enter
lret
in
cmp
loopne
shl
xchg
rorb
aas
out
in
ror
fscale
hlt
cmp
aad
fsubr
in
jmp
out
jecxz
les
ret
fidivl
leave
lock
loopne
loop
sar
fdivr
out
in
decl
rcl
shr
enter
testb
std
ret
cmc
in
call
repnz
repz
repz
ror
rcl
fdivrs
sub
test
in
int
test
rcl
xor
stc
stc
in
cmp
div
cmp
rcr
jecxz
fiadds
out
lret
jmp
cmc
int3
cmp
in
xor
jmp
loope
fdiv
ret
test
mov
bnd
jmp
shr
clc
repnz
fucomi
cld
xor
into
cmp
not
aas
cli
les
test
fcomip
xchg
xchg
out
int3
sar
shlb
xor
and
fdiv
lret
ljmp
bnd
ror
fmul
fnstsw
cmp
loopne
in
out
lret
fcmovnu
jmp
mov
call
fcmove
div
leave
cmp
ds
fucomip
call
xlat
mov
adc
icebp
fucomi
cli
out
fucomi
std
iret
repz
neg
test
in
cli
cld
fimull
into
shl
ret
in
lret
ror
push
rcl
rolb
xlat
fsub
decb
enter
fdivl
icebp
lret
cmp
aam
xlat
loopne
fdivr
xlat
loop
xchg
lea
repz
stc
shl
jmp
jecxz
sti
out
mov
jecxz
test
fst
repnz
cmp
icebp
fcmovbe
in
in
std
lret
fiaddl
fldl2t
cmc
mov
in
enter
in
repnz
xor
ret
repz
in
cmp
xlat
rcr
ss
cmc
lock
sar
ljmp
shl
fstp
rcl
ret
push
fstp
test
test
in
nop
xchg
mov
jecxz
ss
fst
jmp
aas
rcr
fyl2xp1
not
mov
jecxz
jecxz
ror
ljmp
test
cmp
loopne
rolb
fcom
jmp
int
out
in
loope
imul
xor
int3
fxtract
roll
aam
cmp
cmc
leave
sub
fsub
xchg
in
cmp
ss
and
loop
fmul
call
iret
mul
mul
repnz
xor
stc
out
cld
int3
loop
std
idiv
fadd
call
fcmovnbe
int
out
mov
aad
cld
out
out
aaa
lret
adc
cli
fcmovnb
ret
xchg
out
iret
jecxz
std
loope
hlt
int
xor
icebp
xor
in
cmp
std
in
sti
in
clc
testl
in
test
xor
leave
repz
ret
loopne
lea
xchg
lret
ror
clc
ss
repnz
jecxz
xchg
mov
lret
jmp
xchg
xchg
lock
cmc
cmp
cmp
fucompp
ss
not
into
std
xor
idiv
mov
jmp
leave
cmp
fidivs
stc
hlt
cmp
iret
cld
sar
fcomi
sti
loop
xchg
incl
xor
ss
fxch
aad
cmp
lret
fcmovb
fcomi
cld
lds
cld
ljmp
cli
test
sti
aaa
shl
aad
and
loop
fimull
repnz
loopne
aam
cmp
xlat
fdivl
cmp
into
hlt
int3
int
in
repz
aam
test
jecxz
out
sub
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
arpl
pop
jg
jg
or
jle
ljmp
out
fcom
ret
in
mul
stc
fst
out
test
int3
rcr
jecxz
xchg
jecxz
xor
sti
div
imul
sti
fldl
div
out
fisttpl
jmp
ss
repnz
stc
iret
stc
into
cmp
aas
aam
fadds
stc
mov
ljmp
ret
enter
shr
iret
into
in
and
rcr
sbb
mov
fmul
in
xchg
cli
in
xchg
jmp
std
call
iret
xlat
aad
mov
ftst
jecxz
mov
ljmp
lret
call
incl
repnz
fisttpll
loop
in
out
loop
lret
xor
ss
loop
out
std
cli
fsubrp
loop
fsubr
cli
fisttpl
fnstcw
jecxz
fcom
sarb
fiaddl
sar
cli
call
rcl
mul
repz
aam
ljmp
fucomp
or
in
sti
out
in
jmp
jmp
out
fcmovne
aaa
cmp
repnz
out
cli
ret
mov
enter
test
out
in
hlt
xchg
repnz
in
clc
repnz
ds
int
test
jmp
test
out
movb
test
aas
clc
hlt
cmp
aam
sti
cmp
sti
adc
xchg
imul
xchg
xor
jecxz
lret
xchg
mov
aad
bnd
clc
leave
rcl
repz
cli
shr
fidivrs
in
mov
test
cmp
adc
icebp
test
into
enter
in
sti
lret
in
int3
int3
jmp
loopne
out
jmp
mov
lock
shrb
ror
fdivrl
out
enter
not
repnz
out
xlat
in
sar
int3
bnd
sub
aas
stc
ror
lock
fadd
cld
lret
out
xlat
icebp
incb
xor
fdivr
iret
jmp
cmp
loopne
jecxz
sti
test
aas
loopne
out
std
test
into
into
call
cmp
stc
sti
shl
fldl
in
int3
int3
sti
in
adcb
rcl
in
xor
or
enter
xchg
int3
mov
orl
aaa
jmp
fnstenv
shll
int3
test
xlat
test
fadd
fucomp
fcmove
mov
fmulp
in
out
fsub
jmp
fdiv
in
jecxz
div
sbb
enter
nop
int3
jmp
in
lock
std
jmp
hlt
cmp
fld
stc
sbb
mov
jmp
lret
xlat
in
shll
in
shr
fucomp
idivl
cmp
lds
xchg
aam
xlat
mov
xbegin
lock
divl
cmc
aaa
call
out
and
fdiv
repnz
fildl
mov
jecxz
decb
sar
in
pushl
fdivr
xchg
ret
test
in
in
sub
xchg
fdivrp
icebp
shrb
xor
imul
ljmp
fistpll
idiv
fldl
fsub
ljmp
jmp
out
fmul
sbb
sarl
fucom
jecxz
cli
fldl
aas
lret
jmp
repnz
xlat
leave
repz
ret
std
jmp
jecxz
out
lret
lret
aam
rcr
into
jmp
add
xlat
cmc
fdivr
ljmp
loope
ljmp
leave
cmp
fmulp
ljmp
clc
xor
or
lret
nop
mov
clc
aaa
divl
icebp
iret
in
cli
shl
icebp
loopne
in
fists
std
in
jmp
sti
divl
int
loop
faddp
sbb
xor
test
mov
idiv
lret
fucomip
into
repz
rcl
aaa
out
sti
clc
hlt
sarl
dec
cld
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
xchg
mov
cs
jg
or
jle
jecxz
sub
leave
lds
int3
lea
divl
ss
cmp
cmp
hlt
cli
fld1
loopne
out
int3
std
fcomp
mov
fdiv
sub
in
xlat
stc
lret
ljmp
fidivrl
addb
cli
icebp
lret
out
imul
das
cmp
out
das
lret
jmp
cli
sar
test
ret
test
ffree
loop
lret
out
xchg
iret
xchg
repz
into
in
jmp
in
and
icebp
orl
xchg
jmp
int
divb
int
ret
fldln2
in
cmp
int
cmp
xchg
mul
fucomip
orl
int3
das
aaa
lret
mov
rcr
fchs
stc
stc
cld
test
cmc
jmp
jmp
fstp
mov
dec
shl
neg
enter
icebp
test
ds
testb
into
out
xchg
cmc
das
rol
sti
lock
cmp
rol
fdivrp
fsub
loop
nop
in
lea
cs
aaa
repnz
cmp
shl
cli
neg
leave
jmp
out
icebp
fucom
mov
into
xor
stc
sar
cmc
out
aaa
dec
test
into
sti
repnz
cmp
filds
jmp
mov
xor
aam
fmul
clc
loopne
std
in
inc
fadds
sub
fucomi
roll
cmc
icebp
fdivs
aaa
cmc
fcmovu
stc
aam
roll
ret
fmuls
lock
xor
int3
hlt
fmul
hlt
shr
fcmovnu
repnz
aad
loopne
fidivrl
std
lds
repnz
int3
fldlg2
sti
xlat
test
out
test
ljmp
loop
jecxz
std
in
sub
xor
cmc
fnstsw
ss
lret
lock
xabort
ret
ret
mov
int
in
into
icebp
cs
lret
fmul
int
xor
ljmp
and
ret
into
int
and
loop
ss
cmp
fdivr
jmp
into
test
neg
aad
ljmp
xchg
call
in
shr
in
cmp
rol
aaa
aas
stc
ret
test
fdivr
clc
xor
shrb
out
xor
cmp
iret
out
into
xor
cmp
fildl
mov
xchg
cmc
enter
int
imul
lock
cmp
int
fsincos
out
fucomip
mov
repz
fucomip
xor
not
aaa
shl
fucomp
sarb
test
aad
adc
call
sbb
nop
testb
xor
in
ret
in
test
lret
mov
icebp
icebp
leave
cmp
ljmp
int
ret
sbb
test
lret
xchg
xor
loope
enter
cld
cmc
int3
aad
int3
aad
icebp
cmp
sbb
in
icebp
shl
jmp
shl
cmp
sub
rcl
fsub
cmc
cmp
lret
mov
in
out
repz
das
lret
cmp
fcmovbe
fxch
iret
lret
xor
fcmovnbe
mov
cld
sub
mov
xchg
iret
repnz
shll
loop
xor
or
rcr
iret
test
les
out
into
xchg
hlt
ror
in
repnz
aad
sarl
test
cmp
cmc
out
fadd
jmp
in
rorl
in
neg
aad
int3
fidivrs
repz
enter
jmp
jecxz
xchg
int
xor
rcr
aaa
out
in
fcmovne
jmp
rcl
cmp
in
cld
std
imul
jecxz
in
loopne
jecxz
out
out
xlat
cld
out
icebp
fcmove
std
aam
fdivr
cmp
stc
out
out
ljmp
shl
sub
lret
fdiv
jmp
test
lds
loope
enter
arpl
loope
add
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
cmp
iret
dec
adc
add
fimull
int
in
mul
int
leave
repz
sarl
loope
int3
ret
clc
testl
xchg
fucomip
repz
fdiv
ljmp
shl
in
fld
cli
in
mov
xlat
jecxz
loope
test
cli
ss
cld
cmc
loopne
lret
jecxz
hlt
in
sti
sti
ljmp
fsub
in
mov
ret
xor
cli
repnz
fdivrp
loope
fcmovnbe
ret
vpsubb
test
mov
notb
hlt
loope
repnz
repnz
iret
in
ss
lret
shl
test
ret
out
aas
enter
call
mov
call
xor
aas
ds
cmc
std
or
rol
fadds
icebp
shl
loope
call
into
int
leave
icebp
fnstcw
cmp
mov
jmp
jecxz
call
cmc
in
in
hlt
loop
iret
hlt
out
clc
add
xlat
rol
sti
addl
out
xor
shrb
frstpm(287
fldl
sub
fneni(8087
add
shl
or
fptan
into
int
sarb
stc
icebp
loope
in
out
clc
mov
xchg
ljmp
out
dec
jmp
jmp
fcmovne
loopne
and
in
neg
fdivrp
out
lret
nop
rcll
lock
cmp
fndisi(8087
int
add
fsqrt
aad
test
test
xchg
int
repnz
repnz
out
fdiv
aam
jmp
test
std
aam
cld
out
iret
cli
out
mov
repz
out
cld
xlat
loope
ds
fdivrp
test
enter
ljmp
jecxz
out
rcr
fadd
int
cmp
ljmp
jecxz
rcr
mov
call
loope
loopne
ret
in
loop
lock
call
and
stc
lock
xchg
jmp
stc
out
orb
cs
lock
lret
in
shl
leave
cli
aam
mul
loopne
jmp
jecxz
int
nop
call
int3
in
in
fmulp
bnd
repnz
mov
inc
fsub
in
lret
jecxz
lret
icebp
fucomip
xlat
aad
in
call
ret
loop
jecxz
enter
into
icebp
call
ret
int3
clc
jmp
std
cmp
icebp
out
add
repz
loopne
aad
ss
enter
in
call
out
loop
mov
mov
jmp
int
shl
into
xchg
xchg
aam
in
aam
iret
icebp
idiv
clc
ljmp
test
into
out
cld
lock
xor
in
fstpt
in
neg
shl
into
lock
std
sti
call
lock
jmp
leave
ret
hlt
out
jmp
into
shl
out
xlat
mov
lock
shl
out
imulb
into
fistpll
ror
incl
jecxz
out
loopne
fcmovnb
in
lock
xor
shr
cmc
fst
ljmp
call
clc
mov
xchg
aam
rcl
aam
sti
sti
repz
not
ret
add
rol
mov
cmp
out
fcmovne
xor
xlat
out
sarl
xlat
loope
leave
cli
incb
xchg
in
cmp
cmp
out
cmp
icebp
ret
out
loope
lret
in
decl
fsubr
iret
idiv
int
cmp
ret
xchg
in
nop
xchg
aam
ret
ror
shl
aaa
iret
cli
shl
std
filds
icebp
shl
mov
cld
or
aam
lds
sti
std
cli
ss
aas
aam
shl
fsub
loope
jecxz
std
mov
mov
rol
mov
andl
add
adc
jmp
rcl
aad
rcrl
in
adc
idivl
or
jle
into
xor
in
xor
std
cmc
icebp
fucom
movb
fcoml
int3
repz
cmc
shl
fucomp
cld
fdivp
fcomi
shl
repz
stc
cmp
in
jecxz
cli
int3
repnz
cmc
mov
out
xor
cli
cli
fmul
or
xlat
in
rolb
addb
xchg
loope
into
loope
aad
into
cmc
sarb
in
sar
xor
test
test
mov
out
lock
idiv
repnz
icebp
int
ffreep
cmp
in
out
jecxz
fucom
xchg
sub
test
lret
cmp
lret
xor
idivb
ret
stc
xchg
lock
loope
loop
shl
ljmp
lock
rcr
cli
roll
addb
out
shrl
idiv
ljmp
cld
stc
xlat
mov
std
call
adc
in
into
enter
fucompp
jmp
shl
out
fstp
cmp
jecxz
enter
cmc
in
xor
fnstsw
cld
sti
lock
rcr
into
rcr
std
xlat
movl
call
cmp
xor
sar
in
shl
cmpb
roll
loope
lock
xchg
rclb
xor
icebp
jmp
xchg
cli
stc
ret
fcmove
out
and
out
fsubrp
adc
icebp
shlb
leave
repz
icebp
iret
lret
aas
addb
jmp
in
repnz
loopne
in
aam
not
in
out
fcom
cmp
sarb
rcl
div
clc
in
fxch
jecxz
cli
int3
fdivp
hlt
int
ss
call
icebp
cmp
std
filds
xchg
enter
ror
fcomip
vpinsrw
vcvttpd2dqy
hlt
int
xlat
mov
repz
lea
in
rcll
fst
hlt
filds
sarb
cli
sar
fdivr
cli
in
mov
out
nop
mov
xchg
loope
xor
cmp
loope
loopne
into
ffree
mov
aam
in
inc
xchg
loop
sar
aaa
clc
stc
xor
cmp
repz
mov
mov
fmuls
test
in
xchg
leave
jmp
cmp
lret
ror
fdivrl
sbb
aad
loop
clc
in
sub
test
cld
jmp
fdivp
rol
call
xlat
icebp
repz
icebp
aam
cmp
xchg
in
leave
sbb
std
mov
out
icebp
lret
divb
into
ss
int3
rol
aam
jmp
orb
lock
shl
xor
fsub
jmp
iret
add
ret
loopne
jmp
fldl
xor
aam
cli
jmp
hlt
out
stc
fcmovnbe
cmc
aad
rcr
repz
lock
mov
pushl
das
cmc
into
cmp
iret
sar
into
loopne
enter
test
cmp
sbb
hlt
enter
lret
das
aam
cld
cmp
hlt
ror
icebp
icebp
jecxz
and
lret
in
out
icebp
loop
icebp
xor
fidivl
out
out
xor
cmp
out
ds
out
sub
ror
not
in
rcl
loope
fcomip
repz
filds
xchg
in
cmc
aaa
xor
out
ljmp
cmc
dec
xchg
ljmp
mov
out
std
div
enter
hlt
sarb
loopne
jmp
not
xchg
vpminub
mov
mov
repnz
imul
xor
enter
ret
repz
rol
std
out
loope
out
fstl
jmp
fstpt
fidivs
icebp
call
std
hlt
lock
hlt
ds
xchg
into
not
icebp
ret
repz
cld
out
xor
fdivrl
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
cmp
sub
jg
roll
jle
loope
test
jecxz
mov
out
ljmp
sti
hlt
cmp
cld
repz
std
ljmp
lock
iret
in
stc
into
idiv
cmc
frstpm(287
cmc
cld
lock
hlt
lret
xchg
stc
mov
fyl2xp1
int
call
loope,pt
out
fcomip
xabort
fdivrp
out
mov
in
jecxz
mov
shl
xor
rcr
call
clc
rolb
out
mov
aas
stc
sti
mov
add
xor
fdivrl
leave
repz
int3
add
push
mov
lock
mov
enter
enter
cli
or
fnstsw
ret
cld
jmp
in
loopne
sub
lock
ljmp
fnstsw
stc
cmp
jecxz
ret
mov
test
mov
lret
not
aam
in
shr
shr
aas
cmp
jecxz
lea
xchg
in
out
xor
out
call
out
loop
testl
lret
rorb
fcmovb
into
rcr
iret
repz
fcomp
xlat
loope
stc
cmp
mov
rcr
enter
fnsave
jmp
idiv
faddl
addl
leave
cmp
rcl
loopne
cmp
cmp
sarb
call
int
in
sbb
xor
lret
hlt
call
iret
in
shl
call
in
in
jecxz
int
xor
jmp
ljmp
icebp
rcr
call
incl
xchg
icebp
test
jmp
cmp
xor
test
aam
ret
adc
cld
lret
xchg
mov
mov
ret
fxch
ret
cmp
std
clc
fdiv
cmp
shl
fldl
aam
jmp
call
int
xor
enter
jecxz
ret
aad
mov
out
enter
int3
xchg
int3
ljmp
ss
loopne
fcom
cmp
mov
mov
decl
out
out
xor
icebp
in
xor
cmc
test
fistpll
cmc
aad
lds
rolb
xlat
in
ret
cmp
imul
rcl
stc
fcom
lock
aad
out
orl
xor
into
ret
fdiv
ss
int3
sti
xlat
int
in
loope
fadds
xchg
roll
rcl
xlat
out
cld
leave
fmul
in
fucomi
icebp
cmpl
shl
stc
test
in
lret
iret
loope
xchg
int3
sub
into
lds
in
out
repnz
cmp
mov
cli
repnz
xorb
hlt
stc
neg
std
cmc
cmp
sarb
out
shl
cmc
mov
sti
addb
jmp
xor
xor
not
addb
mov
icebp
fmulp
clc
out
decb
out
clc
sar
stc
xor
ljmp
fnstsw
call
fsub
ljmp
icebp
xchg
shl
jecxz
cmp
shl
cmc
repz
stc
leave
cmp
int
fdiv
incb
mov
cmc
in
xor
ljmp
ret
stc
enter
imul
mov
lock
out
xor
fldt
fdivr
aad
aam
stc
loope
add
mov
out
xor
lret
xlat
xor
iret
xor
rcl
into
loop
shl
mul
faddl
iret
nop
mov
in
out
jmp
roll
in
mov
into
in
cs
xor
xorb
fcmovu
cld
clc
lock
enter
out
out
xchg
loop
loope
repnz
out
jmp
test
lock
roll
jmp
or
test
fbstp
ror
ss
out
stc
jecxz
hlt
faddl
loop
cld
test
icebp
adc
out
inc
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
jg
roll
jle
in
cs
out
std
stc
cmp
into
in
ds
adc
out
into
out
divl
ss
xor
repnz
sar
call
fcmovnu
repnz
in
xchg
mov
repz
fst
std
lret
int3
cmc
out
repnz
not
int3
icebp
call
into
sub
cld
fmul
cmp
aas
adc
stc
repnz
hlt
rcl
call
fsub
jecxz
xchg
ss
imul
cmc
sti
fsubrp
loopne
aad
fcomp
sbb
ret
fsub
jmp
jmp
shll
repz
rcr
sub
int
ds
cmp
loopne
aas
test
clc
cld
in
cmc
ror
cli
leave
clc
in
fdivrs
rcl
and
xlat
fcom
mov
repnz
nop
icebp
test
fldcw
fcmovnbe
out
call
aad
adc
in
leave
out
xchg
iret
iret
xorb
ret
out
lret
lret
cmp
mov
jmp
cli
clc
out
fsub
cli
out
repz
or
in
aaa
repnz
in
imul
out
cmp
aas
fsubrp
idiv
out
and
loopne
int
incb
aam
out
fst
cmp
loopne
rcl
fcom
in
mov
fucomp
in
shr
out
jmp
stc
aad
out
xor
fcmovbe
cld
in
loop
rorl
std
ljmp
jmp
cmp
cmp
ljmp
sbb
fld
mov
mov
aad
cmp
xor
int3
cmp
cmc
stc
idiv
int
ret
mov
ljmp
jmp
shl
xchg
rcl
leave
sti
xor
cmp
out
hlt
les
jmp
lret
adcl
shl
jmp
sar
shl
cld
lock
cmp
in
cli
fdiv
in
out
out
ss
aaa
ror
hlt
jmp
fcmovbe
stc
in
test
mul
faddl
std
icebp
out
in
fucomp
repnz
out
clc
aad
cmp
icebp
ret
sub
les
out
xchg
rcl
xlat
ss
cmp
cmp
test
call
stc
test
mov
repz
xor
fsubr
fdivrp
cmp
cmc
shl
decl
fsubr
mov
neg
leave
shll
fsubr
in
fcomi
xor
lret
clc
loope
bnd
int
ljmp
hlt
jecxz
xor
fdiv
cmp
icebp
in
aam
loope
test
cmp
fsubp
in
loopne
int3
xor
ljmp
lock
cmp
out
ret
clc
mov
mov
nop
loope
shr
xchg
icebp
lret
in
in
idiv
aas
mul
fcomip
xor
incl
in
add
das
rol
iret
ss
enter
cmp
cmc
cmp
cli
hlt
stc
enter
int
repnz
leave
div
fdivrs
shr
int
loopne
aad
neg
call
and
out
sub
out
jmp
fstpt
aas
cmp
int
leave
jecxz
out
faddl
in
shl
icebp
int3
jmp
fdivl
aam
inc
hlt
les
fadd
enter
xchg
call
out
test
ss
loopne
xor
fnclex
test
xchg
in
cli
in
xchg
cli
in
lret
shl
in
out
cmp
jecxz
testl
mov
jmp
cmc
ljmp
cmp
cld
rol
roll
fsts
ret
divl
jmp
into
int3
out
ljmp
fnstsw
or
in
stc
enter
mov
shr
fmul
xor
out
in
cmp
ds
cmp
rcl
xabort
loope
movl
int
cmc
fucomi
neg
ss
aad
loop
in
xchg
filds
test
rcl
enter
cld
out
cli
cmp
test
test
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
cmp
addb
xchg
in
repz
cmp
out
jmp
in
fadd
fdivr
enter
xchg
fcmovne
in
jmp
repz
shr
aam
fidivs
fiadds
sti
mov
jmp
xor
cli
xor
cld
fmulp
jmp
fcomi
repnz
cmpl
mov
in
fisttpll
jmp
sti
in
in
loope
rcl
stc
rcr
test
xlat
jmp
fsub
nop
out
xor
iret
in
int3
ror
cmp
iret
sti
cld
rol
rol
xchg
leave
mov
test
call
aaa
cmc
fptan
repz
int3
ret
out
fdiv
loope
loopne
leave
mov
mov
xchg
xchg
fucom
clc
jecxz
shl
jmp
icebp
icebp
fdivrs
in
repnz
call
loope
call
aad
out
sub
out
in
imul
neg
neg
in
faddp
test
out
sbb
loopne
out
aam
loop
call
cmp
lock
aas
fsub
loopne
in
cld
loope
test
into
jmp
xchg
jmp
aad
leave
icebp
neg
repz
cmp
cld
cli
aam
rorl
int
adc
mov
ljmp
clc
into
leave
neg
repnz
stc
rcr
aas
fdiv
xchg
lret
div
out
in
fcmovb
leave
cld
out
in
xlat
cmp
roll
hlt
enter
sbb
repz
call
aad
aad
aam
call
fucom
flds
flds
aam
into
shr
out
cmc
lret
out
enter
ds
sbb
stc
loope
dec
loopne
fisttpll
test
stc
fsubp
in
aad
ds
aad
repz
adc
lret
ret
xor
sar
cmc
aad
or
cmp
cli
leave
in
addb
in
test
out
ljmp
cmc
std
div
out
clc
in
in
aad
loop
aad
xor
test
repz
out
repnz
out
in
xorl
xlat
sar
sti
cmp
faddl
loopne
repnz
ljmp
xchg
test
xchg
xor
in
cmp
cmp
fxch
repnz
cmpb
xchg
leave
stc
mov
fucomip
repz
in
cmc
cld
sti
roll
fst
cli
aad
lret
nop
iret
out
out
xchg
fdivp
das
xor
rol
fucom
cmp
fcmove
fucomp
aam
fadds
jmp
faddl
xor
cli
shlb
ds
cmp
fsubr
test
jmp
in
shl
mov
rol
lock
in
xlat
sarb
loopne
cld
fdivrs
aas
icebp
ret
sub
fcmovnb
int
ljmp
loopne
clc
cmp
out
hlt
loop
fsub
aam
xchg
inc
cli
addl
int
loope
lret
jmp
sti
cli
sti
cmp
cmp
in
lock
nop
xchg
rcl
leave
in
aad
rcr
loope
into
fdivr
loop
div
cli
jecxz
iret
in
rcl
in
int3
out
repnz
les
test
in
fcmovu
fsin
lret
adc
shl
ss
aam
out
cmp
idivb
stc
repz
out
or
roll
clc
jmp
ss
fnstcw
lret
cmc
repz
in
jmp
xchg
ljmp
shll
enter
repz
sub
or
ljmp
fisttpl
jecxz
shl
out
out
aam
loope
aas
ret
aad
test
out
in
leave
xchg
shr
into
out
repnz
xlat
aam
sti
shl
in
fldl
fdivrp
enter
and
divl
xor
into
icebp
ds
cld
sbb
cmc
repz
xchg
fninit
xor
lock
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
and
jne
and
jg
roll
jle
leave
div
iret
lret
int3
rcr
xchg
loop
stc
jmp
cli
nop
jmp
aad
ror
cli
idivl
out
jmp
idiv
mov
fstp
loop
leave
in
movl
lret
div
not
int3
ss
in
mov
in
jmp
fsub
jecxz
shl
shl
in
aam
lock
neg
int
hlt
xor
fildl
test
call
stc
xor
xor
sarl
fstp
shl
fmulp
hlt
test
out
mov
jmp
mov
icebp
test
shr
out
loope
ds
fsub
shl
mov
xchg
jmp
rcl
fidivrl
aaa
xor
hlt
sti
int3
iret
loopne
rol
fimuls
int
ljmp
shr
clc
std
test
cmp
not
loop
mov
repz
lret
loop
hlt
xor
repz
rcr
aas
jecxz
call
out
int
leave
hlt
nop
xchg
lret
xor
xor
lret
aaa
clc
aam
jecxz
out
jecxz
fincstp
sbb
out
iret
in
into
cld
rolb
lock
clc
jmp
aam
ret
out
cmc
jmp
adc
in
frndint
cmp
int3
in
jmp
fcmovnu
loop
repnz
std
xlat
mov
mov
jmp
enter
fcmovu
icebp
in
cmp
clc
rcl
and
aad
faddl
call
cli
cli
cli
xor
cli
cmp
rcr
sbb
sar
cmp
clc
cmc
xor
xor
int3
in
fcmovnbe
iret
sar
call
in
test
std
aam
shl
ljmp
ljmp
stc
shl
lret
loopne
out
mov
repnz
nop
in
ret
lock
lret
std
cmc
repz
into
adc
fidivrs
cmp
call
into
or
lret
loopne
fsubrp
sarl
iret
sti
fnstcw
mov
mov
shl
out
jmp
jmp
das
cmp
iret
fadds
mov
mov
xchg
ret
ret
lock
ljmp
xchg
xlat
xlat
movb
repz
aaa
aam
ror
stc
fmulp
icebp
in
shl
ret
cmp
int
lret
out
mov
lret
stc
xor
fcmovbe
out
in
in
rol
in
jmp
mov
xchg
ffreep
cli
ret
aad
lret
cmp
cmc
ds
or
lret
loop
out
testl
cli
les
into
das
fadd
cli
clc
cmp
into
sar
rcr
jmp
xchg
xchg
ljmp
icebp
xor
in
cmc
lret
ror
in
fsub
cmp
mov
clc
mov
xchg
in
int
xlat
icebp
ror
shr
int
aas
fcmove
test
xchg
mul
and
out
adcl
cli
in
std
repz
fcos
jmp
faddp
iret
not
faddp
mov
ljmp
repnz
cmp
shr
in
int3
fbstp
repnz
cmc
cmc
int
ret
test
test
call
loope
xchg
cmc
int3
out
repz
call
not
icebp
sbb
repnz
fistl
in
ljmp
cld
not
lret
rcl
cmp
in
fucomi
jecxz
loope
lret
fucomi
test
shr
out
xlat
rcr
clc
ds
cmp
fcmovb
aam
xchg
cld
call
xchg
iret
ljmp
cmp
ss
in
addl
fchs
int3
cld
ljmp
clc
leave
fdivr
int3
fucomip
xor
addl
std
jmp
mov
xor
xor
hlt
xlat
fucomi
shlb
ret
vpaddq
faddl
mov
mov
cmp
jecxz
aaa
out
lock
rcl
aam
out
hlt
ljmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
jmp
inc
out
testl
shr
loope
idiv
out
repz
fucomp
icebp
out
push
shl
ds
shl
jmp
out
lret
repnz
out
out
out
jmp
cmp
iret
iret
sbb
cmp
lock
out
cmc
ljmp
sub
jecxz
lret
xor
std
cld
sar
loop
not
aaa
sarb
sub
loope
call
repz
lock
stc
aaa
cld
cld
jmp
test
mov
sbb
int3
cli
icebp
xchg
dec
mul
hlt
cmp
jmp
iret
fcmovnb
lock
jecxz
ret
in
xchg
lret
fdiv
enter
xor
cmp
ret
rolb
in
cld
int
lret
xchg
xor
cmp
jmp
jecxz
aas
faddl
cli
loopne
loope
in
xchg
leave
test
decb
shr
fcomp
cmp
fst
int3
hlt
icebp
rorb
out
fnclex
cmc
xchg
aam
das
icebp
shr
stc
xor
cmpl
fdiv
ljmp
int
cmc
int
cmc
stc
cmp
int
mul
icebp
in
ds
out
ljmp
in
sarl
xor
fcomip
aas
in
xlat
aam
aas
aam
cmc
loopne
mov
repz
xlat
shr
cmp
out
repnz
in
out
clc
icebp
fsubp
out
cli
mov
in
sbb
xor
out
fcom
xlat
ror
fistpll
loope
iret
enter
and
nop
sti
out
xchg
mov
out
stc
shr
xor
cld
iret
sti
fcomip
cmc
mov
stc
loopne
cmp
mov
sti
int
repnz
aaa
stc
shll
ror
call
in
or
fsub
test
sti
fldl
aam
into
in
xor
xor
ss
int
aas
cli
xchg
repz
aam
orl
repz
in
aaa
lock
cmp
fcomi
hlt
loop
shl
cmp
mov
and
mov
out
aam
das
out
jmp
fsubp
hlt
mov
ljmp
out
in
into
ss
into
xor
cmp
cmp
call
in
in
jmp
call
iret
ljmp
clc
cmp
ret
stc
mov
fmulp
cli
loopne
cld
fmulp
mov
icebp
clc
int
int3
hlt
cmp
loop
iret
fcmovu
jmp
enter
jecxz
in
in
aam
in
xor
cld
into
enter
int3
ret
stc
not
loopne
rol
in
std
sbb
xchg
shr
aaa
loopne
xor
xor
cmp
cmp
adc
sti
cmp
jmp
xchg
xchg
shr
out
stc
in
fbstp
iret
clc
out
incl
fisttps
fucom
fdivp
test
ss
sub
fdivr
cli
ds
add
shr
loop
loope
incb
shlb
xlat
aam
out
jmp
shl
stc
shr
xchg
inc
lret
mov
shl
xchg
shl
iret
fnsave
cld
add
xacquire
ljmp
fdiv
jecxz
xlat
cmp
aaa
aam
loope
clc
fsincos
loop
in
enter
xchg
or
xchg
aad
xor
out
fxch
rol
rcr
rol
test
out
imul
fstp
aam
iret
rcl
out
cs
cld
hlt
call
ds
hlt
mov
and
test
hlt
xor
cmp
cmp
test
out
test
int
orb
icebp
cld
out
icebp
cld
out
ror
stc
shl
in
cmp
lret
ds
enter
jmp
iret
out
out
cli
iret
xor
leave
ror
clc
ljmp
fsubp
leave
in
cli
int3
mov
test
test
jmp
leave
fidivl
repz
xlat
repnz
fld
out
cld
fdivr
int3
clc
fxch
ret
out
fucomi
out
repnz
cmp
lret
xlat
icebp
orb
add
add
ror
int
fst
fld
cmp
and
xor
dec
nop
jg
roll
jle
loop,pt
loope
out
cli
clc
jmp
out
nop
lret
int
loopne
xor
out
int3
out
cmp
in
cmp
hlt
xchg
fstp
mov
aas
xchg
lret
repz
repnz
cli
sar
cmp
in
cmp
jmp
rcll
in
loop
jmp
int
hlt
neg
fcomi
out
adc
mov
fisttps
xor
xor
div
std
aas
xor
into
xor
ds
cmp
iret
mov
xor
enter
std
cmp
cmp
rolb
rcr
fdivp
in
mov
ljmp
cmc
out
out
cmc
xor
sti
loopne
cmp
cmp
in
cld
sti
call
ljmp
shl
rcr
ret
in
fcmovbe
ret
clc
jecxz
jecxz
rorb
out
int
xor
test
iret
ss
push
stc
and
cmp
vpmuludq
out
call
in
aam
cli
mul
xor
shl
icebp
stc
cld
fcmovnbe
sar
cli
loope
into
enter
decl
xor
cli
int
test
lret
fcmovnbe
lock
mov
mov
into
rol
cmc
aaa
jmp
lret
fidivs
fcom
loopne
enter
enter
int
cmc
lock
aad
cmp
clc
cmp
int3
lock
inc
rcl
aad
mov
aas
mov
mov
out
cmp
into
adc
loop
cmp
hlt
sar
test
lret
enter
int3
mov
stc
cld
in
imul
out
clc
in
std
ds
fcmovnu
xchg
enter
fmull
shr
ljmp
ror
int
aas
clc
cld
fnstsw
jmp
or
ljmp
out
clc
aaa
not
ss
std
adc
icebp
loopne
div
orl
xor
enter
cmp
lret
sar
repz
test
xlat
sti
enter
fmulp
cmp
xchg
xchg
loope
xor
out
int3
idivl
test
stc
and
fucomi
dec
std
sub
fdivp
lret
fdivr
cmp
hlt
cmp
loope
loopne
repnz
xlat
enter
jmp
mov
cmp
cmp
in
lock
repz
aad
xchg
leave
leave
mov
jmp
not
sarl
cmp
cmp
fcomp
aam
test
stc
xlat
jecxz
out
fisttpll
xchg
iret
lret
stc
iret
sti
out
aad
cmp
shl
cmc
adc
not
aad
fcmove
xchg
in
sbb
xor
bnd
cmp
aad
shl
shl
test
mov
in
in
std
in
mov
iret
stc
int
leave
enter
fprem
into
aas
out
out
sar
adc
orb
aam
loope
aam
cmp
cmp
aaa
jecxz
idivl
repz
out
xchg
sub
lds
xor
jmp
sti
aam
repnz
test
fcmovnu
out
loopne
filds
int3
aam
aad
into
xor
call
ljmp
flds
cld
test
sub
jmp
cmp
xlat
cmp
sti
loope
cli
repz
shr
idivb
xor
int
xor
sar
hlt
ret
clc
std
mul
decl
popl
jmp
fdivr
fdivl
into
std
lock
icebp
fcomip
ljmp
lret
test
shr
clc
xor
fstp
ljmp
lock
call
std
in
call
in
int3
repz
not
lret
aam
lock
lret
loop
and
lret
ror
nop
int
loope
xor
ljmp
cmp
stc
std
out
enter
jecxz
adcl
into
ljmp
jmp
into
test
out
cmc
neg
in
addl
clc
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
rol
out
call
repnz
clc
out
out
addb
in
in
cli
or
lret
mov
xor
icebp
das
roll
aam
fscale
loopne
clc
cli
ljmp
lock
in
cmp
std
cmp
sbb
rcl
fsubr
loop
fptan
out
adcl
jecxz
aaa
lret
cmc
call
stc
aad
aad
loope
fimuls
lock
ret
out
into
fdiv
shl
repz
ret
add
xchg
out
rcll
lock
shr
fdivl
cmp
into
sti
incb
in
call
faddp
out
adc
vshufps
cmp
in
fcmovnbe
fcomp
icebp
shl
aam
fsubp
out
xchg
roll
imul
ss
out
aad
fsubp
cmc
and
fcmovnb
call
loope
out
loopne
ret
xlat
das
ss
ss
in
stc
ds
les
fsubp
int
mov
stc
rol
repz
hlt
idiv
ljmp
call
sub
repnz
rcl
iret
leave
aad
int3
repnz
into
inc
fcomi
fdivp
out
mov
leave
icebp
lret
mov
ror
cmp
rcr
std
lret
lret
hlt
lret
ret
shl
xchg
cli
fiaddl
jecxz
out
xchg
mov
icebp
enter
rcl
hlt
fnstcw
fucomip
add
aad
out
jmp
clc
mov
fucomp
ret
xor
jmp
ror
repz
fcmove
test
loope
cli
test
out
and
ret
cmp
ss
cmp
rolb
leave
mov
xchg
mov
div
rcl
enter
into
clc
fcomp
or
filds
cld
mov
xchg
rcr
clc
in
enter
sti
clc
shl
aam
aas
loopne
shl
clc
xlat
loope
loope
call
cmc
xor
fadd
fcom
ror
xlat
icebp
clc
cmp
rcl
int3
out
fxam
jmp
fdivp
xor
in
ss
iret
std
in
ljmp
add
xlat
sar
in
out
in
in
rcr
xor
idiv
xlat
les
out
hlt
jmp
ljmp
jmp
fcom
std
das
leave
xor
test
sarl
aas
shl
adc
int3
mov
ljmp
xor
cmp
in
loop
aas
fimuls
out
fmuls
shr
in
int3
fiaddl
fabs
adc
aad
in
sti
or
ret
fcomi
test
in
aad
rcl
test
fcmovnu
ret
rolb
sub
pop
mov
repz
out
xor
xlat
cmp
aad
fdivp
in
jmp
cli
cmp
lock
stc
in
repnz
ss
stc
xor
fcmovne
out
fmul
testb
lea
repnz
std
call
repnz
std
rol
jmp
aad
stc
nop
jmp
jmp
cmp
lret
loope
ret
not
mov
idiv
out
loope
cli
fucomi
cld
loop
xor
in
out
cmp
cmp
lret
xorl
ljmp
loope
test
lock
lret
xor
cld
lock
cmc
fucomip
les
call
stc
xchg
lret
iret
loop
jmp
jecxz
xor
xor
cmp
out
rcl
cmc
sti
addb
in
cmp
in
ljmp
cld
fcmovu
dec
fdivr
in
mov
mov
lret
jmp
repnz
lock
aam
cld
iret
test
clc
lock
stc
ds
sti
shl
lret
in
test
xlat
lret
enter
cmp
test
inc
aas
jecxz
sti
xlat
stc
mov
cld
xchg
test
xchg
repnz
repz
into
cmc
hlt
jmp
int3
icebp
int3
into
fnstcw
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
push
cltd
jg
roll
jle
lret
f2xm1
jmp
xchg
out
aam
ret
cmp
aad
xor
shl
loopne
cld
out
sti
lret
sbb
bnd
mov
cmc
in
mov
xlat
cmp
sti
xchg
enter
in
xchg
shl
in
jmp
cli
rcr
cmp
cmp
sar
leave
sbb
fstl
loopne
into
cmp
std
ror
stc
lock
out
cmp
icebp
sbb
cmpb
int
push
mov
xchg
xor
clc
test
shl
xlat
out
enter
fxch
std
adcb
cmp
cmp
cmp
lock
fcmovb
cmp
jmp
call
shr
aam
xor
into
cld
rcr
int3
testl
jmp
in
jecxz
fmulp
jmp
not
int3
lds
idiv
std
aas
xor
push
cmp
ljmp
sub
cmp
sar
hlt
xor
cmp
cmp
in
enter
out
mov
mov
sub
in
cld
fcmovu
fmulp
and
rcr
out
leave
fld
mov
call
fdivs
lret
int
cmp
fucomp
cli
fcmove
test
in
test
fcmovne
jecxz
out
nop
xchg
mov
in
repnz
in
jmp
lock
out
rcr
mov
jecxz
ror
fcmovu
loope
loop
das
cli
out
call
repz
out
test
adc
loopne
ret
int
out
fcmovb
incl
sub
leave
fucomp
aam
clc
fucomi
ret
cmc
aad
aam
fadd
out
add
sti
mov
out
int
aaa
rcr
call
sti
repnz
rol
not
stc
mov
jmp
nop
fcmovnb
in
loope
loope
in
ss
fcmovu
icebp
aaa
aam
xchg
or
hlt
ljmp
clc
iret
xor
aad
in
test
faddp
fdiv
hlt
in
lret
in
in
out
repnz
xlat
out
repnz
ds
mul
in
jmp
in
jmp
mov
loopne
loop
das
xor
aad
repz
xlat
shl
not
in
out
out
out
lret
test
cs
out
ss
icebp
fiadds
call
fcmove
cli
out
xchg
dec
test
cmc
hlt
shl
fldl2t
cmc
fdivr
cmp
sub
mov
loope
mov
xchg
mov
xchg
xor
loop
fnstcw
fdivrp
sar
hlt
fldl
fimuls
lret
lea
xor
cmp
rcl
hlt
hlt
aad
lret
sbb
test
lds
fldl
in
sarl
std
shr
ss
sti
fmul
in
xlat
addl
mov
out
ret
in
int
jmp
and
ret
repz
out
mov
jecxz
in
in
int3
in
imul
out
in
ss
lret
aam
aas
out
and
xlat
in
jecxz
fstp
mov
cli
xor
out
in
sar
rcl
fcomp
test
repz
lret
sti
lea
rcl
cli
fxch
cli
enter
rcr
aam
lock
addb
cld
addl
das
shll
clc
cmp
int
fdivrp
cmp
fimuls
xlat
clc
test
xor
leave
lret
in
lret
sarb
out
test
cmp
jmp
int
int
loopne
xor
loop
int
fcomi
std
fmul
loop
stc
int
iret
loop
fldpi
call
sar
ror
nop
loopne
aam
jmp
out
cld
sar
iret
repz
rcr
cli
fsubp
loope
test
std
test
lock
call
cld
aam
hlt
aam
ret
repnz
jmp
test
xchg
xchg
in
jmp
xor
cli
clc
aad
jmp
cmp
hlt
leave
mov
vpmaxsw
call
jmp
shr
imul
enter
fmul
fnstcw
mov
pop
inc
popf
jg
roll
jle
shll
adc
rcl
fcmovnu
orl
clc
div
cmc
repnz
jmp
idivb
rcl
test
loopne
xchg
fisttps
aad
repz
int
in
aam
sub
out
out
testb
xor
aad
xor
aad
fcomip
hlt
jmp
roll
leave
cld
in
enter
shl
in
ror
lret
jmp
fucomi
repz
not
cmp
xacquire
fadd
in
leave
test
test
xor
cld
int3
fcmove
aam
clc
neg
cmp
clc
aad
rcr
lret
call
xchg
in
aaa
iret
cmp
out
in
aam
in
rcl
out
in
rcl
sti
xchg
stc
test
nop
iret
lret
sub
int
sti
enter
loope
cmp
fcmovbe
fsub
in
jmp
cld
jecxz
in
repnz
xchg
out
sar
fdivrl
sbb
repz
out
loopne
test
rorb
clc
shr
cmp
fadd
or
fcomp
repz
xlat
in
vpsubw
xchg
fbstp
das
xor
xlat
cmp
in
cmc
call
cmp
loope
lret
int3
dec
addb
ss
cmp
test
fdivrs
in
test
inc
flds
in
dec
cmc
into
test
xor
fxch
call
iret
test
hlt
aas
std
ljmp
ljmp
ss
ljmp
rcr
in
sar
fisttpl
incl
jmp
aaa
idiv
cmp
inc
shlb
clc
mov
fimull
mov
in
shr
in
repnz
iret
cmp
cld
cmc
add
repz
cmc
shl
loope
in
ror
cmc
in
dec
shr
cmp
ljmp
mov
in
xchg
out
iret
iret
enter
xlat
cld
fnsave
cmpb
stc
fldl
loop
out
cli
out
repnz
aam
jmp
jmp
cmp
aad
aas
sti
ret
cmc
in
leave
sti
mov
out
stc
clc
ret
repz
iret
xlat
cmp
fsubr
sbb
shl
fcomi
ljmp
shl
aam
in
xor
cmp
call
les
fstp
fsubp
in
shl
shll
les
repnz
iret
enter
loope
loopne
shl
xchg
incb
jmp
ljmp
hlt
cmp
repz
std
loopne
fstp
out
xchg
cld
jmp
test
int
call
in
sti
int3
aam
jecxz
iret
test
loope
xor
mov
test
jmp
out
jmp
rcl
cld
jecxz
add
xchg
int3
clc
stc
xchg
into
hlt
repnz
xor
rcr
ss
shl
cmp
loop
ret
clc
loop
fucomip
xchg
jmp
cli
cmp
loopne
fcmovbe
rolb
lret
fucom
out
xchg
in
ljmp
cmp
hlt
jmp
fneni(8087
icebp
repz
aam
decl
int
xchg
loopne
sub
xor
idiv
fnstsw
clc
lock
cmp
loop
cli
mov
fstl
ljmp
fcmovbe
sarl
in
out
rcl
aad
shl
sti
cld
mov
fildl
in
rcr
fsqrt
into
icebp
cmp
fcom
shl
icebp
repz
test
test
in
jecxz
xchg
icebp
shr
lret
enter
cmp
add
clc
rol
clc
loope
fiadds
lret
in
mov
xor
cmp
enter
or
incl
std
lret
lea
rcl
sub
out
aaa
leave
enter
clc
add
rcr
loope
int
in
in
nop
xchg
xchg
out
out
ret
in
ror
int3
fyl2xp1
in
aas
test
loop
add
adcl
jmp
enter
fst
ffree
and
dec
jo
outsb
or
push
mov
jle
xlat
out
shl
int3
or
div
lock
fcom
fdiv
cmp
hlt
icebp
aam
mov
loopne
cmp
in
xor
out
cmp
repnz
xlat
aas
cmpl
std
stc
mov
mov
not
out
xlat
out
lret
ret
loop
cmp
mov
int3
repnz
mul
fbstp
ret
std
in
fcos
ss
in
shr
stc
sti
div
sti
hlt
in
leave
cli
lret
mov
add
fxch
aaa
aam
ljmp
fincstp
fdivr
loopne
mov
clc
jmp
sub
fidivrl
icebp
rcl
ss
out
stc
enter
ds
out
std
jmp
ficoms
div
in
repz
ljmp
rol
fildl
fsub
fisttps
xchg
aaa
shlb
cli
repz
cld
lock
sarb
lock
lock
mov
stc
repnz
rcl
repnz
xor
repz
in
sti
int
xlat
out
cmp
repz
inc
shl
ficoms
loop
fyl2xp1
cmp
sar
cmp
fneni(8087
sbb
mov
aad
out
mov
mov
idiv
cmp
fdivp
sbb
sti
cli
ds
out
movl
int3
fsubr
leave
icebp
ss
icebp
icebp
aaa
out
in
fdivrl
lock
leave
cmp
fdivr
lret
lret
loopne
iret
in
lea
out
aam
out
enter
repnz
rcr
rcl
or
enter
xor
fsincos
shlb
aad
lock
flds
mov
nop
nop
xchg
into
test
sub
xor
lret
call
adc
adc
mul
addl
call
jecxz
shrb
cmp
lock
aam
sub
les
ffreep
in
int
inc
filds
int3
in
jmp
repz
fsubr
ret
fisttps
in
jmp
rcr
sub
clc
fucom
clc
int3
sti
fdivrs
clc
mov
in
lock
xchg
call
xor
lret
stc
fidivrl
ror
sti
sti
xchg
sbb
loope
fucomi
xor
in
incl
ror
ss
lock
loop
cmp
cmp
fadd
xlat
neg
mov
repz
das
das
lock
sarb
in
std
cmp
aad
and
jmp
test
call
in
out
cli
sar
cld
testb
fsubp
fmuls
xor
xor
out
aam
cmp
idivb
aad
les
fadds
mov
in
aad
in
fdivr
out
fsqrt
cmp
lret
out
stc
lock
cld
loope
aad
shl
cmp
in
cmp
int3
ret
repnz
addl
nop
loope
loopne
neg
call
into
fsub
ss
xchg
int
in
fucomip
fmul
adc
ss
idiv
stc
cmp
cmc
aas
fnclex
hlt
fst
repnz
out
cli
sbb
loop
xchg
xorl
leave
xor
shr
cld
loop
ss
cli
clc
loop
les
cld
sub
fdiv
xor
rcl
shl
cmp
test
loope
mov
out
lret
loope
iret
testb
ljmp
cmp
fcomp
cld
xlat
xchg
ret
ds
xchg
jmp
int
enter
sar
aad
lret
test
fucom
ds
test
dec
mov
sub
out
cmp
hlt
fucom
loope
fnclex
out
into
test
mov
out
shll
rcl
fnsave
idivb
stc
faddl
fmul
ret
in
leave
leave
mov
rcr
rcr
out
ds
cmc
icebp
int
aam
leave
std
sbb
cld
fcmove
iret
xchg
std
ljmp
repnz
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
aaa
xorl
cmpsb
jg
roll
jle
into
repnz
sbb
out
mov
into
xchg
fsubp
in
int
in
div
out
cmc
in
out
cmc
loopne
fldl
jmp
hlt
in
in
in
hlt
neg
lock
aas
hlt
cmpl
stc
out
cli
out
int3
icebp
repz
repz
ret
sti
xlat
aam
xor
aad
int
loope
out
icebp
aad
ret
fcmovnbe
or
icebp
jmp
int
xor
shlb
idivl
out
aam
fprem
cmc
cmp
sbb
test
leave
out
out
xchg
int
xchg
shl
in
into
sti
in
aaa
cmc
stc
jmp
into
rcl
std
out
out
out
in
xlat
test
xchg
lret
aaa
aad
aam
jmp
icebp
cli
loopne
clc
or
lret
mov
mov
loope
iret
sub
aam
leave
clc
ror
leave
stc
repnz
xchg
rol
leave
fiaddl
loope
enter
aad
stc
sar
ror
shr
cmp
rol
repz
jecxz
cmc
imul
ret
rclb
rol
int
ds
cli
repz
loop
repnz
loopne
mov
lret
mov
rolb
ret
ss
ljmp
ss
clc
test
leave
mov
int
ss
in
cli
lret
in
clc
cld
jecxz
icebp
fadd
and
out
int
mov
lret
lret
hlt
loope
fidivrl
vpmullw
cmc
std
repnz
hlt
lock
out
xabort
in
out
and
icebp
loopne
cmp
xor
xor
fdivrs
xlat
hlt
hlt
ret
ljmp
mov
xor
cmp
dec
std
xlat
cli
out
loopne
rol
aam
aad
ljmp
std
sub
in
iret
in
cmp
cld
adc
aas
cmc
fmul
leave
xlat
call
ljmp
ljmp
stc
fdiv
testl
sti
jmp
lock
jecxz
fnstenv
shl
shl
xor
clc
in
ret
test
xchg
repnz
leave
fisttps
fdiv
out
lret
dec
xor
aam
test
fsub
mov
shl
lret
xor
cmp
fcom
cli
test
imul
inc
leave
mov
loope
xlat
das
cmp
in
jmp
fsubrp
loopne
sbb
leave
fsubrp
mov
fadd
repz
into
out
cmp
icebp
iret
aad
not
hlt
out
cli
fistpll
loope
leave
shl
loope
sub
jmp
loopne
xor
into
call
repnz
fdiv
cld
ret
fcmovnu
fldl
aam
ss
ss
jmp
out
fidivrl
icebp
shl
fisttpll
iret
xchg
addb
enter
aam
in
xor
test
cmp
out
cli
out
shr
in
out
icebp
cmc
das
out
xor
fcmovu
jecxz
rcl
test
fisttpll
lret
test
jmp
shl
enter
clc
in
sub
repz
test
cmc
cld
call
jmp
out
cmp
neg
idivb
imul
cli
jecxz
idivb
xchg
repz
hlt
clc
clc
jmp
out
mov
cmp
shl
xor
cmc
fcomi
aas
fimuls
neg
loope
jmp
lret
in
iret
fxch
cmp
out
rcr
idiv
lock
xchg
in
lret
in
cld
fdivp
mov
cmc
aaa
ljmp
aas
cli
sar
xchg
test
adcb
lock
lock
cmp
cmp
push
fsubr
ret
test
aam
test
ljmp
aas
jmp
shr
rol
cmp
fucomp
jmp
test
filds
fcmove
out
ljmp
lret
cmp
in
hlt
ror
into
iret
cmp
ret
rcr
sar
cmc
lret
mov
idiv
xor
fdivr
fmul
cmp
loop
ret
out
stc
fldl2t
out
in
jmp
je
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
mov
mov
add
mov
ss
xor
not
icebp
addl
call
into
lea
xor
div
rol
fmul
fidivrs
cmpl
in
jmp
stc
ljmp
int3
ror
cld
fidivrl
in
or
in
out
incb
lea
shl
icebp
lock
hlt
shl
jmp
cmc
lret
repnz
test
xchg
jecxz
loopne
test
in
clc
aad
cmp
aad
enter
fsubr
sar
lds
xchg
cld
loopne
std
sbb
cli
enter
call
int3
call
int3
xlat
stc
ds
loop
call
cli
fildl
ljmp
icebp
lds
aam
fmul
aas
ds
ljmp
ret
aam
in
lret
cmc
sti
in
jmp
fcmovbe
in
ds
call
lret
xchg
xchg
shl
mov
repnz
lock
cmp
jmp
stc
loope
in
sti
test
out
nop
rcr
loopne
in
iret
clc
sub
hlt
cld
lret
cmp
iret
fdiv
rol
xchg
sti
call
fstl
into
xor
call
fmulp
cmp
cmc
xlat
addb
loope
out
rcl
xor
shl
ret
aad
cmp
stc
in
sti
fildl
lret
call
imul
jmp
leave
xor
and
cmp
stc
ret
loop
sar
test
iret
ljmp
out
leave
into
fcomip
into
test
xchg
call
out
fildl
hlt
shl
cmp
divl
jecxz
add
enter
fisttpl
lret
jmp
cmp
leave
fsub
rcl
loope
cld
jecxz
and
lret
jmp
lret
fistl
fsubr
cmc
call
std
enter
xlat
ret
test
sti
mov
fsubrp
jmp
call
jecxz
fmulp
loopne
aad
hlt
loop
in
ret
cmp
lret
fisttpl
loopne
jmp
jmp
repz
ss
jmp
loope
xchg
test
in
fdivr
ljmp
in
jecxz
jmp
out
jmp
cld
adc
fadd
in
xlat
sti
call
xchg
in
mov
in
jmp
leave
ljmp
cmp
cli
fsubp
fsub
loop
loope
in
in
and
jmp
ret
sar
lock
leave
cmp
in
ds
loopne
sar
mov
leave
stc
repnz
loopne
mov
cmp
enter
int
cli
sub
iret
hlt
fisttpl
std
mov
lock
xchg
mov
iret
out
cs
loop
xor
lret
fsub
hlt
rol
repnz
test
int
in
xlat
ret
in
xor
repz
fistpll
fucom
xchg
std
lret
faddl
fidivs
loopne
out
fdiv
fcmovbe
cld
cld
fmul
std
idiv
sbb
int
sti
sub
cld
ljmp
fdivr
rol
icebp
cmp
lret
loopne
jecxz
ljmp
jecxz
hlt
xchg
shr
in
xor
out
xor
cmc
std
fcmovne
push
in
aad
sti
aas
ror
out
cld
lea
mov
jmp
in
xor
call
cmp
cmp
fcmovnbe
xchg
xchg
lret
cmp
aam
sub
cmp
cmc
fadds
int3
leave
addl
in
ljmp
ret
aas
xchg
aas
mov
sub
mov
in
xchg
loope
int3
test
clc
ljmp
neg
into
out
in
testb
out
ftst
stc
shl
xchg
xor
into
cmp
xlat
stc
jmp
fcmovne
into
rol
lock
fstp
stc
mov
enter
out
cmp
fisubrl
in
lock
repnz
in
cmc
loope
repnz
sti
jecxz
loope
xchg
stc
iret
out
out
xor
jmp
shl
into
rcl
jecxz
rolb
and
add
add
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
jmp
pop
orl
jg
roll
jle
test
lret
xchg
iret
and
in
int3
iret
aaa
xor
clc
cmp
test
std
cmpl
lret
into
in
xor
iret
ljmp
lret
int
roll
and
loopne
xchg
int
iret
repz
cmp
icebp
repz
clc
repz
fsqrt
movb
int
xor
shr
shr
fsub
lret
div
rcr
xor
out
out
shr
sar
xchg
addb
lret
int
out
loope
cmp
loope
xlat
testb
in
call
sub
out
cli
leave
rol
clc
sar
ds
jmp
fiaddl
jmp
ror
into
shl
out
cmp
cld
lock
jecxz
in
int3
mov
sbb
ror
jecxz
shr
int
divb
stc
call
loope
mov
aad
in
in
mov
in
clc
out
cmp
loope
sar
loopne
mov
in
mov
cli
movl
stc
repz
loopne
cmc
cmp
fcmovnbe
enter
cld
jmp
and
rorl
aam
lock
loop
in
int
testb
fsubp
rorl
cs
xor
out
enter
repz
rcl
in
call
int
int
test
xor
shr
out
jmp
in
call
stc
roll
out
out
cld
sub
xchg
xor
xor
xor
in
shr
neg
cmp
clc
stc
aad
test
cld
incb
loope
loopne
cli
enter
xor
aaa
fstpt
shr
and
xlat
rcl
movl
test
in
enter
cld
call
roll
lds
jmp
iret
rcll
aaa
lret
fnstenv
ljmp
fpatan
aam
incb
sti
loop
fiadds
jmp
bnd
add
mov
addl
xchg
jmp
in
ret
stc
xor
call
add
cmp
fdivrp
jmp
loop
xchg
addl
test
lock
icebp
shl
ret
aad
imul
sti
xchg
and
enter
lock
cld
lret
clc
xor
out
rcl
test
loope
mov
mov
out
ljmp
aad
aam
aam
in
cmp
ret
mov
fdivp
and
fists
cmp
aad
sti
fnstsw
int3
rcr
sar
fcomi
cmc
idiv
ret
in
in
sar
int
xchg
hlt
div
lock
fdivrp
clc
cmp
loop
orb
rcr
jmp
repz
lock
sbb
div
testl
int
cmc
leave
into
std
leave
rcl
iret
idiv
ds
out
test
mov
sti
lret
in
aam
aad
into
repz
test
mov
test
in
lret
cli
test
out
int
lds
xor
aad
repz
leave
out
loopne
cmc
test
faddl
mov
icebp
xchg
jmp
loop
jecxz
ror
fsubr
div
fld
adc
jmp
jmp
int
int3
jecxz
xlat
xor
cmp
repz
ror
iret
sar
lock
out
cmp
testb
lret
in
icebp
cmc
leave
jecxz
int3
int
ljmp
aad
mov
ret
out
and
out
fcmovbe
iret
aad
jmp
fldpi
fcmovu
aaa
aam
aas
sarl
test
ret
repz
fisttps
loopne
loope
fxch
xor
cmp
cmp
icebp
aad
std
leave
mul
leave
int
mov
cmc
mov
enter
lret
into
fsub
int
repz
fcomip
cli
out
jmp
jmp
out
out
lret
in
adc
cmc
mov
add
add
fwait
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
add
roll
jle
sti
aam
sti
ss
cmp
in
lret
cli
leave
or
int
ret
ljmp
loopne
cmp
out
ffreep
orl
xchg
idivb
xor
clc
das
ljmp
ret
cld
aas
ror
test
and
sti
in
adc
iret
xor
shr
in
aam
xorl
xlat
aas
jmp
cli
int3
xchg
rolb
in
les
cmc
fdivp
or
cmp
aas
test
xchg
aad
test
loop
aas
ror
sub
out
rcr
in
fmuls
in
ret
adc
leave
jecxz
cmp
aad
xor
xlat
leave
int
repnz
rcr
rol
clc
idiv
adc
std
mov
int3
into
loopne
shl
out
in
int3
cli
cli
fucom
cld
aas
aaa
mov
mov
cld
loop
enter
loop
in
cmp
out
xor
jmp
aas
out
testb
addl
sub
sti
fcmovnbe
xor
cmp
cmp
aam
jmp
mov
ror
out
lret
xchg
repnz
xor
lret
sti
aaa
int3
clc
fmulp
int
out
sar
std
repnz
clc
loopne
cld
xchg
loopne
test
repz
in
fidivs
rol
into
lock
shl
fcom
loop
mov
rolb
aas
jmp
std
out
cmp
loope
fcmovb
repnz
xlat
cmp
call
icebp
out
icebp
clc
out
fstpt
cmp
lock
int3
out
fimuls
add
xor
repnz
lds
cmp
xor
fdivrl
loopne
xor
into
cld
cmpl
loope
xlat
lret
std
loope
loopne
clc
cmc
cmc
xor
lret
int
xlat
fnop
stc
mov
std
in
mov
int3
int
xchg
xchg
loopne
sub
ljmp
sub
iret
cmc
sti
fdivrp
call
xchg
xchg
fldl
clc
fdivl
out
iret
fstp
lret
fdivrp
ds
test
aam
loop
int
call
xchg
shl
cmp
shl
das
cmp
cmp
sar
rol
mov
mov
lret
out
in
ret
ljmp
clc
out
in
rol
aam
loope
dec
jmp
mov
shrb
aam
std
call
aaa
lock
repz
std
mov
loopne
test
ror
clc
ss
xchg
test
lret
test
cli
test
jmp
aam
test
cmp
clc
fcmovnbe
in
clc
lock
jmp
ret
std
clc
iret
mov
loopne
loop
repnz
cmp
cli
out
lret
jmp
aad
fcom
xchg
enter
or
xchg
xor
int
fcom
in
repnz
mov
leave
addb
ret
repz
cmp
jmp
loope
int
cld
test
neg
ret
mov
sti
loopne
leave
out
in
xlat
leave
into
cmp
fmul
into
aam
aas
lret
loop
clc
clc
shl
cmc
addb
sti
cmp
xor
jmp
fucom
jecxz
loop
in
loopne
cld
test
fstp
faddl
xchg
out
in
jmp
clc
enter
ds
mul
call
xchg
in
leave
in
into
xchg
nop
hlt
jmp
cmp
in
aad
enter
into
loop
roll
orb
mov
in
repnz
rcl
std
out
std
out
aaa
stc
cmpl
cmp
fdivr
into
out
rclb
rcr
cmp
fdivr
fucomp
in
in
fcom
rol
out
sti
int3
mov
adc
nop
lock
repnz
jmp
out
fsubp
cmp
xlat
adc
fimull
test
jmp
les
fcmovbe
fdivr
in
aas
fdivr
fcmovu
test
repz
lret
in
adcb
lret
int
ss
repz
sti
sbb
addl
sbb
add
arpl
decl
call
mov
add
add
stos
cli
push
es
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
lret
mov
mov
cmp
std
call
jecxz
std
dec
clc
testl
rcl
int
ss
out
out
fdiv
cmpb
xlat
shl
jmp
dec
int
out
into
repz
in
cmc
aad
iret
lret
out
lock
mov
xchg
loopne
iret
call
cmp
fyl2xp1
idivb
mul
cmp
test
xchg
test
enter
call
in
cmpb
cmp
fdiv
repnz
addl
icebp
test
clc
sub
roll
aas
jmp
xchg
and
fimuls
enter
out
rcr
test
loopne
fucomi
and
xchg
sub
in
fisttpl
xor
bnd
sar
rol
loop
mov
fisttpll
jmp
ror
aad
lock
lock
cmp
int3
fcmovnu
addl
mov
lret
mov
in
xlat
lret
ret
enter
xlat
ljmp
fadds
in
add
mov
aad
xlat
xor
sti
cmp
idiv
fdiv
jmp
shl
aas
rcl
fisttpl
fxch
icebp
sti
in
lock
in
icebp
repnz
cld
lock
loope
repnz
jmp
mov
fcomi
mov
jmp
das
aaa
test
rcr
shl
int
loope
loope
stc
enter
lock
xor
hlt
divb
xor
cmp
shr
out
div
dec
filds
aas
xchg
ret
sti
mov
xchg
into
xor
cmp
clc
fistpll
int
cmpl
lret
cld
mov
loop
in
aam
jmp
cmc
repnz
jmp
int
out
loop
out
ljmp
in
aad
xor
les
xor
fucomip
sbb
ret
repz
cld
out
loop
adc
loope
ljmp
fnstenv
faddl
faddp
loopne
fsubp
ljmp
into
icebp
fucomi
repz
shl
rcr
sti
fcomp
rolb
leave
loopne
std
mov
call
clc
fcmove
out
out
cmp
sarb
aad
fstpt
mov
fisttpll
mov
rcl
cmp
rol
int
adc
clc
rolb
into
xlat
in
into
fdivrp
std
imul
int
int3
lret
ljmp
cmp
fsubrp
ret
out
sar
shr
nop
loopne
out
icebp
xor
iret
das
fxch
sti
loope
cli
cld
neg
sti
jmp
and
int3
xor
idiv
out
clc
repz
push
clc
enter
sti
aad
enter
in
xchg
in
ljmp
icebp
ss
rcr
int
clc
rol
leave
fnstsw
nop
ret
lock
fucom
aaa
rol
fsubr
out
in
enter
loope
stc
test
loopne
idiv
lret
mov
loop
ljmp
call
cmp
repz
cli
out
sbb
int3
int
int3
out
icebp
into
ljmp
shr
xor
in
vpsllq
cld
out
loop
fucomi
cli
xchg
repz
addb
aad
jmp
aad
lock
sbb
out
fiaddl
mov
std
out
cmc
das
xlat
lret
stc
repz
ret
in
clc
test
jecxz
cli
mov
leave
out
mov
out
aad
cmp
sti
into
hlt
ret
hlt
xchg
ljmp
xchg
mov
out
enter
aam
leave
loope
jecxz
aam
mov
std
fiadds
hlt
xchg
mov
into
repz
fcomip
adc
std
vpmuludq
out
sti
xchg
fnstsw
sub
ror
xor
fidivl
rcl
fcmove
test
aam
faddl
out
nop
into
lret
nop
lock
neg
cli
in
call
xor
ret
cmp
add
ret
pop
jmp
rol
lret
fstp
aad
dec
jns
mov
movsl
xor
roll
jle
idiv
rcr
call
fxch
call
out
repz
cmc
jmp
into
lock
loopne
faddp
icebp
ret
incb
mov
ret
adc
std
xchg
xor
loop
ss
sti
jmp
ds
inc
and
jecxz
lret
shr
lock
or
enter
out
iret
sarb
aad
rcr
repz
std
ds
rcll
mov
cs
cs
idiv
cmp
into
loope
fsub
add
out
shl
ror
stc
leave
lret
aas
aaa
cli
xor
aam
sar
vcmpss
cli
xchg
test
ret
in
cmp
hlt
cld
in
sbb
loope
rcl
rcr
mov
in
iret
and
loopne
xchg
mul
ss
shl
ds
lds
orl
loopne
out
shl
idiv
repz
orl
xchg
jmp
int
icebp
enter
out
rol
loop
ret
ret
fld
mov
in
jecxz
xchg
lret
xchg
out
jmp
cmp
in
aas
icebp
sarb
shl
icebp
lock
xchg
call
ror
clc
jmp
sar
clc
fildl
fsub
hlt
or
in
faddl
fcom
ljmp
int
aam
fcmovnbe
aam
out
mov
testl
in
int
xor
or
loopne
test
cld
int
decb
test
enter
fxch
xor
idiv
fcom
neg
xlat
clc
ljmp
std
leave
nop
call
jmp
in
ds
sti
in
ror
std
flds
fcmovb
fsub
xchg
and
shr
cld
ss
stc
into
shl
aad
iret
in
test
aam
loop
jecxz
jecxz
mov
enter
ss
idiv
adc
std
jmp
orl
loope
out
ss
xor
fcomp
sarb
cli
rol
hlt
ret
mov
idiv
out
out
mov
xchg
lea
xor
jmp
jecxz
aas
jmp
filds
flds
int3
loope
in
xlat
out
out
std
sarl
rcr
lock
adc
rol
xlat
lea
faddl
into
cmp
fdivs
fsubr
xor
sti
fld
aad
fucom
in
lock
ljmp
into
fcomip
xor
in
loop
sti
cmc
xchg
test
ret
sti
ljmp
cmp
frstpm(287
cld
sar
icebp
lret
aas
fnstcw
ret
faddp
lret
out
fcmovbe
fcmove
rorb
int
hlt
cmp
in
cmp
cmp
clc
test
fldl
mov
mov
out
sub
in
sub
div
out
aad
shlb
rolb
cld
and
sar
enter
lds
repnz
cmp
idivb
loop
test
xchg
enter
shr
fldl
xor
out
aad
xor
cmc
hlt
sar
repz
loop
jmp
sar
aam
fcom
in
sti
repnz
fcmovbe
add
faddl
roll
int3
nop
sti
call
mov
enter
aaa
cmp
int
in
in
out
loopne
hlt
loop
lock
mov
xchg
ljmp
int
aad
sarb
repz
stc
fdivp
fcomp
in
lea
icebp
clc
das
ljmp
cmp
jecxz
rcl
addb
jmp
mov
jecxz
cld
xchg
shll
in
cli
cmp
repnz
loop
cmp
lret
test
sti
lea
repz
fnstenv
aad
fcomp
xlat
call
hlt
out
shl
std
cmp
jmp
rorl
lock
in
in
xor
xor
loop
test
div
test
jmp
jmp
xchg
int3
test
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
orb
cmp
sti
in
sarl
ds
aam
repz
fsubr
shr
orb
lock
fcmovbe
in
into
std
out
lock
fcmovne
lret
cli
shr
jmp
loope
aam
aad
int
loop
aad
not
in
test
sti
imul
sub
fdivrp
test
in
xchg
loopne
xor
out
cmc
ror
in
cmp
sarb
loope
out
in
aam
jmp
sar
xlat
xlat
sarb
repz
enter
std
fildl
std
enter
out
fldt
div
faddp
rcr
cmc
or
xchg
faddl
test
out
into
ss
call
cld
fiaddl
xor
test
out
sti
fucomp
nop
mov
das
in
int3
enter
lret
repnz
std
in
testl
xchg
ss
repz
ss
clc
shl
xlat
addl
decb
fcmovnbe
ljmp
aas
test
repz
in
cld
xlat
roll
xchg
clc
jecxz
call
ds
sarb
test
neg
not
jmp
sti
out
cli
sti
adcb
in
int3
stc
cli
leave
cld
ljmp
in
jmp
mov
icebp
addb
cli
iret
jmp
loop
stc
rol
shl
ret
sub
mov
ljmp
fistpll
aad
hlt
lock
push
inc
hlt
out
in
stc
mov
std
faddl
ret
sar
in
shl
fdivr
repnz
loopne
cli
fst
ljmp
sar
jmp
int
idivl
xor
cmp
repz
cmc
xlat
lret
stc
in
fimull
neg
test
ror
in
out
in
fiadds
xchg
lret
xlat
fsubr
ljmp
aam
ftst
out
fmulp
cmc
out
std
mul
sbb
lret
jmp
loopne
hlt
in
enter
xor
clc
sarl
in
lock
testb
ffreep
in
decb
leave
ret
cmp
test
cmp
cld
out
test
jmp
testl
icebp
xlat
cmp
jmp
jmp
sbb
fdivrp
xlat
rorb
test
mov
xchg
int3
repnz
shl
cmp
aaa
int3
stc
cmc
cmp
rcr
repz
incb
xchg
hlt
call
cmp
xor
int
iret
ret
aad
out
xchg
std
sbb
in
cli
shl
in
idivl
out
std
into
sti
icebp
out
loope
test
fmull
aam
lock
xor
hlt
cmp
cmp
std
clc
cmp
aas
in
leave
clc
incl
lret
test
cs
xor
in
fsubr
cmp
icebp
cmc
jecxz
xlat
fucomp
test
xchg
mov
shl
repnz
xor
cmp
fnsave
hlt
icebp
ret
out
in
out
ljmp
shl
jecxz
lock
in
cmp
aad
testl
aas
test
xchg
mov
xlat
xor
xor
cmc
in
cmp
in
test
xlat
ret
leave
orb
int3
lds
into
cmp
cmp
cmp
jecxz
hlt
xchg
ljmp
test
repz
lret
fdivr
cmc
xor
fidivrs
lret
cmp
fcmovbe
idiv
jmp
xchg
ljmp
fdivs
lret
fdivp
cmp
repz
hlt
mov
test
icebp
fcmovnu
lock
jmp
in
mul
aaa
hlt
aad
iret
out
out
cli
loop
iret
inc
ret
clc
lret
mov
or
call
int3
cld
rcr
out
std
inc
fildl
xchg
cmc
orl
clc
ror
iret
lock
iret
not
cmp
mul
lds
inc
fsubs
jge
mov
xor
add
jmp
ror
rcl
mov
aaa
ljmp
add
aas
jmp
in
leave
fisttps
ljmp
in
cld
idivb
int3
loope
into
out
rcr
loop
sub
int3
mov
leave
sub
cld
lret
xchg
shl
in
ljmp
shr
cmp
xchg
aam
ret
xchg
stc
jmp
int3
adc
out
fcom
repz
cmp
cld
loopne
fsub
in
std
out
xlat
orl
in
in
std
mov
out
ror
fdivrs
ds
loope
aam
xlat
mov
int3
mov
mov
mov
loop
xchg
ret
ljmp
lock
sarl
out
enter
call
in
loope
std
call
jmp
enter
ret
xchg
sti
fcmovne
jmp
in
clc
xor
lret
ljmp
xlat
lock
in
loope
ret
imul
lret
mov
mov
addl
mul
in
clc
in
cmp
loopne
in
shr
xlat
sbb
int3
fucomi
hlt
call
lock
aam
out
xor
adc
aam
loopne
fildl
xchg
in
ljmp
test
not
aam
loope
stc
aas
cmc
cld
out
xchg
out
addb
test
ds
into
iret
fsubrp
aaa
std
cmp
cld
jmp
int
aas
xlat
into
sti
aaa
aam
std
cmp
ds
xchg
stc
faddp
faddl
addb
cmc
xor
int3
sarl
repnz
flds
loopne
enter
cli
out
lret
iret
leave
hlt
shr
ljmp
int
fadd
in
idivb
ds
xchg
mov
ror
cmc
in
mul
jmp
cmc
out
cmp
sar
fcmove
call
loope
xchg
in
mov
lock
jmp
xchg
movl
call
hlt
jecxz
xor
enter
ds
ss
aam
ror
sbb
mov
cmc
mov
divl
rcl
aad
call
xlat
cmp
fdivp
rorl
enter
loope
cs
jecxz
int
sar
fcom
cmp
jecxz
jmp
jmp
hlt
nop
xor
int3
icebp
fmul
incb
and
xchg
test
in
out
int
in
test
das
jmp
cld
cmp
jmp
repz
flds
ret
into
fmul
fiaddl
in
cmp
cmp
cmp
cmc
in
cli
cmp
shl
enter
xchg
sub
stc
in
mov
addb
int3
clc
cli
std
cmc
aaa
std
out
cmp
clc
mov
adc
out
shl
incl
cmp
imulb
shl
into
fdivrl
xlat
cmp
shl
aam
cld
jmp
test
ljmp
lret
imul
sar
cmp
cmp
decb
fimull
lret
xlat
xor
cmp
icebp
faddp
repnz
aad
sbb
sub
out
repnz
aam
xlat
xor
clc
hlt
fcmove
aas
xlat
cmc
int3
aad
cmc
jmp
aas
jmp
rorl
into
loope
shr
aam
cmc
in
not
in
shl
loope
out
loopne
xchg
cmc
loopne
fmul
ljmp
sar
test
stc
test
jmp
int
enter
cmp
cmp
xor
xlat
loope
xlat
clc
sar
in
mov
in
pop
xor
repz
ds
clc
out
fucomp
test
out
loop
testl
xchg
std
aad
lret
xor
flds
roll
fcmovb
faddp
sti
popl
cmc
cli
xor
shlb
clc
fchs
loopne
rcl
aam
fsub
loopne
xchg
fsubr
lret
sar
mov
cmp
int
cmp
xor
testb
in
in
mov
fsubr
into
xchg
mov
mov
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
push
lahf
xor
dec
jg
roll
jle
call
aaa
int
loop
cld
hlt
jecxz
mov
mov
into
out
rcr
out
fdivr
shr
cmp
icebp
aad
cmp
call
incb
aam
int
xor
cmp
out
fsubr
cmp
test
repz
loopne
sti
mov
lret
stc
mov
orl
cmp
fadd
fcos
fcmovb
cld
hlt
ds
std
in
loop
into
xchg
out
icebp
sub
fnstenv
xor
cmp
fsubrp
cld
loopne
repnz
in
out
loop
xchg
mov
into
lret
lock
out
fsubrp
repnz
fildl
movl
nop
xchg
jmp
jmp
cmc
cmp
clc
ljmp
out
in
std
cmc
xchg
mul
in
shl
xor
loope
aad
loopne
and
movl
lret
mov
ror
vpsrlq
aaa
div
rolb
hlt
rcl
roll
sti
cld
mov
iret
cld
in
repz
rcl
repz
fcmovnu
out
int
cmp
fcmovnbe
fcomi
and
loopne
mov
adc
out
xchg
iret
xor
enter
out
shr
std
xlat
xchg
test
in
fcoml
sub
loop
in
in
hlt
icebp
lret
sub
shl
xor
mov
out
int
iret
mov
ror
in
enter
in
lock
and
test
fsubp
ljmp
cli
lret
out
jmp
jmp
in
enter
addl
int3
call
xor
jmp
in
cmp
rcr
addb
call
repnz
shl
rcr
std
xor
in
sarb
out
jecxz
lret
mov
icebp
xchg
aam
jmp
leave
xor
fidivs
fdivrp
in
iret
iret
aad
sar
in
fldl
mov
int3
rcl
in
call
into
cmp
cli
rcr
call
mov
jmp
jmp
xor
shr
fxch
std
fiaddl
aam
in
jmp
out
ljmp
not
jmp
xor
sar
lock
xchg
fcmovu
sbb
iret
mov
fcmovb
sti
shrb
stc
aaa
in
aaa
fsubr
clc
aaa
std
shl
call
sti
lock
xchg
fmulp
shr
int
xor
jecxz
icebp
cmp
cmp
loope
cmc
ljmp
ret
out
jecxz
icebp
sub
icebp
xlat
loop
flds
in
fildl
in
mov
mov
ljmp
into
sarl
lock
addb
lret
lea
into
jmp
cmp
xor
cmp
cmp
loop
rol
rolb
filds
shr
xchg
ret
int3
icebp
repz
int
sar
loope
cld
out
rolb
sti
in
cli
in
mov
out
cmp
xor
stc
lret
fcmovnbe
cmp
repnz
addl
nop
hlt
in
in
lds
in
aad
sar
into
sbb
in
int3
test
in
jmp
adcl
jmp
in
lret
lret
cli
repnz
lock
in
ljmp
loopne
mov
enter
fdiv
call
int3
ret
enter
jmp
loop
enter
loop
cmc
rol
in
fnsave
xor
iret
jmp
clc
ds
clc
xchg
ret
imul
xchg
lret
clc
ficoml
out
shr
in
cmp
jecxz
out
adc
test
fadd
out
mov
cmc
rcl
aad
leave
fucom
cmp
call
out
into
repnz
jmp
int3
xor
cmp
call
icebp
fmul
xlat
fimull
call
lret
cmc
call
shr
repz
loopne
out
out
hlt
fisttps
clc
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
sti
or
in
ljmp
out
out
cmp
cmp
and
ret
loop
mov
flds
nop
mov
in
cli
in
ljmp
aad
test
fsin
int
jecxz
das
stc
xor
rcl
fsubr
fiadds
ret
clc
sti
xlat
mov
mov
fldl
xchg
mov
cmp
in
sub
out
jmp
cli
repnz
sti
test
fstp
movb
in
cmc
iret
lret
aad
out
clc
cmp
loop
iret
cld
sar
fld
ljmp
mov
rcr
lret
cmp
fstp
hlt
cli
cmp
testb
icebp
xchg
shr
xor
lret
int3
leave
xor
bnd
xlat
fadd
sbb
shl
into
xchg
lret
xor
int3
cmp
lret
testb
in
fdivr
repnz
hlt
fiadds
sarl
jmp
out
test
cld
rcl
fdivrp
fdivp
mov
filds
xor
lds
xor
jmp
cmp
sarb
ljmp
xchg
xchg
jmp
out
out
ror
in
aad
cmp
int3
lock
call
mov
sub
loopne
xchg
lock
shr
out
cmp
xlat
ss
shl
stc
xlat
repz
aad
shl
fsubrp
out
in
ror
out
imul
fdivrl
fcom
fninit
in
out
cmc
fdiv
lea
iret
iret
mov
shl
shl
xor
xor
xor
std
lock
xor
sub
enter
ljmp
lret
ljmp
iret
rol
fcmovnbe
dec
stc
nop
into
std
icebp
repz
in
fldt
cmp
cmc
roll
jecxz
lret
test
mov
cld
out
test
lret
repnz
xor
cmc
cmpb
jecxz
clc
repz
adc
call
or
rcl
out
lock
cmp
ffreep
add
repnz
test
mov
or
hlt
hlt
into
lock
aaa
lock
int3
iret
out
out
sar
ret
enter
ds
call
fmull
in
jecxz
cmp
jmp
ror
out
incb
std
int3
loope
fmulp
ror
mov
ret
fstpt
lret
xlat
iret
stc
cli
in
cmc
aam
ret
out
fmulp
popl
jecxz
sti
cmp
fnstcw
lock
aaa
in
ffreep
addl
xchg
ficoms
in
int
repz
in
sar
shl
in
repnz
aad
enter
in
movl
leave
xlat
loop
sarl
rol
in
xchg
ljmp
shr
loopne
hlt
aad
cs
fst
xor
in
fcmovne
roll
xlat
fiadds
lock
fxch
xor
call
sar
cld
lock
vpmuludq
cld
fcomp
enter
cld
call
call
int3
xorb
ror
sti
out
cmp
loopne
mov
test
icebp
mov
int3
ret
iret
imul
stc
jmp
aad
test
out
sbb
ffree
loope
out
jmp
xchg
imul
cmc
call
icebp
xlat
out
fidivrl
int3
cmc
jecxz
xabort
mov
addl
cmc
shl
not
shr
cmp
aas
fcmovu
adc
idiv
int3
int
test
xchg
test
test
icebp
in
lret
int3
enter
xlat
fucomi
loope
fcmovnbe
in
fcmovb
addl
xor
aam
leave
sti
xor
aad
aaa
aas
stc
cld
mov
stc
mov
loop
cld
mov
shl
lock
xor
lret
aaa
faddl
cmp
hlt
leave
lret
out
in
in
subl
out
fnstsw
fdivs
cld
in
xchg
rcl
call
fmul
std
out
roll
out
in
lock
roll
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
clc
stc
sti
loopne
cmp
lock
mov
shl
enter
sub
xor
aaa
fsub
shl
clc
repnz
testl
cld
icebp
sti
mov
out
xchg
mov
xor
in
sar
cmp
lock
fcmovu
ret
int
iret
mov
out
int3
test
out
aam
repnz
cmp
mov
out
sar
sti
fmull
lret
xor
repz
in
test
test
test
jecxz
test
mov
rol
aad
cmp
iret
into
xor
rolb
loopne
in
mov
addb
cmp
rcl
std
std
test
stc
mov
xchg
in
int
repnz
in
into
cld
aaa
ljmp
fcomi
sti
stc
movl
loopne
xor
fmul
cmp
xor
sti
clc
mov
cld
loope
loope
ret
xchg
icebp
orl
aaa
rcr
ds
cmp
fninit
jmp
jecxz
std
lock
fmulp
icebp
xor
loope
fxch
aam
xor
stc
jecxz
cmc
rol
mov
mov
mov
in
aam
rcl
ret
out
xor
std
call
cmc
test
aas
cmp
fstp
sti
cld
loope
rcr
out
xchg
xor
lret
aam
hlt
icebp
leave
faddl
icebp
sti
cmp
in
cld
fsub
lock
fcmovnu
std
xchg
xor
div
iret
into
cld
fcmovbe
cmp
cmp
mov
xchg
fst
xchg
int3
cmp
out
ret
fidivrs
imul
hlt
imul
in
ds
dec
lret
aam
int
ftst
and
ret
out
cmp
cld
jmp
sar
xlat
decb
ljmp
repnz
ljmp
ret
icebp
cmp
repnz
aas
incl
in
mov
in
icebp
aad
lock
loope
sti
loopne
lock
orl
ror
mov
cmp
cmp
rcr
rol
out
jecxz
std
mov
sti
in
mov
into
jecxz
cmp
in
out
ss
in
ret
out
hlt
stc
mov
cmp
faddl
ret
xor
cmp
loope
cmc
jecxz
rol
fdivr
adcl
out
repz
cmp
aam
sti
std
ljmp
nop
xchg
hlt
xor
vpsubq
cmp
testb
lret
rclb
ret
fstpt
into
loopne
hlt
cli
fadds
test
loop
cli
fists
icebp
fyl2x
lret
clc
jmp
fsubp
int
cmp
fcmovbe
mov
aad
call
out
xchg
rorb
fsubr
lret
std
stc
cmpb
aas
loop
test
int
shl
iret
faddp
mov
ret
xor
ss
aas
ror
rolb
xchg
out
enter
loope
orl
fdiv
cmp
in
iret
inc
lock
hlt
hlt
testb
call
xor
lret
shl
fsubr
loopne
fdivrp
in
lds
jmp
shr
enter
stc
cmp
and
fmull
test
loopne
xchg
int
jmp
loope
cmp
call
cmp
fdecstp
xlat
out
loopne
clc
into
adcb
xor
fdivs
cmp
sti
clc
cmp
dec
ss
iret
in
test
cld
jmp
sti
in
std
loop
ror
int
rcl
fsubr
in
loop
clc
cld
in
cld
fsubr
xor
xchg
loopne
test
mov
in
cmp
int3
ror
vpand
shl
mul
out
cli
std
xchg
out
xchg
in
leave
ljmp
repz
aam
clc
fldln2
fdiv
cmp
xlat
loop
fmull
sub
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
faddl
enter
cld
fucomi
aas
cmc
sti
aas
aas
fsub
stc
fcmovnb
aam
in
sti
int3
sbb
shl
test
repz
aad
and
std
adcl
in
xlat
fstp
shlb
stc
cmc
sbb
cld
cmc
shl
ret
into
lret
mov
std
hlt
ror
ffreep
loop
iret
out
cld
aaa
test
icebp
in
sbb
sti
xlat
jecxz
loope
jmp
in
inc
cs
lock
fcmovnbe
lock
fptan
rcr
and
shl
fmulp
test
stc
orl
iret
std
sti
jmp
into
out
ret
ret
in
ljmp
in
xchg
jmp
ror
jmp
fiaddl
neg
jecxz
out
fsub
sbb
in
in
in
iret
fcomi
lock
rcr
hlt
cmc
in
cli
rcl
cmp
mov
jmp
std
mov
cmp
idiv
shl
leave
lret
fdivr
mov
aam
sbb
decl
xor
clc
jmp
sti
imul
cmp
cli
cmp
jecxz
fildl
test
div
in
rcl
fcom
stc
sarb
xchg
in
incl
hlt
ljmp
xor
lret
cmp
or
ror
jmp
adcl
adc
out
in
lock
enter
cld
cli
xlat
rcr
mov
mov
ret
fcmovne
nop
hlt
ss
clc
cmp
jmp
or
cmc
repz
cmp
add
ljmp
repz
rol
div
enter
loope
fdivr
cmp
repnz
shr
cli
ret
fucomip
int
adcb
fdivl
cmc
cmp
in
lret
cmc
rcl
cmp
idiv
leave
std
lock
jmp
xchg
repnz
xor
xor
xor
fdivrp
rcr
aam
aas
aam
jecxz
out
loopne
int
rolb
shr
jmp
xbegin
out
repnz
test
rol
stc
jecxz
jecxz
test
jecxz
xchg
nop
loop
shr
shr
cmp
in
sti
stc
cli
sar
ret
ljmp
fucomip
loopne
xchg
cs
int
cli
iret
repz
rcr
iret
out
std
aam
aas
rorb
iret
xchg
aas
cmp
xor
iret
fdivp
fcmovne
cmp
xlat
test
jecxz
fsubr
ret
dec
leave
fucom
enter
in
ljmp
lock
cmp
test
out
hlt
fcmove
ror
xchg
xchg
in
mov
ret
ror
jmp
jmp
fcmovnb
xlat
mov
mov
std
jmp
into
fcomip
cs
shl
shr
aaa
leave
ror
lret
jmp
aas
out
rcr
cmc
stc
enter
xchg
xchg
repnz
shl
sarl
cld
das
iret
neg
jmp
fsubr
cld
inc
sti
xchg
mov
mov
into
jmp
stc
vpsubb
loopne
std
rol
xchg
std
aam
cli
out
in
fmulp
mov
out
loop
lock
cmp
cmp
int3
xrelease
sar
xchg
cld
jmp
out
lock
lock
cmp
out
xchg
sti
stc
loope
std
nop
loopne
aam
vpsubq
cmc
sti
lret
lock
sar
fdivrl
test
fisttps
loopne
mov
in
in
enter
in
xor
out
cmp
xlat
jecxz
std
rcr
ret
leave
rcl
nop
lret
out
icebp
lret
out
loop
repz
cli
out
std
cmp
in
and
stc
xlat
out
and
jmp
in
out
mov
lret
hlt
out
call
test
iret
cli
addb
in
iret
xchg
iret
call
int
clc
cmp
sarb
fmul
div
std
movb
or
lret
loope
xor
stc
jecxz
cmp
fcom
into
test
aad
cld
flds
out
lds
xor
aad
out
cli
sar
in
inc
in
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
loopne
fcom
repz
mov
lret
in
loope
into
xchg
mov
lock
cld
jecxz
cmp
fnstcw
mov
out
xchg
cld
cli
in
xchg
xchg
in
fstp
lock
fnstcw
aam
ret
cli
stc
fadd
loopne
leave
nop
mov
xchg
mov
int3
lret
cmp
hlt
mov
ds
xlat
out
in
out
out
in
xor
ss
cld
in
idivb
std
ret
loop
fxch
add
mov
out
ret
xor
cmp
xor
imul
sbb
cld
loopne
test
loop
rol
or
enter
imul
aaa
in
idivl
and
clc
fst
cmp
ror
cli
nop
addl
in
or
loop
cld
aas
cmp
out
out
mov
int
out
iret
jmp
out
cli
into
ds
cmc
into
loopne
stc
addb
mov
jmp
out
rolb
cmp
fdiv
and
int3
mov
mov
mov
into
xor
call
rcl
hlt
les
rorl
or
fucomp
jecxz
loopne
out
leave
xor
cmp
xlat
stc
xlat
repnz
cmc
cmc
enter
leave
jmp
test
int3
incb
jecxz
in
cli
xlat
iret
rcl
loop
clc
loopne
std
call
leave
std
ret
lret
into
jmp
int
cmp
cld
fcmovb
out
aad
stc
ljmp
jecxz
icebp
hlt
out
in
xor
shlb
xor
ljmp
rol
xlat
mov
int
xchg
in
test
rcr
mov
aad
into
sti
ror
xor
fptan
and
out
mov
nop
icebp
std
into
icebp
repz
xor
in
vaddsubps
imul
cmp
fcomi
cld
iret
fcomi
cli
fcomp
mov
out
ljmp
ss
hlt
cmc
int
div
shr
test
cli
ljmp
xchg
rcl
in
cmp
call
test
ret
hlt
loop
fdivrp
mov
icebp
xchg
iret
repnz
fsubrs
hlt
cmc
cmp
ss
dec
roll
jmp
int3
orl
aam
int3
div
aam
std
out
fcmovnbe
fiaddl
xlat
hlt
jecxz
stc
std
nop
call
icebp
shl
in
repz
fdivrs
icebp
idiv
imul
xchg
ret
mov
loop
jmp
jmp
mov
dec
xor
jmp
enter
lock
cmp
ljmp
out
out
and
divl
lret
call
lret
int
stc
cld
bnd
dec
in
jmp
ljmp
jmp
sub
sub
cld
cmp
adc
out
xchg
fisttps
aad
cmp
xlat
loope
int
xor
sti
xchg
repnz
test
sti
leave
call
out
aad
call
flds
xlat
leave
fdivr
add
fninit
nop
loopne
loope
out
ror
xor
fmul
cmc
idiv
cmp
out
rcr
lret
enter
xchg
or
ljmp
repz
sarb
loopne
and
cmc
ds
loopne
cli
loopne
fsubp
xorb
lret
ror
fdiv
cmc
rol
clc
sarl
test
mov
ret
out
out
lock
mov
aad
lock
cli
adc
in
test
cli
in
xchg
mul
not
cli
jmp
hlt
ds
imul
into
cmp
ret
fildl
nop
lock
xchg
out
xchg
shr
xor
cmp
std
icebp
aaa
ljmp
std
rcr
loope
mov
in
hlt
lret
aad
xor
clc
sub
repnz
in
roll
les
mul
flds
jecxz
into
enter
out
iret
clc
hlt
cmpl
rorb
in
in
in
lret
out
in
xor
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
out
cmc
int3
cs
fldl
out
inc
fmul
ret
ljmp
mov
fisttps
out
xor
int3
fcmovu
std
out
in
div
fdiv
loope
jecxz
out
xchg
sar
in
xchg
mov
cmp
xor
shl
cmp
shl
and
loope
fsubr
xchg
out
iret
icebp
divb
out
cmp
repnz
int
vcvtdq2pd
in
test
hlt
aam
enter
divl
idivl
fsqrt
iret
ret
jecxz
stc
rol
mov
aam
fmulp
fdivp
mov
repnz
int3
out
enter
out
cmp
in
roll
int
xchg
in
lock
enter
in
iret
loope
repz
sar
clc
lret
jecxz
movl
cli
cmp
std
ror
loopne
repnz
ret
cld
in
fmuls
roll
in
out
neg
in
testb
test
int3
cld
mov
xchg
int
repnz
hlt
ss
shr
jmp
aaa
enter
shl
test
aam
jecxz
test
fucomip
mov
lock
xor
neg
fdivrl
sti
ret
cmp
loopne
loop
fsubr
stc
shl
out
sub
nop
into
in
rol
cli
hlt
std
fucomi
cmp
sarb
jecxz
out
in
out
fimull
call
aam
jmp
leave
std
iret
rcr
out
aaa
iret
aam
int
loope
sar
loope
in
clc
stc
cmc
stc
call
jmp
xor
enter
xlat
in
in
into
adc
not
repnz
ffree
repnz
std
call
inc
loop
decl
into
leave
nop
ljmp
fsubrp
jmp
in
stc
icebp
cmc
sar
fcmovne
int
decb
xchg
xor
out
out
fdivrs
rol
rcl
xchg
out
jmp
div
hlt
out
int3
xor
lock
fsubr
cli
int
filds
fxch
imul
xchg
xchg
jmp
xlat
sar
hlt
fcom
into
cmp
fmulp
shl
cmp
ror
movb
fisttps
hlt
aad
aaa
aaa
int3
in
hlt
adc
leave
incl
icebp
loop
xchg
repnz
out
leave
aam
cmp
ror
testl
jmp
in
loop
aad
repz
aas
repz
cmp
aam
ret
inc
loopne
or
out
call
cmp
lret
fsubrp
rolb
ret
cmp
ret
loop
rorb
ret
out
leave
rcr
shl
loopne
repnz
jmp
cli
jmp
loopne
ss
in
cmc
cmp
cmc
cld
ret
loopne
fstp
test
or
int
out
lret
out
shr
in
xor
iret
repz
jmp
test
rcr
fucomip
ret
xor
aad
neg
int
cmp
in
xchg
shl
jecxz
call
out
repnz
ljmp
fdiv
out
jmp
loopne
aam
test
shl
ret
mov
test
repnz
lret
xor
dec
clc
clc
div
cmp
icebp
out
fcom
cli
test
faddl
xchg
repz
les
int
shlb
into
icebp
icebp
fdivrl
jecxz
cli
ffreep
ljmp
adcl
aaa
in
out
ss
out
fdivp
ret
out
mov
fmulp
loopne
loope
in
cli
xchg
xchg
repz
into
aaa
cmp
shl
sarb
stc
fcmovne
aam
neg
fucom
in
loop
sub
cmc
in
jmp
lret
cmp
clc
icebp
shr
neg
aad
out
sub
out
loope
dec
repz
xor
cmc
fcmovbe
stc
cmc
cmc
xlat
cmp
ret
into
div
repz
hlt
clc
loop
lea
in
loope
rcr
aaa
int
fidivrs
jecxz
ret
aam
repnz
add
xor
into
decl
add
add
rcl
rol
fcomp
lahf
mov
jae
jg
roll
jle
clc
mov
fmull
mov
repz
repz
ds
filds
enter
loopne
int
xchg
loope
mov
leave
xor
shr
iret
int
out
fdiv
in
mov
fmuls
shr
xchg
cmp
enter
fcmove
out
icebp
ret
loopne
rolb
fdivrp
out
lret
enter
lea
aam
lret
lret
aas
ror
sar
filds
fisttpl
lret
cmp
clc
ss
in
jmp
ret
aam
jmp
in
fcomip
int3
xchg
jecxz
shl
in
jmp
shlb
out
fsubrp
inc
loopne
out
into
xchg
hlt
movl
lret
shr
not
in
cmc
xchg
clc
xlat
mov
call
std
mov
shr
xor
clc
hlt
aaa
in
lret
call
in
xchg
mov
rcl
cmc
call
aam
clc
lret
cmp
icebp
test
hlt
rcl
in
aas
loop
loop
addb
iret
shr
sti
out
cmp
in
ds
stc
test
loopne
in
cmp
sti
test
xchg
jmp
shl
leave
cmc
shl
ss
cmp
cmp
in
ret
test
lret
xchg
in
sub
call
ror
rcr
cld
aad
jecxz
lret
cmp
in
xor
out
aam
sarb
jmp
fidivrl
rcr
vcmpss
cmc
fcomi
xchg
jecxz
sar
and
das
in
lret
cmp
cmp
jmp
ds
ds
cmc
xlat
cli
clc
clc
jecxz
cmc
std
int
addl
sti
imul
lret
fdivp
dec
inc
aad
testb
call
shl
xor
shr
cmp
hlt
test
in
fcomip
lock
ljmp
leave
lock
lret
into
aad
clc
xor
iret
lret
rcr
jecxz
rol
sti
enter
mov
in
sti
sbb
mov
das
icebp
ret
cld
sti
jmp
aas
out
aad
cmp
stc
std
xchg
xlat
or
repz
xor
cmp
repnz
int
cmp
mov
idivb
ljmp
call
clc
ret
jmp
lret
aad
fsub
sti
enter
cld
cli
icebp
call
xchg
leave
iret
aad
ljmp
loop
in
loop
fstp
hlt
cld
xchg
mov
in
jecxz
in
xor
fucomi
into
not
lock
imul
xchg
aas
loopne
fiaddl
sub
in
ljmp
xor
icebp
fildl
aas
into
out
sbb
lret
dec
out
mov
orb
cmc
sar
bnd
cmc
ds
fld
xchg
in
hlt
sbb
fucomip
mov
hlt
stc
xor
or
ret
add
ret
stc
test
hlt
test
in
sar
call
repnz
add
fsubp
jecxz
nop
incl
ret
in
lret
xor
das
in
loopne
lret
loopne
int3
fstp
sti
fdecstp
cmc
jecxz
out
nop
repz
xor
aam
xor
aam
cmp
adc
jmp
sti
ljmp
out
clc
sarb
cld
fdiv
fucomp
faddp
add
in
loope
xchg
jmp
repnz
cmpb
cmp
mov
addl
out
rcr
jmp
lock
cmc
aas
repnz
ljmp
lock
in
out
xor
cmp
fnstcw
cmp
aam
fcmovnu
hlt
loop
mul
mov
xchg
xchg
adc
imul
in
cmp
sti
jmp
in
not
fiadds
lret
in
fildl
into
shl
int
out
hlt
addb
sti
ret
ret
in
mov
aaa
xor
fcomi
xlat
idivl
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
pushf
xlat
sahf
add
add
in
cmp
into
fst
call
fcmovu
out
clc
jmp
test
int
out
imul
stc
repz
fcmovnbe
xlat
adc
cli
stc
ljmp
test
fnstenv
cmp
ljmp
loope
repz
xchg
std
fmuls
out
enter
int
cmc
xlat
lock
idiv
ror
ret
fadd
mov
mov
shl
shl
in
out
mul
in
aas
icebp
or
loopne
shl
stc
mov
test
xchg
repnz
hlt
int
in
ds
cmp
xor
out
rolb
rorb
lret
shl
shl
ror
ror
stc
cmp
shl
out
test
mov
jecxz
mov
loop
in
test
in
jmp
stc
cmp
roll
fsub
mov
in
loop
int3
repz
aaa
ds
fidivrs
ds
jmp
cmp
sub
mov
in
leave
int3
cmp
hlt
cmp
cmp
cmp
fcom
ror
fsqrt
in
stc
cld
lret
xchg
and
xor
leave
cmp
stc
cmp
fdivrl
iret
ror
lret
fisttpl
nop
mov
ror
test
rcl
loope
cmp
rol
call
in
lea
jmp
lret
int
cmp
repz
sub
in
stc
repz
fst
clc
ljmp
jmp
repz
ds
lret
ds
ret
addl
in
nop
ffree
das
xlat
cli
jmp
iret
std
iret
fcmovnbe
fiadds
jmp
jmp
sub
ljmp
test
int
bnd
mov
iret
fcomp
cmc
into
xor
stc
cmp
sarl
cli
xchg
test
xlat
rcr
cmp
cli
hlt
cmp
test
xchg
in
xchg
orb
ss
jmp
cli
cmp
fsubrp
idivb
in
lret
in
ftst
in
loopne
in
nop
xor
into
repnz
ds
jmp
cli
std
loop
jecxz
repnz
lret
aad
stc
in
in
xchg
in
out
leave
enter
cmp
lret
cld
repz
iret
icebp
fucomp
testl
out
loopne
in
fidivrl
cmc
cmp
in
shl
cmp
in
or
fsubp
clc
out
fxch
out
rcl
cmc
icebp
in
out
repnz
cmc
aam
jecxz
imul
call
fcmovnb
xlat
fdivr
sti
rolb
repz
cli
out
ds
repnz
icebp
jecxz
stc
incl
mov
into
test
leave
xor
lret
shl
shl
cmp
rcl
std
hlt
mov
lock
mov
xor
aaa
in
cli
cmp
cmp
in
out
ds
jmp
mov
xchg
lret
xor
fidivl
rolb
idivb
jmp
loopne
cli
jmp
in
in
in
in
shr
in
faddp
lock
ljmp
xlat
rcr
les
in
nop
loop
rcl
xlat
rol
cmp
xor
hlt
cmp
cmp
cmp
jecxz
ror
out
jmp
lock
loopne
and
out
cmc
ss
int
fsubr
fnstenv
repz
aas
aad
clc
aam
popl
mov
int3
shl
leave
aaa
cmp
hlt
in
ret
loope
ret
shl
mov
out
fsubr
out
fsubr
cmp
jecxz
shl
fldl
test
sti
icebp
xchg
lret
sti
rcr
out
lret
iret
in
int3
icebp
xlat
icebp
fucomip
clc
leave
loopne
in
clc
mov
loopne
clc
xor
cmp
ss
not
in
aam
out
test
mov
in
lret
orl
xor
cmp
repz
add
mov
xor
mov
mov
loop
fsqrt
xor
rcr
shl
faddl
faddp
test
sbb
rcr
in
jmp
xchg
shll
lock
in
stc
int3
repz
cmc
loope
cmp
incl
out
mov
hlt
xchg
loopne
leave
ret
xlat
iret
fst
lock
sbb
repnz
into
repnz
fsubr
sub
lret
ljmp
enter
call
iret
clc
stc
in
std
mov
incb
jmp
add
inc
add
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
ds
sbb
jg
push
add
xchg
in
lret
fcomi
cs
jmp
fcomi
aam
out
xchg
lret
mov
in
test
aam
enter
cmp
cmp
ret
faddp
xlat
lret
jecxz
mov
mov
out
repz
into
cmc
aas
rolb
fdiv
mov
test
iret
mov
fcmove
xor
fnop
shl
cmp
lock
fadd
rol
in
test
decb
xchg
repnz
fcom
shr
aad
cmp
loopne
out
ret
fprem1
fcmovu
leave
sbb
jmp
xchg
loopne
xlat
in
jecxz
lret
out
cmp
xlat
in
out
rol
clc
stc
mov
rolb
in
int3
repnz
jmp
out
jmp
neg
aad
fcmovu
test
test
into
lret
xor
out
sub
aad
aaa
neg
cli
mov
jmp
ljmp
aad
aad
xlat
aaa
out
out
xor
cmp
repnz
iret
and
rol
cld
in
sti
into
fcomi
ror
ljmp
cmp
in
call
loopne
idiv
cli
call
xchg
call
loope
cmc
cmp
fdiv
incb
fadds
mov
leave
iret
cld
in
int3
out
lret
out
aad
xor
xlat
out
filds
fmulp
std
iret
lret
out
out
out
jecxz
ret
aaa
std
hlt
test
idiv
fld
and
fdiv
fiadds
cmc
call
iret
cmp
into
ds
in
std
sti
fimuls
loopne
fcos
loopne
in
out
ljmp
out
hlt
rcr
stc
hlt
shl
aas
jecxz
enter
test
out
div
lret
xor
ljmp
neg
xor
or
jmp
fldl
das
jecxz
hlt
div
cmp
cmp
aad
fdiv
add
leave
int3
out
test
hlt
in
imul
xor
cmp
jmp
repnz
aad
roll
in
flds
cld
int3
call
sti
into
out
call
aaa
fcmovnbe
stc
ret
xchg
ljmp
test
fidivrl
lock
out
lock
ret
cli
icebp
std
test
mov
out
fcmovnu
clc
out
lret
iret
xor
call
lret
stc
rcl
stc
aam
loope
fadd
fucom
in
leave
addb
int
cld
hlt
into
fcomp
int
cmp
icebp
aad
jmp
lret
loop
out
nop
xchg
out
xchg
xor
xor
in
repz
sar
clc
cmp
aam
test
loop
sti
xchg
std
sar
into
repz
in
enter
ret
cmc
ret
rcr
mov
mov
mov
in
repz
repnz
fnstsw
shl
aas
sbb
loopne
nop
jecxz
out
ficoms
xor
aad
out
out
cli
loop
repnz
fcmovu
test
mov
call
leave
repnz
loopne
aam
aad
repz
lock
aas
fnstsw
shl
loopne
out
ljmp
enter
hlt
repnz
cmp
in
addl
jecxz
incl
jecxz
out
xlat
shl
shlb
in
ds
cmp
aad
in
fmuls
in
loop
in
repz
aam
jmp
repz
clc
loop
stc
and
ljmp
ljmp
repnz
icebp
into
int
or
fdivrp
fucom
jmp
xchg
orl
ss
fiaddl
cmp
loope
clc
loope
testl
enter
ss
cmc
cli
rcr
repz
mov
sti
jmp
ret
out
xchg
adc
loope
lret
enter
cmp
jmp
xlat
in
addb
out
iret
xchg
rol
fucomip
shl
xor
fstp
rcr
incb
fld
fadd
out
fld
into
leave
icebp
rorb
clc
das
stc
xor
jmp
ret
dec
stc
xor
aam
ds
out
xchg
fucom
std
xchg
shll
out
enter
dec
sarb
xlat
loopne
aad
ljmp
cld
les
stc
sub
cld
fnstsw
testl
out
fcomp
out
and
in
shrb
into
loope
mul
cmc
jmp
add
hlt
test
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
sbb
jg
push
add
movb
orl
aaa
imul
cld
hlt
int
rcr
in
and
mov
fstl
mov
xchg
aaa
in
cmp
xlat
call
ret
aam
idiv
bnd
sti
iret
xchg
out
fists
rcl
aam
mul
shr
fcmovnu
sti
inc
clc
iret
iret
rol
les
ljmp
enter
aam
aam
iret
sar
xorl
fucomi
test
mov
ljmp
mov
out
jmp
sar
imul
loop
std
fildl
lock
xchg
into
in
sub
jecxz
fdivrp
lret
test
test
fcmovu
cli
repz
in
in
in
movl
not
rcr
cld
xlat
stc
cmp
cmc
shl
ret
leave
in
addb
hlt
in
les
jmp
cmp
ljmp
loope
leave
jmp
rcl
ljmp
cmp
fdivr
jecxz
jecxz
addb
lds
ret
clc
cli
fscale
jmp
fildl
orl
aam
xor
out
cmc
cld
cmp
cmp
cmp
rolb
div
enter
xchg
icebp
lds
aam
out
int
cmp
out
jecxz
sbb
iret
fcmovnb
sub
leave
out
in
into
in
int
int
out
out
hlt
shr
cmp
icebp
cmp
in
shl
leave
fadds
jmp
nop
mov
xor
loop
fadds
enter
in
sti
cld
mov
in
out
out
ljmp
sti
out
sarb
cmp
jmp
in
aam
cmp
xchg
iret
shl
cmc
sub
cmp
in
rcr
fcomi
filds
inc
decb
imul
ror
out
xor
jmp
ret
out
int3
in
fmulp
nop
rorl
stc
jmp
idiv
idivb
xlat
xlat
cld
sti
imul
fimuls
stc
rorb
xchg
xor
aad
repz
jmp
cmc
test
aam
sti
icebp
in
fsub
mov
sub
loope
xor
leave
xor
stc
in
ljmp
test
enter
testl
cs
neg
cli
shr
rolb
addl
mov
mov
shl
int
in
div
repz
cmp
cmp
aad
mov
out
clc
cmp
icebp
loop
loop
in
loop
ss
rcl
loope
stc
out
sbb
xchg
cmc
lret
and
fdiv
subb
cmc
ret
fdivs
rcr
iret
rcr
sub
mov
xchg
jecxz
in
cmp
ljmp
flds
not
in
stc
mov
dec
rcll
sti
aad
ljmp
fcom
cli
movl
lret
sti
mov
jmp
out
fisubrl
xlat
hlt
and
jecxz
test
addb
out
loopne
dec
in
into
out
xor
out
jmp
sar
call
stc
fsubp
flds
out
call
cmp
xor
sar
fsub
ret
cli
not
xchg
addb
rol
xor
idivl
sarb
cmp
shl
jecxz
adc
movl
xor
cmp
xor
fnstsw
loope
sub
lret
int
cli
lret
in
out
repnz
shr
xor
repnz
loop
in
stc
std
cmc
loop
fucom
adc
rclb
loop
lock
int3
xor
sarl
cmp
ds
rorl
jecxz
fcmovnu
lock
aam
clc
cmp
lds
ss
fdivrp
cld
lock
fdiv
sar
aam
mov
fcmove
jmp
cld
cmc
out
mov
test
jmp
out
or
out
cmp
fdivrp
fisttpll
test
out
xor
shl
fidivl
rcl
fdivrs
filds
xchg
loopne
jecxz
out
mov
call
loopne
ds
rolb
cmp
xchg
fdiv
lock
in
jecxz
call
cmp
in
fcos
fsubp
in
cmp
jmp
mov
div
lock
xor
mov
int3
arpl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
lock
ret
into
idiv
rcr
loopne
enter
fimull
xor
shl
out
aam
idivb
xlat
fcomi
repnz
cld
sar
loop
out
jecxz
std
mov
shr
icebp
xchg
shrl
aam
cmp
repnz
icebp
shl
out
lock
repz
mov
int3
test
lret
hlt
in
div
cmp
rcr
std
jecxz
rolb
fadd
movb
xchg
repz
in
xor
ss
enter
cli
int
cmpb
mul
ret
test
in
fiaddl
lret
sub
lret
sbb
out
out
xchg
fcomi
neg
in
std
cmc
mov
lret
fsubr
cmp
int
jmp
int
sti
shl
loopne
decl
lock
call
shlb
cmc
sar
aas
sarb
xchg
xchg
mov
xchg
fcmovnu
xchg
lret
in
xor
iret
shl
xor
aas
stc
roll
fcom
in
xchg
loopne
int
loop
test
into
iret
in
lret
iret
cmp
out
cmp
std
xchg
incl
fucomip
xchg
mov
lret
out
in
in
divl
repz
fucomp
in
sarl
out
aam
lret
and
in
aam
out
leave
out
jmp
adc
aas
fdivrp
lret
lret
orl
jmp
jmp
lock
loope
in
fcmovb
jecxz
in
mul
addb
loopne
adc
xor
out
bnd
clc
not
lock
out
push
aad
mov
lret
mov
out
icebp
ret
cmc
cmc
aas
loopne
xor
fdiv
filds
ffree
stc
jmp
in
enter
mul
repz
int3
fdiv
out
and
mov
in
lds
xchg
out
mov
ret
call
shl
loop
clc
in
dec
neg
rcr
orb
fdivp
loop
lock
cmp
cmp
repz
aas
loop
fdivr
cli
std
in
jmp
vpsadbw
fpatan
in
rcr
ror
lret
lret
fcomip
iret
shl
test
ljmp
jecxz
in
enter
fmul
rcl
aad
xor
int
ret
sti
mov
fldl
or
rorl
xor
leave
cmp
icebp
cli
loope
icebp
inc
sti
out
kmovb
out
rcl
shll
in
cld
imulb
in
xlat
into
out
lret
in
clc
cmc
rcl
fldl
in
out
or
shr
test
neg
fmul
aam
cmp
test
test
cld
orl
xor
out
shll
xor
aam
repnz
loope
loopne
cld
sarb
movl
in
in
xor
iret
sarl
int3
std
loopne
not
xchg
mov
test
mov
lock
repnz
xor
test
test
jecxz
mov
shl
mov
out
out
sar
stc
repz
ret
ffreep
and
lret
loope
repnz
jecxz
lock
aam
jmp
out
cmp
int3
in
out
clc
enter
loopne
loop
ljmp
cmp
cmp
cmc
enter
cmc
std
fcmovnu
sar
in
in
idiv
mov
test
jmp
and
shrb
clc
xor
into
std
xor
aaa
cmp
in
fisttpll
leave
loopne
mov
add
clc
iret
icebp
shl
imul
icebp
not
aam
idivl
in
repnz
fmul
ljmp
leave
clc
sti
cmp
ror
sarb
xor
fdivr
repnz
cli
ficoms
out
rolb
xchg
cmc
loopne
fadds
lret
into
int3
xor
ljmp
iret
cli
fnstsw
test
mov
xchg
xchg
aad
shl
cli
std
lret
in
cmc
std
in
idiv
fsub
fstp
adc
out
sti
addb
in
icebp
out
xor
xor
ds
in
into
ret
not
shr
int3
test
mov
lret
testb
aam
into
jmp
cmp
mov
ljmp
int
xchg
iret
das
out
leave
ljmp
loope
cmpb
fcmovne
fildl
xchg
nop
int3
int3
leave
cmc
sar
fcmovnb
out
fdiv
neg
mov
sbb
xchg
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
rcrb
add
out
lock
fdivrp
stc
repz
fdivr
jecxz
incb
loop
jmp
clc
les
xor
stc
cmp
cli
into
cmp
bnd
test
clc
in
xchg
out
repz
int
out
repnz
lock
cmpb
int3
clc
clc
mov
incb
cli
call
in
aam
lock
repnz
xor
loopne
cli
cmp
addl
sti
lret
loop
mov
xor
lds
call
sti
roll
out
fsubr
lea
xchg
aam
xor
shl
lret
out
icebp
sti
adc
xlat
aad
fdivrp
cmc
cli
fcomp
jmp
fldl
xchg
aas
aad
xor
ljmp
rorb
sti
std
mov
into
in
ret
xor
cmp
out
xchg
call
ljmp
xor
in
in
out
xor
cmc
shr
div
loop
icebp
cmc
sar
test
dec
loop
loope
cmc
aad
loope
xor
shl
stc
repz
icebp
in
hlt
cld
hlt
repnz
loop
in
fisttpll
hlt
vpavgw
leave
fcmovbe
shl
xor
in
int
fadd
leave
loop
lea
test
mul
fcmovnbe
lds
into
cmp
cmc
int3
clc
rcl
ds
xlat
fdivr
int3
enter
loopne
xchg
int
sub
in
les
fmulp
leave
int
lret
hlt
iret
iret
fcomp
mov
test
sar
rcr
repz
xor
lret
xor
aas
ret
not
rcl
rol
mov
in
cli
in
shr
out
shr
aam
repnz
fnstsw
sti
cmp
aad
fdivr
faddp
rclb
xor
test
cmp
xor
jmp
cmp
rolb
loope
test
loopne
imul
hlt
out
clc
cld
cli
cmp
lret
in
std
roll
mov
sub
mov
into
cmp
shl
xor
xchg
jmp
mov
and
jmp
icebp
mov
shl
mov
lret
loope
aam
lret
cld
sti
jmp
jecxz
cmp
lret
int
cli
std
xchg
jecxz
fbstp
shl
repnz
lret
hlt
inc
ds
movb
out
lret
ljmp
repz
shr
cld
xor
in
cmp
int3
loopne
aas
cmp
cmp
or
lret
out
xor
stc
iret
hlt
cmp
repnz
shl
in
rolb
mov
iret
out
xchg
xchg
mov
jecxz
shr
cmc
fst
sti
cmp
cmp
test
clc
leave
cli
and
jecxz
aam
in
into
in
in
fdivs
divl
aaa
loope
clc
ret
mov
div
mov
in
aam
out
jecxz
cli
repz
aam
cmp
cmp
rorl
mov
mov
cmc
loopne
repnz
fsubr
std
sar
loopne
sar
std
fildl
sbb
sti
nop
jecxz
cld
test
test
shl
leave
fmul
in
clc
lret
fcomi
in
loop
stc
clc
in
std
stc
out
and
stc
ljmp
int
neg
fcom
ds
leave
ljmp
adc
into
jecxz
clc
test
cli
std
loope
fcmove
fsub
div
mov
aad
loope
in
fiadds
out
enter
cmc
ljmp
idiv
ds
fptan
loope
xlat
std
cli
out
int3
fmul
std
mov
int
in
xor
out
std
out
cmp
add
enter
lock
icebp
not
loope
jmp
in
repz
faddl
ret
mov
in
in
sub
xor
clc
shl
aas
int
in
cmp
lock
mov
out
cli
repnz
out
in
xor
cli
cmp
cmp
cli
cmp
lret
lock
xchg
mov
repz
out
ret
cmc
leave
fdiv
into
cmp
lock
sarl
lock
enter
into
mov
addb
ss
call
rcl
out
loopne
rol
out
ljmp
loop
call
fsubrs
cli
fdivrs
cmp
out
iret
aad
rol
ret
cli
std
mov
icebp
in
lock
call
sub
cld
stc
cmp
shl
cmc
cmpb
test
iret
mov
mov
into
xchg
xchg
sub
xor
cmc
cmc
les
ret
ror
loope
lret
mov
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
jb
test
push
add
vpminsw
roll
ror
int
int
xor
aas
faddl
lret
xchg
jmp
mov
shr
cmp
lret
jmp
jecxz
iret
xlat
mov
test
mov
jmp
shl
fsub
hlt
int3
cmp
lock
sbb
jmp
int
lret
in
repz
imul
fdivrs
leave
aad
cld
icebp
in
hlt
repz
cmc
mov
xchg
jmp
ljmp
ss
fsubr
aam
shl
fucomi
aad
fnclex
jecxz
out
xchg
xchg
test
cmc
repnz
aad
fidivl
roll
into
xlat
flds
ljmp
mul
out
ljmp
ljmp
lds
ljmp
decl
in
shr
out
icebp
cmp
cmp
cmpl
call
loopne
out
sub
aam
xor
stc
cli
xor
aad
ljmp
repnz
sti
in
in
enter
int
xor
lock
repnz
xor
leave
fxch
aad
rcl
jmp
mov
call
rcr
shl
xor
cmp
cmp
xlat
aam
stc
ljmp
loop
icebp
test
shr
fsqrt
out
out
out
iret
cmc
jmp
test
loop
cmp
addl
shl
xor
lock
cmp
clc
lret
fucomp
hlt
idiv
fcmovb
mov
xlat
sbb
xchg
cld
adc
in
icebp
out
sub
fcmovnu
idiv
jecxz
jecxz
cli
mov
roll
clc
fsubr
in
repnz
shr
icebp
leave
out
cmp
cld
sti
fsubr
decl
shl
jmp
loop
out
leave
out
cli
test
ret
roll
into
orb
icebp
lret
cmp
out
lret
lock
flds
int
jmp
jmp
in
clc
jmp
xlat
lock
int3
in
aas
cmc
fldl
repz
xchg
fucomip
movl
into
int3
idivb
jmp
stc
shl
or
jmp
in
xchg
jmp
imul
cmp
fnstsw
fistpll
cld
rcl
loopne
test
cld
jmp
mov
in
lock
sub
shll
aaa
cmp
aam
iret
rcr
out
addl
aad
leave
in
ror
loopne
cmp
aas
loop
fcmovnbe
loop
aam
loopne
fsub
out
adcl
cmp
aad
iret
cli
aad
call
and
in
mov
cmp
fcmove
jmp
clc
in
jecxz
les
fsubr
fsubr
iret
xchg
fsub
loop
cld
sti
icebp
loope
fldl
sti
mov
in
mov
loop
xchg
out
ljmp
cmp
sar
ret
aam
loope
call
addl
ror
out
cmp
cld
rcr
ffreep
leave
ds
jmp
iret
xchg
out
ret
in
leave
sub
shl
clc
xlat
shl
ds
test
aas
inc
and
fiadds
in
xor
aaa
fdivr
faddl
repnz
loop
test
movb
in
xchg
not
int
xor
aad
int3
out
out
clc
loope
xchg
cli
fdivrp
loopne
xor
jecxz
jmp
shlb
cli
cmp
fdivp
fmulp
shl
int
xchg
roll
mov
aam
xor
in
cmp
fstp
cmp
int
aad
shr
fcomip
sar
stc
call
in
rclb
rol
cli
lock
iret
add
rcl
cmc
rcr
mov
std
loopne
in
mov
loop
int3
aad
not
aad
cmc
cmc
std
fyl2xp1
rcl
sti
cli
fiadds
repz
lret
shlb
call
cmc
ds
cmp
lret
cmp
imul
cli
ficoml
aaa
call
xlat
xor
in
out
loope
loope
repnz
fadd
in
mov
cmc
divl
out
ss
aam
stc
shr
fcmove
rcl
fcmovnu
call
sti
call
xchg
repnz
xchg
lock
loop
neg
aam
cmp
shl
clc
test
neg
mov
in
std
leave
loop
orb
out
fidivrl
stc
push
mov
jmp
cmp
jmp
aad
aad
aad
aad
push
push
scas
cmp
pop
dec
lret
jle
add
fdivr
lock
rcl
clc
loopne
neg
shl
repnz
mov
xor
cmp
ror
lret
jmp
rcl
ret
fcmovnu
ljmp
imul
out
xlat
aad
not
icebp
std
repnz
fbstp
sarb
xrelease
icebp
mov
in
leave
cmp
jmp
ror
cld
loopne
and
ljmp
out
xor
fld
lock
aam
fucomip
aad
xor
ljmp
mov
int3
into
xchg
shrb
aad
shl
leave
fcmovu
jecxz
aad
roll
call
fiadds
aad
into
sarl
jmp
cmp
test
aas
stc
add
test
mov
les
jmp
rcr
int
loope
and
fdiv
not
hlt
rorl
orl
int3
xlat
xlat
stc
std
fcos
loope
rcl
add
loop
xchg
xchg
out
rcr
call
ljmp
xlat
repnz
fisttpll
fcmovnb
fcmovnbe
in
xchg
ror
loop
in
sarl
repnz
sar
cld
out
fucom
in
ret
enter
fdivp
xchg
out
xor
xlat
in
fcmovne
in
out
cmp
in
aam
leave
flds
xchg
vshufps
cmp
out
not
loopne
addb
leave
xlat
sti
into
out
repnz
ljmp
lret
jmp
aas
leave
sti
div
in
std
ror
fmul
fcmovnu
lret
in
out
jecxz
icebp
aam
hlt
std
lock
call
ret
aam
repz
jmp
xchg
xlat
jmp
icebp
shl
in
mov
aad
call
clc
fcmovnbe
cli
cmp
incl
xor
into
loopne
in
cmc
fcmovu
ljmp
cmp
jmp
test
mov
lret
cmc
mov
aaa
das
leave
cli
xor
neg
shl
lret
neg
shr
hlt
repnz
mov
lret
icebp
cli
mov
lds
hlt
fmul
ss
fdivp
stc
test
in
stc
flds
loopne
xchg
ret
addb
out
idiv
cmc
fadds
loop
ffree
jmp
icebp
out
fsubr
jmp
lock
lock
jmp
int3
xor
stc
or
sti
lock
in
cmp
out
jmp
xor
fmulp
repnz
leave
clc
sar
jecxz
adc
fildl
in
cmc
mov
in
cmc
ret
cmp
out
cmp
fcmovbe
loopne
cli
test
test
inc
test
test
sar
xchg
repz
test
fdiv
cmp
faddl
in
xchg
ljmp
call
int3
enter
enter
rol
int
test
stc
fmulp
in
jecxz
in
ss
not
sti
sarl
test
clc
icebp
sti
testl
orl
in
leave
rolb
aad
jmp
mov
int
std
into
lret
fdiv
in
divb
sarb
out
fdiv
int3
fld
sti
cmp
cli
xchg
ret
test
xchg
fcmovu
loopne
mov
xchg
in
aaa
rcl
leave
clc
out
aad
cmp
xor
call
xchg
lret
out
jecxz
xor
repnz
ss
iret
or
hlt
addl
leave
loopne
mov
repnz
stc
xor
rcr
rcr
filds
imul
cld
fmul
mov
aam
loope
hlt
sarl
int3
test
inc
rcl
call
jmp
clc
in
jmp
mov
enter
rcr
xor
cli
fmulp
sub
loop
out
loopne
in
leave
ljmp
loope
in
out
xor
cli
out
orl
xor
aaa
leave
int
hlt
aaa
std
shl
shl
sarb
iret
ror
in
mov
in
loopne
int3
hlt
into
out
in
out
in
into
std
in
cld
cmp
div
loopne
mov
rol
ror
test
jecxz
cli
lret
aad
rcl
cmc
cmpl
ret
xchg
out
addb
icebp
orb
call
neg
fscale
enter
cld
mov
jecxz
ret
in
call
jmp
int3
in
enter
cmp
xchg
jecxz
loope
loope
cld
enter
mov
test
enter
call
or
mov
jmp
aas
into
lret
leave
aam
dec
jo
daa
jp
xchg
and
add
add
jmp
out
ss
ds
add
mov
cmc
loop
enter
divl
int
shl
sbb
fidivrs
ds
shl
shr
and
std
orl
sub
neg
enter
aam
clc
xchg
cmp
fimuls
out
loop
xor
int
cmc
enter
fmul
repz
ret
enter
enter
test
std
int
lret
aaa
out
out
aad
lret
clc
div
loopne
cmc
fucomi
call
fsts
add
fsubr
repz
ss
cli
iret
int
in
repz
call
mov
mov
into
iret
icebp
leave
in
lock
icebp
cmc
loopne
fprem
aad
fcomip
std
call
fcmovnu
orb
repz
lock
loop
cmp
aad
out
ljmp
in
xchg
repz
test
loope
nop
in
mov
fmul
loop
cmp
cmp
lret
xlat
fcmovb
cmc
repz
loopne
std
idiv
fchs
nop
roll
cmc
in
xor
fcomp
in
out
icebp
shr
ds
rcl
idiv
loopne
in
mov
mov
shll
xor
cmp
fidivs
sarl
iret
mov
fsubp
mov
enter
repnz
fsubp
lock
lret
jmp
xor
fdivr
cmp
sar
in
aad
mov
jecxz
xchg
shr
call
cmp
fstpt
repnz
xlat
in
in
xchg
inc
cmc
jmp
stc
addb
clc
fyl2x
xor
divl
lret
ljmp
aam
leave
mov
filds
sub
xor
in
cmp
cmp
hlt
lret
shl
out
addb
out
cld
xchg
rclb
xor
ror
clc
int3
xor
in
and
jecxz
out
cld
call
mov
sti
lret
jmp
out
ror
xor
out
in
cmp
fcmovu
sar
ds
fimull
call
loop
ss
int3
cmp
in
repz
rcl
ror
out
xchg
sub
and
repnz
jmp
loopne
loop
jmp
leave
ljmp
shl
ds
cmp
cmpb
cli
loopne
enter
repnz
in
cmp
repnz
sarl
cmp
xor
test
test
loop
in
std
lock
int3
ror
enter
iret
cmp
filds
jmp
into
xor
clc
out
stc
lock
iret
loopne
clc
fstpt
rolb
cld
out
xchg
int3
hlt
xlat
call
cmc
into
testl
lret
in
lea
out
xor
rcl
in
lock
addl
repz
imul
push
cmp
hlt
in
ret
les
sti
fcom
fsubp
test
lret
xor
sti
lret
fcmovbe
icebp
loop,pt
sti
enter
add
loope
xchg
into
in
out
rcl
clc
xlat
repz
repnz
aad
hlt
div
clc
cli
cmc
fsubr
loop
ret
mov
fimuls
fsub
hlt
fcmovu
fcomip
in
xlat
stc
rcr
or
in
int3
out
in
sti
leave
fucomp
cli
lock
cmp
cmp
sbb
jmp
out
out
mov
jmp
icebp
clc
repnz
ljmp
test
mov
xchg
call
lret
shl
in
int3
int
lret
int3
lret
shr
test
fildl
call
loop
jmp
ret
int3
sar
divl
rcl
ds
lds
test
jmp
enter
lret
fidivs
leave
les
imull
cld
repnz
aam
in
shl
les
mov
adcb
aaa
int
iret
ss
add
xlat
loop
fucom
inc
mul
nop
cli
in
mov
shlb
shll
in
aad
out
ljmp
ret
in
repnz
ret
in
decl
icebp
xor
lret
hlt
shr
out
cmc
cmp
cmp
cmc
sbb
test
in
out
mov
or
shr
rol
cmc
cld
lock
xlat
icebp
iret
rcl
test
xlat
std
fdiv
test
hlt
cmc
mov
in
ror
ficoms
int
int3
divb
fdivs
fcom
stc
cmp
cmc
out
cmc
rcr
in
mov
ljmp
repnz
aad
aad
lret
inc
incb
fst
std
jecxz
call
mov
jmp
int3
ret
int3
int3
sahf
pushf
gs
or
jle
out
sti
fiadds
in
xor
xor
ljmp
mov
lret
int
xchg
out
aam
lret
xlat
cmp
rcl
sti
iret
int
loopne
sti
xlat
shl
fcomp
fmulp
fcmovb
xchg
out
xor
lds
cmp
clc
loop
f2xm1
flds
sti
xchg
filds
jmp
hlt
test
shl
int3
in
mov
out
lret
incb
xchg
int3
loop
vpminub
cld
in
fmul
std
rcl
cmp
notrack
ret
mov
mov
jmp
xchg
xchg
call
clc
call
out
aam
xlat
jmp
out
neg
xchg
lret
mov
xchg
sub
cmc
sub
stc
out
in
repz
dec
cmc
ds
cmc
ret
loopne
fprem
std
mov
out
ljmp
jmp
clc
out
in
fdivrl
hlt
iret
shl
and
test
jmp
out
leave
aaa
xlat
lret
aam
cmc
sar
cmp
shl
into
aad
rcr
rol
stc
int3
jecxz
in
out
xchg
ljmp
jmp
xlat
cmp
hlt
flds
or
lret
int3
std
out
xbegin
fdivp
std
cmc
cmp
in
lret
test
dec
fldlg2
mov
loope
lret
xor
clc
icebp
cs
cld
fdivr
rcl
fdivp
out
addb
fnstsw
mov
roll
loope
fcmove
cld
int3
xor
icebp
lret
sbb
fadd
fsub
test
mov
sub
cmc
out
fxtract
icebp
std
out
sti
test
aam
leave
shr
hlt
fcom
mov
stc
icebp
xchg
test
idiv
cld
enter
in
jmp
idiv
leave
repz
jecxz
jecxz
xchg
hlt
lea
call
in
cmp
faddl
cmpb
std
idiv
in
mov
shr
jmp
ss
jmp
lret
cmp
out
hlt
stc
shr
xchg
test
rorb
aas
out
aaa
aad
out
xor
cli
or
rcr
lock
fld
fdivr
out
out
mov
xchg
aad
enter
aad
testb
loope
cmc
fcmovu
ret
in
in
test
out
repnz
fdivr
call
repnz
fcmovnb
inc
ljmp
mov
ret
cli
repnz
aad
aam
cld
jecxz
ret
fst
ret
clc
loope
fcomp
test
xor
aad
shl
cs
cld
cld
in
stc
std
cmp
lret
nop
xchg
rcl
lea
xor
jmp
into
lret
lock
add
cmp
int3
in
in
clc
cld
out
out
mov
int3
into
in
clc
cmp
in
int
shr
sti
cmc
aad
loop
enter
call
call
xor
leave
cmp
jmp
hlt
fidivrs
lock
loopne
sti
sbb
idiv
nop
into
loopne
movl
aad
cmp
hlt
cli
iret
rcl
sti
ret
sti
iret
cli
int
decb
cmp
divb
repnz
rcl
xlat
ljmp
sbb
mov
in
out
repz
lret
fdivrl
cmp
div
sti
sti
addb
not
xlat
jmp
repz
cmp
rolb
stc
mov
enter
xor
ljmp
cmpb
in
jecxz
not
fdiv
std
loope
nop
xchg
in
icebp
xchg
shl
shl
not
hlt
call
shl
into
cli
rcr
cld
and
sti
out
call
test
fsubp
ljmp
shr
shr
faddl
sti
mov
in
xlat
adcl
fcomip
ret
enter
lock
cmp
repnz
out
adcl
hlt
cmp
fstpt
int
int
aam
aad
push
call
ljmp
in
iret
aas
aam
in
std
out
ds
int3
ljmp
hlt
xor
loop
mul
fimuls
shl
out
in
out
fcom
jmp
std
hlt
out
sbb
fcmovbe
lret
jecxz
adc
lea
int
jecxz
jmp
int
lock
iret
hlt
adc
stc
mov
jmp
xlat
into
in
rcr
ljmp
fdiv
movl
hlt
xchg
out
sub
fsubr
cld
lret
out
idivb
or
out
add
add
lret
into
fst
fstp
bound
insl
dec
adc
jle
add
test
call
lret
movl
cmp
cld
lret
cld
std
in
fmul
adc
in
icebp
out
in
ds
enter
icebp
into
xchg
in
xor
xor
shl
aas
cmp
stc
std
cmc
imul
int
mov
in
fldl
enter
testb
out
out
xchg
lret
call
mov
rolb
aam
jmp
cmp
cmp
in
std
ret
jmp
or
nop
shl
int
rol
jecxz
hlt
test
out
fnstsw
test
fdivr
jecxz
lret
jmp
mov
vpsrlq
cld
xor
iret
cli
xlat
in
std
stc
sub
shl
neg
fcomip
xchg
leave
xchg
shl
loop
jmp
xlat
fdivl
lret
cmp
ror
repnz
rorb
in
xchg
in
iret
mov
call
jmp
mul
adc
fildl
xchg
repnz
in
loop
xlat
lret
cli
fstpt
int
cmp
sar
test
orb
in
shr
shll
aaa
idiv
out
ljmp
aam
test
cmc
enter
icebp
and
call
sarl
xor
aas
lret
in
sar
cli
add
sub
in
in
fdivrp
fsubr
xchg
aam
rcl
fcmovne
fdivr
int
in
std
aas
idivb
cmc
leave
std
or
test
shr
lret
nop
das
ljmp
int3
adc
fldl
mul
std
jecxz
vpcomd
xchg
xchg
loop
das
out
div
shr
cld
icebp
fdivr
jecxz
out
aam
aad
hlt
call
int3
int3
sub
out
cmp
in
not
lock
mov
into
or
out
loop
xor
out
sub
icebp
fsub
fldl
sbb
sti
xchg
hlt
int
repnz
xabort
lock
call
in
rcl
add
lret
fadds
call
xor
lret
ds
int
rcl
ret
in
xchg
fcmovnu
out
cld
shl
repz
cmp
cmc
cmp
rolb
sti
lret
in
cmc
mov
int
xor
int3
iret
ds
repz
clc
aam
shl
ftst
int3
lret
ljmp
in
xor
jmp
fmulp
not
addb
sbb
loope
in
popl
aaa
aam
lret
out
fdivp
sar
faddp
shl
roll
out
lret
xchg
rcl
jmp
xlat
test
cmp
rcl
test
xlat
lret
cld
call
lock
loop
in
out
into
ljmp
aad
sar
fnop
rol
hlt
mov
out
std
iret
lea
sarl
lret
clc
clc
stc
repz
sarb
iret
aam
loope
addb
into
lock
loope
cmp
loop
cmp
hlt
xor
leave
and
repnz
faddl
fiaddl
cmc
repz
fnstcw
aad
stc
cmp
push
int
sti
iret
enter
out
in
enter
into
repz
xor
lret
lret
hlt
cmp
loopne
shr
loope
adc
fld
call
inc
lock
ljmp
jecxz
into
out
in
repz
sar
repnz
testl
xor
cli
ret
into
cmp
cmp
fildl
clc
aas
idiv
out
aad
jmp
or
in
push
jmp
out
ds
cmp
hlt
mov
test
loopne
mov
jmp
out
div
clc
leave
enter
in
add
mov
test
into
adcb
jecxz
ljmp
addb
fcmovb
clc
xchg
int
loope
out
xchg
xchg
lret
aam
jmp
repz
fsub
repz
dec
test
leave
out
lret
xlat
rolb
in
fcmovnb
ret
xlat
fiaddl
loopne
ret
in
icebp
enter
clc
ljmp
fcomi
fld
lret
loop
inc
adc
out
test
out
out
aaa
cmp
rcr
lret
rcl
lock
shl
cmp
inc
cli
std
leave
call
mov
cmp
lret
lret
rcl
ss
aad
icebp
mov
cli
orb
xchg
jecxz
shll
push
jmp
int
iret
rcl
aad
inc
xor
lret
pop
test
push
add
cld
cld
aad
rcl
lret
incb
enter
mov
out
iret
icebp
xchg
xor
int
into
out
lret
cld
in
repnz
cmp
fsub
fucomp
int
jmp
fdivr
not
sarb
icebp
sbb
fdivr
rol
idiv
sar
cld
mov
sbb
out
mov
repnz
repz
fcmovnb
ror
cld
fdivrl
xlat
xor
addl
lock
ffreep
xor
xor
out
lret
rcl
fyl2x
repz
aas
shl
cmp
nop
mov
lret
aam
xor
cmp
sti
iret
aas
mov
int3
fcomp
loopne
adcb
fxch
in
out
xor
rcr
sbb
sbb
fcomi
in
cli
lea
iret
out
cmc
in
cmp
clc
mul
repnz
icebp
add
lret
stc
fcmovnu
call
test
icebp
aaa
repz
cmp
xor
hlt
xlat
cmp
test
jmp
jmp
out
jmp
ljmp
rcr
out
out
rol
mov
loopne
jecxz
addl
cli
repnz
div
into
stc
cli
lock
fdiv
hlt
xlat
mov
out
fsub
in
hlt
div
rcl
stc
repnz
repnz
lock
sarl
cli
and
cmc
cli
fnsetpm(287
xlat
addl
lock
out
loop
sar
loope
aas
loop
fcmovnb
call
mov
mov
aaa
fxch
std
cli
rcr
cmp
aas
int3
xlat
out
loope
xchg
or
ffreep
mov
mov
rcr
aam
aad
loope
std
fiadds
mul
testl
cmc
cmc
rcr
xlat
idiv
stc
shr
rcr
xlat
fdivrp
loopne
out
aam
out
out
fcmovu
out
out
jecxz
int3
aad
cmp
fdivp
aam
fcomp
fcmovnb
in
jecxz
jecxz
lret
iret
icebp
xchg
jmp
cmp
icebp
cli
int
shl
cmc
loop
fcmovnb
add
sbb
fildl
loop
ss
ret
in
aam
fcom
fcomip
fcomp
stc
stc
fsub
cli
xchg
xchg
jmp
xlat
sub
in
xor
cmp
cmp
cmp
cmp
aad
fisttpll
jmp
repnz
hlt
lock
in
xor
ss
fcomip
fsubr
fcos
test
cli
xlat
loope
in
icebp
int
xchg
xchg
int
ror
cmp
out
neg
ffreep
loop
stc
orl
out
test
fldl
cmp
aam
iret
test
rcl
in
xlat
cli
xchg
fsubrp
fmul
in
ss
icebp
aam
ret
testb
cmc
mov
cld
fistl
sub
repz
aam
int
lock
jecxz
out
sub
sbb
fcmove
dec
cld
cld
incb
ss
call
int3
rcl
out
fcos
mov
mov
loope
jmp
fmull
ret
stc
aam
jecxz
out
icebp
inc
ds
ror
orb
jmp
icebp
stc
les
xor
lret
dec
ret
repnz
cmp
fucomi
and
icebp
lret
cmc
imul
out
iret
aad
xor
cmp
aaa
aaa
cmp
call
aad
cli
cmp
mov
xchg
xchg
imul
aam
repz
cmp
ret
clc
imul
xchg
iret
in
ljmp
sarb
in
hlt
lret
aaa
dec
cli
notrack
out
sarl
cld
test
aad
in
lret
out
cmp
jmp
xlat
clc
jmp
icebp
jmp
fiaddl
lret
xlat
lret
lea
ret
clc
lret
fcmovnu
leave
lret
xlat
sar
icebp
clc
ds
fsub
lret
mov
movl
aad
leave
ljmp
std
cmp
aad
mov
mov
mov
cld
mov
int3
mov
xor
int3
xor
cli
ss
sti
dec
out
into
shl
cmp
aam
fdivr
in
mov
fmul
lret
stc
rcr
cld
loopne
jmp
rcl
sti
imul
sti
ficoml
ljmp
aam
loope
rcr
push
loope
call
lock
faddl
fdiv
xlat
xor
fnstsw
xor
in
fldl
iret
jmp
lret
xchg
test
ljmp
leave
cmp
neg
out
rcl
aam
std
stc
call
incl
jmp
mov
fcmovnu
or
sub
mov
lahf
clc
sbb
jle
add
in
xchg
aad
cmc
fdivrs
leave
aad
aaa
sar
cmp
cmp
iret
fcomp
idiv
cli
mov
xlat
sbb
loopne
icebp
mov
shl
fldcw
cs
ror
repnz
and
roll
jmp
std
adc
faddl
shlb
lret
fcmovbe
xor
out
shl
shl
addb
ret
in
xchg
xchg
in
loope
fmul
out
xlat
clc
bnd
out
fsubr
not
ret
aam
in
jecxz
mov
orb
cmp
cs
sbb
jecxz
rcr
sar
sti
out
mov
mov
mov
out
out
xorl
in
cmc
fmuls
fcompp
loop
repnz
out
iret
hlt
ror
lock
test
in
xchg
out
shl
sub
sti
out
cmc
sti
ljmp
out
fsub
fildl
and
test
divl
idiv
in
ljmp
aad
icebp
adc
cmc
jecxz
dec
call
ljmp
out
not
test
cmp
test
ljmp
xor
cmp
int3
in
repnz
fdivp
xchg
testb
call
jmp
idivb
ss
aas
neg
add
jecxz
test
fdivp
leave
enter
into
into
jmp
in
or
cs
cmp
ds
cli
jmp
test
shl
loope
idiv
incl
xchg
aam
out
cmp
xor
cmp
loope
sti
jecxz
and
cmc
fdivrp
fisttps
xchg
enter
shl
sar
repnz
int3
aam
in
idivb
clc
cmc
out
dec
rolb
shl
repz
fdivp
fistpll
rcl
adc
xlat
aad
mov
ljmp
rol
out
fadd
cs
fmul
idiv
cmp
in
aam
int3
out
fcmove
mov
aam
xor
jmp
jmp
jmp
bnd
faddp
cmc
in
shl
jmp
in
sub
shll
out
jmp
loopne
sti
ror
repnz
xchg
jmp
fucomi
lea
leave
stc
fcomp
cli
sar
ds
shl
jmp
out
xchg
xchg
loope
in
aam
sub
rcl
ret
cmp
ret
cmp
int
in
shl
test
loopne
cli
out
in
lock
or
loop
cli
cmp
xchg
sar
test
fisttps
int3
aad
stc
fcom
in
in
aad
call
fsub
lock
aam
cli
clc
lret
xchg
iret
in
xchg
shr
cmp
out
xlat
aas
cmp
lock
fcom
out
shl
fcom
loop
xlat
in
into
fisttps
lret
out
xor
fmul
loopne
lret
add
fdivrp
fmul
xchg
in
test
shl
repnz
cli
ror
lret
loopne
in
cmp
mov
lock
das
in
xor
aaa
sti
lret
sarb
in
fnstcw
xchg
and
int
iret
incb
out
xor
ds
fmul
sar
std
cmp
loop
and
nop
loopne
lock
shl
in
loope
icebp
repnz
ror
out
hlt
ror
out
ret
ret
xchg
test
leave
jmp
fld
and
xchg
mov
xor
sti
cmp
loope
fmulp
cli
hlt
hlt
jecxz
test
in
mov
nop
into
leave
into
int3
in
cli
aad
sti
fiadds
ror
xlat
jecxz
out
std
stc
mov
repnz
repz
cmp
sub
xor
jecxz
ror
in
mov
nop
ljmp
ret
aad
cmp
lock
fcomip
aaa
hlt
aad
cmp
flds
jmp
call
aam
in
leave
cld
sarb
cmp
test
ret
out
decl
icebp
xchg
lea
ljmp
icebp
jmp
cmp
out
leave
fstp
testl
in
jecxz
repz
cmp
loopne
loope
fcmovnu
rcr
jmp
mov
xchg
loop
leave
out
xchg
repz
out
call
cmc
cmp
fcmovu
jmp
loop
mov
cld
sti
mov
test
ljmp
fcmovne
cmpl
sar
loope
loop
mov
into
fmuls
xor
lock
cmp
lock
or
andb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
cmp
loop
and
jle
add
fadds
faddl
int
int3
in
shll
leave
call
aas
cld
cmc
aam
cld
aas
cld
mov
lret
sti
ljmp
into
fadd
cmp
xlat
icebp
cmp
sbb
stc
aad
call
incb
nop
fsub
jecxz
fcmovnbe
cmp
clc
hlt
xor
ret
iret
fld
cmc
xchg
int
call
loopne
xorl
sub
std
lock
xlat
cmc
notrack
sarb
lret
in
test
cmc
shll
les
cmp
cmp
inc
div
in
cli
out
clc
in
cld
xchg
int3
repnz
fdivs
xlat
stc
into
stc
out
loopne
cmc
repnz
rcl
fst
xlat
out
cld
mov
iret
out
out
test
out
cmc
repz
fsubr
in
aam
jmp
adc
hlt
fildl
mov
mov
fsub
ljmp
in
int3
icebp
loop
jecxz
jecxz
les
int3
mov
mov
test
mov
xor
sarl
aaa
cli
ds
xlat
test
xlat
stc
cld
test
ljmp
sti
xchg
int3
mov
ror
aad
ror
repnz
loopne
lock
clc
mov
jecxz
out
xchg
sarl
cs
cmp
int
aaa
out
aaa
loopne
filds
loope
int
loop
fucomp
out
in
xchg
lret
jmp
fcmovne
aaa
cmp
neg
hlt
mov
fcmovnb
jmp
fsub
xchg
iret
xor
aam
repnz
xor
rorb
loope
lock
ljmp
jmp
lock
aad
xlat
rol
loope
roll
cld
out
ror
ror
loope
clc
into
out
sti
aam
cmp
hlt
loope
repz
rorb
sti
out
xchg
in
push
test
rol
repz
jmp
cmp
addb
xchg
mov
aam
aas
loope
enter
cmp
ror
rcl
in
in
sti
xchg
lea
imull
int
cmp
fidivs
fcmovu
clc
xlat
out
cli
fadd
mov
jecxz
mov
lock
xor
aad
idivb
fucomi
in
int3
loopne
fcmovbe
shl
test
repz
sti
call
fdiv
testb
cmp
in
mov
sub
idivb
icebp
jmp
aam
cmc
cmc
rolb
mov
test
out
int
out
in
cmp
xor
imul
hlt
hlt
vcmpps
in
ret
in
loope
xchg
into
call
out
ror
sar
xchg
neg
cli
in
loop
add
fdivp
aad
hlt
aad
cmp
out
fcomp
loope
cld
stc
rcl
mov
decl
out
fstp
jmp
iret
cmp
aaa
ljmp
cmp
sti
fsub
xchg
test
hlt
mov
xor
call
out
loopne
out
repz
in
loope
leave
fiadds
xchg
shr
int3
loop
div
sti
clc
out
ds
fsubr
ret
shl
idiv
std
sbb
adcl
jmp
repz
lock
call
shl
loope
sti
cld
cmp
popl
xchg
ret
in
repnz
fdiv
icebp
shl
stc
roll
repz
enter
test
repz
aaa
hlt
out
cli
rcr
leave
repz
cli
sti
fprem
sti
lret
in
mov
test
xchg
rcl
loope
rcr
cmp
hlt
cmp
fcmovbe
ret
rcr
xor
clc
test
xchg
aad
ret
cmc
repz
aaa
aad
rcl
ds
fdivrp
repnz
sti
in
xchg
cmc
ss
lret
fucomp
cmp
loopne
shl
filds
int3
test
xchg
xlat
int
ss
rcr
cmc
out
int3
rolb
mov
std
call
fdiv
in
jmp
out
clc
cmp
ret
fld
movl
std
xchg
xchg
call
call
idiv
sti
adc
ret
cmc
sti
in
orl
ljmp
in
sarb
xor
out
cmc
fadds
cmc
mov
jecxz
jmp
lock
out
repz
out
rcl
rolb
sti
fdiv
mov
loope
std
in
mov
rol
xor
inc
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
js
and
add
add
repz
out
cli
idivb
shl
aad
mov
ffree
clc
in
mov
call
fprem1
fdivr
cmp
xor
jmp
fdivr
cmc
idiv
xlat
fcmovu
mov
stc
in
sbb
repnz
shll
fdivrs
clc
aaa
xchg
enter
in
xchg
jmp
out
hlt
fcomip
lock
lock
sarl
cmp
mov
fucomp
xchg
sar
repz
icebp
fcmovnbe
xor
movb
mov
in
cld
mov
xor
out
lret
hlt
loop
aad
sar
cmp
loop
mov
test
lock
cmc
out
aam
iret
fdivr
xor
out
loope
hlt
loopne
and
jmp
enter
test
lret
xchg
das
xor
fmul
aaa
icebp
fmulp
test
out
repz
fsubp
out
cld
lock
ljmp
iret
sti
lret
loopne
fidivrl
repnz
test
idiv
in
decb
sub
aaa
ror
cmp
imul
cli
ss
icebp
loopne
in
incb
mov
icebp
sub
ror
fidivrl
fdivp
std
loope
movb
xchg
mov
loopne
lret
shlb
neg
xor
fnstenv
lret
cmp
aas
cmp
repz
loopne
adc
xchg
xor
lds
ror
iret
int3
xor
fdivrl
xlat
xlat
jecxz
fldl
ljmp
icebp
call
ss
leave
iret
lock
loope
loopne
out
add
loopne
out
fucomi
lock
loope
loopne
hlt
cmc
cs
fsubr
into
jmp
rcl
mov
mul
stc
cld
xchg
out
mov
xor
xor
stc
cs
lret
loope
out
in
aam
mov
movb
out
test
sub
in
int
out
loopne
icebp
hlt
icebp
test
lock
test
xlat
lret
xchg
mov
aad
cmp
rcr
std
sarl
in
loope,pt
clc
out
sbb
sti
into
int
loop
in
call
cmc
stc
cmp
std
sarl
aam
fdiv
rol
decl
int
fcmovnu
loope
lock
test
rolb
out
lock
mov
xchg
ss
cs
fcomp
shl
mov
fucomi
xlat
jmp
in
nop
xchg
loop
cmc
hlt
iret
xor
aad
out
sub
ret
test
fsubrp
repnz
in
cli
movl
cmc
out
aaa
ljmp
test
cld
testb
call
leave
out
xor
icebp
div
shr
aas
cmp
rcl
enter
mov
addl
leave
sti
loope
fcmovnbe
repnz
flds
cld
out
fdivr
shl
add
out
aam
ss
call
clc
cmp
leave
in
icebp
enter
xor
fidivl
sti
inc
in
test
repz
ret
call
ret
repz
int3
int3
sarl
cli
out
xlat
int
flds
test
sti
jmp
loop
incb
int3
shr
int3
int
ljmp
std
fisttpll
loop
loopne
nop
out
mov
xbegin
clc
cmp
jmp
out
lds
out
jmp
xchg
xchg
xchg
jmp
jmp
neg
xlat
hlt
neg
jecxz
hlt
add
incl
loop
ljmp
rol
icebp
out
cmp
in
inc
clc
aas
mov
cmp
sti
out
fstp
out
xchg
test
into
fsubr
cli
cmc
divb
lret
cmp
cmc
aas
cmp
xchg
cmp
xchg
and
out
mov
xor
xor
cmp
idiv
fidivrs
jmp
and
xchg
adcl
in
cmp
out
fadd
loopne
iret
roll
div
std
loop
fisttpl
aaa
cmp
ljmp
sarl
jecxz
sub
stc
jmp
out
roll
xor
lds
jmp
loope
sar
cld
aas
ret
addl
loope
imulb
loope
in
cmp
cmp
roll
in
ljmp
stc
xchg
xchg
lock
cs
ljmp
cmp
out
int3
repz
cmc
ds
lret
ror
mov
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
pop
adc
jp
add
add
xchg
out
in
aas
das
idiv
cs
stc
xor
fcmovu
xchg
add
out
sti
or
fiaddl
loop
out
aad
cmp
out
rolb
rcr
aad
test
faddp
aad
mov
mov
or
mov
sar
out
cld
jmp
cld
imul
rcr
aas
repnz
rorb
pop
lea
xor
int
icebp
das
out
into
xor
fstpt
jmp
fsubp
out
icebp
cld
repnz
clc
lock
shr
fdivr
loopne
cmc
enter
ret
lret
lea
repnz
clc
jmp
rcr
call
clc
test
clc
ret
idiv
xlat
add
mov
into
cmc
div
aad
lock
xor
fsubr
repnz
hlt
orl
nop
fadd
fsubp
repz
ret
divb
xor
cmp
repnz
loop
icebp
xor
clc
and
in
lock
ror
in
loope
clc
stc
in
out
iret
cmc
rcl
jmp
fiadds
lock
loopne
nop
shlb
xor
cmp
into
aaa
jmp
jmp
out
jmp
xchg
jmp
loop
hlt
cld
leave
fdivrs
iret
hlt
ret
aad
neg
in
mov
test
rcl
ror
cmc
out
aaa
sti
aam
cmp
icebp
movl
shl
fisttps
aam
hlt
imul
aaa
shr
xchg
cli
fdiv
leave
in
push
in
xor
shl
shr
aaa
out
cmp
cmp
cmc
rorb
in
iret
enter
xorl
fidivrs
xor
cmp
clc
roll
in
lea
xchg
xchg
rcl
rol
lret
fdivr
aad
cmp
in
cmp
xchg
repz
call
int
in
xchg
in
in
lret
sti
ljmp
cmp
rol
xchg
icebp
test
out
lret
shl
xor
idivb
iret
jmp
ds
fidivrs
in
rolb
mov
idiv
loope
xchg
into
nop
fbstp
lock
lock
shlb
fucomip
sti
stc
incb
decl
loope
shl
int3
fadd
out
lret
hlt
dec
iret
std
neg
sar
aas
aad
xchg
sub
xchg
xchg
repnz
lock
cmp
ror
xor
loope
call
loopne
int
ror
xchg
xchg
out
imul
out
ror
enter
hlt
ret
ret
shl
loope
shr
mov
ror
sti
xlat
enter
cmp
cmp
rcl
xchg
fildl
addb
aad
fsubrp
in
aam
stc
cld
rcr
ret
mov
jmp
in
call
aaa
cmc
cmp
std
aaa
in
into
fcmovnu
shl
xchg
idiv
aam
jmp
jmp
lock
xchg
int
loop
out
xor
fnstcw
ds
ret
repnz
sar
mov
mov
test
call
out
int
lock
aad
leave
call
ret
cmc
cld
orl
xchg
enter
sarb
xor
hlt
cmp
ret
in
loop
out
mov
in
rcl
ljmp
cmp
cmp
ret
xlat
les
enter
testl
xor
into
fdecstp
stc
fnstsw
jecxz
iret
aas
repz
stc
not
lock
aaa
out
stc
cmp
out
test
test
ljmp
fdiv
xchg
cmc
ret
xlat
rcl
lret
icebp
stc
cmp
int3
xlat
icebp
loop
cld
test
mov
mov
aad
cmc
iret
xor
enter
addb
stc
jecxz
mov
icebp
loopne
xor
aam
cmp
cmp
idiv
in
out
xlat
aam
out
lds
in
leave
shr
fld
out
cld
fcmovb
fcmovb
xor
cli
aad
cld
in
test
lock
test
xor
lock
cmp
aam
enter
in
int3
in
xor
shr
fidivs
jmp
in
cli
leave
jmp
aas
repnz
fadd
cmpb
loopne
cli
aad
fadd
in
in
int3
orb
repz
clc
cmc
repnz
cmp
rolb
mov
fisttpll
mul
test
clc
into
test
incb
mov
inc
mov
add
add
int
xlat
outsl
add
push
add
cld
call
std
leave
filds
icebp
in
fidivrl
aaa
int3
divl
rcl
aas
cld
repnz
sti
mov
repz
loop
fcmove
aaa
sar
loopne
xor
shr
test
out
mov
mov
call
iret
cmp
xor
fucomip
ret
fst
mov
fcomp
orl
in
subl
xlat
lret
in
fmul
fcmovnbe
xor
aad
fcompp
fsin
test
cmp
iret
in
into
shr
int3
lds
lret
fildl
mul
std
repnz
ficoml
adc
int
jmp
ror
jmp
xor
cli
out
shl
xchg
enter
test
aam
iret
loopne
sub
xor
int
clc
idivb
ret
in
lret
mov
mov
fcom
fdivrs
out
cmp
cmp
cli
ret
std
neg
movb
adc
loopne
xor
lret
cmp
fnsave
fstp
out
test
cmc
add
flds
iret
loop
out
fcomip
jmp
ror
int
int
jmp
out
idivl
stc
repz
roll
ffreep
sti
mov
repnz
ret
in
ljmp
ret
mov
fildl
in
out
in
cmc
iret
repnz
out
lock
fcomip
ret
hlt
xchg
loope
loop
jmp
in
rol
cmp
lret
cmp
in
loope
filds
test
and
in
jecxz
int
loopne
leave
in
cmp
jmp
xlat
cmp
test
out
idiv
cld
cli
clc
out
orb
in
xor
rcr
fcmovbe
ds
shl
ljmp
mov
test
ss
xor
cmpb
shl
fildl
call
in
ficoml
xchg
out
aam
cli
xor
int
ljmp
out
sti
lret
jmp
rcr
mov
out
xor
out
lret
xlat
aam
in
bnd
aam
mov
mov
mov
xchg
mov
in
loopne
xor
lock
lock
cmp
repz
shl
neg
and
jecxz
out
in
lock
cmp
repnz
jmp
aas
adc
rorl
out
stc
mov
call
hlt
xor
hlt
hlt
stc
adc
aas
idiv
lret
jecxz
xlat
ljmp
ret
xor
xor
iret
cli
fdivrp
rol
cmp
out
cmp
icebp
jecxz
loopne
out
mov
mov
fucomi
out
out
sub
fldl
fisttps
jmp
call
call
repnz
cld
in
test
mov
lret
in
jmp
xchg
out
mov
hlt
enter
cmp
sti
loope
cli
ror
fcmovnu
mul
cmp
lret
int
repnz
repz
xor
ror
cmp
or
sar
div
aas
inc
testl
into
inc
xor
out
rcl
fdecstp
cmp
fadd
frstpm(287
xlat
xchg
out
nop
iret
out
into
sarb
das
push
fiadds
cmp
and
mov
jmp
loop
sti
incb
int3
icebp
aaa
loope
cld
fidivrs
fsub
cld
fadd
cld
loope
mov
loop
in
nop
xor
lock
xor
stc
std
cli
out
cmp
sti
aad
shr
ret
testl
out
cmc
int3
lock
clc
call
jecxz
vpaddd
loopne
fcmovu
int
nop
icebp
in
mov
int3
out
leave
xor
stc
std
aad
out
not
icebp
iret
cmp
out
rcr
out
jmp
testl
call
shr
leave
icebp
ds
cmp
call
cli
icebp
ljmp
call
out
stc
lock
out
in
mov
test
sar
icebp
xchg
jecxz
repnz
ror
icebp
cld
aam
aas
cmp
testl
fcmovnbe
sub
out
enter
xor
fdivrs
cmc
lret
test
testb
stc
out
in
xchg
out
cmc
repz
int
jmp
xor
sub
hlt
adc
in
stc
int3
out
test
shl
lret
int3
jmp
int3
cmc
cmp
rcl
cmp
sti
in
leave
inc
lret
iret
xchg
xchg
and
hlt
sub
hlt
fcmovne
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
into
int
cmp
cmc
stc
std
div
xchg
in
fdivr
fucom
cmc
out
jmp
clc
into
out
cmp
ljmp
mov
rcr
jecxz
jmp
iret
test
fstl
sarb
neg
aaa
ror
fstpt
fld
in
out
fucomip
out
shr
into
xchg
xor
cmp
lret
ljmp
addl
popl
out
xor
sar
out
aas
int
ds
xchg
xchg
loop
mov
std
in
repnz
in
repnz
repnz
not
stc
fucomp
fsub
repnz
icebp
fnstsw
fndisi(8087
fdiv
into
enter
fcoml
ljmp
in
sub
shl
xrelease
cmp
std
test
loope
into
lock
out
in
leave
repnz
cmc
cmp
repz
ret
test
out
and
lea
stc
xor
xlat
ljmp
test
loop
fdivr
test
ret
cli
fmull
aad
mul
lock
cmp
clc
fistpll
stc
fprem
test
cld
fcomp
ret
fsts
fdiv
xor
ror
repnz
lret
hlt
filds
mov
iret
shl
repnz
into
icebp
jmp
out
add
cmp
roll
clc
aas
in
ljmp
aas
ljmp
fdivrp
jmp
cli
frndint
test
jmp
flds
std
ljmp
cmp
call
rolb
out
in
inc
ficoms
lock
sar
clc
fdiv
leave
lret
in
ds
test
cli
xchg
mov
cli
mov
cli
leave
in
xchg
xchg
rclb
fcomi
cmp
rcr
cmp
mov
fsub
fimuls
into
jmp
cmp
mul
test
and
rol
in
into
mov
xchg
xorb
cmc
jmp
sarb
rolb
out
cld
mov
ljmp
sub
xlat
lret
xlat
icebp
xor
ljmp
in
ror
xchg
icebp
out
das
aad
jmp
clc
out
cli
int3
ret
in
hlt
sti
movb
out
ficoms
cld
cli
cmc
lret
cmp
aaa
hlt
cmp
in
addb
xchg
rcl
out
mov
ret
repz
xlat
lret
repz
shl
fcmovnu
rcl
repz
cmc
jmp
lock
cs
rcr
aam
shl
sti
ljmp
icebp
loope
rcr
lret
not
ret
aaa
std
or
lret
cmc
fnstcw
loope
std
sti
std
call
loopne
lock
cmp
in
fcmovnu
cld
loopne
int3
repnz
xchg
loopne
test
mov
aad
lock
repz
cmp
jmp
out
movl
sti
loope
mov
lock
enter
lock
iret
test
filds
in
ficoms
leave
iret
jecxz
cld
clc
cmp
shr
int
div
icebp
mov
jmp
cmp
iret
test
in
hlt
loopne
sub
call
clc
cmp
cld
ds
cli
fcmovnbe
sbb
int3
in
ret
rcr
rcll
xor
rcr
in
rcr
sti
xlat
sar
aam
xchg
mov
repz
lret
int
fdiv
ret
stc
push
cmp
shl
cmc
test
mov
in
loop
call
in
fcom
xor
fst
neg
cmc
rorb
loope
icebp
mov
xor
hlt
xor
jecxz
lock
hlt
cmc
xchg
and
mov
in
ljmp
out
std
clc
aam
mov
ljmp
in
loopne
sub
fmul
int
fptan
cli
clc
cmp
shl
sar
and
mov
out
idiv
in
cmp
in
repz
jmp
sarl
fucom
leave
lret
lret
mov
std
iret
jmp
mov
int
test
sti
fdiv
cmp
clc
test
test
cmc
loop
out
out
sti
fists
out
test
ror
cmp
sti
shl
out
ftst
test
incb
loop
xchg
loopne
dec
fdivs
out
cli
out
fcmovbe
iret
into
rcl
out
enter
stc
call
loopne
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
mov
cmp
jle
add
incl
cmp
cmp
ror
loop
sti
aas
ret
aad
loopne
cld
sub
call
out
ljmp
aas
repnz
in
sar
jmp
leave
jmp
lock
xchg
aad
out
in
xor
aad
cmp
shlb
mov
hlt
int3
enter
mov
sar
out
ret
out
sub
aam
icebp
cmp
int
rcr
hlt
cmc
in
in
fcmovnu
icebp
xor
out
sti
cmp
stc
aam
int3
stc
xchg
xchg
nop
ror
xchg
adc
fnstenv
cld
xor
repnz
test
repz
test
aam
addb
ljmp
fsubp
fcmovnu
imul
int3
aam
enter
std
in
loope
ror
rorl
shl
jmp
in
fcomip
in
rcl
sub
test
std
out
int3
shr
jecxz
enter
lret
fidivrs
cmp
cmp
idiv
enter
imul
out
loopne
loope
shl
out
loope
bnd
out
cmp
lock
loope
idiv
clc
test
ftst
movl
call
enter
into
loop
rorb
xchg
xchg
jecxz
xchg
jmp
clc
xor
out
leave
xor
cmc
shl
sarb
cld
out
mov
loope
lret
and
rcl
ljmp
cli
cmp
out
ror
neg
lret
call
fmull
aaa
sub
sti
cmp
in
fcmovnu
in
call
out
mov
int
call
stc
xlat
sub
enter
cld
addb
mov
idiv
loopne
iret
call
jmp
aaa
xlat
xor
xor
cmp
cli
test
roll
enter
sti
call
shrl
cmp
out
int
cmp
aas
test
push
cli
ljmp
ficoms
shll
xor
xlat
in
iret
in
hlt
sarb
xchg
fcomip
test
orb
xchg
repz
loop
fcmovnbe
rcr
jmp
cmp
repnz
mov
fcmovu
fsub
iret
jecxz
mov
icebp
xor
shl
xor
fcomip
rol
aas
rcl
icebp
fldl
out
xchg
out
jmp
xor
not
icebp
fucomi
das
fcomi
roll
aas
push
leave
std
out
in
ljmp
das
iret
xor
clc
cmp
lret
aas
cmp
xlat
icebp
fisttpl
xchg
rorl
xor
loop
cmp
stc
ror
cld
into
ljmp
xchg
in
hlt
call
ljmp
in
loopne
ret
testl
lret
in
fstpt
call
repz
add
shl
jmp
cmp
ficoml
push
les
sti
iret
aam
jmp
into
cmp
repz
shr
in
hlt
mov
mov
leave
in
call
rol
out
int
int
cmc
cmp
shl
fdiv
shl
fcomip
loop
test
int
loopne
xchg
cmc
stc
rol
cmp
call
cli
div
fadd
loop
xchg
sar
mov
in
jmp
mov
jecxz
shl
xlat
call
fdiv
stc
in
xchg
out
xchg
xchg
jecxz
xlat
les
les
repz
sarb
cmp
repz
xor
ret
idiv
testl
stc
out
rcr
icebp
not
lock
lock
cli
in
jmp
jmp
test
xor
das
ds
xlat
repnz
rorl
xchg
xorb
xor
int3
jmp
loopne
test
clc
call
dec
rcl
addl
call
test
test
fucomi
out
leave
int3
loope
repnz
sar
xor
in
into
repnz
sar
cli
out
mov
jmp
mov
aam
rol
aad
lret
pushl
cmc
cmc
cmp
adc
fcmovnb
fucomp
loope
lret
mov
rclb
lock
int
shlb
aam
hlt
in
hlt
repnz
out
loop
shr
fdiv
jecxz
shr
xor
xor
in
in
aam
loop
cmp
aas
xchg
cli
cmp
lret
jmp
aam
lret
in
call
leave
hlt
rcr
int
loope
neg
xor
add
push
mov
push
jmp
ret
rcl
aam
ret
sarl
arpl
and
add
add
sbb
or
jmp
cmc
fprem1
fucomi
cmp
rcr
cmp
loopne
fldl
enter
out
ljmp
enter
cli
lret
loope
sti
xchg
repnz
test
or
test
xor
fsubrl
shll
or
xchg
roll
ffree
in
enter
xchg
out
int
cmp
rcl
stc
loope
out
cmp
cld
out
int
nop
into
in
jmp
in
xlat
cmp
hlt
aam
fxch
repz
int
hlt
fiaddl
out
in
icebp
out
lea
out
shr
xor
sti
cmp
into
sti
fdivr
addb
rcr
orb
xor
out
sti
fcom
leave
sar
repz
jecxz
clc
addb
ljmp
lock
in
cmp
fsubp
lock
stc
fprem
enter
cli
mov
loop
nop
out
int
in
aaa
leave
cmp
cmp
loop
cmp
mov
fimuls
loopne
mov
int
out
ds
out
icebp
mov
stc
clc
sub
iret
into
out
int3
lea
out
xor
xor
leave
in
cmp
cmc
cmp
addl
roll
lock
lock
into
shl
dec
cmp
out
hlt
call
mov
nop
aam
hlt
xor
xlat
int3
cmp
cmp
xor
aad
sub
fisttps
in
loope
xor
shl
fcmovne
jmp
cmp
fstpt
rcl
icebp
xchg
ret
aas
jecxz
out
test
int3
shr
mov
call
fcmovbe
ds
ret
std
hlt
fmul
out
sbb
xchg
int
aam
div
cmp
ds
shl
cmc
fsin
fisttpll
jmp
or
roll
xor
neg
repnz
jecxz
cld
fiaddl
enter
into
int3
in
test
into
stc
cmp
aaa
stc
jmp
aas
add
in
clc
jecxz
testl
hlt
rcl
ret
xlat
lock
cmp
repz
rol
ret
fildl
out
leave
jecxz
stc
lret
fisttpll
aam
cmp
leave
call
neg
jecxz
out
sti
testl
jmp
rcl
out
enter
inc
test
in
and
xchg
in
mov
ljmp
int
lret
aaa
cmp
lret
not
xor
out
mov
out
sti
fcmovne
loopne
loopne
ss
xor
int
stc
cli
loopne
repnz
fcmovbe
stc
aad
std
enter
lret
in
int3
lds
cmc
fmul
out
out
shr
xlat
shr
shl
repz
fsub
cmc
lret
enter
iret
leave
cld
out
shlb
xor
vpaddsw
addl
rorl
test
int
xchg
ljmp
out
aam
aas
icebp
rol
cld
ret
out
loopne
in
ror
repnz
rcr
shl
addl
stc
cli
fmulp
lock
in
fdivr
cmp
fsubr
into
repz
xor
rcl
cmp
loop
iret
xor
shr
les
ret
cld
test
neg
out
fld
fcomip
cld
cmc
lret
rcll
xor
fsubr
repz
in
in
ror
aam
icebp
shr
test
cmc
test
xchg
in
out
call
cli
lock
in
sti
fsub
mov
fdivrp
lret
loop
call
out
int3
iret
cmp
jmp
aam
fsubrp
fcomip
repz
in
jmp
out
ljmp
ss
sar
out
clc
cmp
fmulp
loop
leave
sub
fsubr
iret
loopne
add
lret
hlt
sub
in
sarl
repz
rcr
in
mov
mov
jmp
xor
into
ljmp
shr
stc
sti
shl
test
xlat
dec
test
out
mov
ret
in
int3
loopne
rcr
ret
add
sar
mov
fabs
lret
fucomip
cmc
test
iret
fdivr
fcmove
cmp
mul
ret
fdiv
std
loopne
in
std
out
int
adcb
aam
in
ljmp
lret
xorl
aad
loop
cmc
clc
iret
mov
rclb
jmp
ss
icebp
repnz
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
movsb
das
xor
ret
add
add
imul
int
sar
repz
call
test
dec
ljmp
fdecstp
lock
and
in
push
test
rcr
out
nop
rcl
lock
out
jmp
icebp
xor
cmp
test
out
or
mov
into
aam
mov
shl
leave
jmp
out
iret
lret
xor
cld
int3
cmp
out
jecxz,pt
hlt
xlat
fdivrp
std
loope
out
in
aam
call
ljmp
out
into
repz
call
fucomp
loop
out
mov
in
in
ss
enter
aas
iret
xlat
aad
aad
out
stc
sbb
jmp
out
mov
xchg
lret
repz
xor
in
cli
cmc
ss
rcr
loope
aas
ds
std
xchg
repz
jmp
int
loopne
in
xor
jmp
leave
loopne
cmp
fadd
jecxz
roll
rcr
loopne
xchg
div
in
iret
sti
jmp
jmp
loope
cmp
in
lock
fdiv
ret
sti
cld
fstp
loope
adcl
int
out
fsubr
xor
div
rcl
fsubr
sar
repnz
in
roll
shl
jecxz
clc
ljmp
loopne
ss
test
fmul
fcoms
test
aam
cmp
call
lret
shl
loopne
addb
clc
out
ljmp
jecxz
sti
into
idivb
cld
out
cmp
cli
rolb
in
jmp
loopne
rcl
lock
lret
cmp
xor
cld
stc
frndint
ffree
cmpb
jmp
cli
call
in
ror
loope
xor
hlt
clc
aad
cmc
lret
cmpb
repnz
mov
fcmovne
xchg
out
mov
repnz
ret
xor
in
call
xor
xchg
mov
leave
iret
fst
call
xor
enter
int
fcmovne
jmp
cmp
aaa
rolb
aad
and
call
adc
lret
ret
cli
xor
lock
xlat
aam
sti
xchg
fisttpll
cmc
fucomip
aaa
cmp
cmp
shl
sbb
shl
cli
loopne
aas
incl
mov
shr
aam
leave
sub
hlt
cmc
loope
cld
cli
jecxz
cmp
shl
out
loopne
xchg
out
in
out
enter
ror
leave
sti
sbb
rcr
repnz
cmp
loop
std
mov
out
xchg
adc
test
xor
aaa
stc
clc
ss
xlat
cmp
ds
int3
in
iret
ret
mov
mov
clc
in
ss
cmc
in
aad
out
rorl
ret
mov
cld
mov
loop
fmul
lret
xor
xor
std
cmp
flds
out
loop
loope
int
out
aam
not
xlat
xor
call
stc
in
xlat
cmp
mov
jmp
lea
out
and
div
leave
aaa
xor
int
stc
loopne
icebp
rcr
rcl
xlat
call
lret
call
int
lret
xor
neg
icebp
jmp
cmp
std
in
repz
fdiv
out
stc
test
mov
loope
xor
out
jmp
lret
cs
icebp
aad
loopne
xchg
jmp
and
fst
ljmp
cli
in
clc
clc
aas
loopne
in
xor
ret
enter
sub
loope
sub
cld
xor
std
xor
ror
stc
std
aad
test
orb
xchg
xchg
xchg
xchg
in
out
jmp
xor
cmp
loope
cmc
flds
cmp
fcos
call
in
xchg
repnz
cmc
std
enter
int3
xlat
mul
fcmovu
xlat
sub
fdivr
int3
out
xchg
fsubrp
call
cmp
into
cmp
int
icebp
fsubp
fadd
loopne
jmp
xchg
icebp
mov
fmul
aad
icebp
mul
ret
leave
cmp
fdivrs
shr
rcl
repnz
out
ljmp
dec
cmc
ss
xor
xor
std
fcmovnu
adc
xlat
fmul
jmp
ljmp
cmp
ds
ss
xlat
shl
out
std
idivb
jmp
clc
fimull
icebp
lret
repz
iret
hlt
xor
ss
sti
icebp
rol
hlt
in
xchg
fdivp
jecxz
lret
add
int
xor
repnz
xor
repz
idiv
rorb
rclb
in
leave
lock
xor
cmp
xlat
ds
xlat
sar
and
iret
cmp
orb
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
arpl
jle
add
ss
in
cmp
cmp
fucomip
shl
and
faddp
faddp
fimuls
sti
lret
out
jmp
aam
fsubr
lock
iret
fcomp
sbb
mov
loop
in
xchg
lret
int3
xor
into
iret
out
das
rcr
into
sar
cmp
out
repz
add
out
std
loope
mov
in
in
xlat
ret
out
xlat
xlat
aas
cmc
int3
repz
test
iret
cmp
incb
loope
lret
sbb
xor
cld
idivl
xchg
xchg
fdivr
ljmp
out
mov
ljmp
fdivs
rcr
aas
add
aad
jecxz
jmp
out
loope
rorl
out
ret
cmp
hlt
or
aas
out
shr
mov
mov
cmc
xor
ret
cli
out
ds
cli
shl
sarl
out
mov
cld
in
sub
out
ret
fucompp
cmp
in
iret
cmp
fcmovnb
rcr
int3
sbb
loopne
incl
sub
fldpi
lock
cli
rcl
stc
loop
jecxz
shr
test
into
loop
lock
lock
call
into
aaa
cmpb
sti
repz
ret
jecxz
testl
in
ljmp
repz
sar
hlt
aad
out
clc
sbb
int
adc
mov
in
enter
in
enter
fst
loope
icebp
cmp
clc
orb
fdivrl
stc
ss
ret
in
aam
leave
les
out
fucom
mov
in
loopne
in
stc
ss
enter
aad
stc
std
iret
iret
call
ljmp
repnz
sar
repz
repz
fxtract
sti
int
fdivs
mov
std
cld
fisttps
adc
lock
out
icebp
ss
cmp
cmp
icebp
vpsubd
idiv
adc
leave
out
xchg
lret
aad
lret
fdiv
sbb
stc
cmp
mul
ljmp
jmp
in
mov
and
call
idiv
call
or
loope
loope
xlat
sti
lret
jmp
mov
neg
sub
ss
int
std
rcl
in
and
in
or
loop
ljmp
enter
int3
in
rcr
fucom
cmp
in
std
aam
cli
ljmp
in
aad
xor
cli
xlat
repnz
in
ds
cli
cmp
neg
lret
idiv
sti
xchg
adcb
xor
xlat
fnsave
aam
clc
cmc
xlat
ret
aam
mov
rcr
cli
xchg
enter
mov
ljmp
cmp
cld
cld
xlat
aaa
repz
stc
loopne
lret
lret
xchg
mov
int3
into
fst
aam
ljmp
ret
shl
sar
filds
int
xchg
and
lret
lret
iret
cmp
iret
ljmp
xchg
in
mov
loop
jmp
ss
shl
ds
jmp
aas
fstp
inc
loopne
jmp
fsubrp
sbb
loopne
xchg
test
jmp
in
fidivrl
in
int
shl
pushl
hlt
xor
orb
int3
hlt
in
xor
not
in
aam
into
cmp
ret
ret
aad
fadd
cld
hlt
incl
hlt
out
rclb
jmp
cmp
repz
int
rcl
loope
hlt
in
mov
mov
lock
cmc
repz
aaa
cmp
int3
aaa
fnstsw
in
cld
xlat
mov
ret
test
call
ret
aam
in
in
into
stc
cmc
idivb
aam
add
jmp
in
iret
ljmp
cld
rcr
leave
fidivl
clc
out
sti
sar
hlt
idiv
enter
out
in
cld
call
out
ret
in
in
cmp
sti
clc
in
ret
repz
cld
fcomi
or
leave
in
or
stc
lock
xor
repnz
fcmovne
cli
shl
aad
out
fcom
fdivp
hlt
ret
aad
std
int
fisttps
xor
cmp
ret
sbb
ret
fimuls
in
out
ljmp
cmp
repnz
or
cmc
fdiv
repz
rcr
mov
xchg
jmp
cmp
clc
div
sti
fcmovnu
ds
cli
fsubp
xchg
enter
shl
icebp
std
xor
int3
lock
sti
idiv
not
cmp
loopne
cmp
addb
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
inc
loope
push
int3
add
add
lret
lret
hlt
nop
rolb
shl
lret
call
stc
lock
loopne
fxch
mov
fmul
sti
leave
test
xor
hlt
in
into
call
out
iret
fcomi
in
in
lock
loopne
loop
ret
leave
enter
into
stc
cmp
and
xchg
rcll
fucomip
int
fdivr
jmp
into
fdivrl
loope
fldl
mov
int3
or
cmc
repnz
shl
xor
into
xlat
vcvtpd2dq
clc
test
loopne
filds
xor
rol
cmp
cmp
sbb
test
jmp
in
out
ffreep
cmc
leave
bnd
int
lock
sarb
xor
xlat
jmp
out
xchg
nop
mov
ror
loop
cli
divl
iret
sti
cmp
rol
ret
out
mov
leave
in
out
iret
decl
xor
into
cs
lock
hlt
fstpt
ret
fdiv
in
mul
in
addl
loope
idiv
xor
repnz
cld
stc
jmp
cli
xchg
int3
cmc
clc
xlat
aaa
enter
aas
jmp
stc
mul
loopne
rol
lret
out
out
iret
fisttpl
ljmp
iret
ror
test
repz
ret
movb
out
mov
cmp
repnz
clc
test
fnstsw
mov
cli
loope
out
in
mov
ljmp
hlt
lret
ljmp
neg
jecxz
in
out
nop
filds
jmp
in
hlt
rcl
loope
fstp
lock
sar
addb
fmul
lret
test
sub
aad
xor
lock
clc
jmp
fcmovu
xlat
cld
test
testl
loopne
int
sti
fucomi
cmp
aas
stc
out
cmp
stc
test
int3
xchg
int3
les
lret
in
out
cld
in
ret
hlt
out
call
ljmp
cld
out
not
shl
ss
out
fnclex
jecxz
mov
xchg
test
icebp
lret
cmp
stc
in
fsub
in
loop
icebp
ds
fdiv
cld
lret
cld
cli
loop
jmp
repnz
aam
xor
lret
cmp
cmc
in
lret
filds
rcr
call
jecxz
sub
ret
ss
lret
call
xchg
ret
ljmp
in
lret
fdivrl
cld
rcl
aas
fdiv
and
cmp
ret
jmp
test
stc
fcmove
mov
idivb
ljmp
repz
ds
hlt
and
mov
out
lret
lock
xchg
in
fmul
out
xor
lock
rcr
rcr
mov
fcmovne
cld
out
nop
incl
test
rcr
xor
enter
stc
loope
cld
fstp
and
ffreep
xchg
icebp
in
jmp
sarl
in
in
fcmovu
sti
not
fdivrp
icebp
jmp
mov
and
call
leave
xor
int
jmp
cmp
stc
cli
inc
jmp
into
filds
test
cmc
leave
int3
stc
lret
out
repnz
fdivr
xor
stc
test
test
lret
not
fidivrl
cmp
test
fsubp
cli
ret
ret
loop
out
shl
fsubp
iret
add
xlat
icebp
fucomi
fdiv
aad
sarl
out
std
and
imul
std
jecxz
lock
int3
repnz
stc
int
jmp
xor
into
out
div
rcr
cmc
std
in
ret
loopne
loopne
int3
out
mul
repz
xor
in
int3
icebp
cmc
cmp
fcomip
loope
ror
lds
cli
jmp
in
cmp
cmp
cmp
aad
ror
cmp
shl
shl
ds
int3
fstp
cli
cld
xchg
int
mul
jecxz
xor
neg
clc
in
sbb
aad
lret
aas
out
out
std
in
sub
out
repnz
imul
cld
div
xor
adc
fcmovnu
repnz
test
in
jmp
icebp
mov
in
rcll
shll
in
sti
out
aaa
stc
cmc
cli
aaa
fdivr
sti
shr
loopne
clc
add
xchg
ljmp
cmp
lret
ljmp
xchg
int3
mov
lret
loop
out
repnz
enter
ljmp
or
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
je
push
stos
roll
jle
add
neg
in
sub
testb
out
das
shr
ret
aad
std
fmulp
in
lret
xor
fstp
loopne
fmull
in
mov
repnz
ss
ss
repz
hlt
fidivrs
int3
out
and
cmp
loopne
into
dec
loope
xchg
int3
mov
call
hlt
ds
ss
sar
xchg
repz
call
loop
repz
xor
out
out
out
shlb
fcmovne
or
out
aam
out
loope
lret
sar
mov
lock
ror
cmp
cli
in
ret
ret
enter
cli
into
fimull
ljmp
sar
cmp
fcmovbe
cmc
test
fcmovnb
enter
out
int3
ljmp
ret
out
xlat
cmp
sar
std
shl
in
mul
loop
xchg
xchg
sub
icebp
in
call
fst
clc
fmul
fstpt
inc
fadd
fisttpll
mov
loop
iret
test
in
xor
repnz
loopne
push
ffree
std
test
fists
shr
fdivs
repnz
cmp
cmp
loop
loop
shl
in
in
out
out
xor
sub
cmc
sti
cli
loopne
div
aam
sbb
stc
std
jmp
neg
ljmp
ds
lock
fdivr
loope
cld
call
lret
jmp
shl
jecxz
int
aaa
stc
fsincos
hlt
shl
lret
adc
enter
ret
xchg
xchg
fucom
rolb
ljmp
rcr
ret
cmp
rol
loop
in
nop
fdiv
xchg
xchg
xchg
enter
repnz
repz
int3
fsubr
ret
push
xchg
lret
mov
in
mov
cmc
xchg
jmp
cmp
aam
xor
fucom
hlt
fdivp
test
loop
test
fucomip
repnz
mov
stc
enter
ds
fcom
test
out
fiaddl
mov
cld
leave
std
mov
mov
fcomip
xor
iret
fprem
sar
fidivrs
aad
and
in
fdiv
mov
fdivr
xor
xor
lret
loope
ds
out
filds
jmp
lret
shll
fcmovu
int3
repz
clc
cli
stc
std
rcr
sti
loopne
sti
std
add
sti
int
enter
lret
in
in
div
cs
out
out
fxch
div
in
ret
in
cld
xchg
ret
mov
mov
std
mov
addl
clc
clc
clc
cld
std
cmp
rcl
orb
mul
lret
into
sub
lock
das
leave
fucomi
into
cmp
faddp
lock
cmc
flds
repz
sarl
out
xor
sar
fcmovnu
xchg
xor
fstpt
out
out
mov
aam
jmp
jmp
int
xor
out
repnz
fiaddl
ret
mov
rclb
cmp
vpaddw
and
out
ror
lret
incl
xor
ret
xor
ffree
xor
in
cmp
fdivr
cmp
mov
sbb
repnz
addb
repz
hlt
int3
std
rcl
shl
lock
ret
mov
lret
out
mov
adc
fpatan
cmp
out
cmp
sbb
shl
fadds
mov
out
enter
jmp
int
xor
cmc
fldl2t
aam
cmp
icebp
repnz
mov
in
test
cld
leave
loope
xchg
loopne
hlt
in
icebp
in
jmp
out
call
sarb
ret
rol
jmp
jmp
sti
mov
rcll
xor
lret
out
cmp
fucomp
fcomp
fdiv
addl
fldl
lock
into
iret
xor
fldl
iret
std
repnz
sti
mov
cmp
faddl
test
into
xor
imulb
stc
cmp
rcr
fdiv
ret
ljmp
in
xor
out
iret
clc
iret
loop
shl
fnstsw
cmp
sti
test
ds
mov
repz
mov
xchg
shr
xor
ret
cmc
lret
in
leave
fucomp
ljmp
mov
jmp
xchg
in
mov
call
jmp
lds
fistpll
out
addb
enter
jecxz
out
mov
out
ror
shl
out
in
cmc
xlat
ljmp
test
cmc
fxam
test
xchg
hlt
shl
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
ja
add
add
call
fcom
not
lret
in
xchg
repz
mov
mov
jmp
leave
call
out
cmp
into
cmp
hlt
lock
fiaddl
fadds
in
in
hlt
out
repz
hlt
fdivrs
int
inc
hlt
cmp
cld
fdiv
out
loop
ljmp
ret
xor
in
repnz
clc
cmp
fdivr
loopne
xchg
in
test
xchg
xor
in
ss
int3
shl
lock
hlt
ret
test
in
fmulp
ds
cli
xchg
mov
rcll
lret
int
cmp
into
test
ror
fadds
faddp
ljmp
out
in
aam
int
iret
cmp
div
shl
aad
out
ret
leave
mov
cli
in
mov
ljmp
fcmove
ds
clc
cli
ror
jmp
leave
and
int3
shr
loop
cli
lret
cmp
add
mov
test
mov
enter
sti
sub
clc
aas
ds
div
iret
bnd
enter
int
test
iret
cli
cld
repnz
cmp
ror
hlt
mov
sar
cmp
xchg
out
jecxz
mov
repz
hlt
f2xm1
ror
ret
ret
loope
leave
mov
mov
mov
mov
mov
div
clc
loopne
out
in
int
rol
repz
ds
sti
in
in
xchg
test
clc
shr
cmc
fnstcw
cmp
jecxz
aam
repnz
int3
lret
mov
ret
lret
ss
aam
jmp
cmp
in
shl
neg
out
cmp
loop
out
xor
shl
cmp
rcl
fcomi
ret
adc
fcmove
mov
sar
shr
out
lock
fnstenv
cmp
fstp
aad
xorb
in
add
dec
jecxz
mov
cld
sbb
out
aaa
xor
repnz
or
icebp
cmp
out
ljmp
leave
rcl
imul
xor
out
jmp
and
cli
test
enter
out
mov
rorb
ror
cli
into
out
rcl
int3
imul
int3
cmp
ret
jmp
aas
into
loop
fcmovu
lock
ss
cmp
cmp
aas
aad
in
fstpt
aas
rol
ret
loope
rolb
cmp
cld
into
into
cmp
cmp
out
mov
ret
or
std
mov
mul
xor
cli
xor
out
fnstsw
fst
shl
cld
std
rcl
cli
leave
xchg
mov
aad
loope
int3
cmp
into
jmp
aaa
sar
std
jecxz
testl
rcll
shr
leave
int
jmp
rcl
idivb
fldl
out
mov
rorl
cmc
jmp
fidivrs
rcl
roll
cmc
out
fisttpl
sti
in
mov
xlat
in
lock
cmp
sti
loope
neg
cli
shl
xchg
inc
clc
clc
jmp
out
ljmp
aam
xlat
test
call
nop
nop
mov
addl
cmp
iret
icebp
imul
sbb
loop
clc
fdiv
and
xchg
fimuls
shl
ror
cmp
fst
iret
fcom
repz
fst
xchg
and
icebp
cld
rorl
xor
lret
ds
std
out
std
ret
shl
std
hlt
in
in
out
sti
xchg
lret
ljmp
repz
xchg
xchg
addl
test
into
cmp
enter
lret
fcompp
ds
cmc
fcmovne
jmp
jmp
out
lret
mov
out
lret
cmpl
test
roll
dec
dec
in
ss
cld
out
cmc
in
repnz
shl
clc
aaa
inc
rcr
aam
inc
mov
ror
aaa
in
loop
aam
ds
lret
cld
cli
lock
cmc
fucomi
fsubrp
clc
in
leave
jmp
out
jmp
stc
jmp
fxch
cli
jmp
repnz
loope
ret
cmc
loop
mov
addl
xor
fst
int
cmp
test
sub
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
sub
fildl
jle
add
ret
ffreep
cld
lea
push
hlt
xor
xor
out
sar
cli
cmp
jecxz
ss
out
test
xchg
loopne
xchg
loopne
imull
enter
testl
fdivr
aam
mov
call
aam
shl
cli
jecxz
cmp
std
idiv
cmp
lock
add
mov
test
mov
std
into
xchg
xchg
lea
repz
shll
sarb
cmc
hlt
cmp
aad
jecxz
and
test
into
out
call
icebp
cld
out
lock
out
in
mov
xchg
rcl
xchg
in
shl
aam
enter
fst
lret
fcmovnb
fadd
in
sti
mov
lret
orb
shl
aam
rcr
out
aas
in
lret
cmp
jecxz
cld
ffreep
call
jmp
roll
iret
shll
icebp
call
rcr
add
neg
clc
cld
popl
mov
sti
divb
lock
test
test
enter
cli
loopne
icebp
iret
out
out
aad
in
jmp
in
leave
aaa
fdiv
cmp
fistpll
ffreep
out
shl
fildl
mov
rcl
in
mov
leave
ss
int3
xlat
out
fmul
idiv
loop
cmc
jecxz
adc
lret
sub
cmp
xlat
fld
mov
mov
lds
lock
int
xlat
aad
in
jmp
loope
fdiv
shl
ljmp
xchg
ljmp
rcl
cmp
dec
lret
loop
out
ret
incb
test
mov
ljmp
int3
ds
repnz
ret
mov
lret
jecxz
loop
cmc
into
shl
sarb
icebp
xor
repz
out
rorb
shl
icebp
shl
aad
xor
out
fcom
lds
shr
xlat
iret
fdivr
loopne
cmp
clc
leave
in
aam
xor
fdivs
sar
cmp
fdivp
ret
sar
cmp
test
jecxz
rol
sbb
rolb
in
xor
call
loopne
cli
into
xor
xlat
clc
out
fucomip
fsub
loope
jmp
loope
rcl
fcmove
out
xor
ffree
dec
fstpt
icebp
fcom
fiaddl
int
vcvtdq2pd
iret
in
fdivrp
fsubrp
out
fptan
ret
out
not
aam
aas
lock
lret
out
shlb
xor
into
xor
jmp
in
mul
rolb
jmp
sbb
mov
les
repnz
icebp
sti
xlat
clc
cmp
sarb
fnstcw
test
int
int
loopne
mov
cs
ss
cmp
hlt
cld
fcmovnb
rcl
loop
xlat
loope
mov
lret
in
decb
fcomi
fbstp
lock
cmp
int3
mov
xchg
xchg
out
shlb
xor
ror
hlt
cmp
aas
adc
enter
in
mov
loop
aam
ret
in
fcmovnu
fmulp
not
sar
test
sarb
idiv
loopne
into
nop
xchg
nop
in
out
mov
rcl
xor
enter
hlt
fstp
cmc
out
aad
shl
leave
mov
incl
adcb
in
out
in
bnd
iret
loope
out
ljmp
jmp
neg
fidivrs
sti
icebp
sti
loop
test
out
fildl
into
test
shll
xor
iret
repz
sti
aas
aas
clc
jecxz
aas
sar
lret
ret
mov
mov
xchg
rcl
xchg
xor
fxch
repnz
divl
shl
stc
lock
filds
orl
into
leave
cmp
loopne
add
ljmp
sub
rcl
call
int
repnz
std
fldz
filds
fmul
cli
sar
call
xchg
cs
in
divl
icebp
int
leave
cmp
into
fstp
ret
call
int
nop
ljmp
into
cmc
neg
cmp
xlat
sub
fcomp
lock
jecxz
cmp
enter
hlt
xchg
cmc
fcom
leave
fsub
pushl
sti
fdivr
aad
rol
fisttps
fiadds
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
mov
pop
filds
jle
add
xchg
lock
out
repnz
cmp
fdivp
sbb
cld
dec
test
fcmovnu
sub
in
xchg
cmc
shr
sub
in
repnz
lock
dec
rol
shl
test
fcmovb
call
icebp
jmp
stc
cmp
test
and
cli
or
mov
jmp
jmp
xlat
fnstcw
fcmovu
sti
mul
std
out
loopne
mov
jmp
clc
ret
jmp
into
fdiv
rcl
sar
test
rcr
movb
into
cli
test
loop
sarb
neg
xor
std
dec
adc
les
out
enter
in
lds
xchg
shr
loope
loop
icebp
sti
in
std
sbb
aam
test
jmp
fucomip
dec
in
out
cld
cmc
in
in
xor
fprem
fcmovu
ds
cmp
fadd
loope
out
lds
ret
test
notb
std
cmp
test
rcl
jmp
fdivr
std
std
lret
nop
mov
aam
cs
cmp
shl
fcmovb
std
loopne
or
faddl
std
lock
xor
int
call
aad
cli
cmp
sti
fcoms
xchg
jmp
clc
out
in
into
lret
ljmp
stc
cmp
xlat
out
stc
call
aad
ss
aam
cmp
cmp
out
neg
into
lock
testb
in
xchg
rcl
cld
loope
ret
ss
std
loope
icebp
cmp
inc
loopne
fsubrp
call
std
shl
hlt
in
xor
out
rol
fyl2xp1
in
not
in
cmc
cmp
shl
sbb
sub
adc
xchg
in
ret
int
cmp
xor
icebp
test
loopne
xchg
jmp
cli
mov
mov
cmp
out
lret
cmp
add
aad
rcl
hlt
out
fld
int
fimuls
enter
sti
jmp
fmul
into
cli
in
lock
out
fsub
in
mov
incb
cmp
std
jmp
xor
into
loope
aam
nop
fldl
ss
in
fdiv
repz
fnstenv
cmp
lock
aam
lock
jmp
std
mov
in
lret
int3
aad
in
shll
out
aad
in
cmp
call
loop
out
mov
jmp
ret
in
in
loope
aaa
jmp
repz
leave
shl
test
test
shl
imul
aad
in
xchg
nop
loopne
call
cli
lret
xor
sarl
iret
ffree
addl
xlat
orl
repz
in
iret
int
hlt
not
out
aam
cli
fdiv
test
sti
sar
ret
out
sti
call
in
call
shrl
int
jecxz
adc
hlt
fisttps
xchg
lret
in
jmp
ljmp
rol
rcl
testl
aad
xor
stc
stc
sar
fst
shl
aam
cmp
repz
clc
test
repz
fdivp
int
ljmp
call
jecxz
test
in
xbegin
int
repz
in
loope
sub
ds
loope
mul
adc
call
enter
hlt
mov
cmp
repnz
aas
neg
add
loope
clc
aam
int3
out
loop
lret
fimuls
fsubr
jmp
xor
cmp
add
fmulp
std
mov
clc
icebp
cli
rcll
jmp
enter
cmp
xor
fistpll
aad
mov
push
mov
mov
jmp
rol
loop
frndint
cli
ljmp
fucomip
repnz
aad
lret
out
cli
into
xchg
addb
aaa
das
clc
sti
lock
repz
repz
call
mov
std
in
aad
iret
in
ljmp
int
ret
stc
loope
imul
loope
aam
lret
fdivs
xor
in
int
in
loope
hlt
int3
icebp
sti
and
cmp
ret
mov
in
xchg
cs
shlb
ror
cmp
in
rcl
sti
test
cli
in
jmp
call
leave
repz
ss
int
xor
jmp
enter
int
fnstenv
adc
inc
xchg
add
add
ror
jmp
addb
mov
test
cmp
div
xor
in
lret
out
in
lock
test
cli
vpsubsw
fcmovne
leave
call
in
hlt
stc
clc
shr
divb
fcmovu
sti
cmc
in
jecxz
repnz
out
call
loop
clc
in
xor
fcomi
shlb
cld
cmp
push
ret
cmc
hlt
lret
mov
cli
dec
filds
cmc
in
fcmovu
aaa
in
shl
shl
ret
leave
sar
jmp
mov
repnz
xor
xor
or
lock
repnz
lret
in
sti
mov
in
in
ljmp
clc
rcr
shl
mov
fst
into
in
call
cmc
enter
ljmp
test
lret
leave
fisttpll
xchg
xor
out
cli
cmp
in
cli
faddl
rolb
std
fcomp
icebp
lret
into
out
repz
in
sar
neg
lret
clc
rcr
cmc
icebp
shr
jmp
ret
sti
out
int
aad
test
cmp
in
repnz
int3
fxch
addb
call
mov
lds
shlb
cmp
enter
cld
aas
addb
out
into
xor
in
mov
shl
xor
addl
jecxz
clc
or
loop
shl
cmc
shr
fidivl
in
fdivrs
jmp
aas
std
icebp
repz
add
cmp
fidivs
ss
jecxz
call
icebp
cld
test
shl
loop
fildl
fadd
adcb
cmp
cld
sti
ds
iret
testb
fucom
call
loopne
repnz
repnz
call
fcom
repz
enter
call
in
test
call
mov
loopne
cmp
sar
fcmove
icebp
ret
lret
ret
cli
fcmove
nop
xchg
fcomi
aad
das
cmp
out
neg
ljmp
xchg
xchg
shl
jecxz
clc
test
ljmp
das
cmp
rcl
xlat
loop
imul
cmp
testb
loop
fcmovnu
jmp
test
icebp
xor
cmc
in
imul
cmp
cmp
addb
jmp
fdivrp
fucomp
dec
stc
in
aam
cmp
into
cmp
stc
shl
fdiv
in
ljmp
rcl
jecxz
enter
lock
div
jmp
mov
call
xor
in
std
into
fdivr
cmp
fcmove
loope
out
repz
ret
mov
mov
jmp
jmp
out
xlat
out
cmc
fdivr
int3
shl
lock
fadd
mov
dec
sar
cmp
xchg
in
out
in
cmp
fcmovbe
cmp
int
aam
cli
test
mov
cmp
in
cli
in
icebp
int
fdiv
loop
iret
fldl2e
fucomi
out
loopne
sti
hlt
int
aaa
fiadds
loopne
leave
rcll
cmp
sub
cmp
cli
xor
fcomp
movb
sbb
in
xor
hlt
sti
cmp
int3
push
out
shl
roll
in
call
xchg
das
loop
rcr
enter
addl
stc
xchg
clc
repnz
rorb
cld
xor
repz
aad
repz
out
push
cmc
fcmovb
std
jecxz
jmp
in
mov
shr
ror
cmp
clc
ljmp
out
mov
fucompp
mov
call
addb
xor
clc
fcmovu
cli
rcl
out
hlt
and
xchg
in
int
filds
aad
jmp
repnz
rcl
int
aad
cli
vpaddb
xchg
lock
jecxz
lock
in
repnz
int3
int
stc
ljmp
movb
loopne
out
xchg
int
shlb
enter
fdiv
out
cmp
repz
rcr
inc
clc
in
std
leave
mov
aad
xor
idivl
aad
stc
lret
call
call
sub
icebp
repz
repnz
into
fst
cmp
into
aam
shl
cli
leave
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
jle
loope
xor
add
add
xlat
sti
orl
cmc
cmp
fsubrp
in
shl
xlat
rcr
icebp
out
mov
in
mov
in
ror
call
fdiv
jmp
div
test
rcr
jecxz
hlt
mov
out
in
loop
out
xchg
in
leave
stc
jecxz
fsub
in
aaa
out
out
ljmp
out
fmul
loop
repz
lock
divl
lock
icebp
cld
repnz
leave
loop
fcmove
std
xchg
xchg
rcr
out
bnd
rcr
cmc
repnz
std
repnz
sti
aam
fildl
lea
into
int3
xor
cmp
fmul
cmp
lret
cmp
xlat
test
test
xor
div
fxam
shll
clc
stc
div
ror
cli
sar
shl
xlat
and
enter
jecxz
out
xor
aad
hlt
stc
sti
lret
cmp
into
xor
in
ret
sar
clc
incl
decb
enter
cmp
int
fcmovnu
loop
aas
icebp
fmull
stc
jecxz
or
into
mul
ret
lret
int3
cld
into
hlt
aam
cld
cmp
mov
ror
mov
testl
ret
idiv
adc
ret
add
jmp
out
mov
icebp
loopne
and
icebp
aaa
in
fucomi
ds
aas
sar
fstpt
cmc
decb
mov
mov
out
hlt
in
loopne
xor
cmp
fidivrl
int3
ss
xlat
std
cld
roll
fsubr
mov
fcoml
imul
lock
out
jmp
imul
aad
idiv
sbb
clc
enter
lock
jmp
shl
imul
fmul
sbb
sti
jecxz
adc
xchg
cli
xchg
enter
fucomp
out
int
icebp
clc
int
enter
shr
out
fadd
idiv
clc
mov
int3
fdivp
mov
mov
cmp
not
cmp
cld
rcr
std
icebp
aad
fyl2xp1
xlat
stc
loopne
nop
test
rol
ljmp
out
loopne
hlt
sarl
hlt
aam
cli
fadds
int3
xchg
incl
enter
rcr
rcr
out
in
repz
call
jmp
hlt
ss
cmp
xor
shr
into
addb
flds
out
lret
out
xchg
lds
out
repz
test
shl
shr
inc
filds
lret
sti
std
shr
aam
enter
cs
aam
cli
rcr
aas
stc
loope
sub
into
in
jmp
fcmovnbe
repnz
lret
xor
into
icebp
and
ret
rcl
call
loopne
fndisi(8087
test
fmulp
hlt
int3
cmp
hlt
enter
fcomp
ret
stc
aaa
dec
xlat
test
test
out
out
xlat
loopne
xor
out
jmp
rcl
test
movl
ror
icebp
not
cld
ds
fdivrl
cmp
out
fiadds
cli
fiaddl
jmp
rcl
hlt
shl
clc
cld
lret
xlat
cmc
cli
rol
ds
stc
aam
fld1
xchg
xchg
xchg
mov
xchg
xor
leave
out
cmp
iret
ror
aad
mov
in
jmp
mov
int
jmp
loop
call
jmp
ret
shl
int3
aad
in
mov
mul
xlat
xlat
fcomi
lret
cmp
imul
cmp
cmc
fdiv
mov
out
flds
xchg
in
repz
xor
int3
ss
aad
into
cmp
lret
lret
ljmp
ror
cld
xor
aad
jmp
ror
cmp
iret
fnstcw
fcom
loop
in
stc
fdiv
lock
jmp
cmp
in
ds
shr
xor
test
ret
leave
out
nop
fstl
shl
lock
std
hlt
jmp
cld
repnz
lock
loop
jmp
vpavgw
mov
orb
lret
leave
fistpll
sti
out
xor
test
fiadds
xchg
xchg
aas
cli
cmp
ss
aad
repnz
sti
xor
test
cld
and
into
stc
ljmp
ror
xlat
aam
cmc
cmc
sbb
orl
ljmp
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
aad
cs
xorl
cli
mov
in
fxch
fiadds
sub
ljmp
jmp
into
xor
xlat
stc
les
fcmovb
fisttps
mov
test
int
cmp
cld
fdivr
sbb
repz
out
sti
mov
imul
in
sub
iret
add
clc
flds
call
loope
fisttps
in
shlb
cli
loop
into
cmp
fxch
jecxz
out
rcl
in
xchg
lret
out
lock
rcr
out
sti
in
xchg
or
out
call
jmp
std
ds
adc
xlat
in
std
jecxz
in
in
into
mov
loopne
mov
rcr
int
jmp
rcr
xlat
aad
xor
cmc
rcl
fmull
rolb
shl
into
cmp
loop
repz
repz
out
not
int
in
cmp
lret
sti
iret
jecxz
iret
mov
fsubr
std
xchg
fmuls
cmc
repnz
call
fsubr
int3
repnz
repz
cld
shl
mov
in
out
shll
in
out
int
cmp
xlat
out
into
xlat
loop
loope
int3
into
lret
loopne
icebp
ror
in
lret
leave
out
xor
cmp
shl
xlat
cmp
ret
jecxz
cld
cli
fmull
in
ror
bnd
dec
hlt
lret
or
fld
mov
cld
ficoml
in
call
not
out
ljmp
sar
jmp
lret
cld
icebp
xchg
clc
out
sarl
out
int
roll
cld
in
shl
fdivr
fsub
roll
fsubr
out
ret
int3
div
into
iret
ret
std
xchg
ljmp
jmp
orl
fdiv
lret
cmc
cld
div
test
neg
aam
ret
orb
fldl
into
xor
iret
cld
ffreep
idiv
clc
sar
aad
mov
ficoml
loop
clc
enter
lock
cmp
jmp
stc
rcl
rcl
out
hlt
ljmp
xchg
test
in
das
in
jecxz
ss
cmp
leave
shr
repnz
out
in
idiv
leave
stc
jecxz
enter
iret
mul
das
lock
stc
shr
aam
sarl
into
mul
cmp
loope
fcmovu
in
xchg
fiadds
cmp
cs
cmp
out
loopne
faddl
mov
mov
lret
in
fucomi
cli
xor
rcr
in
xor
test
fmul
stc
int
ficoml
ss
cmp
call
aam
cmp
ds
cli
or
adcb
out
fcmovu
aam
jmp
ljmp
fdivrs
mov
mov
fldl
ret
idiv
int
out
lret
loope
int
iret
fnop
repnz
xchg
test
int3
xlat
lock
cmp
cmc
xor
out
loop
leave
int3
mov
mov
in
sarl
fdiv
aaa
idivb
cmp
cmp
cmp
xchg
jecxz
ljmp
loop
in
ret
loop
xor
out
repnz
mul
bnd
cmp
cmc
mov
jmp
icebp
call
clc
lock
lret
repz
ffree
loopne
incb
out
mov
ror
mov
xlat
xlat
xor
fyl2x
sti
jmp
icebp
aas
cld
out
loop
cli
in
jecxz
out
repz
rcr
iret
int3
in
cli
clc
cli
in
sti
fildl
loop
hlt
int3
cld
loopne
in
iret
popl
out
fxch
in
icebp
cmp
ds
repnz
xchg
shr
test
in
xchg
out
xchg
leave
aam
out
int
out
ds
cmp
test
test
idiv
fcmovb
ret
jmp
lret
adc
shlb
ror
iret
out
in
shl
cmp
aas
loop
mov
ds
ftst
fcmovnbe
std
out
int3
lret
das
aad
int3
in
sarl
clc
fcmovnu
loop
fucom
flds
std
jmp
fisttpll
xor
repnz
aaa
cmp
cmp
or
add
lds
add
aad
xlat
fcmovnu
ret
pop
lock
shll
add
add
test
cli
clc
test
testb
xchg
xchg
xor
jmp
repz
jmp
xlat
out
sti
aam
cmp
aam
in
in
out
lock
jmp
adc
xor
in
lret
cmp
xlat
fcmovne
jmp
cld
repnz
orb
in
cmc
imul
xor
out
cmp
sub
cli
cmp
faddl
int
jmp
in
mov
cmp
fcmovne
aam
jmp
incb
out
sbb
fsubp
fistl
lret
int3
icebp
xor
neg
aas
fdivrl
cmc
leave
enter
nop
icebp
xchg
lret
xchg
jecxz
in
leave
test
fdiv
in
cmp
icebp
in
fdivrp
cmc
repnz
out
fcmovb
in
rorb
enter
ss
in
repnz
mov
repz
jecxz
loope
loop
xor
cmp
shr
fnstcw
in
ror
cmc
lock
mov
sbb
fucomp
mov
xor
fdiv
repz
sti
cmp
aam
ret
jmp
idiv
icebp
into
sub
xchg
lret
shl
cmp
lret
stc
in
hlt
rolb
in
std
repz
or
xlat
hlt
jmp
shl
sti
add
jecxz
add
idiv
test
aad
iret
in
aam
aad
dec
in
loopne
repz
test
clc
in
call
int3
shl
icebp
nop
shl
jmp
jmp
icebp
fxch
aaa
fdivrl
and
std
xchg
rorl
xchg
out
out
rcl
repnz
aam
enter
aad
dec
addb
xchg
lret
roll
repnz
divb
lock
rol
enter
mov
loopne
loopne
int3
sub
leave
cmp
fucomp
std
jecxz
icebp
div
repnz
ljmp
mov
ljmp
int3
rolb
mov
fldl2t
out
nop
lret
roll
fprem1
cmp
test
aad
add
mul
jecxz
ret
enter
cld
sti
movb
aam
cmp
fucomi
aaa
aas
cli
xlat
xchg
faddl
adcb
cli
repnz
cld
iret
fsubr
cmp
in
loopne
fcmovnu
loopne
fdiv
shr
and
int
sub
fcmovne
aam
cmpb
test
hlt
orl
in
popl
cli
xor
clc
ss
repnz
fucomp
aad
repz
ret
jmp
test
sti
jmp
out
icebp
leave
shrl
not
loope
ds
in
test
testb
aam
jecxz
int3
repz
loopne
cmp
cmp
rcl
aam
mov
cli
aad
ffree
mov
icebp
fmul
repz
out
lret
iret
lock
fsubp
fdivp
cld
jmp
cmp
shr
icebp
hlt
orb
xor
cmp
fistpll
cli
test
sti
and
ret
jmp
out
int
xchg
in
ljmp
lret
cmp
and
cmp
loopne
mov
mov
mov
test
cld
clc
lret
rolb
stc
ret
cmc
xchg
cld
test
out
nop
int3
xchg
xor
xor
stc
cmc
fcmovu
iret
std
fsubrp
aad
cmp
xchg
mov
mov
sarb
ret
out
fldl2t
imul
sbb
loope
xor
fmulp
cli
fisttps
sbb
cmp
int
fsubp
aas
repz
ds
ds
stc
test
xlat
ret
enter
lret
iret
int
cmp
in
in
iret
lock
cld
cmc
cmp
testb
int3
faddp
orb
mov
clc
jmp
out
cmc
aad
shr
repz
leave
test
int
in
in
int
int
in
jmp
aam
aam
flds
fiaddl
leave
xchg
lret
enter
xor
int
repnz
cli
clc
stc
ret
fisttpl
ret
enter
nop
repz
shll
int3
aam
into
int
clc
cmp
fildl
int
cld
into
icebp
mov
lret
in
call
repnz
cmp
stc
int
fyl2xp1
repz
cmc
fiadds
into
xor
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
or
insl
sarb
testl
jle
mov
fcomip
ret
call
xor
into
lret
cli
jecxz
out
cld
cli
ljmp
loopne
in
out
ret
int3
cmp
sti
lock
div
ror
out
in
leave
cmp
cli
nop
mov
in
loop
cmp
fadds
cli
aas
mov
mov
jmp
jmp
cmp
in
aad
in
sti
cmp
orb
iret
in
rorl
rcr
lret
std
jmp
out
stc
rcl
lret
add
jmp
jmp
in
cld
sti
rcl
cmp
cmp
fadd
sar
shl
loope
xlat
int
lock
nop
std
in
leave
aam
icebp
fmul
in
hlt
shl
sarl
lret
lock
fcomip
cmp
ljmp
in
iret
jmp
out
repnz
in
shl
icebp
cmc
cmp
cmc
ror
mov
test
lret
lret
int3
in
fnstsw
idivb
jecxz
into
in
xor
fcmovnbe
loope
mov
xchg
jmp
enter
aad
cmp
rcl
fxtract
aam
fcmovu
sti
cli
fmull
lret
test
enter
shl
out
lret
lret
sti
cmp
rcl
stc
in
int3
stc
cli
int
mov
jecxz
in
loop
aam
sub
sti
aaa
and
ret
xchg
ret
aam
mov
sbb
sti
out
mov
lret
lock
ljmp
mov
xchg
mov
loopne
fst
xchg
cmc
loope
xor
loop
jmp
aam
fprem1
int
out
repz
jmp
loope
int3
lea
out
icebp
leave
in
xor
cld
int
fstp
cmc
not
cmp
rcl
repnz
nop
mov
lock
mov
int3
out
ljmp
int
cmp
hlt
stc
fcmovne
in
int
mov
shl
fdivr
rorl
aam
out
fdivrs
int
ret
shl
ret
fdivrp
enter
mov
out
shl
cmc
repnz
int3
cmp
repnz
sar
xchg
rcr
in
test
int
cmc
aam
aas
das
cmp
stc
out
repz
cmp
rcl
in
repz
jmp
mov
out
test
xor
in
icebp
leave
aaa
fsub
int
fstpt
fstpt
fsubr
in
lock
aam
rorb
decl
int3
xor
aam
jmp
out
adc
aad
out
test
test
fcomip
sbb
in
xlat
cmp
not
stc
lret
std
cli
ffreep
cmp
repz
testl
cs
xlat
in
int
imul
sar
neg
aaa
sar
ret
in
stc
mov
into
sbb
iret
hlt
icebp
xor
enter
das
sti
hlt
cmp
ret
aad
not
cmp
and
addb
out
iret
call
loope
sar
xlat
repnz
adc
in
iret
out
shr
cmp
ds
lds
mov
jecxz
leave
lds
xchg
mov
xor
shr
cmp
cmc
out
xlat
stc
cmp
testl
mov
loope
addl
test
repz
cmp
ljmp
stc
std
in
jmp
hlt
int3
stc
clc
in
cmp
sarl
sar
xlat
fcmovu
in
enter
cld
shl
iret
aam
stc
int3
repz
in
fidivrl
xlat
loopne
iret
rol
shl
cmp
fiaddl
xchg
in
and
int
call
leave
xlat
cld
fdivr
repz
fninit
fdivr
ljmp
xchg
ret
out
int
sti
into
xor
sarl
cmp
cld
aam
rol
ret
stc
lret
loop
xchg
mov
sar
fptan
jmp
hlt
xor
out
in
cmp
repz
hlt
cmc
or
cli
loopne
xchg
into
int3
shl
repnz
shrb
rcl
rcl
ret
rcr
jmp
in
cli
in
faddl
in
cmp
out
lret
out
cli
aad
cmc
cmp
xlat
xchg
sti
lds
movb
in
in
xor
repz
rcr
fabs
aam
jecxz
jmp
sti
out
ret
roll
rcl
xor
jmp
in
sti
ret
repz
in
incl
rcr
sar
aam
movl
jmp
ret
int3
rcl
ret
fldl
das
cli
push
add
into
cmp
ret
out
loopne
addl
xchg
xor
call
xor
rcr
int
in
ret
xlat
rolb
iret
cli
int
cmc
in
xor
jecxz
call
shr
cli
out
aas
fsub
jecxz
fcom
cmp
cmp
mov
hlt
jmp
jecxz
cli
fdivr
cmp
jecxz
aas
xor
loop
neg
mov
xchg
in
into
sub
in
xor
cld
loopne
loopne
stc
into
sti
aam
in
dec
sub
int3
xchg
ror
vcvtdq2pd
sar
cmp
aas
rcr
bnd
fadd
ljmp
leave
lret
adcb
test
loop
addl
lret
in
fiadds
out
into
in
in
rcl
out
in
add
div
loopne
xchg
in
dec
ljmp
not
lret
sti
hlt
iret
fdiv
lock
xchg
mov
jmp
xchg
xchg
div
xor
lret
ljmp
loope
addb
and
fsub
xor
out
icebp
aaa
fcmovnbe
std
cmp
sub
test
leave
fdiv
xchg
iret
shlb
ror
into
shl
fcompp
ror
loope
repnz
cli
add
jmp
in
fucomi
in
fucomip
int3
in
ror
shlb
std
out
xor
sbb
iret
repz
mov
std
fmul
cmp
loope
into
ljmp
xlat
jmp
fsubp
loope
loope
stc
fstp
mov
lret
xchg
xor
cmp
div
cmp
loope
jmp
mov
repnz
xor
fldlg2
aas
in
in
iret
aam
lock
test
aad
xchg
int
out
out
xchg
out
mov
rcr
clc
std
lret
test
fcmovu
push
loopne
aam
in
icebp
call
shrl
rol
cmp
std
std
xor
jecxz
sbb
fiadds
fmul
mov
ljmp
vpsllw
int
ror
cmp
icebp
fidivrl
cld
test
rcr
xchg
fucomip
mov
enter
shl
xlat
sarb
rcl
test
test
aam
mov
roll
aad
out
xor
call
out
clc
sarb
in
test
fidivrs
aas
test
xchg
rcl
iret
ss
ss
iret
in
cmp
fadd
test
in
fadds
loope
aam
xor
jecxz
divb
enter
sti
xchg
xchg
sti
sti
movl
xor
das
test
fsub
cmp
sti
cmc
in
in
mov
jecxz
xchg
xchg
mov
repz
ljmp
out
shr
stc
shr
loopne
hlt
aad
xchg
aad
flds
xchg
ljmp
repz
in
cld
in
repz
repnz
hlt
test
leave
sti
xchg
repz
int
icebp
idiv
repz
shl
loope
loop
loopne
jmp
out
test
aam
aam
stc
in
shr
xor
hlt
call
cmpb
repz
lret
into
icebp
loopne
out
cmc
aas
xor
in
hlt
iret
aam
stc
aas
ret
jecxz
icebp
rol
xchg
jmp
rcll
jmp
lret
aas
jecxz
std
shr
fadd
cld
aad
test
in
xor
cs
cld
cmp
in
loop
xchg
clc
rcr
cmpl
out
cld
fiadds
xor
icebp
enter
fistpll
aas
in
into
sar
hlt
in
mov
into
fisttps
jecxz
cs
icebp
vpaddusb
icebp
icebp
cmp
into
aas
xlat
cld
fimuls
orb
hlt
in
into
out
clc
xlat
jmp
xlat
aam
int3
hlt
movl
icebp
out
xchg
enter
fsubrp
ds
sar
hlt
rcr
addb
jecxz
loopne
shl
div
ret
in
jecxz
ss
cmp
iret
aaa
int
fucom
adc
fmuls
fcmovnu
rclb
les
cmp
fyl2xp1
fsub
cld
int3
std
xchg
neg
cmp
clc
stc
jmp
rorl
jecxz
in
hlt
std
into
in
idivl
aas
aad
out
aad
test
cmc
mov
movl
xor
movl
sbb
jmp
fadd
aam
fst
fcoms
sbb
jg
loope
in
addb
stos
add
leave
loop
in
out
out
iret
xor
out
fdivrp
cmp
jmp
cmp
fdivr
xlat
test
fiaddl
rolb
aam
lock
fpatan
hlt
cli
cmp
out
sti
fidivrl
ret
stc
fcmovu
aam
in
push
shl
xchg
in
ljmp
bnd
rcl
clc
xchg
lret
faddl
ljmp
les
cmc
jmp
fdiv
shl
shl
cmp
cld
shl
out
mov
jecxz
enter
hlt
fmul
stc
call
aas
aam
in
shl
mov
fsqrt
mov
std
cmc
cmc
das
loop
ss
idiv
cli
aas
cmc
imul
roll
ljmp
out
xlat
lret
aaa
cmp
cmp
lret
fiaddl
out
fucomip
rolb
mov
jmp
out
rol
int
lret
out
loope
shl
roll
fisttpll
mov
jmp
xchg
jmp
call
in
hlt
loopne
shl
sar
aad
sar
mov
fiadds
xchg
out
iret
out
out
aam
in
rcl
jmp
fadd
cmp
xchg
xchg
mov
into
test
ljmp
fdiv
out
mov
in
lret
shl
test
clc
cmp
cmp
test
clc
repz
test
xchg
xchg
xchg
call
cmp
shl
test
shl
std
cmp
sti
lret
filds
int3
iret
xor
xor
les
sarl
cmp
out
out
std
leave
aad
loope
fdivr
lret
in
out
out
cmc
cmp
in
fdivrl
shl
icebp
sti
fldl
lea
in
divb
in
xor
in
fdiv
test
aam
fldl2t
test
in
roll
iret
jmp
imul
clc
rcr
testb
not
stc
call
in
cmp
mov
cld
xor
int
sar
fsub
aam
mov
aad
cli
ret
repnz
lock
clc
cmp
in
fcmove
cld
lock
cmp
ds
loope
cli
lret
lret
mov
mov
int
out
cmp
fnstcw
clc
cld
ljmp
rcr
jmp
out
hlt
fbstp
cli
out
test
cmpl
jmp
leave
enter
loopne
rolb
in
sti
out
cmp
fucomi
sti
xor
leave
jmp
mov
std
cli
cld
mov
xchg
call
fnsave
int3
cmp
xrelease
mov
leave
loopne
xchg
call
lret
iret
cli
loope
fdiv
cmp
test
fdivrp
enter
lret
mov
rol
cli
xlat
call
out
loop
cmp
in
test
cli
cli
fcmovu
fcomp
iret
iret
fucomp
out
hlt
xor
jmp
cmp
int
fbstp
aam
fldl2t
mov
int
xchg
mov
shlb
shl
idivl
cmp
loope
shl
in
clc
fadd
sti
fildl
fcoml
out
sub
cmc
fcmove
repnz
sar
ffree
adc
jecxz
call
mov
ss
aaa
jmp
fdivs
rcr
cmp
repnz
cmc
addb
lret
mov
int3
iret
hlt
hlt
int3
xlat
cmp
cmc
fcmovnu
add
in
out
addb
mov
xor
out
xlat
ss
cmp
xor
out
repnz
sub
ret
fisttpll
movb
lret
hlt
in
cmp
cmp
flds
out
jmp
call
xor
ljmp
hlt
neg
repnz
aam
leave
fiadds
fucomi
in
rol
out
neg
std
cli
ss
repnz
stc
cli
ret
sub
fsubp
lret
jecxz
loopne
int3
xchg
xor
hlt
aad
jmp
lret
xlat
call
in
std
ds
call
stc
cmc
loop
stc
int3
in
mov
aad
cs
leave
fnstenv
xor
out
icebp
std
cmpb
aas
ret
clc
cmc
cmc
int
ror
mov
mov
test
ror
repz
int3
sub
test
incb
lea
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
push
scas
ret
jle
add
ss
repnz
aas
cli
loope
mul
lock
mov
mov
mov
dec
jmp
xchg
xor
out
stc
xor
fcmovu
into
fstp
test
cmp
ret
call
xchg
xchg
loop
aad
xlat
cld
xor
cmp
sar
fcmovbe
out
aam
enter
out
lock
ljmp
iret
int3
into
into
div
cmp
loop
shl
fsub
fsubr
icebp
out
ljmp
icebp
lret
rcr
jmp
rcl
rcr
clc
notl
xchg
jecxz
aam
leave
stc
sti
ror
int
cmp
cmp
xlat
cli
stc
loope
in
in
jecxz
jmp
xchg
cmp
sti
out
lret
cmp
fnclex
test
jecxz
lret
out
notb
mov
shl
in
in
icebp
cmp
int
clc
jecxz
sarl
mul
in
mov
test
out
mov
aam
repnz
adc
div
cmpl
out
mov
faddl
cmc
stc
cld
xor
aas
int3
aam
rcl
in
rol
xchg
test
in
in
cmc
int3
in
fsubr
in
xor
xlat
xor
loopne
in
in
fucom
rorb
mov
aad
cmc
ret
int3
ss
into
cld
lock
shl
sbb
fld
in
mov
xor
clc
shl
icebp
iret
out
sti
repnz
aam
aas
cmp
cld
fucom
ret
add
sti
addl
into
xlat
loopne
int3
fucom
enter
call
mov
in
in
sarl
imul
cmpb
rol
shl
out
jmp
sar
test
jecxz
test
adc
xor
out
out
icebp
leave
neg
cmp
cli
in
cmp
loop
fcmovnbe
loope
nop
loope
int3
repnz
in
lock
fndisi(8087
aad
fucomip
jecxz
ffree
fxch
mov
rcll
ror
icebp
xlat
in
jmp
out
fcmovnu
aam
not
fnstcw
fdivp
enter
fsubr
fsub
ffree
shl
add
ret
into
cmc
clc
cmp
out
sarb
fld
roll
in
int3
in
icebp
loope
aas
fdivs
into
sub
aas
lret
fucomp
cli
out
cmp
in
jmp
loope
lret
mov
xchg
hlt
das
aaa
cmp
cmp
fcmovnbe
repnz
cmp
int
test
add
out
out
jecxz
fdivrp
nop
mov
icebp
icebp
jmp
aaa
lock
loopne
out
push
out
ds
xchg
mov
jmp
repnz
jmp
in
xchg
clc
test
jecxz
testl
aad
xor
loope
out
aas
jecxz
rol
in
or
repnz
and
loope
jecxz
cld
ror
shr
cmc
rcr
rcl
xchg
ret
lret
cld
leave
fcmove
or
out
idiv
cs
call
test
aam
mov
cmp
test
addb
bnd
repz
hlt
jmp
test
aad
test
ror
fldl
vpsubsw
leave
cmp
icebp
in
fiadds
aam
clc
in
out
icebp
int3
mov
into
in
jmp
call
jecxz
fildl
ljmp
bnd
out
into
into
in
icebp
test
call
xlat
jmp
aad
int3
icebp
std
adcl
in
ss
clc
std
cmp
fldl
lret
cli
cld
lret
orb
sub
sti
iret
iret
cmp
int
std
sti
repz
rcr
cli
std
fcmovb
in
into
lock
jmp
out
das
fcmovu
lds
jecxz
in
sar
aam
jecxz
cld
loopne
sti
icebp
lea
cli
xlat
in
clc
rcl
lret
test
ret
shr
cmpl
nop
jmp
xor
iret
fdivl
out
lock
in
out
stc
loope
loopne
cli
icebp
and
out
fcomip
aad
repz
in
xlat
loopne
stc
repnz
out
cmc
ljmp
faddl
leave
fldpi
cmp
xlat
idiv
cmp
sti
cli
cmp
fdivr
enter
into
jmp
not
into
sarl
aaa
call
sti
ret
cli
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
ja
mov
jle
add
loop
fisttpll
xchg
xchg
hlt
xlat
lock
xor
out
out
loope
in
ss
xchg
imul
aad
loope
int
xchg
cld
out
in
repnz
aaa
std
shlb
sti
loop
loop
shl
inc
std
loop
jmp
in
jmp
xor
ljmp
rol
xlat
fcomip
lret
iret
into
jmp
out
xchg
jmp
in
cli
aaa
xlat
repnz
int
bnd
repz
div
lret
stc
std
out
xchg
xor
xor
clc
cmp
sti
int3
sar
into
loopne
fdivp
lock
leave
clc
cld
stc
out
shl
orb
xor
int3
icebp
iret
into
cmp
loopne
rorb
xor
not
loop
in
shr
leave
repnz
iret
loop
aaa
aad
in
aam
call
ljmp
shl
fcmovu
fcom
fdivrl
clc
repz
aam
loopne
and
inc
mov
lret
int3
fxch
in
jmp
sbb
aad
cmp
out
xchg
loope
icebp
cli
fndisi(8087
out
int
sub
cli
neg
aam
jmp
aad
lret
test
cmp
rcl
ret
fisttpll
ljmp
aaa
enter
ds
lret
xlat
test
in
xlat
clc
cld
int3
mov
lret
iret
cli
fmul
cmp
lock
hlt
shl
hlt
in
fsub
and
in
fmulp
xor
fldz
cmc
xor
in
lret
hlt
clc
in
jmp
in
fcmovu
dec
addl
sti
lock
test
cld
in
neg
fmull
call
jecxz
aaa
jmp
sub
fldlg2
repz
cmp
out
aas
call
out
lret
out
orb
repnz
fsubr
repnz
int3
cmp
out
jecxz
loop
lret
xchg
mov
mov
sub
fldcw
xor
repz
call
cmp
flds
jmp
fmulp
mov
xor
cmp
aad
lret
fdivr
ds
fadd
std
test
in
in
fsub
and
sub
out
aaa
vpminub
cmp
div
fdivr
sti
in
repnz
cli
lret
jmp
out
fmulp
mov
in
out
cmp
repnz
loopne
icebp
xlat
cmc
aas
clc
and
lret
loopne
shl
test
loope
cli
stc
cmp
stc
fld
cmp
out
iret
out
fcmovne
cld
in
mov
jecxz
roll
lret
shl
leave
cmc
std
aam
icebp
fidivrl
sar
lock
xchg
int
mov
lock
cld
leave
into
in
cmp
xor
sar
in
cmc
out
fadds
repnz
mul
in
lret
ljmp
sub
loope
stc
repz
fnstsw
jecxz
iret
loop
xchg
sub
ss
lock
cmp
lock
shl
addb
mov
jmp
hlt
lret
xchg
repz
stc
out
repz
sarl
fcmovnbe
sti
ljmp
nop
movl
out
aam
cmp
cmp
sub
leave
xchg
ljmp
loop
enter
ss
out
in
cld
cmp
ljmp
leave
xchg
into
rcl
hlt
fstl
jecxz
xor
repnz
lret
rcr
loopne
rorb
out
jecxz
leave
lret
out
hlt
fsincos
vpmulhw
jmp
loope
aad
test
jmp
mov
nop
in
repnz
xor
ss
shl
hlt
fucomp
mul
xchg
test
loop
mov
lret
vpinsrw
cmp
into
std
fincstp
loop
loope
aam
std
jmp
lret
out
adcl
aam
icebp
repnz
ds
incb
xlat
decl
ror
nop
xor
xor
xor
das
aam
xlat
int
rolb
in
fimull
std
xchg
int
aad
loop
into
fincstp
lock
loopne
in
jmp
jecxz
fsub
test
ljmp
into
mov
filds
shl
xor
xlat
int3
aam
out
mov
int3
mov
adcb
neg
std
out
ror
cmp
in
stc
adc
push
xchg
int
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
jle
inc
pushf
mov
jle
add
mov
out
cmp
fsubr
aam
fmul
lock
loopne
out
std
filds
in
loopne
clc
cs
in
fnstsw
loope
iret
out
test
in
out
fyl2x
fistl
aad
frstpm(287
in
int3
jmp
dec
add
std
fdivr
lret
sar
int
lret
xchg
out
ljmp
cmp
loopne,pt
cmp
addb
lock
shl
mov
ret
lret
into
cld
cmp
repz
repnz
leave
bnd
sbb
sti
xchg
xchg
lret
mov
ror
cmp
cmp
cmp
lret
repz
test
or
or
roll
aad
aam
enter
cmc
fiaddl
fucomp
fisttpl
mov
out
adc
loope
cmp
sarb
fldln2
cmp
in
jmp
sti
test
enter
out
lock
cmp
neg
into
divb
ljmp
std
rolb
fucomp
sti
fsubr
rcll
repnz
cld
cld
cmp
ret
cmp
rcr
stc
rolb
lret
out
call
cmp
leave
divl
int
int
in
loopne
mov
test
xchg
jmp
out
xlat
lds
in
icebp
fcmovb
sti
cmp
xchg
loope
out
cmp
mov
mov
test
out
hlt
aaa
icebp
out
cmp
iret
cmp
rcr
cli
cmp
xlat
in
testl
int3
jecxz
cmp
xor
jmp
ss
rcl
fsqrt
cmp
loop
aad
ljmp
jmp
neg
ljmp
in
xlat
repnz
xchg
jecxz
int3
repz
lret
loopne
cmp
repnz
xor
hlt
aam
fdiv
into
shl
adc
lret
std
int
lret
jmp
loope
int
clc
lret
cli
icebp
fmul
icebp
xor
loop
enter
fcmovbe
xchg
xchg
hlt
out
shl
out
ss
aad
out
std
ds
add
fcmovbe
xchg
in
stc
test
rcl
xor
cmp
or
stc
cmc
in
and
hlt
test
in
repz
test
int3
idivl
sar
leave
out
cmp
or
call
loop
int3
jmp
shl
test
aaa
cmp
roll
cmc
ret
loope
sbb
mov
mov
xchg
int
repnz
out
cmp
rcl
in
lret
aas
test
cld
xchg
fst
mov
iret
xchg
repnz
jecxz
repz
loope
cmc
fidivrs
fcmovb
sarl
jecxz
ret
cld
in
test
call
in
leave
std
fadd
out
fneni(8087
call
rol
out
stc
ret
fstp
lock
hlt
test
stc
lret
call
xlat
in
into
repz
rolb
xchg
jmp
mov
ret
ret
lock
fcmovnbe
aam
int3
fiadds
in
mov
jmp
xchg
iret
aaa
fidivl
call
cmp
xor
push
xchg
clc
loop
iret
int
xchg
nop
shr
ror
cmc
aaa
shl
ss
lret
into
fiadds
decl
mov
loop
and
rcl
lock
ror
jmp
fstpt
fdiv
clc
hlt
jmp
jecxz
into
in
test
xor
cmp
fldl
out
fsubp
jmp
leave
incb
xchg
out
xlat
ret
jmp
jmp
adc
xlat
cmp
stc
in
filds
mov
int
jecxz
into
enter
sti
out
aaa
cmp
fmul
cld
ret
rcr
faddl
rorb
in
cmp
out
fcomp
adc
clc
enter
mov
ror
loop
out
ljmp
aaa
fidivrs
int
iret
into
out
sbb
out
sub
int3
cmp
enter
sti
shl
xlat
aad
cli
in
clc
fadd
icebp
icebp
clc
test
into
loop
leave
repnz
out
xchg
hlt
jecxz
in
lock
cmp
sti
fdiv
aad
loopne
in
in
clc
enter
lock
lock
int3
xlat
sti
call
loope
cmc
test
fildl
clc
jmp
icebp
in
lret
in
cmp
ljmp
rolb
add
sub
add
rol
add
inc
bound
add
cli
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
neg
stos
out
leave
xchg
add
add
rolb
cli
hlt
flds
test
mov
into
mov
cmp
cli
cmc
cli
in
addl
sti
idiv
lret
xlat
test
lret
mov
ljmp
icebp
adc
filds
ljmp
jmp
ret
out
aam
cmp
in
aaa
fcmove
ret
roll
sti
mov
incl
ret
shlb
ds
fildl
frstpm(287
test
test
aad
stc
xchg
in
mov
lret
mov
shl
lds
cmp
rcl
faddl
xchg
lret
fimull
in
loop
lret
fcom
in
in
fcmove
stc
lock
rolb
clc
jmp
in
repnz
enter
in
xor
int3
aad
aaa
rolb
loop
fcmovnu
loopne
cld
fdivr
leave
int3
xchg
in
mov
in
jecxz
mul
cld
jmp
out
idiv
rcr
lock
clc
in
mov
xchg
sbb
loop
xor
cmp
in
aam
xor
rcr
out
ds
in
xchg
leave
mov
aad
iret
hlt
aam
leave
loopne
out
rcr
fadds
jmp
iret
mov
jmp
rcr
out
fdivr
aad
aam
ss
mov
sub
out
mov
adc
lret
ret
ss
aas
cmp
iret
dec
or
testl
in
fprem1
fcmove
shl
cld
out
int3
jmp
idivb
icebp
les
fsub
inc
enter
xchg
fists
xor
aam
shr
ds
fcom
loopne,pt
ffree
in
out
test
adc
fsub
ret
fadd
das
aas
leave
ds
std
sti
orb
in
les
rcr
xor
icebp
aam
fdivp
fcmove
hlt
ds
mov
out
cld
or
mov
mul
out
out
xlat
aaa
div
repz
hlt
addb
clc
fcmovnu
icebp
repnz
test
out
fnstcw
in
aam
call
repnz
in
test
out
mul
iret
ss
repz
sti
xlat
int
aam
flds
sti
sti
orb
clc
jmp
xor
enter
in
lock
mov
cmp
sbb
incb
cmc
ror
in
ljmp
cmp
jmp
ret
fyl2xp1
ljmp
int3
pop
aad
cmp
xor
call
shll
jecxz
incl
xchg
ljmp
iret
int3
fnstenv
enter
hlt
adc
loopne
enter
aam
mov
test
repz
ret
sti
ljmp
cmp
fisttpl
mov
mov
aaa
repnz
rcl
lock
cmp
icebp
sti
sbb
cmp
loop
jecxz
and
or
xchg
jecxz
in
cmp
fsincos
cli
cmc
cmp
cmp
call
orb
test
fmul
in
lret
out
shl
out
aas
filds
std
fneni(8087
jmp
jmp
ret
sti
aaa
aad
ds
stc
stc
out
int3
cmp
incl
fnstsw
xchg
shl
cmp
aam
shl
jmp
ss
out
fmul
incl
out
mov
lock
mov
mov
out
xor
cmp
lock
test
in
out
fcomi
mov
lds
out
fsub
rolb
in
aam
cld
ljmp
out
shr
neg
sti
enter
div
rol
jmp
clc
aam
rol
cmp
fcmovne
pop
in
lds
xor
jmp
fcmovu
ffreep
ret
ret
enter
fimull
iret
enter
cmp
stc
das
in
cmp
loopne
loop
loop
aad
lds
or
or
repnz
repnz
call
fld
idiv
out
aam
xchg
rorb
mov
mul
cmp
shr
lret
int
aad
in
in
ret
stc
xchg
int
jmp
lock
les
fdivs
int
and
hlt
fiadds
rol
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
push
xchg
dec
jbe
add
add
nop
into
test
lea
in
fdiv
repz
cmp
test
leave
sbb
in
fcmovne
jmp
call
int
cli
cli
out
ds
flds
cmp
mov
out
adcb
clc
rcl
aaa
int3
in
cld
in
into
icebp
jecxz
icebp
cli
rcr
out
incb
iret
mov
nop
jecxz
out
cmp
out
jmp
fadd
loop
clc
fdiv
ror
fldln2
mov
aam
idiv
in
mov
icebp
int
sti
jecxz
repnz
aad
cld
in
cld
into
iret
in
xchg
int
cmp
out
lret
leave
cmp
stc
out
loope
sar
xlat
ffreep
decb
shlb
enter
stc
shlb
iret
cli
fdivrp
cli
add
fcmovne
mov
nop
loop
out
rorb
cmc
into
leave
sti
sti
fiaddl
test
out
in
xlat
out
ret
repnz
xchg
xor
sarb
jmp
cmp
icebp
faddp
aad
fcmovb
fucomi
cmc
out
out
fisttpll
out
xor
aam
hlt
neg
int3
fcmovu
int3
xor
aas
repz
lret
orl
rcr
lret
rcr
div
xlat
test
out
xlat
shl
lret
loopne
mov
mov
cmc
in
sub
stc
cmp
out
cli
into
rcr
call
test
xchg
ffree
mov
int3
divl
lock
lret
ds
xlat
repz
cmp
shl
mov
fsub
in
or
loope
in
lret
leave
sti
fcmovnbe
fdiv
idivb
shr
sarb
testl
iret
icebp
int
loope
leave
ljmp
ret
fildl
jmp
ror
iret
jmp
lock
ljmp
cld
hlt
fstpt
lret
repnz
jecxz
sti
cmp
neg
loop
enter
in
in
xor
lock
shr
in
test
shl
mov
fldl
test
mov
int3
rcr
imul
hlt
loopne
repz
dec
cmpb
incl
in
out
xchg
clc
shlb
std
cld
shl
rcl
sbb
mov
out
std
rclb
int3
icebp
aad
call
in
sti
loope
sar
std
imul
in
iret
xchg
loop
xor
into
xor
fcmovnbe
rol
ror
aad
rcr
out
call
jecxz
cmp
xchg
and
fidivl
stc
int3
aam
int
addb
call
xchg
test
out
aam
clc
cmp
into
jmp
out
cld
out
cld
out
loop
nop
xchg
in
out
jecxz
clc
shl
out
fxch
hlt
loope
cmp
adc
roll
adcb
in
out
in
into
cli
shlb
rolb
ds
lret
rorl
jmp
out
out
cld
cld
hlt
cli
out
clc
ret
rcl
lret
loop
iret
orb
jecxz
sub
rcl
ffreep
fistpll
cmc
lock
mov
xchg
iret
lret
ret
int3
ljmp
fninit
lock
cli
cli
aaa
loope
int
out
repz
hlt
stc
loope
test
xchg
not
repz
lret
aaa
cmp
jmp
rcl
not
idiv
shr
int3
std
roll
xor
imul
cmc
in
cld
cmp
aad
sbb
cmp
fisttpll
mov
fsubrs
cmp
out
aaa
lock
fcmovnbe
aad
sar
in
cmc
in
addb
hlt
imul
lret
in
fcom
loope
jecxz
out
ffreep
lds
fadds
mov
iret
loope
rcl
enter
iret
fcmovbe
std
in
out
test
filds
call
ljmp
cmc
roll
clc
clc
out
incb
in
nop
loop
leave
out
in
cli
cmp
repnz
cmp
ds
orl
jmp
nop
aam
add
sar
out
fmul
fidivrs
ret
sti
fidivrl
incl
jmp
xchg
xor
xor
lock
iret
cli
aaa
fst
fstp
loop
rcr
cli
mov
xchg
int
call
aam
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
in
sarb
cmp
fdiv
shl
cmp
mov
in
out
addb
aam
jmp
in
ds
sarb
loope
rcl
call
loope
mov
sti
int3
repz
icebp
jmp
hlt
ljmp
lret
fcmovu
stc
ret
stc
mov
cli
mov
lock
xchg
rcr
jmp
cmp
idivb
xlat
loop
into
std
ds
out
int
sti
mov
xor
aad
repnz
icebp
lock
shl
fcmovne
std
shl
test
fsubr
out
decl
in
into
in
iret
fidivl
cmp
clc
cmp
xchg
sub
sti
xchg
mov
out
shr
jmp
aam
aam
in
ror
mov
loopne
out
fisttpll
xchg
clc
xor
leave
fnstcw
cld
cmp
cmp
rolb
loop
jmp
icebp
icebp
cli
rcl
xor
cmp
lret
aad
icebp
cmp
xchg
mov
mov
iret
cmc
in
jmp
fdivr
fucomp
cmp
aam
shr
shl
shl
in
in
leave
and
sub
aam
jmp
hlt
int3
aad
jmp
lock
test
mov
jmp
xchg
aam
out
jmp
rcr
cmp
test
ret
fildl
kmovw
loop
test
cmp
std
jmp
cmp
loope
repnz
mov
lret
ret
test
or
loopne
xor
icebp
call
lret
aam
in
rcr
adc
fcmovu
nop
icebp
jmp
xor
leave
hlt
aad
enter
and
imul
cli
xchg
and
iret
cli
int3
in
rclb
sub
ljmp
cmpb
neg
repnz
ljmp
hlt
repnz
test
xor
lock
in
std
faddl
cmp
testl
std
jmp
xor
lock
cmp
in
addb
repz
jmp
lret
cld
ffreep
xchg
out
shr
into
out
rcl
fsubr
repnz
cld
test
mov
xchg
lret
jmp
int
shll
lds
into
aad
jmp
icebp
cmp
cmp
ret
idiv
leave
int
or
neg
int3
in
aad
aam
ror
aad
cmc
stc
ret
orb
fucomip
incb
jmp
int
loopne
test
call
lock
lret
les
out
mov
jecxz
xor
std
cmp
cmp
cld
cmpl
cmp
in
icebp
out
test
enter
fucomi
xor
call
cli
repnz
out
aad
call
ljmp
clc
out
in
in
out
lock
div
loop
addl
or
loopne
xor
icebp
aam
shr
dec
ss
clc
cmp
aas
loop
sti
aam
and
out
xchg
ror
xchg
xor
xor
sti
fucomi
cmc
aam
sarl
out
aas
sti
rolb
orb
repnz
fadd
sti
fmul
lret
leave
dec
aam
cli
idiv
fstp
enter
fsubr
call
iret
aaa
rcr
fidivrl
repnz
addl
repnz
loop
in
xchg
into
in
fucomp
shl
repnz
in
cmp
xor
sti
fcomi
enter
mov
mov
in
ror
into
out
stc
aaa
cmp
fadd
testb
in
nop
orb
shl
sarl
lret
lret
adc
ret
fcmovnu
loop
std
stc
call
push
jecxz
in
cmc
xor
xor
ds
test
out
xlat
test
fucomi
sti
test
in
in
mov
test
in
into
out
addl
int3
loop
enter
in
mov
xor
cli
fcmovnb
cs
call
ret
ss
xchg
in
mov
sbb
cmp
adc
mov
fsubr
cmp
fadd
out
lret
fsubp
shl
cld
ret
repnz
rcr
cmp
in
icebp
cmp
int
aam
icebp
cli
aad
fnstsw
addl
ljmp
iret
in
shl
cs
in
cmc
shl
lock
cmp
out
in
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
test
mov
jle
aad
enter
int3
fsub
loopne
icebp
int
ret
int
out
div
out
aam
rcl
loope,pt
out
mov
ret
aad
out
sti
lret
call
aam
mul
clc
fldl2t
loope
inc
rol
icebp
xacquire
test
sub
and
xor
xor
repz
aas
jecxz
lock
rcl
enter
xchg
in
out
cs
int
imul
std
leave
rol
into
fcmovnb
icebp
out
imul
cmp
xabort
jmp
call
mov
clc
in
ret
jecxz
cld
fdivr
rcl
sarl
sti
loope
xlat
clc
mov
out
jmp
xchg
fcmovnu
xchg
xchg
test
fnstenv
idivb
hlt
call
decb
lret
imul
sub
aam
test
int
jmp
aam
test
fsubp
xlat
mov
lret
in
xchg
xchg
jmp
loopne
xor
cmc
in
cmp
divb
icebp
cmp
sti
rcl
shr
aam
lret
in
ljmp
out
xor
loope
hlt
out
divb
fdivrp
loop
rcl
out
mov
jmp
xchg
std
out
shl
loope
cmc
cmp
leave
fmulp
jmp
adc
loope
std
ljmp
pause
int3
repz
aaa
std
out
iret
sar
loop
stc
testl
vpsubd
repnz
in
ss
ret
jecxz
roll
mov
mov
int
aam
loopne
fprem1
in
aad
lock
enter
iret
in
rol
std
jmp
fcmove
iret
in
xchg
xchg
xor
cli
ret
ljmp
repz
fadd
not
repz
leave
loopne
ret
and
xchg
xor
int3
call
ds
fcmovu
shl
cli
enter
std
fsubr
fucom
jecxz
rcl
into
loop
call
lret
leave
jmp
shl
ret
sar
cli
add
loope
out
fldl
xorl
int3
icebp
xor
lret
ljmp
hlt
in
jecxz
test
out
xchg
xchg
out
xlat
aam
cli
jmp
ljmp
fsubr
imul
mov
ljmp
aad
loop
out
xor
clc
cmc
cmp
cld
xlat
neg
aad
loop
test
jecxz
lock
rcl
xlat
leave
fdiv
div
call
cld
out
test
loopne
cli
cld
fsub
shl
and
shl
shr
neg
sar
cmp
sar
rcr
shl
xchg
hlt
cli
hlt
xchg
fsubrp
xchg
enter
ljmp
adc
lock
std
int3
int3
fmulp
xchg
int
xchg
in
ljmp
repnz
repnz
jecxz
int
loope
mov
sti
jmp
leave
in
ljmp
out
fcomp
fcmovne
ss
rcl
repnz
repz
jmp
sti
lock
das
xor
sti
std
out
in
cmp
repnz
out
lret
lock
in
jmp
xchg
shl
out
cmp
loopne
icebp
repz
sbb
aad
loopne
fmull
int3
loop
xlat
jmp
icebp
cld
cld
ffree
sbb
mov
jmp
in
cld
rorl
fdivs
ror
out
incl
rcr
in
xlat
lret
into
int
sar
in
adc
xlat
aam
fnsave
ds
rol
faddp
cli
repnz
orl
jmp
into
iret
out
int
sarb
repnz
hlt
xlat
xlat
call
in
jmp
rorb
xor
icebp
xor
aad
hlt
jmp
cmp
ret
xlat
ljmp
jmp
out
sti
iret
lret
out
repnz
fneni(8087
shl
test
mov
xchg
idiv
repz
ftst
enter
sar
xor
in
loope
cmp
in
fmul
jecxz
cld
iret
shl
test
hlt
xor
leave
int3
xor
xor
fildl
call
lock
nop
lock
ret
out
out
xlat
in
std
leave
cmp
jmp
loopne
aas
test
in
std
jecxz
stc
loopne
jmp
out
cmp
cmp
ds
loopne
cmpl
fucom
out
jmp
out
shl
int
repnz
into
cld
out
fnstcw
aam
ror
fsub
jecxz
loop
clc
test
int
sti
loope
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
mov
jge
add
add
ljmp
xlat
iret
cmp
repnz
rolb
fiaddl
mov
out
shlb
lock
out
leave
in
stc
out
cli
rcl
int3
cmp
sti
jecxz
jmp
lds
xchg
loop
jmp
aad
stc
fmulp
out
fdivr
rcr
cmp
clc
icebp
std
out
xchg
ljmp
jecxz
xor
ret
xor
ljmp
xor
in
loope
addl
test
enter
jmp
out
lock
xchg
test
cmc
out
xchg
lret
sub
xor
repnz
aaa
hlt
cmp
aas
hlt
rol
xlat
mov
aam
xlat
lret
jecxz
jecxz
decb
lret
cmp
out
aas
cli
aam
out
xchg
fstp
in
in
mov
ljmp
xlat
aad
leave
fcmovbe
out
fst
xor
fadd
loop
fstp
stc
std
in
addl
xchg
ret
aad
lock
repz
ret
imul
fucom
loop
fnstsw
fiaddl
xchg
jecxz
in
cmc
aaa
leave
aad
out
cli
stc
fcmovbe
stc
stc
cmp
clc
not
ret
rolb
addb
rcl
out
out
enter
repz
stc
clc
les
lret
cli
in
ljmp
ljmp
cmp
in
cmpb
in
fcom
roll
lret
ljmp
jecxz
ror
out
int
call
fmul
sarb
in
fcomip
lock
mov
mov
in
shll
in
aas
xlat
int3
ds
out
call
loope
add
leave
xchg
std
call
loope
cmp
aam
out
cmp
lds
incl
leave
mov
roll
cmp
call
add
incb
mov
test
lret
xchg
out
in
in
jecxz
lret
fdivr
cmp
cmp
add
xchg
jmp
rolb
call
ss
int
sar
rcl
out
hlt
ror
and
jmp
mov
in
shl
cmp
vpsrlq
aam
std
in
loopne
ljmp
out
rorl
divb
out
repnz
lret
sbb
roll
in
cld
int3
fcmovnbe
out
fmulp
xor
fcmovbe
xlat
shl
hlt
lret
in
rcr
movb
in
loope
xchg
xchg
out
in
aaa
aad
hlt
hlt
into
jecxz
xlat
int
test
cmc
lret
cli
icebp
mov
out
neg
xor
fdiv
lock
ds
sarb
stc
dec
fsubr
in
in
mov
out
cmp
out
cmp
rcr
clc
std
out
jecxz
test
orl
ror
filds
xor
cli
cli
xor
lock
cmp
std
repz
loope
into
into
lea
leave
xor
enter
adc
clc
cmp
xchg
xchg
mov
xchg
fadd
fneni(8087
out
movl
in
into
ds
fdiv
shl
xlat
rcl
and
push
fucomp
test
shl
jmp
xor
div
cmp
repz
xchg
inc
loopne
fcmovu
fmulp
out
xchg
imul
out
call
cmp
aam
int3
loopne
test
and
lret
lock
lret
in
rol
lret
repnz
sar
leave
call
cmp
sti
cmp
std
ret
ljmp
lock
icebp
xor
aad
fcmovb
shl
incb
lret
enter
nop
xchg
test
shr
in
xor
aas
in
cmp
loope
flds
xchg
out
xchg
loop
ffreep
enter
repnz
jmp
lret
sti
add
jecxz
fucom
leave
loop
in
xor
ret
lret
enter
test
out
jmp
rcr
call
xlat
cmc
aaa
into
fdiv
ljmp
out
loop
ljmp
aam
xchg
leave
in
in
iret
int
out
fucomp
repz
ret
in
mov
xchg
fdivp
xchg
enter
cli
into
xor
lret
cmp
fsubp
shl
clc
loopne
mov
shr
out
repnz
cmc
call
ss
out
orl
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
roll
cld
xlat
lret
in
aam
jmp
cmp
in
cli
loope
out
ret
shl
std
loop
fdivrp
mov
jmp
aad
shll
int
ss
stc
cmp
rcl
loopne
stc
clc
xor
jecxz
mov
mov
decl
ror
jmp
hlt
xor
fcmovnu
roll
fldl
out
icebp
repnz
jmp
cmp
hlt
out
fdivr
icebp
out
ret
ffreep
stc
fcmovne
clc
jmp
jecxz
shl
repnz
stc
cmp
fcmove
lret
cmp
std
into
iret
fildl
stc
mov
fiadds
imul
fadd
into
cmp
std
roll
adc
lret
ljmp
mov
imul
in
shll
in
icebp
xor
std
icebp
loope
incl
rorb
ss
repnz
std
lock
jecxz
neg
cli
in
in
lret
fsub
rolb
aaa
fdiv
fdivl
loope
ret
fpatan
fcmovbe
enter
fxch
xchg
out
cld
jmp
sub
jecxz
into
repz
sti
cmp
iret
push
roll
out
in
shl
in
xor
xlat
rcr
std
cmc
cmp
iret
fidivrl
repz
inc
std
std
xchg
cld
call
icebp
in
lock
icebp
sti
cmc
xor
xor
aas
mul
shl
test
jmp
cli
loop
cld
out
int
xor
xlat
iret
jecxz
cmp
jmp
rolb
hlt
fsubrp
out
loopne
mov
out
jmp
stc
in
fcmovnu
xor
faddl
imul
in
mov
repnz
out
lea
in
fst
aad
ljmp
rcl
xchg
mov
hlt
std
xchg
imull
mov
dec
fdiv
out
cli
rol
ret
xlat
or
xchg
fistl
cs
int3
out
cmp
out
loopne
in
out
mov
fimuls
cmp
out
cmp
cmp
jecxz
mov
xchg
xchg
out
test
divb
aam
fstpt
fadd
testb
int
iret
loop
mov
mov
rol
cmp
ds
cmp
jecxz
loopne
fadd
cmp
int3
repnz
out
div
hlt
shl
cmc
ror
iret
loopne
loope
call
fadds
into
rcl
xor
icebp
idivb
repz
divb
sti
stc
cld
cli
loope
ret
cmp
jmp
orl
shr
in
jmp
fcmove
icebp
cmc
hlt
cmp
lea
iret
iret
fisttpll
ror
enter
rcr
cmp
shl
stc
fldlg2
loopne
jmp
mov
xchg
call
out
call
sar
iret
repnz
shl
mov
mov
loopne
ret
xor
icebp
hlt
cmp
test
fcomip
repnz
loopne
mov
into
ror
lea
ret
jmp
rcl
iret
fdivrp
fidivrs
shr
cmc
jmp
fcmovne
sti
in
test
call
out
bnd
xor
xlat
into
repnz
inc
jecxz
loop
aad
out
lret
fucomi
xchg
cld
xchg
xor
out
cld
jmp
in
clc
ret
sar
xchg
imul
fxch
jmp
leave
xchg
out
out
repnz
clc
xor
fnstsw
rcr
xlat
fucomip
jmp
in
shr
call
xor
aas
sub
cmp
fiadds
loop
out
aam
mov
loop
xor
int3
ret
ds
xlat
fpatan
test
mov
leave
mov
loop
out
xchg
cmc
out
fcmovu
neg
aad
call
cmp
std
mov
fdivp
fcmovne
orb
ret
loope,pn
xor
ljmp
test
rol
cmp
test
xchg
mul
not
xor
shr
incb
aam
aam
inc
loopne
out
call
hlt
repz
out
in
rcl
rolb
mov
aam
leave
in
mov
loope
xchg
fisttps
clc
into
cli
cmp
out
jmp
in
fildl
cmp
add
push
rorb
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
ret
cmp
scas
add
add
jecxz
ror
int
xchg
aad
ljmp
call
out
sbb
ret
aad
fldl
in
in
mov
loope
aad
aam
xor
int3
fnclex
addb
stc
std
out
in
xchg
xchg
ljmp
iret
aad
aam
cmp
test
mov
in
add
test
lock
fucom
shl
aad
repnz
into
xlat
int3
cmp
xchg
cmc
loopne
out
nop
iret
ret
addl
into
aaa
cli
xor
rolb
fcomp
lock
orl
aad
cmp
in
lock
fdiv
vpaddq
xchg
mov
repnz
in
ror
in
in
shl
cmp
jmp
sbb
fucomi
out
leave
xchg
shr
shr
in
into
into
jmp
dec
fildl
sub
int
sar
lret
out
cmc
jmp
cmp
call
shr
flds
std
lret
shl
orb
xor
xor
cmp
repnz
icebp
fiadds
not
loope
mov
test
in
ror
leave
in
sti
aas
icebp
shl
repz
ret
stc
loope
loopne
xchg
in
fadd
ss
jmp
leave
fdivr
fdivrs
mov
rcr
mov
xchg
repnz
lret
fnstenv
ffree
shl
aad
or
fninit
xchg
xlat
in
in
xchg
mov
xor
int3
int
out
into
cld
fcmovb
ror
cli
in
std
div
int
xchg
cld
lret
and
lock
enter
sarb
loope
cmp
cld
addl
loope
fucom
into
into
xchg
int
xor
call
cmp
in
lock
cli
hlt
lock
ds
loop
in
sti
in
loopne
ret
into
jmp
cmp
notrack
repnz
test
test
loop
lret
decl
xor
lock
fcmovnu
in
xor
cli
sub
test
loopne
cmc
fsubp
enter
sub
in
xor
ret
enter
xor
repnz
cld
dec
std
cli
std
jmp
mov
jmp
out
xor
icebp
ljmp
fprem
fcomp
fdiv
cmp
in
shl
iret
aas
xor
lret
idiv
int
repnz
icebp
test
in
loop
mov
xchg
in
cs
into
div
rcr
aaa
ror
stc
cmc
ffreep
xlat
jmp
in
xchg
xchg
loope
mov
out
ss
ljmp
cmpb
fmul
lret
mov
in
xchg
enter
out
jmp
repz
cmc
lock
xchg
test
jecxz
fdiv
in
jmp
repz
clc
fmul
iret
jmp
cmp
fidivrs
out
lock
fstp
mov
jmp
xchg
or
in
shr
aam
cli
sar
lret
fistpll
hlt
jecxz
idiv
fcompp
cmp
test
jmp
mov
in
sarb
cmp
fsubp
cmp
hlt
rol
sub
stc
in
lret
xchg
jmp
loop
shlb
xor
std
xlat
fdivrp
dec
sti
loope
loop
mov
mov
out
xchg
shlb
clc
in
fcmovne
cmp
repz
and
test
ljmp
call
les
lds
cmp
out
std
lret
faddp
cmp
leave
dec
test
mov
loope
in
hlt
fcmovne
cmp
rolb
cmc
out
sub
test
hlt
repz
aaa
out
out
adc
aad
jmp
repz
movl
aad
cmp
in
repnz
cmc
aad
cmp
ret
fld
orb
xchg
lret
int3
lret
xor
fndisi(8087
shl
clc
loop
mov
out
std
stc
jecxz
xchg
cmc
cmc
in
jmp
jmp
xor
cmp
repz
lret
into
in
fnstcw
fcmove
ror
aad
cmp
stc
mul
aad
test
ljmp
xchg
ljmp
cmp
aaa
ss
into
fucom
xchg
rcl
mov
hlt
int
lret
fxch
mov
repnz
jecxz
xlat
enter
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
add
pop
add
add
jg
jle
cld
in
cli
fucomip
sarl
xchg
std
xlat
leave
fsts
xchg
lret
shr
les
lock
cli
xlat
jmp
xlat
sar
test
repnz
out
movb
repnz
repz
or
shl
in
out
std
incl
in
fmull
fsub
jecxz
clc
jmp
fistpll
cmc
std
cld
loop
jecxz
enter
incb
loope
out
repz
repnz
cmp
loope
mul
cli
icebp
jmp
ljmp
lret
cmc
fdivrp
int3
cmp
neg
fdivr
inc
out
test
enter
into
xchg
xlat
aam
ret
lret
test
cmp
loopne
loopne
clc
aam
mul
ffree
xchg
addl
cmc
into
int
out
and
sub
xchg
int3
loopne
ljmp
dec
jmp
lret
xor
xor
aam
cmc
loop
loopne
loopne
addl
shl
repz
lret
ds
cmc
cli
cmp
fmuls
sub
loope
shl
aam
sti
fcom
ljmp
into
mov
stc
rol
cli
jmp
in
in
sub
int3
aam
fidivl
into
lock
loope
aas
rol
in
mov
xchg
int3
fcmovnu
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
